cmp
jo
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
fwait
mov
cmpb
xchg
rcrb
clc
jb
sub
movsl
xchg
fistps
loopne
mov
sub
cmp
xchg
les
lods
cmp
and
dec
inc
mov
adc
jae
push
bndstx
movsb
lea
add
decb
les
fcomp
mov
cmpsb
in
jmp
xchg
xor
push
gs
cmp
test
data16
and
cwtl
lret
jo
aam
lahf
fisubrs
jle
jbe
jo
inc
out
dec
mov
movsb
aam
test
mov
ret
in
jmp
lods
test
adc
sub
xchg
dec
scas
fsubrl
push
add
jb
jo
adc
cmp
lds
dec
rcr
mov
fistps
enter
adc
jmp
dec
xchg
jb
mov
or
pusha
shlb
sub
fs
sarl
push
push
addr16
movsl
xor
pop
xchg
pop
jae
adc
jl
push
and
xor
out
cmovno
or
lahf
pop
sahf
pop
fdivs
add
pop
jb
sbb
sbb
loope
aam
sbb
dec
pop
addb
add
aam
fwait
aas
jmp
popa
popf
pop
jo
xor
mov
jo
repnz
nop
jb
pop
leave
pop
sbb
aaa
icebp
mov
insb
int
shl
test
inc
out
movsb
mov
pop
shrl
mov
std
rcrl
inc
add
pop
shll
push
mov
xchg
popa
add
shlb
lcall
xchg
lahf
push
mov
jnp
xor
sbb
jle
sub
mov
sbb
sti
cmp
cmp
or
or
sbbb
in
fstpl
add
or
xchg
mov
cmp
fistpll
mov
sahf
and
stos
sbb
fdivr
mov
fcmovnu
lea
aas
pop
jl
std
mov
inc
lcall
cmc
test
and
xor
push
popf
negl
dec
pop
ljmp
in
pop
jo
js
pop
dec
xchg
icebp
enter
lret
popa
mov
subb
ret
fnstenv
mov
mov
push
xchg
fldcw
mov
test
std
fxch
xor
xor
jbe
arpl
push
jl
mov
xchg
push
adc
lods
cwtl
add
imul
adc
sub
fs
imul
lods
xchg
out
jnp
xchg
mov
inc
cmp
add
in
jge
xchg
mov
sub
sarb
je
loop
fmuls
cwtl
xor
cmp
jle
repz
fs
int3
test
movsl
fs
adcl
lahf
xchg
ret
popa
fxch
add
mov
pop
mov
sbb
and
mov
loopne
in
xchg
mov
jae
loope
mov
add
cld
dec
add
fwait
pop
cmc
call
js
lret
in
inc
cmc
lcall
push
add
dec
shlb
xorb
data16
lret
jns
lds
nop
lds
mov
dec
maskmovq
notl
and
mov
test
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
shrl
popf
jo
jg
sti
sti
and
or
push
std
mov
pop
mov
adc
enter
mov
add
insl
sub
ret
fwait
pop
loop
cld
out
mov
movsl
sti
and
int
pop
mov
jecxz
push
xchg
mov
jbe
cltd
push
repnz
pop
mov
or
sub
jg
adc
andb
sub
adc
mov
cmp
stos
mov
mov
test
sti
mov
shrl
dec
les
sbb
shrb
add
leave
mov
push
sub
mov
jbe
sbbb
cmp
sub
sbb
scas
jg
leave
icebp
mov
jns
xlat
cld
repnz
sbb
js
or
inc
add
sbb
cwtl
sbb
cmp
push
mov
jb
clc
inc
insl
xchg
popf
mov
mov
cltd
call
mov
jge
sub
push
addb
in
add
xchg
ja
sbb
or
jecxz
mov
lods
mull
call
pop
mov
repz
cmp
cld
repnz
rcrb
mov
adc
lret
inc
sbb
push
and
outsl
sbb
iret
cmc
xor
sar
test
insb
stos
push
sub
and
jae
lret
and
dec
sbb
in
push
cmp
sbb
cmp
or
stos
arpl
rclb
out
mov
pop
jno
lds
sub
popf
ficoms
jnp
inc
mov
fs
push
xchg
adc
mov
mov
lock
dec
mov
fnstenv
or
xor
sub
sbb
cmpsb
gs
inc
jbe
cmp
bound
cmpb
je
inc
into
es
pop
pop
mov
shr
and
jle
mov
das
mov
cmp
xor
popa
push
mov
aam
sti
stos
mov
jnp
mov
stc
jnp
mov
adc
ss
xchg
cli
gs
and
insb
fsubs
xor
shll
ja
ja
repz
cmp
mov
add
lahf
popf
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
push
cmp
sbb
cmp
or
stos
arpl
movsb
rorl
shll
pop
jno
push
fwait
jbe
lods
arpl
pusha
mov
cld
loop
mov
jmp
mov
andl
sub
inc
jmp
xchg
fwait
cmp
cmp
sub
movsl
fidivl
test
sub
test
cmpsb
jnp
clc
jno
jecxz
inc
push
orb
in
add
xchg
and
fnstenv
jmp
dec
adc
sbb
jae
inc
imul
je
popf
mov
cmp
jp
add
add
mov
sbb
mov
cltd
inc
jecxz
xor
mov
xor
ror
jmp
dec
cld
dec
and
stc
sub
push
lock
sbb
cli
mov
cld
mov
imul
pusha
inc
and
pop
in
sbb
and
sub
test
fisubrs
rorl
xchg
out
leave
adc
mov
jb
shr
rcrl
into
jmp
popf
test
jns
js
lods
scas
fbstp
jecxz
fst
mov
subl
adc
push
dec
mov
sbb
pop
xor
adc
xor
movsb
inc
add
xchg
cltd
out
xchg
push
xor
mov
shlb
inc
sub
mov
je
cmp
dec
xor
sub
js
test
xor
or
les
ds
arpl
lds
cmp
mov
jbe
lock
xor
mov
sbb
add
leave
lds
dec
mov
ret
sbb
lds
inc
in
xlat
dec
sbb
xchg
sub
xchg
popf
inc
xchg
jno
cld
lds
arpl
jo
inc
dec
xchg
push
fsts
pop
dec
push
cld
mov
pop
mov
jecxz
cmp
mov
aad
mov
add
inc
loope
fnstsw
lret
iret
pop
jo
daa
fists
fisttpl
mov
dec
xchg
rclb
addb
adc
and
and
push
mov
inc
insl
xchg
les
gs
insl
cmovae
out
hlt
std
mov
sti
and
inc
fistpll
mov
adc
enter
mov
add
insl
sub
xor
mov
hlt
inc
fistl
into
dec
adcl
lret
fwait
lahf
stos
and
push
mov
mov
cmp
jo
or
dec
add
adc
insl
movsl
ret
insb
repz
in
shll
push
xchg
loop
clc
jp
mov
rorb
test
mov
mov
lods
jmp
imul
jl
leave
fcmovbe
and
dec
lcall
or
add
inc
lcall
pusha
sti
add
add
sub
mov
js
mov
xor
andl
xchg
add
or
mov
cmpsl
mov
xor
rol
xor
decb
jmp
jb
sbb
ret
sti
xor
fsubl
mov
popa
mov
cmp
xor
push
lret
mov
fsubr
push
and
rcrb
pop
pop
mov
cmpsb
inc
aaa
in
mov
call
fucomip
hlt
cmp
fists
iret
int3
mov
repnz
mov
sbb
sub
leave
inc
sbb
leave
clc
mov
fsubrl
loop
clc
fwait
add
lock
sbb
mov
mov
jo
jge
sbb
sar
jae
add
sbb
test
mov
sbb
lcall
adc
loopne
cmp
or
or
dec
push
fwait
mov
scas
jg
jmp
mov
add
or
inc
mov
and
inc
xchg
dec
and
sbb
ss
int3
ds
jne
adc
rcl
cmp
cmpsb
inc
test
jb
inc
mov
cmp
cmp
pop
or
cltd
sahf
ret
outsl
push
adc
or
stc
repnz
pop
loopne
call
and
out
mov
jae
mov
jecxz
push
xchg
xor
or
jl
hlt
mov
pop
mov
or
sub
jg
repnz
fs
fcomps
push
insb
fcmovne
sbb
dec
lret
sbb
mov
lcall
mov
fbstp
or
cwtl
cmc
cmpsl
les
daa
or
lods
sahf
fisubrl
pushf
scas
testl
push
sbbb
sbb
add
leave
shll
xlat
and
cmp
add
dec
jecxz
adc
inc
mov
fdivs
sub
mov
pop
and
and
add
movsb
jp
mov
in
daa
mov
fstl
sahf
adc
rcl
xor
cmpsb
inc
test
jp
inc
mov
sbb
sub
or
je
xchg
test
loopne
add
xchg
cmp
or
pop
jg
call
push
mov
pop
push
dec
push
dec
sti
mov
imul
lret
mov
sbb
dec
add
popf
or
mov
fwait
mov
cwtl
lret
inc
sub
rorl
dec
xlat
or
mov
test
leave
test
insb
cli
jmp
mov
mov
popf
ljmp
pop
sbb
stos
sahf
mov
or
inc
xchg
push
aaa
jmp
outsl
cmp
pop
fcoml
cmp
lods
jle
test
punpcklwd
js
xchg
cmpsl
pushf
inc
fwait
leave
in
and
add
or
inc
out
mov
cmp
cmpsb
inc
cwtl
inc
stos
sbb
fisubl
mov
mov
fwait
in
cmovae
fisubs
xor
push
and
addl
adc
cmp
xchg
sub
popf
out
mov
mov
lcall
xchg
shlb
loopne
mov
out
into
jl
sbb
xorb
dec
mov
add
movl
xor
jle
orl
icebp
sbb
or
mov
push
lret
fdivrs
popf
int3
stc
mov
cld
mov
leave
pop
mov
arpl
test
movsl
pop
or
stos
sahf
movsl
sbb
test
push
pop
outsb
shrb
mov
xor
add
jnp
cltd
sub
jle
lahf
fisttps
mov
repnz
and
pop
es
add
shlb
repnz
imul
mov
mov
clc
and
inc
mov
aad
pop
mov
pop
mov
gs
fcmovu
sti
sti
and
dec
fildl
mov
adc
enter
mov
add
insl
sub
ret
dec
or
les
out
mov
arpl
lds
popa
in
imul
sbb
ret
mov
adc
lret
cmp
cltd
nop
loop
subb
leave
sbb
stos
out
lds
pop
lret
xchg
pop
push
scas
mov
sti
stos
pusha
std
fbstp
aad
imul
rcrl
test
roll
in
dec
add
mov
sub
fcmovne
xchg
fwait
adc
sub
adc
xchg
and
loope
inc
mov
insb
jnp
jg
scas
loope
pusha
out
sti
sub
push
adc
inc
mov
fdivs
sub
add
test
dec
jmp
add
inc
stos
add
movsb
and
push
mov
out
inc
and
es
repz
fsubs
xor
push
and
andl
sub
sub
lock
push
dec
mov
cmp
cmpl
loopne
call
fldt
mov
repz
cmp
repnz
mov
sbb
sub
push
pop
adc
ret
cmp
test
cwtl
pushf
dec
and
sbb
cmc
xor
sbb
movsb
push
cld
mov
fidivl
mov
jae
lds
cmp
and
jae
les
xchg
fisttpl
sahf
xchg
out
sbb
add
xor
pop
cmpsl
pop
fs
lods
loopne
cmpsl
dec
push
fucomi
cmc
mov
enter
inc
shlb
or
sbb
or
lret
clc
add
test
or
mov
mov
pop
inc
sbb
cmpsb
gs
inc
push
adc
ret
adc
sub
mov
sbb
sbb
repnz
sub
pop
xchg
xchg
fwait
add
int
gs
das
in
jmp
loop
pop
push
mov
shr
xor
aam
sti
filds
jno
mov
hlt
movsl
ret
aaa
lods
inc
mov
mov
enter
mov
cwtl
or
push
imul
add
aaa
dec
sbb
mov
mov
scas
cld
arpl
jo
inc
stos
data16
scas
ja
inc
xchg
jl
rorl
lret
pusha
pop
jae
lods
pusha
int3
add
add
push
mov
mov
mov
js
mov
jecxz
fdiv
and
and
rcrb
add
shlb
icebp
mov
pop
and
jnp
inc
push
mov
xchg
sbb
inc
rcll
dec
lcall
and
psubw
call
lods
add
lcall
or
sub
mov
pop
push
sub
ret
sbb
out
add
mov
shlb
shll
lods
adcb
sbb
in
jnp
mov
adc
ss
cmp
decb
sbbb
mov
inc
stos
adcb
mov
inc
add
jns
inc
jecxz
inc
mov
test
pop
fisttpll
test
or
push
mov
orl
movsb
test
mov
jbe
jb
lods
jecxz
repz
mov
xor
push
pushf
rorb
cmp
js
xchg
cmpsl
cwtl
out
leave
in
loope
inc
or
or
pop
jo
add
jge
jb
pop
arpl
xor
clc
and
ret
dec
mov
dec
pushf
push
gs
fwait
mov
mov
fldenv
pop
loopne
adc
sbb
jecxz
enter
or
fidivl
popf
cmpb
mov
inc
sub
xor
mov
sub
mov
repnz
mov
jae
mov
xor
les
enter
lcall
mov
sbb
pop
xor
mov
movsb
fisubl
and
jge
mov
mov
mov
mov
xchg
rcr
adc
insb
inc
sub
xchg
test
cmp
xchg
add
pop
shrb
in
mov
pop
jno
push
lcall
lock
mov
cld
loop
movl
js
das
mov
adc
rorb
add
mov
sbb
pop
xor
adc
jp
mov
shlb
movsb
inc
add
ljmp
fisubs
xor
push
and
adc
andl
test
mov
sbbl
stos
sbb
xor
mov
arpl
xchg
shl
ret
loopne
mov
push
cmc
lret
in
fucom
aaa
shlb
jns
mov
add
mov
inc
aam
add
lods
movsb
sbbb
inc
sbb
push
jmp
lds
push
cld
mov
mov
dec
cmp
das
xchg
stc
cli
in
test
nop
sbb
popf
xor
push
cltd
adc
stos
sub
dec
adc
xchg
fsts
cld
ret
cmp
dec
push
mov
jg
sbb
push
fmuls
cwtl
add
mov
or
push
mov
adc
mov
add
cmc
fisubs
ret
gs
fnstcw
mov
mov
cwtl
push
adcb
mov
daa
sub
mov
push
dec
mov
dec
ret
addb
pop
loopne
call
fisttps
push
dec
cltd
loopne
mov
imul
inc
sbb
test
lcall
push
out
push
hlt
mov
nop
xlat
dec
sub
ret
sbb
mov
scas
movl
into
je
mov
sub
adc
mov
inc
pop
lret
stos
xchg
fimull
cli
outsl
sub
enter
sti
jmp
dec
mov
jnp
lret
pushf
mov
js
jge
xchg
fdiv
sti
and
pop
mov
dec
adc
cmovp
mov
sbb
pop
xor
imul
aas
xchg
mov
push
pop
scas
enter
ljmp
cltd
mov
mov
mov
cwtl
push
add
dec
mov
push
adc
sub
js
test
or
pop
jg
mov
lea
pop
and
mov
dec
push
dec
fchs
sti
mov
imul
add
fidivl
add
mov
divb
adc
mov
nop
push
lcall
out
stc
stos
inc
mov
jne
fucom
cli
test
cld
mov
aaa
ljmp
push
jl
and
or
loop
daa
or
lods
nop
movsb
fisubrl
pushf
mov
jl
rorl
dec
and
vpmacsswd
xor
imul
sti
fstps
ret
subl
fdivs
sub
add
pop
and
and
cwtl
inc
stos
add
movsb
roll
inc
mov
out
inc
and
es
repz
fsubl
xor
push
and
addl
mov
and
sub
mov
push
inc
mov
ret
out
mov
push
jne
pop
loopne
call
out
loopne
pop
daa
dec
xchg
jecxz
repz
mov
sbb
es
inc
cmp
add
rcrl
lds
push
jbe
out
movsb
ret
sbb
fsubrl
inc
in
xlat
xor
test
xchg
mov
push
lret
rcr
in
inc
mov
or
cmp
adc
mov
sbb
sub
rcl
cwtl
pushf
xchg
sbb
clc
add
sub
mov
enter
xor
push
loope
inc
or
add
mov
add
jge
jb
addr16
adc
cwtl
add
sbb
jmp
jb
sbb
sti
xor
fsubl
mov
je
inc
es
pop
pop
mov
shr
and
jle
mov
das
mov
cmp
mov
popa
push
mov
pop
in
out
mov
clc
sti
pop
es
rcr
repz
clc
pushf
ret
mov
mov
cs
iret
xor
adc
test
mov
sub
jmp
mov
stc
stos
inc
cmp
xchg
cwtl
nop
sbb
cmp
sub
xchg
adc
fcmovb
mov
or
mov
pop
jno
push
bound
int3
adc
xor
fabs
cmp
dec
js
mov
adc
rorb
pop
dec
mov
sbb
pop
xor
iret
xor
push
fisubl
jecxz
mov
jmp
std
mov
sti
and
cmc
cli
mov
mov
adc
enter
mov
add
insl
sub
ret
pop
add
ret
mov
pop
test
cmp
mov
sub
or
mov
aaa
in
and
sbb
outsl
ret
mov
adc
lret
cmp
cltd
nop
loop
mov
pushf
dec
and
ror
sbb
in
xlat
mov
inc
and
inc
popa
rcr
dec
pop
lret
pop
imul
inc
xchg
adc
gs
sub
mov
inc
imul
cmp
or
mov
fmull
jnp
dec
push
fwait
lods
and
xor
icebp
xor
addb
add
or
inc
mov
dec
aam
inc
fbstp
adc
mov
fs
jae
loopne
xor
push
cmp
jne
jecxz
movsb
inc
sub
sbb
subl
enter
mov
add
insl
sub
ret
into
or
les
xchg
mov
jnp
adc
or
mov
cltd
xor
rcrl
shrb
mov
cli
dec
and
iret
inc
sbb
jbe
mov
inc
add
testb
lret
mov
movsl
inc
jno
jge
pushf
arpl
jo
inc
mov
xchg
in
inc
pop
xchg
adc
and
cmp
les
fistl
in
push
xor
ficoms
fwait
lods
and
scas
jg
stc
icebp
xor
push
mov
add
inc
mov
dec
aam
inc
fbstp
adc
mov
cli
jae
loopne
xor
ret
mov
jmp
lds
sti
int3
pop
and
mov
dec
dec
mov
inc
pusha
and
aad
imul
aas
lock
add
decb
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
jbe
lock
pop
mov
or
sub
jg
repnz
aas
nop
icebp
imulb
js
das
mov
inc
mov
stc
sbb
push
cmc
fstpt
stos
dec
dec
ljmp
fucom
jmp
and
xchg
shl
xchg
inc
cmp
adc
cmp
cmp
stos
jecxz
loopne
fistpl
loope
push
xor
leave
in
loopew
mov
jnp
inc
mov
cmp
pop
mov
or
lret
sbb
mov
test
push
fisubs
jmp
ret
push
gs
fwait
mov
mov
fldenv
pop
push
adc
sbb
jecxz
enter
or
fidivl
movsb
out
and
push
xchg
mov
iret
xorb
into
popf
sub
repnz
mov
jns
into
dec
fisttps
mov
jp
add
cmp
out
and
and
movsl
stc
inc
fs
mov
negl
sbb
test
push
in
dec
push
dec
shrl
xchg
or
or
or
cmp
adc
lcall
adc
loopne
cmp
jns
inc
rorl
pop
jns
cltd
fmull
jnp
dec
push
mov
mov
sbb
loop
in
nop
xchg
sbb
stos
into
arpl
add
mov
push
mov
or
movsl
cli
jg
inc
insl
xchg
adc
in
and
xor
test
cmp
movsb
jne
cwtl
push
push
mov
mov
test
sub
adc
jp
mov
pop
push
mov
ss
test
in
lret
fwait
lahf
stos
and
mov
mov
inc
sbb
in
cmp
rcl
sbbl
pop
stos
push
lods
xchg
sub
adc
push
sub
sahf
test
pop
and
aad
push
dec
push
dec
fsubrs
std
in
jmp
hlt
push
jl
sbb
or
dec
imul
arpl
xchg
mov
push
jbe
sub
jno
push
imul
shlb
lret
xor
jnp
jg
scas
loope
pusha
ljmp
push
and
xor
or
mov
sbb
pop
xor
adc
and
mov
mov
mov
xchg
in
cmovae
sbb
mov
mov
cwtl
push
cmpb
pushf
test
iret
out
mov
cmpl
push
jb
jo
mov
lods
negl
into
adc
push
inc
xchg
mov
jmp
pop
divl
pusha
mov
inc
cmp
add
rcrl
sub
mov
and
repnz
stos
mov
jnp
inc
in
xlat
dec
sbb
mov
add
test
pop
dec
mov
fs
stos
inc
in
lret
lds
sbb
popa
xor
push
out
xchg
fistpll
sub
lret
xor
or
aaa
add
push
nop
and
inc
xchg
cli
stc
and
cld
xchg
push
mov
sbb
nop
lock
push
mov
cltd
xor
scas
mov
dec
push
xor
mov
xchg
int3
pop
fisubs
cmp
fnsave
in
sub
je
or
and
xor
dec
dec
mov
mov
lahf
cmp
sub
xor
mov
xorb
into
popf
sub
sbbl
lock
or
fisttps
mov
jp
add
cmp
cmp
test
sub
push
pop
int
sbb
iret
mov
les
aam
mov
cmp
push
in
xor
jmp
stos
popf
lret
mov
add
test
inc
scas
ja
add
sub
sub
mov
add
inc
mov
fstl
std
inc
xor
mov
in
mov
cli
jnp
inc
mov
lcall
mov
mov
pop
xor
dec
mov
fnstenv
or
orl
jp
mov
cmovae
cli
popf
test
push
ret
lret
xor
loopne
fstps
mov
enter
mov
xchg
dec
inc
mov
loop
and
ljmp
movsl
pop
push
mov
shr
xor
pop
in
cmp
mov
clc
sti
pop
es
rcr
repz
mov
cwtl
sbb
add
mov
out
push
hlt
mov
nop
xlat
dec
sub
ret
sbb
lods
fildll
stc
mov
insb
sti
push
lahf
jae
shll
or
pop
daa
sbb
test
sub
sbb
fimull
sbb
pop
sbb
xchg
pushf
ret
or
insb
jnp
scas
popa
jae
loop
adc
loop
inc
mov
pop
jb
adc
pop
mov
add
jge
jb
pop
and
repnz
movsl
ret
dec
mov
dec
cwtl
push
jne
sbb
mov
fldenv
pop
sub
je
or
and
mov
dec
dec
mov
sbb
adc
aad
imul
cwtl
dec
and
mov
mov
test
fwait
lahf
aas
jl
mov
bound
inc
cmp
jo
or
dec
add
and
insl
movsl
jns
jp
int
xor
adc
add
rorl
lret
clc
lods
fildll
stc
mov
push
lahf
fisttpll
test
or
pop
daa
sub
lods
pushf
add
lods
testl
push
jb
lods
ret
sbb
lret
jns
xchg
rorb
rolb
jo
cmpsl
cwtl
negl
loope
inc
or
sbb
mov
add
jge
jb
addr16
sbb
cwtl
sbb
mov
and
mov
mov
out
xor
fsubl
pop
in
push
adc
pop
ret
jecxz
enter
or
fimull
cld
outsb
mov
jne
imul
inc
test
pop
addl
fstl
dec
cmpl
cmp
in
dec
clc
repnz
cld
fadds
aas
add
mov
rorl
add
mov
divb
imul
xor
push
xor
jb
mov
inc
and
dec
add
cli
aam
jmp
scas
sbb
ljmp
or
adc
xchg
lret
or
pop
sub
jp
add
sbb
loop
sub
or
jge
inc
push
dec
cwtl
jae
popf
fimuls
sti
out
push
xor
roll
mov
mov
mulb
jge
mov
notb
mov
popf
inc
jns
sub
inc
sbb
cmpsb
imul
int
loopne
xor
cmpb
je
inc
xor
jge
push
xchg
nop
fwait
and
int
gs
das
in
cmc
hlt
imul
adc
push
into
lea
fldl2e
mov
jns
into
cmp
jg
fdivp
mov
pop
and
test
lock
pushf
and
mov
mov
push
pop
iret
sbb
iret
push
notl
sbb
test
push
in
xor
stc
mov
xchg
mov
popf
lret
mov
sbb
leave
pop
lret
arpl
pop
das
sbb
push
out
mov
movsl
or
rorb
rcl
lahf
pushf
xchg
sbb
int3
add
jnp
cltd
sub
mov
pop
jecxz
cld
repnz
and
rcrb
add
shlb
repnz
and
mov
sbb
test
in
fwait
jmp
ret
xchg
cs
fsubl
cmp
fnsave
insb
push
adc
stc
shl
enter
or
testb
add
fdivl
ljmp
xchg
mov
mov
test
pop
mov
in
ljmp
jecxz
movsl
mov
rolb
mov
add
testb
es
sbb
add
jl
stos
mov
jnp
inc
in
xlat
xor
in
sbb
lods
mov
mov
mov
je
mov
pop
into
roll
xchg
adc
xchg
imul
cmp
or
mov
fmull
jnp
dec
push
mov
mov
fcmovne
loop
in
nop
xchg
sbb
mov
movsl
sub
loop
dec
inc
mov
rcrl
jmp
xchg
cmpsb
int3
aad
pop
int
pop
fwait
cmpsl
sti
ljmp
mov
fdivrs
mov
inc
inc
mov
insl
dec
pop
xchg
test
mov
mov
mov
pop
pop
push
mov
shr
xor
aam
sti
cmpb
out
jno
mov
aaa
jecxz
repnz
sbb
sub
pop
adc
les
xchg
jo
cmpsl
mov
sbbb
jne
clc
and
push
cld
mov
pop
jno
mov
xchg
jmp
jns
adc
add
adc
mov
pop
or
xchg
lcall
lds
ljmp
cmp
lods
adc
jnp
scas
jg
leave
dec
mov
std
cli
jnp
inc
mov
xchg
insl
shlb
xchg
adc
mov
or
lret
fcoms
mov
test
mov
std
inc
jp
or
sub
fisubs
xor
enter
rcll
dec
add
orl
xchg
dec
jne
sbb
fidivl
cmpb
mov
inc
sub
xor
mov
loopne
sbbl
sti
fstl
dec
mov
mov
lock
add
andb
insl
push
or
mov
je
and
imul
xor
ja
inc
in
leave
mov
ret
xchg
jns
cli
stos
mov
fs
fistpll
stos
dec
movsl
lret
lds
mov
add
addb
stos
pop
lock
pop
sahf
push
fistl
xor
lods
jge
shrl
inc
es
fwait
inc
cli
adc
jmp
mov
andl
sbb
inc
loopne
xor
fsub
and
imul
das
xchg
mov
push
jns
enter
ljmp
xor
cltd
jmp
and
mov
rorb
sub
or
lea
lds
loopne
push
negl
push
adc
mov
or
ds
jno
mov
repz
pop
and
addb
mov
and
and
dec
inc
sbb
leave
sbb
sbb
test
pop
inc
cltd
lret
lcall
sbb
mov
cld
mov
fidivl
mov
jae
lds
cmp
and
jae
les
xchg
fisttpl
sahf
push
out
sbb
add
or
pop
cmpsl
pop
fs
lods
loopne
and
jmp
popf
movsl
dec
addr16
bnd
lods
das
fbstp
shlb
or
sbb
and
dec
xchg
lock
inc
test
cltd
xor
pushf
inc
insl
xchg
popf
mov
mov
cltd
inc
pop
push
cltd
outsl
movnti
imul
ds
cmc
sub
xor
imulb
pop
mov
sub
insl
daa
inc
push
xor
icebp
mov
mov
jg
jp
aas
in
mov
clc
out
cltd
mov
mov
xlat
xchg
divb
cwtl
lret
inc
sub
jno
test
pushf
pop
cli
mov
mov
push
sub
std
inc
data16
jae
sbb
cmc
mov
jle
or
add
sbb
lods
pushf
xchg
fisubrl
pushf
lods
testl
add
jnp
shr
rcrl
fmull
jge,pt
inc
pop
dec
cwtl
jge
popf
fimuls
sti
out
push
fcom
sub
push
dec
mov
push
mov
mov
fwait
jmp
loope
jp
imul
push
jns
enter
ljmp
sbb
inc
cltd
jmp
and
mov
cmp
call
xchg
dec
dec
mov
icebp
mov
xchg
cmp
or
pop
jg
push
das
and
sbb
jmp
sti
pop
push
dec
push
dec
cwtl
cld
sti
mov
imul
movhps
cmp
add
lods
mov
adc
enter
push
jmp
lds
out
stc
fimull
push
in
stos
inc
cmp
arpl
or
and
test
dec
lcall
or
xchg
stos
jge
jns
adc
inc
xchg
sbb
lds
shll
jge
enter
jno
jo
arpl
add
push
sbb
xchg
jmp
sub
sbb
cmp
push
mov
xchg
sbb
and
dec
sbb
dec
cltd
cmp
out
call
cld
add
lcall
or
sub
mov
push
dec
mov
ret
loopne
mov
push
jne
pop
sbb
ljmp
lcall
dec
xchg
jecxz
add
lahf
jmp
out
cltd
xchg
clc
pop
sub
lret
ret
sbb
dec
dec
xlat
xchg
divb
cwtl
lret
inc
sub
cs
insb
and
xchg
xchg
jp
mov
int
dec
mov
mov
fidivl
mov
jae
add
cmp
ret
add
outsb
leave
or
sbb
xchg
int
xor
jb
fcoml
xor
and
or
leave
push
nop
bound
ret
adc
or
mov
or
jge
dec
jmp
loop
cwtl
inc
stos
add
movsb
fs
add
xor
test
pop
mov
cmpsb
xor
flds
mov
out
adc
mov
popa
mov
lea
xchg
out
loope
dec
mov
push
xchg
mov
lret
xorb
into
lea
mov
cmpl
repz
int3
mov
mov
mov
dec
dec
sub
or
and
mov
fistpl
aad
aas
repz
ss
js
jmp
lret
inc
and
stc
cli
dec
mov
into
lcall
dec
rcr
jae
and
imul
test
push
sbb
in
or
dec
mov
rcl
cwtl
pushf
xchg
sbb
ljmp
ret
scas
scas
pop
icebp
leave
es
cld
repnz
sub
sbb
mov
or
push
or
les
dec
jbe
cmp
aas
fwait
lret
in
mov
mov
mov
out
sbb
jmp
and
mov
mov
xchg
test
shr
lret
sbbl
lret
sbb
add
ja
mov
lods
mull
cld
call
xlat
test
std
fists
iret
int3
out
aaa
testb
mov
sbb
sub
xor
inc
cltd
nop
loop
nop
pop
pushf
dec
and
sbb
in
xlat
mov
inc
and
jmp
ds
adc
std
mov
subb
or
pop
lock
push
sahf
aad
adc
or
aaa
fwait
lods
jge
shrl
test
scas
mov
lahf
fists
fcmovne
pop
cs
sbb
pop
repnz
add
pop
dec
rcrl
xchg
pop
pop
and
mov
mov
rcrb
push
in
xchg
jmp
ret
xchg
and
mov
cmpsb
jnp
mov
jecxz
adc
into
adc
dec
cld
push
lret
bound
or
dec
push
pusha
lahf
sbb
lea
pop
movsl
dec
call
mov
mov
cmp
jp
add
jmp
jo
mov
sbb
pop
sub
lret
mov
pushf
dec
jne
rorl
dec
ret
and
jge
sub
cmc
sbb
lods
fcomi
xchg
repz
gs
mov
sub
add
cmc
add
xchg
or
pop
pop
fsts
xchg
pop
and
xchg
jnp
pop
je
into
mov
fadd
push
pop
adc
dec
mov
mov
sub
adcl
dec
aam
cld
filds
dec
aam
stc
mov
xor
push
aas
fwait
lret
in
mov
mov
or
fwait
xlat
xchg
stc
xchg
cwtl
flds
mov
cmp
out
push
test
popf
xchg
push
adc
xchg
push
pop
push
mov
cmp
test
sbb
push
fwait
lahf
lds
ds
mov
add
divb
int
inc
or
add
lcall
mov
cwtl
lret
movsl
ret
popf
cld
add
les
fucom
xchg
and
lds
jns
xchg
pop
add
fldt
cmpsb
cmp
pop
or
orb
scas
arpl
pop
jo
cmp
inc
lcall
lret
pop
test
xor
jno
cmp
lret
jno
sbb
int3
mov
mov
icebp
xor
scas
add
arpl
iret
xchg
mov
cmp
stos
and
jnp
inc
push
mov
rcrb
push
jne
mov
mov
xchg
cltd
out
jns
mov
pusha
insl
push
andb
cmp
or
cmp
xchg
sub
flds
and
xor
aam
shl
sbb
jne
rolb
mov
lds
cmp
sahf
divl
mov
and
sti
dec
fists
inc
insl
cwtl
xchg
leave
fsubrl
lahf
sub
sub
sbb
les
lcall
sbb
mov
inc
leave
fs
jno
inc
push
scas
xchg
inc
mov
test
aam
cltd
lcall
cmp
sbb
push
lret
ret
mov
or
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
cmpsl
imul
mov
mov
jnp
inc
push
mov
xchg
sbb
sub
mov
movswl
jmp
std
mov
sti
and
push
mov
xchg
inc
mov
test
add
xchg
cmp
or
pop
movsl
adc
mov
mov
add
mov
cmp
jp
add
rorb
add
add
cs
sub
lods
xchg
sub
adc
push
dec
repz
adc
ja
inc
inc
lahf
scas
mov
bound
xchg
repz
ljmp
in
movsb
lcall
nop
xchg
imul
lcall
cwtl
mov
dec
movsb
aad
xor
xor
fwait
jge
js
popf
push
lret
in
pop
popa
or
scas
adc
addl
rorl
stc
jb
push
sbb
dec
xor
mov
xchg
sbb
and
mov
pop
fcomp
movswl
jmp
std
mov
sti
and
push
int3
sbb
sbbl
lea
cmp
pop
aas
shr
repz
les
jg
movl
popf
mov
cmp
jp
add
ror
cmp
add
cs
sub
lods
xchg
sub
adc
dec
test
mov
sbb
std
fistpll
shll
jo
test
in
andb
out
add
dec
mov
rorl
inc
mov
call
fmull
mov
sub
fsubrs
sahf
push
cmp
enter
xchg
cmp
in
imul
in
mov
les
jg
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
adc
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
sub
dec
dec
pop
insb
push
in
ficomps
fnstcw
sub
sub
mov
mov
inc
addb
stos
dec
push
sahf
jns
loope
fsubrs
rolb
mov
fdivrs
test
xchg
xchg
and
adc
xor
cmpsb
jmp
lret
arpl
fs
push
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
fldt
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
sub
push
sub
push
out
push
cmp
roll
aam
push
sti
cmpl
mov
das
inc
scas
dec
imul
test
movsl
sub
loopne
lret
inc
dec
push
adc
dec
xor
xor
div
call
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
test
sub
cmp
lds
push
fdivrl
jmp
mov
stos
and
out
sub
sbb
mov
fwait
push
dec
mov
mov
inc
icebp
sub
xchg
cmc
mov
mov
dec
dec
pop
push
jne
dec
jp
movsl
shll
jl
sbb
mov
sub
jae
fnsave
sbb
fidivl
aas
addr16
nop
es
sahf
xor
pop
repnz
push
daa
sbb
inc
ret
mov
pop
or
pop
out
clc
xor
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
and
cltd
lret
lcall
sbb
mov
push
adc
hlt
stos
arpl
lds
sbb
xchg
dec
insl
nop
repz
rcrl
stos
pop
and
int
lods
lret
push
dec
xchg
aam
xchg
test
fsubs
jbe
popf
adc
fdivrl
pop
mov
scas
adc
xchg
cmp
shr
and
lret
jl
addr16
iret
shl
aaa
jge
outsl
arpl
fcmovbe
cmp
daa
testl
gs
push
or
mov
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
or
mov
mov
pop
dec
and
cmp
and
mov
test
add
inc
sbb
imulb
sbbb
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
jae
pushf
pop
push
mov
xlat
shr
inc
cmp
mov
jae
adc
dec
mov
or
dec
lret
pop
xchg
push
or
mov
mov
icebp
pop
cmpsb
mov
repz
cmp
add
pop
test
mov
xor
cmc
xor
cwtl
mov
clc
aaa
jge
push
dec
mov
mov
add
sub
xchg
cmc
mov
cmp
mov
mov
sub
push
aam
iret
jae
mov
int
aaa
fnstenv
pushf
pusha
cli
and
loope
pop
adc
add
aam
mov
push
cmp
jmp
rolb
push
in
leave
arpl
mov
and
mov
mov
jmp
dec
and
sbb
and
adc
mov
cli
mov
xor
shl
mov
cmp
ljmp
pop
cli
movsb
leave
pop
notl
push
mov
lods
adc
bound
ds
data16
adcl
mov
cmp
jmp
lods
movb
frstor
ret
lea
jmp
jg
out
jno
mov
add
stc
loope
adc
imul
push
repz
push
lock
jl
fmul
push
out
cltd
inc
xchg
jne
pop
scas
push
enter
mov
or
ljmp
outsb
out
loope
addl
add
fld
sbb
mov
and
sbb
sahf
dec
in
pop
scas
dec
dec
test
cs
mov
mov
mov
das
orb
jmp
clc
sti
jle
lret
cmpsl
pop
push
test
jbe
push
leave
cmpsl
inc
icebp
xchg
iret
in
sbb
subb
clc
pop
enter
int3
inc
push
cltd
icebp
testb
in
mov
movsb
shl
sbb
test
add
into
pop
into
fcmovbe
dec
inc
sub
sub
add
jl
dec
add
insb
lret
sub
out
cmp
test
lret
inc
stos
rclb
pop
mov
cwtl
xor
test
fwait
ljmpw
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
repnz
daa
sub
aas
sti
sti
and
test
aas
mov
cmp
mov
xchg
test
push
lds
pop
repz
fwait
pusha
or
scas
adc
adc
sbb
cld
loop
inc
sbb
ljmp
outsl
aam
lods
pcmpeqd
push
mov
inc
rorl
ficomps
fldenv
push
aaa
push
lea
cmp
mov
xchg
stos
jb
pop
adc
dec
inc
sub
sub
add
pop
and
sub
pop
xchg
push
xlat
adc
dec
adc
mov
test
dec
xchg
jp
cmp
jne
pop
movsl
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
xor
test
or
cmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
jl
xor
cmpb
je
test
jle
jl
out
mov
icebp
push
mov
stos
xchg
lahf
mov
adc
rolb
xor
pusha
or
pusha
push
sub
push
xor
divl
scas
pusha
mov
adc
orb
movsl
outsl
aam
sub
mov
xchg
xchg
mov
divl
push
stos
lea
aam
mov
push
sub
mov
fildll
push
sahf
jns
out
dec
in
mov
or
rcrb
xchg
stos
std
mov
inc
push
mov
xchg
gs
orl
mov
fimuls
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
in
cmpsl
ficoms
hlt
ja
mov
jns
jl
xor
cmp
jle
mov
clc
mov
out
enter
xor
aad
dec
sub
sbb
jno
inc
mov
lret
or
inc
roll
cmp
bound
movsb
cmpsb
call
imul
mov
cltd
lret
inc
mov
sti
jae
fistpll
cmpl
dec
mov
out
mov
dec
movsb
mov
cmp
dec
shl
dec
fwait
sbb
add
inc
dec
fisttpll
lret
stc
dec
push
out
mov
mov
aam
addl
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
bound
cli
test
repz
nop
xchg
lahf
push
cwtl
lock
aas
xchg
dec
in
rcl
cmpsl
mov
sbb
or
test
push
mov
out
loopne
inc
dec
rorl
dec
out
les
inc
dec
mov
rcrl
or
fs
sub
adc
pop
sbb
subb
mov
arpl
sbb
and
push
xchg
sub
inc
enter
sahf
rcrb
mov
js
or
icebp
aaa
mov
sbb
jge
les
mov
dec
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
fstpt
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
jge
sbb
lret
xchg
mov
inc
out
scas
mov
fildll
les
fldcw
andb
rolb
aas
or
xor
lret
mov
ret
mov
mov
mov
lahf
mov
fistpll
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
fistpl
xor
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
or
pop
pop
cmpsl
icebp
imul
cs
xchg
mov
fists
xor
sub
ja
popf
lods
push
push
loope
sti
jb
xor
or
shrb
sbbl
sub
dec
es
test
insl
inc
xor
bound
mov
subb
xor
dec
arpl
insl
mov
pusha
mov
add
loop
inc
sbb
daa
add
test
push
leave
cmpsl
inc
icebp
xchg
add
and
lds
lds
and
jb
mov
out
inc
test
std
pusha
and
fsubr
cmpsl
bound
sub
shrl
mov
push
out
insl
lret
inc
sub
xchg
call
rol
pop
adc
dec
rorb
fucom
inc
and
inc
clc
mov
cltd
call
fcoml
jg
test
jl
jge
mov
stos
rol
int
pop
and
cli
pop
test
mov
sbb
int3
aaa
repz
rcr
pop
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
mov
subl
adc
js
test
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
xchg
std
pop
int3
push
movb
push
pop
dec
dec
sbb
test
adc
push
insl
xchg
cwtl
std
sub
mov
cli
stos
popf
pop
dec
or
rcrb
adc
push
orl
sub
inc
pop
jecxz
leave
stos
push
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
pop
stos
add
jmp
scas
aas
test
sub
jb
pop
pusha
xchg
mov
push
inc
jg
cmp
enter
push
inc
sarb
clc
jo
add
dec
add
or
leave
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
outsl
sbb
and
test
push
mov
cmp
mov
xchg
test
push
int
sub
repz
lods
out
dec
pusha
xor
aam
aaa
test
mov
hlt
test
cmp
dec
or
cmp
push
aam
mov
movsb
mov
cmc
imul
test
push
stos
test
movsl
inc
mov
fwait
jae
imul
ror
inc
lret
push
mov
mov
sbb
or
dec
xchg
push
mov
adc
lcall
push
js
jbe
xor
fnsave
mov
test
popf
adc
cli
jnp
inc
mov
cwtl
add
imul
xchg
pop
inc
mov
ds
or
ror
movsl
ret
and
xchg
mov
ja
in
test
adc
cld
jo
lods
out
xor
into
orb
sbb
push
test
jle
nop
add
and
push
lods
adc
or
pop
sbb
in
and
sub
xor
lahf
jle
and
mov
mov
test
popa
mov
and
mov
nop
pop
lret
cwtl
mov
aam
mov
xchg
push
negl
in
lods
mov
repz
repnz
hlt
je
sahf
das
xchg
stc
cli
in
test
or
fs
data16
adcl
mov
dec
mov
push
mov
cmc
repz
test
pushf
and
fcmovne
bnd
out
mov
push
je
jno
push
roll
mov
repz
push
imul
xchg
movsl
push
test
fnstsw
outsl
addr16
movsb
out
int3
outsb
adc
push
add
mov
arpl
cmp
icebp
dec
fs
inc
dec
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
cmp
movsl
pop
in
pop
xlat
divb
incb
test
add
test
push
lock
xchg
xor
leave
add
mov
or
mov
les
dec
sbb
mov
sbb
mov
ficompl
and
push
inc
out
xor
into
repz
cmpsl
mov
mov
jnp
and
lds
fcom
dec
sub
insl
mov
leave
jnp
pop
cld
sub
adc
lcall
cmp
std
cli
jnp
inc
mov
mov
jne
idiv
add
fdivl
cmc
mov
call
lahf
scas
in
cli
jnp
out
mov
push
mov
dec
std
add
cmc
gs
dec
pop
cmp
xchg
xchg
sbb
ret
mov
popf
sti
addr16
add
pop
sub
cmpsb
pushf
jbe
pop
aam
jae
adc
mov
cli
mov
cmp
push
cli
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
xchg
nop
push
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
inc
and
sub
cmpsl
xchg
test
xorl
sub
sub
shrl
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
sub
repz
xor
push
jp
ljmp
inc
inc
cmpsb
jecxz
adc
or
mov
xchg
xor
sbb
push
mov
xor
leave
dec
loope
jo
cmp
cmpsl
mov
jge
jno
jmp
mov
repz
push
mov
or
daa
leave
rclb
xor
imul
inc
das
pop
clc
sbb
jp
out
outsb
jp
add
cltd
rcrl
movsb
arpl
sbb
neg
ljmp
rol
push
and
sbb
xlat
inc
aad
inc
xchg
cmpsl
icebp
leave
fcoml
insl
movsl
cwtl
icebp
sub
mov
shr
divl
dec
scas
cmp
repz
mov
fwait
mov
rclb
test
mov
sub
inc
inc
insl
lret
std
sbb
subb
arpl
test
inc
pop
out
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
xchg
adc
and
insl
out
pop
roll
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
inc
or
dec
push
pop
xor
rolb
add
mov
sbb
sub
stos
mov
push
jmp
call
or
and
loopne
and
mov
sbb
ds
add
pushf
cld
ds
sti
or
or
mov
test
popa
jno
mov
xchg
xor
lret
movsb
xchg
test
push
inc
sbb
push
pop
mov
add
push
add
jb
mov
and
jmp
js
scas
mov
xchg
sub
add
dec
fidivs
lods
mov
fstpl
icebp
xchg
jp
fisttps
fwait
movsb
pop
das
jle
scas
jb
mov
pop
aas
pop
sub
in
and
in
xchg
sbb
mov
jmp
popf
outsl
jg
fucomp
clc
jp
scas
lahf
inc
jne
sbb
movsb
notl
xlat
int
inc
jl
pop
mov
mov
leave
jno
fldt
int
jno
dec
nop
mov
inc
fidivrs
lret
insl
cmp
out
and
mov
mov
jg
cmp
adc
mov
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
mov
iret
push
nop
stos
fcoml
xchg
dec
push
dec
jg
shl
mov
cmpsb
dec
sub
scas
push
mov
rclb
push
jb
sahf
pop
and
xchg
xchg
test
xor
outsl
inc
mov
mulb
cwtl
pusha
or
adc
jo
imul
call
xchg
scas
out
in
cmp
out
xchg
mov
dec
add
repnz
fwait
rcr
ret
jl
pop
adc
lds
aas
stos
ret
ret
mov
rcll
mov
sub
or
lods
lea
jae
mov
jp
jl
cmp
clc
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
lret
jge
push
rep
pop
imul
das
push
mov
push
movsb
ret
enter
imul
push
or
xor
insl
cmpsl
and
cwtl
sub
xlat
and
aaa
movsl
into
lret
xor
fcom
ss
mov
gs
ret
cltd
sub
add
addr16
mov
push
or
pop
or
bsr
adc
fprem1
jmp
xchg
xchg
xchg
jg
sub
ljmp
xor
push
jmp
fnstsw
xchg
ds
mov
add
clc
test
shlb
adc
test
sbb
mov
mov
adc
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
xor
mov
fcoml
mov
pop
out
jmp
dec
mov
mov
scas
mov
sub
jb
pop
adc
inc
lret
jp
and
lods
add
fwait
shll
adc
adc
xchg
jnp
loope
add
xchg
adc
adc
movsl
bound
fisubl
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
xchg
inc
test
dec
les
lds
mov
jo
fstp
inc
sbb
stos
adc
nop
sub
or
jl
cmp
jo
xor
cmp
call
lds
pop
xlat
pusha
push
xchg
jle
mov
xor
adc
push
mov
dec
mov
fldt
imul
test
movsl
push
imul
lods
mov
push
sub
mov
fsts
and
mov
ret
ret
mov
inc
das
xchg
stos
jge
mov
xchg
push
xlat
adc
dec
psubd
movsb
test
cmpsb
cmp
pop
and
movsl
adc
pop
and
fwait
jmp
stos
xor
mov
sar
stos
ljmp
cmp
outsb
cmp
scas
mov
out
jb
fsubrl
in
jnp
cld
loope
lods
repz
jecxz
jp
mov
lock
and
sbb
lret
mov
or
add
pop
js
dec
dec
fstpl
je
insb
scas
lcall
test
jae
push
push
lds
jp
or
xor
or
sbb
add
inc
rolb
je
and
mov
push
fiadds
in
inc
out
test
loopne
mov
je
xchg
ja
jmp
stos
mov
mov
daa
push
dec
dec
repz
or
adc
aad
sbb
adc
mov
fnsave
pop
cmpsb
mov
subl
xchg
pop
push
mov
scas
adcb
mov
xor
cmc
xor
aas
cwtl
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
mov
mov
sbb
outsl
aas
adcl
lods
enter
xor
inc
rcrl
and
jle
nop
push
push
and
push
dec
push
shll
rcrl
or
and
int
or
mov
cltd
imul
push
aad
repz
xor
lret
inc
test
push
aam
mov
incb
sbb
sub
sbb
mov
ret
xchg
jmp
jnp
inc
jle
imul
and
out
movsb
pop
imul
fsubs
jbe
lods
add
mov
cmp
int
fisubs
pop
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivl
add
mov
mov
rorl
cmp
dec
xchg
mov
dec
mov
pop
repnz
mov
jbe
call
fldcw
test
loopne
test
aas
sbb
bound
lea
mov
mov
xor
insb
loop
loope
xchg
fdivrs
mov
daa
lahf
pop
movsl
ficomps
stc
lea
mov
test
cmc
mov
cmc
cmp
lea
jg
or
and
jl
pop
adc
test
aas
movsb
lds
nop
lds
push
push
dec
je
inc
and
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
test
adc
filds
es
and
sub
lods
xchg
int3
mov
pop
xor
sahf
fsubs
jbe
lods
aad
or
or
mov
or
int
out
ret
jg
out
and
lret
jl
das
inc
xor
mov
ret
dec
fcoms
outsl
add
inc
and
lret
sbb
punpcklwd
outsl
pop
inc
subl
push
inc
inc
mov
fwait
mov
loop
cmc
mov
lea
mov
push
jns
les
jns
pop
mov
test
add
test
push
lock
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
sub
mov
call
push
xlat
sub
jbe
pop
mov
dec
adc
jg
shl
je
sub
out
fistpl
dec
jno
enter
lods
mov
xorl
push
popa
outsl
aaa
popf
adc
pop
sbb
push
xchg
inc
mov
dec
ljmp
mov
lock
lods
adc
call
les
movb
inc
test
daa
dec
out
jno
pop
add
lcall
aam
and
scas
xchg
and
fdivs
nop
test
or
enter
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
dec
in
stos
mov
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
xchg
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
jge
and
fisubs
pusha
and
rorb
jmp
dec
mov
adc
jnp
jle
push
lcall
gs
std
aaa
mov
mov
int
jne
les
cmpl
sbb
imul
dec
adc
mov
jg
aad
pushf
ret
pop
mov
mov
sbb
xchg
nop
push
lcall
scas
cmp
inc
cmpl
jge
pop
push
push
aad
and
jbe
lods
push
fmuls
xchg
test
push
push
fnstsw
dec
sub
stos
les
aam
add
mov
incb
inc
imul
ss
ja
orl
mov
daa
add
icebp
push
or
adc
sbbb
sub
icebp
push
fdivrs
cli
mov
push
pop
pop
imul
add
mov
xchg
ds
lods
inc
test
push
and
adc
cmp
or
cmp
xchg
sub
popf
out
mov
adc
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
pushf
lock
mov
pop
mov
or
adc
outsl
movsl
xor
lret
scas
addr16
imul
xchg
or
inc
jge
shlb
aam
adc
lock
or
and
cmp
insl
dec
xor
pop
push
dec
mov
stos
movsl
pop
jno
lds
pop
cmpsl
inc
cmpb
fsts
mov
dec
mov
sbbl
xchg
pop
adc
mov
je
decl
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
xlat
xchg
stc
es
iret
out
aam
int
add
or
scas
int3
sbb
mov
sub
or
mov
adc
and
push
dec
push
adc
mov
out
int3
pusha
adc
jl
inc
mov
xor
and
daa
adc
xorb
mov
stos
sbb
data16
mov
aad
insl
and
adc
ret
scas
popa
adc
rcrb
sub
int
jno
lea
xchg
pop
out
dec
in
mov
adc
add
jne
push
or
cmp
lea
xor
jp
sbb
xchg
adc
mov
dec
adc
aaa
jge
push
dec
mov
and
adc
cld
xchg
adc
and
insl
out
sbb
inc
add
pop
lods
mov
jl
mov
into
orl
sbb
add
add
inc
mov
or
mov
es
loopne
cmp
xchg
add
and
aas
shl
repz
push
ret
movl
in
cmp
roll
inc
or
lcall
fmull
xchg
jle
add
mov
dec
lods
jg
leave
gs
aaa
pop
push
lods
xchg
outsl
mov
mov
sar
lcall
pop
cmp
cli
xchg
add
fstp
add
movsb
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
pop
jge
jo
mov
pop
jb
add
mov
out
push
scas
shrl
xor
sub
add
lea
shll
inc
out
mov
out
cmpsl
dec
sub
xchg
mov
adc
inc
test
lret
inc
mov
data16
int
inc
dec
adc
dec
jbe
mov
bound
mov
filds
call
push
inc
mov
lret
jge
fmulp
lahf
mov
jns
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
mov
jno
pop
xchg
sbb
cltd
lret
lcall
sbb
std
fistpll
shll
jo
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
lock
xchg
xchg
dec
push
fidivrl
jp
pop
push
jo
inc
add
icebp
outsl
in
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
add
lcall
jge
inc
sub
jg
xor
jno
call
add
cmc
push
mov
scas
iret
bswap
stc
dec
push
out
cmp
lret
lahf
push
mov
add
sbb
nop
lret
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
mov
sbb
jo
mov
pop
jb
add
mov
out
push
out
xor
test
inc
mov
ror
jmp
jno
lds
jnp
lcall
test
inc
cmpl
adc
and
mov
mov
outsl
or
test
and
dec
dec
or
ljmp
repz
add
ljmp
ret
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
int
add
test
nop
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
scas
pxor
cld
repz
cwtl
or
add
cmc
jl
das
dec
iret
shl
idivl
outsl
outsl
insb
incl
out
dec
loopne
stc
mov
or
shrl
jmp
arpl
enter
or
and
push
orb
mov
mov
jl
push
or
jns
dec
cmpsb
mov
xor
dec
movsl
sub
jge
fdivrp
lahf
adc
js
jnp
adc
mov
and
add
das
jo
or
addb
push
aas
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
popf
xor
sbb
dec
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
sbb
sub
mov
mov
dec
loopne
adcl
dec
add
and
shl
hlt
xchg
cmp
jecxz
js
fnstcw
pop
daa
in
mov
in
fwait
adc
add
mov
scas
add
and
xchg
xor
sub
in
jnp
out
mov
xor
pop
iret
jp
popf
call
rorb
inc
xchg
jl
daa
loopne
hlt
jbe
test
or
addb
int3
fwait
mov
in
and
xor
mov
dec
jp
push
pop
add
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
sbb
mov
lea
push
lret
pop
xor
adc
inc
repnz
sahf
jge
loopne
lcall
xchg
stos
push
repnz
mov
xchg
stos
aam
pop
cltd
enter
lret
push
inc
sbb
xchg
clc
xor
sub
push
xchg
xchg
test
lret
popa
jle
icebp
jle
jno
add
andl
leave
lock
pop
fsubl
mov
arpl
ljmp
xchg
imul
pop
out
inc
test
jns
outsb
negl
xor
mov
mov
decb
inc
fcmovb
mov
mov
adc
and
test
mov
js
sti
repz
seta
dec
dec
in
mov
adc
enter
mov
sub
mov
xchg
xchg
mov
inc
orl
xchg
push
aad
and
lock
out
pusha
in
dec
mov
jno
cs
inc
or
fxch
push
dec
in
sbb
fmuls
cmpsb
mov
fists
movsl
push
jecxz
mov
push
fwait
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
push
jo
mov
jne
mov
cmp
mov
and
adc
xchg
adc
and
insl
out
sbb
inc
add
pop
ljmp
xor
lods
xor
mov
dec
test
mov
es
cmpsl
out
leave
mov
fs
pop
or
jno
dec
and
out
mov
mov
movsb
ret
lock
pusha
mov
loope
mov
popa
mov
push
add
decl
cld
pop
add
in
push
push
xchg
xchg
inc
add
mov
repz
sbb
push
cmp
je
stos
ret
fcoms
adc
and
ror
mov
lret
repz
cmp
ret
mov
in
orl
sub
rorl
dec
dec
pop
jb
xor
or
jnp
mov
mov
repz
lret
std
cli
jnp
inc
mov
add
adc
mov
and
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
inc
popf
outsl
data16
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
adc
or
push
sub
push
xor
push
cmp
push
inc
jecxz
or
push
or
orb
icebp
dec
inc
add
faddl
sbb
sarb
sti
stos
rcrl
cltd
cmpsb
jecxz
cmp
test
fbstp
je
pop
iret
sbb
rcr
loopne
xor
cwtl
sub
sbb
push
sbb
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
pop
mov
rorl
dec
push
sbb
leave
lock
jl
das
dec
or
jl
loopne
call
push
shrl
test
jge
adc
mov
outsb
out
lahf
stc
cmpsl
ret
js
adc
add
mov
adc
or
xorb
jbe
enter
adc
cmpsb
jg
stos
gs
push
test
sahf
fildl
sub
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
mov
jns
ret
push
fcompl
jne
jns
lds
nop
lds
push
push
lds
and
stc
inc
repnz
movsb
jmp
xchg
aam
push
dec
popf
push
aad
push
fdivs
push
mov
cmp
ret
ficoms
mov
scas
mull
or
xchg
mov
cmp
sub
adc
fimull
lahf
adc
clc
sbb
xchg
mov
push
xor
fdivs
add
push
test
xchg
adc
data16
mov
leave
push
stos
icebp
mov
sbb
xchg
jne
mov
or
pop
fsubl
sbb
jle
sbb
es
jns
hlt
jl
out
jg
fdivs
mov
imul
sbb
xor
clc
adc
add
js
cmp
inc
out
push
and
outsb
push
stos
or
mov
mov
insb
push
sub
lahf
cmc
gs
sbb
adc
and
aaa
mov
dec
pop
adc
mull
lock
inc
sub
mov
dec
push
mov
adc
add
out
jo
push
fnstsw
stos
inc
pop
push
add
lods
pop
push
fcom
repz
lods
inc
movb
mov
ss
cmp
jge
mov
andl
out
fdiv
cmpsl
imul
adc
dec
push
inc
mov
mov
adc
fimull
arpl
pop
mov
fs
ficoml
jle
fistpll
int
sti
cmpsl
dec
sti
les
daa
and
push
cmp
out
pop
add
add
and
nop
cs
pushf
je
mov
or
faddp
pop
into
movsl
and
sti
xor
inc
xchg
in
mov
xlat
mov
push
icebp
cmpsl
test
mov
test
lods
dec
push
sub
je
in
stc
push
push
xchg
lahf
gs
jnp
and
out
lods
jmp
into
and
movb
mov
jmp
ljmp
lds
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
int3
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
leave
mov
cmp
repnz
fmull
and
sub
and
xor
push
adc
pop
test
lcall
mov
add
adc
mov
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
and
movsl
lret
jo
push
test
loop
and
pushf
out
push
push
dec
push
push
sahf
jle
and
and
outsl
xchg
and
insl
add
jb
lods
inc
sub
iret
mov
and
mov
dec
xor
ljmp
jo
sub
les
jno
lahf
ret
repnz
jle
or
mov
and
cmp
xor
adc
mov
popf
movsl
icebp
xor
push
jo
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
add
dec
xchg
dec
xorl
lret
add
mov
adc
mov
lods
movsl
pop
mov
and
or
inc
ret
add
fidivl
sbb
mov
jbe
orl
jmp
lods
rcrl
aas
and
ficomps
shll
fistl
lea
sub
jb
fstl
movsb
shll
lock
jp
ss
push
out
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
mov
movsb
into
fsubrl
lret
popa
jno
fcmovne
lds
popf
cmc
jmp
js
lret
inc
fstl
inc
fprem1
jmp
adc
ds
push
test
mov
xor
sub
je
pop
adc
test
and
std
lods
xor
xchg
std
mov
mov
adc
iret
shrb
addr16
dec
clc
and
dec
sarb
mov
repnz
movsb
dec
int
push
mov
out
mov
clc
sti
jne
jp
mov
addb
jbe
push
aaa
scas
stc
aaa
sbb
insb
jne
inc
rcrl
fistpl
test
inc
mov
sbb
mov
push
mov
jmp
mov
sub
pop
adc
or
xor
mov
jnp
push
xchg
jle
jmp
cmp
fcmovbe
mov
loope
sbb
arpl
pop
mov
cmp
iret
jns
dec
sbb
inc
ljmp
pop
and
call
inc
cmp
add
sbbb
std
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
add
call
xlat
sbb
and
test
fnstcw
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
cs
mov
mov
dec
mull
cltd
fbstp
mov
xchg
pop
mov
gs
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
dec
sti
sub
jle
fcoml
aad
xor
xor
mov
mov
sbb
jo
mov
pop
jb
add
inc
pop
or
mov
addr16
sub
jo
mov
xchg
insl
mov
aaa
fisttpl
imul
shlb
mov
xchg
in
loopne
aas
fisttpll
into
pop
or
and
adc
pushf
shll
or
add
dec
pop
jmp
pusha
and
xchg
ret
je
bound
mov
movsl
subl
and
repz
jmp
loope
xor
adc
push
or
push
decb
fiadds
data16
sbb
inc
push
fldcw
and
cmp
mov
fildll
push
sahf
jns
jmp
outsl
sbb
jg,pn
shl
je
sub
cmpsl
push
pop
loop
pop
xchg
imul
in
rcll
fadds
mov
out
test
mov
mov
fcoml
and
jl
rcrb
pop
mov
lret
inc
push
stc
or
or
loope
jnp
in
lret
jg
scas
or
fucomi
jns
int3
push
push
lds
add
mov
ret
jno
jb
cld
lods
jnp
outsb
repz
data16
lret
push
ficompl
cs
push
shrb
or
shll
sar
sub
popa
push
test
sahf
sbb
das
lcall
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
stos
lods
mov
ret
push
fcompl
jne
jns
lds
nop
lds
mov
repz
testl
sahf
std
and
dec
cmpsl
xchg
int
sar
lret
sarl
mov
sub
sub
addr16
inc
rolb
jb
lods
mov
mov
popf
mov
xchg
xlat
pop
xchg
sub
jge
push
lahf
outsb
ret
cmp
enter
sar
jg
out
das
dec
lock
mov
pop
push
sbb
idivl
outsl
outsl
call
out
dec
loopne
std
inc
into
out
popl
sahf
pop
lahf
jnp
lea
not
fisttpll
dec
pop
out
insb
bound
sbb
call
movsb
lea
push
pop
pop
push
test
mov
pop
and
lds
add
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
pushf
dec
and
inc
xor
lcall
rclb
jg
repz
lret
pop
lods
mov
popf
shl
or
testb
mov
imul
mov
inc
fisubl
stos
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
stos
and
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
xchg
adc
and
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
loope
int3
scas
mov
cmpsl
jno
dec
rol
inc
mov
or
pop
mov
push
js
inc
movsl
xchg
mov
xchg
test
shll
test
fucomp
inc
repz
fists
pop
adcb
dec
gs
pop
cs
addl
xchg
fildl
push
mov
sub
shll
out
cmpsl
push
jecxz
popl
mov
popf
jae
into
cmpb
jns
hlt
and
andl
inc
lahf
mov
jae
gs
das
in
cmc
imul
movsl
mov
ja
add
lret
add
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
nop
push
lcall
scas
cmp
inc
cmpl
jae
movsb
pop
imul
dec
mov
inc
jecxz
sub
out
insl
mov
test
mov
mov
push
mov
or
and
ljmp
movsb
lret
aas
mov
loope
sarl
subl
inc
pop
outsl
roll
mov
sarb
mov
cmc
or
or
sbbl
fmull
pop
mov
or
lahf
cltd
pop
adc
jl
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
push
leave
pop
jecxz
in
push
cmp
sbb
daa
adc
rcrb
nop
jle
sbb
push
mov
push
dec
fmull
adc
jecxz
push
loop
dec
pusha
sub
push
filds
shrb
stc
dec
inc
add
iret
push
add
and
jg
and
jmp
js
scas
mov
xchg
sub
add
dec
fidivs
lods
mov
fstpl
icebp
xchg
jp
fisttps
mov
mov
lcall
pop
jb
add
mov
out
push
scas
shrl
xor
sub
add
lea
jp
lods
addr16
push
sbb
jge
dec
lcall
xor
mov
aaa
test
pop
repnz
out
insl
push
or
inc
mov
push
mov
cs
xor
jnp
je
repz
inc
cmpsl
xor
jg
iret
inc
sti
xlat
mov
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
sbb
sbbl
fstpl
push
cmp
sub
cmc
sbb
std
fistpll
shll
jo
test
add
pop
inc
xchg
stos
xchg
into
jns
lahf
cli
rolb
mov
xchg
push
mov
ret
lea
and
in
das
adc
dec
sbb
pop
mov
ficoms
jmp
cltd
scas
push
repz
cmpb
pop
das
dec
xor
lea
fwait
scas
mov
pusha
adc
lds
mov
fsubrp
scas
mov
pop
pop
ljmp
outsb
out
lahf
stc
cwtl
shll
or
add
lds
mov
stos
ror
jecxz
push
mov
inc
rolb
mov
ljmp
repz
inc
pop
ljmp
ret
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
int
add
test
nop
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
into
adc
aas
mov
arpl
mov
xchg
xchg
xchg
mov
scas
pxor
ret
sti
mov
leave
lock
jl
das
dec
iret
shl
idivl
outsl
outsl
int
adc
scas
jmp
pop
cmpsb
ret
jns
mov
shlb
mov
into
test
and
rcrb
orb
mov
mov
jl
push
or
jns
decb
lret
mov
jb
mov
mov
mov
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
imul
lods
cmpsb
fdivs
pop
mov
lods
xchg
sub
adc
call
clc
mov
shlb
fbld
fidivs
jb
pop
lea
dec
push
sahf
jge
call
dec
dec
fsub
fsts
push
lock
mov
stos
outsl
dec
mov
lret
adc
jecxz
lahf
cltd
lret
test
push
cmpsl
sahf
xchg
cmp
or
icebp
cmp
mov
add
jmp
jl
mov
les
decl
jnp
inc
push
mov
or
xchg
and
jmp
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
shlb
cltd
dec
in
pop
aam
pop
adc
lods
imull
cmp
loopne
jg
fisttpl
jmp
ret
or
ljmp
mov
mov
mov
daa
filds
insb
lret
mov
and
push
leave
pop
add
sub
lods
mov
mov
dec
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
sbb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
enter
fadds
jle
pusha
das
dec
lock
mov
pop
xchg
mov
subl
jp
scas
scas
loope
repz
dec
push
mov
pop
cs
icebp
in
jns
outsb
out
loope
addl
mov
and
fadd
faddl
mov
inc
xchg
mov
dec
pop
in
adc
xchg
cltd
mov
ljmp
test
sbbb
mov
jp
movsl
add
test
jp
lcall
daa
lahf
iret
push
hlt
mov
arpl
or
jge
fsts
clc
stos
dec
and
aad
je
or
mov
test
roll
xor
stos
je
sbb
mov
mov
sub
adc
popl
inc
sbb
lods
mov
mov
sub
das
pushf
pop
xchg
test
aad
xchg
xchg
dec
aam
jecxz
add
das
push
jmp
add
out
stc
lock
jl
mov
divl
adc
sbb
scas
scas
loope
mov
inc
out
scas
mov
pop
cs
popf
jmp
loope
lahf
icebp
cmpsl
ret
stc
pop
test
sub
in
stos
ja
int
in
mov
add
test
bound
jns
ss
pop
int3
sarl
dec
mov
stc
clc
jp
add
add
mov
sbb
orb
xor
mov
arpl
mov
jg
cmp
push
push
mov
sub
jne
adc
call
push
out
fwait
mov
push
dec
in
clc
popa
mov
in
subl
xchg
and
fs
sub
and
jecxz
ljmp
cmp
and
add
xor
xchg
mov
filds
orb
lods
mov
fs
push
dec
xor
imul
sbb
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
add
xchg
cmp
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
xchg
or
xchg
sbb
xchg
stos
ja
add
out
and
sub
es
test
mov
into
inc
ja
adc
xor
jl
pop
out
ret
cld
jae
cld
out
daa
add
mov
pop
cld
mov
inc
mov
dec
insb
mov
inc
loopne
imul
pop
out
inc
inc
push
adc
aam
and
scas
xchg
sub
inc
mov
inc
lock
lahf
out
jno
les
jno
dec
jmp
sub
pop
mov
rolb
jle
ljmp
cwtl
lret
arpl
inc
inc
lods
enter
add
ror
sbb
sbb
dec
mov
aam
dec
test
dec
aas
outsb
xor
test
ljmp
mov
cltd
sbb
fisttps
mov
les
xchg
stc
cli
in
test
or
fs
add
cmc
mov
les
pusha
jmp
lret
stos
hlt
mov
scas
push
and
sub
es
sahf
pop
and
sub
and
test
xor
popa
cmp
das
rorl
scas
jbe
cltd
imul
test
scas
divb
sbb
ss
les
pop
jns
mov
outsb
dec
dec
jnp
enter
rcll
inc
push
sub
add
push
adc
sahf
inc
fcom
test
shll
call
ja
jns
cmp
pop
test
push
imul
xor
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
fmull
sub
stos
mov
loop
dec
pusha
sub
pushf
pop
pop
pop
loope
lcall
stc
jnp
sahf
fists
sub
cld
push
sbb
ja
in
push
jg
outsb
out
push
dec
cmpl
nop
and
ja
int3
in
fstpl
xor
bound
sub
mov
push
clc
lock
pop
lahf
sbb
mov
inc
in
sub
pop
enter
outsl
movsl
lahf
and
or
in
mov
scas
loope
repz
lods
push
jae
mov
cs
icebp
in
jns
outsb
out
arpl
out
xchg
test
test
ret
addr16
sub
or
sub
adc
rcrl
dec
mov
pop
test
xchg
test
dec
sbb
adc
fucomip
mov
push
daa
pop
cli
sbb
sbb
xor
jmp
cmp
mov
icebp
fldt
push
mov
inc
ret
inc
xchg
outsb
xor
int
pop
push
test
sbb
test
push
loop
fwait
aad
lahf
scas
adc
lret
inc
dec
bound
xchg
dec
sti
push
mov
pop
xchg
pop
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
shl
and
sahf
xchg
sarb
out
ret
xor
cmpsl
mov
jae
mov
dec
bound
jecxz
fcoms
add
andb
shrl
insb
xor
or
xorb
xor
pop
cmpsl
inc
test
mov
test
cmc
mov
cmc
cmp
lea
jg
or
and
jl
pop
adc
mov
movsb
ret
pop
jbe
mov
add
out
in
xlat
mov
repz
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
xchg
and
pop
push
aam
int3
imul
into
mov
pusha
mov
in
mov
es
test
inc
das
sub
mull
nop
mov
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
aas
lahf
es
dec
loope
mov
cmp
in
js
mov
shl
jae
fistpl
ret
call
call
add
stos
sub
mov
and
jecxz
insb
in
and
lea
push
mov
sub
mov
rorb
test
sbb
sub
mov
movsb
shrb
fldt
sti
pop
ljmp
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
loop
cli
cmp
stos
xor
xor
fwait
movsb
pop
repz
cld
mov
pop
jmp
add
mov
xchg
or
not
xchg
clc
test
ss
pop
push
jne
mov
push
sbb
jge
lcall
in
arpl
out
data16
bound
jno
dec
xchg
lcall
jle
pop
push
mov
sub
leave
popf
push
xor
sub
jae
mov
cmp
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
arpl
mov
jg
ljmp
int3
and
xchg
stos
call
fucomp
mov
mov
push
into
inc
dec
pop
movsl
fmuls
ljmp
cmp
pop
sub
outsb
add
dec
adc
push
fsubl
adc
flds
sub
std
and
add
xor
aas
js
mov
orl
add
sarl
or
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
lret
and
insl
sbb
fucomi
hlt
std
mov
sti
and
test
lahf
mov
cmp
mov
popa
dec
mov
faddl
inc
pop
mov
or
jno
adc
cmp
je
inc
mov
aaa
scas
stc
aaa
add
into
call
mov
divb
dec
add
stos
xchg
push
inc
push
and
iret
push
repnz
xchg
sbb
pop
outsb
hlt
sub
sub
cmpsl
push
mov
adc
insl
add
cwtl
mov
sub
lds
fcoml
pop
movsl
bound
fidivrl
jbe
mov
jnp
xor
xor
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
cmp
and
daa
pop
repz
out
rorl
enter
pop
cmp
pop
sub
cli
jecxz
mov
aaa
push
addr16
cmp
test
repz
inc
and
push
jg
shr
jb
aam
addr16
out
jg
lahf
sbb
add
pop
jne
cli
and
sbb
out
mov
mov
daa
filds
insb
lret
mov
and
push
leave
pop
add
sub
and
fnstsw
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
or
test
cmp
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
sbb
rcrl
clc
icebp
jle
scas
pxor
cld
repz
scas
dec
sbb
hlt
repz
insl
das
dec
iret
shl
idivl
sbb
cwtl
jecxz
scas
loope
repz
loopne
js
cs
jae
pushf
xor
xor
mov
push
cmpsb
rolb
ss
push
xorl
pop
je
dec
sub
xchg
vsqrtss
dec
adc
fwait
jge
mov
mov
mov
or
ljmp
fildll
cwtl
cmp
or
add
lock
add
mov
cmc
sub
mov
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
mov
repz
testl
rorl
arpl
jge
les
in
mov
xor
ret
std
les
or
stos
inc
lcall
hlt
inc
les
jecxz
cmpsl
dec
cwtl
loop
dec
fucomi
das
jge
and
jne
push
push
imul
ror
lcall
pop
dec
movups
add
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
test
fcom
mov
cmp
or
cmp
xchg
sub
popf
out
mov
adc
mov
lods
insl
lret
mov
mov
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
sub
mov
xchg
jb
dec
dec
xlat
insb
inc
in
ficomps
fldenv
push
aaa
mov
mov
int
jno
xlat
mov
ror
sahf
jns
loope
pop
lods
push
outsl
sbb
cs
xchg
sub
dec
cltd
jmp
ljmp
lods
into
lret
jb
adc
ret
and
lods
adc
fsubs
jbe
lods
xor
out
mov
fsubrs
leave
or
push
jge
mov
xor
rorb
out
xchg
out
lods
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
mov
cmp
cld
or
lea
cmp
aas
out
lods
imull
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
pusha
aas
js
push
adc
xor
shll
repnz
mov
mov
scas
outsl
lods
pop
imul
out
mov
inc
cmpb
mov
inc
xor
mov
repnz
xchg
test
in
and
int
dec
dec
lcall
out
sbb
push
loope
movsb
fstl
fdivrl
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
cmp
and
daa
pop
repz
out
rorl
enter
pop
mov
pop
sub
mov
xorb
aaa
push
addr16
ret
mov
mov
dec
sahf
inc
adc
inc
cmp
jle
inc
ret
int
dec
adc
cld
xor
sbb
jge
dec
adc
mov
sti
add
imul
sub
and
dec
mov
movsl
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
std
fistpll
shll
jo
test
pop
or
lds
stos
xchg
stos
cmp
cmpsb
fdivrl
outsl
cwtl
lods
inc
sbb
mov
lds
lret
push
lock
inc
xchg
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
xchg
add
mov
push
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
test
fidivrs
cmp
mov
popa
dec
mov
sbb
pushf
rolb
jno
or
lahf
sub
int3
push
xor
push
cmp
add
pop
inc
adc
jmp
decb
aad
es
xchg
mov
aad
insl
and
adc
repnz
stos
scas
popa
lods
fldt
sbb
mov
fwait
xlat
push
movsb
shll
lock
inc
outsb
xchg
xor
divb
inc
movl
fcmove
adc
roll
push
ljmp
rclb
insl
jb
sahf
fsubs
ja
in
jmp
jp
sub
sti
out
xchg
pop
andl
cwtl
fdivs
fistl
roll
sbb
jge
xchg
sub
clc
aam
cmp
loope
pop
xchg
pop
pop
ret
mov
fdiv
addl
and
sub
popf
out
mov
adc
mov
lods
sub
ret
ret
sahf
imul
add
xor
lock
xor
sub
into
mov
sbb
in
xor
jmp
xor
ret
in
xor
adc
sahf
cli
test
push
mov
inc
clc
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
push
sarb
xor
mov
jp
add
cmp
lds
jnp
jb
jle
das
pop
icebp
or
cmp
fs
loop
out
in
adc
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
test
mov
repnz
push
lds
jb
movsb
adc
mov
sub
ljmp
inc
mov
inc
inc
adc
jp
gs
fmul
push
cltd
inc
outsb
mov
sub
ljmp
mov
ficoms
sub
xchg
mov
add
mov
cmp
jp
add
add
mov
sbb
mov
push
xchg
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
cld
dec
inc
fisubrl
orl
push
je
sub
outsl
jmp
dec
test
ss
stos
call
xchg
rcrl
mov
sarl
subl
inc
pop
outsl
roll
mov
sarb
mov
cmc
or
or
sbbl
fmull
pop
mov
or
mov
add
lock
mov
dec
fistpll
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
push
and
adc
sbb
xchg
arpl
out
pop
sub
mov
add
sbbl
mov
push
mov
cmpsl
xor
or
mov
push
lock
mov
ja
inc
frstor
mov
xchg
jp
jmp
mov
dec
xchg
lret
rcll
adc
mov
adcl
jbe
sub
sub
sbb
das
fucomi
test
popf
scas
cmp
push
leave
clc
inc
or
sbb
inc
and
movb
int3
dec
outsb
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
xchg
and
mov
xchg
cmp
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
mov
movsl
push
aad
jbe
mov
inc
cmpsb
ret
scas
arpl
mov
ja
lds
fnsave
jbe
jmp
mov
inc
pop
adc
pop
cmpsl
lret
dec
movsl
push
leave
or
add
cmp
dec
add
mov
rcrb
jnp
mov
mov
ficoms
rcll
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
xchg
adc
and
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
leave
mov
icebp
add
xchg
into
xchg
cltd
add
lcall
mov
lcall
sub
dec
fdivrl
test
mov
movsb
mov
out
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
adc
rcrb
test
ret
shrb
or
dec
adc
xor
adc
and
test
mov
sub
repnz
add
lock
mov
xorb
mov
xchg
ss
ja
fs
dec
sub
pop
mov
notb
dec
xchg
addr16
jmp
in
scas
pop
mov
sbb
adc
stos
adc
fwait
mov
lret
je
mov
ja
call
or
mov
repnz
insl
aam
cmp
dec
les
pop
cmpsb
aad
shll
pop
shr
adc
iret
pop
test
xor
popf
inc
pop
stos
adc
js
add
mov
fwait
push
dec
mov
sahf
dec
dec
aam
inc
addr16
cmp
jns
fcom
push
fdivrs
and
call
cmpsb
inc
cltd
icebp
gs
inc
pusha
leave
mov
sbb
shlb
jb
lods
data16
fwait
dec
shrb
shrb
sub
xlat
cmp
pop
mov
cmp
xchg
sub
outsl
xlat
sti
mov
push
pop
test
cmpsb
frndint
inc
daa
xchg
lret
pop
push
fsubrs
jmp
sbbl
mov
push
lock
mov
ja
inc
frstor
mov
xchg
jp
jmp
dec
cmp
lret
rcll
sbb
mov
cmpsb
xor
jb
fisttpll
sbb
jle
jbe
lods
inc
and
mov
push
test
scas
jne
pop
inc
mov
or
sub
fwait
pop
inc
xor
sbb
fildll
push
sub
mov
mov
sbb
sub
shl
in
out
mov
sub
sbb
adc
fisttpl
inc
pop
dec
jno
cltd
push
push
inc
pop
cli
addl
sub
and
and
cmp
mov
add
ret
cmp
and
mov
test
add
test
push
lock
xchg
xor
leave
add
mov
or
mov
and
xor
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
push
push
cmp
lods
or
add
dec
dec
adc
je
sub
and
xchg
nop
dec
lods
pushf
xchg
cld
xchg
clc
xor
les
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
int
imul
jns
sbb
cmp
push
mov
or
xchg
and
jmp
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
nop
mov
push
pop
jns
shrb
leave
arpl
mov
arpl
cmp
repz
sti
jge
pop
dec
divl
daa
arpl
aam
cmc
mov
in
push
pop
ljmp
cmpsb
sub
dec
mov
push
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
cltd
sub
fisttpl
or
pop
fnstenv
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jecxz
xchg
subl
inc
sbb
lret
lock
jge
inc
iret
shl
ja
std
pushf
out
out
jb
fdivs
push
cmc
daa
notl
pop
jg
stos
push
jecxz
sbb
iret
mov
xlat
pop
pop
adcl
decb
xor
push
inc
je
push
popf
or
je
out
loope
pushf
es
or
mov
les
sbb
cmp
je
clc
jb
mov
xchg
jns
lret
or
in
mov
lock
imul
orps
mulb
daa
cmpsb
cmc
fxch
mov
lds
data16
cmc
imul
notl
ret
push
inc
push
mov
mov
stos
call
cmpsb
movsl
movsl
inc
scas
jmp
outsb
mov
pop
sub
cmp
mov
cli
and
mov
mov
jne
push
xchg
js
test
push
xlat
les
mov
jg,pt
xchg
cld
sbb
cmp
add
mov
hlt
inc
fidivrs
inc
mov
addr16
rcll
test
xor
jp
xchg
imul
jb
cmp
jne
mov
or
mov
add
lock
mov
lret
mov
pushf
sbb
mov
sbb
or
sub
xchg
lods
loopne
mov
pop
mov
adc
sahf
popf
jecxz
fwait
pusha
sbb
mov
rcll
orl
lcall
push
out
jns
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
mov
cmp
rorl
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
sbb
das
fucomi
test
popf
scas
cmp
push
leave
clc
pop
sub
fstpt
or
add
icebp
lret
push
mov
aam
stc
lock
inc
leave
push
stc
arpl
or
and
out
cmp
cmp
mov
ret
cmp
pop
and
add
add
sbb
mov
mov
adc
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
imul
push
cmpsb
outsb
and
cmpsb
shlb
push
stos
lea
movsl
push
mov
xlat
sub
mov
xlat
xchg
movsb
rol
mov
pop
lods
push
xchg
mov
xchg
stos
push
popf
addl
mov
cmpsb
dec
sub
scas
push
and
mov
pop
pop
mov
in
mov
mov
lret
adc
pop
jg
shlb
aam
jl
lret
sti
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
mov
enter
aas
sti
sti
and
sbb
lret
dec
sbb
ja
addl
mov
ret
mov
jbe
sbb
adc
mov
loopne
jl
mov
mov
push
jp
bound
jbe
mov
outsb
fs
sub
mov
movsl
xor
add
mov
imul
cmpsb
cli
lahf
stos
lock
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
leave
cwtl
mov
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
add
enter
rcrb
add
imul
lea
jle
xchg
pop
or
or
stos
mov
or
or
ret
jg
lret
jle
aam
outsl
addr16
call
xchg
out
cmpsl
mov
jg
inc
inc
jle
subl
icebp
or
fnsave
sbb
fidivl
aas
ret
jne
push
pop
add
mov
rcrb
pop
jno
fisttpll
addr16
cwtl
jb
mov
sbb
loopne
iret
jl
in
test
pop
rcrl
mov
rol
inc
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
loope
lret
movb
subb
dec
fsubl
jbe
repnz
les
mov
jne
mov
jb
xor
roll
insb
xchg
xchg
add
sbb
push
cmp
sub
dec
adc
jae
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
popf
add
and
push
xchg
insl
imul
pop
test
lods
mov
rcr
cmpsl
mov
std
xor
cmpsl
jecxz
jns
cmc
mov
cwtl
cwtl
push
mov
push
in
stc
push
push
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
pop
sbb
outsb
or
int
lcall
cmp
in
dec
jg
mull
lods
in
arpl
xchg
mov
aas
stos
shrb
imul
mov
sub
pop
mov
push
mov
ds
jo
add
dec
add
or
leave
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
hlt
or
and
sbb
lret
dec
sbb
push
inc
lea
cmp
ret
inc
jmp
add
sub
pushf
inc
push
push
call
dec
jl
jecxz
fwait
pusha
sbb
mov
mov
ja
sbb
dec
push
decb
adc
xor
in
inc
ficoms
sbb
ljmp
dec
push
lahf
stos
sub
xlat
dec
frstor
imul
xchg
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
fwait
ljmp
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
lcall
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
sbb
xor
push
mov
sbb
and
shlb
mov
mov
arpl
orb
pusha
mov
cmp
pop
movsb
lret
xchg
xor
mov
or
jl
loop
js
or
test
leave
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fdivp
mov
scas
movl
sti
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
mov
xor
popf
aad
inc
gs
iret
movsb
stc
movswl
outsb
jno
sbb
jge
pusha
cmp
das
es
add
mov
mov
in
or
jle
les
test
ret
test
leave
jnp
sbb
xor
sub
adc
xor
popa
movsl
mov
enter
inc
gs
fmul
push
cltd
dec
outsb
mov
sub
ljmp
mov
ficoms
sub
xchg
mov
add
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
insb
cltd
insl
addr16
inc
sub
sub
inc
dec
fsubs
pushf
mov
in
pop
fmulp
xchg
cmpsb
dec
sub
cltd
enter
lods
mov
mov
in
scas
ret
mov
into
cmpxchg
out
jno
insb
out
pop
mov
out
or
js
inc
int3
out
lsl
mov
fwait
jns
or
pop
int3
inc
outsb
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
xchg
and
mov
xchg
cmp
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
xchg
lods
data16
dec
cmpsb
loop
mov
ss
sub
push
xor
dec
jp
jno
subb
lret
fucomp
mov
pop
movsb
lret
enter
and
lods
add
fsubl
cmpsb
aam
sbb
outsl
adcb
loope
pop
and
xor
dec
aam
mov
or
mov
std
push
or
sbb
js
adc
jno
js,pt
lds
push
mov
gs
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
cmp
and
daa
pop
repz
out
icebp
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
push
adc
xor
popf
sbb
inc
addr16
mov
mov
andl
adc
and
xor
dec
movsl
arpl
test
lods
mov
movsl
int
mov
and
mov
fsubs
js
push
outsl
sbb
ja
in
subl
dec
jle
inc
push
mov
test
or
lret
lds
mov
lahf
mov
inc
call
pop
aad
bound
lds
inc
repz
cmp
jl
fadd
xor
hlt
ja
jge
dec
push
lret
scas
out
xor
outsl
add
jb
jmp
push
jnp
enter
mov
inc
lods
fmul
push
cltd
mov
mov
sub
ljmp
mov
ficoms
sub
xchg
mov
add
mov
cmp
jp
add
add
mov
sbb
mov
push
xchg
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
into
xor
sub
and
test
mov
inc
or
push
xchg
add
cmp
repnz
xchg
out
stos
daa
les
imul
in
mov
mov
or
mov
add
lock
mov
dec
fbstp
int3
out
mov
mov
push
and
add
xchg
pop
sbb
cli
orb
jmp
inc
push
pop
add
mov
rcr
test
pop
mov
stos
sub
icebp
fmull
cmpsl
shll
add
cltd
fadds
nop
dec
call
lock
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
iret
cwtl
mov
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
test
mov
popf
jno
insb
negb
mov
push
rorl
cmp
inc
push
fcmove
xchg
iret
ror
jg
daa
daa
pop
mov
sub
jmp
jmp
movl
mov
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
push
sbb
ret
js
test
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
mov
sbb
loop
mov
and
xor
dec
movsl
arpl
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
jg
shlb
jns
inc
mov
test
mov
rolb
jb
lods
xchg
cmpl
jnp
stos
push
xchg
push
pop
mov
and
int
and
push
stc
and
and
or
ret
fimull
mov
stc
xor
or
cmp
jmp
scas
inc
add
testb
fucomi
hlt
std
mov
sti
and
sbb
lret
dec
sbb
ja
addl
mov
ret
mov
test
jl
or
int
rcrl
pop
xor
add
repnz
sbb
mov
mov
clc
inc
mov
jmp
cmp
insb
sub
jb
test
mov
popa
ficoms
sbb
fidivs
orl
adc
and
adc
inc
mov
xor
dec
sub
sub
pop
mov
cs
or
pop
mov
int3
add
int
sub
inc
pop
out
adc
adc
mov
imul
loope
lds
mov
ss
mov
in
sub
cmp
and
pop
adc
mov
inc
insl
out
pop
roll
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
inc
or
dec
push
pop
xor
rolb
add
mov
sbb
sub
stos
mov
push
jmp
call
or
and
loopne
and
mov
sbb
push
adcl
rcrl
in
stc
push
push
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
sbb
sub
mov
mov
dec
mov
xor
push
mov
dec
pop
jo
lret
jbe
addr16
lret
xor
enter
jecxz
mov
mov
dec
mov
inc
sub
fmuls
sti
fbld
daa
or
into
pop
mov
xor
push
push
arpl
fwait
sub
sbb
mov
push
mov
adc
dec
pop
or
fnsave
sbb
fidivl
cmpsl
mov
push
mov
mov
iret
adcl
mov
cmp
decl
add
inc
sbb
stos
jecxz
movsl
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
hlt
mov
arpl
add
jge
fsts
clc
stos
outsl
enter
fbld
pop
xor
inc
cmp
dec
pop
push
bound
fidivrl
orl
add
jns
scas
cmpsb
dec
sub
stos
les
enter
and
xchg
push
dec
mov
loopne
pop
arpl
inc
imul
sub
jno
mull
clc
jo
add
dec
add
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
sbb
sti
mov
in
and
test
pop
mov
cmp
mov
movsl
mov
sahf
subb
dec
pop
mov
js
inc
repnz
mov
test
gs
pop
sub
les
popa
stos
int
dec
mov
jns
dec
inc
popf
popf
imul
lods
dec
sbb
jne
addr16
flds
sub
sahf
rcrb
inc
test
jl
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
xchg
xlat
test
lret
xor
das
push
roll
jl
repz
cmpb
std
daa
push
out
jne
add
js
scas
xchg
scas
out
xor
cld
xor
scas
adc
cld
xor
out
xor
into
test
and
rorb
ljmp
xchg
aaa
xchg
fstl
les
pop
pop
daa
and
fsts
jmp
mov
jae
pop
mov
cmp
or
mov
in
inc
rcrl
add
ljmp
or
int
ret
gs
push
lods
xchg
sub
adc
fldenv
je
inc
and
stc
inc
jecxz
cmp
fidivs
loope
adc
fsubl
ja
in
xor
shlb
sub
movsb
xor
ret
xchg
js
push
dec
call
in
add
sarb
pop
imull
inc
stos
int
cltd
out
push
lock
inc
xchg
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
fwait
add
mov
push
cmp
ds
jmp
std
mov
sti
and
test
sahf
mov
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
and
pop
push
fistl
addb
dec
ljmp
xlat
lods
adc
inc
aas
in
lret
popf
lret
sub
sub
add
xchg
xor
fcmove
adc
cwtl
sub
pop
inc
lcall
cmp
cmpsb
cmp
pop
and
movsl
adc
pop
and
fwait
jmp
stos
xor
mov
fstl
out
daa
dec
lock
jge
inc
iret
shl
ja
clc
ror
ret
adc
ret
or
mov
loopne
sbb
dec
push
xabort
xor
mov
dec
sub
pop
test
ret
rorb
or
iret
scas
dec
mov
fistl
cmp
add
xchg
pop
jp
pop
fwait
pop
movsb
pop
shlb
pop
xchg
pop
cmpsl
fistps
xchg
fwait
std
xchg
cld
fstps
out
jae
mov
rorb
je
add
add
sbb
in
jmp
test
aaa
jns
pop
push
popf
xor
in
mov
cmp
in
test
or
test
fstpt
sub
mov
inc
fimull
mov
pop
test
lods
cmp
dec
inc
leave
sub
scas
inc
fwait
lds
sub
repnz
inc
std
rorb
mov
in
sbb
ret
inc
fsubs
pop
xchg
outsb
mov
ret
inc
jge
imul
stos
cmp
sub
pusha
fwait
insl
add
test
add
sbb
add
andb
js
sbb
mov
mov
adc
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
js
push
lods
cli
fwait
lret
xlat
cmp
and
mov
mov
xor
add
sbb
call
cmpsl
inc
pop
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
and
mov
mov
negb
ret
push
jae
lret
sub
inc
xchg
pop
xor
lods
cmp
out
std
mov
jecxz
xor
xchg
nop
pushf
inc
cld
xor
stos
add
or
and
or
mov
xchg
fwait
loopne
test
and
and
sar
mov
pop
inc
inc
insl
mov
test
add
ror
sbb
sbb
mov
aam
dec
test
dec
aas
outsb
xor
test
ljmp
mov
leave
sbb
fisttps
mov
les
xchg
stc
cli
in
test
or
test
cmp
sub
mov
mov
dec
mov
xor
int3
test
pop
mov
sub
cmc
cwtl
fwait
and
in
push
mov
addb
xchg
mov
filds
inc
out
push
mov
out
movsl
pushl
arpl
cli
sbb
cld
sub
divb
std
inc
push
jns
lret
sbb
in
jp
movsl
iret
mov
push
lock
mov
bound
test
mov
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
cmpl
arpl
sahf
je
popf
mov
cmp
jp
add
add
mov
sbb
mov
push
xchg
xor
mov
cld
mov
shl
jmp
scas
lods
pop
imul
push
xlat
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
lock
mov
data16
mov
in
in
xchg
setge
mov
mov
and
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
mov
test
stc
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
cmp
and
daa
pop
repz
out
icebp
mov
xchg
int3
push
sub
cmp
pop
push
lds
imul
mov
add
and
pop
push
adc
inc
dec
daa
jp
or
xor
or
in
test
icebp
scas
xor
sbb
rolb
out
inc
mov
and
div
push
add
pop
icebp
cmpsl
dec
inc
orb
and
dec
movl
dec
mov
dec
push
or
pop
mov
into
popf
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
in
mov
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
mov
pop
jge
jo
mov
pop
jb
add
dec
sbb
add
or
push
mov
out
pop
int
inc
adc
jb
mov
cmp
iret
push
mov
jo
repnz
pop
shrl
loop
je
mov
xchg
push
adc
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
cmp
pop
test
push
pop
add
rcr
xor
mov
cmp
jp
add
mov
jge
push
sti
cmpl
ret
leave
movsl
mov
test
and
stos
popf
scas
lods
fidivrl
movsl
sbb
call
mov
idiv
or
bnd
fcoms
inc
out
push
or
adc
mov
sub
xchg
mov
js
xchg
xchg
inc
out
aaa
popa
lods
ret
lea
jmp
jo
movsl
scas
rcrl
adc
cwtl
add
add
repz
testl
xchg
push
mov
jbe
iret
js
inc
mov
add
mov
sti
sti
and
aas
lahf
es
jns
sbb
fdivs
mov
imul
inc
icebp
inc
pop
sbb
and
rdmsr
dec
mov
loop
int3
pusha
adc
pop
jecxz
mov
loop
sbb
daa
xor
enter
mov
sbb
mov
xor
mov
mov
and
push
ja
push
aad
test
mov
pop
cmp
flds
adc
cld
stos
arpl
lds
pop
adc
jl
sbb
mov
adcl
jbe
sub
sub
pop
mov
fnstcw
scas
in
mov
jmp
pusha
xor
jle
mov
and
mov
addb
mov
xchg
mov
imul
outsl
dec
call
scas
push
jmp
cmp
mov
sbb
dec
loope
xor
mov
cwtl
cltd
data16
sbb
mov
in
scas
int3
fwait
lds
stos
xchg
mov
jnp
adc
mov
mov
cld
mov
or
popa
ret
push
sub
shrl
loop
iret
sbb
daa
adc
nop
test
decb
aad
push
fmul
adc
aas
in
aad
insl
ficomps
fldcw
stos
lea
push
gs
push
enter
cmc
movsl
testb
in
aam
dec
and
pop
cmpsl
lret
dec
sbb
adc
push
mov
setbe
stos
pop
bnd
xor
or
dec
mov
sarl
pop
es
jo
sub
cmc
cwtl
sbb
xlat
dec
les
jle
dec
daa
or
andl
das
rclb
jmp
cmc
fdivrs
push
in
xor
and
jmp
cmpsb
jae
int3
pop
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
cltd
sbb
xor
jns
cltd
mov
add
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
mov
xor
ret
jbe
pop
xchg
xchg
adc
in
cmp
popf
addb
repnz
gs
xchg
jmp
dec
stos
int3
mov
scas
shlb
sub
fs
sbb
jge
movnti
into
ret
and
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
popf
xchg
mov
gs
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
shlb
cmpb
je
test
loope
and
arpl
adcl
aad
cmpsb
ret
test
inc
inc
and
add
inc
and
adc
xor
in
inc
cltd
aas
ja
int
popf
mov
icebp
xchg
jle
sbb
roll
insl
cmc
imul
test
icebp
testb
dec
inc
add
dec
mov
jno
push
popf
mov
mov
push
dec
in
clc
popa
mov
push
clc
mov
jns
gs
mov
pop
push
inc
pop
dec
out
js
orl
adc
scas
hlt
mov
hlt
and
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
mov
test
stc
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
cli
jecxz
mov
aaa
push
addr16
ret
xchg
inc
fstpt
dec
sahf
dec
movsl
or
pop
inc
inc
movsb
gs
lahf
jg
dec
push
sahf
sub
sahf
fisttps
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
ror
sub
inc
fs
push
cmp
sub
cmc
sbb
std
fistpll
shll
jo
test
pop
or
lds
stos
xchg
stos
cmp
movsb
push
jmp
fwait
lds
popf
ret
pop
xchg
push
mov
pusha
mov
popf
enter
sarb
or
cmp
call
push
iret
sbb
mov
pop
fidivl
add
xchg
inc
add
inc
js
mov
mov
pushf
pusha
cli
and
push
movsb
dec
inc
aaa
test
out
stos
pop
or
les
rcrb
scas
popf
stos
mov
mov
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
movsb
out
mov
adc
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
scas
pxor
cld
repz
cwtl
or
add
cmc
jl
das
dec
iret
shl
idivl
outsl
outsl
insb
incl
out
dec
loopne
stc
mov
or
shrl
jmp
arpl
enter
or
and
push
orb
mov
mov
jl
push
or
jns
decb
lret
mov
jb
mov
mov
mov
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
jge
add
lods
cmpsb
fdivs
pop
mov
lods
xchg
sub
adc
fldenv
je
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
ret
pop
push
adc
insb
xor
or
adcl
pop
xchg
enter
cmp
pop
arpl
sahf
pop
mov
out
xchg
xor
inc
fwait
leave
mov
and
adc
arpl
pop
int
or
fsubs
pop
and
cmpsl
test
xchg
cld
inc
xchg
adc
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
push
add
add
andb
js
sbb
mov
mov
adc
mov
lods
insl
lret
mov
mov
ret
push
jmp
adc
add
inc
inc
or
stos
adc
dec
inc
arpl
decb
pop
cwtl
jl
imul
inc
xchg
lods
hlt
xchg
sub
vandnps
push
mov
mov
jne
fcmovnu
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
mov
xchg
sar
cmp
add
cmp
lds
fdivrl
jb
jle
das
pop
icebp
or
cmp
fs
loop
out
in
xor
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
outsl
addr16
push
mov
sub
mov
bound
lahf
js
fstl
cld
lods
jnp
outsb
repz
dec
and
adc
mov
pushf
pop
pop
xor
jbe
ss
sbb
adc
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
cmpsl
mov
iret
ret
clc
sti
mov
stc
clc
jp
add
cltd
sub
adc
lods
cmpsb
sbbb
fs
in
push
mov
call
imul
dec
and
outsb
and
bound
and
adc
ljmp
xchg
adc
push
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
fs
add
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
and
mov
adc
mov
shr
or
xchg
mov
lods
addr16
mov
leave
adc
sbb
pop
dec
fsubs
addr16
fcompl
xchg
dec
push
icebp
test
push
addl
mov
pop
mov
test
scas
xchg
add
sti
mov
popa
push
test
sahf
mov
cld
lods
lcall
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
mov
jns
ret
push
fcompl
jne
jns
lds
nop
lds
push
push
dec
je
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
push
nop
dec
and
pop
lret
test
lods
scas
das
test
add
sahf
pop
and
mov
lret
in
inc
lret
mov
push
add
les
mov
out
xchg
call
adc
add
mov
popf
stos
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
js
xor
cmpb
jno
adc
test
sbb
mov
mov
mov
mov
mov
pop
and
arpl
mul
loopne
ret
loopne
pmullw
dec
dec
inc
lahf
lret
jecxz
mov
mov
jae
aaa
add
sbb
cmp
cs
mov
jo
lret
test
scas
je
leave
dec
addr16
out
lahf
push
xor
bound
dec
jbe
jmp
mov
in
movsb
mov
jecxz
xor
xchg
dec
call
lds
sti
pop
xchg
pop
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
add
and
test
arpl
add
inc
push
sbb
xchg
xchg
jmp
popa
shll
orl
rorl
fs
push
dec
xchg
mov
shll
roll
sub
sbb
cmpsb
jecxz
dec
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
lcall
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
stc
fildll
sti
mov
push
adc
mov
daa
negl
push
sub
inc
fsubl
cmp
std
fwait
mov
mov
xor
add
test
fildl
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
push
lock
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mulps
adc
ret
scas
lods
fisubrl
sahf
xchg
mov
mov
inc
sbbb
sbbb
dec
repnz
sub
mov
repnz
sub
sub
adc
jmp
shrl
push
sbb
mov
xchg
xchg
cmp
inc
mov
enter
dec
pusha
push
dec
add
and
je
mov
cmpsl
adc
pop
sub
je
pop
lods
addr16
add
mov
add
mov
cwtl
inc
data16
add
add
subb
cs
lock
dec
jg
add
outsl
andb
or
faddp
pop
ret
pop
pop
adc
test
pop
mov
sti
mov
push
roll
pop
movsl
adc
orl
dec
sbb
jecxz
test
sbb
sub
mov
movsb
shrb
sbb
pop
repz
movsb
mov
rcr
mov
and
mov
and
sbb
dec
movsl
or
sbb
fistl
fimull
push
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
dec
mov
pop
repnz
mov
negb
ret
push
jae
lret
sub
inc
xchg
pop
xor
lods
ds
pop
lods
out
bound
out
data16
insb
ss
inc
sbb
sbb
sbb
fisubrs
adc
ss
add
and
push
inc
cwtl
ja
sbb
daa
mov
mov
ret
loopne
mov
popf
ljmp
and
pop
cld
aas
pop
dec
dec
pop
lret
adc
dec
pop
push
cmp
popa
ds
mov
xchg
jmp
jnp
inc
das
mov
pop
fcomps
mov
mov
jne
fcmovnu
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
mov
xchg
sar
cmp
add
cmp
push
xchg
ret
sahf
sahf
xchg
sbb
js
sbbl
fnsave
add
jns
in
and
bsr
adc
cmc
jmp
cmp
scas
loopne
stos
or
call
mov
jnp
or
in
mov
pop
fdivrl
sti
icebp
cmp
jg
les
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
cmp
movsl
pop
in
rclb
jns
pop
mov
test
add
inc
sbb
imulb
sbbb
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shrl
xor
pop
pop
pop
loope
ljmp
sub
mov
fstl
movsb
xchg
xor
dec
inc
sub
sub
inc
pop
add
addb
loopne
pushf
in
add
leave
dec
and
cmpsb
fcoml
fsubs
and
mov
jnp
xor
xor
repnz
jg
mov
mov
in
sbb
add
or
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
cmp
and
daa
pop
repz
out
sarl
out
in
fisttpll
imul
jo
insl
das
fidivl
adc
fs
sub
aad
cmp
or
in
push
jne
push
sbb
fildll
aam
icebp
aas
out
scas
test
pop
dec
ljmp
mov
lcall
mov
fs
mov
stos
jno
dec
xor
lods
dec
adc
inc
lret
push
fwait
push
adc
sbb
nop
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
cmp
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
dec
sbb
mov
or
in
jle
subl
icebp
or
inc
aas
stos
ret
ret
mov
sbb
add
mov
mull
aam
jae
push
addl
and
sbb
imul
jne
jp
add
add
mov
sbb
mov
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
mov
xchg
add
sti
and
cmp
in
and
fucom
jnp
popf
enter
push
jo
sti
nop
adc
es
clc
mov
add
push
test
dec
je
mov
aam
pop
aam
mov
lret
in
mov
mov
or
mov
add
clc
test
mov
dec
fistpll
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
push
and
adc
sbb
xchg
arpl
out
pop
sub
mov
add
sbbl
mov
push
mov
out
sbb
sarb
sti
stos
rcrl
fisubs
test
fbstp
je
pop
iret
sbb
rcr
loopne
aas
push
cwtl
sub
xchg
add
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
and
test
xor
movl
fld
out
daa
inc
ret
rolb
scas
cwtl
cld
inc
jge
pushf
repz
out
lock
mov
xor
je
fidivl
pop
push
sub
inc
fsubrl
cmp
std
fwait
mov
mov
xor
add
test
fildl
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
inc
sbb
imulb
sbbb
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
jae
popf
pop
ljmp
xlat
mov
lock
cmp
mov
adc
dec
mov
xor
push
dec
add
add
xor
repnz
movsb
or
enter
sti
add
pusha
test
ficoms
jg
xor
mov
inc
or
es
or
clc
or
fwait
push
dec
mov
and
adc
xchg
adc
and
insl
out
pop
aad
jns
mov
call
sub
cwtl
xor
into
add
xchg
and
xor
arpl
aaa
fs
sub
stos
iret
jp
sbb
es
js
and
push
inc
add
mov
push
sbb
xchg
rcr
push
xor
push
cmp
sub
mov
decb
aad
push
arpl
push
lds
and
and
jo
cltd
mov
sub
xlat
dec
frstor
imul
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
sub
add
imul
cmp
stos
xor
xor
mov
mov
lcall
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
test
das
inc
fidivrs
sahf
lret
xchg
lock
call
loope
lahf
stc
cwtl
shrl
pop
xchg
orb
fs
sub
stos
iret
mov
sbb
mov
and
sub
js
inc
shlb
int
insl
xchg
in
test
jecxz
movsl
add
rcrl
in
stc
push
push
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
fs
add
addb
sbbl
hlt
mov
rolb
jb
pop
push
hlt
xchg
push
jnp
xchg
mov
ss
dec
lds
mov
ljmpw
pop
jb
push
mov
xchg
mov
pop
repz
testl
xchg
push
mov
jbe
into
js
inc
mov
test
sti
std
mov
sti
and
sbb
lret
dec
sbb
lea
cmp
shll
rcrl
or
jmp
mov
rcrl
pop
xor
add
data16
xor
dec
stos
cmp
rol
pop
or
jl
loop
js
or
lahf
addr16
aad
inc
sbb
sbb
lds
mov
push
push
clc
sub
fimuls
xchg
les
xchg
stc
cli
in
test
or
test
cmp
sub
mov
addb
rcrb
xchg
outsb
push
inc
sbb
mov
push
lahf
jle
mov
sbb
scas
pop
push
in
pop
popf
mov
xor
roll
hlt
mov
pop
outsl
sub
hlt
idivl
pushf
out
add
jae
pushf
lret
scas
loope
sti
jnp
lcall
test
inc
add
xlat
xor
mov
mov
push
push
rolb
ss
push
andl
nop
mov
xlat
fdivs
stc
rolb
test
pop
lahf
jg
dec
lds
xor
sbb
jge
dec
adc
mov
sti
add
imul
sub
and
dec
mov
movsl
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
std
fistpll
shll
jo
test
in
andb
mov
cmpsb
dec
sub
and
fwait
lods
ss
pusha
fcmove
pop
rcrb
test
and
mov
push
or
cld
add
movsb
out
inc
mov
inc
repz
testb
jnp
out
dec
call
cmp
subl
pop
mov
sub
gs
add
arpl
lret
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
adc
mov
sub
mov
iret
add
in
mov
lock
ljmp
arpl
and
sbb
cld
sub
push
mov
insl
xchg
imul
rcll
and
xor
or
pop
cmp
iret
and
adc
inc
cmp
std
bound
sub
jno
sahf
xchg
mov
jae
test
sbb
lods
xchg
stos
lds
push
icebp
add
popa
lods
xor
cmpsl
adc
or
mov
and
cmp
or
add
jmp
rcll
test
cmpsb
js
ud1
xor
inc
jmpw
mov
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
int
imul
imul
test
cs
call
add
nop
out
xor
push
cmp
or
mov
outsl
mov
scas
mov
mov
aaa
pop
jb
sbb
stos
insl
lods
mov
mov
pop
push
ljmp
xchg
outsl
mov
cmc
movsl
dec
sbb
lods
fldcw
data16
in
xor
fisttpl
add
jp
add
cmp
lds
pop
cmp
das
pop
icebp
or
cmp
fs
loop
out
in
pusha
adc
mulb
testl
leave
xchg
je
fidivrl
jbe
pop
lret
scas
out
xor
jae
fdivrp
scas
jp
rorl
out
lret
mov
sbb
leave
rclb
into
sbb
mov
adc
mov
push
mov
mov
iret
adcl
mov
cmp
decl
add
inc
sbb
stos
jecxz
movsl
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
xchg
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
insl
lods
xchg
shl
dec
jmp
lahf
and
sub
jmp
ficompl
ficoms
sti
lret
lea
insb
out
pop
mov
push
roll
inc
sbb
cmp
imul
cs
mov
pop
out
js
mov
sub
push
mov
shrl
jmp
or
mov
rcll
in
cmp
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
daa
nopl
sbb
arpl
adc
test
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
lahf
lret
jecxz
mov
lock
ret
push
push
jle
sbb
ljmp
adc
int3
inc
mov
and
shrl
repz
aaa
stc
push
pop
fldt
sahf
jbe
and
inc
cmpsb
mov
shrb
icebp
push
mov
mov
repnz
daa
jne
insl
bound
sub
rsqrtps
ret
mov
sbb
in
js
fidivrs
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
fists
pop
pop
mov
xor
ret
call
lods
xchg
es
pusha
jae
les
xor
push
cmp
add
outsl
hlt
jmp
decb
push
insb
jne
inc
into
push
mov
insl
cmc
imul
test
push
stos
test
imul
movsl
mov
ja
lds
imull
sahf
jnp
popa
jbe
pop
xchg
sub
and
jge
add
andb
mov
mov
enter
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
pop
dec
push
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
repnz
daa
pop
repz
out
sarl
out
push
test
xchg
add
or
mov
js
mov
xchg
insb
pop
sbb
mov
and
test
pop
arpl
int3
push
xor
jo
and
out
inc
sbb
cmpsl
push
sahf
add
sub
push
mov
jae
shlb
mov
pop
or
lods
xor
into
ffreep
pop
xor
fisttpll
fists
les
nop
mov
jno,pn
insb
test
mov
push
mov
xchg
add
pop
repnz
mov
push
jns
dec
int3
std
push
cmp
sbbl
inc
fisttpll
jnp
popf
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
sbbb
mov
hlt
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
jl
xor
cmpb
je
test
push
movsb
mov
dec
push
dec
orl
or
xchg
cs
mov
mov
mov
das
orb
jmp
negl
stos
pop
rorl
arpl
cwtl
sbb
in
aas
dec
or
sbb
dec
mov
mov
cs
call
pop
xor
and
push
dec
and
dec
cmp
aaa
jnp
popf
fnsave
cmpsb
loop
lret
add
mov
and
test
scas
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
enter
jecxz
sahf
les
pushf
jne
jnp
inc
mov
add
adc
mov
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
adc
rcrb
test
ret
shrb
or
dec
adc
xor
adc
and
test
mov
sub
repnz
add
lock
mov
xorb
mov
xchg
ss
ja
fs
dec
sub
pop
mov
notb
dec
xchg
addr16
mov
pop
push
ljmp
jmp
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
jecxz
adcl
mov
cld
jp
add
cmp
lds
cld
cmp
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
jno
jmp
mov
repz
push
mov
or
daa
mov
mov
mov
mov
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
mov
mov
or
or
push
push
lds
adc
pop
iret
inc
pop
and
iret
push
enter
add
sahf
xchg
mov
mov
inc
or
jle
xchg
test
mov
push
pop
sahf
xchg
mov
adc
bound
push
xchg
xchg
mov
rorb
push
xchg
and
pop
jno
xchg
sbb
lods
jne
pop
les
mov
sbb
add
cld
sbb
arpl
nop
adc
push
mov
lret
jns
add
test
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
repnz
daa
pop
repz
out
icebp
mov
xchg
mov
rorb
add
inc
insb
jmp
inc
fs
imul
aaa
sbb
push
push
push
lds
sbb
mov
orl
mov
test
cmp
pop
lret
cmp
mov
test
xor
add
dec
or
lret
movsl
gs
or
pop
vxorps
mov
cmpsl
pop
sub
adc
lcall
insl
mov
add
imul
push
clc
mov
jns
gs
jmp
jmp
les
dec
dec
push
adc
sbb
scas
cmpsl
bound
mov
loop
push
xor
data16
rcr
pusha
inc
dec
je
jge
leave
xchg
mov
inc
jecxz
call
stos
test
mov
bound
lahf
js
fstl
cld
xchg
xchg
cmp
push
add
xchg
es
lods
cltd
mov
movsb
iret
out
xor
ds
and
dec
and
add
xor
mov
fldt
cmc
adc
xor
shrb
pop
xchg
pop
test
test
rolb
mov
cmp
push
push
xchg
mov
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
push
lret
mov
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
in
add
mov
push
sub
mov
adc
cmp
pop
iret
fxtract
cmc
jge
outsl
dec
push
sti
in
lret
inc
pop
sub
loope
call
xlat
lea
out
out
enter
int3
pop
sub
pushf
add
jmp
add
and
pusha
pop
add
mov
sbb
lds
iret
jp
incb
mov
cmp
dec
int
jle
pop
mov
add
add
stc
into
inc
lahf
or
mov
adc
pop
shlb
or
lds
or
stos
dec
mov
loopne
jno
lds
push
cld
sub
mov
mov
adc
mov
mov
arpl
or
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
arpl
jne
ret
jnp
scas
inc
repz
push
mov
shl
ja
std
outsl
addr16
mov
fsubrl
ds
or
mov
rcll
in
cmp
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
mov
sbb
arpl
adc
test
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
mov
adc
adc
mov
sbb
mov
sub
jb
pop
adc
inc
lret
jp
and
lods
add
mov
ret
loope
push
orb
gs
sub
outsb
add
dec
adc
push
fsubl
adc
flds
sub
in
jge
adc
push
enter
popa
add
inc
dec
adc
add
dec
rorl
push
cmp
inc
jmp
push
js
test
hlt
stos
insl
fcomp
movswl
jmp
std
mov
sti
and
sbb
lret
dec
sbb
push
inc
lea
cmp
inc
fstpt
fwait
idivl
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
in
popa
push
push
rcll
daa
push
rcll
cmpsl
adc
mov
in
fsubrl
fwait
scas
cmc
stc
mov
inc
fistpl
call
fisubl
scas
fildll
out
inc
mov
xor
xchg
outsb
mov
pop
sub
testl
test
sub
movsb
or
pop
aad
leave
cltd
and
inc
fdivrl
jecxz
fistps
test
test
repz
rcrb
in
cmp
mov
and
adc
xchg
adc
and
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
adc
or
andb
jbe
mov
mov
bound
or
push
pop
movsl
pop
mov
and
or
inc
ret
int3
hlt
sbb
add
jo
and
stos
or
mov
push
jbe
dec
mov
insb
push
arpl
push
lds
mov
xchg
pop
xchg
pop
sbb
test
out
and
lret
add
push
sahf
jg
pusha
jbe
lods
outsl
fsubl
mov
shlb
repz
loop
out
outsb
mov
inc
xchg
push
es
inc
jb
sahf
pop
and
iret
test
ds
push
pop
mov
and
cld
mov
xor
adc
xchg
jmp
pop
dec
adc
ds
push
out
add
mov
jae
pushf
sub
adc
fadds
aaa
dec
fidivrs
pop
shrl
xlat
fbstp
pop
push
dec
cmp
loopne
sbbl
and
test
outsl
loope
inc
jne
mov
jmp
cmp
dec
and
xchg
push
sbb
sub
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
mov
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
repz
testl
loope
lret
movb
sbb
or
stos
fs
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
sub
repz
mov
shll
jecxz
pop
std
and
push
lret
inc
mov
aas
fisubs
mov
pop
adc
cmpsl
test
xchg
cmp
xchg
adc
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
adc
mov
lods
insl
int
jg
cmp
mov
test
pop
fwait
jl
push
and
shlb
out
inc
mov
or
imul
mov
adc
outsb
xor
and
lods
fldt
sbb
mov
xchg
out
jno
xchg
mov
dec
inc
mov
and
push
outsl
xorl
or
shl
je
sub
out
fldenv
out
dec
dec
cltd
push
push
xchg
push
es
test
pop
pop
xchg
jg
mov
repnz
push
rcrb
or
xor
out
xor
mov
int
inc
xchg
inc
adc
lds
sbb
lea
mov
xchg
std
test
and
xchg
pop
ds
int3
fwait
nop
xchg
xor
gs
rcll
add
ds
sbb
movsb
mov
or
xor
sub
js
test
or
aas
test
fildl
or
ljmp
sbb
jns
rclb
jle
jmp
pop
adc
sbbl
dec
adc
pop
or
jbe
sub
mov
mov
add
pop
mov
push
mov
xchg
pop
mov
gs
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
mov
sub
cwtl
mov
dec
movsb
aad
xor
xor
mov
mov
sti
jge
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
and
xchg
mov
xchg
rorl
gs
dec
inc
pushf
mov
jg
imul
xor
dec
mov
mov
add
aas
or
sub
aad
addb
fcompl
pop
ret
mov
mov
movsb
popf
divb
fstl
test
clc
lea
in
lds
xchg
mov
mov
sub
pushf
ret
pop
mov
mov
sbb
xor
in
scas
jge
mov
mov
ds
mov
loope
fisubrs
cltd
jge
xor
jbe
lods
push
lods
jnp
ja
in
subl
imul
out
fldcw
pop
cltd
enter
pop
push
aam
push
es
dec
push
lea
test
imul
sbb
test
xor
int3
push
lret
and
js
xchg
adc
sbb
xchg
mov
inc
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
into
cmpsl
stos
shll
inc
xchg
in
mov
sub
mov
hlt
push
aas
push
xorl
xor
mov
dec
ficomps
test
push
data16
test
jns
popa
and
adc
and
mov
in
push
mov
scas
mov
int3
stc
dec
push
out
and
lret
repz
mov
add
sbb
nop
lret
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
bound
repnz
repz
nop
xchg
lahf
push
cwtl
lock
sub
dec
outsl
idiv
into
iret
cmp
cs
push
out
orb
xchg
bnd
push
lcall
mov
out
fldl
mov
popf
arpl
loopne
add
pushf
add
sbb
fs
sub
sbb
add
pop
daa
fwait
jge
lret
cmp
cmpsb
fmul
pop
inc
fldenv
test
imul
out
hlt
movsl
mov
jg
add
mov
fmul
inc
sub
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
shll
in
nop
rolb
mov
cs
stos
push
addl
lds
sub
in
pop
lahf
cmpsb
bound
pusha
dec
lods
fmull
outsb
adc
lret
rorl
les
mov
cmc
jge
inc
stos
rol
repnz
cmp
mov
in
aaa
sbb
mov
pop
xchg
cld
sbb
sub
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
sahf
mov
cmp
mov
popa
dec
mov
into
aaa
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
adc
ss
sahf
add
mov
push
mov
push
cmpsb
lret
outsb
mov
in
and
push
scas
sti
sbb
sub
sbb
out
mov
pop
lret
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
sahf
mov
or
push
cli
cmp
stos
xor
xor
mov
mov
sbb
jo
mov
pop
jb
add
xchg
js
std
decl
mov
pop
push
pushf
jmp
jno
sbb
ss
in
cli
loopne
xchg
jle
leave
sahf
xor
jg
lahf
lods
xlat
xor
pshufw
rclb
push
dec
pop
mov
mov
sbb
push
ret
es
andl
leave
bound
test
cmpl
cmpsl
enter
mov
xchg
xor
daa
sub
push
dec
xchg
mov
js
cmpsl
xor
fsubrl
cltd
mov
insl
movsl
imul
sub
pop
test
lock
fcmovnbe
data16
sub
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shlb
xchg
mov
fcompl
aad
xor
xor
mov
mov
cli
jge
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
dec
push
jbe
xor
inc
pop
inc
iret
movsb
sbb
mov
mov
ljmp
repz
inc
pop
ljmp
ret
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
int
add
test
nop
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
loope
lret
movb
subb
dec
fsubl
stos
inc
repnz
lds
mov
jne
mov
jb
xor
das
cmpsb
repz
test
shrb
cmp
and
add
push
hlt
push
ljmp
jecxz
cmove
add
sbbb
std
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
add
call
xlat
sbb
and
aas
lahf
es
jns
hlt
jl
out
mov
insl
dec
xchg
pop
pop
lcall
xor
fsubl
fsubrs
dec
movl
lahf
fs
push
add
inc
add
add
fsubrl
ret
dec
lret
cltd
adc
sub
adc
push
test
mov
int
jbe
or
bound
cmp
add
xchg
inc
scas
mov
ret
rcll
pop
mov
popf
leave
push
dec
jecxz
lcall
sbb
cmc
cwtl
mov
lret
cmp
lock
pop
lahf
add
sahf
sar
es
dec
xor
mov
shll
sarb
push
popf
mov
test
incl
gs
daa
inc
popf
cmp
cmp
push
test
add
xchg
cmp
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
jmp
sbb
mov
jl
mov
xor
insb
xor
iret
movsl
mov
shrb
cmp
mov
ss
int
inc
jno
pop
cmp
xor
and
scas
adc
sarl
adc
cmp
lret
or
xchg
mov
cmp
pop
lahf
enter
lods
xchg
das
cmpsl
int3
push
mov
mov
into
mov
bound
jne
bound
das
push
roll
dec
inc
cmp
mull
mov
rcrb
xchg
xchg
or
fwait
out
jp
in
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
rolb
pushf
inc
lock
or
and
or
mov
push
mov
frstor
sub
xlat
jmp
call
fadds
push
sbb
inc
ja,pt
lret
arpl
sahf
rcrb
mov
js
or
icebp
aaa
mov
sbb
jge
les
cmpsl
mov
dec
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
int
lcall
sti
addb
dec
xorl
lods
push
sub
or
and
iret
xchg
adc
pop
and
mov
repz
inc
das
push
inc
stos
das
and
or
das
adc
les
cmp
pop
int3
inc
dec
mov
dec
mov
jns
out
mov
out
loopne
js
rorl
into
inc
lret
loop
movsl
fists
aaa
imul
lock
or
movsb
jo
mov
mov
sarb
cmpsl
pop
or
fldcw
leave
inc
rcl
and
arpl
vhaddpd
mov
test
xlat
lea
fsts
inc
pop
cli
add
inc
mov
test
sub
adc
movsl
lret
lcall
sbb
std
fistpll
shll
jo
test
pop
or
lds
stos
xchg
stos
cmp
lds
movsb
push
sub
jns
movb
gs
mov
mov
pop
and
jp
sahf
repnz
inc
std
rorb
mov
in
es
rolb
scas
out
cmp
out
mov
fsubrp
cmp
out
out
fs
subb
repz
std
dec
data16
adc
or
dec
sbb
and
inc
rcl
xor
cmpl
dec
rcrb
pop
jno
fisttpll
addr16
inc
jb
mov
sbb
loopne
iret
jl
in
test
pop
rcrl
mov
rol
inc
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
mov
mov
enter
mov
repnz
sub
in
and
sahf
add
cmp
dec
sub
lods
pop
out
mov
pop
movsb
lret
push
leave
jo
sub
icebp
fwait
mov
rcrb
mov
xor
inc
cmpsl
xor
loopne
js
sbb
sbb
call
push
out
aaa
jge
outsl
arpl
cli
push
push
or
pop
xchg
push
mov
cltd
cmpsl
lock
je
fwait
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
mov
mov
cmc
mov
and
xor
les
jg
jae
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
std
shlb
arpl
xor
dec
and
inc
inc
movsl
in
mov
jecxz
in
dec
push
or
mov
pop
into
popf
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
pushf
mov
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
lahf
movsb
mov
xchg
adcb
jmp
testl
les
iret
xlat
hlt
jbe
inc
fmuls
pop
jae
inc
pop
dec
aaa
xor
out
cmpsl
mov
jg
repz
out
xor
into
add
and
rolb
push
aaa
addr16
cs
lock
dec
jg
add
outsl
andb
or
faddp
pop
ret
mov
inc
pop
ljmp
fildll
cwtl
cmp
or
add
lock
add
mov
cmc
sub
mov
icebp
cli
jp
ret
push
fcompl
jne
jns
lds
nop
lds
clc
mov
inc
lcall
jle
dec
xor
ljmp
repnz
bound
sub
sub
dec
pop
fsub
mov
rcrb
sbb
pop
lock
dec
cwtl
scas
pop
jbe
lods
js
xchg
aad
mov
inc
inc
push
pushf
xor
out
pop
movsb
movl
xchg
dec
xlat
fcompl
repz
mov
inc
repz
sti
adc
nop
lahf
fadds
mov
and
cmp
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
shlb
cmpb
je
test
jle
jl
out
mov
loope
sub
push
mov
mov
je
pop
adcl
jb
sbb
mov
xchg
js
mov
repz
sbb
rolb
fistpll
mov
or
pop
into
push
ficoms
lret
cld
rcrb
sbb
aad
pop
dec
cmp
mov
adc
lret
jle
fs
movsl
dec
out
pop
rcrl
mov
adc
daa
dec
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
fidivrl
das
pop
icebp
or
cmp
fs
loop
out
lods
shrb
das
adc
sbb
pushf
lcall
hlt
jbe
scas
out
mov
jl
xchg
jbe
test
or
fidivrs
pop
loop
push
je
in
loop
dec
andb
or
les
das
outsb
add
lock
mov
loop
enter
xchg
dec
rcrb
pop
jno
fisttpll
addr16
inc
jb
mov
sbb
loopne
iret
jl
in
test
pop
rcrl
mov
rol
inc
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
roll
arpl
jge
les
in
mov
xor
ret
icebp
shlb
jne
add
mov
lods
notb
push
aam
movsb
ljmp
icebp
cmp
jne
pop
movsl
inc
add
add
sbbl
cmp
es
dec
xor
and
adc
mov
call
mov
mov
or
pop
fsubl
sbb
jle
sbb
es
dec
fistpl
add
je
mov
or
outsb
stos
sbb
cs
add
stos
test
dec
push
nop
push
mov
push
jl
mov
stos
sbb
cmpsl
mov
nop
mov
mov
mov
and
adc
arpl
movsl
mov
fdivs
sbb
mov
xchg
adc
xor
lods
xchg
adc
dec
jno
pop
mov
adc
imul
and
call
ret
sbbl
divb
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
sub
sbb
mov
fwait
push
dec
mov
mov
ret
and
sahf
xchg
sarb
jae
add
and
mov
xchg
aas
movsl
dec
fistl
sbb
xor
insb
dec
xchg
xor
aas
scas
or
es
pop
cs
add
and
push
lret
inc
ret
mov
pop
or
lcall
jg
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
and
cltd
lret
lcall
sbb
mov
push
adc
hlt
stos
arpl
lds
sbb
insb
repnz
fdivrl
push
lea
xlat
adc
dec
mov
roll
pop
and
mov
in
jge
adc
push
lret
aaa
jno
xor
scas
add
ret
jg
out
and
lret
ret
leave
xchg
iret
shl
xor
xchg
out
mov
push
fdivrs
cli
jno
inc
js
inc
push
leave
rorl
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
mov
dec
fisubs
fsubrl
int3
adc
js
test
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
test
movsl
push
insl
jno
cmpsl
aaa
adc
mov
sub
push
inc
aas
adc
mov
jmp
outsl
sbb
jg,pn
shl
je
sub
cmpsl
push
pop
loop
pop
xchg
enter
dec
and
ror
push
lret
ret
mov
xchg
jge
dec
push
jmp
jbe
lods
xor
in
js
outsb
rcrl
scas
outsb
repz
in
cmp
scas
xchg
mov
scas
scas
mov
out
lock
std
mov
push
mov
push
sbb
jge
negl
adc
push
movsl
int3
pop
or
test
fmull
in
lods
ja
int
in
mov
add
test
bound
jns
ss
push
int3
sarl
in
push
dec
daa
cmp
jp
add
cltd
sub
adc
imul
lods
cmpsb
sbbb
fs
in
push
mov
fidivs
test
push
fdivl
jns
loope
lret
aam
icebp
sahf
jle
and
lods
adc
mov
fs
and
adc
jne
or
lods
outsb
mov
pop
in
cmpsb
aad
shll
pop
shr
adc
iret
pop
test
xor
popf
xor
rorl
mov
mov
fwait
push
dec
mov
and
adc
cld
xchg
adc
and
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
dec
dec
adc
pop
sbb
cmpb
je
arpl
call
int
and
cmp
jae
mov
push
stos
or
jno
push
icebp
nop
movsl
cmpsl
mov
fmul
or
cmpsb
rclb
cmp
lret
scas
imul
lods
jp
jmp
call
popf
cli
arpl
sub
movzbl
pop
lock
add
push
mov
push
loope
sti
pop
pop
dec
mov
enter
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
sbb
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
jmp
xchg
xchg
push
xabort
mov
out
out
xor
adc
jae
fnsave
sbb
fidivl
xchg
out
fcmovb
dec
pop
sahf
aaa
stos
jecxz
dec
jbe
mov
sbb
xchg
jb
sbb
mov
or
cmc
js
inc
popa
jecxz
rcrb
mov
les
roll
sub
ror
adc
test
and
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
xchg
xor
popf
ljmp
sbb
test
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
outsb
mov
jne
sahf
fidivrs
sub
dec
testl
cs
mov
inc
mov
mov
jge
dec
xor
cld
xor
fidivrs
fmulp
xchg
repz
jns
popf
adc
xchg
pop
cli
cmpl
push
mov
aaa
xchg
fstpl
pop
xor
xchg
aad
cwtl
mov
mov
lahf
loop
fistpll
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
mov
nop
xor
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
repz
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
in
out
int3
mov
in
scas
aas
test
xchg
jmp
push
out
jno
sbb
sbb
ret
xchg
jg
out
das
dec
iret
mull
xchg
xchg
mov
fisttps
jbe
xor
leave
push
jmp
ret
pusha
xor
jl
mov
rclb
lret
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
pop
dec
movsb
adc
insl
int3
nop
mov
dec
and
mov
mov
test
add
test
push
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
cmpb
sub
mov
fildll
sub
dec
push
fsub
ja
in
jg,pn
shl
je
pop
xchg
and
insl
outsb
pop
cltd
mul
int
adc
jmp
scas
ret
mov
fucomip
bnd
out
test
xor
arpl
das
push
divl
mov
imul
outsl
and
lock
xchg
xchg
dec
push
fidivrl
jp
jns
jo
inc
add
icebp
outsl
in
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
test
fildl
mov
ret
arpl
lds
push
sarl
cld
mov
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
pop
imul
test
push
rclb
push
mov
aas
sub
jae
fldt
pop
dec
div
xchg
inc
lds
subb
nop
mov
add
inc
cmp
int
fisubs
pop
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivl
add
mov
cli
jnp
inc
mov
add
adc
mov
dec
mov
pop
repnz
dec
cwtl
dec
and
adc
test
setae
lods
repz
jne
fs
into
ja
addr16
jae
push
les
inc
and
cltd
aas
jno
dec
push
push
test
dec
loope
inc
fs
dec
dec
insl
sub
clc
mov
popf
stos
mov
int
mov
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
movsb
out
mov
adc
popa
push
sub
lods
xchg
sub
adc
fldenv
je
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
stos
xchg
mov
scas
push
jnp
push
lods
scas
das
test
in
mov
mov
sti
jmp
xchg
jecxz
movsb
mov
jle
jno
sub
nop
jl
mov
push
les
stc
dec
cmp
adc
or
cmp
mov
ret
mov
fcmovu
sti
sti
and
test
sahf
mov
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
and
pop
push
fistl
addb
dec
ljmp
xlat
lods
adc
inc
aas
in
lret
popf
lret
sub
sub
add
xchg
xor
fcmove
adc
cwtl
sub
jle
lcall
cmp
cmpsb
cmp
pop
and
movsl
adc
pop
and
fwait
jmp
stos
xor
mov
fstl
out
daa
dec
lock
jge
inc
iret
shl
ja
clc
ror
ret
adc
ret
or
mov
loopne
sbb
dec
push
xabort
xor
mov
dec
sub
pop
test
ret
rorb
or
iret
scas
dec
mov
fistl
cmp
add
xchg
pop
jp
pop
fwait
pop
movsb
pop
shlb
pop
xchg
pop
cmpsl
fistps
xchg
fwait
std
xchg
cld
fstps
jmp
mov
adc
pop
lock
add
add
sbb
in
jmp
test
aaa
jns
pop
push
popf
xor
in
mov
cmp
in
test
or
test
sbb
sub
mov
mov
dec
cmpsl
mov
push
es
test
mov
aad
pop
dec
jno
dec
fstpl
mov
fisttpl
or
sub
icebp
jmp
cmp
xchg
fnstsw
outsl
addr16
sbb
pop
jmp
mov
pusha
pop
in
movsl
decl
fld1
jb
cmp
bound
jbe
ror
jecxz
outsb
pop
and
popf
or
dec
int
fcmovb
movsl
mov
lods
xchg
add
xchg
xor
jbe
cmp
jle
mov
inc
test
imul
and
clc
push
aam
cmpsb
add
stc
loop
mov
aas
pop
dec
inc
inc
adc
jne
lds
sbb
gs
sub
das
mov
stos
xchg
push
inc
push
push
insl
inc
push
pop
inc
jb
dec
inc
add
out
cmp
ret
mov
in
add
xchg
test
test
add
xchg
mov
enter
pushf
jbe
mov
insl
cmc
pop
movsb
push
outsb
loope
lds
or
mov
mov
inc
out
mov
mov
add
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
repnz
daa
pop
repz
out
icebp
mov
xchg
cld
test
add
push
push
shrl
popf
inc
sahf
mov
and
nop
cs
pushf
cmc
and
adc
incb
inc
test
adc
jge
fdivrp
lahf
adc
js
jnp
adc
xchg
pop
cmpsb
pop
pop
cmpsl
bound
je
sbb
xlat
inc
aad
enter
cltd
xorl
fdivrs
mov
repz
or
fisubl
cmp
inc
push
ret
sub
sbb
out
mov
pop
lret
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
sahf
mov
or
push
cli
cmp
stos
xor
xor
mov
mov
fstpt
jo
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
outsb
scas
insb
repnz
inc
out
outsb
out
lahf
stc
iret
or
and
sub
pushf
ret
rolb
mov
or
andb
imul
shll
fwait
cmpb
mov
and
sub
js
mov
rol
jb
add
lock
inc
adc
dec
adc
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
lds
cmc
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
cmp
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
or
scas
dec
sbb
lock
jl
fmul
adc
outsl
cmp
add
stc
jp
scas
scas
loope
sti
jnp
sbb
xor
mov
outsb
out
lahf
stc
cwtl
shll
or
sbb
push
data16
scas
sti
out
rolb
adcl
sub
push
sti
cmpsl
arpl
push
scas
jle
mov
cmp
and
xor
repz
adc
and
jns
pushf
rcrb
mov
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
repz
testl
push
mov
insl
aam
rol
mov
xchg
int3
js
rcrb
sbb
xchg
sub
insl
jle
mov
je
xor
inc
sbb
in
scas
aas
test
pop
aad
mov
pop
xchg
test
xor
jae
jle
scas
leave
test
cltd
scas
push
repz
jo
cwtl
ret
jg
ja
jecxz
sti
jge
outsl
outsl
call
stos
subl
out
scas
mov
pop
cs
icebp
pusha
stc
inc
iret
es
jl
cwtl
ret
test
inc
and
adc
aaa
mov
outsl
mov
jne
mov
aad
sbb
or
ljmp
insl
mov
daa
jo
push
sbb
inc
and
add
lahf
jmp
lock
sarl
clc
inc
mov
jmp
cmp
lds
cs
cmpsb
ret
outsb
xor
and
lods
pop
movsb
hlt
in
lods
jae
popf
jnp
inc
loop
cmp
and
fmuls
pop
sbb
sbb
les
pop
dec
dec
pop
pop
push
dec
fs
cwtl
push
mov
lods
xchg
push
es
and
mov
push
cmc
cwtl
fwait
and
dec
les
jle
dec
daa
or
scas
outsb
or
add
xor
das
loopne
incl
js
lock
dec
mov
adc
push
test
test
fidivl
addr16
inc
fcmovne
repnz
lods
fnstenv
mov
push
iret
mov
sub
cs
mov
cmp
xlat
adc
ret
rcr
mov
arpl
sbb
lea
jmp
hlt
xor
adc
ret
ficomps
mov
sahf
sub
shll
testb
pop
mov
mov
sbb
xchg
nop
push
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
pop
dec
inc
sbb
je
ljmp
lds
pop
fwait
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
sub
jb
dec
pop
bound
add
ja
dec
add
movsb
andl
add
add
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
mov
xchg
push
hlt
mov
fimuls
imul
in
int
lret
sti
xor
inc
xchg
in
mov
push
mov
xchg
into
or
cmp
cltd
fcoml
das
xchg
leave
addr16
cwtl
pop
push
setno
imul
fstl
aad
push
orb
aaa
adc
and
xor
ljmp
mov
mov
mov
mov
mov
sbb
pop
add
pop
sbb
pop
mov
xchg
sbb
xchg
stos
ja
or
jl
loopne
into
xor
das
movsl
int3
ljmp
dec
pop
jo
lret
sti
out
test
xor
jae
jg
and
fadds
jg
out
das
add
xchg
lcall
idivl
sbb
bound
jecxz
jns
ret
push
jae
fidivrs
xchg
inc
jl
xchg
add
fadd
pop
arpl
out
xchg
test
test
ret
addr16
sub
or
sub
adc
rcrl
dec
mov
or
fucom
cli
xor
roll
xchg
std
xor
call
scas
push
pop
stos
gs
add
cli
jecxz
cmc
add
and
rcll
in
outsl
in
push
dec
ret
scas
arpl
push
int
inc
test
jne
call
iret
imul
xchg
pushf
mov
mov
je
xor
xchg
mov
and
sub
outsl
push
lods
and
cmpsl
fistpl
ret
inc
sbb
sbb
sahf
xchg
jl
call
je
jmp
sub
fistl
rolb
sub
xchg
xchg
aas
inc
mov
stc
sub
xchg
cmc
mov
jp
fst
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
ret
les
xor
push
cmp
mov
pop
inc
xchg
jl
xorb
mov
arpl
add
icebp
mov
push
nop
push
stos
mov
sub
imul
sbb
out
mov
sti
dec
lods
into
add
xorl
clc
mov
and
test
test
xchg
fnsave
pop
cmpsb
mov
and
cltd
xchg
pop
push
mov
scas
adcb
mov
xor
cmc
xor
mov
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
push
adc
or
orb
lods
in
or
ljmp
adc
and
xor
dec
movsl
arpl
inc
test
scas
push
push
pop
loopne
sub
inc
ret
jnp
popa
jbe
lods
push
outsl
sbb
ja
push
cmpsb
lcall
mov
push
iret
sbb
dec
mov
stos
movsl
arpl
mov
adc
ret
das
lds
test
jno
aaa
jecxz
scas
add
jns
enter
ret
stos
fldcw
push
jge
dec
jnp
in
dec
mov
cmc
add
jno
inc
scas
xchg
jmp
mov
inc
sbb
mov
fstl
sbb
pop
in
cmp
movsb
jecxz
ret
scas
cwtl
or
popf
ljmp
mov
cmc
xor
xorl
repz
nop
shll
fldcw
leave
inc
rcl
out
mov
inc
dec
rcr
sti
jnp
mov
hlt
std
xchg
arpl
mov
mov
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
cmp
jecxz
adc
stc
arpl
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
fnstsw
sub
mov
mov
dec
cmpsl
mov
push
es
dec
and
mov
lahf
scas
aaa
xchg
mov
mov
fs
lahf
callw
cmp
das
push
roll
scas
inc
or
or
jp
xor
mov
jge
dec
xchg
out
dec
mov
fcoml
test
sub
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
loop
ret
mov
cmp
inc
and
xor
les
jle
jae
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
sub
push
mov
movsl
cmpsl
mov
sub
jae
sbb
int3
imul
mov
into
sub
outsl
pop
mov
xor
lods
shll
push
mov
dec
xchg
xchg
pop
push
cmp
ret
adc
sbb
mov
push
xchg
jl
bound
test
repz
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
and
mov
xchg
clc
cmpsb
fucomp
xchg
mov
roll
shlb
cmc
lods
pusha
pop
push
pop
mov
fstl
jl
pop
push
outsb
testl
mov
and
inc
pop
gs
pop
dec
jp
sbb
rorl
scas
shrb
ljmp
fildll
cwtl
cmp
or
add
lock
add
mov
cmc
sub
mov
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
mov
repz
testl
push
std
and
shrb
fsubl
mov
shlb
sub
xchg
stos
mov
sub
pop
push
fcoms
inc
jb
sahf
pop
and
sub
pusha
aam
fstl
mov
addb
add
pushf
inc
sbb
adc
ds
push
test
mov
xor
sub
xchg
mov
lret
xchg
repz
jns
outsb
out
sti
cwtl
inc
data16
test
shrb
ret
jne
push
pop
add
mov
ret
pop
push
test
mov
or
call
sar
mov
pop
inc
inc
inc
rcr
cmp
sbb
daa
add
sbb
mov
lahf
mov
mov
gs
mov
into
sub
dec
subb
clc
pushl
insl
mov
add
shll
adc
adc
xchg
jnp
push
dec
addb
rcrb
int3
movsb
mov
sbb
lret
lahf
cmpsl
pop
icebp
cmp
jne
pop
movsl
inc
add
or
sbbl
cmp
es
dec
xor
and
adc
xchg
adc
and
jmp
mov
mov
or
lahf
cltd
pop
adc
jl
xor
cmpb
je
test
loope
and
arpl
insl
add
and
push
or
inc
xorb
pop
pop
flds
jo
sub
insb
adc
mov
adc
cmp
add
stc
arpl
cwtl
sbb
in
aas
or
inc
or
decb
sbb
es
xchg
scas
data16
test
imul
adc
outsl
jno
mov
inc
adc
fwait
mov
sti
mov
mov
and
insl
adcl
mov
cmpsb
push
and
adc
pop
jne
xor
imul
jae
les
mov
mov
test
xchg
jo
rcl
mov
aam
clc
xor
mov
inc
fsubs
sbb
addr16
xchg
xchg
inc
push
mov
or
xchg
and
jmp
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
fstl
add
xchg
outsb
dec
sbb
xchg
cmp
repz
pop
int
push
arpl
jg
rcll
lods
cmc
dec
ret
ficoms
dec
and
jbe
push
imul
sbb
mov
push
xchg
mov
lahf
popf
fnsetpm(287
adc
aam
sbb
mov
jmp
dec
ds
je
fnstenv
aam
jl
ret
add
ficompl
scas
ja
test
cmpsb
xor
jb
fisttpll
cmp
push
pop
jb
ret
sahf
sahf
xchg
sbb
js
adc
scas
fwait
leave
xchg
jl
andl
imul
push
add
add
xlat
mov
shrb
pop
sub
mov
xchg
mov
out
ja
popf
cli
push
test
jnp
out
mov
adc
jnp
sahf
jecxz
adcl
cld
or
daa
xchg
daa
loopne
hlt
jbe
test
or
addb
int3
fwait
mov
in
and
xor
mov
dec
jp
les
movsl
add
add
mov
sbb
mov
push
xchg
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
mov
inc
js
fidivrs
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
pminub
mov
sbb
jl
cmp
xor
mov
sub
push
sbb
xchg
xchg
jmp
pop
shrl
mov
cmp
lea
jbe
push
mov
cmp
dec
mov
insb
push
sub
push
mov
mov
xchg
test
push
stos
lea
ljmp
inc
bound
cmpsb
push
lea
cmp
lds
subb
adc
ss
jb
test
scas
pop
or
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
jg
xchg
test
jnp
inc
mov
cwtl
add
imul
xchg
pop
inc
mov
dec
out
mov
xor
das
stos
xlat
shll
test
mov
ret
cltd
call
sti
mov
xchg
dec
test
aaa
mov
pop
jle
nop
add
mov
sahf
dec
gs
inc
pop
adc
or
call
test
sahf
fildl
sub
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
mov
jns
adc
repnz
jns
lds
nop
lds
push
push
dec
je
inc
and
stc
inc
repnz
inc
ljmp
sub
dec
mov
sub
mov
imul
rol
fs
xchg
repz
dec
popf
aas
stos
shrb
mov
das
mov
mov
cmp
loop
repz
adc
sbb
xchg
mov
inc
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
jae
sti
and
test
fidivrs
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
test
out
inc
mov
and
mov
sbb
bound
add
imulb
push
inc
dec
movsl
in
adc
inc
mov
or
out
jle
adc
dec
inc
sub
sub
or
stos
fs
orb
dec
pop
sbb
jp
jns
dec
lds
fwait
enter
lods
xchg
mov
pop
fiaddl
inc
imul
ss
ja
adc
or
gs
mov
and
add
push
aaa
leave
and
rclb
mov
fbstp
loopne
outsb
imul
push
mov
push
jne
dec
jp
movsl
rcrl
lods
lret
cmpsl
dec
add
or
lock
inc
cwtl
mull
sarb
xor
and
ja
fucom
cli
xor
roll
inc
test
std
xor
call
lret
jecxz
push
cmove
int
push
outsl
jne
jne
ret
fsubrl
fwait
or
xor
xchg
imul
ljmp
mov
mov
pop
xchg
shll
cmp
xchg
fcompl
sub
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
push
inc
jb
ret
sahf
sahf
xchg
sbb
js
adc
scas
fwait
leave
xchg
cmp
adc
ljmp
mov
addb
mov
shrb
pop
das
aad
pop
outsl
dec
push
sti
add
push
push
rcl
jae
pushf
lods
pop
xchg
sub
sbb
sbb
jb
fucomp
mov
loope
jbe
xchg
mov
inc
adc
fabs
or
mov
and
nop
cs
arpl
xchg
inc
cmpsb
jg
stos
les
fbstp
dec
daa
jp
or
xor
or
cmp
jl
jg
fildll
pop
mov
sti
pusha
aas
js
push
mov
xor
int
data16
lret
sbb
sarb
sti
stos
rcrl
stc
cmpsb
jecxz
cmp
test
fbstp
je
pop
iret
sbb
rcr
loopne
mov
cwtl
sub
xchg
add
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
fwait
jmp
stos
xor
mov
fstl
out
daa
dec
lock
jge
inc
iret
shl
ja
decl
jbe
xor
xor
jle
mov
xlat
repz
mov
jge
and
negb
and
xorl
std
cmpl
decb
inc
sbb
adc
out
lods
dec
adc
cld
xor
sbb
jge
dec
adc
mov
sti
add
imul
sub
and
mov
add
jns
sub
cmp
sub
cmc
sbb
std
fistpll
shll
jo
test
jp
jge
scas
xchg
iret
stc
push
sarb
insl
outsb
pop
cltd
cmpsb
jmp
push
lret
cmpsl
int3
push
mov
shrb
adc
pop
pushf
jno
lahf
jbe
mov
pop
push
cmpb
jl
jl
js
or
jmp
jp
stc
fisubrs
jmp
mov
sbb
rcrb
push
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
sbb
cmp
inc
pushf
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
jae
mov
push
cmc
or
mov
xchg
std
pop
int3
push
into
shr
ret
mov
insb
xchg
push
into
push
mov
insl
mov
jne
nop
shrl
dec
popa
ret
cmp
xchg
adc
cmp
in
imul
fsubs
js
push
outsl
and
jmp
inc
or
pushf
push
xor
sub
out
jns
dec
adc
fistpl
mov
leave
jnp
mov
call
iret
inc
fldt
ficoms
inc
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
in
insl
xchg
popf
pop
adc
cmp
and
daa
pop
repz
out
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
inc
ret
int
dec
adc
cld
stos
lcall
jge
dec
adc
mov
sti
add
imul
sub
and
shlb
daa
xor
jns
sub
cmp
sub
cmc
sbb
mov
push
adc
hlt
stos
arpl
lds
sbb
sbb
icebp
dec
scas
xchg
stos
mov
inc
lds
adc
lods
push
sub
jmp
inc
and
out
out
shr
pusha
xor
into
pop
mov
add
xchg
mulb
cwtl
scas
push
repz
mov
push
dec
je
xor
pop
dec
subl
inc
js
inc
push
or
mov
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
cmpl
fisubs
fsubrl
int3
adc
js
test
or
aas
test
fildl
or
popf
mov
jns
push
sarl
std
mov
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
pop
imul
test
push
rclb
push
mov
aas
sub
jae
fldt
pop
dec
div
xchg
inc
lds
subb
nop
mov
add
inc
cmp
int
lahf
add
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivl
add
mov
cli
jnp
inc
mov
mov
inc
out
dec
sub
clc
dec
mov
fs
mov
adc
jbe
je
pop
bound
mov
lahf
dec
sahf
inc
mov
loopne
jmp
cmc
into
add
jo
test
inc
inc
mov
jno
les
shrl
lds
cmp
jle
inc
ret
int
dec
adc
cld
sub
cmc
mov
mov
adc
mov
sti
add
imul
sub
and
mov
aaa
lahf
lret
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
shll
jo
test
add
pop
inc
inc
or
push
inc
lcall
sbb
or
ljmp
pop
mov
mov
arpl
jno
arpl
enter
fadds
jle
pusha
das
dec
lock
mov
pop
xchg
mov
subl
stos
mov
movsb
test
jae
fidivrs
sahf
sub
ljmp
outsb
out
lahf
stc
cwtl
shll
insb
lea
sbb
pop
shr
addb
aas
xorl
add
xor
test
in
movsb
ret
lock
mov
add
push
dec
js
inc
dec
mov
repz
pusha
mov
or
aas
js
push
shl
xor
repnz
cmc
imul
test
push
stos
test
ficoms
int
inc
testb
bound
movl
and
sbb
test
in
andb
out
add
dec
mov
rorl
inc
mov
call
mov
gs
adc
adc
xor
les
stc
or
xor
loop
ret
addl
call
repz
mov
dec
lcall
mov
loopne
pop
outsl
jae
inc
pop
dec
push
pop
sbb
jo
shrl
fwait
jmp
les
dec
inc
dec
aam
adc
cmpl
sbb
gs
std
aaa
cltd
aad
repz
jne
les
cmpl
sbb
imul
dec
adc
mov
jg
aad
pushf
ret
pop
mov
mov
sbb
xor
in
scas
cmp
inc
cmpl
popa
les
push
mov
push
outsb
mov
sbb
arpl
push
mov
mov
sbb
stos
pop
lcall
sub
sub
sub
loopne
mov
icebp
cmp
jne
pop
movsl
inc
add
adc
sbbl
cmp
es
dec
xor
and
adc
xchg
adc
and
jmp
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
cmp
stos
mov
mov
add
jo
push
inc
mov
add
inc
push
sbb
cmc
mov
dec
lret
leave
lock
sbb
shrb
out
inc
sbbl
cmpsl
push
into
fnclex
pop
test
fisubrl
fnsave
sub
mov
pop
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
aad
bound
int
cld
jb
scas
repz
cmp
jl
xor
hlt
jbe
aas
dec
enter
stos
clc
push
scas
subl
ret
loope
clc
adc
gs
add
xchg
xor
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
adc
mov
sub
mov
iret
add
test
push
lock
xchg
xor
leave
add
mov
loopne
jg
cmpsl
xlat
in
lret
xor
loop
sub
inc
incb
push
xchg
pop
dec
inc
and
and
sub
mov
pop
imul
cltd
push
aam
sbb
jge
dec
inc
sub
je
faddp
mov
stos
lcall
jmp
fsts
jecxz
fbstp
or
orb
mov
std
fdivrl
mov
inc
dec
je
jge
lds
lcall
lods
cmc
fdivrs
push
lret
fisttpl
lods
ret
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
add
ret
mov
cmp
inc
and
xor
les
aas
jae
mov
push
cmc
or
mov
jmp
aad
cld
dec
jbe
push
or
fcoml
es
test
sub
mov
outsb
xor
and
xor
mov
pop
int3
jge
add
shll
loopne
inc
sub
sub
add
push
repnz
xchg
mov
push
into
sub
scas
push
and
sub
jmp
fadds
pop
jo
push
xchg
xchg
test
lret
popa
jge
icebp
add
mov
pop
pop
pusha
sub
rorl
mov
cs
xchg
mov
imul
enter
ja
mov
sbb
push
cltd
cmpsl
into
call
inc
cmp
jne
cltd
push
loopne
adc
inc
inc
mov
cwtl
out
push
and
or
cmp
aas
test
fildl
into
jbe
ret
arpl
lds
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
outsl
cmc
insl
push
imul
test
push
stos
lods
scas
imul
jno
pop
aas
adc
inc
aas
adc
mov
pop
sub
mov
pop
add
out
mov
xchg
add
jge
push
fwait
fwait
lret
push
mov
loope
xchg
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
int3
andl
push
dec
mov
mov
inc
cmpsb
pop
fwait
xlat
xchg
mov
sub
and
and
call
cmp
enter
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
adc
imul
fwait
lea
mov
inc
adc
sub
push
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lret
inc
cmpsl
fstp
or
je
clc
enter
sbb
inc
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pop
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
sub
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
adc
sbb
sbb
loopne
dec
pop
inc
dec
jmp
clc
sbb
and
lahf
lret
jecxz
gs
enter
pushf
int
dec
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
mov
cmpsl
outsb
xchg
pop
lock
enter
add
push
nop
pop
stos
xchg
push
fcmovbe
sbb
fistpl
xchg
std
cmpsl
andb
mov
je
fwait
into
ret
js
inc
shlb
lds
test
fimull
adc
inc
fcoms
xchg
adc
aas
imul
in
mov
lret
das
shrb
sub
mov
cltd
aaa
mov
mov
cwtl
mov
mov
xchg
sub
add
sbb
idivl
loop
repz
ret
loopne
dec
pop
inc
repz
sbb
and
lahf
lret
jecxz
gs
enter
int
mov
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
jae
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ljmp
jg
mov
jne
ret
mov
add
lock
cwtl
sub
das
push
pushf
dec
and
xchg
fs
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
dec
addb
xchg
pop
lock
push
lcall
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
insb
scas
add
pop
or
pop
sbb
or
xor
push
jg
das
mov
inc
cwtl
imul
pop
fdivrl
repz
mov
hlt
sbb
cmp
decb
cld
mov
cmpb
and
mov
sub
xor
and
pop
aam
jae
add
cmp
and
mov
pop
arpl
mov
pop
mov
mov
add
subb
sub
das
push
dec
and
xchg
cltd
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
cmp
cmp
mov
xor
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
jp
fldt
arpl
xchg
sub
nop
sbb
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
and
fidivrl
jo
or
xchg
push
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
call
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sub
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
into
jmp
xor
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
aad
jo
jb
dec
fisubrs
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
jl
addl
add
push
aas
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
mov
mov
mov
and
xchg
jp
dec
aam
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jne
mov
sub
stos
inc
and
call
cmp
cltd
enter
stc
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
add
ljmp
inc
clc
fisttps
inc
inc
ficompl
pop
mov
je
mov
adc
mov
lock
cmp
les
std
lock
fistpl
lcall
cmp
aam
movl
imul
js
fistl
xchg
push
cmp
pminub
sar
mov
dec
xchg
mov
sub
movsb
inc
and
call
cmp
cltd
enter
fcmove
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
inc
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
repnz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
ja
cmpsb
inc
cmpsl
fstp
mov
mov
test
enter
sbb
es
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jmp
mov
sub
mov
fsubr
mov
sbb
dec
adc
call
pop
mov
daa
pop
xorl
cmpl
xor
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
std
call
cmp
ret
loopne
dec
pop
inc
and
repz
sbb
and
lahf
dec
enter
int
mov
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jecxz
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
int3
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
ficomps
mov
mov
ret
mov
add
ljmp
jo
dec
and
xchg
in
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sub
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
movsl
mov
mov
stos
mov
ja
test
test
inc
mov
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
ja
scas
mov
imull
mov
mov
bound
dec
popa
sub
pop
sbb
addb
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
stos
lods
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
es
xor
sbb
test
fucomi
jge
rcll
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
out
jmp
xor
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sbb
jo
jb
dec
cltd
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lods
popf
scas
inc
movsl
fcompl
xchg
arpl
addl
add
push
aas
pop
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
cmpsl
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
push
xchg
mov
sub
mov
and
call
cmp
inc
jb
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
cmpsl
mov
fwait
lea
mov
inc
adc
sub
imul
mov
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
mov
je
or
jecxz
inc
sbb
mov
inc
cmp
fmuls
in
sbb
xchg
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
insl
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
cmpl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
stos
call
cmp
ret
loopne
dec
pop
inc
push
jmp
clc
sbb
and
lahf
lret
jecxz
gs
js
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
je
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
popf
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
lea
pop
mov
mov
sahf
mov
mov
add
in
push
cwtl
sub
das
jns
dec
and
xchg
gs
fsubr
test
xchg
leave
pusha
fldt
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
adc
mov
mov
stos
mov
ja
shrl
cmp
inc
mov
cmp
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
das
fildll
xchg
mov
bound
dec
sub
shlb
or
imul
nop
aas
fwait
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
lods
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
in
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
inc
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
bnd
int3
xor
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
shl
xchg
dec
int3
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
fistpl
pop
or
stos
sbb
addl
add
push
aas
xchg
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
mov
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jecxz
mov
sub
or
lahf
jle
dec
jecxz
jb
js
cmp
inc
das
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
rcrb
imul
lea
mov
inc
adc
sub
addr16
or
int
imul
push
sub
jno
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmp
fstpt
je
stos
enter
sbb
cmpsb
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
subl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
mov
mov
enter
inc
sbb
pop
ret
loopne
dec
pop
inc
jbe
repz
sbb
and
lahf
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cli
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ret
dec
mov
mov
push
mov
mov
add
out
push
cwtl
sub
das
ficompl
dec
lret
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
lret
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
outsl
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
andb
int
stos
mov
ja
dec
test
test
inc
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
adc
mov
mov
cmp
xchg
xchg
dec
cmp
cltd
cmpsl
jnp
lret
adc
push
mov
cltd
out
clc
cld
and
cmp
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
pop
movsl
mov
mov
stos
mov
ja
push
test
test
inc
mov
ds
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
nop
mov
mov
bound
dec
ljmp
lahf
sbb
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
int3
lods
mov
mov
xchg
test
dec
mov
movsb
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
xor
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
inc
movsb
pop
sbb
jno
jne
mov
push
adc
ret
outsb
pop
dec
enter
pop
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
test
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xor
jo
jb
dec
mov
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
pop
mov
jnp
inc
mov
mov
adc
out
mov
sbb
loopne
aad
dec
add
dec
test
dec
movsb
lea
lfs
xchg
dec
icebp
call
push
ficoms
push
mov
fwait
pop
out
movsb
mov
push
sti
call
jo
or
or
cltd
dec
or
xor
sbbb
xchg
sarl
sbb
push
repnz
movsb
fnstenv
dec
adc
mov
rcr
mov
cwtl
sub
rcrl
daa
ret
int
lcall
lods
mov
mov
and
or
pop
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cmp
jo
jb
dec
call
sarb
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
popf
scas
inc
movsl
fcompl
xchg
mov
adc
mov
add
push
aas
dec
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
mov
scas
popl
rcrb
mov
and
xchg
jp
dec
sbb
cmp
sbb
add
fld1
std
jge
nop
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
mov
sub
movb
jle
dec
loope
jb
js
cmp
inc
sub
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
jg
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmpsl
lea
mov
je
dec
enter
sbb
lret
out
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
es
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
add
repz
ret
loopne
dec
pop
inc
sub
in
and
lret
jecxz
gs
in
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
or
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpsb
mov
pop
inc
mov
pop
mov
mov
add
mov
xor
pushf
dec
and
xchg
push
lret
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
dec
addb
xchg
pop
lock
push
lcall
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
insb
scas
add
pop
or
pop
sbb
or
xor
push
jg
das
mov
inc
cwtl
imul
pop
fdivrl
repz
mov
hlt
sbb
cmp
decb
cld
mov
cmpb
and
mov
sub
xor
and
pop
aam
jae
add
cmp
and
ficomps
mov
mov
ret
mov
add
test
cwtl
sub
das
jnp
dec
and
xchg
adc
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
aam
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cmpsb
movsl
mov
mov
stos
mov
ja
mov
shrl
inc
mov
mov
cld
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lret
fildll
addr16
mov
bound
dec
xor
shlb
or
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
loop
mov
mov
xchg
test
dec
mov
filds
dec
inc
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
and
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
jno
fwait
push
cmp
ret
outsb
pop
dec
mov
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
lahf
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
mov
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
cmpb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
int3
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
popf
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
leave
popf
scas
inc
movsl
fcompl
xchg
aas
or
add
add
push
aas
adc
mov
ret
sbb
sbb
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
and
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jo
mov
sub
pop
inc
and
call
cmp
cltd
enter
pop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jp
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
les
fldt
out
mov
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
add
fucomip
jl
add
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
mov
jne
or
sbb
xor
loopne
dec
pop
inc
ret
clc
sbb
and
lahf
lret
jecxz
gs
ror
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
mov
cmpsl
outsb
xchg
pop
lock
enter
add
push
nop
pop
stos
xchg
push
fcmovbe
sbb
fistpl
xchg
std
cmpsl
andb
mov
je
fwait
into
ret
js
inc
shlb
lds
test
fimull
adc
inc
fcoms
xchg
adc
aas
imul
in
mov
lret
das
shrb
sub
mov
cltd
aaa
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
dec
mov
mov
adc
repz
ret
loopne
dec
pop
inc
jo
repz
sbb
and
lahf
lret
jecxz
gs
enterw
int
mov
inc
lret
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
xchg
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
inc
mov
pop
jecxz
mov
mov
sbb
testb
iret
push
sbb
push
cwtl
sub
das
sbb
xlat
lret
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
fsubl
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
out
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
fwait
movsl
mov
mov
stos
mov
ja
add
cmp
inc
mov
mov
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
add
scas
mov
imull
mov
mov
bound
dec
and
xchg
dec
inc
shlb
or
imul
nop
aaa
fwait
lods
gs
lods
xor
dec
jg
incl
sbb
scas
xchg
popa
xchg
cwtl
fadds
cmp
aad
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
xchg
lods
inc
add
imul
hlt
or
les
mov
leave
push
sub
cmp
sbbb
mov
mov
pop
dec
mov
cmp
push
jb
xchg
mov
pop
lock
pop
adc
xor
mov
lcall
sub
add
cmc
cmpsb
add
inc
mov
icebp
mov
movsb
lds
nop
lds
mov
jo
test
cli
cli
fildll
dec
mov
mov
bound
dec
test
xchg
dec
inc
shlb
or
imul
nop
aaa
fwait
lods
gs
lods
xor
dec
jg
incl
sbb
scas
xchg
popa
xchg
cwtl
fadds
cmp
aad
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
xchg
lods
inc
add
imul
hlt
or
les
mov
leave
push
sub
cmp
sbbb
mov
mov
pop
dec
mov
cmp
push
jb
xchg
mov
pop
lock
pop
adc
xor
mov
lcall
sub
add
cmc
cmpsb
add
inc
mov
icebp
mov
movsb
lds
nop
lds
mov
jo
test
cli
ret
fildll
addr16
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
in
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
inc
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
and
int3
xor
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
movsb
loop
xchg
dec
loop
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
add
fcompl
xchg
push
or
cmpsb
add
jbe
dec
mov
sbb
aas
into
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
jno
xchg
sbb
cli
and
xchg
jp
dec
lea
cmp
sbb
addr16
fld1
std
jge
insl
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
imul
jle
dec
fwait
call
cmp
push
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
add
ljmp
inc
clc
fisttps
inc
inc
ficompl
pop
mov
je
mov
adc
mov
lock
cmp
les
std
lock
fistpl
lcall
cmp
aam
movl
imul
js
fistl
xchg
push
cmp
pminub
sarb
mov
adcb
fldcw
xchg
mov
add
lahf
jle
dec
lcall
dec
cltd
enter
cmp
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
mov
dec
test
mov
ja
adc
into
popf
in
stc
jl
ret
push
sbb
inc
cld
cmc
mov
inc
gs
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
cmpsl
adc
jge
sub
fwait
ss
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
call
sub
xchg
mov
xlat
inc
and
call
cmp
cltd
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
rcrb
or
int
imul
push
sub
jle
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
imul
mov
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pop
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
in
call
cmp
ret
loopne
dec
pop
inc
adc
repz
sbb
and
lahf
lret
jecxz
gs
xchg
enter
int
xchg
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
push
mov
hlt
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
mov
pop
add
mov
jbe
fisttpl
cmp
add
jo
xor
pushf
dec
and
xchg
ljmp
inc
mov
sbb
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
and
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
out
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
mov
mov
stos
mov
ja
mov
shrl
inc
mov
inc
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sub
scas
mov
imull
mov
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jo
mov
mov
xchg
test
dec
mov
arpl
dec
inc
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
icebp
test
xor
sbb
adc
fucomi
jge
rcl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
add
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
or
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xchg
popf
scas
inc
movsl
fcompl
xchg
dec
or
js
add
push
aas
sbbl
bnd
mov
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
into
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cs
mov
sub
jmp
and
call
cmp
cltd
enter
test
cltd
insb
mov
add
mov
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
loope
cmpsl
mov
fwait
lea
mov
inc
adc
sub
fcompl
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
inc
lea
sbb
je
sub
jecxz
inc
sbb
adc
inc
mov
mov
or
daa
loopne
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
inc
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
jl
subl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
pop
sbb
mov
shr
repz
ret
loopne
dec
pop
inc
cmp
repz
sbb
and
lahf
lret
jecxz
gs
push
enter
int
popa
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
popf
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
inc
mov
pop
push
mov
adc
cmp
add
test
cwtl
sub
das
mov
jne
leave
lret
fsubr
test
xchg
leave
pusha
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
cmc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
pusha
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aas
movsl
mov
mov
stos
mov
ja
aaa
test
test
inc
mov
cmp
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
je
scas
mov
imull
mov
mov
bound
dec
inc
sub
sbb
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
inc
lods
mov
mov
xchg
test
dec
mov
stc
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
aad
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sub
bnd
int3
xor
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sti
loop
xchg
dec
enter
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
out
popf
scas
inc
movsl
fcompl
xchg
jbe
addl
add
push
aas
lahf
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
jbe
adc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rclb
sub
lea
lahf
jle
dec
add
jb
js
cmp
inc
and
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
adc
repz
lea
mov
inc
adc
sub
int3
push
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pushf
lea
mov
mov
mov
test
enter
sbb
xor
inc
or
in
imul
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
in
inc
inc
cmp
push
lock
rorl
or
mov
sub
pushf
dec
and
leave
pop
inc
add
repnz
jns
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
sub
xchg
into
test
imul
sub
mov
mov
fcoml
jge
scas
stc
xchg
shlb
shrb
out
jl
int3
xor
icebp
mov
sub
sbb
adc
xor
mov
cmp
loopne
xchg
mov
adc
fidivrl
jp
pop
push
enter
xchg
pop
mov
xlat
or
cld
lea
scas
out
mov
enter
sbb
addb
add
mov
or
daa
cmp
xchg
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
out
mov
xor
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
jl
andl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
in
idivl
sti
call
cmp
ret
loopne
dec
pop
inc
add
in
and
lahf
lret
jecxz
gs
insb
enter
int
add
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
dec
and
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
pop
mov
hlt
mov
mov
add
ja
xor
pushf
dec
and
xchg
inc
lret
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
or
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aad
mov
mov
stos
mov
ja
scas
test
test
inc
mov
popa
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
scas
mov
imull
mov
mov
bound
dec
test
xchg
dec
inc
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
daa
lods
mov
mov
xchg
test
dec
mov
lds
dec
subl
dec
les
mov
dec
mov
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
ljmp
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
aaa
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sbb
or
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
out
scas
inc
movsl
fcompl
xchg
dec
or
loopne
add
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
mov
orl
inc
sbb
cmp
adc
test
sub
cmp
sbb
mov
fld1
std
jge
ret
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jecxz
mov
sub
aaa
inc
and
call
cmp
enter
insb
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
xor
cmpsl
mov
fwait
lea
mov
inc
adc
sub
int3
push
or
int
imul
push
sub
hlt
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
loopne
cmpsb
inc
cmpsl
fstp
lock
mov
enter
sbb
adc
inc
loopne
mov
or
daa
xor
xchg
pop
stos
pop
lods
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adc
fucomip
jl
adcl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
inc
idivl
and
repz
ret
loopne
dec
pop
inc
stc
jmp
clc
sbb
and
lahf
nop
enter
int
mov
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
push
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
pusha
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
in
xchg
dec
rcrl
adc
xchg
mov
inc
mov
dec
mov
pop
or
fbld
ds
jae
loopne
xor
lahf
cltd
xlat
pop
mov
clc
mov
add
xor
cmpsl
mov
les
out
jne
cwtl
mov
imul
cmpb
xor
pop
xor
sahf
jp
mov
fprem
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
and
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmp
pop
int3
mov
or
cmp
sbb
push
cwtl
sub
das
stos
pushf
dec
and
xchg
jp
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
andl
mov
imul
sbbb
outsl
and
xchg
stos
push
test
clc
sub
sbb
xchg
lret
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
int
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
popf
movsl
jp
mov
pop
pop
sbb
movb
scas
xchg
pop
enter
lahf
cmp
pop
aam
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
int
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
popf
movsl
jp
mov
pop
pop
sbb
movb
scas
xchg
pop
enter
lahf
cmp
pop
aam
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
shll
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
cmp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sub
lcall
sub
test
test
inc
mov
jae
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
adc
mov
mov
cmp
xchg
xchg
dec
cmp
cltd
cmpsl
jnp
lret
adc
push
mov
cltd
out
clc
cld
and
cmp
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
sub
lcall
sub
push
cmp
inc
mov
fucomp
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
je
scas
mov
imull
mov
mov
bound
dec
xchg
sub
jo
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
mov
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
xchg
test
xor
ret
mov
jge
rorl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
stos
inc
movsb
pop
sbb
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jmp
jo
jb
dec
lock
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
movsl
popf
scas
inc
movsl
fcompl
xchg
mov
adc
stos
add
jbe
dec
cs
aas
movsl
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
test
jmp
sbb
mov
or
sub
cmp
sbb
pushf
ret
fld1
std
jge
jmp
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
sub
xchg
mov
movsb
inc
and
call
cmp
inc
cmp
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
xchg
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
movsb
push
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
hlt
lea
xor
mov
mov
test
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jecxz
mov
sub
mov
fsubr
mov
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
orl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
or
repz
ret
loopne
dec
pop
inc
cmp
repz
sbb
and
lret
jecxz
gs
pop
enter
int
add
inc
leave
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
xor
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
xor
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
test
ficomps
mov
sub
ret
mov
add
or
cwtl
sub
das
add
xchg
pop
stos
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
dec
addb
xchg
pop
lock
push
lcall
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
insb
scas
add
pop
or
pop
sbb
or
xor
push
jg
das
mov
inc
cwtl
imul
pop
fdivrl
repz
mov
hlt
sbb
cmp
decb
cld
mov
cmpb
and
mov
sub
xor
and
pop
aam
jae
add
cmp
and
ficomps
mov
pop
mov
mov
add
mov
cwtl
sub
das
mov
dec
and
xchg
pusha
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
add
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
inc
movsl
mov
mov
stos
mov
ja
call
push
cmp
mov
sbb
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
aam
scas
mov
imull
mov
mov
bound
dec
ret
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
js
mov
mov
xchg
test
dec
mov
movsb
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
inc
movsb
pop
sbb
jno
stos
push
cmp
ret
outsb
pop
dec
jno
bnd
int3
xor
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
ja
jo
jb
dec
push
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
pop
fildl
stos
daa
or
stos
add
jbe
dec
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
mov
insl
popl
jecxz
mov
and
xchg
jp
dec
add
fdivrs
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
stos
xchg
mov
sub
sbb
lahf
jle
dec
sahf
call
cmp
cltd
enter
or
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
out
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
orl
mov
enter
sbb
popa
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
push
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
sbbl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
mov
sbb
inc
ret
loopne
dec
pop
inc
test
repz
sbb
and
lahf
lret
jecxz
gs
int
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jle
mov
jmp
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
jle
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
or
pop
mov
jbe
orl
iret
push
sbb
push
cwtl
sub
das
movsb
pushf
dec
and
xchg
sbb
pop
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
int3
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
shlb
data16
stos
mov
ja
dec
test
test
inc
mov
fsubr
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
sbb
mov
bound
dec
dec
sub
mov
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
mov
xchg
test
dec
mov
imul
pop
dec
les
dec
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
xor
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
sbb
jno
subb
push
adc
ret
outsb
pop
dec
sub
js
int3
xor
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
aaa
loop
xchg
dec
lea
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xor
pop
cwtl
xchg
pop
or
in
add
push
aas
or
mov
ret
pop
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
andl
mov
mov
and
xchg
jp
dec
and
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
das
xchg
mov
sub
dec
inc
and
call
cmp
enter
xchg
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
push
repz
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
lea
aas
out
mov
enter
sbb
imul
fmuls
in
hlt
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pop
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
addl
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
mov
jne
mov
repz
ret
loopne
dec
pop
inc
sbb
repz
sbb
and
lahf
lret
jecxz
gs
in
enter
int
sbb
inc
lret
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
pop
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
aam
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
lods
mov
pop
imul
test
dec
sbb
inc
add
int3
push
cwtl
sub
das
sub
jne
vminss
mov
sbb
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
addr16
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
test
pop
lcall
sub
shrl
inc
mov
call
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lahf
fildll
dec
mov
mov
bound
dec
sub
ret
addb
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
inc
lods
mov
mov
xchg
test
dec
mov
xchg
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
addr16
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
jnp
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sub
js
int3
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sbb
jo
jb
dec
or
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
aam
scas
inc
movsl
fcompl
xchg
cmp
addl
add
push
aas
or
mov
ret
mov
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcr
andl
mov
mov
and
xchg
jp
dec
mov
fdivrs
sahf
sbb
fadd
fld1
std
jge
fsubs
lock
mov
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xchg
sub
sub
es
and
call
cmp
enter
popl
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
xor
imul
lea
mov
inc
adc
sub
mov
dec
mov
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xchg
lea
cmpsl
out
mov
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jp
mov
and
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
or
fucomip
jl
sbbl
mov
bound
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
push
and
ja
inc
in
mov
sbbl
inc
push
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
jo
lods
fidivs
aad
mov
aad
jmp
fxch
rclb
fwait
or
sarb
clc
jb
mov
jb,pt
xor
adc
mov
scas
ret
dec
rolb
xchg
and
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
movsl
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmp
fucomip
jl
cmpl
shlb
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
xchg
idivl
lahf
call
cmp
ret
loopne
dec
pop
inc
xchg
jmp
clc
sbb
and
gs
mov
int
shlb
inc
inc
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
fprem
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
or
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
das
mov
pop
es
mov
or
cmp
or
sbb
push
cwtl
sub
das
fcompl
pop
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jle
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
ds
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
js
mov
mov
stos
mov
ja
jns
shrl
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
dec
fildll
leave
mov
mov
bound
dec
push
sub
in
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
outsl
lods
mov
mov
xchg
test
dec
mov
lea
dec
outsb
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
inc
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
push
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
dec
loop
xchg
dec
sub
or
cmp
sub
push
mov
rcrb
mov
das
xchg
mov
pop
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
arpl
mov
fimuls
adc
test
inc
test
dec
cmc
sub
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shlb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ret
popf
scas
inc
movsl
fcompl
xchg
into
or
push
add
jbe
dec
ret
push
aas
negb
mov
ret
shll
sbb
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
pop
dec
xor
mov
sbb
insb
push
push
xchg
jmp
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
mov
xchg
jmp
sbb
adc
test
sub
cmp
sbb
or
fld1
std
jge
movsl
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
fisttps
pop
or
jmp
dec
hlt
stos
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
mov
sub
sbb
lahf
jle
dec
icebp
call
cmp
inc
sbb
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
mov
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
pop
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
xchg
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
lds
or
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
cmp
popf
push
jnp
stos
push
mov
jnp
hlt
stos
je
or
add
sub
cwtl
inc
repz
add
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
dec
adc
fimull
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
cmp
mov
mov
test
enter
sbb
mov
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
jb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
out
sbbl
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
sub
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
xor
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
cmpsb
movb
inc
pop
mov
scas
jbe
mov
sub
pop
push
inc
repnz
sti
test
mov
lcall
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
xor
push
mov
fisttpl
daa
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
jno
repz
ret
loopne
dec
pop
inc
fsubr
repz
sbb
and
jecxz
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
pop
movsb
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
jno
add
sbb
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
cmpsb
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
and
fwait
add
stos
rolb
jo
or
dec
jmp
inc
test
or
nop
inc
icebp
sub
fwait
xchg
out
mov
fwait
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cli
mov
pop
mov
jbe
daa
mov
mov
add
test
xor
pushf
dec
and
xchg
xlat
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
inc
jo
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
mov
mov
loope
movsl
pop
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jnp
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
les
dec
scas
ret
ret
sbb
mov
stc
insl
lsl
call
inc
lock
scas
push
pushf
sub
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
shll
xchg
xlat
stos
mov
ja
shrb
cmp
inc
mov
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
subl
sbb
xchg
dec
lods
ret
test
movsl
jae
enter
push
adc
add
mov
push
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
inc
fildll
fnstcw
mov
bound
dec
sub
push
sbb
addb
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
cltd
add
mov
jae
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
xor
ret
fimuls
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
test
mov
mov
xchg
test
dec
mov
sub
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
mov
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
ljmp
sbb
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
lods
mov
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
in
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
stos
jecxz
or
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
into
xor
push
and
lret
fisttps
aaa
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
outsb
jmp
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
lret
pop
inc
jg
iret
cmpl
jg
lret
lock
fiadds
dec
inc
push
orb
or
ret
push
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
test
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
popf
or
xchg
movnti
inc
dec
jmp
sbb
cld
mov
fs
xor
push
or
std
jle
cmp
or
add
xchg
int
stos
xchg
xchg
sti
mov
cmp
xchg
mov
pusha
outsl
lahf
ret
pop
xchg
sbb
pusha
push
mov
mov
or
xchg
shll
jbe
testb
mull
mov
fcomps
cmp
dec
pop
and
insl
xor
mov
mov
hlt
inc
mov
call
dec
jecxz
push
jecxz
decb
pop
shlb
pop
cwtl
arpl
and
jno
test
sub
add
jmp
xchg
mov
sbb
lcall
ljmp
std
idivb
imul
push
mov
mov
out
mov
test
loopne
cmpsl
leave
mov
jp
bnd
cmpsl
sahf
push
fwait
leave
in
and
push
mov
in
mov
pop
mov
dec
in
push
daa
xchg
fisttps
test
adc
mov
ljmp
inc
fists
dec
jp
fwait
lea
sbb
aas
popf
iret
iret
push
or
aam
dec
add
jl
mov
mov
repnz
mov
inc
pop
inc
xor
or
add
enter
inc
divl
pop
or
add
xor
fnstsw
or
dec
or
pop
mov
cmp
jo
pop
dec
push
mov
lret
inc
add
fadd
adc
scas
add
shrl
repz
mov
xor
xchg
int
mov
xchg
orl
xchg
dec
bound
jns
push
ja
or
push
fistpl
push
pop
push
loopne
xchg
adc
pushf
inc
pusha
sti
jmp
movsl
push
fwait
imul
add
xchg
xchg
mov
pushl
ret
rcr
push
sahf
mov
xchg
jb
test
inc
mov
movsb
inc
jne
sbb
jo
fsts
pop
test
fwait
cmpsb
in
jns
cltd
dec
inc
fstps
jae
enter
int3
push
sbb
lret
push
cmp
cwtl
cmc
xor
pop
das
or
ficoms
std
dec
adc
inc
rorl
inc
mov
fisubs
andb
jnp
xchg
cs
mov
fwait
subb
cmp
lret
inc
stos
mov
jmp
lds
lods
push
dec
jb
stc
mov
pop
sbb
outsb
pop
popf
imul
xchg
fcomps
arpl
scas
push
sbb
sub
or
inc
negb
lods
dec
cmpsl
jle
lret
dec
stc
xchg
inc
adc
aaa
xlat
sbb
stc
mov
fwait
leave
ss
out
xcrypt-cbc
cmpsl
xlat
mov
sub
inc
add
adc
daa
dec
cmc
jp
inc
cmp
cmp
push
mov
pop
lods
pop
mov
cmp
into
imul
xor
daa
enter
insb
aaa
popa
mov
push
jl
idivl
imulb
mov
adc
sti
mov
out
mov
enter
inc
divl
cwtl
or
add
xor
ret
popf
pop
or
pop
imul
mov
jl
pop
adc
aam
xor
mov
inc
stos
cwtl
adc
scas
add
lods
gs
mov
mov
sahf
das
xchg
stc
cli
in
test
or
xchg
dec
jae
or
sbb
or
or
or
mov
sbb
xor
push
pop
test
push
mov
jmp
movsb
movl
push
mov
ret
mov
or
adc
rclb
lahf
or
shl
mov
lret
in
mov
mov
or
pop
fdivrl
jnp
mov
iret
insl
fwait
cltd
dec
pop
orb
add
mov
mov
sbb
imul
out
pop
ret
cmp
mov
add
adc
pop
mov
loopne
ljmp
sbbl
jnp
sahf
rcrb
lock
adc
lret
pop
shlb
mov
sbb
jge
out
cmp
mov
push
in
dec
scas
lret
pop
sbb
mov
out
cmpsl
mov
or
cmp
adc
sbb
mov
les
jge
or
scas
cmp
mov
xchg
mov
add
pusha
cmp
in
int
out
xlat
fcoml
sti
and
xchg
add
mov
jns
xchg
fildll
dec
and
mov
lods
adc
insl
jecxz
test
test
bound
cmp
jmp
and
mov
mov
leave
sbb
sub
movsl
push
hlt
mov
xor
int
mov
lea
shrb
sub
loopne
mov
in
lea
dec
adc
mov
pusha
jbe
add
insl
adc
aad
pushf
ret
pop
pop
dec
test
jno
or
dec
pop
add
mov
xchg
dec
add
sbb
ljmp
sar
pop
inc
shrb
mov
sbb
addb
mov
jo
movsl
sbb
lcall
xchg
mov
enter
jp
sub
cmp
cmp
call
shl
cmp
mov
inc
xchg
mov
inc
cmc
addr16
mov
mov
cmpsl
adc
mov
lret
in
mov
mov
or
pop
fdivrl
jnp
mov
iret
insl
fwait
cltd
dec
pop
xor
aaa
jecxz
adc
push
imul
pop
push
pop
push
or
cwtl
test
aaa
jmp
les
cmpl
dec
lahf
lret
in
ret
mov
or
jl
adc
mov
cltd
mov
mov
sub
dec
and
rorl
or
incl
xor
push
in
int
les
nop
pushf
cmp
mov
std
mov
inc
mov
cmpsb
mov
fisubrl
sbb
std
inc
daa
inc
sahf
fs
adc
sbb
adc
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
lock
sbb
sbb
xchg
rorl
test
fwait
xor
jo
imul
stos
adc
mov
lods
inc
mov
mov
shl
inc
popf
mov
enter
pop
mov
fldl
int3
adc
js
test
or
pop
or
repz
ret
pop
jne
mov
add
std
mov
incl
adcl
ret
cmp
fmul
repz
and
lret
mov
cli
test
stos
ljmp
mov
lret
xchg
xorb
ret
mov
pop
lret
mov
push
lcall
jge
mov
mov
mov
movsl
and
add
pop
push
clc
push
mov
lods
fidivs
jp
pop
lods
test
mov
leave
sbb
rclb
push
or
imul
loope
push
xchg
dec
cmp
mov
add
dec
pushl
xchg
lods
bound
xor
clc
sbb
int3
push
cltd
enter
repz
lods
in
mov
cwtl
out
lea
outsb
aam
mov
negl
mov
sarl
fisttpll
push
sbb
dec
cltd
hlt
sti
mov
loope
push
xchg
xor
jle
adc
mull
mov
sbb
sub
imulb
and
mov
dec
xchg
nop
adc
das
adc
flds
dec
inc
fucomip
repnz
cmp
mov
cld
lods
dec
bound
fcoms
fsubrl
xchg
stos
enter
loopne
das
xchg
mov
add
dec
mov
fsts
shlb
ret
lahf
scas
xlat
fcmovnu
push
inc
fwait
mov
cmp
pop
sub
inc
add
sbb
subb
lcall
stos
adc
mov
adc
xchg
jbe
rcrl
inc
test
lahf
lods
lea
aad
sti
mov
push
sub
imul
and
jle
mov
mov
popf
xchg
out
lock
sbb
aad
repz
pop
mov
jne
mov
fbld
mov
lock
pop
adc
dec
dec
adc
push
dec
mov
js
or
mov
aam
sub
cmpsl
lahf
nop
stc
pushf
dec
subl
mov
lret
movsb
push
sub
xor
lods
inc
jae
repz
mov
lret
movsl
jae
aam
mov
adc
imul
jge
push
cmpsl
and
sub
adc
or
lahf
fisttps
adc
inc
fwait
test
sti
sub
mov
or
or
push
pop
scas
inc
fsubrs
loop
or
repnz
xchg
fistps
cmp
loop
addr16
pop
mov
jmp
out
call
inc
cltd
addr16
gs
xchg
enter
ljmp
mov
daa
jb
lret
adc
rclb
cwtl
dec
and
mov
mov
test
filds
clc
ss
pop
lret
call
pushf
sbb
push
arpl
out
sbb
cltd
nop
addr16
sbb
dec
ret
int3
adc
mov
outsl
pop
mov
fldenv
mov
movl
pop
xor
test
pop
xchg
add
xchg
lcall
mov
fwait
mov
dec
movsb
push
int3
clc
xchg
add
lahf
push
xchg
mov
incl
enter
sub
dec
adc
sarb
mov
pop
repz
push
pop
fimull
or
xchg
iret
fucomp
xchg
mov
scas
xchg
cmp
cmp
and
call
pop
adc
rcl
adc
or
mov
nop
test
imul
mov
lods
insl
sub
push
pop
rcll
pop
repz
lods
lods
mov
xorl
jmp
mull
leave
xchg
out
mov
pop
imul
inc
mov
mov
dec
fsubl
pushl
inc
push
and
lcall
or
sbb
inc
and
push
and
js
les
sbb
sbb
dec
scas
xchg
stos
mov
adcl
add
push
cltd
mov
jnp
xor
mov
leave
loop
xchg
dec
dec
adc
lahf
adc
add
push
cmp
inc
std
pop
pop
xchg
cli
mov
jmp
and
inc
jb
fwait
lea
xor
sub
jecxz
test
push
or
fldt
cmp
scas
mov
mov
adc
and
sub
push
in
stos
mov
lock
mov
push
fadd
push
sbb
sub
movsl
leave
fsubrl
repnz
pop
adc
and
jne
dec
sahf
cwtl
stos
push
test
mov
mov
and
mov
std
test
lods
lret
inc
ret
pop
sub
nop
pop
aas
sub
xchg
add
or
mov
mov
loopne
or
mov
loopne
lahf
scas
fisttps
js
mov
out
test
cmp
rolb
imull
orb
and
xchg
xchg
inc
push
mov
or
mov
sub
pop
sbb
cmp
into
jns
addr16
sti
cmc
fwait
xchg
iret
sbb
test
inc
sub
mov
add
inc
dec
cmpsb
jne
fsubr
mov
adc
lods
pop
das
or
shll
mov
pop
hlt
aas
movl
pop
or
aas
int3
ss
rcrl
sbb
ja
bound
xor
sbb
leave
out
inc
sub
fdivl
ret
push
mov
ret
push
gs
repnz
and
fcmovnu
in
mov
lds
cmp
cmp
xchg
in
jbe
addr16
fnsave
ret
lcall
sbb
mov
in
add
lahf
mov
cmc
jge
sarl
sub
test
adc
idiv
push
sti
add
fsubs
sbb
mov
or
sahf
call
fsubrs
pop
push
pop
mov
aas
inc
cmc
jmp
and
lcall
sbb
sbb
cmp
jecxz
and
xor
popf
inc
cs
int
pop
out
sub
or
mov
addb
pop
loopne
mov
clc
sub
pop
sbb
sbb
sahf
ds
pop
lock
add
jmp
adc
imulb
xor
dec
sbb
dec
xchg
nop
in
sbb
push
adc
dec
mov
mov
mov
in
mov
and
mov
and
icebp
roll
sbbb
test
inc
sbb
sbb
or
inc
into
sbb
mov
xchg
xchg
inc
sbb
ret
jecxz
cmp
and
stc
idivl
or
icebp
jl
lods
mov
in
ficoms
xchg
int
pushl
push
cwtl
inc
stos
sbb
mov
fsubr
jbe
inc
sub
add
push
fwait
int
inc
cmc
sahf
or
dec
rep
add
jp
sbb
mov
fmull
cwtl
dec
xchg
or
enter
mov
add
push
mov
sbb
or
pop
test
pop
xlat
jmp
cmp
fsubl
cltd
jmp
add
jmp
into
adcb
inc
lret
stos
cmp
pusha
xor
pop
dec
cmp
xlat
or
and
test
ret
ss
sahf
sbb
mov
inc
insb
or
pop
dec
xchg
lds
idivl
mov
cmp
gs
scas
cmp
xor
sub
fcompl
dec
mov
sar
mov
pop
xor
pop
inc
shlb
add
xchg
sbb
out
pop
adc
push
lods
daa
enter
mov
fistpl
js
ret
in
cmp
data16
jne
xchg
int
xor
int
mov
mov
jl
dec
mov
xor
mov
jmp
fcomip
hlt
sbb
das
jge
mov
add
inc
inc
divb
sub
adc
inc
inc
mov
fmulp
mov
sahf
sub
sbb
add
mov
ret
popa
cltd
lret
mov
sbb
add
je
stos
mov
ja
repz
pop
xor
sbb
out
mov
and
push
inc
data16
scas
icebp
or
or
inc
xchg
add
or
lret
sbb
pop
inc
cltd
fwait
cmpsb
adc
shrb
cli
sbb
xor
mov
and
push
repz
loop
repz
jg
pop
pop
pop
or
add
mov
mov
fwait
push
mov
cmp
mov
sti
fldenv
sbb
jge
lds
mov
popf
dec
inc
je
mov
inc
sbb
sbb
lret
mov
dec
sbb
sahf
sub
xor
inc
inc
pop
rorb
adc
and
insl
mov
inc
mov
xor
rol
mov
jbe
mov
mov
mov
pop
jmp
or
xchg
int3
leave
xor
cmp
dec
inc
push
and
std
xlat
cmp
inc
dec
js
xchg
lret
pop
dec
mov
fldt
pushf
movsl
icebp
adc
pop
retw
inc
pop
mov
rolb
daa
gs
dec
mov
iret
push
adc
mov
loopne
push
mov
enter
stc
ljmp
xlat
mov
xchg
mov
add
xchg
mov
arpl
pop
stos
aam
mov
jnp
inc
push
mov
xchg
sbb
and
cmpsl
lahf
movsb
int3
data16
xor
movswl
jmp
std
mov
sti
and
test
and
addl
adc
mov
xchg
cmp
or
aas
ljmp
pop
pop
arpl
fsubrs
popf
mov
cmp
jp
add
mov
mov
add
ret
push
lods
xchg
sub
adc
repz
sahf
jmp
sahf
mov
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
invd
mov
shlb
scas
xchg
ficoml
lcall
jge
pop
movsl
nop
aaa
mov
bound
popf
adc
cmpsl
push
pop
lret
push
enter
cwtl
add
add
and
or
add
decl
jnp
inc
push
mov
pop
xor
gs
mov
inc
sbb
mov
jne
fnstcw
mov
mov
cwtl
mov
mov
cmpb
xchg
sub
sub
in
cmc
fisubrs
sub
out
and
sbb
lahf
jmp
inc
sahf
sub
mov
pop
add
xchg
lret
in
lds
sbb
movsl
xchg
sub
pushf
ret
pop
pushf
dec
test
xor
xlat
dec
sbb
xlat
or
push
test
ret
fucom
jmp
ljmp
and
jmp
mov
sbb
lret
or
sbb
ja
lret
stos
add
adc
pop
cmpsl
pop
pusha
jbe
mov
or
ficoms
ficompl
and
xor
add
js
sub
cmovne
repnz
cmp
push
mov
pop
xor
insl
in
imul
insl
fdivr
sbb
jmp
std
mov
sti
and
or
xlat
mov
insb
push
test
out
mov
cmp
in
cmc
hlt
mov
mov
arpl
int
popf
sub
jg
iret
cmpl
adc
movsl
add
mov
lock
lock
sub
jl
repnz
fwait
fwait
jns
lret
inc
sub
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
movsl
dec
mov
mov
in
bound
or
sbb
fisttpl
outsb
les
pop
sbbl
jecxz
cmpsl
frstor
sub
inc
aas
lahf
fisttps
jle
add
add
xor
loop
movsl
cmp
pop
cmp
test
xchg
es
aam
iret
mov
lcall
inc
sub
addl
movsb
sbb
in
test
fnstsw
jecxz
xchg
pushl
int
sti
sti
and
loopne
jecxz
mov
inc
or
cmp
fadd
mov
imul
clc
js
test
orb
icebp
fdivrs
fisttpll
add
mov
cmp
jp
add
adc
and
lcall
push
jo
mov
out
pushf
mov
int3
mov
lahf
jecxz
test
sbb
je
mov
cli
in
test
or
xchg
into
adc
add
aas
cmc
sbb
mov
pop
mov
mov
dec
test
fcoml
pop
fidivrs
js
popf
enter
out
xchg
iret
inc
das
add
out
add
rcl
adcb
je
adc
inc
test
xchg
movsb
lahf
movsb
mov
int3
inc
fimull
rolb
rorl
or
test
mov
fisubrl
enter
adc
fidivrl
into
sbb
movsb
aad
cs
orb
addr16
pop
movsl
pop
in
mov
push
sub
sub
fucomip
repz
inc
hlt
xchg
mov
inc
jnp
sahf
fwait
inc
loope
adc
flds
inc
imul
icebp
ss
xchg
sub
and
les
inc
lahf
mov
aad
jae
xchg
push
jns
shll
int
int3
mov
xor
stos
xor
or
enter
or
dec
push
jno
push
cmc
sbb
inc
sti
or
in
enter
jae
stos
add
dec
add
xor
popf
pop
add
jmp
test
cmp
push
inc
mov
dec
push
je
xchg
mov
jnp
mov
lds
xor
aad
jmp
lret
cltd
push
inc
subl
mov
jmp
inc
sbb
sub
or
mov
insb
ljmp
lods
mov
aas
pop
cmpl
popa
pop
add
add
mov
pop
repnz
xchg
out
ficomps
push
pop
icebp
retw
popf
pop
inc
mov
adc
stos
xor
shrl
sbb
dec
repz
rcrl
mov
clc
mov
fs
dec
mov
lret
shll
adcl
add
inc
adc
enter
pop
lds
push
jnp
cmp
faddl
icebp
sbb
stos
sub
dec
adc
cmp
adc
mov
dec
shlb
jg
shll
add
test
push
fidivl
pop
jae
inc
and
push
mov
pop
cmp
pop
imul
jmp
and
and
mov
insb
mov
add
gs
out
dec
mov
lods
out
inc
sbb
add
mov
rcrl
je
push
test
in
push
dec
daa
cmp
jp
add
stc
out
mov
stc
js
cli
push
cli
fcmove
sbb
pop
insb
mov
jb
dec
push
ljmp
stos
and
xchg
mov
jmp
shll
or
push
pop
inc
push
or
or
or
bound
adc
lret
xor
and
mov
aad
lods
scas
fucomi
sbb
into
mov
push
mov
add
jmp
dec
incl
adcb
mov
and
add
dec
and
repnz
and
cmp
ret
stos
insl
fcomp
movswl
jmp
std
mov
sti
and
xchg
enter
leave
push
or
mov
cltd
mov
mov
cmc
hlt
imul
jne
aam
jae
adc
addr16
pop
rcrl
repz
sbb
sbb
es
inc
cmp
add
sbbl
fs
and
icebp
out
mov
push
push
push
and
push
xor
mov
je
fcmove
push
lret
sar
cmp
icebp
sbb
add
or
hlt
aaa
sub
xchg
mov
ljmp
jnp
fnstenv
cli
aas
lahf
inc
std
sbb
repz
jno
fs
push
rcrb
jl
arpl
push
out
idiv
sub
dec
sbb
hlt
jp
out
jle
cld
call
popf
mov
addr16
jno
and
std
bound
mov
repz
ss
mov
dec
dec
mov
xchg
mov
in
repz
loopne
mov
pop
or
inc
dec
pop
mov
loopne
fiaddl
adc
sahf
dec
sbb
cwtl
jecxz
enter
jbe
pop
mov
xorb
mov
pop
jno
push
sbb
push
cmp
push
aad
pop
push
scas
or
and
adc
outsb
adc
xor
jbe
outsl
mov
rorl
ss
push
divb
adc
jmp
fsubr
jge
aad
in
lds
or
out
jnp
mov
xor
mov
mov
clc
mov
pushl
adc
int
dec
mov
mov
push
pop
cli
jg
inc
gs
dec
jae
xor
fisubs
jge
outsl
movnti
mov
fcompl
xchg
dec
mov
enter
and
xchg
movsb
out
push
loop
rcrb
mov
xor
aas
sub
or
lea
sbb
pop
lds
sbb
inc
inc
xlat
cmc
jmp
repnz
int3
and
test
ffree
inc
call
or
ret
cmpsb
test
lahf
sub
dec
rcr
push
mov
sub
cmp
sub
cmc
sbb
inc
fisttpl
lret
shr
std
inc
inc
and
adc
popf
addb
and
fstps
push
mov
aam
push
inc
pop
and
mov
lds
and
xor
mov
cld
cmc
lret
andl
add
inc
lcall
clc
dec
mov
fptan
fwait
xor
xchg
sbb
inc
gs
mov
std
mov
xchg
cltd
in
rcrb
jnp
cwtl
bound
mov
inc
inc
mov
sub
add
ret
push
dec
mov
int
or
ficomps
push
fldl
fsubs
je
and
fstl
inc
ret
push
add
inc
ds
pop
fimull
push
lock
mov
jmp
hlt
shlb
mov
xchg
mov
movsb
iret
fcmovb
jg
rcll
mov
add
ja
sbb
cld
mov
mov
pusha
cmc
fisttps
or
jno
dec
enter
mov
add
push
push
mov
adc
or
lret
xor
pusha
jbe
lods
xor
inc
xor
clc
push
rcll
les
and
sub
pop
out
add
lcall
fisttpl
stc
mov
xor
xlat
and
mov
dec
push
loope
iret
mov
push
iret
repz
pop
pop
push
mov
fnstenv
test
adc
mov
pushf
mov
pop
fstpl
jns
or
test
or
mov
movsl
inc
imul
jecxz
int
lock
jl
jg
fbstp
test
pop
mov
sbb
dec
add
or
insl
pop
sbb
push
lock
ss
mov
pop
jnp
and
test
jne
std
jae
sbb
xor
pushf
pushf
dec
data16
xchg
xor
orl
lods
xchg
stos
std
xor
sub
xor
pop
or
lds
inc
mov
iret
sarb
iret
pop
pushf
jle
xor
fyl2x
xor
inc
das
and
aas
push
xchg
popl
and
adc
sti
inc
insb
mov
push
mov
jae
outsl
lcall
ret
xchg
sub
fcoml
fucomi
scas
inc
sti
mov
cmpsl
adc
vsqrtss
jo
or
mov
xchg
inc
xchg
or
stos
out
fistl
xchg
mov
pop
pop
stos
inc
ret
and
cltd
jge
popa
cmp
mov
call
inc
adc
and
in
pop
inc
mov
cmp
push
rol
popa
and
aaa
mov
clc
dec
outsl
enter
mov
mov
cmp
lods
cmpl
mov
lea
mov
enter
jg
pop
stos
xchg
cmpsb
jbe
pushf
cmpsb
mov
lock
es
rcll
inc
pusha
or
mov
aad
sbb
test
inc
sarb
mov
or
add
adc
popl
or
test
sti
add
stos
and
fdivl
test
xchg
xchg
adc
push
dec
insb
push
stc
insb
dec
cmpsl
add
adc
test
test
cmp
inc
lds
repnz
push
push
and
add
cmp
sahf
or
jmp
stos
sub
lret
mov
sub
cmpb
ret
stos
mov
ret
cmpsl
fxch
call
mov
mov
push
out
sbb
dec
movsl
ret
mov
inc
incb
push
push
cli
scas
shlb
push
cmc
mov
inc
out
int
repnz
pop
cld
stos
shll
pop
add
sarl
ret
int3
call
adcb
gs
fisttps
imul
mov
push
or
and
add
gs
mov
push
inc
faddl
jmp
fwait
movsl
jg
push
sub
or
push
lock
mov
xor
inc
add
sbb
cltd
dec
cwtl
clc
jle
rcll
adc
repnz
dec
mov
inc
push
std
les
nop
cmpsb
std
sbb
shll
jb
int
fcomp
dec
jecxz
arpl
add
push
sub
shl
in
push
loopne
int
or
int
pop
movsl
imul
jmp
lods
cltd
mov
jmp
push
add
ret
xorb
mov
fmull
lahf
pop
decl
dec
mov
outsb
shl
jmp
daa
dec
test
stos
mov
add
jae
pop
or
push
aam
dec
mov
xchg
mov
or
adc
pop
jle
cwtl
xor
dec
sbb
add
xor
cmp
xor
xor
pusha
mov
xor
fcmovnb
dec
je
outsb
jl
xchg
lds
xlat
es
call
test
dec
jmp
loop
cwtl
inc
stos
sbb
es
sbb
repz
push
jne
in
or
add
mov
jnp
enter
loopne
je
mov
adc
push
adc
addr16
push
adc
jns
mov
push
push
push
popf
jbe
sbb
or
mov
dec
movsl
movsb
dec
lcall
scas
or
push
sbb
sub
mov
xor
or
stos
dec
or
mov
dec
fistl
pushf
dec
and
push
neg
push
pop
sbb
sbb
inc
mov
sbb
mov
sub
push
xor
out
sbb
int
mov
inc
scas
xchg
mov
jl
pop
stos
xchg
stos
std
xor
mov
int
in
pop
mov
fstl
scas
push
ret
subl
enter
fdivl
rcrb
pop
adc
mov
lea
in
dec
mov
pop
out
fs
out
or
add
lods
ret
test
shll
jge
mov
add
inc
hlt
js
test
fmull
xchg
test
push
pop
sbb
pop
sub
js
test
or
fiadds
and
jne
lds
cmpl
sbb
ljmp
fldenv
mov
or
or
ret
aas
loop
imul
sub
idivl
inc
std
movsl
dec
sbb
les
push
test
xchg
addr16
leave
dec
or
mov
cmp
dec
outsb
out
sbb
pop
adc
adc
xchg
xor
push
lret
pop
add
nop
mov
jo
sub
pop
pop
sbb
pop
jb
or
and
fstl
push
sarb
icebp
jb
and
or
loopne
xor
pop
push
push
sub
cmpsb
mov
addl
cmp
gs
push
dec
test
inc
hlt
jo
sbb
loop
hlt
mov
popf
ja
push
adc
in
dec
fsubr
mov
adc
pop
push
jno
push
add
out
in
mov
stc
js
pop
add
std
ficomps
pop
testl
lds
sbb
int
stos
ja
int
addr16
popl
imul
pop
inc
cltd
lret
lcall
sbb
inc
fldt
jnp
sbb
call
add
test
adc
push
cmp
xchg
dec
mov
loop
movsl
pop
pusha
ja
mov
jno
aad
ds
jno
in
lds
inc
cmp
stc
and
adc
scas
adc
adc
xchg
jge
fwait
xor
push
sub
pop
test
xlat
sbb
push
gs
stos
les
jb
ret
xchg
lods
inc
fimuls
xor
push
and
iret
sub
jecxz
mov
stc
out
je
loopne
imul
sahf
dec
mov
sbbl
push
js
loope
mov
iret
fbstp
lods
mov
sbb
testl
pop
lock
negl
adc
or
fwait
lret
movsl
mov
and
loop
adc
test
push
lret
xor
shll
xchg
dec
shr
repz
stos
pop
js
jb
scas
sar
cmp
jno
inc
sbb
cld
mov
es
or
mov
add
xchg
xchg
push
push
lods
inc
inc
mov
mov
cwtl
sbb
inc
pop
leave
xor
cltd
ret
mov
enter
adc
es
in
test
xchg
pop
data16
dec
sarb
xchg
jmp
lods
xlat
insb
imul
cmp
lea
xchg
sti
and
sbb
daa
loopne
hlt
je
nop
lea
jle
fcmovne
mov
cmp
aaa
lret
mov
movsl
xchg
inc
inc
sahf
sub
fisubs
imul
dec
lock
mov
pop
cli
mov
test
pushf
sbb
insb
or
sub
fnsave
dec
and
mov
cli
das
repnz
push
in
popa
decl
sbb
dec
sbb
rcr
mov
xor
inc
or
leave
mov
fisttpl
and
mov
jl
pop
insb
sahf
test
dec
lds
inc
mov
lret
xchg
mov
std
cli
jnp
inc
mov
lods
push
sbbl
mov
pop
outsb
mov
pop
cltd
cmp
adc
fidivrl
hlt
cmp
inc
jne
mov
ret
fxch
mov
push
xchg
js
push
add
push
dec
add
mov
out
mov
movsb
popf
fwait
push
mov
pop
jno
std
dec
pop
lea
ss
mov
mov
movsl
movsl
insl
jge
and
std
mov
push
inc
mov
sti
je
adc
sbb
mov
sub
push
jmp
lds
lods
push
dec
outsl
dec
mov
xor
dec
jae
fcmovne
scas
or
shr
push
cmpsl
push
jg
gs
adc
hlt
mov
cwtl
mov
subl
jb
xchg
dec
mov
fdivrl
jne
pop
movsb
movl
in
fwait
or
mov
loopne
jo
lea
jl
daa
sub
pop
adc
ljmp
divl
pop
mov
pop
cmpsl
cmp
or
fwait
ret
cltd
enter
repz
enter
shr
jl
adc
scas
int
imul
cmpb
mov
lods
test
mov
inc
pop
mov
out
cmp
insl
ret
mov
push
lock
loop
clc
sahf
sub
dec
jo
mov
inc
xchg
xorb
or
outsl
sub
dec
and
xchg
loop
mov
and
dec
mov
into
arpl
insl
mov
mov
push
test
mov
cmpsb
push
push
sahf
pushf
mov
scas
mov
in
js
add
xchg
cmp
mov
popa
scas
jo
and
sbb
jle
mov
jge
inc
stos
rol
push
or
repz
decl
lods
daa
sbb
lock
inc
test
xchg
test
lods
xlat
inc
xchg
imul
loopne
pop
sbb
fldpi
inc
lret
movsl
xchg
xor
aam
inc
loop
mov
aas
adc
add
mov
mov
aad
mov
fld1
repz
and
addr16
pop
pop
cmp
out
repz
ds
mov
in
arpl
mov
mov
or
cmpsl
mov
fsubl
cwtl
or
mov
clc
movsl
cmpsl
mov
test
test
push
mov
fucomp
jae
dec
into
pop
inc
jp
pushf
loope
sbb
aam
daa
sbb
cmpsl
fwait
in
addb
insl
mov
stos
outsl
dec
std
ss
push
scas
dec
jnp
pop
decl
popf
jle
cmp
jg
pop
add
mov
test
std
inc
scas
fidivrs
cmpsl
insl
ret
sahf
lahf
shll
xlat
mov
cmp
addr16
adc
pushf
mov
mov
test
and
int3
xor
sbb
jne
xchg
dec
push
xchg
xchg
enter
mov
insb
sti
fistps
or
dec
int
mov
xor
or
stc
jae
int3
add
jmp
inc
jae
add
add
ficomps
lret
aaa
lock
cltd
push
mov
in
dec
add
sbb
push
mov
fnstenv
arpl
add
mov
stc
cmpsl
adc
dec
sbb
add
xor
in
push
inc
jp
xchg
dec
repnz
sub
or
jbe
out
pop
push
mov
sbb
filds
xchg
lcall
xor
jmp
jecxz
fs
ret
jo
subl
jl
pop
adc
add
or
push
cwtl
dec
fldl
fisttpl
sub
mov
jmp
xchg
or
div
jae
enter
mov
int3
pop
add
inc
imul
mov
fstp
imul
xchg
mov
inc
inc
lret
jno
fmul
pop
test
lock
dec
out
fucomip
in
stos
jge
dec
push
call
jmp
fwait
aaa
hlt
call
mov
or
and
loop
push
in
jno
or
adc
filds
push
rclb
dec
loop
adc
movsl
cld
xchg
mov
bound
mov
adc
idivb
fwait
mov
cwtl
and
subl
dec
jnp
inc
xchg
push
sub
lcall
cmp
or
inc
xlat
mov
rcrl
mov
pushf
cmpb
out
xchg
jae
daa
ja
pop
push
cmpsb
pop
arpl
push
test
mov
mov
mov
cltd
cmpsl
sti
xor
add
or
push
enter
mov
fcoms
test
aas
add
mov
stos
xor
cmp
xchg
or
popa
in
pop
push
or
add
sarb
inc
mov
popf
ljmp
sti
repz
mov
cli
icebp
lar
leave
jo
mov
mov
adc
dec
movsb
mov
add
lahf
sub
dec
pop
scas
push
adc
or
fisttpll
pop
xor
sbb
jno
fwait
mov
movzbl
mov
imul
cmpsb
outsb
push
fs
and
lret
ficompl
test
mov
aaa
jo
push
bnd
add
inc
ja
dec
add
inc
sbb
aad
mov
sub
xchg
jbe
popf
pop
xchg
enter
dec
mov
dec
or
xchg
adc
shlb
sbb
setge
flds
jg
adc
fstpl
xlat
mov
je
sahf
cmpsl
jl
mov
inc
pushf
repz
mov
xchg
mov
pop
push
subb
out
inc
pop
push
sbb
pop
notb
call
dec
aam
dec
fmull
or
mov
mov
jo
cmc
push
mov
sub
and
mov
mov
sub
cmp
adcb
sbb
stos
xorb
test
mov
inc
fnsave
push
mov
xor
in
push
les
cmp
sub
cmp
push
fadds
mov
fildl
lcall
js
cmp
insl
mov
jb
mov
and
ret
cmpl
push
cltd
cmpsl
lock
je
fwait
inc
add
subl
and
sbb
xchg
ret
nop
inc
mov
inc
xor
mov
jne
pop
ja
or
ficomps
pop
in
xor
and
xchg
cmc
movsl
mov
sbb
es
sbb
jns
nop
outsb
aaa
mov
mov
add
lods
cmpsb
ret
sbb
mov
dec
xlat
dec
adc
fmulp
push
test
lods
stc
dec
dec
mov
cmp
mov
xor
imull
pushf
dec
shlb
mov
fs
or
mov
in
add
jp
add
insb
bound
les
jp
jb
inc
fisubl
sbb
mov
add
push
jo
scas
popl
imul
inc
add
addr16
push
or
sbb
push
pop
mov
leave
push
jne
mov
mov
dec
popw
lea
mov
sti
and
xchg
enter
leave
push
or
mov
and
push
ss
adc
call
sahf
ljmp
ja
repz
cmpl
lock
outsl
dec
popf
fstpt
cld
aad
adc
imul
sti
xorb
mov
dec
pop
fisttpl
xchg
xlat
dec
sub
push
sub
in
sbb
xchg
xchg
icebp
lods
stos
cmp
lds
insl
roll
in
pop
pop
in
scas
ja
test
pushf
pop
pop
adc
cmpsl
ret
jmp
mov
pop
insb
jbe
xor
jno
movsb
lods
lret
dec
int
fcmovnb
cmp
std
cli
jnp
inc
mov
adc
mov
inc
add
or
add
shll
mov
xor
dec
sub
mov
aad
cmc
mov
mov
or
dec
test
mov
sbb
dec
sbb
push
push
inc
jno
mov
fisubrs
clc
cmp
sub
adc
scas
leave
popf
stos
shr
repz
inc
xchg
jl
cmpsl
push
cltd
jmp
clc
or
imul
xor
sbb
imul
mov
and
xchg
stc
mov
sbb
mov
push
aad
test
mov
push
cltd
ljmp
popf
lret
sbb
dec
push
sub
add
cld
jnp
adc
xchg
dec
or
mov
gs
mov
inc
mov
push
mov
aas
lahf
fisttps
das
xchg
push
pop
leave
stc
cmc
cmp
aas
fimull
rorb
stos
fsub
jo
test
out
sarl
xchg
cmc
mov
inc
xchg
ljmp
stos
pop
xchg
cmp
ret
mov
add
and
daa
pushl
mov
arpl
sbb
jle
cmp
ret
popl
adc
fsts
call
xor
mov
imul
ret
xor
repnz
adc
ret
inc
sbb
mov
ss
aaa
ror
sbb
sti
stos
test
pop
cli
stos
repnz
out
jmp
or
stc
jnp
pop
dec
push
test
xor
test
mov
sub
sbb
or
pop
sub
jp
add
sbb
cmpsl
inc
inc
pushf
fucompp
sbb
test
out
stc
repnz
rclb
insl
in
sbb
inc
pop
sti
push
mov
inc
mov
orb
mov
call
inc
pop
clc
loop
ds
jmp
std
mov
sti
and
xchg
int3
jecxz
movsl
cwtl
lahf
jae
cltd
pop
inc
cmp
das
in
cmc
hlt
cwtl
mov
mov
dec
adc
add
cmpl
mov
repz
lea
inc
add
dec
ret
dec
sbb
mov
xchg
xor
mov
xchg
dec
xor
stos
dec
in
ljmp
js
sbb
xchg
xlat
int
jmp
sub
and
lret
sub
cmpb
jne
dec
bound
adc
sub
adc
mov
mov
push
cmpsl
mov
or
mov
cld
adc
fs
mov
mov
add
clc
mov
inc
test
dec
cmc
loop
repnz
xor
loop
test
insl
out
imul
fld1
movsl
xor
cmp
int3
jno
cltd
push
adc
push
fwait
fwait
nop
jecxz
dec
mov
adc
jle
push
insl
mov
mov
push
and
adc
lea
push
xorl
pop
or
in
imul
lret
mov
mov
jmp
or
lods
movsl
int3
push
fnsave
pop
sarb
dec
sbb
arpl
lds
fiaddl
jae
or
mov
sar
xor
cwtl
adc
pusha
call
mov
lock
push
lcall
out
cld
and
adc
ret
mov
push
and
sarb
dec
jmp
iret
sub
add
push
or
arpl
xchg
and
lods
adc
aam
sahf
cmpsb
shrl
push
fidivrl
out
das
cmpsl
jnp
or
lcall
push
add
mov
dec
xorb
sbb
and
mov
and
hlt
test
xor
and
sbb
lods
test
cmp
popf
mov
in
sbbl
movsl
add
adc
mov
int
test
jecxz
dec
cltd
lahf
roll
dec
rcrb
loope
mov
and
jns
sbb
ljmp
or
mov
xchg
xchg
test
dec
mov
test
jl
addb
sub
lret
fcomip
add
push
mov
lods
jle
dec
jbe
xor
inc
pop
lcall
cld
push
inc
or
jae
adc
sbb
cwtl
cld
inc
sarb
push
mov
inc
test
and
and
xor
push
sub
jmp
stos
repz
or
fwait
xlat
push
pop
out
enter
and
sbb
jecxz
and
call
mov
and
out
lret
push
adcl
xor
cmpsb
testb
add
pushf
dec
add
pop
mov
push
mov
pusha
insb
div
mov
cltd
pop
mull
cltd
push
push
xlat
jae
fwait
leave
std
cltd
lret
inc
sub
mov
leave
pushf
xor
mov
push
sub
leave
dec
inc
fbstp
sahf
pop
stc
dec
pop
add
cmp
push
test
cmp
mov
xchg
dec
aad
xchg
sbb
cmpsl
dec
sub
mov
mov
fucomip
jmp
and
bound
mov
xchg
mov
enter
inc
inc
sbb
rclb
icebp
adc
xchg
cmc
mov
push
fdivrs
and
mov
cmp
lret
mov
add
fistpl
leave
sbb
mov
mov
sub
shlb
ljmp
imul
or
lahf
iret
ret
clc
jecxz
fwait
loopne
xor
mov
mov
scas
fimuls
sar
pop
out
icebp
cli
dec
loopne
dec
movsl
mov
mov
xor
mov
test
in
std
test
and
cld
mov
lret
push
add
mov
les
ret
xor
cmp
popf
lret
jle
stos
jne
lds
fidivrl
rcrl
cltd
xchg
add
mov
jmp
mov
imul
fists
pop
xorb
mov
mov
enter
adc
int
add
xorl
mov
into
aam
dec
js
scas
ret
cmp
pushf
push
sub
or
out
or
lea
inc
cltd
enter
mov
je
enter
stos
scas
pop
fmull
xchg
test
outsl
mov
mov
sub
test
stos
shr
pop
adc
cmp
sub
das
inc
clc
ds
das
icebp
movl
test
loopne
pop
fimuls
jo
cmpb
imul
lahf
inc
xchg
aas
push
test
cwtl
mov
sbb
addr16
sbbb
fistl
repz
sub
cmc
mov
or
xor
sbb
jno
cmp
inc
lret
push
inc
xlat
fcoml
pushf
vpmacsswd
adcl
imul
jp
das
pop
popf
sbb
sti
and
imul
into
out
add
dec
mov
dec
pusha
mov
out
aam
jns
mov
or
adc
ds
mov
mov
pushf
rcl
call
mov
jp
cltd
int3
inc
cmp
lret
xor
sub
movsb
enter
fldpi
push
and
ret
pop
push
popf
mov
mov
pop
xor
dec
pushf
stos
repz
sti
daa
mov
lcall
adc
inc
mov
cltd
insb
or
lods
push
jbe
and
xorl
les
mov
mov
jnp
sbb
mov
add
mov
dec
sub
cmc
cld
xor
xchg
add
mov
mov
mov
mov
clc
test
cmp
push
fdivl
mov
jge
dec
cmp
icebp
sbb
cmc
and
cmp
or
shll
mov
push
out
insb
xor
jb
fldl
nop
mov
or
out
jecxz
mov
pop
xchg
jl
ret
les
int3
jg
test
jecxz
inc
pop
cwtl
into
xor
adc
cs
sbb
dec
in
sub
dec
popa
pop
ret
mov
pop
mov
das
pop
fisttpll
xor
sub
pop
and
xchg
dec
fldcw
jbe
add
lds
pop
pop
sub
cmp
xor
cwtl
lret
inc
scas
cltd
in
inc
nop
xlat
stos
adc
sti
loop
dec
sbb
xchg
xlat
mov
adc
lret
sub
cld
mov
sbb
xchg
scas
in
inc
aad
imul
rcrb
mov
push
adc
push
cmp
add
sbb
inc
cld
push
pop
xchg
sbb
mov
jle
push
incl
ja
xor
mov
cmp
insb
mov
sub
dec
repnz
das
sbb
fld1
cmpsb
cmp
test
push
dec
push
cmp
test
push
sub
mov
fs
and
pop
inc
adc
xor
shll
xchg
ljmp
fildll
xlat
mov
mov
sti
mov
mov
jns
dec
movsl
jg
mov
and
xchg
pop
adc
pushf
sub
clc
stos
sub
out
lods
fisttpll
jmp
pop
inc
sahf
cltd
dec
fnsave
mov
pop
lret
std
mov
mov
cld
sti
sbb
inc
fmuls
jge
imull
dec
and
push
test
mov
cmp
sbb
inc
shll
rcl
movsb
movl
or
jl
pop
mov
lock
sub
push
fimull
je
mov
test
shlb
mov
in
cmp
daa
push
les
xchg
sti
cld
inc
sbb
push
int3
sbb
pop
push
push
mov
in
mov
add
sbb
aad
xchg
cwtl
sbb
mov
cmc
jmp
int
dec
mov
jmp
movsb
jne
sbb
and
movsl
lcall
incl
decb
fcomps
jge
dec
xchg
movsb
adc
mov
mov
ret
mov
sub
test
ror
push
out
test
test
adc
sub
mov
test
inc
mov
imul
cmc
aad
push
xchg
sahf
and
dec
push
xchg
in
in
mov
cmp
sub
pushf
and
xchg
mov
pop
push
cmp
dec
pushfw
mov
ret
xchg
or
scas
inc
fwait
lret
cltd
mov
andl
addl
add
and
xor
cwtl
cmp
jecxz
jmp
mov
dec
repnz
mov
popa
fnstcw
sbb
lret
mov
pushf
adc
and
arpl
lret
xor
sub
arpl
sbb
cs
mov
shll
fmuls
inc
mov
lock
push
jnp
push
lock
mov
sahf
sub
std
aaa
insl
test
push
jecxz
or
adc
fmull
xor
pop
sub
nop
push
xchg
fwait
dec
pop
jg
or
lahf
bound
push
mov
popa
lea
fwait
aad
xor
shlb
push
cld
add
mov
adc
dec
stos
lds
dec
dec
xchg
adc
and
fwait
lods
pop
jno
rcrl
pushf
mov
mov
fsubrl
fsub
and
loopne,pn
sub
inc
adc
jns
popl
push
out
jp
ret
mov
and
je
rcrb
stos
fdivrs
jmp
pop
push
mov
sbb
ret
outsl
lds
ror
push
enter
and
jbe
mov
or
xor
pushf
repnz
sti
loop
mov
mov
sub
jecxz
iret
pop
imul
and
mov
adc
sbb
out
pop
out
stc
js
fs
adc
push
mov
outsl
pop
mov
dec
pop
add
add
imul
je
xchg
loopne
push
adc
lea
test
pop
mov
and
or
call
cmp
mov
stos
push
dec
adc
mov
dec
fcmove
sarb
mov
push
sbb
mov
and
test
shr
fildll
jns
andl
repnz
jecxz
or
mov
adc
sbb
lea
lods
cmp
xor
addl
and
xor
popf
sti
or
pop
push
or
mov
ret
cwtl
mov
test
jecxz
je
xor
mov
call
ffree
sub
mov
outsl
lods
or
mov
pop
cld
lods
cs
adc
int3
les
leave
popf
lds
stos
stos
mov
in
leave
cmp
jmp
lods
test
aas
sub
xchg
pop
cmp
sub
arpl
sub
add
xor
push
cmpsl
jne
dec
xchg
jo
rorl
mov
sub
jno
shrl
jnp
enter
push
jle
cmc
inc
adc
std
mov
popf
scas
pushl
popa
xchg
xchg
xchg
sbb
scas
and
mov
adc
inc
inc
dec
out
dec
test
rcrl
inc
lret
push
ja
and
fnstsw
mov
push
jno
aas
fwait
dec
push
mov
gs
out
sub
loopne
inc
push
outsl
sub
sub
adc
ljmp
pop
pop
sti
lods
iret
or
ret
or
pop
cmpsl
pop
in
sti
rcll
loop
or
jae
lcall
xchg
lock
stc
adc
xor
mov
inc
and
pop
mov
push
test
cmpsb
mov
fnsave
mov
aaa
and
shl
shlb
xchg
sbb
lods
add
ret
test
inc
mov
lods
sbb
data16
xor
cmp
fildl
cs
shrb
scas
push
pop
xchg
js
mov
inc
push
sbb
mov
out
push
pop
adc
xchg
adc
inc
insl
xchg
call
stos
and
cltd
xabort
pop
mov
sti
mov
lods
or
popf
mov
aas
adc
adc
pop
pop
cmp
ret
dec
adc
flds
das
or
push
jae
xchg
cmp
scas
mov
pop
inc
mov
sbb
loopne
rorl
ret
push
or
enter
lcall
bound
cwtl
sbb
test
jne
mov
and
loop
xchg
mov
pop
ljmp
ret
cmp
rcrb
mov
popa
in
repz
adcl
movsb
push
enter
out
fistl
jnp
xor
jbe
xor
scas
loop
mov
jns
jge
enter
adcl
mov
adcl
dec
call
xor
adc
outsl
mov
pop
mov
sbb
bound
mov
xor
movswl
jmp
std
mov
sti
and
xchg
enter
leave
push
or
mov
push
sub
ja
or
sub
popf
stos
fsubrs
dec
mov
fsubrs
rolb
fstp
pusha
push
inc
inc
push
lahf
lcall
and
je
cld
xor
movsl
lea
insl
cwtl
mov
ror
add
mov
rcll
mov
sbb
popa
test
dec
xor
mov
mov
mov
cmp
cmp
cmp
jae
push
cmc
idivb
dec
xlat
stos
lds
movsl
adc
mov
loop
cli
cmp
stos
xor
xor
cmp
cmc
sbb
sti
sub
sub
push
andl
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
enter
mov
out
jo
ret
ftst
idiv
out
xchg
pop
jle
call
sti
pushf
sub
loope
andb
je
int
pusha
xor
in
xlat
adc
ret
jmp
test
cmp
mov
fcompl
jnp
jae
push
ds
cmc
sub
mov
jmp
hlt
mov
mov
sbb
outsl
ret
pop
dec
jo
dec
adc
lds
dec
inc
mov
dec
sarb
jno
lahf
jb
mov
inc
push
dec
mov
cltd
arpl
pop
push
cmp
dec
push
inc
fldt
jmp
pop
jo
test
pop
or
jne
int3
xchg
sub
rorl
stos
fistl
jb
xor
scas
lds
push
test
jmp
mov
jbe
jle
lods
push
fsubl
cmp
sub
mov
orl
sub
mov
mov
push
mov
jg
mov
or
sbb
int
daa
mov
and
mov
enter
xor
in
xchg
fwait
mov
fisubs
and
adc
pop
in
cs
jmp
xor
jge
pop
ret
or
ret
cmc
pusha
add
cltd
orl
std
pop
cmpsb
mov
sub
pop
jl
adc
add
lds
pop
push
dec
pushf
dec
lock
adc
mov
pop
mov
mov
sub
int3
lods
inc
dec
mov
mov
cmc
sbb
mov
pop
cltd
push
jmp
popa
xor
pop
test
gs
xchg
sar
and
call
in
int3
mov
mov
mov
test
lock
sub
in
jp
xor
xchg
pop
pop
sarb
xor
ret
jg
push
ret
mov
fists
push
stc
lcall
inc
mov
jmp
jb
mov
and
add
lods
sti
pushf
sub
int3
jecxz
mov
add
fiaddl
enter
mov
add
ljmp
ret
jne
sbb
and
or
adc
fistl
testb
mov
cmovge
les
cs
scas
inc
test
fisttpll
cmp
in
mov
fistps
imul
jge
ret
add
jae
pop
mov
cmc
mov
mov
in
iret
pop
push
stos
je
mov
or
sub
and
fistpll
push
lcall
jle
push
fmuls
lods
inc
movsb
lret
xchg
inc
scas
push
fadds
stos
sbbl
xchg
add
or
xchg
cwtl
jbe
xchg
cwtl
jae
cmp
jl
pop
in
jg
sahf
pushl
sbb
bound
out
pushf
sub
sahf
mov
push
loope
lahf
mov
cmp
fnstsw
sbb
out
enter
mov
mov
stos
scas
xor
orl
in
sub
fisttpll
push
mov
es
adc
jno
dec
and
push
lret
inc
fs
scas
lea
pop
inc
xchg
dec
push
test
mov
cld
push
cwtl
xor
nop
fwait
mov
test
mov
test
push
pop
movsb
leave
dec
push
imul
ret
lds
xchg
pop
in
cmpb
mov
test
pop
xchg
mov
mov
push
pop
pushf
sub
push
fstps
pushf
and
mov
cmp
xor
repz
jb
fsubs
aam
pop
jge
mov
insb
xchg
xchg
sub
test
cmp
xor
repnz
ret
fld1
jb
dec
outsl
sbb
and
ret
mov
sbb
and
arpl
jmp
sub
lcall
inc
jbe
fwait
aam
test
ficomps
jae
xor
jnp
sbb
push
xchg
xor
mov
lock
mov
sarb
inc
mov
int3
pushf
insb
mov
sub
sbb
push
sub
sub
inc
mov
xchg
lcall
and
fs
jno
adc
test
mov
sbb
cltd
imul
mov
xor
icebp
mov
lods
fldcw
push
pop
sbb
jb
daa
into
mov
cmc
iret
js
adc
inc
inc
neg
add
andl
inc
shlb
pushl
jecxz
jo
xor
xchg
pop
adc
mov
shlb
movsb
inc
add
mov
mov
sti
mov
lahf
iret
sbb
and
jge
cwtl
dec
push
fiadds
int
imul
mov
roll
xor
cmpsb
and
cmp
movsb
mov
loop
notl
dec
lahf
push
test
mov
in
ja
pop
adc
or
add
mov
mov
and
or
nop
xlat
dec
sub
mov
test
sub
and
sbb
push
sti
jmp
cld
fimull
insb
mov
jg
insl
lret
ret
nop
cltd
sbb
bnd
imul
mov
iret
insl
mov
jb
movsb
cmpsl
add
clc
mov
mov
push
loop
mov
dec
xchg
ss
stos
jle
cmpsl
imul
cmpsl
fwait
aad
xchg
mov
mov
lcall
loop
fdivrl
lret
enter
xchg
jnp
cltd
pop
fidivrs
das
xchg
enter
mov
xchg
fcmovnbe
insb
aaa
lret
jae
or
sub
jmp
mov
xor
mov
pop
or
or
call
mov
and
call
pop
pusha
lahf
sbb
jmp
cld
enter
popf
jmp
mov
ljmp
jecxz
lret
movsl
mov
adc
stos
mov
pop
or
xor
stc
dec
jno
sbbb
std
insl
fstl
mov
mov
sahf
dec
pop
or
dec
xchg
rcr
sbb
bnd
xchg
xchg
or
inc
lcall
cmp
or
or
mov
mov
sub
hlt
mov
es
popf
pop
pop
fbstp
sbb
add
adc
je
pushl
pop
nop
jl
sbbb
loopne
scas
addr16
out
sbb
pop
cmp
mov
ret
iret
cmpsl
ret
gs
out
jl
mov
popf
iret
jle
enter
add
mov
dec
aam
aas
fwait
sub
cmpsl
mov
and
mov
adc
rclb
cwtl
dec
and
mov
mov
test
fwait
lahf
stos
and
std
mov
xor
sbb
test
lcall
or
adc
mov
enter
shlb
xchg
dec
sbb
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
xchg
sub
inc
pop
mov
pop
lock
loop
test
push
lea
add
cmpl
mov
loope
js
popf
mov
sti
or
push
xchg
add
jle
add
imul
roll
popa
pop
dec
icebp
sub
or
sub
mov
mov
cmpsl
ret
lds
inc
sub
cmp
jecxz
aaa
add
cmpsl
hlt
je
nop
lea
lret
shll
pop
sarl
xlat
mov
jne
rcrb
cmp
repz
mov
lock
adc
sbb
adc
mov
mov
fwait
out
aam
mov
adc
shll
mov
lret
jmp
xchg
mov
popf
lret
add
sub
data16
fnstenv
or
pop
repz
dec
mov
fimull
jge
inc
cmpsl
inc
push
fmull
jmp
movsb
ficoms
mov
cwtl
sahf
jg
int
hlt
andl
lret
addl
sub
cld
fidivl
sbb
jmp
adc
pop
pop
lods
xlat
cmp
or
push
push
push
mov
inc
push
pop
pop
lock
fwait
cmpsb
sbb
mov
je
clc
xchg
or
adc
pushf
aam
iret
mov
repz
movsb
testl
pushf
mov
lret
sub
inc
add
outsb
add
inc
adc
mov
shll
enter
xchg
dec
push
fs
push
cli
pop
mov
adc
arpl
repnz
add
dec
bnd
inc
in
dec
push
inc
xchg
inc
fisttpll
xchg
mov
jl
shll
pop
mov
pop
outsb
fcoms
push
shrb
adc
inc
aad
mov
ja
or
inc
sbb
fsubr
jns
push
cmp
jno
jg
xor
in
js
aas
cmpl
aad
in
mov
and
mov
mov
xchg
fs
cli
mov
movsb
js
in
daa
imul
cmpsb
mov
out
cltd
int3
pop
sub
xor
sbb
jecxz
cwtl
mov
mov
adc
xor
mov
push
repz
jecxz
cltd
mov
add
mov
cmp
jp
add
cltd
push
lock
jecxz
sbb
ja
out
decl
mov
lret
dec
lret
push
fwait
mov
push
hlt
xor
scas
sbb
popf
ljmp
sti
stc
cli
in
test
jl
sbb
mov
mov
push
xor
lcall
pusha
gs
mov
jecxz
into
hlt
sbb
lahf
or
in
bnd
xchg
or
stc
and
std
push
jecxz
jnp
dec
mov
testb
ficoms
lahf
mov
add
insb
lret
push
fisubrs
xor
jo
mov
out
mov
loopne
call
cmpsb
inc
cltd
addr16
inc
mov
rclb
cmp
out
es
cmp
out
mov
mov
lahf
test
repz
jge
cmp
cmp
pop
or
push
add
call
push
xlat
jmp
clc
cmp
xor
and
cmc
pop
sub
add
sub
or
push
dec
lcall
xor
movsl
adc
xor
adc
movsb
jmp
push
ja
movsb
add
xor
test
adc
cld
arpl
push
movsl
mov
gs
fisttps
cmp
pop
enter
int
fisubl
add
pop
rol
aam
sbb
jl
mov
pop
in
jl
jnp
incb
les
ja
mov
cmp
notl
shlb
mov
jns
push
cmc
jnp
pop
pop
inc
fwait
fwait
cmpsb
jnp
rorb
cld
add
inc
mov
push
movsb
adc
inc
sbb
mov
fisttpl
pusha
sbb
leave
xor
add
and
jns
inc
inc
lahf
mov
mull
and
ret
loope
and
sub
xor
les
stc
add
stos
pop
mov
xchg
int3
rclb
fildl
mov
add
sub
cmc
sbb
loopne
mov
cmp
lret
cmpsl
xchg
test
inc
incl
cwtl
dec
das
xchg
lahf
xor
mov
or
ret
add
sbb
mov
lods
inc
push
sbb
cmpsl
jge
jo
and
bnd
pop
into
loope
push
aaa
xchg
pop
cmp
or
inc
cld
movsb
sbbb
aam
inc
addr16
adc
cmpsb
test
xchg
xchg
in
adc
inc
and
lods
insb
icebp
pusha
stc
lods
cmp
sub
push
test
enter
mov
pop
fistpll
mov
divl
jb
xor
sarl
jo
dec
push
nop
jnp
adc
clc
sarl
es
cmp
mov
repz
or
jnp
push
add
mov
in
sbb
mov
clc
jg
repz
cwtl
cltd
outsb
sbbl
pop
repnz
push
mov
mov
scas
push
sub
sbb
sub
xchg
jne
in
dec
and
repnz
mov
cwtl
mov
pop
jae
inc
scas
push
jge
xor
and
frstor
leave
inc
enter
mov
ret
sbb
les
mov
jg
faddl
adc
mov
loopne
jl
cmp
fsubl
jmp
mov
int
mov
addl
out
lret
stos
mov
icebp
push
jmp
scas
jne
cli
or
cmp
icebp
mov
movb
xchg
test
arpl
fs
sbb
or
in
jge
add
mov
js
mov
xchg
inc
pop
sbb
inc
pop
ljmp
fbld
jmp
push
nop
lret
out
mov
cmc
rol
loope
jnp
filds
imul
lds
xchg
repz
cltd
fildl
pop
lret
mov
in
lcall
lcall
test
movsl
repz
mov
dec
xchg
enter
sbb
adc
mov
sub
xlat
jbe
xor
xchg
ds
inc
xchg
js
fidivrs
mov
sti
cmp
cmp
pushf
dec
and
orb
or
jle
sbb
stc
sahf
into
add
mov
movsb
loop
or
xor
mov
sbb
xor
inc
mov
mov
jae
int3
sbb
test
or
xor
xchg
dec
mov
push
sbb
add
loope
or
dec
outsb
sub
ljmp
add
cmc
adc
inc
fdiv
cmp
xor
fwait
pop
push
push
pusha
or
sbb
xor
mov
fimuls
pop
jno
pop
jo
push
negb
or
pop
sub
les
cmp
mov
xchg
mov
into
popf
xchg
js
int
push
cmp
mov
dec
mov
push
push
pop
pop
mov
sbb
or
or
mov
adc
xorl
dec
push
inc
add
jns
xor
and
inc
bound
mov
cmp
jl
jnp
push
pusha
das
in
shll
int
je
jmp
dec
cmc
xor
out
popf
pop
fists
xchg
cld
or
and
movsl
ficoml
sbb
insb
sbbl
mov
leave
leave
pushf
add
mov
push
mov
dec
inc
xor
pop
xchg
jecxz
xchg
add
push
xor
lret
xor
jg
movb
inc
js
add
sub
int3
adc
xor
inc
push
aam
xchg
incl
cmp
pop
mov
sub
pop
aam
push
adc
mov
into
sub
and
mov
pop
sub
dec
inc
fwait
adc
xchg
pop
rcrb
adc
test
je
loop
lret
les
push
cli
mov
movsb
push
shrb
cltd
cmpsb
cmp
lahf
cmp
test
or
loop
std
rcr
inc
stc
xor
add
fldl
mov
cli
testb
repnz
out
jle
fistps
jno
dec
push
fimuls
std
inc
into
cmpsb
iret
xchg
and
inc
jb
cltd
out
pop
into
jbe
popf
popa
rorb
jle
and
daa
loopne
je
pop
xorl
ret
mov
adc
mov
push
add
xor
sbb
pop
mov
loop
push
iret
mov
cmp
mov
sbb
cmp
in
ja
inc
add
repz
cld
shlb
loop
leave
push
push
cwtl
ret
movsl
mov
pushf
jecxz
cli
dec
sbb
push
stc
inc
repz
scas
mov
aas
mov
xchg
icebp
cltd
lcall
or
inc
cmp
cmp
push
sbb
fidivl
insl
fstpl
inc
sbbb
xchg
js
inc
js
fdivl
ja
leave
cmc
jge
pop
stos
rclb
sbb
inc
push
lret
std
jo
xchg
in
xchg
sbb
lock
dec
xchg
jmp
imul
pop
data16
jle
mov
pop
fwait
pop
cmp
sub
sub
stc
hlt
jl
fldt
cltd
inc
jmp
mov
add
inc
cmpsl
inc
xor
sbb
lock
xchg
test
xor
push
mov
test
std
mov
or
or
imul
jmp
add
cmp
out
leave
test
fwait
aaa
shll
fildll
push
jns
fcmovnbe
pop
imul
mov
cltd
lods
shrb
cld
ss
sbb
clc
adc
les
pop
jbe
addr16
jmp
pusha
mov
fmull
icebp
jns
jb
fs
nop
hlt
jl
cli
jl
mov
dec
subl
lea
sub
imul
fimuls
movsl
cli
jg
inc
lods
std
xor
inc
sahf
sti
pusha
jo
or
jb
jg
mov
pop
enter
mov
mov
pop
mov
sbb
fld
xchg
test
int
mov
cmp
dec
inc
cmc
mov
outsb
das
or
stc
popf
stos
add
sti
mov
shl
mov
push
repz
lar
mov
dec
pop
out
sub
sbb
or
out
cmp
faddl
xchg
cwtl
jnp
and
jno
sahf
push
sub
add
sub
add
xor
fmuls
dec
mov
into
in
cmp
imul
out
or
sub
adc
hlt
in
test
fadds
aaa
je
arpl
clc
lea
std
cmp
sbb
ja
leave
test
int
pop
aas
rcrb
mov
pop
or
icebp
js
rcr
xor
or
adc
fstl
fistps
xlat
inc
mov
andl
mov
minps
xor
jecxz
cltd
iret
jle
mov
int
jno
dec
xchg
cli
ret
ret
mov
popf
jge
add
jb
daa
jge
dec
mov
lahf
test
add
ficompl
dec
and
andb
out
cmpb
call
inc
cltd
ljmp
xchg
in
in
popf
ret
call
pop
repnz
cmpsl
cli
xlat
jne
push
mov
dec
dec
pushf
dec
and
dec
add
sub
jns
pop
sbb
cs
adc
mov
and
push
mov
pusha
sub
idivb
push
xor
and
dec
mov
push
mov
lods
jle
lcall
sub
cmpsl
mov
push
in
frstor
add
xchg
leave
pop
sub
or
mov
je
mov
xchg
std
ljmp
push
int
mov
sub
test
inc
cmc
push
lahf
jne
dec
xchg
add
push
sbb
jle
aaa
jecxz
xor
mov
pop
fcoml
ja
subb
mov
lods
movsb
adc
sbb
jg
shl
test
repz
mov
xor
mov
cmp
and
mov
cltd
lds
pushf
fldenv
add
int3
lds
jae
xchg
sbb
dec
jp
sahf
and
test
sub
test
xchg
daa
xor
test
push
lods
mov
jmp
call
xchg
add
cmpsb
mov
sbbb
loope
xchg
and
add
js
push
add
xchg
les
mov
scas
push
pop
xchg
jecxz
or
sbb
xchg
mov
jo
cwtl
ret
jg
lret
jle
scas
dec
sbb
and
sbb
mov
in
jbe
les
repnz
ss
pop
rol
adc
call
dec
pop
add
inc
pop
loope
imul
mov
xchg
fistl
and
pop
dec
jnp
into
lcall
pusha
cvtps2pd
or
push
inc
xor
popa
mov
out
stc
lea
mov
adc
sbb
mov
hlt
jg
xor
push
cwtl
fwait
stos
ja
pushf
push
dec
dec
inc
scas
push
test
test
mov
cmc
fucomp
je
fisttpll
adc
in
stos
arpl
insl
idivb
movsl
mov
jbe
pusha
mov
out
pop
push
sub
push
xchg
mov
and
fs
inc
fwait
inc
pusha
in
addr16
xchg
cs
lret
mov
in
testl
rolb
xchg
out
adc
inc
addr16
adc
mov
call
sbb
push
push
mov
lods
sbb
fldpi
inc
lret
xor
repz
int3
or
mov
dec
pushf
cmp
inc
call
mov
inc
xor
mov
into
pop
add
arpl
mov
bound
pop
mov
push
test
repz
cmp
xor
cmovge
add
jecxz
mov
call
in
bound
cwtl
movsl
add
iret
test
pushf
in
stos
push
insb
aad
lds
in
int
dec
push
mov
fsubrs
js
stos
cs
cmp
mov
stos
mov
xor
mov
andl
xlat
push
inc
xor
mov
cmp
or
dec
data16
cmp
and
mov
and
cli
sub
rcrb
adc
jle
push
dec
or
adc
hlt
imul
xchg
mov
daa
orl
inc
pop
loope
lods
xorl
dec
lahf
adc
jb
fwait
jb
dec
cltd
test
mov
aaa
imul
mov
fcomps
mov
sbb
inc
inc
idivb
pop
call
fisttpll
inc
xor
inc
iret
xchg
clc
cmp
cmovbe
out
ja
cmp
fmul
inc
add
xchg
int3
fwait
ljmp
outsl
pop
mov
dec
xor
push
in
sti
push
push
bound
sbb
mov
inc
or
mov
xor
pop
in
lea
lds
jnp
push
pop
pop
pop
mov
cltd
dec
xchg
mov
pop
roll
sub
add
xchg
insb
leave
push
repnz
lcall
sbb
or
or
or
xor
push
adc
mov
xchg
ja
enter
jnp
lret
fwait
outsl
out
ret
sbb
dec
aam
movsl
mov
aaa
sbb
sbb
test
dec
inc
mov
xor
mov
jmp
adc
jno
rorl
out
add
mov
mov
and
test
scas
js
lret
hlt
mov
cmc
sub
or
or
or
dec
les
mov
sahf
and
rcll
stos
test
mov
push
mov
mov
pop
shl
ret
pop
push
imul
dec
push
and
adc
push
pop
cmp
imul
jecxz
jmp
lods
loopne
jbe
dec
mov
mov
dec
sub
jmp
pop
xchg
jnp
mov
push
cs
push
cs
xchg
xor
fldcw
adc
test
sub
ja
test
lods
insb
icebp
pusha
stc
lods
cmp
sub
push
test
enter
mov
pop
fistpll
mov
divl
jb
xor
sarl
jo
dec
push
nop
jnp
adc
clc
sarl
es
cmp
mov
repz
or
jnp
adc
mov
aad
mov
pusha
aas
js
push
shl
xor
jno
dec
aad
lret
inc
repnz
fcomi
cli
outsl
sub
mov
push
sub
inc
lahf
sbb
cmpb
in
std
or
and
insl
pop
mov
cmpsb
lea
ror
arpl
xchg
fistpl
sahf
pop
scas
sahf
fs
pop
enter
pop
cmp
sbb
aad
fnstsw
shl
cmp
adc
sahf
and
add
mov
les
sub
sbb
or
adc
popa
dec
push
imul
shrb
fs
push
pop
pop
call
and
or
in
out
or
out
or
rorb
and
sahf
pop
xchg
shl
es
call
fisttpll
mov
ret
push
sbb
lahf
stos
jecxz
inc
test
dec
pop
sbb
mov
insb
jne
pop
mov
arpl
sub
sbbb
enter
mov
jb
xchg
jne
cmp
add
mov
push
imul
imul
push
xor
imul
lret
lret
add
adc
pusha
ficoml
mov
roll
mov
rcl
sbb
fwait
inc
jne
iret
pop
in
addl
mov
or
jge
fsubrs
pop
mov
fists
fistps
pop
leave
notb
mov
mov
out
mov
es
insb
mov
fdivp
aas
movsl
fnstsw
pop
add
mov
shrb
dec
xlat
sub
jp
sahf
push
mov
mov
dec
or
jmp
inc
movsl
dec
pusha
lods
inc
fs
jno
or
push
aas
enter
arpl
aam
fisubl
jns
out
cli
fidivrl
mov
dec
and
push
lods
leave
xor
mov
add
mov
mov
adc
cmp
and
arpl
pop
test
mov
adc
adc
mov
test
xchg
push
test
sbb
mov
addr16
es
jecxz
add
add
sahf
popf
and
mov
jb
dec
iret
xlat
in
or
sub
pushl
rclb
pushf
movsl
sbbb
shll
fs
adc
mov
mov
fs
stos
test
outsl
mov
pop
mov
jno
outsb
inc
xor
out
dec
sbb
push
rcrb
cmp
push
lcall
lcall
sbb
sub
jge
sbb
sub
jge
rolb
sub
mov
or
dec
mov
insb
add
dec
xchg
int3
mov
pushf
jbe
pop
xlat
stos
mov
icebp
test
push
sub
push
addb
xchg
push
int3
cs
push
cmp
mov
mov
orl
icebp
ret
mov
mov
mov
jae
add
jmp
push
gs
test
movsl
ret
stc
andl
aaa
in
dec
out
or
js
rcll
outsl
jmp
icebp
mov
aam
mov
add
adc
lds
mov
jno
pop
inc
lret
adc
mov
xchg
fiadds
jle
pop
dec
sbb
xchg
cmp
push
ret
jmp
mov
mov
and
test
mov
pop
xor
jbe
dec
mov
mov
sub
inc
xor
inc
fistpl
sti
push
push
lock
cltd
xor
test
ja
bound
iret
mov
or
outsb
xor
adc
int3
inc
mov
cwtl
pushf
ds
and
ret
mov
stc
and
inc
test
js
sbb
and
add
xor
mov
enter
aas
outsb
ret
fmul
pop
call
call
aas
jge
int
push
or
fs
leave
cmc
in
pop
aas
and
pop
movsb
lcall
add
leave
xor
mov
dec
aaa
mov
pop
int3
out
adc
fwait
test
sbb
xchg
sbb
pop
sti
sahf
in
inc
adcl
or
mov
sbb
xchg
cmp
bound
xchg
aad
ficomps
pop
ret
inc
xor
inc
gs
call
mov
arpl
sub
ds
sahf
push
in
or
xor
sti
sbb
loopne
negb
lock
add
mov
jb
sbb
imul
cwtl
das
push
mov
sbb
lock
pop
lret
xchg
rcr
popf
pop
insl
mov
cmp
sahf
mov
lret
imul
mov
cmp
lea
imul
cmp
cmp
mov
leave
cmc
cmc
xlat
pop
aas
inc
sub
xchg
pop
xchg
mov
jae
stc
out
push
and
mov
push
enter
test
cmp
sbb
mov
sahf
xor
insl
sbbl
lcall
test
cmp
or
int
pop
repnz
fwait
xchg
shlb
iret
out
pop
stos
int
cmp
loopne
out
mov
inc
repz
xchg
add
add
movsl
xchg
mov
mov
add
mov
push
mov
lret
inc
add
mov
adc
dec
pop
loop
sbb
or
cmp
mov
mov
jno
into
cmc
insl
leave
push
push
test
push
in
mov
outsb
in
shll
subl
fcompl
jg
das
inc
sbb
aad
jbe
jnp
jg
verw
stos
js
stos
stc
idivl
dec
enter
in
test
pop
jle
pop
leave
mov
inc
cwtl
inc
pop
sub
pop
ret
adc
adc
inc
js
inc
pop
mov
mov
fwait
lea
cmp
add
inc
sub
clc
push
nop
dec
inc
int
shll
inc
pop
subb
inc
repz
add
mov
mov
loopne
fsubrl
and
js
lret
lock
dec
aaa
add
jge
pop
xlat
sbb
mov
mulb
sbb
cmpsl
sbbl
js
enter
add
push
lods
cmpsl
nop
cmp
adcl
mov
mov
gs
add
adc
xlat
or
test
adc
and
and
mov
fwait
movsl
dec
fs
pop
bound
fwait
xchg
in
cmp
pop
testl
dec
addb
fcompl
jle
std
jl
nop
insb
sbb
add
xor
outsl
js
inc
daa
or
and
sub
xchg
rcl
test
in
pop
dec
fistl
jns
xchg
sarl
movsl
sbb
fldl
addr16
adc
mov
int3
sti
pop
pop
lods
sbb
xchg
imul
push
or
jge
lods
add
add
xor
enter
inc
mov
movsl
fcomps
inc
inc
fiaddl
mov
leave
cmp
mov
nop
pop
sti
pop
xchg
ret
jecxz
add
xor
lea
sarl
pop
mov
dec
pop
mov
push
mov
mov
jae
add
inc
and
lcall
xchg
cld
aad
jp
push
rcrb
xor
sub
js
push
gs
outsl
xchg
sti
je
lcall
sub
xlat
fs
mov
push
popa
cmpsl
jge
adc
and
bnd
out
push
fwait
leave
mov
xchg
jo
adc
pop
loopne
pop
out
sbb
aaa
xchg
sbb
mov
fwait
pop
cmpsl
sbb
push
call
int
lds
pop
cmp
call
pop
xchg
add
or
inc
sub
jnp
or
std
fisubrs
outsb
sub
mov
pop
and
mov
pop
test
pop
or
notb
add
cmp
or
fistpl
sti
push
push
lock
cltd
xor
cwtl
divb
bound
iret
mov
or
outsb
xor
adc
int3
inc
mov
cwtl
pushf
ds
and
ret
mov
stc
and
inc
test
js
sbb
and
add
xor
mov
enter
aas
outsb
ret
fmul
pop
decl
call
aas
jge
or
loopne
cmc
in
aas
pop
aas
and
pop
movsb
lcall
add
leave
xor
mov
mov
mov
pop
int3
out
adc
fwait
test
sbb
xchg
sbb
pop
sti
sahf
in
inc
adcl
or
mov
lcall
dec
imul
or
cmp
inc
gs
call
mov
arpl
sub
ds
sahf
push
in
or
xor
sti
sbb
loopne
negb
lock
add
mov
jb
sbb
imul
cwtl
das
push
mov
sbb
mov
pop
lret
xchg
rcr
popf
aas
loop
mov
cmp
sahf
mov
lret
imul
inc
cltd
test
cmc
cli
incl
imul
cmp
cmp
mov
leave
cmc
cmc
sarl
pop
aas
inc
sub
xchg
pop
xchg
mov
jae
stc
out
push
and
mov
push
enter
test
cmp
sbb
mov
sahf
xor
fwait
insl
sbbl
sbb
sub
fidivs
push
mov
jmp
inc
rcl
mov
xor
outsb
jecxz
adc
repz
mov
mov
imul
loope
and
jmp
mov
cmp
ja
shrl
pop
pop
jb
pop
and
push
sbb
sti
jno
test
and
lahf
stos
inc
and
adc
cwtl
fwait
xchg
in
inc
jnp
pusha
push
lock
mov
pushf
sbb
dec
xchg
jnp
hlt
movsl
je
or
cmp
jne
pop
jmp
or
xchg
adc
ss
pop
lods
cli
mov
in
and
pop
bswap
js
popf
push
fadd
loop
lahf
inc
jp
lock
cmp
ret
dec
lods
std
ds
sub
mov
cmpsb
ljmp
sub
fsts
inc
inc
ret
push
xchg
adc
les
push
mov
bound
scas
cmpsl
jb
inc
cmp
xor
mov
mov
or
jp
cmp
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
xor
mov
test
js
inc
jb
add
push
push
mov
icebp
mov
enter
mov
outsl
adc
mov
mov
cwtl
inc
and
cltd
mov
mov
xchg
dec
mov
idivb
sub
lods
out
add
push
mov
mov
insl
movl
jg
mov
cmc
cmc
es
mov
js
shl
jns
sbb
je
jmp
stc
adc
xor
inc
xor
fucomp
adc
adc
lods
repz
and
fbld
roll
lcallw
jp
data16
out
or
sub
insb
cltd
es
and
hlt
daa
dec
sub
sub
repnz
jle
or
mov
imul
ret
mov
fmull
stos
into
mov
push
lock
xor
pop
lods
mov
js
or
mov
and
mov
movsl
mov
mov
outsl
sub
lret
dec
jl
mov
inc
clc
fbld
add
mov
sbb
in
jo
test
adc
push
jbe
and
xchg
int3
adc
fidivrl
negb
and
inc
mov
leave
pop
ds
js
fidivs
ja
leave
icebp
std
movsl
cmp
add
cli
or
add
add
ret
sbb
lea
stc
and
xchg
inc
add
sbb
test
dec
insb
call
mov
pop
dec
subl
mov
jb
pop
aas
adc
mov
lahf
fcmove
sahf
xchg
std
negl
aad
repz
or
cmp
xchg
jg
iret
inc
lcall
sti
xlat
mov
push
lock
loop
clc
sahf
sub
or
inc
jp,pt
jecxz
aad
cwtl
push
out
jns
dec
inc
popf
mov
pushf
jmp
sub
lds
mov
ljmp
mov
pushf
mov
into
inc
dec
xchg
jnp
mov
mov
subl
dec
subb
arpl
lods
int
pop
gs
lods
fidivs
pop
lahf
inc
jge
dec
ret
mov
dec
xor
enter
mov
idivl
jo
or
inc
test
inc
jl
sbb
inc
xchg
adc
stos
sub
push
inc
and
cmpb
cmp
ret
into
mov
mov
add
lret
iret
mov
sbb
jbe
mov
int
jne
dec
rcrb
mov
inc
lret
jno
fmul
pop
inc
leave
mov
mov
mov
call
mov
dec
pop
out
push
je
add
test
or
adc
or
mov
cmc
jnp
lock
inc
add
mov
and
imull
shll
cwtl
sub
mov
adcl
pop
xor
daa
jne
dec
mov
icebp
and
pop
std
or
cltd
lret
test
fidivl
sbb
loope
repz
mov
ds
mov
xchg
pop
andl
dec
mov
clc
je
jmp
dec
cmc
xor
out
popf
pop
fists
xchg
cld
or
and
movsl
ficoml
sbb
insb
sbbl
mov
leave
leave
pushf
add
mov
push
mov
dec
inc
xor
fwait
aam
sahf
dec
mov
into
add
int3
fnstcw
frstor
mov
mov
mov
xor
mov
cmp
or
inc
cmp
data16
sbb
cmpsl
sbbl
pop
repnz
push
mov
sub
mov
sbb
push
dec
out
rcrb
mov
or
test
adc
daa
test
push
subl
inc
cltd
test
and
ret
jo
lcall
mov
jmp
sarl
inc
and
rcrb
fcmovnbe
adc
and
sbb
les
fwait
inc
mov
sub
fwait
sbb
mov
in
pop
ds
cmpsl
ret
flds
mov
xchg
data16
jecxz
and
mov
jne
or
xchg
iret
dec
sub
cwtl
in
pushf
dec
inc
cmc
mov
pop
andl
into
add
int3
push
aas
lods
fcom
mov
jno
hlt
clc
aam
inc
inc
dec
lahf
lret
jecxz
add
sub
mov
pop
push
lock
fidivrs
inc
jmp
nop
cmp
jbe
pop
ret
icebp
fsubrl
push
push
enter
push
ficoms
mov
xchg
clc
stos
push
or
mov
sahf
lods
mov
lret
gs
jbe
and
or
push
mov
icebp
fildll
xchg
jle
ret
scas
das
pop
test
push
add
inc
mov
aas
cmpsl
push
or
subl
pop
test
lock
mov
adc
lret
push
ja
and
fnstsw
mov
pushl
pop
in
and
test
inc
xor
sbb
hlt
mov
pop
aas
adc
xchg
cltd
mov
jge
sahf
dec
movsb
adc
arpl
movsl
call
push
jg
mov
xlat
mov
stos
push
cmp
lock
rol
wrmsr
dec
sbb
in
bound
mov
mov
inc
stos
xchg
adc
and
adc
inc
mov
xchg
icebp
sub
inc
in
rol
cmpsl
mov
jp
bound
push
into
fdivrs
ja
cmc
jns
gs
ja
test
in
push
mov
add
add
sti
out
arpl
mov
push
pop
mov
adc
jl
rcrb
jecxz
arpl
inc
outsl
idiv
sub
xchg
cwtl
int
dec
in
scas
addr16
rclb
jmp
lods
mov
out
imul
jns
mov
jnp
enter
sarb
and
loop
hlt
mov
test
or
psubsw
jmp
jecxz
inc
mov
mov
bound
and
jo
aas
fidivrs
mov
aad
dec
aaa
add
cmp
cli
mov
lock
fidivrs
inc
add
ret
rol
dec
jle
push
mov
movsb
push
dec
bnd
sahf
pop
and
adc
and
mov
bound
push
cmp
or
sbb
insl
idivb
into
xlat
lcall
cmp
pop
rcrl
pop
mov
out
lahf
orb
mov
js
pusha
jo
lcall
rcrb
inc
test
inc
subl
dec
jle
daa
dec
sub
addr16
rcll
push
lods
sarl
mov
ja
pop
into
sbb
mov
scas
lahf
jle
mov
rorb
test
inc
ss
adcl
mov
xlat
aaa
push
adc
or
jne
fcmovnb
cld
pusha
mov
push
sbb
or
jae
in
mov
add
jle
mov
lock
inc
add
sub
cld
sarb
fs
push
mov
or
fwait
sbb
lcall
insl
outsl
mov
pop
jle
movsb
aas
xor
mov
in
jecxz
pop
enter
jb
in
shl
enter
add
int3
clc
cmp
jb
push
sbbl
fwait
ds
outsb
stos
lock
orb
inc
ljmp
arpl
imul
inc
mov
xchg
ffree
mov
popl
clc
push
inc
int
test
mov
nop
test
inc
enter
dec
sub
xchg
add
xchg
nop
pop
je
add
jle
les
test
or
pop
push
adc
mov
xlat
repnz
or
dec
int
mov
add
lods
enter
inc
enter
adc
xor
shrb
mov
sbb
pop
jae
or
sub
loop
inc
jae
pop
xchg
dec
xchg
dec
cmp
xlat
test
movsb
push
dec
outsl
loop
repnz
pop
loop
bound
mov
imul
mov
add
mov
les
push
mov
inc
out
mov
int3
fldenv
xor
int
fsubrl
fs
jge
mov
push
mov
mov
in
xorb
jecxz
jle
into
mov
stc
decl
and
or
out
addr16
out
mov
and
in
ret
mov
lods
out
push
mov
jne
cmp
jns
in
jb
sti
stc
fidivs
roll
fwait
inc
and
int3
cwtl
dec
inc
int
imul
popa
gs
inc
andl
into
adc
int
jg
cmp
fdivrl
and
mov
pusha
xor
jne
sbb
nop
xchg
mov
cld
or
inc
sbb
mov
stos
les
cld
add
movsb
loop
xor
jae
cmp
rcr
jnp
pop
insb
aam
push
pop
cli
mov
cli
mov
mov
fdivrl
dec
xor
push
pop
sbb
push
sbb
into
adc
push
inc
shrb
aam
pop
imul
ss
je
xchg
inc
pop
push
or
jle
clc
mov
cmp
mov
test
inc
insb
mov
mov
out
into
lods
lock
popf
push
cmp
dec
add
inc
out
sbb
pop
loopne
pop
iret
ds
rcr
mov
jbe
xor
cwtl
iret
aam
sbb
popa
dec
les
jno
add
rcrl
pop
xor
add
dec
test
or
std
fdivl
rcrl
aaa
add
xor
add
sbb
pop
dec
rcl
xor
add
sbb
lods
xchg
test
test
push
xor
cmp
adc
fwait
aam
movsl
pop
mov
pop
fisubrl
imul
cmpsl
push
sbb
scas
jb
sbb
jnp
rclb
push
lahf
mov
cli
inc
or
mov
jnp
jo
fwait
int3
repz
sbb
fsub
sbb
jge
dec
dec
push
shr
shlb
push
jge
int
fs
mov
out
pop
lods
xchg
ret
test
push
fs
outsb
insb
xchg
bound
out
addr16
sbb
sbb
cmp
test
cwtl
dec
inc
std
mov
fs
adc
or
mov
xorl
jb
inc
jecxz
mov
or
sub
mov
inc
sbb
sbb
pop
xlat
jne
sub
test
sub
cmp
in
mov
inc
aad
imul
insl
fmull
into
lcall
fcompl
pop
inc
jle
movsb
inc
push
enter
xor
out
pop
pop
mov
push
mov
pop
xchg
inc
gs
cmp
push
inc
and
inc
lods
addps
test
subb
call
call
sbb
cmp
jge
inc
jnp
test
fstpt
fsubrp
sbb
js
mov
xchg
addl
ja
nop
and
outsb
jmp
dec
cmp
jmp
inc
sbb
dec
fbstp
sub
dec
pop
xlat
and
hlt
cmpsl
leave
xor
lods
xchg
fwait
dec
rcrl
sbb
xor
mov
imul
stos
into
pop
pop
push
or
push
inc
sbb
lahf
stos
jecxz
pop
xchg
pop
call
mov
lret
pop
imul
sub
lods
int3
lret
sti
xchg
push
sbb
sub
ljmp
add
push
dec
push
mov
hlt
mov
or
inc
jns
loope
lret
aam
pushf
add
insb
fsub
cmp
cltd
push
push
outsb
push
cld
jbe
push
mov
in
xchg
dec
fnstenv
jbe
imul
xchg
dec
out
inc
sbb
mov
cmp
out
stc
lret
jmp
loopne
sub
loope
add
cmc
jo
shll
mov
inc
int
test
mov
nop
test
inc
enter
dec
sub
xchg
add
xchg
nop
pop
je
add
jle
les
test
or
pop
push
adc
mov
xlat
pop
pop
adc
mov
call
loopne
aam
stc
sub
xchg
pop
cmp
pop
ds
mov
lock
jge
pop
lock
adc
rol
int3
cmpsl
mov
jo
fsubs
inc
cmc
or
sbb
mov
cmc
add
sti
mov
xor
push
adc
cmp
aam
fistpll
lcall
leave
mov
scas
jne
into
jne
dec
roll
xchg
loopne
loopne
mov
mov
dec
sbb
mov
ds
adc
cld
mov
fmulp
enter
xchg
fucomi
or
inc
jp
inc
addr16
addb
data16
push
jge
ret
and
adc
push
pop
arpl
movsl
into
fistpll
xchg
sbbb
mov
mov
adc
or
addl
mov
jl
out
idivl
fsubrs
lods
adc
movsb
jmp
push
stos
rcrl
aaa
sub
sbb
ror
pop
cmp
pop
jl
imulb
sbb
pop
rclb
test
ja
shl
pop
pop
es
iret
inc
sub
xor
ret
adc
rcr
outsl
adc
mov
mov
push
iret
xchg
in
int3
lods
inc
dec
mov
mov
cmc
sbb
mov
pop
cltd
push
jmp
popa
xor
pop
test
gs
xchg
sar
and
call
in
int3
mov
inc
lahf
ljmp
test
cmc
mov
push
mov
jge
pop
js
sbb
lds
and
ret
sbb
popf
sar
pop
mov
push
stc
sub
pop
adc
insb
jbe
add
push
pop
out
mov
fildl
cmp
enter
insb
aaa
lret
dec
adc
inc
cmp
mov
shrb
stos
cmpsb
add
inc
mov
add
inc
adc
fucomip
in
mov
sub
test
sbb
fmull
add
add
leave
fcoml
xlat
cmpsl
mov
adc
stos
mov
imul
push
sbb
lods
sti
pop
ljmp
popf
in
mov
cwtl
sub
mov
scas
xchg
fisttpl
aam
push
push
leave
dec
jbe
dec
fidivrs
cltd
test
cmpsl
inc
repnz
ret
ret
mull
xchg
adc
js
adc
outsl
xlat
in
loope
andb
jo
jecxz
shrb
or
les
inc
push
test
or
mov
out
push
jno
sbb
push
call
mov
data16
jne
in
out
popf
cltd
sub
enter
sbb
movsb
test
dec
or
mulb
das
jge
xchg
pop
cld
push
mov
pushf
push
inc
inc
aas
push
clc
sub
dec
lahf
lret
add
stc
arpl
cwtl
sbb
in
aas
push
add
cmc
cld
or
mov
movsb
inc
cmp
lcall
xor
ljmp
pop
mov
push
dec
sbb
fsubr
or
sbb
xchg
bound
imul
pop
xchg
adc
push
lret
inc
fisubl
stos
std
or
dec
jns
mov
enter
std
rcr
xchg
mov
xchg
push
mov
push
pop
and
popf
jg
loope
mov
mov
sbb
jo
adc
bound
in
push
fidivrs
or
fs
arpl
scas
ja
lods
sbb
pop
stc
leave
das
call
gs
outsl
sub
inc
cltd
out
sbbb
lea
xor
aaa
pop
mov
popa
mov
cwtl
std
push
inc
or
mov
ror
ljmp
add
adc
and
daa
pop
xchg
mov
test
xlat
jmp
bound
daa
mov
adc
fistpll
loopne
and
fwait
stos
ja
pushf
push
dec
dec
inc
scas
push
test
test
mov
xlat
fucomp
je
fisttpll
adc
in
stos
arpl
insl
xchg
xchg
cmp
xchg
in
jbe
subb
outsb
mov
push
sub
testb
pop
pop
ljmp
orb
cld
sub
jmp
jmp
cs
mov
xor
mov
arpl
enter
mov
push
cmp
pop
aad
test
pop
xchg
imul
movsl
testb
call
or
pushf
mov
xchg
mov
and
imulb
jmp
mov
jle
loop
mov
xor
mov
jae
adc
add
into
sahf
fwait
es
clc
ds
jecxz
mov
in
add
stos
ret
cmpsl
add
loop
pushf
movsb
pushf
dec
and
shll
pop
inc
jmp
mov
fistl
js
and
movb
in
push
jl
lcall
ss
push
push
mov
and
sub
mov
jb
mov
movsb
push
aad
xor
sbb
sub
cmp
cmp
jno
jg
xor
fs
rcrb
fadds
stos
ja
jp
jmp
xor
shll
inc
rcll
scas
fcoms
fs
sti
insl
leave
out
sti
push
lcall
jnp
jae
adcl
sub
mov
pop
add
or
mov
shrb
mov
push
sub
mov
mov
mov
add
ja
jns
mov
sub
mov
pop
or
xchg
dec
cmpsb
mov
imul
stos
dec
jecxz
mov
movsl
inc
imul
leave
sbbl
dec
lret
inc
aad
lcall
pop
jnp
adc
fstpt
sub
add
dec
jae
xor
xor
cmpl
lret
mov
idivb
scas
xlat
stos
jge
fistpl
push
sbb
scas
jb
lods
jecxz
mov
ffree
cmp
cmp
movl
or
fiaddl
or
xchg
sbb
inc
fmul
fldt
test
mov
adc
cmpsb
mov
aam
jbe
mov
cmp
jmp
clc
sbb
adc
insl
xchg
cltd
dec
pop
xor
sbb
adc
sbb
pusha
xor
je
and
dec
inc
mov
cmp
imull
arpl
adc
das
jns
mov
loopne
mov
or
xchg
dec
dec
ret
push
add
js
ret
adc
or
fldenv
fdivs
test
push
mov
fs
push
cmp
sub
cmc
sbb
call
pop
pop
arpl
imul
push
cmp
es
inc
dec
jno
push
push
and
mov
mov
dec
adcb
adc
adc
inc
test
aaa
popf
ss
ja
pusha
xchg
inc
add
or
fdiv
pop
std
and
popf
popa
jo
out
xor
pop
nop
fmuls
push
cld
dec
mov
daa
imul
add
scas
pop
repz
ror
repz
mov
push
adc
lret
test
repnz
in
test
outsb
stos
test
enter
loop
and
sbb
push
add
xor
pop
and
pop
dec
fcomps
pusha
lods
in
xor
leave
pop
and
mov
xor
inc
fcomps
std
popa
int
pop
fcomi
imul
push
push
arpl
pop
fbstp
fwait
add
shll
lock
lahf
sbbl
hlt
aam
push
repz
test
cmc
in
insb
jns
sahf
mov
jnp
mov
iret
es
insl
cmpsl
add
loop,pt
clc
std
pushf
push
sub
pop
popf
sbbl
cltd
popf
xchg
cld
es
adc
iret
pop
cmpb
jg
fyl2x
xor
sbbl
mov
mov
inc
jae
in
jle
mov
insb
mov
mov
out
into
lods
lock
popf
push
cmp
dec
add
inc
out
sbb
pop
loopne
pop
iret
ds
rcr
mov
jbe
xor
cwtl
iret
aam
sbb
popa
dec
les
jno
add
pop
cmpsb
push
ret
loopne
in
mov
mov
lahf
lret
jecxz
pop
xchg
pop
call
mov
lret
pop
imul
sub
lods
int3
lret
sti
xchg
push
sbb
sub
ljmp
push
xor
hlt
outsl
adc
movsl
clc
fistpll
ret
mov
fidivl
xor
divb
inc
movl
push
xor
test
xchg
or
xchg
daa
repnz
inc
jne
lret
flds
into
stc
or
mov
frstor
or
flds
mov
fimull
adc
loopne
xor
or
ret
dec
fcoms
outsl
movsl
test
rcrb
pop
xor
mov
mov
addl
icebp
mov
mov
dec
sbb
push
mov
sarl
lock
xor
stos
and
leave
test
shll
out
aas
xchg
xor
test
mov
popa
sbb
adc
pop
mov
clc
mov
cmc
addr16
jmp
cmpsb
test
lret
pop
adc
ret
jbe
pop
xor
xor
xchg
jnp
inc
dec
cltd
cmp
xchg
shl
sti
into
scas
pushf
xor
and
ror
in
jecxz
add
jge
cmp
dec
insl
nop
sub
jb
and
lea
xor
mov
loop
dec
inc
lock
dec
daa
xchg
stc
xchg
pop
orb
arpl
inc
mov
mull
or
push
dec
and
stc
pop
ja
nop
and
outsb
jmp
dec
cmp
jmp
inc
sbb
dec
fbstp
sub
dec
pop
xlat
and
hlt
cmpsl
leave
xor
lods
xchg
fwait
dec
rcrl
sbb
xor
mov
jp
or
xor
or
mov
fmul
ret
lock
add
mov
or
cld
xchg
lret
out
leave
pop
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
aaa
push
sbb
add
xchg
fwait
jnp
into
sub
jmp
or
fwait
in
inc
js
push
mov
mov
fwait
push
mov
inc
mov
repnz
jbe
mov
incl
stos
in
sbb
arpl
vmulss
push
mov
jae
loopne
cmp
ret
aaa
sarb
lock
fxch
pop
push
sbb
jnp
jns
sub
mov
sbbl
dec
push
inc
inc
ror
lahf
rcrb
gs
iret
in
cmp
add
dec
or
dec
ret
jg
adcb
rclb
cmpb
inc
mov
aam
cmp
sahf
sbb
sub
int3
pop
adc
psrld
sub
mov
adc
pop
sti
inc
sbb
add
jmp
mov
mov
shlb
and
aas
stos
int
push
jecxz
xchg
inc
or
or
aam
cltd
fmull
jnp
fsubrl
pop
or
adc
xchg
dec
jle
inc
out
mov
pop
add
sub
repz
push
fstl
add
lods
lret
pop
jns
nop
push
sti
lods
xor
xlat
adc
dec
jno
mov
outsl
add
add
mov
pop
out
mov
xchg
imul
sbbl
mov
dec
push
fxch
xchg
mov
inc
xor
loope
and
js
rcr
jmp
inc
jge
pop
fcomps
adc
cmp
add
adc
sbb
push
push
dec
cmpsl
mov
arpl
sub
sbbb
enter
mov
jb
xchg
jne
cmp
add
mov
push
imul
imul
push
xor
stc
dec
mov
repz
cmpsb
rcll
push
dec
fidivrs
add
fstpl
jmp
adc
jne
lock
mov
mov
rcpps
pop
jns
shrl
dec
cmp
lods
lcall
push
loopne
iret
adc
and
mov
pop
enter
ret
mov
jne
jecxz
sbb
test
dec
in
mov
out
mov
push
hlt
repz
test
fildll
in
gs
inc
fists
jnp
mov
in
mov
pushf
ja
ret
inc
aaa
adc
mov
push
test
dec
les
xor
cltd
jns
dec
sarb
sti
stos
les
shrl
inc
push
aas
push
mov
adc
shll
cwtl
sub
inc
inc
sbb
inc
ror
popa
push
jge
jne
cmpsl
jb
cmp
insb
ljmp
pusha
jp
mov
jl
mov
repz
stos
mov
cmp
cmpsl
jo
jge
repnz
mov
rcrb
cltd
add
adc
pop
mov
ljmp
leave
push
ficompl
dec
cwtl
ja
enter
clc
sbb
pop
inc
loope
test
mov
mov
inc
pop
shlb
mov
mov
inc
rclb
cs
or
pushf
mov
push
mov
add
mov
cmp
jp
add
cltd
andb
xor
cmp
fmul
lds
movb
sbbl
mov
jae
ror
push
les
inc
ret
push
adc
mov
ret
ret
xchg
cmp
sub
cltd
lods
aad
loopne
loopne
iret
dec
scas
lock
xchg
fisubl
cld
push
lea
mov
out
inc
and
mov
push
xchg
mov
fwait
mov
mov
fmulp
enter
xchg
fucomi
or
inc
jp
inc
addr16
addb
data16
push
jge
ret
and
adc
push
pop
arpl
movsl
into
fistpll
xchg
sbbb
mov
mov
adc
or
subl
sub
dec
push
cmpsb
mov
enter
clc
ret
jno
addr16
add
xor
popf
push
out
fwait
test
and
xchg
mov
jo
pop
mov
inc
in
adc
roll
jmp
jbe
in
push
mov
cmp
aad
lret
dec
xchg
xor
gs
mov
xchg
ljmp
pop
adc
add
mov
lcall
mov
testb
mov
outsl
int3
clc
cmp
pop
jmp
dec
pop
mov
pop
sti
out
push
inc
inc
inc
adc
mov
pop
fxch
stc
mov
ja
push
into
popa
mov
bound
or
adc
call
dec
xchg
ljmp
push
push
dec
sub
jmp
out
jo
es
shrb
test
and
ss
inc
aas
repnz
dec
push
adc
jle
lcall
jae
cmp
mov
out
lahf
xor
clc
lret
jno
sbb
xchg
pop
dec
sbb
xchg
loop
outsl
insb
out
loopne
inc
cmpsl
pushf
pop
jg
in
cmp
lods
mov
push
and
fcmove
sbb
cmp
xor
stc
dec
sbb
lret
mov
xor
xchg
inc
decb
push
xor
test
xchg
or
xchg
daa
repnz
inc
jne
lret
flds
into
stc
or
mov
frstor
or
fstps
or
jo
cwtl
ret
jg
lret
jle
inc
sub
or
ret
imul
repz
cld
mov
and
and
shlb
aam
aaa
dec
xor
aaa
ret
add
ficomps
enter
jnp
inc
or
enter
fmul
mov
sbb
test
inc
dec
scas
mov
add
mov
repz
cmp
push
lock
cltd
and
aad
dec
lds
enter
repz
aam
push
mov
fmul
pushf
dec
andl
lods
dec
stos
push
es
dec
insl
and
mov
pop
or
movsb
cmc
mov
mov
popf
push
and
fiaddl
push
popf
nop
sarb
pop
loopne
repnz
leave
and
out
lcall
adcb
inc
push
mov
in
push
ja
pusha
xchg
inc
and
xchg
sbb
xchg
push
xchg
movsl
in
in
dec
fcmovbe
mov
jl
fs
jle
flds
cwtl
out
test
dec
xchg
mov
outsl
xchg
add
orb
fwait
repz
jne
mov
and
xchg
sti
popa
sbb
sbb
mov
mov
jmp
sbb
xchg
mov
dec
pop
lea
lret
js
jle
lahf
adc
sbb
divl
repnz
mov
hlt
das
jo
sbb
aad
pop
scas
into
in
xor
test
xor
rorl
add
lret
push
and
leave
les
leave
test
in
and
pop
ljmp
and
add
jno
mov
int3
mov
and
push
jecxz
or
movsl
add
sti
add
dec
push
inc
fdivrs
mov
mov
xor
out
jb
jns
add
into
sbb
js
adc
sbb
xor
ljmp
insb
xor
dec
aam
jmp
mov
daa
negl
xchg
or
xchg
data16
and
dec
fwait
ja
faddl
dec
sbb
imul
in
rol
sub
sbb
les
dec
or
inc
shll
mov
je
sbb
sbb
inc
clc
cmp
nop
pusha
in
cld
pop
and
sbb
or
popa
jnp
mov
inc
pop
adc
cltd
jnp
leave
sbbb
cmp
and
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
ret
lods
test
push
mov
inc
adcl
pop
dec
das
test
in
lea
and
fwait
mov
jmp
faddl
dec
lods
mov
cmc
cmp
shrl
repz
add
iret
xchg
xchg
out
jecxz
mov
jo
inc
inc
sub
push
cld
cltd
outsl
inc
rcrl
xchg
mov
icebp
push
movsl
sub
mov
in
add
repnz
movsb
es
rcrb
popa
sub
adc
ror
fmulp
cli
mov
mov
loopne
mov
sbb
roll
hlt
outsb
sub
push
xor
mov
push
js
mov
mov
push
inc
icebp
movsl
iret
cltd
pop
in
sub
mov
es
or
mov
mov
sub
cld
shlb
repz
sub
adc
les
inc
scas
push
jge
xor
xchg
pop
push
pop
mov
lods
pop
mov
add
mov
pop
scas
movl
test
inc
add
in
mov
xchg
mov
pop
dec
add
rorb
xchg
sub
mov
xchg
mov
mov
inc
stos
xor
into
fadd
outsb
mov
pop
js
pop
movsl
mov
mov
lret
outsb
dec
sbb
test
loopne
push
lcall
push
xor
in
lock
movsl
and
lock
and
and
adc
lock
aas
movl
mov
pop
add
mov
push
xchg
das
pop
mov
push
std
arpl
cmp
nop
rcl
add
fists
stc
xchg
mov
jbe
out
lcall
jns
push
push
sahf
mov
pop
mov
cli
orl
mov
jbe
rcrl
xchg
stos
fcoml
xor
cmp
and
add
xor
xor
xor
xchg
cwtl
rorl
test
into
mov
lock
jo
mov
repz
jae
dec
popf
test
fwait
cmp
jmp
xchg
pop
movsb
js
dec
cmovg
sbb
stc
mov
sti
pop
pop
push
and
mov
inc
jg
or
mov
int3
adc
fcmovnbe
xchg
sbb
add
loope
les
lock
adc
dec
ret
mov
cmpsl
xor
divl
das
inc
sbb
add
add
mov
test
int
data16
ret
sbb
outsb
mov
inc
std
mov
sbb
jge
xchg
push
stc
aaa
shll
stc
je
iret
jno
pop
xor
test
ja
add
xchg
ficoml
outsb
mov
fstpl
xor
cmp
scas
fcmovnb
push
jo
leave
cmc
je
arpl
or
fldl
jmp
jge
int
or
adc
push
fists
outsl
je
ret
mov
in
or
stos
jo
ret
pop
call
enter
mov
aad
inc
hlt
js
test
test
dec
in
rcll
mov
subl
adc
in
cmp
filds
sti
or
in
andb
mov
inc
pop
shl
ja
fnsave
rcll
fsts
nop
shr
stos
sahf
xor
icebp
add
rorb
rol
and
lahf
stos
inc
movsb
fwait
dec
lea
inc
fists
mov
lret
xchg
ficoml
pop
mov
cmc
mov
mov
in
fcoms
sbb
mov
cld
cmp
test
xchg
fwait
add
or
ja
cmp
lret
adc
aas
lahf
inc
std
push
or
scas
inc
fwait
decl
scas
cltd
mov
mov
inc
cmp
mov
sbb
sbb
sub
xchg
not
int3
out
dec
loopne
push
movsb
mov
daa
adc
cmpsl
or
adc
lcall
les
jb
cli
dec
mov
xchg
sbb
jae
mov
pusha
pop
into
cwtl
fists
je
ficoml
mov
sbb
lret
adcb
mov
pop
test
dec
lds
mov
aam
cmp
mov
lds
and
test
shrb
adc
pop
pop
pushf
ret
aad
adc
mov
pop
lahf
pop
je
roll
movsb
fisubrl
xchg
ret
add
sbb
cmp
sbb
jne
push
mov
xchg
sbb
and
clc
pop
or
test
das
inc
jmp
clc
cwtl
mov
jl
jno
pushf
mov
lock
lret
stc
inc
push
cmp
push
mov
fs
xchg
and
mov
fwait
in
lds
iret
addr16
adc
add
mov
dec
and
adc
mov
xchg
cmp
or
aas
mov
adc
mov
and
add
adcb
ret
ficomps
cmpb
loop
popa
lahf
sbbl
fwait
popf
dec
faddl
push
lock
adc
xor
push
mov
push
es
sahf
mov
pop
sahf
sbb
pop
js
mov
jmp
rcrl
jae
vfmaddps
add
push
push
sti
inc
out
fistl
loope
ficomps
lcall
ret
gs
out
xchg
add
and
cwtl
adcl
into
idiv
decl
mov
gs
test
nop
dec
and
push
enter
test
and
mov
push
xor
push
arpl
stc
push
lods
inc
xor
in
xor
pop
das
xchg
enter
leave
push
sub
popl
jmp
sarb
sbb
add
sbb
shlb
ret
mov
add
jecxz
aaa
and
sub
test
ret
test
lods
icebp
mov
xor
mov
mov
popa
scas
das
mov
lods
mov
fidivl
shlb
repnz
cmp
dec
clc
xchg
stos
std
cld
pop
push
fbstp
inc
lcall
mov
rcrb
jnp
xchg
jge
or
push
leave
aad
xor
pop
push
cwtl
hlt
inc
ret
fimull
adc
imul
mov
push
test
dec
xchg
imul
in
mov
mov
or
cmp
popf
iret
cmpb
popf
mov
flds
jp
mov
push
das
in
cmc
hlt
test
cmp
xchg
mov
arpl
ror
pop
test
loope
cli
cmpsl
clc
sbb
stos
mov
adc
mov
sbb
add
js
mov
nop
and
rorb
hlt
sub
je
rol
lret
xor
push
jmp
lds
xor
sbb
mov
popf
push
call
fdivrp
in
dec
nop
repz
dec
cmp
mov
dec
stos
push
sbb
xor
int
jae
cmp
or
sbb
sub
and
jl
inc
cwtl
mov
lea
jnp
jno
out
in
js
sub
shll
inc
add
lret
add
icebp
xchg
ret
adc
xchg
rcr
test
adc
mov
leave
repnz
out
add
pop
pop
pop
rclb
ret
cmp
imul
call
lds
dec
mov
add
xchg
jmp
rolb
fcomps
frstor
jo
or
shll
and
test
cwtl
test
aas
jnp
mov
jae
adc
aam
cltd
and
cmp
ss
int
lret
push
push
in
add
lret
popf
bound
insl
xchg
sub
add
sbb
sbb
jg
shrb
cli
push
mov
inc
movsb
movl
sbbb
rclb
ljmp
pop
dec
fnstsw
xchg
sub
fimuls
ds
sub
sub
push
and
cld
jno
xchg
das
inc
outsb
sahf
pop
js
orl
adc
pop
sub
push
je
sub
out
enter
xchg
xchg
loope
sbb
add
mov
mov
adc
mov
dec
jne
xor
jmp
rcrb
xchg
insl
jecxz
sbb
pop
push
mov
dec
ret
out
loopne
push
push
stc
adc
inc
fcmovnbe
les
pop
bound
ror
jle
xchg
inc
mov
gs
push
jmp
sbb
pop
and
iret
adc
mov
dec
gs
xor
hlt
ljmp
mov
dec
movsb
aad
xor
xor
sbb
xchg
or
stc
and
push
add
and
mov
or
mov
xchg
sub
fldl
or
lods
cmp
inc
fstl
mov
imul
xchg
aas
arpl
sarb
xor
mov
pop
sub
outsl
mov
jmp
or
jno
pop
xorb
mov
pop
jns
mov
xchg
jns
or
ret
push
mov
xor
add
cs
xor
rcll
add
ret
pop
mov
sbb
push
jmp
lds
leave
test
jp
pop
scas
mov
imull
jno
fldt
stc
or
ret
xchg
and
cmp
test
ds
stos
lahf
or
sub
pop
or
lahf
cltd
push
pop
clc
mov
jnp
xor
xor
repnz
xchg
xor
sti
sub
js
pop
add
or
xchg
cwtl
mov
and
mov
movsl
inc
push
mov
or
cmpsb
test
adc
loop
imul
sahf
cltd
cmpsl
pop
repz
arpl
jno
cltd
sub
inc
inc
mov
cmp
iret
xchg
jne
dec
pop
daa
popa
mov
enter
pop
add
cwtl
dec
and
mov
mov
test
add
dec
lret
xlat
mov
push
lock
cs
adc
jecxz
stos
jnp
or
jg
sbbl
test
sbb
test
clc
sub
mov
pop
push
lods
testl
cld
sub
test
xchg
mov
cmp
adc
mov
movsl
sbb
imul
jecxz
cmpsb
fstpl
icebp
adc
adc
push
or
push
fwait
leave
mov
repz
sbb
imul
sqrtps
sbb
adc
dec
inc
inc
lods
push
sub
xchg
ja
stos
clc
mov
sti
xor
mov
mov
es
popf
mov
loopne
ljmp
mov
addl
mov
lret
sbb
pop
call
sub
xchg
std
jno
clc
scas
fnstsw
push
test
jecxz
imul
mov
adc
jecxz
sub
inc
or
into
mov
pop
js
pop
mov
inc
mov
sub
mov
dec
jb
mov
mov
jb
out
xchg
cmp
popf
imul
sbb
sub
mov
xchg
jge
vmovq
jns
jp
add
sbb
mov
mov
or
mov
out
mov
or
mov
mov
dec
sti
cwtl
aam
sbb
add
mov
and
xchg
mov
mov
imul
mov
sub
daa
mov
fs
add
fnstsw
push
hlt
mov
leave
cwtl
jns
push
cld
out
mov
cmc
clc
dec
xor
pop
lret
sbb
push
cmpsl
shll
ljmp
icebp
dec
adc
call
in
mov
clc
sti
mov
hlt
adc
cmp
mov
sub
pushf
ret
fs
nop
lret
mov
sbbl
ja
inc
loopne
push
mov
stos
xor
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
dec
mov
cmp
ficomps
jne
xchg
stos
clc
pop
stos
xchg
stos
lcall
pop
xchg
lods
outsl
ss
push
cmp
test
lahf
scas
std
leave
stc
mov
xbegin
xor
idivl
pop
fisttpll
add
lea
std
pop
insb
in
xchg
mov
xchg
xchg
inc
push
mov
or
in
jg
mov
inc
out
mov
ret
fld1
std
jge
lea
enter
int3
pusha
ds
jecxz
mov
sbb
mov
mov
jmp
ss
dec
mov
push
repz
ret
mov
inc
movsl
test
jmp
pop
repz
repz
cmp
mov
push
or
lods
push
mov
xor
mov
test
push
test
mov
cltd
cmc
mov
in
fwait
mov
sbb
fldt
in
cmc
fst
test
lock
jmp
cmp
mov
add
push
dec
scas
jae
shr
jo
lods
inc
sbb
push
xchg
sbb
bnd
pop
stc
xor
leave
add
bound
or
or
add
sub
inc
imul
mov
dec
add
mov
sub
add
mov
int
call
repz
out
int3
ud2
fsub
push
jb,pt
int3
addr16
adc
add
xchg
sub
xchg
jecxz
testl
mov
les
pop
mov
arpl
lds
jnp
mov
jecxz
movl
add
push
mov
lret
mov
cmp
bound
jno
ret
stos
lret
lcall
ss
shrl
test
xor
dec
ss
fst
loope
cmpsl
xchg
test
lret
sahf
cltd
test
mov
xchg
rorl
dec
mov
inc
inc
inc
lcall
xchg
inc
inc
sbb
and
xchg
pop
push
adc
shl
jo
arpl
sbbl
addb
adc
pop
mov
xor
inc
test
aad
es
lock
pop
xchg
dec
dec
inc
lds
xchg
stc
in
pushf
cmp
in
cmp
mov
xor
fcomi
jl
adc
jnp
fisubrs
pusha
loopne
mov
fdivs
sub
pop
pop
mov
add
dec
sbb
loopne
iret
je
addb
inc
sarl
jecxz
add
mov
jbe
add
int
sbb
inc
pop
adc
inc
inc
sbb
pop
ficoml
out
mov
test
jb
dec
es
push
sub
inc
sbb
test
pop
jp
cmc
cmpsl
dec
pushf
or
lods
cwtl
sarl
or
loope
cld
mov
xchg
or
insl
mov
stos
ja
roll
adc
pop
pushf
and
sbb
dec
cwtl
jnp
es
or
cmp
adcb
xlat
push
mov
out
es
dec
xchg
daa
aam
cmp
test
repnz
cmp
mov
inc
popf
mov
mov
enter
cltd
xlat
xchg
fnstenv
rclb
cmpb
hlt
enter
sub
hlt
xor
xchg
mov
jecxz
cwtl
sahf
inc
aaa
lock
push
adc
popa
push
jecxz
xchg
mov
push
aam
ljmp
mov
imul
lahf
lret
aaa
hlt
add
scas
jo
js
mov
mov
pushf
pop
and
test
inc
sbb
sub
test
fs
push
xlat
mov
dec
movsl
add
das
sahf
sbb
out
push
cld
test
les
jno
dec
inc
int3
loop
cltd
adc
jbe
scas
mov
and
jl
fstpt
jo
jbe
lods
inc
pop
shlb
jg
xchg
sbb
push
sub
loope
push
mov
dec
std
loop
inc
inc
pop
repz
mov
mov
and
imul
sub
or
ss
xchg
push
xabort
pop
sbb
jne
jmp
sub
cwtl
sahf
sub
loop
call
jmp
and
pop
pop
and
cmp
jne
push
mov
dec
adc
mov
jecxz
sarl
ffreep
adc
mov
adc
lds
enter
add
cmpsb
testb
pop
mov
fistpll
clc
mov
inc
mov
mov
iret
sub
push
push
mov
sbb
cwtl
rcr
daa
push
ja
scas
rolb
xchg
ficoml
cmp
lods
sub
mov
and
mov
xor
cmp
repz
cld
cli
sti
sub
sbb
push
cltd
inc
rcrl
mov
pop
cmc
addr16
aam
ljmp
mov
jl
fidivrl
cli
xchg
dec
and
fimull
pop
ds
lock
fdivrs
sti
mov
jne
push
mov
shlb
dec
xchg
xchg
subl
cmc
mov
push
adc
push
xchg
loope
ljmp
xchg
inc
ret
inc
cmc
rcll
dec
ret
ficomps
jnp
pushf
ror
add
fsubrs
sbb
sbb
and
mov
imulb
cltd
lret
icebp
idivb
sbb
and
lds
movsb
leave
pop
sbb
fs
sar
cmp
pop
sbb
sbb
imul
or
push
mov
pop
mov
push
mov
test
xchg
jl
bnd
push
mov
pop
pop
mov
popa
cmp
inc
fldl
or
push
repnz
lcall
fwait
test
les
movsl
xchg
or
xlat
insb
jbe
stos
sbb
pop
jns
jb
fwait
outsl
movnti
mov
je
or
out
mov
dec
push
and
ds
fisubrs
push
dec
mov
pop
jle
or
ljmp
repz
imul
stos
in
test
into
lahf
idivl
pushf
dec
in
pushf
sub
mov
inc
sbb
and
icebp
shll
pop
fiadds
xchg
arpl
sbb
dec
into
fsubrl
sbb
mov
ja
xlat
push
sub
mov
sbb
mov
dec
bound
dec
sbb
fisubrl
inc
lcall
push
pop
mov
lods
adc
aas
lahf
inc
pusha
xchg
call
sbb
out
dec
mov
and
repz
dec
test
mov
or
cwtl
loope
xor
lea
inc
cwtl
mov
in
or
xlat
insb
jbe
jmp
cmp
inc
loope
pop
jmp
jno
popf
push
adc
mov
xor
aad
lret
gs
shr
test
jmp
gs
filds
aam
neg
adc
inc
mov
fcomps
pop
or
in
jae
add
xor
sbb
lock
loopne
mov
cltd
sbb
inc
cltd
xchg
jle
xor
shll
iret
cmpsb
mov
and
mov
push
ss
cmp
mov
xchg
cmp
test
inc
push
and
xchg
ret
mov
rorl
mov
adc
sub
cmp
sub
add
movsb
sub
or
jg
movl
cmp
push
inc
fisubs
inc
repz
jo
pop
pop
inc
xor
dec
mov
inc
jmp
dec
dec
sub
xchg
and
out
cmp
shl
sti
mov
popa
dec
in
stc
int3
pop
stos
dec
pop
mov
or
repnz
imul
popa
mov
fdivs
mov
nop
sti
mov
shrl
xchg
loopne
inc
inc
mov
insb
xor
mov
mov
sti
and
mov
mov
and
int
cwtl
dec
rcrb
jmp
lock
push
test
dec
sbb
and
in
mov
adc
je
fnstenv
add
nop
cltd
pop
repz
cld
arpl
push
push
xchg
pop
gs
stos
ja
dec
xchg
ret
adc
mov
cmp
xor
lea
sub
add
mov
or
cmp
or
stos
test
in
lahf
aam
mov
mov
loope
call
mov
xlat
sbb
mov
dec
push
adc
int3
mov
lret
enter
or
sub
dec
fsubr
loope
sbb
jb
idivb
les
pop
mov
loopne
in
and
adc
repz
pop
adc
or
mov
cltd
addb
mov
mov
adc
mov
fwait
lret
and
popl
inc
dec
pop
dec
inc
inc
pop
test
mov
leave
pop
pusha
test
sbb
cli
fwait
scas
push
mov
xor
icebp
addl
insl
mov
jmp
push
sbb
xchg
add
push
popa
mov
adc
fistl
mov
movd
mov
fimuls
jmp
push
pop
inc
in
bnd
into
scas
jg
add
inc
ror
cmp
rclb
jns
mov
cltd
mov
icebp
popa
cwtl
dec
cmp
jns
movsl
ret
dec
jns
fdivrl
addr16
popf
mov
pop
mov
fwait
cmpsb
jnp
call
push
add
lahf
dec
pop
mov
sbb
sub
daa
cmp
mov
push
mov
cmp
out
jbe
mov
nop
sti
mov
cmp
pop
mov
xor
adc
cmp
push
mov
sbb
jle
mov
adc
les
xchg
cmpsl
ret
test
lds
out
pushf
fs
or
push
insb
fisttpl
mov
nop
fdivrp
stc
inc
push
mov
rorl
fcoms
subb
add
sub
out
stos
jge
jns
sbb
pop
test
fstl
pop
xchg
jo
ret
icebp
sbb
stos
bound
fs
push
add
sbb
jecxz
lods
clc
jb
add
mov
insb
xor
mov
stc
xor
push
sti
mov
aam
mov
inc
sbb
or
sbb
sbb
clc
int3
dec
mov
out
adc
mov
lret
cmp
movsl
mov
pop
push
test
ret
sti
call
xor
inc
mov
test
fwait
mov
out
mov
mov
sbb
pop
add
shrl
orl
cmp
pushf
dec
and
jne
les
test
mov
mov
dec
popf
mov
loope
xor
xchg
mov
cmpl
add
pop
jnp
or
test
dec
nop
xlat
fistl
fisubl
inc
jae
xor
mov
rcrb
sbb
ficoms
jle
lods
push
pushf
repnz
cmpsb
subb
inc
mov
clc
jb
adc
push
test
xchg
mov
data16
cmpsl
bnd
inc
gs
imul
cmp
in
les
cmpsl
fcmovne
cwtl
jne
jecxz
mov
pop
push
push
dec
mov
call
sub
in
xchg
push
adc
ret
pop
pop
mov
push
hlt
xor
aam
sti
pop
xchg
push
cmp
jae
mov
inc
loopne
ficompl
hlt
testb
add
mov
mov
inc
mov
and
and
add
imul
test
push
cli
test
repz
test
arpl
movsl
insl
mov
inc
cmp
lret
pop
nop
imul
fdivrs
mov
mov
fcoml
sbb
in
mov
fstpl
bound
sub
mov
jmp
pop
inc
aam
clc
or
pop
aam
mov
shlb
push
add
mov
data16
push
insl
fwait
insl
lea
xabort
fs
and
call
xchg
or
fnstenv
leave
sbb
adc
sub
mov
push
iret
mov
pop
and
and
arpl
mov
aam
jmp
into
sbb
mov
mov
mov
xchg
or
sahf
mov
xor
sbb
aas
and
or
fstps
mov
push
dec
sbb
add
mov
and
mov
sar
cmp
xchg
cwtl
xchg
popf
pop
js
jg
test
sbb
js
push
cmpsb
dec
push
mov
sub
repnz
lods
cmp
sub
lods
mov
add
pop
jl
pusha
add
push
or
inc
fdiv
sti
and
call
fldt
add
jbe
rclb
add
lret
fwait
aas
sub
jae
inc
pusha
xchg
aad
pop
ja
add
es
cmp
adcl
sti
xor
jne
cmc
cmpsl
enter
xor
lret
int3
loope
ret
inc
lea
loopne
xor
daa
xchg
fistps
dec
add
cmpl
or
and
pop
push
adcb
adc
ret
ror
mov
add
xlat
xor
mov
push
negb
sbb
jne
lds
stos
mov
jb
push
aam
dec
sbb
mov
cmp
xchg
mov
xor
xor
push
sbb
cmp
ja
or
inc
ljmp
xchg
lcall
xor
add
je
enter
pop
inc
nop
scas
popa
or
insl
bound
sarb
clc
pop
call
mov
xchg
and
jecxz
push
fdivrs
mov
clc
int
sbb
cmpsl
sti
fsubs
loope
out
sbbl
clc
enter
jmp
mov
ret
add
xchg
jne
mov
push
pop
pop
xchg
ljmp
lea
movsl
imul
jmp
adc
out
and
mov
sub
add
rcll
add
idivb
jmp
ss
xor
lahf
cs
add
mov
inc
mov
lret
ffree
cmpsb
fistpl
icebp
mov
ret
add
and
pop
mov
movsb
pop
stos
pop
mov
push
into
fmull
pop
mov
xchg
pop
inc
jmp
fwait
bound
enter
cmp
mov
xchg
jle
pop
push
mov
inc
aad
cwtl
cmp
push
mov
inc
nop
and
mov
and
inc
add
mov
outsl
sub
cmpsl
jnp
enter
outsl
lds
ffreep
insl
add
mov
inc
lods
mov
int
mov
inc
incb
cmp
neg
in
pop
mov
imul
dec
cmp
pusha
hlt
bound
jb
adc
mov
adc
add
dec
pop
aas
or
or
sbb
arpl
icebp
mov
lods
shl
stos
mov
pop
test
mov
sbb
lods
dec
out
pop
loop
mov
mov
xchg
test
or
jl
adc
jp
cmp
pop
mov
xchg
cwtl
fstpl
dec
dec
xchg
mov
inc
insb
jle
maxps
sbb
xor
xchg
adc
sti
sub
and
or
and
xor
add
adc
popf
sub
xor
xlat
jecxz
adc
dec
mov
sub
cltd
push
adc
out
call
sti
xor
jno
aad
adc
dec
enter
hlt
je
xchg
xchg
lds
add
mov
lret
dec
fbstp
call
movsl
mov
pop
mov
imul
dec
cld
inc
imul
int
hlt
mov
inc
sbb
or
add
shr
or
xchg
or
mov
sahf
stos
and
iret
gs
or
jg
jnp
pop
sbb
test
test
fldcw
push
mov
mov
pop
adc
les
mov
or
adc
add
movsl
pop
subl
xchg
mov
add
pop
in
aad
mov
mov
js
lahf
scas
jg
leave
in
mov
mov
and
rorl
andl
data16
lret
aam
stc
fimull
in
xchg
js
dec
sbb
xchg
cltd
call
icebp
adc
mov
xor
xor
adc
mov
dec
inc
mov
cltd
sahf
inc
and
imul
push
aam
icebp
pop
adc
lcall
and
mov
sbb
add
mov
lahf
jnp
hlt
dec
inc
sbb
inc
dec
arpl
insl
movsl
ror
jle
cltd
je
fs
sbb
xlat
addr16
mov
pop
cmpsl
cltd
fstps
in
dec
decb
push
clc
sub
fbstp
rorl
sbb
ret
mov
xchg
add
pop
mov
dec
pop
mov
rcl
lcall
setge
add
sti
lret
sbb
cli
repz
sub
inc
mov
clc
aaa
jge
push
dec
mov
and
add
jge
fwait
cmp
xchg
sbb
fwait
sub
mov
adc
lods
in
push
mov
sbb
xlat
pop
fld
xchg
push
out
cmp
xchg
mov
mov
cld
inc
pop
jp
inc
mov
pop
push
mov
out
sub
sbbl
divb
aam
in
pop
pop
add
inc
inc
divl
pusha
loope
push
sub
add
mov
rcl
sbb
mov
pop
nop
xlat
dec
sub
and
mov
push
cli
movsb
fldcw
ja
fs
jmp
pushl
pop
mov
xchg
sbb
push
sbb
shlb
jo
xchg
add
pusha
cmp
or
add
xor
cmp
push
leave
pop
and
jmp
sbb
popa
push
jle
lahf
xchg
sbb
dec
sbbb
ds
push
cwtl
clc
push
sarb
fdivs
stos
aad
insb
mov
xchg
sub
jmp
cltd
pop
imul
xchg
jle
test
pop
fdivrl
pop
mov
gs
lahf
outsl
out
rol
mov
cltd
cltd
add
clc
aam
call
loope
subb
lea
pop
pop
mov
push
sahf
sub
add
and
mov
jae
test
in
sbb
fsts
cmc
mov
push
roll
ljmp
inc
mov
fidivrs
mov
pop
test
pop
cli
dec
sbb
inc
stos
and
jne
xlat
outsl
inc
stc
mov
mov
jae
das
pop
mov
pop
sub
adc
or
test
cmc
mov
movsl
or
pop
mov
mov
dec
pusha
jbe
stos
xor
mov
sti
shl
mov
pushf
repnz
and
push
sbbb
rcll
es
fs
mov
ret
into
xchg
mov
pop
xchg
inc
popl
add
cltd
aad
pop
mov
ret
inc
aam
insl
lahf
outsl
out
pop
fsubs
and
inc
test
jns
xchg
test
push
mov
xchg
pop
dec
push
inc
mov
sbb
xchg
scas
pop
push
mov
sub
in
jge
and
imul
inc
pop
add
in
mov
mov
inc
ret
and
sti
dec
adc
lret
inc
xchg
in
cmpb
out
test
and
testl
fldcw
neg
rcll
into
mov
sbb
fcom
inc
jl
ret
add
xchg
lret
pop
xchg
lret
nop
cmp
subl
jle
cmpsl
or
push
ret
into
scas
fistps
pop
jns
popf
shlb
and
add
aas
cmpsl
es
or
aam
pop
lret
mov
int
les
les
add
adc
dec
mov
sub
cltd
in
mov
cmp
xchg
dec
pop
fsubs
push
mov
shlb
or
xchg
dec
iret
mov
mov
cltd
faddp
add
stos
les
inc
sahf
shrl
mov
ret
in
aas
in
mov
movsl
ret
inc
cltd
mov
dec
add
rcrl
adc
mov
orb
inc
cltd
nop
push
xor
xor
leave
dec
sbb
outsb
test
int3
loopne
xor
mov
popf
neg
dec
cld
test
loope
repz
movsb
push
sub
cld
xor
test
out
xchg
stos
sahf
rorl
imul
movb
jecxz
fwait
popf
push
fldenv
movsb
mull
popf
fists
jb
inc
stc
rorl
add
rolb
stos
popf
outsl
pop
mov
and
enter
fwait
xor
push
sub
scas
pop
bound
cmpsb
jnp
stos
pop
cmp
mov
out
call
fsubs
in
hlt
or
shr
mov
push
sub
mov
lea
int
push
xor
mov
ss
loopne
jae
addr16
sub
sti
pop
adc
lods
in
jp
mov
adc
adc
add
push
test
sbb
scas
insb
sub
lahf
stos
mov
add
mov
dec
sbb
scas
mov
jne
stc
dec
dec
push
dec
dec
popf
push
lock
scas
outsb
inc
pop
invd
mov
mov
xchg
stos
xor
mov
ret
jns
dec
pop
cld
ret
mov
ret
fildll
sub
iret
lret
lock
popa
or
or
push
addl
or
mov
imul
mov
pop
xchg
imul
add
scas
rorb
jnp
enter
inc
scas
xor
mov
cltd
push
and
call
dec
dec
mov
dec
sbb
pusha
fldcw
loopne
aad
sub
inc
lods
shll
mov
dec
call
pop
ljmp
mov
hlt
mov
add
jae
add
enter
or
xlat
fdivrl
mov
icebp
imulb
shl
sbb
fwait
mov
lds
xchg
lods
leave
pop
sbb
mov
ja
fs
jmp
pushl
setge
xor
pop
shll
push
add
stos
jge
cltd
movsl
adc
mov
jns
inc
pop
mov
fstl
jp
scas
decl
mov
ja
lds
fs
js
xchg
sub
pop
xchg
jmp
inc
mov
xchg
rcll
push
fsubs
xchg
mov
pop
pop
cmpsb
adc
cmpsb
jnp
jns
icebp
fimuls
jno
push
adc
addl
leave
fcomps
lret
inc
cmp
movsl
mov
fdivs
jbe
mov
into
push
lret
mov
fsubp
jae
mov
sbb
in
xchg
andb
int
inc
mov
or
ret
xor
cwtl
clc
push
xor
pushf
dec
xor
rorl
ret
in
stos
push
and
rolb
lcall
cmc
fisttps
ret
arpl
rcr
nop
sbb
mov
test
test
jo
andl
outsb
mov
lea
fldt
mov
inc
inc
push
jnp
decb
fucomi
repnz
loop
inc
stc
cmpl
and
xchg
out
in
push
test
xchg
and
test
push
lahf
sub
mov
mov
popf
push
test
ds
cmpsl
jnp
cltd
bound
adc
repz
inc
mov
pop
mov
jbe
cltd
stc
imul
xor
mov
repz
hlt
mov
mov
ss
and
sahf
shll
jp
ds
mov
mov
rcrl
dec
xor
cld
add
inc
and
ja
mov
movsb
xchg
lret
movsb
push
sub
push
lret
jmp
loope
lahf
popf
clc
mov
iret
fwait
jo
xlat
imul
mov
cld
lcall
pop
mov
push
mov
jns
enter
pusha
lcall
movsb
mov
pop
inc
xchg
loop
adc
js
orl
clc
mov
adc
shll
fmuls
and
loopne
mov
jl
xchg
and
mov
cmp
loopne
mov
gs
xlat
lea
mov
dec
std
or
mov
jmp
xchg
mov
mov
imul
mov
call
inc
sahf
shrl
mov
push
out
out
repz
ds
psubsw
repnz
push
mov
mov
inc
pop
adc
out
mov
stos
jae
push
sbb
adc
sub
aaa
sub
dec
cld
leave
push
lahf
repnz
fidivrs
mov
fisttps
je
mov
sbb
fdivl
xchg
adc
mov
rorb
stos
fistl
repnz
jbe
lods
cltd
dec
mov
std
lahf
scas
dec
int
cmp
xlat
fmull
and
mov
mov
es
insb
dec
aam
jns
dec
and
adc
mov
push
push
mull
xor
and
call
jo
loop
iret
and
cmpsb
sahf
mov
test
scas
inc
ds
jne
fcom
adc
cmp
adc
xor
test
rorb
aam
mov
addr16
test
sar
gs
lret
jecxz
popa
cwtl
rcl
or
fs
hlt
scas
jo
push
adc
mov
sbb
shrb
imul
sbb
and
lds
pop
popa
lods
cmp
mov
pop
test
test
xchg
cmp
jae
dec
push
push
or
stos
ficoml
scas
pop
xchg
mov
cli
mov
or
shl
sbb
push
ljmp
lock
adc
inc
cli
dec
clc
xor
or
or
mov
movsb
xchg
xchg
add
dec
test
cltd
xor
shll
xor
insl
push
or
cmp
add
mov
inc
sub
inc
inc
leave
sbb
jns
lcall
lcall
ja
popw
test
xor
pushf
mov
aam
xchg
addr16
pop
data16
rcrl
addl
out
add
sbb
or
or
ret
cmpsb
mov
dec
imul
push
fistl
std
movsl
lods
loop
movsb
fsts
fists
in
mov
es
mov
jl
inc
loop
ja
in
or
lret
pop
cmpsl
fwait
xchg
jl
or
pop
test
add
ret
push
cmpsl
jge
inc
xchg
adc
push
jae
sti
ljmp
add
call
repnz
iret
int3
or
inc
jmp
mov
ret
cmpsb
push
pop
fisubl
jnp
fadds
repz
fldenv
adc
rolb
xchg
loope
xchg
xchg
jmp
adc
bound
imul
popf
repz
xchg
or
cmp
sub
and
cmp
pop
cmpl
mov
outsl
rcrb
ret
pop
dec
jo
sbb
in
outsb
xor
cld
dec
leave
xchg
dec
fwait
mov
insl
stos
push
and
int
mov
lret
ffree
jmp
jnp
sbb
jno
inc
push
pusha
adc
xchg
xchg
lret
mov
xor
arpl
sbb
les
rcrl
cmpsb
inc
inc
mov
ficoms
and
icebp
xor
add
add
jns
cwtl
or
movsb
cmpsl
test
jle
xchg
stc
xor
push
mov
or
add
mov
push
sbb
xchg
cltd
xabort
pop
lahf
lods
fcmovne
or
jecxz
adc
inc
inc
cmpsb
leave
sbb
pop
cwtl
out
mov
int
sahf
inc
fsubrs
dec
sahf
dec
mov
repz
adc
add
xor
pop
cmpsl
shrb
inc
sahf
shrl
cmpsb
ficompl
sbb
pop
lock
jecxz
pop
xchg
pop
sub
pop
xorl
in
cmpb
mov
inc
stos
cwtl
adc
mov
push
lret
inc
std
xlat
dec
sti
iret
xor
lods
movl
mov
repz
fs
mov
and
add
adc
outsl
jmp
pop
push
outsb
shrb
mov
fcoml
xor
sub
sbb
jo
es
out
xchg
inc
add
fiaddl
jnp
stos
or
or
scas
cltd
rcr
subb
push
fisubs
adc
ret
cli
inc
pop
fidivrs
mov
mov
pop
mov
test
and
test
xchg
out
push
mov
cs
mov
push
filds
scas
das
pop
mov
and
push
dec
xchg
in
ret
mov
das
jae
jecxz
push
imul
add
mov
dec
dec
sbb
gs
mov
and
iret
cmp
add
or
nop
xlat
xor
inc
adc
dec
dec
sbb
lret
test
cmc
fbstp
add
mov
cmpsl
jno
lret
push
mov
cwtl
jmp
or
ficoml
stos
xchg
int3
fxch
imul
fwait
pushf
adc
jecxz
movsl
pushf
push
pop
and
ffree
testl
mull
inc
imul
add
mov
add
mov
xchg
leave
daa
mov
cwtl
dec
xor
mov
test
stos
addr16
aad
pop
inc
ret
sbb
test
pop
clc
pop
fdivrl
sti
repz
in
add
addl
fucom
inc
pop
xchg
dec
lret
cltd
sahf
inc
and
xor
mov
iret
pop
adc
imul
int
pop
lods
push
test
out
mov
mov
pusha
xor
xor
inc
sti
int3
add
mov
mov
sbb
inc
sub
or
ret
cmpsb
test
in
bnd
fs
jb
mov
repz
sbb
sub
dec
cmp
repnz
lods
pushf
shll
jno
inc
push
sub
imul
and
jne
dec
jmp
shrb
mov
xchg
jbe
and
push
mov
fsubp
pop
out
jns
into
scas
fists
arpl
pop
adc
pop
jl
pop
clc
xor
lea
xchg
adc
test
fwait
cmp
cmpsb
shrl
push
fisubl
pop
loope
sub
cmpsb
cwtl
cmpsb
test
out
cmp
mov
xchg
or
adc
xorl
lret
cltd
fisubs
mov
out
aaa
jmp
mov
mov
loopne
pop
daa
into
cmpl
lret
mov
divb
mov
cmp
adc
lret
inc
xchg
icebp
cvtpi2ps
in
dec
imul
lret
fldenv
gs
and
pop
popf
rcr
push
cld
mov
fisttps
jbe
das
insb
mov
inc
data16
and
stos
jne
or
imul
pop
jb
mov
sub
stos
mov
ljmp
push
es
leave
in
pop
popa
or
push
push
addl
decl
dec
xchg
leave
daa
xor
dec
out
adc
push
scas
xchg
xlat
xchg
mov
gs
outsl
mov
sub
bound
push
out
icebp
cmpsb
xchg
jp
push
aaa
stos
add
out
cmc
xor
push
adc
subb
fwait
pop
test
ss
xchg
inc
pop
mov
mov
clc
sti
mov
repz
mov
sbb
inc
sbb
mov
mov
popf
rcrb
xor
ret
inc
sbb
rcrb
sbb
mov
fdivrp
test
mov
sub
test
mov
lahf
jae
orb
and
jmp
cld
mov
xchg
or
dec
mov
mov
dec
jno
aaa
fwait
lods
js
xchg
push
or
jmp
popf
fiadds
out
jns
enter
pop
cmc
xor
inc
adc
jnp
lret
js
xchg
cwtl
retw
inc
xor
cwtl
dec
and
jp
fsubs
push
fwait
mov
test
mov
xchg
cltd
arpl
xor
jne
test
xor
and
leave
cwtl
pop
and
mov
push
cmpsl
xor
pop
cmc
cmp
sbb
test
jo
mov
aam
sti
jae
test
lock
mov
add
push
add
mov
add
imul
mov
rcrb
sbb
stos
mov
ja
inc
and
sub
rol
adc
inc
scas
fldt
jmp
mov
mov
pop
jbe
scas
mov
adc
pusha
or
adc
jnp
mov
lods
jne
xchg
insb
mov
push
call
xchg
rclb
insl
add
fmuls
add
cwtl
inc
test
dec
shrl
fstps
sbb
xlat
push
repnz
xlat
insb
imul
sahf
outsl
test
fnstcw
or
ret
push
movsl
in
add
test
mov
or
rol
movsb
cmp
clc
js
test
or
pop
stos
cmp
ss
ret
xchg
jl
pusha
xor
adc
test
out
mov
lock
mov
xchg
add
mov
inc
pop
adc
mov
and
iret
inc
cwtl
mov
inc
cmp
insl
lods
repnz
mov
in
dec
sahf
mov
xchg
mov
sbb
outsl
cmp
xchg
test
mov
pop
js
scas
mov
jge
dec
mov
movsl
xchg
and
jl
rorl
xchg
lods
xchg
arpl
xchg
dec
rclw
inc
jmp
cwtl
filds
jmp
scas
push
pushf
repnz
cmpsb
test
inc
clc
insl
ret
fldcw
sub
add
test
dec
shll
out
mov
xchg
and
daa
inc
sbb
fists
xchg
lea
xor
fldl
mov
sbb
sbb
add
cli
inc
or
dec
sahf
inc
pop
fdiv
out
inc
test
sub
pop
xor
sbb
mov
jae
mov
or
add
mov
dec
stos
das
push
pop
adc
mov
sbbb
ja
mov
int3
mov
pop
sti
push
ret
xchg
repnz
stos
push
call
popf
adc
aaa
repz
jo
test
shrb
in
jge
dec
xchg
stos
lds
xchg
push
push
cmp
push
mov
pop
inc
pop
mov
lods
inc
sbb
add
push
incl
xchg
pushf
repnz
cmpsb
test
cmp
or
stc
push
xorl
inc
es
inc
test
and
and
cmp
push
fsubl
insl
cltd
in
scas
ret
jb
fwait
outsl
jae
inc
mov
dec
mov
pop
inc
andb
xor
dec
inc
cmp
ret
movsl
imul
out
jmp
sarb
cld
loope,pt
iret
je
in
ljmp
mov
jae
mov
in
arpl
inc
sbb
sahf
test
ret
test
cmpsb
mov
sub
ret
xchg
pop
add
adc
xor
push
xchg
inc
std
xlat
cmp
mov
divl
stos
cmp
lret
test
cltd
pop
xchg
cmp
jae
les
in
xorb
xchg
popa
ss
stos
jbe
inc
pop
pop
mov
pop
ljmp
sub
lahf
inc
pusha
mov
std
fistpl
jecxz
leave
loop
and
push
andl
cmp
xchg
push
mov
out
out
cld
cmp
inc
xchg
imul
pop
jge
mov
sub
xchg
xchg
push
call
jnp
int3
jne
jecxz
mov
add
addl
enter
or
sub
movsb
leave
cs
cmc
fdivrl
lds
mov
mov
jg
dec
loopne
in
aas
testb
push
dec
subl
iret
rorl
mov
testb
lret
mov
sbb
add
imul
sbb
rolb
imull
xorb
test
push
icebp
rorl
mov
dec
jnp
mov
in
lods
cmp
stos
mov
subw
adc
add
pusha
subb
subl
mov
test
or
sbb
sub
fucomi
bnd
jg
movl
insb
or
js
test
dec
mov
icebp
or
rcl
sub
sbb
movsl
fimull
push
gs
insl
cmpsb
lock
ret
xor
jb
pop
repz
xchg
mov
enter
les
mov
or
jb
dec
sahf
xchg
inc
push
sahf
cmpsb
mov
stos
std
dec
mov
imul
fistpl
stc
jecxz
sti
pop
adc
ret
ret
out
adc
pop
sub
xor
mov
add
ffreep
mov
push
xor
and
pop
stos
inc
in
dec
sahf
mov
addb
scas
lahf
popf
in
mov
mov
mov
movsl
xchg
test
add
inc
add
adc
shrb
aaa
jns
inc
pop
lods
ret
frstor
scas
xlat
push
jno
in
mov
cmpsl
mov
arpl
rolb
or
inc
dec
cmp
mov
rcr
mov
inc
xor
push
jmp
roll
jmp
int
fstl
mov
call
sti
xor
jne
jecxz
mov
inc
inc
mov
sbb
pop
fsubrl
in
jne
cmpsl
and
lds
rcrl
pop
adc
popa
pop
mov
arpl
int
jae
mov
jecxz
mov
adc
shll
imul
fwait
ret
sbb
push
rcll
loop
dec
sbb
inc
stos
push
and
out
sahf
popf
int3
out
push
cld
mov
fistpll
jmp
mov
xchg
fsts
add
fcmovbe
cmp
push
outsb
les
push
jb
lods
pop
or
das
cmp
popf
ret
jge
inc
movl
fists
pop
outsb
insb
jae
adc
cmp
cwtl
lock
shlb
ljmp
cmp
fadds
adc
movsb
pop
fisttpl
mov
fwait
inc
mov
xor
mov
out
and
test
and
cwtl
hlt
xor
nop
shrb
in
jne
sbb
shrb
pop
pop
mov
shr
repz
ret
loopne
mov
iret
ffreep
imul
jmp
lock
adc
mov
lock
adc
rcll
fsubrl
cwtl
xchg
sbb
arpl
insb
xchg
xlat
stos
les
xlat
std
lds
pop
movsb
mov
lcall
mov
fists
xchg
stos
pop
cmp
add
cmp
cmp
add
sub
lahf
mov
xor
dec
rcrb
push
pushf
xor
add
js
dec
mov
inc
fwait
out
jl
sarb
dec
lea
add
or
popa
or
arpl
jp
mov
popf
imul
cmp
jbe
fwait
lea
xor
loop
je
pop
sbb
out
mov
inc
shlb
cmp
pop
mov
fdivl
ljmp
icebp
pop
loope
inc
sahf
shrl
mov
push
lock
lock
add
dec
xchg
mov
and
mov
repz
dec
and
iret
inc
mov
xchg
dec
xor
ror
hlt
jb
mov
pop
xchg
ficompl
lods
insb
std
ljmp
ror
arpl
jo
test
push
mov
lcall
shrl
mov
cmpsl
inc
pop
pushf
ret
sahf
fstl
pop
cmpsl
rclb
cmp
in
mov
jmp
test
add
add
inc
sbb
or
sub
mov
sbb
and
insl
out
repz
push
sbb
push
dec
test
int
out
cmp
jecxz
je
or
inc
ds
dec
dec
mov
cwtl
sahf
inc
aaa
les
out
cmc
push
xchg
pop
repnz
orl
pop
adc
inc
stos
sti
imul
idivl
std
iret
fucomip
loope
insl
mov
adc
jbe
add
int
sbb
jno
movsl
mov
rcrb
sbb
les
adc
xchg
repnz
push
ljmp
arpl
cmp
push
fucomp
idivl
sbb
sbb
mov
mov
jmp
add
sub
cltd
fstp
push
xchg
ja
fstl
pop
cmpsl
push
jl
lret
leave
cltd
in
mov
pop
cmc
and
data16
or
pop
sbbb
test
xchg
stos
sbbb
pop
and
xchg
jno
jp
mov
popf
js
sbbb
inc
cwtl
pop
cmpsl
ret
xchg
std
stc
sub
pushf
adc
add
add
xchg
out
cmp
fisubs
or
aaa
cmpsb
mov
bound
mov
test
sti
mov
or
jle
lea
imul
push
pop
cli
add
mov
jl
test
dec
aas
data16
rorl
or
pop
xchg
loop
nop
sub
scas
mov
mov
shll
jno
cld
in
xchg
imul
mov
pop
or
shrl
push
push
mov
inc
lcall
pop
mov
test
add
jg
leave
in
mov
mov
leave
cmc
cmp
sub
pop
std
arpl
inc
inc
sbb
ret
dec
xchg
pop
sub
mov
sbbb
xchg
cmp
mov
inc
sbb
push
inc
test
cmpsb
inc
cltd
add
mov
add
pop
int3
push
ficoml
dec
imul
or
popa
in
std
shl
mov
jno
xor
sbb
call
xlat
fcomip
clc
sti
pop
adc
ret
ret
out
mov
pop
sub
push
pop
fiaddl
jno
mov
mov
pushfw
dec
and
jne
les
lahf
stos
and
lds
movsb
shll
pop
jae
testb
mov
lods
iret
enter
add
xchg
stos
ljmp
inc
cmp
mov
jne
jb
xor
int
lock
fiaddl
pusha
mov
stc
bnd
push
push
dec
xlat
faddl
sti
and
hlt
inc
aam
js
or
push
stc
jge
jns
dec
and
stc
xor
push
xchg
dec
popf
jp
mov
xchg
imul
inc
popf
mov
inc
test
xlat
pop
repnz
out
push
aam
xchg
mov
mov
cmp
cld
jl
adc
jne
dec
movsb
nop
out
xlat
adc
ret
pop
mov
dec
loopne
addl
std
pop
adc
jno
mov
dec
add
divl
jo
or
int
nop
cmp
add
ret
je
cli
mov
aas
push
xor
rorl
or
dec
and
lds
test
inc
sub
pop
fucom
rep
sub
sbb
jno
add
push
sbb
jnp
mov
dec
rcr
xchg
lret
shrb
jnp
movb
cmp
adc
in
cli
mov
scas
inc
cld
cli
inc
out
and
lret
mov
or
mov
sub
test
pop
aam
xor
push
mov
and
fisubl
stos
cmp
pop
jb
fwait
outsl
movnti
shrb
pushf
sub
sbb
in
hlt
xor
test
outsl
aad
or
adcb
cmc
mov
lds
gs
mov
loopne
ret
mov
aam
mov
jecxz
pop
mov
imul
lret
add
fs
inc
sbb
int
adc
les
or
inc
inc
adc
mov
ja
push
push
inc
mov
xchg
jae
lret
dec
push
mov
popf
in
mov
cli
aas
lret
jl
xchg
into
pop
push
pop
xchg
lret
or
dec
cmp
sub
arpl
ljmp
add
jmp
cmp
enter
stc
in
pop
loope
add
cmp
sub
js
rcr
test
imul
stc
cmp
and
mov
fists
mov
dec
adc
es
ret
cmp
bound
out
adc
addl
sub
adc
loop
jne
pop
mov
imul
ret
push
add
ret
inc
int3
cltd
lahf
mov
fdivrl
ljmp
pop
mov
sbb
mov
movb
imul
scas
lds
dec
sbbb
sub
sbbl
adc
aad
test
push
and
fldl2e
je
sahf
das
xchg
stc
cli
in
test
add
dec
xchg
adc
filds
addb
add
jns
pushf
scas
subl
jbe
lods
xabort
lds
inc
mov
push
pop
xchg
inc
fsubrl
cmp
daa
mov
sbbb
rorl
in
mov
jnp
inc
push
mov
or
xchg
and
jbe
inc
sbb
cmpsb
fists
jb
inc
aad
xchg
mov
mov
fwait
push
leave
xchg
enter
js
or
cmp
jmp
adc
rorb
int3
fisttps
inc
sbb
pop
pop
rclb
fistpl
push
cld
das
leave
and
pop
mov
mov
orb
inc
sbb
les
aad
inc
sbb
test
ficompl
jge
les
imul
lds
cli
xchg
sub
lahf
sbb
stc
inc
pop
cld
test
jo
xchg
mov
aaa
cld
jo
test
xchg
imul
loop
jl
push
sar
add
pop
cld
and
cmpsb
popf
adc
cmpsl
dec
insb
es
incb
pop
test
jmp
push
pop
jb
add
call
icebp
inc
sti
pop
repnz
and
mov
jge
fwait
cmp
mov
into
push
mov
xchg
ds
fadd
pop
fsubl
jo
loop
aaa
and
es
rorb
cmpsl
jl
clc
nop
test
and
addb
adc
inc
sahf
sub
xchg
sbb
inc
push
std
into
sbb
out
jno
or
pop
dec
or
imulb
inc
xchg
add
jno
mov
mov
cmp
add
sbb
inc
mov
xchg
sbb
fnstenv
in
dec
mov
cmp
mov
xchg
add
cwtl
pop
movsl
or
xor
add
jecxz
lcall
sbb
cld
or
sbb
out
js
inc
and
pop
add
jo
cs
cld
dec
sarb
mull
addl
cmpl
fwait
jae
fistps
cmp
jp
gs
popf
inc
mov
int3
orw
add
test
jle
push
dec
mov
rcll
in
into
hlt
call
out
nop
je
loopne
ret
mov
bound
mov
lret
jecxz
aas
rcrl
adc
call
adc
ret
gs
push
lods
xchg
sub
adc
push
and
adc
sbb
lods
xchg
pop
jae
push
clc
mov
mov
mov
pop
sbb
mov
inc
sbb
sbb
imull
jne
imul
shlb
lods
jle
mov
sbb
cltd
lods
jno
shl
stos
pop
scas
movl
imul
xchg
inc
imul
mov
sbb
cwtl
or
mov
mov
daa
mov
pop
test
mov
dec
mov
pop
mov
gs
jge
sti
decb
mov
inc
inc
mov
inc
push
sub
and
imul
ret
mov
lcall
repz
daa
xor
mov
or
std
sbb
sbb
cld
repz
flds
dec
or
or
mov
and
fs
movsl
mov
ret
outsb
xor
test
mov
popf
lea
lods
jecxz
data16
fisubrs
fdivrl
add
sbb
cld
jo
or
mov
outsb
shrb
mov
lods
pop
xchg
push
mov
ret
lahf
ficoms
fwait
div
loopne
popf
scas
inc
fwait
leave
loop
jne
fsts
xchg
popl
or
add
andl
dec
mov
adc
test
mov
fisubs
mov
cmp
call
jnp
pop
mov
add
in
sub
loop
out
mov
cltd
sahf
cmpsl
and
sahf
dec
mov
into
add
ret
arpl
mov
addr16
mov
lret
in
icebp
pop
xchg
sahf
repz
cmpsb
rcrb
cmpsb
sub
cmpb
sbb
arpl
adc
ret
insb
cmp
cmp
pop
cli
push
imul
imul
xchg
adc
ljmp
popf
lret
outsl
mov
pop
fbstp
les
das
xor
jo
movsl
adc
fstpl
mov
clc
jmp
popa
aad
mov
iret
fwait
outsb
mov
fdiv
push
inc
mov
fiadds
out
or
sub
pop
mov
xchg
nop
roll
mov
fwait
cmp
lock
sub
leave
push
insl
cltd
fcmovnbe
xchg
cltd
mov
cmpsb
jnp
mov
dec
inc
adc
dec
call
push
or
int
jle
push
dec
mov
push
cmp
mov
into
pop
stos
pop
lods
cmp
cmp
mov
clc
sti
dec
mov
jnp
jae
pop
mov
pop
push
lock
push
dec
bound
pushf
cmpsb
xchg
decb
shll
stos
mov
add
lds
pop
movsb
ret
mov
stos
xchg
jae
lret
rorl
pop
rcr
cmp
in
cs
mov
mov
xchg
rorl
xchg
fildl
imul
sar
aad
xor
push
enter
mov
bnd
int3
scas
fcompl
leave
loop
adc
mov
inc
shlb
push
popl
aaa
lods
addb
inc
xchg
mov
xchg
sbb
movsb
cld
clc
cmpsb
fsubrs
ret
ret
fld
popa
mov
out
cmp
push
test
out
sub
sbb
nop
dec
mov
mov
push
scas
cwtl
js
sahf
inc
cmp
out
mov
call
adc
mov
adc
pop
add
sahf
repz
orb
inc
ret
mov
inc
js
mov
push
imulb
sbb
insb
dec
xchg
stos
iret
in
mov
mov
stos
mov
int3
data16
lods
mov
mov
add
iret
ljmp
inc
sbb
sub
pop
stos
jge
dec
movsl
or
pop
mov
xchg
sahf
fstp
push
xchg
ja
cs
xor
mov
mov
data16
mov
add
arpl
rolb
outsl
rclb
aam
adc
and
push
fsubs
push
in
xor
sbb
pop
cltd
jno
mov
lds
jnp
pop
add
mov
dec
cmpsl
lcall
cvttps2pi
popf
pop
mov
int3
lcall
mov
call
outsl
jmp
sahf
jle
iret
fists
jno
es
add
add
push
mov
mov
sarb
sbb
push
jmp
lds
push
mov
sub
dec
sbb
scas
fldt
js
cmpsb
xchg
test
dec
mov
or
adc
xchg
stos
mov
push
mov
dec
dec
test
lods
xor
aad
in
scas
movl
fistps
xchg
loop
mov
mov
or
es
or
xor
push
stos
push
sbb
dec
and
sbb
es
push
insl
fwait
insl
lea
cmp
clc
cmp
jne
shr
mov
int3
inc
push
xchg
dec
lret
mov
cltd
sahf
inc
xor
scas
mov
cmc
hlt
imul
mov
int
pop
lea
pop
add
sub
mov
iret
lock
push
out
jo
or
add
lea
sbb
test
test
push
aad
cmp
sbb
adc
test
mov
sbb
and
push
cld
mov
shr
cmpsb
cmpsl
xchg
gs
pop
cmp
repz
dec
stos
or
dec
jg
mov
sub
aaa
std
xor
push
lods
mov
push
leave
into
cmpsl
inc
push
pushf
or
mov
scas
movl
xchg
loop
add
cmp
pop
sub
jmp
adc
or
cmp
pusha
inc
cwtl
pop
out
xor
push
sub
fstl
pop
sub
gs
inc
lahf
and
out
mov
mov
in
hlt
or
xchg
xchg
jmp
icebp
mov
mov
leave
ds
and
xor
mov
lods
divl
sub
mov
push
lahf
lds
ds
hlt
mov
add
add
out
rclb
mov
xor
jns
xor
mov
imulb
adc
mov
sarl
test
dec
in
ja
movsb
fldcw
insl
ljmp
cmp
xor
ret
add
addb
int
jmp
subl
jb
cmp
jbe
lods
and
mov
ja
push
dec
sub
loop
sub
jo
or
sarb
jb
adc
test
xchg
inc
stos
adc
fisubl
xchg
dec
movsb
inc
sbb
or
cmp
jne
jecxz
mov
pop
pop
mov
mov
hlt
je
in
stos
jecxz
cmc
or
aam
in
dec
fldcw
shl
pop
and
imul
into
aam
sti
sub
jnp
mov
mov
mov
jae
mov
add
adc
movsl
stc
inc
mov
xchg
xor
mov
xor
rorl
shr
push
sub
sub
sbb
mov
leave
js
mov
xchg
imul
popf
lds
mov
sub
xor
les
sbb
inc
mov
inc
je
jl
pusha
test
ficoms
mov
fists
sti
xor
adcl
mov
test
mov
mov
cmp
or
and
xchg
mov
ret
pop
test
add
mov
push
pop
insb
arpl
iret
jb
fwait
outsl
lar
mov
cltd
push
add
cs
sub
mov
into
jmp
jbe
sbb
fadd
fldcw
arpl
fisubl
movsl
loopne
hlt
mov
repz
sti
pop
push
iret
ret
ljmp
cld
or
mov
repnz
xchg
pop
add
dec
inc
sbb
sub
adc
aam
scas
add
fsubrl
inc
in
xlat
dec
mov
sub
stos
cmpsb
mov
jmp
jae
into
je
mov
jl
leave
shrb
inc
sbb
or
xchg
stos
mov
js
cmp
stc
lahf
int
test
rol
pusha
jp
mov
jns
adc
sbb
loop
jb
rclb
inc
shlb
add
dec
xchg
dec
test
xor
push
fsubs
xchg
mov
pop
pop
cmpsb
inc
xchg
xchg
cmpsl
repz
lahf
out
xchg
or
enter
cmp
int3
sbb
push
adc
mov
lret
cmpl
inc
mov
into
pop
stos
test
lea
daa
mov
repz
ds
lock
mov
sbb
jg
add
inc
or
jg
cwtl
test
cwtl
lret
cmp
in
pop
xor
adc
mov
in
xlat
lea
test
mov
scas
xchg
and
jae
push
clc
mov
mov
sbb
sarb
stos
pop
mov
movsl
sbb
imul
mov
xchg
pop
sbb
lods
mov
aad
mov
movb
ficomps
out
js
adc
js
mov
mov
adc
mov
sti
jl
mov
jmp
push
mov
mov
fdivrl
mov
xchg
dec
cmp
bound
adc
enter
push
int3
es
hlt
pop
fldcw
jne
dec
jg
sub
mov
xor
mov
repz
push
hlt
mov
in
fisttps
jnp
pushf
shl
arpl
inc
or
add
out
jno
dec
and
shll
orb
adc
mov
sbb
sub
inc
fists
mov
mov
daa
dec
popf
lret
add
xchg
dec
bound
es
ljmp
adc
sub
mov
aad
mov
adc
jle
sub
mov
pushf
cli
sti
cmpsb
adc
subl
shll
xchg
or
aam
mov
je
rcll
push
daa
pop
popf
mov
mov
jnp
inc
and
xstore-rng
cmpsl
ret
out
mov
std
shl
clc
aam
ret
cltd
push
xor
test
cmc
jbe
test
and
loope
or
dec
mov
test
adc
arpl
stos
ds
pop
test
cmp
mov
clc
sti
pop
pop
iret
ret
lea
mov
mov
andb
movsl
rcrl
movsl
mov
ret
jle
aad
dec
sbb
outsb
mov
sub
test
jmp
mov
ljmp
popf
les
jl
mov
lret
push
leave
or
jae
stos
xchg
stos
std
xor
rclb
stos
shl
adc
fld
pusha
jp
scas
jg
enter
jg
mov
jecxz
jo
sub
popl
mov
inc
xor
dec
aam
jno
mov
movsl
ret
enter
mov
sbb
cmovae
xchg
ds
loopne
je
clc
cmc
or
push
xor
push
and
das
lods
fisubrs
or
in
aad
xor
pop
push
rclb
imul
popf
mov
out
pop
in
imul
and
mov
repnz
negl
sbb
jecxz
sbb
push
jmp
lds
jns
test
cli
movsb
leave
test
lea
test
shl
cmpsl
xchg
fcoms
sbb
cmp
mov
add
or
or
push
outsb
icebp
mov
mov
pop
jmp
jl
cltd
loope
inc
mov
scas
loop
mov
ss
fdiv
sti
ret
xchg
rol
push
mov
inc
aam
clc
or
sub
addr16
xchg
dec
xchg
and
data16
push
sub
pop
test
gs
imul
push
fiaddl
sbb
gs
mov
mov
cmp
xchg
enter
hlt
pop
cmp
dec
cmpb
test
dec
mov
test
rol
pop
arpl
sbb
lcall
jae
jle
cmc
ds
and
xor
add
pushf
sbb
cltd
insb
pop
shl
rcrb
mov
jbe
push
pop
mov
push
pop
jmp
cmpsb
leave
dec
dec
sbb
inc
mov
push
stc
mov
cld
sub
loopne
loopne
xchg
test
sbb
inc
sbb
inc
or
cmp
std
xor
popa
pop
jns
jecxz
mov
aad
roll
orl
add
xlat
push
jnp
adc
mov
sarb
out
es
lock
or
lret
aam
mov
test
push
movsl
lods
sbbl
daa
push
test
fsubrs
pop
jmp
sbb
jne
sbb
ret
aad
cli
and
mov
sbb
add
mov
jmp
mov
imul
sahf
dec
mov
icebp
das
int3
lcall
mov
lods
sti
filds
test
ret
fiadds
mov
pop
and
test
inc
or
add
insb
push
pushf
mov
outsb
inc
mov
icebp
cmp
xlat
stos
test
cmp
fldcw
push
lret
pop
mov
xchg
lret
add
lds
mov
ja
inc
scas
jne
dec
xchg
in
mov
cmc
lcall
mov
adc
cmpsl
fucomi
xchg
pop
scas
movl
and
or
sbb
stos
lock
adc
cmpsl
test
xchg
and
or
add
adc
add
insl
push
dec
test
lods
repz
enter
jg
fs
das
xor
jecxz
leave
sbb
and
mov
dec
mov
lock
cmp
mov
arpl
int3
bound
lods
imul
mov
xchg
sub
pop
cmp
ret
ficoms
jnp
mov
add
mov
aam
aas
das
and
mov
sbb
rorl
fldenv
inc
mov
jge
shll
push
sbb
add
pop
mov
daa
sbb
mov
addb
int3
clc
into
cmp
jne
push
andl
shr
sbb
jmp
xchg
pop
scas
inc
xlat
sti
ret
and
andl
mov
iret
xchg
mov
inc
repz
push
cs
xchg
and
rol
fistpl
pop
test
jae
lock
subb
fsubs
pop
fidivrs
jb
rcll
add
push
mov
mov
insb
push
push
jp
dec
mov
fcomps
in
cmc
hlt
jnp
xor
mov
int
pop
movsl
inc
lock
mov
clc
sti
mov
jecxz
pop
nop
jo
mov
inc
ret
sbb
add
rorb
fwait
inc
mov
dec
cmp
stos
enter
inc
and
mov
leave
test
mov
xor
jp
mov
jno
inc
push
or
pop
mov
das
sbb
frstor
pop
outsl
shlb
mov
dec
push
sbb
mov
jno
aad
jg
into
fcmovne
pop
test
int3
mov
icebp
or
dec
push
cwtl
clc
sbb
insb
clc
jp
push
subl
adc
push
sarb
call
xor
jmp
inc
fucom
stos
cmp
dec
mov
sti
xor
stc
jb
add
mov
hlt
push
mov
push
dec
lret
cltd
mov
push
mov
into
pop
mov
xor
mov
fistl
xor
cmp
rcrl
iret
fwait
clc
in
jno
imulb
jo
imul
mov
xchg
int3
cwtl
lret
inc
sbb
test
lahf
add
les
fsubrs
jmp
stos
fucomp
je
movsl
lods
cmp
pop
insb
test
ret
or
push
scas
push
add
rorl
adc
xchg
sbb
lods
fmuls
cmp
jo
and
cmp
in
pop
loope
dec
add
ret
andl
fsubrl
sbb
inc
mov
adc
mov
inc
jecxz
cltd
jp
or
xchg
adc
or
pop
push
and
xabort
pop
fisubs
add
mov
je
mov
pushf
rcll
ror
inc
sbb
cs
sub
jns
out
mov
les
dec
pop
aad
jmp
sbb
ffreep
imul
rcr
ja
inc
mov
adc
ret
pop
add
ljmp
xchg
and
mov
sbb
ret
outsb
xor
mov
incl
mov
fisttps
inc
sbb
movl
cmpsl
icebp
add
inc
fdivl
dec
and
pop
inc
sbb
xchg
add
xchg
jl
rorl
stos
ficompl
mov
lret
xchg
jge
mov
add
dec
pop
add
sbbl
xchg
cmp
repnz
add
es
cmp
add
mov
rorb
jb
shll
scas
add
mov
xlat
stos
xor
mov
cmp
mov
mov
cld
sub
enter
or
sbb
and
cmp
adc
jno
mov
and
xor
pop
das
push
mov
loope
mov
jns
cmp
in
mov
pop
mov
dec
sbb
test
cli
imul
in
jecxz
shlb
jno
les
mov
xor
gs
sub
push
pop
dec
push
push
or
fcoms
cld
lds
inc
sbb
fsts
mov
in
jge
sub
xchg
sbb
dec
push
inc
outsb
fcoml
fistl
and
dec
mov
jno
push
repz
pop
push
inc
repz
aam
into
inc
js
add
mov
dec
sbb
add
out
dec
push
repnz
xrelease
cli
pop
fcoms
fcmovnbe
xchg
cltd
out
divl
fnsave
xchg
push
mov
les
loop
hlt
xchg
mov
cltd
sahf
jg
shr
mov
cmc
hlt
imul
dec
mov
lret
arpl
mov
cmpsl
ret
loopne
pop
pop
dec
pop
dec
adc
add
aam
or
mov
add
mov
aas
cli
add
rorl
fldl
push
xchg
jecxz
mov
clc
mov
lret
xor
xor
dec
sbb
push
divl
stc
inc
sbb
je
mov
sub
cld
jo
xchg
sar
stos
lds
ret
cli
movsl
mov
movsb
push
sub
jne
adc
sub
cld
or
popf
scas
cmp
sbbl
cmp
or
fstpl
sub
push
mov
add
and
addr16
pop
push
mov
lahf
jne
jnp
jnp
stc
sbb
prefetch
or
dec
mov
xor
das
xchg
enter
aam
mov
adc
leave
pop
jp
mov
mov
mov
ficoms
sahf
sub
xchg
sbb
test
fwait
sbb
notl
cmpsb
pop
pop
addb
lea
sbb
add
add
push
andb
dec
hlt
sub
jbe
and
iret
cmp
sbbl
shll
aad
test
lcall
mov
jp
stc
mov
cld
push
sub
add
sub
fwait
rclb
pop
mov
in
dec
outsb
rcl
fcmovnu
xchg
sbb
sar
sbb
rcrl
push
jle
mov
repz
rclb
add
dec
mov
rcr
cmp
gs
push
les
jbe
scas
xor
test
insl
in
mov
pop
fdivrl
dec
xchg
jl
or
enter
loop
cld
pop
sub
add
jb
out
adc
or
movsb
jge
dec
mov
andl
mov
or
add
cmpl
pop
and
pop
insb
mov
loop
enter
mov
mov
cltd
mov
and
push
sub
pop
cmp
mov
mov
pop
push
clc
mov
mov
push
sub
popa
fs
fbstp
ret
sbb
lock
or
out
push
sbb
or
in
jge
stos
sahf
pop
stos
cmc
xchg
mov
sbb
xchg
jbe
cs
jnp
aad
mov
out
lock
push
js
ljmp
inc
pop
adc
cwtl
inc
xchg
or
xchg
pop
popf
imul
mov
aad
mov
pop
cltd
add
fwait
ret
pop
cmp
bound
and
ret
inc
add
subl
or
outsb
imul
fimuls
scas
test
stos
roll
rcrl
mov
and
loope
mov
loop
lock
jns
hlt
inc
add
inc
adc
pushf
pop
xchg
adc
xchg
and
adc
inc
test
push
push
js
test
pop
sbb
xor
stos
mov
fldl
dec
push
cld
mov
sbb
dec
mov
push
js
pop
sub
ficoml
das
sbb
fisubl
inc
add
mov
mov
fdivp
shrb
pop
mov
xor
insl
fcmovnb
push
call
or
jo
jecxz
aas
pop
sub
andl
rol
pop
mov
dec
xchg
and
insb
and
add
xchg
stc
xchg
and
cmp
outsb
and
std
bound
loop
mov
or
inc
push
xchg
dec
mov
cwtl
mov
mov
cmc
mov
rol
idivl
call
jne
punpckhwd
xchg
jge
ffreep
pop
lock
hlt
mov
fildl
addb
sub
aam
or
mov
mov
inc
mov
inc
cmpsb
dec
sbb
outsb
test
fsubrs
push
in
xchg
pop
mov
mov
mov
dec
mov
push
add
push
sbb
shll
inc
sbb
or
movaps
lret
pop
mov
pushl
iret
mov
jno
lds
xchg
out
ds
loop
outsb
mov
add
inc
sub
mov
stos
push
sbb
add
fwait
pop
cmpsl
addr16
xchg
xlat
xchg
mov
fwait
insl
cmovae
int
xchg
shlb
cltd
je
or
int3
xchg
dec
daa
fwait
jns
fisubrs
cs
cmc
fsubrl
xchg
repz
mov
sbb
shll
mov
inc
loope
out
mov
lods
mov
loop
pusha
lret
jecxz
mov
adc
sbb
testb
movsl
jg
push
test
cwtl
lret
inc
sbb
rolb
xlat
stos
les
sbb
lret
sub
cmpl
jb
lods
xchg
test
inc
nop
jae
dec
stos
or
adc
adc
fcomi
mov
pop
movsl
pop
xorb
ficoms
pop
out
pusha
mov
jmp
fists
jl
addr16
js,pt
inc
adc
or
sub
push
mov
inc
xchg
jmp
mov
enter
testb
ret
fsubs
mov
cs
int3
pop
or
mov
dec
mov
mov
popf
out
sub
lds
adc
jbe
mov
popa
mov
jle
pop
movsl
dec
call
fwait
sub
clc
sti
fldl
jnp
mov
mov
sarb
lret
inc
mov
adc
sub
fs
jb
push
mov
inc
fists
lods
sahf
popf
xlat
lods
lahf
scas
mov
mov
je
lods
jae
aam
jl
roll
jge
scas
xchg
ficoml
lcall
pop
aas
adc
dec
pop
pushf
ret
stc
mov
xor
imul
repz
or
xor
call
arpl
popl
leave
test
test
sub
rorl
xchg
imul
inc
xchg
push
insl
fwait
push
fistpl
cmp
call
jnp
pop
add
cs
lahf
push
adc
insl
fcmove
jmp
xchg
imul
lods
idiv
sub
imul
inc
jmp
clc
cmp
sbb
rcrb
mov
push
sarb
cmp
lret
stc
and
stc
pop
sbb
push
push
clc
xor
call
jecxz
mov
mov
insl
mov
xchg
push
nop
fnstsw
xchg
dec
mov
fcompl
cmp
inc
lcall
movb
push
push
fmull
jmp
cmpsb
enter
in
or
popf
scas
push
sub
cmp
add
or
addr16
test
or
les
xchg
and
test
sub
aam
ds
enter
fldl2t
inc
fnstsw
sbb
in
jb
pop
fdivrl
sti
repz
sub
in
add
sahf
or
jne
dec
rcrl
mov
shl
mov
pop
loopne
lret
jo
jnp
sub
mov
pop
lock
and
lock
push
lods
jo
or
add
lea
sbb
adc
scas
nop
sub
lret
movsl
ret
popf
faddl
mov
dec
sub
mov
inc
lahf
push
sub
lods
lahf
popf
rep
lahf
test
repz
je
lods
jae
aam
cmp
rorl
daa
es
mov
mov
push
fadd
sti
mov
imul
lds
xchg
test
repz
loop
inc
shlb
or
mov
movsl
cli
dec
aam
cmpsl
xchg
cs
push
mov
daa
movsb
pushf
mov
jl
mov
push
pop
scas
arpl
call
jo
push
jne
mov
add
cs
sub
mov
into
jmp
jbe
fsubs
fadd
fldlg2
shll
mov
ret
loopne
in
mov
jb
cmp
jae
jecxz
pushf
mov
bound
shr
cmc
cld
imul
lahf
ljmp
dec
xor
mov
mov
lds
jp
leave
test
fnstsw
mov
lods
xchg
cmpsl
xchg
int3
xchg
pushf
pop
sbb
mov
and
lds
imul
xchg
int3
dec
test
sbb
jecxz
fstl
mov
lahf
scas
cli
int3
js
mov
dec
sub
loop
add
rclb
fildl
inc
inc
sbb
rorb
xor
sbb
pop
inc
cwtl
dec
xor
inc
add
mov
sub
and
insl
lahf
out
out
add
fnsave
add
enter
xchg
enter
hlt
mov
xchg
sub
adc
and
sbb
gs
ss
popf
jbe
mov
mov
ss
loopne
pop
push
dec
or
mov
lret
jecxz
mov
or
add
lea
sbb
test
test
push
aad
cmp
sbb
adc
test
push
cli
sub
mov
and
arpl
jae
push
mov
rcrl
dec
mov
addr16
lock
out
push
sbb
stos
mov
stos
xchg
fistl
fisubl
in
fwait
lods
divb
lret
mov
std
or
sbb
iret
js
jle
scas
je
push
cmc
loope
add
mov
andl
fnstcw
xor
or
mov
inc
xchg
inc
mov
and
cmpsb
fsubrs
pop
fidivrl
jnp
cmp
fwait
jns
sti
mov
scas
mov
pop
mov
add
in
sub
loop
out
mov
cltd
sahf
cmpsl
and
sahf
dec
mov
into
add
ret
arpl
mov
addr16
mov
lret
in
icebp
pop
xchg
sahf
repz
cmpsb
rcrb
cmpsb
sub
cmpb
sbb
arpl
adc
ret
insb
cmp
cmp
pop
cli
push
imul
imul
pushf
adc
ljmp
popf
lret
outsl
mov
pop
fbstp
les
das
xor
jo
movsl
adc
fstpl
mov
clc
jmp
test
sub
xchg
fists
repz
mov
mov
nop
dec
test
add
aaa
rclb
roll
mov
fwait
cmpsb
addr16
fdivr
push
fisubl
and
call
cmpsb
inc
cltd
fs
mov
enter
rcrb
or
push
dec
sub
loopne
cmc
mov
mov
lods
ds
movsl
mull
int
lcall
ja
lret
aas
jno
xchg
jl
lahf
in
clc
pop
pop
jge
shr
aas
mov
shr
sbb
add
insl
movsl
ret
inc
mov
sarl
fst
dec
lahf
mov
push
and
test
movsb
fldcw
push
sub
fcmovnu
jmp
cmp
pop
adc
mov
jo
xchg
adc
jl
roll
dec
scas
dec
fwait
lods
jle
mov
hlt
pop
pop
out
pusha
mov
leave
ds
jae
insb
inc
fwait
out
js
and
mov
out
sub
lahf
mov
dec
mov
in
dec
sarb
push
xchg
imul
sub
cmpsl
movsl
and
xchg
pop
sbb
bound
and
mov
enter
rolb
dec
das
lcall
jmp
lret
arpl
into
add
ret
fistl
mov
cmpsl
push
pop
jmp
clc
outsb
out
cmpsb
divl
es
and
mov
pop
nop
out
test
xchg
inc
sbb
rcrb
xchg
xchg
pop
in
and
js
xchg
dec
outsl
mov
cmp
mov
std
mov
outsl
repz
mov
or
jge
dec
movsl
sbb
ficomps
mov
sar
cmpsl
push
imul
aad
mov
scas
xchg
outsb
mov
out
js
xchg
mov
dec
mov
adc
rolb
adc
and
xor
movsl
ret
inc
xchg
fwait
mov
lahf
bound
jmp
jne
jecxz
jmp
inc
inc
orl
test
aad
xchg
mov
dec
push
adc
pop
add
aas
xchg
cld
into
pop
test
ss
sub
pop
mov
in
mov
out
sti
mov
jns
hlt
roll
imul
stos
jno
dec
and
xchg
and
xchg
xlat
stos
mov
mov
xor
shl
mov
jp
mov
arpl
aas
jl
or
rsm
or
inc
jmp
xchg
stos
and
or
iret
fdivp
shrb
lret
lea
aad
out
scas
xlat
bound
adc
out
js
shlb
sbb
arpl
rolb
out
rclb
dec
mov
or
inc
inc
mov
pop
cmpsb
enter
and
jne
outsl
mov
test
pusha
mov
incb
inc
mov
or
fisubrs
push
mov
mov
popf
repz
ss
mov
loopne
pop
push
inc
mov
jecxz
ds
mov
lock
pop
push
jo
fsts
inc
inc
sbb
inc
sub
iret
cmpsl
leave
out
pop
and
push
lds
mov
sbb
outsb
mov
fsubrs
push
and
incl
xor
xchg
xchg
arpl
pop
pop
cmp
mov
xchg
inc
scas
cmc
add
pop
sub
dec
sbb
imul
xchg
iret
cmpsl
mov
lods
xor
mov
icebp
sbb
out
faddl
aaa
mov
inc
shlb
push
popl
mov
dec
sub
fwait
xor
jno
cwtl
mov
lahf
insl
cmovae
xlat
inc
cmp
dec
xor
loopne
je
jnp
or
adc
push
dec
stos
dec
dec
mov
loopne
inc
nop
push
dec
imul
mov
lods
movhps
cmp
mov
ret
sahf
mov
enter
sbbb
mov
sbb
adc
cmpsl
mov
or
clc
movl
loop
repnz
test
cli
mov
sub
xchg
js
jae
jge,pn
lahf
fldl
idivl
fs
sub
rsm
or
inc
jmp
xchg
stos
and
inc
mov
mov
pushf
icebp
shrb
int3
lods
decb
pop
out
pusha
mov
fsub
icebp
jnp
insb
inc
fwait
push
rorb
or
inc
sbb
popa
rcr
das
rorl
mov
or
add
mov
inc
and
pop
cltd
jno
test
stos
in
mov
fucompp
mov
int3
xchg
dec
daa
fwait
jns
fisubrs
daa
jmp
mov
cwtl
repz
adc
pusha
stc
stc
int
pop
movsl
popa
hlt
setg
lret
loopne
icebp
pop
pop
iret
push
subb
jg
out
push
lock
pop
sub
cwtl
cmp
adc
ret
pop
cmp
cmpsb
xchg
adc
mov
inc
std
or
inc
sub
or
ljmp
popf
test
pop
jmp
dec
mov
add
push
scas
xchg
ficoml
lahf
pop
sbb
ja
lret
inc
mov
rclb
pop
fstl
pop
cmpsl
rcl
mov
scas
cli
int3
push
dec
sub
loop
add
rclb
mov
mov
add
inc
inc
pop
adc
fsubs
dec
mov
adc
test
sub
cmp
mov
inc
pop
jecxz
or
out
fwait
mov
lea
xor
mov
scas
add
dec
repz
push
dec
and
push
out
mov
mov
test
fsubr
mov
lods
mov
mov
fucomi
repz
cmp
or
pop
push
jae
mov
jecxz
add
mov
dec
pop
aas
mov
cmp
sbb
jmp
sbb
dec
adc
fsubl
fsubrl
inc
mov
inc
test
mov
scas
xlat
aad
fnstenv
popf
lret
mov
cmp
ret
add
setnp
xchg
addr16
int3
insl
movsl
sbb
test
fwait
lods
adc
shrb
jnp
movb
jbe
lahf
rol
push
es
leave
cmc
and
adc
or
dec
sub
inc
mov
icebp
and
inc
cwtl
shrl
adc
jecxz
mov
inc
mov
xchg
lret
jb
and
enter
out
lcall
xchg
cmp
cmpsl
mov
shrl
in
rcll
shll
mov
add
sahf
ret
mov
pushf
mov
mov
xchg
setg
sbb
mov
and
push
xchg
leave
icebp
lock
sahf
ret
mov
cltd
mov
xchg
rcrl
xor
cwtl
dec
sub
mov
ss
add
sbb
outsl
jno
mov
sbb
dec
mov
mov
popf
lret
mov
sub
fsubrs
daa
lcall
dec
movsl
adc
arpl
cmp
inc
pop
cld
cmp
adc
dec
mov
mov
mov
popf
fists
push
mov
js
add
andl
or
sub
mov
daa
lods
addb
adc
popf
dec
sbb
adc
add
fisubs
mov
or
jne
sub
inc
enter
hlt
mov
dec
dec
stos
fwait
jns
fiadds
shlb
jbe
fimull
xorl
pop
mov
imul
mov
pop
mov
or
jnp
mov
cltd
sbbb
lock
enter
xlat
mov
aas
and
ljmp
test
mov
dec
mov
fists
cli
stos
lahf
cli
jle
inc
fldt
inc
mov
xchg
int3
jno
dec
and
lret
inc
cmp
es
movsb
fisubrl
or
sub
fistl
mov
lds
stos
mov
mov
jge
mov
add
pop
iret
out
js
loope
mov
inc
aam
es
and
popl
cwtl
adc
dec
and
cld
lock
sub
fidivrl
stos
lds
cmpsl
ret
xchg
fnstsw
fwait
outsl
push
or
out
ja
lahf
mov
jb
dec
leave
sbb
adc
imul
sahf
dec
mov
lcall
mov
loopne
pop
push
rolb
iret
pop
lret
fucomi
lock
add
imul
ret
repz
xchg
and
sbb
jns
or
test
dec
sbb
test
jne
fucomp
mov
fldt
je
mov
pusha
mov
adc
adc
mov
dec
mov
lds
outsb
outsb
fcomi
mov
pop
scas
and
int3
lods
decb
test
in
lahf
repz
popa
jno
mov
dec
in
enter
or
rcr
fs
add
call
adc
mov
pop
pop
cmpsb
inc
xchg
xchg
cmpsl
jnp
imul
mov
pop
fldz
inc
test
mov
jb
add
cmp
xchg
xchg
inc
stos
mov
int
inc
sub
xlat
sub
sahf
dec
add
xor
mov
repz
imul
outsl
jmp
jae
mov
jecxz
inc
lock
jo
or
add
pop
loop
leave
es
push
push
aad
inc
sbb
mov
imull
in
test
repz
mov
pusha
cmc
mov
mov
popf
lret
lret
jno
inc
xchg
imul
mov
or
pop
mov
movsl
or
arpl
inc
mov
xlat
enter
push
jbe
mov
imul
pop
inc
call
popf
scas
push
jmp
xchg
lret
call
jle
inc
sbb
mov
dec
xchg
mov
pop
andl
aad
push
xchg
and
es
jae
and
lods
insl
xchg
enter
stc
out
xlat
pop
repnz
loop
je
jnp
fsubl
adc
inc
dec
stos
inc
mov
lret
dec
adc
loopne,pn
push
mov
dec
xchg
jmp
call
scas
mov
xor
int
dec
lock
hlt
jb
es
add
mov
lock
adc
andb
insb
dec
xchg
stos
iret
in
mov
mov
stos
mov
int3
data16
lods
mov
mov
je
std
push
test
ret
or
addb
mov
popf
insl
mov
lret
mov
adc
imul
scas
push
xchg
sbb
and
out
dec
sbb
push
jo
shlb
pop
sti
arpl
dec
inc
cmp
rolb
stos
mov
push
ljmp
inc
nop
scas
cmp
xchg
mov
mov
pop
fidivrl
icebp
test
daa
dec
aad
sti
mov
cmp
mov
enter
outsb
imul
mov
scas
ds
fistpl
rol
loopne
pop
inc
iret
fucomip
in
lcall
iret
ret
fdivp
jnp
cmpsb
mov
addb
xor
push
adc
lret
lds
stos
mov
adc
nop
aaa
adc
inc
loopne
dec
sbb
inc
mov
aad
pop
popf
shrl
ljmp
push
mov
fsts
pop
out
mov
dec
jg
mov
inc
sub
xchg
fcmovbe
mov
out
push
lods
movb
ret
mov
inc
sbb
scas
enter
icebp
repz
inc
fwait
data16
and
xchg
outsb
inc
xor
jb
adc
roll
dec
sbb
jmp
movsb
dec
mov
mov
sbb
xor
rep
or
aad
or
out
enter
mov
pushl
inc
push
mov
fsubr
push
adc
pop
push
sti
cmc
fidivs
ljmp
adc
pop
idivl
bound
mov
jecxz
inc
add
pop
sub
inc
pop
adc
insl
xchg
ret
xor
cwtl
and
xor
cs
outsb
xchg
and
js
cltd
dec
outsl
mov
inc
mov
je
popf
int3
cmpsb
dec
cmpsl
xchg
test
add
or
adc
and
mov
mov
loop
jecxz
mov
inc
sbb
scas
jg
leave
in
mov
cltd
loopne
and
xchg
or
mov
push
in
out
ds
push
xchg
inc
cwtl
dec
and
shll
cmpsl
mov
xchg
dec
outsb
and
loop
cs
xlat
xchg
lret
push
adc
cli
fsubp
mov
out
inc
ds
dec
inc
mov
push
jnp
mov
add
mov
scas
ds
arpl
jo
dec
dec
out
loopne
pop
pop
dec
or
out
sti
mov
dec
clc
add
daa
test
movl
xchg
iret
cmpsl
push
loope
int3
addr16
lock
shll
stos
mov
adc
mov
inc
mov
nop
arpl
jae
pop
push
dec
dec
popf
lret
mov
or
nop
jmp
sub
cmp
mov
mov
lock
pop
xor
mov
push
lret
mov
adc
stc
mov
xchg
js
mov
andl
adcb
cmpl
and
push
les
cltd
mov
testl
mov
ficompl
leave
bound
cmp
dec
xor
loopne
je
jnp
or
adc
push
dec
stos
dec
inc
cwtl
mov
and
push
dec
mov
scas
pop
stos
je
ss
mov
testb
div
enter
lahf
rcrb
mov
push
and
mov
jg
push
push
cwtl
lret
inc
sbb
shrb
xlat
stos
iret
in
lahf
inc
into
push
leave
mov
stos
mov
int3
jo
shrb
je
std
push
test
ret
add
push
addb
sub
fdiv
movsl
fisubrl
jl
fnstenv
outsl
pop
xchg
xor
pop
cmp
cmpsl
sbb
jmp
scas
inc
fwait
push
rolb
cmp
es
or
xor
jl
sub
mov
cmpsl
cltd
xor
cmpsb
shrl
push
fidivrl
cld
cmpsl
mov
ret
xor
loope
push
ret
add
scas
mov
pop
sub
mov
xchg
test
jle
xor
dec
mov
sbb
test
push
jo
cmp
into
sbb
out
jno
or
cmp
data16
add
das
jbe
add
jo
fwait
lock
ss
xor
dec
cwtl
inc
or
cmp
lret
stc
adcl
stos
inc
in
xlat
dec
test
inc
mov
push
add
mov
sbb
rcr
popa
xlat
icebp
add
push
sbb
lret
push
rcrl
dec
scas
dec
sarl
lcall
xor
fistl
icebp
shrb
les
mov
jge
int3
imul
stc
lret
inc
fwait
out
js
xchg
mov
dec
mov
adc
rolb
adc
and
repnz
xchg
leave
jmp
mov
push
pop
cmpsb
shrb
pop
fisubs
sub
outsl
lds
enter
xor
es
sub
or
mov
pop
stos
cwtl
js
sahf
dec
mov
jbe
mov
push
test
jp
imul
ficompl
scas
cmp
mov
divb
es
sbb
pop
add
rcrl
xchg
pop
cmp
sbb
and
add
mov
in
fisttpl
subb
cmp
in
inc
add
xchg
test
movsb
data16
scas
xchg
xor
or
pop
pop
adc
pop
test
movsl
movb
jmp
lcall
jle
sub
int
xor
add
add
ljmp
add
mov
push
addr16
les
cwtl
popf
lret
aam
sbb
test
xor
sarl
jne
rorl
inc
cltd
xor
dec
mov
call
es
hlt
je
xchg
dec
mov
mov
push
inc
mov
imul
call
les
lcall
fwait
lahf
hlt
repnz
lock
jecxz
es
add
add
mov
dec
mov
add
test
hlt
mov
rcr
pop
cwtl
lret
cmpsl
mov
pushf
inc
flds
stos
push
and
test
inc
mov
fucomp
fs
fisttps
lret
rcr
cmp
pop
or
lds
jl
or
mov
fstps
push
inc
lcall
jle
mov
cmp
pop
mov
fiadds
out
jns
enter
cltd
cmc
xor
cmpsl
xlat
adc
adc
inc
sbb
cwtl
or
mov
push
andl
aad
push
xchg
and
es
mov
lods
repnz
aaa
pop
cmp
call
push
ret
mov
decb
mov
hlt
xchg
pop
test
outsl
push
adc
sub
sbb
inc
jbe
xor
mov
arpl
int
pop
movsl
imul
jne
out
mov
jmp
mov
add
add
movsb
rcrl
addb
pop
mov
lods
xchg
sub
adc
mov
bnd
push
icebp
ror
jae
lret
fnstenv
mov
or
nop
jp
and
jne
add
leave
xchg
fistl
or
loopne
sub
xchg
sub
mov
pop
jo
sbb
cmc
xor
pop
sub
or
mov
add
inc
mov
fxch
cwtl
xor
inc
add
test
pop
pop
xchg
flds
push
fwait
outsl
push
ret
mov
mov
mov
sbb
or
cmp
xor
xchg
mov
aad
into
xor
sbb
loope
dec
int
mov
repz
mov
aad
jns
or
mov
movsl
sbbl
jae
addb
xchg
loop
enter
int
inc
mov
mov
xor
aad
lcall
mov
fsts
sbb
repnz
mov
pop
jp
jl
popa
scas
aad
lret
shrb
cmpsl
jae
cwtl
daa
sbb
ret
scas
std
cld
pop
movsl
or
pop
pop
rorl
xchg
jbe
sub
pushf
shr
fwait
xchg
test
leave
or
mov
shlb
andl
pop
inc
cmp
mov
push
mov
mov
and
test
push
lahf
and
pop
inc
jge
jmp
roll
out
cmpsl
ret
flds
mov
mov
xor
fmuls
inc
xor
mov
mov
adc
add
dec
cltd
push
or
xlat
adc
mov
dec
loopne
in
mov
movsl
sti
pop
mov
xchg
fisubrs
jae
mov
imul
test
jge
lock
xlat
insl
sbb
int
adc
iret
mov
pop
xor
mulb
flds
cli
and
ja
mov
dec
jp
shrb
je
arpl
mov
inc
pusha
dec
ljmp
sahf
sbb
adc
xor
mov
shrb
mov
jg
cmp
xor
fdivrl
stc
cmpsb
test
adc
push
mov
clc
xor
adc
jns
pop
and
stc
bnd
push
xchg
imul
mov
inc
fnsave
xchg
pop
test
xlat
push
flds
mov
popf
ljmp
sub
adc
adcb
cmc
hlt
clc
add
xor
and
lea
ss
sbbl
jno
xchg
jnp
sahf
rol
or
js
repnz
jo
push
adc
lret
cmpb
mov
mov
inc
ficompl
inc
in
push
xor
sbb
sub
mov
pusha
in
mov
imul
cmp
ret
mov
xchg
or
jo
movsl
sbb
pop
jnp
adc
shrb
test
xchg
cld
pop
mov
push
dec
or
push
jb
sub
adcb
or
inc
test
and
int3
or
clc
add
xchg
and
and
mov
inc
pop
popf
std
push
les
sti
mov
jne
popf
shll
inc
inc
mov
int3
sub
daa
push
push
jnp
popf
in
push
adc
icebp
pop
cmc
dec
inc
lods
les
inc
imul
out
sbb
jae
orl
out
inc
sbb
add
sub
nop
cli
sbb
add
leave
fcomp
push
fnsave
pop
lret
nop
lds
leave
inc
push
cld
mov
or
aad
lret
fucomp
fs
mov
fisttps
pop
inc
invd
movsb
les
inc
scas
in
pop
movsl
sbb
pop
dec
fistl
mov
dec
test
lods
cmp
lods
ret
jge
pop
in
ret
mov
js
rclb
push
mov
clc
xor
adc
add
xchg
gs
fidivrs
jo
xchg
and
fwait
movsl
jb
cmpsb
call
jnp
fsubs
in
cmpsl
sti
xor
jne
fwait
shl
popl
push
mov
es
imul
dec
fisubs
aam
gs
shl
int
cmp
int
mov
jle
loopne
std
inc
fwait
pop
jmp
clc
sti
inc
aad
cmc
jmp
movsl
mov
aas
add
gs
or
das
push
into
jp
aad
inc
sbb
rorl
dec
inc
addl
lahf
pop
sub
xchg
mov
xchg
in
mov
enter
mov
test
imul
fistpl
mov
mov
jno
aam
jnp
xor
sbb
mov
fdivrl
repz
nop
xchg
aas
mov
xchg
mov
adcl
dec
sarb
mov
adc
xchg
and
test
mov
cltd
jle
inc
pop
int3
ret
fsubl
dec
mov
cwtl
stc
or
mov
xchg
loope
adc
iret
mov
sbb
sub
cmp
sbb
test
jb
int
jg
arpl
cmp
ja,pt
sbb
jmp
cmc
sub
mov
into
add
test
inc
sbb
xchg
test
ret
test
ret
sbb
dec
out
sub
inc
clc
rcrl
test
cld
sub
cmp
dec
stc
or
mov
inc
pop
data16
and
fcmovnu
loop
sub
outsb
shrb
inc
ss
pop
cmpsl
sub
test
test
xchg
loop
sbb
out
jl
sarb
inc
test
popl
adc
inc
rolb
out
rol
cmp
add
mov
mov
xor
insl
or
xor
enter
leave
repnz
sub
or
in
jne
mov
mov
call
mov
repz
mov
xchg
sbbl
xchg
imul
jns
sub
pop
in
clc
add
mov
test
bound
sbb
lret
inc
mov
adc
ret
sbb
insb
mov
hlt
test
and
test
fstps
mov
xlat
xor
mov
pop
inc
pop
test
roll
fsts
pop
daa
push
je
mov
mov
movsl
or
add
movsb
lds
pushf
and
inc
fstps
jmp
popf
fsubp
mov
int3
mov
cmp
add
jecxz
mov
cmp
rcl
pop
test
xchg
fsubs
cmp
mov
gs
inc
lods
inc
or
jne
insl
out
rolb
xchg
pop
cmp
mov
fnstcw
xchg
xor
in
hlt
xor
nop
test
mov
lret
sbb
insl
add
xor
mov
mov
inc
sahf
or
mov
pop
add
stc
iret
sbb
in
clc
inc
adc
popf
cmp
xchg
jbe
adc
testb
dec
push
mov
or
push
jge
sahf
lods
fildll
jae
fisttpl
lret
rorl
nop
ffree
sbb
das
sbb
jo
pop
pop
outsb
les
sbb
mov
lea
jecxz
pushf
ficoms
cmp
push
pushl
pop
mov
jmp
or
and
cwtl
call
mov
and
add
pop
ret
fwait
xor
clc
and
and
mov
cmpsl
jnp
enter
jo
repnz
mov
push
push
mov
fwait
jns
popf
inc
mov
sahf
jp
shl
inc
sbb
dec
mov
jbe
mov
movsl
mov
mov
inc
imul
jmp
lds
ds
hlt
mov
inc
sbb
add
inc
clc
enter
int
lds
adc
subl
xor
jge
test
cld
test
mov
xchg
movsb
jmp
cltd
fucomp
je
fst
ljmp
jae
aam
cmp
ret
add
dec
xchg
or
lock
xor
lock
add
pop
cld
or
rcrb
jb
inc
pusha
ficoms
mov
out
js
mov
dec
sti
popa
mov
ja
gs
iret
cmp
jo
enter
pop
loop
test
sub
and
sub
pop
outsl
lds
enter
or
mov
xchg
test
pop
stos
push
inc
mov
pop
ret
pop
sarl
lret
popa
mov
pop
sbb
mov
jns
aas
sub
inc
jnp
mov
mov
inc
call
sbb
gs
sbbb
cmp
sbb
dec
notb
jns
push
test
lcall
jae
fisubl
mov
rcll
or
les
call
push
xchg
pop
lcall
sbb
fstps
xchg
fcoml
ja
das
mov
aad
int
out
xchg
ljmp
fdivr
sti
mov
jge
andl
test
xchg
cwtl
inc
mov
stc
repnz
jp
mov
shlb
movsb
inc
add
or
fwait
stc
outsl
push
xchg
xchg
ds
fsubl
or
hlt
cwtl
test
push
or
mov
jnp
fsubr
push
adc
ret
adc
test
outsl
jmp
ret
loopne
pop
adc
xlat
hlt
pop
sti
mov
jecxz
inc
push
sbb
pop
sub
mov
ja
sbb
or
mov
mov
and
mov
pop
cmp
jno
test
test
movsb
push
clc
sub
or
sti
mov
pop
stc
mov
mov
je
fyl2x
mov
test
inc
pop
mov
rolb
into
inc
lcall
pop
xchg
jb
mov
mov
aad
rcll
fwait
push
repz
fmull
jnp
loope
popl
xchg
xchg
jmp
test
dec
aaa
mov
dec
je
pop
stc
mov
and
inc
add
in
aas
data16
in
add
xlat
fld
loope
and
mov
lea
push
push
dec
mov
push
dec
sub
mov
popa
gs
ss
les
inc
fcmovnu
cmp
test
in
std
dec
ds
lahf
lret
jecxz
add
mov
dec
or
inc
inc
sbb
push
movlps
inc
sbb
arpl
lahf
lret
movsl
mov
mov
sbbl
test
inc
in
xlat
dec
lods
or
fbstp
xor
scas
mov
mov
mov
xchg
xor
or
pop
mov
mov
mov
sbb
fistl
cltd
lds
cmpsl
or
bound
scas
jg
leave
jge
aas
popf
scas
inc
pushf
repnz
and
push
mov
inc
aam
fcoms
or
and
es
xor
repz
pop
cmpsb
fsubrs
fidivrl
pop
push
xabort
pop
fidivrs
gs
daa
enter
test
ud2
addl
xchg
imul
fimuls
shl
pop
adc
call
pop
movsl
popa
in
ljmp
je
pop
inc
xchg
insb
jmp
sbbl
sbb
aad
adc
faddl
push
icebp
mov
mov
and
test
stos
test
fucomp
jae
jbe
pop
lret
rcrl
nop
sbb
or
cmp
test
stos
iret
push
pop
mov
push
cld
lret
fstl
jnp
pop
pushf
jnp
ficoms
jg
sub
icebp
mov
sub
or
inc
add
sbb
leave
inc
mov
fwait
jg
xchg
xchg
mov
mov
mov
jecxz
or
insl
in
or
mov
mov
pop
inc
jecxz
and
and
in
aam
aaa
es
hlt
mov
vmovaps
cmp
cmpsl
cmp
xchg
pop
adc
mov
inc
ficomps
fidivrs
or
repz
stc
divl
push
in
push
idiv
add
mov
sbb
pop
fimull
imul
xor
mov
xor
out
inc
sub
lods
jecxz
sub
lret
fucom
mov
lock
aaa
mov
insl
mov
xchg
aam
push
sbb
lret
push
adc
shrb
mov
lock
hlt
pushf
fsts
xlat
pop
pushf
xchg
jge
dec
cwtl
xor
mov
jno
fsub
out
lahf
scas
mov
fists
sbb
loop
xchg
js
or
inc
inc
cmp
xchg
aam
inc
mov
pop
xor
or
xchg
imul
cltd
in
lods
inc
test
push
xor
jb
inc
lea
fmul
push
adc
lea
in
iret
repnz
test
ficoms
sbb
xchg
rorb
aam
cmp
and
enter
jle
sbb
in
or
rcll
fnsave
pop
fisubrl
pop
dec
cmpb
insl
cltd
enter
lret
nop
rcrb
fimull
repnz
pop
add
dec
ffree
jmp
lahf
mov
shlb
data16
fnstenv
inc
xchg
roll
cmpsl
fistl
fisubl
push
jae
mov
icebp
mov
cmp
pop
or
jmp
mov
xor
mov
loop
out
pop
and
mov
xor
inc
and
inc
sbb
clc
enter
or
push
rcll
xor
inc
roll
and
test
gs
jle
push
fld1
jb
cmp
cwtl
jbe
out
adc
mov
insb
aaa
es
hlt
xor
nop
cmp
adc
ds
inc
mov
sbb
cmp
test
les
jne
aam
sti
jg
ja
fneni(8087
test
pop
pop
pop
sahf
sbb
inc
sbb
pop
loop
out
rcrl
mov
sbb
les
lock
aad
mov
mov
jae
fimull
lret
pop
sub
mov
push
push
aaa
mov
arpl
prefetcht2
nop
cmp
enter
roll
cmpsl
fisubrl
outsl
or
sbb
shrl
pop
jno
sbb
push
jo
xor
fs
and
pop
sub
iret
and
inc
out
push
mov
adc
and
xor
aam
sbb
or
fwait
mov
or
mov
lea
and
cmpsl
rcrb
aas
xchg
sub
pop
pushf
and
pop
aad
outsl
mov
jmp
cmpsl
sub
mov
lcall
sub
pop
mov
arpl
add
ds
sti
jnp
test
in
fcom
inc
sub
inc
aas
adc
in
leave
faddl
mov
mov
xor
lods
leave
mov
and
test
movsb
fldcw
cli
fs
fisttpll
test
ljmp
inc
test
inc
pop
lcall
pop
mov
push
cmp
inc
lahf
jns
push
roll
cwtl
xchg
sbb
cli
neg
jmp
fists
fistl
rclb
aad
dec
cmp
add
cmp
fsubr
cmp
push
xchg
fcoml
mov
jne
in
lea
test
push
cmp
out
cmp
loop
jle
add
mov
int3
sub
movsb
lea
imul
repz
inc
mov
sbb
jp
pcmpeqw
dec
lahf
in
clc
add
es
dec
cmp
mov
mov
mov
faddl
lods
ret
fs
lret
inc
in
dec
push
add
jge
pop
mov
clc
aaa
repz
jo
movsl
jno
add
jl
arpl
jae
test
xchg
inc
lret
add
or
mov
sbb
push
pop
jbe
scas
push
inc
xor
scas
ret
hlt
js
jge
xchg
fadd
repz
mov
sub
orb
mov
fsubrs
fmull
dec
lods
push
lahf
mov
and
imul
inc
orl
sti
xor
daa
sti
adc
enter
cmp
addb
add
dec
dec
mov
sbb
loopne
cmc
mov
mov
in
fsts
add
ret
arpl
fldt
inc
loope
pop
mov
pop
add
pop
sahf
xlat
xor
repnz
push
lcall
inc
pop
adc
gs
ret
fs
or
jae
imulb
xchg
xlat
stos
mov
adc
test
dec
push
lret
dec
mov
popf
jmp
repz
mov
cmp
or
mov
push
sbb
nop
lcall
std
lock
sub
inc
mov
sahf
adc
inc
ljmp
gs
js
cmp
inc
mull
rolb
stos
mov
inc
jns
test
aas
outsb
cmpsb
xor
movsb
jp
sbb
popf
imul
mov
xchg
mov
or
sarb
xchg
cwtl
ds
cmp
mov
nop
shrl
out
jne
mov
dec
or
sub
fistps
dec
aad
cltd
repz
lahf
loope
mov
div
sti
mov
loope
mov
mov
mov
mov
adc
mov
pop
sub
popa
pushf
sbbl
pushf
adc
sub
test
movsb
push
cmp
lods
sbb
mov
ja
fs
movsl
iret
div
imul
je
fcomi
addl
ret
inc
pop
xchg
adc
cmp
cmp
stos
inc
lcall
cmp
mov
popf
ret
push
pop
leave
cltd
in
mov
mov
sti
and
test
subl
shll
orl
dec
aam
fidivrs
insl
fwait
popf
aad
jns
push
jne
sbb
mov
cmpsl
fldl
sbb
je
test
inc
pop
xchg
dec
dec
mov
aam
loopne
aad
pop
mov
icebp
pop
adc
push
mov
mov
pop
mov
lods
stc
fstl
jae
orb
insl
popf
sbb
add
cwtl
jmp
sbb
out
mov
push
pop
int
adc
in
std
fsubrl
rcrb
negb
outsl
push
dec
sub
jmp
lret
or
mov
mov
flds
les
pop
add
sub
adc
lds
sbb
push
add
addr16
mov
add
pusha
sbb
lds
loopne
sub
das
call
imul
jns
fwait
add
mov
mov
sub
call
fwait
xor
cwtl
inc
jns
sbb
loop
pop
mov
cmc
insl
pop
mov
pop
sbb
enter
pop
loopne
mov
jmp
jecxz,pn
inc
mov
sbb
insl
add
xor
mov
stos
jmp
test
mov
dec
inc
int3
hlt
sarb
push
ret
int3
pop
xor
sbb
test
lcall
ret
xor
imul
dec
inc
mov
les
sbb
sub
fisttpl
test
lahf
jae
seta
nop
mov
orl
cmpsl
cmc
jecxz
xchg
add
sub
xchg
jmp
mov
adc
push
fs
mov
jno
in
jg
xor
icebp
stc
cmc
and
cmp
xchg
xchg
mov
pop
and
sbb
add
sbb
aam
sahf
inc
ret
int
pop
pop
cmpsb
adc
fidivrs
jge
ja
sti
repz
adc
jle
inc
inc
test
shr
or
jns
aam
mov
sbb
cmpsl
pop
push
mov
sbb
int
in
mov
pop
pop
in
fcoml
test
mul
or
mov
pop
xchg
and
mov
imulb
aad
inc
sbb
test
push
sti
mov
lods
push
cld
xor
mov
push
lret
push
cld
aaa
rcrl
ljmp
push
insl
test
push
sub
lret
add
dec
adc
or
add
xchg
xchg
sub
aad
push
cmc
outsl
push
test
scas
inc
xchg
sar
and
push
add
js
xchg
cmp
dec
and
push
les
fwait
mov
xchg
push
mov
sbb
fidivl
imul
insl
or
dec
adc
ret
sbb
leave
push
push
or
leave
sbb
pop
in
jp
movsb
push
hlt
dec
movsb
xchg
xlat
adc
cmpb
fbld
fbld
add
arpl
int
adc
jg
dec
ret
incb
ret
scas
add
add
mov
test
push
dec
and
mov
xchg
pop
pushf
dec
and
jge
out
cmp
cli
das
stc
ja
pop
and
pop
fidivrl
sbb
imul
or
inc
cmp
lret
add
inc
cmp
xor
fcomps
add
add
xchg
add
aad
mov
fsubr
repz
repnz
and
mov
sbbb
mov
jg
cwtl
dec
xor
rclb
mov
fimuls
push
icebp
pop
fdivrl
into
xabort
push
cmp
clc
int3
es
cltd
push
xor
test
push
pop
cmp
lds
xor
mov
lea
pop
pop
roll
ret
gs
mov
or
out
jmp
lds
push
add
rcrl
xlat
push
or
adc
imul
aad
mov
aad
inc
sbb
sbb
les
pop
cmp
mov
xchg
shll
fisttpl
lds
mov
xor
add
and
adc
subl
push
mov
lods
adc
push
pop
push
inc
in
ret
jno
in
iret
jmp
xchg
cld
cmp
das
adc
aas
push
or
inc
aam
fmuls
shl
or
xor
push
call
lret
inc
ret
xor
mov
int
sbb
push
mov
enter
int3
inc
xor
in
aam
mov
xchg
dec
mov
mov
sbb
insl
daa
aam
call
test
ss
lds
cmp
ds
lret
in
std
pop
pop
adc
hlt
movsl
ret
inc
sbb
and
movsl
lcall
movsl
mov
cwtl
or
nop
adc
stos
jb
mov
mov
lahf
subb
in
insb
arpl
push
sbb
ret
or
dec
push
xor
sbb
or
inc
stos
fistl
cwtl
fcoml
adc
push
jmp
pushf
sahf
arpl
into
xor
dec
js
sarb
inc
mov
rcll
mov
xor
fmuls
fwait
xor
enter
cmp
mov
test
fwait
xor
out
lds
mov
and
push
xchg
adc
jne
call
cmp
xor
mov
and
in
mov
movsl
test
roll
mov
and
xchg
rcrb
in
pushf
fwait
sub
mov
repnz
jno
test
sti
leave
rcrb
push
imul
push
mov
push
cmc
mov
sbb
mov
cmp
mov
pop
sub
les
imul
lahf
ficoml
outsl
add
mov
xchg
adc
jmp
popf
iret
fildl
lahf
fists
sti
out
mov
rclb
push
mov
clc
xor
mov
test
lock
inc
test
stc
jecxz
movsl
ret
sti
stos
out
xchg
push
mov
cmp
rolb
outsl
push
or
ret
jno
popf
push
adc
inc
sub
inc
inc
mov
sbb
add
and
xchg
dec
daa
cs
cmc
hlt
cwtl
in
xor
test
sub
lods
mov
add
out
jnp
cmpsl
divl
imulb
jo
cltd
jne
xchg
push
push
or
sub
fsts
mov
mov
adc
and
les
fsts
pushl
std
lods
dec
mov
cmp
sub
inc
sbb
or
fdivrl
adc
outsl
add
xor
mov
sub
inc
mov
xchg
jecxz
repnz
loop
inc
shlb
mov
scas
sbbl
jo
or
cmp
rcll
push
cltd
es
cwtl
inc
insl
stc
jmp
add
pop
stos
xor
std
push
mov
popf
jp
ret
cwtl
ds
leave
sbb
or
sub
cmp
push
inc
mov
cmc
mov
add
bound
mov
add
mov
mov
data16
mov
lock
dec
popa
movsl
mov
sbb
aam
or
mov
jbe
and
fildl
leave
sarb
rep
les
pop
cmp
ja
push
cmc
mov
fisubl
insl
out
repz
cli
jo
mov
sbb
shll
jae
mov
movsl
or
fimull
jae
aas
fwait
lods
jge
add
cltd
lods
jno
lds
xchg
push
mov
aas
jo
push
mov
inc
aam
js
or
push
icebp
or
imul
sub
fstpl
and
movsl
mov
popf
mov
outsl
test
xlat
pop
ds
rorb
mov
adc
loop
aam
js
xchg
xchg
inc
sti
popf
fisubrs
push
dec
mov
cltd
pop
out
fdivl
call
les
test
aam
sti
pop
adc
rcr
mov
fwait
mov
lcall
mov
add
fcoml
cli
dec
movsl
mov
mov
xor
stos
gs
std
xlat
dec
sbb
inc
mov
cmp
cli
cmpsl
xchg
pop
in
mov
shr
je
data16
shll
aad
pop
cmp
movb
adc
xchg
ja
mov
lock
fcmovnb
pop
jo
int3
mov
mov
cmc
cmp
cmp
dec
xchg
add
pop
inc
test
dec
shll
xor
or
orb
ret
and
cmp
into
clc
clc
outsb
mov
xchg
rcrb
cmpsb
push
hlt
sub
inc
ds
dec
inc
mov
fdivrs
mov
cltd
fisubs
loopne
out
mov
loopne
stos
mov
mov
pop
pop
inc
push
loop
mov
pop
iret
ret
mov
push
or
xor
mov
xchg
lods
pop
hlt
lods
push
mov
and
xchg
sbb
cmpb
sahf
sbb
mov
push
in
int
or
cwtl
xchg
in
mov
sbb
cmp
test
dec
imul
jge
pop
movsl
sbb
lock
cmp
sub
xor
cmp
jnp
dec
pop
cs
fwait
push
rolb
push
pop
dec
adc
rcll
rcrb
outsb
mov
cli
push
lods
inc
jge
imul
mov
or
mov
xchg
pop
mov
out
hlt
or
test
push
jle
adc
ret
mov
jmp
xchg
xchg
push
dec
lea
call
inc
sahf
xor
fidivs
jae
mov
addr16
outsb
rcrb
mov
pop
hlt
scas
lock
inc
cs
iret
inc
cli
dec
lds
adc
add
lds
es
jae
or
mov
sbb
popf
imulb
daa
xchg
test
sbb
inc
sbb
adc
sub
xchg
or
cmp
lcall
jle
mov
and
jmp
mov
shl
sbb
gs
mov
sbbl
shlb
dec
repz
mov
rcll
or
clc
and
movsl
cli
dec
dec
xor
mov
gs
out
push
int3
mov
mov
inc
mov
enter
cmp
int
push
mov
fs
loopne
cmc
mov
cmc
xchg
mov
adc
popa
push
int3
cltd
mov
mov
ret
sahf
pop
jns
movsb
rcrb
xor
mov
adc
mov
repz
pop
and
iret
gs
mov
xor
rorl
or
ljmp
lret
mov
sti
mov
fs
fnstsw
mov
and
inc
or
dec
addb
ficoml
out
xchg
test
sub
sub
push
pushf
jae
sbb
bnd
pop
out
inc
fwait
sbb
pop
adc
lea
sub
xchg
xchg
jle
test
dec
incl
inc
xchg
imul
cli
mov
out
cmp
fdivl
pop
mov
jne
jecxz
xchg
adc
inc
inc
mov
cwtl
adc
push
repz
inc
aaa
call
xchg
mov
mov
mov
push
ficomps
fwait
sbb
imul
xchg
or
jo
or
inc
pop
adc
imul
sub
mov
fst
dec
pop
add
aad
mov
cmc
fxch
decb
ljmp
jge
xchg
rcrl
loopne
pop
or
jae
test
lods
pushf
add
lods
out
outsl
push
lcall
inc
pop
test
mov
mov
xor
xchg
loopne
repz
out
inc
insb
inc
shlb
js
jnp
inc
andl
sub
sub
or
xor
jo
xor
rclb
fisubl
push
fdivp
jp
out
and
and
enter
dec
icebp
hlt
jl
sub
mov
lcall
sbb
mov
dec
cmp
stos
cmp
mov
aam
xorl
test
mov
lock
add
add
sbb
inc
aas
repnz
stos
ret
and
fmull
bnd
stos
mov
jnp
test
xor
mov
loop
mov
lahf
jp
negl
aaa
mov
add
sbb
roll
or
inc
adc
mov
add
enter
pop
sarl
lods
jno
shrl
movsl
jge
dec
js
xchg
jg
adc
jnp
adc
cmp
pop
mov
push
int3
or
cwtl
sbb
or
mov
ret
clc
sub
add
inc
call
rorl
xor
sti
mov
ret
mov
fstps
bound
add
xchg
popf
push
test
add
xchg
cmp
or
aas
mov
adc
mov
pop
repz
mov
jae
mov
push
add
das
lock
adc
inc
das
mov
cmc
aam
or
sub
leave
push
lock
cmp
adc
mov
push
stos
xchg
inc
fists
stos
cmp
nop
pop
cld
sub
cmp
inc
sub
cli
loop
js
push
mov
popa
stos
enter
sub
inc
pop
mov
xchg
dec
push
mov
jp
lods
jg
dec
push
repz
imul
js,pt
pop
xchg
pop
inc
mov
add
dec
ss
repnz
and
inc
cwtl
dec
and
jns
clc
aam
fdivrs
sbb
push
or
out
jp
cmp
xlat
data16
mov
je
fcoms
inc
jp,pt
outsl
mov
int
inc
sbb
add
mov
mov
into
pop
stos
shll
xchg
push
aas
lods
pop
sbb
ljmp
sti
pop
push
addb
rcrb
adc
mov
add
int
sbb
cmpb
lret
movsl
mov
pushf
fs
push
aaa
pop
inc
std
lods
pop
hlt
dec
sbb
nop
mov
push
sub
xchg
lret
cmpsl
jno
or
lcall
push
addb
stos
jge
lcall
sbb
xchg
mov
lods
pop
xchg
jb
sub
xor
sub
fucomi
repnz
dec
mov
ds
andl
add
or
aas
ja
sbb
mov
or
out
adc
call
pop
jae
gs
out
push
mov
std
jp
and
cmp
xor
mov
mov
adc
andb
sub
and
xor
and
sti
sub
or
loope
push
fucomp
pop
add
adc
adc
pop
sti
loopne
divl
xchg
jo
pop
pushf
mov
mov
inc
inc
into
cmpsl
mov
fsubl
mov
rcrb
ror
add
mov
stos
dec
mov
mov
fists
jae
fimull
rcrl
pop
cmp
insl
mov
dec
mov
cmp
push
ja
popf
mov
adc
mov
push
jnp
sub
mov
mov
fxam
std
mov
js
pop
cwtl
clc
xlat
in
testl
adc
ds
iret
xor
addr16
pop
add
je
ret
inc
mov
add
xchg
out
leave
inc
fnsave
data16
imul
sub
jg
or
jmp
xchg
dec
push
and
sub
xor
mov
loopne
stc
mov
in
add
repnz
add
inc
icebp
ja
call
lock
add
inc
cmp
jg
pop
mov
nop
pop
add
pop
ret
adc
mov
outsl
dec
into
aaa
xor
push
enter
jne
sub
test
js
pop
into
mov
bound
push
cmp
xchg
pop
outsb
push
mov
scas
insl
jge
cmp
push
ja
les
pop
jnp
cmp
leave
sub
in
cmp
sbb
or
inc
dec
js
rolb
jle
mov
jo
xchg
test
fidivrl
mov
push
call
inc
movsl
xorl
test
cwtl
pop
pop
in
stos
mov
in
dec
inc
xor
xchg
inc
and
add
inc
int
movsb
lea
mov
shl
arpl
movsl
call
push
push
kmovw
inc
ja
fcomi
jne
pop
dec
aaa
add
ljmp
movsl
pop
or
sbbb
dec
dec
pushf
dec
and
jne
les
pushf
dec
push
sub
lds
jge
mov
repz
pusha
std
movsl
int3
in
or
in
mov
pop
shlb
jnp
cltd
push
push
push
movsl
int
push
mov
dec
fs
pop
lods
push
mov
inc
pusha
push
jg
mov
notb
lahf
lret
jl
cwtl
clc
xlat
in
negl
shlb
mov
jo
pop
jns
pop
jb
je
xchg
adc
push
sub
je
ret
push
mov
out
dec
add
pop
jnp
pop
popa
jne
jl
andb
iret
sbb
repnz
dec
jecxz
mov
jl
adc
lret
dec
fsubr
mov
xor
inc
xchg
fists
repz
aam
std
inc
inc
xor
call
inc
mov
in
hlt
cmp
xor
inc
or
add
add
inc
mov
push
sarb
jge
lds
stc
pop
adc
push
add
inc
mov
and
dec
mov
fsubrl
pop
insb
dec
sub
and
mov
das
cmc
sbb
mov
gs
mov
fs
pop
idivl
sub
inc
in
cmp
cmp
stc
push
testl
in
jle
arpl
inc
out
std
mov
jl
daa
sub
outsb
sub
call
pop
scas
xlat
insb
jmp
inc
out
mov
cmp
inc
pop
pop
fs
popf
cltd
int3
pop
sub
orb
xor
cmc
popf
xchg
std
mov
das
jo
das
into
pop
stos
les
inc
popf
sbb
add
jecxz
std
sub
add
iret
xchg
mov
mov
add
jl
ja
pop
rcll
cmc
cld
jg
mov
and
xor
push
leave
add
mov
stos
dec
mov
pushw
push
dec
cld
test
dec
push
lcall
jl
mov
pop
jno
add
aas
push
mov
cltd
xchg
dec
cmpsl
outsb
hlt
daa
mov
or
shlb
dec
data16
js
cmp
sahf
mov
cmp
sti
inc
sbbb
roll
pop
mov
dec
ret
ret
cwtl
pop
xchg
int
dec
cmp
sbb
hlt
pop
cmp
xchg
mov
push
pop
cmpsb
push
stos
xor
into
clc
rcrb
mov
fwait
shrl
adc
aam
aaa
es
hlt
pop
pop
cwtl
rclb
dec
inc
jne
lret
mov
mov
mov
movsb
dec
pop
or
arpl
lods
fisubl
inc
inc
xor
inc
scas
sbb
loope
cld
cmp
jbe
add
icebp
pop
dec
mov
cmp
jg
pop
ret
xchg
int3
and
adcl
mov
outsl
adc
ss
scas
arpl
pop
aas
rcl
jns
fimull
rcrl
negb
sbb
lods
lcall
xorb
mov
mov
lods
dec
push
mov
cmp
andl
fists
sti
out
pop
inc
xchg
push
loopne
cmp
inc
icebp
mov
ds
sarb
adc
cmpsb
rorl
fdivrs
cli
jae
push
xor
mov
clc
cltd
out
push
mov
jo
jge
push
fwait
jle
imul
or
dec
dec
mov
cwtl
cmp
repz
mov
cltd
ds
out
mov
sub
fistl
inc
mov
ficoml
cld
adc
pop
cmpsb
std
mov
jns
mov
sbb
fwait
cld
jg
push
scas
push
lock
int3
addr16
lock
lock
outsl
sub
or
push
lods
and
movsb
push
js
stos
mov
jno
repz
pushf
dec
pop
jno
dec
push
jl
shrl
sub
mov
dec
cmpsl
push
jne
push
pop
dec
mov
pop
ja
sub
ja
cmp
pop
mov
or
push
fs
aas
cmpsl
ds
mov
add
idiv
xor
pop
ds
dec
cmp
jp
out
cmp
je
icebp
xor
jmp
add
ja
lcall
mov
insl
test
mov
mov
dec
inc
jle
sub
push
or
xchg
dec
jecxz
mov
jmp
mov
fisttpl
loopne
cmp
cmp
inc
clc
clc
add
inc
xlat
mov
sbb
cmp
add
icebp
pop
dec
mov
addl
and
insl
mulb
lock
sub
mov
lods
push
sub
cmp
add
and
mov
push
dec
hlt
bound
sbb
insl
dec
mov
ljmp
les
cmp
fwait
loopne
sbb
shrb
jnp
les
xchg
xor
stos
cmp
cmc
mov
xchg
jo
add
loope
shll
dec
aam
aam
cmp
and
sbb
mov
loop
mov
mov
xor
test
sarb
pop
mov
inc
mov
sbb
loop
je
or
cs
movsb
incl
jnp
adc
add
sbb
call
add
sarl
or
add
pop
add
xor
imul
jl
xlat
mov
faddl
loop
sbb
push
fs
dec
iret
test
mov
mov
push
fisttps
mov
ffree
jmp
lret
rcr
cmp
mov
mov
test
xchg
mov
lods
mov
dec
les
and
inc
xchg
sti
add
out
pop
shll
iret
and
aad
dec
fdivrs
jnp
and
sarb
adc
sbb
xor
jno
sbb
xchg
cwtl
pop
rcrb
mov
mov
and
daa
flds
jle
inc
ret
hlt
je
jl
std
push
and
push
adc
stc
gs
xor
mov
popf
stos
shl
in
cmp
loopne
aas
into
sbb
icebp
mov
stos
mov
bnd
test
test
lcall
inc
mov
shl
mov
std
leave
adc
lds
fisubl
xchg
fs
lahf
popf
test
aad
leave
mov
jo
test
push
cmp
lret
add
test
dec
nop
xlat
fistl
jae
xor
mov
rcrb
pop
int3
cmpsl
sbb
jmp
cmpsl
inc
ret
sti
sub
push
cwtl
add
xchg
and
fistl
addb
push
leave
mov
imul
and
and
fstl
mov
xlat
mov
frstor
sti
xor
jne
jecxz
mov
adc
repz
dec
mov
hlt
xor
and
mov
fsubrs
test
cmc
xor
movsl
test
mov
lea
fsubs
mov
jge
mov
repz
test
mov
lock
fidivl
fsqrt
xor
dec
and
iret
inc
mov
sbb
out
cld
push
fsts
clc
sub
ja
push
cmc
movsl
popa
popf
lret
fs
fisttpll
dec
sar
mov
sbb
push
cmp
dec
addb
ficoml
les
mov
mov
fstl
jp
scas
decl
or
or
jg
or
out
mov
popa
or
and
inc
shlb
les
popa
dec
xchg
sub
subb
mov
mov
mov
out
add
cmpsl
ret
mov
mov
pop
ds
call
cld
xor
addb
push
jp
into
mov
sbb
loope
cmc
mov
mov
pop
dec
and
cmp
and
mov
test
add
mov
dec
in
add
xor
sbb
push
pop
loop
insl
mov
test
icebp
mov
sbb
add
mov
pop
inc
lahf
jae
sti
mov
mov
cmc
std
in
test
add
jo
orl
add
call
add
mov
test
add
mov
lods
fisttps
iret
js
jle
xor
sar
mov
out
add
repz
jecxz
dec
inc
cmp
xchg
adc
dec
xor
cmc
fsts
mov
gs
ljmp
cmp
enter
insl
or
sbb
ffreep
or
xchg
inc
xchg
inc
andb
addl
nop
imul
or
test
sahf
sbb
mov
xor
decl
sub
sahf
xlat
cmc
cwtl
xor
inc
mov
jne
xchg
nop
lock
and
jo
sbb
mov
int
mov
filds
adc
dec
push
mov
je
pop
iret
pop
inc
rcrl
test
test
adc
dec
mov
cmc
add
xchg
or
pop
inc
fistl
lods
enter
dec
mov
mov
addb
fnstcw
xlat
xchg
mov
enter
cmc
mov
dec
push
cwtl
clc
push
xor
cld
dec
testl
rcl
xchg
sti
je
or
mov
pop
scas
call
lock
ret
cmp
add
mov
add
sbb
push
dec
repz
add
add
adc
ret
push
xchg
jmp
lcall
mov
lods
mov
divl
rcrl
add
ljmp
imul
push
imulb
mov
leave
ss
lahf
subb
xchg
rorl
icebp
imul
dec
sbb
rol
mov
icebp
add
jl
ret
add
pop
arpl
or
dec
cmp
lock
mov
fnstsw
dec
add
add
sbb
xchg
and
lock
jg
mov
sar
mov
push
mov
adc
dec
aam
jb
enter
shlb
push
in
jmp
mov
xor
fstpl
xchg
mov
fidivrs
jmp
ljmp
push
or
es
seto
ret
push
inc
lret
dec
dec
add
sbb
pop
push
roll
push
popf
ja
or
cmp
adc
ret
fimuls
jae
jecxz
pushf
sti
add
fs
nop
shlb
add
mov
mov
sbb
enter
adc
stos
repnz
scas
inc
std
scas
dec
sbb
add
pop
mov
sub
aaa
sub
xor
mov
and
add
xchg
jl
rorl
outsl
cmp
jp
pusha
negl
fstl
faddl
mov
icebp
cmp
mov
cld
cmp
jae
nop
adc
es
mov
test
dec
cmp
xchg
and
mov
push
fidivrl
cli
pop
lods
inc
insl
jmp
das
inc
test
push
xabort
fimuls
xchg
mov
xrelease
and
xchg
lea
pop
push
inc
mov
sbb
popa
mov
repnz
pop
inc
inc
mov
int
mov
out
and
pop
hlt
adc
pop
addl
sub
add
shlb
cmpsb
cmc
aad
sbb
popa
pushf
add
lret
je
clc
test
mov
sbb
lods
lods
push
mov
fs
test
in
jmp
les
or
stos
push
cli
push
cli
lds
xchg
outsl
les
std
lock
mov
rolb
jbe
fmull
mov
cld
jnp
sbb
out
mov
repnz
mov
mov
mov
cwtl
rcrb
xchg
adc
data16
push
fdivrs
jge
imul
cmpl
mov
fsubl
cmp
out
je
or
aam
sub
xchg
arpl
rorb
lret
push
adc
xlat
call
pop
mov
and
daa
add
adc
daa
jnp
mov
adc
ret
mov
xor
lock
sbb
jg
adc
mov
dec
pop
test
mov
lds
push
int
mov
popa
cmp
lock
inc
rorl
fsts
cmp
xlat
ficoml
add
cmp
xchg
jb
mov
xor
sub
xchg
fcompl
xchg
jo
popa
or
inc
mov
xor
sbb
add
clc
les
stc
xor
mov
or
test
stc
mov
lret
pushf
insl
push
or
xor
call
push
je
test
push
jp,pt
inc
mov
add
mov
pop
gs
xor
mov
lods
lcall
ret
push
stos
sti
imul
fwait
mov
out
cmp
loope
repnz
or
rorb
adc
roll
nop
dec
and
movl
sub
mov
adc
push
test
dec
sbb
sbb
mov
fs
fldenv
xchg
fistpll
pop
inc
lds
movsb
sbb
adc
push
push
inc
imul
jnp
inc
cmp
mov
pop
or
or
sbb
dec
mov
xor
pop
jno
cmp
lret
icebp
and
add
repz
pop
and
sbb
add
pop
sbb
add
mov
pop
inc
mov
xchg
cmp
clc
les
xlat
xchg
pop
out
enter
inc
mov
insb
aaa
pop
sbb
add
cmpsb
jge
and
mov
mull
cld
divb
xorl
jmp
jge
fsub
lods
lea
ret
in
gs
fistpll
pop
mov
pushf
fldenv
sbbb
das
icebp
idivb
frstor
ljmp
pop
cli
movsb
leave
dec
aas
xchg
xlat
jae
mov
repz
stos
je
fcomip
loope
push
sbb
ret
or
or
xor
jns
or
ret
inc
mov
mov
ljmp
inc
mov
sahf
xchg
ret
mov
arpl
jne
fnstcw
jno
push
push
cmpl
or
lcall
iret
iret
xor
nop
jmp
aam
push
pop
push
sub
jmp
fistpll
fwait
idivl
mov
je
xchg
and
sbb
enter
test
cltd
dec
daa
adc
lret
and
rcr
inc
xor
xor
sarl
sti
clc
push
pop
and
sti
xor
cmp
mov
and
fwait
pcmpgtb
jmp
leave
fdivrl
icebp
sbb
jne
pop
shl
sti
stos
xchg
and
jg
test
out
les
pop
dec
outsb
inc
into
adc
adc
popf
imul
mov
pop
jp
sbb
jbe
lods
add
ret
test
or
stos
xor
jmp
xchg
jg,pn
jns
std
rolb
push
andl
or
andl
sarl
push
adc
and
mov
test
xchg
inc
out
outsl
lcall
mov
jae
out
icebp
xchg
mov
rolb
add
mov
add
pop
imul
xor
mov
fwait
in
adc
pop
mov
test
cmpl
jae
mov
pusha
jnp
arpl
stos
repz
adc
add
xor
or
int3
pushf
dec
lret
xchg
mov
movsb
sahf
cmpsl
dec
push
jg
mov
pushl
sub
fucomp
pushf
jg
lods
mov
ss
loopne
cmpsb
jae
hlt
inc
into
cmpb
insl
sbb
cmp
adc
xorl
cmpb
movsb
cmp
push
sbb
lods
mov
adc
filds
ret
adc
dec
sarb
sub
pusha
enter
add
push
subl
mov
mov
and
je
aad
sbb
fildl
and
cmp
call
icebp
push
ret
sbb
outsb
push
xchg
outsl
mov
leave
mov
and
mov
aas
std
sarb
call
add
jp
cmpsb
inc
rcll
sar
popa
scas
aam
mull
mov
sub
jecxz
call
jecxz
out
divb
js
hlt
mov
xchg
pop
add
repnz
push
aas
xor
jmp
je
sbb
or
and
or
sarb
mov
sub
or
push
call
xchg
xor
push
sub
mov
xor
ret
xorl
jnp
lods
hlt
stos
mov
sub
push
add
leave
cld
rclb
lods
ret
ret
lret
icebp
leave
dec
daa
pop
insl
mov
sti
and
daa
xor
sub
inc
pcmpgtw
inc
sub
mov
lcall
fisubrs
xlat
pop
in
xor
mov
jp
mov
cmpsl
les
out
cmp
sub
xchg
lea
js
cmp
push
inc
xor
jmp
iret
outsl
pop
into
xor
fmull
mov
sbb
and
neg
out
xor
push
add
shrb
ljmp
mov
out
data16
je
jno
dec
mov
fiaddl
inc
fimull
jne
xor
mov
jae
clc
insl
rclb
xlat
cmp
sbb
bound
call
mov
inc
decl
mov
dec
sbb
pop
leave
fistpl
mov
loop
sbb
popa
pop
in
dec
loope
cmc
xchg
cmp
ja
bnd
push
pop
aas
cmpsl
fcomip
lods
std
jle
sbb
inc
test
dec
aad
xchg
xor
mov
pushf
fisubs
mov
fsubl
fisubl
mov
outsb
and
mov
jl
mov
hlt
cmp
mov
jne
push
stos
push
leave
push
cmp
mov
pop
mov
popa
rcrl
xchg
aas
mov
ffreep
or
xor
sbb
outsb
divb
pusha
push
mov
xchg
or
js
xchg
adc
call
fs
divb
push
and
imul
jae
lret
aas
pop
movsb
jecxz
jb
xor
push
xor
ret
mov
dec
addb
mov
cmpsb
xor
jb
inc
mov
adc
cmpsl
inc
jmp
pop
ja
sub
loop
pop
decb
jnp
add
sbb
or
push
and
sarl
push
cmp
xor
dec
cmp
sub
pop
test
out
adc
ror
outsl
sti
repz
bound
jno
mov
dec
mov
je
rcll
ds
lahf
ja
inc
and
mov
mov
jge
test
scas
xor
cmpl
faddp
add
ljmp
adc
jle
cmpsl
loope
icebp
xorl
outsb
and
push
sub
ret
push
pushf
mov
adc
pop
mov
roll
jl
adc
cmpsl
int
cld
mov
test
sub
idivb
xchg
lock
int3
and
cmovno
jmp
in
mov
scas
or
pop
aaa
mov
jecxz
int3
lods
shll
scas
inc
jno
repnz
enter
pushf
loop
sub
jge
andl
lret
mov
push
jecxz
test
jbe
fwait
mov
mov
mov
cmp
mov
mov
cs
mov
sarb
cmp
inc
push
mov
sub
je
mov
inc
loopne
xor
mov
jbe
mov
pop
dec
scas
out
test
je
xchg
in
jb
lahf
pop
out
iret
repnz
inc
sbb
push
orb
mov
sub
or
mov
je
icebp
mov
lahf
iret
xor
adc
outsb
stos
and
and
xor
xchg
loop
pop
pop
dec
mov
push
cwtl
inc
jne
push
xchg
jmp
push
cmp
test
filds
add
mov
mov
dec
cmp
inc
lcall
pop
movsl
test
test
cld
test
cmp
enter
pushf
loop
lods
mov
fld
push
sarb
sub
les
fcompl
jg
push
pop
cmpps
rcrb
inc
stos
mov
lret
pop
ss
out
gs
jecxz
test
sarl
cmp
lcall
cmp
sar
gs
aam
jb
inc
jle
insb
shr
mov
sbb
pop
test
push
push
xchg
dec
lock
mov
out
jg
fs
pop
add
mov
data16
xor
pop
and
jg
imul
dec
aaa
repnz
mov
sub
dec
mov
call
pop
xor
dec
xor
mov
jo
jl
adc
cld
cmp
xchg
leave
lea
clc
push
mov
popf
mov
fwait
int
inc
dec
sub
adc
cmpsl
cmp
inc
popa
mov
scas
andl
subl
mov
mov
mov
dec
xor
andb
rcrl
jp
mov
ja
jns
ljmp
outsl
jecxz
cmc
jbe
mov
out
cmp
fs
pop
rcl
iret
mov
insb
addl
cwtl
sbb
cs
jo
add
mov
push
dec
pop
stos
frstor
mov
mov
mov
nop
in
mov
cltd
subb
in
push
ret
or
push
mov
push
and
in
addr16
xchg
ljmp
mov
inc
dec
push
pop
into
lcall
in
push
and
xor
jns
repnz
inc
repnz
in
vandps
inc
cli
imul
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
loop
bnd
xor
jae
jg
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
add
ret
xlat
and
pop
xchg
dec
jb
cmp
fwait
outsb
aam
sti
pop
lcall
pusha
rolb
jle
lock
daa
aam
aad
aad
fnsave
mov
inc
or
xor
popa
gs
push
mov
inc
inc
stos
shl
test
jl
stos
out
iret
lret
push
mov
push
divl
hlt
add
adc
shlb
fadds
cmp
inc
lret
fcompl
cs
cmc
stc
ljmp
dec
sbb
repz
cs
push
enter
data16
sub
adc
lret
mov
sub
xor
imul
fmulp
jnp
jb
notl
daa
mul
cmpsl
and
inc
ret
jmp
out
mov
lods
negb
sahf
add
xchg
incl
dec
jno
test
notl
cltd
loopne
xor
or
lods
icebp
loopne
nop
sbb
ja
rol
pop
ficoms
fcompl
data16
lock
lahf
aaa
pop
xor
cmpb
cmp
in
outsb
fnstcw
fs
jnp
xchg
imul
mov
test
out
pop
stos
int
lret
cli
pop
and
jb
xor
addr16
xor
jne
pusha
add
sub
xchg
outsl
pop
stos
ss
ficoms
inc
mov
arpl
mov
mov
scas
dec
push
cmp
inc
test
pop
dec
into
xchg
jg
pushf
cmp
jmp
inc
popa
add
bound
lret
test
add
in
and
push
sahf
in
xchg
in
stos
jne
iret
mov
cmp
mov
fucomi
in
into
sbb
sub
lea
je
or
sub
out
in
hlt
inc
adc
push
loopne
sub
xchg
pop
icebp
xchg
adc
rcrl
inc
fwait
out
jb
sbb
test
loope
shlb
jb
aaa
ffree
inc
cwtl
ds
rclb
sti
imul
dec
sahf
gs
les
aas
mov
push
mov
jae
xchg
push
stos
fnsave
inc
ret
pop
sub
and
pop
push
jae
loop
je
mov
pop
sub
cmp
arpl
lods
push
push
cmpsl
mov
outsl
mov
mov
clc
add
sahf
mov
pop
pop
mov
je
gs
pushf
loopne
xchg
dec
and
cmpsb
xor
cmp
aam
push
mov
popf
js
pop
fisttpl
in
cmc
in
mov
mov
cmpsl
and
ret
lods
subb
lahf
or
gs
cwtl
out
adc
lret
inc
xchg
ret
mov
or
adc
push
inc
sub
je
lods
into
ret
jg
jae
mov
ljmp
in
pop
dec
fld1
jb
rclb
sbb
scas
sbb
cmpb
mov
hlt
xchg
xor
imul
out
adc
bound
ffreep
fcomps
je
les
push
inc
cld
push
adc
add
pop
pushl
iret
push
jle
int
data16
cmpsb
in
inc
imul
imul
or
test
insw
hlt
push
mov
jg
shll
into
and
xor
fmul
mov
sub
mov
xor
dec
scas
arpl
mov
pop
outsl
dec
pusha
sbb
add
add
loop
inc
dec
xor
xchg
add
jns
outsl
sbb
arpl
inc
in
xchg
pop
push
jg
inc
testb
jo
mov
addr16
dec
jae
adc
mov
pop
jo
add
xorl
mov
je
adc
fwait
hlt
icebp
jl
pop
test
js
inc
mov
dec
pop
xchg
out
jno
incb
adc
sbb
hlt
pop
repnz
cwtl
ds
les
popf
pushf
popf
jbe
into
fsubp
jge
aad
sub
pop
mov
jge
ret
jecxz
call
movsl
pusha
mov
xchg
push
divl
hlt
add
lock
inc
or
ss
shr
push
adc
cmpsb
movsb
adc
adc
or
daa
mov
jno
lods
push
sub
mov
aam
insb
popa
in
xor
push
dec
adc
sbb
push
sbb
popa
insl
ret
jbe
xor
push
push
jge
xchg
push
fisttps
pop
pop
hlt
add
test
aad
pop
pop
ljmp
sbb
arpl
dec
lods
pop
inc
in
into
adc
lret
push
inc
ds
cmp
mov
sbb
js
xor
in
rcl
fcomip
setns
and
ljmp
lcall
pop
xor
out
pop
cltd
cmp
adc
dec
pusha
push
out
jmp
dec
jecxz
lods
sbb
sbb
or
sub
pop
adc
jo
mov
daa
jno
add
xchg
enter
out
jge
or
sbb
mov
cmp
iret
sub
jle
mov
out
cmpsb
add
mov
pop
addr16
sbb
es
fldcw
push
push
mov
jnp
shll
into
and
xor
stos
and
call
xor
lods
insl
ret
mov
js
hlt
sub
push
stos
in
xchg
ror
push
clc
daa
out
xchg
in
enter
in
jbe
outsl
in
xchg
aaa
outsb
lods
adc
orb
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
ljmp
sub
adc
sti
loopne
mov
xor
dec
jno
inc
aam
imul
mov
jo
loopne
jp
aaa
es
mov
push
xchg
movsb
mov
mov
pop
xchg
js
sbb
cld
fisubl
push
fnstsw
fdivl
jge
jle
inc
jo
sbb
pushf
mov
clc
mov
mov
popl
pop
add
sbb
addr16
mov
pop
inc
adc
dec
push
pop
dec
out
adc
mov
mov
mov
dec
pop
push
jg
in
lcall
pop
pop
testb
lds
vandps
mov
xchg
cmpsl
outsb
sub
add
mov
movsb
push
lds
iret
push
xchg
mov
pop
jns
sbb
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
sbbb
stc
inc
stos
push
fs
cmp
imul
das
jecxz
xchg
dec
ja
das
les
xchg
loop
add
pmaxub
mov
aam
cmp
or
adc
clc
jl
push
mov
and
xor
pop
add
push
std
jecxz
arpl
popf
cs
cmp
lds
jmpw
in
mov
inc
push
fwait
pop
add
adc
xchg
dec
mov
or
mov
lret
mov
add
jb
imul
jae
shll
add
cmp
pop
lock
daa
pop
stos
and
and
pop
xchg
add
test
aad
pop
pop
fidivl
cwtl
rclb
mov
mov
add
jne
popf
filds
and
inc
stos
iret
adc
pop
jb
incb
mov
cmpsl
test
inc
push
in
mov
push
out
cmp
loopne,pn
fldpi
push
cmp
mov
insl
mov
xor
iret
sub
sbb
hlt
imul
jmp
pop
mov
fisubrl
cmp
loop
lret
bound
inc
inc
xor
jno
push
je
xchg
and
sub
or
mov
sarl
inc
testl
ret
jo
in
cmp
mov
hlt
jno
gs
mov
jg
sbb
add
dec
in
adc
loop
and
xor
lcall
or
push
xor
ss
mov
sub
sbb
pop
into
lods
out
add
iret
push
sbb
dec
aas
dec
lahf
jp
dec
jnp
push
lods
mov
dec
inc
pusha
push
aaa
outsb
sub
ja
leave
repz
or
rolb
jg
movsb
and
pop
mov
outsl
inc
add
cmp
loopne
int
dec
xchg
fcomip
adc
lret
es
xor
in
test
ljmp
das
push
aas
push
xchg
gs
inc
sbb
popf
iret
pusha
push
mov
es
xor
or
mov
push
and
aam
mov
or
leave
xor
loop
mov
data16
mov
xlat
pop
add
and
fstp
or
pop
push
mov
imul
addr16
sbb
lret
mov
in
testl
lods
and
push
rcrl
pop
mov
mov
loope
shlb
adc
lock
movsl
pop
ja
fcoms
inc
int
jge
hlt
mov
jae
mov
jbe
pop
dec
pop
js
sbb
lret
push
lds
bound
lahf
cmp
mov
mov
and
push
add
stc
sbb
pusha
in
cmp
jle
xor
idiv
jo
jne
dec
push
pop
dec
repnz
cld
push
adc
out
xor
xor
dec
sbb
lcall
inc
mov
jl
sahf
jo
fld
xchg
imul
add
mov
mov
shlb
mov
movsl
aad
test
leave
cld
fisubl
push
fnstsw
fdivl
jge
jle
inc
push
xor
lcall
clc
mov
mov
popl
pop
add
sbb
lods
fsubrl
push
mov
pop
inc
adc
dec
push
pop
dec
out
adc
mov
mov
fmull
cmp
lds
jmp
push
jge
lds
and
sbb
jno
out
cmp
fstps
in
xchg
movsb
mov
adc
out
out
sub
cmpsl
push
testl
aam
pushf
xor
shll
cwtl
add
pop
iret
pop
pop
cmp
leave
push
inc
ficoml
inc
sbb
mov
insb
mov
xor
push
add
loope
cld
arpl
dec
clc
jg
sbb
movsb
xor
inc
adc
jbe
lds
jne
into
and
xchg
jno
pusha
cmp
push
or
addr16
inc
insl
aad
inc
ja
std
push
idivl
adc
mov
mov
insl
ljmp
mov
andb
arpl
push
mov
jmp
push
pop
aas
mov
les
dec
pop
xor
jbe
out
insb
outsl
arpl
mov
dec
pusha
daa
sbb
pop
adc
mov
cmp
jae
xchg
xor
movsb
mov
mov
into
stc
mov
stc
in
sbb
jg
xlat
add
outsb
mov
inc
jne
iret
xlat
insb
add
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
ja
test
addr16
mov
adc
shlb
in
mov
jb
inc
mov
stos
daa
cmp
xchg
test
jle
pop
dec
fistpll
or
iret
push
les
xor
pop
js
mov
cmpsl
xor
outsb
add
pop
push
sub
inc
inc
jmp
add
sbb
or
inc
xchg
jle
icebp
outsb
push
ja
dec
bound
lahf
movsb
add
mov
and
cmc
sub
dec
cld
sahf
mov
xor
push
rclb
test
sub
sbb
xor
jmp
scas
sub
cmpb
mov
out
mov
test
aaa
push
fdivr
fdivrp
and
std
rcrb
and
sbb
xor
insl
shll
pushf
xorb
out
cmovo
adc
add
cmp
push
pop
cmp
cmp
sub
jno
cmp
repnz
js
gs
jns
out
dec
enter
lea
or
mov
shll
push
mov
or
out
es
fnstsw
inc
jbe
mov
bound
mov
mov
jno
pop
sub
fdivl
add
sbb
rolb
neg
push
mov
icebp
loope
fs
cmp
jmp
test
adc
push
dec
jae
push
add
mov
movaps
jmp
jge
lcall
sub
jne
popf
insl
push
mov
mov
mov
in
iret
push
je
js
pop
jb
out
fnstenv
pusha
fsubrp
divl
in
std
sub
push
mov
add
mov
add
cli
sbb
pusha
jbe
lea
jle
pop
dec
add
dec
pusha
outsl
dec
jae
add
pop
sbb
sbb
lcall
add
push
sub
fcompp
lds
dec
enter
xor
fldz
pop
daa
mov
out
xchg
xchg
jge
mov
push
pop
nop
jbe
popa
repnz
mov
or
pop
and
push
inc
jl
xchg
sub
add
mov
dec
loop
inc
out
nop
jmp
sbb
pop
dec
mov
xchg
repz
stos
mov
inc
cmp
ficoms
jno
dec
sub
gs
mov
xchg
test
fwait
test
in
out
lea
push
jl
xchg
mov
xor
push
jne
stos
add
sub
push
jl
sub
push
repz
pop
pop
push
fsub
lahf
jp
pop
test
mov
sub
push
cld
mov
jl
fiaddl
inc
mov
jo
std
cltd
outsl
push
cmp
jp
mov
or
mov
sbb
call
pop
je
jo
in
cmc
xor
mov
mov
pusha
push
mov
pop
loopne
fnstcw
or
data16
dec
lds
inc
jne
les
mov
or
popa
xchg
es
dec
jp
popa
addr16
popa
sbb
xor
jl
out
cmp
ret
jo
cli
ja
bound
ret
outsb
shll
insl
in
mov
sbb
lock
outsl
adc
add
pop
sub
push
and
nop
shl
jle
adc
mov
cld
lret
mov
in
adc
push
mov
enter
ret
adc
dec
mov
je
inc
mov
jmp
jno
dec
push
bound
lahf
mov
sub
add
xor
fs
das
cmp
stos
fcmovnbe
inc
cli
add
jp
out
rorb
inc
cmp
pop
lcall
add
adc
push
inc
js
inc
mov
pop
xchg
aaa
testl
mov
adc
shlb
in
mov
jb
inc
xor
out
imul
repz
test
jle
pop
dec
fistpll
or
iret
push
les
xor
pop
js
mov
cmpsl
xor
outsb
add
push
push
sub
inc
inc
jmp
add
xor
jg
fs
sti
push
pop
leave
mov
xchg
out
sti
ja
push
adc
dec
push
pop
into
lcall
arpl
ficoms
shll
ja
sub
sbb
xor
jmp
scas
sub
cmpb
mov
lods
shll
test
aaa
push
fdivr
fdivrp
and
std
rcrb
add
sbb
xor
insl
frstor
cli
pushf
add
push
out
cmovo
adc
cmp
addr16
adc
stos
dec
and
rolb
sub
ret
dec
sbb
sbb
lea
fimuls
xor
in
or
aaa
out
xor
xchg
push
xchg
or
out
es
fnstsw
inc
jbe
mov
loop
loopne
scas
nop
mov
mov
mov
in
sub
fdivl
add
sbb
rolb
negl
mov
icebp
loopne
fs
cmp
jmp
test
dec
mov
scas
test
stos
xchg
mov
fmull
or
adc
sub
rcrb
xchg
imul
xchg
inc
pop
in
iret
adc
clc
pop
jb
out
fnstenv
pusha
fsubrp
divl
in
std
sub
push
mov
add
mov
add
cli
sbb
pusha
jbe
lea
jle
pop
dec
add
dec
pusha
pusha
dec
jae
es
pop
sbb
sbb
lcall
sbb
lcall
pop
cmpsl
aam
lds
fprem1
fisubs
rcrb
in
and
xor
jns
adc
cmove
or
out
movsb
mov
fxch
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
jb
or
lea
add
in
cmpsb
sbb
lret
cmpsl
adc
shlb
insb
popa
fiadds
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
mov
int3
push
clc
daa
out
xchg
xorl
leave
dec
inc
pusha
push
jg
test
inc
addb
cs
das
inc
out
sti
jl
fiaddl
inc
mov
jo
std
cltd
outsl
push
cmp
jp
mov
mov
pop
int3
fistpll
into
jns
sbb
call
pop
je
jo
in
cmc
xor
mov
mov
pusha
push
xchg
mov
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
into
mov
cwtl
pop
ss
jnp
out
test
cld
and
stos
std
xor
add
and
fstp
add
pop
ror
mov
stc
push
and
insl
in
mov
sbb
lock
outsl
adc
add
pop
sub
push
and
adc
in
mov
push
mov
cld
lret
mov
in
adc
push
mov
enter
ret
aam
dec
mov
je
inc
mov
jmp
sub
and
and
imul
mov
std
lods
pop
pop
js
xchg
cmp
loopne
mov
xor
pushl
jne
aaa
push
pop
dec
jne
cld
mov
aas
aad
push
xchg
insl
ljmp
pop
movsb
cli
jno
cmp
jecxz
andl
jne
loope
outsl
fsubl
icebp
mov
jg
sbb
or
sub
mov
fisubs
jno
jmp
xchg
enter
out
jge
or
lcall
lock
pusha
fmull
jle
ret
cmpsb
add
mov
pop
addr16
adc
je
xlat
stos
push
mov
hlt
imul
mov
icebp
jmp
aas
loopne
arpl
add
xchg
dec
das
adc
and
cwtl
sub
repnz
cmp
pop
fcmovnbe
cli
mov
sbb
jp
adc
cmc
lahf
fst
int
jge
in
mov
cmp
and
movsb
add
test
xor
push
pop
push
push
xor
sub
adc
sti
loopne
mov
sbb
daa
rorl
fs
pop
clc
cmp
push
mov
xchg
sbb
inc
jg
jbe
popf
push
push
inc
fnstsw
mov
fchs
mov
add
mov
jle
in
mov
and
mov
decb
mov
les
mov
scas
jg
push
hlt
mov
das
pop
add
repnz
cs
xor
lock
mov
and
mov
push
icebp
arpl
mov
filds
imul
gs
mov
mov
mov
test
jae
les
daa
fwait
ret
mov
cmpsb
xor
jno
sub
dec
lods
enter
mov
pusha
push
je
and
repz
lret
cmp
fwait
out
ljmp
sub
or
cmp
cwtl
daa
inc
xchg
sub
data16
out
push
sub
mov
pop
scas
mov
cmp
out
mov
test
lea
or
fst
mov
sub
stos
xor
cmp
rcrl
je
loop
int3
push
pop
and
inc
add
iret
repz
inc
rcrb
cmp
rorb
or
popf
mov
ret
aad
js
in
clc
xchg
mov
stos
mov
testb
lods
pop
insb
les
cmp
xor
fcmovnb
test
out
repz
xchg
mov
push
clc
push
int3
lret
or
fmul
mov
xchg
stos
cmp
mov
stos
inc
gs
cmpsb
mov
jns
ret
add
push
and
ds
xor
add
or
sub
movsl
mov
clc
mov
pop
outsl
pop
shrb
pop
stos
sbb
dec
xor
fisttpll
aas
fwait
lret
in
mov
fldt
mov
cmp
fwait
lea
add
data16
add
xchg
aaa
mov
int
mov
loop
dec
fs
pop
mov
xor
loopne
aad
repz
insl
imul
ret
into
insl
movl
push
pop
xlat
je
jmp
dec
jo
cmc
gs
push
push
ret
in
insb
lock
dec
in
push
jl
and
je
push
test
sub
das
cs
xchg
test
xchg
mov
jp
loope
cmp
mov
fdivrl
push
mov
or
push
dec
push
fs
jne
jae
loope
inc
in
sahf
loopne
xor
out
cmp
or
test
jnp
inc
mov
je
inc
repz
outsl
insl
push
addl
rolb
adc
cmp
cmpsb
dec
push
pop
lods
mov
into
push
mov
popf
jle
cltd
or
insl
sub
pop
push
aas
sub
leave
jl
jecxz
or
in
pop
icebp
jmp
clc
jg
add
test
mov
shr
mov
shll
mov
dec
sbb
and
imul
fcmovbe
in
xor
jecxz
inc
in
mov
jp
loope
xor
ret
mov
addb
insl
xor
mov
dec
and
pop
stos
push
test
xorb
sbb
add
sub
jne
sbb
loopne
jae
mov
push
clc
inc
ret
add
mov
xchg
mov
and
stos
inc
lcall
shlb
xchg
jp
mov
jmp
xchg
das
jne
out
cmp
daa
add
inc
sarl
js
mov
cmp
mov
mov
dec
sub
ret
inc
sub
and
xchg
mov
test
enter
cmc
out
cmc
jb
fwait
ja
jmp
out
xor
and
sub
mov
push
outsb
mov
int
cld
movsb
add
iret
cli
sbb
jg
scas
inc
mov
pusha
jo
inc
pop
cmp
lahf
cwtl
mov
jnp
repz
adc
repz
mov
sbb
adc
or
iret
cmpsl
mov
loop
xor
push
dec
lock
insl
mov
mov
es
push
in
lods
pop
notl
dec
mov
mov
dec
fsubrs
jl
and
into
push
lods
std
stos
aad
outsl
pop
test
and
mov
sub
fs
sub
jnp
rolb
bound
ss
icebp
loope
js
mov
or
xor
or
out
addr16
sarl
push
fmuls
sarb
sub
xchg
pop
pop
insb
jbe
cli
cmp
bound
pop
fistpll
js
pop
pop
scas
inc
stos
fdivp
inc
pushf
jns
mov
bound
jle
adc
mov
push
xor
push
ja
rol
fstps
mov
xor
pop
push
sbb
xchg
cmp
mov
add
je
movsb
scas
and
add
loopne
in
movsb
mov
leave
jo
lret
movsl
subl
sub
dec
push
mov
lods
push
sub
lcall
sbb
ret
mov
movsl
imul
push
xor
rcrl
scas
lret
mov
add
xchg
mov
pushf
mov
enter
mov
lds
xchg
ja
mov
lahf
lahf
cmpsl
enter
adc
stos
and
or
arpl
jne
in
into
lahf
out
or
stos
jnp
xchg
mov
fdivrs
test
in
cmpsl
sti
fsubs
inc
cltd
enter
jo
mov
daa
dec
mov
push
xchg
lret
xor
jne
xchg
enter
ret
cmp
fistpll
les
std
dec
repnz
and
mov
mov
scas
push
xor
aad
lods
rcrl
mov
loopne
leave
fwait
jo
cwtl
lret
mov
faddl
lcall
rcll
dec
sbb
mov
dec
aas
inc
mov
popf
stos
arpl
stc
mov
push
add
sbb
push
push
cli
pop
push
shrb
cmp
test
mov
add
fmulp
test
in
jns
and
mov
mov
dec
das
sbbb
int
bound
pop
cmp
sarb
int
sub
push
dec
imull
addr16
xchg
inc
sub
jb
sub
add
adc
sbb
xchg
in
xor
mov
int3
sbb
or
push
fistpll
push
roll
mov
dec
pop
adc
stos
cmp
nop
in
rolb
ret
loopne
sub
insl
hlt
repz
sti
mov
jecxz
push
xchg
xor
dec
scas
dec
pop
in
mov
fimuls
jmp
or
xor
push
xchg
jns
cmpb
lea
test
inc
and
and
cmp
lret
or
test
adc
or
push
push
add
jnp
or
xor
pop
push
stos
push
cltd
out
cmp
aad
jle
lods
and
mov
mov
dec
pop
out
es
inc
loop
ljmp
lret
jns
mov
cmp
adc
fs
push
js
ficompl
xchg
xor
dec
lock
fwait
jmp
fidivrs
es
in
xor
fisubrs
push
popa
lahf
popf
sbb
xor
aad
mov
mov
fsubrs
xchg
adc
imul
cltd
test
mov
out
ret
loopne
out
and
jbe
mov
lahf
lret
push
test
pop
into
jmp
cmpsb
cmp
jmp
out
add
dec
cwtl
icebp
cltd
ret
stos
fistpl
stos
lea
sbb
test
xchg
jp
nop
testl
lods
stos
push
xchg
xchg
leave
inc
pop
lret
xchg
dec
xchg
mov
in
idivb
dec
xor
and
xchg
stos
inc
xchg
pop
pop
jo
push
adc
scas
dec
dec
push
or
jg
mov
add
sbb
or
jno
pop
xor
add
mov
mov
pop
mov
jbe
movsl
fs
push
mov
mov
cltd
jg
rorl
icebp
jns
data16
jmp
push
sub
and
sbb
dec
fisubrs
sub
insl
dec
sahf
dec
icebp
mov
leave
repz
ret
loopne
test
adc
mov
aad
mov
adc
sbb
das
cwtl
iret
cmpsl
ret
test
in
test
movsl
jns
rcll
les
sbb
sti
dec
pop
xchg
lahf
jge
jns
xor
mov
inc
cmpsl
aad
jb
mov
popf
lret
lahf
sbb
lret
outsb
aad
inc
sbb
jnp
mov
mov
or
add
or
call
push
mov
sahf
lahf
scas
pushf
jecxz
js
jge
inc
fs
sub
lcall
add
jbe
adc
dec
movsb
call
adc
fwait
jge
pop
push
inc
lcall
xchg
mov
inc
sbb
lods
ret
sahf
jae
cmp
out
fcom
jbe
int3
or
cmpsl
mov
shrb
mov
daa
jno
je
sahf
call
or
pop
leave
mov
mov
popf
inc
mov
fucom
xchg
cmp
mov
cmp
jp
mov
mov
fmulp
test
inc
popf
jecxz
pop
jno
fs
mov
js
push
stos
mov
jmp
lret
movsl
mov
cmp
mov
mov
cld
scas
das
ffree
cld
andl
insl
ret
sbbl
mov
fiaddl
push
push
jne
clc
fld
fstpl
cmp
loope
nop
test
cmpl
movl
mov
jae
xchg
and
fcomip
mov
add
mov
sarl
jns
push
dec
xchg
add
sbb
mov
adc
add
insl
outsb
add
adc
xchg
jne
loope
jno
inc
adc
decl
xchg
test
mov
sub
mov
loope
inc
or
mov
fwait
shlb
sarb
or
lret
ds
jmp
mov
aas
pop
lret
xor
mov
sbb
movsl
rorl
pop
adc
dec
or
sbb
cli
repnz
int
mov
jg
or
pop
or
fistpll
xchg
or
mov
mov
lcall
bound
push
inc
cs
sbb
data16
mov
ss
data16
data16
pop
cmpsl
insl
mov
add
xchg
movsb
mov
or
idivb
pop
into
rcr
add
pop
ds
cmp
adc
repz
scas
ret
mov
inc
xor
mov
sbb
push
ljmp
mov
je
or
pop
push
dec
mov
push
push
xor
loop
cmpsl
int
stos
sbb
fisttpll
mov
repz
arpl
testl
or
mov
adc
jecxz
mov
cld
adc
fsubrl
aad
clc
aam
jge
mov
lret
repz
shrl
xor
aad
pop
cmp
repnz
mov
sbb
hlt
nop
cld
adc
in
dec
or
add
xor
lods
mov
add
cld
mov
lods
cmp
jp
lahf
inc
pusha
pop
mov
jmp
fists
js
stos
aas
lock
andl
scas
fstpl
push
mov
xor
lds
out
sbb
icebp
xchg
push
mov
loop
adc
dec
stos
cmp
out
call
push
je
test
inc
repnz
inc
sbb
push
int
xchg
adc
adc
and
dec
mov
xchg
out
cld
mov
daa
repz
mov
imul
mov
sti
lcall
push
ret
ds
out
mov
mov
or
xor
mov
dec
shll
jg
dec
movsb
stos
push
icebp
adc
xchg
sbb
add
mov
frstor
pop
repz
cmp
xchg
cltd
xchg
std
stos
xchg
sbb
xor
inc
fistpll
mov
lcall
divl
mov
mov
sbb
scas
dec
test
bnd
lods
add
enter
sti
jl
push
pop
cmpl
mov
call
adc
pop
aam
dec
lret
mov
dec
cmpsb
push
loopne
cmpsb
inc
movsb
inc
cmp
dec
push
pop
filds
push
sahf
fisttpl
out
mov
aaa
daa
loopne
je
mov
push
or
mov
repz
sbbl
cmp
in
mov
mov
cwtl
lds
aas
in
and
dec
jecxz
les
in
pusha
sbb
dec
mov
pop
cli
jle
pop
dec
jno
stc
in
push
xchg
mov
push
jne
push
mov
test
inc
mov
fucomp
mov
in
std
imul
mov
xchg
into
mov
lcall
arpl
xchg
leave
dec
cwtl
pushf
pushf
mov
gs
inc
xor
fsubrs
dec
adc
fwait
leave
cld
fbld
adc
adc
add
js
shlb
fisttpl
aas
stc
das
jmp
jno
lret
pop
dec
and
xor
xor
mov
sub
dec
lock
cltd
cmpsl
mov
inc
jp
jnp
cmpsb
inc
push
out
cwtl
int3
sbb
mov
enter
add
push
jp
adc
inc
and
mov
loop,pn
pusha
lcall
sbb
and
hlt
sub
jbe
repnz
xchg
stos
jecxz
stos
insl
dec
lahf
ds
imul
mov
dec
pop
lock
stos
xor
and
outsl
shrl
leave
pop
and
xor
aas
imul
xchg
pop
ljmp
pop
adc
cmp
jae
mov
sbb
addb
rorl
adc
mov
inc
push
xchg
mov
data16
pop
mov
mov
std
fyl2xp1
xchg
cmp
xchg
sub
jecxz
inc
into
add
add
dec
mov
out
mov
enter
clc
cmp
movsl
ret
inc
lods
call
or
lahf
dec
or
mov
mov
test
xor
mov
pop
sub
inc
inc
mov
inc
mov
dec
sbb
fimuls
add
dec
mov
popa
mov
fcomi
mov
rcrl
inc
mov
pushf
iret
fisttps
inc
sbb
leave
push
lock
sub
sahf
sub
dec
jns
lods
or
or
or
or
enter
dec
pushf
insb
das
leave
mov
movsl
inc
imul
mov
out
scas
pop
shrl
pop
mov
lds
mov
sbb
inc
inc
add
leave
mov
mov
dec
cmp
add
pop
dec
pop
aas
pop
in
inc
sbb
xchg
or
leave
xchg
or
and
fimuls
jnp
fsubrs
sbb
clc
push
pop
push
fstl
adc
or
jle
lea
call
pop
dec
pop
icebp
ret
sbb
pop
ficomps
xor
enter
loope
xor
and
fisubrs
cmp
and
dec
fldenv
lds
or
inc
and
jle
inc
xor
data16
mov
jecxz
outsb
idivb
mov
mov
add
mov
rclb
icebp
lods
mov
or
nop
adc
dec
sub
cmc
adc
repz
xchg
shl
xchg
iret
popf
lret
cmp
xor
lret
xchg
inc
mov
add
test
xchg
pushf
sub
call
stos
xchg
cmc
leave
cs
enter
lcall
fcmovne
test
add
adc
dec
pop
push
or
adc
rorl
dec
pop
push
xor
dec
inc
sarb
adc
ja
xchg
imul
in
xchg
and
mov
sar
pop
es
imul
out
enter
das
jecxz
enter
outsb
arpl
adc
sub
sbb
pop
sub
adc
xor
xor
stos
dec
fisttpll
mov
pop
cmp
and
push
repz
sbb
aaa
xchg
or
insb
and
das
cmpsl
jecxz
cld
push
cmpb
fldenv
scas
sub
cmp
push
push
dec
mov
jmp
pushf
dec
ret
inc
imul
mov
dec
fisubl
push
mov
jae
mov
js
fdivl
bound
imul
adc
cmp
int
push
mov
mov
dec
jg
mov
push
xchg
repnz
lret
popa
pop
dec
pusha
push
cmp
jns
sub
inc
mov
dec
jb
lods
dec
and
popf
movsl
jp
jge
rolb
xchg
pop
xchg
cmpsl
inc
es
fdivrs
xchg
mov
inc
enter
jg
or
and
mov
pop
xchg
jne
std
xor
add
mov
test
fdivrl
xchg
les
js
inc
shlb
int
popf
mov
pusha
test
add
arpl
out
mov
sbb
mov
jl
shll
cmp
adcl
inc
add
push
test
cmpsl
pop
repnz
cmc
std
ds
stos
shrl
loope
sbb
mov
pop
pop
adc
mov
daa
or
inc
out
adc
sbb
adc
mov
xor
mov
cmp
cmp
pop
adc
sbb
mov
mov
lds
das
xchg
rcl
pinsrw
xchg
xor
mov
icebp
inc
movsb
and
rol
xchg
ljmp
xlat
push
inc
xor
jno
inc
cmp
and
insb
push
iret
insl
pop
insl
pop
sub
and
dec
iret
push
data16
cmpsb
xchg
cmp
dec
sahf
dec
xor
add
sub
and
lret
rcrb
adc
add
xchg
ja
testl
mov
notl
aad
imul
leave
jecxz
fdivl
rorl
dec
add
mov
jp
lret
sbb
test
fcmovnb
mov
sub
jmp
cmp
mov
sbb
cld
xchg
lret
or
push
rorl
inc
xor
pavgb
rorl
cs
dec
data16
jnp
dec
push
hlt
pushf
jne
sub
xor
pop
bound
adc
mov
or
xchg
mov
rcll
ja
inc
jl
sahf
sub
xor
outsb
ret
lods
outsb
mov
mov
or
cmp
push
mov
outsb
push
dec
sub
cs
cmp
push
xlat
pop
cs
out
dec
mov
js
sub
xor
xchg
inc
test
arpl
in
xlat
or
inc
lahf
lret
jecxz
sbb
stc
sub
cld
scas
lock
adc
popa
push
sbb
fs
test
push
or
movsl
pusha
and
mov
push
clc
mov
and
xchg
shl
les
fs
and
jbe
pop
xor
int3
loope
mov
xchg
mov
inc
pop
mov
les
sub
mov
inc
mov
fstl
add
add
xchg
fbstp
jp
test
cmc
nop
adc
inc
fidivrs
movsb
dec
mov
insl
adc
jns
or
pop
in
or
add
mov
or
push
and
mov
xchg
mov
fsubl
dec
mov
xor
push
adc
inc
arpl
sbbb
add
xchg
fnsave
jp
pop
loopne
out
and
mov
aam
test
sbb
mov
mov
nop
jl
mov
xor
std
rol
ret
adc
cmpsl
imul
inc
mov
dec
fmull
jo
mov
jne
int
xlat
xor
sahf
ja
test
mov
cltd
call
mov
into
popf
push
jp
xchg
les
enter
test
sbb
adcl
das
xchg
jb
fwait
fwait
sbb
sbb
cmp
lahf
cltd
fstpl
sbb
cmp
mov
cmp
loop
mov
stos
shlb
jle
addl
rcl
xor
pop
lea
les
je
fdivrs
loop
push
call
mov
ret
les
pusha
fwait
pop
xchg
lds
dec
sub
nop
jecxz
and
aad
divl
scas
mov
sbb
loop
cmp
imul
xrelease
pop
jae
xlat
inc
sbb
xor
imulb
jg
lret
or
push
cltd
xor
stc
mov
addb
xor
fsubl
mov
movsl
mov
pop
pop
xor
jge
push
imul
aas
lock
fisttps
sahf
inc
adc
fadd
in
pushf
dec
arpl
pop
test
pop
mov
jmp
mov
mov
lods
pop
jb
cli
sub
mov
mov
jnp
adc
mov
adc
add
fcoml
cs
adc
andl
cltd
sbb
xor
and
adc
xchg
je
or
leave
push
lods
rep
push
sbb
cmpsl
ret
inc
jmp
mov
cltd
leave
adc
fimuls
adc
and
imul
loopne
cmp
push
mov
nop
das
push
fwait
cmpsl
shr
mov
shl
cmp
mov
sti
mov
jne
fwait
loopne
jmp
add
mov
filds
or
inc
decb
cwtl
push
push
fdivs
fwait
sub
and
sbb
lods
fldl
repz
sbb
cmp
pop
je
pop
gs
sub
mov
or
xchg
bound
inc
sub
dec
mov
push
fldenv
cmpsb
pop
mov
ds
pop
loope
js
fnstenv
mov
enter
add
or
sbb
jl
cmp
popl
ds
lcall
sbb
push
sub
ja
filds
std
adcb
lods
addr16
xchg
enter
shl
into
inc
les
lods
testb
scas
pop
mov
rcll
mov
aas
jecxz
pop
fwait
loopne
sbb
add
nop
mov
daa
and
fucomip
dec
lret
sbb
xor
jno
test
enter
loop
mov
shrb
cmpsl
mov
roll
push
fwait
xchg
je
cmp
inc
push
mov
pop
pushf
scas
aad
xor
mov
dec
outsb
lds
or
dec
rep
xchg
dec
add
sbb
insb
sub
aaa
jbe
push
insb
sbb
dec
fidivs
cltd
test
pushf
test
test
dec
fidivl
or
gs
leave
icebp
aaa
mov
pop
les
adc
mov
add
jbe
push
das
xchg
int
inc
mov
fwait
sub
pop
dec
sub
cmp
xchg
pop
sarl
call
mov
and
ss
pushf
sub
add
aaa
fcmovnu
or
pushf
cmp
fdiv
loop
or
mov
add
push
or
jp
mov
fists
add
mov
or
daa
rcrb
aas
or
or
into
test
inc
sbb
or
insl
adc
ficoms
incl
xchg
mov
sbb
repz
cmp
sbb
xchg
mov
pop
insb
push
jl
in
jae
repz
les
arpl
and
aad
inc
pushf
imul
mov
addr16
std
lods
inc
sbb
test
test
js
fs
mov
add
adc
ja
mov
add
sub
or
mov
cmp
mov
movsl
ret
cmpl
push
mov
jmp
aaa
push
shr
jb
sbb
cmpsb
inc
cmc
lds
iret
mov
ret
mov
pop
push
dec
push
mov
cli
mov
mov
inc
jne
mov
into
pop
popf
cmp
mov
sub
addr16
inc
loopne
mov
in
dec
pop
push
lahf
lret
xor
inc
mov
mov
mov
and
fs
xchg
xor
stos
and
mov
sub
sbb
enter
push
sub
mov
mov
mov
imul
fstp
adc
aam
lds
jae
les
adc
jge
cli
dec
sbb
xchg
loope
xchg
push
cwtl
push
jb
ret
movsl
fistpll
push
es
dec
das
lahf
orl
add
inc
adc
orb
sar
lahf
sti
call
mov
pop
push
int3
and
fidivs
mov
jo
cmp
in
and
call
xchg
inc
out
dec
inc
aam
cmp
push
inc
dec
aad
sub
in
bound
xor
stos
int
ret
mov
test
imul
sub
inc
adc
les
in
movsl
popf
dec
pop
mov
cltd
ret
mov
shrb
dec
cmpsl
mov
sbb
mov
fs
clc
adc
mov
inc
pop
lods
push
pop
clc
mov
pop
lcall
sahf
push
mov
popf
lret
lret
repnz
xor
inc
sbb
xchg
aaa
fwait
jne
cli
mull
pop
add
vcvtpd2psy
dec
int
pop
jno
fldcw
sbb
popa
inc
and
sbb
popf
push
dec
xor
mov
bts
mov
mov
stos
xor
jp
cs
mov
pop
push
xor
adc
lahf
movsb
push
popa
sahf
stc
and
sti
push
adc
in
sub
sub
fmull
xchg
sub
sub
imul
das
in
jne
pop
pop
rol
xor
fbstp
shl
cltd
xchg
lret
pop
mov
data16
mov
sti
mov
shr
addl
arpl
insl
test
ss
jns
dec
cmpsl
mov
pop
inc
sub
fsubrs
mov
stos
mov
call
mov
inc
clc
scas
pushf
inc
insb
repz
arpl
and
mov
int
insl
adc
mov
mov
sub
adc
ret
mov
pusha
stos
inc
rcr
leave
in
and
cltd
insb
inc
fstpt
cld
sub
pop
lock
addb
or
mov
mov
push
and
dec
and
adc
dec
jmp
lods
xlat
aas
js
orl
cmpsl
lock
aam
mov
sub
sbb
outsl
mov
mov
pushl
sbb
push
push
mov
push
imul
imul
fistps
mov
pushf
js
mov
inc
pop
inc
inc
xor
repz
sti
xchg
lahf
lret
push
test
pop
sub
stc
fs
lret
mov
and
scas
cltd
mov
push
arpl
pop
stos
push
inc
in
dec
mov
push
cmp
push
adc
inc
popf
lret
inc
mov
push
sbb
adc
loopne
test
sbb
mov
cmpsl
outsb
xor
inc
lcall
je
call
push
das
lret
mov
xchg
adc
fwait
leave
loop
lcall
inc
cmp
test
mov
inc
sbb
or
xchg
shrb
roll
cmp
pop
xlat
shll
dec
lods
mov
or
sbb
aam
cmc
fnsave
dec
cmc
aaa
xor
test
pop
cmp
xor
mov
outsb
sti
mov
popl
inc
mov
mov
pop
dec
cmp
push
push
push
lods
rcrb
or
mov
aad
add
sbb
hlt
dec
mov
mov
jo
cwtl
lret
movsl
add
inc
subl
sbbl
aam
loop
push
es
jmp
dec
in
lods
cld
fnstsw
or
dec
pop
movsl
and
rcr
je
or
xchg
std
add
ret
dec
dec
push
lahf
fs
incb
dec
sbb
sbb
scas
pop
push
pop
daa
xchg
lret
sub
or
jg
mov
into
ds
fimull
scas
jmp
lret
xor
addr16
xor
ret
mov
cli
sub
out
mov
out
pop
sub
inc
cltd
enter
jae
xor
sbbb
jecxz
mov
pop
andb
shll
mov
inc
push
sub
cmpsb
cld
jbe
mov
mov
mov
loop
ja
mov
sub
lret
inc
cvttps2pi
add
scas
dec
add
cmp
or
mov
inc
mov
arpl
scas
xor
mov
adc
out
or
push
sub
les
pop
adc
mov
bound
shl
pop
es
inc
xchg
lahf
test
sbb
mov
ret
rcl
std
sub
push
popl
rcrb
mov
adc
inc
mov
stc
in
mov
fld
mov
loopne
ret
mov
cld
in
pop
test
xlat
addr16
cltd
xor
push
lods
xlat
insb
mov
inc
sbb
mov
popa
pop
sarb
jg
out
popa
dec
addr16
jmp
jge
dec
push
fidivs
inc
mov
pop
push
mov
fsubrs
mov
add
push
sti
mov
mov
and
mov
sub
mov
inc
notb
mov
xchg
fstsw
es
loop
inc
inc
repnz
iret
or
cli
stos
aas
scas
mov
or
inc
sub
xchg
dec
fstl
xchg
push
sbb
shll
loop
insl
jge
cwtl
mov
nop
insl
cmpsl
and
pop
stos
xchg
xlat
daa
fyl2xp1
rorb
movnti
shl
lret
clc
jb
add
push
lahf
inc
pusha
pop
lret
js
and
sbb
or
adcl
sti
add
jl
sbbl
sbb
dec
xchg
daa
inc
sub
sbb
addr16
mov
push
test
sbb
out
dec
loopne
xchg
sar
jb
out
sub
sbb
or
aam
dec
subl
out
dec
jg
mov
lock
pop
dec
mov
xor
in
pop
or
movsb
or
sub
cmpsl
sarl
repz
iret
xor
aam
pop
stos
push
jle
add
loope
mov
add
sub
mov
in
push
addr16
test
int3
pushf
mov
or
mov
fidivrl
inc
jmp
dec
push
dec
xor
les
or
pushf
movsl
out
shll
mov
sub
sbb
jae
xchg
adc
add
mov
scas
fistpll
lds
rclb
sbb
movsl
cmp
lock
test
jae
popa
rcrb
pusha
scas
fldcw
add
push
test
fwait
sub
or
xchg
inc
pop
ss
jno
movsl
call
pop
mov
in
push
add
enter
jno
adc
out
mov
test
or
jo
push
pop
shl
mov
fisubs
repz
push
loope
mov
inc
clc
aas
sub
dec
pusha
lahf
add
jmp
cld
or
sti
sbb
push
sti
or
lock
int3
pushf
insb
scas
cld
sub
cmp
lods
push
jg
sbb
ljmp
lret
fisttpll
mov
lods
into
in
std
imul
pop
lahf
xchg
mov
adcl
cmpsl
push
push
std
sbb
subl
imul
cmpsl
and
leave
test
mov
sbb
mov
push
jl
adc
add
addb
aaa
inc
pop
dec
and
mov
in
pop
mov
pusha
lret
sbb
int3
mov
sbb
es
popf
iret
sbb
xchg
jmp
mov
mov
ret
imul
cmpsl
mov
dec
mov
mov
repz
inc
xchg
jl
mov
mov
cltd
sbb
mov
mov
shrb
cmp
pop
xorb
stos
mov
hlt
outsl
sub
les
push
mov
mov
xchg
fstpt
jge
scas
jnp
mov
scas
je
mov
mov
dec
mov
xor
sub
add
sbb
test
cmp
jp
xor
cmp
and
and
bound
movsl
fcompl
mov
pop
dec
loop
adc
mov
mov
pop
insb
cmp
fsubrs
xchg
mov
adc
sti
xor
sub
sbbl
cmpsl
test
dec
dec
int
sub
add
ss
add
cltd
mulb
dec
ret
mov
pop
stos
popa
sub
in
call
mov
stos
leave
xlat
mov
push
lock
ret
pop
dec
jnp
ja
or
cmp
pop
push
adc
sub
mov
rcll
int3
js
repz
pop
ljmp
popf
xchg
and
sbb
call
inc
inc
frstor
dec
adc
mov
mov
sub
adc
mov
sub
sbb
fbld
mov
leave
insl
jne
or
cmp
fimull
inc
enter
jo,pt
xor
gs
dec
xchg
dec
xor
xlat
or
mov
mov
jb
out
dec
fidivrl
movsl
mov
aaa
sbb
mov
jl
mov
dec
daa
adc
and
pop
dec
in
dec
lods
mov
pop
or
movsl
mov
pop
add
pop
cmp
lock
ror
pop
cmp
cld
jno
and
or
mov
stc
mov
addr16
dec
inc
subb
lret
cmpl
sub
xor
loope
mov
sub
cmpsl
insb
js
or
mov
iret
mov
arpl
xor
aad
push
rclb
mov
mov
lods
sub
mov
inc
xchg
adc
fstl
xor
test
adc
mov
jl
rcll
adc
sub
sub
and
adc
inc
push
jge
jne
stc
or
pop
mov
cmovae
pop
jb
fwait
cltd
mov
mov
in
mov
add
rcl
test
cmp
cmpsl
jmp
xchg
adc
test
push
rclb
adc
cwtl
stc
inc
mov
jae
cmp
pop
fnstsw
into
std
mov
jge
jecxz
push
xchg
mov
pop
pushl
mov
pushf
cmp
loop
mov
sbb
mov
and
lods
stos
cmp
arpl
loope
sbb
adc
mov
sub
cmpsl
mov
inc
mov
xor
scas
xchg
add
lret
stos
xchg
fcmove
xchg
sub
aam
fldt
imul
sub
shlb
push
sbb
lock
fwait
mov
iret
adc
xor
or
or
push
xchg
inc
mov
mov
xchg
cmc
mov
jle
sbb
int3
pop
test
pop
mov
jb
testl
imul
leave
push
sbb
mov
sbb
arpl
ljmp
shl
pop
and
out
mov
or
clc
fldt
pusha
lret
fprem1
jg
out
mov
push
cmp
shlb
leave
das
push
push
push
les
mov
fimull
cmpl
mov
inc
mov
xchg
jns
shr
div
cmp
cmp
adc
icebp
lock
jb
xchg
fmuls
jp
add
add
push
xchg
stos
jge
sbb
dec
xchg
sub
in
xorb
inc
pop
lcall
imul
imul
rcrb
jb
scas
orl
add
and
rcr
add
sub
xchg
add
mov
mov
push
cmp
loop
test
and
out
sbb
ret
out
popf
sbb
and
dec
data16
aam
push
ret
fwait
push
sbb
fisubs
flds
sbb
xchg
mov
idivl
in
imul
lret
pop
vphadddq
fwait
push
add
mov
lahf
lret
jecxz
rcrb
aaa
xchg
dec
xchg
fisubrs
outsb
mov
sti
mov
push
test
xchg
or
cltd
jno
add
xor
mov
pop
xchg
push
test
movsl
les
inc
test
pop
fwait
mov
dec
imul
xchg
inc
mov
test
orl
mov
jne
int
or
rcrb
and
inc
push
fisubrl
fiaddl
test
adc
pusha
push
ljmp
test
push
push
jo
mov
iret
jns
adc
add
dec
mov
or
fwait
call
rclb
ja
std
inc
les
movsl
mov
mov
pop
xchg
cld
in
ret
jge
sbb
mov
mov
cmc
aaa
inc
rcll
add
xchg
mov
jne
bound
xchg
dec
inc
jmp
call
mov
pop
stos
roll
fmull
aam
sti
fdivrl
nop
pop
jnp
clc
cmp
aam
sahf
repnz
lods
cmp
xlat
divl
cmpsl
mov
fcompl
cwtl
lret
imul
lret
jmp
mov
pop
mov
in
jae
ja
scas
sbb
xchg
mov
push
insb
push
push
sbb
pusha
test
sbb
or
scas
jne
xchg
gs
add
adc
movsb
push
add
cltd
lods
xor
adc
mov
and
bound
test
movsl
xor
cltd
clc
xchg
xchg
mov
adc
xchg
cmp
daa
fsubs
lret
push
push
js
adc
push
lea
jb
xor
xor
pop
aas
popf
iret
daa
mov
insl
cmpsl
mov
fs
mov
test
jge
fsubr
mov
xchg
mov
fisubrs
mov
fistl
leave
push
jle
xchg
jmp
je
cwtl
mov
lods
cmp
pushf
aas
mov
in
idivl
and
andl
lcall
and
pop
stos
fsubr
mov
lods
sub
fildll
cmpsl
call
popf
lret
out
test
mov
repnz
and
or
jbe
fsubrs
pushf
mov
xchg
sbb
bound
cltd
fisttpll
fisttpll
popa
xchg
lahf
push
xchg
pop
test
insl
lret
frstor
jl
cmovo
and
and
andl
rcl
xor
sarb
pop
dec
xor
ret
out
rcrb
adc
lahf
sahf
pushl
stos
movl
imul
sbb
xchg
cli
xchg
xchg
sbb
cmc
insb
pop
nop
ffreep
out
loope
push
fsts
ds
adc
imull
nop
mov
popf
mov
sbb
xchg
aas
push
push
lock
aaa
mov
outsl
test
add
mov
or
pop
stos
insl
enter
sbb
push
dec
adc
pop
dec
sbb
mov
in
mov
cmp
cmp
or
pop
outsb
push
roll
push
adcb
pop
pop
adc
mov
dec
fldl
sbb
xor
xor
insb
push
sbb
jg
xchg
ss
mov
and
sub
stos
adcl
dec
adc
pusha
arpl
test
lcall
push
js
pop
bound
movsl
inc
cmp
pop
sbb
stos
sbb
xchg
jbe
int3
ficompl
fistps
daa
sti
es
shlb
sti
mov
push
iret
or
add
mov
jle
fcoms
lods
dec
push
enter
xchg
push
sub
mov
aas
ja
sbb
xor
push
add
and
in
icebp
mov
das
in
and
movsb
lds
or
mov
jns
cmpsb
aam
rorl
fiaddl
add
sbb
sti
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
sub
sub
mov
or
scas
xchg
stos
lds
imul
inc
pop
fwait
cmp
mov
jne
leave
sub
sbb
push
xchg
cmp
bnd
xchg
dec
js
pop
clc
jle
sbb
mov
mov
test
sbb
adc
addr16
stos
sbb
sub
test
pop
dec
add
mov
cmp
pop
gs
xchg
xchg
xchg
cltd
enter
fs
add
hlt
pop
and
sbb
fisubrs
dec
mov
jno
fidivs
push
test
mov
ljmp
mov
in
push
dec
daa
leave
cltd
push
dec
lock
pop
pop
enter
add
test
sarb
and
lahf
iret
sbb
test
push
jbe
lods
lahf
mov
push
testl
ret
lret
shlb
mov
jo
lret
pop
rolb
sbb
pop
scas
ret
push
adc
movsb
xchg
jno
and
pop
sbb
pusha
inc
stos
shlb
jle
mov
mov
pop
js
mov
loopne
jle
mov
and
xchg
int
pop
mov
cwtl
inc
movsl
inc
push
mov
xlat
jmp
fsubrl
aad
xor
iret
cmpsl
ret
test
lods
inc
and
cwtl
cmp
add
pop
xchg
cli
popl
imul
add
ret
cmpb
test
add
shr
dec
mov
mov
xor
shll
fstl
je
xchg
cmp
inc
mov
cmc
jge
ror
sub
jecxz
in
dec
sbb
add
dec
and
push
adc
mov
mov
jb
mov
add
sbb
cmpsl
mov
ffree
or
nop
mov
jb
sbb
xlat
pop
or
lds
xchg
loop
fs
and
and
pop
fsubrl
jecxz
jge
sbb
mov
mov
mov
jo
fiadds
or
dec
add
out
fiaddl
sbb
push
and
not
test
xchg
mov
mov
call
xchg
fwait
xchg
cwtl
mov
mov
lds
ljmp
jmp
inc
sub
in
mov
jl
mov
aam
sub
stos
fsub
bound
push
push
roll
dec
mov
int3
cld
mov
jb
repz
push
mov
dec
fsubl
movsb
ret
cltd
std
ljmp
ljmp
mov
lods
shlb
or
mov
jno
rorb
jnp
popa
push
pop
pop
lock
add
xor
arpl
jae
dec
fs
cmc
movsb
mov
icebp
test
xorb
adc
inc
mov
mov
mov
mov
mov
in
dec
hlt
xchg
fmuls
mov
fists
fwait
push
pop
rclb
mov
inc
out
cli
stos
jbe
stos
cmp
pop
gs
sti
test
push
movsb
cmp
fistl
mov
dec
inc
mov
xor
dec
sbb
add
mov
adc
in
ljmp
xorb
push
mov
and
scas
dec
adc
in
mov
or
jo
addr16
sbb
xchg
cmp
push
test
out
inc
mov
xchg
mov
and
stc
pop
loope
mov
dec
or
pop
jo
xchg
mov
mov
jl
and
sub
outsl
xor
mov
movsl
jle
cmp
and
jg
ret
popa
scas
nop
stos
call
fcomip
mov
stos
rolb
and
cmp
or
dec
sub
adc
push
stc
jno
dec
cs
lods
xlat
push
or
jae
fbld
add
ret
lahf
rolb
and
iret
dec
mov
shlb
mov
mov
sub
dec
daa
inc
inc
shlb
or
lds
iret
aam
xchg
fstl
ret
add
clc
pop
push
inc
rcl
sub
cmpsl
cltd
testb
aad
add
test
jb
repz
cs
cmp
out
lret
fisubrl
xor
xor
lret
mov
adcb
out
dec
fldl
ror
xor
xchg
dec
pop
pop
push
pop
mov
insl
jge
push
mov
mov
add
ss
scas
dec
int
mov
sbb
pop
push
lahf
jle
sub
or
xchg
je
leave
sbb
rolb
or
sbb
adc
test
jne
fs
js
cmpsb
int
dec
lods
lahf
movsb
jnp
push
cltd
jo
inc
es
jge
ja
sti
mov
jne
and
add
push
pop
add
inc
lret
insl
dec
add
mov
inc
xor
lods
into
popf
stos
aam
cmpl
pop
add
rcrl
adc
clc
mov
jge
jnp
gs
adc
cmp
arpl
push
inc
add
xchg
dec
pushf
dec
and
shll
or
mov
push
dec
mov
bound
fistl
jle
movsl
xor
push
push
lcall
daa
push
dec
outsb
scas
je
stos
dec
ds
outsb
add
jge
mulb
push
push
pop
fs
sub
icebp
jp
dec
lret
jae
mov
cwtl
jo
arpl
add
sbb
mov
xchg
loopne
jecxz
xchg
test
sbb
lret
dec
xor
push
sub
jo
push
stos
mov
aas
inc
jmp
sahf
sub
mov
repz
enter
or
in
inc
fisttps
aam
xchg
push
gs
lds
xchg
int
add
std
mov
add
sti
stc
fdivrs
cmc
fwait
lahf
mov
pop
icebp
xchg
mov
mov
movsl
sarl
out
sbb
fwait
imul
sbb
gs
cmpsl
mov
sbb
lcall
mov
fistps
push
inc
adc
cli
pop
daa
or
push
add
dec
gs
cli
dec
dec
push
jbe
lods
xabort
sub
xchg
stos
lahf
aas
pop
jns
test
in
fcmovne
movsb
leave
dec
xor
dec
cmpsl
std
adc
xorb
push
pop
adc
jg
inc
test
into
aam
mov
push
push
mov
inc
loop
jge
xor
popf
add
pushf
cmp
out
jl
jl
mov
loopne
sbb
in
push
inc
inc
lret
daa
dec
push
jge
xor
inc
inc
negb
dec
stos
mov
add
lea
imul
repz
clc
mov
lret
pop
mov
leave
mov
fimuls
gs
or
sub
sbb
push
sbb
jno
and
jne
test
scas
mov
mov
pusha
std
mov
sbb
rcrl
or
sbb
vmread
mov
xchg
xor
and
enter
xchg
pop
scas
pushf
push
addr16
push
cmp
lahf
jle
sub
or
jg
or
inc
mov
pop
or
or
mov
cmovge
jecxz
xchg
test
mov
push
mov
sub
pop
adc
and
call
sahf
int3
mov
or
sbb
movsb
mov
in
loope
imul
mov
sub
scas
jo
adc
mov
adcl
jmp
push
adc
mov
test
fimull
dec
pop
lcall
leave
push
or
jo
stos
mov
or
sti
mov
aad
xchg
iret
xor
inc
pop
jmp
push
jmp
mov
arpl
mov
xor
notl
aaa
rcrl
cltd
adc
das
push
xor
stos
inc
ficoml
jmp
cmp
arpl
test
fsts
loopne
dec
lods
fisttps
push
mov
adc
int3
and
sbb
out
shrb
clc
rol
fstl
inc
inc
cwtl
mov
xchg
mov
xchg
xlat
push
aam
fidivl
in
or
and
bound
mov
cli
out
dec
xchg
jno
sahf
add
mov
dec
gs
fldt
cmp
cmpl
imul
shlb
xchg
ret
loopne
in
mov
clc
sti
fstl
rcrl
push
enter
pusha
ret
cmp
add
cli
mov
loop
and
mov
mov
in
mov
add
insl
stos
push
sub
xor
testl
movsl
js
outsb
popa
out
arpl
mov
and
xchg
dec
addr16
mov
and
addb
out
xchg
xor
pop
outsl
lret
popa
mov
mov
aaa
adc
push
in
mov
lahf
ficoms
cmp
negl
and
sub
mov
shrl
and
jecxz
je
cmpsl
cld
pop
jnp
xor
xor
test
and
pop
test
inc
nop
mov
ds
push
dec
fldcw
mov
and
bound
es
int
adc
ret
or
out
mov
std
aas
mov
iret
stos
imul
aaa
call
shll
xchg
or
data16
movl
push
mov
sbb
cmp
cltd
lea
mov
mov
or
movsb
js
popf
lret
movsl
xor
xchg
xlat
stos
xor
shrl
mov
movsl
clc
enter
xchg
cld
jmp
call
xlat
nop
sub
mov
jns
movsl
adc
int
jg
shll
mov
jmp
stos
push
nop
mov
bound
jg
xor
dec
jnp
or
mov
cmpsl
add
addr16
sbb
jmp
fs
cltd
lods
test
ret
fwait
lods
mov
mov
and
std
arpl
fwait
lea
jge
mov
sub
mov
dec
push
sub
test
mov
mov
jmp
adc
dec
mov
into
pop
xor
mov
pop
or
mov
aas
mulps
loopne
mov
mov
pop
add
push
xor
cld
jg
js
mov
repz
mov
sbb
test
mov
shll
lret
mov
fs
mov
push
adcb
leave
les
inc
adc
sbb
adc
xchg
ror
mov
push
shl
cltd
push
mov
fnstsw
popf
lods
fdivp
fisubrl
inc
cmp
or
bnd
popf
pop
adc
mov
xor
mov
adc
mov
mov
xchg
sub
test
pop
mov
mov
add
pop
addl
popa
inc
icebp
nop
arpl
fcmovnu
adc
fnstsw
mov
mov
aam
js
shll
jge
rcrb
je
imul
shl
fsts
add
repz
movsl
xchg
stos
mov
mov
lahf
lds
addb
fcomps
or
loope
dec
add
leave
leave
fsubl
dec
push
cmpsb
cmpsb
arpl
sahf
repnz
mov
fists
pop
inc
fprem1
stc
pusha
fildll
pusha
std
rcll
adc
cmp
add
cld
sub
imulb
fadd
push
stos
inc
sub
fldenv
jno
push
loope
arpl
xor
mov
xchg
lcall
inc
xchg
xor
sarb
andl
adc
xchg
sbb
je
ffreep
dec
and
sub
jge
out
xor
xchg
push
add
mov
fcomps
mov
dec
jno
pop
ret
sub
jecxz
jb
lods
pop
add
xchg
cwtl
loope
mov
aad
cmp
jo
mov
or
mov
aam
ds
mov
mov
repz
mov
test
ret
pop
add
or
mov
add
mov
addr16
outsl
jnp
scas
jb
or
leave
dec
inc
sbb
loope
lds
push
mov
pop
sub
stos
movsl
and
icebp
xchg
dec
xor
jb
cmp
addl
lahf
aad
push
ret
adc
sub
cmc
jb
aam
sbb
je
adc
xor
inc
pop
sub
andl
fwait
sbb
daa
dec
mov
mov
adc
mov
pop
test
insl
leave
inc
movsb
inc
sbb
enter
dec
pop
call
lahf
lods
data16
ja
mov
or
inc
inc
ret
inc
sbb
add
and
xchg
jg
or
pop
das
or
mov
lods
xchg
pushf
jns
test
jle
xchg
cld
jl
mov
and
rorb
pop
jmp
and
insl
ljmp
mov
sbb
leave
imul
xchg
xchg
adc
lahf
subb
lahf
xchg
mov
sbb
ja
ss
sbb
aas
jno
add
sub
enter
or
lret
sub
sbb
test
popf
add
shrb
enter
or
mov
and
pop
jle
mov
or
inc
rcrb
cmp
xchg
repnz
clc
dec
xor
pop
pop
nop
mov
fisttps
xchg
mov
scas
imul
insl
out
in
xor
push
push
icebp
xchg
fistpll
jl
cld
lods
addl
push
adc
push
cmp
imul
cmpsl
fsubl
jne
in
test
movsl
repz
pop
movsl
repz
lods
popf
pop
adc
inc
xchg
push
pusha
jecxz
xor
add
adc
push
jae
mov
jo
adc
pop
or
movsl
cld
int
fnstcw
mov
push
mov
lods
js
mov
stos
jmp
or
in
out
mov
ffree
leave
js
cli
lods
stc
ja
mov
rcll
xor
add
hlt
mov
push
pop
pushf
outsb
lret
mov
mov
mov
fwait
xchg
mov
dec
mov
inc
xchg
cmc
sbb
sbb
pop
mov
pushf
mov
push
icebp
cwtl
mov
push
pop
push
je
mov
lret
push
cmp
fistpl
insb
int3
adc
and
movsl
fistpll
sub
sbb
inc
orb
cmp
xchg
enter
mov
add
adc
xchg
lea
popf
ret
xorb
and
adc
pop
pop
pop
adc
pop
test
mov
ficoms
sbb
push
sub
inc
fisttps
stc
loop
pop
jns
push
push
xor
lahf
mov
mov
jns
dec
xor
and
xor
cwtl
inc
aad
or
pop
stos
sbb
xor
cmc
jae
fldt
ret
loopne
xchg
sbb
daa
or
outsb
movsl
sbb
test
inc
lcall
adc
push
sub
inc
sbb
scas
xchg
mov
scas
mov
push
mov
inc
push
aam
inc
sub
push
rolb
adc
mov
fisttps
sub
mov
vprotq
sti
popa
jl
enter
push
xor
mov
xchg
mov
push
and
movsb
mov
mov
stos
jmp
es
jb
mov
mov
mov
icebp
stc
sti
mov
mov
xchg
pop
sub
add
lods
subb
inc
cltd
fsubrl
cwtl
or
sbb
mov
pop
test
test
inc
aam
dec
aas
mov
lahf
stos
adc
xor
stos
cmp
sbb
stos
outsb
cmpsb
add
push
ja
add
scas
ja
pop
sbb
call
inc
cld
lds
fst
in
cli
lahf
pop
cltd
push
rcrb
fimuls
sti
mov
imul
dec
out
xor
cltd
je
adc
pop
les
adc
jbe
ret
rcrl
jle
popf
jno
inc
mov
or
fwait
pop
cmpsb
lds
mov
or
sub
sbb
lret
enter
mov
cmp
xchg
dec
inc
jne
jnp
adc
mov
dec
and
mov
mov
pop
aaa
lea
jb
negl
or
iret
outsl
jmp
roll
add
test
aaa
xchg
and
imul
jno
cli
sbb
loope
mov
mov
xlat
or
loop
aaa
hlt
sub
in
cmpsb
mov
fwait
sti
pushf
rcll
jnp
add
lea
pushf
jae
cwtl
sub
adc
in
push
pusha
jo
sub
mov
jp
pop
pushf
dec
lret
cmp
mov
add
and
mov
or
mov
push
xlat
cwtl
stos
pusha
inc
xchg
and
sbb
arpl
add
xlat
mov
loop
mov
add
nop
es
enter
and
mov
pop
pop
inc
jmp
lea
movsl
jns
mov
jne
cmc
mov
mov
xor
or
and
push
inc
rolb
mov
rol
jmp
or
fst
int3
xchg
movsl
mov
mov
jno
lods
daa
push
jae
outsb
adc
and
mov
scas
push
xchg
cwtl
ret
xchg
sub
imul
adc
rcrb
pushf
sub
dec
addr16
leave
push
and
mov
pop
sub
cmpsb
mov
fistpl
push
xor
movsb
xor
pop
adc
cwtl
cmpb
sbb
xchg
leave
dec
mov
xchg
or
xchg
fiaddl
push
jmp
dec
mov
and
sbb
jns
ljmp
jns
test
int3
mov
push
aas
mov
mov
mov
adc
repz
and
cmp
xor
push
lods
mov
xchg
fs
pop
push
cmp
dec
push
loope
iret
imull
inc
arpl
xor
jle
jb
mov
mov
jb
pop
loopne
dec
inc
jmp
xor
sti
lds
inc
add
int3
add
pop
xor
stc
lahf
popf
icebp
push
in
jp
xor
cld
inc
jb
ja
in
nop
mov
scas
push
xchg
xchg
int3
repnz
or
hlt
push
dec
fwait
pop
das
xchg
dec
or
mov
dec
jae
cld
mov
popa
fs
sbb
arpl
repnz
nop
adc
or
inc
fidivl
fcmove
gs
and
test
and
inc
in
mov
sub
inc
jg
jg
stc
jmp
nop
pop
aad
or
jp
pop
in
dec
shrb
or
and
repz
dec
cmpsb
xchg
mov
xchg
ja
xor
clc
test
dec
mov
bound
xchg
dec
icebp
sarl
loopne
mov
dec
int
cmc
mov
repnz
jb
idivl
arpl
enter
loopne
xor
cmp
dec
cmpsb
sbb
or
aad
pop
cmp
xor
rcrb
xlat
aam
add
mov
ljmp
push
lret
jge
rcr
mov
test
sub
adc
test
stos
int
dec
ds
sbb
into
mov
addb
stos
movsb
fisubrl
mov
scas
push
mov
sbb
jmp
test
int
jbe
pop
dec
std
scas
adc
push
cwtl
js
lret
cmc
ret
iret
addl
sbb
rorl
mov
rcll
imul
mov
sub
sahf
jmp
std
cmp
outsl
int3
xor
jb
lret
mov
test
push
movsl
cmp
xchg
loope
ret
outsl
fwait
mov
mov
outsb
test
arpl
aam
shlb
in
xchg
dec
jo
push
cmp
test
out
out
mov
xchg
mov
fwait
cmp
sub
adc
sbb
or
jne
pop
pusha
push
aam
jbe
fwait
fs
cli
mov
push
pushf
out
into
sub
icebp
or
fsubrl
jl
cmp
sbb
ficoml
xchg
sbb
fs
lods
jno
lds
sbb
xchg
sti
ret
cmp
cmc
cmp
mov
xchg
bound
stos
jge
jo
mov
stos
aam
mov
jnp
inc
push
cwtl
and
mov
adc
pushf
repz
movsb
sarl
sarb
lods
imul
insb
xor
jne
jl
dec
inc
pop
ds
inc
hlt
cmp
mov
xlat
mov
lods
push
mov
xchg
sbb
ja
loope
jns
cwtl
push
sub
out
popa
aaa
pop
notb
cmp
lea
fbstp
mov
pop
and
mov
and
sbb
sub
mov
fisubl
iret
push
pop
xchg
lcall
test
fwait
push
lods
and
out
sbb
add
sub
ljmp
mov
insb
daa
xchg
jecxz
mov
push
push
jge
pop
lret
stos
xchg
sbb
cwtl
mov
add
negb
cmp
mov
jl
fmull
xlat
repnz
xchg
inc
sub
aas
cmpsl
push
js
mov
in
jne
addr16
sbb
push
mov
cmp
pop
cmp
adc
fs
pop
xchg
dec
popf
pop
dec
dec
lods
sbb
cld
push
lods
jno
imull
mov
std
add
std
sub
dec
mov
add
and
popf
stos
cmp
rcrl
lods
add
out
lea
mov
test
jo
adc
cmp
fsubl
mov
jnp
in
or
push
call
ss
ffreep
lret
lahf
std
aad
mov
repz
lods
fisttpl
inc
mov
daa
xchg
lds
loopne
sub
lret
inc
insb
push
pop
mov
jle
mov
lcall
pop
and
cwtl
aaa
les
mov
push
lods
shrb
test
and
xchg
cld
or
movsb
adc
nop
xor
cld
sub
and
or
mov
repnz
and
movsl
inc
mov
jae
pop
test
call
and
out
mov
ds
lret
xchg
shrl
and
cmp
jnp
and
daa
dec
mov
cmpb
stos
sbb
add
inc
sub
xor
test
pop
shlb
loop
into
pop
push
shl
mov
mov
fsubr
mov
mov
or
lock
subb
mov
adc
insl
movsl
xor
xchg
xor
ret
inc
scas
rcll
test
mov
push
adc
nop
mov
mov
mov
sbbb
mov
test
sbb
cli
and
nop
jg
sub
and
orb
xchg
pop
icebp
cltd
outsb
icebp
test
cmp
popf
sub
js
mov
dec
push
cli
cmp
mov
fstps
insl
ljmp
xchg
mov
mov
rorb
pop
xchg
cmp
jno
sbb
cmpsl
es
lea
pop
fsubs
daa
xchg
popf
iret
sbb
jecxz
data16
mov
pop
xchg
out
jp
and
test
lcall
adc
mov
mov
pop
lea
in
adc
xor
inc
mov
mov
cltd
jge
mov
xor
and
push
push
nop
xorb
mov
gs
arpl
jno
sbb
pop
mov
lahf
sbb
sub
in
xor
jl
call
jae
daa
sbb
inc
inc
cltd
pop
adc
and
lods
mov
xchg
push
sub
sarl
cld
pop
dec
pop
in
das
nop
incb
or
sbb
inc
cmp
inc
push
test
sbb
push
repnz
xor
out
jp
movsb
inc
outsl
movsl
inc
aas
jecxz
lret
hlt
jge
pop
aad
jp
repnz
jns
lods
add
cmpsb
cmp
out
or
scas
cmp
jecxz
mov
aas
gs
inc
mov
orl
aam
test
pushf
mov
pushl
cwtl
cmpsl
adc
jae
jae
sbb
mov
das
add
xchg
jno
jne
rcll
mov
adc
ret
jle
shlb
sti
cmp
jg
fwait
or
inc
fwait
mov
stos
les
adc
xchg
clc
aam
or
mov
push
push
inc
push
mov
push
mov
inc
fstl
pushf
add
lds
popf
mov
sarb
jge
jns
add
adc
xchg
mov
pop
rcrl
je
xchg
movsb
inc
jae
mov
xchg
jl
scas
dec
xor
dec
cmpsb
push
inc
rorb
ja
adc
mov
stc
fsubrs
jo
iret
sbb
or
aam
mov
cmpsl
mov
popf
inc
loope
icebp
lea
arpl
inc
fcomps
inc
mov
mov
inc
push
pop
pop
ljmp
and
ror
jne
fcomps
lcall
mov
mov
or
das
rcrb
sub
lret
fs
ret
out
scas
rcl
stos
lds
mov
lods
lret
mov
mov
jmp
aas
mov
popf
mov
cmc
lret
cmpsl
repz
les
xchg
jae
or
pop
dec
in
call
cmp
or
xchg
sbb
jnp
ficoml
enter
test
and
xchg
xchg
mov
pusha
mov
aas
xchg
dec
sbb
mov
or
pop
in
stc
lock
adc
lea
dec
cwtl
push
and
bound
jge
jns
push
and
adc
subb
scas
stos
sbb
cmp
and
jecxz
and
mov
pop
aaa
xchg
enter
and
stc
and
mov
mov
enter
xor
fiaddl
xor
pop
or
mov
outsl
arpl
add
fimull
outsl
stos
iret
xor
inc
cmovge
xchg
cld
fldl
inc
inc
adc
cmp
les
aad
dec
mov
insl
adcb
test
inc
mov
cld
lods
mov
inc
ja
push
inc
in
lock
xchg
push
mov
add
or
in
js
xchg
jae
js
cmpsb
fs
mov
or
push
sub
cmp
test
nop
int3
test
cltd
ret
mov
incl
cmp
jo
mov
es
std
stos
jle
or
imul
jnp,pt
cmp
mov
dec
mov
xchg
ljmp
insb
mov
pushf
scas
outsb
sbb
pusha
mov
popf
icebp
push
rcrl
pop
lret
mov
hlt
xor
and
xor
xchg
jae
pushf
push
scas
or
inc
inc
aad
mov
inc
mov
je
add
test
icebp
mov
pop
pop
bound
bound
ljmp
cmc
shrb
jbe
ljmp
xchg
rclb
sub
dec
adc
push
dec
adc
out
stos
lods
hlt
cmp
outsl
dec
data16
movb
cld
jmp
outsl
movsl
cltd
mov
mov
and
dec
jo
and
lret
push
movsl
or
sub
loope
fldcw
daa
test
inc
bnd
lods
mov
and
sub
lcall
lds
fldl
out
ja
push
daa
xchg
int
testl
test
sbbl
in
test
pusha
ret
sbb
lea
test
lret
mov
jb
out
mov
in
addb
mov
int
incb
sub
and
sahf
test
shr
or
xor
add
lret
lea
mov
adc
sub
sbb
sbb
mov
ljmp
push
mov
push
fwait
dec
cwtl
mov
cltd
dec
sbb
xchg
nop
dec
xchg
add
lods
mov
inc
lahf
stos
xchg
jge
rol
add
cltd
mov
inc
gs
pop
into
dec
jl
cs
pop
lods
cltd
pop
sbb
inc
push
and
pop
test
flds
loopne
movsb
jge
call
popf
lea
jge
fisttpl
pop
mov
or
mov
mov
pop
ror
mov
pop
dec
mov
inc
mov
sbb
and
xchg
mov
loopne
lahf
movsb
pop
jg
repnz
std
and
mov
test
icebp
sbb
popa
lret
mov
or
jg
imul
add
es
mov
push
xchg
dec
sub
dec
fcompl
jl
fwait
aam
leave
inc
mov
std
aas
mov
mov
cmc
or
arpl
mov
adc
ljmp
inc
sbb
mov
sbb
rcrb
data16
test
cmp
test
jb
jbe
mov
xchg
add
jae
dec
adc
cmpsl
xchg
mov
fwait
push
repnz
and
sub
xchg
mov
lds
mov
push
cmp
aas
int
mov
pusha
rcr
cmpsl
xchg
loop
pop
pushf
fists
inc
push
and
fistl
inc
pop
sbb
cwtl
dec
xchg
adc
cmp
adc
imul
ljmp
int
pop
inc
test
movsl
call
mov
lret
in
pop
push
cmc
sbb
insb
inc
jo
lea
jnp
jecxz
xlat
adc
push
xor
add
fistpl
pop
mov
add
repnz
jb
adc
sar
lea
daa
ds
push
inc
sbb
adc
jne
hlt
stos
mov
mov
pushf
dec
push
stos
sbb
imul
test
std
aaa
push
scas
cli
fs
fisttpll
or
out
jae
adcb
ret
or
or
xor
dec
fisubrs
pop
outsb
mov
cli
push
mov
mov
fs
pop
rcr
loope
cwtl
frstor
jp
das
je
leave
sbb
decb
cld
mov
inc
sbb
push
or
enter
or
push
dec
xor
xor
jle
or
shrb
jp
out
movsl
mov
sub
fldenv
adc
pop
fsubp
fadds
cmpsb
inc
popf
xchg
pop
jle
pop
sub
inc
push
dec
lods
cltd
and
fisubrs
enter
aad
insl
sub
mov
shll
mov
mov
sti
mov
clc
sti
pop
pop
sbbb
jecxz
pop
mov
dec
pop
mov
enter
push
fs
xchg
mov
cmpsl
mov
addr16
test
sub
xor
mov
test
pop
jmp
pushf
lahf
mov
fs
mov
je
xchg
test
adc
sub
mov
mov
fcoms
inc
stos
adc
inc
bound
sub
cltd
test
add
andl
push
stos
sbb
and
leave
sbb
shlb
rcll
pop
mov
or
sarb
pop
dec
je
push
cwtl
xchg
sahf
ret
popf
mov
stos
cmp
pop
push
lock
arpl
cs
xor
xchg
mov
add
cwtl
out
push
adc
fwait
mov
jmp
sbb
mov
test
push
enter
sub
sbb
push
jae
jl
ds
jnp
mov
sbb
mov
aad
mov
mov
add
iret
imul
testl
adcb
lods
ret
lahf
stos
adc
fwait
mov
inc
xchg
mov
stc
icebp
mov
xor
call
push
dec
xchg
jae
repz
inc
mov
xchg
scas
mov
mov
mov
pop
imul
stos
loopne
lahf
push
xchg
mov
jnp
mov
inc
sbb
aas
jo
xor
arpl
add
std
mov
push
push
dec
and
rol
xor
imul
jbe
mov
iret
stc
loopne
cmp
mov
pop
js
adc
or
cmp
pop
mov
sub
mov
jmp
xorb
inc
push
fadd
mov
sub
lret
mov
sub
lea
xor
repz
cmp
lret
xchg
or
imulb
mov
and
lea
push
mov
rorb
lret
movsl
dec
xchg
sbb
mov
fstps
push
sub
mov
mov
mov
popf
fisubs
cmpsl
xchg
adcb
shlb
imul
scas
mul
test
push
fldl
dec
dec
popf
out
lcall
stc
lods
fists
fucomi
jle
cmp
ret
andl
rcrb
xchg
mov
inc
outsl
jne
stc
incl
sbb
fsubs
push
aam
aaa
inc
jge
stos
je
lea
vsubsd
out
dec
xlat
out
shr
push
out
or
cmp
add
jp
pushf
mov
loope
push
pop
aad
or
fwait
push
stos
rcrl
adc
pop
push
xor
leave
fdiv
cmpsl
aad
stc
sti
mov
adc
arpl
cmp
pop
loop
sarb
fstl
repnz
aam
pushf
mov
lds
dec
and
ficompl
jb
dec
dec
in
test
ja
sti
in
in
sbb
push
push
push
jae
dec
les
shlb
dec
fnstcw
dec
cmp
addb
add
jns
xchg
jae
sub
pop
mov
add
mov
push
or
sbb
js
sbb
leave
cmc
or
push
xlat
sbb
jle
cwtl
jp
sti
jbe
sbb
fistl
sbb
adc
frstor
jno
jmp
add
dec
test
stc
add
xor
pop
testl
mov
mov
lea
movsl
rclb
xor
imul
hlt
imul
add
dec
mov
fsubrs
fucomip
push
adc
out
mov
je
xchg
mov
pop
sbb
push
sbb
mov
inc
sbb
sbbb
jmp
insb
mov
jb
lcall
push
fwait
daa
pop
sub
repnz
in
mov
in
cmp
adc
lea
add
sbb
test
xchg
pop
outsb
dec
pop
mov
mov
cmp
fsts
movsb
arpl
or
sahf
adc
ret
jge
or
adc
ss
dec
and
push
and
or
dec
inc
movsb
sti
sbb
add
inc
sub
pop
jl
cmp
push
call
popf
inc
or
jae
lcall
andl
movsb
sarl
inc
in
adc
fwait
inc
dec
mov
mov
sub
cmp
dec
movsb
xchg
jmp
sahf
adc
test
aam
arpl
rcrb
xorb
sti
fucomip
adc
jo
cmp
rol
inc
lds
adc
fs
test
cmpsb
popf
push
ss
push
fst
dec
insl
mov
mov
ss
pop
popf
into
add
jmp
and
sbb
xchg
ficompl
push
test
xchg
test
push
inc
pop
lret
or
mov
inc
divb
ljmp
sarb
scas
fiadds
scas
dec
js
push
mov
and
fisttps
jecxz
stos
rolb
adc
mov
dec
testl
repz
popf
add
insl
and
adc
jp
aam
fidivs
sub
pop
adc
jb
xchg
push
pop
out
in
movsl
mov
inc
dec
mov
incl
pop
jb
nop
jne
lcall
mov
fwait
out
jbe
cwtl
repnz
inc
sahf
testb
mov
pop
push
inc
lods
lock
ret
aas
lods
jnp
jmp
enter
add
mov
sub
imul
lahf
mov
movsl
mov
add
xor
in
pop
push
ror
xchg
in
xor
cwtl
adc
cld
pushf
jnp
jmp
sbb
and
adc
dec
outsl
aad
jno
inc
shrb
std
jmp
push
fwait
xchg
lahf
jnp
xor
fstps
ret
xor
sarb
jge
popa
or
sbb
and
popl
and
jae
lea
je
or
xchg
mov
pop
cmp
lea
xchg
iret
jp
fwait
lea
mov
rcll
addl
mov
jp
fsubl
cmpsl
xchg
and
mov
xor
add
cmp
dec
daa
pop
adc
ret
xchg
call
hlt
push
fists
shrb
call
adc
lds
adc
loope
dec
lret
add
cwtl
mov
jbe
loop
hlt
sbb
add
pushf
mov
sub
test
sub
lea
and
aas
adc
sahf
fisttpll
pop
mov
inc
lret
test
cmp
addb
lods
test
lock
aam
fwait
nop
std
pushf
mov
sbb
inc
insb
inc
pop
fstl
mov
add
icebp
pop
pushf
mov
frstor
or
cmp
mov
xchg
sbb
shll
stc
lret
inc
xchg
imul
pop
mov
stos
fsubrs
loopne
xlat
sub
lret
cltd
rol
dec
jb
bound
pop
mov
push
or
incl
cld
shr
stos
lock
stos
stos
or
out
mov
push
xor
mov
fwait
std
pop
push
add
mov
sahf
lock
mov
jge
gs
add
mov
mov
push
andl
mov
sbb
test
hlt
push
aas
bound
stos
xor
jo
or
mov
stc
dec
cmp
xor
cwtl
sub
fsubrs
dec
fmuls
or
test
inc
mov
mov
jns
jns
xor
sub
cmpsb
lea
cmp
xor
xchg
repz
pushf
push
fstpt
jne
xor
xchg
mov
or
cmp
push
fldenv
cmp
js
push
mov
fisttpll
push
and
xlat
aas
imul
loopne
pop
cmp
shlb
mov
push
data16
in
mov
sbb
xchg
jo
cmp
dec
lds
mov
dec
sahf
sahf
fistpl
xor
push
pushf
loopne
nop
pop
mov
xlat
add
clc
xchg
add
inc
sti
incl
xchg
xchg
inc
mov
push
cmp
shll
pop
mov
mov
push
mov
sbb
dec
and
dec
movsb
test
add
sub
lret
loop
mov
rol
jb
sbb
adc
pop
test
xchg
movsb
xchg
clc
fcmovnu
lret
xor
dec
jae
frstor
pop
xchg
sub
mov
pop
ret
pop
mov
insb
inc
fwait
leave
dec
daa
sub
dec
dec
cmp
testl
aad
dec
enter
push
and
jbe
fucomp
cmp
or
insb
jbe
fidivl
or
movsl
dec
hlt
ds
xor
cmp
and
and
mov
dec
xlat
incb
out
push
xor
mov
jmp
sbb
pop
gs
popf
clc
sub
adc
div
stos
aam
lea
or
push
dec
repz
fmull
test
cltd
pmaddwd
mov
mov
mov
lds
imul
lods
lea
cltd
cmp
mov
xchg
mov
dec
je
test
xor
sbb
popa
add
jge
pop
pop
cmpsl
rcrl
mov
lret
adc
rcl
lods
pop
test
leave
pop
mov
scas
dec
in
xchg
cld
sbb
adc
out
js
fcmovnb
mov
subl
gs
inc
icebp
xchg
lock
jp
mov
push
mov
shll
jns
sti
out
mov
ret
inc
jmp
mov
cltd
enter
mov
add
lods
rcl
iret
mov
adc
jp
les
pop
ss
mov
jmp
lret
push
xor
inc
push
mov
repz
gs
jne
lahf
dec
jb
fistps
lret
fwait
stos
jecxz
dec
pop
adc
dec
adc
mov
push
xchg
add
cmpsl
repz
fsubrl
div
negb
xor
mov
decb
push
push
jne
in
gs
dec
add
pop
lds
xchg
cmp
xchg
adc
test
add
mov
das
xchg
stos
std
sbb
aad
inc
push
cmp
fstps
movsl
add
mov
sub
pop
dec
popa
xchg
lahf
leave
lret
adc
push
jecxz
arpl
jbe
adc
adcl
mov
dec
fdivl
cld
push
xor
mov
lret
test
dec
dec
popa
cmp
mov
movsl
xchg
sbb
mov
mov
inc
fiadds
xlat
cld
xorl
inc
incl
outsb
imul
mov
adc
imul
inc
mov
cmc
push
andl
mov
cmp
cmc
inc
adc
mov
or
jmp
fs
cltd
imul
adc
mov
adc
ret
jne
cmp
jne
dec
sahf
pushf
xchg
sahf
adc
test
mov
outsb
jne
movsb
shrl
jnp
popf
xorl
pop
dec
inc
dec
popf
lret
test
js
pop
int3
sub
pop
mov
and
jbe
sub
jbe
in
loope
lahf
pop
popa
mov
lods
push
sbb
mov
and
sbb
and
stos
cli
jnp
xchg
inc
pop
inc
mov
in
pop
mov
or
sbb
push
rorl
inc
inc
out
ja
cmpsb
jge
jle
jbe
or
and
in
ret
mov
pop
arpl
cmp
les
sbb
hlt
imul
fists
aad
test
cmp
adc
xchg
push
cmp
subb
movsl
dec
sbb
xchg
jmp
movsl
fists
test
inc
jno
pop
jp
int
out
sbb
sub
or
int3
in
iret
lahf
cwtl
mov
sub
test
mov
nop
pop
sbb
insb
daa
jbe
ljmp
pop
xor
pop
sbb
jno
xchg
add
jae
mov
stos
inc
sarb
cwtl
push
xchg
sbb
push
push
sti
add
mov
movsb
xchg
dec
jb
fistl
mov
movsl
inc
les
andb
jo
pop
clc
jmp
cmc
je
jbe
or
push
jmp
movsb
push
jns
out
xchg
pop
inc
sbb
inc
pop
add
mov
test
fdivs
xchg
inc
xor
mov
pop
push
mov
pop
jl
xchg
dec
adc
daa
cmpb
mov
dec
aam
push
rcrb
inc
sbb
lret
inc
mov
cwtl
mov
mov
add
movsl
dec
and
mov
cmc
cld
fnstcw
and
xchg
flds
aaa
or
in
push
sbb
inc
test
aam
stos
aam
push
sbb
sti
pop
sbb
in
mov
xor
push
mov
sbb
inc
sub
mov
cltd
push
into
fmull
inc
sbb
xchg
or
jmp
inc
pusha
push
nop
lcall
mov
mov
cmpsl
std
cmp
cmp
pop
cld
jo
rorl
mov
and
xrelease
xchg
fisttpl
cmp
mov
sbb
incb
int3
mov
je
xor
cwtl
and
mov
dec
sbb
or
aad
jp
mov
inc
cmp
testl
leave
mov
pop
loop
push
ss
sbb
scas
scas
lret
adc
inc
orb
sub
inc
orb
or
dec
add
push
mov
pop
lahf
xor
push
dec
mov
and
xchg
iret
sbb
cmpsl
and
push
mov
popf
dec
sbb
cld
imul
test
push
pop
and
lret
ret
out
les
stos
lds
cltd
mov
shrl
mov
cltd
mov
jnp
rcrb
cmp
aad
and
push
in
imul
out
js
cld
xchg
stc
add
xor
inc
sbb
orl
mov
jl
int
sbb
xchg
out
inc
add
mov
mov
cmc
hlt
xlat
sub
inc
fbld
jmp
sub
inc
add
mov
sbb
mov
lea
hlt
jl
dec
mov
loope
mov
int
push
mov
std
fsts
popf
negl
negb
inc
adc
cwtl
xor
clc
sti
pop
mov
ret
cmpsl
pop
pop
jnp
dec
sti
xchg
push
add
mov
sahf
sbb
or
pop
adc
negb
sbb
pop
pop
pop
lods
dec
pushf
cmp
mov
xchg
les
mov
daa
insl
adc
sbb
jge
sbb
xor
mov
rclw
jns
addr16
rcrl
cwtl
cmp
jns
mov
jo
or
fs
cmp
mov
idivb
or
or
cld
lcall
mov
fwait
jge
lretw
ljmp
xchg
jbe
add
pop
fbld
imul
jb
sbb
aas
iret
sbb
sbb
aaa
sbb
jbe
pop
adc
aas
adc
dec
cltd
xchg
out
daa
adc
jl
pop
icebp
pop
das
or
mov
pop
or
cmp
pop
xor
add
mov
pop
add
cmp
pop
jno
mov
fcoms
ss
pop
mov
jg
cmp
inc
fcom
int3
addr16
mov
pop
lock
xor
lods
push
adc
xchg
lds
sti
mov
mov
jmp
in
insb
push
cmp
sbb
hlt
outsb
push
mov
clc
push
arpl
push
mov
loopne
push
cmp
fadds
inc
in
push
mov
call
js
gs
bound
sub
sarb
jmp
ret
add
stos
leave
roll
imul
mov
inc
je
cmp
inc
jbe
jp
mov
ret
sahf
xchg
sub
fs
or
fadds
mov
mov
shlb
jl
mov
mov
jne
dec
inc
sbb
rolb
push
mov
rcrb
pop
add
lods
iret
fucomip
and
inc
inc
mov
mov
jecxz
mov
mov
pop
jg
pop
gs
xor
into
dec
mov
nop
jb
xlat
stos
test
xor
sub
movsb
stos
test
into
imul
sbb
roll
cmp
pop
or
push
mov
mov
dec
add
stos
divb
pop
lock
adc
addr16
cmpsl
sub
jno
sub
jle
fsubl
ja
mov
mov
adc
mov
mov
test
out
addr16
inc
pop
cmpb
mov
mov
or
cli
sub
xor
mov
lods
ret
jp
rcl
cmc
cmpsb
pop
mov
jp
mov
pushf
sub
lret
mov
xchg
hlt
xor
mov
add
shll
pop
stc
pop
das
pop
pop
jae
xchg
rcr
xor
lods
sub
sub
lds
stc
imul
cmpsl
std
mov
gs
lods
or
cld
ljmp
xchg
lret
bound
and
fisttpll
je
test
sbb
xor
dec
or
lock
cmp
roll
ret
out
push
jmp
mov
pushf
xchg
dec
xor
mov
cs
inc
and
stos
xor
xor
movsb
inc
sbb
dec
jl
shll
jl
popa
clc
push
pusha
cmpsb
or
sti
rclb
dec
xlat
mov
push
xchg
mov
push
daa
inc
mov
jne
cmpsb
shll
mov
xlat
adc
add
or
push
faddp
je
jmp
adc
and
sbb
xchg
push
adc
lret
xorl
xor
mov
jnp
or
clc
inc
add
jne
or
andl
add
mov
cld
xor
in
movsl
mov
jno
mov
mov
mov
sbb
add
inc
mov
int3
movsl
stos
test
mov
xor
mov
xor
call
fdivr
mov
insl
cmp
dec
dec
xchg
sbb
push
dec
cmpsl
out
adc
cmp
outsb
add
mov
pop
xor
movsb
inc
sbb
dec
jl
shll
jl
popa
clc
push
pusha
cmpsb
or
sti
rclb
mov
mov
adc
arpl
outsb
insb
imul
pop
mov
or
out
sti
xor
cmpsb
test
xor
out
aam
fcoms
daa
fisubrs
mov
and
rcr
mov
int
dec
stc
mov
loopne
mov
repz
add
fnstenv
fldenv
inc
pop
fsubr
ja
mov
add
push
mov
dec
fcoml
and
mov
ds
sub
test
scas
sbb
push
ret
push
mov
dec
mov
xor
or
lret
jge
outsb
cmpsb
sub
xor
mov
scas
fmull
sub
add
call
mov
xchg
mov
sub
mov
pop
scas
rorb
xorl
xor
mov
out
or
xchg
mov
pop
mov
cmpsb
add
lcall
lods
jns
xchg
out
or
push
push
cltd
icebp
mov
mov
or
inc
mov
mov
sahf
int
das
xor
out
mov
cmp
popf
mov
pop
icebp
cmp
mov
sbb
ret
sbb
pop
sub
mov
outsl
test
sbb
mov
pop
leave
cmp
xor
aad
push
fwait
outsl
outsl
mov
pop
mov
iret
sbb
imul
inc
pop
popf
or
xor
cwtl
nop
mov
xchg
mov
pop
xchg
pop
dec
push
enter
imul
dec
gs
aaa
pushf
dec
xchg
jp
mov
jno
lods
sbb
sti
inc
sbb
in
jmp
cmpsl
lcall
lds
sbb
xchg
mov
fnsave
and
adc
ret
inc
in
insb
jbe
push
mov
jg
jecxz
cmc
dec
fs
push
cmc
jp
push
cmp
mov
add
fisubrs
adc
ret
mov
xchg
test
sti
and
or
push
add
inc
stos
jecxz
inc
andb
xchg
or
fsubrs
cwtl
pslld
in
in
xor
pop
stos
push
test
mov
cltd
clc
mov
ficomps
jg
sub
repnz
std
cmc
adc
inc
scas
xchg
lcall
les
fldcw
lods
pop
xchg
xchg
ret
into
mov
mov
lret
in
and
mov
dec
mov
add
fidivl
pop
repnz
or
hlt
pop
addl
mov
sub
mov
mov
jmp
fcomp
mov
xchg
pop
pop
out
and
cwtl
mov
mov
mov
out
cltd
push
repz
push
clc
xchg
dec
pop
jmp
mov
pop
sbb
hlt
xor
sti
enter
inc
sbb
lret
out
mov
push
hlt
loopne
xchg
fdivl
mov
ret
pop
dec
fldl
adc
push
push
push
jg
mov
adc
mov
pop
sub
pop
cli
idiv
imul
arpl
mov
decb
into
xor
test
mov
push
xchg
dec
push
arpl
dec
push
cmp
jns
jle
push
jae
mov
lret
xchg
cmp
fidivs
into
sbb
push
pop
iret
not
mov
inc
jae
aas
data16
or
push
lods
call
les
repz
addr16
or
mov
stos
loopne
leave
sub
les
dec
mov
jno
xchg
and
xor
mov
cmp
jecxz
and
int3
sub
inc
cmc
mov
adc
into
pop
into
rclb
dec
lret
loope
mov
sbb
add
aas
mov
jmp
pop
mov
push
int
ret
sbb
subb
dec
mov
dec
xor
arpl
cs
xor
sub
fldcw
lret
xchg
stos
pop
mov
pushf
jae
into
test
lods
jne
dec
punpcklwd
pushf
jg
push
mov
jle
mov
jnp
or
lcall
pop
xchg
dec
xor
mov
stos
fisubrs
icebp
add
in
inc
out
das
nop
pop
sub
dec
mov
mov
xchg
sahf
dec
mov
adc
adc
push
push
in
cltd
imul
shl
jb
pop
cmp
jge
gs
and
addl
mov
leave
push
and
mov
into
dec
adc
stos
lret
cli
aad
or
nop
scas
cmp
fidivrl
xor
stos
cmp
fsubs
rorl
xor
cmpsb
pop
dec
lods
out
jae
fisubs
mov
shlb
das
pop
dec
icebp
cli
cmp
dec
leave
movsl
mov
sahf
pop
arpl
push
xor
insb
pop
add
cmpsl
leave
or
hlt
xchg
call
js
outsb
es
lret
and
and
jp
mov
push
shrl
mov
inc
dec
rclb
testb
loop
and
jb
push
test
xor
sbb
pop
pop
or
mov
jmp
pop
andl
andl
sbb
jns
or
mov
xchg
push
cld
je
out
push
mov
ret
adc
mov
adc
mov
cwtl
inc
lahf
or
dec
icebp
pusha
sbb
leave
adc
andb
movl
loop
fwait
adc
lahf
lods
mov
fdivl
test
jnp
aad
repz
mov
es
mov
add
outsb
xchg
jecxz
mov
add
imul
iret
mov
add
xor
les
fidivs
es
or
or
push
stc
out
add
pop
mov
idivl
int
push
adc
popf
stos
arpl
fcomip
ja
jle
xchg
dec
mov
lret
and
imul
adc
sub
jne
sbb
sbb
imul
dec
shlb
dec
pminub
bnd
ret
jecxz
fnsave
sub
xor
jae
mov
adc
js
add
cmpsl
gs
lods
hlt
pop
cmp
mov
pop
add
popf
movsl
lcall
movsb
jp
dec
inc
das
fnstenv
ret
fsts
clc
mov
mov
mov
cld
jp
je
shll
popf
push
mov
jae
hlt
stc
mov
dec
sahf
mov
cli
insl
or
sti
xor
or
sub
ret
loopne
jno
add
cli
mov
in
andl
fadds
lock
cmp
sbb
push
push
cmp
lret
mov
enter
dec
add
xchg
jno
push
jno
pop
sub
lret
ffree
jge
cmp
mov
xchg
cmpsb
xchg
test
mov
push
dec
insl
rep
fnstenv
xchg
stos
fnsave
sbb
jmp
mov
hlt
jno
fldenv
repz
add
faddl
outsl
or
push
mull
cmpsl
js
jo
std
inc
frstor
jnp
xor
dec
mov
mov
xchg
cld
add
inc
xchg
ljmp
lds
je
adc
jecxz
movsl
add
pop
arpl
lods
ljmp
aaa
lcall
test
or
mov
mov
ficomps
rclb
repz
loopne
sarb
mov
xchg
lret
jecxz
popa
xlat
cmpsl
add
mov
nop
pop
push
add
pop
fs
push
stos
sub
sbb
bound
sbb
dec
sbb
out
int3
push
clc
sti
cmp
push
push
gs
sqrtps
sbb
lods
in
jbe
stos
adc
mov
adc
dec
adc
stos
dec
mov
shrb
enter
or
fucomi
in
jecxz
push
mov
mov
xchg
in
divl
addb
imul
repnz
sub
sbb
jge
xchg
and
fiaddl
jb
mov
sbb
pop
ret
fldenv
inc
cmp
int3
mov
add
rolb
pushf
push
pop
push
rcll
lcall
mov
mull
and
call
cmp
mov
cmc
clc
sti
ja
mov
or
inc
mov
out
mov
jne
mov
mov
or
out
or
push
jne
dec
and
test
dec
sbb
inc
mov
aad
jae
mov
cwtl
adc
push
movsl
jge
dec
xchg
cltd
adc
jg
or
add
imul
imul
push
add
xchg
mov
fisubrs
xchg
test
cmc
out
and
jp
insl
aad
xchg
adc
cmpsl
adc
add
dec
mov
sbb
scas
ret
lods
nop
jge
pop
adcl
cmpsl
rcrb
push
sbb
std
cmp
lea
inc
mov
xlat
pop
mov
push
pop
and
mov
cmp
ret
faddl
and
sub
pop
fcmovnbe
call
loopne
rcl
lea
movl
xchg
aas
lock
sarb
mov
shlb
inc
cli
mov
xor
or
rcrb
stos
adc
jnp
pop
sub
dec
mov
pop
add
pop
and
pop
fucomp
jae
mov
lret
pop
pop
push
add
lds
arpl
stos
sub
push
push
lret
cmpsl
push
fs
aad
dec
mov
mov
test
pop
inc
scas
aad
pop
loope
pop
cmp
bnd
xchg
sbb
shlb
repnz
andl
call
adc
in
inc
jl
sbb
fs
je
ret
cmpsb
jge
xlat
sub
mov
xchg
incb
shlb
mov
jo
out
movsb
cmp
push
adc
loope
or
dec
inc
xor
push
adc
fnstenv
fisubrs
or
cltd
pop
or
repz
adc
mov
repz
or
mov
push
jnp
stos
xor
or
test
repz
and
xor
push
mov
or
dec
xor
lods
cmc
lret
inc
jmp
sbb
mov
mov
fcoml
in
mov
xchg
test
push
cmp
sub
sub
inc
fnsave
arpl
jbe
push
and
adc
push
push
fwait
mov
pop
test
push
jle
fldenv
push
adc
xchg
xchg
fdivs
out
shlb
lcall
pop
jae
sbb
adc
in
and
sbb
loop
test
cs
cmp
xor
add
gs
test
pop
sbb
xchg
mov
cmc
push
inc
int3
enter
lcall
xor
push
stos
enter
mov
loopne
pusha
scas
mov
pusha
sarl
jo
cmp
mov
outsb
stos
push
jne
pop
xchg
jp
pop
push
jg
mov
sub
and
sti
stos
les
jmp
lcall
shr
cli
sbb
test
jle
pop
mov
inc
mov
pop
mov
shlb
inc
scas
mov
dec
cmp
fdivrs
gs
fs
push
inc
lock
fwait
mov
pop
movl
movsb
and
gs
jnp
rcr
fsubrs
cli
fistpll
pop
push
add
mov
jp
dec
nop
sub
dec
jbe
sub
cmp
or
dec
cltd
leave
xchg
ljmp
push
mov
enter
mov
rcrl
fmull
add
int
cmp
iret
add
jbe
hlt
lods
ja
cmc
mov
pop
pop
fwait
sub
or
fsts
push
mov
mov
or
push
dec
into
inc
sahf
mov
inc
add
lods
roll
inc
sbb
jno
or
xchg
int
xor
mov
jmp
sahf
testb
clc
sub
and
mov
sub
cmpsb
aaa
scas
inc
xor
push
push
xor
arpl
mov
idivb
int
fisttpl
adc
jns
leave
cwtl
or
mov
inc
arpl
inc
jmp
outsl
add
push
sti
add
rclb
fdivr
xor
jle
add
xor
je
mov
xchg
inc
inc
imul
dec
aam
xacquire
xchg
cmp
test
mov
dec
xchg
sbb
testb
mov
mov
enter
hlt
in
push
popa
jb
aam
shlb
inc
jl
sub
movsl
pop
sbb
lods
pop
mov
gs
hlt
inc
into
in
jae
sbb
jp
icebp
lods
cmpsl
insl
mov
test
cmp
xchg
pusha
xor
lock
pusha
ja
scas
sbb
or
lods
icebp
xlat
stos
enter
mov
test
mov
sbb
and
xor
scas
xchg
in
jbe
mov
or
ja
mov
call
push
mov
stos
pop
roll
stos
xchg
stos
jo
mov
cmp
mov
adc
cmp
lahf
jns
rolb
pop
adc
incb
push
adc
andb
jl
pop
jo
mov
daa
xchg
int
sub
mov
pop
xchg
lcall
mov
test
fnstenv
std
inc
fs
fnstenv
sbb
test
sbb
and
sub
fwait
daa
sarl
das
int
aas
inc
or
pop
xor
pop
mov
scas
cmp
ds
cmp
fisubrl
xlat
add
int3
shll
adc
xor
aaa
enter
pop
xor
xlat
adc
inc
cld
shrl
dec
aaa
pop
lea
mov
popa
nop
dec
je
or
push
cmp
pop
pop
sub
pop
mov
hlt
adc
xchg
inc
inc
dec
push
les
xchg
fs
in
je
pop
daa
test
gs
xchg
nop
lods
idivl
bound
jle
ljmp
sbb
and
mov
cmp
mov
dec
cmp
jp
fst
mov
adc
mov
fld1
jb
subb
cmp
repnz
jle
movsb
adc
aam
popf
es
mov
dec
mov
mov
sub
fdivs
scas
cmp
adc
mov
imul
mov
nop
iret
add
mov
mov
mov
nop
ds
faddl
filds
leave
rorb
imul
je
mov
int3
xor
movsb
aaa
rcr
cli
fs
jle
test
dec
mov
sub
scas
xchg
stos
jge
cmpsl
mov
inc
lds
and
test
xor
loope
je
es
and
jmp
addl
cmp
push
mov
pop
aad
pop
xor
add
popl
adc
test
icebp
add
movsl
jp
cmp
mov
sub
fldt
arpl
mov
cmp
mov
mov
inc
fnstsw
mov
je
cmp
int
mov
rorl
sahf
mov
aad
cmp
call
fldenv
xor
fnstenv
stos
cmpsb
cmpsl
mov
fmull
lods
xchg
movsl
add
int3
in
int
jle
arpl
mov
add
sub
pop
pop
jo
and
mov
inc
xchg
movsb
into
popf
jge
outsb
shrl
xor
bound
xchg
inc
scas
xchg
out
popf
stc
jge
jae
pop
fs
push
pop
mov
cmp
sbb
mov
adc
sbb
int3
sti
cmp
push
icebp
jnp
and
jo
xchg
xchg
incl
mov
movsb
scas
bound
push
mov
mov
hlt
jo
pop
repz
out
dec
pop
mov
jnp
and
mov
push
ficomps
mov
shlb
aas
dec
adc
or
cmpsl
ficomps
ja
or
movsl
inc
sbb
jno
call
push
inc
adc
fdivs
dec
lahf
pop
mov
add
adc
dec
ss
shlb
cwtl
lret
inc
sbb
adc
inc
mov
sub
shl
lret
adc
push
mov
xchg
pop
scas
jno
add
pop
andb
stos
inc
outsl
in
xor
and
xchg
stos
jae
mov
mov
dec
iret
sbb
arpl
mov
jle
or
add
subl
jl
mov
sub
adc
fsubrs
lock
jecxz
mov
test
ret
sub
jp
adc
pop
nop
js
ret
enter
enter
dec
pop
test
iret
mov
shrd
xchg
fdivrs
je
sub
dec
inc
or
push
jns
pop
adc
movsl
and
in
loopne
inc
inc
sarl
syscall
pop
pop
test
cmp
scas
mov
jmp
fmul
mov
aad
xchg
int3
adc
repz
xor
mov
rep
fst
lret
pop
fstpl
and
dec
sub
jno
jl
in
pop
data16
cmp
pop
sub
lret
adcb
pop
jle
and
movsb
sub
repnz
fwait
lods
ss
mov
sbb
mov
lahf
scas
mov
je
inc
fwait
lret
sbb
jmp
push
push
mov
add
mov
mov
cwtl
sbb
movsb
inc
xor
fsubs
and
pop
jns
aaa
fldt
int
jb
out
adc
sbb
push
inc
push
mov
xorb
inc
mov
ret
mov
jmp
add
mov
xchg
jbe
or
jmp
mov
pop
jecxz
jmp
sbb
scas
pop
pop
ret
mov
xor
jp
sbb
sbbb
cmc
add
dec
cli
jae
imul
popf
push
xchg
pop
pop
mov
sahf
lcall
push
ret
mov
xor
xchg
aas
jae
pop
into
imul
xchg
or
xor
inc
test
aas
subl
es
out
shrl
leave
fldcw
and
in
int
mov
std
and
push
cwtl
add
or
call
les
popf
jmp
ret
mov
sub
mov
popf
mov
icebp
xlat
iret
cmc
insl
pop
mov
lea
xchg
int3
iret
pop
mov
sbb
mov
inc
sbb
leave
sbb
dec
fdivl
jbe
adc
flds
push
mov
clc
mov
mov
mov
push
add
sarl
lds
cmpb
test
mov
xor
jl
stc
xchg
into
mov
jnp
sub
xchg
pusha
pop
sbb
add
push
movsb
and
test
pop
in
mov
arpl
scas
arpl
mov
in
pop
data16
mov
mov
push
pushf
imulb
jg
sub
aaa
dec
xor
push
mov
xor
xorl
shl
mov
xlat
jg
jge
xchg
ljmp
xchg
loopne
lds
jecxz
add
inc
push
sbb
or
xor
mov
jecxz
cwtl
dec
cmc
and
dec
and
pushf
sub
lret
pop
push
mov
jne
mov
fwait
fninit
test
inc
inc
outsb
xchg
iret
cmc
adc
or
push
les
mov
jmp
lret
xchg
daa
dec
mov
mov
push
mov
pop
or
cmpl
sbb
or
loope
jo
sti
mov
inc
js
rcl
add
dec
push
hlt
xor
adc
test
xchg
leave
xchg
dec
sbb
inc
lahf
arpl
push
push
in
jl
dec
jbe
je
shrl
jnp
adc
pop
sub
outsb
xchg
sbb
test
pop
hlt
push
mov
aaa
push
pop
mov
xor
mov
pop
cmp
mov
mov
push
mov
push
ss
mov
sbbl
xchg
ffreep
push
mov
int3
adcb
jmp
stos
mov
push
flds
cmp
xor
jb
sbb
or
dec
or
loop
jb
add
ss
push
lret
cmpb
jle
pop
fldt
sbb
jbe
addr16
shll
xchg
lret
pop
lret
testl
lea
mov
icebp
out
cltd
xchg
mov
test
inc
mov
sbb
jo
xchg
in
test
idiv
pop
cld
push
out
sbb
in
pop
pop
les
fldt
loope
add
sub
dec
sbb
js
scas
mov
mov
mov
xchg
ljmp
dec
xchg
push
or
push
jle
leave
inc
xor
mov
popf
enter
sbb
test
or
addl
cli
js
adc
xor
fidivs
cmp
push
cld
mov
xchg
incb
xchg
aam
cmp
out
mov
insl
cmp
xchg
dec
pop
push
je
test
push
push
xor
mov
push
hlt
sub
ret
xchg
ficompl
aaa
out
hlt
fcomp
fs
mov
stc
xlat
mov
inc
shrd
jo
cmp
rol
mov
add
jecxz
sbb
xchg
fsts
addr16
mov
jg
sub
inc
mov
jbe
mov
repz
ret
ljmp
cmp
xchg
jge
xchg
stos
lds
arpl
push
std
mov
push
or
dec
inc
mov
roll
or
cmp
movb
imul
rep
ljmp
push
or
movl
cli
lret
dec
sub
popf
dec
mov
lods
jo
sti
fcomp
and
call
push
aam
dec
subl
aad
push
mov
rorb
and
dec
fmull
mov
popf
stos
fsubrs
leave
mov
jne
inc
mov
push
fucomp
inc
clc
inc
mov
dec
lcall
push
popf
xlat
aaa
mov
popf
mov
pop
repz
fwait
jne
jl
mov
ljmp
xor
aad
push
sbb
lcall
pushf
lcall
xorl
cwtl
rcll
cmp
push
test
lock
jl
arpl
data16
push
inc
stos
sbb
jle
leave
fs
push
roll
imul
std
and
in
xor
add
jo
leave
hlt
inc
and
mov
out
push
int
or
cmp
dec
inc
cmp
and
inc
add
xor
sub
ret
jl
inc
arpl
clc
inc
je
into
jmp
mov
das
mov
dec
mov
cmp
ss
cmp
inc
mov
cmc
sub
mov
mov
jge
lods
inc
sbb
adc
mov
fisttpl
fistps
in
push
hlt
mov
sub
dec
lods
push
sub
mov
lcall
ficomps
mov
pop
sbb
mov
jae
mov
negb
pop
mov
sub
fwait
add
and
xchg
shlb
lds
sbb
push
cmp
mov
mov
jnp
popl
and
xlat
in
ja
dec
xchg
js
mov
ds
xchg
fmul
movsb
rcrb
inc
push
cwtl
lods
pop
xchg
mov
lods
out
inc
in
sbb
test
cmp
inc
xchg
int3
dec
dec
jge
sbb
xchg
mov
sub
ss
adc
jg
in
mov
enter
rcll
mov
dec
add
std
sarl
fs
out
xor
aad
lds
movb
daa
jecxz
dec
and
pop
aas
addr16
xchg
iret
sbb
xorl
stos
push
inc
scas
inc
dec
mov
ljmp
ret
sti
pushf
movsb
ss
mov
jb
push
cld
pop
sub
jbe
push
cmp
sub
mov
les
aam
ss
addr16
pop
imul
fwait
ret
addr16
mov
mov
mov
adc
cld
scas
ficomps
jmp
cs
xor
rcll
pop
pop
push
stos
push
scas
pop
mov
mov
jp
or
mov
cmpsl
xchg
or
lea
adc
std
stc
out
xlat
cmp
push
pop
pop
pushf
mov
mov
jecxz
adc
push
or
sub
mov
pop
pop
test
andb
and
jne
sbb
ret
push
sbb
stos
aad
ja
lods
mov
sbb
mov
mov
mov
sbb
fbstp
xlat
iret
mov
movsb
sti
push
push
inc
adc
xchg
stos
pop
mov
mov
pop
pushf
frstor
pop
pop
mov
test
nop
fxch
push
mov
repnz
stos
aad
icebp
mov
pop
lahf
fs
sbb
jle
leave
addl
iret
js
nop
push
jo
xor
push
push
cmpl
adc
push
add
push
bound
lock
sti
scas
push
adc
fsubrp
xchg
push
fisubl
cmp
cltd
cmpsl
fistpll
and
cltd
rorb
pushf
sub
mov
fistpl
negb
sub
das
lcall
ficomps
test
flds
mov
pop
rcr
adc
or
mov
aaa
hlt
stos
adc
ret
shrb
lret
inc
sbb
inc
pop
jo
jl
mov
inc
lods
xchg
lahf
mov
push
test
push
push
bnd
lcall
les
ja
mov
push
cmp
jae
mov
and
in
addb
and
test
pop
fistl
jl
jecxz
fwait
lret
jp
xchg
push
outsl
in
arpl
or
sbbl
jns
mov
dec
sti
xchg
inc
sub
dec
sarl
fimuls
or
push
adc
push
sbb
xor
ret
xor
dec
adc
xor
sbb
shll
push
insl
mov
adc
lea
dec
inc
mov
int
mov
xor
pop
ds
pop
mov
mov
lea
inc
divb
les
and
adc
inc
mov
lret
mov
mov
sbb
dec
lahf
std
add
xor
hlt
and
mov
xor
outsl
insl
test
push
out
dec
dec
cmp
mov
js
and
dec
cmc
dec
arpl
popf
lcall
cltd
cwtl
stos
lret
jge
outsb
cmpsb
test
sbb
subl
cs
pushf
adc
cmpb
push
mov
mov
pop
xor
inc
fstpt
cmc
xchg
loope
mov
xor
add
xchg
and
jnp
xchg
lock
inc
shr
lods
dec
pop
xchg
jle
lods
cmp
adcl
popf
push
xlat
iret
fsubrs
lods
inc
xchg
cmp
out
aas
lods
sbb
aaa
sbb
mov
loope
push
jae
je
and
dec
inc
mov
outsl
mov
sbbb
xchg
or
icebp
pop
pop
pop
mov
add
cli
insl
lds
fdivr
pop
jbe
ret
call
lret
and
mov
lret
mov
mov
jb
sub
scas
pop
dec
cs
sahf
iret
sbb
sub
les
ss
insl
cmp
gs
xor
sub
adcb
inc
xorb
les
movsl
sub
xchg
sbb
xor
mov
xchg
rclb
cmp
in
inc
cmp
nop
jne
inc
or
inc
cltd
sbb
repz
cmpsl
imul
aad
xlat
mov
out
adc
repnz
mov
sbbl
pop
icebp
cmpsb
mov
in
sub
test
mov
sbb
pop
sarb
push
pop
sub
dec
jb
loop
rep
jo
fidivs
jo
sub
fdivrl
inc
xchg
pop
loopne
popa
pop
xchg
imul
into
dec
mov
jbe
sbb
push
shll
dec
adc
cmp
jae
ss
aam
push
clc
mov
jl
mov
icebp
mov
mov
outsl
jnp
stos
xor
mov
stos
inc
mov
inc
adc
and
lret
incl
mov
cmp
popa
push
adc
bnd
push
lods
jmp
and
mov
lods
mov
push
push
sub
and
pop
add
or
cld
cmp
mov
inc
pop
in
andl
mull
fmulp
xlat
sbb
sub
fwait
or
fs
insb
pop
ret
ds
pop
gs
int
jp
ret
jb
sbb
sahf
test
aaa
imul
imul
sbb
ficompl
mov
sbb
divl
cltd
push
cmp
or
ds
lret
cmp
stc
inc
gs
jnp
repz
cmp
insb
test
std
inc
inc
sbb
inc
or
lret
adc
inc
sbb
rorb
aad
sbb
inc
jb
dec
mov
lahf
jnp
in
movl
lcall
inc
mov
cld
mov
mov
push
int3
mov
jmp
mov
ror
mov
ret
cwtl
lods
inc
mov
pusha
push
jg
add
scas
mov
leave
loop
seta
pusha
xlat
shlb
or
int
dec
mov
xchg
pop
lods
fsubr
adc
jg
aam
int3
in
mov
mov
mov
dec
out
or
sbb
sbb
cmp
sarb
dec
push
cmp
je
aaa
test
daa
push
push
mov
idivl
add
inc
idiv
addr16
mov
hlt
cmc
xor
mov
xor
out
cltd
jle
mov
mov
mov
dec
orb
lcall
push
in
not
jb
mov
mov
push
fst
jnp
pushf
pop
out
inc
popa
xchg
pop
or
mov
js
nop
icebp
popa
stos
in
jge
mov
mov
cmpsb
push
push
adc
adc
cmp
xchg
jl
dec
les
lahf
jle
jns,pn
out
mov
ss
dec
adc
in
testl
lret
pop
mov
movsb
test
mov
loope
cmp
cmpsb
jge
movsl
xor
ja
fbld
pop
cwtl
and
shlb
inc
out
dec
pop
or
mov
xor
decb
jns
out
stos
pop
jne
mov
clc
js
test
adcb
test
jbe
xor
inc
mov
sahf
fdivrs
jecxz
jp
mov
push
or
loop
repnz
sub
mov
sub
jb
adcb
popf
add
fst
int3
or
xor
and
aaa
dec
mov
outsl
mov
jae
mov
xor
and
push
sub
stos
mov
stos
jge
xchg
and
movb
jbe,pt
mov
jo
ret
test
scas
imul
mov
stc
adc
jl
imul
je
test
daa
movsw
out
js
sbb
gs
push
cmc
cwtl
mov
pusha
outsl
aas
addb
daa
jnp
adc
fdivs
inc
xor
add
mov
sub
dec
mov
data16
adc
adc
add
std
dec
pop
adc
mov
aas
int
hlt
ds
push
stos
inc
les
cld
repz
sub
pop
rcrb
mov
and
aad
aaa
ds
xchg
pop
repnz
test
jl
aas
cmpsl
xlat
xchg
and
mov
aaa
and
cli
jecxz
mov
cmp
mov
add
push
push
fldt
push
xchg
pushf
dec
push
fistps
mov
lds
or
lods
inc
sbb
imul
popa
dec
or
inc
fsubrs
sub
xlat
add
scas
mov
roll
fmuls
mov
mov
xchg
inc
fidivs
pop
inc
adc
mov
sbb
enter
cmp
call
int3
jbe
test
fcomps
cmp
push
rcrl
cwtl
cld
sub
push
pop
cwtl
jb
and
mov
mov
rcrl
je
mov
out
jnp
stc
std
xor
repz
dec
aaa
xchg
imul
leave
loope
dec
xor
jmp
leave
push
push
fnstsw
fsts
movsl
mov
inc
stos
sub
push
push
cli
sub
pop
sub
lret
xchg
ljmp
mov
insb
push
dec
adc
xchg
dec
data16
xchg
dec
push
pop
cmpsl
push
ret
shlb
cwtl
ljmp
push
sub
add
aas
popa
outsl
lahf
popf
inc
fstpt
mov
pop
jb
test
mov
add
push
gs
out
je
aam
cmp
cmp
out
mov
sub
test
sbb
shrb
mov
sbb
inc
mov
mov
ss
mov
push
leave
mov
or
xor
cmp
inc
in
inc
mov
movsl
cmpsb
stc
sbb
inc
inc
divl
rolb
lods
in
ja
test
cld
jg
cmpsl
xchg
leave
fsubrl
push
xor
arpl
dec
inc
outsl
dec
pop
cmp
mov
cli
pop
pop
pop
add
int
inc
add
inc
cmp
int
or
inc
dec
cmp
sub
push
daa
adc
mov
xchg
add
xor
int3
ss
cwtl
mov
jb
mov
out
adc
pusha
push
push
xchg
sbb
repz
es
mov
fisubs
imull
jecxz
push
inc
xor
sbb
pop
mov
mov
packuswb
in
call
mov
xchg
imul
mov
fbld
pop
xchg
cltd
dec
imul
jb
jg
out
adc
push
jno
sbb
ss
loope
xchg
sub
repnz
das
push
dec
inc
jle
cs
xor
mov
sub
ljmp
pop
cmpsb
pop
pop
inc
mov
jmp
cmp
sbb
mov
cld
push
movb
jg
xor
outsb
jne
mov
movsl
mov
cmp
outsl
push
lcall
push
dec
sbb
add
mov
xor
dec
repnz
jbe
adc
or
add
and
scas
inc
scas
xchg
mov
es
dec
fcmovne
nop
mov
push
jb
mov
pop
push
push
mov
stos
ret
jge
enter
or
test
pusha
jo
shrl
sub
or
movsb
mov
lret
sbb
or
add
fsubs
mov
xor
pop
dec
mov
mov
sub
sub
sti
jne
xor
jne
fldcw
pusha
pop
cmpsl
cmp
aaa
mov
add
clc
shr
lret
sbbl
pop
ss
lcall
daa
jne
out
or
push
sbb
loopne
jle
sbb
in
mov
les
mov
dec
adc
jns
rorl
pusha
scas
push
sub
js
mov
stos
test
test
lods
mov
dec
jb
cmp
int3
aaa
outsb
inc
cmp
shll
mov
jl
bound
pushf
imull
mov
stos
xor
dec
in
push
test
push
adc
pop
pop
lret
jno
fisubl
and
fs
and
idivl
and
test
mov
xor
mov
cmp
fmull
mov
int3
stos
push
mov
jnp
mov
or
mov
xchg
dec
jge
and
push
popf
mov
fwait
int
repnz
clc
add
sbb
and
xor
xor
sub
mov
inc
mov
out
sbb
xchg
mov
cltd
int3
dec
pop
mov
imul
inc
push
push
cli
push
pop
in
pop
jp
mov
and
in
xor
xchg
popf
mov
xchg
jnp
repz
xlat
mov
inc
divl
push
and
push
or
es
cltd
mov
xor
pop
lret
js
jge
out
movsl
inc
xchg
leave
loop
jb
pop
xchg
fwait
sub
pop
dec
pop
or
fsubrs
and
jge
fwait
xor
enter
cltd
ret
mov
inc
jmp
sub
jge
in
dec
pop
enter
out
lcall
dec
push
or
push
mov
lcall
mov
movsb
cmc
jne
cltd
int
imul
pop
movsl
int
fistpll
dec
fadds
iret
aas
ret
lret
gs
dec
lahf
sbb
fldenv
pop
xchg
sbb
outsl
jmp
push
cltd
dec
mov
dec
mov
dec
pop
dec
test
jle
dec
popf
std
push
mov
dec
loop
push
pop
inc
push
xchg
aas
jge
mov
lret
xchg
stos
iret
jmp
out
jbe
xchg
jge
xchg
stos
lds
arpl
push
std
mov
push
or
lea
pop
pop
leave
and
jmp
fimuls
out
push
adc
mov
imul
clc
jo
and
jae
xchg
out
lea
mov
cmp
jp
movsl
ret
cld
xlat
sub
repnz
es
enter
mov
jl
ficompl
xor
mov
aas
or
dec
data16
packuswb
sub
mov
fcoms
cmpsl
inc
cmp
mov
mov
adc
inc
inc
jl
mov
icebp
sbb
in
ret
inc
stos
nop
cmp
fisubrs
push
inc
jecxz
bnd
movsb
dec
sahf
pushf
xchg
pushf
sbb
and
nop
aad
xor
fidivl
sbb
mov
adc
sbb
ficompl
les
jae
lds
jp
or
mov
push
lock
add
sbb
mov
dec
loope
in
sbbb
iret
js
adc
push
cmp
xlat
in
andl
mov
and
push
inc
pop
jecxz
daa
jp
fldl
mov
cmp
jmp
scas
add
in
push
int3
es
pop
adc
aaa
mov
out
mov
mov
cmp
mov
sbbb
pop
test
cmp
clc
loop
fmul
pop
inc
leave
cld
jle
mov
clc
daa
mov
stc
call
xor
adc
mov
imul
xchg
add
popf
inc
xchg
nop
adc
mov
lahf
stos
and
xor
arpl
mov
mov
shll
cmpsl
pop
or
dec
xchg
jnp
fwait
enter
cwtl
js
subl
jne
dec
les
pop
cmpsb
pop
std
stos
or
cltd
mov
push
cmp
and
scas
jge
pop
push
jo
stos
dec
in
in
adc
xchg
mov
pop
in
test
or
mov
add
adc
movsb
loop
push
int3
lods
add
mov
add
sbb
pusha
fwait
inc
push
addb
mov
xchg
stos
ret
jge
int
push
repz
mov
shrb
mov
std
sarl
dec
push
fildll
sarl
repz
jns
fmulp
lahf
pop
jmp
repnz
mov
sarb
sbb
mov
xor
mov
cmp
stos
ljmp
repz
pop
ljmp
mov
gs
inc
dec
xchg
jmp
mov
adc
or
rcrb
lods
insl
pop
mov
das
jbe
mov
xchg
mov
mov
inc
add
in
sub
xchg
mov
add
imul
or
and
xchg
jmp
push
xchg
stos
inc
out
inc
sbb
and
in
cmp
test
nop
cwtl
daa
mov
nop
jecxz
sbb
push
push
arpl
scas
mov
adc
sbb
mov
dec
pop
leave
push
sbb
lcall
jge
dec
rcrl
cmpsb
iret
ret
arpl
mov
sbb
or
sti
sbbl
xchg
mov
mov
xor
lret
adc
sbb
mov
rcrb
jl
shll
cwtl
sub
enter
ja
jns
sbb
or
inc
push
lret
mov
or
inc
enter
mov
ret
sbb
scas
insb
fdivl
push
js
fsubrs
mov
jl
insb
scas
xorl
inc
fsubs
jnp
fsts
out
fs
xor
lahf
movsb
jno
leave
inc
js
in
push
mov
mov
sti
fwait
in
inc
add
popf
cld
daa
and
daa
hlt
lods
or
or
and
mov
jmp
sbb
xchg
mov
into
xchg
ljmp
pop
ljmp
jmp
in
icebp
inc
lock
out
clc
sahf
sub
int
mov
in
cmpsl
movsb
int
and
stos
dec
lods
ror
pushf
xchg
mov
mov
jecxz
lgs
sbb
mov
jne
fcmovne
pop
cmpb
ret
dec
xchg
into
adc
imul
sbbl
ret
test
add
or
enter
andb
mov
mov
dec
cmp
out
clc
mov
pop
fbstp
jo
or
inc
test
xchg
cmp
jl
test
and
fs
adc
lahf
movsb
js
sbb
and
xor
fldenv
sbb
fwait
cmpsb
jo
cmp
rcrl
cmpl
repnz
xchg
ret
ret
mov
pushf
fsubl
fsubrs
lock
push
int
mov
mov
jne
or
ljmp
adc
pop
dec
xchg
rorl
or
push
lcall
stc
push
push
in
gs
hlt
sti
stos
mov
fwait
push
mov
dec
lock
mov
ret
mov
popf
push
jns
test
adc
push
loope
inc
cmp
int3
adc
inc
adc
fidivs
mov
lods
jne
sbb
cmp
mov
fcmovnb
test
and
dec
adc
add
cs
mov
stos
xchg
sbb
shlb
pop
dec
inc
add
adc
mov
adc
and
adc
fwait
cmpsb
jns
pop
shlb
cmp
mov
bound
test
cmc
or
dec
pop
pop
jmp
fstpt
arpl
aaa
cld
mov
nop
sub
mov
xchg
mov
fcmovb
insl
adc
add
add
fmull
jns
mov
sbb
xchg
lahf
stos
xor
dec
push
fisubrs
repz
mov
mov
into
popf
push
imul
mov
cwtl
fs
test
mov
lcall
test
jnp
stos
xchg
sbb
orl
pop
in
xchg
inc
inc
dec
adc
aad
insl
push
dec
add
or
outsb
cmp
and
stc
imulb
or
and
mov
xchg
mov
mov
int
bound
gs
cltd
pushf
bound
xor
xor
test
jle
sub
lea
push
repz
testb
xchg
jecxz
mov
inc
clc
aas
clc
mov
nop
loop
mov
je
adc
mov
add
sar
mov
lret
adc
test
and
pop
mov
popa
mov
out
inc
ljmp
leave
insl
mov
aad
xchg
mov
jnp
fwait
enter
mov
stos
lcall
xchg
sti
pusha
lcall
cmc
xor
aam
mov
or
fimull
mov
enter
push
jo
stos
xchg
lcall
jae
test
pop
dec
add
mov
mov
inc
inc
leave
push
sbb
scas
pop
js
cltd
cmpsl
push
add
mov
and
adc
lods
iret
mov
inc
and
mov
mov
ja
ficoms
shrb
mov
jmp
addr16
shlb
jge
lcall
hlt
mov
inc
repz
dec
push
lahf
mov
jmp
xlat
cltd
push
mov
push
fimuls
jb
jns
mov
hlt
lret
lret
imul
xor
repnz
cli
shll
enter
xchg
pop
mov
imul
pop
fs
mov
lods
hlt
cwtl
sub
pop
mov
inc
push
pop
push
adcl
imul
lret
test
cld
cwtl
cmp
push
sbb
dec
mov
and
test
lret
jmp
sarl
add
add
mov
sbb
cwtl
jle
mov
dec
xchg
inc
add
mov
shrb
jb
inc
push
add
mov
sbb
out
js
push
movsl
mov
enter
jl
or
aad
ja
int
aas
stos
mov
xor
mov
dec
pop
addr16
jb
mov
loopne
mov
jmp
jl
or
test
rcll
ja
adc
jecxz
cli
dec
test
and
aad
jge
sbbl
dec
push
and
aas
mov
jne
push
lock
leave
add
idivb
mov
pushf
leave
inc
pop
js
out
sbb
es
shrb
cmc
sbb
dec
mov
inc
sbb
mov
pop
xor
enter
scas
std
sahf
jl
js
mov
clc
pop
push
xchg
mov
push
and
mov
imul
roll
sbb
inc
xchg
adc
mov
fwait
test
clc
negb
inc
js
inc
pop
mov
jb
rcl
inc
push
mov
out
sbb
inc
dec
xchg
sti
movsb
fmul
push
sub
mov
fdivs
aas
jge
dec
vpand
into
adc
stos
fistpll
ret
sarl
fisttps
daa
stc
loopne
stos
mov
lock
or
je
add
test
or
and
push
clc
dec
add
stos
rcrl
pop
in
lods
sbb
mov
nop
outsb
cmp
loopne
popa
push
or
lret
xchg
sub
mov
push
lret
inc
fimull
mov
subl
fisubrs
jge
pop
cmpsl
inc
push
xchg
lahf
mov
dec
cmp
call
cli
sahf
mov
lock
sbb
push
xchg
mov
inc
mov
add
push
out
ret
xor
mov
test
and
mov
fdivr
sbb
push
inc
dec
xchg
imul
add
or
enter
cmp
mov
call
fisttpll
mov
xchg
mov
test
ret
inc
scas
rorl
out
rolb
jb
lahf
mov
adc
sub
hlt
jnp
enter
test
push
adc
fisubs
mov
pop
out
mov
pop
lret
jg
test
adc
push
mov
or
sub
inc
pop
lods
in
pop
scas
pushaw
fisubrl
negl
jmp
movsl
inc
xlat
popf
ljmp
adc
add
sbb
xchg
mov
sbb
xchg
fs
test
and
popf
movsl
icebp
xor
push
jo
jmp
subb
inc
lcall
sbb
mov
rclb
shlb
and
mov
enter
jg
fildl
dec
or
dec
push
enter
ja
lea
rcr
jne
fmul
pop
lods
fprem
int3
test
push
clc
clc
cmp
lret
test
fbld
enter
out
out
mov
add
fsubl
mov
popf
rcll
out
pop
dec
pushf
push
mov
inc
clc
push
mov
mov
shrl
dec
add
or
mov
aam
and
or
xor
stos
div
mov
or
sub
xchg
stos
insb
cmp
call
iret
inc
fcmovne
call
in
sbb
inc
jo
daa
lock
inc
push
pop
push
mov
and
sub
mov
les
popf
movsl
clc
cwtl
xor
sub
add
inc
pop
adc
cltd
cmpsl
lock
je
fwait
out
pop
subb
repz
jg
lret
iret
mov
sbb
sub
mov
sbb
ret
and
mov
ja
dec
inc
lret
shll
mov
ror
jl
pushl
dec
mov
lret
jge
fmulp
lahf
in
stc
mov
fdivp
mov
pop
in
js
or
shll
nop
ds
out
movsl
dec
dec
add
mov
pop
pop
mov
mov
lahf
adc
mov
frstor
imul
cmpsl
icebp
or
mov
repnz
adcl
pop
outsl
shlb
rclb
lods
cmc
jae
aam
mov
or
add
ret
push
movsb
push
push
sub
test
inc
add
or
xchg
mov
add
ret
sbb
or
aam
ljmp
loope
sbb
xchg
sbb
push
cltd
cmpsl
stc
lcall
cwtd
add
or
mov
nop
jecxz
sbb
mov
icebp
int
aas
ret
fcmovnb
mov
sbb
inc
adc
xor
mov
popf
stos
mov
jge
imul
pushl
mov
mov
pop
shll
outsl
adc
dec
adc
sbb
sbb
cld
mov
fisubrl
cwtl
push
loopne
jns
dec
inc
test
imul
ljmp
inc
xchg
pop
mov
jns
pop
mov
shll
pop
in
jo
xchg
sbb
or
inc
add
lret
xchg
cltd
movsl
bound
fdivrl
xor
or
and
test
rol
sbb
pop
orl
add
xor
add
fmuls
mov
ret
xchg
push
into
and
fwait
test
cmp
push
fsubrl
mov
mov
inc
mov
mov
add
adc
movsl
mov
enter
imul
mov
mov
jmp
sbb
inc
test
fistpll
jae
cmp
stos
test
push
sub
test
outsl
adc
inc
dec
adc
xchg
cmp
ror
imul
les
xor
pushf
insb
cmp
in
mov
pop
or
test
in
xor
mov
lret
xchg
mov
mov
andl
cwtl
or
xchg
inc
jae
sbb
fisubl
stos
jbe
dec
movsb
or
enter
sub
inc
sbb
arpl
in
js
fdivrs
lock
fcoms
orl
add
mov
adc
dec
add
adc
dec
call
sbb
out
push
lret
sbb
adc
mov
lods
inc
aad
jmp
lret
mov
lret
nop
bound
leave
push
mov
repnz
aaa
xchg
std
push
jbe
mov
mov
fistpl
pop
mov
mov
fcomps
pop
push
lock
stos
scas
sahf
sub
sbb
add
or
or
cmp
dec
test
xlat
addr16
inc
lret
push
fwait
push
mov
pop
js
mov
xlat
mov
pop
lret
mov
mov
cs
xchg
mov
jae
xchg
inc
fisubl
stos
jg
rclb
push
imul
sub
lods
jne
cmp
cmp
mov
ret
in
add
xchg
fldenv
or
mov
pusha
outsl
adc
inc
mov
add
adc
jp
inc
add
adc
add
enter
call
jle
mov
pushf
sub
jno
dec
push
pop
push
ret
mov
mov
imul
mov
call
pop
inc
fldenv
mov
cmc
mov
lods
stos
jecxz
out
sti
enter
mov
mov
mov
or
mov
push
push
js
xor
enter
push
inc
lret
push
or
jo
dec
rorb
push
iret
lds
into
popf
in
jns
adc
test
dec
cmp
mov
push
test
lds
xchg
mov
arpl
fdivs
xor
jb
arpl
call
je
test
add
shll
inc
sbbl
cmp
dec
shlb
inc
pop
movsl
icebp
jno
push
jo
inc
add
add
inc
adcl
push
push
inc
pop
pop
subl
mov
push
cmpsl
mov
shlb
std
sbb
aad
pushl
dec
rcrb
jmp
fstpt
rcr
jno
fmul
pop
inc
leave
int3
jle
mov
clc
daa
adcl
sti
xor
adc
mov
imul
mov
ds
sbb
out
mov
lahf
stos
and
mov
fwait
inc
clc
fbld
dec
lds
mov
loop
pop
or
and
das
cwtl
js
subl
jne
dec
les
pop
cmpsb
pop
std
stos
setg
ret
mov
inc
scas
jge
push
push
jo
xchg
lahf
in
in
dec
add
add
in
test
or
mov
add
adc
movsb
loop
push
int3
lods
xor
mov
and
cmpsl
lock
stc
je
fwait
inc
push
inc
subl
ljmp
push
repz
mov
shrb
xor
std
fistpll
dec
push
fildll
sarl
repz
jns
fmulp
lahf
pop
jmp
repnz
mov
mov
xchg
out
sbb
sbb
dec
mov
cli
mov
xor
mov
cwtl
dec
inc
stos
ljmp
repz
pop
ljmp
mov
gs
inc
dec
xchg
jmp
dec
mov
adc
or
rcrb
lods
insl
fldl
jbe
sub
movsl
jbe
mov
xchg
mov
mov
inc
add
in
cmp
xchg
mov
add
mov
push
or
and
xchg
jmp
push
xchg
xchg
mov
inc
sbb
and
in
cmp
test
nop
test
mov
nop
jecxz
sbb
shrl
int
push
mov
jns
leave
xchg
mov
dec
pop
leave
push
sbb
loopnew
cli
mov
sbb
jge
dec
rcrl
cmpsb
jno
adc
sbb
or
dec
mov
repz
testl
fcoms
mov
xor
lret
adc
sbb
mov
rcrb
pop
shll
cwtl
sub
enter
ja
sub
ret
sti
loope
mov
add
enter
int3
ret
sbb
scas
insb
pop
mov
daa
ja
leave
test
inc
stos
rclb
outsl
scas
xorl
inc
fsubs
jnp
aad
adc
add
adc
inc
js
in
push
mov
mov
sti
lahf
in
inc
add
popf
jg
and
daa
hlt
lods
cmp
or
mov
negb
sub
sbb
xchg
mov
into
xchg
call
sbb
sarl
fisttps
int
dec
dec
stos
mov
lock
out
clc
sahf
sub
dec
push
pop
push
jecxz
movsb
ret
add
xor
pushf
xchg
movsb
push
mov
jecxz
jne
pop
in
pop
mov
jne
fcmovne
pop
andb
jecxz
ret
jge
dec
xchg
into
adc
imul
mov
imul
jbe
js
or
enter
inc
cmpsl
inc
mov
mov
mov
dec
cmp
out
clc
mov
fidivl
sub
or
inc
test
xchg
cmp
jg
test
and
fs
js
lahf
movsb
js
adc
lods
out
and
je
fwait
cmpsb
jo
mov
rcrl
andl
repnz
xchg
ret
ret
mov
pushf
jl
add
das
lock
push
mov
lcall
pop
ljmp
adc
stos
sti
jno
dec
xchg
rorl
or
push
pushf
add
mov
lds
dec
rcrb
ljmp
jecxz
fwait
push
mov
dec
sbbb
icebp
lcall
outsb
popf
push
jns
test
adc
push
loope
inc
cmp
int3
adc
inc
adc
fidivs
cwtl
loope
lods
jne
enter
push
syscall
ret
mov
fcmovnb
inc
movsl
inc
push
lret
xchg
lds
adc
add
cs
cmp
mov
sbb
shrb
lea
ret
stos
dec
mov
roll
fwait
movl
fwait
cmpsb
jns
imul
jmp
bound
test
popf
or
dec
pop
pop
add
fstpt
arpl
aaa
cld
mov
adc
stos
cmc
mov
xchg
mov
fcmovb
insl
adc
imul
dec
mov
dec
fmull
pushl
xchg
lahf
stos
xor
dec
push
fisubrs
repz
sbb
mov
sahf
das
xchg
stc
cli
in
test
sbb
mov
lock
sbb
ret
or
rcrb
push
cli
gs
es
mov
pop
sub
mov
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
sarl
push
dec
mov
bound
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
sbb
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
