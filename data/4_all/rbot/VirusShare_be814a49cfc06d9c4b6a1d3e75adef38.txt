popa
je
add
add
add
add
lock
add
add
add
add
add
adc
add
add
add
add
add
push
add
or
add
add
lock
add
add
add
add
add
adc
add
add
add
add
add
push
add
add
adc
add
add
add
lds
add
add
or
test
or
xchg
add
add
or
add
add
rolb
add
add
add
add
addb
add
rolb
or
xor
or
pushf
add
add
or
mov
add
add
add
add
add
or
enter
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
inc
push
push
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
js
gs
pop
push
gs
add
add
and
add
fidivrl
add
add
add
add
add
bound
add
add
add
lret
js
mov
int3
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
stc
les
add
lock
add
sub
arpl
dec
mov
in
aaa
dec
jl
hlt
jno
gs
fnsave
adc
pop
add
or
or
xor
in
jle
inc
dec
push
sbb
ss
jecxz
xchg
lea
std
sbb
dec
inc
cmpsl
jae
mov
test
xor
icebp
mov
loope
loop
iret
fucom
xchg
push
fs
in
adc
cmp
xor
pop
dec
lahf
cmc
daa
fimuls
clc
mov
pop
adc
pop
sub
cmp
repnz
add
sub
lods
das
inc
xchg
push
mov
lea
add
dec
lock
sarb
inc
ja
dec
cli
data16
jo
cmp
or
sbb
jecxz
lret
jg
arpl
js
neg
pop
pop
mov
sbb
mov
or
ret
push
adc
or
jge
inc
out
xchg
jb
icebp
jl
dec
lods
jecxz
out
imul
mov
jb
jnp
addb
rorb
mov
xchg
nop
mov
xor
sbb
sbb
dec
jbe
fs
sub
mov
cmpsb
or
and
dec
mov
out
jmp
dec
xor
popf
mov
clc
movsl
jbe
cmpl
ja
jp
roll
ljmp
adc
or
jecxz
fwait
in
xchg
or
inc
or
stc
or
mov
ret
into
jnp
cmc
jg
add
aad
data16
enter
cmp
cld
lret
add
movsb
lods
or
cmp
xor
rcl
push
push
push
sar
flds
aas
jecxz
add
jp
dec
pop
pop
and
sbb
xchg
add
dec
jmp
loop
and
mov
imul
popa
cmp
pop
sub
xor
jnp
out
jae
in
and
mov
inc
and
int3
out
data16
orl
lret
shrb
mov
pop
mov
sub
xchg
fs
fadd
ror
out
negb
sub
repz
push
push
jno
add
mov
ret
dec
inc
sbb
leavew
add
adc
xor
mov
les
les
in
lcall
dec
mov
pop
pop
push
pop
sbb
adc
pop
mov
in
out
or
aad
mov
ret
lea
cli
icebp
std
cmpsb
or
inc
dec
pusha
mov
push
or
les
es
rorb
push
shr
out
leave
pop
pop
sub
mov
cmpsb
pushf
leave
rorb
jl
jb
xlat
push
mov
dec
in
pop
imul
inc
clc
inc
sub
mov
mov
mov
aaa
test
out
mov
les
aaa
pop
enter
mov
jmp
cmp
push
fistpll
movb
sub
inc
mov
lods
and
icebp
xor
subl
fsubr
cwtl
cmp
push
xchg
jl
jle
enter
xchg
mov
mov
sub
in
xchg
push
fs
sbb
push
cmpsl
stos
cmp
jge
popa
lea
xor
xor
rolb
add
jnp
rcll
cwtl
jl
lods
call
gs
pop
lea
push
testl
sahf
inc
andl
pop
lock
bound
loope
scas
mov
sub
mov
jmp
popa
roll
int
inc
lods
movsl
bound
testl
xchg
lods
xlat
mov
test
cltd
cmp
lcall
scas
pop
add
das
insb
add
lret
aas
cs
pop
or
daa
lock
push
imul
out
cmp
bound
xor
cmpsb
negl
aaa
jl
lds
and
pop
fnstenv
mov
push
push
push
pop
push
fiadds
pop
add
jg
cmp
jge
lea
mov
stos
dec
adc
add
or
or
cmp
mulb
test
xchg
arpl
daa
sub
aaa
add
add
xor
out
ja
inc
lret
ljmp
movsb
sub
mov
addl
enter
mov
xor
jge
mov
arpl
mov
shll
gs
mov
xchg
enter
adc
or
outsb
sub
or
xor
ret
add
sub
xor
aam
xchg
pop
mov
cmpsl
jp
lcall
jmp
ja
sub
inc
and
les
aad
flds
xchg
sbb
subl
scas
add
in
push
aaa
ret
cmp
cmc
subb
push
rorl
mov
int3
clc
inc
nop
repz
cwtl
test
imul
push
aaa
ds
dec
cs
arpl
jmp
sub
div
repnz
std
stos
sbb
pop
je
rcrb
mov
mov
jnp
into
stos
orl
mov
icebp
lcall
sbb
jnp
int
testl
adc
push
sbb
ret
mov
xor
imul
add
js
call
sbb
jecxz
xor
imull
scas
pusha
mov
imul
push
jl
dec
push
lcall
jl
and
scas
pop
stos
xor
loopne,pt
jl
cld
sbb
test
adc
jo
and
mov
jae
or
cmp
nop
push
addr16
cmp
mov
ret
or
jl
jne
iret
cs
xlat
cmp
add
inc
sti
test
je
and
jnp
dec
sbb
mov
push
daa
xor
inc
mov
mov
push
imul
xchg
mov
sbbl
or
add
imul
int
jge
mov
pop
es
xchg
inc
nop
jo
sbb
into
pop
dec
fadd
lods
pop
xchg
sahf
xchg
push
mov
fptan
loop
mov
mov
js
data16
pop
push
xchg
dec
mov
aam
rcrl
les
lret
sbb
test
mov
jb
es
adc
popa
in
push
jge
inc
sbb
out
xor
mov
mov
sub
shll
aas
enter
sbb
push
shl
mov
gs
sub
fists
adc
xchg
lds
dec
ljmp
pop
adc
push
dec
in
std
xchg
lds
mov
jo
xchg
insl
cmp
jbe
dec
lcall
jp
mov
popf
push
jnp
xor
test
popa
fcmovnu
test
dec
push
pop
cli
stos
mov
adc
mov
mov
xor
xor
and
scas
ljmp
dec
cs
pop
and
mov
adc
mov
aas
jne
das
mov
inc
jecxz
lods
mov
fs
ja
mov
popf
test
sbb
out
loopne
mov
lcall
and
xchg
cmp
inc
xor
ljmp
mov
dec
xor
mov
pusha
push
or
and
sti
in
xor
test
shr
dec
dec
aaa
xor
or
divl
filds
xor
push
jmp
jo
popf
pop
or
sbb
push
fcmovnbe
dec
in
jb
mov
mov
shl
loope
or
insb
cmc
push
xor
clc
movsb
outsl
add
lods
add
lahf
movsb
fs
imul
fsubs
stos
fs
push
add
pop
mov
cmpsl
mov
es
ds
sub
or
inc
mov
cs
push
mov
out
xor
sub
mov
push
movsl
push
pushf
mov
jecxz
fxch
into
mov
sarl
cmc
adcl
mov
mov
cltd
mov
dec
jmp
and
pop
hlt
shll
cltd
push
movb
mov
or
pop
pop
lahf
mov
sarl
sub
push
push
jbe
add
mull
in
outsb
mov
push
lret
adc
lahf
mov
int3
dec
mov
xor
insb
ljmp
jmp
xor
data16
sub
iret
into
pop
push
es
and
shrb
rorb
test
out
incb
cmp
mov
jmp
ljmp
clc
out
mov
imul
fnstcw
sub
pop
leave
or
cmc
sbb
mov
cld
push
push
pminub
lods
out
jecxz
call
ret
inc
fldl
adc
stc
arpl
ficoms
rol
pushf
imul
lea
dec
cmovo
roll
cmp
mov
sbb
adc
ficompl
mov
mov
add
popf
fisttps
pop
cmpsl
popa
int
shlb
jo
out
add
sub
ja
mov
ret
sbb
sbb
in
cmp
mov
cmp
xchg
and
add
dec
mov
inc
push
adc
stos
xchg
fcompl
ret
push
adc
stos
lock
mov
test
sbbb
pop
lret
push
int
jmp
add
dec
jbe
cmc
xlat
orb
lock
xchg
rorl
test
flds
dec
mov
imull
xorl
lcall
andl
popa
fwait
popa
push
aam
xchg
lods
cmp
mov
mov
mov
scas
xlat
push
push
ret
jo
les
out
sub
or
out
or
push
mov
dec
fwait
loop
pushf
aam
fisttpl
mov
in
mov
adc
flds
das
aaa
bound
rorl
loope
loope
scas
ja
pop
add
or
dec
ficomps
mov
mov
sub
and
sbb
fstl
xchg
jns
in
and
testl
mov
mov
stos
jecxz
inc
add
jecxz
adc
test
mul
stos
sahf
mov
insl
sti
mov
cmp
fdivr
push
or
dec
dec
push
std
cli
out
sbb
cmc
je
rcll
inc
out
lret
pop
or
push
int3
popf
loope
xor
push
jns
cmp
push
clc
jge
push
mov
fsubs
nop
sti
or
xchg
dec
insb
mov
data16
xchg
mov
in
cmp
add
aam
lret
in
adc
out
dec
push
setge
mov
pop
mov
pop
mov
mov
or
mov
inc
aad
popa
mov
rorb
clc
or
test
test
shl
dec
xor
loop
pop
lock
mov
sub
outsb
mov
xchg
sti
mov
cld
push
sub
jge
dec
sbb
dec
xchg
mov
pusha
test
movsb
je
inc
ret
cwtl
data16
mov
jg
mov
or
sub
push
ljmp
xchg
inc
mov
test
push
xchg
lcall
filds
xchg
das
ror
adc
jae
movsl
xorl
push
popf
sarb
xchg
jne
inc
clc
rcrb
mov
push
pop
jp
test
movsl
push
fbstp
mov
jp
mov
push
add
or
mov
sbb
push
arpl
push
sti
enter
mov
jnp
std
pop
jbe
sahf
xor
cmp
add
es
jmp
jmp
js
in
xchg
imul
mov
stos
test
push
push
jmp
icebp
mov
mov
popf
sti
test
pop
sahf
mov
repz
sbb
js
std
pushf
dec
jns
lret
out
iret
les
imul
jge
mov
dec
jne
into
sub
cwtl
icebp
xchg
inc
jno
cwtl
xchg
mov
jle
push
adc
cmpl
aad
sub
pusha
adc
adc
jbe
adc
data16
dec
je
jle
dec
push
sahf
fiaddl
ljmp
jmp
push
imul
sbbb
insb
jbe
mov
and
std
sub
xor
xchg
popa
ljmp
inc
adc
xchg
mov
out
pusha
insb
xlat
je
andb
sub
pop
jb
popa
mov
int
xchg
jmp
mov
test
sbb
insb
jg
push
jns
shll
adc
add
lds
jb
sub
lcall
xchg
popa
inc
push
jge
frstor
insl
stc
aas
and
ret
dec
or
leave
inc
fdivl
pop
cmpsl
push
rcrl
clc
bound
in
lcall
out
std
mov
and
rcrl
insl
js
sub
in
cld
mov
cmpsl
sub
das
xor
jl
loopne
outsl
push
jecxz,pt
mov
mov
cmp
scas
and
sbb
sbb
adc
ss
push
aas
xor
xor
xor
push
aam
mov
in
or
sub
jl
xchg
inc
mov
inc
out
mov
ds
adc
adc
mov
dec
xchg
bswap
cmp
std
and
or
dec
push
lret
dec
mov
or
dec
xor
wrmsr
inc
mov
inc
std
addr16
cmp
out
push
sti
inc
sbb
loopne
mov
ret
add
jno
sub
jnp
and
mov
push
out
xchg
cmpsb
xchg
push
jae
mov
popa
dec
call
xchg
mov
imul
repnz
add
push
sub
cmp
scas
jmp
lods
cmp
and
inc
cmpl
sub
lret
xchg
mov
fists
mov
pop
in
jg
push
nop
jno
popf
mov
insb
iret
out
add
mov
jae
add
std
and
xchg
push
xor
pop
jne
inc
dec
sbb
xchg
hlt
xorl
notb
repz
pop
sub
scas
daa
lret
sti
adc
loopne
outsb
add
add
subl
sbb
hlt
pop
std
or
xchg
insl
inc
cmc
pop
nopl
push
lret
dec
jno
shlb
mov
jp
cmp
lds
repz
mov
cmp
add
pop
sti
jmp
xor
and
leave
sbb
imul
test
adc
mov
jle
cwtl
ds
clc
adcl
inc
fsubl
adc
sub
ljmp
andl
pop
subl
adc
jne
adc
leave
inc
fistpll
in
push
mov
lret
les
jae
mov
sbb
cmc
sbb
imul
mov
jg
jg
or
aam
addb
xor
data16
or
in
jne
ja
out
cld
inc
adc
push
test
or
cwtl
add
sub
or
adc
cld
sbb
cli
jb
out
sbb
cmp
aad
imul
cli
jne
pop
mov
xor
into
or
mov
sbbb
shll
push
cmc
fs
popf
cmp
inc
xor
inc
mov
adc
xor
popa
lret
icebp
or
data16
mov
dec
movsl
xor
and
lret
jmp
inc
loope
jbe
lods
pop
dec
dec
fs
cmp
sub
stos
and
dec
sbb
push
mov
cltd
arpl
xchg
rcr
and
das
bound
aaa
xchg
dec
add
push
xor
insb
pushl
or
push
mov
cld
mov
adc
ficompl
sbb
idivb
negl
pop
mov
scas
dec
rclb
sbb
popf
jle
mov
call
jp
and
dec
jb
mov
inc
push
sbb
int3
popa
shlb
sbb
push
aam
mov
inc
mov
mov
stos
imul
inc
imul
test
sub
insb
adc
subl
xchg
push
dec
into
jb
fisttps
hlt
addb
test
cli
cmc
ret
jb
add
into
mov
clc
and
dec
sub
rcl
dec
push
andb
mov
cmc
jno
push
bound
dec
pushf
push
jo
add
fimull
loopne
push
out
inc
push
cmpsl
add
or
mov
or
jle
mov
gs
xchg
pop
das
fsts
sbb
or
stos
or
inc
cmpsb
adc
pop
jnp
pop
inc
fdivs
fmull
insl
mov
clc
push
repnz
add
lret
adc
sbb
lret
xchg
iret
in
jns
lds
add
push
aam
mov
hlt
out
jmp
add
icebp
adc
cmp
sbb
cld
push
xor
jae
cmp
repnz
pop
rol
rclb
push
cmc
call
cmp
mov
arpl
in
test
push
out
sbb
mov
jno
lret
adc
xlat
dec
add
outsl
adc
gs
pop
shr
repnz
lret
jo
icebp
adc
fbstp
dec
mov
aad
cmpsb
and
push
iret
add
ljmp
shl
or
mov
test
aas
adc
shl
dec
aas
test
out
adc
mov
nop
xchg
clc
hlt
add
fs
imul
les
leave
jbe
push
inc
mov
shlb
push
pop
lret
jecxz
stos
in
jnp
pop
shl
push
dec
fstpl
mov
imul
mov
cmp
stos
inc
push
mov
sahf
dec
lods
or
cmc
negb
outsb
lcall
leave
sbb
sub
cmpps
popf
xchg
jge
das
mov
pop
jbe
or
sub
xchg
xorb
pushw
pushf
sbb
repz
xor
mov
fisttps
xchg
sub
inc
and
xor
xchg
pop
mov
test
sti
stos
aaa
imul
out
mov
mov
push
jmp
mov
adc
mov
aaa
imul
repz
nop
pop
cmpsb
push
insl
mov
xchg
fstpl
mov
cli
js
or
or
lahf
pop
mov
popa
mov
cmpsb
push
cli
in
and
pushf
mov
jmp
mov
pop
ja
mov
mov
mov
out
rcrl
dec
hlt
xchg
rclb
add
test
ret
mov
pop
int3
push
dec
outsl
popf
xor
mov
jno
mov
pop
ljmp
f2xm1
jmp
clc
shrb
shrl
repnz
dec
push
and
into
hlt
hlt
dec
mov
and
mov
inc
ret
add
gs
pop
stos
push
pop
add
dec
pop
xchg
cld
mov
sbb
int3
push
fcoms
bound
aam
xchg
xor
stc
mov
mov
es
mov
pop
stos
mov
or
ljmp
push
xchg
fs
jmp
pusha
adcl
inc
jmp
lock
add
insl
inc
imul
adc
rcll
imul
jne
orl
mov
iret
rclb
dec
lahf
pop
mov
aam
ds
pop
loope
jge
cmp
test
fwait
in
lds
pushf
cmp
ss
scas
fcom
xchg
mov
dec
aad
mov
mov
sbb
or
out
pop
sahf
adc
sbb
and
push
xchg
into
negb
adc
lea
cld
mov
mov
mov
xor
pop
repz
in
sub
xor
sub
test
or
aas
notl
cmp
jge
jo
shlb
inc
stc
push
dec
rcr
adc
jmp
decb
dec
ret
sbb
inc
push
mov
inc
jle
jmp
mov
pop
ret
pop
and
leave
les
movsl
add
xchg
mov
and
aam
and
jno
in
test
cmp
mov
repnz
pusha
xchg
or
inc
test
or
pop
test
lcall
jl
lods
fldt
jle
aad
adc
dec
mov
pop
test
push
popf
jb
push
xor
mov
stos
js
mov
cld
in
lret
push
adc
pop
fadds
dec
inc
adc
xchg
mov
dec
scas
scas
cmp
test
jge
mov
mulb
pop
pop
lret
push
into
mov
jp
or
jecxz
mov
leave
mov
push
movl
dec
test
test
scas
and
push
std
fistps
test
leave
add
in
adc
cmpsl
lcall
jbe
mov
stos
aam
sub
mov
adc
sub
pusha
stos
push
inc
out
xor
test
mov
ret
movl
mov
push
fildll
aas
insl
add
sbb
xor
inc
and
stos
jno
movsb
or
fsubrl
pop
stos
into
iret
notb
addr16
lahf
sti
subl
jecxz
push
arpl
or
in
mov
data16
mov
fcoml
cmp
adc
xchg
test
loope
jb
push
cmp
sti
pop
push
xchg
loopne
cli
ljmp
xchg
stos
imul
jecxz
xlat
repz
loope
jle
in
outsb
lock
xor
jbe
lds
push
rcrl
ss
out
enter
cwtl
repnz
les
movsl
or
pop
testl
out
jb
lods
int3
outsl
add
or
mov
jo
insl
mov
or
inc
popa
dec
jp
sbb
inc
sti
insl
mov
xchg
mov
ret
pop
daa
popf
xor
les
pop
sbb
jg
mov
repnz
fnstcw
pop
cmp
outsb
cs
dec
sbb
jle
inc
std
dec
rcrl
out
arpl
fxch
jnp
repnz
xchg
rorl
pop
mov
dec
and
pushf
jmp
repnz
divl
test
leave
jecxz
jae
std
xor
add
call
xchg
cmp
int
jno
cmpsl
pop
lahf
popa
and
enter
out
cmp
loop
mov
cmp
pop
mov
fcoml
push
mov
sti
mulb
dec
adcb
inc
inc
nop
lret
xlat
pusha
mov
inc
pop
out
and
mov
push
jmp
cmp
lock
add
cmp
test
out
ret
aaa
test
mov
xchg
mov
xor
clc
adc
outsb
pop
and
xor
mov
adc
movsb
inc
mov
test
sub
inc
jge
jge
push
mov
xchg
and
mov
lret
jp
pop
fadd
jnp
adc
lcall
divl
cmp
fs
xchg
add
and
pop
sbb
xorb
mov
jg
aas
and
aaa
add
or
sbbl
orl
or
in
mov
xor
enter
or
jae
das
pop
pop
xchg
adc
loop
push
adc
ss
fidivs
aas
sub
or
xor
rclb
cmpl
lahf
pop
popa
jg
jnp
push
mov
inc
stos
repz
mov
dec
iret
sti
jbe
dec
mov
pop
pop
js
icebp
lcall
rorb
jmp
nop
xchg
dec
ret
sub
out
cmp
inc
call
xor
jle
adc
inc
adc
jbe
mov
insl
cmc
xor
mov
loope
cmovno
xor
or
pop
insb
dec
clc
scas
mov
fisubs
cltd
imul
push
in
sti
pop
cmp
mov
andb
xor
mov
mov
dec
shrl
mov
push
inc
ret
fcmovnb
or
lret
fists
std
cmp
push
repnz
lahf
test
sbb
dec
jmp
rcl
jnp
test
out
je
cmc
mov
pop
out
test
sti
es
scas
dec
das
mov
inc
cmp
add
xchg
mov
push
adc
cltd
sti
xchg
sub
movsl
push
fstpt
cltd
mov
mov
stos
sub
lods
or
addr16
push
outsl
inc
hlt
lahf
iret
push
stos
addr16
sub
add
popf
inc
inc
repz
shlb
es
mov
push
aas
scas
push
mov
push
cwtl
sbbb
out
xor
fs
push
mov
add
lret
xor
cmc
push
mov
lods
pop
lods
movsl
icebp
jb
adc
push
pop
xor
int3
jmp
inc
adc
push
mov
out
and
int3
or
xor
pop
jns
jge
and
jge
jmp
mov
sarb
int3
test
adc
les
push
push
data16
xchg
int
sbb
lods
mov
repz
mov
sbbl
mov
dec
mov
jnp
sbb
movsl
jae
mov
inc
or
mov
dec
pop
and
inc
adc
imul
xchg
adc
sub
inc
adcl
and
xor
jecxz
fldln2
adc
aad
xchg
mov
or
icebp
cmpsb
ret
jmp
mov
jo
jmp
inc
jmp
iret
cwtl
jns
xor
into
ss
and
sbb
cmp
addr16
popa
cmp
je
dec
dec
mov
cli
push
or
cmp
mov
js
loopne
sbb
lods
push
xchg
pop
mov
xchg
jns
cmc
aaa
xchg
mov
adc
inc
xchg
sub
pushf
jecxz
push
xchg
pop
sub
rorl
sub
call
pushf
push
fstpl
out
hlt
rcl
add
pop
xchg
fistpll
jg
lea
xorl
jne
stc
cmp
stos
xchg
inc
adc
pushf
jno
adc
in
gs
jg
mov
jmp
dec
out
cli
scas
stos
push
mov
mov
inc
dec
lds
imul
push
sbb
stos
ret
int3
mov
jnp
jp
hlt
ret
ucomiss
in
inc
icebp
mov
jmp
add
cli
repz
jmp
out
jae
push
shll
push
pop
sbb
jnp
jecxz
xor
mov
push
ss
pop
leave
das
add
mov
in
push
sbbb
push
push
outsl
xlat
fcomi
cmpsb
inc
mov
pop
sub
mov
mov
mov
imulb
mov
xor
test
in
dec
dec
mov
lret
jl
lret
mov
dec
sarb
mov
loop
mov
movsl
and
or
hlt
ret
dec
adcb
adc
lahf
outsl
cwtl
rclb
fbld
push
push
imul
cmp
ss
xor
xor
insl
push
outsl
cltd
addr16
ds
ja
sub
jmp
sbb
fcoms
jmp
out
cmpsl
cmp
std
ds
icebp
add
mov
jae
test
xor
xor
xchg
test
negb
jle
mov
pop
out
hlt
pusha
add
sub
push
push
sub
add
pop
dec
movsb
or
xchg
cmc
adc
jmp
dec
xor
into
shlb
lahf
scas
clc
dec
fldl
mov
jbe
mov
repz
lcall
stos
fdivrs
cmpb
sbb
dec
sbb
add
push
dec
push
sti
mov
lret
add
push
add
cs
frndint
or
mov
pop
push
and
push
movsl
mov
sub
cmp
popf
sbb
mov
mov
std
cwtl
inc
je
icebp
mov
push
aas
cmp
adc
cmp
and
imul
pusha
mov
add
subl
jmp
dec
pop
testl
cltd
xor
or
inc
pop
add
cwtl
int
mov
jns
mov
cmp
add
mov
repz
ja
rcrb
add
mov
sti
cwtl
push
lods
xor
pop
sbb
or
push
repz
rorb
mov
repnz
aaa
andl
subb
dec
jnp
test
loope
pop
inc
movsl
aam
outsl
mov
and
xchg
mov
scas
cs
jns
aam
movb
gs
inc
ljmp
lods
push
and
cmp
out
repnz
enter
sub
or
imul
jo
pop
sbb
xchg
lods
fcomps
stos
or
std
cmp
fwait
movsl
xchg
pop
je
mov
mov
mov
lds
dec
xor
xor
and
mov
jl
push
and
repz
hlt
mov
sub
adc
adc
ret
mov
push
ficomps
enter
jp
xor
inc
out
dec
lea
cs
aam
cmp
ljmp
xor
pop
xchg
dec
xor
scas
lods
test
mov
pushf
in
movsb
xchg
sarb
out
add
mov
cmpsb
aaa
in
push
pop
aam
cmp
inc
enter
mov
dec
ss
fisubl
pop
out
cmpsl
repnz
inc
bound
into
mov
rclb
in
popf
push
test
and
cld
fistpll
or
iret
mov
adc
xchg
jne
pusha
pop
mov
push
out
loope
inc
jbe
push
movsb
sub
movsb
adc
mov
xor
sub
or
lret
mov
push
test
push
sub
mov
adc
adc
sbb
adc
stc
add
cmp
pop
mov
inc
lods
fs
jge
dec
xor
ljmp
cs
mov
mov
dec
xor
data16
sub
pop
cmpsl
in
js
or
test
sub
cmp
cwtl
jne
xor
mov
cmpsb
mov
jl
enter
aam
fscale
je
ljmp
ret
adc
xor
jmp
jae
or
adc
movsb
add
sbb
ds
push
jb
dec
imul
or
cmp
xor
sahf
repnz
mov
pop
jp
test
cld
fcmovnbe
test
in
int
mov
push
neg
pushf
repnz
into
push
stos
fdivl
add
sbb
cmp
add
lods
addr16
add
inc
push
mov
dec
inc
mov
lods
sbb
pop
xor
mov
mov
pusha
lods
mov
ficompl
jmp
sub
mov
ficoml
jl
xlat
imul
rolb
lahf
add
cmpsl
mov
lds
rclb
leave
movb
pop
notl
jnp
fsubrp
imul
fucomi
insl
popa
lods
mov
xor
mov
sub
cmp
rorb
shlb
rorb
push
push
and
loopne
leave
leave
out
ljmp
cmpsb
jo
int
loop
sarb
aam
pushf
test
mov
push
xorb
push
xor
cmpsl
bound
movsl
and
push
pop
sbb
jge
mov
jge
mov
jo
xor
daa
inc
mull
dec
sbb
nop
imul
es
fstl
mov
in
test
push
jne
and
addb
mov
xchg
roll
adc
push
inc
hlt
mov
xor
movsb
sti
in
mov
es
mov
pop
shll
xchg
rcrl
xor
or
fs
mov
or
xchg
cmp
in
mov
cmp
cmp
jp
jnp
test
cmpsl
xchg
shrl
arpl
push
test
lods
cli
jmp
out
clc
dec
movsl
lods
loopne
jecxz
imul
push
les
call
jle
or
scas
add
pop
xor
in
xchg
lods
ljmp
jecxz
mov
mov
lods
fbstp
and
sbb
cmp
jmp
sbb
pop
and
adc
aam
add
jle
push
or
sarb
outsl
xor
cmpsl
xor
iret
dec
mov
push
jno
das
cltd
mov
imul
jl
add
fstp
jo
push
stos
loope
dec
and
add
lahf
add
jl
mov
inc
pop
push
test
test
arpl
out
cmc
xchg
push
xchg
jns
clc
into
pop
clc
lds
add
push
adc
or
push
shl
mov
outsl
jno
out
cltd
cli
lahf
movsl
cvtdq2ps
faddl
mov
inc
testb
into
mov
int
rol
jp
xor
jo
sub
int
data16
cmp
pminsw
xchg
addr16
xchg
fwait
xchg
aas
cs
mov
popa
push
pop
jae
or
pop
mov
push
cs
mov
jecxz
inc
arpl
cmp
les
out
and
inc
dec
out
notb
lcall
test
push
aaa
cmp
in
jl
out
popf
test
mov
fsubr
repnz
add
dec
push
inc
jb
call
push
inc
lea
lock
or
ja
lahf
les
adcb
xchg
or
jae
inc
enter
mov
cmp
jecxz
iret
mov
andb
inc
push
leave
icebp
fisttps
cmp
bound
fmuls
pop
in
cmp
dec
sbb
dec
cmp
les
filds
fidivs
mov
xchg
std
adc
mov
mov
lods
and
cmc
lret
fs
aas
and
loop
and
dec
push
fs
push
mov
mov
pop
and
out
out
pop
insb
loope
push
lret
push
mov
mov
int3
push
add
cld
aaa
pop
mov
cmc
mov
xchg
pusha
jl
inc
repz
out
push
jb
movsl
imul
cli
pop
ljmp
lret
jnp
adc
or
arpl
stos
or
das
add
xchg
into
add
mov
mov
lret
sbb
incl
lods
ret
jp
test
adc
mov
ss
add
jge
std
jne
jb
sbb
pop
ds
mov
in
and
pop
cmpsb
bound
dec
push
sbbl
lea
lods
addb
ja
inc
inc
dec
repnz
jb
fisubrl
ss
dec
inc
test
ret
mov
out
arpl
sub
xor
pop
stos
addr16
mov
xchg
rorb
dec
inc
xor
inc
add
mov
insb
inc
mov
aad
cli
mov
jmp
sbb
aas
push
lods
addb
popf
fwait
ja
popa
dec
add
cmp
lds
push
sub
call
xor
and
lea
in
outsb
dec
add
outsl
incb
lahf
mov
aam
xchg
repz
lds
adc
adc
xchg
jae
scas
xchg
mov
mov
mov
add
push
push
mov
inc
pop
inc
insl
or
and
pop
and
mov
add
mov
cmp
push
icebp
jge
mov
pop
sub
fbstp
nop
mov
daa
cmpb
pop
mov
in
and
adc
mov
int3
jp
loopne
mov
and
lds
mov
lcall
mov
and
push
jecxz
imul
push
lods
cmp
pop
fsts
mov
loope
or
mov
js
ljmp
mov
cs
mov
push
pop
adc
lahf
jg
xlat
into
out
dec
lahf
icebp
ret
sbb
popw
and
mov
outsl
inc
inc
cmp
ja
cmp
clc
bound
int
jge
in
icebp
mov
push
arpl
and
in
xchg
xor
lahf
nop
sub
orb
push
add
mov
adc
std
and
arpl
in
push
push
add
subb
inc
push
rol
imul
xor
lahf
sbb
daa
or
ret
cmc
loope
mov
add
sti
mov
push
mov
jae
loope
fstl
loope
cmp
iret
shll
mov
in
pop
dec
nop
xchg
loop
mov
sbb
mov
push
sbb
leave
outsl
cld
sbb
fsts
ficoml
inc
xlat
lret
lret
lds
and
and
mov
stc
xchg
or
fsubrs
jbe
daa
xor
jle
loope
sub
inc
rcl
or
aad
jno
jle
xlat
cmc
pop
and
std
das
pop
in
sub
lret
fcmovnb
insb
cmpsb
push
fucomi
daa
aas
sbbb
mov
mov
xor
or
adc
fiadds
xor
xchg
push
or
stos
add
and
sahf
and
jbe
and
fwait
cmc
fwait
xchg
add
mov
fs
push
adc
pop
daa
sbb
or
ljmp
cmpsb
shll
stos
test
enter
mov
leave
jecxz
sahf
dec
popa
and
dec
pushf
call
sarb
inc
or
inc
jbe
es
imul
mov
arpl
int
mov
vmovshdup
aaa
mov
or
shr
add
popa
mov
test
xchg
inc
shl
sbb
jecxz
ja
xchg
fmul
pop
adc
js
cmpsl
mov
and
das
imul
and
dec
test
pop
cs
push
push
out
stos
add
ret
dec
in
add
inc
mov
aas
pop
push
in
lahf
inc
loope
cmp
dec
jb
out
out
inc
stos
pop
cmpsb
loop
bound
and
jge
xor
fwait
mov
push
xchg
pop
push
adc
lea
dec
or
stos
testb
pop
push
push
mov
adc
or
sahf
sub
pop
xor
push
xor
xchg
movsl
push
mov
xor
cld
gs
jbe
push
aad
loope
sti
push
ret
shl
pop
jnp
pop
dec
andl
mov
test
lcall
int3
mov
xor
lcall
out
sahf
jno
add
xor
xchg
mov
add
in
movl
jb
xor
ljmp
mov
inc
dec
cmp
or
outsb
xlat
and
std
call
and
lds
jne
cmp
xor
dec
cmp
inc
sbb
push
mov
sbb
test
testl
jg
or
mov
mov
inc
test
into
outsl
ja
out
jmp
xchg
jb
mov
aaa
ret
mov
xchg
xchg
jno
test
mov
faddp
cli
test
stc
es
mov
fmull
xor
movsl
jge
add
jbe
lods
cmpsb
sti
pusha
mov
out
ret
push
xchg
call
call
push
imulb
enter
out
xchg
mov
int
xorl
fcompl
mov
sub
mov
mov
xchg
push
mov
sbb
dec
in
fistpl
adcl
push
sub
adc
fdiv
xor
sub
and
test
sub
or
icebp
lret
cli
pop
cmp
je
sbb
xor
dec
out
mov
rcll
cmp
inc
mov
mov
xchg
mov
test
mov
dec
sbb
ja
stc
mov
sbb
test
jp
iret
cmp
insb
xchg
sarl
rcrl
iret
lcall
dec
xor
xchg
popf
pop
loopne
xor
cmc
loope
mov
add
loopne
dec
bound
push
dec
fcompl
sbb
shlb
inc
movsl
lret
lods
mov
push
sbb
icebp
mov
shll
add
jns
xor
jbe
stc
cmova
les
add
adc
popf
push
fstl
scas
rorb
stos
popf
mov
leave
or
cli
pop
cltd
insb
out
inc
sarb
xchg
ss
jmp
cmp
push
sub
lods
mov
add
adc
mov
sub
jmp
mov
or
bound
jnp
xchg
xchg
hlt
mov
sbb
ret
mov
dec
cmpsb
push
lcall
sar
push
adc
push
dec
sti
into
out
arpl
xchg
xchg
push
xchg
int3
call
loop
sbb
adc
pop
sbb
mov
addr16
js
mov
rorl
inc
lret
push
shll
movsb
aaa
rorl
push
mov
push
roll
cmpsl
and
add
and
repz
pop
cwtl
ret
enter
stos
pop
mov
loop
mov
xor
cld
les
dec
xchg
jae
popf
xor
sub
cmc
fnsave
xchg
dec
push
pop
stos
xor
call
mov
mov
int
adc
mov
mov
fsub
jmp
in
pop
mov
test
push
adc
scas
adc
cmp
and
xchg
rorl
and
pop
rclb
int
out
fcmove
adc
movsb
dec
fsubl
ret
outsl
inc
xor
dec
mov
pushf
jns
jae
cltd
push
cmp
fists
sbb
dec
repnz
pop
xor
inc
mov
inc
sub
cmp
xchg
leave
add
xchg
test
adcb
inc
xchg
cli
mov
mov
add
xor
mov
outsl
cmp
loope
inc
mov
dec
fwait
push
dec
push
test
das
inc
scas
mov
or
es
jb
jns
cmp
sbb
push
push
dec
sub
aad
movsb
ds
and
dec
lock
mov
jp
mov
cmp
hlt
fsubl
sti
cmp
fucomi
sub
ss
fisubrs
mov
cmp
lret
jle
or
pop
outsl
fidivrs
mov
cmp
or
push
and
jb
inc
inc
test
jb
push
mov
aad
pop
mov
mov
mov
or
mov
orl
movsb
cmc
xchg
cltd
shll
mov
pop
dec
inc
adc
xchg
dec
stc
or
cmp
cmp
and
fwait
push
out
insl
jmp
in
push
adc
ss
mov
xor
fisubrs
ret
jp
jo
or
xchg
hlt
push
jmp
fistps
inc
sbb
lods
mov
pusha
rep
jmp
mov
and
std
enter
cmp
stc
subb
or
cmpsb
push
fcoml
jmp
or
or
sbb
or
mov
jbe
pop
fbld
into
xchg
dec
cmc
shll
test
mov
mov
xchg
and
outsl
xor
fisubrs
fnstenv
sahf
ret
cwtl
mov
int3
ret
xchg
rclb
xor
xor
sbbb
movsb
or
test
imul
aas
xor
xor
sub
jno
ljmp
or
add
dec
inc
shrl
adc
fwait
test
mov
xlat
roll
outsb
push
xchg
sti
testl
inc
rorb
punpcklbw
push
cmp
push
add
scas
push
ljmp
mov
jle
aaa
xchg
jb
jecxz
enter
inc
enter
pop
aad
popf
mov
sub
lcall
cmp
mov
cli
add
xchg
arpl
or
sub
cld
int
imul
pop
jo
fisubs
cmp
lock
mov
adc
in
sbb
stos
shlb
insb
movsl
std
insb
ret
xchg
movsl
jno
jp
pushw
add
insl
and
push
jecxz
add
cltd
add
jecxz
cwtl
mov
mov
push
mov
fs
out
and
inc
mov
xor
push
out
fldt
sbb
fdivrs
xor
add
xor
lcall
add
cmp
mov
inc
adc
mov
or
cs
push
mov
push
cmp
outsl
andb
jge
adc
jne
aad
cmp
dec
adc
lock
inc
inc
push
nop
ja
outsl
stos
xchg
sbb
repnz
push
subb
dec
in
and
hlt
sbb
xchg
xchg
and
cltd
hlt
mov
sti
inc
imull
inc
sbb
xchg
mov
push
cmp
add
enter
icebp
cmpsb
lods
mov
and
imul
iret
dec
cs
cmp
ret
sbb
mov
add
lock
push
push
and
xchg
iret
outsb
cmp
lcall
and
movsb
mov
bound
sub
sub
push
aam
rclb
push
aam
mov
sbb
add
pushf
fldl
dec
lret
lods
adc
int
xchg
loop
ss
or
loop
in
loope
cmp
mov
sbb
fldl
jge
inc
icebp
mov
imul
es
out
stc
rol
loop
push
push
xor
pop
inc
subl
sti
push
inc
mov
in
inc
dec
adc
and
xor
lods
or
ret
test
add
cwtl
cmpl
and
rcll
push
dec
rcll
mov
jne
popf
push
jnp
dec
rclb
pop
or
sub
pop
xor
jb
inc
movsl
lea
jl
xor
ret
push
xor
enter
dec
bound
pop
push
sbb
mov
add
mov
call
into
mov
sub
inc
mov
xchg
fldl
mov
mov
clc
dec
ja
rolb
popf
les
sub
mov
movsl
std
movsl
xchg
repz
jp
xor
ret
sbb
imul
adc
or
jg
mov
test
jg
mov
daa
xor
lret
cmpsl
lcall
lods
push
lds
imul
fnstenv
cwtl
and
clc
mov
cld
sbb
cs
loop
mov
mov
jae
pop
dec
pop
fnstsw
mov
lock
pop
in
jae
cmp
xchg
scas
jp
fdivrp
ja
mov
mov
aas
fs
test
push
adc
jbe
sahf
pop
dec
and
sarl
sub
testl
sub
mov
cmp
outsb
mov
and
adc
xchg
loope
xor
xlat
dec
leave
sub
std
mov
pusha
fidivrl
out
aaa
out
mov
jnp
cmp
sub
out
mov
imul
roll
or
lret
aam
out
pushf
push
push
shll
cmp
andb
scas
push
imul
push
daa
mov
xor
into
mov
scas
sub
push
jmp
pop
setae
repz
pushf
cmc
xchg
dec
mov
scas
mov
test
or
xchg
int3
stos
cmpsb
sbbl
std
sti
notl
subl
mov
jne
jg
pop
ja
cmp
aad
or
add
out
repnz
imul
cmc
sbb
and
sub
je
movsb
mov
movsl
adc
xor
popa
cltd
nop
mov
lret
aaa
and
cs
ficoms
aaa
out
jno
sbb
inc
and
loope
cmpsb
jge
push
or
jnp
add
bound
xchg
loopne
fstpl
daa
enter
cmp
sub
fwait
popf
das
dec
adc
cwtl
lret
inc
add
lea
inc
dec
test
cmp
sbb
pop
adcl
call
out
lahf
scas
xchg
jp
lret
sbb
into
fs
addl
inc
jnp
mov
loope
bound
loope
xor
leave
subb
out
push
dec
fs
add
enter
push
and
inc
cmp
pushf
inc
out
adc
xchg
or
and
out
mov
stos
arpl
jl
push
and
cwtl
mov
cmp
repz
jp
xor
jbe
fs
inc
hlt
repnz
mov
outsb
hlt
lcall
gs
leave
jne
decb
lcall
cwtl
outsb
insl
stos
mov
popf
clc
and
shlb
imul
inc
jle
and
or
pop
jg
mov
xchg
cmp
insl
push
in
inc
xchg
sub
cli
pextrw
dec
cs
mov
cmp
andb
xchg
ret
or
adc
pusha
pop
adc
or
ljmp
shll
test
or
stos
pop
cli
push
out
pop
divl
pushf
int
jne
lahf
add
gs
pop
fnstenv
dec
js
test
in
roll
sbb
pop
xor
xchg
lods
test
sub
test
sbb
lods
jae
mov
scas
pushf
jge
inc
mov
in
data16
adc
inc
inc
dec
xor
sbbb
jmp
jb
sbb
jnp
lock
inc
xor
inc
cwtl
sbb
cmp
pop
mov
pushf
rolb
pusha
jo
inc
fsubrs
push
xchg
or
and
fildl
mov
lock
lcall
pushf
frstpm(287
sbb
jle
inc
and
push
mov
cwtl
js
cmpsl
out
in
in
push
pop
mov
lods
mov
das
inc
xlat
je
ss
cmpsb
es
xor
adc
pop
dec
call
cs
in
cs
outsl
xchg
stos
mov
xchg
mov
push
in
add
xchg
fwait
jo
mov
inc
lahf
aaa
sbb
leave
int3
mov
test
or
loopne
test
xchg
push
and
sbb
pushf
xchg
aam
pusha
jae
cs
jge
xorl
pop
push
in
sahf
mov
fnop
xlat
sub
ds
loopne
xchg
out
jnp
notb
aaa
out
outsl
xchg
sbb
jge
nop
cmp
js
test
pop
xor
push
push
mov
or
jnp
repz
in
sti
dec
imul
or
faddl
xrelease
xchg
mov
imul
sarl
fs
stc
or
xchg
push
test
xor
out
sbb
mov
xlat
xchg
adc
jge
xlat
out
stos
lret
pop
xchg
mov
mov
stc
xchg
push
inc
dec
test
push
ret
lods
pop
mov
inc
and
icebp
cmp
mov
push
mov
pop
add
cltd
popa
js
sahf
pusha
fcoml
xor
aad
xor
fcompl
mov
and
and
or
fldenv
repz
addl
add
cmp
daa
xchg
je
xlat
push
lret
int
pop
data16
enter
jge
jbe
pop
xor
sub
jne
lahf
fwait
mov
cmp
mov
cmpsb
in
mov
adc
cmp
adc
jmp
in
je
repnz
lea
push
sbbl
sub
cmpsl
popf
and
and
inc
outsb
add
sub
das
jnp
xor
jle
add
sbb
loop
popa
mov
pop
rcll
xor
and
add
or
mov
test
addb
lods
mov
dec
xchg
xchg
int
mov
mov
lret
les
sbb
inc
mov
ljmp
rol
fdivl
mov
popa
adc
cmp
pop
repz
cmp
stos
mov
mov
movb
movsb
push
xchg
mov
sub
es
enter
bound
gs
pushf
mov
mov
mov
jle
and
hlt
lea
inc
sbb
mov
cmp
sub
dec
das
mov
out
pop
mov
ret
cmpsl
dec
push
rclb
mov
test
jb
daa
push
xor
lahf
mov
inc
add
sarb
mov
loope
jp
fmuls
xor
mov
out
shrl
fistpl
lods
pop
sbb
orl
stos
xchg
rcrb
pop
out
sahf
mov
stos
adcb
push
aaa
out
inc
fiaddl
sbb
sbb
fucomi
test
cmp
pop
xchg
pushf
jno
and
cmc
jl
mov
push
adc
ljmp
aaa
xor
cli
mov
fwait
add
xchg
cld
mov
mov
adcl
sbb
cltd
jne
mov
xor
cli
mov
mov
outsb
mov
repnz
dec
movsb
roll
aam
or
inc
dec
addr16
stos
aad
js
cmpsb
mov
mov
out
jl
cmpsb
and
adc
sub
in
mov
test
pop
loopne
xchg
inc
test
xchg
leave
mov
xor
outsb
xchg
and
sbb
dec
rorb
stos
mov
pop
push
dec
or
aam
mov
aad
fnstcw
inc
scas
push
andl
push
mov
pop
cmc
and
pop
xchg
xchg
inc
repnz
aaa
ja
bound
bound
shlb
mov
inc
pop
loopne
aam
jns
in
stos
sbb
loopne
inc
dec
and
icebp
mov
mov
xchg
sub
cmp
repz
cs
out
fimuls
fs
fwait
pop
fwait
inc
std
xchg
pop
xor
and
iret
push
sahf
xor
movsl
js
loopne
and
stos
cs
mov
mov
pusha
aad
add
test
pop
xor
in
cmp
dec
inc
insl
hlt
fidivs
mov
mov
xor
popf
and
mov
fstpt
xor
jge
push
nop
arpl
adc
pop
inc
jmp
iret
cmp
inc
cld
fwait
xor
iret
in
xor
ljmp
mov
dec
jae
aad
test
insl
movq
and
sub
cmp
xor
adc
mov
add
rorb
mov
lcall
push
mov
mov
rolb
iret
dec
jae
or
lods
dec
lods
sbb
pop
push
mov
sub
push
mov
sub
rcll
jl
ror
cmp
test
xchg
inc
push
lock
insl
or
cwtl
sub
in
and
pop
inc
inc
sarl
inc
lock
ljmp
mov
nop
out
leave
leave
xor
test
xlat
jae
cmpl
mov
adc
fwait
add
in
jmp
pop
dec
sbb
add
clc
mov
sbb
fnop
sub
mov
lahf
in
push
fscale
notl
repz
bound
out
pop
sbb
bound
ret
mulb
inc
sahf
stc
or
mov
jnp
xchg
in
iret
shll
sub
in
jnp
les
sub
and
and
cs
test
int3
rol
jg
xchg
dec
cmp
lret
fildll
and
test
outsl
sahf
stos
xchg
out
push
jbe
inc
mov
pop
jge
cmpsb
xor
and
xor
dec
rolb
hlt
mov
lahf
jb
add
rorb
cmp
sbb
dec
adc
dec
mov
dec
push
mov
movsb
xchg
sbb
ss
ja
inc
rorl
inc
fmull
icebp
mov
mov
push
and
mov
cmpsb
cmc
sub
out
mov
mov
adc
mov
xchg
or
or
fcomps
push
add
dec
test
add
adc
cmpsl
dec
dec
jp
xchg
outsb
divl
fwait
mov
xchg
xchg
and
jp
xor
jecxz
and
icebp
or
ljmp
scas
call
into
fwait
aaa
outsb
add
push
push
mov
cld
push
sbb
dec
push
push
call
stos
xor
inc
cmp
cmp
clc
es
jle
fdivr
repz
mov
sub
sub
sub
jmp
pop
adc
or
xor
add
push
mov
fadds
lahf
dec
sahf
mov
cmpsl
cmp
mov
pop
aam
shl
and
push
adc
sub
and
jmp
mov
int
pop
mov
jb
rcrl
adc
xlat
popa
js
das
pop
or
dec
test
or
bound
mov
xor
pop
roll
enter
stc
clc
popa
loopne
mov
ds
stos
or
ret
mov
cmpsl
call
and
popf
fldt
inc
xchg
ret
xor
loop
or
aaa
jb
or
mov
mov
and
fs
mov
fsubp
insl
xchg
mov
pop
popa
pop
rclb
dec
fdivrl
pusha
outsb
mov
push
fnstcw
fsubs
adc
cmpl
xor
or
jp
push
sbb
test
loope
cmp
fisubrs
or
push
mov
ds
cltd
loope
sub
sbb
or
aam
xchg
cmp
fimull
orl
pop
adc
ljmp
cwtl
add
adc
lods
divl
outsl
ss
push
fnstenv
rolb
xchg
jle
movsb
pop
cltd
lods
shrl
addr16
jns
xchg
test
mov
hlt
movsb
xchg
add
pop
inc
mov
repz
lret
mov
push
mov
movsb
out
xchg
mov
icebp
pop
inc
mov
lea
adc
jmp
xchg
or
cmp
and
cmp
loopne
mov
cld
push
mov
dec
loop
pop
sub
jnp
pop
rorl
adc
sub
dec
das
mov
pop
or
or
jmp
push
fcmovu
test
stos
dec
lods
jg
pop
mov
adcl
out
mov
adcb
mov
xchg
dec
sub
xor
int3
or
jl
cld
inc
pop
xor
pop
push
jnp
xchg
orb
sub
cmpsl
lret
push
xor
sti
std
add
shrb
xchg
pop
mov
out
sbb
loope
jg
orb
cmpsl
push
dec
ret
sahf
pop
and
mov
mov
filds
mov
sti
sub
scas
adc
rcll
mov
inc
pop
imul
or
dec
cmp
addr16
outsb
in
and
dec
cli
pop
push
add
xchg
insb
and
xchg
das
ret
or
lods
aas
jmp
sub
stc
loope
icebp
lret
dec
pushf
inc
in
popf
add
sti
pusha
jecxz
rorb
add
or
ds
fmull
adc
inc
mov
std
out
aas
pop
pop
fdivrs
xchg
imul
and
jno
adc
aaa
push
inc
cmp
jno
and
xchg
push
inc
loopne
leave
add
or
fcmovnb
mov
fdivs
adc
push
and
pop
fs
ja
shll
rcr
jo
mov
and
push
push
or
jp
rcrb
aaa
cmp
shll
sbb
test
adc
les
mov
or
clc
cwtl
dec
insl
inc
int
jmp
les
lock
and
pop
jae
stos
int3
jae
stc
jl
cmp
add
xor
movsl
mov
sbbb
mov
pop
outsl
mov
xchg
hlt
roll
test
lods
test
nop
xchg
test
mov
jge
inc
cmp
lock
mov
cmpsb
cmc
movsl
cli
popa
dec
shlb
faddp
mov
fwait
add
jbe
mov
push
fdivrl
or
pop
lret
fistpl
mov
stos
jecxz
std
outsl
mov
into
pop
popa
int
roll
int3
cld
xchg
dec
andl
jl
mov
loope
mov
in
and
pop
push
insl
jle
fs
mov
sbbl
lcall
scas
sub
mov
xor
adc
hlt
adc
push
xchg
push
pop
jecxz
lods
pop
pop
popf
lock
data16
mov
sbb
cmpb
mov
sbb
mov
xchg
repnz
out
cli
mov
cld
mov
mov
mov
inc
push
aas
sub
sbb
add
pop
push
add
rorl
mov
dec
cmc
shl
idivl
or
sub
pop
iret
rol
xchg
xlat
shll
mov
fiadds
call
mov
insb
ja
out
lcall
mov
insl
fists
cs
mov
jne
fsts
fdivs
rep
xor
mov
sub
or
insb
mov
sti
pop
rcrb
cmp
vpmuludq
inc
outsb
arpl
pop
inc
pop
cltd
fnstenv
int
jecxz
lea
leave
lock
stos
je
cmp
icebp
dec
scas
bound
mov
pop
mov
adc
rcrb
sbb
lahf
sbb
ret
ret
jmp
push
std
jle
out
out
sbb
sub
es
jae
sbb
and
mov
sbb
push
pop
pop
popl
out
inc
flds
cmp
sub
add
int3
pushf
lock
adc
sbb
out
fwait
mov
mov
push
sarb
adc
lods
cmp
data16
push
jle
fxtract
popf
add
les
adc
daa
lds
adc
add
into
xchg
cli
adc
loope
sub
jg
cwtl
outsb
mov
sub
inc
movsb
cmc
test
inc
movsl
in
mov
mov
inc
enter
sub
push
mov
add
test
jnp
dec
pop
mov
gs
pop
jmp
cmpsb
jnp
ret
xchg
fstpt
jg
jb,pt
xlat
or
sbb
loop
jmp
adc
pop
or
mov
push
jns
cmc
lods
lea
adc
aad
out
xorb
dec
stos
dec
outsl
push
daa
cmp
sarl
xchg
sub
ret
adc
adc
test
shll
daa
fimull
pop
lret
jae
fistl
int3
push
arpl
adc
outsl
movsl
mov
cmpb
in
fcoml
xor
sbb
outsl
xor
jecxz
sarb
mov
xchg
pop
pushf
test
je
fcmovnu
adc
popa
and
cmp
mov
xor
inc
stos
ja
xor
dec
mov
cwtl
je
popf
sbb
push
lea
xlat
or
add
or
and
test
adc
into
rcll
test
nop
rcrb
icebp
std
pusha
ret
es
arpl
sbb
sbb
xchg
dec
fisubrs
jnp
fcmovb
js
mov
fadd
fnstcw
addb
xor
ret
add
mov
xor
mov
inc
in
xchg
inc
shll
in
out
pusha
inc
push
xchg
pop
ret
loope
pop
dec
jg
clc
adc
cmp
add
popl
call
mov
jne
xchg
xor
insb
mulb
sbb
fldl
xchg
pop
jge
out
mov
imul
ljmp
pushf
and
les
push
rcrb
push
or
push
loopne
bound
push
add
inc
and
clc
mov
push
out
add
cmp
loop
test
ret
popa
pop
testl
in
fildl
jmp
pop
repz
jnp
jae
shlb
inc
push
dec
or
mov
jmp
sbb
mov
jmp
js
jp
pop
fadds
test
pop
xlat
inc
movsb
sbb
shll
pushf
inc
aas
xor
adc
dec
je
int
sti
cwtl
shrb
dec
int
xchg
insl
imul
push
inc
cmpl
sbb
enter
add
repnz
push
inc
ja
or
mov
cld
xchg
jae
cmp
mov
dec
dec
pop
ret
dec
insl
sub
rcll
adcl
int
sub
popa
sub
push
cwtl
cmp
aaa
bound
jae
out
adc
adc
ljmp
jns
rolb
mov
jns
mov
lock
cmp
mov
jle
inc
aas
cmp
sbb
or
add
pop
out
sbb
mov
xchg
mov
movsl
std
pushl
fldt
leave
jb
add
lea
or
mov
cwtl
dec
jne
ljmp
cmpsb
jge
jne
mov
mov
cs
js
aas
lret
dec
dec
mov
scas
mov
je
std
adcb
sbb
imul
rcll
add
xchg
mov
mov
adc
fs
jg
sub
fimuls
insb
adc
push
pushf
out
imul
xchg
xor
aam
push
add
aaa
cld
in
jne
jg
lods
pop
in
sbb
inc
push
je
jge
lahf
add
mov
cmp
pusha
cs
in
loop
pop
mov
sbb
push
fwait
jno
fcomps
lahf
scas
outsl
and
insl
cmpsl
icebp
gs
adc
push
repz
jg
pop
dec
and
sub
push
loope
lret
sub
sub
mov
push
ret
jo
cmp
lahf
sub
xlat
insl
test
jnp
xchg
sbb
out
imul
scas
cmc
push
lahf
mov
jmp
mov
loopne
mov
add
xlat
cld
inc
int
rcll
mov
cmp
cs
mov
xchg
mov
push
pop
les
xchg
imul
xor
push
outsl
scas
mov
je
sbb
mov
popf
jo
lret
sbb
scas
ret
push
fidivl
cmpsb
cmp
out
icebp
add
inc
pushl
xchg
rolb
pop
lcall
lcall
or
cli
xlat
xchg
xor
fisubs
mov
cld
aaa
movsl
jg
or
jl
xchg
cli
cmp
cmp
pop
push
test
cmp
pop
mov
push
xchg
xchg
mov
insb
mov
orl
dec
mov
lods
ret
fcompl
adc
dec
leave
cmp
outsl
mov
insl
stos
ficompl
mov
sub
xchg
nop
lea
repnz
pop
ja
xchg
pop
mov
test
cwtl
xlat
cwtl
push
sbb
push
adc
mov
xchg
or
or
fstpt
mov
mov
out
xchg
cmp
ret
aaa
les
mov
arpl
push
mov
dec
ja
les
mov
fidivrs
cltd
push
mov
ja
loopne
pop
pop
pusha
pop
push
push
cltd
jo
adc
mov
in
fst
call
or
out
fwait
cltd
pop
fxch
push
imul
add
cmc
pop
xchg
sub
movsl
cmpsb
or
shrl
loope
mov
movsb
xor
xor
pop
int
pop
jbe
mov
sbb
fisubs
mov
mov
bnd
sub
and
fdivr
mov
in
ret
add
mov
clc
cmp
inc
mov
imul
in
decl
lahf
fistl
enter
xor
int3
outsl
push
jge
and
mov
push
inc
popa
adc
mov
int3
je
push
in
sub
jl
out
sbb
lds
int3
push
aaa
and
push
pop
sub
mov
adc
mov
into
arpl
xchg
mov
mov
xchg
imul
mov
fwait
dec
xchg
or
push
sbb
dec
nop
xchg
mov
or
add
pop
outsb
push
pop
push
dec
xor
add
fidivs
inc
pop
ja
scas
pop
mov
jge
hlt
les
ljmp
push
cmpsl
push
cmpl
xchg
cld
iret
sbb
pop
clc
sub
cs
jbe
fstpt
lahf
pop
inc
dec
mov
scas
popf
xor
fsub
sbb
divb
mov
pop
cltd
lret
pushf
jg
or
pop
cmp
out
cmpsb
mov
add
test
in
sub
pop
fidivl
push
scas
sbb
or
pop
cs
shlb
mov
cmp
stos
or
mov
jnp
pop
sbb
rcrb
cmc
sbb
pop
js
xchg
scas
frstor
rol
dec
mov
inc
idivb
mov
addl
jle
cmp
mov
sbb
bound
cmpsb
push
mov
sbb
or
jp
adc
and
ds
push
not
adc
inc
imul
xchg
mov
cmc
pop
adc
mov
ret
nop
and
push
dec
sub
in
mov
cld
jmp
imul
xchg
mov
mov
fdivl
sbb
push
sub
js
push
mov
lods
movsl
xchg
mov
xor
sub
stc
dec
pop
negl
addb
mov
xchg
out
inc
xchg
lods
sbb
jg
in
in
shll
lods
test
push
xor
cltd
aad
and
sbb
inc
add
ds
shll
pop
or
push
xor
sub
shl
mov
push
add
aaa
inc
cmp
or
dec
jae
insl
lahf
je,pt
fisubs
cwtl
outsb
aam
mov
sbb
lret
lret
dec
fisubl
inc
inc
and
out
cmp
insb
sar
ss
or
fists
mov
lods
xor
mov
lock
push
push
jb
xchg
rcll
xchg
cmpsb
mov
add
push
cmp
sbb
mov
and
xor
pop
mov
jmp
push
xchg
mov
sbb
dec
adc
repnz
lods
stos
cmpsb
mov
mov
sahf
pop
mov
inc
jbe
xor
es
into
jmp
mov
pop
cltd
stc
ss
push
hlt
fwait
cs
daa
ss
sub
aas
push
out
out
mov
test
mov
in
ja
lods
add
push
push
and
cmp
push
xchg
in
aaa
xor
mov
sbb
xchg
xor
pop
inc
sub
dec
mov
repz
push
insl
and
cmp
and
cmc
and
adcl
add
jbe
xor
mov
dec
or
jbe
mov
adc
mov
or
and
sub
negl
loopne
jne
pusha
je
fisubl
jl
shlb
sbb
mov
mov
mov
xchg
and
adc
data16
shll
cmp
jp
je
loope
sub
cmp
cmc
push
ljmp
test
pushf
sar
test
aam
pop
test
mov
dec
bnd
movsb
mov
rcl
cmpsb
xlat
sbb
lahf
jbe
mov
jmp
std
cmc
cwtl
push
mov
cmp
imul
jnp
test
sahf
addps
cli
jb
dec
cmp
cld
sub
xchg
fcomps
inc
and
outsb
mov
fst
push
dec
sub
repz
fs
push
pop
mov
pop
jbe
mov
ljmp
mov
bound
mov
in
adc
in
loop
dec
jo
ljmp
cmp
and
ret
adc
push
jge
mov
xor
aaa
leave
add
pop
push
cmp
mov
jb
ja
loop
mov
lods
add
mov
aas
divb
sub
xchg
clc
xchg
xor
movsb
shll
leave
sub
jp
cld
pop
push
or
test
loope
jne
int
sahf
inc
push
inc
adc
add
ret
out
push
pop
and
jmp
call
fwait
sbb
popa
dec
pop
cmpsb
adc
and
adc
cmp
add
lods
cmc
inc
push
addr16
data16
aaa
mov
xchg
arpl
fstl
into
mov
xorl
mov
jae
scas
jns
mov
cmp
sti
fcoms
repnz
out
orl
cmp
insb
popf
ffree
add
shlb
sbbl
test
in
fs
xchg
push
pop
sub
test
pop
orb
outsl
into
dec
je
or
or
sbb
mov
cmp
push
movsl
adc
pop
ret
mov
or
cmp
mov
adc
dec
dec
jl
mov
scas
fnstcw
subl
pusha
mov
push
in
mov
and
push
pop
adc
cwtl
cltd
mov
rclb
xchg
into
mov
push
movsb
mov
cld
iret
sub
fs
and
mov
add
jae
ss
cs
mov
xchg
add
lret
mov
addr16
jmp
lds
or
or
lret
sbb
jp
fwait
jo
cwtl
pushf
insl
cmc
sub
fsubl
jl
test
test
leave
or
pop
sbb
or
xchg
fcmovu
xor
sub
imul
bnd
fcmovnu
jg
adc
in
outsb
dec
mov
or
sub
cmp
lret
lock
rcr
stos
dec
int3
mov
hlt
cmp
mov
repnz
pop
pop
lods
and
add
sub
xlat
push
sahf
add
mov
and
pop
dec
icebp
xchg
nop
and
mov
and
sub
popf
jnp
pop
and
bound
je
mov
insl
jo,pt
pop
push
xchg
cli
popa
mov
cmpsl
lcall
mov
jae
mov
sub
push
dec
lock
out
add
mov
lods
and
dec
data16
outsb
imul
mov
cmpsb
jmp
cs
mov
xchg
push
inc
div
divb
sbb
cwtl
in
stc
pop
jecxz
pop
jl
mov
mov
mov
jno
sbb
fmul
cmp
pop
jle
sbbl
movsb
push
test
jae
mov
xchg
pmaddwd
ljmp
rorb
pop
xor
loopne
lods
call
xor
mov
cmp
shr
cltd
loopne
dec
sbb
jp
mov
push
push
int3
bound
jmp
xchg
mov
addl
addb
xor
cli
mov
aad
add
mov
ja
pusha
scas
jbe
ret
fimuls
std
sti
adc
out
fistpl
pusha
cltd
inc
and
pop
pushf
mov
fstpl
addr16
incb
add
adc
out
add
cmp
movsb
in
push
mov
lock
divl
mov
jnp
jp
out
std
loop
jo
ds
cli
xlat
and
or
jg
cmpb
pop
jmp
xchg
sub
enter
movsl
xor
sbb
aas
stc
sahf
mov
int
imul
xor
push
xor
push
xchg
imul
add
icebp
pop
mov
mov
ljmp
inc
cwtl
clc
outsb
and
xor
and
lock
lods
sub
out
xchg
inc
xor
mov
sub
inc
call
sbb
and
mov
sub
outsl
mov
repz
in
mov
push
call
arpl
lahf
adc
sbb
pop
test
and
inc
ret
mov
rcll
mov
loopne
mov
sub
xchg
cs
add
test
in
xchg
sbb
mov
jbe
ror
loope
hlt
arpl
or
fsubr
xchg
dec
scas
xor
loope
push
mov
std
hlt
pop
popf
push
ja
aad
inc
jne
sbb
push
fsubr
fldenv
and
and
mov
stos
or
sub
pop
sti
xchg
ret
hlt
out
adc
mov
cmp
aam
mov
roll
aam
and
mov
ret
xchg
sub
movsl
mov
jns
jmp
sub
mov
adc
notb
adc
js
popa
lds
adc
dec
sbb
inc
ret
mov
movsl
push
test
sub
lods
scas
fsts
cmp
lret
les
filds
sbb
push
fmull
inc
jb
lahf
out
sub
dec
push
sub
mov
add
dec
and
cmp
or
jmp
jp
icebp
popf
cwtl
fdiv
lcall
stc
in
scas
sbb
adc
jg
out
ficoms
movntps
cmpsb
cs
loope
mov
push
movsb
int3
or
enter
pop
pop
loope
mov
ja
push
and
jns
adc
in
mov
jle
sbb
xchg
jecxz
repz
in
fisubl
add
cmpsl
lock
mov
sbb
add
adc
adc
rorb
xchg
sbb
xchg
sbb
lock
cmp
dec
mov
mov
addr16
or
xchg
pusha
xchg
cmp
test
das
gs
daa
cltd
adc
fldenv
ss
jmp
dec
adcl
shl
mov
inc
add
scas
dec
pushf
cwtl
add
or
adc
pop
outsl
aam
enter
pop
pop
mov
sbb
lcall
gs
je
or
or
xor
fwait
inc
loop
nop
sub
pop
dec
cmp
nop
aas
add
popa
or
mov
push
out
push
in
jno
dec
ret
cwtl
or
push
out
cmpl
outsl
lret
lea
dec
push
jmp
fucomip
arpl
sub
iret
fistl
popf
adc
je
test
int3
or
mov
insl
push
or
jne
mov
jmp
mov
jge
lds
outsb
inc
adc
dec
and
fmull
jb
jp
popf
or
mov
jnp
mov
mov
mov
fsts
or
and
or
cmpsb
adc
adc
xlat
out
adc
nop
pop
pop
cmp
inc
adc
insb
jae
dec
and
sub
ret
push
inc
test
mov
fs
push
scas
mov
push
and
pop
test
and
sbb
push
mov
fidivs
xor
xor
dec
fs
shlb
out
ror
movsb
xchg
mov
int
addb
and
test
mov
popa
mov
add
or
sbb
cltd
xchg
mov
leave
dec
adc
push
sbb
dec
mov
cmp
lret
clc
je
xchg
xor
movb
cmp
inc
iret
lret
fs
dec
int3
or
xchg
mov
xchg
jb
lock
ja
push
mov
bound
fsub
jbe
daa
aam
add
lds
or
mov
popa
rclb
pop
in
int3
lock
out
cmpsl
int3
inc
loope
aas
and
pop
das
cld
mov
and
pusha
enter
adcl
fistpll
adc
sbb
push
and
fisubl
push
pop
xlat
repnz
jbe
mov
and
iret
sti
imul
clc
inc
sub
push
jne
mov
fwait
inc
jle
xlat
in
out
lea
outsb
jbe
add
imul
int3
les
ds
jae
insl
ja
aad
xor
cs
push
dec
mov
xor
push
mov
sub
lcall
mov
xchg
sbb
sbb
shrl
out
pop
ret
jnp
jmp
xor
xor
push
xor
mov
arpl
push
push
ret
sbb
sti
sti
xchg
in
cli
int3
gs
stos
inc
addb
mov
lcall
jnp
data16
gs
inc
mov
lret
mov
mov
and
daa
out
popf
in
pushf
xor
hlt
les
shll
jge
xchg
in
add
jge
cmp
popl
nop
ret
lcall
bound
mov
mov
cmp
push
into
pop
and
cs
inc
ds
sti
ret
adc
pop
stos
int3
daa
daa
or
mov
scas
inc
ret
adc
xorl
jns
divl
imull
cmp
lock
movsl
and
mov
inc
hlt
fsub
xor
das
cmp
or
jecxz
jnp
pop
xchg
mov
or
inc
ja
xchg
mov
outsb
jl
mov
push
rcl
mov
mov
ficoms
sub
mov
jne
cmovg
stc
ljmp
xor
pusha
pop
jae,pn
movsb
ja
pop
cs
ljmp
jg
pop
pop
jnp
dec
loope
jb
aam
jbe
push
jle
xor
sti
hlt
cld
inc
fsubrl
stc
mov
test
int3
dec
aam
sbb
bound
and
popa
mov
jo
mov
xchg
imul
popf
add
fs
movsb
es
in
pop
push
mov
inc
clc
and
popf
xchg
mov
addl
adc
xchg
lods
xor
add
shll
lea
scas
repnz
pop
outsb
pop
cmp
dec
pop
out
inc
dec
mov
hlt
lret
dec
or
push
std
xchg
iret
cmpsl
xor
mov
cltd
fpatan
dec
pop
and
sbbb
cmpsl
loop
pop
cmpsl
xor
jno
jp
push
xchg
pop
mov
sbb
mov
fstpl
fistl
cmp
scas
mov
in
fmull
cld
repz
lea
loope
or
sub
repz
repz
mov
in
fists
cs
xchg
ret
cmp
shl
dec
stc
cltd
push
cmpsb
pop
and
xor
mov
into
divb
repz
je
sbb
decb
mov
lcall
pop
jmp
jb
adc
cli
sti
test
cli
mov
into
pop
int
leave
outsb
or
push
and
add
fmul
push
stc
cs
shlb
mov
xchg
aaa
testl
pusha
dec
inc
imul
jo
mov
xor
mov
jl
add
cmpsb
enter
cli
or
sub
outsb
push
sbb
sub
mov
aam
mov
mov
sub
sti
xlat
sub
sub
add
and
mov
inc
mov
aaa
insl
les
cld
inc
adc
jle
fidivs
stos
idivb
sti
push
dec
xchg
mov
sbb
adc
js
jp
add
outsb
sub
popa
outsl
clc
stos
cwtl
mov
jns
jb
ficoms
scas
adc
push
adc
and
xchg
jne
repnz
fxtract
mov
es
cs
mov
fdivrl
test
ljmp
fs
xchg
or
jb
push
cmp
xchg
push
sub
neg
stos
pop
or
pop
and
sub
cmpsl
daa
or
lods
jno
sbb
add
ficompl
rolb
mov
mov
ret
insl
jge
jle
dec
fsts
loop
inc
mov
and
divl
movsl
push
hlt
jp
scas
xchg
xor
pop
xchg
jl
push
push
add
cli
popa
mov
xchg
jge
dec
clc
inc
xchg
adc
pop
adc
arpl
test
out
outsl
dec
inc
cld
mov
push
lods
incl
jb
xchg
fdivrl
insb
je
stos
scas
pop
test
xchg
in
push
dec
mov
cmp
jmp
add
ds
mov
rcrl
mov
imul
das
xor
add
sbb
inc
push
pop
iret
pop
push
sub
into
xor
imul
aaa
decb
fisttpl
and
test
movsl
shll
fwait
jge
js
dec
ds
fmul
sub
jg
imul
out
fdivl
jo
fisubrl
mov
pushw
sub
mov
fsubrl
xor
adc
loop
xchg
push
outsb
push
mov
popf
sbb
insl
xor
es
cmpb
add
into
pop
cmp
xor
sahf
daa
xchg
pop
test
mov
xchg
fdivrl
jbe
pop
dec
or
out
dec
fcoml
cmpsb
movsl
iret
and
lods
xchg
fisubrl
dec
inc
sub
inc
test
repnz
or
lock
pop
push
aaa
dec
in
dec
ret
sbb
shrl
aad
mov
rorb
mov
sub
imul
cmp
sarb
adc
inc
mov
pushf
and
jmp
dec
jne
inc
call
xor
dec
push
sub
gs
pop
xchg
xor
test
cmp
lods
cmp
adcl
fisubrl
sub
mov
movsl
cmp
daa
idiv
fidivrl
push
ds
cld
xor
pop
and
xor
xor
push
fldl2t
adc
mov
sbb
dec
jecxz
loope
sub
cmpsb
and
inc
in
inc
jge
push
jge
daa
call
daa
leave
xlat
add
or
jle
adc
dec
mov
arpl
shl
movsb
cwtl
mov
mov
pop
or
xchg
jp
push
sub
jae
movsb
pop
add
js
and
shll
pop
nop
fwait
addr16
inc
pushf
scas
xchg
aas
out
sti
lret
jae
pushf
push
cmp
cmp
pop
jnp
jmp
pop
test
ret
jl
ss
sbb
pop
rcrl
pop
mov
jmp
pop
push
sub
adc
or
inc
outsb
mov
sti
adc
int3
add
pop
push
push
in
jnp
mov
or
add
dec
ss
xchg
xor
dec
into
xlat
inc
cmp
dec
add
dec
cmp
imul
stc
insl
xchg
and
je
jl
xchg
sbb
pop
lods
cmpsb
lret
cmpb
imul
pop
adc
sahf
fwait
repz
push
popa
test
dec
and
cwtl
mov
xor
roll
lcall
push
sub
add
aam
push
std
and
stos
or
mov
mov
xchg
xor
xchg
and
jns
mov
add
test
pusha
lahf
push
movsb
xchg
dec
or
lock
xchg
ds
sub
xlat
bound
popa
xchg
mov
or
imul
push
cmp
mov
icebp
int
aas
push
mov
xchg
hlt
cltd
sub
jg
bnd
and
pop
jo
jns
dec
sbb
pop
xor
inc
cs
test
cltd
stc
divb
jmp
xor
adc
cli
xor
xor
call
and
adc
jnp
mov
cli
mov
mov
push
dec
jmp
out
and
or
and
pop
jmp
sub
cmp
imul
out
mov
arpl
mov
sarb
sbb
lods
push
sahf
push
int3
or
outsb
mov
cmp
or
lcall
pop
sahf
sahf
mov
out
mov
add
sbb
scas
sbb
dec
daa
pop
ja
std
adc
push
ljmp
inc
mov
imul
mov
popa
sub
addps
in
push
lret
movsl
push
dec
dec
adc
out
mov
je
nop
ljmp
es
cmpsl
loop
push
jb
das
sahf
imul
dec
fstpl
xchg
add
mov
nop
js
loopne
in
xor
adc
or
rorb
sub
or
ja
jg
mov
cmp
insl
push
movsb
mov
sub
adc
out
pop
add
or
leave
inc
mov
leave
imul
jbe
nop
mov
dec
lcall
lea
mov
lret
or
cli
jge
mov
pop
push
dec
cmp
or
or
mov
mov
outsb
pop
sub
dec
popa
jo
testb
ret
es
jmp
push
cltd
add
rolb
clc
jl
add
fwait
xchg
xchg
repnz
xchg
gs
push
repnz
mov
cmc
dec
xor
ja
js
lock
xlat
popa
xor
insl
leave
popf
insl
sbb
sahf
push
repz
into
dec
add
inc
jl
sub
jp
and
inc
test
sahf
jae
xchg
dec
mov
or
rcrb
fldcw
adc
mov
ret
cmpb
lcall
pop
rcr
imul
stos
sahf
cmp
xchg
xorl
xor
push
aaa
mov
adc
lds
xor
cmp
pop
mov
enter
sbb
cmp
push
cwtl
and
or
lods
jecxz
out
xor
add
cli
outsb
add
or
ja
dec
shll
mov
xchg
dec
xor
out
sub
in
cmp
mov
jecxz
inc
cmp
dec
daa
and
jp
stos
sbb
mov
mov
sbb
cmpsl
fxam
sub
stos
mov
jmp
dec
sbb
in
cltd
mov
int
xor
xchg
out
mov
mov
dec
iret
add
loopne
xor
fnsave
int
mov
push
shl
idiv
push
xchg
and
mov
mov
ret
or
lock
mov
ja
pusha
jecxz
sub
rcr
repnz
dec
adc
pop
lock
jno
push
bnd
xorb
data16
adc
push
fmull
jecxz
sarb
xchg
mov
or
xor
or
jb
and
cmc
adcb
gs
mov
push
lock
adc
into
sti
flds
mov
rclb
or
mov
ja
daa
fisttps
push
dec
orl
out
ljmp
adc
stos
in
xor
loop
stc
sbb
aad
jo
out
adc
stc
xor
dec
mov
mov
and
mov
dec
fldenv
jnp
aas
and
cli
shl
cs
jl
mov
mov
imull
test
xchg
mov
outsl
pop
scas
sub
loope
int3
loope
mov
and
lods
lcall
out
pop
fdivl
incl
jo
outsl
popf
outsl
jns
pop
mov
ret
xchg
cmc
mov
out
nop
faddl
jo
mov
imul
sti
stos
mov
or
jb
push
fwait
scas
in
add
sti
int
dec
cld
lock
mov
jne
jl
pop
iret
xchg
cwtl
icebp
sub
inc
cmc
xor
bound
sti
cmp
jecxz
cwtl
movsl
jecxz
lcall
in
dec
xor
push
mov
std
fcoml
cs
inc
sarb
add
xlat
js
pushf
insl
leave
push
dec
addr16
xor
xchg
scas
aas
int3
insl
bound
mov
or
sbb
or
or
sub
test
shlb
push
add
or
in
cs
data16
or
loop
jl
sti
mov
std
sti
insl
movsl
jns,pt
jge
dec
push
pop
inc
fwait
ret
pop
adc
mov
xor
fwait
jnp
les
pop
sub
dec
and
dec
jle
inc
shll
iret
mov
mov
pushl
std
mov
ljmp
rcll
and
bound
lret
pop
ljmp
inc
repnz
cmp
xchg
daa
out
xor
mov
push
and
js
rep
jne
sbb
inc
testl
xchg
add
xchg
mov
lret
scas
mov
jbe
popf
lods
int
adc
lret
mov
and
test
and
xchg
das
sbb
cmp
shl
pop
and
in
inc
imul
sbb
mov
mov
push
jo
dec
lret
mov
in
sbb
test
or
enter
test
test
stos
xchg
shlb
in
dec
insl
push
push
repnz
jp
sub
imul
xchg
pop
jle
aas
mov
out
jge
cmc
mov
stc
aam
loope
jb
mov
or
xchg
lds
and
pop
fildll
gs
incb
or
out
jnp
and
gs
lea
daa
xor
push
and
fs
xor
add
push
arpl
insb
test
aad
bound
hlt
sub
sub
pop
or
std
jg
pop
xchg
daa
out
fidivl
lods
out
mov
pusha
out
dec
aaa
sbb
add
test
mov
mov
sub
loope
push
test
cli
fdivr
int
adc
and
fidivl
fisttpll
jle
mov
cmp
inc
and
cmp
shl
and
mov
mov
outsl
pop
dec
stc
inc
addr16
mov
cltd
xchg
sbb
cld
mov
sar
in
addr16
cmp
push
mov
mov
cmpb
repz
sahf
arpl
xchg
leave
pop
call
and
pop
pop
daa
mov
faddl
bound
sbb
lds
mov
out
mov
out
xchg
addr16
or
jge
dec
icebp
pop
push
movsl
pop
fistpll
xchg
mov
lock
mov
inc
cs
push
sti
aas
into
loope
jnp
push
cltd
push
ret
ja
mov
cmp
xor
xor
popf
out
leave
aad
inc
test
push
pop
mov
xor
cmp
lods
loope
adc
pusha
fisttps
cmp
adc
sub
jb
out
cmc
cmp
adc
pop
adc
xlat
mov
scas
nop
jae
push
lcall
cmp
or
gs
mov
int3
xor
mov
dec
hlt
dec
inc
frstor
scas
scas
icebp
jae,pt
int3
fs
mov
jmp
jo
xor
pop
or
xor
cmc
cmp
lods
std
je,pt
cld
hlt
sub
gs
xor
xchg
stc
repnz
lret
xor
pushf
cmp
test
rorb
jge
cmp
int
sbb
dec
popf
aas
jp
subb
mov
ss
inc
mov
pop
js
lds
pop
mov
jle
mov
dec
push
jno
lds
push
sbb
outsb
rclb
jecxz
mov
push
push
loopne
inc
xor
jns
sbb
movsl
and
push
orb
push
push
aas
repz
into
ljmp
filds
mov
adc
repnz
je
sbb
mov
fmuls
aas
and
insl
push
xor
iret
mov
movsl
orb
cwtl
push
pop
cmp
sub
iret
push
jmp
jle
stos
jmp
push
inc
outsb
sahf
dec
icebp
pop
jno
add
and
aad
stos
ret
stos
push
xlat
fidivl
and
add
lods
push
div
add
or
out
mov
pushf
inc
xchg
stc
inc
out
cs
loope
pop
mov
sarb
inc
in
fbld
das
ljmp
dec
je
pop
lea
fwait
pushf
arpl
mov
xchg
push
pop
add
pop
mov
mov
shrb
out
xor
mov
inc
inc
jnp,pn
bound
push
cmp
out
add
mov
jns
pminub
mov
jecxz
andb
int3
mov
ret
push
pop
fs
movsl
mov
mov
dec
mov
cltd
les
orl
into
lock
sbb
mov
in
std
and
add
decb
or
and
push
aas
mulb
add
or
inc
insl
aam
out
and
sub
repnz
push
dec
repnz
call
mov
dec
jbe
scas
add
jo
xor
mov
es
inc
inc
xchg
out
gs
xchg
jns
arpl
inc
push
mov
std
sbb
rcr
cwtl
daa
or
sub
ffree
imul
mov
cmp
dec
and
enter
xlat
iret
fisttpl
in
hlt
scas
je
xor
dec
sbb
mov
je
sbb
pop
pop
sahf
out
and
push
push
xor
adc
add
decl
and
mov
adc
or
pop
jg
push
xor
mov
xchg
jo
mov
inc
mov
test
push
iret
mov
les
out
ret
push
mov
mov
pop
leave
popf
jg
data16
adc
inc
xor
or
jp
sbb
cmc
adc
out
cmp
test
and
loop
inc
sub
pop
movsb
arpl
jb
xchg
jno
cmpsl
les
testb
add
jbe
xchg
lret
lods
adc
arpl
xor
dec
dec
xor
sub
ds
mov
fwait
mov
mov
mov
sarb
ja
cmp
cltd
out
movsl
mov
shrb
xor
out
dec
or
test
mov
push
mov
test
mov
jb
pop
inc
in
xchg
cmp
jmp
sub
out
dec
stos
leave
mov
sub
xor
psubusw
std
negb
in
xchg
mov
mov
pusha
mov
push
inc
test
cmpsl
or
cli
bound
int3
fcoms
mov
cwtl
out
or
out
xchg
arpl
inc
lods
push
mov
fwait
shrb
jg
outsl
jo
stos
sahf
popa
xchg
xor
adc
stos
mov
fistps
mov
les
fdivrp
orl
stos
jge
imul
sahf
outsb
incb
ds
aas
xchg
and
push
mov
xor
pushl
mov
or
mov
jnp
mov
jnp
mov
add
ret
leave
pop
pop
cli
dec
fucomi
neg
fldcw
cmc
lret
pusha
aad
imul
iret
inc
push
test
decl
loopne
ret
dec
out
movsb
adc
jno
fwait
xchg
js
arpl
insb
imul
shl
fld
je
stos
adc
outsl
das
cmpsb
int3
adc
or
mov
popf
pushf
int3
sbb
dec
jmp
push
test
mov
lock
sbb
or
and
dec
jns
loope
insb
ljmp
adc
pop
into
mov
jbe
cvtpi2ps
stc
pop
cmpsl
dec
jg
cmpsb
xor
lret
xlat
mov
out
mov
jns
repz
mov
jp
adc
mov
jge
push
dec
jo
arpl
mov
cmp
stos
xor
mov
leave
aaa
lret
sti
incl
sub
adc
push
in
mov
mov
jecxz
fst
mov
add
fwait
out
sbb
cmc
mov
adc
pop
es
add
mov
xor
jp
xchg
mov
xchg
xchg
xor
pop
loop
and
xor
bound
adc
mov
lods
fbld
int
mov
or
fdivrs
insb
inc
xor
adc
fistps
or
push
mov
ret
pusha
lahf
loope
push
aad
cmpsb
xchg
mov
out
jns
sub
and
xor
jle
hlt
sbb
stos
je
sbb
and
xchg
insb
or
cmpsb
jnp
out
adc
push
xchg
fs
filds
sbb
and
adc
push
inc
or
rcrb
xchg
lods
push
nop
mov
xchg
enter
hlt
or
imul
mov
movsl
adc
mov
and
sbb
lret
insb
push
and
add
jg
gs
push
and
push
fcmovnu
xchg
mov
add
into
adc
sub
jnp
setns
int3
scas
int3
xchg
inc
dec
cltd
sarl
cli
mov
mov
js
das
add
pop
cli
mov
pop
loope
pop
or
dec
push
mov
icebp
adc
sbb
outsl
test
and
or
mov
adc
movsw
movsb
sub
adc
xchg
js
xchg
or
mov
fs
xchg
mov
setl
test
cmp
jne
and
and
push
fnstsw
outsb
mov
in
xor
and
mov
daa
lcall
jecxz
and
push
jp
aad
pop
lahf
mov
cmp
inc
add
lods
test
fcoml
and
rcr
mov
xor
add
fidivrl
inc
scas
sbb
jnp
loopne
mov
insl
ret
rcr
mov
into
lock
into
dec
cwtl
js
adc
jne
dec
ret
out
mov
ljmp
in
mov
inc
or
xchg
mov
jp
jmp
cmp
mov
andb
mov
xor
push
pop
scas
inc
leave
xchg
cli
sub
jmp
push
pushf
sub
fnstcw
pop
mov
leave
cs
fimull
add
stc
and
cmp
pop
fwait
gs
gs
push
cli
sbb
jecxz
mov
mov
sbb
fnsave
adc
out
push
bound
inc
in
jbe
inc
popa
lahf
dec
sub
sahf
shlb
shll
xchg
cwtl
push
xchg
movb
jp
mulb
sahf
sub
jbe
int
push
lret
cmp
push
ds
cmp
frstor
fcmovnb
pop
scas
mov
mov
pop
xchg
mov
dec
clc
insb
andl
das
mov
cmp
ss
loop
sbb
fs
pop
or
bound
adc
dec
inc
cmpsb
or
inc
lcall
jmp
es
out
push
mov
lea
mov
sbb
out
inc
fisubrl
xchg
cmpsl
or
sbb
jmp
push
in
leave
xor
xchg
sbb
aas
je
mov
jne
popa
mov
add
xor
ret
testb
outsb
push
mov
cs
jmp
adc
mov
mov
dec
xor
mov
and
dec
out
dec
push
xorl
pushf
mov
subb
in
sub
xor
jbe
and
xchg
shlb
das
cltd
pop
das
xor
es
popa
add
mov
push
push
das
push
cmpsb
xchg
xchg
fimull
lods
pop
add
test
repz
daa
mov
mov
cmp
jae
dec
jp
push
push
push
orb
cs
sub
and
stos
jae
and
stc
punpckhbw
or
mov
ljmp
jo
ljmp
sbb
xor
and
inc
cmc
inc
ror
int3
sbb
pop
or
mov
out
fwait
jp
test
mov
cmp
sbb
inc
fwait
mov
stos
sbb
mov
mov
dec
dec
fwait
mov
xor
stc
mov
mov
xorb
xchg
dec
jp
inc
push
mov
arpl
mov
mov
test
mov
iret
enter
xor
loope
mov
pop
xchg
push
lods
outsl
in
xchg
ret
cmpsl
xchg
xchg
gs
push
add
mov
mov
sti
rcrb
push
pop
cwtl
out
loope
xchg
js
iret
ret
mov
fwait
pop
daa
mov
jp
mov
cld
movl
mov
sbb
addb
jp
inc
dec
push
aad
sbb
sub
into
pop
jae
test
loope
fldl
sbb
jae
stos
pusha
mov
gs
and
jae
jo
push
xchg
dec
ja
inc
outsl
mov
push
test
push
movsl
das
mov
jne
xlat
int
xor
mov
adc
add
sti
add
pop
jmp
cwtl
movl
shlb
cmpsl
cmc
mov
jl
cltd
decb
push
sbb
sbb
das
and
lds
fists
aad
sub
mov
mov
mov
xor
mov
and
fs
mov
fs
xlat
lret
cmp
repnz
repnz
lret
data16
mov
mov
jae
jmp
pop
jp
adc
push
scas
ss
xchg
mov
sbb
mov
xchg
mov
cwtl
cld
popf
insl
mov
xchg
mov
and
mov
mov
repz
or
mov
repz
jnp
fcmovbe
negl
xor
xchg
jnp
icebp
enter
fnsave
mov
mov
jno
scas
push
cmp
inc
and
xlat
add
or
les
lea
lock
je,pn
lret
cmp
cmpsb
push
in
adc
lods
and
iret
push
gs
cmpsb
pop
and
lahf
add
lods
dec
icebp
xor
sbb
lret
add
push
stc
mov
dec
jo
push
repz
inc
out
xorb
mov
sub
jge
movsl
mov
in
out
in
mov
jnp
arpl
cmp
bound
mov
or
jns
sbb
mov
lds
loop
adc
test
shll
jns
mov
mov
inc
lods
and
inc
inc
xchg
xchg
mov
jp
pusha
dec
xchg
insb
jle
in
cmp
dec
out
jbe
cld
fisttpl
ret
loopne
or
cli
jo
mov
stos
sub
adc
lret
js
and
add
xlat
and
jge
add
or
subl
sub
shrl
pop
xchg
and
nop
and
enter
fldcw
xor
movsl
inc
adc
jp
enter
and
out
aaa
ds
xchg
jl
mov
inc
mov
cli
loope
cmpb
add
insl
or
push
adc
mov
pop
aas
cwtl
loope
sub
out
insb
test
cwtl
rorb
inc
loopne
stos
div
js
es
mov
loop
pop
lds
imul
pop
lcall
mov
adc
mov
out
sub
push
xor
pop
inc
inc
pop
push
sub
lds
xchg
pop
push
stc
out
cmp
icebp
andb
ret
fnsave
iret
cmp
xchg
xchg
fsubrl
gs
out
dec
in
pop
mov
leave
fsubrs
mov
incl
jecxz
mov
out
loope
sti
mov
jb
pop
cmp
jo
leave
jb
cwtl
jge
js
test
out
jge
test
dec
xchg
fdivr
inc
inc
pop
push
mov
push
sbb
in
pop
xlat
in
shl
cli
aam
nop
out
jmp
lock
addr16
or
aaa
sti
cmpsl
xchg
pop
setbe
jno
std
js
movsl
mov
push
pop
movsb
andb
pop
xchg
xchg
ds
out
inc
jb
push
popf
lcall
sub
xchg
and
out
mov
test
fiadds
sbb
dec
imul
out
pop
xchg
cmpsb
scas
xor
test
push
mov
jg
sbb
testb
and
popf
sbb
push
mov
les
hlt
addr16
stos
ret
ss
xchg
cmp
mov
xchg
jge
jmp
jg
addr16
dec
in
enter
xchg
lcall
push
mov
xchg
cmp
jbe
dec
dec
cmp
pop
fstpt
inc
pop
fldt
inc
shlb
sub
lahf
hlt
bnd
pop
cld
mov
or
cmp
pushf
sahf
mov
into
ret
dec
sbb
xor
outsl
addr16
popa
leave
mov
cli
stos
and
dec
lret
push
adc
cld
mov
bound
mov
and
sbb
lds
in
pop
fistpl
mov
pusha
repz
xor
inc
mov
iret
lret
xchg
cmpsl
fdivrl
mov
in
mov
stos
pop
jbe
lahf
movsb
repz
adc
cmp
ds
rorl
fcom
push
rcrb
jno
push
and
jmp
jecxz
cmp
addr16
ret
pop
pop
adc
je
frstor
insl
cmp
push
xchg
jne
cld
jno
jl
push
and
push
inc
mov
inc
loope
inc
xor
nop
mov
movsb
add
popa
add
lods
jbe
sbb
std
mov
jno
cmp
cmpb
dec
pop
cmp
adc
pop
sbb
in
push
bound
pop
das
push
jg
insl
and
mov
jae
or
fnsave
loope
fidivrs
jns
ljmp
js
add
push
lods
cmp
das
jne
xchg
mov
sbb
xchg
ficomps
fadds
dec
das
pushl
fisubl
push
pop
roll
rcll
cmp
mov
mov
scas
fdivrs
sub
mov
int3
aad
ffreep
ljmp
mov
in
lret
lahf
ljmp
xchg
cmc
pop
jno
cltd
jae
dec
dec
test
cmp
pop
in
sti
dec
loopne
orb
cvtdq2ps
dec
push
imul
add
jns
pop
stos
mov
cli
xlat
pop
rolb
inc
in
cmpsb
fsubrl
decl
add
pop
inc
hlt
pop
pop
cli
jmp
repnz
xor
push
lods
jle
outsb
aam
jle
sti
push
cmp
mov
xor
insl
sub
js
vmwrite
push
mov
rep
orl
cmpsb
iret
fldenv
cmp
or
fidivrs
dec
addr16
cld
out
lahf
dec
mov
jnp
push
cmc
out
xor
clc
jmp
in
leave
loope
sub
mov
inc
push
mov
or
test
mov
sub
arpl
push
lock
push
jmp
subl
sbb
popl
pop
divl
ds
std
pop
addr16
xor
popa
sub
imul
add
outsl
cs
pop
scas
mov
cmp
incb
or
ja
dec
sbb
je
mov
insb
xor
daa
cs
stos
push
das
rol
test
cmpsb
mov
xor
pop
das
loop
pop
scas
pop
cmp
mov
mov
mov
cmpl
mov
xlat
jmp
pop
imul
dec
push
mov
xchg
push
mov
mulb
stos
lods
and
loopne
loop
pop
fwait
xchg
mov
push
jmp
leave
ljmp
enter
inc
pushf
add
and
out
loopne
mov
lret
ss
push
pop
push
xor
fldl
pop
push
add
mov
push
mov
and
mov
pop
mov
cmp
test
sbb
rol
jmp
imul
fimuls
mov
fimull
sub
out
cmp
sbb
aad
mov
and
mov
movsl
or
daa
movsb
inc
test
push
xchg
stc
mov
pop
stc
mov
imul
fwait
stos
mov
orl
movsb
mov
scas
jo
hlt
repz
movsl
inc
iret
mov
jnp
cwtl
or
sti
sbb
popf
add
adc
push
mov
lds
xchg
mov
lret
sar
insl
insb
ret
jo
mov
daa
xchg
and
or
push
xchg
sti
inc
mov
out
jns
int
mov
mov
jo
aam
and
or
lds
and
xchg
inc
adc
xchg
fsts
out
mov
mov
mov
outsl
scas
cld
xlat
push
cld
das
mov
add
push
pop
movsl
aaa
nop
xor
roll
dec
cmp
movsb
daa
je
mov
test
inc
lock
out
sti
jae
lods
rorb
inc
shll
xchg
push
insl
fwait
fwait
inc
mov
lock
jne
pop
pop
or
in
sub
aas
popa
jmp
hlt
loopne
das
pop
mov
adc
insl
movsl
ljmp
sbb
ja
and
mov
xor
jb
and
pop
imulb
fs
in
pop
add
sahf
push
push
repnz
sbb
inc
xchg
in
inc
fistps
sbbb
bound
xchg
xchg
mov
stos
repnz
leave
mov
xchg
lahf
xchg
and
jmp
push
daa
cmpsb
and
jmp
or
fdivs
and
jl
xor
xchg
adc
xchg
in
in
gs
leave
mov
add
jg
js
push
movb
jnp
roll
xor
or
lods
fdivs
movsb
sahf
pop
fdiv
and
dec
and
xchg
jl
fsubl
movsb
add
or
sbb
adc
sti
and
jo
mov
pop
lock
xchg
aad
mov
ret
imul
lea
mov
and
frstor
mov
jns
popa
bound
xor
mov
mov
xor
int
xchg
pop
dec
cltd
mov
cmp
inc
jne
pop
loope
ja
pop
mov
pop
fstpt
movaps
cmp
decb
sub
out
sub
pop
ss
pop
xchg
iret
mov
fstps
rorb
sbb
or
ljmp
arpl
dec
xor
sbb
mov
aaa
pop
cld
pop
outsl
push
aad
cmpsl
imul
adc
jne
into
xor
push
lods
cs
fsubl
mov
outsl
jecxz
imul
pop
mov
orb
sbb
ja
cltd
icebp
xor
mov
dec
inc
sbb
iret
fcmovbe
xor
dec
add
lods
in
pop
and
clc
lcall
xchg
lock
cmp
mov
test
mov
lods
in
insl
dec
cltd
adc
test
xchg
pop
add
dec
xchg
mov
shr
negb
xlat
and
sub
fisttpl
in
mov
fistps
mov
out
test
dec
loope
cmp
test
sub
loope
pop
insb
movsl
xchg
cld
cltd
in
mov
stos
js
jno
int3
add
or
or
js
adc
dec
dec
cmpsb
shlb
int3
push
xlat
sbb
int
std
mov
rcll
out
dec
loop
mov
ret
out
inc
pop
rcrl
add
outsl
pop
scas
adc
adc
sub
sub
aam
pop
jbe
lods
stos
aaa
cmp
inc
add
jecxz
stos
jb
pop
push
or
lahf
sbb
fiaddl
dec
jl,pt
mov
add
in
xor
testl
fidivl
adc
push
repnz
sub
test
mov
sahf
push
xchg
dec
fstps
or
mov
xchg
xchg
ljmp
rcrb
push
cmp
xor
pusha
pop
inc
sti
sbb
aad
pop
fistps
mov
and
arpl
cmp
add
fwait
pop
pop
cwtl
add
mov
stos
insb
mov
push
shlb
rorl
mov
fs
fidivrl
jns
add
sub
fsts
mov
test
xchg
sub
mov
adc
and
sbb
gs
cli
jno
mov
sbbl
outsl
mov
or
pusha
xchg
stos
xchg
push
lods
pop
ja
mov
cs
fs
and
mov
add
mov
sbb
in
dec
imul
std
mov
rolb
push
sub
pushf
sarl
inc
xchg
pop
or
pusha
lcall
push
test
cmp
je
push
xor
add
adc
cli
das
into
pop
sbb
inc
and
mov
decl
xor
jo
add
mov
rcrl
outsb
sbb
pop
xchg
aad
nop
sbb
inc
adc
test
push
out
fsubrs
add
jmp
sub
xchg
xchg
pop
cli
imul
aam
pop
and
push
xchg
leave
xchg
shlb
inc
xchg
jle
cmp
sub
out
sarl
sub
fisttps
jbe
ficompl
sbb
mov
jecxz
loop
addr16
adc
jmp
gs
lcall
aad
sub
repz
popa
icebp
add
cmpsl
cmp
cmpps
pop
lcall
sbb
push
jle
sub
dec
sub
cwtl
adc
movsl
cmp
loopne
jnp
pop
xchg
adc
push
jae
rcrl
push
and
jnp
adc
or
or
mov
rol
cmp
ja
inc
jno
mul
iret
or
push
push
fsincos
mov
cwtl
pop
ror
adc
aad
xchg
adc
or
mov
mov
mov
push
lcall
push
mov
adc
pushf
in
pop
sahf
sub
pop
dec
cmpsl
loope
lahf
jg
cmpsb
notl
mov
jmp
stos
test
std
push
jl
sarl
mov
push
jmp
cmp
mov
inc
xchg
sub
pop
pop
nop
add
stos
test
and
jno
mov
add
xchg
cmpsb
test
xchg
idivb
fisubs
pop
jp
and
test
jne
add
cmp
jbe
std
push
push
or
cs
int3
push
push
mov
fcomps
pop
lcall
inc
adc
cmp
sti
insb
fcompl
xchg
lods
cmp
ja
sub
rolb
das
sub
cmp
sbb
scas
mov
outsb
into
jbe
mov
rcrb
daa
push
daa
int
lcall
call
rcrl
andb
lods
or
test
fs
scas
hlt
sub
fildll
aad
cmp
fs
or
dec
lods
ja
popa
int
or
cmc
push
push
xchg
rcr
pop
mov
jmp
dec
add
fsubl
in
push
ficoml
xchg
sbb
xchg
add
pop
stc
ss
pop
xchg
mov
in
cli
adc
jne
in
fsubrl
in
mov
mov
or
movsb
push
rcrb
ret
push
push
sarb
sar
sti
inc
xchg
rcl
aad
into
dec
scas
aas
xor
mov
adc
gs
outsl
stos
fwait
xchg
aaa
rorl
gs
in
int3
cmpsl
pop
sti
adc
ss
cmp
xor
int3
subb
mov
scas
hlt
scas
and
push
sub
dec
inc
mov
inc
mov
into
stos
or
or
icebp
inc
aad
mov
mov
pop
fidivl
adc
adc
jb
sbb
test
add
aam
mov
xchg
lock
dec
adc
lea
fildll
push
xor
pop
mov
loope,pn
xchg
push
test
popa
mov
mov
bound
mov
fisttps
icebp
mov
aad
pop
inc
push
out
pop
ljmp
loope
mov
pop
cmp
stos
icebp
adc
rcrb
mov
std
cld
pop
aad
rorl
cwtl
fisubrs
add
xchg
out
add
bound
adc
xor
nop
jae
dec
test
shrl
push
imul
stos
jmp
nop
sbbb
rcr
fisttpl
push
xor
cs
pop
jo
sub
lods
fmuls
sbb
fsubr
lret
addr16
jmp
repnz
addr16
mov
ds
popf
clc
inc
mov
push
xchg
js
inc
repz
add
pop
lcall
hlt
xchg
push
decl
es
lea
sarb
loopne
mov
jle,pt
ljmp
jle,pn
insl
xchg
dec
mov
dec
mov
mov
inc
fwait
mov
aas
shrl
inc
ja
hlt
lock
fwait
cmp
push
fcomi
dec
lahf
popf
loope
out
enter
ficoml
mov
push
iret
mov
adcb
cs
sbb
cmp
jne
xchg
movsl
adc
mov
and
data16
dec
adc
pop
cmpsb
mov
cli
inc
inc
lock
popa
clc
addr16
push
ss
dec
mov
fst
xor
stc
fsubrs
hlt
clc
fildl
imul
jnp
in
ljmp
inc
je
add
xor
mov
mov
jmp
out
push
adc
jne
pop
sti
or
pop
push
sahf
popa
jle
and
jp
push
or
lret
test
sub
mov
inc
cmpsb
xlat
cmp
frstor
xchg
ret
sub
inc
hlt
jmp
popf
adc
insb
call
je
add
pop
dec
cmpsl
test
stos
ljmp
lods
cmp
xor
inc
outsb
xchg
aam
xchg
add
enter
or
jo
jmp
aam
jp
jae
pop
hlt
sbb
ret
rorb
loope
sub
pop
sbb
inc
xor
lods
daa
hlt
loop
sbb
outsl
outsb
shl
scas
popa
out
dec
and
pop
mov
sbb
aas
adc
xchg
aas
sbb
add
mov
inc
xor
adc
jnp
add
lods
mov
iret
xor
inc
jb
xchg
ljmp
add
sub
jg
cmp
adc
cmp
mov
or
arpl
movsb
dec
idivl
xchg
push
and
testb
je
push
inc
mov
sbb
popf
and
cltd
lods
inc
xor
mov
loop
imul
xchg
push
mov
xchg
xor
mov
out
test
or
testb
je
pop
mov
ds
ds
hlt
out
jbe
sbb
mov
sti
hlt
inc
bound
xor
ss
cmp
mov
xor
dec
inc
std
sub
jmp
rcrl
cmpsb
sbb
xor
scas
mov
push
mov
adc
fidivrl
and
int
cmp
cmp
rorl
mov
fbld
orl
sbb
inc
cmp
adc
cli
iret
icebp
xchg
lds
loop
push
cltd
fwait
dec
xchg
out
ficoml
mov
into
das
push
rol
jnp
rorl
xchg
test
pusha
fisttps
sub
and
sbb
gs
psubq
pop
xchg
jno
xor
les
push
jne
scas
jg
jno
out
shl
jg
add
iret
and
gs
call
xor
dec
xor
and
add
fdivr
adc
or
es
sub
aam
pushf
jne
dec
mov
inc
sarl
fiaddl
jmp
push
test
popa
into
jl
jno
sub
imul
mov
sahf
stos
add
jb
aad
cli
mov
sbb
dec
fistpll
xchg
andb
gs
je
and
cmpsl
cltd
and
dec
add
repz
jbe
and
ret
addr16
push
push
sub
cwtl
sub
scas
jp
sahf
mov
adc
shr
pop
push
lock
sti
push
sub
sub
lods
and
outsl
js
call
sahf
sub
mov
mov
aam
lcall
pop
stos
mov
pop
pop
shlb
stc
negl
pop
xchg
pop
out
and
push
iret
lcall
out
test
jecxz
push
or
fildll
cmp
sarl
jle
mov
test
mov
outsb
jns
dec
or
add
mov
adc
xor
xchg
dec
and
and
ljmp
fildll
mov
int
xchg
ficoml
dec
iret
sarb
sbb
aad
in
mov
pop
iret
fsubr
cmc
das
adc
scas
rcrb
ret
adc
mov
mov
push
std
inc
or
fists
cmp
jno
scas
jp
xor
cmp
in
lahf
negl
sub
ret
mov
push
add
sub
cltd
add
ljmp
and
ret
xor
mov
cwtl
out
push
mov
dec
and
push
sub
movsl
or
push
notl
dec
je
sbb
sbb
lcall
cmpsb
xor
lret
loop
hlt
mov
mov
hlt
jbe
outsl
jmp
pop
pop
arpl
add
cld
push
push
jbe
cmp
jecxz
and
aam
and
inc
imul
scas
int
pop
mov
repnz
xchg
in
mov
repnz
inc
call
dec
in
imulb
jae
mov
in
dec
orb
mov
loopne
in
pop
in
sub
icebp
clc
mov
dec
insl
xchg
or
mov
cld
outsb
sbb
and
seto
pushf
loopne
outsb
adc
or
xor
ret
je
or
push
packuswb
push
add
cmp
push
pop
fistl
ja
mov
pop
sub
cmp
das
cltd
outsl
mov
pusha
adc
jne
mov
cmp
jb
out
push
in
lret
sti
jne
andl
hlt
fldt
cmp
mov
test
pop
or
outsl
xchg
addr16
in
or
add
mov
fs
xchg
push
popf
push
push
push
orb
sti
stos
jae
cmc
xchg
mov
inc
push
push
jp
jbe
loop
push
sbb
cli
clc
and
sub
xchg
sbb
fsubrs
jecxz
aaa
sbb
je
adcb
sbb
test
mov
out
jbe
xchg
push
imul
sbb
mov
lock
je
push
sub
fdivrs
fldt
or
iret
mov
or
out
and
cld
ja
dec
xlat
or
inc
cmp
in
sub
push
push
ds
sub
out
out
xor
pop
xchg
sub
adc
mov
mov
movsb
mov
lahf
mov
and
rorb
or
xchg
sub
pusha
out
or
inc
cmp
enter
sbb
adc
push
xor
aam
pop
std
xor
lret
ss
sub
mov
icebp
iret
sahf
pop
clc
xor
and
rcrl
or
ljmp
mov
popf
add
cmp
jp
mov
or
popf
or
inc
jbe
clc
pusha
js
jnp
sub
out
sub
mov
stc
jg
lods
loop
fisubrl
cld
jecxz
mov
out
test
hlt
imul
jmp
jnp
cli
and
jae
stc
xor
pop
xlat
jp
mov
mov
sbb
call
pop
inc
inc
test
in
jle
mov
dec
cmp
inc
insb
cmp
xchg
inc
mov
add
mov
aad
fcmovbe
insb
cmc
push
or
popa
pop
pop
lds
popf
ljmp
sbb
xchg
cmpsb
sub
movsl
imul
daa
outsb
cmpsb
enter
xlat
lods
je
push
fdivs
jl
mov
jo
push
push
dec
add
loopne,pn
addb
mov
xlat
cmp
pusha
mov
leave
sub
adc
stos
dec
mov
loope
call
xor
div
xchg
ds
adcb
cmp
xlat
aas
xorl
and
popa
adc
dec
sub
movsb
xor
insb
divb
mov
pop
add
and
xchg
xchg
sbb
scas
ret
fwait
dec
xor
std
push
mov
or
fstl
mov
pop
mov
sub
add
mov
xchg
xor
jns
pop
cmp
cmp
push
mov
jne
jmp
inc
fidivs
and
sub
test
cli
mov
push
cmp
mulb
fdivl
or
sbb
dec
flds
shl
test
testb
imul
xor
mov
dec
fcompl
call
aam
sub
and
test
sbb
in
ficomps
cmc
dec
jmp
mov
inc
movsl
and
nop
mov
aad
insb
xchg
gs
fs
and
sub
daa
andb
sbb
movsb
jecxz
add
adc
aaa
jecxz
mov
outsl
cmpsb
add
inc
or
test
pop
fstpt
jae
rcl
addr16
cltd
stos
sub
push
fdivr
fbld
xor
aas
sbb
lret
movsl
inc
mov
stos
mov
adc
stos
add
xor
mov
pusha
je
mov
mov
sub
mov
adc
adc
icebp
rcrl
mov
mov
inc
dec
mov
inc
sahf
nop
jo
add
xchg
das
mov
and
pop
fldt
add
ja
and
dec
and
mov
imul
lcall
pop
out
lock
mov
or
push
in
mov
shr
scas
nop
jp
mov
test
adc
test
adc
mov
inc
mov
repz
dec
pop
pop
ljmp
lds
and
jb
bound
xchg
int
hlt
arpl
push
mov
xor
clc
adc
push
outsb
push
lods
xchg
clc
and
pop
jp
xchg
rcr
mov
dec
ljmp
dec
aad
inc
cmp
xlat
mov
loope
add
ret
ret
jae
pop
jb
sbb
xchg
xor
lcall
es
adc
pop
jns
cs
dec
out
call
shll
cs
fisubrl
movsb
addr16
hlt
mov
pop
push
add
add
mov
orl
into
notb
les
dec
mov
stos
movsb
test
in
rdmsr
add
jmp
data16
lea
cmpsl
add
jb
into
inc
insl
cmp
fmuls
and
scas
dec
rcr
mov
cwtl
stos
stc
test
cli
add
jecxz
lret
xor
repnz
inc
shll
or
mov
stc
jecxz,pn
pop
fadd
cli
pop
adc
out
inc
push
mov
dec
in
adcl
mov
cli
in
bound
mov
sahf
xor
jp
push
outsb
pop
mov
out
stos
shr
cli
les
sub
inc
sbb
mov
test
js
fwait
xchg
mov
test
mov
inc
test
sbb
adc
int
mov
repnz
clc
jle
popa
pop
es
inc
ss
mov
mov
aaa
lds
inc
and
jmp
push
add
stc
cwtl
xchg
sbb
cmc
pop
push
adcb
or
inc
xchg
jg
jmp
jae
out
pop
xor
dec
shlb
mov
std
pop
lret
push
imul
rorb
push
outsl
orl
dec
outsb
testl
cltd
mov
jne
pushf
insl
xchg
inc
mov
aas
lahf
jb
faddl
mov
mov
add
es
mov
pop
mov
shl
and
cmpsl
pop
scas
xor
push
cmpsl
scas
dec
or
outsl
dec
test
sub
imul
pusha
xlat
pop
mov
mov
int
jnp
movsl
loop
push
jge
jo
pop
adc
sub
add
inc
call
pop
gs
dec
pop
push
pop
fisubl
pop
add
outsl
mov
and
fxam
arpl
mov
fdivl
xchg
sahf
and
popa
or
iret
push
popf
lahf
outsb
mov
cmp
je
test
mov
popa
out
cli
test
jmp
or
call
pop
adc
stos
movsl
sti
cli
jae
je
and
adc
mov
dec
es
shll
and
xchg
call
push
cmpsl
repnz
and
or
push
fwait
lahf
lock
mov
ds
add
xchg
dec
into
adc
out
mov
idivl
xchg
ret
jg
lcall
adc
jp
pop
push
jp
pusha
out
cmp
mov
addr16
inc
je
lret
xchg
popa
cmpl
xchg
xlat
jle
cli
inc
scas
in
xor
pop
ret
xchg
in
push
cli
adc
xchg
push
mov
subl
sub
pop
mov
jp
lcall
xchg
adc
mov
call
in
push
xor
shll
fstpl
sbb
shll
jno
push
cmp
push
fdivrl
repz
dec
lret
mov
sbb
outsl
shrb
pop
mov
shlb
sbb
or
or
push
sti
mov
mov
jne
sub
mov
jnp
and
mov
xchg
jp
or
lods
es
lret
xchg
add
cmpsl
mov
push
xchg
xor
gs
xor
movsb
mov
or
rol
out
adc
frstor
inc
rolb
stos
pop
jecxz
pop
cmc
cmp
push
xchg
daa
sub
pop
movsb
xor
pop
sub
fbld
xor
sbb
xor
shrb
push
je
jns
sbb
xchg
repnz
stos
push
std
mov
popa
inc
mov
popa
fwait
cld
aad
jns
test
jnp
movsl
arpl
aam
addb
mov
add
stos
hlt
mov
out
aad
insl
add
loop
ja
ja
lcall
cmp
mov
lds
ljmp
iret
sahf
pop
or
fistl
push
jb
loop
fsts
pop
repnz
pop
xor
inc
out
push
outsl
not
int3
pop
fmuls
cmc
iret
insl
or
sub
xor
mov
fwait
dec
ds
mov
mov
push
cltd
gs
sub
push
lret
push
orl
out
inc
mov
or
pop
mov
stos
hlt
dec
lods
data16
out
out
mov
push
in
int3
cmpsb
test
cmpsb
xchg
in
fisubl
nop
shrb
cmp
es
mov
and
pushf
cmc
adc
dec
cmpsb
or
push
jl
or
aad
pop
xchg
notb
xor
mov
scas
mov
loopne
or
imul
fsub
xchg
jmp
ret
nop
sub
adc
sahf
shrl
pop
in
jne
cwtl
lret
jo
pop
push
xor
in
and
push
cmp
or
adc
into
test
popa
icebp
or
dec
cltd
iret
stos
or
add
mov
ret
les
inc
xchg
or
xchg
push
out
push
cmc
xchg
and
cmp
push
sub
adc
or
add
dec
jns
inc
pop
fdivs
jns
clc
sub
mov
shl
hlt
ja
imul
mov
sub
xor
daa
subb
ja
negb
sbb
lret
dec
push
pop
inc
hlt
cwtl
rorl
mov
fsub
dec
insb
outsl
add
xchg
sub
pop
mov
pop
jle
into
pop
lret
ret
imul
test
mov
repnz
xchg
shrl
sub
clc
movsl
mov
je
sarl
lcall
jge
mov
push
jno
lea
mov
or
cmp
mov
mov
sub
jle
push
imul
mov
pop
add
mov
and
cmpsb
push
out
xor
insb
push
mov
xor
cmpsl
mov
xor
jnp
mov
es
shlb
push
jo
not
pop
push
mov
bound
stos
orb
xchg
daa
sti
loop
push
xchg
sbb
hlt
push
dec
imul
lret
scas
movsb
in
push
aad
inc
push
fdivrs
inc
mov
mov
push
cli
pushf
out
enter
and
push
fdivl
push
dec
fistps
jp
xchg
pop
imul
addr16
int
xor
push
push
fiaddl
and
inc
jb
outsb
jo
adc
test
rcrb
lcall
flds
sbb
xchg
fcmovu
insl
lret
push
sub
inc
inc
ficoml
shlb
push
out
jl
ret
adc
adc
or
in
jmp
adc
mov
xor
cltd
inc
cltd
aaa
cmpsb
aad
loop
movsl
bound
ss
push
cmpsl
jle
mov
push
xor
sbbb
je
mov
xchg
dec
mov
sub
ja
and
dec
and
in
push
popf
mov
push
cmp
lret
std
cmp
scas
scas
icebp
out
rclb
aad
mov
add
jecxz
xlat
lret
adcl
inc
dec
pop
pop
ja
mov
movsb
mov
ret
hlt
add
icebp
stos
in
sub
sahf
inc
std
scas
or
jmp
mov
aam
cmp
cs
icebp
int3
test
mov
mov
sbb
and
sbb
sti
mov
dec
sub
push
addr16
jl
lock
push
daa
das
sub
push
cli
into
adc
subb
pop
sbb
push
cli
cmp
pop
add
shlb
xchg
sub
arpl
inc
test
cs
xchg
and
mull
sbb
sub
adc
arpl
out
ret
leave
mov
into
mov
push
aas
push
lods
sarb
xchg
stos
push
xlat
mov
mov
mov
jge
out
movsl
push
push
jns
add
jecxz
push
scas
cmp
fnstenv
sbb
add
clc
rorb
and
bound
mov
dec
pop
or
pop
fmull
js
enter
mov
cltd
cmp
popl
imul
cmc
fcmovbe
xchg
inc
pop
push
cs
jecxz
inc
sbb
lret
dec
and
xlat
pop
rorl
int
push
jne
mov
add
je
push
inc
sbb
adc
adc
imul
mov
fists
xchg
xor
in
and
and
mov
sbb
mov
jb
jge
jl
push
cwtl
push
or
inc
mov
lcall
and
aas
insl
in
cmpsb
addr16
loop
fwait
test
outsb
xor
lods
mov
pop
jle
and
in
lcall
and
sbb
jg
cmp
sbb
push
xlat
xor
aad
rorl
hlt
pop
mov
xchg
sahf
xor
inc
cld
bound
mov
movsl
inc
pop
div
add
cmp
push
and
insl
push
sub
lock
sbb
nop
pop
sub
or
popf
mov
mov
add
jnp
aam
enter
or
push
dec
ret
adc
xor
mov
repz
jmp
out
push
mov
sarb
push
jnp
push
mov
mov
mov
test
icebp
sbb
pop
and
out
lret
lret
sub
andl
mov
xor
js
enter
rol
or
sub
lret
xor
pop
loope
cmp
pushf
mov
push
fwait
insb
push
sbb
add
push
push
push
lret
cmpsb
and
push
mov
arpl
mov
mov
push
test
xor
or
jge
and
pop
mov
mov
pop
lret
js
dec
jno
inc
movsl
jbe
jl
imul
mov
push
dec
notl
xlat
cmp
rcrb
cmp
ds
cmp
fistpll
repnz
cwtl
mov
shll
test
adc
mov
out
test
aam
fwait
inc
adc
mov
inc
int
xchg
shlb
cmp
and
sub
pop
imull
mov
mov
xchg
inc
mov
push
mov
aas
shlb
add
add
mov
xchg
clc
push
test
popf
mov
jb
sar
std
movsl
outsb
mov
sahf
shll
mov
add
mov
es
aad
shl
fdivs
movsb
mov
std
gs
mulb
jmp
adcb
aas
jnp
jb
gs
das
fwait
stos
jg
cmp
fcmove
add
pop
sub
aad
arpl
cmp
loope
aad
or
into
and
add
pop
inc
or
lret
shlb
gs
pop
xchg
fwait
shll
pop
mov
dec
mov
call
push
ja
popa
or
or
inc
aad
mov
add
and
sub
pop
mov
sbbb
push
iret
addb
mov
jne,pt
cwtl
orl
adc
push
fdivrp
or
repz
jno
push
in
jmp
jg
out
mov
lcall
pop
insl
ljmp
shll
int
sahf
push
mov
sbb
lret
pusha
adc
movsb
mul
mov
dec
shlb
adc
add
push
sub
fnstsw
daa
fwait
adc
sbb
leave
fdivrs
add
and
mov
add
and
nop
les
pop
ss
fstps
aam
sbb
clc
xchg
push
mov
jb
cmpsl
sti
movsl
inc
dec
loopne
add
repnz
das
ss
ficomps
pop
cmp
rcl
xchg
pop
faddl
gs
aam
les
shll
es
push
sbb
push
add
cmp
ds
or
xor
push
push
loopne
data16
mov
loope
stos
mov
test
rol
xlat
shlb
fwait
push
shr
lea
idivb
pop
jge
xchg
and
mov
cmpsl
lret
lahf
xor
adc
cmp
pop
mov
les
icebp
xor
mov
jne
fwait
popf
mov
mov
lcall
call
or
gs
inc
jne
xchg
cmp
outsl
or
lret
clc
movsl
lahf
mov
lock
push
push
push
jae
insl
sub
push
mov
cmp
push
or
add
aas
test
jns
rcrl
outsl
addl
cs
jne
or
aam
daa
or
fldl
loopne
in
sbb
repnz
ds
ljmp
int3
shl
pushl
popa
test
or
push
scas
inc
hlt
adc
imul
out
mov
adc
bound
arpl
jp
sub
lds
jnp
pop
fidivrl
jle
std
mov
pop
sub
mov
push
sahf
ficoms
jl
xchg
sub
fcompl
mov
push
leave
enter
sub
adc
push
or
jb
ret
sti
xlat
and
int3
xchg
mov
outsb
sub
adc
xchg
repnz
aaa
push
sbb
outsb
clc
leave
push
adc
scas
jo
inc
addb
das
mov
cmc
repnz
push
or
or
fnstcw
xchg
imul
fstpl
jg
xchg
pop
out
ljmp
js
or
sbb
mov
dec
cmp
jb
ljmp
inc
mov
push
mov
jle
xchg
mov
das
xor
xchg
or
xchg
push
clc
and
cli
cmp
add
gs
scas
repz
push
sub
xlat
and
ja
outsl
and
lods
cmpsb
cltd
jl
dec
sub
cmp
and
lock
xchg
and
loope
ficoml
outsb
popa
dec
xchg
push
pop
cmp
fcomps
and
fiaddl
push
mov
xchg
mov
leave
lahf
dec
adc
test
inc
cltd
call
mov
sub
push
stos
loopne
push
jae
push
inc
push
cmc
fldcw
dec
xor
push
mov
out
inc
rclb
dec
mov
dec
push
mov
xchg
stos
dec
test
stos
xchg
lods
gs
mov
pusha
mov
xchg
jbe
movsb
cmp
fiaddl
jae
push
xchg
daa
lods
mov
xchg
or
add
or
pop
fbstp
js
xchg
fisubrl
jge
xor
xchg
pop
fistl
add
xchg
cld
add
pop
pushw
mov
cmp
push
and
lret
add
daa
inc
xor
xchg
imul
xor
popf
push
push
cmpsb
adcb
ja
sbb
shrb
rcrb
cmp
jne
sbb
add
mov
ret
pop
lea
loopne
cmpsl
nop
pop
xchg
and
cld
sbb
daa
pop
cmpsb
outsb
xor
icebp
jg
imul
jle
xor
xor
test
sub
and
cmpsl
sub
and
xor
mov
dec
xor
mov
insb
aad
rcr
inc
inc
push
out
and
ret
xchg
jns
sub
push
cmpsb
call
or
xchg
popf
fildll
adc
push
test
arpl
jmp
es
xor
xor
leave
sub
cld
add
and
stos
add
mov
jbe
dec
inc
sub
aaa
add
jmp
xchg
xchg
jmp
pop
mov
mov
into
lret
mov
clc
fwait
test
jo
jl
adc
adc
adc
dec
jl
and
pop
inc
inc
dec
inc
mov
sub
out
add
mov
fldl
jg
ss
fst
adc
scas
add
int3
sarb
leave
hlt
push
cmp
inc
popa
mov
jne
std
and
repz
inc
push
sub
sub
sub
hlt
adc
xchg
adc
mov
push
mov
rorl
push
mov
nop
sbb
jle
nop
cltd
ret
cmp
jecxz
jg
mov
shr
add
sbb
cwtl
dec
lea
insb
add
dec
stos
outsl
mov
xchg
push
xor
repnz
xlat
and
adc
lahf
mov
leave
jle
int
movsb
push
aaa
mov
adc
ja
hlt
movsl
in
dec
in
cmp
mov
inc
repnz
xorb
dec
out
dec
inc
dec
inc
fstpl
xor
jne
sub
or
or
pusha
xor
loope
enter
sbb
addr16
loop
arpl
fldenv
add
sub
hlt
cmpsb
loope
repnz
adc
mov
hlt
push
jmp
pop
jecxz
adc
in
mov
nop
rcrb
insl
sbb
jp
out
jns
arpl
test
pop
xchg
in
push
cs
out
icebp
pop
or
mov
mov
ret
push
test
push
mov
pushf
movsl
ds
test
pop
mov
or
in
push
ret
inc
inc
xchg
mov
sub
inc
and
icebp
aad
std
scas
lea
jmp
jnp
xchg
adc
inc
jb
push
pop
or
jo
shlb
mov
rolb
mov
js
movl
pusha
in
andl
mov
jge
movsl
lea
outsb
std
pop
dec
xchg
inc
mov
xchg
imul
dec
push
inc
mov
mov
lea
inc
cmpsl
dec
loope
aam
pop
test
xor
mov
jne
rorb
mov
das
leave
mov
scas
shlb
rcll
xchg
bound
jmp
dec
cmp
mov
xor
stos
arpl
adc
fists
repnz
je
test
push
jb
xor
mov
xchg
cld
jo
test
add
loope
lods
pop
in
std
shrb
xchg
push
lret
xorb
pop
icebp
cld
aas
lds
je
pop
aas
mov
jl
dec
sub
push
int
imul
jae
aas
jns
cltd
adc
and
mov
xchg
scas
sbb
and
pop
aad
add
icebp
ds
dec
pop
sub
jbe
iret
mov
jp
stos
add
add
dec
loop
jb
clc
and
stos
pop
mov
mov
divb
sbb
call
lret
insl
addr16
mov
stos
loop
mov
add
sbb
repz
test
xchg
cli
pusha
xor
dec
into
lock
sbb
jecxz
aas
ret
ss
sahf
and
rep
add
stc
fdivp
or
cld
nop
jmp
call
icebp
mov
jo
fildl
lock
push
int
mov
loop
mov
fnstsw
sbb
jns
push
mov
jb
lods
aad
fidivl
jecxz
cli
mov
mov
sahf
xchg
add
inc
and
adc
fisttpll
fwait
add
pop
ds
mov
mov
xchg
inc
xchg
dec
mov
mov
rcrb
add
popl
repz
add
adc
movsb
cmp
ret
mov
mov
ret
inc
rcll
cmp
mov
push
popa
jecxz
in
sbbl
jb
or
adc
icebp
iret
shlb
in
mov
pop
cmp
nop
push
mov
push
sbb
or
roll
add
out
imul
add
pop
pop
std
or
es
pop
jns
bound
scas
jg
jp
outsl
fimuls
sub
jg
nop
mov
dec
mov
cltd
es
test
fcompl
jp
testb
cmp
and
xor
and
and
loop
jbe
fisttpl
pop
mov
jl
and
jl
push
or
aad
pop
lods
sub
jno
xchg
cmp
ja
outsb
xchg
cmc
aaa
in
jno
fimuls
mov
push
sahf
jnp
loop
shlb
in
fcompl
addb
stos
rolb
inc
dec
scas
or
jecxz
cmp
fcoml
or
jns
adc
mov
enter
jle
iret
push
xchg
push
pop
arpl
xchg
js
xchg
jno
rcl
pushf
aas
loop
or
iret
mov
ds
fs
imul
loopne
mov
ja
sbb
push
push
pop
adc
push
xchg
addr16
add
imul
test
xchg
xor
mov
sahf
shll
mov
shll
arpl
sbb
xchg
jbe
inc
shll
mov
push
sbb
mov
fs
sbb
leave
nop
jmp
ds
insl
xchg
cmpsb
lret
shrl
ds
xchg
addr16
sub
add
in
shl
mov
add
inc
push
xor
add
mov
or
cmp
test
movsb
mov
jnp
outsl
fisubrl
int3
mov
out
inc
mov
fstps
push
ljmp
ficomps
pop
shl
test
jno
and
sub
inc
sahf
push
push
push
push
arpl
and
mov
xor
add
andl
adcl
sub
adc
inc
adc
mov
jne
gs
insl
push
pop
or
out
dec
std
js
jne
jmp
pop
adc
mov
adc
xchg
push
or
fst
icebp
xlat
mov
push
push
and
pop
push
clc
push
lods
and
mov
dec
xor
mov
loope
cmp
int3
repz
popf
sub
mov
cmp
pop
add
rep
cmp
in
sbb
inc
or
mov
and
sti
inc
shrb
mov
testb
mov
jge
das
out
push
mov
sbb
cwtl
pop
mov
adc
xchg
push
test
adc
cmp
mov
shrl
cmpsb
cs
adc
in
sub
xor
scas
out
cmp
test
fs
mov
cmp
push
scas
cmp
xor
lret
js
or
sti
pop
jge
pop
fdivl
psllq
lret
jp
cli
popa
pusha
and
or
clc
ret
dec
cmpsb
mov
and
pop
adc
cmp
mov
sbb
das
shlb
ret
ds
push
scas
ss
mov
push
roll
in
std
hlt
divl
push
xor
leave
out
std
loopne
dec
shlb
in
popa
or
iret
push
test
dec
jecxz
imul
fwait
mov
jns
push
clc
out
loop
or
out
mov
mov
adc
ljmp
ss
gs
inc
push
mov
jg
testb
dec
dec
pop
jmp
mov
lock
xchg
movsl
push
ret
mov
jge
sub
in
mov
jg
inc
dec
cld
insb
and
cld
push
xor
dec
cmp
enter
pop
ss
bound
push
adc
and
push
je
dec
cld
mov
sub
adc
sahf
xor
and
mov
or
sti
mov
loope
mov
jmp
pop
icebp
mov
das
popf
jno
les
push
pop
nop
add
lcall
mov
outsl
je
mov
scas
jns
mov
xchg
loope
mov
pop
je
pusha
dec
dec
sub
out
imul
dec
cmpsb
ja
mov
add
lds
pop
int3
jne
fdivrs
push
test
mov
mov
inc
std
lcall
sub
add
dec
jae
sub
lret
jmp
push
mov
push
stos
xchg
cmp
xor
add
dec
lock
jb
fstpl
test
ds
push
negb
divb
lahf
fldl
lea
shlb
imul
lret
aam
add
and
in
inc
push
imul
mov
dec
xchg
notl
cmp
cmpsl
and
jg
push
mov
pop
jnp
sahf
pop
push
stc
mov
sti
insl
fadds
and
xchg
jp
das
flds
popa
clc
xor
mov
mov
pop
push
sbb
dec
in
jbe
adc
dec
inc
data16
xchg
dec
lea
loopne
xlat
lea
nop
push
xchg
bound
mul
cmp
rcrb
push
test
out
fstps
pushf
rol
ds
lret
jb
fisttpl
inc
sbb
sbb
mov
xchg
add
je
dec
loope
in
xchg
or
sub
int
xchg
call
add
inc
shlb
fidivs
lret
xor
xchg
jno
xchg
fisttpll
dec
pop
adc
push
mulb
inc
mov
stos
mov
adc
jno
into
push
lods
adc
fs
iret
enter
in
pop
and
imul
rcr
iret
jmp
lods
push
scas
pusha
jecxz
popl
xchg
mov
iret
test
push
xor
cli
sbb
fsubrl
fsubrs
les
pop
mov
jmp
sub
leave
out
hlt
add
into
int
cld
xor
adc
and
xchg
sub
xchg
test
push
jnp
dec
cwtl
or
mov
adc
call
dec
jno
sbb
lods
inc
aas
sub
jno,pt
out
hlt
mov
out
pop
imul
xchg
lret
push
cmpsl
xor
sarb
cmp
pop
loopne
lock
inc
shlb
fldenv
aam
rorl
iret
inc
jnp
inc
lahf
mov
lock
nop
sbb
les
daa
dec
push
cld
movsb
rolb
mov
rorb
enter
push
and
sbb
push
popf
in
cli
subl
and
dec
rclb
cltd
or
xchg
pop
xor
xchg
fbstp
shll
stc
icebp
dec
sar
fadd
divl
sbb
push
adc
push
test
jne
outsl
out
imul
in
iret
mov
cmpl
cld
mov
hlt
popa
out
movsl
inc
fcomp
sub
adc
mov
repz
aam
sarb
cmp
sub
adc
out
out
sub
dec
data16
jmp
inc
push
out
into
lahf
inc
xchg
popf
dec
cmp
sbb
mov
idivb
mov
pop
jmp
inc
jnp
xor
jns
int
rcrb
pop
int3
mov
sbb
push
insl
dec
cs
push
mov
sbb
mov
pop
dec
sub
sbb
mov
add
inc
add
insb
xchg
mov
in
push
sub
xchg
call
mov
arpl
and
in
sub
jecxz
pop
mov
xchg
rcrl
sub
aad
orb
sub
sar
xor
adc
xchg
jge
inc
repz
std
cltd
add
push
test
stc
inc
mov
cmp
in
and
mov
xchg
es
xchg
mov
rcrl
cmp
mov
cmp
push
lods
and
es
sbb
dec
mov
inc
fdivl
je
adc
outsl
pop
adc
adc
xlat
xchg
push
jge
clc
xchg
daa
sbb
mov
or
inc
add
mov
push
outsl
subb
lea
sbb
in
push
and
scas
pop
sub
inc
xor
or
mov
push
notb
mov
add
lods
xchg
sbb
or
je
jns
push
pusha
push
dec
pop
int3
jg
js
aad
push
jle
push
xchg
fwait
add
call
adc
enter
and
or
jmp
pop
xchg
iret
mov
je
scas
lahf
std
jl
addr16
mov
mov
lock
lret
sub
movsl
xor
push
xchg
mov
mov
inc
inc
rorl
das
push
and
push
cwtl
mov
in
fs
pop
jae
mov
scas
int3
ljmp
fisttps
and
mov
mov
mov
inc
sub
fbld
mov
sub
push
sbb
or
fsubrs
fwait
and
inc
insb
lcall
inc
or
xchg
mov
add
add
lock
int
lock
lcall
jl
imul
insb
mov
in
clc
xor
cmp
rcll
shrl
imul
fs
daa
stos
fdivl
adcb
xchg
imul
xor
fisttpll
js
sahf
adc
jae
shl
xchg
dec
dec
pop
mov
sti
in
push
movsl
out
lock
lcall
pop
stc
rclb
push
jb
mov
andb
mov
shlb
jge
rcl
mov
dec
out
dec
or
popa
je
mov
in
movsl
xchg
xchg
inc
pandn
pushf
and
sub
sub
dec
ficomps
pop
dec
inc
frstor
sub
sub
shlb
mov
cmp
add
add
cmp
imul
pop
mov
imul
mov
and
dec
sbb
push
addl
pop
into
addl
ss
rcrl
fadd
scas
mov
js
sbb
mov
sub
inc
rcr
inc
dec
mov
std
xchg
loope
push
andl
add
xchg
mov
cmpsl
cmp
pop
lods
sub
leave
xor
jns
inc
mov
mov
pop
jae
es
stos
mov
les
mov
jmp
repnz
in
sbb
sub
icebp
mov
xchg
jns
xchg
cltd
push
add
pop
lds
aam
mov
xchg
stc
out
jmp
sbb
jbe
jno
cmp
sub
outsb
in
dec
out
xchg
push
xchg
xor
adc
pop
arpl
pop
inc
push
int3
dec
test
sbb
mov
fsubrs
iret
icebp
sarb
jl
push
and
fwait
mov
mov
test
ficompl
aaa
inc
xorb
inc
cmp
xchg
cmp
mov
inc
arpl
push
jae
test
or
and
mov
jp
outsl
push
adc
cwtl
push
cmp
sahf
pop
out
aaa
daa
stos
in
hlt
das
and
imul
jge
out
mov
aad
je
insb
and
lcall
in
mov
or
loope
add
sbb
in
outsb
xchg
adc
fidivrl
data16
xlat
iret
mov
inc
test
sub
in
lds
cmpb
dec
sbb
xor
push
mov
out
imul
rol
pop
mov
pop
and
push
dec
testb
inc
stos
jl
shl
xchg
enter
sub
xchg
in
xchg
addb
xchg
push
mov
bound
mov
les
cmpsl
adc
jo
and
rcll
xchg
lock
push
pushf
pushf
jbe
and
in
fdivl
sbb
imull
outsb
into
inc
or
in
mov
add
rorl
nop
or
fstpl
ret
and
mov
out
push
xchg
lods
sahf
outsb
divb
dec
jecxz
lea
sbb
dec
inc
test
push
cmp
xchg
mov
cld
xor
jae
cmovs
call
xchg
sbb
gs
negb
loope
repz
test
out
cmpsl
insl
mov
call
test
imul
es
ret
int
imul
pop
xchg
mov
aas
bound
scas
xor
xchg
push
sub
fwait
pop
mov
insb
sbb
jno
lcall
call
fucomip
idivl
pop
jp
dec
stos
mov
pop
cmc
shr
jg
mov
inc
lret
dec
pop
repnz
sub
jge
mov
adc
mov
daa
ljmp
lock
clc
jns
vcvtpd2ps
push
imul
ljmp
ds
mov
shr
mov
sub
push
and
call
fs
sarl
roll
mov
outsb
cmp
xchg
sbb
popf
loopne
daa
xor
leave
test
fists
inc
inc
popf
mov
jp
mulb
aad
movsb
sbb
insl
ljmp
or
loop
and
aad
or
xor
jo
lods
sahf
fisubl
insb
cli
stos
cltd
pop
je
xchg
arpl
addr16
push
das
mov
mov
and
cmp
clc
xlat
iret
je
push
insb
aaa
divb
daa
jg
mov
fcomps
adcl
mov
ror
int3
stos
and
and
loop
pop
faddp
jo
xchg
cltd
enter
ffree
dec
and
test
cmp
imul
cvtdq2ps
pusha
sub
clc
ret
enter
ret
insb
pushf
ljmp
mov
addr16
inc
jecxz
testb
jb
sub
xchg
add
js
cmc
mov
mov
mov
clc
in
adc
add
cmp
test
repz
decl
jecxz
jns
movsl
sbb
dec
jae
pushf
mov
lcall
aaa
sub
lcall
adc
xor
push
and
xchg
andb
cmp
popf
mov
in
add
pop
call
xor
lods
mov
mov
sarl
in
loope
das
adc
sbb
mov
xor
cmp
js
mov
int3
xchg
repnz
test
movsb
insb
inc
xor
das
test
leave
into
lds
inc
pusha
lods
pop
xlat
xlat
push
xchg
mov
or
xchg
dec
mov
xchg
jne
mov
popf
imul
fwait
adc
cwtl
dec
push
lods
adc
push
popf
jo
dec
mov
xor
jmp
push
adc
enter
adc
and
pop
sub
or
mov
add
or
push
repnz
push
jecxz
sbb
daa
or
mov
jo
push
add
push
pop
test
and
out
pop
xchg
outsl
fdivrs
in
push
fnstcw
lret
xor
lcall
fnstenv
xor
mov
cs
fbld
jge
test
test
adc
xchg
push
push
stos
push
icebp
inc
or
loope
or
ljmp
jp
cs
pusha
leave
pop
rorl
imul
mov
xor
add
pop
stc
pop
dec
aas
in
cmp
add
adc
jmp
pop
mov
mov
sbb
stc
cmc
fst
subl
cmp
adc
or
mov
push
mov
out
scas
out
mov
cmp
inc
add
lahf
lods
sbb
mov
lods
ljmp
dec
and
gs
adc
sbb
pop
cmp
push
pop
mov
cmpsl
out
in
stos
mov
sbb
lods
pop
sbb
lods
and
adc
jns
hlt
cmp
dec
stos
ret
bound
xor
or
sub
inc
xor
mov
movsb
out
push
fsubs
aam
int3
movsb
mov
or
adc
notb
out
pop
icebp
movb
sbb
adc
iret
cmp
testl
fstps
cmp
mov
mov
pop
sbb
popf
out
pop
icebp
mov
insl
sub
adc
jge
loop
ss
add
loopne
xor
hlt
fidivrl
xor
inc
push
xor
and
or
popa
sub
jmp
inc
mov
push
test
mov
dec
cmpsb
mov
sbb
repnz
or
jmp
adcl
mov
inc
incb
loop
daa
ljmp
int
push
fs
or
dec
pop
or
pop
push
jge
subb
mov
add
movd
xchg
lret
push
shr
lods
ja
jle
lds
aad
stos
or
test
jge
mov
rorb
push
xor
sbbb
hlt
sbb
leave
js
xor
pop
inc
sbb
lods
idivb
ret
mov
dec
sti
push
pushf
lahf
push
adcb
fldcw
and
pop
lahf
xor
inc
dec
sub
jp
mov
cmp
shll
mov
ljmp
add
push
cmc
jbe
lahf
mov
lea
pushl
cmp
ret
jb
pop
lods
pop
sbb
mov
stos
jl
mov
inc
out
mov
aas
pop
inc
mov
mov
mov
popf
pop
ficompl
mov
in
inc
xchg
sarb
push
mov
or
sbb
pop
adc
sbb
aam
xchg
shll
loopne
rorl
jno
test
clc
mov
insl
int3
push
fisubrl
mov
imul
movsb
shl
add
cmp
push
push
jbe
test
gs
inc
sti
mov
cmpsl
arpl
mov
mov
pusha
add
mov
int
shrl
das
ret
jp
sub
sbb
cmp
scas
movsb
adc
cmpsl
sub
out
repnz
jmp
cmc
rcrb
cmp
mov
ret
jge
or
testl
pop
dec
cmp
pop
add
fistps
fsubp
in
pop
loop
stos
test
aaa
jno
inc
sub
pop
inc
xchg
fdiv
mov
in
cmp
rorb
mov
adc
xlat
es
jb
stos
out
jmp
push
push
mov
or
jbe
sbb
mov
mov
cmpsl
jne
sub
int
fwait
out
les
das
cmp
mov
mov
aad
ret
mov
loope
adc
mov
mov
sub
mov
rcl
push
insl
cmpl
adc
jbe
mov
adc
push
popa
xor
xchg
into
mov
loopne
outsl
push
mov
cmp
mov
mov
xchg
ja
out
stos
add
jnp
push
add
sbb
popa
test
insl
mov
xchg
pop
gs
gs
pop
push
stc
pop
lret
jae
lock
loop
scas
out
ss
cmp
dec
bound
pop
popa
insb
adc
mov
xor
aad
test
xor
sub
clc
fiaddl
mov
stc
cmp
dec
xor
xchg
sub
push
mov
sub
dec
mov
pop
push
pop
pop
movsl
adc
or
imul
fisubl
add
jns
in
jmp
or
dec
inc
xor
sub
jns
lret
es
addl
inc
push
mov
lock
pop
xchg
jmp
stos
fnsave
outsb
sti
sti
dec
jb
dec
daa
or
xchg
das
inc
std
pop
lock
imul
scas
sub
sahf
xchg
adc
xchg
xchg
xchg
into
jbe
push
mov
push
ja
cmp
mov
jae
fs
jne
jp
sub
jne
pop
mov
add
or
pop
push
mov
push
test
jp
in
jecxz
cmp
push
dec
pop
cmp
sub
mov
pushf
out
dec
mov
jecxz
adc
and
in
movsl
push
shlb
negl
add
xchg
mov
push
jnp
dec
arpl
jge
sarb
mov
shll
in
lret
push
xchg
inc
mov
xor
jb
int
fstpt
jns
andl
insb
repz
lcall
mov
sbb
mov
sahf
ss
pop
sahf
add
xchg
and
aam
jb
sub
adc
xchg
push
inc
mov
cmp
mov
add
sbb
sub
scas
mov
jb
mov
xchg
or
or
push
xor
out
pop
das
cs
cmpsl
jbe
mov
xchg
sbb
xor
sahf
out
es
aaa
lods
mov
fistpll
adc
fcoms
sbb
popf
jb
movsl
int
mov
inc
test
dec
adc
fcoml
xorb
fwait
inc
pop
roll
mov
in
jnp
mov
and
and
mov
pop
pop
xchg
imul
fcompl
mov
decb
xchg
test
out
mov
push
ds
js
xor
dec
push
lds
fs
cmpb
mov
mov
inc
call
fdivr
rolb
pop
dec
idivl
add
inc
stc
ss
push
jns
mov
mov
ja
outsb
and
mov
shrb
mov
mov
ret
mov
imul
xor
push
adc
mov
sbb
popf
jo
add
movsl
notl
cmp
and
dec
and
leave
push
xchg
jns
jg
test
lret
clc
mov
xchg
push
fbstp
icebp
mov
adc
xchg
lret
xor
xchg
and
sub
xchg
fisttps
cmc
push
lcall
aaa
movsb
add
in
xor
out
out
pop
pop
fnstcw
cs
jnp
xchg
push
addr16
loopne
test
xchg
mov
mov
or
pop
cld
push
jo
pushf
mov
lds
inc
aas
popf
pusha
loope
lret
cmpsb
cwtl
int
mov
push
stc
loopne
xchg
push
push
rcrb
fstpl
movsb
push
pop
repnz
add
mov
ffree
arpl
outsb
imul
in
cmpsb
add
push
orb
add
cwtl
inc
push
pop
cmc
jmp
or
add
xchg
mov
xor
xchg
stc
jmp
gs
adc
jmp
insl
and
inc
push
lock
loope
aas
xor
in
push
jbe
add
xor
xchg
ljmp
fs
call
lcall
frstor
pusha
lahf
sub
add
shrl
or
adc
push
sub
and
inc
test
pop
sbb
fcom
sti
adc
stos
iret
psubw
mov
inc
cli
outsl
and
push
mov
outsb
jb
loope
shrb
int3
or
icebp
or
jg
sub
nop
mov
nop
jb
jle
sub
push
loope
rcrb
and
xchg
dec
pop
mov
xchg
jp
fldz
add
adc
loopne
les
sbb
lret
test
lods
push
mov
push
ret
loop
and
jl
inc
inc
divb
xlat
stc
or
iret
mov
cmp
sbb
daa
push
pop
add
shl
cmp
jecxz
mov
in
repz
lods
lahf
mov
mov
sahf
imul
std
and
int
xchg
sub
test
lcall
jmp
movsb
negb
inc
mov
cmp
inc
xchg
int3
es
xor
adc
loopne
loope
shrl
imul
inc
push
mov
pop
xorb
shlb
xchg
pop
popa
test
xchg
out
adc
rolb
jne
outsl
push
sub
sarl
test
fstps
and
pushf
int
pop
rcrl
popa
imul
or
xchg
movsb
outsl
push
cltd
outsl
nop
arpl
and
mov
lahf
js
mov
or
fcom
divl
outsl
push
mov
aad
inc
mov
sbb
pop
jp
sub
dec
in
sub
cltd
ja
push
insb
in
add
push
jns
sub
pop
mov
push
sahf
ret
pop
inc
add
mov
pusha
push
pop
sbb
xor
mov
orb
jmp
out
lret
fsubrl
iret
outsl
jp
xchg
imul
sti
jmp
scas
mov
lcall
mov
ret
jbe
aas
or
cmp
xor
add
sub
mov
sbbl
or
pop
andb
loope
push
pusha
mov
xchg
pop
mov
pop
mov
xor
push
ror
in
add
int3
mov
cmc
aad
sub
stos
push
insl
test
xor
std
out
pop
inc
lea
in
aaa
xchg
sub
inc
inc
fisttpl
sarb
mov
aad
leave
pmaddwd
inc
cmp
ret
lret
mov
jne
mov
cmp
adc
push
mov
mov
mov
shrl
pop
or
out
xor
scas
iret
jl
test
push
out
je
call
pusha
bound
repz
data16
in
pop
in
adc
int3
shrl
jl
call
jo
enter
inc
hlt
jle
jecxz
lcall
leave
lret
mov
xor
lds
mov
add
stos
shlb
inc
pop
push
pinsrw
stos
xchg
outsb
jl
scas
in
je
andl
lods
push
sti
dec
sub
mov
mov
cmpsb
mov
cli
sahf
mov
popf
stos
or
test
mov
ror
test
xchg
mov
jnp
lret
ja
nop
mov
loope
inc
add
ret
pop
lds
or
push
movsl
jb
ffreep
lcall
gs
sub
jo
mov
sub
jmp
sbbb
sti
or
sub
aas
jmp
repnz
out
xlat
push
cmp
jmp
dec
add
jno
jl
das
cmp
pop
xchg
lds
mov
mov
sub
mov
mov
push
push
out
fstpl
pop
lcall
shr
sti
fst
push
pop
mov
fists
or
sarb
mov
mov
sub
mov
sbb
jge
xor
adc
mov
and
xor
stos
rorb
xchg
loopne
out
shll
xor
mov
bound
jb
jp
sti
les
cs
ret
fisttpl
fsubr
hlt
sarl
repz
