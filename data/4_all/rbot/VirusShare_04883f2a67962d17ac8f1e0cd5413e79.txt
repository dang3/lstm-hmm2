xchg
cli
adc
mov
insl
pop
adc
xchg
loope
pop
inc
sub
imul
push
call
test
and
gs
inc
xor
out
shll
sbb
or
mov
repnz
push
mov
mov
adc
add
test
stos
add
sub
test
repz
out
xchg
inc
mov
shrb
in
or
sbb
loope
lret
push
sbb
movsl
js
xor
imul
pop
into
lcall
loope
aaa
repnz
std
add
xor
fmuls
pop
pushf
jge
cli
lcall
jle
adc
jbe
loope
mov
dec
jecxz
fildll
testl
shll
mov
lret
cld
movsl
pop
or
jge
or
adc
xlat
jb
jp
addl
jmp
adc
nop
inc
out
xchg
dec
jnp
addr16
sub
push
out
sbb
popf
or
xor
cmpl
add
cmp
xor
orb
dec
mov
adc
fs
push
nop
clc
aaa
cltd
test
fidivrl
add
jns
scas
push
lret
int
jnp
in
cmp
fucomp
sarl
ret
repz
das
outsl
cwtl
mov
push
repnz
and
ljmp
jns
push
insl
movsl
xor
nop
ljmp
jno
sub
mov
insb
inc
ljmp
js
dec
inc
in
popf
shlb
imul
nop
mov
xlat
push
in
and
mov
repz
lahf
jecxz
nop
jg
mov
dec
push
hlt
inc
dec
jp
movsb
test
mov
cmpsl
mov
fistl
adc
test
mov
fcom
cmp
cmc
icebp
insb
mov
add
mov
xor
cmpsb
pop
add
push
cmp
mov
pop
cltd
jo
iret
pop
pop
lock
xchg
jge
ficompl
xor
mov
clc
pop
cwtl
cmp
sub
xchg
data16
repnz
mov
pop
pusha
leave
gs
xchg
mov
jecxz
es
mov
xor
adcl
sub
add
mov
sub
mov
dec
jle
add
das
mov
orb
push
cmpsl
outsl
fwait
mov
pop
mov
fcompl
push
cmpsl
xor
add
xor
fcmovnbe
dec
jb
addb
sub
inc
sbb
add
lods
and
xorl
xchg
lcall
mov
or
jle
pop
push
popf
push
adc
dec
test
fstpl
in
push
pop
fcomps
lods
xchg
dec
lret
lods
insb
adc
adcl
not
rcll
pop
aad
clc
mov
out
dec
cmc
aad
pop
inc
ficoml
pushf
cmp
xor
jne
sbb
aas
push
cmp
adc
imul
test
sub
call
dec
sbb
les
jmp
jecxz
ret
addl
dec
jecxz
into
xor
xchg
ret
nop
test
xor
and
imul
movsl
mov
push
pminsw
mov
sub
dec
into
ficomps
mov
adc
in
int3
push
add
negb
leave
sahf
rcrb
lret
inc
push
jno
insl
pop
jne
stos
push
fstl
stos
xor
loopne
jo
or
xchg
jae
mov
mov
push
jno
inc
lahf
js
sub
es
xor
leave
pushf
imul
aaa
mov
push
dec
movsl
add
jae
jbe
insb
jmp
or
gs
mov
add
repnz
sub
test
data16
movsl
mov
pop
in
cmp
addr16
mov
inc
lock
imul
movl
add
es
xchg
sbb
dec
xor
cmp
xchg
clc
mov
jmp
mov
ret
push
sub
stc
nop
inc
inc
xchg
pop
mov
inc
jp
mov
pusha
pop
push
mov
jne
out
imul
out
jmp
jo
push
xchg
xlat
add
insl
aas
xchg
mov
aaa
sarl
out
stos
ficoms
xchg
dec
push
push
test
fs
jb
xchg
xchg
mov
out
movzwl
sub
lahf
dec
dec
pop
xchg
adc
mov
inc
adc
lret
push
mov
pop
jo
xor
dec
adc
je
xchg
je
xchg
dec
xchg
sbb
fucompp
dec
dec
andl
jo
cwtl
lock
jb
inc
loopne
ss
adc
sub
push
je
dec
cmp
jns
or
add
adc
mov
jno
jae
pusha
jae
aas
xchg
das
lods
cmc
add
pop
pop
adc
ret
mov
pop
iret
in
inc
push
pop
pop
pop
dec
inc
int3
lods
push
orl
jb
jae
inc
je
mov
inc
mov
xchg
int
push
mov
mov
into
jp
push
push
sti
in
xchg
hlt
into
push
sub
aaa
lcall
xchg
into
jl
in
mov
xchg
movsb
aam
movsb
push
shr
lret
jp
mov
imul
mov
stos
dec
jno,pn
or
std
pop
loopne
adc
push
add
jge
or
mov
into
leave
mov
sub
rolb
inc
out
into
sbb
sub
xor
xchg
pop
in
stc
push
xchg
mov
adc
dec
mov
filds
xor
imul
jle
test
push
jbe
sub
int
iret
aas
outsl
mov
push
adc
lcall
notb
xor
scas
into
add
loop
mov
insb
sar
add
pop
into
push
ss
test
and
cmovbe
or
and
add
aas
js
push
add
outsb
xchg
mov
pop
xchg
jbe
inc
add
scas
fwait
into
inc
es
and
lahf
mov
mov
dec
in
and
add
mov
insb
cli
jo
xchg
fmull
aas
fwait
pop
pop
out
mov
mov
outsb
repnz
fisubl
xor
jge
pop
sbb
push
lret
scas
xchg
inc
dec
xchg
mov
loope
in
stos
lret
ret
and
ficompl
xor
cmp
and
es
pop
movsb
sub
call
adc
or
stc
jne
fisubs
in
aad
sub
or
pusha
enter
orl
movsl
rcr
cmpsb
xchg
inc
jne
int3
les
lods
sbb
shrl
mov
pop
hlt
add
push
scas
pop
push
pop
sti
sub
out
adc
mov
cltd
sbb
xchg
int3
inc
fsubrl
aaa
push
xchg
out
cmp
incl
in
outsb
adc
push
addr16
and
aas
stos
push
ss
push
mov
test
test
xor
sahf
pmulhw
addr16
mov
sbb
cli
mov
icebp
imulb
lret
mov
rolb
lcall
lea
push
pop
testl
pop
aaa
das
jp
mov
imul
xor
outsl
mov
fsubr
adc
mov
fadd
inc
cmpsb
imul
sub
into
lcall
lahf
lods
adc
divb
cwtl
fdivs
inc
cmp
arpl
sub
inc
ficoms
push
push
outsb
loop
xchg
cmp
push
adc
sets
test
mov
mov
xor
aaa
sbb
dec
insb
test
lcall
jge
and
lcall
add
lahf
mov
or
or
xorl
push
cmc
mov
popa
cmp
fstps
shlb
divb
js
enter
icebp
mov
mov
inc
pop
xchg
push
loope
xchg
into
aaa
lock
inc
push
jecxz
or
or
add
xor
adcl
mov
scas
ds
jbe
mov
cmc
xor
mov
and
jl
test
xor
push
rcr
push
sub
cli
xor
dec
call
dec
mov
jb
sub
push
mov
into
test
mov
sbb
xchg
cmp
scas
push
cmp
aaa
call
jge
jecxz
jl
imul
mov
orl
sbb
mov
pop
test
ljmpw
test
xchg
xor
push
jnp
ds
insb
test
in
subl
sub
fsubrl
arpl
ret
mov
cwtl
sub
cmp
jo
xor
stos
dec
movb
cltd
sbb
cmpsl
dec
sbb
adc
out
outsl
cld
mov
or
cld
cli
xor
imul
push
scas
std
xchg
outsl
clc
mov
imul
sbb
xchg
cmc
cli
clc
mov
or
bound
xor
push
popa
shrl
cli
xor
dec
dec
lods
pop
nop
stc
jae
jmp
cmp
cmpsb
pusha
sti
push
mov
xchg
pop
xchg
jo
inc
push
pop
adc
xor
rol
loope
xchg
scas
or
xor
pop
xor
pop
mov
adc
jmp
lods
mov
aad
icebp
push
lret
xor
sbb
outsb
enter
mov
fnstsw
jmp
js
and
scas
push
mov
pop
enter
dec
cli
aam
xor
push
sbb
pop
outsb
popa
imul
push
lahf
outsb
xor
arpl
push
cmp
data16
adc
sub
xchg
fiaddl
sahf
jnp
fsubs
sarb
in
jae
int
adc
adc
cld
mov
mov
lahf
sarb
mov
xchg
and
je
notl
js
rcrl
xor
adc
mov
fstpl
mov
dec
mov
in
add
addr16
ss
lcall
orb
insb
fdivl
cmpsl
jo
icebp
daa
jecxz
push
push
loop
push
dec
lods
rcll
or
cmp
xchg
cmp
stos
fnstenv
call
leave
insl
push
fnstenv
xchg
pop
mov
xlat
scas
add
push
rolb
xchg
pop
jo
cmpsl
pop
cmp
mov
mov
push
push
cli
aaa
fidivrs
jle
xchg
dec
adc
insl
stos
fldenv
popf
dec
mov
mov
or
jg
stc
popa
jmp
xchg
mul
add
push
shrl
enter
inc
pop
xchg
cmp
stos
mov
movsl
jmp
sahf
pop
movsl
inc
push
nop
mov
ss
adc
cmpsl
dec
xorb
dec
mov
lcall
ds
aas
out
dec
sbb
mov
and
mov
or
mov
jg
clc
out
and
in
lea
lds
sbb
xchg
scas
adc
shr
stos
adc
outsb
aam
mov
mov
sbb
outsb
jecxz
jl
mov
rolb
pop
add
pusha
stc
sub
aam
jae
jp
gs
inc
aaa
repz
in
test
aaa
and
rcrb
xchg
jno
pop
fiadds
pop
inc
adc
xchg
mov
iret
or
sbb
adc
test
jge
cmp
test
cmp
cmp
or
out
out
dec
xchg
icebp
fwait
sbb
and
dec
cmpl
in
roll
fmuls
inc
mov
mov
xchg
ds
arpl
sbb
xchg
aaa
fcomps
loop
popf
aas
xchg
mov
dec
ljmp
sub
add
out
mov
pushf
mov
loop
out
sub
ljmp
sahf
das
test
mov
rcrl
pop
inc
adc
lea
cmp
mov
in
movsb
outsl
iret
mov
xchg
adc
or
lcall
subb
cmc
jp
js
sbb
push
cmp
mov
jb
mov
sbb
push
jle
idivl
dec
jno
add
cmp
jbe
js
pop
jne
adc
dec
adc
add
pop
jl
das
pop
ds
add
push
imul
lock
in
fwait
pop
iret
imul
mov
stos
int
cmpsb
jb
sub
into
addr16
add
sbb
iret
mov
and
in
shrl
adc
cmp
jb
pop
push
dec
mov
adc
jecxz
jg
movsl
inc
test
xchg
pop
in
push
push
call
mov
pusha
sub
mov
xor
notl
adc
movsb
or
aam
and
xchg
adcb
lahf
outsl
ret
jns
in
scas
decb
out
mov
mov
or
jg
sbb
iret
nop
testb
lock
insb
or
and
scas
lock
fnstcw
stos
sahf
jno
or
cmc
fsts
or
in
pop
movsl
rorb
pushl
rcr
ss
int
xor
dec
sti
xchg
repz
jo
jg
repz
ja
inc
out
dec
mov
loope
pop
aas
lret
cmpsb
pop
ja
enter
xor
lret
cmp
jo
mov
in
sbb
xchg
mov
xchg
xchg
adc
outsl
jecxz
lods
daa
dec
inc
mov
dec
or
or
mov
inc
lea
test
jecxz
cmpb
dec
leave
pop
es
xor
add
rol
sahf
add
xlat
mul
pop
fs
adc
mov
xchg
add
and
test
pop
sub
fisttpl
xchg
ljmp
cmpsb
dec
xchg
adc
nop
movsl
sub
insl
bound
mov
mov
dec
push
push
aam
in
icebp
lret
idivb
ss
inc
xor
mov
and
dec
pop
lods
jbe
nop
stos
int
xor
loopne
inc
mov
mov
mov
imul
test
pushf
hlt
inc
xor
movsb
das
stos
push
sub
pop
mov
jbe
cmp
imul
push
adc
dec
mov
movsl
cmp
sar
dec
mov
leave
arpl
mov
push
cmp
push
lea
jmp
hlt
int3
iret
pop
imul
jbe
cmp
mov
hlt
adc
hlt
dec
fidivs
lods
loopne
sub
loopne
jle
dec
cli
mov
sub
jl
outsl
pushf
xchg
scas
jno
xchg
add
aad
jnp
bnd
in
push
inc
cmp
je
xchg
pop
aaa
js
lret
fs
cwtl
dec
jnp
and
cld
mov
enter
cmp
aad
inc
mov
xorl
xchg
aaa
jnp
jle
lcall
out
in
push
movsb
sahf
cs
out
mov
sbb
push
cmp
cmp
adc
fs
lret
sbb
jecxz
ja
aad
inc
sub
dec
add
and
sbb
into
mov
test
push
xor
cmp
lcall
inc
pop
dec
in
inc
or
xchg
inc
cmc
sub
fdivs
mov
pop
sbb
mov
adc
out
mov
push
insb
out
out
sbb
roll
mov
and
xchg
pop
aaa
push
fdivl
or
push
cmp
loop
dec
btc
mov
dec
pop
sarb
pusha
jg
cmp
addr16
push
add
and
lcall
shll
sarb
mov
stos
sbb
mov
dec
jno
out
inc
sbb
fnstcw
cmp
pop
js
loopne
test
or
bound
xchg
outsb
mov
lock
lcall
xchg
fsubrp
aas
shlb
push
stc
lock
and
pop
push
jp
stos
xchg
les
xlat
das
test
cmp
shll
xchg
sub
mov
mov
leave
inc
lret
in
imul
push
xor
xchg
rcll
lds
addr16
fwait
lds
repz
and
dec
dec
adc
adc
jecxz
lea
addb
in
adc
cmpsl
jmp
iret
loope
mov
push
pop
and
or
int3
or
cmp
adc
imul
and
enter
movsl
out
les
popa
or
dec
scas
pop
mov
pusha
rcrb
mov
sbb
jg,pn
mov
cltd
lock
adc
xchg
mov
sbb
xlat
rcll
dec
cmp
cmpsl
jns
in
incl
iret
in
jmp
dec
xor
repz
jns
test
cmc
movsb
icebp
xchg
std
push
adc
in
xor
loop
xor
test
xchg
es
int3
mov
filds
mov
fs
das
push
iret
in
repnz
ds
insb
pop
ss
fildll
dec
jg
mov
insb
pop
mov
pushf
jne
xor
pop
pop
dec
adc
fdivr
sub
xchg
add
dec
jne
xchg
or
xor
push
jmp
ss
in
pop
sub
and
push
xchg
shrl
stos
outsb
stc
mov
mov
dec
xchg
dec
hlt
js
push
jnp
stc
push
or
push
add
sub
and
jne
cmp
adc
addr16
mov
cmp
addb
xlat
jge
mov
mov
xor
inc
mov
out
jge
arpl
mov
inc
mov
jp
cmc
jmp
pop
daa
inc
mov
pop
xchg
inc
int3
adcb
mov
mov
xor
inc
lea
mov
xor
or
cmp
add
shll
scas
inc
arpl
dec
xchg
or
data16
rorl
in
or
lahf
iret
add
adc
xor
pop
enter
xor
cmp
fstps
push
clc
jg
mov
inc
mov
test
ds
mov
cmp
sbb
or
dec
sbb
pop
push
out
fldl
xor
and
cltd
inc
push
push
mov
adc
mov
imull
int
lods
jecxz
inc
fdivr
aas
mov
mov
inc
jbe
aam
clc
mov
imul
insb
mov
lret
fnstcw
fcmovnbe
sbb
lods
movb
ret
daa
aam
fisttpll
out
out
or
pusha
out
mov
jns
add
cmpsb
sub
fstl
xchg
fisubl
lret
popa
mov
mov
pop
test
push
sbb
push
repz
sub
push
in
ret
inc
mov
daa
iret
mov
pop
orl
pop
out
jg
dec
or
sbb
pop
xor
lods
adc
mov
or
in
into
xorb
dec
xor
in
cld
push
or
rolb
cmp
pop
jae
sbb
xor
rorb
loopne
in
inc
sub
xchg
jmp
scas
fcmove
fwait
push
outsl
mov
dec
adc
filds
mov
inc
push
data16
pusha
and
rcrl
cmpsl
mov
ror
loope
insl
pop
jno
mov
and
mov
adc
jle
dec
sbb
mov
jne
loopne
dec
mov
add
test
stos
mov
mov
mov
mov
lods
lahf
push
mov
pop
imul
jmp
add
in
jno
pop
nop
dec
fs
fbstp
jnp
dec
mov
imul
int
stos
mov
sub
jae
push
mov
fsubrl
xchg
ret
push
lods
dec
in
repz
jb
ds
dec
or
xchg
aas
incl
mov
pop
or
pop
sbbb
fsubrs
jb
pop
testl
and
test
dec
daa
insb
add
subl
xchg
out
das
in
insl
ret
adc
pop
jmp
inc
jle
dec
inc
or
lds
add
out
movsb
std
xchg
fld
dec
xchg
sbb
push
cs
call
jb
push
out
mov
loop
jle
jns
out
jg
in
jb
jl
nop
imul
xchg
and
xor
loop
xlat
fisubrs
in
cmpsb
push
idiv
dec
jmp
sarl
fbstp
adc
pop
and
mov
dec
mov
inc
iret
pop
sbb
or
cmpsl
sub
sub
xor
xchg
aaa
cmp
mov
xor
lds
repnz
jp
sarl
shll
and
insb
pop
mov
aam
pop
inc
inc
mov
push
dec
aaa
or
repz
xor
cli
pushl
daa
int3
sbb
or
loope
dec
addr16
fs
fwait
pop
sahf
popf
pop
xor
sbb
push
mul
dec
mov
mov
iret
in
addr16
inc
and
push
mov
ja
push
jnp
mov
scas
mov
mov
cwtl
call
clc
ret
pop
sub
add
subb
jp
call
sbb
out
push
fwait
test
out
sub
sbb
mov
into
inc
testb
mov
mov
jmp
add
sub
mov
aas
les
sbb
fdivr
mov
sbb
daa
mov
je
cmp
mov
aaa
mov
fwait
pop
push
mov
inc
scas
gs
ret
mov
jne
nop
xchg
shr
ja
jmp
adc
cmp
scas
jns
lds
leave
xor
lahf
xchg
xor
jno
sub
cli
rclb
pop
sub
idivb
cmpsb
dec
insb
dec
je
push
dec
mov
nop
xchg
ljmp
mov
das
mov
shll
rclb
jge
push
inc
int
jns
dec
mov
data16
outsb
sub
mov
xchg
aaa
sub
and
xchg
das
dec
and
dec
je
subl
roll
mov
lock
or
clc
rcrb
add
pop
ja
add
or
push
sbb
add
data16
cld
enter
cmp
xchg
inc
addb
dec
mov
aas
call
aas
lds
jmp
int
xor
test
inc
aam
out
in
repnz
xchg
into
das
mov
pop
mov
adc
cmp
jb
xor
jmp
xchg
addr16
and
imul
shlb
mov
scas
xchg
jbe
mov
pop
aas
imul
jno
repz
scas
jp
insl
xchg
xchg
sub
popa
arpl
inc
sbb
fcmovnu
dec
xor
cmpsb
out
movswl
pop
orb
orl
push
ss
jne
aaa
sbb
movb
xchg
mov
adc
mov
jne
push
push
xor
or
push
xchg
insb
mov
and
loopne
stc
mov
mov
movsl
insl
mov
test
add
xor
pop
jge
dec
mov
cld
aaa
xchg
dec
fs
jmp
je
jno
mov
stos
xchg
jl
imul
bound
jmp
jle
int
xchg
dec
jbe
or
add
stc
push
dec
mov
outsb
imul
cmp
in
cmpl
sub
mov
popf
dec
push
push
divb
test
inc
mov
xchg
orl
sbb
sub
xor
ds
es
xchg
movsl
std
iret
lahf
xlat
mov
outsl
in
xor
out
xchg
pop
and
test
cmp
inc
cs
cs
and
xchg
mov
xchg
cmp
add
test
ret
or
dec
cmp
or
in
aaa
jae
xor
xchg
fstl
push
addr16
cmc
into
cli
rol
lock
mov
mov
xchg
pop
outsb
stos
inc
subb
sub
scas
cmp
stc
fisubrs
rcrl
pop
lock
js
call
pop
lds
sub
lret
cld
push
idivl
and
or
push
test
int3
mov
xchg
out
xor
pop
repnz
pop
lea
sbb
mov
mov
arpl
arpl
mov
inc
pop
jle
cmpsl
cmp
mov
insb
or
test
pop
jge
pop
mov
pop
or
popf
inc
add
test
xor
nop
mov
jle
leave
adc
push
shrl
cmp
arpl
inc
pusha
sahf
popl
mov
xor
pop
sub
hlt
add
aas
dec
pop
out
mov
dec
add
jns
out
insb
push
sbbl
xchg
xlat
mov
add
push
arpl
lds
nop
adc
push
aam
inc
sbb
xchg
mov
mov
mov
sub
lea
test
scas
cwtl
cmpsb
in
xor
jl
shlb
or
nop
mov
call
ficoml
fwait
cmpsb
in
pop
repnz
inc
and
mov
cmpl
pop
aaa
test
aaa
xor
ds
data16
xchg
or
pushf
inc
ficoms
sti
push
int3
xor
sbb
mov
inc
in
clc
gs
clc
popa
inc
loope
dec
shrl
xor
mov
ficompl
stos
cmp
xchg
jle
ja
repnz
push
in
lret
mov
sub
test
mov
testl
out
outsb
xor
stc
xchg
faddl
andl
jb
stc
pop
sbb
inc
mov
pop
or
dec
pop
ficoms
cmpb
xorl
out
aaa
push
xor
repz
pop
xor
pusha
repnz
sbb
or
mov
ds
icebp
fidivl
and
in
pop
push
xchg
sbb
pop
mov
and
mov
rcll
sub
ja
js
jge
xlat
call
sti
jne
cmp
mov
cmc
loope
pop
roll
fwait
add
lahf
enter
mov
jg
mov
fildll
das
jmp
ss
lcall
mov
mov
mov
shrl
or
xorl
cmpsl
mov
sbb
stc
jne
cli
scas
inc
mov
lahf
inc
mov
push
mov
dec
insb
pop
pop
sbb
mov
repz
cltd
jmp
pop
or
dec
mov
inc
scas
pop
loop
std
scas
cmp
adc
inc
sub
sbb
jmp
and
mov
lahf
fcmovnb
enter
add
iret
fmuls
adc
out
gs
add
and
insb
lds
mov
and
pop
mov
mov
sbb
dec
clc
mov
test
outsb
push
xchg
add
cmp
inc
jbe
dec
dec
ds
cs
arpl
popa
dec
hlt
mov
insb
cmp
xor
xchg
dec
mov
jle
call
inc
neg
add
adc
dec
addr16
dec
xor
xchg
mov
adc
jb
xorb
jg
xchg
aas
nop
cmpsb
xchg
mov
lahf
push
int3
sub
addr16
push
or
jbe
repnz
push
iret
cmp
addr16
mov
insb
int3
fsubrs
dec
ret
push
stos
sub
jmp
roll
shlb
cmp
je
or
sti
repz
xor
sahf
repz
cmp
jno
fcoms
test
inc
gs
inc
push
mov
pop
mov
mov
mov
inc
test
mov
mov
hlt
jmp
add
sbb
pop
ds
fstl
mov
out
add
ja
scas
push
bound
xor
stos
adc
xchg
inc
not
scas
cmc
sbb
cmpsl
sub
stos
repz
sahf
xor
push
test
insl
stos
push
mov
mov
std
adc
inc
push
pop
sbb
out
std
dec
dec
mov
mov
popf
paddsb
js
push
clc
cli
pop
dec
push
adc
pop
sbb
sbb
sbb
outsl
sub
xor
insl
and
fmul
add
add
jge
std
adc
mov
ficomps
sbbl
pop
out
pop
adc
data16
repnz
les
xor
lret
fstl
scas
mov
mov
insb
add
loopne
dec
movsl
pop
xchg
cmp
sti
fisttpl
lods
xor
outsb
cmp
jne
in
popa
fs
and
pop
pushf
mov
stos
mov
sub
stc
dec
pop
mov
cmp
fdivl
sbb
aaa
shrl
rolb
jns
cmp
call
dec
adc
imul
mov
shll
ror
or
mov
dec
push
ret
cmp
iret
or
or
aad
dec
daa
mov
stc
jne
icebp
aam
fwait
in
fstpl
inc
and
push
and
sub
fistpl
jae
xchg
pop
sub
push
mov
push
sti
inc
sbb
je
sub
outsl
push
lods
scas
repz
jne
cmc
inc
pop
xlat
mulb
xchg
mov
jmp
sbb
jge
push
icebp
push
dec
pusha
inc
push
xchg
enter
stos
mov
ret
fucomp
ds
call
or
sti
pop
pop
add
push
inc
add
js
inc
adc
in
into
movsl
sbb
inc
adc
add
inc
lret
test
pop
xchg
mov
xchg
add
sbb
xchg
inc
sub
push
or
dec
outsb
movsb
cmc
mov
push
push
xor
or
and
cmp
mov
push
dec
pop
add
or
jbe
add
add
and
or
add
sub
mov
inc
stos
push
sbb
cmc
hlt
inc
xchg
pop
lcall
xchg
jno
xchg
scas
jno
scas
mov
mov
dec
cmp
xor
jmp
ds
mov
js
shl
add
cld
inc
leave
idivb
xor
xchg
out
mov
xlat
mov
pop
cmp
sub
lcall
pop
sti
fcomps
sub
in
xchg
sbbb
fwait
lret
movsb
sbb
jge
das
leave
xor
mov
inc
test
push
fidivrl
mov
inc
jb
mov
inc
into
fmul
xchg
inc
or
adc
lcall
jae
mov
les
je
movsb
add
clc
inc
or
imul
in
add
mov
idivb
xor
std
push
into
enter
sub
scas
cmp
mov
jecxz
fbld
push
arpl
xor
cld
pop
test
je
or
mov
mov
inc
adc
and
sub
ror
into
mov
pop
pusha
enter
xchg
iret
xor
ret
inc
sbb
loope
mov
int
test
cwtl
sub
out
scas
ficompl
mov
imul
sbb
dec
dec
movsb
ja
jmp
push
push
lea
cmp
mov
push
lods
push
shrl
mov
sahf
jbe
pusha
add
jge
lret
and
lds
xchg
inc
ss
cmp
mov
enter
outsb
pop
jmp
repz
pop
cmp
lods
fsts
sbb
push
jg
inc
jle
push
scas
ja
lret
lds
mov
mov
cmp
add
mov
and
outsl
pushf
inc
push
mov
icebp
pop
and
xchg
test
mov
xor
xchg
cld
popf
adc
push
add
int3
enter
shl
aam
and
out
adc
sbb
sahf
adc
test
push
mov
mov
imul
inc
push
xsaves
or
pop
adc
in
sub
sub
shll
test
pop
and
mov
jmp
push
int3
insb
ret
out
pop
ds
pop
or
into
test
or
pop
std
mov
fldl
rcr
ja
sti
insl
push
out
adcl
nop
jg
adc
pushf
xlat
or
andb
nop
push
lret
xchg
popf
je
scas
ds
pop
nop
jl
pop
sbb
shr
mov
cmpsl
mov
ficoml
orb
outsl
cli
test
cmpsb
test
dec
movsb
adc
jb
nop
sbbb
jnp
sub
adc
lods
pop
push
test
nop
test
scas
test
int
xor
jge
cmp
xchg
daa
int
jo
js
aad
fists
pusha
hlt
fildll
or
or
in
fistps
mov
shr
fs
in
sti
mov
or
mov
add
push
jg
hlt
lods
xchg
push
popf
mov
push
mov
adcb
pusha
out
mov
mov
pop
leave
cmp
sbb
ret
inc
pop
jp
aaa
pop
ficoms
xor
divl
cmp
cmp
mov
cmp
adc
rclb
cmp
enter
dec
cmpsb
aas
dec
dec
cmp
xchg
cmpsb
pop
testl
dec
mov
loop
cmp
adc
cmc
mov
gs
aad
bound
mov
xor
push
lods
mov
sahf
lods
mov
pop
pop
xchg
popf
in
lds
test
adcb
jmp
pop
mov
mov
adc
jns
mov
ret
fiaddl
outsl
push
add
lods
lcall
fnstsw
cmpsl
push
push
es
push
fwait
mov
jnp
mov
rorl
daa
nop
mov
sbb
mov
mov
fstpl
push
jns
in
mov
jo
scas
add
js
insl
out
repnz
loopne
frstor
test
aas
cltd
scas
cmp
lds
mov
adc
xorl
xchg
test
pop
lods
mov
sub
pop
mov
mov
push
xchg
sbb
das
lret
out
loop
arpl
jmp
sbb
movsl
setle
loop
mov
adc
sar
push
mov
orb
mov
nop
pushf
outsb
cltd
dec
iret
into
jmp
inc
arpl
invd
sbb
inc
fnsave
pop
inc
jge
cmpb
fsts
out
fwait
inc
dec
aas
mov
enter
or
jge
mov
jb
mov
test
mov
sbb
dec
add
or
loopne
mov
cwtl
imul
rcr
xchg
push
or
js
mov
mov
and
repnz
or
or
mull
and
cmp
out
ja
sbb
mov
add
jecxz
jge
lret
xor
dec
inc
push
mov
or
and
je
out
xchg
ljmp
icebp
lcall
stos
pusha
subb
ja
sbb
cltd
push
pusha
stos
fsubs
out
dec
cmp
mov
push
push
lcall
mov
push
jle
or
fcoml
daa
mov
es
subb
shrl
out
xchg
mov
fs
cmpl
ss
push
lret
mov
subl
movsl
push
int3
or
subb
stos
mov
dec
mov
push
cs
add
jp
jecxz
push
push
cmp
mov
pop
movsl
popfw
inc
jle
div
mov
or
sbb
cmp
jne
mov
cltd
fcmovnu
in
ds
cmp
mov
dec
cmp
jnp
sbb
sub
mul
jnp
ficoml
das
cmp
cli
jns
pop
testb
mov
stc
xchg
movsb
test
ljmp
ficoms
pop
inc
imul
out
xchg
mov
decl
int3
jecxz
adc
xchg
or
cmp
test
jno
or
repz
or
ja
fadds
int3
xchg
jne
inc
icebp
inc
push
sarb
ja
adc
mov
adc
stos
dec
loop
xlat
aad
cs
shlb
push
outsl
lods
push
jno
dec
cmpsb
push
jmp
out
int3
sub
jl
cmp
adc
rcrb
out
xchg
scas
cmp
call
push
ss
cmpsb
daa
ljmp
into
xchg
jmp
cmp
int
outsb
and
sub
loop
add
jno
enter
ja
cmpsl
add
mov
pop
movhps
jb
call
lcall
mov
loopne
fwait
add
pop
ss
rorl
gs
mov
je
xchg
and
push
adc
inc
and
fnsave
je
popf
movsl
mov
and
push
out
jo
in
push
sbb
lods
jno
mov
cmpsb
ljmp
inc
mov
lcall
scas
frstor
mov
cmp
ss
jge
xchg
lcall
mov
shlb
clc
xor
sub
jo
mov
mov
xchg
ss
sub
ret
xorl
cld
aam
stos
and
push
lods
shll
push
inc
test
orb
push
sarb
sub
dec
pop
adc
testl
xchg
lret
adc
mov
aaa
movsl
dec
dec
pusha
dec
xchg
push
xor
cmp
sbb
xchg
test
loope
lcall
cmp
push
xor
mov
add
dec
xor
and
mov
jne
mov
lret
aam
imul
xor
pop
stos
loopne
loope
fadd
lds
xor
sti
add
in
push
jecxz
shlb
and
cwtl
in
nop
mov
ret
leave
ret
aam
xchg
xchg
sti
lret
jge
pop
decb
icebp
xor
popa
movl
mov
fldcw
and
adc
mov
mulb
test
js
sbb
mov
ss
fs
and
or
xor
int
inc
mov
xor
in
fistpll
xchg
cmp
or
mov
scas
gs
jbe
insb
imul
movsb
shlb
or
test
dec
rol
push
jae
shl
mov
mov
out
push
add
mov
jle
mov
jo
or
cmpsb
sub
repnz
lret
xchg
jg
inc
lret
sti
inc
fldenv
insb
je
fwait
pop
adc
xchg
int
pop
add
push
adc
daa
xor
or
mov
shrb
xor
add
leave
hlt
std
loopne
jge
addr16
fstpl
xchg
sub
mov
push
pop
xor
push
imul
ljmp
out
pop
adc
jl
add
in
add
inc
pop
add
rclb
inc
cmp
pop
cld
add
ljmp
sbb
xchg
test
mov
popf
pop
xchg
push
inc
stos
sub
push
and
popa
mov
or
mov
mov
adc
mov
in
in
dec
mov
push
fldl
pop
push
add
mov
pop
adc
lret
inc
dec
adc
loope
in
repnz
mov
add
inc
scas
pop
mov
inc
mov
mov
cmp
inc
loope
mov
fsubs
push
pop
sbb
test
lret
mov
aas
xchg
dec
outsb
lock
mov
cwtl
daa
imull
sbb
fwait
dec
inc
or
ljmp
mov
ret
pop
outsb
mov
lret
es
scas
loop
pop
shrl
sbb
pushf
rol
push
jmp
pop
mov
inc
pop
dec
fbstp
cld
cmp
push
pop
mov
sbb
fwait
psubusw
lock
inc
in
adc
cmp
pop
and
inc
push
incl
jle
lds
cli
pop
inc
cmc
xchg
mov
mov
pop
cltd
cmp
jle
lret
xchg
or
sbb
xchg
nop
imul
sbb
sbb
adc
out
xchg
cmpb
xlat
jae
sbb
sbb
push
lock
inc
jns
das
pop
mov
ret
push
loopne
push
test
sarb
lock
popa
aam
decb
lret
inc
data16
rclb
nop
push
jp
lret
in
xor
adc
sbb
jns
add
cmpb
inc
testb
mov
cmpsl
dec
loopne
test
clc
scas
pop
cmp
test
push
add
leave
xchg
nop
or
insl
imul
mov
mov
inc
stos
mov
mov
testb
adc
int
cmc
or
mov
jo
sahf
in
sbb
aaa
cmpsl
std
add
aaa
xchg
or
out
mov
sub
es
stos
movsb
cmc
out
ja
push
xchg
mov
xlat
icebp
jb
or
ret
jl
mov
cmp
xor
out
bnd
adc
push
xor
imul
mov
sbb
mov
mov
pop
cmc
dec
mov
cmpsb
dec
mov
push
xor
ds
sub
mov
insl
or
adcl
or
xor
mov
pop
pop
cmc
mov
leave
dec
inc
scas
shlb
mov
mov
sub
ds
xchg
stos
shrl
arpl
push
cmc
leave
mov
xchg
ds
sbb
cmp
test
ret
xchg
les
icebp
iret
std
sahf
int
data16
push
mov
sbb
adc
repz
test
loopne
movsl
mov
inc
inc
mov
mov
test
cmpsb
mov
adc
push
ljmp
insl
jecxz
cmp
dec
icebp
stc
jno
pusha
js
add
test
outsb
cmp
ret
cmpsl
ja
xor
shrb
test
popf
push
ftst
scas
xchg
in
frstor
adc
mov
bound
gs
je
aaa
add
mov
out
hlt
sbb
push
lahf
daa
pop
out
inc
adc
cmp
push
jno
rcll
call
cmp
enter
xlat
imul
jle
xor
xchg
mov
mov
mov
push
lea
in
mov
xlat
dec
pushf
mov
xor
leave
popf
sub
daa
dec
mov
xor
pop
mov
lret
cmp
int3
pop
inc
adc
imul
inc
insb
jb
xchg
std
jb
incb
push
mov
and
int3
push
push
sbb
scas
pop
lret
test
lods
adc
js
pop
repz
dec
xchg
scas
and
ret
jmp
push
loop
xchg
fimull
sbb
jge
push
inc
mov
roll
lahf
into
cmpsl
stos
lods
or
xchg
pop
dec
mov
pop
jp
adc
mov
dec
cmp
add
aaa
lds
ror
mov
lret
mov
fsubr
dec
nop
pusha
test
nop
pop
ja
out
movb
pop
pop
sbbl
pushf
lods
fidivrs
out
pop
in
push
pop
add
dec
icebp
push
out
mov
jp
inc
cmpsb
jns
inc
pop
adc
mov
mov
jne
fldenv
sbb
pop
mov
sbbl
sbb
int
in
int
adcb
mov
mov
and
jno
mov
jbe
adc
outsb
adc
xchg
or
inc
mov
pop
popa
sahf
les
enter
insl
ds
fs
lods
int3
cmpsl
pop
xchg
lea
push
out
pop
fnstenv
jb
and
push
cmp
jno
in
mov
jle
lea
add
leave
adc
push
jb
adc
xchg
push
jb
push
jge
sbb
push
add
popf
or
sbb
cmpsb
mov
and
cmc
pop
jns
cmp
orl
ss
xchg
pop
xchg
fstps
adc
inc
pop
sbb
sbb
pushf
aad
and
in
mov
rcll
mov
lret
lea
jecxz
lret
jecxz
fwait
push
pop
mov
movsl
pop
mov
insb
aaa
dec
add
in
push
xchg
lret
rcl
jmp
add
cmp
fnstenv
adc
lock
mov
mov
mov
movsl
sbb
push
insl
mov
insb
adc
push
inc
ds
pop
mov
jo
lsl
inc
ja
subb
in
aaa
test
adc
fildll
push
cmpsl
mov
inc
cmp
ds
outsb
lahf
mov
push
fisubrl
pushf
outsb
jns
mov
xchg
dec
push
nop
adc
lret
xor
or
jmp
dec
sbb
push
iret
pop
out
or
sub
jb
bound
sbb
sahf
xor
rolb
dec
popf
xchg
pop
dec
sub
sbb
cli
mov
fisttpl
xchg
mov
mov
shrl
jmp
outsl
lock
in
test
test
adc
cltd
adcb
push
pushf
mov
insl
aam
dec
mov
iret
mov
xchg
push
inc
mov
fcoml
test
stc
cmp
xchg
dec
pusha
push
or
imul
lret
add
iret
xchg
test
iret
shll
inc
decb
mov
std
loopne
mov
or
mov
pop
push
dec
sti
fiaddl
jne
jmp
dec
fwait
lock
xor
loope
inc
push
mov
in
loope
add
sahf
mov
fsubp
hlt
push
mov
fsubrl
inc
sub
or
adc
sbb
ss
out
pushf
in
sahf
pop
sbbl
gs
or
xchg
cs
sti
fidivs
roll
mov
push
test
mov
je
jl
repnz
pop
push
in
or
mov
cmp
or
xchg
sahf
xor
cmpsl
inc
adc
mov
test
mov
shl
fidivrs
bnd
sbb
mov
js
shlb
sarl
mov
mov
pop
inc
mov
mov
cmp
shrb
jno
mov
enter
jg
mov
dec
mov
mov
mov
and
fiaddl
xchg
loop
push
ljmp
lahf
out
sbb
push
popf
cmpsl
fisttpl
sti
push
cli
cltd
ljmp
mov
mov
fwait
xchg
leave
jb
push
xchg
or
andb
mov
test
ret
out
ds
or
int3
xor
mov
pop
xchg
les
mov
jo
sub
das
mov
push
xor
pusha
je
mov
iret
jno
ja
test
or
inc
add
mov
push
ret
or
aaa
adcb
push
jno
pop
xor
int3
mov
inc
adc
mov
xor
or
shld
pop
pop
loope
or
stc
hlt
sbbl
xchg
or
sbbl
push
cltd
mov
shl
shl
bound
aad
push
iret
xchg
mov
jp
mov
movsl
popa
add
sbb
addb
mov
lcall
dec
inc
xchg
dec
imul
mov
dec
shll
and
and
ret
xchg
js
xor
shl
ja
xchg
cmp
movsb
and
out
add
inc
add
sti
hlt
lret
add
inc
xor
inc
push
cmpb
sub
movsl
scas
xchg
dec
jns
cmpsl
sub
pop
jmp
cmp
inc
jb
fisubrs
cmpsl
dec
sbb
lea
aam
inc
ss
xchg
pop
in
mov
adc
mov
cmp
loope
in
cwtl
in
pop
push
jle
iret
xor
cli
or
mov
lret
push
mov
ds
mov
test
sbb
jns
push
pop
daa
xchg
push
sti
xchg
cmp
fnsave
adc
test
pop
das
jp
aas
mov
push
enter
push
dec
push
testb
cmpb
and
xchg
cmp
insb
mov
push
fnstsw
add
jge
xor
pop
fst
shlb
mov
movsl
loope
inc
fistl
and
rcl
push
add
pushf
fidivrs
cli
sbb
in
pop
lahf
mov
les
lret
adc
mov
sub
fstl
xchg
xchg
fxch
das
mov
jae
icebp
cmp
adc
push
xlat
aad
repnz
push
into
xor
sub
lret
jle
repnz
test
aam
push
loop
popa
int3
orl
ret
out
cmpsl
cmp
inc
jg
je
xchg
mov
xchg
icebp
adcl
lret
jno
adc
xor
mov
fistpll
adc
f2xm1
sbb
cld
outsl
pushfw
dec
mov
out
mov
aaa
popf
test
jmp
sbb
rorl
xchg
gs
popa
inc
dec
jne
and
mov
in
jl
mov
lea
jo
jno
cmp
sub
sbb
mov
jmp
dec
xor
sbb
push
sub
popf
push
ja
xchg
xor
inc
dec
mov
xchg
in
adc
xchg
xor
adc
or
push
jmp
mov
repz
outsb
jnp
test
popl
or
std
rcll
adc
std
out
mov
aad
add
xor
jg
inc
push
lds
pop
push
fwait
pop
xchg
sub
sbb
add
sub
scas
fsubrs
xchg
jo
push
adc
sub
daa
dec
icebp
aad
mov
sti
jo
pop
sub
sub
in
push
xchg
xor
jle
jo
xlat
mov
mov
mov
mov
cmp
mov
or
int
sub
test
xor
adc
aam
ja
scas
inc
inc
xlat
mov
rorl
pop
jl
xor
jnp
andb
xlat
imul
ljmp
add
jns
dec
xchg
xor
mov
arpl
xchg
mov
or
loopne
bound
cltd
inc
inc
mov
cmpsl
inc
jmp
icebp
in
jle
data16
sbb
shlb
js
shrb
sub
mov
jle
sub
mov
rcrl
push
inc
incl
mov
iret
pop
add
adc
xlat
jo
stos
cld
or
inc
mov
outsb
iret
mov
decb
loope
rcll
imull
cmp
inc
push
sbb
xchg
cmp
lcall
sahf
cld
pop
push
decb
mov
pop
ret
cmc
xchg
test
cmp
pushf
aas
or
sti
loope
push
mov
loopne
int3
nop
push
clc
push
mov
push
xchg
jns
sbb
aam
out
and
jmp
sub
fwait
sbb
popa
ja
out
pushf
ret
pop
inc
test
dec
lods
adc
fld
xor
push
stc
outsl
pop
push
popa
and
loopne
mov
dec
sub
daa
jns
xchg
in
add
pop
jle
cmc
in
sbb
mov
in
push
push
mov
movsl
cltd
rclb
cltd
cmp
aaa
inc
cmpsl
arpl
es
out
xchg
inc
jae
pop
leave
jnp
gs
fstps
jmp
jae
gs
sbb
add
xchg
hlt
sub
cltd
cmp
xchg
inc
jbe
out
movsl
jmp
divb
inc
loop
das
leave
pop
fs
imul
popa
xor
out
adc
dec
les
mull
les
aad
mov
or
adc
in
fisubrl
cld
xchg
mov
in
push
dec
dec
jbe
mov
movsl
xor
jl
popf
lock
es
in
xor
cld
sbb
lods
popf
pop
out
leave
filds
lock
push
bnd
cmc
dec
mov
jle
cmp
cmp
xor
push
nop
aas
jp
lret
notl
mov
ret
ficoms
mov
ret
in
or
adc
mov
lcall
aas
or
pop
lock
stc
jnp
lods
fstps
pusha
cmpsl
mov
mov
push
inc
lds
icebp
push
inc
lahf
push
stc
rorl
add
loope
ss
lods
jmp
out
adc
in
pop
fs
push
mov
mov
dec
mov
push
push
cld
out
xchg
and
test
es
xchg
mov
hlt
je
adc
test
notb
add
pusha
insl
fildll
xorl
stos
stos
fldl
je
ret
mov
xlat
xchg
or
cltd
pop
push
sbb
stos
sbb
and
mov
jno
dec
cmpsb
sbb
rorl
out
mov
outsl
dec
test
stc
or
or
aaa
push
lds
or
lea
mov
jg
and
adc
lret
test
bound
adc
dec
or
es
pop
jge
nop
xchg
dec
out
add
cmpsl
mov
outsl
test
sub
xlat
pop
popf
mov
mov
pop
dec
fdivrl
xchg
js
clc
lock
xchg
or
je
test
clc
push
pop
adc
dec
loope
hlt
push
mov
xchg
push
xchg
popf
mov
jno
jbe
in
mov
ret
out
jmp
pop
repz
cmp
jno
sub
jbe
or
enter
sbb
mov
xor
mov
jge
xchg
push
gs
xchg
push
mov
insl
jbe
loopne
ljmp
adcb
insb
popf
aam
rolb
and
shrl
mov
jmp
imul
cli
out
imul
sarl
jne
add
mov
in
xorl
lcall
push
dec
jle
outsl
mov
dec
out
into
xchg
sbb
push
cmp
mov
pop
adc
je
sub
sub
fmuls
push
icebp
mov
mov
scas
mov
adc
sahf
popa
inc
popf
adc
xor
leave
in
pop
in
mov
leave
dec
adcl
aaa
ret
scas
js
pop
cmpsb
mov
mov
mov
movsl
xchg
subb
pop
inc
lret
bound
inc
fimull
sub
bound
xor
in
push
xor
enter
icebp
insb
inc
imul
jmp
mov
out
sahf
nop
pop
shrl
push
in
dec
inc
xchg
mov
out
bnd
rorb
cltd
pushf
xchg
sub
mov
cltd
les
cmp
imul
ret
aad
nop
jge
movsl
push
ds
data16
arpl
dec
and
mov
shlb
xlat
dec
sub
jl
push
lds
test
mov
fistl
loop
pop
addl
mov
sub
fsubs
push
xchg
sub
cmp
inc
or
movsl
icebp
or
cmpsl
push
ljmp
pop
daa
lahf
insb
pop
int3
mov
dec
jmp
and
jnp
fstpl
or
stos
ss
jge
fdivl
dec
fcomps
push
hlt
pop
bound
movsb
fcompl
addr16
test
mov
bound
fwait
dec
mov
aad
movsl
in
test
push
stos
xchg
xchg
outsb
mov
cmpsb
rcl
sub
sub
mov
data16
iret
jno
sbbl
mov
jg
xchg
mov
sub
pop
scas
xlat
sarl
dec
rcr
xor
mov
inc
daa
mov
xor
cmp
lret
mov
test
dec
inc
fsubs
imul
out
jnp
mov
or
into
xchg
test
iret
outsb
sub
jle
mov
jle
mov
lock
negl
mov
push
in
movsl
scas
cmp
xor
jb
arpl
out
add
push
test
loope
mov
jg
jbe
sbb
das
ror
out
sbb
lock
dec
sarl
and
sub
pop
test
scas
lds
add
mov
xchg
sub
test
mov
sub
sub
das
inc
std
inc
pop
push
mov
sbb
xchg
inc
in
inc
insl
sub
and
sub
ss
das
decb
or
jl
cli
mov
sahf
cmpsb
lret
pop
loop
adc
lret
adc
xchg
call
push
jge
cmp
sbb
decb
clc
push
imulb
add
mov
add
shrl
pop
add
mov
dec
lea
test
mov
jecxz
leave
mov
stos
pop
xchg
or
or
xchg
test
test
pop
test
insb
cmpsb
aaa
sub
scas
rorl
scas
xchg
or
xor
or
sbb
jo
mov
std
insb
adc
insb
sub
insb
push
xlat
negl
add
subb
cmp
and
scas
ret
push
mov
test
test
scas
sub
dec
and
adc
push
or
mov
jg
inc
xchg
mov
sub
xor
sub
push
lods
aam
push
cvtps2pd
xchg
push
add
sti
loopne
iret
repnz
shl
lret
sub
xchg
test
mov
xor
ljmp
push
outsb
outsb
xor
cmpsb
xchg
hlt
rorl
inc
push
test
int
outsl
test
inc
fmuls
scas
and
push
adc
mov
and
sahf
scas
jo
push
repnz
inc
mov
icebp
jns
sbb
mov
outsl
outsb
push
pop
add
ja
jmp
insb
pop
xor
sub
push
xchg
or
pop
push
int3
scas
pop
push
xor
xor
pop
pop
xchg
shrl
jbe
lods
push
mov
ds
xor
cs
dec
xchg
inc
sbb
fstps
test
xor
mov
lods
pop
leave
push
push
pop
aad
xchg
adc
jmp
vpperm
jmp
cmp
ficoml
ffreep
jmp
adc
insb
xchg
xor
jecxz
add
add
or
mov
test
add
arpl
loopne
add
in
in
jo
js
scas
loopne
xlat
test
or
cmp
jp
and
inc
jo
pusha
js
dec
xchg
jb
call
movsl
mov
icebp
pop
sub
imul
push
test
push
repnz
outsb
xor
cltd
sbb
aad
jle
push
ds
jp
cs
outsb
in
jle
cwtl
inc
dec
and
xor
mov
sub
dec
mov
mov
pushf
lock
cmp
clc
repz
in
popa
sub
inc
pop
lods
xor
lock
xor
xor
ljmp
jg
push
xchg
mov
push
pop
pop
cmp
pusha
mov
jl
jecxz
mov
int
jnp
mov
inc
lock
mov
or
pop
and
pop
mov
xor
and
mov
jecxz
adc
rcrl
xchg
ljmp
int3
enter
and
cld
jbe
cmpsb
repz
dec
ljmp
pusha
xlat
jb
sbb
dec
sbb
repnz
xchg
xchg
lds
inc
jne
push
lea
lods
cmp
popf
leave
fstps
inc
xchg
push
mov
sahf
fiaddl
icebp
add
or
push
cli
stos
xorl
inc
adc
pop
es
pop
test
ss
pop
cmp
maxps
std
roll
push
cmp
data16
je
xor
xor
es
dec
sub
add
inc
jno
loopne
push
in
xchg
jl
xor
xchg
adc
mov
sahf
cmp
mov
pop
das
jbe
xchg
cmp
cmp
pop
and
dec
dec
rcll
lods
mov
mov
mov
loopne
bound
sub
int3
cmp
pop
dec
jp
dec
adc
xor
dec
mov
mov
push
push
inc
inc
pop
pop
cmp
xchg
add
mov
insb
int3
das
push
daa
lea
ss
or
fwait
mov
push
loop
or
mov
jg
sbbb
cmp
cld
fistps
sbbb
xor
xchg
out
movsl
inc
pop
hlt
test
xlat
xor
jg
mov
popf
js
clc
mov
imul
insl
mov
aam
xchg
sbb
pop
inc
adc
or
cltd
xchg
jne
mull
xchg
jecxz
fiadds
mov
in
aas
or
push
xor
iret
std
pop
jbe
xor
test
pop
push
ds
movsl
cmpsl
ret
push
pop
sahf
xor
mov
mov
jae
filds
adc
cmp
push
pop
flds
push
aaa
lret
fmulp
pop
cmc
rcrl
dec
sbb
xor
ret
mov
push
jge
add
lock
mov
test
jmp
fwait
push
movsl
add
xlat
leave
hlt
insl
mov
add
fstps
mov
outsl
ss
ss
cmp
loop
adc
popf
aam
add
lods
fmuls
add
pop
lret
lret
stc
mov
aam
fwait
xor
push
ret
push
movsl
mov
out
dec
shrl
sub
ss
pop
loop
mov
scas
jecxz
push
out
nop
cmp
aam
ss
pusha
mov
add
fisubrl
xchg
or
or
xchg
and
rolb
adc
push
jb
lcall
cmp
stc
insl
xchg
push
adc
dec
repnz
or
movsl
xchg
inc
jo
pop
pop
bound
mov
lahf
mov
mov
jecxz
pop
dec
shrb
icebp
out
cmp
aaa
push
pop
out
out
pop
shlb
pop
jbe
test
push
cmp
mov
sar
ja
scas
adc
pop
ds
cmp
imul
push
leave
dec
push
push
jbe
icebp
lcall
mov
lahf
xchg
scas
int
pop
maxps
jecxz
push
jns
adc
xchg
lea
xor
adcb
flds
mov
rolb
jno,pn
int
int
jmp
cmp
shr
lret
rcll
cld
xorb
lcall
push
add
mov
dec
inc
mov
iret
popf
push
repnz
sub
into
rol
pop
idiv
incb
push
ret
or
sti
inc
fisttpll
ret
sub
dec
jg
ss
mov
jecxz
push
iret
ret
punpcklbw
aam
das
cmp
dec
mov
push
pushf
loope
mov
pop
mov
push
jnp
mov
into
cld
jecxz
sub
outsl
and
mov
jmp
xchg
pop
lahf
clc
and
push
adc
inc
jl
stos
add
loop
push
lea
lcall
cld
cltd
movsl
out
mov
or
xor
lret
mov
adc
pop
jg
sbb
cltd
shlb
shrb
jae
cmp
dec
pop
ds
and
jo
pop
mov
aaa
add
mov
mov
ret
push
fidivs
pop
ror
iret
xor
pop
aaa
test
add
cwtl
sbb
push
int
cmpsb
mov
repz
lods
cmp
mov
adc
dec
outsb
testl
adc
or
stos
jmp
mov
add
jecxz
sarl
push
shrb
mov
insl
pop
ja
adc
mov
inc
outsl
xlat
cmp
insb
mov
xor
and
mov
sub
data16
std
adc
mov
add
adc
stos
adc
lods
cmp
lcall
scas
sub
ret
das
xchg
vmread
lahf
dec
and
xchg
js
in
lds
and
jns
movsb
push
loopne
not
add
roll
test
pop
jo
ret
xchg
mov
fmuls
cmc
pop
ficomps
mov
les
inc
xchg
mov
es
mov
ss
jle
fsubr
jns
add
xor
inc
ss
rcl
mov
pop
jle
loope
imul
mov
popa
xor
inc
ss
std
xor
push
clc
dec
mov
xor
jge
mov
dec
dec
repnz
push
pop
push
add
mov
sarb
stc
fmulp
xchg
clc
cmp
xor
aam
push
mov
scas
mov
mov
inc
xor
mov
jmp
leave
out
xchg
or
cmp
daa
aam
into
inc
sub
dec
mov
incl
xor
push
dec
dec
pop
add
or
mov
mov
push
mov
and
leave
xchg
lods
mov
lea
movsl
sbb
or
enter
pusha
mov
pop
loop
mov
jae
outsb
jp
jmp
imul
xor
pop
out
xchg
leave
mov
divb
sbb
test
sub
adc
mov
pop
outsl
mov
call
clc
or
and
pusha
mov
popa
xchg
jnp
or
ljmp
xorb
xchg
sub
hlt
in
xchg
sbb
add
in
insl
ret
popf
dec
xchg
loop
add
xor
negb
inc
jbe
arpl
negb
lods
sbb
push
into
push
push
dec
push
jp
pop
mov
hlt
dec
cmpsb
jns
popf
pop
mov
addr16
xor
add
xchg
inc
dec
pop
pop
jnp
mov
fdivp
add
pop
shrl
ljmp
xor
fisubrl
push
cltd
rcrl
mov
adc
jg
xchg
loop
pop
cmc
imul
sub
xchg
sbb
cld
mov
or
pop
xor
dec
and
dec
fmull
pop
xchg
repz
lret
leave
imul
mov
inc
xchg
dec
add
pop
jecxz
xchg
mov
jb
add
js
shlb
and
add
xor
push
hlt
jge
or
dec
test
sub
jns
aam
pop
les
xor
adc
sub
xchg
mov
enter
clc
adc
gs
push
hlt
inc
push
xacquire
add
test
sub
popf
outsb
cwtl
adc
push
sub
rclb
xor
sub
add
adc
les
adc
push
add
fdivrp
lahf
stos
pop
add
mov
mov
add
or
arpl
lret
ret
fwait
jnp
xchg
mov
pusha
imul
xchg
std
jb
dec
dec
xchg
mov
push
ret
sarl
out
stc
push
adc
sub
lcall
or
rcrl
push
mov
lock
xchg
stos
imul
pop
cli
insb
sub
mov
dec
pushf
sbb
dec
or
dec
fwait
jae
lret
mov
ljmp
or
sub
xlat
dec
mov
and
push
jge
mov
jno
les
adcl
push
stos
push
mov
push
pop
dec
dec
pop
imull
sbb
and
and
xchg
xchg
movsb
sub
clc
lds
dec
push
cmp
dec
jbe
pop
push
dec
ja
cmp
push
imul
jb
mov
jbe
pop
les
and
aas
xlat
roll
sahf
lock
stos
sub
add
sbb
cmp
xchg
push
pop
arpl
push
xor
clc
arpl
adc
inc
cmp
js
mov
bound
rol
rcrl
scas
pop
inc
rcrl
lds
push
loope
lret
mov
mov
in
insl
loopne
movsl
push
mov
jge
sub
ret
call
sahf
incl
xor
loopne
push
xchg
das
jle
mov
cs
mov
fwait
out
shll
nop
js
jns
mov
push
mov
movsl
sub
mov
add
sti
inc
sahf
clc
and
or
pop
lcall
lret
inc
shrb
jmp
out
sarb
nop
jb
loopne
fildll
adc
pop
jmp
push
ret
push
adc
xchg
ja
and
and
testb
xor
out
fwait
jne
imul
push
inc
cld
pop
popa
jg
lret
xchg
push
in
dec
fimuls
jle
adc
push
lcall
hlt
stc
icebp
or
sbb
mov
sbb
mov
cli
lods
cwtl
push
dec
out
sbbl
mov
loope
data16
ja
ret
pop
fimuls
ja
rcrb
ljmp
cld
xchg
in
xchg
loop
push
rol
shrl
push
mov
ret
fildll
push
imul
jo
lret
push
out
loopne
push
loop
sub
jbe
inc
pop
andb
loopne
nop
aas
push
std
je
incb
lods
insb
and
push
mov
imul
movsb
xor
xor
dec
cwtl
loopne
outsl
jae
xchg
dec
sbb
lret
loop
in
aad
aaa
fstps
pushf
jp
sub
mov
inc
ja
sub
sub
or
ja
mov
inc
imul
dec
repz
sbb
adc
mov
loope
pop
in
cmc
mov
adc
ficoms
pop
push
icebp
push
dec
push
mov
je
addr16
or
faddl
loop
vhsubps
or
mov
adc
out
movsl
out
imul
dec
inc
pop
ret
aam
pop
cmp
push
movsl
into
cmp
addr16
sub
pop
rcll
xor
je
cmp
push
lcall
cmc
sahf
lea
hlt
outsb
pop
enter
pop
aaa
sub
lret
stc
sub
or
push
faddl
sti
cmpsb
enter
xchg
adc
xchg
sub
inc
pop
xor
sarl
loope
cmp
fnstcw
and
shll
lret
int
cmp
pop
insl
add
mov
push
cmpsb
das
mov
dec
push
stos
xchg
loopne
popa
mov
pop
cmp
fcoms
sub
popa
or
push
pushf
push
adc
add
mov
loop
je
mov
push
shll
xor
mov
call
pinsrw
filds
xor
mov
addr16
imul
test
push
das
cmc
mov
push
lret
xor
push
mov
out
stos
sbb
lea
pop
data16
mov
aas
cmpb
and
dec
movsb
ja
movb
gs
cmp
mov
out
les
push
std
testb
lea
mov
roll
int
pop
loopne
mov
shll
inc
imul
fcoms
jae
mov
jg
fdiv
cmp
sub
push
xchg
aad
cli
pop
sahf
iret
fstpl
popf
enter
andb
jmp
dec
adc
jg
scas
sbb
std
xor
adc
fisubrl
cmc
pop
inc
push
xchg
or
insl
mov
shl
outsb
xor
inc
push
pop
movsb
xchg
mov
loopne
enter
ja
xor
popa
cwtl
xlat
adc
cwtl
sahf
mov
jmp
cmp
pop
sub
cli
dec
mov
pop
icebp
adc
jle
or
imul
add
push
test
sarb
lock
xor
and
mov
adc
dec
clc
or
dec
or
jge
push
push
xlat
xor
add
das
lods
xchg
xor
and
xchg
xchg
mov
movl
sub
popf
ds
and
cmp
movsb
pop
dec
out
mov
xchg
outsb
out
mov
out
or
scas
or
cltd
popa
jp
mov
pop
stc
lock
leave
push
xchg
ret
sub
inc
jg
ficompl
mov
cmpsl
dec
test
pop
mov
dec
std
xchg
xor
pop
jl
aam
jns
inc
jge
mov
jnp
dec
and
data16
pop
jmp
cmpsb
pop
adc
xchg
dec
orb
aaa
sbb
lahf
jbe
jmp
icebp
int
gs
fidivrs
or
scas
decl
mov
pop
mov
xor
in
xchg
fwait
popa
aad
push
ret
xchg
sbb
insb
adc
ds
dec
push
in
pop
jl
mov
add
mov
adc
test
cli
cmpl
adc
loope,pt
imul
pop
add
call
mov
stc
push
pop
fwait
xchg
insl
pop
push
pop
pop
dec
aad
jg
inc
clc
inc
jo
cltd
les
xchg
scas
clc
jmp
xchg
mov
or
cltd
add
add
imul
push
int
hlt
pusha
mov
dec
icebp
popa
adc
sbbl
mov
roll
adc
jnp
int
xchg
cli
push
add
shll
jl
in
and
add
jnp
inc
mov
loope
fistps
out
pop
pop
push
addl
xchg
dec
sbb
jg
lods
push
into
repz
fdivrl
pusha
mov
int
dec
sub
sahf
xlat
shlb
popa
pop
adc
testl
stos
xor
jge
sub
jns
sbb
xor
push
jmp
and
scas
movsl
int3
pop
jns
sbb
sub
mov
mov
or
aad
jecxz
in
jge
imul
push
stc
sub
xor
push
xchg
mov
outsl
test
mov
mov
test
shrl
adc
cmp
mov
roll
roll
scas
leave
daa
cmpsb
mov
xorb
jbe
xchg
repnz
and
aas
dec
sbbb
dec
and
int
ficomps
aam
js
out
xchg
clc
stc
sahf
push
adcb
or
test
mov
and
mov
call
or
cwtl
popa
jl
gs
mov
push
jae
push
cmpb
mov
xchg
dec
pop
inc
aad
add
test
push
sbb
mov
inc
je,pn
mov
fwait
dec
inc
jae
rorl
loop,pt
je
add
ja
je
adc
into
rcrl
sbb
pop
pop
push
xchg
icebp
sub
aaa
fisubl
fldenv
mov
xchg
jb
xchg
mov
and
jb
dec
loope
jmp
cmp
mov
cld
jp
fadd
pop
stos
mov
ret
xchg
cmp
adc
shrl
push
je
fs
jl
mov
idivl
mov
xor
dec
in
push
je
push
sub
push
xlat
iret
mov
scas
dec
dec
stos
mov
fisubrl
clc
test
repnz
xor
mov
sbb
test
lea
mov
lods
pop
jae
xchg
mov
push
popa
pop
jge
mov
add
push
stos
lds
imul
es
sub
mov
xchg
sub
test
ljmp
test
jecxz
das
mov
ds
pop
mov
sbb
inc
imul
push
out
fldenv
jg
mov
xchg
inc
imul
or
insl
adc
mov
insb
test
popf
test
in
fwait
push
mov
dec
fucomip
mov
cwtl
adc
add
xor
push
shl
mov
jg
mov
xor
inc
fisubrs
seta
xor
pop
mov
mov
fwait
add
js
mov
int
push
movsl
add
cltd
adc
ficoms
mov
xor
push
subl
cmc
imul
or
xchg
sahf
jb
push
adc
jg
call
inc
popf
sbb
push
fcoms
sbb
aad
jns
cmpsb
and
add
shrb
test
hlt
cld
mov
dec
cmp
add
xchg
shl
lcall
test
lods
int3
jg
lahf
dec
mov
into
jl
in
xor
movsb
cmp
clc
push
jbe
lahf
pusha
mov
push
jnp
jb
addr16
repz
scas
pop
mov
mov
lahf
sub
pop
and
xchg
or
xchg
mov
push
jg
pushf
pushf
or
cltd
fiadds
lock
dec
mov
lcall
push
insl
jns
mov
sub
ret
rolb
scas
push
xchg
dec
fdivs
dec
sbb
insl
dec
pop
js
scas
xlat
enter
movsl
cmp
vphaddubd
inc
testb
leave
sub
call
sub
lret
movsb
mov
adc
repnz
daa
xchg
js
shlb
cs
sbb
repnz
or
lahf
aaa
leave
adc
push
push
sub
lea
lods
xchg
or
dec
out
aaa
inc
add
xchg
mov
out
fiaddl
pushf
xchg
jg
smsw
or
mov
dec
call
call
cwtl
stos
inc
mov
outsl
adc
push
dec
inc
pop
xchg
xor
mov
pop
xchg
lock
sub
hlt
stos
add
xor
dec
ss
inc
into
out
adc
inc
dec
sub
sarl
cmp
jo
jecxz
sub
dec
pop
loope
mov
jmp
mov
sahf
stos
and
xchg
stc
out
rorb
mov
or
pop
in
cmp
das
mov
or
mov
adc
addr16
cld
add
lds
and
gs
movsb
push
pop
mov
je
roll
loope
cld
imul
inc
int
rolb
clc
in
push
js
push
mov
les
mov
loop
jle
inc
in
gs
sbb
cs
std
idivb
mov
pushaw
fiadds
push
adc
mov
stc
les
repz
aaa
aam
adc
mov
inc
add
push
inc
popf
xchg
add
cmp
pop
mov
pushf
fdivl
add
fwait
scas
mov
ret
mov
stc
dec
in
loope
dec
imul
imul
xor
push
icebp
pop
xchg
ja
shrb
test
icebp
mov
mov
cmpsl
xchg
xor
mov
sub
push
lahf
push
mov
push
into
xchg
xchg
sbbl
adc
lock
dec
jne
mov
dec
ds
aam
sub
pop
outsl
pop
sti
or
lcall
pop
cmp
lods
mov
repz
add
test
mov
int3
leave
pop
sub
inc
adc
ja
adcl
xchg
shr
fwait
mov
fcomip
iret
imul
mov
cmc
pop
outsb
into
cmpl
negb
push
xlat
push
inc
pop
out
xlat
bound
jo
and
cmpsb
fnstcw
in
pop
repnz
test
mov
cmpl
inc
fwait
sub
fdivp
daa
divb
loopne
push
in
add
fnstsw
pop
arpl
push
xlat
js
in
xchg
push
or
outsb
jp
adcb
lea
inc
sub
data16
outsl
xchg
jo
or
dec
xchg
cli
jl
and
aas
cmp
inc
inc
pushf
mov
inc
es
cmc
aaa
mov
dec
ror
daa
adc
les
xchg
jl
test
jae
repz
pop
fidivl
in
scas
nop
mov
addb
sbb
push
es
scas
sbb
sbb
and
lret
xchg
dec
push
dec
cmp
mov
dec
lea
jns
push
fisttpl
mov
test
adc
outsb
cmpsb
mov
xor
mov
test
cmpb
cmp
inc
scas
jle
stc
push
adc
inc
cmpsl
push
lock
bound
and
or
xor
and
popf
mov
sbb
icebp
jl
sub
repz
xchg
pop
push
inc
push
sbb
insb
add
mov
es
mov
or
xchg
outsl
movsb
mov
jg
fists
loopne
adc
push
jnp
lret
lds
fistpll
shll
movsb
enter
adc
scas
xor
cld
lods
push
iret
fwait
jle
add
aaa
xchg
clc
in
mov
flds
mov
mov
mov
imul
push
dec
fdivrl
outsl
push
dec
push
dec
dec
or
popa
loope
shlb
stos
out
jl
sbb
mov
jns
outsl
push
jno
push
xchg
imul
movsb
inc
sbb
mov
ret
adc
sub
cwtl
mov
ljmp
pop
cmpsl
lcall
sbb
push
dec
js
dec
xor
int3
mov
dec
insl
js
cmpsb
testb
ljmp
les
ljmp
fistps
or
push
subl
call
xchg
mov
xchg
popf
movb
loop
stc
rol
rcrb
mov
loope
xchg
pop
push
jb
sarb
notb
int3
dec
sbb
orl
inc
insb
jne
sub
sub
fcmove
in
or
int
mov
push
iret
push
daa
adc
je
mov
rcrl
fucomip
pop
sbb
dec
ljmp
pop
test
and
ds
inc
push
cmp
and
mov
sub
lods
xor
sub
jg
inc
jnp
fsubrp
stos
aas
mov
imul
jnp
bound
push
fsub
push
bound
adc
cmpb
dec
rorb
jo
push
xor
insb
in
cmp
add
dec
mov
cwtl
je
sub
cmpl
dec
mov
push
mov
cwtl
cmpl
lcall
push
ss
neg
xchg
pusha
lods
add
in
imul
adc
mov
lea
andb
fstps
inc
xor
out
lahf
push
xor
stos
dec
mov
cltd
pop
imul
subb
mov
stc
stos
test
insb
sbb
shlb
movsb
aaa
fdivrs
fmuls
push
jmp
sub
mov
leave
rclb
scas
add
xchg
pop
push
jbe
jmp
arpl
mov
sbb
push
pop
popf
or
js
ss
lret
jle
xor
add
add
jae
out
mov
inc
xchg
or
lret
dec
jne
loopne
hlt
jp
mov
test
adc
cmp
dec
or
scas
mov
mov
inc
lea
cmp
repz
sbb
jne
js
xchg
ret
orb
pusha
inc
jo
dec
pop
jge
stos
and
es
jo
mov
insl
xor
push
mov
xor
scas
jo
cli
sub
xor
fdivs
test
sub
enter
fbstp
xchg
push
jnp
and
push
jp
pushf
fstpl
addr16
add
nop
inc
jo
cs
push
jnp
jb
iret
dec
jns
push
pop
lahf
mov
pop
or
jb
test
call
jmp
sbb
mov
in
xor
pop
pop
lret
out
ja
cmp
sbb
in
lods
mov
fildll
sbb
fiaddl
popa
mov
mov
adc
dec
stc
pushf
sbb
mov
popa
pop
lods
out
xchg
cmp
push
dec
push
mov
mov
or
fisubrs
push
mov
inc
push
inc
inc
add
or
sbb
mov
incl
loope
adc
cmpsl
push
flds
cmpsl
mov
dec
mov
cmc
pop
nop
xor
cli
rorl
out
add
cmp
and
adc
mov
cli
out
jge
sub
and
ret
push
bound
pop
repnz
pop
xchg
dec
frstor
and
cli
out
mov
xchg
dec
sahf
mov
mov
jg
outsl
rolb
andl
add
pop
cmp
ss
jns
mov
push
pop
sub
mov
pop
pop
mov
push
xor
into
or
pop
lahf
jmp
clc
bound
into
cmpsb
or
lcall
jle
jmp
int
and
test
ss
cmp
pop
test
adc
repnz
and
sbb
mov
out
or
push
mov
imul
fxch
les
pusha
dec
test
mov
dec
dec
pusha
and
sub
dec
jecxz
cmove
push
mov
out
pop
in
or
cmp
inc
sub
or
mov
arpl
test
cmc
repz
jle
pop
int3
lods
mov
and
sub
xor
addr16
ds
mov
xchg
popf
inc
xor
inc
jae
lret
dec
sbb
hlt
adc
into
repnz
call
repnz
ret
add
mov
addb
pop
push
xchg
test
pop
lret
repz
ret
xor
mov
ret
add
cli
repz
dec
add
ror
mov
stos
sbb
ds
stos
dec
push
inc
out
punpcklbw
aam
lahf
shlb
xchg
lods
xchg
mov
cmp
xor
or
mov
inc
rorb
out
push
decb
mov
add
popf
lea
in
pop
fmuls
ficomps
jle
insl
je
xor
inc
rorl
mov
mov
fiadds
int
mov
and
xchg
push
cltd
cmp
ret
and
xor
dec
imul
xchg
adc
dec
inc
xor
pop
dec
iret
inc
dec
jb
arpl
push
pop
pop
scas
mov
mov
fiaddl
xchg
fwait
and
push
loopne
or
iret
or
mov
cmp
xchg
repnz
test
inc
orl
sbb
jns
popf
inc
and
test
adc
in
je
mov
int3
rcll
stc
push
push
fisttpl
mov
add
xor
xchg
sbb
imul
sub
push
fcompl
insb
out
adc
les
js
cltd
sbb
mov
jbe
xor
push
scas
add
push
sub
cmp
jnp
test
test
js
bound
lds
ja
or
hlt
dec
xor
mov
cmp
sarl
mov
push
xor
fs
test
adc
popf
je
ret
pop
xchg
sub
cmpb
push
and
in
jnp
adc
lahf
mov
gs
arpl
jbe
iret
jae
rorl
je
xchg
cmp
in
and
mov
mov
cltd
mov
push
jmp
or
lahf
test
enter
mov
push
and
js
push
or
outsl
or
enter
cmpsb
dec
mov
hlt
push
sbb
xor
add
fimuls
mov
mov
sub
mov
mov
cltd
xor
sbb
sub
and
push
out
sbb
xchg
adc
jae
cld
mov
push
ljmp
jp
je
invd
data16
ss
popa
xorl
in
outsb
xchg
push
int
rcrl
insb
sub
rorb
pop
mov
iret
and
jb
jmp
cmp
pop
data16
mov
mov
ljmp
popa
mov
nop
mov
addr16
sbb
mov
cli
sar
andb
add
pop
cmp
aad
dec
jp
mov
mov
sbb
sti
push
mov
cmp
adc
xchg
pop
movsb
hlt
out
fsubr
xor
or
pop
fdivr
mov
xor
xchg
inc
push
pop
fists
fcmovu
popa
adc
in
and
inc
xchg
ja
sahf
jbe
xchg
mov
jle
dec
dec
daa
loop
or
pop
es
movsb
daa
loop
rol
gs
shll
lds
ficomps
push
lea
loopne
push
mov
push
sar
and
and
ja
cli
iret
imul
mov
sub
pop
inc
mov
sub
jb
stc
mov
push
push
adc
pop
and
aaa
in
int
jne
inc
insb
hlt
xor
and
xchg
leave
sahf
adc
dec
cmp
jg
pushf
jle
fidivrl
jae
mov
xchg
pop
jno
push
leave
sbb
sbb
push
iret
mov
pusha
mov
mov
outsb
je
lret
nop
sbb
ja
sbb
imul
sti
xchg
inc
adcl
cmp
xchg
popl
ret
insl
cltd
movsl
rorl
lcall
push
cmpsl
outsb
fcomip
mov
adc
jp
mov
jge
out
jp
mov
xorl
mov
shl
sbb
pop
sar
cmp
mov
hlt
sbb
mov
loope
stos
flds
pop
cwtl
push
cmp
xchg
and
imul
xor
push
dec
in
pop
mov
add
pop
das
pop
or
in
shl
and
imul
in
inc
jae
or
inc
sbb
out
es
push
xor
mov
pop
xchg
add
inc
xor
mov
mov
icebp
cmc
push
or
sbb
push
inc
or
cmp
mov
xor
data16
gs
mov
sbb
add
lock
jl
sbb
fwait
ds
fwait
push
xor
aas
add
adc
pushf
push
movsb
add
in
out
movsb
xchg
in
lods
mov
aas
xchg
lods
xor
adcb
xchg
sub
pop
pop
ljmp
mov
loope
aam
sub
sbb
sbb
mov
add
leave
imul
inc
std
pusha
dec
in
xor
jge
jnp
xor
jle
or
xchg
test
cmpsb
jmp
push
shr
mov
arpl
jb
and
cmp
dec
test
xchg
xchg
inc
mov
inc
pushf
dec
fnstcw
daa
cmpsb
ja
movl
mov
mov
mov
cmp
iret
lods
imul
pop
in
pop
sbb
push
pop
imul
std
xor
fidivl
jno
add
int
jnp
or
mov
inc
imul
pop
dec
xchg
pop
rep
mov
js
ds
sub
adc
call
or
ss
add
pop
jl
test
pop
and
cmc
cmp
cmc
mov
cmpb
outsb
xor
rolb
int
clc
sbb
push
repz
mov
sub
dec
sub
pop
cmp
lea
adcl
pushf
inc
out
or
adc
test
call
mov
push
aam
push
jne
pusha
push
xor
repz
sub
loope
sub
addl
in
pop
push
jns
aaa
mov
es
call
xchg
xchg
outsb
mov
inc
sbb
stos
sbb
fadds
mulb
bound
into
ds
cmp
data16
repnz
jmp
mov
mov
mov
add
dec
sbb
testb
mov
add
inc
outsl
jne
testb
sahf
jne
jle,pn
dec
enter
dec
or
mov
xor
sti
sti
push
jle
mov
test
sbb
movsl
orb
test
cmc
in
mov
or
mov
or
test
insb
popa
sbb
pusha
nop
es
incl
rcll
pop
ds
dec
xchg
sub
loopne
jbe
sarl
sbb
fldt
push
jge
pop
xchg
dec
roll
call
xor
scas
js
cmova
adc
xor
cmp
and
pushl
sahf
in
pop
and
call
js
push
or
mov
inc
ds
mull
adc
and
int3
lret
in
test
mov
push
fimuls
rcl
lcall
mov
sub
sbbb
aas
imul
adc
pop
add
jo
lea
inc
sbb
push
xchg
jne
mov
pop
fwait
stos
mov
xchg
bound
jg
push
pushf
nop
jae
inc
insl
loop
sbb
les
dec
bound
adc
xchg
into
xor
aad
pusha
sub
ss
jae
adc
push
icebp
enter
mov
mov
mov
xchg
stc
jno
push
mov
adc
lods
mov
mov
jg
in
sub
inc
dec
lods
outsb
sbbb
repnz
cwtl
addb
jmp
mov
repz
rorl
xchg
dec
or
xor
lahf
and
push
inc
in
dec
shlb
test
xchg
pcmpgtb
fstpl
cmp
xchg
lods
sub
cmp
mov
inc
mov
lock
scas
sti
push
mov
inc
add
insl
adc
mov
pop
mov
mov
jl
pop
adc
push
cmpsl
push
enter
in
popa
xchg
cmp
rclb
dec
fwait
lret
push
xor
mov
js
mov
adc
fs
leave
test
les
dec
scas
pop
insl
lds
xlat
js
adc
jno,pt
lods
xor
jmp
loope
fsub
std
jmp
cld
cmpsb
jnp
mov
add
add
and
or
inc
push
popf
js
xor
jb
sar
gs
xlat
repz
in
js
jae
mov
fadds
jg
aad
jg
dec
jbe
addr16
jb
xchg
int
sub
lret
inc
add
and
test
cmp
sub
xchg
mov
pusha
cmpsl
into
insl
or
loop
jb
mov
in
in
and
lret
inc
mov
dec
ss
dec
clc
lea
insb
xchg
xchg
rclb
mov
cwtl
mov
push
mov
jmp
ret
rorb
or
push
jo
cmp
daa
xor
add
dec
xor
jbe
fisttps
nop
outsb
sahf
adc
or
mov
fwait
pop
enter
cmc
leave
mov
outsb
jno
pop
or
jne
mov
repnz
repnz
enter
test
mov
icebp
cmp
loopne
push
xchg
in
int
ljmp
xor
xor
sarb
jbe
loopne
repnz
mov
in
out
or
mov
mov
sub
stc
xor
mov
lods
mov
out
inc
inc
xor
jnp
sub
les
sbb
je
shr
or
xchg
jae
and
cmp
sub
jae
mov
push
cmp
cwtl
push
popa
enter
and
xlat
frstor
mov
sub
stc
add
dec
push
jmp
inc
test
cmp
lea
mov
xor
push
pushf
push
mov
inc
or
pop
in
fsubs
aam
adc
jbe
enter
xchg
hlt
js
shrb
xor
push
or
jns
xor
or
insb
cld
sbb
inc
dec
insl
int3
stos
js
push
ds
imul
iret
xchg
negb
lahf
xchg
mov
and
int
scas
dec
loope
sub
cli
fldl
xorl
hlt
gs
mov
stc
scas
fsubrs
push
or
sub
hlt
mov
repz
add
cmp
fdiv
cmpsl
xchg
xor
sub
ds
daa
sahf
dec
jg
je
sub
fwait
test
sahf
sarb
add
arpl
cmp
mov
lods
push
sub
jle
push
insb
mov
call
mov
test
int3
lods
push
clc
fnstcw
pop
mov
sub
cmc
sarl
ja
inc
mov
push
push
aam
clc
and
mov
imul
mov
enter
add
fadds
dec
pusha
adc
mov
scas
push
xchg
jae
mov
nop
insb
push
xchg
mov
popa
nop
xor
push
rcll
jecxz
stc
popa
pop
and
cmp
bswap
mov
ss
outsb
dec
je
rsm
xor
ret
mov
aaa
mov
adc
sub
cltd
sbb
inc
imul
mov
les
xchg
repnz
aaa
gs
xchg
adc
fwait
adc
lea
jae
cmp
jle
in
stc
adcb
or
clc
into
scas
insb
push
ja
and
add
or
insb
and
mov
dec
pop
lret
adc
enter
mov
jae
sbb
in
testb
mov
ss
mull
lock
xchg
in
add
into
inc
test
pop
jb
int3
ja
mov
lods
pushf
adc
or
mov
add
mov
aam
pushf
clc
or
lcall
je
adc
mov
jo
das
and
dec
push
into
ljmp
dec
enter
les
lcall
cmp
xchg
sub
sub
or
movsl
loope
rorl
dec
inc
adc
mov
push
shlb
mov
or
rclb
cmp
lret
hlt
mov
jbe
add
cmpsb
fistpll
inc
lcall
xchg
arpl
dec
xor
stos
adc
clc
xchg
js
popa
ret
mov
mov
fs
lock
xchg
lods
out
fwait
dec
add
insb
push
les
cmp
dec
outsb
xchg
scas
jle
inc
or
lods
adc
rcrb
push
lahf
xor
insb
mov
xor
mov
sahf
int3
ret
xor
in
ds
adc
ret
jl
adc
imul
repnz
mov
or
mov
rorl
mov
lods
in
adc
cs
sbb
fs
lods
push
push
ss
xchg
cmp
dec
in
push
dec
or
dec
pop
push
and
sub
xchg
push
rorb
xchg
aaa
pusha
pop
mov
jp
cmc
push
popa
fsts
inc
les
jbe
jecxz
hlt
pop
add
mov
in
lods
sub
ss
inc
in
aad
push
xchg
lret
cwtl
aam
xor
lock
push
orl
popa
add
sbb
pushw
shlb
popf
mov
fmull
mov
jne
fs
rcrb
mov
mov
in
sbb
xchg
jl
xchg
jae
mov
mov
pop
pop
push
pop
shll
je
nop
jle
dec
push
fistps
outsl
jg
dec
sub
push
push
mov
mov
pop
out
inc
test
scas
ret
push
nop
jb
push
cld
mov
lcall
lcall
push
test
push
fcompp
je
loop
fs
pop
push
mov
data16
xchg
cmc
dec
xchg
movsl
fbld
push
lahf
into
ss
xor
or
jae
sub
dec
data16
jnp
test
and
push
fiadds
cmpsb
into
push
rcrb
aas
roll
test
int3
mov
cltd
mov
cld
popf
push
daa
fs
pop
xlat
jne
loop
jecxz
fcmovnbe
dec
push
lock
sbbl
in
std
rorb
push
mov
pop
shrb
in
or
adc
mul
fmulp
fdivs
inc
xor
cmp
inc
pop
jns
sbb
jge
mov
lods
ja
lock
mov
aam
lret
loopne,pn
push
in
adc
pop
push
or
lcall
in
test
lods
cwtl
pop
insl
orl
es
add
cs
pop
adc
fidivs
sbb
out
sub
push
mov
xchg
mov
push
push
mov
jge
dec
lods
adc
mov
adc
in
jbe
data16
xchg
jne
into
cld
jb
fdivrs
inc
testb
je
call
jbe
or
aaa
fiaddl
inc
push
cmpsb
lea
mov
jmp
mov
out
xor
cmc
xchg
push
jle
xchg
nop
jbe
inc
xchg
leave
lea
movmskps
pop
mov
mov
lds
repnz
mov
roll
mov
je
mov
fldcw
jne
xchg
sub
cwtl
out
cmp
scas
pusha
fisubrl
js
pushf
inc
pop
call
xchg
mov
stc
xlat
notl
add
jle
push
xchg
or
pop
inc
scas
mov
sbb
xchg
xchg
adc
mov
pop
jbe
addr16
cwtl
out
mov
xchg
int
fsts
arpl
shll
lcall
pop
cmp
push
sarl
movsl
sahf
cmp
dec
xchg
sbb
and
xchg
das
sub
jb
mov
mov
sub
fadds
scas
or
xchg
sarl
pcmpeqd
out
shl
fildll
fisubrs
xor
inc
into
pop
mov
gs
inc
fs
pushf
jo
xchg
xor
cmp
or
or
mov
sbb
mov
or
sbb
rcrb
stc
je
cmc
shrb
or
push
stos
xchg
sbb
loopne
imull
aad
sub
sbb
jecxz
xchg
shrb
nop
push
xchg
jo
pmulhw
test
lret
pop
xor
ljmp
loopne
pop
shl
insb
xor
imul
xchg
jno
inc
pushf
pop
sahf
mov
imul
push
mov
xchg
xlat
das
sbb
dec
fs
fsubl
ds
or
movsl
adc
jbe
sub
ret
cmp
movsb
fwait
pop
mov
pop
addr16
outsb
das
pushf
fdivrs
psadbw
mov
xor
or
scas
add
sbb
xor
clc
pop
jb
sub
pop
rcrb
inc
push
test
addr16
loope
push
mov
mov
pop
sbb
aam
inc
push
das
mov
filds
movsb
mov
lock
pop
vpsubd
push
mov
mov
xchg
int
cmp
xchg
pop
inc
rorl
fmull
testb
dec
xchg
mov
mov
sbb
pop
in
sub
and
xchg
das
pop
rclb
mov
dec
xchg
stos
push
rcrl
shlb
das
pushf
xor
movsl
inc
inc
cmp
cmp
jne
mov
cli
xlat
jbe
push
sub
xchg
mov
pop
in
inc
repnz
cmpsb
loopne
add
and
shrl
aad
mov
out
sub
faddl
xchg
je
imul
fsubl
stc
jnp
ljmp
sub
jns
adc
int3
cmp
sahf
sbb
mov
push
hlt
adc
in
scas
mov
sahf
cmpsb
jmp
cmc
jge
shl
mov
je
cmp
sahf
jmp
pop
dec
mov
imul
xchg
push
adc
roll
or
dec
int3
ja
jbe
mov
xchg
js
xor
imul
xchg
fwait
outsl
jns
movb
sub
push
mov
pushf
lea
aaa
xchg
in
shlb
push
push
mov
aaa
lock
xchg
mov
add
lret
dec
push
test
xlat
das
and
leave
test
inc
insb
sbb
xor
mov
lret
popa
lock
bound
cmp
sub
into
imul
inc
jbe
or
ficoms
ret
fsubr
or
lahf
sub
mov
cmp
jno
xor
xor
and
cmp
ss
popf
adc
test
xor
dec
mov
into
shrl
cmp
push
inc
bound
sahf
shr
jg
testb
xchg
dec
jae
fucomip
dec
xchg
inc
jo
rcrl
pop
ljmp
pop
leave
pop
jg
and
bound
inc
sar
popf
dec
cmp
sub
int
cmc
pop
sbb
pop
push
adc
cmpsl
push
stos
outsb
or
fnstsw
push
pop
push
popa
and
mov
orl
xchg
xor
imul
pop
push
prefetch
push
mov
mov
popa
push
mov
sub
and
inc
dec
xchg
pop
dec
stos
nop
push
mov
bnd
insb
inc
jo
adc
stc
jno
out
cli
lea
enter
jmp
push
sarl
xor
out
push
loope
outsb
inc
sbb
xchg
daa
addr16
jne
insl
lret
ljmp
lret
cmp
mov
iret
cli
push
adc
inc
js
mov
lods
stos
pop
dec
cmpsb
hlt
clc
in
iret
adc
out
jbe
jg
subl
xchg
pop
mov
inc
fcoms
fsubrp
lds
add
pop
gs
sub
movsb
push
pop
aad
xchg
jbe
dec
into
push
xchg
std
rcrl
jb
push
sbb
imul
popf
cmp
sbb
clc
ss
int
cwtl
inc
test
scas
loope
dec
pop
scas
sarl
cld
push
cmp
pop
fs
mov
fadd
pop
in
fisubrl
test
adc
arpl
push
aaa
and
xchg
sti
add
clc
hlt
in
into
jp
adc
shl
cmpsb
iret
into
adc
sti
shrl
dec
inc
sub
pop
inc
dec
gs
xchg
xor
jae
or
push
into
test
push
push
push
sahf
cmp
popa
and
mov
aam
enter
jb
stos
or
adc
shlb
cwtl
in
sub
insl
xlat
pop
insl
scas
mov
jb
es
mov
shlb
lret
mov
stos
jbe
push
xchg
push
fimull
das
fsubrs
mov
xor
rep
repz
or
cmp
out
push
pop
sarb
push
or
jb
mov
push
call
aam
and
cwtl
mov
mov
mov
jno
into
test
pop
dec
push
push
repnz
adc
fadds
xchg
jl
mov
popf
pop
mov
mov
scas
sub
pop
iret
jge
xor
and
add
jl
imul
scas
push
push
imul
gs
pop
xchg
mov
shlb
lcall
push
movsb
jl
pminub
in
lret
pop
pop
insl
jae
dec
or
or
cmc
jge
pop
jbe
loopne
dec
xor
and
imulb
icebp
je
cmc
leave
cmc
es
cmp
test
xor
jecxz
inc
pop
adc
xchg
xchg
xor
push
aad
pop
pop
rcrl
sti
popf
je
out
xor
pop
fistl
mov
inc
mov
mov
in
push
addr16
out
ss
outsl
fstps
loope
imul
push
jge
or
xor
cwtl
xlat
das
test
fcoml
add
call
aas
rolb
adc
pop
fcmovb
jge
nop
xchg
inc
mov
add
xlat
testb
cli
insl
push
jmp
pop
adc
movsb
mov
jns
jmp
lock
bound
jbe
mov
inc
xor
or
popl
mull
sbb
dec
fwait
shlb
mov
mov
xor
loope
push
repnz
mov
loopne
jecxz
mov
inc
jnp
add
dec
push
std
push
inc
mov
pusha
dec
jmp
lock
bound
cmp
pop
add
ja
nop
or
mov
imul
into
ja
pusha
dec
adcl
lds
jge
fisubs
pop
pop
iret
imul
xchg
pop
mov
vaddsubpd
pop
call
jae
xchg
and
jo
lea
dec
mov
aaa
mov
cmp
inc
enter
rcr
hlt
ret
pop
pop
pop
xchg
push
jmp
stos
das
loop
daa
pop
jp
xchg
testl
insb
adc
or
mov
aam
and
das
aaa
ret
push
in
lock
mov
out
jg
mov
imul
push
or
ds
fisubrs
sarb
cli
xchg
sahf
int3
dec
push
out
leave
push
scas
sub
sti
rolb
jo
dec
add
test
xchg
lds
add
pop
xor
sub
cmp
rcrb
sbb
mov
aas
mov
icebp
sarl
ret
call
pop
imul
cmpsb
test
adc
js
movsb
rcrb
pop
idivl
jmp
and
push
adc
ffree
sbb
scas
cmp
movswl
sbb
dec
push
jge
into
ror
loop
sbb
imul
lods
lcall
call
and
cli
pop
int
les
mov
push
sti
inc
rolb
in
movsl
and
adc
nop
sub
xchg
scas
aam
adc
jp
ja
adc
cli
add
push
inc
jb
pop
jns
dec
mov
popf
popl
nop
and
jp
xor
pop
sbb
jl
pop
inc
push
mov
mov
xchg
cmp
push
mov
mov
inc
jb
js,pt
inc
mov
sbb
xchg
pop
and
insl
sub
fistl
aaa
fdivl
imul
jnp
pop
push
loope
repnz
jb
in
cmpl
mov
out
cmp
das
and
jno
xor
mov
ffreep
push
push
adc
push
clc
sbb
add
lret
cmc
cmp
xchg
aaa
sbb
inc
scas
push
jge
gs
jnp
xor
insl
mov
fwait
mov
ret
and
addb
insb
push
and
repnz
nop
dec
imul
xchg
xor
xchg
ljmp
add
loopne
push
insb
sahf
jno
mov
imul
lret
jnp
pop
dec
test
push
movsb
jg
dec
ja
out
fnstsw
std
cmp
push
mov
and
and
mov
into
cltd
pop
icebp
out
inc
xor
xchg
mov
lock
pop
loopne
lcall
fwait
je
fdivr
push
dec
stc
lock
das
pop
cmp
xor
mov
test
popa
adc
cmp
out
sub
cmp
mov
pushf
shl
dec
jecxz
fcomi
imul
gs
xor
mov
pop
out
lcall
icebp
ss
lock
rclb
xor
dec
jg
lea
dec
xchg
xor
fcmovnu
mov
xchg
xor
insb
fisubrs
test
cmp
ds
mov
scas
dec
test
xchg
sbb
jl
mov
adc
add
shlb
rorb
jmp
push
push
loopne
jp
jle
dec
pop
cmc
sahf
dec
mov
addl
sbb
gs
imul
sbb
xchg
mov
push
dec
sub
jo
or
pop
pop
aaa
push
popl
pop
icebp
dec
leave
xor
push
pop
push
sub
push
dec
pop
lret
test
xchg
mov
inc
xlat
mov
sub
imul
rcrl
sub
adc
out
fwait
les
add
lret
adc
iret
repz
les
mov
pop
xchg
std
cmp
sbb
jo
adc
shl
inc
test
js
cmp
inc
test
mov
nop
add
sub
mov
pop
in
inc
jb
sbb
adc
xchg
push
xlat
xor
mov
aad
aad
arpl
push
xchg
dec
cmp
or
mov
adc
shrl
mov
arpl
imul
mov
jb
outsl
fcoms
pavgw
cmpsl
iret
filds
sub
hlt
xchg
fcompl
push
cmp
or
lods
cmp
stos
or
rorl
push
jmp
mov
cmpsb
in
adc
mov
cmp
mov
out
outsl
push
sub
mov
xchg
pop
repnz
call
rcl
sub
and
add
loopne
pop
adc
loopne
outsl
push
rclb
cmc
movsb
loope
jl
rcll
pop
faddl
xchg
xchg
repz
ret
ja
in
push
popa
call
bound
push
and
sarl
mov
out
nop
stos
test
pop
inc
cmp
pop
popf
pop
pop
push
and
and
mov
aam
dec
jle
rclb
and
sbb
gs
cltd
call
cmc
fdivrl
pop
lds
sub
cld
mov
or
in
pop
cmpsl
xor
int3
sbb
xchg
jge
push
ljmp
rolb
xchg
cmp
sbb
lret
popa
push
pop
mov
orb
jp
or
xchg
in
mov
sbb
adc
push
fisttps
xchg
lea
mov
xchg
xorb
inc
bound
call
lea
aaa
pop
jp
fcomip
mov
rol
mov
mov
mov
ds
and
push
repz
ds
outsb
and
fdivs
lcall
fs
icebp
sbb
pop
icebp
out
negb
add
pop
jp
loope
les
mov
mov
mov
mov
inc
je
iret
xchg
jge
shlb
mov
scas
movsb
std
aaa
and
inc
xchg
sbbb
push
in
mov
insl
sub
inc
inc
adc
fsub
cli
imul
dec
fists
cld
js
or
nop
cmpsb
scas
rcr
jmp
add
xor
jns
icebp
fs
mov
cmpsl
addr16
push
aaa
add
cmpsl
fldl2e
int
dec
lds
gs
lock
pop
iret
or
xchg
xchg
iret
jbe
cld
in
cmp
inc
pop
or
mov
dec
mov
xchg
push
out
outsb
std
jle
enter
pop
fsubs
mov
push
add
mov
shll
aad
es
aas
inc
ljmp
scas
pop
jo
push
inc
add
arpl
dec
push
in
push
jecxz
inc
and
cmc
scas
xchg
mov
xchg
pop
enter
aaa
cmpsb
jp
xchg
in
ja
or
data16
push
sbb
dec
lret
repz
sbb
jns
loopne
jmp
dec
jne
mov
and
xor
pop
insb
dec
ja
dec
jnp
xchg
ss
aad
or
push
dec
hlt
sarb
mov
mov
in
repz
pop
push
fisttpll
aas
mov
push
lcall
dec
cmp
lods
push
mov
pusha
int3
enter
dec
jns
jbe
sbb
repz
fs
movsl
insb
clc
or
pop
arpl
fs
jnp
enter
push
xor
sti
and
cs
iret
gs
clc
sbb
sbb
xchg
push
leave
dec
fisttpll
and
sub
aaa
push
xchg
jbe
push
push
imul
lret
and
cmp
scas
jmp
or
loopne
dec
pop
notb
sarl
insb
js
dec
into
cltd
sub
mov
imul
fdivrl
mov
rolb
sarb
push
movsb
push
mov
push
sub
and
idivl
stos
test
ljmp
int
mov
or
mov
test
dec
dec
xchg
lock
jo
das
imul
xor
and
adc
mov
lods
adc
aam
pusha
outsl
cmp
popa
add
aaa
inc
movb
mov
sub
xchg
rol
leave
add
scas
ds
in
dec
loopne
ret
rorl
add
xor
movsl
decb
rcll
xchg
loopne
xor
sub
insb
popa
test
dec
sbb
add
mov
mov
aad
shlb
hlt
ja
pop
push
sbb
loop
and
aas
mov
cmc
pop
xchg
fwait
test
cltd
outsb
jns
stos
lods
xchg
nop
sub
test
dec
out
jbe
sbb
adc
mov
sub
cmc
add
or
xor
adc
ljmp
stc
adcb
out
ljmp
inc
pop
add
dec
test
mov
hlt
arpl
xchg
xor
xchg
xchg
into
inc
stc
fdivrs
cmc
insl
repnz
lcall
inc
out
jb
mov
ss
jecxz
push
xor
fdivl
or
jns
imulb
hlt
idivb
mull
mov
mov
icebp
pop
push
aam
imul
push
leave
loop
mov
mov
cmp
imul
fnstcw
in
jb
mov
sub
push
mov
xorl
push
adc
test
mov
mov
out
add
or
popf
xor
sub
or
nop
cmp
fcmovbe
repnz
out
and
stc
iret
mov
pop
mov
ret
shl
pop
bswap
dec
xchg
push
nop
cwtl
cs
push
adc
sub
jns,pn
outsl
add
add
js
aas
aam
sarl
push
mov
outsb
pop
push
lcall
inc
ja
shrb
jecxz
sbb
je
jp
insl
icebp
out
lahf
pusha
push
pop
mov
push
inc
inc
adc
aad
or
test
mov
lods
pop
fs
jo
in
mov
xor
lds
adc
pop
mov
push
bound
outsb
mov
push
dec
test
xchg
ljmp
push
add
push
ftst
rclb
mov
imul
insl
int
mov
pop
push
outsb
or
mov
movsl
nop
push
data16
rclb
add
outsb
mov
sti
mov
adc
aaa
das
sbb
in
adc
notl
adc
ja
insb
add
mov
push
xchg
mov
pop
xor
dec
jbe
adc
push
lods
add
mov
sbb
push
sbb
mov
xchg
pop
imul
dec
sbb
ljmp
jp
testl
test
aam
push
ds
aam
inc
pop
pop
pop
popf
imul
push
cmp
andl
into
xchg
push
ja
mov
fcoms
cltd
cmc
andl
enter
xchg
ret
call
out
lret
scas
lahf
aaa
adc
orl
jge
xchg
mov
lret
jmp
scas
cmp
dec
ds
arpl
add
mov
cmpsb
sub
stc
push
je
dec
rcll
pop
rorl
fidivl
xchg
ja
orl
jmp
mov
push
int
mov
loop
nop
xor
arpl
push
jg
ffree
push
xor
jmp
xor
mov
push
add
or
mov
pop
enter
jecxz
imul
add
in
sbb
fdiv
jge
ret
out
jecxz
pop
shll
sbb
jne
call
mov
in
out
xor
decl
pop
jne
sti
ljmp
mov
fidivs
mov
push
repz
dec
cmp
mov
aaa
pop
ljmp
jns
mov
lea
pop
repnz
outsb
testb
push
sub
push
mov
lds
mov
pop
in
fwait
and
adcl
dec
jae
or
pop
push
adc
imul
iret
jg
aaa
aad
loopne
push
setg
lahf
jno
out
gs
out
jp
cmpsl
adc
mov
xchg
test
cmp
ja
push
test
icebp
add
hlt
mov
inc
rcll
arpl
sbb
jb
sahf
out
decl
xchg
adc
repnz
andb
testl
mov
rorl
dec
fstps
faddp
mov
leave
lods
js
test
jmp
cmpsl
mov
mov
in
mov
imul
out
cmp
xor
aas
divl
das
sbb
add
xchg
pop
xor
jmp
inc
mov
sub
cmp
daa
shrb
lds
out
or
iret
imul
in
pop
jnp
xor
fdiv
pop
cmc
mov
rclb
aaa
pop
cmpsl
das
jecxz
or
adc
jnp
out
sbb
in
nop
and
out
testl
clc
arpl
fnstenv
dec
int
adc
and
fsubrl
jg
mov
out
dec
jb
mov
mov
jb
pop
dec
mov
icebp
inc
popf
mov
mov
testl
cltd
stc
lods
popf
enter
push
jg
sub
mov
jno
xchg
pusha
cmpsb
push
leave
sbb
test
stos
push
or
in
rcll
jae
insb
loope
andl
sti
ret
cmp
push
push
cmpsb
inc
and
adc
lods
call
pop
sub
movsb
lock
mov
adcl
inc
cmc
push
call
adc
inc
out
mov
cmpsb
lds
push
shlb
shrb
into
les
or
repz
cmp
adcl
jmp
jno
dec
cli
add
fsubrl
xlat
mov
pop
mov
and
std
cmp
lods
dec
inc
xchg
decl
mov
inc
or
shll
repz
or
rorb
fistl
cwtl
pop
dec
xchg
rorl
lret
mov
jle
dec
xor
lret
xchg
jl
inc
pop
adc
push
xlat
out
jo
imul
aas
mov
jg
cmp
out
data16
push
faddl
cmp
in
cmpsb
insb
xor
pop
gs
dec
dec
mov
jb
subb
or
das
xchg
cmp
ror
out
adc
lret
or
jns
mov
lret
rorb
jge
inc
cmp
inc
stos
adc
mov
or
xor
out
std
arpl
mov
aas
jecxz
les
push
movsb
push
aad
cld
xor
out
pop
pop
sbb
cmp
adc
fwait
cmp
in
mov
inc
jecxz
movb
xchg
data16
faddl
sub
mov
cmpsb
xchg
ss
popa
push
xor
push
adc
and
pop
test
loop
lods
push
mov
repz
dec
push
loope
hlt
hlt
cmp
and
mov
pop
je
mov
das
xchg
stos
icebp
cmp
xor
pop
ficoms
push
or
dec
fs
pop
outsl
scas
sti
and
clc
push
xchg
pop
push
fists
sbb
imul
push
imul
xchg
stc
nop
aam
call
das
ret
sub
mov
xchg
and
movsb
in
cs
repz
push
daa
inc
scas
in
dec
pusha
out
cmp
js
ljmp
mov
sbbl
sbb
lahf
and
xor
cmc
mov
sahf
out
popa
scas
xchg
fcmovne
and
dec
les
mov
xor
pushf
lock
adc
push
xor
and
sahf
adc
negl
mov
mov
sahf
xlat
test
fists
dec
in
fistps
add
faddl
ror
sahf
cmp
cld
pop
push
push
cmp
out
jmp
sbb
pop
lcall
and
push
ffreep
or
mov
pop
or
jbe
ja
pop
pop
jl
pop
sbb
js
xchg
xchg
test
arpl
jg
lret
pop
adc
pop
pusha
push
loopne
pop
or
pop
inc
mov
push
ret
or
cmp
sarl
adc
out
cltd
push
test
sbb
rcrl
arpl
frstor
movsl
aaa
jns
or
movsb
or
fsubrs
cmc
cmp
add
ljmp
test
dec
lock
into
fstl
cmp
stc
cmc
lds
dec
or
scas
push
adc
aas
leave
into
lcall
push
sahf
mov
leave
xor
out
pop
aad
jecxz
bound
fnstsw
adc
cltd
xor
adc
ffreep
aaa
xor
xor
negl
pop
test
pop
lea
pop
fadds
jo
mov
jb
into
scas
dec
xlat
cwtl
scas
dec
sbb
lods
call
out
xchg
or
jbe
push
fwait
pushw
pushf
out
ficoms
and
in
sbb
adc
push
out
dec
jnp
inc
adc
xchg
jnp
mov
mov
nop
aaa
mov
and
mov
cs
pop
sbb
lods
xchg
and
jae
cltd
push
push
ja
mov
loop
lret
ficompl
and
pop
lock
and
xchg
xchg
iret
push
enter
push
out
aaa
les
push
das
fisubs
dec
mov
inc
dec
stos
ret
and
loopne
mov
lahf
jle
pop
and
jbe
push
mov
rcrl
jp
mull
adc
les
sbb
cs
shlb
jo
lret
sub
fwait
jno
push
xor
jmp
dec
arpl
enter
fs
cmp
les
sbb
dec
clc
out
lods
sbb
ss
idivb
xor
pusha
xchg
out
call
push
loope
xor
xor
dec
pop
rcrb
adcb
mov
lods
mov
mov
test
jae
xchg
push
mov
popl
pop
jge
incb
rep
pop
lods
ss
test
mov
gs
shrl
add
push
mov
mov
shl
jo
stos
push
and
mov
push
mov
cltd
fwait
addl
mov
inc
push
push
fistl
push
jmp
or
jmp
iret
push
test
arpl
leave
xchg
xchg
test
cmp
xor
lcall
xor
add
lret
add
dec
sub
mov
stos
dec
testb
iret
out
scas
aam
inc
lahf
mov
or
lea
lock
into
psubsb
pop
addr16
rclb
add
ja
imul
je
mov
mov
mov
mov
cmp
dec
cmp
adc
cmpb
fsubs
and
xchg
pop
pop
cltd
lds
jbe
test
pop
push
scas
adc
adc
xchg
add
lahf
sar
pop
mov
stos
push
jp
lds
sbbb
loopne
dec
mov
xchg
pop
pop
fs
inc
xchg
push
idivl
lds
orl
aam
test
notl
movl
cmc
cmp
xor
in
loop
ja
shll
sub
push
inc
jmp
jp
test
inc
leave
pushf
mov
mov
dec
push
mov
loope
addr16
sbb
scas
fnstcw
xchg
adcl
mov
mov
push
mov
mov
cltd
or
adc
dec
jmp
popa
mov
jnp
test
xchg
pop
test
dec
nop
inc
lahf
sbb
xchg
push
mov
mov
ljmp
sub
out
mov
or
xor
insl
test
mov
add
sub
push
arpl
lahf
stos
imul
lcall
int
out
arpl
dec
das
jmp
mov
and
push
lods
and
jb
pop
lds
notl
jmp
outsb
lods
push
js
pop
int
add
jmp
xchg
push
pop
push
loopne
fldenv
lock
js
xchg
imul
std
sub
or
bound
adcl
std
insl
fimuls
fnstenv
push
and
imul
push
cli
xor
dec
jecxz
inc
pusha
mov
cmp
and
adc
stos
and
lea
test
scas
or
in
popa
sbb
dec
xchg
xchg
add
cmpsl
mov
or
push
popf
testb
jne
push
jo
add
inc
xchg
cs
jne
int3
leave
rolb
sbb
scas
pushf
mov
and
mov
int
sbb
iret
fdivp
loopne
sub
addr16
or
andl
fisubs
pop
sbb
xchg
aad
xchg
fidivs
fs
fnstcw
stos
ljmp
and
adc
push
cltd
jle
pop
sub
rorb
call
mov
ss
sbb
xchg
lret
pop
lods
addb
fwait
xlat
scas
je
sbb
jae
adc
gs
and
movsl
mov
call
fidivrl
gs
test
mov
jge
mov
pop
std
enter
dec
aad
in
jge
pop
mov
mov
inc
push
mov
xlat
mov
mov
out
sbb
scas
lcall
imul
js
addl
dec
stos
loopne
popf
xchg
js
hlt
pop
xchg
addr16
fsubl
dec
pop
add
xor
je
decl
out
lods
jecxz
xor
fists
inc
shl
mov
movb
mov
dec
stc
aam
hlt
scas
jge
jae
cmc
pushf
adc
cwtl
nop
cli
pop
js
std
out
push
dec
push
fildll
sub
push
add
movsb
outsb
sarb
frstor
push
sub
and
ds
pushf
xor
js
add
sub
vorps
dec
je
shlb
xor
adc
pushf
lock
xchg
jns
pushl
loop
cmp
add
jl
jl
lds
insb
addr16
jns
add
push
jnp
add
jne
pop
test
or
dec
cmp
pop
jns
sbb
adc
sub
nop
add
lods
and
bnd
pop
xor
out
fbstp
insl
push
xchg
fiaddl
sbb
aad
mov
outsb
aaa
push
mov
mov
inc
jo
add
jp
into
xchg
cmc
inc
sub
xor
std
sbbl
jl
imul
add
fisubrs
fistps
sbb
mov
ds
aad
outsb
stos
xor
out
jb
jbe
cmc
inc
ja
pop
arpl
div
outsb
fwait
inc
imul
bound
xchg
mov
insl
jae
jge
lea
mov
jl
fld
addr16
push
dec
jecxz
mov
jbe
testb
and
popa
inc
xchg
in
sub
xor
leave
push
insb
icebp
ss
pop
sub
cvtps2pd
mov
or
mov
inc
add
pop
mov
scas
mov
cltd
imul
push
push
test
jge
mov
stos
push
mov
and
lret
faddp
movsl
mov
cmp
push
mov
imul
in
leave
xchg
cmpsl
mov
push
out
pop
test
mov
or
jno
sarb
jge
aaa
inc
cmpsl
lock
fisttps
cltd
mov
outsl
jb
fadds
gs
bound
dec
push
in
call
lds
mov
mov
xor
inc
lahf
jbe
cs
jnp
push
dec
or
jle
mov
cmpsl
or
jecxz
cmpsb
clc
fs
loopne
inc
rcr
scas
shlb
and
cs
stos
inc
jns
and
aam
aam
dec
dec
mov
movsl
sbb
push
pop
loopne
push
adc
add
inc
or
scas
mov
sub
adc
pop
push
cmpsl
cmp
inc
sbb
lds
push
ret
clc
sub
inc
icebp
repz
aad
mov
cmc
and
sbb
faddp
imul
dec
xchg
sbb
push
insl
int3
push
xor
mov
or
cli
addr16
out
lcall
cmp
roll
lret
pop
or
sub
clc
xlat
sbb
sbb
icebp
push
dec
xor
add
test
repnz
xchg
lea
cmpsb
inc
mov
mov
sbb
sub
pop
out
pop
nop
sti
pusha
or
inc
jne
jo
test
inc
call
lcall
ret
iret
and
std
cmpsl
es
scas
roll
xor
push
xor
cmp
add
popl
outsb
ficoms
test
fldz
pop
cmpsl
pop
daa
ret
dec
inc
rcll
bound
sub
ja
pop
push
stos
sbb
js
rcr
inc
loope
jle
jmp
dec
test
lds
sbb
fcom
sbb
dec
add
dec
ret
jmp
imul
mov
test
jae
loop
add
hlt
sahf
loope
push
xchg
cmp
mov
pop
stos
xchg
cs
add
bnd
xlat
xor
out
mov
stos
pop
push
repnz
cmp
leave
stc
adc
gs
fmull
aas
mov
lcall
pop
mov
mov
fildll
inc
adc
out
mov
push
pop
xchg
xchg
push
push
in
adc
push
sbb
sarb
sbb
xchg
cmpb
mov
rcrl
or
ds
jo
mov
and
push
outsl
dec
ret
pop
pop
pop
pusha
mov
jns
push
insb
cmpsb
sbb
dec
outsb
sub
pop
or
stos
out
xchg
shlb
sub
sbb
out
cmp
icebp
fcoml
shr
jmp
arpl
pop
inc
aaa
mov
or
mov
les
mov
inc
push
lret
aad
mov
ss
into
cmp
imul
mov
ja
inc
pop
mov
sti
mov
xor
or
sbb
sbb
hlt
cmp
xchg
dec
xor
pop
jecxz
mov
mov
test
aam
xor
outsl
lock
int
cmp
or
mov
and
xchg
inc
inc
dec
and
mov
cmpsb
xchg
cld
push
repz
sbbb
test
fsubl
stos
nop
int
iret
test
jae
outsb
pop
fs
ret
dec
inc
int
lret
aaa
sbb
add
lods
imulb
insl
push
push
add
addr16
push
fnstcw
lea
add
add
sbb
xor
fs
iret
in
jg
rcll
mov
push
cmp
outsb
js
push
fistl
pop
sti
push
cmp
sub
stc
neg
inc
push
iret
adc
adc
mov
or
ds
lret
int
rcrb
push
clc
pop
ficomps
ret
decl
std
lahf
shl
cli
mov
movsb
pusha
in
in
cwtl
sub
gs
popl
je
and
movsb
xchg
jp
mov
pop
js
fistl
sbb
sti
enter
dec
or
insl
inc
aad
and
jl
shll
cmp
sbb
leave
sub
xchg
std
or
inc
insl
and
popf
in
jo
cmpsb
add
addr16
xor
mov
int
sar
dec
or
jmp
push
ret
std
aaa
sbb
repnz
sbb
nop
dec
sbb
js
adc
loope
ljmp
xchg
imul
pusha
sarb
mov
sti
adc
loope
sahf
mov
mov
xchg
fidivrs
push
lods
push
jo
subb
fmul
inc
xchg
sti
sbb
xchg
in
notl
xchg
decb
inc
dec
popa
movsl
fdivr
into
in
inc
cmp
nop
ret
mov
stc
and
outsl
loopne
test
pop
add
pop
dec
pop
imul
xchg
add
jg
jge
add
push
popf
mov
mov
pusha
imul
insl
cmpsb
xchg
mov
mov
aas
dec
mov
xchg
xor
bound
insb
sbb
leave
outsl
xchg
or
xchg
aam
leave
mov
sti
push
pop
sahf
and
xchg
fdivl
outsb
dec
jns
std
xchg
push
pop
pop
sub
loop
adc
mov
dec
xchg
add
pop
stos
int
orb
cld
pop
and
cld
pop
push
into
fisubrs
shrb
pop
or
icebp
xor
and
inc
cmp
push
pop
inc
push
iret
add
sub
mov
xchg
and
insb
push
push
aaa
dec
subb
jns
es
mov
jmp
das
push
sub
pop
hlt
pop
pushf
push
add
xchg
jno
div
imul
les
and
mov
int3
cmp
add
mov
mov
mov
out
pop
cmpsl
mov
nop
cmp
repnz
sbb
andl
fadds
mov
adc
scas
fadd
cmp
mov
pop
pop
rolb
lods
adc
les
xor
icebp
cld
dec
inc
loope
loop
stos
cmp
push
mov
dec
loop
or
out
jmp
or
lods
mov
lret
nop
inc
movsb
adc
outsb
sbb
addr16
fldcw
xchg
notb
dec
xor
cmp
leave
test
repz
cmpsb
xchg
fldenv
inc
fildll
mov
mov
inc
jp
rcrb
mov
mov
dec
and
aas
stos
out
adc
lret
mov
or
int3
jae
dec
fists
dec
inc
mov
sub
inc
fidivrl
icebp
data16
mov
cmovbe
mov
mov
inc
mov
and
mov
mov
jmp
fistl
add
xor
into
mov
mov
xchg
shll
push
out
add
cs
and
sub
inc
and
sub
pop
fcmovnb
push
xlat
xchg
adc
dec
cmp
mov
xchg
fwait
movb
xchg
xchg
or
sub
fsubrs
movb
lret
mov
mov
cmpsb
inc
rclb
mov
imul
dec
insb
clc
mov
jle
sbb
loopne
pusha
dec
pop
xor
mov
add
sbb
pop
ja
mov
xor
or
jo
dec
icebp
push
mov
mov
xor
in
les
f2xm1
fstl
push
xchg
mov
int
push
pop
ja
subb
add
repnz
xchg
pop
xor
xchg
fisttps
cmc
mov
lock
push
pusha
push
int3
insl
mov
adc
enter
addl
mov
dec
repz
xor
mov
inc
inc
pop
and
mov
aad
jg
inc
insb
adc
add
pop
jmp
jns
leave
mov
pop
popa
cmpl
push
sbb
aaa
cmp
mov
out
jne
imul
xchg
pop
and
out
jg
sbb
pop
icebp
repz
adc
add
lea
cmp
aas
pop
test
dec
sbb
int3
popf
jae
incl
mov
in
xlat
aam
lea
hlt
ret
jg
nop
xlat
mov
repnz
in
popf
mov
in
mov
sbb
inc
push
push
rcrb
inc
dec
push
pushf
mov
movsb
dec
fs
sbb
insl
inc
bound
xchg
lds
lret
sub
cwtl
in
mov
push
int3
out
nop
into
adc
in
dec
pushl
push
fsubrs
into
xor
pop
xchg
mov
push
fdivrs
dec
outsb
pop
je
adc
add
test
cmpsb
mov
sahf
xchg
sub
push
xor
sbbb
adc
pop
aaa
call
xlat
in
xchg
mov
mov
push
inc
repz
jl
ss
and
mov
std
testl
dec
fisubs
jo
loop
fs
xchg
xchg
push
loope
sbb
inc
push
adc
popf
sub
stos
popa
mov
mov
out
mov
mov
jae
stos
add
push
push
aad
subb
pushf
push
insb
mov
jp
mov
mov
popa
test
sahf
and
mov
xchg
bound
outsl
ja
sbb
fcompl
inc
sahf
arpl
jnp
inc
aad
popa
stc
int
xchg
inc
push
aam
and
arpl
mov
stc
push
outsl
pop
bnd
cwtl
insl
and
ja
xorb
out
and
xchg
repz
aas
inc
cmpsl
ja
leave
les
push
push
sahf
jl
lret
hlt
out
sub
out
pop
dec
aad
decl
inc
sbb
int
dec
rorb
dec
fmuls
xchg
popa
imul
xchg
test
xchg
xorl
cmp
mov
lahf
subb
xchg
push
jmp
push
xor
mov
outsl
inc
shlw
aam
inc
mov
decl
mov
data16
or
shlb
scas
in
mov
test
jmp
pop
inc
dec
aas
fdivrp
stos
adc
hlt
mov
mov
test
aaa
shll
cmp
adc
js
xchg
mov
push
outsl
add
mov
or
inc
mov
scas
loop
das
mov
ss
negl
mov
pop
jle
aaa
arpl
pop
aas
cmpl
add
imul
sub
popa
jnp
jb
and
insl
js
nop
insl
sbb
sahf
arpl
daa
outsb
dec
sub
dec
push
jo
xor
pop
pop
push
push
aas
dec
xchg
jb
lods
xchg
mov
adc
cmpsb
push
jnp
dec
and
mov
clc
lahf
jle
in
pushl
dec
cmp
neg
cmp
jge
and
inc
lods
in
jo
aad
inc
push
rclb
daa
cli
shlb
out
lods
xchg
lahf
adc
in
jb
add
pop
jge
mov
mov
loope
int
sbb
insl
jp
arpl
jp
repz
add
imul
xchg
in
add
mov
popa
xchg
cmpb
cmp
and
loopne
pusha
dec
sbb
push
ds
sti
in
pop
fisttps
pop
andl
roll
adc
push
outsl
cmp
inc
xchg
movsl
gs
adc
out
xchg
fwait
dec
aas
call
ret
fdivl
call
add
dec
jg
dec
loopne
int
sbb
dec
enter
mov
xor
hlt
mov
xchg
jbe
inc
jl
push
mov
jb
das
hlt
leave
fdivrl
notl
mov
xchg
jecxz
jp
jp
adc
push
jmp
mov
ret
mov
push
dec
das
sub
sarb
cwtl
call
pop
mov
divb
mov
popf
int3
xchg
push
dec
cmp
push
cmpsl
adcb
jnp
jp
mov
xor
jge
aas
push
dec
inc
push
sub
movsb
xchg
aam
outsb
data16
mov
mov
mov
sbb
jbe
jmp
cmp
mov
mov
pop
rclb
add
and
addr16
into
bswap
jno
adc
xlat
xor
sti
test
nop
jbe
dec
xlat
inc
adc
pushf
mov
pop
jb
pop
arpl
xchg
jae
pop
mov
jno
xor
sti
pop
std
xor
aad
mov
rolb
mov
cmpps
lds
dec
shll
call
cmp
push
sub
dec
jge
pop
push
mov
mov
les
test
cmpsb
aas
dec
push
lcall
test
jb
pop
pop
push
ja
popa
dec
and
mov
or
or
lcall
xor
add
cmp
mov
int
sub
or
lahf
fmulp
inc
jno
sbb
fimuls
push
and
sub
ja
es
and
notb
and
xor
daa
jno
idivb
shrb
pop
loope
fucomp
mov
push
adc
xor
aam
xchg
dec
xchg
enter
add
sti
mov
into
lods
call
bound
rcll
stc
nop
jp
push
lods
dec
sbb
xchg
dec
jno
outsb
stos
in
scas
pop
mov
mov
pop
cwtl
pop
sbb
enter
in
sbb
jns
call
xchg
xchg
cltd
cmpsl
ficomps
shl
inc
inc
mov
dec
push
inc
adc
adc
sub
xchg
jp
inc
cmp
xchg
push
cmpsl
jb
in
fists
leave
insl
fcomp
daa
rclb
shlb
cltd
nop
stos
ljmp
or
pop
imul
xchg
push
iret
mov
or
mov
dec
fsubs
jb
stos
jo
xchg
or
cwtl
cmpsl
out
incl
hlt
sarl
mov
and
inc
mov
mov
jp
jl
xchg
in
loop
xchg
mov
inc
sbb
and
imul
in
outsl
cmc
pushf
and
lret
mov
push
xchg
loope
lods
imul
jno
jmp
pop
cld
cmpb
adc
sbb
cmpsl
mov
loope
lods
cltd
scas
sub
jl
pop
pushf
mull
lea
fisttpl
les
and
mov
stos
or
adc
das
jg
sub
movsl
mov
addl
xor
loope
inc
add
das
insl
xor
sbb
mov
out
add
daa
push
mov
jl
ja
push
mov
fmull
aaa
mov
dec
into
scas
cmp
fwait
out
movl
rcl
xchg
pop
sub
inc
cmp
xchg
mov
andb
cmp
je
aaa
and
lret
out
sbb
and
stos
leave
or
dec
inc
sbb
mov
pop
mov
andb
icebp
sub
mov
testb
push
data16
fiadds
movsb
add
add
stc
mov
rclb
fsubrl
add
jb
lds
out
fstl
jbe
cmp
push
lds
dec
or
pop
add
das
je
filds
cs
out
xchg
push
xchg
addl
vsqrtss
or
jp
xchg
jge
fistl
pop
mov
sbb
pop
or
into
fwait
aad
xchg
sbb
adc
js
adc
icebp
stos
cmc
out
push
sub
repz
out
jns
xorl
sbb
lods
ret
mov
jg
pop
iret
sbb
loopne
aam
cld
adc
mov
push
mov
xchg
mov
pop
movsb
int3
lcall
subl
mov
outsl
repnz
ds
lea
mov
test
mov
cmp
jg
mov
gs
outsb
jne
pop
ss
xor
test
outsb
push
lea
lahf
mov
std
inc
stos
imul
push
sbb
mov
into
popa
push
pop
mov
push
ficompl
push
push
arpl
push
outsb
xchg
gs
mov
jg
ret
add
out
pop
push
push
mov
shll
mov
add
xor
loop
in
and
mov
call
pop
test
cmp
bound
dec
popf
movsb
or
fnstcw
mov
adc
push
movb
and
stc
test
xchg
push
gs
into
lcall
aad
sbb
mov
in
stc
mov
lret
lcall
data16
shrl
mov
inc
pop
mov
lods
cmp
sub
int
or
lea
xorl
es
ret
inc
pop
repnz
sti
push
sbb
sti
lea
out
push
aas
add
sti
sbb
fcmovnb
jb
push
pop
ja
lret
or
in
cmp
cmp
add
fwait
ss
and
repz
test
nop
mov
jae
imul
fisttps
stos
push
nop
or
cmpsl
jle
nop
and
jb
in
aaa
push
addr16
push
out
mov
xchg
xor
ds
setns
lock
adc
pop
push
xchg
mov
into
scas
inc
jnp
and
mov
stc
adc
add
sbb
mov
stc
jo
nop
inc
mov
dec
int
shlb
jmp
inc
xor
sti
mov
cmp
push
loopne
add
mov
outsb
sub
pop
xchg
dec
cmp
add
adc
enter
and
iret
and
cli
push
in
les
and
outsb
jns
loopne
aaa
pop
mov
jmp
xor
or
fisubl
into
ficoml
aam
popa
push
pop
pop
xor
xchg
mov
call
cmp
push
inc
push
das
push
or
lahf
adc
insb
lret
sbb
or
add
lods
and
test
push
test
fs
ja
add
test
nop
cli
adcb
pop
add
fdivs
jl
and
jg
leave
or
nop
ljmp
inc
mov
mov
inc
xchg
dec
in
dec
xchg
xchg
stos
sbb
in
pusha
lahf
cmpsb
int
adc
inc
push
movsb
push
and
xor
lea
in
shrb
das
xchg
pop
adc
push
ss
mov
lcall
mov
or
xor
lock
xor
cwtl
mov
stc
test
or
out
call
mov
stos
cmpsb
pushl
sahf
push
xchg
and
push
adc
test
subb
rep
xchg
repnz
addr16
inc
scas
rolb
mov
bound
icebp
dec
ficoms
xor
push
sub
push
add
icebp
xchg
mov
fnstcw
aad
dec
aam
dec
xor
jae
stos
loopne
jl
inc
add
mov
repnz
mov
lds
cmp
fcomip
fisubl
cmpsl
in
push
xchg
lahf
mov
mov
cmc
jae
daa
rorb
dec
idiv
jle
fwait
or
ret
int3
ljmp
fistps
clc
or
add
xchg
outsl
pop
xlat
js
mov
imul
add
fdivl
jno
adcb
dec
sahf
xchg
lods
sarb
cmp
loop
rcr
add
mov
and
les
or
mov
and
lcall
enter
rclb
mov
fildll
sub
dec
jb
enter
pop
mov
or
xchg
enter
xchg
pop
xchg
test
add
enter
cmp
add
mov
pop
dec
jecxz
push
int3
scas
cwtl
sti
lods
sub
sbb
out
test
adc
cmpsl
jns
push
inc
sub
fimuls
cmc
pusha
inc
ja
cmp
pop
call
rclb
int
ss
adc
movsb
sbb
loopne
sub
decb
jle
adc
scas
adc
pop
sbb
pop
or
data16
ljmp
das
out
or
push
fs
cld
stos
popa
sub
imul
mov
lods
mov
flds
scas
xor
push
and
add
stos
scas
loopne
cmp
out
push
cmp
out
pop
pop
mov
dec
stos
xchg
adc
ss
ljmp
lock
dec
insb
or
pop
lahf
and
ret
sbb
and
add
lret
jbe
cld
push
mov
adc
dec
in
cmp
sub
pop
jae
jnp
add
loope
ja
cmp
or
dec
mov
xor
mov
xchg
orb
stos
or
arpl
aad
lock
div
push
push
mov
jmp
jmp
or
fucomip
pop
push
push
push
pop
loopne
aam
push
and
aaa
pop
fs
lret
mov
mov
sti
push
pop
les
mov
jae
mov
adc
push
jnp
ss
daa
mov
out
sub
inc
jle
mov
mov
dec
adc
imul
pop
shl
mov
jae
add
xchg
push
popa
mov
test
xchg
xor
cmpsb
sbb
mov
xchg
or
mov
cld
movsl
jmp
xchg
xlat
out
xchg
movsl
jp
aad
insb
mov
pop
pusha
movsl
aad
pop
dec
xchg
jg
xchg
dec
subl
push
addr16
dec
pop
ja
dec
test
xchg
outsl
sbb
in
stos
sahf
movsl
frstor
cmp
addr16
ret
mov
xchg
fnstenv
jmp
sbb
mov
addr16
bswap
popf
sub
or
lods
movsb
mulb
pushf
dec
es
sahf
mov
rolb
lock
xchg
push
imul
push
rolb
sahf
pusha
cwtl
lea
mov
xchg
mov
mov
loope
lea
shll
faddp
xchg
hlt
popf
pop
cmp
push
mov
inc
in
cmp
or
enter
jecxz
lods
aad
pusha
mov
inc
gs
int3
rcr
push
xor
jo
jns
mov
inc
sahf
xor
mov
adc
dec
sub
and
adc
popa
sub
mov
inc
inc
pop
mov
fidivl
nop
lahf
jge
pusha
cmpsl
aad
pop
sbb
sbb
andl
outsb
add
xor
aas
add
xchg
fwait
jmp
sub
frstor
insl
clc
xor
fwait
cmp
push
es
in
jnp
shll
xchg
push
push
fists
test
pop
sarl
cmp
or
mov
ja
aas
jno
leave
outsl
jl
mov
fimull
jbe
fucom
mov
ss
sbb
xchg
or
in
fdivr
aad
adcl
pop
xor
inc
fidivrl
test
mov
scas
cli
push
addr16
jmp
inc
fmul
jno
jae
sbb
sbb
lea
stc
insb
int
pop
sub
push
cltd
rclb
lods
cvtdq2ps
inc
es
imul
xchg
jge
mov
push
xchg
fabs
test
test
fwait
sti
and
popf
dec
mov
leave
insb
shrl
push
lods
mov
ljmp
mov
dec
inc
lret
insl
imul
fmuls
cmpb
or
ss
dec
sub
pop
jle
out
and
bound
xor
add
fwait
cmp
sub
movsl
pop
pop
subb
cmp
imul
xchg
sub
dec
pop
jbe
xchg
jge
push
mov
pop
shrl
mov
add
xor
fmull
add
xor
lea
jae
lret
dec
sub
out
outsl
jns
in
mov
inc
call
f2xm1
cmp
cwtl
cmc
imul
or
pop
xor
arpl
xchg
cmp
stos
mov
inc
jle
push
push
dec
mov
movsb
scas
loop
jg
mov
xor
stc
sbb
jl
xor
nop
sbb
test
stos
call
nop
or
out
mov
leave
or
xchg
push
mov
inc
daa
pop
inc
movb
or
mov
test
lods
push
test
or
or
xor
and
xor
push
jno
sarl
sbb
stos
xor
jl
popf
rorb
mov
pop
cmp
push
dec
scas
icebp
pop
sub
js
and
mov
arpl
jae
adc
into
mov
mov
pop
testb
add
imul
movsl
sub
rsqrtps
xchg
jg
pop
stos
daa
cltd
cld
jno
lret
cltd
or
xchg
inc
pop
popf
sub
xor
test
stos
or
pop
pop
inc
arpl
jp
int
dec
sbb
and
xchg
repz
shlb
stc
xchg
xchg
rcl
loop
jecxz
mov
pop
out
or
hlt
lock
cmp
jne
pop
xchg
inc
jns
or
fs
lock
jg
lea
out
lret
clc
mov
sahf
xchg
sahf
seto
mov
aam
mov
jg
insb
stos
xchg
fdivs
sbb
and
push
vmptrld
aam
push
int3
pop
fwait
jmp
cli
mov
mov
sbb
hlt
pop
js
shll
and
ror
pop
pop
inc
std
sbb
or
clc
leave
ds
pop
mov
sahf
inc
bound
cli
mov
jmp
lods
mov
pop
jp
mov
or
jge
nop
pop
adc
xor
sub
cltd
fcmovnbe
pushl
pushf
fwait
adc
loopne
jle
repnz
pop
subl
lea
pop
jmp
les
shlb
cmp
xchg
jecxz
fwait
lods
jb
aas
xor
clc
xchg
cmpsb
mov
xor
shrl
xchg
sahf
fs
xor
popa
sahf
iret
daa
enter
ss
mov
idivb
cmpsl
out
je
pop
lock
or
cmpsb
repz
jle
pop
call
dec
mov
push
or
mov
pop
or
shrl
scas
and
jne
cld
mov
push
add
lea
fdecstp
pusha
and
sbb
adc
jne
pop
ljmp
cmp
loopne
mov
insl
inc
repz
adc
dec
xor
jbe
pop
iret
adc
jecxz
jno
lods
jo
pop
imul
push
add
stos
mov
pop
mov
repnz
jno
and
mov
out
mov
xlat
call
sub
mov
outsb
add
subl
mov
or
sbb
mov
cmp
fldcw
xchg
mov
jne
xor
jl
lods
adc
sub
inc
fisubrl
add
lret
push
or
and
inc
lea
push
shr
and
out
lock
add
dec
lods
xor
pop
lahf
mov
xor
cmpsb
mov
or
inc
enter
jp
push
mov
dec
repz
inc
sti
roll
jle
add
add
rol
adc
push
and
add
das
aam
push
push
mov
xchg
cmp
call
xchg
jb
scas
andb
or
roll
xor
xchg
aas
rorl
mov
adcb
iret
jb
cmp
daa
enter
or
je
clc
mov
dec
xorb
push
and
into
mov
cmpsb
stos
push
dec
xchg
cli
xor
je
adc
add
mov
or
sbb
mov
xchg
xchg
js
push
aas
aaa
xchg
adc
xchg
icebp
data16
push
mov
loopne
cmpsb
push
mov
jge
pop
test
adc
inc
movsl
fidivs
ficoms
add
sbb
ret
xor
imul
mov
lods
sbb
cmp
sahf
lds
movsl
push
xor
fimull
or
outsb
test
push
cli
jl
pop
inc
sbb
in
adc
mov
xchg
pop
push
or
push
push
cmp
ret
adc
push
adc
inc
stc
xor
filds
sbb
stc
xchg
jne
mov
cltd
jnp
dec
push
pop
mov
pop
fbstp
mov
rcrl
call
inc
pop
test
in
or
and
movsl
cmp
cs
movsb
dec
pop
xor
or
outsl
loop
cmpsb
test
push
xchg
fimuls
test
push
and
ds
push
push
push
xlat
adc
push
dec
es
iret
lcall
repnz
and
loop
iret
or
jg
lret
push
pop
push
add
mov
scas
jmp
sbb
orl
push
lret
les
out
push
mov
test
jecxz
mov
inc
xchg
lds
and
jb
int
pusha
xchg
repnz
ljmp
inc
jmp
into
mov
fistpl
hlt
dec
push
mov
lret
adc
lock
sub
clc
xchg
mov
imul
and
sti
sub
outsb
int3
add
push
mov
pop
psubw
cmc
xchg
push
sub
mov
test
int
sbb
adc
shll
pop
cmp
xchg
pop
fsubrp
hlt
cli
jb
dec
pop
rcll
inc
mov
insl
stc
xor
imul
and
inc
push
in
and
adcb
add
neg
int3
mov
movsb
dec
sarb
inc
rcll
mov
jmp
sub
loope
mov
icebp
mov
mov
dec
cmp
insl
out
mov
adc
and
outsl
xor
mov
mov
mov
inc
clc
outsl
stos
or
mov
aaa
shr
xor
stos
and
fwait
les
aaa
dec
mov
int3
xchg
leave
mov
mov
and
pop
push
pop
loopne
divb
popa
arpl
sarl
stos
mov
xor
jb
mov
mov
jp
movsb
xor
push
jge
fildll
lock
or
pop
ret
stos
jmp
push
ret
pop
scas
adc
in
jbe
lahf
lods
js
mov
add
jb
push
dec
push
mov
test
push
sbbb
xor
mov
int
loop
es
scas
pushf
push
xchg
or
pop
gs
push
sub
xchg
pop
mov
jne
subb
push
hlt
rcrl
push
add
pop
scas
and
push
mov
mov
or
adc
gs
ret
adc
sub
mov
sub
test
cs
push
jns
cmp
ss
push
or
add
jns
dec
dec
pop
lock
jns
push
inc
sub
xchg
subl
inc
scas
sahf
in
inc
arpl
and
push
jae
fsts
push
add
lahf
sub
jmp
pop
pushl
and
scas
aaa
jl
and
dec
push
push
jmp
movsl
in
mov
dec
mov
add
jno
cmp
xchg
adc
xor
jno,pt
negb
data16
xchg
inc
loope
xlat
dec
sub
aas
adc
lcall
xor
mov
xorl
and
sub
lds
lcall
into
xor
fsubr
std
outsl
xchg
icebp
and
push
lret
sub
push
roll
sub
sbb
call
arpl
pop
fistpll
mov
xchg
shrl
xlat
iret
ror
int
dec
ja
inc
cltd
cmp
lods
mov
in
sbb
sub
adc
into
outsb
mov
imul
mov
jmp
cmp
rorb
adc
dec
jae
out
das
clc
mov
adc
add
pop
int
lret
outsl
call
jg
mov
clc
xor
push
fistps
gs
cmc
add
jnp
mov
push
mov
lock
lret
jne
fiadds
inc
jmp
lods
adc
xchg
push
aaa
xchg
addr16
je
xor
jp
lods
add
xchg
or
push
xor
in
adc
outsl
cmpsl
mov
inc
xchg
or
jnp
or
pop
jne
iret
or
mov
xchg
bswap
xchg
rorb
imul
out
adc
pop
mov
aas
mov
int3
testl
rorb
rcl
addr16
ja
ss
loope
sbb
scas
icebp
mov
sar
in
mov
jno
in
ja
ds
xchg
xchg
ror
sarb
daa
inc
mov
mov
movsl
adcb
pop
adc
lods
cmp
push
aad
sub
inc
cs
adc
mov
lods
cmpsl
loop
pushf
les
or
inc
jl
nop
lahf
sets
mov
repnz
mov
mov
xchg
icebp
pop
test
call
stos
and
fnstenv
or
data16
out
mov
addb
sbb
insl
mov
xchg
inc
gs
dec
mov
jge
push
clc
jae
sub
jns
js
jno
out
xor
popl
mov
arpl
xlat
pushf
mov
mov
push
dec
mov
lret
pushf
out
inc
fwait
mov
cmp
icebp
lcall
mov
adc
xchg
xor
push
cwtl
and
pusha
sub
or
or
movsl
mov
js
inc
mov
or
sahf
lds
push
mov
xor
lea
arpl
dec
lret
xchg
mov
icebp
pop
sahf
sbbl
push
ss
sahf
add
pop
loop
adc
insl
pop
out
xor
push
ret
and
xor
popa
push
clc
gs
xor
ss
popa
lahf
fsubl
lods
iret
add
sub
jb
add
les
jno
aam
imul
sbb
test
imul
sbb
cld
mov
jge
jmp
and
pushf
jbe
add
jbe
add
inc
mov
push
clc
arpl
call
mov
aaa
test
adc
jnp
jmp
xor
out
dec
bound
adcb
xchg
add
inc
and
fsts
lahf
jmp
adc
sti
pop
push
inc
outsb
popa
jp
mov
popf
mov
pop
push
push
mov
mov
xchg
lea
or
nop
jmp
or
sbb
push
cmp
mov
pushaw
mov
add
in
dec
inc
movsl
pop
or
sub
mov
jo
rolb
fisubrs
mov
pusha
mov
mov
std
xor
push
ret
in
inc
mov
adc
aaa
xor
movsl
movsb
adc
rcl
out
push
dec
es
pop
loope
sahf
jp
and
cltd
inc
push
ss
insl
mov
mov
ret
sbb
jne
dec
xchg
push
clc
aas
jmp
scas
sti
movsl
aam
jbe
notb
cs
loope
das
push
mov
hlt
lock
andl
mov
jp
fistl
cli
aaa
outsb
pop
cmp
dec
test
test
mov
push
jge
adc
jbe
jle
xchg
aaa
int
aad
inc
in
jge
test
scas
testl
fiadds
pusha
pop
dec
pop
test
add
ss
fmul
into
mov
cmp
nop
xor
or
sbb
nop
fisttpll
cmp
push
dec
jbe
xchg
cmc
xor
test
inc
scas
dec
pop
stos
pop
mov
sti
test
xor
push
int3
push
insb
andb
sti
inc
lock
pusha
rorb
and
nop
les
dec
scas
roll
sub
sbb
out
mov
mov
lds
mov
pop
ret
cmp
or
sbb
test
pop
lret
out
andl
sarl
je
sub
fwait
xchg
mov
xor
xchg
push
xchg
push
pop
jno
aad
stos
mov
int
test
xchg
jp
lret
inc
imul
jnp
mov
shll
mov
and
inc
insb
jle
aas
fwait
and
cli
leave
add
mov
dec
dec
jne
sbbb
rorb
movsl
arpl
sub
dec
adc
adc
addb
iret
frstor
mov
mov
jbe
fldt
xor
dec
mull
dec
jne
pusha
cmp
fidivrs
mov
rclb
sub
dec
aas
cmc
and
shl
push
fdiv
jno
mov
in
data16
repz
mov
adc
lcall
inc
mov
imul
int
xor
ds
repz
jo
pop
ds
filds
outsl
dec
cmc
dec
repnz
aad
sub
lds
fptan
in
xchg
push
mulb
or
shlb
sahf
stc
dec
enter
fst
xor
dec
mov
loope
popa
sahf
sti
inc
push
inc
cmp
push
xor
rcrl
jnp
sarl
push
in
mull
shl
fldt
std
sub
faddl
iret
ror
testb
fcompl
cs
add
push
jp
ds
ja
popf
mov
out
inc
into
push
push
aaa
jmp
inc
in
adc
lcall
sbb
repnz
xor
xchg
mov
pop
mov
jmp
loopne
lds
pop
add
lods
out
jae
pop
cwtl
fstpt
fnstenv
aad
sub
mov
outsb
les
jo
sti
pavgw
inc
xor
insb
aam
loope
add
push
test
lods
call
and
fbstp
pusha
sbbl
fists
dec
jns
cmp
add
jb
bound
mov
out
movsb
icebp
push
jne
mov
std
roll
insl
xor
or
orl
jle
sbb
mov
dec
pop
cmpsb
ret
push
clc
lods
cltd
jns
xchg
xchg
ret
test
sbb
lcall
xor
dec
pop
enter
scas
mov
xchg
mul
sbb
xor
test
inc
sbbb
je
imul
lods
jle
aad
pop
adc
ret
js
mov
mov
cltd
mov
jmp
and
jp
fcoml
fcmovbe
inc
pusha
je
movsb
ret
inc
add
addr16
ljmp
inc
iret
clc
shl
inc
sbb
fcompl
cmc
imul
push
inc
test
push
xchg
sbb
insl
xlat
rorl
insb
sbb
ficomps
pop
inc
push
xor
adc
iret
pop
imul
pop
test
cmp
pushf
bound
scas
les
fcomp
sbb
in
xor
test
pusha
sbb
dec
ss
mov
mov
mov
sbb
pop
stos
push
imul
ja
mov
test
ret
or
hlt
scas
xchg
or
mov
mov
push
cmp
sbb
jo
into
dec
add
mov
jge
or
iret
rolb
xor
adc
push
pushf
pop
je
cmp
mov
cmpsl
jbe
mov
mov
jb
cmp
inc
or
jae
lret
andb
push
and
lods
addb
mov
jg
or
fisttps
inc
jno
jb
sbb
jno
imul
add
inc
fsubrs
jns
lret
dec
dec
xchg
push
mov
aam
cmp
je
or
push
push
cmpsb
shl
xor
in
or
add
sbb
ljmp
pop
mov
pop
push
shr
push
sub
mov
xchg
push
mov
test
mov
mov
cmp
push
ds
rorb
aaa
std
pop
mulb
ficoms
imulb
shl
mov
jnp
jge
dec
mov
loope
pop
popf
inc
lret
jae
or
out
inc
fwait
pushf
mov
stc
scas
shll
push
mov
sub
cmp
jb
repz
addl
out
movsb
outsb
xchg
inc
sub
dec
push
push
scas
jle
fwait
push
jnp
push
mov
push
cltd
sbb
sahf
xor
or
or
add
repnz
dec
adc
imul
dec
cmc
dec
mov
mov
mov
pusha
sub
mov
dec
add
xchg
lods
mov
cmpsb
mov
inc
std
pop
xor
or
lock
popf
add
fxch
adc
cmp
aas
arpl
jns
and
cmp
sahf
dec
fsubrs
cltd
mov
push
jg
fucom
push
repz
xor
cmp
lds
notb
xchg
pop
push
adc
push
mov
jg
leave
test
sub
outsb
mov
pop
push
push
into
mov
xchg
pop
inc
add
xor
sub
xchg
ja
nop
or
shrb
pop
outsb
rcll
adc
mov
fistpl
cmp
fistl
mov
mov
jle
pushf
adc
push
cmp
push
loop
sub
aam
daa
mov
shr
mov
or
xchg
and
jbe
inc
jae
call
fwait
mov
cmp
rolb
aad
jp
sub
mov
movsb
test
test
xor
leave
xor
nop
mov
sbb
mov
dec
fstpl
es
push
lds
repnz
xor
xor
push
mov
mov
or
dec
mov
cli
js
mov
or
leave
scas
sbb
lcall
sbb
mov
jecxz
mov
mov
mov
out
dec
mov
jge
popw
aam
pop
xor
jge
inc
jmp
js
mov
out
push
xchg
rcrl
add
jnp
out
movsb
mov
push
mov
sbb
xchg
inc
or
dec
mov
leave
xchg
jg
and
mov
test
dec
andl
dec
xchg
inc
rclb
sarw
push
int
pop
mov
in
js
push
into
fisttps
sub
ja
push
outsl
shrl
push
sub
mov
ss
jmp
inc
or
outsb
call
stos
aaa
mov
pop
pushf
dec
mov
and
pop
cmc
call
sub
imul
push
test
mov
outsb
sarb
pop
into
inc
imul
inc
popa
fidivl
push
xor
sbb
adc
xor
dec
adc
mov
jne
xchg
cmp
dec
loope
outsb
adc
mov
pushf
xlat
xor
leave
lods
aam
cmp
jns
sub
xchg
push
xchg
sbb
cmp
push
push
adc
xor
lods
icebp
lea
in
add
jbe
lret
repnz
pop
inc
xchg
cmp
pop
xacquire
mov
xchg
aas
int
mov
dec
movsl
push
sbb
adc
stc
sbb
sbb
sub
adc
adc
rorb
fidivl
dec
daa
fwait
mov
ret
sbb
fcmovnb
pop
iret
clc
pop
pop
in
xorb
leave
jbe
fcompl
lods
stos
mov
outsb
cltd
and
inc
std
dec
sub
out
xchg
ds
scas
xor
popf
insl
adc
mov
ljmp
out
lods
jns
or
inc
addr16
xor
sbb
dec
cmp
adc
push
pop
pop
cs
or
in
data16
pop
adc
inc
add
add
daa
bound
pusha
push
les
xchg
aaa
mov
sbbl
push
mov
mov
push
pop
lea
add
stc
adc
xchg
stc
pusha
xor
adc
pop
ret
imul
in
dec
ds
push
in
movsb
add
ljmp
divl
cmp
es
arpl
cld
stos
xchg
dec
jg
pusha
mov
neg
inc
pop
xchg
je
cmpsb
movsl
call
mov
xchg
add
cmp
xor
cmp
clc
fisttpl
test
scas
aad
jge
push
test
lahf
adc
pop
sbb
idivl
inc
or
xchg
xchg
daa
movzwl
ret
loopne
jecxz
dec
mov
push
enter
and
xor
jnp
cmp
jmp
add
fnstcw
repnz
es
adc
xchg
subb
call
repnz
lds
mov
loopne
cs
cmc
int
subl
push
lret
mov
mov
sub
dec
cmp
ret
insb
arpl
xchg
imul
dec
insl
jnp
sti
adc
xor
popa
push
push
aaa
mov
mov
pop
mov
cltd
push
inc
repz
adc
test
clc
mul
hlt
push
arpl
cld
fsubs
aad
and
ficompl
adc
push
pop
inc
pop
mov
mov
into
in
out
in
jle
mov
add
rcrb
insl
sub
rorl
mov
jo
icebp
push
mov
or
push
rcrb
sahf
sbb
jl
add
xchg
xchg
cmpsb
jmp
push
adc
mov
push
push
sub
movb
in
in
jne
insb
xchg
jecxz
mov
insb
je
shrb
push
sbb
sub
dec
jae
aam
or
xchg
lock
aam
mov
decl
into
jne
xchg
cmc
inc
jecxz
push
and
cltd
aaa
orb
sub
mov
sbb
mov
fistl
pop
mov
inc
test
fwait
sbb
and
push
cld
popa
push
enter
push
add
mov
push
je
adc
xchg
sbb
sub
cmpsl
adc
fimull
insb
dec
shrl
fisttpll
into
cmp
dec
push
cltd
dec
out
inc
mov
push
sti
mov
jp
inc
dec
sti
push
push
mov
push
mov
dec
out
cmpsb
fwait
js
and
lea
pop
out
and
loopne
jmp
testb
xchg
je
leave
leave
testb
cltd
jmp
pop
mov
popf
loop
inc
push
or
inc
dec
icebp
ret
popl
mov
jle
scas
imul
xor
mov
xor
pop
jb
inc
pop
insl
mov
push
or
out
jo
xchg
dec
jb
iret
jmp
shlb
push
jb
xchg
jg
add
push
aad
xor
cwtl
jg
in
dec
adc
rorb
ljmp
test
or
inc
jl
enter
hlt
fadd
inc
shr
pop
push
jno
sbbl
xchg
inc
dec
push
mov
xchg
inc
mov
sti
and
iret
testb
es
mov
mov
test
jmp
in
dec
pop
pushf
mov
scas
or
cltd
shlb
add
loopne
pop
outsl
or
or
ljmp
push
sbbl
js
fisttps
imul
mov
gs
ret
adc
xchg
and
out
ss
pop
mov
sbb
aas
push
ss
push
test
pop
adc
mov
jp
mov
leave
lret
mov
scas
js
out
sbb
int
and
cmp
out
push
sub
dec
mov
dec
jbe
loop
gs
test
sub
and
xor
pop
sub
shll
mov
imul
or
pop
jp
jnp
mov
mov
mov
mov
iret
xchg
lods
lock
dec
jnp
sbb
fidivrl
fbld
stc
dec
repz
sub
test
mov
jle
ljmp
in
rol
xchg
call
gs
mov
testl
pop
inc
mov
inc
xchg
adc
and
out
jge
out
sub
ja
adc
lds
xchg
dec
inc
sbb
scas
loop
stos
test
push
daa
sub
int3
dec
mov
cmp
mov
pop
scas
pop
mov
rcl
dec
roll
pop
cli
adcb
and
jae
sbb
pop
xchg
push
adc
cmp
stos
inc
or
test
test
das
es
jmp
out
out
mov
adc
push
add
inc
add
mov
or
mov
sub
inc
cmpsb
adc
shlb
scas
xor
cmp
sub
push
xor
int
mov
jg
mov
xor
mov
xchg
inc
xchg
mov
fcmove
pop
gs
iret
out
pushf
and
aas
lock
jmp
push
ss
je
sub
jbe
add
sub
divl
push
loop
lret
push
pop
pop
push
shlb
pop
push
aas
cmp
mov
shr
testb
lcall
xchg
cltd
jmp
inc
jg
imul
sahf
lods
pusha
mov
jg
roll
cmp
fbstp
mov
push
pop
xchg
int3
jb
pushaw
into
xchg
stos
sbb
xor
sbb
push
xor
repnz
xor
sbb
in
aaa
in
jecxz
push
push
dec
pop
in
aam
sahf
pushf
test
clc
inc
push
lds
out
adc
notb
mov
and
data16
mov
mov
dec
mov
jbe
ret
inc
pop
add
loope
cmp
mov
xchg
stos
iret
or
push
mov
cmp
push
aas
push
ljmp
mov
mov
out
inc
loop
fidivrs
jg
subb
inc
lods
or
sub
add
mov
stos
xchg
sahf
cmp
mov
mov
mov
xlat
xor
add
scas
scas
es
mov
dec
mov
jg
pop
pushf
jecxz
add
rorl
push
jecxz
popa
and
xlat
nop
bound
and
xorb
inc
cmp
fbld
rolb
xor
inc
rol
push
shrl
rolb
mov
dec
and
cmp
adc
sti
movsb
daa
loope
dec
add
xchg
add
inc
stos
fidivrl
incb
cmpsb
xor
jg
fmull
pop
or
movsb
jp
iret
sbb
adc
lods
adc
or
ds
sbb
ja
jg
lcall
jmp
mov
cmpsb
or
das
inc
pop
shlb
fnstsw
mov
cmp
jl
cmp
repnz
push
xchg
lret
cmp
sub
add
xor
aaa
mov
leave
xchg
in
int
into
inc
jmp
fistps
out
pop
jae
mov
aad
and
imul
cmp
icebp
jne
pop
lock
xor
call
jbe
sbb
inc
lock
ret
add
jmp
mov
sti
addr16
sub
sub
xor
cld
xor
nop
jbe
xchg
jg
call
xor
repnz
inc
mov
xchg
mov
int3
loopne
mov
mov
cmc
in
fwait
jb
or
add
or
and
shr
sub
or
js
xchg
dec
xor
scas
bswap
mov
jnp
mov
call
int3
insl
dec
pop
cmp
push
or
sub
mov
or
or
fildll
mov
cs
cs
cli
pop
shrb
pop
enter
imul
shll
int
sbb
sbb
loop
nop
int
imul
jecxz
push
in
xor
adc
fld1
ret
in
lret
xchg
sbb
lahf
imul
sub
sti
bound
bound
jl
mov
and
les
push
xchg
movsb
lods
or
push
les
lods
pop
mov
inc
leave
loope
ficoms
sbb
inc
shlb
sti
add
push
push
lea
push
shll
or
jmp
pop
pop
pop
jb
sub
pop
adc
or
push
add
lahf
dec
iret
cltd
aam
adc
ja
xor
lea
push
sub
mov
add
mov
push
in
fnop
fimull
dec
and
push
or
push
lds
mov
jge
push
cmp
adc
out
les
jno
jns
push
fdivl
pop
cmp
jae
pop
loope
inc
dec
and
mov
push
add
xor
pop
jo
pop
hlt
or
push
test
pop
rorb
mov
andb
mov
stos
pop
push
int
mov
int
inc
xacquire
jns
pushf
or
aas
xchg
imul
sarl
jp
enter
arpl
out
addr16
in
test
cli
leave
out
adc
icebp
jae
scas
sahf
sarb
mov
mov
jle
test
jg
outsb
call
fmuls
cltd
mov
into
stc
cs
adc
xor
xor
push
xlat
mov
fadds
adc
mov
mov
loopne
js
loope
jb
test
enter
bound
cmp
inc
js
xor
mov
pop
xchg
dec
cmp
stos
pop
or
repz
push
mov
pop
mov
jmp
das
pushf
or
test
and
in
xchg
jl
lret
test
xor
add
sub
icebp
fidivrs
cmpsb
push
push
pop
cmp
sahf
and
js
pop
movsl
mov
add
mov
lret
sbb
sbb
mov
pop
pop
jle
dec
and
sbb
mov
xchg
mov
push
pushf
jno
jle
or
cmp
mov
pop
pushf
imul
mov
and
das
rclb
imul
test
pusha
ljmp
stos
push
ret
gs
add
and
sbb
dec
pop
mov
mov
sbb
push
adc
mov
xchg
xchg
adc
je
and
cmp
fidivl
pop
mov
nop
pop
out
adc
out
add
xchg
sbb
insl
dec
jbe
out
insl
lock
mov
popa
push
jg
sbb
ja
mov
leave
fnstsw
lds
loop
push
cmp
int3
inc
shll
jae
icebp
popf
in
or
scas
icebp
mov
hlt
jbe
xchg
lea
js
in
push
mov
mov
jmp
iret
xor
movsb
ror
loop
and
mov
call
and
xchg
adc
js
pop
sub
fisttps
mov
jp
movsl
dec
pushl
outsl
outsl
dec
and
js
pop
scas
nop
mov
adc
push
pop
cmpsb
fs
jg
lcall
in
jl
jmp
stos
sbb
mov
mov
out
lock
xchg
fwait
daa
push
test
loop
leave
jg
sbb
filds
xor
mov
das
and
lcall
ss
cmp
inc
pushf
or
pop
push
sub
in
or
addr16
lea
mov
add
pop
or
pop
in
lret
mov
sub
adc
int
push
dec
loope
jo
sub
push
jge
lods
mov
or
aam
mov
aaa
mov
or
inc
dec
ja
mov
faddl
bound
lahf
sbb
lods
or
rcl
cltd
outsb
jno
pop
lea
insb
xchg
add
pop
test
jmp
push
es
push
bound
push
cltd
mov
mov
add
sti
mov
add
gs
and
and
mov
inc
jmp
insl
popa
push
leave
push
jmp
jno
das
or
push
popf
loopne
outsl
add
jmp
jns
adc
out
inc
ljmp
pop
mov
in
mov
or
stc
add
dec
nop
lea
scas
movsl
rorl
push
sbb
js
repz
in
enter
lods
push
xchg
push
mov
xchg
out
xor
sub
jns
mov
inc
xchg
mov
testl
insl
pop
fldl
cmp
mov
enter
outsb
push
jb
xchg
dec
popf
pop
aaa
stos
fdivl
ja
into
or
fwait
and
jae
fnstenv
dec
jmp
stc
pop
addl
xor
in
lock
push
lods
or
mov
jl
inc
ja
push
iret
loop
cmp
sbb
scas
jbe
mov
out
lret
lret
movsb
ret
jbe
fidivrl
cmp
mov
cmpsb
mov
cltd
dec
icebp
scas
push
popa
and
inc
ret
add
inc
add
cwtl
adc
and
push
in
data16
lock
mov
pop
rclb
lds
jns
pop
hlt
call
rcrw
sub
js
pop
aaa
jo
pop
leave
cltd
jg
cmpsl
es
mov
dec
inc
nop
hlt
jno
push
jno
sub
jnp
push
movsb
daa
jo
xor
mov
fisubs
pop
xchg
dec
cmp
jg
sbb
aas
lret
push
add
cmpsl
nop
push
stos
outsl
popa
cmpsl
push
lods
inc
bound
cmpsb
xchg
adc
subl
cmp
sub
ficompl
rcr
int3
imul
out
sbb
or
iret
and
push
mov
add
jae
testl
lahf
fsubl
xchg
popa
fcoms
jg
ljmp
add
cs
ret
popf
mov
loope
lock
sub
jp
int3
ja
xchg
test
mov
lcall
mov
pop
decb
std
aaa
jl
adc
add
jmp
xchg
inc
inc
inc
mov
loopne
divb
add
stos
mov
les
testl
in
xlat
stos
jo
aad
dec
sub
in
dec
subl
mov
ja
je
cmp
testb
icebp
jp
lret
lret
out
dec
dec
or
leave
sti
sub
jmp
sbbl
xchg
mov
or
mov
lret
mov
movsl
or
lds
push
jmp
or
fsubrl
sbb
jns
cmpsb
sub
int
adc
cmp
mov
pop
push
sub
dec
arpl
aas
aas
jecxz
rolb
cld
inc
imul
sub
jecxz
lock
ja
pop
insb
push
add
or
dec
xchg
push
test
insb
mov
rclb
rolb
push
aad
movsl
mov
addr16
add
inc
int3
inc
idiv
dec
lds
jl
lcall
out
std
test
add
add
push
pop
or
test
sbbb
ds
push
add
pop
xchg
adc
arpl
fucom
mov
add
mov
sti
js
push
arpl
jno
push
inc
outsb
mov
pusha
ss
loope
jnp
push
or
orl
pop
mov
push
dec
jmp
pop
aas
std
jo
xor
lret
dec
mov
gs
popf
dec
push
aad
and
pushf
or
jnp
push
pop
stos
loope
push
nop
pop
out
cwtl
in
adcl
ss
jo
mov
push
or
add
ja
xchg
in
aaa
sti
mov
push
shrb
xor
cmpl
mov
dec
loope
test
pop
mov
call
pop
sbb
lods
adc
lea
filds
clc
jge
lods
shl
jb
lret
mov
push
adc
fiadds
cli
mov
cmp
jo
add
mov
fs
mov
and
sub
cmp
cli
test
lret
mov
addr16
xchg
pop
xor
jns
test
repz
dec
mov
adc
adc
insl
fists
add
dec
or
iret
stos
fistpll
push
imul
pop
rclb
xor
xor
in
add
sub
nop
jp
lods
jg
in
fcoml
cmpsb
movq
adc
xchg
mov
fwait
or
stos
dec
jb
mov
pop
jl
dec
nop
es
and
xlat
pop
fwait
sti
mov
pop
pop
xchg
xlat
jl
mov
lock
push
pop
push
or
ret
test
mov
aaa
sub
sub
add
negl
xor
cmp
xchg
rorb
jge
or
push
lods
out
or
sub
call
dec
mov
lahf
lock
push
xchg
ljmp
rorb
cmp
lods
imul
adc
lahf
push
in
ret
push
pop
xorl
outsb
cmp
xchg
shlb
add
inc
mov
pop
mov
arpl
inc
adc
gs
roll
xor
ret
subb
repnz
mov
and
imul
jae
mov
mov
adc
sub
loope
sub
xor
sbb
dec
jae
jae
test
cmp
movsb
int3
inc
rcrl
mov
sub
icebp
leave
xchg
lock
xchg
es
aaa
push
shlb
lret
insl
nop
or
sub
lods
xor
add
push
mov
and
test
cmc
adc
stos
loopne
inc
xor
adc
cld
push
inc
jmp
test
xchg
in
pop
cmp
mov
loopne
mov
hlt
dec
call
xor
xchg
out
xor
sbb
fs
inc
lret
adc
fwait
call
aaa
inc
and
movsl
push
arpl
pop
push
mov
dec
aam
sbb
aam
add
aad
mov
pop
test
js
clc
xor
adc
inc
gs
push
in
dec
out
dec
js
es
mov
sub
inc
jle
jbe
inc
and
xorb
adc
aaa
neg
out
addl
daa
arpl
fwait
mov
es
in
stos
adc
sbb
lret
fisttps
mov
inc
jbe
popa
fwait
outsb
fldenv
mov
ja
xor
cmpsb
pop
sub
jb
jp
and
xor
ficompl
and
aaa
mov
inc
scas
nop
mov
out
jae
int
mov
cmpsb
xor
cmp
loopne
outsb
dec
mov
cmp
stos
pop
cmp
cs
pusha
cmp
push
push
das
les
push
cltd
xchg
add
adcb
ss
dec
xor
push
or
shrb
outsl
cmp
mov
int
cmpsl
stc
movsl
rclb
mov
fcmovne
cmpsb
test
popf
mov
dec
lret
and
jbe
cltd
pop
addr16
movsb
jmp
jns
dec
mov
fwait
mov
mov
les
lcall
aaa
and
jl
sahf
das
inc
sub
jns
sub
cli
pop
mov
pop
fimull
adc
movsb
pushf
cwtl
jns
movsl
inc
mov
ds
cmp
sbb
jb
leavew
pop
push
or
sub
xchg
mov
pop
xor
xor
xor
xchg
xor
dec
jns
mov
dec
add
or
test
jl
xchg
push
mov
test
xlat
push
pop
rcr
scas
xor
dec
lds
cld
scas
mov
adc
jg
in
repz
dec
mov
or
sbb
pop
orl
shlb
leave
mov
mov
inc
into
push
sbb
mov
repnz
ds
pop
jae
fbstp
daa
hlt
shrl
int3
mov
or
pop
cs
inc
add
cmp
in
mov
and
repnz
mov
nop
push
sub
sbb
mov
push
push
test
mov
lods
or
xor
fs
adc
ror
inc
cmpsl
sub
sti
popf
pusha
dec
call
rcll
sbb
sbb
fiaddl
push
xchg
push
das
and
add
call
pushf
jl
repz
mov
iret
or
test
test
imul
add
cmp
ja
ljmp
rorb
test
dec
cld
dec
xchg
cmp
dec
sbb
daa
mov
data16
and
stos
pop
mov
jmp
repz
fs
mov
adc
mov
in
push
imul
es
popf
fs
pop
insl
stc
icebp
pop
stos
mov
add
mov
out
shll
jae
out
je
mov
mov
addl
or
jl
aas
jne
jns
arpl
xlat
stc
pop
jbe
dec
outsb
sbb
mov
dec
pop
and
xor
es
test
loope
fnstsw
mov
pushf
mov
std
mov
jp
imul
inc
lock
sbb
xchg
xchg
lds
push
cld
loope
xchg
scas
gs
rclb
dec
push
in
dec
cltd
push
xor
xor
ds
jo
jl
inc
jb
ret
push
shl
aas
jno
daa
lods
sbb
pop
pop
mov
andl
cmp
push
mov
jno
aam
mov
lods
cs
je
sbb
mov
mov
mull
inc
adc
xchg
cs
mov
cmp
mov
cmp
fildll
or
push
fsubs
popf
sub
rol
cmp
clc
dec
mov
mov
ret
sub
mov
sbb
in
xchg
mov
push
mov
aad
inc
cmp
cmp
add
outsb
popa
adc
xchg
stos
mov
out
jge
pop
adc
sub
or
inc
mov
lods
decl
mov
arpl
imul
push
inc
mov
sarb
xchg
shlb
sbb
add
ds
shrl
out
outsl
fcmovnbe
dec
out
jle
lods
movsb
loope
hlt
cmp
pushf
inc
popa
adc
cwtl
outsl
addl
pop
xchg
lcall
and
rolb
clc
jae
jl
xchg
sahf
adcl
jg
adc
rcrb
inc
dec
jnp
sbb
movsl
enter
mov
inc
nop
jp
mov
add
xchg
push
fcmove
jecxz
insb
mov
sbb
push
pop
add
jge
fstl
jno
pop
test
std
pop
lahf
pop
movsl
push
js
sbb
fsubrs
pop
fsubl
popf
adc
inc
orl
mov
inc
mov
jbe
enter
or
xchg
or
xor
cli
mov
sbb
repz
dec
aaa
add
int3
push
push
imul
out
nop
outsb
js
cmp
mov
and
popf
and
test
loope
sub
aad
into
iret
lds
or
int3
jmp
add
mov
addr16
icebp
inc
sub
hlt
icebp
push
add
pop
cs
je
mov
cmp
inc
mov
jae
xrelease
xor
dec
xor
std
xorb
cmpsl
xchg
enter
xchg
insb
adc
xor
lret
clc
insl
mov
pusha
es
mov
pop
mov
call
test
mov
fldl
adc
cmpsl
mov
into
mov
inc
add
pop
arpl
cwtl
dec
dec
stos
xor
jb
adc
addr16
mov
mov
mov
xchg
pop
dec
push
ds
xor
jb
push
mov
pop
add
shlb
cs
push
loope
js
inc
test
lret
sbb
mov
pusha
ds
mov
inc
aas
insb
push
xor
outsl
mov
xchg
or
lods
fidivs
pushf
outsl
jp
mov
lahf
mov
add
mov
xchg
int3
mov
dec
inc
test
scas
pop
push
add
das
lahf
jnp
push
loopne
int
xchg
andl
in
cmpsl
ret
add
adc
aaa
push
insl
stos
mov
push
or
pop
push
push
lods
lret
mov
lods
mov
pop
jge
testl
mov
dec
out
sbb
push
push
fwait
lock
or
xor
out
jns
jae
insl
pop
fstps
jae
fxch
pop
sub
xchg
xchg
mov
inc
incl
ficoms
test
mov
ds
ljmp
repz
ret
xchg
or
xchg
pop
jle
mov
xchg
dec
shl
gs
dec
cmp
sysenter
push
xor
in
jae
das
push
xchg
push
aam
les
mov
inc
jbe
sub
ds
jle
shl
or
setns
push
push
popa
out
cmp
adc
popa
pop
out
ss
jnp
stc
mov
test
jne
stos
mov
sbb
jb
mov
mov
push
push
int
ja
ret
push
ret
jmp
mov
mov
aad
push
movsb
xchg
push
jae
bound
incb
pop
das
push
mov
or
xor
mov
mov
mov
adc
mov
fstp
inc
scas
fidivs
nop
sbb
andl
push
sub
inc
and
test
jae
mov
data16
stos
ljmp
stos
aas
sub
dec
cmp
jg
mov
rcrl
in
push
aam
popaw
aaa
push
mov
test
jmp
rcll
add
testl
test
enter
mov
ljmp
cmp
inc
std
fwait
or
roll
dec
arpl
mov
mov
or
lahf
cmpb
fiadds
add
pop
push
dec
jno
flds
push
lahf
mov
add
sbb
popf
mov
stos
cmp
add
push
jl
ret
jge
out
push
test
pop
sarl
iret
mov
xlat
pop
popf
jg
xlat
movsb
mov
movsl
xchg
add
mov
pop
jp
mov
test
int
adc
adcl
push
dec
ret
lock
mov
repnz
insb
or
lods
mov
mov
sub
fs
ljmp
into
and
push
pop
je
daa
nop
int3
mov
pop
decl
test
shl
jecxz
pop
lahf
jb
dec
imul
out
out
xor
jo
pushl
cmc
daa
push
dec
nop
adcb
push
imul
rcrl
dec
jp
sbb
ss
sbb
lahf
clc
lea
hlt
sbb
loop
pop
sbb
cltd
push
shll
push
add
inc
or
scas
dec
mov
mov
mov
xor
test
xor
push
mov
popf
cltd
mov
sbb
pop
push
sti
lods
daa
jmp
movsl
movsb
hlt
je
sahf
sub
jmp
jo
and
test
insb
fdiv
adc
cs
aaa
in
rcrb
leave
ljmp
in
mov
cmp
cmp
movsb
inc
repnz
enter
sbb
nop
mov
xor
and
push
cmp
data16
js
jmp
jae
dec
sbb
sahf
stc
cs
addr16
push
dec
in
sbb
mov
inc
movsb
cwtl
cmpsl
mov
and
jne
leave
aam
and
push
cmp
jo
pop
mov
int
pushf
or
enter
add
bound
adc
xor
int
or
dec
jmp
xor
enter
and
jno
es
es
or
lods
sbb
push
jne
pop
scas
and
test
lret
ret
pushf
pop
dec
jae
lea
movsl
clc
imul
add
adc
je
xchg
ds
cmp
xchg
sbb
loopne
cmp
or
dec
movsb
pop
sub
xchg
cmpsb
mov
add
add
xor
and
enter
pop
popa
xor
je
scas
das
xor
stos
loopew
xchg
rclb
pushaw
jnp
pop
sbb
clc
and
add
ljmp
adc
out
cmp
fwait
push
popf
nop
aaa
cli
mov
scas
orb
stc
pop
add
das
inc
test
das
iret
hlt
inc
and
pusha
push
mov
clc
mov
or
xchg
mov
into
mov
int
push
mov
xchg
js
xor
push
notb
mov
cwtl
loopne
das
stos
lea
fs
ret
jle
mov
push
das
push
mov
lcall
xor
mov
inc
jnp
mov
push
lock
adc
mov
mov
push
xchg
out
lea
and
sub
mov
aaa
movsb
lods
daa
mov
mov
stos
hlt
nop
sbb
add
jle
inc
cltd
movnti
and
leave
int
popa
sbb
dec
jg
ds
sbb
sahf
add
pop
jnp
jp
insl
inc
pop
stc
call
pop
pop
push
packsswb
js
xchg
jno
mov
mov
mov
jae
and
push
out
movsl
jne
std
xor
pop
repz
nop
dec
xchg
jge
movsl
lahf
iret
cs
xchg
cmpsl
dec
push
mov
inc
bts
out
inc
jae
dec
test
xor
inc
adc
insl
push
addl
adc
inc
faddl
ds
add
movsb
aaa
mov
cmp
ds
loope
pushl
stos
movsb
inc
mov
mov
and
cmc
sbb
xor
jge
cli
fs
shll
push
inc
sahf
roll
sub
aaa
popa
mov
mov
repnz
popf
pop
mov
shlb
push
dec
inc
sub
test
and
pop
inc
inc
cmp
data16
cmpsb
mov
pop
adc
fdivrl
test
inc
adc
mov
lock
add
andb
push
pop
xor
fwait
push
aam
xchg
leave
outsb
cmp
les
lretw
std
test
sahf
imul
ret
in
mov
cmpsb
sti
outsl
mov
mov
movsl
loopne
outsb
mov
cmp
add
dec
test
mov
dec
movsb
pop
cld
dec
adc
xor
mull
jnp
pusha
aas
inc
lods
xor
lods
jo
jns
pop
iret
adc
lods
xchg
out
and
insl
push
mov
push
pop
stos
sbb
aas
sbb
push
imul
lret
stos
adc
inc
jbe
inc
push
test
and
addr16
jle
push
jle
mov
scas
mov
sbb
sbb
sub
out
or
sbb
mov
mov
xchg
add
fimull
sub
cltd
cmp
jl
lock
mov
int
stc
mov
sbbb
int3
sub
int3
dec
cmpsb
mov
arpl
jo
mov
out
jge
setp
cld
pop
add
jo
pusha
cwtl
lret
add
dec
clc
hlt
fldenv
sub
sub
nopl
or
pop
xchg
test
loopne
repz
insl
cmpsl
das
stc
cmc
adc
xorb
and
push
add
cmp
out
dec
inc
cs
loope
subl
mov
insb
inc
ja
cmp
out
inc
int
daa
sub
push
inc
sbb
pop
inc
mov
ljmp
jo
push
int
pushf
push
dec
outsl
sbb
rolb
mov
push
lock
enter
out
jg
push
jo
int3
fsubrp
pop
cmpsb
pushf
push
lret
adc
xor
inc
cmpb
icebp
cltd
ja
scas
or
fdivrl
iret
das
cli
icebp
repnz
cmp
lods
ret
int
cmp
clc
int
inc
or
sub
adc
cmpsb
mov
pushf
inc
es
mov
jno
or
adcl
inc
and
movsl
pushl
cld
pop
xor
sub
rolb
lahf
roll
mov
bound
mov
pop
dec
test
jp
shlb
push
and
add
adc
jne
out
cmp
cwtl
bound
sti
clc
dec
subl
pusha
xor
push
jno
mov
fists
push
mov
or
push
mov
shlb
incl
sub
and
xor
dec
lock
test
dec
xchg
push
inc
sub
sahf
mov
mov
out
adc
xchg
ja
xchg
out
stos
fbld
dec
sub
xor
push
pop
and
cmp
lods
push
das
push
jmp
mov
lods
adc
leave
xlat
add
sub
add
pop
int
rol
lock
ds
jae
lcall
mov
dec
fcompl
pop
adc
daa
repz
xchg
or
fldenv
mov
jbe
arpl
sarb
fmuls
inc
enter
mov
push
ds
jb
pop
push
cmp
mov
sub
inc
aam
xchg
jne
push
adc
sbb
and
leave
xchg
int
dec
repnz
xchg
mov
out
lds
sub
inc
mov
inc
loopne
leave
dec
jne
and
cltd
out
xor
aaa
fistps
je
movsb
or
lods
adc
lret
dec
jecxz
insb
test
push
mov
pop
jmp
push
xchg
shl
xchg
jb
adc
push
aad
dec
pushf
inc
cmc
repz
cmpsb
push
or
pop
bound
sbb
pop
push
mov
xor
xchg
adc
pusha
imul
dec
push
xlat
les
jge
outsl
sahf
mov
and
xor
and
cmc
rcrb
mov
add
aaa
or
xor
ficoms
push
jg
mov
repz
xlat
stos
push
jge
sahf
repz
pushf
dec
jo
xchg
xchg
sub
test
add
pop
popa
mov
cs
pushf
ret
cmp
mov
jno
cli
scas
jnp
pop
cwtl
push
outsl
jnp
jns
jmp
jbe
jo,pn
fisttpl
inc
inc
imul
add
cltd
jae
ss
popf
shr
aaa
aaa
push
mov
xchg
xor
dec
mov
hlt
in
imul
sub
xchg
jb
test
mov
add
jb
dec
sbb
dec
mov
sbb
stc
dec
outsl
xor
mov
rcrl
in
cmp
lea
xor
imul
into
and
fs
push
adc
das
mov
pop
push
jmp
into
aas
xlat
sub
push
push
in
test
push
adc
iret
and
insb
mov
adc
inc
fmull
out
xor
loopne
sbb
test
mov
lock
mov
and
roll
xchg
adc
gs
addr16
sbb
adc
lret
xchg
mov
leave
cld
pop
cmp
jae
loop
in
pop
cmp
int
or
pop
mov
jge
fs
addr16
arpl
mov
leave
imul
cld
xor
xor
inc
pmulhuw
fs
sahf
data16
jo
adc
sbb
insl
cmp
mov
pop
rcrb
push
add
mov
emms
sti
dec
jg
jbe
adc
test
dec
push
sbb
xchg
xchg
call
dec
xchg
aad
jns
sub
push
lret
ljmp
mov
outsl
aaa
cmp
mov
outsl
lret
or
and
inc
lods
outsb
fwait
shlb
push
ljmp
js
pop
into
test
jno
jno
insb
les
out
test
shlb
popf
push
popf
jmp
loopne
adc
pusha
pusha
push
fcom
pop
test
test
cmpsb
mov
repnz
arpl
pop
mov
push
or
lea
mov
stc
fiadds
lret
lcall
or
in
mov
xlat
and
ror
inc
stc
dec
test
aaa
xlat
push
dec
sub
xchg
loope
faddl
stc
xor
pop
mov
imul
pushf
loope
pop
jmp
dec
lods
insl
mov
imul
xor
movsb
mov
outsb
pop
push
aaa
sti
inc
imul
fsub
rclb
jo
scas
jnp
mov
xor
imul
pop
jmp
fisubl
sbb
mov
mov
push
repz
leave
fadd
and
repnz
cli
in
pusha
stos
sub
fcompl
jp
or
sub
and
arpl
push
fsts
dec
xor
jnp
and
aad
into
lcall
mov
adc
push
sarb
xor
xchg
adc
les
aam
mov
sub
sub
pop
fxch
shr
imul
dec
mov
fisubl
sbb
aaa
sbb
cmp
sub
lods
orb
cmp
adc
sbb
out
repz
ja
inc
xor
adc
cmp
into
push
in
aam
pop
test
aas
into
fwait
icebp
jge
dec
pop
sti
jne
jmp
repz
xor
sbb
je
cmpsl
in
jp
ss
sbb
sub
and
add
xchg
cs
jne
mov
jno
pop
pop
sub
xchg
adc
pop
add
cmp
pop
pop
cmp
mov
ds
ja
xchg
jns
adc
vpcomw
lret
lods
addr16
xchg
js
dec
ss
out
fisttps
mov
out
sub
loope
rclb
xlat
mov
adc
mov
jmp
push
lods
xor
cmpsb
dec
or
lds
sub
pop
out
fidivs
pop
out
push
mov
add
inc
cltd
roll
jp
das
sbb
dec
lds
dec
xchg
inc
leave
dec
jmp
add
aam
cmpsl
repz
mov
sub
lock
cmp
pop
push
mov
test
ljmp
push
outsl
jl
and
jns
sbb
aas
popa
jbe
adc
adc
mov
mov
popa
and
push
pop
xchg
xor
pop
sub
pop
jmp
dec
cmp
mov
and
and
add
addl
jle
aad
pusha
test
fdivr
scas
inc
call
push
orl
test
jnp
cltd
xchg
into
incl
mov
data16
cmpsl
stc
cmpsb
inc
push
ficomps
rcrl
ret
and
inc
es
out
cmpsl
inc
adc
lock
or
outsl
inc
out
mov
cld
push
call
xchg
ja
test
xlat
testl
lods
or
lret
xor
push
lret
movsb
pop
out
in
loope
push
lds
ret
sub
xchg
mov
cwtl
out
xchg
lahf
out
test
and
mov
xchg
enter
ljmp
cmp
stos
les
cltd
mov
je
fcmovb
sub
xchg
xor
ljmp
je
insb
sbb
outsb
add
mov
cs
cmp
push
jle
scas
pop
xchg
xor
inc
mov
or
nop
mov
dec
and
xchg
dec
sbb
sbb
test
push
int3
jp
data16
and
add
push
pop
insb
xor
lds
sub
mov
cmp
inc
push
inc
notl
dec
sub
dec
repnz
mov
out
fs
inc
fisttpl
outsb
ljmp
loop
icebp
and
mov
dec
mov
into
mov
test
jae
loop
jl
hlt
add
jae
inc
sbb
mov
aad
pop
mov
and
inc
sub
adc
shufps
lret
popf
wbinvd
dec
push
inc
add
cmp
lock
inc
sub
movsl
sbb
adc
scas
imul
shrl
mov
ljmp
and
in
pop
cwtl
imul
repnz
jbe
aaa
les
and
mov
xorb
jbe
dec
sub
pop
imul
pusha
adc
mov
roll
mov
loope
stc
negl
iret
or
and
inc
push
jp
jp
pop
fwait
pushf
out
sbb
lahf
mov
push
scas
pop
xchg
out
mov
push
dec
dec
sbb
fiadds
add
lods
clts
stos
mov
cmpsb
xor
scas
pop
fimuls
repnz
mov
pop
out
scas
or
mov
mov
pop
mov
push
int
xor
mov
jo
mov
in
out
jo
mov
sti
mov
push
sbb
sub
in
stos
mov
mov
mov
repz
and
ficompl
sahf
mov
repnz
sahf
sbb
cwtl
movsb
lock
bswap
xlat
xchg
lahf
jne,pt
test
and
adc
adcl
mov
cmc
sahf
out
out
andl
mov
mov
sub
cs
out
inc
dec
popf
inc
clc
xchg
js
test
fidivrl
cmp
add
ret
and
jns
or
add
inc
push
xor
addb
cld
inc
push
jae
mov
ret
shr
push
loope
dec
inc
jmp
call
cmp
inc
stc
inc
mov
aaa
xchg
push
add
mov
les
cmp
ja
movsl
push
pop
lcall
fistl
xor
stc
dec
dec
jnp
adc
cmp
dec
push
mov
sbb
mov
mov
fiaddl
popa
pop
rcrb
stos
notl
xchg
push
dec
push
aaa
sbb
aam
lods
test
mov
cmpsb
and
add
push
and
stos
mov
nop
xor
jle
sahf
inc
test
shl
out
xchg
test
adc
jmp
cmc
jnp
test
fisubrs
pop
icebp
xchg
fsubrp
rcll
or
addr16
push
inc
lahf
sbb
dec
xchg
sbb
js
cmc
pop
imul
adc
das
or
jle
cwtl
js
jno
sarb
in
push
inc
xor
dec
mov
xlat
xchg
idivl
cmpsl
in
mov
aad
sar
push
pop
mov
sbb
jle
push
add
arpl
movsb
rcrb
add
inc
cmc
jmp
outsb
aam
xor
dec
push
jns
mov
hlt
iret
xchg
stos
inc
mov
mov
scas
jl
and
pop
cmpsl
mov
jmp
adcb
sbb
lods
ret
cli
cmpsb
sub
ds
cmpsl
test
add
mov
inc
hlt
dec
stos
cmp
sbb
adc
int
push
push
pop
mov
jle
in
pop
pop
xlat
jle
and
les
ret
mov
push
mov
insl
stc
aam
cltd
outsl
negl
stos
insb
lcall
mov
xchg
xor
xchg
jno
pop
add
std
pop
add
adc
hlt
push
fnsave
repnz
icebp
mov
aaa
scas
in
push
lock
cli
cmp
sbbl
movsb
push
popf
int3
idiv
or
adc
xor
mov
pop
sahf
pop
xrelease
xor
insb
stos
jnp
xchg
mov
stos
jbe
xor
jmp
out
or
negb
inc
enter
xchg
xchg
jmp
xlat
mulb
outsl
insl
lret
push
jo
xchg
imul
rclb
inc
push
cmpsl
sub
jle
mov
int3
sti
shl
adc
insl
mov
inc
inc
jbe
pop
cmp
sbb
fistl
jae
fs
push
jle
popf
int3
loopne
addb
dec
sbb
and
das
adc
sbb
xchg
hlt
les
test
ja
cmp
and
insl
pop
push
scas
jb
mov
dec
mov
mov
jg
xchg
jmp
mov
sbb
xchg
and
jo
ss
cmp
add
adc
jg
inc
cld
fidivrs
mov
aam
scas
loopne
mov
dec
push
mov
or
cwtl
hlt
sbb
xchg
pop
sub
cltd
sti
test
imul
and
push
cmp
inc
cmc
adc
xchg
xchg
add
icebp
adc
sub
sti
mov
xor
aas
push
mov
cmp
in
pop
xchg
jmp
repnz
in
push
gs
dec
mov
fdivp
mov
adc
xor
dec
and
jge
pusha
sub
xchg
mov
shrl
jp
repnz
ljmp
jns
push
push
lds
or
xlat
fstp
dec
and
inc
in
mov
les
pop
sbb
cwtl
lret
jo
jno
mov
fists
and
popf
pushf
fsts
inc
pop
aam
mov
pushf
mov
pusha
adc
push
pop
mov
movsl
lret
shl
aas
jmp
jl
inc
movsb
push
es
add
jb
ljmp
jae
dec
lea
je
shlb
outsl
sub
std
fsubrs
sbb
and
ja
lock
mov
xor
inc
xor
shrb
mov
lds
lret
mov
xchg
push
and
xor
sbb
sub
mov
or
cmp
cwtl
outsb
mov
cltd
sub
sbb
pop
and
add
iret
mov
and
daa
mov
mov
jnp
bound
push
mov
dec
adc
xchg
dec
or
mov
and
mov
sahf
inc
or
fldl
adc
xchg
fbstp
test
add
pop
hlt
inc
jp
xchg
icebp
xor
xlat
xor
add
and
clc
cmpsb
loop
out
sbb
cmpsb
test
cmp
rcr
xorl
pop
lods
adc
xchg
xor
js
daa
subl
dec
mov
cmpsb
sbb
xchg
cli
adc
hlt
aas
inc
sub
fidivs
adc
arpl
pushf
aam
aaa
jns
push
clc
xchg
loope
inc
pop
inc
mov
push
push
jbe
lahf
pop
mov
mov
xrelease
sbb
iret
cmovae
je
shrd
pop
xlat
jp
data16
mov
pcmpeqd
pop
mov
shll
test
push
mov
mov
fimuls
cmpsb
sbb
enter
dec
aad
pop
sub
leave
mov
xor
addr16
mov
dec
push
aas
sbb
push
fwait
pusha
mov
lea
adc
inc
bsf
sahf
dec
js
cmp
jmp
rcrl
cmp
jne
push
sarl
xchg
addr16
adc
mov
pop
adc
fwait
mov
mov
fs
push
dec
inc
jbe
rcl
jbe
sbb
test
psllw
bound
int
nop
inc
mov
std
movhlps
cmp
std
scas
lahf
dec
gs
lret
pop
add
data16
pop
mov
mov
pop
popl
mov
jmp
mov
inc
rcrl
jns
inc
inc
and
cmp
add
mov
mov
insb
inc
ret
jmp
xchg
jb
andl
inc
lds
sbb
pop
mov
enter
int
into
popa
ds
jecxz,pt
push
fcoms
lahf
xchg
je
cmp
mov
call
push
jmp
pop
bound
insb
and
insb
mov
and
imulb
xchg
xlat
rdmsr
stc
addr16
pushf
or
sbb
lahf
test
lret
or
testb
cmpl
mov
stos
mov
add
jo
mov
jbe
cmpsb
sub
lea
mov
cmp
lcall
jmp
enter
xchg
lods
fidivrs
das
fdiv
inc
mov
sar
pop
cmp
test
xor
dec
leave
sub
pop
ror
shrl
mov
jge
pop
push
rcrl
aad
jae
sbb
out
imul
xchg
pop
pop
adc
ret
jno
jne
fisubl
mov
lahf
mov
xchg
fwait
into
addr16
push
or
es
add
xor
sub
xchg
or
les
jge,pt
cmp
scas
incl
mov
orb
sub
cmp
scas
into
fildl
imul
out
outsb
lret
xchg
push
sbb
pop
mov
fwait
lahf
xor
aaa
cmp
or
addr16
xchg
dec
les
jns
push
mov
stos
jo
aaa
lds
push
shll
push
mov
mov
cs
sub
xor
aaa
adc
out
fnsave
inc
xor
pop
xor
inc
pushf
test
xchg
outsb
push
loope
sbb
cmp
aam
mov
lods
or
imul
ror
add
dec
pop
push
into
inc
testl
aad
inc
jmp
push
insl
and
adc
cmpsl
int3
pop
or
mov
dec
push
in
jge
sahf
enter
mov
jge
shlb
pop
sub
lock
mov
mov
jmp
inc
in
das
mov
xor
cltd
mov
sub
in
jae
sbb
lds
mov
fucomp
addb
push
rolb
fs
mov
mov
rorb
xchg
or
addl
and
call
int
or
cmp
mov
sub
fcmovnb
mov
jl
sub
and
add
outsb
out
idivb
pop
mov
xor
icebp
aas
lock
psubd
sbb
push
loop
test
out
push
out
in
dec
sub
clc
scas
xchg
shr
pop
cmp
shl
pop
and
xchg
pop
dec
jp
out
inc
shl
sbbl
lods
loope
daa
daa
popf
add
add
hlt
out
xchg
push
sbb
ja
fsubrl
pop
jmp
idivl
inc
data16
mov
out
mov
aad
shl
popf
sbb
arpl
xchg
pop
stc
sbb
mov
mov
out
lcall
sbb
and
push
scas
aaa
inc
testb
push
mov
out
push
sbb
bound
aam
into
loopne
sub
pushf
dec
sub
shlb
cmp
and
jno
mov
mov
adc
hlt
adc
lahf
aad
xchg
mov
adc
inc
neg
pop
pop
rorl
push
inc
andl
jl
loope
or
push
sbb
cmp
lock
dec
push
pop
sub
sbb
scas
les
test
int
jmp
xor
test
cmp
imul
pop
ljmp
subb
call
jge
push
jne
leave
clc
lahf
xchg
andb
lahf
mov
arpl
ret
popa
out
pop
xor
push
rolb
jb
push
jl
lea
arpl
push
jae
pop
xlat
inc
jmp
jo
xchg
les
push
clc
inc
cli
lret
jle
jbe
fimuls
lahf
pop
lea
and
mov
test
sub
mov
jmp
out
lds
sbb
sub
xchg
cld
mov
push
adc
shlb
add
pop
mov
fnstenv
push
rcrb
mov
cltd
cs
adc
jb
add
int3
pusha
push
dec
cmp
sbbb
sbb
sbb
loop
push
sti
arpl
inc
jnp
scas
pop
aam
mov
sub
pusha
scas
add
imul
mov
les
push
cli
movsl
test
adc
pop
push
xchg
jb
xlat
mov
xor
in
nop
daa
mov
scas
out
adc
insb
mov
dec
addl
js
push
xchg
mov
sub
push
xor
jne
pop
je
imul
cmc
mov
mov
fwait
dec
push
repnz
stc
sub
fiaddl
push
mov
push
dec
and
out
les
lods
sub
lahf
roll
mov
loope
adcb
test
push
sti
addb
xor
pop
jmp
push
sbb
push
push
ret
cmp
mov
xor
jecxz
call
lea
dec
pop
jne
rorl
div
push
pop
and
out
push
mov
dec
mov
mov
imul
push
adc
jb
pop
mov
inc
jmp
and
adc
pop
or
mov
adc
stos
fdivs
jne
mov
addb
lock
and
sbb
stos
or
xlat
mov
pop
addl
icebp
fs
mov
dec
dec
or
adc
mov
sarl
lret
test
stos
test
mov
ss
into
mov
call
mov
cmp
clc
jne
into
push
dec
jle
mov
mov
ret
dec
fadd
in
pop
arpl
lds
in
cmp
fldl2t
movsb
xchg
add
jb
leave
stos
fs
fldl
imul
mov
inc
jecxz
push
mov
jae
mov
cmp
out
mov
int3
mov
decl
jecxz
fstps
sahf
pop
iret
sbbb
adc
dec
jne
dec
or
pop
fists
out
cmp
aad
inc
popa
addr16
xor
inc
scas
enter
adc
mull
mov
fsubl
fld1
push
push
push
test
pop
dec
and
mov
push
push
pusha
lcall
std
jl
push
repnz
cmc
mov
push
sub
lea
pop
les
push
cltd
or
mov
lods
xchg
rcll
mov
inc
mov
inc
push
test
mov
jp
sbb
pusha
mov
xchg
push
jg
ss
test
hlt
push
lods
and
push
dec
or
call
lods
test
aam
nop
xchg
inc
mov
incb
adc
jg
sub
stos
cmp
push
sbb
scas
andb
inc
jge
dec
cmp
das
fwait
stos
push
pusha
roll
mov
jno
aaa
pop
ja
scas
dec
cmc
ljmp
out
push
das
or
sbb
xor
inc
test
in
mov
lcall
ss
jecxz
xlat
lcall
out
aaa
pop
mov
sub
fpatan
aaa
fnsave
pop
push
cmp
aas
aam
cltd
xchg
movsl
mov
js
xchg
mov
fistps
shll
jns
add
dec
xor
pop
rep
push
xor
push
jnp
and
pop
ljmp
js
sub
insb
fdiv
sub
arpl
sarl
push
divb
adc
mov
std
lret
push
scas
stos
shll
pop
mov
aam
pop
mov
sbb
hlt
fmull
shll
dec
mov
inc
inc
adc
lods
jge
add
dec
loop
imul
js
push
mov
into
mov
fldcw
int3
lods
xchg
inc
stc
out
dec
scas
sub
cmp
cmp
mov
je,pn
mov
daa
inc
test
adc
sub
mov
fsubrl
clc
jbe
pushf
rorl
jno
outsb
mov
mov
movsl
jmp
test
mov
gs
pop
add
shrw
pusha
mov
fistl
ficomps
jns
or
inc
mov
fmull
pop
pop
mov
fs
sub
es
movsl
cmp
and
daa
aas
jae
mov
gs
ja
sahf
sbb
or
in
sub
cmpsb
sub
lret
lret
jae
fldcw
push
and
imul
inc
push
or
mov
pop
or
gs
out
jmp
gs
xorb
xor
jb
jb
or
pop
leave
jbe
sbb
stc
outsl
xchg
cmp
into
test
stos
call
mov
fiaddl
mov
enter
sbb
jbe
mov
js
jae
dec
sub
cmc
fstl
shll
or
cmp
leave
iret
clc
cmpsl
sub
fnsave
call
test
orb
cltd
test
sbb
fwait
rcr
in
cmp
cmp
test
sub
xor
push
cmp
dec
and
and
popl
mov
pop
mov
cmp
enter
daa
imul
bound
jae
cmp
stos
dec
push
out
push
xor
dec
out
popa
cmc
sbb
cmp
jne
into
fsubs
inc
loop
cmpsb
jns
push
cmpsb
push
xchg
mov
push
subb
scas
es
enter
ja
fnsave
mov
jmp
sub
inc
inc
js
push
dec
lds
arpl
push
add
inc
push
cli
pop
loopne
cmc
fiadds
mov
sarb
pop
lcall
enter
loop
push
lahf
jl
pop
pop
nop
xchg
fcomps
icebp
cmp
add
xchg
mov
jb
mov
cltd
fwait
insl
iret
or
adc
stos
lret
dec
icebp
jne
mov
es
jmp
pop
aaa
js
aas
fdivl
and
dec
dec
subl
jle
mov
inc
push
mov
int
sar
notb
fdivrp
lret
fs
lods
movsb
aam
xor
push
imul
sub
push
pop
mov
pop
loop
mov
xor
enter
out
jge
icebp
lret
pop
or
cmpsl
cli
dec
in
cltd
xchg
jg
xchg
js
add
sbb
mov
pop
iret
cmp
push
inc
sub
sbb
inc
jnp
fwait
push
cmp
push
add
cmpsb
mov
daa
xchg
sbb
xchg
test
jno
ret
pop
sahf
push
dec
add
pop
xchg
jg
jbe
push
inc
mov
clc
push
out
je
xor
adc
pop
mov
out
adc
push
dec
hlt
cmp
pop
in
and
cltd
je
lock
data16
add
mov
mov
xchg
pop
lret
fsts
decl
xchg
hlt
sarl
rcrl
sub
jne
cmp
pop
xor
pop
adc
mov
pop
outsl
das
lea
rcl
pusha
outsb
or
insb
mov
mov
pop
adc
fwait
and
cmp
xchg
push
jbe
pop
movl
shlb
adc
in
jp
or
cmp
leave
xchg
xchg
mov
cmp
push
and
nop
xor
add
mov
mov
xor
inc
jo
ss
mov
or
push
pushf
aad
jb
mov
cli
cmp
or
pop
mov
inc
into
outsb
les
xor
std
ss
inc
inc
lret
les
mov
push
cmp
shl
fisttpl
mov
int3
lahf
leave
or
and
in
push
xor
shrb
fwait
sahf
aad
sub
cmp
pop
adc
push
or
pop
js
jo
inc
addr16
dec
mov
jp,pn
mov
and
inc
cwtl
push
call
ljmp
mov
rcr
inc
dec
int
sbb
mov
mov
xchg
sub
jge
xchg
add
in
sbb
adc
sbb
cli
imull
sbb
cwtl
call
cmpl
dec
xor
xor
loop
bound
and
inc
pop
pushf
cmpsb
or
lods
pop
mov
mov
mov
pop
sti
leave
cmp
add
je
lret
fnstenv
cs
adc
mov
mov
jmp
lods
xor
mov
lcall
cs
sbb
push
mov
mov
pop
std
sbb
dec
insb
inc
lock
jl
and
mov
loop
cmp
into
or
arpl
fildll
pushf
adc
fs
lret
ficompl
sub
push
lods
pop
jae
daa
mov
test
leave
scas
add
inc
jb
jp
push
cmpsb
lock
stc
jns
mov
les
shrl
or
and
xchg
loop
xlat
xchg
int
mov
xchg
loope
stos
stos
add
and
and
jbe
clc
pop
inc
stos
dec
js
adc
rorl
push
push
gs
xor
js
in
fisubs
jl
fwait
adcl
add
adc
mov
push
mov
mov
rcr
inc
mov
sar
sbb
dec
adc
icebp
rcrl
inc
mov
mov
push
add
jne
in
cmc
push
xchg
mov
sbb
xchg
add
adcb
push
in
add
das
bnd
inc
shlb
fptan
mov
leave
xchg
mov
popa
mov
ficoms
jge
xchg
stc
jg
xor
addr16
adc
adc
xchg
sub
out
dec
inc
scas
vshufpd
sub
lock
mov
pop
test
pop
pop
imul
fldenv
dec
dec
out
xor
xchg
dec
sahf
xlat
mov
sahf
mov
or
stos
inc
int
jo
inc
stc
push
fsubs
mov
mov
scas
xchg
or
or
mov
mov
push
lret
sub
pop
mov
mov
addl
dec
repnz
pushf
pushf
orb
orl
stos
mov
dec
pop
mov
neg
repz
test
mov
xchg
psubd
jns
cmp
or
fs
shrb
or
mov
test
in
inc
push
icebp
rcrb
xchg
mov
js
shlb
mov
pop
sahf
repnz
das
add
jmp
or
gs
outsl
ja
or
push
dec
cmp
or
pop
mov
push
dec
sbb
arpl
sbb
cmp
aam
pop
and
xlat
or
pop
pop
dec
stc
push
in
xchg
cmp
or
mov
cmpsl
or
rcl
adc
iret
xor
lea
inc
mov
lea
or
imul
fisttpll
ret
push
je
leave
add
xlat
and
into
ret
add
popa
cmpsl
imul
xchg
shlb
outsl
push
es
push
int
mov
dec
mov
movsl
ret
lods
nop
pop
out
call
push
incl
aaa
stos
pop
mov
sbb
mov
sahf
scas
xlat
popa
jecxz
jle
addr16
mov
jo
shrl
inc
jo
jmp
push
jmp
push
out
pop
and
jl
lahf
ljmp
frstor
mov
test
mov
js
dec
add
sbb
inc
or
jmp
inc
adc
inc
dec
inc
xor
loope
loopne
cmpsb
gs
cmp
cwtl
jo
push
lcall
and
pop
dec
push
push
push
mov
dec
mov
bound
ljmp
sbb
in
or
ljmp
cmp
push
push
cmp
add
ds
pushf
and
int
mov
mov
or
shl
out
fimull
into
push
push
cltd
fbld
sbbb
mov
mov
lahf
pop
fwait
xchg
xor
xchg
push
insl
or
push
movsb
mov
jo
push
in
and
mov
xlat
push
mov
mov
jge
jmp
in
imul
inc
adc
outsb
outsl
out
popa
mov
into
scas
fisubs
xchg
mov
jmp
push
mov
pop
ja
mov
inc
pop
cmp
adc
fnstsw
cld
xchg
push
ficoml
add
js
lret
push
ja
in
and
cmp
call
decb
dec
out
push
mov
dec
aas
jne
mov
xchg
in
dec
test
in
add
push
inc
or
mov
test
pop
mov
nop
inc
push
sbbl
inc
xchg
cmc
roll
jae
xchg
pop
test
jne
gs
inc
retw
sti
mov
jo
sub
dec
jne
jl
pop
sbb
xchg
cli
push
lcall
mov
movsb
cmc
push
int
jnp
shl
das
stos
sub
in
loop
and
sbb
mov
dec
xchg
sub
mov
jg
lock
inc
sbb
mov
inc
cmc
push
mov
insl
mov
push
mov
add
jp
push
xchg
fimuls
add
addr16
sub
sub
dec
mov
push
push
out
leave
cmp
dec
jne
push
mov
pushf
add
in
sub
das
mov
or
ficomps
ret
jl
ficoms
popa
imul
jo
addr16
add
dec
push
push
iret
in
imul
jle
jmp
dec
mov
xchg
adc
ljmp
sbb
pusha
mov
or
cbtw
jmp
scas
mov
sbb
out
iret
pop
fdivr
add
push
jb
faddl
and
cltd
jae
shl
sub
sub
jns
pop
fldt
out
pop
imul
inc
adc
sbb
adc
movsl
movsl
cmp
and
pop
mov
xchg
lret
cmpsl
mov
inc
or
pop
pop
imul
mov
pop
cltd
jp
or
call
test
andb
mov
imul
daa
std
pop
stc
in
int
not
pop
in
sbb
out
adc
push
sbb
in
aaa
and
lcall
adc
repz
loop
adc
fs
arpl
inc
js
data16
dec
shll
aas
mov
cmc
leave
or
pop
pop
sub
xchg
push
mov
lods
dec
out
aaa
pop
mov
xchg
cmpsl
jne
stos
add
pop
out
ljmp
xchg
pop
jno
jns
dec
dec
push
jle
or
fnstenv
push
sub
pop
cmp
dec
xchg
je
and
pop
enter
incb
push
jg
jae
insl
imul
out
add
mov
push
jge
adc
jmp
pusha
ret
test
imul
mov
xchg
xorb
repz
outsb
mov
dec
out
push
cmpsl
mov
lds
loop
or
cwtl
xchg
test
jp
je
adc
mov
adc
ficoms
cwtl
mov
cmovne
sar
dec
xor
lds
sbb
insl
imul
scas
enter
loopne
cwtl
aaa
ja
inc
shll
stos
lret
fwait
sub
cltd
imul
push
push
leave
jg
sbb
dec
add
xchg
inc
je
pop
push
add
xchg
lea
adc
xor
sbb
inc
xchg
inc
push
imul
test
lret
sbb
lds
cs
fldl
insb
pop
mov
cmpl
shrb
jbe
in
clc
or
push
iret
push
inc
sub
push
ds
dec
outsl
push
xor
enter
inc
sbb
dec
sahf
mov
dec
pushf
mov
xchg
fwait
int
test
in
dec
in
jne
adc
fdivr
adc
inc
mov
cmpsl
jae
fwait
ljmp
sahf
push
and
outsb
rcrl
mov
lret
shlb
cs
lahf
and
mov
test
repz
mov
xchg
lret
shll
divb
dec
dec
add
xchg
jmp
push
stos
xlat
mov
imulb
jecxz
fsqrt
inc
pushf
jl
xchg
jb
sub
pop
gs
jns
or
mov
cmpsl
test
cmp
es
popf
push
test
sbb
or
imul
jne
clc
in
mov
fcoml
iret
push
imul
pop
push
pop
outsb
shll
jge
sarb
add
out
int3
pushf
lret
push
mov
stc
notl
mov
out
mov
pop
jno
shl
and
pop
jg
insb
inc
idiv
mov
fstpt
mov
rol
mov
fmull
inc
and
adc
xchg
lahf
ret
pusha
push
mov
sbb
sbb
ljmp
xor
mov
or
inc
add
inc
inc
inc
push
into
push
inc
cmc
jle
mov
adc
ret
ss
mov
enter
dec
add
jge
cmc
fwait
dec
adc
cmpsl
mov
adc
stos
jae
cltd
pop
mov
nop
or
mov
insl
pop
test
cld
cmp
push
jnp
ret
sahf
push
xchg
std
sub
orl
gs
ljmp
cmp
ret
mov
and
insb
mov
jns
pop
cmp
mov
pushl
xchg
jg
ficomps
mov
imul
ror
push
adc
mov
popa
mov
addr16
ret
clc
not
mov
shll
negl
sbb
mov
push
push
pusha
inc
cwtl
xchg
dec
pop
gs
mov
fiadds
test
addb
pop
mov
fnstenv
jmp
xor
shl
mov
mov
lahf
dec
rorl
and
xor
cmp
rcll
loopne
aaa
repnz
fmull
mov
sub
lock
jns
adc
lock
out
dec
cmp
push
aas
pop
inc
das
mov
dec
jge
xchg
xchg
sub
inc
fs
cmp
pop
or
stos
lea
xor
pop
inc
out
lea
es
test
sub
pushf
mov
push
mov
out
sub
pusha
movsl
xchg
push
cmp
test
jo
das
popa
jo
add
add
adc
inc
nop
sti
lret
and
xor
mov
jae
addr16
mov
fsubr
outsl
les
and
out
popa
inc
mov
mov
addr16
adc
mov
pop
xorb
cs
les
inc
add
cs
xor
lcall
sahf
or
sub
dec
repnz
dec
xchg
outsl
into
leave
aam
cltd
xor
int3
cmp
rcll
je
cmp
pop
clc
mov
call
xor
jnp
adc
mov
xchg
dec
sarb
mov
sbb
lahf
inc
xchg
and
movsl
inc
sub
cli
cmc
pop
outsl
int
mov
loop
es
or
scas
std
inc
sti
sahf
push
outsb
repnz
xor
movsb
insl
cs
clc
xor
cmp
pop
push
mov
push
push
ret
enter
lcall
dec
mov
stc
outsl
lahf
mov
sub
ret
addl
ds
int3
test
jge
test
sbb
insb
test
pop
leave
or
pop
jge
mov
subb
sti
jmp
jmp
out
imul
or
vmovntps
dec
mov
sub
mov
imul
mov
add
or
fwait
insb
fdivrs
sti
leave
push
dec
insb
mov
mov
out
xchg
lea
rolb
inc
push
xchg
jne
fbld
mov
test
adc
sub
jne
lret
out
inc
pusha
push
mov
nop
arpl
fmulp
lret
sti
out
pop
pop
push
jb
jnp
mov
mov
clc
ficompl
inc
pop
arpl
jbe
shrl
add
loopne
mov
ss
lods
xor
mov
sub
mov
or
jo
mov
jecxz
xor
pushf
movsl
out
adc
sarb
dec
nop
jbe
mov
pop
js
mov
inc
xchg
insb
arpl
fmuls
and
add
mov
add
pop
imul
sub
add
xchg
sbb
push
adc
lods
mov
pop
cli
mov
adc
pusha
lods
sub
andl
leave
into
push
out
jb
jg
dec
sub
popf
mov
jbe
mov
icebp
add
cmp
nop
or
rcrb
cmp
xchg
shll
mov
or
adc
js
inc
lahf
movsb
outsb
inc
stos
jne
std
pop
mov
fsubrl
jne
enter
daa
loope
in
sub
arpl
test
pop
lods
or
mov
xchg
popf
lret
jno
jle
mov
fs
adc
stos
jb
fwait
inc
popf
repnz
pop
in
or
pop
loope
jmp
inc
sbb
cmp
hlt
dec
pop
cmc
mov
js
add
fildll
xchg
mov
jge
in
and
sbbl
call
add
and
inc
dec
test
or
cli
jle
push
popf
ss
lods
sub
adc
pushf
idiv
js
je
loope
inc
ret
cld
lock
inc
push
loope
add
insb
lods
mov
push
cli
aas
out
jmp
or
mov
sbb
popa
pop
int3
cmp
xlat
push
add
cltd
xchg
cmp
ds
and
out
std
pop
imul
out
test
jl
ret
mov
shrb
add
insb
mov
sbb
xor
push
scas
dec
inc
push
or
cmpb
xchg
mov
fsubrs
adc
and
cmp
or
push
cmp
fistps
or
dec
jg
mov
fcomip
mov
in
jmp
cmp
inc
imul
pop
pop
xchg
xor
sahf
dec
lods
or
loopne
cmp
pop
idivb
inc
lahf
icebp
in
dec
or
dec
hlt
adc
jne
aaa
sbb
jg
mov
negb
fcom
mov
insl
shlb
roll
jg
repz
outsl
pop
xchg
xchg
jns
add
add
sbb
nop
push
add
imul
fistpl
cld
sbbl
sbb
rorl
jns
sub
arpl
pop
adc
js
dec
test
fistps
mov
pop
xchg
push
fs
hlt
jo
ret
mov
sbb
jnp
aam
mov
iret
push
cmp
out
mov
into
loop
pop
popf
lea
cmpsl
mov
popa
addr16
cs
cmp
nop
inc
push
aas
dec
or
addl
or
lret
mov
cmpsl
flds
lock
les
xor
xchg
ja
imul
jp
push
sbb
cmpsb
push
inc
push
in
test
mov
lods
xor
pop
push
add
je
xchg
insb
out
sarb
addb
rcrl
test
test
shlb
fmul
mov
or
xchg
nop
cmp
pop
xlat
fstpt
xor
cmc
ss
xchg
in
lea
inc
jbe
inc
fdivrs
test
stos
es
mov
push
cs
fiaddl
push
jb
out
loopne
xor
leave
bound
imul
dec
dec
add
clc
dec
test
mov
mov
add
sub
std
movsl
leave
adc
out
adc
mov
mov
lea
cmp
mov
xchg
and
outsl
dec
push
and
push
xchg
pop
dec
fsubr
sub
jle
jmp
mov
xchg
enter
fidivrl
in
jnp
sbb
pusha
cmpsl
lds
or
enter
sarl
fs
xchg
xchg
xchg
jnp
shrb
mov
jecxz
fistpll
jge
jo
mov
scas
sbb
sub
add
xor
fistpl
icebp
lret
lock
lret
mov
jge
push
inc
cmpsb
jns
lea
dec
and
js
das
jg
sbb
sti
jns
mov
push
inc
mov
sub
ss
adc
push
jo
xchg
pusha
jle
lods
xorb
lahf
int3
loope
sub
or
jge
roll
mov
scas
push
adc
jmp
add
or
out
dec
push
mov
insb
push
out
mov
in
fisttpll
mov
sbb
xchg
fsubp
inc
adc
js
xchg
inc
and
lods
gs
push
jne
and
aaa
daa
test
andl
adc
fcoml
int3
les
mov
orb
es
jae
push
jg
jae
test
popf
jmp
pop
clc
cmpsl
jge
or
jo
cmp
pop
and
ds
add
push
enter
pop
jge
inc
popa
mov
ds
fadds
xchg
out
push
lds
pop
cmpb
xchg
loop
in
ud0
jmp
mov
popf
pop
sbb
out
jb
add
push
mov
jmp
xchg
add
cmp
out
imul
cmpsb
aas
inc
adc
push
decl
xor
dec
ds
sbb
ret
daa
rcr
adc
mov
mov
push
sub
and
dec
xchg
js
jo
lahf
mov
pop
dec
add
xchg
adc
mov
dec
cmp
insb
adc
add
lock
push
dec
sbb
push
ret
cltd
pop
or
les
xor
imulb
scas
mov
dec
xor
dec
pop
inc
iret
mov
jmp
insl
mov
lret
add
sub
lods
cmp
and
je
add
lea
mov
pop
mov
xor
pop
xchg
mov
daa
out
fldcw
call
aas
mov
xchg
adc
adc
push
cmp
daa
dec
mov
adc
imul
decb
pop
insl
enter
sub
jns
mov
adc
pop
gs
lds
xor
jnp
mov
mov
adc
mov
lods
jns
mov
pop
xchg
xchg
insb
fcmovnbe
sahf
cmp
les
jmp
sarl
jo
add
into
xor
xorl
xor
fcmovu
stc
push
jg
scas
or
pop
sub
cmp
mov
mov
adc
inc
jne
test
mov
aad
inc
cmp
and
inc
mov
jl
out
pusha
inc
and
push
mov
dec
jb
or
sub
pop
into
push
test
sar
dec
mov
ret
xor
pop
add
xchg
enter
adc
sub
lcall
into
insl
or
mov
rorl
movsb
pusha
out
add
ret
addr16
imul
in
ja
in
scas
lret
popf
shlb
add
rorl
push
stc
lret
xchg
cmp
jge
clc
loop
fbstp
cmp
or
cmp
cmp
pop
fstps
pop
repnz
fdivrs
xchg
lret
addb
gs
pop
jnp
rorl
dec
neg
pop
shll
lea
xor
frstor
repz
out
inc
jge
xor
fbstp
jmp
dec
test
jge
test
int3
out
rol
dec
adc
push
aad
mov
sbb
and
jae
and
cmpb
dec
outsb
xor
clc
movsb
push
sbbb
adc
xor
shlb
mov
jp
js
cmp
in
jo
ss
lret
jo
mov
cmp
stos
sbb
jl
push
xchg
jmp
in
cmp
add
aam
adc
mov
jg
adc
aad
sbb
pop
pop
repnz
mov
or
insl
dec
ljmp
dec
cmpsb
mov
adc
jp
dec
lcall
arpl
cmpsl
or
adc
add
ficomps
iret
mov
push
and
push
test
subl
ret
sbb
insb
jo
cmp
daa
xchg
inc
or
lods
loopne
push
js
in
and
and
int
cs
jge
ja
jle
sub
repnz
pop
fcoml
test
xchg
pop
mov
ljmp
jnp
mov
adc
popa
ja
push
lret
dec
pop
fists
cmp
pop
dec
inc
xchg
test
xor
cmp
testl
pop
icebp
sbb
pop
imul
out
push
lcall
daa
sbb
add
in
stos
mov
adc
cmp
push
dec
xor
lcall
mov
push
shrl
mov
mov
or
push
mov
out
into
sub
pop
sbb
mov
pop
dec
mov
stos
fbld
fcomip
movsl
xchg
out
in
mov
lcall
sub
push
mov
inc
fcompl
repnz
sbb
inc
push
pop
jl
aad
xorl
adc
mov
in
pop
sub
sub
adc
and
dec
pop
sub
rcl
fs
xchg
and
xchg
iret
jno
push
andl
or
popa
ss
pop
inc
mov
lret
insl
push
aas
push
sub
cwtl
stc
lahf
inc
test
idivb
cmp
insb
das
jae
mov
jo
dec
cmp
pop
mov
mov
lret
nop
aaa
gs
mov
aad
cli
clc
fldlg2
ds
test
push
popa
dec
gs
mov
test
jge
repz
ficoml
nop
pop
ja
cmpsb
dec
inc
mov
and
lahf
clc
xchg
ds
jmp
ja,pt
inc
mov
or
dec
mov
or
std
call
mov
js
mov
mov
pushl
dec
adc
movsl
popf
jo
cmp
cltd
mov
pusha
fs
sbb
les
mov
mov
mov
outsb
mov
add
lahf
pop
sub
lahf
mov
test
lea
pop
pop
lock
aam
pop
repz
popf
mov
jle
push
fsubl
mov
cmp
jmp
mov
sbb
mov
cltd
out
mov
mov
xor
mov
int
lds
push
stos
xchg
movl
add
insl
sub
in
sub
subb
dec
les
or
aad
out
iret
mov
cmp
dec
scas
add
mov
mov
clc
dec
cmp
subl
pop
xor
sahf
add
stos
mov
popw
push
loop
or
adc
mov
xchg
test
xchg
mov
es
pop
int3
mov
mov
insl
lret
push
mov
adcl
in
or
jns
into
dec
dec
or
in
mov
bnd
xchg
popf
outsl
or
into
lea
call
push
dec
mov
or
lds
mov
test
lret
cmp
ds
imulb
pop
xchg
or
pop
dec
fs
in
push
loopne
sub
jp
cltd
das
fwait
notl
adc
loopne
fcomip
inc
mov
movl
xchg
pop
pop
xchg
mov
ret
mov
pop
sti
push
idivl
insl
jo
dec
dec
push
cs
mov
jne
into
les
xchg
lcall
std
cmp
outsb
or
push
adcb
push
jecxz
fisttpll
or
shll
cmp
pop
fcompl
in
mov
xchg
jnp
xor
mov
aad
cmpsb
xchg
mov
cmpsl
