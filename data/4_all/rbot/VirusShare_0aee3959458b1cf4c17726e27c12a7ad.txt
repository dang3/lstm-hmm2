out
add
movsb
outsb
xchg
mov
jle
cwtl
xor
test
mov
dec
mov
add
sbb
pop
imul
jne
loop
iret
lds
ljmp
cltd
pop
mov
gs
jns
movsl
jae
pop
lods
out
pop
outsl
cmp
and
pop
inc
sahf
daa
mov
les
pop
icebp
jecxz
adc
sahf
and
cs
sub
push
xchg
sub
sub
mov
mov
push
lcall
inc
mov
js
xchg
in
xchg
test
repnz
lret
dec
pop
sbb
mov
push
lea
dec
mov
add
xor
test
hlt
mov
adc
shrl
jb
jbe
mov
and
fmull
inc
dec
bound
mov
push
pusha
xchg
sub
mov
lds
mov
adcl
dec
cwtl
cmp
jbe
mov
mov
xchg
aas
aam
clc
movl
fsub
inc
push
jbe
inc
aaa
mov
push
jmp
xor
es
or
test
clc
mov
loop
jns
ja
xor
divb
jb
cmp
xchg
jle
mov
movsb
into
int
into
mov
cmc
sti
adc
fadds
mov
xchg
jmp
ds
sbb
add
lcall
mov
adc
pop
ja
dec
mov
and
dec
add
jl
mov
in
stos
fwait
adc
and
addr16
push
sti
or
jg
addr16
aad
test
or
push
dec
dec
sbb
xchg
popa
cld
sub
sub
adc
fdivr
xchg
imul
mov
leave
cmp
ljmp
pop
pop
pop
repnz
test
insb
pushf
movsb
inc
jge
gs
insb
fnstenv
push
jbe
daa
std
in
stos
inc
xchg
loope
push
repnz
sbb
jmp
or
rorb
stos
fistpl
repnz
push
bound
arpl
lods
pop
cmp
inc
sub
xor
pop
push
roll
jge
adc
cmp
sbb
iret
int3
scas
add
fucomi
dec
daa
inc
pop
mov
jecxz
inc
loop
imul
sub
decl
push
xor
inc
mov
lret
orb
nop
mov
sarb
adc
push
mov
imul
rcll
movsb
enter
daa
inc
or
shrl
inc
mov
push
adc
cmp
imul
shrb
pop
cmpsl
aaa
fisubrs
cli
fisttps
ds
jecxz
pop
rorb
aam
pop
mov
inc
fwait
mov
mov
pop
mov
pop
dec
scas
mov
stos
stos
movsl
lahf
roll
mov
pop
out
test
out
arpl
mov
pop
inc
cmp
mov
pushf
enter
bswap
cmp
mov
inc
loopne
push
out
cmp
mov
or
add
cmp
mov
push
push
aad
jmp
fmul
add
inc
xor
stos
fisubrs
pop
xchg
add
dec
ljmp
cmpsb
add
ja
lret
repnz
jo
repz
sub
rorb
rcll
out
pop
push
mov
mov
pop
and
xor
cli
and
cltd
dec
imulb
dec
dec
or
inc
xor
cmp
cmpsl
loop
sub
pop
in
fwait
or
sbb
repnz
jp
or
flds
shlb
adcl
sarl
ret
sar
pop
je
add
push
dec
inc
mov
mov
maskmovq
idivl
mov
cmp
fisubs
xchg
adc
sub
inc
fwait
sbb
jmp
xlat
jns
test
and
js
xor
jp
call
mov
pslld
in
outsb
pop
mov
in
xchg
int
and
pop
xchg
or
pop
mov
paddsb
push
pusha
fisttpll
cmpsl
mov
shl
or
imul
ss
repz
leave
mov
dec
punpcklwd
mov
das
ret
mov
jge
out
inc
enter
jle
xchg
push
push
add
xchg
xchg
arpl
loopne
das
lods
mov
mov
cmp
lds
jno
inc
ja
outsl
stc
push
cmp
js
pushf
je
cs
sub
dec
popa
jg
adc
cmp
push
jecxz
fldt
fiadds
jl
arpl
xchg
lods
aad
arpl
popf
pop
jle
inc
or
and
xorb
js
ljmp
and
push
add
inc
xor
ret
jb
push
add
xor
and
lods
fld
lret
dec
stos
jge
sbbl
and
push
icebp
gs
inc
mov
xchg
mov
scas
pop
mov
push
mov
and
add
pop
add
cld
fists
mov
lcall
aam
or
jns
repnz
iret
cwtl
mov
xchg
in
and
xchg
test
xchg
test
cmpsl
test
repnz
repnz
repnz
sub
popa
mov
mov
xchg
outsb
or
jbe
lret
dec
adc
dec
pop
rorl
sbb
sbb
popa
sbb
mov
loope
inc
mov
sbb
pop
mov
push
pusha
jne
loopne
sbb
mov
push
add
jge
je
cmp
push
push
pop
pop
push
pop
push
ja
and
pop
inc
dec
add
push
jo
jns
nop
pop
push
inc
pop
cmc
mov
xor
push
push
cmp
pop
pop
push
movzbl
push
mov
pop
sub
xchg
and
stc
loop
pop
rol
push
push
push
push
cltd
pop
pop
pop
pop
and
cmc
cmp
and
nop
call
push
and
pop
and
clc
push
popl
loop
jecxz
test
out
mov
or
add
push
addr16
xor
cmp
push
ss
adc
push
lods
lds
pusha
stc
inc
add
xor
pop
add
sbb
add
cmp
shl
scas
int3
xchg
jb
imul
xor
sbb
mov
xchg
or
les
mov
movl
xor
xor
push
push
cmp
pop
pop
nop
cld
cmc
dec
jne
test
loop
jecxz
test
leave
xlat
pop
cmp
or
cmp
popa
cli
rol
mov
inc
dec
ret
push
dec
inc
pop
mov
jle
jb
push
rol
pop
push
jo
push
xchg
pop
pop
nop
push
test
pop
sub
dec
inc
and
cld
call
push
call
mov
pop
in
dec
dec
sbb
data16
sbb
cmpsl
adcl
int3
gs
arpl
mov
lods
dec
jl
sbb
inc
cmp
pop
mov
fisubl
and
jb
pop
mov
add
clc
stc
push
add
mov
pop
cmc
jbe
not
not
push
xor
pop
clc
xor
push
jg
cmp
pop
push
test
pop
nop
lea
push
add
pop
jl
push
inc
pop
test
xor
rol
jns
jnp
test
cmc
push
add
mov
pop
push
movzbl
cmc
loop
pop
jbe
push
rol
pop
push
jns
push
or
pop
pop
jae
push
jbe
shl
pop
jnp
jge
cmp
loop
jecxz
and
loop
jecxz
cs
in
out
insb
cmp
es
mov
push
test
pop
clc
nop
cmc
nop
xor
add
jmp
sbb
pop
mov
mov
out
mov
mov
fwait
cmpl
jae
stc
jg
out
divb
cs
mov
push
mov
push
outsl
add
mov
shr
test
je
push
call
mov
xchg
adc
or
gs
loopne
push
loopne
inc
push
fs
movl
add
push
add
pop
cmc
jo
jle
jae
cmp
test
push
mov
push
xor
pop
pop
loop
jecxz
fidivs
sbb
fcompl
lea
ja
faddl
push
push
mov
pop
pop
clc
push
jne
push
ror
pop
pop
push
add
push
xchg
movsl
xchg
loop
jecxz
cmp
xchg
xor
xor
push
and
fmulp
in
test
fnstcw
push
inc
inc
xlat
in
fprem
inc
loop
jecxz
or
sub
pop
pop
push
dec
je
jns
xchg
cmp
ljmp
test
ljmp
mov
test
jnp
lret
clc
add
test
mov
mov
add
outsl
cmp
sbb
pop
in
mov
mov
bound
add
and
jno
push
push
pop
pop
nop
dec
jne
push
call
icebp
gs
dec
xor
andl
xor
cmp
add
pop
pop
lods
and
push
test
add
in
mov
dec
movsl
pop
cld
or
dec
jns
divb
jecxz
je
push
push
push
or
fdiv
arpl
mov
fwait
clc
xchg
xor
mov
test
inc
loop
test
outsb
mov
mov
fwait
test
sub
pop
cwtl
jle
cmp
pop
dec
pop
call
das
cmp
dec
push
dec
push
popf
ds
cmpsb
fstl
arpl
add
cmpsl
push
mov
imul
jb
jno
fndisi(8087
jbe
mov
xchg
test
add
in
cli
inc
sub
or
mov
into
loop
xchg
jo
pop
ds
iret
stos
sbb
rolb
push
std
xchg
or
mov
push
lea
loop
push
outsl
lea
shrl
fstl
inc
and
cmp
xchg
push
dec
sub
cmpsl
cmp
inc
xchg
out
mov
jle
push
fdivrs
jno
dec
div
jnp
adc
arpl
cmpsl
pop
loop
pop
sub
xor
cltd
stos
lods
xchg
cmpsb
test
mov
push
dec
mov
inc
loopne
jo
and
mov
and
adc
pop
add
jmp
push
call
jns
rep
or
push
insb
popa
dec
inc
gs
and
xchg
sub
mov
cltd
roll
dec
inc
sub
jo
pop
imul
ljmp
add
cmp
cli
dec
jmp
inc
sub
mov
cwtl
test
push
sahf
ljmp
jne
adc
aaa
test
sti
or
popf
add
lods
or
aaa
test
adc
push
mov
mov
dec
int
addb
movsl
jne
imul
mov
pop
out
inc
pop
call
xchg
xor
insb
sub
mov
fucomip
ljmp
repz
hlt
neg
cmp
jl
jge,pt
in
ret
dec
loop
xchg
loop
inc
sub
fcom
or
sub
mov
int
jge
sub
bound
xorb
cltd
aaa
xchg
nop
and
push
pop
jbe
cmpsl
jle
imul
jnp
dec
cmp
pop
mov
fdivs
adc
incb
aad
jns
cmp
shrb
addr16
or
inc
jne
inc
dec
iret
insb
aad
cmpsl
mov
xor
repz
repnz
xlat
sbb
cmpsb
mov
xchg
sub
mov
fsub
js
lock
cltd
sbb
aas
add
ror
add
inc
xchg
setnp
loope
dec
inc
dec
xchg
xchg
aam
push
pop
fistl
push
push
or
sub
add
int
xor
push
pop
mov
pop
ret
lds
push
jns
xor
jns
lods
out
fwait
lods
and
icebp
and
addr16
sti
iret
int
adc
xor
insb
gs
jmp
push
mov
cmp
jl
and
push
xchg
sub
fsubrl
int3
fcoml
xchg
das
cmp
jbe
xchg
or
je
sub
dec
sbb
or
imul
pusha
call
cmpsl
cmc
mov
cmp
push
push
add
fistpll
icebp
and
out
shrl
inc
jbe
mov
fidivrl
xchg
dec
clc
xchg
loop
fsub
xlat
daa
sub
shll
aam
sbb
test
xchg
out
push
fnsave
push
fldl
fdivl
insl
push
ret
jle
out
jl
add
mov
add
ror
ss
mov
push
mov
push
mull
mov
ljmp
jno
stos
popf
xor
jl
inc
inc
insb
inc
xlat
mov
xlat
push
mov
fwait
mov
pop
jae
pop
xchg
mov
mov
stos
cmc
cmc
popa
repnz
pop
ds
xor
xor
js
stos
mov
icebp
popa
dec
pop
test
ror
add
mov
ret
fldt
fadd
cs
sbb
sub
test
int
sub
dec
dec
adc
dec
xor
sub
jo
xchg
mov
xchg
out
jp
ffreep
lock
ss
js
xor
inc
mov
mov
loop
stc
loop
or
or
or
xor
jns
cmp
jg
or
push
pusha
in
pop
cmpsb
in
mov
xor
jmp
sbb
mov
xor
gs
add
sahf
sub
outsl
xchg
outsb
int
mov
cmp
xchg
mov
psadbw
adc
dec
jnp
pushf
jno
popf
mov
out
and
hlt
imul
push
insl
pop
ljmp
out
mov
int3
mov
adc
mov
mov
jne
sbbb
xchg
cmp
xchg
in
fucom
test
adc
add
roll
sub
push
rorl
pop
pop
mov
dec
mov
sub
sbb
lods
pop
les
or
in
push
mov
iret
in
cmpsl
sub
lahf
xor
pop
mov
in
mov
in
jo
xor
add
sub
leave
in
jo
xor
add
in
jo
xor
mov
in
or
jno
sti
mov
push
jle
push
push
pusha
popf
push
andl
into
popa
leave
into
decl
ja
xor
imul
lea
loope
mov
lea
fldl
shll
lock
adc
fldcw
jnp
fidivs
data16
and
push
es
xchg
and
shr
jge
repnz
push
adc
cmp
sbb
cwtl
jle
jle
add
insl
push
add
leave
dec
shll
test
xchg
shll
sti
jmp
gs
shrl
sub
add
inc
sub
push
xor
aaa
inc
sbb
mov
push
daa
outsl
jmp
mov
push
mov
lret
fsub
dec
push
mov
push
in
cltd
cltd
scas
dec
jbe
sbb
fisubs
mov
aas
outsl
jnp
push
jg
or
fadds
ljmp
cmp
repnz
enter
cmc
js
mov
lahf
add
lahf
ja
fdivr
in
mov
inc
out
xchg
daa
and
xor
andb
jecxz
lcall
stos
shrb
out
add
lock
loope
sbb
pop
dec
pop
lahf
or
pop
inc
repnz
repnz
ret
mov
dec
fld
sarb
sbb
adc
stos
std
mov
push
push
mov
and
pop
inc
divl
popa
enter
cli
pushf
pop
pop
mov
mov
mov
and
add
orl
mov
jo
jo
xor
mov
add
xchg
addr16
cmc
or
jno
and
adc
add
loopne
push
inc
pusha
fimuls
outsl
mov
test
add
lods
mov
pop
cmp
mov
imul
mov
bound
sahf
movhps
sarl
lods
inc
pop
pop
aaa
lcall
cmp
int3
test
scas
fistpl
mov
lea
inc
arpl
notl
test
push
daa
adc
push
das
out
sub
jmp
imulb
cmp
faddp
fwait
xchg
es
jecxz
jb
push
cmp
mov
jle
cli
adc
mov
mov
ss
mov
xchg
enter
repz
pop
sbb
pop
cwtl
imul
insl
inc
hlt
sub
and
or
sbb
mov
scas
jne
xchg
mov
mov
adc
inc
faddl
jmp
aam
in
push
or
mov
lret
repnz
xor
sub
into
mov
rolb
mov
lahf
popa
loop
cwtl
loop
sbb
push
or
push
cmpsb
or
inc
repnz
inc
movsb
mov
imul
repnz
popf
loope
xor
xor
scas
jg
pop
add
inc
arpl
sbb
add
enter
int
loope
popa
pusha
jg
mov
xlat
gs
leave
or
jo
and
and
dec
rolb
mov
sbb
sub
and
fwait
inc
fdivrs
jp
pop
add
ficoms
jb
jae
clc
xchg
inc
xlat
pop
or
xor
jl
sti
adc
and
adcl
in
jecxz
jecxz
test
jle
imul
mov
xor
sti
jl
mov
add
repnz
aam
dec
dec
sbb
fbld
movsl
divl
push
lods
adc
xchg
mov
mov
sub
xor
mov
sub
ret
repz
or
in
fdivs
mov
ret
jno
fldcw
rcrb
push
cmp
insl
lea
fmull
cld
bound
je
xchg
mov
mov
cltd
sbb
cmc
mov
xchg
ror
jae,pn
imul
scas
out
fs
push
insb
sub
dec
pop
loop
fmul
dec
adc
inc
and
jno
mov
shr
lret
xor
outsl
jecxz
in
xchg
jns
sub
sti
dec
xlat
es
xor
dec
test
pop
sbb
push
outsb
bound
bswap
ret
daa
jnp
repnz
test
dec
aad
rcl
mov
xor
shrl
clc
sarl
cli
call
in
out
dec
into
pusha
outsb
in
pop
pop
aas
insl
adc
sbb
xchg
add
xchg
xchg
push
shll
movsb
jbe
xor
lods
sbb
dec
xchg
pop
or
pop
pop
mov
or
sub
or
je
ror
sbb
mov
mov
xchg
adc
cmp
mov
push
leave
mov
and
test
cltd
js
call
je
or
and
add
daa
out
xor
stos
cmp
movl
mov
shlb
adc
and
js
enter
dec
cmpsl
or
dec
stos
nop
jbe
in
mov
outsl
push
test
inc
sub
or
fmull
icebp
stos
cmp
int
in
lcall
dec
sbb
out
jge
fsubrp
cmpsb
loope
sub
andb
xchg
cmp
mov
fists
pop
mov
or
adc
xor
dec
sbb
popa
sbb
mov
cmp
bound
fldcw
stos
adc
jb
or
jae
mov
and
sti
push
adc
lcall
popf
out
orl
fwait
push
inc
add
jle
nop
mov
frstor
inc
repz
mov
add
add
test
outsl
insb
fnstenv
sbb
push
fcmovne
push
lcall
inc
test
ljmp
push
lret
mov
es
js
add
andb
adc
mov
popf
imul
cmp
adc
negl
or
mov
jg
cwtl
push
fisttps
jmp
push
pop
xor
and
sbb
add
gs
mov
inc
pop
out
popf
sub
pop
aas
cmc
jmp
cmp
jge
bound
insb
inc
cmc
cmp
hlt
notl
push
mov
es
sub
mov
in
shll
and
fnstcw
inc
lods
pusha
clc
push
push
sbb
hlt
pop
push
add
dec
mov
sbb
pushf
and
mov
rclb
insb
push
jge
xchg
push
xor
out
mov
or
daa
loope
insb
dec
call
std
sub
mov
sbb
cmp
jo
mov
in
push
out
dec
enter
call
loope
jge
sbb
pushf
inc
inc
xor
mov
add
out
imul
shll
inc
mov
insb
dec
fadd
push
iret
lea
push
push
iret
stos
daa
nop
push
cmpsl
xchg
xor
dec
clc
loope
push
xchg
cli
out
sbb
pop
movb
or
cmp
lret
ljmp
push
lret
cmpl
insb
imul
jg
xor
fwait
mov
fldt
mov
aad
fs
jbe
sub
and
aad
fcomps
mov
shrl
or
inc
outsl
mov
pop
dec
sti
xor
out
fstl
addr16
dec
sti
test
dec
js
xchg
test
lea
sub
cltd
jp
mov
test
dec
icebp
imul
and
jp
fadd
jne
orb
jno
pop
lods
lds
mov
repnz
and
sbb
xchg
mov
add
add
sub
push
fcomp
push
into
cmp
and
sbb
ss
aaa
or
mov
pop
out
cs
je
sbb
loop
inc
or
dec
inc
fisttpl
xlat
repz
mov
add
push
jle
push
jno
int
testb
or
push
xor
arpl
dec
cli
fsubl
jmp
adc
xchg
mov
adc
mov
cmpsl
push
xor
fmulp
js
cmp
pop
arpl
or
xchg
cld
mov
inc
cmpsb
inc
rcll
popf
jmp
inc
inc
adc
push
adc
std
pop
fists
mov
adc
ja
inc
outsl
in
incb
mov
dec
add
pop
add
or
incl
repnz
mov
ret
mov
jl
push
and
mov
stos
lret
sti
or
lea
in
xchg
sbb
and
movsb
xchg
push
push
bound
xorl
bnd
test
xchg
fwait
dec
sub
rolb
adc
and
sub
clc
cs
loop
mov
or
mov
test
cwtl
or
jno
cmp
or
nop
xor
jmp
cltd
lock
cs
sub
aad
popf
mov
leave
mov
or
sub
cwtl
divb
mov
lods
jnp
cli
iret
ljmp
pop
movsl
aas
dec
jmp
rol
sub
xchg
cli
nop
mov
push
pop
cmp
clc
pushf
mov
pop
push
cli
jno
mov
or
dec
sbb
imul
in
xchg
enter
stos
in
js
dec
movsb
arpl
stos
and
ret
out
std
repnz
or
scas
into
xchg
sub
dec
adc
jle
jmp
pop
add
inc
lahf
lcall
arpl
sarl
cltd
cmpsb
or
or
push
dec
lahf
rolb
andb
adcb
dec
rol
ret
mov
and
leave
ja
jae
fisttps
adc
test
pop
nop
pop
add
out
inc
adc
add
mov
jo
insb
cmp
stc
in
shll
xchg
sbb
arpl
sub
test
push
inc
and
test
dec
sbb
xor
xor
int3
mov
aaa
mov
std
or
add
or
jle
pop
xchg
add
mov
jg
pop
mov
lock
mov
rcl
cld
push
or
add
jge
pop
lcall
movsb
inc
or
jge
aam
incb
repz
adc
adc
aam
test
fdivrs
fwait
push
sbb
repz
daa
dec
push
cmpsl
xor
imul
inc
xlat
and
mov
out
jnp
xor
nop
insb
sbbb
loop
pop
pop
pop
cmp
out
scas
mov
fs
inc
lahf
push
pop
push
jmp
out
push
pop
inc
in
ret
jbe
mov
mov
repnz
cmp
loop
mov
bnd
data16
aaa
mov
scas
shll
adc
ss
js
negb
xor
xorb
dec
cmp
sbb
pop
sub
cmpsb
aaa
xchg
mov
es
cmpsb
ja
mov
mov
hlt
lahf
daa
mov
or
mov
adc
mov
sbb
xor
sbb
xor
cmp
push
xchg
fsubl
and
nop
je
jns
fwait
and
test
jmp
sub
push
push
out
aaa
int
das
shlb
test
xor
push
int3
jo
and
lret
sub
popa
pop
jb
sbb
mov
movsl
xchg
fbstp
into
mov
out
negb
aad
xchg
mov
mov
ret
jle
shrl
sbb
outsb
adc
test
add
dec
imul
out
lock
pop
xor
int
loop
and
addl
jbe
out
ja
gs
jl
inc
gs
xor
fsubrl
push
sbb
iret
test
mov
xchg
or
lea
mov
add
xor
shr
lret
inc
cmc
rcl
roll
xor
cli
fistps
jnp
out
iret
js
jg
jne
xor
test
popf
jp
cmp
jle
and
mov
adc
and
aaa
mov
push
test
push
ret
pushf
aam
std
ds
data16
jnp
adc
xchg
sbb
pop
cmp
ljmp
sbb
pop
sub
lahf
shlb
push
inc
in
jb
pop
push
pop
gs
test
add
jns
xor
adc
imul
inc
cmp
cmp
icebp
test
push
inc
lret
adcl
dec
testb
mov
cmp
sbb
ret
lea
lock
add
dec
stc
push
mov
lcall
fcmovbe
loope
mulb
mov
add
stos
mov
fistl
lds
popf
add
ljmp
imul
cmp
sbb
mov
mov
lods
das
in
fmull
outsl
cmc
insb
push
mov
or
jl
fadd
xor
ljmp
push
add
je
pop
push
shll
ret
pop
fwait
inc
insb
ret
mov
in
lock
cwtl
sub
popa
ret
jle
in
hlt
push
inc
cltd
lock
or
divl
sub
cmp
xchg
xchg
and
push
pop
imul
mov
or
inc
lods
add
scas
xor
rol
dec
cmc
stos
arpl
scas
cmp
ljmp
add
add
push
test
lahf
pusha
bound
mov
mov
mov
xchg
jmp
inc
fsubs
add
leave
pushf
iret
sub
jno
jp,pt
mov
lods
clc
xchg
inc
push
jl
xor
insb
xchg
and
rcrb
sti
add
int
and
rorl
cmp
jp
ja
xor
ja
data16
gs
loope
das
sarl
ret
mov
fwait
jb
scas
ja
mov
roll
dec
je
loopne
arpl
mov
rcrl
mov
sub
ror
sbb
mov
or
bound
mov
xor
push
int
arpl
push
sbb
aaa
pop
pop
sbb
cli
shl
add
jnp
popf
cli
or
cld
loopne
dec
add
daa
movsl
add
idivl
icebp
inc
rcr
sub
arpl
scas
mov
lret
insb
orb
mull
sbb
jmp
movb
hlt
aad
jmp
hlt
mov
or
jp
cs
fucomip
jns
or
bound
shr
sbb
dec
clc
add
mov
dec
cli
in
sub
push
xchg
lcall
dec
xor
cmp
xchg
insl
sarb
or
out
or
sbb
movsl
fcoml
xor
ds
cmp
inc
xor
mov
pop
hlt
test
mov
frstor
push
sub
sub
or
lret
and
mov
scas
dec
pop
xor
push
je
adc
push
pop
aam
mov
mov
mov
push
jno
mov
mov
xchg
shr
adc
cmp
mov
loop
movsl
fistl
xchg
adc
add
popa
mov
stos
mov
or
cmp
rcrb
lods
dec
fdivrs
ret
dec
jmp
repz
cmc
std
mov
xor
int3
loope
push
add
fcmove
cli
aad
es
xchg
icebp
sbb
imul
xor
repnz
dec
das
insl
adc
jg
mov
fs
pop
and
and
stos
mov
inc
pushf
jmp
pop
popa
sub
mov
sti
jns
xor
pusha
fildl
xchg
ja
xor
int3
adc
sub
add
sarb
mov
fs
cmp
lods
sbbl
aas
lods
faddp
dec
movsb
adc
mov
js
inc
cld
mov
mov
mov
call
cmp
repnz
dec
movsl
leave
mov
dec
mov
jo
rcl
or
test
and
push
nop
ja
push
jnp
add
adc
ret
inc
push
sbb
push
mov
clc
test
mov
cli
aaa
adc
bound
push
sbbb
jg
addl
js
test
adc
aad
mov
adc
mov
imul
aad
pop
pop
xchg
or
testb
ficoms
leave
push
sbb
mov
out
iret
imul
dec
dec
aam
mov
pop
jl
dec
pop
inc
xor
scas
push
rorb
jb
xor
sti
adc
addb
aam
jo
or
push
aaa
jae
cmp
loopne
push
xchg
ds
fldcw
orb
roll
loope
imulb
dec
xchg
push
push
ret
lods
jecxz
lods
dec
gs
cmc
sbb
dec
adc
xchg
and
ret
cwtl
shrb
sbb
mov
inc
clc
jmp
or
xchg
inc
pop
or
dec
jne
subb
dec
add
push
sub
mov
pop
sub
in
repnz
cli
jg
and
adc
adc
ljmp
push
adc
cmpsl
mov
movsl
xchg
xor
mov
loopne
adc
fdivs
pop
in
ret
add
enter
pushf
iret
or
loop
pop
pop
pop
sbb
mov
bound
pop
notl
push
movsb
add
pop
fnstsw
outsl
in
push
or
popl
push
rclb
dec
sub
and
test
adc
lods
popa
push
mov
mov
push
cmp
iret
pop
push
repz
nop
outsl
jne
dec
inc
cmpsl
es
pop
stos
test
xor
lea
add
dec
insb
xchg
inc
or
mov
jo
test
scas
pop
and
cmp
xlat
sub
into
xor
lcall
fwait
push
fsubrs
jns
dec
aaa
pop
xchg
push
es
adc
or
outsl
cs
fsts
and
or
repz
push
popa
or
push
fcompl
push
inc
bound
divb
repnz
std
jns
dec
sub
and
dec
sub
ja
fisubrl
push
sbb
imul
mov
test
imul
cmp
int
pushf
and
lods
xor
loopne
les
jl
int3
sub
pop
test
addr16
jecxz
sti
arpl
lcall
sbb
std
mov
push
fwait
cwtl
fmuls
xchg
push
cs
lret
mov
in
inc
icebp
int3
mov
sbb
pop
inc
mov
fistps
hlt
mov
fstpl
ret
orb
insl
stos
es
xchg
pusha
shrb
fisttps
scas
cmc
add
cmp
mov
pushf
xorb
ret
pop
das
daa
nop
push
out
mov
inc
pop
xchg
subb
jbe
push
cmpsl
jg
sub
dec
outsl
xchg
mov
bound
mov
push
add
cmpsb
inc
pop
mov
sbb
pop
inc
sbb
jg
push
dec
js
mov
pop
push
call
and
mov
aaa
push
push
push
popa
add
push
dec
cmp
scas
daa
aam
outsl
dec
and
loopne
insl
xchg
ret
or
add
insb
loopne
cmp
fildll
xchg
aam
add
mov
sbb
and
adc
int
xchg
int3
push
cmpsl
add
das
push
cwtl
into
sbb
stc
ja
mov
sarl
mov
call
cmp
sub
jb
loopne
stc
dec
scas
shrd
cmp
push
lea
sarl
sbb
loopne
cmpsl
gs
xchg
stos
sub
es
dec
pop
loopne
sub
mov
daa
jl
pop
jnp
idiv
or
cli
aad
fldenv
mov
ljmp
filds
mov
fidivrs
jle
sbb
push
add
pop
lret
lret
push
push
loope
les
push
sahf
mov
das
cmp
sub
shrl
insl
lret
push
xchg
ffreep
sub
add
sbb
xchg
out
lret
sbb
mov
and
lds
push
fs
out
cld
push
or
xor
int
std
cmp
jle
fstpl
adc
je
mov
cmp
lret
inc
cs
add
inc
shrl
mov
call
into
loopne
pop
mov
idiv
mov
jbe
pusha
sbb
dec
push
shr
mov
adc
or
jp
mov
rclb
addb
lods
mov
xor
and
push
pop
xrelease
add
inc
mov
inc
dec
sbb
hlt
and
shl
std
dec
sub
daa
push
popa
cmp
repz
sbb
cmpsb
mov
inc
jae
add
cli
and
or
outsl
mov
sub
int3
dec
xchg
cmp
sbb
xor
mov
aad
sti
jae
sub
or
call
add
mov
gs
dec
and
fisubrl
movsb
sbb
mov
movsl
inc
bound
lock
outsb
rol
cli
inc
and
loop
and
xor
xor
imul
cs
shl
sub
inc
pop
pop
push
dec
add
add
clc
lock
sub
sbb
aad
je
mov
rcrl
fldl
std
and
adc
push
xchg
test
in
movl
fucomip
stos
xchg
mov
xchg
cmpsl
sbb
push
dec
xor
xchg
pop
jns
push
ss
mov
lds
jg
pop
pop
sub
sub
jecxz
xor
sub
insl
cmp
push
and
xchg
pushf
push
push
test
mov
jo
add
xor
cmpsb
int3
in
cltd
mov
popf
call
sahf
or
stos
xchg
into
int
adc
and
jb
jno
jo
dec
jp
push
and
addl
or
loope
mov
mov
add
adc
cmp
mov
adc
sub
dec
orl
aaa
xlat
stos
add
mov
es
or
sbb
add
icebp
ljmp
add
mov
xchg
jo
adc
xor
roll
cmp
add
stos
pop
xchg
insb
in
lds
int3
xchg
add
aam
pop
mov
xor
lock
rorb
outsl
mov
mov
cmpsl
enter
shl
stos
mov
mov
loop
fwait
inc
mov
fcmovu
nop
cmp
push
pushf
add
jmp
ror
cli
and
xor
outsb
lods
xchg
inc
jb
movsb
cmp
push
int
fsubrs
cmpsb
inc
pop
push
cmc
add
int
add
mov
sub
mov
sbb
mull
or
add
push
pop
push
mov
or
sahf
jp
popa
pop
xchg
out
rolb
cmp
loopne
in
insb
mov
popf
fcoms
scas
jp
stos
scas
xor
mov
aaa
movsl
add
in
mov
xchg
inc
cwtl
sbb
mov
pop
into
xchg
dec
cli
push
and
and
mulb
aad
or
int
push
xchg
mov
lahf
pop
pushf
insb
adc
mov
adc
imul
in
pop
pop
sub
out
xlat
and
cltd
push
ljmp
xchg
mov
lods
mov
dec
ja
mov
sub
out
adc
jbe
push
js
imul
mov
xchg
dec
pop
push
inc
clc
mov
inc
or
adc
jp
cmp
iret
out
leave
fistpl
js
push
push
or
mul
inc
pop
ljmp
insb
cmp
adc
shll
cmpsl
cmp
mov
pop
inc
mov
mov
lods
mov
jae
jnp
xlat
adc
adc
mov
xchg
outsl
dec
dec
or
jae
xchg
addr16
insb
aam
push
ret
and
mov
or
hlt
mov
pop
test
mov
pop
subb
mov
cmp
push
imul
push
add
xchg
jno
sbb
das
fwait
rcll
lods
cmpsb
sti
sbbl
lret
sbb
dec
aam
jbe
scas
dec
hlt
insb
xchg
sub
jecxz
iret
or
pop
or
xchg
push
lret
push
dec
add
mov
orb
stos
mull
in
repz
stos
sbb
adc
mov
xor
jmp
std
fcmovbe
dec
shll
jno
sub
repnz
in
fbld
push
push
pop
push
lahf
loopne
or
cli
sbb
push
test
shr
mov
cmpb
test
pop
push
cmpb
sub
aam
icebp
test
pop
addr16
push
test
jns
cmpl
stos
fsubs
cmpsl
lds
pusha
fsubr
subb
lock
lahf
nop
loop
movsl
adc
xor
imul
push
cltd
mov
mov
pop
or
inc
xor
in
fstpl
push
mov
adcb
xor
sub
adc
mov
mov
aaa
sub
subl
dec
in
sbb
jp
mov
mov
dec
cmp
out
push
and
ss
cmpsl
pushf
dec
cs
add
cmp
cmpsb
pop
data16
lret
mov
mov
lds
enter
in
cld
mov
adc
testb
xchg
cmpsl
fidivs
adc
jb
or
ficoms
cmpsb
in
mov
push
and
in
cmpsl
out
les
scas
popf
jmp
int
fldenv
and
aad
push
jns
ljmp
xor
push
cld
jo
test
fisubrl
push
cmp
mov
fmulp
mov
xchg
and
mov
mov
add
xchg
lahf
pusha
ja
and
divl
xchg
inc
jne
out
leave
call
and
or
hlt
fstl
in
subl
jae
add
dec
xchg
lods
lret
cltd
cmp
ljmp
push
out
loope
pop
stc
dec
cmp
sub
ret
nop
dec
scas
xchg
jle
xchg
xor
sbb
test
push
push
js
jmp
stos
mov
dec
dec
and
jbe
loopne
aad
lret
lret
out
sahf
sbb
mov
iret
cmp
xlat
lret
jne
xchg
cmp
mov
push
adc
clc
jns
inc
dec
pop
jmp
cmp
cmpl
push
aaa
jge
mov
push
scas
pop
andb
mov
cmpsl
loope
out
shll
stos
mov
xchg
scas
fistpl
xor
dec
out
add
hlt
fcmove
or
shlb
shl
adc
fildl
add
out
and
jmp
xor
or
lods
pop
cwtl
inc
mov
outsb
jmp
lret
lahf
inc
imull
xor
scas
lds
push
pop
adc
pop
iret
fwait
stc
fs
outsb
dec
gs
mov
mov
ds
outsb
adc
lock
pop
mov
fcmovb
jae
adc
jge
fisubs
sbb
pop
gs
mov
pop
scas
outsb
in
and
push
hlt
mov
ret
xor
push
xorl
xchg
fimuls
scas
push
nop
into
popa
aam
imul
inc
mov
pop
shrb
cld
add
mov
fs
movsb
sbb
inc
jbe
cld
sbb
insb
mov
dec
js
fwait
decl
adc
pop
sahf
lds
lock
inc
jae
rclb
sbb
movsb
mov
movsb
sbbl
xor
lock
mov
add
and
cmp
push
in
mov
lods
pop
movsl
fdivrl
pop
aad
cli
pop
sub
sub
lds
jno
push
adc
or
stos
loope
lahf
mov
sbb
adc
gs
push
aas
mov
inc
sbb
int
xchg
lcall
icebp
jecxz
add
inc
push
pop
jb
test
add
repz
das
aas
fstps
hlt
int
arpl
bound
push
adc
insl
xchg
xchg
fdivl
stc
es
sbb
cmp
mov
jo
sahf
cs
pop
mov
mov
bound
dec
aad
push
push
imul
repnz
dec
pop
popf
or
cmp
std
frstor
repz
int3
and
adc
cmp
lods
rolb
mov
inc
in
fcmovne
hlt
cltd
gs
and
add
fildl
pop
mov
jb
cmc
lods
das
lahf
or
sbb
repnz
cmpsb
outsl
pop
dec
test
cmp
daa
xchg
xor
loope
mov
repz
or
call
sbb
push
inc
sbb
fistl
int
xor
cmc
leave
mov
aam
adc
and
out
jle
int
mov
sub
push
or
mov
or
sahf
in
idivb
or
int
ret
test
cmp
push
xor
repz
sbb
adc
pop
rolb
lock
in
adc
pop
mov
mov
in
cs
mov
mov
scas
jecxz
movsl
imul
sti
inc
dec
adc
fmuls
and
sahf
and
pushf
pop
imul
roll
push
pop
mov
mov
cs
mov
mov
mov
ficoml
cmc
push
imul
add
fldl
lcall
push
aas
mov
ds
test
aam
cmp
and
pop
sub
mov
les
mov
xchg
mov
out
imul
jo
push
comiss
add
pop
cld
int3
cmc
ja
neg
inc
loopne
adc
mov
jns
mov
lcall
xchg
push
lahf
xlat
push
dec
inc
adc
mov
adc
push
pushf
outsb
outsl
int
test
lods
sarb
push
iret
mov
xchg
or
shll
adc
mov
mov
push
gs
stc
ja
and
cmc
push
inc
adc
adc
push
jp
pop
sub
and
cmpl
add
push
mov
arpl
popa
adc
gs
push
dec
push
add
mov
push
xchg
std
arpl
shrl
sti
pushf
nop
lcall
pop
push
orl
bound
and
pop
add
gs
sbb
sub
lret
daa
xchg
fidivs
sub
inc
jge
enter
je
add
adcb
cltd
jns
mov
stos
mov
iret
jl
je
lods
push
mov
sbb
mov
fadd
loope
fs
inc
sbb
imul
lret
sub
out
lret
xchg
std
clc
sbb
std
rcr
fucom
arpl
xchg
shlb
add
out
imul
test
xlat
cmp
add
dec
les
cmpsb
je
cmp
cmp
nop
jns
push
ficoms
repnz
imul
das
mov
ljmp
cmpsl
outsb
sub
push
lock
or
mov
cmpsb
mov
jns
scas
mov
mov
mov
out
and
cmc
xchg
jne
out
stc
mov
pusha
pop
lcall
add
out
fwait
sbb
jp
outsl
sub
in
imul
popa
lret
ficomps
out
cwtl
and
add
mov
testb
mov
hlt
push
dec
sbb
pushf
std
jns
push
sub
lcall
invd
movsl
cmp
icebp
jp
into
cmp
mov
or
sahf
fs
mov
dec
je
mov
test
push
out
mov
je
and
push
mov
test
stc
call
push
cld
jg
push
pop
or
ljmp
push
cltd
pop
es
out
dec
ret
and
stc
lahf
imul
lret
dec
jecxz
shrl
or
dec
fildll
vcvtsd2si
stos
pop
stos
dec
push
pop
jns
lcall
je
jo
repz
ror
out
fistps
mov
enter
call
std
test
lods
and
push
lods
xor
sbb
pop
dec
xchg
mov
adc
cmpsb
movsb
flds
sub
jecxz
add
pop
out
and
lds
aad
jle
or
inc
or
loopne
jb
int3
sub
or
jo
icebp
add
bound
xchg
mov
ja
push
push
and
call
mov
sub
imul
into
clc
or
xchg
repnz
push
or
loop
jle
xor
cmc
in
jl
jns
mov
in
or
push
fs
mov
fs
out
sub
inc
arpl
mov
popa
neg
jns
and
mov
in
xchg
leave
cltd
fcmovbe
out
fcmovb
mov
lea
mov
cmp
and
sbb
inc
fiaddl
mov
icebp
es
pop
in
insb
fimull
fisubrl
jecxz
in
out
lds
repz
out
jecxz
xchg
xorb
mov
mov
mov
add
enter
jmp
mov
in
shll
sbb
or
aad
jne
test
in
jns
xor
lea
jae
mov
pop
push
popa
and
lahf
fisttpll
aas
popf
cmpsb
adc
or
xor
and
and
movl
sti
push
adc
das
xchg
mov
in
repz
push
jg
ljmp
pop
popl
and
xchg
lea
subl
mov
mov
jns
pop
cmp
push
outsb
push
xchg
popf
mov
dec
add
mov
add
and
and
in
inc
mov
lock
lahf
stc
and
outsl
idivb
mov
jmp
xchg
in
insl
pop
add
xlat
xchg
or
mov
add
cmp
insl
ss
or
dec
movsl
loopne
adc
leave
sub
xor
mov
sub
nop
imul
mov
cmp
cld
add
pop
stc
outsb
in
idivb
jmp
pop
shlb
pop
cmp
ret
stc
and
loope
cwtl
lret
ror
inc
sub
cmp
push
xor
aad
daa
push
jl
push
test
sarb
pop
inc
jo
jmp
jp
inc
aaa
push
shrl
push
push
nop
cs
mov
int
push
inc
sub
mov
or
ss
and
dec
sti
mov
je
ljmp
cmp
add
cs
in
aas
mov
rclb
cmpsl
popa
and
push
adc
pushf
lret
dec
mov
adc
cltd
enter
mov
popf
rcrb
xchg
jmp
jmp
test
cmpsl
lret
shrl
push
fwait
movlps
mov
inc
movsl
roll
cs
bnd
bound
test
pop
mov
scas
ret
rorb
ljmp
ja
lret
cmp
les
nop
dec
push
pusha
lds
push
xchg
arpl
lock
inc
dec
sbb
mov
aas
add
hlt
aad
jl
es
cmpsl
repz
fcomip
sub
pop
sbb
push
add
jno
sahf
mov
sub
sti
hlt
sbb
shrb
fidivs
insl
test
pop
dec
int
mov
xchg
mov
std
aam
cltd
push
stc
sbb
enter
lods
ljmp
scas
jmp
pop
out
sbb
cmp
add
insl
or
mov
inc
inc
mov
test
inc
sti
mov
addr16
push
and
mov
aad
inc
mov
jbe
mov
ret
hlt
lret
les
sub
xchg
int
lahf
and
lock
vpsrldq
mov
mov
mov
cld
sbb
dec
orl
popa
add
js
pop
insl
sub
add
in
jmp
or
fwait
or
sbb
movsb
xor
mov
sub
dec
insl
cmpsb
sbb
imul
xchg
das
xor
jns
push
stos
iret
pop
jmp
scas
in
pop
je
and
sub
push
repz
hlt
jl
push
movsb
and
movsl
push
pop
xchg
cmpsl
filds
icebp
pop
in
pop
add
mov
pop
xorb
push
cmp
adc
sub
bound
arpl
int
push
inc
sub
xor
mov
incl
addr16
addr16
add
aam
adc
sub
sarl
inc
rorb
insl
mov
mov
outsl
cmpsl
jmp
adc
pusha
ss
jae
fidivrs
dec
mov
adc
xor
iret
cli
into
xchg
push
std
mov
cmpsb
mov
xor
cmpsb
mov
xor
cmpsl
lret
test
bound
movsb
push
cmp
sub
out
aaa
lcall
das
jge
mov
jae
pop
cmp
daa
cmp
bnd
cmpsl
lods
push
jl
mov
xchg
push
jae
inc
inc
mov
popa
adc
and
sbb
sti
xchg
fisubl
push
xchg
test
push
loope
mov
pop
mov
push
mov
movsl
push
fneni(8087
leave
pop
pop
mov
imul
std
in
inc
xlat
cmp
fisttps
into
rol
std
and
cmp
stos
mov
cli
ja
stc
xchg
sbb
inc
test
insl
add
cmpsb
fsubs
fcmovb
mov
cmp
stos
sbb
ret
adc
jo
or
mov
xchg
and
lret
mov
fnsave
lret
cs
cmp
pusha
push
xor
mov
xlat
jae
push
out
fstpt
das
cmp
int
daa
rcrl
cs
mov
push
or
dec
into
inc
call
pusha
cmp
push
jae
mov
out
rorl
xor
jo,pt
addb
imul
and
fmul
xchg
push
fmull
mov
dec
inc
fistl
mov
or
sbbb
push
scas
andb
in
cmp
cs
lahf
inc
aad
jl
in
sub
sbb
stos
shrb
jnp
and
push
sbb
jg
lret
pop
nop
call
or
daa
shll
lcall
mov
out
xchg
cmpsl
pushf
mov
dec
push
add
in
data16
xor
js
jo
jbe
lahf
jb
std
xchg
mov
jbe
ret
flds
mov
and
mov
fisttpll
jle
push
mov
jb
cmp
xchg
ret
mov
dec
scas
movsl
cmp
aam
out
dec
sbbl
mov
cltd
fadd
leave
add
iret
jbe
cmp
push
inc
icebp
xor
inc
or
lret
aam
jl
loope
lock
call
fs
inc
and
dec
in
cmp
sti
mov
lods
stos
push
test
rcll
sbb
adc
icebp
add
je
scas
sub
pop
and
std
clc
lods
sar
mov
lea
dec
ret
pop
pop
rcl
ret
jmp
jbe
sub
xchg
nop
shlb
cli
popa
dec
aas
xchg
and
xchg
loopne
mov
add
notb
lods
add
lahf
and
jnp
jmp
mov
mov
push
sub
xor
les
imul
dec
push
jb
ret
movsb
test
inc
mov
aad
test
sbb
repnz
sub
test
bound
xchg
imul
arpl
jnp
mov
dec
mov
test
mov
mov
call
mov
xor
cmp
popa
shlb
pushf
pop
mov
sub
out
adc
push
in
cmp
jp
paddb
into
out
or
sti
cmpsb
xor
mov
jo
lcall
les
sbbl
jle
in
mov
push
mov
mov
hlt
pop
push
shlb
pop
push
mov
test
nop
mov
test
add
jbe
add
jne
ret
js
and
xchg
lea
in
or
jne
xchg
jb
dec
roll
add
jae
stc
lcall
cmp
in
mov
mov
loopne
mov
and
jne
cmp
jmp
push
cmpl
add
ds
mov
pop
add
sbb
xor
inc
scas
jbe
test
ljmp
rorb
jns
lret
cltd
out
jmp
mov
sbb
or
das
mov
andb
in
repz
add
call
shl
cs
xchg
and
push
adcl
aad
lret
fwait
cmp
add
adc
nop
loopne
pushf
push
mov
pop
adc
jne
dec
or
inc
sti
push
lods
pop
cwtl
inc
in
aaa
pop
lods
sbb
loope
cmpb
cmp
push
cld
cmp
jg
xchg
das
push
fxch
scas
in
rol
xchg
or
jnp
insl
loopne
fwait
mov
push
lock
scas
sub
mov
lods
push
mov
push
jbe
stos
cmp
and
icebp
sbb
dec
jmp
lock
push
in
mov
pop
shlb
mov
sbb
popa
or
adc
sahf
ja
test
outsl
movsb
out
enter
xchg
lahf
sahf
les
inc
insl
cmp
jns
sbb
out
pusha
cmp
repnz
push
shrb
dec
xor
sbb
pop
movsl
mov
inc
call
adcb
cltd
mov
arpl
ja
xor
pop
adc
push
push
push
lods
stos
sub
dec
xchg
lcall
mul
lret
icebp
mov
and
pusha
in
out
in
iret
in
mov
pop
cld
jle
push
sub
sbb
in
push
pop
and
jae
and
jge
cli
bound
jb
add
fists
dec
mov
and
sub
lea
rcrb
push
mov
xchg
jp
scas
ljmp
push
rcr
jle
cltd
popf
fists
outsl
lods
fdivrl
xor
ds
jg
mov
push
xor
test
and
nop
jbe
jmp
sarl
fistpll
add
in
mov
sbb
loop
sub
xor
aad
jl
out
movsb
jbe
popa
push
pop
inc
push
push
outsl
adc
lret
cmpsl
dec
sahf
and
ds
jmp
subl
mov
xchg
sub
cmp
outsl
leave
dec
mov
in
ret
mov
and
inc
fdivr
je
sarb
and
push
jle
repnz
push
sbb
scas
cmp
fbld
mov
lods
mov
leave
inc
and
std
div
push
or
cwtl
lret
fidivs
adc
mov
imul
adcb
aas
xchg
imul
dec
popf
aam
sti
fldl
mov
popa
cld
mov
int3
mov
enter
mov
sar
sbb
adc
xchg
std
push
add
mov
dec
lods
out
mov
mov
adc
cmp
push
add
leave
mov
add
fldt
xchg
adc
or
repz
xchg
fimull
rorl
ljmp
cmp
or
cmp
rclb
ja
testb
into
cmpsb
push
inc
lods
test
cmp
adc
fucomp
dec
mov
lahf
push
stos
jno
mov
shlb
dec
call
stos
fdivs
push
std
subl
push
cmp
loope
sub
scas
dec
lea
mov
pop
bound
xor
outsb
lahf
insl
aaa
ret
negl
or
fildll
inc
popa
iret
int
je
rorl
jbe
rorb
ljmp
push
enter
pushf
lret
cmc
outsl
pop
and
lock
mov
push
lret
jge
stos
aas
in
sbb
cltd
xchg
cmc
add
mov
adc
sbb
cmp
mov
adc
dec
inc
and
aas
popf
int
adc
xchg
mov
mov
std
test
out
adc
mov
sti
push
testb
and
in
js
movsb
push
pop
and
sbb
mov
dec
push
xchg
pop
lret
fisttps
scas
adc
jae
push
and
clc
enter
push
cmp
decl
mov
lret
iret
push
jp
xor
das
test
and
cmp
jle
push
std
push
mov
pop
dec
pop
mov
or
pop
lds
add
xor
dec
movsb
push
mov
incl
cwtl
out
pop
mov
xlat
fldlg2
push
repnz
gs
xchg
cmp
dec
dec
sbb
cmp
sahf
out
std
mov
rorl
int3
sbb
adc
test
jge
sub
hlt
testb
test
and
jae
lods
ret
fdivrl
dec
inc
push
xchg
add
pop
sbb
scas
and
xor
jne
mov
inc
sub
loopne
and
adc
cmpsb
mov
dec
jl
lods
enter
cmc
into
inc
ret
gs
jo
ljmp
sbb
add
js
scas
mov
sub
jb
cwtl
fldcw
sub
dec
pop
xor
hlt
push
outsb
push
movsl
pop
cmp
jmp
outsb
daa
mov
sub
mov
iret
test
pop
sbbl
call
dec
icebp
imul
jb
sarl
jg
add
push
dec
pop
sub
pop
inc
out
repz
mov
or
jge
push
jp
mov
js
mov
push
xchg
cmp
xchg
mov
and
insl
push
repnz
and
sub
jecxz
dec
jg
inc
shll
add
hlt
lock
outsl
sub
loope
ja
dec
ret
xor
dec
mov
cli
insb
test
xchg
fcmovnbe
popa
sub
pushf
sbb
and
and
xor
or
call
jno,pt
and
daa
xor
idivb
mov
mov
mov
dec
jmp
xchg
inc
movsl
push
mov
jle
bswap
je
mov
lods
inc
add
xchg
icebp
cltd
popa
insl
rorl
lea
shrb
mov
jmp
xchg
cmp
push
or
sub
mov
jnp
pop
xchg
jp
push
xor
mov
push
iret
fisttpll
mov
jbe
fbld
pop
sbb
pop
shrb
xor
icebp
jb
or
mov
mov
xorl
andb
jecxz
inc
push
pop
repnz
dec
repz
cmp
xor
adc
adc
adc
aad
mov
aaa
pop
mov
add
lret
iret
insl
sahf
ljmp
fwait
icebp
ljmp
je
sbb
mov
into
add
shll
sub
in
jg
pop
mov
mov
rcrb
jo
jo
mov
mov
cmpsl
fldenv
call
data16
pop
and
cmp
enter
push
aaa
pop
and
es
cmp
in
inc
or
pop
pop
and
and
ds
and
add
cmp
jno
pop
xchg
outsb
popf
sub
in
icebp
mov
xlat
xor
sti
sbb
je
mov
pop
dec
arpl
aam
test
mov
shll
sti
and
out
es
movsb
lret
pmuludq
push
add
daa
push
pop
sahf
mull
rolb
inc
mov
fiadds
inc
out
cmp
cvtps2pd
mov
and
push
jae
imul
add
add
push
sbb
dec
icebp
outsb
bound
inc
xlat
dec
fimull
mov
lret
mov
popf
mov
imul
mov
andl
lcall
push
call
mov
inc
jae
sahf
mov
inc
sub
mov
dec
rolb
pop
rcr
std
and
stc
fisttpll
mov
aaa
push
push
cld
mov
xor
cmpsl
outsb
enter
mov
mov
mov
outsl
xor
push
test
es
test
aam
fbstp
call
insl
in
xor
adc
cmc
push
jb
xchg
ret
aaa
lcall
add
dec
xchg
idivl
inc
stc
sbb
xchg
scas
out
enter
inc
jle
fxam
mov
mov
xor
xor
dec
pop
clc
push
xchg
and
fidivs
out
int
icebp
and
sbb
xor
adc
stc
loop
mov
sbb
push
in
xchg
mov
add
dec
mov
out
xchg
and
xchg
lods
xor
or
jmp
push
rcl
or
pop
adc
fcoms
xchg
xchg
in
cs
movsl
hlt
xor
push
cld
dec
and
subb
add
lods
inc
push
pop
les
popf
push
xchg
mov
push
sub
jne
pop
push
outsl
or
dec
push
jne
cmpsl
jb
sti
dec
mov
outsb
cmpsb
push
add
mov
lahf
or
mov
jne
into
es
out
cltd
out
xor
lcall
in
push
jle
add
dec
imul
stc
popl
push
ret
push
je
stc
arpl
pushf
insl
jmp
inc
or
nop
in
lods
add
shll
push
mov
lods
insb
cwtl
mov
in
add
or
adc
stc
dec
movl
out
mov
out
addr16
sarl
data16
aad
add
fisubrl
leave
loope
or
cmp
push
bound
push
repnz
fisttps
cmp
jb
lcall
mov
mov
xchg
or
stc
adc
jne
jnp
and
mov
mov
test
lret
stos
into
adcb
push
xchg
in
mov
in
rorb
repnz
inc
mov
testl
xchg
fs
xor
push
ret
jns
and
lcall
push
rcrl
pop
out
shll
sbb
pop
or
repnz
sub
add
popf
test
sarl
jno
cld
push
mov
add
sbb
dec
repnz
enter
mov
lock
cmp
popa
push
jbe
xchg
cli
jp
sbb
mov
popa
out
lcall
dec
xor
mov
fstpt
mov
scas
lods
outsb
jl
aaa
je
dec
adc
pop
das
lret
movsl
lret
loopne
mov
mov
adc
xchg
xchg
jecxz
adc
hlt
clc
test
fidivrs
movsb
lret
test
lods
xor
mov
jno
xchg
xchg
xchg
int
jnp
mov
outsb
mov
jmp
rorb
fwait
push
movsl
jecxz
xchg
lea
rcr
xor
leave
stos
push
push
jecxz
out
cmp
mov
push
lods
lret
inc
inc
adc
mov
insb
and
push
add
pop
xchg
sbb
inc
push
inc
dec
test
push
fcompl
and
repnz
loopne
ja
rcr
adc
lock
add
and
mov
cmc
dec
cli
inc
xchg
cld
js
insl
hlt
sar
fidivs
cmpsl
lods
sub
jp
add
mov
aad
fadd
inc
cli
out
and
push
pop
scas
mov
jmp
push
test
jae
pop
pop
ds
fwait
es
jo
int3
sub
insl
mov
mov
fdiv
pop
jecxz
push
sub
rcr
adcb
mov
xor
adc
stos
or
and
mov
jno
aas
fwait
das
jnp
xchg
clc
icebp
cwtl
inc
fbstp
in
xchg
sbb
cmc
mov
inc
mov
mov
mov
jo
sub
test
lock
push
movsb
jl
or
xor
inc
es
mov
out
sbb
jbe
xor
xor
add
jmp
pop
lods
jns
adc
test
mov
shll
dec
insb
cwtl
inc
pusha
cmpsl
xchg
mov
mov
xor
and
xor
lock
cltd
add
and
xor
icebp
mov
das
hlt
data16
jne
pusha
jno
sbb
call
lds
idivb
hlt
mul
pop
mov
je
iret
movl
lcall
adc
movsb
push
xchg
repz
rorb
das
xchg
movups
repnz
xlat
stc
push
pop
cld
sub
test
jns
int
and
outsl
out
pop
or
or
loope
ret
add
ret
or
sbb
jne
hlt
insl
mov
into
lcall
mov
mov
pop
push
jmp
mov
push
ret
xchg
ret
cmp
inc
aam
into
enter
pop
jb
mov
push
sub
sub
xchg
mov
pop
push
and
ret
stc
vaddsubpd
jp
jno
mov
fistpll
roll
movl
les
mov
mov
popa
inc
xlat
and
movsb
pusha
add
push
mov
jo
jle
push
jl
mov
lock
xchg
pushf
push
sbb
push
mov
shr
add
out
sbb
into
or
jbe
lock
divb
orl
mov
sub
cmc
inc
out
cli
mov
cmp
sbb
clc
sti
and
aaa
clc
sub
rorl
fistl
jmp
outsb
cmp
call
icebp
icebp
pop
dec
sub
fldcw
push
cmp
pop
mov
cmpsl
loope
test
jns
or
lock
adc
loopne
pop
cmp
std
or
hlt
scas
insl
mov
pop
loopne
sbb
push
pop
mov
sub
push
add
das
cli
ss
jns
mov
and
int
xor
loop
enter
mov
push
pop
jo
or
mov
lahf
aam
and
push
sti
hlt
mov
inc
orb
enter
mov
mull
mov
fsubrs
xchg
cld
sub
pxor
roll
mov
cmpsb
sub
jl
xor
mov
sub
add
test
das
xor
inc
ds
js
cwtl
xchg
fstpt
sub
in
mov
jmp
iret
fldt
decb
test
scas
stos
nop
rorl
repnz
push
aad
cmpsb
rorb
test
and
cmpsb
movsl
iret
dec
push
adc
les
push
mov
lret
jmp
sub
es
out
sub
or
add
push
dec
sbb
jnp
cli
or
xlat
aad
imul
rolb
inc
loope
cltd
lret
cmp
xlat
add
dec
lea
fs
dec
push
mov
out
fs
std
ret
lods
fisubl
daa
push
fsts
out
aas
mov
jns
push
add
dec
sbb
stos
xchg
xor
scas
lods
push
std
cmc
mov
inc
mov
imul
jg
xchg
jecxz
dec
xor
lods
push
adc
fmull
aam
fwait
push
ds
pop
inc
cmp
daa
rcrb
adc
dec
lods
movsl
xchg
dec
gs
jmp
loop
adc
in
add
bound
mov
sbb
adc
sbb
cmp
and
adc
mov
cmp
std
out
and
hlt
daa
jl
add
orl
stc
push
call
sahf
adc
push
xchg
cmp
push
lods
add
sbb
mov
loope
pop
or
mov
call
ds
test
inc
jns
test
shll
in
ret
cmp
sti
jge
faddl
sub
and
pop
shlb
mov
xchg
movsb
fmuls
sarl
xchg
mov
out
cmp
pop
test
mov
adc
sti
mov
hlt
bound
add
aam
repz
lcall
fcomps
movsb
add
stos
add
int3
sub
testb
fnstsw
mov
fbld
and
lds
cmp
push
movsl
jmp
mov
in
sub
repnz
imul
sub
popa
adc
stos
dec
repz
cmp
cmpsl
fcmovne
fcoml
insb
dec
inc
add
out
mov
cmp
ss
adc
mov
cld
repz
rclb
rcrb
mov
lock
cwtl
lds
int3
lock
ljmp
mov
sti
insl
pop
insl
bound
sbb
into
push
repz
ds
clc
insl
pop
adc
and
aad
lods
push
adc
gs
ficompl
in
adc
aad
xor
outsl
add
add
outsl
inc
call
mov
dec
pushf
rclb
mov
jp
mov
ficoms
jle
inc
xchg
xchg
imul
lods
xchg
pop
out
std
es
inc
jns
mov
test
push
loopne
inc
lahf
aas
out
fwait
pop
stos
mov
outsl
not
cmp
gs
jecxz
jno
jb
pop
div
xchg
mov
mov
dec
cwtl
xchg
or
addr16
fnstenv
jmp
popf
pop
loope
int
ss
mov
xor
mov
add
mov
and
push
jnp
insb
adc
call
mov
inc
leave
in
loop
dec
push
insl
shll
sbb
hlt
popa
fbstp
mov
daa
fldl
dec
add
mov
mov
sub
imul
inc
loopne
sbb
sub
fs
dec
pop
mov
inc
mov
data16
mov
add
xchg
cmp
add
adc
jmp
inc
enter
push
js
push
lahf
mov
jl
add
mov
clc
and
xlat
adc
pop
xchg
mov
ret
mov
sub
xchg
add
mov
mov
inc
popa
or
dec
outsb
cltd
adc
rorl
iret
inc
xchg
sbb
dec
popf
xchg
cvtps2pi
xor
or
add
adc
xchg
push
lahf
shll
dec
negl
movsl
inc
and
shl
jecxz
movsl
sub
lret
div
xchg
addr16
xchg
sbb
stos
adc
sarb
jae
pop
mov
xor
rorb
cltd
cld
or
test
inc
pusha
sub
out
fistl
inc
mov
add
push
push
or
push
pop
or
jmp
mov
add
adc
push
mov
push
repnz
dec
lock
out
sub
loope
adc
mov
pop
sar
cwtl
sahf
popf
fs
and
push
das
gs
xchg
repz
xor
xchg
movups
xchg
out
mov
jbe
call
sub
iret
adcl
lcall
mov
pop
dec
add
ljmp
popf
hlt
test
mov
das
add
jge
jge
xchg
lcall
adc
jg
clc
cmp
cmpsl
cmp
dec
fbld
push
je
and
dec
jmp
add
cli
xchg
mov
fdivrl
adc
xchg
ljmp
popa
pop
mov
sub
lret
and
daa
scas
xor
mov
popf
mov
sbb
jmp
notb
mov
inc
xor
xchg
xchg
push
and
int
push
jbe
xor
push
lahf
test
imul
cmpsb
les
sarl
movsb
pop
add
notl
dec
pop
and
fs
outsb
repz
sarl
add
pop
inc
aaa
repz
push
test
jo
sti
or
ss
add
cmc
icebp
mulb
sub
leave
inc
cli
pop
out
lret
rcrb
loope
int3
test
or
mov
subl
int
movsb
adc
lret
pushf
sbb
fwait
adcl
arpl
dec
pushf
loope
and
sbb
nop
repnz
dec
scas
inc
fmuls
adc
inc
mov
icebp
fsubrs
push
sub
mov
and
shll
ss
sbb
mov
and
movsl
les
addb
xor
cmp
inc
sahf
stos
sub
mov
loope
dec
add
iret
inc
xor
clc
cmpsb
inc
out
pushf
xlat
scas
xchg
arpl
sub
shll
or
loope
jecxz
cmp
jae
fnsave
inc
mov
addr16
xor
jge
imul
rolb
sbb
xchg
inc
scas
ja
outsb
pop
mov
daa
sbbl
sub
cmpl
add
shrb
add
pop
ja
mov
push
andl
pop
jl
xor
shrb
add
movsb
sub
nop
fwait
test
aam
sbb
fstpl
xchg
loopne
stc
cld
push
outsb
inc
xchg
add
insl
rcll
fdivrl
push
iret
push
sub
fstpl
gs
ja
lods
insl
test
sarl
je
adcb
loope
pop
rol
fdivs
adc
mov
xchg
sbb
insl
mov
test
mov
in
lods
shlb
sarb
mov
rorb
aam
test
stos
imul
fs
ficompl
ds
xor
dec
cltd
pop
adc
test
xchg
and
mov
mov
loop
shll
inc
out
fwait
add
or
insl
lea
roll
adc
filds
sub
clc
iret
mov
xor
sti
outsb
fwait
testl
push
jo
roll
xlat
lea
pop
mov
pushf
cmp
add
cwtl
int3
dec
std
fcmovnb
das
and
addr16
fildl
jl
cs
xchg
ss
mov
adc
ja
xlat
lock
cmpsl
sub
sub
rcll
ljmp
addr16
out
cwtl
out
jp
cmp
das
in
int3
xchg
sub
idivl
mov
adc
imul
dec
fnsave
jae
mov
inc
imul
addr16
lea
jo
jecxz
ja
scas
ljmp
jg
ljmp
jo
mov
and
sbb
test
mov
out
xor
pavgw
mov
and
outsl
inc
repnz
and
dec
sbbl
arpl
fnstcw
ret
cmp
pop
xchg
jle
mov
mov
cmpsl
lret
aam
push
cmpsl
js
popa
adc
lea
hlt
sti
mov
sbb
xchg
add
int3
or
cmpsb
pop
loope
es
push
cmpb
cmp
mov
imul
or
or
ljmp
jne
adc
jno
xchg
mov
cmc
xor
icebp
sub
cltd
inc
lds
inc
fwait
mov
rcr
cmp
fbld
xlat
sahf
jae
and
pop
out
mov
enter
and
push
into
addl
pop
xchg
insl
lret
mov
hlt
fstpt
out
xchg
jp
in
adc
jae
cli
cmp
insl
mov
fistpl
sub
outsb
flds
fidivrl
dec
adc
and
mov
dec
xor
imul
int3
xor
insb
lods
aaa
inc
fiadds
loopne
sbb
shlb
daa
out
insb
std
push
xchg
pop
mov
xchg
fistl
sbb
lods
xchg
scas
pop
hlt
jo
pop
xor
xor
sub
aam
rolb
repnz
lea
or
dec
adc
xchg
or
imul
mov
inc
xchg
imul
popf
mov
outsl
xorb
add
addb
adc
push
mov
fstl
fsubs
cmpsl
mov
ret
add
stos
bound
sub
inc
je
fs
inc
add
push
mov
and
add
cmp
into
jmp
jne
rcll
sbb
pop
cmp
iret
cmp
mov
sbb
mov
daa
xor
lahf
adcb
pop
cmp
out
pop
dec
or
mov
dec
jno
mov
mov
and
dec
loopne
ret
lahf
ss
aaa
fdivp
cs
cmpsb
sbb
xorb
add
fwait
or
arpl
mov
mov
cmc
pop
xchg
sar
xchg
ret
in
adc
stos
movsb
clc
pop
popf
aam
enter
or
dec
pop
ffreep
inc
mov
mov
sbb
sbb
and
scas
inc
or
push
test
jmp
loope
add
adc
imul
mov
in
pop
fdivs
fstpt
insl
ja
cmp
orb
pop
inc
stos
insl
adc
lods
or
fistpll
iret
rorb
loope
mov
rol
lcall
addl
dec
ficoml
movsb
bound
es
stos
pop
out
jge
mov
jge
mov
push
in
in
sub
push
xchg
iret
mov
loope
inc
pop
mov
sub
adc
int3
xchg
gs
mov
ss
adc
lods
adc
dec
inc
dec
out
and
xor
daa
int
push
std
inc
xchg
repnz
in
mov
mov
mov
lds
lret
or
inc
gs
mov
jno
rcrb
mov
jno
pop
and
jno
lret
sbb
sub
cltd
adc
rcrl
xor
cmpl
push
mov
mov
mov
xor
fisubrs
cmp
xor
cmp
xchg
jge
pop
mov
dec
dec
mov
test
aas
insb
or
bound
movsb
mov
out
popa
in
mov
lock
fisttpl
lcall
inc
movsl
test
mov
loop
adc
cmpl
outsl
lods
add
sahf
test
psraw
cwtl
stos
push
ljmp
push
xor
xor
cmpsb
repz
or
or
les
cld
clc
xchg
inc
push
cmp
xchg
lahf
out
clc
je
add
mov
cld
das
and
cmp
lret
cmc
sbb
or
jne
cmp
xchg
test
and
fcoms
lahf
dec
mov
mov
repz
cmp
pop
xchg
aaa
hlt
mov
mov
lock
aad
out
sub
mov
mov
mov
dec
pop
movsl
xchg
mov
sub
lret
pop
je
popa
jns
mov
inc
push
adc
or
add
dec
dec
push
filds
inc
rcr
enter
loop
jecxz
mov
sbb
xchg
cli
mov
sahf
adcb
int
or
fsub
loope
mov
cmc
adc
int3
imul
test
mov
fcmovne
rol
xchg
adc
and
jbe
xchg
lock
xor
xor
sbb
adc
jmp
jbe
jl
fnstcw
mov
jl
cmp
in
mov
ljmp
gs
or
into
nop
ret
aas
mov
xchg
push
shlb
insb
xchg
xchg
mov
push
stc
outsl
out
and
push
adc
jmp
cmpb
fcoml
cltd
or
insl
add
loopne
jecxz
fcomp
mov
fmulp
popa
ss
mov
jmp
addb
leave
hlt
adc
fld
rclb
mov
add
call
and
push
pop
cli
inc
cs
test
aaa
push
jae
xor
mov
xchg
inc
xchg
cmpsb
dec
jl
addr16
mov
push
or
xor
jg
fnstcw
arpl
loopne
mov
sub
or
les
dec
lahf
enter
imul
fcompl
push
pop
jno,pt
sbb
ds
rorb
pop
mov
sti
add
jne
mov
mov
aas
xchg
pusha
dec
adc
lods
dec
inc
mov
pop
ret
mov
mov
dec
sahf
rcrb
adc
push
xchg
pop
push
inc
and
jmp
aas
jecxz
xor
ret
gs
icebp
sub
push
add
cltd
pop
sahf
arpl
aaa
adc
jae
sub
jecxz
stos
aas
pop
fbld
jge
mov
fs
mov
push
scas
and
je
lea
ds
loopne
cmp
inc
xor
jo
and
push
enter
jne
call
adcl
adc
test
enter
fsts
int
mov
cld
push
inc
mov
cmp
and
xor
sub
ret
xchg
mov
iret
cltd
jl
sub
lds
repz
push
insb
push
cmpsb
sub
fists
adc
dec
dec
jle
test
sbb
rcrl
add
shrl
lret
lea
lret
rcrl
ret
and
mov
push
icebp
pop
in
aaa
mov
test
stos
jo
sbb
sbb
mov
mov
das
lock
inc
clc
mov
scas
test
jae
scas
ds
mov
add
jp
dec
mov
inc
fdivr
mov
mov
push
insb
xor
pop
xor
xor
out
mov
sbb
cmp
ss
mov
mov
mov
loopne
ficoms
xlat
filds
sub
pop
les
and
rcr
enter
push
adc
sub
sbb
sbb
stc
stc
int
add
ja
xor
inc
loop
leave
add
inc
adc
push
push
in
enter
cwtl
inc
mov
ss
xor
sbb
mov
push
adc
es
mov
pop
ds
cli
add
arpl
pop
jnp
enter
stc
dec
das
lcall
lret
xchg
divl
dec
jmp
mull
pop
add
ror
pop
xchg
cmpsb
mov
ficomps
xor
dec
aaa
adc
repnz
dec
mov
jle
dec
fs
add
popf
inc
int
adc
cmc
test
fldcw
mov
dec
pop
dec
sti
popa
sbbb
shlb
lahf
xor
inc
sub
outsl
jne
cmpsl
enter
lret
add
imul
mov
mov
insl
push
in
jl
insb
xor
pop
cmp
xchg
or
dec
shll
jns
dec
mov
cmp
je
pop
out
pop
ljmp
push
leave
inc
mov
mov
add
inc
mov
arpl
lret
scas
shrl
lcall
and
push
cmc
xchg
jecxz
imul
add
mov
loopne
sbb
mov
ss
inc
iret
cltd
imul
jbe
scas
dec
add
cwtl
xor
insl
jae
std
ret
ja
xlat
and
xorps
ret
dec
xor
adc
cltd
cmp
daa
inc
pop
add
fdivp
les
jg
push
adc
lock
jge
loop
pop
sbb
xor
cli
cmp
xor
dec
pop
je
dec
sarl
mov
nop
xor
sub
addr16
sahf
dec
cmp
shrb
cmp
idivb
loope
es
xor
xchg
popa
fcoml
push
dec
xor
pop
xor
decb
cmp
inc
push
sbb
pop
jp
leave
popf
mov
add
jp
adcl
fildll
xor
push
rclb
jle
sbb
mov
mov
mov
fdivr
pop
popf
push
int3
sub
push
xchg
js
shll
fildll
out
insb
call
fs
test
nop
mov
and
icebp
push
jmp
fcompl
cmp
jb
bound
adcl
or
dec
pop
inc
icebp
mov
xor
push
pop
dec
or
xchg
push
iret
in
pop
mov
mov
cmp
or
imul
mov
addr16
mov
mov
pop
popf
repnz
fcomps
orb
sbb
cli
jecxz
aad
loope
push
fistpl
int
push
inc
jge
les
int3
jo
cmp
iret
xchg
repnz
cmpsl
pop
ljmp
outsl
sbb
xchg
push
stc
neg
adc
ja
imul
cltd
adc
and
add
in
pop
xor
jns
mov
lods
push
jmp
jge
scas
dec
add
lock
inc
popa
dec
test
push
sbb
mov
cmc
mov
sub
jg
xor
shll
shrb
xlat
loopne
flds
add
scas
sbb
xchg
push
pop
push
and
lahf
xchg
xchg
movsl
test
mov
sub
push
imul
repnz
add
sbb
inc
jo
nop
and
lahf
jo
sub
and
int3
scas
data16
iret
test
lret
push
into
sub
cmp
dec
mov
insl
mov
notl
mov
bound
mulb
mov
int
jmp
sub
lds
xor
cwtl
push
sarl
dec
into
and
dec
add
lods
ja
adc
adc
shll
cld
sbbl
mov
in
mov
mov
js
lcall
jb
xchg
dec
out
xchg
inc
nop
and
lret
mov
outsl
inc
cmpsb
and
divb
lock
mov
push
jmp
popa
inc
fstpl
or
dec
sub
movsl
mov
jns
push
negl
repz
out
movsl
pusha
lods
sbb
pop
dec
or
pop
adc
mov
in
mov
sub
and
cmp
mov
movsb
push
xchg
insl
and
inc
dec
adc
outsl
pop
out
test
xchg
lret
leave
pop
mov
movsl
and
arpl
dec
sub
mov
add
mov
cmp
sti
mov
cltd
bound
addr16
jo
fsubs
adc
andl
loopne,pt
adc
inc
hlt
jo
arpl
stc
mov
sarb
test
cmp
adc
mov
cmpsb
mov
data16
sbb
lds
adc
jns
push
xchg
cmp
nop
rcrb
addr16
sbb
xor
imulb
in
cmpl
cltd
stos
sbb
loop
insb
lret
cld
mov
pushf
lock
jmp
push
jbe
fmuls
or
aam
enter
cmp
sub
sbb
xchg
pop
sub
fstpl
mov
jne
ds
xchg
lret
stos
scas
dec
push
pop
or
sti
lods
cmp
push
jle
inc
mov
jne
pop
adc
imulb
fmull
aam
adc
ja
aad
test
out
mov
out
push
ljmp
mov
mov
inc
push
imul
sbb
inc
cmp
push
mov
test
or
data16
sub
mov
enter
push
push
and
imul
incb
dec
movsl
ss
out
and
in
add
mov
enter
cmp
mov
dec
jl
dec
loopne
loope
andl
pop
inc
shrl
and
inc
sub
dec
inc
in
mov
out
dec
nop
mov
movsb
pop
movsl
push
adc
mov
and
cld
mov
xor
and
jge
test
inc
xchg
sti
dec
pop
inc
or
xchg
push
xchg
cs
xor
je
mov
adc
mov
roll
shll
fildl
xor
xor
cli
fmull
jb
negl
imul
xchg
and
mov
stos
adc
lds
inc
cld
iret
call
add
int
shrl
jecxz
js
adc
pusha
xor
and
sbb
mov
pop
fdivrs
sbb
daa
mov
xchg
inc
add
mov
fnstsw
jne
imul
pop
mov
cwtl
pop
addb
dec
fisttpll
insb
call
cs
cmp
inc
dec
add
test
sbb
mov
xchg
jge
cltd
or
pushf
fbstp
adc
std
xchg
adc
jmp
loope
je
inc
mov
sub
or
inc
repz
and
or
sub
js
js
shr
sub
mov
mov
jp
repz
jl
test
stc
loope
ret
mov
jl
leave
sbb
jmp
pop
lahf
mov
sub
dec
das
or
mov
fs
mov
pop
loopne
or
movsl
push
push
push
dec
cmpl
in
push
and
add
nop
adc
push
jns
dec
cwtl
int
movsl
mov
mov
in
insb
xchg
and
imul
lcall
or
add
mov
jmp
xchg
jnp
add
mov
and
in
gs
repnz
mov
cmc
addr16
cmp
flds
sbb
and
fildll
cmp
mov
dec
fadds
mov
xchg
inc
roll
ret
aaa
adc
sarb
xchg
mov
xchg
pop
stc
pop
stos
mov
cmp
sbb
pop
sub
add
jl
add
pop
rcrl
scas
fsubl
add
pushf
xor
lds
mov
mov
sub
cmp
pop
ja
xchg
shlb
adc
inc
loop
inc
lret
roll
orl
movsl
jae
iret
repz
insl
loop
orb
jl
and
imul
push
jbe
hlt
and
test
jge
and
mov
jmp
das
ret
jne
sub
iret
jb
jle
adc
lds
xchg
xor
jge
mov
nop
addb
add
inc
xor
pop
dec
es
pop
pushf
mov
mov
jb
xlat
adc
jmp
mov
mov
in
xchg
adc
ss
xorb
neg
in
push
or
mov
lret
adc
shl
popf
adc
xorl
cmp
js
jmp
hlt
mov
adc
sub
mov
and
sub
mov
push
pop
cltd
mov
adc
sahf
mov
inc
test
xlat
lods
filds
or
cmp
add
adc
mov
fdivr
rclb
repnz
add
mov
mov
cmp
xchg
stc
cli
loope
pusha
adc
adcb
scas
jecxz
sub
jns
xor
ret
jmp
popf
hlt
test
fldenv
or
inc
rorl
dec
sbb
adc
fbld
fmuls
mov
jl
insl
daa
pop
xor
xchg
pop
das
push
pop
scas
xlat
xchg
fwait
test
movsl
stc
jns
stos
pop
scas
dec
mull
int3
imul
mov
cmp
lret
pusha
stos
retw
push
sub
in
sahf
clc
lret
or
jae
fwait
push
movsb
adc
ret
jno
xlat
push
fimull
xor
les
jo
push
mov
std
lcall
and
lret
das
fbstp
mov
xchg
cmc
push
test
pop
lahf
loopne
frstor
lcall
push
add
outsl
add
arpl
sub
pop
xchg
pop
pop
stos
or
insb
lods
mov
js
xchg
jp
mov
add
xor
mov
add
daa
or
inc
mov
xchg
mov
pop
lds
add
out
push
jb
xchg
dec
fs
nop
ds
xor
sub
popf
xchg
pop
pushf
mov
cmp
icebp
cltd
pop
repnz
add
in
dec
xchg
add
and
int3
movsb
adc
sbb
mov
dec
lods
or
inc
mov
dec
mov
inc
pusha
loop
in
pusha
es
and
cmp
pop
pop
pop
xor
int3
sbb
fstl
sub
sbb
mov
in
mov
lock
std
xchg
push
xchg
or
in
jne
sbb
fucomip
fstpt
nop
mov
mov
mov
ja
outsl
popf
mov
cmpsl
xchg
or
arpl
push
lahf
adc
aas
add
dec
pop
loope
aas
aas
sub
cmp
push
dec
sahf
shll
aad
clc
xchg
cmp
sub
popa
sti
xchg
push
sbb
mov
lock
sahf
insb
popf
loop
movsl
xor
int3
xchg
lret
fnstenv
cmpsl
and
lahf
jbe
fsts
and
rcll
mov
xor
push
cli
test
fistpll
mov
dec
sbb
inc
cmp
mov
popa
add
xorl
or
repnz
insl
dec
stos
xor
outsl
cmpsb
inc
pop
sbb
lret
sarl
daa
sub
push
fucomi
cmp
das
js
cltd
sub
sti
ret
add
mov
outsl
jne
and
call
jmp
sahf
or
xchg
mov
and
cmc
mov
loope
sub
gs
pop
pop
sar
cmp
mov
and
fwait
adc
sbb
test
pushf
xor
mov
sbb
add
outsb
cld
out
mov
insl
jno
adcl
push
push
xchg
mov
sbb
lcall
sbbb
jmp
movsl
loope
jne
insb
popf
stos
dec
flds
pop
enter
repnz
adc
aam
inc
je
rolb
cltd
adc
jmp
fnstsw
push
push
repz
mov
sub
lret
test
mov
pop
lret
inc
dec
mov
push
push
imul
pop
add
orb
pop
push
lea
mov
adc
ret
jge
jp
sets
mov
std
jns
adc
pop
adc
mov
cwtl
je
je
sahf
insb
enter
lods
add
pop
mov
lea
mov
cwtl
mov
outsb
sub
push
pop
xchg
mov
push
cli
in
into
pop
mov
not
ljmp
xor
add
push
and
jnp
stc
pop
jnp
fisttps
enter
gs
xchg
daa
push
xchg
movsb
jp
stos
cmp
pusha
loope
dec
mov
lret
fimuls
add
and
pushf
outsl
inc
adc
jnp
dec
jle
jmp
cmovl
repnz
cmpsb
push
or
jne
dec
clc
cwtl
cmp
or
fisubrl
rolb
dec
repnz
out
xchg
lret
stos
dec
scas
aad
lahf
ds
cmp
ja
mov
std
popa
cli
xor
faddp
das
xor
or
adc
xchg
sub
add
test
fsts
popa
subl
jmp
sbb
hlt
xor
xor
mov
mov
es
push
cmpsb
mov
push
call
mov
test
scas
xchg
xor
inc
insl
sbb
imul
mov
pop
cs
jne,pt
ror
push
push
mov
xor
xchg
mov
ret
cmp
aam
hlt
ss
jbe
and
inc
data16
idiv
sub
jp
icebp
adc
jmp
sub
xlat
add
xchg
cld
push
cmpsl
movsb
loop
adc
xor
mov
roll
aas
fsub
or
pop
pop
repnz
add
lods
cmp
push
jp
sub
mov
inc
lods
jne
or
icebp
adc
dec
loop
cmp
into
test
ds
mov
popl
or
fwait
jg
jno
push
call
in
rorl
pop
jg
les
incl
mull
sub
imul
dec
jge
push
mov
jns
int
xchg
cmp
mov
enter
cs
and
in
pop
pop
and
data16
xchg
aad
jns
add
sti
int
xchg
mov
xor
mov
cmp
sub
aam
dec
jbe
sub
pop
add
xchg
mov
stc
jle
out
leave
into
test
pop
push
popa
stc
adc
cmp
out
push
dec
sbb
shlb
iret
js
pop
in
push
ljmp
lds
sahf
jnp
push
roll
sbb
ret
mov
sub
mov
test
jb
mov
inc
enterw
testb
repnz
mov
or
out
cld
inc
scas
movsl
pop
mov
out
out
sub
test
sub
inc
out
mov
push
xlat
ror
mov
push
pop
imul
pop
cmp
mov
cmp
xchg
cltd
call
mov
pusha
push
xchg
nop
pop
and
dec
mov
outsb
fnstsw
cmc
fdivr
imul
dec
mov
sarl
mov
mov
and
popf
popa
shlb
push
int3
div
iret
adc
jbe
movsb
sub
test
mov
push
loopne
test
int
dec
imul
pop
mov
adcl
xchg
inc
push
adc
mov
mov
push
fsts
xorl
leave
inc
out
jae
movsb
mov
nop
or
adc
aam
cmp
push
aas
xchg
pusha
dec
lret
push
xchg
ret
cmp
xchg
push
daa
jnp
ret
mov
je
pop
adc
mov
test
cmp
inc
and
movsb
mov
xchg
fisubrs
sub
ficomps
adc
lahf
xchg
push
adcb
xchg
hlt
test
push
or
pop
cmpb
ficoml
push
push
adc
in
mov
arpl
xlat
inc
lods
lcall
hlt
dec
dec
xchg
test
mov
rolb
mov
jle
gs
fbld
shl
pushf
pop
or
xor
jno
ficomps
shll
mov
roll
cmpsl
and
inc
shll
jg
in
pop
jnp
ret
inc
mov
rorl
xchg
lar
sub
or
pop
gs
mov
or
inc
or
inc
pop
sbb
mov
xchg
inc
loop
leave
jmp
mov
adc
pop
dec
cmp
aas
xchg
in
cmc
call
out
out
adc
dec
inc
sti
leave
sbb
ret
lahf
mov
mov
sbb
jecxz,pn
jle
hlt
push
fnstsw
sub
and
stos
add
cmp
loop
pop
xchg
mov
inc
test
inc
out
sub
and
pop
sbb
dec
insl
je
inc
cltd
lret
inc
xor
outsb
adc
cmp
mov
pop
xor
pop
fucomp
pop
push
rorl
rolb
mov
daa
bound
mov
push
jae
inc
add
sbb
adc
out
mov
sub
out
lcall
jbe
pusha
leave
outsb
imul
call
in
xchg
es
stos
pop
out
mov
cli
jl
pop
mov
adcb
mov
adc
sub
cmp
rorl
and
mov
pop
inc
aad
push
fstpt
add
fidivs
mov
sub
inc
jae
pusha
pusha
sbb
sahf
pusha
jl
push
int3
jp
jbe
push
or
ret
mov
lret
mov
mov
ret
orb
adc
sti
rcl
gs
rolb
add
add
mov
stos
jge
xchg
mov
pushf
mov
inc
jg
popa
ror
sub
aaa
lret
mov
shll
arpl
lock
xchg
push
aad
data16
pop
bound
push
jo
jg
and
fs
fstl
jbe
sub
sti
shl
stc
xchg
xchg
adc
add
jb
out
pop
xor
pop
xchg
sahf
adc
sub
pop
test
inc
jecxz
flds
adc
xor
sti
inc
cmc
push
xchg
je
in
rcll
insl
push
and
cmc
sbb
testl
shl
mov
sbb
addr16
and
dec
adc
jmp
aas
pop
sub
pop
lea
sub
push
sbb
jns
ja
or
cmp
cmp
pop
cmpsl
or
xlat
pusha
xchg
and
lock
std
lock
mov
sbb
ret
in
jbe
ds
and
int
mov
jecxz
leave
dec
fsubrs
xchg
push
insl
adc
mov
mov
aad
cmp
fs
push
out
aam
push
insb
jno
clc
ja
insb
cmp
and
mov
or
aad
jp
pusha
xchg
mov
sub
roll
out
push
aas
add
mov
ficoml
or
mov
xchg
in
addb
insb
out
and
cmp
mov
js
sarb
push
jo
rclb
cmpsb
arpl
push
jae
dec
mov
fsubs
mov
std
mov
push
dec
int
and
lods
inc
or
aad
mov
insl
cs
test
jnp
add
out
fistpll
out
lret
data16
bound
fnstcw
sbb
mov
cs
icebp
mov
jl
push
test
push
fstpt
jp
sbb
testl
push
push
stc
loopne
jmp
cli
inc
jb
nop
xor
pop
pop
roll
sub
and
or
mov
scas
in
aad
cmpb
dec
lock
pop
dec
les
or
mov
mov
repnz
into
negl
rclb
mov
outsl
dec
pop
mov
sub
sbb
fs
cmc
test
mov
xor
xchg
mov
mov
pop
ds
pop
lock
fs
rclb
inc
mov
scas
adcb
andb
add
ja
jge
popa
or
xchg
dec
mov
sbb
icebp
iret
arpl
arpl
mov
sbb
je
shll
mov
sbb
jecxz
pop
sbb
mov
add
pop
or
mov
in
dec
cmpsb
ljmp
pop
fistpl
lds
cmpsb
mov
mov
push
loop
lea
loope
js
dec
stos
clc
and
mov
jge
jno
xchg
cmpsb
paddw
in
xchg
xchg
mov
xor
in
pop
dec
jmp
gs
push
mov
stc
cld
ljmp
int3
and
mov
mov
into
adc
and
adc
decl
or
xorb
shrb
sub
cmp
adc
cltd
sub
fsubrs
xlat
xor
insl
pop
fnstcw
ljmp
insb
enter
sbb
cltd
xchg
mov
shrl
mov
push
sbb
fldl
adc
das
jmp
out
out
mov
aaa
inc
insb
add
and
notb
xor
fwait
dec
dec
push
add
mov
dec
cmp
pop
jne
xchg
bound
jle
or
lahf
lds
mov
int3
mov
adc
dec
or
inc
inc
leave
scas
pop
adc
adc
js
inc
add
cmp
stc
and
fs
inc
flds
enter
in
mov
pop
push
jns
cwtl
stos
incl
setp
pop
pop
call
add
sbbb
mov
cmp
or
cmpsb
mov
add
jae
gs
pushf
test
push
in
popf
in
pop
pop
push
fldt
mov
xchg
cmp
xor
dec
repnz
into
xor
insl
adc
movsl
lds
mov
fisubrs
dec
or
rcrl
push
push
out
adc
lret
sub
lret
mov
in
jbe
testl
push
add
inc
inc
adc
insb
inc
pushf
idiv
xchg
pop
loope
push
movsb
aam
dec
int
mov
or
cmp
cmpsb
jl
repnz
xchg
pop
jecxz
popf
imull
mov
sti
mov
sbb
mov
mov
mov
sub
mov
xchg
cmp
inc
aam
mulb
push
or
jns
outsb
leave
ss
cmp
movsb
dec
psraw
sub
cmp
jge
jecxz
lret
aad
xor
lcall
push
or
clc
jnp
ret
sbb
and
ss
movsl
push
fldl
fucomip
cmpsl
shll
das
enter
sbb
or
out
mov
sti
inc
pop
sub
cs
into
bnd
push
ds
fcoml
sub
jae
xchg
add
nop
sarb
sbb
mov
out
jge
pop
jbe
aas
xchg
std
pop
adc
and
xchg
fildl
jne
cmp
jecxz
and
cmp
cmc
jl
popa
inc
adc
popf
cmp
and
push
sbb
repnz
cmp
or
insb
mov
sub
int3
and
and
sub
and
lea
lcall
into
inc
adc
push
inc
ss
fisttpll
das
xor
inc
xchg
icebp
in
mov
jge
pop
xor
shl
fwait
mov
test
pop
int3
add
jmp
mov
push
cmpsb
mov
mov
jbe
aaa
xchg
cld
out
sub
cmp
arpl
xchg
arpl
xchg
mov
push
xchg
stc
testl
push
cmp
pusha
stc
popl
std
loope
xchg
popa
or
and
std
fnclex
sub
adc
add
mov
add
ficomps
xchg
push
out
iret
pop
das
mov
icebp
cltd
mov
dec
mov
test
aas
fnstsw
jle
inc
repz
cmp
inc
inc
aaa
adc
jne
rorl
andl
ficomps
ljmp
in
mov
inc
aad
jo
and
add
cwtl
and
aas
mov
xchg
xchg
pop
mov
mov
cld
xor
add
fidivrl
push
rcl
mov
lock
xchg
dec
loop
in
in
xchg
inc
jle
or
icebp
scas
sub
imull
cmp
mov
testl
ret
or
xor
shlb
xor
pop
cld
insb
adc
aam
dec
lods
sub
dec
jl
ja
cmp
push
notl
imul
fadds
rolb
dec
cmc
inc
ret
inc
xchg
fsubs
mov
dec
fmuls
and
mov
and
dec
roll
pop
jbe
inc
clc
xor
cs
lret
nop
sti
cmp
and
adc
push
pop
pop
ret
addl
std
loop
mov
inc
mov
xchg
or
and
movsl
fs
push
lock
pop
cmp
jp
out
ret
and
es
mov
arpl
inc
roll
leave
cmp
adc
jo
add
xchg
int
ds
mov
popa
or
cmc
into
push
fwait
cli
jne
or
fnstenv
xchg
pusha
cwtl
push
fistps
jmp
dec
data16
xor
rorb
mov
xor
test
lahf
aaa
or
mulb
add
mov
push
jae
outsb
or
daa
cld
enter
insl
cmpsb
cmp
faddp
push
inc
xor
data16
pop
pop
lahf
jge
popf
push
xlat
arpl
or
lds
push
fwait
loopne
aad
inc
and
mov
mov
jl
andb
mov
call
daa
inc
and
sti
lcall
outsb
subl
push
data16
push
sub
jl
adc
jmp
xchg
js
mov
cmc
and
mov
fidivl
inc
and
stos
lods
stos
in
sbb
loope
ss
and
fstpt
cmp
test
xchg
xchg
cwtl
mov
add
cmpsl
fiaddl
in
loopne
lea
inc
aam
out
push
inc
adc
shlb
fstpl
insb
mov
test
pop
les
mov
pushf
mov
push
lock
out
mov
shrl
xchg
sti
loope
mov
adc
mov
dec
and
pop
nop
dec
add
out
or
je
in
push
inc
mov
insb
pop
mov
pop
dec
imul
mov
sbb
xor
aaa
dec
movsb
dec
je
les
pop
mov
jge
test
jmp
sub
test
jne
xor
jnp
mov
call
lea
or
pop
dec
idiv
imul
mov
sub
jmp
repz
cmc
cs
out
out
sbb
inc
in
or
sbbl
roll
adc
pop
icebp
cli
dec
es
jnp
add
add
sbb
mov
sub
mov
lods
jbe
mov
jnp
mov
xor
ret
mov
das
cmp
addb
mov
fsubr
push
shlb
les
fxch
pop
pop
cld
and
ljmp
mov
cld
stc
lea
mov
movsb
adc
push
lret
sahf
xchg
out
adc
pop
in
out
sarl
mov
jo
loopne
repnz
out
xor
inc
xor
xor
xchg
or
int
js
sub
inc
or
iret
or
fnsave
mov
mov
sub
sarb
cmp
adc
jp
jge
stc
mul
xor
fstl
cmp
movsl
mov
movsl
loope
jne
ja
lahf
xchg
fcompl
fsts
sbb
mov
mov
mov
dec
push
push
cld
mov
jge
into
push
adc
mov
repnz
cmp
sti
test
jne
lods
loop
hlt
std
mov
and
pop
push
fcomip
cmpsb
in
cmpsl
or
mov
jb
xor
adc
xchg
clc
fcmovbe
shl
popw
je
push
pop
jnp
repz
lret
mov
je
fisubl
popf
fcmove
or
sub
dec
and
mov
adc
popl
inc
clc
push
imul
ret
jmp
test
and
scas
cmp
add
addr16
cmp
pop
sub
mov
shlb
xor
outsb
add
into
jp
scas
out
mov
cli
sbb
je
cmpsl
shlb
rclb
cld
in
rol
pushf
pop
sbbl
lds
inc
dec
popa
adc
mov
insl
int3
fs
pop
bound
push
mov
pop
enter
xor
loop
mov
jae
stos
add
addr16
pop
fildll
jle
xchg
or
mov
stos
pop
cmc
rolb
ret
jbe
mov
je
repz
lret
inc
leave
rclb
or
xchg
pop
flds
aam
pop
popa
lret
push
imul
fmull
mov
scas
jmp
gs
testl
cltd
ljmp
or
add
pusha
ret
fistl
js
inc
cmp
sbb
xchg
jge
xadd
js
lcall
fbstp
cmp
xchg
xor
test
xlat
adc
stos
ss
fstpt
orb
mov
ss
and
ljmp
or
pop
sub
shll
test
mov
pop
jg
jno
hlt
ljmp
jne
add
adc
aam
push
push
mov
arpl
imul
fwait
push
mov
inc
xchg
imul
adc
xlat
rcl
loop
ss
xchg
nop
mov
mov
test
jo
cld
pushf
or
sub
rcll
mov
repnz
nop
adc
scas
out
jno
fldl
inc
popf
test
push
icebp
sub
imul
call
loope
call
xchg
xchg
fiadds
fldl
cmp
dec
shl
out
stos
sub
add
xlat
test
shr
sub
cltd
es
popf
pop
mov
dec
xor
pop
js
pop
cltd
nop
sbb
ja
ret
jb
sub
inc
lcall
mov
loop
std
jp
add
and
div
add
mov
mov
bnd
mov
mov
sbb
jecxz
aad
dec
nop
test
popf
inc
fsts
fldt
add
pop
jg
mov
jne
insb
mov
add
int
outsl
popa
xchg
std
cmpsb
sbb
ljmp
cli
repz
dec
push
sahf
idivl
mov
mov
aad
sub
dec
stc
inc
sub
lods
pop
adc
int
jecxz
imul
cli
xlat
dec
xchg
test
fnstenv
push
in
jp
jns
mov
mov
dec
mov
mov
mov
movsl
ss
fidivrs
mov
fidivl
or
sbb
ja
ljmp
in
cmp
inc
sbb
cltd
or
fnstenv
push
mov
daa
jp
jno
push
and
cmpsl
sti
js
mov
outsl
jbe
nop
das
gs
out
or
out
push
cld
dec
dec
ret
aaa
lock
xchg
pop
push
cmp
enter
sarl
mov
lret
aas
sbb
call
divb
imul
cmc
dec
jno
popa
fsubp
pop
push
ret
mov
jne
fdivr
pop
mov
push
and
xor
sbb
push
sub
push
lret
outsl
mov
xlat
lcall
mov
int
sub
pushf
adc
mov
pop
push
leave
or
add
les
push
jg
jns
lea
sub
out
xchg
push
cmp
xor
loop
push
pop
push
gs
aas
jmp
mov
adc
mov
cmp
cmp
pop
push
push
sub
cmp
shr
and
xchg
dec
je
nop
fs
push
clc
test
dec
rcll
int
lcall
loope
rclb
ret
daa
sub
cmpb
scas
aad
and
ss
jle
adc
mov
push
mov
add
pop
dec
aaa
and
movsl
pop
sarb
pop
bnd
mov
inc
sbb
in
imul
enter
mov
pusha
ds
xchg
pop
cwtl
dec
int3
push
movsl
mov
add
pop
shl
xlat
idivb
mov
aaa
cs
cltd
imul
cmp
push
inc
iret
daa
sub
or
insl
sbb
enter
pop
push
adc
mov
mov
int
cmp
lret
icebp
pop
mov
scas
aaa
adc
hlt
push
shrb
daa
xchg
addr16
and
cmp
inc
sysenter
push
mov
popf
orl
inc
inc
fsts
aam
cwtl
xchg
mov
fistpl
arpl
subb
into
push
outsl
pushf
ljmp
inc
popf
ret
or
add
out
push
stc
pop
inc
hlt
sub
xor
aam
roll
mov
cwtl
mov
xor
test
push
fs
fcomps
and
mov
cmp
xlat
mov
mov
jp
fdivrp
push
mov
push
push
push
xor
les
cmp
dec
popa
pop
je
fsts
sub
sar
add
mov
mov
cmp
or
cmpsb
mov
movsl
sub
push
mov
jl
in
sub
add
jne
mov
or
mov
sub
dec
clc
fs
out
push
lret
or
jle
stos
imul
int
fists
repnz
lahf
loopne
dec
mov
push
push
mov
in
adcl
pop
lods
or
pop
in
stos
fcmovnu
pop
mov
jge
lret
mov
adc
call
jecxz
mov
add
ja
and
loop
pop
pusha
dec
mov
jge
lods
pop
jmp
push
testl
or
push
bound
mov
mov
and
aaa
daa
xchg
pushf
lret
jmp
xor
push
xchg
das
sub
push
dec
jge
dec
xor
ds
xor
xchg
push
add
mov
mov
adc
push
mov
fidivs
dec
adc
cmp
ret
mov
ja
call
xor
xor
ljmp
and
mov
cmp
cmp
mov
sub
jnp
das
dec
out
imul
and
ret
pop
ljmp
out
mov
scas
movsb
xlat
jbe
fbstp
jno
std
sahf
pop
aam
loop
lcall
jbe
pop
daa
aas
push
ret
ss
in
test
sarb
jecxz
fidivl
xchg
outsb
pop
pop
push
es
jp
mov
lahf
adc
jbe
imul
gs
cmp
dec
fdivl
mov
stc
mov
mov
pop
cltd
dec
ja
cmc
push
xlat
scas
and
sarb
arpl
push
mov
adc
or
rorb
fstl
jl
fs
pop
mov
fsubrs
cmp
inc
cmp
push
std
sbb
test
pop
outsb
push
dec
push
mov
pop
or
mov
mov
push
mov
cmp
or
mov
push
jp
push
lcall
sarb
dec
ljmp
aad
mov
sub
push
push
xor
jno
inc
mov
stos
das
inc
stc
loop
mov
mov
negb
es
xchg
arpl
sahf
add
rcrb
pop
enter
jmp
sti
sub
imul
repz
xlat
jns
dec
sub
icebp
lcall
jo
imulb
insl
out
and
ret
ljmp
adc
xor
mov
gs
insl
inc
lods
loope
mov
adc
fldt
mov
xorb
mov
push
push
in
jno
xor
iret
pop
movsb
xchg
aaa
push
xchg
push
sar
lock
arpl
pushf
imul
popf
fcoms
mov
add
test
arpl
cmc
and
mov
xor
out
pushf
sbb
mov
push
or
scas
pusha
add
adc
ss
fisubs
outsl
mov
enter
cmp
daa
mov
jno
add
dec
jne
push
jle
addr16
inc
hlt
xchg
pop
out
imul
ficoms
iret
cmpsl
and
std
dec
jle
orb
mov
sbb
inc
es
ss
cvtpi2ps
sbb
insl
pop
sbb
movsb
in
adc
cld
jmp
sbb
pop
rcl
pop
fidivs
pop
sarl
dec
pop
test
shr
xor
mov
arpl
mov
mov
stos
inc
pop
lahf
xlat
bt
jae
aaa
stos
push
xchg
and
adc
jb
adc
stos
jb
fs
je
dec
lahf
fs
das
ljmp
dec
cmp
push
pop
popf
and
clc
mov
jmp
jb
jmp
in
adc
push
dec
push
xorb
jl
jo
xlat
aad
inc
clc
cs
cmp
push
shll
lock
loop
mov
icebp
push
jecxz
daa
nop
sbb
xor
xor
push
stos
imul
xchg
mov
idivl
cmp
xor
xchg
mov
lods
in
subb
push
xchg
idivb
sbb
xor
ds
or
dec
jo
repnz
sti
test
sub
enter
sbb
divl
out
or
jp
outsl
and
call
push
int3
cmp
adc
arpl
push
push
out
sbb
mov
ret
rcrb
aas
mov
data16
sub
lods
sbb
test
add
mov
loopne
mov
call
sbb
rcrl
or
cld
fldcw
sub
cmpsb
in
ss
in
or
fnstenv
push
les
sbb
popa
adc
jg
mov
hlt
hlt
inc
jnp
add
mov
xor
js
and
cmpsl
ficompl
ss
inc
cs
mov
jnp
loopne
insl
push
push
stos
scas
std
stos
repz
push
and
mov
jmp
mov
lds
iret
and
cmp
adc
subl
mov
adc
mov
lock
fwait
push
ja
cmp
rcrl
cmp
cwtl
push
push
clc
xchg
push
sub
mov
adc
dec
cmp
jmp
sub
cmp
jmp
push
lds
je
std
hlt
imulb
sub
lcall
mov
repz
inc
scas
les
push
in
divb
cmp
daa
sbb
sub
sahf
dec
add
ds
sbb
add
repz
popa
xchg
jl
or
lods
xchg
and
and
push
scas
mov
dec
cs
int3
imul
xchg
mov
push
xor
fistps
and
mov
adc
lcall
sub
or
inc
jecxz
xchg
or
in
and
dec
push
dec
in
pop
mov
sub
sbb
out
into
push
cmc
sbb
leave
cwtl
jmp
vmovdqa
mov
repnz
lods
ja
dec
xchg
lcall
mov
push
call
cmp
mov
fdivr
addb
lods
mov
fs
jmp
sub
ret
push
fiaddl
xlat
jge
mov
jle
jmp
sbb
test
xchg
sbb
xchg
cltd
cmp
das
mov
or
push
pop
sbb
pop
in
pop
sub
clc
aas
aas
cmc
jl
and
fadd
pop
push
push
adc
dec
into
shll
xchg
xchg
xor
test
inc
fcomi
call
jge
mov
int
push
fbld
jo
sub
cwtl
adc
int3
cli
mov
nop
ljmp
ret
jmp
in
inc
mov
movsl
mov
xchg
push
jnp
lods
ss
xchg
js
fst
push
adc
fcoml
clc
or
or
decb
cwtl
mov
rolb
lods
mov
int3
mov
inc
lahf
cltd
je
push
lea
sti
jge
repnz
pop
push
inc
fisttps
fsubs
repz
cmp
notl
shrb
adc
in
scas
mov
push
add
in
sarl
sti
jae
pop
in
into
sbb
fnsave
jmp
add
adc
inc
pop
rorl
addr16
ljmp
pop
cmpsl
lods
in
es
push
dec
mov
rcr
daa
mov
call
push
repnz
pop
sub
fadd
mov
out
adc
ja
insl
mov
inc
mov
xlat
loope
sti
insb
dec
enter
pop
repz
pop
bound
add
push
push
out
sub
hlt
ss
ds
icebp
pop
cmp
mov
mov
xchg
xchg
into
mov
out
adc
ljmp
inc
imul
lods
and
scas
push
scas
pop
scas
ds
int3
add
decb
jae
rolb
dec
and
shll
jle
repnz
bound
and
xchg
ficompl
cmp
pop
xchg
inc
inc
push
sbb
stos
daa
fisubs
adc
aam
push
pop
pushf
or
mov
jge
test
xchg
js
js
mov
fwait
pop
xorb
cmpsb
nop
lahf
jecxz
jmp
adc
add
dec
inc
in
and
jns
shrl
jo
sarl
mov
lds
insl
xor
enter
popa
add
fs
jo
xchg
movsl
pop
add
cmp
insb
enter
sarl
nop
sbb
mov
or
fidivs
push
std
in
pushl
mov
repz
loopne
inc
rcll
xchg
movsl
rcll
push
outsl
in
dec
sub
mov
mov
add
inc
push
pop
js
insb
and
stos
jmp
inc
push
and
jb
in
cmpsb
test
das
jmp
mov
lahf
ret
bound
mov
inc
cmp
push
adc
dec
sub
movsl
xor
add
inc
mov
dec
pusha
xchg
test
pusha
dec
or
icebp
cs
add
fiadds
fadds
jno
stc
hlt
fcomi
jo
fnsave
decb
fs
test
mov
mov
into
cli
fwait
xorl
pop
aaa
push
cmp
jle
mov
mov
ljmp
add
sub
pushf
sbb
cs
aas
pop
sti
sub
iret
sub
mov
xchg
xor
mov
mov
sti
push
sub
mov
adc
aaa
imul
and
jns
push
jmp
hlt
in
fsubl
repnz
push
mov
in
outsl
arpl
push
iret
push
mov
xor
scas
xchg
mov
fimuls
sub
dec
fsubrl
push
xor
sbb
sub
scas
jbe
adc
push
add
jo
cwtl
lahf
pop
cmc
inc
enter
scas
in
cmp
icebp
enter
add
push
jno
repnz
sub
popl
jle
fisttpl
push
cmc
shrb
jle
out
sub
jl
adc
mov
xor
popf
adc
jl
mov
lret
stos
cld
mov
out
jbe
push
mov
xor
fldpi
in
cmc
insl
addb
das
push
add
orb
loopne
rorl
sbb
mul
out
rcr
pop
cwtl
dec
push
pusha
enter
cmp
sub
std
cmp
xchg
pop
leave
data16
pop
xor
fdivl
mov
hlt
roll
push
hlt
xchg
add
xor
sub
and
mov
xchg
notl
pop
pop
iret
pop
scas
add
add
and
imul
repz
jno
or
scas
mov
or
pop
cmc
inc
enter
jne
adc
mov
ja
sbb
pushf
mov
leave
jno
sbb
enter
fmulp
inc
fsubrp
int3
push
out
lock
pusha
repz
lds
sbb
fcoml
sbb
jl
flds
sub
jb
testb
mov
mov
pop
test
cmp
push
push
or
add
ficompl
mov
insl
or
push
inc
lahf
and
xor
pop
test
or
dec
cli
adc
clc
mov
popa
push
mov
mov
inc
mov
in
pop
pop
xor
push
insl
or
xchg
mov
dec
add
cmpsl
stos
and
jl
push
repz
aas
lcall
inc
inc
lret
out
cs
stos
fnstenv
gs
lcall
hlt
xor
inc
mov
mov
sbb
dec
or
gs
mov
hlt
pusha
mov
in
jl
sbb
xor
mov
lea
movsb
pop
jo
repz
mov
lds
cmp
inc
shl
divb
scas
imul
rcl
xchg
jg
mov
xor
jl
iret
subl
cmp
int3
sub
in
adc
ja
mov
mov
cmp
jl
and
rcrl
dec
xchg
les
dec
sub
rcrl
push
imul
inc
xor
in
xchg
xor
nop
push
pop
xor
ret
ret
popa
sbb
sub
fiadds
and
shl
stc
sub
rclb
dec
pop
mov
fisttpl
arpl
mov
jmp
call
cmp
cmpsb
push
jns
inc
outsl
fadd
fcmovnu
popf
repz
pop
push
shlb
pop
and
cmpsl
fwait
jnp
imul
loope
push
bound
dec
mov
and
sarb
cmp
or
mov
xchg
sub
xor
pop
inc
cmp
mov
mov
imul
ljmp
push
in
enter
fistps
add
mov
popf
xlat
fisubrl
int
fdivl
sub
inc
cwtl
dec
cmp
cld
inc
popa
movsl
lcall
and
sbb
adc
pushl
mov
and
test
or
jb
mov
push
rolb
inc
pop
icebp
repnz
popa
jmp
jnp
inc
les
jne
pop
dec
js
mov
mov
test
push
pop
jo
sbb
push
cli
data16
gs
push
rorb
inc
test
into
data16
aaa
das
sub
gs
imul
iret
shll
icebp
cli
fcomp
xchg
xor
js
stc
mov
roll
mov
pusha
add
loope
cmp
lods
ljmp
fcompl
sbb
fdiv
dec
dec
stos
and
in
mov
test
and
and
fldenv
mov
xor
jb
lds
fcoms
push
cmp
push
mov
jnp
fcmovbe
fabs
mov
cmpxchg
je
icebp
sar
dec
jne
jl
stos
mov
cmp
out
sub
int
dec
inc
pop
xchg
bound
imul
xchg
aaa
sbb
add
sti
loop
in
jae
inc
push
out
cmp
je
jp
pop
call
dec
fs
sbb
popa
popa
push
addr16
or
dec
lret
cwtl
jmp
jne
cmp
les
stos
pop
sub
mov
cmp
mov
dec
int
push
push
cmp
std
jne
pop
ljmp
push
lods
hlt
shlb
lock
comiss
sqrtps
xlat
mov
or
fstl
dec
divl
out
sub
jle
adcb
insb
pop
movsl
mov
mov
jp
cli
ficompl
sub
test
add
negl
push
cmp
mov
in
arpl
sti
andb
rcr
leave
daa
jae
add
add
and
pop
mov
push
mov
push
shll
imul
outsl
dec
add
inc
loop
pop
jmp
lods
mov
stc
add
ret
xchg
or
dec
mov
imulb
aas
cs
sbb
lods
mov
mov
and
xor
jmp
stc
add
idivb
adc
inc
pop
cmc
ret
aad
lahf
fistpl
pushf
int
ja
jecxz
add
cld
mov
fisubrl
fldcw
push
mov
and
sub
jmp
mov
push
mov
test
jnp
out
leave
jmp
daa
cmp
or
sub
repz
loopne
sbb
shll
hlt
ret
mov
arpl
xor
subb
mov
pop
test
mov
xor
faddl
std
xor
repz
les
dec
add
out
fs
jno
pop
sub
test
xor
ret
cmp
js
pop
outsb
mov
inc
jle
int
mov
lcall
push
mov
ret
stc
sahf
jae
popf
js
mov
add
mov
fldcw
insl
enter
shll
stc
shll
xchg
in
movsl
movsl
sub
mov
pop
fimull
sub
loop
ss
shll
lcall
addl
pop
je
jne
pop
scas
dec
test
sub
xor
adc
test
pop
or
in
sub
cmpsb
xchg
mov
jnp
lods
mov
sbb
sbb
xchg
sub
inc
sub
adc
dec
int3
xchg
sbb
clc
mov
test
cmc
push
add
mov
nop
imul
mov
into
adc
dec
cli
fistpl
and
iret
test
add
ljmp
mov
ret
sti
lret
push
repnz
adc
popf
sarl
push
jle
gs
sbbl
stc
in
mov
fs
adc
cmpsl
push
sbbb
xchg
lods
cld
pop
in
loopne
enter
loope
std
in
adc
aam
xchg
je
popa
mov
or
outsb
xlat
xchg
mov
int
addl
cmp
or
popf
pop
out
ja
nop
shrb
inc
leave
cmp
shrl
mov
sbb
add
pop
test
add
movl
push
stc
mov
loop
frstpm(287
or
push
mov
fadds
sub
jg
xchg
cmc
into
push
mov
push
int3
out
roll
test
cmp
out
cmp
in
inc
movlps
dec
push
inc
mov
jb
jl
in
sub
sub
sub
inc
jae
pop
xchg
out
lea
sbb
testl
int3
pop
cltd
call
jle
inc
jo
add
out
pusha
loope
cwtl
push
mov
mov
mov
add
or
pop
sub
out
fwait
pop
mov
jnp
arpl
loope
addr16
mov
push
mov
xchg
idiv
lods
sbb
mov
in
and
add
mov
cmc
outsl
mov
xchg
jb
and
shr
sbb
cwtl
and
pop
push
in
rcrb
into
lock
stos
lock
mov
pop
jg
clc
lahf
test
repz
or
sti
lea
nop
aam
cwtl
dec
inc
mov
insb
mov
pop
popa
push
or
xchg
cltd
sbb
int
jb
pop
inc
and
out
xchg
jle
ret
loop
mov
jns
pop
imul
idivl
stc
jmp
inc
insb
mov
add
leave
mov
scas
lret
xchg
cmp
addl
movsb
sbb
outsb
add
scas
xor
clc
cmpsl
mov
icebp
scas
jb
push
in
pop
jmp
jo
inc
mov
lret
mov
add
insb
outsl
adc
lahf
jle
mov
aad
enter
adc
pop
shlb
push
mov
push
push
mov
pusha
popa
movsb
neg
pushf
stos
repz
cli
or
in
ret
dec
jo
and
mov
xor
sub
int
sub
jnp
ret
fsts
jns
mov
cmpsl
cld
sbb
mov
outsb
sub
repnz
jmp
xor
sub
pop
xor
repnz
roll
mov
pushf
sub
insb
in
outsl
ret
adc
mov
mov
sbb
fs
rcll
mov
fldt
imul
popa
mov
pushf
inc
fimuls
in
push
aam
test
cmp
ljmp
lret
idivl
mov
mov
lahf
mov
loop
dec
and
int
push
fs
imul
scas
mov
lcall
cmp
lret
dec
out
mov
push
xor
idivl
movsb
out
pushf
mov
outsb
test
add
or
nop
mov
dec
mov
or
xchg
popa
mov
fs
dec
xchg
push
inc
cli
jle
pop
mov
out
jl
dec
in
adc
push
or
jo
lret
inc
xor
sub
jne
jno
xchg
scas
dec
mov
shlb
mov
pop
or
out
inc
daa
ret
clc
sbb
jp
add
int
lret
fnstcw
dec
sahf
in
pusha
pushw
pop
loop
in
push
dec
clc
sub
push
scas
push
dec
dec
or
push
inc
popa
gs
fmuls
in
xor
xchg
xchg
lcall
mov
dec
rcrl
gs
ja
jg
mov
jecxz
loop
and
mov
outsl
jp
xor
cltd
pop
repnz
xchg
pop
adc
fidivl
lods
out
mov
lods
sbb
lods
stos
xchg
mov
aaa
and
xor
insl
mov
enter
movsb
bnd
mov
mov
sub
fsubl
mov
sub
iret
xor
popa
jnp
jb
lret
test
icebp
sub
mov
out
sarl
xchg
jne
cmp
int
sahf
and
mov
and
inc
jmp
inc
outsl
cmpsb
add
push
jmp
jp
dec
cmp
popa
push
dec
push
fmuls
cmp
int3
cwtl
xor
insl
call
mov
xchg
and
sbb
shrl
outsl
lret
pusha
push
pop
push
fwait
mov
aas
wbinvd
out
sbb
in
push
add
jae
or
jecxz
dec
ljmp
sbb
xchg
daa
push
and
inc
mov
sbb
subb
mov
xor
inc
rcrb
inc
sarb
js
mov
push
xchg
mov
xor
xlat
cmp
dec
jno
xor
xchg
mov
daa
push
dec
ds
ret
jl
stos
cmp
cmp
cmp
mov
fs
gs
dec
and
ret
int
mov
cmpsb
xor
mov
shl
insl
xchg
pusha
sub
cmp
mov
pushf
push
mov
and
mov
mov
jecxz
pop
add
add
movsb
ljmp
shll
pop
loop
pushf
roll
cmp
in
sbb
inc
pop
loopne
fsubs
mov
divb
mov
les
fists
and
mov
ret
pop
xchg
mov
jne
lds
cld
adc
scas
rolb
pop
call
jge
mov
test
lea
push
test
insl
popa
sbb
pop
in
adc
add
in
xchg
xor
jg
outsb
fcmovnb
xchg
adc
xor
mov
lret
std
in
push
fwait
push
enter
push
in
out
lcall
and
jp
push
bound
sbb
dec
lcall
mov
stos
es
and
outsl
jnp
add
lret
lcall
gs
mov
rcrl
xchg
push
and
hlt
cmp
movsl
imul
inc
and
xlat
mov
nop
out
inc
pop
mov
out
lods
push
aas
add
pusha
pusha
cli
imul
dec
inc
sti
push
adc
in
sub
js
daa
out
adc
xor
pop
pop
adcl
cs
sbb
push
push
sbb
divl
mov
xchg
cmp
sahf
loope
mov
stos
lcall
xor
mov
clc
movsb
adc
inc
jbe
jge
insl
stc
aam
add
pop
dec
call
cli
lds
xchg
mov
mov
and
cmp
pop
dec
mov
jne
mov
ss
pop
cld
mov
in
lods
xor
sub
dec
fwait
push
dec
xor
mov
jle
mov
ljmp
push
sbb
jae
or
into
mov
sbb
ficomps
gs
notl
push
mov
aad
pop
dec
insb
jnp
sbb
adc
jns
outsb
push
inc
outsb
sbb
mov
aam
jl
dec
sub
out
push
std
loopne
cld
pushf
or
mov
xchg
cmpsl
ret
pop
imul
cld
outsl
out
mov
repz
push
sti
or
imul
push
ljmp
xchg
jae
xor
shlb
sbb
and
js
push
and
bound
push
mov
imull
out
leave
push
es
lea
push
imul
mull
fistps
mov
xor
sub
jl
out
cmp
dec
clc
negl
rorb
add
jl
sub
imul
push
cmpsb
xchg
inc
in
inc
dec
dec
xchg
scas
outsl
mov
dec
mov
mov
add
push
popa
add
push
jae
and
mov
fs
jo
add
xchg
sbb
mov
dec
xchg
pop
arpl
data16
mov
jge
push
outsb
or
push
jb
push
fsub
test
jmp
addr16
data16
es
mov
adc
xor
or
xchg
mov
ss
inc
stos
dec
push
or
fidivrs
into
pop
or
jo
stc
test
xor
sbb
mov
pop
out
gs
pop
and
add
inc
ret
shll
in
jecxz
pushf
inc
ja
xchg
mov
mov
das
or
aas
or
mov
mull
lock
jp
icebp
sbb
fldenv
sar
rcrb
mov
cld
inc
lods
and
ja
sbb
add
int
iret
push
stos
push
inc
push
xor
pop
js
jo
iret
sbb
stos
pop
fistps
xchg
test
stc
cmp
ds
lods
add
adc
jle
lcall
push
js
scas
xor
ja
sub
jp
inc
mov
iret
sub
mov
mov
cmovg
sahf
and
push
cmp
cmp
call
adc
and
cs
cs
xchg
jmp
dec
cmc
shr
push
xchg
jns
add
pop
lret
imul
pop
lret
inc
insb
and
int3
sbb
fdivr
lock
mov
mov
push
pop
add
into
or
sub
dec
mov
inc
xor
jae
xchg
stos
xchg
mov
inc
jbe
icebp
xchg
jo
test
xor
inc
adc
mov
cmp
cld
pop
ds
and
bound
inc
in
sub
mov
xor
mov
inc
fdivrs
loopne
lock
mov
sub
out
push
test
sub
fistl
sub
cltd
mov
jo
stc
std
and
cwtl
mov
mov
rol
out
pusha
adc
sbb
fistpl
repnz
add
call
push
xchg
ja
adc
jl
mov
sti
cltd
push
sahf
aad
xor
push
pop
mov
jo
je
mov
sbb
imulb
sbb
jle
cld
ret
jp
popf
movsb
inc
add
push
ss
negl
push
or
nopl
xchg
pop
in
test
xor
insb
mov
test
jo
sub
inc
xchg
shrl
in
sub
add
dec
and
js
mov
jl
xchg
mov
and
je
dec
test
pop
aad
rolb
pusha
xor
and
ljmp
fsts
mov
mov
jge
hlt
add
int
or
pop
insb
push
pop
fsubl
xor
sbb
cmpsb
aas
xorb
into
das
mov
push
sahf
pop
inc
mov
mov
into
mov
and
xchg
pop
pop
pusha
xchg
mov
add
roll
movsb
cwtl
or
lea
and
in
sbb
add
jae
aad
mov
and
adc
mov
shlb
cld
jnp
mov
xchg
and
jns
jno
fs
jbe
aam
jbe
das
in
je
enter
rclb
ds
xchg
mov
rorl
mov
push
fcoml
jmp
xlat
jne
pushf
mov
insb
mov
pop
mov
lods
xor
mov
push
std
loop
mov
dec
jg
mov
fcoml
cmp
mov
insb
add
or
mov
call
jmp
adc
std
mov
jp
push
fdivp
data16
xchg
in
loope
fidivs
cmp
xchg
sbb
movsl
jecxz
xchg
push
lea
addr16
int3
sbb
xchg
inc
cmp
dec
mov
imul
jg
xlat
ret
sbb
push
loop
cli
fwait
out
cmpsb
imul
mov
or
jnp
out
leave
stos
mov
xor
push
ja
data16
loope
fistl
mov
repz
jmp
lods
fistpll
jbe
dec
push
das
pop
popf
adc
test
sbb
das
in
dec
cmp
xor
xor
xchg
out
and
cmp
jnp
xor
mov
andl
lods
insb
daa
sub
sbbb
xor
fwait
push
inc
andl
mov
popa
shlb
les
mov
mov
mov
imul
movups
pop
insl
pop
pop
jnp
loope
lahf
rolb
dec
push
mov
or
add
jnp
in
xchg
mov
jmp
pop
xchg
xor
dec
jnp
pushf
push
mov
jno
imul
in
pop
iret
inc
sub
hlt
pop
adc
sub
xchg
rcrb
imull
jns
and
daa
push
sbb
je
inc
pop
mov
push
aad
adc
pop
push
or
int
dec
mov
popf
xlat
push
movl
push
clc
cmpb
fstl
sahf
ljmp
cs
fdivs
xchg
jg
xor
add
jmp
rorb
cmp
sarl
sub
or
adc
test
nop
jmp
push
xchg
and
and
in
cld
aaa
jo
ss
dec
testl
mov
fsubrl
xchg
sub
loop
lcall
xor
sbb
insl
popf
lds
jno
or
sahf
add
and
insl
jle
sub
mov
cmp
fcomps
jmp
jg
jl
gs
fwait
insb
mov
mov
sbb
jmp
les
lods
add
sbb
jnp
inc
sub
and
add
insb
shlb
movsl
or
jae
jnp
mov
fcoms
pusha
cmc
mov
cmp
cmp
push
push
in
iret
lcall
fcompl
rcll
insb
adc
mov
sub
inc
fisttpl
add
cmp
lcall
sbb
rep
or
mov
dec
sub
mov
lea
mov
test
mov
add
inc
loop
add
ret
leave
adc
and
cmpsb
mov
sub
dec
inc
js
xchg
leave
mov
shr
cmp
pop
in
sub
out
jle
mov
test
imul
mov
inc
into
lods
xor
inc
stc
push
xchg
in
pop
push
sbb
xor
bound
and
leave
xor
or
inc
shl
sub
in
and
dec
adc
sub
adc
into
dec
iret
js
xorl
outsb
sbb
jp
aas
mov
and
jge
adc
xchg
je
cwtl
push
or
and
inc
test
int
xor
lds
cmpb
ss
jbe
dec
mov
mov
inc
sbb
loope
ret
cmc
xchg
mov
imul
inc
mov
int3
imul
xor
and
outsb
dec
mov
ja
test
cli
mov
flds
inc
cmc
mov
fidivrs
push
ds
andl
mov
jecxz
cmp
add
loop
xchg
pop
xor
or
rclb
lods
movsl
lock
push
mov
mov
lds
xchg
and
repz
shlb
out
enter
xor
jae
sbb
gs
cmc
and
mov
push
enter
pushf
xchg
aaa
out
inc
xor
push
or
je
enter
enter
jge
scas
xor
shl
clc
dec
jnp
lds
cli
sub
imulb
ljmp
xor
push
xor
add
stos
vpmaddwd
test
cmp
xchg
xor
xchg
mov
clc
push
stos
inc
push
insl
jmp
hlt
or
push
add
xor
ret
ja
sub
jp
push
cmovns
jne
mov
arpl
mov
or
jns
lea
push
clc
push
xor
les
cld
cmp
das
cmp
cmp
mov
outsb
cmp
xchg
jae
add
bound
mov
push
out
mov
jae
loop
hlt
xchg
or
out
call
mov
and
fildl
xor
adc
aas
push
sbb
mov
pop
movsb
jb
sub
mov
sbb
insl
ret
mov
dec
ret
mov
adc
add
mov
xchg
lret
out
ret
xchg
xchg
aad
mov
mov
lcall
cli
xchg
jle
repz
hlt
testb
inc
leave
mov
xor
iret
cld
imul
in
dec
push
test
rcrl
clc
jo
jb
lea
std
mov
testl
add
test
add
icebp
jno
adc
mov
mov
popa
sub
or
hlt
adc
icebp
cmpb
cmp
dec
rcll
cmpsl
adc
push
inc
ja
mov
mov
jmp
sbb
outsl
stos
and
aaa
std
xchg
xchg
ficoms
loopne
pop
pop
cmp
or
dec
jge
outsb
imul
mov
dec
cmp
cli
popf
ja
lea
jb
test
cmc
jnp
loop
mov
mov
mov
repz
jae
cmp
jmp
xor
rcll
or
out
aas
hlt
test
fadds
in
mov
jae
nop
push
ljmp
stos
in
or
mov
loop
out
test
stos
mov
enter
and
xor
push
sub
int
dec
jle
addr16
push
aad
cld
fs
dec
testl
lcall
inc
ja
fdiv
inc
mov
in
aam
jno
or
push
jb
mov
in
rcrl
push
inc
pop
pop
lcall
out
pop
xor
fcoml
pusha
cmp
push
sbb
jmp
out
inc
pop
xlat
jl
pop
add
mov
outsl
mov
test
aas
cmp
sub
in
fsubrs
jle
push
pushf
imul
dec
mov
into
sbb
xchg
in
and
mov
dec
inc
xor
push
dec
inc
test
outsb
ss
pop
xor
sub
and
push
nop
xchg
xchg
push
pop
stos
and
test
out
ljmp
push
dec
mov
loope
mov
inc
std
cwtl
inc
jg
ja
and
inc
mov
cld
bound
lods
pop
fstpt
xchg
adcl
idivb
mov
sti
xchg
xlat
cltd
inc
xchg
ret
cmc
push
inc
in
std
mov
xor
mov
aaa
fdivrl
cmpsb
adc
xor
mov
add
push
mov
in
jns
je
mov
and
test
inc
filds
add
mov
mov
and
jb
cmpsl
xor
mov
ljmp
mov
and
sbb
sub
fdivp
add
sub
ret
dec
dec
bound
movl
jecxz
sbb
sbb
mov
jecxz
mov
fnsetpm(287
fdivr
sub
popf
lds
ss
cmp
mov
ret
pop
mov
push
ror
out
mov
out
mov
out
lahf
cmpsb
jmp
push
adc
sbb
cltd
mov
inc
les
mulb
sub
and
xor
inc
jmp
lods
dec
xchg
inc
xchg
ja
push
out
addb
mov
fwait
aad
pop
push
rorb
jbe
js
loopne
ss
aam
xchg
dec
aad
mov
out
and
clc
aam
fcmovnu
outsl
dec
stc
xchg
scas
addl
mov
jp
inc
pop
jae
dec
enter
call
gs
xchg
in
loopne
pop
je
aam
std
cmp
andl
out
xor
adc
or
aam
les
gs
adc
test
fildll
add
les
lods
and
mov
outsb
jge
fdivp
jp
call
jmp
mov
xorl
icebp
xchg
inc
dec
dec
fwait
add
xchg
insl
jp
add
test
or
ljmp
clc
test
aad
sbb
int3
test
movsb
hlt
das
xor
out
mov
jecxz
dec
add
and
insl
fwait
lahf
rolb
dec
xchg
mov
mov
ror
and
sub
pop
aaa
shlb
mov
jbe
add
jp
das
cld
shrl
mov
mov
sarl
inc
enter
mov
push
lods
mov
call
mov
fsts
pop
push
mov
repz
mov
mov
mov
mov
and
inc
push
icebp
or
and
jae
xchg
sub
stos
mov
aam
faddl
mov
in
insb
jne
sbbb
rcr
pop
pop
jecxz
or
sub
imull
push
jno
push
hlt
scas
sti
sbb
bound
cmp
gs
shrb
inc
cmp
pop
xchg
xor
call
and
mov
mov
mov
sub
cmpb
lret
and
scas
mov
push
lret
mov
jl
mov
adc
jno
clc
repz
adc
lret
sbb
ret
addr16
scas
inc
movsb
xor
xor
mov
loope
sbb
stos
pop
loope
cwtl
arpl
or
jl
imul
cs
fdivrl
cli
push
aad
sbb
mov
subb
shll
dec
in
and
fldl
pop
adc
mov
adc
push
jae
cli
xchg
jb
lret
shlb
jp
jo
mov
je
adc
dec
jge
mov
inc
xor
mov
cs
mov
add
js
jl
scas
push
inc
or
jle
and
cltd
ss
cmp
push
dec
add
mov
ljmp
test
loop,pt
bound
inc
xchg
rcl
xor
mov
pop
pmulhuw
adc
mov
fucomp
sub
fstl
or
pop
mov
dec
in
mov
jno
cmp
sbb
inc
add
sub
add
nop
push
sbb
out
xlat
inc
sub
dec
jb
jge
sar
add
jp
pusha
sbb
rcll
sahf
jecxz
add
push
mov
add
or
pop
incl
lcall
mov
leave
lods
add
sub
movsb
add
jmp
into
aas
xchg
or
sbb
sub
xor
imul
pop
cmp
cmp
sbb
or
jecxz,pn
clc
xor
in
cltd
jl
pop
pop
sbb
in
es
cmp
mov
cmpsb
add
cmp
mov
mov
loopne
sub
adc
push
cli
pcmpgtd
test
std
ljmp
add
out
pop
cmp
ror
xchg
sub
mov
xchg
mov
out
xchg
jp
cmp
sbb
adc
push
mov
jb
inc
jle
inc
int3
xchg
fadds
mov
xchg
inc
inc
jno
sub
addl
mov
push
addb
xor
mov
dec
mov
pop
testl
push
movsl
int3
addr16
sub
popa
push
mov
lods
sar
adc
sbb
mov
pop
fisubrl
and
test
pop
mov
fmul
add
enter
jmp
test
in
sub
and
add
out
push
lahf
mov
in
loopne
ja
mov
stos
mov
js
jae
mov
cmp
xlat
dec
pushf
pop
jg
dec
sub
cmp
repnz
popa
shll
cmp
dec
sbb
mov
push
aad
repz
sub
fdivs
add
int3
pop
imul
push
fiadds
pusha
cmc
lea
push
lods
xchg
popf
mov
jae
or
cmp
add
inc
adc
es
inc
loopne
mov
daa
cld
mov
fisubs
je
cld
pusha
dec
inc
jg
out
xlat
pop
sti
or
lcall
jle
hlt
sbb
aad
xchg
scas
popf
sbb
push
gs
pop
sub
int
xlat
jp
or
lods
push
fstpt
push
lea
in
test
iret
lock
fnstenv
loopne
inc
cmp
imul
push
sbb
xchg
cltd
ss
push
push
dec
mov
mov
test
inc
fstl
repnz
xor
das
jns
and
cli
insb
dec
mov
leave
dec
test
dec
pusha
out
xchg
imul
adc
cs
out
xchg
add
test
out
push
mov
dec
push
pusha
sub
stos
ja
stc
or
scas
jo
push
mov
mov
sub
cmpsb
ret
jne
push
cmp
mov
push
sbb
push
and
lcall
push
ljmp
push
mov
jl
adc
repz
or
jl
movsl
ds
jge
push
pushf
jmp
inc
mov
sub
lret
jp
subb
add
jge
jecxz
or
in
xorl
mov
inc
dec
sbb
fisttpl
int3
xchg
pop
leave
and
pushf
sub
jge
ret
mov
jbe
insl
fsubp
in
shlb
push
inc
dec
push
ljmp
les
mull
xchg
ljmp
movsl
add
mov
pop
jbe
jne
arpl
daa
sahf
insb
das
cmp
dec
add
jl
rclb
or
mov
enter
pop
push
or
movsl
shlb
insb
push
shll
and
or
jecxz
ficoml
push
inc
mov
dec
push
test
in
cli
mov
aad
sar
enter
push
sub
in
pop
andl
and
psrlq
sub
js
xor
leave
jns
jge
add
pop
adc
and
mov
push
mov
jl
mov
xlat
out
mov
cmp
adc
in
push
or
inc
push
add
push
jg
inc
add
lods
fstpt
inc
test
jae
shlb
rolb
push
outsb
xlat
mov
icebp
lock
ret
inc
inc
xchg
mov
mov
ret
xor
mov
adc
fs
cltd
mov
imul
xor
mov
out
icebp
inc
sbb
fistpll
dec
or
loope
addb
cmp
xor
or
test
iret
stc
lss
cmp
inc
adc
mov
mov
and
jbe
dec
ret
loope
pop
fnstsw
lods
inc
into
sarl
mov
push
xorl
dec
inc
xchg
cmc
add
movsl
jg
jbe
ds
arpl
push
out
ljmp
cli
mov
in
lret
rolb
push
xlat
les
xchg
push
mov
adc
aad
adc
cmp
or
push
fadd
xchg
add
jne
das
xchg
sbb
add
adc
cmp
cmp
mov
pusha
int3
xchg
aam
and
mov
fisttpl
xchg
sbb
scas
xor
test
hlt
mov
push
fwait
das
pop
repz
sbb
dec
push
incb
inc
pop
dec
psubusb
or
jne
jle
or
cmp
inc
mov
push
test
faddl
sarl
adc
cmp
out
xchg
inc
mov
pushf
into
mov
mov
dec
mov
jp
pop
pop
sub
fnstcw
fistl
and
addb
adc
les
dec
cli
ret
dec
sbb
pop
sub
adc
cmp
inc
outsl
fbstp
push
xchg
arpl
aam
lret
sub
jp
lods
inc
lods
cmp
cs
call
jmp
std
fstp
lea
inc
push
xchg
add
clc
jmp
mov
xchg
adc
xor
in
push
leave
bound
test
add
scas
or
bound
movl
test
mov
daa
add
aaa
std
ds
push
xchg
inc
daa
pushf
add
aas
jmp
in
ljmp
andb
data16
dec
xchg
mov
and
sub
xchg
xor
ja
xor
loope
jo
sarl
jnp
lahf
cltd
cmpsb
push
call
aam
and
cmp
cmc
or
loopne
pop
inc
divl
mov
dec
push
insb
mov
jns
nop
pop
and
xor
in
iret
mov
nop
bound
nop
push
mov
fmuls
popf
lret
inc
sub
jecxz
push
lock
pushf
mov
addr16
xchg
sub
jmp
xor
pmaxsw
mov
pop
sbbb
push
dec
orb
mov
insb
or
js
dec
mov
lock
test
hlt
pop
in
das
xchg
scas
mov
mov
aam
xor
fidivrs
loopne
scas
xor
out
arpl
lock
inc
jae
stc
push
adc
loop
sub
and
jnp
and
xor
mov
jbe
fsubl
iret
cmpb
in
cwtl
and
ljmp
inc
and
sar
dec
sub
dec
add
lds
dec
repnz
sub
inc
adc
xchg
cli
mov
mov
cmp
or
add
loope
std
push
loopne
jne
cmp
mov
pop
lret
int
ds
leave
jmp
inc
mov
add
and
shl
std
cmp
dec
mov
fucom
int3
imul
lock
lahf
mov
jmp
pop
mov
pop
adc
jne
ret
sahf
add
pop
push
jns
ss
out
aam
sbb
aad
cmc
ret
add
xor
pushl
jp
xlat
jmp
add
lds
test
stc
jne
ret
add
mov
jb
pop
fdivrp
fildl
aam
mov
push
mov
nop
push
mov
stos
mov
sub
mov
sti
cmpb
add
out
add
gs
insl
jnp
jae
ret
dec
adc
mov
pusha
jb
insb
mov
mov
lcall
lret
enter
xchg
popa
fs
dec
dec
cmp
out
sbb
jg
pop
xchg
jnp
inc
nop
shlb
mov
mov
out
xor
xor
negb
out
mov
mov
loope
jo
push
insl
and
jns
mov
cltd
int
in
js
jo
jl
out
mov
scas
int
dec
cmp
jns
jnp
cmp
lods
sub
add
sub
ds
aam
scas
sti
ret
cmp
pop
sahf
mov
bound
call
aam
daa
inc
push
xlat
dec
je
mov
cli
push
add
and
mov
fadds
bound
mov
cmp
xor
test
sub
pop
es
mov
ja
adc
fisubl
sbb
cmc
incb
das
scas
out
call
mov
push
call
xchg
mov
adc
in
pop
loop
movsb
sbb
inc
ret
push
xchg
sub
adc
add
out
xor
imul
es
cmp
dec
sarb
fld
into
jnp
inc
push
pop
dec
xlat
ss
cmp
mov
arpl
fucomi
inc
iret
repnz
push
push
lret
dec
inc
movsb
pop
xlat
sub
std
ds
push
mov
add
daa
push
cmp
into
xlat
test
push
test
aas
rcrl
xchg
adc
fsubs
movsl
mov
fwait
aam
mov
mov
shll
sbb
cmp
cmc
int3
icebp
enter
out
icebp
push
inc
or
orl
mov
sbb
lret
dec
inc
call
jmp
cmp
mov
xlat
les
xchg
mov
add
ljmp
pop
or
stos
into
shlb
inc
pusha
lods
pop
out
aad
fwait
adc
mov
cmpsl
ret
decb
lock
in
sub
mov
outsb
fimull
ret
lea
push
cmp
iret
xor
xor
mov
call
jl
jg
dec
out
xchg
insb
arpl
mov
aam
adc
je
cli
bound
lret
roll
stc
hlt
insb
sub
dec
clc
sahf
cmp
lcall
dec
cmp
scas
cmp
push
jb
pop
ja
inc
sbb
repnz
and
xor
jnp
cltd
dec
or
or
dec
and
xchg
xchg
mov
add
sub
scas
int3
test
std
jbe
sub
xor
pop
imul
adc
xor
sbb
dec
gs
les
jp
hlt
mov
mov
das
loopne
imul
imull
mov
test
stos
mov
jb
mov
add
ja
stc
repz
andl
fildll
inc
cmp
pop
sub
mov
aaa
rcll
jl
divb
xorl
out
test
mov
adc
cmc
test
test
icebp
push
stos
outsl
xor
or
pop
aaa
loop
aaa
push
pushf
fwait
dec
inc
test
ja
negl
mov
mov
sbb
enter
mov
pusha
scas
data16
andb
gs
orl
js
jl
cmp
mov
fdiv
arpl
shr
das
pop
cwtl
push
sub
add
aad
jne
sbb
mov
les
int3
ror
jbe
test
negl
and
pop
add
cmp
and
pop
clc
xchg
lods
jne
sahf
data16
lcall
push
and
ret
pop
lret
fdivrl
sti
clc
push
cmp
aas
leave
push
iret
data16
scas
cltd
push
sahf
pop
inc
push
mov
xchg
xor
mov
push
and
push
sbb
mov
movsl
sbb
cmp
clc
in
mov
dec
ljmp
add
repnz
out
mov
adc
jbe
sub
test
icebp
imul
push
inc
idivl
inc
cmpb
lods
mov
idivb
xor
sub
jne
fdivs
pushf
adc
and
ret
rorb
aam
sahf
adc
jmp
iret
inc
jo
sahf
lods
movq
sti
inc
jmp
mov
push
clc
cli
xor
pop
adc
sahf
addb
test
shrb
inc
stos
enter
clc
in
inc
loopne
push
or
negl
cmpsb
and
sbb
add
xchg
push
lret
jo
hlt
jmp
shrl
dec
test
pusha
adc
scas
loopne
pop
dec
loop
push
jmp
inc
jmp
mov
lret
add
push
imul
test
popfw
cmpb
ss
sbb
pop
imul
pop
in
mov
dec
mov
jns
adc
fdivl
repz
fmull
cmp
add
divl
mov
push
pop
mov
sbb
adc
cs
leave
sahf
jbe
aad
mov
loopne
mov
std
pop
cld
jg
sbb
dec
or
repnz
push
mov
ret
bound
lods
jae
lods
int
ds
xor
or
mov
xor
call
sub
popa
pusha
cmc
push
insl
mov
jo
lcall
mov
mov
sub
inc
pop
mov
stc
enter
xchg
sub
xchg
cmpsb
mov
jge
fldcw
mov
rcll
test
mov
add
movsb
sub
and
arpl
xchg
sub
or
push
sub
jle
push
pop
sub
push
mov
test
cmpsb
inc
xchg
mov
in
xor
sub
mov
and
ja
jno
xchg
testb
add
out
insl
push
inc
xchg
adc
pop
adc
and
xchg
and
mov
repnz
dec
in
xchg
xchg
fldenv
roll
cmp
lret
push
ss
xchg
test
pop
bound
lods
add
cmp
or
movsb
mov
jmp
js
pop
call
adc
xchg
or
js
sbb
cmp
fucomip
xchg
mov
pushaw
sbb
fwait
lret
aam
inc
inc
add
mov
fwait
je
out
and
mov
push
push
ss
test
fwait
nop
pop
imul
xchg
andb
inc
cmp
iret
jbe
outsb
repnz
mov
mov
pop
dec
inc
mov
jecxz
or
fstpl
mov
testl
sti
cmp
shlb
int
and
stc
push
xchg
jge
cmpsb
sub
out
scas
aam
lret
fdivl
mov
sbb
inc
cltd
ljmp
pop
jle
sbb
pop
dec
loop
lods
clc
jecxz
int
pop
mov
clc
dec
xchg
or
inc
inc
sub
test
cmp
addr16
mov
js
or
push
popf
xchg
scas
xchg
lcall
pop
repnz
cltd
je
ret
cld
jmp
or
mov
push
fsubl
sbb
xchg
dec
sub
imul
stc
sbb
aad
js
xchg
rclb
xchg
push
pop
or
enter
cmpsb
repnz
mov
sbb
or
and
imul
aas
aam
ljmp
mov
xlat
pop
into
pop
or
push
push
cmc
gs
or
lret
fmuls
pop
mov
outsl
js
movsb
jns
les
ficoml
bound
pop
mov
jo
pop
add
into
stos
dec
xchg
xchg
lods
push
jl
fisttps
and
ss
jnp
dec
imul
xchg
add
icebp
mov
popf
fs
push
addr16
mov
leave
imul
jns
xor
or
pusha
and
int
push
f2xm1
and
dec
and
out
push
push
jns
in
push
pop
js
push
movsb
xchg
add
lcall
xchg
xchg
roll
jae
lret
inc
in
scas
into
or
les
pop
cld
mov
testl
aas
mov
stc
dec
inc
sbb
std
lock
repnz
nop
jg
and
xchg
je
frstor
popf
dec
out
mov
mov
push
hlt
into
sbb
fstpl
fcoml
sub
push
insl
push
inc
cmc
inc
pop
mov
rcpps
and
jle
and
mov
scas
add
inc
jecxz
enter
jg
push
into
and
sbb
mov
mov
loop
test
pop
hlt
jp
or
mov
sar
mov
mov
enter
scas
lock
mov
jle
mov
mov
inc
mov
mov
and
xchg
cmp
mov
lcall
fisubs
js
adc
add
mov
or
pop
mov
loope
out
aaa
scas
adc
add
pushf
xorb
rorl
out
in
mov
jl
jno
sub
notl
mov
rorb
in
rcl
xor
add
cli
jp
in
dec
or
ja
inc
dec
pop
add
icebp
cmp
inc
lods
mov
jle
sub
das
addl
fwait
cs
cmp
push
mov
inc
or
pop
jge
xor
ret
std
stos
mov
rorl
push
pop
lds
mov
inc
fmuls
adc
movsl
push
push
xchg
push
test
jmp
jge
stos
loope
adc
mov
cwtl
enter
pop
lds
xchg
pusha
icebp
lock
clc
ljmp
test
gs
xor
sub
and
rcrl
test
jg
xor
cmpsb
xor
leave
repz
and
jmp
push
dec
mov
push
pop
xor
dec
mov
push
sub
cmp
int
mov
push
jge
inc
es
ja
add
mov
fcomip
mov
psllq
testl
push
movsl
jno
lea
mov
mov
dec
std
inc
inc
sub
or
and
cltd
sahf
imul
push
gs
mov
xorl
in
cmp
mov
cmc
dec
ficoms
cltd
test
mov
xchg
into
pop
xor
add
aam
loope
ret
cmp
push
shl
adc
jmp
xchg
jns
idivl
jecxz
out
mov
sub
movb
daa
jmp
mov
shll
mov
hlt
jecxz
mov
bnd
xor
jl
fst
fildl
or
cs
dec
std
outsb
scas
faddp
jae
pop
stc
loopne
mov
lret
sub
sub
aam
push
adc
out
sub
lds
jmp
xor
negb
shr
cld
xchg
clc
adc
mov
sub
lret
or
push
lods
mov
dec
lret
pushf
leave
iret
fimuls
fstpl
test
mov
ret
aam
xchg
pop
adc
lds
sub
push
xchg
push
fwait
sahf
imul
dec
cmpsl
lods
out
test
loopne
adc
and
mov
loopne
push
pop
outsb
imul
sub
lret
loop
ret
int3
lods
dec
mov
aaa
mov
jge
fs
xor
and
fs
insb
aad
xchg
inc
cmp
aas
and
cmc
iret
dec
int3
cld
sbb
add
addb
ja
push
cs
and
scas
mov
mov
adc
out
scas
cli
subl
push
mov
xlat
lahf
shlb
lahf
jnp
insb
inc
fimuls
mov
inc
daa
mov
mov
movsl
std
sub
sub
and
imul
lret
mov
repz
out
pop
push
enter
xchg
cmp
jecxz
xchg
and
cmp
xacquire
icebp
jno
rcl
sub
insb
and
mov
mov
repz
xorb
cltd
std
jnp
inc
push
sarl
xchg
push
shlb
ljmp
cmp
fsubrl
lret
mov
int3
mov
fsubs
aam
test
movsb
jae
out
test
cltd
or
divb
fisubrl
int3
loop
inc
fnstsw
iret
pop
das
xor
ret
lods
cmp
pop
dec
dec
pop
adc
testb
inc
lret
inc
sbb
rcr
out
test
sbb
sub
fstpt
and
cmp
sub
jnp
ds
imul
call
roll
repnz
add
lret
jmp
xchg
mov
sub
ljmp
mov
lcall
cmp
inc
lods
mov
xor
sahf
mov
jle
push
adc
inc
jmp
cld
popa
jge
insl
lods
sub
inc
pop
in
jg
dec
repnz
adcb
repnz
sub
jb
jns
lds
mov
jge
xchg
dec
or
push
lods
mov
fsubp
or
bound
popa
je
lcall
in
inc
inc
jge
pop
aad
mov
stos
movsb
xchg
pop
cmp
xchg
mov
cmp
ss
stos
lcall
icebp
sub
cli
mov
dec
fnstcw
in
movsb
test
mov
xchg
ss
xor
jle
xchg
mov
xchg
test
lcall
ret
adc
pop
push
mov
mov
sub
lret
adc
add
stos
mov
lods
inc
jge
stos
cmp
inc
aaa
int3
mov
call
or
ret
ljmp
arpl
adc
xor
dec
repz
mov
mov
lcall
push
test
lret
aas
push
gs
pop
jp
push
shrl
add
shlb
jge
rcrl
sbb
push
out
dec
ja
mov
shrl
incl
adc
popf
sbb
sbb
ret
test
inc
pop
int3
imul
sbb
adc
inc
jl
push
pop
pop
insb
sar
cmp
mov
jnp
imul
in
fisubrl
arpl
rorb
frstor
add
sub
js
pop
incb
mov
push
mov
in
iret
sbb
push
imul
leave
mov
jns
pop
rorl
or
movsb
and
out
fildll
lds
cmp
jne
mov
je
cwtl
outsb
mov
cmp
nop
pop
ret
push
in
cmpsl
fwait
arpl
test
ljmp
and
inc
dec
insb
std
gs
sbb
inc
std
mov
xchg
test
incb
inc
loope
shr
or
push
les
xor
mov
sti
out
pop
pusha
test
sbb
mov
imul
push
xchg
xor
aam
aas
or
mov
pop
add
addr16
dec
jmp
or
sbb
push
mov
inc
es
push
xlat
in
cld
mov
jp
xor
dec
adc
rol
pop
dec
insb
ret
call
les
mov
roll
or
out
jns
and
mov
je
mov
push
and
lods
std
sub
daa
fadd
data16
es
add
add
enter
cmp
mov
jns
pop
sub
jge
cwtl
mov
sub
clc
push
mov
loopne
insb
clc
jg
jge
gs
iret
and
ds
inc
xor
sbb
imul
adc
push
pop
push
pop
push
daa
rcrl
push
pop
out
mov
dec
or
fsubrs
xor
fisttpll
int3
hlt
ret
in
cli
mov
mov
adc
mov
ret
pop
inc
ljmp
shll
roll
cmp
sub
fidivrs
pop
pop
push
cmp
and
sbb
dec
mov
pop
popa
mov
jle
enter
data16
ljmp
cmpsb
dec
clc
lods
ret
jb
inc
cmpsl
push
imul
mov
and
popa
jne
or
cmpsl
dec
mov
mov
dec
mov
mov
filds
sbb
or
dec
in
xor
shlb
addr16
pop
std
into
int3
iret
and
sbb
xchg
adc
out
adc
out
fnstsw
icebp
mov
in
mov
mov
data16
add
sub
out
jns
pop
ss
lock
ds
and
dec
push
movsl
sub
sti
xchg
shrl
lods
mov
inc
loope
fldz
popf
xchg
pop
pop
mov
xchg
scas
xor
out
push
rorl
shlb
xor
movsl
in
pop
dec
pushf
lock
push
rolb
repnz
sub
out
or
sub
lods
mov
shll
or
mov
stc
jnp
adc
movsb
mov
mov
mov
xchg
jge
sti
push
rcrb
dec
fimuls
cs
jno
cmp
mov
xlat
outsl
xlat
mulb
mov
lds
aad
sub
cli
mov
mov
and
jecxz
int3
pop
out
xorb
xor
lret
mov
add
nop
xchg
ret
inc
cmp
add
mov
push
push
sub
scas
loopne
aaa
je
mov
cli
add
xchg
mov
jns
jl
enter
jns
aaa
mov
add
ret
mov
outsl
fistpl
sbbl
dec
test
lea
frstpm(287
outsb
pop
xor
mov
lock
cli
inc
repnz
leave
mov
xchg
jns
fistps
pop
imul
mov
or
mov
mov
sbb
cmpsb
cwtl
leave
mov
cmp
loope
fnstcw
fs
add
popa
dec
mov
les
mov
out
add
jecxz
out
pusha
sbbl
push
cmp
pop
xchg
xchg
adc
cltd
fimuls
int
out
pop
or
pop
pop
lcall
cmpsb
pop
xchg
or
mov
xor
jne
jns
push
mov
mov
push
sbbl
lret
clc
adc
testb
imul
loopne
push
lock
fiadds
inc
cmpsb
test
jne
cmpsb
lret
scas
out
mov
mov
pop
inc
repz
pop
inc
xchg
sbb
clc
into
mov
sub
out
les
adc
jecxz
cmp
inc
mov
jnp
lods
inc
add
jp
push
rclb
outsb
cmp
pop
xchg
add
mov
mov
pusha
bound
aaa
and
add
stos
push
je
xor
rcl
daa
out
cmp
fsts
xchg
insb
mov
aaa
ret
jae
mov
xor
dec
mov
sub
jl
pop
das
fwait
jns
fwait
das
sub
mov
insb
push
jge
add
sahf
fildl
loop
pop
fwait
pop
push
pushf
cwtl
mov
jmp
push
push
mov
push
xchg
jno
mov
xor
xlat
fsubr
rcll
jo
or
aas
lahf
push
cmp
pop
in
int3
mov
or
or
push
xchg
push
cmpl
and
repnz
mov
lret
sti
subb
pop
xlat
cld
rcl
imul
mov
jno
mov
push
pop
jno
cmpsb
test
mov
push
rcrl
mov
dec
xor
sub
ljmp
xor
test
mov
push
mov
clc
aad
dec
roll
xchg
adc
aad
lds
lret
pop
jmp
repnz
add
insb
cmp
jno
pop
call
push
xchg
cmpsl
push
shll
push
xchg
mov
push
or
mov
pop
arpl
rep
and
mov
jle
mov
mov
dec
fwait
push
cmp
push
in
and
lods
loop
mov
in
push
sub
xchg
sbb
dec
xchg
cmp
sbb
cli
dec
dec
addr16
pop
bound
and
fs
lcall
add
lods
iret
jo
xor
add
jne
repnz
jb
cmc
bound
clc
in
mov
cmp
push
push
pop
and
mov
jecxz
jge,pn
divl
mov
pop
repz
cmp
or
outsb
enter
es
rcll
fdivp
loopne
out
popa
sbb
jb
popa
push
movsl
sub
or
push
gs
lcall
je
add
sub
iret
mov
push
pop
jg
cltd
int
clc
cltd
es
sarb
push
data16
jp
jle
fimull
sarb
lods
lods
push
mov
cmp
cwtl
xchg
out
push
adc
inc
sub
call
xchg
sbbl
jg
inc
jecxz
pop
pop
add
decb
cmp
orb
jecxz
pop
lcall
push
mov
sti
xor
repnz
adc
pop
xchg
pcmpeqd
and
xchg
or
mov
sarb
cmp
sbb
out
or
hlt
scas
mov
js
lods
repnz
cltd
dec
ret
movsl
and
push
xlat
dec
test
xchg
sbb
inc
adc
xchg
mov
jns
aas
add
popa
mov
arpl
filds
insb
push
aam
imul
out
aad
push
push
pushf
add
adcl
adc
lods
loop
xor
lea
inc
scas
and
push
mov
jmp
mov
cmp
sbb
rcrl
mov
mov
fsubrl
ja
stos
daa
cmp
je
out
out
dec
pop
mov
lds
jle
mov
arpl
pop
stos
adc
stos
popf
mov
mov
xchg
pusha
call
mov
shlb
jle
add
mov
cmp
ret
leave
pop
movsl
in
scas
in
add
test
lods
dec
lret
pop
adc
enter
inc
push
pushl
lcall
or
push
xchg
imul
lret
fisubrs
orl
sub
insb
add
push
std
test
addr16
aaa
push
inc
jns
mov
inc
jo
shll
xchg
in
je
mov
mov
arpl
dec
inc
popa
das
xchg
push
mov
sbb
mov
fidivl
pop
imul
movb
inc
orl
imulb
inc
bound
sub
jle
fnstcw
push
subb
push
sbb
testl
je
mov
nop
sub
jg
and
dec
mov
aad
daa
pop
arpl
jnp
mov
and
hlt
xchg
adc
fsubr
sbb
sub
adc
push
test
pop
test
lea
imul
cs
leave
rorb
aam
cli
test
sub
jmp
cs
sti
add
lret
inc
leave
xchg
inc
iret
jl
sub
mov
mov
test
or
sub
scas
out
pop
push
jmp
xor
push
push
in
cmp
pop
cmpsl
mov
shll
jnp
add
jmp
nop
stos
push
arpl
stos
ds
fs
adc
cmp
pop
pop
lock
cwtl
cltd
sbbl
xor
stos
nop
pop
call
in
lea
sub
sahf
psubusb
dec
sbb
fcomip
aam
sbb
jmp
decb
aaa
push
nop
inc
iret
jnp
testl
subb
adc
jmp
gs
cs
cmp
adc
cmp
loope
inc
pop
lods
mov
fs
mov
out
sbb
lds
shrb
mov
cmp
aam
rclb
andl
outsl
mov
scas
fwait
out
fwait
or
lock
mov
xchg
ret
mov
lcall
loope
xchg
add
jbe
xchg
jle
out
cmp
fwait
xchg
push
mov
out
in
adc
jne
loopne
pop
imul
adc
scas
or
sbb
jle
cmc
push
test
fistps
cmp
sti
pop
insl
vshufps
push
mov
es
push
gs
cmc
dec
ja
aam
jo
cli
test
dec
xlat
sub
call
cmpl
fucomp
sub
ja
cli
leave
lods
cmp
test
and
int3
sbb
lcall
push
push
repnz
pop
sbb
cmp
push
ss
jl
sbb
mov
in
cltd
cmpsl
pop
repz
daa
cmp
cltd
int
mov
mov
fsubrs
cld
in
clc
out
and
cmp
popf
aad
push
out
negl
fisubs
stc
jo
xor
mov
sub
push
mov
aad
cs
and
sbb
sbb
dec
dec
adc
xor
std
pushf
cld
xchg
pop
or
out
insb
dec
adc
mov
in
addr16
add
cmp
pop
xor
test
sub
out
add
aas
xorb
aad
out
mov
jne
xchg
sub
insl
pop
push
scas
xchg
orb
push
push
pop
ret
inc
add
mov
or
push
and
hlt
inc
bound
inc
les
lods
dec
test
jbe
sub
mov
dec
scas
sub
mov
and
out
pop
scas
mov
fdivl
add
xlat
xchg
imul
mov
lods
inc
aam
pop
cmp
mov
sarb
or
lods
dec
adcb
sahf
xchg
pop
mov
in
xorb
in
aam
push
push
mov
inc
push
xor
mov
and
out
sub
or
or
int3
jb
sbb
mov
mov
out
cwtl
pop
mov
cmc
ret
sub
fdivl
scas
and
mov
lds
sti
sub
bound
push
fwait
enter
subb
dec
inc
push
mov
dec
push
lods
xchg
pop
and
in
js
sub
data16
adc
inc
shlb
orb
lods
sahf
out
loope
clc
xor
dec
cwtl
shll
bound
push
imulb
into
fsubrs
leave
or
push
lahf
or
pop
cld
in
leave
je
int3
cmp
xor
std
iret
outsb
jecxz
mov
ljmp
xor
aad
movsl
fsub
dec
cmpsl
and
add
pop
xor
or
mov
dec
shl
rorb
movl
sbb
clc
push
mov
xor
jnp
mov
jne
stc
jle
push
push
in
shrl
out
aam
test
in
push
popl
xchg
mov
lret
sub
ret
subl
dec
scas
adc
pop
rcrl
adc
out
mov
lahf
pop
mov
fs
imul
or
repnz
mov
fisubrl
push
xlat
lea
das
xchg
xchg
outsb
mov
les
roll
add
rcl
xchg
inc
inc
jge
and
aad
in
push
in
fdivp
push
pop
push
test
mov
xchg
cmpsl
testl
insb
sbb
fnstcw
insl
out
or
shll
mov
add
cmc
push
jecxz
inc
lds
repnz
mov
xor
scas
stc
std
lea
jne
xchg
mov
icebp
jno
adc
or
xchg
int3
pushf
xor
jnp
call
adc
sub
push
std
mov
adc
arpl
stos
sub
xchg
jne
cmp
movsl
mov
lcall
lret
push
lods
imul
mov
push
lods
push
xchg
test
jl
sub
bound
sub
jl
orb
callw
fistl
repnz
js
arpl
test
mov
jnp
jle
push
add
lret
cs
xchg
stos
mov
clc
xor
xchg
xchg
jb
cmpsl
mov
and
arpl
sbb
xor
sti
stc
mov
push
ds
daa
push
movsl
adc
je
mov
jg
fsubrl
jns
adc
cli
decl
cmp
mov
dec
push
xor
or
add
xchg
insl
stos
aad
imul
or
dec
xor
xchg
adc
mov
sbb
and
push
push
enter
inc
mov
inc
mov
repz
pusha
lds
inc
sbb
xchg
lcall
adc
out
push
mov
aam
pop
movsl
pop
ja
in
push
lahf
mov
push
or
mulb
nop
adc
loope
mov
mov
shll
jns
ret
insl
mov
mov
sub
and
jb
enter
outsb
jno
in
sub
and
lods
ja
or
push
out
xchg
mov
aam
mov
xor
lcall
push
jg
stos
hlt
sub
mov
and
mov
xor
dec
push
sbbb
aam
std
inc
ficomps
push
hlt
fwait
mov
sahf
jp
add
sbb
shrl
cmpsb
xorl
add
mov
sub
test
inc
scas
fisubs
add
push
pop
cmpsb
add
ss
cltd
xchg
pop
jg
and
and
daa
mov
push
jne
sub
pop
scas
js
scas
in
mov
lock
sbb
lcall
aad
scas
movsb
fcoms
ror
push
test
and
sub
fwait
aam
mov
inc
repnz
push
fmull
movsl
mov
cmp
out
test
dec
lock
or
push
pop
jl
jecxz
adc
in
in
bound
std
sub
mov
pusha
jb
dec
or
jmp
fcmovne
mov
pusha
mov
and
push
in
ljmp
mov
imul
out
push
jge
int
pop
inc
mov
mov
ljmp
test
sub
negl
pushf
in
movsl
cmc
pop
jb
cli
pop
sub
pop
gs
stos
or
or
mov
add
push
xchg
movsb
lds
jmp
or
and
cmp
lret
xor
inc
cmp
clc
mov
jne
pusha
aas
mov
pushf
lods
or
ret
ljmp
ja
mov
push
push
das
xchg
jl
mov
adc
mov
xlat
adc
dec
cmpl
pusha
scas
xchg
out
push
js
sahf
sub
inc
lahf
fcompl
shll
xchg
fs
cmp
push
cmp
aaa
adc
and
cmc
xchg
and
lcall
test
rcrl
mov
data16
into
and
push
cmp
push
dec
fsubrl
xchg
repz
in
ds
inc
lcall
sbb
cwtl
mov
loopne
aam
lea
inc
push
outsl
stos
xor
sub
fsubr
test
out
fnsave
xchg
dec
adc
pop
in
movsb
jnp
adc
fs
rcrl
dec
lcall
pop
aam
xor
leave
xchg
ror
outsb
insl
cmp
jnp
adc
cld
fisttpl
and
inc
mov
sbbb
addr16
jnp
xor
jp
mov
cwtl
into
lds
lcall
fistl
rorb
xor
fnstsw
out
mov
lret
adc
mov
out
mov
sbbb
sub
jge
int3
pusha
enter
mov
pop
movsl
dec
ja
cltd
pop
push
add
xchg
xor
out
jle
or
fistpll
pop
cmpsl
mov
xchg
mov
pop
mov
mov
out
call
mov
inc
mov
pop
and
mov
fstpl
shrb
cmp
pop
mov
les
add
or
inc
cmpsb
mov
movsb
decl
scas
or
and
outsb
xor
cmp
pop
fsubs
ss
ljmp
ret
and
out
and
andl
inc
add
cmp
push
sbb
mov
fimuls
aam
sub
and
add
dec
and
lret
dec
push
mov
sahf
outsb
fstl
mov
arpl
and
stos
loope
ljmp
fisttps
and
inc
test
xor
js
out
jb
iret
mov
sbb
xor
rolb
mov
insb
mov
fs
cltd
push
pop
add
mov
mov
dec
aas
fwait
ja
cmp
dec
aaa
lret
nop
bound
inc
mov
cmpsb
cmp
push
push
inc
fbld
shl
ret
push
xor
mov
jnp
icebp
test
mov
dec
lret
icebp
inc
dec
add
adc
in
sub
imul
sub
dec
or
add
inc
stos
fnsave
mov
jb
repz
adc
xor
fimuls
nop
xchg
por
xor
mov
leave
aaa
loopne
inc
sti
push
xor
mov
and
mov
mov
sub
push
mov
jno
add
pop
xor
ja
popa
ljmp
notb
dec
xor
fs
sbb
enter
enter
out
push
push
add
cld
mov
mov
arpl
mov
push
outsl
int3
dec
or
xchg
inc
test
cltd
push
xchg
data16
push
test
mov
pop
aam
std
sub
lods
in
mov
jg
and
lcall
out
ljmp
into
pop
jg
mul
and
jne
int3
mov
mov
mov
mov
in
imul
leave
mov
cmp
es
into
ret
adc
pop
hlt
sbb
scas
lcall
fwait
sbb
sub
push
xor
push
cmp
shrl
pop
jle
push
pop
sbb
shlb
mov
sub
xchg
inc
xchg
sbb
jns
scas
jae
popf
aad
mov
fbstp
fcmovu
xlat
jmp
sti
jb
dec
xchg
cmp
pop
push
add
in
sub
xor
pop
xchg
push
ss
mov
repnz
mov
pop
mov
mov
or
rclb
test
pop
out
rcr
test
fs
push
push
sub
adc
aad
pmulhw
ds
fcmovne
mov
sub
push
fsubs
loop
les
test
and
flds
cmp
je
stos
cltd
xor
jl
lahf
jno
add
into
jecxz
popa
and
fisubl
loop
add
out
xor
mov
stc
test
sub
in
push
xchg
dec
std
adc
adc
cmc
jne
pop
sub
inc
or
flds
aam
xchg
loopne
xchg
out
shrl
loopne
fs
adc
or
aam
dec
test
fbstp
push
mov
jl
repz
lds
aad
add
pop
sti
xchg
addr16
xchg
xchg
push
pop
test
inc
andl
inc
insl
sarb
je
outsb
sbb
aaa
sahf
jnp
call
jmp
jnp
popa
fs
jae
mov
sbb
inc
push
pusha
mov
cmpsb
cmpsl
push
cmpsl
jb
xchg
fwait
and
sub
ret
lahf
cmovb
pop
enter
xor
xchg
pop
clc
clc
je
icebp
push
sarb
fsubrs
movsl
mov
loop
lds
lods
adc
pop
push
cs
popa
hlt
divl
adc
addr16
lods
mov
mov
scas
push
lea
mov
leave
into
idivl
mov
lret
sti
movsl
push
mov
call
cmc
es
mov
pop
mov
inc
and
test
lret
icebp
dec
cmp
cli
cld
int3
leave
inc
xchg
mov
in
mov
inc
shrl
enter
fisttpl
xchg
pop
lock
nop
pop
xor
add
movsb
int
insl
lahf
fildll
sub
add
pop
mov
icebp
movsb
mov
outsb
stos
cmp
shll
enter
insl
mov
pop
test
pop
adcb
adc
sub
jne
fimull
fmull
push
inc
pop
frndint
xor
loop
inc
mov
inc
cld
and
cmpsb
cwtl
les
mull
dec
rolb
ret
push
or
xor
fcomi
insb
lahf
jbe
dec
pop
scas
fidivl
addr16
xor
xchg
inc
shlb
pop
lds
jae
outsb
test
pop
aam
pop
mov
and
jbe
dec
loope
mov
test
lcall
mov
push
mov
pop
gs
mov
mov
sarl
fs
jg
test
cs
pop
out
or
or
pop
lock
push
xchg
or
gs
sub
add
ds
pushw
fiaddl
sbb
call
js
adc
popa
mov
add
loop
loop
inc
sub
sub
cmp
lahf
push
mov
add
mov
ss
dec
push
idivb
cmp
jae
push
imul
stc
mov
cmp
inc
shrl
in
add
mov
mov
andpd
or
call
xlat
pop
jbe
mov
icebp
pop
out
lahf
fisttpl
sub
push
repnz
adc
inc
xor
add
stc
clc
mov
jl
push
ss
out
sub
sbb
mov
add
pop
sbb
cmp
mov
out
jns
pop
or
mov
in
sub
loopne
ret
jb
mov
or
or
iret
adc
aaa
testb
cli
push
pop
mov
xorb
and
xlat
mov
sub
out
mov
and
rorl
push
in
pop
sbb
mov
add
imul
mov
movsw
mov
push
stc
cmp
movsb
outsb
push
mov
xchg
jp,pt
cmpsb
jecxz
inc
or
jl
or
sub
lea
cs
xchg
xor
push
mov
test
jge
jge
imul
add
lahf
and
stos
idiv
push
shll
pop
sbb
arpl
mov
push
cwtl
cwtl
aad
xor
push
pop
into
or
sub
dec
cmp
scas
cmpsl
loope
rorb
sbb
call
mov
jns
nop
es
and
mov
dec
lds
pop
push
ja
addr16
into
mov
scas
xor
sbb
xchg
aaa
mov
insl
mov
std
sub
lods
xchg
stos
jbe
fistps
fdivl
adc
push
insl
xlat
stos
mov
lahf
mov
dec
push
mov
stos
shlb
mov
add
std
adc
xchg
fs
jb
orb
out
mov
or
pop
pop
out
sub
sub
mov
shrl
inc
mov
lods
push
or
jl
ljmp
lret
dec
repnz
xchg
inc
into
ficoms
clc
adc
or
sahf
sbbb
jnp
stc
inc
loope
dec
jecxz
dec
hlt
leave
inc
idiv
aad
loop
cli
pop
lock
ljmp
add
add
xchg
jbe
int3
clc
pop
jle
in
mov
imul
popf
cwtl
pop
psubsb
mov
test
insl
and
push
inc
xchg
shll
ja
aam
xchg
cltd
cmp
mov
mov
sti
leave
jmp
or
roll
arpl
lods
push
push
inc
int
popa
mov
fstps
fstl
add
nop
stc
xor
shlb
xchg
nop
cmp
add
int
push
shlb
imull
dec
mov
daa
test
xor
out
or
jae
xchg
mov
outsl
add
je
fwait
out
fdivrs
or
and
test
cld
mov
mov
shl
xchg
xlat
outsl
mov
inc
imul
mov
or
repnz
pop
xchg
push
lock
repz
aas
push
dec
push
jge
jne
jmp
push
clc
mov
lahf
jbe
adcb
mov
add
add
pop
mov
mov
add
jno
mov
jmp
and
imul
inc
int
into
mov
outsl
subb
mov
xchg
sub
jge
data16
sbb
add
dec
pop
outsb
stos
mov
in
cs
sbb
jmp
dec
push
push
data16
xchg
jae
stos
mov
lcall
jecxz
sbb
inc
pop
add
pusha
arpl
bound
xchg
adc
es
mov
pushf
and
xor
mov
xor
inc
fsubs
out
mov
imul
push
jnp
stos
xor
fadd
inc
addr16
add
loope
ret
repz
sbb
pop
xor
movsb
inc
adc
push
mov
outsb
bound
cmpsb
cmc
dec
sbb
add
arpl
add
jl
cmp
xlat
cwtd
add
pusha
insb
xor
int
sub
dec
inc
adc
push
mov
or
inc
jo
lock
sahf
xor
iret
loope
hlt
ds
cmc
push
ss
subl
add
inc
ljmp
dec
lcall
lahf
cmc
and
lea
mov
sub
nop
dec
push
adc
push
jecxz
sub
push
lret
xchg
test
testb
divb
fs
push
addl
mov
mov
mov
call
jb,pn
or
sbb
xor
jno
jns
mov
push
mov
daa
adc
out
es
inc
adc
dec
adc
cmp
jne
shr
out
mov
inc
movsl
sbb
mov
cwtl
lock
add
xchg
insl
dec
dec
dec
lods
push
shll
test
test
and
into
inc
pushf
ljmp
cltd
fistpl
push
push
add
lods
outsl
xor
rcrl
scas
and
fisubs
dec
int3
subb
fiaddl
fs
push
cld
cmp
ds
call
jge
mov
xchg
or
xchg
add
sub
add
xor
mov
push
dec
std
add
cmpsb
and
movl
cmpsb
imul
cmp
cmp
add
les
jmp
js
sbb
mov
into
sahf
icebp
fdivs
loopne
pop
dec
xchg
sub
out
std
push
sbb
xchg
push
les
adcl
xor
or
clc
inc
cmc
into
out
push
xor
sub
and
cmp
dec
cwtl
inc
jbe
add
out
xor
imul
mov
jno
or
adc
mov
hlt
push
inc
push
mov
cmp
ret
sbb
es
loop
stc
jb
fcompl
rorl
dec
dec
dec
mov
int3
mov
pop
loop
or
dec
cwtl
push
out
or
and
adc
xchg
dec
mov
dec
sti
int
cmp
clc
or
add
rcrb
fidivrs
insb
shlb
xor
and
sub
call
xchg
adc
orb
cs
xor
mov
adc
aad
stos
sti
jbe
aaa
outsl
arpl
push
pusha
cmp
jg
mov
cmpsl
mov
xchg
sub
stos
xchg
pop
push
test
out
das
data16
pushf
xor
cmp
xlat
imul
enter
movsl
sbb
xlat
cmpsb
xor
stos
mov
push
pop
jo
std
mov
ds
in
pop
cwtl
sti
aas
add
jmp
jge
or
sub
push
addl
and
mov
iret
sti
pop
iret
pop
add
cmc
out
dec
mov
and
mov
gs
jge
pop
sbb
inc
and
rol
xor
push
mov
lock
rol
pop
out
fildl
imul
pop
subb
mov
mov
call
dec
xor
add
fistpl
outsl
cmp
out
sti
jmp
jb
lret
pop
imul
lahf
test
add
inc
jae
lahf
mov
ja,pt
jae
pmulhw
inc
cmpsb
ljmpw
ljmp
in
movsl
inc
fneni(8087
push
xchg
inc
push
test
sbbb
fisttps
jne
dec
cmpsl
adc
popf
das
xor
popa
or
and
add
les
loop
xchg
or
push
scas
mov
test
nop
pop
xchg
pop
pop
insl
and
mov
cmc
mov
ficoms
cmpl
hlt
movsl
test
sbb
jp
div
sub
and
hlt
jnp
iret
pop
push
jb
mov
add
mov
call
mov
push
ja
jg
repz
xor
aas
das
xchg
push
push
inc
jl
push
imul
xor
jp
jg
push
cmp
jno
pusha
mov
jb
sbb
in
jae
sbb
es
sbb
and
xchg
mov
test
lahf
adc
sub
orb
push
loope
pop
repnz
add
jl
lods
fiadds
repz
mov
jne
cld
cmc
jo,pt
fs
nop
in
mov
cld
mov
in
in
jecxz
add
seto
fisttpl
push
xchg
outsb
mov
mov
and
hlt
jnp
cmp
adc
push
mov
int3
mov
imul
pop
mov
test
mov
mov
popa
enter
push
outsl
das
int
xchg
sti
add
or
inc
adc
mov
arpl
push
imul
ds
mov
je
shlb
dec
cmp
ret
dec
inc
mov
fmuls
xchg
adc
cmc
loopne
jp
negl
mov
push
sti
mov
cmpsb
aas
push
cld
cmpl
negb
movsl
push
jge
ss
pop
or
cmp
fs
and
sub
scas
ret
add
outsl
inc
insb
and
lfs
inc
cltd
fmull
dec
xchg
mov
cmp
mov
add
add
data16
sub
rep
jecxz
fstp
pop
addr16
push
dec
cmp
ror
andl
mov
add
int3
andl
int
incb
push
js
sbb
pop
dec
insb
and
loope
aam
xchg
sub
fdivl
mov
xchg
idivb
imul
mov
movsb
xor
js
lea
les
movsl
repnz
dec
jae
mov
lea
cltd
mov
adc
shrb
lret
roll
fnstcw
or
fxch
inc
and
inc
pushf
inc
aad
cld
pushf
jg
mov
mov
mov
mov
std
nop
ljmp
fcmovbe
pop
inc
lds
dec
les
adc
mov
mov
or
inc
push
push
xchg
out
pop
mov
sbb
and
pop
scas
adc
sub
cmpsb
adc
andl
lods
fisttps
mov
dec
in
cmp
mov
loop
outsl
sub
cmp
jl
jae
cmp
mov
add
sti
test
jno
pop
outsl
sub
push
inc
jge
mov
scas
inc
sub
xor
test
cwtl
js
data16
pushf
sub
addr16
out
mov
xlat
mov
les
fsubl
mov
adcl
out
rorl
inc
daa
push
jne
xor
cli
mov
imul
ljmp
orb
sti
fisttpll
cltd
inc
mov
xchg
jl
rcll
cmp
lret
cmp
push
es
mov
test
sub
fxch
sbb
adc
pextrw
xlat
fs
sbb
daa
ja
inc
sahf
mov
stos
pop
mov
stos
clc
and
xor
jo
mov
fwait
int3
jbe
mov
pop
cltd
ljmp
cmp
in
iret
fisttpl
test
pop
shrb
push
mov
xchg
cmp
into
xchg
and
movsl
xchg
fimull
mov
xor
mov
decb
add
cli
xor
xchg
arpl
xchg
jge
jl
and
inc
push
mov
adc
lea
out
add
addr16
xor
add
shlb
dec
lret
lret
pop
xchg
aam
aad
jl
mov
test
pop
mov
cmp
or
mov
cwtl
push
add
stos
mov
cs
ja
cmp
pop
pop
shlb
pop
jl
sti
jno
jnp
push
in
mov
sub
mov
pop
inc
push
jbe
mov
pop
inc
mov
lods
dec
dec
xlat
cmpsb
mov
mov
decl
nop
imul
xor
jo
cmc
push
add
loop
sti
sbb
xor
xchg
jl
sub
pop
mov
js
xor
dec
imul
jo
shll
ret
cmp
pop
call
mov
cmp
clc
sbb
jmp
fiaddl
lds
fisubrs
mov
cltd
nop
lahf
jb
andl
cli
pop
je
in
int3
add
enter
fnstenv
inc
andb
dec
aad
mov
std
in
dec
sarb
lock
adc
scas
sub
rcll
xor
jg
pop
fidivs
and
lret
or
lcall
aad
loope
adc
hlt
cmp
pusha
cmp
cmp
popf
dec
loop
scas
sbb
jmp
cmpsb
mov
cmpsl
xchg
push
adc
flds
daa
add
sahf
mov
in
cmp
sti
dec
in
xchg
clc
jnp
std
jecxz
mov
data16
sti
jno
in
jo
loop
mov
mov
inc
ret
movsb
pop
mov
lahf
scas
imul
sub
mov
dec
dec
add
lcall
jae
mov
sbb
sbb
in
sbb
repz
jg
push
int3
aaa
xchg
mov
ds
dec
in
sbb
mov
mov
mov
jl
jb
lahf
test
push
iret
hlt
adc
mov
mov
and
es
xchg
inc
hlt
adc
cmp
xchg
and
add
mov
and
sbb
sbb
and
jl
mov
movsb
mov
subb
loopne
jnp
nop
push
fwait
shlb
cmp
cmc
and
dec
lds
pop
outsl
cmp
sti
jb
sbb
inc
xchg
and
loopne
jne
psubusb
push
mov
sbb
lahf
xor
or
add
out
xchg
je
movb
add
ficompl
out
test
cmpsb
insb
xchg
pop
xor
push
insl
inc
insb
pop
push
repnz
mov
push
cld
cltd
xchg
cwtl
outsb
jno
add
lret
cs
xchg
sbb
imul
and
pop
cmp
or
popf
jl
cld
fsub
ljmp
ret
add
repz
xor
inc
jmp
in
es
jg
sbb
jnp
pop
or
dec
mov
hlt
fcomps
mov
dec
sbb
scas
add
fcoms
pop
cwtl
mov
inc
iret
rcll
jp
inc
add
pop
nop
adcb
pop
jl
jle
insb
scas
jge
mov
lea
aam
jp
cltd
dec
jb
push
ss
push
jno
into
aaa
push
mov
add
mov
or
clc
in
cmc
addr16
call
enter
or
into
pushf
mov
cmp
lock
fs
inc
repz
sahf
jmp
mov
or
lret
std
je
fildll
dec
dec
aad
mov
dec
sbb
int
mov
nop
leave
or
inc
cmp
gs
inc
decb
xchg
jecxz
ljmp
sbb
jle
add
fimuls
mov
mov
cmpl
jnp
jp
add
cld
nop
and
test
ja
cmp
or
pop
les
fucomi
adc
and
pop
jecxz
mov
addr16
sub
pop
or
cmp
xchg
out
pop
lods
jg
icebp
ds
dec
mov
les
fsubrs
int3
jmp
cmc
add
cmc
sbb
push
sbb
xor
xor
push
sub
in
cld
cmp
pop
hlt
mov
int
xchg
addr16
and
and
scas
xchg
and
inc
mov
mov
andb
bsr
pop
mov
xchg
fdivrs
pop
rolb
cwtl
aas
mov
dec
mov
dec
in
mov
lret
xor
adc
push
xor
mov
loop
sbb
inc
shr
loopne
lods
loope
aas
daa
js
cld
clc
xor
push
loopne
mull
fwait
iret
mov
cmp
das
push
jbe
out
aaa
cmpsl
and
cmp
inc
sub
aas
stc
jnp
loopne
inc
repz
pop
fiaddl
lcall
or
xor
add
pop
or
shll
ret
sbb
ret
or
sbb
pop
cmp
mov
dec
jge
shlb
aad
sbb
inc
jns
fisttps
enter
in
adc
fistps
loope
mov
lret
cmp
adc
xchg
mov
xchg
mov
jo
loop
sub
inc
jp
or
sub
cmp
sbb
jmp
sub
push
mov
xor
movsb
nop
and
sub
sub
popf
stos
adc
cld
sub
loope
test
outsl
out
icebp
jmp
insb
out
addr16
or
mov
repz
repz
and
es
repz
mov
sbb
xchg
or
inc
jbe
pushf
in
mov
outsb
enter
cli
cmp
lea
gs
xchg
push
je
push
sub
roll
aas
out
jnp
sub
shll
jo
or
out
pop
orb
sti
jae
xorl
les
dec
out
mov
mov
dec
inc
popa
sbb
in
pop
movsb
pop
and
fcomps
adc
cmp
jp
dec
xchg
xlat
movsb
inc
call
fdivl
cmp
adc
or
mov
dec
jp
clc
pop
sub
adc
push
andl
lahf
or
negl
enter
arpl
add
pop
decl
mov
push
cmp
gs
es
inc
xor
int
call
xchg
xchg
popa
insb
lods
je
sbb
nop
mov
hlt
popf
ss
out
dec
jne
xor
es
rolb
sub
inc
js
test
or
xor
pop
mov
pop
push
push
out
or
push
dec
adc
in
jg
std
jmp
mov
sub
stos
inc
jmp
jge
push
sbb
cmp
rolb
push
loopne
inc
inc
test
in
incb
adc
xlat
hlt
sarl
roll
cltd
cltd
aaa
fdivrs
dec
iret
imul
inc
lods
add
fiaddl
sbb
out
or
add
lret
loope
popa
xlat
adc
lcall
andl
jnp
in
xor
sbb
xor
mov
lcall
out
aas
int3
cli
inc
pop
repnz
mov
mov
and
mov
fucomip
mov
jge
std
imul
push
jne
mov
push
inc
and
pop
jb
mov
ds
nop
xchg
mov
or
into
pop
or
lock
stc
xchg
jmp
jae
push
imulb
sbb
mov
push
out
sub
ret
decb
add
fsubp
fmull
inc
mov
les
in
or
popa
les
mov
rcrb
add
mov
fsubl
xchg
cs
mov
fimuls
jo
out
pop
loope
lea
mov
sbb
xchg
push
fstps
fwait
sbb
scas
and
stos
sbb
inc
outsl
das
xor
xchg
xor
je
and
popa
test
inc
hlt
dec
and
or
push
pop
stos
ficompl
xor
lret
ret
lahf
lock
hlt
inc
xchg
fbld
pop
jg
pop
fisubrl
stc
mov
lcall
mov
cltd
insb
xor
mov
cltd
imul
ret
jnp
orl
lahf
xchg
fnstcw
xchg
cmpsl
add
loope
lret
and
pop
repnz
or
stos
and
outsb
add
add
out
enter
dec
pushf
mov
inc
ds
sub
inc
inc
pop
jle
shll
sub
pushf
and
add
andb
test
shll
adcb
lea
scas
gs
lret
inc
adc
xchg
sbb
sub
push
or
loope
ficompl
in
int
daa
jl
mov
jp
adc
or
nop
pop
pop
jg
fs
pop
or
rorl
add
aam
cmp
icebp
sub
js
fs
jg
adc
icebp
inc
cld
mov
cmp
loopne
sbb
inc
in
inc
lcall
outsl
pop
xor
ss
mov
inc
cmp
imul
mov
jmp
mov
push
int3
mov
roll
or
pop
jmp
out
pop
sub
push
ljmp
and
shrb
dec
mov
movsl
cwtl
xchg
push
mov
fs
and
dec
add
mov
inc
push
negb
mov
mov
das
icebp
sbb
mov
jg
scas
loope
mulb
add
mov
or
fnstenv
fs
daa
mov
xchg
or
dec
cmp
stc
movsb
pop
mov
stc
inc
outsl
adc
push
cmp
xor
jecxz
xchg
insw
lods
push
jmp
jbe
xor
addr16
cmp
xorb
mov
imul
clc
iret
push
ficoms
mov
outsb
mov
push
dec
jecxz
ljmp
mov
stos
push
inc
or
mov
mov
neg
popa
sti
mov
roll
jae
jae
or
inc
je
inc
lret
data16
mov
sar
pop
std
loopne
mov
gs
ds
jl
mov
or
sarl
add
inc
lcall
mov
in
lods
adc
in
push
pop
pop
dec
push
sbb
idivl
sbb
pop
test
and
xor
xor
adc
xlat
ds
out
lret
xchg
push
mov
cs
int
ss
inc
cvtps2pd
cmpsl
dec
inc
pop
jo
fdivrs
idivb
mov
jno
sbb
mov
fisttpll
test
dec
shlb
ficoml
cmp
je
stos
pop
test
lods
jl
lods
mov
leave
push
adc
mov
cmpsl
or
mov
xchg
sub
and
pop
and
pop
add
sbb
push
xchg
aaa
in
stos
fisttpl
and
jecxz
scas
in
inc
outsb
xchg
push
stos
in
add
jns
sub
fucomp
jg
and
pop
aaa
lret
mov
jge
das
xor
adc
dec
add
cwtl
push
push
out
mov
mov
inc
adc
sahf
ret
insb
sub
test
fadds
scas
imulb
add
cwtl
clc
test
dec
jge
jmp
mov
outsl
movsb
sub
call
ja
lds
repnz
lods
pop
jecxz
xchg
inc
mov
and
xor
movsl
in
cmpsb
inc
lret
xor
mov
subl
mov
mov
mov
ljmp
sbb
clc
icebp
mov
dec
inc
insl
int
loope
popa
sahf
std
push
jmp
subl
jle
adc
jnp
jmp
sub
jmp
lods
sub
jb
and
or
inc
pushf
int3
lods
std
mov
not
xchg
into
add
loop
cmp
fwait
rcrl
xor
dec
xor
mov
loope
pop
pop
mov
dec
sub
ss
pop
xchg
xchg
mov
jae
xchg
lods
pop
mov
mov
sarl
xchg
inc
pop
std
jne
repz
mov
and
sbb
aaa
sbb
xor
mov
sahf
cmp
bound
bnd
add
sbb
fcoms
dec
pop
call
lcall
jg
xchg
sub
adc
fstpt
movb
fucom
out
jno
aam
lcall
mov
inc
jnp
push
jns
inc
sbbb
sub
sub
adc
jnp
push
mov
mov
add
add
pop
cmp
or
andl
pusha
test
ficompl
jmp
xor
sub
hlt
ror
xchg
into
or
adc
dec
jmp
int
fistpl
jg
fmuls
xor
jp
sbbb
mov
sub
adc
inc
xor
sbb
data16
movsl
push
xorb
mov
ret
insb
lock
call
mov
nop
int
les
aam
enter
xchg
xchg
stc
scas
adc
mov
leave
sahf
jo
jns
push
out
notl
imul
and
sbb
lret
or
sub
cld
dec
sbb
stos
data16
xor
dec
xor
fimuls
rolb
and
enter
shrb
inc
fldcw
inc
insl
in
loop
out
cmp
mov
ret
mov
cli
pop
pop
aad
adc
out
or
mov
push
xchg
and
inc
push
ds
call
fadd
and
sbb
cmp
popf
mov
lods
cmp
scas
sub
cmpsb
loope
rcll
mov
ret
sub
rorb
and
xchg
add
xor
mov
xchg
sbb
cmp
add
lahf
sbb
insb
mov
dec
lock
ss
loope
cmp
sbb
outsb
inc
mov
xchg
in
flds
adc
xchg
pop
test
pop
cli
push
in
popa
aam
mov
mov
cld
mov
test
xor
jno
cltd
loopne
cmp
std
mov
ss
das
push
pop
aas
add
aad
add
inc
cmp
jge
mov
mov
js
cmpsb
sub
inc
sti
mov
ja
rorl
test
cmp
cmp
cmp
fld
jecxz
clc
cltd
push
in
mov
fistps
rcr
mov
out
orb
dec
inc
jle
stos
shlb
shlb
mov
sub
and
mov
cld
stos
inc
xorb
stos
mov
mov
fcoms
int
fcomip
in
xchg
push
sbb
sbb
lret
cwtl
dec
xor
or
loopne
in
daa
or
or
and
fcmovu
push
and
push
mov
out
xor
inc
xchg
fnstsw
ret
call
jp
jmp
mov
sub
orb
loope
andl
push
aam
outsb
call
loope
inc
aam
dec
inc
mov
popf
fisttpll
iret
fiadds
push
xchg
push
test
test
mov
mov
lods
stos
sbb
xchg
jo
movsb
addb
push
sbb
push
arpl
sahf
pop
sbb
mov
je
insb
cmp
push
xchg
pop
mov
imul
mov
adc
xchg
insb
stos
rorl
xchg
inc
dec
xchg
faddl
fwait
inc
adc
mov
push
xchg
int
and
and
mov
sbb
mov
mov
pop
sbbl
inc
mov
pop
cmpsl
sbb
inc
sti
test
pop
ret
cld
push
cmpsb
sub
dec
and
sbbl
mov
jle
cld
inc
insl
dec
push
jo
pop
dec
and
lods
pop
mov
pop
sti
das
insl
outsb
bound
lods
mov
bound
mov
pop
into
std
xchg
adc
fildll
xchg
es
dec
mov
in
jl
std
jl
out
inc
out
testb
mov
aaa
add
adc
in
lcall
mov
cmpsl
adc
cmp
push
jge
lcall
sbb
cmpsb
out
icebp
add
addl
jp
sub
jbe
add
mov
shr
stos
es
nop
arpl
push
fimuls
movsl
aaa
ret
pop
mov
leave
imul
mov
mov
repnz
cmc
xchg
push
push
mov
mov
xlat
out
push
in
push
scas
and
mov
adc
cmpl
xor
mov
lcall
mov
xor
add
xchg
cltd
push
insb
lahf
mov
repz
loopne
movsb
int3
mov
faddl
sub
adc
jns
inc
repnz
mov
hlt
push
cli
jno
daa
div
icebp
mov
cmpsl
xchg
jg
je
out
mov
stos
mov
or
les
dec
mov
aaa
mov
shll
jp
jo
daa
add
jle
popf
jge
mov
ret
sub
sbb
pop
fbstp
mov
fdivrp
shrl
sbb
add
mov
xor
add
mov
daa
dec
xchg
jns
nop
sbb
loope
cmp
hlt
lock
xchg
pop
jnp
inc
jnp
fsubl
xchg
in
push
scas
mov
pop
sub
add
push
cmp
mov
adc
jle
xor
in
push
ljmp
fstl
pop
xchg
fmul
movsl
mov
fdivs
notl
dec
loope
bound
popf
push
mov
jnp
rcll
out
movsl
push
enter
adc
mov
imul
mov
rcl
sti
push
mov
push
enter
mull
fbld
addl
pop
outsb
outsl
in
inc
bsr
dec
xchg
int
mov
pop
pop
dec
adc
inc
icebp
fdivrl
cld
js
dec
jo
les
les
add
mov
inc
xchg
adc
adc
pop
fcom
fwait
stos
out
and
or
out
jle
aad
data16
add
cmp
shl
mov
insl
xchg
fnsave
and
stos
fisttpl
stos
pop
mov
jns
lods
loop
imul
loopne
jle
imul
jmp
std
in
mov
ss
inc
ds
out
ja
push
lds
adc
rorb
add
adcb
and
push
sbb
sahf
or
out
jbe
add
lock
pop
js
and
cmpsb
pop
ret
xlat
int3
xchg
cld
shll
xor
pop
push
pushf
inc
pop
test
mov
adc
hlt
or
cmp
add
lock
xchg
cmp
and
enter
stos
and
rorb
mov
push
loop
outsl
xchg
inc
idivb
test
nop
pop
inc
lahf
xor
cmp
shrl
xor
xchg
stc
stc
cwtl
rorl
xchg
or
or
out
test
mov
mov
cmp
mov
arpl
in
imul
ja
pop
iret
leave
insl
push
mov
test
sbb
leave
aaa
mov
popa
int
imul
cli
ljmp
push
sbb
jo
fimuls
iret
stc
push
xor
xchg
adc
mov
cld
ljmp
aaa
sbb
sbb
mov
push
dec
sub
or
mov
sbb
pop
mov
push
inc
inc
mov
lcall
xorb
cmp
lock
or
adc
aam
sbb
mov
sub
jle
scas
fsubrs
ret
cmp
sahf
vsubps
insl
inc
fmulp
ret
addr16
and
shl
push
not
popa
push
or
stos
mov
push
xchg
xchg
call
arpl
xor
in
cmpsb
icebp
xlat
cmpsl
out
test
fdivs
pop
mov
in
es
pop
dec
leave
lret
int
lods
rcrb
test
in
in
mov
sbb
push
cld
dec
sub
mov
sbb
cli
sub
std
shrb
jbe
addl
add
rorl
lret
pushf
jmp
fs
nop
stos
xchg
cltd
cmp
add
and
add
mov
aas
mov
pop
mov
mov
jae
mov
aam
ret
out
and
repnz
rol
or
fimull
inc
ljmp
mov
test
mov
in
cmpl
fldcw
stc
jle
outsb
adc
mov
jp
mov
call
sub
mov
gs
incb
iret
pop
test
int
btc
ret
out
daa
jmp
mov
daa
mov
jp
sbb
xchg
add
out
pop
fsubl
sarb
cld
or
insb
lods
xchg
enter
cld
sub
andl
adc
ret
inc
jmp
and
jl
pop
movsb
test
jecxz
into
xchg
sbb
test
add
ja
inc
xlat
mov
push
clc
orb
pop
popa
into
shrb
popa
insb
mov
push
cmp
les
adc
call
sti
adc
push
add
and
xor
jbe
xchg
lcall
adc
movsb
xor
into
inc
sbb
popa
outsl
dec
inc
mov
rcll
notb
movsb
pop
cmp
popf
and
sub
sub
das
repnz
xchg
lods
cltd
movl
cld
int3
jp
dec
mov
jecxz
icebp
jne
lds
xor
aas
jp
test
imul
sti
push
mov
push
in
mov
add
mov
loop
aas
xchg
into
xor
icebp
imul
cvtdq2ps
xorl
nop
adc
dec
insl
jne
mov
xchg
dec
mov
arpl
jbe
cmp
jg
xchg
jns
lods
mov
pop
and
inc
cmpsb
repnz
je
cmp
js
ret
fcompl
movsl
mov
shlb
lcall
mov
imul
test
xchg
add
icebp
lcall
ja
movsb
je
cli
mov
daa
xor
icebp
sbb
push
test
or
cltd
or
jno
cwtl
shl
and
sub
das
incl
cs
ss
sub
and
xorb
iret
imul
pop
incb
mov
js
push
sbb
imul
mov
mov
cli
xor
xchg
jg
movb
mov
xchg
mov
loop
mov
adc
idivb
ljmp
out
shr
roll
jne
jg
pop
and
jge
ror
ja
cwtl
gs
cwtl
pop
fsubs
cmp
mov
mov
inc
lahf
lahf
push
or
out
fidivrs
mov
andps
fcmovnu
divb
push
jae
in
push
xchg
dec
sti
test
fstl
dec
mov
mov
jge
inc
jecxz
leave
mov
mov
shlb
pusha
stos
inc
pop
lret
xchg
int
push
shll
mov
push
push
mov
jb
mov
jl
ret
adc
pop
das
insl
aaa
add
sahf
jle
scas
mov
pop
mov
into
or
inc
dec
push
daa
imul
sti
and
aas
sbb
cmpsl
xchg
popa
jmp
cmpl
sub
por
sti
cltd
jnp
fwait
inc
gs
mov
aam
ret
jne
mov
xchg
iret
sahf
dec
push
lret
sbb
out
shll
mov
push
or
fisubrs
push
jae
inc
pop
xor
xlat
inc
dec
cld
pextrw
inc
cmp
sahf
imul
push
stos
test
shrb
int3
inc
mov
fnstenv
insb
sub
xor
inc
cs
aas
adc
cmc
and
adc
mov
in
leave
in
dec
aas
cmp
dec
push
push
sbb
xrelease
adc
das
jl
and
jno
push
in
push
xchg
leave
sar
pop
add
cmp
scas
outsb
lods
lahf
or
pop
testb
loopne
imul
test
jg
iret
sub
ds
mov
imul
mov
or
xchg
cmc
xchg
push
daa
ret
lahf
xchg
stos
jp
mov
jmp
or
mov
xor
loope
enter
cwtl
inc
pusha
mov
xchg
jle
mov
dec
fisubrl
incl
mov
iret
adc
ds
jl
mov
xchg
xchg
xchg
inc
jns
jl
mov
sub
xchg
fcomip
inc
mulb
ret
outsl
jbe
jecxz
jp
repz
loopne
or
xchg
shll
fsubr
push
cld
push
scas
bnd
xor
ja
repz
pop
lcall
fidivrl
add
ret
sub
lods
cmpsl
xchg
call
cmp
fldenv
inc
add
xchg
and
jmp
lock
push
imul
adc
dec
test
loopne
sahf
pop
mov
adc
pop
cli
dec
loope,pt
add
ret
popa
and
adc
sahf
add
and
pop
sub
rolb
bound
sti
outsb
cmp
xor
gs
jmp
ljmp
ret
imul
mov
scas
scas
movsl
daa
rcrl
rcll
iret
lret
push
mov
jp
cmp
stc
call
iret
sarb
addr16
push
push
xor
sbbb
mov
mov
sbb
pop
es
mov
cmp
jl
test
test
fwait
icebp
into
mov
leave
mov
jo
add
push
int
call
mov
xchg
dec
insb
pop
mov
xchg
sti
mov
xor
hlt
jnp
xchg
mov
or
push
sub
daa
xchg
adc
push
sub
mov
mov
repnz
cmpsl
cli
fistpll
pop
mov
xor
pop
fwait
das
jnp
mov
mov
dec
notl
ja
xchg
xor
and
cmp
xor
push
xor
notb
lahf
or
inc
inc
sarb
cmpsl
push
push
loope
mov
test
loope
std
inc
ja
xlat
sub
aas
xor
mov
xor
push
call
push
sbb
fs
dec
ds
pop
mov
cmp
cltd
lods
mov
cmp
mov
ficoms
aam
xchg
mov
hlt
push
xor
xchg
fs
inc
aaa
dec
movl
jmp
jbe
adc
push
movb
xchg
jmp
jge
shlb
inc
popa
mov
les
int
jnp
push
pop
rclb
out
das
mov
loopne
cmp
adcb
cmpsl
jnp
dec
shr
sbb
pop
mov
fstpt
fwait
insl
jno
int
enter
xchg
daa
jg
ljmpw
adc
mov
sub
mov
push
lahf
pop
out
aam
mov
xchg
jge
enter
arpl
rclb
les
std
push
scas
daa
sti
inc
cmp
add
lods
mov
jmp
xchg
ja
pop
jl
mov
push
pop
fmull
jbe
mov
mov
dec
outsl
mov
mov
sarb
in
movsl
mov
and
in
fwait
inc
fidivs
adc
lods
pop
shlb
pop
repnz
jmp
imul
adc
push
push
jmp
add
adc
shr
adc
test
pop
push
mov
lahf
in
dec
jecxz
iret
fcompl
and
notl
decb
xchg
mov
mov
rcrl
fstpt
xchg
add
xor
ja
dec
and
jle
in
lret
aad
pop
mov
inc
sbb
xor
loope
das
or
xchg
push
insb
mov
out
mov
jns
xor
pop
in
mov
cmp
testl
mov
jno
stc
pop
push
movsl
push
sbb
mov
in
sub
fiaddl
fadd
ds
mov
and
imul
popf
pop
xchg
in
jb
xchg
aas
das
push
cld
pop
jne
sub
bound
cmp
imul
sub
pushl
jl
fs
mov
xchg
shll
out
or
mov
sahf
roll
push
mov
daa
lock
inc
xchg
and
lods
popf
ja
push
sahf
mov
pop
pop
sahf
xchg
inc
mov
arpl
inc
fsubrs
and
mov
xchg
push
adc
cmp
in
jle
cmc
in
jg
push
sub
mov
out
mov
xchg
sub
loopne
mov
sub
stc
fsubr
ljmp
jae
inc
aaa
test
dec
cmp
inc
sti
mov
cltd
filds
addb
pop
jmp
add
test
dec
or
imul
bound
push
in
add
out
in
outsb
dec
mov
sub
stos
test
push
xor
sub
mov
hlt
loope
jb
xlat
mov
fcompl
jle
nop
inc
int3
jmp
push
jmp
out
dec
cmp
std
mov
cld
shrb
add
rdmsr
and
dec
shl
je
add
mov
pop
or
clc
repnz
dec
stos
jns
rcrl
negl
repnz
xchg
neg
nop
scas
loope
push
repz
hlt
mov
inc
repz
pusha
adc
inc
add
mov
adc
mov
xor
pop
movsl
lock
pop
inc
mov
jmp
test
adc
in
sbb
inc
pop
mov
xchg
push
popa
bnd
jbe
jae
mulb
cld
clc
pushf
mov
imul
or
mov
adc
cmp
fwait
jne
inc
popa
cmc
xchg
jp
lcall
aam
sub
and
les
aad
fcompl
loope
pop
mov
push
outsb
add
jl
fsubrl
lcall
ret
xor
outsb
pop
dec
mov
xor
icebp
leave
lods
mov
dec
push
shr
jb
mov
sbb
xor
loope
xchg
rcrl
mov
adc
arpl
das
jge
dec
in
lods
jae
jle
fs
inc
test
aam
adc
sub
pop
sbb
imul
leave
dec
adc
jecxz
pop
call
add
bound
aam
dec
pop
sub
aad
push
jns
xlat
mov
stos
add
xchg
out
out
fcoms
push
mov
sbb
push
pop
out
mov
push
sub
pop
and
je
inc
adc
jnp
sarb
not
xchg
enter
adc
xlat
stos
xchg
jecxz
popf
push
xchg
lret
cmp
bound
adc
add
sub
pop
add
mov
dec
idivl
out
das
fwait
jo
out
stc
ja
movsb
pop
push
outsb
inc
pop
lcall
cli
and
xor
out
pop
popa
and
lcall
jne
sahf
add
sti
adc
pusha
jge
aam
sub
mov
xchg
lods
mov
pop
pop
xchg
xlat
dec
gs
fdivrp
cmp
jne
pop
xchg
fs
lret
or
nop
and
mov
sbb
jmp
sbb
fisttpl
mov
fsubr
int
outsl
ljmp
aam
xchg
loope
and
or
test
and
fstpt
leave
xor
fsubl
fwait
rcll
pop
and
pusha
loop
test
scas
mov
jbe
lods
xor
pusha
sub
sbb
pop
sub
movsl
test
xor
pop
bound
popf
push
daa
mov
loope
or
push
pop
jle
mov
mov
mov
cs
out
sbb
adc
mov
dec
and
pop
out
mov
jge
call
push
rorb
mov
jg
rol
call
xchg
pop
jbe
mov
jle
mov
pop
ljmp
dec
inc
pop
and
loopne
movsl
arpl
out
lahf
xchg
iret
in
xor
lcall
sar
les
xchg
movsb
mov
mov
and
clc
cmpsb
hlt
sbbb
inc
mov
mov
pop
pop
xchg
int3
enter
inc
sarb
ficompl
ljmp
frstor
add
sub
imul
pop
dec
sbb
aam
pop
inc
sbb
stos
push
mov
movsl
fldt
ljmp
or
in
int
stos
inc
icebp
xlat
cmp
int
push
fstp
adc
or
lock
mov
push
dec
filds
mov
pop
scas
adc
lock
xchg
cmc
and
flds
outsb
rcl
mov
gs
int3
sub
clc
cmp
aaa
mov
add
mov
ljmp
hlt
cli
cld
pop
repz
jnp
push
cltd
pop
ljmp
mov
push
or
aad
mov
clc
push
cwtl
mov
sar
rol
jb
pop
and
mov
pusha
movsl
insb
pusha
int
test
gs
fisubrl
jbe
xchg
add
sub
in
mov
push
mov
dec
pop
mov
lret
movsb
sub
scas
pop
inc
adc
mov
dec
cmp
movsl
xchg
pop
inc
nop
lods
icebp
loopne
mov
jbe
xor
pop
mov
xchg
and
ljmp
jno
sbb
ja
xor
dec
adc
xchg
inc
dec
cmpb
inc
std
push
mov
pop
aad
xchg
jge
xor
sarb
mov
xchg
mov
int3
dec
jmp
popf
mov
insb
into
push
jbe
inc
sbb
adc
jg
cmp
lods
mov
repnz
fdivrl
hlt
test
ss
xor
incb
sbb
scas
insb
fmuls
adc
xchg
add
cli
lret
sbb
lds
mov
enter
xor
mov
xchg
cld
dec
sub
dec
sbb
loopne
inc
mov
jge
sub
call
das
cmp
add
ficompl
mov
jg
dec
jmp
mov
add
test
push
out
mov
cmpsb
shl
les
or
fdiv
out
push
daa
or
inc
xchg
ja
int
icebp
push
and
add
shlb
arpl
mov
nop
sub
add
imul
pop
jmp
imul
cmp
lret
mov
lcall
mov
fdivs
jno
addr16
clc
push
pop
scas
test
test
xlat
xor
stos
mov
arpl
or
push
sub
cmpsl
shr
mov
push
cwtl
cmp
popa
jl
jo
or
scas
mov
cmc
xchg
test
repz
xor
mov
cmpsl
fcom
or
add
xchg
xchg
sbb
jns
nop
out
pop
ss
mov
xor
mov
test
lea
ss
add
enter
cmp
cwtl
int
out
push
in
test
aad
test
or
xchg
and
rcll
push
sbb
push
inc
sbb
add
sbb
push
stc
int
jmp
adc
imul
xchg
dec
and
push
imul
fimuls
fldt
jne
sbb
dec
repnz
rclb
cmc
mov
aad
mov
add
sub
fsubrp
and
negl
leave
mov
cltd
cmpsl
cmpl
inc
test
cmpb
rcr
icebp
jge
mul
icebp
pop
or
popw
ss
lahf
pop
loopne
pop
int
cwtl
xchg
push
cwtl
inc
jnp
loop
xor
lods
lret
scas
sub
mov
mov
mov
sub
popl
pop
sbb
cltd
imul
mov
fstpl
adc
sahf
in
inc
mov
in
mov
push
cmp
sbb
xor
addr16
lret
mov
push
ret
xchg
call
mov
add
mov
fdivs
xchg
icebp
orb
cmpsl
inc
movsb
push
lods
mov
adc
imul
mov
popf
shll
loope
divl
mov
push
xchg
mov
cmpsl
or
iret
insl
jle
xchg
xchg
in
test
lcall
loope
lds
imul
xchg
xchg
push
iret
test
popf
movsb
jno
jl
dec
or
jecxz
into
fdivrs
popa
cmpsb
addr16
cli
repz
pop
lea
ja
bound
dec
js
lret
arpl
arpl
nop
pop
mov
outsb
out
push
icebp
jg
xchg
sti
add
mov
inc
lods
push
jb
mov
sbb
sbb
call
fs
fwait
jecxz
sti
inc
out
dec
mov
fdivs
bound
popa
xchg
lods
sub
cmp
test
add
push
pop
or
out
xchg
push
mov
sbb
shrl
fwait
leave
pop
movsb
rolb
mov
xchg
les
fidivs
push
mov
xchg
jl
sub
lret
xor
or
rclb
cmp
in
lods
or
push
popa
fst
and
arpl
dec
inc
ss
aas
or
sbb
pushf
add
push
inc
ret
inc
mov
sbb
mov
jne
sti
out
adc
cwtl
push
in
dec
ret
mov
inc
aam
pop
addb
push
sahf
pop
fadd
mov
dec
stos
loopne
inc
lcall
lock
int3
popf
xor
or
ja
fwait
lcall
outsb
daa
je
push
mov
fstl
pushf
adc
fldenv
fwait
icebp
xchg
push
sub
pop
add
or
jge
adc
xchg
rorl
mov
negl
inc
cmp
jnp
ljmp
sub
xchg
xchg
inc
fstl
xchg
push
inc
cmp
xlat
jae
dec
pop
pop
pop
adc
test
das
xchg
lcall
movsb
nop
dec
cmp
add
or
gs
dec
pop
scas
dec
mov
jg
movsl
sbb
cli
rol
adc
std
fdivr
xchg
enter
xor
ret
sbb
push
push
dec
push
cmp
pop
loopne
bound
adc
loopne
xchg
repz
insl
lods
cwtl
sbb
mov
cli
mov
or
jmp
inc
xchg
rcrl
arpl
jle
iret
adc
mov
mov
rol
inc
daa
pop
jmp
popl
nop
stc
repz
in
pop
or
addr16
push
cwtl
sub
shlb
test
cltd
dec
mov
xor
lahf
xor
ljmp
adc
jne
pop
mov
dec
test
loopne
shlb
dec
test
push
mov
pop
jmp
bound
dec
jbe
pusha
xchg
mov
fs
push
jbe
fcomip
int3
sub
dec
orb
flds
testl
inc
ljmp
or
repnz
cmp
cmc
es
fucom
adc
dec
push
and
inc
mov
xchg
lea
cmpsb
lcall
dec
daa
pop
or
sub
cmp
inc
sub
pop
dec
in
into
push
pop
in
sub
sbbb
adc
add
xchg
sbb
pop
add
inc
pop
mov
and
hlt
roll
ss
aaa
fadds
mov
andb
adc
jae
inc
cmp
jns
cltd
repnz
idivl
movsb
ffree
leave
mov
add
out
xlat
lods
lahf
in
test
sub
jecxz
cmpsb
test
insb
xchg
fldcw
jecxz
mov
jnp
roll
int3
cmp
pop
ljmp
jl
loope
xchg
xor
sbb
enter
mov
insb
dec
fs
shll
sti
imul
inc
fisubrs
mov
mov
mov
inc
mov
sub
js
xchg
dec
insl
xlat
sahf
xor
outsb
or
and
adc
inc
pop
sti
mov
mov
inc
mov
xor
mov
inc
adc
outsl
scas
mov
ror
ss
xchg
test
imul
data16
stos
hlt
push
les
notb
lret
or
insb
pop
insb
sub
jmp
pushf
xor
shlb
jp
mov
mov
push
bound
fcomps
pop
dec
inc
arpl
sahf
inc
jp
cmp
dec
scas
mov
mov
dec
andb
pop
stos
mov
sbb
je
clc
movsb
and
sbb
mov
stos
add
jl
jecxz
sbb
das
ret
in
mov
xchg
add
outsl
xchg
subl
leave
dec
mov
adc
cmp
lret
pushf
outsb
into
jae
xchg
sub
mov
or
idivl
mov
lahf
xor
and
ja
fwait
insl
and
rcrb
sbbl
sbbl
add
add
sub
cmc
mov
movsl
outsl
inc
mov
enter
inc
sub
hlt
inc
add
fldt
mov
fbld
rcrl
jb
cmc
jg
lea
loop
push
idivl
dec
jns
sub
hlt
mov
sbb
or
sbb
mov
xchg
imul
rcrl
adc
daa
xlat
push
dec
pushf
stos
cli
popa
cmpsb
and
sar
mov
movsb
shlb
jl
roll
call
push
cmc
mov
ss
ja
pop
sub
flds
jne
and
inc
pusha
ljmp
jmp
mov
jp
sti
mov
or
pop
ds
icebp
outsb
sub
dec
cmp
jp
push
call
testb
add
adc
mov
fnstsw
inc
imul
and
movsl
popf
cs
adc
sub
adc
inc
xchg
mov
lea
fisubrs
out
mulb
sbb
mov
fnstcw
out
negb
sahf
mov
cmp
ficomps
cmpsl
movsl
xor
add
mov
movsb
mov
jb
xor
test
cmp
push
in
test
iret
inc
sub
mov
mov
pusha
out
mov
dec
gs
out
jnp
sbb
int
int3
push
inc
loop
or
dec
pop
test
inc
ljmp
xor
sti
and
bnd
mov
fidivrl
cltd
mov
daa
inc
jns
mov
mov
push
imul
mov
int
test
insb
cmp
pushf
and
loopne
enter
cwtl
popa
adc
lret
sbb
sub
das
cli
pop
rorl
test
mov
xchg
cmp
lret
test
add
cmc
mov
imul
jo
jle
xchg
imul
sbb
mov
xchg
aaa
int
dec
jb
iret
stos
dec
ja
or
xchg
dec
mov
jmp
push
push
cld
cmp
push
lcall
popf
adc
adc
xchg
add
stos
movsb
repnz
pop
add
pop
push
dec
sbb
movsl
inc
sbb
or
xor
dec
popa
test
mov
pop
jl
mov
lock
aaa
inc
push
cmpsl
loopne
jno
add
or
ss
dec
shlb
ja
jmp
fldenv
mov
jl
mov
jmp
fadds
fstpl
push
add
imul
sbb
ja
xchg
mov
std
testb
jge
inc
sbb
fs
js
push
pop
lea
lods
and
iret
pop
jg
es
stos
imul
inc
icebp
xor
mov
sub
ja
dec
out
jl
cli
push
dec
enter
xchg
movsl
inc
shlb
fnstsw
push
and
or
lahf
adc
mov
and
adc
inc
cmp
out
mov
fstps
pop
pop
inc
es
sbbb
cmp
mov
pop
push
mov
out
mov
push
pop
xchg
jno
shll
neg
push
dec
popa
dec
in
pop
movsl
les
repnz
add
mov
shll
int
cli
movb
aaa
sbb
sbb
mov
iret
lret
out
inc
not
and
lahf
xor
mov
fstp
inc
mov
sbb
cmpsb
xor
xchg
lret
movb
lock
jge
shld
mov
push
mov
cs
and
mov
dec
push
dec
xor
gs
and
pop
lods
xor
mov
shrl
adc
pop
inc
adc
daa
leave
mov
sub
xchg
test
mov
int
mov
mov
cmpsl
dec
xchg
mov
ljmp
sar
clc
stos
adc
ja
out
and
xchg
negb
test
ss
xor
out
pop
mov
dec
js
or
xchg
lock
sbb
xchg
sarb
enter
mov
test
push
pop
inc
lds
xchg
push
mov
pop
mov
push
cltd
hlt
fmuls
push
fisubrl
idiv
push
pop
or
mov
and
aad
test
insb
add
pop
mov
fistpll
shll
cmp
ret
jp
add
fdivrs
inc
mov
aas
aam
add
pushf
pop
test
mov
sbb
lods
push
mov
lcall
mov
push
sub
std
sbb
or
dec
inc
xor
jecxz
and
out
cmpb
mov
mov
mov
std
or
pop
cmp
aam
in
push
decb
insl
adc
stc
jmp
arpl
cs
movsb
pop
push
sbb
inc
inc
ret
sub
nop
jb
ljmp
add
pop
jle
sahf
or
in
add
pop
xlat
fistpl
xchg
movsl
add
cmpsb
repnz
ja
arpl
pop
mov
js
mov
cwtl
jnp
insb
lret
aad
adc
ja
mov
xor
mov
sub
sar
inc
or
sbb
in
pop
fnstcw
jmp
dec
jp
cmp
cmp
cmp
push
xchg
lahf
icebp
xchg
xchg
stos
xor
pop
mov
aam
pop
sub
mov
sti
xchg
pop
pop
rclb
adc
sahf
inc
and
push
xchg
out
adc
mov
dec
int
push
mov
add
dec
stc
test
imul
minps
pop
adc
or
dec
jbe
pop
xchg
mov
cwtl
and
sbb
fcoms
mov
or
and
scas
push
lds
outsb
notl
or
xor
xchg
rorl
int
insl
mov
inc
imul
add
out
cmp
jmp
repz
push
jb
dec
bound
fwait
out
adc
dec
jb
add
jno
jno
xchg
xor
inc
insb
dec
cmp
out
cs
fcmovnbe
out
sahf
fsubl
popa
hlt
push
xlat
into
out
sbb
or
lods
jns
xorl
mov
mov
cmpsl
xchg
jae
adc
push
daa
xchg
es
arpl
rclb
inc
rclb
pop
imul
xchg
dec
std
negb
cmp
push
stos
or
sbb
xor
jl
xor
popa
sub
repnz
fcmovnb
add
lods
xor
adc
daa
arpl
lcall
arpl
jae
add
cmp
xchg
in
mov
js
xor
filds
cmp
jnp
pushf
call
cld
mov
mov
cld
and
sbb
ss
pop
push
mov
or
in
sti
mov
loop
jmp
jne
xor
aam
or
int3
cwtl
push
and
jmp
xor
icebp
rcll
movl
pop
iret
cltd
pushf
jg
cwtl
jg
test
mov
scas
cmpsb
imul
push
call
andb
rorl
nop
stos
mov
or
test
mov
xchg
lahf
rcr
movsb
jmp
in
ret
xor
movsl
xor
jmp
lahf
and
daa
es
cmp
jo
inc
jno
std
clc
dec
lret
cmp
lcall
pop
mov
iret
ja
mov
gs
and
sub
jno
sub
jo
lcall
cmp
sub
iret
push
ret
xchg
lea
pop
dec
or
or
repz
pusha
cs
pusha
cmc
lods
popa
cmc
mov
divb
push
lcall
cmp
loopne
out
cmp
imul
imul
jbe
inc
jbe
and
mov
mov
xchg
nop
mov
loop
xchg
loop
insl
jecxz
sarl
aam
test
fldt
fldl
loopne
add
add
rcrl
jl
jns
mov
jge
rorl
ror
jl
iret
mov
shlb
ljmp
sub
sub
lock
xor
xor
xor
xlat
testb
add
push
mov
adc
outsb
pop
jns
pop
je
pop
je
sbb
stos
xor
cmc
scas
imulb
push
call
lods
popa
dec
pusha
bound
adc
add
fadd
sbb
jo
das
jecxz
das
jecxz
fsub
int
into
dec
dec
js
dec
sub
dec
sub
sub
shlb
xchg
xchg
xchg
sub
jp
and
icebp
xor
xchg
xor
js
mov
mov
pop
mov
loop
dec
jecxz
or
or
pusha
or
ja
xor
lret
ja
push
cmp
or
or
or
in
lahf
pusha
in
mov
in
mov
jg
shr
dec
aam
mov
jp
fs
dec
gs
sub
sahf
sub
mov
cmc
mov
jle
das
xchg
inc
xor
les
mov
sysexit
dec
adc
pushf
mov
pushf
mov
sbb
mov
and
es
divb
dec
xor
dec
int3
out
int3
jno
int3
jno
and
inc
sub
dec
das
push
andb
xchg
in
xchg
in
or
test
in
arpl
pusha
cs
push
roll
ja
fistl
lds
neg
pop
mov
adcb
cmpsl
mov
mov
test
testb
or
mov
xchg
sub
sti
test
sahf
pop
loopne
add
in
lret
jo
in
jo
inc
jno
in
movl
push
push
les
push
cmpsb
push
push
subl
into
call
into
jmp
add
dec
addr16
mov
mulb
jge
and
inc
and
mov
mov
mov
roll
call
mov
xchg
xor
fidivl
fsubrp
xor
ljmp
loop
mull
hlt
idivl
jl
xor
dec
loop
dec
loop
xchg
ret
ret
fsubrs
sti
fsubrs
mov
sub
jae
push
jae
mov
clc
cmpsl
cmp
inc
sub
jmp
ja
pop
mov
sbb
jp
push
jp
cmp
clc
movsl
aaa
clc
mov
and
aad
dec
aad
push
sti
xor
sahf
pop
push
sahf
inc
jne
inc
jmp
gs
fwait
repnz
cwtl
mov
cltd
mov
mov
sub
inc
mov
mov
icebp
mov
and
popf
and
cmp
setnp
setnp
and
dec
xchg
or
xchg
push
mov
pop
mov
movsl
mov
mov
into
int
into
int
xlat
int
pop
aad
pop
ret
ret
ret
sub
inc
das
xor
ss
lods
and
and
and
popf
add
pushf
inc
ljmp
fs
dec
popf
imul
hlt
stos
cs
daa
sti
mov
mov
aam
fsub
add
imul
sub
mov
inc
push
and
aam
call
in
cmpsl
out
aaa
mov
push
daa
sbbl
sub
add
add
add
inc
mov
add
pop
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
