push
or
add
add
add
jo
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
pusha
add
add
adc
add
add
add
add
add
or
and
or
inc
orl
add
or
add
add
or
add
cld
orb
pushf
orb
or
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
inc
add
add
add
add
add
ds
add
pusha
add
jns
add
xchg
xchg
fcomps
add
in
pop
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
adcb
add
add
sub
popf
stos
pusha
leave
fildll
push
dec
and
cmp
ja
sti
and
adcl
xlat
pop
in
popl
outsb
mov
je
add
xor
scas
xchg
mov
cmpsl
inc
fldl
fwait
mov
mov
hlt
push
nop
xlat
stos
in
ret
jnp
cmc
dec
repnz
cmp
orb
mov
sbbl
mov
xchg
xor
sub
test
test
mov
ret
jno
gs
xchg
arpl
xor
daa
fiaddl
jg
push
in
mov
inc
mov
push
enter
pop
xchg
sub
ds
jae
jmp
sarb
jns
fstpl
or
imul
inc
and
or
cmp
jg
std
push
fisubrl
in
or
andl
xor
and
in
les
ficoms
sti
ljmp
in
mov
jmp
adc
icebp
leave
aaa
dec
adc
and
cmp
rcrl
pop
jo
test
aas
dec
fisubrs
insb
jnp
push
loop
xchg
jns
mov
cmp
xchg
sbb
mov
ds
into
mov
and
mov
inc
cmpl
unpckhps
das
pop
mov
insb
and
outsl
mov
test
lret
inc
inc
and
jl
add
scas
leave
sarl
add
jg
adcb
fs
inc
je
fdivl
mov
neg
dec
shrl
jp
jge
adc
lock
adc
sti
jbe
mov
mov
push
and
mov
fstps
mov
push
mov
popf
cs
cmp
mov
inc
fcmovne
into
in
stc
int
dec
ds
outsl
fildll
xorb
divb
push
cmp
jg
fistl
cmp
arpl
imull
pop
dec
addr16
cmp
icebp
xor
or
inc
rclb
push
mov
sbb
cmp
mov
scas
mov
outsl
jp
jbe
pop
test
ret
cltd
cwtl
add
pop
inc
stc
add
lret
or
xchg
adc
and
sbb
dec
add
mov
jns
out
std
sbbl
mov
sub
scas
sti
hlt
call
xor
jbe
out
push
or
xor
out
pushl
imul
cwtl
into
jg
aas
rorl
sub
icebp
mov
out
lds
ss
fs
stc
sbb
sbb
adc
in
mov
or
mov
cld
call
jle
fwait
and
sbb
jns
adc
add
push
nop
loopne
sti
fistps
inc
push
push
int3
lret
dec
pop
push
sahf
push
pop
and
fdivrl
mov
insl
mov
jae
cmpsl
ja
stc
or
addr16
cmp
cltd
nop
inc
arpl
out
aad
mov
pop
sub
nop
mov
lods
jmp
leave
cmp
inc
cwtl
nop
jmp
es
mov
cmp
insl
mov
add
sbb
mov
jnp
hlt
or
pop
xor
stc
cltd
mov
mov
pop
pop
add
sbbl
ljmp
mov
or
mov
jnp
mov
fsubrl
fcomp
test
lods
jle
add
imul
push
xchg
out
jno
lea
sbb
lds
mov
fidivrl
pop
repz
sbb
mov
mov
pop
add
lea
std
scas
xchg
scas
pop
xor
shr
hlt
dec
xchg
call
dec
mov
sbb
adcl
cmp
out
lods
mov
mov
es
mov
cmp
and
xor
and
mov
enter
xchg
add
pop
sub
imul
sbb
adc
ljmp
outsb
add
ss
inc
pop
jecxz
aad
push
sti
xor
into
pop
sbb
add
push
ss
push
les
push
pushf
aam
jmp
or
xchg
in
jmp
fldenv
popa
xor
stc
pop
cmpsb
int3
sbb
out
sahf
test
push
cs
sbb
push
xor
or
pop
ficomps
call
adc
dec
sbb
xor
sbb
dec
xor
or
aam
jmp
dec
loopne
jp
adc
and
xchg
stos
cmpsl
jns
pop
dec
roll
xor
adc
rcl
fsubrl
pusha
call
repnz
sub
dec
mov
int3
outsl
aaa
and
push
sbb
test
stc
mov
dec
add
push
push
aas
loope
test
and
into
mov
repnz
sub
mov
sbb
push
and
pop
es
insb
pop
mov
cwtl
dec
mov
pop
mov
shll
fidivl
fistpll
in
int
inc
jae
js
mov
incl
and
in
pop
adc
xor
adc
push
popf
mov
push
imul
jae
enter
aaa
pop
test
and
jb
cwtl
aas
aam
into
dec
mov
mov
add
add
adcb
mov
mov
or
aad
adc
or
mulb
inc
pop
test
sub
xchg
inc
mov
push
lret
rcr
or
push
xor
mov
cmc
xchg
inc
ja
adcb
lods
dec
xchg
pop
jp
adc
xchg
jb,pn
bnd
mov
std
aaa
inc
cmp
mov
adc
add
cli
cmp
cmp
mov
inc
xchg
fwait
cmp
jmp
pop
and
loop
arpl
test
xchg
and
and
sbb
sbb
mov
or
les
nop
xlat
xchg
mov
jno
les
dec
push
and
negl
jae
in
sub
sub
cld
sti
es
stc
imul
mov
push
insb
scas
mov
dec
jmp
and
cwtl
fbstp
jns
shl
pop
add
andl
fidivl
movsb
pop
push
push
adc
jl
push
in
xor
push
jbe
inc
loopne
xlat
jb
push
sub
cwtl
filds
xchg
ss
int
push
mov
add
add
aam
popf
mov
lods
xor
or
in
insb
pop
daa
rcll
or
mov
pushf
cli
dec
call
cmp
or
dec
into
add
cmpsl
mov
pop
cmp
mov
add
mov
test
inc
inc
je
cmp
sub
mov
jno
push
sbb
cltd
das
insl
lods
mov
jmp
xchg
fwait
bound
mov
enter
xchg
les
adc
cmp
push
popa
sub
mov
fnstenv
shll
xchg
mov
rol
outsl
add
out
dec
mov
mov
movsb
sbbl
xor
stc
fcomi
lea
xor
call
mov
add
pop
cmpl
outsb
xor
sbb
stos
rorb
cmp
adc
xor
shrb
push
mov
pop
scas
push
sub
fimuls
imul
dec
lock
or
ffreep
pusha
ficoml
add
xor
jle
xor
in
inc
jle
add
loope
nop
mov
inc
dec
xor
mov
mov
rolb
push
roll
int3
jbe
inc
and
mov
fbstp
push
mov
std
nop
std
iret
ljmp
ds
fwait
push
loope
mov
dec
inc
fnsave
and
push
sub
cli
aad
ret
jae
out
mov
jns
jge
ret
cmp
jnp
cmpsb
lea
rcll
sbb
aaa
jecxz
inc
gs
add
pop
int3
test
ds
mov
rcll
insb
lret
repz
or
inc
push
ds
or
jne
lret
or
xchg
xchg
dec
xor
xor
xchg
or
jge
nop
pop
mov
inc
and
movsl
sbb
xorl
ss
aas
xor
push
aad
add
cld
push
and
lods
or
mov
lds
or
popa
lea
mov
push
mov
idivl
mov
sahf
loop
nop
add
push
xchg
loopne
sbb
or
outsb
lcall
sbb
push
jne
leave
repnz
int
push
sub
sarb
adc
mov
fadd
add
inc
ds
mov
inc
enter
pop
es
sub
mov
inc
and
lahf
ret
mov
jbe
mov
xchg
pop
sbb
fisubs
push
fisubrl
add
cmc
mov
mov
push
mov
jl
outsl
test
push
scas
orl
hlt
dec
xchg
ss
mov
pop
movb
mov
mov
or
mov
stos
test
clc
loopne
js
nop
gs
jge
pop
fnstenv
mov
mov
stos
jbe
add
jmp
hlt
pusha
and
mov
lea
or
lds
test
int
aam
out
orb
icebp
pushl
cltd
push
cld
aas
mov
idivl
mov
or
sbb
pop
and
pop
mov
dec
andl
sub
addr16
out
jle
cld
pop
test
or
xchg
push
cwtl
push
sbb
mov
and
stc
test
xchg
mov
pop
sbb
imul
xor
sbb
mov
push
jle
stos
pusha
ret
inc
jnp
bswap
sub
js
push
cs
lcall
outsl
ds
and
inc
pusha
xchg
xor
addl
mov
sbb
mov
shll
imul
insb
mov
add
pmulhw
mov
sbb
jb
mov
subb
fldenv
jp
fbld
sub
sub
push
aam
jns
imul
jmp
pop
pop
inc
lcall
mov
movsl
sbb
push
push
sbb
xor
push
inc
pop
aam
pop
xor
popf
pop
mov
test
sbb
popf
sahf
sbbl
pop
imul
aas
cltd
incb
lret
xlat
pushf
push
add
mov
pop
cmpsb
test
leave
sub
dec
aas
movsl
cmp
lock
shl
push
popf
sub
inc
jnp
rcrl
jae
jg
xor
push
dec
fwait
mov
rcrl
adc
mov
arpl
aad
negb
aas
push
adc
dec
nop
in
jae
sbb
lock
mov
add
pusha
xor
jge
data16
outsb
orb
mov
mov
push
out
ret
loopne
cmpsl
dec
jg
out
leave
fcoml
sbb
movsl
mov
in
sub
mov
mov
rorl
rcl
sbb
xor
or
cmc
aaa
dec
adc
xor
sti
cmp
fstl
stc
mov
testl
jbe
jo
popa
push
add
xchg
je
jle
push
mov
out
pop
add
bswap
shlb
inc
dec
ficomps
test
sub
test
pop
lahf
sbb
sbb
lahf
cltd
and
mov
mov
inc
jle
mov
push
mov
lea
stc
sbb
jmp
shl
sbb
push
push
dec
xchg
jae
xor
mov
jns
xchg
xor
or
test
push
jno
dec
xor
inc
andl
dec
dec
mov
aam
repnz
call
push
or
ds
insl
mov
jecxz
into
ficoml
pop
jmp
pusha
mov
mov
xor
jle
dec
popf
iret
jno
test
lds
cli
call
jg
sti
in
mov
push
jnp
pop
out
mulb
in
adc
scas
repnz
hlt
mov
out
popf
imul
stc
xchg
push
and
outsb
or
leave
ja
pop
inc
push
jbe
ret
inc
pop
out
sarl
dec
xchg
inc
nop
xlat
dec
andb
popa
fcmovnbe
pop
mov
dec
popa
mov
imul
les
leave
xchg
mov
pop
mov
lock
out
push
jecxz
call
push
mov
cmp
notb
mov
ror
sub
sub
pop
sbb
cmc
test
imul
js
xchg
bound
lret
aas
sarb
mov
pop
int3
adc
or
lods
mov
adc
and
mov
lret
js
mov
sbb
mov
daa
scas
rclb
test
cli
and
xchg
les
jmp
xor
mov
jnp
sbb
mov
add
mov
call
sub
aaa
and
add
in
lahf
lock
jno
repnz
cld
sub
xor
xchg
js
mov
icebp
lds
sbb
or
pop
xchg
sub
test
int
sub
xchg
ret
lds
xchg
xlat
dec
mov
mov
jnp
rorb
out
cli
add
lret
and
int
push
push
rcll
lods
ret
pop
fsubp
adc
outsl
dec
mov
pop
mov
push
out
leave
push
mov
ret
mov
and
sti
xchg
pop
cmp
in
popa
jnp
jae
and
adc
loop
jne
xchg
pop
stos
dec
lcall
lods
pop
cmp
movsl
dec
inc
mov
or
push
inc
ret
push
mov
fiadds
int3
inc
andl
fxsave
mov
loopne
lds
mov
gs
das
add
iret
jp
dec
flds
sub
sub
pop
icebp
rcrb
push
int3
ror
xchg
lcall
pop
aaa
inc
dec
sub
lea
loopne
jb
divl
and
and
lea
cmovnp
and
ja
mov
andl
pop
adc
sub
xchg
sub
adc
sub
sub
scas
sub
dec
in
add
shl
cmp
loopne
xlat
adc
xor
setns
mov
dec
rol
mov
jae
sbb
cmpb
mov
pop
gs
jecxz
push
test
sub
mov
jnp
mov
mov
das
xor
sti
sbb
repz
push
int3
ret
mov
adc
xlat
fistps
dec
pop
push
fs
inc
arpl
xor
fs
int
sahf
or
in
xor
jp
rcrb
repz
sub
call
lea
push
inc
icebp
adc
dec
hlt
pop
fwait
movsb
js
xor
out
lret
add
mov
lods
dec
insl
xor
jo
fcompl
dec
js
pop
mov
insb
jne
push
sub
pop
rcll
movsl
xchg
fisttps
sub
cwtl
cmp
inc
imul
repnz
cld
scas
lea
push
rorl
arpl
and
sub
addr16
mov
popa
int3
lret
mov
jb
adc
out
std
sbb
jecxz
jns
je
ljmp
sti
popa
loopne
into
pop
mov
addr16
popa
push
dec
add
mov
xorl
sbb
adc
mov
jmp
add
out
sbb
std
loopne
mov
add
mov
lret
or
xor
lods
fidivrl
sub
add
nop
push
inc
jne
mov
ret
cmp
int3
test
popf
or
std
lcall
push
imul
pop
outsl
scas
icebp
out
xchg
test
mov
cmp
add
jno
pop
sbb
inc
out
into
cmpl
inc
ja
arpl
push
fidivs
out
fucomp
loope
out
scas
dec
inc
or
pop
push
andl
lds
mov
stos
divb
js
sbb
adcb
je
mov
xchg
pop
out
and
clc
xchg
sbb
sarb
stos
unpckhps
rorb
loope
mov
cmp
xchg
gs
fs
or
fiaddl
xchg
mov
push
add
cmp
jp
arpl
mov
mov
data16
inc
pop
xchg
adc
lret
fwait
test
sarl
clc
and
sbb
jmp
jmp
test
enter
jp
cwtl
mov
pop
fnsave
xchg
xchg
jl
cmc
mov
push
lods
push
stos
mov
inc
js
out
mov
push
cmp
rclb
or
xchg
aaa
cwtl
lcall
adc
add
clc
adc
mov
and
stos
xorl
add
push
add
xchg
and
ds
dec
int
scas
fsubl
clc
clc
setno
inc
xor
insb
movl
insl
mov
or
subl
pushf
sbb
mov
pop
divb
cmpsb
push
leave
xchg
mov
push
iret
loopne
lahf
xchg
imulb
out
out
cmpsb
dec
movsb
test
xor
fisubrl
dec
flds
sub
sub
icebp
dec
xchg
loope
fs
jb
es
or
out
xchg
pop
jp
loope
jno
mov
movsl
dec
jg
fwait
les
xorl
push
arpl
xor
cmp
cmp
inc
add
loop
nop
jge
mov
push
cmovns
lods
sahf
aas
or
js
repnz
out
aas
adc
pusha
aam
adc
adc
popf
enter
leave
xchg
or
jmp
xchg
mov
nop
movsb
push
movsb
pop
test
test
jae
jecxz
push
lahf
sub
cmp
and
mov
fsubrs
lret
es
jle
pop
ret
ja
jbe
push
into
push
dec
cmp
or
rclb
jbe
popa
push
ja
mov
push
sti
popa
movsl
repz
int
jnp
mov
push
jp
jecxz
in
pushf
lods
out
and
pop
sub
inc
sahf
mov
daa
mov
push
sti
jns
cmp
insb
cmp
pop
stos
jmp
rcrl
jg
inc
mov
mulb
add
adc
mov
push
xor
push
lcall
push
ss
push
fs
cli
xor
push
pop
add
out
cmpsl
pop
add
xchg
fidivl
int3
adc
aaa
test
scas
pop
cld
pop
or
iret
fwait
cmp
out
push
add
imul
xchg
fldenv
sti
inc
roll
or
mov
sbb
mov
jns
dec
xchg
or
or
sbbl
sbb
xor
add
insb
cmpsl
sbb
fadds
jnp
into
mov
add
aas
pop
bound
push
imul
dec
xor
aas
mov
pushf
and
xchg
cmpb
inc
jno
mov
xchg
inc
std
out
ficoml
test
lcall
add
xchg
jmp
addr16
add
inc
rolb
insl
popf
stos
imul
mov
mov
pop
push
push
in
hlt
or
inc
inc
cmp
or
sarb
fs
cltd
fs
xchg
decl
fisubs
insl
mov
xor
fwait
ja
mov
mov
mov
xor
mov
je
das
popa
ret
js
sub
lcall
outsb
fsubrl
fiadds
into
std
lahf
hlt
pusha
and
insl
lea
dec
xchg
adc
or
ret
push
repz
ret
lahf
mov
fnstenv
stos
jno
push
sub
push
jnp
ret
jno
imul
clc
or
cmp
mov
jl
sub
add
sub
push
lsl
std
push
in
dec
outsb
add
sbb
subl
sbb
aaa
mov
mov
lock
pop
insb
and
jne
repnz
iret
pop
aad
xorl
loopne
inc
pusha
lods
mov
loop
xor
roll
lds
xlat
cld
ret
cmpl
cmpsl
xchg
pop
push
sti
scas
xchg
fmul
lods
or
mov
jae
orb
jge
mov
les
rcr
mov
ljmp
andb
xchg
mov
cmp
jbe
shrl
nop
ljmp
sub
xchg
clc
xchg
sbb
out
sbb
mov
sub
les
mov
pop
pop
les
mov
mov
ret
cmp
int3
add
jp
rclb
fs
mov
pushf
aaa
jo
dec
loop
incl
repz
xor
add
in
xchg
add
pop
cmpl
fs
mov
dec
jb
push
gs
fcmovnbe
xchg
jnp
pop
out
jnp
sahf
xchg
push
aas
jnp
out
rcl
js
jmp
adc
inc
jg
pop
hlt
mov
call
aam
xchg
sbb
fmul
jmp
jl
jnp
sub
jle
test
pop
push
mov
mov
pop
and
sub
and
push
push
icebp
cpuid
cs
bound
pop
xor
jo
mov
push
lea
ja
dec
ror
mov
hlt
cmpl
ja
clc
cmp
and
mov
lock
push
mov
addr16
leave
xchg
push
jge
loope
jne
lock
mov
pop
jmp
inc
push
jle
bound
jle
sti
lcall
xor
mov
js
pop
mov
sub
imul
xchg
push
dec
fwait
jle
and
jmp
sub
or
push
nop
mov
pop
lds
xchg
test
sti
les
mov
cmp
arpl
cli
shrb
or
movsb
nop
xor
fisttpl
les
pop
loopne
mov
shrl
or
inc
mov
cmp
sbb
xlat
mov
test
mov
xor
inc
jo
adcl
cmp
sbb
test
cli
or
or
sub
iret
push
push
dec
pop
or
popa
fstps
mov
dec
popf
mov
orl
or
ficoms
das
push
xor
pop
push
pop
das
jge
mov
aaa
add
xlat
cs
into
cmpsl
adc
and
jge
lods
jb
ret
gs
mov
movsb
cwtl
or
xchg
mov
addr16
mov
shl
jle
mov
or
movsb
xor
xchg
mov
ret
fdivrl
popa
pop
fimuls
push
adc
push
aam
shrb
xchg
addr16
jb
xor
sbbl
lret
stos
xchg
dec
enter
in
das
lods
push
or
jns
or
and
fidivs
cwtl
lret
es
push
and
sbb
out
lods
inc
xorb
addr16
int
rcrl
push
inc
push
mov
fsub
xor
shl
in
pushl
or
or
pushf
inc
shl
sub
nop
mov
cmp
inc
lcall
xchg
data16
xchg
hlt
xchg
shll
xchg
add
mov
mov
fstpl
sahf
inc
dec
cmp
fdivl
out
popf
cs
popa
xor
dec
push
in
out
leave
xchg
or
push
shll
pop
push
mov
sahf
je
cld
leave
popf
testl
pop
in
xor
jmp
ss
fistpl
and
hlt
pop
dec
jg
xchg
adc
fadds
loopne
jecxz
mov
nop
pop
aas
push
data16
pop
jb
jb
mov
sbb
push
add
inc
insb
subl
das
outsb
sahf
adc
addr16
int
data16
das
daa
adc
mov
scas
jno
mov
mov
ss
jg
call
inc
mov
mov
push
movsb
in
rolb
es
fdivl
inc
ret
lods
push
sbb
adc
in
mov
cwtl
adc
mov
lods
cmp
push
test
cmp
ss
mov
sub
repnz
push
xor
movsb
rcl
xchg
fdivp
push
fisttpll
mull
imul
pop
cmpb
in
fisubrs
popf
pushl
cld
adcw
dec
pop
bound
cmp
cmp
je
int3
lcall
pop
out
cli
pop
imul
dec
leave
fidivrl
fwait
cmc
or
push
outsl
ds
ljmp
mov
jae
xchg
jo
sub
lahf
lcall
push
iret
fidivrl
lock
shlb
mov
loopne
mov
sbb
xor
adcb
lret
push
push
in
sub
add
leave
pop
jbe
mov
sub
add
lds
aaa
pop
mov
mov
repz
ficoms
push
ss
ljmp
es
leave
fnsave
data16
mov
hlt
aad
cltd
icebp
popa
or
mov
loop
fidivs
shlb
xor
pop
xor
rep
mov
xor
stos
cmpsl
jle
fstpl
or
int
andl
cmp
xchg
dec
cmc
js
mov
and
sub
sbb
enter
aam
imul
xor
inc
lods
add
dec
and
jns
mov
xchg
es
addr16
ret
pop
pop
mov
pop
aad
fstps
stc
inc
out
adc
dec
imul
cli
jp
scas
dec
mov
cmp
xchg
inc
lea
mov
out
shl
cmp
stos
loopne
inc
xchg
and
mov
mov
xchg
jo
test
push
addl
jb
mov
jbe
push
aam
dec
mov
mov
push
sti
test
push
sub
imul
lahf
mov
add
jae
pusha
pusha
lock
xor
sub
mov
mov
movsl
jne
fidivl
push
pop
out
popf
pop
movsb
sbb
ret
jns
outsb
fwait
jg
push
and
cmp
es
mov
push
sbb
jbe
shl
inc
and
fmulp
js
add
stos
fxch
mov
lds
test
adc
jbe
sub
adc
add
test
pop
fists
test
mov
xchg
outsl
and
mov
adc
data16
rorb
cmp
mov
in
inc
and
mov
mov
mov
es
into
into
mov
out
std
adc
movsb
dec
in
data16
mov
mov
jno
leave
stc
pop
inc
fmuls
aad
dec
idivl
mov
cmp
test
jge
lock
xor
insl
sbb
inc
rcrb
xchg
sub
roll
jle
push
mov
ret
insb
or
dec
sbb
std
pop
or
js
push
and
cmp
lcall
dec
fimuls
sbb
inc
orl
pop
sbb
or
xchg
inc
mov
ret
in
outsl
pop
sub
jl
dec
adc
adc
jecxz
mov
xor
fldenv
sub
hlt
shrl
out
xchg
push
xchg
stos
cmp
fildll
popf
xchg
lods
jp
pop
loope
inc
and
adc
mov
mov
iret
std
loop
pusha
mov
loopne
in
test
or
andl
mov
std
mov
aas
add
and
cmp
out
xchg
push
cmp
movsb
or
dec
inc
imull
call
ret
frstor
add
pop
idiv
gs
xor
xor
push
jmp
cmpsl
push
xchg
add
push
dec
cmp
mov
test
addl
leave
pop
cmp
rcrl
test
lret
std
mov
shld
bound
ficoms
repz
adc
and
stc
dec
jp
push
fwait
xor
icebp
inc
inc
jmp
and
pusha
push
sbb
rol
test
cmc
iret
push
call
int3
inc
ss
xchg
aad
hlt
sbb
inc
cmpsl
sbb
inc
and
inc
mov
je
jl
subl
or
roll
clc
out
and
mov
test
daa
mov
cli
lea
jl
ret
fs
mov
inc
insl
push
and
lds
movsb
test
loope
idiv
dec
jmp
sbb
sbb
dec
and
stc
outsl
cmp
into
mov
cmp
mov
pop
mov
xchg
adc
repnz
adc
adc
cmp
pop
push
rclb
repnz
xorb
push
cmp
adc
sbb
dec
enter
jg
and
cld
xchg
xchg
push
cli
imul
iret
repz
cmp
or
pushf
loope
jmp
mov
mov
jecxz
sub
cmp
fcmovb
inc
or
add
arpl
idivb
push
js
jl
fcomps
cmp
test
lods
xchg
test
xchg
mov
sbb
addr16
pop
je
divl
out
cli
fnstcw
xchg
in
or
mov
lcall
push
jecxz
fcoms
add
and
dec
sbb
push
fiaddl
sarl
loope
sti
das
fcompl
into
jne
sbb
aas
dec
es
sbb
cmp
pop
in
mov
sub
divb
stos
js
daa
int
xor
insb
and
mov
xor
scas
push
jne
xchg
jp
mov
mov
xchg
or
hlt
mov
fidivl
mov
inc
data16
je
add
jne
mov
mov
pop
loop
cli
cmc
mov
aam
in
xchg
sub
ss
dec
xchg
mov
out
lods
fcoms
push
add
or
cli
sub
cwtl
mov
pop
cmpsb
cli
int3
andb
bound
adc
das
mov
sbb
mov
and
cltd
xchg
mov
es
pusha
xchg
es
push
cmp
mov
sbb
sahf
cmpsl
cltd
aaa
mov
es
xchg
add
cwtl
bound
rcrb
and
clc
divb
jnp
or
dec
add
mov
cwtl
fcmovnbe
dec
insb
cmpsb
push
jge
mov
push
testb
sub
cmp
call
mov
adc
in
jbe
pop
mov
aad
loop
dec
out
dec
imulb
lods
add
or
imul
push
rolb
cmp
fbld
sbb
push
and
js
divb
je
push
sbb
and
popf
adc
mov
jne
xor
loop
hlt
scas
xchg
negb
adc
pop
dec
sahf
lcall
sub
fildll
push
cmc
pop
xor
push
andl
mov
inc
sbb
pop
mov
insl
push
xchg
imul
in
popa
xchg
mov
leave
add
mov
xor
sbb
xor
bound
shlb
mov
mov
push
adc
stc
xchg
inc
push
inc
cltd
mov
pop
aas
imull
adc
popa
dec
push
hlt
and
dec
repz
pop
les
or
clc
rclb
test
and
lcall
jmp
rolb
test
pop
cs
sbb
fwait
or
add
xor
sbb
cmp
inc
out
jge
int
push
dec
test
inc
lahf
sbb
cmpsb
pop
pop
rolb
fcmovnu
inc
fimull
jmp
mov
jns
in
mov
stc
popa
dec
dec
pop
das
ret
jne
pop
imulb
push
mov
ds
sub
xor
xchg
mov
jnp
pop
lods
adc
rcr
push
adc
cmc
mul
jne
or
inc
fucomip
addr16
lret
ds
mov
aas
jle
pop
push
aam
mov
xor
addl
pop
fidivs
sbb
add
mov
and
or
test
loope
mov
pop
add
ljmp
adcb
mov
or
pop
faddl
add
mov
fldt
sbb
enter
and
outsl
cld
pop
cmp
mov
into
push
fimull
icebp
int
bound
inc
jae
dec
sub
adc
outsl
cmp
push
inc
xor
xor
sub
jecxz
gs
icebp
mov
adc
je
lahf
mov
jnp
inc
fldl
cltd
orl
sub
push
or
jae
cli
cmp
xor
adc
push
and
and
les
ja
psllw
ds
cmp
fldcw
mov
in
and
es
adc
xor
mov
dec
and
adc
adc
std
jbe
xchg
mov
adc
adc
sub
cmp
data16
cmp
data16
lahf
xchg
pop
dec
sub
jmp
and
fwait
mov
pop
and
nop
loop
dec
push
xor
ljmp
les
jnp
cltd
add
mov
in
addr16
fidivs
dec
scas
sbb
fildl
mov
push
test
fldcw
andl
aad
cmp
arpl
push
mov
add
mov
cwtl
lcall
xor
gs
int3
out
aam
dec
fdiv
mov
mov
mov
int3
sub
mov
pop
inc
shr
xor
out
popf
sub
pop
mov
sbb
adc
xchg
dec
mov
int
jp
ret
shrb
daa
fisubrs
mulps
clc
xor
push
fmulp
mov
imul
cmpl
dec
jl
pop
sbb
fcomps
add
push
pop
pop
jne
fildl
leave
and
imull
xor
and
sub
dec
dec
filds
imul
dec
not
push
ficomps
mov
jno
cmpl
xchg
cmp
aas
or
lds
cmp
bound
lret
push
out
and
xchg
dec
in
addr16
ja
leave
or
inc
int3
inc
or
dec
adc
out
in
sti
fcoms
jecxz
lods
loopne
loope
das
vpcomuq
ja
repz
iret
or
add
cmp
jo
int
in
push
jge
mov
sub
sub
mov
insl
pop
cmp
xchg
jo
popa
or
jle
es
cmc
dec
fsubs
jmp
push
bound
lods
cmp
mov
pop
neg
dec
mov
cltd
inc
cltd
mov
cmpsl
cwtl
pusha
pop
out
inc
mov
rorb
in
and
in
and
or
fistps
leave
ja
cmp
addr16
sti
arpl
or
out
lret
stc
notb
aaa
ljmp
insb
inc
xor
sub
dec
dec
mov
js
lock
fistps
in
xchg
xor
or
add
jp
rorb
in
les
lock
mov
stc
cmp
lods
inc
push
popf
mov
sub
xor
imul
sbb
and
js
dec
sahf
sbb
jmp
fmul
sub
sbb
iret
push
imul
mov
test
mov
fld
sbb
dec
and
sbb
ss
subl
loope
xor
cli
shl
int3
jne
dec
fnsave
adc
cmpsl
and
mov
shlb
pop
sar
pop
mov
leave
stos
cld
mov
aas
cmc
lret
push
in
fyl2x
xor
pop
pop
add
lret
out
cmp
sub
and
lock
xor
lret
push
imul
aad
jmp
sub
dec
fwait
data16
add
mov
mov
lods
push
sbb
and
mov
lret
push
fwait
jge
outsb
in
pop
cli
adcb
xchg
and
sbb
mov
mov
sub
mov
pusha
arpl
push
popa
xchg
fdivrp
adc
pop
clc
jbe
cli
and
leave
testb
test
pop
pop
shlb
jns
or
mov
pop
jp
inc
mov
pop
mov
cmp
push
mov
pusha
mov
adc
mov
lret
push
pop
push
rcrl
outsb
pop
cmp
jl
xor
int3
inc
arpl
ja
push
cld
pusha
sub
jecxz
out
imul
ret
imul
jb
mov
aaa
and
xor
stos
xor
in
inc
mov
cmc
rclb
mov
pop
ret
mov
ljmp
mov
mov
das
call
stc
mov
sub
adc
push
aad
inc
test
cs
gs
or
pushf
les
repz
popf
popa
pop
sub
mov
test
les
test
sub
in
dec
popa
fadd
inc
test
sbb
push
mov
mov
sub
pop
sahf
sub
dec
mov
data16
lahf
and
dec
add
orl
ss
mov
prefetch
movsb
push
lahf
or
sub
movsb
mov
sbb
sbb
cmp
shlb
xchg
inc
inc
mov
lcall
popa
push
movb
mov
inc
sbb
iret
or
xchg
arpl
push
in
pop
mov
jb
or
dec
sbb
jmp
mov
sbb
outsb
pop
inc
in
inc
loop
icebp
ret
int
xor
jecxz
jns
ljmp
jp
cmc
pavgb
mov
jb
mov
push
jge
pushf
xor
push
sbb
mov
dec
jle
rorl
cmpsl
dec
sahf
bound
bound
jnp
sbb
sar
sarl
inc
add
jp
dec
pop
mov
subb
aaa
adc
dec
inc
scas
std
adc
jle
dec
jp
in
or
mov
lahf
jge
sbb
push
dec
jne
out
filds
stos
and
dec
das
pop
lods
jnp
and
aam
mov
dec
cmp
xor
insl
aad
pop
sbb
bound
out
sub
or
or
mov
adc
shlb
adc
mov
jmp
icebp
add
push
in
ds
inc
call
das
mov
and
mov
int
movsl
aad
jne
sbb
aam
jg
or
mov
dec
fldenv
stos
sub
mov
jg
jnp
rcll
inc
scas
jno
jnp
insb
push
inc
pop
adc
or
pop
ficoms
outsl
or
nop
pop
gs
push
loope
or
adc
ja
mov
xlat
jge
les
rorl
mov
iret
dec
aad
and
out
inc
in
lret
pop
loop
stos
add
mov
cmpsl
cmpsb
sbb
lock
and
mov
mov
imul
pop
jge
pop
mov
push
mov
aaa
xor
mov
mov
jb
xor
inc
push
scas
dec
out
xchg
jbe
jmp
lods
and
into
lock
pop
adc
pusha
xchg
sahf
xchg
in
push
dec
gs
cwtl
push
lock
jp
cmc
ss
insb
and
lcall
push
sahf
das
loop
sbb
lret
shl
and
adc
sbb
lret
push
repnz
addl
adc
shl
cli
popf
cli
add
jge
inc
addr16
mov
test
lock
cmpsb
add
sbb
enter
lods
push
sbb
pop
ret
pop
mov
stc
flds
clc
shll
cld
cmp
cwtl
mov
cmpsb
rcll
sbb
cli
cli
outsb
mov
cld
pop
push
aad
xlat
xor
inc
test
out
jo
xor
xchg
test
xchg
and
mov
pop
mov
call
fistpll
cmp
mov
lea
inc
mov
and
test
insl
test
add
pop
test
push
pop
or
je
test
jae
and
sbb
iret
sbb
aas
mov
shrb
pop
xor
dec
int
mov
inc
cmp
push
fstps
cmp
aaa
shlb
mov
lahf
bound
call
dec
dec
les
test
xchg
mov
sahf
int3
std
push
outsb
dec
flds
jmp
insb
push
daa
lcall
sti
jl
ljmp
pop
sub
loopne
sbb
jg
mov
mov
insl
dec
sbb
mov
aaa
pushf
jnp
sub
arpl
add
out
stos
sub
or
sahf
cli
mov
cmpsl
nop
cmc
add
mov
in
xchg
mov
fnstcw
dec
xchg
stc
pop
mov
cwtl
cmp
rolb
xor
mov
icebp
js
das
mov
cmp
jg
dec
pushw
pop
push
mov
cmc
adc
bound
bound
arpl
mov
jne
lret
xchg
stos
mov
cmp
sbb
mov
dec
je
jb
jae
shll
xchg
sbb
aas
adc
les
mov
cmp
dec
aam
aad
enter
push
addr16
pop
sub
add
insl
cli
repnz
xor
popa
and
jnp
mov
push
mov
shll
dec
shll
mov
push
push
mov
push
jmp
xor
adc
in
mov
push
andl
ljmp
sub
push
mov
and
ret
jnp
cwtl
jno
repz
iret
mov
sub
in
push
lcall
or
outsb
sub
dec
add
ljmp
pop
push
push
push
jae
sbbb
outsl
ja
fsubrl
and
jno
xor
and
fwait
sbb
jecxz
sti
jne
mov
cmp
fimuls
ljmp
xor
popa
jnp
pop
push
sti
data16
gs
push
adc
pop
popf
gs
jnp
scas
pusha
pop
orl
fs
fnstcw
in
jae
jno
mov
xchg
sub
sbb
sub
sub
dec
jp
dec
sbb
pop
mov
pop
cmp
mov
and
into
lcall
sti
cltd
pop
and
sarb
shlb
xchg
stos
hlt
xchg
push
mov
mov
fnstcw
test
sti
out
aad
movsl
jbe
push
cltd
jb
subl
aas
dec
sahf
popf
mov
add
sub
enter
add
lret
xchg
aaa
dec
jmp
psubd
sbb
xchg
adc
fwait
pop
inc
jle
inc
and
je
outsl
pop
sarb
and
and
movsb
mov
xchg
icebp
data16
pushl
pusha
mov
int
test
es
push
and
lock
out
xchg
ds
repz
dec
jecxz
jne
mov
pop
fbstp
and
push
jmp
xor
mov
imulb
ja
mov
js
cwtl
xor
cwtl
out
pop
ja
adc
xor
add
out
xor
sub
xchg
or
push
mov
aaa
push
int
shlb
fidivs
pop
fisubrs
xor
cld
add
popf
notb
arpl
loop
insb
sub
mov
cs
sub
scas
movsb
dec
xchg
lods
insb
mov
jne
int3
xlat
imul
push
ss
jnp
push
daa
mov
xchg
fcomip
rorl
cmp
lcall
inc
dec
das
in
jle
addr16
aas
inc
push
mov
ffreep
inc
mov
cmp
in
jecxz
jo
mov
pop
aas
rol
xor
and
sub
add
sbb
cltd
lods
adc
cs
mov
sti
mov
insl
and
fs
clc
and
jns
sub
pop
in
lea
pop
sbbl
sub
xor
aad
lods
jmp
mov
cmp
push
std
adc
lret
loope
sub
inc
out
lea
add
push
lret
push
scas
fdivr
dec
fistl
sub
pop
jb
js
int
xchg
inc
cmpsb
inc
jnp
aad
stc
pop
into
sbb
int
roll
mov
pop
aad
cli
inc
std
cli
add
sti
cmpsb
loopne
out
jb
addr16
in
outsl
pop
icebp
inc
push
lea
das
mov
add
adc
divl
add
iret
inc
fwait
aas
dec
loope
and
dec
mov
data16
inc
dec
mov
mov
test
jl
add
sti
jae
jecxz
pop
xlat
mov
mov
xchg
ds
jmp
pop
adcl
pushf
or
mov
xlat
inc
mov
push
sub
cmp
shll
shrb
rolb
xor
jno
sub
push
cmpsb
popf
add
inc
in
jle
inc
popa
out
std
fwait
lret
dec
ja
mov
imul
or
rcll
mov
pop
push
sub
popa
mov
push
addr16
popa
and
sbb
lret
js
hlt
mov
rol
jo
cs
outsl
and
popf
adc
pop
notb
clc
xor
loope
out
or
jge
push
sbbb
stos
cmp
mov
or
enter
ss
mov
mov
sarb
push
push
add
cmpsb
pop
pop
dec
lahf
loopne
inc
xchg
mov
dec
and
sbb
enter
in
cmp
loopne
dec
cmc
popa
ss
push
daa
mov
push
add
les
pop
dec
in
jmp
pop
push
rcll
xchg
xchg
add
imul
ljmp
test
out
sub
daa
insl
aas
movsl
jo
jo
lahf
fs
leave
cmp
ficoms
call
jg
out
xor
ljmp
outsl
or
int3
mov
sbb
xchg
xchg
dec
mov
and
cs
outsb
addr16
jae
xchg
daa
mov
cmp
aas
idiv
or
enter
mov
sub
es
popf
pop
daa
sub
inc
mov
or
test
mov
sarb
fcompl
add
mov
cli
pop
fistpl
jnp
shl
jne
jg
mov
push
jmp
xchg
adc
push
or
pop
out
xchg
mov
pop
call
cmp
jle
jbe
loop
add
and
imul
lahf
pushf
push
shlb
mov
les
mov
js
push
xor
xchg
imul
test
mov
and
mov
call
out
test
sbb
push
sub
mov
xor
push
and
xor
div
popa
adc
cmp
nop
stos
cmp
sub
jae
pushf
jnp
mov
push
mov
push
dec
mov
imul
mov
cmp
data16
jp
mov
fistpl
inc
jae
shll
cmp
sbb
in
shl
sub
xchg
sub
mov
sti
out
sbb
jmp
mov
arpl
test
push
movsb
cmpsb
pop
and
imul
xor
mov
test
mov
pop
adc
pop
or
inc
push
sbb
xlat
push
ss
add
jbe
push
punpckhbw
dec
push
addr16
ja
arpl
add
sub
and
call
xor
push
arpl
mov
inc
jns
loope
ja
adc
sub
cli
fs
scas
inc
call
xlat
xor
cwtl
stos
ror
mov
jle
xor
iret
aam
jbe
inc
hlt
jecxz
stos
js
andb
mov
rol
sub
adc
scas
jmp
arpl
pusha
adc
jg
rcrb
cmc
adc
adc
sbb
inc
pop
outsl
imul
mov
mov
bound
lret
es
aaa
cmp
push
call
jne
xor
testb
bound
pop
jno
jp
iret
jae
orb
fwait
xlat
inc
stos
dec
cmp
test
jne
pop
movsl
mov
shlb
je
mov
jns
les
in
cmp
jnp
add
xchg
sarb
xchg
scas
popf
or
pop
or
jg
push
mov
loope
xchg
lret
mov
fnstenv
push
std
ja
rorb
data16
leave
lahf
push
pop
arpl
mov
imul
rolb
inc
fadds
xchg
scas
mov
dec
imul
ficompl
lods
adc
jmp
addr16
ds
fsubs
jg
dec
es
fbld
add
adc
add
iret
mov
xor
stos
mov
pushl
jbe
xor
in
and
into
xor
aam
jmp
mov
outsl
adc
mov
aas
enter
mov
xchg
mov
push
jns
mov
sub
mov
jmp
cltd
sub
mov
mov
shrl
add
mov
and
mov
outsl
arpl
and
sub
or
push
mov
xorl
lods
lret
repnz
mov
repnz
sub
xchg
and
xchg
mov
and
movb
jmp
cmp
hlt
imul
fsubrl
adc
dec
subl
cmp
or
es
fdivl
ss
dec
or
ror
data16
jg
je
mov
push
xor
and
pop
outsb
daa
test
mov
rorb
pusha
and
subb
and
mov
sbb
mov
leave
pop
or
movsb
or
xor
mov
pop
adc
sbb
or
scas
cs
ja
aam
repz
gs
inc
lahf
test
jnp
lods
mov
xor
in
fisubrl
dec
adc
fmull
push
mov
les
rcll
push
daa
test
lret
outsl
cmp
gs
adc
adc
imul
fstpt
ds
lcall
inc
dec
int
cli
and
mov
popf
and
nop
fstpt
jmpw
loopne
nop
sbb
movsl
jecxz
std
mov
pop
push
cmp
mov
mov
dec
repnz
mov
dec
push
and
xchg
jp
stos
xchg
leave
cld
decb
cmp
ds
sbb
mov
mov
fsts
scas
pusha
out
push
inc
cltd
scas
pop
cmp
setnp
sti
cld
mov
fcoml
popf
sbb
push
fimuls
jae
loopne
or
test
xor
sub
add
insl
test
in
xor
sbb
and
ja
dec
dec
call
lret
imul
cmp
outsb
mov
jb
xchg
push
inc
decl
out
push
pop
in
jmp
bound
push
cmc
inc
jmp
out
sarb
in
stos
jno
lret
and
stc
dec
jnp
add
fnstcw
jmp
les
adc
adc
fsubs
cmp
xor
mov
xchg
outsb
adc
fidivs
sub
mov
xlat
fcoml
aaa
dec
adcl
pop
stos
sub
sbb
arpl
adc
dec
pop
xor
inc
dec
mov
sub
ficoml
sbb
mov
pop
adc
fistl
mov
testb
cmp
dec
fsubs
sbb
ljmp
popf
mov
int
xchg
scas
rclb
pop
push
shll
data16
fimull
cltd
xchg
insl
inc
dec
bound
outsb
js
xchg
mov
rcrb
and
mov
xor
stos
cmc
adc
jle
ret
mov
lods
push
dec
or
jb
jnp
inc
xchg
loop
loopne
sti
mov
cmp
out
imul
mov
icebp
data16
cmpsl
lods
mov
mov
arpl
mov
in
iret
mov
rep
adc
and
loopne
jb
add
push
cwtl
clc
or
filds
insb
fisubl
addr16
push
imul
ss
insb
xchg
inc
inc
out
ret
pop
xchg
mov
ret
scas
sub
dec
jae
dec
xchg
enter
mov
es
pusha
je
pushf
pop
into
fidivrs
add
pop
and
mov
mov
xor
rol
push
push
aam
sub
xchg
out
jb
push
jg
stc
lahf
jbe
cmp
fisubrs
xchg
pop
mov
in
mov
sub
cld
enter
xor
xor
add
xchg
sbb
hlt
lret
inc
repnz
mov
push
mov
icebp
not
shll
cmc
rcrl
js
sahf
lock
leave
loop
sbb
jl
roll
jo
pop
mov
je
int3
idiv
daa
fldcw
sub
repnz
gs
mov
pop
add
push
inc
arpl
nopl
inc
mov
adc
hlt
and
dec
scas
filds
test
xchg
jl
adc
pusha
lret
ud2
jmp
mov
rorl
push
leave
mov
movsb
div
lock
mov
rol
int3
fadds
movsb
hlt
mov
insb
or
pop
sahf
add
fdivrs
orb
push
jnp
sti
outsb
es
sbb
sbb
loopne
mov
data16
sbb
jbe
imul
lods
push
jnp
xchg
mov
pop
jns
jmp
fistpll
loop
lret
lret
cmc
out
call
inc
cmp
fbld
sub
enter
outsb
push
xor
stos
out
es
sub
scas
test
and
clc
aad
gs
int3
hlt
in
insb
stos
imul
mov
popa
sub
pushf
dec
ret
andnps
mov
cmpsl
aaa
sti
and
mov
movsl
ss
inc
ja
outsl
xchg
jle
add
ds
dec
repz
mov
lods
dec
or
cld
adc
aas
push
out
jecxz
add
mov
fbstp
es
xor
mov
shr
iret
jl
imul
mov
in
daa
lea
push
shrl
mov
gs
lahf
add
insb
xchg
repz
mulb
xchg
stc
loopne
mov
and
lods
and
sbb
stos
mov
jp
outsl
std
hlt
js
scas
sub
mov
out
jmp
int
sbb
inc
test
lret
mov
or
ljmp
ficompl
dec
mov
in
jno
dec
inc
std
into
sub
rorb
leave
andps
addb
mov
gs
ja
mov
lods
decb
mov
daa
ret
add
sub
das
and
jnp
push
push
jno
pop
mov
mov
adc
bound
dec
int3
daa
imul
call
jo
inc
cmp
movsb
mov
js
outsl
lret
mov
sbb
jge
sub
icebp
iret
inc
mov
divl
jbe
imul
mov
fcomps
notl
fdivr
inc
sub
mov
mov
gs
or
fs
mov
fs
insb
fmull
jo
arpl
int
mov
and
out
jmp
xchg
scas
sbb
fistpl
rorl
mov
sub
ljmp
sbb
aam
or
ljmp
inc
in
aas
cmp
in
add
jb
jne
mov
push
sub
push
mov
mov
and
in
mov
ret
movl
or
in
push
push
ret
or
jno
scas
arpl
pop
cmc
mov
xor
repnz
jge
mov
push
cmpsl
mov
mov
sbb
adc
mov
mov
adc
addl
pop
dec
cmp
dec
lret
and
out
xorl
cs
sub
xchg
icebp
dec
adc
out
std
cli
xchg
or
jbe,pn
sub
shl
mov
leave
add
andb
stos
xchg
or
sub
add
daa
pop
imul
push
roll
or
or
mov
pop
getsec
adcb
out
and
fsubrs
xor
adc
das
xchg
mov
and
fs
stos
ljmp
inc
enter
scas
add
jne
outsb
jp
or
jae
pop
arpl
lret
mov
cmc
cmp
imul
mov
adc
sbb
sbb
push
int3
cld
scas
subl
or
push
cmc
jbe
dec
stc
pop
xchg
jnp
mov
lods
ds
iret
push
cmp
pop
js
push
vucomiss
add
mov
fwait
mov
cmpsb
scas
xor
xor
jecxz
inc
pop
out
int3
inc
mov
xchg
ljmp
lahf
mov
enter
jmp
out
push
jp
xor
hlt
sub
dec
mov
fildll
add
not
in
je
adc
ss
std
sbb
fisubrs
shrb
sti
mov
xor
vmwrite
mov
daa
jo
enter
xlat
shlb
popa
adc
mov
lock
sub
lock
pushl
sub
mov
and
mov
cmp
and
lret
xchg
icebp
shlb
es
jo
and
jns
sub
out
mov
adc
push
cltd
adc
add
sbb
sti
movsb
movb
push
jbe
movsb
inc
ret
lret
inc
ffreep
aas
icebp
mov
ret
dec
mov
lret
out
xchg
into
leave
add
fwait
mov
inc
lcall
inc
iret
je
movl
xor
cli
loop,pn
rcrl
ljmp
fcomps
mov
add
jle
xchg
aas
add
fidivs
pop
jb
jo
pusha
imul
dec
adc
es
stos
sub
sbb
clc
pop
test
sti
les
mov
cmpsl
inc
jl
outsl
test
ss
push
aas
flds
fbld
movsl
clc
aad
movsb
xor
lret
jno
add
push
cmpb
jb
out
add
stos
adc
push
sub
in
js
movsl
push
lahf
adc
ds
inc
iret
fxch
cmpsb
lds
or
int3
inc
inc
sti
add
outsb
aam
sbb
ljmp
es
int
stos
mov
dec
mov
int3
mov
movsl
mov
mov
fistl
mov
sbb
sub
ret
jmp
push
movsb
or
or
and
and
xchg
pop
std
lds
dec
adcb
loopne
add
sub
lea
bound
inc
adc
dec
cmp
inc
xchg
dec
pop
mov
dec
inc
repz
sub
icebp
cmp
jb
add
dec
call
into
sub
mov
xor
aad
das
jbe
outsl
push
xor
ja
and
pusha
pop
and
or
xor
mov
loope
lods
ss
data16
and
out
out
sub
popf
dec
push
out
xlat
loope
mov
sub
loope
loope
add
ffree
imull
ret
rol
sbbl
cmp
push
push
iret
jnp
inc
sub
jno
mov
mov
sti
loopne
sub
pop
fwait
rol
xchg
pop
shlb
cli
rcrl
lods
ds
or
fsts
inc
pop
mov
popf
andl
add
mov
test
pop
ja
mov
push
insl
sub
test
icebp
cmc
inc
pop
xor
pop
cwtl
lea
insl
lret
sbb
xor
jmp
rcrb
loope
add
jl,pt
popa
push
xor
and
scas
outsl
cs
fnstsw
es
cmp
push
mov
insb
pop
jecxz
aas
sti
es
sbb
inc
test
sarl
leave
fucomp
jg
std
and
adc
das
mov
ds
push
dec
arpl
xor
pop
aaa
mov
div
push
aaa
jne
inc
jo
xor
mov
sub
adc
das
sbb
adc
jo
cli
hlt
aaa
cmpsb
jno
add
push
push
jmp
inc
and
int
lock
pop
mov
aaa
or
jl
leave
fs
stos
adc
push
lea
dec
sbb
cmpb
add
mov
push
pushf
cwtl
outsb
xchg
push
mov
inc
ss
ret
inc
flds
add
cwtd
xor
in
pushaw
jb
push
xor
cmp
arpl
arpl
shr
sbb
pusha
lea
jmp
iret
out
jmp
jne
mov
push
mov
or
xor
out
jecxz
inc
lahf
cmp
fsubs
mov
cmpsb
sub
ret
jecxz
xchg
or
sbb
loope
in
push
jo
jne
xor
in
pop
sub
data16
jno
xor
mov
gs
in
stos
inc
cs
rcrl
cmp
bound
scas
in
inc
cmpsl
out
xor
xor
pop
sbb
xor
aaa
cli
sar
adc
bsf
mov
inc
dec
test
and
mov
lcall
ss
push
mov
jb
dec
jns
cmp
enter
dec
adc
nop
rcl
stos
nop
das
int3
and
pop
into
dec
fnsave
cli
ds
sbb
pusha
push
mov
stos
nop
pusha
sbb
push
lds
in
out
fildl
pop
outsb
imul
cmp
jns
pop
push
dec
int
mov
in
insb
jmp
fs
jl
push
sub
inc
add
xchg
cs
inc
add
xchg
jb
int3
mov
or
push
pop
pop
into
push
pop
cmp
sti
push
sbb
test
xor
mov
sar
jae
out
shll
push
rorb
xor
xor
dec
inc
sbb
pop
loop
shlb
add
mov
pop
sbb
or
mov
scas
testb
shll
pop
cmp
adc
das
or
dec
xlat
loop
dec
stos
insl
and
fistpl
inc
sbb
insb
in
adc
jle
xor
filds
mov
mov
push
andb
xor
shrb
sub
mov
pop
shrl
pusha
call
ret
loopne
sub
lahf
sub
or
loop
mov
pop
out
lret
arpl
mov
and
xchg
cmc
lahf
dec
adc
xor
fs
mov
dec
inc
jle
cmpb
add
jle
xor
inc
pop
sub
rcll
inc
std
adc
dec
lret
jae
mov
popf
mov
cli
rcrl
xor
push
test
adc
mov
pop
ret
adc
jmp
jmp
jnp
jae
push
add
xchg
xchg
rorl
call
mov
cmpsl
dec
test
jae
jl
or
xor
cmp
orb
push
and
pop
cmp
xor
sbb
dec
jns
fwait
out
jmp
lea
mov
and
test
testb
pop
lea
popa
add
stos
outsb
test
ljmp
xchg
out
push
ds
cmp
adc
enter
and
add
mov
mov
fsts
pop
jp
lret
push
mov
and
jl
cmpsb
lds
stos
out
mov
pop
pop
mov
daa
insl
ror
lods
and
rolb
and
add
lods
ret
mov
adc
ror
imul
pop
push
cs
ja
mov
lds
popf
and
mov
mov
rcrl
cmpsl
dec
into
repz
xchg
stc
jb
fs
dec
cmp
daa
sub
cmpsb
std
in
out
cmpsl
fstpl
fimuls
divb
mov
outsb
and
scas
add
mulb
adc
inc
mov
lcall
xlat
les
test
in
xor
test
dec
cmp
and
fistpll
lret
xchg
adc
xor
adc
aad
ret
and
mov
push
imul
cmpsb
out
cmp
outsb
inc
cld
in
cmpsb
or
mov
mov
mov
outsl
sbb
cmovbe
xlat
pminub
mov
sub
inc
inc
test
icebp
cmpsl
jle
stos
sbb
and
sarl
faddl
add
nop
cmc
add
stc
scas
pop
xlat
sub
or
add
add
mov
es
fwait
lret
call
adc
lret
maskmovq
testl
cmc
lcall
push
frstors
inc
mov
jecxz
jle
or
add
ljmp
lods
mov
insl
mov
push
mov
xor
add
rorb
cmp
mov
xchg
or
jmp
adc
pop
mov
jo
nop
push
jecxz
clc
mov
sbb
sti
or
cltd
shlb
inc
ljmp
icebp
imul
cs
push
xchg
or
out
and
mov
pusha
dec
adc
lds
outsl
fcomps
sub
push
dec
xor
xchg
pop
cmp
push
mov
fwait
rclb
or
xor
repz
aam
leave
add
or
sbb
popf
js
adc
mov
mov
fnsave
pop
data16
imul
fdivrl
lock
sub
int
aaa
test
in
mov
jecxz
roll
into
fistpll
xor
xor
jle
mov
stos
scas
cld
mov
xchg
mov
sbb
sub
out
pusha
push
add
cwtl
out
movb
cli
lret
ret
push
lahf
xchg
movsb
cmpsl
mov
daa
out
adc
jmp
lods
push
adc
push
inc
xlat
xor
pop
and
imul
jmp
in
pop
je
int
cmp
add
mov
add
jmp
ret
popa
pop
and
inc
add
imul
shlb
imul
stos
or
jecxz
mov
push
adc
fwait
lcall
xchg
jns
cs
xor
ja
ss
ret
cmp
movb
and
test
repz
mov
and
sub
loope
push
jge
lahf
pop
or
ds
pop
das
cwtl
fidivrs
call
aam
into
or
mov
enter
push
lock
addb
cmpsb
outsl
and
addr16
clc
mov
shrb
scas
dec
sbb
enter
xchg
cli
adc
enter
cltd
or
xchg
fsub
pop
ret
outsb
js
or
cmp
adc
in
in
xchg
shll
cmp
pop
xchg
or
xchg
insl
in
and
orb
mov
sub
push
mov
inc
add
in
repz
imul
push
push
jle
pop
mov
arpl
xchg
mov
sti
push
sbb
int
jo
addr16
popf
adc
cmc
stos
lds
add
call
ficoms
push
cltd
aad
cmp
fsub
cltd
call
inc
ret
outsl
jp
movsl
jno
aam
sbb
mov
cmp
imul
movsl
mov
out
xchg
pop
sub
adc
sbb
and
hlt
mov
jae
lock
out
lahf
repz
cli
orb
xchg
in
push
cmp
and
stc
gs
xchg
repnz
or
xchg
push
mov
popf
mov
mov
jmp
dec
jle
stos
repnz
push
dec
mov
xorb
xor
movsl
jno
hlt
mov
pop
lret
subb
xor
jbe
das
sahf
xchg
lds
jo
addr16
les
ss
xor
fdivs
inc
jae
xchg
insl
or
mov
dec
jle
test
pop
add
shl
lods
test
push
sub
divl
mulb
dec
ret
sub
mov
or
pop
rcrl
out
pop
sbb
push
dec
xchg
loopne
mov
mov
out
and
cli
stc
sahf
and
pushf
jecxz
or
pop
mov
out
push
or
and
hlt
mov
dec
dec
lock
push
sahf
jne
or
adc
sbb
data16
out
push
mov
lret
les
inc
and
push
popa
or
les
and
pop
xchg
push
movsb
cltd
push
addb
jge
pop
ljmp
stos
push
fisttpll
stos
in
add
mov
mov
pushl
mov
sub
lret
call
add
and
push
and
lods
in
fs
lods
sub
nop
or
xchg
out
mov
adc
lcall
popl
or
jmp
int3
xchg
shrb
dec
lcall
mov
shrl
xchg
add
mov
or
xor
push
pop
inc
mov
test
sti
cmp
cld
xchg
imul
sbb
jns
mov
icebp
subl
fisubl
in
jmp
lea
das
fcomp
jne
dec
add
adc
jle
cmpsl
xor
sub
push
and
add
mov
inc
jle
jmp
push
pop
stos
sub
or
rol
fcoml
mov
xchg
loopne
icebp
popa
xor
cmp
xchg
xchg
dec
mov
mulb
outsb
call
adc
xor
fdivr
or
lds
les
and
aam
sbb
mov
testb
js
mov
jl
imul
mov
out
clc
movsl
cld
or
int3
pop
mov
or
inc
loop
stc
cwtl
add
repnz
aad
mov
aaa
xchg
xchg
loopne
cld
jnp
sbb
and
imull
mov
adc
fldcw
and
lock
sarb
into
push
dec
jecxz
and
cmp
stc
mov
mov
jne
xor
mov
movsb
sub
sub
jbe
mov
into
jae
sbb
out
adc
and
sub
pop
or
call
pop
repnz
cmpb
adc
xchg
pusha
in
cmpb
and
add
pop
cmp
mov
xchg
mov
mov
mov
jl
enter
adcb
jg
loop
addl
inc
inc
bound
int
insl
popa
sbb
xchg
into
or
repnz
loopne
cmpsb
cmp
imul
push
add
andl
push
pushf
cmp
lcall
or
jb
mov
mov
rorl
mov
lea
inc
jl
popf
sub
dec
pop
cld
sbb
mov
sbb
sti
cmp
mov
add
daa
dec
lods
ljmp
insl
lds
and
test
sub
in
enter
mov
jne
bound
in
xor
fisubrl
add
repz
repz
out
test
mov
xor
xor
loopne
jno
in
push
clc
xchg
mov
push
ds
pop
mov
out
gs
ja
aas
dec
push
cltd
iret
add
fwait
lret
and
jno
mov
sub
sbb
xor
imul
push
ret
dec
mov
nop
mov
jo
sbb
mov
sub
mov
jg
mov
mov
jo,pt
bsr
push
je
jo
jne
test
mov
je
jno
or
mov
divb
sahf
push
repz
or
out
mov
adc
xchg
sbb
xor
outsb
pop
or
ret
addr16
xchg
mov
test
cmp
frstor
jecxz
shlb
adc
jns
cmp
lret
addb
push
xor
adc
shlb
mov
js
fisubl
mov
sbb
cs
ret
pop
xor
add
imul
mov
ficoms
lods
pop
xchg
popa
je
je
sbb
xchg
stc
jae
pusha
sar
jbe
cli
xchg
pop
int
mov
test
xor
not
pop
jmp
inc
int3
push
cs
sbb
sti
rorb
out
sarl
add
fwait
orl
pop
sub
add
jbe
icebp
jbe
add
mull
lret
sbb
hlt
cs
dec
push
jle
test
fwait
pusha
mull
jmp
push
in
push
imul
daa
push
rorl
mov
and
idivl
sbb
lea
xor
lock
add
in
je
push
xlat
and
shlb
jecxz
sar
test
mov
cmp
ds
lds
testl
dec
jne
mov
sahf
push
mov
sub
clc
hlt
jge
dec
scas
mov
daa
iret
cmp
push
push
push
es
mov
adc
in
movsb
adc
mov
into
jo
sbb
xor
out
insb
pushf
aad
jecxz
push
xlat
ss
cwtl
int
adc
inc
aas
mov
add
lds
in
pusha
sbb
or
pusha
dec
enter
sbb
dec
ss
ret
scas
stc
mov
mov
jl,pt
out
mov
in
and
sbb
sub
xor
outsl
lret
test
je
ret
addr16
icebp
stos
pop
jae
cli
hlt
movsb
cmp
mov
xor
inc
psadbw
inc
xchg
xchg
jo
pop
das
ret
scas
mov
mov
push
cmp
fisttpll
pusha
out
jmp
roll
jno
addr16
fimull
rcrl
nop
in
mov
sarl
clc
ret
out
push
call
fimull
ror
and
jo
add
mov
adc
loopne
cmpsl
mov
outsl
mov
jge
stc
sub
fldenv
push
mov
push
jecxz
mov
stos
or
inc
or
jg
jmp
test
aas
rclb
mov
pop
jg
or
mov
jae
mov
dec
ja
push
aam
sub
lahf
mov
aaa
push
aaa
cmc
mov
sbb
jne
or
loopne
lahf
add
lret
lds
inc
jecxz
clc
xor
in
inc
sti
and
leave
shlb
cmpsl
aad
adc
lret
cmpsl
scas
cmpsl
arpl
inc
xor
into
daa
inc
addb
adc
shl
lods
shll
sti
mov
sahf
mov
outsb
ret
push
movsl
movsl
sub
daa
mov
and
pop
out
outsl
mov
fcoms
mov
stc
push
inc
mov
das
mov
inc
mov
push
push
xchg
decl
add
outsl
push
mov
lea
rcrb
cli
imul
lock
sbb
mov
add
orl
insl
xor
pop
mov
pop
xchg
ja
inc
mov
rcl
jae
fildl
cld
pop
adcl
mov
ljmp
lret
and
cltd
sub
movsl
in
inc
xchg
les
inc
iret
out
dec
rcll
insl
sbb
into
push
negl
stos
bound
imul
fcmove
add
pop
cmp
cmpsb
mov
cmpsb
aad
fsubs
pop
cmc
xor
outsb
aas
jg
negl
adc
or
addr16
sub
mov
mov
push
pop
movsb
imul
inc
adc
ficoms
loope
xor
add
rcrb
lods
and
push
aas
movsl
cmc
or
fwait
adc
mov
testl
add
mov
andb
je
xor
icebp
call
jmp
aad
ret
push
lahf
mov
movsb
xor
mov
jae
aas
ja
sbb
xchg
jle
xlat
sbb
scas
ds
cli
popa
popa
repnz
xchg
pusha
mov
ss
stc
jae
jne
int3
sbb
xchg
mov
rorl
push
push
push
sub
xor
pop
xchg
fcom
pop
pop
sub
mov
adc
xchg
sarb
cld
clc
mov
mov
sub
or
iret
leave
mov
pop
mov
movsb
mulb
xor
mov
sahf
test
push
out
lock
sbbb
ds
sub
lcall
inc
cmc
adc
jnp
push
and
push
insl
icebp
dec
cmp
cmp
or
lock
sub
sbb
mov
mov
cmp
push
mov
imul
test
les
rorl
mov
sbb
in
imull
push
add
pop
pop
dec
fstl
mov
or
inc
add
mov
iret
out
mov
icebp
pusha
mov
fdiv
mov
mov
rorl
and
pop
sub
sub
mov
sbb
imul
jp
sub
jb
add
pop
mov
repz
std
pop
jnp
mov
outsl
jae
adc
and
and
xchg
dec
jbe
in
lods
in
popf
in
in
adc
xor
ret
xor
push
cli
test
push
ds
js
or
lea
adc
insl
inc
iret
fstl
daa
mov
shlb
jns
xor
ja
lcall
leave
pusha
pop
icebp
mov
pop
push
push
movlps
push
pop
stc
xchg
stos
push
add
dec
cmp
ret
out
or
out
dec
mov
push
mov
mov
test
movb
mov
jp
add
inc
repz
and
fdivrl
xchg
lods
or
xchg
dec
je
mov
int3
aaa
or
icebp
jmp
ja
fmull
mov
push
jo
push
lret
mov
pop
loope
mov
push
cmp
pop
mov
mov
lods
xor
frstor
pop
mov
mov
push
rcll
fdivl
gs
pushf
or
lahf
jp
mov
daa
xor
inc
push
jns
rcl
pop
jno
pop
mov
aas
mov
add
fidivrl
mov
pushf
xchg
loope
push
out
test
in
jns
aam
ss
add
push
into
cmp
lcall
jae
pop
xor
ja
int3
or
xor
enter
mov
xor
out
scas
pshufw
pop
fiaddl
mov
dec
mov
insb
shrb
test
mov
and
or
int3
jge
sahf
mov
shll
in
leave
icebp
and
stos
lods
cmp
popa
jl
lret
inc
cmp
pop
mov
push
repz
dec
in
mov
pop
xor
or
push
in
ret
dec
mov
lods
insb
leave
clc
sahf
mov
loope
test
push
call
ds
sbb
mov
fists
out
sbb
cwtl
insb
nop
jg
test
push
outsl
aad
cltd
sub
pusha
dec
push
xchg
insl
pushf
pop
sub
sub
stos
pop
jle
jne
bound
inc
or
xor
shr
mov
test
adc
inc
imul
and
xor
pop
lret
repnz
hlt
mov
and
add
mov
push
sub
out
ljmp
insb
pop
and
or
mov
and
test
int
stc
lds
ficomps
cwtl
and
adc
lea
ret
mov
into
pop
mov
cmpsl
mov
les
sbb
scas
addr16
cltd
mov
fnstcw
mov
addr16
cmp
mov
push
movsl
sbb
sahf
lods
aaa
sbb
ja
jg
test
stos
jp
das
mov
dec
lret
cmpsl
dec
or
sbb
iret
addr16
push
shrb
test
add
jmp
push
fdivl
push
scas
imulb
test
dec
inc
clc
jbe
push
pop
outsl
mov
adc
shlb
and
hlt
cmp
aas
inc
mov
mov
bnd
cs
out
cmpsl
xchg
xor
ds
addr16
rcr
push
pusha
sbb
or
pop
aaa
push
movsl
sbb
inc
scas
sahf
add
sarb
jbe
jns
dec
cmpsb
fldl
js
xchg
sahf
mov
mov
cmp
adc
mov
outsl
dec
aam
dec
nop
fistpll
jg
add
pushf
jnp
lods
iret
pusha
jl
insl
and
adc
out
and
or
lea
fldt
pop
push
mov
xor
jmp
sub
sub
push
mov
cwtl
in
jb
xchg
jae
or
testl
leave
lcall
scas
insb
xchg
es
subl
or
jbe
les
jle
and
addr16
cmp
jge
cmp
enter
jb
cli
jo
add
jl
dec
inc
negb
shll
out
rorb
xchg
pop
add
sbb
dec
jns
hlt
cmpsl
stos
mov
push
mov
lods
add
in
test
int
cmp
jp
sbb
inc
imul
lahf
jno
xchg
hlt
pushl
jns
cld
cmp
mov
or
fistl
push
inc
ret
sbb
mov
mov
fisttpll
orb
rolb
imul
test
das
mov
push
sbb
das
nop
out
mov
loop
pop
jl
repnz
xor
push
insb
pop
mov
fbld
mov
push
andl
into
cltd
mov
lahf
stc
filds
jo
les
hlt
mov
iret
lods
jb
add
push
mov
hlt
pop
or
lea
scas
mov
adc
popf
cmp
dec
jb
xchg
dec
dec
cltd
ljmp
inc
xor
dec
push
insb
and
mov
dec
push
mov
mov
xchg
lret
jae
outsb
cmp
sbb
inc
or
jp
add
gs
xchg
imull
int3
pop
or
ror
jno
stos
sbb
movsb
add
xchg
movsb
mov
pushf
pop
push
push
pop
push
fs
jge
and
sub
xchg
mov
inc
xor
fst
stc
hlt
jmp
sahf
add
jne
in
mov
stos
jb
sub
jne
js
cmc
into
cld
sahf
jns
pop
pop
mov
cld
and
stos
out
add
sub
data16
ret
xchg
test
push
mov
add
jb
inc
dec
jecxz
cvtps2pi
pop
mov
cmp
call
aad
xor
cltd
mov
dec
fnstcw
test
or
std
push
sbbl
inc
jge
jno
in
in
push
pusha
cmpsb
aam
pop
cmp
push
dec
data16
push
lret
jne
jl
enter
or
aam
loopne
add
test
jbe
adc
aad
or
dec
adc
cvtdq2ps
push
sbb
sbb
inc
cmp
imul
fs
iret
sbb
mov
lret
sti
scas
lock
mov
shrl
addl
pop
sub
mov
ret
cmpsb
inc
mov
inc
rcl
loop
jmp
add
jmp
lea
sub
push
or
test
add
arpl
cmp
out
es
stos
inc
mov
mov
sub
or
push
bound
sbb
fsubr
xchg
outsl
dec
lret
and
sbb
sbb
cs
icebp
inc
push
jl
add
push
rcl
popl
fs
aam
lcall
cwtl
dec
inc
cmp
les
mov
and
lret
mov
fwait
jg
push
jne
stos
xor
cmp
leave
add
andb
xchg
frstor
jne
mov
pop
dec
cmp
or
cltd
test
sti
mov
mov
adc
dec
shrb
clc
in
mov
test
dec
imul
xchg
pop
cmp
ret
pop
cmp
cmp
fnstsw
mov
inc
jne
lidtl
stos
mov
push
das
pop
mov
sub
test
mov
jo
inc
in
fisubrs
js
out
nop
dec
scas
iret
mov
xchg
xchg
cld
mov
and
cmpsb
ja
fwait
divl
mov
clc
movsbl
pushf
jmp
addr16
xchg
xor
mov
movsl
or
adc
int
or
add
loope
mov
fidivrs
enter
xchg
mov
xor
mov
push
addr16
xchg
mov
pop
gs
jno
pop
andb
shlb
sbb
es
inc
xchg
xchg
add
fadd
pop
cmp
test
cmp
mov
mov
mov
rorb
in
xor
push
pop
aam
dec
in
jmp
push
jne
push
loop
fxch
inc
xor
inc
mulb
cltd
sar
or
push
inc
jae
adc
icebp
stos
push
sbb
rolb
add
jg
lock
ds
fldcw
sbb
push
xor
outsb
jae
add
push
xor
xor
jle
addr16
push
lods
adc
ret
int
sub
push
in
fs
xchg
cld
test
dec
mov
push
mov
cmp
lahf
out
xchg
aas
inc
sub
sbb
pop
mov
sbb
out
fcmovne
jge
mov
sti
mov
xchg
jecxz
cltd
sbb
and
cmpsb
mov
jge
mov
adc
push
sub
xor
fistps
jb
add
or
and
pop
adc
pushw
loope
je
loope
arpl
dec
and
jmp
sbbl
dec
out
mov
pop
or
fstl
pop
cld
out
dec
xchg
loop
in
dec
adc
mov
adc
mov
xchg
push
fidivrs
mov
sbb
cmp
add
adc
inc
testl
jb
dec
popa
ljmp
pushf
fmuls
lods
xor
push
arpl
mov
roll
arpl
lods
mov
aas
mov
mov
scas
aaa
outsl
cmc
sub
iret
inc
lret
sub
das
mov
or
hlt
sbb
inc
sti
in
repz
dec
aaa
je
and
imul
xchg
rcr
mov
dec
dec
pop
outsl
fdivs
jo
push
sbb
loop
aam
jl
xlat
adc
jae
vmwrite
inc
cld
adc
in
push
jg
push
mov
sti
mov
push
xor
push
scas
lock
cmp
testb
loope
add
nop
out
movlps
push
dec
xchg
lret
scas
jmpw
adc
cmp
pop
fsts
in
xchg
popa
or
repnz
pop
test
stos
cld
addb
int
rol
jge
dec
sub
stc
mov
dec
and
lea
lock
pop
sbb
outsl
add
out
jns
push
add
add
or
jge
jg
inc
int
rorb
push
out
mov
shr
pop
imul
cmpsl
popf
adc
xchg
pop
jo
pop
mov
inc
xor
cmp
jbe
jno
adc
and
orl
mov
push
iret
push
data16
arpl
lcall
mov
cmpsb
mov
pop
out
mov
repz
popf
pop
aas
fucomip
xor
loopne
mov
sbb
ret
pusha
je
arpl
push
subl
test
push
nop
fnsave
imul
mov
pcmpeqd
addb
sub
std
sbb
xchg
sti
xor
out
dec
pop
xchg
mov
jb
fimull
out
add
test
jbe
xchg
jnp
out
out
lods
outsl
test
or
aam
cmp
mov
loope
or
movsb
xor
cmp
pop
cld
dec
repz
push
jmp
enter
mov
test
push
mov
call
loopne
xor
out
mov
mov
jb
jg
test
pushf
or
jmp
imul
out
mov
mov
pushf
sbb
cwtl
std
add
loopne
jmp
sbb
push
into
lret
jo
push
dec
sub
movsl
dec
out
into
sub
lret
ret
cmp
cs
cld
push
lahf
daa
xchg
adc
sub
loope
std
pushf
jno
or
and
pop
jp
sbb
mov
sub
cmp
pop
movsb
dec
and
xchg
sub
jno
out
in
mov
daa
mov
xor
push
sub
dec
adc
jbe
repz
mov
popf
add
repz
mov
fwait
lock
push
mov
nop
test
push
push
pusha
clc
and
je
cltd
int3
cs
fstps
add
out
mov
inc
out
push
xchg
dec
add
xchg
add
push
fs
push
jmp
movsb
push
sarl
bound
nop
xchg
adc
mov
aaa
mov
repnz
adc
mov
xchg
movsb
push
xchg
cltd
push
add
or
sub
push
adc
das
je
montmul
cmpsb
push
insb
fistpl
repz
imul
cltd
jl
adc
lcall
movsb
mov
icebp
push
xchg
add
shlb
aad
xor
xor
ss
out
shlb
push
sbb
and
jl
pop
shrb
adc
fdivl
jmp
push
push
cli
loop
or
mov
arpl
or
in
mov
mov
jmp
or
lret
mov
sahf
fldcw
add
in
lods
gs
mov
xor
loope
inc
sbb
mov
repnz
daa
push
xchg
fimuls
sub
cmp
out
add
xor
inc
push
dec
test
lods
iret
aam
lods
mov
push
pop
jge
popf
inc
push
mov
fisubs
sbbl
and
ret
hlt
aaa
andb
addr16
xchg
adc
mov
mov
dec
or
mov
sbb
adc
pop
nop
jmp
mov
daa
inc
push
in
mov
arpl
jbe
sub
lahf
or
inc
int
xor
testl
dec
push
aad
add
scas
add
dec
cmp
out
mov
xchg
pop
xor
gs
div
aad
enter
jb
lock
inc
arpl
mov
and
xchg
psrlw
mov
leave
push
pusha
cmp
mov
ret
idiv
dec
pop
dec
mov
fwait
shlb
xchg
jbe
mov
outsb
jg
xor
push
xchg
cld
mov
sbb
dec
ja
xchg
lock
pop
and
call
mov
mov
xor
inc
adc
push
lods
repnz
add
cmp
cmp
mov
jbe
andb
pop
repz
add
mov
mov
xor
or
add
jg
test
stos
inc
add
lock
mov
out
ss
ljmp
or
xor
icebp
push
ljmp
mov
fbld
jb
and
hlt
leave
std
movsl
testl
rclb
pop
in
aaa
cs
cmp
jne
pop
addl
xchg
mov
or
lods
outsb
out
jmp
enter
adc
je
jmp
out
sub
or
xor
xchg
add
or
das
fsub
int
dec
jp
xorb
dec
ja
std
sub
dec
cmp
out
es
pop
and
jb
pop
nop
mov
adc
stos
xchg
loope
shlb
xor
sarb
mov
and
sbb
movsb
jne
pop
inc
cmp
and
insb
int3
xchg
dec
xchg
lea
jg
mov
dec
dec
mov
ljmp
fildl
loopne
stos
lret
aaa
fnsave
xchg
xchg
lcall
test
jp
dec
add
push
push
lcall
pop
insb
popf
arpl
pop
clc
dec
mov
xor
push
xchg
insb
mov
xchg
addr16
or
push
jo
cld
cmp
sub
lret
scas
je
test
mov
mov
push
stc
in
add
inc
incb
xor
call
inc
call
jb
cmpl
add
shll
xchg
orb
push
into
ficomps
jle
mov
outsb
cmp
lock
jno
mov
popa
outsl
jl
imul
idivl
call
mulb
call
loope
mov
jb
add
cld
test
pop
pop
sub
inc
je
add
sahf
or
mov
dec
sbb
insb
mov
mov
jecxz
inc
mov
nop
int3
jns
das
push
aam
inc
xor
aad
pop
lock
popf
jle
int3
into
push
mov
test
test
mov
fwait
mov
cmpsb
mov
rcrb
or
test
push
test
push
push
dec
cmpl
cs
ljmp
mov
clc
ss
adc
shll
lea
dec
jo
test
popf
push
sub
ret
aaa
mov
sbb
scas
hlt
mov
jle
push
push
ljmp
mov
or
mov
xchg
xor
adc
fadd
mov
push
imulb
push
pop
mov
loop
mov
or
cmpsb
inc
jbe
ss
jae
out
pushw
jnp
dec
iret
rolb
dec
dec
mov
arpl
ret
jmp
fdivl
in
sahf
aam
and
mov
sti
fwait
loopne
sahf
adc
jb
out
xchg
xor
cwtl
dec
push
or
lea
ds
scas
pop
loope
sub
sub
pusha
popa
pop
test
insl
inc
out
enter
pop
sbb
and
outsb
and
adc
imul
arpl
jne
cmpsl
into
cmp
test
es
imul
cs
push
popa
cmc
jecxz
and
nop
cld
xor
and
in
inc
sti
pop
sub
fbstp
cmp
mov
out
cli
add
and
and
jne
sub
orl
add
mov
xchg
mov
leave
adc
dec
sub
pop
ret
add
movsl
daa
adc
and
sti
shlb
push
mov
sbb
inc
aaa
rol
js
and
xchg
dec
mov
cmp
push
jo
cmpsb
mov
decl
test
lods
test
add
mov
int3
daa
sti
mov
xor
cli
sbb
bound
pop
xor
mov
cli
sub
jmp
das
call
fwait
push
dec
adc
outsl
xor
loopne
mov
lea
pop
dec
jnp
repnz
jb
inc
out
push
cmpl
push
push
ljmp
loop,pn
jae
jae
lret
dec
dec
fsubs
jecxz
loope
int3
adc
loop
sbb
xor
aas
mov
fidivl
shll
mov
mov
push
mov
lea
cmp
or
pop
fstpt
lea
fcmovnu
pop
or
ds
xlat
mov
and
and
into
pop
cmp
jne
outsl
nop
lahf
push
sub
dec
enter
lods
or
jp
mov
push
sahf
fwait
pop
sbb
jge
mov
mov
xchg
cmpsl
xor
fsubl
add
xchg
outsl
dec
scas
fildll
push
inc
les
xchg
cmp
push
sbb
xchg
clc
jmp
pop
adc
shlb
loop
repnz
push
imul
xchg
shll
mov
rol
jle
push
fcmovne
je
leave
xchg
mov
into
and
mov
mov
mov
mov
push
and
hlt
cmp
pop
mov
dec
lock
rcll
stc
clc
aad
push
jb
inc
sbb
push
xor
xor
mov
dec
stc
mov
shlb
push
dec
popf
mov
mov
push
loopne
fwait
rclb
push
adc
adcb
lcall
pop
push
arpl
xor
data16
mov
xchg
mov
insl
stos
fadd
sub
push
mov
inc
sahf
fldcw
data16
adc
cltd
jp
lret
jle
das
mov
sbbb
and
popa
hlt
inc
test
cmp
insb
add
ret
mul
rcr
mov
fdivl
movl
andb
or
xchg
mov
jnp
xchg
mov
mov
or
mov
or
cli
sbb
add
repz
repnz
ret
cmc
dec
mov
sahf
cs
push
inc
mov
jns
int
or
mov
lods
sti
cmp
xchg
shlb
or
jmp
xor
mov
push
jae
jno
adc
pushf
adc
sub
mul
pop
xor
push
adc
inc
adc
sub
mov
sbb
sub
movsl
test
out
call
enter
cmp
push
ret
nop
nop
movsb
sar
dec
jle
push
cmp
dec
js
es
lret
push
idivl
push
popa
pop
out
test
dec
xchg
pop
divb
pop
push
in
mov
lock
int3
repz
pop
mov
arpl
popf
arpl
and
jno
pop
mov
cs
je
xorb
sub
push
sub
push
push
pop
sub
push
out
das
jecxz
dec
ror
data16
mov
fistps
test
pop
dec
jmp
push
xor
repz
inc
add
hlt
sti
pop
xchg
aam
popa
je
mov
mov
xchg
das
sub
lret
insb
js
push
push
lods
jnp
xchg
sub
sbb
inc
insl
insl
mov
cmp
xor
pusha
outsl
dec
cmp
subb
ret
add
mov
xchg
dec
lods
or
pop
push
ret
cs
int
add
push
in
loope
xor
jmp
fstl
xor
imul
mov
lock
xchg
cld
jecxz
sti
pop
cmp
aad
dec
not
shr
pop
iret
inc
adc
paddw
pusha
aaa
xchg
sbb
ret
repnz
mov
xchg
adc
mov
jno
stos
push
jge
xor
adc
xor
jl
test
jg
aas
fwait
dec
mov
jo
cmp
mov
into
xchg
ret
add
sub
add
mov
mov
add
popf
leave
mov
jbe
in
and
enter
cmp
mov
adc
jl
sar
rcrl
push
mul
jp
and
dec
cmp
mov
sub
stos
cmp
add
fstpt
mov
xor
out
xchg
int
mov
mov
jg
pop
mov
lret
add
lcall
mov
push
adc
and
xchg
lods
jae
cmpl
adc
xor
repz
test
jl
and
lret
shrb
pop
out
jl
pop
inc
lcall
enter
adc
push
or
mov
mov
sti
xchg
dec
out
adc
xor
mov
xchg
mov
dec
or
mov
imul
mov
dec
cmovno
enter
push
fldt
inc
sbb
adc
cmp
pop
mov
inc
repnz
sub
ljmp
pop
pop
cld
mov
lcall
pop
sub
ljmp
stos
into
imul
movsb
out
add
add
pop
clc
dec
mov
or
push
movsb
xchg
jecxz
mov
sahf
std
ss
rcll
and
dec
xor
lret
dec
mov
xorl
mov
pop
xor
or
jo
aad
push
add
cmc
and
sbb
cltd
and
xchg
roll
jle
xor
adc
aam
jmp
imull
mov
leave
add
sub
les
xor
sbb
nop
xchg
pop
or
mov
imul
mov
and
add
clc
xor
jb
dec
pushf
add
inc
pop
cwtl
in
sub
imul
dec
rcll
cmp
scas
fwait
xlat
sbb
and
in
sub
aad
pop
cs
pushf
push
sbb
fidivl
push
lea
ljmp
je
outsl
fdivrl
push
lahf
mov
cli
out
aam
stos
fs
inc
stc
loopne
in
mov
add
mov
jo
mov
cltd
jnp
mov
pop
xchg
addr16
cs
inc
or
gs
fwait
dec
inc
mov
enter
sbb
sub
sbb
arpl
mov
notb
lret
test
sub
stos
insb
pop
insb
out
mov
leave
and
shlb
mov
mov
mov
or
out
je
mov
cmp
or
xor
iret
lret
adc
scas
ret
test
push
mov
sub
xchg
adc
cli
dec
xchg
or
out
fldl
aad
mov
les
jne
addb
push
mov
push
pop
cs
and
js
xor
jo
aam
movb
or
add
adc
inc
adc
xchg
jne
xor
pop
movsl
inc
shl
iret
add
sarb
pop
mov
cmp
dec
jp
cld
js
hlt
push
ljmp
cmpsl
jo
jae
push
hlt
add
add
fstp
mov
cmp
xor
sti
fs
repnz
inc
and
insb
loop
jmp
cmp
add
push
out
inc
lahf
icebp
test
push
inc
xchg
lret
out
lods
jp
dec
push
xchg
or
xchg
hlt
ljmp
sub
popa
dec
das
xlat
mov
shl
pop
stos
adc
mov
xchg
clc
out
and
sbb
pop
and
into
lods
dec
mov
fbstp
mov
out
jl
xor
mov
mov
mov
xor
jg
aaa
dec
sbb
jge
push
hlt
or
jmp
or
dec
pushf
lcall
pop
mov
repnz
and
xchg
imul
jmp
loope
sub
negb
adc
push
inc
inc
mov
jns
cmpsl
std
push
rcl
divl
sbb
sub
mov
mov
sub
xchg
int
push
mov
xor
push
cmpl
xor
xchg
loop
scas
fldcw
leave
xchg
cmp
push
xor
fdivs
jecxz
dec
inc
or
inc
dec
mov
in
push
jmp
add
ss
mov
ror
scas
cmp
out
stc
int
xchg
out
push
repz
pop
pop
inc
cmpsl
aaa
daa
imul
sub
out
subw
push
jge
sahf
add
hlt
or
cmp
je
out
stos
lods
fldl
add
inc
in
push
cld
pop
sarl
and
je
mov
xor
push
pop
jb
movsb
data16
dec
or
dec
xchg
sbb
jl
jl
sbb
xchg
cld
imull
lahf
mov
lcall
ja
sahf
xor
stos
and
xor
and
dec
pop
lods
aaa
xchg
lods
jno
pop
and
lahf
dec
xchg
insb
push
mov
mov
and
jbe
pop
addr16
xchg
inc
popa
mov
sbb
xchg
push
leave
lds
outsb
pop
or
icebp
xchg
loopne
lods
dec
cmp
mov
adc
mov
inc
fldenv
sahf
sahf
cmp
int
jo
out
icebp
aad
add
movsl
das
mov
fs
push
push
ja
sbb
fisubrs
mov
outsl
dec
mov
push
jb
push
jecxz
iret
adc
loope
pop
fstps
cmc
push
inc
mov
pop
jle
mov
pop
mov
cmp
out
sbb
dec
negb
inc
repnz
push
jbe
pop
mov
mov
out
cld
pop
aad
stos
xchg
mull
int3
pop
jl
lods
ret
stos
mov
lock
jg
test
pop
mov
or
inc
mov
into
push
push
sub
repnz
cli
pop
xchg
and
in
fisubrs
pop
push
push
mov
pop
mov
lock
sahf
sbb
sbb
xorl
jb
adc
in
iret
xchg
cmp
data16
bnd
movaps
adc
shll
mov
stc
or
sub
xor
xor
mov
mov
jg
hlt
jmp
sub
fucomp
mov
negl
inc
cmp
cmc
adc
mov
test
aas
add
pop
stc
and
mov
mov
jle
rcll
xchg
rorb
outsl
or
xchg
ret
jg
pop
or
mov
and
pop
jl
push
jno
adc
cmp
inc
fisubs
iret
cmp
leave
hlt
xchg
pop
mov
mov
adc
loope
dec
push
je
js
movsl
sbbb
popf
test
pop
xor
neg
cmp
mov
pop
mov
mov
add
sbb
fisubs
dec
enter
fcompl
iret
fucomip
push
rcrb
ljmp
sbb
loope
rorl
rcrl
push
dec
add
xor
mov
aaa
sbbl
cmp
dec
and
sbb
insb
imul
cmp
xor
and
pop
shl
fmull
ret
out
add
dec
or
aad
ret
xor
lea
and
inc
push
adc
jl
roll
add
xchg
push
xor
mov
cwtl
mov
xor
inc
les
popf
in
cmp
pop
daa
xchg
sbb
xchg
ret
scas
cld
jb
outsl
popf
jmp
xor
mov
add
or
mov
lahf
adc
mov
mov
xor
pusha
dec
lret
dec
pop
sbb
int
jmp
mov
adc
lock
test
sahf
cmpsb
add
dec
mov
cltd
aad
je
mov
inc
jmp
cmpsl
adc
lds
aam
mov
fcomps
jo
ja
adcb
outsb
add
ss
cld
xor
aam
or
jnp
inc
cld
push
adc
add
mov
test
dec
roll
dec
fidivs
popl
rcll
fcmovbe
xor
xchg
sti
imul
pop
dec
jl
or
jp
mov
cmp
mov
es
iret
scas
or
mov
loop
cmp
or
mov
push
jmp
mov
popa
inc
and
cs
in
int3
test
xchg
stos
jae
adc
dec
and
idivb
insl
sbb
ret
push
stos
jle
das
push
test
jo
pop
push
jmp
repz
lds
jmp
arpl
mov
movsl
lret
adc
imul
inc
lcall
jo
mov
testb
and
xchg
pop
das
mov
imull
cld
pusha
xchg
lods
inc
adc
popf
sub
jl
push
pop
cmpsl
and
mov
xor
and
mov
lcall
out
mov
push
sbb
mov
nop
divl
dec
push
and
les
daa
stos
pop
and
pop
fwait
cmp
mov
xchg
jae
sub
fstpl
push
or
xorl
pop
daa
out
in
shl
mov
movsl
paddw
adc
push
std
sbb
in
push
cmp
cs
pop
jle
and
inc
jo
fdivrl
or
ljmp
push
mov
rcr
iret
mov
add
inc
and
xor
dec
xor
popf
adc
mov
lea
cli
ljmp
push
fstpl
mov
dec
dec
popa
jo
test
cld
out
sub
movsl
and
clc
or
insl
inc
cmp
pop
jno
ret
mov
dec
or
adc
and
gs
das
push
mov
xchg
push
jo
mov
fistps
mov
mov
and
and
pop
mov
mov
out
add
push
in
jg
jnp
outsl
sti
cmp
fisttps
xor
xor
fidivl
push
test
insl
fiadds
movsb
imul
push
mov
sbbl
shlb
cmp
inc
mov
out
inc
dec
jne
icebp
test
nop
xor
push
enter
divl
cwtl
dec
popa
lret
cmpsb
mov
repz
mov
jno
xchg
mov
push
ja
push
sti
std
ljmp
pop
lret
jbe
loope
or
rep
add
mov
sbb
stc
sub
sbb
dec
inc
add
push
pop
mov
and
dec
subb
push
jo
mov
add
int
sarl
fnstenv
cmc
or
and
enter
int
adcl
fcoml
add
pop
sar
pop
fdivl
pop
and
movsb
stos
or
ljmp
popa
jne
cmp
sti
daa
cmp
cmpsl
sbb
jmp
aad
add
inc
xor
rcl
sbbl
fdivrl
dec
loopne
andl
dec
loope
inc
xorl
push
orl
iret
xchg
mov
push
js
pop
mov
or
mov
inc
push
sub
sub
pop
inc
fbstp
mov
jg
in
movsl
scas
jne
mov
pop
les
iret
out
movsb
mov
jg
rorb
pop
cmp
mov
push
mov
test
cld
fistps
sub
rolb
cli
push
bnd
mov
and
xchg
sti
fisubrs
clc
leave
mov
dec
and
in
cli
mov
mov
aas
lret
insb
xor
mov
jbe
outsl
sub
adc
sbb
mov
divb
aad
dec
incl
cmp
sub
out
dec
fcmovbe
cld
jmp
lds
cli
loop
leave
lret
sub
xchg
add
dec
xor
mov
cli
fistpll
xor
sub
mov
inc
add
xor
cld
cli
bound
paddusb
adc
outsb
dec
popf
and
or
les
mov
inc
nop
xor
xchg
stc
inc
add
push
mov
loop
bound
lock
sub
ja
rclb
stos
jp
cltd
or
mov
mov
mov
jmp
sbb
lods
sbb
pop
shlb
inc
gs
cli
xor
lods
lret
pop
repnz
pop
scas
mov
xchg
loope
fstpl
pop
lahf
cmp
dec
data16
or
jne
emms
js
inc
ljmp
add
xchg
fwait
lods
jmp
jbe
adc
repnz
and
xor
adc
mov
mov
xor
pop
loope
sub
mov
sub
add
es
push
js
imul
or
js
mov
xchg
jb
jnp
shl
xchg
popa
sub
cmp
gs
add
push
je
cld
dec
sahf
mov
sub
das
loope
mov
xlat
xchg
cltd
int3
pop
add
imul
out
pop
sbb
jecxz
mov
mov
adcb
jo
jnp
push
pop
imul
lock
daa
adc
dec
xor
into
mov
lea
sti
incb
cli
lahf
jae
out
sbb
add
icebp
outsb
rclb
mov
sbbl
inc
adc
scas
xlat
sarl
and
dec
inc
cwtl
test
stos
jg
in
jp
gs
fs
mov
js
add
push
fs
cmp
fs
scas
fdivs
jmp
push
stc
inc
orb
inc
sbb
add
js
outsb
test
dec
adc
mov
pop
in
xlat
jo
stos
jnp
push
inc
sbb
jl
and
jbe
sub
mov
and
lret
mov
es
adc
mov
je
les
cmpsl
xchg
and
mov
cmc
sub
jns
movsb
cmp
push
fisubl
and
cmpsl
in
mov
adc
popa
mov
pop
out
movsb
mov
sub
lods
sub
dec
add
and
cmc
in
xchg
cmp
push
ret
mov
xchg
inc
xchg
scas
jmp
test
pop
or
lcall
ret
mov
mov
push
ja
in
xchg
sub
pop
sbb
sub
jb
fnsave
pop
pop
fsubl
push
jmp
add
pop
stos
cmp
pop
je
iret
hlt
lret
sub
push
push
enter
fcmove
push
popf
xchg
aam
pop
inc
push
adcl
shlb
xchg
arpl
sub
outsb
push
adc
jno
or
sub
aam
push
movsb
xchg
addb
push
dec
lods
repz
dec
cmpb
mov
adc
shl
push
ss
ljmp
lds
adcb
icebp
leave
jg
xchg
xchg
shlb
lret
add
mov
insb
ljmp
out
in
cwtl
lock
dec
sti
adc
into
aad
cs
paddd
mov
data16
popf
shlb
pusha
cmp
pop
or
inc
jnp
pop
jnp
rcrb
dec
sbb
mov
cmpsb
in
test
push
aam
aas
div
ss
xchg
sbb
cmp
and
push
xor
fadds
dec
popl
cltd
fwait
lock
adc
sbb
in
iret
stos
mov
push
push
mov
in
jbe
xorl
cmp
push
outsl
fdivrp
loopne
pop
or
push
repnz
jne
lcall
insl
scas
int
mov
and
xchg
xor
mov
cmp
ds
test
clc
jg
daa
cmp
shr
das
push
jmp
aaa
adc
popa
cmp
les
int
xor
xchg
jae
xor
daa
loop
and
pop
push
lret
imul
enter
insb
adc
mov
sbb
addb
repz
gs
mov
xchg
jnp
ss
add
in
mov
daa
inc
sub
sti
jmp
mov
popf
push
in
mov
in
xor
mov
mov
cs
push
dec
dec
xor
cmc
popa
push
lcall
rcr
mov
jbe
pop
sbb
pop
popl
out
psraw
mov
mov
sub
mov
pop
sub
pop
xor
fiaddl
mov
aas
in
xchg
rorb
jo
imul
aas
sub
dec
cwtl
xorl
mulb
icebp
loopne
pop
hlt
sub
lret
movsl
cmp
or
mov
jno
pop
fnstcw
jl
mov
sub
bound
loope
and
mov
xchg
push
call
mov
sbb
std
je
mov
int3
movsl
sbb
fwait
movsb
pop
dec
out
stc
testl
and
loop
or
lahf
jbe
ss
jo
icebp
hlt
mov
in
out
push
ja
sub
push
adc
lods
scas
fs
scas
push
sub
add
pop
jb
cld
sbb
jle
in
fimull
out
lret
loope
cmp
aam
adcb
adc
ljmp
clc
dec
movsb
repz
jae
or
sbb
jae
lcall
mov
mov
and
icebp
mov
lock
mov
bound
das
inc
ret
and
test
xor
lock
xor
inc
cltd
das
loopne
nop
fs
jecxz
das
daa
es
dec
test
jo
pushl
sbb
adc
and
mov
minps
add
loopne
gs
mov
shll
lret
jle
je
xor
jl
pop
subl
pop
scas
lock
vrcpps
jb
xor
in
lea
lret
pop
aaa
push
lahf
insl
push
push
push
aaa
pop
and
pop
cmp
movsl
outsl
out
sub
jmp
rcll
ret
inc
sbb
insb
bound
shrb
cmp
dec
cmpsb
adc
orl
adcb
pop
sbb
call
fidivl
rcll
lcall
mov
jae
inc
mov
enter
fisubs
sub
dec
fbld
xor
movntq
jns
adc
imul
ret
mov
jbe
sbb
out
jnp
shlb
stos
ret
aad
in
pop
fwait
xor
xor
fisubrl
das
cmp
jb
cmp
shr
inc
cltd
xchg
sbb
sahf
lds
lret
xor
outsb
mov
cmp
push
jns
mov
std
pop
xchg
or
adc
sub
cmp
or
lods
jnp
cwtl
xor
insl
lcall
jns
dec
sbb
iret
mov
and
and
int
scas
movsl
mov
xor
cmpsl
and
push
pop
movsl
lahf
mov
push
mov
push
add
lret
dec
ss
pop
fnstenv
out
aas
lret
pop
sbb
jecxz
test
pop
hlt
xor
and
repz
ret
ficomps
xor
mov
mov
cli
xchg
into
jmp
jb
push
dec
popf
insb
jl
fistps
popf
push
ret
add
push
xor
adc
mov
and
push
test
stos
leave
test
jo
sar
cmp
sub
in
lods
dec
adc
pop
xchg
mov
lock
cmp
dec
outsl
mov
mov
pop
push
add
and
jmp
scas
ds
movsb
dec
and
and
push
clc
fisubs
js
push
mov
pop
sbb
xor
icebp
aam
js
icebp
call
push
aaa
xchg
adc
mov
fcmovu
inc
pop
push
in
pop
xchg
inc
xor
repnz
jge
push
lret
aas
dec
in
xchg
repz
cwtl
outsl
ja
and
sub
adc
cli
stc
das
jmp
xor
mov
imul
fsubrs
ret
pop
test
jns
hlt
daa
inc
jmp
jge
dec
mov
jb
imul
push
lret
shlb
adc
stos
ds
sub
aaa
xor
mov
int3
dec
arpl
push
pop
cli
out
fstpl
rdpmc
ficomps
aas
repz
dec
cmpsb
lret
pop
or
stos
xchg
fists
push
jmp
lcall
and
iret
loopne
mov
dec
outsl
pop
cmpsb
ret
lahf
dec
mov
lods
fcmovu
loop
pop
inc
pusha
xor
andl
mov
sbb
ss
adc
fnsave
or
popf
ss
rolb
push
fisubrs
fsubrl
aaa
das
jae
je
and
push
ds
test
xchg
dec
mov
xor
testl
dec
pusha
outsl
push
inc
xor
xchg
es
mov
mov
push
in
xor
je
cmp
and
push
in
outsl
ds
pusha
mov
cmp
cltd
mov
addb
lret
push
adc
push
rcrl
and
mov
xchg
out
sbb
inc
cwtl
xor
dec
fistps
inc
fbld
mov
pop
pop
and
jp
lret
xchg
popa
repnz
sbb
leave
popa
add
rcrb
lret
sar
ret
lea
or
incb
cmpsl
mov
adc
lcall
jle
push
or
mov
jns
pushf
sub
mov
inc
insl
jp
imul
mov
xchg
call
pop
or
out
cwtl
cmp
es
lahf
cmp
add
mov
repz
push
ret
or
cmp
movsb
leave
sbb
mov
enter
icebp
add
jnp
push
or
lock
mov
out
cltd
pop
inc
add
jns
cli
cmc
mov
mov
js
popa
jno
xor
xor
dec
test
cmp
rcll
xor
fdivrl
jmp
cwtl
outsl
xchg
fisttpl
mov
mov
scas
shl
push
loop
adc
shlb
mov
std
popl
adc
orb
clc
mov
push
or
repz
movsb
lods
adc
sbb
push
xchg
xbegin
push
push
sub
dec
jae
sub
out
inc
shlb
sub
in
xchg
out
sub
mov
dec
xchg
push
rol
push
outsb
mov
add
inc
sbb
fisubrs
mov
imull
cmc
fs
aas
popa
fadds
cmc
jno
sbb
add
mov
lods
aas
fbld
shlb
adc
cmp
lret
movsb
scas
loope
push
lock
gs
aas
xchg
hlt
xor
and
mov
pop
jno
pop
in
fmulp
sarb
mov
out
sub
and
mov
jecxz
and
repz
shll
ret
cmp
out
call
enter
not
mov
jge
xor
orl
mov
std
push
push
push
jno
sahf
adc
andb
setne
sub
adc
fwait
mov
imul
fdivr
xchg
sub
ds
jnp
sti
test
sub
fmulp
push
pushf
iret
mov
pop
mov
ja
sarl
dec
mov
aad
movsb
in
pusha
jo
sbb
or
int3
pop
mov
fisubl
roll
test
lds
das
pop
cmp
outsl
adc
jb
inc
andb
inc
inc
jbe
gs
out
sbb
loope
adc
data16
ljmp
fcomi
push
leave
push
mov
in
sub
imul
mov
imul
jmp
adc
and
pop
ret
cltd
mov
pop
mov
sti
dec
sbb
pusha
push
fstpt
iret
pop
jne
out
push
mov
rcrb
int
aam
stos
add
fbld
ret
inc
push
add
mov
sahf
dec
cmp
daa
testb
or
push
jo
negb
cmp
push
loope
stos
jno
loop
popa
push
rol
mov
sbb
fsubr
pop
std
sahf
cmovp
outsb
xlat
clc
jo
push
xor
mov
mov
repz
test
xor
sbb
xchg
jmp
add
and
or
lds
popa
out
scas
jne
push
stos
push
aad
inc
scas
ljmp
rcl
icebp
test
jge
adc
pop
test
mov
pop
rcll
or
add
jl
pusha
scas
ret
push
lcall
mov
rolb
pop
adc
orl
lea
dec
enter
movd
xor
jp
adc
push
mov
ror
mov
sub
rcrb
inc
movq
dec
subb
in
mov
popa
dec
adc
ja
add
sub
push
pop
adc
sbb
xor
dec
aas
mov
leave
mov
cmp
sbb
lcall
pop
into
pop
push
into
or
pop
vcvtpd2dqx
add
xchg
inc
out
cmp
lahf
cmp
in
decl
mov
xchg
aas
rcrl
xor
mov
nop
jmp
loope
add
xlat
pop
jecxz
lret
movb
jecxz
cmp
jno
loopne
inc
pop
mov
cmp
mov
movb
loope
rclb
insl
and
mov
repnz
insb
cld
sub
mov
stos
adc
repnz
mov
sub
add
test
add
dec
ja
mov
popa
hlt
sahf
loopne
jg
rcrb
push
pop
mov
fmul
xchg
push
shl
in
dec
test
dec
dec
jno
repnz
lea
add
out
fwait
inc
or
jg
pop
push
fwait
cmp
sub
repnz
sahf
pop
cmpl
add
pop
sub
bnd
addb
add
mov
rclb
push
dec
xchg
sub
xlat
jae
and
pop
mov
mov
jle
aad
sbb
adc
rcl
test
out
arpl
add
xchg
fiaddl
aad
cmp
out
pop
fmuls
push
and
jnp
jmp
outsl
scas
jns
into
dec
movsb
pop
aaa
sub
fnsave
insl
cmp
adc
popa
shl
mov
test
popa
clc
or
xchg
pushf
ror
xchg
nop
fdivs
out
jle
pusha
pop
and
cmp
or
icebp
mov
pop
popa
push
cmp
dec
sbb
adcb
sbb
movl
out
and
mov
mov
testb
cltd
sbb
sbb
popf
mov
clc
pop
pop
and
cmp
push
pop
mov
pop
or
loope
lahf
imul
imul
push
lret
or
mov
stc
sub
pop
adc
jp
jns
cmp
xchg
cmpb
je
shll
cltd
inc
popf
mov
mov
in
rorl
xchg
adc
cltd
cmpb
or
sahf
cmpsb
fwait
lahf
iret
lret
movsb
dec
cs
enter
cmp
mov
push
mov
jl
lret
test
loopne
lods
aaa
test
loope
pop
lcall
mov
adc
lret
iret
mov
push
imul
adc
sbb
xchg
pop
mov
lea
xchg
into
add
out
js
cmp
fs
jae
mov
add
popl
pop
sbb
mov
pusha
out
mov
push
cmp
insl
aad
and
ficompl
iret
incb
mov
mov
and
jp
sub
mov
stos
dec
mov
idivl
pop
test
jbe
lea
add
and
pop
aas
jb
adc
xor
sbb
xchg
mov
mov
nop
bound
push
mov
test
repz
jnp
aaa
lahf
lods
mov
fwait
sub
in
idiv
out
dec
xor
lea
dec
jle
rcrb
arpl
add
sub
pop
mov
adc
pushf
lds
dec
xchg
shlb
clc
sti
push
insb
rol
leave
or
sub
and
push
test
xchg
fstpt
push
and
mov
adc
jae
stc
add
add
sbb
cli
loope
mov
data16
cmp
sbb
clc
hlt
aaa
fadd
pop
pop
sub
insb
fdivr
xchg
sub
loopne
sub
mov
nop
inc
xor
ja
mov
sahf
and
jne
cmp
cmpb
mov
jns
pusha
dec
ret
push
stos
movsb
xchg
nop
insb
mov
pop
inc
loop
push
aam
pop
pop
jg
or
dec
decb
mov
xlat
mov
mov
test
fdivrl
into
mov
ret
es
add
notb
or
aad
out
mov
sub
mov
je
and
fisubl
xchg
inc
jge
inc
cs
nop
cmpsb
fwait
jne
imul
sub
push
xor
mov
pop
outsl
ss
cmp
push
dec
jp
aas
je
xchg
divb
fidivrl
inc
pop
mov
hlt
inc
test
addr16
inc
jb
jl
lock
mov
push
scas
incb
ret
insb
out
mov
sbbl
fmull
std
xor
call
and
jg
es
gs
sbb
jmp
xor
or
pop
lcall
jb
lods
jae
push
lahf
or
dec
add
andl
adc
data16
cld
add
mov
fcoms
fistl
mov
aaa
mov
push
xor
push
lcall
xchg
adc
daa
mov
int
pop
jne
sub
cmc
cmp
mov
push
add
push
les
or
outsl
call
add
pop
pop
pop
dec
sbb
dec
ja
jnp
xorb
lods
js
cwtl
lds
andl
jl
aad
adc
out
shll
fstps
add
mov
fildl
mov
dec
mov
test
sbb
mov
push
add
xor
je
xlat
fdiv
jge
je
adc
and
scas
mov
sbb
sub
pop
xor
mov
daa
int3
pop
mov
gs
hlt
dec
xchg
push
repz
or
fcoml
les
xchg
adc
sub
push
mov
sub
fs
andl
mov
xlat
xor
pop
out
cmpl
pop
mov
jmp
cmpl
jno
aas
testl
imul
and
test
ss
dec
sbb
mov
gs
arpl
xor
adc
push
stos
fildl
jo
jbe
cmp
or
mov
movsb
lea
dec
pop
stc
pop
in
add
repnz
lea
or
lods
pop
push
out
add
mov
and
ja
xor
and
ds
es
cs
fistl
jbe
in
lahf
xlat
add
pop
sbb
mov
lea
adc
xchg
imul
push
xchg
sar
sahf
lea
push
gs
xchg
test
test
iret
push
stc
or
mov
mov
mov
inc
ds
jns
rcll
testb
popa
pop
into
jns
xor
pop
pop
pop
pop
lock
adc
sub
sbb
cli
outsl
outsb
fldenv
cmp
out
xchg
pop
sbb
shll
test
inc
and
mov
add
fwait
jmp
or
in
pop
xor
fwait
arpl
jno
insb
sbbb
lock
andb
aam
test
movsl
xchg
inc
cld
scas
cmp
jmp
shll
sub
sub
and
pop
fincstp
scas
pop
outsb
shrb
in
add
adc
dec
xor
mov
jo
out
xchg
sbb
scas
leave
pop
incb
jae
adc
adc
and
and
ret
sub
scas
pop
movsl
les
cmpsb
mov
jne
adc
lock
fimuls
mov
ss
pushf
mov
mov
out
fidivrl
and
xor
mov
int3
scas
inc
adc
push
adc
jge
aaa
daa
rclb
cmp
decl
sub
xchg
aad
aaa
add
and
jno
fimull
loop
mov
sub
dec
gs
insb
or
dec
push
pop
lods
stc
pop
cwtl
mov
insb
push
enter
add
jbe
xchg
out
dec
dec
movsb
andb
inc
pushf
hlt
fmul
adc
adc
ret
jl
xchg
stos
loopne
cli
xlat
sub
adc
jge
xor
mov
stc
loope
inc
mov
imul
add
in
out
jnp
mov
cli
jns
pop
sbb
rclb
popa
cmp
push
arpl
mov
xchg
sub
mov
pop
xchg
imul
in
dec
std
or
fwait
dec
sbb
idivb
inc
icebp
dec
arpl
addr16
xchg
mov
cmpsb
mov
jnp
lret
inc
mov
sbb
xchg
xor
pop
push
push
mov
sbb
cld
mov
test
jmp
lods
aaa
mov
cltd
mov
jae
iret
sbbl
jb
jg
mov
jns
inc
lods
adc
ss
mov
mov
lods
xchg
xor
dec
aam
je
ror
lcallw
mov
imul
xor
test
imul
push
dec
sbb
repz
add
movsl
cmpsb
icebp
inc
mov
iret
mov
lahf
push
ret
das
shrb
jno
mov
shlb
nop
dec
inc
leave
cmp
loop
aam
sub
cld
xchg
mov
add
ret
pop
push
jo
pop
test
sub
lcall
repz
mov
sub
adc
dec
push
ljmp
xchg
dec
push
gs
push
mov
or
aas
mov
inc
sbb
add
and
jae
sti
les
jns
jne
mov
xor
mov
sbb
in
je
cld
imulb
imul
aas
cld
insl
jnp
pop
cmc
mov
cmpsl
jo
and
dec
pop
xchg
mov
vpshuflw
jae
movsb
out
fwait
sub
dec
popf
aam
mov
xchg
sub
sub
mov
das
adc
cmpsb
scas
test
jbe
int
leave
xorb
lret
setb
cmp
push
mov
mov
add
jne
push
adc
or
fcomps
xor
nop
je
jmp
ljmp
pusha
jge
inc
repnz
or
sub
mov
movsl
test
out
inc
ret
ss
jge
or
loop
jo
popa
rorb
fildll
ret
out
in
sbb
mov
push
shrb
and
push
jmp
mov
cs
push
clc
addb
pop
pop
jb
out
add
mov
dec
imul
fcmovnbe
pop
into
ret
shl
mov
inc
fcom
mov
xchg
fs
mov
test
inc
das
inc
adc
pusha
in
pop
or
ja
mov
idivb
and
test
repnz
inc
push
jbe
xchg
dec
inc
inc
fs
aaa
fs
add
pop
push
mov
pop
mov
in
inc
ds
outsb
int
into
sbb
xchg
push
fdivrp
movsb
mov
addr16
xor
loop
and
mull
arpl
imul
insl
cwtl
ja
cld
mov
or
push
into
mov
mov
fucomi
push
jno
sbbb
mov
lret
lret
jl
lods
repz
xor
mov
jb
ja
in
aaa
mov
dec
fidivs
out
int
mov
jg,pn
fdivl
icebp
sub
mov
push
and
aam
lds
lods
mov
dec
fwait
hlt
mov
cld
push
stos
repz
mov
test
and
xor
movsb
inc
push
jle
in
rcll
and
push
dec
add
jo
js
movsb
leave
pop
shrb
nop
or
inc
adc
movsl
dec
inc
mov
cltd
aam
dec
adc
movsb
xchg
ret
sbb
sub
mov
dec
mov
jnp
cmp
cmp
insl
push
arpl
or
dec
aas
and
movsb
negl
xor
iret
push
scas
lods
cmp
nop
or
sub
fistpll
movsl
mov
cmpb
movsl
xor
pop
inc
repnz
loop
lea
dec
xchg
iret
movsl
scas
ficoml
sub
xor
mov
popa
pop
sbb
mov
push
insb
jle
inc
hlt
pop
imul
sti
lcall
mov
out
adc
push
and
push
jo
iret
add
mov
fdivp
idiv
pop
xor
ja
mov
sub
push
insl
nop
mov
pop
or
add
inc
jae
xor
lret
sahf
lahf
sub
mov
fsubrp
inc
test
fwait
pop
imul
add
mov
popa
lea
movsb
or
bnd
fneni(8087
push
iret
jne
ret
xchg
out
gs
pop
xor
out
or
inc
sti
jbe
pushf
jl
testl
mov
and
sub
ds
test
xor
sbb
mov
in
std
mov
pop
push
mov
sbb
cmp
adc
clc
sbb
pop
jp,pn
leave
lds
in
je
mov
ljmp
push
mov
inc
sbb
push
iret
fs
sbb
add
mov
sub
jnp
fmuls
lock
loopne
ja
dec
inc
cmpsb
repnz
insb
cmpsl
popf
push
mov
clc
or
xor
mov
dec
mov
adcl
mov
push
fnstenv
and
dec
push
dec
jno
aas
out
btc
add
adc
insl
cwtl
stos
push
test
sbb
lds
cmc
pop
xchg
js
adc
nopl
inc
das
ds
std
jno
push
sub
stc
mov
sub
popf
fstl
adc
lock
pop
sbb
dec
pop
fcmovbe
popa
inc
lret
xchg
int
push
in
mov
pop
sbb
jl
pop
xor
pop
mov
xor
repnz
pushf
incb
ret
dec
mov
xchg
jmp
xchg
rcll
divb
inc
lea
jle
or
mov
dec
cmp
jo
xchg
sbb
leave
sbb
in
push
add
filds
adc
cltd
xor
adc
pop
dec
mov
mov
mov
jecxz
mov
pop
test
ds
sbb
aaa
xchg
pushf
int3
push
sub
inc
mov
adc
outsb
jg
push
xchg
dec
repnz
jmp
xor
bound
or
push
jne
sub
mov
inc
sti
cmp
and
inc
call
pop
cmp
adc
rcrb
pop
xchg
jecxz
sub
ja
xorb
out
mov
xchg
jl
lret
pop
jmp
aas
clc
cmp
xchg
incl
aaa
xchg
sub
dec
sbb
enter
adc
lahf
push
stc
push
in
mov
fnstenv
mov
jp
icebp
dec
jp
ds
adc
dec
enter
jne
loope
call
movl
jmp
jb
bound
add
into
fildl
in
xor
mov
test
jecxz
adc
xor
mov
mov
fmuls
push
cld
cltd
cmp
mov
inc
inc
daa
pop
mov
stc
out
ss
rorl
data16
inc
leave
insb
xchg
jo
leave
test
xor
cld
pop
popf
push
dec
adc
pop
roll
or
inc
call
aad
sbb
loop
dec
mov
enter
adc
xchg
loope
loope
dec
shr
adc
jbe
dec
test
sbb
push
repnz
pop
ror
andb
inc
mov
dec
add
ret
push
sti
push
xchg
xchg
inc
add
adc
clc
jnp
movsl
cmp
mov
aaa
and
inc
decb
or
cwtl
adcl
adc
xchg
daa
jae
lcall
push
pop
testl
sbb
pop
scas
imul
fistl
sbb
loope
cmpsl
std
xor
enter
sbb
sub
sbb
sub
xchg
stos
sahf
rcr
outsl
push
lcall
out
scas
pop
test
out
and
fs
jb
mov
mov
aaa
lods
cmp
mov
mov
bound
ja
or
inc
lock
aam
addr16
pop
fmuls
sarb
ret
jmp
stos
cmp
push
hlt
aaa
fs
xchg
lret
cwtl
cld
outsl
adc
inc
xorb
push
adc
pop
jecxz
lret
cli
fmuls
mov
lea
jae
mov
pop
jp
ja
aam
cmp
mov
loope
xchg
ljmp
adc
into
mov
popf
bound
out
popa
and
dec
mov
lods
push
fsubs
daa
push
push
rcl
xchg
pop
cmpsl
xor
jne
in
inc
sbb
leave
pop
jne
jge
cmpsb
lret
std
add
and
dec
sbb
jne
jb
sbb
cli
add
mov
in
cmp
icebp
jnp
sub
data16
mov
xchg
adc
jbe
mov
icebp
xchg
insb
cmp
sbb
ret
imul
lods
pop
or
xchg
push
dec
jb
push
ja
aaa
mov
dec
push
mov
mov
push
loop
sub
insb
hlt
or
out
stc
adc
mov
aaa
cld
nop
jge
mov
push
test
dec
test
nop
int3
call
test
or
add
aaa
mov
xchg
push
scas
or
scas
push
fwait
push
mov
mov
nop
icebp
and
das
adc
pop
in
push
sarb
sub
xchg
gs
aam
dec
pop
adc
inc
sahf
and
and
xchg
or
icebp
in
mov
mov
and
jmp
cmp
adc
or
push
call
sarb
push
push
mov
repz
jecxz
lds
jmp
xchg
xor
adc
push
incb
xchg
pop
dec
in
pop
mov
mov
sub
cmp
insb
jb
sub
jb
and
movb
sub
vpsraw
aas
xor
ds
aam
push
dec
js
and
les
mov
mov
out
mov
mov
cld
out
out
and
cs
xchg
jl
and
push
mov
ret
mov
sbb
outsb
jp
dec
es
mov
jns
ja
andb
adc
adc
in
jmp
jg
mov
inc
jle
and
lcall
jecxz
mov
xlat
ret
sbb
mov
int3
xor
test
cmp
fst
test
xor
data16
aad
xor
test
dec
sti
or
cmp
cmp
inc
jbe
mov
dec
repz
xchg
xchg
imul
push
sub
jae
stc
ret
enter
sub
push
repnz
lea
fwait
leave
push
pop
push
xchg
out
je
lods
xchg
pop
ljmp
jae
pop
fldl
add
movsb
loopne
sbb
popf
adc
test
repnz
cmp
ret
sbb
fstl
das
pop
jns
nop
faddp
cmp
xor
cli
popa
inc
movb
adc
mov
mov
shlb
mov
fldt
mov
shlb
enter
clc
filds
pushf
aaa
pop
jb
cmp
xor
adc
sub
test
leave
inc
adc
and
sahf
scas
xchg
rorb
xor
ja
mov
das
mov
add
xor
sarl
jle
pop
xchg
and
xlat
into
subl
add
adc
add
and
lahf
lods
unpcklps
add
lods
jl
iret
clc
arpl
add
jmp
add
sbb
or
fsubl
inc
mov
enter
adc
rcr
add
filds
aad
rcl
pop
push
fistl
or
or
sbb
xchg
jno
xchg
mov
out
push
xchg
pop
mov
js
popf
nop
cmpsb
jmp
in
adc
int3
pusha
jle
inc
shll
subb
orl
rorb
rcll
lds
mov
mov
pushf
aas
pop
dec
inc
xchg
sub
cmc
fnstcw
mov
xchg
das
test
and
mov
xor
adc
cmp
imul
xor
pop
data16
call
or
fldl
imul
pop
inc
aad
sahf
fucomip
mov
mul
js
fadd
jns
nop
jg
push
fsts
or
cmpsl
push
jl
mov
xor
out
mov
pop
jbe
data16
scas
jge
movsl
and
nop
sar
inc
mov
xor
pop
out
andl
outsb
mov
mov
icebp
pop
sbb
lcall
pop
mov
fistps
out
orl
call
stos
lock
sahf
or
mov
xor
or
int3
pop
pop
mov
lahf
adc
pop
ja
mov
shll
pushf
movsb
xlat
push
mov
in
or
and
inc
inc
scas
push
lcall
and
fcompl
int3
xor
push
xchg
push
cmovo
jnp
out
mov
mov
xchg
jns
pusha
xchg
arpl
mov
icebp
inc
sbb
sbb
add
mov
dec
mov
int
or
pushl
inc
rcrb
ret
mov
dec
cmpsl
cwtl
inc
xor
lea
dec
lea
add
gs
mov
sbb
shlb
sbb
push
adc
ffreep
mov
push
pop
movsb
adc
mov
icebp
cwtl
ret
dec
cmp
sbb
rcrl
stos
push
nop
loop
fildl
add
clc
aam
adc
pop
or
int3
jo
in
or
sbb
insl
mov
aam
in
pop
inc
rcrb
mov
imul
cmpsl
int3
mov
or
test
mov
scas
add
jbe
arpl
jne
lds
sbb
fiaddl
lods
add
pop
xchg
jne
test
sbb
sbb
fsts
fcmovnu
fnstenv
lods
data16
xchg
inc
out
pop
jo
data16
pop
sarb
pop
gs
hlt
push
out
push
xor
push
stos
sbb
lret
lds
mov
mov
xor
jae
adc
mov
jmp
movsl
rep
jp
mov
popa
mov
in
repnz
inc
in
iret
mov
or
xchg
xlat
push
pop
and
outsl
shlb
xchg
in
inc
sahf
dec
cmc
mov
dec
xchg
addb
lock
mov
pop
jne
mov
and
mov
mov
xlat
push
insl
and
movsl
inc
mov
xorb
mov
jmp
int3
add
mov
mov
stos
sbb
mulb
mov
push
xor
fbstp
sub
xchg
push
adc
es
pop
mov
loop
pop
or
add
xchg
lea
pop
in
aas
imull
mov
jo
jae
movsl
stos
cmpsl
pop
pop
out
xor
sbb
mov
movsl
dec
cmp
mov
cmp
xchg
jbe
test
outsl
jns
jae
or
out
test
xchg
popa
push
das
roll
push
rorl
movb
xchg
dec
test
das
adc
popa
mov
stos
pusha
ds
lret
lcall
cmp
pop
loop
push
mov
add
dec
aad
sub
adc
push
or
leave
sbb
fimull
jmp
sub
dec
cld
add
dec
mov
fisubl
iret
nop
dec
lret
fstps
dec
mov
fs
xor
add
ljmp
mov
sub
ret
enter
cwtl
lea
mov
or
and
jge
loope
into
jmp
jl
imul
scas
les
jmp
hlt
mov
popa
and
xor
push
lds
push
cld
out
cmp
add
mov
xchg
testl
jg
inc
aas
cltd
add
xor
out
mov
jae
pop
test
pop
jae
jns
js
dec
push
mov
jbe
ret
shlb
xchg
inc
iret
dec
xchg
iret
repnz
out
jmp
outsl
or
sti
stos
push
test
pop
add
push
hlt
adc
into
int
xor
fisubrl
cmpsb
lods
test
pop
jmp
loopne
jecxz
and
int3
in
pop
shl
cltd
insl
ja
pop
movsl
sbb
sbb
clc
int3
xor
mov
divb
ror
push
ficoms
and
insb
pop
sbb
jp
sbb
test
pushf
push
ja
insb
jo
cmpsl
mov
aam
repz
xlat
sub
dec
sahf
lock
shll
sti
ret
outsb
repz
jb
outsb
data16
cmp
addr16
loope
mov
sti
repz
clc
shl
out
sbb
push
rcll
mov
xchg
and
sbb
mov
sbb
mov
sti
sbb
sahf
bound
roll
mov
sbb
jae
or
cmpsb
popa
mov
ds
inc
out
pushf
jns
lods
jmp
aam
sub
and
aaa
adc
inc
push
dec
and
pop
popa
mov
sub
xor
shl
fs
pop
gs
mov
sbb
and
jbe
mov
imul
scas
hlt
test
sub
pop
mov
push
mov
dec
sub
mov
sbb
jo
lods
cltd
push
cmp
dec
out
dec
pushf
aam
rol
or
or
adc
push
pop
sub
lds
repnz
add
dec
sbb
aad
xchg
ror
imul
shll
dec
les
jle
popa
or
xchg
or
add
sub
nop
xchg
push
out
inc
xor
call
inc
call
add
aas
das
shll
cmp
cvtpi2ps
ss
sub
mov
sub
jle
not
jg
leave
xchg
lret
inc
push
mov
dec
js
mov
cmp
cmpsl
aad
cmpsl
cli
into
test
fisttpl
sbb
fucom
push
popa
test
gs
int3
push
rolb
jno
and
push
xchg
shlb
shrl
mov
dec
mov
cmc
cs
nop
jnp
loopne
cmpsl
test
or
addl
repz
xchg
xchg
push
cmc
add
xchg
adc
or
xor
dec
inc
xchg
pop
into
mov
fcomip
data16
je
mov
fwait
and
dec
mov
pop
mov
cmp
popf
mov
fildll
test
cmp
leave
std
test
inc
popf
inc
mov
clc
push
cmpsl
hlt
jl
test
mov
cmc
imul
cli
in
mov
aaa
push
sbb
jle
mov
aas
jg
mov
and
orb
sbb
lods
sub
dec
or
push
std
xchg
test
pop
jl
push
sahf
outsb
out
mov
mov
int3
sub
sbbb
and
sub
shl
rolb
add
std
aam
dec
sbb
in
daa
test
std
dec
adc
xor
inc
insl
popf
jmp
push
ljmp
das
lret
daa
test
mov
sbbb
stos
or
pop
cs
dec
push
fisttpll
cmpsl
jns
sbb
inc
inc
inc
sub
insl
add
je
lds
jge
push
jne
movaps
add
push
cmpsb
push
jb
enter
mov
pop
mov
pop
inc
out
cmp
mov
out
imul
shrl
jo
add
cmpsl
xchg
enter
ret
pop
mov
jl
je
mov
sub
inc
mov
sbb
push
inc
testb
aas
cmp
test
fistpl
mov
or
daa
je
mov
push
add
ficompl
fimull
pop
xor
mov
test
add
repz
jl
shl
jnp
push
cld
sub
pop
xchg
cwtl
rorb
mov
clc
in
jp
fisttps
lds
push
push
mov
pop
cmc
pop
arpl
mov
cmp
ret
push
xchg
mov
sub
movzbl
fsubrs
and
dec
outsb
and
sti
js
mov
xor
cmp
jo
repz
ficoms
fisttps
clts
cmc
dec
adc
pop
xchg
fistps
stos
cmp
push
sub
mov
out
pop
sub
adc
dec
push
mov
mov
lcall
popf
insb
sbb
jnp
sub
shrb
add
mov
xor
xchg
dec
nop
push
daa
jns
pop
test
add
loope
ret
outsb
mov
xor
test
add
jmp
adc
xor
dec
mov
insb
repz
jmp
test
pusha
repnz
insl
xlat
sbb
jp
lock
mov
in
cmc
out
sbb
sbb
cmp
xchg
mov
mov
repnz
clc
inc
scas
lret
call
test
and
or
jecxz
lods
sub
adc
lods
in
gs
pushf
divl
mov
rorb
pop
mov
ja
rcrb
out
fcomps
xchg
stos
sbbl
sbb
inc
test
sub
mov
mov
sti
lahf
sub
call
loop
adc
push
mov
lea
ret
insb
dec
sub
fstps
cmp
test
jns
jns
outsb
outsl
add
icebp
mov
ficomps
adc
xor
mov
or
ror
popa
outsl
and
push
andb
in
pusha
lret
jno
scas
sbb
dec
inc
mov
sbb
sbb
xchg
fisubrs
cmpl
stos
pusha
or
sub
push
mov
ret
inc
dec
dec
xchg
cld
xor
pop
pop
pop
pop
scas
pop
out
dec
lcall
inc
imul
in
sbb
jnp
sub
sbb
push
lods
mov
dec
icebp
jb
in
xor
push
add
movsb
sub
pushf
in
xor
mov
jb
or
fbld
inc
jg
stc
lret
xor
and
cmp
mov
jbe
pop
icebp
stos
cmpsb
xchg
insl
addb
mov
mov
mov
jle
sbb
cmp
outsl
add
jbe
or
mov
ret
xor
cmpsb
sbbb
and
incb
cmpb
or
in
jo
mov
sbbb
push
dec
jb
inc
out
in
add
in
shll
push
aad
cmc
xchg
test
inc
inc
test
mov
inc
sbb
mov
cmpsl
mov
fcmovnu
xlat
mov
sub
mov
adc
les
mov
out
les
js
sarl
mov
adc
jl
push
jl
sub
cmp
and
icebp
les
and
jb
and
mov
stc
stos
push
adc
inc
hlt
jae
and
cld
popa
adc
adc
scas
loope
orl
or
push
insb
aad
jg
scas
aaa
cmp
pop
xchg
flds
lods
repnz
ja
mov
aam
mov
bound
lcall
arpl
mov
or
push
mov
imulb
add
pushl
das
cmp
pop
sti
lock
scas
mov
mov
mov
pop
lds
sahf
fistl
cs
repnz
dec
mov
cmpb
mov
sarl
dec
in
jecxz
mov
push
out
fdivrs
fisubrs
dec
or
into
scas
mov
stos
adc
bnd
mov
add
lds
out
mov
jns
je
js
inc
push
out
xor
xchg
std
dec
adc
mov
aad
divb
add
push
in
adc
js
push
jge
sbb
sbb
into
ljmp
por
addb
aad
fisubl
sbb
xor
jns
iret
repnz
hlt
xchg
bound
flds
push
pop
call
push
jmp
jns
hlt
fcompl
adc
mov
outsb
cmpsl
fidivs
xor
notl
inc
gs
jecxz
rclb
xchg
sbbl
lods
dec
or
not
insl
sbb
add
ret
fisubl
enter
xchg
sub
jbe
imull
push
sub
scas
add
ljmp
push
dec
cmp
clc
mov
cs
mull
test
mov
sbb
fldenv
mov
lret
js
adc
or
lock
dec
mov
movsb
lds
mov
xchg
ficoms
jb
and
inc
mov
adc
inc
hlt
jne
test
out
push
ljmp
xor
fisubs
inc
xor
adc
and
jne
dec
clc
clc
loop
scas
adc
push
das
push
sub
test
and
push
xlat
insl
mov
cmp
pop
mov
popf
push
adcl
outsb
xchg
mov
and
mov
mov
scas
clc
mov
sub
insl
out
sbb
clc
dec
aad
jae
repz
movsl
cmp
shl
mov
das
and
popa
mov
mov
scas
jmp
cwtl
xchg
je
xchg
rol
and
push
sti
and
xchg
mov
push
mov
cli
push
outsb
cmpsb
sub
stc
inc
movsb
jg
mov
orl
into
loopne
cli
mov
das
aam
adc
add
mov
test
imul
out
nop
popf
jle
jmp
mov
or
xchg
sar
icebp
jnp
aam
cmpsl
pop
aas
push
cmp
jae
fldenv
add
hlt
in
jg
inc
test
cmc
push
pop
div
sub
mov
xor
enter
mov
repz
dec
jnp
into
fstpt
mov
scas
and
mov
ret
inc
andl
adc
orl
fcoms
icebp
roll
stc
clc
jg
push
push
cmp
mov
jecxz
pop
jmp
into
or
ret
push
adc
xlat
imul
pop
inc
das
xchg
out
jae
insb
push
out
pushf
mov
push
pop
subb
mov
sbb
add
in
push
ljmp
inc
mov
sbb
mov
js
into
movsl
sbb
cld
mov
adc
fwait
scas
add
sub
inc
dec
fimuls
jp
jnp
hlt
lods
aaa
out
adc
ja
mov
outsl
dec
ficomps
push
int
scas
push
xlat
loopne
cltd
push
int
test
mov
inc
loop
add
call
push
ds
pop
push
push
jecxz
mov
cmp
add
test
jns
in
or
xchg
das
mov
enter
cmp
imul
imul
mov
xor
mov
or
mov
ljmp
inc
adc
or
push
imulb
lcall
sbb
fcomps
cmp
mov
testb
aad
stos
js
sub
and
adc
or
loope
outsl
lret
repnz
leave
in
mov
jns
and
xor
cmpsb
ret
and
add
lret
decl
mov
lret
add
cs
verr
sarl
insb
fs
in
pop
ds
or
bound
mov
and
scas
fnsave
addr16
insb
pop
aas
movsb
adc
insb
clc
aam
mov
jae
mov
cmp
sbbb
scas
jbe
test
inc
fs
mov
mov
fisttps
arpl
and
cmpsb
inc
int3
jl
shll
mov
addr16
rcrb
mov
mov
je
vpcmpeqw
add
int
inc
mov
arpl
ret
ja
imul
and
inc
imulb
fiadds
add
cltd
pop
mov
imul
jge
xor
jo
jo
cltd
enter
sub
pushf
jecxz
adc
pop
xor
cltd
call
int
in
jae
out
pop
mov
imul
push
or
xor
push
loop
lahf
sbb
popa
sti
clc
jmp
clc
sub
sub
add
dec
sarl
cmp
xlat
int3
adc
es
mov
cltd
shll
inc
mov
inc
jne
lahf
dec
rcrb
sahf
add
pavgw
jae
xchg
sbb
imul
inc
cmc
pop
lods
mov
dec
inc
andb
lcall
int
sub
insb
nop
add
pop
sub
inc
fsubs
sti
inc
mov
dec
leave
and
push
sbb
xchg
jns
iret
xor
repz
test
fucom
fsubl
cmp
fsubrl
int3
cmp
inc
cmc
jno
jl
ja
fadd
add
fimull
mov
add
pop
in
cld
mov
push
ficomps
fstps
inc
popl
out
insl
fstpl
sbb
sbb
dec
in
mov
in
data16
and
outsb
jne
add
pop
lea
jbe
movsl
pop
loope
jb
or
inc
cmp
push
push
xor
or
inc
filds
cli
pop
push
or
mov
add
loope
test
jecxz
das
cmp
adc
dec
dec
sti
stos
push
adc
jmp
mov
and
jl
mov
pop
sbb
pop
testb
mov
and
xchg
mov
add
dec
or
lock
sbb
scas
daa
xchg
mov
stc
lret
jno
xor
lsl
mov
adcl
aas
out
leave
popf
pusha
mov
cmpsl
addl
add
mul
pop
in
adc
popf
xchg
insb
xchg
adc
outsb
inc
adc
fmul
dec
sub
lea
sub
addr16
inc
movsb
movsl
imul
xorl
mov
aas
cmp
mov
mov
lock
jge
cltd
lret
idiv
cmp
jge
mov
rcrb
cmpsb
add
sarb
sbbl
jno
mov
cmp
push
fistpll
adc
push
lds
jl
insl
addr16
pop
test
mov
push
lret
mov
js
test
add
mov
mov
push
fmuls
cmp
add
push
mov
push
inc
int3
fdivr
mov
les
dec
jb
jbe,pt
mov
outsl
leave
addr16
fwait
jae
pusha
pop
add
inc
cli
and
movsb
pop
xor
call
push
or
shrl
jle
cmp
mov
fnsave
stos
cli
sub
int3
jmp
sbb
lea
subl
ljmp
mov
test
lcall
cltd
repnz
popa
pusha
mov
stc
xchg
dec
addr16
jmp
xchg
pop
lods
mov
cmpsl
imul
outsb
mov
mov
sbb
arpl
pop
sub
xchg
aas
and
scas
xor
xlat
lcall
fistps
mov
push
xor
or
int
lcall
outsb
ret
pop
push
jle
jecxz
push
inc
jg
sarl
pop
mov
mov
jae
ret
ss
adc
mov
push
sbb
lea
outsl
push
mov
sbb
mov
cs
sbb
push
inc
add
pusha
repz
imul
into
mov
inc
adc
mov
mov
mov
sahf
add
mov
loopne
xor
pushf
call
popl
es
or
int3
pop
xchg
push
pushf
sbb
loopne
jb
out
add
jp
pop
cmp
xchg
outsb
or
out
data16
pop
aad
and
jb
cs
leave
leave
push
aaa
or
rorl
lret
insb
insb
loopne
minps
mov
cld
push
icebp
cmp
push
jmp
cmp
or
lret
push
or
pusha
and
stos
sub
subl
pop
cmp
mov
cld
jecxz
test
lret
add
cld
push
stos
int
jb
jge
stc
xor
icebp
lock
into
ficoml
xchg
sbb
pop
adc
lahf
sarl
out
ret
inc
push
in
xchg
ret
fwait
adc
sub
mov
test
xchg
clc
push
fcompl
inc
imul
lods
sub
std
adc
repz
xchg
inc
push
imul
mov
jp
mov
in
mov
stc
mov
subl
xorl
xchg
cs
sahf
xor
push
lods
adc
push
mov
jl
in
xchg
es
pop
adc
xor
mov
arpl
sti
icebp
rolb
es
add
enter
push
out
or
das
cmc
mov
inc
or
mov
test
jle
mov
test
inc
jno
mov
xchg
push
cmp
jnp
insl
lock
stc
mov
adc
push
inc
aam
imul
adc
and
mov
cmp
mov
cmpsb
mov
int3
jmp
in
adc
mov
lds
push
in
insb
mov
mov
or
mov
jno
pop
push
divb
lods
scas
dec
xchg
outsl
dec
xlat
stc
and
ds
jecxz
jbe
roll
cmp
and
mov
jb
jae
pop
pop
repz
or
out
loop
adc
ljmp
xor
in
and
lods
jecxz,pt
inc
cmp
sbb
fcom
push
inc
cltd
popf
mov
jnp
int3
lret
ficoml
inc
mov
popa
jns
inc
pushf
and
fcoms
mov
rol
popa
mov
frstor
xorb
xor
les
data16
xchg
movsl
and
xchg
cmp
push
cmpsl
in
cmc
dec
add
pop
aam
cli
add
and
add
mov
add
xchg
mov
ret
xor
cmp
inc
adc
sub
inc
jae
arpl
push
out
xor
cmp
jle
adc
jp
pop
sbb
icebp
jecxz
outsb
cld
in
lret
or
pushf
movsl
mov
jb
inc
repnz
push
cmp
pushf
push
jl
movsb
push
movb
mov
dec
mov
add
in
and
hlt
test
aad
pop
cltd
pop
sbb
subb
or
sbb
mov
dec
iret
jbe
adc
cmp
leave
mov
sub
dec
inc
out
daa
pushf
movsb
mov
shlb
dec
add
aas
das
xchg
or
das
ja
mov
rcrb
hlt
mov
ljmp
pop
jns
ljmp
add
pusha
adc
sub
push
xor
dec
cmp
outsl
loope
sahf
sbb
jbe
xlat
enter
imul
out
inc
cmp
outsb
loopne
clc
xchg
outsb
and
test
pop
flds
lcall
shll
daa
dec
stos
popf
pop
mov
in
repnz
jo
fs
test
loopne
clc
dec
hlt
push
inc
cmp
lock
lods
dec
cltd
ja
in
xchg
sbb
lods
mov
test
pop
xchg
pop
push
pop
dec
sbb
movsl
and
rcrb
shrb
stos
test
mov
mov
icebp
inc
mov
insb
xor
lea
or
push
pop
hlt
sahf
addl
cmc
out
pop
mov
mov
mov
pop
rolb
jmp
cs
sbb
fimull
add
ljmp
jo
add
xchg
lock
jae
lock
jno
add
jno
repz
ja
ds
add
inc
fstpl
or
mov
add
mov
or
push
popf
sub
lods
push
xor
es
push
lahf
push
dec
or
cmp
lds
stos
push
push
pop
out
cmp
inc
lds
fcmovb
mov
shll
mov
aam
mov
lods
mov
aam
xchg
xor
ja
int
inc
mov
mov
push
adc
mov
mov
gs
cltd
cld
push
fildll
maxps
loope
push
fdivs
fiaddl
out
dec
sub
xchg
pop
loope,pn
sub
test
pop
lret
int
push
mov
push
jecxz
mov
sarb
dec
ja
outsb
push
shll
and
jl
in
mov
scas
es
subb
inc
xchg
dec
std
jg
cmp
ret
push
icebp
nop
enter
decb
nop
mov
mov
pop
cmp
je
int3
inc
outsw
xor
pop
sbb
mov
push
jb
cmpsb
in
mov
cmp
adc
rclb
push
inc
scas
loopne
and
scas
xor
and
xchg
pop
inc
jo
pop
ficoms
cs
or
aad
loopne
outsl
inc
stc
sub
mov
jg
push
lds
arpl
xchg
and
in
add
in
add
aam
das
inc
movsb
mov
mov
iret
sub
cmp
sub
loopne
jbe
push
and
pop
cld
bound
sbb
scas
pop
aaa
mov
push
inc
test
movsl
sar
or
test
push
mov
adcl
outsl
sbb
repz
push
or
xchg
xor
call
cmpsl
adc
push
in
push
pop
loop
mov
mov
add
xchg
insb
push
cmp
jg
cld
pop
dec
sbb
and
cmp
xchg
push
push
sbbl
add
adc
add
cmpl
sub
cmp
and
or
inc
sub
xchg
xor
fsubrs
dec
es
dec
adc
mov
push
mov
dec
pop
sub
pop
sub
mov
pop
les
mull
jg
hlt
shll
repnz
cmpsl
popa
adc
sbb
or
dec
and
sbb
push
pop
cmpl
into
sahf
mov
adc
cmp
shrb
jno
cwtl
ljmp
popf
fs
out
and
mov
ret
mov
mov
ret
mov
inc
cmp
xlat
loope
cmpsl
call
inc
test
dec
faddl
lock
rorl
test
cltd
loop
mov
int3
in
mov
mov
xor
fisubrs
call
cli
int
mov
int3
xchg
sbb
fwait
xor
cmp
imul
dec
xchg
sub
or
inc
pop
or
aad
stos
mov
mov
notb
cltd
cmp
or
call
gs
andl
add
ror
js
std
ljmp
call
addl
pusha
push
mov
mov
leave
mov
cmc
adc
fidivrs
popa
cmp
aas
inc
fs
jnp
or
adc
mov
sub
jns
out
and
jns
test
enter
sub
popa
sbb
lods
jno
cmp
inc
imull
rcl
sub
arpl
mov
jmp
sbb
ret
rcr
adc
out
movsb
popf
jne
xchg
into
test
or
jmp
xchg
xchg
pop
adc
sahf
xchg
in
aam
rolb
sbbb
dec
cmp
subb
adc
jae
mov
sub
inc
pop
pop
pop
out
dec
pop
mov
pop
pop
adc
loope
ret
or
inc
xor
insl
mov
out
xchg
and
mov
sbb
cmp
das
push
int3
out
push
addr16
in
dec
inc
fstpt
adc
push
loope
aaa
and
add
lcall
jmp
iret
in
dec
std
mov
pop
paddq
sahf
aas
sahf
add
jmp
lds
hlt
clc
mov
jns
lds
mov
arpl
dec
mov
xchg
push
in
out
xchg
mov
push
bound
out
pop
scas
test
aam
pop
out
push
lds
lods
daa
inc
aam
xlat
dec
call
cltd
cmpsb
xchg
les
cmpsl
sub
repnz
mov
jp
xchg
das
pop
jne
mov
dec
jmp
inc
outsb
insb
xchg
mov
cli
sti
in
add
fistl
jbe
addr16
or
movb
rolb
int
cmpb
popw
mov
addr16
mov
incb
inc
and
adc
movsb
iret
stos
jbe
dec
push
int3
mov
test
pusha
in
leave
add
jnp
mov
inc
fisubs
fdivs
push
mov
gs
lods
je
xchg
and
jo
std
and
sbb
push
loop
sub
fsubrs
into
xor
jae
mov
movzbl
dec
cmp
pop
or
xchg
mov
cmc
mov
mov
js
cmc
xor
inc
jl
lods
stc
jle
jbe
scas
cwtl
bound
pop
dec
aas
add
mov
jle
adc
out
cmp
xor
xor
lret
mov
pop
sub
sbb
sub
scas
sub
loopne
mov
outsl
cmpsb
dec
sarl
scas
adc
out
cmp
ds
imul
cmp
insb
mov
in
or
imul
jp
mov
test
mov
pop
pop
or
lcall
sub
das
test
shlb
push
mov
dec
dec
scas
cwtl
test
insl
push
pop
inc
mov
gs
mov
mov
cmp
fstpl
movsb
mov
nop
xor
mov
call
fs
mov
or
mov
fstpl
inc
lcall
mov
adc
dec
das
jg
stos
jge
jp
cld
stos
xor
fimuls
mov
mov
xlat
fisttpll
xor
bound
iret
lods
pop
bound
jb
pop
daa
sbb
sub
fsubl
icebp
mov
cmp
jmp
clc
mov
int
jge
pop
inc
enter
faddp
cmp
cwtl
inc
mov
popa
ret
pop
out
sahf
jo
nop
shll
xchg
or
pop
sti
mov
dec
ja
movb
jl
shr
xchg
add
cld
dec
aad
xlat
push
lcall
add
sub
mov
sub
jns
jbe
push
dec
cs
cmc
sub
pop
loope
mov
insl
insb
mov
fidivrs
sbb
dec
int3
lret
loopne
pushf
outsb
cmpsb
mov
adc
or
adc
into
iret
pop
filds
js
mov
inc
push
das
lret
or
adc
xlat
inc
sub
lods
nop
inc
aad
mov
mov
fstpt
aad
call
xor
cltd
in
stos
push
cli
add
cmp
inc
add
aad
leave
in
cmp
out
decl
lods
aad
test
mov
jmp
jmp
enter
flds
push
mov
jp
mov
inc
add
dec
pop
aas
fcomip
sbb
push
test
cmp
mov
jl
cmp
pop
loopne
addr16
repz
xchg
adc
rcrl
add
inc
or
iret
in
shll
out
hlt
push
lret
repz
xchg
push
lahf
insl
js
sbb
cmp
sub
push
lods
lock
scas
cwtl
push
pop
jge
rcll
data16
dec
push
sbb
mov
sub
mov
sub
mov
in
lcall
aas
push
adc
pop
leave
int3
and
jo
mov
push
push
adc
xor
mov
sahf
pop
dec
aam
mov
icebp
repz
cmovs
mov
stos
outsb
xchg
aam
or
movsb
call
es
sarb
adc
movsl
push
adc
aas
inc
pushf
cmp
sahf
jns
addr16
lds
cmovno
sbb
jmp
xchg
inc
mov
js
loope
add
ljmp
mov
jo
sahf
mov
ds
pop
outsb
pop
push
and
shrl
cmc
sub
mov
es
imul
cld
mov
xlat
js
cltd
test
aam
add
idivb
xor
pop
mov
cmpsl
or
adc
movsl
pop
shlb
mov
test
xchg
neg
xor
ss
orl
out
sub
cmp
test
jp
or
dec
ret
mov
scas
dec
out
sahf
mov
xchg
mov
sahf
cmpsb
subl
testl
or
xchg
mov
dec
jo
and
mov
xor
or
inc
and
jmp
loope
push
mov
xchg
xchg
xchg
imul
mov
ds
mov
arpl
and
xor
loopne
and
mov
mov
call
xchg
xchg
push
sub
xchg
mov
enter
xor
sub
imul
inc
xor
jge
out
or
bound
call
aam
leave
push
out
cwtl
loope
ffree
icebp
xchg
test
daa
shll
jne
mov
mov
fwait
lods
dec
aas
mov
divl
popf
sub
je
cmpsl
adc
xchg
push
lods
sbb
dec
addr16
pop
lock
sub
je
sti
inc
xor
repnz
mov
scas
and
xor
ret
dec
add
ljmp
cwtl
call
out
mov
loopne
cmp
sbb
xchg
xchg
cld
inc
push
test
fistpll
add
add
push
add
imul
mov
push
mov
mov
fld
mov
in
inc
cmp
loope
jmp
sbb
imul
cmpsb
xor
sbb
ret
push
out
inc
push
aas
ficomps
cmp
loop
xchg
fisttpll
test
hlt
leave
stos
and
add
fidivs
xor
adc
int3
push
cmp
sub
outsl
scas
mov
imul
es
call
push
add
jl
add
outsl
cmp
add
adc
das
addb
mov
cmpsb
xchg
sub
xchg
or
adc
fwait
push
dec
jle
dec
add
mov
lret
or
inc
std
dec
push
mov
pop
sub
push
rorb
add
jns
flds
inc
cmp
sti
mov
mov
cmpl
mov
out
xchg
mov
cmp
mov
scas
and
loop
cld
popa
dec
xor
mov
dec
lahf
lret
das
test
rcrb
add
das
xchg
popf
cmp
repz
mov
dec
jl
fldcw
pushf
pop
lds
in
jbe
xchg
xor
mov
jmp
jmp
mov
out
xchg
pushf
mov
mov
inc
sub
push
fstps
or
add
sbb
xchg
lea
or
cmp
stos
negb
loop
and
jmp
cmp
popf
cmp
push
or
dec
mov
gs
add
mov
mov
dec
add
adc
sarl
sbb
je
enter
inc
repz
jge
mov
inc
test
or
mov
cmpsb
stos
jp
mov
mov
mov
imul
cmp
pop
jl
shrb
inc
adc
push
sahf
push
add
cmpsl
repnz
sub
dec
mov
or
adc
or
cmpsb
sbb
adc
sub
xor
jge
aam
jne
pop
mov
xchg
dec
adc
aas
aaa
shrb
cs
stc
cmp
enter
in
imul
and
or
cmc
loope
lret
cmp
adc
sbb
jb
roll
mov
mov
cmp
mov
inc
test
das
js
outsl
and
out
dec
xchg
aad
mov
dec
mov
mov
fldt
lds
test
or
adc
arpl
test
pusha
daa
mov
pop
scas
lret
or
cltd
ss
fcompl
add
push
std
jo
mov
jmp
out
push
mov
and
les
stos
mov
mov
pop
scas
sub
aam
jl
into
in
push
dec
and
mov
test
mov
lcall
cli
mov
lock
xor
xchg
sbb
mov
or
leave
call
mov
pusha
je
xchg
jg
xchg
sub
lahf
cmpb
iret
adc
and
mov
ljmp
scas
mov
xor
vaddsd
jnp
adc
aad
xchg
push
lret
cmp
repnz
rcll
mov
test
adc
int
adc
stc
or
idivb
test
sbb
out
and
addr16
std
or
dec
pop
fnstsw
push
nop
lcall
sub
push
or
imul
sub
jp
rep
dec
loop
sbb
dec
xchg
push
sbb
addr16
mov
scas
test
in
mov
sub
cmp
lret
int3
or
es
push
das
adc
lods
cmpsl
out
rolb
insb
or
jg
cltd
push
js
pop
adc
and
sbb
fcomps
dec
mov
xchg
out
lock
cmp
push
aam
leave
stos
stos
shl
xor
adc
outsb
icebp
cmp
rcl
add
xor
insl
cs
neg
inc
inc
pop
mov
pop
fadd
insl
lcall
iret
or
lret
inc
ud1
pushl
imull
and
lea
icebp
cwtl
add
dec
loopne
ret
das
or
mov
jns
sbb
cmp
and
mov
ds
stc
xor
popf
pop
gs
sahf
imul
es
sbb
mov
nop
push
aam
sbb
and
ss
cwtl
sub
pop
add
jg
inc
fistps
stos
xchg
jle
popa
es
xlat
cli
fwait
cmp
add
lods
adc
iret
xor
leave
clc
jo
ds
cld
jle
rcll
xchg
xor
mov
cmp
repnz
jecxz
icebp
fbld
aas
xor
lods
pop
int
test
pop
dec
sahf
fwait
out
aad
jbe
add
rcll
inc
ret
push
mov
push
push
lahf
adc
pushf
jmp
cmc
cmp
xor
pop
arpl
les
out
je
cmpsl
mov
xor
cmp
add
jae
inc
shrl
jb
mov
push
std
xlat
and
sbb
test
aam
push
leave
adc
fcmovbe
jcxz
stc
cwtl
into
sub
jmp
jg
and
jb
dec
enter
jo
movsl
mov
and
les
sub
mov
test
adc
mov
dec
pop
cmp
cmp
cmp
jno
mov
xchg
scas
jb
push
push
dec
in
pop
dec
sbb
dec
sbb
ja
mov
sahf
cmp
sbb
xor
pop
mov
push
mov
stos
cmp
cmpsl
dec
pop
dec
ror
or
mov
test
xchg
popf
aas
inc
inc
mov
pop
pop
push
in
movsb
mov
scas
int
cmp
jne
jp
pop
mov
jnp
pop
lret
sbb
mov
dec
shrb
push
or
fsubrl
cmp
push
mov
pop
jo
xor
cwtl
sbb
das
adc
sbb
ds
inc
ljmp
pop
fwait
xor
mov
roll
pop
pop
jnp
adc
in
add
in
xor
sbb
adc
mov
test
loopne
or
pop
mov
std
pushl
fldl
daa
xchg
into
add
mov
jae
xor
shrb
fcomps
sub
adc
rcll
das
xor
iret
mov
daa
jb
and
daa
in
sub
adc
aas
lea
shrl
dec
xor
add
ja
pusha
stos
jae
fmuls
lcall
cltd
fsubrs
pop
mov
mov
mov
test
roll
pop
icebp
push
jmp
mov
dec
mov
cmpsl
inc
push
mov
dec
mov
cltd
jnp
push
push
aas
sahf
add
jns
push
cs
nop
frstor
aam
xchg
icebp
sub
xchg
push
call
mov
add
and
and
dec
jg
sbbb
mov
scas
push
leave
sub
shl
ljmp
stos
mov
mov
mov
add
gs
mov
add
jecxz
mov
nop
shlb
push
test
je
dec
sahf
mov
xlat
xchg
adc
xor
ljmp
jnp
repz
jmp
ja
xlat
cmp
scas
inc
gs
or
mov
inc
xchg
push
xchg
xchg
cld
shlb
loope
and
les
jg
xor
jmp
push
and
and
data16
mov
std
mov
xchg
cmp
adc
ja
dec
out
daa
imull
in
jb
aaa
inc
pop
lods
add
sar
lods
dec
inc
cli
inc
cli
inc
je
cli
stos
cld
sbb
dec
mov
fstp
mov
lret
insl
dec
jb
in
inc
mov
and
movsb
jo
push
xchg
lea
pop
imull
in
cmp
cmp
push
push
inc
cwtl
lock
mov
jnp
loope
xor
mov
push
xchg
pop
cmp
sub
push
js
cmp
mov
inc
mov
aaa
fnsave
cmp
mov
int3
or
add
lahf
dec
cli
mov
fsubrl
mov
stos
shrl
insb
test
test
mov
into
mov
push
fcmovb
and
lds
clc
loopne
outsl
clc
outsb
cmp
inc
out
mov
or
mov
mov
sbb
mov
inc
lahf
scas
ficompl
cmp
push
test
lods
push
sti
or
sub
scas
sarl
mov
jl
cmp
cmpsl
mul
in
lock
pushf
inc
shlb
xchg
ror
std
mov
add
fwait
or
sbb
repz
jmp
and
or
aaa
pushf
in
or
into
iret
sbb
or
shll
aas
cmpsl
movsb
out
xor
aaa
sub
mov
insb
dec
pop
sbb
jne
sbb
cmp
xor
pop
ja
mov
leave
adc
movsl
out
out
xchg
leave
xchg
pop
and
xchg
jnp
jp
jo
inc
dec
sub
fidivs
xchg
jne
aad
push
imul
dec
push
push
xor
fwait
add
daa
pop
mov
fs
push
sbb
mov
inc
adc
test
xor
pop
lcall
shr
cmp
stc
mov
jg
lds
dec
pop
test
pop
mov
xor
jo
adc
adc
inc
popa
shl
insb
sub
sub
mov
mov
fidivl
fprem
rorl
inc
sub
in
inc
inc
fimuls
lods
out
inc
dec
pop
out
into
stc
mov
push
notb
sbb
scas
out
inc
adc
mov
xchg
cmpsb
mull
and
inc
xor
hlt
mov
adc
fcomip
adc
dec
mov
jmp
push
int3
add
gs
pop
and
hlt
xchg
mov
jle
cmc
inc
addl
cltd
cs
jp
add
addr16
pusha
push
sub
leave
or
incl
adc
mov
dec
dec
jb
and
jecxz
adc
stos
test
mov
cmp
and
int3
lret
and
add
dec
fnstenv
and
cli
xchg
subl
movl
bound
in
hlt
xor
or
adc
arpl
jl
jno
xor
push
cmp
popf
adc
sbb
push
popa
fs
imul
stos
pop
je
mov
push
pop
hlt
adc
push
xlat
cmpsl
movsl
lods
add
pop
and
jne
or
and
sahf
fadds
mov
add
test
sbb
mov
decb
dec
in
jb
push
fimuls
insl
scas
jmp
das
and
jne
outsl
leave
mov
or
dec
or
adc
or
sbb
repz
fsubrl
in
dec
jo
in
sub
in
mov
or
cwtl
and
mov
pop
js
in
ljmp
adc
push
and
add
test
mov
add
cmp
xchg
sbb
leave
into
push
int3
mov
movsl
imul
sbb
test
out
sbb
push
std
jecxz
ficompl
leave
xlat
bound
sbb
aaa
rcrb
xchg
or
fistps
xlat
xor
es
sbb
xchg
dec
push
mov
ds
xchg
sub
pop
dec
in
aaa
and
lea
loop
inc
pop
sbb
jle
jns
mov
notb
test
movsb
inc
jl
pop
xorb
cmpsb
aas
pop
jmp
inc
mov
leave
inc
pop
sahf
sti
hlt
sub
addb
data16
cmp
cs
mulps
out
and
mov
jnp
dec
pop
mov
lods
insb
mov
pop
pop
or
iret
xor
sub
ljmp
add
push
arpl
and
add
xor
aam
dec
flds
outsb
and
xchg
mov
sub
insb
push
add
cmpsb
mov
in
sbb
jmp
mov
fwait
int3
adcl
mov
out
jae
cmp
leave
js
xchg
cmpsl
push
xchg
jmp
and
sbb
js
inc
pop
mov
aas
cmp
dec
pop
out
pushf
aad
cmp
or
push
and
adc
and
lcall
inc
dec
outsl
repz
in
ds
pushl
push
sbb
pop
inc
fs
push
mov
sub
push
sbb
inc
je
lock
stc
clc
xchg
dec
mov
int3
xchg
daa
inc
inc
jno
pop
and
cld
in
or
ja
outsb
int
sbb
es
adc
lret
pop
outsb
sbb
leave
xchg
outsb
clc
add
out
xor
cmp
mul
or
inc
pop
hlt
adc
lods
fidivrs
lahf
or
js
loope
fisttpl
fldenv
pop
shl
rcrl
jl
pusha
xor
cmc
cmp
fdivrp
test
pop
lds
mov
mov
in
mov
jne
pop
sti
in
dec
xchg
pushf
call
clc
cli
mov
pop
cmpl
xchg
inc
xlat
out
rcrl
cmp
jne
fwait
mov
out
jo
mov
xor
sbb
imul
sbb
dec
adc
aas
sub
ret
jmp
into
lds
ja
sbb
popf
call
in
ficoml
stc
enter
paddsw
mov
xchg
je
jecxz
dec
dec
pop
add
icebp
mov
stos
sbb
dec
aad
pop
ret
jbe
call
rcll
scas
out
xlat
xor
push
je
jae
stos
sub
test
sbb
jmp
jbe
add
lea
daa
in
mov
mov
push
jp
int3
lret
shll
jecxz
mov
jnp
fiaddl
aad
ljmp
movsl
test
mov
ja
idivb
inc
lret
fidivl
and
pop
hlt
ret
adc
imul
sbb
out
bound
rcrb
lea
arpl
add
or
ja
flds
inc
sti
in
add
fistps
dec
rol
cltd
out
mov
sbb
sbb
arpl
lret
loopne
icebp
adc
stos
add
mov
jle
std
mov
and
frstor
aaa
or
fadds
jns
rol
in
fistpll
call
xchg
aam
sbb
inc
xchg
push
and
inc
add
cltd
aad
xor
dec
in
das
mov
pop
popf
bound
test
aas
fimull
mov
dec
test
cmpsl
ljmp
ficompl
repnz
and
push
jns
shl
xchg
dec
xchg
cmpsl
cmp
mov
xchg
fnstsw
pop
push
xchg
pop
pop
jg
lods
in
das
cs
mov
and
add
popf
out
mov
xchg
bnd
rorb
adc
xchg
pop
js
or
xor
cltd
mov
out
push
mov
sbb
aam
std
out
imul
ret
ja
jne
cmc
xor
mov
inc
and
sbbb
jge
mov
or
xchg
test
popa
rcll
pop
push
out
and
decl
lods
and
sbb
das
js
mov
data16
inc
mov
scas
push
std
dec
int3
insb
in
inc
out
or
in
push
xor
or
xor
shld
stos
cli
pop
lret
call
push
add
mov
cli
mov
in
xor
pop
mov
mov
jnp
shll
mov
pop
lock
sahf
ljmp
pop
pusha
nop
cltd
rcll
ja
jp
idivb
jg
dec
xchg
in
es
push
xor
in
adcb
stc
xchg
popl
sbb
push
pop
xor
roll
mov
pop
jae
mov
test
in
push
jns
sbb
mov
jbe
mov
pop
sub
pushf
jmp
mov
and
popa
andb
sar
stos
pop
push
sbb
insl
sub
ja
jle
inc
sti
jno
jmp
data16
leave
xchg
mov
jbe
jae
outsl
fucomp
clc
hlt
mov
loop
pop
lock
pop
jno
inc
pop
pop
orb
push
ret
mov
scas
dec
lds
pushf
cmpsl
mov
jns
inc
push
mov
fistl
rol
adc
mov
xor
push
inc
lcall
cmpsb
jo
in
jno
out
cmpsb
test
gs
xchg
jae
paddsb
enter
fs
xchg
insb
jecxz
lea
jnp
aad
shr
int3
jmp
push
mov
cmpsl
negl
arpl
mov
mov
sub
aas
gs
and
cli
jno
jmp
int3
and
xchg
loop
int
aad
test
arpl
sbb
aas
mov
mov
mov
pop
ret
sbb
hlt
cld
add
dec
inc
cmp
mov
popf
pusha
test
mov
push
in
cmp
pcmpeqw
les
xchg
imul
adc
mov
or
test
cld
dec
fsubs
mov
push
or
dec
jge
in
loope
outsb
test
sbb
add
mov
push
jl
sbb
cmp
pop
pop
aas
mov
add
adcl
xchg
mov
cmp
testb
lock
mov
hlt
hlt
ja
push
jbe
ja
mov
inc
push
lret
mov
push
mov
cmp
rolb
jnp
stos
mov
popl
addl
push
xchg
xchg
xchg
add
shll
xchg
inc
mov
dec
jp
adc
sub
mov
stc
in
add
add
push
or
xlat
and
lret
sbb
push
pop
addb
scas
ss
es
sbb
rorb
adc
movsb
fnstsw
mov
testb
inc
dec
mov
sub
inc
lods
mov
push
sbb
sbb
pop
ds
inc
leave
pop
push
add
jb
push
add
std
test
jmp
sub
jne
or
std
sub
icebp
add
frstor
sub
jle
cmc
adc
mov
sti
xchg
bound
data16
out
scas
pop
lret
mov
and
mov
out
adc
or
insl
xchg
sub
js
nop
dec
mov
push
sbb
mov
ficoml
mov
xchg
idivb
mov
faddp
or
das
rorb
cmpsl
jp
subl
mov
mov
inc
add
flds
mov
dec
insb
les
rcrl
lds
or
dec
xor
leave
fs
add
or
or
xchg
popf
test
and
std
lret
pop
push
push
sbb
arpl
mov
inc
je
in
ja
or
mov
xchg
jns
dec
or
push
xchg
xchg
and
cmp
je
jl
daa
aas
dec
cmpsl
jae
mov
mov
hlt
jmp
sbb
sub
imul
xchg
dec
mov
fimuls
cs
dec
cmpl
push
sbb
pushf
sbb
scas
push
movsb
in
loop
xchg
adc
les
dec
arpl
test
cmp
into
movsb
aas
std
mov
adc
sub
out
subb
int
push
ret
add
mov
xlat
xor
in
mov
add
fwait
sub
adc
fldenv
movsl
int
and
adc
inc
inc
add
sbb
xchg
ss
cmc
xchg
mov
dec
mov
or
std
dec
mov
fsin
adc
xchg
popaw
jo
adc
orb
inc
mov
shll
scas
jno
cmp
jl
cli
xor
mov
or
mov
sub
lret
mov
cmp
jmp
ja
add
pushf
pop
insl
or
sub
arpl
jecxz
addb
shll
in
in
adcl
mov
xor
out
pop
cmpsb
lods
jne
test
fwait
imul
dec
cmp
nop
push
mov
das
cmp
shl
or
cmp
ret
dec
mov
scas
idivl
sub
cmp
push
sub
mov
in
iret
pop
inc
push
inc
jne
mov
das
insl
fistpl
inc
nop
test
pop
pop
or
mov
pop
jle
cmp
scas
push
pop
in
and
adcl
popa
inc
fmulp
dec
imul
ret
lahf
cmp
je
stos
aad
mov
inc
repz
adc
fstl
mov
inc
fidivs
xor
pop
aam
in
scas
or
pop
add
bndldx
cli
pushf
xor
push
and
add
in
outsb
ret
or
popa
push
xor
stc
lret
mov
xchg
add
jae
push
stos
push
cmpsb
cmp
xchg
cmp
and
jmp
pop
popf
popf
shll
push
mov
clc
jcxz
mov
inc
push
inc
xchg
sbb
sbb
mov
cli
add
outsl
nop
dec
cmp
mov
out
pop
lahf
mov
imul
sbb
pop
cwtl
ret
mov
repz
mov
pushf
lret
dec
mov
adcb
fisttpll
out
sbb
pop
mov
lds
dec
xchg
cmpsb
pop
in
arpl
mov
cli
mov
insb
mov
jnp
cmp
cmpsl
mov
mov
or
nop
into
rorl
pop
clc
inc
test
out
add
mov
mov
jp
lret
pusha
jle
out
stos
mov
insl
out
fidivrl
and
pop
sbb
icebp
aaa
lock
cltd
mov
pop
les
das
subb
push
cmp
mov
lcall
outsl
repnz
dec
push
es
mov
xchg
cmp
out
mov
flds
fistpl
xchg
incb
popa
clc
loope
dec
sbb
movl
mov
xlat
addr16
out
call
mov
lock
loope
cwtl
cmp
out
dec
lret
scas
mov
jno
insb
lret
mov
imulb
addr16
or
mov
insb
ljmp
inc
in
sbb
aaa
sub
dec
fstl
xchg
out
ret
add
cmp
push
add
xor
mov
pop
mov
dec
mov
push
jmp
push
mov
mov
adc
ljmp
adc
fs
jecxz
mov
mov
push
mov
mov
or
lods
pop
mov
sub
lret
ret
pop
xor
adc
cmp
add
cmp
cmc
bound
push
jbe
pop
lock
lods
add
push
jno
cmc
xor
shlb
push
jmp
sbbb
push
mov
stos
mov
ljmp
dec
call
testb
aaa
jle
and
sub
jno
inc
pop
filds
es
mov
jo
pop
sbb
xchg
fcomps
dec
add
scas
repz
test
xor
gs
adc
ret
push
lret
stc
mov
jecxz
test
sub
repnz
push
out
xor
xchg
inc
mov
push
lcall
push
push
pop
fs
sub
aaa
lret
push
test
cmp
inc
dec
jbe
push
std
pop
dec
xor
mov
testb
or
outsb
popf
jo
xor
push
xlat
shlb
or
sbb
shrb
ret
aad
ljmp
lret
pop
dec
jae
mov
mov
out
mov
add
ja
pop
mov
mov
movsl
leave
ret
in
lods
out
imul
repnz
cmpsb
stos
and
arpl
lea
lods
pop
inc
push
mov
lods
xchg
mov
test
fdivs
jnp
mov
push
jnp
fcoms
and
sub
jp
pop
adc
loop
clc
lcall
xchg
sahf
mov
data16
and
xchg
and
sbb
dec
jl
leave
sbb
sbb
aad
inc
sub
sahf
inc
xor
iret
repnz
mov
xchg
leave
jno
jae
orl
lret
cld
adc
jp
fsubs
arpl
push
xorb
cmp
movsl
cmp
jmp
lods
loope
mov
adc
movsl
mov
mov
sbb
popa
push
fs
pop
xlat
cmpsl
sarb
or
popa
jae
or
int3
aam
jo
xor
mov
and
pusha
stos
je
sti
add
mov
pop
inc
jne
aad
pop
pop
mov
cwtl
imul
mov
xchg
mov
push
loopne
mov
push
dec
and
clc
sub
imul
das
inc
fiadds
test
frstor
nop
aaa
lahf
sti
add
pop
inc
in
sub
mov
lea
fs
fiadds
nop
mov
push
sbb
lods
or
fmull
mov
xor
loope
pop
lret
push
in
inc
xor
stc
popf
mov
pop
mov
xor
or
sar
lcall
stc
loope
add
dec
xor
push
inc
pusha
mov
data16
xor
enter
cmc
pop
xorb
xlat
lods
lock
mov
push
mov
mov
sub
pushf
dec
arpl
scas
dec
fldt
mov
ret
int3
mov
fwait
rcr
dec
pushf
mov
adc
cmpsl
lret
jecxz
ljmp
aas
jo
imul
mov
jp
lcall
jecxz
adc
cmpsl
out
mov
mov
dec
mov
mov
sbb
dec
sub
mov
rolb
call
or
add
stos
push
xor
mov
xor
add
in
push
mov
jae
push
ret
sbb
mull
in
insl
idiv
hlt
xor
mov
jb
adc
cmp
xchg
fidivl
sbb
dec
and
dec
movsb
inc
lahf
cmp
cmp
dec
popa
mov
out
repnz
hlt
sbb
pop
lret
mov
insl
mov
fmuls
pop
xchg
xor
jge
xor
stos
adc
je
mov
mov
cmpsb
lock
je
mov
data16
and
scas
mov
dec
mov
fwait
cmpsb
les
lea
and
adc
mov
xchg
jne
clc
sbb
cmp
inc
mov
and
xchg
push
inc
fdiv
dec
movsb
pusha
dec
add
jns
sub
pop
test
in
cmp
xor
dec
xchg
adc
push
mull
int3
mov
sbb
dec
pusha
outsb
adcb
dec
lods
and
stos
out
inc
ret
jno
inc
xor
dec
mov
mov
sbbb
mov
sti
out
sub
es
jecxz
inc
outsb
in
aaa
aas
cmp
ror
enter
ret
into
out
mov
pop
repnz
jne
fisttpl
cmp
pop
dec
out
add
push
dec
pop
lea
push
gs
xor
jecxz
mov
push
mov
add
negl
or
pop
lret
cmp
cltd
cmp
adc
cmc
or
cmp
es
mov
cli
pop
dec
inc
mov
lret
fidivrl
imulb
inc
dec
imulb
cltd
dec
dec
inc
fwait
add
mov
push
icebp
adc
sub
cmp
dec
adc
push
xchg
filds
xor
add
and
and
inc
sar
sub
ljmp
or
gs
mov
es
and
dec
jo
ficomps
jg
stos
stos
dec
push
cmp
addb
pusha
jecxz
repz
add
sbb
jne
lahf
fidivrl
xor
push
jmp
or
fsubl
mov
push
xchg
ss
sbb
lods
cwtl
mov
jg
mov
das
in
cmpsl
add
adc
pushf
add
jmp
rorb
sti
mov
fidivl
dec
xchg
add
pop
and
dec
inc
mov
xchg
bnd
push
out
add
cmp
or
mov
and
xchg
ljmp
sbb
cmpsb
cmpb
pop
mov
mov
adc
mov
loope
int3
lods
ret
cmp
pop
mov
lods
add
push
mov
lock
dec
enter
mov
cmp
and
pushaw
mov
mov
or
ss
fdivs
insl
xchg
add
pop
jnp
inc
lock
push
cmp
inc
insl
dec
adc
addb
pop
add
stc
in
int
cwtl
adc
and
pop
push
sub
cmc
xchg
mov
outsb
xchg
and
insl
stos
rorb
lods
xchg
pop
or
add
int
or
in
jge
xorl
lret
shrl
stc
cmp
clc
sbb
push
sbb
ja
mov
fdiv
xor
sub
xor
in
cwtl
inc
mov
out
leave
sub
cmovb
jge
mov
sub
or
in
nop
pop
sbb
mov
cs
in
into
aaa
sub
clc
test
jecxz
hlt
mov
pop
dec
mov
xor
outsl
pop
add
test
int
jle
rclb
mov
mov
push
pop
pop
int
fistpl
push
rcr
lods
aaa
out
addl
push
test
ss
test
addr16
pop
fucom
in
jae
push
dec
xorl
xchg
cmp
cmpsl
jo
pop
jne
dec
movb
dec
out
jmp
xor
lock
dec
push
mov
cmpsl
inc
pop
shrb
ss
pop
shl
arpl
mov
dec
mov
and
fisttpl
out
push
mov
nop
test
rorb
dec
push
ficomps
push
mov
cs
fdivl
mov
mov
fwait
dec
ficomps
add
cmp
mov
mov
lret
cmp
lahf
jl
cmp
and
push
sahf
inc
leave
pop
inc
xor
or
pusha
xchg
rcr
and
nop
pop
pop
xchg
test
adc
mov
xchg
fldt
dec
stc
cmp
xor
test
insb
imulb
mov
jmp
mov
push
push
loope
inc
mov
in
ror
jg
testb
mov
sbb
psrlw
add
cmp
mov
xchg
cmp
cmp
popl
in
movl
cmp
xor
pop
cwtl
std
cmp
pop
clc
inc
inc
sub
out
nop
cmp
sbb
pop
add
pop
shlb
cmp
das
or
xchg
pushl
lahf
mov
cwtl
rclb
push
inc
xor
mov
cmp
enter
xlat
addl
mov
and
fxch
fdiv
lods
mov
xchg
sahf
pop
popa
and
fisubrl
push
lds
das
aas
mov
test
sbb
fsubl
cmpsb
aad
jg
test
mov
ljmp
scas
lahf
ljmp
ss
or
dec
add
std
mov
xor
mov
flds
mov
mov
lret
dec
lods
adc
scas
add
push
sub
pop
jp
cmp
stos
stos
into
stos
and
sub
xor
test
sbb
push
push
adc
rcl
std
pop
aas
inc
scas
sbb
fs
sti
sbb
mov
test
jno
cmpsl
xchg
inc
xchg
out
movsl
mov
movsl
pop
loope
mov
arpl
lahf
test
ret
lock
stos
sbb
xchg
xorl
mov
push
mov
jnp
sub
in
lods
fs
sub
jecxz
lods
aaa
adc
push
dec
or
push
das
js
xchg
call
jno
test
sub
push
test
sbb
popa
bound
and
sub
stos
arpl
ret
stc
sbb
sbb
adcl
jmp
jmp
scas
mov
movsb
movsl
rcrl
out
das
test
jae
loope
sbb
movsl
popa
mov
jmp
in
xchg
push
scas
mov
popf
cmpsb
hlt
idivb
adc
push
push
aam
add
mov
pop
or
divb
xor
pop
mov
pushf
es
cmp
out
fstl
mov
in
mov
hlt
inc
loop
xchg
and
imul
fbstp
mov
sar
loope
add
jno
fs
jle
add
lcall
cwtl
shrb
inc
sarl
jmp
iret
push
mov
pop
xlat
inc
pop
add
push
jnp
add
leave
mov
push
pop
notl
rclb
xchg
push
gs
mov
test
je
gs
fmull
ss
pop
pop
pop
pop
movsl
push
push
fwait
popf
pop
mov
sbb
add
punpckldq
lods
add
inc
in
cmp
insl
xor
call
pop
loop
cltd
in
or
xor
jp
xor
repz
out
aam
pop
mov
ret
out
cld
xchg
fs
enter
mov
jb
int
cmc
jle
lret
sahf
aam
loop
cmpsb
mov
push
jge
call
dec
jg
sbb
mov
cli
pop
lret
mov
lds
stos
call
sub
sub
mov
divl
cld
xorb
cli
es
inc
out
or
push
sahf
lret
shl
pop
pop
mov
cmc
pop
jg
mov
cld
and
scas
mov
insl
push
cli
jmp
out
fwait
dec
push
clc
out
mov
test
es
add
pop
ds
aam
sub
push
popf
popa
loop
cmpsl
fsts
outsl
mov
dec
mov
out
adc
vsubss
fwait
cmpsb
ret
fsubs
mov
xor
sbb
or
insl
imul
xchg
stc
cmp
lahf
mov
or
mov
sub
mov
dec
xor
sbb
sub
movsl
pop
filds
push
aaa
aad
movsb
aad
xchg
sbb
sahf
jo
in
stos
test
inc
insl
inc
mov
movsb
adc
fimuls
jnp
pushf
mov
xor
adc
shl
inc
xor
xchg
jo
imul
or
pop
push
xchg
or
and
loop
pop
or
popa
inc
testb
scas
cld
pop
mov
xchg
xchg
das
pop
xchg
bound
movsl
addr16
addr16
int3
and
and
cmp
xlat
lds
shll
sub
push
movsb
iret
and
andb
sub
or
add
fidivl
add
push
call
dec
inc
fs
mov
sub
and
push
ret
subb
mov
cmp
or
and
or
cli
les
loopne
dec
pop
shrl
mov
imul
jecxz
mov
and
pop
aam
xchg
stos
xor
jnp
or
jmp
xor
repz
fbstp
rorl
mov
or
jge
pop
fstl
outsb
pushf
push
jl
and
sbb
inc
imul
cs
fwait
mov
stos
data16
rclb
out
es
mov
push
nop
daa
xchg
adc
push
aas
jae
aam
mov
pusha
daa
hlt
adc
add
xchg
and
aad
push
xchg
cmp
das
push
movsl
in
mov
mov
pushf
jecxz
test
jecxz
aaa
mov
lahf
or
jmp
arpl
dec
pop
jl
xchg
xchg
stos
roll
jmp
pop
shrb
mov
test
cs
stos
js
and
lahf
push
imul
in
cwtl
mov
push
sbb
xchg
aaa
jns
add
call
mov
testb
les
mov
out
pushf
and
mov
adc
adc
mov
rorl
mov
ret
and
mov
cmp
xchg
xchg
or
jns
test
xchg
divb
cmp
sarb
rolb
mov
sarl
stc
xchg
mov
insl
pop
pop
pusha
xchg
sbb
lock
stos
bound
xchg
add
pop
les
call
stos
ljmp
pop
sub
pop
insl
aas
cmp
fnstcw
loopne
jne
mov
inc
jne
cmp
in
lds
ficomps
sbb
loop
inc
cmc
rolb
pop
mov
dec
testb
int
iret
aad
test
add
sbb
outsl
out
fldenv
or
mov
data16
sub
jo
pop
adc
inc
test
mov
push
jne
dec
scas
adc
pop
push
pop
daa
sub
xor
lea
push
ret
mov
lahf
int
out
push
repnz
sub
aam
xor
in
mov
sbb
adc
add
nop
mov
shrl
jmp
and
mov
cs
shll
mov
fldt
cmp
xchg
adc
clc
pop
icebp
add
int
and
aam
jae
popa
dec
decb
add
and
dec
xchg
aas
sbb
fistpl
lea
push
mov
jmp
push
mov
movsb
lret
pop
jmp
xchg
and
jmp
mov
and
mov
push
mov
std
xchg
dec
xchg
inc
ljmp
imul
out
ret
daa
pop
mov
add
mov
mov
pop
nopl
cltd
xchg
aam
inc
cmpsb
inc
jo
ror
gs
ret
push
imul
jecxz
mov
push
mov
and
push
std
xchg
mov
aam
pop
repz
popf
pop
cmpsb
mov
pop
clc
rolb
lods
xchg
or
aas
imul
ja
out
add
add
sbb
dec
ret
add
and
add
push
ret
mov
daa
fcoml
ret
iret
shll
stos
stos
sti
call
pop
jns
pop
cmc
mov
data16
int3
dec
ds
out
mov
sbb
push
sub
push
data16
sub
jmp
lds
xor
adc
pop
out
jae
inc
push
add
ja
imul
in
push
out
pop
jmp
es
mov
jge
cwtl
iret
mov
jnp
add
xchg
pop
mov
dec
pop
pop
dec
cwtl
int3
addr16
inc
out
mov
cmpsl
test
mov
add
rorl
daa
xor
aam
mov
aaa
jnp
sahf
xchg
xor
pop
ret
mov
xor
mov
push
sub
jecxz
jno
push
sbb
data16
in
sti
insl
add
or
jle
inc
fstpt
add
jle
xor
jno
mov
push
dec
ja
adc
enter
cmp
out
aad
notb
adcl
out
and
jl
dec
pop
in
push
push
mov
movsl
ss
sub
clc
outsl
fists
jmp
movsl
mov
fwait
mov
jnp
ss
in
lahf
test
mov
or
cmpsl
scas
xchg
cmp
fsubs
mov
stos
xor
insb
xlat
orl
lret
shufpd
cmp
mov
mov
and
adc
in
repz
sahf
inc
adc
push
pushl
movsl
jge
lahf
stos
jl
ja
push
xchg
xchg
cmp
sbb
add
xchg
outsb
inc
addr16
lods
cs
push
sub
xchg
jg
adc
std
sbb
dec
jns
out
fs
outsl
push
mov
scas
ret
inc
ljmp
test
sti
out
xor
xchg
in
out
stos
add
subl
mov
dec
adc
pushf
mov
sub
ljmp
call
mov
mov
mov
inc
ja
add
bound
imul
loopne
xchg
imul
mov
mov
jp
lcall
and
xor
outsb
mov
insl
ss
push
rcrl
pop
fisubl
fdivrl
adc
rclb
cltd
mov
push
push
xchg
jb
dec
out
mov
rcrb
btc
push
andb
aam
lret
jle
and
test
pop
das
adc
leave
ss
adc
fs
sbb
lcall
jo
popa
shl
push
push
jge
pop
stos
rcll
call
loopne
cli
cltd
pop
add
movsb
outsb
pushf
cmp
sbb
aad
shlb
pop
and
jno
jns
sbb
sahf
sub
cmp
ds
lahf
test
mov
mov
jbe
lea
filds
mov
sub
cmp
bswap
scas
sub
shl
adc
call
aaa
nop
ret
ret
test
adc
stos
addr16
out
or
outsb
fiaddl
inc
popa
inc
clc
push
mov
or
icebp
test
push
mov
xor
push
int
pop
cld
mov
inc
cmp
push
sbb
xchg
mov
ds
mov
cwtl
iret
mov
inc
repnz
insl
adc
mov
shlb
nop
cmp
lret
in
lods
lcall
sti
aad
push
idivl
sbb
cmp
ror
shll
inc
subl
pop
xchg
jg
loope
adc
mov
sub
xor
and
outsl
pushf
nop
pop
icebp
jne
dec
out
or
lds
push
stos
jns
cli
nop
inc
xchg
jle
or
inc
inc
xchg
push
ret
movb
mov
mov
ss
push
out
xor
out
mov
imul
sub
xchg
aas
sbb
outsl
iret
sahf
fsubs
and
jmp
daa
cltd
fdivrs
pop
xchg
sbb
fistl
push
dec
cld
jp
push
mov
cmc
test
pop
mov
sbb
ret
sahf
sub
mov
pop
test
subl
dec
xchg
inc
shll
dec
mov
cwtl
pop
test
insb
popf
sub
icebp
in
mov
sbb
mov
sbb
mov
mov
cwtl
lea
aas
fnstcw
stos
cltd
loop
mov
aam
inc
test
or
das
push
xor
ficompl
es
pop
push
lds
dec
pop
sbb
cli
lods
mov
mov
cmpsb
dec
sbb
leave
xchg
mov
add
aad
dec
xor
repz
mov
movsl
add
lods
gs
test
negb
lods
push
sub
call
pop
xor
mov
and
xchg
jns
lods
add
xchg
mov
mov
mov
dec
test
mov
sarl
xchg
sub
add
cmp
lea
mov
and
frstor
or
fwait
movsb
pop
inc
in
scas
pop
fdivs
fisttpl
sub
sbb
mov
ds
or
jmp
dec
ffreep
inc
add
cld
pop
mov
push
or
daa
and
cmp
dec
jge
sbb
jecxz
adc
mov
rorb
shlb
pop
add
sbb
mov
movsl
push
cmpsb
lods
cli
inc
cmp
push
mov
daa
jne
mov
lret
aam
jle
push
aas
cli
adc
gs
xchg
jmp
sub
xor
or
inc
xchg
jge
mov
add
and
pop
loop
jnp
movsl
arpl
xlat
xchg
push
dec
iret
addr16
xor
cwtl
cmp
das
daa
loope
lret
xchg
test
mov
push
xor
cmp
test
jno
mov
enter
cli
int3
loopne
cmp
mov
lret
xor
ja
and
inc
sub
adc
pusha
xor
and
pushf
mov
lret
push
movsb
addr16
and
lahf
outsb
bound
fiadds
imul
mov
inc
adc
hlt
lock
sub
cmp
lea
push
nop
mov
push
sub
xchg
lahf
pusha
mov
sbb
and
insl
pop
push
fwait
adc
sbb
jmp
ljmp
adc
scas
cli
ja
sbb
jb
int
test
jb
stos
test
cld
xchg
mov
aas
ret
adc
sarb
dec
mov
mov
scas
test
popa
shl
mov
arpl
mov
nop
fdiv
cwtl
out
mov
ja
cmpsb
xor
dec
push
push
jp
sub
pop
cltd
mov
inc
shl
mov
inc
ror
cmp
jle
cmp
cld
jmp
cltd
xchg
dec
loop
cmp
push
test
pop
popf
xor
inc
stos
cmp
loopne
jecxz
imul
add
sub
enter
ret
push
xor
stos
sarb
out
cmp
cmp
mov
mov
psubsw
sahf
pop
mov
shl
repz
ja
mov
lock
inc
dec
add
sbbb
xor
aas
jp
jl
mov
cmp
jo
sbb
into
addr16
xchg
ret
inc
xor
test
in
mov
mov
push
flds
insb
rcrb
cmp
lock
repnz
and
adc
jecxz
dec
out
dec
pop
sbb
sbb
scas
test
and
adc
mov
jno
pop
or
loop
pop
push
test
jge
jo
in
pusha
mov
fimuls
dec
enter
push
aaa
xchg
insl
cmp
cmp
xadd
mov
outsl
ret
mov
sarl
and
xor
cs
jne
mov
sbb
fiaddl
das
xor
fstp
lock
inc
lds
mov
and
push
out
pop
lock
cwtl
jo
ja
jge
inc
dec
lahf
pop
lea
cwtl
cld
stos
inc
sbb
sub
sub
jo
cmp
mov
inc
push
jbe
imul
in
push
enter
xor
sbb
ret
push
jg
mov
jmp
dec
cmp
dec
je
lahf
jns
xor
scas
rcll
add
pmaxsw
cli
stos
jecxz
inc
xor
fs
pushf
stc
push
andl
push
scas
addr16
sub
das
pop
and
ret
cmp
push
or
or
pop
mov
mov
out
jge
cmpsl
cltd
inc
cmpl
xor
or
ret
les
pop
or
mov
cmp
aas
std
mov
xor
sbb
dec
int
cmp
enter
cmpsb
int
rcr
ljmp
out
ret
and
xor
jl
loopne
shll
pop
fimuls
pushf
out
out
addr16
xor
out
imul
notl
es
jmp
flds
shll
push
jb
dec
in
adc
pop
jle
les
add
js
rorl
and
jge
pop
fs
mov
daa
cmpsb
fmuls
mov
leave
mov
mov
push
add
rorl
xchg
iret
fisttps
cmpsb
pop
pop
icebp
cmc
mov
repz
mov
das
mov
out
pop
jnp
ja
call
add
bound
or
xor
xchg
xor
loope
adcb
and
mov
jmp
mov
sbb
mov
sub
add
mov
push
imul
add
mov
mov
sub
or
mov
js
sub
push
lods
fst
ja
inc
sub
push
push
lret
adc
in
and
stc
leave
sti
hlt
stos
or
inc
sbb
mov
xchg
adc
jns
or
dec
test
pop
dec
xlat
push
sub
cmp
mov
fbld
jns
xlat
dec
test
aas
mov
mov
jo
jmp
adc
pop
int3
cmp
cmp
cmp
inc
ficompl
lret
or
dec
jb
mov
mov
jle
push
fimull
inc
xorb
add
jmp
sub
lock
pop
lret
out
insl
clc
gs
enter
mov
out
cmp
in
inc
mov
test
inc
scas
pop
in
dec
push
fnstsw
pop
stc
outsb
fcomps
inc
mov
or
mov
aaa
xchg
dec
jo
adc
cs
test
jl
dec
loopne
sub
jne
dec
cmp
repz
pop
xchg
add
ljmp
mov
jge
psrld
cmp
or
cmp
add
insb
pop
add
inc
add
sub
je
fisubl
int
cs
pop
cmp
jbe
mov
outsl
test
js
add
in
adc
sub
into
sub
jecxz
inc
jne
mov
mov
or
mov
notb
test
icebp
ss
in
or
dec
out
mov
jg
adc
pop
xchg
sub
test
in
push
sti
xchg
xchg
or
scas
mov
es
sahf
dec
in
dec
loop
cwtl
xor
adc
or
xor
adc
inc
dec
push
je
loopne
mov
ret
lcall
adc
loop
jmp
add
xchg
pop
pop
push
add
push
ds
cmp
push
testb
jge
xor
pop
mull
out
test
sbb
jp
rorl
dec
sbb
adc
push
aad
ja
xchg
xchg
icebp
aaa
fldl
mov
lcall
out
imulb
movsb
test
pop
out
daa
scas
test
fidivrs
xchg
mov
ljmp
xor
outsb
or
lods
pop
mov
cmp
fisttpll
mov
jecxz
push
adc
jns
shrb
jp
xchg
addr16
arpl
add
mov
push
jmp
outsl
jl
mov
adc
jg
and
add
int3
inc
jle
or
adc
pop
jecxz
fidivrs
ret
sub
jp
int
ds
je
inc
jne
repnz
mov
insl
loop
inc
mov
mov
or
sub
scas
push
mov
mov
dec
insl
mov
and
xor
test
xchg
push
pushf
jno
addl
mov
push
in
enter
cmp
imul
xchg
jae
cmpsl
sub
add
add
or
sbb
mov
rcll
mov
sbb
inc
clc
cmpsl
filds
ss
cmpsl
fists
jle
dec
push
gs
imul
adc
mov
mov
into
fisubrs
dec
cs
push
imul
sub
icebp
inc
in
add
aam
imul
mov
adc
sbb
pop
mov
mov
add
mov
dec
sarb
or
sub
inc
dec
mov
loope
cmp
aaa
sbb
inc
sub
or
add
rcrl
mov
or
notl
sub
cmc
rolb
les
mov
clc
mov
fcmovnb
and
mov
in
pop
push
test
stc
jp
lret
shl
xchg
out
mov
dec
mov
cli
fs
pop
jns
mov
fidivs
pop
push
mov
fidivrs
jmp
dec
movsl
ss
push
push
mov
mov
cmc
in
pop
scas
cmpl
les
frndint
test
rorl
dec
outsl
push
fcmovu
add
cmp
cltd
movsl
ss
out
mov
xchg
pop
mov
sbb
jae,pt
or
cmp
aad
sbb
mov
loop
je
clc
pop
mov
stc
jmp
mov
and
xor
sub
stc
xchg
pop
testb
mov
adc
shrl
cmpsl
jo
push
cld
sub
or
jo
or
add
stc
pop
cltd
cs
cwtl
notb
cmpsl
mov
mov
cmp
cmpl
lock
jno
cmc
cli
dec
out
cwtl
scas
fbstp
jnp
cmp
jne
mov
sbb
jmp
loopne
sub
sbb
ret
aas
out
mov
aad
outsb
les
adc
pop
mov
xchg
mov
adc
cmp
pusha
adc
aas
insl
push
cmpsb
lods
xlat
pop
add
rorl
jnp
out
mov
mov
rclb
push
xchg
in
ret
pop
outsl
out
lods
xchg
push
fs
or
aad
pop
mov
cmp
add
xlat
xor
push
cmc
stos
mov
arpl
sbb
std
pop
leave
xchg
cwtl
mov
or
loope
in
jae
in
pop
push
lds
lock
sub
xchg
out
inc
mov
sti
adcb
mov
mov
mov
repz
out
fnstenv
testb
sbb
pop
cltd
aaa
push
jns
jmp
or
sub
insl
lret
xor
lds
mov
sub
icebp
and
mov
in
cmp
dec
mov
adc
daa
push
out
inc
xchg
cmp
out
adc
stc
sub
rclb
scas
push
cmp
sbb
sbb
mov
ljmp
outsb
stos
sbb
pop
out
ficomps
cs
cmp
push
cmp
pop
shr
mov
dec
popa
in
das
ror
or
pop
rolb
inc
jmp
jae
and
jae
pop
cmp
out
insl
lahf
stos
ljmp
and
cmp
mov
or
pop
pop
xor
mov
inc
out
jp
outsl
fidivrs
mov
int
add
aas
pop
xor
add
gs
cmp
mov
xlat
jnp
xchg
loopne
inc
jae
add
in
enter
and
loop
fidivs
inc
xchg
in
mov
dec
sbbb
pushf
push
dec
lock
jns
sub
cwtl
jns
fstpl
jecxz
ljmp
xor
mov
inc
sti
push
andl
in
aaa
or
push
fptan
into
jno
xchg
pop
js
pop
or
arpl
cltd
pushf
aam
pop
push
xor
dec
or
popa
adc
cmp
dec
aas
dec
mov
jb
sbb
xchg
fstpl
mov
add
icebp
outsl
ret
pushl
fcoms
insl
testb
add
cmpsl
or
xor
mov
jmp
pop
leave
mov
mov
mov
push
sub
call
mov
idivb
bnd
jp
std
or
fmull
in
or
andb
jle
cmp
lret
ret
mul
and
add
or
inc
in
or
xchg
subl
mov
xchg
cmp
bound
loop
cli
mov
xor
inc
cmpsl
lods
pop
mov
xor
testb
fsubrl
pop
push
jns
repnz
jge
cmp
push
mov
jnp
pusha
adc
fcmovne
insb
fsubl
xor
mov
fists
test
lea
nopl
test
outsl
daa
sbb
jl
int3
mov
sbb
or
rol
notb
cmp
xchg
mov
sahf
data16
je
mov
sbb
shrl
jmp
fwait
call
in
decl
cmp
test
push
mov
xchg
lods
push
push
sbb
cltd
xor
sub
cmp
icebp
push
call
int
mov
mov
push
into
in
mov
mov
inc
lods
inc
sub
add
aaa
and
subl
sub
push
jle
inc
imul
in
xor
mov
mov
and
jbe
in
out
adc
or
xorb
sub
fcmovnb
push
mov
cmp
sbb
sub
out
dec
aaa
test
ret
mov
adc
cmp
scas
lcall
fs
sbb
addr16
dec
or
test
cltd
xchg
test
js
aas
cltd
push
std
mov
sub
xchg
stos
dec
mov
fildl
dec
fwait
lods
icebp
adc
loop
dec
jnp
in
int3
push
jae
lods
or
sub
scas
pop
in
jb
push
push
and
pop
iret
in
shlb
js
cmp
std
lcall
cmp
push
jnp
mov
mov
push
jg
and
cmp
jb
xchg
stos
ds
xchg
sub
dec
adc
jp
mov
xchg
inc
cltd
repnz
jmp
jecxz
test
mov
or
xor
cmp
xor
cmpl
sub
outsb
push
or
sbb
mov
es
iret
push
sbb
mov
popa
sub
xchg
stc
xchg
bound
and
and
jle
sbb
imul
aad
movsb
lds
adc
add
cwtl
in
jl
xchg
imul
inc
dec
mov
out
sub
cmp
fimull
inc
inc
dec
xor
in
hlt
cli
xchg
jb
xchg
sahf
mov
cwtl
ds
pop
fs
aas
pop
cld
mov
leave
fwait
push
sbb
jmp
push
dec
xchg
push
pop
lock
fsubs
sbb
les
xchg
sbb
inc
jno
mov
sbb
in
lret
pop
pop
sarl
or
jge
fsubrl
pop
mov
scas
imul
mov
push
lods
test
lods
jbe
push
stos
scas
bound
iret
mov
and
push
sbb
mov
fldz
push
in
pop
push
and
push
mov
mov
push
std
adcb
insl
fmull
cmpsb
mov
jb
jmp
mov
adc
inc
mov
les
out
ret
and
cmp
xor
sahf
lret
repnz
pop
xor
inc
test
or
ljmp
loope
jmp
sbb
mov
dec
sub
test
shll
pop
and
imul
mov
xlat
scas
pop
push
mov
pop
imul
jmp
stos
pop
js
push
inc
lods
lods
loopne
cs
jl
pop
into
rclb
mov
add
sti
rclb
pop
lret
adcb
xchg
into
add
xor
sbb
lods
mov
mov
lods
mov
push
or
repnz
ss
repnz
adc
test
addl
and
push
jno
stc
xchg
sbb
popf
push
inc
iret
pop
clc
adc
push
xlat
push
mov
cld
and
jl
cmp
rcll
adc
adc
addr16
ret
or
leave
dec
mov
adc
mov
mov
outsl
mov
dec
jns
pop
fsts
testl
iret
in
push
cltd
sti
subl
sti
jecxz
mov
push
push
out
shl
jmp
inc
pop
lock
jns
lock
loope
push
outsb
pop
js,pt
or
fmuls
aaa
outsb
out
incl
mov
shrb
jp
lret
push
mov
stc
dec
mov
mov
test
mov
daa
jg
mov
cmp
aad
mov
shl
iret
inc
mov
scas
cmpsl
push
mov
push
mov
popf
mov
mov
les
xchg
sahf
fistpl
arpl
fidivrs
leave
pop
hlt
adcl
addr16
sbb
stos
fdivrs
sub
call
dec
and
insb
and
mov
pop
cmp
sub
dec
and
pop
mov
leave
iret
pop
inc
das
bound
aam
and
lret
sbb
xor
popf
and
push
push
mov
out
pop
stc
mov
loopne
mov
cmp
popf
stos
cmp
rcrl
mov
fsubl
pop
sub
sub
push
dec
bound
dec
push
mov
cmpsb
adc
clc
or
popa
rcl
hlt
cmp
fs
pop
xchg
in
sub
inc
pop
dec
pushf
mov
ljmp
and
lahf
fs
adc
adc
test
xchg
negl
jne
fnstsw
jae
xchg
push
mov
inc
jns
fadd
lret
pop
mov
push
leave
mov
ss
jmp
inc
sbbb
and
lock
pop
jge
lea
loope
mov
das
lcall
mov
lcall
mov
push
inc
mov
mov
sub
fsub
iret
adc
pop
aas
repnz
mov
or
aas
mov
dec
add
mov
push
adc
sbb
pusha
clc
adc
mov
call
mov
adc
cld
divb
sub
and
jle
and
push
pop
mov
add
ds
pop
in
sbb
push
jle
cmp
push
imul
add
dec
jge,pt
add
ret
cmp
push
sub
stos
rcrb
mul
sub
jecxz
pop
pushf
adc
lret
push
dec
pop
fwait
ret
lods
mov
shl
and
mov
lock
xor
or
jb
pop
in
ljmp
jb
lahf
lret
int
xchg
mov
outsb
aam
ja
sub
push
shrb
fsincos
adc
add
enter
or
in
cmp
pop
push
and
add
lret
jne
and
mov
movsb
data16
xor
out
push
fsubr
fwait
out
ja
hlt
adc
lds
xchg
push
cmp
fucomi
push
fcoml
repz
pop
insl
leave
inc
rcrl
push
jl
sbb
sbb
or
dec
or
adc
cmp
jnp
fsubs
cmp
dec
shrb
mov
jne
lds
addr16
pusha
or
out
dec
in
movsb
cld
jle
arpl
add
fwait
inc
imul
mov
sbb
mov
roll
mov
sub
insb
dec
fldt
jo
das
push
cmp
jge
test
pushl
lahf
icebp
stos
fwait
sub
inc
call
mull
and
fidivrs
hlt
addb
int
addl
xor
dec
rolb
add
pop
adc
nop
lock
icebp
jg
stos
scas
fldcw
addr16
sub
push
rclb
and
aas
jg
jne
inc
mov
mov
fdivrp
test
in
dec
fwait
jo
sbb
fistps
inc
mov
out
lret
or
pminsw
xor
imul
cmp
dec
mov
js
cmp
cmpsl
mov
and
out
mov
js
std
push
pop
add
mov
movsb
jge
inc
lcall
divb
pop
inc
mov
scas
in
ja
mov
pop
mov
scas
test
add
push
inc
mov
pusha
test
fistps
aad
call
pop
pop
mov
bound
pop
shll
push
cmc
mov
scas
jb
sbb
out
shr
push
cmpsl
and
mov
and
insb
add
rol
loope
outsl
sbb
mov
sti
loopne
inc
hlt
aaa
test
mov
sbb
movsl
xchg
xor
pop
stos
orb
ret
test
or
or
jg
les
call
test
push
adc
lahf
icebp
cmp
imulb
rclb
xchg
jbe
add
loopne
popf
adc
fdivl
adcb
mov
xchg
jno
pop
xchg
push
xchg
dec
xchg
mov
sbb
sbb
aad
push
aas
iret
xchg
cltd
add
jb
xchg
dec
out
fucomip
dec
fsts
or
sbb
inc
outsb
sbb
out
xchg
shrb
sbb
mov
pop
pop
dec
xchg
test
mov
mov
fcoml
dec
mov
dec
mov
dec
js
jle
lods
and
rcr
jg
clc
in
fbld
lea
es
clc
test
jb
xor
cltd
adc
cmp
pop
or
dec
pop
out
mov
out
jl
inc
xchg
jle
mov
jmp
add
dec
pop
out
xorb
mov
mov
mov
das
fdivs
cmp
cmpsb
xlat
daa
rorb
frstor
movsl
push
cltd
sbb
mov
nop
sbb
push
movd
jae
mov
out
aas
shl
mov
in
inc
lret
bound
pop
mov
in
dec
jge
cli
lahf
ljmp
and
movsl
lret
or
sbb
pop
and
push
mov
cmp
cmc
cmp
push
push
jae
or
push
or
adc
fdivrp
aam
das
pop
test
mov
dec
lea
in
ljmp
jae
lea
movsl
xchg
shlb
cmpsl
pop
pusha
ret
sahf
cmc
int3
mov
or
pushf
js
cmp
xor
mov
ret
push
icebp
lahf
imul
test
push
stos
push
movsl
sbb
sbb
call
cli
jle
cltd
icebp
and
cmp
jg
mov
dec
jmp
sub
cmp
push
cmp
into
stc
sub
add
add
lock
loop
jb
dec
inc
fldz
inc
pop
or
mov
rcrb
add
cli
inc
dec
push
dec
mov
pop
jmp
incb
xor
movsl
cwtl
cmp
movsb
inc
mov
std
lcall
sbbl
aas
cmp
cwtl
cld
mov
jmp
fistpll
aad
mov
aam
in
addr16
pop
sub
out
add
sbb
jne
xor
ja
and
mov
xchg
cli
lret
iret
outsl
inc
and
xchg
clc
movsb
cmp
scas
pop
lret
add
repnz
mov
adc
imul
rclb
inc
mov
jns
cld
or
dec
xor
mov
dec
mov
xor
lret
sti
repnz
sbb
push
ss
leave
sub
or
aas
sub
in
hlt
pop
xchg
loope
leave
cwtl
push
and
negl
iret
test
sti
daa
lods
jno
inc
stos
inc
sub
jns
pop
ljmp
push
or
mov
mov
sbb
xchg
push
xchg
sbb
jg
pop
or
mov
dec
enter
dec
jle
xchg
sti
pop
sbb
adc
dec
adc
sbb
out
js
cwtl
sbb
das
sahf
mov
fs
xor
das
in
pop
test
rclb
mov
orps
clc
xchg
call
pop
jle
repnz
jno
loop
stos
xor
mov
pop
sbb
mov
adcb
inc
stos
aad
mov
mov
sub
inc
fwait
ljmp
cmp
and
loopne
neg
mov
lret
out
cmp
dec
cli
xchg
and
rcll
pop
sbb
movsl
repnz
mov
inc
mov
repz
cmp
subl
jno
sub
mov
ret
sub
and
sub
into
jge
decb
fistpll
pusha
sub
dec
pmuludq
movsb
fbstp
sbb
pop
imul
sbb
outsl
pop
push
xor
shll
jg
xchg
ja
loop
stos
std
push
test
add
jge
mov
cwtl
dec
xlat
filds
add
je
cmp
nop
jl
sbb
dec
cltd
cmp
add
in
pop
jp
cmp
mov
mov
jl
inc
lds
scas
dec
push
ret
fdivl
sub
push
shrl
cwtl
data16
loop
or
clc
insl
mov
mov
incl
enter
idivb
call
cmp
pop
in
popa
scas
sbb
push
push
jge
mov
repz
lret
adc
push
cmpsb
cmp
inc
or
test
fists
xor
push
pop
mov
sbb
insb
push
jno
std
lahf
cltd
inc
repz
fidivrs
jb
dec
or
cs
cmp
mov
jmp
or
fsts
mov
je
lock
add
sbb
jo,pn
ljmp
js
push
out
in
lcall
cmp
mov
loop
gs
push
xor
jg
ljmp
dec
mov
stos
call
aaa
mov
cltd
mov
and
inc
daa
add
lods
push
mov
fcompl
insl
or
aaa
jae
jge
insb
dec
mov
adc
addb
push
push
xchg
orl
jmp
jns
fistps
or
repz
pop
addb
lods
outsl
inc
fdiv
js
mov
pop
dec
gs
int
lea
repz
movsb
fsubl
fisttpll
jge
jl
outsl
hlt
into
inc
loop
xchg
jb
adc
xor
and
loop
aas
jmp
stc
inc
xchg
repz
or
xor
dec
js
lcall
push
inc
cmp
mov
mov
mov
repz
lret
jb
jp
add
adc
insb
shll
mov
inc
pushf
xor
loope
adc
dec
outsl
call
jp
sbb
pop
jmp
mov
mov
inc
repz
lds
lcall
adc
ljmp
xor
pop
fstl
leave
mov
mov
mov
add
cmp
xor
sbb
fistl
mov
add
hlt
cmp
push
jne
repz
mov
cld
js
dec
mov
xchg
push
out
movsl
ret
inc
mov
jne
jno
mov
pop
mov
push
iret
jl
add
arpl
icebp
outsb
mov
imul
test
jo
stos
test
mov
inc
inc
inc
fcmovne
xor
cmp
loopne
inc
in
and
mov
nop
jb
push
add
js
adc
jl
ds
sahf
rcrb
imul
mov
lock
out
add
mov
in
mov
leave
mov
arpl
imul
cmovge
outsl
gs
imul
ljmp
sbb
sbb
pop
dec
pop
dec
cmpl
cltd
in
lret
arpl
xorl
pusha
inc
es
pop
mov
mov
xchg
popf
scas
sub
sub
and
test
jbe
sbb
aas
outsb
sub
call
sub
xlat
jge
fildll
inc
sbb
pop
cmp
xor
jo
fdivrs
add
inc
out
cltd
xor
insl
leave
repnz
cwtl
and
sub
ret
hlt
mov
pop
fidivl
jmp
pushf
jl
les
inc
mov
add
clc
addr16
daa
fsubrs
fnstenv
jbe
stos
sbb
jns
mov
ficomps
push
adc
cltd
mov
sbb
lods
pop
jl
push
cmp
and
push
lahf
icebp
inc
frstor
dec
sbb
adc
push
loop
data16
popf
sub
push
add
add
loop
in
test
jae
fimuls
adc
xchg
cmp
mov
xchg
mov
pop
mov
popf
push
mov
fists
in
in
cmpsl
imul
setp
push
lods
adc
push
repnz
mov
push
adc
pop
xor
mov
fsubrl
fcomip
arpl
and
mov
repz
xor
insb
call
lods
adc
inc
icebp
mov
add
mov
push
cmp
lea
sbb
or
dec
jbe
scas
lcall
es
cli
sbb
sti
orl
jbe
sub
stos
xor
and
push
jb
mov
xor
cmp
xor
dec
lods
ljmp
je
jmp
ficoms
pushf
mov
out
fildl
jae
jae
popf
adc
sbb
inc
mov
sub
mov
jmp
xchg
mov
ja
xchg
inc
stos
mov
sub
lods
jns
sub
fcomps
or
mov
dec
adc
pop
push
sub
cs
push
fadds
sub
ret
mov
or
push
xchg
cwtl
fstpl
mov
insl
into
dec
mov
dec
jb
loope
push
mov
xor
aam
iret
insl
add
shl
test
mov
inc
cmp
push
sbb
adc
jb
dec
dec
add
rep
or
xor
orl
fiadds
inc
ret
jmp
jb
into
jns
scas
push
push
stc
sahf
das
scas
cmp
decb
ret
mov
cli
and
mov
or
scas
xchg
sub
fs
mov
cmp
rcrl
ljmp
add
xor
shl
jbe
sahf
inc
jnp
xchg
outsb
clc
outsl
aas
dec
dec
pop
mov
fsubr
push
pop
daa
lea
sub
pop
xchg
out
test
jmp
mov
repnz
pop
or
sub
dec
mov
sub
mov
in
xor
jmp
and
and
enter
in
mov
xchg
cmp
sbb
add
sub
jg
std
or
outsl
sti
inc
test
inc
fcmovnbe
cmc
inc
push
out
addr16
cld
jno
rcrl
aam
mov
mov
fcmovnb
mov
cmp
pop
mov
mov
jp
mov
jnp
mov
cli
cmc
stos
pop
xor
loopne
jmp
int3
hlt
pop
jmp
xor
mov
out
mov
mov
lea
jp
mov
divps
les
push
cli
mov
mov
out
adc
push
pushf
dec
aad
sub
mov
mov
pop
jnp
lret
xor
jl
stc
mov
jnp
jecxz
pop
int3
inc
cmp
fcomps
call
test
add
xchg
dec
sub
or
test
jle
movb
jno
jl
mov
sub
test
stos
jnp
cmc
adc
lods
mov
inc
fisttpll
sub
cmp
fdivr
mov
insl
mov
jno
push
add
sub
dec
push
xchg
mov
fcom
call
jg
xlat
pop
lcall
add
add
jae
dec
adc
mov
pop
insb
push
sub
jecxz
mov
lds
jmp
mov
ret
sbb
test
adc
out
repz
sub
lods
xchg
sahf
rcl
dec
nop
dec
dec
mov
mov
daa
leave
aas
mov
into
test
mov
push
das
mov
lret
mov
loope
rcrb
mov
movsl
jmp
adc
out
pop
inc
lcall
pop
pop
int3
dec
shl
adc
lds
imul
mov
repz
repnz
lock
cmp
cld
imul
les
shll
lahf
inc
fwait
shrb
mov
sub
inc
jae
push
inc
push
in
mov
cld
mov
mov
push
jle
sub
cmp
scas
outsb
lea
cli
dec
aas
xchg
imul
loope
cmp
inc
sarb
frstor
cmpsb
stos
push
mov
orb
mov
pop
ficoms
cmpsb
lret
mov
jae
dec
xchg
xchg
cmp
sbbb
cwtl
inc
add
rcll
inc
test
mov
dec
int3
fldenv
dec
pop
lods
dec
data16
addr16
inc
scas
sbb
and
adc
fdiv
in
push
sub
sbb
pop
lahf
mov
scas
imulb
ret
hlt
lods
mov
mov
ret
mov
xorb
jmp
dec
lret
jne
push
test
mov
adc
test
sub
aam
pusha
adc
sbbl
adc
xchg
cli
dec
mov
adc
dec
mov
inc
insl
addr16
sahf
icebp
scas
lret
clc
and
push
push
xchg
or
test
fs
dec
sub
mov
iret
dec
mov
cli
cmpsl
jge
mov
inc
loopne
sbb
and
sti
adc
pushf
fildll
xor
cmpsl
mov
scas
lcall
sbb
aad
shlb
sub
sahf
mov
negl
in
push
je
shrl
ret
jb
cmpsb
inc
xchg
xor
subl
mov
dec
sub
addr16
outsl
leave
fs
pop
push
les
nop
sub
faddl
push
pop
add
push
fs
lock
mov
push
fwait
xchg
lea
mov
jge
lock
into
lock
jns
out
xchg
in
loope
xor
lea
inc
jo
jns
mov
add
push
push
xchg
cs
dec
adc
sub
dec
mov
xchg
in
jge
mov
repnz
jecxz
cli
sbb
pop
cmp
mov
pop
pushf
int3
addb
mov
lea
xchg
ret
inc
ds
mov
mov
dec
cmpps
sub
lods
jnp
sub
xor
dec
popf
mov
and
test
pop
pop
shlb
jo
loopne
pop
xchg
lahf
imul
aam
dec
fcmovnb
adc
inc
out
push
jbe
push
jb
sbb
dec
xchg
dec
sar
cs
out
sbb
arpl
addb
jne
int
es
sub
jo
dec
jp
and
mov
mov
jle
jbe
jbe
push
arpl
fs
outsl
and
aaa
and
pop
adc
jl
in
dec
mov
pop
mov
data16
js
add
and
or
jo
cltd
movb
xor
shll
fnstcw
xchg
dec
sti
mov
jno
ret
mov
mov
icebp
imul
xor
insb
cmp
sub
lods
xchg
shl
push
popf
lret
jne
fwait
int3
mov
push
aad
push
cmp
xchg
or
sbb
push
stc
jo
iret
push
jecxz
lods
ret
frstor
push
addl
xor
jb
cmc
jo
mov
cmp
out
sub
mov
cmpsb
cld
popf
dec
cmp
stc
jne
and
aas
fdivrs
push
das
jno
scas
cmpsb
shlb
int3
and
sbb
add
orl
pop
aad
dec
adc
xchg
sub
std
xchg
aaa
loope
das
push
faddl
notb
loope
or
xchg
push
int3
mov
sti
int3
jb
ja
xor
mov
sbb
ret
cmp
aam
sub
gs
sarb
jmp
push
ret
jle
insb
mov
adc
pop
sarb
inc
das
mov
rclb
mov
add
jb
insl
xor
std
mulb
std
mov
clc
push
in
roll
push
sub
jle
out
in
mov
mov
xor
cld
popa
or
add
test
imul
test
and
test
enter
xor
jbe
int
or
stos
ljmp
lock
pop
fbstp
js
xchg
xchg
lret
xor
xchg
int
cmp
mov
fnstsw
loope
std
mov
push
outsl
jno
pop
les
fsubrp
lock
scas
enter
das
cmc
cmp
pop
pop
add
subb
mov
test
js
sbb
dec
ret
sub
shrl
push
push
mov
mov
jne
hlt
jle
xor
mov
xchg
cmp
ret
adc
leave
jg
xchg
mov
jge
test
lock
jo
sub
sarb
test
mov
fcmovbe
xor
add
ljmp
inc
jb
iret
sbbb
mov
lea
mov
adc
cmpsb
mov
xchg
mov
rorl
mov
call
mov
add
rcrl
dec
out
int
cmp
incl
push
push
mov
popa
fcoms
je
xchg
dec
fs
sbb
mov
mov
imul
fadd
lahf
and
or
cmc
adc
out
push
repnz
rclb
rcll
jnp
lahf
mov
cmp
adc
gs
lock
sub
push
or
scas
push
and
xor
pushf
je
ja
enter
fcomp
cmp
loopne
cwtl
fldcw
pop
decb
cli
ja
xor
lods
cwtl
insb
fimull
push
leave
mov
inc
test
out
dec
aaa
sub
xchg
loopne
jmp
ret
lcall
xor
fsubs
dec
xchg
sub
insb
mov
dec
dec
add
mov
stc
adc
lds
leave
dec
add
je
scas
test
push
cmp
lock
je
xchg
add
and
xchg
cmp
fmull
aam
das
hlt
mov
push
aad
add
or
cmp
call
pushf
arpl
pop
push
loopne
icebp
sub
and
fs
mov
adcb
into
sbb
aaa
jae
cmp
sbb
ss
cmpsl
iret
or
je
mov
and
dec
mov
mov
add
add
pop
mov
outsl
leave
ret
arpl
fildll
jb
jle
mov
adcl
pop
inc
cmp
sbb
or
pop
or
jp
add
insl
pop
jnp
adcb
cmp
fs
jno
xlat
mov
sub
clc
lods
mov
mov
pop
sub
xchg
lret
sbb
psrlw
scas
int
je
jbe
nop
mov
add
int
mov
or
fcomi
test
shl
scas
mov
lahf
mov
iret
lcall
mov
mov
out
ja
push
jp
test
mov
or
push
mov
pushf
inc
mov
jge
pop
js
sbb
scas
pop
or
jno
sub
mov
add
xchg
dec
jo
mov
icebp
jg
push
movsl
mov
pop
ss
jmp
popa
dec
inc
xchg
mov
dec
dec
bnd
mov
lods
scas
xchg
adc
sbb
adc
sub
test
add
jp
out
imul
sbb
orl
xor
push
push
adc
push
popa
rcrb
bnd
aaa
push
lcall
in
test
psadbw
xchg
test
push
daa
sub
test
mov
xchg
cmp
push
repz
push
out
cs
mov
pop
cld
inc
mov
mov
cmpsb
jnp
push
test
sarl
xor
fcoml
ficoms
push
int
movb
add
xlat
gs
inc
stos
repz
cmp
and
inc
push
inc
out
cwtl
in
ss
mov
popa
fs
adc
ss
out
xchg
rorl
fnstcw
jnp
fisttps
sbb
int3
stos
pop
je
icebp
mov
sub
mov
icebp
movsb
add
mov
clc
or
aas
aaa
mov
in
in
sbb
pop
or
mov
xchg
inc
mov
sbb
test
fwait
rcll
mov
mov
data16
jmp
sarl
repz
inc
daa
jbe
sub
imul
sub
pop
dec
inc
inc
jmp
xor
mov
adc
ja
mov
mov
xchg
rcrb
aas
out
jmp
add
jnp
push
repz
pmullw
mov
push
daa
lds
repz
negl
dec
pop
and
sbb
mov
sub
arpl
push
xchg
decl
ret
push
xchg
mov
scas
jmp
aaa
xor
add
bound
clc
xchg
movsb
shrb
mov
testl
clc
ficoms
icebp
xor
sub
mov
call
sub
push
in
out
imul
push
and
sbb
movsl
sbb
mov
sub
push
roll
popa
insb
mov
aam
test
stos
jno
xor
inc
xor
jge
repnz
dec
lcall
xor
outsb
jns
fdivrl
jl
sub
test
mov
or
push
pop
fisubl
stos
add
adc
or
cs
decl
jnp
xchg
mov
sub
stos
add
push
xor
pop
js
rcrb
imul
cmp
pop
in
mov
add
jnp
out
enter
pop
sti
repnz
push
push
xor
xchg
sti
push
jl
sbb
fmul
popa
push
rcrl
int3
sbb
out
bound
inc
lock
cmpsb
data16
xor
mov
adc
repnz
repz
cmp
mov
shlb
xchg
push
jge
in
jg
sti
repz
or
aam
mov
enter
mov
movsl
dec
incb
and
fndisi(8087
xchg
xchg
push
cli
inc
das
pushf
mov
cltd
push
mov
pop
clc
mov
adcb
negl
push
xchg
push
test
xchg
leave
inc
ljmp
sub
push
gs
add
hlt
adc
mov
out
mov
ja
ja
jno
aad
xlat
fucom
imul
addr16
jo
pop
loop
fdiv
cli
sub
push
mov
mov
inc
jmp
sti
sbb
out
iret
iret
mov
lret
in
jg
in
aas
pop
jmp
js
adc
dec
dec
insl
movlps
xchg
cld
xchg
int3
pop
lds
stos
popf
jb
xchg
out
mov
xor
pushl
xchg
push
pop
sar
add
mov
outsb
lret
mov
sub
mov
es
stos
pop
lods
or
daa
or
cs
lcall
or
loop
mov
or
dec
jns
inc
sub
xor
pop
pop
cmp
push
or
push
roll
push
push
jnp
xchg
sub
mov
loop
xchg
mov
lgdtl
sbb
int
inc
int
adc
pop
jmp
mov
and
je
mov
movsb
and
dec
or
sbb
inc
mul
xchg
ret
jnp
mov
pop
push
fs
xchg
jl
sbb
fs
scas
adc
push
pop
mov
mov
mov
popf
loop
into
outsb
push
ss
fdivrl
sbb
mov
or
jb
lret
jp
fists
sbb
in
dec
pop
in
lea
dec
sub
jmp
push
jl
xchg
test
xor
iret
pmaddwd
adc
mov
push
fidivrl
insl
int3
pop
div
jb
adc
js
sub
lea
adc
push
mov
xchg
or
popa
pop
outsl
jo
sub
cld
mov
inc
mov
mov
je
fidivrs
mov
test
cwtl
sub
inc
cmpb
mov
mov
pop
fs
leave
xor
add
sarl
cs
lahf
jmp
pop
push
pop
adc
loop
xchg
push
lods
hlt
out
push
inc
mov
and
cmp
or
pushf
fs
into
jb
cmpsb
ljmp
and
js
pushf
test
ljmp
loopne
scas
fdivp
mov
and
sbb
test
pop
jecxz
roll
mov
mov
nop
lcall
fisttpll
fyl2x
jbe
mov
cmp
lock
in
push
test
sub
daa
xor
inc
sub
in
jo
lea
jp
and
mov
and
sbb
hlt
setnp
and
jae
cld
push
call
mov
ja
ss
lods
dec
stc
cltd
mov
sbb
lahf
popa
adc
sti
aam
lock
add
inc
dec
or
idivl
jbe
out
jp
push
push
pop
pop
data16
cmp
movsb
ret
jb
out
notl
bound
pop
cmp
dec
pusha
inc
imul
test
std
mov
int
jge
push
je
repnz
leave
cmpsb
test
insl
cs
lds
xchg
jno
dec
jge
cli
xchg
stos
and
rorl
repz
mov
fdivrs
out
mov
mov
outsl
jmp
or
repnz
cmp
mov
mov
push
sub
add
in
lret
inc
nop
aas
cltd
insl
pop
fstps
add
outsl
cwtl
pop
xchg
mov
rolb
pop
pop
jb
test
nop
mov
mov
rcl
mov
jae
xchg
sbb
hlt
jmp
scas
rorl
jecxz
inc
mov
loop
or
repz
pop
dec
or
jbe
lds
or
push
inc
adc
in
push
daa
in
dec
fcmovu
mov
es
pop
push
add
sub
int
xchg
shrl
mov
xchg
sub
std
cmp
loop
xor
pop
and
enter
sub
sbb
es
notl
sub
xchg
adc
or
inc
cmp
push
xchg
stos
jmp
or
imul
or
xchg
xchg
test
out
into
mov
mov
subps
popf
sbb
shll
aam
add
pop
push
xchg
nop
bound
loope
add
jle
mov
inc
ret
jecxz
jmp
push
fcmovnu
jle
fs
pop
push
add
std
loopne
aad
les
rclb
adc
push
dec
dec
fsubrl
mov
adc
xchg
inc
icebp
inc
push
sub
xchg
lods
sbb
push
and
idiv
dec
xor
enter
mov
jb
jge
adc
out
add
or
mov
sub
and
mov
jnp
testl
int3
in
push
push
inc
push
sbb
adc
rcr
mov
call
fcomps
mov
or
mov
fstpl
outsb
sti
jne
and
pop
jg
pop
mov
inc
mov
xchg
push
mov
fdivrs
pop
or
and
movsb
jbe
xchg
mov
mov
jbe
pusha
sahf
or
mov
negb
mov
andl
push
xor
ret
jo
mov
lods
sbb
hlt
dec
mov
jae
push
into
inc
out
movsl
int3
inc
sti
cmp
and
add
push
in
rcrl
lcall
leave
or
mov
inc
lods
lock
movnti
out
sti
add
sub
les
lahf
adc
daa
and
int3
xchg
sahf
lods
jmp
and
lods
jae
cmp
je
mov
test
cmp
rclb
iret
mov
push
stos
mov
lea
cmp
cmpsb
aas
push
dec
mov
stos
lods
jae
jp
xchg
push
mov
push
and
mov
arpl
or
mov
imul
mov
data16
mov
cmpsl
jp
or
or
repz
jnp
pop
lods
repnz
and
lahf
jns
std
xor
aam
faddp
gs
insl
pop
mov
cli
loopne
andl
jnp
jle
mov
pop
xchg
sbb
bound
xchg
xchg
cmp
adc
bound
negb
aaa
xor
jl
mov
push
inc
jge
push
or
xor
int
mov
pusha
imul
fbld
jo
test
pop
jle
into
sahf
push
or
ss
sub
mov
mov
data16
test
mov
lods
dec
shl
xchg
adc
aaa
mov
cli
xlat
dec
add
push
or
sub
out
pop
scas
xor
stos
notl
mov
mov
lcall
adc
cmc
filds
movb
sbbb
adc
shl
pop
cld
push
mov
inc
sub
sub
xor
in
adc
cmovp
cmp
jge
lds
mov
xor
js
cmp
lods
aam
into
add
inc
mov
jge
jne
cmp
fldt
lock
mov
repz
arpl
cld
jae
sbb
cs
ds
add
mov
fnstcw
popf
mov
rol
push
mov
outsb
imul
or
xchg
mov
inc
cmp
mov
push
sub
xor
mov
lcall
rcrl
test
aad
pop
ja
cmp
loopne
xlat
cmp
jb
test
jecxz
call
lds
add
push
fistpll
inc
and
sti
mov
jmp
ss
pop
addr16
mov
int3
call
cmc
lret
cwtl
mov
mov
add
mov
enter
rcl
scas
cmp
inc
fwait
xor
sarl
in
mov
cmp
adc
pop
int
cmp
test
jne
sub
movsl
dec
xchg
add
dec
test
sbb
or
lea
inc
or
push
dec
lods
lock
add
int3
fsts
imul
dec
push
imul
sbb
jmp
dec
and
ret
mov
add
xchg
sti
scas
push
ljmp
imul
lds
xor
loop
add
rorl
outsb
mov
mov
test
xor
arpl
jo
ja
xchg
xor
test
push
ja
or
xor
push
or
mov
popa
sub
mov
push
sbb
cmp
stos
inc
mov
pusha
xor
sahf
sub
loopne
aas
orl
rolb
orb
jl
data16
loop
popf
inc
pop
sahf
pop
mov
cmp
dec
enter
insl
adc
xchg
mov
mov
shlb
fldt
xchg
dec
clc
testb
loope
and
ljmp
pop
dec
push
shr
sbb
pop
jo
cld
mov
lret
add
aaa
shl
out
mov
pop
pop
fldt
cmpsl
repz
psraw
roll
popl
ficompl
mov
sub
push
filds
xchg
das
and
sbb
mov
in
aas
mov
iret
insb
mov
outsl
xchg
mov
jnp
movsb
xchg
mov
je
xchg
ss
cmp
push
pop
jmp
pop
xchg
and
dec
imul
jg
jle
mov
xor
push
cmp
mov
xor
enter
push
icebp
orl
xchg
or
pop
add
sbb
jmp
inc
stc
andl
fstpl
adc
les
jg
lret
mov
xchg
dec
sub
mov
mov
and
or
inc
outsl
dec
pop
fidivrs
out
or
rcrl
jae
mov
stos
negl
inc
gs
outsb
sbbb
and
and
push
and
pop
mov
add
cmp
mov
int
in
jl
sbb
adc
test
cmp
add
sub
fnstcw
xor
push
outsl
int3
sbb
cmc
aam
and
xor
lcall
dec
ss
repz
hlt
scas
lahf
xor
push
shrl
add
enter
cmpsb
pop
fs
pop
cmp
fsubrs
stc
mov
jecxz
bound
push
ss
outsb
mov
lret
mov
mov
popa
js
nop
pop
inc
hlt
add
fs
sub
int
mov
cli
testl
xchg
pop
jle
dec
mov
and
ljmp
fistps
sub
sub
push
mov
xchg
not
insb
add
dec
iret
clc
nop
inc
in
outsl
push
ja
mov
loope
adc
stos
sub
add
fdiv
ret
cmp
ficomps
lahf
pop
pop
inc
bound
push
sub
in
cmc
imul
xor
xchg
mov
mov
mov
push
rcl
sub
hlt
add
nop
loop
fdiv
aaa
in
xchg
les
fxch
xor
mov
push
stos
std
sub
insb
or
addb
mov
jg
int
shrl
jo
loope
jae
loop
ljmp
xchg
inc
cmc
ret
push
in
into
push
cs
fadd
insb
push
add
leave
insb
jno
arpl
dec
test
inc
insb
es
dec
pop
xor
lcall
clc
scas
dec
popf
add
mov
pop
scas
and
popf
dec
or
add
sbb
mov
or
cmc
mov
push
mov
push
loop
inc
jmp
pop
rorl
movsl
or
andl
mov
mov
cli
jne
mov
scas
sbb
sub
xchg
scas
add
cmp
mov
shlb
scas
stos
or
mov
push
frstor
fldt
das
sbb
inc
pop
aad
movsb
cmp
loope
fs
inc
mov
das
pop
rorb
gs
push
fstp
or
leave
jg
mov
int
cli
shrb
jne
push
fdivrl
adc
mov
scas
popf
lahf
outsl
adc
cmc
aad
push
lcall
gs
inc
shrl
les
inc
sbb
add
jmp
inc
xchg
xor
mov
pop
cmc
pop
push
ss
iret
xchg
pop
or
fsubs
imul
and
hlt
movsb
cmpsl
popa
rcrl
test
cli
pushf
mov
inc
movsb
outsb
movsb
fadds
pop
jmp
xor
inc
jns
push
jmp
leave
cmp
call
xlat
push
cli
inc
subb
into
rcrl
cmp
mov
pushf
inc
cmp
push
nop
inc
lods
pop
ljmp
mov
orl
aam
xchg
repz
sub
roll
sti
or
les
hlt
mov
loop
callw
and
jnp
mov
repz
ljmp
or
insl
shl
lret
lcall
fsts
mov
dec
push
jo
nop
nop
bnd
nop
xchg
cwtl
jae
cmp
mov
es
pop
mov
cmc
clc
push
pop
xlat
aad
sub
and
inc
mov
push
and
movsb
push
push
test
loope
stos
in
inc
or
je
and
ja
push
es
lahf
pop
ret
jnp
mov
pop
ret
out
stc
std
adc
mov
inc
iret
push
jge
sti
dec
add
sbb
out
jo,pt
mov
xor
sbb
stc
incb
test
insl
xchg
push
jae
mov
mov
leave
cwtl
mov
les
push
mov
pop
lret
or
push
cld
fldl
lret
scas
push
mov
pop
ds
push
subb
icebp
ja
push
dec
cmp
push
add
and
sbb
push
mov
repnz
insb
lods
xor
vmovhps
and
in
fnstsw
rorl
jb
fcomps
xor
repnz
mov
lahf
push
call
lock
mov
dec
mov
notb
jmp
pop
xchg
or
mov
sbb
mov
movsl
fiadds
xchg
rcrb
push
cmpl
inc
cs
xchg
sub
out
lcall
xchg
push
fdiv
aad
xchg
shll
push
pop
and
xchg
xchg
rclb
mov
loop
or
mov
mov
fs
stc
mov
fldenv
add
lret
xchg
adc
mov
call
xor
mov
jle
inc
test
pop
aas
jnp
pop
out
das
clc
pop
inc
add
cmp
push
pop
adc
adcb
lods
or
cmc
dec
lcall
xchg
pop
popa
popl
jae
aam
push
nop
jl
push
jle
popa
fs
mov
mov
inc
push
sti
pop
mov
mov
sbb
ljmp
imul
mov
jge
inc
jle
outsb
jmp
jb
nop
and
sbb
add
das
fcomp
sub
aaa
int
jb
mov
cmp
aas
clc
stos
fcmovb
and
push
push
mov
push
xchg
jp
aaa
js
jg
sub
pop
addb
cmpsb
movsl
push
inc
and
out
stc
adc
std
pop
shl
notb
aam
inc
dec
andl
mov
inc
lret
push
fcoml
decl
mov
test
xor
pop
fcompp
and
mov
jl
push
sahf
sub
or
sbb
cs
imulb
pop
mov
mov
out
bt
int
adc
cmp
xchg
inc
or
fsubs
insl
imul
stos
pop
dec
add
xor
jae
cs
jb
lods
xor
int
fdivrp
mov
cwtl
push
stos
pop
movsl
pop
xlat
adc
inc
or
inc
sbb
je
lock
jge
leave
xchg
or
enter
mov
int
xorl
and
jecxz
pop
add
mov
mov
sbb
cltd
pop
vxorps
jl
ret
jge
pushf
jb
dec
push
dec
xchg
fwait
jp
aam
add
lock
xor
pop
imul
push
int3
sar
aam
mov
mov
inc
mov
mov
sbb
es
loopne
mov
sub
sub
out
xchg
sub
out
lods
mov
out
mov
add
mov
jae
test
pop
jbe
insl
xlat
outsl
test
repz
shr
push
lods
fldenv
xchg
out
int3
adc
mov
lock
cmp
mov
inc
pushf
mov
pop
call
sbb
pop
lret
neg
adc
rclb
cmpsb
push
mov
shl
ret
sbb
mov
cmpsl
cmpsb
push
sub
ror
inc
arpl
popf
cmp
inc
jnp
or
jp
mov
fcmove
enter
fidivl
cltd
pop
inc
push
jl
fwait
mov
sbb
nop
mov
add
repz
daa
pop
movsl
and
mov
mov
insb
or
pop
and
addl
bound
sub
jle
stos
stos
les
pusha
pop
sbb
js
addr16
push
adc
or
pop
and
dec
mov
jnp
push
sti
inc
aaa
jno
inc
mov
xchg
sub
pop
push
xor
adc
inc
ja
inc
jne
jbe
sub
xchg
sbb
fisubs
push
test
jns
cmpl
xchg
jecxz
rclb
rclb
lret
jne
inc
inc
data16
push
jle
stos
mov
arpl
data16
cmp
cmp
sbb
sub
xchg
jne
fbld
jg,pt
not
sbb
inc
iret
pop
mov
inc
mov
cmpsb
jns
in
cmp
in
sbb
xchg
jp
lret
mov
fstp
dec
or
std
add
jbe
movlhps
lret
add
lahf
dec
sahf
mov
cmp
out
rclb
mov
mov
adc
repnz
xchg
push
mov
hlt
pop
xor
movb
sub
loop
and
stc
mov
mov
aas
fsub
andl
adcb
test
adc
lds
mov
pop
test
gs
cli
lret
or
adc
dec
jno
cmp
cmpsl
dec
mov
mov
pop
test
repz
hlt
arpl
iret
mov
imul
push
lea
pusha
pop
aaa
or
mov
add
adc
les
jle
inc
out
sbb
cltd
test
push
jle
lahf
hlt
xchg
or
jp
imull
mov
fwait
push
hlt
dec
pop
fcmovnu
lods
push
mov
sub
mov
stos
pushf
ror
test
ss
push
pop
mov
popa
push
hlt
popf
int3
pop
iret
test
sarb
fwait
jnp
inc
out
and
pop
jmp
adc
hlt
mov
loope
stos
testb
lea
das
or
mov
test
sahf
adc
and
aas
push
cld
cmp
or
sbb
mov
adc
push
clc
lret
add
sbb
pop
mov
jg
sbb
pop
ret
xor
xchg
sub
in
push
repz
fwait
ret
cwtl
int3
pop
repz
dec
xor
testl
adc
aaa
xchg
sub
add
out
adc
bound
inc
scas
sbb
inc
popf
or
jp
imul
sbb
fnsetpm(287
push
or
cmp
sar
daa
rcrl
and
jl
lds
lahf
cli
or
popa
and
mov
mov
mov
push
ds
es
mov
movsl
mov
jge
testl
sub
loopne
jmp
pop
jo
lods
outsl
outsl
xor
adc
fists
mov
xorb
cmp
mov
movsb
stos
adc
aad
or
pop
add
cmpsl
mov
cmp
scas
mov
cmp
leave
cld
cmp
or
and
jb
daa
jno
jge
or
and
jo
add
popf
out
or
lds
and
icebp
jae
leave
in
es
test
decl
xchg
mov
insb
sub
push
outsl
fildl
rolb
dec
fnstsw
adc
test
bswap
call
bound
and
fiaddl
sub
pop
pop
insb
and
mov
pop
lcall
data16
mov
jmp
or
sbb
or
testb
xor
jae
mov
xchg
jns
shlb
fimull
pop
sbb
int
and
push
inc
fs
out
xchg
jecxz
arpl
dec
outsl
mov
sbb
cmp
pop
stos
je
xor
jp
xor
xchg
mov
sbb
imul
mov
sub
cmp
cmp
sahf
jns
test
psubw
cli
add
pop
fs
mov
int
inc
xlat
pop
movsl
shrl
aad
mov
or
mov
data16
call
call
xor
cmp
fdivl
imulb
pusha
or
xor
ret
cmovs
pusha
test
cltd
out
mov
pop
cs
lahf
pop
xor
sbb
in
mov
in
mov
aad
enter
jecxz
test
push
mov
mov
ljmp
inc
inc
rcll
jmp
into
mov
out
or
pop
or
jns
in
pop
dec
add
clc
push
in
sub
and
shll
pop
pop
addl
rcrl
or
addr16
jge
jno
inc
mov
mov
sti
sbb
lds
sbb
adc
xchg
lret
pushf
jbe
movsb
sbb
int3
pop
pop
and
jle
mov
incl
fmul
pusha
sub
xchg
inc
jb
and
xchg
xor
imul
or
mov
mov
xchg
dec
jne
xor
fiadds
xchg
negb
add
incl
xchg
or
and
or
inc
in
int3
ss
rcrb
pop
loop
cmc
lcall
sub
push
mov
xor
gs
test
mov
movsb
cs
jecxz
test
jl
enter
daa
cmpsl
ds
cmp
mov
xor
rorl
and
addr16
out
xchg
outsb
push
mov
mov
orl
and
in
sub
jmp
inc
push
sub
pop
loopne
repz
add
leave
sbb
bound
inc
jbe
jl
adc
adc
add
add
stc
or
mov
inc
rcr
push
lds
ss
jo
clc
dec
inc
test
lret
shr
aam
jl
adc
jb
xchg
mov
add
aad
mov
mov
leave
or
decl
adc
shrb
cld
adc
es
mov
mov
sbb
pusha
dec
cmp
push
sub
scas
hlt
add
cwtl
cmp
mov
sbb
lea
sbb
lret
mov
mov
loopne
and
shll
mov
adc
outsb
out
pop
or
and
fcoml
aad
push
out
jecxz
mov
insl
in
movsb
jae
dec
sti
mov
or
mov
stc
test
dec
pop
cmpsb
add
sahf
sbb
cltd
fstl
xchg
push
push
mov
lods
push
int3
sti
pushf
jle
sbb
call
cwtl
add
cli
je
jg
dec
pop
push
out
xchg
push
out
mov
pop
mov
push
adc
and
stos
and
aam
scas
jmp
ljmp
test
out
jne
xor
cmp
sbb
lods
xchg
push
jb
and
mov
stos
scas
icebp
jge
test
shr
dec
out
repnz
popf
xor
xor
ficoml
out
push
or
cltd
movsl
int
xor
ljmp
sti
fisttpll
sub
lods
pop
or
movsl
in
ljmp
cmp
fmull
das
lret
or
jo
stos
sub
out
popf
rolb
adc
outsl
push
mov
in
push
mov
out
jno
cmp
jne
inc
aad
cli
in
test
xor
xlat
xor
xor
stos
sti
mov
and
sub
lods
jns
das
inc
jnp
push
dec
sti
enter
push
jmp
xchg
bound
mov
sbb
or
jle
cs
loopne
fimull
mov
hlt
xlat
mov
or
cltd
sbb
sub
mov
icebp
gs
std
or
dec
adc
mov
decl
cmp
pushf
cmp
push
call
leave
mov
lcall
das
pop
fs
sbb
addr16
dec
add
ret
sub
test
mov
push
mov
cltd
and
push
hlt
and
fs
xor
mov
push
jne
fs
adc
jg
lods
aaa
and
mov
lds
das
sahf
mov
rcll
pop
out
dec
jmp
inc
sti
lods
sbb
lahf
adc
frstor
mov
fstl
mov
inc
xchg
ret
lods
lods
mov
sbb
cwtl
cmp
mov
scas
push
mov
gs
fsubrs
test
sbb
scas
xor
cmp
sbb
insb
lret
cld
sbb
jns
jl
or
adc
xchg
test
push
dec
add
push
xor
pop
add
in
pop
fisttpll
pop
ds
outsl
add
mov
loop
mov
and
cmpsl
pusha
psrlw
lds
mov
sub
test
mov
jg
mov
mov
stc
dec
dec
lcall
xchg
int
mov
int3
and
pop
out
dec
pop
push
push
mov
pop
in
inc
xchg
subb
lods
inc
dec
out
insl
nop
push
daa
add
push
popa
ljmp
xchg
ljmp
addr16
push
jmp
mov
xor
add
repnz
aad
pop
sbb
xor
insb
pusha
jnp
mov
lcall
or
ret
pop
filds
mov
jge
lock
ja
popf
cmc
or
clc
pop
or
stos
or
dec
mov
adc
jge
popf
pop
fimull
stos
loope
inc
push
scas
std
add
testl
mov
lcall
adc
mov
sbb
stc
fldcw
inc
andl
cmp
adc
test
cmp
xor
adc
lahf
mov
mov
fistl
addb
sarb
adc
sbb
dec
xchg
jmp
xchg
test
lahf
ficompl
hlt
jae
aam
inc
insl
inc
or
stc
scas
movsb
or
mov
xor
loop
dec
add
mov
xchg
push
adc
test
mov
lods
jo
lea
ljmp
orb
mov
and
xchg
test
sub
lock
fistps
cmp
jo
xor
or
das
inc
inc
sbb
shlb
sbbl
jo
outsb
aad
dec
inc
dec
fadds
loope
mov
cltd
push
cld
mov
out
scas
pop
loop
sbb
cwtl
mov
ja
mov
mov
cmp
mov
ljmp
or
in
pop
lcall
cli
je
inc
sbb
je
add
push
orl
push
and
mulb
jb
and
jmp
mov
rcr
cmp
imul
xor
xchg
xchg
xor
out
xchg
loop
xchg
roll
dec
addb
mov
icebp
test
ds
insb
pop
pusha
outsb
test
mov
ret
pop
inc
inc
pop
cmc
fcomip
gs
pop
mov
xchg
jg
out
pusha
xor
or
int3
bound
mov
lcall
mov
mov
mov
testl
push
test
adcl
xor
sahf
mov
push
popl
jle
out
or
sti
bound
je
push
inc
push
sbb
mov
imul
stos
mov
sahf
add
push
jecxz
repz
push
dec
clc
push
or
inc
iret
adc
arpl
jns
jno
sbb
push
insb
sbb
popf
fs
add
sub
jp
ljmp
mov
jo
ja
adc
stc
shr
inc
addr16
out
mov
cmp
dec
out
xor
cmp
ss
in
push
xor
repz
sti
xchg
sbb
cmp
fincstp
jp
mov
addr16
test
mov
jbe
sub
subb
jge
fsubrl
daa
sarl
adc
leave
inc
inc
sbb
jg
scas
pop
in
movsb
mov
inc
call
xchg
test
adc
jnp
stos
imul
cs
js
out
adc
lock
adc
cmpsb
and
xor
mov
pop
inc
jnp
movsb
inc
andl
popf
adc
mov
lods
pop
lahf
adc
mov
push
insl
mov
xor
and
jge
bound
insl
lcall
cs
mov
out
stos
jns
leave
ja
out
jmp
jecxz
repnz
loopne
and
inc
push
mov
adc
xchg
xor
push
in
std
xchg
push
adc
adc
pop
dec
mov
push
loope
test
rolb
cmp
sub
cmp
or
insl
adc
xchg
push
popf
mov
hlt
rcrb
fbstp
ret
sub
inc
dec
mov
int
adc
and
jbe
and
out
and
cwtl
pushf
arpl
ja
pop
sub
in
push
adc
into
test
xor
xchg
mov
xlat
fcmovnb
jg
pop
sbb
in
jne
mov
and
loopne
frstor
cmp
inc
mov
mov
int3
jge
fwait
dec
push
imul
xor
mov
mov
xlat
push
jo
dec
and
insl
mov
adc
sbb
push
pop
gs
xchg
fmul
cmp
cmp
inc
and
lods
icebp
push
out
xchg
xor
aad
jns
jae
out
push
faddl
jge
mov
test
out
xchg
adc
mov
shrb
and
rcrl
out
sub
das
cmp
stos
loope
aaa
xor
hlt
cmpsl
shrl
fdivl
repz
mov
mov
add
loop
pop
lcall
std
out
push
dec
and
or
hlt
inc
leave
mov
ret
outsb
test
mov
jl
pop
push
mov
mov
adc
mov
add
or
xchg
mov
test
xchg
inc
negb
mov
jecxz
xchg
push
lea
leave
lock
xchg
sahf
or
sarl
inc
add
inc
daa
jne
mov
push
adc
fcompp
leave
mov
sbb
sarb
outsb
inc
sub
inc
xlat
ret
fimuls
ljmp
mov
xchg
std
frstor
add
inc
lea
lea
test
mull
push
adc
add
add
jno
mov
and
push
and
imul
imul
in
xchg
rcr
sub
sub
movsb
jae
cltd
push
xor
mov
inc
pop
insb
fisttpll
jp
push
ret
xor
mov
ficompl
push
mov
std
sub
in
dec
dec
jp
lds
mov
js
dec
pop
or
jp
mov
or
pop
push
xadd
jge
fsubp
mov
adc
nop
push
fsts
push
and
pusha
xchg
shll
push
insl
xor
adc
mov
in
xor
in
push
and
cmpsl
roll
test
pusha
pusha
gs
push
addr16
lret
sub
mov
leave
pop
out
mov
jno
shll
sahf
or
adc
clc
add
es
mul
dec
and
and
xor
push
cmp
and
mov
nop
and
push
cmpsb
test
shl
cltd
gs
rclb
mov
jno
mov
sbb
movsb
loope
loop
xor
mov
cmpb
int
ret
push
jle
and
movsl
mov
sub
je
inc
cmp
jae
ljmp
movsb
jl
stc
push
lret
test
add
lds
lock
adc
pop
jge
push
jo
jecxz
pop
adc
mov
xchg
add
cwtl
cltd
jnp
dec
sbb
push
lea
and
int
cmp
jne
mov
mov
push
cmpsb
loopne
daa
fld
or
pushl
insb
ror
test
into
es
lret
in
dec
shr
xor
pop
int
push
dec
push
rorb
inc
sub
sbb
cs
add
les
cmp
aas
push
xchg
pop
out
faddl
fstpt
mov
ret
mov
push
vmptrst
and
rorb
xor
pop
push
mov
mov
lahf
insl
adcb
mov
xor
xor
mov
jns
jecxz
mov
lcall
push
shrb
adc
loope
lret
push
add
in
pop
imul
sti
mov
inc
clc
sub
ljmp
fwait
mov
sub
mov
out
int
mov
mov
sub
jo
mov
rcrb
fs
les
mov
add
dec
push
cmp
repz
mov
lea
sub
mov
inc
ficoms
ljmp
xor
ficompl
fdivl
xor
int
ja
and
mov
cwtl
sub
push
mov
jge
adc
arpl
enter
das
and
dec
cmp
xchg
mov
push
stos
fdivrl
sbb
push
das
push
mov
lods
mov
aas
out
xchg
dec
aaa
mov
cmp
pushf
mov
pop
out
and
sub
xchg
lcall
or
ja
andl
dec
loop
push
mov
sti
push
inc
lods
mov
cmp
fwait
cld
test
nop
push
mov
xor
push
jbe
and
pop
das
stc
fs
cmpsb
xor
xchg
fwait
mov
adc
inc
cmpsl
lahf
xor
add
push
jnp
repnz
cmp
mov
inc
xor
jle
inc
fs
call
jle
stos
sbb
stos
mov
test
xor
jmp
inc
sarb
int3
dec
xor
sub
leave
xor
and
xchg
push
pop
lds
jb
addr16
jge
dec
out
mov
adc
sbb
dec
js
lcall
add
mov
and
or
and
lcall
stc
dec
rolb
mov
inc
loopne
push
push
rcrb
scas
repz
iret
push
mov
jp
jnp
lret
and
movsb
pop
loope
xchg
sub
stos
jmp
cmc
stc
xchg
addr16
inc
xor
sub
in
ja
mov
jbe
orl
jo
movsl
adc
into
inc
mov
popf
loop
bnd
fwait
cmc
jae
sbb
add
jb
sbb
pop
gs
cld
popf
icebp
add
mov
lods
pushf
inc
int3
mov
insb
pop
das
les
mov
imul
ret
add
and
sti
scas
loopne
nop
adc
shrb
push
add
mov
fildl
and
mov
stos
std
int3
outsb
and
loopne
dec
mov
call
and
push
out
jbe
in
jg
jns
jno
cmp
loope
sub
dec
mov
inc
push
cmc
or
cmp
add
adc
or
push
inc
bsf
adc
and
and
fstl
aas
push
add
xchg
out
cmp
fistl
sbb
jbe,pt
push
pusha
mov
mov
xor
and
mov
mov
mov
mov
adcb
hlt
sub
fstps
in
cmpsl
outsb
cmp
xchg
test
mov
xor
add
inc
ror
scas
cmp
jne
add
pop
mov
nop
xor
cwtl
adc
xchg
or
lods
das
sub
xor
mov
pusha
add
js
int
pop
xor
sbb
in
test
outsb
jb
adc
test
les
jo
enter
iret
loopne
loop
in
shlw
push
cmp
pop
push
sbb
addb
or
sbb
mov
cld
inc
or
outsb
push
fimull
nop
xor
sbb
test
sub
jle
xor
aaa
aas
pop
push
lods
lods
int3
fldcw
sbb
cld
test
push
lock
pushf
adc
mov
cmp
test
dec
jno
stos
imul
mov
test
ljmp
jle
fndisi(8087
inc
jno
mov
cmc
pop
mov
rcll
sbb
aam
lea
loop
jle
sbb
push
xor
pop
jns
decb
or
mov
sub
jns
jmp
shl
mov
rcrl
cwtl
mov
and
sub
adc
dec
daa
loope
dec
xor
scas
das
nop
jg
lcall
and
xchg
xchg
fisubs
and
out
mov
push
fcomi
push
cmc
stc
nop
outsl
ds
mov
dec
jae
xchg
push
lahf
inc
and
adc
jns
mov
cmp
xchg
popa
sbb
add
and
add
sub
or
adcl
sub
mov
lods
dec
gs
push
movsl
pop
cmpsb
or
mov
sbb
mov
rorb
xor
mov
xor
test
add
sbb
xchg
push
mov
dec
cs
dec
gs
jle
daa
mov
movl
xchg
sub
lahf
mov
ffreep
lret
movsl
call
sbb
xchg
fadds
lea
stc
cmp
mov
mov
mov
add
ja
sub
movsb
push
jne
add
and
sbb
imul
aam
sbb
stc
push
xchg
js
mov
stos
mov
cs
dec
gs
jmp
imull
and
lcall
aad
sub
int3
push
mul
loopne
leave
movsl
push
jg
dec
loope
test
fwait
cmpsl
xlat
cwtl
ja
popa
add
add
out
test
sahf
jnp
sar
add
cmp
loope
push
cmc
test
sub
icebp
fsubrs
ja
adcl
rcl
jp
ds
bound
pop
in
pop
add
andb
test
jecxz
in
mov
mov
test
jp
pop
leave
lds
cmp
hlt
lret
push
mov
adc
int
sub
or
das
stc
dec
xchg
mov
aaa
scas
mov
adc
in
cmc
add
dec
movsl
pop
sbb
pushf
enter
mov
out
loop
mov
out
dec
xchg
dec
adc
lret
adc
out
out
inc
in
mov
mov
pop
dec
out
outsl
jb
lret
sub
and
xor
jo
dec
scas
sti
arpl
stos
push
lret
dec
cmp
xlat
mov
cld
jmp
sbb
xor
dec
or
mov
outsl
jo
and
cwtl
mov
incl
stos
data16
xor
cmp
pop
scas
mov
mov
inc
add
adc
pop
add
movsl
cwtl
cmp
xor
cmp
ja
imul
daa
pop
cmpb
sub
inc
push
inc
mov
and
mov
mov
inc
push
leave
ret
sti
stc
into
push
enter
std
shll
aas
mov
dec
cmp
push
cwtl
insl
les
adc
mov
and
sbb
jp
sub
js
sti
clc
and
js
insl
mov
mov
mov
in
pop
pop
cmpsl
cmp
in
cli
push
xor
in
jmp
pop
cmp
ss
inc
cmp
sbb
or
mov
call
dec
imul
xor
jno
addr16
sbb
sbb
xchg
repz
les
jnp
pop
and
mov
shrb
xlat
and
fnstsw
dec
in
or
mov
int3
cs
ss
fbstp
ret
es
inc
xlat
test
mov
sbb
inc
inc
in
xchg
les
repnz
or
cmpb
pop
jnp
lods
data16
sahf
sbb
std
sub
mov
sbbb
out
dec
add
mov
mov
loopne
jbe
push
lcall
mov
push
add
mov
dec
mov
jp
imul
mov
imul
test
jmp
adc
xlat
mov
push
sub
lods
lds
mov
mov
test
adc
xlat
sub
out
dec
pusha
filds
inc
fcompl
inc
rcrl
inc
mov
push
es
pop
cmpsb
adc
fnstcw
test
frstor
mov
test
jge
mov
add
or
stos
push
mov
push
and
fs
frstor
popf
jge
mov
sub
or
pop
fwait
sbb
imul
mov
nop
out
and
roll
cmp
xchg
scas
rcrb
mov
dec
cltd
inc
xchg
mov
mov
lcall
xchg
