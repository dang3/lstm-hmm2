push
add
push
xor
in
push
mov
orl
aas
rorl
push
add
mov
insb
shrb
push
test
adc
cmp
je
divb
call
or
push
adc
push
push
cld
ds
and
push
or
test
add
or
sbb
pop
pop
pop
leave
add
mov
push
stos
je
or
enter
testb
xor
mov
rcl
cmpl
call
xor
dec
jne
not
pop
ret
movsb
fwait
jne
sbb
leave
aam
movl
incl
call
clc
test
shr
jecxz
push
call
lock
sub
push
xchg
or
inc
push
decl
shrl
stos
add
or
je
arpl
jns
inc
add
xor
in
pop
adc
xchg
subl
repz
enter
sbb
cwtl
adc
or
push
or
or
or
or
or
or
adc
adc
adc
adc
adc
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
push
or
cmp
jecxz
or
or
out
or
sbb
call
ljmp
cmp
inc
sub
xor
xor
xor
xor
xor
xor
negl
mov
call
mov
mov
incb
push
sbbl
adc
std
enter
dec
sbb
cmp
add
roll
hlt
cmp
je
mov
jne
add
mov
mov
pop
inc
sbb
and
jmp
idivb
and
cmp
icebp
jb
mov
sub
and
lea
nop
push
in
in
mov
inc
and
fiaddl
jae
pop
lret
and
mov
lea
adcl
jb
jp
je
insb
mov
push
cld
push
jbe
inc
and
jp
push
dec
mov
cmp
xrelease
mov
xchg
push
aam
mov
add
mov
dec
push
in
repz
xchg
mov
mov
sbb
fwait
mov
mov
insb
dec
into
cltd
fnstenv
adc
test
xor
and
nop
fnstenv
rcll
sbb
dec
and
nop
test
ljmp
rcrl
rclb
dec
mov
inc
sbb
mov
sbb
or
and
sbb
ja
pop
and
inc
mov
jmp
sub
rorl
and
adc
mov
inc
int3
and
cmp
lret
pop
push
or
mov
sbb
pop
mov
and
insb
dec
inc
out
and
push
xor
dec
fildl
pop
sub
sbb
lock
inc
outsb
xor
pusha
dec
xor
inc
or
or
in
add
cmp
jecxz
sti
mov
enter
or
mov
test
hlt
lret
sbb
adc
pop
mov
pushl
adc
lock
loope
pop
fs
push
pop
mov
push
popf
shrl
clc
jmp
cwtl
lock
push
scas
jnp
iret
clc
inc
pop
fs
sbb
dec
lds
jmp
dec
aad
test
add
movl
fsubrs
andb
fcompl
and
mov
movsl
mov
push
push
sub
or
es
daa
and
lock
push
hlt
aam
xor
adc
cmp
mov
and
mov
jno
and
mov
adc
outsb
or
sbb
push
insl
adc
adc
adc
int3
lret
adc
or
lods
or
mov
or
xlat
mov
in
inc
pmuludq
xchg
fsubrs
mov
lock
adc
inc
aas
nop
cltd
cld
xor
scas
iret
add
or
push
cmp
cmp
sbb
add
dec
pop
mov
sub
xor
and
add
call
inc
and
pop
imul
dec
std
bndldx
xor
push
or
and
and
inc
and
xchg
pop
sbb
or
cwtl
xchg
xor
adcb
lds
sbb
or
sbb
cmp
adc
sub
adc
fs
call
and
xor
push
push
sbb
mov
add
cmp
jne
movl
mov
jns
mov
clc
shr
je
in
dec
bt
inc
sub
sbb
and
and
mov
or
lahf
push
sbb
or
out
clc
mov
test
aam
jne
xchg
and
mov
pop
lock
mov
les
cmp
mov
jl
or
inc
jno
or
mov
aam
inc
pusha
loopne
cli
xchg
test
orb
jp
loopne
test
and
adc
mov
test
jmp
popf
sub
sbb
addr16
test
es
pusha
dec
js
xchg
imul
xchg
nop
bound
sbb
or
lahf
and
xchg
test
or
mov
xchg
push
ds
sub
test
pop
dec
xchg
adc
adc
sbb
les
test
lods
or
test
mov
dec
push
pushf
mov
and
adc
outsl
stos
insb
or
fs
dec
sbb
out
movsb
or
mov
xchg
adc
fnstenv
adc
xor
mov
xor
xor
jb
sbb
std
fmuls
into
and
mov
adc
sub
inc
fsubr
inc
nop
enter
bound
inc
or
jo
or
xchg
add
or
jo
scas
add
nop
fcoms
pop
stc
add
adc
or
push
loope
mov
sahf
cwtl
scas
rolb
cmp
inc
mov
sbb
xchg
adc
movsl
add
pop
cmp
lods
cltd
inc
cmp
mov
adc
aam
and
pushf
sbb
daa
or
aaa
push
fs
xchg
xor
call
inc
fsubl
in
adc
lret
dec
lock
inc
shlb
dec
jbe
or
inc
inc
and
loopne
sbb
mov
movsb
jne
fimuls
push
mov
and
mov
bound
dec
sbb
push
cld
mov
push
xchg
pusha
mov
test
sbb
xor
mov
or
fwait
add
insl
test
and
add
and
aam
inc
cmp
inc
sub
and
in
or
xchg
and
lret
nop
leave
lret
xchg
mov
mov
enter
lret
nop
cltd
lret
nop
lret
nop
or
adc
inc
inc
jno
or
imul
pop
and
inc
push
xor
mov
inc
les
test
sbb
inc
and
inc
enter
jno
mov
adc
mov
and
mov
cmp
inc
fs
xor
jl
out
inc
or
pop
sub
cmp
and
cmp
mov
lock
or
mov
lret
jb
and
mov
ret
sbb
int3
arpl
push
sbb
push
mov
sbb
sbb
das
mov
mov
cmp
sbb
loop
cwtl
pop
into
fsubrs
pop
adc
ds
ret
sbb
or
enter
test
mov
sub
mov
inc
or
xchg
call
andb
pop
lret
inc
push
xor
xor
sbb
sbb
push
sub
and
inc
sbb
nop
pop
jnp
push
or
loope
mov
inc
adc
xor
sub
push
jle
adc
adc
nop
loopne
fcoml
mov
jae
cwtl
sbb
icebp
or
xchg
loop
adc
call
mov
dec
xchg
test
xchg
gs
ja
mov
sub
lock
in
mov
jge
dec
and
fists
or
or
in
inc
shlb
mov
pop
inc
clc
and
lods
mulb
mov
sbb
fcoms
or
test
mov
jl
push
fadd
fmuls
inc
or
or
test
inc
inc
and
cmp
add
mov
cmp
push
loop
sbb
cmp
scas
sahf
inc
push
sub
mov
dec
mov
fs
pop
pop
xor
pop
inc
pop
ret
test
mov
push
xor
das
cmp
jge
je
jl
mov
mov
ret
push
sub
push
jle
mov
shlb
lods
push
xor
mov
movsb
xor
rorl
xor
sbb
xchg
mov
lods
push
and
icebp
xchg
mov
or
test
sarb
enter
mov
inc
int3
and
les
adc
cmp
push
and
or
fcoml
test
clc
lock
cmp
push
adc
mov
les
aam
inc
inc
mov
adc
hlt
and
les
mov
push
inc
mov
sub
add
adc
loop
sbb
or
adc
and
lods
rorb
push
cmp
mov
adc
enter
filds
pop
lahf
xchg
cs
push
add
dec
xchg
mov
sbb
mov
lods
pusha
int
mov
inc
or
flds
or
add
loope
arpl
sbb
clc
inc
push
into
inc
ret
lea
mov
mov
xor
and
iret
pusha
pop
sub
test
and
outsb
push
adc
lcall
mov
mov
jmp
arpl
xchg
call
loopne
lock
push
ds
cmp
push
and
push
push
pop
add
jne
cmp
add
add
jecxz
dec
ret
add
sbb
jb,pt
jmp
jl
dec
ror
call
and
adcl
mov
mov
andl
lret
jne
call
adc
test
jae
cmp
inc
jle
or
inc
movsl
and
dec
add
repnz
test
push
adc
mov
pop
mov
push
or
jle
add
add
pop
lea
dec
rcrl
fisubrs
or
movzwl
add
inc
mov
notb
jmp
adc
ret
mov
lret
pop
adc
inc
sbb
sti
sti
repz
xchg
push
sbb
subb
je
adc
mov
fcomps
ss
jne
cmc
pop
cmp
push
sub
jne
call
gs
insb
add
icebp
add
adc
adc
ss
sti
mov
call
leave
cmp
sbb
jbe
leave
and
aam
sbb
jbe
jmp
sbb
push
mov
mov
sbbb
in
in
nop
mov
adc
adc
imul
jle
lea
inc
sahf
jl
enter
sbb
in
jbe
out
js
nop
push
push
aaa
call
sub
hlt
sbb
shr
cmp
std
je
or
sarl
arpl
mov
cmp
jl
sub
push
test
shll
adc
fsts
jg
test
into
or
add
and
pop
pop
cwtl
sub
mov
dec
jl
sub
addb
movsl
movl
push
test
dec
enter
mov
cwtl
rolb
and
xchg
cs
mov
mov
stc
xor
pop
sbb
cli
adc
mov
xchg
testb
sub
inc
test
xchg
fs
inc
in
inc
dec
mov
xor
aas
adc
adc
jmp
pop
ficoml
rcrl
sub
push
inc
cmp
adc
fists
mov
cltd
adc
mov
sub
hlt
push
or
sub
test
test
or
jne
mov
ret
je
lcall
push
cmp
data16
and
pop
dec
pop
add
aas
shrl
andb
mov
btc
xor
das
lcall
pop
je
ret
movsb
fistpl
mov
testl
mov
nop
jl
add
sub
xchg
cmpsb
pop
xor
inc
dec
inc
adc
lcall
push
or
and
stc
fsubl
cmp
dec
jne
xchg
in
insl
bound
mov
popa
mov
push
push
push
adc
ret
inc
mov
cmpsb
aaa
test
push
mov
call
enter
xchg
dec
and
mov
xor
test
xor
outsl
int
inc
mov
xor
jl
in
mov
cmp
je
xchg
lods
adc
push
in
cwtl
xchg
fnstcw
pop
pop
lea
test
cmpb
je
cmpb
cmp
sbb
movsbl
sub
sbb
mov
cmpsl
adc
dec
jns
lock
or
popf
push
divl
mov
push
push
adc
and
jle
dec
cmpb
arpl
adc
test
jecxz
mov
int3
jl
pushl
and
dec
hlt
adc
in
mov
jmp
mov
jne
inc
int3
lods
jo
ss
pop
call
inc
inc
mov
sbb
push
mov
fstps
or
fisttpll
jmp
stos
lods
sahf
pushf
test
push
add
inc
js
sub
or
test
add
push
push
add
push
ret
pusha
es
push
inc
push
movsb
sub
fdivrs
fs
jo
and
adc
sub
insb
dec
sbb
cld
jo
mov
movsl
inc
cmp
sbb
push
std
mov
and
adc
rorl
pop
iret
cmp
add
dec
sub
fs
sarb
dec
inc
push
add
push
je
jp
imul
test
pusha
inc
lcall
mov
mov
call
adc
push
push
jns
xchg
clc
push
dec
push
mov
popf
xchg
or
lock
lcall
inc
movsl
mov
mov
dec
and
hlt
mov
fists
iret
and
rcr
jne
push
adc
mov
push
addb
pop
cmp
add
inc
add
pop
cmp
cs
lret
jmp
adc
or
mov
adc
pop
pop
adc
jge
add
das
push
test
jge
add
idivb
pop
je
mov
lods
mov
add
incb
jl
mov
xchg
fildl
mov
sub
ficomps
cmp
in
test
add
test
es
shl
xor
mov
adc
in
cmc
mov
push
sub
adc
leave
pop
adc
inc
out
cmp
jmp
cmpb
adc
adc
sub
stos
sbb
push
and
xchg
into
sub
sub
in
xchg
pop
push
cmp
adc
mov
daa
rol
mov
xchg
arpl
stos
enter
mov
mov
fiadds
loopne
or
aaa
mov
inc
stc
idiv
and
lods
mov
or
sbb
dec
pop
adc
jmp
mov
sub
mov
das
inc
movsb
xor
xor
add
lds
fdivr
and
pop
sbb
mov
scas
jl
pop
push
sbb
mov
xor
mov
je
mov
xchg
add
mov
pop
jl
test
pop
or
sub
dec
jno
imul
jecxz
cld
int3
adc
adc
add
pop
cmp
mov
ss
in
push
and
cmpsb
sub
mov
lds
mov
sbb
test
aas
sub
mov
dec
sbb
daa
inc
sbb
push
adc
inc
pushf
adc
or
sbb
jne
orb
dec
test
inc
xor
sub
add
xchg
inc
xlat
insb
mov
xchg
lea
adc
xchg
repnz
and
push
sbb
pop
popa
pusha
mov
dec
pop
aaa
mov
stos
dec
test
jp
insl
pop
push
dec
clc
call
int3
add
lods
xlat
stos
lretw
xchg
and
repz
clc
imul
dec
sub
adc
mov
shrl
adcb
fcomps
shr
add
dec
jmp
add
cmpsb
mov
xchg
push
push
mov
lcall
cmp
je
sub
movsb
add
stos
inc
mov
sbb
adc
push
sti
or
sub
push
cli
inc
std
push
loop
inc
out
mov
cmp
add
and
push
add
adc
xor
dec
xor
fwait
cmp
je
jmp
jmp
sar
test
and
pop
jno
enter
mov
cmp
ret
sbb
mov
andb
pushf
cmp
adc
mov
cmp
xor
cmp
inc
pusha
mov
cmp
mov
out
insl
mov
shll
aas
jle
inc
xor
inc
xlat
les
adc
xlat
test
dec
sbb
mov
pop
add
xlat
adc
mov
sub
adc
adc
lea
add
dec
movups
aas
mov
and
sub
jge
or
outsl
push
xor
ja
pushf
mov
pop
jne
sub
addb
sub
inc
pop
jl
inc
and
dec
inc
jl
call
add
imul
xor
je
xorl
sub
cmp
jmp
cwtl
push
push
call
repz
ljmp
or
adc
sahf
dec
inc
lea
push
shrl
mov
jo
mov
xchg
sub
call
mov
mov
push
sbb
imul
adc
adc
xchg
clc
pushl
pop
or
or
call
inc
xor
aas
dec
sbb
and
call
into
stos
push
aaa
ret
jns
fwait
sub
and
xor
movsb
mov
mov
out
sub
cmp
aas
sbb
pushf
inc
outsl
dec
pushf
lea
and
adc
clc
jno
cld
cli
or
xchg
pop
mov
adc
xorl
pushf
inc
add
mov
out
ret
sub
inc
inc
adc
mov
push
imul
lret
push
xchg
push
jmp
jg
and
xchg
insl
jne
inc
push
push
adc
xchg
outsb
mov
ret
and
pop
sub
push
mov
lcall
push
bound
sbb
jge
xor
or
add
les
out
or
test
cmp
jle
push
inc
and
mov
push
inc
cld
punpckhdq
shl
add
adc
push
movsb
and
movsl
sbb
adc
pop
sub
push
mov
orl
xchg
lods
insb
and
sbb
xor
bound
add
cltd
push
jae
jge
jecxz
das
sub
sbbb
fndisi(8087
pop
push
push
nop
and
sub
call
popf
jge
cmp
es
or
add
or
lret
subb
roll
mov
xchg
roll
mov
scas
imul
inc
cli
ret
lcall
inc
fs
adc
dec
enter
sub
inc
push
and
pushf
or
cwtl
inc
subb
inc
mov
insl
fs
or
and
clc
sbb
cs
jo
sbb
adc
sbb
insb
inc
add
mov
out
scas
mov
fiaddl
inc
lds
test
enter
and
outsb
subl
xor
popa
sbb
jmp
adc
jne
cmp
adc
nop
pop
enter
push
hlt
stc
jge
test
mov
adc
mov
lods
sbb
add
mov
and
cmp
and
and
inc
push
and
cmpsb
add
insb
and
sbb
lea
and
or
test
orb
xor
sub
in
sbb
sbb
inc
loopne
push
clc
inc
mov
popl
adc
clc
and
and
inc
lods
lret
adc
and
cmp
and
mov
and
jge
push
shl
add
out
push
pop
mov
and
mov
pop
add
xchg
inc
mov
push
push
cmc
dec
cmp
or
adc
insl
mov
push
movb
mov
mov
mov
add
push
ss
push
cmp
nop
jl
sbb
sbb
ja
aam
hlt
sub
fisttpll
testl
push
push
or
je
dec
shl
testl
pop
jecxz
pop
sub
es
je
lock
fmull
dec
vphsubwd
lret
movsb
shlb
sub
dec
mov
movsl
es
les
std
adc
movsb
push
fsubrl
adc
nop
inc
enter
sub
xchg
and
adc
jbe
inc
mull
add
mov
es
and
adc
cmp
or
adc
or
push
xchg
dec
adc
pop
xchg
cld
mulb
in
test
adc
or
sbb
pop
cmc
adc
inc
fsubs
lods
fs
int3
adc
les
mov
insl
fs
clc
pop
pop
or
test
enter
and
push
inc
or
pushf
adc
mov
adc
cwtl
test
enter
and
test
and
mov
pop
aaa
or
test
out
adc
js
mov
flds
jne
gs
jb
or
out
xor
jae
mov
imul
or
dec
dec
fs
adc
sub
cmp
and
and
push
test
stc
cmpsl
adc
inc
adc
adc
in
cs
test
fsubl
nop
add
mov
cld
cmc
mov
clc
and
adc
and
in
mov
cmp
push
repz
and
adc
and
nop
fmuls
test
and
fs
xor
adc
cmpsb
test
gs
mov
sbb
or
mov
test
lods
adc
or
inc
jg
cmp
inc
cwtl
and
daa
xor
movsb
or
popl
lods
adc
or
clc
sub
test
or
es
mov
pop
adc
pop
mov
dec
inc
cmc
dec
jle
pop
shll
adc
arpl
push
sub
gs
mov
inc
aam
mov
pop
sub
cmp
and
mov
int
xchg
jl
and
mov
or
mov
add
mov
xor
fucomp
sub
sub
movsb
inc
notl
jno
test
push
call
lret
and
mov
dec
jb
push
mov
mov
sbb
rorl
sub
pop
and
adc
sbb
push
hlt
mov
movsb
mov
loop
or
fadds
loop
and
or
int3
mov
pop
mov
mov
and
mov
mov
jns
testl
fs
nop
adc
adc
cmp
xchg
and
je
adc
or
mov
pusha
or
test
shll
push
and
mov
inc
shlb
sbb
ret
push
mov
int3
call
clc
or
inc
xor
cmpsl
jmp
test
js
sbb
adc
ret
adc
inc
mov
sub
sub
sbb
jmp
clc
repz
adc
push
jmp
jmp
mov
addb
enter
sub
mov
je
rcrb
add
and
scas
add
mov
adc
jo
pop
in
lock
nop
movsb
inc
jo
aaa
or
sarb
pusha
xchg
sub
cmp
push
cmp
add
sbb
lahf
rorl
sbb
jne
cmp
and
call
mov
or
push
enter
cltd
testl
cmp
xor
loope
repz
adc
lahf
sub
mov
and
dec
lods
mov
sub
mov
test
fs
cmp
cld
clc
inc
add
add
mov
sub
shrb
rolb
push
lea
and
mov
mov
inc
cmp
add
jmp
ljmp
loope
inc
xor
clc
push
popf
inc
add
adc
or
adc
scas
or
pop
pop
insb
mov
sub
int3
popf
mov
test
add
sbb
and
pop
inc
adc
test
sub
mov
mov
int3
out
xorb
cmp
setne
inc
loop
push
clc
sbb
popl
cmp
mov
jle
popf
add
push
movb
addb
push
push
cmp
iret
jl
push
xor
dec
clc
cmp
sbb
adc
jp
pop
hlt
adc
push
or
movsl
push
popf
push
push
add
fstl
or
daa
popf
data16
mov
adc
cmp
sbb
or
test
sbb
or
inc
clc
jne
push
aas
jno
shl
or
inc
popf
mov
or
imul
inc
testl
add
test
xor
sbb
pushf
mov
pop
push
int
adc
adc
or
or
lea
jmp
js
stc
test
scas
push
push
xor
addb
inc
jle
loop
add
ds
mov
mov
sub
hlt
rcrb
cmp
pushf
mov
adc
clc
mov
inc
das
mov
clc
roll
je
loopne
adc
mov
push
jg
int
jns
dec
or
push
cmc
popf
ret
sbb
dec
int
mov
lea
bound
or
inc
and
insb
pop
push
aam
lock
xor
sbb
cld
aam
int3
inc
icebp
testb
nop
aad
sub
adc
sti
adc
call
fisttpl
and
sub
jmp
add
add
cmpb
add
dec
cmp
xchg
enter
nop
inc
je
add
rolb
sub
pop
mov
mov
dec
jle
dec
cmpsl
and
sub
pop
call
cmp
xchg
add
sbb
jb
mov
in
pushf
push
sbb
mov
and
dec
lds
mov
shr
stos
pop
cltd
jge
and
adc
xchg
or
es
test
icebp
test
pop
add
and
add
or
test
les
add
adc
push
mov
push
and
mov
ret
pop
jne
scas
es
inc
inc
xchg
xchg
mov
xchg
xchg
lods
push
insb
and
dec
arpl
inc
ret
test
pusha
out
and
cltd
and
aas
sub
call
and
pop
lahf
pop
bound
xchg
adc
xchg
adc
gs
fsubrl
inc
out
in
mov
xor
lock
mov
xchg
sets
and
cmp
mov
pop
fimuls
rolb
xchg
mov
pop
addr16
sub
adc
cs
inc
in
loop
sub
testb
adc
je
popf
arpl
rcl
adc
lahf
add
sub
pop
or
pusha
movsl
mov
push
ja
jmp
movsb
xor
inc
fidivl
shl
adc
clc
out
push
and
mov
arpl
xor
ss
sub
xor
or
js
jbe
bound
sub
clc
sti
jle
scas
push
cmp
xor
adcb
adc
mov
subb
or
inc
xchg
and
jmp
loopne
pop
aaa
cltd
dec
pop
jl
sbbl
adc
call
dec
jle
out
inc
mov
repnz
jb
fcomps
adcb
cmp
jae
or
decb
call
mov
js
out
adc
xchg
lret
les
scas
sub
data16
std
mov
inc
fcoml
inc
lcall
pushf
cltd
and
daa
or
xor
and
lock
lea
push
adc
dec
push
popa
sbb
ret
aad
loopne
hlt
cwtl
mov
inc
cmc
dec
arpl
sbb
pop
mov
sbb
or
mov
or
out
movsl
xor
out
test
xchg
sub
daa
add
xor
and
mov
push
dec
sub
out
movsb
pop
xchg
mov
icebp
adc
or
imul
xchg
out
bound
icebp
mov
lret
call
mov
inc
lret
cltd
pop
sub
push
mov
jo
pop
es
xchg
shrl
mov
pop
and
dec
je
daa
xor
mov
push
fisubrs
mov
movsl
mov
pop
push
xchg
push
nop
sahf
sbb
pop
push
mov
push
mov
loope
stos
inc
cltd
int3
xor
and
mov
inc
sub
cmp
xchg
adc
stos
inc
nop
inc
les
mov
popa
int3
loop
jmp
and
xchg
andb
out
mov
lea
cmp
arpl
test
das
add
in
pop
lods
rcll
mov
sbb
test
adc
mov
enter
xor
lock
rorl
insl
pop
inc
sub
pushf
mov
push
cwtl
mov
adc
shlb
in
or
jno
add
aaa
xchg
and
sbb
enter
in
mov
dec
lea
test
bound
mull
sbb
roll
std
pop
sbb
int3
xor
imul
call
jp
cmp
andb
sub
inc
daa
xor
inc
adc
enter
in
push
cmc
mov
pusha
jmp
push
push
inc
jmp
sbb
xchg
jge,pt
mov
aaa
fdivl
andb
in
xor
int3
sti
adc
test
dec
in
pop
jle
fwait
jmp
push
pop
adc
lea
mov
arpl
test
jp
or
push
or
adc
and
leave
sbb
test
push
xchg
mov
fsubl
rcl
and
inc
mov
and
stos
xchg
sbb
and
pop
xchg
xor
stc
out
movsl
roll
test
int
lahf
js
in
fs
cwtl
inc
and
inc
pushf
lahf
and
push
xor
jp
inc
subl
mov
and
adc
mov
daa
les
movsb
ds
fsubl
sub
js
lea
enter
ficompl
sub
adc
popf
sbb
and
cmp
adcb
aas
rorb
cmp
ret
ret
lea
mov
dec
inc
movzwl
pop
pop
mov
mov
es
shll
and
inc
cld
mov
or
int3
imulb
testl
int3
imulb
shr
mov
or
inc
fnstcw
jmp
pop
pop
fsub
pop
cmpsb
adc
dec
fadd
mov
sbb
popa
lods
cmc
sbb
pop
negb
and
mov
ja
rorb
xchg
and
xchg
test
add
pop
jb
pushf
cli
and
xor
fsubl
inc
sbb
mov
add
push
dec
or
sbb
adc
inc
pop
and
push
inc
mov
lahf
jl
cmp
jge
mov
pop
lea
xor
sarb
cmp
mov
call
push
jmp
sub
dec
push
orb
test
cmp
call
inc
nop
and
loopne
jmp
stos
push
xor
jo
les
pop
loope
scas
mov
push
dec
and
aas
and
je
repz
clc
jmp
loop
or
pop
jecxz,pn
adc
test
cmp
and
and
test
adc
popa
mov
sub
xchg
repnz
jmp
adc
sbb
rcrb
fwait
adc
push
add
push
lods
popa
sub
sub
xchg
add
cmp
mov
into
dec
jns
adc
jmp
les
ja
in
and
bound
into
ret
or
xchg
call
dec
fsubrs
inc
jmp
pop
in
lds
jbe
sbb
cld
jg
inc
jmp
and
and
dec
in
push
or
dec
mov
loop
add
pop
in
jae
inc
jecxz
push
cmp
les
inc
loope
adc
adc
xor
and
and
test
dec
xor
or
test
enter
adc
push
mov
mov
or
les
sbb
xchg
xchg
push
test
subl
pop
jne
add
pop
xor
nop
in
in
sbbb
pop
mov
fsts
in
push
mov
dec
daa
add
ret
adcb
data16
mov
data16
inc
push
mov
je
push
movsb
dec
sub
daa
inc
xchg
scas
cmp
mov
addr16
adc
mov
add
ret
subl
add
push
mov
or
sbb
mov
adc
popa
pop
mov
jl
push
jno
inc
outsl
cld
dec
sub
test
mov
push
or
inc
mov
inc
mov
enter
push
and
mov
sub
sbb
mov
inc
cmp
sahf
xor
jns
push
and
adc
cmp
push
xor
sbb
and
loopne
adc
adc
or
pop
mov
lret
dec
mov
push
or
sysenter
idiv
sbbb
adcb
adc
cld
xchg
add
and
mov
and
clc
out
mov
in
push
sbb
jae
mov
lahf
inc
pop
sub
xor
sub
movsl
es
push
imul
jno
xchg
stc
scas
sub
pop
in
cmp
dec
inc
dec
ficoms
dec
insl
je
or
cltd
jb
mov
jmp
cmp
inc
mov
setl
sub
mov
cmp
aas
test
mov
ja
xchg
cs
pop
mov
push
in
cmp
xchg
lea
test
fisubl
int3
out
and
ret
or
mov
push
aad
jbe
xlat
test
js
fdivrp
push
adc
inc
or
mov
mov
scas
xor
lahf
mov
cmpsb
adc
daa
cmp
stc
imul
clc
inc
xchg
or
popl
hlt
arpl
and
and
in
fs
mov
xor
inc
je
and
sub
loop
push
sub
inc
mov
inc
push
arpl
mov
inc
sub
repz
cmp
mov
add
dec
aaa
sub
mov
ficompl
lret
inc
es
pop
or
enter
sbb
fnsave
jle
rolb
mov
es
push
inc
fstl
mov
popa
xchg
call
inc
sub
mov
fldl
testb
and
shl
addb
push
test
movsl
and
adc
mov
or
insb
nop
mov
sbb
shll
fs
cmp
jle
xchg
popa
or
test
or
lock
addl
dec
inc
cwtl
add
inc
xchg
mov
nop
adc
mov
or
xchg
sub
adc
adc
jecxz
popa
jne
cmp
aaa
xchg
sbb
adc
and
sbb
or
inc
mov
or
jg,pt
mov
xchg
push
cld
scas
ret
adc
sbb
hlt
in
sbb
dec
loope
aas
and
jge
cmp
push
hlt
dec
out
in
into
inc
sbb
popa
cmp
sbb
das
xor
adc
out
sub
les
cmp
add
push
leave
adc
andb
sbb
and
xlat
outsb
ror
in
ret
xchg
mov
inc
lods
enter
or
cwtl
pop
push
test
adc
enter
sub
inc
cmp
enter
jge
mov
repz
adc
nop
lods
mov
pop
mov
test
inc
add
and
orl
mov
pop
inc
or
inc
movb
adc
xchg
mov
jae
nop
mov
adc
and
nop
orb
test
les
xor
and
insb
mov
pop
cs
and
mov
ljmp
test
sub
scas
adc
adc
mov
or
inc
mov
shlb
mov
adc
pop
mov
jbe
ss
popa
push
inc
and
cmp
dec
mov
xor
adc
or
mov
pop
add
and
inc
or
sbb
clc
jg
ljmp
mov
loop
push
and
mov
in
adc
mov
loopne
fs
inc
jne
scas
and
mov
call
add
mov
jl
or
js
pop
jne
and
cmp
popa
into
fdiv
or
inc
test
lock
adc
test
lods
into
lea
push
jle
test
das
push
cli
sub
dec
and
or
mov
or
adc
dec
faddl
cmp
cltd
jle
and
pusha
inc
dec
test
in
jg
insb
addb
or
iret
or
test
inc
jle
test
sub
inc
jnp
int3
in
xor
and
and
inc
mov
pop
xor
and
pop
inc
add
aaa
or
rclb
xacquire
ja
loop
jge
and
and
and
dec
dec
jp
inc
cmp
or
in
jnp
mov
cmp
push
cmpsb
pop
pcmpeqw
add
fcoms
hlt
jecxz
cmp
jp,pt
and
jp
add
adc
rcll
ss
in
adc
xchg
mov
push
adc
add
icebp
lret
jl
cmp
ret
inc
push
dec
aad
pop
xor
arpl
or
push
xchg
cmp
mov
mov
dec
and
push
add
adc
stos
cmp
push
mov
sbb
call
lock
in
or
inc
inc
stc
sub
sbb
mov
inc
bound
jo
pinsrw
pushf
pop
or
daa
je
sub
jmp
jl
fldt
xor
jnp
adc
repz
jns
adc
cmp
xorb
and
repz
shr
repz
repz
mov
addr16
in
mov
hlt
lock
daa
pop
and
adc
mov
jne
adc
jp
cwtl
mov
ror
sbb
adc
or
or
dec
inc
sbb
jp
pop
adc
mov
push
ljmp
jle
inc
push
mov
mov
fs
push
je
push
call
add
mov
ja
out
sti
out
imul
dec
dec
cltd
jp
sub
sbb
adc
jp
push
mov
lahf
mov
push
xor
adc
jmp
sbb
lods
adc
mov
outsl
jnp
xor
and
push
jmp
cmp
jmp
cmp
mov
xchg
xor
aas
fiadds
push
push
push
push
jbe
lahf
stos
add
push
ljmp
jmp
jo
push
test
fsub
sbb
and
cmp
inc
adc
ret
sub
cmp
inc
mov
adc
push
daa
xor
mov
arpl
cmpsl
or
mov
push
pop
adc
test
jmp
adc
inc
mov
xor
mov
xchg
push
push
insb
test
sub
add
loope
jne
fwait
repnz
movsl
xor
data16
das
sbb
mov
mov
loopne
inc
js
test
sub
adc
mov
clc
sub
mov
mov
movsb
fsub
jge
adc
lods
mov
fs
shrl
mov
mov
mov
movsb
adc
or
dec
adc
and
pop
mov
mov
or
mov
and
cmc
es
and
push
inc
cmpb
add
imul
jbe
push
and
xchg
jl
sub
pop
xchg
add
je
mov
and
cmpsb
mov
cmp
and
adc
pop
mov
pop
test
enter
and
inc
and
push
adc
mov
and
dec
test
enter
and
inc
push
out
popa
inc
fs
adc
or
pop
and
inc
mov
and
sub
xchg
test
jnp
js
and
sbb
fs
cmp
dec
test
and
push
inc
mov
les
adc
push
and
sbb
inc
je
dec
pop
cld
fbld
sub
mov
and
bound
sbb
in
or
adc
loopne
jle
jp
inc
aam
bound
xor
or
mov
mov
mov
sub
sub
ds
gs
cld
jae
or
in
and
pop
adc
nop
test
popf
pop
leave
and
push
pop
push
icebp
push
or
iret
sub
aas
scas
jb
je
pop
sarb
or
inc
shrb
dec
adc
mov
roll
cmp
fdivp
imul
rcrl
lock
jg
aaa
mov
fadds
call
sahf
inc
push
fmul
test
xchg
sub
cmpsl
xlat
push
jo
or
jle
inc
dec
xlat
dec
push
inc
inc
jl
jb
cld
adc
pop
pop
in
inc
cmp
test
inc
mov
adc
and
lahf
dec
mov
jno,pt
or
aas
adc
sub
int
push
mov
fists
inc
inc
outsl
add
adc
add
or
mov
mov
lret
or
cld
imul
fidivrs
int
mov
fisubs
scas
jno
out
adc
mov
inc
fsubs
lods
adc
test
inc
imul
push
push
and
adc
sbb
test
les
bound
nop
addb
js
inc
add
insb
and
push
and
or
fists
lahf
mov
mov
pop
test
mov
dec
or
or
je
mov
pop
les
inc
or
cmpsl
nop
inc
mov
pop
je
mov
or
test
add
mov
adc
outsl
mov
test
enter
and
sbb
adc
inc
mov
popf
in
and
jns
mov
and
shlb
fstl
dec
adc
xchg
or
sbb
sbb
jp
xor
mov
and
pop
jecxz
cmp
adc
cmp
mov
mov
inc
stos
push
jg
pusha
sbb
es
pop
mov
sbb
add
xchg
je
inc
mov
out
mov
cmp
adc
fs
sub
sahf
adc
mov
mov
popa
lea
fdiv
push
jo
test
mov
push
sbb
pop
data16
and
sbb
insl
sub
mov
sub
stc
dec
push
mov
gs
popa
mov
insl
sbb
and
or
mov
add
stos
adcb
imul
inc
int3
rorb
dec
sub
lock
xlat
nop
push
or
pusha
insl
stc
push
lret
lds
jae
loop
and
test
or
and
jmp
call
sub
clc
inc
in
mov
xor
adc
inc
pop
push
xlat
ret
imul
in
int3
sub
push
je
jecxz
and
xchg
in
insl
insb
addr16
pop
jo
sub
cmp
out
mov
popf
sub
inc
mov
notb
and
pop
mov
inc
fiaddl
mov
inc
ss
ret
push
push
insb
repz
lock
mov
dec
lock
or
xor
sub
fcoml
mov
xor
out
xchg
fs
inc
push
inc
lock
jg
xchg
insb
mov
inc
dec
cwtl
js
outsl
cmp
lret
mov
mov
fmuls
test
mov
mov
push
pop
pop
inc
adc
mov
out
pop
in
movsl
cwtl
adc
and
cmp
bound
loop
add
xor
sub
inc
out
dec
fsts
test
outsb
and
scas
out
rclb
and
sbb
adcl
push
aaa
ret
dec
xor
push
push
addr16
rol
push
cwtl
push
and
adc
push
setp
sub
lds
adc
call
mov
adc
or
or
mov
dec
jno
cmp
popa
push
jge
loope
xchg
jg
mov
xor
sub
aaa
jge
fdivr
fbld
xor
cld
xor
in
push
lods
push
jl
inc
push
add
lods
xlat
aas
push
mov
enter
cmp
xor
pop
mov
jp
popf
xor
push
pop
daa
sub
loopne
mov
rolb
sbb
inc
repz
std
sbb
mov
lods
inc
mov
shrb
cld
bndldx
jb
imul
push
or
sbb
mov
repnz
sahf
sub
adc
xchg
je
sbb
push
and
call
and
daa
shll
cli
repnz
repz
cwtl
or
gs
add
mov
sti
add
pop
mov
xchg
mov
pop
fiaddl
gs
and
jg
sbb
scas
push
lahf
mov
popf
das
out
sbb
int3
test
test
sbb
jmp
faddp
xchg
int
mov
and
adc
push
push
mov
and
fs
mov
push
sub
adc
rcll
and
sbb
sbb
pop
push
arpl
add
gs
out
add
and
inc
outsl
js
sub
pusha
cmp
adc
mov
inc
sub
lea
sti
sbb
das
hlt
scas
dec
xchg
lods
push
add
shlb
pop
nop
test
call
test
adcl
aam
dec
mov
lods
sbb
daa
push
incl
jbe
inc
call
mov
fwait
lret
push
aas
int
jp
add
cmp
or
cmp
cmp
jbe
mov
xchg
mov
sbb
cmp
adc
orl
mov
inc
or
mov
xchg
sub
aam
or
in
or
or
or
pop
push
or
psubd
inc
mov
je
sbb
sub
das
and
mov
sub
cmpsb
or
insb
les
lret
subb
or
push
jmp
sbb
inc
push
and
inc
adc
lea
nop
mov
or
pop
sahf
js
inc
pop
dec
loop
mov
adc
mov
sub
pop
inc
imul
mov
imul
sbb
inc
imul
insb
in
mov
orb
jns
mov
out
and
sti
sub
pop
bound
test
std
nop
scas
push
cld
xchg
sbb
sub
push
test
jne
mov
add
pop
fisttps
fs
popf
push
inc
mov
icebp
in
cld
or
inc
sti
faddl
fadds
inc
aam
lret
rcr
dec
popa
insb
adc
adc
cld
mov
sti
or
mov
and
add
sbb
insb
or
mov
sti
mov
popa
mov
inc
push
lds
cmp
pop
adc
jno
pop
sti
or
inc
cli
sbb
dec
call
xor
sub
dec
lret
or
pop
push
and
push
cltd
add
or
inc
pusha
push
sub
pusha
sti
mov
cli
or
leave
sbb
pusha
sti
mov
inc
movl
sti
xor
lock
and
pop
adc
into
fidivrs
dec
mul
loopne
push
or
add
testb
jp
imul
daa
call
pop
loope
adc
jo
xor
mov
adc
add
aas
in
xchg
es
jb
push
jns
adc
pushf
mov
cld
dec
xor
sub
sbb
les
sbbb
sub
jae
xor
pop
or
push
add
faddl
fmuls
lods
outsb
inc
cmp
ret
pop
mov
cmc
push
adc
jecxz
cs
popa
lea
sbb
or
and
xchg
push
ffree
fs
sub
lods
mov
vmovntps
and
xchg
or
add
mov
sub
pop
mov
stc
adc
pop
lret
adc
dec
in
loope
stc
or
pop
pop
cltd
in
les
mov
and
les
out
inc
xlat
adc
mov
sub
dec
sar
jne
or
enter
aaa
call
adc
stc
les
arpl
inc
jmp
mov
sbb
mov
in
mov
ret
ficompl
out
sub
inc
xchg
outsb
fmull
rcrb
or
hlt
jno
add
adc
mov
and
or
popa
jno
dec
imulb
pop
mov
or
sub
fcompl
test
cmp
sbb
out
loop
adc
lea
sub
push
sub
xchg
and
lds
adc
and
xor
xchg
pop
or
adc
adc
pop
xchg
int3
aam
pop
aad
xchg
loop
lock
sub
push
mov
jnp
fnstenv
lcall
xchg
fcomps
jge
xchg
fsubl
and
dec
loop
sbb
iret
int
stc
fstps
repz
call
bound
sbb
and
sub
int3
fsts
and
or
xchg
ror
mov
inc
fldenv
mov
adc
and
bound
lret
cli
adc
mov
inc
and
adc
bound
loop
xchg
pushf
leave
and
adc
daa
jno
lret
or
pushf
leave
test
push
xor
adc
add
adc
in
inc
int
mov
dec
into
xor
into
adc
mov
inc
pop
mov
iret
sbb
repz
and
int
jae
fs
add
es
iret
or
int
imul
aad
lock
loope
adc
rolb
pushf
std
or
pop
sub
xor
and
imul
adc
pop
cmc
jae
ret
cmp
ret
aad
mov
or
adc
or
rol
mov
push
inc
push
pusha
adc
push
xchg
xor
inc
add
jmp
rorb
and
rcrl
sub
call
push
rcr
adc
sbb
ljmp
cmp
out
or
ljmp
cmp
mov
adc
ss
push
push
pusha
pop
ljmp
pushl
add
and
cmpsl
mov
call
inc
mov
mov
or
aam
adc
in
sub
test
jmp
add
ds
xor
loop
fsub
ds
pop
inc
loope
xor
cli
cmp
inc
loop
push
loope
jg
pop
pop
push
push
orl
xor
and
push
les
cmp
fsub
push
and
sbb
rcr
loop
ret
and
fnsave
lock
lret
pop
pop
adc
in
mov
push
loopne
and
xor
jb
cmp
jb
push
nop
cmp
mov
out
xchg
lock
ret
lret
test
jmp
aam
adc
add
cld
push
jo
xor
push
ffree
test
jge
jmp
movlps
subb
cwtl
push
push
ret
xchg
lds
ret
mov
loopne
push
cli
mov
insl
push
push
or
out
and
inc
cmp
jle
int
adc
lods
sub
push
and
push
lods
lds
jmp
call
es
pop
stc
leave
mov
dec
out
inc
adc
add
popf
or
psubsb
jne
mov
push
adc
add
fimuls
pop
add
sbb
sub
inc
push
pop
lret
adc
push
sahf
or
cld
call
mov
inc
inc
mov
ud2
pop
mov
stos
inc
iret
call
scas
daa
fs
xor
mov
inc
xor
adc
stos
movsl
cmp
lods
inc
and
dec
xor
jo
sub
mov
mov
and
sub
enter
adc
pop
loop
fdivl
mov
jp
or
cmpsb
sbb
mov
inc
fnstcw
lock
testl
daa
mov
bound
lahf
fs
push
pushf
and
sbb
mov
ret
push
rcrl
outsb
adc
rcll
mov
inc
fcoml
jmp
rcrb
adc
and
dec
stos
pushf
in
inc
jmp
dec
out
popa
pop
aam
imul
test
jmp
xchg
fsubs
pushf
cltd
ret
dec
push
call
loopne
push
lahf
repz
jle
movups
imul
xchg
dec
or
call
scas
js
inc
jmp
in
push
sub
mov
xchg
leave
mov
clc
frstor
sub
push
mov
pop
adc
xor
adc
nop
sub
sub
movlps
gs
add
jmp
dec
ja
add
or
sub
daa
mov
inc
loopne
lods
lock
jbe
inc
loopne
fildll
mov
sahf
dec
popa
bound
rcrb
rcr
cmc
out
adc
adc
or
bound
adc
inc
inc
les
adc
shll
leave
mov
and
nop
ret
ror
les
fldl
frstor
adc
and
ficomps
rcrl
cwtl
fmull
and
sbb
and
bound
lea
out
mov
rorl
adc
dec
loop
sub
ds
and
inc
sub
xor
test
test
les
add
or
std
mov
jmp
outsl
in
enter
xchg
enter
jmp
push
mov
aas
mov
bound
popf
and
xchg
pusha
inc
popf
sbb
push
repnz
dec
lahf
jb
cmc
jle
push
push
movsl
or
cwtl
pop
fs
mov
movsl
pop
rcrl
dec
mov
xor
mov
mov
pushf
dec
push
push
lea
mov
outsl
adcl
push
mov
and
adc
mov
and
sub
mov
or
mov
test
and
push
inc
push
adc
rclb
mov
enter
loopne
fdivl
out
push
xchg
and
int3
jge
push
aam
jmp
out
or
subl
enter
outsl
stos
add
push
test
mov
mov
push
outsl
mov
inc
or
dec
out
movsl
xchg
or
mov
call
jg
pop
inc
test
push
call
mov
inc
mov
popf
ss
les
dec
movsb
ss
inc
dec
jns
adc
cwtl
outsl
and
into
jle
les
cmpsb
and
insb
jb
fiadds
aam
xor
xchg
push
in
pop
rclb
repz
jl
js
mov
add
jmp
xchg
iret
fisubl
outsb
shrb
sbb
out
in
mov
sbb
dec
push
cmpsb
rorb
jns
ficompl
and
fsts
ljmp
out
out
jb
push
outsl
in
push
shlb
push
jl
xlat
inc
dec
loope
dec
adc
xchg
xor
xor
mov
mov
push
cwtl
mov
jmp
jns
and
adc
insb
xchg
mov
jmp
dec
xor
lds
dec
lods
pop
mov
lret
bound
shr
and
clc
add
les
ret
inc
mov
pop
adcb
or
sbbb
inc
js
cmc
dec
test
rorb
ja
cmc
stc
les
negb
push
mov
mov
and
adc
push
rcrl
cwtl
adc
ja
dec
lahf
cmp
mov
addr16
dec
mov
xchg
adc
mov
in
les
jnp
in
bound
mov
push
out
and
mov
outsb
enter
xchg
mov
mov
sub
clc
ljmp
mov
and
test
fldl
sub
mov
mov
cli
jl
jg
mov
setle
imul
out
adcl
or
orb
add
sub
pop
jmp
pop
sbb
cmp
and
cmp
push
sub
cwtl
sub
adc
mov
push
jnp
gs
xchg
rcl
dec
pop
clc
sub
jns
push
jb
sbb
jle
sbb
mov
cmp
je
int
mov
adcl
int3
cmp
cwtl
sub
mov
cmp
js
push
xor
push
adcb
push
or
jnp
cs
xchg
stos
add
and
dec
dec
aad
mov
nop
push
shlb
jecxz
and
xor
scas
adc
or
add
int3
mov
adc
dec
testb
mov
mov
scas
xor
or
mov
add
enter
fimuls
mov
push
dec
dec
pop
mov
mov
fdivrl
iret
sub
mov
mov
mov
adc
lods
mov
or
sub
test
imul
roll
dec
sarl
mov
subl
and
lea
pop
sub
push
mov
loop
fimull
push
inc
mov
gs
or
hlt
loop
pushf
in
and
adc
pushf
dec
in
int
adc
and
dec
mov
in
inc
int3
pop
pop
inc
stos
push
popa
leave
cwtl
in
adc
loop
jmp
or
sub
or
adc
jmp
sub
sete
icebp
mov
or
adc
inc
mov
xor
and
xor
pop
into
pop
daa
cmp
cltd
jl
clc
lret
sbb
ficoms
popl
cmp
rolb
ficomps
jmp
lret
aaa
mov
or
daa
cmp
sbb
loop
lret
and
fimull
dec
js
adc
xor
xor
dec
scas
push
je
push
inc
add
pop
or
mov
fstpl
cmp
testl
lods
repnz
jg
adc
push
jae
pop
jmp
push
iret
cmp
push
push
pop
jp
push
lods
adc
test
pop
int3
sub
ret
movsl
pop
lds
gs
fwait
jnp
outsl
push
les
jno
inc
adc
or
mov
sbb
int3
es
pop
inc
cwtl
into
in
push
stos
adc
dec
sahf
shl
fsubrs
mov
test
adc
cmpsb
xchg
pop
sbb
add
sub
cli
mov
lcall
dec
push
call
in
xlat
decl
xor
and
rolb
ret
jae
xorl
mov
dec
fwait
sub
xchg
sbb
cmp
and
outsl
test
dec
sub
cmc
test
repz
pop
inc
cmp
in
adc
and
dec
in
xchg
xchg
dec
test
jge
fildll
gs
mov
inc
call
sub
push
jl
push
and
mov
clc
leave
test
dec
jo
adc
xor
cltd
inc
cmp
and
jmp
xchg
stos
mov
push
pop
adc
popf
xchg
add
jb
push
fcompl
out
pop
pop
fnstenv
inc
push
sbb
mov
imul
enter
sar
xor
andb
adc
roll
xchg
test
add
dec
clc
mov
inc
jno
bound
test
lret
jno
and
inc
fwait
enter
gs
pop
popa
icebp
jmp
shrb
lock
mov
xchg
jecxz
or
lret
inc
out
jo
shll
pop
fldl
and
ret
test
into
sub
in
or
mov
cmpb
js
repz
push
popa
jl
call
cld
pop
enter
ja
stos
vpmacssdqh
test
push
scas
adc
xor
mov
inc
in
jge
in
xchg
imul
daa
fmul
push
movsl
shl
in
arpl
je
push
cltd
hlt
add
mov
push
cmpsb
xchg
pop
dec
js
gs
mov
inc
xor
cmpsb
jmp
mov
repnz
or
inc
or
sarb
mov
jb
loope
pushf
jecxz
push
mov
jmp
xchg
test
sub
out
dec
inc
test
mov
scas
insb
shr
jg
and
add
xchg
inc
gs
nop
pop
xchg
or
fcoml
push
push
jo
repz
jle
in
add
inc
jmp
fs
test
or
out
js
test
add
cmp
inc
and
test
xorb
push
push
inc
and
addb
movl
arpl
mov
sarb
jge
xor
mov
jge
repnz
and
aas
inc
cmp
jne
ret
call
decb
adc
push
icebp
sub
cwtl
inc
push
cmp
jne
outsb
or
inc
sub
mov
sub
sti
add
sbb
sbb
xchg
and
xchg
pop
fadd
adc
jg
dec
xor
inc
and
or
inc
sti
out
inc
stc
push
movsb
and
insb
or
aas
adc
das
jl
cli
and
xlat
loop
sbb
pop
call
xchg
mov
sbb
adc
ja
pop
xor
sbb
pop
cmp
stos
lcall
and
xor
sti
push
orb
popa
mov
cmp
jb
fstl
mov
or
adc
pop
shl
js
je
push
enter
inc
dec
mov
jmp
inc
xchg
or
sti
jne
push
and
je
or
dec
and
push
inc
in
pop
push
push
cmp
push
mov
adc
or
add
pop
cmpsl
pop
mov
in
adc
out
mov
and
pushl
data16
and
mov
mov
inc
or
shrb
push
setno
jo
adc
xor
lea
sub
jl
imulb
mov
adc
cmp
adc
repnz
push
popf
sbb
sub
mov
xchg
push
nop
mov
in
sub
cltd
xchg
scas
pusha
incl
dec
add
jle
mov
jo
call
jo
push
push
fwait
nop
xor
adc
or
jns
push
into
push
cmc
mov
loope
jne
xor
mov
sbb
push
xchg
aad
neg
xchg
push
adc
insl
adc
push
rorl
adcl
pop
rclb
push
jno
jmp
push
jg
mov
aad
xchg
test
or
sahf
mov
push
mov
daa
jne
negb
and
xor
imul
popf
adcl
dec
or
insb
cltd
sub
jle
add
test
js
push
adc
js
sar
adc
cmp
pop
mov
inc
push
mov
and
push
sub
add
fcoms
call
sub
push
xor
movswl
mov
sarb
pop
adc
adc
push
and
cmp
lret
pop
sbb
push
sbb
cs
jle
mov
add
cltd
popf
shr
mov
add
les
or
xor
sbb
jge
push
jl
cmp
divl
nop
sbb
stos
mov
and
cmp
sti
push
je
jmp
cmp
jp
das
push
mov
insb
xor
and
mov
dec
lea
sub
add
dec
out
add
xchg
dec
push
stc
sarl
sbb
xchg
jl
adc
xor
test
lds
sbb
call
negb
or
nop
std
jle
es
daa
pop
cltd
lock
daa
mov
adc
push
jl
mov
in
ret
insb
mov
pop
mov
outsl
sub
pop
fs
adc
inc
inc
cmpsl
mov
mov
movsb
or
cmp
pop
pop
mov
jge
test
test
add
push
call
pop
inc
add
inc
cmp
jl
cmp
add
sbb
mov
mov
mov
mov
imul
fldcw
inc
and
jge
test
mov
inc
ds
xchg
cmp
mov
outsl
sbb
xchg
or
loop
lea
lahf
fdiv
cmp
mov
mov
pusha
insl
nop
adc
push
dec
dec
cmp
test
movsl
jne
and
dec
mov
sbb
sub
mov
daa
push
sub
add
int
push
std
ret
mov
push
or
add
inc
jnp
jnp
jnp
arpl
pop
jmp
ds
or
inc
cmp
or
and
or
inc
and
jnp
push
cld
fdivs
clc
lar
jl
cmpsl
and
mov
push
and
cmp
roll
sbb
scas
sub
pop
es
add
and
or
xor
fs
mov
sub
fs
jmp
and
dec
pop
xor
push
ret
and
pop
jbe
iret
outsb
dec
or
sbb
or
sbb
jne
adc
cmpl
sbb
mov
cmp
nop
data16
mov
cmp
shlb
or
adc
inc
mov
xor
cmp
data16
popa
adc
inc
cltd
dec
pop
xchg
adc
jmp
mov
sbb
ret
aad
or
je
and
xor
adc
mov
mov
test
and
pop
int
mov
push
adc
rol
outsl
cmp
cmp
in
leave
mov
mov
cwtl
lea
dec
xchg
jnp
ja
pop
or
jecxz
inc
aaa
adc
jg
and
inc
add
popf
sbb
push
adc
jmp
je
nop
inc
ret
adc
or
test
adc
xor
push
inc
mov
mov
int3
rcll
add
or
add
and
xchg
enter
jbe
and
inc
cmp
mov
cli
xor
xor
mov
jne
inc
jne
sbb
rcll
loopne
cmpsl
adc
jge
adc
cli
or
or
mov
shlb
inc
mov
cs
mov
push
mov
pop
rcll
dec
or
dec
rclb
and
or
add
mov
das
ja
cmp
enter
fwait
jg
mov
ret
rcrb
in
add
mov
xor
xchg
xchg
or
or
ret
sarb
cmp
jb
lret
xorb
adc
addb
int3
xor
or
fidivrl
jmp
jle
aas
stos
xlat
and
mov
in
adc
cmp
and
jbe
adc
push
xor
mov
sbb
push
inc
test
adc
repnz
pop
pop
pop
jne
and
dec
pop
lret
fbld
sar
adc
sbb
fstl
test
int3
xchg
push
dec
fcoml
add
inc
push
int3
xor
add
fldt
dec
add
ss
xor
mov
cmpsl
mov
enter
mov
das
mov
pop
mov
jge
push
cmpb
add
syscall
and
inc
cmp
out
jmp
pop
negl
and
dec
mov
sub
loopne
xor
mov
and
andl
sub
and
and
lods
test
xor
mov
lods
test
adc
gs
sbb
add
add
cmp
xchg
mov
gs
adc
jae
or
les
mov
mov
add
lret
fs
jae
push
push
iret
adc
xor
enter
repz
ss
fwait
mov
loope
aaa
or
aaa
mov
je
testl
sahf
xchg
loop
or
nop
pop
adc
sub
push
xor
mov
mov
or
call
cmp
adc
pop
pop
cmp
ljmp
stos
jecxz
dec
cwtl
add
mov
insl
insb
push
adc
mov
cmp
add
jne
test
jle
cmp
cwtl
leave
cli
push
cwtl
adc
dec
sub
inc
inc
add
adc
lcall
or
cmp
adcl
xchg
jmp
and
fwait
lcall
popa
stos
xor
out
and
mov
out
mov
dec
xchg
cmpsb
jle
pop
dec
sbb
cwtl
adc
push
inc
mov
sbb
inc
xor
sbb
fists
fisubs
sahf
mov
sub
inc
fs
xorb
lret
inc
enter
fs
xor
xor
cmp
in
mov
and
and
repz
movsl
loop
movl
test
push
fsubr
xor
nop
inc
pusha
xchg
lods
das
daa
push
sbb
push
je
or
or
clc
add
cmpb
rclb
or
movsb
or
xor
mov
addb
pop
jne
cmp
xor
add
mov
add
cmp
jge
cmp
je
sbb
in
adc
add
sbb
jl
add
jg
mov
pop
dec
jp
es
sbb
jne
rolb
andl
leave
jmp
lcall
enter
stc
jl
fidivrl
push
loope
inc
out
mov
push
or
add
adc
stc
sub
enter
dec
cmp
sub
xor
je
sub
stc
rcrb
ljmp
lds
ljmp
and
inc
les
push
mov
add
sbb
mov
inc
push
adc
or
sbb
or
fwait
shlb
rorl
ljmp
adc
or
sub
adc
pop
dec
mov
cmp
icebp
jecxz
xchg
sub
inc
in
mov
mov
adc
adc
sbb
test
gs
cmpsb
dec
add
cmp
or
or
jp
popa
adc
inc
mov
cmp
jne
call
ss
pop
pop
notl
testl
or
push
popf
pop
mov
push
lret
mov
sbb
shrb
add
je
inc
push
mov
wrmsr
jbe
lcall
fisubl
xchg
mov
xor
xchg
adc
lret
mov
movb
dec
clc
dec
push
rcrl
xor
cltd
aas
orb
dec
adc
enter
pop
inc
iret
into
hlt
or
jno
lea
call
and
and
rolb
sub
pop
sub
jmp
sbb
cwtl
push
pop
add
push
mov
pop
les
xor
sub
das
xchg
or
clc
push
or
mov
nop
mov
fmuls
xchg
aam
pop
lock
inc
fs
mov
cltd
sub
jns
push
test
jle
push
xchg
lret
pop
mov
xlat
sub
adc
aaa
sbb
push
inc
and
sbb
pop
jp
add
dec
cli
data16
es
jno
adc
xor
xor
mov
add
and
and
jle
out
adc
fs
dec
sub
sub
or
movb
ja
das
or
ja
cmp
shl
add
cmp
out
pop
push
call
cltd
into
jge
sbb
push
rcrl
add
dec
inc
shlb
push
mov
xor
pop
or
add
jp
push
shrl
dec
dec
cmp
push
fs
and
andl
jne
jg
pop
sbb
sbb
sbb
cmp
movl
xorb
sbb
fiadds
cmp
je
pop
inc
sub
loope
andl
mov
add
jl
insb
gs
outsb
mov
fldcw
inc
adc
sub
popa
adc
std
or
and
dec
lds
pop
movsb
inc
or
inc
inc
cmp
test
adc
mov
pop
test
inc
mov
das
xchg
mov
or
in
cld
mov
sbb
mov
insl
call
xchg
xor
hlt
sub
sub
or
mov
mov
cltd
enter
sub
fdiv
mov
lods
inc
inc
mov
xor
lods
inc
je
dec
adc
or
jno
adc
and
les
push
ret
outsb
data16
lods
adc
mov
or
push
sub
loope
and
fnstenv
or
mov
lahf
adc
sub
xchg
loope
inc
inc
test
xchg
int3
push
mov
sbb
inc
daa
mov
or
add
test
inc
adc
or
sub
ret
rcll
or
sarb
notb
fwait
test
faddl
xor
pop
hlt
call
push
add
mov
xor
push
inc
and
push
inc
and
es
adcl
xchg
push
and
or
xchg
es
sbb
mov
lock
push
mov
es
inc
add
mov
aas
mov
sbb
dec
js
lods
xchg
jl
bound
ret
xchg
les
cld
inc
adc
out
jo
xchg
inc
in
cmc
xchg
dec
cmpsl
or
jo
sub
enter
add
mov
pop
je
adc
pop
lea
push
push
cmp
fidivrs
adc
mov
hlt
and
clc
inc
cld
lock
cmc
and
and
sbb
or
adc
pop
jns
xor
dec
das
and
sbb
mov
sbb
sub
shl
xchg
sbb
and
mov
or
push
idivb
outsl
mov
test
roll
add
jp
sub
add
dec
shrl
lahf
pop
out
inc
shl
jge
xchg
xor
xlat
test
fstpl
xchg
jae
add
mov
jp
daa
add
inc
mov
inc
pop
inc
int
cmpsl
bound
aad
inc
int
in
xchg
inc
mov
jge
ss
adc
rcl
cli
popf
sub
jne
mov
daa
inc
clc
cmp
mov
pop
lea
movsl
fwait
pop
dec
movl
push
jo
fdivrs
and
pop
imul
cltd
dec
cmpl
xor
or
mov
data16
pop
dec
jmp
sub
or
mov
add
push
cmp
xor
call
and
and
adc
dec
or
sbb
daa
mov
mov
adc
jne
xor
mov
mov
pop
and
pusha
add
xorb
popa
push
mov
movsb
call
or
mov
pushf
pop
mov
inc
insb
inc
jmp
addr16
insb
adc
test
inc
mov
mov
inc
je
push
pop
ds
scas
fcompl
pop
and
pop
js
test
imul
popf
mov
popa
push
push
mov
mov
mov
adc
lret
cld
cmc
clc
and
nop
or
test
adc
add
adc
cmp
xor
xchg
fs
shrl
inc
push
push
adc
shlb
test
cmp
mov
or
mov
push
dec
mov
dec
fs
sub
out
inc
addr16
sub
bound
cmp
leave
cld
or
sbb
rorb
xchg
xor
insb
sub
adc
ret
aad
je
addr16
push
pop
bound
pushw
and
and
cld
cmp
clc
xor
mov
leave
dec
cmp
lods
mov
mov
stc
lods
mov
into
mov
jne
xchg
add
mov
outsl
lods
sti
mov
orb
rclb
xchg
push
bound
xchg
push
jg
mov
push
push
adc
ret
gs
out
aad
out
cmp
mov
sub
xchg
mov
dec
dec
aas
adc
test
mov
push
adc
cli
sub
movsl
sbb
xchg
incl
inc
pop
ljmp
jmp
sbb
jo,pn
jnp
dec
aam
lahf
stos
out
fistl
add
out
push
add
popf
push
xor
and
stos
pop
mov
or
ffreep
int
dec
lcall
fidivrs
out
push
mov
enter
call
push
mov
fs
push
or
imul
pop
loop
mov
les
mov
jo
push
jl
test
mov
pop
out
rorl
call
stos
mov
fcmovnu
sub
dec
mov
test
add
sub
pop
inc
push
push
pusha
adc
cltd
xor
mov
bound
mov
aaa
call
mov
sbb
cmp
fadds
rclb
push
sbb
aas
rolb
lret
cmc
and
gs
adc
adc
inc
sub
jl
and
dec
and
sar
inc
ss
es
add
sub
mov
lods
jo
stos
xchg
inc
and
loop
test
inc
dec
xchg
scas
cmp
pop
adc
mov
scas
les
mov
inc
adc
xor
sbb
push
arpl
push
in
sub
je
popf
push
push
jp
push
insb
sub
inc
adc
cmp
loop
mov
aas
or
or
push
cmpb
dec
sbbl
mov
add
pop
pop
adc
lcall
inc
add
adc
lret
adc
pop
sbb
push
les
mov
xor
sub
inc
push
inc
fisubrs
es
adc
sarb
push
or
add
or
jno
cmp
or
add
add
stos
mov
fwait
pop
leave
mov
xchg
mov
jo
push
bnd
mov
jl
add
sub
adc
sub
sub
xchg
and
nop
xor
and
adc
test
test
fs
bound
inc
push
nop
jo
popa
jno
push
and
jmp
push
cmp
jmp
lea
sub
cmp
inc
enter
add
dec
mov
jmp
pop
jae
ror
jo
inc
add
cmp
dec
scas
sub
clc
or
decb
mov
daa
xchg
inc
lock
push
mov
and
lock
mov
adcb
lods
enter
sti
inc
push
cwtl
sub
xchg
rcrl
sub
test
xor
mov
scas
sbb
push
pop
push
pop
scas
jecxz
movl
push
dec
push
loopne
inc
inc
and
adc
test
loop
mov
arpl
popa
aam
pop
rcll
test
int3
push
mov
shll
inc
ljmp
mov
lret
cmpsb
sub
mov
sbb
sbb
sub
sbb
loope
mov
ds
mov
and
daa
in
cmp
bound
inc
call
fistps
sti
add
inc
push
cltd
inc
sbb
push
enter
adc
xor
mov
dec
loope
inc
mov
cmpsb
adc
lret
pusha
cmpsb
inc
les
add
sub
and
mov
lods
pusha
mov
popa
clc
roll
adc
imul
test
imul
lock
mov
lahf
cmp
push
add
subl
cmc
mov
int3
aas
aas
data16
mov
mov
and
stos
push
data16
rorb
mov
sub
stos
and
pop
push
daa
or
push
or
pop
xor
test
adc
and
inc
adc
push
mov
mov
mov
pop
add
push
adc
sbb
andb
add
add
js
sbb
jne
rorb
sbb
je
je
in
dec
fisubrs
inc
jbe
inc
adc
or
loop
mov
rol
lds
push
mov
mov
xlat
dec
and
adc
sbb
push
push
loopne
andb
add
cmpsl
test
call
js
das
push
shlb
push
sub
pop
adc
xlat
dec
loopne
les
rolb
push
jl
mov
lea
pop
orl
adc
or
mov
mov
je
adc
adc
adc
jmp
pop
add
jne
push
aad
cmp
stos
nop
fs
lods
hlt
xor
outsl
aam
std
inc
test
add
cwtl
test
les
add
and
and
inc
jo
and
xchg
cmp
mov
dec
inc
sbb
xchg
stos
inc
out
sub
cmp
adc
xchg
mov
ret
lcall
adc
dec
mov
stos
or
and
outsl
push
enter
xor
mov
push
enter
xor
in
add
rorl
call
inc
cld
mov
dec
push
jle
mov
dec
les
and
jo
jb
and
ret
into
mov
add
sbb
cmp
mov
sysenter
test
xorb
aas
call
xor
inc
pop
or
jmp
jno
adc
test
adc
cmp
push
pop
mov
rclb
fistl
inc
cld
xchg
jnp
jne
mov
pop
jmp
push
ss
fnsave
lock
imul
test
repnz
adc
std
or
outsl
nop
out
clc
je
adc
inc
jecxz
mov
jmp
les
push
push
push
push
jnp
pop
loope
jns
adc
jle
xor
sbb
jmp
clc
sbb
and
loope
mov
add
dec
scas
jmp
pop
lods
and
sbbb
xchg
pop
and
sbb
xor
rcl
sti
xchg
push
pop
es
jmp
or
push
call
pop
out
inc
dec
jo
adcb
dec
pop
mov
xor
mov
pop
fdivrl
push
or
lea
jle
adcb
mov
push
loopne
cmpsl
inc
pop
push
stc
lea
cmpsl
mov
jmp
mov
push
fs
add
push
jmp
push
daa
cmp
lcall
enter
mov
xchg
hlt
xchg
or
jmp
lea
mov
xor
adc
call
push
rcr
xchg
jmp
sub
adc
enter
ljmp
sub
inc
sarb
lcall
xlat
and
mov
jbe
int
inc
addr16
dec
pop
push
cmp
push
dec
mov
clc
sub
pushf
mov
jg
cmp
je
sub
mov
jmp
leavew
inc
jp
repz
xor
call
pop
pushf
mov
jns
aaa
adc
xor
push
pop
fldl
ljmp
fcmovnbe
or
mov
and
cmpsl
dec
fbstp
mov
lahf
sbb
je
jbe
rorb
xor
lods
jnp
sub
xor
xor
add
or
jp
mov
mov
gs
and
add
es
inc
push
pop
leave
repnz
cmp
dec
or
pop
inc
mov
and
or
scas
int3
mov
xor
xor
push
sub
mov
fs
rolb
jecxz
dec
cmp
cmp
xchg
sub
xlat
pop
cmp
adc
lock
push
jnp
pop
ror
and
daa
add
loopne
int
cmp
or
push
jge
sub
dec
ds
aam
add
pop
dec
push
movsl
xchg
je
mov
mov
sarb
sub
adc
and
call
jmp
mov
sbb
inc
or
lock
add
pop
mov
push
fdivs
bnd
jb
out
sbb
pop
jl
or
in
inc
call
push
jmp
mov
adc
loope
pop
sub
sarl
mov
lock
lret
and
and
mov
call
sub
aam
inc
lcall
cmp
adc
push
mov
pushl
inc
mov
adc
movsb
insb
mov
and
pusha
xor
mov
int3
sbb
add
sbb
mov
adc
push
dec
mov
adc
push
js
adc
adc
sub
push
test
sbb
sbb
adcb
int3
fisttpll
sub
rolb
test
enter
and
and
cmp
xchg
mov
imul
xchg
and
loop
cmp
cmp
cwtl
mov
inc
and
mov
and
sbb
sbb
mov
adc
ja
jns
sbb
or
inc
mov
mov
inc
and
test
adc
das
test
push
cmp
dec
adc
mov
lock
sbb
inc
pop
and
sbb
xor
adc
std
mov
or
xchg
fcoms
lods
or
sbb
mov
sbb
mov
sub
mov
or
loop
jge
adc
jmp
vrsqrtps
mov
clc
inc
sub
insb
dec
sub
cwtl
and
ret
sbb
adc
adc
std
das
xor
decl
inc
or
push
push
push
addr16
push
loopne
orb
jbe
jge
jl
jmp
push
cwtl
dec
xor
push
push
push
mov
sub
mul
mov
icebp
cld
and
adc
popf
and
or
dec
shlb
cmpsl
cld
or
inc
out
int
inc
adc
sbb
and
and
inc
or
loope
xor
pop
lret
fldt
push
loope
cs
sub
jnp
or
push
sbb
int3
pusha
ret
cwtl
repz
pop
and
adc
je
mov
mov
jmp
movsl
and
sub
movsb
adc
notb
lret
inc
or
push
mov
cld
mov
bound
push
jmp
push
sbb
scas
jecxz
inc
rol
pop
dec
shll
or
pop
push
dec
xchg
sbbb
adc
push
popf
inc
outsl
sbb
push
test
jns
nop
fmull
mov
mov
pushf
mov
cmovo
call
dec
push
stos
push
andl
bound
shl
mulb
fucomip
push
insb
mov
mov
fs
xchg
xor
iret
push
pop
repz
inc
mov
mov
mov
jbe
xor
or
gs
and
mov
push
or
jne
jns
daa
mov
adc
inc
and
push
xor
clc
mov
inc
cmp
and
cmp
push
mov
std
cmp
add
cli
bound
andb
rorb
sub
dec
and
xchg
aas
mov
imul
and
test
push
out
mov
mov
cmpsb
and
jnp
out
or
test
xor
out
or
test
mov
mov
and
jl
out
push
sbb
bound
dec
jbe
push
push
mov
xor
call
sbb
aaa
testl
xchg
adc
pop
jno
and
mov
push
mov
and
imul
adc
xor
xor
xchg
or
cwtl
sub
sub
push
sub
outsl
sbb
mov
or
shlb
sub
out
add
xor
jmp
mov
mov
push
xor
rclb
and
and
ret
push
sbb
sahf
daa
inc
test
mov
xor
fdiv
nop
inc
cli
adc
gs
sbb
stos
mov
or
les
push
cwtl
inc
push
inc
iret
adc
test
or
and
xor
adc
cld
mov
and
sti
call
test
ret
fmull
xchg
jne
jmp
push
xchg
push
xor
mov
rcll
cmp
and
mov
adc
inc
jo
or
mov
xchg
xchg
inc
cmpsl
aad
mov
push
jb
xchg
enter
aam
test
push
sbb
pushl
add
add
add
in
adc
pop
sub
fadds
lods
mov
aam
jno
adc
mov
out
stos
mov
jo
push
cltd
cmp
stc
std
sbb
insb
jne
mov
test
jl
fiadds
sub
jg
lock
addl
imul
push
arpl
test
jmp
and
or
mov
xlat
or
mov
je
mul
push
test
dec
je
mov
fildl
sbb
shl
add
adc
xor
sbb
dec
ret
adc
add
sbb
and
pop
inc
sbb
nop
lods
inc
inc
inc
ja
mov
outsb
bound
and
jne
dec
adc
dec
enter
fdivl
jg
mov
add
clc
xchg
and
call
or
clc
add
movsbl
mov
or
les
lods
cmp
adc
xchg
or
wrmsr
insb
fiadds
jo
test
jbe
xchg
sub
xor
sub
mov
rorl
mov
mov
push
test
and
sbb
add
out
dec
mov
mov
xor
push
sub
or
or
inc
push
mov
xchg
xchg
dec
jns
jb
pop
add
mov
and
sub
add
nop
push
sub
sbb
or
mov
fimull
or
or
inc
or
or
and
or
test
or
and
xor
adc
or
adc
mov
add
add
jmp
mov
cmpsl
fnstenv
jle
mov
pop
pop
loope
adc
outsb
add
xchg
cmp
in
inc
fsubl
repz
call
pop
stos
mov
xor
popf
arpl
pushf
pop
mov
mov
add
push
push
mov
xor
push
rep
sub
shl
subl
push
pop
aad
and
faddl
mov
or
or
into
inc
imul
call
sub
addr16
pop
and
jp
pusha
adc
xor
lods
mov
aaa
push
jg
or
fistl
dec
or
imul
dec
inc
add
and
clc
jl
add
call
in
mov
sbb
cmp
or
adc
adc
adcl
jb
bnd
inc
jge
pop
adc
andl
cwtl
ds
out
mov
mov
push
cld
test
and
dec
inc
ret
or
scas
inc
cli
lods
xor
mov
fldcw
inc
jmp
jecxz
push
fsts
or
cmp
push
cmp
mov
rcrb
adc
movl
mov
adc
xor
pushf
xchg
sar
movsb
xor
mov
orl
jbe
dec
inc
and
mov
jecxz
pusha
inc
in
jae
rclb
mov
dec
les
in
loope
test
xchg
adc
dec
into
das
pop
loopne
add
adc
jmp
or
out
lahf
adc
fwait
dec
shll
xchg
in
dec
cmpsb
int3
movsb
or
mov
mov
mov
pushf
filds
xchg
push
push
mov
test
xor
lods
ds
pop
mov
out
das
adc
repnz
sbb
lock
dec
cli
push
or
call
ret
sbb
pop
sbb
jb
icebp
mov
xchg
imull
jns
int3
pop
and
rclb
add
pop
mov
les
test
insl
pop
loopne
fptan
dec
push
adc
lea
dec
push
jle
push
add
lcall
popl
or
es
inc
mov
jnp
xor
adc
push
mov
test
inc
push
cmpl
data16
dec
lock
sbbl
mov
imul
pop
jg
popf
pushf
negb
add
mull
rclb
insl
push
pop
sub
in
lcall
sub
pop
incb
mov
subb
jo
mov
push
int
cs
les
ss
das
loop
cmp
jmp
notl
clc
dec
or
pop
xor
xor
popa
push
lea
movsb
inc
insl
and
in
je
mov
test
inc
out
cld
inc
push
jmp
dec
xor
int
sub
inc
subb
xorl
fdivs
sbb
inc
dec
data16
repnz
sbb
xchg
xlat
call
test
dec
cmpsb
inc
call
leave
push
push
data16
push
or
push
xor
pop
leave
and
push
aad
repz
repz
push
mov
and
gs
lret
retw
pop
xchg
cltd
mov
les
adc
pop
cs
cltd
adc
push
jl
test
test
mov
icebp
xlat
sbb
leave
sarb
idivb
pop
jo
dec
jae
pop
push
xchg
sub
xor
cs
xchg
push
in
adc
mov
push
sub
adc
sub
lock
rolb
in
loopne
in
cmp
stos
xlat
pushf
or
push
enter
adc
loopne
les
notl
nop
jp
in
testb
or
mov
and
xchg
mov
out
xchg
daa
push
cmp
dec
mov
cmp
enter
int
fldt
sbb
mov
push
insl
dec
fucomp
jmp
sub
jae
ljmp
cld
xchg
inc
inc
inc
inc
mov
lock
and
push
fldl
pop
xchg
and
iret
sbb
ds
push
mov
or
mov
mov
sti
sar
movsl
movsb
bswap
or
gs
pop
es
dec
jno,pn
cld
sarl
push
daa
testb
loopne
aad
nop
fsubrl
fmuls
inc
pusha
and
inc
shrb
push
cmp
and
sub
xor
loop
pop
sbb
fisubl
inc
call
push
xchg
int3
sub
ds
adc
push
hlt
dec
mov
and
bound
cwtl
je
sti
mov
xchg
lock
cld
addb
xor
aam
sti
and
xchg
or
push
sar
xchg
pop
in
push
mov
pop
mov
and
push
lcall
pop
sbb
push
pop
xchg
jns
cmp
sbb
test
ds
xor
or
mov
lret
add
add
loop
add
lods
mov
xchg
xlat
test
clc
das
mov
push
and
bound
xchg
inc
add
dec
mov
mov
mov
std
adc
sub
data16
cmp
ss
sub
aaa
xchg
push
adc
ljmp
push
inc
daa
xchg
pusha
mov
and
adc
fimuls
jg
rolb
cli
push
sarb
cmp
push
stos
xchg
mov
jg
gs
shll
cld
call
dec
in
mov
das
loope
and
mov
mov
fstpl
xor
and
or
das
call
aad
pop
cmp
and
call
sub
fistpll
bound
pop
mov
icebp
test
mov
xor
test
jmp
into
cli
cld
inc
xchg
inc
xchg
aaa
adc
push
adc
or
sbb
je
push
push
enter
adc
out
ret
mov
push
push
dec
imul
aad
or
adc
gs
das
and
xor
or
stc
push
adcb
loopne
gs
xor
push
fldenv
out
pop
or
cmpsl
or
mov
fildl
add
or
nop
jmp
push
clc
push
ds
pop
jg
sbb
call
in
ret
sbb
xor
test
dec
jl
inc
add
pop
sti
lahf
jmp
rcl
push
and
icebp
push
mov
rorb
enter
and
inc
repnz
cmp
sub
cmpl
stos
rolb
inc
adc
jb
inc
sub
add
xchg
leave
cmp
xorl
sbb
and
loope
jbe
xchg
jp
mov
mov
repz
mov
mov
andnps
and
mov
adc
add
mov
call
out
cmpl
jbe
push
mov
sar
dec
adc
adc
sub
sub
xlat
leave
push
aam
push
out
iret
or
mov
dec
jno
hlt
push
fsubrp
aaa
rcl
xchg
iret
pop
sub
and
ret
mov
inc
insb
stos
push
rorb
pop
fimuls
femms
or
gs
call
jmp
xor
shrb
jp
idivl
add
mov
shrl
repz
mov
ret
or
pop
sub
enter
xor
or
adc
mov
jmp
mov
cwtl
push
inc
xchg
push
mov
sbb
call
in
pop
mov
ret
mov
mov
dec
fistpl
in
jg
inc
leave
fiadds
pusha
lea
xchg
adc
mov
mov
jle
dec
lahf
fbstp
lea
sbb
arpl
fisttps
mov
andl
add
push
mov
call
std
bound
inc
repz
mov
fdiv
add
call
data16
jae
call
adc
cwtl
xor
push
jmp
and
adc
je
sbb
jae
xchg
cmp
clc
fiadds
push
aam
cmp
or
mov
std
add
ret
aad
popa
ficompl
mov
ror
leave
sbb
jnp
icebp
and
outsb
inc
mov
dec
hlt
pop
enter
adc
dec
xor
aas
sub
int3
jbe
dec
nop
out
push
pop
dec
push
xor
cmpl
xchg
pop
jnp
ret
cltd
pop
mov
inc
sub
pop
loopne
adc
loope
xor
push
nop
ljmp
sti
fcompl
push
imul
popl
xchg
jne
test
jbe
ds
jmp
loop
pop
xchg
sub
out
movsl
push
or
scas
jle
lcall
inc
cld
push
push
inc
dec
inc
sub
cmp
std
xchg
xchg
push
xchg
sub
ret
inc
test
push
sub
and
pop
jb
fsubrs
dec
fadds
and
pop
das
push
or
mov
sbb
and
dec
or
testl
jb
cmp
and
mov
mov
mov
lock
mov
or
fcomip
lret
mov
push
icebp
lock
dec
cld
jle
lret
clc
icebp
dec
mov
jmp
dec
cmpsl
mov
xor
frstor
shll
jne
xchg
mov
push
pop
stc
inc
or
xor
out
imul
cltd
or
into
sti
es
mov
notl
aaa
pop
addr16
xchg
and
and
or
sub
aaa
scas
or
push
mov
mov
inc
push
xor
dec
adc
es
mov
push
mov
inc
incb
and
mov
mov
in
inc
or
sub
xor
dec
enter
in
addb
cli
and
jmp
jle
aas
mov
cmp
sub
xchg
xlat
sbb
ljmp
cmpb
adc
pop
add
fisttps
repz
fildl
lret
mov
in
inc
xchg
sbb
adc
sti
sbb
sti
pop
mov
les
mov
daa
jmp
add
and
out
movsb
mov
int
int3
sar
add
or
lret
out
mov
add
bswap
loop
cmp
cltd
add
inc
icebp
nop
cs
and
inc
push
add
sub
mov
jae
adc
out
jbe
add
sarl
cmpb
fimuls
outsl
cld
add
jne
jb
mov
push
js
adcb
incb
pop
cmp
cmp
sub
push
cmp
dec
dec
icebp
adc
ja
addb
mov
sbb
stc
inc
add
add
ret
mov
jno
and
loope
xchg
ja
cmp
push
call
sub
jbe
lea
push
sub
ljmp
jns
adc
test
fsubl
mov
add
sbb
push
mov
sub
pushw
pushf
out
push
cmp
push
je
add
mov
inc
sub
add
fsubs
adc
scas
mov
sub
mov
bound
adc
lea
xor
es
mov
popa
lea
das
sbb
sbb
test
add
pop
addr16
cmp
xchg
inc
cmp
and
popf
dec
fs
ljmp
sbb
add
inc
clc
lret
push
or
in
xor
lcall
testb
fsubl
push
sti
movsl
shl
inc
mov
pop
lods
adc
dec
shl
mov
movsl
cli
jne
leave
sbb
fdivl
je
stos
mov
and
int3
mov
inc
mov
shll
repz
xor
or
push
sbb
jmp
clc
shll
dec
cmc
and
movzbl
lahf
mov
or
aam
or
add
xchg
repnz
hlt
int3
add
cmp
stos
inc
out
push
dec
lahf
pop
leave
sub
sub
enter
fcompl
out
xchg
add
xor
dec
mov
icebp
sub
movsl
shr
xor
nop
push
mov
sbb
ret
insl
add
movsb
add
in
xchg
push
clc
dec
pop
inc
cmp
xor
xor
sbb
sub
cmpsl
cmp
data16
push
sbb
test
mov
fnstenv
ret
mov
add
dec
in
cmpsb
gs
je
ss
xchg
and
mov
jle
cli
xchg
popf
and
pop
sbbl
mov
sbb
cmp
jl
mov
out
rol
jmp
push
or
or
stc
cmp
or
cmp
add
lea
jmp
pop
or
pop
pop
add
inc
inc
ss
mov
inc
inc
or
cwtl
dec
daa
shr
bound
push
pop
xchg
les
inc
jge
xchg
or
inc
dec
cmp
bnd
cmpsb
lea
mov
dec
in
clc
sti
call
inc
or
jl
or
mov
ror
gs
xchg
dec
xor
add
jae
mov
adc
pop
loope
add
fwait
pop
or
mov
mov
add
clc
lea
not
mov
jb
mov
xor
fmull
fdivl
aas
dec
mov
inc
aam
std
lret
dec
xorb
js
push
push
js
xchg
sub
popf
jbe
cmp
pop
in
mov
mov
aad
faddl
fcmovnb
incb
rclb
or
or
sub
fsubr
mov
push
aas
popf
and
call
das
imul
cmp
xchg
jno
sub
aam
mov
ljmp
dec
movb
xor
insl
divl
mov
imul
shlb
pop
add
jg
add
or
add
mov
or
cmc
xchg
fwait
or
out
jmp
sbb
mov
and
dec
adc
stos
jge
aas
shlb
shll
jmp
push
push
call
mov
jo
lahf
dec
and
gs
dec
cli
mov
inc
xor
push
dec
inc
sarl
or
imul
out
push
push
xchg
or
push
call
pop
test
mov
fidivrl
test
je
loope
dec
jnp
push
mov
or
sub
les
cli
bound
adcl
dec
or
xchg
mov
jp
sbb
push
xor
arpl
xchg
add
aad
repnz
inc
les
or
jge
es
dec
inc
or
insl
jo
es
adc
lea
sahf
mov
sub
idivl
xchg
mov
xor
add
push
add
mov
call
adc
popa
fcmovb
xchg
jecxz
push
dec
and
ljmp
add
and
sub
dec
push
cmpl
push
dec
push
cli
hlt
cld
test
pop
shrl
sahf
dec
pop
or
sub
mov
or
cmp
mov
and
jg
inc
out
subb
jnp
mov
mov
dec
push
push
je
mov
mov
mov
nop
push
std
outsb
or
mov
cli
rolb
xor
aaa
add
xchg
jmp
adc
mov
shll
lcall
adc
lock
filds
hlt
mov
and
fbstp
dec
dec
outsb
sbb
and
mov
mov
jg
mov
inc
sahf
sti
or
in
lods
xchg
jns
adc
mov
push
push
xchg
sbb
dec
mov
fdivs
cmp
mov
dec
jmp
and
sub
mov
mov
cmp
ret
pop
xor
pop
lods
mov
rclb
sbbl
adc
or
lahf
jno
addb
and
out
and
or
loope,pt
cmp
shrb
sbb
sub
inc
sbb
sbb
icebp
xchg
rcr
sub
shrl
imul
bound
add
adc
xchg
inc
dec
add
outsl
adc
int3
aam
xor
call
in
imul
pop
loop
mov
add
cwtl
cld
and
jle
xor
push
jp,pt
outsb
adc
dec
mov
jle
inc
jne
popa
adc
roll
call
fcoms
jge
sarb
rolb
and
rol
pop
sbb
cmpl
dec
je
push
mov
iret
add
sbb
fcoms
in
fbld
mov
data16
decl
cmp
jne
mov
xchg
not
sbb
or
push
cmp
jnp
or
in
adc
cmp
lock
loope
sahf
nop
add
cmc
xchg
lock
je
les
rolb
adc
inc
sbb
mov
andb
pop
test
inc
and
push
leave
loope
sub
pop
nop
inc
jno
cmp
add
fsts
push
jb
test
cmp
jge
cld
or
pushf
mov
jl
mov
je
cmp
inc
clc
jbe
mov
inc
mov
test
sbb
jno
test
and
mov
lods
inc
aam
mov
mov
outsl
cmpsb
stos
cmp
cld
daa
je
xchg
scas
stos
inc
cmp
fiaddl
cmp
int3
jmp
inc
cmp
cmp
jl
in
loop
lods
push
mov
ja
or
cmp
les
int
cmp
ljmp
push
movsl
or
pop
cmp
or
xlat
sbbl
movb
insl
cmp
jb
mov
cs
imul
cltd
pop
dec
jb
sub
ret
or
adc
pushf
cld
fs
mov
sub
adc
cmp
xor
fdivr
or
and
jno
into
xchg
adc
and
psubsb
and
sub
jbe
add
in
mov
call
jo
jo
add
lea
mov
add
stos
roll
mov
xchg
lods
xchg
mov
lods
sub
add
push
and
loopne
adc
incb
test
js
push
adc
test
mov
xchg
enter
dec
and
test
fnsave
aad
or
jecxz
push
cmp
sub
jmp
jmp
repnz
into
lock
adc
cmc
iret
icebp
nop
mov
xor
or
test
rolb
les
xor
fcoml
lret
and
out
xchg
int
adc
and
rclb
and
call
push
subb
pop
and
adc
test
xor
mov
dec
scas
mov
fstpt
fldl
rcr
call
and
test
pop
inc
sbb
mov
push
inc
flds
sbb
ljmp
mov
das
je
xchg
mov
daa
adc
add
test
push
inc
loopne
push
fldt
fisubs
fisttpl
mov
fldcw
pusha
adc
das
pop
out
pop
xlat
inc
cld
push
xchg
and
add
jp
mov
jecxz
je
hlt
pop
addr16
clc
mov
inc
or
test
pop
pushl
dec
lahf
sub
fiaddl
pop
xchg
bnd
adc
mov
jno
mov
je
push
jmp
jnp
aad
mov
ja
lahf
stos
or
mov
cmpsb
negl
test
adc
sub
sub
sub
and
cmpsl
xchg
add
repnz
xchg
sbb
sub
test
aad
je
sbb
dec
or
pop
mov
mov
cmp
nop
cs
pop
cmp
and
pushl
lods
pop
and
aam
jl
sub
test
push
inc
ljmp
fnstcw
sub
das
mov
push
pushf
mov
in
push
pop
fiaddl
jle
popf
popa
das
inc
add
enter
inc
aas
loop
movsb
xor
and
insb
pop
lea
sub
xor
out
and
in
repnz
into
nop
and
and
xor
arpl
sbb
adc
call
fists
mov
shl
movzwl
add
xchg
cmp
cmp
mov
or
mov
rcrb
add
add
mov
jecxz
jle
sub
pop
outsb
clc
mov
jg
inc
jmp
and
jno
jae
inc
mov
ret
sub
jb
clc
pop
add
push
push
push
ss
sbb
jecxz
adc
or
repz
mov
xchg
xlat
xchg
scas
xchg
movsl
jno
mov
or
sbb
adc
mov
mov
clc
inc
or
bsf
daa
in
dec
movsb
cmp
lods
push
cmpsl
and
jl
mov
cmp
cmp
mov
xlat
repnz
mov
sbb
mov
mov
call
and
jmp
cmpl
dec
push
mov
adc
push
rclb
mov
scas
jge
sbb
xor
and
xchg
leave
mov
adc
lcall
or
out
cmp
pop
div
mov
jns
push
fs
scas
mov
adcb
pushf
cs
imul
or
pop
adc
xchg
jmp
mov
aam
mov
cs
pop
jl
xor
push
cmp
jae
or
jecxz
push
mov
mov
int3
adc
outsl
fstpl
enter
xchg
inc
add
mov
cs
pushf
adc
fldcw
nop
fisttpl
jge
rep
stos
in
xchg
insb
ljmp
mov
cmp
fbstp
add
cwtl
xor
mov
mov
in
cmp
iret
adc
std
mov
insb
and
push
xchg
ja
jae
scas
mov
popf
jns
in
pop
gs
ja
mov
push
mov
or
jmp
inc
cmp
mov
xchg
fsubs
sub
sbb
mov
loope
mov
inc
lea
popa
and
fisttpll
outsb
scas
hlt
cmp
jl
cmpb
sbb
mov
movsb
and
popf
or
ljmp
out
xor
push
out
sbb
mov
andl
es
mov
sbb
adc
jmp
insl
sub
shll
call
cmp
sub
rcll
xlat
decb
sbb
push
push
jns
cwtl
hlt
cmp
jmp
jmp
adc
je
jmp
fs
mov
mov
ja
into
and
in
aaa
dec
inc
loope
sub
cs
adc
adc
push
and
out
movsb
push
jbe
mov
mov
ret
hlt
rclb
pushf
xchg
movsl
push
call
add
cmp
inc
repnz
or
faddl
inc
cmp
jb
fidivs
xor
push
push
inc
dec
jmp
pop
gs
decb
sub
dec
dec
sbb
add
jae
es
mov
lret
xor
xorl
adc
cmp
cld
call
dec
push
sub
jl
dec
mov
pop
or
test
xor
jo
enter
xchg
leave
mov
and
sub
jae
mov
xchg
pop
mov
imul
sbb
jle
cs
fists
nop
in
sbb
popa
push
mov
pop
js
dec
xchg
inc
adc
jmp
fistl
push
and
adc
mov
mov
cmp
repnz
adc
adc
pop
test
sub
sub
sub
and
inc
out
and
pop
sbb
rcrl
arpl
stos
scas
and
lret
sbb
shl
fadds
sbb
nop
sti
andl
push
or
or
adc
xor
subb
adc
adc
and
push
sbb
jne
mov
call
push
out
sarb
dec
clc
pushf
call
les
test
movzbl
nop
mov
sub
push
mov
call
xlat
or
xor
popa
out
push
fs
push
test
and
add
jo
xor
cmc
das
mov
xchg
rorb
xchg
sbb
xchg
add
test
and
fcoml
dec
les
or
test
push
mov
lods
pop
movsl
push
inc
and
in
inc
popf
das
inc
mov
xor
dec
mov
int
xor
xchg
and
xor
xchg
or
pushf
dec
sub
adc
or
mov
adc
subl
call
or
push
fmuls
icebp
loopne
repz
xor
nop
push
push
jp
int3
clc
gs
or
cmp
pop
loopne
add
add
ret
add
cmpb
cmc
push
es
fs
lds
inc
inc
push
addb
dec
sti
ficomps
daa
sbb
inc
jecxz
and
xor
ficomps
and
add
jmp
hlt
pop
push
icebp
lret
aas
xchg
push
and
mov
inc
mov
or
add
adc
adc
loope
inc
aas
push
test
imul
test
adc
or
pusha
push
mov
cltd
xchg
outsb
int
iret
inc
cmp
out
add
inc
sbb
mov
add
push
dec
mov
lret
push
call
into
callw
add
iret
push
mov
dec
sbb
pop
adc
jmp
inc
mov
jg
cli
test
into
mov
xor
sub
adc
push
iret
sub
hlt
setne
push
out
test
lock
fs
sbb
dec
pop
repnz
int3
clc
and
lcall
mulb
loopne
pop
fcompl
sar
leave
xor
add
jns
arpl
sbbl
test
push
adc
mov
jno
xor
mov
call
sub
loope
popf
push
movsb
cmp
test
adc
inc
mov
int
mov
cmp
cld
sti
bound
sub
cmp
pusha
push
push
push
scas
push
inc
mov
jmp
je
stos
sbb
dec
adc
clc
jle
mov
loop
imul
xchg
pop
or
das
sub
push
mov
pop
rcl
enter
dec
and
dec
push
enter
lret
adc
lcall
and
mov
sbb
cld
inc
punpckhdq
and
cmp
or
jmp
rcll
xchg
test
popa
pop
test
fxch
add
addl
xchg
bound
dec
sbb
mov
lock
jl
inc
xor
rcrb
outsl
lods
aam
dec
xchg
out
xlat
sbb
fdivrs
xchg
xchg
mov
push
and
sbbl
lcall
test
fs
jns
in
fcomps
addr16
adc
inc
adc
mov
fcoms
das
or
xchg
xor
add
fadds
jmp
bound
rolb
adc
inc
daa
inc
jmp
and
and
and
pusha
sub
enter
pop
fs
push
into
test
jne
sbb
lret
loop
les
inc
adc
cmp
jne
ljmp
adc
sbb
cld
cmp
inc
iret
mov
stc
stos
gs
cmp
push
jnp
pop
jb
push
jmp
mov
and
inc
cwtl
xor
cmp
mov
mov
jg
inc
pop
daa
hlt
sub
inc
mov
xchg
mov
aad
shll
mov
or
stc
fldenv
sbb
inc
cwtl
add
jmp
inc
lods
or
or
cmpsl
movsb
push
xchg
mov
push
pop
andl
jge
and
push
mov
dec
ret
xor
push
and
adc
popa
fimuls
test
xor
inc
scas
fists
push
xor
pop
cmc
add
ja
adc
iret
sbb
daa
js
xchg
cmp
or
mov
push
dec
xchg
test
pop
jb
and
and
pop
les
int3
lret
test
inc
or
or
inc
loopne
adc
stc
or
ds
adc
insb
or
sbb
lahf
sbb
mov
enter
adc
adcb
xchg
jg
add
inc
mov
popf
jle
push
jbe
mov
mov
mov
inc
inc
sbb
or
xor
jmp
ret
mov
mov
aas
test
addr16
stos
popa
xlat
or
stc
in
fs
mov
lock
mov
xor
int
call
pushf
dec
je
add
adc
es
mov
lret
push
cli
stc
das
or
ret
sbb
dec
mov
dec
into
add
je
pop
out
push
stos
stos
push
mov
rcrl
jo
clc
stos
add
mov
xchg
stc
adc
int
add
push
adc
cmp
or
pop
test
inc
decb
dec
or
jl
push
xor
sbb
xchg
push
or
xor
fdivrl
jmp
push
xchg
add
or
subl
sub
out
and
sub
in
adc
and
fs
imul
dec
add
in
das
sub
fstpl
inc
adc
cld
dec
mov
mov
mov
jo
lea
or
pusha
aad
incl
bound
xchg
mov
popf
lahf
rcll
fs
pushf
aam
notb
les
pop
adc
adc
ret
sub
push
call
into
xchg
mov
jne
xchg
dec
mov
lret
aas
adc
dec
add
xchg
dec
mov
pop
leave
mov
test
jp
and
rorb
adc
or
test
sub
push
jle
loope
mov
add
pop
inc
enter
es
call
inc
dec
mov
into
jbe
adc
mov
in
add
and
and
or
dec
cmp
std
push
or
insb
das
das
jmp
cmp
movsb
and
push
inc
jnp
out
das
and
repnz
mov
adc
bnd
out
mov
jmp
sub
adc
adc
lret
sbb
xchg
icebp
into
bound
inc
and
jae
in
and
push
pop
adc
inc
and
inc
add
fcoml
mov
mov
mov
and
adc
push
push
adc
flds
and
dec
fcomps
in
mov
test
pop
xchg
repz
test
sub
mov
shll
jmp
dec
mov
cli
inc
sub
inc
sti
sub
sub
inc
push
call
sbb
jmp
xor
popf
rcpps
xchg
jae
movsl
sub
or
adc
cmp
popf
mov
sub
jbe
in
push
pop
push
and
and
adc
adc
mov
sti
inc
inc
inc
aaa
ret
sub
mov
sub
jp
loopne
push
or
nop
dec
or
adc
into
push
push
cmp
ror
mov
mov
sub
dec
xor
mov
gs
mov
adc
clc
xchg
notl
movsl
ror
mov
xor
mov
and
mov
cld
or
fdiv
fs
cmp
push
lret
jae
pop
adc
nop
pop
mov
sbb
loop
xor
sbb
int3
pop
and
add
pop
jmp
and
sbb
lods
mov
std
inc
inc
fadds
sbb
cmp
and
xchg
push
adc
inc
cmp
mov
push
mov
xor
cld
jmp
dec
outsl
adc
fldt
and
push
xchg
out
or
call
and
test
xor
adc
je
pop
imul
inc
inc
mov
and
jg
adc
cld
mov
je
sub
rcrb
pushl
or
and
adc
push
jne
mov
or
jl
pop
mov
adc
lret
call
cmp
xchg
movsb
stos
out
add
movb
pop
dec
into
dec
mov
sbbb
jle
test
or
pop
sbb
push
mov
in
push
sbb
dec
aam
aas
jle
fs
pushw
add
fsubr
add
rorb
inc
fbstp
cltd
enter
sub
xchg
push
add
cmp
out
fsubrs
mov
fwait
mov
push
xchg
sub
push
dec
mov
popf
push
xor
cmpsl
sub
sbb
and
mov
pop
shll
xor
adc
mov
std
mov
rolb
mov
sbb
sbb
push
mov
xchg
jge
sbb
or
dec
out
cltd
ss
addl
inc
dec
cmpl
cmpsb
iret
outsb
adc
sub
and
sub
sub
and
inc
or
mov
aas
push
loop
xchg
adc
push
mov
push
push
sub
xchg
movsb
test
movsl
dec
add
leave
loope
inc
and
inc
jbe
push
add
inc
mov
aad
inc
jno
mov
jge
fs
add
mov
push
cmovs
ret
arpl
js
test
mov
mov
lds
adc
lods
cmp
mov
inc
jp
mov
mov
sysret
push
sbb
add
pop
adc
push
idivl
sub
inc
push
fadd
incb
adc
mov
test
mov
bound
push
lock
and
push
pusha
sarb
inc
cmpsl
fistl
jmp
xor
sahf
sbb
push
push
ss
mov
dec
adc
iret
pop
dec
inc
sarb
scas
xor
movsb
sub
adc
push
cmpsb
or
fs
cld
and
insb
or
inc
mov
push
mov
push
je
adc
adc
fs
dec
cmp
je
es
mov
shrl
adc
add
negb
nop
add
xchg
cld
clc
dec
cmpsb
pop
pop
loope
jle
int
and
mov
or
fdivrp
sub
lock
jge
jbe
mov
mov
push
or
neg
push
imul
and
loope
push
seta
dec
clc
sub
sarb
addr16
call
rcll
cmp
jg
add
push
dec
inc
ret
cmp
pop
jb
ljmp
jle
ret
jge
cmc
dec
negl
loop
adc
lds
fs
lea
hlt
jnp
push
nop
push
call
pop
stos
sub
push
test
mov
sub
mov
mov
or
xor
and
inc
jae
adc
mov
in
xorl
push
push
loop
lds
and
imull
and
paddb
jge
test
sbb
jle
add
decb
daa
mov
mov
pop
mov
adc
mov
sub
add
imull
cld
fs
sti
adc
mov
adc
and
adc
lahf
add
sub
or
jg
add
push
scas
inc
cmp
clc
dec
lret
in
mov
leave
adc
in
push
mov
mov
sbb
jge
out
into
mov
sub
or
jne
jl
ljmp
sbb
sbb
mov
adc
or
movsb
adc
push
or
lcall
fisubs
in
sbb
je
scas
out
push
pop
push
or
adc
das
xor
shr
xchg
push
je
js
or
cmc
lock
and
mov
push
xchg
aaa
inc
movsb
sbb
pop
pop
stos
int3
dec
hlt
push
push
stc
ret
dec
push
xchg
and
ret
int3
push
xor
jle
inc
sbb
cs
xor
es
jns
adc
mov
jmp
xor
sbb
orl
movb
mov
push
cs
xor
push
pop
pop
jmp
jbe
adc
sbb
cmp
inc
cwtl
ret
mov
fs
adc
dec
cld
paddd
rorl
dec
inc
int
nop
mov
pop
movsl
sub
aas
or
cli
clc
push
adc
stc
or
pop
jmp
in
je
fwait
sbb
rolb
sbb
dec
push
pop
or
cmp
jmp
je
scas
xlat
stos
push
pop
mov
mov
pop
stc
add
mov
popa
sbb
sti
outsb
icebp
fmuls
cli
mov
negb
sbb
mov
cmp
in
imul
push
inc
mov
mov
insb
outsl
cmpsb
shll
movsb
or
sub
sbb
mov
cmove
insb
xor
rcrb
sub
addl
mov
inc
cs
cmp
addr16
repnz
stc
in
jb
in
lods
cmp
jb
xor
add
dec
sub
xchg
cwtl
adc
add
xor
out
pop
stos
sub
inc
mov
xchg
mov
mov
sbb
push
mov
push
call
adc
les
push
pop
je
subl
jle
mov
jmp
js,pt
push
xchg
repnz
sub
adc
dec
mov
sub
push
xor
lods
push
jbe
push
in
gs
add
jge
mov
inc
push
lea
mov
cmpsl
add
rorl
fldcw
mov
mov
cmp
in
xchg
adc
push
in
mov
mov
gs
mov
rcrl
push
negb
dec
push
sub
jae
int
addr16
mov
test
and
xchg
inc
jns
aam
xor
mov
cmp
adc
popf
pop
bound
mov
xor
outsb
jb
xor
shrb
mov
push
inc
inc
push
inc
cwtl
pop
sbbb
enter
mov
xor
inc
jne
shll
mov
mov
enter
bound
rorl
xlat
adc
loope
xor
test
cs
shll
sub
adc
adc
clc
add
mov
shrb
sub
push
adc
es
push
xchg
bound
aas
mov
nop
das
push
stc
mov
xor
mov
inc
in
jo
ret
inc
mov
add
jb
ret
leave
fsub
cmp
jbe
dec
xchg
sbb
leave
push
jl
jmp
hlt
and
mov
cld
adc
movsl
cmpsb
mov
and
add
decb
cwtl
push
jae
call
out
dec
xor
xor
pop
sub
call
scas
jmp
ret
test
mov
popa
cli
push
dec
dec
pop
divb
lods
sub
hlt
das
push
test
mov
scas
or
and
jne
and
and
sub
repnz
call
pop
call
pop
mov
call
ret
repz
sbb
pop
xor
in
inc
and
or
pop
jno
ror
push
ds
out
dec
call
push
sbb
sbb
cwtl
das
push
fstpt
add
sbb
lock
cmpsl
push
cld
inc
sub
cmp
push
stos
xchg
shrl
xchg
fsubs
and
rclb
adc
xchg
dec
lret
and
lods
mov
inc
je
xchg
adc
jge
imul
sbb
lods
ja
adc
js
imul
or
leave
push
gs
cmp
fisubs
sbb
jmp
push
cmp
add
dec
int
cmc
in
mov
loope
xor
fmull
or
adc
rorb
jp
xchg
mov
sub
or
dec
mov
xchg
or
xchg
and
flds
fsubr
sbb
lods
les
in
stos
repnz
sbb
sub
sbb
mov
mov
push
xor
mov
cmp
push
pop
sub
xchg
mov
in
call
inc
mov
test
xor
dec
stc
add
inc
push
push
popf
loopne
mov
mov
testl
cmp
pop
movsb
xchg
and
stc
mov
gs
jnp
outsb
aam
ret
ud1
das
mov
into
jg
std
xchg
arpl
jae
bound
data16
test
fucompp
movsb
mov
pusha
mov
icebp
ss
nop
dec
or
xchg
push
dec
adc
sbb
add
enter
dec
inc
sub
inc
pop
loop
sub
js
and
mov
push
stc
xor
in
jge
inc
inc
decl
imul
jo
inc
mov
lret
or
call
loop
adc
pop
lret
inc
jl
or
cmp
xchg
in
mov
repz
adc
pop
and
xor
jg
imul
and
sub
aaa
sub
mov
add
into
bound
aad
jg
jp
pop
nop
and
and
stos
enter
cmp
mov
mov
or
out
mov
sub
push
mov
pop
clc
aam
inc
jl
pusha
lret
or
xchg
fs
inc
push
dec
adc
inc
movsb
push
xor
dec
dec
sub
mov
pushf
adc
leave
and
jmp
pop
mov
les
orl
adc
mov
icebp
and
mov
and
and
mov
scas
hlt
inc
shrb
inc
mov
cmp
in
sub
test
and
jmp
push
mov
mov
xchg
ret
inc
out
xor
push
jns
and
adcl
xor
adc
mulb
popa
mov
push
inc
rorb
and
adc
test
lds
inc
fsubr
stos
inc
arpl
and
out
and
sete
xor
aam
sub
js
les
xchg
and
lods
dec
jl
cwtl
fsubl
std
inc
xor
movsl
mov
addb
cltd
popf
cmpb
xchg
mov
sbb
mov
ret
popa
call
jmp
in
shrl
test
pop
adc
push
mov
mov
incb
add
call
cmc
dec
lcall
mov
je
xor
or
ja
or
and
jne
cli
mov
pop
mov
nop
push
or
xor
js
jge
mov
arpl
cmp
cmp
add
outsb
push
lds
stos
cmpsb
push
sub
sbbb
test
jns
scas
pusha
imul
or
jmp
and
je
lods
mov
iret
mov
xchg
pop
push
call
push
and
or
push
inc
in
or
cmpsb
in
xor
std
iret
inc
or
pop
idiv
or
and
xchg
nop
add
and
dec
mov
lret
jge
jmp
push
pop
enter
and
push
jo
xor
sub
and
insb
adc
sbb
andb
imul
cmpsb
jb
and
aam
jle
in
ret
out
inc
adc
enter
ds
xchg
dec
push
push
push
cmp
sbb
add
fwait
cmp
push
push
push
xor
fs
cltd
ret
test
sub
inc
mov
jmp
movsl
add
or
enter
mov
cmpsl
dec
push
and
pop
inc
dec
inc
je
mov
and
dec
adc
movsl
rorb
sbb
or
scas
pop
jb
mov
sub
inc
mov
fnsetpm(287
push
push
pop
sub
xchg
mov
mov
and
inc
xchg
popa
push
pop
jb
cld
sub
sub
stos
push
jge
inc
jl
shlb
push
in
xlat
mov
mov
fistl
leave
dec
cmpsb
cmpb
mov
insb
stos
mov
hlt
inc
add
out
pop
jle
popf
ss
jb
dec
pop
jp
inc
cltd
mov
or
adc
push
movsb
sti
data16
mov
push
ljmp
inc
call
cmp
pop
lods
push
mov
in
les
shlb
daa
mov
fmull
dec
fcmovu
and
in
xlat
mov
loope
in
test
push
jecxz
lods
or
dec
lahf
mov
loop
lahf
dec
hlt
popa
xchg
push
pop
jmp
popa
push
inc
jb
loopne
mov
dec
xchg
and
loope
mov
mov
jecxz
dec
or
shlb
out
cmp
mov
daa
mov
lods
cmp
jne
repnz
and
hlt
inc
sub
popa
add
jb
push
and
imul
fistpll
jmp
test
lods
xchg
mov
mov
jle
popf
or
xchg
inc
and
dec
je
aas
outsb
dec
pop
sahf
inc
je
popf
fsub
imul
sub
into
xorb
dec
enter
mov
movsbl
lahf
shrb
sbb
in
mov
push
jg
dec
mov
jne
jmp
data16
out
mov
xor
or
add
outsl
inc
jo
add
jmp
xor
leave
mov
inc
inc
cmp
or
aaa
sbb
pop
inc
inc
or
adc
or
jbe
dec
jge
mov
pop
subb
push
pop
push
jne
test
xchg
mov
jne
push
mov
sub
pop
add
mov
or
sbb
add
jne
mov
add
fs
adc
dec
dec
sti
fcomps
adc
xchg
push
loopne
sbb
and
adc
dec
and
cmp
pop
ja
adc
mov
clc
mov
or
add
cmp
ret
lock
inc
mov
and
fldl
or
dec
add
and
jne
mov
jne
pop
and
hlt
ljmp
shll
or
mov
cmpl
aas
sub
xor
ds
loope
je
stos
and
sbb
jnp
push
daa
sti
mov
inc
add
or
shl
cmp
ret
dec
inc
or
pop
das
lods
ror
sbb
sbb
movsb
sti
test
cmc
xchg
hlt
jo
sub
pop
in
mov
and
ja
or
push
mov
adc
test
dec
sub
jg
rcrb
fcomps
or
mov
and
mov
lea
add
or
sub
lock
push
rorb
xor
cmc
bound
adc
das
rolb
or
sbb
flds
imul
push
or
data16
rcll
inc
sbb
cld
or
into
dec
repnz
cmpb
pop
mov
sbb
inc
jmp
pop
mov
sbb
imul
js
xchg
test
jmp
or
loopne
fsubl
push
test
add
in
sub
cmp
cmp
xor
push
jl
call
fisubrl
push
cmp
push
xchg
gs
xchg
js
sbb
dec
ds
in
js
push
push
xor
or
and
mov
fs
aam
pop
sub
xchg
imul
jne
insb
pop
mov
inc
lock
movsb
cli
and
outsb
insb
mov
mov
sbb
xor
fwait
mov
or
inc
jecxz
and
push
lods
lcall
mov
jno
inc
movsl
add
push
je
into
jmp
fmul
call
lods
imul
aaa
mov
das
insb
jle
push
cmc
add
aam
minps
gs
adc
push
jle
repnz
mov
adc
xor
mov
movsb
dec
push
clc
push
inc
test
cli
add
pusha
inc
les
sub
sub
stos
dec
mul
int3
xchg
cmp
mov
outsl
rcrb
adc
cmp
pop
daa
test
jle
or
out
cmp
pop
cli
aad
out
ds
aam
sub
dec
pop
or
mov
or
test
inc
push
test
adc
cmpsb
sti
and
push
mov
xchg
or
movsb
pop
cmp
shll
stc
test
adc
adc
and
fsubrs
push
fsubp
push
push
sub
js
adc
jg
inc
filds
pop
mov
jmp
cmp
loope,pn
dec
cmpsl
repz
jp
mov
decb
shlb
shrb
mov
fwait
adc
adc
scas
push
cmp
gs
jl
xchg
mov
sub
sub
and
loope
push
jbe
insl
nop
nop
dec
subb
sahf
pop
push
xor
and
xchg
add
lock
mov
xlat
mov
inc
repz
bound
nop
xchg
sbb
mov
or
dec
xchg
mov
pop
lods
faddl
insb
repnz
jno
dec
nop
mov
adc
clc
adc
popa
pop
pushf
add
cwtl
and
mov
mov
or
loopne
mov
sbb
test
das
popf
fs
imul
mov
add
iret
ds
insl
ficoms
pop
adc
xchg
lods
insb
out
das
mov
xchg
xchg
dec
inc
mov
fsub
xchg
dec
mov
mov
fwait
dec
and
and
dec
mov
cmp
jne
xlat
gs
and
or
sbb
cs
nop
fs
mov
inc
push
imul
jo
pop
push
or
and
lret
stos
add
fmul
adcb
push
mov
cmp
addl
sub
mov
rclb
pop
xchg
jge
xchg
mov
mov
dec
testl
push
push
mov
mov
xor
jle
cs
dec
daa
cli
loop
std
std
fisubrl
pop
test
test
jle
inc
push
icebp
adc
xor
dec
cmp
adc
and
ret
pop
movsb
jge
adc
movsl
lret
cmp
orl
popf
mov
adc
ret
jnp
push
fwait
mov
add
aaa
mov
xchg
js
ljmp
fsubr
int
imul
mov
outsl
jmp
popa
enter
xor
mov
fildl
stc
decl
hlt
cmpsb
mov
inc
xor
es
and
dec
lea
cmp
test
shl
or
add
mov
push
push
imul
or
mov
testb
sbb
fmull
inc
cmpsl
cmp
rolb
repnz
inc
xchg
test
lea
add
push
test
push
push
loope
stos
movsl
dec
mov
insb
jg
jl
push
lret
rcrl
xchg
sub
jmp
dec
adc
xor
mov
pop
sti
sub
cmp
out
lret
aas
push
pop
flds
aam
pop
faddl
out
je
and
out
mov
push
push
inc
jns
sbb
inc
and
xchg
repnz
mov
push
divb
add
ja
cwtl
loopne
cld
push
enter
clc
and
adc
or
pushf
xchg
and
pop
call
movsl
dec
xchg
mov
cwtl
arpl
jne
dec
jge
dec
adc
test
xchg
out
push
or
imul
adc
enter
dec
pop
mov
inc
push
push
fmull
jno
add
imul
or
adc
movl
inc
and
mov
dec
push
sub
push
xor
inc
add
je
or
cmp
je
jb
nop
xchg
jle
ja
inc
and
sti
adc
push
and
pop
xchg
add
xchg
test
add
dec
add
adc
inc
lds
cmp
pop
cmp
sub
adc
or
jl
dec
sbb
add
movswl
out
sbb
push
and
inc
addb
sbb
data16
pop
xchg
and
jle
mov
or
adc
movl
les
cmpl
cmp
in
and
and
xor
push
andl
pushf
adc
aaa
xor
shll
dec
movb
insb
out
ja
mov
jnp
push
lods
push
jmp
test
push
ficomps
and
mov
in
call
jo
xchg
outsb
xchg
cmp
ret
xchg
or
xchg
xchg
xor
inc
xor
adc
add
add
out
es
addb
adcb
fwait
add
orl
pusha
aam
dec
and
and
sbb
popf
inc
add
bound
mov
add
dec
cli
pop
push
adc
pop
nop
mov
les
call
xchg
fisubl
rorb
call
sub
pop
pop
into
pop
add
jne
repnz
test
std
inc
sbb
and
jne
dec
and
mov
call
jmp
or
inc
lock
add
sub
pop
push
sub
sub
inc
ret
mov
xor
add
jmp
push
push
or
sbb
pop
ret
xchg
and
test
rclb
mov
lods
push
addb
push
xchg
xchg
out
or
mov
fsts
ds
mov
mov
push
fwait
pop
jnp
mov
inc
cmp
mov
lret
adc
jl
es
inc
sbb
out
fcmovne
or
jecxz
ja
push
mov
push
pcmpeqb
push
aas
push
pop
mov
lds
orb
or
push
and
adc
xchg
sub
dec
mov
sub
shlb
sbb
fs
test
in
int
xchg
test
xchg
mov
nop
testb
repz
jl
mov
popa
or
cltd
xchg
mov
fucom
out
cmp
fimull
and
inc
leave
add
dec
adc
mov
mov
xchg
cwtl
adc
nop
xor
jo
xorb
cmp
sub
adc
mov
cmp
sbb
jne
push
maxps
repnz
push
adc
mov
icebp
cwtl
jge
in
setne
stos
pop
cmp
push
or
cwtl
pop
lock
test
insb
cmc
lock
es
and
int3
xchg
jnp
test
xchg
mov
push
cmp
mov
xchg
sub
push
sub
adc
adc
mov
xchg
xchg
insb
adc
xchg
mov
fs
mov
dec
jbe
mov
inc
fs
inc
xor
and
lret
xchg
insl
xchg
mov
jno
or
adc
or
sub
dec
aam
adcb
in
and
push
enter
jmp
cld
cli
adc
pop
imul
in
mov
cmpb
add
push
sbb
lods
test
mov
loop
test
aam
xorb
outsl
xor
mov
jp
sbb
fs
lods
and
mov
and
push
cs
fmuls
pop
jmp
push
ficompl
xchg
push
aam
mov
rorb
enter
pop
iret
call
mov
jne
jnp
pop
pop
sub
sub
mov
jns
adc
in
decb
push
cmpb
iret
ss
adc
pop
fsub
xor
shlb
movaps
outsb
sbb
stos
xchg
cmp
movsb
les
insb
lahf
or
mov
mov
inc
fmull
aad
lahf
cld
xchg
sub
dec
sar
daa
loop
push
inc
add
inc
push
xchg
mov
js
sub
or
and
adc
cmpsl
push
and
cmp
and
lahf
clc
je
jge
adc
stos
mov
dec
test
ret
mov
loop
mov
test
mov
call
in
das
and
jmp
call
and
and
das
mov
cld
lea
xor
aas
mov
and
jne
sbb
es
fstl
nop
std
xor
inc
outsb
xchg
adc
pushf
add
add
add
push
mov
mov
fdivr
xchg
dec
int3
test
xchg
jno
or
push
xchg
adc
in
mov
dec
xchg
inc
mov
test
gs
add
push
dec
xor
fidivrs
sub
mov
js
mov
mov
insb
push
mov
adc
lds
cmp
jge
add
sbb
inc
orb
push
int3
sbb
dec
popf
adc
or
cli
mov
inc
cltd
mov
stc
push
dec
sbb
push
xor
inc
push
ffreep
mov
cmpsb
mov
jnp
jb
or
xor
jmp
adc
pop
test
pop
insb
sbb
or
cmp
in
sub
cltd
fdivrs
mov
repz
sbb
sbb
rolb
or
lods
fildl
cmpsl
xchg
mov
sub
xor
nop
mov
push
sahf
pop
push
sbb
or
adc
rcll
push
xor
call
jmp
mov
pop
fsubrs
lea
mov
mov
push
sbbl
jb
fidivs
cmp
sub
das
mov
sbb
pop
and
andl
js
call
sbb
test
mov
popf
sbb
mov
cwtl
push
mov
mov
push
dec
and
xor
cld
test
push
xchg
nop
bound
cmp
sub
push
and
inc
and
addr16
jecxz
or
sub
stc
enter
clc
xchg
imul
and
push
dec
adc
icebp
mov
pop
loope
std
jecxz
or
push
dec
fwait
lods
mov
xor
adc
pop
mov
rcrb
test
lock
pop
popf
push
aad
or
jne
push
call
adc
xlat
inc
or
xchg
negb
mov
and
inc
add
cmp
ljmp
in
lods
pop
adc
add
testb
out
sbb
inc
clc
inc
movsl
adc
mov
add
mov
cmpb
xchg
or
repz
adc
mov
cmp
stc
and
mov
jp
ret
shlb
dec
fs
pop
sbb
cld
and
mov
jo
lret
mov
mov
mov
cwtl
inc
cmpb
add
mov
jne
xchg
nop
bound
inc
aam
pop
inc
mov
jo
sti
and
push
mov
xor
inc
ljmp
rcll
mov
jmp
sub
cmp
cmp
push
mov
rorl
sub
scas
mov
call
xchg
sahf
pop
xchg
sub
jp
sar
xor
lcall
insb
mov
push
mov
add
loope
roll
mov
sbb
mov
orb
ret
xor
adc
or
inc
rorl
jl
adc
testb
clc
mov
sbb
xchg
lds
mov
pop
xor
adc
ljmp
mov
mov
adc
outsl
and
dec
xchg
into
mov
rorb
adc
jbe
incl
adc
jne
out
sub
sbbb
lods
and
ja
test
sub
sub
stc
sub
add
inc
cmp
sub
leave
dec
xchg
sarb
divl
inc
adc
adc
fcomp
decb
mov
orb
pop
lods
inc
dec
lods
inc
sbb
jmp
ffree
pop
sbb
aaa
cli
loop
pop
dec
pop
adc
pop
mov
inc
mov
inc
iret
jb
mov
xchg
test
sbb
pop
bound
add
mov
adc
mov
hlt
and
xchg
inc
dec
scas
push
dec
sarb
push
adc
push
dec
push
sbb
sub
ds
sbbl
inc
dec
mov
orl
push
popf
jbe
lds
mov
call
sbb
push
out
sar
rcrl
jo,pn
cmp
ds
fisubs
andb
pop
mov
sbb
jle
push
or
in
adc
cli
nop
out
xor
es
inc
fldenv
push
push
xchg
rsqrtps
icebp
push
inc
cs
xor
je
cmp
push
fimull
int3
inc
inc
bswap
and
cmc
adcb
loope
sbb
dec
testl
adc
add
sbb
test
xor
cmpsb
xchg
pop
push
xchg
add
mov
inc
jg
aam
ljmp
jl
outsb
push
xor
hlt
dec
inc
inc
lock
popf
inc
push
push
pop
sbb
pop
fsubs
rol
cmpsb
sbb
push
shll
push
adc
xor
std
scas
xchg
cltd
sarb
cmpsb
push
clc
test
jle
decl
inc
insl
push
cmp
sub
gs
into
dec
mov
adc
je
bound
jp
int
dec
push
icebp
jne
inc
dec
ret
add
call
sub
xor
out
jne
bound
or
pop
testb
call
ret
sub
movsb
int
jmp
adc
mov
into
test
call
cmpsl
cmp
aam
xor
jle
mov
mov
inc
dec
mov
push
sub
mov
jae
movsl
push
xor
cmp
pop
test
test
testb
jbe
cmp
or
and
incb
je
jne
test
adc
push
jecxz,pn
push
cmp
xor
rcrl
jb
mov
es
call
xor
jb
clc
cmp
and
push
jno
outsl
push
fdivrs
and
int
inc
lock
push
inc
lea
lods
cmpl
ss
call
repnz
in
sbb
mov
pop
xchg
lods
movsl
mov
sti
sbb
pop
inc
daa
push
jge
and
cmp
mov
xchg
or
lods
sbb
mov
cwtl
pop
dec
dec
jl
cwtl
mov
mov
xchg
add
andl
icebp
emms
test
into
jnp
or
sbb
xchg
enter
or
adc
and
dec
push
adc
adc
pop
sub
cmp
pushf
cmp
or
xchg
pop
mov
cmp
push
pusha
mov
clc
nop
hlt
test
cli
sbb
jge
outsb
mov
addr16
call
bound
inc
cmp
hlt
mov
aad
icebp
xchg
les
icebp
jmp
les
jo
pop
xor
or
xor
incb
mov
and
xor
pop
lcall
test
movl
add
push
pop
imul
inc
mov
cmp
fsubrs
dec
push
pop
mov
xor
dec
es
inc
xor
dec
add
mov
jp
mov
push
movsl
cmp
testb
mov
add
mov
dec
pop
inc
bound
jo
adc
enter
mov
mov
mov
sbb
and
lods
xchg
incb
and
outsl
enter
and
jns
mov
test
and
dec
push
nop
aas
lods
jmp
andl
or
in
pop
add
pop
mov
push
pop
mov
aas
xor
rcr
sub
mov
mov
outsb
push
or
add
sbb
push
xchg
or
mov
cmp
shlb
in
fldcw
cltd
mov
cmp
adc
inc
add
and
xor
cmp
aas
subl
nop
pop
pop
stos
stc
mov
cltd
movsl
pushf
out
repz
adc
das
lretw
xor
adc
dec
ja
daa
cmp
mov
xlat
or
vmread
fmull
fsubs
add
jmp
bound
pushf
cltd
mov
cmp
adc
push
add
loop
or
inc
mov
sbb
sbb
cmp
movsb
pop
mov
bound
or
or
inc
call
jns
mov
and
mov
pushf
jne
sarl
push
jge
inc
push
xor
mov
push
call
cltd
mov
rol
call
xor
push
sbb
and
insb
jae
or
sub
sub
and
outsl
outsb
mov
pop
cmp
insb
jne
stos
dec
inc
out
dec
mov
gs
mov
movsb
les
cltd
es
lods
push
jns
mov
lods
jno
mov
push
jbe
inc
adc
insb
cld
imul
sbb
adc
xor
inc
add
xchg
enter
xchg
mov
ss
dec
add
rcrb
jb
mov
sub
das
test
movsl
and
mov
jbe
xlat
mov
test
xchg
sbb
imulb
jne
pop
test
jo
mov
mov
push
pop
or
jne
movsl
and
push
add
je
ljmp
shll
add
pop
jl
lock
sub
dec
outsb
xchg
xor
popa
dec
adc
jne
jl
dec
xor
in
test
enter
shl
cltd
adcl
outsl
fnstenv
inc
jmp
push
xchg
and
adc
push
faddp
pop
mov
inc
xchg
jne
xor
aas
popa
in
mov
lahf
push
sub
call
clc
pop
mov
lret
pop
mov
mov
ret
add
jmp
cmpsb
and
js
adc
mov
and
and
loope
popa
mov
cli
jl
pop
cmp
ja
out
push
sub
inc
push
adc
or
or
cltd
outsb
or
int3
inc
xor
dec
sbb
or
sbb
sbb
adc
xor
mov
push
sbb
hlt
push
inc
dec
cmpsl
xor
mov
insb
push
push
dec
sub
and
xchg
add
aam
mov
push
dec
cmp
cmc
subb
pushf
add
lea
lahf
mov
inc
xchg
mov
sub
adc
pop
popf
fs
push
sub
pop
jmp
mov
mov
adc
pop
inc
test
in
vpmacsswd
inc
jne
leave
aad
sbb
jg
mov
mov
stc
add
mov
jg
sbb
sub
add
mov
add
inc
mov
clc
pop
outsb
aas
rorb
add
or
into
mov
into
and
stc
adc
sti
fstpt
inc
pop
fsub
enter
cwtl
xchg
mov
sar
adc
jae
clc
inc
cs
outsb
icebp
inc
flds
add
jge
and
clc
test
jno
test
push
hlt
sbb
test
fmull
loopne
cmpl
jne
push
cltd
test
add
dec
mov
aaa
push
xor
add
mov
ds
aaa
cmpb
jmp
cmpsb
push
adc
push
dec
adc
jns
xchg
in
pop
mov
lods
jae
and
stc
xor
mov
adc
mov
outsb
jo
repz
mov
sub
bound
js
push
mov
add
sub
in
sbb
repnz
cmp
enter
mov
mov
inc
dec
fdivs
sub
call
sub
xchg
sub
sbb
lret
adc
mov
or
sbb
aam
jge
rorl
xor
dec
mov
xor
push
fcomps
mov
xchg
out
popa
leave
clts
cmc
mov
sbb
mov
jge
cmp
in
sbb
sub
aaa
and
fst
mov
pushf
inc
daa
js
pop
lods
mov
xor
sub
push
cltd
pop
inc
cld
pop
jno
cld
and
jo
insl
jge
jb
outsb
mov
jmp
je
jno
ret
adc
test
pop
push
fadd
lahf
lea
ds
xchg
popa
stc
daa
xchg
jmp
out
xor
pop
and
enter
or
jmp
push
dec
push
in
push
mov
shrb
inc
js
and
mov
mov
xor
cwtl
mov
outsb
pushf
push
mov
test
pop
adc
cltd
push
mov
mov
ljmp
inc
imul
cmp
mov
clc
xor
xor
add
inc
dec
jae
dec
movq
jnp
mov
cmovb
sarb
aas
mov
xchg
mov
xchg
and
jmp
xor
stc
sub
push
clc
pop
int3
cmp
mull
int3
lds
repz
aas
sbb
test
xor
dec
lods
into
lock
outsb
in
and
add
mov
sbb
repnz
in
add
enter
orb
adc
and
ljmp
loopne
lock
cmp
and
call
sub
adc
mov
std
test
jle
adc
sbb
pop
repnz
dec
fstp
outsl
add
mov
jb
idiv
push
sub
push
sub
adc
adc
push
mov
and
xchg
enter
das
rclb
xchg
or
sub
jp
ret
imul
inc
inc
mov
and
jecxz
cmp
scas
out
xchg
es
xchg
cld
cmp
mov
insb
lea
and
test
inc
pushf
adc
out
es
xchg
mov
push
dec
push
push
adc
jmp
mov
fisubs
xchg
and
cmp
and
adc
std
inc
movl
sbb
hlt
pop
adc
scas
adc
adc
mov
pop
pop
testl
pop
arpl
scas
test
xchg
mov
adc
and
fnstenv
scas
sarb
push
shll
imul
jns
mov
fs
inc
icebp
outsl
idivb
pop
out
mov
cmp
fnstcw
push
repnz
cmp
inc
add
pop
gs
std
adc
mov
xchg
mov
iret
jmp
push
call
sbb
and
push
mov
or
adc
mov
push
lret
es
xchg
aam
xchg
mov
je
popf
jmp
fcompl
bound
or
adc
mov
inc
jle
cs
fcoms
dec
sar
sbb
cmp
cmpsl
jl
sub
sbb
add
cmp
xchg
popf
pusha
enter
push
push
fs
push
in
or
push
sbb
pop
xchg
hlt
xor
cld
push
xchg
pop
xchg
add
mov
jno
or
sbb
xchg
sbb
test
mov
or
loope
ja
cltd
add
pop
adc
push
cmpb
or
cmp
inc
or
inc
inc
or
or
pop
test
dec
nop
daa
rep
arpl
adc
or
hlt
jno
dec
sbb
fnstsw
notb
jl
cmp
orb
dec
sahf
adc
int
jg
stos
xlat
shll
inc
je
call
and
inc
jecxz
data16
push
cmp
xor
mov
dec
cmpsb
and
or
roll
ret
jl
stos
in
mov
out
mov
mov
pop
rolb
and
js
inc
inc
popf
or
test
adc
pop
pop
repnz
leave
sbb
cmp
insb
insb
jp
sbb
jl
push
xchg
bound
mov
or
inc
push
sub
xchg
gs
lcall
frstor
leave
adcb
es
push
add
outsb
mov
jmp
sub
pop
mov
lahf
xchg
xchg
jmp
or
mov
push
ja
mov
lock
cmp
xchg
push
sub
out
jl
test
adc
movsl
push
inc
mov
mov
inc
or
jno
test
pusha
push
cmp
push
cwtl
inc
ss
cmp
aaa
popf
sbb
test
dec
int3
lar
test
test
add
adc
mov
call
in
dec
xor
mov
pop
mov
mov
jmp
nop
movups
and
cmp
cld
add
cmp
mov
inc
xchg
mov
adc
movsl
fidivrl
pushf
adc
test
mov
std
or
adc
lea
dec
jge
je
xor
dec
idiv
adc
push
add
mov
sub
jns
outsb
lock
jl
push
into
fs
rolb
xchg
test
je
repnz
aas
aas
mov
mov
ficoms
mov
adc
test
adc
sbb
inc
xor
mov
push
inc
push
or
nop
adc
dec
mov
mov
push
repnz
and
dec
nopl
testl
inc
adcl
or
inc
push
xor
jae
push
lcall
fmull
sbb
nop
and
shrb
lds
mov
or
jl
mov
xchg
decb
add
lea
push
cmp
dec
pop
int3
sbb
add
adc
pop
imulb
inc
adc
add
in
stos
mov
jg
fstl
push
or
and
jae
loope
cmp
mov
subb
add
jecxz
sub
lret
xchg
push
add
ss
push
scas
pop
cmpb
mov
arpl
imul
cltd
pop
mov
pop
or
and
repnz
jne
pop
push
shrl
adc
add
rcll
mov
jmp
sub
xchg
sbb
sub
sub
mov
adc
cmp
mov
ljmp
push
dec
push
out
dec
lock
lea
fwait
and
pop
stc
adc
popa
cmpb
adc
add
or
clc
lahf
dec
insb
inc
and
aaa
int3
fstpt
les
jge
lea
movsl
jne,pn
aad
adc
sbb
push
mov
or
sti
push
xchg
clc
data16
dec
and
clc
fcompl
and
sbb
std
and
inc
dec
sbb
dec
xchg
std
rcrl
mov
push
pop
or
xor
push
jno
adc
int
fsubrs
dec
pop
push
adc
cmp
xchg
clc
lea
add
mov
jp
push
xchg
or
mov
cmp
pop
fs
arpl
sub
mov
outsl
mov
fcmovne
and
cmpsl
icebp
cmpsl
pop
movsl
or
fs
or
or
inc
cltd
movsl
testb
dec
xchg
xchg
or
test
xlat
loopne
mov
add
or
or
pop
adc
adc
pop
inc
mov
pop
je
sbb
inc
ffree
pop
pop
inc
cli
arpl
jmp
loope
loop
daa
fstl
adc
rclb
or
sbb
rcl
lods
jbe
sti
sub
cmp
jo
or
imul
mov
stc
push
xor
jne
xchg
add
out
add
lea
add
jo
push
dec
lret
jecxz
inc
jle
sub
and
and
or
cltd
lahf
adc
aas
sbb
aaa
aad
lcall
xor
xor
cmp
xlat
cmp
push
mov
pop
pusha
mov
popf
or
xchg
push
mov
adc
jecxz
inc
adc
rcrl
sbb
mov
xor
cld
pop
mov
cmpsl
jg
push
js
sub
inc
jo
hlt
push
cmpsb
or
jmp
or
push
mov
aas
pushl
pop
js
and
icebp
sbb
dec
das
js
out
push
cld
xor
stos
jmp
in
stos
and
call
add
in
add
xor
cmp
ret
jmp
je
push
push
pop
adc
mov
adc
dec
out
cld
and
pop
je
and
call
dec
and
mov
scas
aam
test
mov
inc
jno
daa
adc
mov
xor
daa
add
insb
daa
jno
fsubl
cmp
jg
mov
inc
adc
mov
mov
dec
xchg
fisubs
orb
adc
dec
popf
and
je
mov
sub
sub
mov
push
lods
jno
mov
push
lcall
shll
sbb
nop
lret
pop
call
xor
add
js
or
ret
xchg
pop
xchg
adc
enter
leave
mov
fmulp
lret
adc
adc
push
sub
xchg
icebp
mov
stc
lar
jg
cmp
or
fildll
movhps
jl
push
or
jno
dec
adc
mov
and
push
lcall
adc
cwtl
adc
inc
out
and
dec
les
enter
add
xchg
or
add
add
ds
cs
adc
loop
dec
inc
ds
aad
inc
lods
fsubs
inc
cmp
inc
inc
inc
mov
fiaddl
inc
hlt
add
mov
and
xchg
add
addb
lea
adc
clc
rorl
add
inc
ret
movsl
sbb
dec
das
cmp
adc
pop
push
cmpsl
jg
cmp
adc
fsubrs
xor
sub
or
sub
push
or
scas
faddl
adc
notb
xlat
pop
xchg
xchg
xchg
jg
dec
lods
adc
nop
cmp
dec
bound
push
sub
stc
add
jmp
push
sbb
adc
inc
je
stos
subb
push
push
rcr
xor
cld
movsb
nop
std
adc
or
jmp
push
jns
or
movsb
adc
int
out
mov
adc
cmp
and
jmp
scas
out
dec
adc
inc
mov
cmc
adc
aaa
ds
pop
add
sbb
and
xor
scas
add
mov
out
cwtl
push
test
enter
adc
jl
jns
adc
sbbl
test
scas
adc
dec
xor
shr
push
mov
mov
sbb
push
dec
jo
pop
loopne
and
mov
jb
out
adc
sahf
mov
sub
jmp
int3
or
pushf
inc
adc
sub
and
cmpsl
mov
dec
in
shll
or
xchg
mov
xlat
in
jbe
dec
jmp
xor
dec
clc
test
sub
mov
ds
je
mov
orl
mov
and
sarl
pop
cmp
addr16
push
jg
dec
pop
sbb
mov
adc
imulb
call
xor
and
sub
sti
or
ds
testb
inc
push
dec
xchg
mov
fnstcw
add
fistl
pop
jne
add
insb
add
mov
fcom
inc
inc
push
dec
pop
push
mov
lahf
in
adcl
clc
aas
dec
dec
std
lods
int3
je
pop
test
cmp
inc
inc
and
test
inc
cli
xor
sarb
mov
es
mov
mov
dec
jl
test
stos
ret
adc
or
or
push
mov
mov
add
pop
jbe
push
mov
jo
cli
mov
push
stos
data16
mov
dec
jecxz
inc
rcrb
sub
sahf
or
and
mov
dec
out
cwtl
lods
adc
scas
addr16
insb
push
js
cld
push
or
push
outsb
and
das
bound
inc
or
xchg
xor
push
inc
pop
je
adc
test
call
test
xchg
jns
cmp
adc
ret
pop
and
mov
mov
dec
out
sub
xchg
dec
xchg
pusha
and
cld
xor
mov
jecxz
sti
adc
mov
dec
daa
pushf
dec
jmp
mov
cmp
jo
test
mov
cmp
sub
xchg
add
push
mov
rorb
popa
push
sbb
lods
or
pop
xchg
mov
sbb
sbb
mov
push
or
cltd
add
out
push
adc
pop
fidivl
pushf
adc
mov
or
test
inc
mov
dec
mov
adc
jle
les
mov
test
mov
sbb
and
dec
lret
sub
test
and
sub
or
dec
incb
testb
xchg
sbb
mov
add
movsb
jns
movsl
push
xchg
dec
xor
lock
pushf
mov
push
jmp
xor
push
xor
pop
leave
mov
rcrb
stos
mov
jl
bound
scas
pushf
ljmp
imul
push
data16
mov
mov
out
sbbl
push
es
inc
and
and
rcll
push
cwtl
les
insb
push
lock
push
mov
ds
pop
adc
outsl
aas
xchg
sbbl
sti
adc
push
enter
xor
jmp
clc
popf
and
bound
movsb
jg
xchg
pop
adc
push
and
je
jne
out
adc
xchg
xchg
in
push
sub
jmp
cwtl
adcb
movsb
xor
insb
pop
xlat
xor
pop
xchg
movsl
jno
adc
mov
or
sbb
mov
shlb
add
dec
insb
hlt
xlat
cmpsl
xchg
dec
xor
xchg
mov
js
jne
insb
adc
push
mov
gs
inc
aaa
and
inc
out
xchg
pop
jo
rolb
jns
ficomps
aas
jl
push
mov
aaa
dec
mov
and
or
adc
xor
add
and
mov
rcrl
stos
xor
sbb
ror
dec
rcrb
in
adc
dec
bound
push
es
in
test
pop
adc
jne
ljmp
dec
outsb
add
push
adc
lock
dec
sbb
sub
xorb
bound
in
push
and
xor
and
xor
mov
ljmp
repz
xor
sarl
sti
inc
pop
jl
sbb
push
fs
push
loopne
je
add
sar
and
mov
adc
mov
and
lods
sahf
fsubrl
ja
jl
push
jbe
loop
jge
jl
lock
cmp
aam
aas
sub
stos
inc
mov
jnp
lds
pop
subb
and
push
js
fnstenv
mov
push
push
xchg
jae
add
je
mov
and
push
push
push
cwtl
call
fs
fidivrs
pop
in
xor
std
movsl
mov
inc
adc
mov
enter
sub
xchg
cmp
call
es
jl
push
jo
call
ljmp
mov
les
sbb
scas
jmp
movsl
mov
adcb
test
sbb
cld
test
dec
outsb
xchg
stc
push
test
push
and
pop
dec
sub
lea
dec
push
lret
push
push
cwtl
push
jge
scas
ret
and
push
dec
cli
pop
mov
cmpsl
inc
inc
mov
loope
insl
inc
push
dec
dec
add
pop
jg
and
inc
add
jg
dec
dec
div
aam
sbb
and
inc
xor
adcb
fidivrs
stos
dec
mull
je
mov
inc
sub
mov
jp
ret
repnz
leave
sub
fdivs
loopne
adc
sbb
jb
push
push
or
adc
cmpsb
cwtl
add
scas
sub
mov
rcll
adc
sbb
sti
jb
ss
daa
xor
enter
jb
popf
cltd
xchg
inc
outsb
xor
push
lret
cmpl
xor
jne
push
sub
or
popa
push
sub
sub
shll
push
inc
mov
daa
or
popf
repnz
pop
push
or
push
fstpt
jb
fisubrl
into
movb
inc
sub
enter
add
mov
mov
inc
add
dec
sarb
jae
jo
xchg
jle
push
adc
lock
sub
cltd
or
push
sbb
lsl
mov
ret
flds
cmp
xor
sub
inc
and
sbb
mov
ret
nop
call
add
add
add
mov
adc
mov
loop
enter
jno
push
pop
fucomp
idiv
sub
or
mov
repz
dec
aas
inc
mov
cld
pop
mov
push
hlt
xor
mov
cmp
in
pushf
push
call
sub
and
cli
inc
mov
stos
in
repz
mov
pop
push
xor
loop
adc
pop
or
sub
daa
adc
repnz
add
daa
aaa
cmp
js
lock
sbb
mov
xor
xor
gs
sbb
or
mov
sub
outsb
or
adc
clc
dec
roll
pop
pop
sub
mov
call
xchg
and
pop
int3
cvtps2pi
loop
cwtl
mov
xorb
dec
inc
je
jmp
aad
xor
mov
jge
mov
sbb
adc
and
mov
cmp
add
jnp
adc
push
cmp
dec
aam
pop
mov
jmp
dec
ret
call
add
xor
adc
cmp
add
je
push
aaa
dec
das
arpl
adc
out
bnd
mov
outsl
fdivrs
inc
orl
testb
sbb
shr
mov
fwait
fs
fs
mov
int3
mov
dec
dec
or
dec
xchg
sub
mov
mov
jbe
je
testb
and
call
push
adc
push
ss
inc
or
movsl
cmp
mov
adc
cld
push
push
lds
xlat
insb
inc
inc
adc
adc
rcrl
sub
enter
sub
mov
or
xchg
inc
mov
cwtl
mov
je
scas
sub
ret
mov
inc
cli
push
rclb
dec
mov
cli
ret
adc
dec
push
push
movsl
xchg
mov
add
mov
cmpsl
xor
sbb
orb
test
and
mov
ja
and
sbb
cld
mov
and
jo
inc
fdivr
gs
test
pop
insb
jne
jns
xchg
fmuls
xchg
inc
js
push
pop
mov
daa
out
mov
outsl
inc
inc
testb
and
xor
or
popf
sbb
rclb
negl
fs
or
mov
das
push
in
inc
xchg
mov
gs
movsb
cmpsl
sbb
lea
dec
xchg
cli
push
mov
or
loopne
stc
adc
pop
sub
mov
in
pop
mov
sbb
dec
xchg
cwtl
jle
sbb
mov
leave
sub
mov
mov
testl
cmpw
add
lods
adc
push
push
lock
jmp
and
jae
lea
push
jo
or
push
pop
cmp
xchg
push
and
inc
int
add
aam
mov
jbe
xor
mov
xchg
dec
mov
and
js
outsb
jl
add
shll
enter
jo
imul
sub
xchg
sbb
cwtl
bound
adc
mov
pushf
jb
sbb
jb
pop
popf
outsb
fidivs
scas
xchg
cmc
in
ljmp
mov
es
ds
pop
and
inc
jnp
mov
clc
in
pop
jb
lds
push
mov
push
jno
or
mov
mov
sbb
dec
hlt
push
mov
pop
dec
shl
std
pop
jg
push
inc
frstor
pop
mov
mov
mov
sbb
imul
adc
and
push
dec
dec
enter
jg
jno
and
cmpsl
jg
mov
test
cmp
ds
pop
test
push
push
insl
cmp
jle
dec
lock
add
sarl
jb
jmp
xchg
daa
dec
insl
decb
xchg
or
in
push
xchg
out
inc
fsubr
mov
adc
or
or
shr
and
mov
xor
shlb
pop
inc
sbb
dec
lock
push
lea
mov
inc
mov
dec
sbb
xchg
andl
pushf
push
ret
add
jne
stos
ds
and
mov
es
fadd
inc
lock
inc
call
push
and
jo
pop
in
add
xchg
sub
sbb
add
movsl
push
es
xlat
xchg
inc
in
sub
mov
loopne
movsb
cmp
sbb
xchg
pusha
adcb
testb
xchg
aaa
xor
orb
push
push
mov
jmp
fdivs
popf
add
subb
not
scas
icebp
mov
xor
mov
and
sbb
sub
sbb
dec
add
inc
mov
cltd
or
mov
inc
jmp
mov
mov
sbb
shlb
flds
ja
fs
push
push
fnstcw
or
mov
leave
cwtl
popf
push
xor
call
clc
dec
and
ret
movsb
dec
test
pop
xchg
xchg
stos
mov
pusha
jo
pop
adcl
aam
fcomps
mov
push
movsl
mov
es
adc
xchg
mov
adc
in
mov
sbb
ds
pop
lods
or
call
aad
int
add
ss
dec
cwtl
sub
jbe
aad
inc
add
adc
adc
jne
fdivr
and
clc
jge
jle
jbe
inc
jecxz
popa
sub
into
xor
push
dec
in
dec
lock
or
sbb
push
mov
cmp
cmpl
xchg
add
and
loop
pop
adc
fcomps
xchg
and
jo
mov
push
jmp
popa
les
call
mov
mov
test
inc
and
push
cli
rcrl
fiaddl
or
sbb
test
xor
sbb
xchg
ja
pop
or
push
fisttps
xlat
in
jo
mov
inc
adc
xor
push
repnz
cld
jno
push
pop
pop
add
mov
mov
call
add
test
inc
cmpl
push
xchg
nop
test
push
jno
jae
push
inc
clc
xor
inc
or
std
gs
or
fs
ja
push
insb
pop
mov
cli
and
mov
push
jmp
insb
or
adc
push
imul
fdivs
inc
fdivl
jecxz
ret
shrl
adc
jnp
or
clc
lret
dec
jmp
push
sub
arpl
je
lcall
leave
loop
adc
pop
imul
jmp
push
mov
mov
dec
jmp
and
mov
jmp
mov
das
fcompp
imul
fcoms
mov
mov
fnstcw
pusha
or
bound
push
cmp
ss
cwtl
dec
add
dec
scas
xchg
data16
nop
lods
mov
nop
xchg
fdivs
xchg
fildl
fcoml
or
xchg
addr16
mov
cmpsb
and
sbb
lods
inc
add
xor
and
xor
add
cltd
mov
sbb
das
fnstenv
jno
not
sbb
sbb
pop
outsb
mov
sub
cmp
sub
test
gs
loope
pop
sbb
xor
cmp
sti
push
xorb
mov
adc
adc
jne
hlt
pushl
mov
call
jae
push
xor
aas
mov
mov
fdivl
or
jae
fs
and
push
and
bound
cmp
add
lea
cmpsb
sbb
pusha
and
cmp
daa
adc
pushf
add
clc
call
dec
ljmp
and
mov
pop
push
call
movsl
dec
jbe
sbb
movsl
and
xchg
push
inc
out
and
popa
ja
jne
inc
add
mov
jle
sbb
sub
aas
stos
jge
mov
mov
mov
xor
jp
inc
std
cli
inc
cmp
lock
outsl
push
or
mov
jmp
cmc
push
sub
or
mov
mov
xor
inc
inc
stos
rcrl
inc
es
cmp
sub
sbb
lea
and
mov
and
test
loope
push
test
jmp
adc
icebp
mov
inc
inc
int3
repnz
or
push
sahf
adc
xchg
push
das
mov
aad
push
add
pop
sub
daa
inc
int
xchg
and
sbb
adc
pop
dec
inc
jmp
enter
repz
inc
or
cli
ja
leave
out
sub
lret
sub
pop
sub
or
push
test
nop
sub
and
and
jge
pop
outsl
and
or
xor
lret
cmpsb
test
or
les
data16
mov
bound
cmp
xor
dec
loopne
pop
push
aaa
call
mov
inc
mov
jnp
pop
mov
add
cmp
mov
nop
ret
loopne
popa
mov
cmpsl
or
push
pop
cwtl
inc
push
push
xchg
cmp
imul
adc
push
xorl
pop
cmpsb
adc
dec
loopne
cmpsl
push
cmp
xchg
pop
inc
js
cmp
imul
pop
in
dec
jg
outsb
add
inc
cmpsl
in
mov
xor
push
pushl
cli
lea
mov
mov
out
subb
inc
or
nop
adc
inc
jg
orb
repnz
clc
fbstp
add
mov
cmpsb
jl
mov
iret
test
nop
pop
shlb
out
add
dec
int3
insl
inc
cmp
sub
xor
pop
xor
or
mov
and
pop
and
jbe
hlt
jle
lahf
stc
sub
add
clc
out
inc
or
mov
or
cltd
in
xor
sub
xor
xor
push
test
or
std
in
ja
cmc
lds
push
lret
je
inc
cmp
cld
xchg
and
in
dec
aaa
in
jmp
pop
adc
jg
sahf
and
test
pop
push
outsb
call
cmp
cmp
xor
or
cld
jle
ja
stos
mov
je
add
cmp
cwtl
mov
inc
ret
mov
cltd
rcrl
add
in
dec
ret
fimull
pop
lods
stc
notb
xchg
mov
dec
int
add
adc
das
dec
std
leave
fs
adc
add
sbb
mov
xchg
or
inc
inc
jecxz
shlb
mov
add
clc
jno
adc
addr16
dec
je
push
add
push
add
popa
shrb
sbb
imul
add
xchg
in
inc
daa
neg
xor
repnz
and
push
daa
pop
nop
inc
mov
xchg
mov
cmp
js
sbb
inc
push
dec
lret
dec
mov
dec
push
lea
push
add
movsl
and
inc
lock
aas
adc
ss
mov
jne
jle
push
lret
popa
popa
inc
je
push
pop
cmp
mov
or
jne
mov
cmp
ret
pushf
icebp
mov
or
mov
or
inc
jmp
dec
xor
adc
divb
and
push
xor
divb
push
ret
pop
decl
out
icebp
test
dec
je
mov
icebp
jno
push
push
xchg
insb
pop
repz
fadds
bound
roll
xchg
inc
mov
in
test
or
scas
push
jge
mov
les
adc
out
and
cmp
setp
bound
xor
push
xchg
dec
cwtl
jne
inc
pop
sub
test
test
pop
clc
sbb
mov
popf
xchg
movsl
mov
test
ljmp
pop
mov
sub
mov
adc
cmp
mov
or
sbb
inc
cmp
jl
xor
ret
inc
jle
cmp
xor
dec
pop
add
je
cmp
or
add
cmp
jl
mov
adc
inc
js
xchg
pop
call
mov
mov
mov
pop
add
test
jg
pop
mov
push
lds
mov
inc
push
inc
xor
sbb
movsl
fstl
inc
dec
or
xor
or
dec
xchg
pop
pop
outsl
cmp
rcrl
outsl
mov
or
sbb
and
out
dec
rorb
mov
pop
jp
das
add
add
hlt
je
popf
cltd
jl
arpl
sbb
lea
or
jle
lahf
ss
or
rclb
les
push
mov
dec
sbb
pop
out
je
push
add
out
push
push
addb
mov
push
daa
adc
mov
mov
add
repnz
push
jns
mov
push
setae
std
xchg
nop
test
in
cli
dec
lods
push
pop
lret
add
in
fsubrs
repz
ja
sti
outsb
mov
ret
sub
mov
jno
or
daa
mov
jmp
pop
lret
cli
rcll
aas
lods
or
sti
lret
daa
inc
ret
aam
gs
cmp
xchg
in
sbb
lcall
call
adc
imul
inc
in
cltd
pop
pop
sbb
ret
sbb
xor
mov
mov
sti
jne
nop
scas
cs
pop
insb
mov
xor
dec
stos
leave
push
or
adc
xorl
stos
push
xlat
mov
adc
out
inc
inc
push
mov
sbb
dec
sub
daa
ja
jae
testl
dec
inc
test
std
or
pop
gs
mov
movsb
mov
repz
test
aam
cmp
in
cmpsb
xchg
movsb
scas
jecxz
mov
mov
mov
fstpl
and
push
divl
jp
add
std
xchg
clc
jg
pop
divb
pop
das
adc
movl
push
cmpl
push
icebp
movd
mov
pop
cmc
pop
ss
das
xor
xchg
pop
addl
fs
sub
dec
cmp
popf
or
ds
xchg
lahf
xchg
cmpsl
cmp
pop
ret
lds
test
mull
mov
aad
add
vcvtss2si
add
test
in
pop
push
lock
xor
sti
imul
cli
mov
lods
jl
repnz
jmp
push
mov
lret
cltd
push
cmp
mov
pop
fs
push
mov
test
or
xor
adc
mov
sub
cld
mov
push
mov
lods
aaa
shrb
add
ffree
rclb
push
or
sarb
jne
lret
sahf
or
inc
cmp
das
ljmp
in
xor
lock
sbb
adc
and
out
sub
je
daa
fstpl
and
js
popa
jne
sub
das
or
inc
or
rorl
dec
loopne
shlb
dec
cli
or
sbbl
je
xchg
or
les
xchg
shr
mov
loopne
scas
jno
scas
cmc
mov
or
lea
fimull
fmull
ljmp
xchg
sti
aam
mov
shl
rep
lea
jl
loope
filds
add
xchg
scas
and
lock
sbb
orl
cmp
or
or
repz
xorl
daa
push
sub
fdivrs
jnp
xchg
out
and
fsubrs
dec
or
jmp
popf
mov
push
fmul
push
or
jae
je
mov
adc
mov
sub
hlt
out
stos
dec
add
enter
roll
fnstcw
xchg
or
inc
stc
push
or
or
pop
mov
sbb
shll
dec
dec
test
jg
daa
roll
sbb
mov
aaa
aas
push
repnz
sbb
or
xchg
pop
pushf
jmp
popl
add
and
jno
or
repz
cmpsl
stos
fldl
jne
or
sbb
jle
push
push
jg
xor
sahf
bound
enter
imul
daa
je
push
pop
or
inc
nop
add
mov
cmovp
nop
aas
xorl
and
je
dec
jnp
arpl
loop
dec
jo
and
push
adc
pop
and
push
ret
adc
and
int
adc
ret
and
adcb
adc
and
sbb
je
and
adc
cmpsb
pushf
inc
inc
or
test
adc
jg
pcmpeqd
loope
outsl
nop
cmp
pusha
ja
je
pop
lea
stc
adc
pusha
movzbl
aas
push
and
fidivrl
sub
jle
ss
pop
das
nop
dec
inc
and
sbb
pushf
pop
adc
sbb
loop
jl
test
push
xchg
mov
inc
loop
inc
or
adc
jne
dec
std
mov
fisttps
cmpsl
and
jge
mov
pop
add
add
add
add
push
or
pop
mov
xchg
aam
leave
adc
jp
xchg
and
sbb
notl
push
jle
cli
sub
dec
add
mov
mov
mov
inc
xchg
clc
xchg
adc
stos
int3
push
xor
mov
inc
jnp
repnz
je
enter
xor
sub
adc
lahf
mov
rolb
sbb
repz
test
or
sub
shlb
xor
hlt
xor
mov
ja
inc
cmpsb
jle
inc
ss
jbe
hlt
popf
je
xor
cmpb
jg
push
xchg
lret
cld
ret
sbb
and
jb
jl
clc
mov
repz
pop
xchg
add
neg
xchg
adc
insb
jno
test
nop
add
push
add
jl
push
push
test
clc
jmp
clc
lea
add
rolb
pop
push
fcomps
mov
fisubs
lods
pop
adc
mov
call
cmpsl
pop
test
push
push
mov
nop
cltd
push
fiaddl
push
aaa
xchg
incl
pop
nop
cmc
xor
mov
sbb
in
mov
inc
sbb
imul
insb
push
pushl
or
mov
pop
shl
add
push
aam
xor
and
fistl
call
and
int3
out
cli
xor
xor
test
xchg
push
xchg
jmp
arpl
jg
inc
dec
loopne
fisubs
jg
push
test
dec
xor
sbb
jmp
inc
pop
leave
scas
test
fidivs
stos
cld
add
mov
shll
dec
pop
mov
and
or
nop
inc
mov
in
shr
and
or
cs
xchg
jg
push
adc
inc
mov
sbb
mov
or
inc
sbb
jnp
inc
cmp
or
mov
mov
adc
or
outsb
xlat
xor
jo
mov
mov
lret
rorb
mov
and
daa
mov
sbb
adc
pop
adc
mov
cmp
pop
outsl
lods
jne
jo
xor
movsb
sbb
jmp
and
nop
nop
push
rcrl
push
add
test
and
lods
pop
movsb
ret
sbb
push
pop
popf
inc
xchg
cwtl
push
out
cmc
orl
insb
ficoms
repnz
outsl
adc
mull
jl
lods
jns
adc
inc
xchg
iret
sub
and
sub
movsb
sub
cmc
in
push
and
sbb
jl
inc
int
jno
sbb
xchg
mov
adc
orb
xor
fadds
and
inc
and
enter
loop
xchg
push
inc
sub
mov
inc
push
and
movsb
enter
aam
les
nop
sbb
mov
xchg
mov
jno
inc
add
sbb
xchg
frstor
cs
mov
or
scas
sub
add
and
jmp
sub
mov
and
mov
push
stos
xor
jp
lahf
notb
sub
mov
enter
and
jnp
sbb
dec
push
add
or
and
inc
adc
push
adc
loop
fisttpll
adc
inc
xor
leave
adc
or
mov
clc
test
jl
sub
lods
sbb
ret
push
pop
xchg
mov
cwtl
jmp
jle
inc
pop
ja
dec
test
mov
xor
lods
mov
test
jne
int3
les
pop
inc
jno
add
ds
adc
sub
into
notb
lods
pop
or
pop
cmp
sbb
pop
cld
icebp
and
push
or
xor
jle
shlb
sub
or
xor
leave
and
inc
or
jae
pop
movsl
in
mov
loop
adc
cmpsb
addr16
mov
push
jl
repnz
push
xor
in
inc
xor
sub
int3
inc
adc
jl
inc
adc
push
daa
dec
rcrb
adc
and
mov
popf
and
xchg
lea
xor
push
push
push
cs
sub
sub
jne
das
mov
cmp
add
adc
xor
or
ds
sahf
mov
movsl
push
hlt
es
fnstcw
enter
jne
xchg
and
sub
adc
sub
je
movsl
int
out
cmp
loop
add
clc
and
andb
push
std
mov
repz
test
xor
jne
incb
pop
sub
push
movsl
or
push
add
dec
fstpl
add
push
push
call
sub
cmc
pop
sti
pushf
int
nop
shlb
and
mov
es
ljmp
repz
enter
mov
sbb
add
and
stos
mov
inc
cmpsl
mov
hlt
js
sahf
pushw
adc
in
xchg
inc
lock
ror
aad
mov
call
sbb
inc
push
in
enter
incl
imulb
int3
xchg
cmp
push
ret
cltd
cltd
cmp
xor
and
std
inc
aam
and
sub
jno
push
pop
and
insl
lahf
test
cmp
push
clc
sub
ljmp
add
mov
add
pushl
aas
cltd
inc
add
push
int3
inc
inc
pop
pop
mov
push
ds
jns
test
pushf
sub
fldt
jbe
call
test
rcll
jmp
lods
fidivrs
pop
pop
cmp
pop
or
ds
xchg
loop
xchg
loopne
sub
je
jmp
sbb
lock
loopne
mov
jmp
sbb
cmp
or
push
or
es
add
and
ret
and
inc
mov
push
sbb
xor
inc
and
call
sbb
push
sbb
jo
xchg
dec
ss
xor
push
test
in
out
hlt
dec
xor
sarl
jmp
ja
xchg
mov
dec
shl
cmp
pop
cli
jbe
push
in
adc
mov
mov
dec
lds
inc
cld
fdivrl
loop
add
daa
sbb
push
test
popl
dec
inc
std
dec
decb
add
pop
clc
jb
jmp
and
les
sub
jns
push
xor
jno
push
xchg
ljmp
jg
sbb
insb
add
pop
je
xor
int3
lods
xchg
sbb
mov
ds
add
pop
movsl
repz
adc
sub
xchg
test
sti
sarl
mov
cs
dec
or
es
clc
inc
add
clc
add
mov
add
mul
dec
rol
daa
push
sub
dec
pushf
inc
mov
ret
mov
push
call
or
popf
xor
rep
mov
inc
std
cmp
inc
inc
repnz
fabs
pop
xchg
push
sbb
adc
inc
mov
inc
scas
sub
pop
stos
aas
mov
in
xor
sbb
enter
jbe
ret
cmpsb
or
and
sarb
lods
push
cltd
dec
cmp
insl
cmp
and
jge
inc
out
inc
and
add
mov
aad
stos
mov
adc
push
push
or
pusha
jb
ja
ljmp
inc
xchg
nopl
jnp
mov
mov
xchg
stos
xor
lods
jmp
cmpsl
mov
mov
sub
mov
gs
push
xchg
sub
int
clc
test
adc
xchg
and
xchg
and
mov
xor
je
xor
incb
mov
mov
loope
arpl
sbb
and
orl
dec
fstpl
bound
call
and
dec
pop
and
adcb
push
dec
mov
cmpsb
std
and
lds
sti
jge
cmpsl
push
popa
push
and
jne
xchg
or
into
ds
inc
lret
pop
sti
out
add
push
push
jl
push
jg
shrb
iret
inc
adc
aad
jmp
xchg
push
aad
adc
push
dec
cmpsb
aad
push
fs
pop
insb
std
aam
sbb
or
jnp
push
mov
cwtl
scas
push
test
and
fs
push
repnz
mov
xor
adc
in
enter
xor
mov
or
jns
sbb
sub
std
das
or
fwait
sub
testb
cld
aaa
movsb
push
xor
int3
jg
jmp
mov
jae
push
popa
mov
shlb
hlt
push
xchg
std
mov
push
mov
inc
and
sbb
rcll
xchg
mov
gs
sbb
or
jne
adc
lret
ret
or
pop
sbb
mov
mov
push
and
cmp
or
enter
cmc
pop
mov
or
add
lcall
js
sub
sbb
jmp
cld
jne
aam
or
hlt
sub
add
rcr
inc
shrb
out
test
insb
andb
ret
push
or
loop
dec
mov
jb
pop
cmp
pop
mov
lret
dec
lret
mov
daa
push
xchg
sbb
push
mov
or
push
adc
inc
stos
addr16
cld
in
push
std
mov
inc
mov
arpl
data16
add
ss
and
jmp
fbld
scas
mov
push
adc
enter
gs
add
xor
mov
jle
ret
jg
push
je
adc
jmp
mov
xchg
movsb
mov
and
and
xchg
pop
adcl
or
lock
jne
aad
and
jecxz
pop
stos
add
fcmovne
mov
xchg
inc
sti
dec
adc
int3
or
push
int3
fsts
mov
leave
xor
push
mov
loope
jge
inc
lcall
mov
iret
dec
scas
loop
and
dec
sahf
add
fsubs
clc
adc
dec
dec
leave
xlat
arpl
sbb
mov
shr
add
popa
call
inc
or
int3
xchg
js
push
outsl
jecxz
add
scas
mov
xchg
push
mov
rclb
bswap
mov
xchg
xchg
aaa
jne
xchg
aam
loop
cld
and
mov
xor
in
mov
leave
es
jle
ror
adc
hlt
cmp
leave
push
dec
arpl
pop
and
push
ja
ret
inc
fs
jecxz
xor
cli
testb
adc
and
adc
mov
in
imul
sahf
or
movsb
push
sbb
lar
sbb
mov
xbegin
push
add
jne
jo
inc
popf
jae
nop
std
mov
iret
xchg
pop
lods
into
aas
or
xchg
addb
inc
cmc
inc
push
or
in
lcall
sahf
test
mov
mov
dec
pop
or
scas
cmpsl
inc
sub
inc
mov
pop
fsubrl
fistps
movsl
jg
mov
push
lahf
pop
pop
push
int3
pop
cmp
dec
insb
jp
jae
les
push
call
pop
push
nop
mov
sbb
and
test
inc
inc
iret
scas
pop
rol
add
and
xchg
das
jmp
pusha
xchg
inc
mov
rolb
ljmp
inc
and
jne
fs
sub
add
cmc
ss
nop
and
pop
icebp
in
mov
lea
les
cld
jbe
xorb
sub
mov
inc
mov
dec
inc
adc
pop
push
pop
adc
cmp
nop
pop
sbb
jne
jge
leave
scas
adc
pushf
add
xchg
jnp
or
adc
and
push
in
pop
adc
xchg
push
mov
xchg
test
mov
pop
loopne
adc
pop
jno
cmovl
inc
int
loopne
cld
lods
xor
inc
push
fbld
inc
push
sub
or
push
out
adc
push
adc
mov
and
adc
mov
pop
jb
pop
sub
jns
and
adc
out
push
call
mov
or
jg
test
xchg
adc
cmpsl
adc
add
xchg
inc
fisubrs
mov
popa
test
fists
mov
lcall
cmpsl
cmpsb
ss
and
sbbb
pop
xor
clc
add
arpl
cmpsb
sub
out
sub
vmovups
lret
and
add
insl
test
fdivr
mov
fistpl
dec
imul
popa
stc
imul
adc
lods
xchg
dec
stos
lcall
xchg
insb
ljmp
mov
mov
leave
dec
cld
jmp
xchg
push
icebp
push
imul
or
and
mov
sub
pop
sub
mov
cs
enter
pop
ja
adc
xor
or
out
jle
cs
lret
xor
xor
pop
repz
fisubrl
and
dec
fcoms
push
enter
add
add
lret
adc
xchg
fcomps
or
jne
addr16
movsb
lret
pop
push
cmp
push
orl
mov
xlat
and
or
or
jle
mov
mov
or
add
sahf
dec
mov
push
dec
sub
dec
adc
mov
imull
fwait
mov
dec
test
push
sbb
jbe
and
jle
sbb
pop
mov
sub
adc
cmp
andl
push
mov
test
add
pop
imul
jne
mov
nop
sahf
sub
jne
fildl
jge
fadds
or
inc
iret
cli
in
xchg
inc
lock
fnstsw
pop
test
jp
call
pop
hlt
call
lock
into
repnz
mov
test
cwtl
call
dec
outsb
adc
jno
inc
and
loop
fisubs
lahf
push
nop
lret
clc
pop
les
inc
mov
enter
adc
rol
sbb
lock
xchg
adc
loopne
aaa
aam
xor
adc
movsb
je
test
or
inc
push
adc
xor
or
sar
inc
in
sbb
xchg
lock
hlt
movsb
addr16
fmuls
push
je
les
adc
out
in
pop
adc
mov
testb
sbb
das
shr
jo
jne
pop
add
cld
cmpsl
sub
or
xor
xlat
cli
cmp
cmp
out
mov
adc
pusha
fucomp
mov
int
adc
jne
stos
adc
mov
jmp
push
dec
es
andl
shrb
xor
inc
dec
repnz
enter
pop
cmp
mov
push
rorl
jb
adc
nop
xchg
or
jne
fstl
xchg
cmp
xor
or
mov
test
out
mov
dec
stc
mov
add
adc
adcb
or
sub
notb
rorb
pusha
in
push
push
push
push
mov
adc
or
mov
jno
xor
and
inc
jmp
call
in
ljmp
dec
inc
lar
xor
xor
in
pop
or
pop
hlt
and
adc
pop
add
jmp
add
or
pop
mov
scas
and
inc
inc
jo
in
push
push
scas
dec
lea
test
adc
sub
push
sbb
push
cmp
xor
add
jb
cmp
mov
jb
pop
adc
or
push
pusha
mov
pop
jb
orl
cmpl
ja
adc
inc
inc
inc
and
adc
and
adc
mov
xchg
and
sbb
or
or
xchg
sub
sbb
add
pop
adc
orb
into
xchg
divb
daa
insb
jno
mov
fildl
test
xor
jne
and
mov
add
dec
dec
mov
xor
insb
adc
jmp
pop
lods
addl
pop
or
inc
push
inc
cmp
pop
or
xchg
mov
and
and
push
add
ret
adc
sbb
test
bnd
push
mov
pop
mov
or
icebp
mov
xchg
mov
das
adc
rorb
cmp
dec
lea
or
mov
xchg
xor
je
lea
push
xchg
and
out
shll
mov
cli
sub
add
and
and
dec
idiv
mov
sti
cs
cwtl
xchg
push
sbb
addr16
mov
adc
in
dec
test
cmpsl
fs
cmpsb
in
pop
pop
fldcw
adc
push
stos
mov
pusha
call
adc
test
loope
or
xchg
push
push
mov
bound
push
lcall
push
add
das
dec
or
jne
adc
ret
xor
jge
mov
dec
mov
inc
bound
jns
fimuls
js
call
loop
xchg
jecxz
mov
or
dec
loopne
cmpsl
sti
push
aaa
repnz
jne
push
sbb
mov
sub
mov
addb
sbb
idivb
xchg
sub
push
imul
fsubr
mov
sub
jge
dec
inc
pop
push
adc
dec
inc
push
mov
or
pop
dec
adc
sbb
xchg
cmpsl
xor
pop
push
jg
adc
dec
sar
jg
inc
push
mov
dec
cli
and
jno
test
mov
sbb
xchg
add
pop
cli
into
push
lods
and
cmp
repnz
inc
sub
ficompl
sbb
sbb
fxch
mov
jge
jmp
cmp
dec
push
inc
push
pop
xor
xchg
fcomip
call
mov
inc
sti
push
dec
xchg
mov
dec
addl
orb
pop
pop
in
lret
mov
test
push
outsl
push
xor
dec
nop
cmp
mov
jmp
mov
cs
pop
sbb
adc
xor
and
pop
push
or
lods
fdivp
in
and
mov
inc
mov
cmp
movsb
jmp
push
outsl
int
xor
std
xchg
push
push
lahf
in
daa
inc
insb
sarb
mov
sbb
mov
mov
xchg
cmpsb
mov
sti
and
add
popf
mov
sti
dec
cwtl
movsb
jo
sbb
xor
aaa
in
inc
mov
mov
mov
arpl
xchg
aam
stos
sub
in
idivl
roll
pusha
lods
mov
inc
movsl
dec
dec
adc
out
lea
fbld
add
inc
and
rolb
ret
test
pusha
test
xor
mov
and
ss
adc
adc
add
jmp
lea
data16
rol
incb
cmp
pop
clc
inc
sub
ds
pop
mov
repnz
fadd
inc
sub
push
adc
pop
cmp
outsl
sub
xchg
xchg
pop
xor
adc
sub
andl
andl
dec
test
adc
sub
dec
addb
jne
adc
mov
sbb
sbb
mov
xor
out
std
sti
movsl
daa
js
xchg
dec
sub
jp
iret
cwtl
leave
jae
das
dec
or
pop
stos
mov
mov
inc
mov
add
sbb
xchg
enter
loopne
mov
dec
push
or
sub
cmp
in
jb
add
jle
enter
ret
dec
sub
cwtl
jle
add
add
into
clc
jmp
cmp
dec
cld
jb
je
mov
xlat
scas
add
adc
popa
std
push
dec
cmc
stc
cmp
pop
ss
inc
sub
shlb
jmp
mov
adc
scas
xor
je
mov
inc
cmc
mov
cmpsl
rorl
xor
dec
pop
mov
or
sbbl
inc
outsb
pop
in
jmp
cmp
and
out
jg
rolb
jne
jl
inc
std
add
jmp
and
rclb
es
inc
jmp
fs
out
daa
sbb
loopne
xchg
push
dec
dec
jns
cmp
push
jns
cmp
dec
push
push
push
call
inc
add
sti
jmp
xor
fisubrs
sub
cld
dec
cmp
sbb
push
call
inc
addr16
cwtl
dec
test
cmc
mov
psrad
lock
inc
lods
adc
inc
dec
je
sbb
mov
adc
push
sbb
push
xchg
mov
sub
fisubl
mov
adc
shl
and
aas
mov
cmp
xor
jmp
ja
inc
mov
push
bound
or
int3
test
js
pop
pop
ret
call
jne
movl
cmp
shll
call
nop
test
pop
or
add
cmc
movsb
xor
lret
movl
bound
mov
das
es
push
mov
int
mov
adc
jb
stos
sub
push
push
cmp
je
adc
movsb
dec
push
fidivs
cwtl
das
or
pop
ret
mov
pushf
and
dec
pop
mov
je
jb
xor
fld
loope
je
sub
cmp
pop
scas
dec
and
mov
mov
adc
lret
lds
add
movsl
rep
jg
or
and
xor
add
int
aas
lds
mov
sti
or
mov
push
pop
test
lea
sti
mov
popa
jp
je
xor
in
js
push
fs
mov
xchg
push
arpl
push
int
and
or
adc
push
loopne
mov
and
cmp
cs
scas
shrl
scas
mov
xlat
cmp
in
dec
jmp
push
movzbl
fwait
icebp
and
push
call
rcll
out
sub
jne
adc
jl
or
jg
sub
scas
jbe
lcall
or
addb
mov
lahf
or
fisttpll
jmp
and
pop
adc
inc
clc
sbb
pop
out
push
inc
icebp
add
pop
and
outsb
lret
and
push
mov
shl
loopne
add
or
inc
test
jne
mov
sub
push
or
and
add
inc
mov
pop
push
lock
mov
bound
inc
shll
add
test
jne
mov
data16
inc
loopne
and
or
push
inc
shl
add
add
in
mov
or
fsubs
mov
call
sub
sub
jl
pop
js
flds
adc
pop
mov
push
dec
push
arpl
daa
mov
add
push
das
sub
fstl
popa
and
mov
inc
aaa
xchg
add
dec
push
pop
add
mov
inc
lret
jns
mov
inc
inc
je
sbb
xor
icebp
add
lahf
loop
adc
push
movsl
aam
and
testl
sbbl
mov
xor
jne
test
es
loop
sbb
add
rclb
jne
or
pop
dec
mov
ja
rolb
mov
int3
iret
mov
mov
add
mov
or
push
adc
and
rcrl
adc
enter
adc
add
ret
call
add
mov
shl
addl
je
inc
loop
ds
out
fbstp
imul
add
movsb
outsw
mov
jno
into
sub
dec
mov
mov
jae
push
ficomps
add
cmpsb
ret
adcl
sub
test
daa
dec
addl
or
push
sbb
or
cmp
dec
gs
insl
bound
mov
dec
add
or
push
xor
cmp
pop
lock
pop
aam
lcall
push
add
add
repnz
mov
jg
xor
cmp
adc
test
dec
and
or
mov
add
jle
iret
cmp
out
lahf
lcall
jne
inc
mov
sub
adc
cmpb
jmp
sti
loope
sub
out
adc
add
add
push
dec
rorb
mov
sub
xchg
test
and
popl
mov
adc
sarl
cmp
sbb
pop
mov
cmp
testl
dec
in
lea
jne
push
aad
push
and
std
sbb
inc
vmread
push
div
mov
xor
pop
add
test
je
add
std
push
es
sbb
popa
jl
or
sbb
jno
add
leave
cmp
jl
es
mov
cmp
jb
or
cmp
jbe
vpor
int
imul
or
loope
mov
cs
test
das
mov
pop
je
sti
jnp
xor
dec
sub
mov
adc
out
jo,pt
subl
add
mov
imul
sub
movb
and
jmp
adc
push
ficompl
shl
xchg
or
mov
hlt
cmp
pop
mov
imull
and
or
xor
lret
daa
push
xor
pop
inc
repz
jmp
inc
fstpl
pop
mov
adc
xor
fists
sub
movsb
adc
popf
cmp
xchg
ss
dec
jg
fwait
imul
jg
sub
test
push
mov
std
inc
cmovge
push
mov
mov
or
shlb
fsubr
stos
pop
hlt
out
and
jnp
adc
test
jg
lahf
jno
dec
inc
and
movb
scas
gs
arpl
add
sub
xchg
mov
mov
add
sub
inc
add
dec
inc
jmp
cmp
das
addr16
pop
aam
or
mov
dec
outsb
push
lea
jge
push
iret
and
test
orl
cmp
rorb
call
call
pop
nop
xor
psubb
nop
outsl
sub
sub
aaa
jl
dec
cmp
jb
dec
test
call
jge
popa
sub
sbb
jae
lock
shr
push
call
add
lock
inc
adc
pop
sub
xor
lock
out
inc
and
sbb
xor
dec
push
stos
leave
and
leave
push
scas
mov
out
push
mov
std
sbb
pop
je
dec
pushf
in
cld
imul
xor
hlt
jae
idivl
bound
lret
mov
mov
aam
cmp
daa
ja
add
jmp
mov
or
jmp
pop
outsb
jne
loop
and
adc
jnp
and
inc
sbb
push
jns
ret
out
rorl
sub
std
lea
cmpsb
adc
and
pop
test
imul
sub
add
pop
jo
leave
gs
dec
daa
sbb
mov
ffreep
jb
xchg
lret
inc
movb
cmp
scas
mov
pop
sti
sub
fs
aam
push
fsubrs
jne
push
jo
je
mov
pop
add
fsts
push
sub
fadds
aas
ret
shl
outsl
push
adc
jmp
lock
icebp
pushl
jb
adcl
and
pop
cmp
add
push
sahf
lcall
fdivs
inc
out
lock
mov
xchg
daa
adc
aam
jmp
pop
addr16
jo
pop
std
sbb
test
mov
nop
push
pushf
push
stos
and
add
movsb
daa
sbb
xor
sti
adc
rcrb
xchg
cmpsl
or
or
push
pop
test
adc
jmp
or
add
sub
jne
mov
sbb
and
fbstp
jmp
outsl
or
movsl
nop
arpl
sbb
sub
push
and
lcall
push
dec
in
std
mov
adc
lret
shlb
mov
adc
sbb
dec
mov
mov
cmp
fcomi
jae
jmp
fs
add
call
adcb
jb
daa
sub
xchg
xor
pushf
mov
mov
add
jae
ja
jl
pop
rol
icebp
mov
push
inc
adc
xor
ja
pushf
or
lret
xchg
paddq
shrb
xor
je
or
mov
cmc
sub
call
push
mov
xchg
adc
add
add
inc
test
mov
test
cmp
pop
inc
xor
and
sub
add
call
ret
popf
fldpi
das
movsb
and
jbe
inc
add
and
and
push
adc
pushf
mov
add
mov
mov
bound
push
shr
adcb
mov
and
cmp
add
incb
mov
fs
sub
test
mov
pop
jne
push
mov
aad
add
xlat
sub
add
mov
dec
pop
push
jmp
mov
daa
mov
cmp
sub
mov
dec
pop
adc
and
jne
lret
jns
adc
mov
and
adc
xor
add
adc
jno
in
mov
jle
lcall
add
clc
jb
cmp
adc
jl
jae
stc
or
ja
xchg
inc
mov
add
or
loopne
jecxz
cmp
test
push
cld
cltd
nop
adc
cmp
pusha
mov
shll
adc
scas
in
add
scas
adc
mov
push
pop
int3
test
cs
int3
and
push
aaa
cmp
cltd
or
adc
and
dec
mov
test
mov
je
je
enter
inc
in
mov
mov
mov
mov
push
js
cmc
xor
push
cld
fs
dec
stos
nop
mov
sbb
sub
rorl
cmp
sub
icebp
mov
adc
fsts
lock
xchg
adc
mov
inc
mov
sbb
sbb
or
push
fmull
aas
insb
loopne
out
xchg
ds
out
lret
pop
inc
mov
out
push
repnz
cmp
movsl
sub
mov
test
data16
inc
or
mov
and
dec
jg
insb
inc
sbb
and
sbb
adc
xchg
and
jmp
and
jmp
jns
pop
and
int3
or
les
push
mov
hlt
push
adc
mov
pop
sub
std
add
pushl
test
mov
leave
lret
inc
cs
dec
movsl
clc
outsb
sbb
pop
mull
xlat
out
je
test
push
cmp
jne
lcall
xchg
and
cmp
jne
inc
jge
notb
xchg
adc
sbb
mov
jg
mov
sub
cmpsl
shll
clc
dec
cld
out
out
dec
adc
fsubrp
mov
add
mov
movsl
xorl
push
test
mov
sha1msg2
mov
in
inc
or
and
loop
cmp
sub
data16
lock
or
adc
adc
clc
jg
mov
push
es
jecxz
test
xor
push
dec
or
mov
xor
cmp
inc
in
pop
fisubl
push
lahf
fs
adc
sub
add
xor
push
out
shll
dec
decb
inc
adc
adc
in
test
inc
and
rclb
or
pop
mov
push
cmp
jge
addr16
mov
fs
push
or
dec
lock
xor
es
mov
push
or
addl
inc
ret
adc
repnz
inc
dec
shll
clc
mov
rol
jl
enter
mov
sar
aam
test
stos
and
and
mov
rorl
in
cmp
mov
xor
aad
push
or
cmpb
jmp
add
cli
adc
or
cmp
sub
call
insb
inc
cli
movsb
xor
or
inc
dec
cmp
and
mov
cmc
mov
in
adcb
push
and
sbb
cld
mov
sbb
push
mov
push
pop
lret
cltd
les
int3
adc
and
dec
in
in
and
mov
sbb
or
and
pop
es
test
out
add
push
dec
xchg
jbe
sub
pop
loop
les
sbbb
cmp
fldenv
cmp
inc
imul
jg
or
xchg
mov
and
loopne
bnd
pop
data16
adc
adc
or
xorb
xor
jle
or
push
add
rolb
ror
test
dec
cmp
jge
repz
and
add
jg
push
jmp
ret
push
cs
jl
xor
in
inc
adc
sub
jno
loope
adc
adc
or
pop
inc
mov
inc
das
or
add
add
mov
and
sahf
repnz
pop
fldz
ret
aad
sbb
adc
js
push
rorb
push
pop
daa
jno
mov
mov
movl
adc
or
and
inc
mov
in
add
sub
call
loop
sti
into
popa
in
fld
lret
sbb
cmp
xor
pop
sbb
orb
jmp
push
fstps
mov
xor
shll
dec
adc
rorb
sbb
fmuls
notl
push
jne
mov
add
lock
mov
or
call
dec
dec
inc
push
jmp
fs
xchg
mov
rcrb
jle
cld
xchg
insl
ret
push
hlt
push
test
xchg
or
xchg
xlat
mov
and
push
mov
inc
subb
je
push
cltd
inc
mov
std
xchg
dec
ret
cmpl
insl
pop
pop
push
pop
xor
add
cmpsl
cld
les
xchg
sbb
daa
movsb
push
fists
mov
xchg
in
ret
idivl
jl
dec
sub
je
fistpl
or
xchg
subb
xor
and
adc
call
xorb
in
sub
and
add
mov
cmpsb
dec
fidivrl
jp
adc
dec
add
outsb
es
hlt
imul
lock
in
nop
or
and
in
adc
je
imul
mov
xor
inc
fmuls
ljmp
mov
or
ljmp
or
aaa
orb
sub
mov
cmp
or
pop
dec
out
cmp
mov
or
jae
enter
into
xchg
ljmp
je
sahf
popa
leave
and
jge
push
jmp
jecxz
push
and
sbb
xor
jns
or
xor
and
sub
add
cmc
mov
and
mov
stc
and
inc
jg
mov
aad
jg
xchg
ja
ds
sarb
mov
cmpl
ffree
rorl
add
mov
cmpl
sarb
dec
cmp
cmp
push
or
xor
dec
out
mov
inc
mov
or
sahf
add
inc
or
ja
cltd
lock
inc
adc
mov
cmc
nop
sbb
sbb
mov
outsb
sbb
mov
push
inc
fs
js
dec
inc
dec
nop
icebp
movsl
cmp
cmp
ret
lcall
arpl
inc
rcrb
push
loope
push
dec
jne
cmpsl
aas
push
xchg
js
gs
sbb
hlt
add
insb
lock
incl
dec
clc
adc
sub
call
out
push
std
mov
scas
push
jb
lods
pop
test
cmp
scas
shlb
jae
sub
push
pop
mov
pop
and
in
mov
sub
test
gs
es
add
jg
lock
push
push
fistpl
inc
jmp
push
jo
cmp
cmp
jecxz
sub
or
sahf
xor
inc
xor
sbb
ds
inc
and
popl
jle
inc
add
or
mov
and
push
out
in
push
adc
mov
jmp
or
xlat
pusha
or
sbb
ret
lock
push
and
out
mov
push
lea
or
inc
lahf
dec
je
mov
lret
adc
pop
test
xor
cmc
sbb
pop
out
or
lret
add
std
push
pop
loop
push
cmp
xor
xchg
je
or
or
and
sarl
push
mov
pop
dec
and
and
and
cmpsb
add
inc
inc
adc
dec
xor
fcomps
dec
imulb
push
popa
mov
icebp
xchg
push
loop
cmp
sub
xchg
sub
mov
pop
mov
cmpb
pop
les
inc
inc
cmpl
mov
and
mov
mov
xchg
js
mov
lock
pop
mov
nop
rolb
not
es
sub
rorb
ja
xor
or
mov
std
mulb
mov
mov
add
add
lret
inc
divb
nop
cmp
push
fs
les
cmp
xor
stos
mov
or
pop
jmp
push
mov
mov
lahf
adc
mov
dec
mov
adc
in
repz
cmp
in
and
or
pop
ja
cmp
or
xchg
dec
loopne
jne
rorb
lods
and
nop
sbb
jmp
push
push
xchg
lcall
mov
test
imul
daa
fldl
je
cwtl
xor
call
jmp
jno
sub
mov
sbb
repnz
subl
push
fsubrl
mov
jne
or
out
sbb
shll
inc
push
stc
mov
pop
divl
sbb
or
jno
test
cld
inc
jmp
test
dec
inc
test
jge
outsb
inc
sbb
les
jbe
movsl
fdivrs
leave
stos
rcr
out
pop
dec
adc
push
xor
push
rclb
rclb
enter
or
mov
adc
or
fcomps
aas
xor
xchg
or
loopne
pop
shlb
mov
stc
stos
imul
adc
cld
stos
mov
jl
pop
jg
dec
or
loope
mov
cwtl
test
sti
jle
imul
in
jns
out
test
sub
int3
bound
jmp
cld
int
jb
test
add
roll
insb
pop
xchg
mov
or
ret
das
sarl
add
aas
inc
je
add
sub
cmp
jb
std
out
insb
loopne
mov
push
stos
roll
push
cmp
in
lds
aas
sbb
psrld
in
sbb
nop
lock
cs
out
inc
fs
xchg
sbb
xor
sub
and
icebp
cmp
adc
test
pop
push
or
sbb
jmp
sbb
mov
or
jmp
fmuls
pusha
sub
imull
dec
adc
inc
inc
aas
xor
pop
jb
cmp
push
ja
xchg
mov
sbb
dec
sub
sbb
adc
neg
sub
cmpsl
je
push
fldcw
nop
mov
inc
lods
inc
inc
xor
mov
pop
push
sar
xor
and
push
fmuls
inc
adc
xchg
adc
adc
push
lea
fxch
mov
or
xchg
enter
add
jbe
dec
xchg
mov
dec
xor
mov
push
push
test
loopne
jb
pop
lods
fdivl
dec
test
cmp
les
mov
mov
daa
or
or
jmp
cmp
jne
ljmp
push
mov
mov
sub
lods
cwtl
jns
mov
cld
add
add
into
pop
cld
popf
xlat
mov
adc
sbb
and
inc
popf
loope
push
sbbb
mov
mov
in
pop
sub
jo
xlat
xor
call
push
es
push
aaa
sbb
add
cmp
je
cmpb
xlat
mov
lea
lds
push
ret
xchg
in
push
or
push
in
cmp
inc
and
sub
mov
push
lds
sub
les
inc
adc
xor
xchg
mov
inc
cmp
xor
add
pop
jmp
mov
push
int
pop
push
scas
pusha
test
or
sub
or
push
add
std
into
incb
pop
jmp
jge
sub
push
xchg
and
pop
xchg
add
and
mov
and
ret
cmpsl
push
dec
xchg
push
xor
dec
stc
jg
pcmpgtw
mov
mov
or
lea
mov
mov
push
addr16
sbb
outsb
ret
jmp
cmp
xchg
xor
js
pop
dec
mov
in
pushf
inc
mov
imul
or
orl
and
mov
jae
test
sbbb
inc
push
pop
push
and
pusha
push
push
add
xor
fsubl
or
push
pop
mov
ret
or
adc
dec
or
push
or
jbe
and
xor
stc
add
into
and
ret
adc
cmp
xlat
cmpw
pop
jne
loope
cmp
enter
dec
inc
nop
int3
movzwl
sbb
and
add
push
add
jmp
cmpl
repnz
mov
iret
pop
jmp
cmpl
and
adc
adc
xchg
test
aas
mov
add
pop
sub
test
sbb
dec
push
cmc
out
inc
sbb
mov
push
and
xchg
cli
xorl
push
lcall
pop
or
inc
cmp
xchg
pop
fidivrs
fwait
nop
xchg
shl
push
dec
es
fisubrl
dec
adc
negb
out
imul
mov
sbb
ret
in
fisubs
inc
call
loopne
xor
out
adc
jmp
pop
shl
or
clc
jmp
xor
mov
int
push
call
out
jmp
jp
out
add
dec
fcoml
push
call
mov
int
ret
lods
and
sub
outsb
mov
pop
adc
loop
push
and
jge
xchg
pop
cmp
adc
shl
test
push
lea
aad
add
cmp
xchg
add
xor
dec
pop
aas
cwtl
cwtl
cmp
pop
push
push
pusha
pushf
call
jae
in
mov
cmp
popa
hlt
sbb
pop
and
sti
ljmp
call
cmp
inc
pop
test
mov
xchg
cs
inc
push
sbb
popa
jmp
je
add
andl
nop
or
out
sbb
call
call
xor
pop
sbb
sti
jbe
push
push
inc
inc
or
sub
dec
pop
or
and
fisttpll
roll
jne
test
mov
test
sub
jle
lret
shlb
mov
ficoms
js
adc
rorb
pop
jb
clc
lret
imul
cmp
andl
ss
ficoms
dec
mov
pusha
and
inc
or
pop
push
push
ljmp
xlat
push
or
lcall
mov
dec
mov
nop
es
ja
clc
or
test
dec
xor
pusha
adc
mov
xchg
aam
jno
sbb
push
or
adc
cltd
push
ss
jne
or
inc
push
cmp
push
mov
add
rolb
call
xlat
and
adc
add
push
add
xchg
outsb
in
mov
xchg
mov
pop
sub
inc
pop
mov
call
cli
inc
fidivs
sub
pop
xor
psllq
fwait
lods
sub
dec
push
insl
scas
xchg
fwait
sub
jne
mov
push
fisubs
sti
push
push
testl
jo
inc
insl
imul
sbb
or
lock
adc
inc
cli
loope
inc
jb
add
mov
lea
jl
dec
xchg
inc
imul
sub
add
and
out
rolb
iret
imul
mov
aad
add
dec
popf
inc
into
pop
adc
push
sub
push
hlt
mov
clc
mov
cmp
or
je
sar
dec
addl
ret
mov
cmp
or
jne
and
mov
sbb
lea
idivl
inc
decb
jne
pop
add
dec
loopne
sbb
pushf
mov
push
or
sarb
fsts
incb
int3
hlt
mov
adc
leave
or
pop
xchg
cmc
sarl
pop
jnp
push
jecxz
hlt
mov
sub
and
add
dec
pop
cmp
jbe
cmp
clc
daa
ss
sbb
cld
fidivl
xchg
mov
mov
xor
sti
and
add
mov
shr
not
sub
je
cmovl
add
xor
mov
sbbl
mov
scas
inc
aaa
mov
jno
inc
pop
mov
xchg
mov
or
pop
loopne
and
ja
aad
xchg
loopne
test
and
pop
dec
pop
mov
pop
popf
or
adc
mov
mov
inc
xchg
inc
icebp
sbbl
and
dec
push
dec
push
push
push
ss
or
or
pop
xchg
inc
test
ja
push
sub
es
and
cmp
xchg
or
mov
in
mov
lock
imull
in
faddl
xor
repnz
shl
add
mov
push
call
and
or
jl
and
fimull
inc
xchg
or
mov
jns
adc
scas
adc
js
push
pop
imul
mov
mov
adc
ss
xchg
in
mov
jecxz
add
shl
inc
sti
daa
sub
jns
inc
adc
push
aam
adc
add
ljmp
lock
mov
insl
or
push
shll
inc
inc
icebp
inc
sbb
repnz
adc
push
shll
or
mov
hlt
mov
pop
adc
fs
mov
inc
add
inc
xchg
pop
cli
mov
sbb
push
adc
xchg
js
xchg
push
scas
push
mov
mov
mov
xchg
or
or
stc
por
cmpl
ds
jbe
push
add
and
pop
pop
xor
int
into
push
bound
xor
pusha
insl
shl
dec
inc
or
xchg
imul
lcall
inc
or
inc
xadd
orl
out
fisttpl
mov
sbb
jo
bound
cmp
jge
mov
inc
pusha
insl
sub
add
jmp
inc
subl
clc
out
push
mov
cld
nop
cld
jns
cld
jle
push
lock
jp
xor
call
push
mov
sti
clc
out
dec
add
xchg
mov
push
sahf
inc
ljmp
mov
inc
inc
lods
enter
shlb
mov
jne
or
js
insb
imul
cs
aad
fcmovu
jmp
pop
or
xlat
sub
fsts
shr
lret
rcll
cld
lock
das
cmp
lret
mov
mov
push
cmp
punpcklbw
add
cmp
hlt
addb
sarl
test
jbe
cli
sbb
out
inc
pop
sub
lret
sbb
outsl
clc
xor
nop
mov
rcrl
rcll
pushf
pop
nop
jmp
dec
mov
push
mov
lahf
push
jg
mov
push
add
out
aam
push
xchg
movsl
adc
loope
push
rorl
add
orl
and
hlt
and
jns
push
pop
inc
mov
or
jl
mov
or
push
dec
and
inc
adc
mov
or
inc
and
dec
or
mov
and
and
cs
inc
stc
test
lods
cs
push
ret
nop
or
outsb
xor
jp
out
and
inc
jg
inc
and
push
clc
jmp
mov
lea
or
mov
inc
dec
outsb
pop
xor
stos
sar
std
adc
sub
push
scas
enter
cmpb
sbb
incb
push
sub
xchg
pop
pop
dec
or
xchg
insl
fistl
jo
ja
je
popf
lods
jne
add
or
hlt
subb
or
in
jns
dec
cmp
xchg
loope
push
xchg
push
cltd
movsb
into
sub
movsb
into
inc
mov
xor
adc
or
sub
jns
push
fs
cmp
add
cld
jne
push
jns
scas
popa
add
push
pop
int3
loope
dec
push
adc
push
rcrl
loope,pn
leave
or
lret
out
cwtl
jo
inc
jl
jnp
leave
xor
sub
call
fadds
jmp
adc
repz
and
or
or
jne
ret
dec
adc
flds
mov
jb
push
adc
call
in
and
xchg
call
mov
inc
mov
xchg
cli
pop
jmp
xor
fwait
sarl
ficoml
mov
and
stc
inc
orb
fbstp
jl
sub
inc
jne
cwtl
fidivrs
xlat
je
jmp
dec
stos
add
and
jne
dec
add
pop
jmp
jg
or
lcall
out
ret
push
or
push
mov
rcll
popa
and
mov
pop
pop
jmp
jbe
test
cmpl
xor
mov
out
shl
jg
dec
leave
sbb
push
and
or
mov
adc
sub
sub
idivl
and
mov
sbb
add
mov
bound
loopne
cmp
and
out
orl
pcmpeqw
jg
sahf
pop
add
or
sub
push
adc
mov
xor
dec
inc
xlat
mov
push
stc
or
shll
cwtl
mov
in
call
inc
mov
dec
fs
push
es
pop
cwtl
pop
fwait
mov
or
cmp
xchg
roll
out
or
addr16
test
es
or
stos
mov
popa
out
or
jne
ds
adc
adc
push
push
loope
out
shll
leave
out
hlt
ds
lea
and
les
cmp
mov
mov
mov
imul
xor
pop
cmp
pop
jecxz
mov
rorl
add
sbb
jo
das
jmp
data16
mov
mov
add
add
add
push
pushl
push
lahf
adc
pop
add
je
jle
xchg
push
lock
jne
mov
call
mov
cmp
push
shlb
push
iret
mov
mov
daa
mov
int
mov
or
js
jle
in
data16
dec
nop
pop
rcl
lds
adc
mov
cli
fcmovne
scas
xor
pop
in
das
jmp
sbb
jae
xchg
lea
xor
push
arpl
mov
add
jo
xor
test
movsl
push
int3
lret
je
bound
add
or
pop
and
sbb
push
mov
add
adc
dec
add
sbb
mov
or
mov
xor
adc
scas
jae
jne
mov
pop
adc
and
mov
xchg
dec
aaa
movsl
sbb
lods
pop
push
in
and
sub
mov
inc
xor
sbb
ljmp
shll
sub
popa
mov
mov
sti
call
rolb
enter
mov
in
cmp
inc
pushf
sbb
adc
xor
sub
mov
inc
jae
pop
inc
xchg
stos
xor
adcl
jmp
fnstsw
outsb
inc
xor
cmc
jns
xor
push
adc
push
je
ds
stos
cwtl
push
or
sbbb
mov
add
mov
fistpll
sbb
mov
pop
mov
sbb
inc
push
mov
dec
std
movsl
push
adc
push
inc
inc
sbb
add
mov
jl
stos
jb
xchg
hlt
xchg
int3
mov
pop
bt
dec
aam
test
lcall
xor
mov
fstpt
mov
sbb
arpl
lret
mov
jmp
loope
into
sti
mov
daa
adc
repnz
inc
push
and
rorl
ficompl
loop
clc
push
jg
sbb
sub
and
jg
xor
dec
mov
adc
imul
leave
and
jmp
je
jecxz
jmp
call
jmp
dec
adc
sub
sbb
decb
or
arpl
jne
je
sti
mov
bound
sbb
adc
and
or
jne
test
leave
roll
xchg
sar
das
stos
fs
call
lcall
sbb
into
movsl
sub
or
call
adc
ret
mov
push
mov
orb
lret
jge
push
sbb
adcb
jo
xchg
pop
xchg
sbb
or
dec
adc
mov
add
push
andb
jle
mov
adcl
pop
xchg
incl
mov
xor
mov
shl
call
sub
mov
pop
cmpb
sbb
mov
dec
call
xor
push
or
aas
push
loop,pt
dec
mov
pop
les
adcb
adc
lahf
repz
je,pn
push
dec
sbb
fistl
cs
xor
mov
pop
or
nop
or
add
loopne
je
or
adcb
push
call
gs
push
addr16
push
lahf
hlt
in
or
aaa
popa
mov
jle,pt
cwtl
push
mov
sub
clc
dec
arpl
xor
push
dec
or
xor
mov
mov
sti
clc
enter
idivb
add
je
push
ljmp
fsubrs
jmp
in
insb
scas
sub
call
cmpsl
dec
cmp
push
xchg
popa
jo
or
inc
scas
mov
das
rclb
hlt
inc
lds
or
and
dec
add
mov
add
or
mov
ret
or
mov
pop
jecxz
inc
stc
add
push
ret
repz
push
shlb
lock
mov
push
test
mov
outsl
cmp
sarb
pop
scas
inc
or
je
and
mov
testl
add
xchg
iret
call
ss
pop
arpl
and
out
inc
lea
and
mov
insb
mov
push
mov
mov
and
sbb
jns
sub
dec
dec
clc
dec
call
mov
fs
jo
cmp
and
js
incl
ret
jg
mov
fidivs
rorl
or
dec
or
imul
sub
xorl
cltd
sub
push
pushf
add
push
movsb
jmp
adc
lea
cmp
add
iret
sbb
data16
add
jmp
les
lock
or
inc
or
mov
lret
adc
in
or
pop
sub
mov
mov
mov
jns
adc
lea
jmp
sub
inc
inc
rclb
sarb
dec
nop
and
into
add
xor
shr
dec
pop
inc
arpl
jmp
je
cmp
push
int
or
xchg
sbb
lret
adc
xchg
or
movsl
add
mov
pop
pop
cmpb
mov
inc
cmp
cwtl
jge
xor
add
sbb
sbb
cmc
sbb
test
mov
imul
test
mov
mov
loop
or
lret
mov
movsb
std
and
lock
mov
mov
adc
call
icebp
aaa
or
sbb
sbb
jmp
clc
fmuls
add
xchg
mov
inc
adc
lcall
or
and
xor
inc
pushl
or
and
dec
imul
cmpsl
test
fs
and
or
lahf
cld
xchg
ret
adc
adc
test
insb
sbb
sbb
push
push
mov
pop
enter
lcall
or
xchg
je
xor
out
in
jno
call
xor
jge
pop
mov
pop
je
popf
or
push
rol
xor
and
xor
mov
in
mov
fidivs
sbb
cmpsl
adcb
shrl
mov
xor
dec
xor
insl
adcl
jmp
jae
adc
rolb
or
cmp
push
aaa
add
jge
jne
or
and
push
call
ret
jl
lods
dec
sahf
sarb
adc
add
mov
les
and
or
sarb
pop
dec
imul
cmpsl
inc
rcll
sub
das
adcb
cmp
or
movsb
and
push
lea
sbb
pushf
adc
nop
xlat
inc
lods
and
xchg
xor
sub
add
test
cmp
rcl
jmp
xchg
rcrl
int3
adc
mov
pop
dec
gs
mov
andb
lcall
adc
je
cmp
mov
lret
inc
xor
addb
inc
nop
or
jmp
dec
orb
es
mov
pop
inc
mov
and
je
arpl
movsl
dec
adc
int3
pop
rorl
test
mov
lods
add
sub
or
cltd
inc
shlb
in
aad
rcr
inc
and
ret
popaw
clc
mov
mov
ss
adc
xchg
pop
mov
in
sub
notb
das
dec
push
rcl
adc
adc
mov
push
fwait
mull
xor
pop
sbb
test
adc
jmp
push
cmp
add
jne
ss
decl
add
imull
test
fs
ret
mov
fisttpll
mov
je
or
mov
sbb
fbld
mov
mov
pop
mov
jle
and
jmp
lea
cmp
movb
add
bound
int
inc
into
cmpb
xor
mov
add
inc
cmp
xchg
pushf
orb
divl
fnsave
or
or
sub
or
and
add
jne
sub
push
fs
dec
mov
lcall
call
xlat
adc
mov
mov
mov
pop
je
add
pcmpgtd
xor
and
dec
or
push
jle
push
in
sub
xor
nop
mov
pop
enter
inc
or
pop
jmp
pop
jle
sub
jmp
inc
dec
jge
xor
jne
jmp
cld
mov
inc
xchg
pop
inc
hlt
add
js
or
pop
xchg
sub
sbb
mov
or
jl
dec
pop
pop
ret
adc
jb
call
aam
pop
leave
ret
test
loopne
bound
or
and
and
imul
push
pop
pop
das
jne
popa
jbe
pop
data16
enter
push
arpl
loopne
cmp
int
ret
cmp
xchg
mov
push
cld
adc
xor
or
call
dec
es
cwtl
rorl
iret
jge
pop
leave
lods
inc
xchg
mov
push
call
dec
sub
sub
mov
mov
cmp
pop
mov
jle
jnp
das
enter
mov
cld
mov
push
fists
adc
and
or
mov
mov
jmp
mov
xchg
jae
mov
neg
add
sbbb
xor
test
cld
scas
xor
adc
stc
orb
inc
cmpsb
call
or
cmp
xchg
mov
in
sbb
cld
sbb
rorl
fs
mov
int
test
je
inc
addb
jb
cwtl
inc
jne
popa
sbb
cmp
and
mov
mov
fmul
and
jbe
or
dec
ror
cwtl
inc
sub
lahf
xchg
jb
or
push
or
or
lea
das
mov
jne
dec
push
push
loopne
movsb
and
stos
jne
and
mov
lea
pop
add
or
dec
pop
scas
xchg
mov
push
inc
stc
aas
cmc
jle
and
fistpl
lahf
lock
adc
pop
inc
mov
rclb
push
and
adc
loop
data16
sub
int
es
out
test
testb
push
lret
loop
js
aad
out
filds
call
mov
pop
add
scas
loope
adc
mov
and
push
push
cmp
mov
rep
fs
push
mov
xchg
cmc
xor
stos
xchg
add
xor
sbb
and
sbb
and
add
pop
or
add
fldl
hlt
mov
inc
out
dec
repz
ss
lea
push
cwtl
and
push
sarb
pop
inc
mov
adc
mov
hlt
xchg
dec
jmp
js
jne
sbb
pop
push
adc
outsb
sbb
xor
mov
and
adcl
loope
sub
dec
jbe
call
and
pop
in
sub
je
orb
mov
les
add
sbb
stos
or
jecxz
sbbb
xor
inc
sub
or
ja
inc
push
enter
inc
popw
xor
popa
jb
or
push
push
dec
addr16
push
jmp
xchg
inc
dec
mov
outsl
sarl
fsubl
jg
jb
xchg
xchg
je
daa
sbb
adc
js
in
xlat
mov
sub
rclb
add
jne
mov
xchg
jmp
xor
je
movsl
loope
adc
rolb
cmp
addr16
xor
xor
in
xor
es
add
inc
xor
sahf
push
pop
mov
push
inc
mov
xchg
in
data16
lds
out
sbb
push
inc
mov
inc
dec
orb
add
pop
in
mov
mov
mov
cmp
sub
push
cli
scas
dec
es
popa
push
cli
cmp
and
push
push
in
xchg
mov
or
sbb
cmc
inc
dec
mov
mov
in
add
loope
add
sarl
cld
sub
lea
sbb
insb
add
in
pop
cwtl
xchg
add
cwtl
ret
inc
icebp
jns
xor
dec
popf
jmp
or
add
rorl
fldpi
push
mov
es
push
popa
cmp
cmpsl
push
je
call
or
add
stos
in
inc
sub
dec
cli
out
cmpl
mov
std
call
add
jo
fs
addr16
mov
mov
push
out
fstps
mov
pop
leave
dec
pop
sbb
jp
xor
jge
inc
dec
notb
enter
je
inc
inc
cltd
aaa
xor
fsubs
and
fsin
and
imul
or
pop
xchg
sub
pop
ret
and
je
inc
jne
pop
jmp
push
push
and
popa
aas
xchg
push
mov
sbb
mov
pop
cmp
jae
mov
sub
mov
add
push
push
cmp
adc
fldenv
add
mov
test
mov
rcrb
mov
lods
rolb
addl
les
movsl
push
adc
dec
dec
ret
stos
inc
inc
call
aas
cmpsl
aam
or
pop
pop
dec
and
stos
lret
cmp
inc
fwait
call
pop
in
cmpsb
mov
cmpl
adc
and
cmp
add
aad
mov
outsl
inc
inc
sub
insl
adc
aam
jno
fs
push
dec
or
lret
test
jmp
out
and
scas
popf
push
iret
out
inc
out
pop
sti
nop
sar
dec
add
js
lods
or
clc
push
call
push
clc
jmp
adc
sub
push
test
xchg
and
push
imul
push
dec
adc
inc
dec
and
add
rorb
das
shrb
mov
test
inc
inc
mov
or
pop
sbb
xlat
sub
or
cmc
data16
aam
ss
mov
ret
in
jmp
or
cmpb
pop
push
mov
pusha
ds
ss
sub
dec
sbb
push
imul
jae
add
mov
out
push
jns
lret
testb
jmp
mov
inc
fiadds
jnp
fiadds
cmp
jg
mov
xchg
je
or
stos
xchg
mov
xor
dec
jne
push
jae
imul
stc
ss
lock
add
cmp
dec
sbb
outsl
lods
adc
andl
test
jmp
dec
xor
sbb
and
cmp
imul
sbbb
sbb
cmp
out
outsl
or
into
bound
add
decb
push
sbb
cmpsb
nop
inc
cld
lea
mov
cmc
xchg
dec
outsb
rcrb
fs
adc
test
sbb
pop
cld
cld
popf
push
mov
or
pusha
jnp
dec
sbb
adc
sbb
imul
fcomps
ds
rolb
icebp
outsb
je
popf
or
sub
jo
std
mov
sbb
insb
fadds
mov
movsb
lods
iret
les
in
inc
mov
das
jmp
repnz
ret
aam
adc
std
push
xor
jle
xchg
or
out
mov
pop
push
or
jmp
push
pop
out
add
push
arpl
es
jmp
mov
mov
push
jne
mov
adc
test
in
lret
sbb
sbb
mov
adc
xor
adc
jmp
xchg
sub
dec
or
jle
movl
hlt
mov
je
mov
mov
ljmp
jp
out
aam
push
or
cmp
jl
lret
in
xor
inc
dec
aaa
sbb
jl
test
dec
xor
test
and
outsl
lds
jmp
test
mov
push
gs
dec
xchg
into
cmc
and
stos
movsl
jb
xchg
cmp
andb
adc
adc
call
xor
and
repz
pop
and
push
push
iret
dec
or
scas
test
mov
test
inc
pop
out
pop
and
mov
push
test
pop
pop
out
movsbl
movsl
dec
xchg
push
adc
test
pop
or
lcall
outsl
jmp
or
fcmovne
jmp
jg
call
dec
shrb
or
popf
adc
push
cmp
movsl
orb
cwtl
mov
imul
gs
mov
imul
jle
jae
add
and
adc
push
pop
sbb
das
sbb
cld
push
and
data16
xor
xchg
imul
inc
imul
sub
sbb
and
push
sti
jle
dec
sub
adc
shll
push
es
jno
xor
int3
arpl
jne
nop
jne
cmp
add
inc
or
jmp
out
cmp
sbb
rorb
out
inc
add
shll
lock
or
fidivrs
add
sub
fsubrs
sbb
sub
lds
sbb
push
loope
mov
shl
or
jbe
lea
pop
xchg
aas
xor
jmp
mov
pop
enter
sub
loop
xchg
mov
push
daa
leave
cld
mov
ss
adc
dec
xor
cmp
test
cmc
lret
fldenv
inc
int3
adc
or
adc
adc
movsl
scas
mov
je
or
jae
loope
or
or
cmp
jnp
fistl
mov
mov
popf
mov
es
cmp
xchg
mov
shll
cwtl
imul
push
test
daa
rcrb
aam
imul
cmp
sub
xor
call
mov
mov
jmp
sbb
stos
repz
or
insb
or
jmp
pop
push
push
adc
popf
dec
bound
mov
testb
rcll
popf
or
dec
or
push
mov
mov
cmp
jge
lock
lods
nop
push
inc
push
pop
jmp
adc
arpl
lret
add
lds
jge
pop
js
mov
dec
mov
pop
or
adc
or
sbb
push
add
inc
adc
sub
xor
dec
push
lcall
data16
movb
jo
adc
or
or
add
cmc
push
and
cmp
leave
adc
inc
mov
es
push
je
sub
in
push
sahf
dec
test
sub
mov
lea
in
icebp
pop
adc
movsb
shll
loopne
inc
adc
sbb
jbe
jle
xchg
mov
push
cmp
cmp
push
jnp
ror
sbb
in
jmp
sub
and
sbb
mov
call
sub
inc
incb
add
xchg
and
dec
movsl
dec
nop
sub
push
xchg
push
push
xor
push
mov
sub
add
sub
fdivs
aad
mov
jmp
or
push
xchg
adc
inc
in
push
test
mov
mov
das
shll
mov
inc
shl
mov
jmp
es
cld
lock
and
sub
hlt
xor
sbb
aam
inc
mov
and
into
add
bnd
xor
jbe
stc
daa
movsl
adc
or
ds
cs
stc
je
xchg
xchg
xor
pop
adc
xor
adc
scas
pop
jnp
out
sub
pop
push
add
sbb
push
repnz
jb
mov
or
push
inc
in
cmp
push
repnz
xchg
enter
and
inc
xor
jp
cmp
push
adc
movsb
orl
pop
mov
dec
pop
ffreep
cmpl
repnz
pop
sub
inc
mov
test
sbb
jg
inc
cmp
repnz
mov
cwtl
dec
in
xor
jmp
inc
scas
in
inc
scas
mov
icebp
in
or
leave
and
movl
daa
pop
and
inc
aam
or
and
sbb
subb
shrl
idivb
xchg
fwait
inc
sub
jmp
pop
shlb
lea
add
in
jp
adc
jl
add
push
push
mov
or
and
in
push
out
adc
dec
test
jmp
mov
jle
mov
adc
mov
lahf
es
or
sbb
cmpsl
test
dec
repz
mov
iret
jecxz
mov
push
popa
mov
inc
inc
add
loopne
jl
or
fsubrs
test
movb
sub
add
mov
mov
mov
pop
push
push
addr16
mov
mov
push
add
dec
add
jmp
in
testb
pop
or
or
add
mov
mov
inc
mov
in
fsubs
testb
es
jbe
ret
rolb
pop
and
xor
sbb
sub
and
lds
iret
mov
std
mov
repnz
adc
sti
mov
cmp
push
mov
add
ja
cmp
jecxz
cli
cmp
mov
adc
dec
cli
leave
icebp
jnp
pusha
hlt
fwait
inc
mov
fdivl
movsl
adc
dec
add
nop
in
lea
bound
xor
inc
mov
cmpsl
dec
adc
lahf
and
clc
es
sbb
dec
xorl
jmp
add
jmp
es
rorl
dec
in
push
pop
in
insb
lea
in
jl
fs
imul
hlt
and
jmp
push
xchg
xor
and
and
sub
pop
fsubl
sub
lret
jns
ret
push
rorl
mov
adc
push
push
clc
mov
mov
push
fwait
in
and
scas
ret
pop
aad
xchg
pop
cwtl
mov
and
and
mov
sub
jmp
xchg
push
or
jne
jb
enter
sub
ret
mulb
pop
inc
shl
adc
and
push
mov
roll
mov
das
jne
mov
inc
hlt
outsb
lods
pop
test
and
andb
or
sbb
jbe
js
outsl
shll
lock
rclb
shll
inc
sbb
call
pushf
pop
mov
insb
cmpsb
pop
ret
popf
rcrb
je
push
icebp
mov
mov
imul
or
pop
aaa
daa
fidivl
push
and
fst
inc
pop
testb
int3
pop
pop
mov
push
lahf
and
add
inc
ret
andb
stos
cmpsl
sub
mov
xor
aas
pop
or
aam
sbb
iret
rorb
ljmp
lahf
fcmovb
in
sub
add
orl
data16
in
ja
js
ret
sub
or
xor
inc
or
testb
and
jg
cmp
jne
push
call
bound
jmp
stos
sbb
push
bound
pop
push
push
andb
or
mov
leave
je
in
and
dec
stc
inc
and
add
ds
and
mov
inc
call
pop
clc
sub
or
das
pop
adc
xor
inc
jne
lret
inc
repz
call
cld
nop
push
movsbl
mov
sub
jbe
cs
cwtl
mov
jne
mov
in
xchg
nop
push
inc
test
or
test
daa
pop
adc
jmp
add
test
jbe
movb
cmp
aam
push
inc
sbb
xchg
pop
dec
iret
cmp
out
cli
sbb
inc
inc
mov
mov
push
or
fcompl
ljmp
in
and
sbb
hlt
cmp
cli
xor
cld
scas
or
dec
add
daa
push
shrb
call
bound
test
or
je
mov
cmp
push
dec
add
push
jp
mov
mov
inc
jp
cmpb
push
cmp
mov
xchg
js
sub
or
xchg
ret
pop
add
lahf
imul
outsl
loope
cld
mov
add
lea
push
notb
ficompl
xor
push
call
adc
aaa
xchg
adc
add
jle
lea
mov
mov
fsts
cmp
xchg
mov
dec
add
jle
es
jl
adc
mov
enter
inc
popf
loope
inc
and
adc
jns
add
and
or
decb
hlt
cmpsl
outsl
and
popf
arpl
pop
adc
adc
dec
mov
adc
xor
add
sbb
xor
mov
jmp
xor
js
and
sub
xchg
adc
test
fsubl
push
push
divb
pusha
xor
in
sub
pop
push
movb
lea
pop
push
test
hlt
loope
fsubrl
fabs
pushf
sbb
jle
enter
data16
cmp
jbe
mov
notl
lods
arpl
jl
mov
sub
push
push
mov
sub
fwait
cli
push
ret
cli
sub
mov
add
dec
adc
dec
rclb
mov
in
inc
add
add
ds
xor
mov
dec
cmp
add
dec
cld
mov
or
cmp
jge
and
add
call
je
or
add
push
mov
pop
enter
and
xor
lret
or
sub
xor
or
jno
xor
push
dec
dec
mov
push
sbb
adc
cmp
pop
xor
scas
add
fistpl
push
into
fldl
inc
mov
lock
fdivl
mov
std
call
and
test
add
or
pop
pushf
cld
adc
testl
cmp
ret
jmp
clc
add
imul
loope
outsl
xchg
lock
cmp
push
push
mov
pop
test
pop
add
push
fisttpll
mov
adc
or
pushf
xor
xor
in
std
mov
add
cmpl
je
adc
test
in
lds
cmp
test
sub
adc
test
jae
fistpll
and
sbb
inc
dec
cmp
pop
je
sarl
jne
xor
cmc
insl
call
xchg
es
cmp
push
and
jns
subl
cmpsb
lret
jg
repnz
call
jmp
xorl
bnd
fldl
pop
xorl
jmp
pop
std
xor
sbb
push
cltd
enter
ret
daa
or
cmpl
or
and
mov
lahf
xchg
adc
lret
dec
popf
imul
rcrb
daa
push
mov
fptan
test
dec
test
cmp
aam
xchg
push
test
jmp
shlb
add
add
push
std
scas
stos
xor
nop
or
add
in
popa
pop
enter
or
test
in
and
sub
add
mov
ret
fldl
push
lea
andl
rclb
in
jecxz
xor
stos
mov
xor
iret
adc
xor
sarb
xchg
jl
mov
ja
out
scas
jns,pn
in
adc
mov
das
cmpl
push
sub
adc
add
or
or
and
cmpsl
and
in
stos
aaa
je
adc
dec
mov
sbb
jne
xor
fadds
aam
rol
or
cmp
and
xchg
imul
or
fstps
jno
cmp
add
or
mov
sbb
ret
push
xchg
shlb
mov
cwtl
mov
adc
sahf
loopne
cmp
jmp
xor
enter
cmp
call
rorb
mov
mov
jle
fstpt
pusha
cli
adc
cmpsb
fnstenv
cmpsb
aam
daa
movsl
addr16
or
loopne
sbb
inc
movsb
in
push
mov
cmp
push
mov
icebp
mov
cli
cltd
aaa
daa
jp
xchg
sbb
scas
lods
pushf
iret
dec
pop
sub
or
inc
add
jg
js
rolb
dec
or
push
add
jae
stos
shrb
call
pop
cmp
shrb
testl
in
inc
mov
push
mov
mov
add
jmp
addl
lds
mov
sub
pop
test
add
jne
out
pop
xor
cmpsb
sub
cmp
cmp
jge
dec
cmpb
outsl
push
call
imull
sub
adc
xor
dec
inc
cmp
inc
pop
std
ret
test
das
push
add
adc
insl
cld
mov
pop
and
push
loop
and
es
or
add
mov
pop
ret
popa
mov
mov
sub
std
in
pop
in
mov
xor
jmp
push
lods
sti
daa
aaa
je
push
or
add
adc
and
jg
push
mov
dec
fistl
push
sub
sbb
movsb
cli
test
jmp
xchg
or
xor
push
and
cltd
adc
int3
popf
jle
les
in
and
call
clc
sub
cmp
adc
cmp
jbe
pop
aaa
jl
inc
jmp
mov
dec
adc
jle
push
and
hlt
xorb
or
and
andl
pop
lock
nop
mov
mul
sbb
sbb
inc
dec
mov
add
jb
stos
cld
fsubs
xchg
pop
int
sahf
jbe
fnstsw
adc
cmp
pop
pushf
add
jecxz
aas
sbb
add
nop
add
mov
jns
xor
imul
pop
lret
gs
or
sbb
push
mov
movsl
ret
jno
leave
xlat
aaa
pop
das
xor
and
cmp
sub
dec
gs
xchg
pop
mov
lods
pop
mov
xchg
fldt
jbe
adc
cld
daa
and
in
jne
jnp
cltd
and
popa
pop
push
scas
mov
xchg
pop
cmp
bt
dec
mov
push
cmp
cmpsb
popl
outsb
adc
or
cli
mov
jle
mov
add
lea
imul
into
and
jle
mov
ds
jge
call
addr16
xor
dec
out
filds
sub
push
mov
mov
sub
inc
fimuls
call
or
jne
jmp
lods
hlt
and
pop
test
je
orb
xchg
dec
stc
into
xchg
in
xor
and
mov
leave
push
pop
inc
adc
and
shr
mov
jne
ret
and
stos
xor
jl
inc
dec
data16
or
jle
outsl
fiaddl
push
sahf
xchg
fs
sub
jmp
ds
add
add
sub
js
jbe
xchg
in
or
movzbl
push
push
mov
sbb
cmp
stc
rorl
pop
movsb
sbb
call
dec
adc
xor
mov
dec
adc
jmp
cmp
mov
enter
mov
inc
imul
out
dec
int3
test
xchg
push
mov
push
push
xchg
shll
xor
je
cld
pop
jmp
inc
cmpsl
mov
rcrb
push
call
nop
jne
ret
repz
and
add
push
mov
dec
callw
sub
jmp
sub
sbb
push
outsb
xchg
jb
mov
push
aad
xor
sbb
leave
ljmp
in
and
and
test
jp
int
dec
and
stos
adc
stos
and
mov
test
adc
and
pop
dec
push
cmp
outsb
das
adcb
pop
sub
cmp
and
xchg
xor
adc
inc
neg
pop
lahf
pop
xor
mov
jge
addr16
or
dec
aad
inc
xchg
mov
ret
fdivr
aam
divl
push
adc
fstpt
pop
add
scas
hlt
cmc
add
dec
adc
push
call
ja
xor
push
inc
test
ret
inc
add
aam
mov
stos
xchg
mov
clc
fdecstp
ret
lods
das
aas
cmp
or
jecxz
sbb
add
cmp
jae
enter
pop
add
daa
jb
jge
jbe
jne
cs
adc
sarb
jmp
andl
cmp
add
xlat
mov
repnz
xchg
inc
sub
add
add
jle
xchg
loop,pn
mov
pop
sbb
int3
call
and
mov
sahf
imul
cmp
rorl
mov
push
xor
cld
mov
pop
pop
jmp
cwtl
inc
sub
in
fs
inc
add
sbb
addr16
lcall
mov
inc
movsb
sbb
mov
jmp
or
orb
push
cmp
and
and
dec
lret
icebp
cld
pop
mov
cmp
imul
lods
imul
jo
test
add
push
sbb
movsl
inc
sub
faddl
xorb
xor
mov
nop
aas
hlt
mov
aaa
scas
cld
sub
xchg
cmp
and
shll
adc
cli
dec
or
cmp
mov
test
test
jg
gs
gs
and
mov
fstpl
jne
cli
adc
mov
out
add
and
enter
decl
push
fwait
mov
add
mov
xor
add
je
push
pop
notl
jne
push
mov
dec
mov
push
mov
nop
or
nop
outsl
mov
loope
mov
mov
pop
stc
mov
call
inc
mov
notb
adc
mov
out
xor
adc
sub
aaa
xchg
int3
and
xchg
jg
cld
pop
dec
stos
dec
add
mov
xor
lea
fcompl
mov
int3
push
or
lods
outsl
mov
testl
and
sbb
inc
sti
cmp
adc
scas
in
add
repz
scas
pop
enter
xchg
or
pop
cld
outsb
sub
and
mov
addr16
cld
inc
pop
call
in
ficomps
and
mov
sub
jmp
cmp
jae
imul
aad
test
dec
ds
sbb
cld
enter
test
inc
push
lods
es
jl
es
pusha
push
push
mov
mov
sub
cmp
ja
ret
push
push
cltd
or
dec
adc
jne
or
and
adc
dec
sbb
xor
sbb
mov
jne
std
leave
jmp
rclb
inc
sub
add
dec
xchg
aam
mov
test
mov
add
aam
adc
xchg
and
orl
stos
and
cs
sbbl
daa
push
sub
or
sarb
cld
cmpsb
dec
dec
ss
mov
xchg
in
addb
mov
fisttpl
or
pop
mov
pusha
push
pop
enter
push
in
aas
push
adc
cmp
sbb
inc
cmp
int3
mov
pop
sub
jmp
cmp
adc
cmp
lods
fimull
aas
into
enter
jns
std
sbb
lea
in
mov
add
xchg
mov
aad
pop
outsl
push
aam
je
dec
jecxz
lds
mov
jmp
pop
cltd
pop
sub
in
fs
push
shlb
int3
je
xchg
call
sbb
inc
in
cld
test
mov
jmp
and
into
mov
dec
enter
dec
aad
out
add
mov
rclb
and
dec
out
dec
rorb
mov
ljmp
pushf
call
push
stos
dec
jg
ret
xor
push
xchg
mov
and
adc
inc
mov
xchg
mov
clc
lds
mov
ret
sbb
decl
and
fsubr
xchg
clc
les
je
pop
insl
jno
inc
cmp
sub
add
lcall
dec
es
mov
and
call
add
or
je
mov
jmp
imul
popf
inc
call
sarl
inc
mov
inc
jg
mov
adc
sub
inc
incl
pop
sti
xor
dec
inc
ljmp
lock
loope
std
dec
aam
mov
push
ret
push
push
inc
xor
pop
pushf
cli
pop
test
mov
mov
testl
stos
imul
inc
inc
jae
jnp
pop
call
or
in
lea
jbe
mov
push
dec
imul
sbb
pop
pop
mov
xor
xchg
dec
lock
test
pop
xor
andl
add
fmuls
cmovs
jp
daa
mov
jmp
mov
cmp
ret
cltd
dec
or
cmpsb
jns
imul
out
insb
repnz
push
or
mov
push
push
and
out
hlt
and
push
inc
mov
jle
lret
sbbl
mov
jo
test
dec
push
fnstsw
mov
xchg
pop
push
ret
out
cmc
add
test
xlat
es
xchg
enter
cmp
ljmp
push
push
push
mov
sbb
in
or
mov
push
jge
ret
popa
cmp
mov
sub
pop
jbe
test
mov
xorl
push
dec
sub
fiadds
mov
fwait
xchg
mov
jne
hlt
add
pop
and
mov
fsubrl
imul
push
test
push
push
mov
pusha
sub
sub
lea
sub
int
icebp
adc
sub
shr
jno
mov
dec
mov
scas
leave
in
mov
aaa
lds
adc
sub
cld
mov
bound
pop
jp
mov
push
decb
cmpsl
mov
mov
push
cmp
jb
and
xor
or
or
mov
adc
add
inc
push
test
enter
add
and
pop
or
std
cmp
sti
add
jo
mov
adc
addr16
mov
dec
cmp
add
std
and
lret
mov
mov
shr
push
jge
stc
inc
push
movsb
movb
dec
jne
mov
inc
testl
movl
nop
adc
adc
inc
bound
xchg
jns
or
xchg
mov
adc
and
add
cmp
test
xchg
test
and
test
or
pop
mov
mov
pop
cld
inc
push
and
pop
test
inc
adc
mov
sub
int
shlb
jge
test
mov
mov
or
and
fiaddl
push
mov
mov
outsb
and
cmp
inc
dec
jmp
push
pop
mov
xchg
dec
cmc
out
push
test
pop
int3
and
xor
sti
rclb
cmp
cmp
arpl
jbe
cmp
jne
pop
fidivrl
test
mov
insl
jnp
aaa
rolb
push
sub
jb
mov
imul
ds
arpl
sbb
ret
pop
pop
cmc
aaa
ds
pop
mov
pop
add
add
cmp
push
jne
push
sbb
and
mov
inc
cmp
jns
pop
dec
dec
push
fildl
jge
out
sub
in
xor
sub
pusha
pushf
push
mov
sti
push
add
je
or
lods
addl
add
cmp
push
inc
rolb
mov
mov
jmp
incl
dec
xor
cmova
inc
sub
inc
negb
mov
pusha
sbb
movsb
mov
xor
stc
and
mov
aas
add
mov
pop
and
rorl
jmp
dec
lcall
lcall
adc
lods
push
jmp
inc
inc
inc
adc
je
popf
andb
ret
pop
outsb
mov
dec
cwtl
cmpb
add
imul
scas
test
mov
push
ljmp
pop
inc
addb
out
sub
cmp
orb
and
gs
into
insb
sub
call
addr16
add
fldl
subb
test
adc
imul
and
cmp
out
or
dec
xchg
or
lret
inc
mov
pop
movb
dec
mov
ret
cmc
and
pop
nop
adc
mov
shrl
fidivrs
cmpl
out
add
rcrl
scas
and
nop
mov
and
mov
xor
shll
movsb
scas
adcb
lahf
adc
mov
and
mulb
push
and
jne
add
mov
ret
lret
test
jmp
loop
aam
adc
mov
inc
push
xchg
push
jge
or
ss
jns
cmp
mov
out
push
xor
lds
sbb
movsb
pop
dec
repnz
and
sbb
sar
push
ds
inc
fnstenv
imul
mulb
cmpl
adc
and
cmp
pop
test
dec
inc
mov
adc
jnp,pn
xor
or
pusha
push
loopne
push
or
jbe
cli
andb
and
mov
xor
sti
mov
insb
fcom
sbb
sub
push
or
call
dec
and
in
pop
movsb
sbb
or
mov
fwait
sbb
cmp
jmp
mov
mov
ljmp
jb
jmp
ljmp
decl
dec
pop
cmpsl
add
lahf
stos
and
jl
jmp
adc
xchg
jge
push
enter
adc
popa
push
mov
push
nop
pop
daa
adc
in
inc
add
scas
addb
idiv
lds
std
mov
lock
iret
jmp
or
insb
mov
dec
test
call
dec
xor
adc
push
push
jmp
or
aad
add
test
pop
and
mov
push
mov
dec
lods
xchg
test
or
push
dec
test
sub
lahf
aaa
xchg
cmp
mov
into
xor
enter
out
push
adc
jnp
and
shlb
sub
out
adc
ljmp
aam
add
push
ret
ds
cmp
lea
ret
cmp
sub
and
in
adc
pop
leave
adc
and
push
call
aam
xchg
mov
sbb
push
sbb
adc
sbb
adc
pop
rclb
mov
dec
or
or
sbb
jns
or
outsb
or
adc
fcompl
adc
jne
adc
lds
or
add
pop
orb
push
inc
pop
and
sub
std
and
push
imul
or
and
xor
and
and
insb
mov
ret
xor
xor
jmp
dec
jmp
fnsave
mov
mov
cmp
mov
ret
daa
mov
in
mov
jg
das
je
dec
mov
idivb
pop
cmp
push
add
hlt
inc
cltd
dec
adc
aas
fidivrs
add
push
nop
jmp
and
jno
inc
pop
ljmp
iret
repnz
push
mov
push
not
and
and
dec
add
cs
aad
sbbb
add
sti
jbe
adc
dec
clc
xchg
test
add
or
fcom
push
or
fsubr
or
xchg
and
or
push
mov
fbstp
fistl
mov
jmp
dec
into
hlt
lea
mov
in
das
cmpb
je
push
lahf
dec
sub
xor
dec
mov
je
jne
sub
cmp
les
xchg
jmp
sbb
mov
inc
dec
lret
xor
or
add
aad
mov
andb
in
inc
mov
jg
daa
testb
xchg
rcrl
ljmp
lock
cmpl
leave
lcall
dec
xchg
hlt
and
inc
cmp
push
dec
or
adc
lods
add
push
data16
xchg
sti
lock
mov
sbb
jnp
inc
adc
jne
sbb
fsubl
les
imul
loopne
mov
adc
and
pop
jb
mov
popf
adc
or
push
push
mov
push
dec
sub
scas
inc
loop
dec
lods
or
push
mov
mov
nop
ret
je
cmp
pop
or
jmp
sbb
or
or
sbb
fiaddl
fidivl
xchg
fmull
and
sub
sub
sbb
and
call
xor
adc
test
jns
dec
dec
push
ja
mov
and
adc
shl
mov
fnstcw
or
in
sbb
aas
xchg
dec
cwtl
roll
hlt
scas
aam
xor
xchg
jno
jmp
in
negb
adc
push
add
call
popf
je
xchg
addr16
mov
mov
mov
cltd
add
adc
lods
jno
pop
fcmovb
data16
mov
cmp
outsb
lods
pop
xchg
adc
pop
test
stos
in
mov
cmp
fcoms
pop
xchg
je
ret
lock
cltd
sbb
mov
adc
stos
add
sti
adc
dec
or
dec
dec
ret
sub
cmp
jno
lods
pop
jno
enter
push
cmp
adc
out
mov
pushf
out
cld
cld
pop
xor
push
inc
lret
in
mov
dec
mov
cmp
loope
sub
sbb
and
xor
or
das
mov
imul
mov
and
shll
cld
xchg
mov
rcrb
jnp
jmp
jmp
out
les
dec
je
mov
test
movsb
jmp
shrl
aam
movsb
unpcklps
and
mov
pop
flds
push
loop
mov
jno
and
test
fs
pop
mov
and
sbbb
pop
pusha
or
adc
inc
js
fsubrs
aas
sbbl
add
push
les
xchg
leave
xor
xor
adc
mov
out
fcoml
inc
jns
or
fs
mov
or
adc
mov
fimuls
out
pmaddwd
jecxz
sub
les
jnp
lods
int3
lods
pop
lret
sbb
mov
ds
mov
inc
push
cld
lahf
or
lods
dec
xchg
sub
inc
inc
mov
cs
push
xor
adc
pop
or
mov
lock
cs
jg
and
xchg
in
stos
push
cmp
inc
inc
filds
pop
shrl
cmc
lock
or
and
repnz
ret
mov
mov
imul
cs
push
jg
jecxz
fmull
sbb
sub
test
push
in
mov
sub
and
sub
cmp
mov
orb
add
mov
cmpsl
sarb
push
cs
mov
jle
cmp
adc
sbbl
ljmp
push
std
push
mov
cvtps2pi
jne
push
jb
sub
pop
call
jmp
mov
mov
ds
mov
stos
shll
lret
mov
sbb
adc
mov
lds
or
cmpb
jne
pop
push
adc
add
fcoml
or
cmp
xchg
adc
xchg
pop
and
mov
std
or
adc
push
inc
cmp
and
shll
dec
subl
mov
test
ret
insb
and
test
adc
iret
sub
add
dec
xor
xchg
shlb
test
or
sti
inc
mov
scas
push
pop
or
xor
adc
in
push
cwtl
sub
daa
test
and
xchg
dec
mov
or
lret
mov
std
cmpl
jge
cwtl
loop
cltd
or
lock
mov
cli
popl
and
and
sbb
icebp
mov
or
jecxz
sbb
out
leave
out
les
aaa
or
or
push
add
loopne
pop
fnstenv
mov
mov
jecxz
in
arpl
ljmp
in
or
inc
lret
pop
cmpsb
in
cmp
repnz
push
jnp
pop
mov
inc
out
cld
rcl
mov
inc
add
testl
sbb
sarb
xor
addr16
or
sub
jmp
or
sti
xor
leave
and
aas
jmp
adc
xchg
mov
jmp
add
push
test
call
mov
jmp
sub
arpl
push
and
xor
outsl
or
fldl
out
mov
nop
movl
fwait
dec
inc
mov
adc
xchg
jl
jecxz
loop
pop
ds
out
jmp
push
divb
popa
mov
call
jmp
in
sub
adc
out
mov
aas
insb
dec
inc
mov
dec
pop
lock
mov
sub
push
fstpl
mov
call
popa
je
jge
ret
jmp
xchg
and
push
fdivrs
movsb
xor
call
and
fsubrs
jbe
sbb
cmp
fiaddl
ljmp
ror
xor
push
repz
daa
or
or
cvtdq2ps
or
add
mov
es
dec
into
fadds
sbb
jmp
cmpsl
mov
add
icebp
cs
mov
mov
ffreep
jle
jno
xchg
adc
shl
cmp
jge
sub
test
test
insl
out
das
sbb
scas
arpl
xchg
dec
jne
cmp
lret
jmp
xor
pop
sub
or
ret
jo
adc
test
mov
cltd
push
sbb
out
mov
pop
cli
jecxz
pop
push
sub
inc
inc
sub
gs
mov
cmpsb
dec
in
pop
push
jmp
test
sti
int
and
push
mov
add
fldl
push
enter
jae
mov
inc
fldl
or
lock
pop
data16
out
pop
loopne
pusha
repnz
add
or
adc
and
hlt
jmp
and
dec
inc
and
movsl
jge
ja
popf
jmp
lock
call
sahf
in
jo
pop
cli
je
inc
push
add
movsb
rorb
jmp
mov
call
or
and
int3
sarl
xor
adc
or
test
fldz
ror
xchg
or
and
call
or
fs
adc
call
jecxz
imul
mov
ret
add
test
lss
sbb
dec
call
sbb
inc
sbb
divl
fstl
mov
or
lods
sub
js
daa
mov
call
xor
jp
xor
jmp
sbb
mov
movl
jnp
lods
adc
dec
ret
push
jl
dec
mov
xor
out
dec
rorb
out
pop
cmp
jmp
pusha
dec
pop
adc
add
lea
pop
sarl
dec
insb
lcall
cld
or
jg
or
into
ljmp
cltd
out
inc
adc
mov
enter
ret
jmp
clc
pop
les
testl
loopne
add
fstpt
movsl
fs
jp
mov
out
xor
data16
je
andl
mov
gs
pop
mov
xchg
lods
sbb
adc
sub
or
add
xorb
arpl
sbb
dec
sub
push
sbb
jmp
adc
adcl
sub
and
mov
push
rorl
sub
mov
mov
mov
cmp
loopne
and
dec
mov
fistl
or
rorl
fstcw
xchg
sub
not
pop
jg
dec
sbb
mov
sbb
mov
dec
or
sub
in
pop
leave
push
fwait
leave
call
fimull
mov
mov
cmpsl
sub
pop
mov
in
fcomps
jmp
jp
or
cmp
mov
jecxz
lret
call
loop
jns
add
test
pop
insb
movsb
xchg
cmp
and
enter
dec
hlt
cs
xor
push
xor
mov
lea
push
push
ds
mov
push
mov
aaa
das
push
xchg
add
cmp
mov
push
add
pushl
call
out
add
ret
jbe
and
inc
popa
dec
lods
lea
pop
lea
sub
lahf
mov
push
fcom
mov
and
add
dec
dec
push
jne
aaa
insb
aad
loope
mov
inc
inc
pop
and
pusha
inc
cmp
add
lret
mov
xchg
das
fdivs
loope
dec
pop
sub
loopne
xor
mov
dec
jne
jmp
cmp
sbb
enter
mov
mov
stc
xor
cltd
enter
fmul
xchg
jb
mov
fcompl
xchg
bound
push
inc
mov
dec
mov
addl
cmc
or
aaa
out
xchg
addr16
or
hlt
repnz
push
push
cli
mov
mov
jp
pop
cli
adc
cli
xor
rorl
loop
loopne
call
sbb
add
mov
outsb
mov
ret
mov
add
xchg
das
and
out
aaa
aas
or
sti
std
sbb
dec
clc
push
jne
xor
call
jnp
hlt
push
jmp
and
arpl
inc
jbe
sbb
in
xchg
mov
testl
jmp
dec
cwtl
mov
sub
mov
adc
mov
adc
dec
pop
sbb
subb
inc
and
mov
sub
lea
test
ds
or
jl
push
arpl
ljmp
sbb
push
pop
ss
sbbl
idivl
push
add
clc
push
lea
and
dec
add
shl
enter
and
leave
pop
mov
orb
xchg
mov
jne
pop
dec
cmc
bound
inc
push
and
or
mov
sub
xchg
decb
push
sbb
push
add
cwtl
pop
in
sti
inc
call
mov
outsl
inc
push
cld
outsb
mov
dec
add
sub
scas
cmp
xchg
lods
call
dec
or
adc
nop
and
push
movb
popf
pop
mov
test
movsbl
scas
add
xor
or
jmp
mov
jl
cmpb
push
or
lea
push
je
sbb
or
inc
add
add
jmp
sub
out
pop
xor
push
daa
orb
mov
movsl
hlt
mov
inc
pop
in
enter
es
sub
inc
rcr
and
je
cmp
into
mov
jmp
mov
sub
rol
jne
mov
aad
rep
data16
jmp
dec
inc
add
test
lret
shll
enter
lahf
sahf
loop
test
jge
jp
out
cmp
dec
push
shl
shr
or
add
sub
mov
loope
loope
pusha
xor
sahf
dec
fisttpll
push
push
inc
pop
push
cwtl
sub
and
and
iret
lea
jne
mov
movsl
pop
xor
rorb
mov
cmp
dec
add
mov
or
pop
je
dec
adc
push
mov
xchg
imul
mov
in
push
xchg
pop
adc
andl
or
or
add
and
add
and
or
or
and
rcll
adc
into
and
movsb
das
mov
pop
stc
and
adc
adc
cwtl
jge
into
roll
or
jmp
inc
lds
popa
xlat
je
cmp
arpl
sbb
xor
and
pop
stos
pop
inc
jp
hlt
add
mov
adc
mull
lret
mov
push
mov
add
sbb
decb
jne
and
or
mov
leave
jnp
insb
je
pop
sbbb
or
jmp
call
ds
mov
adc
int3
mov
out
repnz
iret
adc
loop
push
jmp
invd
mov
cmp
mov
cmpsb
lods
dec
pop
cmp
imul
jbe
movsb
popf
adc
push
pop
mov
xor
and
mov
xor
push
or
fidivs
in
mov
shll
adc
lds
xchg
push
daa
pop
ss
or
adc
add
out
out
cwtl
sbb
lea
pop
jb
dec
out
dec
leave
cld
idiv
adc
out
add
test
lcall
pop
mov
sub
push
inc
jmp
adc
mov
adc
js
or
pop
inc
movsb
iret
in
mov
pusha
jmp
leave
pop
mov
pop
mov
dec
push
int3
push
mov
sbb
and
dec
or
jl
scas
aam
stos
adc
mov
rolb
jne
fnstsw
inc
or
sbb
xorb
jl
add
in
jne
adc
sub
mov
pop
test
jbe
xorb
push
out
daa
or
gs
pop
orl
data16
faddl
push
insb
test
bound
and
lret
push
xor
push
push
inc
test
fsubs
mov
add
mov
rolb
ret
out
mov
push
adc
or
jl
or
pop
xchg
lds
push
add
popa
inc
repnz
pop
or
xor
hlt
push
rcrl
call
jle
jmp
sub
mov
pop
scas
xchg
add
jmp
mov
jmp
and
in
jne
into
cmp
mov
imul
notb
dec
dec
pop
daa
filds
sbbb
mov
xor
dec
inc
rcr
xchg
jb
or
pop
add
cli
mov
hlt
test
jle
ljmp
ficomps
jno
pop
ret
lock
stc
fdivr
fs
inc
fildll
cld
fisttpll
xlat
and
and
or
push
dec
push
jb
insl
sbbl
adc
and
mulb
add
cmp
and
add
cmp
jl
sti
inc
mov
mov
cmpl
mov
int3
je
mov
aad
xchg
sub
jle
inc
cmp
shr
imull
cmp
or
mov
fscale
inc
cmpsb
push
push
xor
add
roll
fdivs
in
or
push
testb
xorb
mov
push
fs
push
cmp
cmc
jb
sub
adc
jle
sbb
cwtl
push
sbb
cmp
lahf
clc
lea
or
push
push
pop
cmp
les
mov
xchg
mov
mov
rorl
dec
out
xor
adc
inc
lret
push
gs
popf
pop
lds
arpl
testb
push
xchg
outsb
sbb
push
roll
and
cs
gs
movb
sbb
pop
idivb
pop
aam
inc
push
mov
je
ljmp
adc
into
and
adc
mov
dec
mov
adc
mov
out
xchg
dec
clc
jl
scas
xor
push
mov
cmp
je,pn
jl
lods
adc
mov
mov
or
xor
lods
and
test
pop
mov
sbb
or
push
or
add
push
push
push
lods
sbb
ret
jne
cli
int3
fiadds
jb
orb
jmp
xchg
inc
addr16
mov
mov
pop
and
push
mov
push
inc
adc
xor
movzbl
pop
movsb
rolb
jge
jno
test
mov
lret
jle
and
push
cwtl
dec
jne
mov
add
sbb
in
mov
add
popa
sub
xchg
scas
int3
jg
dec
sbb
or
sbb
testb
mov
add
lret
cli
push
xchg
call
aaa
mov
adc
pop
adc
fistpll
mov
mov
cmp
mov
pop
mov
lock
and
or
jge
cmpsl
sub
push
sub
loop
jnp
mov
inc
rolb
dec
jg
pop
add
in
lds
pop
mov
inc
jge
sub
sub
and
xchg
or
loopne
and
xchg
enter
xchg
leave
dec
pop
shl
dec
inc
dec
xor
mov
movsb
fmul
jbe
rol
mov
pop
jmp
or
push
fwait
jle
lcall
in
lea
jl
roll
jae
xchg
xchg
adc
mov
mov
xchg
jp
loopne
ss
xor
lea
icebp
jne
or
adc
add
out
ja
xor
dec
xchg
pop
mov
js
imul
add
shr
mov
lea
xor
or
inc
cmp
shl
lock
mov
les
cs
push
sti
push
lds
add
jmp
fidivl
pop
push
iret
shr
mov
inc
cmp
xchg
das
adc
inc
fst
bound
xorl
adc
push
mov
dec
and
lock
aas
mov
out
fldenv
or
push
adc
out
cmp
mov
in
pop
inc
and
fnstenv
fnstsw
push
jne
int
cmp
jnp
rdtsc
adc
pusha
call
pop
aas
jp
out
cli
loope
inc
loop
cmp
cmp
jae
popf
rorb
out
lods
pop
jl
inc
jmp
and
pop
test
je
data16
sti
xchg
popa
xchg
mov
and
loopne
test
push
ret
or
adc
mov
adc
sbb
int3
enter
test
movsb
inc
lods
enter
icebp
mov
hlt
and
or
push
or
pop
je
or
out
jnp
outsb
mov
and
push
test
add
sti
xor
or
jg
push
xor
or
cmp
xchg
iret
push
add
jl
sub
daa
jb
inc
test
mov
or
xor
adc
popf
mov
add
dec
xchg
jmp
pusha
and
mov
xorl
jle
addl
scas
add
test
cmpsl
fisttps
or
or
jle
dec
fs
test
mov
jmp
cmp
ret
jle
mov
and
sahf
dec
pop
das
jae
inc
jmp
mov
push
pop
movsb
add
mov
cmp
sub
or
mov
out
cmp
stos
mov
pop
jmp
fdivrs
or
and
outsl
inc
jnp
and
adc
inc
in
insl
in
insl
mov
push
xor
jmp
jmp
mov
aas
jmp
dec
sub
cld
cwtl
jbe
xchg
mov
jp
push
test
add
lods
imul
ljmp
adc
jns
xor
mov
jl
and
or
pop
in
int
sbb
popa
pushf
and
leave
incb
int
fisubs
xor
ljmp
int
int3
mov
mov
push
pop
jmp
or
jno
out
inc
mov
mov
xchg
or
not
jle
add
cmp
sbb
cmp
cld
rolb
jg
stc
nop
or
mov
jne
dec
iret
enter
pop
dec
std
addb
mov
cmp
lea
mov
jge
add
testb
dec
ljmp
add
ret
jl
das
dec
ja
adc
mov
shlb
inc
adc
or
sbb
fadds
push
sub
movsb
jnp
adc
add
movntps
cs
dec
ds
mov
inc
call
push
repz
pop
out
in
jne
repnz
mov
das
sub
mov
fs
jg
sub
or
das
add
in
shl
movsl
dec
loope
or
pop
sbb
jno
lret
pop
add
xor
mov
fwait
inc
insl
fildl
out
mov
inc
xor
or
inc
pop
fmull
sbb
adc
enter
xchg
mov
dec
test
test
push
push
inc
in
xchg
or
and
inc
out
mov
adc
and
dec
in
xchg
in
adc
sti
push
out
aas
decl
lds
inc
add
and
addr16
imul
or
cld
js
mov
lahf
lret
mov
or
notl
push
jmp
xchg
rcl
and
cs
jo
and
sbb
cmp
out
pop
add
xchg
jmp
enter
sbb
add
loope
mov
mov
imul
pop
in
add
sbb
dec
imul
mov
sub
fildl
repnz
movswl
nop
hlt
daa
push
inc
sbb
jge
imul
pop
add
jp
inc
aas
jb
or
pop
addl
add
sub
hlt
popa
adc
xor
jg
rorl
add
cli
mov
adc
pop
inc
xchg
sub
imul
dec
call
add
pop
jne
fmul
add
neg
and
or
xchg
repz
inc
add
jno
mov
clc
pushf
or
dec
or
jecxz
push
xchg
cmp
cmpsb
sti
inc
adc
xchg
dec
mov
mov
push
mov
aas
or
or
or
dec
add
pop
cmc
imull
test
shll
or
decw
push
add
ret
sub
mov
pusha
lret
push
inc
sbb
jnp
pop
xor
test
insb
xor
test
testb
or
call
dec
adc
adc
inc
inc
jmp
ret
and
push
push
add
rcrb
add
xchg
jb
mov
mov
add
mov
movl
stos
dec
filds
add
cmp
or
add
ja
xlat
xchg
cmp
js
mov
xor
sbb
inc
and
inc
shlb
sbb
and
sbb
ss
add
fistps
mov
adc
push
add
pop
cmp
je
and
or
jne
sbb
and
jne
sub
xchg
or
pop
adc
es
cmp
repz
and
jge
lea
sbb
xchg
push
andl
ret
jne
xlat
test
and
dec
push
pop
dec
push
sub
pop
sarl
ljmp
and
sub
mov
aam
sti
cmp
jae
les
sti
mov
aaa
mov
inc
adc
ss
je
xchg
shlb
test
add
or
andb
jmp
cmpl
push
adc
add
pop
or
add
sbb
or
daa
mov
sub
sub
fs
or
mov
js
sub
mov
lret
add
xchg
cmp
sbb
inc
or
cmpl
and
lods
xchg
std
mov
sarl
ja
xchg
sarb
cmp
and
push
fbld
popf
push
jge
adc
inc
pop
sub
push
push
cmpl
push
aas
test
sti
sbb
cmp
adc
add
sub
dec
popf
addb
imul
fxch
mov
adc
sarb
jle
dec
hlt
mov
fmull
stos
aam
in
lcall
or
push
cmp
scas
rcrl
cmc
mov
rclb
jae
push
sub
in
cmp
jge
je
xchg
dec
add
jne
fwait
sbb
adc
sbb
pop
jg
addl
jle
dec
or
add
mov
orl
pop
jg
or
imul
push
xchg
fadds
addr16
imul
mov
cmp
leave
dec
in
push
xlat
xchg
lahf
mov
sbb
jne
inc
repnz
mov
jecxz
mov
sbb
enter
jo
out
mov
or
aad
dec
rclb
or
adc
hlt
ljmp
cmpsl
inc
jae
mov
sti
outsb
std
sbb
or
cmp
and
sbb
or
and
neg
das
call
or
fmuls
andl
push
jecxz
xchg
pop
lret
or
dec
js
xchg
orb
pusha
and
inc
je
jge
je
hlt
mov
inc
adc
jl
cmp
je
inc
in
faddp
dec
aam
add
cmp
ret
push
lock
es
lcall
jb
or
xor
add
repnz
sub
leave
mov
mov
mov
das
dec
shll
xor
mov
loopne
dec
or
push
dec
in
rclb
shl
add
in
out
mov
jmp
in
cmpl
jb
mov
ret
insl
lea
jg
cli
push
push
inc
into
pop
jmp
call
mov
inc
and
addr16
mov
sbb
add
movl
mov
fsubl
mov
mov
imul
pop
or
das
lea
adc
cmpl
or
cmp
mov
aas
call
cwtl
adc
testl
dec
push
test
inc
or
dec
jecxz
mov
dec
sbb
mov
lret
push
adc
xchg
fwait
test
push
and
or
aas
push
jl
test
clc
imul
pop
pop
xchg
xor
ret
and
or
popa
mov
inc
ds
cld
xlat
mov
mov
or
inc
jb
or
pop
ret
and
inc
pushf
pop
and
shlb
nop
lods
in
ljmp
xchg
hlt
inc
mov
lahf
cli
and
mov
and
xchg
addr16
les
xchg
enter
sub
pop
dec
inc
ljmp
push
pusha
dec
mov
lock
inc
push
repnz
lahf
mov
mov
pop
pop
push
push
pop
pop
addl
fadd
orl
je
or
sub
orl
inc
cs
je
jo
aas
call
inc
dec
pop
clc
sbb
pop
and
push
mov
fistps
sub
pop
inc
shll
stos
add
fdivs
gs
insb
xor
mov
mov
pushf
lcall
push
jmp
inc
ds
sbb
movsl
jo
in
push
pop
addl
sbb
jo
cmp
fiadds
xchg
stos
adc
or
mov
sbb
xchg
mov
push
shrb
mov
adc
or
addb
adc
ret
repnz
mov
lods
inc
sbb
jg
mov
addr16
push
orb
xchg
fbstp
cwtl
or
mov
je
jge
jbe
daa
mov
mov
shr
inc
cmp
loop
add
add
xchg
dec
cmp
sbb
mov
add
mov
cmc
sub
sbb
push
mov
out
popa
cmp
enter
mov
inc
stos
shrb
hlt
xor
sub
dec
adc
cmp
out
rolb
xchg
push
dec
fsubrs
out
xor
sbb
jbe
lods
test
sub
jmp
pop
daa
sub
add
js
dec
xchg
jnp
les
sub
inc
mov
jne
sbb
call
inc
loop
mov
loop
pop
insb
loopne
jg
jb
push
sub
and
or
or
xor
pop
mov
jmp
aam
push
daa
adc
insb
test
in
gs
call
mov
cmp
add
sbb
fmuls
mov
and
jnp
int
sub
or
inc
xchg
lods
dec
pop
add
push
call
sbb
push
out
jle
test
inc
lea
loope
shrl
push
jo
inc
or
or
outsb
add
or
xlat
and
xchg
push
or
push
mov
sbb
add
push
ljmp
pop
es
mov
js
xlat
hlt
dec
testb
adc
repnz
mov
xchg
int3
cs
dec
xor
pop
outsl
mov
dec
popf
and
jne
and
push
xor
mov
test
call
fbld
imul
shlb
fadds
fmulp
xchg
hlt
cld
mov
mov
adc
mov
roll
cmp
or
ds
fcoml
testb
call
fildll
inc
sbb
decb
in
sub
mov
lea
add
xchg
dec
pop
mov
int3
mov
xchg
adc
push
fs
and
add
lret
xor
xor
dec
imul
mov
ret
int3
xor
mov
adc
push
jne
adc
adcl
daa
add
adc
aam
or
jmp
adc
call
ja
jg
inc
mov
mov
pop
pop
lea
mov
mov
xlat
iret
adc
xchg
mov
fadd
mov
mov
inc
mov
arpl
mov
mov
shl
shll
adc
xchg
inc
nop
js
mov
popa
jne
cmp
scas
call
or
and
dec
mov
pop
roll
xor
dec
add
add
inc
add
inc
add
add
add
push
add
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
jb
arpl
fs
jae
add
dec
inc
push
add
add
push
add
add
rolb
pushf
inc
push
add
xor
xor
fs
insb
add
pusha
call
pop
lea
lea
lea
dec
movb
lea
sub
mov
mov
add
movzwl
add
jmp
testl
je
mov
add
pusha
mov
lea
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
add
sbb
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
xor
inc
call
adc
call
jb
ret
mov
popa
sub
shr
push
xchg
rep
pop
add
dec
or
jne
lea
jmp
mov
add
push
call
push
mov
or
jne
mov
add
add
jmp
rol
shr
jae
movzwl
jmp
add
lea
push
push
push
call
stos
pop
add
mov
test
jne
pop
add
mov
test
jne
lea
mov
or
je
add
jmp
lea
add
xor
xor
mov
shld
cmp
jne
and
add
add
add
inc
inc
cmp
jne
mov
test
jne
popa
jmp
add
jne
mov
inc
adc
ret
xchg
add
pop
mov
jne
fildl
cmp
jno
shlb
loopne
out
add
pop
cmp
push
fisubl
xor
push
push
lahf
inc
pop
mov
adc
xor
dec
push
scas
into
imul
rcr
jge
call
out
pop
push
xchg
cmp
add
and
dec
dec
bound
add
adc
pop
ficomps
fldl
movsb
cwtl
xor
add
inc
push
gs
cltd
jo
das
loopne
inc
jecxz
pushf
sbb
gs
jecxz
inc
jae
outsb
fs
sbbl
and
shll
jb
lret
and
jns
gs
imul
add
add
adc
inc
add
inc
add
add
add
push
add
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
jb
arpl
fs
jae
add
dec
inc
push
add
add
push
add
add
rolb
pushf
inc
push
add
xor
xor
fs
insb
add
pusha
call
pop
lea
lea
lea
dec
movb
lea
sub
mov
mov
add
movzwl
add
jmp
testl
je
mov
add
pusha
mov
lea
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
add
sbb
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
xor
inc
call
adc
call
jb
ret
mov
popa
sub
shr
push
xchg
rep
pop
add
dec
or
jne
lea
jmp
mov
add
push
call
push
mov
or
jne
mov
add
add
jmp
rol
shr
jae
movzwl
jmp
add
lea
push
push
push
call
stos
pop
add
mov
test
jne
pop
add
mov
test
jne
add
add
inc
dec
add
add
add
push
call
call
pop
sub
lea
push
push
call
ret
mov
test
js
mov
mov
lods
mov
ret
mov
mov
ret
push
mov
mov
add
mov
mov
add
cld
test
je
dec
mov
add
sub
sub
lods
ror
add
cmp
jne
rol
cmp
jne
mov
add
movzwl
mov
add
mov
add
add
ret
lods
pop
xor
sbb
xchg
mov
pop
repz
fwait
push
inc
fs
mov
clc
lcall
cmp
dec
inc
dec
push
push
pop
push
jns
je
insl
xor
pop
jae
jae
outsb
outsw
je,pn
je
outsl
data16
imul
add
