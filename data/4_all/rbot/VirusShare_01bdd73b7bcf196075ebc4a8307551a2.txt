aam
into
xlat
dec
sti
cmp
mov
mov
push
shl
and
pop
rorb
cltd
fucomi
loope
sub
imul
sub
inc
push
mov
pusha
and
lret
addl
in
sub
jnp
jl
pop
mov
scas
push
aaa
mov
mov
xchg
mov
and
adc
dec
rcpps
push
pop
mov
rorl
mov
jne
iret
ja
cmp
loope
cmc
out
jmp
rep
push
push
push
xorl
jp
fs
cli
cltd
popa
xchg
dec
data16
rcr
data16
stos
push
popa
int3
call
cmp
aas
xor
xchg
mov
sub
pop
cmpsl
shll
adc
push
jne
pushf
int3
mov
orb
std
jb
das
ds
enter
imul
frstor
inc
cs
lds
ret
shlb
mov
daa
mov
int
jmp
push
sbb
mov
bound
mov
dec
pusha
jns
mov
aam
push
aas
pop
sub
and
rcrb
leave
imul
sahf
cmp
out
or
adc
xchg
dec
mov
push
xlat
dec
leave
cmp
jp
or
call
and
movsl
or
cmc
push
int
mov
jae
xchg
xchg
mov
fnstenv
arpl
jecxz
mov
fldt
mov
repnz
lret
cmp
adc
push
inc
imul
test
js
xchg
insb
pop
stos
in
lahf
std
mov
mov
test
mov
or
mov
push
lret
push
pop
inc
cmp
sbb
sub
adc
push
fs
fstpt
in
fdivl
es
push
mov
xchg
orb
sbb
adc
aad
jecxz
dec
sbb
es
movsb
jne
push
jne
xor
es
cmp
cltd
inc
icebp
push
and
fidivrl
lret
and
sbb
gs
or
lret
push
test
xchg
ficomps
sub
adc
add
ss
xchg
xor
faddl
out
mov
aad
pushl
iret
cs
or
clc
adc
fnstsw
mov
cld
stos
cmp
enter
and
pop
fisubs
std
inc
sub
jb
sbb
or
repz
mov
ret
testb
jno
stos
push
mov
ja
int
pop
loop
addr16
lea
xchg
or
lods
push
add
les
fdivrl
mov
gs
push
repz
ss
inc
hlt
rcrb
out
adc
je
push
pop
gs
pop
mov
rol
push
ficoms
flds
subb
sti
pop
dec
dec
push
into
push
cs
test
aam
gs
jo
jns
xchg
ds
adc
cmpsl
insb
cli
xor
dec
mov
add
fwait
inc
popf
movsl
jmp
daa
mov
sbb
jl
mov
dec
icebp
fisttpll
movsl
add
or
xor
and
or
mov
test
cmpsb
je
ficomps
lahf
jno
fiadds
push
add
xchg
mov
or
cltd
pusha
std
xchg
js
fs
pusha
jmp
hlt
into
xchg
cld
inc
arpl
scas
aam
xchg
or
movsl
mov
shrl
push
scas
dec
fwait
lock
mov
add
adc
mov
mov
cwtl
xchg
xchg
and
mov
in
and
outsl
push
nopl
xchg
mov
ljmp
fdivrl
js
mov
xor
ss
pushf
test
int
sub
repz
adc
or
inc
jecxz
addb
xchg
cmp
push
push
inc
rcll
mov
pop
movsb
nop
stos
add
insb
inc
cmpsb
push
stos
ret
and
push
test
into
jb
xchg
lea
imulb
repnz
mov
cmpsb
ss
or
lock
xchg
add
sub
jecxz
inc
sub
push
push
push
mov
and
out
enter
push
mov
or
jo
jmp
scas
shr
xchg
xor
jp
and
jno
xor
pushl
das
mov
jne
xchg
call
xchg
rcll
add
push
lea
inc
sbb
fabs
add
loope
push
lods
rcr
rcrl
xchg
jo
fs
mov
jecxz
jl
and
lods
stc
mov
push
mov
inc
nop
xor
in
ficoms
mov
inc
ss
pop
or
mov
or
or
iret
xchg
push
outsl
ds
into
cltd
or
dec
inc
dec
ret
mov
ret
pushf
xor
jo
jb
lret
clc
insb
mov
push
jbe
pushl
nop
std
xchg
movsb
jle
scas
jb
scas
cli
push
scas
mov
imul
xchg
std
or
in
lods
lret
int3
popf
push
sbb
cmpsl
ret
jp
push
mov
jns
in
push
xorb
xor
dec
cmp
ja
sbb
mov
mov
lock
cs
fmul
sahf
cmpsb
mov
pop
jge
or
lock
mov
call
pop
lahf
push
mov
dec
das
push
cli
jp
dec
mov
loopne
loop
or
in
xchg
cmc
cmp
lock
dec
aaa
adc
pop
aad
cmpsb
xor
jne
pop
rcrl
daa
pop
xlat
mov
ja
jl
jbe
pop
aas
aad
jle
addb
lahf
pop
scas
ja
leave
jb
out
pop
sahf
dec
jns
scas
test
movsb
shrb
fildl
xchg
movsb
adc
mov
aas
or
dec
clc
cmpsb
add
push
ja
push
pop
scas
or
inc
jo
mov
outsb
jl
mov
rolb
repnz
cltd
push
jno
movsl
mov
inc
iret
push
rorb
xor
push
xlat
imulb
mov
cmp
aad
mov
push
sbb
push
sar
xchg
push
daa
push
lods
dec
mov
inc
dec
sbb
pop
and
sbb
repz
and
or
xchg
jbe
inc
js
mov
sti
into
dec
aaa
imulb
jnp
jb
adc
popf
jnp
xchg
scas
mov
push
shll
fisttpl
push
insl
push
and
nop
cmp
xor
lret
xor
fildl
inc
mov
ljmp
xchg
pop
add
mov
pop
pop
mov
push
jns
xor
fistpl
and
insl
xchg
sub
out
arpl
mov
pop
bound
pop
or
and
pop
dec
mov
out
push
add
xchg
out
fistpl
push
stos
jmp
lahf
jp
ss
mov
lret
dec
int
push
push
gs
cmpsl
aad
jl
test
cld
rol
mov
xchg
push
push
dec
inc
pop
pop
jo
or
stc
rol
clc
mov
xchg
jmp
mov
xor
jb
cmp
dec
sub
xchg
push
imul
push
call
out
daa
cmpb
insb
or
in
insb
push
cld
push
out
imul
imul
icebp
lea
sub
add
call
push
xor
pop
push
push
and
pop
pop
lea
mov
inc
inc
inc
inc
push
jp
cmp
pop
push
jg
jle
or
pop
fnop
jg
push
add
pop
mov
cmp
add
and
cld
push
jbe
sub
pop
xor
xor
jns
push
cmp
pop
lea
clc
push
push
test
pop
pop
jg
push
push
push
pop
pop
pop
jae
push
dec
pop
loop
jecxz
push
xchg
fisubs
call
sti
stos
andl
xor
cmp
push
in
incb
cwtl
fs
mov
push
pop
pop
or
rol
rol
cmc
mov
je
add
je
cmp
nop
testl
je
push
jnp
jge
sub
pop
loop
jecxz
jge
ror
sub
xor
xchg
xor
in
mov
cmpsl
js
cmpsb
or
or
out
movsb
das
xchg
pusha
jbe
test
fwait
and
pop
push
pop
stc
push
mov
add
pop
jno
push
and
pop
nop
jb
test
and
cmc
nop
inc
dec
push
pushl
xor
pop
pop
jmp
dec
mov
xchg
mov
jmp
add
push
add
ret
push
addr16
push
lcall
fidivrs
or
das
fcomp
lcall
and
jge
xchg
movsl
xchg
jp
ja
and
push
push
jno
and
pop
pop
fnop
push
jp
push
xor
pop
pop
inc
dec
cmp
cmc
test
inc
clc
sub
ror
dec
jne
loop
jecxz
and
xor
sub
mov
mov
push
or
cmp
cwtl
adcb
and
into
test
jne
cmpsb
js
jg
test
mov
mov
shl
mov
nop
jb
lahf
or
daa
xchg
incb
cmpsl
out
jno
jnp
or
rol
push
jo
rol
pop
test
jmp
mov
push
sbb
sub
out
outsl
outsl
mov
andl
aaa
dec
bnd
std
lea
int
std
sbb
pop
push
dec
push
push
cmp
in
cmp
jle
iret
jp
sti
pop
adc
inc
aaa
lcall
loopne
xchg
sbb
or
test
fcmovu
mov
popf
sbbb
insb
outsl
pop
inc
push
push
push
jp
push
push
ja
lcall
jnp
clc
lret
shl
and
push
push
out
xchg
stos
or
xor
je
pop
sbb
outsb
push
mov
mov
out
or
mov
sub
test
idiv
call
mov
jle
add
test
xor
test
test
push
jno
add
pop
test
cmp
push
jb
jo
rol
pop
jle
push
add
stc
clc
loop
pop
loop
jecxz
aad
pop
inc
inc
jecxz
aad
inc
sbb
xor
sbb
scas
mov
call
pop
fisubrs
pop
add
std
mov
sub
dec
loopne
daa
push
ss
movsl
fmul
in
cmpsb
sbb
xchg
and
lret
das
lahf
or
cld
mov
test
sbb
or
pop
in
adc
inc
push
xchg
mov
and
push
mov
adc
cmc
dec
aad
lea
shr
movsl
inc
test
inc
test
lret
out
repnz
and
jle
movhps
imul
repz
ljmpw
sbbl
xchg
dec
xor
rorl
das
lods
sbb
xchg
xchg
aaa
imul
stos
cmp
mov
test
mov
pop
adc
ja
or
or
imul
xor
cmp
add
lret
stos
mov
test
adc
in
and
enter
xchg
rorb
repz
ljmp
mov
cmp
xlat
sub
pop
in
cmpsb
pop
adc
pop
inc
lcall
dec
test
popf
sub
sbb
jo
sti
inc
dec
pop
rclb
add
out
sub
fnsave
roll
sub
int
pop
js
mov
jmp
out
or
or
popf
add
aad
mov
aaa
push
loope
jne
xchg
mov
xor
test
js
in
iret
pushw
lret
lret
fs
or
mov
push
insl
mov
or
mov
mov
test
outsl
or
loope
data16
push
daa
clc
xchg
rolb
rorl
cmpsl
add
pop
push
loop
xchg
xchg
int3
ficoml
lret
xor
push
addr16
lret
dec
imul
insb
push
into
arpl
mov
cltd
stos
push
and
into
dec
arpl
mov
and
loop
stos
fsubs
stc
fwait
stos
aas
dec
lret
repnz
inc
aad
pop
arpl
inc
pushf
and
pop
pushf
aas
insl
fs
and
pop
mov
and
mov
pop
sbb
loope
sbb
mov
lods
ljmp
sarl
rorb
stc
fadd
mov
dec
mov
insb
adc
out
inc
insb
daa
sub
sub
inc
cld
xor
xorl
inc
mov
fmull
outsb
das
push
adcl
lret
cmp
int3
fidivrl
or
add
pop
fimuls
sbb
or
lods
fmuls
repz
popf
xlat
inc
and
hlt
aaa
int
pop
inc
pop
pop
push
sbb
aad
pop
adc
push
in
and
pop
icebp
std
pop
pop
hlt
xor
add
inc
or
pushf
js
and
cmpsl
dec
sub
dec
pop
fisttpl
aad
dec
xlat
mov
mov
and
mov
cmp
test
fsubl
mov
fs
push
and
filds
mov
cs
or
pop
push
or
add
gs
loop
push
add
sub
xlat
pop
ret
fsubrs
lahf
lret
xchg
sbb
ficoml
stc
pop
fiadds
jg
fadds
fcompl
stos
ljmp
inc
repnz
pushf
push
mull
data16
sub
pop
mov
pop
inc
mov
push
sub
pop
adcl
mov
ljmp
outsb
jmp
fildl
jns
loop
aas
dec
rorb
cmp
lods
rolb
sbb
or
lcall
push
jb
fstl
jo
data16
xor
inc
inc
into
es
add
pop
inc
adc
mov
lret
xlat
or
insl
jb
pop
shll
js
fidivrl
cmp
push
pop
fisubs
lods
fsubs
fdivl
push
rcll
dec
dec
sbb
or
inc
loopne
push
xorb
addr16
jbe
push
or
add
loop
pop
jl
inc
push
ret
sub
mov
out
popf
rcrl
sbb
sbb
fistl
cmp
jecxz
jge
rclb
lcall
fiadds
and
lods
mov
call
pop
adc
daa
dec
push
xor
push
addr16
xor
in
push
enter
xchg
push
add
repnz
fmulp
add
adc
ret
xlat
and
jecxz
aas
lahf
jmp
jne
fcmovb
cmp
ficompl
sbb
stos
pop
or
cmpsb
dec
mov
fisttpll
xchg
addr16
outsb
xlat
push
mov
in
inc
add
cs
sbb
inc
pop
sbb
sarb
add
sub
push
cli
js
mov
fdiv
dec
and
mov
mov
fisubs
adc
icebp
subb
stos
push
cs
cmpsb
xor
shl
stos
call
cwtl
mov
and
inc
sbb
cmp
xchg
mov
addr16
movsb
jge
lea
jp
sbb
push
inc
shr
test
outsb
adc
mov
xchg
aas
sub
sub
xchg
into
outsl
shrl
pop
inc
xchg
push
clc
in
into
inc
lcall
insl
mov
adc
xchg
sub
arpl
data16
ja
roll
mov
pop
bswap
jmp
orl
loopne
inc
mov
cld
fidivl
pop
add
cmpsl
dec
jnp
lahf
adc
popf
push
jne
jg
mov
je
out
repz
cmpsl
mov
add
or
lahf
xlat
mov
xchg
fistl
inc
dec
rcll
loope
push
adc
ja
imul
into
or
or
mov
js
adc
pop
sub
js
jbe
and
push
push
lods
cmp
adc
ficoms
mov
xchg
movsl
push
imulb
sti
int3
fdiv
pop
mov
mov
pop
mov
fisttpll
popa
jbe
cmp
adc
jb
cld
mov
leave
dec
inc
jmp
jnp
addr16
mov
into
push
or
dec
push
jbe
fsubl
and
xchg
mov
sub
inc
and
mov
in
pop
cmp
mull
int3
mov
cmpsl
mov
loop
fists
mov
imul
popl
lcall
cwtl
test
cmpsl
pop
arpl
into
icebp
into
mov
xchg
sbb
mov
or
dec
mov
in
pop
insb
aaa
xbegin
cwtl
inc
mov
imull
bound
stc
icebp
xlat
mov
add
jb
jecxz
aam
add
adc
rcrb
xor
pop
sti
icebp
adc
push
mov
sti
mov
xor
mov
and
loop
movsl
push
add
adc
sub
jmp
jl
inc
pop
jle
decb
push
xchg
imull
mov
cmp
test
inc
inc
pop
cltd
es
loopne,pt
add
cmpsb
lock
cltd
pop
call
jae
repnz
or
decb
imul
xor
pop
adc
into
push
or
xchg
jg
pop
push
inc
mov
adcb
rcll
rorl
add
leave
adc
mov
pop
push
aad
dec
sub
rol
dec
push
add
dec
ds
cli
addb
lea
dec
cli
add
int
jnp
xor
int
jge
jne
xor
mov
inc
imul
and
loope
jo
add
popa
call
mov
adc
push
push
gs
out
enter
ficomps
sub
in
push
out
sub
xchg
adc
adc
popa
in
xor
jne
mov
add
mov
jle
movsb
sbb
out
rcr
mov
out
and
out
add
out
push
lahf
jae
sti
enter
out
push
mov
fisttps
adc
incl
inc
cmpsb
inc
inc
ret
mov
data16
mov
xchg
stos
dec
add
nop
xor
mov
dec
out
adc
dec
adc
push
ja
xor
fcomp
push
in
mov
add
sbb
cmp
or
movsb
or
test
rcl
arpl
push
mov
mov
mov
jae
xor
incl
add
pop
popa
pop
lea
or
mov
cmp
mov
popf
fadds
jnp
dec
jl
shlb
outsl
lods
subb
cmp
out
arpl
inc
jle
in
popa
inc
loope
mov
pop
fwait
or
lea
movsl
inc
dec
inc
in
test
scas
stos
jne
dec
lahf
cmp
sub
inc
mov
stos
call
repnz
pushf
scas
fisttpl
cmp
pop
lods
push
lock
popa
and
ret
cltd
lahf
jp
ljmp
fisubrs
or
push
and
and
cld
add
popf
les
sahf
loope
ret
icebp
icebp
mov
jmp
and
testb
sub
xor
in
sbb
lret
cmp
pop
pop
enter
xchg
inc
lock
xor
hlt
or
outsl
fsubrs
push
ret
sbb
xor
aas
xchg
dec
in
loop
dec
stos
jae
xor
jbe
hlt
xor
js
add
lret
inc
icebp
xchg
outsl
lret
or
jle
jle
inc
pop
daa
rcll
mov
jl
hlt
fdivs
data16
cmp
jmp
idivb
xchg
inc
leave
shl
sbb
pop
cmp
imul
scas
pop
je
push
rcl
mov
cmp
dec
push
das
or
xor
push
mov
ret
cs
mov
mov
imul
inc
inc
xor
dec
dec
enter
or
or
stc
xchg
and
push
cli
inc
and
inc
lret
pop
xor
xchg
in
pop
adc
jo
sbb
cmp
mov
fisubl
mov
out
cmpsl
cli
add
les
mov
push
adc
pop
or
in
addr16
xchg
xor
xor
cmpsl
fmull
in
shlb
sahf
mov
mov
pushf
sbb
push
sbb
aaa
cmpsl
test
test
xor
out
sbb
inc
xchg
movsl
lcall
mov
leave
and
xchg
add
mov
pop
out
push
scas
repz
mov
dec
dec
fisttpl
stos
stos
in
mov
sti
ficomps
lahf
push
xchg
pop
imulb
push
jne
subb
mov
pusha
add
xchg
xchg
jecxz
cmp
addr16
addr16
rcr
out
repz
xchg
cmp
jp
ljmp
std
jl
paddq
out
out
dec
sub
bound
cmp
imul
xchg
test
xor
std
or
les
arpl
jnp
test
cmp
daa
xor
jecxz
jp
xchg
addr16
xchg
popf
dec
lods
jbe
jne
cmp
nop
sarb
sub
inc
iret
and
dec
jb
jne
jecxz
fcom
js
xchg
sub
jge
mov
adc
mov
sbb
shll
push
shll
push
hlt
sbb
inc
jp
push
adc
inc
inc
pop
fisttpl
lds
adc
leave
xchg
jg
pop
stos
add
adc
and
dec
mov
in
ficoml
xchg
repnz
mov
leave
inc
mov
sbb
aad
dec
inc
std
sub
mov
sbb
lock
shl
or
es
lds
imul
fidivl
fiadds
push
cmp
mov
aad
cmp
sbb
adc
lods
adc
or
das
pop
and
cltd
jg
lods
lods
fiadds
dec
sbb
shrb
iret
iret
pusha
dec
mov
adc
push
lret
push
test
pop
mov
cmp
mov
bound
cmp
sub
mov
mov
into
pop
adc
rcll
pop
xchg
adc
and
into
daa
push
xorl
imull
add
rcll
sbb
adc
jle
jne
aad
mov
mov
lods
sub
aam
aas
movsb
pop
shll
jb
outsl
aad
push
jp
in
or
lock
mov
sahf
dec
aaa
mov
sub
or
cmp
jne
gs
xchg
inc
dec
mov
mov
pop
andb
fsubp
sub
sub
xchg
jnp
pop
hlt
mov
mov
adc
loopne
push
movsl
dec
fldcw
or
add
push
add
add
dec
push
xor
scas
dec
xchg
in
push
or
shll
inc
sbb
jae
cltd
or
xchg
jp
push
filds
cmp
je
mov
fadds
fistpll
jns
add
jg
popf
sbb
sbb
jbe
insl
outsb
jo
clc
hlt
inc
test
fdivs
mov
sbb
xchg
xchg
pop
aam
xor
or
xor
cmp
pop
pop
fwait
xor
mov
sub
in
xchg
int3
frstor
xor
call
in
inc
mov
mov
xlat
repz
dec
mov
mov
sub
inc
sbb
xchg
lahf
lret
dec
cmpsl
dec
xor
mov
jne
jmp
dec
sub
sub
test
add
insl
mov
adc
jg
jmp
xchg
scas
jns
jg
dec
push
dec
pop
das
mov
pop
movsl
sub
sti
mov
push
cmc
movb
sti
mov
dec
fisubrl
dec
imulb
cmp
popa
mov
mov
jl
dec
mov
xor
popf
aam
push
or
in
std
repnz
notl
shl
or
mov
cld
sbb
in
xchg
out
cmpsb
mov
cli
xchg
idivl
cmp
cmpsl
shrl
cmpsl
xchg
popa
cmc
fmuls
fisttps
adc
aam
fiaddl
mov
dec
and
repz
out
jle
movsl
rep
clc
sbb
push
loope
sbb
loopne
sub
test
cmpsb
fsts
rorl
cmpsb
pop
push
sbbb
add
test
icebp
lods
adc
in
addr16
sbb
das
push
repnz
ljmp
sub
pop
push
iret
dec
adc
xchg
fsub
mov
pop
daa
std
aaa
mov
and
out
inc
sbb
fs
xchg
inc
into
pushl
dec
stc
xchg
sub
int3
pop
out
push
imul
jmp
ljmp
jmp
push
mov
addb
mov
pop
scas
mov
ja
aam
lahf
xchg
add
dec
jb
cmp
das
dec
dec
insb
pop
out
fwait
mov
push
pop
mov
jb
sbb
or
pop
jle
mov
jge
and
mov
pusha
repz
shrl
sub
aam
stos
inc
mov
jbe
sbb
test
jne
sub
in
mov
mov
repz
mov
flds
inc
arpl
stc
mov
into
ja
pushf
jmp
mov
mov
out
sti
mov
and
lret
sub
sub
enter
test
shll
pop
push
lods
cmp
xor
out
sub
cld
mov
imul
sbb
shr
movsl
repnz
push
mov
xchg
pop
ret
ja
imul
mov
pop
xchg
ret
mov
cmp
inc
jmp
cmpsb
mov
cmpl
into
mov
xchg
xor
rorb
lret
jmp
test
ljmp
in
mulb
mov
and
stos
xchg
insb
addr16
loope
inc
mov
ret
jae
lahf
scas
insb
imul
mov
inc
dec
mov
push
cmp
ds
scas
and
mov
icebp
xchg
cltd
mov
lea
repnz
cmp
mov
pop
inc
cmpsl
rorb
lret
mov
repz
mov
shrl
xchg
sbb
lahf
xchg
aas
out
xchg
std
je
aad
stc
iret
dec
and
jae
ja
jb
mov
sti
rol
xchg
sub
fstp
xorb
xchg
xlat
push
xor
cmp
mov
test
add
rclb
pop
scas
data16
icebp
sbb
xchg
lods
daa
movsb
mov
ds
jmp
mov
aad
popa
cmp
adc
nop
cmp
imul
mov
sbb
mov
loope
pop
dec
jb
sti
inc
xor
loope
test
or
inc
xchg
or
pop
mov
bound
stc
shrb
outsb
cmp
out
pop
cmc
push
out
xchg
or
mov
sub
mov
xor
data16
xchg
mov
or
mov
enter
dec
add
icebp
dec
lahf
pop
xor
addl
stos
jb
loopne
mov
cmp
jo
inc
pop
push
sub
pop
pushf
ljmp
rolb
hlt
dec
adc
sahf
hlt
cmpsb
cmpsl
fbstp
mov
xor
mov
arpl
or
daa
pop
jb
dec
mov
std
inc
dec
in
cmp
xchg
pop
sbb
sbb
or
inc
dec
in
rep
test
push
and
aas
push
aas
test
int3
cmpsb
in
mov
jmp
les
xchg
and
pusha
sub
mov
add
out
cmpsb
fistpll
jnp
mov
aam
aaa
pop
mov
jns
loope
shrl
lods
sub
push
xchg
pop
pop
jb
adc
into
pop
mov
subb
fs
mov
mov
insb
sahf
mov
iret
std
mov
sahf
fmuls
aas
enter
movsl
adc
leave
jl
fdivrl
xchg
ficoms
inc
xchg
insb
iret
fidivrl
xchg
dec
inc
call
xor
std
lcall
jns
jmp
std
lret
test
dec
daa
ficoml
out
popf
loopne
fcompl
sub
bound
or
pop
dec
push
cmp
cmp
pop
es
xchg
and
fimull
lock
scas
aas
testl
rolb
mov
or
mov
xchg
test
or
cmpsl
sahf
leave
push
ficomps
xchg
xlat
cmpsl
out
mov
mov
push
and
je
scas
push
jne
les
arpl
jbe
mov
mov
inc
rclb
xchg
js
lock
jae
cmp
xor
insl
out
push
scas
mov
jge
fstps
jmp
shll
ret
roll
aaa
pop
sub
sub
test
in
loopne
jp
arpl
cmp
adc
inc
adc
lods
aam
testl
in
fbld
jnp
lds
and
mov
sub
dec
mov
sub
pop
ret
addr16
cwtl
mov
pop
jno
fisubrs
in
fbld
je
enter
pop
push
lea
pop
imulb
into
add
push
nop
sbb
fcomps
inc
pop
popf
mov
and
push
add
fwait
lods
xchg
pop
iret
xor
es
pop
jbe
rclb
dec
xor
inc
jb
sub
ljmp
aas
jns
cwtl
fcmovb
cmp
gs
pop
xor
cmp
mov
push
lahf
cmp
repz
dec
add
mov
or
lret
dec
loop
cmc
push
push
imul
sarb
fbstp
imul
test
mov
inc
ret
clc
cmpsb
push
push
lods
mov
out
repnz
divl
xor
addr16
mov
call
jb
insl
lods
stos
or
imul
popa
cli
mov
icebp
mov
out
sbb
mov
mov
jae
imul
fsub
shld
jmp
cmp
gs
std
dec
aam
dec
testl
or
data16
add
fisubrl
push
add
add
mov
sarb
mov
das
hlt
sbb
xlat
stos
test
sub
ret
cltd
mov
mov
xor
test
in
pop
loopne
lods
push
cs
rcrl
ret
dec
iret
icebp
pop
xor
cli
fisttpl
dec
mov
mov
adc
and
or
fmull
pop
mov
mov
mov
cmp
fistl
int3
mov
and
rorl
stos
sahf
jge
ds
mov
push
pop
mov
pop
push
popf
mov
jp
adc
stos
pop
jmp
imul
push
cmpb
lret
mov
outsl
aad
adc
ss
mov
cld
or
jmp
test
in
mov
cld
rcrl
adc
ljmp
jcxz
in
cmp
out
shll
test
out
xor
cmp
xor
rcl
mov
sbb
or
mov
test
adc
lahf
jmp
adc
icebp
push
xchg
pop
mov
faddl
and
stos
sub
inc
mov
imul
addl
ljmp
and
cmp
push
jns
mov
movsb
push
test
fwait
jge
jp
dec
inc
push
fldcw
subb
aaa
mov
gs
inc
adc
and
mov
dec
xchg
stc
iret
and
xor
xor
cmp
roll
jge
jb
roll
mov
push
lea
in
leave
leave
mov
add
jmp
jnp
je
jp
push
inc
aaa
jecxz
test
inc
cmp
mov
mov
ljmpw
rol
push
fsubrl
xor
sbb
aam
daa
in
or
mov
pushl
cltd
dec
inc
add
cmp
insb
jno
cltd
pop
lahf
fsubs
jno
xor
in
mov
jecxz
mov
pop
pop
fiadds
xor
add
mov
test
jno
fcoms
cmpsb
out
lea
xor
jae
push
cwtl
push
subb
pushl
clc
es
jns
push
mov
fsubs
ficoml
stos
adc
out
nop
or
jb
hlt
cmp
push
pushf
jnp
cmc
pop
roll
xor
fs
stc
cmp
iret
mov
xchg
dec
add
push
test
sbb
and
imul
xchg
and
mov
cmp
aaa
int
xchg
dec
out
sbb
mov
jg
xorb
fbld
add
add
lret
and
ret
push
fcomps
fisubl
out
cmp
or
std
and
sub
outsb
pop
sbbb
rcrb
in
pop
inc
push
test
fwait
loop
popa
jmp
fnsave
cli
subl
jo
jns
dec
or
repz
stos
jl
add
pop
aam
inc
inc
mov
add
movsl
sub
inc
ret
push
pop
adc
or
cli
pop
mov
lock
rclb
out
push
add
mov
sbb
and
out
or
mov
sub
mov
fadds
pushf
cwtl
mov
or
sbb
ret
aaa
mov
fidivrs
ficomps
fbld
sub
negb
mov
lds
xor
jecxz
jle
test
inc
leave
mov
xor
lods
xchg
rcll
xorb
gs
mov
cli
xlat
testb
lcall
int
adc
cmp
loope
lret
in
xchg
rolb
xchg
fisubs
adc
lds
ds
jg
cmpl
jp
dec
rcrl
dec
xchg
mov
or
loopne
jae
jle
pop
in
jae
push
je
add
add
popa
fs
out
cwtl
pop
adcl
cli
mov
lods
sub
pop
add
mov
jae
ret
jae
mov
push
test
pop
loopne
add
iret
loop
loop
cmc
fmull
repz
add
pushf
mov
movsl
xchg
cmp
ljmp
out
cld
mov
clc
pop
dec
push
cmp
test
and
mov
adc
nop
sub
jl
repnz
jl
aam
xlat
out
cld
dec
cs
dec
xchg
lret
fcoml
sbb
in
addr16
in
rcl
outsl
sub
in
mov
ljmp
incb
jo
ljmp
mov
jne
cs
out
jcxz
outsl
fst
sbb
cmp
adc
cmp
mov
std
nop
jl
rorl
and
es
cwtl
rorb
jnp
inc
adc
dec
jno
mov
mov
data16
push
pushf
not
push
inc
jno
fisttpll
in
imul
push
push
cmp
je
pop
mov
loope
dec
pushf
mov
dec
add
out
pop
lock
popa
fldenv
pop
ja
lret
outsb
dec
add
rcl
xchg
push
sbb
dec
jnp
cmp
subl
xchg
xchg
sbb
ljmp
sbb
into
subb
test
orb
sti
shrl
testb
psubw
mov
mov
cli
inc
outsl
lcall
pop
push
xchg
movb
out
test
push
jl
sar
clc
loope
push
aas
bound
xchg
mov
push
cmp
addb
adc
dec
cld
fst
inc
push
mov
add
and
mov
mov
gs
pushf
jmp
testl
inc
shlb
gs
mov
lcall
aad
sbbl
and
xchg
adc
sub
popf
fmulp
mov
movsl
jo
mov
dec
jl
jo
rolb
and
clc
mov
pop
dec
adc
lcall
sbb
imul
test
sub
cs
inc
out
in
test
mov
mov
jnp
mov
orl
mov
pushf
test
out
in
adc
int
popa
shrb
jb
hlt
mov
cs
lret
mov
mov
adc
or
ja
adc
sub
dec
aad
lea
cmc
xchg
out
jl,pn
dec
add
out
push
push
fwait
loop
or
lods
ret
sub
xor
clc
sub
fisubrs
mov
xchg
mov
inc
mov
jg
fmuls
in
stc
ret
adc
lcall
dec
shrl
mov
inc
mov
adc
ds
movsl
rclb
inc
push
cmp
imul
arpl
aaa
enter
mov
arpl
stos
mov
in
ret
popa
push
mov
hlt
in
xchg
shr
xor
push
add
loopne
arpl
test
xchg
push
sti
ss
int3
iret
test
xor
xchg
fmul
jne
xchg
repnz
push
sub
les
gs
ja
sub
lret
cmc
push
mov
xor
loop
xchg
test
daa
dec
sub
adcl
inc
cmpsl
ret
test
out
enter
push
jge
cltd
cmp
lahf
jmp
fdivl
je
fimuls
or
mov
xor
scas
outsb
fwait
shr
addl
lock
inc
dec
mov
push
or
dec
inc
jne
test
out
sarl
js
adc
fwait
orl
or
ret
aaa
push
sub
add
pop
mov
xchg
fs
out
xchg
pop
test
sti
fs
repz
or
cmp
adc
pop
cli
inc
xchg
xlat
inc
mov
inc
imul
xchg
push
lods
push
movsl
push
fiadds
inc
sbb
insb
rcrl
sahf
push
xchg
or
pop
aas
out
xchg
aad
mov
xlat
andb
mov
mov
jle
xlat
cmpsl
icebp
pop
loopnew
lock
out
dec
sbb
push
pop
jg
popf
int
mov
lock
push
xor
fbstp
pushf
outsl
push
in
daa
loope
ljmp
addr16
xor
add
scas
loopne
dec
inc
push
mov
pop
xor
je
push
xchg
cli
or
xchg
mov
loope
mov
push
test
pop
adc
inc
aad
std
out
enter
xchg
cmp
push
stos
nop
aad
push
ret
mov
jmp
aad
mov
idiv
repnz
adcl
adc
pop
xchg
mov
mov
test
clc
lods
sbb
lret
pop
dec
adc
mov
pop
mov
in
clc
stos
mov
and
jns
sbb
adc
push
insl
nop
jp
adc
mov
jne
jp
inc
sub
pushf
or
and
add
movsb
in
mov
out
call
daa
in
inc
subl
iret
cmpsb
es
and
inc
rcrl
std
cmc
xchg
daa
and
in
push
xchg
repz
jecxz
fldl
and
roll
mov
cld
pop
les
xor
pop
or
je
dec
or
int
pop
push
pop
xor
sbb
pop
mov
xlat
insl
jle
sub
inc
cld
fcmovnb
sbb
push
mov
rclb
mov
cmpsb
mov
lret
js
sarl
movl
addr16
push
or
aaa
repz
mov
outsb
xor
mov
pop
push
push
test
jb
push
jne
lds
test
testb
pop
dec
jl
add
rorl
aam
outsb
mov
adc
int
enter
pusha
jmp
ja
mov
pop
adc
insl
inc
mov
rcrl
daa
add
pop
mov
adc
test
test
jne
test
jle
cmp
sbb
add
fucomip
insb
sbb
fwait
cmp
sbb
in
outsb
mov
stos
inc
fxch
pop
add
movsl
mov
je
mov
rep
loope
lods
imul
test
push
inc
dec
lret
outsb
loope
pop
xchg
jae
mov
mov
testl
sub
dec
lock
jg
loop
pop
add
mov
jle
shlb
lods
std
out
je
jl
xor
xchg
cmpsl
xor
and
xlat
and
mov
aas
sbb
sub
and
sbb
iret
hlt
loopne
and
out
shll
xchg
imul
fadds
jns
xchg
outsl
js
pop
lds
incb
ljmp
sbb
sub
popf
sbb
loopne
jg
xor
jmp
and
dec
cmpsb
cld
outsl
mov
xlat
or
jnp
aad
pop
ss
insb
jbe
adc
jp
mov
adc
aaa
pop
xchg
mov
loope
std
fcompl
xor
mov
and
clc
inc
and
leave
jno
cmp
cmp
idiv
in
jl
loopne
int
rorl
jo
jp
loope
lods
push
mov
mov
sahf
imul
jg
int
jnp
pop
popf
int
stos
enter
sub
dec
test
test
cmp
xor
cmp
jecxz
ja
push
cmc
bswap
jno
lcall
pop
fistpl
nop
and
sub
add
les
fstps
rclb
xchg
xor
decb
and
shlb
sub
test
rcrb
dec
andl
fdivl
cmp
inc
outsb
cmpl
int
jno,pn
in
repz
mov
ret
mov
mov
lcall
xor
sbb
xchg
jl
mov
out
hlt
push
loopne
js
insl
out
xchg
aas
add
xchg
repz
push
push
imul
mov
ss
cmp
fimull
cmpsb
loope
arpl
ss
ja
dec
stos
adc
cmp
push
movups
add
dec
mov
enter
xor
push
pop
jp
fs
fdivs
in
xlat
pop
jl
mov
and
adc
mov
lret
inc
and
out
fisttpl
outsl
addl
out
je
call
dec
sti
test
loop
mov
add
das
cwtl
pop
xchg
pop
jmp
faddl
test
cmp
testl
loopne
cmp
pushf
sbb
ljmp
aam
lahf
ret
cli
lcall
ja
repz
mov
in
inc
push
imul
ja
shll
cs
in
sbb
pop
lret
add
loopne
dec
mov
jecxz
mov
ja
popf
call
mov
out
pop
adc
hlt
test
andl
out
adc
imull
dec
imul
fcmovnb
push
in
cmp
test
ret
xor
mov
fsts
sub
adc
inc
dec
jmp
outsb
fnstenv
popa
stos
das
call
rcll
loopne
ss
mov
and
sbb
stos
sarl
mov
and
add
cmc
mov
into
movsb
and
cltd
fidivl
adc
cmpsl
stos
mov
repnz
jae
push
jnp
fidivs
push
insl
call
push
pop
add
std
sub
pop
je
or
inc
xchg
xchg
add
ja
mov
or
je
or
mov
mov
adc
cmc
insb
or
ss
mov
mov
xchg
test
and
push
lcall
mov
jp
lock
call
push
repnz
or
or
pop
push
pushf
mov
test
lret
ss
mov
fisttps
sub
adc
jbe
jp
aaa
out
inc
push
dec
sbb
dec
push
sbb
int
mov
sbb
jno
daa
icebp
cmp
push
mov
stos
rcrb
ds
test
movsl
scas
dec
mov
xor
loopne
dec
xchg
or
add
mov
push
inc
jns,pn
xchg
lock
das
dec
iret
push
aas
rol
inc
fcompl
dec
and
xor
mov
jbe
sbb
dec
out
mov
lock
and
adc
subl
dec
add
mov
repnz
aad
stos
jp
push
test
or
pop
ljmp
cmp
xchg
jl
pop
mov
lahf
inc
mov
fsts
sarb
repz
mov
aad
pop
out
lret
movl
and
lahf
cmc
das
es
or
test
cmp
mov
lret
jge
mov
leave
dec
inc
fs
stos
mov
xor
test
ror
js
mov
addr16
mov
xor
xlat
mov
mov
ficoml
pop
jl
das
stc
xor
nop
push
sahf
aaa
ret
mov
clc
shrb
out
add
jge
inc
sub
pop
pop
xlat
and
mov
adcl
xchg
cmp
test
xchg
push
loope
movsb
sbb
ss
outsb
enter
mov
xor
nop
ret
mov
sub
mov
dec
lret
mov
dec
push
pop
out
fstps
mov
repz
shrl
scas
mov
call
add
mov
sub
dec
test
pop
push
lea
insb
test
jne
sub
cmp
jmp
push
lret
js
int
xor
mov
push
adc
pop
out
fdivl
dec
repz
pop
mov
movsl
in
or
ficoml
dec
mov
das
inc
pop
repz
push
out
aad
inc
and
sub
int3
mov
jp
shrl
mov
cmpsl
inc
or
repnz
push
imul
lods
int3
sahf
sbb
dec
pusha
out
and
pushf
movsb
and
sbb
push
flds
lea
mov
aaa
fidivrl
gs
daa
inc
pop
cmp
lock
pusha
movsb
mov
mov
fs
fsubrl
cmc
ds
test
jbe
sbb
dec
insl
test
cmp
cmpsl
bound
std
out
or
mov
pop
aas
lds
loope
dec
pop
xchg
fiaddl
inc
mov
cmc
and
imul
in
mov
mov
ss
add
in
inc
xchg
dec
xor
mov
sarl
mov
cld
sbb
cmp
mov
shr
in
into
mov
dec
mov
xchg
test
in
xor
mov
mov
pop
mov
pop
xchg
les
adc
mov
fstpl
and
cltd
incl
xchg
jl
lods
int3
adc
jp
mov
aam
xor
bound
fstps
roll
mov
imul
push
jae
popl
xchg
pop
adc
movsb
mov
fisubrl
test
fists
mov
xchg
dec
jb
inc
cmp
xor
or
add
push
lea
jae
fistl
scas
mov
add
in
inc
jmp
lods
mov
sub
and
call
pop
je
lcall
inc
js
sub
sbb
mov
cmp
add
jmp
ds
mulb
mov
xlat
mov
pop
lds
mov
add
jg
data16
sub
sub
loope
pop
stos
cs
and
push
or
xor
std
push
dec
notl
push
push
adc
loope
cmp
aas
stos
dec
dec
jnp
scas
in
test
inc
mov
push
cltd
xchg
rcrb
mov
jle
pop
ss
fwait
add
sub
ds
jo
jae
add
scas
jle
cmp
cmp
dec
insb
lea
lock
out
fidivrs
lret
mov
push
ret
lahf
arpl
push
pop
sub
ss
out
popf
sub
aam
subb
sbb
test
mov
in
sub
cmp
into
cmp
dec
test
popf
popf
ret
dec
fidivl
dec
sbb
in
inc
mov
pop
add
pop
jb
sbb
loopne
mov
or
fcmovb
lods
je
scas
mov
cmp
dec
cmp
std
jmp
into
mov
scas
aaa
out
mov
jecxz
andl
sbb
pusha
jl
mov
int3
insl
fnstenv
mov
imul
pop
movsb
jno
xchg
roll
jp
cmovb
imul
divl
arpl
loope
mov
pop
sbb
movsb
xor
enter
aas
adc
mov
and
mov
cltd
out
jge
mov
cld
dec
jmp
inc
fimuls
cmp
mov
mov
roll
xchg
xchg
mov
adc
lcall
push
stos
std
add
mov
or
rclb
xchg
add
jb
adcb
loope
xor
in
push
mov
push
shll
popa
je
je
ds
jo
into
test
jns
push
ja
push
testl
xor
repz
mov
xchg
jg
cmp
mov
push
insl
mov
sub
push
mov
pop
ffree
xchg
jl
in
ror
filds
xor
faddl
xchg
adc
inc
xchg
jle
fcmovne
inc
cmp
mov
mov
lds
aaa
dec
cmc
cmp
pop
test
fwait
rolb
sbb
add
insb
mov
out
out
adc
stc
and
shlb
in
and
lods
lret
jbe
push
lahf
cmp
inc
rcr
pop
inc
sahf
jmp
mov
ljmp
loope
mov
nop
addb
aad
mov
xchg
push
add
enter
out
ret
add
mov
pop
xlat
test
lahf
call
push
add
lahf
pop
xchg
cmpsb
add
sti
cmpl
movl
pushl
jg
pop
cmp
xchg
cmc
arpl
andb
rclb
ja
mov
and
int
and
mov
cwtl
sbb
cmc
pop
stos
or
sbb
xchg
xchg
pop
lods
adc
mov
add
test
gs
push
cld
out
dec
mov
mov
ds
pop
fnstcw
jmp
lea
sub
mov
mov
sahf
xor
out
ret
sub
adc
cmp
mov
mov
xchg
cli
stos
mov
dec
ret
jbe
int
fimuls
sub
ss
add
scas
mov
mov
push
lods
ja
inc
cmpsl
jns
jmp
pop
fldcw
pop
adc
jle
scas
int
int3
fists
cmp
lcall
mov
test
cmp
mov
push
out
insb
bound
mov
sub
aaa
lret
mov
push
gs
xchg
mov
repnz
pop
cmp
dec
popa
lret
and
cltd
jbe
or
jecxz
gs
adc
and
sbb
movsb
pop
mov
lods
mulb
or
ds
daa
rorl
stc
dec
hlt
cs
out
outsl
pop
push
pop
mov
pop
pushf
push
loope
jns
cmpsb
subb
nop
out
pusha
mov
in
or
dec
jne
pop
pop
movsl
test
shll
das
lock
pop
scas
mov
add
int3
stos
imul
insl
clc
loop
cmp
outsl
jae
push
jmp
mov
icebp
hlt
jge
repz
sub
mov
push
xchg
sti
mov
or
popf
xchg
pop
mov
mov
mov
lcall
into
in
sub
iret
xchg
movsb
lcall
test
ljmp
pusha
mov
jae
negb
xchg
xchg
outsb
ret
push
les
popa
jno
bnd
mov
sbb
out
push
or
es
test
movsb
push
push
cmp
cmp
sarb
or
hlt
jl
sub
adc
test
aam
lea
dec
xor
dec
cmp
dec
lds
mov
adc
mov
repz
mov
leave
cmc
lock
push
mov
push
pop
adc
inc
dec
decb
xor
mov
push
jbe
xchg
sub
arpl
movsb
ficoms
rcrb
loope
jbe
imul
adc
inc
lea
cmp
mov
mov
daa
dec
aas
rol
sarb
jecxz
scas
fdivl
test
enter
fldt
inc
int
mov
push
pop
insb
imul
pop
movsb
es
imull
sub
test
jge
or
or
and
ret
xchg
repz
rol
sbb
pop
dec
push
lock
adc
in
rcr
popf
fdivl
xchg
adc
sub
out
arpl
mov
fdivl
outsb
cs
jmp
pop
push
pop
dec
dec
ljmp
push
push
xchg
ds
xchg
lcall
push
insb
nop
push
mov
je
pop
aam
and
jl
jge
adc
xor
push
mov
inc
stc
push
insl
inc
testl
imul
int
pop
dec
gs
cmp
mov
mov
out
dec
out
or
jns
cmp
cmp
xlat
popa
movsb
insb
sub
sub
dec
gs
adc
clc
je
inc
vmaxsd
or
jecxz
test
aas
jbe
stos
fcmovne
shl
jnp,pn
pop
lods
jle
hlt
out
dec
mov
mov
and
xor
pop
rorb
cld
and
mov
adc
xchg
gs
movsb
imul
mov
push
push
xorl
sub
push
int
mov
mov
adc
jg
jb
popf
stc
dec
imul
cmp
pop
mov
dec
outsb
cltd
arpl
shll
and
mov
cmp
pop
stos
xchg
jl
or
sub
leave
dec
jmp
mov
push
cmp
xchg
dec
xlat
pop
cmp
jae
std
int
icebp
cmc
mov
sahf
repnz
jne
aaa
jg
lcall
add
dec
dec
lret
add
pop
push
jbe
jne
setg
lcall
popf
sbb
jae
xchg
sub
pushf
insb
testl
rolb
pusha
and
push
es
sbb
lea
or
fistps
std
lret
xchg
imul
inc
pop
test
mov
adc
push
xor
sar
or
sbb
push
ljmp
in
imul
cs
pop
add
outsb
adc
sarb
and
push
mov
add
jp
in
dec
imul
cmp
rolb
mov
mov
enter
sbb
addr16
pop
dec
mov
lds
sub
sahf
mov
outsl
push
push
loopne
cs
pop
out
mov
mov
repnz
ss
add
loope
adc
gs
popf
dec
push
pop
dec
dec
sti
add
sub
jno
xchg
popf
out
pop
cwtl
sbb
inc
pusha
in
xchg
sub
pushf
sub
sub
mov
loopne
adc
pop
mov
fnstenv
mov
mov
add
shll
scas
pushf
lods
add
adc
cmc
mov
mov
pushf
in
stc
mov
mov
xchg
adc
mov
mov
orl
push
daa
sub
dec
dec
out
adc
xchg
ss
cmp
pushw
xor
mov
sbb
xchg
test
aaa
fists
xchg
xchg
mov
add
xchg
xlat
sub
dec
jae
inc
jbe
addr16
movsb
pop
mov
fcmovnb
mov
xor
cltd
mov
jp
mov
xchg
mov
sbb
scas
int
ret
jp
or
repnz
push
fisubl
jp
fstpt
enter
pop
rorl
xchg
lds
cltd
cmp
shll
gs
mov
mov
pop
das
je
jb
insl
testb
or
sub
in
outsl
repnz
popa
cmpsb
xor
sub
pushl
pop
and
pop
test
xchg
loop
xor
lret
repz
iret
fnstsw
js
xor
dec
mov
mov
jnp
icebp
inc
pop
ret
sbb
mov
jae
cmp
jmp
and
int
in
lods
xor
and
push
out
cmp
rolb
das
ljmp
sub
pop
insl
inc
add
vpaddb
inc
and
dec
and
fbld
mov
or
addr16
mov
sub
xor
cmpsl
cltd
sub
mov
fstpl
fildll
arpl
daa
pop
faddl
xor
insb
lret
pop
pop
pop
ficoms
and
inc
pop
aaa
mov
sub
add
sub
mov
scas
scas
out
sbb
es
cmpsl
fimull
mov
ja
sbb
or
pop
xorl
xchg
test
mov
or
adc
xor
dec
pop
xor
push
push
loope
dec
fldt
cli
lahf
add
fwait
int3
inc
ljmp
pop
mov
fucomi
popa
fists
mov
insl
mov
addb
jge
ret
sbb
sbb
push
outsl
int3
movb
xchg
aaa
fsubl
cmc
repnz
mov
out
pop
xchg
push
aam
fs
pop
lret
fs
clc
pop
mov
xchg
lods
sti
cmp
fcomi
addr16
sarl
mov
jne
inc
adc
add
and
xor
push
mov
cli
in
insb
push
or
jns
imul
dec
jmp
nop
cmp
dec
jl
or
lods
in
repz
sbb
lcall
jnp
dec
int
stos
fimuls
sbb
and
lods
outsb
or
mov
sysret
jno
xchg
out
sub
and
add
xlat
inc
cmp
mov
mov
adc
cltd
mov
lds
test
repnz
push
addb
add
stc
jg
mov
sbb
add
mov
in
ljmp
sub
or
stos
popa
sbb
add
fistps
pop
aam
cmp
adc
clc
push
pop
or
jb
addb
and
test
popa
sbb
mov
xor
popa
test
jg
jecxz,pn
repz
or
mov
clc
lds
insl
roll
pop
xor
jge
sub
pop
mov
lret
je
test
mov
lods
repz
add
ja
leave
stos
sub
push
dec
lcall
xor
cmp
adc
sti
lock
dec
lret
inc
pop
lcall
push
movsl
pop
stc
stos
push
ret
movsb
add
ficoml
jno
push
and
inc
lock
lret
sbb
pop
icebp
outsb
pop
adcl
fdiv
mov
xor
push
adc
dec
cmp
pop
and
sbb
or
adc
iret
pushf
mov
sub
shll
inc
aad
adc
push
push
fwait
mov
jbe
pop
add
stc
push
loop
pop
nop
pop
xchg
push
xchg
mov
sbb
rorb
pop
or
mov
iret
and
lret
lods
jae
sbb
or
mov
push
mov
xchg
out
cmp
imul
pushf
pop
dec
and
aad
cmpsb
pushf
add
cmp
push
scas
dec
lret
pop
pushf
cwtl
push
movl
out
neg
test
push
mov
push
ljmp
aas
shll
out
dec
rolb
in
imul
mov
sbb
ficoms
dec
sbb
xor
loope
xchg
push
insb
mov
outsl
and
test
into
addl
lods
pop
mov
xchg
std
sbb
mov
les
gs
imul
arpl
call
dec
arpl
fisubs
insl
int3
push
lret
pop
pop
and
divl
mov
and
inc
bound
fs
pop
outsb
adcb
cmp
xchg
jp
push
sbb
bound
fstpt
out
mov
fidivrs
lret
dec
inc
jle
and
cmpsb
mov
jl
fsubs
mov
fcomp
adcb
in
adc
out
arpl
xchg
mov
push
test
cs
mov
mov
dec
dec
insl
add
or
add
lahf
push
jge
push
sub
lcall
add
test
xor
hlt
pop
mov
inc
adc
xor
sbb
mov
repz
push
cmpsl
sbbb
jp
popf
loop
imul
cmp
jecxz
jne
out
cmp
mov
lcall
cmp
cmp
cmc
mov
push
ljmp
daa
cmp
cmp
mov
sub
ficoms
dec
xchg
movsl
mov
icebp
pop
insl
mov
and
jne
icebp
pushf
or
mov
fst
fcoms
jbe
sbb
pop
pop
mov
imul
aam
dec
insl
les
ljmp
out
pop
pop
dec
and
fstpl
gs
roll
pop
pop
mov
cli
dec
sbbb
jb
orb
fidivrl
push
stos
push
or
decl
add
data16
cmc
out
das
faddl
mov
cmc
mov
push
cmp
in
sbb
lods
jno
pop
or
cmp
adcb
jg
dec
das
lcall
push
jb
mov
imul
add
lahf
xor
push
adc
js
sub
jmp
adc
fldenv
dec
pop
and
std
jne
rcrb
push
leave
push
ja
cmp
movsl
pop
pushl
push
fimull
push
jmp
das
orb
scas
leave
dec
mov
cmp
cmp
int3
pushf
mov
lods
mov
sti
jl
ds
push
pop
cmp
adc
movsb
xchg
out
xchg
xor
out
xchg
cmp
lods
cld
sbb
ror
cmpsl
xchg
pushf
mov
pop
adc
lret
outsb
out
lahf
xchg
stos
lret
pop
and
pop
stos
add
cmp
add
inc
add
xor
in
fiadds
icebp
push
mov
repz
in
and
cmpsb
push
test
add
dec
jno
dec
les
ficoms
stos
xchg
add
int
inc
cmp
push
fstl
sbb
sbb
adc
add
adc
xchg
rcl
push
cmp
mov
mov
cmp
push
stos
aas
or
cmp
push
mov
xor
fsubrl
adc
xchg
add
lods
aad
add
dec
stos
add
jo
es
int
nop
and
and
pushl
rcr
sti
test
or
push
add
popa
lret
add
sub
sahf
imul
cltd
clc
clc
push
imul
adc
dec
orb
movsb
mov
push
mov
mov
loopne
mov
cmp
test
and
leave
repz
cmp
jns
push
mov
xorb
xchg
arpl
sub
mov
clc
pop
pop
jecxz
pushf
push
aam
add
mov
aas
jo
rcrb
or
inc
and
leave
push
sarb
dec
mov
cltd
mov
xlat
mov
mov
cltd
sbb
mov
repz
xor
jecxz
stc
dec
das
pusha
in
pop
jne
and
out
cld
xor
lahf
out
pop
int
cmp
out
orl
dec
imul
sub
call
fisubs
rcr
mov
xchg
push
insl
sub
and
movsl
fwait
fiadds
call
call
xchg
push
inc
icebp
iret
sbb
sbb
dec
inc
movsb
push
cmpb
out
test
push
and
stos
cmpsb
rorl
daa
or
bound
push
fisttpll
icebp
icebp
cmp
jno
lea
imul
les
pushf
xor
sbb
inc
dec
adcl
sti
bound
repnz
fstpt
rcrl
fcmovnu
push
mov
push
out
pop
popa
insb
jns
or
mov
dec
add
pop
push
mov
int3
xor
jmp
stos
or
iret
inc
aaa
push
add
and
cmp
and
and
fimull
inc
cmp
repz
lods
sbb
xchg
mov
jne
cld
js
mov
adc
rcrb
mov
and
xchg
pop
lcall
cmp
notb
stos
addr16
jne
mov
icebp
clc
or
push
das
mov
inc
enter
dec
and
mov
pushf
mov
and
mov
imul
and
xchg
ljmp
mov
in
sbb
inc
xor
jge
scas
cmp
and
sub
jae
inc
pop
cmp
sbb
sbb
mov
popl
mov
out
testb
mov
push
ret
loopne
xchg
daa
xchg
push
cmp
pop
jno
push
lea
cmpsb
adc
mov
xor
push
fisttps
repz
add
lods
push
and
fiadds
call
sbb
fcomps
cmp
jns
scas
cmp
jnp
jbe
mov
sbb
jbe
inc
in
les
in
push
adc
push
mov
outsb
jmp
xchg
xchg
lds
jmp
into
in
inc
aam
rcrl
rcll
sub
imul
lahf
or
loope
aam
xor
sbb
mov
lods
insb
int
std
sub
aam
or
and
mov
aas
or
push
mov
mov
fildll
xor
cmp
dec
clc
das
out
push
dec
in
test
pop
into
mov
insb
enter
jno
repz
mov
leave
push
lods
mov
mov
push
divl
lods
push
or
add
js
rcll
sub
fcoms
sbb
frstor
cmpsb
and
nop
jmp
shrl
sub
fbld
pop
and
std
cmp
addr16
insl
xchg
jmp
xor
pop
add
jmp
frstor
add
xor
int
add
sub
push
push
out
imul
xlat
push
sub
movsl
mov
mov
push
add
fildll
pusha
nop
es
movsb
mov
roll
fisubrs
push
in
pop
popa
mov
lea
roll
in
mov
xor
fs
nop
add
pop
cmpsb
dec
ja
out
fiadds
or
pop
je
jb
xchg
jp
ficoml
jbe
inc
cmp
movsb
mov
adc
in
pop
lock
pop
push
ljmp
pop
sbb
adc
mov
sti
mov
push
aas
cwtl
jg
mov
pop
outsl
push
and
adc
sahf
cwtl
sub
xor
and
xchg
add
sbb
pop
aad
xchg
je
xchg
sahf
es
pushf
rolb
inc
mov
push
mov
aas
and
bound
es
inc
and
cld
pop
pop
repz
fdivs
scas
lds
fsubrs
mov
xorl
repz
in
test
in
pushf
ds
pushf
and
xor
mov
out
es
mov
in
dec
pop
cmp
xor
lods
mov
js
push
jle
cli
dec
call
nop
sub
shrb
icebp
or
mov
js,pt
bndstx
mov
pop
jns
xor
mov
bound
xor
out
push
jnp
loop
test
pop
adc
orb
push
leave
fsub
fisubl
push
mov
imull
lods
mov
sbb
nop
leave
std
mov
push
cwtl
enter
mov
rcrb
ret
rorb
fdivs
les
fisubl
sub
dec
subl
and
xlat
imul
adc
out
js
mov
mov
rolb
mov
mov
pop
loop
sub
lods
shlb
mov
mov
js
and
push
mov
ss
scas
push
gs
shlb
popf
xor
sub
ret
psrld
sub
cmc
test
jecxz
test
data16
jmp
out
mov
push
sbb
and
in
inc
insb
inc
fists
lods
in
adc
mov
hlt
pop
add
xchg
test
loope
lods
in
mov
xchg
loop
fs
jp
nop
lods
nop
dec
insl
std
mov
movsl
popf
stos
in
adc
push
jecxz
push
and
int3
loopne
inc
jo
push
int
hlt
and
out
and
mov
leave
xchg
lock
test
pop
pop
lods
inc
mov
loop
into
insb
inc
add
cmpb
inc
xlat
jns
adc
xchg
ret
mov
mov
mov
jecxz
inc
adc
lock
xlat
adc
fdivrs
adc
pop
and
or
mov
push
adcl
out
mov
popf
call
xchg
cli
hlt
push
jl
mov
sub
clc
in
add
mov
and
mov
mov
icebp
adc
aam
fldenv
mov
js
push
aad
xchg
in
rorl
sbb
xchg
jnp
mov
and
icebp
cmp
lock
and
gs
out
popa
lods
sbb
insl
pop
lea
jecxz
mov
cs
lahf
cmp
sub
push
sbb
jp
mov
pop
idivb
daa
arpl
aaa
cmpb
mov
dec
inc
mulb
adc
xchg
push
adc
jo
mov
out
pop
dec
or
das
mov
xor
rcrb
jle
lea
mov
rcrl
jg
es
rcll
push
and
sub
push
jmp
jp
mov
cmp
adc
mov
mov
xchg
mov
sbb
in
sbb
push
mov
mov
fdiv
push
movsl
jmp
mov
int
ficoml
inc
pop
mov
outsb
scas
dec
inc
outsl
cmp
pushl
mov
fucomip
mov
repz
icebp
sub
cmp
or
jmp
fstps
add
pop
mov
or
dec
scas
push
stc
imul
outsl
cmp
add
popf
mov
es
movsl
lret
shlb
ret
xor
mov
mov
xchg
mov
fldenv
pop
cs
xchg
xor
imul
sbb
inc
loopne
mov
push
daa
test
subl
ds
cld
dec
dec
mov
pop
jne
shlb
push
cmpsl
dec
pop
sub
adc
or
dec
jnp
repnz
pop
fsubr
fsubs
pop
pop
jl
aaa
ficompl
xchg
fbld
and
or
mov
cltd
and
sti
mov
add
leave
cmpsl
dec
pop
sbb
xchg
stos
xchg
xchg
mulb
push
cmp
pop
cmpsl
dec
xchg
and
aas
call
sbb
shll
fstpt
jno
popa
and
shlb
iret
add
and
and
mov
test
ljmp
cmp
adc
dec
inc
push
ja
mov
push
jl
mov
cmp
cmp
mov
ljmp
insl
fcmove
in
mov
shrl
sbb
mov
inc
loope
lahf
popf
popa
mov
cmp
jne
mov
addb
mov
mov
adc
out
and
fistpl
push
fisttpl
out
cwtl
aad
mov
cld
pop
sahf
fcompl
and
jbe
jno
jns
add
dec
outsl
daa
sub
out
stos
mov
jnp,pt
mov
icebp
fstpt
call
rorb
mov
clc
loopne
ficoml
ret
std
out
shll
ss
xor
xlat
ret
push
dec
sub
jl
pusha
bound
adc
loope
and
mov
lock
push
push
jg
in
add
shlb
dec
mov
lock
movsb
icebp
movsl
or
ss
popf
jae
jle
xor
cmpsl
popf
test
dec
and
cmc
jbe
cmp
and
push
das
xor
adc
test
dec
mov
and
cmp
outsb
int
repnz
insb
mov
inc
movl
mov
movsl
or
call
cltd
mov
fistps
std
daa
pop
mov
jno
outsl
pop
ret
scas
push
fldt
push
push
shrb
mov
mov
xchg
fs
pop
dec
cwtl
stos
dec
xchg
lock
out
mov
mov
push
inc
jge
xor
test
stos
pop
push
xchg
int
lea
iret
mov
xlat
sbb
push
add
dec
mov
cmp
insl
shll
or
inc
mov
movsb
adcb
cltd
jp
mov
lret
push
pop
into
je
jne
pop
sbb
inc
dec
lea
xchg
jecxz
into
popf
push
fcomps
xchg
aad
dec
jecxz
dec
dec
dec
mov
in
mov
push
ds
mov
in
sti
stos
les
fidivl
loope
hlt
or
push
sub
pop
je
sub
cs
cli
jle
sub
shlb
ret
xchg
je
jle
jbe
out
inc
cmp
stos
pusha
push
adcb
int3
adc
adc
xchg
push
frstor
movsl
push
mov
push
cli
or
insb
push
sbb
lret
std
mov
mov
or
sub
sbb
xorl
fisttps
outsb
xchg
ret
mov
mov
loop
push
lods
inc
or
mov
xchg
mov
movsl
and
jle
pop
aaa
push
sbbl
fcomip
fs
fistpl
sbb
cltd
and
sbb
insl
je
inc
mov
notb
pop
xchg
push
xlat
popa
notl
setle
mov
lret
dec
adc
ja
jne
packssdw
adc
hlt
jb
ret
fisttpl
pushf
xchg
pop
insb
jno
scas
inc
xor
lretw
divb
sub
mov
out
mov
mov
push
fdivl
pop
mov
adc
scas
jne
xor
lds
cmp
inc
sbb
pop
rcrb
cmp
cmpl
fisubl
shrb
out
xchg
xor
pop
loopne
pop
aad
jp
xchg
push
in
jb
lods
ss
xor
dec
dec
out
rol
xor
loope
push
mov
lds
test
cltd
pop
xor
ss
adc
push
scas
lret
mov
aaa
xor
por
je
sbb
ficomps
jmp
stc
lds
in
jmp
clc
lods
mov
ja
mov
sahf
fcompl
stc
out
pop
xchg
pop
mov
stos
fists
push
loopne
push
xor
jbe
cmp
lea
pop
xchg
inc
mov
cs
ffreep
pusha
adc
sub
cld
mov
outsb
je
fcoml
mov
jmp
pop
sub
test
add
jge
dec
adc
fs
cli
xchg
roll
sti
inc
add
or
mov
inc
add
roll
mov
cmp
outsb
dec
jmp
mov
push
cmp
out
jp
and
pop
add
popf
cmp
jmp
mov
xor
xchg
cmp
enter
jmp
test
push
push
adc
dec
xchg
adc
adc
xchg
or
popa
nop
decl
push
xor
or
popa
test
hlt
add
or
addl
mov
insl
xchg
mov
and
call
xor
mov
fimuls
cltd
cmp
outsb
sub
mov
push
adc
mov
sub
lea
jne
movl
mov
test
fwait
mov
rclb
xor
sbb
repz
push
hlt
sti
add
imul
ja
dec
sbb
add
subb
insb
mov
test
or
xor
push
mov
clc
mov
cmp
lret
fidivrs
push
or
jo
fwait
aaa
and
and
scas
sbb
jecxz
add
jns
xchg
sbb
jl
mov
or
notl
in
push
mov
xchg
or
add
jecxz
push
dec
sbb
bound
sub
mov
aad
inc
jmp
in
movl
jns
lcall
jbe
xor
insb
sub
fisttpll
push
mov
scas
dec
cmp
into
jecxz
inc
subb
fbstp
fucomi
xchg
ljmp
mov
arpl
inc
add
push
push
push
adc
lcall
ret
sbb
xor
xor
cltd
pop
mov
fsubr
add
ljmp
mov
inc
sub
dec
xchg
movl
xchg
mov
rorl
lods
inc
mov
shlb
sbb
clc
repz
push
jmp
pusha
adc
test
inc
sti
arpl
push
lods
loopne
mov
fs
adcb
mov
mov
das
mov
sar
loope
lock
mov
and
xchg
or
mov
loope
or
and
and
and
jecxz
fnstsw
ret
jne
leave
pushf
inc
mov
cmp
mov
xor
xchg
sbb
dec
mov
out
add
mov
jb
push
mov
xchg
push
sub
gs
pop
push
fisttpll
xor
sbb
xchg
inc
pcmpgtw
jl
dec
mov
mov
enter
clc
xchg
push
cs
cltd
xchg
jg
mov
mov
lods
adc
in
loop
arpl
jbe
pop
mov
adc
popa
hlt
pop
test
mov
imul
sub
aad
xchg
aas
aaa
repz
inc
mov
aaa
aad
cltd
insb
push
mov
shll
popa
out
andl
lahf
pop
shll
jb
mov
setl
jo
mov
xor
out
arpl
add
push
jg
ret
addl
cltd
nop
adc
jg
and
jbe
jge
popa
dec
hlt
sub
outsl
mov
cmp
add
insb
ja
into
insl
lock
inc
mov
inc
fcompl
xor
leave
mov
gs
push
lds
dec
inc
push
xchg
popa
ret
in
sbb
xchg
rclb
insl
popf
jge
clc
test
dec
outsb
lret
and
ja
movsl
sahf
or
mov
push
sub
jmp
jmp
adc
cmp
xlat
push
sti
adc
out
testl
sub
jecxz
jp
sub
sub
outsb
pop
pop
sarb
dec
lock
movsb
addr16
adc
pop
and
les
jl
pop
xchg
sbb
pop
adc
ret
dec
sbb
sub
xor
mov
xchg
pop
data16
push
fldt
movsb
pop
and
push
sub
cs
jmp
bound
jl
fcoms
aaa
cs
add
or
xchg
pop
fwait
scas
rcrb
stos
fucom
xchg
repnz
flds
in
pop
pop
subb
pop
sub
ret
test
sbb
push
xor
push
rorb
sbb
cli
mov
jnp
add
push
popf
jp
dec
mov
mov
andb
pushf
mov
lahf
push
adc
aam
ret
fnsave
jecxz
movsl
push
mov
aam
outsl
sbb
test
sahf
mov
scas
jp
adcl
int
movsl
in
sar
mov
lea
imul
xlat
and
aad
push
pusha
imul
out
cltd
dec
mov
jp
push
sbb
push
pop
and
stos
sub
inc
shlb
shlb
dec
test
mov
lds
mov
push
popf
stos
test
add
cmpsl
stos
es
jo
bswap
out
repnz
arpl
lods
push
push
lods
cmp
cmp
and
lea
xchg
xchg
mov
cwtl
mov
ret
out
pop
inc
mov
dec
dec
test
jp
sub
jno
sti
aaa
xor
mov
lret
rorb
lahf
call
mov
jecxz
ja
add
and
jmp
jne
dec
fldl
addr16
pop
and
test
pop
jbe
xchg
inc
mov
in
or
pusha
mull
dec
aas
sub
dec
out
sub
pop
mov
pop
ljmp
push
sub
test
fadd
xlat
aas
mov
mov
iret
dec
jne
xor
pop
iret
cltd
leave
xchg
rcrb
cmpsb
mul
jg
aas
add
mov
pop
repnz
lahf
push
xchg
mov
sbb
pop
outsb
xchg
lret
and
xchg
out
in
outsb
push
movsb
cmpsl
mov
and
cmp
outsb
jb
repz
out
movb
stos
js
xlat
subb
push
inc
popa
sbb
mov
int3
jo
push
out
jecxz
js
adc
push
sub
mov
sbbl
mov
fisttpll
cmp
mov
test
icebp
jl
adc
out
arpl
outsb
shll
popf
cs
xor
in
repz
xor
std
popf
sub
cmp
ss
repz
adc
adc
jmp
fadd
and
inc
movsl
mov
pop
cmp
jae
and
mov
xchg
ds
and
test
or
mov
sub
ret
mov
std
pop
add
lahf
stos
leave
xchg
into
or
pop
call
mov
outsl
bound
mov
xchg
xchg
js
xor
iret
pop
adc
xchg
xor
test
jo
in
inc
mov
push
or
dec
addl
into
pushl
fs
mov
addr16
insb
mov
xchg
out
int
call
mov
mov
add
adc
or
pop
cmp
dec
mov
or
inc
fprem
orb
addr16
pop
jge
orb
or
sub
pop
pop
ds
daa
data16
iret
sbb
pop
test
iret
scas
xlat
cs
ret
cltd
or
cmp
orl
jo
jp
and
je
lcall
das
and
lea
mov
movsl
outsb
test
jmp
rorb
pushf
pop
add
and
pop
push
or
neg
ret
and
fcmovnb
out
jns
lods
pushf
and
jmp
dec
test
aad
and
adc
gs
cmpsl
int
jecxz
insb
add
pop
jmp
pop
int3
je
mov
dec
fstp
xor
imul
adc
lock
std
ljmp
add
or
lds
addr16
daa
sbb
fucom
in
xchg
xchg
jl
subl
cmpsb
adc
mulb
loope
jo
mov
popw
mov
inc
lahf
push
inc
lret
jo
jae
fdivrl
inc
push
and
pusha
mov
sub
mov
mov
pop
call
push
mov
leave
lds
inc
jne
aam
loop
ficomps
jmp
xchg
pushf
dec
fldenv
lahf
adc
cmp
imulb
inc
dec
push
or
sbb
mov
jne
lcall
data16
adc
xchg
dec
mov
adcb
test
ret
or
adc
or
cmp
int3
popf
fidivrs
push
mov
push
and
pop
inc
mov
cmpsb
mov
inc
mov
xchg
or
inc
idiv
out
add
leave
mov
push
mov
call
push
inc
into
mov
xchg
out
mov
cmp
cltd
lods
or
cmp
sbb
or
inc
les
push
mov
movsl
ret
jle
dec
lcall
push
xor
int
push
inc
jmp
cmp
repz
sbb
mov
and
call
inc
ret
cmp
adc
mov
mov
test
inc
aad
fistps
sbb
pop
cmp
mov
je
nop
mov
inc
or
fdivrs
pusha
pusha
stc
in
cld
mov
mov
cwtl
jns
fisubs
sti
roll
sbb
ja
push
add
adc
xor
rolb
scas
mov
dec
lds
outsl
arpl
push
scas
dec
mov
stos
fs
jno
aam
aaa
push
dec
inc
test
cmpl
adc
adc
mov
and
loop
jno
subb
lods
fisttpl
cmp
add
sub
jmp
mov
add
lret
pushf
cmp
test
jg
adc
jbe
inc
bound
test
pushf
adc
and
lret
das
sub
je
data16
and
addb
adc
mov
fiaddl
add
mov
or
movsb
xor
imul
dec
test
icebp
xchg
and
test
xchg
xchg
pop
jae
mov
orl
xchg
sahf
aas
xchg
cs
mov
into
mov
fsubr
mov
out
push
decb
pop
jno
adc
sbb
dec
ret
insb
mov
or
inc
push
stos
mov
mov
aaa
push
dec
faddl
pop
rolb
mov
sbb
xlat
ret
cmp
sbb
ljmp
sub
in
adc
mov
jns
xchg
add
es
cmp
dec
lcall
cmpsb
lret
or
and
in
xor
sti
add
shrb
ret
test
dec
inc
jns
push
cltd
sub
mov
xchg
sub
lods
lahf
inc
mov
xor
lret
shlb
cmpsl
jecxz
and
inc
daa
lods
sti
adc
cltd
lds
popa
scas
mov
push
daa
outsl
xchg
fucom
insb
and
clc
adc
addr16
cmp
sti
cmc
and
mov
push
add
orb
xor
mov
lcall
popa
lret
mov
and
arpl
stos
dec
push
imul
outsl
in
mov
fisttps
ljmp
movsl
ret
outsb
mov
xor
adc
mov
xor
pop
or
das
cmpsl
jp
imul
and
or
lock
add
inc
aaa
repz
subl
into
pushl
popf
pop
jno
je
pop
add
stos
inc
xchg
clc
xchg
rclb
and
push
fmuls
popa
test
sub
int
popf
mov
in
rcl
test
pushf
pslld
out
mov
je
mov
inc
jns
jge
and
stos
leave
insl
inc
jg
js
adc
add
leave
jle
outsl
jmp
inc
mov
mov
mov
or
cmp
cmpsb
xlat
lods
loopne
hlt
cmc
mov
pop
cwtl
lcall
xor
testb
scas
enter
or
loopne
lret
mov
fcompl
roll
aad
sbb
ret
jno
idivl
push
jmp
in
pop
js
fstl
push
repnz
scas
push
test
insl
add
cld
xor
mov
mov
arpl
aaa
je
push
pop
lcall
shl
inc
pop
mov
rolb
jns
mov
stos
dec
mov
sub
mov
test
out
jge
mov
jae
jo
or
inc
jo
mov
jmp
test
gs
add
ja
test
arpl
and
add
in
icebp
popa
and
stos
loopne
jle
cmp
pop
mov
es
push
inc
adc
sbb
jg
mov
int3
sbbl
cmp
sbb
mov
loop
add
in
lock
sub
std
inc
incb
cmc
cmp
cs
or
xchg
and
addb
inc
mov
adc
adc
lret
mov
lahf
imul
pop
sub
xor
test
push
fbstp
or
inc
dec
mov
xor
or
shll
rorb
fldcw
les
sbb
ss
into
aaa
in
dec
sub
cltd
and
mov
push
das
int
push
cmp
rclb
mov
or
decl
cltd
mov
in
pop
ficoms
repz
leave
push
mov
sti
sbb
sti
or
out
es
sbb
ret
lea
mov
test
mov
aad
fidivl
push
lock
mov
mov
imul
jp
mov
push
jnp
movsl
and
jg
aaa
mov
xchg
push
pop
jbe
inc
sub
mov
sbbl
sbb
test
pop
sub
add
xorl
sub
jae
mov
aas
jg
lahf
adc
jns
add
loop
xchg
test
jmp
test
outsb
enter
or
jnp
push
add
pop
stc
in
fsubr
scas
sarb
add
pushf
push
inc
pop
pop
pop
and
sbb
push
test
dec
jb
push
shrl
adc
out
outsl
lret
xchg
daa
addb
cld
xor
sbb
iret
adc
sahf
mov
mov
mov
leave
or
decb
call
cld
dec
dec
inc
lcall
subl
xor
std
inc
mov
lods
fxch
adc
roll
sahf
out
push
orl
mov
cmp
pop
inc
imul
test
enter
push
add
or
rolb
inc
sahf
lods
mov
aad
call
fiadds
sti
sub
leave
sub
dec
push
inc
and
xorb
sub
xorl
lods
mov
dec
adcb
lods
fwait
aam
mov
cs
not
xchg
leave
aam
enter
movsb
cmp
cld
xchg
iret
movsl
xchg
xchg
icebp
xchg
lds
adc
iret
dec
add
dec
pop
insl
jl
pop
cmc
dec
push
sbb
xchg
mov
add
outsb
fnstsw
insb
pop
test
or
shlb
fwait
and
and
mov
notb
push
shl
xor
aas
dec
inc
adc
rorb
jnp
inc
cmpsl
jnp,pn
icebp
ljmp
lea
in
fistps
mov
mov
lock
rorl
arpl
sbb
xor
clc
in
daa
mov
xor
dec
xor
dec
mov
xor
sub
sub
or
repz
and
shrl
mov
mov
pusha
or
pop
jp
pop
cmp
out
jo
pop
cld
dec
add
cmp
cmpsl
sub
mov
push
jns
inc
movsl
cs
add
xor
and
icebp
sbb
andl
mov
xchg
xor
popf
xchg
out
js
sub
sarb
or
fdivrp
in
repz
fisubrl
push
nop
addb
test
aas
or
mov
inc
push
shrl
lds
dec
stos
popa
jns
repz
or
pusha
insl
sub
jle
mov
daa
mov
test
sbb
popa
adc
aaa
jp
test
xchg
and
stc
inc
pop
fldenv
cld
jb
inc
inc
cmc
pop
rcl
xchg
sub
ret
stos
push
mov
jnp
lds
xlat
out
setl
in
push
aas
or
pop
data16
cmpsl
cltd
cmpsl
movsl
push
mov
mov
js
icebp
outsb
push
xchg
mov
call
pop
and
in
xchg
div
test
cmc
and
sbb
cld
dec
sbb
xlat
pop
xor
int3
add
pusha
inc
sahf
jno
inc
int3
in
mov
sbb
mov
push
test
les
ficoml
xor
sbb
inc
mov
pop
lret
jp
out
js
imul
fwait
andl
mov
out
movsl
xchg
push
xor
jae
cmp
addr16
out
push
jbe
enter
mov
aad
bound
or
cli
clc
out
lcall
test
mov
lods
jl
loop
push
xor
mulb
aad
add
inc
fwait
pop
ja
fsubrl
jae
xchg
loopne
xlat
clc
mov
mov
xor
or
iret
mov
jg
xchg
add
or
fbstp
mov
jp
aaa
cmp
shll
xchg
std
cmp
inc
arpl
fistl
and
dec
enter
sarl
sti
or
rcrl
sub
insb
sub
int3
mov
out
jns
xlat
inc
insb
out
add
repnz
les
pop
lret
push
ss
ror
ret
jno
jae
scas
jae
scas
sub
inc
or
jnp
jecxz
rol
movsl
push
dec
mov
mov
mov
std
pop
movsl
inc
adc
xchg
sbbl
add
loopne
ret
enter
lcall
jmp
jle
test
imul
pop
out
mov
jae
sbb
repnz
pop
out
and
push
shl
or
fsubrs
mov
repnz
ljmp
fistpll
scas
dec
xor
mov
adc
shll
ljmp
arpl
sub
mov
shll
lret
int
xchg
dec
in
es
push
pop
insl
push
rol
loopne
cld
xchg
ja
jns
ss
add
test
xor
inc
pop
mov
hlt
inc
test
mov
xchg
push
jmp
jle
mov
daa
sub
sub
adc
mov
repnz
rorl
mov
test
mov
push
jecxz
jmp
mov
lock
in
jnp
sbb
xlat
call
fdivrl
call
jg
test
es
sbb
in
inc
lea
mov
jb
push
mov
lret
inc
adc
lret
push
cmp
jae
popf
add
xor
addr16
ljmp
jns
fs
or
jl
mov
sbb
xchg
mov
ja
sti
inc
in
je
in
dec
dec
and
sbb
adc
icebp
ret
fisubrl
and
and
pop
mov
jecxz
std
leave
into
ret
orb
jo,pt
dec
xor
pop
lods
lahf
add
rcll
add
xor
lcall
fldcw
clc
mov
pop
fstps
andl
add
ss
imul
jge
mov
scas
aaa
add
outsl
jns
or
out
cltd
lret
pop
xor
xchg
and
jnp
jb
ret
xchg
outsl
pop
cli
jl
jnp
in
dec
int
pop
pop
lahf
adc
xchg
ret
push
add
outsl
mov
add
in
cmpsb
and
fwait
repz
es
fbstp
loope
mov
iret
inc
arpl
sub
notb
outsb
cwtl
add
stos
pop
mov
fistl
out
sbb
loope
je
jo
pop
jnp
cs
insb
std
xchg
mov
dec
das
xor
mov
popa
xchg
push
push
cmc
test
or
inc
and
inc
repnz
loop
stos
out
inc
outsl
aaa
in
mov
push
andb
ja
mov
inc
repz
outsl
sub
or
sbb
test
flds
xor
aam
mov
cmp
jge
cli
aam
imul
mov
jb
adc
jmp
pusha
sbb
and
jle
data16
xchg
cmp
aad
xchg
out
fistpll
mov
xchg
shlb
and
rorb
loop
shll
fists
jbe
arpl
cmpsb
icebp
repz
pop
pop
leave
std
test
cwtl
pop
lock
push
lds
or
mov
nop
mov
sbb
jne
inc
aas
jecxz
pop
xchg
sub
pop
adc
shrl
stos
xor
push
inc
sbb
xor
movsb
cmc
add
iret
pop
inc
test
add
mov
imul
mov
fildll
cmp
jp
jnp
out
mov
aas
mov
jns
push
jno
mov
xlat
mov
sub
movsl
enter
pop
ret
mov
pop
xor
loopne
movsl
ljmp
add
jb
fsubr
and
jae
ret
out
mov
or
aaa
outsl
xchg
jmp
shrb
mov
jb
lods
sub
jo
dec
test
push
icebp
mov
mov
mov
pop
push
or
lods
repnz
jecxz
loope
push
popf
cmpsb
mov
and
xchg
rol
out
js
xchg
scas
mov
dec
and
aad
cld
mov
jno
outsb
mov
xor
mov
outsl
inc
and
fidivrl
push
in
xor
divb
leave
add
xorb
ss
out
sub
sub
jnp,pn
push
inc
in
cmpsl
fistpl
xor
xlat
xorl
dec
popf
adc
aas
inc
test
shl
in
or
jg
repnz
and
cmp
int
sbb
leave
sub
insl
jnp
mov
jecxz
cmp
push
add
bound
pop
and
nop
nop
mov
dec
movsl
in
scas
add
add
outsb
cmp
add
or
dec
push
xchg
mov
nop
jg
mov
push
jmp
in
stos
call
rcl
mov
jge
xchg
xor
outsl
js
xchg
pop
ljmp
add
jno
pop
jae
shrl
push
imul
mov
jno
out
cmp
test
orl
js
ja
mov
jns
mov
insb
inc
add
mov
fs
movsb
imul
mov
pop
sbb
lret
fcoms
jmp
adc
adc
cmp
fbld
es
inc
iret
adc
ror
jnp
inc
mov
int
jns
mov
fmuls
rcrl
lea
into
push
pop
adc
movsb
leave
in
mov
inc
fs
add
or
xchg
jo
dec
out
push
pop
pop
pop
mov
ret
cli
xchg
in
push
pushf
cmp
sarl
pop
rcrl
mov
cltd
nop
pop
jae
je
pop
inc
addr16
or
xchg
jecxz
out
cmp
das
add
rclb
sub
out
push
into
sbb
push
sub
pop
sub
cmp
aas
push
xor
sti
aam
dec
movsl
inc
xor
xchg
loope
bound
xchg
mov
pop
pop
jns,pn
sub
pop
push
mov
mov
lret
outsb
in
lahf
fildl
mov
data16
xor
sub
repnz
mov
repnz
fbstp
popw
arpl
xor
ljmp
cmp
roll
xor
inc
pop
hlt
mov
ss
jbe
mov
sbb
ss
mov
pushf
pop
imul
or
lahf
dec
jp
xchg
xchg
mov
dec
dec
or
sub
push
jae
jg
jae
fisttps
idivb
xor
jmp
jle
xchg
xchg
jbe
mov
out
stos
popa
imul
mov
into
lods
and
mov
jge
stos
insl
dec
int3
jno
loop
aaa
xor
mov
rclb
jb
lods
sub
jae
les
hlt
adc
sbb
xchg
fwait
xor
or
mov
inc
in
pop
xchg
mov
inc
cmp
rorl
cmp
add
cmpsl
cmp
mov
push
mov
adc
je
pop
jecxz
in
jmp
lds
in
xor
into
jmp
mov
stos
pop
sbb
cltd
mov
inc
jge
jp
das
loop
adc
mov
and
rclb
inc
fstps
xor
or
inc
stos
js
fsubs
jae
movsb
mov
lsl
dec
nop
fwait
cmp
das
or
outsl
subb
xchg
mov
cmpsb
lds
in
dec
addl
push
pop
cmp
pop
pushf
lock
sbb
cmp
sub
js
pop
js
pop
mov
mov
ret
cmp
mov
add
xchg
add
adc
xor
cltd
loop
dec
in
stos
push
xor
jg
push
cwtl
xor
sub
jne
js
or
das
add
mov
sub
in
adc
fbstp
fldt
bnd
and
xor
push
mov
inc
scas
cwtl
fisubl
jb
movsl
hlt
cwtl
push
ficoms
push
rcl
or
push
mov
shlb
sub
and
into
and
mov
or
test
out
cmpsb
xor
sbb
mov
cmp
cmovs
jecxz
jbe
movl
and
mov
cwtl
enter
loop
imul
repz
leave
scas
movsl
fcompl
lea
or
cwtl
xor
sub
out
ss
cmp
data16
or
std
scas
dec
mov
mov
daa
xchg
or
mov
insb
inc
repnz
jp
mul
pop
lock
xchg
stc
xor
pushf
lcall
dec
sahf
mov
scas
ret
imul
mov
and
bound
pushf
cmp
cmp
jmp
push
test
stc
xchg
testl
add
push
xor
lcall
in
ja
mov
in
dec
ss
dec
adc
andb
jmp
gs
or
mov
cmpsl
or
mov
sbb
movsl
sbb
sub
mov
mov
cmp
ds
dec
add
inc
xchg
add
pushf
dec
out
cli
mov
sub
stc
fwait
adc
push
jg
aad
shlb
out
mov
std
cmp
add
aam
mov
pop
dec
dec
fstpl
enter
dec
xchg
sbb
pop
cs
pop
ljmp
das
test
jmp
xchg
movsb
and
in
test
insb
dec
xchg
addr16
mov
std
push
ja
jmp
fimull
das
dec
pop
mov
inc
popf
jno
add
mov
pushf
test
mov
jns
call
jle
pop
outsl
cmp
out
cwtl
jp
add
xchg
les
mov
not
mov
std
mov
mov
xor
ljmp
adc
jnp
xchg
cmp
clc
orl
pop
push
cwtl
movsl
mov
rcrl
sbbl
xchg
jno
pop
lods
push
cmp
int3
cmp
icebp
mov
push
jge
jl
bound
pop
hlt
fdivrl
mov
push
scas
aam
cmp
jo
das
repz
sub
pop
in
ss
cli
xchg
fs
or
mov
jns
shrl
mov
call
inc
data16
and
push
adc
cmpb
or
xlat
adc
mov
sub
push
fmul
jp
sbb
mov
adcb
xor
loope
test
loope
xor
sbb
pop
add
das
ficompl
pop
xchg
mul
pop
jg
and
ss
shlb
movl
mov
mov
jns
push
jg
sub
pop
or
mov
mov
xchg
sub
fs
adc
test
fistpll
push
sbb
cmp
movsb
call
stc
pop
or
hlt
pavgw
jbe
mov
sbb
xchg
sub
adc
fcomp
push
push
cmc
xor
outsb
and
cltd
loop
aam
sbb
iret
stc
mov
and
fs
add
sarb
lds
mov
arpl
sbb
mov
push
mov
pop
mov
inc
mov
lahf
push
mov
mov
jns
movsb
cs
orb
adc
xchg
cmp
mov
sbb
xchg
sbb
stos
shl
sub
fsubs
xchg
sahf
ss
les
cmpsl
xchg
dec
push
pop
sbb
pop
push
lds
mov
fsts
ljmp
push
mov
jp
shll
mov
cwtl
xchg
sti
mov
sar
insb
and
jne
mov
jge
lret
xor
das
adc
mov
aad
jno
bound
adc
mov
xlat
jno
enter
inc
in
push
test
xchg
mov
push
jno
jl
xlat
test
aaa
dec
xor
sub
enter
add
jle
dec
pop
and
xor
shl
mov
sub
divl
jmp
movsb
pop
out
out
in
mov
and
xchg
pop
sahf
dec
mov
lea
mov
xchg
int3
outsl
rcrl
loop
sbb
inc
inc
fists
cmp
push
sub
cmc
add
ds
cs
scas
sbb
icebp
pop
jo
cld
lret
cmc
jae
rorl
and
and
bound
pop
xchg
jge
xor
mov
stc
fidivrs
inc
repnz
mov
aaa
or
ss
shrl
sarb
xor
movsl
mov
into
mov
pushf
in
hlt
sub
movsl
jbe
or
mov
outsb
mov
push
and
inc
mov
cmp
adc
dec
mov
ja
push
clc
xchg
or
fsts
js
ja
xchg
out
test
nop
and
jbe
xchg
in
add
mov
jns
xor
xchg
add
mov
jnp
out
stos
pop
je
mov
daa
xchg
ret
test
test
xor
daa
test
std
fldt
frstor
cltd
cmpsl
jecxz
roll
add
out
xor
inc
sti
sub
test
jnp
out
pushf
dec
inc
int3
orl
sub
int
shll
adc
cmpsb
mov
sbb
in
lds
mov
clc
inc
stc
mov
pop
fbld
mov
nop
and
lcall
movsb
push
out
jg
sub
jnp
js
cmp
adc
cld
les
or
push
xor
mov
and
shl
jg
cmp
or
mov
pop
mov
jne
aas
mov
into
mov
test
lds
mov
ret
pop
aaa
inc
in
dec
loop
adc
adc
xchg
je
add
aad
fcom
cltd
push
xchg
je
pop
das
sub
loopne
out
push
pop
es
stos
lea
lcall
and
aas
das
repnz
mov
repz
je
addr16
jbe
and
xchg
pop
fwait
daa
aaa
pusha
mov
mov
lds
ja
shrb
dec
xorl
fimull
add
push
lods
daa
dec
movsl
xor
and
movsb
mov
mov
mov
inc
lret
pop
shl
pop
int
outsl
scas
and
sbbb
push
aas
jp
ja
xor
addr16
es
rcrb
and
inc
sbb
in
jmp
pop
jo
dec
insl
es
sbb
lds
push
test
mov
mov
xchg
outsl
xchg
enter
sbb
inc
bound
test
pushf
lahf
add
pop
adc
addr16
mov
mov
fwait
lret
xor
fwait
test
inc
pusha
repz
ret
fnstsw
jecxz
dec
push
mov
and
inc
and
sub
test
sbb
stos
mov
jmp
aam
jl
inc
jl
ss
test
dec
hlt
aaa
mov
call
ja
ret
jbe
cmp
ja
je
aam
jae
push
cli
push
dec
scas
idivl
mov
sbb
mov
lret
lea
jecxz
and
xchg
xchg
jg
jmp
pop
dec
dec
sbb
and
fwait
push
dec
in
sub
jne
shrb
cmp
jae
out
dec
inc
outsl
jge
repz
fdivrl
xchg
mov
negb
sbb
cmp
pop
decl
ret
sub
push
movsb
cmp
sub
je
inc
roll
repz
stos
xchg
jmp
outsb
inc
jbe
fldcw
push
outsb
add
repz
fmulp
or
mov
int3
adc
mov
mov
sti
imul
je
xlat
call
pop
adc
mov
in
enter
pop
pop
cmp
test
and
addl
or
je
leave
jae
data16
sbb
jge
cmp
and
or
movsl
mov
inc
xor
inc
loop
in
pop
rcrb
jb
mov
mov
leave
mov
xor
cmp
inc
mov
mov
into
xchg
shl
jns
xor
and
mov
loop
mov
adc
add
push
inc
imul
int
jns
pushf
mov
std
mov
inc
aaa
xchg
lock
push
in
addr16
sub
aas
jmp
push
dec
mov
pop
jmp
xor
pop
stos
addr16
sbb
int3
je
stos
test
in
aas
jnp
popf
push
cmpsb
push
or
inc
mov
mov
cmp
sahf
dec
pop
mov
loopne
int
or
into
and
aad
push
pop
fistpll
mov
incl
mov
arpl
cli
and
nop
add
sbbb
es
cmp
push
scas
ljmp
cmp
add
xchg
cli
insl
pop
adc
mov
inc
fwait
adc
and
movsl
xlat
push
mov
dec
mov
inc
cld
leave
insb
scas
adc
xor
jge
inc
scas
aas
aaa
jcxz
pushf
jb
fmuls
jnp
mov
pop
pusha
lock
cmp
or
cmpsl
jmp
insl
xorb
das
out
pop
repz
push
push
cmc
js
dec
dec
pop
adc
repz
out
lds
push
test
into
jp
dec
pop
jno
jmp
testl
pop
pop
js
popa
ljmp
ja
popf
add
sarl
cli
clc
or
sarb
lret
es
fbld
mov
mov
sub
push
sbb
scas
adc
cmovnp
sarb
sub
loop
push
or
jmp
push
mov
jmp
pop
enter
sub
cli
push
lret
nop
nop
mov
push
xor
mov
mov
test
jp
dec
cltd
mov
outsb
movsl
clc
mov
pushf
sbb
ljmp
jbe
iret
orl
test
lret
fwait
add
aam
cmp
push
testb
mov
mov
mov
jo
add
add
or
fcmovu
dec
hlt
loope
mov
push
xor
mov
mov
in
push
popa
repz
add
cmpsb
cld
fimuls
ja
or
push
ror
std
test
scas
mov
xor
jg
int3
sti
mov
jmp
bound
clc
dec
pop
mov
jne
leave
inc
in
nop
mov
jp
mov
push
mov
lds
es
inc
mov
add
cs
mov
fdivr
cmc
sbb
pop
pop
pop
lcall
jbe
mov
cmp
jl
jmp
aam
inc
mov
pop
icebp
shll
js
dec
mov
fimull
ret
sahf
or
aam
mov
mov
xchg
shlb
hlt
mov
push
jle
pushf
bound
loop
mov
jl
add
rclb
call
out
aas
add
frstor
pop
je
nop
ss
push
mov
int3
andl
push
xor
push
jl
pushf
or
pop
adc
icebp
loop
test
lds
pop
int
andb
add
cmp
pop
lods
loopne
les
xor
aas
xchg
inc
sbb
fcomps
fs
xor
shr
pop
fwait
dec
mov
xor
testb
stos
aam
aad
popa
clc
and
nop
xorl
addl
pop
push
pop
ret
and
hlt
jbe
rclb
sbb
stos
pop
mov
pop
fwait
xor
daa
sub
scas
fisubs
xor
lea
lods
rcll
cmpsl
jle
or
mov
sti
inc
call
aas
dec
mov
add
jp
or
out
sbb
fdivp
fcomip
loopne
gs
dec
lods
dec
andb
add
pushf
in
ljmp
push
enter
xchg
and
shlb
jl
xchg
cmp
addr16
das
xor
xchg
lret
mov
and
mov
ret
xchg
movsb
into
int
lret
push
cmpsl
popa
push
xor
cmp
adc
mov
jl
xlat
inc
daa
pop
lret
out
out
pop
mov
mov
out
ljmp
les
outsl
sbb
mov
inc
ljmp
add
xlat
or
dec
adcb
aam
fbstp
sbb
xchg
adc
mov
inc
imul
std
mov
into
icebp
test
insb
cmp
jo
test
loopne
adc
xchg
mov
shll
notl
ret
daa
cmpsb
cli
iret
push
jae
rcr
pop
lcall
jo
sub
or
jno
out
push
stc
cvtpi2ps
popf
xor
cmp
sbb
lahf
mov
loopne
fucomip
and
fsubs
arpl
shrb
pop
xor
andl
ret
inc
dec
jbe
hlt
movsl
jl
pop
add
pop
lcall
or
mov
lahf
pop
mull
jl
mov
and
or
ret
popf
sub
stos
mov
lock
sbb
pop
les
xchg
add
cld
pop
cmp
shll
loopne
ss
cmp
ljmp
dec
sti
xor
leave
fsts
mov
mov
stos
movsb
filds
and
sub
mov
mov
fsubl
sahf
pop
push
shll
rcr
jnp
jmp
xchg
jl
aad
js
in
orb
jle
data16
inc
iret
in
lea
xchg
out
hlt
addl
enter
sbb
mov
push
loope
mov
or
out
dec
ret
or
sbb
cmpb
test
subb
iret
pop
icebp
into
mov
or
insl
pop
in
push
pop
orb
das
sbb
scas
or
jmp
arpl
push
ss
pop
or
adc
push
outsl
aaa
je
xchg
inc
aaa
cmpsl
sub
or
jmp
testb
cmp
leave
fs
mov
xchg
or
xorb
test
push
je
adc
adc
sti
adc
xor
sarb
pop
jo
mov
sub
and
inc
and
mov
sbb
sarl
ss
mov
xchg
jmp
out
fisubrl
pusha
jb
bound
push
aaa
jmp
or
lret
adc
lret
cwtl
fdivrp
pop
test
sbb
and
pop
mov
mov
xchg
and
clc
sub
jge
add
fstpl
cmc
out
mov
rcl
loop
lret
xor
mov
mov
add
test
in
divb
push
adc
sbb
in
fnstenv
call
xchg
push
pop
das
add
in
sub
lds
ss
nop
adc
inc
add
mov
xchg
mov
mov
into
or
adcb
push
xchg
loope
jle
sbb
mov
scas
iret
sti
in
es
sahf
ret
out
aas
jae
push
dec
sbb
rcrb
mov
pop
ret
jbe
cld
lret
mov
stos
mov
cs
inc
lds
in
imul
pop
pop
test
dec
shr
ljmp
fdivp
call
arpl
hlt
jecxz
shll
loopne
in
cmp
adc
mov
pop
mov
addr16
fnsave
lcall
sahf
inc
dec
push
or
mov
js
sbb
push
pop
dec
loop
rolb
mov
jne
sub
xchg
dec
push
out
cmp
xchg
jecxz
shrb
mov
daa
inc
je
push
cltd
pop
jp
sahf
sub
gs
fiaddl
jne
pop
lock
rolb
jae
aas
shr
dec
stos
outsb
push
dec
sub
cli
sbb
fcmovbe
pop
nop
cltd
cmp
in
insb
sbb
test
mov
mov
xchg
pop
and
push
mov
enter
fpatan
lock
inc
pop
lods
cli
inc
mov
cmpsl
repnz
pop
iret
mov
movsl
cli
insl
addr16
mov
xchg
call
push
test
int3
cs
popf
insb
mov
popf
stos
pop
in
sbb
mov
pushf
loop
mov
aaa
sti
mov
xor
xchg
imul
daa
fsts
and
aaa
pop
cli
or
faddl
out
repnz
mov
mov
xor
mov
in
pop
push
sbb
aam
xchg
lret
adc
sahf
leave
stc
cli
aaa
pop
xchg
sub
adc
mov
insl
insb
jo
fists
not
popf
out
ljmp
jecxz
inc
lock
in
pop
scas
push
inc
int3
repnz
mov
adcb
jae
jp
iret
outsb
inc
sbb
lea
mov
subb
xor
jnp
repz
data16
emms
push
outsl
cmp
and
inc
jl
popf
imul
and
dec
dec
ficomps
dec
cmp
cwtl
imul
inc
inc
pushf
insl
adc
rcr
leave
jl
pop
shrb
scas
sub
pop
pop
fnstsw
decb
dec
xchg
out
dec
push
adc
or
mov
ret
out
rcrb
fst
cli
pop
je
dec
popa
adc
stos
push
or
lcall
pop
das
es
or
jecxz
fists
push
sarb
sarb
aam
jmp
adc
cli
inc
jns
add
imul
xchg
lahf
mov
xor
jge
int3
mov
dec
sub
aaa
fildll
rcrb
dec
adc
xor
out
insb
cs
daa
xchg
out
out
lret
mov
sub
push
scas
scas
and
mov
inc
js
inc
testl
aad
jne
or
lock
mov
gs
dec
or
push
push
fs
jae,pt
inc
pop
cmc
xchg
mov
mov
cltd
xchg
lock
aaa
xchg
mov
fcompl
fisubrs
push
cmp
mov
push
lret
sbb
sarl
jno
inc
mov
lret
mov
and
adc
pop
and
mov
inc
and
jo
jne
cmp
pop
scas
jg
fadd
and
xchg
jae
jns
fs
sbb
pop
xchg
or
push
cmp
push
pop
mov
stos
movsb
ret
inc
stos
cmp
adc
or
clc
in
call
outsb
in
gs
test
mov
pop
dec
shll
rolb
stos
outsl
sbb
xchg
flds
les
jle
popf
into
xchg
lods
inc
push
xor
pop
mov
push
cld
outsb
fdivl
mov
pop
and
sub
cmp
dec
sub
popl
movsl
cmpb
xor
cmc
icebp
into
or
clc
idivl
jne
loop
lods
mov
push
es
pusha
push
xor
pop
cld
sbb
push
dec
mov
and
rcll
fldenv
pop
into
mov
inc
es
jecxz
xchg
push
setl
add
inc
pop
incl
dec
jbe
inc
hlt
fs
js
arpl
and
or
stos
cmpsb
push
fucomp
mov
ficompl
mov
inc
repz
mov
arpl
pop
jno
pop
jp
xor
cmc
ja
and
or
push
hlt
inc
cltd
jg
mov
cmc
sub
xor
fmul
dec
push
ja
imul
outsl
lahf
jne
xchg
adc
cwtl
cmp
loop
sbb
inc
fistps
mov
rorb
outsl
push
mov
mov
mov
aas
int
in
jmp
pusha
fcompl
cmp
pop
loope
aas
lret
push
cmpsl
push
imul
sub
js
jo
sub
je
out
xchg
pop
fnstenv
or
int
jbe
data16
repnz
jge,pt
ficomps
jecxz
movsl
stos
pop
dec
mov
mov
in
sbb
mov
flds
sub
inc
mov
outsb
xchg
je
xor
in
imul
rorb
push
jnp
xchg
popf
dec
jnp
testb
add
adc
mov
mov
js
movsl
aaa
fwait
xor
jge
lods
jae
inc
mov
mov
push
or
scas
aam
mov
push
sub
and
movsl
sbb
lcall
add
and
subl
xchg
fwait
xor
pop
mov
test
lret
movsl
ret
ffreep
dec
push
in
sbb
dec
sbb
adc
ret
pop
loopne
lds
das
jb
fcompl
xchg
push
jg
fisubl
in
push
jbe
popf
call
sbb
cltd
add
jo
jo
xorl
and
xchg
cmp
jge
mov
pop
lret
dec
and
ret
dec
sbb
fadds
pop
dec
outsl
stos
dec
sbb
xlat
lahf
push
je
mov
scas
std
adc
push
arpl
and
jns
mov
loopne
mov
mov
jbe
loop
arpl
jg
adc
inc
mov
cmp
xchg
cs
stos
repnz
pop
pop
test
add
or
nop
loop
xor
clc
lods
inc
cmp
mov
std
popa
and
adc
loope
repnz
dec
int3
inc
aam
xchg
sbb
xchg
lock
shlb
mov
ret
shl
das
pop
testl
add
gs
mov
xchg
cmp
stc
ds
movntps
add
addb
push
ja
push
jo
in
pop
pop
test
repz
daa
insb
std
in
and
adc
mov
push
dec
xchg
xchg
div
inc
cmp
in
fldt
scas
pop
jmp
jno
mov
mov
out
dec
lods
out
daa
sbb
outsb
jbe
ljmp
int
outsl
and
lret
insb
in
roll
outsl
sbb
jl
clc
or
subb
imul
data16
cmpsb
inc
icebp
sbb
sti
bound
jns
fldl
adc
cwtl
sbb
cld
inc
xor
adc
aad
sub
fsts
in
sub
fdivrp
pushf
jno
mov
cltd
movb
addr16
repz
push
inc
inc
pop
inc
xchg
mov
ret
clc
stc
cmp
cltd
in
cltd
in
psubusw
cmp
pop
push
push
fucom
das
movl
or
lods
iret
cmp
cld
in
pop
lds
push
arpl
pop
xchg
andb
addr16
inc
ja
loopne
gs
addr16
std
enter
mov
push
test
in
test
cs
jae
fsubp
sahf
std
mov
sahf
dec
scas
xor
ss
leave
stc
sahf
inc
push
inc
pop
mov
nop
push
inc
out
add
mov
pop
pop
cmp
sub
lods
lahf
notb
mov
sahf
adc
push
aaa
xor
ret
pop
bound
shr
sbb
enter
mov
xchg
push
cmp
popf
fs
adc
lock
adc
xor
jo
incb
arpl
pushf
test
inc
add
ljmp
push
lods
sub
andl
xor
imul
loope
jmp
xchg
call
mov
mov
or
int3
xor
jns
testb
xchg
adc
sub
and
mov
inc
shll
adc
outsb
cmp
or
add
rcrb
mov
out
sub
push
sub
fs
in
push
es
sub
cmp
out
xchg
inc
xchg
xor
xor
clc
ret
cli
fwait
adc
push
imul
popf
xchg
xchg
leave
or
sahf
push
out
leave
mov
push
ja
xchg
arpl
insl
cmp
jns
mov
lock
test
jecxz
push
mov
and
xorl
mov
add
xchg
cld
xor
pop
test
lds
ja
pop
std
xchg
mov
test
push
sub
daa
fstpl
adc
in
repz
jae
dec
mov
into
or
mov
sub
adc
mov
jmp
inc
cwtl
pusha
xor
pop
inc
std
clc
inc
les
mov
jns
aad
ljmp
xor
call
bound
cwtl
sub
orb
data16
cmpsl
jg
adc
js
lret
and
sahf
cmpsl
daa
mov
mov
or
addr16
add
xchg
jge
rcrl
gs
push
into
mov
push
mov
loopne
gs
add
stos
sbb
xchg
push
cmp
mov
jmp
fwait
mov
inc
imul
add
xlat
cltd
jle
mov
push
imul
push
pusha
xor
adc
jmp
ljmp
xlat
in
or
ret
adc
cmp
dec
sub
or
xchg
clc
and
or
sbb
push
sub
adc
jge
adcb
or
cmc
xchg
fstpl
jnp
gs
outsb
stc
and
mov
mov
add
mov
aas
push
jns
mov
repz
fmuls
cmp
mov
mov
loopne
jbe
loop
cmp
push
cmp
iret
aad
jno
ss
mov
sbb
xchg
lcall
loopne
dec
push
mov
scas
inc
rolb
push
and
mov
mov
sbb
xor
ret
fidivl
pop
loop
ljmp
jb
pop
cmp
sbb
sbb
xchg
pop
pop
adc
mov
fwait
mov
minps
dec
push
int
adc
jecxz
push
push
sub
call
sahf
sub
lea
xlat
in
or
fnsave
cmp
ds
popl
cmc
fsubl
in
and
push
and
lods
jl
and
lods
fwait
in
or
notl
pop
stos
jne
pop
sti
add
lret
mov
in
stos
xor
lret
test
out
jg
leave
in
stos
mov
jae
xor
xchg
frstor
mov
icebp
lret
mov
clc
cmp
stos
cmp
out
cmp
mov
mov
xor
jns
dec
pop
add
es
push
rcrb
push
inc
inc
in
mov
sbb
les
dec
and
pop
xchg
xor
pop
sbb
ljmp
lods
scas
clc
mov
faddl
mov
nop
push
cmpsb
xchg
outsb
mov
lods
test
mov
into
rclb
or
stc
nop
push
ds
mov
aam
mov
orb
inc
inc
in
mov
sar
adcl
mov
sti
stos
mov
mov
leave
popf
idiv
add
outsl
or
sbb
mov
push
dec
xor
into
gs
faddl
lret
mov
push
xchg
add
rcr
or
sbb
es
outsb
adc
scas
pusha
xlat
jmp
lret
mov
or
pop
inc
je
pop
pushf
scas
aad
mov
and
gs
jne
in
popf
jmp
jmp
sub
fimuls
es
cmp
pusha
test
inc
sub
dec
adc
fxch
inc
pop
pop
pop
push
iret
adc
movsb
mov
lods
movsl
outsl
mov
or
adc
add
ret
xchg
into
mov
xor
push
mov
ficompl
push
pusha
pop
mov
mov
out
stc
in
arpl
mov
xor
sub
add
ret
push
daa
andb
out
adc
sarb
xchg
add
push
or
pop
outsb
das
arpl
ja
ss
push
aam
shrb
dec
test
faddl
mov
push
jne
cs
pop
ret
sub
mov
inc
and
loope
dec
sbb
sar
sub
shll
int
icebp
mov
int
leave
ljmp
jbe
xor
mov
or
adc
rorb
inc
and
rorb
fildl
cmp
push
adc
sub
lret
or
nop
inc
pop
pop
cmpsl
or
mov
push
mov
xchg
int3
dec
push
ret
stos
pop
popf
or
add
inc
fcompl
xchg
cwtl
mov
mov
mov
jnp
sbb
or
xchg
xor
int3
adcb
push
or
xchg
cmp
call
or
cmp
cmpsb
cmp
enter
pop
mov
push
fs
loop
call
mov
popa
push
punpckhdq
fxch
rclb
dec
add
bound
add
pop
cs
pop
popf
dec
loope
insl
adc
lea
mov
test
mov
jle
xor
cmp
jae
mov
mov
stos
div
stc
loope
daa
mov
mov
lea
pop
sbb
push
add
das
cld
add
xor
and
fisttps
sbb
or
xlat
mov
jns
push
push
stos
ficoml
jb
jmp
out
mov
stc
pop
push
add
arpl
repz
pushf
ret
cmp
mov
mov
in
jb
lea
mov
xor
ds
dec
pop
pop
dec
fidivrs
je
and
cmp
and
mov
arpl
bound
mov
out
pop
shll
cs
inc
pop
jmp
out
dec
in
cmp
mov
js
fldenv
aaa
sub
sub
imul
je
cs
sar
or
jae
das
jb
ret
sub
or
fistl
mov
out
jg
pop
xor
sub
sahf
xchg
or
sarl
scas
jno
and
push
cmp
push
ljmp
push
insl
sbb
push
pop
dec
jp
ret
scas
in
mov
lods
cli
push
xor
adc
lahf
push
pop
shlb
mov
pop
xchg
xorl
pushf
or
mov
stc
repnz
mov
mov
inc
dec
mov
xor
daa
mov
pop
fsubs
xor
jge
cmp
and
fwait
int3
ds
and
fists
pop
outsl
popf
loope
rclb
frstor
lret
sub
inc
mov
enter
xchg
pop
add
test
adc
sysret
fdivr
call
xchg
notl
xor
and
es
js
push
push
jne
addb
pop
inc
push
repz
mov
in
push
int
dec
add
xchg
loope
dec
arpl
in
jg
or
push
es
jge
inc
loope
dec
cmovle
dec
and
mov
call
pusha
inc
imul
out
hlt
mov
cltd
test
inc
addr16
sub
add
jo
call
xchg
mov
out
pushf
cli
jge
shll
xor
sbb
outsl
stc
xchg
mov
fstl
add
mov
movl
inc
mov
xchg
ficomps
mov
sbb
pop
cs
jno
mov
mov
bound
ds
push
jge
cmpsl
cli
and
pusha
sub
push
addr16
push
cmpsl
inc
imul
xor
les
gs
adc
cmc
stos
fistl
mov
test
xor
jecxz
sbb
repnz
ja
pop
int
out
aad
loope
cmp
cmp
filds
sub
mov
lahf
fisttpl
mov
insl
jno
or
jno
mov
sbb
daa
data16
subl
shll
movsb
push
or
dec
xchg
cmp
add
cli
sub
int
mov
mov
xor
pop
pop
lahf
enter
subl
adc
mov
mov
jno
popf
pop
imul
out
out
roll
xchg
lret
test
rcrb
inc
cmc
mov
pushf
icebp
adc
push
popa
jb
fwait
mov
int3
popa
aas
dec
popf
imul
xchg
pop
imul
mov
repz
jae
arpl
mov
jl
jle
shll
jge
mov
leave
and
xchg
mov
push
mov
ret
cmc
and
mov
loop
pop
dec
cld
stc
mov
adc
fsubrs
sbb
adc
add
addl
sbb
sub
pop
and
test
pop
cmp
fidivs
mov
bound
icebp
pusha
xchg
xor
sub
push
movsl
fidivs
scas
shrl
imul
sub
nop
add
add
inc
sbb
fdivrs
mov
in
ret
test
inc
call
and
imul
pop
add
cmp
sub
lds
dec
lods
ja
cwtl
repnz
pop
sbb
cwtl
mov
in
bound
dec
xchg
addl
addr16
mov
lret
addr16
pop
test
pop
xchg
push
movsl
movsl
lahf
pop
imul
sahf
push
repnz
orl
test
insl
sub
xchg
lea
push
test
push
out
mov
add
into
sbb
mov
cwtl
or
rcll
xrelease
lret
push
jae
and
push
imul
jb
adc
ds
xchg
sbb
jle
mov
popa
mov
in
lret
pop
jbe
popa
lret
xor
push
imul
maskmovq
testl
scas
xlat
pop
je
fldl
addl
in
repz
dec
lock
cmp
mov
mov
jecxz
add
jge
dec
jge
fcomi
push
jg
jmp
cmp
inc
daa
in
pop
jne
jns
repnz
mov
jo
mov
stos
shlb
mov
mov
scas
mov
xchg
mov
ljmp
pop
cltd
pop
aam
inc
xchg
dec
sub
xor
aas
xchg
pop
mov
pop
in
cmp
je
shl
lods
rclb
jle
xor
push
or
ret
push
sbb
shlb
add
pop
jl
nop
pop
add
add
xchg
mov
xchg
xchg
xchg
stc
pop
pop
mov
push
inc
mov
jne
lcall
mov
inc
pop
mov
aas
cmp
push
out
xchg
add
sbb
sub
adc
outsb
mov
mov
and
sub
and
mov
mov
imul
and
jne
xor
pop
add
adc
mov
sub
xor
sub
nop
in
push
test
mov
fimuls
xchg
inc
mov
popf
push
std
mov
dec
test
xchg
fisubl
add
xlat
cli
mov
ds
loopne
in
inc
xchg
xor
adc
jle
cmp
sahf
pushf
xor
pop
imul
pop
jmp
pop
cmp
or
and
add
add
xchg
ds
jo
fwait
xor
mov
arpl
ja
sub
ficomps
imul
nop
pop
int
xor
push
adc
popf
add
xlat
push
out
inc
cmp
inc
in
test
adc
dec
push
arpl
xorl
adc
mov
negb
push
idivb
jae
cli
fs
cs
jno
pop
adc
pusha
adc
or
jecxz
sahf
push
out
leave
mov
dec
inc
or
mov
dec
push
cli
dec
shr
mov
test
ret
sbb
pop
cmp
repnz
push
sub
or
cmp
clc
mov
sarb
decb
std
std
push
popa
xor
inc
cs
pop
fcmovbe
popa
ret
push
nop
mov
mov
cmp
cmp
das
push
cmp
mov
and
xor
std
jns
ret
gs
std
pop
or
dec
jmp
call
mull
dec
xor
mov
mov
lret
movsb
bound
inc
mov
mov
mov
mov
leave
stos
xchg
push
or
push
mov
jl
scas
push
push
xchg
jae
fwait
addr16
imul
fs
jno
rclb
mov
rcrb
pop
out
fs
push
div
adc
mov
and
add
pop
pop
xor
jns
dec
mov
negl
mov
lcall
mov
jns
jg
mov
fwait
clc
out
push
jno
lret
repz
shll
push
mov
push
pop
inc
sbb
sbb
roll
or
inc
xor
out
imul
call
sub
in
pop
dec
jge
test
insl
fnstcw
xchg
lock
ficomps
pop
jo
push
inc
lahf
iret
je
jns
jns
lea
inc
in
aas
out
insb
int
enter
or
ljmp
insl
hlt
lret
add
cwtl
add
in
arpl
mov
daa
pop
inc
orb
dec
inc
fisttpl
jle
adc
sub
lds
sub
repz
and
lahf
jmp
cwtl
js
pop
jno
fstl
mov
xor
loopne
imul
xchg
mov
aad
je
sbb
sub
fs
enter
jae
int3
xchg
jg
repnz
inc
cwtl
inc
xchg
sbb
dec
out
inc
cmp
movsl
sbb
dec
out
aad
bound
jb
jg
dec
xlat
cmpsl
pop
rcrb
addr16
mov
and
iret
adc
or
dec
std
dec
xlat
insl
add
shrb
add
jg
pop
mov
pushf
mov
dec
push
lcall
push
mov
or
push
test
addr16
nop
mov
pop
mov
pop
je
hlt
fisubl
outsl
sbb
dec
dec
sbb
and
sub
add
dec
sbb
mov
jl
mov
mov
jno
dec
xor
cmpsl
xchg
out
cmpsl
adc
cmp
mov
fldt
mov
inc
rcll
jno
mov
fld
fidivl
inc
cwtl
mov
in
xchg
and
fstpl
test
jae
xchg
mov
mov
pop
push
lods
cltd
jge
ret
popa
mov
fidivl
inc
stos
mov
jp
inc
clc
xor
lahf
or
in
xor
addb
ret
bswap
ret
mov
lock
mov
inc
adc
test
push
fstps
ret
mov
push
lds
sbbb
mov
stos
nop
loopne
add
fsts
mov
loop
movsb
ja
cltd
rcll
int
dec
jecxz
or
ljmp
rcrb
xchg
push
ret
pushf
rcll
xorb
mov
testl
dec
ret
xchg
jecxz
xorl
xor
mov
shr
push
pushf
mov
enter
sbb
mov
pop
lea
push
imul
popa
jo
lret
out
dec
xor
pop
ret
inc
push
push
ret
rcr
imul
add
xor
pop
cmpsb
xchg
sti
fs
fisubrs
cltd
aaa
les
ret
and
or
pusha
jl
dec
inc
outsb
cmpb
fs
dec
adc
jbe
or
push
push
inc
rcrb
cld
dec
sbb
ss
sub
adc
ds
sub
and
jns
pop
xchg
mov
push
and
movsb
jae
rcll
out
fimuls
pop
or
fildl
stos
xchg
xor
pop
mov
or
insb
js
cwtl
jno
cmpsb
jnp
inc
sbb
aam
pop
aam
aam
adc
jb
mov
enter
daa
popf
add
add
insb
rclb
ljmp
push
cmc
push
or
pop
push
lock
divb
scas
fs
or
fldt
test
mov
insb
in
pop
and
aad
shr
push
push
pop
fists
nop
xor
and
push
push
jmp
sbb
out
stc
push
in
adc
mov
mov
xchg
mul
push
cmpsl
scas
aaa
jne
into
int3
mov
imul
cmp
sub
pop
sbb
cmp
jae
loop
xchg
xchg
or
xchg
jnp
imul
outsb
data16
ja
and
adc
pop
mov
push
stos
jle
dec
inc
lods
add
inc
adc
xor
faddl
pop
outsl
mov
les
incl
add
insb
loope
in
mov
xor
cmp
push
fisubs
shll
rolb
je
imul
and
fiadds
cmp
jbe
mov
push
cmpsb
jmp
sti
sub
cmpsl
cli
call
dec
xchg
dec
lahf
cld
or
sbbb
aad
inc
fs
rcll
jns
loope
mov
test
or
pop
or
lcall
rcrl
icebp
jbe
movsb
push
testl
ret
adc
scas
cmp
mov
mov
gs
cmp
lret
and
andb
dec
out
popl
push
dec
xor
std
mov
mov
mulb
subb
cs
push
mov
scas
notb
es
shll
jecxz
mov
cld
dec
sbb
adc
stos
sbbl
or
add
icebp
or
add
rcrl
loop
jbe
je
sub
dec
or
ljmp
lods
sbb
jnp
xor
test
cmp
aad
popf
bound
rcrl
jmp
insb
xchg
inc
fimull
add
enter
test
jns
and
jbe
imul
or
repnz
gs
cwtl
dec
dec
int
mov
pop
pushfw
push
outsl
jge
and
insb
jns
and
repz
addr16
aam
ds
push
sahf
xor
mov
adc
jecxz,pn
add
jb,pn
inc
incl
ds
lock
xchg
sub
xchg
cltd
test
lahf
push
push
pop
out
leave
push
cmp
mov
sbb
mov
lahf
pop
popa
lret
jp
test
jb
inc
and
lret
mov
aam
ret
aas
mov
fisttps
inc
int3
pushf
rcll
leave
aas
mov
and
mov
pop
outsb
xor
xchg
pushf
mov
pop
mov
mov
or
cmpsb
jp
jb
fisttps
push
movsb
jecxz
daa
incb
rcr
mov
cltd
lret
sub
sbb
cwtl
and
ror
xchg
push
push
cltd
arpl
add
sbb
imul
shrb
sbb
repnz
cmpsl
dec
fmulp
cmc
xor
inc
movsb
xor
mov
add
ljmp
insl
dec
mov
mov
inc
pop
iret
enter
push
mov
sbb
cmc
or
jle
or
and
adc
outsb
mov
in
and
ja
aaa
jo
dec
ljmp
inc
mov
mov
mov
adc
cs
or
testb
fdivr
mov
loop
xchg
fwait
jno
jno
test
xchg
aam
scas
and
popf
cmpsl
ss
das
mov
fucomp
cmp
jne
in
cli
inc
mov
das
adcl
cmc
add
aam
aas
mov
out
lods
lret
bound
cld
enter
sub
jnp
mov
jae
bound
das
test
es
je
es
dec
pop
mov
imul
mov
in
rclb
mov
inc
popf
hlt
cmp
xchg
sub
mov
das
sub
cli
jecxz
ja
or
ret
imul
add
enter
sbb
stc
push
fdivp
out
and
push
jp
push
cmp
xor
xchg
sub
jge
ds
mov
pop
pushf
mov
test
jo
addr16
sti
push
xlat
mov
add
xchg
aad
adc
cmp
fmull
dec
inc
pop
push
lcall
or
sarl
arpl
fistpl
inc
mov
lods
jbe
push
xchg
aaa
shrl
push
pop
add
xchg
stc
add
add
cmp
sbb
push
mov
idivl
xor
pop
aaa
pop
outsl
cmc
in
xor
dec
add
daa
xchg
insl
addb
insl
in
mov
fisubl
push
xchg
ror
dec
shlb
jae
adc
jnp
push
mov
adcl
scas
lods
push
jge
fbld
das
stos
push
xor
dec
xor
or
rorb
in
and
outsl
outsl
outsl
dec
push
mov
add
lds
aaa
mov
fildll
addl
pop
add
or
cmpsl
and
jo
sub
cmc
ss
pop
mov
cmpsl
jp
sahf
hlt
scas
add
mov
das
sub
cmp
adc
inc
leave
inc
pop
arpl
cmp
adcb
addr16
sti
xlat
lea
cwtl
inc
pop
cs
sbb
dec
adc
addb
aaa
and
cli
xchg
push
orb
inc
fdivs
je
pand
inc
dec
jle
push
mov
mov
lret
sbb
daa
stos
sbb
mov
or
or
or
xor
cs
sub
pop
jo
ljmpw
imul
cmpsl
jbe
adc
sub
and
mov
pop
jns
lds
subb
mov
inc
xchg
sbb
adc
test
adc
mov
orl
ja
out
or
data16
in
sbb
loop
push
and
pushl
jmp
mov
push
jb
lods
xlat
sub
subb
mov
jno
xor
adc
jp
sbb
out
jno
add
xchg
mov
stc
rclb
adcb
sbb
adc
scas
inc
enter
push
xchg
and
arpl
fbstp
sub
adc
das
jno
daa
pmulhuw
ljmp
call
pop
xchg
loope
push
mov
js
ror
or
xchg
repz
dec
cmpsb
jae
fsubrl
ss
xchg
sub
stc
mov
jle
jl
jb
pop
xchg
int3
out
imul
xor
xchg
aas
jecxz
or
adc
fldenv
sub
sub
push
ds
xchg
pushf
test
shll
push
outsl
sub
subb
jecxz
push
fs
lret
shl
repz
pushf
insb
mov
inc
sub
unpcklps
pop
jae
and
sbbb
add
sarb
inc
jno
jns
mov
pop
xlat
xor
adc
mov
shll
ja
push
xor
pop
icebp
adc
push
and
and
xchg
xor
imul
test
inc
repnz
pandn
les
mov
mov
cltd
cmp
ljmp
js
ss
stc
dec
icebp
or
nop
xchg
sbb
mov
mov
push
mov
inc
inc
mov
movsb
pop
stc
mov
dec
inc
push
adc
roll
rorl
loope
fstpt
add
stc
lahf
ds
gs
mov
mov
jnp
sub
stos
test
bound
add
inc
mov
imul
mov
enter
sti
mov
dec
into
jg
sahf
fwait
push
mov
add
lds
or
sub
rcr
jns
popf
mov
inc
xor
fld
cmp
cmc
test
fstps
cld
sub
cmc
sub
jl
lea
cs
push
mov
out
les
pop
stos
testl
ja
add
xchg
mov
std
les
pop
push
add
stos
lahf
xlat
mov
pop
pop
inc
inc
jmp
cmp
mov
shlb
and
shll
inc
mov
shr
jno
ja
cmp
adc
push
and
mov
stos
popa
adc
cmp
or
xor
outsb
cmp
cli
and
xorb
js
dec
add
js
imul
out
pop
loop
push
sub
cmpsl
or
xor
push
xchg
imul
and
jl
inc
cld
cmc
inc
fiaddl
xchg
shlb
jle
xchg
loope
inc
and
push
lahf
dec
xor
inc
lock
mov
rcrb
xor
rcrl
mov
sbb
sub
xchg
fcmove
pop
xor
fwait
je
xchg
mov
sub
sti
int
or
movsbl
leave
out
lret
insl
push
popa
inc
push
popa
xor
mov
movsb
enter
mov
inc
cld
xchg
imul
pop
scas
jbe
push
js
xchg
insb
aad
test
mov
sahf
clc
addb
pop
inc
xchg
fcmovu
mov
xchg
repz
jnp
inc
pop
pop
dec
fidivs
inc
out
push
sbb
mov
je
ret
xchg
xor
dec
and
iret
cmpb
sar
das
cli
fistps
push
cmp
xchg
xchg
sbb
scas
ficompl
pop
iret
stc
push
movsl
rolb
jo
mov
loop
dec
dec
push
xchg
sub
xchg
xchg
sahf
mov
cltd
jp
sbbl
lcall
xchg
in
scas
fcmovne
push
push
xchg
nop
jl
inc
or
sbb
lds
aam
jmp
fsubrl
data16
cmp
add
xchg
icebp
imul
mov
rcr
nop
mov
call
int3
sub
push
pusha
pop
inc
ds
sub
les
jnp
rcr
pushf
iret
push
js
movsl
stc
mov
pop
mov
in
mov
sbb
or
dec
or
sti
stos
adc
outsl
mov
stos
imul
cmp
add
sbbb
xorb
cmp
mov
popa
int
push
jns
sbb
repz
test
ret
leave
mov
aaa
test
push
popf
pop
mov
pop
loop
aaa
xor
test
jp
pusha
cwtl
inc
scas
mov
xchg
sbbl
xor
fimuls
pop
mov
push
jecxz
and
push
jbe
dec
mov
lods
aaa
or
inc
mov
stc
add
xchg
and
push
aas
out
adc
lahf
mov
out
jmp
out
stc
mov
adcb
xlat
mov
je
cmp
or
les
add
lret
in
adc
adc
sbb
mov
mov
and
fiadds
inc
pop
push
mov
cld
xor
mov
sub
or
pop
push
jnp
data16
shll
fistpl
and
or
je
pop
dec
mov
arpl
daa
sub
int3
sahf
stos
dec
push
es
or
movsb
mov
jmp
lods
stos
mov
sub
push
orb
dec
and
mov
movsl
cmpsb
iret
fstpt
lea
into
adc
push
in
cmp
push
pusha
lock
mov
pop
push
mov
push
leave
dec
enter
sti
and
cmp
lods
xor
andb
jmp
test
aam
lods
insl
inc
xor
into
movb
outsl
test
mov
aaa
adc
in
cmc
xor
mov
cmp
popf
dec
stc
sub
scas
mov
mov
ud1
mov
jmp
pop
sbb
inc
call
inc
aam
test
inc
mov
mov
jmp
push
popf
imul
adc
mulb
inc
scas
push
enter
loop
cld
xchg
mov
loope
testl
lret
icebp
ss
psubsb
xchg
dec
mov
lea
push
cmp
mov
jge
cli
add
add
clc
push
ljmp
lahf
ds
mov
adc
mov
ljmp
xor
or
loope
into
push
sahf
mov
xchg
leave
mov
outsl
addr16
aad
shlb
test
inc
jl
out
inc
jmp
ds
add
es
out
aaa
dec
xchg
jne
lea
arpl
push
mov
repnz
or
push
push
push
sub
in
loopne
bound
test
mov
xchg
ficoml
mov
dec
out
and
scas
daa
adc
jo
out
jg
rcr
mov
lods
in
cltd
or
xor
out
xor
pop
ljmp
out
xchg
lea
xor
mov
adc
clc
mov
rolb
les
push
stos
pop
in
lret
pop
out
fwait
inc
out
cwtl
push
sub
out
outsl
jecxz
inc
fmuls
add
cmpsl
adc
dec
mov
jle
loopne
jp
sub
xor
mov
test
rorl
xor
push
jl
imul
mov
out
addl
add
jg
jns
inc
dec
sub
or
sbb
stc
or
pop
in
push
imul
jnp
movsb
dec
sbb
hlt
cmp
xor
daa
out
gs
sub
mov
out
js
lock
add
hlt
jmp
outsl
mov
pusha
push
out
adc
loopne
fwait
mov
mov
lock
adcl
jp
pop
addr16
decb
push
push
sbb
inc
or
push
mov
int
enter
lret
lods
aam
xchg
test
fnstcw
mov
nop
push
shl
popa
mov
lret
movsb
push
mov
xor
clc
dec
je
mov
mov
add
or
pop
fcmovnb
clc
dec
mov
leave
pop
out
inc
mov
das
xchg
orb
les
das
adc
mov
inc
jns
addb
shr
jmp
cld
mov
pop
xorb
dec
lea
sub
loop
push
bnd
mov
out
ret
dec
hlt
adc
enter
mov
adc
jnp
test
jne
xchg
fstl
mov
fnsave
xchg
test
xchg
xchg
aas
inc
popf
mov
mov
test
arpl
jmp
or
stos
cmpsl
jp
clc
fistps
sahf
sbb
scas
rcrb
aas
in
sub
hlt
sahf
adc
fsubr
or
xchg
push
adc
lock
test
mov
subl
pop
fldt
push
movsb
cwtl
popl
xor
mov
shll
and
add
xchg
call
or
loop
andl
cmp
roll
mov
rclb
cltd
lods
inc
daa
pop
sub
and
cmp
and
ds
repnz
jp
jnp
add
inc
aam
xchg
stc
or
fidivrs
sub
or
outsl
call
xor
movsl
or
cmp
or
mov
cmp
aas
add
movsl
fs
mov
pop
adc
xor
nop
add
pushf
es
pushf
stc
mov
sbb
cld
outsl
mov
xchg
jle
adc
nop
jae
adc
xor
jmp
test
push
sbb
fstpt
inc
xchg
les
imul
or
inc
sbb
cmp
hlt
adc
xchg
mov
dec
dec
outsl
popa
adc
int3
test
aam
in
push
insb
fs
test
mov
or
sbb
mov
cmp
adc
xchg
sbb
adc
fxch
les
movsl
icebp
jp
pop
call
jns
dec
jp
mov
ror
movsl
xor
add
shrl
push
out
mov
lcall
or
and
popl
mov
add
mov
push
rclb
jns
nop
into
sub
adc
dec
mov
nop
bound
sbb
sbb
popf
jo
jno
jecxz
imul
jne
jecxz
add
sbbb
pop
jbe
insl
and
adc
notb
ja
fs
mov
sbb
inc
pop
sbb
xchg
idivb
cs
mov
cltd
sbb
push
cltd
jae
subl
cmc
push
inc
clc
sub
lret
and
cmc
xchg
inc
push
inc
fldl
arpl
subb
imul
jle
insl
js
sub
and
sub
mov
pop
imull
xchg
arpl
into
push
dec
test
outsl
dec
outsb
rclb
aas
ljmp
rcll
test
cltd
mov
stc
int3
mov
add
inc
lds
js
cli
mov
mov
jmp
cmc
sub
adc
pop
xchg
fs
int3
jno
jg
ror
test
arpl
pop
pop
cmp
cmp
daa
xor
pop
je
xchg
stc
sub
shlb
sarl
clc
xor
jl
lods
jo
scas
mov
sub
push
js
enter
stc
pop
xchg
arpl
out
mov
test
in
les
icebp
push
test
jno
adc
imul
xor
out
or
jno
bound
iret
rolb
divb
or
test
lock
pop
aam
mov
or
pop
and
mov
cmc
loopne
push
shlb
mov
add
push
loop
cmpsl
mov
in
mov
decl
mov
mov
adcb
inc
mov
rolb
fldcw
pop
dec
clc
push
jb
push
mov
dec
xor
sub
push
push
lea
jmp
dec
add
cltd
adcl
pop
jo
icebp
sahf
adc
mov
jo
sub
sti
dec
scas
pop
sub
sub
mov
je
add
inc
loop
int
inc
mov
das
jo
mov
inc
das
pop
jbe
js
inc
or
add
xchg
adc
xchg
pop
imul
cmp
pop
adc
dec
inc
dec
add
xor
push
outsl
mov
cmp
jnp
lds
adc
push
xchg
pushf
mov
adc
in
pop
je
divl
fimuls
dec
in
lock
sbb
push
and
shr
out
sub
push
jg
addl
fwait
and
push
cmpsl
push
ds
jp
mov
jg
cmp
jle
mov
adc
lock
imul
xor
push
cli
jno
pushf
aaa
or
imul
xchg
loop
movl
ja
xchg
jecxz
pushf
adc
in
mov
popa
test
jg
adc
stos
gs
xlat
mov
mov
xchg
pop
cmp
and
xor
and
dec
xchg
mov
cmpsl
pop
pop
dec
fwait
int3
sti
and
pop
jo
pop
cmp
adc
jnp
roll
je
dec
loope
hlt
test
and
sbb
xor
dec
lret
dec
aas
sub
xor
jne
leave
jmp
roll
cmp
push
and
adc
loop
fcompl
and
or
xchg
jmp
adc
pop
aad
pop
mov
sarl
mov
cmpsl
cmpsl
cmp
stc
int3
cmp
adc
xor
inc
mov
insb
out
or
test
xchg
jo
mov
jp
fs
lds
movsl
sbb
push
cmp
cwtl
subb
inc
int3
jne
sbbl
addr16
pop
sbb
push
ret
xchg
dec
jo
mov
jns
test
pop
lods
dec
es
imul
neg
daa
push
enter
sbb
xor
push
mov
adcl
push
push
imull
jmp
xchg
cmp
test
sub
mov
data16
in
sub
or
idivb
popf
xchg
cwtl
shrl
mov
outsl
inc
add
int3
sahf
mov
insb
and
and
aam
cmp
outsl
test
sub
mov
mov
mov
or
icebp
pop
gs
push
jecxz
or
sbb
sbb
dec
add
in
dec
repnz
xchg
push
fnsave
fs
sbb
repnz
xor
lock
dec
jp
insb
sbb
mov
dec
jb
int3
adc
scas
call
add
cmp
scas
das
or
fcompl
sbb
sub
js
jae
jp
jno
call
adc
cld
dec
in
xchg
lea
cmp
hlt
cli
sbb
popfw
xor
mov
andb
ret
mov
adc
cld
decl
ss
lret
fdivl
aad
rcll
inc
pushf
push
sub
orb
pop
pop
inc
hlt
out
dec
cmp
sub
pop
mov
scas
rol
std
test
xchg
jecxz
xchg
mov
mov
push
rcl
cmp
add
mov
pop
outsb
cs
jnp
pop
cmpsl
push
pop
insl
mov
loope
gs
daa
filds
sub
mov
dec
arpl
lock
negb
push
sbb
mov
pop
adc
cmpsb
sbb
cmp
in
sub
dec
jl
repz
aad
popa
nop
insl
fiaddl
xchg
sub
fmulp
inc
pop
mov
loop
xchg
push
jg
les
and
inc
repnz
add
push
xchg
pop
add
int
insl
pusha
jp
out
in
hlt
and
push
push
std
jb
addb
shrl
fwait
mov
ret
repz
jnp
inc
lcall
mov
pop
inc
testb
fdivr
stos
cwtl
mov
fiaddl
shlb
movsl
mov
lods
leave
jmp
and
popa
stos
ja
in
or
shlb
jb
add
cmp
loope
dec
loopne
mov
mov
sbb
mov
lahf
jmp
mov
pop
inc
mov
cmp
mov
subb
out
push
leave
jge
dec
les
inc
pusha
jp
mov
sbb
pop
roll
adc
jge
lret
outsb
pop
push
dec
xchg
pusha
mov
call
lods
mov
xlat
jnp
mov
lds
les
mov
and
imul
fisttpl
popa
ljmp
dec
shll
sub
or
out
xchg
jbe
lock
fiaddl
xor
leave
cmp
fidivl
stos
dec
pop
lcall
in
pushf
mov
mov
push
ss
fistpl
and
adc
aam
loopne
rol
jg
leave
jo,pn
daa
sub
mov
faddl
dec
dec
adc
xchg
jnp
nop
push
sub
and
and
pop
pop
mov
ja
hlt
xchg
dec
mov
mov
pop
xchg
adc
cwtl
fiaddl
sub
dec
out
push
hlt
jo
pop
mov
or
aam
lods
test
mov
stc
aad
sub
outsl
xor
imul
and
jnp
lea
inc
out
js
hlt
out
shl
mov
sbb
mov
test
jns
loop
dec
push
or
lea
xlat
cmpsb
lret
inc
and
dec
nop
push
bound
sbb
jl
idivb
rorb
lcall
dec
stos
pop
mov
jae
subb
cmp
xor
pop
lock
xor
psrlw
fdivs
pop
mov
push
loopne
mov
xlat
xchg
lret
sbb
xor
ficoml
dec
rclb
mov
cmp
xor
cmp
or
enter
pminub
xchg
mov
inc
enter
adc
imul
fldcw
icebp
insb
mov
push
mov
mov
aaa
mov
sbb
mov
mov
dec
jmp
or
jg
xorb
jle
out
lods
das
pop
movsb
arpl
fs
cmp
fwait
xchg
testl
pop
mov
cld
adc
in
and
mov
out
dec
in
fst
andl
xor
ficoms
ja
popf
mov
dec
popa
fisubrl
nopl
out
stc
ljmp
jle
addr16
in
push
mov
outsl
sbb
pusha
roll
jne
movsb
les
iret
arpl
cmc
mov
inc
mov
and
inc
xchg
cmp
and
pop
hlt
int3
cmp
adc
fld
adc
filds
push
xlat
fistpl
lods
xlat
icebp
sti
pop
lods
adc
sub
inc
pushl
das
shrl
lods
xchg
lds
in
addr16
xor
or
out
fs
sub
xor
jb
or
lahf
xor
mov
ja
dec
and
sbb
inc
scas
ljmp
xchg
aam
push
mov
mov
aad
or
sub
daa
adc
stc
adc
fdivs
xchg
orb
xchg
ds
out
cs
fsubl
and
out
std
lret
int
sbb
or
push
cmc
adc
rorb
test
nop
lret
ljmp
and
pop
aas
sub
stc
mov
cmp
xchg
xor
lods
jbe
popf
sub
dec
add
mov
pop
dec
and
pop
addb
pop
mov
push
pop
popf
mov
cmpsl
add
cmc
xor
ret
push
negb
fnstcw
mov
out
shrb
mov
test
mov
mov
sbb
push
fildl
cli
scas
and
mov
mov
push
pop
pop
addr16
lret
pop
test
jnp
inc
cmc
push
cltd
dec
xchg
aad
xchg
inc
adc
jns
sub
xchg
fsubrl
xor
dec
lret
addr16
add
bound
arpl
push
mov
xchg
fdivl
lods
and
mov
mov
sbb
gs
addr16
dec
cmpsb
shl
lret
inc
xor
xchg
mov
adc
addr16
jnp
adc
out
test
pusha
sbb
out
pop
jnp
aaa
xchg
call
in
mov
movsl
loope
ss
add
mov
enter
out
mov
call
mov
scas
mov
rcr
test
test
ret
mov
or
js
lock
cld
fstpt
xor
fistpl
testb
sbb
dec
mov
cmp
into
aaa
cmp
sarl
fstpt
je
ret
sbb
dec
or
cmp
out
pop
and
push
jp
add
popa
rorb
dec
mov
push
imul
inc
in
adc
mov
push
jnp
mov
lds
inc
xor
add
addr16
mov
sbb
cmp
sub
rorb
shlb
cmp
out
in
int3
sbb
fstp
out
sbb
adc
orl
out
enter
xchg
dec
popf
jmp
jno
and
mov
cmp
cmp
iret
lods
rorl
xchg
lods
add
fs
sbb
and
xchg
cld
mov
js
or
sub
jle
rclb
out
rorl
enter
xlat
sbb
and
test
sub
aaa
inc
xor
fsts
out
jl
or
aam
scas
and
xchg
mov
pop
imul
enter
scas
pop
test
xchg
and
mov
jl
loopne
aas
push
fneni(8087
dec
adc
popf
pop
mov
lods
sub
aad
mov
push
rolb
cmp
les
icebp
pop
add
test
out
into
or
cmp
clc
cli
mov
fidivs
pop
fsubl
and
pop
mov
xchg
push
test
mov
notl
and
mov
loop
jmp
pop
cld
sub
xchg
or
and
xlat
fmul
pop
jne
mov
mov
sbb
int3
jnp
loopne
jg
xor
pop
sbb
pop
jg
push
mov
dec
ljmp
out
mov
push
cwtl
loopne
dec
ds
roll
lds
jecxz
mov
das
ja
xchg
jnp
jne
inc
mov
push
enter
pop
add
pop
and
inc
pop
aaa
sbb
adc
stc
pop
pop
rcrb
xchg
outsb
and
sub
je
pop
cld
popa
mov
rep
lds
test
sub
ret
push
sub
ljmp
sbb
ret
sbb
out
mov
sub
jp
mov
arpl
roll
cmp
lods
jns
xor
stos
xchg
mov
adc
mov
mov
cs
and
dec
jne
jne
int
jae
repz
lea
mov
test
jge
dec
mov
lea
xor
ret
and
popa
add
popf
sub
sbb
jle
xchg
loopne
sbb
loopne
jg
xchg
aam
jecxz
dec
lods
fnstcw
mov
cmpsb
mov
add
pop
repz
push
and
inc
bound
sub
shl
sub
loopne
fidivs
inc
popa
cmc
fwait
push
inc
mov
xorb
hlt
cs
bound
sti
jg
mov
in
xor
and
dec
adc
and
jle
and
in
loopne
in
or
mov
mov
add
push
imul
jbe
mov
jne
mov
enter
push
lods
cmpsb
lods
dec
fistpl
xchg
xchg
pop
cmp
cmp
ret
sbb
arpl
xchg
xchg
enter
rcrl
nop
inc
mov
mov
daa
cld
or
arpl
les
test
push
jo
push
fidivrs
sub
and
rcll
cwtl
inc
add
aad
sub
mov
bound
fcmovnu
or
jae
push
dec
test
ret
pop
test
sub
xor
jmp
sbb
mov
fdivs
pusha
push
xchg
bound
sub
jl
dec
jle
out
push
test
mov
mov
cld
jg
dec
mov
push
cmp
xor
je
fisttpl
push
scas
fisttpl
fildl
push
mov
inc
pop
ret
inc
sub
mov
xchg
xchg
xor
nop
sub
mov
push
xor
sbb
mov
pop
stos
fadds
fmulp
cmp
or
test
cmp
adc
imul
pop
inc
and
ds
sub
mov
roll
adc
das
lods
aam
dec
dec
inc
dec
push
push
fidivs
push
fcompl
add
cld
pop
xchg
sub
call
jns
mov
loope
gs
out
dec
jecxz
lods
cs
xchg
jnp
mov
xor
ja
jb
xchg
dec
fimull
fs
sbb
imul
aam
daa
push
outsb
jmp
movsl
mov
cwtl
loope
jl
adc
rorl
push
je
lahf
pop
scas
in
outsl
dec
push
sbb
jns
add
jge
loop
sub
cmp
mov
jns
pop
lret
test
sub
lea
sub
sbb
not
add
dec
pushf
lods
adc
and
inc
sbb
mov
sub
aas
popf
scas
out
jge
popa
jecxz
lcall
mov
sub
data16
data16
outsl
imul
out
out
aaa
lret
fxch
and
push
out
sub
ret
push
and
lods
jbe
icebp
jnp
int3
insl
fmuls
adc
mov
and
cmp
jo
push
loopne
dec
jg
fisubrs
in
lods
movsl
cmp
mov
repz
fldenv
pop
into
mov
addr16
call
add
pop
mov
xchg
mov
and
and
aaa
push
outsl
mov
lods
mov
adc
lods
ljmp
xor
xchg
adc
cmp
mov
addl
das
jge
roll
push
fidivrl
leave
out
inc
out
in
pushf
sti
jns
inc
mov
push
in
aaa
rclb
mov
sbb
jnp
movb
aas
jmp
test
xlat
aad
jl
xor
outsb
ds
sbb
movsl
cmp
into
mov
xchg
push
or
lods
mov
mov
lods
lahf
roll
subl
repz
stos
adc
add
jge
pop
rolb
lahf
lock
mov
xchg
orb
mov
jne
shr
cmp
lods
repz
cmpsb
xchg
adc
pop
cli
pop
fs
sub
mov
jl
scas
aam
mov
mov
loope
scas
int3
inc
mov
mov
popa
ss
pop
mov
add
xchg
ficompl
xor
bound
jp
in
add
incl
jne
mov
hlt
shrl
mov
xlat
push
das
add
insl
jne
nop
xorb
scas
lea
jl
into
ds
push
xchg
out
call
cmc
out
daa
sub
mov
pop
mov
ret
mov
and
mov
jmp
mov
movsl
sbb
subl
fs
fcoms
xchg
inc
dec
push
shll
cmpsb
inc
dec
add
lret
inc
adc
inc
xlat
lret
je
add
push
dec
xchg
flds
xorb
scas
push
ds
mov
jno
xlat
and
sarb
pop
jmp
aad
insb
mov
push
fnstcw
or
inc
lock
jnp
inc
pop
sub
xchg
aam
xor
sub
test
leave
mov
inc
fisttpl
pop
leave
mov
adc
pushf
xor
mov
or
lcall
aad
push
nop
retw
cmp
mov
shrl
or
fs
pusha
imul
into
push
cmc
jns
jmp
hlt
js
hlt
inc
mov
jnp
pusha
inc
sbb
sarb
jne
mov
lahf
les
fwait
loop
mov
loope
cli
xchg
adc
out
push
adcb
call
mov
gs
adc
mov
punpcklwd
jp
repz
mov
mov
clc
js
add
inc
aas
cmpsb
jl
push
cld
cmp
jle
cmp
repnz
sahf
rclb
fxch
frstor
subb
pop
sbb
lret
lahf
jmp
lret
jbe
movsl
jno
and
test
leave
hlt
lea
cmp
sub
xchg
xchg
mov
and
pop
movsl
push
dec
push
stos
sbb
lret
shll
push
negl
test
leave
dec
xor
es
sub
div
sub
push
adc
test
addr16
cld
sbb
mov
lods
loope
mov
dec
pop
sbb
ficomps
mov
enter
mov
cmp
out
xor
mov
jl
nop
ffreep
gs
int3
mov
mov
ds
ss
arpl
inc
cmp
lds
add
and
push
pop
adc
loopne
xor
stos
movsb
jge
inc
mov
cli
mov
mov
pop
pop
jecxz
push
fimull
cmp
sub
sbb
cld
or
adc
imul
pop
pop
lahf
inc
sub
mov
push
ret
jp
push
xor
cmp
mov
dec
mov
inc
bound
into
mov
loope
insb
adc
jecxz
popf
push
xor
and
fimull
inc
mov
mov
ljmp
sub
call
xor
clc
xor
jge
in
lock
cltd
pop
addr16
je
stos
jle
xchg
fwait
add
jae
sbb
lods
dec
insl
in
push
add
xchg
push
mov
mov
imulb
xchg
repz
movsl
pop
mov
jmp
xchg
notl
cmc
out
fistl
imul
mov
adc
out
xchg
sti
or
add
xchg
aas
jnp
addr16
enter
xor
cmpsb
inc
popf
cli
jno
pop
imull
jbe
and
pop
mov
cmp
bnd
das
jns
jmp
and
push
and
cmp
imul
fadds
cld
xor
popa
loop
js
shrl
hlt
test
aas
or
test
adc
sbb
xor
jo
insb
fs
jb
pop
jmp
mov
insb
stos
lds
sbb
sub
mov
sub
addr16
rcll
sbb
or
fildll
xchg
orl
add
lock
stc
rorl
mov
es
inc
cwtl
lret
in
inc
jge
rolb
sub
jp
xchg
xchg
xor
aam
mov
sbb
mov
mov
popa
or
test
inc
mov
pop
pop
pop
enter
mov
ds
xor
enter
in
or
push
sarb
fadds
ss
fucomip
cmp
push
es
xor
loope
loopne
stos
mov
or
jo
pop
call
hlt
jae
gs
in
and
call
ja
or
stc
jl
in
mov
rclb
mov
xor
jbe
sarb
in
add
inc
adc
push
ror
and
mov
fwait
xchg
scas
and
push
stc
shlb
dec
pop
adc
xorb
adc
ret
mov
jecxz
jg
fcompl
and
dec
xchg
dec
stos
jne
pop
jle
in
and
call
sarb
push
and
inc
mov
push
shlb
fistps
rorl
cmp
shll
xor
sbb
aaa
mov
shl
and
mul
stos
shlb
stc
scas
ss
mov
aam
popa
jo
jmp
dec
imul
movsl
stc
mov
arpl
outsl
pop
add
jmp
cmp
jbe
and
pop
and
or
stos
cmp
dec
xor
syscall
xor
mov
adc
sub
mov
stos
insb
call
mov
sbb
cmp
mov
fisubs
leave
jp
cld
scas
mov
out
stos
cmp
jmp
and
jb
mov
and
out
cmp
clc
rcr
mov
adc
hlt
in
add
pop
add
jno
loopne
cmpsb
jns
push
sub
fcompl
inc
mov
jge
jns
popa
rcrb
test
mov
scas
lcall
imull
fldcw
dec
push
xor
xchg
imul
fsubrs
sbbb
stos
outsl
decl
scas
aas
adc
or
mov
push
shl
jo
and
pop
stos
mov
xor
add
sub
cmp
in
sub
and
mov
sahf
sti
sbbb
push
out
shl
mov
adc
jns
es
movsl
int3
mov
ret
xchg
bound
nop
aad
jge
jmp
cmpsl
jecxz
xchg
add
int
stos
mov
mov
mov
inc
cmp
xchg
sub
arpl
mov
fdivl
fdivs
mov
fisubl
dec
pop
stos
out
out
ret
hlt
nop
mov
jl
rcll
push
movsb
jp
adc
test
lea
pusha
mov
fdiv
bound
pop
and
ja
inc
dec
push
jle
xchg
fnstcw
add
aam
xchg
jae
dec
shll
mov
push
mov
push
pop
push
adc
adc
push
inc
xchg
push
and
popa
scas
aam
jbe
cmpsl
data16
test
adc
push
loopw
adc
push
addl
ja
cld
xchg
aam
loopne
movsb
hlt
mov
push
insb
loopne
inc
mov
mov
jg
cltd
push
xchg
mov
mov
cli
sub
pop
pop
out
repz
negl
popf
aam
sbb
cmp
inc
ret
jo
push
mov
mov
adc
xor
aam
and
bound
sbb
or
decb
rcll
gs
xchg
repnz
pop
dec
mov
lods
dec
sbb
push
xchg
pop
je
outsb
jbe
dec
mov
sub
hlt
pop
sbb
aaa
nop
pop
lea
xchg
test
sub
dec
cmp
push
jp
les
pop
out
stc
dec
jae
xor
lods
push
mov
clc
imul
xor
inc
test
dec
rorb
lea
jl
sub
sub
sbb
bound
dec
cmp
leave
mov
lcall
xor
xchg
movb
and
sub
gs
ret
dec
push
mull
jne
pop
les
jecxz
pop
xor
jno
xchg
push
dec
in
test
pop
out
mov
cmp
roll
repnz
lret
xor
push
outsb
mov
mov
outsb
ret
lods
enter
movsl
gs
stc
cmp
les
cmpsl
sub
push
sbb
rolb
inc
pop
mov
shlb
paddsw
dec
call
in
mov
xor
mov
sub
es
fwait
jge
lods
or
ja
insl
xlat
scas
pop
jge
mov
lods
lahf
dec
imul
push
test
popf
cmc
add
mov
mov
pcmpeqd
jg
out
inc
into
lahf
je
and
sti
in
mov
adc
sub
add
xor
jle
mov
gs
test
je
in
jl
std
out
and
mov
mov
pop
sub
inc
push
xchg
stos
cmp
pop
iret
push
pop
mov
stc
sahf
jno
icebp
ss
outsl
xchg
imul
out
pop
mov
gs
xchg
mov
xor
xchg
mov
dec
jmp
cld
pop
cmpsl
pop
and
imul
add
shll
in
movsb
push
jg
sub
rolb
jno
pop
xor
inc
add
and
and
ds
add
mov
dec
add
add
mov
add
push
push
pop
movsl
jmp
mov
jl
lods
shlb
cli
push
cld
addr16
or
clc
roll
push
mov
or
pop
mov
jmp
int
inc
pop
xor
mov
xchg
neg
jl
xchg
out
icebp
inc
sub
sahf
outsl
icebp
jl
mov
ret
nop
or
jae
xlat
mov
aad
xor
jle
ss
mov
scas
imul
xor
fsubrl
scas
pop
or
jo
or
jae
xlat
jl
iret
dec
mov
iret
int3
dec
mov
mov
cld
dec
mov
sahf
mov
inc
xchg
subl
ffree
orb
adc
cmpsl
mov
repz
sub
sar
repz
data16
xchg
xchg
or
add
ljmp
data16
pushf
iret
setnp
cs
xchg
xchg
pop
xchg
fwait
sub
sbb
cmc
jg
movsb
xchg
mov
pushf
in
data16
shrb
popf
inc
lea
sbb
lock
add
mov
imul
xchg
idivb
sahf
sbb
movsl
mov
mov
cmp
out
cmpsb
pop
cli
dec
data16
adc
out
popf
pop
repnz
jbe
sbb
xlat
iret
mov
sahf
and
mov
nop
mov
js
lahf
cmpb
mov
out
add
in
xlat
or
mov
stos
scas
mov
jmp
test
mov
pushf
sbb
int
mov
lahf
pop
enter
int
push
cld
mov
xchg
cmp
ljmp
xchg
aaa
sbb
cmc
movsb
test
outsl
test
ss
ljmp
hlt
push
int
mov
stos
jb
in
xchg
test
cmpsl
dec
or
add
or
and
faddp
fsubrs
ljmp
push
or
add
jns
push
xlat
sbbl
and
movl
jg
popf
fiaddl
xchg
mov
and
fisttpl
push
test
push
and
fildll
dec
stos
pop
sub
idivl
cmp
inc
mov
push
ja
dec
sarb
xor
scas
fiadds
sub
ret
sub
add
sbb
cld
inc
repnz
jne
int3
int
pop
out
xchg
mov
mov
push
enter
jmp
jns
jmp
call
popf
push
mov
jg
imul
inc
xor
sarl
pop
dec
xchg
push
dec
and
mov
enter
mov
pop
in
call
cmp
cmp
loope
movsl
and
ret
out
cld
imul
std
push
adc
pop
lea
lcall
xor
or
cmpsb
xchg
xor
jbe
and
push
jmp
incb
and
pop
or
cmpsl
jbe
xchg
mov
lcall
jecxz
fs
sbb
sub
mov
jb
adc
std
jle
dec
lret
jno
xor
shlb
iret
pop
or
iret
mov
pop
popf
adcl
xor
scas
int3
and
mov
push
sarb
xor
push
dec
fcoms
lcall
test
fimuls
mov
and
repnz
rorl
dec
cmpsb
add
out
and
cli
jnp
xchg
dec
in
rcll
call
push
jbe
sbb
enter
sub
sti
push
cli
or
in
pop
aam
jge
sarl
adc
imul
jl
mov
adcl
pop
sbb
push
cmp
mov
aam
dec
jno
loope
push
inc
pcmpeqb
fs
mov
test
or
sub
movsb
ds
movsl
adc
pop
loopne
jo
cmc
test
and
xchg
cli
add
sub
stos
adc
icebp
pop
push
scas
rcl
xor
lret
mov
xchg
outsl
mov
inc
std
dec
or
jnp
add
scas
lret
fisttpl
sub
cmp
push
das
cmpb
insl
aam
cmpsb
mov
add
notl
js
mov
mov
rcl
sub
clc
inc
dec
inc
fists
xchg
mov
in
into
stos
xorb
adc
dec
ficoml
lret
mov
lret
and
mov
test
adc
fstpl
mov
mov
sbb
out
dec
sahf
int3
cmpsb
mov
clc
fadds
xchg
lods
add
enter
fistps
shlb
sub
mov
or
cmp
jo
inc
dec
rcrl
sahf
icebp
jns
mov
mov
jo
es
xchg
scas
jl
stos
add
or
push
out
adc
jbe
sbb
roll
std
psubb
mov
or
lock
dec
fsubp
dec
mov
and
aad
pop
pushf
xchg
js
lret
addb
fistpl
adc
pop
inc
or
les
add
push
dec
cmpsl
xchg
cmpsb
sbb
hlt
nop
scas
fs
lds
push
daa
arpl
mov
xor
int3
aad
fwait
std
inc
rcr
popa
andb
xchg
cmp
daa
mov
into
pop
fsubp
xchg
sub
pop
cmp
mov
insl
dec
mov
sub
je
pop
leave
gs
in
mov
lods
mov
cmp
and
push
lret
sbb
pop
sbb
cmp
aaa
call
rcl
dec
test
repz
mov
xorb
imul
pop
dec
xchg
xor
scas
jb
jns
xor
fists
nop
cmp
sbb
dec
push
dec
into
add
xchg
int
fdivs
test
popl
rorb
add
push
loop
ror
mov
arpl
jbe
pop
sub
mov
push
pop
sub
imul
adc
sbb
insl
test
jno
xchg
imul
mov
mov
inc
sub
pop
je
dec
in
xorl
push
loop
mov
test
loop
mov
mov
mov
fisttpll
mov
not
imulb
lret
je
xchg
lcall
jge
or
test
pavgb
jecxz
shr
inc
into
cmp
divps
aam
mov
divb
xor
inc
mov
xor
insb
in
mov
rolb
addr16
out
jg
out
mov
mov
addr16
pop
and
adc
xor
ret
lret
pop
fisubrl
bound
jg
mov
mov
and
adc
mov
mov
roll
sar
add
fnstcw
outsb
loopne
testl
ret
aas
pop
daa
xchg
pop
pop
js
nop
dec
jp
shl
pop
mov
ret
or
push
lods
push
rclb
inc
dec
push
int3
sbbl
cmpsl
mov
outsb
or
test
cmpb
stos
sbb
push
mov
mov
clc
iret
ss
jmp
jb
push
testb
stos
lods
rcrl
adc
xchg
push
sbb
xor
sbb
inc
je
lods
in
xchg
in
inc
adc
jg
lea
mov
or
mov
cmp
shrl
faddl
iret
mov
loope
fmuls
mov
in
mov
jae
lahf
sub
dec
jg
hlt
fwait
ja
mov
repz
mov
jno
ljmp
mov
test
sub
shl
shl
push
loopne
movsl
iret
daa
add
and
adc
xor
test
pop
les
lods
inc
xchg
ret
iret
aam
js
sub
sbb
and
or
push
jae
pop
test
and
jmp
aaa
inc
jb
fstps
xchg
jb
cmp
inc
mov
sahf
movsl
scas
dec
int
in
mov
into
xchg
dec
lea
shll
xor
jmp
punpcklwd
pushf
add
incl
test
push
loop
call
hlt
xor
sti
mov
or
mov
mov
mov
mov
cmp
pop
aaa
aaa
out
jne
mov
int3
je
lret
or
test
sbb
or
adc
xchg
lods
pop
xchg
jecxz
push
clc
and
sbb
or
in
es
jb
mov
dec
nop
adc
out
push
fsubl
pop
inc
jge
lret
in
lcall
cmp
shrd
dec
leave
rcr
loop
hlt
pop
mov
aaa
int
xchg
adc
mov
out
pusha
lds
repz
cmc
mov
cmpsl
mov
jmp
push
add
loopne
mov
filds
fmull
or
or
cld
pop
xor
jne
scas
fcomp
adc
xchg
scas
inc
lock
dec
mov
jns
jmp
mov
outsl
rol
cmp
jnp
cmp
scas
pop
lahf
pop
dec
fstpt
std
sahf
mov
push
stos
sub
pop
mov
shrb
in
ror
fildl
push
xlat
shll
mov
jb
bound
push
fmuls
out
int3
push
and
cmp
call
push
lret
sub
pop
loopne
fwait
sub
xchg
jle
xor
addr16
add
jae
inc
mov
je
je
frstor
add
adc
add
push
pop
sub
arpl
in
pop
leave
push
cmp
sbb
pop
sbb
mov
cwtl
andb
lret
push
push
pusha
popa
xor
and
out
dec
rcrl
add
sub
pop
test
inc
push
mov
js
mov
mov
pop
iret
sbb
pushf
inc
sub
outsl
in
gs
mov
cmp
jno
je
dec
popa
pop
orb
cmp
imul
xor
popf
scas
jmp
rcl
push
cmp
xchg
rcl
and
popl
inc
fsub
jbe
jmp
xchg
sahf
xor
adc
or
gs
pushf
inc
sub
call
clc
mov
xor
hlt
inc
enter
push
or
mov
jmp
sub
mov
orb
pop
fidivrl
pusha
sub
jge
ds
cmc
sarl
sbb
jge
fldl
cmpsb
sub
les
add
out
mov
outsb
add
shlb
fists
jbe
mov
sub
int
sub
lea
and
sbb
aaa
xchg
insl
repz
sbb
out
gs
cmp
adc
lret
dec
jne
xor
xchg
mov
dec
mov
aad
pop
pop
shlb
fistl
pop
mov
in
loope
xlat
fiaddl
push
or
shl
fmull
adc
cwtl
inc
mov
cmpsb
sti
xor
add
sub
ds
mov
mov
mov
outsb
fisubl
push
sbb
sub
in
rcrl
je
cmp
sub
mov
and
xchg
js
add
out
cs
dec
rorl
dec
movsl
mov
icebp
jp
xchg
mov
lods
mov
sub
push
rorb
jns
cli
fwait
xor
orb
cltd
xor
xorps
jnp
and
xchg
sbb
lods
out
and
aam
in
add
pop
mov
mov
xor
and
aam
mov
xor
lods
mov
lds
adc
lock
in
stos
cli
or
jb
xor
mov
sar
cld
leave
or
mov
push
out
xor
sub
sbb
lock
lock
mov
arpl
mov
lcall
aad
jmp
jo
mov
dec
xor
mov
mov
lock
movsb
jo
inc
ret
adc
add
in
std
push
push
rcrb
sti
ds
test
xorl
xor
xor
lds
dec
frstor
outsb
sub
pop
out
cmp
pusha
or
dec
ljmp
jmp
or
adc
lahf
popa
shl
xchg
divb
xor
xor
fadds
push
jg
test
cmp
mov
mov
orb
cmpsb
insl
ret
xchg
xchg
adc
sbb
xor
vxorpd
icebp
mov
repz
aaa
push
aaa
cmc
loope
mov
jecxz
pop
jmp
rcr
xlat
inc
adc
inc
dec
jmp
dec
add
lcall
les
sub
cmc
add
push
es
stc
push
jmp
cmc
fidivs
incb
and
pop
ret
cwtl
lahf
jle
lret
lods
aam
outsl
mov
aam
fiaddl
in
jns
jmp
mov
mulps
xchg
mov
cmp
sub
stos
mov
mov
jge
mov
jae
insb
dec
dec
ljmp
in
mov
gs
sahf
addr16
adc
hlt
roll
bound
aam
inc
push
mov
into
out
inc
sbb
push
call
jecxz
js
pop
into
mov
and
out
dec
daa
in
lcall
pop
mov
les
loopne
imul
out
jl
adc
cmpsb
imul
insl
or
mov
scas
mov
mov
std
add
mov
xor
xor
adc
mulb
fstps
xchg
xor
sahf
pop
imull
sti
pop
mov
int3
lods
mov
sbb
lea
sbb
cmp
call
sbb
or
jl
stos
mov
fs
adc
jle
movsl
push
icebp
outsl
mov
fwait
mov
loope
jo
orl
lret
inc
sub
subl
and
xchg
jmp
sub
sub
rcl
movsl
fsubrs
mov
insb
les
adc
add
scas
inc
or
jmp
adc
in
cli
mov
mov
mov
sbb
cwtl
sub
mov
mov
dec
push
dec
shr
test
pop
test
add
and
in
out
lahf
mov
mov
pop
push
icebp
pop
test
std
push
fcomi
pop
movsb
jae
fcmovnu
cmp
lock
or
or
xchg
imul
mov
test
jne
subb
ljmp
adc
mov
xcrypt-ctr
inc
cmp
pop
cmc
insl
call
xlat
ja
jnp
or
out
mov
adc
pop
pop
outsb
insl
das
pop
jbe
es
roll
mov
repnz
scas
fidivrs
xlat
jns
scas
orl
xchg
push
sbb
jne
aas
mov
pop
in
lds
lret
sub
fdivrl
sub
xchg
into
mov
or
jb
loop
mov
mov
in
push
mov
shlb
icebp
mov
mov
mov
mov
mov
xor
add
rolw
pop
lcall
fmul
or
sbb
fnstenv
mov
add
aad
test
int3
mov
push
std
mov
sbb
inc
pop
sbb
imul
ljmp
lcall
shlb
mov
sub
xchg
inc
in
ret
call
sbb
addb
xchg
xchg
cmp
pusha
loop
out
enter
push
xchg
or
stos
lret
cwtl
adc
push
inc
inc
jmp
xchg
dec
jno
fdivs
lahf
shl
lcall
inc
sbb
loope
inc
ja
mov
cltd
shlb
pop
pop
int
or
lea
inc
sbb
jo
xor
adc
cmp
jno
enter
popf
sbb
mov
or
jmp
imul
mov
add
xchg
inc
cmp
bound
and
sbb
subl
into
shll
and
adcl
popa
inc
add
jb
and
xor
adc
fucomi
xchg
xor
daa
jb
ds
mov
and
adc
ds
loop
out
jo
pop
cmp
cld
fildll
sub
roll
jb
shl
les
fcmove
lock
leave
sarb
insb
adc
les
and
call
out
mov
shrl
sarl
xlat
jmp
mov
sbb
lahf
out
popl
add
sbb
push
and
jle
sbb
mov
or
xchg
aad
xchg
gs
out
out
mov
dec
add
outsl
fistpl
cmpsb
mov
repz
xchg
push
aas
pop
inc
shlb
dec
jle
mov
sub
and
sub
mov
mov
push
mov
jle
add
and
addps
push
dec
inc
jb
ret
mov
movsl
ficompl
xchg
push
jmp
adc
fcoml
test
leave
into
icebp
push
outsl
inc
mov
out
and
hlt
adcl
fcomip
sti
shll
scas
mov
xchg
flds
jno
cmc
mov
adc
out
xchg
jge,pn
inc
mov
dec
fdivl
pop
dec
sub
data16
and
pop
pop
mov
push
ficomps
mov
mov
mov
cmpsl
les
or
repnz
shrl
addb
jge
les
adc
push
nop
push
in
mov
jge
movsl
std
dec
jne
push
fidivrl
add
and
or
das
and
gs
adc
mov
dec
sub
dec
sbb
fwait
mov
and
sbb
mov
fimuls
inc
push
pop
push
sbb
adcb
lods
lret
fistpl
mov
sub
insl
sub
lds
repnz
dec
out
andl
lret
xchg
idiv
ds
adc
sbb
int
repz
stos
xor
xchg
in
dec
xchg
mov
adc
adc
pop
inc
fstpt
gs
dec
ror
gs
pop
test
xor
add
aam
or
mov
push
int
loopne
sbb
push
cmc
mov
cmp
popf
ror
xchg
out
aam
pop
je
lcall
jmp
xor
in
iret
pop
xchg
insb
dec
out
pushf
pop
shlb
in
sbb
gs
sbb
and
mov
dec
pop
inc
out
out
clc
shl
xor
cmpsb
fsubrl
mov
xor
jbe
test
clc
add
push
push
dec
movsl
cmp
pop
mov
pop
movsb
cwtl
mov
repz
xchg
int3
mov
testb
mov
test
cs
dec
repnz
fstl
into
xor
pop
lods
loopne
mov
dec
subl
dec
ret
mov
inc
ss
push
add
sbb
xchg
ret
std
mov
inc
jae
fnstcw
jge
mov
pop
mov
jg
push
mov
fiadds
dec
in
jmp
jecxz
push
dec
cld
mov
inc
popa
and
push
lret
jno
cmp
mov
icebp
shll
dec
out
cltd
inc
mov
inc
sbb
lret
cli
xor
pop
or
cltd
int
aas
sbb
jb
lcall
xor
lret
lcall
push
push
movsl
test
jg
cmp
jecxz
rcr
cmp
fisttpll
ret
push
sarb
gs
int3
jo
rcl
xor
inc
mov
dec
stos
jns
cld
jnp
xor
lea
shll
mov
xchg
add
and
push
jo
push
fsubrl
bound
lcall
test
pop
nop
rorl
jg
out
lds
rcrb
cmp
inc
push
les
sub
outsb
ret
pop
or
or
add
cmp
js
or
test
lea
xchg
test
imul
adc
dec
test
xor
test
adc
cmp
jnp
or
lret
jmp
xchg
inc
lcall
push
mov
sahf
out
cs
out
inc
adcb
dec
xchg
jne
dec
adc
sub
dec
test
pop
add
fs
xlat
call
sbbb
bound
enter
jo
jnp
mov
lahf
popa
jns
inc
bound
lods
adc
sahf
adc
dec
xorb
xor
icebp
mov
sub
cmpsb
lods
movsl
mov
cmp
cmp
or
xchg
pop
ss
dec
add
cmp
mov
test
inc
mov
pop
pop
je
out
sub
mov
aaa
inc
mov
scas
push
add
pop
fwait
push
daa
mov
repnz
or
sbb
jle
xchg
mov
dec
ja
push
xlat
loope
sbb
arpl
fdiv
cwtl
in
sub
fistl
cli
daa
cmp
mov
pop
mov
dec
fwait
pop
mov
clc
xor
repnz
out
lahf
ljmp
pop
outsb
ficomps
sahf
jne
cmp
repnz
inc
cld
jmp
insb
inc
pop
or
sbb
lret
jno
sbb
jecxz
jb
lret
add
mov
mov
int
jge
mov
add
sub
popa
in
xchg
leave
iret
scas
pop
into
mov
xchg
pop
add
mov
jb
add
ds
sbb
xchg
imul
adc
adc
lahf
pusha
inc
push
push
ss
push
cmp
pop
idivl
xorb
add
push
adc
outsb
jg
adc
sub
xchg
cmp
add
in
push
imull
leave
mov
jo
sahf
add
mov
mov
das
mov
sub
xchg
ds
int
scas
lcall
rcrb
pop
test
imul
lret
enter
repnz
mov
xchg
aam
fisubs
add
xor
popf
scas
sbb
ret
jge
inc
out
and
push
dec
movsl
cltd
or
movsl
mov
and
push
cmpsb
clc
cli
loope
fbld
imul
insl
xchg
popf
stc
jmp
pop
sarl
lahf
xchg
loopne
or
jo
jae
push
mov
repz
fistpl
push
dec
js
fnsave
pop
mov
push
xorl
leave
xchg
mov
xchg
cwtl
pusha
pushf
pop
mov
in
pop
sub
jbe
push
fstpt
pop
iret
test
test
das
sbbl
mov
inc
jge
pop
popf
imul
cmp
xlat
xor
mov
nop
lods
mov
push
pop
push
xor
loopne
xchg
pop
fists
sbb
imull
mov
jl
cmp
xor
jg
mov
shlb
cmc
sub
push
insl
gs
ds
aam
stc
sub
shll
xchg
pop
dec
xchg
stos
jns
pusha
mov
scas
dec
mov
jge
dec
xchg
mov
ret
and
adcb
mov
repz
out
mov
pusha
bsf
aaa
sub
adc
or
mov
adc
shrb
adc
xchg
lahf
sub
repz
inc
push
stc
out
jne
xchg
xlat
cmp
add
into
mov
mov
xor
xor
xchg
mov
shrl
sub
aas
pop
ljmp
dec
test
test
lea
xchg
negb
sbb
mov
repnz
aaa
scas
hlt
inc
out
push
icebp
mov
es
pop
cmp
add
xchg
in
xchg
popa
pusha
ss
mov
push
jae
inc
aam
rcll
enter
js
jb
call
mov
in
fcmovbe
pop
xchg
pop
int
push
int3
outsb
repnz
mov
inc
ret
aad
push
sarl
xor
stc
movsl
push
or
sub
add
fwait
xor
dec
and
daa
fyl2xp1
inc
pop
ljmp
std
push
lret
es
in
sub
xor
mov
mov
or
lahf
out
jge
subb
pusha
adc
fwait
jl
xchg
out
mov
lea
aam
jecxz
fisubrs
faddl
sbb
push
loop
and
rcrb
sub
cmpsb
sub
repnz
jmp
in
cld
pop
fiadds
jb
dec
pop
cmp
sahf
insl
mov
mov
sbb
push
jno
pop
jl
push
jp
jnp
mov
dec
scas
sub
fdivrl
scas
sahf
xchg
arpl
add
ljmp
les
sbb
pop
mov
pop
aad
scas
xchg
xor
xor
cmc
add
mov
cwtd
ret
lcall
add
out
ss
push
xor
and
in
push
cld
sub
dec
jns
bound
aas
int3
mov
mov
int3
lret
scas
pop
add
xor
ret
or
js
fs
jmp
mov
inc
or
mov
mov
mov
mov
cli
out
mov
jno
pushf
scas
mov
inc
mov
push
sub
add
mov
mov
push
pop
pop
adc
push
ljmp
or
mov
mov
pop
mov
sub
mov
fld
mov
lea
push
cmpsb
xlat
push
adc
nopl
setl
adc
adc
mov
fistpl
mov
jb
dec
out
in
addb
mov
mov
mov
shr
jmp
lods
in
test
cli
pop
adc
push
mov
inc
sti
mov
mov
stos
xchg
inc
lock
test
repnz
sbb
push
dec
mov
fnsave
or
pushl
mov
sbb
sub
and
lods
mov
movsb
cmpsb
ja
jl
sbb
mov
lds
or
gs
lea
sub
fwait
adc
outsl
jbe
cwtl
add
in
enter
push
in
and
mov
arpl
push
jae
cmp
sahf
movsl
adc
mov
jge
jp
adc
int3
fs
test
push
jge
stos
loop
jmp
sub
cmp
add
jb
jecxz
bound
ror
push
dec
dec
cmp
adc
xchg
lret
jnp
sbb
sub
fldl
or
int
movsl
loop
jp
std
mov
repz
xor
loopne
sarl
cmp
sahf
sar
aaa
icebp
outsb
lahf
clc
fwait
iret
pop
xor
push
movsb
sub
dec
inc
gs
jb
fisttps
sbb
dec
add
mov
pop
inc
dec
gs
jge
mov
adc
cmp
scas
and
fbstp
mov
das
fsubrs
jnp
mov
mov
lods
cmp
mov
mov
mov
xor
xor
repnz
inc
ficoml
cwtl
pop
pop
in
psubusw
idivb
es
mov
sar
xor
jl
fisttpll
ret
jo
jmp
dec
je
dec
sub
add
lods
jnp
push
push
repz
je
lods
lret
call
push
clc
mov
cli
test
enter
adc
mov
or
test
cmp
addb
pop
pushf
xorb
idivb
std
add
xchg
repnz
jmp
fisubrl
lea
dec
push
leave
cwtl
xchg
inc
jae
test
mov
icebp
xor
pop
sub
ret
xor
xchg
xor
push
xor
cld
mov
cmp
mov
inc
popa
cmpsb
jnp
insb
sub
lea
iret
jl
push
sub
add
xor
jmp
mov
aam
jb
and
xchg
dec
add
nop
ret
pushf
rcr
xchg
andb
out
cmp
fldenv
xor
rclb
push
rcll
enter
negb
addr16
ljmp
ret
xchg
imul
push
pusha
loope
mov
into
das
inc
sub
push
inc
adc
nop
mov
arpl
lret
xchg
mov
xor
popf
or
mov
jo
scas
fistps
mov
repz
iret
fstl
das
dec
mov
ja
rol
mov
mov
js,pn
ss
mov
test
dec
adc
and
pop
orl
push
pushf
adc
pusha
jle
xor
dec
xlat
outsl
sub
pop
pop
xchg
inc
pop
mov
sbb
in
fisttps
xorb
cld
xchg
out
aad
roll
fsubrl
rolb
sbb
inc
jl
jp
pop
jl
jle
xlat
loope
jp
shlb
lahf
dec
pop
popf
mov
sub
or
leave
imul
sub
sbb
adc
xchg
addb
sbb
cmpsb
mov
cmp
int
call
test
data16
mov
rcl
test
xor
outsb
push
push
xchg
jge
mov
jge
movsb
in
negl
sbb
cmp
mov
addr16
imul
hlt
in
cmp
cld
push
lods
sbb
pushf
adc
xchg
pop
jae
adc
sub
loope
loope
outsb
xchg
jbe
dec
psubd
add
push
test
jae
jae
cmp
dec
sub
pslld
scas
adc
sbb
aam
cmpsl
test
arpl
scas
jmp
lcall
aad
outsb
jle
out
fistpl
ds
rcll
push
jne
shl
cmpsb
sub
mov
in
jno
rclb
adc
stos
dec
scas
shrb
je
int3
fildl
cltd
pop
pop
cmpsl
gs
std
shrb
jbe
pop
fld
jmp
iret
inc
les
sti
dec
ds
sbb
shlb
jnp
js
jmp
dec
pop
fisttps
adc
aaa
cmpsl
pushf
ret
ficompl
or
push
negb
mov
sub
jl
imul
xchg
xchg
pop
add
loopne
fsubrs
testl
out
dec
and
dec
xorl
notl
jo
inc
aad
mov
mov
nop
pop
test
inc
pop
bound
shlb
out
lcall
sub
xchg
rcrl
pop
ficoms
icebp
stc
aad
xorb
rolb
xor
aas
add
cld
stos
dec
jl
outsb
pop
xchg
jne
pop
mov
xlat
or
test
push
outsl
cli
ja
movsl
inc
cmpsl
push
scas
hlt
sbb
cmp
sbb
adc
pushf
add
add
inc
push
daa
fildl
jmp
xchg
push
movsl
xchg
test
fimuls
daa
cmpl
push
adc
fnstenv
push
and
jo
popf
push
pop
jno
xchg
jecxz
add
sti
pop
cmpsl
ljmp
insl
rclb
jbe
pusha
test
fcmovnb
ja
sub
insb
cmp
add
sti
lods
push
pop
test
xor
inc
shlb
mov
jl
jge
nop
lret
daa
adc
aam
bound
xor
loop
fsubs
hlt
add
clc
and
jge
aam
pop
cmp
inc
fisttpll
cwtl
cmp
insb
mov
ret
add
cs
sbbb
lods
fnstsw
aad
loopne
jae
and
push
sti
lock
clc
cmp
mov
and
jp
mov
fsts
jl
repnz
insl
adc
lret
cmpb
xchg
fstpt
jge
and
xor
push
mov
dec
mov
call
clc
mov
stos
jo
sub
repz
lock
std
cmp
cmpl
sahf
je
loope
pushf
push
ja
loop
push
inc
cmp
dec
iret
out
and
lds
arpl
push
shlb
fildll
lret
mov
adc
insb
pop
jne
inc
dec
xor
jnp
sub
insl
fdecstp
cmp
daa
pop
mov
push
in
mov
insb
mov
out
adc
rcrb
aaa
jmp
xchg
mov
clc
sub
pop
push
sbbl
sub
outsb
jmp
push
jae
cld
clc
push
xor
jnp
mov
lock
fsub
addr16
std
fstpl
sahf
jp
push
mov
or
cld
cmp
cwtl
dec
sarl
jnp
mov
pop
mov
xchg
dec
inc
or
popa
out
mov
push
lret
out
dec
sbb
aas
mov
sbbl
mov
aaa
mov
mov
icebp
xor
scas
inc
repnz
neg
inc
dec
dec
enter
pusha
lahf
loop
xchg
pop
xchg
pushf
xor
xor
daa
lret
cmc
fucom
cmp
cmp
pop
xchg
cmpsb
lea
dec
cmp
or
inc
mov
xor
rorl
cmp
pop
add
push
aas
add
mov
sbb
out
pop
cmp
hlt
pop
cmp
insb
ror
pop
or
pop
adc
pop
clc
jae
sbb
xchg
jmp
xorl
push
push
ja
adc
mov
add
add
add
outsb
iret
mov
jle
outsl
pop
adc
int
pop
inc
repnz
rclb
mov
sahf
and
fs
inc
xor
cmovne
pop
xor
jecxz
sub
pop
cwtl
mov
faddl
lods
icebp
mov
insb
jns
dec
mov
pop
fs
push
fisubs
push
out
dec
in
sarl
addr16
sbb
mov
js
and
xchg
in
and
adc
ja
adc
scas
iret
push
mov
shrl
sub
mov
jae
fisttpl
mov
mov
push
mov
jmp
mov
dec
rorl
inc
dec
loope
iret
arpl
xor
mov
cltd
dec
inc
out
loope
outsl
mov
cltd
sbbl
and
push
in
repz
dec
cmc
pop
inc
mov
stc
jns
mov
out
adc
or
movsb
xchg
pop
jae
inc
test
iret
and
seta
int3
sub
jbe
mov
xchg
out
xchg
mov
insl
push
sub
push
adc
mov
cmpb
mov
and
stos
aas
je
jg
jge
icebp
pop
in
sub
and
mov
faddl
mov
cld
push
in
fwait
test
jo
div
sub
xor
jb
sbb
jbe
xchg
jae
loop
mov
inc
xchg
addr16
das
mov
outsl
test
adc
add
repnz
add
lret
lods
jnp
sbb
test
loopne
sub
fildl
xlat
test
mov
jns
or
psllw
fwait
rolb
mov
js
add
daa
pop
daa
cmc
mov
rorb
imul
addr16
loopne
sub
mov
xlat
mov
cmp
mov
pusha
mov
outsb
mov
lods
cmpsb
fimull
mov
sbb
outsb
mulb
cmpsb
scas
jg
mov
jecxz
cmpsb
adc
inc
js
jno
mov
mov
mov
subb
out
push
sub
popf
inc
mov
inc
cmpsl
add
mov
lret
dec
jmp
or
cmp
jnp
popf
jb
sti
mov
out
sbb
pop
bound
sub
xor
mov
jle
aas
cmp
jg
and
int3
imul
fs
daa
pop
jbe
mov
sysexit
mov
or
push
mov
or
dec
in
cli
xchg
cltd
out
mov
and
movl
cld
std
and
fidivrl
mov
bound
and
cwtl
cmp
lods
pop
add
jae
jns
adc
outsl
daa
jge
and
cmp
and
fidivs
rol
adc
sbb
movsb
outsl
inc
aad
adc
push
scas
sbb
lods
loopne
mov
xchg
xchg
jg
push
mov
enter
daa
adc
push
bound
inc
hlt
test
je
orl
arpl
jo
lcall
mov
leave
popf
cmp
movsl
aam
out
cmpsl
fsubl
mov
aam
inc
jns
pop
out
incb
stc
jp
int
test
push
xor
scas
aaa
mov
xor
dec
add
adcl
sbb
pop
sbb
lret
push
addl
cmp
aas
mov
sbb
sti
fistpll
sbb
cmp
out
xor
sbb
imul
orl
mov
pop
jge
pushf
movsb
fistps
push
dec
lahf
in
cmp
adc
popf
jae
enter
xchg
add
enter
adc
js
xchg
int
fstpt
adc
adc
push
sbb
pop
add
into
int3
push
clc
data16
jl
dec
mov
add
cli
roll
push
cmp
and
mov
xchg
sub
pop
jle
scas
int3
sbb
scas
and
inc
ret
jmp
dec
mov
add
loopne
sbb
jae
adc
aas
test
adc
cmpsl
inc
out
xchg
xchg
pop
rclb
lret
icebp
int
scas
je
jnp
mov
les
aaa
adc
add
cmp
int
call
fs
mov
stos
repz
sbb
fistps
and
jge
push
mov
sub
out
test
sub
insb
test
cmpsl
push
iret
add
push
jo
icebp
loop
mov
push
dec
xlat
mov
lods
ss
push
pop
and
out
inc
mov
ret
loope
or
mov
add
xchg
inc
add
gs
js
pop
jno
ret
lret
jno
xchg
aas
movsb
adc
mov
mov
std
fdivrl
subl
int3
ficompl
mov
into
or
jg
sbb
addr16
and
push
jnp
sbb
dec
fsubrp
mov
out
addr16
jns
sbb
jle
out
cli
addr16
mov
lods
jnp
inc
sub
lcall
pop
add
dec
jb
fisubs
push
pop
add
ret
icebp
scas
mov
int3
xchg
mov
inc
sbb
inc
je
mov
xchg
lods
lahf
js
push
or
repz
aaa
arpl
mov
ret
mov
js
ds
sub
inc
call
xchg
xchg
pop
je
fwait
insb
mov
scas
pushf
cmp
aam
xor
xchg
pop
ja
aad
mov
lods
mov
sbb
jp
cli
mov
in
jbe
add
outsb
test
or
fstp
jo
and
jge
mov
and
mov
cmpsl
mov
pop
leave
and
fnstsw
cmp
jp
cld
push
jp
jle
shr
sbb
cmpb
int3
dec
mov
sub
push
fdivrl
xor
out
dec
sarl
stc
cmp
dec
fisubs
out
xchg
or
fidivs
inc
popf
out
sti
mov
movl
sbb
xchg
aas
cld
xchg
ror
icebp
fstpt
shufps
cmc
mov
push
out
and
out
push
out
mov
cld
jmp
sub
and
fimull
shrl
shl
clc
stos
mov
pop
ficoms
pop
daa
call
mov
lret
in
mov
loope
and
pop
mov
pop
fisubrs
sbb
fsubrl
std
cmpsb
push
mov
mov
mov
sub
test
loop
imul
pop
fidivl
dec
or
jb
sahf
or
jmp
xchg
mov
jae
pop
mov
add
cmp
ja
xor
sbb
jb
add
outsb
add
ljmp
inc
out
push
cld
leave
mov
das
jns
and
push
push
add
cwtl
jae
push
jb
faddl
out
scas
xorb
jg
lods
mov
sub
fidivl
lret
push
test
push
inc
aam
add
fcomi
cmp
out
mov
cmp
add
lcall
insb
jp
shrl
fdivs
xchg
enter
int3
mov
repnz
int3
add
negb
inc
mov
in
xchg
mov
stos
scas
insl
xchg
out
rorl
test
and
les
roll
xchg
mov
rcr
dec
mov
xchg
outsl
or
mov
mov
jbe
push
cmpsb
mov
sub
ret
cld
sbb
push
push
movsl
mov
xlat
jno
cmc
data16
xor
push
dec
add
imul
mov
pop
int3
sahf
insb
pop
jecxz
inc
rorl
inc
jo
mov
hlt
mov
jb
jbe
jmp
into
clc
jns
inc
movsl
fcomps
mov
cmpsl
push
insl
xchg
outsl
out
sbb
stos
das
jo
je
cmp
fidivrl
sbb
btr
jns
sbb
dec
addr16
cwtl
pop
pop
mov
push
or
xchg
cli
inc
sub
addl
andb
scas
mov
je
jle
lcall
fcomip
fdiv
nop
les
ja
test
cli
push
sahf
add
sahf
mov
xchg
mov
cli
xchg
test
stos
pop
xor
inc
vhaddpd
es
mov
cmp
xchg
fnstsw
mov
dec
fidivrl
lock
repnz
cmpsb
loope
testl
pop
push
jne
stc
stc
xchg
loope
lods
push
adcb
mov
lock
inc
jle
jo
js
and
pop
dec
dec
loopne
xchg
xlat
repnz
sbb
mov
test
jb
add
pop
xor
out
daa
call
cmp
stos
pushf
pop
xorb
ret
scas
out
aaa
cmpsl
mov
into
xchg
sub
sub
insb
lock
dec
cli
sbb
fcomp
loope
jno
dec
or
xchg
xchg
jb
jg
ret
pop
in
pop
fs
pop
add
xor
je
xchg
divb
inc
lahf
fidivl
push
fstpt
mov
stc
sbb
mov
outsl
scas
leave
mov
jecxz
addl
imul
mov
sub
and
jmp
adc
mov
shll
pushf
ja
movsb
cmp
or
ljmp
pop
lea
push
jno
inc
test
ret
and
stos
xor
stos
cmp
jo
enter
adc
nop
scas
fists
cmp
jb
ja
cmpsb
lret
mov
mov
and
mov
rcl
mov
push
push
aam
xchg
movsl
or
dec
xor
popf
icebp
fwait
add
out
sbb
pop
push
fistpll
mov
fldcw
pushf
cmpsb
cmp
in
pushf
adcl
into
push
add
daa
stos
jo
outsl
cmp
push
push
sbb
push
cwtl
mov
popf
lods
pop
arpl
std
mov
xor
aad
clc
lcall
rorl
repnz
sub
call
sti
push
add
mov
push
pop
jns
loope
inc
push
xor
test
fiadds
icebp
mov
into
jge
pop
mov
sarb
cwtl
mov
stos
repz
out
cwtl
and
and
into
fistpl
sti
lods
mov
cwtl
mov
fsubs
mov
cmova
xor
jle
test
cld
mov
cltd
cmpsl
loop
cmp
push
jns
or
and
xchg
pop
lret
clc
les
outsb
mov
pushf
test
or
or
mov
js
push
mov
sbb
and
mov
jecxz
dec
xchg
icebp
aaa
inc
xchg
lahf
cmp
iret
sbb
mov
push
mov
arpl
pop
mov
or
scas
mov
les
iret
sbb
cli
jecxz
push
jg
in
jbe
movsl
lock
pop
push
inc
icebp
dec
lds
jg
loopne
xchg
lret
call
add
andl
clc
or
jl
jmp
outsb
aam
sub
insl
mov
inc
incb
and
pop
xchg
int3
test
pop
jo
inc
jl
inc
mov
loop
aas
add
adc
dec
shll
lret
scas
adc
test
pop
sarl
loop
test
mov
add
movl
ss
clc
shrl
ljmp
mov
xor
dec
cmpsl
popf
inc
pushf
pop
sbb
fst
movsl
fsubp
popf
ret
mov
mov
inc
loopne
and
and
insl
cmp
jbe
jecxz
dec
in
scas
imul
in
and
aam
pop
movsb
mov
xchg
sbb
push
scas
lret
inc
fildll
sbb
inc
jp
fadds
cmp
cmpsl
xorl
jns
adc
mov
test
sbb
dec
and
je
push
push
testb
pop
xchg
stos
adc
ss
imul
mov
and
jae
add
icebp
repz
daa
push
dec
jb
jle
int
sub
dec
mov
test
xchg
pop
pop
mov
ret
or
fwait
mov
mov
add
pop
clc
fwait
scas
andb
add
pushf
test
jge
dec
and
sub
imul
dec
mov
inc
mov
imul
mov
jg
shrb
push
jns
lock
je
mov
dec
mov
jb
pop
push
dec
repz
jmp
mov
out
fstpl
lcall
push
lods
aam
mov
test
in
jmp
adc
sub
or
stc
pop
mov
or
xor
iret
xor
clc
ret
lret
out
push
js,pt
data16
out
mov
sub
push
pop
pop
cltd
or
pop
sahf
int
scas
arpl
adc
pop
mov
sub
mov
lret
jg
cmp
stos
out
fstpl
adc
adc
xchg
repz
dec
imull
data16
in
outsl
call
mov
cwtl
fs
fwait
mov
push
mov
adc
and
aaa
mov
or
adc
xor
test
push
inc
ljmp
pop
in
pop
cmp
add
ret
int3
jo
and
dec
jb
pop
dec
mov
jno
loopne
imul
pop
rclb
push
xchg
mov
jnp
pop
loope
xor
test
test
sbb
cltd
scas
out
mov
imul
pusha
fdivrl
pop
xchg
in
sub
stos
dec
adc
shlb
scas
mulb
into
add
iret
cli
mov
rep
pop
dec
pop
jb
pop
mov
rolb
xchg
in
jne
js
mov
mov
sub
cmpsb
mov
movsb
mov
adc
out
xlat
mov
sbb
pushf
mov
dec
imul
add
aas
inc
clc
or
or
dec
std
sub
xor
aaa
imul
push
or
sti
or
push
add
mov
dec
sahf
add
cmc
movsl
or
testl
mov
sbb
add
mov
icebp
pop
int
js
bound
pop
push
test
pop
shlb
call
scas
mov
dec
mov
push
and
sub
scas
push
out
aam
ljmp
mov
push
nop
xor
int
push
sub
stos
lods
test
and
mov
fldl
repz
js
sbb
sbb
in
insl
xor
mov
jg
inc
clc
lock
cs
sub
fcomp
imul
in
or
nop
mov
or
bnd
mov
xchg
scas
dec
hlt
xchg
pop
dec
mov
lret
and
adc
and
icebp
in
xchg
mov
and
or
xor
pusha
jne
lods
cmp
test
cmpl
cld
mov
jae
cld
clc
pop
jns
mov
pop
dec
loop
push
sub
daa
inc
loop
jo
fstpl
mov
mov
sahf
out
mov
push
inc
loope
mov
into
mov
pop
jnp
cmp
dec
repnz
lret
mov
pop
mov
pop
sbb
ja
nop
cmp
arpl
sbb
dec
cmp
xchg
dec
mov
shrl
push
lods
lea
add
cmp
ds
push
jecxz
leave
inc
pusha
popa
loope
dec
aas
mov
add
lds
jns
and
addr16
adc
mov
pop
stc
mov
rcrb
daa
xchg
movsl
loope
mov
ss
cmpb
test
inc
jmp
cmpsl
scas
inc
mov
cwtl
lcall
les
sti
and
lods
jge
repz
push
mov
jno
test
dec
insb
mov
adcl
lds
mov
mov
jle
cld
arpl
jg
inc
sarl
adc
outsb
cltd
mov
pop
out
pop
xlat
push
lcall
cld
andb
idivb
sub
push
sti
leave
jle
iret
jno
mov
aas
jo
cmpsb
cmp
mov
mov
les
adc
or
push
mov
lret
in
mov
hlt
sti
xchg
je
daa
push
add
push
das
ja
stos
std
es
mov
lret
aad
dec
loope
lock
cltd
cmp
aam
lds
cwtl
fsubl
rclb
and
int3
int
es
popa
test
cmpsb
aas
lock
inc
movsb
insb
clc
je
jmp
leave
mov
pop
cmp
inc
add
in
shlb
mov
ds
scas
sbb
test
push
aas
mov
or
fwait
add
jne
xor
pusha
xchg
ja
imul
jnp
xlat
subl
dec
mov
adc
out
mov
dec
bound
sbb
gs
mov
inc
mov
sbb
push
je
pop
dec
xchg
lods
mov
jnp
test
adc
and
repz
data16
out
push
xchg
fildl
pushf
sub
cmp
xchg
andb
cmp
iret
movsb
shll
mov
or
lcall
mov
push
loopne
aam
jae
imul
xchg
cmpsl
mov
push
xor
jmp
int3
push
mull
inc
ljmp
sahf
mov
sar
sbb
or
in
ljmp
push
les
sti
in
testb
sti
loopne
or
xchg
inc
std
aam
pop
ss
fistpl
push
loopne
inc
or
sbb
xchg
sbb
fdivs
xchg
inc
sub
into
test
hlt
xor
mov
mov
adc
adc
push
hlt
or
xor
push
pop
outsb
xchg
cmp
jmp
or
das
repnz
lods
les
sub
adc
xchg
mov
stos
cltd
xor
and
sub
mov
call
sti
loope
call
mov
nop
test
mov
mov
jecxz
cli
or
dec
sbb
dec
pushf
dec
dec
int3
scas
dec
clc
test
cwtl
jo
dec
xchg
cmp
dec
lcall
outsl
mov
jmp
cmpsl
add
pop
add
aad
into
scas
test
fcomps
imulb
sub
and
sbb
mov
xlat
rclb
inc
enter
mov
adc
push
lret
add
hlt
cmc
mov
in
sbb
into
in
rorl
inc
bound
jecxz
sbb
ljmp
sbb
mov
mov
mov
enter
adc
push
pop
outsl
sbb
test
mov
xchg
sbb
aam
adc
test
xchg
sbb
shlb
cmc
into
in
dec
pop
aad
inc
insb
loop
ret
inc
pop
jno
jge
nop
pop
mov
jl
lds
mov
hlt
cmc
out
imul
or
idivl
xchg
add
sub
pop
fisubs
xchg
ja
sub
rcrb
fwait
mov
add
or
lahf
fpatan
adc
mov
mov
or
sub
daa
push
sahf
mov
adc
fldl
mov
loopne
or
adc
jne
daa
mov
jg
aas
and
inc
and
shlb
dec
outsl
mov
mov
in
cmp
out
lret
or
iret
xor
call
negb
shlb
aas
ret
call
aaa
cs
xchg
or
pushf
mov
loopne
lods
mov
sub
mov
fcom
ret
xchg
addl
std
mov
pop
mov
lock
or
add
fsub
sub
stos
mov
pop
movsb
jne
adc
mov
pop
in
cmpsl
bound
rep
push
inc
xchg
fs
xchg
push
lret
dec
andl
push
fdiv
lret
js
out
outsl
ja
xor
movb
cltd
rcr
insb
enter
sbb
js
into
xor
add
xor
xor
int
mov
and
cmp
xchg
xchg
iret
mov
out
xor
fiadds
test
jp
jecxz
cmp
jp
xor
mov
les
xchg
add
jmp
popa
scas
rolb
aaa
loopne
movsb
pop
leave
movsb
out
push
sub
cld
dec
in
pushf
add
xchg
cmp
mov
lods
lods
cmpsb
pop
sahf
adc
lea
push
outsb
test
inc
pusha
mov
cmp
ficoms
insl
pop
fcmovnbe
fcomp
and
test
pop
xor
ja
cli
xlat
mov
loop
adc
lcall
push
jmp
inc
test
and
fwait
insl
and
and
imul
jmp
push
aad
jecxz
mov
mov
dec
popf
adc
or
sub
addr16
fcompl
lcall
pop
cs
ficoml
into
out
or
xchg
pop
test
imul
xor
pop
enter
gs
scas
sbb
je
add
out
outsb
add
xchg
push
xchg
dec
je
arpl
rcll
jecxz
pusha
roll
imull
lret
mov
loopne
and
cmpsl
roll
dec
lock
loop
arpl
mov
mov
mov
mov
aas
xchg
push
fisubrl
mov
fildll
jns
xchg
sbb
sub
sub
popf
js
fistpl
pop
out
lds
insb
out
pop
jg
shl
pop
gs
ret
js
fsubrp
mov
push
jns
pushf
inc
icebp
jbe
icebp
pop
bt
jp
sub
fstps
cmp
js
jmp
adc
imul
or
or
out
sub
dec
outsb
xchg
sub
call
test
hlt
push
push
outsl
sub
jle
sub
jp
mov
xchg
je
out
test
or
push
lods
fwait
inc
insl
cmpl
push
stc
xor
push
movsb
rorb
scas
mov
sbb
sub
add
mov
stc
add
clc
cmp
xchg
push
cmp
push
not
or
popf
jl
pop
out
imull
and
jb
orl
dec
pusha
mov
les
add
shl
jmp
aas
test
inc
push
pop
shl
adc
sub
je
shlb
in
jge
repnz
arpl
cltd
ficomps
push
icebp
inc
ljmp
movsb
lock
pop
test
sub
aad
js
mov
rcll
sub
xchg
aam
nop
xchg
in
jmp
iret
dec
pushf
or
push
inc
out
and
mov
sbb
sub
jg
cli
dec
or
xchg
test
mov
bound
repnz
pop
sbb
push
ds
shlb
pop
sub
out
mov
out
cmpb
pop
push
jecxz
and
xor
xchg
in
mov
mov
mov
movsb
loop
daa
xchg
and
or
fildl
popa
ss
xchg
int3
test
fisubrl
hlt
movlps
mov
fildl
pop
mov
xchg
bound
loope
iret
sub
push
push
sbb
push
and
push
inc
fld1
push
pusha
xor
push
cwtl
test
jmp
cltd
in
fcmovu
mov
push
in
sub
bound
loop
repz
sbb
xchg
or
xor
jge
aad
cmp
call
pop
lcall
imul
notb
add
cmc
add
adc
std
ror
dec
cmp
imul
adc
push
push
jl
add
cmp
popa
mov
xor
mov
push
pop
push
insl
fwait
stos
fdivrl
cmp
shlb
in
ljmp
fcmovnbe
insb
fsubp
fucom
aad
dec
cltd
push
push
sbb
sub
aaa
aas
cld
jns
mov
sbb
inc
shlb
mov
loopne
pop
sbb
imul
mov
out
push
adc
lock
loopne
lahf
sti
cltd
cmp
xor
lahf
and
test
adc
iret
dec
push
pop
pushf
lcall
das
mov
mov
loop
sbb
popf
int3
js
cmp
jge
sbb
jge
push
mov
hlt
das
cld
xchg
sbb
outsb
mov
clc
pop
xchg
mov
ret
repz
out
dec
mov
sbb
test
je
int3
jbe
fistl
lcall
jecxz
jno
jo
rcrb
ret
int
sbbb
dec
test
in
insl
aas
aaa
add
sub
inc
leave
dec
test
pop
push
int
push
out
add
in
jmp
stos
pop
jmp
test
int3
test
pop
push
adc
mov
xor
dec
cmpsl
pop
lock
std
in
sahf
dec
mov
sbb
cmp
dec
sti
insl
and
and
shl
pop
mul
sbb
inc
aad
shr
fwait
test
inc
pop
push
or
cmp
es
push
mov
jb
mov
in
mov
js
dec
push
fdiv
jp
xorl
pop
mov
inc
mov
jp
jecxz
xor
pop
or
in
stos
sbb
adc
xor
outsb
mov
dec
das
mov
jbe
or
adc
adc
inc
add
inc
jle
addr16
mov
out
jg
repz
into
popa
adc
jecxz
push
and
xorb
or
fcoml
jle
pop
sub
insl
mov
xor
lahf
les
inc
leave
cs
pop
iret
ds
and
jmp
ror
adc
sub
mov
sbb
iret
les
push
dec
test
push
mov
nop
bound
addr16
repnz
sar
ret
rcll
out
xchg
mov
and
jl
inc
inc
les
adc
hlt
sub
ror
addl
pop
test
xchg
mov
jnp
and
lret
popa
add
mov
xchg
cmp
inc
scas
xchg
pop
and
stos
daa
cmp
out
lahf
inc
rcr
lock
jp
sub
arpl
mov
fdivrl
xchg
cmpsl
cmp
jp
aaa
pop
lock
scas
fsubrs
pushf
jns
cli
lods
xorb
dec
jmp
add
mov
pop
insb
shl
popf
out
push
pop
gs
imul
rorb
movsl
mov
cli
xchg
loopne
push
repnz
aas
test
mov
cmpsb
outsb
test
jb
or
loop
test
aas
lcall
dec
add
dec
inc
js
and
xlat
gs
sub
sarl
xchg
or
rorl
pop
xchg
and
inc
int3
ret
pop
stos
sub
sbb
clc
inc
sbb
imul
fldcw
pop
in
in
cmp
mov
aas
sahf
movsb
hlt
add
mov
ds
in
mov
and
cli
xchg
mov
aaa
inc
xorl
mov
xchg
aas
test
aad
out
push
fsubrl
push
scas
cmp
push
jmp
repz
test
sti
cmpsb
repz
inc
mov
sub
cmc
or
cmp
push
mov
xor
or
nop
mov
jp
xor
call
addl
imul
imulb
clc
add
loope
fs
and
fs
jp
mov
call
mov
adc
cmp
rcrl
mov
repnz
dec
shrb
stos
jno
mov
add
dec
loope
sbb
aaa
ja
lea
sub
push
leave
and
cltd
enter
rol
jns
jecxz
fcomip
xchg
scas
lods
rcrl
int3
lods
out
jae
test
or
cmp
pusha
insl
shr
mov
lods
imul
push
mov
cli
dec
outsb
pop
push
cmpsl
faddp
adc
xor
es
gs
mov
out
or
je
shr
into
cmp
sbb
lds
jle
gs
cld
loop
lret
xchg
loopne
cmp
leave
push
xlat
jmp
sub
sti
xor
cltd
ficoms
push
pushf
insl
lahf
imul
push
xchg
jnp
sub
mov
sbb
clc
push
shrb
cmp
push
aad
lods
seta
ja
inc
adc
sub
and
in
outsb
roll
push
test
adc
fsubr
pop
push
fmull
add
xor
test
or
fs
out
adc
sub
push
add
sbb
mov
jle
push
mov
pop
sbb
xchg
xchg
mov
out
insl
call
sub
frstor
push
inc
fisubl
xor
ljmp
insb
or
scas
ja
out
pop
test
jl
cmp
push
add
inc
cmp
cli
fbstp
xor
cli
jns
cmp
insb
pushf
inc
fcmovu
cmp
mov
and
xor
lods
add
jmp
loop
int
mov
in
ljmp
adc
jae
sub
stos
outsb
push
pop
fsubl
ret
mov
sti
pop
in
jp
push
jle
or
and
pop
rcrl
inc
out
inc
leave
movsl
push
js
or
test
lret
sub
jp,pt
jl
add
pushf
jmp
mov
enter
xchg
aaa
pushf
lret
les
paddsw
cmpsb
xchg
mov
bound
or
xchg
sub
lret
mov
mov
nop
int
fmull
repz
leave
imul
lahf
outsb
or
mov
dec
sahf
jle
in
adc
add
cmp
sbb
dec
or
xor
push
lret
out
out
jo
mov
enter
fnsave
sub
sbb
into
or
jmp
xor
rcrl
ret
stos
inc
xor
divps
into
sub
cmp
imul
push
dec
inc
jge
inc
lods
mov
xchg
movsl
vpunpckhdq
mov
sbb
lret
dec
push
movsb
mov
xchg
pop
rorb
mov
jge
jno
daa
lea
jmp
lods
in
pop
lret
lods
add
push
dec
stos
mov
mov
hlt
pop
das
pop
adc
cmp
mov
fwait
pop
cwtl
sub
test
sub
mov
jl
pop
inc
and
into
jge
sbbb
xchg
sub
ds
jbe
or
subl
or
out
lods
pop
inc
iret
mov
inc
in
or
popf
mov
sbb
popa
or
das
adc
and
jmp
insb
jo
sbb
xchg
imul
jns
pop
push
mov
inc
clc
cmpsl
xor
insb
repnz
cmp
inc
mov
pop
mov
pop
out
movsb
test
ss
dec
or
movb
dec
push
lds
xor
mov
mov
imul
jge
jnp
sbbb
cmpsl
pusha
push
fsub
adc
sub
nop
lahf
test
jbe
cmp
test
or
adc
call
cld
xchg
into
sub
inc
jbe
es
pop
outsl
ret
and
jb
addb
sbb
pushf
bound
sbb
and
imul
into
mov
jnp
aaa
xchg
cmc
mov
sbb
sbb
pop
sbb
or
popa
mov
mov
and
xor
cmc
js
adc
popf
mov
stos
cwtl
add
testb
lahf
rclb
jl
fsubrs
js
popfw
jl
add
outsl
popa
fs
imul
xchg
daa
vucomisd
xchg
mov
inc
les
jno
fcom
inc
fisttps
ljmp
lret
test
mov
inc
rcrl
cmp
or
add
sub
data16
cmp
cltd
mov
xor
aam
adc
pop
add
les
nop
cmp
mov
mov
mov
scas
in
dec
adc
in
mov
cmp
adc
insl
inc
mov
mov
sbb
mulb
adc
aad
jle
pop
jmp
sub
nop
nop
outsb
cmp
push
or
lcall
jno
push
lahf
or
inc
push
xchg
subb
jo
fldt
movsb
mov
cmp
mov
movsb
pop
jg
in
cmpb
lds
push
lea
outsl
sub
outsl
mov
inc
ja
mov
pop
hlt
negl
or
inc
js
jl
push
sarb
xchg
mov
inc
cwtl
add
jo
mov
xchg
dec
and
imul
les
popa
dec
xchg
clc
pop
ljmp
xchg
repz
pop
sbbb
or
stc
fucomp
repz
xchg
push
mov
pop
pop
int
pop
rclb
scas
test
mov
pop
mov
addr16
xor
scas
out
lods
jg
jp
int
pop
inc
push
ss
mov
xor
adc
pop
jmp
inc
les
add
inc
mov
xchg
rcrb
sbb
cmp
inc
add
pop
jmp
push
lods
rcll
icebp
pop
mov
pop
into
iret
icebp
xor
push
mov
repz
cmpl
pop
sbb
insb
fsub
lea
mov
sub
and
jns
xchg
repnz
fnsave
or
jns
insb
adc
jmp
test
pushf
repnz
mov
cmp
lock
lds
or
cwtl
and
ret
lret
mov
adc
or
xlat
cmpsb
xchg
leave
ret
dec
mov
inc
lret
sbb
dec
inc
fnstsw
sbb
test
sub
jg,pn
xchg
sbb
in
insb
add
adc
cmp
ss
ss
iret
pop
popf
stos
cmp
fidivl
mov
repz
outsb
ljmp
adcb
sbb
outsb
fisubl
cltd
mov
mov
add
mov
mov
mov
adc
icebp
jnp
repz
pop
dec
and
andl
in
dec
jle
and
out
sti
loopne
nop/reserved
jae
xchg
xchg
ficomps
iret
xchg
push
mov
insb
pushf
cmp
cld
into
dec
xor
push
mov
adc
sub
ljmp
xchg
add
inc
rorb
lock
lcall
in
mov
or
addr16
jle
mov
scas
std
dec
test
mov
adc
hlt
stc
sbb
mov
pop
repz
mov
cltd
lods
mov
or
cltd
adc
fsubr
adc
xor
mov
ret
pop
mov
mov
push
ret
negb
insl
insl
js
clc
push
inc
ret
dec
insb
pop
inc
es
mov
add
xchg
aas
pop
jbe
js
push
mov
xor
cmp
push
xor
cmp
xlat
mov
outsb
lcall
sub
pop
mov
jg
xchg
mov
mov
cmp
aad
dec
inc
inc
lods
mov
cltd
insb
fstpt
sub
sahf
shrl
add
aad
out
mov
orl
mov
mov
mov
push
shlb
aad
adc
fcmovnb
out
mov
mov
imul
mov
and
cmpsl
stos
aam
mov
cmpsl
cltd
jne
scas
test
push
fldl
push
aam
je
and
pushf
inc
mov
or
orl
add
sarl
pushf
push
jecxz
int
idivl
or
mov
mov
sub
jl
mov
mov
lea
xor
add
jl
mov
gs
jno
lods
inc
pop
pushf
sub
adc
xchg
pop
in
dec
xchg
mov
dec
data16
sub
jns
shlb
fmul
jns
cmp
daa
xor
hlt
xchg
inc
push
sbb
nop
adc
and
iret
cmpl
lcall
shlb
insl
fistl
sarb
bound
push
dec
into
push
pop
xlat
jno
cmp
addr16
cmpsl
cmc
mov
in
mov
jge
lds
cmp
int3
push
imulb
xor
inc
ret
cs
dec
aam
pop
push
push
aad
stos
push
inc
pop
insb
push
pop
inc
es
rcrl
add
les
xchg
pop
das
leave
xchg
xor
lret
xchg
adc
pusha
inc
dec
adc
stos
std
test
mov
pop
jl
jmp
int3
out
gs
sub
mov
fwait
dec
flds
sbb
or
pop
mov
ret
dec
mov
push
sahf
jecxz
dec
stc
es
push
dec
outsl
or
jb
push
lret
divb
dec
jle
mov
xchg
mov
xchg
and
lahf
ffree
xchg
push
int3
dec
inc
into
stos
lea
push
ficoml
ret
dec
sti
js
nop
insl
sub
adc
cmpsb
sbb
pop
movsl
sbb
inc
adcl
test
ret
mov
push
div
xchg
imul
add
cmpsb
and
sbb
nop
xor
mov
sub
sbb
sahf
ja
add
std
sarb
mov
int
out
push
mov
and
push
insb
pop
jns
loope
pop
push
mov
push
imul
je
int3
push
mov
idiv
pop
fs
iret
hlt
mov
sbb
jmp
jbe
xchg
xor
or
movsb
fisttps
and
lock
outsl
or
imul
in
jp
dec
xchg
push
mov
mov
xlat
mov
mov
lahf
mov
jo
mov
fmuls
mov
cmpsb
mov
lds
shll
inc
pop
cmpsl
mov
in
mov
sti
jne
outsl
jp
inc
mov
cmp
or
out
push
cmpsb
push
sbb
dec
or
daa
daa
xor
aad
insb
xlat
mov
dec
push
fildll
popf
and
or
pop
add
ja
mov
scas
insb
insl
rcrb
sbb
jmp
add
inc
push
push
or
sbb
xor
xor
sbb
outsl
iret
or
mov
test
popa
in
pop
std
lcall
ret
out
push
addb
inc
iret
sbb
ds
jmp
icebp
stos
jns
jg
pop
xchg
aam
lods
add
and
lods
push
inc
pushf
adc
out
sbb
ret
stos
inc
xor
mov
or
inc
jmp
inc
mov
push
int
cltd
sbb
push
xor
data16
jno
xor
loopne
mov
and
xchg
mov
cmp
xor
and
jo
sub
pop
and
dec
xor
sbbb
xor
js
xor
in
xor
ret
loopne
inc
aas
into
dec
mov
jecxz
xchg
cmp
nop
push
out
pop
mov
adc
xlat
lods
popa
cmp
jo
add
cmp
mov
outsb
roll
aas
dec
or
pushf
push
insl
adc
and
popf
into
sahf
mov
rorl
mov
icebp
xor
push
sahf
pop
inc
add
decl
loop
fs
push
sub
jp
lea
mov
cmp
mov
mov
ret
cld
es
mov
add
jecxz
mov
xchg
aaa
dec
arpl
mov
cmc
push
insl
cmp
or
or
push
scas
out
fildl
fdivs
or
shll
mov
lds
in
jo
jl
cltd
dec
xchg
arpl
inc
iret
in
or
lods
mov
dec
push
pop
mov
mov
fidivrs
popa
inc
inc
push
cli
ret
pusha
mov
fwait
push
movsl
int3
xchg
xchg
jmp
sub
ds
ret
cmpsl
ja
xor
sub
lret
jmp
jp
adc
mov
daa
xchg
push
push
sbb
sub
mov
and
mov
loop
pop
fisubrs
jbe
ret
pop
fbstp
leave
or
push
inc
movsb
push
into
jle
mov
cmp
das
xor
adc
out
stos
jnp
lret
jg
mov
ds
cli
sub
xchg
sbb
mov
jg
sbb
fidivrl
imul
dec
popa
addr16
scas
ret
adc
or
and
push
sbb
repz
and
sub
mov
fnclex
jne
lret
sbb
push
mov
out
lret
outsb
mov
cmpsb
nop
xlat
push
and
mov
jae
iret
push
pop
in
icebp
loopne
nop
dec
xor
cmp
out
or
sub
lret
and
lods
inc
popa
mov
out
inc
repnz
push
lock
int3
movsl
pop
sbb
mov
stc
sub
or
cwtl
dec
push
mov
jle
in
int
xor
mov
inc
add
push
mov
or
mov
ds
lds
jle
add
push
ljmp
push
jp
je
xchg
xor
dec
imul
adc
mov
push
dec
imulb
lock
fisttpll
gs
push
lods
frstor
test
stos
sub
cwtl
cmp
stos
xor
cld
fcoms
dec
cmc
test
popa
push
mov
cli
nop
les
inc
mov
insb
mov
xor
mov
stos
faddp
sub
data16
add
ret
mov
les
hlt
dec
sbb
in
mov
sbb
cmc
mov
push
scas
sti
mov
out
movsl
mov
cwtl
pop
cmpl
mov
mov
mov
cwtl
mov
fisttps
jnp
mov
arpl
cwtl
adc
mov
dec
xchg
sub
lea
stc
push
pop
test
cmp
cltd
dec
imul
dec
arpl
imul
repz
and
rorb
adc
fdivr
jge
in
insl
sbb
stos
xchg
rcrl
fisubl
push
dec
fnstcw
pop
lahf
pop
cltd
sub
mov
xchg
fs
sbb
adc
jmp
cld
int3
lods
out
loopne
orl
add
jl
cmc
cmp
mov
mov
enter
loopne
lock
ljmp
ficomps
cmp
dec
or
xor
sub
imul
mov
mov
jp
imul
push
stos
and
int3
mov
mov
fbld
ror
jcxz
stos
inc
ja
mov
lods
pop
sub
test
cmp
inc
lock
je
cmp
xor
mov
inc
mov
sub
add
inc
testl
adc
xor
into
test
test
inc
mov
pop
das
aaa
mov
cmpsb
negl
andb
out
xchg
fmuls
sti
pop
stos
jne
insl
inc
cmc
enter
enter
into
inc
jle
mov
int3
jmp
mov
push
cmpsb
data16
mov
sarw
lods
sbbb
insb
movsl
sar
or
fiaddl
cmp
push
mov
or
pushf
dec
jl
jl,pt
pushl
sbb
push
ljmp
loopne
jo
dec
push
or
aas
jb
inc
pop
cmp
mov
mov
movsl
enter
ret
pop
hlt
std
in
cmova
xor
cs
pop
aam
push
rcrb
sbb
mov
test
push
jae
cltd
push
or
inc
aam
repnz
mov
sahf
adc
and
rorl
faddl
pop
jnp
out
lods
adc
aad
jno
sbb
mov
cmp
orl
ss
loopne
adc
adc
mov
test
cmp
cmp
scas
call
inc
es
mov
mov
sub
stos
and
pop
lret
xchg
push
and
xor
test
cmpl
imul
data16
lds
xchg
stos
jbe
add
dec
shl
nop
or
stc
inc
jne
gs
out
pop
lret
push
jg
mov
cmp
into
sub
lret
sub
cltd
pop
sbb
adc
mov
xchg
mov
std
out
fadd
lahf
call
push
stc
pop
nop
loope
pusha
mov
and
jb
repnz
rclb
add
and
push
add
daa
cmp
xchg
adc
and
cmp
push
fsubrs
stos
xor
dec
jb
fcompl
xchg
lret
imull
dec
jnp
lock
cwtl
popa
test
add
stos
dec
out
out
std
inc
dec
mov
jbe
and
sub
insl
jmp
leave
sbb
cli
and
dec
sti
dec
aam
jp
rol
add
test
cwtl
sub
jg
xchg
in
pop
cmp
xorl
pusha
lds
mov
inc
popa
pop
rclb
outsl
push
xchg
dec
sti
sub
mov
stos
ds
in
inc
push
insl
ja
adc
cmp
mov
sbb
movsl
or
fs
xchg
mov
sub
shll
fisttpll
fstpt
mov
mov
and
push
roll
dec
enter
loope
rclb
mov
in
jecxz
dec
and
data16
imul
ljmp
nop
mov
cltd
pop
or
outsl
xchg
sbbl
jecxz
popa
test
bound
add
roll
mov
lahf
jl
shlb
or
cmp
call
ss
jecxz
aad
add
add
std
and
jno
add
mov
dec
xor
ret
xor
clc
push
xor
enter
shr
or
xchg
iret
inc
push
mov
dec
adc
aam
jecxz
int
mov
mov
ljmp
pop
mov
cmp
pusha
hlt
lcall
pop
ret
or
or
or
repz
test
and
aad
les
jecxz
push
into
aas
scas
push
cmp
lock
and
mov
cwtl
mov
cmpsl
fisubs
and
jecxz
int3
or
xor
mov
sbb
push
fmull
int3
pop
lret
daa
jg
lock
dec
add
xor
leave
stc
pop
and
subl
in
or
jge
cwtl
pop
sub
and
jmp
int3
jl
mov
je
jp
pushf
pop
adc
pop
xchg
stc
stos
loopne
pop
mov
mov
adc
xor
leave
outsl
gs
ret
mov
mov
mov
or
jle
shl
cmpsb
push
jle
insb
cltd
lret
mov
mov
sti
or
sub
jmp
fisttpl
mov
repz
cmp
pop
xor
testb
inc
filds
cmp
test
in
fwait
cltd
sub
and
data16
sbb
add
xchg
and
lcall
jo
push
data16
inc
push
sub
xor
mov
mov
enter
sub
mov
jae
jge
add
insb
or
pop
mov
jo
and
adc
push
mov
mov
dec
test
in
xchg
mov
mov
adc
rorl
add
pop
test
ljmp
push
jb
sbb
add
fwait
push
inc
dec
in
call
mov
cmp
mov
cs
in
aaa
lds
dec
int3
cmp
inc
mov
rcrl
pop
mov
and
xor
lock
push
dec
lock
arpl
shrb
fst
add
and
mov
jmp
mov
pop
mov
jbe
inc
lcall
call
push
int3
push
imul
lret
inc
mov
nop
loopne
pushf
popa
cli
xchg
jg
pushf
adc
push
xchg
or
inc
mov
xor
or
std
mov
push
ret
sarl
mov
mov
popa
mov
mov
xchg
insb
movsl
repz
dec
and
test
add
ret
insb
ss
mov
lods
jno
inc
fimull
in
mov
and
nop
jb
pop
xchg
xchg
xlat
test
aam
mov
mov
data16
decb
shrl
mov
mov
mov
leave
mov
icebp
jbe,pt
subb
sbb
sub
aad
fnsave
adc
ja
mov
pop
leave
data16
and
inc
dec
sbb
test
cmp
loope
adc
xchg
int
pop
cmpsb
pop
and
les
cmp
cmp
loopne
rolb
out
or
enter
loopne
push
dec
pop
cwtl
mov
lret
std
sbb
adcl
fwait
sbb
dec
popa
es
dec
fnsave
and
jnp
in
into
xchg
sub
add
int
mov
xor
lods
pop
lahf
sbb
shrl
sar
cmp
mov
xchg
inc
call
dec
in
mov
lret
clc
and
stos
xchg
push
test
sub
pop
orb
es
xchg
bnd
xchg
pusha
inc
xor
mov
fwait
push
scas
lcall
inc
rcrb
mov
pop
jmp
push
push
and
mov
data16
test
jne
cmp
push
loopne
add
mov
xor
loope
popf
mov
mov
sub
cmpb
shl
inc
fistl
sub
inc
pop
or
rcll
sub
fcmovb
mov
out
cmp
adc
cwtl
mov
or
push
mov
lcall
xorb
pop
and
pop
sahf
mov
lahf
adc
std
imul
les
mov
jno
pop
rcll
cmp
mov
xchg
nop
or
xchg
jno
pop
test
xor
fwait
mov
nop
add
push
xor
jo
in
push
adc
popa
add
subl
cmp
pop
or
aam
mov
insl
adc
dec
pop
mov
out
xchg
aas
push
pop
mov
mov
inc
jp
or
nop
sub
jmp
lcall
mov
movsb
dec
sub
mov
nop
test
sbb
or
pop
sarb
lea
arpl
gs
hlt
mov
stos
dec
xchg
xchg
mov
mov
inc
lahf
xchg
pushf
jp
mov
aam
les
into
or
pop
ficoml
xchg
bound
mov
pop
cli
test
adc
fldcw
sahf
mov
xchg
adc
js
stos
dec
movsl
adc
cmp
dec
mov
lret
je
sbb
cs
sbb
cmpb
inc
ds
lcall
push
rcrb
jnp
jle
sbb
dec
aam
lahf
mov
and
stos
cmc
push
cli
push
push
push
jmp
clc
or
push
frstor
das
cld
lock
jae
idivl
xchg
cmpsl
cmp
fwait
dec
gs
push
rorl
and
cmpsl
push
mov
sbb
xor
xor
mov
out
js
push
lods
xchg
or
stc
jo
sub
jg
and
ds
cli
push
xchg
lods
test
stos
daa
xor
push
dec
add
mov
push
push
dec
clc
cmpsl
lock
and
stos
push
in
jo
iret
inc
cwtl
out
dec
in
sub
jbe
fstpt
mov
push
lret
fsubrl
scas
popf
pop
ret
in
jg
jl
xor
int3
pop
ret
mov
mov
mov
cmp
pop
jge
ret
dec
out
rcrl
fxch
cmp
push
fsts
lods
cltd
enter
int
push
ja
rolb
dec
xchg
inc
int
dec
mov
dec
int
pop
sbb
add
mov
shll
xchg
sbbl
insb
cmpsl
ret
inc
xlat
lods
insl
xor
cmp
hlt
arpl
fdivrs
dec
into
inc
inc
cld
xchg
push
lahf
aaa
movsl
dec
and
lcall
jp
nop
mov
cli
daa
jo
dec
loopne
xchg
or
andb
push
mov
out
fcoms
push
dec
jae
pop
xchg
sub
sahf
fstp
jl
jno
test
sbb
inc
lcall
aas
test
fadd
pop
push
sub
pusha
lds
sbb
add
sub
inc
mov
cltd
pop
dec
and
sbb
les
aaa
dec
mov
push
icebp
sub
add
out
cltd
bound
xchg
sahf
dec
fwait
and
scas
loope
mov
add
stos
sub
xor
clc
xor
or
jp
jg
push
orb
mov
sub
xchg
push
ljmp
push
enter
ror
out
fidivl
aad
hlt
sbb
fsts
mov
cmpsl
imul
outsb
mov
mov
std
fisttpll
loope
fwait
adc
mov
addr16
inc
ret
adc
mov
movsb
add
cmp
js
pop
pop
into
lods
jb
adc
or
lock
popf
insb
inc
mov
loop
leave
jl
cmpl
push
fists
loope
jl
out
cmpsb
loop
mov
imul
xor
adc
insl
movb
test
push
or
sub
cmpsb
aas
dec
push
inc
pop
in
sbb
jp
filds
jle
lcall
mov
jecxz
fdivrs
xchg
adc
add
sahf
add
call
inc
pusha
cmpsl
sub
mov
xchg
inc
xor
popf
mov
add
adc
cmp
int3
adc
test
movb
repnz
pusha
push
sub
jl
mov
mov
in
push
das
mov
push
loop
jmp
dec
add
notb
xchg
scas
loop
pop
push
repz
sahf
fsubrl
scas
dec
sub
cli
stos
xor
ret
sbb
in
movsl
ret
adc
mov
das
dec
push
iret
cmpsl
sbb
xor
int
xchg
mov
mov
xor
das
data16
lahf
and
movsb
aas
shrl
clc
mov
leave
fdivs
mov
not
pop
ds
outsb
mov
dec
nop
xchg
jne
in
xchg
sbb
movsl
test
and
sbb
cltd
dec
stc
fsubr
mov
xor
push
or
cmpsb
inc
jmp
in
mov
sbb
fcompl
insb
mov
xor
mov
insl
cmp
sub
xor
testl
pop
or
mov
or
aaa
xlat
mov
movsb
ss
sub
lret
cwtl
add
pop
mov
fdivrs
lret
lods
addl
inc
loope
pop
test
jge
or
pushf
sbb
cmp
jge
pop
stos
push
into
add
push
mov
and
andl
add
sub
out
inc
add
lods
es
cli
test
lock
pop
push
pop
fisubs
movsl
mov
or
dec
and
inc
xor
mov
mov
fstpt
test
fidivs
ss
leave
mov
push
mov
adc
out
outsl
push
xor
pusha
ss
mov
push
sbb
sbb
sub
std
adc
sarb
push
cwtl
or
filds
sahf
jb
shll
jnp
or
dec
subl
jbe
mov
movsb
push
and
insl
dec
adc
outsl
leave
mov
int
in
sub
xchg
enter
push
aam
push
xor
and
sbb
push
add
les
fidivl
test
push
daa
sub
out
es
nop
cs
xor
sub
aaa
cltd
and
jl
push
jl
mov
jo
stos
mov
int
xchg
and
push
std
pop
aaa
push
adc
xchg
into
in
scas
cmp
xor
shll
mov
sub
mov
cld
inc
dec
inc
mov
int
jno
or
es
lea
and
mov
sub
mov
lretw
arpl
jo
add
adc
mov
jp
scas
mov
push
mov
push
mov
adc
fldl
adc
pop
push
adc
cmpsb
data16
mov
or
stc
jmp
cs
icebp
cmp
ss
xchg
inc
repz
mov
dec
jmp
rcrl
in
sbb
into
and
jg
push
gs
arpl
fbld
and
jmp
xor
notl
leave
mov
stc
lds
sub
dec
add
les
push
xchg
movsl
aas
add
mov
push
xor
jecxz
stos
bound
cmpsl
mov
add
and
bound
orb
pop
jmp
add
int3
mov
out
iret
mov
stc
inc
inc
sbb
outsb
mov
pop
pop
es
fisubs
outsb
jp
insl
cmp
stos
es
push
lcall
pop
xchg
or
lds
adc
dec
dec
popl
mov
inc
das
cwtl
mov
or
hlt
rcrl
lahf
imul
fimuls
insb
nop
adc
cli
sbb
cld
jnp
repz
mov
lock
daa
shlb
cmc
push
push
jae
in
daa
push
pop
inc
xchg
cmp
dec
cld
lods
je
and
int
fnstenv
ret
ret
cmpsb
repnz
test
and
pop
mov
mov
pop
ret
adc
repnz
cwtl
adcb
lahf
loope
cmc
cmc
or
inc
cmp
and
ljmp
jecxz
loop
nop
dec
lahf
push
cltd
push
arpl
sti
lret
int
rcl
sahf
add
arpl
adc
icebp
leave
mov
js
lods
bswap
jmp
jo
xor
dec
ret
jl
and
fwait
insl
xchg
pop
jnp
out
in
xchg
insb
or
pop
pusha
inc
lcall
jne
sub
fwait
dec
sbbb
hlt
xchg
and
in
mov
push
and
or
sbb
js
dec
lea
mov
add
loop
cmc
jne
cld
cli
jecxz
mov
std
imul
cmc
push
icebp
sbb
fnstsw
lcall
lahf
mov
pop
lcall
push
loope
pop
xor
test
sub
sahf
lahf
cwtl
cmpsb
adc
add
mov
sbb
dec
inc
push
movsl
stc
addr16
cmp
jbe
push
aad
shll
dec
bound
mov
jp
push
icebp
dec
test
mov
mov
jbe
cmc
jmp
icebp
mov
test
pop
iret
push
adc
pop
and
mov
cmp
lods
jge
push
flds
in
inc
push
addr16
inc
aam
mov
mov
aam
movsl
mov
es
mov
pop
jo
jecxz
imul
add
dec
and
pop
push
dec
dec
in
std
fs
rdtsc
add
inc
inc
daa
repnz
mov
sbb
cmp
int
lret
or
sbb
push
mov
pop
mov
dec
sub
add
ficompl
xchg
insl
jb
push
dec
pop
negb
ficomps
sub
pushf
mov
outsb
or
ljmp
cmpsl
movsl
pop
fidivl
mov
sub
mov
in
mov
popa
shrl
and
outsl
cmc
mov
stos
dec
xchg
stos
xchg
mov
test
sahf
sbb
ror
push
lds
ss
dec
or
fstpl
adc
movzwl
push
dec
sbb
cmp
lahf
out
inc
mov
enter
fcoms
adc
add
xor
adc
scas
add
xchg
pop
insl
movsb
fsubrl
sti
push
ljmp
popa
and
data16
and
cmp
mov
push
lds
cmp
push
ret
mov
push
mov
xchg
fs
pop
or
lods
xor
sbb
int
cmp
mov
xor
push
pop
test
mov
sahf
mov
mov
test
repz
je
in
or
cmp
popf
push
rorl
aas
push
dec
add
pop
jb
test
in
roll
orb
add
adc
addr16
mov
popf
je
xchg
inc
adcl
add
dec
loop
mov
addr16
sub
push
push
fwait
rclb
lods
fxam
mov
pop
jp
jnp
xchg
pop
pop
cmpsl
in
and
lcall
jae
mov
jp
inc
insb
ja
mov
jle
pop
movsb
int3
imul
fnsave
mov
xchg
jo
andb
cmp
lods
push
testb
adc
pop
in
arpl
insb
pop
inc
lea
out
outsl
inc
sahf
aad
test
jnp
cmp
outsl
pop
lcall
lock
dec
fs
dec
xchg
and
icebp
inc
movsl
lret
out
sub
xchg
mov
add
addr16
adc
jno
or
xor
mov
mov
xor
and
sbb
or
cmp
inc
dec
push
insl
popa
pop
push
cli
jmp
or
shrb
pop
push
scas
xchg
xor
jp
mov
mov
pop
popf
pop
xor
mov
and
xchg
cwtl
sbb
lret
and
cmc
jl
sarl
lds
or
je
fs
lret
pcmpgtb
xchg
imul
popa
mov
aaa
sub
sar
fnstsw
cmpsb
hlt
dec
mov
adc
int
push
lds
cwtl
ds
dec
dec
in
arpl
jmp
incl
mov
arpl
lds
jmp
sbb
dec
or
cmp
dec
mov
pop
or
xor
cmp
cld
push
loope
jb
inc
nop
pop
xchg
xchg
outsb
ror
out
mov
adc
lcall
push
jmp
popf
sub
mov
mov
ljmp
lcall
inc
jo
aaa
aas
stos
mov
jnp
enter
sub
mov
mov
stos
jb
mov
fwait
or
push
mov
aaa
jae
lcall
nop
pop
repz
add
xchg
xchg
pusha
adc
daa
jecxz
or
mov
jae
cwtl
out
iret
lahf
or
cmp
add
mov
fsub
jno
pop
stos
push
adc
ljmp
daa
pop
dec
mov
jle
outsl
dec
push
cmpsb
jnp
jne
icebp
addr16
hlt
pop
mov
lret
cmp
lods
in
into
push
add
lcall
aam
dec
jle
fsubrl
fwait
loop
mov
insl
xchg
ror
mov
inc
cmp
scas
pop
notl
mov
xor
cld
popa
mov
inc
lods
pop
pop
dec
xor
dec
push
xchg
repnz
mov
mov
icebp
cs
xchg
mov
cmp
push
shrl
pop
mov
lahf
mov
xchg
push
sub
adc
or
xor
inc
imul
mov
outsb
cmp
and
mov
popf
xchg
rorl
mov
adc
ljmp
popf
jecxz
cld
adc
cmp
adc
pop
and
adcb
aas
rolb
aaa
popa
mov
cmpsb
add
out
pop
iret
pushf
xchg
xor
dec
xor
into
push
or
pop
xor
push
mov
dec
jb
xor
scas
pop
mov
out
pop
pop
xchg
out
push
mov
hlt
shrl
xchg
mov
nop
mov
pop
dec
std
inc
iret
out
insl
xor
es
pop
out
sahf
out
adc
pop
rcr
mov
sbb
fnstenv
sub
sbb
dec
je
test
mov
int
jl
js
cmpsb
mov
jl
pop
xchg
pop
lods
repz
aam
xchg
cmp
xor
mov
cmp
add
add
mov
cwtl
mull
mov
imul
inc
cmpsl
addr16
dec
into
das
jle
ja
mov
cli
dec
sbb
xchg
js
mov
adc
sahf
and
add
gs
adc
push
pop
out
shl
enter
lret
or
and
jecxz
int
lcall
shll
popa
in
adc
loope
bt
lret
ret
mov
jle
xor
shll
push
sub
clc
ja
or
push
jb
out
or
fldenv
push
jae
push
sti
fdivrl
cli
push
popf
sub
cltd
repz
nop
mov
dec
dec
push
pop
push
pop
into
out
mov
clc
or
sbb
insb
inc
sahf
loop
adc
repnz
insl
std
mov
in
cmc
idivl
mov
daa
push
mov
add
jmp
jbe
mov
in
pop
mov
repz
daa
and
sti
imul
lea
pusha
imul
icebp
cmpsb
enter
out
jbe
cmp
test
shl
cmpsb
add
xor
pushl
add
mov
pop
movsl
loope
orb
mov
push
fsubrl
sbb
xchg
dec
lock
rorl
sub
dec
mov
out
sbb
mov
psllq
movsb
xor
int
cli
scas
nop
adc
dec
movsb
lds
pop
and
pop
fstpt
adc
push
or
leave
sbb
pop
xor
ja
stos
adc
notb
mov
stc
loop
lret
jmp
int3
in
pop
xchg
clc
push
inc
dec
mov
rorl
and
or
sbb
mov
or
shl
pushf
stos
es
outsb
repz
sti
dec
push
mov
xorl
push
xchg
ret
inc
lcall
cmpsb
sti
test
mov
repz
push
clc
inc
mov
dec
push
or
loopne
pushl
cmp
sbbb
xchg
adc
jmp
push
popf
std
jl
xor
mov
and
std
pop
movsl
mov
mov
mov
cs
mov
and
and
in
adc
pushf
jg
leave
pusha
or
and
inc
mul
iret
sbb
dec
pushf
cmpsb
insl
out
aas
xchg
jge
cmp
jnp
pusha
cmp
out
and
ja
mov
mov
mov
sub
in
mov
push
pop
arpl
pop
loop
push
jae
add
adc
int
push
pop
in
fmull
add
rcrb
xor
aam
scas
push
sub
out
rolb
xlat
inc
mov
pop
or
mov
enter
repnz
les
pop
scas
sbb
dec
mov
push
lock
stc
in
jg
cmp
cmp
mov
notb
sub
cmp
sbb
pushf
mov
shlb
push
push
xor
fisubs
sub
stc
loop
mov
cmc
cli
mov
push
cmp
dec
cmpb
xchg
inc
fbstp
imul
cmp
sub
or
add
mov
sub
mov
ja
sbb
dec
dec
fwait
mov
cmp
add
arpl
push
jne
outsb
test
daa
aas
cmc
imul
push
fdivl
out
call
adc
inc
aam
ret
dec
ror
adc
push
jmp
push
das
add
sbb
outsl
imul
sub
jp
inc
xchg
jne,pt
lock
pusha
mov
pop
dec
jle
and
add
lcall
cli
jb
outsl
mov
xchg
in
jmp
push
test
push
inc
sbb
sarb
fldenv
fsubl
out
cmp
out
adc
cmp
xor
xchg
fwait
push
ret
test
cmpsb
daa
ficomps
insl
fdivrs
push
jno
cs
lret
dec
fistl
dec
and
sub
aas
lret
sub
mov
cmp
das
jbe
jne
dec
mov
inc
jo
dec
lcall
inc
push
jp
lret
test
xlat
lcall
xchg
out
decl
dec
mov
sbb
push
lret
test
adc
mov
inc
ljmp
push
into
movsb
fdivl
roll
dec
or
adcl
fbld
jno
icebp
jl
pop
jae
rclb
add
mov
popf
sti
mov
jecxz
fbstp
jecxz
inc
jbe
inc
aas
insb
push
sbb
fidivl
cwtl
sbb
cmp
sbb
or
dec
into
icebp
cld
xor
test
mov
in
push
ror
sbb
fisubl
repz
fs
dec
xchg
ss
test
sub
cmp
xchg
dec
int
arpl
jbe
test
jb
sbb
dec
and
xor
jno
shrl
inc
mov
inc
push
mov
sbb
ds
mov
xchg
sbb
cmp
push
and
sbb
push
mov
cltd
mov
cmpsl
inc
mov
leave
pop
mov
cmp
xchg
shrb
and
cmp
lret
xchg
inc
cli
pop
das
ljmp
jecxz
inc
mov
dec
aaa
pop
mov
pop
push
fdivp
xor
insb
fildll
icebp
mov
lods
lock
sub
mov
out
adcb
lret
lea
in
ds
push
insl
push
and
cmp
in
ja
orl
inc
mov
jno
in
cltd
xchg
xor
mov
mov
nop
xchg
iret
addr16
les
insb
cmp
enter
lret
jnp
hlt
mov
hlt
mov
mov
insb
inc
xchg
rcrb
lret
mov
das
xor
je
out
push
fldcw
stos
in
sbb
lahf
ja
jp
ss
data16
or
cltd
out
xchg
xor
mov
xchg
inc
div
mov
cltd
aam
in
or
cli
push
xor
pop
outsb
push
test
inc
xchg
and
daa
into
mov
jns
lock
leave
mov
jp
mov
ret
stos
jmp
mov
jbe
in
test
pushf
adc
fs
lods
jbe
sub
inc
int
aam
fldcw
lods
fucomi
push
aad
sub
test
and
adc
outsb
imul
cwtl
cmp
repnz
icebp
adc
insl
xchg
mov
push
mov
hlt
test
cmpsb
lods
add
jne
xor
jp
or
push
mov
loope
out
addr16
in
mov
popa
out
sbb
ss
mov
jnp
cmp
inc
mov
mov
je
icebp
aad
enter
sahf
insb
mov
je
lahf
pusha
mov
lret
popa
andb
dec
test
shl
sbb
push
mov
pop
movsl
in
pop
ds
aaa
inc
ljmp
stos
aad
addr16
out
push
sub
cmp
cmpsb
jbe
xchg
popa
dec
lea
push
mov
jecxz
sarb
imul
outsl
dec
sub
fidivl
pop
add
cli
adc
imul
add
mov
in
mov
jle
mov
test
pop
out
les
fdivrs
pop
shlb
stc
ljmp
sti
xchg
inc
push
out
add
insb
mov
mov
mov
mov
or
popa
xor
push
lock
xchg
cmp
and
xchg
ljmp
cmp
mov
mov
mov
test
mov
rcrl
adc
lret
pop
out
inc
inc
in
jnp
cli
push
arpl
cs
fwait
out
sbb
add
ret
push
fsts
es
push
or
push
test
outsb
cmp
test
dec
jno
and
pop
inc
out
push
cmc
mov
jbe
mov
clc
call
cmpsl
stc
push
mov
and
pop
inc
rorl
mov
nop
ret
repz
mov
sub
aam
dec
pusha
pusha
jo
filds
pop
loopne
sbb
scas
js
and
jb
les
imul
outsl
popa
or
in
sbb
addr16
xor
mov
xor
pop
hlt
clc
cmp
dec
push
sub
sbbl
adc
inc
gs
inc
stos
mov
inc
mov
test
cmc
mov
pop
je
xlat
adc
test
das
negb
sbb
add
sub
popf
xor
jmp
lcall
xorl
sub
scas
or
mov
dec
jle
divb
adcb
jb
pop
iret
inc
pop
mov
mov
sub
and
inc
mov
cmp
outsb
std
aam
pop
jb
adc
inc
test
mov
add
hlt
xchg
aas
mov
pop
popf
mov
mov
div
nop
sub
cmp
fimuls
les
sti
pop
inc
adc
out
adc
fnstsw
leave
bound
or
mov
sarb
mov
push
mov
sbb
pop
cmove
sahf
idivl
out
in
in
addb
xchg
inc
mov
sbb
pop
xor
and
cmp
hlt
dec
cmc
pusha
cs
xchg
or
add
add
jns
pushf
mov
mov
frstor
movsl
xor
and
add
push
aaa
add
icebp
mov
enter
mov
pop
push
xor
fwait
xor
test
inc
andb
push
jne
sbb
movsl
pop
push
cmp
jns
add
add
std
gs
jb
cmc
cmp
test
lock
and
int
mov
sbb
mov
add
mov
inc
mov
xor
jmp
push
add
into
loopne
mov
int3
xchg
and
clc
mov
lret
xchg
sub
popa
pop
inc
adc
cmp
xlat
push
stos
ficoml
je
cmp
leave
pop
mov
dec
sbb
fwait
xchg
out
in
dec
shll
lods
adc
or
std
enter
sahf
sub
mov
mov
addr16
shl
gs
dec
xor
cwtl
jecxz
ret
sti
lds
filds
mov
xor
mov
mov
out
mov
scas
and
lods
test
mov
jne
mov
rol
and
lods
add
push
add
popf
push
mov
cmp
and
sub
or
push
mov
mov
adc
jnp
popa
iret
std
push
xor
enter
push
fistps
mov
mov
sub
xchg
aam
cmp
cltd
dec
ud1
xor
add
xor
jecxz
rcrb
cmp
and
pop
test
mov
dec
addb
jle
xchg
or
adc
pushf
scas
je
stc
sahf
fwait
testb
cmpsl
out
and
out
in
popa
mov
fimuls
inc
lods
ss
mov
sub
test
aad
cwtl
pop
out
or
sahf
cmp
jb
adc
cmpsl
or
insl
cld
fs
mov
ds
std
sub
fdivrp
lret
loopne
pop
jbe
xchg
xchg
and
or
out
mov
vpmacsww
aas
gs
sahf
test
cli
lds
push
sub
xchg
shl
xor
hlt
push
call
pop
cmp
mov
xchg
lods
std
dec
push
push
bound
inc
mov
sbbl
dec
into
jb
leave
pop
jg
mov
out
push
les
push
paddsw
lock
adc
cltd
xchg
xchg
and
adc
ficomps
sti
loop
ljmp
arpl
dec
add
jbe
pop
cld
and
jno
inc
mov
inc
xchg
out
pop
xchg
test
mov
push
push
lcall
ror
inc
jbe
adc
subl
iret
ds
aas
out
cld
push
mov
lret
notb
or
inc
movsl
dec
xchg
inc
push
push
mov
cmpsl
push
mov
xchg
add
test
mov
mov
lods
xor
add
adc
popa
ds
push
arpl
addr16
or
test
and
jno
mov
lret
scas
jmp
xchg
lods
or
iret
in
mov
fxch
stos
push
jnp
es
dec
lcall
push
fadd
das
dec
cmp
cmp
add
xor
inc
pop
xchg
jge
std
clc
dec
pop
mov
stc
or
sub
mov
adc
lahf
xor
fcoml
mov
xchg
xor
fidivl
repz
test
mov
xor
movsb
in
inc
sti
push
inc
shrl
jae
cmp
cmp
mov
mov
leave
pop
es
ret
repz
repnz
jnp
adcl
mov
mov
jmp
idiv
out
aaa
negl
lods
xor
jae
arpl
or
sti
sub
add
lods
shlb
sub
outsb
imul
out
push
aas
outsb
cmc
mov
pop
or
xchg
push
push
or
int3
lea
lcall
sub
and
mov
mov
push
dec
add
xor
stos
push
push
insl
lea
inc
push
decb
cmp
or
push
stos
mov
pop
jp
leave
sbb
mov
insb
xchg
jg
movsb
scas
sbb
mov
loope
popf
shlb
popf
addr16
ret
icebp
lahf
inc
sahf
fnstcw
mov
dec
xchg
lret
mov
rclb
sbb
pop
idivb
jo
push
bound
mov
jo
test
out
push
xchg
repz
xchg
cli
mov
adc
mov
shr
dec
std
mov
inc
cmpsb
call
das
jl
std
sbb
imul
mov
aam
sahf
mov
iret
push
cld
mov
lahf
mov
iret
das
jo
jno
sbb
add
sub
push
fistpll
addr16
jae
dec
nop
cld
shll
mov
mov
ja
mov
mov
pop
sub
xor
hlt
and
notb
dec
enter
push
jae
and
loopne
insb
jns
cld
popf
aad
sub
adc
sbb
lods
mov
jnp
sbb
add
andb
pop
adc
mov
jno
adc
sbb
into
sbb
test
push
aaa
push
sbb
dec
mov
fs
fildl
xor
fdivs
cli
scas
mov
dec
call
and
or
rcrl
popa
mov
iret
sub
push
mov
pop
mov
adc
add
aaa
jge
mov
xchg
sub
loopne
and
gs
and
mov
xchg
mov
mov
sub
pop
and
dec
xchg
jo
pop
mov
pop
andl
adc
push
cli
push
scas
fiadds
xlat
popa
in
push
pop
cmc
out
sbb
sbb
xchg
call
cmp
sub
sub
sbb
cmp
inc
mov
movsl
loope
push
add
shlb
ret
cli
lcall
inc
jae
and
aas
jns
mov
and
pop
xor
push
xchg
sbb
adc
xchg
mov
subl
fisttpl
popa
jnp
lahf
sub
std
pop
or
lds
mov
jl
mov
pop
in
adc
je
ret
cld
sub
lods
inc
pop
paddb
imul
insb
test
subb
hlt
mov
leave
popl
sub
shlb
add
jno
roll
mov
stos
xchg
xchg
addb
in
cltd
mov
loop
gs
rcrl
enter
mov
pop
fimuls
sbb
lods
jbe
addr16
cltd
dec
lfs
pop
test
js
dec
out
aaa
xlat
xchg
cmpsb
add
push
mov
cmp
mov
pop
sbb
xchg
xchg
or
mov
int3
hlt
xchg
aas
xchg
jp,pn
lret
insb
cwtl
inc
cmp
int3
and
mov
jae
adc
jg
push
pusha
fisubl
add
dec
fwait
lds
mov
dec
ret
inc
mov
in
pusha
stc
and
icebp
adc
rcrb
adc
insl
xchg
push
sbb
inc
arpl
out
dec
add
adcb
sbb
add
push
mov
jp
popa
ss
fistl
mov
adc
mov
rolb
in
cmpsl
jecxz
cwtl
dec
stos
mov
add
cmc
cmp
imul
dec
lods
adc
aaa
xchg
adc
xor
popf
mov
xchg
xor
push
cmpsl
insb
add
movsb
sub
pop
ret
or
cmp
popf
jp
aam
testl
pop
into
add
pop
and
in
and
addr16
sbb
mov
inc
sbb
fsubl
xchg
iret
cmp
pop
fidivrs
push
repnz
addb
dec
push
jle
int3
cmp
lds
in
sbb
loope
xchg
cmp
cmp
out
aam
jge
adcl
pop
or
cmpsl
and
imul
mov
loop
xor
adc
mov
dec
mov
in
imul
mov
imul
mov
int
fs
cmp
sarl
cmpsb
hlt
movsl
out
ret
mov
aad
lock
inc
inc
inc
rorl
mov
cltd
movsb
and
aaa
loop
and
mov
inc
rclb
cmp
jmp
mov
cmp
xor
outsb
sar
adc
mov
js
xor
mov
mov
andl
lret
mov
orl
inc
dec
jo
aam
sub
mov
outsb
mov
lea
movsl
cltd
xor
mov
jle
lret
mov
popf
mov
rorl
popa
es
add
fmul
and
add
inc
push
psubusb
sub
lcall
ror
mov
mov
ja
jp
jge
aas
mov
cmpsb
mov
divb
icebp
daa
pop
dec
into
out
mov
int3
ret
adcb
call
add
ds
pop
cmp
mov
in
dec
mov
xchg
push
xor
pop
mov
cli
pop
jnp
xor
adc
or
je
and
fstpt
arpl
call
sub
loopne
mov
push
outsb
jo
add
in
ret
or
pop
lahf
pop
aas
ret
lahf
push
push
sarb
stc
lds
mov
pop
lahf
sbb
aas
test
adc
or
or
cmp
sub
cmc
mov
mov
push
mov
repz
cmp
ret
mov
jbe
jnp
fwait
jp
push
fwait
insb
es
enter
fbld
jnp
or
pop
sub
or
xchg
and
lods
mov
dec
mov
cld
clc
stos
cmp
repnz
arpl
es
mov
jae
pop
xchg
pop
xor
inc
and
in
mov
ficomps
push
test
jnp
jo
and
xchg
mov
xor
push
fstps
test
push
adc
inc
and
ds
sahf
insb
dec
lods
stos
fisubrs
or
xchg
xchg
xchg
cmp
push
pushf
cmpsl
add
leave
jae
test
outsl
pop
mov
shl
or
xor
cmp
inc
into
add
aad
andb
mov
aaa
dec
and
push
addb
sbb
mov
mov
jb
testb
test
pop
pop
imul
stos
leave
cwtl
and
lods
insb
sub
mov
test
pop
pop
mov
frstors
fsubrs
out
push
das
xchg
std
jae
pop
push
andps
and
lock
xor
sub
sbb
mov
cmpsb
lods
dec
or
pusha
cmp
fistpl
jne
loopne
aas
xor
sbb
push
push
out
push
es
test
ljmp
dec
or
fistpll
xor
cli
and
dec
inc
mov
cld
mov
rcll
push
lahf
rep
lahf
push
add
xchg
add
pop
lock
iret
xchg
mov
adc
mov
scas
fstpt
or
rcrb
lcall
out
decl
repnz
imul
pop
xchg
adc
adc
xchg
jno
jo
scas
and
push
mov
jne
aaa
dec
adc
mov
ljmp
push
cli
rorl
push
lock
movl
movb
mov
jns
in
or
aam
inc
repnz
movsb
test
je
mov
push
xlat
mov
xchg
add
sub
jle
orb
adc
jns
loop
inc
xor
adc
pop
mov
mov
ja
flds
inc
lcall
ja
lcall
mov
cmpsb
mull
mov
fnstenv
insl
mov
inc
xlat
je
sahf
fwait
inc
shr
fildll
or
scas
sub
sub
mov
jbe
test
jo
fcoml
cmp
aaa
cmp
je
dec
pop
lock
imul
mov
pop
out
jns
insl
loopne
fdivs
sar
dec
or
or
outsb
push
cltd
fldl
frstor
pushf
sahf
pop
add
fwait
addb
loope
daa
fidivl
addr16
aam
dec
adc
xor
inc
xlat
ja
outsb
push
repnz
notb
mulb
imul
fstp
lods
mov
nop
or
and
lea
sbb
mov
jle
cwtl
sub
lods
cwtl
pop
and
mov
insl
xchg
mov
cmpsb
mov
cmp
cs
ljmp
test
inc
inc
mov
aaa
push
filds
daa
fwait
clc
imul
cmp
std
addr16
enter
cs
jle
out
xor
decb
cmp
inc
pop
mov
mov
out
gs
inc
mov
xchg
pushf
mov
inc
mov
adc
shrl
fmull
jmp
sti
fcomp
sub
mov
cwtl
aad
out
pop
repnz
jbe
jns
jl
stc
aas
inc
xchg
and
jb
sahf
arpl
xor
popa
lods
cli
andl
mov
dec
inc
xor
fcompl
mov
jbe
inc
xor
loop
xor
in
and
rcrb
and
into
movsb
aaa
insb
das
dec
xchg
dec
and
inc
mov
inc
outsb
mov
insb
loope
mov
dec
lock
outsb
xchg
scas
and
sbb
pop
pop
les
daa
or
mov
loope
test
popa
sbb
aad
mov
mov
mov
fnstcw
mov
mov
lds
daa
pop
ltr
inc
stos
or
push
dec
subb
movsl
popa
es
outsb
push
cwtl
sti
into
rol
pop
push
cwtl
addl
dec
inc
test
mov
movsl
scas
lods
inc
xchg
mov
lods
sti
testb
push
out
push
hlt
pop
jb
jo
sbb
dec
cld
aad
lock
scas
in
pop
lods
push
mov
cmc
dec
in
out
dec
pop
and
sti
outsb
add
pop
pop
mov
or
shll
xor
andl
cmpsb
dec
push
add
add
inc
push
aas
cmpsb
je
sub
sub
or
inc
leave
add
cmp
push
jo
lcall
fldcw
add
aad
out
or
mov
and
push
add
lds
stos
int3
inc
and
push
cs
dec
scas
cs
aam
dec
out
fwait
into
stos
inc
je
dec
mov
insb
call
mov
or
arpl
or
xchg
pop
out
int3
push
stc
cmpsl
pop
mov
sub
and
or
icebp
cwtl
mov
pop
hlt
or
aaa
leave
xchg
push
fildl
xchg
stos
out
lret
xchg
lea
dec
push
mov
test
xchg
xchg
fnstcw
push
loope
and
pushf
je
jne
test
xchg
outsl
lret
scas
rclb
stos
or
les
cmc
push
bound
push
jmp
jb
jp
jl
scas
fisubl
pop
mov
xchg
aam
popa
sbb
jecxz
xor
jmp
pop
mov
sbb
out
or
addr16
inc
mov
dec
arpl
sbb
js
mov
cmc
loope
cltd
test
mov
das
cmp
jnp
push
add
cmp
or
loope
outsb
test
mov
loop
mov
pop
pusha
sti
push
and
or
rorb
les
push
and
mov
jecxz
jecxz
pop
mov
mov
sub
cmc
outsb
jg
lods
inc
xchg
enter
xchg
rcrb
test
dec
lea
xchg
popa
das
sahf
mov
pop
rorb
aas
test
dec
dec
shlb
dec
jle
inc
aad
in
adc
data16
mov
sbb
jnp
pushf
push
and
nop
scas
pop
hlt
sbb
rol
cwtl
int3
js
repnz
or
sbb
stc
push
sub
ljmp
je
je
imul
dec
push
mov
xchg
jae
dec
mov
jb
ljmp
xor
add
and
push
sarl
inc
mov
lea
lret
jle
mov
xchg
jg
mov
jb
mov
in
pop
call
iret
mov
cmpsb
push
subl
lret
dec
les
ja
jne
mov
mov
mov
movsl
cmp
dec
pop
out
cmp
test
or
mov
mov
pop
leave
inc
mov
into
movlps
cli
push
push
jl
mov
push
adc
inc
rcrl
repz
sarl
inc
mov
push
lret
iret
cmp
es
insb
ret
pop
mov
aam
and
mov
fcoml
jle
nop
sub
mov
call
loopne
mov
repz
sbb
andl
and
mov
cli
mov
insb
jns
aaa
mov
push
mov
adc
cltd
mov
lret
popf
iret
or
out
stos
sbb
shrl
das
mov
inc
leave
shrl
add
sub
add
pop
dec
or
inc
cmpsb
addr16
xor
nop
mov
jne
or
test
push
xor
sbb
jne
mov
and
andb
icebp
mov
xchg
pop
mov
or
cs
rclb
cmpl
imul
adc
fistl
or
stos
xor
sub
mov
sub
sbb
aas
mov
in
pushf
aas
fbstp
mov
adc
xchg
cmp
daa
addr16
jp
xor
mov
out
mov
mov
inc
clc
int3
aaa
pushf
dec
sbb
or
add
gs
sbb
pop
enter
repnz
sbb
ds
fnstsw
inc
aas
or
jle
mov
dec
popf
in
or
inc
cmp
xchg
xchg
mov
scas
adc
aas
aad
data16
inc
mov
mov
xor
out
test
xchg
xor
mov
repnz
scas
ds
shll
and
jae
cmp
xchg
scas
xchg
outsb
push
cmp
mov
xor
sub
xlat
xchg
dec
sbb
add
mov
enter
push
add
xchg
xor
add
dec
fistl
and
push
add
aas
dec
adc
jp
cld
mov
int3
fs
outsb
mov
cld
cmp
mov
dec
int3
test
lds
rcl
sub
cwtl
mov
test
push
cmc
or
lcall
and
rcrl
out
ljmp
pop
movsb
mov
fnstenv
flds
or
cmc
cwtl
jnp
fwait
pushf
or
fidivl
mov
hlt
sbb
mov
lea
insb
fdiv
cmp
dec
adc
mov
cmpsb
clc
pop
pop
mov
jmp
or
loopne
push
out
pushf
out
fsubrl
add
repnz
lahf
clc
mov
mov
push
mov
mul
mov
pop
fsubrl
inc
dec
int
xchg
inc
iret
xlat
mov
mov
add
inc
jmp
adc
test
outsl
pshufw
aad
fwait
int3
mov
orl
idivb
inc
dec
sbb
and
sub
add
fcoms
int3
push
add
jne
push
xor
jecxz
dec
add
nop
ds
mov
shlb
mov
sbb
cmp
popf
rcll
jbe
inc
mov
out
pop
pop
aaa
fidivs
bound
mov
loopne
lock
test
mov
bound
sarl
loopne
cmp
mov
cld
mov
and
sub
cli
lcall
add
sbb
out
push
dec
addr16
xchg
dec
pop
inc
mov
push
add
out
ss
pushf
adc
pop
pop
imul
dec
cltd
cmp
or
and
sbb
xchg
jl
jmp
pop
outsb
or
sbb
sahf
nop
aam
and
out
jl
dec
push
negb
xchg
mov
loop
and
adc
insb
mov
push
scas
mov
inc
jecxz
sbb
mov
adc
xor
add
mov
and
inc
sub
inc
adc
pop
lods
add
lret
nop
std
repnz
rcrb
sbb
mov
je
inc
aaa
pop
repz
aas
stos
stc
mov
pop
popa
les
xor
dec
shrb
push
xlat
inc
fcmove
into
into
insl
pop
push
mov
xchg
mov
or
jno
xchg
push
or
jb
rcrl
ljmp
mov
mov
pop
popf
psubd
jno
push
xor
popa
cmpsb
movsl
rclb
jbe
jb
inc
sub
fstl
inc
cmpsb
iret
fs
sarl
dec
out
test
sub
lret
jno
jg
jmp
adc
add
test
cli
dec
xchg
fildl
adc
adc
inc
xchg
mov
xor
adc
enter
inc
xor
leave
mov
les
cmp
mov
add
push
push
jle
jge
sub
cmpsb
xchg
test
lahf
shrb
adc
out
jne
adc
inc
xor
push
lods
mov
pop
pop
pop
int
loope
rcrl
dec
es
loopne
fs
scas
xchg
scas
fwait
lods
xor
sbb
jl
add
les
repz
pop
or
lea
lea
data16
mov
ret
adcl
and
inc
je
dec
scas
inc
ret
xchg
or
cmpsl
mov
sbb
or
sbb
imul
loop
cmpl
inc
xchg
in
outsb
mov
cltd
jmp
jecxz
dec
mov
push
lea
mov
or
sub
cmp
shl
or
or
in
loope
push
cs
fisubs
jae
xchg
test
stc
xlat
push
scas
das
insb
movsl
rcrl
or
adc
or
jg
fisttpl
xchg
mulb
mov
mov
adc
adc
inc
addr16
imul
mov
loop
pop
rclb
aad
icebp
mov
repnz
nop
adc
nop
lea
test
mov
mov
enter
popf
aam
xchg
andb
adc
fcoms
pop
insb
xchg
lahf
pop
adc
mov
and
insb
dec
lret
and
gs
mov
leave
mov
adc
sub
jg
push
popf
aaa
inc
mov
je
fcomps
imul
in
mov
shrb
jl
cld
push
rcr
outsl
mov
mov
cmpsl
xchg
mov
aas
out
adc
mov
inc
iret
fs
sbb
pop
loopne
pop
jecxz
out
mov
leave
add
ret
pop
roll
lods
scas
flds
js
pop
popf
mov
fisttps
cmp
imul
and
loop
jae
repnz
add
adc
xlat
pop
push
sarl
or
mov
jne
jae
pop
add
lods
sub
mov
sub
xchg
fucom
cmp
notl
inc
jle
mov
pop
shlb
add
push
pusha
inc
and
fistps
mov
push
fldl
cli
or
mov
mov
jnp
lods
test
stos
nop
jmp
mov
scas
push
pop
in
cwtl
or
inc
inc
dec
jb
lock
dec
mull
divb
mov
mov
adc
inc
in
pop
xchg
mov
sub
jbe
js
fistps
in
mov
cmc
dec
mov
inc
scas
insl
dec
add
int3
inc
jmp
xchg
popf
cld
shlb
pusha
cvtps2pi
out
pushf
dec
or
outsb
ds
scas
dec
fucomi
test
pop
mov
mov
in
ret
es
js
gs
xor
mov
insl
lcall
xor
inc
xor
push
mov
test
push
dec
cld
inc
add
add
dec
bnd
xor
jne
in
ja
ret
dec
mov
cs
in
mov
push
cmp
sti
aad
pop
ja
xchg
sub
call
sub
repz
xorb
dec
add
xchg
stc
mov
cmp
sahf
rcrb
inc
out
orb
pop
jnp
jbe
or
pop
ja
cld
mov
daa
adc
pop
or
mov
stc
mov
cmp
jnp
push
clc
shl
or
cld
push
arpl
inc
adc
mov
fwait
mov
jae
dec
cmp
data16
jmp
and
cmp
mov
notl
mov
and
daa
and
les
adc
adc
or
cld
daa
xchg
cmp
xchg
mov
mov
rcll
adcb
sarl
sbb
cmpsl
push
pop
mov
mov
imul
pop
notl
mov
int3
fcmovbe
in
sbb
lahf
xor
push
out
mov
jmp
jno
loopne
pop
jbe
mov
les
adc
jne
jo
jmp
clc
test
pop
lods
adc
lahf
cltd
imul
jle
cwtl
inc
pop
setg
cmp
shlb
idivb
xchg
mov
pop
pop
adc
out
les
inc
fsub
fsubrs
in
imul
and
add
dec
lret
mov
adc
pop
iret
jne
pop
lcall
lea
mov
dec
rcrb
or
xchg
mov
pop
idivl
jmp
xor
pop
dec
imul
in
mov
aaa
lcall
mov
sbb
mov
or
cmc
jns
clc
sarb
mov
in
roll
movsl
inc
sub
test
inc
jno
ret
ds
lods
nop
sbb
mov
xchg
iret
mov
jg
aam
sti
aas
popa
adc
xlat
out
cmp
popf
out
fnstcw
cmp
jne
jmp
inc
pop
rorl
dec
daa
mov
mov
std
mov
cmp
ret
test
lret
mov
xor
mov
and
pop
push
mov
and
xchg
inc
fisubs
push
sbb
movsl
pop
jae
mov
jb
pop
insb
inc
aam
nop
add
int3
add
jmp
enter
nop
sub
sahf
movl
je
jnp
cmp
xchg
pop
into
dec
dec
cmp
jge
cmp
sub
test
xchg
and
nop
dec
adc
fstps
pop
cwtl
ss
sub
imul
and
jle
adc
lock
adc
mov
out
and
inc
icebp
jg
or
lret
push
jne
inc
jne
or
mov
popa
xlat
xor
idivb
test
xchg
dec
gs
jp
xchg
jg
mov
dec
popl
in
xorl
stos
inc
xchg
sub
mov
dec
push
inc
popf
int
xchg
pusha
adc
into
outsb
adc
jae
xchg
mov
sub
dec
dec
push
aad
test
imul
mov
or
add
and
sbb
call
ret
cmp
pop
mov
mov
out
pushf
push
dec
cmpsl
xchg
mov
test
add
jecxz
out
mov
dec
and
push
pop
xchg
lods
jmp
xchg
loope
leave
out
imul
rorb
js
xor
es
lret
lahf
mov
ljmp
ret
pop
pop
pop
push
dec
sbb
scas
lods
cmp
rcl
outsb
cmp
shl
jmp
fld
int
xor
pop
ss
cmpsb
loopne
in
sahf
lods
lock
push
pushl
jns
and
ss
fcmovnb
outsb
int
lahf
mov
pushf
adc
cmp
xchg
filds
xlat
jp
mov
and
lret
rorl
in
mov
das
add
inc
xor
int
cmp
inc
lds
int
jno
pop
and
stc
lahf
xlat
cmp
std
sub
adc
dec
xor
mov
test
inc
imul
jecxz
ret
daa
cmp
repz
fimuls
fnsave
sbbl
nop
mov
aaa
ljmp
shlb
andl
addr16
dec
ret
test
insl
movsb
pop
fnstsw
cmp
cmp
add
mov
incl
xchg
pop
rorb
hlt
mov
xchg
cmp
test
sbb
xchg
js
sahf
jns
popf
cmp
add
jns
lret
test
fs
xchg
or
adc
lock
imul
cmpsb
sti
das
subb
push
sarl
scas
sbbl
int
cmp
push
mov
cmp
and
jnp
push
ljmp
xor
add
aas
pop
mov
xchg
or
pop
ja
inc
flds
popf
mov
idivb
and
xor
in
es
xor
dec
movsl
inc
push
or
pop
mov
aad
mov
aas
iret
pop
pop
and
shll
inc
jne
lret
inc
sub
enter
jg
cmp
add
mov
xchg
inc
dec
xor
lahf
adc
xchg
jl
mov
xor
jp
andl
movsb
shlb
loopne
pop
jmp
nop
jb
pop
pop
xchg
clc
subb
push
mov
push
out
aad
mov
movsb
jle
push
push
mov
jno
xchg
push
in
cmc
out
scas
fdivl
data16
and
dec
scas
sti
popl
pop
cld
mov
pop
cld
push
xor
pop
mov
in
dec
add
je
sub
test
pop
sub
sahf
out
hlt
aaa
and
rolb
dec
lcall
mov
sbb
push
fstps
inc
bound
dec
cmp
out
fs
xchg
inc
insl
xor
push
push
dec
sti
push
hlt
jns
fstpl
mov
inc
popa
mov
fcmovb
inc
cs
xor
mov
push
loop
mov
cltd
into
xchg
lret
dec
das
stc
mov
push
adc
add
aam
faddp
or
or
pop
xor
xor
add
aad
pop
data16
mov
and
cmp
and
enter
mov
out
data16
mull
pop
fsubs
jge
dec
sbb
or
mov
ret
fwait
std
adc
es
push
mov
gs
fiadds
pop
movsl
testl
out
pop
inc
pop
dec
push
pmaxsw
xchg
lcall
push
fwait
insl
call
dec
sbb
insl
out
sbb
jle
xchg
imul
movsb
outsl
ds
int
rcll
jmp
std
jnp
mov
test
jp
add
fcomps
push
add
xchg
sbbb
sbb
inc
pop
add
push
cmc
es
fdivs
pop
inc
xchg
xlat
sahf
mov
fstpt
insl
mov
push
push
mov
jnp
jno,pn
dec
xor
adcb
mov
lcall
pop
fcom
dec
daa
ret
inc
mov
xor
xchg
mov
aad
jecxz
popf
loopne
inc
fsubr
js
adc
rorb
hlt
rcrb
push
dec
in
pop
call
enter
dec
lret
dec
popf
pop
fmul
fistl
enter
dec
outsl
pop
inc
mov
rorb
cmpsl
xlat
lock
fld
iret
ficomps
loopne
ficoml
xor
rcl
stos
loopne
rcr
fcomps
fwait
shll
inc
jnp
push
xlat
loope
pop
fstpt
popf
mov
rcrl
inc
and
sbb
push
sarb
push
cmp
inc
push
cmp
or
adc
in
xchg
cwtl
push
andl
insl
and
inc
jmp
das
add
and
lret
dec
stos
or
lcall
push
stos
addr16
and
cmp
jne
push
cmp
int3
pop
pop
pop
sub
inc
pop
call
push
cmp
mov
iret
lret
mov
jo
fisubrl
mov
in
icebp
lods
rolb
mov
mov
push
push
xlat
pop
pop
stos
cmp
inc
and
ret
cmp
pop
inc
fs
pop
mov
pop
repz
sbb
inc
ret
fsubrs
mov
pop
jo
xlat
sbb
ret
cmpsb
rorb
pop
inc
arpl
sbb
stos
fcomps
popf
shlb
lret
dec
or
xlat
jl
dec
cmpsl
into
enter
enter
dec
in
inc
lods
dec
in
pop
fmul
pop
pop
xchg
enter
dec
lret
dec
popf
pop
aam
fistl
lock
fcmovne
inc
pop
xlat
add
int
int
or
iret
fidivrs
nop
xor
add
fcomp
mov
dec
cmpsl
lds
pop
pop
fstp
popf
inc
or
out
push
fstpl
sbb
pop
push
sbb
mov
js
push
sub
fwait
push
std
loopne
mov
xor
sbb
mov
fidivs
sbb
shlb
add
mov
sbb
fldt
imul
dec
dec
sub
push
dec
imul
pop
aad
sbb
pop
cmp
lea
pop
dec
inc
sbb
negb
movsl
in
rcrb
pop
js
sti
and
ds
je
pop
jno
imul
mov
cli
cli
js
in
loopne
pop
dec
enter
cmp
addr16
out
lret
in
xchg
pop
lea
jecxz
in
jmp
jne
mov
sbb
xor
mov
loopne
push
lods
pop
in
mov
in
je
mul
and
push
or
push
mov
adc
clc
ret
pop
add
jne
lods
imul
xchg
lds
lds
fnstsw
pop
repnz
xor
sub
jbe
and
bound
push
mov
rcrl
and
jl
fwait
cmp
cmp
xchg
mov
int3
add
je
mov
push
jmp
xchg
ja
cs
negl
jp
mov
mov
adc
push
mov
xchg
gs
add
mov
sti
mov
mov
mov
jmp
mov
xor
sub
mov
daa
inc
inc
dec
cli
cmp
stc
ret
fsubrl
test
outsb
popf
push
call
push
ret
jmp
pop
dec
icebp
dec
jb
xchg
adc
fsubs
or
fwait
loope
cmpsl
cmp
pop
add
movsl
nop
push
inc
fldcw
out
aas
leave
and
scas
inc
dec
push
repz
movsl
aaa
aad
enter
ror
jp
jmp
push
inc
pusha
add
scas
sbb
jmp
int
jo
cmp
jae
inc
jle
scas
cltd
lods
mov
and
mov
clc
adc
adcb
leave
std
clc
mov
adcb
and
xor
mov
.byte
sub
add
add
add
inc
orb
xor
or
dec
orb
pop
orb
add
add
dec
orb
pop
orb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
