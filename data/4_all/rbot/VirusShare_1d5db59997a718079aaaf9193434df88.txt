frstor
es
push
imul
xchg
lds
or
jne
xlat
lds
cmpsl
pop
dec
cmp
lds
push
in
ret
sub
fmul
dec
cmp
inc
mov
jo
shl
mov
ja
nop
aam
push
roll
in
push
cltd
sbb
mov
sub
rolb
in
xchg
xor
insl
inc
adc
repnz
inc
adc
jmp
inc
dec
addb
add
mov
popa
mov
xor
or
xchg
adc
clc
jnp
leave
movb
movsb
sub
or
adc
lcall
add
jo
lods
fstp
outsl
aad
and
cs
jl
mov
jae
jne
adc
inc
out
cld
add
and
aam
xchg
xor
adc
leave
std
xchg
cmp
ds
movsl
adc
adc
popa
or
mov
cmpb
aaa
es
ds
pop
repnz
push
dec
pop
jb
mov
lock
xchg
cli
mov
fimull
cltd
cmp
mov
adc
out
or
test
dec
outsl
fimull
scas
mov
jnp
fcmovnu
fs
in
and
and
stos
mov
movsb
ficoms
fimuls
lcall
out
push
jp
in
aaa
jbe
aas
fs
incl
push
fsubs
sti
mov
inc
lcall
sbb
xchg
or
shl
mov
cltd
arpl
repnz
and
mov
xchg
mov
mul
push
jmp
inc
mov
sahf
jo,pn
mov
into
jg
mov
in
loope
inc
shlb
loopne
xchg
idiv
jecxz
js
sahf
cmp
and
rcll
or
data16
push
xchg
nop
dec
mov
imul
mov
pop
cmp
ret
out
xlat
cmp
pop
adc
and
outsb
lahf
fwait
jno
jmp
push
jno
cmpsl
push
jbe
lods
out
mov
nop
mov
xchg
or
cs
or
mov
jb
xor
mov
fnstsw
sub
lock
pop
inc
repnz
mov
aam
adc
inc
insl
cwtl
pop
sbb
and
in
push
push
test
lret
es
or
aaa
daa
pop
jle
pusha
test
fisubrl
adc
out
sbb
mov
inc
outsl
fistl
shrl
xlat
movsl
jae
pop
fisttpll
mov
push
mov
mov
push
xor
inc
pop
fnsave
outsb
lock
ret
repnz
push
addr16
sub
and
pop
pop
jns
jne
push
push
xor
aaa
inc
or
sub
js
out
push
mov
addl
lret
fnsave
testb
shlb
push
aaa
pop
stos
outsl
push
mov
sbb
outsl
sbb
dec
in
lahf
mov
pop
add
aam
dec
lret
pusha
test
icebp
push
cmp
test
jae
mov
xchg
sbb
push
inc
iret
add
jb
dec
jle
cwtl
mov
fxtract
insb
pop
dec
stos
xchg
cmp
jle
jnp
lcall
mov
loopne
pop
xor
sub
xorb
cs
add
pop
sub
iret
mov
movsb
adc
pop
mov
xlat
test
mov
sti
xchg
shll
xchg
or
rcll
andl
sub
and
cwtl
xchg
sub
and
mov
subb
inc
popa
pop
pop
mov
xor
arpl
js
imulb
gs
mov
cwtl
out
mov
loopne
mov
pop
inc
cwtl
daa
icebp
imul
xchg
cli
cmp
pop
xor
mov
addr16
cwtl
nop
cwtl
pop
push
mov
cltd
sahf
scas
push
xor
xor
lret
mov
mov
mov
icebp
enter
cmpsb
xor
mov
dec
fldenv
sbb
jg
xchg
in
jp
loopne
test
ds
insb
bound
mov
mov
cmpb
into
add
mov
mov
adc
jo
inc
loope
dec
int3
cmp
fs
dec
insb
loop
mov
into
add
push
aad
cltd
dec
jns
push
xchg
inc
pop
ret
mov
pop
pop
or
loopne
mov
ja
cltd
xchg
cmpsb
mov
push
sbb
movsb
repnz
fdivs
mov
fdivrl
dec
aad
inc
outsb
out
rolb
cmp
cmp
fsts
and
mov
pop
cmc
test
xor
fistps
clc
push
aaa
subb
ret
shlb
push
push
push
pop
sbb
inc
push
rcl
in
scas
jl
mov
movsl
xchg
cmp
mov
sbb
pop
sub
int3
arpl
pop
mov
sahf
lods
mov
aad
and
mov
ret
std
dec
and
push
mov
cmp
mov
lahf
jb
mov
cmp
and
or
gs
adc
add
dec
mov
fsubrs
mov
out
cmpsb
adc
sbb
inc
xorb
jo
mov
lds
mov
pushf
js
mov
jns
mov
mov
mov
push
mov
lret
loop
lret
add
push
scas
sbb
mov
imulb
or
sbb
push
ja
cmpsl
test
out
inc
pop
pop
ljmp
and
fs
xor
lret
add
jl
popa
test
outsl
lods
cli
jg
sbb
jg
movsb
and
leave
out
push
dec
mov
cmp
and
jae
add
loopne
shlb
push
mov
test
push
jno
lahf
dec
clc
bound
inc
fidivrl
insb
pop
jns
aam
xor
mov
add
push
in
cld
adc
int3
push
aam
stos
stos
cwtl
mov
test
addr16
sub
decb
sbb
push
mov
inc
mov
jae
and
insl
pop
arpl
ret
sbb
orb
sub
aaa
lret
dec
pop
mov
outsb
inc
sub
jbe
add
mov
push
mov
xchg
or
test
cmp
xor
rcll
outsl
popa
in
push
popf
jge
xchg
xchg
jecxz
js
dec
fbstp
cmp
inc
ss
addb
jbe
stos
jl
sub
scas
sub
or
mov
xor
or
xor
call
add
repz
sbb
add
lret
inc
or
in
sbb
mov
inc
les
sub
imul
push
fucom
imul
ror
push
sbb
adc
gs
fildl
add
jp
adc
setns
add
sbb
xchg
ds
pusha
and
add
mov
fcmovnu
js
xchg
imulb
push
inc
mov
jecxz
icebp
pop
paddb
mov
dec
loope
add
mov
fnsave
clc
loop
cltd
jle
popf
mov
mov
sub
mov
sbb
dec
sbb
mov
adc
push
adc
adc
mov
pop
add
sbb
fstpt
dec
pop
pop
dec
jg
sub
xchg
dec
and
popf
sub
mov
fsubs
into
cmc
mov
jg
sbb
leave
sbb
dec
mov
movsb
out
mov
outsb
or
cmpb
pop
cmp
mov
repnz
mov
lcall
sub
pop
dec
dec
dec
jl
test
mov
sub
mov
inc
sub
lcall
jo
ret
scas
loope
sub
xchg
inc
cmp
or
packssdw
push
rcrb
push
lds
xchg
and
stc
inc
mov
fs
js
jp
js
jns
leave
inc
adc
cmp
cli
aad
std
ja
mov
imul
inc
inc
jae
stc
addl
pop
insb
pop
sub
imul
add
fs
or
in
lea
in
add
xchg
test
xchg
cli
push
leave
inc
mov
es
daa
mov
push
pop
lret
xchg
fwait
add
mov
negb
jo
flds
jbe
jmp
aas
pushf
lods
push
dec
and
dec
pop
ret
cvttps2pi
int
je
adc
es
outsl
jmp
xor
aam
sbb
dec
mov
lods
mov
lret
outsl
xchg
mov
push
pop
mov
pop
nop
dec
sub
fwait
or
add
jecxz
and
push
gs
adc
push
movsl
repnz
rol
xchg
pop
mov
fidivs
inc
pop
mov
or
fwait
lock
and
sub
mov
jbe
jnp
mov
mov
push
and
sub
mov
push
fidivrl
xchg
mov
mov
add
test
nop
nop
je
jp
int
inc
sbb
bound
add
sbb
mov
addr16
add
int
dec
repnz
mov
push
dec
sahf
mov
in
sbb
jne
or
div
inc
mov
bound
pop
jp
sti
mov
out
xchg
mov
aad
mov
pop
ret
mov
or
cmp
in
and
adc
jl
out
pusha
cmc
je
pushf
ja,pt
addr16
imul
cwtl
sub
mov
fistpl
fsubrs
imul
in
xor
sti
negb
add
jb
fadds
stc
icebp
test
mov
inc
inc
mov
and
sbb
xor
outsb
push
inc
mov
inc
ds
mov
gs
pop
jno
cmpb
es
test
fldt
inc
fsubrs
jo
sbb
cli
cmp
sbb
fldt
stc
mov
or
mov
rclb
hlt
sub
sub
inc
xor
cmp
xlat
outsl
not
push
fcomi
in
push
mov
mov
cmc
fists
insl
push
js
sub
or
sarl
dec
hlt
cs
dec
xchg
mov
into
sub
jmp
mov
lcall
fwait
jp
mov
cmp
xchg
aad
inc
in
pusha
ja
ret
and
retw
pop
jmp
test
mov
pop
inc
movsl
js
inc
inc
gs
sbb
xchg
in
incb
shll
repnz
mov
push
mov
pop
repz
sbb
out
lods
scas
lock
xchg
xchg
mov
cmp
xor
jle
add
imul
cmpsb
clc
notl
xchg
adc
sub
pop
inc
addr16
push
push
sbb
mov
dec
aaa
mov
out
nop
pushf
or
and
and
in
pop
insb
pop
jge
lret
or
or
adc
mov
outsl
pop
sub
mov
popl
cmpsl
testb
sti
add
sti
push
ja
in
mov
jmp
jbe
or
mov
inc
mov
outsb
fcomps
jae
in
dec
rol
jl
dec
pushf
adc
ret
inc
mov
jp
push
mov
in
push
fs
jo
jns
dec
add
xchg
adc
aam
ljmp
adc
pop
bound
jns
lods
inc
rep
dec
sahf
cwtl
cli
sarl
ret
sub
mov
xchg
data16
mov
mov
cli
or
aas
fs
xor
aaa
sahf
lcall
and
jp
inc
cmp
cmpsl
and
imul
mov
daa
push
mov
rolb
add
cs
fcoms
or
sub
cmp
lods
xchg
add
imul
sbb
cld
lods
fcoml
sbb
mov
jno
adc
movsb
or
cmp
mov
mov
mov
lock
mov
or
pop
lret
cwtl
data16
rcll
mov
pop
or
mov
push
and
adc
ret
sbb
xorb
mov
or
stos
push
mov
lock
push
je
std
push
in
cmp
mov
xchg
xor
xor
pop
in
xor
hlt
stc
jnp
or
mov
pop
addr16
stos
dec
mov
xchg
xor
call
stc
icebp
cmpsl
sbb
sti
dec
sarl
adc
ds
cld
xlat
adcl
mov
mov
lock
pop
mov
ja
inc
inc
xchg
ret
ds
push
mov
lds
and
push
mov
pusha
xor
adc
lock
psubusb
push
test
sbbb
cmp
in
jbe
push
pop
push
jp
into
fcmovne
std
lcall
icebp
dec
jge
dec
je
je
mov
loopne
mov
xchg
mov
fstps
lds
loope
pop
data16
push
lret
cmpsl
out
imul
ret
lcall
add
lahf
loope
int3
xor
xchg
add
ret
sbb
mov
inc
pop
xchg
xor
pop
xor
leave
push
xchg
lock
repnz
js
lea
fildll
cmp
into
sub
test
movsl
testl
pop
in
fcomp
gs
push
and
add
sub
dec
daa
push
sub
cmp
popa
sti
loop
aaa
lods
mov
sbb
sbb
cmp
mov
dec
ja
enter
cmpsb
pop
xor
jp
std
inc
or
dec
jl
sbb
cmp
cs
or
or
addl
ljmp
sub
mov
stc
add
jno
lret
lret
push
mov
cmp
xchg
ficompl
pop
adc
cld
dec
add
push
adc
pop
push
jns
sbb
outsl
mov
xchg
dec
push
jmp
bound
mov
mov
in
pop
jecxz
cs
push
adc
insl
mov
and
mov
scas
lods
dec
push
in
push
mov
mov
ss
inc
int3
ja
or
es
push
lret
sub
jae
dec
movsb
nop
and
inc
mov
cltd
sub
push
xor
xor
jbe
mov
dec
xor
popa
addr16
push
mov
lea
insl
add
pop
xchg
divl
mov
fstl
jnp
mov
daa
inc
fsubrl
jnp
pushf
xchg
and
or
push
aaa
loopne
mov
dec
mov
xchg
jns
scas
subps
jae
inc
jg
push
stos
sub
push
icebp
jb
or
movsl
push
push
scas
add
xor
dec
and
xchg
mov
adc
jge
add
shll
nop
lcall
stos
das
jmp
sbb
sub
sarb
loopne
cmp
mov
pop
lods
loopne
lock
andb
popa
push
mov
cmp
mov
add
call
push
out
dec
push
stos
push
push
pop
pop
sbb
or
popa
std
xor
sbb
ret
jg
fcmovnu
fists
ja
pop
ds
insb
adc
ret
fcoms
push
mov
clc
and
pop
mov
dec
cmp
hlt
stos
dec
shll
insb
pop
adc
and
scas
mov
or
add
insl
cwtl
sbb
xchg
push
inc
jge
xorb
std
dec
div
push
lcall
and
fwait
sub
xchg
or
xor
shr
icebp
pop
jns
jp
jmp
insl
fsubrp
lds
mov
aaa
cltd
lcall
test
mov
hlt
mov
inc
xchg
in
sub
or
movsb
push
addr16
add
lcall
stos
pop
jmp
clc
xchg
mov
pop
int
mov
stc
mov
push
and
jae
mov
cli
and
into
fcmove
sbb
adc
repnz
bnd
xor
adc
push
mov
mov
add
inc
xor
stos
daa
dec
loope
es
sbb
jno
pushf
outsl
loopne
addr16
ljmp
nop
adc
inc
dec
ficoms
out
mov
lret
jae
movsb
fwait
xchg
in
lods
pushf
arpl
push
mov
mov
dec
inc
xor
sarb
mov
jg
les
test
fldl
fcom
fidivrl
and
cmpsl
test
or
bound
sub
das
in
add
fldcw
dec
mov
loopne
data16
push
inc
shlb
push
xchg
mov
mov
lock
cli
cs
lods
negb
out
sbb
mov
jb
jno
add
and
inc
mov
mov
and
or
and
jns
and
inc
imul
dec
dec
out
es
pop
daa
filds
sti
sbb
push
ret
push
ficomps
fst
xchg
xor
adc
push
lea
popa
sti
jmp
jb
xor
stos
pop
sbb
xchg
pop
into
push
xchg
sbb
mov
lret
mov
dec
gs
sarl
ja
sarl
les
jp
test
je
sahf
xchg
jne
lods
int
decb
and
ds
movsb
add
dec
rolb
popf
push
and
jb
mov
cmp
sub
lcall
cmp
insb
mov
scas
xor
stc
scas
fwait
inc
mov
push
pusha
inc
add
sub
out
out
subb
shlb
mov
rol
shl
mov
es
sarb
stos
mov
mov
push
rorl
ror
cltd
push
in
inc
or
xchg
ss
in
mov
mov
lods
mov
jmp
aam
adc
in
and
jg
add
mov
pop
jecxz
test
andl
mov
ja
andl
sub
xchg
pop
out
adc
sub
cs
daa
bound
sub
ror
in
and
rolb
sahf
into
scas
jle
repnz
sbb
lea
fwait
xchg
xor
mov
jle
stos
mov
jp
cltd
cli
xsetbv
cmp
or
cmp
jle
mov
loope
xlat
std
xchg
xor
cmpsb
add
lock
inc
in
sahf
bound
lds
jns
scas
aam
std
leave
sti
adcl
dec
pushf
dec
outsl
push
es
repz
xor
mov
ret
mov
or
dec
decb
push
std
repnz
jmp
mov
push
or
lcall
ja
sub
pusha
movsl
mov
pop
pop
pop
sbb
jp
pop
dec
xchg
add
js
and
or
xchg
movsl
in
sbb
jbe
pop
nop
fimull
mov
es
inc
cmp
xor
cltd
dec
jecxz
loop
and
mov
test
jp
pop
lea
jnp
pop
and
int
add
lods
mov
push
shll
js
das
lods
lret
arpl
cmp
mov
mov
sbb
inc
jne
test
rorl
cmp
popa
inc
fmull
and
popf
cmpsb
out
mov
pop
jl
imul
and
popa
add
fidivl
std
ds
sbb
lcall
jae
push
rcrb
and
cld
mov
push
push
adc
test
pusha
add
xchg
or
jl
clc
ss
in
in
dec
lock
xor
mov
inc
shlb
call
cmpsb
fs
add
out
sbb
loope
fildll
adc
push
pop
mov
cli
sti
daa
inc
fldl
imul
test
and
mov
inc
or
mov
xchg
dec
inc
imul
sbb
xor
sahf
ror
gs
pop
sbb
dec
arpl
rcll
push
mov
out
daa
sub
pushf
or
stos
mov
dec
repnz
arpl
add
pop
pop
sub
in
fs
adc
lock
mov
adcl
sbb
xor
dec
add
fadds
lods
cmpsb
add
or
mov
inc
in
mov
mov
pop
mov
xchg
sahf
cmp
lods
stos
fs
jle
adc
jp
fs
ja
xor
sbb
cmp
mov
pop
dec
test
push
mov
add
js
test
lret
inc
cmp
je
pop
lods
xchg
dec
fcomi
jae
mov
or
jp
xchg
push
sbb
lods
test
dec
in
test
test
lahf
movsl
test
stc
icebp
add
jg
sbb
je
test
push
xchg
addb
rol
insb
aad
loope
insb
xchg
push
fsts
jb
jae
mov
adc
push
cmc
and
pop
lds
pop
gs
jg
jns
sbb
repnz
loopne
movsl
clc
and
push
cmc
lret
rol
bound
repnz
es
mov
mov
leave
xor
xchg
loope
stos
enter
jno
inc
xchg
in
mov
cltd
mov
sti
lret
orl
pop
push
shlb
jmp
cmp
xchg
fstp
add
int3
incb
dec
fists
push
cmpsb
in
dec
ds
repz
sbb
add
push
mov
or
insl
sub
xchg
push
repz
or
cmc
aad
adc
sub
testb
pop
fstpl
mov
sbb
or
cli
pop
adcb
mov
iret
or
seta
add
xor
stc
dec
in
mov
jb
pusha
arpl
add
push
mov
sbb
negb
push
out
into
shll
cwtl
dec
inc
les
mov
insb
fdivrl
xor
loopne
and
movb
stos
pusha
sti
jb
out
push
repz
mov
jl
pop
push
ds
sarb
movsl
out
add
and
pushf
adc
xchg
pop
test
test
xor
dec
push
add
loope
ret
loope
test
mov
outsb
sub
pusha
frstor
cmpsb
mov
scas
outsb
out
shll
mov
add
dec
jb
xchg
ss
jle
mov
dec
pushf
fs
pusha
mov
jl
jo
sbbl
pop
loopne
imul
adc
cmpsb
mov
fisubs
xchg
nop
insb
lock
out
roll
push
daa
rclb
sbb
imul
stc
fisubrl
cmc
xchg
test
mov
sub
push
imul
shll
jo
lock
mov
and
sub
and
dec
pusha
jmp
fisttps
test
jmp
addr16
pop
lret
out
xchg
out
xor
or
or
lods
mov
sbb
cmp
lods
aaa
insl
pop
sbb
fisubrs
mov
jp
mov
mov
push
cmpsb
mov
push
insb
push
mov
xchg
xor
adc
ja
enter
ja
lods
sub
xor
repnz
shll
mov
mov
mov
and
loopne
nop
pop
pop
push
or
mov
pop
pop
pop
push
fnstcw
add
mov
arpl
mov
xor
fnstenv
pop
and
xor
pop
sub
sti
mov
test
mov
sbb
mov
jge
scas
xor
push
push
outsl
fcmove
incl
mov
pop
clc
std
lret
or
adc
fs
mov
shll
das
mov
add
out
push
in
idivb
jne
pop
imul
in
inc
cli
js
cwtl
mov
repz
mov
pop
dec
ljmp
dec
mov
pop
loope
pop
pop
bound
mov
push
sarb
aam
adc
sbb
fwait
out
sub
inc
enter
aaa
adc
std
sub
shrb
add
or
js
nop
inc
addr16
xchg
and
pop
das
hlt
fistps
push
xor
sbb
add
hlt
xor
jns,pn
cmp
push
push
mov
push
sbb
mov
or
push
add
aad
jno
pop
sbb
mov
in
dec
jo
gs
jecxz
por
and
out
in
jge
pushf
mov
push
and
and
or
ljmp
cmp
jbe
cmpsl
cmp
and
inc
rolb
mov
mov
shlb
push
inc
xor
jns
mov
xor
or
push
mov
sbb
mov
enter
jo
outsb
loope
cmp
bound
addr16
je
push
mov
dec
mov
adc
cwtl
jne
mov
adc
addr16
scas
fwait
and
inc
pop
test
ja
push
pop
mov
test
pop
push
setb
mov
out
mov
loope
xor
push
mov
aaa
jmp
pop
sub
cmp
or
sbb
sub
dec
ret
das
inc
fstps
mov
add
mov
je
dec
sub
rorb
dec
testb
cld
dec
arpl
out
ja
out
int3
scas
or
sub
loop
das
jnp
scas
aas
imul
inc
push
push
int3
rorl
push
jae
adc
mulb
add
test
mov
push
and
stos
sbb
xchg
adc
outsl
dec
or
cmp
mov
or
dec
and
inc
lret
js
mov
dec
cmp
je
loopne
adcl
std
shlb
pop
dec
mov
add
dec
adc
xchg
fstps
ret
sbb
adc
out
orl
push
ss
sub
jbe
push
iret
mov
xor
mov
inc
push
adc
pop
xor
fwait
jl
or
dec
into
nop
js
inc
xorb
aas
xchg
fstps
push
shr
test
fnstsw
je
jl
jle
adc
mov
inc
mov
fadd
jbe
cmpsl
cli
inc
popf
xchg
xchg
fldcw
iret
pop
jb
hlt
enter
push
rorb
cmpsl
sbb
cmc
xchg
pusha
pusha
inc
stc
jno
daa
out
sub
adc
sbb
and
ret
test
pop
aas
jle
dec
jnp
xchg
jecxz
mov
fs
inc
adc
int
or
sbb
addr16
sbb
fimull
lods
push
pop
adc
add
push
enter
cltd
in
xchg
jmp
gs
cmpsb
mov
test
mov
push
mov
add
int3
imull
pop
xlat
je
and
aaa
xorb
mov
inc
xor
mov
ds
mov
lahf
fisttps
push
pushf
jns
mov
cmpsl
sbbb
or
sub
or
ret
movsb
enter
outsl
and
scas
and
sub
xor
cli
mov
cmp
movsb
mov
aaa
pop
fsub
cltd
mov
out
push
xchg
sub
test
ss
dec
mov
jle
cmp
loop
andb
rclb
jno
popf
test
repnz
jns
sbbb
inc
lahf
outsl
cmp
dec
push
xor
std
nop
jp
pop
rorb
dec
cmp
repz
das
test
fwait
jge
inc
and
icebp
sbb
aad
push
jns
daa
xchg
lds
roll
lahf
push
mov
sti
inc
mov
aad
mov
xchg
xchg
xor
loope
test
cmp
push
mov
add
dec
mov
cmc
rorl
fidivl
pop
movsl
loopne
add
arpl
mov
push
xchg
in
dec
push
dec
pop
and
cmp
inc
test
movsb
in
sbb
lods
into
addr16
jmp
adcb
ja
ds
sbb
jnp
les
mov
mov
test
ss
and
lret
adc
adc
push
mov
arpl
xchg
pop
xor
mov
mov
mov
ds
in
imul
outsb
popa
push
movsb
sbb
shl
sub
rorl
popf
cmc
jl
cmpsb
pop
jno
jns
leave
inc
xchg
jge
js
nop
inc
jl
mov
movsl
sbb
dec
jbe
mov
out
lods
ret
popa
aad
push
movsb
inc
fisubrs
popa
mov
js
mov
ret
movsl
ja
mov
dec
mov
cmc
mov
xchg
js
mov
jg
shlb
loope
sbb
sbb
jne
enter
dec
push
les
mov
es
inc
pop
fcoml
add
cmp
and
jbe
dec
jmp
or
mov
pop
adc
repz
mov
push
lock
in
shlb
jle
lock
adc
and
aaa
lods
test
xchg
bound
sbb
call
js
aam
xchg
sub
and
movsl
mov
test
test
push
iret
andb
adc
push
dec
stos
nop
or
mov
and
fildll
jbe
lcall
ficoml
lods
inc
out
xlat
and
pop
imul
pop
mov
xor
scas
test
xor
push
lcall
and
pop
clc
mov
jb
outsl
cltd
pop
sbb
fisubrl
inc
inc
int3
fisubrs
cmp
cmpsb
mov
mov
sbb
sahf
cvtps2pi
pop
dec
lds
lds
repz
pop
popf
outsl
fisttps
mov
inc
insl
shlb
pushf
in
pop
cli
mov
call
dec
or
push
pusha
je
iret
rep
or
ds
loop
mov
inc
push
mov
test
dec
fs
scas
movsl
stos
xchg
adc
testl
rclb
mov
inc
jge
ja
ret
sahf
xchg
addr16
lcall
into
push
xchg
xor
mov
aam
pop
ror
fwait
push
sbbl
mov
inc
cltd
cltd
fsubp
out
subl
repnz
lods
jecxz
or
inc
mov
push
pop
sarb
and
int
xor
enter
ss
xchg
xchg
and
scas
adc
dec
lds
stos
pop
push
int3
scas
pop
push
fcomps
inc
sahf
rcrl
mov
mov
sub
mov
jle
dec
jp
push
pop
enter
je
add
insb
lret
jp
adc
xchg
mov
mov
cmp
or
lods
sub
and
jg
outsl
addb
clc
addr16
or
pop
or
xor
jbe
add
mov
fsubs
jns
push
imulb
sub
add
aaa
or
call
fistl
enter
and
jne
test
nop
and
jnp
out
ss
xchg
lahf
pop
insl
hlt
mov
pop
das
push
xor
or
fs
xchg
pushf
xchg
xor
dec
rep
scas
ljmp
sbb
add
sar
adc
jne
jbe
cmp
scas
ret
mov
mov
dec
and
dec
dec
sarl
cmc
push
push
push
pop
fs
xor
sbbb
pop
rorb
imul
stos
neg
int
fldcw
mov
xor
pusha
sub
mov
ror
ljmp
push
push
inc
inc
add
negb
push
data16
jecxz
lahf
jno
sahf
in
adc
push
loop
fdivrp
push
lcall
push
dec
adc
or
jmp
inc
rcl
push
cltd
pusha
bound
xchg
outsl
lret
adc
fdivrs
and
jae
jl
ljmp
je
mov
push
jno
pop
xchg
xchg
outsl
xor
mov
xchg
std
fs
imull
mov
mov
rcrl
lcall
lock
lret
xchg
daa
mov
mov
fcomps
fwait
test
and
mov
push
hlt
mov
push
mov
pop
out
jg
mov
xlat
imul
pop
dec
push
orl
jge
fdivl
mov
xchg
mov
xor
fistps
gs
fnstsw
mov
xchg
out
arpl
imul
stos
incl
adc
and
icebp
and
xor
push
push
movsl
int
repnz
leave
clc
inc
pop
adc
jg
pop
inc
pop
push
aaa
sarl
mov
xor
mov
pop
ret
jmp
pop
cli
mov
call
mov
icebp
mov
sahf
out
loopne
mov
xchg
movsl
sub
mov
xchg
push
sbb
cmp
mov
repz
dec
adc
add
mov
push
jg
mov
push
add
add
outsl
jp
inc
in
test
xchg
popf
sar
rcrl
lods
in
or
mov
scas
xchg
outsb
cmp
add
jge
xlat
sub
icebp
mov
pushf
cmp
cltd
mov
add
test
xchg
inc
mov
mov
bnd
arpl
mov
mov
fadds
lahf
dec
add
sub
int3
mov
sarl
pop
mov
inc
ds
sub
cmp
add
fisttpll
cmpsb
dec
push
cltd
adc
fadd
addr16
addb
sbb
nop
cmp
sub
push
jnp
cmpsl
sbb
xchg
pop
mov
icebp
pop
movb
push
push
dec
insb
call
pmaddwd
lcall
movntq
cmpl
push
dec
stos
mov
xchg
jo
push
xchg
inc
sbb
lods
in
and
or
notl
jnp
and
push
mov
into
and
cmp
int3
mov
push
outsl
or
xchg
stos
mov
jbe
icebp
sub
mov
and
pop
into
mov
pop
and
mov
out
subl
stos
push
pop
jnp
push
pop
cmp
and
pop
mov
and
arpl
cmp
inc
jp
cmp
lods
xchg
repnz
jl
sub
sub
sub
jge
cmp
out
seto
push
cltd
sbb
push
mov
adc
mov
xchg
das
lcall
nop
sub
aas
jmp
rorl
fwait
cmp
int3
cmpl
and
mov
mov
idivb
ret
adc
push
pop
inc
aaa
scas
jnp
and
cmpsb
test
jno
int
popf
mov
push
sub
pop
call
inc
lret
popf
jb
hlt
aad
std
xor
repnz
xchg
pop
jns
pop
and
cmpsl
mov
mov
cld
jno
and
xchg
aam
loope
dec
and
data16
jae
popf
mov
adc
push
xor
xchg
mov
int
dec
imul
ret
stos
or
loopne
nop
mov
fwait
dec
loopne
lret
clc
je
fmulp
gs
dec
lcall
sub
dec
push
inc
dec
add
inc
js
repz
pop
dec
test
popf
cmp
fsts
lock
sub
adc
push
mov
mov
popa
xchg
push
js
int3
sbb
cmp
fisttps
aaa
popa
or
call
popw
and
lret
test
dec
insb
rcrl
push
add
je
testb
xchg
rolb
mov
je
cmpsb
mov
mov
lea
add
push
inc
push
insl
push
in
pop
incb
jb
push
mov
sbb
pop
mov
dec
fs
xor
xor
aas
adc
scas
daa
jp
mov
inc
mov
xchg
add
ret
in
stos
push
inc
push
push
xchg
pop
dec
push
jl
add
sub
sti
pop
push
sub
dec
and
or
cmpsb
dec
shr
outsl
fiadds
push
dec
ffree
adc
inc
std
repnz
mov
loope
in
inc
add
scas
lret
cmp
sub
pop
add
dec
shrl
xchg
mov
push
push
mov
jecxz
pop
xchg
and
jl
xchg
iret
and
ret
sbb
xor
notb
pop
stos
xor
sub
cli
lcall
ljmp
das
bound
adc
xchg
mov
mov
dec
arpl
int
xorb
xchg
sti
in
fstpl
sbb
jg
sbb
int
pusha
mov
clc
lds
scas
sub
jle
pop
adc
mov
call
int
inc
mov
fimuls
lret
sbb
les
scas
mov
xchg
test
stos
xchg
mov
jge
xor
test
inc
push
fwait
popa
push
out
mov
test
sub
aam
push
sbb
out
dec
nop
jmp
inc
outsb
inc
inc
cmp
sub
adc
xchg
cld
movsl
pop
outsb
xchg
jne
cmp
xchg
mov
mov
add
jg
lods
pop
sbb
aam
in
test
xchg
shlb
decl
adc
ja
in
orb
lods
mov
add
in
jnp
jmp
outsl
mov
call
leave
mov
cs
andb
popf
rorl
adc
pop
or
or
inc
cmc
cltd
mov
aam
leave
aas
sbbb
aam
xchg
mov
pusha
mov
scas
push
stc
ficoml
dec
sbb
int
imul
test
sbb
ret
nop
movsl
enter
sub
ds
cmp
cld
sbb
dec
hlt
fildll
adc
aaa
mov
pop
push
scas
add
or
dec
xchg
sub
mov
xor
stc
or
outsb
cmp
adc
push
divl
shlb
adc
pop
jg
out
sti
ss
mov
push
mov
mov
mov
es
fsincos
inc
or
sbb
enter
xlat
rorb
push
pop
hlt
xor
sbb
insl
addl
data16
rcrb
mov
sub
loop
sub
out
dec
mov
push
sahf
inc
jmp
mov
std
cmp
push
mov
mov
out
fidivrl
xchg
ss
sahf
and
sarb
pop
mov
adc
fisubl
sub
std
mov
or
mov
cli
mov
jmp
dec
lods
movsb
add
pop
xchg
adc
jne
sbb
jne
lea
das
adc
pushf
and
push
sbb
cld
cmp
mov
stos
rol
xchg
fisubrs
add
push
inc
sbb
dec
jge
aam
rorb
jno
xchg
outsb
ret
mov
pop
gs
mov
push
jbe
jno
xor
sub
sub
jae
or
aam
loopne
clc
sub
or
mov
jb
sub
rcrl
sti
xchg
push
push
cwtl
sbb
jne
xchg
fmull
ja
leave
pop
xor
cmp
mov
jnp
cmpb
ja
xchg
push
ret
and
mov
sti
mov
mov
rolb
or
in
test
mov
notb
test
pushf
and
inc
cmc
cltd
outsb
ljmp
aaa
push
push
imul
pop
jbe,pn
out
ja
fisubl
cmp
pop
add
push
sbb
fwait
cltd
or
lods
aas
adc
or
push
cmp
imul
movsb
mov
popf
test
cmp
popa
mov
lods
mov
pop
lret
jmp
pushf
cs
lods
negl
data16
pop
subb
fadds
xchg
jnp
mov
sub
xor
push
xor
or
data16
xchg
ljmp
mov
shll
sub
pcmpgtw
jp
insb
xchg
scas
mov
mov
imul
jp
cltd
aas
cmp
sti
sbb
cmp
jo
jae
mov
lahf
rcrb
sub
adc
mov
inc
push
in
pusha
test
jb
movsl
lods
ss
sbb
add
cmp
mov
addr16
aaa
push
and
int3
stc
pop
int3
cmp
stos
inc
push
aad
movups
jmp
xor
hlt
adc
xor
mov
mov
bound
mov
sub
mov
leave
fnsave
xor
pusha
xchg
push
mov
in
lcall
push
in
test
push
mov
dec
shll
mov
dec
xchg
rcrb
mov
or
movsl
pop
lods
xchg
imul
xchg
adc
mov
cmpsl
mov
jno
rclb
push
jecxz
xor
and
ds
pop
std
xor
adc
add
insl
fisubl
and
repnz
mov
sti
xchg
nop
inc
push
adc
and
push
inc
out
movsb
mov
and
adc
mov
out
jecxz
mov
stos
jmp
popf
call
fnstsw
or
mov
incl
jmp
pop
loopne
sarb
bound
sbb
dec
pop
or
mov
lods
adc
cmp
pop
jle
push
mov
jp
je
and
loopne
aas
adc
push
jmp
std
jle
subl
push
sub
fisttps
push
sahf
jg
xchg
ds
cmpsl
cmpsl
ljmp
data16
jb
std
add
aad
and
sub
mov
in
out
pusha
push
repnz
push
ja
add
push
push
push
add
mov
outsb
cmp
inc
pusha
aad
rcr
cmp
fwait
mov
pop
in
fidivrl
mov
inc
mov
lcall
sub
mov
sub
cmp
sub
cmp
arpl
cmp
push
jne
push
mov
in
mov
adc
das
and
dec
push
inc
popf
hlt
push
inc
stos
dec
or
dec
addl
push
xorl
sahf
sbb
push
mov
add
or
push
je
nop
fldenv
ljmp
dec
faddl
jge
test
inc
ret
dec
pusha
mov
clc
and
mov
pop
push
jecxz
dec
icebp
leave
adc
pop
out
enter
xchg
push
loopne
fcmovu
and
testl
clc
clc
sbb
outsb
lea
cmp
dec
repnz
call
pop
in
inc
and
adc
sub
add
dec
cwtl
xchg
lcall
popa
jae
jb
shlb
fidivrs
iret
gs
js
mov
bound
sahf
mov
mov
or
jge
and
aad
pop
sti
mov
test
ds
push
inc
ret
jne
pop
loop
mov
sbb
rorb
cmc
mov
aam
leave
hlt
ja
or
mov
repnz
xor
out
jge
add
gs
push
push
jnp
je
test
xor
movsb
xchg
je
push
pusha
nop
adc
cmpb
daa
mov
add
js
lods
jns
adcl
fwait
add
mov
cmp
pop
fistps
pop
scas
cmpsb
arpl
imul
dec
cmpsl
mov
movsb
mov
test
add
es
mul
adc
enter
mov
mov
jae
out
in
sub
scas
inc
push
jae
add
pop
outsb
stos
lret
push
jp
pop
pop
pop
xor
sub
pop
or
stos
push
push
aam
inc
push
push
out
add
aad
frstor
jp
js
repnz
es
xor
fcom
push
push
sbb
sti
cmp
xor
ret
push
pop
xor
dec
xor
jle
mov
out
movsl
sti
xor
leave
dec
mov
aaa
jns
scas
and
sti
lods
shll
inc
arpl
ljmp
dec
jne
jbe
lcall
adc
loop
sahf
sbb
movsb
out
sbbl
lods
push
mov
aas
cmp
in
lock
xchg
mov
in
pop
jnp
push
adc
sbb
xchg
jno
sbb
vpavgw
dec
rcl
rolb
sbb
enter
xchg
aad
jno
dec
mov
in
cmp
jb
rcrb
das
in
cs
cmp
jecxz
aas
pop
ja
sbb
addl
jnp
fildll
rorl
popf
test
mov
cmp
ds
cmp
out
pop
jnp
mov
mov
loop
xchg
dec
jne
sub
out
insl
mov
push
and
jmp
or
ljmp
ret
movsb
ret
push
lock
xor
lds
cmp
imul
cmpsl
loope
loopne
adc
in
inc
xchg
test
adc
clc
fnstsw
jmp
sahf
imulb
movsb
mov
push
lods
lcall
jge
fs
push
roll
push
cmp
inc
push
mov
dec
sbb
rolb
arpl
leave
loop
mov
fsubr
popa
push
mov
imull
ret
notl
jmp
mov
mov
loopne
movsl
sub
inc
test
mov
sbb
sub
lods
pop
and
sub
xchg
sbb
or
mov
adc
and
aam
leave
jae
jmp
or
adc
aas
adc
jge
mov
shll
aas
movsl
bound
ljmp
mov
lcall
jl
sti
xor
adc
adc
mov
cli
repz
and
out
rcrb
fwait
adc
imul
mov
stc
pop
xchg
mov
mov
add
or
xor
xor
lret
repz
roll
cmp
mov
sub
out
fsubrl
mov
xchg
stos
mov
sbb
push
repz
pusha
add
push
and
cmp
inc
mov
xchg
insl
jo
or
jae
xchg
dec
rolb
or
outsb
call
jmpw
imul
insb
push
out
push
or
subl
xchg
mov
fiaddl
das
pop
sti
addl
addr16
stos
rcll
push
pop
push
mov
push
jp
mov
in
ficoml
imul
gs
in
ds
cli
jbe
les
jl
icebp
enter
lea
sub
scas
enter
js
in
xor
inc
arpl
xchg
gs
out
test
insb
addr16
mov
push
in
ja
mov
je
dec
dec
js
pop
mov
xor
jbe
jmp
sbb
jns
js
js
cld
sub
cmp
lock
lret
inc
scas
add
sub
mov
add
xchg
hlt
popa
dec
cmp
popa
mov
sbb
xor
jg
pop
xor
adc
add
mov
xlat
lods
dec
push
inc
xchg
icebp
mov
jge
ret
icebp
add
and
js
stos
sub
push
mov
dec
mov
xchg
bound
test
and
out
sub
out
and
popf
lahf
adc
mov
fstps
ljmp
jbe
test
aas
push
pop
xor
adc
add
pop
xchg
add
cmc
pusha
cs
pop
sbb
cltd
cmc
sarb
fdivrs
pop
xchg
inc
sbb
fisttps
shrl
pop
aas
shlb
push
addr16
js
cmp
std
inc
push
mov
out
fwait
rolb
lods
mov
movsb
jo
dec
add
mov
jecxz
mov
xor
jp
or
and
ret
scas
dec
decb
rclb
popa
cmp
outsb
lret
ret
pop
aaa
inc
fdivr
xor
xor
popf
loopne
std
mov
adc
mov
cmpsl
mov
add
stos
adc
cli
fwait
pop
shrl
data16
sbb
sbb
popa
ja
pop
inc
call
cs
mov
xor
mov
mov
js
sbb
xchg
inc
inc
xchg
je
pushl
or
dec
push
sub
mov
push
xchg
shll
and
in
mov
mov
cwtl
xchg
jnp
push
lds
test
push
std
ja
dec
mov
xor
pop
inc
mov
mov
xor
mov
movsb
mov
mov
les
int3
fs
call
out
addr16
enter
add
lds
cltd
xchg
dec
mov
pop
aaa
es
pop
push
xlat
lahf
add
stos
mov
sub
xchg
add
push
add
push
inc
jns
push
sbb
and
add
je
shlb
pop
and
hlt
test
jle
pop
mov
xchg
and
movsl
or
dec
cwtl
xchg
xchg
mov
out
mov
rcrl
pop
test
mov
pop
loope
inc
in
push
or
mov
push
mov
inc
les
mov
add
xchg
xor
pop
movsb
add
ficoml
popa
mov
xor
xor
mov
pop
loope
pop
mov
sahf
lahf
pop
fninit
lods
lock
not
add
cs
mov
rcll
cli
or
rclb
jge
std
mov
cmp
adc
outsb
fistpll
data16
lret
mov
outsl
bound
mov
ficomps
icebp
imul
inc
adc
insb
add
or
movsb
and
mov
das
daa
inc
xor
leave
int
mov
lret
adc
sbb
and
pop
popa
add
push
pushf
add
in
sbb
scas
inc
outsl
jecxz
or
in
push
lods
xlat
push
push
jl
jne
jmp
push
mov
std
sub
dec
cld
mov
add
bnd
repnz
and
outsl
rep
add
jle
sub
push
xchg
mov
add
jecxz
andl
int3
adc
nop
dec
iret
mov
and
imul
jecxz
mov
out
inc
shrl
or
popf
inc
out
sbb
fst
sub
jb
dec
push
mov
cmc
and
dec
shrb
pop
sbb
rolb
mov
inc
jl
mov
and
loope
inc
fwait
aaa
jmp
loop
or
cmpsb
or
sub
lods
sti
push
fldl
and
jle
aas
mov
push
je
sub
pop
scas
aam
call
add
scas
mull
fs
loopne
mov
push
mov
std
and
lods
data16
pop
sub
dec
adc
push
xchg
ja
ds
movsl
mov
rcrb
jno
js
xchg
ljmp
pop
xchg
mov
outsb
shrl
cmpsl
adc
jbe
mov
pop
std
mov
xor
mov
push
pop
std
fs
adc
or
dec
fldenv
cmpsb
rolb
mov
clc
mov
pop
add
pop
cwtl
adc
sub
cmp
jp
imul
out
fwait
les
icebp
add
push
add
mov
fsubl
push
fistl
aam
popl
inc
rcr
test
inc
pop
and
int
mov
pusha
jae
push
and
stc
pop
sub
out
mov
or
xor
pop
das
mov
xchg
rclb
xor
repnz
outsb
iret
outsl
add
andb
xchg
ret
js
xchg
lret
sub
xchg
jl
mov
xchg
and
adc
fwait
aam
jmp
dec
data16
shrb
push
out
arpl
pusha
pop
into
aam
fucom
push
push
dec
mov
out
mov
imull
loop
arpl
mov
dec
inc
lret
kmovw
ds
rorl
insb
mov
cmp
push
or
mov
add
hlt
pop
cmp
push
sub
jne
cmp
imul
icebp
in
cmc
pop
out
std
nop
aaa
cmp
sahf
push
shlb
xchg
insb
ficomps
sarl
repz
rcrb
outsb
adc
je
push
fidivl
mov
xor
mov
mov
repnz
mov
in
jge
or
ret
jns
loop
test
es
cmp
popa
sub
xchg
pop
fsubrs
insb
xchg
dec
mov
push
insl
jnp
sub
push
push
push
pop
andb
fimull
out
sub
lahf
add
loop
mov
or
pop
outsb
jmp
cmc
sbb
pop
cs
mov
xor
les
lcall
les
arpl
jae
lods
sahf
test
out
cmc
ljmp
and
test
mov
push
mov
mov
jecxz
adc
sbb
pop
outsb
xor
mov
jmp
loopne
add
popa
or
leave
pusha
outsl
lahf
mov
sbb
subb
std
movsl
and
cmp
ljmp
stc
cmpsl
test
cmovbe
mov
repnz
ror
jle
inc
xchg
dec
in
lea
std
xchg
push
xor
movb
adc
std
ss
inc
repz
sbb
das
out
cmp
add
push
and
arpl
xor
pop
imull
add
into
mov
mov
adc
cli
fs
mov
mov
into
jae
hlt
fisubs
cmp
jo
stos
mov
data16
push
xchg
jp
pop
pop
cld
les
test
out
pop
cs
mov
inc
rcll
lods
movsl
push
xchg
mov
xchg
push
dec
pop
push
jecxz
and
mov
aaa
loop
es
push
xchg
xchg
loopne
and
in
daa
arpl
cmp
jno
in
cltd
rcpps
add
or
cvtpi2ps
mov
mov
or
pop
inc
data16
cmpsb
mov
outsl
cmc
lahf
je
mov
jg
pushf
push
pause
les
push
xchg
cmp
mov
inc
and
xor
imul
notb
xor
push
or
mov
mov
repz
in
xchg
mov
xor
popa
aad
mov
jmp
xor
push
movsb
jno
test
leave
add
ljmp
adc
stos
pop
mov
push
jbe
bound
sbb
push
pushf
or
sub
inc
sbb
shlb
test
sub
fistpll
stc
xchg
sbb
ds
push
rol
int3
jnp
nop
cmp
in
repz
sbb
fwait
les
cmp
inc
test
pusha
inc
arpl
sbb
cmpsl
test
scas
mov
loope
pop
insb
movsl
cmp
insl
fs
fisubs
adc
jecxz
cmp
mov
rcll
out
push
mov
xor
dec
dec
loope
mov
outsb
push
les
xchg
mov
int3
dec
push
and
inc
sub
stc
enter
jb
cmp
cmp
push
cli
stos
or
mov
sbb
jns
cmp
ss
xchg
mov
sub
popa
shll
cmp
dec
inc
ljmp
jne
push
fdivs
rcll
and
xor
scas
mov
repz
and
pop
stos
dec
bound
scas
rolb
and
das
outsl
xor
sbb
clc
xor
lods
mov
xlat
das
mov
pop
push
fcmovbe
inc
mov
mov
mov
inc
arpl
mov
aas
jl
adc
inc
or
into
ljmp
inc
xor
pushf
adc
subb
cwtl
push
xor
mov
push
stos
cpuid
leave
jb
nop
repz
sbb
or
loopne
jge
fadd
xor
mov
popa
nop
test
inc
aad
ja
pop
cmc
lods
or
mov
ret
inc
shlb
pusha
shll
jg
mov
andl
pop
pusha
pop
popf
enter
andb
adc
xorl
in
insl
js
mov
leave
out
add
cmp
jbe
mov
inc
lods
test
xorl
or
adc
xchg
outsl
dec
or
xlat
adc
jp
inc
push
mov
les
xor
push
loop,pt
rcrl
mov
pop
movl
dec
lret
and
ds
out
push
inc
add
and
pushf
push
js
sub
stos
push
fwait
push
sti
mov
dec
mov
int3
mov
jp
inc
sub
pop
jb
inc
mov
mov
xor
add
add
ja
popf
imul
cmp
addb
adc
iret
xlat
stos
lcall
sahf
mov
jg
nop
jp
mov
pop
or
ljmp
xchg
mov
xchg
add
inc
lret
sbb
ret
punpcklwd
mov
ficoms
out
pop
cmp
addr16
and
mov
movsb
cld
out
adc
xor
fcmovnb
xchg
jb
pushl
mov
xchg
xor
rorl
es
sti
leave
out
xor
insl
jns
jae
mov
mov
jle
lock
jl
nop
imul
sbbl
xorb
mov
fs
pop
pop
xor
cmp
jae
je
cmp
or
sbb
cmp
or
mov
push
cli
mov
add
pusha
out
fs
imul
sub
cmpl
popf
cltd
push
mov
fcos
lds
fadd
ret
sub
out
xor
mov
push
sbb
fists
shl
mov
cmpsl
pop
mov
mov
inc
lahf
mov
pop
repz
cmp
aad
fs
dec
push
or
in
jg
or
push
mov
xchg
insl
out
xor
sbb
outsb
adc
and
lea
outsb
push
rcll
push
arpl
aad
ret
push
xchg
sub
mov
mov
pusha
test
aam
mov
ss
imul
mov
sub
icebp
jecxz
lahf
push
mov
dec
fldcw
jl
in
mov
int
sarl
int3
xor
push
stos
mov
add
cs
jp
push
xor
fidivrs
push
cs
or
stos
stos
sbb
enter
in
bound
sub
cwtl
sbb
popf
inc
sar
xchg
add
cmpsb
mov
lret
les
or
jmp
mov
cmc
fisttpl
sub
and
push
in
pop
out
fisubrl
xor
outsl
and
lods
lahf
xor
sbb
pop
outsl
into
lcall
jp
mov
testl
scas
mov
incb
test
test
xor
sbb
xchg
jbe
cwtl
jge
cmpsb
push
aaa
das
add
dec
cli
mov
ljmp
rcr
pop
jnp
mov
push
mov
rclb
xor
std
mov
call
sbb
sti
in
lcall
add
push
into
popf
sarb
loop
or
jne
lods
xchg
movsl
jl
xchg
adc
add
push
and
outsl
lods
and
add
ret
and
jns
mov
mov
movl
test
jb
shll
pop
sti
mov
cmp
sbb
pushf
loope
cmp
leave
popa
repz
test
rcrl
ret
pushf
push
outsb
and
sub
inc
pop
inc
je
aas
inc
sub
sti
leave
pusha
pop
and
xchg
iret
fwait
dec
out
sub
lds
and
data16
outsl
movntps
movsb
sbbl
sub
pop
xor
iret
adc
cli
stc
subl
push
iret
inc
xor
or
pop
lret
sub
cmpsb
cmpsb
pushf
les
out
call
pusha
xchg
mov
push
mulb
pop
adc
fisubl
or
stos
and
pushf
mov
es
out
dec
aaa
fisttpl
sbb
jne
mov
aas
jmp
mov
mov
xor
daa
mov
mov
xor
sahf
pop
nop
or
pop
or
std
inc
leave
xor
jl
pop
jae
pusha
or
inc
out
dec
shrb
fmuls
or
and
aaa
movsl
pushf
negl
dec
mov
cmp
js
sbb
in
scas
inc
xor
sub
std
jmp
push
in
inc
jae
mov
ror
push
out
dec
sbb
loop
pop
pop
les
es
les
inc
cmp
or
insb
loop
add
jbe
dec
dec
inc
lcall
pop
aam
fcoms
pushf
pop
cmpsb
enter
and
pop
rcl
add
adc
or
hlt
loop
sarl
lahf
mov
cli
int3
out
adc
adc
mov
fdivrs
arpl
push
mov
jns
jne
jo
or
dec
mov
xchg
and
adc
aam
ljmp
sti
clc
and
stos
mov
mov
mov
inc
pusha
rcrl
cmp
test
iret
and
test
dec
ljmp
cmp
inc
or
stc
mov
das
sbb
les
adc
inc
jle
test
lods
inc
les
or
es
in
jb
mov
pop
sub
push
mov
adc
fcompl
lret
mov
scas
dec
push
pop
or
push
leave
pop
mov
repnz
push
scas
testb
cmp
aad
pop
dec
xchg
mov
or
inc
pop
ljmp
xchg
test
out
push
sbb
dec
adc
daa
outsl
test
xorb
fisubs
push
add
pushf
jle
and
xchg
push
pop
sti
outsb
mov
rolb
dec
stc
xlat
out
sti
stc
pop
dec
arpl
lods
lahf
mov
adc
mov
cmpsb
rcl
fdivl
lret
insl
ficomps
lds
sbb
outsb
sbb
or
daa
out
shlb
pcmpgtw
imul
test
cmp
subl
pop
push
jae
jo
mov
pusha
mov
int
xor
xor
dec
js
loope
sub
enter
add
mov
jle
and
in
jne
and
imul
xor
les
xchg
cmp
cmp
jl
and
xor
mov
push
ds
mov
rcr
pushf
mov
int3
adc
imul
push
insb
or
arpl
pop
adc
cmpsl
xor
popf
enter
pop
ret
enter
adc
out
push
pop
mov
mov
out
lret
iret
push
iret
in
cmp
inc
test
jb
inc
call
push
pop
mov
cmpsl
in
jecxz
xor
push
faddl
cli
add
pop
cwtl
mov
ficoms
cli
ret
mov
pop
lea
pop
mov
in
mov
xor
out
lahf
xor
xor
js
adc
sub
jp,pn
jae
icebp
test
mov
cs
in
aam
test
sub
cmp
insl
cmp
jle
sub
and
movsb
mov
cmp
test
adc
xor
sub
jmp
sbb
stos
or
jo
pop
das
push
mov
test
fstps
xchg
sahf
dec
testl
rorb
xor
xor
cmp
subl
add
and
cmp
mov
mov
rcl
fwait
mov
pop
packuswb
dec
adc
int
or
xor
mov
jg
fidivrs
mov
js
in
adc
mov
lret
mov
pop
aam
push
subl
pop
jno
mov
push
ss
daa
push
scas
push
leave
mov
xor
dec
repnz
xor
mov
xorb
ds
jecxz
fisubrs
outsl
and
in
cmpsl
sbb
loope
xlat
imul
pop
idiv
rclb
push
sbb
xchg
ds
mov
cmp
or
push
sarb
in
mov
movsb
cmp
int3
int
setb
scas
test
lods
int
clc
mov
mov
gs
stos
push
dec
push
mov
out
xchg
dec
dec
pop
pop
iret
sarl
xchg
lds
test
pop
ret
pop
sbb
fldenv
mov
xor
xchg
cmp
iret
bound
push
push
es
jl
aas
test
pop
movsl
popf
fnstcw
fstpl
movsb
sti
cwtl
lcall
and
mov
icebp
ds
roll
pop
js
insb
enter
div
lcall
inc
cmpsl
outsb
cwtl
mov
jmp
mov
xchg
in
inc
aaa
cs
jle
cs
shrl
repnz
mull
mov
mov
push
cmp
xchg
dec
dec
popf
inc
lret
inc
add
mov
and
xor
lods
loope
fwait
and
adc
adc
js
push
jmp
inc
addr16
iret
fldcw
cld
pop
in
push
pop
iret
icebp
fldcw
orb
stos
aam
pop
repnz
dec
cltd
sub
push
jp
mov
in
inc
mov
and
arpl
pop
jns
cmp
test
in
mov
sub
mov
icebp
ds
filds
stos
mov
add
and
lods
cltd
popa
pop
fwait
pop
je
addr16
pop
push
inc
push
call
repnz
jmp
jo
lods
sub
sysexit
push
cli
loopne
ffree
in
out
jne
mov
sub
add
repz
pop
xor
lods
mov
or
cltd
and
cwtl
outsl
push
pusha
ret
cmp
push
or
sbb
dec
pop
push
cmp
in
dec
inc
xor
sbb
mov
outsl
mov
mov
jmp
jne
addb
stos
xorl
push
mov
jge
or
jl
push
lods
xlat
push
xor
or
push
cmp
add
mov
in
mov
add
push
jb
pusha
stos
std
push
jae
cli
cmpsb
xlat
mov
mov
outsl
xor
cmp
xchg
stos
dec
aaa
scas
mov
dec
je
inc
xchg
mov
jb
movsl
clc
fs
mov
push
fstps
fimuls
decl
pop
adc
push
sbb
and
fs
xorl
mov
xor
ja
test
and
ja
pop
xchg
outsl
push
mov
push
pop
dec
bswap
add
adc
sub
ret
movsb
xchg
ficompl
in
and
push
lods
mov
dec
cvtps2pi
fmulp
jmp
xchg
lret
sbb
dec
dec
inc
lcall
push
and
sar
out
adc
jecxz
cmp
in
inc
mov
shll
mov
jp
mov
cmp
or
loopne
or
lock
adc
mov
xchg
das
fidivs
pop
jne
imull
and
mov
outsb
gs
push
jb
xor
hlt
xlat
jecxz
dec
push
pop
std
mov
xor
dec
arpl
add
cwtl
cmc
or
sbb
in
cmp
inc
dec
loop
scas
shlb
filds
jge
or
pop
push
and
dec
fsubl
and
int3
fdivl
and
jns
nop
or
pushf
insb
or
push
mov
cltd
mov
into
cwtl
lods
outsb
mov
sbb
jmp
sbb
jb
push
lods
add
push
mov
add
mov
stos
lret
jle
faddl
stos
cmpsl
jl
mov
dec
xchg
loope
aad
fwait
icebp
pextrw
mov
adc
pop
inc
in
clc
aas
in
cli
mov
mov
mov
stc
sti
shlb
pop
subl
push
loop
ret
mov
xor
dec
jne
pusha
daa
push
pop
dec
sbb
xor
mov
mov
idivl
cmp
les
push
insl
or
call
mov
jae
mov
loopne
fwait
add
testl
in
fdivrl
stc
xor
lods
mov
jmp
pop
mov
mov
cmc
dec
pop
xchg
jmp
sbb
xlat
enter
xchg
fistps
add
outsb
addr16
adc
push
jge
leave
dec
jbe
out
xchg
mov
cmc
push
dec
and
sarb
repnz
push
stc
push
mov
jecxz
aad
les
repz
inc
idiv
xor
data16
dec
sub
jns
inc
inc
out
fdivrl
cmp
inc
lods
xor
inc
cmp
sti
aaa
loop
jg
push
mov
dec
je
add
nop
cmp
hlt
and
std
daa
cltd
dec
ss
xchg
or
ficomps
leave
jb
xor
cld
pop
inc
jl
mov
in
lcall
in
sub
sub
or
add
test
iret
and
popa
and
mov
sti
inc
and
leave
mov
in
mov
loope
in
loope
inc
sbb
pop
iret
pop
mov
pop
xchg
sbb
dec
mov
jl
imul
cmp
in
mov
repz
repz
adc
jecxz
push
push
aas
lret
divl
rol
data16
jb
push
addl
push
test
or
adc
ljmp
fwait
pop
lcall
es
outsl
mov
mov
sub
adc
outsl
hlt
sbb
bound
loopne
adc
pop
pop
and
out
out
xor
insb
nop
pop
daa
dec
leave
inc
xorl
movsl
jbe
cmpsb
cmp
sti
arpl
popa
aam
jb
mov
sub
scas
test
xor
jle
out
lods
stos
das
xchg
and
jp
or
andl
pop
xchg
mov
adc
imulb
nop
add
fwait
pop
mov
into
mov
in
shl
leave
or
lock
int3
or
les
popf
add
stos
push
mov
xor
mov
ljmp
cmpsl
lret
int
mov
mov
lods
or
pop
sti
sub
xchg
mov
out
mov
les
fnstenv
mov
loopne
pop
lods
test
lock
inc
rolb
fstpl
xchg
mov
test
pushf
movsb
incb
dec
shrl
imul
lret
clc
mov
fs
lahf
mov
scas
out
mov
mov
push
mov
mov
mov
aas
es
in
pop
mov
mov
pop
pop
testb
and
mov
test
or
jmp
and
lods
or
es
mov
push
xor
sub
sbb
sbb
mov
or
jo
cmpsb
das
xor
cmp
and
fwait
movsl
popa
stos
dec
insb
mov
mov
sar
data16
add
pusha
mov
or
iret
sbb
xor
cmp
stos
fstpt
mov
xchg
mov
std
push
addr16
pop
adc
das
sbb
xchg
xchg
mov
push
pushf
das
mov
fildll
outsl
add
and
out
outsb
xor
outsb
add
add
push
cltd
sarb
push
sbb
mov
in
pop
mov
mov
xchg
mov
in
dec
les
orl
jno
push
jl
ret
cmp
leave
add
xchg
iret
xchg
pushfw
sub
xchg
dec
mov
sub
cmp
scas
sbbb
sysenter
lea
test
pop
mov
cmc
imul
and
xchg
dec
enter
rclb
ror
rep
adc
mov
mov
adc
imul
xchg
out
dec
lahf
in
aas
ret
test
sbb
mov
fcom
pop
mov
loope
and
xor
sbb
dec
in
loope
push
rorl
mov
cli
into
sub
in
orl
sahf
xchg
popa
outsl
cmpsb
or
out
cmp
and
mov
jno
push
scas
jmp
dec
pusha
addr16
scas
cmp
int3
insl
push
cmp
and
pop
dec
mov
js
dec
decb
push
or
fidivl
sbb
inc
cmp
xor
mov
shlb
or
inc
js
ret
rclb
lock
xchg
add
sbb
in
aad
scas
int3
jne
jge
fiadds
or
push
mov
ljmp
gs
imul
cltd
aad
test
je
mov
clc
dec
sub
int
push
lret
mov
test
ds
mov
add
int3
fcmovu
jb
mov
lea
aam
inc
add
lods
mov
mov
inc
xchg
sbb
daa
or
cld
mov
scas
ss
fchs
fwait
icebp
dec
push
rcr
jnp
xchg
les
sarb
add
cmp
cmp
and
push
outsb
out
inc
push
cmp
lds
xchg
mov
stos
or
iret
xor
jo
je
dec
or
jb
mov
xchg
addr16
rolb
pop
shlb
mov
orl
imull
shlb
xchg
aad
repz
cwtl
jnp
xor
popf
in
xor
cmp
sbb
idivl
ret
mov
mov
dec
and
or
push
jnp
ljmp
mov
sbb
mov
and
pop
dec
cs
lock
jmp
pop
jno
ljmp
pushl
mov
mov
cmp
jmp
shrl
call
shrl
push
or
mov
ds
sub
testl
adc
lods
inc
mov
testb
fbld
shlb
xor
or
in
jecxz
mov
dec
aas
je
pop
or
in
repnz
iret
negb
sub
jne
jmp
sti
insl
rclb
inc
mov
sar
out
cmc
inc
mov
cwtl
int
adc
aaa
jecxz
gs
cmp
iret
fnstsw
sub
bound
test
cwtl
mov
sbb
ljmp
test
jp
push
add
das
insb
jno
divb
aam
xor
mov
jge
pop
hlt
cltd
and
or
pop
dec
mov
popa
pop
add
out
xchg
rclb
test
cmpsb
iret
shlb
into
or
and
jbe
scas
jbe
push
mov
cmc
or
test
and
stc
mov
pop
in
jae
into
aad
sbb
mov
outsb
jo
pop
jne
jbe
loop
mov
data16
sbb
push
inc
insl
xor
aaa
jne
mov
sub
arpl
mov
sahf
lea
cmp
mov
or
stos
loope
dec
xor
inc
cmp
pop
imul
cmp
cld
add
lret
mov
test
mov
gs
rcrl
je
dec
and
popa
in
mov
lcall
andb
mov
mov
push
ljmp
andb
mov
jle
sub
and
pop
push
mov
pop
in
xor
xor
mov
out
enter
push
rcrb
mov
push
and
lods
mov
adc
lcall
jmp
nop
adc
push
int
jb
movsl
lret
push
pop
sub
loope
out
loopne
and
mov
sbb
gs
subb
mov
inc
repz
rclb
mov
inc
inc
mov
insb
rcrb
cmp
into
aad
cli
mov
lods
in
cwtl
repz
stos
mov
jg
push
mov
frndint
pusha
andl
js
xor
stos
lahf
pop
cmp
into
adc
insb
stos
push
cmpsl
ret
cli
movsb
ret
testl
ret
leave
es
mov
jmp
mov
jbe
mov
mov
add
dec
xchg
fbstp
fdivs
arpl
imul
out
pop
or
jecxz
xchg
inc
mov
mov
fdivrs
gs
adc
sbb
out
hlt
loop
mov
stos
ret
negl
pop
arpl
sub
xchg
sbb
ror
into
push
pop
into
xor
jp
bnd
testl
sbb
adc
das
push
popa
push
daa
fadds
jno
pop
incl
in
sub
mov
jle
loope
aaa
cmp
adc
lret
sub
jbe
adc
sbb
mov
mov
sbb
dec
push
pop
xor
test
xor
fisubrs
xchg
and
rolb
int3
adc
dec
adc
ja
pop
push
frstor
cmp
and
in
jae
out
push
call
cmp
and
test
adc
cmp
or
xchg
and
or
mov
add
in
adc
fldt
lds
add
dec
jbe
les
xchg
ja
rcr
mov
fistps
pop
xchg
sbb
icebp
add
dec
rol
clc
js
out
outsl
adc
xorps
leave
sub
addr16
mov
imulb
adc
inc
push
xchg
push
jo
dec
xor
cs
in
adc
cltd
lods
movsb
adc
adc
push
test
nop
dec
or
jb
inc
js
ja
stos
rorl
pop
sbb
add
push
add
dec
xchg
xchg
cltd
mov
adc
cmp
push
fmuls
stos
push
arpl
push
pop
loop
xor
xchg
push
imul
mov
fdivrs
mov
test
outsl
cmp
fwait
inc
ss
jmp
inc
clc
out
mov
sub
cwtl
pusha
movlps
and
mov
push
lret
adc
mov
inc
cmp
add
cmc
xchg
decb
mov
cs
push
and
ret
jns
cld
je
push
mov
test
pop
sti
mov
stos
or
cli
inc
jae
pop
aam
test
mov
lods
sub
adc
inc
xchg
xchg
xchg
xchg
inc
xor
inc
mov
adc
frstor
jns
pop
icebp
rcll
sbb
cmpsb
loop
out
stos
sbb
in
and
repnz
sbb
inc
into
test
mov
test
in
mov
pusha
das
test
mov
idivb
and
iret
push
push
scas
xchg
push
leave
lods
loope
ret
jo
pop
in
das
pushf
fisttps
loope
outsl
in
xor
stc
xchg
jo
push
push
push
mov
pop
mov
loope
cli
mov
addr16
test
stos
loop
repz
xor
jb
pop
mov
xchg
jmp
imul
out
fistpl
dec
hlt
in
mov
inc
adc
mov
xor
xor
push
arpl
xchg
into
test
inc
lcall
std
jecxz
fnstcw
ss
daa
nop
jmp
xlat
adc
inc
les
inc
mov
mov
cmp
loopne
loopne
jo
dec
dec
jo
out
leave
cmpsl
xchg
dec
lcall
ss
adc
pop
pop
adc
pop
pop
cmpsb
push
pop
test
mov
lods
iret
dec
test
xchg
sbb
inc
sub
adc
movsl
inc
adc
jp
lds
mov
ficompl
pusha
xchg
mov
rcrl
pop
shll
inc
mov
and
ret
roll
mov
aas
pop
mov
fnstsw
out
pop
sbb
push
cmpsb
sbb
sub
mov
stc
dec
in
push
jns
push
cmc
mov
pop
fwait
imul
fs
jmp
testl
shrl
jb
or
add
or
je
sub
loopne
addr16
into
adc
mov
mov
sbb
add
adc
int
mov
packsswb
xorl
stos
push
fcmovb
es
js
daa
daa
dec
mov
popa
aaa
or
test
mov
push
inc
call
add
popa
cwtl
test
sub
call
dec
ret
cmpsl
mov
leave
cmp
cwtl
xor
cmp
sahf
or
fisttpl
mov
lret
xor
mov
adc
popa
popa
notb
jb
push
sti
inc
jle
sub
int
xchg
adc
push
out
jne
movsb
dec
mov
aaa
cmp
inc
push
cltd
iret
sbb
dec
adc
hlt
fdivrl
mov
and
in
ja
dec
pop
les
loop
adc
pop
ss
cmpsl
insb
sahf
ss
scas
adc
dec
and
inc
mov
jne
xchg
cmp
xor
mov
imul
pop
push
sbb
shlb
movsb
jbe
xchg
xlat
dec
xor
data16
add
test
inc
add
loop
mov
ja
and
repz
pop
sub
rolb
gs
cwtl
cltd
sbb
lahf
les
cli
adc
aam
jmp
or
pop
xchg
popl
jl
lret
push
out
dec
add
rorb
into
sahf
aad
lock
int
adc
daa
test
jmp
push
inc
pop
add
gs
call
fcmovnu
jb
jecxz
jno
push
call
xlat
jp
sbb
cs
sbb
pop
mov
adc
pop
mov
les
push
and
inc
mov
fdivrp
xor
sbb
subl
out
mov
cli
fstp
fidivrs
jns
adcb
push
xchg
fisttpl
push
jb
jmp
sub
jbe
movsb
xchg
loopne
mov
add
mov
pop
dec
loop
jmp
xor
or
mov
push
push
inc
xor
bound
jmp
and
mov
out
or
mov
shrb
mov
pop
cld
test
or
inc
mull
mov
imul
sbb
mov
sub
push
lahf
lods
arpl
jae
das
test
fldl
pop
cmp
jl
xchg
sahf
punpcklwd
jmp
fwait
mov
mov
push
scas
push
pop
jns
pusha
or
add
ret
mov
iret
mov
rolb
out
sub
lea
out
test
dec
cmp
mov
push
sbb
outsb
ret
inc
adc
movsl
add
clc
cmp
pop
adc
push
jge
mov
rcrl
jns
mov
cltd
xchg
insb
cwtl
jl
imul
fisubrl
movsl
pusha
loope
xchg
arpl
cmp
jae
mul
in
push
push
inc
je
push
and
and
fldcw
je
lcall
outsl
in
jbe
adc
or
call
into
iret
inc
popa
mov
js
and
mov
cmc
rolb
call
outsb
inc
push
loop
pop
and
icebp
clc
jl
notl
cmpsb
gs
xchg
dec
xchg
jns
pop
sarb
inc
mov
dec
mov
push
xor
sbb
std
mov
push
fistl
cwtl
or
add
add
cld
cli
scas
movsl
fwait
jp
jmp
cwtl
addl
mov
pop
lahf
stc
mov
subl
cmpsl
fwait
add
jb
add
mov
sbb
stc
pop
fs
push
and
mov
xor
jle
push
push
addr16
inc
fildl
xchg
pop
cmp
mov
insb
aam
cwtl
test
int
cmp
cmpsl
mov
pop
push
push
cwtl
test
mov
repnz
adc
movsb
arpl
sbb
repz
mov
inc
out
adc
mov
iret
dec
and
pop
aam
pop
addr16
pusha
dec
loop
addr16
push
fnstcw
xchg
adcl
lret
pop
inc
and
movsb
inc
outsl
popa
imul
arpl
pop
mov
dec
inc
jo
lret
pop
leave
popa
sub
cmpsl
bound
fidivrs
inc
ja
mov
xchg
fdiv
xlat
or
stc
mov
xor
push
sbb
out
out
loop
mov
mov
fnop
jl
inc
and
lahf
scas
or
int3
and
ficoml
jecxz
pop
add
popa
push
iret
cwtl
xchg
movsl
pop
jg
in
sarb
sub
cs
jb
xor
mov
fimull
mov
sub
dec
xlat
faddp
sub
jmp
or
hlt
mov
adc
xor
scas
pop
adcl
loopne
hlt
jo
shlb
jbe
repnz
and
es
popa
mov
popa
dec
jp
rclb
lods
pushf
push
inc
push
dec
lahf
inc
cmp
jmp
push
decl
sti
ret
mov
xor
add
cs
add
negl
inc
add
scas
shll
cmp
or
outsb
dec
cs
push
jp
xchg
xchg
std
sub
xlat
sbb
push
fcoml
mov
mov
in
push
sahf
sub
int3
ret
adc
or
jns
into
ja
cmp
addr16
daa
test
jb
jo
shrl
xor
in
dec
xchg
iret
and
pop
push
repnz
sahf
insb
pop
std
testl
and
pop
pop
clc
push
ljmp
cld
mov
sbb
xchg
aam
pop
sub
inc
sbb
movsl
jp
push
lock
cmp
cmpsb
xor
adc
out
pop
test
cmp
test
push
pop
push
fucomi
cltd
sub
test
movsb
mov
fs
sahf
cmp
in
fldl
addb
mov
add
cmp
mov
pop
pop
rcll
mov
jg,pt
cmp
xchg
and
je
jo
mov
out
lret
mov
pusha
mull
dec
jle
ret
in
cmp
aam
lret
jo
mov
inc
out
mov
das
lret
shlb
clc
insl
xor
dec
inc
fs
imul
sub
xchg
xchg
pop
sti
jmp
mov
lock
jg
pop
and
bound
addr16
cli
or
pop
push
repz
mov
sbb
unpckhps
xchg
icebp
mov
inc
mov
pop
mov
mov
mov
mov
add
sub
sbb
sub
dec
sarl
dec
mov
negb
iret
out
int
test
xchg
cli
xlat
xchg
pusha
cld
call
je
mov
and
hlt
xchg
mov
xchg
leave
mov
stos
push
pop
lahf
cmp
pop
rcll
outsl
push
pop
aaa
mov
fistps
fists
aad
pop
fnsave
xchg
movsl
in
dec
pusha
and
sub
scas
or
arpl
int
xchg
xchg
aaa
ret
jl
dec
lea
mov
xchg
jle
pop
jns
sbb
dec
pop
cli
xchg
dec
xchg
out
daa
jmp
ffree
lods
lea
in
jg
mov
xor
mov
push
adc
jge
mov
mov
popf
in
dec
dec
out
out
das
mov
mov
ds
jmp
repz
adc
inc
mov
outsl
sbb
push
mov
add
inc
adc
and
cmpsl
pop
sub
scas
or
adc
shrl
push
fldt
adc
lret
insl
into
adc
add
add
jg
xchg
orl
loope
movsl
ret
out
add
or
or
and
stos
ret
lods
sahf
leave
sbb
xchg
jb
cli
push
cmpsb
sbb
xchg
cmpsb
cmp
push
jle
out
add
cmp
cmp
pop
sarb
mov
xchg
pusha
cmp
add
nop
cmc
lods
je
push
jb
push
and
leave
lcall
or
mov
push
xchg
popa
scas
jmp
inc
packsswb
jbe
dec
addl
sub
pop
loopne
inc
test
out
sub
or
and
xlat
sbb
sub
fsubrs
pop
std
push
imulb
fcoms
sub
movsb
xor
jl
sbb
dec
fs
dec
and
loop
inc
mov
inc
mov
loopne
inc
ret
cltd
into
or
pusha
jb
jl
xor
and
imul
jecxz
adcl
into
out
push
mov
icebp
mov
lea
aas
or
push
ja
out
out
and
sbb
fwait
and
pop
stos
mov
lock
cmp
pushf
cmp
aad
push
addr16
out
test
lret
inc
xchg
mov
cmp
rcrb
push
in
adc
imul
mov
adcl
std
pop
fdivrl
iret
sbb
mov
ret
sbb
stos
stc
mov
insl
into
enter
das
jecxz
xchg
adc
mov
cmpsl
je
mov
icebp
mov
xchg
cmp
add
jl
or
cld
ret
bound
push
mov
stc
jbe
push
add
ds
js
xchg
loop
add
adc
pop
inc
sbb
imul
push
aas
xchg
or
ja
call
loop
jle
or
xchg
cli
jmp
push
or
add
call
daa
or
out
lahf
sub
xchg
std
push
xchg
sbb
push
movb
sbbl
aam
mov
test
jmp
scas
test
jno
scas
fdivrl
icebp
inc
mov
mov
lahf
loopne
aam
and
add
jns
ror
xor
push
inc
push
xor
les
pop
scas
xchg
mov
pop
xchg
sbb
sbb
sbbl
jnp
dec
out
mov
nop
ss
mov
das
or
inc
sub
fcoml
jo
jae
xor
mov
mov
je
push
or
icebp
arpl
adc
push
adc
pop
mov
daa
fsubs
sahf
cmp
shr
in
adc
cwtl
mov
sub
xor
push
in
fisubrs
cmp
mov
ljmp
call
frstor
jnp
lcall
in
ret
add
push
dec
pop
repnz
lods
dec
jmp
and
mov
jo
add
sub
inc
fcompl
icebp
je
mov
cmp
jp
inc
jle
fwait
mov
mov
mov
test
sub
subl
cli
sub
fwait
pushl
mov
outsl
push
xchg
lods
scas
lcall
int3
outsl
inc
push
xchg
sbb
inc
test
dec
dec
adc
sub
push
clc
xchg
and
pop
insl
test
jne
ss
xchg
xchg
hlt
incl
test
lcall
mov
aam
nop
mov
inc
cmp
ret
jne
sub
mov
dec
jp
inc
ds
imul
loope
cmp
jns
or
std
imul
xor
data16
scas
jns
je
call
mov
add
ret
pop
and
jp
gs
lods
xor
in
andl
adc
or
mov
push
xor
sbb
mov
push
adc
out
and
sub
outsb
push
stc
mov
sbb
aam
pop
ljmp
jbe
sti
fldt
jae
insl
mov
xchg
add
arpl
jp
inc
stos
rolb
ret
sub
repnz
xlat
aaa
ja
ds
mov
js
rcll
arpl
xchg
and
add
stc
cmp
mov
mov
outsb
aas
loope
cmp
addl
lcall
jmp
divl
fidivrl
fimull
push
out
cwtl
out
call
out
adc
and
fs
loop
call
sub
data16
xor
insb
aam
mov
mov
orl
cmp
inc
cli
mov
fwait
cs
jbe
fadds
mov
orl
add
sub
jmp
jge
outsb
cmp
fistl
test
mov
mov
jno
sub
sub
gs
jae
sub
movsl
and
sbb
pop
dec
jmp
les
jge
sbb
dec
sub
sbb
sbb
inc
or
adc
cmp
xchg
add
inc
dec
pop
stos
mov
rorl
push
insw
lret
outsl
mov
mov
inc
and
add
sbb
enter
movsb
icebp
loop
push
xlat
fadd
xor
mov
jnp
mov
data16
push
stos
fiadds
sahf
into
shll
inc
sub
imul
jle
fwait
dec
xor
pop
movsb
mov
pop
push
cmp
jns
in
in
jle
addr16
hlt
test
push
shrb
jno
xchg
mov
imull
fwait
add
inc
inc
jp
fiaddl
or
sub
test
js
mov
out
pop
push
add
add
test
mov
inc
jae
and
pusha
movsb
push
mov
fdivrl
mov
loopne
shlb
inc
cltd
ljmp
sahf
lcall
mov
js
loop
pusha
loopne
cs
jbe
jno
enter
cmpsb
mov
hlt
dec
mov
push
das
push
popa
jge
push
and
xchg
and
pop
popf
mov
in
lods
popf
aam
fsubl
in
lods
and
imull
add
xchg
std
mov
or
xchg
imul
mov
mov
cmp
repnz
add
fldenv
fstl
lds
xlat
ljmp
push
jecxz
push
mov
mov
xor
sbb
and
popf
pop
mov
push
adc
inc
ret
insl
mov
in
js
sarl
jge
dec
in
rcrb
jg
das
mov
jo
pop
and
pop
test
stc
scas
dec
inc
loop
stos
push
nop
push
mov
pop
jbe
adc
pop
mov
push
adc
js
mov
rorl
in
sahf
out
les
sbb
push
fs
inc
jns
call
test
dec
pushf
fdivs
xor
cwtl
or
mov
push
out
or
push
pop
mov
fs
lret
push
aas
jae
fsubs
cmpsl
ja
lods
dec
test
nop
out
mov
sahf
dec
dec
xor
or
lods
fsubl
adc
pop
sbb
fstpl
dec
in
test
addl
mov
shrl
in
adc
jg
cmc
and
dec
jns
ror
sbb
xadd
popw
sbb
mov
lods
mov
pop
and
sub
or
arpl
negl
jg
out
mov
outsb
sbb
test
daa
lahf
inc
cmp
sbb
in
mov
scas
adc
lcall
sub
ds
add
jns
repz
rcll
fwait
sbb
aaa
sub
jbe
sub
lret
or
xor
fstps
mov
movsl
test
pop
outsl
push
mov
ds
sbb
add
adcb
ret
jnp
push
movsl
fistpl
enter
mov
loopne
xchg
jb
js
pop
in
mov
lret
lea
pop
and
push
push
cli
pop
jae
xor
shrb
or
fildl
cltd
pop
adc
fwait
scas
repnz
mov
cli
cs
mov
push
push
cmp
xchg
dec
lods
test
aam
add
scas
cmp
out
mov
lock
jg
push
pop
mov
ljmp
orl
loope
cmp
adc
mov
inc
lods
jbe
pop
adc
inc
stos
mov
mov
enter
js
inc
mov
sbb
ret
adc
push
in
cwtl
aas
repnz
leave
inc
lret
loope
jmp
pop
xchg
gs
mov
dec
ds
mov
cmp
and
xchg
mov
add
xor
sub
sahf
add
adc
loope
xor
sbb
es
clc
ljmp
push
add
cmp
sub
and
push
in
sub
int3
fwait
adc
xchg
ret
jb
sbb
xor
call
repz
rclb
mov
xor
clc
lds
inc
imul
ljmp
jg
sti
mov
xchg
shrd
and
ficompl
fxch
scas
inc
push
and
or
mov
xchg
sbb
xchg
icebp
dec
jns
lret
sub
mov
imul
mov
mov
add
seta
fwait
adc
jbe
lahf
jae
push
outsb
aas
inc
adc
hlt
sbbl
test
cmpsb
nop
fisubrs
cmp
xchg
adc
dec
movsb
mov
or
bnd
test
mov
out
cmp
mov
pop
movsb
mov
xchg
cmp
cmp
xchg
cmc
test
out
pusha
pop
cmc
jmp
clc
pop
cs
jae
sbbl
mov
dec
loope
mov
loope
in
mov
or
mov
mov
jae
addr16
cmpsb
sub
mov
or
nop
addr16
mov
rcrl
fcmove
hlt
push
sub
aaa
xchg
adc
les
and
out
imul
mov
push
ds
xor
cmp
adc
xchg
mov
cmp
rol
nop
sbb
mov
rcll
sbb
inc
aas
push
xor
dec
test
pop
xchg
mov
inc
cmp
lods
cmpsl
das
rorb
mov
fstl
pop
filds
mov
add
leave
hlt
xorb
jnp
xor
negl
shrl
popa
leave
hlt
sbb
add
sti
lds
push
shr
js
sbb
pusha
push
jnp
addr16
repnz
cmc
arpl
hlt
das
mov
das
mov
insl
push
adc
les
fldenv
stos
jo
pusha
ss
sbbb
jecxz
lahf
lret
imul
data16
shll
jne
shlb
mov
or
cmp
add
cmp
rcrl
mov
jmp
sub
and
jle
gs
push
and
fisttpl
aaa
rcrb
pop
ret
xchg
inc
popf
mov
in
repz
xchg
add
lret
pop
and
sbb
add
mov
add
inc
adc
push
std
and
in
jge
out
lret
roll
xorl
movsb
or
inc
popf
jp
dec
sbb
pop
in
cmp
shrb
rol
clc
cmc
mov
inc
and
test
inc
sub
mov
jno
jp
push
bound
sbb
mov
dec
pop
stc
cmp
add
mov
movsb
das
xor
shlb
aad
xlat
push
push
pusha
cmp
stos
dec
cmpsl
loop
sti
nop
xor
test
xlat
mov
jnp
push
inc
cmp
xchg
cmc
movsl
and
sbb
in
in
out
push
mov
add
pop
fidivrl
popf
or
mov
dec
mov
jge
push
xor
sub
shlb
pop
enter
sarb
orl
mov
sahf
adc
ds
jnp
push
fcoml
pop
lret
push
dec
clc
ret
hlt
ljmp
dec
xor
xor
pop
aam
dec
add
pop
sbb
fildll
shlb
mov
jmp
sbb
xchg
xchg
paddw
les
mov
adc
mov
aas
sub
xchg
dec
jle
icebp
sarl
jb
adc
mov
and
movsl
push
and
aas
pop
mov
sarl
daa
sbb
adc
xor
movb
xchg
lods
xchg
jl
fildll
mov
ljmp
out
ljmp
fdivs
adc
sub
add
adc
dec
push
enter
enter
shll
rcll
ja
jl
inc
test
outsl
push
mov
fbld
daa
mov
popa
ss
sbb
adc
ss
or
hlt
inc
or
hlt
cmpl
cltd
push
fs
xlat
mov
inc
dec
and
repnz
add
xchg
jle
call
pop
cmp
push
jb
adc
inc
out
and
fisubrs
test
lods
mov
xlat
sbb
repz
stos
pusha
or
popf
push
jp
cvtdq2ps
mov
pop
idivb
data16
loopne
push
ficoml
xchg
lcall
sbb
xorb
mov
aad
int3
into
sub
pop
sbb
lahf
mov
pop
lret
fidivrs
pop
icebp
fs
imulb
or
lea
stc
pop
inc
enter
sbb
mov
mov
mov
mulb
rclb
mov
push
xchg
xor
loopne
in
and
jge
xor
push
enter
push
jle
jge
dec
mov
or
lock
scas
lea
lea
sbbl
popf
push
rorl
pop
adc
dec
adc
stos
add
in
mov
mov
sub
cmpsl
loope
dec
pusha
lcall
mov
jle
aam
mov
sti
movsb
jnp
fcmovnu
test
pop
fisttpll
cmp
pop
iret
out
jp
mov
jl
add
xlat
out
bound
fwait
popa
inc
insb
push
jo
ja
and
cmp
pop
lods
aas
push
out
pop
pop
dec
or
test
cmp
xchg
pushf
push
pop
mov
xchg
stos
jnp
fs
lock
jno
push
pop
aaa
fcmove
lret
adc
fcoml
sbb
out
into
mov
sbb
test
adc
in
push
mov
ljmp
sbb
push
dec
scas
push
test
mov
loope
jnp
je
daa
mov
dec
int3
jb
fs
mov
mov
adc
xor
add
adc
notb
push
ja
cmpsb
inc
call
pushf
dec
push
cmpb
ja
add
jns
loop
or
daa
popl
sub
adcb
arpl
fldcw
aam
adc
push
mov
push
xor
sub
fidivl
dec
mov
in
ficomps
jl
addr16
lcall
and
sub
icebp
cmp
aam
jne
pop
stos
mov
mov
inc
push
jae
cmp
pop
mov
je
add
add
rcr
jb
jle
cmp
or
outsb
sbb
call
cwtl
test
pop
sbb
sub
jp
or
fwait
jg
jb
or
repnz
or
pushf
movsl
fidivs
movsb
in
jecxz
cmpsb
sbb
inc
arpl
rolb
jg
fists
dec
dec
push
pop
mov
push
push
xchg
bound
inc
lods
xchg
icebp
out
lds
popl
fs
outsl
pop
push
jnp
xchg
rorb
sub
jl
rcl
cli
je
aaa
arpl
inc
jno
lock
push
jbe
in
cmp
lret
pop
xchg
pusha
jne
sub
sbb
cs
insl
iret
pushf
xchg
mov
mov
rcl
pop
adc
rcl
push
inc
and
fnstsw
mov
fisubl
imul
test
pushf
ja
fwait
or
xchg
lds
pop
mov
inc
mov
add
mov
loop
stos
sarl
inc
xchg
adc
repnz
sub
jge
xor
or
in
loop
xor
loop
cs
cmpsb
int
stc
sbb
sub
pop
mov
xlat
and
mov
call
cmp
ja
fwait
mov
insl
mov
ret
pop
ss
dec
add
scas
aaa
fnsave
shll
sub
xor
imul
scas
pop
rclb
test
mov
jge
xor
lret
mov
push
lds
push
addr16
and
lcall
fstpl
loope
inc
int
inc
inc
loopne
mov
lock
stos
push
cltd
xor
adc
push
cmc
out
loop
inc
mov
cmpsl
je
push
adc
cmpsb
loopne
inc
pushf
jae
lret
roll
test
mov
into
popa
loope
sbb
shll
and
and
adc
adc
iret
dec
loope
mov
jmp
fldl2t
push
loope
jp
push
in
lcall
jmp
aam
cmp
add
fdivrs
jno
pop
subb
test
adc
mov
mov
stos
sbb
push
and
leave
dec
data16
sbb
xchg
cmp
cmp
aam
xchg
xor
push
sbb
cmp
and
dec
push
hlt
sbb
mov
gs
jno
sbb
es
shll
sbb
and
xor
dec
inc
insl
icebp
test
xchg
sbb
adc
mov
push
cli
cmc
rorb
inc
stos
scas
idivl
cmp
in
mov
testb
fmuls
cmp
fwait
mov
test
arpl
insb
pop
push
jmp
ja
arpl
inc
mov
pop
inc
ljmp
pop
xor
push
lea
xorb
cwtl
mov
jle
cmpsl
stc
mov
ds
inc
mov
into
icebp
in
sub
lds
out
and
mov
test
and
stc
or
cld
fldenv
pop
frstor
cmc
push
test
fdivr
jne
xchg
idivb
loop
mov
xchg
push
aaa
jae
in
xchg
cld
loope
fstl
push
jg
cmpsl
pop
pusha
cltd
cmp
and
add
mov
clc
mov
sarl
adc
mov
int
rolb
repnz
lret
push
or
gs
mov
pop
paddusb
xorb
scas
lcall
and
and
or
xchg
dec
adc
int3
rcrl
lock
scas
push
inc
add
lahf
sub
aam
fisttps
imul
xchg
in
and
adc
and
or
cmpsb
rcll
pslld
and
iret
jp
dec
call
dec
jmp
popa
repz
es
lods
sub
sbb
jmp
andb
rorl
and
ds
inc
dec
mov
pop
rcll
stos
popa
orb
outsl
and
cmc
shrb
mov
test
into
popa
loopne
xor
adc
je
mov
or
mov
xor
lret
pop
mov
icebp
ret
shrl
adc
xchg
dec
addb
fnstcw
dec
stos
lea
push
jle
arpl
adcl
jbe
xchg
pop
inc
mov
jb
cli
lds
addb
dec
and
test
in
ret
pop
and
add
sbb
fistpll
mov
aaa
jb
stos
sub
cmpsl
dec
mov
bound
cmp
inc
add
cs
xchg
lcall
shll
imul
jecxz
xor
icebp
aad
ret
mov
gs
lods
aam
mov
xchg
xchg
add
es
jo
jp
insb
int
and
es
inc
mov
shl
sub
push
cwtl
push
xchg
test
xor
incb
and
ret
aas
mov
pop
inc
ljmp
popa
ljmp
dec
ret
pop
jne
shll
ss
push
cmp
and
addr16
dec
adc
sub
lcall
insb
xorl
mul
xchg
and
fimuls
fsubs
insb
adc
mov
mov
sbb
jmp
dec
mov
sarb
movsl
data16
jno
nop
insl
test
push
sahf
outsl
mov
inc
adc
ret
xor
cmpsb
in
and
xor
xor
ficoms
cld
fscale
roll
inc
test
push
mov
push
mov
popa
cmp
sahf
sbb
pop
mov
cmpb
lock
aaa
pop
jg
call
or
ds
or
repnz
scas
sub
dec
jbe
and
test
lahf
stc
iret
bnd
sahf
cli
sahf
dec
or
add
enter
or
cmp
mov
cmpsl
lret
sti
in
cwtl
pop
mov
lcall
pop
je
mov
es
jbe
inc
mov
xor
cmpl
inc
into
and
sbb
adc
lods
add
sahf
lret
test
ret
je
int
mov
shlb
mov
stos
neg
add
dec
fistpll
ret
mov
jg
jl
leave
or
jge
in
cld
fs
pop
loop
test
sbb
rolb
cld
xchg
mov
xor
insb
sub
outsl
xor
ja
das
inc
xlat
sbb
pop
push
add
and
nop
lods
adc
clc
mov
jae
mov
loop
mov
jae
add
loopne
into
mov
mov
ficoms
insb
sti
push
shll
in
cmpsl
push
add
or
jl
mov
shr
push
int
aas
dec
dec
pminsw
mov
fisubrl
sarl
pop
push
xchg
push
sbb
scas
xor
jno
rcr
jo
jnp
sarb
iret
std
sbb
mov
xor
mov
or
dec
lock
jnp
fisubrs
mov
pop
test
bound
mov
and
repz
sub
xlat
les
int3
pop
jge
mov
push
out
daa
daa
mov
cwtl
xor
mov
movsl
mov
push
sbb
pop
jns
jmp
push
shlb
in
iret
lret
fimull
cmp
test
jmp
xor
xchg
jo
mov
in
jp
test
movsb
mov
fcmovne
xor
fdivs
imul
dec
mov
loopne
mov
ljmp
mov
sub
xchg
fs
leave
fcomps
sub
insb
mov
mov
lret
je
xor
ljmp
subl
cli
scas
mov
sti
outsl
clc
mov
jns
mov
mov
cmp
filds
xchg
ljmp
inc
xchg
andb
dec
mov
inc
lea
add
test
popf
push
push
inc
xchg
int3
xchg
jg
add
xlat
cmpsl
lcall
add
dec
inc
jg
inc
mov
sbb
jg
xchg
ja
movsl
dec
cmp
jle
mov
adc
inc
push
gs
cmpsl
or
cltd
repz
mov
inc
out
xlat
divl
mov
out
lcall
push
mov
and
or
out
outsl
popa
sub
pop
cwtl
arpl
lock
inc
push
cltd
mov
pop
fldl
cmp
dec
add
fsubp
push
dec
loop
movsb
jbe
mov
xchg
or
pop
sub
stos
mov
mov
jp
lock
test
cmp
add
popa
mov
lret
es
pop
add
test
xor
cld
or
lods
std
cmpb
lods
jle
mov
or
insl
das
push
sti
enter
loope
aad
mov
xchg
or
es
mov
cltd
stc
dec
frstor
jnp
xchg
mov
shll
jmp
jae
sbb
or
mov
and
add
xor
sub
negl
add
and
loope
add
and
cmpsl
push
sbb
mov
dec
jb
test
jge
test
insl
push
mov
or
repz
cmp
add
and
jmp
and
dec
pop
call
les
loopne
ja
jbe
leave
push
fstl
push
loopne
dec
fcoml
jp
cmp
mov
xor
or
ret
mov
insb
add
out
mov
and
inc
sahf
cmc
mov
popa
add
push
fsubrs
dec
push
sub
mov
jne
testb
inc
fucomp
xor
mov
sbb
sbbb
aad
push
ds
mov
pop
mov
into
subl
lods
jl
xor
pop
stos
inc
and
mov
xor
push
sahf
pusha
mov
xchg
xchg
inc
mov
mov
rcr
aas
inc
dec
and
or
lcall
jnp
push
mov
push
lret
dec
subps
push
xor
or
int3
shlb
jbe
out
cmpsb
lock
jae
loope
popf
xorl
js
lret
sbb
sub
pop
and
ret
and
jno
repnz
dec
scas
popa
push
lods
dec
mov
aam
test
fistl
mov
cli
mov
add
push
icebp
imul
leave
sbb
sbb
cmp
sahf
lret
jno
sub
clc
lret
aad
insb
cli
gs
mov
loope
ud1
and
dec
je
fcomp
or
jne
or
cld
jns
cmp
stc
imul
inc
push
mull
popf
cs
pop
fsub
aad
test
adc
dec
mov
cwtl
jmp
inc
mov
aad
out
daa
pop
cmc
shll
xchg
test
mov
push
les
ljmp
cld
dec
or
aaa
pop
jno
dec
push
pop
in
push
repz
jo
mov
int
sub
cltd
push
xchg
cmp
adc
xchg
out
lret
lock
xor
stos
jmp
call
jle
dec
mov
xlat
test
call
frstor
addl
fmuls
jle
stos
clc
stc
fdivrl
sub
bound
mov
fs
jmp
push
daa
jno
popa
negb
je
cli
pop
cmp
iret
sbb
sub
and
add
stos
push
pop
lret
mov
sbb
or
add
fdivl
sbb
outsl
lea
or
add
shll
in
sbb
mov
inc
xchg
fsts
fisubrl
mov
inc
push
lods
fimull
add
lret
scas
jo,pn
cmpsb
and
or
movsl
xchg
and
and
insb
adc
cmp
lods
cmp
xchg
sbbb
lock
dec
push
or
jbe
xchg
and
hlt
add
or
push
push
outsb
daa
jne
std
adc
inc
pop
cmpsb
daa
scas
push
jmp
or
jg
adc
pop
imulb
out
and
add
je
mov
sbb
inc
divl
and
xchg
lds
jmp
jecxz
xchg
mov
mov
mov
fmull
int
aas
loopne
or
gs
pop
sbb
jno
mov
jne
lea
imul
mov
jp
fsubs
add
pop
js
cltd
cmp
push
mov
aam
repnz
jge
fcoms
add
push
jno
adc
ss
ljmp
daa
cltd
mov
push
cwtl
pop
jge
xchg
xchg
xchg
sub
cli
xchg
es
xlat
sub
add
mov
jmp
fisubrl
xchg
adc
or
mov
mov
mov
call
cmc
dec
cmp
xchg
sbb
sub
call
mov
jp
xchg
test
addr16
push
mov
and
mov
cs
add
aas
push
insb
sbbl
mov
push
lock
stc
mov
scas
fwait
sbb
andb
icebp
sbb
or
lcall
pusha
xor
popa
xor
nop
dec
cld
pop
cli
mov
cmp
pop
fwait
int
or
pop
cmp
push
cltd
jg
out
loope
jns
mov
pop
xchg
mov
fcmovne
mov
jo
adc
andb
jecxz
fistpll
mov
sbb
std
outsl
stos
hlt
lret
add
mov
fadds
imul
and
adc
dec
push
mov
scas
mov
pop
std
mov
sbb
sub
xchg
pushf
add
fwait
push
outsb
push
lea
sbb
cs
pop
out
loopne
mov
cmp
adc
pop
leave
fists
and
jmp
xchg
dec
and
jl
adc
not
out
icebp
adc
jb
mov
push
sbb
xor
test
or
dec
sub
add
stos
and
hlt
clc
daa
pop
jmp
sbb
push
add
jmp
fs
sbb
jae
roll
add
mov
test
arpl
push
icebp
xchg
bound
imul
in
mov
dec
aam
cld
mov
repz
cmp
mov
xchg
loope
inc
fidivs
out
or
mov
inc
test
xor
jg
dec
adc
ds
mov
sbb
and
test
popa
inc
push
inc
insb
shlb
test
adc
jns
mov
push
bound
dec
pop
pop
idiv
fcomi
stos
xlat
mov
jnp
push
clc
sub
cmpsb
inc
pop
adc
push
imul
push
xchg
and
cmp
test
std
mov
fwait
scas
xor
aaa
push
push
hlt
xor
fincstp
mov
enter
nop
hlt
cld
mov
scas
pop
push
adc
cmpsl
xor
sbb
xchg
pop
xor
pop
sbb
sti
lret
cmp
mov
adc
fwait
dec
loop
dec
mov
jle
or
outsl
pop
push
or
adc
imul
cld
int3
lods
xchg
test
adc
rcrb
cli
loope
subl
ret
mov
jp
pop
dec
cmp
sarl
jo
sbb
inc
test
adc
jae
xor
ret
lahf
enter
movsl
stc
test
pop
gs
cmp
movsl
insb
pop
shlb
dec
add
call
push
lret
sbb
cs
lods
loope
push
fdivrs
jne
lahf
testl
push
jbe
mov
lahf
bnd
lea
fs
mov
lock
pop
popf
test
xchg
jne
xchg
xor
push
dec
push
stc
pushf
xchg
xor
or
loop
sbb
in
inc
lods
dec
imul
pop
pop
outsb
sbb
mov
pushf
gs
out
mov
push
aas
inc
pop
adc
xlat
daa
push
xchg
sbb
xchg
stos
cltd
aaa
in
inc
mov
lret
mov
xchg
mov
xor
or
inc
out
adc
sbb
pop
icebp
js
add
and
and
hlt
xchg
jbe
stos
inc
aad
hlt
jmp
or
dec
rclb
sti
clc
movsl
cs
mov
lret
xchg
pop
ss
popf
jae
bound
fwait
inc
jno
mov
adc
sub
cwtl
js
pushf
xchg
push
mov
fsubrl
jbe,pn
inc
loop
cwtl
dec
insl
lcall
add
fmul
cmpsb
incl
xor
inc
jg
lock
imul
push
imul
lret
or
movsb
addr16
mov
mov
sub
pop
in
jp
sbb
mov
aaa
or
push
popf
push
sub
push
mov
shrb
dec
daa
xchg
cmc
add
adcb
mov
sub
ja
bound
lret
scas
cmp
xor
dec
js
pop
pop
push
inc
push
es
push
lcall
lods
xorb
xchg
lods
xor
cmp
loope
adc
int3
icebp
mov
mov
push
out
push
xor
mov
rcll
push
aas
cmp
mov
xor
dec
mov
push
imul
push
daa
ret
in
inc
es
clc
pop
into
ljmp
adc
mov
cmp
sbb
dec
ret
aas
push
mov
push
push
ljmp
adc
popa
and
loop
push
les
out
int3
bound
pushf
ret
js
mov
call
xlat
sbb
push
xorl
imul
stos
xchg
inc
lret
push
hlt
inc
xor
mov
sub
cmp
addr16
js,pt
xchg
xchg
or
rorb
test
dec
mov
xchg
mov
pop
push
sbb
insl
test
cli
jnp
xlat
test
in
pusha
out
fsubl
mov
mov
push
dec
popf
mov
adc
insl
push
lea
inc
jns
fwait
loopne
push
lea
push
push
xchg
dec
bound
sbb
pop
pushf
cmp
iret
add
outsl
fldcw
and
mov
scas
jg
pop
shll
lret
xchg
mov
xlat
movsl
iret
pop
dec
std
adc
xor
xchg
mov
in
and
and
in
jp
xchg
int3
cmp
test
lcall
in
pushf
flds
fs
fsubl
repnz
push
sub
jnp
or
out
ret
mov
xchg
add
ret
mov
mov
shrl
mov
iret
fisubrs
in
les
push
push
push
mov
push
pop
and
cld
pop
fdivs
icebp
ljmp
flds
mov
mov
sbb
outsl
lds
xchg
cmpsb
aam
mov
jo
cwtl
xchg
cmpsb
lret
sub
sub
mov
mov
pushl
and
cmp
mov
sbb
rorl
out
xorb
and
icebp
fdivl
jno
in
mov
jne
insb
addr16
in
and
fisubs
inc
leave
nop
movsb
push
mov
lret
negb
ss
adc
outsb
lock
enter
cli
dec
inc
ss
mov
xchg
dec
insb
jnp
cmp
mov
cld
loop
mov
adc
dec
pop
jle
sarl
mull
inc
gs
imul
sub
loope
cmp
and
iret
lds
xchg
add
out
inc
add
outsl
cmove
mov
ret
sub
cli
mov
sub
stos
add
push
sti
xor
pop
in
dec
or
inc
mov
je
mov
inc
xor
sbb
inc
mov
aas
add
sub
mov
es
lahf
and
stos
cmc
out
mov
fcmovnb
sbb
adc
push
insl
sbb
aam
xchg
jecxz
mov
mov
insb
scas
or
pop
mov
shr
mov
adc
ss
mov
mov
popa
ret
movl
in
loop
jge
rol
outsl
jnp
dec
sar
add
jno
and
popf
inc
sahf
sbb
jge
cmp
push
sub
mov
jno
inc
push
sbb
imull
lea
stc
insb
sbbb
inc
fdivrl
fxch
out
dec
jecxz
adcb
ret
adc
xchg
decb
mov
lret
add
mov
jecxz
mov
xor
cmp
push
pop
cs
sbb
jl
sbb
sahf
shrb
inc
adc
les
jns
stc
shrb
push
out
cmp
fs
push
das
outsl
stc
mov
mov
stos
dec
mov
lahf
dec
bound
mov
hlt
mov
clc
movsl
or
dec
inc
adc
mov
mov
pop
cmp
shrl
icebp
int3
mov
cmp
sbb
aam
sbb
cmp
pushf
icebp
cmp
adc
flds
ljmp
notl
movsb
pop
test
inc
jmp
push
add
div
mov
adc
fldenv
inc
clc
cmp
add
cli
sti
inc
enter
push
mov
aaa
ret
push
mov
test
ljmp
call
testl
xchg
xchg
js
popa
aaa
push
es
aad
push
add
pop
mov
add
rorb
inc
push
sub
int3
add
call
incl
and
push
push
sbb
mov
mov
jl
cs
sub
xor
xchg
add
fcmovne
push
int
mov
out
outsb
std
xchg
xchg
daa
enter
pop
pop
xchg
sbb
push
mulb
daa
xor
xchg
clc
sub
sub
cmp
adc
icebp
and
lret
dec
cld
jo
pop
lea
arpl
cmp
cpuid
fimuls
jmp
jnp
cs
adc
out
movsb
in
loop
inc
jae
stc
push
shlb
push
mov
xor
gs
rcrl
adcl
pop
and
push
sbb
mov
sub
mov
xor
jbe
push
xor
stos
repnz
xlat
push
jns
dec
ss
xorb
cwtl
add
mov
xchg
cmp
pop
into
ss
push
mov
xchg
and
add
repz
jg
outsl
mov
jp
iretw
out
mov
sbb
dec
sarb
imul
mull
mov
pop
cmp
cli
leave
adcl
mov
jbe
xor
scas
inc
jl
jecxz
faddl
xchg
xchg
or
test
ja
push
out
call
out
insl
jae
sbb
pop
adc
and
sbb
ret
cld
mov
mov
jo
ljmp
gs
inc
pop
movsl
mov
sbb
cmp
xchg
ja
nop
std
or
mov
stos
xor
and
roll
pop
fcomip
sub
jno
mov
mov
inc
mov
sarb
in
push
push
adc
imul
je
adc
xor
lods
mov
insl
jg
pop
les
roll
cmp
push
lret
mov
xor
cmpsl
in
cmp
les
jbe
aas
jno
out
pop
fldcw
pop
out
mov
add
inc
repnz
mov
jmp
ss
and
push
div
mov
xor
je
lret
pusha
stos
sub
cmp
pop
jb
test
xchg
imul
jb
dec
xor
jg
cmp
cmc
lret
and
pop
mov
cmp
ficomps
and
jg
fs
mov
jne
xor
rcl
mov
and
cmp
pop
loope
sub
push
loope
outsl
loope
int3
aaa
push
rclb
pushf
inc
cmp
push
mov
mov
push
ds
jecxz
daa
mov
in
icebp
ss
mov
push
pop
mov
mov
jmp
xor
js
jmp
cmp
call
jmp
dec
sbb
imul
sar
pop
xor
insl
cld
hlt
es
xor
mov
shrl
scas
sahf
sub
test
mov
jbe
cmpsb
pop
stos
andl
mov
loop
sub
xlat
rorb
xor
fs
pop
xchg
outsb
inc
xor
cmpsl
dec
inc
xor
xor
adc
add
mov
test
mov
lret
addr16
icebp
idivl
xlat
repnz
inc
cmp
repz
add
pop
or
aam
add
aam
add
adc
inc
pop
pusha
ss
xor
pusha
mov
adc
xchg
add
push
loopne
jno,pn
pop
int
test
inc
pop
lods
das
test
xor
mov
adc
movsl
adc
cmp
adc
aas
popa
idivl
mov
mov
inc
cltd
and
add
sub
test
in
pushf
xlat
xor
pop
outsl
mov
inc
or
loope
jecxz
pop
scas
insb
cmp
bound
ret
hlt
cltd
mov
mov
add
inc
cmp
test
shrl
adc
xor
aam
stc
pusha
push
cmp
jne
inc
cmpsl
arpl
pop
push
cmp
call
pop
lea
inc
xor
add
mov
adc
add
loop
push
mov
les
rorl
mov
add
xchg
pushf
lds
sahf
jns
mov
shrl
enter
jbe
push
sub
xchg
fcmovb
adc
sarb
rcll
sub
mov
repnz
addl
loopne
push
jae
fistl
test
push
sub
rep
and
cmp
jns
and
clc
shlb
or
push
adc
jo
das
push
cltd
and
mov
or
add
jecxz
dec
fs
mov
lock
mov
cwtl
jb
sub
notb
xor
fsubrs
and
movsl
subl
jg
dec
mov
repnz
pop
push
mov
in
in
fcoms
sbb
ds
clc
xchg
mov
les
push
mov
test
test
lds
js
add
fsts
lods
mov
push
mov
cmp
pop
lcall
sahf
or
mov
aaa
leave
jo
sbbl
mov
and
vpmulhuw
xchg
dec
push
cmp
or
jne
ljmp
push
inc
lock
cmp
mov
push
jge
xor
int3
sbb
mov
sub
fadds
inc
nop
ret
push
cmp
xchg
push
inc
sbb
sbb
leave
sahf
adc
mov
ror
jge
mov
test
push
and
subl
jns
test
insl
xor
cs
mov
aam
or
ljmp
mov
in
test
sarb
fcmovbe
fiadds
or
dec
movl
lcall
pusha
mov
push
fwait
push
and
sti
mov
jg
mov
in
inc
mov
push
jne
add
mov
xchg
sbb
popa
xor
lahf
inc
adc
jge
push
test
std
mov
cwtl
insl
popa
icebp
pop
mov
fs
xchg
sbb
push
lret
mov
in
mov
xchg
orl
cld
inc
adc
sub
mov
jmp
push
stos
stos
popf
add
and
sbb
test
adc
mov
faddp
decl
xchg
jle
and
mov
lds
into
rcl
and
jg
sarb
jp
int
dec
cld
ret
pusha
cmpsl
je
push
sti
adc
daa
ret
cmp
aam
mov
into
add
aad
jp
lea
mov
pop
fcoml
add
adc
sub
xchg
jae
out
jmp
mov
xchg
lret
jmp
sub
pop
add
jae
sbb
pop
cmp
stos
outsl
xchg
ss
aas
dec
adc
sbb
test
push
adcl
fdivr
in
mov
pop
xor
aas
xchg
mov
das
jl
ds
add
inc
outsl
aad
popa
bound
or
ja
addr16
pop
pop
mov
mov
fs
dec
out
ds
int
sbb
stos
mov
sub
xchg
mov
jp
mov
ja
cmp
int
sbb
inc
cmpsb
dec
les
mov
loop
mov
inc
jge
or
sbbl
xchg
imul
sbb
xchg
mov
and
bound
cmp
mov
xchg
enter
outsl
dec
negb
loop
mov
sahf
lock
dec
push
pop
sbb
mov
dec
mov
jl
push
push
or
add
push
jle
add
lock
iret
mov
idivl
scas
cmp
and
add
bnd
fisubs
cmp
mov
jge
mov
mov
test
inc
mov
mov
add
subb
test
push
sbbl
sti
pop
jl
out
test
ja
push
jg
movsl
jbe
fisubrl
rolb
mov
mov
mov
fs
pop
test
cmp
pop
xchg
fisttps
sbb
lea
mov
jnp
mov
cmp
aaa
out
mov
stos
mov
addl
repz
or
sub
xchg
in
jns
push
xor
enter
jp
test
pop
leave
xchg
aaa
imul
cmpsl
cld
dec
push
mov
js
aad
dec
call
bound
aam
in
stc
int
das
sub
sub
or
imul
mov
xor
loope
pop
in
sub
nop
mov
push
inc
test
bound
or
cmc
dec
aad
xor
in
mov
jo
xchg
cmc
xor
xlat
mov
mov
dec
inc
pop
inc
into
cld
shlb
sbb
xor
mov
mov
adc
sub
fistl
jecxz
mov
movsl
jmp
inc
pop
xchg
ljmp
jmp
imul
movsb
fbstp
aad
les
cs
jo
aad
dec
dec
imul
inc
ret
lods
ljmp
repz
pop
mov
ljmp
sbb
mov
mov
jo
sub
jmp
mov
jmp
sub
jmp
jnp
movsl
faddl
ret
cmc
push
scas
loopne
jl
cmp
mov
mov
sti
fmulp
sub
js
stos
jne
mov
add
pop
pop
cmp
pop
xchg
cld
mov
push
loope
movl
and
push
int3
in
sbb
mov
cmp
loopne
dec
pop
cltd
push
clc
cmp
bndstx
mov
fs
stos
mov
daa
popf
in
idivb
mov
xor
nop
push
rol
sub
out
xor
and
xor
mov
mov
mov
dec
movsb
and
cs
sarl
dec
dec
popf
addr16
mov
jmp
push
out
cwtl
inc
in
xchg
test
aad
out
lock
or
dec
or
mov
pop
ss
pop
jp
mov
popf
and
mov
inc
push
movsb
jmp
testb
or
stos
mov
push
xchg
cmpsl
outsb
push
in
fisubs
mov
das
dec
cmp
jecxz
jnp
mov
ljmp
mov
pop
pop
or
push
in
sar
imul
add
push
imul
lret
lret
in
mov
pop
cmp
mov
mov
mov
movsl
jo
out
sbb
pop
lods
scas
movsb
jns
movsl
jnp
inc
ljmp
xchg
test
stos
xchg
dec
loopne
lds
popf
hlt
cld
out
sbb
pop
mov
insl
call
inc
ljmp
inc
insl
ss
je
gs
sub
shl
stos
jno
xor
mov
movq
cmp
in
shll
or
jb
xor
cmp
mov
data16
subb
xor
insl
mov
push
ret
jg
inc
scas
mov
je
jp
push
stos
pop
in
in
fsubs
mov
and
imul
stos
push
jo
ja
sub
pop
jmp
lcall
out
pop
mov
out
mov
dec
add
push
inc
pop
inc
push
into
xchg
fdivr
repnz
dec
repz
movsl
hlt
cmp
xchg
stc
mov
jo
or
xchg
jnp
pop
ret
idivb
jmp
mov
xchg
adc
xchg
cmpsb
pop
test
push
lods
mov
sub
cmp
pusha
mov
enter
pop
divl
jne
mov
ljmp
pop
rcr
and
dec
enter
les
int
repz
sbbl
xchg
rcll
scas
push
add
cs
in
mov
fisttpll
fdivrs
push
cmp
rdmsr
or
pop
int3
xchg
cld
bound
in
xchg
dec
pop
sub
xor
sub
lods
loopne
fs
clc
sbb
sbbb
jb
cmp
add
daa
lds
daa
out
in
push
scas
repnz
pusha
lea
mov
rorl
inc
stos
popf
xor
shll
ljmp
add
dec
cmovg
push
popf
lret
repz
pushf
inc
mov
sub
clc
and
mov
cmp
movsb
jecxz
dec
cld
mov
add
push
test
imul
add
and
test
es
mov
test
add
mov
jo
insb
add
push
fnsave
or
sub
mov
orb
lret
dec
xchg
jbe
data16
inc
mov
outsl
decl
lcall
add
pop
jo
xchg
and
sahf
mov
mov
or
and
daa
popf
sub
cmp
push
loopne
mov
sub
inc
mov
mov
jg
jge
sub
int3
hlt
lahf
push
bound
cli
xor
imul
outsl
xor
mov
test
sub
jecxz
jg
inc
adc
sahf
into
mov
mov
data16
fldenv
test
adc
clc
mov
and
lds
or
add
iret
inc
xor
xchg
xchg
rcll
add
test
push
js
jle
pop
pop
ja
cmpl
or
xchg
in
sbb
fsts
movsl
adc
jge
xor
les
fcomi
aaa
movsl
push
movsb
insb
lret
fadds
les
addr16
lahf
repz
js
sub
and
xorl
daa
xor
sti
add
mov
pop
sbb
shl
stos
push
cmpsl
inc
push
fistps
xor
sbb
xchg
inc
adc
pop
ret
pop
push
lock
mov
xor
jno
sub
out
mov
lods
push
lahf
jge
dec
in
repnz
or
xchg
mov
push
xchg
dec
add
icebp
or
ror
outsb
push
mov
dec
mov
mov
xchg
into
rcl
ret
mov
dec
jecxz
adc
sub
sub
mov
js
jo
sti
repnz
or
jno
movsl
dec
stc
icebp
adc
mov
add
sahf
mov
xor
inc
mov
cmp
data16
loop
push
inc
fld
fidivs
pop
leave
add
xchg
mov
stos
lret
inc
mov
test
dec
repnz
mov
push
in
sbb
pop
mov
sti
test
jbe
sbb
popa
dec
push
pushf
xchg
xor
inc
les
repnz
ffreep
out
mov
les
adc
adc
push
inc
sbb
pop
fdiv
or
xlat
cld
inc
sub
xchg
pop
and
cld
in
lret
sub
pop
lret
aad
pop
inc
addr16
or
cmp
jno
loope
sbb
push
mov
addl
sub
xor
in
imulb
sub
enter
cs
cmp
pop
xchg
in
xor
and
in
push
lcall
adc
add
mov
jo
cmp
mov
sti
sub
rcll
into
jmp
mov
cmp
out
sti
jmp
movsl
jbe
in
add
xchg
sub
adc
and
jge
pop
cld
and
insl
mov
insb
mov
adc
jo
das
inc
push
or
loop
add
icebp
mov
inc
push
in
outsl
and
xchg
add
adc
cmpsb
ss
sbb
dec
cmp
dec
sar
dec
out
ds
and
and
call
or
out
imul
in
jne
jae
call
mov
push
jl
out
dec
sbb
inc
nop
sbb
out
push
push
cmc
mov
mov
mov
into
shlb
and
xlat
cli
divb
add
orb
shll
dec
jmp
xchg
call
lock
std
je
scas
sub
sti
dec
cmpsl
mul
jb
cmc
ret
sar
inc
cmp
fisubrl
jecxz
dec
iret
ffree
sahf
jecxz
xchg
mov
fidivs
ss
std
xor
stos
data16
xchg
xchg
insb
cmpl
lods
addr16
enter
mov
stos
and
mov
push
inc
nop
dec
or
push
push
add
int3
adc
jecxz
out
movsl
xor
scas
lahf
jp
loop
pop
mov
ret
popf
cld
add
in
sahf
insb
add
mov
xor
sub
adc
xchg
test
sbb
mov
and
dec
and
push
mov
andl
mov
fdivr
cmp
xchg
sbb
sub
push
xlat
jecxz
aad
push
push
addb
cmpsl
pop
lret
daa
inc
fstpt
mov
pop
pop
hlt
or
cmp
pop
pop
inc
xchg
push
jmp
fdivrs
or
ss
sub
aam
hlt
icebp
outsb
mov
xchg
mov
mov
subl
lret
lds
pop
enter
or
mov
in
inc
pop
jmp
and
aas
cltd
imul
mov
movsl
roll
outsl
imul
out
xchg
lret
dec
or
sarl
lret
jnp
pop
data16
dec
aas
das
ret
jno
mov
xor
pop
ret
push
or
pusha
cli
sbb
popa
sub
push
jno
xor
pop
repz
daa
les
lea
aad
mov
push
stos
leave
hlt
jle
mov
mov
dec
xchg
loop
imul
mul
jb
mov
fidivl
add
cmc
loopne
or
call
mov
sti
pop
add
out
and
ljmp
pop
cmpsl
dec
inc
sbb
lcall
lahf
add
aas
fwait
dec
jmp
adc
outsl
fstpl
mov
test
jle
mov
push
jno
xor
xchg
test
lods
cltd
mov
mov
xchg
imul
sub
xchg
adc
inc
xchg
popa
fnstenv
pushf
push
xchg
mov
mov
movsb
pop
pop
add
adc
arpl
add
aad
add
mov
jmp
mov
sarb
popf
xchg
lret
push
cs
in
fsubrl
inc
iret
inc
sahf
enter
or
repnz
or
or
les
inc
in
sbb
add
jb
fadds
out
sahf
pop
jp
pop
loop
sti
gs
scas
and
out
and
test
sbb
imul
test
lret
jl
lock
xchg
push
mov
jl
sub
mov
dec
mov
adc
sbb
fiadds
cmc
nop
pop
inc
dec
and
out
xchg
push
push
mov
popf
mov
xchg
daa
jno
gs
mov
mov
cmp
lret
cld
ret
xchg
sbb
push
test
out
sahf
xchg
pop
les
cmp
adcl
test
stc
push
in
dec
icebp
sbb
inc
adc
adcb
sti
mov
insb
or
mov
xchg
sbb
push
adc
push
sbb
xor
cmp
std
out
xlat
mov
sbb
sti
ljmp
idivl
mov
data16
mov
adcl
lea
inc
lcall
jno
push
jo
jp
xchg
daa
das
xchg
xor
in
sbbl
jae
and
mov
fsubl
mov
loopne
stos
mov
xor
inc
mov
pop
lcall
ljmp
sbb
adc
in
pop
orl
push
xchg
daa
lret
aam
xchg
dec
das
aaa
lds
outsb
jge
pop
jns
push
or
mov
inc
jne
inc
push
mov
out
test
call
call
enter
push
idivb
jne
and
jae
stos
js
testb
mov
insl
jo
mov
ficomps
sub
add
ds
jmp
inc
sahf
dec
mov
mov
push
outsb
mov
outsl
xchg
scas
xor
sub
xchg
inc
inc
jo
jmp
push
call
jge
popa
cmpb
movsl
xor
out
mov
jb
sbb
cmp
xchg
push
stos
xchg
mov
pop
cmp
fistps
lods
fiadds
shrl
fildl
cmpsl
into
pop
pop
jae
jp
jg
loop
sbb
clc
lret
call
xchg
inc
sbb
inc
inc
lods
dec
sbb
je
movsb
nop
or
pop
add
repz
in
dec
or
sarl
sbb
jae
lds
sbb
mov
inc
in
mov
fwait
lret
addl
and
in
and
stos
icebp
jp
inc
unpckhps
pop
sub
pop
test
outsl
and
xchg
xchg
xor
rolb
fwait
xchg
in
popa
sbb
and
or
sub
fistl
xchg
mov
mov
cmc
jo
icebp
test
push
and
fstpt
nop
inc
lahf
ficoms
out
xchg
out
push
aaa
fmuls
dec
adc
xchg
pushf
jb
cltd
aas
out
cld
mov
out
loope
add
inc
ret
lds
jl
fsubrs
xchg
or
jne
incl
push
int3
fucom
pop
mov
push
test
cmc
test
sbb
mov
aam
push
push
repz
insl
sahf
fbstp
scas
xchg
sub
pop
xor
add
test
pop
or
leave
nop
out
pop
xchg
xchg
invd
lahf
mov
jmp
in
cmp
pop
in
push
xchg
dec
outsl
or
lret
push
sbb
jne
int
cmp
filds
push
jb
lock
rcl
inc
push
xchg
pop
or
and
push
es
dec
mov
cltd
cmp
movsl
insl
adc
mov
xlat
in
insl
add
sub
xor
cltd
jno
inc
mov
mov
pop
push
sub
xor
mov
shlb
sub
inc
mov
pop
sub
bound
pop
cmp
sub
pop
xchg
inc
fs
push
push
mov
mov
in
mov
jmp
or
xchg
es
mov
loope
stos
xchg
jmp
es
leave
push
pusha
mov
popf
cmpsl
in
inc
jmp
rorl
jne
js
cmp
cmp
cmpsl
out
mov
sarl
xchg
push
fwait
rcr
jmp
mov
lods
jp
push
push
fiadds
adc
cmpsb
in
jge
mov
pushf
sbb
push
mov
dec
je
fnstsw
push
lret
jg
dec
sbb
fiadds
lcall
movsl
mov
imul
imul
test
movsl
push
repz
out
push
stos
frstpm(287
mov
jnp
scas
mov
add
loope
int3
mov
push
xchg
test
mov
insl
dec
test
push
push
mov
pusha
pusha
movsb
mov
dec
cmp
rep
or
sub
mov
cmp
pusha
lds
adc
push
xchg
jmp
pop
les
loop
mov
movsb
lds
inc
lods
mov
sub
pop
dec
and
inc
push
pop
aas
stc
das
mov
mov
out
mov
push
mov
push
imul
and
data16
stos
lcall
push
lret
push
inc
pop
mov
adc
pop
outsb
xchg
adc
lcall
shll
lods
aaa
add
mov
ret
test
or
adc
push
pop
lds
cwtl
fiadds
mul
xor
jle
add
repz
jecxz
inc
ljmp
hlt
mov
lret
sarb
fwait
mov
dec
sub
testl
inc
jmp
scas
xchg
pop
inc
and
shl
les
pop
xor
popa
mov
xchg
mov
inc
cmp
das
sbb
in
rcl
insl
mov
xchg
inc
mov
or
inc
lea
xchg
xchg
cmpl
nop
sbb
jb
jb,pn
test
lods
push
imul
nop
pop
scas
xlat
push
ljmp
jbe
sub
and
mov
movsl
xlat
mov
push
dec
inc
mov
loopne
cmp
cmp
or
xor
jge
jmp
incl
les
or
mov
adc
enter
shlb
inc
popf
mov
sub
out
jbe
lahf
out
data16
xchg
sbb
or
pop
xchg
jns
dec
adc
jge
push
and
fucom
sti
mov
cwtl
ljmp
cmp
lock
inc
pop
lea
or
gs
xchg
jb
lock
jmp
rcr
mov
push
movsb
frstor
xor
out
mov
repz
cld
bound
cmpl
test
xchg
lods
fdivs
sub
inc
sub
adcb
jmp
rcrb
repz
cmp
push
mulb
rorb
stos
jp
add
es
cmpsl
push
inc
mov
or
push
pusha
stc
aam
push
loopne
ja
push
pop
add
sub
and
mov
mov
lds
ss
mov
or
popa
mov
rcr
repz
push
xor
faddl
jmp
cmp
sub
xchg
lods
cmovge
add
fsubs
mov
lds
dec
imul
shrb
pop
inc
repz
sbb
add
adc
push
cmc
rorl
xchg
pop
gs
sbb
idivb
dec
imul
or
mov
pop
mov
xor
cmp
dec
sbb
pop
sbb
jl
pushl
fsubrs
movb
jmp
jmp
movsl
xchg
aas
add
and
or
jmp
jp
add
inc
add
inc
inc
fsubrl
fists
adc
sub
enter
sahf
xchg
in
inc
mov
std
cld
mov
in
mov
or
mov
js
pop
cltd
fs
or
cmp
mov
repz
push
mov
xchg
sbb
push
inc
pop
xchg
rolb
sub
mov
popf
or
cmp
flds
and
sub
mov
mov
aad
xor
dec
dec
scas
ret
mov
aam
in
rcrl
enter
leave
xchg
rcl
cs
negb
sub
lret
pusha
sbb
out
je
lret
cmpsw
pop
and
inc
icebp
mov
sbb
sub
mov
and
jge
stos
xchg
movsl
sub
fs
inc
xchg
test
xchg
lock
xchg
xor
notl
sbb
and
mov
cld
sub
es
out
test
outsl
adc
lea
cmp
xchg
xor
idiv
mov
dec
ja
js
into
out
push
shll
and
icebp
sub
or
jbe
xorl
xor
dec
xor
mov
insl
sarl
ss
lock
fwait
rorl
add
push
loop
mov
sub
cmc
lods
jge
cmp
test
mov
jmp
ljmp
dec
xchg
push
out
scas
fnstsw
rorl
roll
std
je
jns
mov
xchg
pop
push
add
dec
gs
lahf
jns
push
cmp
lret
stos
sbb
xor
cmpb
mov
std
adc
xlat
inc
sbb
push
ss
loope
mov
fcompl
push
push
stos
push
sbb
cltd
insl
xchg
lcall
jns
dec
sbb
sub
mov
incb
sahf
movsb
ljmp
inc
xchg
negb
mov
mov
divl
xchg
movsl
xchg
rcrl
scas
xor
sbb
test
decl
push
out
pop
cmc
in
cmp
fstpt
into
xchg
push
xchg
cld
adc
jl
sahf
inc
mov
xor
inc
jne
jb
test
mov
dec
test
sbb
cmp
mov
push
pushf
data16
stos
push
cmc
outsl
in
push
bound
pushf
cld
pop
clc
scas
inc
leave
xor
or
pop
mov
push
inc
daa
mov
dec
mov
jbe
xchg
fsub
shrb
xor
jg
add
cmp
dec
fistpl
and
scas
movb
ficompl
jle
push
lock
pop
dec
sti
cwtl
pop
mov
xchg
lret
lret
inc
mov
mov
dec
mov
jbe
xchg
sub
inc
cmp
mov
mov
mov
clc
inc
scas
push
mov
lods
cmp
repz
mov
jnp
stos
out
std
in
pop
shll
push
out
outsb
xor
sti
push
push
lcall
sub
push
in
cmp
icebp
adc
push
xor
mov
cli
jg
jp
seta
scas
ss
jmp
cmc
push
ret
popa
pop
pop
fistl
sbb
fwait
shr
aad
pop
jecxz
adc
xor
jo
std
xor
push
sbb
lea
push
pushf
inc
mov
sub
inc
gs
les
int
and
lods
dec
and
lock
idivl
pop
add
push
dec
incb
xor
push
pop
addr16
inc
pop
mov
js
sub
out
pop
xchg
sahf
lahf
mov
xchg
ret
dec
xor
dec
push
cmc
sub
push
push
pushf
mov
mov
sub
add
roll
or
xlat
or
sti
cmp
fstps
xor
cs
fisubrl
push
lcall
fcomip
rolb
mull
stc
or
xchg
insb
xchg
fmuls
mov
in
pop
rolb
and
adc
mov
pushf
test
adc
sbb
xchg
adcb
fsubrs
mov
and
cltd
bound
cmp
fstl
dec
sbbb
pop
nop
xor
sbb
cmpsb
repnz
pop
or
jg
in
push
bswap
idivb
push
xor
aad
xor
jbe
lods
leave
or
repnz
popf
lret
push
int3
leave
push
adc
call
lret
call
or
xchg
mov
cltd
pushw
pop
push
mov
negb
aaa
dec
test
cmp
sbbl
mov
jne
inc
lds
mov
mov
cmp
movsl
xor
mov
aaa
ss
scas
daa
loopne
add
or
repz
inc
je
sbb
mul
out
xor
xchg
int
rclb
je
inc
jp
push
dec
inc
push
std
pusha
lcall
adc
sub
add
scas
pop
pushf
xor
cmc
lret
sbb
fidivl
cwtl
dec
rcr
sub
movsb
ljmp
sub
aad
movsb
sbb
ds
sbb
xchg
icebp
in
xor
pop
push
pop
bound
push
popf
orb
mov
and
mov
outsl
pop
pop
pop
and
or
fisttpll
dec
mov
addl
movaps
cmp
xor
mov
fwait
ss
push
lahf
rcrb
jns
sub
adc
cmp
mov
insb
int
dec
pusha
imul
fwait
sahf
ljmp
fmul
aad
ss
lret
sbb
push
int
dec
add
cmpsl
stos
ficoms
sub
sti
fldenv
sbbl
movsb
mov
mov
sbb
pushf
mov
out
pop
or
lret
js
imul
xor
pop
or
cli
sbb
or
shrl
in
push
clc
xchg
push
pop
cmp
out
jb
or
repz
dec
sbb
test
jmp
mov
sub
jb
out
add
daa
mov
jge
mov
mov
js
and
cmp
pop
or
std
or
xchg
mov
loopne
adc
cli
into
loop
jae
jne
xchg
inc
xchg
ret
jmp
xchg
xor
pop
int3
cmpsl
and
pop
mov
out
in
mov
sub
sbb
lock
jp
cmc
imul
mov
insl
xor
test
jp
push
sbbb
clc
pop
insb
push
or
nop
mov
xor
sahf
xchg
loopne
les
decl
jecxz
mov
inc
and
aad
scas
sbb
mov
mov
aaa
inc
stos
adc
sbb
stc
and
and
cltd
xchg
adc
xchg
mov
sbb
pop
lea
jp,pn
mov
cld
xchg
xchg
icebp
rclb
imull
iret
fldcw
cmpsl
iret
cmpb
clc
stos
icebp
jmp
fimull
pop
jl
pop
sub
sarb
adc
xor
xchg
dec
lds
daa
out
gs
adc
das
shrl
xor
sub
mov
and
push
mov
push
or
dec
mov
leave
adcb
push
xchg
mov
jp
cmp
mov
inc
psubb
pop
adc
in
daa
inc
push
mov
sarb
adc
ret
pop
sarb
popf
xchg
add
int
dec
es
sub
inc
adc
push
mov
sar
sar
scas
imul
mov
ret
lods
sbb
xchg
and
adc
test
pop
ret
outsl
lods
jl
lock
inc
int
das
ret
mov
jecxz
stos
mov
ja
and
pop
cmp
and
cli
inc
or
data16
or
sub
inc
aas
lds
mov
in
ret
ds
test
xor
mov
xchg
add
xchg
fiadds
adc
cld
aad
rolb
loopne
inc
xchg
pusha
mov
fsub
aam
add
sbb
loop
cmc
jo
lahf
cmpsb
jmp
pushf
je
cmpsl
push
jns
and
gs
bound
inc
cli
and
jo
mov
or
dec
push
lods
add
lea
ficoml
push
inc
rcl
sti
pop
mov
je
les
and
fisttpl
cmp
xchg
roll
incl
sub
jg
test
ret
or
add
scas
sbb
js
push
and
xor
and
or
mov
push
or
lds
popa
test
imul
scas
aaa
rcrb
push
jg
sbb
mov
cmp
stos
imul
popf
arpl
sbb
jmp
push
pop
push
mov
dec
cwtd
call
adc
mov
xchg
rcrb
add
cmp
and
add
ljmp
mov
adc
xchg
adc
aam
xor
outsb
and
or
ja
mov
add
clc
outsb
popa
push
int
stc
mov
pop
icebp
mov
out
xchg
push
sbb
mov
fidivrs
jbe
add
mov
mov
scas
dec
dec
rcrb
sbb
mov
push
sbb
add
sbb
xchg
fnsave
fstl
dec
adc
adc
mov
cmp
push
mov
movsl
mov
lods
add
pop
push
add
push
in
xchg
and
daa
stos
cmp
push
popa
xlat
rcrl
loope
inc
sbb
insl
test
je
sbb
dec
xor
xchg
mov
jg
rcpps
push
jo
js
mov
sti
cmp
orl
adc
data16
cmp
push
sbbb
push
lret
xor
lret
push
cltd
push
lods
dec
inc
pop
or
insb
out
mov
and
lods
sar
dec
mov
adc
cmpsl
dec
adc
xchg
fmull
lods
adc
loop
sahf
cmp
mov
mov
bound
pop
pop
jne
insl
in
cmp
into
mov
aaa
imul
std
pop
les
orb
xchg
mov
js
mov
sti
mov
outsl
jae
scas
cltd
and
ss
cmp
sbb
cwtl
mov
push
and
xor
filds
sti
fistps
dec
cmp
mov
mov
cmc
mov
adc
pop
fucom
pop
in
push
cmp
mov
fstl
je
push
std
test
xor
xlat
je
aad
into
scas
cld
rorl
xchg
dec
stos
cmpsl
mov
push
in
scas
dec
sti
mov
and
sub
les
orl
mov
push
bound
into
aaa
popf
movsl
das
adc
jb
xor
insb
jo
pop
sub
jg
das
cmp
mov
test
scas
pop
xor
jmp
movsl
cmp
or
mov
ret
push
loope
icebp
xor
push
mov
out
xor
and
mov
adc
stc
sarl
mov
adc
xchg
mov
add
mov
push
cld
std
pushl
adc
ss
mov
jecxz
cmp
and
dec
sub
aaa
clc
popa
jmp
jno
push
sub
sbb
xor
gs
pop
sub
mov
xor
nop
adc
pusha
jl
adc
in
or
cmp
xchg
mov
fcoml
or
dec
daa
fsubs
pop
jp
push
fs
ja
jmp
push
shll
jb
daa
mov
mov
leave
dec
xstore-rng
cmpsl
inc
jne
and
iret
xchg
scas
nop
and
xlat
dec
out
in
and
or
imul
scas
subl
lock
int
and
stos
sarb
xchg
xor
or
dec
in
mov
cmp
jle
mov
xor
call
enter
imul
test
and
add
movsl
pop
orb
mov
scas
fstl
mov
inc
ret
push
sub
dec
xchg
and
notrack
mov
pop
sub
xor
and
cmovb
cmp
jo
add
xlat
cmp
orb
and
daa
outsb
xor
dec
imul
dec
mov
pop
lret
add
lahf
xchg
mov
stc
push
ss
mov
or
or
or
lret
mov
push
loope
ds
sub
mov
xchg
add
cmp
xor
inc
aad
cmp
js
jnp
sbb
and
das
xor
or
divl
fsubrs
loope
rorb
das
adcb
shlb
loopne
icebp
sub
and
fwait
or
mov
mov
mov
rol
pop
int
cmp
push
xor
arpl
sbb
mov
test
out
pop
fcoml
push
push
mov
add
xor
cmp
enter
ret
sarl
push
jbe
push
fimuls
pop
xor
jg
add
int
or
sbb
sbb
loop
lea
and
mov
lldt
and
inc
repnz
lcall
bound
in
fiaddl
jl
stos
sbb
dec
jae
lods
test
xor
add
shrb
dec
pop
push
incb
es
or
adc
add
ja
jae
xor
dec
mov
in
aaa
mov
test
inc
jp
cmp
jb
mov
je
adc
xchg
xchg
bound
iret
mov
mov
loop
mov
movsl
lret
xor
mov
xor
mov
stos
fisubrl
push
or
inc
les
lods
cld
outsl
add
in
daa
and
outsb
pop
mov
xor
cmp
pop
push
cmp
inc
stos
aam
jae
andb
sahf
fidivrl
cmp
inc
les
into
xor
inc
pop
jns
add
rolb
push
xchg
mov
inc
and
mov
push
cmp
sbb
sub
dec
xor
fdivrl
pop
js
fmuls
ja
ljmp
pop
pusha
and
mov
mov
sub
les
dec
and
data16
cmp
std
leave
sbb
or
sbb
push
sbb
add
sahf
ret
xchg
mov
out
fwait
mov
adc
pop
loop
enter
push
fsubs
pop
aas
adc
dec
int3
sbb
int3
adc
rcll
daa
adc
popa
jecxz
pop
and
jecxz
inc
pushf
insl
lret
cld
rolb
add
mov
lods
out
mov
xor
cltd
or
xor
das
mov
out
jne
cwtl
xor
push
inc
mov
cs
adc
pmuludq
idivl
jno
loopne
mov
or
dec
mov
add
and
fsubr
cmpsl
fst
pop
cmp
dec
and
mov
nop
or
mov
push
adcb
adc
push
shll
push
pop
icebp
mov
mov
addr16
outsl
cmp
xor
shlb
mov
xchg
or
sahf
jge
pop
jle
xchg
movsb
int
pop
in
inc
out
push
addr16
or
inc
les
adc
cwtl
xor
mov
rcll
jo
into
adc
repnz
pop
je
cmpl
dec
xorb
add
fistpll
xor
cmp
cmp
in
jge
add
xchg
adc
insl
imul
call
cs
iret
sub
lcall
mov
lock
fnsave
sti
inc
sub
xlat
out
test
cmpl
push
jae
ret
mov
outsl
out
xor
add
sbb
ljmp
mov
outsb
nop
inc
dec
insb
out
jbe
lahf
fidivl
movsb
and
xchg
cltd
sbb
mov
test
mov
add
sub
roll
or
pop
stos
cs
rcrb
mov
loope
push
test
pop
sahf
dec
and
cmp
push
dec
adcb
and
jmp
test
out
aam
inc
pop
lock
nop
maskmovq
imull
push
fsubl
or
xchg
jbe
cmp
repnz
pop
cmc
jns
out
lods
imul
inc
xorl
in
inc
dec
lret
fstpl
aad
xchg
loop
dec
call
clc
xchg
jg
xchg
outsb
je
cltd
xor
add
pop
out
fs
sbb
pop
jae
fstl
xor
decb
push
inc
aaa
pop
inc
xor
das
jecxz
enter
dec
mov
or
das
das
lret
rcrl
in
stos
add
orb
or
nop
mov
bound
dec
mov
add
adc
dec
jp
mov
cmc
mul
inc
aaa
jnp
aaa
mov
aad
out
lods
shll
push
and
arpl
pop
cmp
cmp
ret
je
mov
or
lock
pop
xrelease
les
insl
aad
ja,pn
pop
jo
or
stos
movsl
xchg
xor
fisubs
fnstcw
cmc
jo
jp
ja
shlb
shlb
sub
push
xchg
sti
test
in
test
aaa
data16
xor
mov
inc
imul
out
push
aam
mov
and
lock
shl
sbb
jae
enter
inc
jae
add
ror
or
lods
mov
fsubr
int3
fstpt
mov
idivl
fsubr
mov
xor
daa
gs
xlat
call
mov
or
push
dec
cmpsb
andl
pusha
pop
cwtl
outsl
push
inc
test
cmp
dec
lods
in
pushf
into
nop
mov
xchg
mov
adc
sub
subb
clc
cld
cs
stos
or
adc
adc
lods
pop
mov
push
and
or
aas
imul
push
sub
dec
pop
lea
xor
sti
stos
jp
lods
pop
adc
push
outsl
loop
or
cmp
femms
inc
ljmp
inc
add
lock
push
pop
outsb
mov
test
scas
inc
out
inc
cs
std
in
inc
pop
adc
imul
inc
inc
ja
inc
mov
mov
cmp
ds
hlt
lods
inc
lea
sub
cli
arpl
and
mov
int3
sub
movsl
xchg
pop
xor
repnz
cli
gs
stos
cmpsb
sub
mov
mov
inc
outsb
lret
repz
cmc
arpl
sub
inc
lods
inc
std
pop
repnz
insb
in
sub
dec
rcl
inc
test
push
push
xchg
xor
movsb
subl
xchg
xchg
xor
repnz
out
adcl
jg
stc
inc
popf
rcr
xlat
jle
adc
xor
aam
arpl
ljmp
fcompl
jmp
sahf
adcl
out
mov
movsb
data16
push
and
iret
pop
pop
sar
add
andl
cld
sarb
and
dec
fnstcw
push
das
mov
cmp
mov
fcomp
push
jp
shlb
jno
js
cmp
repnz
sbb
jle
enter
mov
testb
ljmp
push
aam
mov
leave
sub
or
shlb
outsl
dec
fsubr
cs
push
movsb
cmpsl
enter
push
gs
dec
out
inc
mov
xor
lea
loopne
bound
xchg
push
fucompp
or
jbe
xchg
imul
ja
out
dec
je
lock
push
fwait
cmpsb
imul
push
mov
outsl
iret
lret
mov
test
mov
or
out
add
mov
insb
add
popf
xor
adc
xchg
jnp
inc
in
test
lds
leave
aaa
mov
add
shrl
jbe
mov
jne
mov
filds
cwtl
xchg
roll
sbb
aam
sbb
lods
repnz
sbb
push
mov
gs
les
into
push
xchg
pop
xchg
jge
jg
xor
jbe
outsb
xchg
add
mov
push
aas
repnz
and
lds
push
cmc
outsl
insl
mov
imul
jecxz
jp
sub
xchg
push
and
imul
sbb
fs
mov
mov
lret
rorl
ljmp
pop
cwtl
push
sbb
cltd
or
pop
es
dec
lds
mov
in
mov
pop
xor
push
cmp
pop
pop
nop
mov
xor
roll
enter
push
leave
push
gs
mov
sarl
ds
aam
loop
icebp
fdivrl
stc
sarb
aam
jno
push
icebp
pushf
imul
inc
loopne
push
or
popa
xchg
rcrb
xor
xchg
stos
mov
cmp
xlat
mov
rclb
pop
mov
test
mov
mov
repnz
loop
adcb
mul
data16
cwtl
sbb
jne
rorl
xor
rol
ret
xlat
es
xchg
rcrl
jns
push
mov
pop
pop
sub
loopw
mov
negb
mov
imul
pop
push
imul
add
pop
sti
cmpsl
xor
cmpsl
pop
push
inc
cli
sub
int
ss
imul
sbb
mov
icebp
sbb
fdivs
xlat
push
mov
jmp
insb
arpl
mov
aaa
test
es
cmp
inc
pushf
clc
mov
shrl
push
mov
lcall
outsb
rcrl
xchg
dec
mov
popa
add
cmc
push
aad
popa
sbb
dec
test
negb
jmp
jb
jo
sbb
push
loop
or
scas
sub
mov
inc
adc
cltd
push
rcll
xchg
loop
test
jnp
hlt
sahf
les
fiadds
lock
gs
xchg
cmp
mov
fadds
pushf
xchg
xchg
sbb
xchg
inc
out
pop
xchg
pusha
ret
jns
std
repnz
add
ss
arpl
lods
push
jne
nop
inc
dec
xchg
movsl
dec
xchg
jno
dec
and
andl
inc
fcmovb
xor
rolb
dec
xorl
je
mov
out
js
sbb
mov
mov
movsb
aas
sub
jnp
mov
test
aaa
icebp
cld
adc
cmp
xchg
out
mov
popa
sub
divb
scas
xchg
fiaddl
ja
sbb
pop
lods
jno
sub
adc
jnp
insb
jl
bound
rcll
fildl
mov
pop
jle
inc
movsl
dec
pop
jmp
out
jne
sub
xchg
push
fidivrs
aam
xabort
movsb
repz
out
xchg
pop
cmp
fcmovb
cli
repz
xor
push
xor
ss
rclb
jle
xor
ret
dec
popa
cs
or
xor
daa
mov
xor
add
inc
add
or
lahf
add
hlt
inc
sbb
das
das
cwtl
dec
lahf
je
ss
dec
loope
sbb
pop
ret
adc
push
mov
int3
outsb
sub
sti
mov
out
jmp
jns
adc
add
dec
and
repz
cmp
mov
and
and
in
push
xor
mov
loope
popf
dec
jb
ret
shrl
gs
pop
insl
cwtl
lea
sbb
add
inc
jmp
test
xor
add
push
jo
mov
lahf
mov
jg
mov
es
jle
sub
jmp
orl
mov
mov
or
mov
pusha
or
xchg
sti
jmp
aad
and
leave
xchg
arpl
or
xor
pop
jae
mul
mov
sub
push
push
sub
fstpt
nop
mov
mov
int3
std
fwait
out
cs
bound
push
add
mov
cmp
movsb
cli
out
das
inc
rcrl
cwtl
mov
push
mov
mov
jb
inc
ljmp
and
faddl
bound
add
cmp
xchg
dec
xchg
int3
cmpsb
pop
in
add
cmpsb
xchg
adc
iret
dec
adc
cmc
sub
or
jae
xor
jb
loopne
mov
and
sub
test
mov
stos
push
scas
inc
mov
push
xorl
xor
cmovg
dec
fs
lds
notb
bound
into
fdivrl
out
enter
call
adcb
sbb
outsb
pushf
push
out
jnp
jb
addr16
out
orl
cmp
push
mov
push
inc
xchg
fistpl
cld
dec
inc
sub
pop
sub
dec
loopne
xor
sarl
aaa
aam
movl
ret
sub
push
mov
rcll
mov
push
adc
shll
daa
ds
notb
pop
xor
xor
jno
xlat
lahf
cld
mov
jnp
clc
int
mov
fmul
fwait
sub
dec
and
xchg
jne
test
xchg
pop
out
sarl
xor
lret
lret
add
cmp
ljmp
or
stos
jecxz
shl
xchg
in
mov
jb
out
andl
imul
add
loop
add
nop
int
cli
in
in
push
repnz
sbb
xchg
or
mov
and
test
scas
aas
jecxz
pop
adc
sub
cmpsl
outsb
cmp
or
pop
or
hlt
cmp
jne
push
dec
fwait
xor
aaa
mov
movsl
push
push
sbbl
es
add
mov
sar
pop
lods
iret
adc
add
nop
mov
mov
rol
subb
jp
std
xchg
push
and
cwtl
jecxz
mov
fwait
mov
fstpt
mov
fprem
jp
push
gs
pop
add
dec
pop
xorb
add
push
js
or
sub
push
out
cmpsb
sub
xor
mov
in
jge
mov
jnp
push
jmp
xchg
cmp
popf
pop
push
stos
and
mov
fistpl
lock
clc
rorb
fs
xor
dec
xor
pop
jmp
xchg
pop
push
xchg
fbstp
movsb
in
test
adc
mov
iret
sarb
mov
push
sub
pop
les
bound
xchg
rcll
xchg
pop
loop
jl
and
ret
add
in
sti
imul
xchg
add
or
cld
pop
pop
pop
pop
or
and
dec
jae,pn
dec
shrl
or
dec
xchg
mov
test
cmp
lods
sbb
bound
insb
jge
xchg
cltd
stos
popa
xchg
add
pop
les
repz
cmc
xor
push
clc
sub
push
addr16
aas
pop
pop
inc
lods
lods
lcall
stos
pop
push
ja
mov
dec
push
mov
push
test
jne
sar
pop
push
imul
test
inc
add
es
lock
clc
or
cmpb
adc
bound
push
stc
shrb
jb
pop
jl
stc
mov
xchg
std
sub
aad
jg
ret
js
xchg
std
sahf
shr
jae
adc
pop
cli
sbb
jmp
mov
adc
rclb
iret
mov
pop
mov
out
popa
push
mov
xchg
ja
loopne
fs
test
imul
mov
push
xor
test
rcll
clc
js
mov
loope
mov
shr
cli
and
xchg
jae
into
fdivr
js
xor
jns
or
push
sbb
outsb
jb
rclb
aam
mov
dec
mov
pop
jnp
push
ss
adc
test
mov
xchg
imul
xchg
repz
lods
dec
mov
mov
test
add
lods
clc
stos
or
push
in
jp
popf
or
lret
in
and
ds
pop
mov
pop
imul
aam
out
fisubs
icebp
fdivr
xchg
xchg
cmp
stos
push
jo
pop
mov
or
loopne
rcl
addb
mov
imul
loop
arpl
push
ss
fwait
cs
rcr
or
inc
in
ljmp
test
sarl
int3
mov
sub
or
out
loopne
aas
ja
cmpsl
mov
pop
and
inc
push
shll
push
pusha
ret
mov
jne
jns
xorl
rcrb
pop
jmp
addr16
dec
mov
sbb
cmp
pushf
cmp
xchg
xchg
mov
or
dec
mov
mov
inc
push
jnp
sbb
les
xchg
test
ss
adc
repnz
movl
inc
inc
js
pop
aas
std
xchg
pop
adc
out
jno
cmc
fnsave
bound
ss
cmp
mov
mov
mov
imul
mov
xorb
test
enter
rcrl
jg
aaa
loop
add
insb
push
bound
aas
cmp
mov
xchg
test
xchg
ja
push
stos
add
ljmp
in
mov
outsl
ret
push
sbb
test
mov
mov
int
ds
cltd
cmp
jl
std
or
add
sti
test
stos
push
jg
push
push
cmp
out
sbb
pop
xabort
lret
xlat
dec
pop
jne
repnz
cltd
repnz
rcrl
push
pop
push
gs
cmp
sub
rcrb
cmc
test
pop
outsb
dec
out
lret
sub
dec
js
mov
inc
adc
xchg
mov
imul
sbb
sub
push
aam
scas
int
cmp
mov
push
popf
and
pop
test
hlt
clc
movsb
aam
cli
mov
sub
ss
std
ficoml
enter
leave
pop
iret
fiadds
sbb
xchg
cmp
sub
mov
sahf
xlat
xchg
out
mov
inc
inc
add
mov
cmpsb
jns
test
push
dec
movsb
in
push
pop
xchg
je
and
sbb
in
xchg
jge
test
inc
fsubl
xor
adc
jae
insl
in
mov
sti
shll
add
adc
imul
and
mov
stos
jbe
loope
outsl
iret
or
cmc
lcall
inc
mov
or
rcrb
stos
repz
out
jge
jle
pop
enter
pop
xchg
push
push
shlb
out
mov
sbb
insb
mov
loopne
xchg
add
es
adcb
xchg
or
cmp
dec
daa
insl
push
mov
xlat
mov
lods
and
mov
sub
ret
imul
sub
cmpsb
xchg
jbe
adc
sbb
add
out
fcomp
js
sahf
loopew
xchg
sub
imul
dec
push
mov
stos
jmp
mov
outsl
or
mov
push
bound
add
xor
jle
outsb
sti
loop
jno
rcrb
fdivs
lret
mov
inc
fstps
dec
push
jecxz
mov
mov
sbb
out
movsb
xchg
insb
aad
dec
or
repnz
stc
enter
mov
call
pop
call
xorb
cmp
mov
mov
in
mov
add
hlt
push
mov
sub
hlt
jecxz
adcl
arpl
sahf
call
icebp
mov
sub
sub
jno
out
xlat
scas
lods
xlat
insl
mov
adc
add
push
xor
lret
mov
lret
mulb
es
enter
call
cmp
adc
into
movsl
call
xchg
sbb
gs
mov
loop
lea
xchg
cltd
or
cmp
adc
bound
mov
sti
push
in
xor
xchg
das
xchg
in
pop
adc
pop
fcom
insl
rol
add
outsb
xor
mov
sbb
enter
adc
add
sub
and
adc
push
jno
shl
fs
xor
mov
jp
push
cmp
mov
sbb
fsub
xor
inc
ret
into
and
sti
loope
aaa
out
outsl
dec
push
shll
add
add
xor
mov
cmp
dec
cld
lret
mov
arpl
mov
push
xor
inc
stos
inc
jge
cmpsl
clc
jne
and
lds
or
adc
push
xor
lcall
les
mov
add
mov
dec
into
lret
pop
add
es
mov
lret
adc
push
jns
xchg
popf
dec
lcall
inc
add
icebp
imul
push
stc
ficoml
push
je
dec
mov
ficompl
lock
mov
mov
scas
ljmp
jl
jmp
or
pop
jae
stos
dec
ljmp
in
lret
push
cwtl
push
dec
mov
into
cmpsl
cltd
pop
fisubrl
dec
xchg
and
and
sub
sub
iret
repz
pusha
xchg
push
mov
adc
cmc
or
imul
mov
dec
dec
cmc
repz
pusha
lcall
cmpsb
pop
repnz
ljmp
or
sti
stos
loop
scas
cmp
in
adc
jecxz
dec
and
pop
lea
pop
ficoml
push
sbbb
subb
in
repz
in
sub
lcall
push
testb
repnz
imul
inc
sub
stc
inc
jbe
sbb
cmp
xchg
test
out
gs
iret
daa
out
cwtl
xchg
xlat
adc
adc
pop
or
mov
sbb
cmp
arpl
fidivl
call
jo
clc
push
bnd
scas
cmp
scas
sub
rolb
inc
adc
jb
push
xchg
sub
sbb
cmp
or
push
sub
ljmp
fstpl
movb
hlt
lds
dec
icebp
mov
push
inc
dec
out
rcrb
push
fsts
shll
cmpl
loope
insl
jne
jns
lcall
ret
xchg
lods
adc
out
ucomiss
sub
sbb
jne
sbb
lock
or
rcr
push
jnp
dec
jmp
jb
sbb
pop
sub
sub
cmp
js
inc
cmpsl
adc
pop
pop
imul
adc
adc
sahf
jns
pop
call
xlat
pushf
out
xchg
sbbb
xchg
sub
mov
iret
push
or
xchg
rcll
xor
addr16
shll
sbb
es
sub
xor
mov
test
test
jge
jnp
int3
dec
xor
jge
cmp
scas
sub
mov
mov
push
cmp
mov
xor
inc
add
sub
pop
fsubrl
mov
ja
sarl
dec
xchg
pusha
fcoms
cmp
pop
cmc
lret
xor
sarb
lods
test
aam
push
out
out
repz
into
pop
push
shll
xlat
jl
repnz
cs
insb
mov
into
sbb
pop
enter
push
cmp
and
cs
mov
xlat
mov
lret
mov
jge
xlat
fldenv
rcl
jb
or
repnz
movsl
rolb
pop
loop
and
faddl
cmc
rcrb
xchg
lds
fwait
je
mov
push
or
imul
aad
dec
inc
shl
or
sbb
scas
mov
outsb
and
nop
js
popa
cmp
dec
fwait
stc
xchg
sbb
sbb
imul
jmp
adc
mov
test
popa
jns
rclb
mov
add
cmc
xor
jns
enter
insl
icebp
xchg
cmp
lahf
jecxz
fcoms
out
mov
xchg
sbb
xor
es
shr
sbb
and
mov
repz
mov
dec
xchg
pop
in
cltd
clc
rcl
push
shrb
int3
in
and
xor
int3
sub
and
xchg
jge
cli
lods
mov
daa
inc
aas
mov
orl
leave
mov
jge
movsl
push
nop
mov
stos
mov
lcall
inc
test
push
or
mov
lds
mov
mov
rcr
fsubl
dec
add
test
hlt
das
xor
insl
popa
push
adc
cltd
pushf
cmp
outsb
mov
mov
rolb
std
jmp
leave
out
push
repz
ljmp
push
mov
dec
mov
mov
mov
and
and
popa
pop
fsubrs
jge
xor
adc
xchg
push
cmpsl
inc
or
roll
jg
pop
sub
sub
add
cmpps
inc
lret
or
and
aam
jnp
ret
cmp
addr16
mov
mov
push
jp
push
adc
aad
jo
xor
xor
enter
vpcmpeqw
cmp
in
lret
mov
cmp
lods
inc
sahf
test
xlat
mov
lods
sahf
or
lea
xor
arpl
add
and
outsb
cwtl
decb
arpl
jecxz
imul
clc
andb
cmp
push
fs
stos
inc
aaa
sbb
out
xchg
xchg
pop
mov
das
cmp
jecxz
xchg
in
mov
adcb
inc
cmp
lods
mov
mov
loope
shll
push
adc
jmp
mov
add
ja
gs
jne
jbe
push
arpl
test
jecxz
ljmp
sub
mov
rcll
int
fs
mov
cltd
pushf
imul
inc
iret
xchg
adc
add
lds
jl
insb
and
mov
pop
lcall
lahf
pop
les
loope
das
popf
lret
das
adc
xor
in
mov
imul
subl
add
push
into
daa
add
inc
xchg
jge
sbbl
call
clc
push
dec
aaa
insl
and
jnp
imul
mov
les
mov
dec
inc
pop
scas
outsl
push
into
jnp
loopne
mov
sub
clc
clc
mov
divb
mov
mov
dec
xor
into
push
mov
mov
cmc
add
xchg
lret
mov
push
xor
jae
xchg
sbb
hlt
add
push
push
aad
xor
mov
test
popa
sbb
pop
pusha
dec
gs
cmp
sbb
jecxz
sub
in
dec
add
push
clc
pop
sub
aas
xlat
mov
jns
or
mov
xchg
dec
inc
lahf
stos
push
ljmp
in
xchg
mov
cmp
cmp
shll
nop
icebp
in
cmp
sub
clc
mov
in
movsl
mov
test
out
mov
lock
mov
jno
jmp
sahf
cmpsb
or
sub
mov
pop
pusha
into
fldcw
pop
push
cmpsb
inc
jbe
lock
scas
or
dec
inc
mov
adc
xor
inc
sbb
pusha
stos
adc
inc
jge
jae
out
jle
mov
test
xlat
cmpsb
cmpl
sub
inc
sub
call
jle
pop
pop
xor
or
mov
dec
dec
scas
ret
or
stos
jns
lret
mov
push
daa
out
enter
lret
jecxz
push
cwtl
incl
sub
loope
fsts
pop
adc
in
pop
sbb
addr16
enter
mov
mov
inc
pcmpgtd
push
jecxz
popa
iret
ds
mov
outsl
das
into
and
sub
bound
out
add
loope
cmpsb
outsl
add
adc
xchg
push
mov
pushf
sbb
cltd
mov
js
nop
inc
or
ds
adc
das
cmp
or
shll
lcall
jae
adc
lea
ds
or
rorb
and
or
insb
je
insb
push
mov
cmp
aas
leave
lcall
repz
cwtl
push
loopne
shlb
imull
mov
pop
xchg
mov
mov
mov
cmpsl
dec
push
pop
dec
add
xor
push
lock
sahf
aas
outsb
fst
xor
fldln2
fdivl
mov
dec
inc
adc
jae
mov
dec
and
adc
test
mov
mov
bound
sti
jno
add
rcll
pop
aaa
movsb
xor
adc
repnz
add
cmpb
push
or
ja
adc
mov
repnz
fcmovne
adc
push
ret
lea
cmp
adc
sarb
push
bound
cmp
cmp
clc
shll
fmull
unpckhps
lret
insb
in
mov
xor
inc
lea
sub
mov
sub
cltd
xchg
jg
mov
cmp
adc
pop
ss
lcall
ja
lahf
jp
inc
fwait
leave
jmp
and
popf
addr16
pop
in
ficompl
int3
push
and
cli
mov
mov
lds
adc
outsl
push
scas
orb
fs
enter
mov
cld
popa
dec
pop
imul
lcall
jno
icebp
jp
xor
pop
stos
out
adc
mov
pop
cmp
or
into
dec
mov
add
mov
data16
scas
lea
les
sbb
mov
push
popa
jae
xlat
mov
and
mov
mov
aam
out
xor
leave
xchg
fcomps
and
dec
test
jge
aaa
sbb
and
push
insb
push
bound
push
stos
add
shlb
std
xchg
lea
push
cmpl
lret
sub
cmp
pop
pop
mov
push
call
or
pop
cmp
xchg
loope
xlat
divb
outsb
sbb
add
mov
jmp
or
cli
jo
pop
mov
sbb
leave
inc
jg
ffree
jo
sti
into
rcl
repnz
push
push
fistps
loop
fadds
bound
mov
sarl
add
ficompl
fildl
shl
sbb
add
lods
shll
aad
lock
movsb
push
adc
push
test
pop
adc
push
out
mov
mov
xorl
repz
or
data16
jmp
loop
inc
frstor
stos
cmp
add
pop
mov
xor
xchg
xchg
fs
rcrb
cltd
stc
push
mov
mov
push
push
push
mov
pop
mov
stos
das
sbb
and
push
mov
lods
rorb
mov
ret
mov
xchg
mov
call
push
cmpsb
push
test
push
out
cltd
mov
cmc
ret
xlat
adc
ret
add
out
cwtl
pushf
lea
mov
add
pop
popf
cvtps2pd
int
out
std
stos
popa
cmp
or
int
cmp
test
pop
push
dec
dec
pop
mov
aad
lret
in
push
ljmp
outsb
and
iret
out
sti
shrb
add
iret
pop
fxch
or
imul
push
out
dec
adc
outsb
cli
shll
dec
or
and
pop
ja
vmovd
jnp
rcl
push
pop
sub
add
lea
mov
mov
inc
sub
inc
mov
mov
rcl
enter
repnz
jne
hlt
mov
aaa
or
push
inc
mov
xchg
fs
fcmovnu
bound
inc
fucomp
pop
sbb
mov
sahf
scas
bound
mov
cmpl
adc
mov
jg
or
xor
lds
xor
das
repz
inc
adc
dec
addl
idivb
add
mov
ss
sbb
or
test
jnp
ljmp
jno
xor
je
stos
ret
lds
insb
mov
enter
emms
fcompl
ror
pop
andl
repnz
in
ret
pushf
cltd
rcrb
mov
stos
sub
cmp
mov
push
or
mov
adc
inc
out
add
pusha
sub
lcall
jnp
leave
add
jp
cs
jne
imul
idivl
push
or
jns
jge
lock
jg
bound
pop
gs
push
jns
fs
push
shlb
xor
mov
aas
mov
and
repz
ljmp
int3
adc
xor
lds
adc
and
je
cltd
enter
push
frstor
ret
mov
in
sbb
xchg
loope
jnp
jae
std
call
mov
push
push
jmp
sbb
lret
loop
in
pop
sub
imul
int3
fbld
sub
lcall
testb
push
pop
leave
out
mov
pusha
icebp
pop
fsubs
add
push
push
push
sub
daa
mov
inc
xlat
leave
add
filds
dec
sti
lgs
imull
fisttpl
jg
and
leave
insb
add
test
test
rorl
jmp
xor
mov
xchg
dec
xchg
popf
outsw
pop
mov
movsl
repz
push
insb
sbb
cltd
into
dec
xchg
test
int3
jno
or
adc
lock
fwait
js
mov
das
leave
dec
pushf
mov
lods
popf
jne
and
dec
stos
xchg
jne
outsl
inc
movsb
shll
mov
in
aaa
mov
cmp
cmp
add
jecxz
mov
aas
xorb
call
add
jg,pn
enter
out
dec
cmp
lahf
ljmp
hlt
pop
out
mov
stos
cltd
dec
lret
dec
fiaddl
test
and
lahf
adc
sub
push
xor
out
add
cltd
int3
stc
sbb
mov
push
sbb
and
sbb
test
pop
xor
adc
or
mov
push
add
popf
out
cmp
cmp
sub
rolb
mov
xchg
or
stc
mov
sbb
xchg
test
or
lods
cmp
cmp
jl
daa
pop
cli
shll
mov
out
idivb
xlat
mov
dec
shlb
pop
xchg
cli
push
adc
fstpt
or
fsubrl
test
in
inc
mov
sub
jge
in
inc
popf
mov
inc
je
mov
mov
inc
mov
outsl
loopne
xor
fidivrs
aam
sti
ja
cmp
xchg
int
pop
mov
xorb
add
outsb
cmpsb
sub
pop
scas
sub
or
xchg
sub
xor
out
or
cmp
lods
or
ficomps
aas
test
or
sub
adc
mov
push
mull
pop
aaa
mov
pop
loope
std
and
cltd
and
push
pop
test
dec
inc
mov
insl
cmp
enter
sar
push
mov
inc
rcrb
mov
iret
and
enter
mov
jg
xor
aas
mov
inc
mov
cli
or
add
pop
imul
dec
jecxz
xchg
pop
lock
jb
inc
add
cmc
mov
int3
stos
mov
test
mov
bound
pop
mov
or
in
inc
sub
scas
push
mov
pop
and
xchg
ret
mov
inc
or
cs
add
sbb
loop
imul
mov
sbbb
add
or
pop
push
and
movsl
cld
mov
in
call
movsl
mov
lea
ds
jecxz
mov
lret
or
add
insb
xchg
cs
rcr
sub
call
push
inc
fwait
test
cmp
pop
sti
add
mov
mov
pop
cld
ret
xor
dec
ficomps
dec
add
adc
pop
ja
sub
test
movsb
xchg
inc
decb
cs
lahf
or
pop
and
enter
or
or
add
jbe
cmpsl
xchg
dec
test
in
inc
dec
lock
sbb
es
jmp
pusha
int
out
lret
jb
pop
js
sub
xor
push
inc
sbb
mov
aad
and
rolb
adc
gs
cmp
in
dec
scas
add
jp
and
loopne
scas
fdivrs
mov
arpl
jne
in
stos
out
dec
xchg
jmp
mov
out
lods
adc
stos
push
jmp
cmp
in
lret
push
lret
outsl
fcmovu
pop
xor
dec
pusha
shlb
leave
fcomip
and
push
pop
xchg
mov
mov
sbb
adc
xchg
and
js
fbld
mov
inc
repz
dec
popf
stos
out
pop
mov
dec
std
mov
cwtl
divl
push
pop
xor
pop
mov
test
arpl
jl
xchg
je
test
jge
insb
push
int
add
push
arpl
out
cmp
into
out
movl
or
stc
into
movsl
das
pop
cmp
sbb
scas
popl
test
fnsave
adc
mov
out
ljmp
call
in
pop
mov
xor
xor
orl
daa
inc
push
sub
stc
ss
inc
add
in
data16
jns
int3
iret
mov
scas
jne
jns
insl
jnp
lahf
std
add
imul
mov
rcrl
xorl
testb
movsl
scas
jnp
loop
in
imul
push
xchg
pop
sbb
jp
mov
mov
pop
idivl
mov
add
test
push
gs
popa
pop
mov
cmp
movsb
mov
mov
ret
dec
cmp
dec
cmp
aam
lods
daa
call
jae
movsl
pop
mov
leave
repnz
shl
subb
sbb
movb
aad
jecxz
dec
xchg
divl
sgdtl
shlb
outsb
outsb
cmp
fidivl
lods
int3
scas
imul
mov
bnd
in
push
loopne
pop
out
notl
clc
popa
cwtl
shrb
push
or
and
pop
push
and
pop
mov
shlb
insb
dec
scas
gs
mov
shll
or
out
push
scas
mov
pop
push
ljmp
adc
cmp
scas
aaa
dec
adc
dec
push
je
fbld
add
imul
in
and
jb
fstl
mov
leave
sbb
mov
jg
mov
int
aad
or
push
mull
lds
push
mov
lret
pop
sarl
insl
lods
mov
push
stc
push
jbe
jle
stos
xchg
int
mov
or
pop
repnz
jb
mov
enter
jae
inc
std
mov
es
sbb
pop
outsb
cli
and
sbb
fcomp
sub
jne
leave
jg
jl
test
push
add
loop
cmc
aas
push
adc
stos
jle
in
jno
dec
xorb
mov
rcrl
xor
fisttpl
rclb
jecxz
adc
mov
inc
push
or
adc
hlt
or
pop
mov
jbe
add
movsl
cmp
popa
cltd
push
sarb
lcall
incl
mov
pop
dec
cmp
cli
in
mov
cmp
jp
in
aaa
xchg
cmp
mov
ficompl
xlat
pop
inc
popl
sbb
inc
xchg
jae
sub
cmc
imul
or
sti
jnp
addl
stos
and
out
lods
lods
mov
or
mov
test
sub
fidivs
imull
pop
sbb
dec
lea
jne
xchg
fwait
xor
ja
pop
iret
mov
adc
addr16
stos
jp
fcoms
mov
mov
rorb
aas
xchg
inc
xlat
lret
xchg
inc
jne
jecxz
push
push
cmp
mov
or
sbb
into
jg
jno
enter
test
cmp
loopne
xchg
add
call
jg
jno
ljmp
test
out
int
push
mov
test
fsubrp
or
sbb
int3
mov
push
add
imul
xchg
pop
popf
and
mov
cwtl
sti
popa
pusha
push
ficoml
jb
inc
and
cwtl
sub
movsl
cmc
jae
jb
and
push
fimull
and
pop
xlat
call
xchg
stc
jle
in
mov
mov
iret
push
ret
fwait
test
mov
or
insl
int
pop
add
data16
notl
scas
jae
in
xorl
mov
test
repz
notl
xchg
aas
push
lcall
mov
push
mov
mov
shll
push
dec
out
cmp
or
cld
mov
mov
test
jnp
shrb
mov
shlb
mov
inc
mov
add
jmp
das
jae
sbb
aaa
es
rorl
dec
mov
pusha
push
cmp
mov
jecxz
dec
mov
lock
data16
jmp
sub
add
or
mov
int
xchg
adc
mov
add
adc
loop
hlt
push
insl
pop
cmp
scas
cmp
movsb
mov
repz
inc
mov
mov
inc
loope
xchg
or
daa
das
ss
stc
jmp
shll
add
cmp
cmp
cltd
aaa
rclb
jno
sti
xchg
lcall
xchg
adc
cmp
jbe
add
sbb
int3
cmp
xchg
push
push
int
icebp
es
lret
pop
cmpsb
mov
gs
sbb
pushf
lea
mov
pop
dec
insb
mov
add
dec
sub
xor
jle
lcall
cltd
jno
lock
imul
jecxz
pop
dec
jecxz
idiv
adc
in
adc
popf
or
mov
and
mov
lock
adc
inc
ss
xor
call
nop
sbb
cmpsl
je
dec
adc
cmpsb
mov
repnz
sbb
jo
fldt
insb
les
jmp
clc
scas
xchg
inc
inc
pop
aam
lea
dec
xchg
sbb
dec
xor
popl
cld
fcmovnbe
sti
fstps
das
iret
xor
out
out
pop
pop
sub
push
push
cmp
or
ficoms
jo
mov
inc
jp
fcmove
mov
fisubrs
fcomps
shrb
fimuls
int
fisttps
inc
and
mov
xchg
push
es
je
or
mov
clc
mov
out
jle
pop
data16
insb
adc
jo
jo
test
test
pop
faddl
popf
inc
mov
pop
push
mov
gs
jl
out
mov
adc
cmp
cmp
sbb
cmp
mov
push
pop
jp
subb
cmp
sub
lahf
or
out
popf
push
fidivl
push
insb
cltd
jl
push
lock
sahf
mov
in
daa
test
push
sqrtps
cmc
inc
push
loopne
add
sar
or
dec
dec
and
add
inc
cmp
lea
sub
js
sbb
movsl
xchg
push
jle
add
fwait
sub
shll
dec
or
rorl
jae
test
sub
test
test
adc
fsubl
sahf
lods
sti
sub
jge
or
int
stos
sub
roll
mov
adc
adc
aaa
mov
shlb
pop
inc
jae
lods
add
fisttpll
adc
aas
xchg
adc
xor
adcl
fildll
popf
scas
bound
mov
aas
decb
mov
enter
mov
xor
ret
cli
inc
mov
sub
push
ss
ds
fwait
cmc
jo
adc
push
mov
lgs
insl
pop
pop
mov
popf
push
out
dec
xchg
fwait
lret
mov
pop
cmp
sbb
stc
mov
mov
insl
or
push
in
dec
ljmp
int3
repz
sub
scas
hlt
pop
cmove
mov
mov
sub
add
in
mov
insb
cs
pop
mov
xchg
mov
adc
dec
in
jns
inc
cmpsl
pop
scas
in
call
mov
cmpsb
add
ss
incb
jo
add
stc
pop
mov
in
xchg
popa
push
or
push
ljmp
adc
pop
and
lret
pop
inc
orl
nop
jge
inc
push
or
cmp
adc
lods
dec
or
push
dec
stos
pop
movb
jmp
mov
add
int
test
push
pop
mov
mov
sbbb
popa
jl
pop
jo
mov
popa
pop
or
in
insb
pop
jge
rorb
ret
fnstsw
popf
icebp
mov
data16
or
lret
fadds
lea
push
mov
jp
mov
insl
aam
int
fstpl
fstps
sub
fmuls
roll
mov
cmc
bound
sahf
push
ljmp
sbb
or
pop
jno
mov
and
js
es
jne
adc
mov
jb
lock
cmc
int
sub
rclb
ja
mov
dec
js
or
iret
pusha
mov
pop
clc
notl
clc
dec
lea
movsl
add
stc
xchg
sub
pop
sub
jne
jo
sbb
cmc
sahf
adc
xorb
lahf
jno
popa
stos
loopne
repz
xchg
mov
aaa
and
push
sahf
adc
sbb
in
sar
fnstenvs
in
loope
pop
ja
stos
mov
jno
pop
sub
add
mov
int
or
mov
inc
iret
aaa
data16
test
pop
jae
sahf
xor
mov
xchg
mov
les
aad
mov
stos
push
mov
cmp
jo
in
lret
fsubr
lods
xor
sub
pushf
pop
aaa
cmpsl
shrl
cmpsb
arpl
mov
js
mov
add
cmp
push
xchg
mov
sub
push
inc
fisubl
jnp
lds
enter
mov
xor
pop
jne
sbb
push
fcoml
lods
shr
or
push
adc
mov
jo
cmp
or
pop
dec
adc
movsb
cltd
aas
ret
xor
cmp
adc
adc
popa
xchg
out
xlat
jno
dec
and
xor
aad
mov
sub
addr16
imul
jge
push
mov
out
dec
sbb
add
push
addr16
sahf
mov
mov
jno
andl
hlt
repnz
sbb
mov
lahf
jno
mov
push
jmp
xchg
pop
cli
in
scas
pop
loop
mov
mov
xchg
jecxz
cmp
mov
rcl
mov
sbbl
cmc
loopne
or
scas
xor
jmp
and
shrl
push
xlat
jno
adc
ds
pop
jl
pop
pop
pop
xchg
leave
xchg
cli
jp
movsl
push
mov
sbb
incl
jno
inc
adc
inc
popf
in
and
add
mov
mov
sub
mov
cmp
outsl
xor
jbe
xchg
pushf
xchg
inc
lods
cwtl
push
cmpsl
lahf
pusha
leave
mov
pop
push
push
orb
pushf
or
bound
lcall
movsl
dec
loope
push
dec
out
loopne
sub
inc
xchg
cmp
cmp
adc
push
stos
adcl
or
push
repnz
gs
or
inc
jne
mov
inc
sbb
pop
sbb
lock
or
cwtl
rep
lock
dec
dec
inc
or
outsl
dec
daa
mov
pop
inc
push
clc
sbb
incl
or
shll
or
jl
xchg
ret
lods
inc
cmp
jmp
pop
jns
pop
jl
outsl
xor
jne
dec
inc
mov
addr16
sbb
shll
push
cld
sti
clc
sbb
push
sbb
mov
movsl
mov
xor
std
pusha
jge
stos
push
push
jl
pusha
incb
incl
mov
cmc
filds
repnz
inc
pop
in
jge
adc
movsb
loop
fwait
and
push
push
loopne
aad
and
cmp
inc
and
dec
sub
add
pop
scas
sub
rcll
rcrb
sub
mov
dec
mov
shrl
jns
mov
cmpsb
jnp
sbb
dec
lods
or
ret
scas
xchg
cld
pop
mov
add
or
lock
dec
xor
ja
adc
aas
mov
int
out
inc
pop
enter
dec
ret
insb
inc
dec
insl
arpl
pop
out
cwtl
icebp
ror
pop
popa
in
cli
xchg
in
aad
add
mov
addb
lock
fmul
imulb
dec
jbe
sbb
mov
mov
mov
mov
xchg
mov
dec
xchg
mov
mov
leavew
inc
scas
shrb
pop
out
cmp
xchg
pushf
test
test
dec
not
ljmp
add
dec
popf
mov
test
insb
mov
sub
frstor
mov
jno
push
loopne
sarl
outsb
popf
xchg
iret
scas
mov
stc
or
mov
cmp
cld
fcompl
dec
inc
xchg
lods
cwtl
mov
mov
shll
lcall
es
rcl
ror
bound
js
std
ret
rclb
ret
fildll
inc
divb
les
sti
xchg
dec
and
inc
adc
dec
xor
xchg
sti
imul
out
pop
icebp
dec
enter
mov
lock
dec
call
roll
push
xor
scas
fsubr
outsl
mov
sbb
out
dec
pushf
daa
or
add
mov
sub
lret
fsubrs
in
icebp
stos
addr16
test
jmp
orl
jl
ja
jbe
test
sahf
pushf
pop
sbb
loopne
aad
leave
cmp
mov
mov
xchg
shlb
shlb
push
and
push
aam
mov
ret
les
sbb
cmp
mov
loopne
cmc
jl
pop
mov
xor
stos
mov
dec
pushf
push
fsubr
jecxz
in
das
xchg
rclb
push
cs
sbb
sub
xor
jns
movsl
ret
xchg
movsb
or
nop
aad
dec
mov
stos
jbe
mov
lret
mov
xchg
mov
cmp
sahf
adc
push
loopne
loope
jo
into
ror
call
lret
lret
mov
and
mov
repz
js
aad
in
adc
fistps
pop
rcll
sti
mov
push
stc
lea
aam
nop
inc
mov
lock
test
dec
punpckhdq
test
das
rolb
rolb
or
out
push
outsl
adc
adc
pop
pop
inc
push
andl
add
addb
jmp
or
outsl
mov
xchg
jl
inc
xchg
jno
pop
dec
sbb
mov
dec
xor
cld
or
jne
mov
inc
push
scas
jno
es
loop
xchg
cmpsl
andl
fcoms
pop
or
add
mov
mov
ljmp
daa
les
inc
scas
test
push
xor
mov
stos
mov
push
pop
lea
shll
loopne
or
cmp
adc
mov
xchg
mov
std
and
rolb
lock
clc
xor
les
cs
fistpl
inc
mov
fistpll
enter
in
pop
clc
or
rcll
mov
daa
adc
push
mov
into
in
iret
leave
push
inc
fildll
std
int3
jmp
js
fst
mov
inc
movsl
or
fisubrl
bound
inc
and
mov
push
sub
cmp
repnz
testb
int3
aam
xchg
cmpb
mov
xor
fldt
mov
test
add
idivb
sbb
ds
mov
sahf
sbb
dec
repz
inc
push
insl
push
fstps
or
jmp
sahf
insl
adc
dec
addr16
lret
push
sbb
or
lret
ljmp
push
mov
iret
push
dec
jge
and
cmp
iret
mov
xchg
scas
sub
jg
ret
cli
es
jmp
movaps
repz
pop
cld
add
vpsrld
sbb
mov
test
mov
ljmp
lahf
imul
cmpl
mov
dec
mov
sbb
mov
mov
stc
mov
push
fnstcw
ss
ja
and
faddl
shll
scas
sti
xchg
lods
in
in
fwait
arpl
in
sbb
data16
jecxz
daa
jecxz
sub
and
cltd
dec
mov
arpl
jne
ljmp
adc
push
pop
xor
dec
mov
out
loop
in
inc
fcoml
xchg
dec
call
imul
mov
pop
repz
mov
sbb
mov
out
sbb
ret
mov
ret
cmpsl
and
jle
in
sub
mov
and
insl
lods
push
in
inc
mov
jl
xchg
popa
cli
cmc
pusha
xor
mov
mov
or
stos
das
ss
jns
mov
addb
cmp
out
or
mov
mov
and
mov
lret
sbbl
sub
jl
js
adcl
ret
mov
push
xor
push
insb
dec
or
mov
imul
repnz
aam
jo
dec
aad
mov
sbb
test
fmuls
nop
inc
jo
and
iret
add
xor
inc
stos
pop
push
test
cld
cmp
mov
jns
mov
scas
incl
test
dec
xor
jg
ffree
loope
cmp
mov
stc
jle
or
and
call
mov
stos
jno
xorb
and
pop
or
fnsave
jl
fcmovbe
mov
push
xor
jo
pusha
xchg
pop
pop
cmp
sub
fsubs
out
dec
and
clc
cmp
decl
ret
in
out
ret
les
dec
sub
jno
fistl
push
mov
inc
mov
bound
dec
mov
orb
xor
sti
lcall
add
mov
adc
test
das
scas
lds
or
shrb
xchg
jb
mov
add
push
xor
fwait
sbb
cli
jmp
out
icebp
mov
mov
jg
test
shlb
aaa
and
nop
enter
or
dec
xor
mov
pop
daa
andl
pushf
jl
clc
lret
mov
out
pop
jbe
pop
jns
in
jge
push
mov
negb
test
push
shll
lods
xchg
pop
mov
jno
xor
jno
scas
lcall
push
xchg
cmp
push
inc
xchg
or
and
mov
jp
aas
adc
into
jo
add
inc
mov
dec
cli
or
xchg
in
je
lea
mov
push
test
cmp
xchg
dec
pand
jnp
dec
dec
mov
call
push
pop
sub
scas
fcoml
rorl
daa
movsb
cmpsl
adc
dec
adc
lahf
adc
shrl
mov
or
js
int
lret
cmp
jl
clc
js
cli
sub
stos
movsb
nop
sub
mov
dec
jae
xor
mov
in
xchg
sbb
push
add
mov
test
inc
adc
add
lahf
add
push
mov
push
push
mov
insb
aam
cmp
lcall
sub
mov
mov
lods
xchg
xor
mov
inc
inc
cmp
jmp
inc
adc
sbb
mov
mov
adc
out
add
sub
loopne
lea
insl
aas
add
pop
out
xchg
push
pusha
mov
and
jl
cmpsb
out
cwtl
cmp
lds
push
lds
jne
pop
jecxz
lahf
pushf
shlb
jnp
xor
pop
sbb
dec
les
xor
cmp
adc
cmpsb
cmp
mov
test
pop
xor
xor
movsb
xor
cmp
inc
scas
out
pop
std
sub
xlat
clc
push
rep
repz
add
neg
or
mov
xchg
push
push
xchg
sti
dec
mov
push
mov
fists
out
loop
fmuls
jmp
or
push
and
dec
sbb
sub
repnz
outsl
xchg
lcall
enter
cs
subl
andl
stos
mov
add
in
and
in
or
imul
popf
insb
pop
jmp
out
xchg
jno
xor
mov
jno
mov
mov
add
stc
ficomps
pushfw
test
sbb
test
lock
daa
xchg
aaa
es
test
cltd
rcll
fbld
mov
ja
mov
in
aas
push
sbb
push
xchg
pop
or
push
push
int
inc
jne
mov
mov
cs
les
test
and
pop
xchg
loopne
jnp
iret
xor
dec
mov
lret
jmp
cli
sub
xchg
xchg
push
push
dec
mov
ss
loope
ret
loope
xchg
lcall
nop
jmp
push
imul
daa
and
js
hlt
cwtl
jb
pop
sbb
sub
and
enter
push
mov
mov
and
push
fadd
push
in
test
out
jl
iret
xchg
bound
jae
ljmp
cmpsb
jp
inc
cli
sub
pop
fcomps
adc
push
inc
rorb
push
cmp
sahf
sbb
out
push
inc
ljmp
lock
pop
loopne
xchg
jns
in
or
movsl
dec
cwtl
jmp
sub
sub
movb
int3
bound
xchg
in
lret
xor
and
mov
scas
dec
sub
icebp
pop
das
sub
jge
xchg
fstl
dec
shrb
loopne
lock
imul
cmp
das
dec
jge
mov
xchg
mov
add
dec
add
int3
call
pop
xchg
popa
xor
xchg
push
mov
cltd
flds
cli
inc
fistpl
ret
pop
cmpsl
nop
cli
mov
shll
sub
lcall
xor
repnz
sbb
dec
jne
push
aad
fmuls
jmp
cwtl
add
inc
add
test
dec
loopne
lock
lret
addb
loopne
insb
jecxz
in
and
pop
mov
xchg
shrl
xchg
rol
je
shlb
or
xor
in
push
lock
push
aam
test
loopne
xor
jg
fldcw
inc
jge
pusha
sub
fnsave
loop
sbb
cmp
loope
fcomip
fcomi
arpl
aam
xor
and
xchg
mov
fcompp
cmpsl
mov
cmp
fs
cmp
frstor
lahf
jl
push
lock
movsl
lahf
add
push
fisubs
pop
je
enter
subl
pop
jns
lea
mov
xchg
add
sbb
or
andb
lods
call
and
notb
inc
mov
daa
sbb
push
push
mov
push
outsl
mul
jns
aaa
add
mov
fdivr
rcll
into
arpl
clc
xchg
sbb
add
push
inc
cmp
sbb
data16
lock
mov
xchg
scas
xor
or
jle
and
pop
insb
xchg
and
mov
inc
add
adc
sbb
test
xchg
loop
jbe
xchg
xor
out
inc
cmpsl
mov
sbb
stos
xchg
or
sub
idivb
ljmp
xor
sti
clc
decb
icebp
cld
popaw
jl
lds
leave
jb
mov
dec
mov
xchg
and
addb
test
push
scas
push
orl
jne
into
pop
data16
xchg
push
push
and
xor
cmpsl
xchg
ja
adc
sub
push
or
out
push
les
jle
sub
and
mov
imul
out
push
pop
pop
jo
sbb
mov
add
push
pop
sbb
sub
xchg
lea
mov
mov
push
test
adc
popf
aas
dec
and
rol
in
mov
cltd
lahf
adc
sbb
js
add
pop
push
in
repz
cmc
fistpll
mov
push
pop
xchg
xchg
add
xchg
aam
lds
sbb
pop
push
jbe
hlt
or
into
sbb
stc
inc
jno
pop
or
clc
pop
sarb
insl
mov
pop
dec
inc
or
mov
inc
sbb
cmovle
xlat
arpl
xchg
push
test
sbb
pop
mov
aaa
inc
stos
mov
shll
loope
cmp
gs
data16
dec
add
orl
xor
xlat
in
sbb
pop
pop
mov
sbb
xor
xchg
in
or
push
outsb
arpl
aas
or
int3
out
dec
or
insb
es
jne
fxch
pop
dec
xor
pop
and
and
add
sub
hlt
pushf
push
loop
in
inc
bound
jo
mov
add
pop
dec
xchg
popa
dec
shlb
aaa
scas
data16
jg
sbb
jl
xchg
sbb
nop
ds
cmpsb
pop
cmp
stos
add
daa
mov
daa
icebp
xorl
cld
and
repnz
sub
cltd
push
jg
test
daa
inc
sbb
enter
sub
loop
aas
rorb
mov
repnz
lds
push
test
cltd
push
daa
imul
cltd
or
subps
or
insl
negb
stos
mov
xor
call
mov
adc
xchg
add
mov
in
stos
push
clc
into
or
mov
nop
cmp
mov
sub
pop
scas
xchg
sbb
mov
loopne
cmp
and
jmp
scas
xchg
dec
gs
xor
sbb
pop
mov
mov
ret
lock
dec
sbb
sub
xor
mov
mov
std
sub
xchg
mov
in
cmpsb
fistl
mov
incb
loope
mov
push
mov
testl
jnp
dec
inc
add
fidivl
and
call
jno
sub
push
inc
cld
pop
cwtl
dec
push
fdivs
and
ss
rorb
jns
push
sbb
rcll
xor
ja,pt
inc
mov
adc
pop
xor
lret
and
js
fsubs
mov
pop
mov
add
lahf
or
jae
pusha
out
mov
cmp
es
fbstp
out
loope
add
sbbl
ds
inc
sbb
push
test
scas
jb
xchg
adc
add
add
inc
test
loopne
xchg
ljmp
or
lds
fwait
dec
lea
call
mov
cmp
movsb
fisubrs
push
fimull
sahf
add
clc
loopne
or
repz
ret
xchg
mov
in
jl
push
popf
xor
leave
hlt
sahf
movsb
fistl
cmp
xchg
mov
xor
std
mov
xor
xchg
dec
imull
sub
xchg
test
gs
imul
jecxz
pop
repnz
imul
fdivrs
fcomi
dec
pop
cltd
fldl
and
test
jne
js
pop
ret
push
cli
jl
add
ret
popf
iret
jle
cmp
das
popa
std
repnz
cmp
not
ja
or
add
sub
or
call
call
jnp
outsb
loopne
jb
ljmp
dec
jb
out
lds
pop
jecxz
xchg
scas
dec
push
imull
adc
dec
jbe
fbld
mov
adc
aam
sub
test
inc
pushf
adc
sbb
int3
mov
ret
scas
cs
mov
adc
push
mov
ficomps
rcl
sti
leave
mov
imul
xchg
push
jle
cmpsb
xchg
cwtl
jbe
fnstenv
dec
mov
jnp
add
xchg
dec
adc
mov
and
scas
mov
xor
loop
xor
xchg
roll
pop
lret
cmp
xor
imul
sub
mov
pop
xor
js
test
push
fwait
je
cs
push
xor
fidivrl
aas
push
stos
jp
pushf
mov
push
pushl
popa
inc
sub
leave
test
jg
push
rcl
cmp
lods
cld
sbb
lcall
imul
jnp
decl
in
add
imul
pop
leave
mul
cwtl
push
loop
pop
lret
cli
mov
arpl
pop
jge
aas
lea
aad
dec
dec
or
ds
cmc
test
ljmp
jnp
mov
add
ror
movsb
add
dec
ret
pop
dec
arpl
sbb
outsb
out
in
add
xchg
dec
cmp
push
dec
je
test
lea
repz
enter
jb
push
jle
dec
shll
dec
or
lret
imul
and
and
mov
mov
inc
mov
and
out
push
inc
mov
pop
data16
add
mov
hlt
cmp
jg
dec
into
pop
lcall
push
movsl
in
and
xchg
mov
xor
mov
xchg
dec
pop
pushf
aad
icebp
or
leave
add
add
fisubs
cmp
xchg
pop
or
testl
pushf
sub
jg
pop
cmc
cmpsl
bnd
mov
fildl
inc
mov
bound
aas
inc
inc
push
mov
das
js
ficompl
mov
inc
sub
int
sbb
mov
mov
jo
jno
mov
jbe
jnp
bound
pop
movsb
and
je
mov
and
ljmpw
jecxz
ret
xor
xchg
inc
gs
dec
jge
mov
add
cmc
lahf
pop
out
ret
push
lahf
pop
cmc
jl
mov
aas
inc
ror
js
mov
mov
mov
and
xchg
and
jnp
imul
subb
push
test
push
enter
push
lea
les
or
jnp
out
outsl
push
int
jns
je
and
repnz
gs
pop
outsb
dec
imul
out
dec
clc
out
mov
rol
inc
arpl
sub
out
lcall
subl
enter
inc
cmc
lods
sahf
cwtl
cmp
pop
mov
arpl
jno
es
cli
out
test
sbb
es
cmp
mov
mov
mov
cwtl
xchg
xlat
loope
jmp
xor
mov
sub
cld
push
push
es
ja
in
inc
mov
mov
xor
dec
sub
scas
dec
push
outsl
pusha
mov
mov
cmp
pusha
rcrb
mov
push
or
pop
popf
or
in
cmp
mov
jne
shl
dec
adc
cmp
mov
xor
js
xchg
enter
jb
xchg
inc
push
and
repz
pop
or
enter
cmpsb
insl
sbbb
into
push
cmp
adcl
cmp
shlb
fmulp
jno
mov
or
push
mov
lss
outsb
sub
pop
dec
mov
push
push
enter
inc
mov
mov
jns
mov
lods
stos
mov
cmc
cltd
je
and
jmp
mov
scas
dec
outsb
sub
adc
ret
cli
ja
or
lret
into
jge
push
in
jg
add
fcoml
xor
sbb
mov
dec
and
mov
sub
pop
xchg
lds
inc
rorb
in
daa
jg
pop
pusha
out
lea
outsl
inc
push
pop
cmp
ret
xchg
shrl
pop
js
dec
mov
push
dec
aas
and
in
sub
or
dec
pop
xchg
loope
mov
inc
sbb
je
xor
je
pop
sub
mov
shll
xor
imul
mov
filds
out
cmp
lods
jae
ljmp
inc
frstor
xchg
pop
lods
add
icebp
pop
std
cmc
loopw,pn
pop
add
fwait
mov
xchg
in
fst
lret
int3
iret
jge
pop
cld
out
jae
sbb
xor
sbb
test
iret
and
stos
sahf
sbb
leave
std
jecxz
xor
fimull
xor
jmp
fs
imul
pop
mov
rorl
and
scas
int3
into
jns
jb
cmpsl
push
mov
push
jl
sub
push
xchg
sti
ret
mov
andb
xchg
push
scas
adc
aam
and
lret
dec
loope
ja
push
pushf
testl
xchg
outsb
inc
cmp
lcall
mov
std
add
lret
or
xchg
loop
jge
cs
lock
push
ja
int3
and
push
nop
roll
push
enter
mov
ret
cmp
fstpt
rol
scas
pushf
mov
dec
bound
cmpsl
mov
xlat
xor
and
insl
fildll
inc
loopne
jne
adcb
push
orl
fwait
std
int
or
dec
jle
pop
popa
cli
and
cmp
aas
push
scas
test
or
rol
push
mov
loop
fildll
fdivs
lds
mov
pop
mov
xor
push
push
cmove
inc
sub
mov
ja
dec
fwait
sbb
jle
cmp
and
cmc
pop
xchg
cmp
xchg
mov
jae
sbb
stc
shll
hlt
cs
sti
jle
mov
add
and
out
in
sbb
movsb
sahf
lcall
je
arpl
adc
mov
dec
xor
add
pop
imul
cs
cmc
mov
lods
cld
loope
push
dec
mov
push
outsb
sbb
loop
jle
repz
std
xchg
lock
out
mov
mov
cmp
xchg
sarb
and
sarb
or
cmpb
mov
push
dec
jb
pop
mov
mov
dec
sub
sub
add
inc
and
dec
adc
dec
xchg
test
ret
cld
mov
pushl
int
and
or
and
xor
bound
push
cmp
xchg
push
push
dec
shll
xchg
pushl
sbb
fidivrl
mov
fstpt
in
and
inc
and
out
sub
nop
sbb
push
xchg
jecxz
push
std
cli
inc
in
adcl
mov
mov
in
in
cmp
pop
pop
imul
mov
pop
or
movsl
pop
push
xor
mov
lahf
ja
dec
mov
jb
nop
fiaddl
out
add
adc
jg
sbb
xchg
add
xchg
inc
mov
and
pop
cmp
mov
mov
jnp
fidivrl
xorb
sbb
jle
test
sbb
or
fs
xor
or
movlps
ret
ss
shr
lds
xchg
cltd
xchg
pop
js
jne
lock
xor
les
lahf
lods
mov
gs
outsb
in
mov
je
popf
pusha
mov
sub
xchg
mov
jae
mov
mov
call
test
mov
and
shlb
hlt
mov
mov
inc
sarl
roll
and
les
mov
cli
sbb
daa
mov
inc
bswap
inc
push
add
call
or
lods
pop
mov
cs
cmpsl
xchg
lock
sti
ret
std
clc
and
pmuludq
data16
cmp
sub
sbb
mov
mov
push
xor
jo
cltd
mov
call
xlat
dec
push
rcll
push
adc
ss
enter
scas
rdtsc
xchg
push
leave
adc
mov
xchg
cmpsl
les
xor
aas
shlb
outsb
push
mov
imul
call
and
testb
fistpll
dec
sbb
fisttpll
xchg
fs
push
xchg
aad
fsubrs
mov
inc
push
jbe
xor
mov
ret
lret
or
add
xor
xchg
dec
xchg
xchg
add
push
aaa
cwtl
pop
pop
add
xor
and
cmpsl
mov
stc
dec
or
movsb
mov
movsb
sub
and
jns
jae
shll
adc
bound
out
ja
sub
mov
test
fists
stos
shr
daa
hlt
in
push
inc
mov
push
lcall
mov
inc
add
popa
enter
adc
imul
subl
subl
xchg
ja
stc
lock
ret
add
add
call
das
insb
jmp
adc
aas
mov
ja
sbb
fs
nopl
mov
in
mov
inc
inc
or
out
inc
out
xchg
aas
xchg
xchg
jmp
int
imul
ja
subb
jnp
fsubrs
add
and
xchg
int3
push
xchg
out
sar
adc
lock
das
enter
pop
sbb
jle
xchg
mov
mov
or
inc
and
ret
loope
push
ljmp
cmp
sbb
push
mov
lcall
add
cmpsb
sub
sbb
insb
ret
insb
test
pop
mov
gs
push
pop
mov
mov
sbb
fistpl
sbb
push
mov
cli
sub
sarb
jno
subl
test
out
into
stc
sbb
dec
adc
mov
mov
jg
lock
test
fnstenv
int
loop
sub
and
ret
push
subb
mov
cmp
testl
adc
pop
cmp
shlb
sub
inc
scas
cmp
mov
addr16
push
shrl
or
mov
cmp
js
iret
insl
je
ret
inc
jns
imul
jp
enter
je
mov
mulb
push
inc
xor
ja
hlt
and
or
push
addr16
aaa
and
fs
lret
pusha
jo
pop
pop
aam
mov
cmpl
inc
pop
sub
sub
dec
das
in
nop
mov
mov
jb
jbe
inc
inc
mov
pop
movsb
popa
clc
fimull
cmp
fsubrl
in
sub
fists
inc
movsl
mov
aam
xor
fisttpll
mov
or
pop
xchg
orb
call
or
inc
xlat
clc
fisttpl
stos
leave
jecxz
pop
lret
inc
bnd
rol
push
pusha
sub
outsl
ss
clc
pushf
repnz
jle
leave
adc
or
xchg
adc
sbb
mov
aaa
rolb
xor
jbe
out
dec
cwtl
sub
loop
mov
xchg
xlat
push
mov
sub
lock
rorl
pusha
icebp
dec
movsl
and
push
cmp
xor
ror
add
inc
adc
sbb
pop
in
popf
xchg
popa
rclb
jns
enter
icebp
mov
and
testb
les
insl
nop
mov
stos
cmpl
movsb
aam
lea
loop
add
adc
repnz
xor
bound
hlt
and
or
setp
fs
aam
imul
push
push
jbe
fsub
mov
adc
aaa
xor
add
nop
dec
addr16
in
subl
pop
call
xor
mov
cwtl
insb
xor
xchg
les
scas
jo
call
xor
bound
inc
mul
push
lds
or
inc
test
scas
pop
fbld
mov
cmpb
jle
loopne
cmp
std
sti
jl
or
mov
inc
push
or
cmpsl
dec
repz
fwait
inc
sub
jg
xchg
js
mov
xor
sti
inc
sbb
jecxz
jle
ror
mov
pusha
ja,pn
fcomps
dec
mov
add
xchg
mov
and
push
push
push
fdivrs
inc
adc
sti
adc
pushf
push
cltd
push
hlt
dec
adc
and
lds
popf
cmp
cmpsb
push
xor
mov
scas
not
adc
pop
mov
and
out
push
rclb
sahf
in
add
jl
xor
add
mov
call
sarl
pop
out
mov
sub
adc
dec
push
push
aam
insl
dec
das
mov
adc
sbb
rcl
xchg
jne
std
push
jmp
std
push
mov
xor
rcrl
pop
jmp
mov
xor
out
out
out
jnp
out
into
cmpsb
inc
sub
out
jns
add
test
add
add
insl
call
and
inc
mov
pop
call
inc
stos
jl
push
push
flds
mov
mov
lret
sbbb
add
jae
rcrb
in
mov
into
mov
sbb
and
jbe
imul
stos
stos
aaa
imul
test
jecxz
lea
and
jae
popf
inc
insb
outsl
mov
inc
pop
insl
std
xor
push
dec
mov
out
dec
mov
movsl
cltd
xor
pop
fists
pop
insl
sbb
dec
pop
or
adc
sbb
dec
cmpsl
push
pop
clc
inc
test
jecxz
jb
push
or
int3
mov
lods
aam
addr16
aad
test
inc
imul
imul
outsb
jb
jne
adc
repnz
or
mov
icebp
stos
xlat
add
cmp
xor
cmpsb
lods
idivl
loopne
push
aaa
lea
movsb
sbb
imul
enter
adc
mov
mov
dec
push
push
cwtl
and
mov
pusha
mov
push
jbe
xchg
daa
adc
stos
and
iret
jle
fwait
or
inc
cmpsb
adc
outsb
and
lret
iret
and
je
mov
aad
mov
lea
orb
inc
push
scas
mov
mov
xchg
xchg
mov
push
pop
jbe
fwait
and
aam
aam
divl
push
or
inc
cmp
push
cmp
inc
lcall
lahf
mov
stos
popl
dec
stos
mov
sub
stos
add
flds
rcr
daa
and
mov
decb
pop
es
jg
push
xor
push
pop
sbb
sub
pop
enter
cmp
es
mov
add
inc
icebp
mov
jo
ret
mov
lods
mov
xchg
pusha
lds
adc
inc
stos
pop
dec
dec
cmp
inc
insb
arpl
imul
test
movb
mov
lret
das
sbb
scas
cmp
pushf
insb
push
push
test
xor
jno
xchg
inc
xchg
ja
sarb
lahf
jmp
push
insl
or
jmp
sbb
cs
xor
pusha
sbb
push
repz
adc
fcompl
cmp
add
mov
leave
adc
jge
cmp
ret
in
ss
or
aad
add
les
int3
xchg
clc
xor
cmp
insl
ret
xor
mov
or
scas
das
adc
mov
push
pusha
jb
fs
mov
cmp
mov
push
cmpsl
jmp
sbb
mov
dec
pop
dec
mov
mov
mov
in
pop
ss
js
in
xlat
jne
mov
popa
cli
ljmp
mov
jno
scas
sbb
push
mov
outsb
mov
mov
or
sbb
das
xchg
pop
dec
dec
inc
cltd
shll
insb
jb
xchg
cli
mov
fadds
add
jnp
and
sarb
sbb
es
fwait
cli
jne
and
sbb
lds
aad
lcall
stos
lret
fcomps
out
adc
push
dec
sbb
cld
arpl
cmp
inc
or
ret
les
cld
sbb
add
add
stos
add
mov
pop
insl
dec
sbb
insb
addr16
push
sub
dec
out
xor
test
sbb
ret
and
add
pop
pusha
or
test
iret
cmp
not
pop
jl
sbb
es
inc
jle
mov
cmpsl
aad
lock
jae
and
inc
jae
sub
lahf
pop
stc
dec
push
cmpsb
sbb
sub
dec
add
repnz
push
pop
jns
and
adc
rolb
xchg
push
mov
adc
fsts
mov
fwait
call
push
sbb
je
push
arpl
aaa
movsb
in
push
mov
jno
jo
xor
push
and
sub
pushf
inc
iret
ret
fadds
roll
sub
je
mov
push
push
cmp
jns
xor
push
push
cmp
test
scas
idivl
xchg
mov
cmp
ljmp
es
mov
push
gs
rcll
push
dec
outsb
fldl
popa
addr16
ret
cltd
or
call
sub
arpl
or
fs
dec
push
push
mov
sti
mov
adcl
imul
push
mov
dec
or
jecxz
in
or
dec
frstor
cwtl
inc
insl
cmp
test
daa
imul
pop
scas
out
cltd
scas
fidivrl
cmp
mov
or
mov
xlat
pop
mov
iret
push
xor
sbb
fwait
jae
int3
pusha
lea
sub
pop
push
xchg
in
xor
sbb
cmc
pop
pop
push
pop
mov
ss
add
add
out
and
out
push
jmp
xchg
sbb
jns
repz
mov
add
cmpsb
mov
xchg
lret
popa
xchg
fwait
test
movsl
jns
jae
xchg
das
jae
jp
and
mov
mov
push
push
push
ja
or
shll
daa
adc
mov
adc
mov
xor
jecxz
clc
imul
mov
lock
stos
jns
mov
cwtl
sti
les
into
popa
stc
adcl
and
mov
test
sbb
mov
dec
and
test
movb
dec
jecxz
stos
movsb
or
xchg
in
cld
in
push
push
std
stc
sbb
test
and
xor
jo
jle
push
fidivrs
mov
and
popa
cmc
popf
or
xchg
and
outsl
leave
fmulp
dec
inc
aam
scas
and
jnp
outsb
aas
or
leave
test
sbb
push
mov
iret
fcmovne
pop
popl
dec
push
mov
jecxz
pop
fstpl
xor
mov
ret
outsl
xlat
arpl
arpl
fisttpll
mov
imul
mov
sbb
sub
dec
add
outsb
mov
pop
loop
aam
ret
mov
mov
push
push
gs
inc
insl
jle
push
lods
sarb
sub
scas
pop
ja
mov
pushf
rcr
popf
pop
and
lcall
inc
lret
pop
sub
and
push
cmc
test
pushf
aam
into
insl
adc
icebp
dec
ja
ljmp
jb
scas
lds
in
aas
pop
xorl
jns
jle
push
cld
ret
adc
cmc
mov
mov
sub
sahf
cld
shlb
aaa
sbb
xchg
mov
push
mov
dec
div
mov
ds
repnz
dec
adc
insl
xchg
or
xor
mov
sarl
jo
jns
mov
cmc
jmp
loope
cmpsl
jl
cltd
ss
adc
negb
insl
dec
cmp
or
int3
hlt
sbb
jnp
push
push
sarl
mov
fldcw
lahf
pop
xor
adc
lret
sub
enter
js
cmp
cmp
pop
sub
push
idivb
popa
int
sub
jns
mov
jns
sbb
sahf
push
enter
dec
pop
cmp
dec
stos
lods
mov
mov
xlat
call
adc
mov
sbb
fmuls
jno
sbb
mov
xchg
push
sub
inc
out
mov
in
pop
mov
ret
xor
loopne
pushf
or
adc
push
push
test
dec
int
test
push
pop
adc
insl
adc
and
add
and
dec
in
lods
mov
js
test
jbe
enter
or
inc
push
hlt
lea
push
sysret
out
push
cld
mov
inc
jmp
pushf
popa
or
int
cmc
cwtl
inc
adc
mov
test
inc
and
xchg
sbb
movsb
cmp
add
adc
insl
fldenv
fwait
shll
cwtl
mov
icebp
test
mov
inc
mov
je
mov
test
and
insl
or
dec
xor
pop
dec
or
mov
adc
ljmp
aaa
out
and
lea
dec
out
nop
lahf
mov
lcall
aaa
adc
lahf
mov
cmp
mov
inc
lds
jecxz
test
sbb
or
jne
pop
cltd
xchg
clc
dec
push
and
push
or
js
and
xchg
pop
jbe
and
cli
jae
xchg
sub
or
roll
daa
or
xor
scas
aas
fistpl
jno
int3
outsb
pop
xor
sub
and
and
seta
mov
mov
cwtl
pushf
push
or
jnp
adcb
icebp
mov
psubusw
outsl
jbe
pop
cltd
std
or
in
outsb
push
pop
aad
lret
dec
pop
divb
movups
cs
movsb
sbb
xor
pusha
fcomp
idiv
pop
jae
mov
enter
adc
daa
fisubrs
shl
test
jns
orb
xchg
cmp
scas
mov
aaa
add
cmp
or
insl
je
lahf
fldl
lret
pop
push
ret
aaa
mov
stos
pop
and
push
push
adcl
mov
test
insb
cld
imul
out
aad
in
test
mov
pop
pushf
push
mov
bound
lods
std
or
fiadds
dec
mov
addl
cmpsl
push
xchg
cmp
jno
inc
scas
sbb
xchg
mov
sub
adc
jb
scas
sbb
push
or
hlt
push
shll
sub
movsb
cmovbe
and
push
add
ficomps
pop
lods
sbb
daa
stc
into
insb
pushf
lret
sub
push
jno
xor
mov
lods
in
inc
test
xor
or
and
mov
ror
push
scas
andl
imul
outsb
mov
aad
stos
outsb
pop
jbe
or
push
inc
sub
xor
and
test
fwait
or
mov
xchg
pushf
push
push
mov
lock
xor
mov
test
mov
ret
imul
dec
mov
jnp
pusha
mov
gs
arpl
mov
notl
jp
leave
cmp
and
cmp
mov
stos
scas
sub
sub
mov
pop
sub
push
push
mov
test
ror
mov
int
inc
addr16
mov
cmp
out
xchg
cmp
test
cmp
in
mov
fisubs
shll
add
inc
add
cld
pop
outsb
sub
repz
shll
pop
cmc
data16
push
cmc
mov
sbb
cmc
or
icebp
push
into
mov
dec
xchg
xchg
cld
hlt
fcmovb
push
bound
cmp
dec
fwait
push
nop
jbe
mov
sahf
mov
std
insb
xor
dec
test
mov
imulb
test
and
jmp
icebp
jbe
mov
sar
scas
pop
incl
cld
scas
cmp
mov
daa
pop
test
pop
xcrypt-ctr
fimull
push
add
push
addb
cmp
jle
test
in
pop
add
test
adc
dec
jp
cmp
rcl
or
cli
orl
pop
into
incb
sub
push
xchg
adc
and
mov
dec
jl
lret
lret
mov
mov
push
adc
lods
inc
pop
xor
jmp
and
test
or
cmpsl
jle
rcll
test
sbb
daa
dec
rolb
in
cmp
lock
lods
adc
adc
cmp
jle
int3
fwait
mov
int3
stc
inc
dec
inc
cmp
movq
fisttpll
out
dec
stos
push
push
pop
cmp
push
mov
mov
rorb
adc
vaddps
sub
pushf
mulb
std
cltd
push
enter
xor
dec
cmp
arpl
push
loope
or
jp
sub
test
fiadds
popf
mov
insb
fnsave
ds
jb
push
pop
testl
lahf
in
ljmp
mov
adc
xchg
cwtl
ja
repnz
iret
jbe
faddl
and
jns
jb
bound
pop
cmp
mov
jnp
xchg
daa
in
add
leave
adc
mov
mov
ljmp
cmp
sub
push
push
xchg
sub
jnp
cmp
xchg
pop
je
pushf
push
aam
jne
sbb
lods
inc
jmp
es
dec
test
daa
cmp
scas
arpl
push
loope
and
subl
jbe
cltd
pop
sub
lods
adc
xorb
and
js
sbb
mov
fidivs
or
cltd
cld
jnp
cs
shll
scas
jmp
jb
jmp
clc
jns
inc
push
loop
add
aam
mov
xchg
mov
mull
dec
xchg
inc
mov
xor
fs
movsl
in
rorl
addr16
call
mov
fdivrs
add
mov
test
hlt
mov
pop
mov
out
ret
dec
enter
dec
and
sub
mov
and
sub
jge
stc
lret
lds
add
femms
mov
or
mov
movsb
cmp
stos
and
sub
rolb
inc
popa
mov
push
test
repz
mov
cmp
les
jp
push
push
mov
adc
lea
or
jge
sbb
and
push
fadds
push
loop
or
repnz
xor
in
fidivl
out
push
sub
sub
cwtl
in
outsl
adc
inc
scas
fucomp
test
cmp
jl
test
and
daa
aaa
cmp
hlt
adcb
aas
inc
loope
mov
pop
mov
ret
cli
in
push
shrl
sub
adc
dec
add
mov
jp
dec
insb
mov
inc
shrb
mov
outsb
push
fbstp
ss
jp
mov
jb
sbb
push
pop
or
cltd
pop
inc
push
in
jmp
fildl
out
repnz
imul
or
mov
push
or
imulb
out
mov
shl
pop
mov
insl
inc
cs
iret
lods
pop
enter
call
jno
enter
mov
es
mov
mov
lret
add
cltd
and
hlt
mov
and
xchg
jl
hlt
push
mov
sti
neg
jne
das
ret
dec
mov
arpl
sahf
dec
push
mov
stos
inc
jno
jae
in
lcall
xchg
fldl
aam
xchg
sub
in
ficompl
movsb
or
mov
and
addb
js
jg
ficompl
scas
mov
fisttpl
adc
push
and
jb
aam
arpl
pop
sub
std
cld
imul
cmpsl
mov
mov
and
fcomps
adc
inc
lock
cwtl
mov
xchg
add
pop
int3
ss
add
test
xchg
adc
cmp
sbb
mov
mov
sub
rcrb
xchg
rorl
lea
scas
inc
in
or
push
fisubrl
xor
inc
sbb
pop
movsb
sbb
inc
les
mov
cmp
out
in
xchg
or
sbb
mov
xor
push
mov
cmp
pushf
mov
data16
jge
mov
movsb
imul
jns
jle
mov
ss
jbe
pop
xchg
mov
mov
sub
int
iret
sti
dec
push
aam
mov
add
pop
in
mov
mov
into
fs
popf
add
fstpl
jbe
addl
xor
int3
outsb
push
dec
stc
push
dec
cmp
repz
dec
lock
outsb
or
repnz
mov
xchg
sbb
jne
mov
push
sub
inc
xchg
cmp
inc
pushf
pop
sub
jno
push
push
and
div
lods
pusha
int
and
mov
pop
inc
fsubrs
imul
popa
dec
and
inc
ficomps
adc
enter
mov
outsb
xchg
loop
dec
xor
push
out
outsl
bound
mov
icebp
rcl
dec
out
push
sahf
lret
iret
aas
roll
fs
jno
iret
mov
cld
out
mov
adc
cmp
push
xor
mov
mov
pop
mov
xchg
xlat
leave
xor
jns
lcall
mov
leave
xor
mov
lock
test
imul
insb
xor
or
cmp
cs
inc
cli
adc
lea
adc
repz
sub
out
jmp
fcoms
or
cmp
popf
in
cmp
adc
xchg
sbb
scas
jp
popf
in
add
push
outsb
jmp
mov
fldl
push
shl
in
inc
mov
stos
testb
mov
push
rclb
add
add
imul
mov
clc
mov
sub
pop
or
cld
scas
adc
xor
clc
cmp
movsl
jl
add
es
repz
jg
or
cltd
in
test
sub
cmc
mov
jp
test
inc
out
mov
push
xchg
loopne
sub
lea
lret
push
into
aam
push
inc
pop
fs
pop
push
and
pop
outsb
insb
sub
adc
repz
enter
pop
lods
int3
dec
dec
mov
inc
mov
jmp
iret
jg,pn
pop
add
flds
xchg
mov
sub
dec
rolb
xchg
sub
stos
lds
sbb
call
lahf
sti
aad
adc
insl
xor
adc
pusha
cltd
push
pusha
ret
call
stos
stos
jae
cwtl
stos
lahf
fldt
jo
mov
incl
jmp
ss
fimuls
xchg
testl
push
jmp
or
mov
ret
shl
and
adc
fnstenv
bound
pop
cmp
data16
add
mov
aas
into
mov
xor
cmpsl
aam
mov
insl
push
xor
ss
push
arpl
cmc
mov
in
dec
adc
leave
test
cmpl
mov
sub
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
dec
xchg
sar
xchg
dec
jp
xchg
pop
xor
fbstp
xchg
push
xchg
push
or
hlt
mulb
adc
js
call
sub
jns
ret
sub
cmp
add
cli
inc
ret
cmpsb
out
xchg
sarl
xor
fdivrl
out
pop
lret
ljmp
ja
or
bound
jae
mov
out
and
movsl
movsb
ficoms
dec
mov
sbb
faddl
fbstp
sahf
dec
sarb
push
adc
test
xor
add
loope
push
pop
cvtps2pi
push
jp
jns
push
sbb
lea
outsl
dec
loope
xor
jns
mov
inc
imul
fsts
pop
sub
mov
incb
js
movsb
shl
ret
pop
cmp
jo
cld
mov
call
or
daa
cwtl
loope
pop
call
mov
dec
or
pop
dec
in
mov
push
cwtl
sbb
dec
popa
into
movsb
cmp
and
mov
fldcw
inc
in
pop
ret
pop
nop
cli
adc
xor
in
jl
pushf
call
and
xchg
dec
xor
rclb
ret
jge
sbbl
inc
pop
push
lods
imul
call
push
add
leave
or
nop
sub
xor
xchg
or
pop
xor
jnp
push
adc
xlat
adc
cmp
flds
pop
pop
int3
jb
xor
stc
cmp
out
cmp
mov
fisubrl
ret
sub
dec
fsubrs
in
pop
inc
and
xchg
repz
and
jecxz
cmp
mov
or
std
jmp
mov
sub
testl
push
scas
cli
xchg
or
faddl
add
mov
xchg
mov
xor
sbb
add
out
arpl
int3
mov
pop
icebp
mov
lret
test
jmp
cmp
stos
jb
mov
js
je
outsb
stos
and
cmpsb
sbb
cmc
in
mov
add
mov
mov
pmullw
mov
inc
push
ja
pushf
mov
shlb
jns
or
add
movsb
mov
mov
int
ss
aad
xor
rcll
das
ret
shr
fnstcw
shlb
cs
cmp
push
in
adc
sarb
jp
ja
ret
push
clc
jecxz
loop
xor
sub
inc
mov
inc
jo
xchg
sbb
popa
fcomip
mov
xchg
cmp
sub
jo
inc
popa
fdivs
jge
outsl
int
loopne
cmp
outsb
enter
inc
lods
add
loop
sbb
cmp
dec
xor
rcrb
mov
sbb
mov
pop
loope
imul
insb
in
stos
jge
das
xor
and
pop
out
sub
inc
or
mov
in
adc
add
mov
sub
bound
mov
stos
fs
dec
das
xchg
jno
mov
loopnew
outsl
mov
jbe
fimuls
cmp
or
dec
lock
imul
jmp
mov
push
out
push
cmpsb
jbe
test
sbb
in
aaa
adc
cmpsb
pop
movsb
stos
arpl
add
leave
pop
adc
int3
adc
shll
out
fst
das
fisttpl
add
sbb
sub
fnsave
nop
fdivl
xchg
cmc
pop
out
into
fidivrl
ret
jbe
popf
mov
mov
fstps
cmp
test
push
mov
and
mov
cltd
out
daa
and
fcoms
fstl
movsl
mov
out
into
push
movsb
repz
fstpl
insb
imul
pop
shl
gs
ret
shl
push
or
mov
lods
and
push
lret
jae
add
push
jno
xchg
sti
pop
sub
lea
pop
insl
or
add
push
or
aam
pusha
mov
mov
mov
rcl
push
add
push
pop
rcrb
adc
cmp
clc
mov
movsb
stc
ja
js
outsl
test
mov
mov
pop
push
mov
idivb
mov
add
pop
ds
mov
into
enter
push
ficomps
jns
ror
test
iret
jp
and
inc
dec
dec
enter
or
add
inc
outsb
out
fidivs
mov
les
fstpl
out
rolb
in
out
aaa
sub
add
pop
adc
xorl
inc
ret
addr16
incb
xchg
or
mov
in
inc
and
xor
jmp
push
jae
enter
dec
ja
xchg
mov
add
out
push
inc
mov
mov
in
popw
mov
inc
jne
cmp
push
scas
jg
iret
popa
cmp
sub
jo
test
sub
cwtl
jmp
and
and
sbb
or
or
dec
xorb
and
rcll
cmpsl
mov
xor
push
addr16
cmpsl
loope
addr16
mov
testb
mov
inc
in
add
adc
sbbl
jp
lods
cmp
shl
outsb
loop
pusha
add
sbb
jp
mov
jnp
pushf
add
test
and
or
xchg
sbb
in
inc
sub
jmp
sbb
jo
sbb
add
stos
sub
or
cmp
xor
xchg
jno
dec
jno
scas
or
leave
sti
mov
sbb
mov
jmp
rorl
leave
in
outsl
out
jmp
nop
cmc
mov
pop
add
fistl
jecxz
sub
test
hlt
mov
mov
dec
dec
in
pop
aas
inc
sti
repz
test
into
dec
cmp
adc
add
popf
out
arpl
adc
push
xor
sbb
cld
sarl
shrl
aaa
enter
mov
and
dec
xor
push
into
mov
sub
xorl
pop
sbb
lahf
mov
add
push
pop
in
inc
xlat
pop
sbb
inc
pop
cltd
cs
pushf
sahf
cmp
arpl
scas
push
out
xchg
lcall
push
nop
lcall
mov
lea
dec
jle
xor
add
xchg
dec
sarl
or
fmuls
addb
push
push
mov
aaa
cmp
mov
dec
test
lret
mov
lods
cmpl
int3
les
imul
dec
scas
pusha
scas
aad
ja
pop
xchg
icebp
or
bound
int3
jl
das
push
imul
shld
stc
enter
xor
ds
add
sbb
inc
xchg
inc
stc
jge
sbb
out
cltd
adc
adcl
jno
inc
and
loop
add
or
pushf
mov
mov
pop
push
mov
negl
testl
sbb
sbb
dec
push
pop
daa
les
call
ja
mov
xchg
repnz
xchg
mov
es
dec
jp
pop
shlb
cli
es
ja
repnz
loop
push
inc
or
dec
mov
idivb
mov
mov
test
imul
inc
mov
scas
outsb
popf
cmp
les
ret
aaa
xchg
fists
notb
add
sbb
nop
jge
jecxz
ljmp
insb
mov
je
ljmp
mov
xchg
adc
xchg
adc
dec
add
cld
pop
imul
inc
jecxz
mov
test
lea
jg
outsl
or
adc
stos
or
stos
mov
and
cs
xorb
out
inc
xorb
int
push
mov
add
add
fdivl
inc
repnz
sbb
pop
iret
insb
lock
dec
xor
cmp
inc
pop
mov
jp
jmp
inc
imul
stos
push
cli
loopne
mov
fstl
xlat
xchg
pop
lcall
push
xchg
push
lea
mov
xchg
out
cwtl
pop
cmc
adcb
fmul
subb
shrb
cmc
call
test
popa
arpl
pop
movsb
outsl
cmp
sbb
inc
mov
adc
dec
mov
dec
movsl
jle
xor
mov
test
aad
loopne
ficomps
or
popf
leave
cltd
lcall
add
sub
push
clc
scas
fisubrl
jle
sbb
jo
mov
dec
jg
loop
test
cmpsl
jmp
mov
cwtl
mov
inc
add
scas
xchg
inc
adc
stos
cmp
lea
mov
mov
inc
lret
ret
scas
popf
cmpsb
xchg
enter
push
jge
into
imul
sbb
mov
aas
mov
adc
cmp
push
mov
mov
in
mov
xor
rclb
mov
scas
mov
pushl
sub
mov
out
jns
mov
div
fsubr
fucom
arpl
dec
inc
out
push
fwait
mov
push
cmp
rcr
inc
xor
cmp
sub
addr16
mov
faddp
dec
idivl
cmp
cli
dec
or
icebp
push
pusha
add
and
int3
xchg
scas
sbb
fnstsw
cmpb
mov
or
mov
jle
repz
ds
movsl
adc
scas
add
jae
dec
lretw
mov
mov
adcb
push
leave
sbb
xchg
push
pop
add
sbb
jae
cmpsb
jp
inc
adc
push
rcrb
inc
ds
cmc
int
xchg
aad
js
lds
adc
jne
cs
cmp
jo
sarl
mov
shrb
cmp
mov
mov
out
pop
rorb
sbb
dec
xorl
pushf
xchg
scas
or
test
mov
sub
and
ds
jge
cmp
xchg
test
cmp
shrl
and
adc
inc
pop
fsubl
sub
rorb
int
push
xor
mov
sbb
andb
popa
imul
int
aaa
aad
jge
stos
jae
into
push
lret
jo
sbb
inc
push
jb
adc
jno
fldcw
xchg
cmp
fdivrp
inc
fmul
mov
pop
mov
addr16
xchg
dec
jae
mov
xchg
pop
sub
loop
xchg
scas
sbb
mov
xchg
add
jg
xor
aam
pusha
mov
push
add
adc
clc
jne
xchg
inc
scas
cltd
fmuls
dec
add
fdivr
sbb
mov
stos
cli
dec
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
negl
xchg
test
sub
bound
push
das
lock
mov
add
dec
roll
pop
cli
lods
and
repnz
push
das
enter
and
mov
lret
hlt
jno
aas
dec
adc
or
xchg
or
and
inc
cmpsl
in
dec
shlb
jae
cmp
mov
loopne
pop
xlat
decl
add
dec
adc
jge
pop
ljmp
mov
sbb
jo
aaa
jl
fsubs
mov
popa
fcomps
adc
in
icebp
xchg
dec
movsb
push
scas
leave
sub
jl
out
int
pushf
mov
jmp
xor
jge
or
std
push
inc
test
push
js
test
xorb
xor
out
test
jno
test
xor
orl
outsb
cmp
js
xchg
lods
push
or
stos
mov
pushf
and
mov
stos
push
ja
test
and
sti
push
push
sub
cmp
push
mov
cmpsl
adc
add
xchg
ret
inc
out
lcall
jno
sub
mov
in
aas
xchg
cmpsb
mov
jne
dec
std
subl
lods
inc
push
dec
inc
mov
shlw
cmp
std
dec
sub
enter
repnz
inc
roll
stc
inc
mov
mov
jnp
push
cld
mov
repz
scas
popf
jl
dec
subb
jb
jbe
fmul
push
dec
ljmp
lret
lods
add
mov
popl
outsb
xchg
push
mov
lds
test
jae
loop
lea
push
xchg
lods
imul
sub
xchg
mov
cs
idivb
clc
cmpsl
movsl
or
fwait
ja
jnp
sbb
and
jb
cmpsb
daa
scas
gs
scas
sub
fs
ja
cmp
or
mov
in
pop
incl
or
pop
inc
int
out
addl
dec
outsb
stos
xchg
mov
push
push
mov
mov
fs
pop
sub
mov
mov
rcll
fidivs
movsl
jg
mov
mov
jg
aad
jg
pop
mov
mov
bts
mov
movsl
mov
imul
push
cmpsb
cwtl
jne
dec
xchg
cmc
lret
sbb
ljmp
lds
jge
adcb
push
cmp
inc
sub
cmp
ficompl
ss
lret
je
add
mov
shrl
jmp
xchg
out
xor
lods
push
es
xchg
out
lahf
rcl
dec
dec
pop
je
inc
xchg
jnp
xor
xor
insb
insb
out
push
push
jge
cmp
paddw
or
push
inc
in
sub
test
mov
sub
in
xchg
ret
adc
push
mov
nop
int3
cli
mov
or
add
rolb
aad
cmp
pushf
mov
dec
xchg
mov
scas
sarl
or
push
mov
arpl
mov
mov
xchg
dec
es
in
pop
lahf
cmp
xchg
cmp
pop
push
xor
sbb
out
sbb
data16
daa
push
add
sahf
mov
add
jb
dec
stos
pop
dec
in
jbe
movb
repnz
cmp
cmc
ljmp
addb
roll
stc
inc
sarb
sub
adc
hlt
imulb
aam
aad
ljmp
push
aas
outsl
enter
pop
insl
push
data16
inc
rclb
xchg
testb
icebp
cld
fstpl
xchg
dec
jmp
xchg
test
pop
and
xchg
rorl
push
rorl
xchg
cs
pop
add
or
popa
sbb
push
cmp
mov
mov
push
lods
call
pop
fwait
pop
xlat
mov
and
ljmp
sub
fbstp
cltd
incl
jns
bound
imul
out
bound
push
cmp
dec
gs
adc
loopne
test
sahf
jbe
out
or
clc
sub
pop
ljmp
es
lods
mov
js
xchg
mov
jg
adc
loopne
push
add
cltd
jg
jnp
out
aaa
pop
mov
jns
cmp
aas
cltd
cwtl
leave
xor
popa
push
or
mov
push
xchg
push
cmp
daa
inc
sbb
shll
imul
mov
sti
jns
popa
jle
test
lcall
call
out
dec
jecxz
jmp
inc
mov
mov
and
dec
inc
insb
ret
pushf
pop
lret
sbb
and
push
pop
lds
cmp
arpl
ret
cmp
imul
inc
inc
jno
adc
mov
pop
mov
sub
mov
fisubs
cwtl
incl
pop
push
mov
or
pushf
movsl
sub
js
outsl
push
lock
cmp
jns
add
or
mov
jbe
adc
into
rclb
das
mulb
pop
daa
mov
sub
daa
mov
fstpl
sbb
inc
mov
or
test
pop
cmp
lret
push
or
int3
jo
les
iret
ss
inc
ja
pop
in
inc
xchg
cmp
jne
ss
insb
inc
jns
cs
push
or
push
mov
sub
push
stos
lret
loop
push
dec
add
out
cli
pop
pushf
push
mov
fisubrs
in
loope
popf
sub
je
adc
add
mov
cmp
pop
cmp
add
mov
sub
sub
iret
xor
fisubrs
lods
pop
js
push
ds
fcmovne
xchg
mov
or
leave
xchg
dec
inc
add
std
addb
ja
lds
pop
or
and
out
in
and
out
aad
scas
or
out
pop
or
xchg
mov
jne
pop
sbbb
sbb
xchg
xor
jecxz
sub
or
sub
dec
in
dec
pop
push
dec
xor
add
xlat
cmp
jb
add
int3
and
notl
push
mov
testb
aas
sbb
lds
mov
cmp
pop
pop
dec
inc
ja
ret
cld
leave
nop
ret
or
xchg
cld
pop
subl
add
fldt
jbe
iret
imul
inc
adc
lds
clc
or
sub
mov
jae
fcmove
mov
mov
mov
add
push
rorl
je
nop
dec
pop
mov
cmp
in
dec
dec
repnz
nop
xchg
and
sbb
mov
cmpsb
hlt
clc
push
push
int3
lods
xchg
ret
ds
imul
xchg
lea
repz
out
fwait
pop
or
sub
add
in
mov
cmpsb
pop
fisttps
out
dec
les
scas
pop
sbb
push
adc
mov
aas
inc
jle
std
and
mov
and
test
fwait
push
xlat
pop
pop
mov
xchg
rol
add
fbld
cltd
int3
aaa
mov
mov
aam
lahf
xchg
mov
loope
and
es
icebp
sar
inc
xchg
int
sbb
cmp
les
adc
shll
js
imul
xor
hlt
mov
cld
jmp
add
jmp
loope
push
or
enter
out
adc
into
jo
fcmovnbe
adc
scas
add
jle
gs
out
xchg
xchg
out
and
repnz
push
mov
xchg
sbb
mov
mov
out
js
sub
jmp
cwtl
leave
out
mov
push
push
rolb
shrb
pop
push
dec
nop
xchg
push
and
loope
mov
faddl
push
ds
loopne
push
fidivs
cmp
adc
fnstsw
xchg
ret
in
test
inc
and
dec
mov
pop
sub
gs
in
stos
outsb
sub
xchg
mov
sbb
pusha
inc
xchg
dec
push
imul
cwtl
movsb
inc
aas
cs
ja
mov
pop
es
mov
jl
in
mov
data16
fwait
inc
sub
xchg
inc
xor
nop
adc
pop
in
mov
mov
mov
dec
and
loope
into
testb
xchg
sub
std
adc
mov
mov
cmp
push
dec
les
popf
or
test
lods
inc
jb
in
dec
in
mov
popf
push
xchg
jbe
mov
sbb
outsl
and
xor
xor
scas
or
lcall
int3
push
inc
loope
jg
lret
or
adc
addr16
add
inc
sbbb
lret
scas
test
iret
push
dec
cmp
scas
lea
pop
sub
fisttpl
pop
stos
rcrb
jle
stos
xchg
test
mov
xlat
jno
pop
mov
lret
testl
imul
inc
clc
jne
shrb
push
ss
aad
pop
mov
int
mov
es
push
xchg
pop
push
dec
lods
dec
jb
cld
daa
jno
in
nop
pop
fdivrs
sub
and
and
jmp
inc
pop
mov
push
cmp
sbb
push
and
pop
shl
aam
test
push
cmp
cmc
cmp
out
mov
add
add
pushf
sbb
push
lock
mov
inc
stc
jge
jle,pn
push
push
xor
sbb
pushf
mov
test
andl
cmpsb
das
mov
sbb
lea
pushf
insb
fbstp
lret
sbb
insl
mov
out
sub
pusha
sub
shll
cli
pop
insb
popf
or
jge
lock
mov
and
mov
lret
lea
inc
ret
sbbb
xor
lods
mov
cwtl
push
incl
lret
icebp
fisubl
push
add
out
aaa
ficomps
outsb
xchg
mov
cmp
adc
fbld
popf
in
mov
mov
sub
jo
mov
inc
aad
cs
pop
dec
loopne
mov
lahf
cmc
dec
sbbl
stos
idivl
lret
stc
fs
ror
add
outsb
stc
out
xchg
out
pop
cmp
idivb
sahf
dec
xor
sbb
aam
lahf
shl
enter
fwait
push
loope
loope
mov
jbe
sub
mov
cmpsl
out
lock
push
outsb
fldl
xchg
stos
and
lods
lea
add
lret
lea
cld
push
das
xlat
loopne
xor
lods
cli
jecxz
adc
or
scas
stos
inc
xor
mov
std
or
les
inc
aas
stos
shlb
ficomps
data16
into
sub
out
mov
mov
mov
fcmovbe
xchg
stos
addr16
test
mov
add
leave
mov
pop
pop
pusha
imul
adc
pop
inc
mov
inc
jns
mov
aad
cwtl
adc
mov
fcoms
push
dec
jecxz
push
outsb
push
es
lahf
in
sub
xor
iret
sahf
mov
jns
popl
jb
mov
leave
loopne
mov
push
fnstcw
xchg
push
pop
xor
in
lahf
cmp
inc
sarb
pop
xor
aas
mov
push
inc
std
push
or
dec
adc
push
sub
aad
and
jg
fs
in
call
push
adc
and
inc
stc
mov
out
jae
adc
aaa
addr16
in
lea
xchg
scas
sub
insl
frstor
add
xor
mov
loopne
in
xchg
push
pop
dec
arpl
push
push
loopne
js
mov
sub
mov
hlt
enter
sub
cmpsb
xlat
adc
adc
shll
in
in
sub
sahf
xchg
bnd
lea
addr16
imul
sbb
pop
mov
testl
addr16
lds
mov
jns
pushf
jb
ficoms
jnp
fadd
repz
adc
fistpll
adc
mov
dec
inc
faddl
pop
rolb
inc
sub
cs
mov
push
push
mov
pop
xchg
stos
adc
xlat
xlat
fistps
nop
hlt
sahf
xchg
pop
js
xchg
xor
and
mov
xchg
inc
les
xor
idiv
xchg
decb
mov
insb
aas
xlat
sahf
ljmp
dec
adc
scas
bswap
das
dec
mov
out
stc
xor
fisttps
enter
inc
and
dec
bound
inc
test
shll
or
shrl
in
push
cld
lods
inc
cs
mov
xchg
loop
daa
jge
jl
push
xor
andb
dec
lods
mov
inc
jp
sub
jbe
cwtl
pushf
sub
mov
cmp
rorl
and
out
imul
sbb
cli
loop
clc
jecxz
in
addr16
adc
push
std
mov
sahf
xchg
cltd
lock
cli
rcrb
push
push
jecxz
inc
adcl
sbb
popf
inc
adc
inc
bound
xchg
pop
push
lret
test
sbb
aam
push
inc
loope
jns
sbb
fildll
xor
in
fiadds
fistpll
or
sub
pop
scas
inc
lcall
mov
lret
bound
push
dec
out
xchg
mov
push
fdivrp
push
mov
add
mov
rolb
int3
ja
dec
dec
aas
mov
in
negb
add
das
push
mov
push
pop
sbb
dec
push
shr
push
mov
cmp
fbld
dec
bound
gs
mov
jge
jb
fidivs
mov
imul
popf
call
imul
jnp
push
sbb
popa
cmp
in
cmc
adc
fmull
dec
or
lods
clc
adc
and
pop
cmp
xchg
aas
rcrb
pop
sub
cwtl
xlat
negl
inc
in
inc
cmp
adc
pop
add
push
mov
or
pop
std
daa
in
shrl
pop
jge
xor
sahf
insb
sub
dec
in
ljmp
aad
fbstp
inc
rorb
insb
jae
repnz
test
mov
cmp
xorb
or
pop
mov
xor
push
cli
and
pop
fucomip
fiadds
rcrb
and
push
and
or
and
mov
mov
jge
add
ret
ret
aam
mov
push
andl
les
and
gs
rol
fdivr
xor
mov
dec
arpl
js
js
or
andl
popf
cmp
je
popa
insb
pop
mov
lock
test
test
repnz
scas
push
fiadds
out
dec
call
sub
fisubrl
js
dec
lock
jmp
pop
clc
sbb
gs
insl
shll
pop
xchg
dec
dec
pop
mov
jl
push
xlat
inc
aad
jp
push
lock
mov
push
in
adc
dec
xor
xor
push
push
lds
insl
cmpsl
dec
dec
ljmp
popa
ret
call
xor
outsb
js
xchg
ss
xchg
mov
test
aas
xor
jle
cmp
inc
cmp
cmp
sbb
fadds
outsl
pop
addr16
adc
test
inc
adcb
repnz
shl
push
adc
cmc
aas
pop
inc
mov
or
cmp
add
popa
cwtl
mov
push
out
cwtl
sub
jno
rorl
fcmovne
lahf
insb
lret
flds
mov
popa
lock
push
and
js,pn
enter
inc
shll
decb
push
xchg
xchg
mov
inc
sbbl
stos
lods
aad
sar
imul
sbb
mov
lret
test
jmp
enter
test
mov
cltd
push
and
lea
into
dec
pop
add
je
inc
stos
ret
in
xlat
imul
ljmp
mov
inc
cmp
sbb
cmp
and
ds
pop
adc
sbb
mov
xor
push
mov
add
xchg
fadds
mov
add
xor
xor
cltd
mov
lret
xlat
addb
gs
push
mov
cmp
xor
cmp
xchg
xchg
inc
or
cmp
inc
pop
scas
repnz
add
arpl
lods
out
ret
mov
xchg
xchg
fstpt
jae
sahf
shlb
inc
pop
imul
pop
pop
addb
cld
imul
add
cmp
sub
or
xchg
inc
pop
mov
push
mov
add
adc
mov
lds
lods
mov
inc
xor
xor
push
outsb
test
push
je
push
stos
sti
in
push
sbb
aam
inc
pop
test
inc
xchg
lock
xchg
lcall
addb
test
pop
adc
fcomps
dec
imul
lods
ss
es
cmp
xchg
mov
imul
and
es
push
pusha
popf
stos
mov
fs
es
sbb
insb
mov
mov
jnp
adc
or
add
out
int
imul
push
xor
cmp
inc
je
into
sbb
pop
cmp
pushf
jg
mov
fsubr
loope
add
in
mov
push
and
mov
mov
xor
repz
jo
pop
sbb
xchg
jmp
dec
stos
add
pop
imul
sbb
fcomps
addr16
mov
inc
loop
daa
pop
jecxz
loope
mov
sub
xchg
pusha
sub
in
rorb
dec
js
notb
mov
or
or
jle
ss
insb
add
inc
ss
cmp
aad
mov
sbbl
cmp
adc
xchg
add
rorb
mov
iret
cmp
imul
sbb
adc
push
mov
sti
mov
mov
jg
fists
lret
rorb
cwtl
mov
arpl
and
push
mov
adc
and
jbe
call
cltd
rorb
xor
inc
jecxz
cmp
mov
inc
mov
pop
aam
sub
mov
addr16
ret
ficoml
mov
int
iret
test
cwtl
jp
inc
sub
jle
fildll
and
sub
and
movsb
xchg
inc
cmp
rol
and
jp
cmp
adc
repnz
or
push
js
push
andb
rcll
jge
mov
imul
mov
fstps
out
inc
mov
je
pop
enter
stos
scas
lock
loop
sti
pop
sti
sub
aam
mov
int3
xor
push
adc
jp
adc
jmp
scas
mov
mov
lods
lcall
gs
hlt
jmp
xlat
je
push
dec
les
fld
sub
or
and
pop
out
aad
push
bound
xchg
mov
lods
add
xchg
sbb
lea
pop
xchg
sbb
movntps
in
cmp
in
cmp
pusha
pop
int3
jle
push
jge
repz
rolb
xchg
fdivrp
int3
sbb
jbe
cmp
sbb
dec
in
loope
inc
cmp
inc
int3
dec
pop
mov
xor
adc
mov
sbb
pop
adc
hlt
shrl
push
mov
xchg
mov
sub
out
mov
imul
loope
cld
imul
inc
addr16
push
ret
lcall
sahf
sbb
fdiv
mov
jmp
insb
sub
cmp
xchg
and
xchg
cmpsb
out
inc
and
mov
mov
sub
das
dec
xchg
mov
stos
adc
push
ljmp
mov
test
mov
les
cmpsl
scas
mov
sub
jp
sub
popf
inc
sbb
test
xor
int
aaa
mov
mov
repz
enter
pop
mov
mul
sbb
jl
dec
aas
xchg
and
lret
lret
sbb
mov
or
inc
push
cld
inc
sbb
sbb
shll
xlat
cmpsb
and
inc
je
adcl
sub
repz
mov
mov
mov
test
and
lret
in
xchg
xchg
jle
dec
fdivrs
jp
outsb
stos
mov
in
jnp
mov
nop
out
repz
sarl
hlt
popf
or
js
pushf
clc
pushl
lock
popa
cmc
dec
inc
shrl
and
into
or
stos
ljmp
xor
stc
test
lcall
rorl
mov
jns
pop
stc
mov
mov
push
sub
and
sti
push
add
push
fisubs
outsb
inc
aam
arpl
dec
dec
or
inc
jbe
fisttpl
aas
jge
gs
xor
rolb
jecxz
in
add
js
jmp
shl
or
cmp
xor
leave
stc
jo
fwait
cld
pop
pop
xor
cmp
aaa
adc
xchg
inc
jns
test
mov
jmp
fldenv
sbb
repz
dec
subl
push
sbb
aam
movsb
push
into
adc
psubb
xor
xchg
jb
mov
and
and
push
imul
imul
mov
dec
jmp
and
out
sub
mov
testl
lahf
popa
xlat
mov
jo
jmp
gs
dec
ja
in
clc
cmp
inc
dec
pop
pop
das
mov
push
xorb
sbb
fs
clc
stos
pop
dec
xor
dec
into
xor
sbb
ja
repz
or
scas
pop
mov
test
hlt
adc
ja
lods
xchg
imul
mov
and
mov
and
add
bound
inc
mov
mov
iret
mov
data16
std
fistl
loope
mov
cmc
xchg
mov
inc
ja
fisubrl
clc
testb
inc
dec
repnz
push
nop
push
int3
mov
mov
sbb
stos
mov
hlt
aas
pop
xor
cmp
cmpsl
pop
mov
stc
xor
or
inc
stos
orl
clc
jae
popa
repz
in
cmp
cli
out
fldt
aaa
xor
xchg
cmpsl
nop
daa
fstps
in
fwait
add
sub
insb
loop
dec
addb
ja
or
cmc
push
lahf
pop
sub
mov
dec
mov
test
sbb
mov
dec
jo
insb
mov
push
cmp
or
mov
adc
jnp
frstor
das
or
subl
sub
sbb
cmp
repnz
mov
fimuls
pusha
and
aam
js
adc
xchg
pop
push
mov
nop
mov
shl
outsb
push
jae
pushf
cmp
mov
xor
inc
mov
add
icebp
sbb
dec
or
int3
les
dec
dec
adc
sti
push
xchg
jne
ret
sub
imul
dec
imul
sub
and
or
movsl
pop
inc
inc
push
xchg
mov
inc
shl
jo
cmpb
xchg
imull
xchg
ds
pop
scas
mov
xchg
mov
hlt
or
jns
repz
and
cli
push
les
cmp
inc
outsl
mov
fldl
aaa
cmp
xor
shlb
jmp
fsubs
aas
cld
xor
gs
pop
imulb
add
add
stc
push
icebp
sbbb
mov
dec
ljmp
adc
dec
jne
push
loope
mov
stos
and
mov
mov
sbb
mov
outsb
mov
out
pushf
add
fimull
dec
fcoml
pop
call
mov
cmp
int3
ds
mov
jp
and
adcl
mov
jae
or
push
lret
add
shr
popa
add
xchg
popf
lock
out
mov
xchg
test
das
dec
mov
fsts
or
cmpsl
or
jns
sub
pop
xor
lahf
in
push
jmp
pop
imul
nop
dec
push
pop
dec
aas
adc
aad
je
movsb
push
add
pop
stos
inc
push
cld
fsubs
repz
pop
scas
cli
lock
mov
add
xchg
jb
call
and
in
cmp
sub
les
jnp
js
mov
sub
add
cmp
ljmp
andl
in
pop
jnp
movsb
xor
es
out
dec
inc
xor
sti
rcrl
push
test
pop
jg
push
xlat
jb
sub
add
es
push
out
sub
cmpsl
pop
ret
test
push
cmc
xor
or
cltd
pop
repnz
mov
shl
sub
test
fninit
push
pop
or
fstps
outsl
jp
or
xchg
ljmp
stos
cltd
popf
push
or
lock
mov
test
jne
fldenv
pop
xchg
xor
sahf
arpl
fldt
in
xacquire
cs
inc
mov
sbb
xor
lds
dec
xlat
jp
fsts
xchg
mov
call
inc
shr
fmull
aaa
out
cmp
push
les
mov
aad
fs
dec
push
and
fmuls
xchg
jbe
xchg
xchg
adc
mov
jmp
mov
mov
mov
pop
push
push
push
pushf
insb
fidivs
sub
shlb
lahf
sub
dec
jg
xchg
or
imul
mov
inc
pop
call
int3
andb
cmp
imul
mov
das
pushl
push
std
or
out
sbbl
ffree
xor
mov
push
xor
xchg
movsb
out
scas
repnz
mov
cmp
push
outsb
hlt
push
mulb
jbe
and
lods
das
inc
lea
int
std
dec
jge
clc
fstpt
addb
fldenv
scas
adc
push
rclb
out
cltd
inc
push
imul
imul
lods
mov
pop
pop
test
lods
cld
insl
mov
add
outsb
and
cmpsl
inc
cmp
in
and
jl
lock
cmp
icebp
into
lea
rol
adc
fldt
sahf
push
dec
push
inc
mov
add
sahf
pop
mov
loope
cmp
add
sahf
loopne
push
into
lret
xchg
jbe
ds
jmp
imul
sub
aas
lods
adc
cmp
sbb
subl
jnp
sarb
sarb
loopne
mov
movsb
icebp
sbb
es
sbb
lea
in
push
test
jecxz
js
data16
fiadds
leave
imul
cmp
adcb
test
and
cltd
sub
push
in
fnstenv
dec
imull
xor
dec
ja
mov
into
call
imulb
test
daa
mov
lret
test
lret
push
jmp
push
in
lcall
or
je
imul
jnp
mov
in
mov
mov
cmp
inc
xchg
std
daa
lods
insb
pop
test
in
xor
daa
mov
cwtl
icebp
shlb
int
leave
adc
test
add
pop
testl
loope
jmp
aam
pushl
cmpsl
push
xor
push
mov
or
les
pop
push
pop
xchg
fsubl
or
add
and
and
cltd
in
mov
lea
mov
jge
jl
or
scas
and
into
mov
cld
push
inc
inc
out
ret
dec
sbb
jmp
cs
jge
xchg
popa
dec
xor
btc
mov
jmp
xor
andl
call
sbb
xchg
mov
les
mov
out
out
out
ds
cli
inc
adc
mov
push
mov
aam
jns
xor
sub
cmc
dec
jo
push
loope
gs
mov
cmp
lods
and
repz
mov
ss
mov
fsubrl
rorl
push
cltd
icebp
push
jae
cmpsb
mov
add
sub
sti
cmp
decb
cld
sbb
cmp
enter
inc
in
push
push
or
push
push
pushl
push
fcom
push
xchg
neg
adc
pop
push
push
inc
movsb
mov
sbb
lock
call
dec
imul
mov
adc
int
xchg
or
stos
jbe
pop
and
scas
push
jecxz
pop
push
ljmp
mov
orb
mov
cmp
mov
clc
pop
lahf
sub
jle
xchg
pop
or
out
mov
push
jae
dec
lret
aaa
or
fcomps
das
mov
sbb
sti
adc
sub
inc
call
stos
mov
xchg
xor
adc
repz
jo
sub
jno
mov
js
pop
push
sarl
out
adcl
xchg
roll
test
xor
imul
cmp
daa
jo
inc
imul
adc
inc
dec
adc
in
mov
and
loopne
rcl
loop
orl
sub
pop
mov
cltd
out
mov
or
pop
mov
or
push
pop
inc
lock
push
outsb
scas
mulb
mov
mov
cwtl
fs
outsl
inc
ljmp
clc
aad
push
push
push
sbbb
lods
jmp
jno
stos
xlat
in
imul
leave
mov
adc
loope
aam
gs
lret
loopne
and
mov
lock
adcl
insl
cmp
xor
in
iret
mov
fstp
push
mov
jb
incl
mov
lock
std
outsl
add
out
frstor
cmp
sbb
dec
sbb
repnz
aad
cmp
inc
inc
mov
in
es
iret
test
add
bound
push
ret
xor
into
test
inc
pop
sbb
aaa
es
icebp
clc
pop
mov
xor
into
sub
popf
fstpl
mov
add
jle
ja
sub
inc
xchg
push
push
add
call
mov
loop
leave
shl
pop
adc
push
mov
popa
adc
add
sahf
mov
mov
sub
xor
xchg
dec
mov
test
fstps
rorb
sbb
fisubrs
popa
clc
mov
mov
sub
mov
inc
pop
fisubrs
push
cmp
xor
or
imul
or
fwait
mov
xorl
jno
push
sub
jg
push
mov
push
mov
psubq
xor
push
xchg
and
loop
cmp
jg
xchg
jne
mov
mov
dec
fwait
and
pop
lcall
das
pop
jg
jg
in
sbb
xchg
pop
dec
sub
inc
leave
std
loopne
sub
mov
jp
mov
push
adc
call
xchg
mov
push
adc
mov
test
fcomps
loopne
xchg
ljmp
call
arpl
lret
pop
pop
es
jnp
scas
push
pop
xchg
loope
push
mov
cmp
or
outsb
and
shlb
push
stos
mov
inc
jmp
xchg
jo
xchg
inc
push
xchg
js
jno
push
xchg
or
fdiv
cmp
insb
sub
sbb
enter
inc
aam
orl
mov
sbb
rcrl
loopne
rorb
push
xchg
gs
outsl
scas
lock
into
ss
fs
pop
xor
push
aad
inc
sub
mov
and
dec
sub
sub
mov
in
pop
fdivs
stos
adc
cld
test
lods
xchg
pop
pop
adc
cmp
adc
pop
or
stos
xchg
pop
sbb
and
sub
dec
dec
cld
hlt
lock
xchg
xchg
cmpb
bound
sub
push
adc
test
cli
jno
xchg
femms
inc
inc
cltd
xor
xor
popf
lret
xchg
enter
adc
adc
jge
stos
xchg
sub
xchg
add
jb
mov
inc
sub
call
into
jnp
lods
push
inc
scas
mov
icebp
pop
jg
int3
pop
rorl
pop
pop
sub
push
test
adc
cmp
test
lods
rorb
leave
mov
xor
mov
adc
gs
dec
lret
cmp
inc
sti
and
lret
ficoml
sub
xchg
jns
lret
sub
testb
mov
movsb
push
lret
add
in
jp
push
sbb
pop
pop
sbb
mov
in
movsb
jl
add
dec
mov
add
jecxz
xchg
pop
push
or
movsb
mov
arpl
loope
xor
decl
clc
sub
xlat
test
rorb
push
lds
stc
frndint
and
or
fs
out
popa
movsl
jmp
jae
scas
in
add
xor
push
push
aad
lds
lock
icebp
fcoms
test
rcrb
cmp
push
dec
fistpl
lea
imul
out
sbb
mov
lods
leave
dec
mov
sti
mov
inc
das
pop
or
mov
mov
and
cmp
pop
dec
jns
cmpsb
test
cli
cmp
push
outsb
in
jnp
popf
dec
mov
ljmp
mov
cmp
sub
pusha
xchg
dec
pop
mov
mov
push
dec
push
and
jno
test
sahf
xlat
cld
rclb
sub
push
cmp
and
popfw
ret
add
inc
cli
and
mov
fildl
mov
mov
adc
dec
adc
hlt
jmp
xchg
and
gs
push
scas
mov
imul
ret
lock
xor
clc
sub
out
pop
lock
cmc
test
pop
push
push
mov
divb
es
push
aas
xchg
je
xlat
jns
in
imul
divps
mov
aaa
je
jle
and
out
and
push
push
jns
loop
mov
lret
push
cltd
push
div
in
popa
xor
push
pop
xchg
mov
cmpsb
addr16
push
or
mov
out
mov
adc
mov
filds
dec
mov
mov
sbb
cmpsb
add
cmp
mov
jecxz
push
mov
movsl
jg
inc
outsb
test
sbb
std
pop
push
and
jmp
imul
push
loop
xor
xchg
sub
scas
cmp
pop
sub
in
cmpsb
mov
ljmp
bnd
and
pop
push
fst
push
loop
pop
jne
adc
test
mov
sbb
mov
loopne
cwtl
ret
ret
sub
ss
inc
shll
and
shlb
movsl
in
insl
ficoml
stos
imul
add
in
sbb
ss
scas
mov
loopne
sub
movsb
jmp
sti
addr16
sbb
sarb
jns
xchg
nop
fs
push
pop
add
pop
cmp
lds
enter
and
push
mov
fistl
mov
out
mov
cmp
lods
or
xchg
scas
aam
data16
xchg
mov
stos
jg
sub
cli
mov
jecxz
cltd
push
inc
mov
lock
sbb
dec
data16
test
aas
xchg
mov
xchg
repz
fcomip
stos
stc
sub
fnstcw
or
jg
mov
loope
dec
sbb
movsb
int
scas
cli
add
push
test
ljmp
popl
sub
enter
mov
xchg
sahf
or
jmp
gs
jge
xchg
dec
stos
push
nop
sbb
sbb
lds
push
fwait
inc
mov
sub
imul
pop
inc
pop
adc
xor
cmc
enter
sbb
jp
push
add
outsl
pusha
mov
iret
mov
mov
sarl
mov
loope
cmp
mov
jne
test
scas
add
out
inc
rcrb
or
fcom
jae
sbbb
push
out
mov
icebp
push
mov
insl
imul
adc
out
mov
hlt
push
iret
out
mov
pusha
fidivs
push
daa
imull
pushf
mov
sbb
push
push
sbb
dec
mov
jbe
and
dec
mov
std
into
xor
fwait
inc
xchg
cmp
ja
cmpsb
shrb
lret
or
add
pop
sbb
enter
sub
inc
xor
pusha
jmp
popa
leave
insb
pop
outsb
imul
rcll
xchg
test
inc
notl
sbb
cmp
test
out
daa
imul
outsl
insl
cmpsb
xor
daa
xchg
in
push
xchg
das
inc
jg
xor
sarl
cmpsl
dec
mov
sarb
jp
stos
adc
mov
ret
and
movsl
pop
mov
mov
popa
lret
stos
clc
fucom
hlt
jno
push
mov
adc
pusha
es
js
and
sub
jne
rolb
jo
lock
xchg
pop
push
cmp
imulb
push
rorl
cmp
leave
test
mov
hlt
cmc
jb
movl
popa
mov
out
pop
mov
lcall
dec
fwait
imul
and
ret
add
mov
push
les
stos
or
out
int
dec
rclb
pop
cmovne
cmp
in
iret
jno
stos
or
fistpll
adc
cmp
pop
xchg
jns
mov
mov
ss
rcrb
lods
jae
inc
cmp
mov
xor
or
push
or
cmc
fistpll
jge
aam
ljmp
stc
jle
ja
sub
fwait
mov
mov
sahf
subb
jmp
ljmp
mov
dec
imul
xchg
cmc
mov
repz
push
popa
xor
xchg
ss
dec
add
notl
fmull
ret
fadds
mov
fwait
adc
pop
jecxz
inc
push
cmpsb
push
xchg
in
insl
and
rcrb
in
cmp
mov
and
mov
stos
xor
mov
lds
inc
lret
fwait
add
enter
and
sbb
jb
xlat
cmp
lock
push
sbb
pop
jg
ss
lods
xorb
in
jmp
push
push
aam
mov
and
je
xlat
insl
xor
or
jno
mov
sub
push
or
mov
pop
pop
cmp
add
sub
push
js
pop
xchg
lret
repnz
sbb
push
ja
sbb
sbb
jne
pop
iret
jl
cmp
fcoms
mov
pop
add
hlt
jl
fs
lret
lods
fwait
lock
shrl
xchg
pop
hlt
add
or
cmp
mov
xor
call
pushl
jae
scas
loope
sub
jbe
insl
insb
imul
imul
or
aam
sbb
mov
adc
es
loopne
fwait
inc
cltd
xor
ret
pop
out
dec
jne
or
test
mov
mov
push
or
roll
js,pn
add
inc
jl
call
std
cmpsl
loopnew
xchg
sarb
pop
adc
mov
mov
subb
cld
jo
xlat
mov
psubq
mov
loope
push
and
push
push
mov
pop
sub
push
adc
test
sarb
jmp
pop
cwtl
jae
clc
sbb
arpl
xor
push
stos
and
adc
cmc
insl
arpl
shl
int
or
xchg
jmp
pop
sub
add
enter
fldt
push
aad
cmp
ja
repz
daa
cmpsb
mov
pop
stos
mov
jmp
mov
jecxz
xorl
push
mov
push
fs
dec
sbb
mov
push
add
xchg
rorl
cmp
adc
adc
out
add
adc
jp
push
shll
inc
xchg
std
fsts
jbe
mov
push
mov
jns,pt
inc
and
insb
sbb
mov
push
push
mov
inc
mov
ss
cli
push
clc
mov
ljmp
daa
js
clc
lret
or
int3
data16
mov
lods
or
pop
pop
dec
push
iret
ja
imull
and
das
push
xchg
add
je
or
inc
adc
xchg
push
loop
cmp
push
cltd
hlt
pop
bnd
dec
fcmovu
aam
xor
mov
inc
iret
and
mov
mov
roll
scas
mov
ret
push
cli
insl
jb
fidivrs
test
jne
cld
jge
fimull
push
or
and
push
lods
daa
xor
xchg
xorl
push
sub
dec
pop
leave
hlt
xor
push
in
dec
icebp
or
sbb
mov
add
aaa
push
data16
loop
cli
xchg
rcr
adc
xchg
stos
movsb
xchg
xor
lods
movsb
push
pop
xchg
movsb
cmp
test
ds
int3
fs
add
jl
into
and
icebp
clc
fdivs
or
or
or
push
mov
sbb
pop
ret
stc
int3
jnp
movsb
popf
popf
or
loop
cld
xor
inc
shl
and
movsl
inc
push
mov
jnp
std
daa
aad
insb
and
mov
int
adc
fiaddl
hlt
test
mov
fcoms
or
out
cmp
pop
sbb
xchg
daa
mov
test
pop
cli
mov
lock
jle
jle
imul
out
inc
sbb
pop
xor
xor
add
xor
mov
jb
adc
adc
sub
test
pop
sub
push
sbb
sbb
jo
and
stos
dec
ret
mov
add
int3
or
fistps
les
imul
pop
lea
dec
jae
loopne
ja
loope
addb
push
imul
push
mov
ja
adc
into
dec
in
nop
adc
das
sbb
xchg
sub
adc
xchg
pop
adc
jne
sbb
or
mov
andb
xchg
jne
cs
cltd
xor
pop
shrb
mov
jbe
cs
imul
mov
std
jecxz
lret
ljmp
jbe
push
aaa
xchg
mov
dec
mov
pop
mov
iret
lods
bound
push
mov
out
stc
fcmovnu
aaa
mov
inc
outsb
mov
shll
pop
pop
test
scas
mov
lahf
addr16
mov
adc
insl
and
mov
and
or
repnz
xor
mov
xchg
pop
orb
push
xchg
addr16
aas
daa
jb
mov
xor
scas
filds
pop
daa
sbb
pop
add
mov
fildl
mov
or
adc
inc
repz
repz
mov
out
sbb
sbbb
movsb
cltd
call
xor
or
stc
out
jmp
xor
lea
in
push
mov
add
lods
clc
sbb
xchg
mov
jo
loopne
push
shl
adc
and
lods
mov
bound
cmp
mov
add
cmc
jg
es
mov
imul
pop
in
sub
jb
xor
daa
shrl
fnsave
movsb
fidivl
cmpsl
mov
mov
lods
push
fimull
ljmp
sub
dec
mov
or
mov
add
inc
mov
movsl
hlt
out
inc
push
aas
repz
popf
in
dec
xlat
dec
addr16
in
fwait
xchg
inc
sub
fucomip
stos
and
adc
mov
jno
inc
pop
jne
test
aad
pop
jmp
les
dec
sub
cld
pminub
out
adc
cs
mov
call
jmp
adc
insl
arpl
je
push
push
ret
xor
xchg
mov
les
bound
loope
scas
xchg
pop
xor
flds
jae
or
in
mov
mov
test
sahf
jo
cmp
and
adc
or
rcll
mov
into
inc
xchg
xchg
paddw
xor
pop
pop
jnp
cld
lret
and
imul
ljmp
cs
sti
sbb
add
sbb
push
stos
scas
xchg
fwait
mov
push
fldcw
outsl
pop
mov
and
or
pop
lods
inc
fistps
xlat
jo
incb
or
fcoml
cwtl
ret
fists
mov
out
sbb
sub
in
ljmp
sub
movsl
mov
test
fwait
push
fsub
jp
mov
iret
mov
pop
mov
fcomps
stos
mov
sti
push
dec
mov
sti
movsb
fldl2t
pusha
subb
push
or
inc
mov
mov
dec
dec
pusha
rcl
and
fst
dec
fidivrl
stos
mov
loop
lahf
push
jo
xor
inc
inc
push
xor
jmp
dec
aam
js
sbb
clc
mov
jbe
jp
jg
bound
jb
dec
add
sbbl
test
xor
aaa
in
adc
push
scas
aad
dec
test
ds
std
and
mov
loopne
scas
les
cltd
call
nop
outsl
pushf
mov
xchg
lods
or
dec
push
das
push
xlat
dec
in
movsb
xchg
cltd
popa
mov
and
mov
xchg
shl
shrb
insl
or
movsb
cltd
add
push
sbb
push
aaa
mov
movsb
repz
cmp
inc
mov
in
fmull
das
jnp
stos
mov
setp
jbe
scas
das
mov
fsubrs
xchg
shrb
pop
hlt
xchg
mov
sub
mull
ja
sub
pop
and
or
lods
std
mov
inc
or
jbe
push
mov
xlat
jle
mov
jo
xor
cmp
pop
lods
xchg
mov
adc
mov
ret
xchg
loope
notb
adcb
or
mov
sbb
scas
pop
mov
rorb
into
mov
out
adc
push
lea
out
and
mov
lods
lods
jle
andb
push
rclb
add
fdivs
pop
push
dec
sahf
lock
sbb
adc
mov
pop
sub
fbstp
stos
mov
mov
cmp
jns
push
xor
mov
sbb
ja
movsl
push
jbe
icebp
inc
incb
sbb
stos
out
fsubl
lods
mov
rcrl
push
xchg
dec
push
jp
mov
call
out
repnz
inc
jle
fs
pusha
mov
pshufw
stos
lock
divb
jmp
lcall
imul
inc
push
aam
daa
jo
lods
je
sbb
movsl
jp
xor
add
ret
xchg
add
dec
aaa
flds
pop
jae
jae
push
repnz
loopne
cmpb
dec
xchg
jnp
cmp
subl
mov
cld
pop
sbb
enter
xchg
jecxz
pop
imul
dec
xor
repz
or
or
daa
divb
testl
jnp
andl
mov
jno
subb
jle
lds
mov
insb
js
dec
or
sbb
dec
arpl
cmp
fldl
out
push
jle
shlb
add
inc
aaa
push
cmc
xchg
outsl
decb
dec
sbb
insl
xchg
add
sub
js
stos
pushf
stos
pusha
lds
mov
sbb
pop
jle
and
sub
xchg
dec
aad
xor
jp
popf
mov
lret
or
out
add
xchg
ret
int3
mov
mov
js
pmulhuw
mov
mov
fisttps
aaa
add
sbbl
xchg
iret
fstl
cmpsb
mov
inc
cld
jo
pop
movlhps
cmp
mov
clc
xor
dec
xor
shl
xor
ljmp
xor
sbb
or
pop
sbb
test
cwtl
mov
pop
xor
mov
aas
or
mov
insb
pop
xor
mov
movsl
dec
mov
mov
adc
pop
outsb
fs
dec
shll
pop
dec
jae
bound
pop
sti
mov
adc
jg
mov
lcall
jo
dec
jle
in
sub
mov
adc
iret
sbbl
lcall
fsubp
int
loopne
shrl
jp
mov
je
pop
cld
dec
xor
lret
gs
jmp
insb
scas
push
test
mov
mov
and
faddl
fnstenv
int
ret
aad
fwait
lahf
sbb
cmpsb
test
push
aaa
pop
into
out
outsl
inc
push
xchg
lea
and
jge
add
lods
add
std
add
or
inc
jno
leave
cld
out
je
inc
iret
and
scas
fldcw
mov
jle
add
mov
push
rclb
dec
mov
ud1
xchg
rcrb
xchg
int
and
xor
cmp
add
sbb
repnz
fwait
nop
pop
insb
icebp
dec
aad
dec
pop
mov
rcrb
out
ljmp
dec
sahf
insb
lret
fsubrl
jmp
xchg
inc
or
leave
push
psubsb
pop
mov
sbb
sub
imul
repz
mov
int
or
enter
lods
inc
add
jb
or
ss
sub
bound
mov
mov
cmp
pop
mov
ret
mov
into
sub
out
lret
push
sub
cld
jecxz
icebp
insb
repnz
repnz
scas
push
sbb
test
jp
sub
xor
dec
mov
test
cli
and
sub
orb
addr16
and
mov
pop
mov
fs
movsb
sub
out
in
fsubrl
movsl
shlb
gs
arpl
outsb
xchg
popa
rcrb
dec
xor
cmp
or
data16
mov
cmp
imul
jo
arpl
ja
rolb
pop
sub
adc
mov
std
push
jnp
jp
add
cmp
or
add
scas
sbb
fiadds
mov
inc
shl
pushf
pop
push
mov
aaa
xchg
ja
shll
xor
push
icebp
pop
lods
mov
out
sub
add
mov
int
fsubs
xorb
jle
idivb
lret
orl
shll
inc
adc
sti
in
xchg
jae
inc
mov
mov
cmpsl
nop
jo
fcmovnbe
sub
push
push
inc
adc
dec
cmc
data16
and
gs
js
xchg
js
repnz
ss
repz
mov
xchg
mov
enter
add
adc
js
out
xchg
lods
scas
add
pop
xchg
cmp
mov
jge
cmp
adc
add
ja
cmp
xor
jle
jl
psrlq
and
add
pop
pop
test
repz
iret
add
push
mov
adc
pop
lcall
call
cmp
mov
aaa
push
pop
jecxz
daa
rorb
int3
cmpsl
mov
je
test
jno
aaa
pop
dec
jp
inc
mov
bound
sub
loope
or
mov
mov
jae
ret
pop
pusha
dec
pop
std
sti
push
xchg
mov
aas
stos
aaa
push
push
int
loop
mov
subl
mov
adc
stos
imul
sbb
xchg
sahf
sbb
xor
xchg
call
int3
es
lock
sub
outsl
sbb
jge
movsb
fwait
sti
bound
dec
mov
scas
cmp
add
out
nopl
push
push
dec
jle
fdivrl
push
mov
inc
int
into
fisttpl
mov
repz
pop
sbb
js
fucom
add
push
inc
inc
xlat
adc
and
stos
int3
inc
daa
inc
pushf
stc
xchg
xchg
out
js
add
std
push
mov
movsb
push
push
sub
inc
pop
or
fsubl
and
mov
jmp
xchg
out
ja
jecxz
jo
push
mov
mov
je
call
cwtl
out
stos
ja
test
inc
inc
xlat
mov
pop
call
stos
sbb
es
inc
lcall
xchg
testl
jecxz
fnstenv
fs
xor
inc
hlt
inc
pop
ds
shll
xchg
mov
xor
sub
mov
xor
aas
pop
lods
jle
push
fcmovu
andb
mov
stos
xor
xor
nop
pusha
xorb
movsl
test
mov
adc
ljmp
pop
lock
mov
std
mov
mov
jg
push
std
inc
ror
pop
xor
adc
and
cmpsb
mov
adc
push
rorl
dec
dec
iret
inc
sti
std
dec
dec
push
cmp
mov
ss
mov
bound
out
mov
sbb
test
lock
mov
push
adc
int3
mov
aas
mov
scas
xchg
xor
fstl
test
pop
aad
cmp
icebp
scas
iret
loopne
push
in
ret
inc
outsb
scas
push
mov
out
subb
call
ss
cli
outsl
push
stos
outsb
push
fidivl
push
movsl
inc
lds
xor
fidivs
mov
jp
jp
jb
sub
mov
add
adc
test
push
pop
cmp
and
sbb
addr16
xor
or
xchg
ret
out
outsb
pop
and
xchg
in
sub
test
mov
std
mov
in
and
and
mov
add
xchg
pop
popa
inc
ja
mov
or
inc
sub
adc
mov
daa
xlat
adc
push
clc
imulb
jmp
popf
jp
js
hlt
popf
lds
sti
lods
lea
jl
push
lods
fdivrp
sbb
mov
rorb
aad
cwtl
xchg
fcmovnb
imul
cmp
dec
cs
push
mov
sub
cmp
shll
fdivs
or
aam
xor
mov
sub
fcmovb
shrb
push
loop
push
mov
or
clc
aam
mov
in
ss
add
lcall
pushf
fsubl
mov
and
jnp
xchg
aam
sbb
pop
pop
hlt
jns
jno
push
loope
or
or
or
test
sub
xor
push
fisttpl
xchg
repnz
xor
cmpsl
into
mov
fwait
mov
or
daa
jae
cli
mov
adc
adc
lods
mov
nop
lock
mov
lahf
jae
fwait
loop
adc
test
xor
arpl
dec
mov
add
das
cmpsb
mov
inc
dec
add
push
iret
lret
inc
inc
ret
out
aad
aam
xchg
js
aas
mov
mov
fisubrl
enter
push
shll
addl
dec
negl
mov
push
repz
imul
inc
std
ja
out
outsl
mov
push
mov
sub
inc
cmp
aaa
scas
fadds
add
push
add
and
mov
inc
add
sub
fdivrs
sub
cltd
dec
cltd
pushf
push
pop
sub
jae
push
push
add
add
in
add
loope
add
test
sahf
dec
in
lods
add
push
mov
cmp
test
xchg
jb
mov
int3
sub
and
orl
mov
popa
int
push
test
mov
xlat
push
push
jo
dec
mov
mov
rcrb
mov
mov
xor
repnz
popf
lods
jnp
inc
and
mov
cmpb
jne
popf
ret
add
pop
or
dec
push
sbb
cmp
rorl
sub
xlat
jecxz
out
jle
or
adcl
call
loop
mov
repnz
aas
pushf
repnz
cmp
clc
stos
out
dec
mov
mul
mov
adc
mull
out
push
pop
push
cmp
cmp
add
pop
fsubrs
lds
loope
mov
push
add
xchg
cmc
fcompl
inc
imul
movsl
push
pop
inc
xchg
sbb
xchg
mov
xorb
sti
lcall
aad
pop
outsb
fwait
popa
pop
xor
jb
fbstp
mov
xchg
aaa
cmp
or
cmpsl
sti
loop
psrlw
add
mov
lret
push
sub
or
xchg
jmp
in
bound
fidivl
add
in
jbe
cmpsb
jbe
jge
movsl
ret
pop
lcall
sbb
mov
and
mov
nop
ljmp
mov
les
and
enter
xchg
repz
sub
clc
pop
jb
jo
push
jbe
jl
fidivl
dec
add
cmp
pushl
lods
js
mov
into
test
mov
shr
jnp
pop
ljmp
cld
rcll
popf
sbb
imul
ret
xchg
mov
and
or
or
daa
incl
or
fwait
adc
imul
mov
fsub
out
mov
fldt
ljmp
std
daa
adc
push
rcll
xor
add
and
jb
std
jmp
mov
lret
jae
lods
dec
fwait
add
push
fsubrl
in
add
pop
sbb
dec
push
insb
enter
or
pop
pop
xchg
dec
dec
pop
imul
mov
enter
out
subb
repnz
ficoms
pop
popa
add
lea
and
inc
jl
adc
push
rorl
add
pop
mov
and
pop
in
fldt
add
std
push
sbb
inc
cmp
ret
add
pop
and
xchg
aad
lret
and
outsb
int
mov
das
jg
inc
push
iret
sbb
mov
jle
or
imull
scas
mov
add
sbb
je
inc
jmp
into
mov
shrd
pop
std
inc
std
push
insb
mov
cmpsl
repnz
cmp
dec
cli
lods
sub
fnstsw
lahf
sbb
scas
push
push
insl
push
in
arpl
or
loop
dec
cmc
jl
les
mov
inc
cmp
add
xchg
adc
jne
subb
imul
lcall
inc
inc
jl
imull
mov
daa
std
iret
test
xchg
out
stos
pop
jb
pop
pop
xchg
aaa
sbb
int
jecxz
daa
lahf
popa
and
add
rclb
pop
add
xor
mull
adc
jbe
js
lods
xchg
imul
test
cltd
pop
mov
mov
subl
adc
test
sysexit
andb
orl
inc
inc
xchg
stos
mov
test
call
test
pop
xor
mov
and
cmp
add
aas
xchg
enter
mov
dec
hlt
jmp
loop
cmpsb
stos
jbe
fnstcw
jl
push
xchg
cmpsb
dec
nop
loop
ret
lahf
cmc
jmp
xchg
shr
fnstenv
pop
add
imul
lods
filds
xor
mov
mov
dec
addl
dec
jno
lock
pop
mov
sub
sbb
or
inc
lea
cmp
xchg
mov
and
insl
dec
and
orl
jmp
gs
sbbl
outsl
sub
xor
stos
jmp
adc
xchg
fistpl
js
jo
and
lock
mov
out
cs
jbe
push
test
dec
jmp
pop
lds
mov
cltd
add
lret
push
sbb
movsb
pop
mov
mov
or
imul
scas
fcompl
insl
sbb
stos
addr16
jp
cld
fidivl
or
in
inc
xchg
and
mov
mov
mov
xor
sbbl
mov
int3
stos
sbb
rol
mov
inc
mov
pop
pusha
iret
fists
ljmp
jge
or
pop
mov
add
mov
add
pop
daa
popf
int
cmp
and
outsb
adc
inc
insl
loopne
inc
pop
outsb
test
daa
sbb
lret
push
and
mov
ljmp
dec
cmp
inc
dec
lods
in
dec
inc
cwtl
test
fcoml
jle
iret
lea
out
rcrb
stc
xchg
xchg
mov
popl
outsb
fcoms
xchg
test
add
mov
cmpsl
call
and
sub
sbb
xor
subb
xchg
ljmp
movsb
jl
or
inc
gs
lcall
mov
lcall
add
fdivl
and
add
aam
dec
push
or
sub
daa
pushf
movsb
sbb
jl
arpl
shr
or
or
pop
cwtl
nop
adc
adc
xor
fdivp
xor
test
mov
jge
dec
arpl
sub
inc
stos
aas
sahf
aas
xchg
jle
icebp
dec
xchg
and
xlat
sub
push
pop
mov
or
arpl
xlat
outsb
cmc
mov
xchg
jae
mov
enter
cld
jne
std
iret
iret
sub
adc
addr16
push
rcrl
mov
das
and
pop
dec
jnp
fwait
adcb
jnp
je
imul
js
ret
mov
push
mov
dec
js
adc
cmp
or
inc
mov
repz
fcmovu
sub
stos
cmpsl
movsl
out
fwait
mov
dec
dec
jmp
aam
lods
mov
sahf
mov
jns
arpl
cmp
cmp
jnp
cmovb
orb
inc
and
push
and
and
ret
repz
mov
test
addb
repnz
ss
int3
xor
out
das
inc
jnp
cltd
cld
or
dec
test
jo
fchs
mov
in
jl
xor
mov
enter
lods
insb
xchg
cmpsb
sahf
testb
scas
sbb
mov
push
push
aaa
ret
add
shll
or
pop
sbb
sub
cltd
aad
andl
sub
add
sub
fisttps
lock
adc
cmpsb
adc
cmpsb
jg
lcall
lahf
test
aad
xchg
mov
pop
je
dec
mov
push
xor
sub
sbb
addr16
mov
adc
aam
adc
mov
imul
fstpt
inc
push
mov
adc
fistl
lahf
mov
loop
rcl
cmpsl
cmove
push
testb
ss
pop
xchg
mov
or
and
pop
push
pop
inc
mov
cmp
ret
sbb
adc
xchg
inc
test
or
mov
dec
jae
pop
in
aad
mov
pop
sbb
es
cmp
pop
xchg
xor
mov
js
xchg
insl
rcll
mov
idivl
clc
nop
and
xchg
jae
mov
daa
mov
jns
mov
cmpsl
add
out
mov
movsl
in
sbb
addb
subb
bound
fcoml
adc
scas
dec
ja
int3
sub
idivb
repnz
jecxz
lods
jl
dec
sub
sub
xchg
nop
inc
daa
ret
je
mov
fs
ja
rcll
mov
mov
icebp
ljmp
jae
pushf
sub
cmp
into
sbbb
sbb
cld
cwtl
jo
jmp
int3
je
pop
fs
dec
jmp
into
sti
xorb
inc
call
sub
cmp
aam
das
push
mov
sbb
jp
jae
sarb
call
jno
imul
dec
cmp
jle
lea
icebp
add
mov
pop
mov
or
movsb
inc
fcompl
mov
cmp
pop
je
loopne
int
rclb
clc
repz
or
rcrb
pop
mov
adc
les
insb
popa
jecxz
add
les
imul
out
dec
in
es
jns
pop
cmp
add
das
or
adc
xchg
mov
xor
inc
pop
lock
dec
sbb
mov
add
xor
push
add
lret
icebp
dec
insb
outsl
stos
pop
mov
pushf
cmp
test
jp
push
sbb
out
sbb
cmpsb
mov
inc
in
and
stos
jl
fsubrs
in
dec
push
fiaddl
popa
cmpsb
xchg
popf
icebp
pop
ss
out
and
xchg
and
mov
add
in
jp
imul
dec
xchg
mov
in
stos
lret
mov
add
mov
push
and
or
ret
test
out
jbe
mov
daa
lret
xchg
gs
aas
jmpw
hlt
shlb
mov
push
mov
xlat
push
cmp
setl
insb
bound
and
in
fisubrs
lahf
dec
xorl
scas
sarb
add
jo
push
inc
pushf
je
stc
imul
push
pop
inc
mov
lock
in
jo
mov
outsb
cmp
fs
cmp
adc
and
sti
shll
mov
xlat
and
lret
ret
cs
aad
fdivl
and
lahf
xchg
or
loope
cmpsb
mov
inc
xchg
xchg
add
fwait
push
xchg
jp
xchg
inc
xlat
ds
xchg
std
xor
sub
add
test
or
or
lret
addr16
xor
insb
inc
repnz
xchg
ss
push
or
push
lahf
mov
pop
lods
push
inc
cmp
lods
jb
pop
ds
inc
xlat
pop
lds
push
insl
cmpsb
add
or
sbbb
push
adc
lret
pusha
push
add
adc
pop
mov
dec
push
sahf
mov
pop
stos
es
sub
cmp
xchg
pop
rclb
jge
in
jbe
loop
pusha
xchg
mov
jmp
int3
cmp
test
inc
inc
cmp
push
and
lods
lret
in
out
lods
aam
inc
pop
and
mov
ja
movsb
push
add
dec
mov
jae
aad
cld
or
inc
outsb
add
andl
or
inc
lock
mov
mov
xchg
mov
pop
mov
sbb
adcl
mov
xchg
pop
fs
mov
mov
jnp
dec
xor
mov
andb
xor
adc
jne
pop
fistl
xor
inc
stos
pop
test
lods
int
dec
add
into
enter
xor
xor
or
fstl
call
data16
loop
std
and
orw
dec
bound
cmp
cmp
leave
xor
mov
in
mov
sub
jns
mov
js
push
in
dec
jecxz
and
sysexit
cs
cwtl
outsl
or
adc
aaa
sub
sub
xor
mov
mov
cmp
fnstsw
popa
xor
mov
jmp
or
pushf
cs
imul
mov
rcrl
fwait
and
into
stc
mov
pop
popa
test
push
sbb
dec
cli
mov
shld
lea
sahf
push
jge
sbb
lahf
mov
testl
jnp
cmp
in
insb
pop
bound
out
iret
fs
stc
test
mov
dec
mov
out
mov
into
mov
jo
cwtl
push
dec
imul
fildl
jns
mov
jnp
insl
scas
movsb
cs
call
xchg
push
movsl
rep
lods
icebp
cmp
mov
pop
mov
xchg
mov
xchg
es
push
push
popa
hlt
cmp
scas
dec
insl
xchg
pop
add
xchg
ljmp
sti
jg
xchg
lret
enter
cmc
push
lods
dec
mov
lock
rcr
mov
mov
or
pop
mov
cmp
lret
or
in
repz
movsl
data16
xchg
push
mov
and
pop
fdivrl
inc
insb
or
push
jmp
inc
stc
mov
lret
imul
push
push
int3
lods
aaa
test
and
sub
or
nop
stc
or
popf
cwtl
adc
sbb
lods
xchg
and
mov
cmpsb
inc
cmpsl
adc
test
push
xchg
outsl
in
sti
test
xchg
insb
call
mov
and
lods
jae
fisubs
mov
outsl
pop
fstps
call
dec
lahf
mov
dec
mov
mov
mov
fisttpll
inc
add
nop
test
hlt
cmp
pop
daa
ror
sub
pop
lods
push
jmp
cmp
mov
push
xchg
cmpsl
jbe
sub
hlt
gs
aad
insl
addr16
pop
xchg
lds
inc
jns
shl
xchg
mov
sub
cli
int3
test
mov
loopne
or
popf
stos
enter
shl
push
jp
push
lods
lods
mov
arpl
add
fwait
push
outsl
sbb
stc
inc
cmp
cmpsb
fldl2t
aas
mov
xor
pop
inc
ficompl
sub
lahf
imul
sub
push
cmp
mov
jp
pop
mov
xchg
cmpsb
lds
inc
cmp
and
and
hlt
mov
jle
mov
dec
push
mov
add
lret
pop
int3
sub
dec
pop
psllq
mov
pusha
lcall
js
pop
cmpsl
or
pop
fnstcw
push
aas
xchg
or
cmpsl
jecxz
mov
js
movsb
mov
dec
in
loopne
out
sbb
sbb
pop
ljmp
aad
cmp
hlt
fwait
sub
out
int
lods
aam
shlb
sub
bound
lahf
test
cwtl
adc
nop
and
mov
push
xor
lea
mov
jg
arpl
and
aaa
adc
push
push
xor
test
rorb
mov
cmp
test
in
pop
test
mov
mov
lds
adc
scas
jmp
lock
jno
inc
mov
jbe
or
imul
sbb
stos
cmp
iret
sahf
fiadds
ljmp
int
mov
add
sub
ret
push
sub
sub
icebp
popf
into
js
rorl
aas
test
mov
dec
cmc
cmpsl
xor
sub
push
mov
add
xchg
lret
push
inc
sbb
shlb
divl
push
mov
lcall
imulb
pop
push
adc
or
xchg
test
jg
incl
dec
mov
jg
leave
xor
jecxz
pop
push
test
sbb
push
sbb
adc
ficompl
xor
mov
jo
xchg
outsl
orb
fldenv
out
sti
subb
cs
mov
inc
or
pop
scas
dec
bound
subl
test
aaa
or
jmp
loop
cmp
mov
cld
cmpsl
lret
fs
xchg
stc
xor
adc
jle
ret
fldcw
mov
jmp
std
inc
loop
mov
mov
cs
int3
xchg
fldt
pop
daa
jne
mov
jp
pop
adcb
shr
jl
dec
movsl
sub
mov
xor
jge
push
sbb
and
push
inc
or
jg
sub
and
outsb
dec
and
add
jp
or
sahf
stos
icebp
adc
push
popf
fisttps
fsts
jl
dec
cmp
insb
ficompl
popa
fistps
cli
sahf
mov
punpckhwd
mov
sahf
fcomp
das
shrb
in
sbb
cmc
lds
loopne
fisttpl
xchg
jno
imul
mov
sub
dec
scas
test
and
rorb
insb
and
jae
int
fadds
xor
dec
scas
push
ja
int3
std
hlt
push
sbb
and
sbb
dec
and
adc
mov
inc
dec
inc
ret
popf
es
inc
test
and
movsb
vucomisd
in
mov
adc
repz
push
xchg
mov
mov
fsubrl
jmp
ss
ffreep
push
jno
push
cmp
out
cmp
push
daa
icebp
mov
in
ldmxcsr
jae
mov
mov
cmp
lahf
fisubl
out
dec
push
fcmovne
gs
loope
mov
sub
push
xor
inc
mov
push
mov
decb
in
arpl
add
xorl
cs
arpl
test
fdivrl
cmp
pop
ja
andl
das
adcl
cs
dec
jle
lds
xor
in
movsb
cld
sbb
std
lcall
or
les
fcmovne
adc
enter
ret
adc
xchg
lahf
jne
fisttpll
repnz
in
jns
cmp
mov
sub
pop
enter
sahf
inc
in
sub
fidivl
out
fs
fstp
mov
stos
lds
cs
cltd
push
rcrl
sahf
pop
stos
dec
pusha
aam
or
movsl
sub
nop
movsb
enter
clc
or
ljmp
mov
fwait
addb
dec
arpl
xor
aam
arpl
add
or
lock
fdivrs
leave
xor
pop
jb
sub
jbe
dec
mov
jno
jb
push
jecxz
inc
in
xor
pop
mov
nop
fisubs
xchg
dec
or
in
sub
dec
pusha
adc
rol
decb
and
movsl
sbb
push
shll
movsl
sbb
mov
addr16
rcl
pop
scas
inc
mov
test
in
push
aad
fidivs
adc
negl
push
outsl
dec
jne
aas
jo
sbb
and
mov
in
dec
mov
outsb
rclb
arpl
out
je
sbb
and
mov
sub
pushl
dec
pushf
xor
mov
lock
mov
jnp
sub
sahf
add
mov
movsl
sahf
jge
sub
mov
int
mov
pop
shll
adc
jb
xor
dec
test
jns
call
adc
movsl
pop
or
xchg
scas
jne
mov
lret
sbb
inc
ljmp
pop
js
sub
sar
dec
stc
or
repz
mov
xlat
ret
scas
adc
imul
push
sub
push
and
mov
fwait
push
pop
sbb
or
sub
or
mov
mov
daa
and
out
xchg
lds
or
scas
mov
test
ror
fidivl
in
sbb
xor
out
sbb
les
jae
fwait
lea
les
cld
dec
dec
cmpsb
test
xor
sahf
mov
outsb
mov
push
mov
flds
aas
std
cmc
push
mov
xchg
and
sbb
ret
aam
fstl
mov
cwtl
sbb
sub
and
adc
xchg
imul
ljmp
nop
aad
mov
push
dec
ja
int
aas
sbb
leave
int
lret
lds
xchg
in
jmp
or
pop
mov
shl
gs
insb
in
cwtl
sar
jle
jmp
xor
mov
out
lahf
nop
js
adc
fldenv
je
jecxz
repnz
jmp
repnz
mulb
test
cmp
jmp
js
inc
test
and
pusha
inc
jbe
lret
mov
jno
jnp
fwait
mov
test
sbb
xchg
mov
add
js
inc
or
adcl
cmp
jp
xor
push
iret
lods
in
std
stos
push
cld
cmpsb
xchg
sbb
add
insl
dec
cmc
sahf
es
psadbw
cltd
and
fistpll
adc
pop
lahf
mov
inc
dec
jne
aam
cwtl
imul
xchg
mov
gs
jae
adc
lcall
pop
and
and
bound
repz
popa
iret
mov
popf
inc
aaa
cmpsb
lods
out
push
lcall
out
push
pop
add
jle
jns
mov
pop
shll
clc
dec
pop
adc
dec
pop
cld
scas
clc
pop
fwait
pop
push
insb
stos
mov
add
jg
aam
fdivrs
push
sbb
push
insb
push
rcrb
imul
mov
je
pop
jnp
mov
test
xchg
adc
sbb
nop
repz
push
add
inc
xor
inc
pop
hlt
icebp
cmp
and
or
leave
mov
insb
or
jg
lcall
fwait
repz
mov
mov
js
cmc
push
inc
and
adc
idiv
lea
pop
and
int3
or
das
or
notl
xor
cmpsb
dec
shlb
pushl
scas
jns
xor
xor
cwtl
rcrb
mov
or
jg
out
lock
jns
clc
mov
mov
cmp
pop
sbbb
mov
mov
lcall
repnz
ficoml
pop
call
xor
inc
mov
insl
fimull
outsb
pop
shl
push
xchg
scas
js
pop
and
shrb
movsl
shlb
mov
stos
rolb
adc
iret
xor
sub
test
lock
hlt
pop
bound
imul
andb
pop
or
movsl
sub
pop
lahf
xlat
jle
shlb
ret
xorb
scas
repz
cmp
inc
pmulhw
mov
mov
out
mov
xchg
or
push
std
sti
mov
les
dec
test
cmc
sbb
xchg
mov
push
data16
push
popf
fisubrl
sub
stos
loope
cmp
xlat
pop
call
cld
cli
dec
pop
mov
add
fdivrs
mov
mov
pop
mov
pop
adc
and
xchg
cmpsb
push
sti
dec
sub
stos
dec
sub
lea
movsb
daa
aas
or
fnstenv
mov
shrl
inc
jmp
lret
and
setne
cmp
outsl
or
cmp
popa
loopne
clc
lret
lods
mov
jae
je
mov
push
js
jg
ret
sti
cmp
movsl
dec
popf
movsb
inc
inc
lea
xchg
ret
inc
push
mov
mov
in
jg
adc
pop
adc
jb
ffree
aad
ret
std
dec
mov
mov
sub
xchg
cmpsl
push
or
inc
gs
loop
mov
or
les
or
es
cmp
dec
mov
enter
jecxz
fwait
ret
cmpsb
xchg
das
cmp
pop
mov
xchg
movsb
sub
rorl
dec
idivb
xlat
xor
std
stos
jge
lea
or
mov
jbe
sub
scas
push
fdivs
jle
dec
arpl
lods
cld
dec
add
inc
pop
andb
mov
cmp
shrl
and
in
lds
repz
mov
xchg
je
pop
mov
jle
in
sub
push
ret
push
mov
sub
sahf
sub
and
xchg
cmp
push
add
push
lea
aaa
cmp
testb
pop
sub
push
push
sbb
add
test
adc
inc
subl
and
std
xor
lahf
out
das
cmp
mov
stos
dec
ja
mov
sti
test
iret
in
rcrl
pop
leave
and
cmp
cmp
popf
ret
mov
ret
daa
dec
dec
fldcw
lcall
push
or
mov
clc
push
xchg
dec
push
dec
and
test
mov
push
lods
fdivl
outsl
repz
jns
mov
jb
mov
jae
inc
xchg
imul
leave
mov
jle
mov
adc
sarb
pop
xchg
dec
dec
and
stos
ficoms
into
add
ror
dec
jle
mov
pop
lock
test
in
pushl
mov
jnp
cmc
scas
push
jo
push
push
cmpsb
mov
mov
xor
je
push
imul
sbb
cwtl
addr16
push
and
jp
out
es
add
pop
xor
pop
jge
dec
cmp
aaa
cmc
adc
dec
test
sub
out
or
aas
or
push
mov
mov
jl
lods
inc
cmc
arpl
test
add
fdivrs
push
and
sub
add
inc
or
movb
lods
jge
dec
pop
data16
std
push
lods
mov
xor
fwait
loopne
int
lock
jbe
mov
stos
out
mov
movsl
pop
cmp
loope
mov
inc
mov
pop
or
int
jmp
ja
xchg
aaa
cmp
push
cwtl
lcall
aaa
and
sarl
jns
loop
and
add
mov
cmp
je
jmp
pop
and
rcrl
xor
push
sbb
or
or
out
mov
rcrl
lahf
outsl
dec
outsl
test
xchg
push
mov
leave
jge
das
xchg
fs
lock
add
jne
addr16
int3
mov
adc
sub
loopne
sbb
cltd
test
scas
sbb
xlat
js
mov
xor
fnstsw
cmp
push
into
sub
mov
sbb
mov
hlt
mov
repz
jge
jmp
fisttpl
hlt
push
xchg
and
or
push
repnz
andb
sub
or
mov
push
fs
pop
jb
xchg
jns
jne
mov
rol
cmp
movl
aad
lret
mov
pop
sbb
ret
adc
inc
movsl
inc
rcr
mov
mov
dec
inc
js
pusha
or
dec
sub
pop
nop
sbb
cli
and
test
sub
stc
push
movsb
push
test
xchg
fdivrs
lret
das
or
fiadds
negb
mov
fld
dec
outsl
sbb
mov
add
or
jg
sarl
add
movsl
aad
inc
pmulhuw
mov
ret
lock
sahf
int
ja
xchg
jmp
mov
cmp
xchg
sbb
scas
xor
test
xorps
add
orl
andb
sbb
mov
imul
mov
xor
je
ds
cmp
lret
popf
jns
sbb
mov
adcb
out
cli
push
jae
int
inc
mul
fcmovbe
push
movl
push
mov
test
xchg
es
xchg
jae
iret
cli
xchg
jae
pop
jnp
cld
mov
fsubrl
adc
pinsrw
cmpl
jns
popa
inc
lock
cli
xchg
ja
cmp
adc
or
mov
mov
push
mov
xchg
std
mov
out
and
ds
sti
lcall
jg
test
xor
mov
push
and
dec
mov
lcall
in
mov
adcb
imul
arpl
and
sub
sahf
cmp
lea
cmp
mov
push
push
movsb
or
fisubs
sarb
ja
dec
push
xor
test
pushf
sub
lock
push
push
sub
dec
cmp
cmpsb
es
xchg
dec
and
xchg
lods
xor
jg
les
lods
pop
push
rcrb
mov
fistpll
xor
fwait
pop
in
push
pop
cmpsb
pop
adc
addr16
xchg
pushw
shll
out
dec
xchg
cmp
fimull
in
stos
xor
lods
pop
mov
gs
bound
mov
stc
dec
outsl
mov
movsl
lret
sarl
repz
cli
inc
jge
add
sub
andb
je
add
mov
jmp
push
lret
push
add
xor
inc
or
cmp
imul
ret
popa
and
ja
mov
int
add
sbb
movsb
pop
lods
inc
test
inc
adc
hlt
and
imul
pop
lds
xor
pushf
scas
incl
loope
xchg
aam
or
int
fstp
stc
add
and
adc
rcrl
jp
pushw
mov
mov
jp
cli
lahf
or
rcrl
lock
and
xchg
idivb
cmp
and
lea
mov
push
iret
or
sub
push
mov
cmpsl
adc
cmc
sub
fisttpl
loopne
in
imul
xchg
addr16
fcomip
aaa
test
and
aaa
in
sbb
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
mov
sbb
xchg
push
mov
mov
test
je
mov
test
jne
xor
pop
ret
cmpb
jne
xor
cmp
sete
mov
pop
ret
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
and
jecxz
mov
lds
mov
dec
cmp
aad
xchg
in
xchg
arpl
aad
xorl
data16
stc
pop
movsl
cmp
or
dec
dec
mov
movsl
cmp
or
movsl
cmp
or
pop
add
jmp
jmp
call
mov
jge
add
test
jb
mov
xor
push
mov
dec
push
jne
lods
test
xlat
mov
imul
ret
ss
or
out
jnp
cmpsb
push
outsl
aam
jns
rcrb
imull
mov
jg
int
movsb
scas
mov
pop
push
es
pcmpgtd
mov
mov
add
adc
test
and
jp
js
stos
jge
cli
faddl
icebp
ret
in
fiadds
test
fcoms
ret
cwtl
pusha
mov
insl
mov
jnp
mov
cmp
cmp
and
jno
add
imul
dec
mov
movsb
dec
cmp
icebp
rolb
cmpsl
idivb
jecxz
out
lahf
addb
stos
imul
cltd
sub
fstpl
lcall
sbb
pop
or
loop
icebp
ret
mov
stc
scas
cmp
inc
sbb
cmp
pop
imulb
xchg
dec
jmp
sbb
sbb
fcoms
pop
clc
cmp
das
jmp
adc
mov
fdiv
cmc
and
shr
insl
xor
xchg
fstpl
scas
repnz
fwait
cs
pop
xchg
insb
xchg
repz
jne
xchg
fstpl
or
out
mov
hlt
cwtl
in
mov
sbb
sahf
insb
xchg
xchg
mov
aaa
imul
les
repz
repz
jo
loope
hlt
xorl
xchg
lds
or
adc
test
imul
mov
and
cmp
sbb
add
lds
xchg
pop
add
sbbb
pop
mov
dec
mov
out
stc
sbb
inc
lret
mov
mov
clc
jle
push
xchg
into
cmp
pop
js
mov
and
js
cld
jno
lcall
mov
sub
int
inc
inc
insb
add
mov
inc
jmp
cmpsb
xchg
mov
add
aaa
and
shr
pop
ret
xor
loop
push
inc
cltd
mov
imul
fistps
ljmp
mov
sbb
insb
add
push
add
dec
js
sub
loop
std
inc
push
dec
and
rclb
fs
mov
popa
jmp
in
sub
xor
mov
jp
stos
push
adc
push
sub
sbb
lea
cmp
adc
inc
lock
nop
in
push
in
cmc
pop
mul
mov
jg
out
inc
inc
call
repz
mov
jbe
jo
and
adc
inc
das
aad
cli
push
int3
repnz
std
notb
addr16
jecxz
rcl
dec
and
mov
or
pop
in
or
stc
int
aas
pusha
jae
sub
cmc
jnp
push
test
pop
test
stc
cli
repz
clc
nop
inc
jp
fistpl
incl
bound
sbb
sub
mov
jmp
cmc
out
sub
sti
js
pop
mov
xchg
jle
or
jne
aaa
xchg
lcall
xchg
stos
push
ja
dec
sub
jne
inc
outsb
into
pop
movsb
jo
and
pop
cmp
out
cmp
fwait
ss
test
ss
pop
mov
xchg
and
pop
mov
xchg
cmpsl
loop
xchg
mov
mov
loopne
test
push
into
push
mov
clc
sbbb
repnz
into
push
or
repnz
sub
lods
nop
imul
das
adcl
inc
int
mov
mov
pop
lret
mov
or
imul
mov
mov
adc
imul
adc
fs
xorb
jne
fldcw
pop
mov
movsl
shl
and
and
data16
cmp
jae
ds
pop
daa
dec
insb
cmp
fldl
in
jne
cmpsl
ficoms
jb
dec
mov
jle
pop
cmp
test
in
xchg
jmp
adc
xor
jbe
mov
cmp
push
and
and
mov
lds
push
ljmp
xchg
cmp
jns
jnp
das
fchs
cmc
sbb
jne
imul
mov
out
jmp
and
adc
mov
xlat
xor
or
ja
clc
xor
test
les
xchg
jb
aam
int
inc
mov
or
lret
sbb
das
nop
inc
mov
push
jne
ret
mov
out
ja
sbb
sub
inc
push
mov
movsb
shlb
shrb
pop
mov
fsubr
cli
sub
ja
fildll
add
mov
lret
xor
sbb
cld
in
sub
and
jno
mov
lock
mov
fwait
lahf
leave
punpcklwd
cmpsl
mov
test
mov
addr16
mov
xor
xchg
xchg
sbb
daa
and
sbb
cmp
lock
test
sub
cmc
inc
xchg
lods
inc
adc
shll
mov
out
cmp
jno
gs
mov
inc
cli
mov
push
aaa
dec
sbb
sub
iret
jnp
pop
subl
push
mov
loope
mov
xchg
adc
inc
loope
fyl2xp1
add
rcrl
insb
scas
add
xchg
or
insl
mov
sub
add
or
add
outsl
push
lar
dec
sbb
lods
push
rorl
daa
jnp
aaa
dec
push
cmp
mov
pop
arpl
adc
lcall
fstl
leave
sbb
pop
fsubr
mov
loope
lea
push
adc
sub
sarb
xchg
mov
sub
sbb
lods
int
enter
push
lds
shll
xchg
fcoml
push
mov
add
adc
repz
icebp
lods
mov
sti
cmpsb
sub
outsb
pop
mov
scas
loope
jg
out
mov
mov
shlb
pop
adc
sbbl
inc
subb
push
in
pop
dec
imul
mov
xchg
push
push
es
mov
xor
dec
subb
cs
adc
xchg
xchg
pop
clc
push
cli
lods
mov
cwtl
push
mov
pop
ret
sti
jo
and
gs
push
sbb
hlt
cmp
dec
and
push
push
mov
lock
cli
mov
ror
mov
jp
lods
cmp
aad
sbb
xor
repnz
sbb
icebp
aaa
mov
xchg
or
into
out
push
xor
mov
push
dec
dec
inc
xor
test
daa
sub
outsl
mov
cmc
shl
jle
mov
cmpl
hlt
pop
into
insl
aas
in
dec
fldcw
jmp
mov
push
xor
xor
cmpsl
adc
mov
cltd
adc
iret
in
ficomps
mov
iret
or
cld
xchg
xor
mov
adc
xchg
jo
lcall
test
sub
sbb
mov
jge
mov
andl
xor
fs
fsts
mov
mov
insb
int
mov
cmpsb
xchg
lret
loopne
repnz
notl
ret
fs
mov
jecxz
sbb
inc
sub
outsl
hlt
inc
jge
push
cmpsl
xlat
cmp
das
data16
mov
fcmovu
push
cmp
mov
inc
movsl
rorb
shrb
aaa
cmpsb
xlat
xchg
xchg
les
or
je
cmp
jns
in
and
imul
movsl
dec
push
mov
jnp
cmp
adc
nop
les
fucom
int3
outsb
popf
lahf
jge
xchg
rorb
aad
sub
test
pop
lahf
cmp
sbb
xor
and
cmp
push
out
cmpsl
ficoms
xchg
fidivs
jmp
add
xchg
push
mov
push
sub
xchg
into
stos
scas
je
xchg
dec
clc
pop
jnp
sub
icebp
jns,pt
call
push
mov
or
dec
loop
ja
lods
and
cli
xor
imul
add
mov
testl
repnz
stos
cmp
mov
mov
in
cmp
push
enter
mov
dec
xchg
rolb
xlat
sti
adc
or
call
movb
shlb
mov
repz
int3
and
mov
push
adc
lods
dec
jb
mov
les
js
xchg
cmp
jle
push
xchg
lret
dec
jb
das
das
in
imul
push
out
imul
mov
sub
dec
je
aas
mov
sti
clc
lret
cmp
xchg
push
inc
and
add
neg
fisttpll
lea
test
jno
inc
lret
lea
repz
mov
lcall
or
and
fptan
lea
pop
mov
pushf
mov
sub
mov
push
xchg
mov
xchg
cli
enter
push
mov
push
mov
inc
inc
inc
roll
and
xchg
push
and
jnp
sbbl
sbb
jb
jbe
jbe
cmp
push
idivb
mov
shlb
fwait
mov
dec
rclb
inc
push
or
inc
je
adc
leave
push
mov
pop
addr16
cmc
xchg
push
dec
mov
jge
call
pop
pop
cmp
jb
call
jnp
enter
xchg
or
mov
js
aam
xor
cmp
test
adc
push
sbb
xor
clc
sbb
leave
popf
xorl
shrl
stc
cmpsb
incl
jns
push
repz
mov
popf
jae
aaa
dec
loop
pop
jmp
pop
jl
pop
push
and
push
fsub
cld
in
or
dec
inc
mov
or
mov
push
or
pop
jae
rol
xor
add
cld
shl
cld
push
cmc
pusha
push
out
ss
jne
xchg
nop
addr16
in
jecxz
push
xchg
mov
aaa
inc
push
push
jp
fwait
cmp
sub
inc
pusha
gs
repnz
mov
das
and
and
mov
lods
test
mov
clc
dec
mov
cmp
add
dec
fistl
incl
or
and
lea
iret
and
les
mov
dec
movsb
jo
mul
out
or
decb
in
fsubrs
xchg
test
jle
nop
ljmp
lcall
adc
rorl
jbe
test
xchg
stos
xchg
or
dec
pop
loope
push
addb
adc
sti
add
xchg
add
push
mov
pop
fnstsw
mov
xor
inc
mov
mov
stc
mov
mov
mov
mov
arpl
je
outsl
adc
xchg
or
lods
push
aad
ljmp
shrl
push
pop
sti
adc
std
mov
ret
scas
inc
je
iret
mov
int3
test
push
iret
or
jno
aad
adc
inc
setp
adc
xor
or
xlat
pop
les
mov
mov
cmp
sub
lods
inc
push
adc
and
inc
testb
ja
into
stos
ret
mov
fs
push
push
das
sbb
roll
dec
sub
call
inc
adc
mov
jge
add
sbbl
pop
xchg
pop
scas
or
test
push
rcrl
jp
fisttps
jl
jg
pop
xchg
jnp
adc
xchg
in
aad
cmc
scas
sbb
push
push
push
mov
pop
sti
and
enter
dec
fsub
sbb
mul
rcl
pop
ds
cmp
or
movsl
pop
push
lods
das
pop
loopne
jne
jg
mov
out
add
pusha
push
jge
jle
or
add
test
xor
sbb
jl
call
cmc
adc
dec
mov
push
push
arpl
es
loopne
jns
xchg
sub
enter
das
xor
daa
cmp
sbb
call
les
test
jae
jle
sub
aad
mov
lret
pop
aam
dec
test
pop
test
outsl
add
test
ficompl
iret
inc
test
push
xchg
dec
mov
loope
cld
mov
divb
test
out
into
pop
sub
or
jb
les
jecxz
inc
leave
dec
data16
sbb
pop
push
popa
test
jg
push
xor
fsubrp
mov
add
sub
ds
mov
hlt
mov
sti
pop
mov
and
xlat
jecxz
adc
fmulp
xchg
mov
subl
mov
and
dec
lahf
sbb
gs
negl
je
or
pop
lods
lret
cmp
test
scas
dec
shll
xlat
xchg
pop
sub
mov
xor
jmp
pop
mov
dec
push
mov
pop
add
pop
push
xchg
mov
call
push
enter
xchg
movl
sti
cltd
push
sub
test
xor
and
dec
mov
ja
mov
add
pop
xor
push
call
lods
mov
jae
imul
mov
out
add
dec
xchg
jecxz
and
std
leave
insl
and
adc
sub
inc
icebp
and
and
sub
mov
test
cmp
mov
cmp
and
out
jbe
xchg
mov
out
fstpl
mov
sub
scas
adc
lcall
lea
xchg
aad
rolb
push
test
aaa
xchg
add
adc
and
mov
mov
gs
repnz
lods
or
cmpsb
insl
lret
aas
test
sti
insb
adcb
cmp
sub
add
jne
push
add
pop
mov
ret
subb
movsb
inc
mov
ja
lret
fdivrp
pop
mov
mov
cmp
sub
pop
test
adc
daa
mov
and
cmp
mov
jb
inc
and
push
ds
lods
and
jg
pop
fsubl
lods
popf
lcall
outsb
pop
push
aaa
sbb
loope
xchg
lea
sub
cmp
push
cmp
jl
and
or
leave
and
js
mov
cmc
sub
lret
lods
rolb
sbb
aaa
cld
lea
jne
hlt
jnp
xlat
js
lahf
outsb
rclb
inc
adc
aad
fnstcw
jno
test
mov
in
adc
mov
mov
or
xor
and
cmp
fstl
out
in
mov
ljmp
lret
inc
xor
cmp
imull
sub
adc
cmpsl
and
mov
out
xchg
fstpt
in
lahf
es
xor
and
xor
xchg
xor
jne
jae
pusha
test
pusha
pop
mov
xor
scas
fs
aaa
data16
jg
adc
cwtl
pop
out
dec
or
xchg
xchg
lea
subb
ftst
or
fldenv
fimuls
in
adc
sti
stos
sub
fisubl
sbb
insb
mov
jae
xor
xchg
js
outsl
imul
test
fisubrs
jns
fdivr
xor
adc
shr
inc
xchg
aas
fwait
adc
sub
mov
or
sbb
roll
dec
rorl
je
adc
dec
dec
mov
add
xchg
in
pop
inc
jae
xchg
inc
pushl
mov
xlat
sbb
leave
aam
inc
mov
js
xchg
testl
dec
fbld
mov
ss
bound
aaa
fisubs
mov
in
mov
stc
jne
dec
dec
add
jp
jns
sbb
pop
loope
sbb
fdivs
or
cmpb
fsubl
fadds
pop
clc
mov
and
scas
scas
mov
test
inc
fsubrs
push
pop
or
mov
push
in
jae
femms
jge
fs
dec
jp
movsb
mov
mov
pop
and
mov
lahf
and
or
jle
arpl
mov
push
adc
fwait
dec
mov
jecxz
aad
fistps
out
inc
movsb
fxch
push
stos
jnp
push
lds
dec
std
movsl
pop
es
xchg
add
jge
mov
sub
dec
dec
mov
push
gs
insb
cmpsb
out
pop
stc
mov
fmul
inc
sbb
sub
add
pop
fstp
cli
mov
xchg
add
cmp
test
and
xchg
bound
inc
fidivrl
xchg
fwait
ss
jns,pn
mov
xchg
aam
mov
sbb
movsl
xchg
jns
jne
repz
and
cmp
jbe
shrl
pop
js
arpl
call
test
pop
or
cltd
cli
mov
mov
mov
xor
pop
ja
ss
or
clc
mov
sbb
or
ret
ret
sub
pop
imull
jbe
adc
sahf
push
mov
shl
adc
jns
jnp
or
push
mov
mull
loop
out
dec
arpl
mov
iret
inc
hlt
shll
add
cld
mov
je
xlat
push
jp
mov
xor
test
mov
jl
pop
jle
cld
jmp
test
shll
pop
in
subl
aaa
jle
cld
imul
mov
sbb
cld
xor
lahf
enter
jbe
jmp
push
jp
popa
jo
imul
addb
popf
or
jmp
rcll
sub
outsl
loop
add
int3
test
aaa
fstl
adc
cmpsl
icebp
incl
stc
pop
popa
or
hlt
mov
jbe
and
lcall
mov
pop
pop
push
aad
cmp
jb
xor
out
mov
ss
mov
mov
pop
and
xchg
mov
rcrl
rcr
test
sub
cmpsb
mov
dec
push
dec
dec
out
xchg
lds
jae
lahf
push
push
sbb
mov
dec
adc
lds
rolb
aaa
jae
xchg
pop
or
gs
mov
push
test
adc
test
push
mov
ret
inc
mov
xchg
xchg
add
scas
cmp
daa
andl
insl
mov
adc
pop
sub
cmpsl
mov
or
jo
jae
scas
add
pop
dec
rolb
or
test
push
push
pop
mov
js
stc
cmp
cmp
add
lcall
insb
out
push
lods
test
rorl
in
jbe
and
test
adc
dec
sbb
call
movsl
mov
adc
xor
sbb
dec
push
sub
jbe
sbb
scas
mov
mov
fnstsw
add
int
addr16
dec
mov
push
cs
test
mov
push
xchg
sub
inc
outsl
sbb
popf
mov
mov
xchg
dec
fimull
cmpsb
movsl
dec
sbbl
std
cmp
adc
daa
xchg
sbb
decl
mov
push
addl
pop
enter
popf
cmp
iret
add
xor
xor
aad
adc
mov
inc
aam
test
pop
lock
mov
test
fisttpl
fdivp
dec
adc
and
adc
mov
pop
cmp
mov
xchg
ret
adc
nop
fwait
push
or
insl
cli
aad
dec
xchg
and
test
inc
sbb
dec
aaa
notl
fs
dec
mov
js
fsubr
pop
pop
rclb
mov
cmp
cwtl
iret
cmpsb
scas
pop
outsl
jne
jae
mov
inc
jp
shll
add
ds
push
sbbl
loope
ret
sahf
shlb
addr16
xor
js
into
cmpsl
outsb
pop
jns
ret
sbbb
xor
shrb
sarl
in
aad
lods
add
pop
movsb
shll
adc
jecxz
icebp
aad
insb
dec
add
ret
aaa
es
stos
mov
mov
push
add
mov
xor
cmpsl
jns
jbe
dec
mov
and
sub
in
and
cmpsl
ljmp
xor
xchg
dec
jg
pop
jle
jle
inc
aas
inc
popa
in
imulb
sbb
adc
jge
test
cld
sub
shrb
arpl
and
mov
xchg
xchg
fs
cmpsb
mov
test
jl
mov
adc
dec
xor
pop
xchg
iret
sub
push
xchg
ret
mov
movsl
insl
bnd
cmpb
mov
fsubl
das
adc
mov
push
push
jle
icebp
scas
clc
fldenv
shll
mov
sti
lahf
subw
pop
cmpsb
cmp
pop
std
push
dec
or
mov
rclb
gs
insl
repz
jl
mov
add
outsb
pop
movsb
dec
aam
lahf
fsubrs
inc
into
inc
mov
roll
inc
dec
in
mov
sub
mov
std
pop
pusha
pushf
sbb
pop
xchg
push
enter
push
or
add
insl
movsl
loop
cmp
cmpb
outsb
int3
pop
hlt
jecxz
xor
ret
pop
cmpsl
cmc
lcall
imul
cmp
mov
iret
out
mov
sbb
insl
pop
mov
push
mov
scas
outsb
jmp
dec
xchg
loop
xor
sub
faddl
push
bound
int
mov
daa
out
or
shrb
add
mov
push
int
inc
out
test
inc
incl
add
mov
mov
jle
gs
cli
fists
sub
mov
imul
mov
and
dec
dec
adcb
outsb
dec
rep
test
arpl
repz
mov
adc
xchg
sub
xchg
addr16
ljmp
mov
jmp
rcll
cld
repnz
inc
out
sub
shll
rorb
xchg
aad
pop
fsubrs
scas
test
hlt
xchg
mov
aad
addr16
sub
lods
jp
xchg
cmp
stos
popa
jmp
inc
clc
add
out
xor
jle
or
fdivp
jl
xlat
jecxz
adc
fsub
lret
xlat
push
aam
xchg
hlt
imull
mov
sub
mull
fs
push
push
out
jp
ret
ds
ss
and
jno
mov
cld
outsl
outsb
lods
fmull
xchg
testl
dec
mov
lret
repz
lcall
std
mov
and
pop
and
and
into
and
aad
or
mov
aad
dec
arpl
xor
inc
test
test
adc
loopne
pushf
loop
lock
jl
push
fdiv
and
jecxz
add
xchg
mov
ret
jbe
popa
xchg
dec
fmuls
sbb
loop
lds
fdivl
cmpsl
pop
jmp
or
jmp
push
adc
daa
test
mov
mov
mov
stos
xor
lods
jno
push
loopne
popf
fdivrl
aam
or
setbe
or
sub
push
jb
call
icebp
pop
in
mov
in
sub
mov
xor
mov
jmp
out
xchg
loope
sbbl
pop
or
decl
push
push
out
xor
and
jnp
mov
fwait
xlat
lea
lret
push
add
jns
movsl
xor
into
les
daa
ss
jge
mov
or
fiaddl
lret
jno
mov
push
sbb
xor
mov
mov
sti
pop
int3
pusha
out
adc
insl
movsb
dec
xchg
scas
cmpl
fs
stc
inc
nop
out
cli
lea
cmc
pop
out
mov
pop
cmp
mov
movsb
mov
mov
xchg
xor
int
jno
rorl
mov
orb
or
outsl
enter
in
dec
scas
mov
sarb
inc
mov
and
mov
inc
ds
adc
mov
fwait
mov
sub
imul
push
xchg
in
push
scas
scas
cmpsl
cmpsb
imul
popf
dec
into
pop
pop
sarl
jg
sub
pop
out
and
mov
cmp
mov
pop
adc
data16
push
pushf
insl
rorb
xor
adc
adc
leave
lret
imul
jbe
in
mov
cli
and
mov
sbb
jnp
jbe
std
aam
sahf
lods
pusha
lea
sub
sub
inc
aam
bnd
cmc
mov
dec
or
mov
test
mov
mov
ds
idivb
or
mov
push
loop
sub
and
test
cwtl
test
sbb
mov
xor
imul
in
imul
and
sub
sahf
xor
and
icebp
sub
xlat
movsl
into
mov
aaa
ja
orb
mov
push
mov
mov
mov
jmp
mov
loop
stc
mov
fstps
scas
loop
fldcw
dec
and
data16
sbb
call
xor
into
std
in
mov
or
test
add
lea
ficoms
inc
pop
movsb
and
push
shll
mov
xor
and
dec
jmp
rcrb
add
mov
pop
stos
insb
jne
push
push
mov
pop
dec
inc
adc
loop
out
push
dec
lea
push
imul
sbb
cwtl
sub
mov
sbb
push
call
into
pushf
cmp
or
data16
push
bt
push
sbb
ficompl
mov
jne
add
pop
mov
addr16
fdivrp
sbb
into
in
fwait
jge
adc
mov
repz
mov
mov
jns
jno
mov
pop
outsl
adc
dec
cmp
leave
or
fst
dec
clc
int3
das
aad
ret
in
out
test
mov
mov
xor
shrl
and
repz
pop
out
mov
addl
jno
negb
je
stos
sbb
daa
mov
pop
jns
xor
hlt
andl
cmp
leave
inc
mov
xchg
pop
jecxz
add
gs
aad
add
int3
and
xchg
inc
xchg
sub
cmpsb
sbb
out
cmp
shr
out
in
jecxz
nop
xchg
xchg
cmp
cmp
fcoms
push
jecxz
pushf
jge
push
mov
add
and
lahf
popa
push
in
arpl
lds
or
push
mov
fiadds
xchg
leave
mov
xchg
fdivl
fwait
push
ret
fldcw
scas
jl
mov
fnsave
or
sahf
mov
out
xchg
jo
stc
or
mov
jge
mov
push
mov
jge
nop
dec
or
clc
xor
mov
mov
cmpsl
ja
nop
jle
inc
ds
sbb
cltd
cmc
jp
ficoml
fdivrl
push
cmp
enter
jl
add
leave
mov
adc
push
dec
icebp
enter
aam
std
out
jae
int3
mov
lea
or
mov
negb
xchg
leave
and
popf
jns
je
cmp
sbb
push
add
icebp
mov
inc
xchg
in
ficompl
push
popf
mov
xchg
mov
into
nop
sbb
js
cmp
and
std
fsubrs
loope
push
sbb
out
addr16
test
inc
xlat
fs
pop
jmp
lock
mov
divl
adc
push
je
cmp
sub
adc
xchg
lahf
stc
jmp
dec
aad
adcl
cwtl
call
test
mov
mov
scas
mov
sub
mov
andl
subl
mov
xchg
repz
aas
ret
pushf
pop
sub
inc
lods
rcl
xor
sti
mov
stos
ds
add
repz
aam
sub
mov
subb
imul
sbb
test
andb
push
ljmp
fstpl
xor
cmp
stc
test
lock
add
mov
cmp
and
or
lcall
scas
fs
inc
lods
xchg
mov
adc
adc
pop
mov
adcb
fisubl
mov
lret
xor
call
pop
aam
mov
jno
in
fcomp
and
daa
mov
jae
mov
cli
mov
out
pushf
xchg
lret
fs
rolb
sub
push
out
fwait
push
mov
mov
ficompl
xor
fucom
into
loopne
dec
adc
sbb
xchg
jge
jae
daa
or
push
ret
xchg
mov
iret
std
nop
xchg
testb
fldl
fwait
xchg
in
xor
popf
or
in
mov
rorb
cmp
clc
enter
fwait
xchg
or
adc
push
add
xchg
shrb
sub
test
outsb
mov
icebp
add
sbb
insb
xchg
add
lods
lock
mov
lea
into
jns
xor
or
loope
cltd
test
jae
xchg
adc
add
mov
addr16
lret
aad
push
scas
pop
jno
loopne
xchg
out
loop
sbb
fwait
mov
pop
in
pusha
clc
pop
addr16
jne
stos
icebp
sbb
outsb
jnp
fcmovu
bound
out
xchg
cmp
xchg
mov
sub
dec
popf
addr16
jl
dec
xor
push
clc
jl
jmp
lret
push
jge
dec
jmp
lock
aam
pop
jns
imul
ret
push
test
jno
and
addr16
cmp
arpl
cwtl
je
daa
stos
or
dec
mov
xlat
repnz
add
jno
lds
stos
push
icebp
test
jbe
fs
mov
push
jae
sub
imul
xchg
stc
push
dec
lcall
jecxz
cmp
add
into
imul
xor
jp
stc
fldcw
inc
inc
xchg
es
cmp
pop
dec
inc
xor
mov
lods
pop
ja
sub
aam
mov
cmp
mov
add
push
aad
jns
sti
sbb
sub
mov
hlt
clc
inc
jae
outsb
mov
dec
in
add
sbb
xor
dec
mov
stos
adc
int3
lods
or
sub
test
std
inc
jne
cmp
inc
pop
pusha
cmp
cwtl
cmp
or
xchg
stc
or
testl
das
cmpsb
pop
cmp
out
dec
mulb
pushf
pop
or
mov
scas
mov
jae
xor
adcl
in
push
mov
and
pop
fisttpll
sbb
addr16
jns
pushf
xlat
push
inc
adcb
mov
pop
sbb
cmpsb
dec
adcl
pop
dec
sub
rolb
cwtl
push
sahf
fwait
loop
and
lret
pop
xor
cmpl
cmp
ljmp
cmp
jp
repnz
loope
xchg
or
sub
pop
fisubl
lahf
push
arpl
push
xlat
and
sbb
imul
or
out
cli
scas
dec
pop
stos
hlt
push
push
sbbl
xchg
xchg
mov
ret
sub
fnstsw
fistpl
adc
fcompl
ja
mov
dec
sbb
sahf
xor
dec
xchg
popa
xor
adc
mov
sarb
in
les
add
sbb
add
mov
jb
mov
roll
xchg
icebp
cld
in
mov
dec
es
roll
jnp
push
pop
pop
push
movsb
and
add
sub
push
pop
roll
aas
mov
jae
pop
test
jo
add
fidivl
xchg
jne
inc
std
repnz
stos
call
adc
jmp
push
out
mov
add
pusha
sub
and
dec
out
int3
sahf
lock
mov
xor
add
fsubrl
xor
inc
adc
mov
xchg
int3
lds
jbe
mov
adc
mov
inc
shl
dec
sub
pusha
arpl
mov
ret
sub
insl
dec
fildl
clc
add
mov
stc
mov
lea
pop
xchg
mul
mov
mov
push
cmp
dec
shl
add
aad
int3
popl
dec
or
and
mov
xor
movsb
imul
pop
xchg
sbb
cmc
add
sub
daa
add
jnp
mov
popl
push
xlat
js
inc
sbb
pop
movb
push
pop
push
dec
jmp
imul
xor
add
jge
adc
jmp
sbb
cltd
nop
mov
fiadds
pop
xchg
cmpsl
int3
mov
test
lahf
jns
test
jo
cld
add
lret
sbb
in
xor
mov
in
lods
test
mov
or
out
pop
test
or
push
aas
mov
vmread
test
lods
frstor
out
mov
sbb
cmp
mov
fisttpll
loop
jle
push
rcl
test
sarl
adc
popa
mov
stos
insl
mov
sub
pop
fldl
mov
in
lods
gs
add
lret
push
cwtl
or
sub
mov
dec
fstpl
enter
xchg
jg
sahf
out
mov
sub
mov
insl
xchg
clc
xor
jbe
mov
les
xorb
ret
outsl
sub
inc
push
cmp
cmp
cmc
or
cmp
rorb
repz
xchg
or
mov
inc
push
rcll
loop
movsb
jbe
loopne
inc
xor
dec
or
mov
movsb
cld
xor
sti
sub
push
mov
lods
int
mov
test
jge,pt
test
and
dec
jecxz
jp
dec
loopne
sahf
movsl
xchg
outsb
add
out
push
inc
scas
cmpsb
jp
xchg
cld
lret
adc
or
shl
pop
push
cmp
adc
sbb
sbb
push
inc
dec
pop
inc
aaa
sub
dec
ljmp
lods
cmp
inc
xchg
test
xchg
xchg
lods
repnz
cmp
or
ret
adc
sub
or
aas
adc
sub
ss
inc
fnstenv
jl
push
jb
sbb
sbb
mov
pop
in
and
jae
orb
ljmp
jmp
daa
push
or
push
xchg
pop
mov
xor
sub
nop
xchg
dec
or
xchg
cmp
cwtl
fwait
xlat
mov
loop
mov
xchg
mov
cmpsb
les
inc
mov
jecxz
xchg
das
scas
jne
mov
lret
mov
cs
lret
loopne
sub
sbb
push
push
out
popa
cld
hlt
inc
xor
adcb
lock
iret
call
push
xor
push
lock
pop
sub
mov
fisubrl
pushf
and
sbb
pop
rcr
in
sbb
jmp
dec
es
pop
nop
or
in
jbe
push
xorb
add
dec
sti
cwtl
pop
cmc
cmp
mov
jnp
push
pop
cmp
jbe
dec
sbb
inc
aad
mov
sbb
pop
lahf
or
inc
xor
sbb
inc
loop
je
pushf
lds
mov
std
jecxz
out
inc
pop
jae
shrb
cltd
ret
jecxz
jnp
and
inc
arpl
mov
cs
xchg
sub
enter
sbb
pop
or
sub
mov
lods
cltd
pop
inc
sti
add
jae
add
fmull
pop
jno
fimuls
xchg
stos
fstpt
sub
int
and
mov
out
mov
push
pop
mov
les
dec
inc
jmp
dec
les
repz
mov
clc
jne
xchg
adc
cmp
test
cwtl
jo
add
push
cmp
in
push
xor
gs
vcomiss
rcl
jp
imul
outsl
or
add
xor
push
into
jb
nop
jl
xor
negb
dec
push
inc
mov
mov
push
mov
dec
roll
adc
or
adc
movsb
enter
test
rorb
lods
arpl
stos
and
sbb
and
pop
cmc
lea
jecxz
std
or
leave
mov
mov
or
or
mov
sbb
inc
cwtl
mov
popf
in
jnp
sub
insl
xlat
cmp
cmp
xlat
sub
data16
adc
push
mov
iret
pop
mov
xchg
cmp
mov
add
xor
addr16
iret
pusha
cmp
leave
cmp
mov
scas
or
int
sub
mov
xchg
and
out
mov
xor
movsb
xor
mov
vpminub
mov
gs
ds
adc
and
out
push
inc
out
xchg
adc
jg
pop
shlb
or
and
adc
pop
xor
mov
insb
cwtl
jmp
add
jp
push
nop
shll
mov
ljmp
ja
addr16
cmp
cmpsl
les
shl
lahf
lods
cmpsl
or
push
mov
outsb
into
sar
arpl
and
pop
pop
pushf
xlat
inc
rolb
fdivl
inc
mov
lret
and
inc
mov
inc
mov
test
mov
jl
dec
lahf
ja
test
push
lret
and
dec
jge
xor
add
mov
jne
dec
xchg
push
out
pop
in
cmpsl
cmp
sub
pop
mov
ret
xchg
mov
cmp
insl
jo
mov
pop
xchg
ret
adc
stos
add
add
cmp
pop
sbb
clc
dec
xor
push
leave
addb
adc
cmp
inc
xchg
fcmove
push
cmpb
test
aaa
pop
fisttpl
or
add
mov
fmul
xchg
ljmp
fnstsw
cmp
icebp
xadd
enter
jbe
insb
cli
pop
test
mov
dec
xor
pop
xchg
mov
mov
orb
cmpb
stc
out
fimull
sbb
xchg
ret
out
inc
es
sbbb
jnp
icebp
push
adc
shr
scas
stos
push
test
and
mov
push
clc
int
mov
aad
dec
and
push
xlat
cmpsb
inc
mov
fwait
dec
std
inc
popf
rcrl
push
lock
jl
xchg
cmpsb
jmp
jg
jb
sub
icebp
and
int
mov
add
in
gs
sbb
pop
in
orb
insb
adcl
insl
mov
sahf
xchg
xchg
dec
cwtl
push
jb
test
lea
xchg
add
mov
pop
sbb
and
in
pop
sbb
call
dec
dec
or
enter
out
popa
movsb
mov
pop
imul
push
pop
cmpl
lahf
sub
sub
cmp
lds
jle
enter
in
sbb
xor
int
pop
and
adc
mov
popl
cmp
cmp
pop
push
jle
mov
rclb
xlat
fcoml
je
and
push
jae
incb
xchg
mov
add
mov
in
imul
add
add
daa
pop
hlt
and
dec
in
repnz
sub
clc
xchg
fs
loop
movsb
push
or
loope
pop
in
les
add
pop
rol
jns
sub
add
adc
fistpll
sub
adc
xchg
sub
inc
push
push
add
pop
push
inc
sbb
out
cmp
icebp
rolb
cwtl
xchg
add
shll
sbb
lds
call
repz
or
cmp
adc
push
shl
in
sti
push
sbb
mov
sbb
and
scas
popa
sar
inc
scas
push
dec
out
pushf
mov
dec
pop
cmp
mov
add
push
aam
lods
push
jecxz
retw
pop
dec
jle
lahf
mov
and
movsb
inc
outsb
dec
call
out
mov
or
lods
popa
roll
stos
or
add
testl
fs
sbb
adc
dec
xchg
jp
inc
add
aam
int3
push
and
push
mov
inc
pop
insb
fnstenv
pop
loopne
lds
cmp
push
mov
fcomp
lret
inc
jge
xor
sub
xchg
xorb
cmpsl
test
mov
lret
jg
xlat
dec
mov
push
sub
pop
xor
inc
pop
xchg
xchg
test
fimuls
jo
dec
xor
xchg
sti
jp
pop
ret
mov
shrl
add
sub
mov
stc
sbb
dec
xchg
stos
mov
cltd
ljmp
sub
push
sbb
pop
pop
xchg
adc
dec
adc
mov
adc
adc
xor
fdivr
roll
imul
jmp
sarl
add
inc
ljmp
xor
sub
dec
fld
push
pop
xchg
loopne
ret
xchg
lahf
mov
jns
push
mov
push
nop
subl
ljmp
es
add
test
imul
xchg
xchg
xchg
fcomps
inc
mov
pop
movsb
or
fstl
pop
dec
js
jmp
hlt
ds
mov
pop
gs
cwtl
or
repz
adc
push
pop
sahf
ficomps
pop
push
or
mov
xorb
pushl
out
inc
imul
sub
sbb
mov
mov
pop
sti
mov
aad
arpl
out
fnstenv
mov
sub
jle
fsubr
enter
cmpsb
add
mov
sahf
outsb
dec
scas
adc
cwtl
xchg
mov
add
aaa
xor
cmp
lea
or
mov
das
cmc
adc
cmp
xor
in
ds
fisttps
xchg
popa
push
inc
cwtl
or
jecxz
mov
in
jl
mov
inc
cli
inc
fbstp
pop
mov
mov
push
mov
js
inc
rcl
popa
popf
aam
fidivl
xchg
xchg
outsb
jbe
int
or
mov
scas
ja
out
xor
loopne
inc
in
lret
inc
fs
aam
int
scas
push
inc
bound
or
jmp
sarb
loopne
gs
in
sub
scas
ret
cmp
inc
js
pusha
mov
xchg
scas
cmp
cmp
mov
pop
dec
mov
mov
sti
xlat
lret
mov
dec
adc
xchg
xchg
jle
shll
push
dec
mov
cmpl
loopne
je
push
sarb
fists
dec
push
out
js
xchg
inc
dec
outsb
and
lods
adc
or
xchg
adc
push
bound
push
jb
jp
setne
dec
fldcw
fimuls
xor
xchg
scas
pushf
and
es
inc
xchg
inc
aas
hlt
lret
jbe
inc
call
cld
mov
arpl
sahf
dec
movd
repnz
mov
aam
add
inc
mov
das
popa
andl
repnz
loopne
jl
and
mov
lods
pop
push
mov
sub
lods
add
jle
movsb
and
dec
outsl
xchg
nop
and
ss
lock
popf
out
xchg
push
sbb
dec
stos
out
ret
xchg
repz
jo
mov
mov
fldenv
xchg
iret
cmpb
rclb
mov
lods
sbb
xor
inc
rcl
sub
cli
lret
pop
push
out
in
and
idiv
mov
jp
and
jmp
int
xchg
addr16
icebp
pop
inc
inc
js
loopne
push
sbb
movsb
cmpsl
push
push
jl
out
out
cs
lods
inc
popaw
sub
es
enter
stc
data16
mov
addl
or
sbb
jae
fmull
ss
cmc
dec
push
bound
mov
jns
xchg
insb
incl
cmpl
xchg
jle
xor
add
es
mov
es
push
add
pop
mov
cmp
sbb
repnz
cmp
xchg
push
adc
popf
daa
push
fidivrl
pop
mov
popf
sub
mov
mov
mov
pop
add
addr16
add
pop
xchg
loopne
adc
ljmp
das
repz
adc
insl
mov
movsb
sbb
add
ds
jnp
mov
hlt
outsb
mov
aad
das
shr
outsl
addb
xor
test
mov
mov
xchg
xchg
xchg
push
xchg
xchg
xchg
xchg
movsl
mov
flds
xor
test
jge
int
mov
ss
jnp
xor
scas
outsl
or
xor
fimuls
mov
cmp
mov
lret
cli
lds
stos
sub
or
loopne
pop
mov
sbb
sub
aad
jecxz
push
fidivl
fstl
fisubrs
call
dec
enter
push
push
jae
xchg
inc
mov
xor
cld
lock
cmp
inc
push
stos
or
cmp
jne
sub
xchg
mov
mov
dec
sub
dec
inc
out
add
fcmovnbe
sarl
jl
mov
jae
adc
mov
dec
jo
mov
cmp
cmc
mov
inc
adc
test
xchg
dec
rcll
sbb
xor
inc
jl
xchg
flds
inc
mov
das
xchg
shll
pop
sahf
test
jmp
lods
test
mov
lea
push
cmpsb
cmpsl
and
jl
xchg
pop
icebp
xchg
and
and
cmovns
mov
push
ljmp
jmp
test
test
push
push
scas
fdivr
adc
xor
cmp
push
rorb
test
sub
cs
push
pusha
in
les
xor
jns
je
push
sub
cmpsb
cmpsl
push
push
test
orb
loop
enter
adc
enter
out
ud2
popl
ljmp
mov
mov
add
repnz
and
sub
fldcw
sbb
mov
or
mov
leave
dec
sbb
or
mov
aam
shlb
xchg
movb
loop
insb
int
popf
out
inc
in
das
jge
out
fadd
loopne
jl
dec
xlat
add
mov
jge
jne
into
addb
push
in
scas
iret
lcall
pop
fldl
cli
loope
cld
insb
push
add
mov
mov
leave
clc
or
and
ljmp
push
data16
add
outsb
sbb
mov
xchg
mov
xchg
jmp
inc
popf
pop
lcall
out
lea
mov
sbb
pop
imul
adc
sub
and
shlb
repnz
pushf
jno
mov
insl
loopne
xchg
pop
and
jp
out
test
arpl
daa
les
inc
popa
rorb
push
mov
cli
repz
test
xchg
jae
sbb
and
xlat
mov
push
into
push
icebp
ds
mov
push
es
leave
push
jmp
roll
jne
inc
pop
mov
testb
ds
addr16
je
loope
cs
stos
jae
jmp
pop
jl
jl
jmp
sbb
xorl
mov
int
mov
subl
cld
fistl
inc
lret
mov
ljmp
mov
repnz
into
add
push
int
mov
lds
pop
enter
jne
flds
mov
pop
dec
imul
jl
je
mov
adc
shlb
call
movsb
scas
ja
push
js
lcall
repnz
test
dec
sub
jp
rcrl
adc
dec
andb
xor
roll
rorb
push
pop
cwtl
repz
lret
sbb
adc
lea
pop
lcall
inc
loopne
cs
pop
into
mov
or
xchg
inc
insb
add
dec
pop
push
shll
loope
jno
popf
out
pop
xchg
hlt
in
scas
ja
sbb
dec
cmp
in
lock
xor
addr16
stos
jno
test
and
mov
jmp
cmpsl
jo
jnp
xor
loop
pop
xor
loop
mov
or
pop
iret
arpl
out
into
add
adc
or
test
push
std
cmc
lds
sbb
add
sub
or
cmp
repnz
pop
inc
pop
push
cld
sub
into
fisttpll
subl
in
mov
dec
nop
stos
mov
cld
insl
and
aas
stos
fcomip
fists
ss
rorl
cs
imul
ret
dec
cmpsb
mov
sub
sub
cmpsl
fistpll
ds
scas
fdivl
and
imul
in
mov
aas
lcall
scas
je
pop
sub
adc
clc
aaa
or
repz
arpl
cmp
stos
sbb
mov
mov
adc
push
mov
test
mov
mov
mov
xchg
cltd
pop
pop
test
xor
mov
sbb
dec
jge
fadd
mov
push
or
or
insb
mov
lds
inc
pop
mov
sbb
ss
repnz
push
repnz
mov
mov
sbb
fmull
dec
xlat
push
ss
jo
pop
cli
pop
fisttpll
pusha
stos
dec
inc
out
inc
sbb
es
out
xchg
cld
jecxz
mov
ss
fildl
notb
outsb
pop
xchg
je
imul
stos
sub
es
jno
jle
lret
push
pusha
fcoml
sub
xor
inc
sbb
lods
fstpt
fidivl
fmuls
jb
pusha
test
push
xor
inc
mov
dec
mov
dec
mov
dec
outsb
cmpsl
pushf
inc
mov
mov
xor
repnz
mov
in
and
xchg
iret
lahf
pop
jns
mov
jmp
fdivrl
dec
out
ss
xlat
and
daa
inc
cltd
and
cmp
jp
mov
push
ret
std
call
mov
xchg
cltd
mov
mov
cmpl
cwtl
loopne
push
mov
mov
out
dec
or
es
aam
cmpsb
sub
bound
inc
shll
das
ret
imul
ss
xchg
fucomi
pop
stc
push
sbb
dec
dec
pop
adcb
mov
push
jmp
push
push
lea
rcrl
xchg
pop
and
adc
and
aam
cmpsl
adc
and
mov
js
add
push
sub
mov
push
nop
lea
jb
lods
cmp
xchg
inc
je
jnp
xor
sbb
jo
std
aad
xchg
shll
inc
out
jnp
jno
gs
jns
jnp
lret
pop
lret
movsl
xor
pop
xchg
dec
fldl
bound
ljmp
xchg
ja
mov
cmc
pop
xor
popf
mov
adc
and
testb
test
sub
and
fs
mov
jae
push
fisubl
and
mov
adc
pop
xor
scas
incb
jecxz
fdivrp
pop
xchg
aaa
fildll
stos
pop
xchg
or
cmp
testl
fadd
cmp
ror
xchg
sub
mov
stos
dec
in
jle
popa
cs
jbe
pop
repnz
das
xorb
pslld
or
push
jg
int
icebp
pushf
fcmovne
out
xchg
mov
jns
push
pop
out
aad
push
loopne
roll
das
outsl
in
sbb
loopne
faddl
inc
insb
decl
js
sbb
adc
jl
aaa
subb
ja
jge
inc
outsl
inc
fcom
ret
inc
jg
loop
mov
dec
mov
mov
mov
aam
js
lea
cld
es
lods
and
jmp
mov
clc
ljmp
push
loopne
std
cltd
nop
addr16
xchg
jne
jo
pop
inc
dec
jg
mov
adc
inc
out
sub
popa
ret
arpl
dec
ljmp
xchg
pop
push
bound
fsubrs
cs
xor
sbb
imul
fwait
mov
push
cmp
push
pop
call
xor
adc
sub
push
push
mov
mov
add
fnstenv
lock
or
push
lds
in
in
mov
rcl
scas
scas
pop
mov
out
dec
xchg
scas
xchg
add
test
dec
sahf
sub
mov
mov
imul
jns
mov
cmp
mov
push
fs
xchg
cmp
fs
movsb
mov
xor
cmpsb
mov
push
stos
sbb
fdivrl
sar
adc
outsb
repz
scas
add
shll
movsb
pop
add
repnz
jae
loope
fwait
cli
clc
add
dec
adc
lea
xchg
xor
es
les
and
mov
imul
add
add
les
mov
iret
push
sahf
inc
add
cmp
dec
ret
mov
sub
jo
jg
ror
pop
adc
sub
scas
loop
dec
mov
shl
inc
popf
mov
and
or
sahf
sub
sbb
adc
jmp
bnd
movsl
loop
ja
bound
hlt
sbb
ds
scas
gs
loop
push
sub
push
mov
imul
add
arpl
or
notb
xor
das
adc
xor
int
mov
sub
imul
rcr
stc
sbbl
sbb
lcall
add
cmp
jecxz
mov
cmp
push
push
fnstsw
in
sub
stos
daa
or
mov
loop
cwtl
cmp
clc
fldcw
popa
stos
mov
dec
cmp
push
ficoms
xchg
stos
negl
pop
and
std
lcall
cmpsl
mov
sub
sbb
jne
stos
lea
pop
pop
cmp
movsl
leave
fstl
adc
sbb
hlt
xchg
stc
pop
addr16
out
xchg
lahf
add
push
jae
call
mov
jnp
sbb
dec
cmp
pop
mov
cli
nop
push
loopne
cmp
jns
jp
ss
arpl
arpl
aas
mov
in
nop
scas
jecxz
int
inc
das
and
movhps
adc
imul
mov
lds
cmpsl
cli
mov
and
inc
mov
mov
pusha
fxch
rcll
enter
pop
mov
push
jg
push
popa
pop
scas
rcr
jae
push
or
in
inc
fwait
nop
jo
mov
clc
ds
or
dec
or
mov
es
adc
xchg
mov
xor
aas
rcrl
xor
adc
xchg
lret
ss
ret
fiadds
cmc
xchg
testb
data16
ds
fsub
or
xchg
fnstenv
lret
inc
enter
adc
mov
mov
push
in
cmpsl
inc
fucomip
mov
cld
imul
cmp
stc
add
xchg
loopne
ljmp
imul
fbld
adc
enter
xlat
ficoms
cmp
mov
inc
jno
enter
or
mov
jmp
adc
insb
xchg
and
and
push
mov
sbb
ds
add
clc
xor
mov
out
mov
insl
fdivl
mov
and
push
inc
push
pop
out
and
mov
cmc
xlat
cltd
int
add
cmp
ljmp
hlt
dec
dec
fmull
mov
or
cmp
xor
ficoml
cmp
sbb
mov
mov
mov
jb
pop
ret
pop
mov
xchg
loopne
lock
js
adc
insl
lret
test
scas
cmp
inc
xchg
fistpll
sti
lahf
fistpll
pop
js
cmc
dec
mov
mov
outsb
adc
mov
and
push
add
adc
lcall
out
cmp
mov
cmc
sbb
mov
jne
aas
inc
idivl
jp
arpl
or
xchg
mov
leave
cmpsb
adc
xchg
fbld
aaa
fisttpl
mov
jle
push
xchg
push
pop
fs
fstpl
xor
pop
ret
jge
jg
mov
subb
mov
scas
xor
pop
jp
pop
arpl
push
push
hlt
xor
mov
adc
ja
add
cwtl
xor
mov
sub
cmp
push
fwait
pop
push
outsb
insl
lods
sbb
mov
inc
xor
add
cmp
mov
sti
out
xchg
mov
cwtl
and
dec
xchg
mov
mov
push
dec
adc
xchg
xchg
xlat
jg
call
jns
pop
add
mov
mov
lret
mov
mov
xor
jb
call
cmp
cmpsl
inc
mov
jmp
or
push
sbb
movsl
mov
mov
mov
pop
test
or
jge
insb
xor
loope
cmp
call
xor
les
lret
insb
adc
addl
ds
xor
aaa
clc
push
aam
fisubs
mov
or
push
scas
fs
lret
outsb
sbb
cmp
cld
inc
dec
movsw
xchg
les
stos
inc
inc
xchg
cmp
mov
int3
and
loop
push
in
xchg
xchg
pop
sbb
fnsave
int3
inc
aas
sub
push
jp
mov
clc
xchg
mov
jno
andb
nop
xchg
inc
adcb
mul
mov
xchg
iret
dec
sub
insl
mov
push
mov
mov
pop
enter
mov
test
decl
push
sbb
cmp
cwtl
push
out
lcall
cmpsb
lods
or
std
shlb
outsl
lods
fbld
push
fsubr
icebp
jg
es
stos
fsubs
pop
lcall
cmpsl
push
jb
mov
sub
sub
repz
sti
test
gs
mov
inc
jns
inc
in
inc
ljmp
fmul
mov
mov
rol
cmp
and
pop
arpl
mov
cmpsb
cmp
fcmovnb
jg
stos
cmp
dec
sti
pop
mov
pop
sub
out
iret
ficoml
cltd
push
arpl
fistl
xor
ja
push
xor
cmp
dec
gs
dec
in
je
adc
xchg
leave
fidivrl
pop
loope
inc
mov
mov
sarb
cltd
out
xor
lret
xor
or
ret
mov
sbb
xor
pop
imul
sbb
add
push
fisubl
lods
jae
cld
clc
pop
es
call
or
xchg
lret
pop
popa
test
in
inc
jns
cmp
or
fwait
lock
push
ret
ss
sub
xor
stos
add
addl
inc
push
jmp
jns
cmc
sbb
das
lret
xchg
addb
iret
ret
mov
push
sbb
inc
cld
ds
lret
push
mov
or
xchg
xchg
sahf
cmp
pop
ss
ret
add
es
adcl
xchg
xor
xchg
js
fstl
aaa
aad
pop
or
dec
push
sub
xchg
in
xor
cmc
nop
xchg
pop
adc
dec
mov
out
mov
inc
das
adc
jo
ja
dec
mov
lret
cltd
jp
lahf
adc
pop
lods
jmp
stc
clc
sub
jp
faddl
jo
adc
jmp
pop
mov
daa
xchg
and
mov
mov
test
or
outsl
push
fcoml
jmp
test
push
imul
mov
mov
stos
cmp
faddp
in
fnstcw
xchg
negb
jl
aas
into
xor
cmpsl
push
das
xchg
jmp
push
sbb
movsl
lods
rcrb
sub
popf
es
sbb
xchg
ret
jno
pop
mov
pop
aaa
sti
cwtl
cltd
jle
push
and
add
dec
fwait
add
pop
cmc
mov
and
repnz
es
xchg
outsl
jmp
sub
not
sbb
insl
adc
add
loopne
mov
pop
fstpl
dec
popa
insb
out
daa
dec
repnz
rcll
jae
pop
jns
lods
shr
pop
cmp
xchg
sti
mov
mov
dec
and
xor
int3
leave
das
ljmp
leave
xchg
pop
test
sbb
or
pop
xor
sarb
lahf
sahf
or
cltd
pop
pop
enter
jg
subb
std
inc
cmpsl
sti
push
cmp
mov
mov
adc
mul
pop
cmp
sub
popf
or
stc
insl
jo
fidivrl
jecxz
fcmovb
int3
cltd
jg
clc
gs
sub
lea
lock
pop
hlt
aaa
sbb
dec
repz
stc
jmp
xchg
pop
mov
xor
xlat
fimuls
inc
add
jae
jnp
ds
adc
in
adc
adc
jle
out
fsubp
jb
fstps
xchg
gs
xchg
pushf
xor
xor
sub
mov
ss
mov
mov
out
notb
jb
clc
jle
jno
cmpsb
ret
jp
stos
dec
push
pop
add
pop
ja
add
mov
mov
fists
aaa
je
pop
or
sti
leave
lahf
push
cltd
imul
lahf
and
or
lcall
adc
and
pop
outsl
stos
out
pop
fcmovb
adc
mov
test
push
movsb
adc
insb
xchg
jge
loop
int
ds
dec
and
dec
in
push
fnstenv
inc
push
js
repnz
ret
sub
xchg
or
mov
mov
packsswb
outsl
movsb
push
imul
loope
test
sbb
fidivrl
outsl
mov
imull
stos
push
bnd
hlt
xchg
push
adc
fwait
addb
sbbb
xor
jnp
loope
mov
cli
xchg
cmp
fnsave
icebp
and
sub
sub
shll
push
jp
jne
add
lahf
fildl
shl
out
lret
sbb
cmpl
sub
cli
sbb
sti
dec
or
sub
addr16
in
rcll
or
in
push
and
add
in
cmp
mov
icebp
insl
jbe
inc
fs
nop
jne
push
cli
out
sarb
jle
or
or
mov
xchg
outsb
mov
in
mov
sbb
popf
dec
jmp
mov
and
test
inc
jnp
sbbb
es
jns
push
lahf
jb
sti
pusha
cmpsl
daa
mov
jbe
shll
inc
or
xchg
jp
cmp
cmpsl
push
sbb
lds
stos
dec
into
pop
sbb
mov
sbb
xchg
into
loop
out
outsb
mov
xlat
mov
push
jno
mov
sbb
mov
mov
decl
ja
jns
jb
jle
lret
addr16
inc
loope
xchg
inc
cli
inc
jnp
setl
lock
lea
pop
jl
fdivl
dec
jg
mov
mov
popa
push
push
and
lret
orb
arpl
and
xchg
push
daa
popa
dec
mov
pop
popa
mov
daa
addr16
scas
adcb
mov
ret
divb
push
cmp
sub
nop
shrl
stc
jg
jg
and
cwtl
test
das
xchg
push
sbb
mov
popa
dec
pop
jnp
pop
bound
loop
out
mov
pushf
cmp
negb
aam
fbstp
in
fcoms
cmp
lret
gs
xor
fbld
xor
cmp
sbb
mov
xchg
pop
data16
ds
sbb
loopne
mov
mov
push
stc
push
jge
xchg
fimull
loope
pop
dec
dec
addr16
mov
stos
jg
lock
fisubl
das
xchg
fisubrl
jae
je
pushf
and
in
ret
shl
dec
mov
es
gs
inc
les
loope
clc
and
out
ljmp
mov
xchg
cmp
lds
out
mov
ret
pusha
fildll
add
xchg
adc
into
nop
test
adc
push
mov
in
dec
std
xor
mov
out
pop
int
push
fildll
mov
imul
mov
or
mov
xchg
jns,pn
in
mov
icebp
repz
leave
sub
pusha
aad
xor
ljmp
jns
div
xor
sub
mov
daa
or
add
pop
dec
iret
adc
aaa
cwtl
movsl
and
push
lock
in
xchg
daa
in
pop
xchg
stos
mov
mov
lea
aam
inc
sub
jp
mov
mov
cli
jbe
jg
push
lcall
and
stos
and
cmp
xor
mov
cmp
cmp
out
aam
push
cmpb
jg
adc
adc
push
jb
and
mov
and
adc
mov
ret
dec
cmp
movsl
pop
and
pop
leave
es
sub
xchg
dec
mov
dec
mov
mov
xchg
ss
xchg
adc
ss
loop
popf
fchs
fsts
out
enter
jne
push
dec
call
gs
mov
je
or
cmp
jmp
pop
sbb
pop
xchg
mov
inc
jbe
push
push
std
and
out
sbb
test
orb
inc
pushf
fisubs
and
push
mov
jecxz
cmp
sub
and
xor
orb
sbb
cli
push
sub
in
pop
and
add
push
flds
sub
sarb
push
mov
mov
pop
xor
dec
lock
push
sarl
jl
push
mov
jae
lds
cltd
sbb
sub
cmp
lock
ss
push
or
sbb
pop
notb
add
imul
push
xchg
pcmpgtw
and
sahf
xchg
sbb
jg
jae
hlt
mov
jbe
call
or
mov
mov
push
cli
out
push
dec
pop
xchg
jo
gs
and
push
sub
xor
pop
inc
ja
leave
push
add
cmp
sbb
test
mov
insb
mov
push
popf
mov
mov
ds
imul
lret
push
out
movsl
xchg
out
stc
lds
fnstcw
pop
and
out
adc
pop
addr16
das
fistl
jbe
cs
sbb
mov
std
pop
mov
std
add
fisubs
jl
insl
pop
adc
pop
or
pop
fimull
pop
ds
movsl
insb
loop
stc
push
popf
arpl
dec
mull
dec
dec
pop
cmpsb
xchg
mov
andl
adc
mov
fcmovb
addr16
dec
xor
shr
std
movb
pop
out
shrl
repz
rcrb
sbb
jns
ficoml
push
sbb
mov
clc
rcll
je
xlat
loope
xorl
adc
jp,pn
aas
sub
or
clc
cmp
mov
test
cmpb
fldenv
ds
mov
adc
sahf
callw
loop
dec
push
xor
and
xchg
jecxz
in
dec
inc
mov
in
aam
fldt
pop
xchg
pop
in
ja
sub
lcall
shr
repnz
mov
testb
xchg
or
xor
mov
sub
scas
movsl
sbb
iret
mov
mov
cld
test
xchg
and
mov
clc
fsubs
mov
enter
cmp
frstor
cmc
jbe
hlt
shlb
push
sbb
or
mov
movsl
aaa
jns
adc
jle
cltd
sbb
mov
inc
outsl
pop
incl
cmp
adc
dec
movsb
or
push
or
push
imul
sub
inc
pop
adc
leave
dec
ljmp
and
add
mov
mov
push
aam
divl
xorl
and
and
xchg
insl
xchg
sbb
movswl
in
scas
pop
rcrb
test
inc
or
sub
mov
dec
xchg
add
adc
stos
and
in
enter
inc
sbb
lcall
test
cmp
pinsrw
mov
sub
jp
enter
loope
xchg
dec
add
xchg
cmp
test
dec
das
push
insl
repnz
fisttpl
cmp
mov
dec
pusha
xchg
cmp
in
xchg
jp
outsl
adc
or
xchg
xchg
gs
jl
sbb
test
shlb
sbb
sar
mov
and
movsb
mov
ss
sahf
popf
ret
pop
and
call
and
mov
sbb
dec
test
mov
adc
sbbb
pop
das
iret
inc
pop
dec
cmp
pop
es
inc
int
mov
aas
jbe
pop
cmp
mov
push
sub
fs
pop
ds
jmp
sbb
inc
ficoms
mov
insb
mov
dec
push
jmp
out
and
adc
popf
imul
and
mov
add
aaa
jg
sbb
or
pop
cmp
and
mov
add
mov
test
stos
mov
call
push
pop
orl
mov
aas
push
xchg
push
push
fldenv
xor
inc
aas
cwtl
xchg
or
ret
xor
cmp
cmp
mov
dec
and
push
fists
arpl
neg
pop
sbb
mov
js
jne
dec
stos
xor
xor
inc
push
out
sub
insb
lods
pop
dec
pop
hlt
enter
test
testl
or
lcall
pop
inc
cmp
les
sbb
pop
out
lods
cmpsl
pop
stos
sbb
mov
add
je
jmp
jno
test
inc
dec
out
mov
lods
popf
rcrl
mov
adc
ret
mov
imul
out
rorl
lds
int3
sbbb
rcrb
jg
push
pop
xchg
enter
dec
sub
sbb
in
mov
ret
test
push
dec
mov
jns
mov
sub
or
mov
ficoml
inc
cmpsl
jcxz
daa
out
mov
aad
or
jae
js
adc
jns
and
hlt
adc
out
sub
out
lret
outsb
jno
rclb
cwtd
ds
mov
icebp
mov
sub
sbbb
or
repnz
ja
add
iret
insb
inc
cwtl
fwait
xchg
test
shlb
insl
mov
or
mov
mov
inc
test
pop
add
shll
enter
faddl
fmull
adc
mov
mov
shll
cmc
jg
sbb
and
stos
push
mov
iret
sahf
insb
push
dec
fidivrl
push
push
movsl
scas
and
addl
pusha
cmp
mov
mov
sub
inc
push
lods
lock
cmp
sub
inc
dec
cmc
in
movhps
cmc
sbb
mov
fdivp
xchg
insb
jo
push
pushf
inc
xchg
aas
push
je
div
cwtl
dec
stos
mov
out
sbbl
cld
stc
icebp
imul
inc
inc
xor
out
scas
js
sub
mov
pop
testb
xchg
sub
jno,pn
xchg
and
in
adc
imul
mov
sbb
popa
jl
ss
fcmove
sbb
sub
jmp
xchg
mov
cli
adc
fiadds
test
inc
add
imul
push
mov
pop
pop
push
mov
adc
in
sbb
inc
jle
mov
dec
mov
jg
ljmp
iret
push
mov
fbld
pusha
add
daa
sbb
stos
out
dec
sahf
mov
push
nop
pop
insb
test
insb
adc
jg
movsl
mov
mov
or
inc
mov
js,pt
addl
sbb
cwtl
push
movsb
icebp
xchg
incl
sahf
sub
shrl
push
and
outsl
mov
lods
cmpsb
jne
jl
pop
or
outsb
faddl
test
sar
mov
das
insb
dec
aam
xor
mov
pause
mov
hlt
sub
aam
cmp
bound
inc
inc
lds
xor
fisttpll
fwait
add
dec
pop
xlat
std
mov
add
push
dec
data16
loopne
mov
fcomi
jbe
ljmp
add
mov
inc
mov
lret
and
push
or
cmp
std
mov
out
push
pop
inc
pushf
mov
je
adc
mov
push
inc
imul
hlt
jg
jp
out
scas
xchg
hlt
insb
push
pop
mov
jns
out
out
cld
dec
adc
call
xchg
dec
sti
into
push
loope
ret
pop
dec
sahf
inc
cmpsl
lcall
movsb
popa
mov
js
sub
pop
fwait
xor
push
adc
lds
out
push
adc
fisttps
push
mov
ret
in
outsl
pop
pushf
push
or
jae
popa
scas
dec
jbe
xchg
pop
adc
mov
jecxz
icebp
pop
sarl
sbb
stos
mov
jnp
cmp
arpl
and
sbb
cwtl
jecxz
cmp
push
insl
sub
movsl
and
fimuls
nop
call
scas
mov
sub
jge
sub
adc
cmp
sbb
stos
inc
mov
push
loop
aaa
in
push
mov
ret
xorl
pop
inc
jle
pop
cmp
mov
fimuls
sub
pop
push
aaa
insl
pop
pop
xchg
dec
xchg
in
xchg
shrl
pop
push
leave
adc
leave
cltd
mov
adc
mov
pop
ficomps
or
cmp
jp
fldt
into
jg
out
out
es
lock
lods
mulb
out
push
ret
flds
sub
add
bound
mov
adc
inc
or
fdivrp
mov
loope
fs
fsubs
mov
scas
loopne
push
sbbb
ljmp
push
xchg
pop
or
xor
loope
mov
out
stos
pop
lret
jecxz
push
adc
cmp
pusha
pop
repz
into
sub
xchg
fiaddl
cwtd
subb
insl
ss
or
lcall
jl
cmp
adc
leave
pop
sub
push
xor
fcoml
stos
xor
xor
enter
add
filds
cmpsl
ds
pop
je
pop
cs
bound
mov
cmp
push
shll
imul
jnp
pop
movsb
lods
rorb
xor
dec
sub
xchg
add
mov
jecxz
push
jo
out
and
in
and
pop
push
jns
mov
lcall
mov
jp
push
sbb
imul
dec
cwtl
mov
std
adc
loopne
and
push
xchg
test
dec
cmp
mov
lret
inc
and
dec
jp
mulb
mov
test
jne
xor
xor
clc
xchg
sub
cmp
test
fdivp
jp
dec
popl
mov
pop
int
mov
pop
stc
adc
ret
hlt
test
stos
push
xor
mov
sub
es
pop
adc
scas
outsb
into
cmp
mov
mov
push
orl
ds
jle
ficoml
xchg
imul
clc
loope
jne
pop
xchg
lcall
or
adc
push
xchg
lods
movb
dec
jle
inc
fisttps
and
stos
mov
push
push
push
filds
mov
lods
js
jno
xchg
int
pop
lcall
loopne
fmull
nop
sti
push
cwtl
push
pusha
mov
or
lret
adc
stos
pop
orl
jbe
mov
sub
popf
fnstsw
dec
and
jmp
das
and
xchg
movsb
xchg
pop
stos
dec
xor
fs
mov
dec
cmp
sbb
cli
lods
inc
push
es
pop
movsb
stos
cltd
int3
mov
mov
cwtl
xchg
xorl
jo
test
arpl
mov
aad
mov
leave
fdivrl
lret
out
push
xchg
mov
mov
popa
movsb
incl
or
cmp
add
inc
sbb
push
call
push
hlt
jbe
dec
xchg
or
fisttpll
aad
xlat
cmp
inc
dec
int3
jl
push
xor
inc
mov
sub
xchg
cmp
or
or
fcomip
insl
sub
add
add
sbb
cmp
add
cmp
lea
jne
mov
addl
mov
jnp
pop
add
rcrb
daa
loop
in
pop
xor
mov
mull
push
outsb
sbb
mov
pop
pop
sbb
mov
push
fs
sub
mov
pop
popf
xchg
icebp
xchg
dec
out
mov
mov
cmpsb
ja
ffree
aam
aam
aam
push
test
ja
sub
mov
xor
cmpsl
mov
add
jbe
ret
xchg
or
add
inc
mov
daa
xchg
jmp
and
lods
adc
pop
push
pop
in
adc
add
ret
out
das
scas
jb
jbe
sub
in
je
inc
mov
cmc
pop
xchg
dec
jmp
add
push
fcompl
push
stc
mov
int
push
popf
xchg
sbb
daa
fdivr
ret
and
xor
hlt
jp
stc
mov
mov
jle
imul
test
stos
je
ljmp
out
dec
mov
mov
sub
inc
imull
inc
fists
pop
fstpl
or
in
clc
lret
out
imul
sub
jns
sahf
scas
test
ficoml
xor
mov
pop
in
cmp
jae
sub
lds
aam
mov
add
dec
jge
mov
mov
cli
fbld
jge
cltd
push
enter
inc
mov
ret
dec
inc
mov
lret
or
aas
jb
sbb
xorl
cld
xlat
into
jge
jl
mov
mov
int
xor
stc
imul
xchg
jg
flds
cmpsl
mov
mov
clc
pushf
in
ljmp
and
and
or
add
inc
mov
in
jmp
in
lock
sbb
sub
cld
mov
es
xchg
xchg
cwtl
in
cld
jbe
dec
and
sub
bound
mov
lods
insb
mov
or
out
rcl
addr16
sbb
outsl
pop
int
outsb
aas
loopne
js
mov
mov
or
es
in
xchg
in
mov
jg
mov
jmp
or
add
fmull
xchg
adcb
xor
hlt
jg
inc
retw
stos
pop
fadd
pusha
sbb
inc
je
adc
mov
rcrb
sub
xchg
dec
mov
mov
push
pop
fidivrs
mov
inc
outsl
xlat
mov
aam
jno
imul
mov
test
ljmp
dec
andl
xor
test
out
mov
cmp
jno
adc
xchg
mov
lods
mov
int
mov
cwtl
mov
cmp
inc
pop
sahf
cltd
xchg
pop
sub
xchg
mov
cmc
mov
add
cs
cmc
sti
jle
clc
pop
hlt
inc
orl
lea
add
test
leave
inc
xchg
dec
pop
aad
dec
subl
jecxz
sbb
xchg
ja
adc
adc
lds
pop
cmc
push
or
enter
sahf
aam
test
sub
xchg
mov
idivl
inc
jmp
mov
push
movsb
and
mov
sub
repnz
mov
mov
pushw
dec
jno
das
fidivrl
test
aad
mov
gs
test
lret
lods
add
lods
mov
movsb
jns
movsb
loope
and
in
dec
imul
mov
mov
das
cmp
jae
roll
jnp
push
outsl
pop
das
mov
cmpsl
sub
jl
loope
cmp
dec
lret
mov
mov
lea
inc
hlt
das
and
in
insl
cmpsl
hlt
mov
int
mov
lock
lea
ss
into
imul
popa
xor
sub
push
inc
into
out
ror
add
inc
ss
mov
cltd
mov
xor
xor
loop
clc
sbb
test
ds
xor
mov
xchg
out
fists
lret
sub
sub
ljmp
shl
mov
mov
cwtl
and
imul
jb
test
dec
sbb
push
mov
sub
or
stos
and
in
xchg
push
adc
lcall
push
stos
nop
pop
push
ja
cli
cmpsb
mov
push
sbb
sub
cwtl
push
movsl
dec
mov
fs
mov
mov
outsl
outsb
xchg
call
das
out
cwtl
cs
fisttpl
add
fs
cli
mov
es
dec
push
nop
aam
imull
out
insl
rclb
jp
mov
js
push
inc
shlb
out
xchg
push
adc
pop
sub
xchg
push
jge
push
push
mov
movl
cltd
cmp
inc
iret
popa
jge
and
mov
ror
push
xchg
mov
xor
sbb
ljmp
mov
fcomp
or
add
aam
push
pop
fisubrs
dec
shlb
sar
scas
cmp
jb
push
lds
incl
pop
outsl
scas
push
mov
adc
les
dec
pushf
mov
std
inc
in
jg
ret
lods
pop
ss
insb
ret
inc
sub
into
xchg
movsb
xchg
es
push
jge
xchg
nop
pop
mov
mov
insl
xor
pop
or
into
dec
enter
sahf
mov
jae
mov
mov
cmp
mov
add
data16
aas
cmp
push
jbe
mov
and
icebp
mov
and
enter
and
add
popf
incl
lods
pop
ss
sub
rol
inc
scas
in
cmp
es
movl
int3
or
mov
dec
sbb
rorb
mov
xchg
pop
add
out
or
pop
dec
fdivrs
xacquire
inc
cs
shlb
enter
loopne
push
adc
mov
std
dec
ret
repnz
hlt
sti
cmp
xchg
dec
xor
add
adc
or
pop
jp
lret
push
cmp
add
test
int
int3
lods
jb
sub
xchg
into
fcom
cmp
pop
xor
call
test
xchg
xor
out
lds
xor
xchg
icebp
cs
jmp
cmpsl
xchg
movsl
add
add
xor
push
cwtl
lock
ja
out
mov
xchg
shrl
insb
sbb
cli
aam
dec
fcom
cmpb
mov
lods
dec
inc
jb
nop
xchg
jle
dec
outsl
loop
xor
mov
xchg
mov
cmp
xchg
mov
xchg
mov
das
and
andl
es
loop
jp
pushl
pop
and
aaa
cmp
icebp
je
sub
aaa
add
jecxz
adc
xchg
ss
mov
sub
outsl
nop
sub
mov
int
adc
jns
xor
dec
imul
ds
test
and
call
cmpsl
adc
hlt
data16
push
fstps
and
arpl
lret
hlt
pop
inc
dec
jne
arpl
push
or
push
lock
ror
dec
fisttpl
and
xchg
push
push
aaa
repnz
aam
test
pop
add
jo
dec
or
mov
bswap
pop
rolb
jmp
xchg
dec
fwait
sbb
jp
ret
push
repnz
sbb
or
ss
push
out
popf
iret
sarb
mov
mov
or
cmp
adc
in
insb
or
je
imul
test
or
mov
dec
cld
mov
leave
pop
cmc
inc
and
and
sbb
add
adc
lret
shrb
lea
and
mov
popa
dec
jbe
repz
hlt
inc
push
lds
or
fnstenv
sti
cmp
pushf
jle
test
mov
xor
test
mov
fldenv
ret
mov
jg
imul
push
xchg
xor
aas
js
rorl
push
cli
sti
sbb
cmp
xchg
and
fadds
fisubrs
adcb
test
push
test
neg
pop
fisttpll
xor
push
adc
mov
push
xrelease
xor
dec
jno
mov
lret
test
adc
aaa
rcl
lea
adc
lcall
push
ret
test
push
mov
add
outsb
jbe
mov
outsb
pop
mov
inc
push
gs
cmpsb
push
jl
jnp
cmpsb
add
lods
sbb
loope
pop
cmpb
fs
mov
insb
and
pusha
cwtl
out
arpl
pop
sbb
mov
cmp
outsb
push
mov
push
inc
push
stos
sbb
dec
out
pop
jmp
cmpsb
lock
add
push
rorb
scas
inc
jl
outsb
add
inc
mov
aas
xor
and
mov
sub
in
sahf
mov
sub
subl
mov
push
mov
pushf
sbb
test
pop
je
and
in
dec
imul
pop
cmc
cmpsb
sbb
pop
andb
add
popa
pop
mov
inc
pop
dec
vmread
test
sub
sbb
aam
fwait
or
xor
xchg
add
add
shll
cmp
rcl
jp
push
leave
pop
insl
out
icebp
mov
dec
pop
jge
adc
out
lahf
xlat
push
in
sbb
jl
push
xchg
mov
fildl
mov
rcrl
mov
push
cwtl
cltd
cmpb
pop
dec
push
mov
cmp
jno
vmulss
dec
popa
sbb
dec
inc
ret
pop
sub
rorl
add
out
inc
cwtl
dec
push
inc
xchg
jno
lods
inc
out
pop
add
int
fcompl
mov
outsl
outsb
fdivrl
dec
dec
xchg
xchg
push
dec
jns
and
pop
repnz
mov
jb
pop
test
cld
int
add
fs
push
pop
push
push
outsl
fwait
es
adc
jge
cmp
fidivrl
inc
push
ss
mov
mov
shl
int
and
out
dec
jae
fimuls
call
loope
aad
psubusw
fcompl
mov
xor
pop
test
pop
mov
insl
push
sub
aas
push
inc
test
test
dec
mov
dec
fsubrs
rcr
ds
pushf
cmpsb
push
mov
sub
fwait
aam
adc
xchg
test
jno
inc
mov
fadds
adc
sbb
inc
inc
xchg
lea
in
dec
aas
xchg
xlat
into
cmp
mov
cmpsb
out
cli
add
xor
sub
cmpsb
lret
cwtl
mov
test
leave
rclb
push
enter
pusha
add
stc
inc
add
rcrb
push
inc
inc
sub
cmp
inc
fdivl
lret
jne
dec
and
das
leave
stos
imul
dec
inc
call
in
scas
push
les
lret
push
fdiv
fisttpll
push
enter
pusha
mov
les
cld
in
sub
mov
sbb
push
dec
jb
sbb
and
sub
adc
dec
push
das
out
sbb
inc
push
incl
push
jne
mov
nop
cmp
out
push
mov
testl
lods
push
dec
pop
add
xor
and
xor
into
xchg
stos
test
rcll
in
push
mov
fistl
nop
movsb
jle
adc
scas
fstl
xor
pop
or
ss
xchg
jae
mov
inc
cmp
arpl
sti
and
push
pop
scas
add
ficoml
mov
push
loope
sarb
stos
jle
mov
inc
movsb
lahf
aas
push
jnp
data16
outsl
loopne
mov
lcall
pop
cmp
stos
iret
xor
aaa
mov
pop
and
lods
add
gs
xlat
dec
inc
test
movsl
dec
addr16
fwait
mov
scas
in
push
nop
dec
cmpsl
mov
sub
dec
push
rcrl
mov
aad
ret
sbb
stc
inc
jnp
mov
aaa
mov
add
ficomps
es
into
out
pop
lahf
je
dec
stc
out
sti
push
test
or
mov
add
pop
clc
jg
mov
scas
loop
inc
cs
test
sbb
mov
mov
push
adc
xchg
mov
xchg
lcall
pop
jge
in
pushf
dec
cmp
enter
push
fsub
sub
mov
in
sbbl
adc
or
mov
ja
stos
sub
dec
push
pop
dec
aaa
ss
inc
fdivs
or
cmc
inc
arpl
sub
insb
jo
jb
out
inc
faddl
stos
movsb
sub
int3
imul
mov
repnz
les
dec
add
push
push
imul
jg
cmp
mov
xor
test
inc
aad
mov
dec
mov
pop
int3
not
pop
mov
pop
sbb
icebp
xor
and
repnz
popf
adc
cltd
push
and
je
sub
adc
movsb
fdivl
insb
loope
xchg
pushf
push
fiadds
dec
pop
adc
xchg
or
loop
adc
fs
or
fucomp
aad
loopne
and
pop
and
clc
icebp
adc
inc
push
adc
test
push
insb
adc
mov
adc
jmp
push
pop
jp
push
ds
mov
outsb
call
ud2
xchg
bound
sahf
or
dec
inc
and
xchg
cmp
inc
add
mov
rorl
mov
stc
adc
xlat
sub
cmp
jmp
faddl
loopne
mov
test
pop
xor
loope
adc
push
adc
aam
pminsw
and
mov
xchg
inc
jae
fsubrs
sbbb
push
mov
pop
push
fsubrp
lret
mov
adc
or
inc
add
mov
dec
shlb
stos
mov
inc
sub
and
push
clc
imul
jne
mov
inc
int
jnp
insb
test
dec
add
inc
int
loopne
add
jnp
cmp
inc
inc
cmc
xchg
sub
or
mov
mov
jb
add
movsl
dec
jne
scas
pusha
xchg
test
lahf
xchg
push
lcall
nop
inc
scas
fcomps
stos
xor
dec
mov
scas
adc
imul
jp
xchg
xor
cmp
pop
mov
dec
rorl
fs
adc
mov
inc
pop
xchg
sub
add
popf
popa
into
fwait
pop
xchg
adc
xchg
push
or
lods
mov
dec
jge
cltd
arpl
popa
loopne
jg
and
ja
scas
pop
rolb
cmpsl
push
out
mov
hlt
js
push
in
mov
xor
pusha
push
adcl
stc
loope
mov
add
pminub
out
ficoml
dec
test
mov
out
lods
xchg
clc
leave
jns
mov
fwait
out
mov
icebp
shlb
cli
inc
cmp
outsl
outsb
add
xlat
pop
lods
push
das
sbb
jmp
jge
fisubl
iret
pop
pop
je
cmpsl
dec
mov
fs
shlb
aas
and
mov
mov
xor
sub
js
pusha
je
outsl
or
push
popl
adc
test
stos
mov
push
push
cmp
xor
mov
cli
pop
or
pop
and
mov
mov
gs
scas
lret
xor
xor
cmp
pop
dec
mov
push
sbb
dec
cmc
add
or
lret
jb
dec
cli
clc
fildl
xor
jge
mov
or
loope
loope
sbb
mov
icebp
sub
push
fcmove
loope
jnp
ss
mov
add
jmp
sbb
sbb
inc
and
dec
lock
jmp
test
jnp
mov
add
jb
popf
mov
dec
ret
push
inc
in
ljmp
or
ljmp
lods
sub
and
and
enter
scas
cmc
pop
popf
repnz
push
cs
clc
jl
adc
xorl
mov
sahf
enter
or
call
mov
push
sbb
out
fistpl
out
call
data16
loopne
ljmp
imul
sbb
jns
shlb
pushf
icebp
cmc
cmpsb
test
lahf
cmp
and
stos
in
lcall
leave
cmp
das
adc
push
nop
das
cmpsb
cmc
leave
adc
notb
shlb
jne
pop
push
cs
mov
and
jns
rorl
add
xchg
repz
jb
fldl
ljmp
and
push
or
mov
sub
jb
fistpl
rcrb
cltd
and
test
std
push
cs
stos
adc
dec
mov
or
scas
and
push
jmp
pop
orl
lea
incb
mov
xor
adc
sub
outsb
subl
cwtl
ret
hlt
in
mov
jge
or
icebp
pop
pop
add
inc
das
fidivs
std
pop
mov
or
xchg
and
xchg
lcall
and
dec
enter
jge
sbbl
adc
pop
ftst
inc
rcrb
imul
push
add
ja
dec
lods
out
jg
and
int3
ret
inc
add
mov
subl
mov
and
dec
jge
cmc
xor
push
sub
inc
push
mov
or
sub
imul
or
mov
xor
lea
ss
ret
arpl
addr16
jb
mov
repz
and
rclb
add
mov
xorl
dec
or
ret
xlat
lods
lret
lods
sbb
insw
xor
cmpsb
scas
arpl
jb
int
mov
pop
test
sbb
or
shlb
pop
xchg
mov
int3
neg
lcall
mov
or
inc
stc
repz
pop
into
jae
int3
jg
test
xor
ljmp
call
jge
pop
repz
sub
test
mov
leave
xor
outsl
cld
mov
or
add
fs
arpl
mulb
sar
lods
inc
pop
loope
or
ret
or
rorb
sti
xchg
jns
mov
push
shrb
cs
ret
pop
sarb
aaa
xor
aad
mov
cwtl
leave
decl
jae
mov
push
cs
int
aad
push
insl
icebp
push
sub
and
jle
or
cmp
and
imul
test
jle
jb
cltd
adc
xacquire
test
insb
ss
fdivl
shll
mov
inc
pop
aad
inc
mov
and
movsl
xor
clc
jnp
sbb
jae
jnp
andb
dec
ret
jns
push
dec
xor
sub
pop
inc
mov
xchg
dec
add
xchg
test
insl
dec
pop
push
inc
je
stc
xor
adc
push
lret
dec
inc
jae
xor
add
rorb
mov
xor
orl
sub
mov
pop
pop
inc
adc
arpl
pop
inc
push
scas
add
mov
fstpl
xor
jl
inc
or
aas
in
test
add
div
loop
pop
dec
adcl
lods
lods
repnz
aaa
fwait
xchg
pop
mov
neg
int3
int
and
pop
scas
cmp
lret
jle
pop
lahf
mov
inc
icebp
adc
add
int
xor
or
ds
ret
cmp
push
popa
mov
mov
popf
add
fwait
cvttps2pi
in
into
pop
sbb
mov
and
fidivrs
push
lret
daa
js
fbld
ss
mov
roll
cmp
dec
fwait
movl
jb
dec
push
and
add
dec
mov
ljmp
les
sbb
pop
jns
lods
xor
into
xchg
ret
shlb
adc
mov
sub
repnz
cmpsl
xchg
mov
sub
adcb
xchg
xlat
scas
shll
jae
jae
je
shlb
push
pop
test
fnop
out
xchg
lods
xlat
imul
xor
pop
xor
pop
mov
insl
das
mov
in
jp
mov
loopne
push
pop
std
xchg
xor
jbe
or
icebp
dec
out
fwait
mov
repz
mov
sbb
loop
cs
mov
test
test
out
push
in
push
dec
scas
mov
add
je
outsl
out
mov
mov
scas
xchg
iret
jl
inc
jl
orl
xchg
lret
dec
cli
roll
mov
sbb
cmp
xchg
sbb
ss
lods
nop
mov
mov
cltd
and
xchg
stos
push
repnz
in
or
ss
in
add
mov
and
pop
sub
mov
insb
cmpsl
mov
adc
jl
and
push
xchg
and
les
arpl
sbbl
mov
jmp
adc
iret
imul
xor
outsl
mov
sub
cmc
rcl
andl
inc
rcl
std
pop
sbb
ss
and
cltd
hlt
stos
scas
mov
adc
pushf
iret
bound
or
ljmp
dec
lahf
dec
jle
cmp
repz
popa
mov
and
adc
jle
mov
sahf
cmpsl
cltd
fnop
sarl
pop
adc
adc
xchg
push
dec
arpl
pop
pop
das
xchg
mov
or
mov
jp
dec
jbe
sahf
loop
loope
push
lods
mov
cmp
dec
addb
jmp
dec
push
or
push
fimull
adc
loop
mov
lds
fwait
lods
sarb
push
pusha
arpl
xchg
clc
or
repz
or
andl
rep
stos
adc
fisubrs
fs
xchg
mov
ss
rcll
adc
int3
insl
sbb
frstor
mov
ja
dec
call
mov
xchg
sub
adc
cmp
aad
inc
and
mov
jb
add
jmp
xchg
pushf
push
lcall
fwait
mov
or
xchg
push
mov
and
cmp
pop
lods
sub
sub
fdivs
stos
scas
and
bound
inc
pop
rcrl
aas
xor
add
rcr
cmpsb
mov
adc
insb
lret
jno
call
pop
cwtl
jp
or
fcompl
sub
je
sub
fstl
std
jne
scas
cli
call
bound
push
testl
insb
mov
xchg
jae
popf
gs
sti
rcr
out
das
xchg
push
pop
js
out
cmpsl
sub
xorb
dec
jl
xchg
push
cli
or
jmp
cmp
loop
aad
cmp
or
or
push
cmpsl
xchg
jmp
ljmp
mov
inc
divl
xchg
test
cmpsb
xor
cmp
sub
sbb
xchg
jnp
fbstp
imul
or
outsb
loopne
jns
cwtl
ja
out
jnp
int
jle
dec
dec
xchg
and
xchg
call
jmp
imull
push
arpl
push
cmp
or
xchg
fistpll
loopne
xchg
aaa
ret
inc
icebp
mov
outsb
jle
aas
cli
push
rcrl
pop
jno
movsb
xchg
cli
inc
xchg
add
or
cmp
enter
repnz
loopne
lds
add
lret
push
ja
in
inc
jmp
cmc
xchg
shrb
xchg
dec
test
pushf
mov
xchg
int3
in
leave
cmp
sbb
lret
push
mov
pushf
dec
mov
ret
sbb
or
outsl
adc
loopne
inc
mov
inc
notl
xchg
int3
pop
sub
imul
imul
jb
testb
xrelease
orb
lock
dec
test
push
mov
jg
sub
flds
mov
cmp
sbbb
mov
dec
bnd
mov
add
and
jle
rcrb
mov
lods
pop
loop
jnp
sbb
out
lods
mov
out
stc
and
mov
imul
pop
aad
jb
subl
mov
adcl
inc
mov
xorb
loope
gs
int3
lahf
enter
mov
inc
jl
std
lret
and
pushf
pop
mov
xor
mov
sub
in
add
lds
in
je
adc
adc
and
mulb
adc
ss
sbb
ljmp
in
aam
mov
loopne
lahf
aas
lret
ljmp
insl
jl
jle
lcall
xor
cli
cmp
in
stos
and
mov
insl
inc
inc
cltd
adc
push
or
shl
fdivrl
bound
int
cmp
les
add
mov
pop
add
insb
sti
lret
mov
sbb
xor
imulb
sub
pop
imul
cmp
push
push
cmpsl
pop
jp
or
cltd
dec
dec
lds
movsb
sub
or
fsubl
sbbl
sar
push
daa
lret
cs
cwtl
mov
cs
lahf
push
mov
mov
and
mov
jecxz
push
bound
inc
leave
mov
cmp
shrl
shlb
xchg
xor
ret
mov
rolb
out
xor
dec
sub
or
xor
xchg
lea
inc
sub
mov
clc
pushf
das
xchg
and
jbe
add
pop
mov
and
js
shll
fldz
call
pop
xchg
out
das
lods
lock
cld
dec
data16
scas
push
cld
and
ret
add
jbe
push
xor
jne
xchg
cltd
cmp
inc
cmp
mov
cmp
ljmp
rcr
push
call
jl
adcl
movsl
adc
or
pop
adc
jb
mov
pop
fs
out
inc
jmp
shlb
mov
sbb
jae
dec
lea
shll
push
sbb
mov
xchg
std
jle
icebp
cmp
pop
adc
cmp
adc
imul
adc
add
inc
pop
jmp
mov
jb
xor
sbb
inc
and
in
movsl
sbb
fcoml
jg
jg
xchg
not
pop
test
insb
imul
cmp
lods
lahf
add
mov
dec
xor
cmp
inc
andb
enter
lods
cs
and
add
shll
dec
push
repnz
popf
inc
and
mov
int
out
test
or
or
inc
add
out
hlt
sub
sbb
imul
or
jne
sarb
mov
xchg
aaa
shll
dec
xor
mov
add
das
cmp
mov
sbb
rorl
test
aam
cli
push
adc
mov
shlb
les
mov
sbb
cwtl
sbb
loopne
pop
and
push
sti
shll
jge
adc
mov
add
stc
pop
and
pop
mov
jne
cli
lahf
cmp
cmp
in
cmp
inc
jge
enter
adc
aaa
pop
cmp
ret
arpl
xchg
andb
das
stc
js
in
pop
arpl
stos
data16
sub
loop
pop
push
mov
std
enter
cmpl
inc
push
scas
inc
imul
mov
cwtl
mov
out
out
jle
cmp
mov
sbbl
rorb
push
sub
enter
out
pushl
call
loopne
cmp
loop
add
add
adc
inc
or
dec
lds
insb
bound
pop
hlt
jbe
test
mov
pop
jge
cmp
xorl
insb
cmp
mov
rcrl
in
stos
inc
scas
cmc
push
xchg
out
jb
nop
pop
call
inc
mov
data16
int
leave
or
ret
cs
daa
lods
adc
insb
stos
jno
push
notb
sbb
sbb
adc
cwtl
push
ljmp
jo
aad
out
xor
xchg
neg
idivb
mov
mov
and
rolb
test
f2xm1
fcomp
sbb
and
jmp
outsb
dec
hlt
sbb
idivb
pop
push
mov
adc
and
sub
and
in
aas
fildll
addr16
or
mov
inc
sbb
ss
or
dec
daa
es
shl
sub
cltd
jo
in
or
jmp
addl
inc
or
clc
or
orb
sbb
mov
mov
mov
mov
testb
pop
xlat
adc
mov
fimuls
icebp
or
and
movsb
js
push
imul
mov
out
mov
sub
adc
sub
scas
mov
addr16
adc
push
lods
mov
push
mov
and
cmp
fucomp
adc
adc
dec
cmp
test
inc
into
mov
andl
mov
xchg
or
mov
xchg
jle
clc
outsl
pop
movsb
jmp
sbb
add
sub
push
or
sbb
stc
push
inc
sahf
jl
mov
in
push
xor
pop
pop
jnp
pop
add
and
nop
sbb
pop
int3
int3
adc
orb
bnd
daa
mov
pop
loope
loop
ret
dec
fdivl
dec
icebp
test
outsl
push
or
ss
pop
inc
lea
rolb
ret
push
fsqrt
lcall
mov
xor
leave
add
into
negl
or
rcrl
push
or
fwait
inc
mov
lahf
fcompl
sbb
int3
icebp
mov
add
push
pop
loopne
mov
mov
dec
mov
aas
fstpt
adc
repz
pop
mov
mov
mov
test
cmp
jne
xchg
sub
js
test
push
shlb
enter
inc
sub
lahf
add
sub
imul
mov
cmp
xor
jle
xchg
or
or
cmp
pop
dec
imul
or
insl
and
inc
rorl
inc
pusha
loop
pusha
sti
lret
adc
sbb
movsb
sbb
inc
pop
lahf
adc
insl
lds
outsl
mov
mov
aas
lea
mov
push
repnz
lahf
cld
shll
aas
jnp
in
inc
ret
and
cmc
adc
loope
test
inc
adc
mov
sub
mov
popa
fisubl
add
cmpsl
insl
lods
lods
cs
mov
pop
jo
jne
cmpsb
mov
inc
cmp
gs
and
cmp
int
stos
cmpsb
jbe
out
lock
jnp
push
jge
mov
sub
jge
aad
testl
adc
call
mov
gs
test
inc
sahf
test
lock
mov
cmp
js
fwait
mov
adc
std
mov
jne
sub
pop
int3
jno
mov
insb
fs
out
or
adc
inc
cmp
pop
into
sub
aad
mov
shlb
sub
out
data16
test
scas
fcmovbe
pop
adc
hlt
lret
lret
add
imul
inc
sahf
jno
test
jnp
pop
ss
cld
insb
dec
lret
mov
push
in
enter
and
loopne
sbb
hlt
lods
push
cmp
fldl
call
dec
aad
sahf
les
rcrl
push
aas
dec
test
jbe
mov
adc
dec
popa
push
push
jg
into
inc
fisttpl
leave
test
xchg
jl
sub
and
cmp
subb
popf
outsl
xchg
sarb
push
lcall
lods
in
push
push
inc
lret
cld
mov
fmull
in
push
and
cmp
testb
lcall
and
adc
sbb
dec
ret
fucomp
mov
lret
and
les
lds
adc
dec
push
enter
and
pop
dec
outsb
push
aaa
mov
jne
xor
int
ret
sub
gs
out
adc
rcrl
add
xorl
jle
in
outsb
jae
fwait
push
and
loopne
repz
push
mov
icebp
fadd
mov
mov
cli
push
scas
fbld
dec
call
mov
js
mov
sbb
or
mov
jbe
fnsave
xor
aad
sub
aam
mov
and
mov
in
and
push
fsubrp
shrl
stos
sbb
cmp
jp
fmul
push
scas
adc
sbb
cwtl
sbb
push
std
mov
imul
fistl
mov
movsl
adcb
push
push
push
pop
hlt
lods
cmp
xchg
push
addr16
cld
faddl
scas
rcr
push
sub
rcll
mov
push
inc
jecxz
mov
sbb
xor
subb
dec
repz
fildl
xor
popa
sbb
rolb
data16
xor
sahf
cmp
xchg
add
dec
sahf
sti
arpl
mov
push
ficompl
sub
pop
movsb
rcrb
js
andl
adc
idivb
fcomi
push
stc
add
push
mov
ja
add
lcall
sbb
jae
mov
and
das
cmp
or
add
sub
lcall
push
cmp
adc
movsl
or
iret
movsl
mov
jmp
cmc
inc
addr16
aad
xor
stos
pop
mov
dec
cmp
outsl
mov
pop
sar
jbe
jecxz
pop
icebp
push
pop
lret
je
fisttpll
pushf
xor
cmp
sbb
mov
out
push
les
sti
sti
cmpsl
pop
cltd
ja
jb
in
sub
rcrl
mov
jbe
pop
jmp
pop
mov
add
stos
adcb
test
jns
cmc
pop
cmp
loopne
rcrl
mov
stc
sbbb
nop
inc
shlb
addr16
fdivrs
cmp
xchg
lods
jg
cmp
sahf
cmp
lret
inc
mov
js
jno
rcrb
mov
and
fimuls
inc
nop
sub
daa
loope
xchg
cmp
xchg
enter
ljmp
push
andb
push
int
and
mov
fwait
xor
int
and
cld
sbbl
xchg
imul
sbb
cmpsb
test
outsb
push
xor
lock
mov
popw
rcrl
aam
dec
pop
add
cltd
movsl
cmpsl
movsl
sarl
inc
push
fimull
push
mov
sbb
aaa
mov
into
scas
inc
sub
aad
aam
xlat
xchg
lock
sbb
pop
rorb
mov
xchg
or
rolb
mov
stos
add
testb
adc
cmp
fs
mov
cmp
les
aam
mov
push
movsl
scas
and
aaa
cmp
cmpsb
push
sbb
fadds
pop
movsb
inc
push
mov
out
lods
xor
mov
mov
cmpl
inc
sti
sbb
or
add
int3
insl
mov
or
inc
push
xchg
test
arpl
jnp,pt
rclb
arpl
mov
leave
sbb
adc
es
cmp
dec
ja
loop
xchg
push
fldl
sahf
dec
insl
dec
mov
push
cmp
and
lea
xchg
.byte
ret
xlat
lock
add
push
add
push
add
push
add
or
pop
push
add
or
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
movsb
dec
add
add
add
incl
add
add
movsb
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
scas
dec
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
incl
add
add
add
add
incl
add
add
mov
add
incl
add
add
add
add
incl
add
add
rorb
add
add
rorb
mov
incl
add
add
add
add
incl
add
add
fmull
add
add
incl
add
add
fisttpll
add
add
incl
add
add
fimuls
add
add
lcall
add
dec
add
add
add
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
ljmp
out
dec
add
out
dec
add
ljmp
dec
add
dec
add
incl
add
add
stc
dec
add
add
add
testb
testb
incl
add
add
add
call
cld
dec
add
mov
lods
mov
mov
pushl
dec
add
or
add
add
incl
add
add
or
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
incl
add
add
add
add
incl
add
add
adc
add
add
decl
adc
add
adc
add
add
add
call
dec
add
dec
add
call
push
dec
add
push
dec
add
test
je
dec
add
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
sbb
add
incl
add
add
push
dec
add
add
add
incl
add
add
and
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
push
and
clc
and
pushl
dec
add
and
add
sti
and
add
and
add
decl
and
dec
add
pushl
and
dec
add
incl
add
dec
add
ljmp
dec
add
dec
add
jge
dec
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
sub
add
jmp
ja
add
dec
add
call
ja
add
ja
add
decl
dec
add
add
add
add
add
inc
push
add
pusha
or
lock
add
push
add
push
add
push
add
or
pop
push
add
or
mov
add
push
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
leave
jb
cmp
clc
scas
lods
inc
push
subl
push
xchg
outsl
jnp
mov
arpl
std
mov
dec
scas
add
aaa
icebp
mov
aam
sub
xor
mov
sbb
mov
jbe
cmc
clc
mov
mov
mov
in
pop
pop
rclb
jge
push
clc
cmp
stos
xchg
shlb
jo
sbb
repnz
stc
mov
cmp
and
jp
loop
sbb
pop
iret
xor
ja
jecxz
pushf
mov
stc
ds
sahf
fsubrl
pushw
lcall
cmp
jb
cltd
cmp
dec
xchg
loope
out
mov
dec
fwait
in
mov
sarb
adc
dec
cmpsb
in
out
loope
in
dec
imul
push
add
adc
imul
ret
movsb
repnz
dec
fidivrs
pop
jge
and
xor
sbb
fistl
imul
nop
push
shl
sub
mov
es
mov
insb
test
jns
dec
pusha
add
mov
fbstp
loop
xchg
add
mov
ss
enter
push
in
pushf
or
cwtl
pop
int
dec
adc
fsubl
add
call
leave
push
pusha
lods
push
xor
jg
aaa
inc
roll
sbb
enter
mov
sbbl
and
inc
mov
fnstsw
sarb
ret
test
shl
loopne
xorb
fisttps
arpl
mov
sbb
lds
movsb
in
add
dec
inc
sbb
cld
adc
jno
xchg
repz
mov
outsl
mov
add
lcall
movsl
pop
cmp
or
jl
lds
cmp
push
int3
push
cs
repnz
js
mov
data16
scas
stc
mov
sahf
call
add
lahf
pop
sbb
sbb
dec
repnz
push
addb
push
mov
cmp
dec
cmp
pop
inc
mov
cwtl
inc
sub
xchg
or
lds
test
mov
pop
sbb
ljmp
frstor
in
sbb
mov
scas
jge
pop
and
test
push
jo
clc
jbe
sbb
int3
xor
and
mov
insb
mov
mov
or
cmpb
sbb
mov
push
cmp
into
mov
sti
sub
mov
cmc
popa
shrl
mov
enter
repz
fiaddl
gs
jmp
add
xchg
sub
cmp
int
pop
mov
push
std
test
inc
cwtl
loope
xchg
adc
in
out
lods
add
test
movsb
sbb
icebp
leave
xlat
push
out
mov
xchg
ja
sti
bound
insb
cmpsb
call
pop
lds
xchg
and
xchg
jg
fwait
add
test
and
xchg
pop
jmp
jo
pop
pop
mov
in
rorb
pop
das
ljmp
lret
lret
shrb
fucomi
repnz
ficomps
mov
mov
fldcw
mov
pop
out
push
rcrb
int3
pop
push
lcall
and
or
bound
xlat
test
dec
pop
adc
adc
les
cli
lcall
lahf
xor
popf
fimuls
xor
mov
adc
stc
pop
test
ljmp
bnd
daa
jno
fiaddl
int
pop
inc
add
adc
push
cld
sub
lock
mov
loopne
rclb
dec
ja
flds
jo
nop
and
cmp
pop
add
jg
pop
pop
pop
push
arpl
inc
bound
inc
mov
int
mov
mov
push
xor
mov
inc
sbb
add
cmp
or
outsl
fwait
stc
in
outsl
mov
iret
and
mov
mov
adc
pushf
pop
and
cmp
mov
js
imul
jp
icebp
add
jl
cmp
cmp
movsb
mov
popf
push
cld
or
or
ds
pop
push
sbb
mov
dec
inc
daa
xchg
cmpb
sbb
stos
push
rcl
xchg
popa
enter
movsb
into
clc
lods
adc
out
scas
gs
pop
jecxz
cmp
xor
jmp
mov
movsb
dec
xchg
popf
lods
adc
hlt
std
in
lret
add
mov
pop
sbb
ret
mov
sbb
in
sub
dec
xor
out
mov
mov
daa
daa
fs
jno
inc
dec
push
scas
lods
test
xor
xchg
scas
xchg
lcall
in
sub
in
cmpsb
test
arpl
loop
mov
cmp
out
push
addr16
pop
fistpl
dec
scas
and
inc
mov
sbb
out
xlat
push
cmp
mov
mov
shl
adc
sbbb
inc
dec
add
or
lds
test
dec
das
sub
and
lods
xchg
lahf
mov
mov
addr16
jge
or
mov
cld
cmc
shrb
dec
movsb
pop
mov
add
sub
dec
clc
jecxz
pop
push
sti
out
xchg
dec
stos
cwtl
cmp
aaa
cmc
cli
push
enter
dec
xlat
call
js
pop
ja
pushf
hlt
cmpsl
sti
jl
cmp
mov
loopne
insb
lods
or
addr16
ljmp
imul
fnsetpm(287
aam
icebp
jns
push
loopne
inc
lret
jns
mov
shlb
dec
in
ss
daa
les
enter
push
rclb
xchg
adc
shl
imul
jne
out
cld
push
movb
or
xor
sub
mov
sbb
xor
lds
fidivrl
es
hlt
das
sub
jl
bound
jnp
test
mov
fwait
dec
adc
jle
outsl
addr16
mov
in
adc
sub
mov
mov
jae
adc
inc
neg
xor
push
std
outsl
int3
pop
nop
test
mov
pop
mov
adc
int
cmp
js
fnstenv
push
sub
or
fstps
xchg
loopne
sahf
mov
mov
clc
dec
shlb
jns
negl
add
sahf
rolb
icebp
mov
arpl
jmp
dec
bound
adc
adc
mov
fsub
inc
inc
adc
and
stc
cli
add
cld
popa
mov
add
jne
sahf
je
movsb
out
ret
xchg
pop
or
stc
movsl
loopne
out
movsb
call
mov
ljmp
addr16
int
or
mov
js
xchg
call
inc
inc
sub
outsl
add
sbb
loope
xchg
lock
sub
je
mov
or
aad
fstpt
xchg
les
or
mov
pop
rclb
mov
notb
xchg
insl
push
stos
lock
ret
adc
cmp
xchg
dec
in
popa
and
mov
cmp
inc
push
mov
mov
sbb
or
popf
shrl
and
push
js
gs
push
pop
mov
mov
mov
mov
dec
add
pusha
or
fldt
xor
pop
cmp
push
ss
mov
scas
adc
sahf
imul
jmp
pop
lds
popf
and
mov
shl
cwtl
adc
cli
movhps
shrb
outsl
es
mov
xor
mov
cltd
aas
xor
fcomi
push
hlt
xchg
adc
lods
xor
aad
pcmpeqb
xchg
aad
push
je
mov
imul
sub
sbb
push
push
jmp
xlat
sub
xor
in
icebp
ror
pop
inc
out
jnp
aas
xor
outsb
inc
andb
scas
ret
testl
cmp
daa
jns
shrl
add
pop
nop
lock
xchg
bound
cld
jge
jb
sub
ffree
cmp
fwait
cmp
ss
mov
xchg
popa
mov
jp
imul
ss
stos
or
pop
rcrl
scas
jns
outsb
push
pushf
out
lahf
sbb
sbb
jp
sub
shrl
push
jg
js
into
enter
dec
and
iret
add
mov
cs
lahf
xchg
fcom
cmp
mov
sahf
in
in
dec
pop
pop
int
popa
movsl
out
fwait
jne,pn
insl
in
xchg
enter
cld
iret
shlb
inc
jnp
pop
aam
push
stos
mov
mov
scas
dec
dec
scas
or
scas
popa
in
xchg
push
cmp
lods
cli
mov
jns
sub
mov
xchg
add
mov
cmp
xchg
movsb
not
push
push
inc
xchg
fwait
mov
xchg
out
inc
lcall
mov
lret
push
xor
jg
push
cmp
xlat
inc
out
ljmp
stc
jp
shrl
stos
scas
dec
stos
fwait
cmp
push
ret
sti
test
ja
jmp
sub
jmp
pop
sub
rcrl
push
adc
ror
sub
xchg
xchg
repnz
scas
cmp
xchg
aad
inc
test
rorb
xchg
xchg
bound
mov
addr16
xor
lret
jle
outsl
xchg
adc
adc
and
jo
mov
mov
loope
fsubrs
jl
mov
ss
push
lahf
jae
movsb
mov
and
mov
jle
lahf
mov
pusha
sarb
test
arpl
insl
shr
cmc
pop
jge
pop
and
lock
nop
sbb
fidivrs
repnz
cli
xchg
cmp
cmp
jecxz
or
movsl
adc
ret
fdivl
inc
add
and
aam
fwait
and
cwtl
pop
sbb
sahf
shll
sub
sub
mov
jmp
cltd
pop
jb
je
xchg
jbe
pop
icebp
imulb
mov
xchg
aad
daa
xor
leave
sahf
call
aaa
int3
jge
cmp
imull
andb
test
jge
push
mov
std
sarb
xchg
dec
xor
scas
es
ds
movsb
sbb
test
in
ret
jb
xchg
fnsave
pop
mov
aaa
ret
stos
add
or
cmp
mov
mov
jnp
cmpb
out
mov
shrl
bound
fdivl
outsb
jge
sar
std
cmp
aaa
outsl
daa
cmp
xchg
mov
add
in
push
adc
fisubrs
pop
sub
or
andl
fsub
jmp
jle
or
sbb
rorl
aaa
jnp
mov
push
scas
ret
add
ret
cmp
mov
out
insl
out
cld
or
daa
mov
in
stos
insb
out
xorl
cli
adc
lahf
jnp
cmp
or
push
gs
dec
mov
mov
repz
xchg
lcall
in
push
std
xchg
shl
lea
ret
nop
jl
jmp
cld
bound
pop
mov
movsb
nop
dec
jae
movsb
pop
xchg
jnp
mov
testl
loope
test
jno
rcl
dec
and
or
enter
fsubrp
daa
fildll
mov
mov
dec
and
push
cld
cmp
sub
frstor
adc
jnp
inc
aas
fidivrl
xor
cwtl
pop
lcall
jno
repz
pop
adc
push
test
pop
and
sbb
push
mov
add
int3
sbb
add
bound
xor
sahf
push
push
mov
xchg
push
mov
fwait
adc
jl
leave
mov
push
sub
mov
fidivrs
jg
monitorx
in
or
movsbl
repnz
jbe
daa
les
mov
cmpl
cmpsb
movsbl
push
inc
pop
jg
mov
adc
mov
daa
xor
jmp
push
int3
dec
push
call
je
mov
mov
fistl
das
in
xchg
into
inc
cltd
or
test
xlat
mov
fistps
nop
sbb
scas
mov
pop
rclb
call
mov
mov
fstl
shlb
mov
mov
jb
push
cmp
and
ffreep
jb
add
mov
mov
rorl
dec
mov
mov
cltd
cmp
add
out
push
out
cmc
dec
xchg
fistps
sub
inc
mov
push
roll
nop
cmp
test
outsb
addl
and
jecxz
lcall
arpl
daa
sbb
sbb
xlat
lods
sub
or
mov
jp
xor
cmp
inc
xorb
cmp
inc
cmp
pop
shlb
int
dec
adc
fwait
adc
cwtl
pop
dec
push
mov
jp
jno
or
inc
adc
out
cltd
fildl
dec
jbe
and
dec
es
add
inc
mov
xchg
dec
pxor
clc
and
in
jmp
adc
mov
sbb
scas
scas
push
call
out
jp
push
jmp
cmp
popa
or
lods
add
jl
scas
and
sbb
mov
or
adc
mov
bound
mov
push
dec
orb
aam
test
mov
lret
and
add
jb
sbb
lods
and
mov
xor
cltd
adc
push
jbe
xchg
ss
ss
sub
pop
or
les
xlat
add
mov
pop
mov
mov
dec
sbb
stos
push
mov
mov
lahf
ljmp
cwtl
sbb
imul
pop
mov
mov
into
aam
push
pop
inc
nop
enter
bound
aad
mov
xchg
enter
cmp
pop
sub
xlat
cmpsl
xchg
mov
inc
inc
xchg
repz
ss
xchg
ja
push
or
fwait
xchg
xchg
aaa
xor
sub
fcmovbe
and
daa
jb
scas
inc
arpl
xchg
inc
das
ret
and
test
mov
xchg
inc
nop
nop
sbb
shlb
dec
lds
mov
dec
mov
negl
mov
rcll
pop
test
ftst
pop
iret
pop
sbb
filds
cmpsl
jle
lcall
arpl
int
mov
sbb
push
sub
icebp
and
lock
xor
rcr
mov
jnp
dec
fisubrl
jmp
lods
in
push
das
pop
jge
int3
rsqrtps
movsb
pop
rcl
sub
testl
jmp
shl
push
lods
inc
pop
push
aad
xor
adc
lds
xlat
rcll
in
iret
dec
cmp
inc
sub
repnz
and
dec
inc
jg
bound
fcos
popf
cmp
imul
in
ds
jecxz
jb
lret
xor
jge
inc
add
in
xchg
arpl
and
jo
jmp
leave
out
shlb
aas
or
repnz
xchg
fwait
jns
cmp
sbb
mov
pop
ret
fidivs
mov
pop
adc
insl
push
mov
ja
push
adcb
add
or
popa
loope
loopne
inc
xchg
repnz
lods
in
and
inc
or
cmc
and
mov
inc
je
testl
adc
stc
loope
inc
sub
arpl
add
movsb
insb
lret
fistl
test
or
xchg
pop
aas
in
jecxz
or
inc
jle
sub
push
out
cmp
mov
cld
xchg
pop
shrb
jns
sub
or
mov
mov
nop
mov
ret
mov
std
xchg
fidivrl
jne
mov
xlat
jae
mov
in
mulb
adc
je
loope
adc
xor
ljmp
adc
inc
push
adc
test
adc
inc
cs
add
gs
inc
push
int3
sbb
insl
add
mov
jnp
pop
xchg
rolb
clc
mov
pop
ss
fs
xchg
mov
popa
cmpsb
fdivrs
in
fxch
sbb
repnz
adc
dec
cs
mov
lahf
cmp
js
dec
xchg
jbe
push
jge
dec
or
mov
xor
adc
enter
repnz
add
jp
lock
sub
sbbb
pop
and
cmp
sub
mov
enter
jo
enter
xor
or
mov
int3
mov
push
outsl
push
mov
inc
fwait
jns
xor
lea
xlat
pop
dec
ret
iret
jmp
xchg
cli
pop
push
repnz
repz
lret
clc
add
sbb
cmpsb
js
inc
jnp
inc
mov
mov
dec
fisttps
inc
std
mov
sub
lds
rcr
loope
icebp
mov
push
stc
lret
pop
jns
js
insb
and
or
loope
inc
pop
cmp
lret
inc
push
add
aaa
scas
inc
sub
push
mov
mov
loope
inc
enter
lea
mov
ljmp
inc
inc
pop
add
sub
imul
push
push
xchg
sub
je
aam
mov
cmp
mov
jns
lds
adc
xchg
mov
dec
or
out
adc
and
out
mov
lods
push
les
jno
push
out
xchg
cmp
cltd
cwtl
test
lods
or
mov
outsb
add
scas
cmp
jecxz
jecxz
shrl
shlb
out
popf
loope
and
mov
inc
jae
pop
xchg
mov
lcall
fistpl
aam
push
xchg
adc
cwtl
leave
call
mov
sub
dec
iret
dec
das
popl
add
int
movsl
push
mov
jnp
cmpsl
cld
or
notb
sbb
shrl
mov
bnd
jg
ljmp
popf
mov
or
lods
jne
push
repz
bound
inc
cmp
push
pop
je
cltd
pusha
fiadds
movsl
test
out
mov
or
imul
das
cmp
dec
pop
sbb
out
inc
mov
call
out
inc
mov
push
clc
in
xchg
sub
jecxz
xlat
jb
cmpsl
sub
inc
xor
push
stos
dec
loope
hlt
and
cmp
and
into
mov
sti
movsb
push
pop
mov
jb
stc
sub
inc
cli
xchg
ret
dec
orl
movsb
jl
icebp
xor
adc
cmpsl
fdiv
aam
cli
inc
push
push
pop
jg
sbb
test
clc
test
lods
nop
testb
cmp
xor
leave
xor
mov
mov
mov
or
cmp
xor
sti
sub
xor
out
cmp
mov
add
in
add
stos
popf
pop
iret
movsl
int
push
add
insb
shrl
push
mov
lret
xchg
cmp
cmp
negl
mov
aad
xorb
lcall
push
lret
leave
out
adc
pop
imul
std
in
cmc
repnz
sub
ret
out
lret
pop
mov
fdivl
mov
jge
sub
or
cmp
jp
push
jae
fwait
jle
movsb
test
enter
call
scas
loopne
push
cmpsb
rcll
adc
dec
mov
mov
dec
mov
outsb
decb
ret
cmp
mov
mov
fwait
jae
and
jmp
push
es
push
sbb
mov
or
adc
pop
pop
pop
mov
push
mov
jg
mov
jno
sub
inc
push
cld
shrl
push
or
test
mov
hlt
clc
push
dec
rorl
sahf
sbb
imul
in
jmp
leavew
push
inc
mov
adc
jg
daa
cmp
fidivs
push
jp
or
adc
out
dec
sbb
pop
lret
or
push
jge
fwait
xor
data16
jae
xchg
fnstcw
adc
mov
add
pusha
cmc
ret
cld
ja
mov
cmpsl
gs
inc
jae
adc
add
pusha
lcall
add
xor
movsb
repz
mov
inc
push
les
outsl
mov
inc
outsl
xor
insl
clc
inc
or
sub
popa
pop
inc
dec
loop
sbb
leave
test
js
inc
sub
mov
and
aas
sti
sub
in
lcall
pop
xchg
or
xchg
mov
mov
aaa
mull
push
inc
push
mov
in
test
jo
mov
je
lret
adcb
xchg
xchg
adc
sarl
aad
pop
cld
es
popf
jecxz
mov
add
cld
jo
test
mov
pop
call
fwait
xor
loopne
aaa
insb
cmpsl
cmpsb
stos
adc
jb
xor
int
test
dec
test
sub
clc
test
mov
sub
sbb
lea
and
or
fsub
pop
in
sub
push
fmull
mov
sbb
and
xor
cmp
xchg
xorl
nop
std
push
and
push
xor
jl
fcoml
adc
sti
xor
xchg
js
divb
sti
ljmp
inc
cmc
test
jmp
jle
xor
aaa
dec
xor
add
cs
mov
in
mov
push
push
cmpsl
int
fsubl
shrb
pop
sbb
leave
mov
mov
xchg
rcrb
push
and
fists
daa
scas
inc
push
imul
cwtl
dec
mov
bound
mov
out
das
es
inc
jo
sbb
fcompl
fstps
fadds
test
dec
iret
fsub
mov
inc
lret
push
inc
test
xchg
push
std
mov
push
inc
mov
iret
pushw
arpl
sub
mov
mov
push
lcall
stos
sarl
pop
aad
or
push
neg
jb
cmc
popf
add
sbb
scas
lret
add
push
divl
stos
inc
dec
daa
adc
jo
jo
pop
push
rorl
sbb
jge
ret
scas
lea
jp
mov
ror
or
adc
mov
aaa
push
pop
lahf
dec
movb
push
sub
lret
cmp
es
push
mov
pop
stc
sub
fsubl
scas
popa
or
test
scas
inc
mov
or
and
scas
mov
mov
and
sub
inc
cld
mov
mov
push
fmull
cmpl
push
mov
sbb
call
aaa
mov
mov
dec
test
imul
loope
xor
cli
out
repz
lods
xchg
sub
mov
sbb
jb
xchg
test
mov
xor
mov
push
sarl
js
jae
subl
and
jmp
mov
pop
es
loop
cmp
xchg
shr
mov
fistpl
push
aad
push
shrl
sub
icebp
mov
xchg
cmpsb
pop
push
aaa
inc
out
sub
and
insl
ljmp
enter
lock
dec
inc
or
leave
cmpsb
scas
mov
in
mov
.byte
