test
lods
nop
fistl
fsts
test
lahf
sti
inc
cli
sub
shrl
fs
leave
sub
insl
and
pop
jecxz
inc
cmovbe
pusha
inc
adc
mov
mov
sbb
call
cmp
jno
je
aam
das
lret
jle
js
mov
and
clc
add
in
sti
push
lods
in
test
rcr
into
in
fisubrl
aaa
pop
pop
into
xchg
xor
and
adc
out
movsb
jb
add
inc
test
clc
xor
adc
jne
int
xchg
dec
movsb
imul
repnz
popf
add
fsts
nop
add
hlt
frstor
pop
cmpb
cmp
xchg
lods
jb
inc
adc
arpl
mov
push
dec
icebp
pushf
push
push
test
inc
mov
jns
cmp
adcl
inc
in
mov
mov
aam
push
imul
cmp
push
mov
push
sub
mov
out
pop
mov
pop
test
popf
pusha
or
jecxz
adc
nop
jne
xchg
jbe
dec
pop
lds
sbb
add
rorl
sti
out
das
add
fcmove
aad
mov
icebp
mov
mov
jbe
dec
nop
jle
sahf
jle
xchg
data16
insl
aas
mov
xor
mov
sbb
or
test
rolb
mov
xchg
push
nop
mov
mov
in
bswap
adcb
cmp
mov
fdivs
imul
insb
fildl
adc
adc
mov
fxch
fisubrs
cltd
mov
movsl
test
bnd
jge
dec
jbe
inc
pop
mov
aaa
pop
iret
cmp
jne
and
cmpb
pop
cltd
clc
inc
rol
arpl
and
popf
xor
cmpsl
xor
jo
aad
stc
aam
push
and
xchg
push
xchg
orl
mov
jg
aaa
loope
arpl
sub
inc
xorb
or
inc
mov
push
cs
mov
push
pop
insb
adc
add
or
adc
mov
add
jmp
nop
mov
mov
lcall
lret
rclb
icebp
jge
jbe
inc
outsb
lds
mov
xchg
add
jmp
ljmp
das
add
push
xor
inc
stc
es
add
xchg
xchg
les
cmp
pop
int3
xchg
jo
cld
and
fsubs
and
sbb
or
pushf
stos
xor
xor
test
push
hlt
iret
rorb
das
lds
adc
mov
push
jp
pop
push
cmp
insb
adc
ja
mov
add
enter
into
add
cli
sbb
sub
add
pop
push
mov
pop
jecxz
cwtl
in
outsb
mov
data16
cmp
add
add
adc
sbb
cwtl
dec
jno
jns
je
jno
ja
inc
jl
int3
js
xchg
cli
fs
ds
jp
xor
inc
xchg
xor
je
mov
push
sub
data16
enter
ja
inc
xor
inc
mov
xor
push
jp
sti
xchg
dec
inc
jno
add
pop
mov
jge
pop
xchg
inc
js
mov
cmp
in
dec
push
lahf
repz
sub
imul
inc
std
mov
adc
daa
mov
push
cs
adc
push
or
cmp
insb
scas
es
cmp
and
nop
cmp
mov
repnz
shlb
mov
and
nop
dec
mov
and
add
xchg
xor
movsl
cmp
jl
jmp
sarb
dec
sub
loopne
sarl
push
sti
xor
arpl
int
push
and
jae
xchg
sar
push
cmpl
xor
sbb
lcall
fmul
add
scas
sti
cwtl
cmpsl
jae
sub
cmc
add
cmpsb
cmp
xchg
outsl
cmp
inc
mov
xchg
xchg
ss
cltd
pop
sub
fsubs
adc
gs
das
lock
cmp
daa
in
xor
cld
cmpsl
xchg
out
adc
data16
repz
fisttps
add
test
call
idivl
push
es
dec
jmp
dec
lahf
gs
lahf
push
jo
cltd
mov
int3
pusha
inc
adc
push
mulb
inc
mov
or
and
mov
out
sarl
fdivrs
mov
mov
rolb
inc
adc
jns
mov
dec
lret
pop
mov
imul
mov
daa
cmp
loop
jp,pt
in
or
gs
fmuls
cmp
mov
mov
das
mov
ljmp
les
and
jge
lret
sub
xchg
sbb
hlt
cs
or
iret
pop
xlat
test
cmp
inc
rorl
xchg
out
cmp
cld
push
add
sbb
cmp
in
ror
xor
sti
out
or
jo
shlw
js
sub
push
je
or
pop
push
mov
pop
nop
push
push
push
push
lea
push
push
push
push
jnp
jge
jns
shl
nop
std
cld
stc
test
nop
mov
xchg
nop
push
push
shl
pop
pop
jns
cmc
lea
push
inc
pop
and
nop
jp
push
push
mov
pop
pop
jbe
rol
rol
dec
inc
jmp
jmp
call
cmc
push
push
push
sub
pop
pop
pop
rol
push
sub
pop
test
add
mov
or
jg
push
push
push
cltd
pop
pop
pop
mov
cmc
cld
push
add
push
pop
pop
push
push
pop
pop
cmp
cmp
cld
lea
jo
push
add
mov
pop
jne
jg
push
rol
pop
nop
sub
push
push
push
pop
pop
pop
clc
nop
lea
mov
ja
ja
jbe
push
and
pop
je
push
test
pop
xor
jb
dec
inc
cmc
lea
cld
test
jne
jmp
push
mov
pop
cmc
push
add
pop
xor
add
cld
nop
stc
push
xchg
pop
push
pop
xchg
pop
xchg
xchg
test
and
rol
ja
push
test
pop
mov
jp
test
cmc
stc
clc
nop
inc
test
jl
push
push
sub
pop
pop
jmp
lret
xchg
xorb
mov
ds
aam
stc
jle
xor
imul
jl
stos
ficompl
pop
mov
pop
cmp
es
sub
ds
jnp
movsb
dec
fwait
popf
outsl
psubusb
fwait
imul
imul
jne
test
push
movzbl
mov
jg
sub
sub
sub
push
sub
pop
jnp
push
jg
shl
pop
add
push
and
pop
ror
cmp
push
jg
push
add
pop
or
jge
js
ja
push
cld
pop
shl
loop
pop
or
nop
loop
jecxz
mov
clc
inc
stc
loop
jecxz
adc
xlat
jmp
mov
inc
mov
push
cmp
push
adcl
ror
cld
cld
jmp
jns
jp
and
jae
and
jle
test
mov
daa
ds
add
jmp
movsb
std
or
inc
dec
jb
dec
das
arpl
inc
mov
test
xchg
nop
mov
mov
cmc
mov
jno
negl
cmp
mov
and
sbb
inc
lods
cli
fcompl
pop
push
jo
mov
add
icebp
add
std
in
add
or
add
add
add
add
rcl
add
fiaddl
add
sahf
add
add
add
add
add
add
add
sub
divl
decl
lods
xchg
xor
loopne
xchg
ficompl
pushf
lahf
sub
lcall
xchg
fnstsw
cld
lods
fistpll
push
repz
shlb
fnsave
add
jp
faddl
jae
mov
iret
je
mov
xor
sbb
mov
jae
sahf
mov
fdiv
xorb
scas
jge
sbb
cmpsl
jns
icebp
mov
fsubr
lahf
jp
cltd
add
fsubl
pop
jae
lahf
sgdtl
decl
add
mov
cli
pushl
add
add
roll
add
pop
leave
cli
push
in
lcall
decl
add
stc
idiv
or
loop
incl
push
sar
or
add
into
add
add
add
aad
add
flds
add
popf
add
std
xchg
testb
movb
add
add
add
add
add
incl
dec
add
add
add
and
add
sub
add
or
testb
testb
in
add
std
pop
add
std
push
add
std
inc
add
std
dec
add
std
insl
add
std
popa
add
std
jne
add
jns
add
jge
add
jno
add
add
imul
add
inc
add
push
add
pop
add
sbb
add
incb
add
sub
add
xor
add
mov
add
movsl
add
test
add
mov
add
ljmp
add
fiadds
add
lds
add
leave
add
in
add
fsubp
pushf
sahf
rolb
add
and
incl
add
add
out
incl
into
add
cli
int
add
roll
cli
aad
and
fstps
add
jae
incl
sub
add
push
incl
outsb
add
cli
mov
add
mov
add
loop
pushf
sahf
int3
faddl
add
push
idiv
add
add
add
std
clc
add
cli
pop
add
cli
push
add
cli
inc
add
loop
fwait
xchg
int3
sti
add
xchg
push
add
xor
sub
std
push
incl
lret
stc
add
stc
imul
and
inc
popf
xchg
xchg
loopne
incb
sahf
add
std
push
idiv
add
add
std
ss
std
jbe
add
mov
or
fnstsw
add
stc
mov
add
stc
movsl
add
stc
test
add
stc
addl
add
cltd
add
stc
fldl
add
roll
add
lds
add
leave
add
stc
in
add
stc
loope
add
cmc
add
stc
stc
add
sti
std
add
sti
icebp
add
sti
in
add
jmp
add
sti
roll
sti
aad
add
flds
add
popf
add
sti
xchg
add
sti
test
add
mov
add
lods
add
sti
mov
add
sti
mov
add
sti
xor
add
and
add
sti
or
add
sti
adc
add
sti
pop
add
sti
push
add
sti
inc
add
sti
dec
add
sti
insl
add
sti
popa
add
sti
jne
add
jns
add
jge
add
jno
add
add
cld
imul
add
inc
add
cld
push
add
cld
pop
add
cld
sbb
add
cld
add
add
cld
sub
add
cld
xor
add
cld
mov
add
cld
movsl
add
cld
test
add
cld
addl
add
cltd
add
cld
fldl
add
roll
add
lds
add
leave
add
cld
in
add
cld
loope
add
cmc
add
cld
stc
call
sub
fnstsw
mov
fst
dec
faddp
lods
js
add
inc
fidivs
add
nop
out
arpl
rcr
fisubrs
xchg
ret
mov
shrl
out
sub
cmc
mov
jns
arpl
pop
mov
hlt
mov
dec
and
loop
stc
loopne
aad
hlt
push
clc
fcomps
cmp
jo
call
jmp
or
and
pop
sbb
call
out
jmp
incb
mov
stc
lcall
sub
scas
sbb
push
loop
add
sbb
fisttpll
mov
sahf
and
jl
fsubr
out
mov
mov
movsl
pushf
ja
aam
and
xor
jae
mov
cmp
sahf
data16
add
call
fidivl
add
inc
fs
insb
mov
ljmp
sbb
xchg
adc
cmp
mov
mov
ja
inc
js
push
loope
cmc
fxrstor
xchg
adc
or
ja
scas
out
xchg
fst
fidivs
fists
fst
es
fucomi
ja
je
ss
pop
popa
push
outsl
loopne
cs
out
sar
stos
push
xor
in
imul
in
ss
and
ret
into
jmp
fbstp
mov
or
xchg
push
int3
out
or
in
mov
aam
fs
xchg
daa
and
cltd
mov
out
sbb
xchg
ret
jecxz
jl
out
xor
out
pop
add
loope
cld
movsl
roll
mov
out
loopne
repnz
ja
movsb
pop
jae
lock
out
hlt
hlt
push
inc
out
loopne
xor
pusha
or
mov
jo
leave
pop
js
mov
add
leave
cmpsl
sbb
aaa
mov
jg
int3
cmp
jle
js
mov
xor
or
ja
dec
je
pop
sarl
negl
stos
xchg
hlt
lods
gs
lea
mov
stc
or
mov
sahf
sbb
aas
enter
in
sarb
aad
mov
fidivrs
lods
aas
jbe
insb
push
out
xlat
push
out
cmp
adc
pop
ret
je
sbb
push
cmc
in
outsl
sub
push
js
lods
push
xor
jle
push
stos
cmc
xchg
mov
cltd
cli
into
sarl
shl
std
xorb
sahf
fwait
add
insb
rclb
xchg
xlat
test
scas
xlat
out
adc
jge
imul
lock
xchg
enter
mov
repnz
push
fnstcw
fists
lcall
fistpl
mov
adc
dec
test
cmp
add
cltd
mov
adc
jbe
pusha
cmc
ljmp
cmpsb
or
xor
sbb
mov
bnd
mov
ret
insl
fcoms
pop
jge
xorl
subb
cmp
mov
add
add
inc
movsb
das
push
jne
push
xor
outsl
dec
inc
push
sbb
add
xor
fistpll
je
cmp
jl
inc
or
call
dec
out
cs
movsl
roll
dec
adc
add
dec
loopne
ja
xchg
roll
xchg
dec
into
sti
inc
cmp
mov
xchg
mov
mov
xor
mov
cmc
inc
mov
mov
sbb
add
lret
out
hlt
fsubrl
inc
and
pop
cli
je
cmp
mov
popf
add
pop
in
enter
mov
lock
xchg
fisttps
call
cmp
mov
insl
dec
push
pop
sub
les
push
in
mov
testl
out
data16
lock
xchg
dec
in
xlat
jecxz
jge
jge
in
hlt
in
and
sub
cltd
sti
cmp
add
xchg
outsb
aad
cmp
mov
cmp
sahf
pop
jne
jb
movsl
scas
or
out
jg
pop
ja
lret
mov
sti
out
sbb
ljmp
outsl
push
lods
fdivp
mov
inc
jnp
pop
fstps
data16
cmp
test
push
dec
or
mov
lods
xchg
lds
in
in
mov
and
lahf
push
sahf
pop
bound
notb
in
or
mov
mov
iret
or
push
adc
std
jl
push
and
xor
push
sarb
jmp
hlt
xchg
jnp
sbb
pusha
sub
dec
pop
lock
adc
test
inc
pop
imul
jns,pn
scas
xor
inc
out
jno
scas
add
fidivs
sti
out
xchg
pusha
cmc
je
push
clc
sbb
jne
js
nop
lods
jl
cmp
inc
mov
fwait
jp
cmp
fucomip
mov
cwtl
das
add
icebp
push
pusha
jbe
sub
int
les
pusha
dec
f2xm1
mov
xchg
stc
adc
hlt
inc
push
clc
test
out
xchg
pop
out
cmp
push
inc
cmp
scas
add
aam
push
mov
or
add
call
xor
in
lea
sbb
mov
and
xor
mov
mov
add
pop
push
xchg
mov
imul
mov
mov
lods
sub
lock
jle
sahf
push
or
lcall
cmp
test
lock
mov
adc
bswap
sbb
lods
addr16
and
inc
fbld
push
jne
ss
pushf
fwait
data16
inc
ja
test
mov
pop
mov
mov
repnz
fidivs
dec
push
aas
cmp
sti
add
add
jnp
test
addr16
pop
mov
aad
filds
lret
push
lock
push
push
std
jg
jmp
xor
sbb
mov
lock
mov
lea
fwait
and
gs
insb
sub
push
imul
jle
cmpsl
enter
mov
mov
inc
lods
mov
mov
sti
repnz
stos
mov
stos
ret
popf
pop
inc
out
call
or
xor
dec
scas
inc
mov
xchg
xchg
pusha
pop
stos
push
and
jnp
pop
cmp
and
sbb
jmp
pop
jmp
sti
jns
lea
out
and
ret
mov
jmp
ja
push
outsb
fmuls
or
inc
xor
sti
xchg
div
mov
inc
scas
add
lods
lds
sti
lahf
xor
enter
adc
xor
inc
mov
adc
test
ficoml
cli
int
scas
or
in
ds
jmp
jmp
push
jecxz
or
stos
lret
jmp
in
in
push
dec
mov
xchg
mov
inc
in
out
inc
test
sbb
mov
xchg
mov
sbb
inc
mov
ret
adc
mov
xor
repnz
or
jae
cmpsl
mov
cmp
les
jnp
push
and
pop
mov
jmp
js
insb
inc
cmpsb
ljmp
imul
mov
mov
jnp
jns
mov
jecxz
cmp
shll
loope
push
hlt
cld
mov
adc
cmpsb
scas
mov
shll
insl
xorb
rcrb
push
push
dec
or
std
mov
lock
in
mov
jg
push
fsubr
jnp
fucomi
subb
in
sub
repz
jo
add
fxch
test
or
cmpsb
es
movsb
out
mov
cmp
daa
testb
push
mov
dec
xchg
ret
sub
jg
lret
dec
xor
daa
sbb
and
push
stos
aam
into
iret
ljmp
lahf
sbb
rcrl
punpcklbw
iret
ljmp
inc
rcll
test
mov
pop
dec
jns
and
xor
cmp
pushf
in
outsl
cli
rorb
dec
jg
xchg
xchg
ficomps
push
add
in
push
mov
or
scas
mov
cmp
fnstcw
nop
popa
or
inc
mov
fsubs
dec
jae
pop
inc
cmp
jae
nop
mov
xor
mov
inc
mov
aaa
fidivrs
push
fcmovnbe
mov
cmp
fwait
addl
aas
jno
movsl
cmpsl
cmp
or
mov
je
dec
jecxz
pop
push
or
fidivrs
mov
xchg
push
jns
pop
cltd
sbb
frndint
add
mov
push
movsb
or
loopne
test
mov
loop
dec
orl
add
xor
add
fistps
out
dec
sahf
mov
push
inc
filds
out
adc
or
mov
rorb
jns
xor
cmpsb
mov
mov
mov
jle
sbb
mov
stos
cltd
add
pop
and
pusha
int
sub
gs
push
add
addr16
mov
lds
repz
ja
popa
sbb
pop
cmpsb
into
int
fdivs
in
enter
aam
push
in
in
in
jns
and
daa
adc
fwait
xchg
ljmp
or
addr16
push
adc
insb
subl
es
adc
jns
lods
bound
in
addr16
pop
fbstp
lock
cli
adc
roll
lods
or
outsb
cmc
xchg
mov
test
cli
leave
imul
add
jno
xchg
mov
fcomps
jp
pop
insl
movsb
pop
popa
add
lods
das
and
mov
repnz
mov
andl
iret
mov
mov
lock
imul
and
pop
out
mov
pop
hlt
out
mov
lret
stc
mov
inc
mov
or
dec
cmp
and
xor
les
bound
stc
flds
pop
pusha
adc
das
push
mov
pop
mov
sbb
lcall
test
add
mov
cmp
mov
addr16
cld
sub
xchg
pop
daa
or
push
pop
xlat
shl
jp
lea
daa
xchg
adc
stc
mov
jno
sti
mov
jecxz
cmp
popf
adc
lret
ljmp
faddl
push
mov
mov
push
popa
lods
call
add
jp
adc
jns
xchg
fwait
jne
scas
xchg
pop
pusha
fxch
xchg
jmp
out
sub
inc
mov
iret
xor
mov
lret
inc
xchg
fnstcw
add
out
and
inc
ss
jnp
cmp
cmp
pushf
sbb
jmp
call
jo
push
roll
mov
sbb
out
dec
in
cmp
lock
int
dec
mov
stos
xor
aam
sub
pop
add
jecxz
int3
and
arpl
adc
push
dec
in
std
xchg
adc
xor
adc
inc
and
jns
jge
xor
mov
pop
sbb
adcb
add
xchg
idiv
dec
ja
ss
in
sbb
or
scas
sub
aam
mov
push
out
jmp
out
dec
or
xor
call
outsl
mov
aad
addr16
push
xchg
fdivrp
dec
cmp
js
loope
pop
sbb
mov
jne
and
xor
rorb
movsl
testl
stos
bound
je
and
mov
test
cmp
inc
fistps
mov
add
xlat
dec
in
aad
sahf
push
filds
pop
in
aas
std
mov
xor
das
int
inc
lea
jp
orb
fs
xor
inc
fidivrs
push
cmpsl
in
add
wrmsr
popa
mov
popf
or
rclb
push
lock
and
pushf
xchg
jl
icebp
and
push
push
push
dec
cmpsb
div
mov
int3
inc
xchg
and
loopne
or
inc
xchg
lret
je
xor
pushf
mov
icebp
cmpsb
cs
rcl
xchg
jg
clc
pushf
clc
repz
cmp
je
mov
pushf
rclb
int3
ds
jo
xor
iret
or
pop
xchg
clc
aas
packsswb
call
cli
es
cmpsl
insl
dec
add
addr16
clc
xchg
jnp
outsb
ret
pop
push
lret
add
or
int3
out
out
or
dec
fisubs
sahf
outsb
pop
lret
pop
inc
loope
sti
xorl
cwtl
xlat
ja
xchg
sbb
cmp
out
dec
dec
fnstsw
jo
stc
add
out
aad
sbbb
insl
pop
out
add
lret
out
loopne
inc
lret
out
lret
inc
mov
pop
mov
ss
movsl
loop
add
stos
mov
inc
xlat
pop
out
scas
xchg
inc
fldpi
sbb
lods
scas
xchg
popf
xor
fistpll
dec
enter
push
jbe
test
in
jl
xor
jne
push
cmp
mov
jnp
xor
and
ljmp
mov
cld
inc
adc
dec
aaa
jmp
call
cmpsl
or
into
mov
mov
in
mov
shr
pop
out
out
mov
arpl
das
and
leave
jb
ret
js
fists
jb
pop
cmpsl
and
mov
mov
sbbl
jle
or
stos
mov
out
filds
nop
mov
cmp
push
iret
cld
cltd
mov
loope
jge
test
imul
orb
ljmp
shll
adc
and
ficoml
and
inc
mov
je
jae
outsb
movlps
call
insl
sbb
lcall
scas
stos
popf
pop
dec
cmpsb
rcrl
pop
daa
sbb
rorb
mov
lods
pop
inc
int3
xor
jb
lahf
mov
inc
nop
idivb
out
fcmovnbe
fildl
jno
cmp
pop
fwait
stc
xor
jbe
sub
shlb
and
cs
jns
rcrl
mov
and
mov
dec
jg
nop
fsubrl
int
hlt
adc
inc
mov
dec
push
ret
loop
lret
sub
dec
xchg
inc
jno
inc
add
in
inc
mov
test
inc
sub
cmp
mov
movsl
mov
fdivs
js
enter
jge
sbb
mov
xlat
dec
xlat
xchg
lahf
xchg
lret
fstl
dec
orb
fstpl
outsl
mov
dec
int
mov
jp
mov
aad
js
test
sub
and
add
into
push
push
out
cld
imulb
inc
xchg
push
mov
xchg
lahf
cwtl
aam
lods
fbld
loop
mov
lods
mov
pop
daa
in
shll
ja
and
les
loope
mov
fdivl
xchg
add
test
bound
ja
push
inc
xchg
hlt
stos
test
sbb
adc
shll
outsl
mov
movsw
pop
in
jns
cmp
lcall
stos
dec
xorl
mov
fistps
inc
lods
outsl
dec
push
mov
pushf
lahf
xchg
popf
xor
rclb
jmp
pop
js
fistpll
ja
inc
mov
xor
push
rcll
mov
stc
xchg
lods
mov
xor
sub
pop
push
dec
pop
jmp
repnz
adc
repnz
jbe
lods
jnp
dec
jne
cli
insl
mov
fdivp
jp
dec
je
pop
addr16
push
jb
in
fscale
fstenv
adc
push
ret
in
sub
mov
pop
icebp
cmpl
mov
pop
cmp
out
adc
mov
cmp
sub
out
aaa
dec
xlat
shlb
inc
outsl
inc
pop
neg
movsl
push
rclb
push
ss
push
cwtl
jecxz
mov
cmp
loope
fidivs
jl
into
in
or
lea
lret
js
xlat
je
out
in
xor
sbb
out
adc
cmp
iret
fldenv
scas
mov
pop
jne
insb
js
sub
sub
cmp
pop
and
pushf
addr16
lock
fistl
stos
mov
jp
sbb
dec
mov
jle
and
jnp
mov
adc
mull
testl
add
mov
out
imul
adc
iret
adc
mov
jne
sub
test
mov
xchg
lcall
mov
stos
pop
fucomip
mov
imul
mov
outsl
jge
out
mov
out
imul
adc
fst
frstor
fsubr
mov
cmpsl
sbb
cmpsl
shrb
dec
ficomps
cmpsb
xchg
movsb
dec
call
mov
cltd
shl
sub
xchg
bound
or
mov
movsl
sti
mov
fsubl
fcmovnb
imul
orl
mov
dec
ds
outsb
imul
cmp
aad
jle
lret
mov
cmp
xor
cwtl
aad
repnz
xchg
cmc
sahf
mov
cs
pop
fs
enter
sub
lods
jbe
dec
ss
ja
mov
sub
in
and
pop
xchg
cmp
pop
into
in
jb
je
push
adcb
mov
test
testb
in
mov
mov
mov
push
cmpsb
rcrb
cmp
gs
add
fsubl
pushf
xchg
pop
fsubrp
pushf
pushf
lods
dec
lock
push
outsb
jge
sti
fcom
div
mov
mov
cli
imul
arpl
push
cwtl
adc
aad
xorl
leave
xchg
lds
pop
push
daa
ret
shrl
scas
test
inc
fimull
pushf
fcmovbe
rorl
push
mov
sbb
cmp
sbb
addr16
push
or
mov
sbb
in
in
test
lods
or
rcl
and
pop
dec
sbb
mov
pop
dec
sbb
call
xor
in
sahf
inc
push
rcl
sahf
outsl
sbb
fs
arpl
dec
aad
cmp
out
ds
push
or
lods
dec
push
adc
arpl
hlt
clc
or
lds
push
add
fbld
scas
dec
sarb
insl
jge
xor
cmp
sbb
cld
arpl
mov
int3
js
sti
jp
xor
out
xor
inc
fs
or
repz
and
pop
je
xchg
stc
adc
pop
bswap
out
mov
jb
lahf
scas
clc
pop
jge
pop
push
or
addr16
sbb
stos
rcrl
add
xor
inc
movsl
mov
add
jno
ficoms
pop
cmc
out
into
add
aaa
xor
or
lea
lret
pusha
stos
mov
nop
jecxz
jl
rolb
out
cli
add
push
sub
xchg
jno
sbb
fnsave
xchg
sub
jg
or
in
mov
ficompl
stc
in
scas
jl
fiadds
js
mov
pop
xor
lock
mov
scas
nop
pop
dec
rcl
stc
aad
out
cld
test
in
fidivs
xchg
sub
ljmp
mov
xor
xor
cmp
add
sub
out
test
xchg
sbb
das
iret
push
js
and
aaa
push
and
mov
pop
loopne
sti
cmp
gs
lcall
aaa
cld
outsl
mov
xor
out
mov
imul
dec
shll
ljmp
aad
test
outsl
mov
test
popf
mov
mov
fisubrl
out
mov
sti
cmpsl
int3
mov
add
insl
add
dec
dec
cwtl
sbb
xchg
fmuls
cmpsl
lock
fidivs
mov
and
loope
in
dec
mov
sarl
je
mov
pop
sahf
int3
and
getsec
lret
pop
fs
dec
ret
adc
shlb
xor
sbb
xlat
out
xchg
ret
into
push
outsb
xlat
adcl
or
sbb
mov
mov
hlt
sbb
jp
jnp
sub
das
sbb
sub
dec
add
cmp
test
pop
jo
mov
xchg
loope
xor
fcompl
mov
or
dec
jl
xchg
loopne
add
cmp
add
jno
adc
xor
cmp
shrd
dec
cmpl
or
push
out
sub
stos
out
mov
hlt
out
mov
rclb
js
js
lods
mov
sbb
dec
xor
ret
pop
inc
xchg
jbe
dec
aad
flds
in
and
cs
adc
dec
mov
dec
fs
movsb
cmp
jg
sub
fisubrs
leave
mov
mov
lock
xor
dec
mov
les
or
mov
iret
out
xor
movsb
or
add
add
mov
dec
jge
popf
adc
sub
ud2
cmpsl
dec
mov
adc
out
and
jecxz
pop
pop
adc
enter
xchg
sbb
jns
mov
or
adc
loopne
cmp
sti
sub
jns
mov
fimuls
fdivrl
insl
pushf
int3
fisttpl
cli
aaa
pop
cmpsl
insl
pop
ret
inc
idivb
push
xchg
out
xchg
or
xchg
xor
insb
inc
pusha
out
clc
dec
xor
cmp
jp
call
movsl
mov
mov
or
pushw
mov
jae
roll
mov
aad
push
xchg
fs
push
sub
je
dec
dec
pop
xchg
stos
ficompl
stc
xchg
sbb
fcmovb
inc
scas
cmpsl
insl
rcl
ret
fstps
imul
das
sub
cmp
xor
lret
iret
xchg
adcb
fimull
movsb
or
jge
or
decl
lahf
insl
xlat
pop
repnz
ds
xchg
xor
jne
testb
cmp
or
or
add
aam
push
inc
and
icebp
nop
inc
xor
je
and
adc
inc
subl
negb
popa
xchg
iret
mov
or
aas
rcrb
mov
xchg
push
mov
push
push
sbb
loopne
rclb
mov
mov
pop
and
push
std
and
daa
jl
pop
xchg
xchg
call
push
loopne
out
inc
cmp
cmp
dec
fidivrs
lock
aad
inc
cmc
sbb
inc
add
icebp
call
xorb
icebp
aad
pop
in
aam
pop
in
mov
scas
in
add
lea
out
orl
jg
sub
lret
mov
adc
clc
in
mov
lds
stos
dec
ss
sub
andl
mov
cwtl
xor
mov
inc
mov
mov
rcl
xchg
dec
stos
push
cmp
push
or
popf
mov
jmp
add
xor
aaa
pop
adc
xchg
popf
in
jmp
aas
pop
frstor
jg
xchg
add
jg
xor
mov
jb
cltd
mov
and
outsb
add
cltd
fsin
aas
aam
adc
in
ret
push
mov
jg
outsb
nop
push
lahf
popf
xchg
push
bound
jle
out
outsl
outsb
xchg
mov
mov
into
cmpsb
add
scas
sub
repz
out
mov
arpl
push
sub
add
imul
dec
pop
aas
dec
adc
in
or
jno
adc
les
arpl
push
mov
jne
insb
mov
cs
loop
clc
std
jge
pop
xchg
mov
sub
sub
inc
cltd
ret
enter
in
sub
xchg
dec
roll
cli
push
cld
mov
aad
outsb
add
xchg
int
mov
scas
pushf
out
aam
add
call
sbb
cwtl
lcall
sahf
dec
dec
ja
arpl
mov
sub
xor
push
jae
pop
fsubs
sbb
pop
cmp
xchg
push
xchg
stos
mov
fmull
or
pop
fwait
popa
cmpsl
mov
mov
xor
push
frndint
mov
adc
sbb
pop
and
inc
push
push
sbb
push
rol
xchg
cmpsl
dec
xchg
jnp
xchg
ficomps
movsl
sti
pop
movsl
mov
imul
push
xlat
and
mov
pushf
fists
mov
out
js
push
cmp
insl
dec
inc
aad
push
jp
jns
mov
or
push
pop
mov
faddl
insb
jo
push
push
pop
dec
in
scas
stos
jecxz
roll
repz
je
jne
push
cmpsl
fcoml
in
lods
out
sub
xchg
psllw
xchg
jle
leave
and
adc
mov
leave
cmc
je
loopne
or
dec
outsb
nop
or
xchg
in
insb
pop
add
lcall
jmp
fdivp
jp
stos
jo
cmp
mov
int3
push
push
mov
mov
in
ss
clc
push
hlt
in
fcoml
pop
xchg
fisttpll
call
sbb
dec
into
movsb
imul
pop
inc
int
mov
cli
aad
cwtl
and
divl
rcl
dec
pop
push
sahf
mov
test
mov
push
scas
inc
cmpsb
xchg
gs
lret
xchg
mov
aam
xchg
pushf
sbb
xor
jl
jnp
test
add
mov
lock
dec
xor
xchg
pop
mov
add
pushf
or
cmp
inc
inc
cmp
cmpsl
sbb
dec
test
xchg
loopne
dec
int3
enter
jmp
sbb
cmp
sbb
lcall
insb
cltd
stos
fwait
shll
outsl
shlb
repnz
aad
sub
ret
mov
add
insb
inc
jne
lea
or
sub
mov
jns
sub
hlt
jmp
mov
push
mov
icebp
pop
jp
popa
xchg
jae
shlb
add
xchg
add
hlt
pop
push
aaa
popa
stc
ffree
inc
sti
inc
sub
inc
cmp
cs
sar
mov
jne
xchg
xchg
es
sbb
push
mov
xchg
push
sub
sub
gs
mov
dec
add
fcmovne
mov
and
push
sahf
pop
inc
sbb
out
ljmp
fdivrl
pop
inc
jnp
pop
add
sub
aaa
xor
inc
addb
les
loope
lock
adc
aam
in
fdivrp
outsl
add
icebp
repz
lcall
ret
movsb
mov
xlat
neg
xchg
fcomip
push
sahf
bound
les
sbb
dec
vmovdqu
bound
pop
push
scas
sub
rorl
popf
mov
arpl
ss
push
cmp
xchg
mov
scas
adc
stc
pop
sub
hlt
mov
sub
dec
pop
std
clc
dec
add
out
mov
ficompl
sub
sbb
mov
push
gs
out
and
scas
mov
in
or
test
clc
popf
out
ja
jae
or
imul
insl
inc
lahf
adc
popf
push
mov
lret
call
fucom
mov
cmpsb
sub
xchg
jnp
mov
ljmp
fists
cmpsl
push
scas
sbb
popa
in
push
lds
shrl
out
std
cs
jno
sub
pushf
shl
imul
mov
movsb
icebp
es
cld
mov
movsl
push
das
adc
stos
movl
adc
pop
push
dec
adc
arpl
dec
dec
inc
popa
data16
sub
pushf
sbb
jl
outsl
cmp
dec
xchg
imul
sub
lds
hlt
dec
lods
sbb
popa
jb
lret
cmp
push
in
fwait
xlat
xlat
cs
mov
repnz
lahf
mov
pop
cld
mov
xchg
scas
mov
inc
sahf
lcall
mov
xor
std
lea
nop
loope
sahf
pop
push
outsl
cmpsb
xchg
jno
ror
popf
cs
pop
ret
out
jno
arpl
cmpsl
cmp
repz
pusha
push
fldt
stc
movsb
lcall
in
adc
push
les
test
xor
inc
push
movsl
xchg
mov
cmp
cmp
sti
mulb
add
mov
adc
inc
popf
lods
sbb
leave
in
pop
clc
cli
push
jb
fwait
and
shlb
ret
push
in
and
sub
inc
push
out
rclb
push
lret
test
jp
movsb
into
mov
xchg
mov
xor
xchg
lock
inc
cmp
sub
mov
and
aad
and
lock
xchg
jle
cmpl
mov
imul
pop
sub
repnz
xchg
mov
gs
jmp
fimuls
movsl
movsl
test
jnp
lahf
les
iret
mov
xchg
and
lea
mov
push
jnp
lods
addr16
add
jge
mov
push
pushf
mov
fwait
add
popf
cmp
gs
mov
stc
mov
aaa
pop
jmp
mov
push
jge
test
js
xlat
jo
jge
adc
into
mov
jnp
pop
mov
mov
push
lods
int
dec
out
in
mov
mov
stos
mov
mov
call
xor
frstor
ja
xor
jo
and
movsl
adc
lret
pop
test
mov
lods
mov
push
mov
add
dec
mov
sbb
mov
push
imul
enter
cli
imul
icebp
or
nop
sub
sbb
les
fldl
jle
sti
pop
das
push
jns
cmc
iret
mov
jo
push
lea
andb
insl
pop
sbb
dec
call
cltd
test
sub
cmpsl
lret
data16
adc
or
in
bound
pop
stc
jo
fmul
mov
mov
push
and
xchg
xchg
and
cmc
xor
xchg
int3
out
pop
adc
enter
pop
loopne
push
fists
xor
mov
fstps
out
outsl
xchg
loop
rolb
jmp
xlat
test
or
icebp
rcrb
push
dec
pop
jo
and
lret
mov
and
adc
nop
arpl
cwtl
adc
mov
scas
sti
iret
dec
mov
add
xchg
nop
adc
mov
mov
push
in
pop
stc
mov
enter
adc
cs
xor
mov
mov
jb
cmp
push
lret
test
jle
xchg
jne
out
mov
mov
scas
in
imul
xor
mov
out
adc
inc
sbb
cld
orl
mov
js
shrb
xchg
jmp
jge
adc
dec
stc
js
lea
insb
je
in
enter
mov
arpl
push
inc
jge
fwait
sub
fidivl
shlb
mov
and
push
push
call
xor
jo
popa
jl
jl
test
fistpll
xchg
pop
xchg
jle
scas
xchg
xor
int3
lds
add
in
loop
push
pop
jge
xor
adc
adc
fiaddl
in
jns
xchg
cmc
push
clc
addr16
rorb
xlat
sub
pop
mov
je
mov
xchg
lock
cmp
mov
or
add
sbb
mov
mov
test
clc
insb
mov
pop
jo
lds
cltd
sbb
andb
add
in
popa
mov
or
gs
pop
out
inc
divb
cmp
lcall
dec
mov
xchg
insb
or
in
xchg
inc
cld
xor
ja
xor
xchg
push
cmp
mov
adc
mov
jle
nop
mov
cmp
xchg
mov
mov
xchg
add
sub
inc
ret
je
sbb
inc
subb
outsb
repz
pop
jb
pop
gs
frstor
fstl
mov
adc
cmp
xchg
insb
decl
fcomi
cmc
pop
insb
daa
gs
addr16
lods
mov
add
loopne
lods
or
xchg
sti
sti
jecxz
ljmp
adc
sub
push
mov
pop
subb
or
rclb
mov
or
and
aad
scas
dec
subb
cmp
dec
cli
xlat
push
jo
mov
popa
pushf
pop
push
xchg
ret
push
aad
push
sbb
sbb
jp
aam
xor
mov
cmc
or
cmp
imul
cmp
scas
das
mov
cmpsl
jno
lret
push
cmp
cwtl
sbb
mov
cmp
data16
pop
dec
mov
adc
mov
mov
mov
scas
xchg
fs
imul
mov
cli
cmovo
lock
insl
adc
adc
aam
mov
jge
shll
mov
out
push
fmuls
repz
or
mov
cld
jbe
cmp
sub
xchg
mov
jae
test
adc
cmp
or
pop
inc
sbb
imul
sbb
int3
shl
fs
loopne
les
xor
jle
lea
push
pop
lods
nop
aaa
mov
jmp
mov
lahf
xor
xchg
pop
movl
lret
cmp
mov
fimuls
sub
or
jge
stc
nop
clc
roll
mov
cmp
or
mov
test
jno
lea
aam
dec
sbb
arpl
push
inc
mov
xchg
jb
cwtl
popa
cmp
sarb
or
sbb
inc
mov
push
xlat
sbb
scas
pop
loop
hlt
scas
jae
and
cmc
jne
cli
add
jl
sbb
lods
xchg
dec
dec
mov
fistpl
ja,pt
push
je
clc
shrb
adc
sub
and
push
sarl
fnstenv
push
fldt
sbb
lret
sub
add
in
test
and
xchg
mov
or
and
addl
ja
negl
sub
mov
mov
pop
xchg
fadds
scas
popa
mov
loopne
inc
into
lods
lahf
pop
bound
xor
mov
nop
rclb
addr16
sbb
pushf
and
xor
out
inc
movsl
mov
insl
xchg
pop
cmpsl
movb
les
in
test
pushf
jmp
cmpsl
fldenv
int
mov
jnp
dec
cmc
cmpsb
loope
ja
cltd
scas
ds
add
sbb
or
in
sbb
mov
enter
ljmp
jbe
popf
and
pop
loopne
outsl
clc
sarl
test
push
xchg
or
mov
cmpb
fwait
lods
aam
lods
inc
dec
test
mov
pop
ret
mov
mov
xchg
loope
ret
adc
xchg
rorb
cmp
movsl
fisttpl
sarl
call
xchg
mov
inc
bound
repnz
mov
sbb
bound
fidivs
add
push
fnstsw
and
jg
sub
aad
sub
int
lds
ss
sti
test
adc
pop
sarl
dec
lret
mov
dec
pushf
xlat
aaa
les
or
pop
sbb
mov
lcall
stos
mov
fdivs
xchg
leave
arpl
pusha
pop
pop
jae
std
sarb
xchg
test
and
aas
leave
inc
fldt
mov
bnd
push
sbb
jp
xchg
test
and
out
push
aad
cli
out
test
fs
jne
mov
test
scas
test
outsb
ret
or
loope
mov
add
es
dec
inc
sub
sahf
lods
lods
xchg
adc
iret
or
stc
xchg
sbb
mov
iret
data16
cmp
fs
push
cmp
inc
jb
adc
inc
or
xchg
inc
shr
ret
inc
cmp
jb
push
jl
subb
in
in
clc
jmp
lret
aad
cmp
adcb
mov
pop
jl
adc
or
push
cld
aaa
aas
insl
jp
sub
cmp
xlat
pop
arpl
es
add
xchg
scas
test
int
adc
jecxz
mov
outsb
mov
or
mov
push
inc
ficoms
jmp
mov
in
in
fistpll
jno
xchg
cmc
repz
andb
mov
int
loope
shr
shll
fidivl
pop
add
sub
aaa
mov
push
subb
jno
sbbl
cmp
lock
or
out
mov
aaa
xchg
mov
dec
mov
scas
test
sti
in
pop
data16
insl
cvtps2pd
stos
popf
stos
jnp
out
insl
sar
test
jnp
mov
pop
dec
and
mov
dec
fcomi
std
imul
movsb
jle
push
or
sahf
imul
inc
add
inc
imul
in
add
scas
pop
pop
das
data16
enter
cmp
rcll
in
ds
scas
xchg
shlb
stc
in
inc
repz
and
popf
push
cmp
fstl
test
xchg
adc
xor
mov
push
stos
push
test
pop
inc
fs
pop
or
mov
loopne
or
mov
loopne
cmp
fwait
inc
add
lea
xchg
hlt
fbstp
add
mov
inc
dec
pop
or
inc
adc
and
scas
shl
jge
std
or
sbb
cmpsb
push
out
cmp
cmp
jl
scas
shr
mov
jg
outsl
repz
or
std
jmp
lahf
lret
sub
push
aam
inc
bound
pop
xchg
add
or
cwtl
jl
in
icebp
pop
or
cwtl
xchg
ja
fcoml
les
mov
sti
loope
mov
pop
test
jge
ficompl
mov
filds
in
push
and
jno
jae
push
adc
mov
sbb
fiaddl
popf
dec
test
pop
dec
jge
pop
cmp
add
jne
xchg
addr16
pushf
jae
sar
imul
pusha
aaa
xor
lea
mov
adc
mov
call
lods
mov
mov
hlt
push
dec
and
ss
mov
cmp
fldt
subl
xchg
bound
push
icebp
push
es
pop
push
fyl2x
in
int3
cmpsl
cs
inc
cmpsl
iret
adc
lods
enter
aas
mov
frstor
divb
sarb
mov
mov
cmc
xor
data16
mov
std
sbbl
out
sbb
push
into
rcrl
cmp
iret
cmp
xor
xor
mov
scas
icebp
or
xchg
icebp
test
in
or
movsb
insb
out
das
call
sub
imul
push
fildl
add
or
xchg
fcomps
jecxz
mov
fimull
out
pop
leave
xchg
loop
test
mov
ror
inc
mov
mov
xor
mov
or
popf
or
aaa
pop
add
lahf
aam
dec
dec
fdivrl
push
out
gs
mov
inc
out
and
imul
iret
repnz
in
mulb
lock
in
inc
out
add
aaa
xor
jo
sbb
loop
push
fchs
xchg
inc
in
mov
inc
dec
mov
jle
jmp
inc
pushf
mov
jg
cmp
scas
repz
dec
sbb
adc
icebp
mov
inc
in
sub
fwait
icebp
loopne
js
cld
sbb
mov
repnz
mov
lock
cmp
xlat
sti
mov
inc
xchg
icebp
push
inc
das
pop
pop
mov
and
xchg
pop
pop
loopne
insb
mov
add
gs
adc
movsl
outsl
repnz
adc
daa
or
and
inc
mov
mov
mov
xor
pop
lret
jae
jmp
cmp
mov
stos
cmp
imul
out
stos
adc
imul
xchg
push
scas
in
adc
xorl
pusha
cmp
sahf
icebp
test
cs
mov
jnp
inc
insb
xchg
leave
adc
sti
inc
xor
mov
xchg
lret
repnz
rcrb
loopne
clc
shlb
in
test
xchg
jmp
or
pop
cwtl
ljmp
push
xchg
jmp
stos
ds
xor
inc
lods
adc
add
inc
jle
cmc
inc
dec
sbb
jae
pop
test
pusha
insl
out
and
mov
xchg
pop
data16
mov
rorl
inc
shlb
into
cltd
pop
test
in
roll
xrelease
cwtl
pop
xor
incl
ljmp
xor
out
fwait
push
xchg
test
lret
ds
jl
or
jle
push
es
dec
xchg
dec
cli
in
insb
sub
sub
inc
cwtl
push
mov
loop
cmpsb
dec
pop
inc
cmc
lods
and
mov
sub
mov
mov
test
mov
jnp
scas
nop
rorl
in
jmp
negb
call
and
fnstcw
adc
cltd
sbb
sbb
sbb
cld
add
fs
outsl
sub
icebp
sub
mull
std
pop
sti
psrlw
pop
dec
stos
sbb
adc
scas
fnstsw
stos
test
cmp
test
aad
stc
shld
push
sbb
es
push
xor
scas
sbb
or
roll
test
ret
jmp
adc
in
xchg
cld
mov
mov
pop
mov
jp
sub
aaa
jns
loopne
adc
ljmp
inc
scas
or
popf
je
test
jnp
lock
repz
push
rcrb
xchg
int
add
js
div
adc
aam
mov
inc
cmc
jg
cmp
fsubl
and
mov
mov
andb
out
movsl
sahf
imul
and
repnz
dec
stc
sbbb
cltd
sbb
imull
and
sbb
jbe
in
sti
movsl
repz
adc
out
push
adc
mov
orb
jo
mov
mov
orb
push
or
dec
jg
xor
shlb
xor
adc
inc
push
mov
mov
stos
push
faddl
lahf
out
xchg
inc
add
sbb
ja
sub
fldcw
dec
aas
fimull
test
dec
add
mov
xor
js
xchg
mov
sbb
ret
cli
push
jbe
in
xor
sti
test
mov
mov
pop
push
lods
sbb
loopne
and
add
mov
jg
jg
jbe
mov
jb
jno
ja
repnz
lea
jnp
jle
xchg
lock
das
mov
test
jnp
xchg
sub
sbb
mov
xchg
or
inc
sub
jno
adc
mulb
xchg
pop
cld
mov
inc
or
lds
rcrl
outsl
ljmp
mov
xor
mov
add
ss
mov
and
mov
cmpsb
and
bound
insl
mov
scas
cwtl
scas
inc
adc
sahf
jne
in
lahf
js
pop
data16
cmp
test
xor
ja
lods
mov
sbb
stos
insb
sahf
cmp
mov
jg
imul
outsb
test
xor
sbb
cltd
in
inc
cmc
mov
adc
js
int3
fidivs
mov
mull
cmp
test
iret
fs
jl
jnp
stc
test
mov
jnp
fbstp
jle
adc
repz
je
fwait
pop
jg
pop
and
mov
inc
mov
lock
mov
sub
pop
mov
ud1
dec
jne
cltd
ljmp
in
sbb
mov
into
enter
daa
test
add
jns
ret
dec
jp
xchg
test
mov
sub
fnstcw
sti
xchg
sbb
mov
aad
test
jle
int
sbb
inc
insl
cmc
jno
daa
fistl
mov
enter
lods
or
stos
stos
ss
cs
push
mov
cmc
ja
xchg
rcrl
in
sub
das
xchg
jnp
cld
out
cs
hlt
imul
sub
cmp
cmp
jns
orb
pop
inc
icebp
inc
fists
push
mov
test
jno
gs
mov
lods
aam
and
negl
imul
push
sbb
mov
sub
out
push
push
lret
test
jp
rorl
cli
mov
shrl
xor
stc
mov
pop
movsl
js
fidivrl
mov
shll
fsubrl
test
mov
cmp
jge
push
mov
push
imul
rol
stos
mov
adc
out
push
jp
stos
filds
jle
inc
and
dec
dec
das
call
outsb
or
jmp
adc
lahf
lds
or
jmp
ja
cs
data16
mov
mov
xchg
or
ret
sub
mov
xor
add
add
loopne
into
xor
in
push
jle
xchg
push
test
xor
stos
lods
push
or
push
ljmp
xlat
and
jnp
frstor
sbb
add
faddl
mov
sti
xor
nop
mov
and
push
and
and
and
mov
sub
cmc
mov
and
int
xor
shrl
fists
add
shl
mov
inc
sub
and
jne
cmp
mov
int
add
inc
jbe
sbb
pop
mov
fmull
data16
into
clc
pop
fidivrl
mov
jp
fsubl
insb
stos
jae
cmpsb
xor
cmc
insb
aam
call
xlat
mov
movsb
inc
sbb
or
xchg
pop
mov
jl
cmpsb
xchg
xor
mov
testl
xor
das
outsb
shrl
test
dec
cs
xlat
cltd
dec
cmpsw
and
lret
xchg
fsubl
push
test
pop
and
and
mov
rorl
stos
addr16
sbb
pop
test
xor
and
pop
jle
jle
pop
push
hlt
scas
sbb
imul
dec
in
sbb
sbb
scas
fs
xor
or
cwtl
pop
hlt
add
faddp
test
mov
jnp
clc
sahf
sub
aam
xor
cld
xor
push
imul
popf
loope
push
lcall
pop
repz
insb
sti
aaa
daa
cmp
xor
dec
mov
shl
inc
lret
aaa
idivb
std
jo
icebp
rcll
and
mov
data16
shlb
loopne
ds
add
add
jg
aad
adc
and
or
adc
mov
xchg
sub
mov
mov
ret
mov
std
add
imul
inc
or
cmc
push
mov
jbe
mov
das
pop
mov
int3
mov
xchg
jnp
bnd
jnp
stos
int
add
aad
stos
stos
loop
call
xor
jns
arpl
add
mov
jb
cld
sbb
aaa
movsb
push
mov
jp
xlat
mov
push
sub
add
mull
jno
sub
cmp
sub
fisubl
jge
loop
sbb
not
or
add
in
addr16
leave
lret
inc
and
movsb
cmp
sahf
push
js
cli
dec
jg
xchg
test
ljmp
cmp
icebp
lret
xorl
sbb
push
stc
or
sahf
fs
mov
inc
divl
lds
popa
inc
arpl
jecxz
pop
xor
cmp
jp
es
ja
inc
sar
out
cmp
xchg
sbb
inc
sarl
flds
adc
cmc
pop
mov
test
aaa
cld
ja
xchg
jmp
mov
cmp
xchg
mov
roll
ds
mov
or
insb
test
xchg
in
sahf
xor
cmp
adc
filds
sbb
pop
fldenv
stc
pop
sbb
mov
inc
xchg
xchg
filds
push
sbb
lds
mov
push
xchg
lret
movsb
xlat
std
sbbl
popf
jns
xchg
mov
gs
movsb
xchg
cmp
repz
inc
push
dec
sub
inc
xor
add
and
mov
and
in
mov
aad
out
repz
stos
popf
sbb
xchg
xchg
sub
clc
outsb
xchg
ficomps
or
jg
shrl
pop
sub
mov
push
es
ficomps
fdivr
cmpsb
xchg
test
cwtl
ficompl
mov
sbb
lcall
sarb
inc
dec
popf
fmull
mov
lahf
lods
mov
mov
lcall
popf
push
sub
jae
andl
inc
jo
lret
mov
in
push
pop
or
or
stc
mov
hlt
mov
and
fldl
mov
mov
hlt
les
jp
addr16
push
or
push
aad
popf
popa
mov
inc
iret
loope
xor
mov
out
inc
cmp
add
cld
pop
push
jecxz
mov
adc
jnp
xchg
lods
loop
sbb
loope
jge
add
stc
dec
add
lods
jecxz
mov
idiv
jge
xchg
test
lahf
jl
fwait
inc
pop
ret
scas
testl
fdivs
push
fucom
xor
in
inc
mov
pop
mov
sbb
mov
jbe
mov
std
gs
mov
ficomps
or
mov
push
mov
lea
cmp
cmp
xor
scas
inc
inc
and
repz
push
lock
rorl
jne
dec
es
xchg
and
inc
sti
mov
xor
inc
mov
test
jecxz
addr16
loop
push
movsl
test
xchg
mov
es
jae
test
adc
mov
mov
jne
notl
in
scas
mov
sbb
cli
xchg
dec
jl
frstor
filds
data16
out
jbe
imul
jl
repz
adc
or
inc
js
push
xchg
ds
add
inc
add
inc
cmp
jo
addb
push
cmp
or
mov
jg
shl
fcmovu
repnz
popf
jnp
push
pop
nop
mov
rcrl
jbe
pop
mov
aaa
pop
add
pop
repz
pop
push
scas
cltd
sub
jp
mov
xor
mov
scas
out
or
jae
jg
mov
mov
pop
jnp
lret
pop
mov
mov
mov
mov
push
inc
mov
scas
jo
or
sar
cltd
lods
push
dec
fildll
ljmp
lcall
cli
dec
sub
mov
add
arpl
int
nop
incl
imul
jecxz
fbstp
adc
xor
push
and
dec
cmpsl
sub
sub
mov
push
notb
push
push
mov
push
xor
or
fbstp
pusha
cli
rcl
aas
mov
setns
popf
dec
mov
jle
lahf
jb
js
or
add
and
inc
mov
sub
jno
out
cltd
popa
out
jno
mov
jb
in
and
or
pusha
push
sub
sbb
outsl
shl
mov
pop
mov
hlt
push
push
xchg
in
lahf
cmpsl
inc
lea
lret
stc
jle
adc
repz
dec
push
xor
xor
ja
jecxz
imul
idivb
call
cmp
adc
mov
fildll
cmp
dec
xlat
mov
jecxz
pop
pop
cli
fisubrs
jno
aaa
mov
sti
notl
adcl
stc
jnp
or
jno
pop
jne
lcall
mov
mov
int
add
pop
movsb
jns
testb
cmp
sub
sub
lea
jnp
inc
adc
lock
dec
cltd
aaa
adc
dec
or
outsl
pushf
lahf
pusha
mov
lds
lock
pop
jmp
loope
push
stos
mov
cs
adc
adc
outsb
mov
cmp
xchg
or
jge
push
ljmp
inc
pop
insl
scas
xlat
loopne
mov
sbb
aam
cmpsb
cmp
popa
pop
out
int
or
sbb
outsl
mov
mov
push
call
push
sub
shll
dec
push
leave
or
jae
mulb
lods
fbstp
xor
stc
xchg
mov
rcr
mov
add
pop
or
mul
jg
cs
jb
lods
add
xchg
int
xchg
mov
addr16
imul
or
sbb
and
aam
sbb
outsb
rcrl
xchg
xchg
enter
cmp
xchg
pop
je
sbb
aas
js
arpl
mov
xor
cmc
push
sub
mov
test
test
sti
push
mov
sub
cltd
jae
out
fstps
sub
popf
lret
push
mov
ja
cld
sbb
jb
xorb
stc
mov
movsb
loop
cmpsb
cli
xor
jge
dec
sub
cmp
inc
pop
mov
rorb
pop
adc
inc
jno
das
mov
mov
inc
push
and
test
repz
xchg
dec
jo
add
in
aam
sarb
stos
cmp
push
dec
aad
xor
and
or
push
jnp
pushf
xchg
add
mov
lahf
mov
fmull
xchg
in
xchg
jns
je
sub
and
xor
mov
sub
pop
add
mov
sbb
mov
fidivrs
lret
cmp
imul
add
insb
addl
and
cmp
sub
js
loopne
popa
pop
sub
int
mov
cld
add
jnp
inc
fwait
icebp
cmp
fwait
inc
setae
cmp
xchg
repnz
ds
call
push
cmpsb
mov
data16
sahf
jb
lods
or
jg
mov
cltd
mov
jne
lods
incl
mov
jge
fistps
fcomps
xlat
pop
aam
lea
adc
inc
je
testb
cltd
insb
ljmp
xor
out
dec
and
xchg
popa
mov
xor
adc
mov
lods
cmp
inc
ljmp
jno
leave
xchg
in
jecxz
inc
xchg
sub
rep
je
xchg
imul
and
cmpsb
fstpl
js
mov
mov
xchg
insb
stos
mov
pop
dec
add
imul
jne
lods
mov
jmp
cmp
jne
sbb
mov
mov
dec
pop
aas
mov
cmc
push
aas
sarl
ret
jo
sbbb
ficoml
cwtl
and
inc
inc
adc
dec
mov
cmp
test
add
jmp
cmp
or
ja
repnz
dec
dec
mov
stos
add
shlb
sub
inc
cli
xor
mov
or
stc
jbe
or
jne
sub
push
add
pop
mov
mov
das
nop
pop
stos
inc
cmp
ss
pop
lret
ja
inc
xchg
dec
mov
sti
fisubrl
sbb
mov
aad
ds
test
mov
imul
inc
mov
scas
sbb
cwtl
pop
divl
add
test
mov
cli
mov
sarl
sub
push
add
stos
dec
xchg
movsl
hlt
xchg
jmp
pop
mov
mov
dec
adc
imul
sbb
cwtl
sahf
jns
push
push
in
cs
dec
xchg
xor
aas
push
xchg
mov
jmp
lods
cmc
jb
insl
stos
test
xor
out
cld
adc
cmp
jbe
jge
sbb
xchg
je
std
lret
pop
int
mov
cld
rcll
pop
in
scas
sbbl
repz
sbb
and
call
cmp
mov
add
lock
dec
sti
mov
lods
pop
push
in
loopne
mov
or
sbb
insl
ret
ficompl
mov
imul
jae
ds
insl
jo
xor
das
fdivrl
mov
jecxz
call
fidivrs
cld
mov
movsb
fs
xor
cs
cmp
add
inc
mov
cmpsl
cmp
lods
jg
jne
push
movsl
bnd
pop
nop
mov
xchg
push
insb
fidivrl
push
popw
mov
int3
cmp
jae
and
aam
mov
mov
adc
lret
and
imul
mov
push
rcr
rcl
adc
mov
lock
sahf
mov
and
mov
sete
shr
notb
mov
mov
mov
push
out
push
xor
out
adc
in
hlt
push
subl
push
or
sub
outsb
aas
sbb
out
inc
fisubrs
xchg
push
or
cmpsl
pop
mov
and
jo
in
lds
adc
and
scas
in
sub
sub
out
mov
cmpsl
sti
mov
cmp
add
cmc
cmp
cwtl
lea
outsb
sbb
mov
sub
xor
mov
sub
pop
pop
dec
adc
add
cld
jns
and
pushf
in
subl
imul
fwait
test
arpl
sbb
ja
pop
loop
pop
xchg
scas
clc
pop
jne
and
sub
mov
add
inc
gs
mov
mov
ds
stos
pushf
jl
push
loope
iret
mov
testl
aas
sbb
repnz
xor
daa
test
xor
rcll
filds
xor
sub
ljmp
in
jge
and
ret
aaa
adc
sub
lods
loopne
push
pop
and
and
ja
mov
inc
xchg
mov
aaa
fisubrs
pop
insb
pop
adc
loope
lcall
sub
adc
sub
in
fstpt
mov
mov
inc
aam
cli
shrb
cmpsl
sbb
push
daa
xchg
std
mov
sbb
lcall
lea
push
pop
dec
sbb
xor
sbb
ficoms
js
out
xchg
adc
decl
les
push
mov
inc
call
adc
mov
mov
test
jb
test
push
je
mov
inc
rcrb
cmpsl
iret
mov
lret
xchg
add
scas
add
dec
scas
loopne
sbb
xor
popa
repnz
fucomi
cmp
sti
jecxz
mov
addb
cltd
iret
pop
push
sbb
sbb
in
fnsetpm(287
out
rorl
std
dec
or
dec
stc
sub
and
sbb
cli
add
icebp
cmovno
and
or
sub
fsts
add
adc
iret
shrl
sbbl
push
mov
xor
fdivl
ret
ja
fnsave
ljmp
mov
data16
jnp
in
mov
das
cmp
stc
jbe
mov
les
in
mov
cld
clc
push
loopw
adc
adc
ret
fistpll
and
push
mov
in
je
adcl
push
jns
adc
mov
sub
aad
shlb
orb
das
das
mov
out
dec
mov
int
mov
incl
test
adc
orl
int
xor
mov
icebp
mov
push
hlt
sub
mov
loop
inc
lea
or
inc
outsl
cli
fistl
lret
inc
inc
and
ret
scas
push
cmc
mov
xor
sub
jne
or
adc
lods
and
or
add
and
iret
inc
sub
loope
cwtl
mov
xlat
jg
in
mov
xchg
push
inc
test
test
fiadds
sub
jg
ret
jp
cli
jnp
subl
bound
add
hlt
or
add
add
xor
cwtl
sbb
out
mov
rorl
adc
bound
into
adc
ret
sbb
jne
sbb
push
or
and
push
mov
push
xchg
jns
pop
in
rorl
push
inc
mov
fildll
int
inc
xchg
cmp
stc
aaa
sbb
dec
mov
push
cmp
sbb
rolb
mov
inc
call
dec
or
out
mov
dec
pop
ss
lods
mov
je
jl
in
jb
int
scas
iret
scas
mov
xor
or
pop
lret
mov
ljmp
inc
popf
cmpsb
icebp
in
subl
imul
fdivp
int3
mov
jb
xchg
cmc
addr16
pop
jl
mov
and
cmp
daa
int3
fdiv
inc
jp
inc
sub
lcall
es
dec
xchg
int3
xor
test
popa
xchg
jns
xor
rcll
inc
sub
shrd
mov
xchg
outsl
subl
imul
mov
out
bound
cmp
dec
adc
pop
cmp
mov
stos
adcl
cmp
sarb
sti
out
pusha
jmp
ss
jl
nop
rorb
or
fld
mov
mov
jge
cmpsl
xchg
mov
push
push
mov
test
mov
sub
jl
inc
sub
minps
jbe
adc
mov
mov
cld
mov
mov
pop
je
pop
mov
xchg
insl
pop
mov
cmpsl
mov
add
fimuls
push
dec
into
mov
sub
lds
fdiv
or
pop
roll
jbe
cmp
in
cmpb
mov
xor
jecxz
clc
or
loopne
repz
mov
fstpt
popf
pop
push
es
sub
call
pop
mov
sub
adc
call
sahf
cmp
rcl
shlb
and
jmp
jo
stc
leave
lahf
or
pop
inc
and
popf
mov
dec
mov
cld
out
mov
scas
rclb
and
mov
setle
push
add
int3
mov
jne
rol
add
mov
lods
mov
gs
mov
add
fxch
push
dec
es
inc
cmp
ljmp
jo
push
scas
or
movsb
cmp
inc
into
orl
mov
cmpsb
sti
mov
ret
pop
insb
sbb
out
filds
jae
fstps
xchg
sbb
insl
insl
ja
mov
mov
cmp
push
push
pushf
sub
scas
sub
movsl
out
loopne
sbb
test
dec
mov
add
lds
dec
int3
adc
fadds
sbb
or
xchg
jmp
xor
push
and
mov
inc
adc
mov
daa
cmc
and
lea
fwait
xor
aad
adc
mov
adc
or
loope
adc
cld
movsl
cmp
cmp
jno
ja
hlt
aam
dec
sahf
inc
mov
jb
aas
repnz
push
in
push
outsb
mov
push
inc
push
jne
pop
add
outsl
mov
cmp
in
ja
xchg
stc
mov
inc
mov
icebp
shll
aaa
fcom
jg
test
je
dec
out
ds
or
inc
inc
xchg
adc
std
cwtl
mov
pushf
mov
jmp
bound
xor
mov
shll
frstor
push
add
fs
into
in
insb
jae
dec
dec
fdiv
xchg
xor
rol
es
mov
inc
add
das
pop
stc
cmpsl
adc
pop
es
js
add
push
rcll
imul
divb
pop
mov
xor
insb
mov
sbb
push
imul
xchg
inc
jo
dec
frstor
or
je
dec
ret
adc
push
lods
scas
ret
andb
mov
ss
push
dec
cmp
push
insb
inc
xor
xor
mov
andb
mov
sub
ds
push
dec
test
repz
rorb
cld
and
decl
ja
sbb
xchg
dec
aaa
scas
jmp
mov
cmpsb
das
int3
mov
pushf
fsubl
js
lret
and
in
jae
arpl
insb
pslld
xor
idiv
mov
lea
cmp
mul
jnp
inc
mov
je
pop
mov
cmp
mov
jmp
dec
dec
pop
pop
repnz
sbb
rcrb
inc
adc
add
mov
add
dec
mov
sbb
cwtl
jb
fisttps
ja
and
pop
xor
aaa
jnp
adc
movsb
lods
cmp
mov
outsl
pop
push
lret
dec
sbbl
pop
mov
lret
loop
and
lcall
mov
jnp
dec
rol
and
adc
and
pop
lock
pop
cmpsb
roll
arpl
ret
loope
sahf
fistpl
and
jmp
mov
mov
in
add
clc
mov
adc
in
mov
jne
int
mov
sarl
add
ffree
rclb
xchg
jl
es
and
sbb
fldcw
dec
pop
pop
jle
and
inc
mov
mov
mov
or
jmp
adcl
into
popf
fwait
std
pusha
mov
gs
pop
cmp
cld
adc
mov
or
sub
aas
add
sahf
xor
mov
int
sbb
out
mov
cld
movsl
jbe
cs
insl
clc
pop
cmp
sbb
mov
in
mov
pop
movsbl
arpl
xchg
sub
or
stc
xchg
mov
xchg
inc
dec
test
pusha
mov
je
shl
jge
icebp
scas
mov
lock
lds
or
mov
cmc
repz
je
scas
pop
jmp
mov
call
mov
in
pop
imul
sbb
shr
jns
negb
in
pop
out
push
push
out
sub
lea
cmp
rcl
mov
jno
and
loop
mov
add
push
jl
in
jmp
movsb
fwait
jmp
add
jno
add
cwtl
mov
xlat
imul
sbb
adc
insl
lret
mov
mov
jns
aad
xchg
xchg
inc
jge
cs
fsts
les
insl
outsb
jge
and
mov
enter
or
repz
mov
mov
mov
push
jecxz
jecxz
fucomi
dec
jbe
sbb
mov
cmp
xor
push
xchg
cmpsl
stos
add
iret
push
ja
lahf
mov
das
add
dec
push
in
popf
mov
or
lock
loopne
shll
mov
aam
jmp
cmpsl
mov
pusha
mov
push
adc
jg
and
in
repz
fisttpll
fadds
jbe
cmp
mov
sbb
loopne
cmpsl
ret
lods
ret
push
mov
jnp
imul
scas
ljmp
movq
jo
xlat
repz
imul
sbb
out
push
xor
clc
pop
outsl
jmp
jecxz
sbb
cmp
inc
shl
lods
push
mov
cli
test
mov
ret
push
adc
std
in
lea
icebp
mov
insl
mov
in
sub
repz
test
jle
xchg
test
inc
push
and
pusha
inc
cwtl
lret
sbb
mov
push
dec
fnstcw
lret
cmpb
rcrl
cmp
into
sub
and
nop
movsb
pop
push
iret
adc
ret
lret
dec
xor
xchg
stc
iret
jnp
stos
cmp
lock
test
test
sub
xor
sbb
fistpll
or
sub
sub
shrb
pop
mov
mov
and
mov
lods
jno
aam
fsubs
or
adc
xlat
mov
loope
cli
pop
inc
sbb
pop
cwtl
insb
push
cmpsl
sahf
or
leave
out
mov
adc
lret
pop
xchg
fsubp
insb
stc
movsl
pop
and
mov
std
mov
enter
mov
xor
inc
mov
push
ss
xor
jl,pn
jl
xchg
outsl
lret
lret
pop
movsl
repnz
and
iret
xchg
clc
pop
jg
cmpsl
adc
negb
mov
inc
jp
mov
add
dec
add
cmc
or
fisttpl
stos
test
push
mov
xchg
sbbl
inc
dec
rol
xchg
outsl
jne
mov
pushf
cmpsl
pop
fistps
outsl
add
sarl
std
jl
sub
push
arpl
scas
fs
popa
xor
xchg
pop
lahf
outsl
lods
pop
repnz
or
push
stc
jl
and
dec
mov
adc
pop
mov
xchg
popf
lods
mov
shl
jns
sub
je
push
repnz
scas
scas
into
push
cli
pusha
mov
std
jnp
mov
loope
andb
outsl
jae
and
jne
leave
movsb
add
js
in
test
adc
scas
xchg
fistpl
cmc
pop
nop
call
sti
xchg
or
push
inc
repnz
mov
mov
lret
js
add
loop
fcomp
out
mov
mov
xchg
pop
es
out
add
lock
aad
les
fisttps
movl
and
test
movsl
mov
sbb
daa
push
fists
adc
sbb
cmc
call
mov
fldenv
lahf
lock
lret
mov
xlat
dec
cmc
int
cmp
or
push
adc
sbb
jne
ror
dec
rorb
mov
lods
loop
xor
insb
mov
jmp
iret
ret
enter
iret
push
cld
adc
mov
jmp
in
test
push
ret
inc
call
cmpsb
sbb
mov
mov
dec
arpl
xchg
sarl
cli
in
mov
imul
pop
inc
mov
sti
and
stos
push
loope
out
int
cmp
int
push
push
loope
pop
sarb
pop
stos
out
hlt
xchg
dec
repz
cmpsl
lock
notl
dec
xchg
shrb
jmp
inc
pop
jno
mov
pushl
test
ficoms
aaa
mov
add
data16
mov
sbb
mov
leave
mov
inc
movsb
xor
adc
mov
pushf
sub
mov
jns
test
xor
imul
arpl
jecxz
mov
xchg
aas
test
mov
sbb
or
pop
lods
pop
adc
dec
pop
pop
mov
iret
pop
out
push
call
and
adc
adc
test
jo
mov
repz
and
out
mov
rorl
cmp
add
xchg
xchg
mov
jle
sbb
mov
test
or
test
xor
in
outsb
jno
clc
bswap
mov
cmp
dec
lahf
dec
addr16
cli
mov
lds
mov
ja
fisubrl
lret
neg
jae
sbb
rcrl
icebp
jge
iret
rcrb
mov
mov
out
ret
leave
xchg
js
cmp
jo
lds
sbb
rcrb
gs
cmpsb
or
lock
xchg
mov
sbb
mov
mov
mov
aam
in
pusha
cld
mov
in
add
add
into
data16
in
cmp
cwtl
push
std
or
push
je
or
inc
scas
or
adc
in
mov
imul
int
arpl
jle
dec
inc
in
std
mov
cmpsl
out
jno
out
int3
mov
inc
shlb
rcr
testl
mov
cmp
and
mov
mov
into
xchg
mov
in
lods
stos
imul
insb
lods
jns
cltd
into
pop
pusha
sti
scas
cwtl
sbb
ret
and
mov
movsb
sbb
pushf
popa
lods
or
mov
jns
mov
xchg
sahf
movsb
test
mov
out
jnp
push
roll
jg
les
out
jne
shrl
pop
mov
int
ss
enter
outsb
mov
cld
sub
stos
fwait
mov
loop
lods
ret
icebp
xor
cmpxchg
jecxz
sub
sbb
and
mov
sbb
cld
or
jnp
push
mul
out
mov
push
adc
sbbl
or
out
dec
syscall
fwait
les
add
test
or
xlat
popa
aam
cmpsl
jbe
rcr
jae
sahf
dec
mov
mov
pusha
and
std
mov
ja
cltd
fwait
jno
fwait
cmpsb
outsl
lret
add
movsl
shll
pop
imul
mov
fidivl
test
jo
xchg
scas
pusha
ffree
leave
inc
push
mull
xchg
mov
fwait
mov
icebp
dec
shll
cmp
mov
add
jnp
sti
fldcw
mov
jnp
xor
xchg
adc
cmpsl
push
jae
mov
inc
mov
out
pop
pop
pop
fsts
aad
mov
shll
mov
incb
lcall
lods
addr16
aam
dec
xchg
push
xchg
lods
mov
jno
inc
adc
inc
lahf
test
jl
ret
inc
not
out
ss
clc
mov
out
or
insb
xor
mov
add
dec
arpl
mov
ljmp
jae
dec
lcall
add
cmp
fistpll
adc
sub
xchg
in
shlb
jl
and
or
xchg
mov
sahf
jp
aas
lahf
mov
gs
nop
and
shr
insb
jne
add
negl
and
imul
inc
mov
repz
add
mov
outsb
in
int3
sti
int
out
cmp
std
lock
in
or
mov
iret
push
and
mov
dec
inc
push
cltd
jp
xorps
stos
xchg
jae
fistpll
scas
mov
movsl
lods
jg
cmp
sbbl
les
iret
jmp
andl
lods
test
dec
push
cmpsl
or
jg
cmc
sysenter
jle
jb
sub
icebp
js
scas
outsl
xchg
pop
imul
bound
test
and
cmpb
push
mov
std
stos
pop
inc
sar
jg
pusha
sbb
mov
and
mov
and
fnsave
orb
sbb
inc
adc
xchg
roll
or
cmpsb
cmpsb
cmp
je
out
jg
sbb
out
or
rolw
mov
test
movsl
dec
mov
clc
int
cmpsl
ffree
repnz
mov
cmp
pop
mov
jl
or
into
outsb
sub
mul
into
movsb
cmc
add
cwtl
jae
enter
negl
lods
ret
xchg
int
iret
or
shl
cmp
hlt
aas
adc
gs
push
cs
push
adc
mov
mov
inc
cmp
push
outsl
xchg
jmp
push
rolb
jo
sahf
mov
out
mov
sub
inc
sbb
inc
pop
dec
aam
xchg
repz
sub
cli
imul
sbbl
insb
xor
jmp
xchg
js
xchg
mov
js
lahf
cmc
jae
jecxz
push
imul
out
lret
mov
negl
mov
add
fcmovnu
pop
adc
push
faddl
fldt
movsb
mov
jne
mov
jp
jmp
add
inc
ja
mov
int
mov
mov
fbstp
mov
je
adc
mov
stos
sub
adc
adc
fstpl
int3
cs
jl
imul
jns
std
jg
outsl
add
mov
mov
dec
fsubs
outsb
popf
inc
loopne
int
sbb
jno
xsaves
ljmp
and
cld
add
push
and
adc
adc
dec
inc
sahf
lds
pop
mov
pop
xchg
lods
lock
test
rclb
adc
jae
and
cmp
push
add
cmp
hlt
jp
mov
out
les
loop
add
fsts
pushf
ret
fldenv
int
outsb
mov
out
jb
in
test
jmp
hlt
out
sbb
add
add
data16
repz
jge
shrb
xchg
pop
icebp
xor
adc
test
mov
aam
imul
inc
cmp
jmp
cmp
dec
push
or
nop
ja
and
pushf
xchg
push
in
adc
and
lock
sub
mov
push
sbb
adc
sub
dec
int3
leave
mov
iret
inc
into
arpl
inc
xchg
inc
jo
add
cld
bnd
adc
aad
out
pusha
fsub
filds
popa
call
mov
dec
cmp
push
sub
and
repnz
pop
sahf
aaa
jbe
jg
jbe
push
mov
cld
mov
jo
cmp
test
popf
jno
xchg
xor
jo
mov
in
sbb
sbb
js
inc
in
das
and
mov
jge
out
adcb
add
mov
fists
mov
jns
icebp
lds
sbb
cmp
mov
push
int
and
mov
or
je
and
dec
je
movsl
or
jne
ja
out
movsb
bound
outsb
mov
dec
jno
out
in
pop
jle
rcl
mov
nop
insl
cwtl
repz
add
pushf
cld
mov
adc
and
mov
mov
sub
repnz
lcall
jae
xchg
mov
adc
out
sbb
fsubl
aam
cltd
mov
adc
xchg
add
sbb
ljmp
lods
lahf
insb
jp
cwtl
inc
repz
xchg
std
mov
pop
jge
movsb
ja
nop
lock
int3
shl
pop
push
icebp
shrb
std
insl
mov
repnz
sbb
psrlq
andl
insb
nop
aad
lahf
shr
lock
sbb
and
mov
cmp
inc
rolb
out
xor
jo
xchg
jmp
bnd
pop
repz
mov
ja
sbb
xor
push
xchg
cmp
push
pop
iret
mov
cmp
inc
cli
xchg
mov
lret
fisttpll
mov
js
pop
xor
mov
xlat
sbb
scas
add
push
pusha
fildll
pop
or
fldl
movsl
hlt
repnz
test
out
dec
hlt
pop
lods
aaa
hlt
data16
pushf
fstl
in
ret
fwait
lfence
das
add
mov
stc
ficoms
pop
or
fisubrs
pop
or
sbb
add
movsb
mov
jnp
sub
jl
cmp
or
push
stos
cmp
xor
push
mov
das
int3
fimuls
pop
aam
out
repz
inc
inc
fdivp
loope
out
imul
or
stc
shrb
jp
pushf
sbbb
mov
inc
xchg
outsb
fimull
mov
or
cltd
ret
jne
lds
leave
cmp
mov
test
add
loopne
sbb
adc
jnp
pop
scas
cmp
rcr
xchg
and
push
xchg
xchg
jge
subb
cld
inc
shl
lcall
rep
sbb
jb,pt
push
ja
cmp
call
lods
add
fistps
das
hlt
fwait
aas
mov
lock
pusha
cmp
pop
mov
lahf
push
test
jns
mov
int
mov
pop
repz
rol
popf
sti
fmull
jge
movntq
mov
fucom
cmp
loop
bound
inc
inc
jg
mov
xlat
sahf
dec
test
and
lret
mov
js
lods
push
mov
fcomps
lods
jo
lea
inc
pop
scas
popl
jnp
push
jns
ja
inc
pushf
jmp
scas
subb
fldl
jmp
pop
mov
adc
push
loope
xchg
mov
push
cltd
popa
push
sahf
pop
sub
cmp
and
or
fcomi
add
pop
into
mov
aas
dec
pop
xchg
repz
insl
mov
cmp
das
mov
or
adc
pop
scas
pop
popf
out
add
mov
fimull
mov
mov
jl
jb
adc
cmpsb
movsl
mov
lret
out
and
push
hlt
adc
imul
cli
mov
je
mov
fsubrp
sbb
sbb
enter
test
dec
fdivrs
xchg
cmpsl
mov
pop
adc
icebp
pop
mov
mov
lcall
mov
mov
push
mov
out
jl
stos
mov
sub
mov
xchg
int3
frstor
lea
pushf
jecxz
lods
lock
aaa
push
aad
add
aaa
push
adc
push
xchg
dec
in
mov
sub
pop
test
add
out
jnp
sub
fwait
adc
js
fists
jns
out
setne
sub
mov
cli
jbe
rcl
adc
inc
mov
clc
rclb
xor
inc
and
out
fcomp
repnz
decl
std
and
pop
xor
stos
pop
in
jnp
popf
adc
movsb
test
out
jns
mov
jne
clc
loope
pop
lret
pop
inc
jg
mov
hlt
loopne
iret
lock
pop
mov
mov
mov
stc
cs
cwtl
jmp
js
shrl
push
ret
jge
stc
mov
sub
mov
dec
aad
hlt
or
orl
mov
js
in
subb
pop
iret
subb
xor
dec
fldt
iret
jle
stc
testb
lret
dec
or
aad
ss
push
int3
pop
movsl
lds
ss
out
mov
enter
insl
jg
push
das
inc
subb
push
and
loop
push
adc
in
mov
je
cltd
sub
cmc
in
mov
in
push
fs
pop
es
in
inc
mov
pop
jae
insb
lret
mov
jne
subb
out
pop
inc
roll
loop
out
add
jne
andl
mov
std
outsb
movsb
mov
xchg
pop
popa
mov
fcmovne
rorl
pop
cmp
mov
enter
hlt
icebp
ja
lock
or
popa
lods
jmp
sub
add
and
fisttps
mov
das
icebp
fldenv
iret
dec
loope
imul
and
adc
adc
mov
loop
pop
and
sahf
mov
aad
pop
or
popf
mov
xor
xor
sub
out
addr16
lahf
mov
fsubrl
pushf
scas
ret
in
decb
lods
loop
jo
mov
cmpsb
pop
push
inc
mov
cmp
sub
int
or
pop
les
sbbb
add
jp
inc
adc
sbb
loope
insl
sub
ds
push
mov
push
jo
clc
pop
aas
jae
inc
sub
inc
in
rcll
adc
shlb
call
pop
dec
imul
in
mov
or
imul
aas
xchg
pop
in
sub
and
or
jecxz
inc
mov
lods
leave
add
dec
inc
mov
jmp
js
in
dec
xorl
imul
shrl
mov
mov
sar
pop
adc
fwait
and
push
lock
lret
xlat
xchg
imul
mov
jl
sbb
js
push
jbe
dec
rcrb
jp
and
xor
loop
xor
mov
test
insl
in
adc
daa
pusha
ss
mov
push
test
imul
aas
mov
or
ss
popa
xor
stc
jno
data16
fcomip
mov
pop
mov
lock
xchg
ss
popa
xchg
dec
xchg
sahf
stos
lcall
mov
pop
jbe
lcall
cmp
insw
flds
imul
mov
test
jns
dec
sbb
aam
loopne
push
mov
push
cmp
sbb
inc
sub
scas
hlt
cli
lcall
mov
xor
stc
out
shl
and
test
popf
dec
dec
mov
jl
call
fs
push
lods
into
insb
rol
in
mov
pop
dec
shlb
repz
jle
xchg
add
dec
xchg
icebp
jp
cmpsl
in
cmp
mov
ret
arpl
sbb
mov
fiaddl
hlt
cltd
and
mov
pop
mov
cs
cwtl
pop
pop
movsl
fsubrl
fistpl
iret
sub
jg
out
stos
mov
sub
aad
ret
out
mov
adc
mov
cmp
lods
addr16
sahf
mov
add
dec
xchg
mov
aaa
pop
sub
in
mov
add
and
fs
pusha
and
lret
adc
sti
ds
xor
xchg
je
cmpsb
sbb
sar
insl
jbe
inc
in
sbb
test
lret
lahf
jae
hlt
cmp
sbb
push
enter
pop
insb
dec
repnz
jl
cmp
fldl
adc
mov
and
and
gs
lcall
cmp
cmpsb
push
and
loop
mov
aaa
cmp
dec
test
ret
icebp
dec
fs
shlb
add
jmp
stc
out
dec
push
in
mov
or
jecxz
jmp
addr16
inc
sbb
cmpsl
mov
jno
cmpsl
filds
mov
lahf
dec
inc
fcomip
push
lds
adc
out
jecxz
pop
add
mov
out
shll
outsb
mov
cli
fnsave
rcr
out
sub
mov
repz
outsb
fiadds
cmp
xchg
cltd
jl
nop
dec
mov
fidivl
pop
pop
ret
loop
pop
insb
insl
cli
in
mov
inc
mov
xor
xchg
test
into
xor
add
int
outsl
out
or
imul
movsb
inc
sbb
std
or
test
hlt
cltd
sbb
sbb
dec
pop
jns
insl
enter
mov
jbe
imul
adc
and
add
push
sti
shrl
fmuls
or
mov
jmp
cltd
in
rorb
jb
xor
in
xlat
mov
dec
in
mov
lods
inc
popa
dec
repnz
push
push
stos
testl
mov
js
scas
imul
xchg
cli
cli
push
push
stc
insl
pop
inc
sbb
stos
outsb
cs
mov
out
xchg
scas
mov
repz
lods
sbb
jne
ljmp
mov
ljmp
adc
jae
es
mov
gs
jbe
loop
pop
pop
jmp
jne
fisubrl
fwait
push
popf
notl
ret
fcmovnu
sub
out
clc
jg
mov
adc
sub
xor
and
xchg
test
sti
nop
stc
out
lret
cli
jl
xchg
subb
scas
fists
inc
mov
int3
jb
dec
notb
add
in
popa
int3
fisubrl
mov
cmp
sub
xchg
adc
ds
xlat
cli
jnp
cmp
test
mov
nop
adc
fadds
jge
or
push
jns
pop
jmp
repz
aad
pop
scas
and
scas
adc
push
mov
xchg
movsb
aas
cmpsl
pop
mov
fnstsw
testl
mov
pusha
test
int
test
xchg
loop
jns
sbb
scas
lret
repz
insl
xchg
insl
xchg
hlt
dec
insb
fs
test
ljmp
add
nop
add
ret
dec
push
jl
in
push
outsb
data16
cmp
lods
sub
leave
jne
fwait
hlt
ljmp
repnz
jle
lahf
loopne
testl
jae
fcomps
and
pop
xor
inc
cmp
xchg
sub
mov
sub
shll
sub
mov
jo
fcoml
add
clc
or
sti
sbb
movl
outsb
fcmovnu
ja
shlb
sub
push
call
cmc
mov
es
mov
inc
fs
mov
mov
inc
shrb
fwait
jle
cmp
stos
lea
test
mov
in
and
mov
sub
adc
mov
xchg
nop
scas
aam
lret
or
adc
pop
xor
jecxz
xor
add
lds
jne
adc
sub
xor
popa
addr16
push
nop
cmp
inc
and
pop
js
inc
xchg
or
add
cmp
cmpsl
dec
cmpsl
out
sub
and
popa
out
xchg
mov
fs
jae
push
jae
fisubrs
into
fistl
pusha
sbbb
arpl
imulb
stc
popa
mov
jg
sbb
in
je
repnz
push
lds
mov
adc
and
jl
mov
jae
mov
dec
mov
daa
jnp
xlat
cmpsl
and
repz
imul
sub
movsb
xchg
into
mov
lcall
icebp
into
dec
add
ljmp
outsb
adc
mov
add
or
enter
daa
out
daa
pop
scas
jmp
mov
addr16
rol
dec
ds
jae
ja
xchg
cltd
int
sbb
fldt
ficoml
in
jb,pn
mov
ret
rorl
xchg
add
jg
arpl
xor
leave
mull
xor
out
inc
xor
sahf
ds
jmp
add
fwait
lret
inc
add
inc
outsl
ds
jle
mov
add
mov
notb
pop
add
jge
mov
or
insb
mulb
mov
mov
cli
and
call
mov
sti
fsubp
addb
pop
inc
pop
xor
adc
mov
stc
imul
hlt
mov
sub
and
scas
jns
lock
pop
rorb
stc
or
outsb
jecxz
shl
stc
lahf
stc
out
jns
mov
or
shl
jne
cmc
cmpsl
jmp
cmp
js
jno
in
in
test
and
dec
mov
jmp
push
callw
daa
insb
jnp
rol
roll
dec
hlt
xchg
fcoms
mov
stos
es
scas
int3
and
shr
stos
push
xor
xlat
pop
cmc
leave
jmp
aad
xchg
mov
sbb
inc
ljmp
hlt
insl
sub
jns
int
fisttps
sub
cltd
xor
cmpl
ret
sub
lock
jne
aam
test
mov
insl
xchg
and
mov
ja
js
cmp
lret
sub
xlat
pop
gs
roll
cmp
or
add
call
aam
and
ret
aad
into
jbe,pn
mov
pop
outsb
mov
lock
ret
mulb
imul
pop
sub
xchg
les
push
pop
or
mov
iret
call
loop
lea
int3
out
outsl
xchg
sti
push
inc
ficompl
and
data16
add
pushf
push
pop
push
add
aaa
jne
loopne
lods
pusha
dec
mov
xchg
stos
cmp
fidivs
lret
outsl
mov
push
pop
test
pop
sahf
push
in
jo
jbe
jecxz
cmp
and
add
and
loopne
cmp
add
cwtl
inc
out
cmpsl
jmp
cmp
test
xchg
movsl
mov
sti
sub
div
push
mov
add
sub
cmp
sti
jno
out
ror
sub
sbb
inc
mov
fists
stos
js
inc
mov
mov
arpl
cmp
pop
dec
out
sbb
je
jecxz
sbb
jnp
movsb
inc
adc
gs
sbb
inc
loop
cmp
inc
shll
cmpsl
xor
popa
cmp
dec
es
pop
add
push
cmpsb
ja
les
shll
es
pop
lock
adc
out
sar
lods
jge
shlb
loopne
test
orl
cmc
xor
add
cmc
lret
popf
idivb
test
ljmp
or
pop
repz
call
xor
add
mov
in
jo
adc
jnp
out
adc
outsl
jmp
ret
cs
xchg
out
mov
daa
xchg
mov
fldlg2
inc
movq
outsb
in
or
imul
into
fisttps
bound
cmp
aad
cmp
mov
orl
jg
xchg
jle
pop
jno
insl
jl
pop
outsb
in
cmp
outsb
jae
arpl
loopne
std
inc
mull
add
mov
adc
add
xor
mov
jno
cwtl
and
jg
pop
outsl
add
je
or
pop
adc
mov
cmp
in
lods
test
jae
in
repnz
stc
mov
jl
push
jno
je
imul
bound
cltd
cmp
scas
stos
mov
jb
out
sarb
in
addb
stos
jge
movsl
push
push
movb
push
or
out
cmp
scas
dec
fnstcw
and
mov
lret
push
sub
xchg
lahf
out
pop
mov
icebp
inc
add
fs
cwtl
pop
out
int
mov
mov
shll
adc
out
dec
insb
daa
stos
outsb
mov
cmp
pushf
cmc
jp
mov
test
fldcw
xor
inc
out
ja
into
sbb
in
or
mov
adc
or
dec
mov
ror
ds
das
mov
mov
or
mov
iret
test
cmc
mov
addr16
fcomp
add
out
mov
and
or
or
add
aas
lahf
psubusb
out
ljmp
xchg
pop
xchg
jb
inc
cmp
imul
and
add
test
mov
daa
lods
lock
cld
dec
inc
lock
sbb
arpl
mov
cmc
in
enter
add
out
popa
lock
sub
or
cmp
in
js
divb
or
cmp
sub
stc
shll
out
and
dec
lcall
jno
test
sbb
in
mov
adc
lods
xor
mov
lret
out
ret
add
dec
ja
mov
int
clc
and
push
sahf
xchg
jnp
clc
inc
das
dec
add
and
test
cmp
pop
cmpb
inc
pop
pop
rorl
cmp
xor
nop
test
pop
cmc
or
mov
xor
inc
add
inc
jp
ss
xor
xor
mov
inc
sbb
xor
pop
xchg
jbe
pop
addl
mov
pop
xchg
push
mov
cmc
adc
cmp
nop
js
xchg
jmp
pop
add
fistl
add
popa
cmp
xchg
data16
and
lea
addb
call
xor
bound
outsl
aas
pushf
insl
outsb
fidivs
fcoml
or
fisubs
movq
loopne
cmp
icebp
mull
in
push
push
and
scas
sub
fmul
or
test
leave
loope
pusha
cmp
jp
mov
or
and
push
fldcw
sub
xor
push
xor
cmpb
mov
lock
andl
cmc
pop
push
mov
adc
and
jnp
mov
mov
cli
testb
push
jge,pt
push
fidivrl
sahf
mov
jo
in
or
xor
xchg
loop
mov
in
and
or
inc
fstpt
fs
je
adc
cld
mov
mov
in
cld
test
push
mul
push
mov
lods
sub
addr16
out
loopne
and
sbb
add
xor
shll
lea
pop
dec
hlt
enter
out
enter
and
in
jb
stos
add
sbb
push
pop
popa
mov
inc
push
pop
hlt
xchg
clc
pop
xor
ja
xor
cmp
lahf
jo
ljmp
mov
or
xor
leave
sub
stc
lds
mov
pop
cld
adc
cmpb
cmp
ja
fwait
jnp
or
push
add
pop
cli
push
addl
call
xchg
test
scas
add
lea
out
stos
push
rcrl
xchg
scas
hlt
inc
cmp
dec
cli
test
push
jge
ja
jbe
sbb
jecxz
mov
shll
mov
xor
mov
std
pop
hlt
bound
cmc
xlat
mull
scas
xor
mov
or
push
sbb
mov
push
scas
xchg
enter
mov
popf
add
or
js
fildl
xor
dec
enter
mov
dec
ss
dec
subl
sub
mov
dec
and
dec
hlt
out
outsl
or
sbb
xor
scas
hlt
test
push
add
andb
cmpsb
and
lods
and
lcall
jo
ret
jle
xchg
mov
test
mov
pop
pop
dec
and
mov
mov
sbb
clc
repz
fs
es
lcall
lock
mov
push
add
cmpb
gs
jbe
xchg
pushf
int
decb
or
flds
stos
or
pop
add
icebp
mov
mov
mov
sbb
mov
adc
xchg
aas
cmp
inc
add
push
and
adc
daa
xor
push
idivl
test
and
bound
jne
adc
imul
roll
ror
mov
js
mov
cmpsl
add
jg
iret
ljmp
outsl
clc
sub
fimull
adc
pop
sbb
cltd
pop
clc
sbb
lds
sub
orb
gs
loope
out
into
lea
push
leave
insb
push
aas
xor
jl
filds
dec
mov
shrl
sbb
pushf
adcl
addb
mov
jae
xchg
mov
or
pop
xlat
mov
arpl
das
jg
jae
mov
ds
jnp
sub
mov
fcmovbe
int3
add
push
or
frstor
dec
ja
inc
jne
cli
mov
jne
jle
outsl
loope
cmp
pop
push
jp
mov
pushl
insb
adc
mov
mov
int
and
push
jbe
scas
cs
dec
jbe
call
mov
xlat
jmp
pushf
xor
and
jnp
sbb
mov
hlt
loope
fwait
cmp
into
inc
or
jns
cli
pusha
cltd
inc
das
sbb
mov
mov
sub
pop
cmp
es
pop
adc
ret
or
inc
add
test
movsb
pusha
cltd
cmp
push
insb
jnp
jge
sbb
pop
into
out
int
enter
aam
mov
pushf
sub
and
imulb
sub
mov
jle
add
int3
lods
fisttpl
clc
sub
adc
das
rorb
mov
sub
ret
sub
sub
into
mov
or
pop
imul
out
jle
lcall
jbe
xor
ret
or
add
hlt
add
int3
add
decl
fwait
push
gs
xchg
pop
dec
sub
in
loope
arpl
sbb
data16
mov
insb
call
or
mov
imul
sarl
iret
scas
and
loope
movd
and
mov
or
xchg
mov
je
xlat
pop
dec
data16
push
nop
and
mov
ljmp
sbb
push
hlt
arpl
enter
cs
call
lret
lds
dec
test
xor
adcl
popa
pop
outsb
out
outsb
std
push
mov
mov
xor
inc
cmp
mov
jb
std
dec
mov
add
test
ljmp
into
mov
cmpsb
fs
out
cmp
js
repnz
out
mov
sbbb
je
test
mov
aad
repz
sbb
xchg
addb
adc
or
and
mov
mov
insb
mov
outsl
aad
cltd
pop
xor
and
jno
mov
imul
ret
jge
mov
pop
push
pop
sbb
out
int3
stos
and
loopne
push
lret
leave
mov
adc
mov
das
inc
stos
sub
push
popf
lock
xchg
jne
dec
or
roll
fcomps
popf
xchg
pop
rolb
mov
lea
cmc
loopne
lds
ss
sbb
cmp
mov
in
mov
imul
pop
sbb
or
mov
pop
sbb
mov
scas
jecxz
or
jp
jl
and
std
or
fmull
scas
lods
fidivs
push
inc
or
xchg
jo
xchg
dec
out
jl
jmp
repz
adc
sbb
xor
shlb
xor
into
pop
stc
mov
xchg
outsl
mov
ljmp
js
inc
sub
outsb
push
lods
xchg
xchg
andb
mov
xchg
xor
adc
adc
inc
dec
sbb
cwtl
xchg
ds
addr16
mov
sub
sbb
xorb
imul
cwtl
jmp
fisttpll
repnz
cld
loope
dec
jo
popf
repnz
adc
xchg
inc
out
jnp
jmp
mov
ret
lea
adc
daa
and
jle
repz
lods
jne
mov
inc
repz
sbb
push
pop
mov
push
dec
repz
pop
hlt
sahf
xorb
mov
pop
jnp
dec
outsb
cmp
out
mov
adc
add
orl
sahf
lahf
adc
pushf
bound
xchg
pushf
cmp
in
or
aam
fidivl
cmpsl
sahf
fstps
cmp
push
mov
jl
outsb
jl
mov
das
jne
mov
popf
push
adc
adc
inc
mov
mov
jae
out
push
jae
lret
dec
repz
dec
sarb
pop
dec
dec
out
and
pop
or
aam
jmp
pop
bound
fadds
xor
xlat
inc
xchg
ja
pop
cmp
sub
int
fisubrs
adc
push
pop
jns
dec
adc
lahf
divl
fldl
adc
push
gs
cmp
movb
mov
push
fldt
ljmp
xlat
jns
mov
mov
jge
add
xor
push
call
push
add
jl
movsl
aam
mov
movsl
lret
cmp
push
jg
inc
rcr
call
add
hlt
cmp
push
out
add
xchg
fyl2x
jmp
lock
sub
adc
pop
insl
ss
ljmp
rclb
sbb
inc
dec
xor
lret
xchg
pop
xor
call
rcrl
mov
mov
pop
ja
jge
pop
inc
sbb
sbb
or
test
push
pop
push
pop
aas
leave
aam
push
pop
stos
and
imul
jnp
xorl
cld
mov
or
push
mov
bound
cmc
into
ja
mov
leave
push
test
sbb
mov
add
push
mov
pop
test
xchg
sub
cld
je
or
pop
imul
sti
jo
adc
cmc
sub
and
addr16
push
daa
fs
inc
repz
and
cmp
std
mov
adc
add
fstpt
gs
sub
in
pop
mov
scas
rol
push
adc
daa
jle
sbb
test
outsl
ret
in
nop
movsl
mov
std
push
in
cwtl
lock
data16
mov
mov
adc
aaa
mov
testb
push
cmpsl
push
in
sahf
jmp
bound
out
mov
outsb
sahf
jnp
mov
cmpsb
xor
pop
jae
pop
sti
mov
dec
clc
pop
mov
pop
adc
push
fnstenv
fildl
or
daa
xchg
pusha
xlat
jne
mov
ficompl
test
out
out
movsb
pushl
mov
push
insl
inc
xchg
add
cli
jmp
sti
jge
je
sub
bound
icebp
mov
movsb
into
add
ja
stc
pusha
stos
xor
rol
jp
xchg
adcb
test
pop
pop
test
mov
push
add
xchg
ror
in
arpl
xor
sub
mov
xchg
mov
cmp
sbb
in
inc
sbbl
sbb
inc
pop
fsubs
clc
call
mov
sbb
mov
loopne
jne
fimuls
inc
jnp
jmp
out
xor
mov
iret
dec
lods
into
dec
sbb
in
popa
push
cwtl
dec
outsb
pop
dec
pop
and
cmp
xchg
push
xchg
xor
aad
fcmovnbe
out
xor
jmp
sbb
xlat
add
insl
lret
fsubs
int3
popf
pop
jmp
fs
cld
xorb
and
lahf
aam
mov
scas
cmpsl
and
mov
and
cwtl
fnstsw
xor
sbb
sahf
xor
das
sub
scas
dec
cmp
ja
sarb
jnp
fwait
cmc
mov
pop
lret
push
mov
icebp
or
cmpsb
mov
jecxz
mov
xchg
xchg
cltd
lret
lahf
sbb
or
mov
pop
mov
aam
jmp
sarl
push
lret
cs
test
and
out
pop
iret
mov
and
incb
fmull
sub
ljmp
adc
jae
push
inc
xor
aam
fsubrl
dec
cmpsb
add
cli
push
mov
jmp
es
inc
cwtl
lret
mov
popa
adc
push
lcall
aam
jo
push
loopne
loop
xor
mov
hlt
rorb
jne
icebp
loopne
pop
xor
mov
pusha
int3
inc
mov
mov
mov
pushf
xor
es
mov
mov
xchg
xor
imul
fnstcw
cmp
mov
jge
int3
inc
ud0
sub
sub
add
or
mov
pushf
jle
jle
xchg
cmp
jle
push
xchg
out
fists
pop
add
lods
or
xchg
pop
rcrb
jne
push
fcomps
pop
mov
imull
mov
pop
cwtl
fistps
pop
test
mov
loop
fnsave
cmc
sbb
inc
fstpl
repz
mov
mov
xchg
out
jne
push
and
jbe
inc
inc
mov
push
pop
aaa
xchg
neg
outsl
roll
ficompl
fnsave
cltd
bound
icebp
mov
mov
movsl
jmp
ret
jp
popa
bound
decl
sub
mov
sbb
into
xor
adc
mov
jecxz
lret
mov
xchg
mov
scas
js
mov
pop
ljmp
pushf
leave
enter
iret
int3
push
bound
mov
push
pop
mov
shll
hlt
movsb
std
xor
adcb
dec
cmp
mov
sarb
pop
cld
imul
out
adc
push
cli
aam
pop
aaa
xor
adcl
mov
loop
xor
jg
nop
imul
dec
out
mov
out
cld
aas
popa
add
sahf
imul
dec
adc
dec
mov
jge
and
mov
pop
or
cmp
in
mov
scas
repz
mov
add
xor
mov
daa
add
inc
pop
adc
push
popf
mov
filds
and
cld
das
repnz
mov
lock
int
inc
lret
sub
or
inc
movsb
ret
mov
cli
flds
cs
test
adc
add
icebp
incb
inc
ret
fstp
jle
repz
ds
test
in
jp
jno
add
jbe
inc
jnp
stc
add
push
sbb
mov
fbld
loopne
int
test
pop
in
sbb
scas
sahf
subl
int3
fsubr
je
lock
fimuls
mov
mov
xor
adc
je
mov
jns
pop
add
jae
push
bound
fidivl
int
cmc
cs
loope
sub
lds
xor
sbb
pop
test
outsb
push
cmc
aaa
jo
fimull
addr16
rorb
mov
scas
lock
sub
jns
mov
pushl
sar
mov
inc
daa
fwait
outsb
imul
mov
es
movsb
aad
or
nop
jle
or
sahf
mov
pop
dec
add
cmp
jnp
mov
push
mull
scas
pop
push
xor
mov
iret
in
dec
jnp
adc
in
icebp
js
or
jbe
ror
cmp
jmp
dec
test
ret
mov
push
lods
insl
mov
lret
jne
ja
loopne
push
mov
repz
divb
mov
repnz
cmp
jge
loop
enter
rolb
ficomps
lret
push
lds
dec
in
inc
scas
js
push
inc
insb
mov
fidivs
out
test
push
xor
hlt
out
lds
jbe
clc
push
out
sbb
jg
add
sbbl
mov
lret
cmp
adc
lods
dec
jmp
xchg
push
push
sarb
mov
adc
mov
mov
lods
xchg
jmp
and
scas
shll
ja
cld
data16
jo
fisttps
xor
xor
clc
inc
jnp
fidivs
stc
pop
addr16
pop
lahf
sub
adc
dec
scas
jne
xor
lods
pop
in
out
push
out
pop
and
pop
mov
out
add
mov
mov
cld
mov
jbe
mov
xchg
sbb
fimuls
pcmpeqd
test
jns
addr16
sub
adc
mov
xchg
inc
mov
jne
inc
push
lods
in
pop
jmp
inc
mov
outsl
jo
ljmp
xlat
sub
push
cwtl
inc
mov
imul
push
dec
in
iret
ret
cmc
add
sub
cmp
push
jbe
movsb
jo
idiv
rcr
andl
out
cmc
or
adc
pop
dec
sub
imul
ffreep
jge
adc
int3
dec
adc
cmp
cltd
mov
xor
cmp
cmp
sub
cmpsb
cltd
pop
hlt
es
out
dec
in
addr16
leave
dec
cmp
add
push
in
fdivrl
out
or
cld
popa
shll
icebp
rcrb
mov
dec
mov
das
fcom
xchg
push
pop
faddp
pop
sbb
outsb
cmpsb
popa
scas
push
pushf
mov
gs
hlt
les
add
jl
shll
shl
add
and
mov
imul
pushf
imul
loopne
test
fwait
arpl
pop
jl
cmp
iret
jp
adc
paddsw
jmp
jb
stc
test
outsl
jl
xchg
push
mov
mov
sarl
stc
cmp
rolb
imul
adc
jp
jge
cmpsl
out
pop
mov
cmp
jb
nop
leave
cwtl
lods
arpl
dec
lret
xchg
leave
mov
xlat
lret
mov
ficomps
je
shrb
dec
insb
outsb
adc
cmp
push
jno
jbe
cmpl
mov
sbb
xlat
in
jns
enter
sub
mov
out
icebp
pop
jno
mov
sub
mov
push
aam
xor
fiadds
mov
mull
cld
addr16
insl
pop
fldenv
in
jnp
int
dec
push
ret
scas
in
sub
dec
mov
pop
jge
in
dec
leave
mov
js
int
call
sbb
aaa
mov
popa
mov
add
shlb
cmp
cwtl
mov
loop
je
mov
jo
ja
inc
pop
neg
xchg
fpatan
cltd
and
call
rdtsc
and
in
push
jnp
jne
cmp
cmpsl
lret
lock
jno
mov
sub
in
js
jge
add
cmpsb
sarb
cmp
adc
mov
xor
lret
arpl
or
shll
push
push
mov
int
pop
mov
movsb
fisttpll
inc
xchg
mov
fcmovnu
dec
cmpsb
mov
in
cmc
frstor
js
insl
in
repz
popa
mov
hlt
mov
mov
shll
push
jo
inc
sbb
push
or
fwait
shr
push
in
das
sti
sarl
lock
les
out
sub
sbb
adc
cmpsb
call
cmp
fisubrs
cltd
cmpsb
mov
dec
push
into
mov
sbb
xlat
push
loopne
push
test
xchg
sub
nop
jle
mov
xchg
das
adc
aaa
divl
mov
in
imul
pop
sub
scas
lret
inc
je
mov
cmc
xor
pop
xchg
cmpsl
xchg
hlt
pop
jl
jo
lods
fwait
int3
pop
gs
push
addr16
stc
adc
sti
fsts
lock
xor
dec
imul
bound
into
adc
jl
pop
or
jae
scas
aam
or
rcll
cmp
xchg
call
mov
int
add
pop
sahf
adc
pop
enter
inc
mov
inc
iret
stos
jnp
out
ljmp
jp
int
mov
in
fildll
lret
dec
popa
fs
sbbl
xor
arpl
and
sarl
aad
shl
rcll
mov
adc
lds
mov
movntps
aam
divl
stos
xchg
cmp
mov
ds
dec
dec
mov
cmp
cltd
scas
cmp
subps
or
je
inc
inc
push
subl
push
sub
or
not
cmpsb
jo
jl
xor
in
jl
mov
test
mov
iret
adc
mov
inc
push
stos
or
mov
pop
mov
cmpsl
sub
idivl
cmp
mov
push
jmp
cwtl
leave
cmp
lahf
sbb
xchg
dec
mov
out
mov
lods
in
jae
inc
popf
pop
ret
shl
xlat
int
lea
sbb
stos
loopne
jecxz
sbb
mov
and
jno
into
outsb
mov
xor
dec
pop
dec
fwait
cmc
xorb
fnsave
xchg
cmpsl
divb
pop
rcrb
out
or
ds
cmpsl
cmp
lret
xor
flds
mov
push
jmp
filds
add
push
lea
fs
push
out
mov
mov
ret
mov
shl
push
js
and
mov
sarb
popa
cmp
mov
push
cmp
js
push
js
ljmp
aaa
jmp
fidivrs
dec
push
shrl
int3
out
out
negl
test
and
das
mov
jbe
dec
data16
clc
adc
je
sarl
mov
lds
jb
sbb
nop
ljmp
cmp
xor
cmp
xor
sahf
add
mov
lea
jnp
es
cmpsl
mov
inc
push
outsb
mov
test
jo
cld
sub
ss
push
mov
into
out
xlat
ljmp
pop
leave
out
jecxz
out
cmp
add
cmpsl
inc
mov
cmpsl
out
mov
cli
jne
add
iret
cmp
rcrb
pop
jb
xchg
in
lds
cs
mov
mov
stos
add
jae
sbb
icebp
and
ljmp
mov
lea
cmc
aas
jb
push
outsl
int
mov
or
dec
pop
pop
mov
stos
xor
adc
incb
repz
in
pop
jge
pop
xchg
ficomps
jns
jno
mov
jne
pop
out
mov
ret
dec
adc
lock
mov
add
or
dec
mov
cmp
mov
mov
jne
sahf
or
aaa
xchg
sbb
xchg
pop
lret
mov
xchg
cmp
cmpsl
inc
test
clc
lods
imul
cmpsl
adc
mov
fistl
out
add
dec
mov
cmp
add
les
fs
fcompl
lea
mov
jmp
push
clc
out
inc
pop
push
push
jnp
mov
fnstsw
scas
enter
fs
arpl
and
icebp
das
ror
adc
repnz
sbb
iret
in
pop
mov
in
and
lahf
gs
outsl
jno
sbb
jne
xor
movb
jl
xor
cltd
xchg
dec
idivb
jae
inc
fwait
popl
mov
xchg
pop
fildl
mov
sub
xorl
mov
int
in
outsb
cmp
mov
arpl
mov
mov
dec
jae
cld
adc
sbb
fildll
jmp
mov
shr
les
fists
outsl
fidivs
rcl
imul
push
or
xchg
nop
sbb
sahf
mov
add
movsb
popf
fldcw
dec
or
repz
sbb
sub
insl
and
mov
fnstcw
mov
mov
aad
push
cmpsb
adc
jne
scas
jae
and
icebp
insl
es
cwtl
imul
mov
nop
data16
xor
out
popa
pushf
or
add
jl
addl
jnp
fcoms
jne
pop
mov
in
xchg
mov
dec
inc
or
out
lds
fwait
stc
push
ljmp
lea
cmp
cmpsb
fcmovbe
cmpsl
std
fdivl
cmp
mov
mov
xchg
mov
sti
fstpt
sbb
adc
jns
cmp
inc
int3
mov
xorb
cmp
pushf
sub
sbb
adc
mov
roll
rorb
xor
push
out
ljmp
std
cmpsl
and
lahf
jl
insl
or
jmp
and
cmp
je
push
and
int
mov
mov
inc
xor
and
jmp
xor
push
lret
push
js
aad
jecxz
xor
jmp
fnstcw
dec
dec
mov
pop
clc
mov
loope
mov
mov
out
pushf
hlt
inc
inc
out
jecxz
cmp
mov
mov
dec
inc
in
mov
iret
stos
ds
std
call
pushf
inc
dec
xchg
insl
hlt
or
mov
mov
push
nop
int
sub
cld
lock
shr
xor
out
in
shr
js
divb
jno
ljmp
inc
imul
mov
inc
dec
xchg
pop
fmull
sar
cld
repnz
daa
xchg
and
and
in
dec
inc
xchg
fs
cmp
lds
lret
orb
out
push
cld
test
pop
lds
popf
out
cmp
fstpt
shr
cmc
and
sub
push
mov
xchg
out
push
push
js
push
in
sub
cmp
out
lret
js
cs
aad
in
fsubp
xlat
call
lock
xchg
sar
add
stos
dec
cli
push
test
jns
js
dec
hlt
mov
jg
mov
lds
in
and
pop
loope
shll
insl
and
enter
stc
movsl
pop
out
dec
pop
int
jb
pop
movsl
push
movsl
mov
mov
stos
shl
xlat
frstor
in
in
sub
cmp
addr16
rcl
mov
out
xchg
fdivl
add
mov
sbb
pop
fiadds
popf
dec
inc
jmp
adc
sahf
cmpsb
int3
testl
or
or
mov
dec
add
lds
push
inc
dec
pop
cmp
push
ffreep
mov
jle
dec
in
mov
jp
xchg
shll
aaa
or
movsb
xchg
or
or
add
inc
pop
xchg
sbb
push
dec
out
push
xchg
mov
dec
and
xchg
gs
cmp
ja
mov
out
enter
jo
inc
dec
mov
pop
jp
mov
jl
cmp
mov
dec
addl
fld
add
loop
mov
lret
or
dec
clc
insb
sub
push
ja
pushl
jmp
fucomi
mov
popa
and
jmp
in
add
xchg
daa
popa
cld
iret
jmp
cmp
iret
push
cmp
mov
call
adcl
insb
pop
leave
push
fwait
or
sahf
repz
testl
into
popfw
insb
adc
dec
or
add
shrb
jl
lea
ret
shlb
lock
mov
call
jmp
adc
repz
pop
mov
pop
loope
fsubr
into
sbb
jno
xchg
cmp
rol
sbb
lods
jge
pop
stos
cs
add
das
or
add
dec
test
inc
imul
push
inc
adcb
daa
fs
mov
lods
repz
in
jecxz
cltd
push
push
adc
cmp
imul
fbld
mov
mov
dec
dec
mov
jbe
roll
sbb
jae
pop
enter
ficomps
cmp
push
out
push
dec
add
test
inc
jmp
jmp
fbstp
mov
fisttpl
cmc
push
adc
pop
inc
xor
pushf
adc
push
jg
js
fldl
fnstcw
pop
in
je
insb
lock
sub
int
ss
loope
add
or
push
mov
or
dec
out
sahf
and
fs
push
jns
imul
sbb
repz
adcb
pop
aad
push
hlt
sbbb
mov
pop
mov
mov
xor
pop
add
dec
jle
lea
cli
xor
inc
fs
dec
addr16
mov
out
mov
jge
outsb
add
jne
or
mov
dec
in
inc
imul
in
loopne
inc
inc
sub
or
pop
and
push
and
ja
xor
add
jo
sbb
push
in
mov
outsb
adc
sbbb
fidivs
shll
ja
or
std
out
cld
adc
mov
movsl
push
or
sahf
fildll
pop
pop
repnz
mov
xchg
push
mov
sub
and
add
fld
test
dec
inc
jge
lret
lods
shlb
lock
jae
call
rolb
out
jg
inc
or
adc
int
or
fwait
mov
sbb
rcll
pusha
inc
or
outsb
and
mov
into
mov
adc
iret
pop
push
testb
mov
mov
push
lock
and
in
lock
mov
out
adc
push
aad
push
ret
sbb
push
inc
xlat
adc
dec
adc
cmp
push
xchg
jl
mov
ret
sub
mov
test
cmpsl
in
lea
clc
xor
rcrb
jmp
je
jmp
iret
mov
jnp
lods
mov
mov
ja
mov
pop
or
inc
mov
push
pop
inc
data16
icebp
roll
dec
test
adc
aaa
mov
xchg
mov
mov
sub
mov
mov
jmp
test
leave
ret
bound
repnz
aad
dec
sub
cmp
pop
sbb
lret
mov
xchg
inc
mov
test
sahf
hlt
enter
xchg
pop
in
out
roll
jg
jg
or
fiaddl
movzwl
pop
dec
mov
dec
iret
mov
out
push
enter
fisttps
and
movsb
push
cwtl
dec
dec
aam
lock
jae
fisubl
sahf
mov
insl
int
sbb
xchg
shl
jl
cmp
push
push
xlat
in
push
pop
push
cmp
xorb
pop
mov
lahf
adc
add
les
jbe
push
les
movsl
stos
fs
lods
les
cltd
mov
ret
xchg
sub
mov
dec
inc
push
aam
jle
mov
into
mov
cmc
arpl
add
movb
addb
mov
negb
and
test
cmp
js
inc
cmp
testl
cwtl
jl
int
and
aaa
lds
fidivrl
fwait
nop
jbe
es
out
out
add
dec
dec
and
clc
jns
add
xor
add
andb
vprotd
enter
mov
stos
ss
and
mov
xor
adcl
lret
sub
lock
push
sbb
popa
mov
pusha
rcr
sbb
jno
jmp
jecxz
sub
xchg
mov
xor
sarb
sarl
movq
cmovg
add
sbb
adc
jns
pop
outsl
pop
mov
repz
push
jle
std
push
adc
pop
repz
mov
fwait
xchg
in
xchg
mov
dec
sub
pop
inc
cmp
pop
dec
jno
fcomp
lret
cmpsb
negl
vzeroupper
stos
loopne
xchg
dec
clc
pop
cmc
cmp
pop
push
negb
pop
js
in
stc
cmpsl
iret
and
std
fstpt
ret
push
aam
data16
fbstp
dec
pop
aad
fisttps
inc
lock
or
mov
xchg
add
mov
fadd
cmp
xchg
fdiv
or
mov
das
xchg
push
cmp
fsubl
iret
inc
ljmp
pop
and
sarb
fnsave
int
add
cli
push
xor
outsb
insl
pop
xchg
int
dec
mov
add
lds
mov
sub
icebp
mov
push
bound
arpl
in
pop
inc
xor
push
stos
add
adc
pminsw
mov
ljmp
pop
and
test
movsl
lods
inc
repz
out
in
jo
cmp
mov
add
stc
lret
and
cmp
mov
or
leave
pop
out
xchg
jb
push
leave
icebp
out
xchg
mov
or
gs
push
movsl
sub
lret
fmulp
arpl
je
add
jbe
test
xchg
mov
out
xchg
pop
pop
jmp
hlt
dec
add
sub
pushf
jp
inc
test
cwtl
push
nop
mov
sub
ljmp
bound
adc
inc
push
jne
cmp
xor
mov
pop
jl
es
mov
test
stc
dec
cwtl
push
push
cmc
cmp
stos
scas
aam
outsb
movsb
cli
movsl
fcoml
out
inc
shr
dec
fisubl
into
pop
test
cli
sti
jno
test
data16
mov
jl
arpl
jle
adc
ljmp
mov
pop
in
rorb
cmp
xchg
mov
inc
addr16
bsf
sbb
out
enter
mov
jb
gs
cmp
pop
pop
leave
fldcw
jae
mov
push
sbb
in
pusha
push
mov
ss
data16
xor
lock
mov
lock
test
out
fdiv
js
pop
and
das
cli
mov
adc
push
mov
sahf
in
pop
out
hlt
popa
jl
roll
inc
mov
mov
mov
rorb
push
arpl
fistpl
adc
add
fcompl
or
cmp
push
jne
cld
sti
adc
mov
pop
jnp
fwait
sub
repnz
or
mov
bound
jb
inc
xchg
push
jns
jp
inc
out
lods
daa
icebp
sti
push
imul
pop
push
mov
xchg
js
or
ljmp
sbb
aad
les
adc
div
jp
in
inc
test
fdivrl
pusha
pop
mov
cmc
in
div
js
int
sbb
jnp
xlat
jp
pop
pop
adc
sub
les
push
xor
push
pop
out
fwait
in
cmp
arpl
pop
mov
pop
icebp
out
lret
test
pop
hlt
inc
fnstcw
aaa
xchg
push
repnz
jle
pushf
shlb
mov
xor
outsl
scas
jge
mov
lods
jno
das
ss
fadd
jmp
or
lods
jmp
jns
pop
fldenv
adc
insl
fistps
jnp
mov
aas
ja
jl
sub
sbb
jg
rclb
pushf
cmp
pop
cmpl
mov
dec
add
xchg
in
xchg
pop
fisttps
or
stos
rclb
or
mov
fwait
dec
insl
arpl
mov
inc
fcoms
cmp
cmp
out
mov
mov
inc
subb
adc
add
push
push
out
jne
sahf
adcl
in
sbb
jmp
sti
cmpsl
jg
jg
dec
inc
or
das
jne
xor
shll
jo
jo
outsb
sub
ja
dec
push
jmp
lds
pop
sti
jmp
repz
jl
scas
sbb
mov
leave
adc
rcl
lods
jle
lods
repz
ds
mov
sub
push
xchg
mov
mov
cmpb
dec
int
and
lea
pop
ret
jp
dec
or
jb
test
stos
in
xchg
mov
xor
clc
sbb
jge
adc
sbb
sub
mov
test
ljmp
les
int3
sbb
loope
arpl
inc
jo
pop
mov
int
push
sub
std
mov
add
dec
fisubrl
sub
mov
mov
mov
mov
mov
mov
mov
add
sarb
pop
loope
and
sub
inc
sbb
dec
pusha
lods
and
ficomps
test
jns
movsb
sbb
repz
add
aaa
mulb
inc
xchg
fdivl
aad
sub
std
pop
fidivrs
sahf
mov
ja
xchg
push
ss
jp
cltd
imul
add
ja
jle
xchg
add
lahf
and
jmp
xchg
adc
js
mov
or
add
aam
nop
dec
popa
mov
pop
pushf
ljmp
or
inc
cltd
jne
inc
sbb
loop
daa
jnp
mov
aaa
pop
or
out
fsubrs
rcr
mov
push
out
pop
push
jnp
mov
enter
lods
lods
daa
sub
test
les
jg
dec
adc
inc
push
mov
outsb
push
cwtl
push
lds
xchg
mov
ja
shrb
xchg
mov
adc
sbb
ret
mov
xor
cmp
jecxz
sbb
jp
inc
mov
sbb
mov
inc
pop
rorb
adc
rolb
mov
sub
dec
adc
xor
pop
cmp
cld
mov
mov
fisubrs
addr16
pusha
fildll
cmpsb
dec
outsb
repz
sbb
ss
xchg
cmc
dec
adc
frstor
mov
pop
mov
or
arpl
push
or
mov
pop
std
decl
jmp
or
or
mov
or
aam
movsb
es
stc
sbb
push
pop
pop
jmp
push
xor
cli
mov
pop
aas
gs
aas
pop
push
cmp
mov
xchg
rorb
test
xor
inc
out
mov
test
in
dec
cltd
ljmp
ffreep
mov
repz
out
iret
push
adc
cwtl
stc
fs
pop
pop
js
and
repz
fstl
das
push
dec
or
mov
dec
add
fldt
loopne
push
inc
lret
fistl
shl
loopne
mov
and
jb
cmc
xor
in
mov
xor
or
or
cltd
sbb
pushf
loope
fwait
insb
adc
scas
shl
loopne
xor
mov
lock
icebp
jbe
cli
xchg
pop
mov
movsl
test
push
adc
push
or
rorb
mov
imul
inc
pop
in
sub
jne
pop
adc
cmp
or
call
out
cmpsl
fists
mov
out
ret
ljmp
clc
xchg
lods
pusha
rolb
out
fists
lret
or
sti
mov
mov
fiadds
push
fisttpl
std
push
clc
movsl
aam
xchg
push
inc
xlat
syscall
loopne
dec
aas
ret
mov
jge
lahf
dec
loope
sti
push
or
mul
mov
lock
add
hlt
dec
fcomps
stc
lahf
ljmp
popf
cmpsb
mov
mov
and
sub
mov
cmpl
scas
das
mov
insl
pop
adcl
or
cmpsl
and
jne
insb
jns
add
jmp
test
sub
fwait
pop
inc
add
adc
push
pop
cmc
jge
mov
imul
push
adc
cmp
rolb
leave
dec
ja
add
fcoml
sti
xchg
dec
cmp
jmp
xchg
and
jl
bound
jl
push
mov
imulb
aaa
pop
lock
cs
adc
pop
lods
test
andb
add
push
jns
bound
and
ficoms
inc
cmp
and
outsb
rorb
bound
or
push
jmp
add
mov
cmp
push
idivl
add
fisttpl
sbb
fistpl
rcrl
cmp
dec
mov
xor
hlt
jle
cmp
push
xor
fildl
inc
sbb
test
sahf
in
fstpl
bound
imul
or
repnz
cmp
lds
nop
icebp
lret
and
int3
sub
dec
adc
xchg
fwait
std
stc
lret
push
addr16
pop
jmp
cmp
lret
adc
xor
ss
shll
or
cmp
xchg
dec
in
inc
push
ss
and
pop
xor
xorb
sub
jge
aad
daa
sub
loopne
adc
cmp
jo
xchg
jp
inc
daa
pop
and
pop
mov
cmp
out
mov
out
fwait
scas
in
adc
mov
loopne
sub
mov
mov
cmp
sub
cmp
jbe
mov
push
ja
push
dec
cld
ljmp
jae
int
pop
or
push
fistl
jns
sahf
xchg
inc
loope
les
pop
cmp
in
mov
cld
dec
adc
sbb
dec
mov
pushf
or
fldcw
add
jp
movsb
mov
je
adc
jae
and
fwait
test
movsl
push
push
push
mov
cltd
sarl
add
push
cld
xchg
dec
mov
and
jns
insb
xor
ljmp
test
sbb
insb
push
dec
dec
mov
fucom
mov
loopne
rclb
inc
and
lods
hlt
dec
sahf
sti
shlb
xor
shll
xchg
mov
jno
sub
xchg
shrb
dec
insl
jb
inc
inc
lret
and
gs
pop
xor
inc
sbb
cmpsl
sbb
pop
cltd
sub
aaa
fnop
iret
jmp
incl
test
sarb
jg
iret
rcll
xchg
lcall
test
gs
mov
cmp
mov
mov
aaa
mov
fadds
sti
xorb
inc
pop
sahf
mov
xchg
or
cmp
aam
fnstsw
xor
jg
sub
lret
out
test
test
lods
bound
faddl
jne
divl
xchg
ret
mov
xchg
mov
sub
pusha
in
mov
sbb
cmpl
fwait
jge
adc
out
data16
mov
idiv
ret
mov
mov
and
pop
xor
add
movsl
ss
repnz
bound
push
jns
shr
icebp
imul
lret
jae
lds
dec
fcmovnbe
xchg
mov
push
int
ja
mov
adc
hlt
jbe
push
jmp
cmpsl
stc
idivl
imulb
sti
cmpsb
mov
dec
insb
ds
fistps
ficoms
and
aad
imul
dec
les
inc
shll
fimuls
jg
lret
cmpsb
cmpsl
sbb
hlt
fldt
jp
int3
fisttps
dec
and
xchg
lahf
mov
test
cmpsb
fstp
sarb
sub
xchg
add
shll
mov
sbb
movsb
pop
pop
pop
repnz
addl
and
ja
aad
add
cltd
call
mov
out
in
addl
cmc
ret
cld
xor
call
push
jno
mov
inc
mov
mov
xor
in
dec
mov
adc
mov
mov
test
add
sti
inc
rcrl
push
adc
mov
vorps
dec
into
mov
in
cmp
mov
jb
jno
adc
fiaddl
hlt
pop
stos
dec
add
mov
adcb
aaa
aad
imul
aad
out
push
daa
hlt
adc
xchg
iret
das
mov
jmp
int
sbbl
divl
cmp
xchg
jae
insb
mov
cmp
ja
xor
xorl
mov
jg
mov
fsqrt
or
int3
cmp
aam
enter
out
inc
iret
adcl
repnz
cli
faddl
movsb
jmp
add
mov
pop
push
cmc
stos
or
aam
push
add
or
fisttpl
roll
xchg
xor
loopne
xchg
mov
mov
outsb
lahf
std
cli
jmp
mov
mov
dec
jae
dec
movsb
std
sub
sbb
cmp
ds
xchg
mov
fcomps
in
mov
cwtl
mov
cmpb
push
adc
mov
cmp
or
pop
mov
into
mov
into
jge
and
cmp
cli
inc
mulb
movsl
mov
imul
je
push
push
jp
dec
jb
outsb
pop
xchg
or
out
add
fdivr
pop
loopne
sbb
lock
mov
mov
stos
pop
insl
and
push
bound
jg
or
pop
rcrl
xlat
call
sahf
xor
fs
cmpsb
lret
jmp
cmpsl
add
fiaddl
cmc
jne
xor
data16
mov
cmp
in
jns
sti
icebp
mov
int3
cmc
in
loope
inc
test
out
inc
test
aad
cwtl
push
jge
sbb
outsl
ret
pop
sbb
dec
dec
lahf
in
insl
mov
fidivrs
ja
stc
int
mov
fstpt
insl
sub
call
inc
inc
and
rcr
stos
fdivl
sbb
inc
pop
jge
out
cmc
push
push
out
mov
mov
es
popf
mov
pushf
xchg
movsb
notl
adc
or
xchg
dec
inc
jle
mov
cmc
fs
popf
dec
cld
stos
inc
mov
pop
sbb
jl
fwait
sub
insl
adc
cmp
adc
cld
jp
and
fwait
shrb
dec
cmp
push
iret
fistpll
push
sbb
pop
add
pop
rcll
cmp
mov
cmp
nop
repnz
sub
mov
and
or
fiadds
pop
sbb
xchg
jne
and
cmp
fidivrl
inc
push
and
jno
jno
jo
stc
and
jo
xchg
lods
das
dec
add
adc
sti
clc
fsubl
mov
dec
jns
jae
cmp
xchg
or
addb
aam
bound
les
cmpsl
pop
imul
shlb
stos
xchg
das
into
pop
int
fildl
cltd
fcmovnbe
adc
addr16
in
notl
aas
xchg
adc
jo
mov
lods
adc
out
xchg
fmull
cmp
jbe
fstps
inc
sahf
and
ds
stos
pop
xchg
or
pop
inc
cmp
mov
ret
fistpll
mov
inc
adc
sbb
mov
mov
loop
enter
jl
mov
xor
mov
test
movsl
popa
jp
adc
stos
stc
jbe
cmpsb
movsb
shll
and
fs
bound
insb
pop
cmpb
add
pop
pop
scas
xchg
xorb
pushl
les
jg
adc
pop
xchg
es
add
mov
mov
sub
and
xchg
stc
xlat
xchg
xchg
sahf
sub
dec
fcompl
mov
mov
mov
int
idivb
js
shl
push
mov
sahf
adc
setne
in
pop
push
cmp
cmp
leave
mov
int
jg
pop
add
mov
or
pop
cmp
std
push
fdivs
popa
lret
and
sub
fmul
adc
xchg
or
sub
xor
sbb
cli
lahf
test
mov
mov
jp
sbb
cmp
pop
xchg
jl
cmpsl
bound
dec
xchg
or
insb
je
xchg
les
cmc
loopne
or
popf
icebp
fsts
lret
mov
xchg
cli
cmp
pop
es
push
sbb
roll
loopne
xor
mov
push
cwtl
adc
mov
sbb
popf
fwait
std
sbb
dec
mov
and
adc
dec
ret
cli
movsl
and
xor
xor
adc
aam
mov
das
pop
sti
ret
adc
leave
movsl
adc
fcoml
push
xchg
fsubr
shr
lcall
push
sbb
iret
and
sar
xchg
stos
pop
mov
popf
mov
fucomp
pop
rclb
xlat
pushf
mov
mov
and
pop
stc
push
hlt
ret
popf
mov
out
xchg
sub
cmpsl
arpl
inc
into
mov
or
push
mov
idivl
mov
jne
das
push
adc
pusha
and
dec
jne
call
push
scas
nop
sub
add
pop
mov
es
loope
sbb
sbb
cmp
jecxz
lock
add
clc
or
mov
xchg
ret
jmp
loopne
mov
push
mov
loop
mov
xor
ret
loope
out
movsb
ficomps
aas
adc
lds
mov
mov
in
cmp
test
lret
out
adc
lods
sub
imul
mov
xlat
or
out
sub
mov
jbe
cmc
std
fists
outsb
push
fxch
jns
jecxz
in
sub
out
sbb
into
dec
adc
ja
sub
fwait
je
jle
sbb
lds
cld
mov
je
and
mov
xor
test
cmp
or
je
push
push
mov
aad
sub
adc
lods
idivl
or
rolb
adc
dec
sub
xchg
dec
adc
mov
mov
jbe
sbbl
mov
ret
pop
sub
xchg
lods
enter
and
scas
ss
ja
or
ret
insb
jmp
push
aaa
mov
imul
push
cs
stos
mov
xchg
sub
sti
dec
push
dec
movsb
dec
inc
cmp
int
inc
sub
mov
imul
fldt
std
push
addr16
pop
imull
enter
add
and
fwait
shl
cmp
js
fistps
rcll
inc
dec
das
fmuls
icebp
inc
adc
sarb
inc
fists
outsb
add
inc
push
mov
lret
lret
hlt
xchg
in
cmp
sbb
mov
sbb
jl
push
cmp
daa
jne
ljmp
and
adc
pop
shrb
jb
xor
add
mov
rorl
mov
sub
mov
push
jecxz
xchg
inc
pop
gs
test
inc
mov
sbb
andb
lods
dec
xor
enter
mov
ljmp
cwtl
cmpsb
jge
push
push
ffree
sahf
push
ss
jb
stos
dec
cmc
test
scas
arpl
mov
loop
js
idivb
inc
repz
or
repnz
loopne
or
push
js
pop
decl
pushf
ret
scas
push
inc
push
add
adc
mov
jbe
std
outsb
adc
add
dec
shll
lods
in
clc
mov
test
pop
sbb
outsb
orb
fucomi
mov
in
rcll
inc
stos
xor
push
pmuludq
fistpll
out
lea
cmpsb
push
or
and
insl
sbb
shlb
push
push
sub
popa
add
xchg
cmp
inc
fadd
stos
hlt
movsl
xchg
xor
dec
xchg
ds
test
mov
mov
mov
lods
jnp
aad
push
or
mov
cmc
into
sub
int3
pop
push
cmp
mov
dec
dec
jns
out
es
mov
int3
popa
les
fsts
or
inc
jecxz
lock
hlt
inc
out
fs
inc
cmpsl
sbb
cmpsb
add
jb
shll
fs
mov
ret
push
xor
mov
pop
jo
or
add
fimull
mov
push
xchg
jae
adc
xchg
int3
lret
shl
push
or
xchg
push
xchg
cwtl
mov
or
andb
femms
sub
jmp
and
clc
movsl
aam
adc
lahf
and
cmpsb
fxch
push
push
lahf
sar
lods
cmp
add
fucomi
xor
hlt
adc
cmc
js
div
inc
out
ret
stc
cmpsl
rcrl
inc
gs
into
cltd
adc
insb
shrl
sub
mov
in
jo
bound
clc
or
out
clc
divb
sub
or
lods
xlat
shr
lods
push
dec
cmp
test
out
push
into
push
or
out
in
mov
mov
imul
loope
inc
xor
das
ds
adc
jmp
xchg
testb
out
out
and
stos
repz
outsb
movsb
aad
mov
inc
arpl
mov
cwtl
shrl
aas
stos
lods
push
ret
lods
pushf
mov
popf
xchg
jnp
aaa
pop
mov
xchg
and
xor
jne
sbb
add
dec
or
adc
in
dec
mov
mov
or
clc
roll
add
fiaddl
pop
addb
xchg
cmpsl
hlt
stos
jle
lods
and
ret
adc
aas
and
les
in
orb
mov
cli
xor
xchg
adcl
dec
xor
in
push
mov
stos
mov
cmp
iret
insb
in
les
fnstenv
addr16
cmp
adc
sub
mov
clc
and
loop
mov
cmc
idivb
mov
outsb
ret
data16
jmp
mov
fiadds
lcall
cmpsb
pop
push
sbb
pop
aad
dec
adc
dec
mov
mov
dec
roll
dec
xor
inc
lds
pop
int
xchg
adc
test
repz
fdivs
cmp
popf
es
or
lret
inc
adc
mov
or
in
mov
xor
popf
add
jmp
jae
mov
cmp
cmp
mov
fisubrl
out
xor
mov
dec
gs
and
out
dec
cmp
orl
lds
sbb
and
and
jbe
push
mov
movb
mov
jp
push
ljmp
mov
cltd
cmp
push
pop
in
sbb
cwtl
sbb
xor
jns
sarb
pop
cmp
data16
insb
repnz
insb
repnz
fsubl
lods
lods
pop
cmc
fcmovne
jecxz
mov
fdivr
sub
dec
xor
mov
sbb
xchg
add
mov
mov
mov
push
mov
xchg
into
push
stos
fst
fsubrp
cmp
lcall
cmp
rclb
in
xchg
insb
adc
mov
xchg
sub
stos
lahf
lret
shlb
lcall
sbb
mov
jp
cmc
popa
data16
pop
cmpsl
mov
adc
mov
cmp
mov
rorl
jge
lods
push
in
jne
cli
pop
orl
mov
negl
and
adc
sub
jns
push
iret
push
jmp
dec
int
aam
mov
cmp
loop
fsubs
add
js
jb
loop
push
xlat
and
inc
int
loop
mov
dec
hlt
scas
mov
jecxz
ror
mov
mov
mov
mov
hlt
and
jbe
pop
aaa
cmp
jl
out
pop
sub
in
pop
jae
mov
in
jo
pop
in
lret
add
push
sub
sbb
inc
stos
insb
nop
aas
clc
lret
xor
mov
sbb
loope
xchg
mov
std
mov
cld
dec
and
dec
lds
frstor
pop
xchg
inc
call
mov
sbb
add
fucomip
jp
jg
add
shlb
adc
dec
or
dec
bound
pop
mov
xchg
mov
and
gs
aad
in
inc
mov
out
xchg
aad
mov
in
int
sbb
and
ret
and
outsl
dec
or
fstpt
sahf
mov
ss
jmp
movsb
and
push
outsb
inc
mov
jmp
ss
jmp
int
out
cmpsb
inc
enter
insl
roll
adc
jne
dec
push
repnz
rorb
xchg
cmp
fsubs
imul
pop
rcr
outsb
adc
stos
cli
mov
pop
jg
mov
lds
loope
jg
xchg
add
cmpl
fldenv
daa
mov
int
cmp
or
xchg
jp
push
push
mov
sub
cmpl
pop
int3
sub
fdivl
bnd
push
hlt
add
ja
lret
popa
jl
cmpsb
mov
aas
idiv
push
lods
dec
out
std
aam
loop
icebp
push
fsubrp
xchg
pop
push
add
aas
mov
ja,pt
adc
push
scas
jno
pushf
clc
or
mov
adc
mov
jp
in
out
cmove
std
int3
sbb
leave
fcoml
fwait
push
hlt
aad
gs
xor
pop
add
negl
hlt
out
xor
xor
push
js
sbb
out
mov
imul
mov
aaa
pop
push
call
dec
mov
js
imul
sub
and
insl
decb
cmp
jo
das
lock
cmc
add
lock
out
dec
cmpsb
outsl
fstpl
jl
pop
scas
idiv
in
mov
push
jl
pop
ja
add
mov
jmp
xor
inc
mov
es
adc
or
out
cmp
and
ja
xlat
xor
xchg
aas
rcrb
fistl
aad
pop
adc
pop
inc
jg
cmp
cld
or
xor
dec
cmp
aaa
mov
fisttps
sbb
stc
cmc
and
test
icebp
test
loope
cmp
pop
fcomp
xor
loope
xlat
mov
sarb
xchg
jle
add
test
xchg
inc
adc
cmp
ja
push
arpl
lret
mov
cmp
sti
adc
add
inc
or
mov
ficompl
jge
adc
jg
xor
and
cmp
lcall
scas
rcrl
test
jl
outsl
hlt
dec
xchg
pop
inc
mov
pop
mov
dec
dec
mov
mov
cmpl
push
jle
int3
adc
lahf
mov
je
std
sub
imul
jb
mov
lcall
les
adc
mov
int
jno
jl
lods
test
cmpsb
inc
sbb
stos
sub
and
mov
mov
mov
lods
or
jo
inc
icebp
aam
fldl
lret
mov
adc
pop
jl
dec
add
inc
xor
in
and
cmpsl
scas
cmpsl
fwait
and
or
sbb
mov
mov
enter
call
adc
addb
or
adc
ljmp
mov
ret
jnp
and
sahf
push
jne
lds
jl
sbb
nop
mov
mov
scas
mov
in
fbstp
xor
cld
cmp
add
stos
cmp
rorl
movsb
pop
adc
stc
fstl
dec
cmpsl
sbb
mov
jno
mov
or
mov
in
into
ror
mov
inc
cmp
ret
in
push
xchg
loope
std
daa
add
int3
sub
jnp
adc
xchg
fld
in
and
sbb
jmp
xor
rorl
movsb
jns
popa
jmp
mov
xchg
stc
lcall
cmp
out
cmp
xor
out
cmpsl
in
pop
in
push
mov
push
cmc
hlt
mov
jg
or
mov
and
mov
sbb
mov
mov
fildll
mov
sub
mov
sahf
insl
sub
pushf
pushf
mov
out
mov
cli
and
add
into
jbe
sbb
jmp
or
dec
fnstenv
push
push
and
sbb
popl
les
add
aaa
cmp
mov
adc
xchg
iret
adc
sbb
xlat
loope
push
mov
cmp
icebp
push
mov
xlat
cmp
js
or
in
mulb
add
mov
das
fsubl
jno
lahf
scas
lea
inc
std
enter
jp
fs
mov
imul
jmp
add
xlat
in
jle
in
dec
outsl
aam
out
jecxz
jecxz
das
pop
jle
mov
mov
lcall
subb
xor
cmpsl
out
cmp
fdivrs
sarl
rorb
xlat
cld
imul
test
imul
adc
aas
icebp
out
jg
stos
add
pop
out
xchg
test
jns
test
mov
xchg
or
out
mov
mov
or
and
or
test
jecxz
add
icebp
adc
ds
int
mov
into
mov
mov
std
mov
push
movsl
test
fdivr
into
mov
dec
test
sar
push
jecxz
jno
mov
push
test
add
mov
ss
xlat
test
clc
inc
dec
repnz
jmp
ficoms
cld
in
mov
inc
pop
loop
out
int
jb
cmc
nop
jae
out
mov
dec
jbe
fdivrs
pop
xor
stc
clc
xor
sbb
adc
cld
lods
dec
push
adc
repnz
pop
scas
lret
loope
lods
add
or
imul
loopne
xchg
mov
xchg
mov
fildl
int3
mov
arpl
jne
xchg
out
xchg
sbb
shll
inc
jp
jne
dec
push
mov
insb
stos
cmp
xchg
je
mov
add
imul
stos
or
mov
ror
or
rcrl
pop
cmp
gs
or
das
cli
and
les
sbb
jmp
push
popf
into
cmpl
into
sbb
lea
iret
mov
sub
or
adcl
xor
adc
push
or
outsb
and
testl
int
adc
ljmp
mov
test
sub
add
mov
scas
enter
fisubrs
sub
ficoms
out
and
and
pop
mov
cli
add
jb
ljmp
scas
in
fsubrp
mov
pop
xchg
cmp
gs
push
push
aam
cmp
adc
pop
divb
cmp
cmp
shrb
mov
cmpsb
cmp
movsb
fldt
pushf
dec
or
dec
notl
push
pushf
adc
hlt
mov
aaa
mov
jmp
adc
cmp
nop
bound
jo
hlt
dec
lea
pop
ret
cmp
outsl
je
pop
mov
popf
push
nop
pop
push
mov
push
push
pop
inc
or
cli
inc
jbe
xchg
in
mov
divb
in
fdivr
mov
mov
leave
sbb
jmp
sbb
scas
addb
pop
xchg
jmp
xor
lahf
int3
pop
adc
cmp
pcmpgtd
mov
sbb
fwait
push
mov
push
and
mov
daa
add
inc
icebp
es
xor
lods
dec
pop
scas
and
repz
pop
lods
add
mov
inc
fcoms
sti
ss
push
stc
sub
xchg
push
fiadds
mov
cld
incl
xor
test
addr16
fcos
adc
jp
rol
mov
inc
leave
frstor
jne
lret
lds
mov
mov
jns
cld
xor
addb
dec
es
shlb
negl
fists
fisubrl
or
mov
pusha
pop
adc
push
push
leave
pop
and
sar
or
xor
lock
push
jecxz
pushf
jp
pop
sti
jl
xor
sub
loop
xchg
int
pop
mov
bnd
jb
and
push
mov
jae
and
inc
ss
pop
and
dec
out
imul
es
adc
es
inc
mulb
pop
rcll
or
sahf
fisubrs
pop
cmpsl
mov
mov
adc
xchg
stc
mov
js
pusha
add
sbb
mov
ret
mov
daa
mov
negb
pop
add
or
fisubrl
mov
ljmp
jns
xchg
inc
mov
xchg
and
lret
pop
ljmp
and
pop
scas
cmp
mov
xchg
mov
out
xor
xchg
cmpsl
out
mov
ds
mov
push
popf
enter
xchg
jnp
jecxz
cmpsb
out
xor
or
xchg
or
sti
mov
cld
mov
sub
divl
leave
dec
sbb
xchg
dec
sbb
lods
pop
les
dec
icebp
stos
out
push
mov
and
jg
lret
loopne
cld
loop
and
xor
mov
stc
cmp
mov
fsubp
fildll
test
and
in
sbb
adc
push
mov
gs
xor
fnstenv
or
popa
sbb
lret
push
or
sub
rorb
push
hlt
or
pop
lahf
mov
std
ds
mov
cli
adc
mov
fwait
in
lahf
sti
mov
jb
xchg
push
adc
filds
mov
dec
fsubr
sbb
ret
in
jb
js
pop
loope
jge
jmp
je
sar
cli
cli
in
movsl
in
adc
or
inc
adc
sbb
sub
hlt
and
cmc
cmp
lahf
std
add
test
jecxz
dec
and
cli
sub
sub
dec
inc
stc
scas
aam
sub
lds
sub
push
orb
ror
jne
fstl
lods
je
jns
subb
mov
aam
les
xchg
cmp
jmp
adc
mov
push
push
lods
jp
addr16
sbb
cmc
scas
fistl
mov
icebp
jge
ror
inc
jmp
in
jmp
hlt
fiadds
ret
push
mov
xlat
mov
jg
and
repnz
xor
mov
popf
loopne
idivl
or
jge
cmpsl
or
orb
les
push
popf
icebp
pop
cs
mov
cmp
jne
lods
adc
es
scas
shlb
and
cmp
xchg
sbb
cmpsb
sbb
std
loope
jmp
inc
subb
in
fidivl
shl
fdivr
pop
enter
aam
in
pop
mov
sti
add
xchg
adc
pop
mov
pop
cmpps
out
xchg
or
push
fstl
cli
popf
pop
out
inc
aad
fstpt
or
push
fistpll
jmp
pushf
and
xchg
add
ss
pushf
movsb
push
mov
mov
sbb
daa
dec
jbe
xlat
aad
sbb
mov
inc
and
sub
push
mov
mov
push
popf
rcrb
out
jmp
mov
and
lods
sti
ja
xor
inc
push
fimuls
mov
scas
inc
inc
fidivs
jae
scas
mov
into
in
cwtl
aas
clc
sub
xor
pushf
pushf
outsb
sbb
cmp
iret
scas
xor
dec
in
xchg
xor
push
mov
mov
cld
xor
add
mov
imul
dec
iret
test
rcrb
mov
jbe
leave
test
mov
push
push
iret
arpl
aas
shll
sbb
and
xchg
into
nop
lods
int3
popa
mov
cltd
aaa
fldcw
popf
stc
testl
and
int3
mov
push
or
add
dec
mov
push
add
loopne
enter
aam
lock
sbb
sub
xchg
jmp
test
sbb
xor
mov
out
lods
icebp
inc
push
inc
mov
mov
faddl
mov
dec
jp
sbb
int
push
dec
lock
aad
rcl
add
ret
xor
lock
push
rcrl
mov
xor
data16
mov
aam
test
jl
sub
mov
test
test
loopne
jl
out
shl
cmpsb
dec
ret
adc
mov
or
imul
add
in
inc
jp
mov
lcall
pop
mov
mov
add
pop
push
mov
iret
adc
add
fadd
rcrb
dec
aad
cli
cmpsl
lods
mov
ret
cltd
adc
rorl
jns
in
rcrl
jp
pop
ficoml
xchg
daa
pop
cmpb
jle
sahf
dec
icebp
mov
lret
lods
sbb
push
mov
add
rcrl
ss
sbb
push
leave
pop
jno
push
mov
adc
rorb
xor
fdivl
clc
sub
fisubrs
aaa
testl
loop
dec
push
dec
inc
cmp
sub
out
dec
lods
fucom
push
jg
in
dec
stos
shl
push
sub
in
fldenv
repz
jp
shrl
dec
in
mov
rol
inc
cltd
loop
push
xlat
jae
xor
js
pop
xlat
sub
fwait
ret
and
inc
inc
cmc
fstps
mov
sub
cmp
mov
pop
icebp
mov
lea
fldcw
push
out
xor
fxch
push
xchg
mov
jge
dec
inc
ljmp
shl
sbb
movl
xor
pop
movb
int
aad
push
loopne
mov
lock
clc
test
mov
stc
icebp
xor
in
incb
cmp
inc
out
scas
ljmp
iret
test
mov
je
int
pop
lcall
jae
and
xor
test
push
pop
xchg
jmp
jb
add
and
popa
xor
mov
in
mov
arpl
aaa
cmp
into
mov
out
adc
mov
idivl
mov
push
in
dec
pop
and
cs
gs
ja
icebp
lret
adc
into
stos
adc
stc
and
insb
out
cmpsb
and
pop
and
cwtl
jp
jne
adc
pop
push
aad
pop
dec
jmp
call
or
mov
mov
jecxz
fsubl
push
add
lock
decl
test
mov
enter
pop
mov
je
std
outsl
leave
mov
add
loop
sbb
cmc
mov
sub
das
std
sbb
sub
jno
dec
push
aaa
mov
or
mov
inc
mov
scas
ja
cmp
std
scas
out
mov
les
insb
mov
jno
jp
test
inc
js
adc
imull
adc
pop
sbb
clc
ret
pop
cmp
cwtl
pop
movsl
cld
or
pop
mov
jmp
and
daa
mov
int3
lret
aas
sub
adc
jbe
jp
gs
adcb
lret
xchg
cwtl
jnp
imul
jg
daa
pop
push
pushf
xlat
mov
jns
insb
or
mov
inc
or
js
repz
ja
out
mov
pop
bound
sub
sahf
pop
push
enter
into
fsubs
inc
add
pushl
sbb
loop
inc
fmull
mov
das
test
inc
and
ret
data16
pop
mov
sarl
cli
sti
movb
sbb
adc
sbb
lcall
mov
sti
xchg
loope
xor
lock
inc
cld
add
scas
cs
xchg
pop
out
adc
pop
mov
inc
jmp
cmp
mov
or
dec
rolb
sti
add
aas
sti
les
mov
push
jecxz
enter
cmp
stos
sbb
or
add
sbb
cmp
test
leave
push
icebp
dec
jmp
jne
sub
inc
pop
lods
mov
mov
mov
shrb
cwtl
das
jl
hlt
push
outsb
mov
pop
pop
mov
call
je
in
call
test
xchg
mov
mov
pusha
adc
inc
xchg
jg
pop
dec
sub
inc
cmp
in
stos
push
and
mov
adc
xor
cwtl
into
xchg
fwait
sahf
hlt
push
loopne
sub
movsl
mov
fs
into
stos
outsb
fimull
cmp
mov
outsb
leave
nop
inc
pop
fsubrs
in
loopne
lcall
push
test
out
jecxz
sbb
dec
xor
testl
pop
mov
push
push
data16
dec
or
pop
and
sbb
outsl
xchg
sbb
in
pop
cli
jnp
in
bound
adc
ror
popf
or
add
or
mov
inc
push
lds
outsl
mov
cmp
ss
mov
mov
testl
xchg
cmp
sbb
jg
xchg
xchg
sub
outsl
lods
enter
test
shlb
in
sbb
int
mov
xchg
aam
aas
or
xor
nop
xchg
adc
fisubrl
xor
aas
xchg
mov
push
xchg
pop
pop
and
and
cwtl
xor
sbb
loope
sbb
add
cmpb
or
test
mov
pop
pop
mov
inc
or
adc
add
sti
add
jo
into
outsb
scas
xchg
jne
fcompl
push
push
lea
or
test
add
ljmp
mov
in
insl
pop
out
testl
sub
push
leave
test
lcall
jl
xchg
pop
add
rcrl
and
inc
rcr
and
out
or
fildll
and
and
mov
fsub
sbbl
out
inc
push
fisubrs
test
rol
fimuls
add
lahf
ja
xchg
insb
xchg
dec
adc
xor
lea
jmp
pop
sub
xchg
push
mov
push
push
adc
xchg
push
inc
cld
push
xor
jno
inc
testl
loopne
xchg
cmc
pop
scas
loope
mov
push
jge
inc
hlt
mov
stos
cmpsl
mov
pop
stos
in
jae
cmp
cmp
or
mov
cmpsl
jnp
sbb
mov
push
inc
jle
adc
daa
decl
xor
ss
lret
ja
cwtl
iret
cld
or
mov
add
mov
dec
out
jp
leave
cmpsl
aam
js
fdivrp
in
clc
outsb
push
mov
aad
jne
mov
mov
stos
xor
inc
loope
jmp
mov
daa
sbb
add
mov
xor
pusha
fsubl
xor
jbe
inc
mov
mov
mov
lock
int
pop
hlt
xor
mov
addr16
inc
in
shrl
rclb
mov
mov
inc
jle
pop
pop
xor
mov
leave
sub
mov
mov
xchg
sub
into
ds
cmp
mov
mov
jno
enter
xor
xor
rclb
cld
cmp
jle
sub
mov
pop
and
push
lcall
sub
push
mov
std
lock
lret
imul
fs
loop
repnz
fistpll
sbb
aad
arpl
jl
add
xchg
in
push
rcll
ficoml
in
out
xor
dec
inc
sub
xlat
icebp
es
insl
jmp
popf
lock
lods
push
rorb
pop
sti
sub
jmp
in
rolb
cltd
arpl
ss
jnp
jae
jle
mov
add
in
addr16
pusha
jae
cmp
xor
ljmp
scas
insl
xor
xor
inc
cmpsb
das
fstpt
lods
sbbl
pop
xorl
mov
outsl
xor
dec
mov
add
fsubrl
xchg
add
js
pushf
sbb
push
mov
add
cli
xor
jmp
or
pushf
inc
fisubrl
fmul
ja
movsl
repnz
jb
gs
dec
ss
aaa
ds
mov
mov
stc
xchg
out
mov
shrl
mov
leave
cltd
mov
int
mov
sti
in
imul
es
int
aad
ret
sarb
xchg
pop
aam
notl
outsb
imul
dec
loop
jle
test
shl
mov
dec
sub
es
xchg
or
mov
or
clc
data16
mov
inc
neg
lock
push
mov
std
loopne
movsbl
jne
jb
sub
sub
testb
stos
add
loope
rorl
scas
outsb
jle
addl
jl
jmp
xchg
add
bound
and
orb
stos
mov
mov
mov
arpl
into
mov
stc
insb
xor
data16
cs
fcompl
sbb
inc
loopne
jo
dec
or
inc
mov
push
sub
push
jge
jg
shll
addl
cmp
mov
jecxz
insb
or
repnz
in
xor
adc
loope
xchg
jmp
out
dec
jns
cmpb
imull
fst
jg
loope
orl
fdivl
pop
aam
bound
and
or
mov
int3
pop
cmpsl
imul
pop
mov
push
mov
leave
shlb
mov
xor
adcl
inc
adc
aad
push
or
clc
mov
movsl
lods
dec
insb
shlb
inc
inc
adcl
fwait
cwtl
fwait
int
inc
and
dec
jbe
out
cmp
xor
outsl
mov
xorl
fisubrs
imul
jno
jne
sub
fmuls
mov
add
sub
fdivr
stc
test
jge
pushf
es
shlb
cmp
push
fxch
cs
sub
out
ret
cwtl
mov
inc
mov
clc
fsubrl
outsl
mov
jb
fmull
in
pop
std
xor
inc
imul
xlat
or
pop
cli
out
inc
pop
fstpl
mov
or
xchg
add
js
imul
test
jge
cmc
push
dec
loop
inc
fcmove
push
lahf
or
ljmp
ror
and
push
nop
or
clc
inc
sahf
push
xor
mov
cmpsl
inc
dec
repnz
ja
test
push
jle
into
pop
cmpsl
ja
dec
and
xor
insl
idiv
sbb
cld
xchg
mov
mov
out
sbb
inc
mov
adc
jae
mov
jg
pop
mov
dec
inc
jnp
push
mov
push
and
fists
repnz
mov
sub
sub
int
mov
insb
xor
outsb
or
cwtl
inc
cmp
cmc
dec
xchg
inc
lock
push
pop
mov
mov
dec
ljmp
cmp
mov
pop
push
pop
mov
jbe
push
or
movsl
jnp
inc
sbb
push
push
and
shlb
mov
cmpsl
rclb
sub
enter
mov
imul
lahf
jae
cmpb
mov
or
int
scas
adc
sbb
push
pusha
or
cmpsl
pop
sti
cli
jl
adc
jnp
ja
stc
or
inc
enter
cmp
lock
pop
mov
mov
inc
mov
clc
addr16
dec
mov
sbb
jp
into
clc
popa
adc
in
movsb
daa
test
push
jb
pop
cmp
mov
push
cmpb
movsb
mov
inc
push
loope
jae
add
mov
addl
jmp
flds
jnp
inc
fisubs
push
jb
pop
in
lods
push
out
mov
or
loopne
or
cli
inc
cli
jecxz
addr16
and
push
sbb
jecxz
cld
nop
dec
fwait
jne
lods
lret
out
shlb
shrl
xor
mov
xchg
mov
pop
push
in
adc
pop
out
pop
lds
push
test
sub
and
push
sub
pop
pushf
sahf
and
sbb
xchg
push
push
push
cmp
mov
xchg
add
jle
jae
test
outsb
and
adc
push
add
xor
inc
pop
cmpsb
xchg
mov
lea
cmpsb
dec
jbe
jmp
mov
mov
popa
cmc
idiv
inc
mov
shl
loop
repnz
or
jo
ljmp
shll
out
and
clc
outsl
lock
jbe
adc
pop
push
and
mov
adc
into
lods
pushf
pop
lods
adc
inc
je
out
mov
lds
mov
sub
js
cmp
mov
inc
inc
mov
lds
adc
jg
rclb
inc
les
aas
mov
push
jns
and
dec
jne
repnz
ja
jae
lods
cmp
mov
lods
fwait
sub
xchg
mov
pop
fdivrp
test
in
mov
sub
mov
repnz
xorl
lahf
scas
gs
jg
adc
clc
insb
xor
les
mov
adc
xchg
cmp
dec
push
cwtl
xor
add
jns
repnz
stc
inc
dec
cs
lret
jecxz
js
xchg
fcom
shlb
mov
xchg
sbb
fld
pop
loopne
pop
and
sub
mov
in
es
iret
inc
xor
mov
adc
daa
or
mov
sub
scas
mov
mov
ficomps
bnd
sti
pushf
insl
sarl
adc
loop
scas
fldl
ja
fidivrl
mov
movsl
pop
test
insb
mov
movsb
insb
bound
das
dec
jbe
sbb
sub
cs
adc
call
bound
movsl
stc
pop
pop
pop
jmp
pushf
call
fld
aas
sub
movsl
pusha
sub
dec
stos
cld
cwtl
push
mov
jl
fiaddl
mov
fcomi
sbb
pushl
xchg
test
orb
push
mov
roll
jp
popa
call
idivb
scas
inc
das
jge
mov
sahf
outsl
push
jge
ja
je
xorb
mov
add
jmp
popa
sub
mov
rol
popf
loopne,pt
mov
xchg
or
ds
mov
and
outsl
jbe
lods
fsubrs
adc
in
mov
hlt
lret
inc
sti
mov
ret
cmc
popf
pushf
lock
sahf
emms
ds
push
insb
in
mov
cmp
xor
add
xor
and
movsb
mov
mov
fadd
pop
nop
ja
mov
add
inc
dec
dec
add
xchg
aam
pushf
jne
jge
add
aas
mov
push
mov
dec
fcoml
dec
jbe
mov
daa
jo
jo
sbbl
sbb
ljmp
add
jnp
pop
pop
adc
shll
scas
and
or
scas
push
scas
jae
test
push
push
or
sahf
stc
inc
test
call
divl
cltd
lock
dec
loopne
scas
pop
push
mov
repnz
or
test
pop
inc
cmc
and
xor
out
mov
lcall
ret
test
out
and
sar
jne
scas
inc
xor
icebp
mov
sbb
fwait
inc
jg
and
push
fiaddl
pop
adcl
loopne
mov
add
add
lahf
add
mov
adc
push
aas
mov
push
or
cltd
cmpsb
aad
sub
pop
jae
mov
add
repz
xchg
dec
xor
addr16
addr16
test
les
cmpsl
mov
cmp
mov
mov
ret
aas
cmp
scas
scas
ss
mov
data16
out
dec
jle
ja
lds
mov
clc
clc
mov
adc
or
scas
mov
mov
out
icebp
cmp
xchg
xchg
fiadds
push
shlb
mov
pushf
data16
xor
mov
test
push
lds
mov
xlat
aad
add
or
cmpsb
pop
push
fcmovnb
movsb
daa
in
lods
dec
mov
xchg
sub
cmp
test
ror
sarl
leave
lahf
pop
sub
xor
fld
xchg
stos
movsw
push
out
jg
xor
inc
mov
cmp
add
in
loopne
xchg
and
pop
jne
stc
xchg
ds
cmp
push
xor
shl
push
pop
cmp
inc
clc
inc
jecxz
iret
sarb
mov
mov
xor
lock
adc
in
in
cmp
adc
inc
out
jge
jle
sub
mov
jne
bound
repz
pushf
mov
cs
push
aaa
aas
xor
sub
sub
cmp
jbe
or
jo
push
sti
lret
jbe
out
mov
aad
mov
loop
jmp
cwtl
adc
movsl
lds
repnz
stc
ret
fwait
push
outsl
cmc
cs
pusha
pop
mov
inc
mov
mov
ds
jl
stos
js
idivl
std
dec
push
mov
std
std
sbb
add
dec
xor
dec
or
sub
pop
jmp
mov
mov
sarb
and
mov
cltd
outsb
xor
aas
xor
cmp
jg
push
iret
test
hlt
idivb
sub
sub
test
movsb
mov
mov
hlt
pop
in
xor
lock
mov
push
mov
loope
jg
clc
sub
test
mov
ds
xor
add
es
lcall
xor
push
or
popf
test
das
jl
mov
mov
push
sbb
dec
and
mov
mov
inc
mov
xchg
out
pop
ss
sarl
and
addr16
loope
and
cmc
outsl
xor
leave
jb
pop
or
jo
sbb
mov
mov
cs
rcr
xor
xor
jecxz
movd
scas
mov
outsl
test
outsl
sti
cmp
mov
mov
mov
aas
pop
cmc
mov
mov
mov
fisttps
testl
int
xchg
pusha
insb
jmp
pop
or
mov
hlt
push
out
sbb
std
loope
inc
push
scas
repnz
movsl
adcl
cli
or
ds
jo
andl
xlat
cltd
rcr
mov
lahf
dec
pushf
cmp
testl
or
pop
out
xchg
push
cs
data16
mov
mov
mov
push
dec
xchg
cmc
scas
cmp
je
ret
pop
cmpsb
xor
push
and
sbb
js
ret
or
aam
in
subl
jg
adcl
cli
in
cli
or
mov
mov
pop
fnsave
test
fisttpl
push
jle
cmpsl
sub
ja
scas
call
mov
fcomi
insb
cmpb
fcmovnbe
add
sbb
and
jmp
test
cmp
cmc
lods
gs
mov
push
repz
fwait
cli
xor
or
jl
add
or
sahf
add
lds
sbb
ss
push
into
fnstcw
pop
imul
dec
fldenv
pop
pop
aad
subb
dec
jne
sub
mov
adc
ret
fwait
daa
rdmsr
mov
lock
cs
cs
add
ja
cmp
mov
push
mov
clc
mov
int3
jne
mov
jge
sbb
mov
xor
fdivr
rolb
cld
data16
mov
pop
cmpsb
mov
loopne
enter
aaa
inc
into
rol
dec
std
xlat
add
fsubr
and
flds
xchg
clc
mov
cmc
in
mov
mov
shlb
push
adc
push
aas
repnz
cmp
sti
mov
shrl
dec
icebp
jge
rcll
test
adc
loope
insb
add
dec
les
push
inc
ret
cmp
or
push
mov
or
mov
les
sbb
mov
lret
pop
fstl
insb
movb
push
cmpb
xchg
xor
xor
and
pop
fcomps
mov
shlb
leave
ret
ds
sub
add
ds
inc
cltd
push
mov
popf
jl
fsubrl
push
std
adc
je
inc
aam
mov
sar
jmp
add
fidivrs
fidivrs
dec
neg
hlt
dec
cmp
scas
or
dec
adc
out
or
shr
pop
aaa
jo
test
pop
inc
jb
adc
push
add
inc
mov
mov
arpl
lods
xor
jge
dec
pop
mov
mov
movsl
mov
xor
lock
or
test
add
insb
call
or
test
icebp
jnp
aam
xchg
pop
cltd
fsincos
jp
mov
fucomip
lret
aaa
inc
repz
insl
out
js
mov
testl
loop
cmpsl
std
test
out
dec
cmpsb
sbb
xchg
dec
fsub
sbb
out
adc
addr16
insl
repz
rcl
xchg
jl
test
repnz
jmp
push
add
rcrl
push
mov
and
dec
mov
mov
pop
mov
test
loope
mov
adc
jecxz
pop
mov
fimull
icebp
mov
flds
test
cmc
or
cmp
imul
loop
xchg
mov
and
pushf
bnd
ljmp
in
inc
cmp
jns
sbb
hlt
test
pushf
sahf
mov
mov
in
sahf
out
in
test
mov
dec
or
stc
pop
gs
or
decl
or
incb
test
imul
imul
adc
push
in
cmp
xlat
scas
adc
notb
inc
mov
std
sbb
sti
std
mov
inc
ret
pusha
sarl
mov
xchg
xorl
lods
inc
shlb
inc
mov
fcmovnbe
adc
and
cmpsl
in
cmpsl
loop
sub
or
jb
sub
shll
mov
xor
repnz
aam
jbe
sahf
clc
rol
pop
ds
cwtl
jle
mov
mov
inc
push
pop
cmp
pop
dec
pop
das
imul
mov
pushf
loope,pn
outsl
cmpl
rcr
lea
and
push
imul
mov
dec
scas
cmp
jae
push
ret
jae
out
call
mov
jmp
or
sbb
out
sbb
dec
push
call
pop
xor
clc
add
enter
inc
or
jl
scas
sub
adc
cs
leave
mov
mov
jno
or
push
dec
stos
shrl
repz
in
push
lahf
movsl
push
jmp
xchg
jnp
jl
fnsave
leave
ficoml
jns
jge
cmpsl
in
add
das
daa
mov
out
hlt
xchg
add
cs
or
cs
loopne
ja
lods
pop
pop
add
xchg
mov
sub
or
sub
das
ljmp
jl
xchg
cld
orl
sti
out
insb
test
mov
fs
jae
pusha
push
in
and
enter
cmpsl
jge
aas
cmp
and
sbb
pop
dec
add
mov
sub
jp
xchg
es
jbe
fbstp
lret
aam
out
adc
dec
fs
dec
pop
call
sbb
ret
dec
clc
push
push
std
xchg
shlb
dec
lds
mov
adc
push
xchg
int
fs
arpl
xchg
jmp
lea
hlt
lock
in
jge
adc
insl
and
nop
js
mov
add
lcall
jns
pusha
fucomi
outsl
popa
gs
outsl
xor
push
pusha
hlt
sbb
in
push
sub
mov
rcrb
out
int3
mov
push
xchg
shll
out
out
outsl
std
dec
or
push
push
sahf
pushf
icebp
fdivrs
aaa
xchg
imul
in
cmc
sub
mov
push
adc
scas
xchg
cltd
pop
adc
sub
cmp
imul
cmc
cmc
outsl
mov
xor
adc
add
add
push
jge
xchg
int3
pop
adc
clc
data16
or
xor
stos
xchg
outsl
jne
mov
int
ret
and
and
outsb
pop
in
pop
lock
xlat
push
ja
lret
movsb
xchg
inc
outsl
add
add
pop
fsubrl
insl
hlt
sbb
js
add
jns
out
stos
fs
hlt
lahf
cld
and
jae
mov
adcl
ret
mov
dec
ret
loopne
inc
cmpsl
outsl
ljmp
jg
sub
mov
mulb
and
mov
adc
xchg
mov
es
repnz
bound
pop
test
out
jmp
or
mov
adc
cmp
packuswb
dec
out
les
call
mov
sbb
stc
fbld
xlat
mov
or
ret
inc
imul
roll
cs
cld
cli
push
jb
and
sub
xor
ljmp
mov
fs
dec
mov
pushf
aam
mov
imul
cmp
call
loopne
nop
dec
cwtl
mov
ret
mov
pop
fdivs
daa
fadds
mulb
xchg
jecxz
cmp
jg
rorb
idiv
mov
in
or
lcall
xor
adc
out
out
add
hlt
cld
bound
add
daa
test
repnz
inc
mov
inc
into
outsb
rcr
and
movsl
movsl
pusha
push
les
and
jp
push
int
push
fpatan
out
fs
pop
push
push
mov
sbb
out
mov
dec
push
inc
xlat
pop
cmp
in
adc
mov
mov
ret
xchg
in
mov
loop
outsl
xchg
lcall
push
inc
inc
arpl
jmp
mov
pop
push
add
xor
add
add
add
inc
and
dec
xchg
cmp
add
cld
xor
jle
xchg
sub
lret
dec
dec
xlat
scas
xor
and
cmpsl
cltd
mov
xor
or
add
lock
fs
xor
jl
pop
hlt
dec
cmp
mov
jl
outsl
ret
fimull
inc
mov
iret
ret
jmp
sub
jno
fwait
addr16
in
popf
jmp
inc
xor
je
jne
mov
mov
nop
ja
cmp
mov
mov
xchg
or
mov
add
cmp
hlt
das
hlt
xor
in
sahf
adc
push
loopne
hlt
jl
loop
jbe
in
std
and
pop
jge
mov
hlt
aas
pop
imul
fcomp
or
mov
cmp
cmp
mov
xlat
call
sub
imul
in
mov
into
repz
es
and
pop
in
gs
outsl
out
imul
aad
fwait
adc
jmp
or
push
inc
sbb
sub
inc
inc
push
lods
jle
mov
pop
test
cmc
daa
pop
rorl
xchg
push
aad
cmp
push
inc
sbb
or
mov
add
scas
pop
xor
mov
aad
mov
add
test
das
xchg
out
inc
xchg
out
testb
cmp
lcall
lahf
out
push
cmp
repnz
out
lret
std
inc
jecxz
std
dec
or
jbe
stos
xchg
push
jp
shrb
stos
ret
loop
dec
stos
sbb
sbb
out
in
sub
cmp
icebp
lock
cld
out
and
sbb
inc
sub
mov
lcall
sar
push
push
dec
mov
jp
pop
lcall
movsl
cmp
dec
mov
pop
lods
mov
popf
or
sub
icebp
mov
or
and
push
xchg
add
paddusb
sbb
ffree
add
mov
int3
mov
cmp
inc
jbe
mov
jbe
pushf
inc
adc
push
imul
cmp
mov
jb
dec
test
leave
ja
gs
push
dec
mov
nop
icebp
xchg
xchg
cmpsl
mov
ljmp
aas
mov
pop
test
push
repnz
out
je
dec
sbb
xor
imulb
or
cmc
les
test
ljmp
push
and
push
or
gs
mov
add
ljmp
push
cmp
xor
sbb
adc
pop
push
lds
mov
push
stos
test
gs
imul
js
mov
jbe
lahf
jae
test
int
cld
cmp
out
test
aad
outsl
jno
and
mov
dec
cmp
jns
test
in
jecxz
iret
aad
jb
mov
into
aaa
xchg
add
call
add
jns
jae
int3
ja
divl
inc
mov
mov
in
je
loope
mov
cmp
jmp
fisubrs
shl
pop
sahf
in
mov
subl
or
add
inc
addl
in
dec
in
adc
adcl
mov
mov
lcall
in
inc
inc
out
sbb
and
out
cmp
jecxz
add
test
or
enter
jae
cli
cli
push
inc
icebp
dec
das
inc
std
adc
aaa
cli
je
xchg
sahf
mov
lsl
inc
lret
xchg
aas
cli
xchg
outsl
scas
or
ret
sub
je
push
mov
dec
cli
push
subl
xor
adc
ljmp
mov
into
adc
mov
xchg
cmp
jecxz
xor
cld
leave
ja
in
sti
or
mov
push
pop
xchg
jp
add
sub
adc
push
push
add
or
dec
dec
xorb
call
pop
lock
xor
inc
mov
and
lcall
es
int3
cmp
or
sub
dec
sbb
cmc
or
subb
xor
cmp
xchg
adc
andb
fsubrl
adc
test
aam
cmpsb
ja
add
insl
sahf
sar
fcomps
pop
mov
mov
jle
fldenv
dec
in
out
mov
sbb
push
mov
stos
mov
and
mov
sbb
pop
sahf
pop
mov
shrl
dec
jle
fsubl
lcall
inc
inc
call
sub
ja
adc
mov
ficompl
pop
scas
pop
mov
ljmp
lds
xchg
out
fiaddl
xchg
mov
pushf
stos
lods
xchg
test
imul
jl
jne
inc
or
in
fimull
sub
or
cmp
clc
fwait
cmc
iret
in
and
out
mov
loopne
cld
in
cld
shlb
ja
scas
push
addr16
ss
mov
lret
mov
outsb
ljmp
cmp
mov
sti
or
aad
adc
lock
mov
lcall
shll
pop
fildl
push
mov
xchg
es
xor
push
int3
xlat
mov
mov
test
mov
popf
pop
packsswb
sbb
ja
ljmp
mov
jmp
dec
or
xchg
add
notb
push
inc
shll
movsb
mov
adc
xchg
xchg
sarb
testl
mov
xor
xor
jnp
fcoms
sti
rorb
movsb
mov
cmpsl
jmp
sub
clc
sbb
loop
and
sbb
insb
cmp
mov
aas
push
mov
jmp
clc
bound
jle
aad
bound
xor
lret
cld
nop
mov
clc
maxps
sbb
pop
iret
add
pushf
repnz
or
nop
pop
ss
add
mov
or
xchg
scas
jmp
xchg
mov
ret
fdivrs
out
cmp
test
icebp
push
fisubs
jbe
mov
fistl
inc
pop
cwtl
xchg
sub
push
scas
repz
add
stos
jb
pop
jns
outsl
sub
jge
fwait
movl
pop
sbb
faddl
in
fcmovbe
rcll
clc
out
pushl
jnp
addl
addl
lret
lds
jle
jbe
out
sbb
fstpl
dec
aam
imul
or
add
clc
lcall
sbb
int
sbbl
adc
mov
cld
push
dec
pop
lea
fcompl
mov
dec
aaa
fldenv
mov
orb
mov
jno
aad
jge
dec
add
inc
scas
add
add
sti
cmp
mov
cli
es
adc
lea
jmp
cmc
aas
add
cli
xchg
xlat
mov
and
sub
or
lock
mov
mov
notb
add
out
dec
ljmp
mov
ds
dec
or
mov
mov
rcrb
fs
mov
sbb
pop
mov
and
sbb
js
and
sbb
mov
loope
sbb
cld
fcompl
push
mov
pop
out
jbe
dec
loop
test
stc
in
setb
insl
push
mov
jno
adcb
mov
std
xor
mov
int
xor
test
sbb
orb
mov
lods
lret
xor
add
call
sub
fs
xorl
mov
mov
orl
mov
inc
aaa
xchg
push
cmp
push
push
ret
mov
sarb
scas
daa
dec
je
fnstsw
pusha
lock
push
mov
pop
xchg
insb
mov
pop
inc
out
pop
stc
xor
fcoml
in
jle
fcmovnbe
mov
out
fiadds
ljmp
mov
cmp
pop
insb
mov
lock
adc
jae
push
add
mov
popf
push
fwait
mov
push
mov
lods
sbb
or
daa
or
sbb
push
out
cwtl
xor
ljmp
fcomi
bnd
cld
jg
lock
push
mov
mov
adc
cmp
loop
xor
fsubrp
loope
aas
loopne
pushf
push
dec
mov
cmp
mov
and
nop
out
and
fwait
mov
jbe
andb
or
subl
sub
aam
lock
in
aad
xor
lahf
gs
fstpt
test
fisttpll
loopne
loopne
repz
inc
or
jbe
in
adc
mov
jle
test
adc
mov
int
jns
popa
pop
xor
push
lea
adc
cmp
mov
shrl
ja
dec
stos
testl
dec
cmp
cli
mov
repz
movsl
mov
sbb
idiv
jb
cmp
add
fbstp
daa
mov
adc
popl
mov
mov
pusha
repnz
sbb
add
insl
mov
or
jmp
jae
mov
pop
pop
mov
xor
xor
pop
jno
push
xlat
punpckhdq
lock
lret
adc
ds
xor
adc
xchg
jbe
jecxz
test
mov
push
pop
cwtl
rcl
pop
inc
mov
mov
scas
cmp
xor
addr16
mul
dec
push
loopne
adc
mov
int
repnz
andl
les
stos
aam
pop
test
jge,pt
adc
dec
sbbl
jecxz
fsubrs
fprem1
pop
or
pop
jp
pop
mov
sti
mov
push
xchg
or
mov
adc
nop
lret
mov
fdivrp
aad
pop
cld
in
cmp
aad
clc
loop
aas
aam
xor
inc
push
mov
cltd
mov
adc
jne
je
inc
int
addl
pop
fidivrl
mov
pushf
mov
outsl
nop
inc
mov
xor
mov
xor
fdivrs
jne
in
dec
or
pop
pop
lods
into
sbb
push
adc
sub
push
pusha
jns
bound
popf
push
ljmp
fadd
into
adc
jbe
add
movsb
mov
idiv
outsb
fs
push
call
dec
imulb
push
push
mov
sbb
mov
dec
imul
and
inc
sbb
pop
loopne
sub
mov
lahf
iret
sub
xor
pop
fnstsw
pop
mov
cmc
adc
lahf
jle
adc
in
faddl
ss
inc
cli
rolb
push
add
movsl
outsb
xor
pop
addr16
xchg
jne
dec
sbb
dec
lahf
addb
pop
lret
xor
lock
inc
or
lret
pop
repz
cmp
mov
scas
inc
sbb
mov
and
test
xchg
in
shr
out
les
stc
mov
scas
ja
mov
xchg
inc
imulb
das
mov
cmp
adc
pandn
xor
out
push
addr16
mov
ljmp
mov
pop
mov
fsub
test
daa
loope
jbe
fld
fnsave
movsl
pop
orl
nop
or
cmp
rolb
std
aad
loopne
xor
jbe
jne
sti
aam
push
or
jae
inc
pushf
rcl
push
xchg
push
mov
hlt
mov
insl
fisubrs
shlb
iret
mov
fisttpl
inc
inc
hlt
dec
pop
cwtl
push
inc
jmp
popa
pop
popa
mov
test
sub
mov
mov
add
ja
xchg
or
hlt
imull
stc
std
jge
nop
mov
add
in
clc
sub
jne
sub
pushf
mov
xor
fwait
iret
sbb
pushf
leave
xchg
scas
clc
dec
mov
fdivrp
lods
rcrl
idiv
scas
sbb
push
and
cmp
into
ret
leave
adc
in
cs
pop
lock
sbb
mov
movsb
xchg
jbe
mov
dec
jmp
sbb
iret
out
cmc
add
jnp
mov
movsb
cmp
gs
and
pop
les
cmp
aaa
add
jae
mov
pop
mov
loop
mov
ret
cld
or
fidivs
jp
outsb
jl
and
inc
push
cli
or
test
mov
aam
out
jge
je
in
clc
fwait
lods
popa
movsb
test
jle
call
mov
xor
mov
jg
xchg
mov
gs
xchg
in
fisubrs
fmuls
pop
or
cwtl
xor
gs
addr16
dec
cmp
sti
add
scas
movsl
pop
xor
sub
cmpsl
lcall
outsb
loope
aas
cld
mov
push
lods
xchg
sub
rcrl
adc
inc
jnp
mov
rcrb
lret
mov
jb
push
inc
movb
std
shll
repnz
cmp
ja
rcrl
ss
jmp
pop
sti
pusha
data16
or
clc
cmp
dec
and
stos
std
jbe
imul
jo
or
cmp
fistpll
jp
xchg
dec
dec
add
insl
mov
mov
inc
fidivl
mov
lods
jne
fistpll
movsb
add
ret
xchg
mov
jle
inc
sbb
jecxz
sbb
into
dec
jg
sbb
shll
mov
mov
jl
pop
in
stos
mov
mov
sti
mov
mov
mov
fstpt
aaa
call
mov
popa
jnp
xchg
ret
xchg
les
jecxz
mov
pushl
iret
or
mov
jbe
inc
jle
sbb
ljmp
jbe
fdivp
fistl
js
lret
cs
xchg
xchg
pop
ja
ret
fidivl
inc
movsb
cli
sbb
adc
mov
inc
das
mov
push
sub
pop
inc
inc
out
rorb
and
jo
cld
sub
dec
adc
inc
pop
and
mov
divb
mov
scas
sub
mov
fs
in
divb
xor
fs
andl
push
jns
fbld
xchg
and
scas
pop
repz
pop
pop
and
xchg
adc
mov
in
rcl
enter
adc
rolb
ja
leave
aam
enter
repnz
daa
pop
mov
and
jmp
je
add
lds
jb
imul
xchg
push
fucomi
sbb
xchg
mov
std
imul
sbb
jmp
orl
and
jb
jecxz
and
test
rcr
mov
and
sbb
pop
adc
sub
in
insb
cmp
cmp
add
inc
sub
sbb
inc
ds
test
rcr
jl
cltd
lea
pop
nop
or
stc
mov
daa
sub
loopne
faddl
leave
sub
mov
xor
dec
orb
int
jecxz
push
lods
inc
cltd
mov
dec
lods
cmp
and
loopne
push
lret
dec
xchg
aam
pop
sbb
xchg
daa
mov
shll
in
cltd
and
pop
mov
adc
or
lret
stc
pusha
and
and
outsb
mov
rcr
lea
pushf
mov
movsb
xor
dec
sub
pop
mov
cwtl
push
and
jbe
mov
loopne
inc
in
cli
mov
inc
mov
subb
fdivrs
mov
adc
repnz
mulb
pop
ret
cmp
test
into
popf
leave
dec
imul
xchg
repnz
pop
sub
push
mov
and
pop
ficoml
mov
cmp
mov
add
jle
cmpsl
into
int3
dec
mov
rcrl
incl
or
mov
out
dec
std
loop
inc
clc
xor
cmc
mov
mov
pop
pusha
or
push
in
leave
or
xchg
push
dec
ljmp
push
adc
xchg
sbb
out
cmc
aad
cmpsb
add
jno
popf
adc
push
sub
fwait
push
scas
dec
ja
loop
repz
mov
sub
loope
pusha
mov
lret
out
mov
pop
mov
pop
push
fs
fistpll
popf
pop
xchg
xchg
cld
sub
push
lods
mov
jns
repz
scas
scas
lock
add
scas
mov
adc
in
pop
pop
and
ffreep
inc
fstpt
lds
pop
lock
pop
test
xor
adcl
movsl
sbb
cmpsb
push
cmp
dec
inc
cwtl
pop
les
jno
stc
fnstcw
fucom
add
aaa
mov
dec
jb
mov
pusha
aas
mov
jno
lds
dec
out
testb
fcmovnbe
ja
pop
sti
inc
dec
or
sub
mov
cmc
mov
add
jl
insl
int
xor
lret
pop
not
hlt
ja
pop
aaa
test
stos
clc
orl
lcall
int
in
pushf
jl
pop
push
movsl
pop
mov
mov
adc
mov
out
es
sub
xchg
push
sti
fidivl
mov
daa
adc
mov
ret
lds
mov
xchg
rolb
icebp
mov
aaa
mov
enter
push
xchg
and
lock
jecxz
jecxz
ljmp
mov
xchg
jp
mull
jle
and
cs
sub
movsl
jo
scas
xchg
and
dec
dec
in
xchg
call
push
ret
js
lret
inc
jne
jnp
mov
and
mov
lods
xor
cmp
sub
xchg
mov
or
jo
adcl
jae
cmp
inc
shll
sarl
aam
pop
cmc
sub
xchg
mov
mov
lret
in
push
xlat
xchg
push
push
int
popa
fbstp
mov
mov
push
shlb
mov
pop
int3
stos
cmpb
xor
rcrb
sbb
and
jge
in
ss
xor
xchg
aam
lock
nop
sbb
pop
mov
adc
jmp
inc
outsb
and
inc
in
or
loopne
icebp
fadd
movsl
addb
mov
in
lahf
jnp
inc
cmc
insb
xor
mov
enter
sub
filds
and
ret
stos
aam
cld
mov
cltd
xchg
stos
aaa
pop
stos
push
insb
loop
mov
popf
scas
inc
lahf
adc
decb
and
xchg
stos
jnp
jbe
mov
aad
jmp
incb
jl
aam
pop
lret
push
out
lock
sahf
js
cmp
stos
jb,pt
jae
adc
push
dec
inc
loopne
inc
hlt
add
scas
xchg
aas
mov
shlb
push
push
inc
sbb
ljmp
sbb
aaa
mov
or
sbb
add
icebp
cmc
pusha
xchg
aaa
add
jnp
in
pop
dec
mov
xchg
jl
aas
lods
xchg
inc
int
daa
iret
jae
mov
stos
cmp
add
or
repnz
mov
add
jg
lcall
mov
push
and
mov
mov
cmp
jae
cmp
cld
out
into
lret
movsb
inc
or
not
mov
jle
xchg
mov
jno
sahf
and
orb
mov
mov
mov
std
cmpl
or
mov
cmpsb
cmp
test
cmpsl
mov
mov
pushf
mov
sub
movsl
aad
pop
aas
add
lret
inc
mov
lret
xchg
mov
fmuls
xor
movsb
lds
rcrl
and
pop
cmp
adc
sbbl
xor
xchg
fdivrp
mov
cwtl
mov
dec
cmpsb
mov
mov
ss
jmp
dec
xor
stc
inc
lea
cmc
ja
addb
popf
mov
mov
cwtl
mov
add
and
cmp
mov
repnz
mov
add
mov
pushf
dec
and
ret
out
js
xchg
outsb
add
mov
mov
fdiv
mov
filds
mov
mull
ret
es
outsb
clc
mov
repz
stos
fbstp
flds
loopne
pusha
sarb
hlt
inc
sti
std
je
movsl
cmc
scas
std
mov
popa
idiv
mov
icebp
arpl
fdivrl
dec
mov
mov
inc
ret
xor
xchg
cld
add
addr16
adc
push
jo
cmpsl
jmp
negb
xor
add
aas
mov
jmp
jg
scas
sahf
add
cs
inc
adc
dec
push
jle
inc
and
fst
xor
leave
mov
ret
mov
inc
push
loop
xchg
pop
lahf
xlat
fcoms
mov
fstps
mov
ja
pop
adc
pop
aas
pop
jp
mov
popl
cmc
ss
adc
push
dec
insb
sub
xor
push
cwtl
es
cmpsl
jmp
stos
cltd
cmp
xor
in
adc
fmulp
into
or
andl
and
xor
shll
idiv
test
je
in
lret
pop
cmc
fisubs
jno
xor
inc
xor
dec
subb
xor
or
push
jns
pop
mov
mov
pop
and
shlb
adc
fdivl
sub
jns
arpl
insl
shrb
fdivrp
in
iret
mov
fidivs
and
jmp
roll
filds
int3
cmp
sub
pop
rcrb
mov
mov
mov
repz
pop
mov
loop
popf
jnp
add
xor
pop
adc
scas
inc
pop
aam
adc
or
cmp
push
adcb
test
jle
xchg
ljmp
in
fisubs
test
jge
std
nop
aad
les
icebp
into
mov
orb
adc
inc
xchg
mov
xlat
insl
fcomip
les
ss
add
aam
cwtl
jae
lret
sbb
imul
addr16
shrl
bound
adc
mov
mov
inc
cwtl
movsb
addl
mov
hlt
mov
or
cmc
adcl
ds
dec
pop
adc
cmp
pop
xor
loope
jo
push
adc
shrb
and
jbe
jl
xchg
rclb
jp
insl
jg
or
jge
mov
idiv
mov
icebp
int3
sbb
inc
cs
mov
in
test
add
lods
jg
mov
inc
mov
adc
repnz
sbb
stc
sub
insl
jae
inc
leave
divl
int
dec
test
ret
ja
mov
insl
je
mov
adc
lds
xor
pop
jl
in
xor
enter
les
pushf
push
imul
stos
aam
mov
test
mov
jmp
rclb
dec
pushf
pop
fisttpl
test
call
rol
or
mov
jl
inc
sub
adc
jbe
outsl
add
push
xchg
and
push
int3
xor
dec
fdivrl
daa
jge
rolb
stc
pop
repnz
sub
jmp
pusha
and
ja
scas
jb
shrl
pop
fidivl
pop
sarl
repnz
sub
push
push
into
or
xor
adc
push
inc
mov
stos
dec
popf
mov
das
imul
cmpsl
in
ret
xor
loopne
imul
jl
jl
test
mov
push
jno
xor
in
movsl
ja
lcall
js
xor
mov
dec
xor
imul
sub
das
or
add
jnp
shlb
xor
inc
frstor
ret
add
ds
dec
mov
mov
pop
inc
pushf
xchg
add
mov
lcall
mov
ja
insb
into
mov
out
dec
mov
out
out
mov
fidivs
fidivs
shll
mov
pushl
mov
sahf
fsubrl
pop
jo
push
insb
je
inc
les
call
and
into
leave
das
inc
mov
hlt
scas
xor
lcall
add
xor
es
sarl
addb
hlt
stos
ljmp
jns
mov
fstpt
jge
scas
clc
jb
ret
dec
or
test
push
lock
leave
test
btc
pop
push
mov
loopne
stos
adc
mov
jns
jmp
sbb
stc
push
mov
mov
jmp
icebp
jne
mov
dec
pop
sub
pop
inc
scas
xchg
scas
fcomps
xchg
mov
mov
or
jmp
xchg
add
pop
icebp
adc
movsl
fcmovnu
mov
sub
outsl
test
jae
jp
mov
adc
push
test
gs
xchg
or
inc
inc
inc
or
sbb
add
sahf
pushf
push
ret
pop
inc
mov
mov
add
jp
inc
ljmp
jnp
test
dec
pop
fisttpll
mov
pop
lods
pop
out
pop
test
cltd
in
mov
jo
add
cmp
insl
in
xor
addl
dec
push
mov
xchg
and
inc
pop
xchg
mov
hlt
gs
fbld
jbe
mov
and
andb
ljmp
dec
popa
mov
cli
out
hlt
mov
xchg
fiadds
outsb
pop
negl
sbb
add
mov
xor
add
into
call
pop
mov
pop
rcpps
pop
pop
dec
mov
in
ficoml
mov
mov
mov
mov
test
fnstsw
add
repnz
cmpsl
out
test
addr16
jge
jns
inc
test
imul
test
sbb
shrb
jg
push
sub
fldln2
bound
pop
out
mov
test
sti
sti
repnz
scas
mov
dec
push
add
fsubrp
jp
jg
dec
pushf
mov
stos
icebp
mov
jp
adc
les
mov
fsubrs
pop
idivl
loope
fsub
incb
in
pop
shlb
dec
xchg
ljmp
cmpsl
and
cmp
jbe
mov
shl
movsl
mov
adc
xor
popa
adc
adc
or
mov
iret
fwait
cmc
jnp
lods
jge
jmp
xor
out
mov
scas
push
lds
sti
or
iret
sbb
std
icebp
push
out
mov
jp
xor
pop
mov
lret
andb
out
sbb
mov
sub
dec
mov
imul
push
inc
xor
jnp
dec
cmp
fisttpl
xchg
push
outsl
out
cld
dec
hlt
adc
xchg
and
cmp
sbbb
popa
out
xor
pcmpgtw
outsb
inc
adc
xor
aam
mov
loopne
arpl
ss
mulb
xor
out
mov
pop
xlat
movsb
dec
lcall
add
push
jge
mov
or
lds
pop
sbb
push
add
sbb
push
or
jmp
or
out
push
or
sbb
cld
repnz
sbb
jecxz
adc
addr16
pop
mov
sarb
rol
cld
or
pop
jmp
adc
pop
mov
mov
popf
sub
loopne
sub
cs
test
sbb
pop
or
rclb
cmp
out
pop
insl
data16
mov
inc
outsb
scas
in
test
ja
mull
repnz
push
addr16
insb
ret
dec
clc
adc
or
adc
inc
dec
lret
mov
cld
xchg
mov
cltd
adcb
mov
hlt
xor
mov
leave
ljmp
jns
jmp
cmc
cmp
xor
jnp
aaa
es
inc
dec
leave
fs
mov
pop
test
stos
push
pop
lock
fidivl
mov
daa
xorb
inc
lret
jle
ja
mov
push
jg
repnz
fcmovne
jbe
mov
lahf
aad
or
jo
xchg
popa
in
mov
jo
orb
mulb
mov
xor
insl
call
push
loope
icebp
or
aam
sub
fucomp
and
sbb
mov
imul
xor
addr16
daa
sti
and
data16
mov
or
mov
repz
mov
int
cld
cmp
and
pop
sub
stc
into
push
xchg
dec
fs
mov
daa
xchg
fidivl
jae
loope
push
cmc
and
loopne
shlb
push
cwtl
pop
mov
mov
inc
sahf
jne
dec
jecxz
cmp
insl
cmp
lock
pop
imul
in
loope
jae
mov
lret
out
sbb
iret
cmpsl
je
movsb
fxch
inc
and
jnp
jae
les
pop
test
lret
aad
ficoml
ljmp
je
mov
cmovb
lea
loope
sarb
test
out
psubw
fildll
sub
out
mov
loopne
add
out
fildl
dec
inc
mov
inc
out
adc
test
insl
loop
scas
jge
cmp
adc
loopne
jns
cmp
mov
sub
ds
add
inc
into
out
add
mov
jmp
out
push
inc
xchg
out
push
out
aad
jnp
cmp
popf
adc
mov
into
mov
xor
and
ds
lds
add
dec
xchg
mov
and
push
ret
pop
nop
or
sub
dec
test
sub
mov
enter
push
out
andl
call
and
add
in
inc
sbb
mov
or
mov
adc
add
inc
adcl
or
xor
add
mull
mov
aam
scas
ss
push
addl
dec
xor
inc
jae
xorb
fwait
scas
add
push
inc
test
fisubl
les
mov
enter
mov
mov
xor
mov
mov
inc
adc
pusha
dec
imul
aad
jge
inc
cmc
mov
call
jno
int3
push
xor
outsl
jnp
push
les
pusha
cmpsl
int3
loopne
pop
fwait
mov
int
cmpsb
outsb
push
ficoms
subl
test
or
ljmp
cmp
jno
mov
mov
push
loopne
cmc
jp
not
pop
jo
test
std
icebp
jp
add
fdivrs
or
jmp
iret
imul
mov
idiv
add
or
lock
cmc
push
jl
imul
les
sub
adc
lea
add
add
rorl
icebp
shlb
movsb
adc
std
pop
adc
dec
cmp
lea
pop
lahf
mov
cwtl
hlt
ss
mov
out
rorl
mov
inc
cmp
pusha
lock
push
addr16
test
outsb
insl
fnstcw
push
mov
roll
add
adc
popf
inc
lds
dec
pop
repz
xchg
das
in
ljmp
lcall
jge
mov
or
mov
jg
jge
jge
cmp
ss
call
jg
bound
lret
mov
sarl
fwait
xlat
xchg
push
aas
jne
lods
bnd
stos
das
inc
xchg
repnz
faddl
sbb
gs
jo
loope
outsl
xchg
push
sbb
rolb
imul
hlt
rorb
fnstsw
jecxz
jbe
fistps
and
mov
mov
sahf
xchg
bound
mov
sub
cli
shrl
jl
mov
insl
popf
push
cmpsb
testl
jp
mov
inc
stos
clc
adc
loop
cmpl
inc
cmpl
and
sarb
out
mov
lods
jo
mov
push
mov
aam
sti
add
popf
icebp
iret
js
in
loopne
bound
or
in
mov
mov
vpmaxub
jae
out
andl
sbb
movsb
aaa
jnp
divb
mov
and
mov
std
adc
fadds
in
fsub
mov
mov
mov
pmaddwd
jge
push
mov
lock
scas
arpl
jl
inc
jae
lods
inc
jae
std
push
pop
pop
xchg
loop
cld
xchg
insl
sub
aam
outsl
lock
cmc
mov
adc
mov
aad
or
cmp
pop
por
pop
ljmp
jge
lods
and
sub
mov
lods
icebp
adc
rolb
mov
xchg
or
ja
or
inc
test
mov
xor
push
push
ss
xchg
les
mov
in
jnp
cmp
dec
test
mov
insb
sub
shl
fisttpll
mov
ljmp
std
ss
adcb
stos
and
sub
fnclex
and
jo
add
jecxz
sub
negb
add
sbb
mov
daa
ss
mov
mov
mov
sub
mov
fstl
xchg
daa
or
out
mov
imul
loope
mov
lods
ret
mov
imul
or
leave
ljmp
sub
stc
mov
push
jbe
inc
in
aas
sbb
das
mov
jl
faddl
pushl
mov
fwait
out
inc
mov
mov
mov
cld
or
sub
leave
imul
sbbb
les
cld
dec
shll
cmpsb
or
and
aas
loope
lock
shlb
out
and
adc
mov
push
mov
cmpsl
data16
push
cmpsl
xchg
push
mov
inc
enter
cmp
into
push
inc
mov
lods
popa
lcall
ljmp
ds
sbb
sbb
cmp
pop
inc
push
call
jb
daa
ja
rorb
mov
push
test
int3
stc
fcoml
mov
mov
inc
inc
fidivrl
mov
stc
addr16
jle
xor
sarb
mov
movsl
shrb
push
std
jno
andl
lock
xor
mov
mov
mov
cmp
mov
loopne
test
jp
jb
inc
mov
negl
mov
inc
mov
fcomps
shl
adc
sahf
insb
lock
hlt
ja
pop
xor
repnz
testb
sub
int3
shrb
push
sbb
cwtl
sbb
out
fs
sbb
pop
mov
mov
lret
iret
dec
scas
inc
call
cli
mov
or
mov
cmp
mov
pop
jmp
sub
mov
enter
mov
pop
dec
mov
inc
dec
int3
std
cmp
stos
xor
popf
dec
fidivs
movsl
daa
inc
leave
mov
jl
mov
call
and
out
out
filds
mov
cli
jg
inc
pop
inc
stc
cmc
lahf
xlat
jne
mov
fnstcw
push
das
in
sub
jmp
hlt
sub
mov
pop
cmc
clc
mov
sub
jle
adc
mov
jbe
xlat
cld
mov
add
jle
shlb
fs
outsb
inc
int
or
cli
in
inc
mov
pop
jle
imul
add
or
ja
jbe
outsl
jb
lcall
dec
loop
adc
xlat
sti
mov
popa
pop
mov
je
pop
lahf
mov
mov
in
add
sub
lock
mov
inc
cltd
pop
push
flds
xor
fldl2e
mov
test
scas
mov
rcr
out
ljmp
gs
lahf
outsb
pop
add
jg
mov
add
cld
xor
push
das
mov
pop
int3
aaa
loop
jbe
jmp
ss
jno
xor
pop
and
sub
mov
sti
sub
sahf
jo
add
inc
mov
dec
pop
cmp
cmpsb
push
aas
mov
pop
aas
sar
jge
mov
ds
enter
mov
pop
jg
sarl
push
ror
pop
pop
hlt
mov
inc
jno
jmp
mov
hlt
pusha
cmp
xchg
imul
mov
pop
aam
xchg
cwtl
out
xor
adc
lahf
in
fdivl
ja
cld
jcxz
clc
popa
call
add
movsb
lock
outsb
jg
out
adc
ja
mov
add
adc
jmp
cmc
dec
mov
jns
gs
leave
loope
adc
push
inc
jne
or
loope
sbb
ja
shr
sbb
xor
add
mov
or
add
in
xor
or
scas
out
les
fldcw
fisttpll
mul
imul
xchg
sub
mov
cli
mov
mov
mov
adc
outsl
cld
sub
scas
pop
pushf
mov
lock
inc
inc
ss
and
out
lock
jnp
mov
imul
loope
enter
inc
jns
pop
repz
sti
mov
bound
std
icebp
inc
inc
rcl
xlat
push
test
push
fcomip
mov
inc
es
mov
or
pop
add
mov
sarb
fisubrl
push
fcmovne
jge
scas
hlt
stos
jo
rep
jnp
mov
push
movsb
add
adc
popa
hlt
ret
sbb
cmp
push
test
imull
mov
xor
adc
or
aam
pushf
test
mov
xchg
js
add
mov
fs
adc
out
push
js
stc
hlt
mov
out
mov
lret
int3
dec
rol
mov
repnz
shll
add
mov
movsb
sub
jmp
xchg
lods
dec
test
icebp
clc
stc
pop
lock
jle
inc
cmp
mov
push
sub
je
stc
addb
mov
rep
push
push
jne
lea
stos
pop
ret
mov
xchg
dec
sub
js
popf
jle
repz
push
jle
popf
pop
arpl
mov
hlt
fwait
xor
jg
sub
mov
cmp
jno
mov
out
inc
adc
int
and
xor
fldl
push
outsl
mov
out
pop
loopne
shl
outsl
pop
scas
xor
cmp
lods
cmpsl
scas
ss
mov
jmp
xchg
lcall
sarl
int
test
js
pop
inc
lds
cmc
jb
jbe
loopne
fcmovbe
stos
rolb
shl
cmpsb
ljmp
stc
sbb
pushf
push
and
jg
dec
or
sbb
jp
std
mov
sbb
pop
and
and
lret
insl
jmp
mov
cltd
nop
ljmp
aad
rcl
imul
js
pop
dec
mov
adc
jae
popf
jmp
insb
pushf
out
xchg
lahf
fldt
stc
scas
fwait
xor
push
jbe
cmpsb
sub
xchg
mov
fcmovu
push
jne
icebp
fyl2xp1
int3
into
pop
cmpsb
rcrl
push
pusha
lcall
lcall
das
pusha
stos
pop
mov
pusha
iret
movsl
jmp
icebp
mov
sbb
stos
and
cmp
scas
scas
shlb
fmull
shrb
adc
pop
repz
pop
sbbl
dec
and
stos
stos
adc
sti
cmp
fsubrl
lds
and
sbb
cmp
cmp
cmc
push
pop
inc
sub
sahf
adcb
pushf
cli
jb
rcrl
and
adc
fsubs
mov
cmpsb
mov
sbb
xchg
in
dec
lret
sbb
jg
push
hlt
loopne
pushf
dec
lahf
scas
loope
mov
push
or
jle
dec
xchg
pushf
les
ljmp
dec
lahf
les
decl
mov
jnp
jo
xor
xorl
add
call
pop
test
push
cli
imull
mov
jae
jbe
jl
xor
fistps
add
ffreep
sbb
sbb
fisubs
pop
jecxz
mov
imulb
xchg
clc
cmp
and
lar
test
cli
adc
icebp
mov
jge
cld
dec
call
ljmp
push
mov
xor
dec
adc
xor
adc
pop
lret
cld
lods
pop
nop
std
aad
sbb
inc
stos
int
mov
fsts
and
sbb
scas
ss
scas
mov
in
imul
lock
loope
xor
lahf
mov
rolb
in
mov
icebp
dec
int
push
mov
push
xor
mov
xor
les
add
test
ja
cli
or
clc
mov
aad
lods
jg
dec
fmull
pop
pop
in
orb
ss
push
sub
add
movsb
clc
and
pop
xchg
loopne
out
push
xor
pop
sarb
leave
dec
mov
adc
outsl
xchg
xor
rorl
out
fwait
in
mov
inc
in
cmp
cmp
subb
aam
stc
stos
pop
addr16
xlat
push
mov
and
mov
mov
mov
insb
jg
fbld
pop
pop
adc
shrb
pop
jl
dec
aaa
test
inc
into
out
loopne
push
pusha
lock
lods
adc
jno
ja
jmp
lret
inc
subl
imul
dec
adc
pop
sbbb
mov
mov
and
mov
leavew
inc
sbb
fcmovnbe
adc
add
cmp
add
jg
xchg
cmp
xchg
adc
in
loopne
dec
jb
jb
cld
loope
inc
subl
cld
and
xchg
inc
jle
adc
aas
jne
add
and
push
sub
ds
mov
inc
mov
rcl
jne
cmpsb
and
mov
jp,pt
pop
mov
push
xor
testl
xchg
xor
loop
mov
cld
in
test
iret
div
ret
sahf
or
fwait
rclb
int
add
sbb
scas
subl
lds
pop
es
insl
mov
mov
fmuls
mov
clc
cltd
ret
pusha
adc
popa
rcl
add
and
xchg
cmp
in
xchg
popa
data16
jmp
jne
pop
clc
aam
mov
and
jg
lea
lcall
out
dec
adc
dec
and
shr
les
lock
ud1
stc
push
jmp
pop
enter
ss
lcall
ss
scas
cmp
mov
mov
or
fldenv
in
add
lea
cmpsb
aad
cmpl
lcall
sbb
jg
movsl
fildl
pop
mov
or
shrb
jmp
test
jne
cmp
fwait
mov
aas
fsubrl
mov
pop
aad
jo
pop
in
or
cld
fs
outsb
jae
push
pop
loop
stc
js
adc
adc
inc
iret
aad
aaa
lcall
jae
mov
cwtl
xchg
in
stc
movsl
ret
cmc
stc
mov
ds
fucomp
negb
dec
adc
adc
stos
sbb
insb
lds
xor
fisubrl
shll
dec
int3
js
cmp
cmp
mov
aad
cs
scas
add
xor
or
loope
mov
popa
dec
ljmp
clc
mov
sti
xchg
stc
cltd
jae
scas
mov
or
push
leave
jecxz
dec
testb
inc
push
or
stos
cwtl
popf
pushf
pop
in
stos
cmpsl
sub
pop
es
shll
push
pop
pop
pop
inc
jne
lcall
dec
enter
xor
cltd
push
js
lock
ret
xchg
outsb
push
ljmp
adc
cmc
xchg
cmc
orl
imul
std
jg
pop
adc
or
stos
popf
adc
jo
and
pop
lret
mulb
sbb
test
xchg
or
pop
cmp
lods
push
jecxz
inc
ret
call
push
jge
sub
clc
addr16
and
push
sarl
jae
or
or
fcompl
fnsave
dec
xchg
mov
sub
and
stc
lahf
sti
sti
lahf
test
fdivp
xor
mov
dec
lock
in
loop
aam
loope
cwtl
pop
sbb
xor
cltd
out
mov
mov
and
mov
inc
movsb
push
jbe
call
xor
mov
pop
in
adc
dec
push
xor
pusha
jb
paddsw
cmpsb
and
dec
mov
loope
out
orb
hlt
test
fmulp
mov
sbb
mov
lock
lods
xor
jge
popf
call
shrl
add
fsubp
fsubl
in
or
jb
or
fidivl
mov
pop
mov
mov
xor
outsb
out
popf
xchg
fs
insb
push
lock
sub
sahf
leave
call
xor
jmp
addr16
mov
iret
mov
mov
fwait
in
pop
ja
rep
add
dec
jle
rcrb
add
popf
pop
mov
fisttps
push
repnz
test
jo
pop
mov
xlat
add
cmp
imul
lock
cmp
clc
ja
dec
cld
aaa
aad
outsl
mov
clc
inc
jne
movsl
fcompl
scas
cmpsb
mov
mov
cmc
call
cmc
outsl
mov
sbb
dec
aam
adc
adc
outsl
repz
leave
shll
sti
std
xor
and
mov
and
movsl
and
cltd
adc
mov
outsl
lock
stc
inc
jmp
jns
xor
jecxz
std
mov
rcr
mov
aam
cmpsl
adc
loope
mov
ret
jg
scas
test
mov
lods
mov
xchg
mov
adc
in
test
push
xchg
dec
outsb
test
iret
in
jne
inc
hlt
add
divl
or
sar
adc
push
mov
jl
mov
dec
icebp
les
lods
and
rclb
push
add
jns
test
fidivrs
fucomi
idivb
sbb
loopne
cmp
xchg
mov
adc
out
lahf
sbb
mov
dec
sti
fmull
cmc
and
dec
dec
test
sti
cmpb
pop
jle
fnstsw
das
mov
mov
pop
pop
imul
mov
xchg
mov
mov
jmp
in
or
or
shlb
pusha
in
lea
xlat
std
jle
sti
mov
sarl
inc
sub
sbb
pop
aad
mov
or
movsl
stos
jecxz
push
fwait
pushf
aad
mov
xor
mov
je
jmp
cld
jl
jmp
repz
push
adc
xchg
add
mov
loopne
cmp
ljmp
and
nop
mov
pusha
sarb
xchg
xor
repnz
lret
ret
mov
clc
sub
cmp
aad
lret
mov
repz
sbb
sub
inc
jg
cmp
jg
mov
mov
rcrb
mov
repz
mov
shl
mov
add
pushf
or
cmp
push
mov
jmp
sahf
pop
rol
jne
xor
repz
jne
aaa
or
mov
loop
mov
subl
pop
clc
push
sti
jge
cmp
nop
test
mov
jge
dec
stc
push
and
dec
adc
ret
insb
and
cmp
dec
mov
inc
xchg
and
fs
ret
aas
push
xchg
jg
push
pop
mov
notl
cmp
sub
outsl
push
jnp
pop
stc
add
or
stos
ljmp
and
mov
rcll
sarl
adc
mov
dec
arpl
fists
add
ds
out
frstor
gs
daa
mov
cmc
fldt
pop
cmp
inc
fcomip
subb
enter
mov
lret
cltd
std
loop
ror
adc
inc
jne
test
data16
add
cs
mov
pop
adc
push
xor
jbe
pop
xor
push
cmpsl
inc
dec
mov
cmpsb
or
call
lcall
xchg
and
xchg
sbb
add
sbb
sub
std
adc
loop
pop
rorb
or
loop
cmp
and
cli
icebp
rorl
stc
fisubs
mov
push
cmpb
jne
xchg
leave
sub
cltd
adc
sub
rcrl
jne
faddl
cs
jg
clc
int3
aam
mov
dec
popf
xchg
test
adc
push
sub
sub
cmp
mov
and
sub
add
push
pop
mov
or
jns
push
sahf
cmpsl
jg
pop
jle
sub
es
outsb
or
jae
or
nop
mov
sbb
mov
mov
aas
and
push
inc
lahf
cwtl
or
push
cld
fidivs
push
pop
xlat
outsl
ficoml
lcall
inc
lock
loop
mov
lods
lcall
sti
ljmp
ror
sbb
fsubrs
jmp
xor
test
push
adc
lahf
movsl
js
outsl
mov
sarb
mov
lret
or
loopne
dec
or
arpl
jae
icebp
out
cmp
popa
icebp
mov
lock
cmpsb
lar
enter
lods
jne
and
mov
scas
std
arpl
decl
out
out
jmp
add
inc
xchg
ds
mov
imul
and
or
fisttps
loopne
fimull
popa
fidivs
or
mov
push
fcoms
cmp
pop
cs
dec
jecxz
lods
hlt
test
pop
and
stc
insl
stos
outsb
into
popf
aas
push
push
dec
repnz
add
push
cld
out
insb
test
negb
adc
cmp
xlat
mov
mov
push
jae
popa
in
jae
push
test
mov
mov
gs
faddl
mov
stc
or
ds
sbb
mov
cwtl
nop
dec
dec
xor
aas
xchg
lods
test
and
std
sbb
and
ss
subl
mov
mov
adc
in
mov
or
hlt
sub
daa
rolb
repz
stos
test
lds
adc
jae
aad
mov
or
test
adc
cli
xchg
mov
mov
jne
shrb
scas
jo
mov
mov
fnsave
mov
ret
jne
repnz
or
mov
out
shrl
jbe
xchg
add
push
xchg
pop
addr16
xchg
les
out
and
dec
lds
int3
outsb
pop
dec
adc
lock
mov
pop
cmpsb
cld
adc
jmp
cmpsl
cmpsb
and
cli
mov
mov
cld
scas
clc
cmp
rorb
sbb
es
and
mov
out
dec
sbb
call
or
icebp
push
scas
xor
out
push
stos
push
popf
mov
mov
fs
dec
lock
aam
out
xchg
movsb
dec
cltd
jae
filds
lret
mov
inc
cmpsl
inc
dec
aam
push
int
xchg
dec
jge
sbb
ret
cltd
jnp
pushf
xor
imul
movsb
and
int3
in
fs
mov
div
mov
pop
push
mov
pop
scas
loope
mov
stos
movsl
xbegin
cmpsl
mov
mov
adc
jl
addr16
fistps
mov
les
adc
lcall
push
pushf
and
cld
dec
imul
je
adc
hlt
in
pop
jbe
jno
sahf
mov
stos
js
inc
dec
inc
jbe
rclb
ret
ja
cli
cs
mov
leave
adc
insb
mov
dec
aaa
push
mov
pop
xchg
adc
lahf
push
js
ss
ja
stos
jecxz
or
sub
aam
mov
fldenv
push
dec
stos
lret
xchg
mov
popa
pop
ja
loope
arpl
arpl
in
inc
imull
jge
sahf
pop
lock
dec
dec
and
inc
ja
push
xchg
inc
push
fdivr
enter
jbe
int
sbb
fiadds
cmp
dec
jnp
mov
jbe
into
sub
mov
mov
xor
sti
mov
mov
jmp
repnz
leave
jecxz
and
jge
addr16
sub
lds
rolb
pop
mov
cwtl
push
dec
test
out
sub
ljmp
mov
cmp
jmp
adc
add
into
inc
sub
movsb
dec
shll
jmp
inc
movsb
add
jg
fidivs
clc
adc
hlt
and
insb
or
fisubl
xlat
ljmp
mov
push
rcrb
dec
pop
xor
mov
ret
sahf
sar
adc
push
lcall
and
icebp
ds
std
mov
imul
cmp
or
rcrb
cmpsb
inc
fisubrl
je
pop
mov
add
popf
das
and
and
test
rorl
and
pop
mov
dec
mov
fsubrs
rcrb
lds
sbb
xor
loop
fdivrl
add
mov
scas
ror
and
cmc
push
adc
das
or
in
xchg
shlb
clc
kxnorw
lods
cmp
adc
stos
fnstcw
sub
je
frstor
mov
xor
and
loop
movsb
jae
xchg
stos
pop
pop
sarb
stc
jmp
pop
mov
xchg
lahf
mov
cli
or
mov
sub
sbb
xor
out
lock
xchg
mov
mov
dec
fwait
mov
lret
inc
adc
adc
push
shrb
push
ljmp
cmp
dec
bnd
pop
clc
mov
fisttpl
mov
clc
popf
and
add
mov
push
sbb
fcmovb
mov
adc
push
pusha
mov
ds
fwait
imulb
ds
push
hlt
rclb
inc
pop
je
mov
xor
movsb
sub
cli
adc
or
test
cmp
dec
adc
out
sbb
testb
lret
push
or
clc
jo
test
cmpsl
or
lds
in
jbe
push
ds
xor
cli
sbbl
cmp
or
ja
xchg
js
fsubl
lds
inc
iret
push
mov
les
loope
mov
mov
jg
shr
or
stc
or
pusha
cltd
stc
dec
fmull
or
pop
jne
sbb
ja
sbb
jle
lods
mov
ret
mov
ret
out
jl
std
or
xchg
aam
add
mov
mov
sub
jno
ret
daa
dec
data16
cmpsb
pop
scas
xchg
add
addr16
sbb
mov
daa
cwtl
mov
pushf
out
lret
pushf
loopne
fcompl
xchg
mov
and
aad
ja
mov
xchg
flds
push
jae
push
ds
pushf
int3
or
and
sbb
jns
loope
jmp
inc
fsubrl
repnz
jne
icebp
lods
in
dec
test
mov
hlt
adcl
stos
gs
add
jbe
cmp
sti
inc
outsl
push
xchg
sbb
xchg
jg
out
inc
lock
xor
cli
inc
mov
jp
mov
das
mov
pop
mov
dec
xchg
cmpsl
inc
adc
enter
xchg
xchg
addl
sub
stos
insl
mov
cmpsb
pop
insb
or
in
mov
add
dec
pushf
js
jge
orl
mov
into
stos
sbb
jg
mov
fwait
dec
adc
fiaddl
mov
or
mov
pop
pop
xor
xchg
and
dec
pop
adc
mov
and
mov
jle
cmp
sbbl
call
xchg
adc
fmull
xor
in
mov
xchg
cwtl
add
enter
in
pop
ret
mov
insl
add
hlt
pushl
outsl
mov
shrl
mov
and
ret
xor
mov
or
rcll
subb
daa
jns
jecxz
jecxz
jg
sbb
jmp
adc
push
fs
xchg
out
push
jge
sub
pop
jno
push
xchg
pop
mov
test
cli
fnstsw
xor
xor
pop
stos
out
mov
int3
mov
add
enter
scas
jmp
jnp
icebp
and
mov
jmp
in
ficoms
repz
sbb
cmp
test
dec
dec
lcall
fs
in
loopne
cli
and
cwtl
fstpt
mov
sub
fs
jnp
imul
pop
or
repnz
pop
mov
push
andb
test
test
sbb
xorb
notl
lods
aad
in
shlb
ja
scas
mov
cmp
fldcw
adc
add
mov
insb
inc
inc
fdiv
cwtl
xor
inc
xor
pop
and
std
push
sarl
fimull
mov
test
out
dec
ds
mov
adc
ret
lea
mov
in
out
mov
and
test
pop
in
or
lods
test
sti
out
dec
fdivr
lahf
xchg
fsub
pop
push
test
pop
jmp
mov
pop
orl
and
cmpsb
dec
loope
icebp
stc
call
das
sbb
xor
pop
adc
daa
test
lds
mov
lods
out
inc
and
aad
sub
cwtl
jl
pop
add
lock
add
or
pop
sbbl
setp
cli
nop
mov
sbb
jae
mov
jp
test
jb
mov
push
mov
lret
insb
fcomps
bswap
inc
push
mov
test
inc
or
push
and
lea
xorb
dec
into
sbb
dec
fbstp
ja
sbb
jecxz
scas
stos
add
sub
add
xchg
cli
cmp
mov
daa
pop
test
cmpsl
inc
sub
aaa
or
pop
movsb
and
or
popa
fists
js
push
jb
mov
mov
sbb
cmp
neg
fadd
inc
pop
pop
cwtl
test
pop
test
jp
lods
cmc
pop
mov
stc
xchg
and
mov
push
fcmovnu
fwait
mov
and
jae
icebp
popf
xor
jo
outsl
pop
mov
cltd
test
lahf
jecxz
xchg
push
insb
les
xor
int
neg
sbb
fisttps
xchg
xchg
add
data16
in
xchg
jp
jne
hlt
mov
fistps
mov
or
mov
pop
int3
adc
clc
dec
fistpll
bound
rorb
push
pusha
rcrl
orb
xchg
enter
lods
idiv
push
cmp
leave
xorl
mov
mov
notl
xchg
in
xchg
inc
stos
sbb
inc
rorl
xor
cs
cmp
jmp
imul
push
inc
or
jbe
imul
jge
xorl
mov
mov
or
insb
into
aad
popf
jae
mov
lret
sub
into
aaa
and
sbb
add
fnstenv
aam
test
and
aam
stc
push
cmpsl
add
dec
loopne
push
data16
in
adc
iret
idivb
sbb
jmp
inc
xchg
div
jne
mov
mov
aam
sbb
imul
mov
add
rorl
mov
mov
push
fists
mov
jge
aad
stos
inc
movsl
pop
aas
and
rclb
test
fmuls
inc
fisubrl
ret
test
bound
ret
or
mov
jle
ret
popf
in
aaa
lret
ret
in
aad
data16
leave
or
xor
movsl
adc
test
push
sti
stos
cmp
xor
out
pop
inc
lds
insl
push
mov
sti
inc
pop
xlat
sub
cmpsb
sbb
lds
mov
movsl
bound
sub
loopne
sbb
ja
mov
das
pop
or
je
xorb
push
orl
pusha
out
pop
push
xor
in
adc
cmp
sub
pop
lahf
test
sbb
js
cmp
lock
sbb
adc
lret
or
in
outsl
popa
cmp
stc
pop
sti
loope
test
jnp
fildl
add
xor
adcb
test
ja
jne
cwtl
jecxz
int
fisttpl
push
int3
xchg
push
pop
lret
mov
rcr
mov
mov
std
loop
shrb
nop
mov
imulb
ja
and
mov
lahf
subl
cmp
cmp
xor
fists
dec
orl
or
in
xor
stos
lea
lret
push
mov
dec
add
scas
jecxz
pop
es
in
scas
leave
inc
sbb
into
mov
fistpll
inc
push
fidivrs
pop
lods
pop
pop
cmpsb
jno
cltd
into
push
fcomi
inc
xchg
stc
je
sbb
sbb
xlat
push
das
fsubrp
mov
or
scas
idivb
mov
inc
dec
sbb
out
testl
jmp
int3
mov
fcmovb
jecxz
rcr
mov
cmp
and
mov
fnop
and
adc
sti
out
push
mov
outsb
aam
in
cmp
push
das
scas
pop
push
cs
xchg
pop
push
leave
div
pop
xchg
adc
rorl
lock
jmp
mov
mov
icebp
ljmp
sub
pop
scas
cld
inc
fists
and
sbb
lods
mov
dec
ret
adc
mov
rcrl
xchg
in
fisubrs
mov
mov
out
cmp
call
cmp
xorl
scas
fwait
pop
pop
push
cmc
push
les
or
out
aas
subl
xor
ljmp
push
mov
imul
mov
imul
mov
inc
cmp
fdivl
cmpsb
lcall
pop
xlat
fsubl
inc
mov
arpl
adc
cmc
jae
mov
into
push
cmp
out
and
shll
arpl
imul
daa
jp
mov
mov
insl
mov
es
out
lret
mov
xor
or
mov
pop
loope
mov
lcall
and
outsb
call
sbb
data16
ss
pop
sahf
call
dec
adc
repnz
shlb
out
mov
lods
subl
mov
sub
fstpt
ja
xor
adc
cmpl
mov
test
lods
pop
dec
push
jp
ljmp
arpl
pop
dec
adc
test
loopne
fs
sub
ret
imull
mov
adc
adc
or
ret
jmp
lcall
sub
push
xor
or
sub
cs
icebp
xchg
nop
mov
icebp
dec
inc
popf
mov
test
and
add
inc
idivl
scas
xchg
or
and
mov
fldpi
mov
or
push
inc
shrb
add
xchg
popf
cmp
jmp
fidivl
inc
ja
pop
fildll
sub
inc
push
add
add
pop
out
jne
gs
sahf
and
dec
push
daa
mov
mov
pop
jp
sub
in
shlb
insl
rcll
jp
push
jge
adc
lea
xlat
push
out
jbe
out
add
mov
cmc
sbb
neg
ljmp
mov
loopne
into
inc
fsubrl
mov
and
in
rcl
cmp
loopne
outsb
dec
out
cld
xchg
jae
aam
rcll
mov
leave
sti
repz
icebp
dec
scas
cmp
adc
aas
mov
and
inc
sahf
mov
lahf
out
jno
jmp
rcr
mov
push
inc
push
call
cmp
fisubl
pop
ficoml
mov
cmp
out
jg
adc
mov
imulb
or
movsw
push
sbb
test
jmp
js
adc
sub
fdivrp
dec
cmp
pop
clc
push
roll
push
dec
inc
jmp
les
out
ret
gs
lea
mov
negb
bnd
sub
out
call
sub
and
xchg
xchg
jp
cmpsl
loopne
lret
or
cmpl
xor
leave
xchg
sarl
js
cmp
aas
loopne
add
aad
nop
and
call
repnz
lea
push
add
arpl
lock
lea
test
adc
adc
xorl
sarb
inc
gs
in
xchg
sub
movsb
or
lds
mov
fadds
push
test
sar
sbb
add
ret
sbb
outsb
orl
fiaddl
cmp
dec
xlat
xor
inc
pop
cmpsl
xchg
cli
in
std
jb
lods
jge
mov
call
inc
js
movsb
fistpll
jbe
imul
or
lods
xchg
comiss
gs
cmp
movsl
fcomi
or
jge
sub
mov
add
stos
mov
les
shrb
mov
sbb
pop
xchg
push
sysexit
push
push
lcall
cmpsl
mov
lahf
sub
imul
sub
hlt
rcll
addr16
std
mov
ret
xor
or
or
inc
mov
das
imul
clc
adc
test
negb
repnz
mov
xor
aad
jns
adc
mov
movsl
sub
aas
sbb
and
nop
xchg
push
lahf
mov
lahf
in
test
push
fwait
das
aas
dec
adc
mov
xchg
mov
pusha
jg
mov
jbe
or
cltd
test
jg
imul
and
mov
std
sti
cmp
push
fisubs
or
push
outsb
pop
sub
sub
fadd
sub
pop
in
xor
insl
outsl
xchg
xchg
sub
hlt
xchg
fidivl
and
ss
cmpl
push
hlt
pop
sbb
shlb
pop
rcl
adc
cld
or
mov
jo
xchg
ja
mov
mov
or
pop
addb
mov
push
xchg
test
popf
hlt
jle
clc
or
in
js
mov
testl
mov
mov
jns
movsb
fdivrl
jle
jl
pop
jmp
insl
inc
jbe
cmc
repnz
ja
mov
mov
sub
stos
xchg
out
aam
loopne
push
stc
sub
dec
and
lods
ret
popa
cmp
sub
mov
popa
lods
scas
daa
or
clc
xchg
adc
sti
stos
aaa
fbstp
mov
ds
xchg
adc
pop
cmp
ss
jne
xor
repnz
mov
fldt
pop
andl
hlt
cmc
in
bound
lea
insb
mov
adcl
jge
push
dec
dec
aad
pop
inc
inc
dec
out
out
inc
repnz
les
ja
icebp
or
outsl
push
orb
sub
and
or
mov
mov
adc
stos
xchg
movsb
mov
fs
mov
pop
cmpsb
js
jmp
xchg
prefetch
mov
out
and
insl
push
jmp
mov
add
and
or
jmp
ret
cmp
mov
xchg
mov
jl
cmp
xchg
adc
xchg
jge
pop
ret
ficoms
andl
mov
movsl
dec
icebp
pop
fimuls
popa
sub
nop
out
cmp
add
pop
sbb
popf
cmp
xor
jns
pop
sbb
add
stos
cwtl
int3
jge
xor
daa
dec
xor
sub
dec
jne
mov
add
lea
dec
push
or
inc
out
aaa
add
rclb
roll
and
in
add
movsl
lods
pop
aas
repz
lret
lahf
sub
mov
mov
jmp
dec
fcmovne
stos
jo
xchg
pop
inc
mov
and
jo
jecxz
enter
popf
out
mov
divb
or
out
ret
aas
and
jns
into
out
aaa
pop
mov
aam
insl
mov
lret
cmp
mov
mov
fcoms
stc
sbb
or
cmc
adc
mov
xchg
jns
add
test
sbb
shll
es
add
xchg
jbe
xchg
mov
or
ret
jg
xchg
cmpl
paddb
icebp
mov
out
add
or
jne
nop
aam
xchg
test
pusha
cmpsb
stos
popl
and
jno
scas
dec
pop
add
xchg
push
arpl
std
mov
mov
jno
in
sub
in
je
outsl
out
lcall
mov
jno
add
xchg
jne
jne
xor
xchg
roll
lcall
cmp
cmp
gs
sbb
lods
insb
outsb
mov
jbe
mov
sarl
cltd
je
pop
es
loope
push
lret
sahf
fwait
mov
lock
in
mov
dec
je,pt
lahf
jle
xorl
push
xor
sbb
ljmp
out
xchg
xchg
sahf
cmp
jne
insl
aas
add
add
lock
lret
fists
pop
push
jb
cmp
sub
pop
xchg
jge
lods
mov
xor
sbb
aaa
jns
mull
stos
xchg
test
xchg
push
xlat
push
cmp
test
pop
movsb
cwtl
and
std
loopne
jb
ror
ds
dec
push
add
mov
cmpsb
out
sub
and
scas
pop
sbb
std
fiaddl
nop
or
lea
dec
cmpsl
ds
shll
cmp
and
lahf
sti
xor
jnp
mov
xorb
out
or
mov
jne
pop
mov
in
mov
xchg
outsl
and
subl
inc
mov
dec
ljmp
stos
push
lods
incl
in
cmp
ret
roll
mov
out
scas
jmp
mov
xchg
in
hlt
fisttpl
inc
xor
adc
push
mov
fcomip
mov
je
lods
xchg
mov
jo
sub
ss
xlat
out
mov
aaa
push
sub
pop
test
mov
mov
sbbl
pop
mov
and
mov
dec
pop
dec
in
test
cmp
pop
imul
sub
jp
cld
cli
mov
enter
aaa
jo
ss
in
stos
or
inc
cmp
aaa
out
std
cmp
cmp
lock
adc
ja
add
and
jge,pt
nop
adc
add
sti
shlb
mov
sub
mov
pop
test
clc
fimuls
std
inc
lods
mov
cmc
mov
sbb
push
int
addl
and
out
sti
pop
test
out
push
negb
test
sbb
xor
mov
sarl
mov
dec
xchg
sbb
adc
hlt
jns
psubw
add
sti
xchg
aad
adc
pop
lods
dec
xchg
ret
push
sub
imul
rcr
adc
jne
aad
inc
jnp
icebp
shlb
xchg
push
xor
cmpsb
mov
icebp
decl
lea
mov
xchg
arpl
jo
or
xchg
push
movsl
xor
pushf
aas
xchg
pusha
jb
lock
mov
mov
lcall
xchg
adc
in
inc
subb
out
jp
mov
adc
pushf
ret
pop
and
and
mov
mov
inc
pushf
lock
mov
ljmp
xor
xchg
fisttpl
mov
dec
mov
clc
test
ficompl
mov
xor
mov
fs
adc
dec
out
vprotb
mov
pop
xchg
decb
js
sarb
jo
mov
sbbl
jo
add
xor
pop
push
mov
mov
mov
mov
mov
adc
lcall
and
pop
pop
jno
dec
sub
xlat
push
jbe
push
mov
je
and
adc
cmp
jecxz
cmpsl
jnp
pop
shrl
sar
pop
fistps
imul
dec
mov
shll
sub
js
test
dec
mov
sti
push
sub
jb
add
mov
cwtl
sahf
aas
xor
rcr
push
dec
popf
ds
mov
adc
icebp
or
mov
sahf
and
scas
mov
fmul
jmp
inc
adc
push
sbb
jge
pushf
mov
inc
pop
sub
repz
mov
enter
push
mov
or
fistpll
dec
sbb
cmc
inc
rclb
mov
fwait
cmp
add
rcrl
orb
inc
xorl
fistps
cwtl
fisubrs
arpl
pushf
or
jmp
xor
cmp
arpl
lods
jmp
and
lock
add
xor
jae
jle
test
adc
aam
jp
sbb
leave
das
hlt
into
xor
jo
pop
push
iret
push
cmp
mov
mov
push
push
add
fidivrs
pop
inc
adc
aam
and
in
loop
iret
sub
mov
lret
test
mov
sbb
mov
sti
lret
cmp
ja
mov
or
or
push
jp
xchg
into
orb
ds
fdivrs
sahf
repnz
pop
cmp
leave
dec
dec
punpckhwd
mov
std
add
xor
into
lret
in
loope
sub
jb
ret
pop
frndint
sub
gs
pop
inc
push
mov
lret
sub
and
jb
xor
movl
sbb
out
inc
fst
xchg
push
sbb
and
xchg
fimull
ja
shrl
test
mov
cmpl
add
adc
mov
sub
cmp
mov
aam
aaa
lods
mov
cmp
les
fdivl
hlt
mov
inc
mov
fsubr
lods
push
inc
je
lock
aad
mov
jecxz
add
push
or
icebp
iret
add
add
inc
aaa
aas
ljmp
mov
cmp
sub
sbb
add
adc
test
cmpsb
das
add
pusha
jbe
je
icebp
fucomi
sub
and
jg
repz
jmp
cmc
loope
bnd
icebp
xor
mov
pushf
cs
in
cmc
out
test
jnp
nop
loope
cmpb
rolb
test
iret
mov
pushf
imull
jle
sbb
leavew
loop
cli
xor
in
cs
pop
mov
aad
cld
test
cmp
add
lret
shl
push
fidivl
mov
pop
mov
je
push
shrl
xchg
jae
cmp
jle
out
jb
mov
sbb
loopne
mov
popf
out
in
fwait
xor
add
pop
mov
fildl
imul
loope
xchg
or
arpl
sbb
ja
test
ret
jmp
lock
jl
pusha
push
lock
mov
dec
sub
add
and
int
in
in
adcb
pop
cmpsb
inc
or
sarl
cmc
fwait
sbb
stc
dec
stos
add
cli
and
repz
and
jo
std
into
sub
repnz
addr16
fwait
out
pop
mov
or
lahf
xchg
out
fisubs
sbb
mov
push
add
pop
loop
dec
and
fnstenv
in
repz
test
pushf
ret
add
xor
mov
icebp
jo
ljmp
mov
xor
mov
xchg
xor
insb
out
pop
jne
rorb
pop
cmp
dec
push
sbb
in
aas
icebp
sahf
dec
xchg
int3
lahf
adc
inc
test
xchg
ja
add
idivb
jge
imul
xor
into
inc
lahf
aam
sti
rcrb
cltd
push
insb
jge
in
mov
bound
popf
or
jl
enter
out
sbb
mov
stc
push
repz
xor
out
sbb
inc
call
add
addb
cld
or
inc
mov
inc
adc
mov
test
jp
jbe
push
push
pop
dec
sbb
icebp
xchg
aas
daa
mov
loope
and
lahf
clc
decl
nop
ret
and
loopne
iret
lods
and
mov
scas
enter
int
aaa
and
xor
sub
sub
xchg
xchg
out
lret
cmpsb
icebp
sbb
and
jne
mov
push
inc
sbb
sbb
or
xchg
stos
pop
test
xlat
ss
dec
dec
mov
in
cld
mov
xor
jl
fadd
or
out
push
ljmp
and
inc
mov
pop
cmp
pop
mov
dec
adc
fdivrl
cld
xchg
mov
cmp
inc
inc
push
in
inc
add
add
mov
cmc
xchg
dec
or
xlat
xchg
in
icebp
adc
fnstenv
in
xorl
call
sub
mov
test
and
lds
aaa
xchg
mov
ret
out
sub
mov
and
adc
and
mov
cmp
lock
cmp
adc
mov
push
pop
cld
fsubrs
cmovb
je
jbe
shlb
xchg
lcall
xchg
cmpsb
mov
or
cmp
shl
push
js
mov
mov
movsl
cmp
xor
or
in
cmpb
push
jecxz
or
frstor
xchg
std
cmpsl
pop
cmp
pushf
loop
pop
xchg
jb
nop
test
mov
negl
mov
cld
xor
jbe
inc
test
mov
and
xchg
push
popl
mov
or
popa
xchg
push
xorb
adc
repz
inc
xchg
mov
leave
outsb
sbb
std
xor
shrl
sbb
lods
mov
out
enter
sbb
jb
fdivrs
pop
sahf
test
dec
jg
lds
xchg
pop
jmp
or
lahf
push
inc
add
add
cli
adc
mov
ffreep
dec
pop
movsb
or
push
add
cli
adc
addr16
push
nop
iret
lcall
out
out
enter
loopne
out
pop
aam
pop
or
and
ja
pop
xchg
mov
into
lret
test
test
js
or
xchg
jns
insb
mov
mov
pushf
test
ret
push
xor
cli
in
push
wbinvd
dec
fcmovb
cwtl
arpl
aam
jecxz
lods
or
out
dec
frndint
sbb
shrb
mov
cld
outsl
notl
sbbb
xchg
sub
loopne
xchg
inc
fwait
inc
pop
jno
and
or
std
rcll
stc
cwtl
stos
lods
adc
aad
push
push
ret
sbb
push
add
aad
mov
adc
xchg
jl
mov
dec
mov
jo
stos
stc
in
enter
enter
push
aas
cmp
fisttpl
push
xor
or
rcr
sub
inc
and
mull
add
or
cld
add
jo
test
mov
pop
and
cmp
scas
adc
jle
xchg
lret
and
jmp
hlt
fsts
cmc
ficomps
xchg
ja
aaa
sti
or
sbb
adcb
cmp
dec
movsl
mov
jg
aas
cmp
push
pop
and
jns
jb
roll
jae
jae
scas
cmpl
push
lahf
mov
loopne
int
mov
loopne
pusha
stos
push
push
sub
lods
cs
mov
sti
cmc
les
jecxz
jno
adc
insl
mov
inc
into
push
stc
dec
or
sti
and
out
xorl
addr16
shll
out
imul
fidivrl
cmp
and
scas
scas
jae
sbb
mov
push
imul
cmpl
cld
sbb
out
ss
mov
cld
ja
lods
mov
cmpsb
sti
test
pop
mov
testb
jnp
in
imul
sbb
cmp
popa
push
mov
andb
mov
mov
mov
mov
movsb
ja
ret
inc
or
push
sub
loope
mov
mov
aam
loopne
push
test
or
lcall
cmpsl
repnz
add
ss
shlb
sbb
pop
int
daa
xchg
in
mov
in
sub
shl
lcall
daa
lods
dec
lret
lret
lret
inc
ljmp
ds
jge
in
cwtl
jp
xor
jg
dec
inc
adc
ljmp
fstpl
test
xor
fmuls
pop
mov
lock
roll
imul
jge
pop
and
or
mov
mov
sub
pop
ret
adc
sub
in
sbb
shl
cmp
shl
shr
mov
or
xchg
sbb
xchg
je
int3
hlt
xlat
mov
inc
add
jg
dec
icebp
div
ret
xchg
testb
xchg
add
rcl
or
push
ret
mov
mov
scas
int
or
xor
sbb
jmp
lods
add
sahf
xchg
push
mov
adc
gs
mov
insb
cmc
fwait
pop
xor
aas
xor
scas
jbe
scas
mov
cmpsl
js
test
dec
aad
add
subl
jno
pusha
lds
mov
jg
popa
xor
js
and
mov
in
hlt
loop
lcall
cmp
out
xchg
out
in
add
ret
mov
push
fistpl
xor
sub
stc
in
clc
add
sbb
cmpsl
add
out
pop
dec
in
js
sub
sbb
fwait
push
fs
pusha
clc
shlb
sbb
test
cmpsl
jo
fcmovne
movsb
ret
adc
lahf
xchg
inc
xor
xchg
push
int
mov
fnstenv
js
sti
shrb
xchg
cmp
je
fidivrs
test
mov
mov
adc
test
xor
lea
xchg
lahf
adc
mov
stos
sbb
sbb
sti
sub
cmc
out
cmc
and
outsl
scas
mov
fistpl
mov
dec
rcrl
sbb
fildl
fwait
or
and
push
add
mov
dec
pop
xchg
sbb
fwait
out
mov
xchg
ficomps
outsb
pushf
les
sahf
inc
or
shrl
outsb
fiaddl
xchg
inc
jmp
mov
mov
aad
mov
pop
outsl
pop
xchg
repz
dec
aas
mov
pop
fldt
into
test
adcb
je
xchg
or
int
mov
aad
gs
dec
jp
inc
out
pop
sub
out
add
cmp
push
mov
gs
mov
in
out
lods
lahf
call
push
sbb
test
stos
xor
roll
xorl
outsb
sbb
pop
mov
sbb
cmp
out
leave
ror
ror
jo
shl
add
mov
cwtl
xor
pop
mov
jns
mov
mov
jae
movsb
push
add
fnstenv
pop
mov
mov
dec
fs
adc
xchg
and
jle
adc
xor
xchg
dec
repnz
mov
dec
sbb
pop
cltd
adc
dec
aaa
imull
jnp
add
cld
dec
push
divl
pop
jae
shll
lret
jns
mov
dec
mov
aad
cmp
push
test
arpl
pop
adc
mov
jbe
fiaddl
shlb
jmp
sahf
jl
lea
std
add
mov
ret
rcr
int
or
test
fwait
pushf
sbb
mov
movsb
stos
jg
push
sub
dec
out
shll
push
or
cld
xchg
or
div
xlat
cmp
add
cmp
cs
imul
or
out
mov
lods
mov
rcpps
pop
adc
mov
add
inc
sub
std
vcvtdq2ps
mov
fbld
stc
mov
push
pusha
sahf
or
or
jmp
pop
fcomip
popa
mov
jle
and
push
in
pop
stos
mov
sub
pop
push
mov
lock
fdiv
mov
pop
xchg
hlt
rcrl
jno
dec
pop
fnstsw
lea
jno
mov
jl
add
cmp
mov
pushf
cmpl
xchg
and
repz
adc
sahf
cmp
insb
adc
sbb
cmp
inc
pop
dec
adc
fisttpl
outsb
call
xchg
out
and
pushf
cmp
movsb
fiadds
lods
hlt
outsl
cmp
mov
in
pop
out
inc
into
mov
into
jg
lods
hlt
push
movsb
mov
pushf
xchg
xchg
incl
mov
pop
jp
mov
hlt
js
and
jo
cmp
fbld
dec
cmp
and
hlt
dec
scas
cmp
cmp
out
xor
std
cltd
sub
aad
mov
push
test
pushf
adc
notl
je
mov
scas
jl
lds
fcomip
cwtd
cmp
adc
xchg
hlt
fidivl
jb
cmp
sub
loopne
fnstcw
sbbb
movsl
std
cmc
in
mull
out
repz
mov
cmp
sahf
dec
mov
and
jl
pop
fildll
fnstcw
pop
sbb
into
pop
inc
shl
push
scas
int
out
and
js
nop
push
into
inc
xor
loopne
and
call
loopne
icebp
clc
idivb
mov
inc
sub
xchg
pop
sarb
adc
mov
out
mov
movsl
fsin
jp
cltd
clc
inc
mov
ds
fs
fidivrs
mov
in
repnz
ficoms
test
jbe
test
cmp
mov
fwait
sub
lock
or
popa
or
aas
int
mov
sbb
aas
mov
lcall
xor
lret
insb
stos
cmpsl
addr16
mov
gs
mov
mov
clc
fdiv
in
roll
rolb
xchg
imul
ja
xlat
adc
repz
ret
or
pusha
pop
gs
in
pop
in
lret
pop
incl
mov
pop
bound
test
je
dec
sbb
sbb
je
repnz
sbb
jl
inc
int
cli
je
cmp
stc
dec
stos
std
xor
mov
stos
adc
add
push
ds
sbb
inc
bound
rcll
push
ja
push
mov
bound
test
lods
cmpsl
ljmp
add
rolb
aad
stos
add
faddl
pop
mov
lea
test
test
fwait
imul
mov
shll
mov
push
call
iret
insb
fisubs
sti
and
aad
jnp
in
test
push
rorl
xlat
or
mov
and
out
pushf
out
inc
adc
in
aaa
cmp
clc
jge
bound
inc
or
int
mov
add
stos
sub
mov
sub
push
sub
outsb
lea
les
push
xchg
loop
push
sbb
push
aad
mov
test
pop
sub
fdivs
call
jp
cmpb
inc
and
mov
inc
rcll
jo
sbb
xchg
add
and
mov
push
sub
repz
pavgb
rorl
mov
push
lock
test
mov
dec
jae
push
nop
fists
lds
mov
sub
addr16
icebp
mov
ds
push
mov
lret
cmp
outsb
cli
neg
lods
popl
pop
insb
add
mov
or
shl
dec
enter
xor
jmp
lret
loope
test
jmp
push
xchg
iret
ds
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
std
outsb
mov
ljmp
add
or
cmp
pop
popf
dec
mov
into
je
push
pop
loope
xchg
add
and
shl
add
fisttpl
xchg
gs
cld
jg
roll
jecxz
lods
pushf
in
mov
push
loopne
gs
and
jl
jl
es
inc
and
insb
in
xor
mov
cmp
inc
pop
mov
or
adc
popa
jbe
repz
call
in
icebp
or
gs
das
mov
sbb
push
add
pop
xor
les
in
repz
xor
push
xchg
pop
rclb
push
cmp
rolb
pop
sbb
mov
mov
sub
scas
shrl
push
fs
daa
enter
es
fwait
shlb
dec
or
adc
cmp
movsb
stos
imul
xor
sub
dec
sbb
aam
cmc
sti
popf
mov
daa
repnz
pop
repnz
fldl
orl
out
mov
ficoml
push
mov
rcrl
and
mov
lods
loopne
jg
lock
sti
enter
loope
or
popa
lret
add
sbb
add
test
es
xchg
push
fsts
imul
pop
cli
ja
push
in
popa
xchg
fwait
jns
pop
jge
jne
cli
adc
inc
rorb
cmpsl
mov
cmp
or
out
sbb
imul
xor
shlb
sub
cmp
movsb
int
sti
adc
mov
jae
jg
sub
mov
mov
sbb
sub
loopne
sub
xor
nop
mov
dec
xor
xchg
fstps
add
mov
int
popf
ficoms
outsb
fcomi
sub
insl
sti
scas
jl
sti
shlb
loopne
add
fisttpl
dec
jnp
lcall
mov
insb
and
es
push
pushf
add
ret
dec
idivl
lds
es
loopne
pop
adc
jge
or
dec
mov
pop
icebp
sub
lcall
mov
and
jge
mov
ret
repz
push
hlt
inc
xchg
or
sbb
pop
imull
jle
jg
pop
stc
mov
sbb
inc
xor
cwtl
push
mov
add
mov
arpl
add
fwait
xor
pop
add
push
daa
aad
inc
mov
xchg
pushf
xor
in
cltd
xchg
mov
mov
iret
testl
ljmp
xor
adc
sub
jnp
lcall
and
add
mov
sub
sub
cmp
mov
adc
xor
lcall
xchg
je
pop
lahf
xor
bound
addr16
fsubr
rcrl
sub
mov
add
sbb
fdivrl
je
fisubl
je
add
cmpsb
mov
dec
xor
roll
and
xchg
and
jecxz
ficoml
pop
mov
bound
das
xchg
subb
notl
pop
repnz
cltd
idivl
pop
mov
mov
loopne
xlat
or
hlt
arpl
sub
or
daa
inc
and
mov
mov
dec
mov
sub
xor
dec
jg
cmpsl
jmp
or
lret
sub
cmpsb
sbbb
vcmpss
idivl
cwtl
stc
xchg
pop
push
or
adc
ljmp
sti
repz
jge
shlb
fadds
pop
add
jns
ret
das
dec
testb
and
lds
push
lods
cld
or
subl
inc
imul
inc
insb
inc
icebp
dec
push
inc
xor
sbb
dec
lcall
sub
test
xchg
in
rolb
inc
ret
cmp
imulb
mov
lods
push
cmc
or
and
jle
jae
out
jmp
ds
xchg
jle
mov
mulb
jmp
in
xor
inc
xor
lret
int3
cmp
rcr
fadd
enter
clc
out
in
shrl
jg
mov
test
and
mov
cmp
and
xor
divl
inc
fcomps
fisttpll
xlat
aam
fadds
leave
sub
sarb
sub
push
mov
and
push
outsb
jns
imul
in
and
ljmp
sarb
mov
mov
mov
xor
sbbl
mov
lret
icebp
mov
cltd
or
cli
push
cmc
mov
mov
icebp
mov
data16
mov
adc
add
mov
ljmp
mov
mov
sbb
stos
stos
aas
into
or
fisubrs
or
cmpb
and
stos
popa
enter
leave
icebp
push
and
mov
lea
fnstsw
test
fsubrs
lds
je
loop
mov
bound
mov
iret
lret
neg
xor
adc
xchg
outsb
enter
or
loopne
pop
xchg
in
inc
out
fs
mov
xchg
ja
dec
movsb
addr16
ss
or
or
popa
pop
xchg
push
xor
sbb
push
jb
push
test
mov
leave
jno
f2xm1
mov
xchg
mov
lea
xchg
and
xchg
call
jmp
sahf
mov
shlb
mov
lods
xor
mov
gs
xchg
mov
fwait
test
enter
push
cmpl
xlat
adc
lahf
out
fcmove
ds
push
sub
adc
and
ss
mov
inc
cmp
pop
mov
inc
and
xchg
popf
sub
mulb
and
fdivl
sub
jmp
mov
pop
cmp
pop
pop
cmp
clc
popa
mov
add
lods
xor
loopne
test
sti
scas
mov
lock
stos
inc
inc
mov
pop
das
pop
xchg
push
cmc
mov
pop
lret
push
mov
sbb
mov
mov
xor
ficoml
mov
stos
std
in
shr
jl
dec
test
fldenv
loope
lock
int
int3
mov
push
mov
shll
xchg
jp
xor
cmp
loopne
mov
ss
pop
out
cwtl
sbb
in
jne
js
out
and
sub
xchg
das
push
jmp
or
add
or
add
cmp
sbb
add
push
add
cmp
dec
add
cmp
popa
add
cmp
jns
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
ljmp
sbb
sub
nop
ret
mov
push
pop
shlb
loope
fcomp
rorb
lods
jmp
je
repnz
or
jno
adc
cmpsl
movsl
fcmovnb
andl
xchg
fadd
xchg
cltd
shlb
mov
ja
rcr
scas
gs
mov
sbb
cli
iret
jne
out
xor
nop
mov
stos
pop
jo
add
aam
jl
out
negb
fcoml
aaa
inc
ja
dec
cli
xor
push
adc
push
adc
in
jecxz
imul
popf
dec
xorb
pop
inc
iret
adc
xlat
sbb
sub
mov
repz
inc
adc
repnz
xchg
jae
test
sub
mov
push
cmp
and
in
push
in
decl
mov
lea
and
pop
dec
xor
cltd
or
arpl
sbb
rorb
mov
ficoml
cmpsl
in
mov
xor
insb
mull
jg
repnz
and
and
and
inc
out
icebp
jno
cmpb
jmp
fdivl
aaa
das
sub
dec
cli
pop
add
xchg
movb
jae
loope
inc
mov
mov
sbb
icebp
lods
cltd
aas
leave
pop
add
mov
or
imul
aad
call
je
push
mov
adc
sub
dec
adc
push
mov
loop
imul
sarl
add
push
orb
add
mov
jecxz
in
xchg
and
jecxz
mov
pop
mov
mov
int
fwait
cltd
orl
xchg
sbb
lea
jl
popf
xor
xlat
pusha
out
lret
dec
push
sbb
mov
sub
sbb
sbbb
mov
lock
inc
andb
mov
outsb
in
jns
sub
dec
dec
fsubrs
add
cmpsb
and
xchg
lret
clc
cld
insb
js
adc
ret
push
lahf
mov
je
or
popf
cwtl
shll
nop
xlat
pop
popf
mov
pushf
mov
jns
pop
icebp
and
iret
sti
adc
cltd
popa
and
xchg
ret
add
mull
mov
xchg
cmp
aam
cmp
rorl
jge
popa
subb
ror
mov
les
pop
ds
movb
mov
cld
xor
mov
add
mov
mov
fwait
arpl
xchg
and
xchg
sar
push
int3
sub
or
aam
push
mov
xchg
imull
call
in
mov
cli
and
out
dec
or
xor
cld
inc
and
sti
test
or
lahf
xchg
adc
mov
xor
push
popa
sbb
repnz
sub
xor
push
mov
push
jp
cld
xor
and
and
test
pop
and
lahf
imul
cld
xchg
std
mov
xchg
sub
mov
clc
fs
enter
mov
call
push
cmc
js
or
lret
mov
loop
push
inc
cmp
mov
mov
sub
pop
inc
outsb
or
pop
rolb
aad
imul
out
in
xor
aaa
xchg
cmp
cmpsb
imul
adc
cwtl
pushaw
mov
fdivs
mov
loopne
xor
pop
jae
stc
push
pop
cmpsl
inc
push
ss
cli
lea
lock
je
mov
fnstsw
pop
js
mov
jo
js
cmp
jmp
into
movsb
fsubl
pop
xchg
lock
cmp
hlt
shlb
push
in
cwtl
jbe
and
fbstp
jbe
sbb
sub
fucomip
in
sub
enter
xchg
sbb
cmc
cmp
cmpsl
pop
repnz
and
push
or
int3
mov
and
sbb
inc
lahf
jne
sub
mov
jo
lock
bound
andb
mov
neg
pop
stc
jne
mov
cmpb
clc
gs
jnp
jmp
outsb
lret
nop
leave
cmc
and
xor
aaa
repnz
dec
pop
mov
aas
pop
push
shrl
out
call
fs
mov
push
loope
hlt
jecxz
fcompl
call
daa
sti
jno
cmp
pusha
and
test
ss
icebp
enter
mov
adc
fildl
scas
shll
fwait
pop
fisubs
add
lcall
sbb
jmp
ret
fdivrp
adc
outsl
ret
out
ficoml
xor
cmp
roll
cmpsb
or
cwtl
xor
or
adc
clc
ja
jo
mov
pop
jns
pusha
cmpsb
pop
hlt
shrb
ficompl
ss
or
iret
bound
dec
rolb
hlt
push
push
mov
add
fildll
add
mov
sub
jge
shll
fbstp
clc
adc
pushf
ds
ljmp
ds
shll
sbb
lahf
mov
mov
sti
jb
test
inc
add
iret
push
cmp
xchg
cmp
and
jno
push
cwtl
mov
sub
jns
out
adc
call
jecxz
push
nop
repz
les
daa
sti
add
jae
negl
sub
adc
sbb
inc
fwait
jl
cmp
sub
jg
ljmp
adc
in
pop
ds
jne
mov
leave
pusha
negb
sbb
adc
rclb
cmp
pop
clc
xchg
mov
dec
imul
out
fldt
mov
sub
loop
repnz
stos
xchg
mov
shrb
fnstenv
iret
adc
mov
daa
xchg
mov
mov
out
inc
sbb
sti
loopne
cs
jnp
add
scas
xlat
repnz
fmuls
xor
imul
mov
dec
scas
mov
int3
dec
jo
pop
mov
js
mov
inc
inc
pusha
packssdw
xor
xchg
adc
adc
xchg
dec
in
jnp
call
enter
push
pop
out
das
add
in
mov
pop
insb
push
pop
stc
ljmp
in
nop
repnz
xor
and
xor
sbb
inc
mov
add
push
hlt
sbb
cmpsb
sub
stc
test
mov
std
mov
ffree
inc
pop
stc
xchg
enter
adc
pop
mov
sub
test
xchg
adc
xchg
sbb
ret
or
hlt
inc
lock
push
ss
mov
cmp
sar
dec
cltd
lret
outsb
mov
call
test
popa
scas
pop
mov
lea
push
dec
mov
mov
loopne
xor
cs
xchg
out
icebp
push
add
daa
stos
mov
nop
nop
mov
mov
cmpsb
cli
je
in
cmp
pop
rol
mov
dec
mov
mov
popa
xchg
fnsave
and
mov
bound
pop
jle
sbb
or
mov
cld
std
mov
mov
mov
std
lock
pop
push
push
or
or
push
fsubrs
and
jg
mov
jp
enter
mov
int
ret
cmp
adc
lds
or
adc
movsl
call
fdivrp
dec
loopne
shr
mov
in
mov
xchg
sub
repz
mov
popf
sub
xchg
mov
mov
in
incb
cmp
fidivl
mov
mov
call
mov
mov
mov
fsub
cmp
js
nop
pop
sbb
mov
sub
push
insb
add
icebp
nop
add
mov
pusha
hlt
leave
test
pop
hlt
js
mov
dec
aad
repz
shrb
hlt
in
mov
jmp
ljmp
daa
or
ljmp
in
mov
mov
js
sbb
sahf
jnp
repnz
dec
enter
push
clc
jns
lahf
pop
cmc
mov
ret
inc
test
lcall
repz
cmpsl
or
fcmovb
xor
inc
or
fdivrs
in
pop
in
mov
call
add
inc
pop
xchg
xchg
or
xchg
clc
pop
popa
lock
mov
fwait
mov
adc
sti
leave
adc
mov
pop
jno
mov
adc
sbb
xchg
push
imul
in
fistpll
add
xchg
adc
loopne
es
lods
pushf
adc
mov
roll
in
fimull
in
std
cs
push
xor
or
pop
rorl
mov
adc
fisubrs
in
cmc
stc
popf
mov
adc
add
fwait
dec
rolb
xor
jp
mov
cmpsb
fistpl
push
xchg
xchg
lods
daa
sarb
add
fcoms
incb
xchg
jl
jo
cmp
clc
leave
mov
lret
inc
aas
mov
push
push
or
push
insl
fidivrs
ret
scas
mov
fcomps
and
pusha
fidivs
lods
aam
mov
lods
cltd
aaa
jmp
in
push
stc
fists
mov
push
into
add
pop
lock
pop
bound
mov
cli
inc
inc
lahf
mov
dec
cltd
lret
imul
xchg
aas
dec
loopne
loopne
mov
mov
aad
test
pop
ja
lods
pop
fsubl
jne
add
cmp
jl
movsb
call
insb
cmp
cs
or
sahf
add
jp
dec
adc
push
add
cmp
cmpsb
push
and
repz
js
xlat
fsts
test
aam
test
fnstcw
jmp
inc
cmp
stos
hlt
ds
int3
inc
lock
out
ja
lret
xchg
lds
xchg
jnp
jne
fmul
push
shrb
jg
aaa
jb
in
aaa
fwait
fwait
outsb
lods
xchg
mov
clc
insb
cmc
add
push
insb
fstps
scas
adc
notb
out
xor
dec
sub
fidivrl
mov
test
loope
lea
sbb
cmp
jns
pop
je
or
xchg
lea
popf
xchg
cltd
push
jns
hlt
loopne
ss
leave
push
test
fs
inc
mov
adc
dec
inc
loope
call
clc
pushf
or
mov
lods
popf
loop
push
or
adc
cli
xchg
pop
mov
leave
push
bound
add
out
push
lock
or
mov
fwait
fwait
jg
call
add
cltd
pusha
cmp
xor
into
je
je
cmp
jne
mov
cmp
iret
into
jle
loope
ret
jno
inc
adc
sbb
pop
loope
mov
push
ja
lock
aad
dec
les
xor
xor
inc
push
cmp
repnz
jmp
mov
dec
pop
add
ret
lret
sub
insl
cltd
cli
lods
sub
out
shlb
cltd
ficoml
xchg
xor
ss
ljmp
repz
mov
jo
sub
aad
mov
cld
xchg
and
cmpsb
addl
adc
and
in
and
ret
mov
pop
jmp
sbb
leave
icebp
cltd
sub
xchg
mov
ja
test
div
popf
and
repz
les
mov
test
cmc
shlb
mov
push
jmp
gs
ret
dec
or
out
or
fdivrl
sub
mull
cmpsl
js
ja
out
xlat
pop
fdivl
jne
lcall
lret
ret
std
repz
popf
popf
fwait
mov
insb
dec
hlt
clc
jmp
stos
repz
dec
pop
xchg
hlt
push
xchg
xchg
fimull
enter
add
jbe
and
rcrb
push
jl
xor
adc
scas
dec
in
cld
call
js
xchg
push
mov
cmpsl
push
lods
push
and
adcl
cmp
stos
in
mov
shrl
mov
push
mov
cmp
xchg
pushf
shr
mov
and
fisubrs
mov
imul
or
adc
daa
shr
jp
lcall
xor
clc
ret
sbb
cmp
jge
inc
and
aam
pop
cmpsb
call
jb
into
fucomip
out
nop
and
out
loopne
int3
lret
cmpsb
int
orl
push
xchg
pop
clc
shrb
loope
xor
dec
sbbl
xchg
sahf
popf
scas
xchg
fsubs
movsb
out
lods
stc
cmpxchg
mov
inc
xchg
insl
mov
push
jmp
mov
outsb
jmp
mov
mov
add
aaa
mov
int
scas
bound
mov
out
mov
and
data16
push
repz
xchg
xor
mov
movsb
cmp
inc
mov
loop
fdivs
in
xchg
cmp
cwtl
and
xor
shll
stos
sbb
sarb
mov
add
lods
fs
xchg
xchg
push
outsb
bound
shlb
or
mov
mov
jo
add
jge
pop
mov
push
mov
inc
xchg
mov
loope
fwait
test
mov
iret
adc
cli
cmp
subl
sub
xchg
mov
es
clc
sub
sub
push
popa
test
mov
les
test
xchg
cmp
adcb
fldcw
jmp
insb
or
sub
jl
movsl
ljmp
outsl
mov
xor
js
lds
mov
add
insl
xor
call
fldt
sub
lret
cmpsb
std
stos
imul
push
lods
or
loop
insb
outsl
imulb
cmpsl
out
test
fcmovnbe
mov
or
jl
frstor
mov
lods
jb
push
mov
push
test
rorb
loopne
adc
imul
lods
push
mov
sub
shlb
cltd
daa
out
and
mov
lahf
mov
popf
mov
lods
ret
stc
loop
je
test
xor
push
xor
fadds
push
idiv
arpl
shl
lea
into
pop
fs
cmp
pushf
cmp
or
jg
inc
out
jecxz
and
ftst
sub
add
rorl
lret
fnstsw
inc
dec
add
mov
mov
mov
mov
pop
and
or
cwtl
sbb
push
fdivs
es
xor
cmp
loopne
inc
xchg
mov
ljmp
mov
pushf
mov
roll
popf
pushf
fsubrp
out
cmp
in
mov
or
mov
mov
mov
insl
fsts
shll
clc
pop
inc
inc
test
inc
pop
cltd
lock
xchg
ss
mov
lea
cmp
clc
ss
adc
movl
adc
pushf
pushf
mov
mulb
xchg
in
cmp
shll
test
int
iret
push
mov
movsb
lret
cmp
scas
mov
shlb
mov
inc
ja
mov
mov
mov
imul
pop
mov
shrl
in
cltd
mov
loopne
sbb
xchg
sbb
loop
xchg
add
add
clc
cli
sub
in
sub
aad
sbb
cmp
dec
mov
shrl
cmpsl
loopne
and
jmp
shll
adc
popa
or
scas
ret
mov
jns
scas
mov
test
pop
mov
stos
dec
je
incl
push
test
add
push
sar
aad
push
inc
jne
imul
cmc
add
mov
jmp
pop
imul
sub
jbe
clc
sub
mov
mov
cmpsl
fdivl
ret
in
dec
dec
paddq
push
fimuls
mov
pop
mov
jns
jne
insb
lea
jge
nop
imul
sbb
mov
sub
mov
lods
loop
mov
arpl
jmp
mov
pop
call
mov
xor
or
mov
sbb
stos
sti
sub
fimull
rcll
mov
xor
lret
arpl
mov
cmp
pushf
aaa
lret
js
in
cltd
jnp
sub
pop
es
jmp
and
or
repz
mov
pop
lea
cmp
sahf
pop
cmovno
ret
jo
mov
cmp
xor
xor
or
fwait
clc
out
mov
fisubrs
mov
xor
out
xchg
lds
mov
and
push
lret
data16
xchg
stos
fisubrl
xor
xchg
sbb
nop
mov
and
loope
cmp
je,pn
jns
aas
sbb
mov
movsl
cmpsl
ljmp
aas
daa
mov
mov
scas
add
pop
aad
out
xchg
insl
enter
pop
pop
lock
lret
inc
jl
sbb
dec
jl
mov
xchg
mov
cmp
lds
xor
out
mov
pushf
xlat
mov
lods
pusha
and
inc
cmp
pop
xchg
das
iret
lds
dec
dec
dec
adc
push
aas
xchg
mov
sarb
push
out
aad
cmp
jecxz
repnz
push
jmp
loopne
xchg
mov
mov
lods
xchg
js
xor
outsb
fistl
lret
sbb
hlt
ret
or
push
adc
xchg
popf
push
out
cmp
or
aaa
cmp
nop
mov
sub
movsb
imul
lcall
movsl
fstpt
ret
es
xchg
mov
out
setae
mov
orl
dec
add
cltd
push
and
mov
insb
lret
ja
leave
add
mov
xchg
mov
xor
js
xchg
mov
hlt
push
xchg
loopne
sbb
cmp
ja
lahf
out
and
push
mov
test
inc
mov
sub
jo
mov
dec
ret
add
rcr
ja
jnp
pop
mov
icebp
cmp
mov
lea
pop
stos
sub
pop
pop
jge
pusha
mov
dec
fsub
lret
jp
push
push
xchg
mov
mov
push
push
mov
int3
mov
iret
sub
lea
jle
int
or
mov
daa
stos
jg
adc
inc
cmp
pop
cmp
test
outsl
roll
xor
xor
shl
mov
mov
dec
mov
xchg
outsb
sahf
mov
mov
dec
cld
inc
dec
jne
pushf
js
mov
js
sbbb
outsb
popf
jmp
int3
jbe
das
shrl
je
add
idivb
cmp
mov
leave
push
jp
es
push
xchg
mov
push
pop
sub
test
cwtl
sbb
ljmp
sbb
icebp
shll
stc
pop
outsl
sahf
add
fidivrs
ret
mov
cltd
lock
bnd
rcrl
insb
hlt
mov
mov
je
jg
xchg
push
adc
mov
hlt
scas
xchg
cs
call
adc
add
call
imul
sbb
fdivl
lret
scas
jne
and
sbbb
out
scas
daa
scas
nop
adc
mov
stc
xchg
fsub
lret
daa
std
out
mov
xchg
mov
fisubs
cmpsb
adc
roll
es
imul
push
out
jg
ja
adc
jg
in
pop
add
xchg
adc
jl
lret
jo
test
outsb
fbld
xor
jb
fldl
add
int
vmaxps
sarl
test
cmc
mov
out
mov
jl
cs
test
scas
rcrl
mov
sbb
jns
ds
jmp
imul
call
cs
test
dec
jo
fwait
push
test
sub
sbb
aaa
pop
xchg
ss
jb
cmp
xlat
shrl
frstor
cmc
xlat
jno
pop
not
mov
mov
out
bound
iret
cs
mov
daa
and
lret
in
jb
xchg
insl
pushf
sbb
push
mov
dec
data16
cmp
arpl
stc
nop
iret
ds
out
jb
mov
repz
int
push
push
ljmp
push
sub
hlt
dec
or
jae
icebp
pushf
mov
jae
xchg
mov
out
das
cmpsl
jecxz
sub
cmp
jno
loop
fdivs
jo
outsb
lret
loopne
mov
loop
popf
loopne
sub
subb
mov
mov
mov
sub
pop
rorl
ficompl
pushf
orb
jl
pop
fmuls
rol
mov
mov
fstl
repz
loop
mov
out
xor
mov
xlat
leave
sti
lret
loopne
lds
cmpsb
mov
sbb
sub
adc
lret
outsl
inc
and
rolb
fmuls
inc
insb
adc
jne
fmul
cld
and
dec
in
jg
test
andb
scas
cmpsb
jmp
sbb
retw
imul
xchg
xchg
mov
adc
call
ss
mov
push
or
ds
scas
push
arpl
test
mov
ret
sub
out
mov
jmp
aas
insl
mov
sub
mov
sarl
mov
mov
test
pop
ret
sub
les
dec
rcr
and
adc
sub
and
xor
cmp
pushf
je
lcall
lods
fisttpl
insl
clc
pop
add
jecxz
pop
call
push
push
jb
lahf
in
les
sbb
push
mov
pop
dec
popf
add
xor
inc
or
or
xlat
je
cmp
cmp
xchg
sub
mov
mov
scas
sbb
sub
popa
repz
sbb
fcmove
leave
jecxz
call
and
sbb
dec
or
ss
fisubrs
inc
cmc
fsubrl
ljmp
mov
and
cmp
lahf
xchg
scas
test
rorb
hlt
fistps
inc
loope
xchg
aas
or
fisubrs
addr16
arpl
insl
inc
cwtl
jb
inc
jbe
add
ficomps
les
jp
movsl
lret
sub
push
cmp
lods
add
les
dec
or
push
cmp
clc
lcall
shlb
jbe
testb
in
fldt
push
clc
outsb
sub
inc
leave
inc
cwtl
xor
pop
xchg
in
inc
iret
lods
ror
adc
lret
clc
push
ds
or
movb
aaa
mov
lea
mov
xor
pop
cmp
lret
lret
iret
jp
add
lcall
int
cmpsl
adc
lock
in
imul
xor
or
clc
fsts
mov
cli
pop
inc
pop
mov
int
pusha
inc
insl
enter
cli
cmp
mov
insb
pop
mov
rcrl
fs
push
scas
jo
fs
push
cmp
rclb
jmp
adc
dec
stc
out
cli
rcll
shlb
pop
insl
imul
push
clc
int3
loop
repnz
and
pop
xchg
push
push
out
aam
jno
rorb
icebp
stos
dec
push
sbb
daa
sub
out
xor
xchg
pop
test
xor
popf
and
lods
lret
out
iret
popl
cltd
mov
mov
in
scas
pop
das
or
aad
xor
mov
sbb
pop
jge
xor
mov
movsb
out
fs
stos
mov
test
lds
js
loopne
stos
pop
mov
mov
xchg
cmp
es
xchg
pop
inc
xchg
or
xchg
fdivl
cmpsl
roll
add
xchg
xchg
fwait
pushf
inc
lea
data16
xchg
iret
pop
mov
sbb
pop
lods
shrb
xchg
aas
add
test
ja
xchg
sbb
in
ret
pop
push
lea
scas
jnp
in
lret
pop
loopne
adc
lods
push
into
adc
les
mov
popa
add
jecxz
dec
fisubs
sysenter
testb
cmpsl
pop
sarl
push
mov
jle
nop
sarl
in
jns
lret
daa
jne
or
ret
leave
pop
jnp
rorb
push
into
fldt
into
outsb
mov
mov
push
inc
and
push
iret
xor
push
add
inc
pop
mov
lods
fisttps
sbb
repnz
push
lret
fadd
ljmp
cwtl
fwait
and
push
fbstp
ljmp
mov
sbb
or
mul
das
sub
jnp
fldcw
add
mov
inc
or
loopne
subl
sub
cmp
cwtl
mov
rolb
clc
pop
into
clc
adc
cs
pushf
into
pushf
ret
adc
sub
cmc
stos
add
or
mov
jae
or
ja
push
adc
mov
cmpl
movb
int
xor
sub
imull
orb
fldenv
or
dec
mov
ds
ret
xor
test
jle
pop
into
fimuls
jbe
lret
sbb
rclb
les
pop
mov
cmp
xor
jb
sbb
outsb
sub
xchg
mov
insl
int
repnz
jp
scas
cwtl
fdivrl
mov
pop
mov
testb
movsl
mov
xchg
mov
sbb
daa
in
pop
rcrb
mov
push
push
icebp
sub
ret
inc
mov
inc
xchg
add
aad
lahf
xchg
sub
cli
cltd
and
cmp
pop
popa
xchg
pop
cmpl
rcl
aad
jns
mov
or
lods
xchg
push
test
aas
arpl
xchg
xlat
test
push
xor
out
push
hlt
fwait
nop
inc
ficoml
cmp
add
clc
dec
sahf
sti
cmp
adc
inc
dec
push
jl
ljmp
test
mov
mov
rcll
stc
shrl
and
icebp
pop
fnsave
scas
stc
aaa
dec
notl
lods
mov
out
decb
jo
enter
fwait
cld
adc
repz
pop
sti
stos
lret
or
cs
ljmp
into
xchg
jecxz
inc
mov
xchg
icebp
jp
int3
jbe
inc
fscale
fists
into
push
sub
mov
pop
out
rcrb
jle
fmull
fwait
mov
inc
in
fcmovnbe
incb
ds
pop
dec
cld
sub
pop
sub
movl
cmp
std
xlat
push
testb
fiaddl
jbe
in
inc
sti
add
insl
jne
idivl
fwait
movsl
ja
dec
inc
stc
push
or
pushl
mov
sub
or
push
cmp
lods
hlt
pop
cmp
clc
mov
sbb
xor
sbb
clc
pop
cmc
aaa
xor
cmc
in
bnd
negl
mov
in
sbb
dec
and
adc
fs
cltd
jl
sbb
ds
aaa
test
outsl
mov
push
outsl
into
mov
xchg
insb
cmc
push
mov
addr16
cmc
or
push
cmp
ss
pop
mov
imull
clc
out
int3
xchg
adc
ja
cmpsl
push
out
push
pop
mov
fists
lds
sub
pop
cltd
cmc
fdivr
pusha
stos
pop
jo
clc
mov
in
stos
rclb
cmp
aad
cmp
mov
pop
lods
popf
insl
sub
test
lods
cs
rcl
fiadds
jb
xor
xchg
mov
sarl
cltd
nopl
popa
push
testb
popa
insb
loop
loope
push
pop
test
mov
xor
repnz
or
insl
push
inc
ljmp
xchg
xchg
test
addr16
mov
lods
mov
jge
aam
mov
mov
sti
or
push
les
xchg
mov
xchg
sbb
push
add
mov
mov
add
call
scas
mov
adc
rcrl
scas
push
sti
fs
jo
xchg
jmp
and
data16
faddp
or
mov
lea
test
sub
mov
test
jne
cwtl
add
lods
popa
jnp
push
xchg
mov
add
repnz
inc
cltd
push
fists
lock
in
xor
xchg
data16
mov
cmpsl
cmp
lea
fs
cmp
mov
insb
add
imul
fwait
or
out
cmpsb
shrl
and
jle
dec
cmp
movsb
pop
in
lods
add
mov
in
mov
mov
jae
nop
scas
mov
out
loope
insb
out
arpl
fstpl
stos
adc
cmp
sarl
pop
inc
icebp
sbb
js
jmp
add
or
mov
cltd
or
or
sbb
int3
push
xor
add
jmp
inc
mov
rcll
test
push
movsl
xchg
inc
pop
xchg
xchg
repz
xchg
sbbb
insb
push
ret
fidivs
aam
cs
cmpsb
int
sub
dec
stc
and
adc
out
call
mov
add
mov
stc
pop
and
stos
sbbl
test
ja
mov
push
leave
pusha
ds
mov
cmp
sar
jns
ret
add
xor
mov
mov
test
adc
das
outsl
and
shll
popa
movsl
push
sbb
jl
out
in
sbb
fimuls
mov
dec
xchg
jbe
fists
out
or
cmp
sbb
mov
dec
addr16
jg
and
jcxz
fstl
aaa
and
loopne
orb
xchg
imul
mov
lock
xchg
jp
dec
popf
fnsave
popf
shlb
jecxz
int3
cmp
sbb
ficomps
adc
or
add
fstps
sbb
mov
dec
ljmp
std
outsb
pushf
adc
inc
and
cmp
in
fwait
pop
jns
mov
jmp
xor
xchg
mov
loope
test
out
cmp
mov
and
test
push
pop
sub
je
outsl
adc
mov
icebp
rclb
xchg
hlt
add
lock
jo
adc
adc
push
sbb
icebp
mov
mov
add
iret
add
sub
push
cmc
sbb
das
or
mov
negb
sub
jne
jl
je
shll
es
pop
push
xor
lods
cmovnp
ds
push
mov
mov
scas
dec
push
pop
push
imul
scas
ss
mov
inc
stc
mov
fcmovbe
mov
dec
push
push
and
xor
test
mov
mov
sahf
insb
or
push
and
xchg
mov
imul
push
loopne
mov
aad
mov
ja
sub
or
fists
mov
push
pop
bsr
adc
dec
adc
out
xchg
outsb
dec
mov
mov
cmpsb
jge
sub
icebp
xchg
pushf
mov
idivl
sbb
fldcw
inc
lds
fucomip
sti
and
je
jnp
sub
fists
jo
data16
sti
jb
mov
addr16
popa
ds
mov
cmp
xchg
in
push
adc
pushf
rclb
ds
sub
push
add
popa
aam
scas
mov
fldenv
repz
pop
dec
mov
xchg
leave
aaa
addl
inc
jecxz
xchg
jl
jl
es
imulb
fwait
adc
jge
test
xchg
adc
push
insb
aam
add
lods
push
dec
push
inc
ljmp
out
out
fdivs
xor
mov
cmp
inc
mov
scas
cltd
lds
dec
xor
in
testb
lret
push
ret
cltd
scas
sbb
add
pop
xchg
clc
ss
js
xor
xchg
add
pushf
out
shl
dec
outsb
pop
icebp
mov
jmp
insb
loopne
out
insb
pop
push
jmp
test
mov
mov
sbbl
jae,pn
or
mov
jns
clc
pushl
lds
cmp
scas
std
xchg
cmp
add
or
pop
iret
sahf
jae
push
cltd
fiaddl
test
scas
pop
hlt
jne
out
lods
in
jle
jb
lods
mov
popf
mov
pop
adc
sub
dec
sub
scas
xchg
shll
sbb
sbb
adc
mov
cmc
inc
and
je
pop
sub
adc
xor
fs
xchg
pop
mov
rcrl
xor
mov
sub
add
jl
cmc
sahf
ret
pop
push
rcrl
icebp
or
mov
sub
movsb
pop
call
cli
inc
inc
imul
add
mov
jae
dec
push
fwait
out
pop
shlb
mov
divb
adc
sbb
mov
lret
jno
js
pop
xor
push
pop
push
shrb
test
and
xchg
cmpsl
iret
push
bnd
mov
xlat
out
arpl
mov
fistpl
cmpsb
jecxz
mov
add
bnd
mov
out
jns
cli
and
add
inc
popf
addr16
lds
in
inc
adc
push
mov
shrb
xor
sbb
lcall
mov
fistl
push
fcom
pop
test
in
lahf
inc
mov
cmp
insl
insb
add
lret
leave
jne
pop
mov
mov
xchg
rcr
icebp
mov
push
mov
sbb
hlt
pop
fcomp
rolb
jmp
lods
dec
popf
pop
loope
mov
loopne
pop
fstp
shrb
filds
das
xchg
fstpl
add
adc
mov
push
and
das
dec
cmp
lahf
pop
mov
cmpsl
xchg
aad
lea
fnstenv
daa
pop
sahf
shll
xchg
out
addr16
adc
jge,pn
fcmovnbe
test
stos
and
fstpt
cmp
mov
jle
in
sbb
call
lret
adc
out
or
sbb
out
aas
mov
icebp
int3
ljmp
inc
xor
pusha
jmp
popf
aaa
das
and
addr16
adc
outsb
cmpl
pop
test
out
scas
sbb
adc
mov
scas
mov
pushf
cld
std
jo
and
fdivs
inc
nop
movq
lods
test
sub
mov
ss
sbb
and
fsubl
mov
sub
lods
pop
mov
mov
dec
iret
sbb
js
dec
inc
add
out
lods
mov
sub
scas
in
mov
in
or
jp
sub
mov
xchg
cmp
xchg
inc
pop
jp
sub
stos
or
sbb
das
mov
pop
push
popf
dec
lahf
sub
mov
loopne
mov
outsl
loopne
cmc
add
mov
les
xor
fidivrs
dec
scas
test
add
mov
scas
mov
mov
cmc
mov
jmp
push
mov
enter
lea
shlb
les
and
cmp
dec
cmp
pop
popf
xchg
push
pop
popa
mov
mov
adc
les
out
lret
ret
iret
mov
fwait
jns
mov
lret
cwtl
out
lahf
inc
aam
aad
dec
je
sub
stc
mov
ret
mov
loopne
jg
add
je
lock
lahf
dec
in
push
dec
pop
in
clc
push
and
sahf
pop
xchg
xor
inc
lods
mov
rep
jmp
insb
ss
scas
jg
les
mov
enter
adc
mov
xchg
jns
aas
lret
fs
out
insl
scas
jp
jecxz
stc
and
lods
aas
or
pop
shl
mov
jno
loopne
mov
cmpsl
mov
fistpl
movsb
cld
testl
fsubrl
push
mov
inc
or
dec
adc
popa
xor
mov
pop
add
xchg
int3
xchg
sbb
mov
movsb
jle
fbld
int3
gs
pop
fucom
and
arpl
jmpw
cmp
addr16
popa
push
clc
jg
lock
and
cmp
ljmp
adc
mov
lcall
jns
jmp
mov
orl
xchg
cli
inc
int3
arpl
push
jns
lcall
xorb
or
negb
incb
sti
cwtl
call
cmp
pushf
sbb
jns
test
adcl
mov
lods
daa
or
xchg
jmp
push
divl
loopne
rcr
imul
pop
lods
or
lahf
test
xor
mov
push
lret
mov
push
inc
mov
or
das
fcomp
pop
dec
fistl
movsl
fs
xchg
or
or
mov
cli
lret
mov
cmp
xor
cmp
pop
or
mov
ljmp
iret
mov
or
clc
dec
xchg
dec
sahf
sbb
mov
jg
sahf
lods
jmp
pop
stc
inc
mov
pusha
leave
lret
and
mov
add
inc
psubsw
xlat
loop
xchg
dec
inc
push
xchg
daa
les
and
mov
ljmp
negb
cmp
sub
int
fs
pop
decb
movsb
and
mov
rorb
ds
fstpt
outsl
ficompl
push
mov
iret
out
fdivl
imul
mov
push
add
mov
insb
stos
filds
fwait
shrb
jge
jecxz
in
add
bound
inc
scas
or
out
pop
in
adc
or
and
add
mov
movsb
paddusb
pop
fbstp
dec
jae
into
push
jle
stos
ljmp
pop
lea
gs
push
xchg
dec
test
fnstsw
xchg
rcl
mov
or
and
pop
pop
pusha
xor
mov
and
test
inc
movsl
inc
arpl
mov
xor
movsl
or
fnstenv
mov
sbb
scas
notb
int3
scas
xor
or
mov
pop
push
mov
lds
nop
lea
pop
testl
aad
stos
xchg
in
mov
cltd
inc
rcrl
mov
call
push
sub
aam
lahf
fwait
mov
pop
test
dec
shlb
ret
xor
in
js
and
add
inc
std
outsl
es
pop
mov
iret
test
mov
jmp
aad
icebp
enter
les
jae
dec
fnstsw
or
js
or
xchg
ficoms
arpl
adc
add
jne
out
xchg
sub
jo
inc
filds
or
out
mov
stc
mov
sar
jno
rol
test
dec
mov
lods
xchg
fcompl
or
mov
in
js
adc
sub
leave
fs
jns
fldl
test
cmp
js
js
addr16
mov
xor
mov
push
push
aam
insb
mov
int3
test
rcrb
fsubrl
aad
hlt
dec
in
cmp
test
outsl
negl
pop
mov
fcoml
movsb
pop
mov
mov
dec
xchg
cld
out
pop
add
sbb
mov
push
fistpll
ja
sbb
lods
outsl
or
int3
mov
push
adc
cmp
mov
js
fcom
out
popf
out
mov
loope
push
add
sub
mull
lods
in
jmp
push
fdivrl
mov
outsl
sbb
inc
js
pop
popa
adc
lods
int3
xor
mov
adc
mov
shl
imul
jae
imul
fs
mov
imul
fsubl
xchg
loopne
inc
popa
cld
fcompl
mov
jmp
or
mov
cmc
je
rorl
icebp
popf
out
shr
mov
sbb
jmp
ja
mov
subl
dec
push
jl
push
ja
mov
dec
ficoms
jno
jns
jne
pop
mov
jnp
lock
dec
fstl
hlt
sbb
insb
scas
jns
mov
jmp
fdivl
daa
jns
cli
dec
adc
jnp
ja
data16
push
pop
xchg
outsl
jb
mov
lods
in
or
enter
call
push
arpl
fnstenv
cmp
push
ja
repz
outsl
ljmp
sbb
mov
out
dec
out
mov
mov
sub
loopne
ds
ficomps
mov
jmp
subb
mov
into
push
icebp
out
in
in
in
pusha
lods
fdivp
mov
xor
xchg
popa
out
pop
in
out
jp
cmp
fidivrs
sub
cld
fistpl
mov
mov
mov
outsl
mov
dec
movsl
in
in
dec
jo
dec
data16
push
loope
je
es
nop
fucomp
sti
mov
or
ja
inc
lds
popa
sub
jmp
jecxz
test
add
test
inc
outsl
shlb
mov
nop
mov
cmp
and
mov
out
mov
rcl
daa
mov
clc
inc
rorl
mov
inc
push
fisubs
ja
in
fdivl
xor
dec
adc
popf
mov
imul
loope
faddl
jnp
outsl
sbb
loopne
cmp
rolb
xor
xchg
xchg
dec
mov
out
mov
pushf
pextrw
loop
mov
in
ficoml
or
daa
xor
faddl
cmc
outsl
pusha
and
jl
sbb
mov
aaa
add
or
sbb
iret
mov
cwtl
mov
adc
dec
mov
ja
ja
push
inc
outsl
outsb
and
popa
test
add
and
or
mov
inc
loopne
jg
fnstsw
inc
pushf
mov
adc
mov
and
sub
push
movsl
std
out
jno
test
mov
and
add
adc
and
mov
out
fcoml
xor
fsubr
dec
sub
sbb
fidivs
mov
pop
ja
mov
loope
stos
and
mov
call
push
jns
dec
fistpl
xchg
and
xor
sub
jne
dec
adc
sub
fildll
jns
jecxz
mov
int
gs
jne
jmp
mov
inc
push
fdivrl
add
adc
int
movsb
in
jae
int
or
mov
pop
rorb
aad
pop
xchg
in
dec
filds
lock
rep
mov
scas
cmpsl
sub
scas
push
ja
mov
adc
pop
popf
sahf
pop
addr16
int
ficoms
push
jne
lea
mov
mov
out
lods
and
mov
lds
mov
and
lods
repnz
or
icebp
hlt
add
ret
popw
sahf
dec
loope
pusha
pop
repnz
sub
inc
xlat
cmpsl
pop
lret
dec
fdivrl
dec
adc
and
pop
lods
pop
inc
cmp
cmp
leave
repz
cmp
add
scas
or
inc
mov
or
ds
jbe
sbb
sti
xor
sub
jmp
lods
sbb
fucomip
daa
bound
mov
inc
push
mov
cmp
lods
icebp
jmp
jb
mov
stos
adc
lcall
mov
xor
ljmp
sub
pusha
les
lret
mov
cltd
std
mov
pop
mov
jbe
test
mov
sub
ja
cs
or
rolb
mov
adc
in
sbb
scas
rclb
popa
ss
pusha
roll
mov
and
pop
in
cmp
mov
subl
mov
into
sbb
leave
sub
enter
sub
sub
test
aaa
loopne
call
mov
cmp
cmp
icebp
test
dec
fmull
out
fisttps
mov
jb
cmpsb
xchg
sbb
loope,pn
mov
push
faddp
mov
xor
push
cmp
or
pop
cmp
pusha
fimuls
mov
cld
and
lret
mov
movsb
mov
jecxz
lret
push
mov
mov
mov
inc
and
into
adc
xor
mov
push
in
mov
mov
mov
mov
dec
fisubrs
pop
ss
iret
ss
in
sbb
test
lret
lods
xchg
fists
ljmp
pop
popa
js
and
sti
lock
pusha
loopne
inc
lods
mov
or
fbstp
lock
mov
mov
daa
insb
pop
lock
cltd
push
dec
jmp
hlt
aaa
stos
push
sub
lcall
lds
outsl
cmp
int
int3
inc
dec
sbb
addps
in
mov
inc
clc
add
cmp
jge
push
dec
cmp
pop
ss
aad
int3
jb
loopne
push
adc
cmp
pop
xor
xchg
adc
call
cwtl
pop
push
mov
test
hlt
mov
loop
inc
shrl
cmc
pop
jnp
xor
inc
aas
xlat
lods
sub
daa
mov
fldl
ja
push
inc
stos
push
dec
sbb
cmp
loopne
push
aam
sbb
jb
xchg
mov
stos
cld
mov
mov
out
dec
mov
test
mov
jae
cs
add
imul
cmpsl
sub
lock
hlt
lock
aam
loope
pop
inc
iret
arpl
add
mov
inc
cld
pop
inc
sub
fisubrl
sbb
aaa
inc
int3
int
ret
testb
mov
mov
rorb
cmp
adc
lods
cmpsl
sbb
inc
in
cmp
or
xlat
mov
les
adc
xor
or
rolb
jnp
adc
push
pop
push
mov
mov
mov
push
es
mov
and
arpl
mov
and
mov
dec
test
mov
xchg
int
cmp
movsl
add
out
sbb
and
cli
mov
xor
test
xchg
addr16
pop
mov
mov
mov
push
roll
dec
scas
jp
inc
mov
dec
movsl
das
incl
mov
fs
ffree
xchg
xchg
int
inc
divl
mov
cmp
sbb
inc
fisubrs
test
sbb
sbb
es
pushw
iret
pop
add
xor
addr16
aaa
lods
sub
andl
or
ja
cmp
add
cmp
stos
pop
sbb
js
sti
mov
dec
jecxz
fdivl
repnz
ret
cmpsl
or
aam
sub
sub
jge
mov
xor
stos
add
inc
xlat
loopne
ljmp
in
dec
scas
in
adc
jmp
cmp
mov
mov
mov
jo
xchg
inc
inc
call
aaa
pop
aam
push
loop
dec
jmp
je
push
stc
adc
in
xchg
fsubrs
rclb
out
in
in
loopne
and
mov
push
sub
sub
scas
sbb
scas
pop
popa
xor
pop
mov
or
cltd
stos
mov
cli
adc
rcrl
push
fsubrl
dec
shlb
adc
data16
les
and
mov
int
data16
iret
fisttpll
pop
mov
mov
or
mov
test
fisttpll
lock
pop
jg
cmpsl
in
mov
shll
adc
xor
push
ds
xchg
pop
fiaddl
cli
insl
and
sub
popf
dec
jge
mov
dec
icebp
xchg
add
dec
mov
in
int3
xor
or
movl
xchg
add
rcrb
sub
adc
loope
out
pop
and
fists
adc
popl
pop
sub
or
outsl
and
rorb
mov
or
inc
xchg
inc
push
dec
xor
or
cmpsb
pop
aam
data16
add
mov
jge
mov
cmp
bound
call
fistl
lahf
mov
sub
movsb
inc
scas
mov
call
mov
fisttpll
inc
and
sahf
or
and
or
stos
xlat
das
xor
pop
sbb
inc
ja
xchg
fdivs
mov
jae
sti
adc
dec
xchg
movsl
sbb
xchg
lock
icebp
mov
cmp
fnsave
loope
and
in
push
scas
jecxz
iret
dec
or
add
int3
jae
sbb
loop
mov
lret
nop
scas
adc
xchg
cwtl
scas
leave
mov
cmp
loope
or
ret
hlt
outsb
cs
xchg
dec
fwait
int3
mov
je
test
test
loop
mov
je
sub
mov
add
fsubs
push
neg
std
sub
stos
jmp
push
xchg
loope
shr
call
xor
in
insl
mov
cld
cmp
push
add
inc
insb
loopne
int
popa
or
pop
fidivs
sbb
fidivs
ljmp
pop
in
lods
mov
scas
inc
es
out
adc
repnz
ljmp
jbe
mov
hlt
xchg
inc
sub
jp
xor
leave
sahf
jp
cltd
test
test
inc
push
mov
icebp
aaa
pop
adc
push
mov
xchg
jmp
addb
cs
push
push
xchg
std
and
je
xor
mov
ret
xor
mov
fs
fs
fildll
push
cmp
jl
ja
mov
scas
bound
ret
mov
cmp
insb
and
xchg
fsubl
bnd
enter
sti
inc
mov
or
ficomps
add
sub
push
insb
mov
and
iret
xlat
and
pushf
mov
clc
push
fidivs
les
add
push
rcl
call
iret
cmpsl
fbstp
mov
inc
dec
mov
int3
lods
cmp
cmp
xor
imul
pop
pop
jbe
sub
divb
sub
lret
xchg
shrb
clc
xchg
adc
call
sbb
cld
add
std
inc
lea
sub
outsl
pop
jle
jmp
lea
lock
xchg
inc
mull
jl
push
xor
add
sub
loopne
sarb
xchg
bound
xor
mov
and
dec
jl
push
cmpsl
mov
dec
stc
js
lcall
mov
sub
jae
popf
fdivs
inc
cmp
arpl
fidivrs
pop
cltd
outsl
popa
daa
cmpsb
mov
cwtl
movsl
hlt
inc
aad
int3
int
xor
andb
mov
repnz
sahf
jno
enter
sbb
cmp
inc
mov
loopne
jae
pop
fimuls
cmc
cmp
sub
mov
jmp
das
cmp
lahf
call
imul
fbld
pop
adc
sbb
stos
sbb
daa
pop
mov
rolb
mov
xchg
fimull
push
test
pop
test
out
adc
int3
fldcw
mov
lcall
sahf
mov
xor
fldcw
stc
insb
mov
les
mov
push
mov
xor
int3
mov
xchg
mov
daa
js
ret
sbb
data16
in
stos
test
mov
ja
xor
sbb
call
leave
or
jne
cmpsl
in
imul
cmp
scas
imul
mov
dec
xor
inc
rcrb
xor
lods
sti
loop
xor
mov
call
aaa
out
cmp
xchg
adc
outsl
repnz
fisttpl
insb
push
cmp
adc
clc
jno
aam
add
bound
xchg
sub
or
test
mov
adc
fimull
push
cmp
ret
cmpsl
push
xchg
rcll
or
fwait
stos
pop
xor
mov
hlt
jg
arpl
addr16
adcl
jns
and
and
xor
aam
mov
cmpsb
xchg
xor
andl
xchg
mov
lret
cmc
roll
repz
mov
add
lods
sarl
daa
fxch
mov
and
lds
or
sbb
loope
out
xchg
mov
andl
or
rorl
mov
cmp
mov
dec
xchg
loope
mov
scas
popa
mov
lcall
push
xor
xchg
cli
fisubl
mov
jecxz
mov
jb
and
mov
xor
dec
xor
jae
lcall
hlt
and
sbb
fstl
fdivrl
inc
sub
cmp
aaa
mov
sahf
pop
dec
leave
or
xchg
rclb
push
mov
pop
push
dec
cmp
ret
pop
jo
into
dec
pop
push
sbb
lret
scas
adc
sti
xlat
lock
xlat
mov
inc
jae
movb
shr
jbe
dec
xchg
mov
les
mov
mov
mov
xor
adc
vfmaddsub231pd
popf
loopne
cmp
mov
jno
mov
cmp
inc
sbb
cmp
push
fwait
out
lods
ja
frstor
mov
scas
out
nop
mov
xchg
rcl
es
lods
je
adc
je
mov
push
les
sbbb
rcr
cmp
dec
out
fst
dec
lret
sti
movsb
imul
test
cmp
hlt
fsubr
in
dec
daa
or
inc
jb
fnsave
pop
sub
or
mov
sbb
call
cmpsb
pushf
jl
aas
xchg
test
insb
ss
cmp
sahf
mov
lea
dec
mov
and
fdivl
aam
mov
inc
adc
add
push
mov
in
outsb
jns
sbb
inc
cmc
cmp
insb
fstpt
mov
loopne
in
cwtl
inc
xchg
adc
pop
popa
xor
movsl
pop
sub
loopne
push
loopne
mov
cmp
pop
adc
fdivrs
jno
arpl
jno
loop
test
cwtl
out
pop
cmp
mov
adc
or
xor
mov
pop
xor
aas
fs
leave
mov
pusha
xor
out
and
lock
jge
push
sbb
xchg
in
frstor
test
jp
punpcklbw
imul
sbb
adc
dec
movsl
iret
inc
push
fdivs
jo
jae
mov
out
mov
jae
and
enter
cs
xchg
fdivp
adc
push
mov
cmc
push
push
add
cmp
movsb
xor
pop
sub
mov
cmp
push
fchs
push
or
in
ss
outsl
fcomps
out
movl
rorb
das
fsubl
xlat
inc
aad
lahf
movsl
push
cli
mov
test
and
mov
dec
movsl
mov
ficoms
mov
push
xchg
add
ss
pminsw
inc
das
lods
outsl
mov
rolb
and
xchg
mov
shr
popa
js
jb
sbb
shlb
lds
mov
jo
insl
shlb
xor
fucomip
gs
mov
call
or
jmp
mov
push
mov
arpl
incl
add
call
call
shr
xor
fwait
xor
pushf
arpl
js
dec
jle
repz
call
popf
cwtl
sub
call
stos
fistpll
sbb
out
dec
jl
jmp
rcll
adcb
arpl
arpl
popf
shrb
push
icebp
inc
mov
dec
into
int
jg
pusha
xor
mov
call
pop
xchg
rclb
jecxz
and
out
xor
es
jne
cmpsl
jns
clc
pop
and
or
fnstcw
orl
dec
lea
lods
mov
nop
or
push
scas
jae
add
and
ror
int
mov
adc
mov
adc
pop
xchg
cmp
dec
scas
fisubl
mov
stos
imul
daa
mov
insb
mov
jo
cltd
sbbl
int3
loope
loope
sub
in
outsb
jo
xchg
lea
insl
mov
aad
xchg
adc
xor
rcl
in
movsb
cs
mov
fcomp
mov
out
sbb
cmpsb
in
or
mov
xchg
add
rclb
into
and
aam
cmp
adc
mov
adc
mov
nop
jle
mov
into
mov
aad
insb
shr
mov
fildl
fxtract
lcall
mov
cmp
sahf
dec
js
aam
mov
adc
jmp
dec
mov
push
cmp
mov
push
cmp
or
mov
enter
mov
dec
ss
push
call
mov
dec
jo
js
sub
pop
in
cmp
js
lods
xchg
repz
xor
jecxz
mov
mov
in
neg
inc
gs
je
adc
fmull
sub
mov
out
mov
fs
in
in
mov
ss
mov
and
inc
enter
shr
lods
pop
neg
dec
xor
je
inc
clc
jne
jbe
sbb
pushf
cmp
test
pushf
insb
je
in
out
sub
mov
cwtl
in
movsb
jl
push
lods
fstps
xchg
mov
mov
push
in
fucomi
addr16
imul
shrb
ja
jo
fcompl
dec
outsl
insl
sub
jne
repz
push
mov
adc
popl
aam
dec
lock
jl
stc
adc
enter
cmp
idivl
testl
bound
push
jno
jbe
sub
xchg
loop
lods
jl
jmp
xor
push
in
incb
arpl
pushf
xchg
and
push
arpl
mov
lcall
repnz
mov
out
loope
sahf
mov
pushf
push
sub
mov
mov
popf
or
sahf
icebp
out
or
popf
negl
cli
mov
int3
push
orl
mov
ljmp
jne
leave
inc
pop
clc
cmc
xchg
data16
add
mov
outsb
inc
lock
add
lcall
add
into
clc
fcoml
dec
sbb
inc
bound
or
sbb
xchg
mov
jge
dec
lret
add
push
mov
jmp
lock
fmuls
jnp
arpl
es
stc
cmp
push
andl
dec
cmp
lcall
lret
mov
shlb
push
loope
sub
out
inc
dec
cmp
arpl
imull
xchg
xchg
imul
call
cmpb
shlb
std
das
in
xor
inc
cmp
mov
hlt
push
mov
inc
mov
jmp
enter
dec
test
jl
adc
pushf
fcomi
nop
hlt
ret
sbbl
inc
test
mov
das
lods
fwait
mov
add
xor
pop
cmp
lods
aad
cmpsb
loopne
mov
cmpsl
xchg
mov
lret
add
lock
stc
ds
and
sub
xor
sahf
mov
jne
shlb
iret
movb
inc
movsl
mov
lret
jecxz
cmp
dec
lock
ds
inc
pop
test
popf
sbb
push
fsubs
mov
outsl
mov
std
or
or
popf
ds
int
dec
pop
push
rcr
and
mov
xor
mov
std
fwait
mov
pop
adcl
push
jp
test
or
pop
lea
jp
out
push
dec
loope
lock
jns
xchg
test
lahf
lock
mov
jo
ja
ja
mov
fidivrs
push
gs
in
popf
dec
inc
add
lret
enter
into
stos
inc
push
mov
shlb
pop
pop
iret
or
xor
loope
cmp
out
scas
jmp
xor
jl
rorl
dec
mov
dec
jp
mov
or
aam
stos
xor
cmp
cmp
stos
xor
add
xor
and
int
push
leave
and
mov
movhps
popf
adc
pop
mov
shlb
mov
lret
inc
or
mov
in
out
mov
jbe
pop
lods
dec
cmp
shlb
dec
sbb
cmp
imulb
inc
pop
in
add
mov
test
dec
loopne
xor
cwtl
ret
lods
icebp
pop
xor
or
out
out
push
sbb
popa
sbb
movb
jbe
je
stos
sub
in
ja
fstpt
inc
lods
mov
and
sub
mov
aad
adc
fdivrl
popf
add
jo
sub
inc
in
in
mov
mov
mov
sub
daa
mov
xchg
subb
push
pop
test
push
or
inc
aad
sub
xlat
fisttps
clc
jmp
mov
daa
jnp
int
inc
dec
pop
mov
inc
rclb
xchg
sub
mov
adc
jmp
jmp
adc
and
loopne
cld
or
add
lea
adc
cld
fsts
inc
add
shlb
adc
sub
nop
mov
add
test
mov
icebp
nop
mov
sahf
cmp
mov
mov
aaa
mov
xchg
push
dec
and
imul
lahf
mov
push
and
mov
sub
xchg
dec
adc
cmpsl
mov
cmp
mov
sbb
fiadds
pusha
jle
mov
pusha
push
mov
and
sbb
adc
xchg
outsl
les
in
bound
stos
pop
movsb
shrb
addb
negb
mov
push
mov
outsl
dec
or
cmp
das
and
dec
mov
jl
mov
push
push
cmp
dec
sbb
fsts
scas
xchg
push
gs
mov
imul
xor
jo
push
fwait
pop
xor
adc
insb
cmp
lods
pop
dec
sub
mov
loop
rolb
lret
mov
sti
push
inc
loope
inc
xchg
lretw
xchg
jmp
shll
mov
dec
ret
mov
mov
data16
test
je
test
shrb
or
xor
sarl
popa
cmp
jle
pop
int3
mov
lret
sub
fcmovnb
xchg
xchg
mov
ret
cmp
xchg
movlps
push
ficoml
loopne
pop
pop
pop
mov
xchg
sbb
and
jl
mov
js
jg
shl
inc
jbe
sbb
fstpl
xchg
xchg
cli
xchg
pop
jmp
jge
sub
sahf
movsb
cmp
clc
insb
sub
xchg
out
sarb
ljmp
lahf
sbb
jmp
xor
dec
and
cmpsb
push
inc
sbb
dec
lret
xchg
das
hlt
fsubrs
cmp
pushf
push
sbb
cmpsb
hlt
inc
lds
in
jg
sti
pop
aaa
pop
push
shll
std
add
adc
mov
add
sarb
xorb
cmp
push
ret
mov
sbb
cmp
sub
lods
decl
arpl
sub
fldt
jmp
js
movsl
xchg
mov
dec
jnp
dec
stos
jge
fildl
lret
mov
push
notb
push
xchg
js
scas
jns
jp
fsubrs
xchg
xlat
jbe
jmp
rol
cmpsl
int
rclb
cwtl
bound
adc
popf
addb
xor
stos
xor
xor
jg
insb
popf
scas
sbb
call
std
mov
int3
fidivl
jmp
shlb
stos
or
int3
sahf
mov
es
out
inc
in
cmp
rol
cmpsl
test
sbb
filds
cmp
outsb
pop
mov
call
inc
push
adc
sbb
mov
dec
or
pop
xchg
cmc
xchg
pop
mov
lods
xor
fstps
stos
jno
push
out
les
and
idiv
enter
dec
and
leave
dec
rclb
lods
push
leave
jbe
or
and
dec
in
pop
xorl
inc
mov
and
inc
and
mov
jg
fmul
xchg
jecxz
push
push
adc
push
xchg
xchg
movsb
or
pushl
push
inc
out
lahf
xchg
mov
insb
in
sti
mov
mov
daa
out
loop
je
daa
les
dec
or
inc
xor
push
rclb
lahf
sub
stos
mov
imul
jmp
das
mov
cmp
mov
pop
andb
insl
mov
mov
rorb
pop
or
or
inc
pop
jge
fldt
pop
stc
cmp
add
dec
cmc
int
mov
fstp
out
shlb
int
lcall
cld
imul
mov
pop
xor
popf
jno
sub
mov
fmul
mov
push
fdivs
sbb
cs
mov
mov
xchg
inc
xlat
add
shrl
inc
pop
jg
cli
xor
lds
ficomps
mov
mov
std
lcall
push
data16
mov
jae
fstl
adc
add
cmp
and
xor
pop
pop
shlb
sub
mov
sahf
mov
xchg
xchg
mov
in
lret
addl
cmp
mov
inc
mov
mov
scas
test
outsl
cmpsl
mov
xchg
mov
pop
pop
pop
std
mov
push
repnz
stc
mov
out
mov
rcrb
add
dec
insb
loopne
lock
mov
fwait
add
mov
cmpsl
movsb
stos
hlt
sbb
cld
movsb
fdivp
sarb
aas
sbb
out
or
insl
cmpsl
notl
push
push
ss
inc
orb
test
aas
jns
in
fsubrs
sub
arpl
neg
sub
jno
adc
pminsw
jl
jb
mov
jp
cltd
sub
ss
xor
in
in
inc
pop
xchg
mov
test
sub
std
fcoml
mov
pop
and
cld
cwtl
adc
jb
rcrb
iret
out
jecxz
push
lret
push
rcl
add
or
jno
cltd
push
lea
xchg
xchg
aas
outsl
lods
xchg
cmc
insl
adc
popf
mov
push
lea
inc
pop
sbb
push
cmpsb
inc
rorb
add
adc
pop
cmp
nop
adc
pushf
shll
std
pop
in
icebp
int
sbb
push
in
jmp
mov
jb
and
cmpsb
lahf
sub
inc
cmp
and
push
dec
fs
out
jbe
call
add
jns
ss
cmp
and
adc
pop
jae
iret
sbb
mulb
mov
adc
repnz
push
out
inc
jmp
dec
fsub
sti
add
mov
jb
push
sbb
int
or
fwait
test
cld
aam
push
in
lods
sub
sahf
in
int
aad
ljmp
lock
pushf
dec
add
shl
add
mov
and
in
lahf
stos
clc
iret
nop
divl
pop
mov
test
mov
add
cmp
adc
pop
xor
push
adc
mov
setne
ret
lds
xchg
loop
jo
cltd
cld
fldl
cwtl
in
dec
mov
ja
nop
mov
loop
dec
out
xchg
mov
xchg
mov
lock
shll
aam
adc
scas
repz
xlat
je
lahf
out
imul
ss
mov
pop
cld
sub
jae
inc
iret
pusha
mov
daa
clc
cltd
cwtl
fdiv
inc
lods
inc
aam
mov
add
jmp
cltd
mov
pcmpgtb
cmp
lahf
into
in
addb
xchg
mov
cmp
fcom
lods
jno
cmp
rcrl
movsb
cs
lods
enter
jle
pop
push
fbstp
test
dec
dec
adc
cmp
dec
std
sbb
dec
jo
mov
jno
lret
push
movsb
mov
pop
insl
push
add
add
mov
xlat
mov
jnp
in
test
pushf
neg
push
cs
and
test
test
daa
jmp
cmpsb
stos
cmp
cmpb
sbb
lea
das
lret
leave
loop
pusha
push
stos
or
xor
jns
ss
leave
jno
cmp
pop
aad
jge
pop
and
adc
adc
or
sarb
or
mov
jge
jbe
xchg
aad
xor
popf
mov
test
add
or
in
dec
out
ret
aad
push
push
shrl
clc
cmpsl
push
mov
fdivr
jne
data16
mov
setp
or
sbb
lods
popl
cld
aad
addr16
mov
mov
shlb
inc
xlat
call
add
jnp
pop
mov
push
lahf
subb
popf
imul
clc
cmpsl
sbb
push
daa
scas
lods
js
mov
and
lcall
sub
aas
jbe
dec
out
loopne
inc
icebp
mov
xor
lods
jns
sbb
call
pop
mov
fdivrs
out
mov
mov
sub
cpuid
out
xor
cmp
cltd
sahf
pop
or
adc
ja
insl
add
dec
je
ret
lea
lock
ror
mov
movsl
xchg
push
adc
out
daa
inc
mov
pop
push
mov
pop
and
call
clc
dec
out
mov
scas
add
sbb
cwtl
cs
shr
cmpsb
pushf
fbstp
in
cli
inc
je
clc
pop
rorb
mov
add
les
icebp
sub
int3
xchg
mov
lahf
test
xor
jecxz
in
push
mov
inc
jne
imul
pop
orl
mov
cld
lret
pop
int3
movsl
cmp
jae
cmp
push
cwtl
outsl
and
popf
jge
push
jb
jnp
div
or
cs
adc
cmp
loope
out
xor
fwait
mov
fdivrs
fwait
inc
icebp
cmc
inc
pop
hlt
lds
hlt
fstpl
icebp
imull
adc
test
jge
outsb
mov
inc
xor
insb
mov
sub
pop
fiadds
decl
or
leave
in
xchg
in
scas
mov
lock
pushf
movl
cs
adc
les
xor
mov
inc
pop
outsb
lods
lahf
pop
or
or
mov
cmp
enter
sub
mov
cmp
stos
push
jmp
leave
arpl
in
mov
pop
adc
pop
insl
pop
call
cmp
or
jmp
pop
pop
dec
add
scas
loopne
or
fsubrl
xchg
or
or
mov
mov
jae
cmpb
sbbl
push
sahf
push
testl
aam
xor
sbb
addl
imul
sub
cmpsb
jmp
sub
mov
hlt
xor
das
push
xchg
bnd
fstl
test
lahf
jg
adc
or
imul
push
mov
je
mov
pop
adc
test
je
cli
pop
hlt
or
stos
sbb
call
into
in
xorb
jecxz
jp
cmp
std
cmc
add
aas
fnstcw
adc
imul
pop
hlt
int3
xchg
push
mov
sbb
jp
cwtl
xchg
xchg
sub
sbb
push
fmul
repnz
shlb
adc
lret
in
mov
inc
mov
inc
and
data16
stos
adc
and
cmpsb
cwtl
sti
loope
jo
stos
mov
cli
mov
mov
movsb
or
addr16
mov
jnp
mov
sahf
pop
sub
dec
lods
push
int
mov
adc
daa
loop
mov
lcall
fidivrl
mov
daa
pop
in
mov
cmpsl
popa
popf
mov
xchg
test
adc
mov
sti
inc
lahf
nop
das
shrl
lret
jns
add
cmpsl
test
mov
mov
mov
mov
out
negb
cltd
and
mov
loopne
mov
jmp
movsl
lds
pop
mov
jmp
cs
mov
scas
lods
push
dec
popf
or
test
push
pop
push
push
mov
or
mov
inc
add
mov
int3
cmp
out
inc
adc
imul
inc
mov
dec
sub
sbb
imul
adc
mov
pop
push
out
or
aad
cltd
dec
sti
into
cmp
pop
fcoml
xor
icebp
daa
shrl
lea
push
pop
xor
inc
pop
scas
xchg
je
push
sbb
sub
sub
clc
clc
lcall
dec
inc
lock
adc
sbb
out
mov
lods
or
ffreep
mov
into
cmpsb
inc
sbb
mov
xor
clc
test
cmc
sbbl
mov
xchg
mov
mov
xchg
push
scas
sub
ja
inc
mov
sub
sub
mov
mov
repz
add
clc
fisttpll
dec
jmp
mov
adc
jbe
es
aam
jp
adc
pushf
dec
adc
mov
shll
or
push
iret
xor
mov
xchg
lods
out
pop
das
test
push
sbb
fsts
jne
lret
pushf
mov
pusha
dec
add
mov
cwtl
outsl
outsb
imul
and
out
inc
xchg
rcrb
shrb
mov
dec
sub
movb
pop
dec
jl
or
pop
pop
in
add
insb
mov
and
pop
pop
and
cmc
xchg
push
fcoms
cmp
scas
mov
add
push
jmp
lock
cmp
cmp
adc
adc
shrl
data16
mov
mov
movups
pop
shrb
pop
mov
dec
sub
cwtl
ds
stos
push
imul
fdivrl
rorb
add
sub
rorl
insb
inc
and
mov
mov
cmpsl
adc
aad
dec
in
or
mov
test
xor
mov
fidivrl
mov
jp
pop
repz
sub
or
push
mov
pop
pop
pop
outsb
push
mov
adc
xor
in
pop
add
insl
mov
bnd
lock
push
lahf
data16
lret
icebp
std
cwtl
stc
mov
pop
and
mov
lods
push
mov
push
xorb
cmp
std
cmc
mov
mov
or
loopne
jno
loope
ss
outsl
es
dec
jno
fisubs
dec
gs
std
mov
pop
stc
jmp
pop
adc
pop
inc
and
ret
lcall
add
push
imul
xchg
xchg
outsl
add
dec
dec
jmp
cmp
pop
mov
out
gs
test
mov
popa
cld
imul
push
mov
scas
into
fcomps
cmp
lods
mov
idiv
xchg
es
push
andb
fyl2xp1
fs
out
pop
pop
mov
dec
xchg
insb
push
cmp
or
lods
addr16
mov
mov
mov
out
fiaddl
pushf
sub
sbb
pushf
int
data16
cwtl
fsub
popa
and
xor
clc
mov
out
add
mov
icebp
call
xchg
inc
xchg
sub
mov
sub
mov
out
add
pop
shrb
xchg
mov
je
mov
aas
sbb
sub
insl
sub
stc
cmp
pop
mov
add
dec
insb
es
sub
das
push
test
psubb
jnp
loop
out
mov
les
mov
adc
cmc
lcall
test
popa
pop
scas
les
lds
and
jnp
mov
rol
inc
addl
ret
xchg
sub
cmc
pushf
movsb
aas
or
inc
or
movsl
idivl
dec
inc
popf
loop
mov
jp
mov
mov
adc
pop
push
pop
push
rorl
popa
test
int3
nop
sarl
loopne
sub
sub
mov
push
adc
sub
or
push
rcll
push
ret
les
imul
pop
ss
inc
insb
and
repnz
scas
mov
mov
cmpsb
jge
or
lea
inc
dec
mov
adc
jl
aas
mov
jns
jp
cmpsl
adc
add
ja
mov
mov
xor
cmpsl
mov
into
ss
aad
cmpsl
shr
lcall
adc
movb
and
add
imul
xchg
cmp
cmpb
in
popf
and
mov
mov
pop
test
lds
xchg
dec
fdivp
lahf
ds
mov
mov
aas
lahf
adcb
mov
adc
xor
dec
cmpsl
jmp
aad
sub
repnz
int3
es
adc
in
outsb
sub
mov
or
push
cld
int3
ret
sub
or
lods
jmp
mov
aam
leave
and
push
push
icebp
loope
mov
notb
pusha
mov
jl
or
adc
testl
imul
jns
jle
dec
or
fnstcw
sub
cli
mov
mov
fcomp
orb
xor
sbb
mov
inc
adc
dec
xor
sbb
fld
loope
fsubl
hlt
les
not
add
xchg
jne
pop
cs
and
mov
mov
lods
fwait
and
fdivs
inc
mov
lahf
jno
je
mov
cmpsl
sarb
pop
negb
sbb
out
sti
pusha
mov
pop
aaa
out
outsb
out
mov
stc
aaa
pop
add
pop
aad
pop
imul
and
inc
xchg
inc
mov
stc
pop
movsb
fdivr
dec
sbb
adc
mov
loope
test
sbb
gs
push
pop
in
in
dec
pop
int3
stc
aaa
jae
sbb
mov
and
lods
mov
inc
lods
cmc
inc
push
mov
xchg
or
nop
insb
cmp
and
cmp
dec
sbb
sub
jns
lcall
xor
fimull
mov
mov
loopne
xchg
addr16
fnstsw
mov
mov
xor
idivl
pop
pop
call
sarb
out
push
movsb
sbb
inc
inc
jns
popa
je
loop
pop
inc
xor
push
push
push
sahf
repnz
in
cmp
jo
sub
xchg
pushf
leave
adc
loopne
pop
fcmovnbe
and
push
jp
mov
call
call
and
gs
in
repz
jne
out
rol
mov
out
arpl
ds
loope
insb
and
xor
xor
mov
sub
ss
imul
bound
js
test
call
jle
pop
nop
xchg
inc
icebp
adc
and
mov
pop
shrb
xor
dec
or
mov
xor
and
fxch
data16
xchg
fsubrl
push
cld
imul
inc
shl
test
xchg
mov
cltd
mov
sub
fdivr
cwtl
push
std
cmpsl
pushf
into
dec
jo
cltd
pop
dec
cld
pop
dec
add
cmp
adc
shl
fnstsw
rorl
sub
shrb
jne
fisttpll
shlb
mov
roll
xor
or
adc
rcll
mov
xorb
mov
sbb
and
mov
mov
inc
sub
out
pop
repnz
leave
outsb
push
rclb
mov
mov
pop
xor
ret
add
cltd
mov
add
push
pop
jg
lret
mov
and
sbb
xchg
adcb
mov
xor
insl
jno
mov
aaa
pop
push
pop
mov
cmp
jnp
pop
in
push
rorb
add
dec
pusha
stc
mov
dec
jmp
jnp
mov
mov
adc
mov
lock
les
stc
jne
aam
add
add
pop
mov
pop
mov
call
pop
add
clc
loope
inc
add
xor
loop
data16
mov
jecxz
mov
xor
rcll
incl
data16
sub
icebp
cwtl
pushf
pop
ja
push
inc
out
jle
mov
out
xor
jg
and
dec
sbb
push
adc
fwait
mov
and
jp
loopne
add
bound
rorb
xor
add
sbb
and
movsl
loopne
and
sbb
int3
in
lods
shr
mov
loopw
and
mov
je
ficoms
xchg
iret
pusha
push
xchg
cmpsb
add
lods
test
cwtl
inc
mov
pusha
push
insb
shrl
jmp
push
mov
pop
sbb
cli
ja
sbbl
jmp
mov
incb
pop
mov
mov
push
rolb
and
roll
add
stos
fistpll
mov
jg
and
inc
sbb
cld
mov
imul
cli
add
mov
leave
and
jb
fiaddl
adcl
cld
nop
dec
inc
cmp
add
roll
dec
mov
cwtl
dec
outsl
shrl
dec
add
inc
lods
dec
insl
cli
xchg
std
push
sar
pop
xchg
enter
ja
aaa
and
jne
mov
mov
gs
stc
scas
jle
sahf
add
or
popf
rolb
das
lds
sub
inc
and
add
dec
mov
add
and
and
and
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
push
std
add
push
icebp
add
push
in
push
jmp
add
push
roll
push
aad
push
flds
push
popf
add
push
xchg
add
push
test
push
mov
push
lods
add
push
mov
add
push
mov
add
push
xor
push
and
add
push
or
add
push
adc
add
push
pop
add
push
push
add
push
inc
add
push
dec
add
push
insl
add
push
popa
add
push
jne
push
jns
sbb
jno
sbb
imul
sbb
push
add
sbb
sbb
add
sbb
or
sbb
and
sbb
cmp
sbb
mov
sbb
test
add
sbb
xchg
add
sbb
fldl
sbb
lds
sbb
in
add
sbb
cmc
add
sbb
int3
lock
push
mov
movsb
mov
movsl
mov
aas
sbb
outsl
mov
addb
jl
or
pop
aad
jo
or
and
stc
jle
xchg
fucom
jo
std
les
aam
fdivrl
aad
dec
shll
in
cltd
scas
aad
les
xor
bound
lds
fstl
add
sub
mov
out
call
dec
fiadds
fldcw
sbb
xchg
loopnew
cld
cltd
mov
xlat
pop
mov
cmp
outsb
addr16
leave
cmp
in
arpl
inc
mov
mov
fisubl
dec
xchg
and
or
ret
xchg
mov
add
outsl
rorl
mov
out
push
adc
mov
int
mov
mov
sbb
std
add
out
mov
mov
cmc
mov
repz
out
fisttpll
sti
ljmp
cltd
std
insb
or
out
scas
mov
testb
clc
sub
bound
mov
imul
fdivrs
nop
jmp
xor
mov
and
lods
and
jecxz
sub
popf
xchg
push
ljmp
frstor
adc
push
lods
lret
add
and
pusha
push
mov
loop
add
cmpsl
xchg
scas
das
adc
mov
or
movl
xor
jnp
or
dec
mov
dec
cs
xor
mov
xchg
leave
mov
test
decl
icebp
fdivrl
mov
orb
sub
adc
cld
push
jae
pop
xchg
outsl
popa
lods
xchg
sub
xor
in
fdiv
jle
and
xchg
cmpsb
or
ss
jmp
push
mov
test
jno
and
loop
lds
cmp
sub
imul
jle
mov
shrl
nop
jg
inc
clc
jg
xchg
add
repz
sub
cli
push
fildll
lods
fdivl
ret
out
dec
mul
mov
sub
lods
testb
inc
xor
push
pop
ret
ds
inc
test
push
insb
ja
icebp
imul
xor
ret
popa
out
inc
and
xchg
dec
sbb
push
mov
pop
jg
mov
add
dec
call
xchg
lret
enter
push
cltd
lret
lea
pop
lods
ja
in
jp
sbb
ja
int
call
xchg
push
xchg
icebp
pop
pop
inc
and
cltd
fucomi
loopne
jmp
add
inc
in
inc
ret
lret
cmp
dec
insl
mov
dec
fsub
xor
data16
jmp
sub
mov
pop
xchg
and
add
jbe
int3
dec
sub
mov
scas
aas
mov
jns
loope
nop
and
shrb
int
mov
jg
mov
add
push
dec
adc
lock
test
sahf
mov
loopne
cmpsl
or
push
js
out
add
int
xor
ss
sbb
out
lahf
pop
into
or
mov
in
jmp
and
repnz
aad
mov
dec
bound
aam
pop
lds
cwtl
out
fsubs
fimuls
mov
push
jmp
mov
leave
adc
mov
shufps
jae
cli
pop
pop
lret
xchg
xor
test
cli
ret
insb
aaa
ret
ficompl
es
mov
aad
dec
movsl
sahf
aam
popa
popa
pop
scas
xor
mov
movsb
je
stos
push
xchg
fsubr
cltd
lods
cmpsb
cmp
les
out
mov
ds
lock
fiaddl
xchg
or
push
outsb
sub
leave
adcb
or
icebp
scas
pop
inc
in
xchg
fcmovnb
push
inc
sahf
dec
es
mov
cwtl
and
mov
into
xchg
test
insl
fs
jae
jg
pop
int3
es
xor
aaa
pop
mov
mul
addr16
and
pushf
loope
lock
adc
lret
push
pop
daa
lcall
pop
add
push
test
inc
xor
movsl
mulb
lods
add
popl
inc
xor
push
pushf
push
mov
pusha
fsubl
sub
dec
jl
pop
mov
or
mov
jne
cmp
mov
out
pushl
mov
cmp
fwait
inc
mov
jae
in
jo
int
addr16
inc
pop
lea
inc
mov
in
mov
lds
decb
push
sbb
xchg
scas
call
xchg
mov
lahf
sub
mov
testl
cmp
xchg
mov
int
call
movsl
or
push
in
nop
movsl
jns
xorl
movsl
mov
adc
dec
mov
aas
aad
mov
sbb
mov
lcall
shll
lea
out
dec
gs
mov
push
out
sbb
int3
adc
rcll
mov
leave
cmp
add
sbb
add
push
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
lock
mov
mov
xchg
xchg
addb
pop
sbb
repnz
in
and
rorb
fcomp
popa
ret
je
mov
or
ljmp
bound
or
popa
xor
popa
add
mov
lcall
loope
aaa
test
push
daa
imul
movsb
mov
or
mov
mov
test
decl
and
into
fstl
pop
xorb
ja
insb
cwtl
push
adc
insb
ds
nop
pop
add
adc
out
lds
adc
popf
mov
dec
stc
in
inc
loope
int3
popa
xchg
and
push
cmp
lds
xchg
dec
jne
mov
mov
imul
test
popa
and
add
loop
loop
mov
pop
cmp
add
faddp
pop
imul
pop
inc
dec
push
les
jne
add
subl
xchg
and
inc
fwait
into
insb
mov
and
dec
xor
outsb
sub
iret
cmpsl
xchg
sbb
mov
mov
add
pop
daa
icebp
test
test
mov
adc
jae
repz
xor
popa
mov
dec
rorb
in
and
add
lret
stos
mov
push
mov
sbb
pop
ss
lret
jmp
stc
leave
dec
fwait
loope
sbb
jbe
cli
mov
fisubrs
xchg
pop
cmpsb
sbb
push
mov
sub
adc
mov
fildl
flds
arpl
lahf
bound
cmp
cmp
enter
mov
sarl
movl
loope
insb
pop
lds
rorb
sub
lock
ret
lods
shlb
jbe
aam
add
mov
enter
mov
or
pop
pop
inc
ret
sbb
cmpsb
adc
adc
xor
movsb
insl
cmp
push
mov
push
sub
adc
cmp
sbb
cmp
push
addr16
scas
jge
rol
adc
xchg
mov
xor
adc
jl
lods
pop
pop
bound
popa
adc
jo
sub
popl
pushf
out
xor
test
sarb
cltd
rol
pop
gs
adc
cmpsl
pop
cli
aaa
subb
outsb
movsl
or
loop
push
mov
fists
push
rcll
loop
mov
jno
ret
cmp
call
repnz
insb
aad
add
xor
lret
push
mov
lds
pop
push
fisubl
sbb
adc
aad
jge
fsub
outsb
xor
dec
mov
into
sub
mov
jl
xor
push
pusha
inc
and
mov
notb
scas
fnstcw
jmp
bnd
fs
int
mov
mov
fcomps
mov
mov
sbb
jmp
mov
mov
push
add
in
mov
dec
call
jp
mov
inc
mov
sub
xorl
aad
lret
outsl
leave
fisttps
push
jns
cmp
call
pop
int
mov
loopne
mov
pushf
xchg
mov
xor
ss
out
aam
stos
xchg
bswap
and
out
pusha
adc
lcall
jle
imul
push
sbb
into
adc
dec
push
vandps
adc
pusha
lahf
dec
pop
pop
cmp
in
sub
arpl
aaa
stos
mov
inc
jns
xor
ss
mov
loope
pop
addb
xor
or
or
ret
rcrb
mov
stos
rcll
sub
pushf
mov
dec
mov
aad
cmpsl
inc
xor
shll
int
outsb
mov
es
sub
js
fmull
push
pop
sub
sbb
stos
inc
das
mov
jb
jae
mov
sbb
fldenv
int
insl
test
out
lret
push
out
cmpsb
xorl
cs
mov
add
mov
add
push
mov
cmc
or
das
loop
mov
out
mov
jno
cs
jnp
fdivl
sub
add
sbb
outsb
xlat
pop
mulb
xchg
daa
sbb
pop
ret
pop
test
pop
aas
mov
add
in
mov
inc
mov
out
repz
loope
ret
arpl
or
scas
mov
push
ret
lods
sti
js,pt
jg
jne
fstps
les
enter
adc
iret
cmp
add
js
or
mov
cld
lds
sbb
shr
xor
enter
sub
xor
dec
push
or
dec
mov
mov
imul
push
mov
dec
cli
aam
imul
sbb
sub
rorb
mov
dec
xchg
cs
aad
aad
lcall
iret
scas
out
adc
cwtl
das
jno
xor
and
lcall
jp
fistpll
data16
rol
dec
fldt
pop
test
iret
movsb
inc
clc
mov
sbb
enter
fdivrl
sub
mov
cmpsl
cli
cltd
scas
add
imul
jge
loopne
imul
cmp
test
pop
ret
cmp
aas
rcll
daa
xchg
pop
jmp
jo
daa
xchg
cwtl
adc
out
stc
or
inc
loopne
lret
push
xlat
scas
jb
cmp
sarl
mov
repz
mov
or
jns
frstor
pop
aaa
mov
leave
adc
jbe
clc
mov
cli
push
sbb
scas
push
jle
fstl
repnz
pop
cli
int
sub
mov
int3
lea
enter
jb
and
pop
adc
shll
cmp
jmp
sahf
push
cmc
dec
mov
mov
adc
mov
rol
mov
jp
lock
sub
cmp
mov
inc
mov
mov
cmp
add
insb
aaa
daa
jno
daa
adc
xor
hlt
scas
and
mov
imul
sub
mov
cmp
icebp
cmc
jmp
stc
inc
inc
int3
stos
scas
mov
and
fcoml
or
jmp
adc
rorl
sbb
movsl
outsl
or
pop
cmp
repz
lret
out
mov
test
jns
xor
dec
and
cmc
aad
xor
push
or
cmpsl
inc
adc
dec
pop
mov
push
loop,pn
fcomip
fs
fwait
arpl
inc
cmp
cmp
pop
pop
xchg
or
pop
scas
mov
rorl
pusha
imul
jmp
fstps
and
lahf
cld
lret
mov
push
daa
ja
shll
pop
sbb
or
pushl
mov
test
shl
adc
loopne
xchg
fnstsw
cmpsl
pop
xor
stc
ds
pop
clc
dec
fptan
sbb
pop
mulb
push
sub
insl
push
fucomi
sub
ljmp
cmpsl
add
or
mov
adc
jns
add
or
or
das
jbe
pusha
sbb
cmp
mov
fwait
movsl
jle
push
add
repz
iret
sbb
cwtl
loopne
pop
pop
fidivrs
sbb
inc
fadd
ds
in
iret
addr16
ret
pop
jne
jns
push
addb
test
pop
mov
dec
mov
ljmp
push
adc
popa
adc
lcall
cmc
in
jne
outsb
add
mov
and
dec
fsubr
imul
enter
dec
jbe
or
add
ret
hlt
mov
add
cmpsl
sub
xchg
aas
into
push
pop
dec
sub
es
cltd
insb
out
mov
sbbb
jmp
arpl
jl
bound
adc
mov
xchg
lods
cmp
push
pop
mov
sub
pop
add
mov
movsb
nop
dec
cltd
cmp
add
rorl
ret
jbe
fld
push
lret
add
and
inc
ret
sbb
cmp
dec
push
loope
dec
push
call
bound
fadd
scas
cmp
xor
bound
insl
stos
and
dec
xchg
mov
sub
or
pop
iret
mov
jno
xor
data16
inc
mov
icebp
cmp
lahf
jl
bound
mov
wrmsr
popf
cmp
sbb
jns
ret
xor
popf
mov
aas
testb
pop
mov
lods
rcl
aam
frstor
xchg
pop
add
dec
fadds
push
mov
test
aad
ja
dec
loope
or
ret
call
out
and
les
test
cs
mov
push
and
lock
jb
mov
adc
adc
xor
mov
xchg
scas
jne
push
mov
insl
pushf
loop
dec
jg
xchg
divl
or
dec
or
ds
mov
hlt
inc
sti
je
inc
mov
and
sysret
sahf
or
popa
cmpsl
ret
mov
pusha
stos
sahf
imul
std
int3
inc
xchg
loopne
and
cmpsb
das
jae
lds
enter
scas
ja
out
pop
daa
pop
test
jp
loopne
xor
sbb
daa
test
or
sub
jns
in
cmp
addl
jns
les
cmp
xor
pop
int
repnz
xchg
repz
xor
pop
imul
pop
push
sbb
pop
sbb
inc
inc
ret
repnz
cmp
in
lret
fmuls
push
ror
popf
rol
hlt
sarl
jno
cltd
in
mov
mov
test
inc
outsb
pop
dec
xor
test
mov
rcr
sbb
pop
mov
ret
hlt
ss
popa
cmp
fcoms
stos
dec
leave
rol
mov
mov
inc
jle
outsb
int3
loop
jge
push
or
pop
mov
push
call
push
popa
sbb
mov
cmpsb
mov
jg
cmpsb
std
leave
loopne
pop
mov
lods
lock
push
pop
jp
dec
mov
xor
fcomps
inc
xchg
sbb
imul
fsubrl
xchg
std
shrl
js
sub
mov
sbb
cwtl
lea
pushf
jo
mov
add
push
ss
movsl
push
or
jnp
sbb
adcb
mov
iret
nop
xor
outsb
sbb
outsl
push
pop
or
pop
cmc
inc
mov
cwtl
int
cltd
movq
movl
jb
mov
aaa
jnp
pop
fs
xchg
push
and
in
cli
fimuls
mull
lea
popa
or
or
lea
in
mov
mov
or
repz
lods
push
out
mov
mov
insb
xor
xor
or
push
xor
push
push
imul
sub
testb
ss
addb
dec
aaa
in
jecxz
daa
fcoms
pop
rolb
pop
les
int
xchg
fstp
sarl
testl
sbb
and
pusha
jbe
push
push
lcall
xor
and
lods
aam
adc
dec
aas
cli
bound
mov
test
ja
xchg
aas
or
pop
sar
dec
shl
cmp
call
or
adc
shll
popf
dec
xchg
leave
popf
icebp
icebp
ljmp
xchg
cltd
push
jge
cmc
mov
call
dec
mov
adc
or
in
adc
adc
jecxz
fxam
aad
mov
les
fsubs
mov
pop
das
or
mov
addl
add
das
popf
stos
xor
mov
sub
pop
ret
inc
and
cli
dec
jb,pn
fcomi
jmp
roll
mov
jg
aas
jbe
addr16
cmpsb
pop
add
push
inc
add
push
sub
fs
and
pop
or
dec
std
mov
lock
fnsave
loop
and
lods
into
in
js
leave
repnz
dec
lock
roll
roll
pop
sbb
dec
or
mov
sbb
or
xchg
fnstsw
scas
mov
shl
fcomi
loop
xlat
mov
jno
xchg
mov
mov
xchg
and
add
add
movsb
sub
pop
xchg
fdivs
aam
sbb
cli
mov
sbb
in
nop
xchg
arpl
popf
imul
mov
mov
adc
std
sbb
rcrb
xor
lret
aam
imull
cmp
sbb
outsb
sahf
sbb
push
in
mov
cmp
mov
sub
xor
movsb
call
xchg
cld
xor
xchg
std
add
mov
loop
loop
jle
jecxz
adc
jmp
sbb
lahf
add
ljmp
mov
and
ja
movsb
xchg
xchg
mov
cwtl
addb
mov
cmp
add
dec
mov
pop
or
add
stc
or
daa
icebp
push
sbb
push
inc
mov
sbb
add
movb
ret
mov
jns
push
sbb
fwait
push
fcom
adc
inc
sbb
mov
loope
stc
adc
aam
jg
mov
push
stos
pushf
adc
cli
sub
js
icebp
adc
cmpsl
leave
jbe
lods
cli
gs
lods
or
andl
add
ds
pop
cs
cs
hlt
jae
mov
cld
lahf
inc
push
sbb
outsl
pushf
int3
mov
xor
clc
inc
into
fs
sahf
mov
scas
jae
leave
aas
mov
mov
mov
add
popa
cli
mov
adcb
xor
ljmp
pop
sub
mov
push
fstps
pop
sbb
lds
in
ss
push
mov
popf
bound
faddp
ret
andb
mov
jp
push
cmp
mov
test
nop
cmpsb
mov
lods
add
jl
jbe
sbb
mov
iret
pop
aaa
mov
mov
pop
das
scas
loopne
xor
jmp
xchg
aad
pop
sub
jne
andb
mov
mov
xchg
adc
orl
pmullw
enter
ret
out
xor
jb
in
sti
sbb
mov
hlt
or
cmpsl
in
icebp
mov
scas
jmp
cmp
stos
adc
sub
pop
es
mov
loop
mov
pushf
sbb
mov
jg
pushf
sbb
sarl
mov
test
ret
es
mov
push
lcall
into
js
pop
test
cmp
jbe
and
addl
sub
fisttpll
in
lods
mov
or
test
fwait
jne
imulb
adc
jb
lods
push
arpl
push
jp
push
or
stos
inc
or
jmp
outsb
mov
mov
mov
sahf
jmp
xchg
aaa
push
data16
add
stos
bnd
mov
dec
xchg
adc
mov
divb
fidivl
mov
or
jno
repnz
push
push
cs
mov
mov
ret
out
mov
ret
fnstcw
arpl
popa
std
stos
lock
stos
das
sbb
pop
leave
leave
hlt
jp
test
fildl
jmp
cmp
add
jns
bound
in
fwait
cld
imulb
mov
and
push
in
movsb
popa
hlt
jne
pop
sub
mov
rcl
in
int
stc
fistl
in
cli
jmp
das
pop
lods
mov
cmc
test
out
insl
inc
pop
iret
or
je
fbstp
gs
imulb
adc
test
push
in
pusha
cltd
insb
mov
sub
push
test
xchg
ja
in
je
sbb
ud2
loop
mov
mov
pop
mov
sbb
adc
dec
pop
scas
pop
cwtl
int3
sub
test
inc
xchg
jne
mov
in
pop
in
jge
aad
push
mov
mov
or
rorl
add
fdiv
jmp
jnp
or
dec
pop
xchg
sbb
popf
jno
into
pop
xchg
int
sbb
mov
jmp
daa
subl
ret
call
inc
or
shrl
adc
sub
call
cwtl
xchg
sub
aas
or
pusha
fs
adc
lahf
aam
sub
cwtl
sahf
mov
shr
cmp
movb
sbb
mov
pop
fists
adc
rcl
sub
cmpsl
jmp
inc
aas
mov
fidivs
aaa
mov
jno
aam
add
push
jns
dec
stc
sub
rolb
scas
xor
cmp
ds
pop
xchg
clc
int3
pop
pop
push
sbb
xor
fstps
roll
test
xor
add
lock
xor
adc
ret
dec
ja
fcomps
sub
adc
popa
add
out
jl
shlb
push
popf
popf
ds
and
dec
notl
jbe
and
mov
xchg
mov
fucomi
sbb
xchg
stc
cmp
inc
dec
push
test
xchg
jae
cmp
adc
jecxz
jg
adc
jo
xor
push
stc
lahf
pusha
popf
rcrl
mov
mov
mov
and
test
and
repnz
xor
test
out
movsb
out
jge
loop
dec
cmpsb
fwait
hlt
and
fs
js
scas
gs
addr16
inc
xor
xchg
pop
into
inc
mov
cmp
pop
xchg
mov
js
mov
sarl
arpl
js
sub
mov
insl
fsubs
shrb
aas
pop
push
mov
jnp
xchg
lods
insl
add
mov
ds
out
or
bound
out
mov
jnp
xlat
sbb
pop
dec
cmp
jmp
aas
lds
add
enter
shlb
add
mov
adc
in
mov
js
or
mov
shll
repnz
push
mov
add
lret
cmc
mov
enter
mov
shrl
jb
loope
inc
sub
ss
dec
fistps
sarb
ss
mov
adc
rorb
sub
xor
mov
xchg
pop
xchg
pop
jne
mov
xchg
mov
push
push
subl
sbb
and
sub
scas
mov
sti
jle
repnz
pop
xchg
pop
pusha
mov
adc
std
leave
or
xor
hlt
fcomps
pop
lods
cmpsb
mov
mov
dec
fisubrs
lds
cmpsb
and
pop
jae
lds
jle
out
xchg
xchg
jns
xchg
push
mov
cmc
xchg
nop
shll
jl
in
es
dec
out
pop
adc
leave
daa
mov
pop
jno
stos
inc
test
dec
mov
mov
ret
or
mov
dec
add
cmc
insb
jns
andl
xor
lret
addr16
mov
add
scas
movsl
sarb
bound
fcmove
inc
xchg
xchg
dec
push
jl
push
cli
push
fnstenv
fwait
xchg
hlt
sbb
sbb
xchg
mov
imul
jl,pn
rcrl
shrl
adc
imul
mov
in
into
pop
xchg
enter
xlat
lcall
pop
into
aaa
jl
or
movsb
clc
sarb
lock
cmpsb
mov
pop
sarl
cmp
jns
loopne
mov
jb
xchg
mov
out
lock
mov
ret
or
out
out
into
fdivrl
call
mov
lea
jg
mov
outsl
daa
jmp
add
dec
push
sub
or
or
fs
sub
pop
jle
shl
jl
push
loop
mov
push
popa
add
out
inc
stos
lahf
jno
adcl
adc
shrb
or
and
and
mov
ljmp
into
movsb
ss
lds
push
fsubrl
add
icebp
shlb
jge
sub
xor
pop
mov
daa
mov
fldenv
aaa
inc
pop
mov
add
or
ja
test
pop
xor
jnp
push
arpl
sbb
jbe
adc
xor
sub
das
sbb
in
adc
imulb
sub
push
push
push
loop
ljmp
ds
jo
stos
dec
add
fwait
jp
rcrl
lcall
dec
test
imul
ret
lahf
outsl
fistl
mov
ret
lahf
lahf
pop
inc
cmpsb
out
loope
xchg
gs
rcrl
or
test
jbe
and
push
fldcw
push
imul
loopne
mov
repnz
cwtl
aaa
sub
in
insl
pop
lret
dec
inc
pushf
divl
cld
daa
cs
inc
mov
xchg
shrl
cs
mov
mov
leave
call
out
jge
xlat
sub
mov
mov
ljmp
jle
mov
fimull
inc
fndisi(8087
add
cmpsb
xchg
xor
outsl
aas
push
ret
pop
cmp
mov
sub
sbb
cmp
nop
and
sbb
pusha
stos
mov
push
mov
pusha
dec
das
loopne
mov
ja
jg
xchg
lods
imul
jp
cmp
fwait
mov
cmp
or
ror
dec
mov
dec
inc
sub
xchg
cmp
sbb
lcall
dec
pushf
xchg
outsb
mov
inc
cs
sbb
push
idivb
ret
pushf
cmp
pop
cmpsl
ja
push
in
push
sbb
lret
icebp
pop
jb
xor
fdivrs
mov
xchg
in
and
in
push
addl
daa
repnz
push
push
push
shlb
cmpsb
mov
mov
nop
or
inc
out
inc
cmp
adc
cmpb
cmp
fbld
fisubs
mov
rolb
js
es
insl
in
push
out
mov
mov
nop
enter
aaa
inc
sbb
into
jae
mov
or
lock
jp
stc
mov
dec
inc
cmp
iret
enter
lahf
ret
dec
test
sti
lcall
aas
scas
ljmp
pop
jmp
xor
mov
fucomip
dec
inc
outsl
sub
std
add
enter
enter
fstpl
arpl
adc
jp
mov
outsl
lock
imul
cmp
cmp
mov
insb
push
insl
cmp
sub
xchg
jmp
jb
xor
sbb
mov
in
sub
lret
popa
and
mov
ljmp
inc
lods
test
popa
pop
outsb
mov
pop
sbb
xchg
cmp
ss
test
mov
cld
fistpl
pop
sub
and
fdivrl
adc
in
es
dec
or
call
lds
push
dec
into
pop
jno
pop
sbb
jg
out
incl
dec
push
mov
out
pop
cmpsl
cmp
das
filds
mov
jbe
mov
push
and
les
shrl
mov
sbb
out
aas
mov
xchg
and
jbe
cmp
leave
add
mov
ja
in
aad
mov
or
xchg
fsts
rcl
mov
adc
xor
push
jo
pop
imul
stos
stos
sbb
cmp
pop
imul
dec
jp
mov
loope
nop
fsubrs
cmp
pop
dec
jge
es
cmp
pop
pop
sti
jge
sbb
mov
movsl
xor
inc
jge
mov
mov
pop
popa
std
jnp
in
jno
mov
mov
imul
imul
outsl
mov
sbb
add
imul
popa
pusha
sbb
inc
jmp
int3
xlat
lcall
pop
rcrl
pop
lods
outsl
push
leave
adcl
ja
sub
push
decl
mov
push
adc
insb
loope
pop
shrl
or
or
cmpsl
jp
loope
xor
fldt
dec
jg
inc
sbb
std
ss
orl
sub
or
mov
jae
in
push
mov
gs
cmp
clc
stos
dec
or
movsl
add
addb
pop
xor
jne
inc
adc
cmp
pop
es
dec
aas
orl
sub
inc
xor
pop
mov
jl
cmc
rol
jae
mov
cmp
insl
lret
lret
rcll
insl
popa
cmp
sub
pop
ss
pushf
fldenv
int
in
adc
fwait
imul
test
mov
mov
std
divl
or
mov
shll
mov
or
loope
test
jmp
jae
xor
ror
add
sahf
cs
adcl
xorl
jne
inc
shlb
std
xchg
out
add
mov
arpl
cmc
or
sub
ret
loope
out
lgs
loopne
lds
xchg
arpl
xchg
inc
cmp
and
aam
jle
lods
mov
mov
sub
mov
cmpl
xor
sbb
jmp
data16
xor
fstps
shlb
cmp
aas
test
cwtl
test
icebp
ret
jo
xor
cmp
jl
rclb
sbb
xchg
rol
daa
mov
cwtl
movsl
xor
jo
pop
dec
push
mov
mov
lret
cmpsl
mov
sbb
mov
cmc
push
push
mov
or
mul
mov
sbb
popa
jp
jae
pop
cs
ljmp
loope
xchg
pop
fistpll
das
jno
int3
cmpsl
adc
sbbb
out
cld
mov
out
mov
mov
pop
jae
cmp
add
nop
sub
test
movsb
outsb
movsb
adc
xchg
cli
lods
inc
rcll
and
and
pop
aad
push
out
cs
adc
fincstp
push
shl
shll
push
mov
pop
sbb
push
in
inc
sub
js
cmpb
push
cmp
adc
inc
outsb
push
xchg
mov
jl
cmp
mov
arpl
cmc
xor
ret
jnp
lods
add
shlb
cmpl
jp
xor
flds
loope
xchg
iret
dec
aas
add
scas
test
sub
gs
insl
xchg
aas
outsb
pop
adc
xchg
cmp
push
adc
fbstp
flds
out
inc
inc
or
jl
pusha
int
int3
aas
std
insb
push
out
aam
popf
lcall
add
mov
lods
and
dec
inc
lods
out
xchg
std
fwait
lock
jbe
push
cmpsl
inc
fnstsw
inc
push
movsl
into
cli
mov
cmp
lret
and
mov
mov
sbb
fildl
mov
push
dec
pop
and
mov
inc
push
js
mov
mov
cmp
sbb
push
repnz
push
idivl
cmc
sbbl
dec
aaa
imul
testb
outsl
lock
mov
push
hlt
adc
inc
test
int
scas
pop
in
push
hlt
push
loopne
push
aam
xchg
sbb
pop
rep
negb
push
and
and
in
lock
imul
scas
in
mov
addl
cmc
aad
test
das
xor
repnz
std
out
lret
pop
xchg
sar
data16
or
cmpsb
mov
add
inc
adc
push
test
ret
scas
in
inc
imul
xchg
jbe
ja
lds
push
jmp
in
pushf
test
or
push
xor
mov
inc
int
mov
mov
adc
outsb
fbstp
jg
or
aam
rol
loope
lret
mov
fs
popf
idivb
lods
add
fistpll
mov
and
add
lret
imull
lret
sarl
push
xor
lret
sub
je
out
adc
and
ret
iret
xor
jne
mov
inc
jae
add
xchg
into
leave
mov
test
push
xchg
xor
sbb
repz
aaa
xor
pop
dec
cmp
sbb
sbb
andb
mov
add
addb
or
jp
pop
mov
fnstcw
loopne
sbb
and
sub
mov
aas
pop
imulb
and
sub
mov
nop
mov
out
mov
xorl
xorl
mov
xchg
push
xchg
cmp
aam
cld
mov
sarb
inc
or
fwait
xor
push
mov
pusha
xchg
mov
mov
fldt
outsb
out
scas
jg
and
in
pop
pushf
int
movb
mov
pop
gs
out
int3
dec
cmpsb
push
lods
repz
pop
dec
inc
mov
pop
or
ror
leave
das
loopne
mov
xor
sbb
addl
jne
sarb
inc
sub
add
cmpsb
dec
cli
xchg
test
test
push
push
xchg
adc
jle
lahf
scas
mov
jmp
add
int3
aad
cld
das
xchg
into
pop
cltd
movsl
lcall
lret
xor
push
jecxz
aad
stc
rcr
subl
daa
scas
dec
ja
xorb
mov
mov
ret
cmpl
insl
pushf
mov
out
dec
xchg
inc
call
fstpt
inc
pop
popf
movsl
mov
lret
icebp
jp
push
cs
les
xor
in
testl
ss
loop
loopne
ljmp
fistl
aad
push
shrb
mov
inc
or
xor
sbb
movsb
ficoms
ret
imul
mov
or
inc
or
test
call
repz
les
push
pop
outsb
sub
loop
dec
cld
ret
sub
mov
and
cmp
mov
jl
lahf
test
cmpsb
push
into
adc
xor
shlb
popf
mov
pop
aam
ret
sub
sbb
shr
hlt
mov
xchg
enter
in
inc
mov
and
pop
xor
pusha
in
scas
jge
jae
inc
orb
inc
sbb
fstp
jnp
outsb
jp
bound
lret
les
mov
cmpb
mov
mov
test
add
insl
out
mov
push
loop
les
dec
inc
mov
out
aaa
mov
popl
in
int3
ret
mov
mov
nop
or
mov
mov
lea
pop
and
jo
inc
cld
mov
ja
mov
scas
mov
inc
adc
ret
push
test
insb
cmp
pusha
dec
xchg
inc
mov
ss
sub
shll
mov
xchg
outsb
fcmovnb
jmp
hlt
lret
rolb
mov
mov
xor
xor
add
jl
mov
jo
cmp
fcmovne
dec
test
ret
cmp
ret
pop
push
mov
add
stc
jae
in
adc
scas
jle
rorb
je
add
push
mov
xchg
das
pop
inc
xchg
xchg
fistpll
and
inc
pop
outsb
sub
inc
dec
sbb
fs
cmp
ds
lds
push
loope
adc
jl
in
lahf
pop
mov
rol
shll
cmpl
mov
and
xorb
cmp
inc
aam
and
mov
mov
adc
mov
push
cmpl
mov
incb
cmp
pop
out
xorb
insb
cwtl
outsb
pop
pop
sbb
test
rcrb
lock
aam
daa
test
in
push
test
cmc
int
lret
lock
mov
push
cmp
dec
xchg
adc
push
inc
stos
mov
inc
mov
pop
and
or
lods
fadds
fistl
test
dec
clc
push
xor
xor
sbb
mov
fadds
les
stc
cmpsb
lea
cmp
ror
imul
popf
andl
shrl
or
fnstsw
jg
int
mov
call
movsl
add
stos
test
mov
mov
pusha
fldcw
mov
xor
inc
in
xchg
aad
mov
lahf
stc
xor
in
icebp
lcall
dec
icebp
xor
xchg
add
mov
je
push
ds
dec
nop
pushaw
fnstcw
and
imul
push
xor
jmp
jo
cmpsl
roll
lds
out
frstor
xor
pop
fst
add
notl
mov
stc
add
iret
andl
aas
inc
mov
add
test
pop
outsl
test
adc
mov
push
insl
dec
cmc
jl
fs
loopne
dec
jl
pushl
int
fcoml
cltd
jne
sub
lea
pop
or
cs
mov
adc
call
ss
mulb
mov
adc
or
or
ds
jb
xor
insb
jp
dec
dec
cmc
cmp
in
rcl
fmulp
jns
dec
fdecstp
inc
in
mulb
repnz
mov
popa
push
lods
pop
push
movsb
loope
add
adc
mov
fdivrs
mov
insb
or
xor
aam
or
sub
jmp
sbb
imul
std
aaa
icebp
imul
lsl
cs
inc
popf
in
push
lcall
jp
rcrl
add
pop
ljmp
lods
xchg
insl
leave
movsb
inc
movsl
adc
int3
imul
mov
jne
add
xor
imul
adc
jg
push
aam
dec
insb
xor
in
sub
mov
sbb
sub
ret
adc
xchg
xchg
lock
inc
ljmp
mov
adc
loopne
or
dec
adc
pop
out
pop
sbb
add
mov
and
cmp
das
pop
add
lret
imul
add
jp
testb
fldt
lahf
mov
in
adc
mov
or
in
sar
jno
hlt
js
pushf
mov
loopne
mov
fmul
icebp
shrb
test
sbb
cld
inc
testl
icebp
sti
cmpsl
dec
pop
cli
ret
mov
mov
cmp
jns
test
push
repnz
xor
cmp
inc
mov
cmp
sub
xor
jmp
push
and
cmp
pop
sbb
leave
adc
mov
clc
dec
lods
pop
lock
lods
xchg
call
and
rcl
push
add
std
adc
ficoms
cmp
push
push
xchg
xchg
out
dec
jp
fwait
shrl
adc
sti
pop
pusha
subl
insb
mulb
and
push
aam
pop
inc
jl
ret
das
xor
mov
and
mov
mov
sbb
in
pop
loop
enter
inc
jmp
fyl2xp1
std
sub
mov
subl
out
aad
movsl
ror
cmp
mov
insl
add
dec
mov
clc
mov
pop
cmpsl
push
dec
mov
and
das
sti
ds
add
insb
dec
jnp
mov
inc
mov
mov
mov
and
or
jb
pop
stc
adc
aam
int
jmp
or
push
movsl
sahf
xchg
cmp
jns
mov
into
dec
xchg
into
cmp
ljmp
std
js
int
mov
cmc
push
xlat
push
cmc
pusha
sbb
sub
movl
sub
outsl
in
test
fisttps
hlt
sub
out
add
fnstsw
loope
push
and
enter
pop
je
lahf
aam
jge
popfw
js
test
fistpll
mov
push
xor
pusha
jns
sub
pop
xlat
movsl
cld
sti
loope
into
fdivrs
mov
jo
push
push
sub
add
sbb
push
xor
jns
sub
or
and
push
sbb
push
gs
lahf
sub
shlb
incl
repz
cmc
sbb
xor
movsl
ja
inc
pop
mov
scas
mov
je
mov
jnp
jl
jae
pop
xchg
jo
push
imul
jl
loop
dec
lock
loope
insl
pop
push
or
or
jl
loop
ds
pusha
aad
aad
xchg
subl
sub
mov
fists
scas
pop
add
movsl
sub
mov
push
test
popa
jne
or
popa
or
les
stc
das
push
hlt
adc
in
or
push
faddl
xchg
aam
xchg
dec
lods
lds
xor
and
cmc
lds
outsb
jg
cmp
and
sub
inc
out
inc
cmp
cltd
outsb
outsl
int3
mov
add
rorl
lahf
dec
subb
fs
inc
sarb
sub
push
cmc
jge
mov
adc
and
xor
je
xlat
in
dec
dec
xchg
fstpl
mov
in
cmc
loopne
int
inc
iret
ljmp
rorl
add
inc
pop
icebp
jnp
dec
pop
pushf
jb
loopne
xchg
mov
and
in
dec
dec
xlat
sub
push
add
icebp
jae
lods
mov
xchg
mov
lahf
jmp
push
dec
insb
pop
mov
adc
scas
outsl
fs
pop
or
dec
xchg
cmp
stos
stc
adc
cmp
add
push
add
mov
add
insl
add
mov
add
jns
add
jno
add
imul
add
push
add
mov
add
adc
add
or
add
and
add
cmp
add
mov
add
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
std
add
icebp
add
in
add
int
add
aad
add
popf
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
inc
add
lea
add
popa
add
lea
add
jge
add
add
mov
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmp
incb
in
std
cld
cmp
std
lahf
pop
add
add
incb
flds
incb
xchg
scas
cmpsl
dec
inc
int
dec
pop
mov
out
push
sti
test
sti
test
incb
cmp
mov
xor
xchg
pushf
cltd
mov
lea
sbbl
adcl
test
push
mov
subl
andl
xorl
cmpl
test
mov
and
dec
push
inc
fisttpll
adc
dec
dec
repnz
ret
push
adc
dec
push
adc
dec
push
adc
dec
adc
sti
dec
xchg
mov
orl
xchg
insb
or
sbb
dec
push
adc
push
adc
push
adc
dec
push
adc
dec
push
adc
push
adc
push
adc
dec
push
adc
dec
push
adc
push
adc
push
adc
dec
push
adc
dec
push
adc
push
adc
push
sbb
push
sbb
dec
push
sbb
dec
push
sbb
dec
push
sbb
push
sbb
push
sbb
dec
push
sbb
dec
push
sbb
push
sbb
sbb
adc
aaa
test
das
dec
int3
aam
sub
hlt
sub
hlt
fnstcw
ds
pop
dec
push
sbb
push
sbb
dec
push
sbb
ds
sbb
dec
dec
sbb
dec
dec
sbb
cs
sbb
pop
push
push
decl
sbb
and
and
mov
cmp
dec
dec
sbb
dec
dec
sbb
dec
dec
sbb
dec
dec
sbb
dec
dec
sbb
dec
dec
sbb
dec
dec
sbb
dec
dec
sbb
dec
dec
push
sti
int
sbb
pop
xchg
add
iret
fmuls
push
dec
cld
push
out
pop
xchg
test
fdivs
dec
mov
out
xchg
lcall
mov
pop
cltd
fimuls
fcomps
jmp
int3
outsl
pop
pop
or
ret
ror
sbb
dec
int3
outsl
add
inc
out
jmp
les
pusha
lcall
sahf
jmp
jecxz
mov
nop
arpl
fisubrl
lret
aam
push
pop
lock
mov
test
push
arpl
dec
ret
pop
fucomip
das
mov
adc
incl
pop
jmp
rcl
pop
push
pop
push
lcall
sbb
or
jb
rcl
fwait
push
pop
sbb
enter
cmpsl
pop
ror
notb
es
ret
pop
fists
mov
pop
mov
jne
dec
ds
push
pop
xchg
fimull
dec
mov
sbb
push
mov
jae
dec
and
push
sbb
pop
mov
inc
into
push
dec
or
sbb
int
dec
lret
dec
dec
or
inc
push
pop
cmp
leave
lret
and
dec
das
fs
es
iret
pop
dec
push
gs
pop
pop
sahf
adc
fucomip
lahf
or
pop
out
push
lds
leave
or
adc
dec
and
leave
pop
dec
out
dec
mov
inc
shll
test
push
cs
pop
dec
mov
gs
fucomip
out
dec
pop
das
pop
and
adc
dec
xchg
or
and
mov
gs
dec
pop
xchg
jg
ret
pop
enter
jg
sub
repz
jo
dec
es
push
fwait
dec
sbb
pop
enter
cmpsl
pop
mov
mov
icebp
adc
dec
nop
addr16
dec
test
ret
and
pop
pmaxsw
dec
dec
dec
jnp
inc
push
cmp
ret
push
dec
test
shr
cvtps2pi
pop
jmp
pop
xchg
push
dec
cmp
xchg
leave
sbb
je
mov
cltd
dec
mov
and
clc
cwtl
imulb
mov
cli
dec
xchg
ret
fimuls
xchg
or
mov
das
daa
inc
inc
xchg
pusha
pushf
sbbl
mov
dec
pop
cmp
lods
out
mov
dec
repnz
scas
push
dec
sub
mov
mov
call
out
les
testb
jne
dec
les
pop
or
nop
movl
lds
adc
mov
jb
pop
dec
out
fimuls
outsl
adc
rcll
sbb
xchg
enter
cmpsl
sub
xchg
iret
jno
lahf
pop
les
icebp
adc
jnp
mov
sub
xor
adc
dec
les
dec
mov
sub
rclb
sub
xchg
add
adc
test
int3
jne
sbb
ss
dec
add
pop
or
mov
dec
movsb
jo
scas
lcall
sub
stos
mov
daa
jae
dec
or
lds
and
cwtl
lcall
inc
jl
dec
jl
sub
dec
mov
adc
mov
dec
push
dec
sub
dec
mov
push
sub
dec
lods
out
jmp
les
pop
or
test
les
pop
or
fincstp
gs
les
or
nop
dec
les
or
fsts
gs
add
mov
inc
mov
jg
mov
adc
cmpsb
push
xchg
xchg
dec
cmp
jecxz
mov
shrb
dec
dec
jge
outsl
cld
fs
pop
addr16
dec
jge
mov
aad
in
mov
jl
dec
fs
dec
dec
daa
mov
lcall
push
ficompl
scas
inc
fsub
bound
ret
jno
fisttps
enter
push
pop
iret
mov
stc
push
or
insb
movl
popa
and
rcll
inc
or
sahf
add
mov
sbbb
add
mov
push
cmp
pop
ret
cwtl
hlt
lret
sti
std
sbb
mov
add
mov
and
add
jge
adc
push
fdivrs
stos
aaa
leave
movsl
cmc
loope
clc
cmp
icebp
jl
cmp
add
mov
insb
xchg
mov
mov
and
mov
jne
clc
ja
mov
cs
sbb
add
jb
cld
xchg
push
add
sub
in
push
push
lret
and
push
insl
mov
add
mov
fidivrl
jle
mov
jno
stos
out
movsl
mov
clc
test
mov
lds
ljmp
cmp
rcl
into
mov
lods
pusha
shrb
lock
cmp
mov
rcr
test
pop
lea
add
std
and
andb
cmp
and
push
inc
xor
int3
jnp
add
jmp
loope
shl
fadds
icebp
adc
or
mov
dec
mov
test
or
ss
pusha
ljmp
xchg
push
mov
mov
xchg
mov
shlb
addl
mov
jb
icebp
pop
shufps
flds
xchg
mov
add
sbb
add
and
es
ss
insb
out
add
jno
mov
xor
inc
inc
mulb
mov
add
mov
icebp
sub
sbb
mov
mov
jge
mov
aam
add
add
mov
and
movsb
dec
lods
mov
push
popa
add
jge
enter
clc
add
cltd
movsl
decb
rcrb
loop
add
in
sbb
push
xchg
add
and
lods
mov
out
lock
sub
pop
fsubs
icebp
adc
and
pop
sbb
adcl
in
std
lea
mov
stos
dec
int3
cmpsl
nop
and
and
test
push
sub
pop
pop
stos
add
and
sub
mov
sahf
cmp
mov
push
adc
dec
inc
mov
fwait
dec
sarb
sbb
in
dec
cmp
out
pop
inc
add
adc
cmp
dec
push
and
push
jo
lret
incb
add
push
out
negb
add
sbb
adc
incb
and
mov
loopne
sbb
clc
lods
and
popf
mov
out
push
bound
std
nop
dec
rol
jp
clc
ret
aad
fnstsw
mov
inc
test
add
popf
loope
mov
fmuls
mov
push
cltd
loop
out
enter
cmpsb
and
aad
fsubl
nop
cmc
adc
and
inc
sbb
lcall
std
xchg
sub
mov
stos
dec
int3
cmpsl
mov
test
push
fsubp
and
cmp
add
and
and
mov
cmp
scas
fwait
inc
adc
dec
inc
mov
fwait
insl
mov
std
in
frstor
fwait
cs
push
cmp
adc
decb
ficomps
dec
xor
repz
inc
test
outsl
sub
out
pop
gs
sbb
mov
push
shlb
jo
mov
mul
int
inc
js
std
cmc
mov
and
adc
mov
add
lcall
fstpl
jle
lds
int
sti
rolb
lcall
mov
inc
scas
add
loop
and
pop
fldlg2
shl
fadds
ljmp
adc
xchg
hlt
inc
fwait
xor
cmpsb
dec
loopne
add
ds
pop
repnz
sbb
add
mov
mov
mov
inc
in
and
lea
mov
xchg
jp
jmp
ret
push
flds
xchg
mov
sahf
inc
loopne
fwait
mov
mov
add
sub
es
ds
je
lcall
pop
pop
sbb
push
pop
mulb
lea
add
lods
sbb
add
out
mov
rcll
mov
dec
repnz
fcompl
add
pushf
mov
mov
pop
mov
hlt
pop
pop
add
dec
push
enter
clc
add
shll
mov
decl
std
add
cmc
mov
mov
cmc
lock
push
shrb
popa
fsubs
mov
adc
and
pop
sbb
inc
xchg
adc
adc
inc
in
add
mov
int3
mov
push
out
mov
xchg
rcrl
pop
test
mov
enter
jle
fidivrl
pop
add
push
inc
mov
mov
xorb
sub
cmpsl
lds
adc
add
int3
inc
mov
push
and
push
jo
leave
lds
add
outsb
out
repnz
popa
add
and
adc
mov
pusha
jl
cmpsb
shr
mov
dec
hlt
fildl
cld
lods
and
mov
xchg
out
pop
bound
inc
xchg
dec
ror
jp
test
add
mov
mov
sbb
inc
out
add
mov
mov
scas
dec
mov
pop
pushf
sarb
and
add
out
std
adc
call
hlt
sbb
inc
notl
mov
and
repz
add
mov
test
test
loop
pop
out
sbb
outsb
mull
mov
mov
xchg
into
and
jb
mov
mov
adc
mov
inc
adc
mov
cmp
scas
add
sahf
lds
xchg
fscale
shl
mov
ds
and
add
std
stos
mov
std
rcrl
mov
xchg
enter
leave
test
cmpsb
orb
fcomi
adc
and
mov
mov
mov
xchg
andb
test
add
aad
test
stos
sbb
sbb
push
add
fsubrp
mov
mov
adc
mov
loope
mov
stos
adc
adc
mov
cmp
ljmp
sarl
sbb
ss
lcall
mov
push
mov
mov
mov
and
and
inc
stos
sahf
fiaddl
and
sbb
fscale
iret
mov
std
fisubl
loop
sbb
jmp
and
and
lret
movsb
xchg
add
mov
inc
mov
xor
popl
and
mov
dec
jg
add
mov
sbb
mov
sahf
lods
dec
movsl
flds
ljmp
int
mov
mov
out
test
lods
mov
sahf
popa
add
xchg
and
or
movsl
cli
xchg
enter
std
std
iret
dec
fldenv
fsubrp
inc
ja
xchg
add
xchg
mov
lock
xchg
fsubrl
fstps
int
clc
leave
in
adc
and
sub
fnstsw
mov
adc
inc
in
add
add
lods
add
push
int3
fwait
into
and
and
popf
in
enter
popf
adc
aas
and
into
pop
xchg
enter
jne
imull
add
xchg
pop
mov
fiaddl
mov
cmpsl
fstpl
es
xchg
xor
adc
add
int3
inc
fldt
ficomps
cwtl
jl
int3
aas
mov
out
ljmp
adc
mov
fsubs
mov
sbb
mov
xor
add
lods
and
push
xchg
outsb
mov
add
jne
leave
stc
or
mov
rcr
sbb
decb
lcall
inc
xchg
mov
mov
std
mov
les
roll
add
shr
test
aas
scas
out
leave
movsl
cmc
lods
cmp
cmc
clc
stc
sbb
je
cmp
add
mov
frstor
mov
and
ret
cli
cmc
jne
lock
mov
es
jbe
repnz
sbb
add
mov
fstps
add
out
xor
push
mov
lret
and
insl
mov
mov
fs
fcomi
jle
mov
test
test
mov
push
add
ljmp
icebp
lret
pushf
into
mov
movsb
cltd
shrb
call
mov
mov
mov
enter
xchg
jle
cmpsl
cwtl
lea
add
adc
sbb
andb
stc
lods
add
pop
and
add
cmc
add
fdivr
add
sar
add
shl
add
shl
add
shr
add
ror
add
rol
add
rcl
add
rcr
add
rcrl
add
roll
add
shrl
add
shll
add
sarl
add
shll
add
rorl
add
rcll
add
rcrl
rcll
roll
rorl
shrl
shll
shll
sarl
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
sar
add
shl
add
shl
add
shr
add
ror
add
rol
add
rcl
add
rcr
add
rcrb
add
rolb
add
shrb
add
shlb
add
sarb
add
shlb
add
rorb
add
rclb
add
rcrb
rclb
rolb
rorb
shrb
shlb
shlb
sarb
sarl
shll
shll
shrl
rorl
roll
rcll
rcrl
rcrl
add
roll
add
shrl
add
shll
add
sarl
add
shll
add
rorl
add
rcll
add
rcr
add
rcl
add
rol
add
ror
add
shr
add
shl
add
shl
add
sar
add
std
add
icebp
add
in
add
jmp
add
roll
aad
add
flds
add
popf
add
xchg
add
test
add
mov
add
lods
add
mov
add
mov
add
xor
add
and
add
or
add
adc
add
pop
add
push
add
inc
add
dec
add
insl
add
popa
add
jne
add
jns
add
jge
add
jno
add
add
xlat
imul
add
inc
add
xlat
push
add
xlat
pop
add
xlat
sbb
add
xlat
add
add
xlat
sub
add
xlat
xor
add
xlat
mov
add
xlat
movsl
add
xlat
test
add
xlat
addl
add
cltd
add
xlat
fldl
add
roll
add
lds
add
leave
add
xlat
in
add
xlat
loope
add
cmc
add
xlat
stc
add
fscale
add
fyl2x
add
fxam
add
fldl2t
add
fxch
add
fld
add
add
add
fstps
add
flds
add
fldcw
add
fnstenv
add
fnstcw
add
fldenv
add
add
fsts
add
fstps
add
push
add
flds
add
dec
add
fldcw
add
popa
add
fnstenv
add
jns
add
jge
add
jno
add
add
fsubrs
add
dec
add
fadds
add
push
add
fcomps
add
sbb
add
fadds
add
fsubrs
add
fdivs
add
fdivrs
add
fsubs
add
fmuls
add
fcoms
add
fcomp
add
fcom
add
fadd
add
fmul
add
fsubr
add
fsub
add
fdiv
add
fdivr
add
std
add
icebp
add
in
inc
jmp
add
mov
add
flds
inc
popf
add
xchg
add
movl
add
mov
add
mov
add
xor
inc
and
add
or
add
adc
add
pop
add
push
add
movl
inc
insl
add
popa
add
jne
inc
jns
dec
jge
dec
jno
dec
gs
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
std
add
icebp
add
in
inc
jmp
add
mov
inc
aad
inc
flds
inc
popf
add
xchg
add
movb
inc
lods
add
mov
add
mov
add
xor
inc
and
add
or
add
adc
add
pop
add
push
add
movb
dec
add
insl
add
popa
add
jne
inc
jns
inc
jge
inc
jno
inc
gs
lds
inc
dec
add
lds
inc
push
add
lds
inc
sbb
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
inc
roll
inc
lds
inc
leave
add
inc
loope
inc
cmc
add
cli
sar
add
icebp
add
ret
add
jmp
add
ret
add
aad
add
flds
add
popf
add
ret
add
test
add
mov
add
lods
add
ret
add
mov
add
mov
add
ret
add
and
add
ret
add
add
add
adc
add
ret
add
push
add
ret
add
dec
add
ret
add
popa
add
ret
add
jns
add
jge
add
jno
add
add
ret
imul
add
inc
add
ret
push
add
ret
pop
add
ret
sbb
add
ret
add
add
ret
sub
add
ret
xor
add
ret
mov
add
ret
movsl
add
ret
test
add
ret
addl
add
cltd
add
ret
fldl
add
roll
add
lds
add
leave
add
ret
in
add
ret
loope
add
cmc
add
ret
stc
add
add
icebp
add
add
jmp
add
add
aad
add
flds
add
popf
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
push
add
lds
add
dec
add
lds
add
popa
add
lds
add
jns
add
jge
add
jno
add
add
les
add
dec
add
les
add
push
add
les
add
sbb
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
fldl
add
roll
add
lds
add
leave
add
in
add
cmc
add
stc
add
int3
std
add
lret
icebp
add
lret
in
dec
jmp
add
lret
roll
lret
aad
dec
flds
dec
popf
add
lret
xchg
add
lret
test
dec
mov
dec
lods
add
lret
mov
add
lret
mov
add
lret
xor
dec
and
add
lret
or
add
lret
adc
add
lret
pop
add
lret
push
add
lret
inc
add
lret
dec
add
lret
insl
add
lret
popa
add
lret
jne
dec
jns
dec
jge
dec
jno
dec
gs
int3
imul
dec
inc
add
int3
push
add
int3
pop
add
int3
sbb
add
int3
add
add
int3
sub
add
int3
xor
add
int3
mov
add
int3
movsl
add
int3
test
add
int3
addl
dec
cltd
add
int3
fldl
dec
roll
dec
lds
dec
leave
add
int3
in
add
int3
loope
dec
cmc
add
int3
stc
add
lret
dec
icebp
add
lret
dec
jmp
add
lret
dec
aad
dec
flds
dec
popf
add
lret
dec
test
dec
mov
dec
lods
add
lret
dec
mov
dec
mov
add
lret
dec
and
add
lret
dec
add
dec
adc
add
lret
dec
push
add
lret
dec
dec
add
lret
dec
popa
add
lret
dec
jns
dec
jge
dec
jno
dec
gs
leave
imul
dec
inc
add
leave
push
add
leave
pop
add
leave
sbb
add
leave
add
add
leave
sub
add
leave
xor
add
leave
mov
add
leave
movsl
add
leave
test
add
leave
addl
dec
cltd
add
leave
fldl
dec
roll
dec
lds
dec
leave
add
leave
in
add
leave
loope
dec
cmc
add
leave
stc
add
into
std
add
into
icebp
add
into
in
add
jmp
add
into
roll
into
aad
add
flds
add
popf
add
into
xchg
add
into
test
add
mov
add
lods
add
into
mov
add
into
mov
add
into
xor
add
and
add
into
or
add
into
adc
add
into
pop
add
into
push
add
into
inc
add
into
dec
add
into
insl
add
into
popa
add
into
jne
add
jns
add
jge
add
jno
add
add
iret
imul
add
inc
add
iret
push
add
iret
pop
add
iret
sbb
add
iret
add
add
iret
sub
add
iret
xor
add
iret
mov
add
iret
movsl
add
iret
test
add
iret
addl
add
cltd
add
iret
fldl
add
roll
add
lds
add
leave
add
iret
in
add
iret
loope
add
cmc
add
iret
stc
add
sar
add
shl
add
shl
add
shr
add
ror
add
rol
add
rcl
add
rcr
add
rcrl
add
roll
add
shrl
add
shll
add
sarl
add
shll
add
rorl
add
rcll
add
rcrl
add
push
add
roll
add
dec
add
shrl
add
popa
add
shll
add
jns
add
jge
add
jno
add
add
shrb
add
dec
add
rolb
add
push
add
rcrb
add
sbb
add
rolb
add
shrb
add
shlb
add
sarb
add
shlb
add
rorb
add
rclb
add
rcr
add
rcl
add
rol
add
ror
add
shr
add
shl
add
shl
add
sar
add
lock
add
out
icebp
add
out
in
out
jmp
add
out
roll
out
aad
out
flds
out
popf
add
out
xchg
add
out
test
out
mov
out
lods
add
out
mov
add
out
mov
add
out
xor
out
and
add
out
or
add
out
adc
add
out
pop
add
out
push
add
out
inc
add
out
dec
add
out
insl
add
out
popa
add
out
jne
out
jns
lock
lock
lock
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
lock
lock
lock
add
lock
add
lock
lock
add
lock
add
out
std
add
out
icebp
add
out
in
out
jmp
add
out
roll
out
aad
out
flds
out
popf
add
out
xchg
add
out
test
out
mov
out
lods
add
out
mov
add
out
mov
add
out
xor
out
and
add
out
or
add
out
adc
add
out
pop
add
out
push
add
out
inc
add
out
dec
add
out
insl
add
out
popa
add
out
jne
out
jns
in
jge
in
jno
in
gs
in
imul
in
inc
add
in
push
add
in
pop
add
in
sbb
add
in
add
add
in
sub
add
in
xor
add
in
mov
add
in
movsl
add
in
test
add
in
addl
in
cltd
add
in
fldl
in
roll
in
lds
in
leave
add
in
in
add
in
loope
in
cmc
add
in
stc
add
jmp
icebp
add
ljmp
add
int
add
roll
ljmp
add
popf
add
ljmp
add
mov
add
lods
add
ljmp
add
mov
add
ljmp
add
sub
add
or
add
ljmp
add
pop
add
ljmp
add
dec
add
ljmp
add
jne
add
jns
add
jge
add
jno
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
std
add
in
icebp
add
in
in
add
jmp
add
in
roll
in
aad
add
flds
add
popf
add
in
xchg
add
in
test
add
mov
add
lods
add
in
mov
add
in
mov
add
in
xor
add
and
add
in
or
add
in
adc
add
in
pop
add
in
push
add
in
inc
add
in
dec
add
in
insl
add
in
popa
add
in
jne
add
jns
add
jge
add
jno
add
add
in
imul
add
inc
add
in
push
add
in
pop
add
in
sbb
add
in
add
add
in
sub
add
in
xor
add
in
mov
add
in
movsl
add
in
test
add
in
addl
add
cltd
add
in
fldl
add
roll
add
lds
add
leave
add
in
in
add
in
loope
add
cmc
add
in
stc
mov
jl
xor
hlt
leave
aas
push
imul
lods
and
cs
fcompl
xor
shr
in
mov
aaa
sub
or
inc
loopne
add
or
dec
loopne
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
