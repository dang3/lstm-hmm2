nop
add
mov
push
into
push
loope
mov
mov
incb
icebp
dec
jbe
pop
adc
roll
test
sbbl
icebp
shll
arpl
repz
jne
inc
imul
stc
lahf
in
les
mov
in
push
int
push
aam
cmpsl
mov
clc
loopne
js
fimull
mov
xchg
sahf
jmp
xor
dec
rol
out
dec
cmpsb
data16
daa
leave
cmp
xchg
inc
inc
leave
psubb
push
inc
mov
out
test
xor
adc
adc
jns
lcall
nop
stos
loope
ret
icebp
xor
arpl
jl
cli
cmp
inc
ljmp
sub
sub
pop
fwait
cld
ss
sbb
into
pop
push
jae
adc
rolb
and
ret
mov
xor
ljmp
sbb
leave
lock
or
shll
cmp
std
std
lods
mov
cld
mov
and
mov
fistl
in
or
inc
jp
cld
cmp
es
outsb
nop
ds
gs
rol
fcoml
aam
and
iret
bound
stos
rolb
les
outsl
in
or
push
lods
jbe
movsl
jbe
xchg
mov
sbb
pop
xchg
mov
mov
sarb
cld
mov
lret
jp
cld
push
arpl
jnp
test
test
jmp
sbbb
sub
pop
pushf
jne
adc
xchg
js
dec
fmull
pop
nop
cmp
scas
or
push
push
bnd
dec
repz
call
mov
je
repnz
mov
push
std
mov
sarb
dec
lods
aam
inc
add
in
push
ret
subl
xor
cmc
mov
cmp
inc
inc
dec
out
aam
inc
or
test
fs
dec
mov
cs
push
mov
fisubrs
outsb
lret
test
ja
pushf
fcmovu
push
pop
sbb
lea
in
cmp
push
inc
cmpl
mov
push
dec
mov
mov
pop
jne
jecxz
push
clc
nop
mov
stos
mov
mov
jle
pop
rclb
cmc
xchg
out
rclb
cmpsl
dec
inc
data16
repnz
mov
popf
out
push
int
shlb
pop
mov
pop
xchg
xchg
mov
pop
fwait
and
lds
adc
dec
test
push
jp
sahf
mov
adc
sub
cmpsb
inc
adc
aas
pop
xlat
xlat
mov
push
mov
mov
imul
inc
xor
inc
jecxz
es
mov
and
cld
pop
xchg
jne
jb
cwtl
dec
test
add
sub
or
push
shlb
push
mov
mov
sub
xchg
sub
jnp
push
call
or
and
clc
outsb
inc
call
dec
xchg
into
roll
dec
dec
xor
aam
mov
and
pop
lea
sbb
jp
aam
imul
icebp
push
pop
pop
int
pop
mov
syscall
mov
push
out
mov
stos
jae
push
jae
lock
jge
xchg
pop
mov
test
nop
mov
inc
mov
fidivrs
mov
test
sar
imul
aas
xor
cmpsl
hlt
push
and
push
xchg
inc
into
out
inc
sbb
mov
mov
aas
jno
std
lods
inc
adc
mov
mov
cmpsl
adc
insl
or
sbb
lcall
dec
mov
test
sahf
lea
cmpsl
mov
js
into
adc
mov
mov
imull
call
subb
and
sbb
xor
cmp
inc
mov
xchg
dec
xchg
into
inc
sbb
dec
pop
out
add
cwtl
or
xchg
or
adc
sub
or
mov
mov
push
xchg
push
aam
ret
data16
dec
sbb
dec
sub
cwtl
es
daa
inc
in
pop
inc
aad
popf
inc
mov
aad
jmp
mov
dec
mov
xlat
add
xchg
es
ret
fbld
cmp
outsl
pop
icebp
mov
add
xchg
test
cmpsl
pushf
mov
sbb
orps
push
dec
stc
sub
sub
dec
cld
mov
cli
notb
rcl
inc
mov
jno
and
inc
mov
and
lods
stos
add
mov
cmp
inc
or
pusha
ret
push
and
adc
stos
arpl
jecxz
test
insb
push
cli
dec
in
jge
out
pop
iret
nop
cmp
push
add
sbb
fwait
cmp
adc
in
dec
mov
pop
cmp
arpl
outsb
out
stos
push
push
fistps
sbb
stos
mov
sub
xor
inc
ret
or
dec
aas
out
pushf
sub
addr16
jg
out
lea
ja
iret
xor
sahf
bound
sbb
sub
sbb
movsb
mov
test
mov
repnz
lret
int
bound
sti
dec
sbb
mov
jl
jnp
fs
ret
and
cwtl
into
repz
mov
cmp
lock
cwtl
pop
andl
aam
dec
ds
push
sbb
cmp
aas
jnp
bound
fwait
add
pop
test
scas
sub
adc
sub
jb
roll
add
xor
or
xor
stos
test
or
loope
pop
pop
pop
les
fsubrs
mov
push
jnp
es
fcoms
stc
lahf
cmp
sub
addr16
in
icebp
ds
xchg
leave
push
mov
int
jecxz
jecxz
addps
decb
ja
inc
ljmp
loopne
test
cmp
sbb
sub
jns
daa
xor
mov
inc
and
pop
stos
sub
shr
adc
hlt
mov
xchg
sbb
loope
sub
pop
mov
push
xchg
fsubrl
lea
out
mov
imul
aas
movsb
push
dec
and
sbb
dec
push
xor
loop
push
popa
xlat
arpl
push
adc
lret
adc
add
testl
gs
push
push
and
in
fisubs
pushw
cld
inc
lahf
fsubl
adc
mov
push
inc
ljmp
lahf
in
inc
loope
push
idiv
pop
sub
dec
imul
sub
push
cmp
mov
jg
jne
jg
cmpsb
inc
jg
add
movsb
sbb
sbb
mov
adc
sub
mov
outsb
sbb
mov
xor
or
xchg
xchg
pop
js
gs
push
mov
lret
add
ret
push
pop
and
and
jge
aaa
jmp
sbb
pusha
insb
push
add
call
and
adc
out
imul
mov
test
in
mov
fbstp
push
push
push
addr16
xlat
mov
xchg
sbb
js
inc
and
sbb
ja
jecxz
aaa
lock
xor
data16
mov
rorl
popa
fcomps
add
mov
movl
sub
xor
mov
call
das
shll
mov
aad
and
xchg
jge
out
out
jbe
jb
fs
xchg
mov
cli
ja
xchg
data16
mov
fwait
das
add
pusha
add
std
lods
sub
jae
cmp
testl
js
vmovshdup
fmuls
pusha
repnz
pop
pushf
sbb
std
mov
xchg
lea
ret
std
inc
jle
iret
test
jae
fstps
mov
jns
out
std
daa
pop
and
nop
adc
ret
or
or
mov
mov
mov
in
adc
xchg
sbb
ljmp
cwtl
daa
jae
jmp
insl
rolb
into
inc
fstl
movsb
out
mov
scas
out
mov
mov
sub
popf
in
inc
popf
mov
inc
cmpb
sbb
sub
lret
add
pop
sbbl
lcall
cmp
mov
int
cmp
aam
push
stos
aas
and
je
fcoml
ret
hlt
js
int
roll
rolb
lds
sbb
ljmp
dec
shll
pop
stos
cmp
loope
sub
jmp
popa
lret
push
ret
sbb
sarl
sub
mov
xchg
sub
or
add
and
stos
lret
cmp
lds
dec
mov
jge
mov
mov
jle,pn
xchg
lret
sahf
int3
mov
pop
mov
cmpsl
leave
push
and
jb
mov
fcmovb
mov
lods
das
xchg
sbb
movsb
ret
stos
in
ljmp
cmp
in
nop
dec
loope
pop
adc
mov
dec
xchg
xlat
cmp
cmpsl
push
sub
jg
aam
mov
mov
pop
cmp
sar
gs
and
mov
xchg
pop
in
mov
mov
jns
xor
push
jmp
mov
insb
mov
leave
or
push
cwtl
jne
dec
push
outsb
push
mov
cld
sbb
jne
test
out
mov
fldl2t
stos
adc
mov
imull
inc
fs
dec
and
daa
stos
sub
in
es
add
ret
and
adc
sbb
loope
jbe
cmp
mov
sub
adc
cmp
cmp
incb
imul
pop
and
fsubl
xchg
cmp
cld
or
xor
or
adc
out
xor
pop
mov
xchg
loop
inc
adc
add
popa
cmp
adc
adc
push
dec
stc
sub
xchg
aad
cmp
jb
mov
inc
jno
sarl
loop
mov
sahf
jns
insb
scas
call
in
mov
mov
push
sub
push
shr
adc
neg
add
popf
jbe
adc
pop
std
in
sbb
loop
leave
icebp
repz
dec
adc
xor
mov
lods
pusha
jno
xchg
sbb
cwtl
or
popf
push
out
mov
sarb
adc
nop
pusha
shlb
rolb
cltd
shld
xor
dec
sub
dec
mov
lds
add
xchg
mov
test
jecxz
jg
adc
dec
xchg
ret
stc
jne
mov
mov
js
jmp
fcmovnb
dec
popf
jne
daa
jne
in
stc
xchg
cmp
imul
outsl
cmc
mov
pop
pop
mov
and
sar
jge
pusha
inc
in
das
gs
adc
or
jbe
mov
mov
sarb
sbb
ljmp
mov
lds
mov
or
xchg
sub
lahf
loope
ret
sub
ret
sti
popa
xchg
jl
in
adc
out
adc
jge
xchg
pop
popf
cli
adc
in
ret
mov
xchg
inc
lret
pop
push
jg
and
fstpt
shlb
pop
insl
sub
aad
hlt
push
mov
lret
push
xor
das
xchg
lock
loope
mov
push
pusha
mov
jne
mov
loopne
and
jle
shll
repz
scas
jle
dec
insl
dec
cmp
mov
jne
push
lret
sub
mov
popf
push
and
scas
lods
jmp
and
stos
int3
scas
push
cli
scas
adcb
lods
test
or
repz
lahf
call
or
add
mov
out
nop
inc
scas
movsl
and
popf
fstl
pop
cmpsb
inc
xchg
into
adc
or
jp
jne
push
cmp
mov
sbb
repz
mov
jge
sbb
cmp
push
xchg
push
cwtl
seta
mov
mov
in
paddd
shrb
adc
pop
jnp
push
push
xor
jp
movsb
jl
jnp
xchg
das
push
or
mov
out
xchg
insb
xchg
add
mov
icebp
bound
pop
jmp
or
lahf
push
scas
push
push
xchg
sub
stos
xlat
enter
repnz
cmp
scas
fstpl
pop
in
test
mov
xor
loope
adc
ds
js
ljmp
fdivrs
sbb
addb
cmpsb
insb
push
sbb
popa
mov
and
fsubrs
icebp
or
push
dec
ret
ss
shr
dec
andl
out
ficoml
enter
je
icebp
or
jle
lret
aam
sbb
or
or
xchg
cmp
mov
aam
fs
jp
ljmp
mov
outsl
ja
sbb
fdivr
movsb
loop
inc
movsb
dec
fidivrs
stc
cmp
leave
test
fwait
aad
shll
lahf
inc
add
and
push
popf
js
mov
les
das
push
pop
in
iret
push
test
fwait
jg
das
ret
inc
stc
xor
or
jg
and
shll
das
push
mov
shll
stos
mov
mov
sub
daa
test
int3
sbb
adc
in
negl
jne
insb
dec
enter
pusha
movsl
xchg
repnz
aaa
lret
int
ret
dec
adc
adc
ja
rcll
or
sbb
test
push
shlb
scas
xor
aas
je
pop
jg
ljmp
push
adc
aad
leave
fcmovne
mov
call
jge
cmp
into
loopne
pop
or
shlb
lock
mov
xchg
jge
das
pop
std
jnp
pop
sahf
mov
in
mov
sbb
inc
inc
xor
fcmovnu
ljmp
popa
pop
dec
adc
ja
pop
xlat
js
in
dec
inc
add
lock
jp
push
push
jl
enter
lret
lods
mov
sbb
dec
scas
in
ds
xchg
test
fs
enter
jle
bnd
sub
push
and
pop
mov
insl
aaa
push
lret
sbbl
lcall
stos
push
xchg
jle
ret
dec
jl
lock
sbb
call
movsb
int
mov
dec
ret
add
hlt
mov
adc
push
push
pusha
mov
or
aam
jns
cmp
ffreep
sbb
aas
xor
loopne
add
lcall
xchg
dec
dec
push
and
jb
sub
mov
and
inc
sub
pushf
mov
int
push
lret
push
js
dec
in
cld
push
mov
fcomi
adc
sti
lods
enter
pop
icebp
or
in
xchg
shll
cmp
mov
clc
jmp
jp
in
sti
pop
popl
outsb
lar
xor
jne
xchg
lea
mov
mov
xor
popf
enter
loopne
fbstp
mov
addb
sub
fistl
jmp
aas
sahf
pop
outsb
sub
fs
lods
jbe
or
xor
movsb
mov
xchg
jg
shrl
jmp
repnz
adc
xchg
adc
pop
clc
xchg
fistl
cmp
xchg
sub
inc
out
inc
xor
clc
notl
mov
test
xor
out
iret
mov
sub
sbb
xor
lret
inc
lods
stc
sub
data16
and
std
pop
ret
or
fildl
push
xchg
dec
aas
sbb
cmp
rcl
xchg
sub
and
aam
or
mov
pop
xor
loope
and
mov
push
adc
ret
jp
loope
dec
mov
imul
sbb
nop
std
mov
pop
jo
jg
clc
subb
and
xchg
dec
outsb
jecxz
lret
inc
fdivl
mov
sub
aad
pop
test
jmp
data16
pushf
xlat
aad
mov
jle
push
or
sub
movsl
and
xchg
mov
pop
xchg
iret
mov
sbb
push
sbb
imul
adc
cwtl
aaa
mov
mov
sbb
mov
sbb
in
push
pop
fsubr
ror
mov
jnp
scas
mov
dec
cmp
jmp
mull
and
imul
cmp
xchg
xchg
and
xchg
jb
jne
mov
xor
xlat
jbe
fdivl
divb
cld
sbb
cmp
sbb
mov
jmp
cmp
test
arpl
or
and
jmp
imul
xchg
sub
lds
call
fwait
enter
cld
jmp
mov
mov
test
sbb
sahf
fucom
ret
fidivs
aas
test
xlat
jns
and
stc
pop
loop
dec
sarl
mov
push
fistps
adc
lea
aaa
sbb
push
popa
inc
ds
mov
movsl
inc
add
sbb
insl
arpl
inc
adc
or
add
mov
cmp
mov
add
inc
mov
movb
imul
pop
mov
xchg
ret
pop
sahf
sub
repnz
sbb
je
cwtl
jmp
pop
adc
scas
xchg
inc
outsl
call
cmp
add
fdivl
xlat
mov
xchg
gs
inc
dec
call
adc
fbld
push
mov
jo
fwait
and
push
addr16
movsb
scas
lcall
stc
adc
inc
inc
movsb
lret
pop
lret
inc
xor
jl
sub
lret
jnp
push
js
daa
push
popa
add
xor
testb
mov
mov
out
sbb
or
push
out
mov
jle
fisubl
into
fiadds
outsb
imul
call
xlat
cld
cmp
or
dec
jmp
fs
push
or
xorb
sahf
dec
aaa
pop
test
sub
push
inc
adc
aad
mov
aam
jmp
fstpl
xchg
push
xlat
cmp
in
cmp
dec
lret
push
lret
dec
mov
std
or
stos
cmpb
aas
das
sbb
dec
sub
push
shlb
aas
push
outsl
cwtl
lcall
mov
mov
and
in
pop
add
popa
je
cmp
and
dec
lock
or
out
ss
call
lahf
adc
xor
mov
dec
cmp
inc
xchg
test
and
sbb
mov
xor
mov
call
push
daa
test
daa
cli
aam
inc
orl
jb
xchg
xor
mov
mov
cmp
mov
dec
push
call
hlt
call
repnz
jle
fisttpll
pop
mov
mov
andb
xlat
imull
cli
gs
adc
lcall
das
out
pop
adc
insl
ds
mov
cltd
dec
clc
or
or
cmpsb
mov
rol
mov
stc
in
cmp
or
scas
sub
cli
aam
leave
mov
lods
jb
ljmp
fwait
jne
cmp
mov
mov
packssdw
mov
dec
and
lret
fdivs
daa
data16
add
fwait
dec
fs
sub
out
jecxz
jns
mov
sub
pusha
push
pop
ss
fucomi
test
pop
sbb
in
mov
cmp
jmp
add
hlt
aaa
adc
fstp
pop
jl
push
mul
push
lock
movsb
mov
pop
outsl
push
aam
je
or
pop
scas
stos
nop
cmp
loopne
xchg
enter
push
test
xor
stos
add
inc
push
fcomip
ret
add
and
mov
out
out
ret
enter
push
bound
push
js
rolb
ljmp
out
pop
dec
push
outsb
xchg
movsb
mov
dec
push
lods
fstpl
cltd
fcomps
fs
call
xchg
mov
pop
xchg
cmp
sub
xchg
mov
test
or
imul
les
je
sbb
testl
adc
rcl
cmp
jg
incb
xchg
aaa
mov
data16
mov
push
cmp
imul
mov
les
ret
mov
pop
jmp
mov
lds
aad
and
stc
mov
mov
cli
imul
mov
xchg
jae
movsb
inc
loopne
cltd
enter
xlat
adc
xchg
jae
mov
fcmovnbe
push
scas
scas
in
jecxz
xchg
adc
mov
das
cmc
fists
adc
lahf
cmp
mul
pushf
repz
xchg
insl
scas
add
mov
test
sahf
cltd
sarb
mov
bound
adc
js
ds
subl
add
fs
pop
ds
jns
in
and
and
sti
ja
jns
shl
mov
mov
aaa
ja
mov
jmp
sub
pushf
insl
mov
into
xchg
sbb
stos
jg
rcrb
jnp
clc
out
sahf
cmp
stos
adc
cmpsb
xor
in
dec
das
dec
imul
jo
cmp
popa
test
in
xor
ret
jecxz
and
insl
xchg
imul
movl
imulb
cld
test
addr16
cs
imul
aad
pop
inc
xchg
mov
jne
call
pop
add
add
outsl
into
cmc
push
pusha
xor
mov
stos
cmpsb
sbb
popa
fwait
mov
les
ja
push
scas
lea
lret
dec
gs
into
lea
mov
out
into
imul
pusha
cli
dec
lret
sti
movsl
or
movsl
xchg
add
cmp
notb
les
insl
mov
mov
and
push
add
xor
std
test
in
inc
add
je
and
js
imul
mov
cld
xlat
rcll
cwtl
imul
icebp
pop
dec
ljmp
gs
mov
jg
mov
mov
shll
sub
pop
shl
les
and
in
aaa
xor
dec
shrb
addl
pop
mov
adc
cmp
or
and
fst
push
inc
mov
mov
push
inc
inc
scas
adc
shl
fistps
ds
mov
sub
xchg
add
jbe
mov
mov
inc
mov
inc
popf
sbb
int3
cmp
cmp
jp
push
cmp
rcrb
orl
lods
pxor
cmp
jns
popa
or
ljmp
jle
rsm
mov
mov
out
xchg
adc
shl
cmp
pop
fwait
and
es
and
jg
xchg
mov
cmpsl
out
aas
ficoms
cmp
sbb
rolb
dec
fiaddl
mov
bound
in
push
insl
inc
mov
mov
movsb
xor
lock
push
jae
hlt
pop
out
inc
iret
xchg
rolb
mov
fmuls
push
jecxz
mov
arpl
nop
add
shrl
paddusw
es
leave
repz
inc
std
jnp
loopne
je
and
sti
mov
es
rcr
mov
xor
sahf
jbe
daa
fnsave
xor
pop
inc
mov
push
push
les
popf
or
cmpb
idivb
pusha
push
cld
mov
out
lods
dec
data16
jo
fwait
xor
mov
pop
ret
stc
insb
pop
fistpll
imul
sub
xchg
jmp
lahf
pop
je
cld
lahf
das
and
jno
aaa
and
out
mov
loop
jnp
push
lahf
inc
stos
xor
test
and
fwait
mov
xchg
xor
xor
pushf
mov
test
ljmp
jmp
into
das
pop
jo
jno
sub
and
adc
sti
pusha
iret
les
std
xor
adc
cmp
pop
sti
xorl
test
mov
scas
cmp
das
dec
and
repnz
jno
jne
pop
ret
or
aad
hlt
imul
cmpsl
fwait
les
in
int
negl
dec
shl
stos
or
cmp
sub
loop
shll
dec
incb
lahf
lret
icebp
cmp
fcoml
or
js
clc
fwait
js
inc
imul
or
subl
pop
fsts
iret
dec
popa
es
repz
addl
in
adc
jle
mov
cwtl
cs
das
or
aas
ret
and
mov
or
fdivr
mov
push
aas
fcoml
daa
cmp
jb
icebp
rcrb
push
adcl
inc
dec
xchg
sub
jne
pusha
adc
mov
lcall
and
cli
scas
mov
mov
int3
sti
xchg
scas
ss
mov
push
push
dec
mov
pusha
lods
dec
repz
mov
mov
push
shr
adc
es
data16
ret
cmp
filds
frstpm(287
shrl
xor
mov
pop
lods
sub
lods
outsl
arpl
pop
jae
lret
aam
inc
daa
xor
imul
movb
push
ret
inc
dec
imul
fwait
mov
out
mov
call
sub
enter
cmpsl
fldcw
mov
inc
push
xchg
rorl
rolb
das
push
add
int3
rorl
add
leave
stos
add
lods
cli
xchg
sarl
and
or
mov
mov
scas
add
lods
std
and
icebp
cmp
sbb
sahf
aad
xor
add
sub
mov
filds
ret
cmp
cmp
sbb
aam
pop
push
jbe
jmp
pop
inc
push
xor
in
mov
lret
rolb
push
loop
stc
fimull
inc
sbb
and
mov
jb
push
std
ljmp
jge
inc
push
xor
jnp
dec
leave
or
stos
lock
leave
ficomps
dec
mov
dec
mov
movsb
fcmovb
inc
inc
pop
xchg
cli
ss
add
in
dec
cmp
aas
hlt
cltd
int3
xor
sbb
arpl
and
leave
cmp
push
js
leave
test
xchg
lret
clc
cmp
mov
lret
mov
cmp
xchg
fnsave
add
shrb
jnp
gs
mov
mov
pop
add
adc
fists
in
fmuls
shlb
cmp
inc
aam
dec
jb
push
rorb
fwait
cltd
shll
inc
jg
jns
movsb
dec
movl
out
fstl
rcll
stos
mov
xchg
ja
push
test
xchg
fiaddl
jo
mov
lds
data16
and
outsl
pop
les
ret
shll
jl
fcoml
shlb
arpl
push
lret
jno
mov
jl
fs
xchg
scas
push
mov
jae
into
mov
mov
in
sub
jb
insl
xchg
xor
adc
loop
cmpsl
inc
cmp
test
sub
cmpsl
mov
jl
scas
pusha
cltd
cmpsl
push
ret
imul
dec
icebp
cmp
inc
cmp
inc
mov
in
out
push
bound
and
adc
pop
adc
adc
stos
pop
in
rclb
mov
ss
fcompl
and
ja
xchg
fists
pop
inc
and
or
cmpl
test
ss
mov
add
pop
mov
fimull
mov
push
lcall
insl
and
jnp
rclb
ret
rcrl
int
xchg
xlat
fnclex
iret
sbb
insl
pop
scas
jp
xchg
outsl
outsl
add
pushf
and
inc
sbb
jge
mov
mov
inc
jg
xor
lret
push
dec
pop
aaa
ret
mov
mov
push
sahf
xchg
cmp
cmc
out
push
fmuls
clc
mov
sub
insl
lret
xor
pop
sub
call
mov
xchg
rclb
jo
imul
mov
jns
mov
pop
xor
addb
xchg
cmp
fcmovne
scas
push
out
inc
xchg
sbb
test
inc
cmpsb
push
jmp
js
cwtl
imul
mov
stos
add
jnp
imul
stos
mov
inc
test
dec
fsubl
mov
loope
out
jae
push
jl
add
into
repz
sub
push
sub
cmp
movsb
ja
dec
sbb
mov
ret
inc
ss
sbb
dec
push
xor
jns
inc
cmp
loope
xor
jge
movsl
fidivs
jp
mov
and
lcall
xor
mov
arpl
mov
mov
mov
fidivrl
scas
cmp
xchg
fidivl
pusha
xchg
or
mov
ja
mov
push
sub
xchg
mov
stos
nop
imul
sub
addr16
stos
add
rcrb
mov
and
xchg
xchg
stos
mov
mov
imul
mov
jecxz
filds
lret
cs
mov
jmp
xchg
fistps
dec
pop
out
test
adc
dec
cmp
mov
mov
mov
dec
add
sbb
and
ljmp
out
ret
enter
aad
mov
mov
adc
mov
push
jb
sahf
shll
int
push
das
mov
imul
mov
inc
sub
lock
std
push
cmpsl
xchg
jno
sahf
or
mov
insb
scas
and
jmp
cmp
cltd
fidivl
repz
dec
cwtl
xor
sbb
jmp
add
ds
vpsrlw
jne
pop
in
sbb
mov
pop
sbb
mov
lcall
test
jb
dec
scas
negw
mov
test
scas
mov
fndisi(8087
rcl
ds
push
cmp
push
mov
cmp
leave
out
test
mov
mov
and
lea
les
and
push
dec
dec
push
dec
aaa
xlat
xchg
rcrl
xlat
icebp
les
icebp
movsl
adc
jg
mov
in
sarb
test
mov
fwait
aam
scas
outsl
push
imul
js
mov
repnz
lret
push
push
push
fistpll
xchg
pop
lods
dec
cmpps
adcb
pop
out
xchg
insb
addr16
aam
es
mov
and
pop
stc
add
cmpsl
push
add
decb
or
loop
outsl
nop
inc
fisttpll
js
imul
fstpt
jl
cmp
xchg
int3
sub
filds
test
inc
lods
into
xchg
xchg
fsubr
mov
shrb
cmp
sub
mov
or
push
xor
pop
inc
std
adc
inc
xchg
jne
imul
cltd
sbb
mov
add
punpckldq
add
sub
fcomi
push
lea
dec
xorb
cmp
push
les
out
inc
xor
fstps
aas
inc
mov
int3
loope
cwtl
mov
js
xchg
jb
pop
aas
dec
iret
scas
test
insb
out
rcl
adc
aaa
sbb
movsl
out
sahf
sub
or
mov
xchg
xchg
lahf
mov
js
dec
lods
imul
cld
pushl
mov
cmpsb
mov
adc
rclb
mov
pusha
sbb
loopne
out
stos
cwtl
adc
test
lods
pop
pop
and
xor
xor
jne
lods
dec
sbb
cmpsl
lds
sbb
jns
push
sub
mull
lods
mov
sub
ss
inc
push
xchg
imul
je
inc
cs
mov
fwait
imul
inc
jo
push
jg
mov
mov
cli
push
je
mov
pmaddwd
xor
bound
mov
inc
push
fcmovnu
pop
in
sbb
cltd
xchg
xchg
mov
ja
add
mov
leave
push
je
inc
mov
mov
stc
sub
and
mov
dec
test
xlat
dec
adcb
in
dec
jb
add
iret
shl
fs
dec
mov
sbb
push
cmp
pushf
inc
push
scas
cvttps2pi
aam
cmp
mov
mov
bound
outsb
arpl
scas
mov
and
xor
aam
or
mov
cmp
add
loop
inc
sbb
mov
adc
cmpsb
sbb
adc
aam
stos
sbbb
ss
stc
inc
lcall
cmp
dec
jns
scas
insl
adc
insl
mov
aaa
and
aas
outsb
mov
xor
jb
pop
rclb
push
ss
and
inc
mov
fstpt
inc
or
xchg
repnz
and
mov
pop
xor
cmp
ljmp
data16
fdivr
in
stos
shll
and
out
pop
mov
in
ljmp
ja
push
rcrl
add
xor
iret
enter
repnz
xchg
jb
shlb
jl
add
js
and
repnz
bound
call
inc
ret
xchg
insl
mov
inc
mov
push
repz
call
inc
fs
scas
add
mov
fcoml
je
xor
std
scas
test
push
add
xorb
leave
test
xchg
pop
lea
xchg
inc
and
fistpl
pushf
subb
push
pop
addr16
mov
call
jno
cmpsl
or
adc
xchg
in
inc
and
lret
pop
aam
pop
jmp
in
mov
adc
mov
mov
pop
jae
adc
xchg
jg
and
dec
sbb
cmp
adc
and
jo
enter
push
sub
mov
imul
stos
and
mov
or
mov
stos
dec
or
bound
das
imul
sbb
add
pop
xor
jb
orl
mov
xor
iret
add
xchg
pop
ja
lcall
sub
or
jp
push
ljmp
cmp
xorb
jae
xchg
das
sti
fiadds
cli
loope
mov
pop
mov
je,pn
mov
cltd
cmpb
fisubrl
inc
cmpsl
jl
jb
mov
mov
inc
out
out
or
jnp
jo
imul
jge
dec
cltd
test
aad
pop
insl
mov
loop
iret
stc
mov
hlt
test
fbld
divl
and
adcl
pusha
ss
popf
add
ljmp
dec
adcb
mov
aam
mov
xor
xor
xchg
and
lcall
mov
add
pop
adc
cmp
cli
popf
and
std
lock
xor
orb
loopne
out
pop
mov
je
mov
out
mov
sub
paddusb
fsubl
sti
xchg
lds
cmp
add
fdivl
xor
inc
and
add
and
addb
jns
rcll
insl
out
and
sub
mov
cmp
out
movsl
lods
push
inc
and
ljmp
push
push
cld
dec
jmp
mov
inc
jmp
popa
data16
rcl
cmp
daa
mov
fcoml
mov
xor
xchg
pop
ds
jle
fmull
dec
push
popf
popa
aad
stc
adc
mov
inc
and
pop
in
sbb
aaa
xchg
mov
addr16
sbb
pop
or
xchg
pop
inc
xor
pop
push
loopne
xchg
test
push
cltd
data16
gs
pop
adc
loope
pop
mov
mov
ljmp
stc
mov
aam
jbe
mov
add
sbbl
out
pop
or
fbstp
out
xchg
inc
dec
jmp
cmc
je
pop
popa
and
shll
and
sti
fdivs
push
das
loopne
adc
out
mov
lret
xchg
popa
mov
mov
and
dec
and
pop
dec
cmpsl
mov
hlt
clc
sahf
rclb
imul
mov
enter
add
pop
mov
cmpsb
mov
mov
stos
loope
xlat
popa
cs
pop
mov
jns
out
push
dec
fdivrp
fcompp
xor
popa
push
outsb
mov
mov
push
dec
insb
lcall
scas
loope
movl
pop
cltd
push
dec
xchg
std
add
jno
clc
icebp
push
repz
sub
daa
sahf
loopne
xchg
cltd
pop
mov
das
scas
repnz
cld
inc
std
adc
adc
sbb
or
out
repz
adc
int3
ret
lea
push
cmc
jmp
enter
jge
cmp
adcb
das
xchg
pushf
pop
xlat
loop
scas
pop
pop
xor
adc
adc
adc
jmp
cmovs
orb
xchg
mov
mov
hlt
cmp
out
test
dec
mov
test
xchg
enter
xchg
cmc
ret
inc
insb
push
loop
loopne
fnstcw
lock
lods
ss
fs
cmc
xchg
or
pushf
add
mov
test
lahf
pop
mov
cmpsl
fwait
push
out
lret
mov
aad
push
fs
push
test
cmp
aaa
add
enter
jbe
adc
cmpsl
xor
jecxz
test
pop
adc
addr16
xor
pop
es
test
inc
outsb
xor
movsl
add
aad
sahf
mov
cmp
shl
pop
or
push
dec
xor
push
jb
xchg
dec
mov
jbe
lahf
or
cld
enter
pop
fsubrl
inc
xor
mov
in
add
mov
sbb
xchg
mov
lock
xchg
orw
and
ss
aas
lods
jno
stc
inc
push
sub
adc
push
inc
js
inc
into
mov
stos
mov
je
out
dec
mov
pop
push
stc
cmpsb
adc
xorb
add
shrl
push
mov
mov
lods
ret
clc
adc
dec
cwtl
stc
ljmp
jo
and
lahf
push
mov
or
mov
test
dec
iret
pop
push
mov
jns
sub
sahf
push
nop
cmp
xchg
arpl
jle
fnstcw
or
bound
add
in
add
adc
js
mov
fisttpl
jg
movb
pause
sub
js
rol
daa
daa
add
adc
jg
shlb
pushf
leave
inc
mov
test
adcl
sti
xchg
iret
sahf
pop
mov
or
sarb
cmp
push
ljmp
lret
pop
xor
pusha
cmp
add
pop
stos
xor
out
shl
add
mov
inc
pop
pop
test
push
or
sub
ja
push
call
ss
push
call
mov
xor
int
dec
sbb
imul
cmpsb
dec
inc
lock
rcr
inc
loopne
cmpsl
dec
dec
jg
push
lock
sub
xchg
cmovbe
and
mov
add
cmpsl
lahf
test
jmp
jo
loop
pop
mov
insl
shl
push
xchg
push
push
loopw
stc
dec
icebp
negb
pop
js
mov
aas
mov
sub
imul
in
testb
jo
insb
mov
jg
outsb
in
mov
shr
bound
dec
lahf
ficompl
pop
jg
pop
or
sub
pop
mov
pop
mov
jo
add
dec
adc
aas
jb
nop
mov
push
mov
loop
cmp
aad
daa
in
sbb
in
or
pop
cmp
jae
add
push
cmc
or
push
xchg
push
test
leave
cmp
bswap
pop
pop
std
mov
cltd
sub
lds
mov
out
push
and
test
ss
jp
cld
daa
mov
xor
push
pusha
jmp
cltd
inc
ljmp
pop
cmp
xchg
xchg
push
shll
sahf
cmc
mov
jne
dec
cli
fwait
repnz
pop
clc
xchg
lock
xchg
mov
mov
xchg
hlt
divb
add
movsl
push
pop
mov
jbe
xchg
cmpsb
into
push
pop
cmovp
mov
mov
in
mov
sbb
push
das
mov
cmp
mov
iret
xor
mov
aas
sub
xchg
dec
jmp
frstor
dec
mov
jmp
repnz
shl
ljmp
test
stos
sbb
cmp
sub
shl
cs
mov
mov
inc
sbb
mov
pop
jno
pusha
add
fimuls
lods
jl
pop
sub
jb
test
stos
mov
das
xor
lods
and
outsl
lea
mov
xchg
push
jne
ljmp
dec
in
and
daa
and
inc
push
in
add
adc
mov
mov
mulb
mov
std
ds
and
adc
repnz
xor
rcll
xchg
adc
arpl
cwtl
xor
xchg
mov
pop
adc
push
cmp
mov
xchg
hlt
popf
aad
jns
scas
inc
lock
jnp
xchg
mov
adc
testb
push
adc
ret
xchg
mov
scas
adc
push
add
movsb
lods
mov
jg,pt
test
leave
bound
pop
sub
imul
dec
add
inc
aas
jecxz
mov
cmpsb
push
movsb
adc
dec
or
aaa
adc
andl
rcll
ret
dec
cltd
test
push
cmp
bound
ficomps
sub
jmp
nop
mov
cli
es
es
icebp
jno
add
xchg
fdiv
test
fcmovnb
loopne
dec
xor
sub
and
repnz
jo
arpl
mov
aad
mov
xlat
add
lret
stos
mov
outsl
jbe
lret
lods
pop
xchg
inc
pmulhuw
sub
sahf
mov
add
sbbb
add
cmp
xchg
pop
jp
aas
jns
add
mov
into
adc
test
insb
bnd
jns
jp
sbb
or
lock
sbb
test
insl
shll
push
ds
movb
xchg
jne
inc
sbb
push
bound
lret
les
and
mov
cmp
cs
xchg
dec
push
add
shlb
inc
xchg
cld
lock
aas
and
pusha
ljmp
xchg
popf
bnd
es
test
lods
cld
sub
or
xchg
imul
rolb
xchg
jo
xchg
adc
int
dec
jmp
mov
shrb
jns
sbb
xchg
outsb
insb
or
aad
push
subb
dec
sub
hlt
cmp
movsb
jbe
pop
gs
mov
shl
enter
ret
sbb
cltd
cwtl
arpl
loope
data16
movsl
je
xor
add
sbb
inc
push
scas
sbbb
call
out
pop
mov
cmpl
cmp
ljmp
sub
sub
outsb
testl
test
rolb
ds
push
push
sbb
das
and
outsl
mov
sbb
incl
popa
test
addb
cld
test
cwtl
dec
or
rcl
sub
orl
mov
jb
daa
test
mov
pop
scas
ds
xchg
int
fistpll
sbb
adc
ds
jae
cli
mov
out
cltd
sub
xchg
aam
rolb
xor
fiadds
fstpt
adc
int
lret
adc
cmp
push
clc
sub
dec
cmp
pop
jnp
ss
je
or
je
cmpsb
ret
pop
mov
insl
pop
and
ljmp
cltd
aam
push
add
in
xor
jmp
insb
out
mov
xor
int
push
push
mov
dec
movsl
sti
out
imul
or
mov
fistpl
test
imul
xor
mov
or
stc
in
cs
mov
fnstsw
pop
sub
xchg
inc
pop
les
bound
rcrb
setbe
div
fldl
or
into
insb
popa
mov
aam
add
push
mov
jecxz
vpshuflw
or
adc
out
pop
movsb
or
inc
lahf
mov
ret
jnp
mov
or
lcall
mov
mov
xchg
sub
addl
and
cmp
mov
gs
je
cwtl
mov
addr16
xchg
sar
ja
scas
lea
dec
adc
mov
in
cmpsb
stc
in
cmp
push
cs
ss
sbb
sbb
jmp
scas
daa
jne
or
movsl
insl
or
pop
adc
mov
inc
int3
out
xchg
jg
xchg
cwtl
pop
andl
mov
loop
jg
pop
and
mov
adc
leave
inc
in
push
mov
arpl
sbbl
fisubrl
push
and
sub
pop
cmp
mov
stos
inc
sub
add
mov
sub
nop
fwait
inc
mov
mov
arpl
inc
lods
push
mov
insb
aaa
mov
and
and
insb
xor
sbb
shl
ljmp
push
or
shr
mov
adc
sub
inc
cmp
and
outsl
push
test
ret
les
test
mov
ret
cmpsb
jns
js
xchg
rcl
into
cmpsl
mov
jle
fbstp
push
leave
sbb
aas
insb
movsb
or
pminsw
or
std
cli
ja
bound
mov
or
xchg
jbe
rcrb
mov
xor
fnstsw
cmp
mov
mov
in
subl
inc
sub
insl
shlb
push
xchg
shlb
adc
inc
and
xor
loop
push
cli
imul
add
subb
and
inc
mov
leave
cmp
add
push
and
xchg
adc
loopne
sbb
das
test
gs
ficompl
xlat
inc
xchg
cmp
and
push
inc
and
int3
mov
jnp
mov
or
jle
cmc
outsb
cmp
and
les
xchg
out
rorb
mov
pop
int
push
and
and
jge
mov
xor
aad
mov
dec
xchg
lss
pop
cmpl
int3
popa
pop
push
hlt
inc
pop
dec
adc
ret
or
in
xchg
jg
pop
push
nop
repz
fcomps
mov
insl
or
pop
rcl
push
cmpsl
in
xor
lds
pop
out
arpl
aaa
ss
sbb
scas
jmp
xor
push
shr
call
dec
mov
lcall
aam
ds
out
std
xor
lret
jns
xor
pop
ror
adc
popf
xchg
jp
cltd
ficoms
sahf
xor
addr16
mov
pop
pusha
mov
sbb
js
fwait
push
sub
push
push
call
sahf
imul
push
and
add
xor
jo
lods
mov
sub
mov
adc
inc
push
mov
xor
fidivl
es
xchg
les
dec
hlt
xlat
mov
sub
cmp
std
or
jp
cmp
frstor
adc
inc
adc
pop
imul
out
cld
pop
out
mov
push
adc
pop
adc
rcrb
aad
add
xchg
cwtl
jbe
add
xchg
xchg
mov
or
dec
and
mov
pop
nop
xor
mov
sub
jmp
adc
push
test
jo
and
mov
adc
addr16
xchg
insl
add
sbb
jo
lock
push
ds
add
pop
outsl
lret
inc
mov
jbe
sbb
je
fadd
sbb
add
or
addr16
in
push
pop
arpl
loopne
lds
xor
cmp
pop
adc
jp
inc
inc
lock
daa
rcr
xchg
push
pop
mov
das
jns
sbb
dec
lahf
aad
or
fcomip
lods
adc
add
mov
xor
jge
mov
jns
xchg
fcmovbe
aaa
test
pop
cmp
pop
ljmp
gs
mov
outsl
nop
int
movsb
ret
sub
dec
nop
cmp
fwait
jp
push
and
ljmp
mov
and
das
fists
add
cmp
add
xor
sub
js
mov
cmp
pop
roll
pop
loopne
fildl
mov
in
outsl
lret
mov
jmp
lret
stc
lahf
mov
notl
mov
push
push
xchg
stc
cmc
stc
dec
add
jae
xor
and
mov
add
add
lret
lock
mov
mov
adc
or
loop
xor
and
mov
jl
aas
out
xchg
cmp
cwtl
add
int
mov
xchg
add
faddl
cmp
and
dec
lods
push
fldt
divl
les
fidivrs
cld
std
add
ljmp
adc
js
push
hlt
es
aaa
jecxz
sub
push
loop
push
punpckhdq
or
shlb
cmp
dec
scas
push
or
sub
mov
movsl
jne
addb
xlat
pop
pusha
leave
das
ljmp
and
test
adc
or
pcmpeqw
test
sub
jge
shlb
movsb
dec
scas
sbb
outsl
cmc
cmp
jl
es
mov
ja
mov
jbe
jmp
and
mov
and
daa
add
call
cmp
adc
mov
les
and
dec
xchg
jle
adc
sub
test
cmp
cli
mov
je
nop
mov
cmp
mov
mov
jb
hlt
cmp
adc
sbb
pop
out
mov
xchg
cltd
popa
jecxz
push
xor
mov
es
sub
sub
add
dec
adc
test
in
mov
sbb
insl
add
jmp
pop
pop
or
js
adc
sbb
movsl
fbstp
mov
popf
sbb
mov
arpl
aam
jb
mov
scas
mov
add
mov
jo
scas
sub
js
inc
mov
sub
lret
add
xor
das
xor
xor
and
and
ret
insl
xor
std
jo
xchg
mov
and
cmc
xchg
movsb
inc
jb
jecxz
jg
xchg
push
jge
ret
cmp
test
mov
out
mov
xor
cli
ficompl
inc
sbb
add
mov
ret
jge
mov
iret
cmp
xchg
sbb
dec
xchg
dec
xor
hlt
sub
cmpsb
xor
gs
pop
ljmp
jl
fdivr
shll
dec
push
je
cwtl
add
dec
mov
in
dec
lock
mov
jp
movsl
fs
mov
push
jle
ficoms
and
mov
in
or
xchg
sub
idivb
pusha
loope
jg
dec
or
push
push
pusha
cltd
push
sub
pop
lahf
cmp
roll
sbb
or
xor
xor
data16
gs
pushf
sub
aas
push
cmpsl
ss
push
fisttps
aas
ljmp
insl
xchg
push
addr16
add
je
std
mov
cmp
loope
mov
iret
daa
push
ds
sbb
lea
cmp
jmp
cmp
call
ret
inc
cwtl
roll
or
outsb
xchg
fmull
repnz
stc
mov
lods
in
dec
outsb
xor
movsl
scas
jne
lea
lret
adc
movsl
add
sbb
int3
inc
adc
inc
or
xlat
cltd
push
scas
loopw
or
push
jae
xor
sbb
pop
inc
pop
push
jg
outsl
mov
mov
shll
or
sar
and
dec
jne
mov
lods
popa
inc
clc
decl
aaa
xor
xorl
xchg
sub
lods
jne
pop
cmpsb
sbb
movlps
push
jne
inc
scas
mov
lret
call
imul
and
shrl
es
inc
loope
stos
cmc
sbb
xchg
scas
enter
mov
test
jb
lea
or
test
sbb
insl
or
fnstenv
mov
mov
adc
lret
insb
call
in
loop
movsb
test
pushf
test
cmpsb
pandn
mov
pop
cs
push
xchg
cmp
arpl
push
fsubl
cmp
mov
xchg
fsubrp
jns
sub
mov
clc
shll
dec
int3
jo
shr
adc
inc
inc
mov
jae
cwtl
cmp
push
outsb
dec
dec
decl
mov
pop
adc
mov
in
loop
or
jg
jno
jl
loope,pn
popa
dec
data16
mov
insl
sbb
out
and
jns
sbb
loope
cmpsb
out
and
js
adc
je
ja
scas
mov
call
js
and
dec
bound
xlat
mov
mov
mov
mov
mov
mov
in
and
mov
mov
cmpsb
xor
shlb
out
sub
mov
in
jmp
out
adc
fimuls
inc
or
mov
fsubl
mov
movb
sbb
xor
xchg
mov
push
jle
pop
js
or
mov
out
xchg
xor
jge
add
cmp
test
cmc
andb
inc
mov
aas
mov
into
and
addb
push
out
xchg
sbb
jne
enter
mov
sub
das
jbe
stc
popa
or
repnz
lahf
adc
pop
imul
mov
push
adc
das
imul
mov
and
lods
fisttpl
int
int
lret
mov
jp
push
adc
cmp
inc
jne
cmp
fidivrs
addr16
imul
out
pop
push
aam
xchg
int
sbb
sub
xor
rclb
pushf
and
inc
pop
test
nop
inc
sub
test
dec
rclb
repnz
lea
movsb
outsb
mov
test
pop
add
mov
push
jbe
or
mov
cli
mov
repz
sbb
scas
pushl
xchg
in
adc
pop
daa
lods
lahf
clc
push
or
clc
and
lods
call
orl
cwtl
adc
es
add
adc
add
mov
jnp
in
or
hlt
bound
mov
pushf
push
mov
repz
xchg
cmp
mov
fiadds
mov
jb
add
fmul
mov
ss
push
xchg
jge
shrl
inc
insl
or
xor
aam
sbb
rolb
or
ret
mov
add
add
and
jne
out
imul
inc
mov
jg
inc
mov
fs
and
dec
nop
xlat
mov
mov
xchg
aaa
or
cmp
adc
jae
adcl
in
cmp
cs
dec
lock
xlat
test
pop
inc
push
xor
add
popf
pop
gs
sub
or
inc
unpckhps
or
loopne
or
adc
cmpsl
out
cld
pusha
pop
outsb
mov
pop
dec
mov
jge
dec
cmp
sbb
pop
movsb
mov
popa
mov
repz
xchg
jo
inc
push
cmp
jns
fs
jl
out
fdivr
push
cmpsl
ret
pusha
loop
dec
sub
loope
enter
das
daa
xchg
pop
adc
jmp
jp
jg
dec
add
ret
mov
xchg
ja
cmc
push
loop
push
ja
repz
cmp
inc
inc
decb
xchg
out
sub
iret
test
inc
and
lods
iret
and
mov
pop
repnz
ficomps
inc
inc
stc
iret
es
out
jno
cmpsb
adc
mov
aaa
pop
out
mov
loop
cmp
pop
adc
enter
jge
aaa
and
pushf
sub
add
je
xchg
push
push
cmc
xchg
and
subl
out
lea
push
sub
scas
mov
ficompl
fidivrs
lea
xor
xchg
pushf
notb
rcl
xor
adc
pop
jbe
jne
test
inc
mov
xchg
insl
jae
pushf
daa
movsl
adc
mov
adc
or
cld
js
push
movsl
mov
add
and
jb
cmp
and
cwtl
pop
loop
add
rolb
out
jmp
push
cmpsb
arpl
call
inc
push
fidivl
sbb
inc
cwtl
shr
pop
aam
lret
xchg
dec
rclb
inc
arpl
cld
pop
ja
aas
sub
push
cmp
inc
mov
jo
pop
fistpl
stos
sub
shl
push
cli
push
mov
cld
xor
cmpl
xchg
das
pop
push
xchg
push
mov
es
mov
sbb
xor
lret
insb
jbe
add
pop
mov
scas
js
cmp
lret
imul
mov
jmp
dec
daa
inc
mov
xor
sbb
inc
aad
xor
push
pop
push
cmp
dec
nop
and
aaa
ljmp
das
std
lahf
gs
test
iret
outsb
jg
outsl
pusha
jns
mov
jbe
testb
test
aaa
xor
mov
sbb
movsb
aas
xchg
ljmp
movsl
movsb
repnz
xchg
mov
add
cmc
pop
out
sub
sti
in
imul
or
pop
icebp
aaa
xchg
ja
adc
cmp
mov
push
mov
jg
push
cmp
movsb
rcll
cli
lret
jl
out
pop
int
xchg
cmpsb
add
cmpsl
rcrb
aaa
fcmovne
adc
test
loopne
push
lea
xor
leave
mov
cwtl
idivl
push
insb
cmp
fistps
dec
push
xlat
pop
push
leave
pop
shll
xor
dec
mov
sbb
test
xor
ss
xlat
dec
mov
stc
and
xchg
xor
fnstcw
rorl
loope
and
outsb
ja
in
ss
add
lds
mov
pop
test
mov
mov
in
cmp
imul
imul
adc
ret
cmp
push
xchg
in
das
enter
das
push
fldt
scas
jno
and
sub
test
jg
stos
imul
or
in
sbb
mov
je
inc
stos
mov
cwtl
lcall
cld
movsl
cli
int3
fucomi
lahf
push
popf
sub
in
mov
and
mov
stos
and
bound
mov
cwtl
pop
dec
cmc
push
mov
push
push
xor
rorl
mov
inc
adc
inc
add
or
jle
sbb
xchg
push
add
inc
or
and
xor
arpl
daa
sub
mov
push
stc
fwait
jl
daa
mov
push
aam
aas
lea
mov
repz
pop
outsb
xchg
cltd
sbb
inc
aaa
or
mov
mov
push
adc
jl
xchg
mov
iret
das
fstl
cltd
mov
shlb
mov
or
sub
addr16
mov
pop
sub
jns
xor
movsb
mov
sub
lahf
insl
push
jmp
ficoms
sti
cld
adc
into
sar
inc
cmc
adc
inc
into
cli
cmp
fwait
lahf
subb
cmpsb
es
and
adc
mov
mov
sahf
sbb
mov
outsb
hlt
or
iret
mov
hlt
je
mov
es
imul
jp
ret
jbe
mov
dec
int
arpl
xchg
scas
jecxz
add
sarb
pushf
push
shll
fnstcw
sbb
in
in
fisttpll
add
popf
or
dec
xor
sti
call
mov
mov
mov
repz
cmpsl
outsb
outsl
inc
cmc
dec
das
aad
or
rolb
iret
mov
js
lods
pop
loope
xor
sub
push
push
xchg
xor
orl
xchg
je
scas
mov
loopne
std
lods
xchg
push
xchg
repz
cmp
pushl
not
loop
pushf
fwait
push
and
push
inc
lret
add
mov
xor
jns
push
out
cmp
movb
mov
xchg
fwait
loop
pop
stos
and
test
xchg
cltd
pusha
xchg
out
mov
dec
das
mov
sbb
mov
mov
mov
mov
inc
fadds
ret
test
push
rclb
pop
cs
dec
adc
shll
out
cmpsw
adc
fisubrl
cmp
inc
xor
jge
pop
and
aas
mov
loopne
pushf
std
scas
dec
out
or
adc
xor
jmp
sbb
out
or
mov
cmc
or
lcall
or
jecxz
int
call
lret
sbbl
cmp
mov
xlat
sub
adc
pop
cmpsl
fists
insb
or
xchg
mov
enter
mov
jge
stos
xchg
push
je
mov
dec
mov
sub
test
mov
in
mov
rcrb
push
mov
fmull
dec
lret
add
sahf
fs
les
mov
push
in
mov
xor
mov
pop
dec
imul
aas
mov
repnz
jl
shlb
outsl
das
fcoms
jnp
cmp
das
and
lcall
popl
daa
int
push
movsb
mov
or
xchg
sub
dec
and
and
cld
sbb
xor
lock
sbb
outsb
xor
push
jle
lods
add
mov
rcll
out
mov
cmp
popa
mov
jmp
cmp
ret
in
jns
cld
or
mov
les
xchg
ljmp
aaa
fwait
cltd
inc
sahf
cmc
call
mov
xchg
cmp
fsubp
fisubrs
push
push
or
ficoml
rolb
arpl
pop
inc
in
xchg
sub
sti
jno
xchg
push
loop
xchg
dec
icebp
dec
jg
out
and
jg
mov
dec
lea
imul
jmp
out
scas
cltd
loopne
imul
cld
movl
pop
scas
fcmovbe
std
pop
test
mov
pop
sub
lret
jo
movsl
or
pop
movl
push
mov
shlb
push
in
repnz
std
sbb
cli
add
xchg
mov
sti
stos
jl
or
xor
pop
jae
out
nop
ds
or
fadds
aaa
cmp
pop
bound
lret
fisubrs
adc
or
outsb
mov
fwait
mov
add
out
stos
xor
and
xor
clc
call
aam
sub
in
lds
mov
push
testl
data16
call
outsb
add
pusha
xchg
ljmp
fisubrl
mov
lock
loop
mov
mov
ret
mov
loope
add
inc
cmp
sub
jmp
mov
lods
push
fs
add
js
popa
xor
sarl
aam
jae
mov
jno
rol
inc
pushf
and
jp
inc
scas
mov
test
fidivrs
pop
arpl
cmp
stos
mov
mov
fs
out
push
iret
jo
jbe
mov
jmp
addr16
lret
sbb
jne
sbb
icebp
cmp
add
fbld
jno
lcall
das
ds
mov
mov
gs
das
or
imul
fisubs
in
ret
repnz
out
in
lods
or
or
adc
inc
daa
daa
mov
xor
fwait
xchg
and
hlt
loop
icebp
pop
test
add
lret
divl
sbb
cmp
dec
sub
push
push
ja
dec
adc
je
idivl
cmpsl
sbb
sbb
repz
adc
jae
std
pop
mov
lcall
stos
inc
sub
fdivs
ljmp
mov
push
pushl
mov
jp
cmp
stos
shll
pop
fidivl
cld
or
cld
lea
mov
cmp
jecxz
aas
arpl
push
sub
fsubs
adc
cmc
mov
test
pop
push
cmp
add
inc
out
jl
jmp
push
inc
rcrl
orb
sub
push
lods
rorb
sbb
mov
mov
negl
scas
in
xchg
mov
cmp
sub
popf
xchg
enter
sub
pop
sar
push
data16
dec
mov
push
xor
in
test
andb
sti
shrb
pop
inc
pop
pop
or
jg
sub
push
push
das
mov
loop
dec
stos
loopnew
cld
scas
jae
cmp
shl
out
daa
pop
dec
shl
mov
into
and
xchg
rolb
mov
adc
loope
dec
adc
xor
out
mov
rcrl
fmuls
sub
xorb
jbe
mov
dec
mov
outsb
out
add
inc
call
imul
es
or
fs
not
xchg
test
and
or
push
lods
cld
stos
cmp
insl
mov
jle
inc
push
ret
add
pop
ret
cmp
les
cli
es
clc
cltd
lcall
pop
pushf
xlat
pop
rorl
mov
xchg
hlt
out
jp
inc
popf
xchg
push
repnz
push
icebp
mov
rorl
dec
notl
cwtl
sbb
dec
outsl
xchg
pusha
rorl
addr16
popf
mov
popf
dec
sti
sub
js
movsb
lret
inc
test
jne
nop
inc
sbb
fidivl
mov
out
add
loop
int
cmp
das
xor
sbb
in
jmp
dec
aad
call
jno
fs
mov
sub
sub
mov
xor
inc
push
xlat
into
sbbb
push
rcrl
push
sub
cmpsl
lret
sbb
inc
mov
imul
sti
sti
js
mov
sub
push
lea
mov
sub
sub
scas
or
cmpl
vmwrite
mov
jne
mulb
in
or
xor
adc
repnz
push
inc
mov
dec
push
push
jg
adc
lcall
xor
dec
es
pop
mov
adc
cli
jno
cmp
push
ja
xchg
arpl
in
sub
cltd
dec
xlat
add
nop
mov
loopne
mov
scas
es
mov
out
push
xchg
stos
sbb
ds
shll
jnp
add
xchg
push
push
call
jne
mov
mov
push
loop
add
add
dec
in
or
add
dec
add
or
aas
test
xchg
repnz
pcmpgtb
mov
inc
pushf
out
sbb
fld
aad
fstpl
sub
jl
cmp
insb
out
mov
test
adc
std
fxch
dec
or
xor
bound
rorb
je
sbb
dec
add
mov
test
stc
xor
in
outsl
fidivrs
pop
daa
jnp
loop
nop
push
icebp
mov
add
push
adc
int
lret
ss
jne
mov
pop
mov
mov
adc
push
out
inc
sub
push
cmpl
out
add
ficoms
or
lret
out
rcrl
popf
lds
add
inc
call
add
jns
gs
or
xchg
xchg
popa
lahf
lret
stc
pop
push
icebp
aas
cmc
sub
mov
std
out
mov
xchg
test
inc
cld
mov
add
cmp
push
push
mov
xchg
pop
out
scas
shrb
outsb
mov
movsb
mov
in
stc
sub
add
call
push
pop
pop
inc
add
sahf
addr16
cmp
inc
lret
sbb
xor
rcll
lock
out
jb
pop
sahf
pop
cmp
push
xchg
dec
mov
inc
adc
jo
scas
push
out
pop
dec
fwait
xchg
push
enter
cltd
jo
jnp
sbb
add
cld
mov
add
mov
into
xor
xchg
fdivrp
xchg
sahf
dec
das
enter
adcl
scas
cmp
sbb
into
push
pop
adc
sub
aaa
pop
cmp
pop
stc
das
push
outsl
ret
inc
cmpsl
sub
dec
push
sti
andb
and
mov
lods
sub
adc
xchg
mov
test
pop
int
stos
jge
in
dec
pop
das
mov
cwtl
jl
sbb
or
push
cld
or
pop
pop
das
pop
sbb
aam
je
xor
xchg
leave
or
inc
scas
cmp
shl
sbb
mov
xor
push
push
jns
dec
mov
mov
mov
jae
mov
pusha
xchg
xor
lcall
inc
stos
scas
mov
test
pop
lcall
xor
es
mov
cmp
jo
inc
fimull
jp
mov
dec
and
test
out
and
je
jnp
xor
pop
rcrb
pop
jns
mov
and
pop
lea
imul
and
mov
data16
stos
jl
aad
test
push
xchg
out
sbb
sti
repnz
jo
in
scas
mov
xchg
jle
popa
sar
or
inc
les
std
ret
ss
fsqrt
cwtl
push
jnp
ret
shrl
mov
push
mov
push
and
adc
insl
cmp
or
xchg
or
push
cmp
out
arpl
or
pop
add
sbb
jbe
lcall
call
js
cmp
fs
je
cmp
test
leave
mov
dec
loop
lods
das
rcrb
xchg
andb
jae
loopne
mov
mov
jbe
mov
data16
adcl
lods
aam
in
sub
stos
mov
leave
and
sub
pop
subb
mov
push
mov
jb
xchg
add
adc
test
ds
or
bound
std
cwtl
popf
dec
or
je
inc
add
sub
jmp
mov
insl
sbb
jo
sbb
jo
sub
test
stos
repz
jns
cmp
loop
ja
xor
roll
cmp
push
movb
cli
scas
xchg
pop
mov
out
sbb
out
cmpsl
xchg
sub
nop
adcb
ffreep
and
cmp
dec
rclb
inc
adc
inc
arpl
sbbl
lods
jl
xchg
pop
loope
sti
cmpsw
cmp
mov
fsubr
push
add
repz
movsl
dec
jne
mov
jecxz
inc
dec
xor
xor
jbe
sbb
sbb
sbb
int3
testb
pop
loope
ret
dec
pusha
xchg
adc
fwait
arpl
inc
or
and
or
push
xchg
xchg
jl
test
icebp
jg
xchg
cmp
mov
inc
xor
mov
xchg
inc
mov
push
in
outsb
testl
jl
sahf
jns
add
or
in
std
xchg
fldz
arpl
and
std
cltd
mov
cmp
gs
sbb
js
aas
pusha
xchg
nop
xchg
pusha
push
add
inc
xchg
add
pop
popf
cltd
pushf
daa
cmpsb
jle
test
inc
addl
mov
repz
sub
mov
insb
cli
dec
fdivr
cld
insl
mov
cmp
and
shrl
loop
xor
mov
push
ja
into
sub
lcall
data16
sahf
mov
xor
js
inc
inc
push
mov
sub
mov
leave
inc
sub
pop
xchg
lds
cltd
movsb
cmpb
js
shll
test
aam
pop
sti
js
adc
ljmp
lods
fidivs
test
insl
cmp
in
add
pop
imul
popa
xor
push
mov
addr16
push
jmp
fldl
jno
andl
and
dec
lods
xchg
outsl
mov
pop
pop
mov
inc
or
xchg
xchg
or
cs
into
cmc
mov
addr16
pusha
ljmp
call
inc
mov
sbb
arpl
arpl
pushf
cmp
cmp
rolb
cltd
rcl
push
xlat
lods
ss
push
lcall
jno
popf
aaa
pop
and
sahf
jle
mov
ds
mov
out
pop
or
cmp
cmp
rcll
movb
dec
adc
xchg
push
mov
pop
enter
mov
lcall
mov
sub
pop
in
xchg
mov
inc
cmp
or
adc
daa
push
sar
mov
lods
fcmove
or
xchg
lds
cmp
mov
xor
test
out
mov
int
lods
dec
addl
dec
xchg
mov
or
mov
mov
lods
test
and
add
mov
push
jecxz
call
xchg
sbb
sbb
inc
loop
arpl
xorb
cmpsb
jns
shl
dec
imulb
push
es
jl
jo
mov
je
lret
xor
incb
clc
shll
xchg
cmc
or
es
mov
ret
sub
push
mul
iret
sbb
aam
push
add
and
repnz
das
adc
cwtl
sub
add
es
sti
sub
pop
cltd
inc
test
jae
pop
lcall
mov
call
lret
call
xor
xchg
xchg
aam
mov
add
mov
or
lock
inc
cmp
mov
pop
dec
push
inc
pop
pop
jmp
pop
bound
dec
cltd
add
xchg
push
into
or
pusha
adcb
test
inc
loope
mov
mov
pop
push
int
and
sti
aas
xchg
add
in
push
rcr
ds
in
ss
stos
xor
outsl
loop
and
jae
ret
and
mov
push
sbb
mov
lret
mulb
in
cmp
ret
or
in
cmp
gs
mov
push
ds
xor
dec
das
cmp
ja
out
xchg
inc
repnz
sbb
movsl
test
int3
jb
push
pusha
nop
nop
mov
bound
enter
add
sahf
cli
repz
mov
stos
jmp
or
sbb
mull
jmp
jge
shll
jno
pop
xor
dec
push
lea
ret
mov
push
xor
inc
addr16
outsb
inc
add
pop
ficoml
sbb
or
and
and
cmp
mov
lock
adc
arpl
enter
mov
xchg
pusha
sti
mov
or
sbb
dec
and
adc
outsl
std
imul
xlat
scas
sbb
push
mov
test
ja
xor
aaa
stos
sarl
pop
lret
push
lret
or
sbb
das
cmpsb
into
adc
lcall
pop
cmpsb
daa
repz
jae
mov
and
pop
daa
ds
add
sub
addr16
push
adc
imul
cmp
push
popf
scas
xor
adc
fistpll
ds
cmp
jg
lds
or
es
into
or
rcrl
leave
add
jb
push
push
cmc
inc
std
popf
xor
loope
push
push
mov
sub
ja
add
sbb
inc
outsb
push
sbb
movsl
fwait
sub
inc
dec
sbb
push
mov
int3
lock
jle
mov
je
jecxz
xchg
fnstcw
mov
pushf
jg
add
cmc
shll
dec
lds
mov
shlb
dec
inc
stc
dec
cmpsl
xor
xor
es
push
ret
bound
cltd
cwtl
jnp
jmp
pop
shll
adcb
xor
int
or
xorl
fmull
std
cmc
push
dec
loop
mov
aaa
rorb
xor
or
mov
je
popa
jecxz
and
stos
adc
js
and
inc
cli
or
mov
cmp
adcb
test
jmp
cs
or
sub
push
jge
sbb
lahf
jle
inc
xchg
jge
dec
mov
adc
xchg
das
sahf
jp
sub
jge
imul
mov
xchg
sub
loope
insl
sub
pop
cmp
add
adc
cmp
or
into
adc
iret
in
adc
ss
adc
insb
and
test
mul
add
jnp
add
mov
ss
or
mov
lret
push
sarl
int
mov
mov
adc
or
push
ja
addr16
jno
pop
jge
push
mov
cmp
movsl
jmp
in
adc
fcompl
xorl
mov
mov
adc
arpl
inc
das
cmp
sbb
push
push
lock
mov
adc
rcl
rolb
insb
mov
jle
lods
xchg
sub
aas
xchg
scas
stc
scas
nop
mov
sbb
dec
xchg
arpl
or
call
mov
out
in
sbb
or
es
enter
imul
rol
sbb
xchg
add
mov
dec
lods
cld
and
xlat
sbb
and
mov
das
popa
ss
mov
sti
das
add
inc
mov
iret
flds
jbe
mov
gs
cmp
jbe
add
cmp
pop
fucomip
mov
and
inc
fidivrl
inc
and
test
xlat
insl
sbbl
adc
mov
testl
jbe
out
sub
iret
pushf
addr16
ror
test
xchg
xchg
push
mov
insl
lcall
inc
xor
jb
add
dec
dec
xchg
fistl
sahf
aad
sbb
add
and
scas
scas
test
ret
pop
sbb
xchg
cmpsl
adc
js
jmp
mov
popf
jp
or
mov
enter
stos
test
inc
jno
test
aad
jne
repz
shll
loop
pop
xchg
sbb
mov
xor
js
pop
iret
xchg
cmpsl
movsl
out
mov
mov
jecxz
nop
stc
sbb
adc
fcompp
add
test
xor
std
jp
xchg
cmpl
stc
adc
xchg
adc
nop
ret
das
fsts
inc
out
sub
shrl
push
mov
inc
sub
js
icebp
imull
xchg
sub
mov
adc
repz
xor
push
xchg
mov
rolb
ds
or
sub
cmc
stos
push
dec
clc
dec
inc
enter
into
cmp
jecxz
sub
cmp
xor
popa
adc
movsb
jecxz
int
negl
aad
adc
inc
scas
inc
adc
inc
mov
inc
jno
cmp
jns
inc
scas
movsl
add
negb
inc
adcl
xchg
push
ds
test
inc
into
test
xchg
push
fnstcw
pushf
scas
les
sbb
out
icebp
scas
call
cli
or
xchg
fwait
negb
std
sbbl
mov
lret
mov
mov
mov
lds
xor
hlt
push
faddl
out
dec
and
inc
sub
cli
push
pop
js
test
inc
sub
std
out
cmp
dec
push
and
adc
push
mov
mov
mov
loop
mov
fdiv
inc
pop
pop
mov
das
popa
jmp
or
mov
movlps
pop
dec
cmp
jge
aas
cmp
aad
imulb
mov
aas
adc
cmp
mov
mov
sbb
cmp
inc
mov
insb
jle
jle
fucom
es
xchg
mov
fcom
sub
cwtl
dec
js
aas
jmp
mov
rclb
daa
outsb
pusha
and
das
cmp
addps
lcall
cmp
dec
inc
imul
fstl
shrb
cltd
out
dec
sbb
movsl
outsb
jo
inc
push
ds
mov
fisttps
jo
les
fptan
jl
pushf
inc
cmp
sub
sbb
icebp
sbbl
outsl
mov
lock
push
cli
gs
jl
pop
arpl
out
les
popa
pop
push
or
mov
pop
psubusw
imul
mov
orl
enter
dec
xchg
pop
inc
cmp
test
cmp
mov
into
scas
test
push
insl
ret
jnp
pop
jnp
jnp
sub
sub
and
pusha
enter
add
in
fildll
jp
pop
loopne
dec
aas
mov
mov
mov
push
mov
rorl
cld
mov
mov
and
ds
ret
gs
fs
hlt
push
stos
push
add
aam
pop
sbb
out
push
loopne
std
xorb
inc
int
and
cmp
lahf
gs
pop
lods
dec
fnstenv
add
inc
lock
push
repz
imul
jne
pushf
bound
jae
imul
addl
mov
les
xor
loope
scas
cmc
lods
js
in
jmp
mov
movsl
std
xchg
inc
add
xchg
lods
leave
ficoms
jns
popa
inc
dec
sbb
mov
rcrb
cli
imul
scas
inc
fnstsw
xchg
or
adcb
js
sti
js
jno
xchg
aaa
or
inc
mov
rcll
cltd
fs
insl
jno
in
les
clc
xor
movsb
sbb
frstor
cmp
in
addl
ficoms
popw
and
inc
lods
loope
push
dec
aas
add
or
xchg
jb
andb
fdivl
and
adc
and
mov
loope
nop
js
mov
xor
enter
test
cld
leave
push
jl
xor
adcl
clc
cmp
dec
cmp
dec
or
or
and
dec
orl
dec
push
xchg
test
test
ret
jae
icebp
out
xchg
ss
add
test
lock
xchg
test
imul
in
cmp
adc
mov
fdivr
fistpll
dec
sbb
add
ljmp
stos
and
fstp
cmp
shr
inc
sub
jo
and
jecxz
xor
orl
inc
inc
sti
xchg
clc
pop
xchg
xchg
adc
pop
movsl
and
xor
insb
pop
das
test
movsl
inc
adc
outsb
sub
mov
sbb
bound
insb
sub
xorl
jge
mov
jne
lock
repz
shrb
add
xor
mov
or
nop
jae
lods
cli
dec
addb
jbe
cli
mov
aas
mov
pop
jo
xorps
les
or
clc
inc
dec
testl
adc
in
inc
fcomp
sub
xchg
sub
dec
lcall
sub
fisttps
lahf
ja
je
pop
loope
cmp
mov
arpl
fmulp
add
test
fcmovu
loopne
pusha
sub
aas
xlat
mov
cmp
lea
fidivrs
mov
dec
add
pop
add
mov
inc
hlt
sbb
shlb
cmp
dec
int3
adc
and
fstpt
mov
lock
pop
leave
mov
ret
adc
mov
mov
iret
lds
cs
sbb
inc
jmp
sarb
mov
mov
mov
hlt
dec
mov
shlb
stc
shlb
test
and
jnp
ret
and
xchg
fmull
adc
mov
int
mov
das
jg
push
cmc
fwait
push
and
in
push
sub
pop
jne
jae
pushf
flds
cmp
lret
out
or
fmul
mulb
scas
scas
xchg
dec
inc
outsl
cs
dec
sub
xchg
cltd
arpl
fucomi
inc
add
or
movsb
rcll
cld
ret
cmp
aas
add
mov
mov
je
fdivrl
push
mov
cmp
xchg
mulb
outsb
ja
lea
sti
pop
je
lds
xor
sbb
xchg
xchg
jecxz
outsb
loopne
mov
int3
dec
ss
repnz
cwtl
test
fwait
dec
ret
lock
mov
shrb
jge
mov
outsl
test
popa
jae
dec
mov
jge
gs
mov
mov
shll
cmp
pop
sbb
fstpt
aaa
lahf
mov
mov
test
rorb
outsb
daa
pop
sub
cmp
or
in
push
inc
outsb
mov
das
mov
xrelease
rcll
lret
xor
or
mov
aaa
pop
stos
and
mov
xor
mov
lahf
cltd
cwtl
in
call
add
mov
dec
ss
pushf
or
add
xchg
pop
sub
imul
scas
lahf
dec
sub
add
xor
arpl
scas
jecxz
test
xlat
jge
out
inc
lret
cwtl
cmpsl
ficoms
mov
jae
lock
cld
jbe
adc
jno
mov
shrl
cwtl
test
and
inc
je
arpl
pop
aad
xor
lcall
jbe
fwait
push
test
scas
mov
adc
std
repz
add
repz
sub
sub
sub
sbb
mov
and
dec
imul
cmp
jle
js
out
push
cmp
mov
xchg
ds
xchg
sbb
and
pop
adc
and
mov
int3
xchg
push
enter
dec
stc
shlb
fildll
aad
and
lret
cmpsl
cmp
inc
lock
pop
lods
cmp
sub
aam
ja
bound
mov
js
jo
sub
mov
and
cmp
inc
std
call
sbb
js
push
mov
cmp
push
mov
lods
dec
fdivrl
mov
jnp
mov
or
xor
jle
mov
jg
pop
imul
je
jne
xor
push
xchg
aad
stc
mull
shlb
mov
cltd
sbb
xchg
push
push
or
bound
push
xchg
pusha
pusha
aas
pop
or
jns
and
cld
push
leave
sbb
inc
mov
jb
out
lretw
sti
aaa
xor
add
incl
xchg
sbb
push
cmp
pop
lcall
mov
lret
cmova
dec
shrb
xchg
outsb
repz
xor
sbb
je
outsl
ljmp
xor
cld
dec
xor
nop
leave
outsb
lret
fdivs
loop
fcoms
pop
loope
jae
add
fwait
mov
cvtdq2ps
shll
cld
fwait
js
lcall
gs
out
mov
xor
int3
cmp
stc
shrl
dec
lahf
mov
xchg
pop
or
mov
add
leave
pop
out
mov
fs
inc
lds
rcrb
and
inc
push
fistl
or
push
sti
pop
call
cmp
adc
or
loopne
out
movsb
cld
lds
xchg
pop
insl
mulps
xchg
aad
sti
bnd
cmpb
mov
mov
incl
popf
jb
xor
flds
mov
add
xchg
or
dec
adc
ror
imul
iret
icebp
rcr
push
jp
insb
xcrypt-ofb
cmpsl
sub
or
push
mov
int3
mov
jmp
sub
test
mov
mov
inc
mov
mov
das
dec
mov
fildll
xchg
sbb
mov
fsubs
xor
iret
gs
sub
pop
imul
add
cli
and
pop
mov
push
outsl
ret
fldenv
fs
jmp
sbb
jge
cmp
sbb
dec
fsubl
pop
pop
mov
or
scas
movsb
fldenv
xchg
and
mov
jns
lods
add
cmpsl
popa
mov
add
in
add
pusha
sub
push
cli
inc
jl
dec
into
xchg
add
clc
clc
sbb
sbb
xor
insl
std
cmp
fldt
in
roll
test
jmp
in
xor
xchg
fildll
lret
dec
ja
mov
pop
shll
mov
mov
mov
jecxz
sbb
sub
push
xchg
push
lods
in
jmp
loop
mov
or
or
scas
jge
xchg
xchg
and
push
test
adc
fmull
jnp
mov
xlat
repnz
jl
stc
loope
cmp
outsl
ja
jg
bound
lcall
sub
xor
and
inc
and
int
add
cmp
cmp
mov
jbe
icebp
xchg
add
xchg
out
movsl
arpl
movsl
enter
dec
out
jg
bound
les
sbb
std
inc
or
mov
mov
add
dec
ja
jne
xchg
repz
je
popf
mov
sbb
in
and
dec
imul
into
jl
enter
adc
mov
mov
fwait
push
or
aaa
lods
add
jg
cmp
push
iret
cwtl
icebp
dec
sbb
jg
roll
mov
das
insb
dec
subl
jmp
aaa
xor
repz
setg
js
cmpsl
cmp
and
sub
rcrb
ret
and
pop
add
or
sahf
inc
fwait
lods
roll
add
jle
cmp
cld
shll
inc
lock
add
outsl
mov
add
dec
js,pt
pushf
adc
rcll
dec
mov
xchg
inc
mov
xor
push
sub
insl
repnz
stos
test
jbe
dec
adc
fldl
popa
icebp
pmaxsw
sbb
add
dec
loope
and
movsb
lahf
outsl
lcall
rolb
orb
xchg
out
pop
inc
mov
clc
add
aas
jmp
jne
jno
or
js
mov
stc
lret
cmp
jmp
xor
clc
bound
and
std
jo
int3
fnstenv
arpl
out
adc
jae
jle
mov
jnp
lock
mov
xchg
test
sub
add
out
inc
stos
sbb
fwait
jmp
hlt
push
lods
push
mov
push
xchg
pushf
movsl
movsb
addr16
leave
push
mov
fwait
into
xchg
adc
dec
fdivr
mov
jg
cld
pop
sbb
jb
movsb
test
shlb
or
fidivrl
pop
or
icebp
cmp
sub
jnp
neg
scas
loopne
or
push
sub
dec
rcll
repnz
lahf
xor
sbb
push
xor
inc
jge
lods
cmpsb
add
inc
inc
add
push
lods
ja
sub
jp
js
xor
inc
cli
dec
stos
mov
lret
loopne
dec
js
test
mov
leave
mov
inc
ljmp
sbb
jnp
loop
inc
or
loope
loope
mov
mov
lock
lods
or
push
hlt
and
fadds
or
gs
cmp
jb
test
xor
dec
loope
cmc
subb
enter
mov
in
xor
outsb
pushf
loope
sub
bswap
sub
movsb
sbb
jle
mov
dec
in
pop
sub
aaa
repz
lcall
call
mov
shl
stos
xchg
outsb
in
inc
bound
or
xchg
xchg
or
mov
lcall
cmpsb
xchg
lahf
idiv
or
ret
lcall
dec
mov
int3
xchg
mov
adc
test
in
push
call
jle
enter
jl
push
inc
push
lods
sub
lret
adc
aas
cli
lahf
lcall
stos
cmpsl
adc
xchg
add
stc
into
test
mov
popa
gs
sub
mov
push
sub
into
add
ss
mov
dec
loopne
notb
in
seto
mov
mov
sub
jp
rorl
shr
test
or
jno
clc
jbe
daa
hlt
out
inc
xor
inc
dec
rclb
fsubrs
mov
xchg
cld
clc
inc
dec
inc
add
mov
adc
cmp
inc
arpl
xchg
xorl
andps
rcrb
mov
pop
dec
jp
mov
lret
idivl
fsubl
mov
push
dec
cld
push
lods
das
push
insb
in
cli
xchg
lock
les
pop
sub
daa
jbe
pop
jno
mov
in
xchg
push
or
mov
mov
notb
popf
mov
mov
mov
outsb
rcr
movsl
pop
leave
les
lahf
sti
inc
ja
inc
test
xor
mov
subl
mov
subl
je
enter
test
jb
xor
ss
pop
dec
repz
sahf
ficoml
out
stos
xor
mov
push
xchg
aam
dec
cmpsb
push
xchg
jecxz
add
leave
xor
cli
sub
nop
cmc
jg
cwtl
jbe
aad
cmp
in
sub
adc
sbb
dec
scas
aaa
rcr
add
lahf
inc
jmp
pop
mov
test
mov
jl
push
fstpt
dec
hlt
in
add
adc
aaa
mov
jbe
insb
push
cmp
xor
mov
cwtl
call
lret
push
adc
sahf
mov
mov
adc
call
sbb
mov
xor
dec
sub
out
sbb
sub
sbb
ret
cmpsb
mov
xor
cmpsl
cmp
idiv
jo
push
lret
jecxz
pop
mov
pop
test
sarl
and
sbb
inc
push
loop
xchg
ja
scas
mov
and
stos
mov
in
add
dec
lahf
mov
add
mov
jo
mov
and
mov
pop
jmp
adc
icebp
fwait
xor
lock
or
inc
bswap
and
inc
jb
es
call
xchg
lods
sub
mov
fnstcw
je
xorl
ss
cli
les
dec
fisubs
jl
outsl
pusha
es
ret
cmp
fdivrp
flds
test
popf
leave
neg
aas
jmp
cmp
in
dec
mov
bound
ja
loop
fisttpll
insb
inc
mov
fucom
jge
pop
scas
pop
inc
xor
dec
pushf
jb
incl
lcall
lret
filds
sar
js
hlt
ss
or
ret
test
popf
xor
add
jg
pop
mov
mov
ljmp
lods
add
lock
insl
stos
cld
xor
sbb
push
int3
sub
std
call
mov
mov
sbb
mov
arpl
mov
rol
sub
repnz
fisubrs
loop
aad
inc
gs
xchg
sbb
mov
lcall
jp
push
xor
mov
mov
jne
sarb
pushf
imul
dec
push
mov
xchg
jmp
xchg
push
mov
out
faddl
push
cmc
fisttpll
aad
lret
push
pushf
ret
pop
mov
js
les
and
les
mov
xor
jo
adc
repnz
xlat
xor
scas
xchg
pop
cmc
mov
flds
out
pop
cmp
nop
push
push
aam
out
clc
imul
adc
addb
jle
cwtl
stos
std
xor
mov
dec
and
add
push
je
pop
sbb
mov
fists
xchg
insb
mov
repnz
shl
into
les
aas
fcoml
and
jl
xchg
dec
and
dec
xchg
rcll
aam
sbb
insl
aas
xchg
add
ljmp
aam
adc
adc
mov
cmpsl
popf
call
xchg
int
cmc
xchg
cld
out
insb
xchg
daa
pop
aas
es
shll
scas
pop
cltd
shrb
xchg
mov
add
inc
pop
addr16
insb
or
out
xchg
inc
lods
mov
and
dec
adc
test
mov
clc
pushf
data16
jns
mov
outsb
shr
sti
or
mov
and
sub
les
or
jno
nop
xchg
add
or
cmc
test
les
andl
push
lcall
popf
mov
in
hlt
push
xor
aad
push
cwtl
and
pop
mov
daa
loopne
nop
in
lahf
dec
and
rolb
jb
push
mov
xchg
cmp
popa
sbb
jle
xchg
mov
cltd
pop
dec
pop
pop
stos
arpl
xchg
adc
cmp
jns
std
out
pop
pop
add
mov
xchg
or
mov
nop
lret
pop
add
mov
jno
cmpsb
jo
add
addr16
jg
mov
cli
cmp
scas
add
cmp
jns
icebp
lock
push
xchg
dec
jae
movsb
mov
mov
mov
lret
mov
movsb
shll
mov
mov
mov
fs
int3
outsb
inc
mov
insb
wrmsr
cmpsb
ss
ljmp
pop
mov
popf
mov
and
cs
pushf
push
add
testl
adc
adc
push
ret
cmp
daa
test
ficomps
mov
pop
shl
jo
mov
inc
xor
jns
pop
outsl
jge
test
cwtl
mov
fcoml
mov
jle
xchg
psraw
sbb
inc
cmp
fwait
add
dec
pop
outsb
ss
cmp
lods
in
and
cmp
pop
xor
sbb
stc
mov
iret
sahf
pop
or
xchg
andb
mov
jmp
stos
bound
mov
int
xor
mov
outsb
dec
mov
add
rorl
sub
ret
adc
pop
icebp
inc
jae
jns
push
push
aam
pushf
pusha
adc
stc
out
xchg
pushf
jg
mov
insl
add
test
aam
sahf
int3
xchg
lahf
ss
or
in
add
lods
sahf
xchg
sbbl
xchg
lahf
into
aaa
xor
movsl
mov
movsb
or
push
jge
fldl
xchg
mov
frstor
add
sub
mov
xor
ret
rcll
or
add
adc
adc
iret
scas
ljmp
jo
imulb
add
xchg
push
push
and
sub
sub
mov
mov
jae
fisubrs
sub
push
xlat
add
mov
sbb
mov
fldl
nop
and
jo
insb
cltd
aam
sub
iret
mov
mov
and
repz
push
rcll
insl
lahf
xchg
pop
mov
or
sbb
or
mov
mov
pop
cltd
mov
jo
pop
mov
and
jge
dec
packuswb
ret
cmc
add
xchg
or
clc
mov
out
inc
test
sub
inc
xchg
clc
dec
mov
ljmp
ss
or
aad
mov
push
flds
loop
arpl
mov
iret
pop
fstl
sbb
mov
jo
jg
enter
call
push
rolb
std
sub
pop
dec
data16
stos
mov
xor
insb
mov
scas
add
fnstcw
sbb
loop
inc
inc
lods
or
mov
popa
xchg
add
mov
add
dec
xor
mov
adc
sub
fidivl
out
sbb
stc
jae
fistl
shll
out
add
fimuls
std
std
add
clc
xchg
stos
sbb
sbb
pop
scas
sub
jno
je
pop
in
in
add
imul
decl
movsb
fs
mov
jg
add
mov
inc
sub
jb
rol
int
add
mov
lahf
sub
add
scas
rcrb
mov
jecxz
test
enter
xchg
fisubrs
out
cmpsl
and
mov
mov
sbb
gs
jp
daa
adc
and
jne
pop
fisttps
sbb
and
inc
mov
cmp
mov
or
and
test
inc
repnz
pop
mov
scas
sbb
nop
imul
sub
jno
add
xchg
cmp
xchg
dec
mov
stc
fisttpll
adc
lret
mov
rorb
lcall
cld
outsl
sbb
pop
stos
icebp
inc
jmp
mov
lahf
jmp
js
push
orl
ds
int
sub
daa
stc
scas
or
les
xchg
scas
aam
mov
daa
sub
jo
repnz
pop
popf
dec
ret
dec
dec
sbb
adc
sub
mov
mov
pop
out
icebp
mov
pop
xchg
mov
stc
mov
or
fldl
andb
pop
push
fs
sub
fimull
in
jae
cltd
lcall
jecxz
sbb
lret
xorb
mov
jg
adc
or
lock
sti
pop
inc
dec
push
gs
mov
cltd
fists
mov
add
mov
adcl
xor
mov
inc
divl
sub
add
cli
aad
inc
adc
lods
pop
adc
ret
mov
fcomps
mov
iret
mov
shrl
mov
dec
adc
popf
sub
pop
inc
rolb
rcl
xchg
jb
hlt
mov
or
shll
add
ljmp
dec
jmp
inc
movsb
jecxz
ficoml
add
movsl
inc
out
sub
mov
fs
loope
rcl
cmpl
in
negb
jb
mov
rorl
movb
sbb
mov
mov
outsb
pop
cmp
xor
cmp
mov
subl
xchg
inc
pop
sub
xchg
adc
out
aad
add
sub
test
jae
and
flds
push
cwtl
pop
in
mov
aas
mov
notb
or
push
andb
mov
lcall
xlat
and
in
mov
jg
stos
rorl
xor
int
cmpsl
push
orb
in
imul
popf
movsb
mov
lock
pushf
and
xchg
mov
stos
into
sbb
sub
jo
loopne
mov
std
xchg
scas
or
insb
mov
dec
push
gs
iret
scas
popa
test
cli
movsl
stos
ffree
mov
stc
pusha
nop
inc
or
xor
add
mov
dec
mov
sbb
xor
mov
mov
jle
repz
xchg
sbb
fcmovnbe
adc
adc
pop
inc
adc
lea
adc
pop
es
sub
mov
dec
sub
pushf
loopne
aam
fs
in
stos
cmp
xor
notb
popf
xchg
add
ret
jecxz
rcr
fwait
in
into
sub
and
add
dec
pop
sahf
aas
je
test
icebp
insl
and
mov
in
inc
or
shll
test
adc
jge
push
in
xlat
ljmp
pushf
pop
sarl
mov
cmp
sahf
cmp
rcll
xchg
pop
loope
and
fidivrl
pusha
push
fsts
sub
pcmpeqb
dec
fistpl
mov
fmuls
push
fnstcw
inc
add
stos
negb
push
cltd
ret
out
or
sub
imul
jo
scas
pop
in
add
push
arpl
jb
stos
push
fisubl
pop
sub
inc
mov
mov
jg
cmp
dec
roll
add
inc
sbb
je
dec
and
loopne
jl
mov
fsubp
sub
pop
test
cmp
jge
sbb
call
xchg
mov
jne
mov
cmp
add
sub
adc
subb
cmc
pushf
add
outsl
xchg
out
lock
imul
pop
inc
adc
dec
cmp
pusha
in
cmp
add
in
inc
arpl
pop
out
add
ret
push
adc
aaa
jmp
mov
jbe
fdivr
mov
sbb
pop
dec
je
fimuls
xor
lods
xchg
inc
enter
das
sub
jno
pop
outsl
fcmovnu
pusha
adc
and
cmpsl
sbb
adc
out
lods
push
repz
pop
mov
mov
push
adc
push
pop
jl
dec
leave
into
repnz
pusha
andl
cmp
inc
clc
sub
adc
out
in
in
test
leave
cmp
aad
pop
js
lea
jle
leave
lahf
in
xchg
mov
inc
or
mov
mov
leave
push
arpl
pop
add
mov
xchg
out
inc
push
mov
fs
mov
loopne
test
sbb
popf
xchg
into
add
add
popf
push
pop
addr16
jge
fs
gs
sub
pusha
paddw
movsl
xor
je
mov
mov
stos
es
sub
lock
shlb
or
adc
js
pop
pop
dec
mov
add
jp
lods
sarb
mov
dec
testl
cltd
mov
xchg
jg
jns
pop
xor
and
sti
mov
flds
jae
divb
jl
or
sub
insl
sub
leave
test
mov
mov
jns
je
xor
and
mov
lfs
xor
dec
fucomip
inc
fnstcw
cwtl
cwtl
xchg
arpl
div
sub
stos
add
xchg
or
cmp
out
pop
and
in
jecxz
cmp
jbe
lods
jle
jecxz
or
cmp
int3
pop
stos
dec
andl
jns
loope
rol
dec
adc
cmp
mov
push
jp
push
pop
test
orl
sub
dec
xor
bound
pop
dec
inc
in
notl
xchg
fadd
lcall
inc
or
xchg
lock
call
sti
add
mov
fs
cwtl
je
out
push
orl
cwtl
pusha
rcr
and
mov
adc
sub
jmp
or
mov
fwait
bnd
in
das
xor
mov
xor
pop
mov
clc
int3
push
cmp
inc
xor
cmc
mov
mov
pop
testb
mov
adc
xchg
jb
push
pop
mov
mov
test
mov
int3
xchg
es
or
aad
sbb
arpl
or
pop
jnp
xor
xor
test
mov
daa
lods
test
and
mov
retw
jbe
push
filds
pop
dec
sub
mov
push
cmc
int
leave
pop
mov
outsb
daa
fbld
cmpsl
adc
cmp
in
jbe
cli
ret
cli
out
sbbb
cmp
cmc
jno
outsb
push
push
add
or
inc
repnz
sti
jp
sub
xor
lods
std
mov
mov
in
push
sbb
imul
movsb
dec
and
jne
cmp
lret
rcr
repz
xchg
sub
jns
jae
mov
cmp
jge
mov
adc
xor
cmp
cld
pushf
adc
shrl
shrb
es
mov
negl
or
dec
xchg
xor
ret
pop
or
cmp
sbb
mov
cvtps2pd
cmp
in
sub
icebp
negl
xchg
cmpsb
add
or
or
push
loopne
je
xchg
push
inc
fstpt
xchg
xor
pop
stc
es
add
sub
jl
sbb
enter
and
mov
sahf
sub
cmp
adc
les
not
push
andb
out
dec
sub
in
pusha
xor
adc
or
lcall
lret
xchg
cmp
xchg
cmpsl
sbb
sbb
test
pop
add
mov
adc
xor
mov
adcl
shll
jle
and
mov
cltd
insl
xor
shlb
setae
call
int
push
daa
out
cmc
sbb
jle
out
mov
pop
aaa
scas
insl
sbb
pop
inc
mov
and
add
dec
push
cmpb
cmp
ficompl
cmp
sbb
aad
test
aad
insl
lea
movsb
popa
mov
dec
xor
push
adc
mov
scas
sub
orl
iret
and
pop
paddd
adc
fbld
fld
addr16
outsb
xchg
adc
fcoml
pop
sbb
in
jbe
fs
pop
data16
in
dec
pushf
aad
mov
pop
movsl
lds
outsl
jo
jecxz
aam
jmp
cmc
gs
sub
into
aas
pop
add
push
shll
rorb
push
mov
pushl
lret
nop
incl
sti
je
popa
pop
lea
pop
push
and
sub
cmp
cmp
and
pop
pop
mov
bnd
enter
or
int
ror
cmpsb
jge
xor
xchg
inc
add
adc
cmp
andl
popf
je
inc
rolb
icebp
int3
fldl
sti
clc
or
pop
cmp
jecxz
bound
mov
mov
add
aad
mov
pop
data16
jmp
jg
mov
push
fsubs
dec
insl
mov
lods
or
sahf
adc
ss
inc
push
ret
int
mov
cmpsl
sub
aad
xor
cmp
cmpsl
sub
and
inc
or
ficoms
or
movsl
pop
aaa
xor
nop
sub
cld
or
mov
stos
shll
dec
and
fcomip
inc
into
mov
adc
call
push
sti
repnz
call
and
loope
and
inc
stc
mov
pop
cmpsb
xchg
xor
clc
and
mov
pop
dec
in
or
ret
push
int
sbb
mov
sub
and
scas
adc
arpl
sbb
mov
icebp
dec
cltd
iret
jle
insb
movsl
add
fstl
dec
cli
xchg
lea
cmp
dec
imul
repnz
pop
es
push
cmpsl
jbe
cmp
jle
or
imul
aaa
push
fnstenv
adcl
inc
push
and
shl
ret
movsl
or
mov
cli
addb
rcrl
mov
sbb
call
js
dec
push
push
jmp
add
mov
xor
cmp
inc
jbe
mov
je
notl
mov
lcall
and
pop
add
xchg
lret
call
sub
sarl
inc
mov
push
les
inc
pop
bound
clc
orl
or
xlat
ret
jl
xchg
sub
fwait
cmp
cmpsb
negl
mov
add
incb
xchg
movsb
xchg
pop
rolb
mov
repz
sbb
movsb
and
stos
inc
aad
es
and
xchg
jae
andb
mov
fistl
or
mov
push
in
and
jp
ja
in
popf
fdivrs
cwtl
mov
repz
dec
enter
popf
xchg
or
cmp
sbb
sub
jmp
scas
fdivrl
nop
or
loopne
push
lea
enter
cmp
xor
loope
rcrb
mov
js
cmc
adc
cmp
test
pop
cs
dec
aaa
psraw
pop
inc
loopne,pt
mov
or
sub
stc
into
inc
jmp
lcall
faddl
xor
pop
pop
sbb
pop
popa
jo
loop
cmp
scas
jo
and
dec
fldl
sahf
jmp
add
push
std
push
pop
lret
dec
push
testb
add
mov
decb
dec
sbb
sbb
sbb
loope
xchg
pop
push
in
cmp
sarb
addb
addb
sub
das
cmpb
pop
jnp
imul
add
sbb
lret
mov
pushf
loop
stos
aas
in
cmpsl
stc
pop
sbb
push
jg
mov
jl
adc
fldt
and
rcll
adc
xor
je
cmpsl
and
push
adc
int
inc
loopne
stc
and
pop
clc
shrb
test
scas
insb
mov
fwait
xchg
in
cmp
push
cmp
jp
push
push
mov
fwait
inc
popa
lock
enter
popa
dec
dec
mov
std
ret
add
test
fsubl
xchg
sub
stos
adc
jg
fbstp
and
test
mov
ljmp
aam
inc
mov
xchg
xorb
jno
mov
cwtl
loop
icebp
lea
lock
call
fnsave
xor
dec
cmp
pop
loopne
pop
inc
aad
out
and
push
pop
sub
xor
push
or
int3
dec
xor
xchg
pop
sarl
clc
mov
clc
inc
pop
into
call
lcall
ljmp
sbb
sbb
pop
add
mov
nop
repnz
lret
sarb
ljmp
cmc
lret
push
outsb
and
jne
das
ret
mov
or
fidivrl
xor
pop
mov
jp
lret
mov
adc
pop
sbb
mov
mov
dec
inc
cmpsl
cmp
loope
mov
rclb
jbe
ja
inc
mov
addr16
mov
xchg
adc
sub
xchg
inc
outsl
stc
cmp
rolb
shrl
inc
adc
decb
rcll
xchg
pop
lahf
dec
xchg
xchg
in
enter
shlb
daa
jl
divw
add
insl
mov
cmp
xor
je
push
and
jmp
es
cwtl
test
jl
sbb
fcmovbe
sub
adc
dec
popa
jmp
add
aam
adc
cmc
jmp
jmp
inc
pop
in
neg
sbb
mov
pop
and
xchg
sub
int3
idivl
and
test
test
rclb
dec
pop
mov
dec
cli
dec
sub
dec
add
imul
outsl
mov
push
fs
lds
leave
movb
dec
inc
mov
int
in
cmp
jle
jle
pop
inc
in
cmc
sbbb
test
in
aad
shrl
xchg
pop
test
sub
jae
jnp
pop
mov
cmc
jae
or
out
sub
dec
jne
mov
inc
es
jnp
push
into
cmp
adc
imul
int3
addr16
and
xor
xor
mov
adc
iret
stos
loope
cmp
idivl
insl
sbb
stos
add
loop
pop
adc
mov
scas
add
add
imul
jne
fsubl
mov
pop
jns
mov
and
push
dec
inc
lahf
xor
cs
push
dec
mov
sub
movsl
push
cmovae
fisttpl
iret
jge
add
pop
out
mov
or
add
mov
mov
or
push
ret
enter
fmuls
insl
mov
les
loop
sahf
jle
lds
scas
fisttpll
ret
aam
in
jns
push
dec
mov
dec
push
mov
cmpsl
cmp
out
aam
decb
inc
or
fldcw
xchg
jge
and
cwtl
add
dec
jp
xchg
jecxz
add
add
lea
mov
or
adc
cmp
mov
pop
shlb
neg
fidivrl
mov
sbb
out
and
std
shrl
dec
es
xor
sbb
ficompl
mov
arpl
aam
xor
jge
arpl
enter
arpl
movsl
insl
lock
mov
jo
fs
mov
sti
mov
nop
dec
lret
cli
add
pop
inc
mov
je
rolb
into
inc
xchg
push
jecxz
mov
movsl
xchg
lea
sahf
cmc
sub
dec
jbe
mov
filds
pop
jmp
addr16
into
and
dec
or
sub
add
ljmp
aad
addl
jo
lods
mov
inc
pop
inc
or
ljmp
arpl
mov
cmpsb
cmp
inc
mov
mov
cwtl
test
mov
mov
or
int
incl
mov
add
sbb
cmp
in
mov
jns
arpl
or
push
sub
cwtl
push
mov
frndint
outsl
push
int
and
and
add
push
add
adc
popa
jp
scas
bound
adc
sbb
rolb
je
std
xchg
sub
and
adc
mov
adc
out
sub
mov
cmp
shll
jecxz
insb
or
inc
lcall
mov
movb
int3
ja
xchg
xor
pop
rcrb
mov
aaa
jmp
fistpl
pop
int
out
lods
mov
repnz
inc
in
cld
sbb
sbb
push
out
aas
pop
in
mov
sub
inc
sbb
ror
inc
mov
xchg
add
clc
mov
insb
mov
test
or
xor
movq
lods
jbe
stos
add
push
fidivl
push
sbb
inc
repnz
xchg
push
fmul
push
test
cmp
mov
mov
pop
std
push
aaa
movsl
push
rcrl
test
mov
repnz
add
pop
pusha
xor
std
adc
mov
sbb
mov
cmp
push
ficoml
xor
mov
cmp
stc
stc
cmp
or
stos
and
jo
aas
sbb
cmc
lahf
mov
mov
jmp
popa
mov
jne
mov
inc
cmpsl
cli
pop
adc
sub
subb
pushf
pusha
dec
out
pop
lods
push
out
call
es
add
sub
imul
cmp
sub
or
xchg
adc
and
clc
fisttpll
jmp
femms
xchg
mov
mov
and
sub
or
cli
loope
fmuls
sub
adc
sahf
outsb
and
inc
pop
push
addr16
xor
aad
fldenv
lcall
mov
xchg
dec
aas
je
cmp
in
cmp
out
or
push
mov
xor
mov
add
and
adc
mov
and
fistpl
adc
popf
push
es
mov
notl
push
icebp
cwtl
xchg
je
cwtl
lods
push
dec
shlb
sahf
xlat
dec
jge
fisttpl
test
jnp
or
scas
push
pushl
pop
into
sbb
jno
mov
fcmovnu
cltd
adc
push
adc
stc
test
movsb
scas
loopne
inc
adc
mov
mov
fsubr
pop
ror
das
sti
cmp
cli
ret
mov
rclb
mov
movsl
out
adc
push
test
das
lret
mov
push
sbb
cmpsb
scas
jmp
dec
sbb
mov
xor
scas
dec
dec
pop
cmp
xchg
ss
out
dec
cmc
dec
ds
js
adc
jne
repz
push
mov
fs
fdiv
or
jne
xchg
cmp
lretw
xor
aam
cmp
push
test
call
scas
sbb
rcr
push
sbb
add
insb
mov
pop
pop
in
movsb
iret
fadds
rcl
push
sar
ss
jmp
dec
mov
lret
xchg
and
fcompl
shlb
shrl
arpl
pop
hlt
cli
mov
adc
std
jo
adc
mov
dec
frstor
pop
inc
mov
and
imul
ds
and
out
aas
out
mov
push
fisubs
xor
sbb
arpl
or
dec
adc
shrb
idivb
mov
fcmovbe
ss
dec
cld
xchg
push
call
mov
xor
sti
push
xchg
xchg
mov
inc
inc
test
mov
lds
add
push
out
dec
scas
mov
ljmp
inc
mov
adc
sub
lahf
inc
imul
push
nop
into
or
rcr
sbbl
or
das
adc
mov
push
push
sub
lret
das
in
xlat
popf
jg
in
push
sbb
fucomp
adc
mov
shlb
iret
jno
imul
sbb
outsb
mov
push
jecxz
sbb
sub
cmp
dec
popf
push
jp
nop
jecxz
add
in
dec
pop
mov
cmp
inc
or
out
jg
mov
xor
jmp
xchg
dec
xor
inc
loop
cmp
in
cmp
adcl
loopne
pop
jle
mov
movsl
add
cltd
jo
stos
repz
ficompl
sbb
and
rolb
sub
xchg
lock
sbb
loope
fwait
mov
cwtl
in
es
adc
mov
mov
add
loopne
data16
sti
cltd
mov
sub
mov
ret
mov
sub
insb
mov
fstp
jo
bound
fldl
sahf
mov
inc
cmpsl
leave
notl
mov
into
stos
xlat
rclb
jmp
mov
ficoml
ffree
or
mov
ds
test
jo
addr16
pop
jo
icebp
mov
inc
lea
js
icebp
dec
add
inc
jmp
jno
or
pavgb
xor
data16
lcall
stc
sbb
jge
fcompl
aaa
call
pop
push
mov
pop
sbb
repz
ja
and
ret
mov
mov
pusha
sbb
or
ret
scas
sub
push
popf
aad
push
xor
mov
lock
pop
mov
movb
int
jb
mov
xor
adc
mov
and
ret
flds
fdivl
push
test
dec
popa
popf
add
jge
inc
enter
cld
aaa
movb
orb
mov
les
pop
jecxz
mov
out
jb
cld
xchg
out
loopne
jp
outsb
add
add
sbb
mull
push
subw
mov
xor
stos
scas
push
ret
sarb
in
mov
movsl
mov
jge
sub
or
popa
loopne
add
mov
sub
push
xchg
es
push
sub
repnz
cmc
adc
mov
fmuls
add
jecxz
adc
cwtl
lahf
out
cmp
nop
lcall
clc
lock
jmp
xlat
cmp
xor
and
or
mov
gs
push
out
push
ljmp
push
adc
loop
dec
push
adc
add
push
repnz
xchg
jo
push
mov
andl
add
test
loope
iret
jp
cmp
pop
mov
adc
sbb
je
clc
loopne
popl
jle
cmpsb
or
mov
inc
mov
fimull
xor
jmp
sub
mov
inc
adc
imul
lods
sub
xchg
aam
mov
cltd
and
js
mov
rolb
cmp
pop
mov
adc
xchg
xor
int3
dec
dec
add
sti
test
xor
and
fisubl
lods
in
insl
xor
sbb
mov
pop
scas
movsb
outsl
push
jae
shlb
jae
dec
aaa
arpl
js
or
sub
inc
ljmp
in
arpl
sarl
jo
jle
in
adc
cmp
out
add
popf
mov
ret
mov
sbb
mov
lahf
jp,pt
or
push
rcrl
hlt
xchg
mov
shrl
imul
adc
jmp
pop
imul
and
dec
cmpsb
or
dec
lock
mov
push
movsl
or
popf
mov
repz
dec
lea
test
icebp
or
add
fwait
mov
loop
pop
sbb
adcl
mov
adc
sahf
mov
insl
cli
movsl
push
inc
push
dec
ret
mov
mov
int
push
andl
xchg
outsl
dec
or
jae
sti
jge
les
jbe
xchg
fisttps
mov
xchg
ret
jae
adc
in
outsb
mov
jne
and
imul
inc
inc
push
add
xor
in
fidivrl
ds
stos
and
pusha
mov
pop
jb
fstl
jbe
xchg
dec
xor
or
cmp
in
jne
jbe
jp
scas
loopne
mov
fnsave
enter
push
sub
cmp
and
popf
jbe
pop
mov
mov
ljmp
test
test
cmp
xchg
push
and
pushf
sub
movb
or
repnz
call
in
mov
mov
jne
or
arpl
xlat
shlb
mov
push
mov
test
xor
rcll
and
int3
jnp
imul
mov
popf
sbbl
call
jp
jmp
mov
sbb
scas
push
dec
loop
fbstp
hlt
jbe
sbb
adc
outsl
adc
mov
or
jne
xor
ja
dec
xchg
xchg
and
xor
push
aaa
lods
pop
mov
or
mov
sarb
cmp
es
sub
nop
into
and
push
inc
cmpsb
jecxz
ficoml
cmp
push
inc
lret
pop
jnp
mov
jle
popf
dec
jns
mov
dec
xchg
dec
xchg
mov
push
xor
pushf
lods
mov
test
or
mov
push
repz
and
dec
stos
and
daa
pusha
test
ja
pop
cmp
push
out
pop
pop
in
js
ret
and
fcomps
pop
lods
fcmovne
shrb
rorl
push
fmulp
add
pop
mov
insl
jle
lods
push
xchg
fdivrl
push
cs
iret
pop
mov
xchg
sub
pop
xchg
mov
add
sub
inc
cmp
cmp
pop
mov
inc
call
dec
fidivl
push
std
lret
pop
xchg
push
cld
pusha
lds
or
into
pop
sahf
and
jecxz
adc
lods
dec
or
rcrb
mov
andl
popa
push
dec
aam
mov
cli
rorl
stos
int
sub
push
fidivl
and
jbe
lret
sub
out
fdivl
push
mov
pop
push
popfw
ljmp
movb
mov
mov
pop
mov
aas
xor
cmp
xchg
aas
lret
xor
mov
mov
and
ret
or
scas
filds
pop
dec
out
xorl
aam
jmp
ret
clc
mov
adc
dec
dec
push
bound
mov
mov
xchg
pop
adc
pop
and
jge
xchg
movsb
xor
jge
in
pop
cld
in
dec
iret
sub
push
adc
cmp
in
pop
test
xchg
pop
ficoml
mov
scas
std
inc
push
or
aam
jg
fmuls
inc
int3
js
notb
lock
jmp
jecxz
xchg
dec
add
divl
add
xlat
push
jg
sub
xchg
jnp
rcrl
jno
lock
mov
dec
or
imul
jg
jl
push
lods
cwtl
add
jg
aaa
stos
lcall
lahf
sarb
cmp
repnz
les
repz
pop
mov
adc
insl
lcall
inc
sbb
clc
and
sub
mov
andl
add
leave
fnstsw
insl
lcall
mov
aam
stos
popa
icebp
dec
jecxz
jae
test
fnstsw
mov
loop
stos
jae
mov
lock
inc
or
sub
test
sarb
cmp
mov
dec
clc
jb
pop
adc
push
and
push
loopne
push
cmpsl
stos
test
xor
gs
inc
stos
insl
imul
lods
and
mov
popf
insb
in
das
arpl
sbbb
xor
dec
stos
jmp
repz
add
cmp
inc
mov
jnp
mov
out
enter
pop
sahf
aas
fbstp
inc
mov
ja
lock
push
popa
in
lods
loope
cltd
stc
and
sub
shl
dec
push
fcomp
inc
int
sbb
pop
jno
cmpxchg
pop
lods
cmp
mov
into
mov
sbb
subl
imul
xchg
jg
arpl
pusha
push
mov
into
loopne
add
loope
adc
icebp
imul
insl
sbb
push
fidivs
dec
aam
xor
cmp
lods
inc
es
loop
ret
xor
mov
js
mov
popw
inc
repz
jnp
inc
jbe
mov
pop
mov
insl
dec
scas
inc
in
mov
jne
das
mov
aas
push
inc
iret
xor
stc
xchg
mov
and
cmp
or
push
cmp
sbb
inc
pop
add
add
scas
stos
test
xchg
pop
mov
scas
fsubl
cmp
pop
dec
dec
mov
cmp
pop
les
xchg
lahf
scas
pop
xor
xchg
lcall
in
and
inc
lea
fisubs
mov
pop
fs
inc
mov
inc
push
mov
je
push
faddl
stos
insl
fidivs
cli
rcll
cli
cwtl
mov
mov
push
push
xchg
mov
in
xchg
test
jbe
call
leave
int
es
scas
test
inc
lcall
cs
mov
xchg
pop
pusha
je
adc
into
xor
fcomps
inc
push
aam
lret
pop
stos
mov
fstpt
or
scas
pusha
cs
add
dec
mov
xorl
dec
or
arpl
dec
dec
pop
icebp
aad
cld
pusha
imul
movsl
add
xor
sub
ret
cwtl
bound
adc
shl
in
mov
das
into
mov
aaa
push
out
mov
push
xor
pop
mov
and
cs
and
dec
mov
repz
sbb
mov
xchg
pop
push
adc
mov
mov
jmp
jp
cltd
cmpsb
pop
fwait
xlat
lea
inc
jbe
sbb
xor
sbb
jmp
mov
xchg
add
pop
hlt
push
mov
dec
gs
aam
and
push
xchg
mov
add
inc
fdivs
bound
inc
adc
mov
xchg
pusha
pop
aas
jnp
cmp
outsb
pop
sbb
mov
stc
sbbl
stos
aad
in
icebp
in
sub
jae
mov
xor
inc
jne
jnp
sub
mov
fmull
mov
sub
jb
mov
scas
mov
movsb
inc
mov
outsl
sarl
xchg
scas
dec
loope
adc
imul
repz
lret
dec
orb
orl
movsb
cmpsb
xchg
mov
push
or
push
call
fwait
je
out
jbe
mov
fmull
cmp
ss
rorl
out
lods
js
adcl
xor
das
ret
mov
es
mov
xchg
push
inc
jae
cmp
hlt
in
inc
popa
call
dec
lea
mov
ja
mov
push
lods
popf
mov
cmp
push
lahf
test
int
mov
outsb
add
int3
scas
daa
movsb
mov
popa
nop
mov
sahf
lds
mov
loopne
mov
xor
sbb
jno
mov
mov
push
push
mov
inc
jbe
call
mov
int
push
es
adc
ja
js
into
cmpsb
xchg
jmp
pop
fnsave
test
pop
ret
movsl
sbb
jns
pop
in
insb
cmpsb
pop
fldcw
je
jl
xchg
repnz
sub
dec
and
dec
std
sub
cmp
xchg
popa
adc
xchg
shlb
imulb
mov
pushf
jg
mov
aaa
pop
mov
loop
mov
in
mov
sbb
scas
mov
dec
jecxz
ret
js
pop
data16
fistps
xchg
ljmp
test
int3
push
or
aam
xor
movsb
mov
inc
pop
lret
and
pop
je
mov
sub
cmp
inc
push
add
add
rorb
mov
push
and
add
jns
std
xlat
test
push
mov
call
bound
movsl
adc
push
mov
xor
push
push
xchg
jb
repnz
or
xor
imul
sbb
jle
lcall
or
jle
and
add
sub
fcompl
or
cmp
shll
pushf
neg
mov
iret
dec
dec
jg
xchg
jl
clc
pop
mov
fisubs
jo
mov
js
int3
jne
jmp
mov
arpl
jb
mov
shrl
dec
mov
outsb
cmp
or
inc
xchg
lahf
rclb
imul
pushf
mov
mov
inc
and
adc
lock
nop
leave
sbb
and
pop
jl
ss
les
mov
jge
xor
push
inc
adc
call
jno
cmp
push
jecxz
fwait
mov
push
sbb
xor
mov
xchg
jno
insb
sub
pop
mov
xlat
sbb
out
addr16
repz
xor
test
scas
add
dec
sub
fiaddl
shlb
xchg
add
popf
into
adc
adc
push
movsl
das
sbbl
div
faddl
test
or
xchg
xchg
xchg
jl
pcmpgtb
popa
fisubrs
clc
loop
clc
fmulp
xorb
in
fadds
data16
push
or
leave
push
add
das
fisubl
lret
in
enter
movsw
ret
sti
decl
loop
pop
test
int
inc
push
push
inc
movsb
cld
xor
xlat
cmp
frstor
or
cmp
ds
push
add
xchg
jg
mov
jg
adc
jns
lcall
mov
sbb
dec
adc
mov
push
movsb
fs
adc
sub
xor
cmp
and
outsl
lds
filds
hlt
pop
pop
push
push
or
dec
inc
fnstsw
and
filds
pop
adc
ret
mov
pop
sbb
lret
sbb
ljmp
mov
nop
or
pop
jae,pt
mov
sub
xchg
gs
push
dec
xchg
push
sub
cld
add
aas
push
test
dec
das
push
pop
push
xchg
call
pop
js
inc
cwtl
push
inc
mov
lahf
mov
inc
in
cmc
ss
push
or
jne
outsl
lods
sub
add
dec
dec
aad
xor
push
add
lret
shl
jg
out
xchg
pop
and
aad
movsb
jecxz
sub
stos
ss
mov
mov
rcll
les
mov
notb
out
daa
out
cmp
into
mov
lahf
jmp
jmp
fbld
aaa
test
inc
mov
mov
jp
data16
xchg
or
push
js
fcmovbe
sbb
push
in
icebp
xor
xchg
inc
jmp
push
cltd
jecxz
pop
mov
mov
das
sti
pusha
out
in
and
pop
mov
dec
aam
shlb
push
fcom
in
and
push
lahf
jbe
lahf
fists
sub
lea
loop
orl
and
in
xchg
popf
ljmp
adc
dec
ficompl
sub
push
cmp
jae
scas
sub
pop
jle
mov
adc
out
lea
pop
lret
mov
fcom
or
xchg
inc
adc
xlat
mov
mov
clc
xchg
aaa
std
push
dec
mov
xchg
cmc
add
dec
mov
sub
and
sub
ss
mov
mov
push
lret
push
sbbl
push
jecxz
mov
fisubs
sub
out
movsb
xchg
push
and
fs
fidivrl
gs
pop
mov
stc
cmpsl
mov
sbb
pop
jb
cmp
scas
insl
mov
mov
jo
sbb
mov
push
mov
call
stc
outsb
sub
leave
inc
push
adc
add
add
mov
dec
mov
enter
inc
rcl
or
xlat
dec
sub
jmp
mov
punpcklbw
dec
push
sub
test
lods
jmp
cs
cmp
or
out
cld
dec
stos
xor
stos
mov
lock
or
mov
fldl
dec
ja
mov
sub
aaa
das
rcll
mov
sbb
lea
xor
mov
in
and
pop
cltd
inc
pop
mov
arpl
addr16
mull
mov
out
pop
lahf
sbb
push
dec
mov
mov
cmp
adc
push
xor
repz
ds
or
xchg
sbb
cmp
jne
jp
test
mov
and
in
imul
ds
int3
sub
jno
fstpt
out
loop
scas
stos
mov
inc
int3
lret
cmp
sub
xchg
stos
push
xchg
jge
pop
in
fildll
scas
shlb
mov
out
mov
mov
inc
sub
sbbb
stos
push
mov
movsl
mov
push
cld
jmp
outsb
testb
js
or
sbb
pop
insl
cltd
inc
stos
fstl
inc
mov
cmc
repz
pop
dec
and
lcall
mov
sbb
sbbl
orb
add
lahf
popa
pop
loopne
sahf
xchg
mov
cld
fiadds
pop
mov
inc
sub
lods
enter
xlat
push
xchg
mov
mov
lods
push
mov
stos
jle
stos
mov
pusha
lods
out
xchg
add
and
fcmovnb
or
mov
addr16
or
arpl
pop
xchg
xor
sbbb
pop
data16
mov
pop
testb
pop
or
jmp
cmpsb
test
test
mov
or
pop
lods
stos
dec
or
jge
adc
loope
orl
and
cmpsl
xchg
push
ret
cld
pop
shll
xchg
stc
sbb
sub
mov
test
pop
fcoml
rcrl
data16
inc
in
cmp
inc
fisubl
arpl
and
sbb
fdivrs
loopne
adc
in
pop
cmp
mov
repnz
adc
mov
pop
out
iret
in
mov
or
adc
or
dec
sub
sbb
jae
ficomps
pusha
iret
push
mov
xchg
xchg
arpl
les
cld
imul
xchg
stos
bnd
cmpsl
sub
or
fildl
jne
mov
jno
pop
sub
imul
mov
ret
jg
mov
sub
into
cltd
push
xchg
jno
jbe
ljmp
loope
dec
push
int3
pop
xor
sub
sarl
jmp
and
mov
mov
test
nop
jp
pop
addl
loopne
test
cmp
mov
movb
and
or
cltd
inc
iret
mov
add
jge
popa
test
test
ss
repz
fldl
xor
imul
leave
jbe
notl
hlt
dec
call
jge
jmp
push
jmp
or
xchg
cmp
mov
jb
xchg
clc
ss
xor
mov
in
mov
test
or
adc
hlt
xchg
lods
je
xchg
mov
adc
outsb
add
pop
loope
xchg
mov
push
pop
nop
int
and
fwait
adc
pop
push
nop/reserved
adc
fnstenv
ds
repnz
pop
push
divb
xchg
addr16
mov
nop
mov
xorl
ljmp
fstpt
jo
mov
mov
stos
dec
dec
push
mov
cs
mov
popa
cmc
xor
shrb
scas
incb
rcrb
and
rol
test
xlat
aas
out
inc
imul
jmp
or
in
test
sub
mov
insb
or
pop
aaa
daa
push
inc
stos
icebp
and
inc
cmc
push
mov
pop
push
shr
sub
mov
push
mov
mov
out
adc
adcl
out
sbb
hlt
fdivp
jb
cmp
pop
inc
dec
fldcw
mov
mov
mov
dec
pusha
add
cltd
lcall
imul
movsl
stos
push
sahf
dec
pop
sub
ljmp
push
shrl
lahf
ja
or
push
xchg
dec
sub
cld
xor
lods
stc
cmp
push
popf
hlt
lret
aas
pusha
fs
fildl
pop
daa
in
loope
adc
mov
test
pop
jl
bound
xchg
push
clc
ud0
push
jo
shl
pop
inc
repz
aaa
add
mov
mov
aaa
shl
xchg
cltd
pop
and
out
cmp
sub
fst
jge
cmp
add
sbb
pop
add
pop
pusha
sti
imul
cmpsl
mov
mov
xchg
imul
test
fwait
fxch
inc
mov
jle
jb
mov
fnstsw
scas
mov
sahf
lock
pop
insl
negl
push
sti
mov
test
mov
outsb
loopne
fimuls
rorl
popa
mov
insl
lret
xchg
pop
lods
inc
dec
cmp
aam
out
stos
xchg
mov
jg
or
hlt
test
add
mov
aas
sbb
push
loopne
pop
dec
mov
in
scas
sbb
xor
cmc
push
and
fpatan
xor
orl
pushf
mov
adc
pop
or
out
fadd
scas
jnp
testb
lahf
fxch
out
dec
xchg
sub
fsubl
leave
test
mov
ss
jb
pop
rorb
mov
sarb
push
outsl
iret
push
push
xchg
std
movsb
mov
push
xchg
movsl
mov
fisubrl
test
outsb
call
mov
stos
fwait
push
fs
sti
or
test
push
aam
or
xchg
push
or
into
xchg
pop
das
cmp
push
add
mov
jg
jle
inc
cmpsb
pop
fwait
cwtl
push
jmp
test
inc
sbb
bound
fstl
cmpsl
add
mov
mov
cmp
out
mov
popf
dec
cmpsb
push
ret
outsb
xchg
dec
jl
into
ja
cmp
add
icebp
pop
scas
jno
in
xchg
cmpl
adc
cs
cs
inc
or
test
fadd
stos
dec
loopne
enter
aam
std
aad
icebp
outsb
dec
pop
mov
cwtl
les
pop
mov
outsl
push
mov
stc
pop
popa
adc
mov
fs
dec
push
adc
cld
stos
ss
cmc
cltd
jle
and
xchg
jle
frstor
mov
xchg
xchg
inc
lahf
outsl
xor
loopne
mov
inc
mov
fwait
jns
ja
inc
mov
mov
pop
clc
sbb
test
cltd
dec
aad
pop
es
roll
mov
mov
xchg
repz
jg
xchg
xchg
lret
sbb
or
cld
sbb
and
lds
aaa
push
fmul
sbb
js
mov
ja
pusha
jg
push
pushf
pop
and
mov
je
arpl
roll
push
test
lret
lods
ljmp
iret
inc
xchg
rcll
mov
in
out
pop
js
xor
ret
and
inc
outsb
jle
add
sbbb
hlt
inc
inc
mov
cmp
lock
sbb
shrb
test
lea
mulb
xchg
jmp
xor
scas
in
jg
cmp
push
xchg
out
ret
mov
sub
or
xor
aaa
mov
cmpsb
enter
fmull
sarl
test
sbb
out
fnstcw
xor
xchg
push
stc
or
dec
adc
mov
cli
shll
push
jmp
clc
pop
ret
cltd
xchg
jecxz
es
pop
inc
and
push
jg
cmpsl
mov
dec
cmpb
aad
clc
inc
pop
adc
out
adc
lds
xchg
daa
je
pop
scas
jns
cs
mov
or
inc
pop
dec
sti
mov
sbb
and
inc
ret
push
cmp
mov
int
cld
stos
ds
adc
inc
nop
push
pop
cmp
je
sub
jecxz
shll
clc
imul
in
test
rcrb
lret
insl
xor
xchg
scas
mov
jns
shlb
jbe
cltd
aas
fnstsw
es
sbb
xchg
pop
xor
inc
fldl
out
shl
shlb
in
mov
insb
xor
cmp
filds
xor
xchg
mov
inc
clc
jne
jne
fwait
int
push
sbb
mov
pop
outsl
push
push
data16
push
daa
jp
sahf
jb
orl
outsb
add
jne
dec
mov
pop
shll
test
mov
xlat
int
nop
les
and
jnp
cmp
mov
mov
sbb
int3
shlb
jbe
mov
or
test
sbb
inc
jne
dec
cmp
jns
das
test
cld
pop
repnz
outsl
adc
or
int
rorb
mov
in
mov
repnz
jg
xor
jne
mov
push
cmp
dec
push
mov
fisttps
pop
cld
rorl
jmp
sbb
pop
sahf
test
andb
sub
aad
enter
add
aaa
mov
push
lods
mov
test
push
jl
inc
mov
fnstenv
sahf
aaa
in
std
stos
je
and
roll
inc
jl
jb
aam
sbb
imul
xchg
loope
out
dec
inc
popa
sbb
fcomip
loope
dec
xchg
mov
mov
dec
jmp
sub
mov
movsl
push
dec
mov
cwtl
andl
jle
pop
iret
negb
jmp
ret
mov
into
je,pn
pop
fwait
adc
int
jnp
jne
dec
sti
mov
bound
cmp
pop
push
jbe
aaa
add
imul
inc
bound
mov
mov
or
mov
cmp
mov
push
mov
inc
scas
out
jo
pop
loop
xchg
add
mov
je
push
mov
scas
or
pusha
mov
jg
imul
xchg
out
push
fs
cmp
push
loop
mov
sbb
and
lea
enter
adc
inc
imul
adc
xor
sbb
insl
ret
subb
movb
mov
ja
fstl
into
cmp
lcall
rcl
dec
add
pop
daa
inc
jle
std
test
popf
dec
or
lods
divb
sbb
or
test
mov
mov
jae
sti
jno
sub
or
inc
and
xlat
mov
sbb
mov
ljmp
xorl
push
in
push
xchg
lods
shlb
inc
loope
shr
cmp
lods
cli
xchg
or
int
andl
popf
mov
daa
xor
or
jmp
sub
jne
push
pop
sub
fisubrl
pushf
iret
rol
push
cld
inc
inc
sbb
paddd
jge
xor
jge
jns
aaa
pop
dec
dec
sahf
xor
sub
scas
add
repz
pop
xchg
push
cmpsl
sbb
or
inc
mov
mov
jmp
xor
nop
cmp
ds
or
sbb
aaa
aad
std
or
jne
aad
stos
cmp
jmp
adc
xchg
and
pop
icebp
in
inc
ret
lahf
fdivp
jbe
mov
pop
mov
enter
nop
cmovb
inc
pop
mov
clc
jae
push
mov
jcxz
pop
or
jbe
xchg
in
pop
xchg
xor
push
adc
and
aas
jl
sub
mov
and
jns
cmp
sbb
stos
jge
out
sti
cmp
mov
lea
movsb
scas
dec
test
push
sbb
push
stc
shrl
push
adc
scas
cld
fnstsw
jne
ds
push
mov
sub
xchg
push
pushf
jmp
cld
aam
mov
shll
mulb
or
sub
stos
shl
bound
in
pushf
push
push
das
mov
test
or
jl
pop
jno
out
xchg
mov
call
cs
xor
hlt
sub
cmp
add
fidivrs
cs
sub
cld
xchg
icebp
cmp
int
pusha
mov
das
leave
push
add
jge
shll
lret
jo
xor
sub
jne
loop
leave
and
std
mov
lahf
cmpsb
cs
mov
pop
adc
pop
lret
or
push
insl
insb
cmp
es
dec
or
and
push
fs
push
insl
xor
mov
test
xorl
movups
pusha
mov
out
cld
pop
pop
dec
sarb
pop
insb
stos
lea
inc
jg
adc
ja
pop
cltd
popf
fidivrl
and
push
insl
jl
adc
jl
nop
mov
nop
pop
outsl
mov
sbb
push
inc
pop
ror
test
dec
mov
enter
mov
sub
sbb
xchg
xchg
dec
syscall
or
je
push
mov
and
push
ret
loop
cmc
imul
jno
mov
cmc
mov
mov
lock
xchg
cmp
push
es
iret
imul
lea
shlb
aaa
xchg
in
inc
stc
mov
mov
out
mov
add
mov
inc
add
and
xchg
dec
push
or
pop
mov
loope
inc
clc
enter
dec
mov
inc
jno
inc
test
pusha
add
jne
mov
shlb
lods
jae
jns
in
call
xor
dec
xchg
mov
push
fwait
test
fsubr
mov
pop
bound
xor
cmp
pusha
js
mov
adc
call
and
inc
push
leave
icebp
repz
ja
mov
pop
pusha
adc
inc
push
movsl
cmp
imul
in
lret
pop
sti
incl
mov
adc
pushf
jmp
notb
pop
cs
movl
mov
movsl
sbb
xor
mov
cmp
jmp
sbb
pop
pop
push
insl
rclb
mov
mov
push
mov
movsb
aad
mov
cwtl
cmp
xor
lea
pop
int3
xchg
sub
push
adc
das
add
fwait
pop
rolb
xchg
jns
test
pop
stc
push
popa
in
inc
dec
jnp
and
in
xchg
add
shrl
ja
xor
sbb
filds
cmp
mov
cmp
imulb
cmp
arpl
inc
sub
dec
mov
into
push
mov
xor
add
inc
xchg
push
fnstenv
jnp
jne
dec
dec
inc
addl
mov
pop
push
pop
into
jnp
push
mov
mov
call
push
movsl
int
dec
popf
lods
insb
xchg
out
mov
int
imul
cltd
inc
addr16
bound
adc
sti
addl
inc
arpl
repnz
jge
push
popf
sub
vfnmsub213ps
mov
divb
hlt
adc
stos
pop
fdivl
fisttps
repnz
push
aad
pop
add
in
jge
mov
push
xor
dec
xor
mov
jmp
arpl
sti
shlb
loopne
int3
outsl
xchg
mov
xchg
clc
aad
sub
cwtl
ja
push
cmpsb
dec
data16
adc
fucomi
faddl
ljmp
push
jne
and
orb
leave
iret
ljmp
fstpt
mov
xchg
roll
and
ss
jne
cmp
xchg
shrb
iret
shll
sbb
aas
jb
aad
push
shrl
mov
inc
sbb
cmp
dec
push
popf
ss
jno
pop
stc
mov
ja
fimull
loopne
dec
out
fs
jmp
add
sbb
jnp
push
fisttpll
jns
into
sub
xor
ret
adc
arpl
nop
xchg
outsl
pop
out
js
shl
xor
mov
out
cmp
fisttpl
xor
xor
stc
cli
sub
mov
fcomps
jle
cmp
jmp
out
dec
sub
repz
jno
inc
xor
and
aam
xchg
repz
jmp
add
pop
sub
push
sbb
pop
jb
nop
push
test
sbb
inc
mov
rorl
push
xchg
mov
insb
jno
test
movsb
push
dec
fsubp
popf
das
sbb
add
sbb
imul
stos
mov
ja
movsl
fst
lock
and
outsb
mov
test
shlb
add
pop
inc
mov
insl
iret
mov
cmp
repnz
lret
movb
ja
add
sub
mov
ss
cmc
push
or
int
sbb
pop
inc
sub
dec
and
xor
cmp
push
out
xchg
lret
mov
mov
imul
hlt
sub
rcll
cwtl
imul
test
fimull
sahf
xor
pop
vpmacsswd
adcb
roll
sbb
inc
int
pop
cmp
stos
or
jns
pop
mov
cmpsb
inc
test
pushf
ss
pushf
dec
mov
ja
or
inc
push
dec
jo
push
imul
xchg
cltd
lds
fs
ficompl
insl
lcall
or
negb
pop
push
cmp
jge
or
xor
or
in
fwait
or
leave
xor
imul
flds
jne
ja
xchg
scas
in
cmovne
test
inc
test
add
mov
mov
push
lret
xorl
cmovo
xchg
imul
add
mov
pop
adc
inc
fsubl
ret
bound
xchg
shrl
mov
fwait
movsl
jnp
icebp
push
cmp
ds
int
push
popl
cmp
insb
jo
notb
cs
xor
or
fisttps
int3
subb
mov
inc
adc
jbe
mov
notb
adc
ja
lea
mov
sahf
xchg
xor
cli
sub
xor
daa
mov
bound
mov
adc
pop
lret
mov
cltd
cmp
jno
shll
imul
cmp
jmp
or
cmc
dec
gs
loope
sub
addl
or
sbb
mov
test
sub
sbb
out
popa
loopne
mov
jp
out
pop
mov
sarl
dec
add
js
int
fstpl
ja
or
pop
pop
xchg
out
cmp
daa
addr16
aam
ffree
mov
jge
or
xor
nop
or
mov
and
xchg
popf
pop
or
ss
xchg
dec
push
jns
jmp
xor
mov
dec
jno
mov
sbb
mov
nop
sbb
push
push
ljmp
jle
test
jmp
mov
jae
es
lock
aam
xchg
loope
push
out
cmp
scas
mov
pop
cmp
aam
pop
aad
push
cli
lahf
inc
push
pop
pop
pop
gs
das
mov
jne
add
pop
cld
jne
dec
sub
push
and
jnp
jnp
rclb
neg
add
push
jl
and
lods
shll
aam
ljmp
jns
mov
outsb
mov
mov
and
and
leave
inc
jnp
adc
pusha
mov
lods
mov
inc
or
mov
mov
jno
add
mov
sbb
and
mov
test
iret
stos
inc
test
or
xor
sbb
jmp
pop
stos
mov
pop
adc
mov
or
push
movsb
std
xchg
pop
sbb
xor
into
adc
sbb
push
xor
adc
mov
sbb
mov
mov
and
jle
or
sbb
and
xchg
imul
les
add
mov
test
dec
scas
mov
xor
mov
cmp
mov
inc
movq
sbb
aas
push
loopne
add
int
and
push
xchg
mov
jmp
cli
in
push
jecxz
inc
mov
sub
adc
iret
adc
or
adc
mov
scas
jb
shr
pusha
adc
mov
mov
leave
xorl
sbb
mov
push
dec
inc
cli
add
and
cmpsb
sbb
shll
mov
dec
mov
movb
imul
mov
sub
jecxz
frstor
cmp
aaa
loopne
and
fiadds
add
cmp
jnp
cmpsb
std
ja
fidivrl
sub
into
shll
xor
jb
fldl2t
in
mov
daa
jns
lods
notl
pusha
mov
insb
in
stos
repnz
ja
xchg
jle
arpl
mov
scas
mov
adc
test
pop
dec
pop
push
popf
test
insb
mov
mov
push
jae
dec
push
jb
mov
int3
push
and
push
pop
sub
pop
or
adc
dec
adc
xlat
add
js
push
faddl
xor
loope
adc
mov
pop
xorb
aad
scas
push
adc
push
inc
and
lods
mov
arpl
push
stc
pop
sarb
mov
pop
ds
cmp
add
inc
enter
loop
loopne
add
loope
sarb
cld
mov
push
fbstp
aaa
mov
xor
loopne
mov
add
inc
in
push
xor
fwait
rcrl
lods
or
out
ret
pop
mov
hlt
mov
dec
outsl
outsl
fwait
jo
mov
jl
sub
aas
pop
dec
je
mov
addr16
or
mov
repnz
pop
and
jb
icebp
adc
dec
and
add
cli
sbb
push
aam
loop
mov
and
jl
faddl
lahf
mov
adc
dec
xchg
mov
sbb
inc
cmp
adc
outsb
stos
sti
xor
jl
mov
jle
push
pushf
in
mov
and
aam
push
ss
sysret
sbb
dec
dec
mov
cmp
jae
fisubrs
ret
ljmp
xchg
sub
mov
fstp
rorb
mov
les
popf
sub
push
push
mov
pop
clc
test
xchg
push
pop
aam
dec
fstpl
inc
in
xchg
pop
out
in
ret
cltd
dec
xchg
sbb
in
sar
cmpsb
sbb
and
imul
ret
jne
outsl
mov
inc
into
inc
jl
add
jnp
stos
je
push
adc
jp
mov
and
pusha
mov
push
incl
cmc
mov
cmpsl
fistpll
and
pusha
inc
lods
xor
xchg
sub
repnz
outsb
imul
outsl
pushl
arpl
jae
sbb
imul
ljmp
jnp
cmp
shll
je
cmc
xchg
and
pop
sub
in
in
lods
fcmovbe
stc
adc
push
in
es
lea
jl,pt
add
mov
and
xchg
int
in
jae
mov
lods
jg
ja
mov
and
jne
xor
out
pop
add
cmp
fwait
lods
pop
lods
jp
lods
add
je
add
pushf
jno
shlb
ds
push
ret
push
popa
push
testl
std
xor
dec
jae
adc
mov
mov
lcall
inc
xor
in
fsubl
pop
in
sub
pop
enter
inc
aaa
or
add
sub
mov
les
fadds
and
aas
test
xor
mov
fsubs
sbb
jp
pop
cmp
mov
scas
push
ja
adcb
mov
imul
clc
mov
sub
dec
rcrl
cmp
cmc
ffreep
imul
jmp
mov
jae
sub
bound
pop
cltd
not
cmpsb
cli
fsubrs
insl
xor
and
xor
sub
scas
xchg
xlat
cs
cmp
sbb
cltd
and
sti
jae
repz
ljmp
insl
mov
ret
mov
andb
mov
or
mov
fwait
adc
adc
mul
out
inc
pop
ret
iret
xor
pusha
xchg
mov
daa
data16
xchg
les
mov
shl
xchg
pop
add
adc
call
sti
push
push
std
ret
mov
add
jb
aaa
test
mov
xchg
out
negb
fidivs
rcrl
scas
xchg
push
cmp
inc
nop
or
ds
sub
cwtl
jae
aaa
mov
lods
jae
bound
mov
push
mov
sbb
pop
iret
nop
int
xchg
jae
and
xchg
cmp
xchg
cmp
lods
repz
enter
sub
inc
or
dec
mov
call
andb
mov
sub
std
mov
push
add
testl
cmp
ror
mov
imul
jg
outsb
dec
pop
mov
fdivrp
sbb
stos
adc
int3
lcall
cs
mov
ja
pop
dec
cwtl
stos
sahf
xchg
adc
and
xchg
fwait
xor
xchg
hlt
push
fwait
mov
push
fistpl
movsb
jge
in
mov
jbe
iret
inc
shlb
cmp
arpl
setl
xchg
subb
xchg
add
fstp
or
lcall
mov
adc
jmp
ret
xchg
lahf
cmp
pop
add
data16
ret
or
insb
pop
add
and
into
inc
inc
notl
loope
gs
pusha
call
repz
push
jno
xchg
pop
test
mov
mov
cwtl
push
xor
push
sub
mov
sbb
mov
sbb
les
test
popa
cs
mov
or
mov
popa
add
jp
cmpsl
inc
clc
xchg
rcrl
jb
fistl
movsl
cmp
mov
fdivrp
jb
dec
repz
inc
daa
int3
int3
sbb
es
mulb
push
insl
sbb
jmp
mov
inc
js
cmp
out
mov
insl
mov
scas
sub
ret
or
mov
mov
dec
adc
arpl
dec
dec
lods
sub
movsl
lcall
lods
fstl
xchg
add
and
mov
adc
and
push
xchg
push
mov
xor
int
adc
xor
cmp
popf
push
sub
mov
lret
xlat
cmp
or
or
insb
sub
jg
jne
add
jecxz
jmp
add
dec
mov
incl
into
std
inc
add
scas
test
xchg
out
into
rclb
stos
jns
in
push
push
ret
testl
adc
xchg
cwtl
cli
int
mov
int
cmp
mov
movsb
fstl
repnz
pop
xor
int3
outsb
pop
icebp
xchg
movsb
xor
or
inc
addl
jno
sbb
ret
fwait
jmp
out
jbe
lcall
imul
add
dec
push
sub
add
dec
push
add
stc
loop
and
leave
mov
sarl
call
mov
in
ret
sub
sahf
bnd
xchg
loopne
outsl
sbb
inc
or
adc
and
sbb
cmp
bound
mov
pop
rcpps
lret
fs
dec
or
sub
lods
cmpsb
dec
xor
dec
cmp
push
js
popf
into
dec
test
jno
mov
mov
sti
rorl
scas
insl
and
push
sahf
iret
add
fdivrs
jbe
fstps
xchg
imul
mov
dec
cmpsb
mov
out
jle
lods
repz
push
jnp
outsb
ss
mov
xchg
mov
mov
ret
popa
sub
sub
inc
movsb
hlt
mov
insl
imul
stc
lret
sub
sbb
inc
xor
pop
outsb
int
pop
sub
jg
xchg
or
cmpsl
sbb
pop
out
sahf
push
dec
in
xchg
call
mov
jge
iret
mov
aam
bound
jmp
fs
adc
outsb
xlat
jle
stc
adc
loopne
lds
mov
jnp
hlt
or
call
sub
or
push
sbb
dec
xchg
add
cmp
cmp
insl
sbb
push
jle
cmpsl
push
push
or
cmpl
push
dec
xor
adc
push
and
pop
arpl
dec
test
popf
inc
xor
jae
mov
stc
and
pop
stos
mov
jecxz
addr16
mov
insb
fisttps
xor
cmpsl
fstl
adc
jbe
jecxz
ja
stos
and
sub
xor
sbb
enter
xlat
jecxz
jae
ljmp
sar
add
shll
pop
lret
lea
aas
mov
movups
mov
xor
les
lock
iret
push
shlb
jecxz
test
cs
ds
push
test
jbe
jmp
push
fdivr
dec
pop
or
arpl
out
push
cmp
addr16
lret
mov
enter
sbb
add
mov
fadds
add
add
aas
lock
stos
pop
aam
rorl
aam
xor
orl
lock
xor
push
mov
movsb
insb
sbb
inc
xor
fildl
add
ja
mov
and
mov
cmpsb
inc
mov
pop
add
mov
jno
or
pop
cmpsb
xor
repnz
fildl
push
ljmp
ja
hlt
adc
push
jmp
sbb
cwtl
cmp
out
jle
dec
pop
sub
or
xchg
sar
ss
jl
icebp
ja
mov
out
not
int
xchg
in
adc
testb
mov
add
or
test
adcl
frstor
cmp
stos
adc
imul
lds
cmpl
repnz
rcll
iret
push
xor
adc
inc
xchg
sbb
popf
push
aam
aaa
ja
xor
mov
out
xchg
lock
push
in
pop
cwtl
xor
pop
xor
inc
pop
cmp
dec
add
arpl
rclb
sbb
shll
cmp
inc
mov
inc
xor
movsl
add
mov
mulb
or
jle
cmp
mov
popa
push
xlat
outsl
or
cwtl
scas
jb
pop
imul
mov
out
jmp
incb
push
inc
out
repnz
pop
push
scas
fcomps
push
cmp
cmpsb
cmp
in
mov
mov
test
cs
lcall
dec
sbb
into
or
clc
and
and
pop
int3
add
stos
fildll
xor
icebp
pop
enter
out
lds
popl
xchg
cmp
or
mov
dec
mov
pop
xchg
sub
aad
sbb
pop
push
sbb
test
addr16
push
in
lcall
mov
dec
fs
bt
test
imul
out
sub
out
sub
sahf
into
or
adc
dec
and
sbbl
es
addb
dec
inc
cmpsb
pop
jmp
pop
cli
inc
ds
mov
test
fisttps
test
psraw
faddl
movsl
ss
in
dec
jbe
adc
jg
xor
hlt
push
adc
test
sub
lret
fs
aam
push
or
pop
jnp
mov
dec
stc
jne
pop
cmp
jb
inc
cmp
out
pop
cld
ljmp
dec
inc
shll
fnstenv
fcmovnbe
pop
pop
jge
dec
xor
scas
xor
test
xchg
arpl
aas
cmpsb
xor
jl
out
sub
arpl
ds
push
mov
out
sar
das
aad
fsubrl
xor
mov
in
add
popf
aaa
jno
movsl
adc
push
sbb
mov
lods
cmp
stc
jl
inc
stc
sbb
cmp
push
mov
jp
cmp
movsb
push
sbb
ret
cmp
pop
int3
pop
inc
push
inc
and
sbb
sub
lock
loop
push
mov
mov
sbb
call
and
xchg
inc
mov
and
in
xchg
mov
aaa
inc
jl
jo
mov
inc
or
pop
in
mov
adc
push
pusha
mov
mov
pusha
mov
outsb
lret
push
mulb
cmpsl
icebp
inc
out
iret
mov
outsb
push
sbb
cmpsb
je
push
lea
jmp
je
or
and
sub
mov
inc
jo
lahf
mov
jecxz
add
scas
ret
pop
inc
lods
sbb
ret
in
mov
or
and
loopne
mov
xchg
fnstsw
int
push
cwtl
xchg
adc
aad
pusha
pop
jmp
scas
or
movsl
inc
ljmp
inc
stos
or
lcall
inc
loopne
movsl
int
adc
inc
ret
push
jbe
sub
mov
dec
xchg
dec
pop
pop
out
ret
clc
inc
jb
push
sti
mov
mov
dec
jno
out
add
lods
sub
call
loope
idiv
mov
xor
push
pop
mov
outsl
fsubrl
fldpi
popa
fistpl
cmpsb
pop
xchg
mov
ret
scas
jge
sbb
dec
add
add
dec
cli
sbb
push
xchg
xchg
idivl
and
addr16
cs
add
jmp
int3
aaa
mov
pushf
and
mov
adc
and
mov
mov
shrl
clc
mov
andl
dec
push
cmp
adc
push
jle
sub
add
mov
lret
pop
mov
call
in
inc
mov
aas
imul
mov
pop
lods
test
mov
mov
jo
pop
call
jmp
xchg
nop
lcall
lret
int
aam
or
roll
mov
pop
xchg
or
int3
sbb
mov
pop
enterw
iret
add
add
and
add
outsb
or
sub
jne
jge
addr16
shlb
ss
mov
hlt
and
test
sti
aas
pusha
add
push
sbb
lods
pop
pusha
lock
pushf
fidivl
adc
cmp
push
mov
int3
imul
gs
jb
jg
fnsetpm(287
xor
leave
outsb
lret
pop
mov
outsl
dec
mov
mov
ret
xchg
or
lock
pop
sbb
fwait
cltd
fs
or
sbb
xchg
jg
pop
bound
and
dec
aad
ret
ret
jb
shlb
push
inc
in
mov
les
sbb
dec
adc
push
insb
xchg
divl
out
inc
int3
dec
mov
pusha
call
mov
nop
inc
loopne
sbb
ret
dec
mov
addr16
sar
inc
pop
pop
pop
in
cmp
push
or
and
cmp
xchg
mov
cmp
int
jns
cmp
push
les
push
int3
in
lret
mov
enter
ret
sub
xchg
cmpsb
mov
mov
push
scas
mov
int3
fs
int3
adc
adc
rcrl
jae
xor
mov
mov
sbbb
inc
aas
mov
jns
js
in
cmp
pop
lods
inc
loopne
lret
ja
inc
pushf
fldl
jbe
add
cmpl
adc
cmp
pop
inc
sub
int
test
jae
cmp
cmpsb
sbb
lea
mov
out
cmp
ret
loop
ret
push
jmp
lods
inc
icebp
add
lret
orb
cmp
adc
mov
push
sub
xor
sub
out
inc
outsl
addl
and
push
cmpsb
mov
fbld
cltd
inc
scas
aaa
mov
sahf
xchg
and
cmpsl
inc
pop
push
popa
loope
jmp
dec
mov
lods
or
fwait
or
sub
adc
or
arpl
push
push
or
cmp
aam
or
mov
dec
leave
in
cld
movsl
pushf
mov
push
mov
push
orb
fstl
xor
push
andb
shrl
dec
out
es
mov
jg
mov
xchg
ljmp
fs
jbe
or
cmp
mov
loopne
mov
or
aad
rcll
rorl
cmc
xchg
cmp
adc
xor
add
push
add
insb
sbb
and
loope
mov
es
mov
xor
mov
mov
rcrl
xchg
jb
sub
dec
xor
jmp
iret
loopne
adc
xor
add
nop
adc
ficompl
mov
adc
lret
xor
jecxz
jmp
mov
adc
mov
pushf
mov
lret
loopne
aas
dec
popa
pop
xchg
aaa
es
push
call
sbb
out
mov
push
xchg
sarb
lods
and
and
int
sbb
cld
adc
xor
js
imull
mov
xchg
push
sbb
pop
dec
dec
xchg
scas
call
or
mov
sub
dec
mov
inc
adc
pop
inc
shlb
cld
fldl
mov
and
adc
dec
and
pop
jp
push
cmpsb
jl
or
push
xchg
fistpll
jmp
aaa
pop
dec
mov
pop
cmp
adcb
xorb
xor
vmovupd
movsb
or
push
sahf
xchg
test
stc
add
cmp
sti
xor
jle
mov
test
scas
pop
out
rorl
lret
add
fdivs
push
sbb
jecxz
add
inc
popa
add
lret
push
sbb
xor
notl
mov
sti
loopne
jns
or
daa
mov
xchg
inc
mov
lods
pop
inc
repnz
int3
jae
xchg
add
mov
sbb
je
adc
decb
clc
mov
mov
xor
jno
out
mov
sbb
fiadds
cmp
push
aam
popf
adc
push
data16
xchg
adc
mov
cld
sar
addr16
imul
es
pop
fsts
in
addr16
and
sub
mov
outsl
dec
and
pop
test
not
in
repz
jg
xor
jbe
jl
ret
cltd
es
outsl
stos
fmuls
pusha
pop
pop
pop
dec
loop
iret
addl
sub
rolb
pop
pushf
mov
and
stos
dec
mov
adc
cld
xchg
cmp
fbstp
push
fidivrs
jno
lock
jmp
or
mov
cmpsl
mov
sbb
dec
pop
repz
jg
add
loopne
pop
sub
cmpsb
adc
push
lods
fdivrl
std
push
pop
shrb
or
sti
stc
jbe
scas
bound
sahf
cwtl
cmp
aaa
aam
adc
daa
xor
xchg
push
incl
fsubs
and
xchg
movsb
jnp
aam
push
cltd
mov
pop
jmp
mov
movsl
loop
pop
fcompl
dec
inc
sub
inc
lock
not
inc
fs
dec
inc
fsubr
sbb
push
stc
scas
pop
mov
incb
mov
test
add
inc
iret
sbbb
mov
mov
mov
sub
loop
ret
fildll
jecxz
xor
sbb
fldcw
je
mov
lret
adc
or
inc
push
mov
sbb
xchg
sub
inc
rcrl
and
push
mov
cmp
std
push
popa
cwtl
or
cmp
pop
test
stc
mov
outsl
stc
mov
inc
mov
push
int
ja
sbb
clc
xor
cltd
jg
sub
cmp
jecxz
xchg
push
inc
sarl
arpl
mov
push
outsb
pop
sub
pop
outsl
pop
pushf
push
stc
pop
orl
popl
je
push
add
les
stos
sbbl
jge
ror
stc
or
scas
dec
jmp
in
movsl
adc
add
imul
cmpsb
jb
pop
or
pop
adc
sahf
stos
shrb
sbb
in
outsb
scas
adc
jo
stos
dec
cli
imul
jl
icebp
mov
aam
mov
mov
and
mov
push
stos
add
mov
cmc
ss
lock
add
vcvtdq2ps
scas
mov
jne
pop
xchg
sbb
dec
lods
das
add
xor
pusha
add
cmpsb
lcall
jns
inc
mov
into
in
test
lret
loop
sbb
inc
gs
das
loop
call
sbb
leave
sbb
stos
pushl
movsb
rcrb
and
mov
jo
mov
out
leave
push
aaa
mov
dec
adc
out
loope
mov
cmp
push
mov
push
inc
pop
and
jnp
cmp
data16
xorl
sub
insb
aaa
imul
loopne
in
int
gs
nop
adcl
mov
cmp
xchg
dec
and
dec
out
and
nop
dec
xor
sbb
loopne
jnp
inc
clc
or
lods
sbb
mov
pop
mov
push
push
aam
dec
and
adc
jbe
test
ficoml
decl
je
cmp
xchg
icebp
popa
adc
les
je
push
mov
or
xchg
mov
jge
mov
cmp
cmp
scas
je
pop
lret
mov
jne
adc
pushf
jb
outsl
jg
mov
sbb
int
and
pop
bound
sti
adc
adc
push
fists
dec
icebp
sub
jbe
subl
les
repnz
cmp
pop
rcl
aaa
in
movsb
fxtract
outsb
jno
adc
cltd
ds
pop
sbb
or
addr16
lds
pop
mov
fisttpl
and
adc
fsubp
lods
scas
jecxz
dec
addl
sbb
add
fsub
pop
xorb
sub
add
imul
or
mov
pop
repz
xor
xor
call
mov
sbb
insl
imul
enter
cmp
movsb
lcall
push
mov
pop
dec
shrb
mov
stc
xchg
nop
jp
cmp
lods
inc
lea
inc
ret
push
mov
dec
jle
fisttpll
aas
add
out
dec
dec
mov
add
bound
and
inc
jl
adc
scas
sub
mov
xor
cmpsb
xorl
jp
js
pop
push
mov
lods
push
stos
hlt
or
in
adc
cld
cli
pop
lcall
nop
mov
jecxz
inc
xchg
mov
dec
ret
aaa
sbb
enter
cld
inc
push
cld
push
aam
iret
scas
cs
mov
lahf
pop
lds
dec
scas
out
mov
mov
in
mov
gs
xchg
xor
adc
jno
fucomi
inc
add
mov
dec
adc
add
xchg
xor
fwait
je
push
pop
xchg
mov
fwait
incb
jle
mov
or
jle
jne
imul
add
test
gs
lods
imul
jp
sbb
jecxz
adc
dec
pusha
jb
jl
ret
mov
mov
or
int
scas
hlt
das
loopne
fstpl
sub
imul
or
or
sub
roll
testl
hlt
add
push
xchg
shl
sbb
sti
cmp
push
popf
xor
fstpl
xchg
ret
and
jecxz
repnz
insb
push
movl
pop
lret
dec
and
push
xor
push
sub
das
pop
out
std
xchg
cli
lret
jg
add
imulb
arpl
push
stc
mov
jo
dec
movsl
lcall
std
adc
jg
shrl
push
nop
xchg
popf
dec
sahf
or
test
movsb
popa
mov
cmp
lret
push
pop
sbb
cmp
mov
repz
xchg
xor
or
lods
mov
cwtl
movsl
int3
fwait
mov
addr16
lret
mov
ds
test
jnp
mov
inc
fbstp
and
in
stos
test
mov
push
jbe
jecxz
fisubrs
cmc
mov
arpl
in
sbb
cmp
pop
jle
xchg
and
jnp
cmp
adc
mov
je
dec
js
pusha
mov
movsl
sbb
xor
fcmovb
and
jo
inc
les
nop
das
sbb
xchg
push
mov
inc
imul
dec
sbb
ret
sbb
mov
insb
and
sbb
lods
jle
sar
mov
inc
fimull
iret
jbe
adcb
xchg
xchg
aad
aaa
xchg
or
scas
cmp
outsb
cmpsl
hlt
adc
cmpsl
add
es
fidivrs
sbb
inc
gs
sub
add
cmp
stos
push
popa
fwait
repz
jmp
dec
loopne
jo
xchg
xorl
xchg
xchg
inc
int3
jecxz
adc
sbb
shl
add
daa
fucomip
mov
fdivr
jmp
mov
enter
lock
cmp
add
outsl
ja
fisttpl
adc
jmp
lcall
outsl
pop
shll
pop
inc
ja
push
add
cs
mov
test
xor
jp
ficoml
or
dec
fadds
pop
fadds
daa
add
test
imulb
inc
mov
adc
scas
and
jb
lds
lock
lods
in
movsl
test
jmp
adc
inc
adc
outsl
cmpsl
sub
ja
add
ret
jae
and
xor
xchg
xor
or
subb
fs
jo
mov
movsb
mov
mov
lds
fsubl
push
test
jb
fnsave
jbe
test
cmp
cli
push
xchg
cmp
add
mov
and
and
pop
mov
jp
mov
pop
pop
cmpsl
mov
cmp
arpl
inc
clc
pop
leave
repz
jecxz
inc
mov
cs
clc
pop
xchg
mov
fiaddl
or
mov
jbe
push
jmp
push
mov
pop
loope
mov
cmp
daa
sbb
addr16
cmp
testl
in
in
lret
js
fisubrs
cs
push
fidivl
arpl
xchg
jo
shrl
das
mov
out
icebp
bound
stc
in
push
scas
stos
add
arpl
fidivrl
test
cmpsl
mov
ljmp
shlb
imul
repnz
jae
jb
mov
jp
mov
fwait
ds
mov
insb
and
pop
cld
mov
lods
dec
call
and
js
popa
fisttpll
sub
push
mov
mov
stc
xchg
adc
fmuls
jno
fcmovu
lcall
push
xlat
dec
jecxz
jge
sbb
sub
std
cmpsb
dec
add
les
das
sbb
xor
popf
and
nop
push
lret
jns
cmp
sub
mov
in
mov
jo
jns
daa
out
ljmp
ds
inc
outsb
daa
pop
push
jno
into
pushf
fsubr
inc
rcrb
pop
orb
push
inc
sbb
add
and
push
push
cmc
fdivrs
pop
pop
mov
sahf
pop
fldl
push
shll
or
jp
cmp
out
lret
inc
and
sub
jmp
repz
ret
and
dec
mov
mov
pop
jb
mov
sbb
jmp
mov
fdivrs
pop
ret
jmp
mov
pop
data16
and
out
or
into
mov
adc
add
gs
jns
xlat
push
jb
jne
sbb
in
adc
in
jecxz
push
iret
pop
aaa
jno
inc
int
mov
cmpsl
lcall
shr
adc
add
jmp
cwtl
mov
cmp
aad
dec
adc
lods
popf
notb
enter
or
and
add
insl
in
inc
in
ds
adc
in
ret
inc
adc
fld
or
sbb
push
cmp
pop
sbb
inc
and
and
pop
pop
fs
xchg
call
and
sbb
add
mov
sbb
test
sahf
sbbb
mov
dec
xchg
jl
int
mov
fmull
repnz
add
xor
leave
adc
test
mov
aas
or
mov
cmp
in
or
loopne
pop
cmp
aas
mov
xor
fbstp
and
cmc
or
test
mov
loopne
repnz
xchg
fldenv
cmp
and
lods
mov
popa
lds
mov
cmp
pop
mov
rcll
out
add
loopne
fmuls
fs
cmp
flds
imul
aam
push
fs
mov
popa
shr
add
add
dec
xchg
nop
dec
iret
mov
popaw
scas
xor
push
jmp
addr16
pop
push
mov
and
and
sti
mov
inc
cmp
pop
cmpsb
imulb
cli
fs
sbb
mov
aas
push
or
ficomps
jae
mov
mov
popf
adcb
and
jns
mov
or
add
push
and
arpl
ret
data16
lods
leave
and
cmp
nop
jg
leave
pop
mov
fadd
pop
push
or
pop
xor
push
les
mov
pop
arpl
inc
dec
add
movsb
js
lock
sub
popa
pop
scas
mov
out
sti
jge
icebp
loop
cmpb
les
xor
lock
mov
call
and
push
sub
dec
xor
jge
mov
jecxz
int
dec
dec
cmc
in
inc
cmpsb
outsb
int3
cmpsl
imul
pop
push
icebp
adc
sub
mov
lret
adc
adc
push
scas
pmaxsw
loopne
loop
cmc
add
push
int3
push
jbe
lret
repz
test
cmc
test
jl
mov
and
adc
xor
jmp
inc
ret
dec
popf
fidivs
adc
int
fisubl
mov
dec
and
mov
dec
jno
pop
add
jae
jmp
stc
mov
add
dec
add
inc
adc
inc
imul
push
ror
xchg
rcrb
in
or
and
pop
mov
add
mov
pop
stos
jno
dec
in
repnz
fcmovnb
xchg
and
js
inc
mov
mov
in
ret
push
or
mov
inc
and
xchg
aaa
loop
mov
push
adc
pop
push
arpl
repnz
xchg
mov
push
adc
jns
push
cmc
popl
ds
into
pop
scas
test
repnz
sbb
mov
mov
mov
fldt
add
dec
ja,pn
stc
cmp
in
mov
push
fisttpl
mov
or
and
mov
mov
imul
sahf
pop
jae
mov
xchg
mov
pop
mov
std
mov
jl
add
ret
and
aam
cmp
push
inc
jno
fisttpll
pop
lods
mov
ljmp
nop
cld
xchg
call
das
cmp
jb
push
pop
lret
into
adc
dec
pop
repz
ljmp
pop
lcall
xor
or
inc
sub
mov
popf
mov
pop
and
push
scas
push
jo
repnz
xor
pop
pop
adc
pop
sbb
pop
jnp
popf
andl
lods
or
adc
aad
inc
xchg
push
fidivs
xchg
dec
or
and
subl
in
out
sbb
adc
cmp
jb
mov
adc
repz
pop
adc
mov
lock
adc
outsb
stos
mov
je
in
fucom
and
cmpsb
rcrl
mov
fwait
xor
enter
jmp
or
in
adc
outsl
lret
inc
mov
ret
je
pop
decl
xchg
out
mov
xchg
xchg
dec
push
mov
ja
adc
sti
rcll
add
mov
adc
out
sarl
and
xor
jle
pusha
jg
pop
dec
pop
cmp
mov
dec
aas
pop
lahf
push
fimull
and
jae
das
sahf
mov
cmp
inc
fstps
push
icebp
addr16
jecxz
jno
xchg
std
dec
xlat
dec
inc
loope
test
shrl
jae
inc
inc
test
js
iret
or
call
push
iret
cmp
mov
dec
jns
inc
into
dec
insb
inc
pop
pushf
xor
push
mov
push
rcrl
lock
cltd
call
insb
bound
push
fwait
jle
push
xchg
jae
fcomp
xchg
mov
jne
jns
add
fistpl
fwait
push
iret
xchg
or
adc
mov
notb
dec
cld
stos
cmpsl
lret
xor
or
cmp
dec
pop
add
negl
ffree
in
call
add
mov
pop
push
dec
popf
adc
dec
pop
mov
xchg
mov
add
int3
push
add
xor
push
cmp
mov
and
mov
jns
ds
pop
and
pop
dec
jo
aam
sub
mov
lret
popf
xchg
arpl
sbb
push
fwait
xor
sarb
dec
add
dec
insb
or
dec
inc
mov
sub
fcmovbe
divb
sbb
pop
and
xchg
mov
icebp
and
hlt
sarb
mov
cld
pop
fldl
jns
xchg
sarl
fistpll
push
dec
fisttpl
pop
pop
loop
mov
leave
xor
xor
push
add
int3
das
xchg
xchg
loopne
adc
mov
gs
addr16
bound
xchg
fdivp
jl
shll
mov
mov
scas
cmc
jne
call
adc
xchg
test
xor
mov
imul
pusha
pop
sbb
dec
int3
ljmp
cmp
addr16
adc
jnp
mov
mov
xchg
mov
or
xlat
and
jecxz
jae
mov
in
fists
dec
jne
sbb
mov
push
sub
or
dec
xor
add
fwait
or
cmp
adc
and
aam
cmp
leave
inc
sub
add
add
jmp
pop
sbb
subb
add
in
jg
add
push
mov
daa
dec
push
cmpsl
inc
int3
jp,pn
or
outsl
or
or
inc
mov
cmc
and
or
push
in
imul
loop
jns
adc
inc
push
enter
and
pushf
adc
insl
xchg
jne
adc
outsb
movsb
pop
adc
push
mov
ffreep
inc
pusha
xchg
lock
xor
jg
in
repz
das
iret
clc
inc
fisubl
ljmp
out
in
aaa
rorb
jb
mov
test
pop
mov
addr16
xchg
lret
pop
add
rorl
push
rorb
pop
mov
jns
push
daa
loopw
shlb
test
xchg
jp
pop
xchg
test
mov
push
jmp
fdivr
jge
jecxz
lret
xchg
pop
icebp
mov
imul
pop
movsl
cltd
or
test
jp
jg
mov
divb
and
or
fwait
jmp
xorb
or
sbb
fldenv
xchg
cltd
dec
pop
rcrb
rcrl
int
out
sar
fldenv
jle
mov
inc
in
scas
repnz
testl
ficomps
inc
out
in
or
pusha
cmp
mov
push
mov
popa
mov
imul
jb
pop
jae
andb
mov
jmp
stos
xchg
ret
les
fwait
dec
ljmp
das
jmp
sbb
push
sub
ficompl
ds
sub
inc
mov
jmp
outsb
jae
dec
jbe
imul
inc
arpl
ljmp
sbb
pop
stc
imul
sbb
lret
mov
or
cmp
ss
movsl
ror
jne
cmp
push
push
push
cmp
adcb
sub
pop
out
pop
sbb
pushl
cmp
add
adc
jl
insb
and
inc
and
mov
loop
hlt
xor
xchg
jl
shrb
cmp
xchg
aas
mov
fsts
imul
dec
mov
ds
and
lods
mov
movsl
jnp
mov
mov
pop
sub
xor
cld
xor
out
in
push
movsl
cmp
ljmp
push
jb
out
push
andl
mov
sub
mov
inc
mov
xor
sarb
das
fwait
jmp
xor
add
sub
mov
ret
stos
lahf
and
movsb
mov
pop
popa
add
enter
jo
andb
cli
lret
ja
xchg
jp
xor
pushf
fmul
push
iret
sbb
es
add
xlat
inc
pop
lcall
jecxz
ret
pop
rclb
sbb
in
jmp
outsl
rolb
and
int3
adc
test
or
insl
das
nop
addb
add
dec
cmp
nop
cmpsb
jp
lods
sub
sarl
imul
mov
js
dec
or
ja
js
ja
pop
jl
leave
jne
test
mov
pop
mov
adc
xchg
cmpl
movsb
fnstsw
push
add
dec
inc
inc
add
stc
imul
ret
pop
mov
pop
pop
push
jnp
ror
push
shr
sbb
push
pop
scas
and
and
push
sbb
dec
fwait
pop
and
add
out
mov
mov
dec
lea
and
pop
xchg
rcll
adcl
mov
push
jmp
add
pop
inc
lods
inc
cmpsb
mul
ljmp
jg
repz
xchg
shll
jl
outsb
adc
mov
aam
imul
dec
cmp
std
cmp
cmpsb
dec
jne
cmp
and
mov
roll
gs
out
dec
aad
xorl
enter
inc
sbb
daa
outsl
push
movsl
dec
cltd
imul
pop
sbb
incl
insl
pushf
adcl
and
roll
aas
pop
pop
push
inc
movb
jecxz
loope
das
scas
cmpb
lods
mov
and
cmovp
sahf
sub
or
addr16
add
and
test
popa
cmp
cmp
cmpsb
aam
mov
xor
test
into
pop
ret
test
jle
sub
pop
mov
xlat
xor
sbb
mulb
or
pop
in
mov
repnz
je
xor
je
mov
stc
pop
pop
stos
dec
mov
sub
push
cmp
cmp
sub
sbb
push
out
xor
jae
mov
mov
int3
and
adc
mov
sbb
pop
pop
mov
sbb
addl
movsl
cmc
jmp
in
jg
out
inc
dec
push
pop
mov
add
add
das
cmp
or
fisttps
sub
repnz
cmp
mov
ret
xor
add
fsub
jne
inc
cmp
sbb
sahf
stc
mov
mov
add
and
mov
and
mov
stos
lcall
jl
mov
stos
mov
sub
pop
add
orl
fwait
push
push
les
jns
and
pop
rcr
mov
push
xor
shll
push
out
test
sbb
add
push
mov
add
data16
xchg
or
sbb
and
jb
add
push
mov
aaa
mov
push
aaa
dec
hlt
cwtl
insl
in
push
dec
popf
fsubl
mov
out
fistl
xchg
and
or
shl
jae
adc
xchg
mov
push
sub
sbb
xlat
test
adc
rcrl
cmp
xchg
and
pop
add
sbb
mov
es
in
loope
push
testl
push
mov
pop
dec
jmp
dec
ret
fimull
xchg
xchg
loope
cmp
popa
mov
aad
inc
jb
cmovp
out
add
cwtl
out
pop
into
test
je,pt
ds
adc
fwait
cmpl
sub
mov
mov
lds
popf
and
lock
sbb
adc
je
dec
cmp
xchg
xchg
inc
subl
mov
in
xor
out
nop
lcallw
cmpsl
jo
aad
push
pop
inc
cmove
fmul
ret
jmp
loop
outsb
jp
xor
jl
xchg
mov
xor
test
andl
adc
push
mov
outsl
insb
je
dec
and
jecxz
cmpb
lcall
movsl
xor
lods
aad
mov
pop
mov
sub
mov
aad
push
jns
jl
xor
jae
pusha
mov
imul
cmp
insb
push
xchg
mov
xor
mov
sub
inc
enter
dec
xchg
jecxz
jne
pop
incb
pushf
shrb
popl
insb
test
push
int
out
ficoml
fcmovu
push
sbb
loope
js
stc
mov
and
jae
mov
enter
hlt
in
sbb
icebp
pop
cmp
push
cltd
or
hlt
in
adc
jno
mov
orl
rorb
inc
cmp
in
mov
shlb
xchg
xor
sbb
add
int
cld
mov
add
in
dec
sbb
mov
bound
rcl
sbb
mov
inc
scas
insb
pop
lret
adc
sub
inc
mov
cmpsl
jae
lods
decl
mov
push
lods
lea
jmp
adc
repz
adc
int3
mov
jbe
or
adc
mov
add
mov
je
jne
loop
mov
fildl
cmc
bound
xchg
sar
dec
jb
sub
mov
das
and
movswl
loop
mov
sbbl
or
fisubl
stc
test
and
jle
pop
push
idivl
pop
test
pop
xor
mov
adc
ror
push
mov
sbb
test
xchg
or
loop
test
dec
xchg
sbb
push
loop
jp
jge
data16
mov
fdivrs
push
dec
clc
push
cmp
mov
pop
cmc
sbb
mov
imul
mov
in
call
add
subl
dec
je
addb
add
add
mov
gs
pushl
cltd
adc
idiv
cmp
xchg
pushf
add
daa
cld
rolb
leave
sbb
popf
mov
xor
je
inc
mov
sub
daa
mov
pusha
jns
add
sbb
cs
adc
pop
ds
test
daa
adcl
cwtl
xchg
lock
pop
mov
mov
test
jmp
cltd
out
sub
xor
xchg
popf
sub
shl
sub
inc
pop
push
xchg
cmp
inc
cld
mov
sub
cmp
pop
push
leave
add
dec
xchg
repz
xchg
add
inc
dec
pop
sub
dec
out
mov
dec
mov
pop
mov
xor
enter
and
cmp
push
dec
and
test
mov
call
aad
push
add
loop
pop
mov
push
lcall
xchg
mov
fistpll
rcrl
mov
das
or
add
inc
xorb
adc
mulb
fisttpll
nop
add
jmp
pop
lock
out
sets
pop
pop
push
enter
adc
sti
std
scas
inc
gs
xchg
inc
in
ret
ret
mov
pop
inc
and
out
arpl
aad
push
popf
and
xor
push
ja
fidivrs
lods
ljmp
sbb
aam
sbb
fstl
outsb
aad
push
mov
push
out
pop
xchg
jb
mov
fwait
mov
std
add
and
or
fwait
mov
icebp
rcrl
lock
sub
adc
or
test
jge
fbld
mov
push
fwait
and
cwtl
jnp
std
jae
and
dec
add
fwait
pop
mov
add
divb
outsl
fisttpll
jmp
js
sub
orl
mov
mull
les
xchg
pop
fsub
xchg
rorb
pop
xchg
testl
jno
sbb
pop
loop
pop
int
jb
and
jnp
das
xor
imul
jns
inc
dec
lods
push
or
js
lds
arpl
sbb
cmpsb
adc
or
and
pop
and
add
shl
fmuls
add
xchg
repz
xchg
and
adc
adc
or
add
test
scas
in
int
subb
lret
imul
inc
xor
push
jge
subb
mov
cmp
dec
aas
sahf
jo
inc
fs
dec
mov
mov
or
or
xchg
outsb
flds
adcl
push
pop
mov
fnstsw
mov
xchg
dec
imul
cmpb
jns
sbb
jno
push
out
jno
jmp
pop
mov
push
mov
loop
mov
mov
sub
scas
popa
jg
pop
fldt
add
or
arpl
mov
mov
aas
mov
or
push
arpl
dec
scas
les
and
ja
add
fstl
ja
pushf
in
daa
sbb
jge
popa
aam
fsubl
jl
popa
insl
inc
inc
lret
fisubl
pushf
sbb
mov
mov
cltd
dec
mov
dec
in
outsl
out
dec
sbb
andl
js
mov
ljmp
cmp
mov
test
in
lock
cli
jns
hlt
xchg
adc
movsb
cmp
fst
les
dec
repz
inc
enter
xor
dec
adc
inc
inc
popa
test
push
sub
daa
xor
push
push
pop
incl
loopne
or
cmc
push
outsb
incl
jbe
jle
cmpsb
xorl
jecxz
cltd
mov
iret
push
test
aam
lea
in
dec
sbb
in
pop
pop
into
pop
or
popa
je
and
pop
jnp
rcrb
sub
andl
rorw
jne
test
stc
jg
sbb
rcl
mov
movsl
xor
ss
inc
cmpsl
out
mov
sti
jle
mov
mov
cltd
pusha
fadds
repz
and
pop
popa
outsb
sbb
fnsave
jo
jno
cli
gs
repz
jg
jle
scas
pusha
mov
xchg
lods
jmp
jmp
test
lds
mov
jg
imul
insl
adc
shll
popf
icebp
aaa
mov
popa
mov
scas
movsl
fldl
ljmp
in
mov
add
fstps
sarb
int
lahf
mov
mov
sahf
cs
adc
ret
fs
mov
jb
lock
imul
out
inc
mov
mov
popf
push
sub
cmp
decb
ds
add
mov
xor
dec
roll
out
dec
pop
inc
sub
imul
lcall
mov
nop
mov
cmp
add
inc
test
sub
or
popa
les
xor
cmpsb
add
jo
mov
pop
lods
mov
lret
and
gs
push
call
adc
subb
push
fs
mov
cmpsl
rclb
cwtl
mov
push
dec
mov
cwtl
jle
push
andb
sub
add
push
push
or
insb
push
dec
jnp
push
and
call
test
inc
aam
push
fbld
test
sub
pop
push
push
or
xchg
filds
fwait
repz
sahf
adc
mov
inc
cmp
push
sbb
hlt
mov
cmp
inc
inc
push
adc
mov
sbb
sub
sahf
mov
add
ss
push
cmpsl
jle
inc
sbb
in
push
daa
ja
cmpl
pop
lret
jbe
dec
push
or
sub
xlat
or
test
mov
insl
push
ret
or
iret
cltd
test
shrb
fsubl
inc
push
or
adc
inc
inc
xor
pop
movsb
mov
pop
jno
xchg
lcall
mov
es
adc
xchg
xchg
cmp
jmp
inc
cmp
xor
pop
lods
lret
xor
and
arpl
jg
and
or
rol
imul
pop
pusha
in
fsubrs
pop
mov
sub
aaa
add
notl
iret
add
sbb
adc
loopne
mov
push
mov
sbb
cs
cli
pop
loope
add
and
loop
add
into
in
sahf
insb
stc
add
lods
mov
jnp
fsubr
out
mov
les
mov
stos
inc
mov
shrl
mov
dec
lds
out
out
inc
jecxz
adc
add
iret
jmp
push
es
les
mov
pusha
inc
mov
xlat
shr
jnp
sbb
aad
jmp
pop
adc
imul
flds
iret
sti
test
jns
inc
test
aaa
or
ljmp
adc
cwtl
xlat
lea
fsubrp
jne
xchg
call
fsubrl
ss
call
or
fsubrs
push
scas
adc
test
repz
cmc
adc
xor
sub
pushf
fnclex
loopne
cltd
jb
mov
add
ja
mov
pavgb
push
popf
jo
rcrl
hlt
xchg
jg
test
dec
clc
or
mov
push
mov
cltd
mov
inc
sbb
lret
cmp
mov
std
mov
lahf
push
outsl
cltd
rclb
sub
mov
push
push
sahf
js
sbb
movsl
sbb
aam
jb
jp
mov
cmp
pusha
mov
push
xor
lock
mov
jecxz
mov
aaa
imul
dec
and
ficomps
mov
mov
jbe
dec
out
pop
aam
jne
sbb
xchg
arpl
ljmp
jnp
xor
mov
repnz
outsb
mov
sub
push
aaa
fistl
lods
pop
cmp
push
xchg
out
or
cmp
sbb
lahf
fsubr
aad
mov
lods
sbb
bound
ficomps
popa
ss
xor
lods
in
push
ret
lret
rorl
and
jle
xchg
bound
test
add
adc
dec
imul
mov
shr
leave
or
int3
xorb
cli
sahf
jae
xchg
adc
bound
jne
sbbb
add
xchg
lret
enter
sub
inc
add
outsl
pop
inc
stc
dec
cmp
and
adc
push
lds
adc
mov
jne
pusha
jle
pop
lock
int
jo
mov
sbb
jp
sub
mov
hlt
vpmacssdqh
inc
out
pushf
and
ljmp
or
ret
mov
out
imul
add
les
test
out
lods
jae
jge
shrl
or
mov
and
adc
test
and
bound
add
jle
jl
fwait
in
inc
int3
cmp
pop
cmp
mov
jge
in
pushf
aam
into
push
pushf
pop
push
or
xchg
push
test
xor
mov
scas
and
or
pop
fwait
and
sub
inc
jmp
cmp
mov
sti
dec
outsl
lea
lods
mov
and
mov
fisubrl
xlat
jle
pop
into
xor
dec
mov
jno
popf
lahf
in
cs
sbb
cs
fstl
pop
stc
nop
and
out
push
mov
ret
jge
test
arpl
ljmp
fs
cmp
push
iret
clc
sarb
cld
clc
cmp
jne
lock
cmp
orl
mov
aad
pusha
ds
fisubl
dec
pushf
repnz
mov
js,pt
ja
test
inc
inc
jge
and
fsubrp
rcll
and
jge
mov
pop
ror
enter
xor
xchg
enter
jecxz
aas
adc
outsb
push
mov
movsb
xor
add
cmp
cmc
mov
jne
mov
mov
roll
mov
xor
xchg
pop
pop
std
or
jge
outsb
xor
dec
scas
cmp
and
and
out
adc
adc
daa
cwtl
mov
test
xchg
push
sahf
sbb
xor
xchg
inc
lret
mov
pop
les
or
orb
daa
pop
cmp
sar
jl
aam
add
dec
sbb
movsb
pop
ja
fsubrs
pop
sub
cmp
movsb
mov
xor
shll
mov
mov
out
sti
xchg
arpl
pop
sub
add
sbb
inc
xchg
lods
in
aas
or
cmp
xor
addl
xchg
mov
xor
push
in
adc
push
repz
je
sub
lret
imul
aad
push
imul
inc
fdivrl
inc
sbb
cmp
push
nop
xor
shlb
adc
int3
test
add
or
xorb
adc
insb
pop
xor
push
xchg
lret
cmp
cmpsb
pop
inc
mov
subb
outsb
leave
int3
xchg
mov
ss
sub
push
addr16
rcrb
lds
mov
push
popa
fbld
xchg
in
movsl
inc
mov
push
mov
nop
test
fnstenv
mov
add
mov
xchg
pcmpeqd
pop
in
call
xchg
fdivs
adc
daa
decb
pop
cmp
pop
repz
test
adc
xchg
sbb
fistpl
push
arpl
js
stos
testb
imul
jbe
cld
inc
xor
pop
xorb
lahf
xor
inc
sbb
pop
push
mov
fcomi
inc
shl
mov
inc
sbb
or
sbb
pop
add
dec
cld
fldl
je
stc
push
mov
es
mov
push
cmp
adcb
pop
stc
sub
mov
imul
loop
outsb
cltd
negb
outsl
pushf
jg
addr16
sub
adc
sti
mov
mov
mov
push
and
cmp
inc
push
mov
mov
div
sbb
mov
or
dec
js
popf
adc
inc
clc
icebp
jecxz
push
les
out
lcall
inc
rorb
mov
repz
push
mov
sub
cmp
lahf
popf
sub
mov
lret
pop
sbbl
jmp
mov
out
dec
inc
jle
fldt
add
mov
xchg
mov
inc
and
sub
mov
lea
je
jne
imul
pop
repz
xlat
mov
pop
ss
lods
in
and
dec
ret
outsl
cmpsb
in
inc
lods
stos
mov
inc
adc
aam
xor
pop
bound
inc
xlat
test
dec
mov
out
addr16
rcll
cmp
call
nop
pop
lds
lods
inc
xchg
clc
mov
fprem
fwait
movsb
push
add
jmp
or
iret
insb
push
cli
pop
jno
xchg
movsb
test
push
lea
mov
sub
in
push
xor
aam
adc
arpl
scas
jo
daa
into
pop
lcall
stc
ret
sar
sub
insb
nop
pop
xorl
mov
mov
jae
or
and
into
mov
je
push
jns
insl
jne
dec
aas
or
jle
sub
jo
sub
ficomps
jl
push
loopne
pop
lock
popf
fidivrs
test
and
pushf
jns
pop
push
or
add
testl
jmp
xchg
mov
iret
into
imul
sub
mov
and
jb
aas
mov
loopne
push
jl
daa
add
mov
popa
add
xchg
lcall
cmp
jp
test
enter
or
fs
aaa
jmp
or
xchg
pop
std
hlt
in
inc
pop
je
divb
inc
in
je
push
rorl
int3
push
push
or
adc
xchg
es
dec
popa
mov
cmp
inc
popa
mov
xchg
sbb
rolb
cmp
rclb
dec
repz
jecxz
push
pop
and
dec
fidivl
mov
ss
pop
int3
fisttps
mov
mov
and
push
or
and
adc
jb
mov
popf
add
outsb
adc
pop
mov
clc
fisttpl
inc
xor
sahf
mov
lds
movsl
inc
jnp
push
pop
sub
xor
mov
xrelease
leave
scas
in
mov
and
or
ret
adc
mov
mov
outsb
cmpsb
sti
mov
sti
add
pop
aad
mov
xchg
aas
pop
mov
push
mov
or
leave
sbb
push
sub
add
adc
jl
rcll
mov
lods
sub
ret
test
divl
das
inc
add
stos
dec
mov
sbb
outsb
inc
sub
xchg
sbb
xor
jge
jns
repz
repnz
push
insb
cltd
adc
sub
sbb
cmp
insb
jbe
orb
mov
lods
cwtl
pop
je
mov
out
sub
popf
adc
mov
mov
xchg
xor
test
add
icebp
imul
je
imul
data16
mov
stos
sbb
jp
cli
mov
push
sbb
ljmp
gs
jb
and
adc
cmpsb
jbe
inc
fwait
lea
fadds
adc
fstpl
push
xchg
jns
jl
or
xor
push
and
daa
mov
fisubrs
sbb
fdivrl
in
pop
or
cmpsl
dec
jb
fwait
jl
aad
flds
or
and
scas
fiaddl
fldlg2
push
pushf
imul
sub
lods
cmp
mov
loope
int3
dec
cs
push
adc
scas
jb
mov
sbb
out
mov
stc
dec
pop
sub
sub
sti
in
pop
cmp
sbb
cli
jge
out
loope
sub
mov
push
pop
mov
es
adc
aam
xor
mov
mov
cmp
pop
fxch
in
shll
fcompl
int
mov
push
pushf
push
pop
pop
cmpsl
or
dec
jbe
sti
jge
shll
mov
xlat
xchg
es
jp
int
sbbb
mov
sbb
push
mov
sub
jb
mov
add
dec
std
push
push
and
or
and
icebp
or
mov
jae
xchg
sbb
mov
pop
xlat
mov
rorb
mov
popa
xor
sub
and
sub
pushf
icebp
rcll
in
cmp
xor
stos
and
sbb
fs
repnz
and
je
in
pushf
cltd
leave
jnp
test
int
pushf
push
repz
shl
xchg
jbe
inc
lcall
push
fucomp
clc
ds
ret
xor
cld
sbb
xchg
mov
mov
and
cmp
enter
push
push
xchg
negb
pop
inc
faddp
mov
pusha
fdivrs
adc
xchg
sarl
xor
bnd
bound
and
in
jge
daa
repz
fsubrs
roll
and
jp
sbb
push
fiadds
mov
push
fadds
mov
push
inc
mov
call
sub
out
cltd
pop
lcall
stos
xchg
xchg
xchg
xor
sbb
das
aad
mov
mov
and
out
sub
xchg
push
js
shlb
ret
or
inc
sbb
shr
clc
insl
cmpsl
hlt
xchg
xchg
and
push
mov
sub
mov
in
jp
cwtl
mov
rcll
je
xorb
fs
pusha
mov
push
add
cmp
jmp
cmp
xor
mov
pusha
or
aaa
adc
xor
xor
xor
js
xchg
or
pop
mov
mov
push
je
test
or
lea
insb
xchg
repnz
sub
xor
call
gs
inc
jns
fildl
stc
mov
enter
adc
cltd
movsb
push
sub
fcompl
and
loopne
adc
fadds
cld
test
scas
mov
paddq
leave
mov
push
xchg
daa
xor
cmp
xor
imul
outsl
cmpsb
pop
sti
and
jno
xchg
cmp
mov
js
adc
and
addr16
jne
mov
addl
mov
xorb
adc
push
out
dec
mov
ja
in
mov
out
cmp
bound
testl
ret
std
mov
jbe
rorl
jbe
inc
pop
jmp
rclb
dec
lock
imul
int
lock
lcall
data16
aad
mov
mov
dec
cwtl
xor
push
jbe
jmp
jno
aad
out
dec
push
xor
jg
pop
je
daa
sarb
xchg
xchg
add
cmpsl
add
cmpsb
mov
fsubrs
inc
or
pop
fs
pusha
call
enter
scas
inc
and
ror
sub
imul
jle
and
shlb
cld
mov
xor
lods
xor
andb
xlat
push
mov
mov
lcall
mov
jb
sar
fcoms
pop
adc
out
xchg
lahf
cmc
jecxz
cmpsl
cs
int3
dec
jo
mov
and
sbb
cwtl
xchg
scas
call
pop
mov
movsb
push
dec
and
sub
inc
push
lods
sbb
xor
movsb
iret
outsb
pop
jmp
outsl
out
insb
cmp
inc
cltd
mov
iret
bound
mov
popf
mov
fistpl
leave
shrb
jo
mov
cli
sub
mov
mov
xchg
popa
adc
cmp
jmp
test
cmpsb
fcoml
outsb
xchg
sub
daa
pusha
adc
repnz
sbb
inc
adc
adc
jns
pop
mov
cmc
leave
mov
roll
pop
ss
cli
or
inc
aad
dec
movsb
sbb
sub
sahf
cmp
pop
pop
add
jns
xor
push
push
jbe
jl
and
inc
mov
je
icebp
mov
and
add
cmpl
std
idivl
add
mov
aas
cwtl
and
sbb
xor
jle
cmp
cmpsl
lds
leave
mov
pop
loope
fs
popa
mov
dec
mov
add
jmp
lods
dec
sarl
mov
push
jge
js
push
lods
pop
mov
sbb
ficomps
and
mov
and
jl
push
mov
nop
push
or
nop
call
pop
xchg
sbb
inc
inc
dec
and
rcr
add
pop
sub
pop
rorl
repz
and
xchg
lods
mov
subb
ud1
dec
and
call
cmp
add
fsubrl
add
rorl
in
out
dec
sub
cmp
pop
sbb
or
ret
mov
jmp
test
jp
cmpsb
ret
out
popa
mov
inc
pushf
and
sub
sub
jle
or
push
mov
adc
or
lcall
inc
in
dec
mov
in
out
les
test
fs
mov
subb
sbb
cmp
add
in
pop
xchg
mov
and
fcoms
aas
inc
aad
das
ja
jle
mov
jbe
lock
xchg
mov
jns
xor
ljmp
dec
pop
insb
or
std
inc
arpl
push
pop
xor
test
cmpsb
in
jl
in
sbb
cld
xor
add
mov
mov
mov
jp
inc
sbb
cmpsl
test
xchg
push
sub
mov
dec
mov
fcmovne
fisttpll
imul
mov
inc
rolb
mov
popa
out
mov
sbb
add
lods
repnz
ljmp
or
sub
jge
in
xor
testb
or
push
push
add
stos
adc
push
rol
mov
es
insb
mov
mov
sub
mov
mov
dec
imul
ret
stos
mov
sbb
fs
fcoms
lret
push
jmp
leave
or
adc
xchg
cli
or
jo
fisttpll
aam
outsl
mov
jmp
fs
sbb
push
jne
push
mov
xchg
add
fdivl
aad
stos
or
ljmp
mov
and
andl
or
push
scas
dec
cmp
jp
icebp
shll
cmp
cwtl
mov
dec
fs
dec
sbb
or
push
shrb
sub
setbe
pop
clc
and
and
mov
dec
js
out
ds
ss
push
in
lds
movsl
adc
push
mov
add
outsl
sub
jbe
in
lahf
loope
insl
cld
xchg
ficompl
movsl
out
or
addr16
and
jmp
stc
add
rcl
push
test
xchg
cmp
cs
out
push
cmp
mov
scas
inc
push
aad
push
mov
sub
andb
fdivl
or
cmp
pop
cmc
in
or
icebp
pop
xor
xor
fcom
pop
idivb
cmp
cmpsb
sti
push
lret
out
cmc
add
fldcw
fs
push
mov
cmp
inc
sar
cmpl
lcall
cltd
jae
xor
pop
fdivrs
mov
cwtl
int
addr16
sbb
push
xor
mov
aas
frstor
jb
es
or
add
aaa
mov
cmpsl
int3
test
jmp
out
cs
mov
cmp
repnz
decl
in
jne
cmpb
inc
mov
xor
ljmp
adc
jne
jb
mov
jno
hlt
sbb
testl
out
sub
lds
outsl
ds
ja
std
lods
test
mov
daa
and
jmp
in
stc
movsl
sub
push
sbb
shlb
sub
push
sub
push
mov
fsub
lods
mov
hlt
pop
mov
adc
daa
hlt
lea
int
xchg
ficompl
cli
inc
jns
shll
jl
sub
rep
hlt
imul
dec
adc
sbb
pop
jae
les
jne
mov
jno
sti
pop
les
mov
incb
imul
push
nop
es
shlb
or
push
and
rorb
push
jg
push
dec
pusha
mov
bnd
sbb
or
mov
iret
out
rclb
add
cmpsl
cmpsb
outsl
mov
cmp
rcrb
ret
dec
fwait
jno
daa
aaa
xlat
pop
dec
orb
push
imul
and
mov
in
mov
add
in
lea
and
into
in
arpl
xor
cs
jbe
mov
inc
add
in
scas
popa
loop
arpl
das
pop
cmp
xchg
fiadds
pop
mov
dec
push
xlat
sbb
jne
cmp
les
or
add
mov
ljmp
scas
iret
lret
insl
into
add
fnstsw
adc
insb
xchg
mov
ret
lods
or
cmpsb
pop
xorl
xor
mov
pop
cmc
jge
rorl
fsubp
xor
xchg
add
mov
jg
cmpsb
sbb
jb
xlat
cmp
add
loopne
shrb
adc
xor
jle
jmp
mov
aas
mov
mov
jp
mov
outsb
jo
sbb
mov
push
out
or
xchg
fcomip
xchg
test
loop
jbe
push
mov
je
cmp
cmpsb
inc
xor
xchg
and
outsl
outsb
sub
sti
gs
cmp
out
loop
mov
sbb
dec
or
and
out
stc
cmp
xchg
ljmp
pop
insb
xchg
add
mov
shl
arpl
jmp
sub
cmpsb
cltd
jecxz
and
es
cmp
pop
mov
xchg
in
rorb
add
out
push
add
lds
popa
clc
add
lea
cmp
xchg
sbb
sub
pusha
in
mov
sbb
loopne
inc
std
rorb
inc
push
lcall
mov
lahf
xor
push
push
pushf
fiadds
xor
call
negb
mov
mov
jne
dec
jae
incl
dec
mov
frstor
push
xor
mov
xor
pop
pop
xorl
dec
sub
adc
xor
repnz
xor
test
xor
lock
push
push
dec
faddl
clc
cltd
jne
outsb
and
fisubrl
xchg
dec
jbe
xor
xor
push
out
cltd
rcl
push
push
adc
out
push
cmp
hlt
add
sbb
repnz
push
shl
push
pop
pop
jb
ds
std
data16
sub
jmp
data16
in
push
scas
mov
ret
div
jo
cwtl
aad
cld
pop
push
xlat
add
mov
dec
sbb
xor
inc
in
jmp
fstpt
dec
add
loope
xchg
pusha
add
and
leave
sbb
push
sbb
adc
pop
imul
lds
mov
movsl
xchg
jns
xor
pushl
cltd
sbbb
cs
ljmp
xor
negb
insb
and
mov
stos
sti
and
imul
mov
fneni(8087
aaa
lret
jmp
xor
mov
pop
dec
xlat
and
movsl
test
pop
push
cmp
ffreep
push
adcb
sti
dec
outsl
jnp
pop
js
shrl
jae
xchg
gs
pop
call
pop
pop
push
push
mov
pushl
jb
out
out
adc
pop
sub
rcrl
mov
push
xchg
in
and
lods
xor
imul
pop
jno
adc
repz
cltd
loopne
and
or
and
xchg
and
loopne
jmp
gs
pop
lds
add
cmp
lcall
test
inc
push
pop
jbe
jmp
fnstsw
push
sti
nop
or
cld
sbb
sbb
aad
sub
bound
test
dec
mov
sbb
ss
lds
xchg
iret
mov
xor
and
fcomi
leave
and
sub
stc
insl
je
sub
xchg
lret
push
xchg
ljmp
cmpsl
scas
push
leave
popf
std
pusha
loop
pop
sahf
lods
loope
adc
stos
lock
sub
mov
cmp
call
in
repnz
mov
mov
stc
insb
fisubrs
push
sub
cmpsl
xor
aaa
fmul
mov
dec
int
mov
pop
mov
rorb
adc
add
add
or
mov
dec
adc
sub
sub
scas
xchg
insl
sub
xchg
push
xorb
pop
cmp
pop
or
imul
je
or
adc
mov
subb
jbe
stos
mov
adc
xor
lahf
rorb
pushf
in
fsubp
outsb
aam
jg
lret
mov
cmc
push
sbbb
mov
mov
les
arpl
mov
jg
dec
aad
dec
add
mov
adc
ret
mov
insb
dec
pop
jbe
jmp
js
stos
sub
dec
xchg
pop
mov
mov
add
or
test
dec
cmc
cmc
je
test
movsb
jl
xchg
test
inc
mov
adc
pop
cmc
adc
mov
leave
lods
inc
das
lea
mov
js
sbb
and
mov
add
int3
repz
movsb
setne
cli
mov
ljmp
out
lret
not
inc
push
sub
inc
imul
cmc
in
push
pop
cmp
dec
add
sub
dec
shrl
fxch
inc
insb
gs
pop
dec
or
jecxz
fs
mov
sbbl
mov
inc
aad
push
aam
bound
pop
pop
cmp
pop
subb
or
insb
rolb
xchg
pop
imull
adc
dec
rolb
fmuls
push
xor
je,pn
arpl
je
or
iret
mov
fistpl
fildll
xchg
inc
adc
sti
clc
xchg
mov
test
arpl
jo
out
pop
mov
cmp
in
inc
es
jle
xor
pop
mov
sub
ja
push
mov
ja
outsb
imul
dec
pop
sbb
xchg
sub
shr
mov
fnstsw
addr16
add
dec
or
enter
jb
loop
xor
dec
push
mov
mov
fnsave
sub
jmp
jno
mov
pusha
call
popf
fsubs
dec
dec
mov
pop
loop
jp
mov
pop
inc
inc
out
cmp
push
adc
mov
ljmp
inc
lahf
xchg
ss
lcall
xor
xor
dec
mov
roll
adc
dec
inc
iret
sbb
adc
imul
inc
mov
dec
js
lds
dec
jmp
push
cmp
xlat
push
test
push
aad
dec
add
mov
mov
mov
sbb
pop
cmpsl
insb
dec
shlb
or
xchg
inc
cmp
filds
push
pop
in
cwtl
jnp
or
mov
outsl
adc
popf
jns
out
pop
mov
enter
xlat
shrl
shlb
ret
dec
inc
push
xor
int
mov
repnz
xlat
lock
push
insl
movsl
cmp
sub
mov
loop
mov
pop
jbe
jne
je
js
xor
jne
arpl
rcrl
lods
sahf
fldcw
add
add
lret
insb
aas
push
inc
and
mov
xlat
js
cmpsl
fdivs
loopne
outsl
mov
imul
lods
scas
out
mov
inc
loope
call
sbb
xchg
xor
cltd
push
out
push
int
sar
popa
push
adc
mov
jl
cli
cltd
inc
pusha
js
std
sbb
std
add
loop
fwait
mov
inc
xchg
jle
popa
dec
or
lcall
cmp
mov
insb
mov
subb
push
xchg
cmp
sbb
fwait
movsb
test
into
iret
mov
mov
arpl
sbb
cmp
jp
fwait
mov
ljmp
lret
fucom
xchg
ret
outsb
push
jmp
test
fcoms
sbb
mov
cmpsl
jae
jns
imul
imul
fcompl
add
and
mov
push
lcall
sub
fldenv
rcl
adc
lods
sbb
mov
fdivrl
cmpsb
call
outsb
test
or
pusha
cmp
call
mov
jle
aam
jns
iret
lcall
mov
cmp
push
je
and
sbb
pusha
mov
leave
fwait
or
andb
mov
adc
lcall
pop
jmp
xchg
shlb
int
pop
nop
fsts
lods
dec
fdivrl
ds
jno
mov
mov
push
cmp
xchg
popa
aaa
cmpsb
or
outsl
mov
jge
pop
sub
stc
loopne
ja
mov
lahf
jmp
mov
dec
cwtl
shlb
es
mov
aaa
cs
imul
mov
lret
stc
xchg
enter
push
pop
mov
adc
sub
push
push
xor
cwtl
outsb
in
ror
mov
ja
cmc
sub
imul
js
es
mov
mov
frstor
leave
loopne
cltd
icebp
mov
xlat
cld
mov
mov
push
xchg
mov
adc
pop
test
cs
shlb
or
subb
lea
sub
addl
imul
mov
inc
les
xor
stos
imul
je
push
ss
mov
test
sub
popf
and
mov
cmp
movsl
cld
adc
dec
ljmp
jae
fdivr
stc
push
xchg
mov
lcall
and
push
data16
mov
cwtl
out
dec
pavgb
xchg
mov
mov
adc
ret
mov
outsb
pop
mov
inc
gs
adc
jbe
sbb
jge
jne
mov
insl
mov
mov
xor
std
sarb
testl
xchg
mov
nop
movsl
add
lods
adc
and
pop
mov
jae
iret
cmp
mov
outsl
fwait
add
sub
int3
movsb
into
jg
fldln2
das
arpl
cmc
imul
ret
jo
lcall
dec
std
pop
rcrb
bound
out
mov
sub
subb
stos
sahf
dec
mov
mov
pop
cmp
popf
mov
fildl
imul
daa
mov
and
push
inc
enter
out
test
andl
jl
rep
mov
mov
daa
add
pop
xor
clc
ret
ss
pop
lods
sub
mov
popf
sub
lods
push
pop
mov
mov
dec
ret
cltd
pusha
dec
fwait
xor
imul
icebp
enter
aaa
insb
xchg
fwait
aas
mov
in
xlat
mov
fwait
in
stos
ss
pop
arpl
push
nop
dec
mov
adc
adc
mov
scas
dec
lds
dec
out
sub
sbb
sbb
daa
mov
mov
push
or
adc
dec
mov
xchg
fdiv
mov
pushf
insb
out
jo
cwtl
lahf
arpl
mov
rcrb
test
mov
add
lret
shll
mov
jle
cmp
push
test
push
jnp
jne
sub
lret
rol
push
mov
xlat
lret
ja
inc
mov
sbb
rolb
imul
loop
jns
inc
push
xchg
and
pop
and
sbb
lret
xor
pusha
into
sub
adc
cmpsb
add
lahf
cmpsl
sar
cli
fsubs
cmp
pop
adc
xchg
cmpsl
sub
sub
or
pop
insl
pop
dec
add
imul
rcll
les
adc
repz
out
xlat
cmp
dec
leave
mov
lea
ds
xchg
adc
aaa
add
fsubs
sahf
adc
cltd
jne
inc
dec
scas
pop
pop
jmp
in
pop
sub
in
cmp
icebp
lret
scas
adc
add
leave
cltd
push
ror
arpl
icebp
sbb
dec
inc
out
sahf
rcr
jg
rclb
sub
or
mov
mov
mov
popa
push
push
outsl
dec
fucomip
sub
dec
lock
add
ror
mov
xor
roll
lods
mov
and
mov
push
inc
loop
adc
cmp
pop
mov
xchg
mov
jmp
mov
je
cwtl
fimull
lcall
xchg
sbb
and
nop
cmp
mov
push
fbstp
cld
fcmovnbe
das
stos
dec
push
jnp,pt
and
fwait
scas
xchg
inc
divl
jno
jns
out
sahf
dec
inc
add
sub
aaa
xor
nop
mov
lahf
ucomiss
pandn
push
cmp
in
nop
dec
lret
jb
cmp
imull
in
repnz
mov
mov
jge
test
inc
pop
cmc
lret
pop
add
jae
cmp
aam
inc
andb
leave
pop
movsl
mov
sbb
repnz
mov
sbb
pop
cltd
aas
adc
sbb
dec
xor
ja
xchg
insb
dec
inc
jge
and
xor
das
add
imul
pop
out
and
adc
mov
cmc
lock
dec
out
jno
mov
or
cmp
bound
negl
mov
rcll
dec
inc
loopne
or
cltd
and
out
sub
or
and
lds
rclb
or
pop
sbb
imul
scas
push
popa
mov
lret
jmp
adc
mov
outsl
xchg
lock
push
test
movzbl
stc
inc
cld
cmp
aam
daa
mov
dec
inc
gs
ret
and
push
push
sti
loop
push
dec
lock
push
dec
mov
dec
ficompl
outsb
cmp
les
les
or
mov
mov
outsl
mov
xchg
sbb
cmp
lcall
lret
shll
lods
sub
cwtl
xor
push
mov
or
repnz
incl
ljmp
dec
repnz
pminub
mov
sub
popf
sub
push
fdivrl
int3
outsl
sub
adc
shlb
aad
loop
or
mov
hlt
push
frstor
icebp
lds
dec
test
inc
push
xchg
push
xor
xchg
adc
push
lret
mov
cwtl
out
mov
fwait
push
mov
xchg
das
in
int3
adc
mov
out
xor
imul
pushf
lock
and
mov
sarl
or
mov
cmpsb
out
add
in
xrelease
loope
mov
add
fcmovnu
push
push
pop
fs
add
fsubr
fsubs
stos
data16
push
xor
dec
addr16
sub
inc
pop
xchg
sub
jmp
push
inc
cmp
movsl
outsl
dec
bound
adc
pop
pop
pushf
inc
mov
cmc
jecxz
cmp
orb
imul
pushf
mov
push
in
mov
cmp
dec
pop
mov
aad
mov
and
push
xchg
test
xor
jl
mov
out
mov
gs
rcrb
fisubrl
jne
repz
data16
fisttpll
cmc
mov
mov
outsb
int
inc
imul
xchg
addr16
sbb
push
and
dec
icebp
xchg
cmc
cltd
push
push
in
imul
push
es
out
lods
stos
or
xor
and
pop
data16
cmpsl
outsl
dec
out
repnz
cltd
cmp
arpl
ljmp
test
adc
mov
ficomps
or
rcrb
mov
jge
add
mov
hlt
cmp
bound
or
inc
je
jle
les
and
push
pop
sahf
adc
jb
insb
imul
jno
aam
cwtl
jp
cmp
push
div
shll
xor
imul
xchg
xchg
stos
jnp
movl
xchg
fistps
rcrb
cmpsl
clc
cmp
sbbb
push
xchg
repz
lds
or
dec
mov
popa
mov
cmp
pop
ds
gs
shrl
fisubrl
push
pop
arpl
xchg
mulb
mov
pop
mov
fcoml
push
dec
dec
pop
addb
add
adc
lahf
inc
mov
or
out
and
pop
push
flds
cmp
lret
sbb
fcoms
rcl
jno
es
mov
nop
add
in
or
add
cltd
mov
or
in
mov
mov
sub
pop
mov
xchg
jnp
dec
or
jl
lcall
cmc
push
mov
push
xchg
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
.byte
push
in
data16
lods
imul
mov
mov
mov
ljmp
jl
je
stc
adc
mov
add
and
dec
setnp
gs
or
jno
test
movsb
stos
out
pop
js
add
repnz
sub
push
ret
mov
cmp
dec
pop
pop
sbb
cltd
mov
add
fdivl
lahf
daa
rclb
cmp
cmpsb
add
jno
jne
dec
pop
add
push
or
jl
cld
imul
jg
mov
decb
xor
sbb
and
neg
push
jle
mov
sbbb
xor
rcl
xchg
and
xor
ret
push
je,pt
xor
mov
add
jo
pusha
lahf
add
mov
ret
jecxz
cmpsb
mov
push
mov
loopne
cld
rcll
ret
int
mov
inc
dec
das
jb
and
ficoml
cli
inc
faddl
rorl
outsb
mov
xor
adc
aaa
int3
int
fists
das
push
bound
dec
push
xor
sub
jbe
das
inc
gs
pop
imulb
inc
cmp
int
nop
cwtl
mov
cmpsb
jmp
ret
inc
stc
aaa
adc
out
call
lea
ja
cld
test
fdivl
jl
sub
shl
jg
ja
and
cmpsb
inc
push
mov
cli
cmpsl
push
std
jge
or
push
push
pop
adc
imul
xor
into
int
or
cs
ja
mov
fcomps
sbb
inc
adc
ja
divl
cmp
jp
lods
enter
inc
push
inc
xor
mov
lea
imul
xchg
sbb
push
clc
fcmovb
loope
fs
cmpsb
stos
dec
loopne
and
cltd
sti
call
jle
icebp
stos
jae
shl
pop
add
add
leave
pusha
xor
outsb
mov
sbb
jns
mov
fucomi
push
sti
mov
mov
cmp
xchg
inc
sbb
enter
dec
loop
pop
sbbl
fnstenv
repz
cmp
int3
sbb
cs
inc
sbb
icebp
loopne
test
mov
in
fisubrs
pop
rclb
cmc
push
loopne
push
xor
mov
repnz
pop
aad
inc
ja
stc
mov
mov
or
sub
daa
inc
cmp
cmp
jg
aad
lahf
adc
sub
int3
sub
fs
xor
fistpl
dec
clc
pop
out
inc
and
sahf
jp
pop
xchg
cmp
shrl
adc
test
inc
hlt
stos
popf
es
mov
push
xlat
cld
pop
mov
fidivs
jne
mov
sub
hlt
lret
mov
sti
insl
adc
aam
cmpb
cld
sbb
jle
repz
mov
hlt
sbb
clc
adc
and
jg
sub
mov
pop
xor
jge
outsb
adc
lds
add
dec
aas
rolb
dec
repz
push
mov
data16
rclb
or
adc
pop
addr16
and
pop
or
pop
jns
addr16
into
std
xor
cltd
into
add
cmp
out
xchg
dec
push
shr
imul
cmp
mov
pop
push
adc
adc
lahf
ds
inc
mov
cwtl
lcall
out
push
xchg
int
pop
add
mov
jg
movsb
pop
xchg
pop
sub
xor
and
cmp
icebp
out
imul
loopne
out
and
add
roll
sti
leave
cli
outsb
insb
std
lock
jo
pop
adc
or
mov
inc
cmpsb
shll
add
into
ljmp
mov
inc
mov
out
dec
add
pop
int3
test
dec
jg
imul
jnp
or
sub
xchg
ss
push
push
xchg
repz
sarl
stos
or
adc
xor
push
mov
xchg
and
mov
mov
aaa
bound
xor
orb
sub
mov
mov
push
add
fidivl
xchg
fimull
js
jle
mov
and
fidivrl
nop
insb
xor
sbb
aad
jge
or
ja
leave
xchg
stos
cli
imul
cmpsl
sbb
jnp
movsb
stos
adc
mov
cmp
aam
lea
js
pcmpeqb
mov
outsb
mov
ss
popa
push
inc
lret
pop
or
in
or
imul
psraw
push
jne
fnstsw
clc
aam
insl
mov
pop
inc
int
mov
adc
je
shlb
sbb
inc
xchg
push
jns
lds
jl
sarb
jmp
out
jge
sti
mov
std
lock
nop
push
pop
push
mov
mov
add
mov
mov
mov
sbb
mov
movsb
push
inc
test
ret
fsubr
or
outsb
push
add
enter
ret
adc
xchg
inc
add
enter
push
or
pop
movsw
pop
mov
scas
sbb
adc
xchg
dec
movsb
in
fisubrl
jecxz
mov
outsb
lret
inc
mov
mov
jae
push
xor
xor
xchg
mov
lret
enter
mov
mov
faddl
and
das
push
and
jg
es
xchg
pop
xchg
mov
xchg
push
adc
popf
pop
stc
mov
test
xor
and
or
cld
lret
inc
adcl
jp
cwtl
jmp
hlt
call
or
jno
mov
adc
mov
stos
cmpsb
jb
adc
add
repnz
mov
mov
and
addr16
push
xchg
daa
lret
add
shlb
cmp
cmp
cmp
jecxz
mov
jne
inc
and
sub
mov
in
aaa
pusha
add
bound
cmpsb
mov
inc
xchg
mov
pop
pusha
in
dec
mov
xchg
xorl
xor
mov
sub
cltd
pushf
jecxz
fdivp
repz
sbb
fwait
cmp
jge,pt
js
add
or
cmp
bound
cmp
or
popa
orl
xchg
mov
or
jp
pop
scas
aas
lahf
nop
push
outsb
xlat
mov
ret
xor
js
mov
mov
lock
hlt
push
rcl
incl
lahf
jno
push
dec
cmpsl
lods
push
shl
mov
outsb
sub
mov
test
ret
dec
test
cli
adc
imul
mov
xchg
push
add
lods
jg
call
notl
mov
mov
xchg
inc
in
mov
jb
imul
mov
das
hlt
aas
loop
rorb
inc
flds
mov
jo
loope
psubsw
inc
mov
jp
hlt
fucom
movsb
xchg
add
scas
les
test
mov
idivb
stc
jne
aad
inc
enter
adc
bnd
sub
hlt
fcoms
notl
mov
cmpsb
and
dec
add
push
nop
inc
loopne
cmp
mov
pop
xchg
pusha
inc
or
lods
movsl
aaa
cmpl
xchg
pop
push
and
sbb
xchg
and
mov
jp
add
roll
jo
xchg
lret
jle
xchg
ret
pop
neg
pop
pop
jbe
xchg
ja
lret
mov
xor
adc
add
arpl
inc
mov
push
pop
in
arpl
stos
stos
mov
add
fwait
imul
aad
test
sbb
or
xlat
and
shrb
xchg
jae
push
add
arpl
jbe
std
dec
repnz
mov
dec
pop
sub
loopne,pn
mov
rcr
mov
or
mov
mov
outsb
jbe
call
iret
gs
or
dec
enter
mov
jle
popa
sysexit
subb
push
lods
pop
jns
stc
jnp
mov
imull
sarb
in
cmp
and
xchg
lcall
dec
pop
push
xchg
xchg
iret
inc
jl
mov
dec
popf
and
aaa
mov
sbb
xchg
add
out
dec
cli
clc
int3
push
test
jno
mov
pop
inc
sbb
pop
pop
sti
popa
negl
lea
xchg
push
imul
mov
call
cmp
nop
sbb
bound
bound
cwtl
sbb
incl
bound
popa
adc
xchg
cmpsb
loopne
pop
push
ret
sub
jl
pop
leave
call
push
dec
pop
and
pop
add
cwtl
fsubs
push
cmp
mov
outsl
jge
stc
lcall
data16
jo
xlat
xchg
fdivrl
xchg
mov
movb
xor
xor
adc
sbb
and
dec
adcb
mov
cmp
lock
lret
enter
inc
into
ja
je
push
push
xor
data16
sub
jno,pt
ljmp
push
jne
cmpb
ss
mov
insb
lea
in
add
xchg
addr16
mov
adc
push
lahf
mov
pop
xorb
xchg
pop
and
xchg
jns
into
and
lret
xchg
repnz
jb
clc
fwait
xchg
and
jg
daa
xor
lcall
iret
mov
gs
pushf
iret
in
add
lret
repnz
pop
mov
enter
sbb
addb
add
mov
popf
or
xor
sub
mov
sbb
in
jl
fistpll
icebp
mov
mov
ror
test
mov
aaa
cltd
xor
cmp
negl
mov
xchg
pop
inc
das
or
aaa
movsb
fwait
push
pop
inc
sub
and
add
sub
popa
mov
pusha
aad
dec
fnstenv
xor
into
mov
test
movsb
aas
cmpsl
xor
jo
pop
jne
pushf
cmc
ja
clc
push
clc
and
mov
dec
sar
mov
or
cltd
xchg
iret
sub
xor
xchg
gs
fcompl
cmpsb
xchg
cmc
sarb
cmc
adc
fsqrt
cmpsb
adc
sub
pop
push
lds
lcall
daa
dec
loope
push
daa
mov
inc
mov
dec
jecxz
pop
test
mov
and
inc
mov
cmc
push
mov
push
xchg
notl
or
notl
or
notl
or
notl
or
.byte
push
mov
rcll
scas
jmp
test
scas
jns
es
shlb
sub
mov
dec
and
pop
pop
loopne
shrl
jo
call
xchg
popa
pop
cmp
aas
out
cmp
pop
sub
data16
mov
mov
sub
ljmp
adc
adc
cli
fs
icebp
cmp
pop
mov
imulb
hlt
out
push
dec
cli
inc
mov
jp
xchg
jg
rcl
add
add
es
into
mov
inc
mov
jne
sbb
cli
mov
jecxz
mov
sahf
repnz
pop
sub
add
movsb
xor
pop
xor
sub
add
cmp
push
mov
sti
dec
push
repz
cld
xor
push
sub
xchg
imul
in
ljmp
jp
idiv
arpl
push
or
shl
sbb
jecxz
adc
inc
fisubrs
lds
mov
and
sti
mov
and
in
cmp
pop
mov
adc
cmp
rcrb
lahf
or
or
jge
int
push
and
call
push
mov
out
inc
mov
std
mov
iret
jns
push
outsl
jmp
xchg
je
mov
lahf
adc
sub
and
mov
std
push
imul
and
ret
jecxz
pop
adc
fmull
add
xchg
mov
jmp
repz
sub
adc
sbb
mov
mov
lea
iret
adc
mov
subl
dec
and
sbb
pop
stc
mov
pushf
pop
stos
out
imul
sbb
xchg
decb
pop
ds
mov
rorb
jmp
and
pop
aas
dec
int
or
inc
pop
cs
inc
jg
inc
sub
pop
mov
decl
cmp
out
mov
es
fdivl
test
push
sub
and
sub
arpl
shll
adc
sbb
mov
test
imul
sub
jb
jp
mov
xor
jp
nop
aas
lret
push
jmp
add
lods
mov
repz
js
aam
xor
nop
mov
xor
adc
mov
ficoml
cli
std
leave
adc
out
outsb
ja
cmp
stc
sbb
push
outsb
sub
push
bound
or
or
mov
neg
adc
inc
push
dec
pop
mov
mov
add
fisubs
nop
test
into
or
or
mov
cmp
adc
ret
les
inc
loop
mov
es
ds
mov
xor
inc
hlt
das
pop
ret
out
js
test
sub
add
adc
loopne
push
lock
in
shr
or
add
int
xchg
mov
adc
push
add
mov
inc
push
and
out
stos
pusha
ret
pushf
lahf
cs
imul
cmp
mov
daa
pop
js
sub
iret
cmp
mov
mov
movsb
jge
pop
loop
test
outsl
das
mov
stos
push
fistps
repnz
push
insl
mov
mov
push
dec
filds
dec
pop
ss
add
xchg
or
or
data16
xor
loopne
xor
pause
das
cmc
lds
and
fwait
icebp
out
add
pop
imulb
ds
dec
jns
sub
nop
pop
dec
pop
dec
fstl
push
xchg
pusha
fildll
fldenv
int3
cmp
cli
clc
call
int3
jl
jns
test
sti
daa
pop
ud2
adc
xchg
adc
sub
push
pop
sti
negl
lcall
xlat
out
xor
orb
hlt
sbbl
into
aad
clc
bnd
mov
adc
adc
sub
xor
sti
inc
popl
mov
jb
push
sub
ljmp
ret
inc
nop
lods
or
js
imul
cmpsl
mov
fs
xchg
in
rol
dec
push
push
lea
jbe
xlat
in
xchg
mov
ss
pop
sbb
pop
jne
xchg
sbbl
dec
pusha
pextrw
fsincos
popa
outsb
shrb
fsubs
inc
out
pop
pop
movsl
push
ret
shlb
push
sbb
loope
jl
push
out
rcll
sbb
adc
imul
cmpl
add
lret
mov
sbb
cmpsl
ljmp
inc
leave
mov
jle
add
nop
jp,pn
push
stc
xchg
mov
or
lods
stos
mov
jnp
mov
lcall
push
lcall
or
inc
mov
les
or
mov
jl
push
adc
cwtl
repnz
sbb
mov
pop
dec
ds
sarb
movsl
pop
aam
cmp
adc
dec
movsb
xchg
scas
jb
mov
mov
cmp
xor
adcl
repnz
test
loopne
lock
rorl
mov
pop
divb
sbb
mov
and
jbe
mov
divb
lret
stos
fisubl
push
ret
cmp
pop
xchg
aaa
mov
push
iret
push
repnz
inc
popa
jle
jno
xor
les
cmpsl
jnp
out
xor
je
sti
jno
xor
rcl
mov
inc
inc
ja
dec
xchg
outsb
xchg
dec
std
aaa
and
mov
jno
lret
fldenv
sti
imul
add
lret
fistps
dec
jmp
push
mov
cltd
mov
xor
jmp
pop
add
ds
jl
sahf
cli
xchg
jnp
aas
test
push
xchg
cmp
xlat
repnz
cltd
imul
xchg
mov
mov
loope
movsl
xor
push
lods
mov
push
adc
pop
cwtl
pop
imul
js
sahf
and
incb
mov
and
xchg
and
mov
pusha
mov
pop
mov
lods
aad
dec
push
frstor
mov
mov
shll
sub
pop
jmp
mov
push
hlt
cltd
pushl
or
iret
add
call
ja
or
data16
mov
out
dec
xchg
adc
scas
mov
imul
adc
dec
jecxz
data16
mov
dec
imul
mov
sarb
push
inc
je
sarb
adc
sbb
into
xor
jnp
adc
cmp
and
fwait
inc
stc
movsb
lods
dec
enter
adc
inc
cwtl
popf
push
xchg
stos
jbe
lods
add
pop
xor
inc
adc
and
push
sarb
das
mov
sbb
aad
or
pop
pushf
int3
xor
pushf
mov
lahf
into
subb
arpl
cmp
jmp
ret
pop
out
and
lahf
xor
repnz
add
enter
cmp
movsl
rorb
jo
data16
adc
mov
fdivrs
notb
lods
add
jno
sbbb
cmp
inc
lret
pusha
push
lods
mov
pop
ljmp
fld
mov
inc
out
dec
je
aam
xchg
scas
xor
mov
popa
xchg
adc
dec
aad
clc
ljmp
test
and
adc
add
adc
xchg
mov
icebp
movsl
xor
pop
das
mov
bound
dec
aad
dec
sbb
sbb
movsl
popa
push
push
test
mov
or
mov
shrl
sbb
pop
inc
sbb
ficoml
std
in
push
or
popa
lods
mov
addb
jo
jbe
sti
and
cmp
and
adcl
pop
movsb
fidivl
pop
jns
mov
mov
and
and
pop
sub
stc
outsb
or
popa
repnz
rcll
adcb
shll
mov
xchg
fstpt
clc
into
lcall
sub
insb
jle
movsl
cmp
or
cmp
repz
add
cmp
lahf
stc
adc
movb
xchg
dec
xor
dec
pop
pop
loopne
jecxz
mov
ret
js
pop
dec
add
nop
stc
aam
sub
mov
icebp
enter
inc
cmc
insb
pushf
sub
cwtl
aad
scas
pop
repz
sub
dec
jmp
cmp
xor
repnz
xor
push
push
inc
or
addr16
js
lods
cli
aas
mov
mov
inc
call
jne
sbb
cmp
and
into
aam
out
nop
cmc
fcoms
lock
sub
movsb
lods
push
aaa
add
sub
loopne
pusha
movsb
or
mov
mov
stc
mov
push
inc
out
add
sbb
aaa
mov
or
divl
and
ret
push
jo
cmpsl
loopne
orb
adc
sti
sub
jge
xchg
xor
xchg
or
std
in
sub
bnd
lret
aas
sub
jmp
sbb
loopne
pop
jp
dec
sti
mov
outsl
lea
inc
add
popa
iret
add
jbe
rclb
adc
repnz
cld
cmp
popf
aas
and
push
adc
pop
ss
outsl
dec
add
jge
cmp
pop
sahf
pop
sti
scas
jnp
mov
push
lea
pusha
popf
jge
mov
push
jg
movsl
aad
lret
jl
lret
mov
jmp
mov
cmp
test
mov
or
pushf
rclb
int3
out
adc
add
addl
pusha
mov
cltd
jp
sub
adc
cld
adc
fsub
mov
das
add
pop
aas
movsb
shll
or
stc
fxch
in
xorl
pop
or
mov
cmp
fwait
shr
dec
xor
dec
mov
cli
add
or
lea
jo
mov
scas
adc
sub
add
pop
in
mov
js
testl
push
les
ljmp
jo
fisubl
mov
enter
std
les
add
ret
sub
jecxz
cmp
stos
add
add
push
mov
inc
adc
push
push
outsb
daa
out
fistpll
xchg
in
lcall
cltd
into
fwait
dec
pop
stos
mov
mov
xor
icebp
or
sub
inc
adc
out
jbe
loope
mov
add
jecxz
or
ja
lret
arpl
xchg
dec
xor
aas
mov
bound
js
pop
pop
adc
mov
adc
imul
test
sbb
test
stc
pop
jmp
rcl
jle
mov
push
int3
jecxz
arpl
pop
inc
loope
jmp
repz
jb
jle
mov
mov
dec
jle
loopne
mov
cli
mov
jmp
movb
std
stc
mov
xchg
ret
add
push
push
nop
mov
in
repz
sub
adc
sub
add
outsl
xchg
cmpsb
jne
bswap
mov
push
ror
loop
jno
add
or
stos
inc
mov
rcl
cmpsl
adc
pusha
test
add
aam
push
jns
inc
test
pop
adcb
jns
scas
daa
out
pop
cmp
or
mov
push
sub
inc
fbstp
scas
mov
or
sub
mov
inc
jns
stos
jo
jno
cmp
outsb
fcoml
clc
or
or
cmp
push
pop
dec
push
stc
cmp
xchg
jno
icebp
inc
gs
mov
mov
cmp
je
cmpsb
jne
lahf
jne
bound
ja
movsb
sarb
subl
lods
aaa
cmp
sbb
jno
movsb
and
mov
cli
mov
xchg
push
dec
shlb
push
sbb
out
leave
or
sub
inc
rcl
inc
jecxz
xchg
and
ljmp
jo
rolb
aas
pop
push
test
jno
cld
mov
jl
add
pop
icebp
dec
clc
lods
inc
and
cmp
mov
pop
mov
dec
xchg
adc
scas
aad
dec
mov
js
jo
xor
jp
loope
inc
pop
cs
jge
stos
inc
mov
or
adc
jp
clc
data16
fs
rolb
std
pop
mov
shlb
pop
jns
mov
outsb
cmc
cmpsb
push
mov
loop
xor
xchg
into
mov
fisubrl
sbb
or
out
call
add
daa
fbld
fstpl
test
mov
inc
sbb
fcoms
test
fistpl
scas
sbb
frstor
popa
jg
xchg
xchg
dec
mov
push
imul
fcompl
xchg
call
mov
pop
inc
mov
jbe
jle
fld1
arpl
in
adc
int3
xchg
roll
push
mov
pop
sub
int3
dec
dec
divw
push
into
or
fdivs
xchg
gs
and
movl
scas
lea
cmp
test
out
inc
aas
clc
xor
rorb
lret
pop
sbb
cmpsb
mov
js
mov
inc
lcall
push
xor
mov
adc
xor
into
xchg
movsb
add
or
pusha
push
test
push
shlb
dec
mov
dec
xchg
push
dec
popf
push
push
jbe
cmp
neg
mov
test
lock
imul
inc
arpl
jmp
fistps
cmpsb
hlt
xchg
push
dec
xor
enter
test
mov
push
adc
arpl
cs
loop
aaa
push
add
mull
and
decl
frstor
rol
push
lret
jmp
jnp
fsubl
pusha
add
mov
cmc
mov
mov
or
sbb
xchg
mov
xchg
mov
mov
adc
xlat
pop
rcll
inc
popf
ss
mov
jp
add
mov
scas
mov
or
or
pop
xchg
mov
mov
cmpsb
test
sbb
ret
xchg
mov
xor
sbbl
insb
mov
xchg
sub
or
dec
ja
cltd
push
loop
enter
mov
jae
and
fdivl
push
cmp
sbb
hlt
dec
mov
mov
xor
inc
fsubs
push
hlt
push
xchg
jbe
mov
dec
cltd
push
sub
int
clc
cli
and
movsb
pusha
sbb
ret
orb
stos
fistl
mov
bnd
jbe
or
jb
dec
fisubs
inc
xor
push
imul
push
sbb
popa
and
sbb
repnz
leave
filds
lret
lret
loope
push
jl
iret
mov
push
mov
loope
bound
neg
jl
out
jne
mov
addb
lret
mov
xor
dec
loopne
cli
into
dec
cmpsb
and
stos
test
push
jg
cmc
subb
mov
shrb
or
fcmovnu
inc
lret
repnz
in
lock
sub
loopne
mov
scas
push
daa
dec
stos
xor
jne
das
and
pop
xor
cltd
push
fidivs
aaa
pop
pop
jp
shll
loope
bound
hlt
aam
xor
mov
pop
aad
rcll
adc
push
mov
push
data16
arpl
test
or
pop
in
nop
xor
xor
cmp
inc
dec
mov
jno,pn
dec
loope
lods
push
lock
sbb
out
leave
jl
sub
and
jmp
sub
sbb
jp
pop
xor
int3
jns
int3
push
push
mov
jmp
enter
push
stos
jmp
in
loop
cmp
dec
lea
add
les
add
call
fcoms
shll
xor
dec
scas
xor
pop
enter
dec
and
mov
outsl
cmc
inc
add
sarb
cmpsl
inc
mov
insb
cmp
jge
lret
ja
adc
inc
mov
jbe
mov
int
call
mov
incl
jle
pop
push
sahf
fmull
dec
cmpsb
adc
fsubrl
lcall
rol
movsb
push
dec
mov
leave
mov
push
inc
adc
insl
adc
inc
fs
push
cltd
or
std
jno
sbb
hlt
pop
lods
aas
std
cmp
dec
jmp
dec
insl
enter
mov
jg
cli
int3
ja
cs
mov
xchg
fisttpll
sbb
decl
dec
push
sub
mov
dec
add
lds
xchg
inc
adc
popa
repz
ljmp
movsl
cs
nop
movsb
cmp
and
data16
jne
test
std
in
mov
repnz
addr16
movl
or
dec
push
mov
in
jbe
xor
push
cmp
repnz
jmp
aaa
xchg
pop
subb
push
pop
ja
enter
pusha
or
sbbb
cmp
adc
jp
sti
jmp
fistl
in
cmp
sub
add
mov
jns
mov
aaa
mov
sbb
fnstcw
call
lret
jae
mov
inc
shll
sbb
leave
fiadds
push
mov
cld
mov
pop
inc
mov
mov
jp
jmp
cmpsl
pop
shlb
push
push
inc
lahf
jle
push
lods
jp
push
addr16
les
push
pop
test
test
mov
aad
mov
gs
loopne
push
push
push
shll
aad
stos
lock
clc
repnz
lds
test
lcall
movsl
idivl
pop
xor
addr16
inc
lret
sahf
cvtps2pi
imul
adc
mov
jl
scas
mov
pop
fistpll
fwait
sub
enter
dec
fistpll
es
jp
cwtl
cmp
xor
insb
add
jl
mov
lahf
mov
add
outsl
mov
in
xchg
dec
fucomip
mov
test
mov
arpl
jns
iret
xchg
xchg
and
lret
sarl
inc
test
or
push
mov
clc
mov
xor
pop
loop
cmpsl
lods
shlb
lods
jle
xchg
cmp
adc
xchg
sarl
popf
pop
adc
xor
lahf
fcoml
adc
xchg
mov
out
xor
nop
lahf
push
call
outsb
adc
fldl
into
adc
out
mov
mov
lods
dec
lcall
out
xchg
movsl
or
mov
or
dec
mov
iret
fildll
fiaddl
imul
bsr
jle
inc
inc
or
je
in
sahf
pop
xor
pop
pop
sahf
or
test
dec
mov
and
pop
or
leave
cltd
out
daa
adcb
add
sub
dec
jecxz
ret
test
clc
xor
sub
cwtl
aaa
jp
lods
jno
js
repnz
aaa
outsb
into
subl
int3
sub
xchg
dec
cmp
stos
cwtl
cmp
test
fs
shlb
repz
or
xor
les
jge
mov
adc
cmp
dec
fs
dec
pop
sbb
or
xor
xor
mov
das
xor
adc
and
push
xchg
jle
sub
or
mov
rorb
scas
ret
or
ljmp
imul
cmp
cmp
rcl
push
lea
int3
scas
test
mov
jne
fstl
mov
das
sbbl
jecxz
mov
adc
stos
push
push
jmp
sub
cmp
ret
adc
inc
into
push
push
addr16
cmpsl
add
xchg
mov
lods
fidivrs
xor
push
xchg
and
lret
mov
xlat
mov
shlb
outsb
mov
push
dec
addl
lods
adc
loopne
add
loop
jae
jecxz
cltd
jae
mov
adc
adcb
sub
mov
insl
mov
sbb
pop
mov
in
sub
xchg
popa
fistl
push
negl
jae
mov
out
sbb
inc
sub
mov
mov
cwtl
or
stos
test
pop
mov
iret
shll
push
stos
xchg
and
neg
jne
push
test
add
data16
mov
scas
pushf
fstpl
xor
xchg
cmpsl
test
jb
cmp
push
loop
cmp
ret
inc
xor
mov
mov
mov
mov
cmpsb
xlat
out
imul
bound
mov
int3
fisubl
test
and
sub
and
mov
pop
push
mov
imul
sub
imul
jbe
cmc
inc
inc
jmp
clc
xchg
mov
call
xchg
add
xchg
mov
sti
cs
sub
xchg
loope
pop
sti
pop
mov
or
mov
mov
orb
lcall
js
jb
movsl
lcall
insl
shl
mov
mov
or
adc
imul
loopne
push
aas
outsl
es
fs
jle
adc
mov
xor
pop
inc
cmp
ficomps
ja
mov
pop
jl
divb
aas
scas
movsl
lods
jo
sbb
leave
adc
test
and
stc
mov
mov
jae
add
ss
jo
int
imul
pushf
sub
xchg
popa
pop
and
in
leave
xor
add
jp
jp
hlt
jo
pusha
sub
xor
and
frstor
rol
in
int
adc
ljmp
sbb
inc
jae
enter
xor
mov
insl
inc
jb
cwtl
stos
out
clts
daa
loop
das
repz
icebp
loop
sub
adc
cmpsb
mov
shll
and
dec
xor
ret
fs
movsl
ret
cmp
bound
ja
adcl
mov
adc
cmp
mov
mov
lret
rcrb
cmp
test
mov
pop
dec
ret
neg
fcomps
jae
adc
pop
ja
inc
add
mov
sub
sub
jl
test
std
cli
adc
mov
pop
loopne
or
ret
shlb
mov
mov
mov
out
sub
add
mov
adc
jecxz
jns
mov
push
icebp
jae
cmpl
je
xor
sub
xor
addb
arpl
aaa
pop
aam
cmp
cltd
pushf
outsb
mov
nop
dec
xchg
shll
imul
mov
push
shl
and
mov
lret
or
mov
testl
xchg
pop
xchg
pushf
jmp
cmp
notb
mov
sarl
sbb
add
insl
push
pop
sub
movsb
mov
mov
imul
pop
push
cs
daa
inc
fiaddl
mov
sub
push
lahf
xchg
sub
or
ret
movsl
jno
pop
cld
daa
sub
adc
cmpsb
movsb
pushf
lret
mov
add
pop
sbb
loopne
xchg
movl
xor
dec
addr16
mov
negl
fsubrs
or
stc
xchg
ficompl
push
pop
xlat
fwait
xchg
cmp
sbb
stos
in
stos
lds
stos
nop
subb
les
xchg
inc
testb
gs
push
jb
xchg
mov
rcl
aam
cli
stc
mov
aaa
xor
sbb
jge
push
dec
lods
mov
stos
dec
dec
iret
xchg
jb
cmp
xchg
mov
xchg
jge
mov
mov
rclb
mov
rep
adc
ds
push
jmp
jmp
jo
repz
xor
and
xchg
lahf
pop
sub
sti
mov
dec
je
fdivrs
ljmp
leave
mov
jg
lea
push
push
cmc
and
sub
mov
test
outsl
popf
push
jge
push
or
and
addr16
inc
test
in
in
or
incl
scas
mov
mov
shll
push
push
add
xor
push
mov
lods
or
add
xchg
cmp
fsubr
mov
scas
xchg
inc
xchg
sarl
rorb
dec
mov
popf
sbb
sbb
sbb
sub
pop
pop
push
int3
and
push
fdivrl
or
push
fs
sbb
xchg
and
cmp
lahf
pop
and
fadds
rclb
sbb
popf
dec
push
dec
inc
aam
int3
movsb
inc
or
hlt
pusha
push
test
jno
mov
add
hlt
test
pusha
movsl
ret
push
adc
mov
jl
sbb
xchg
enter
in
adc
xchg
pop
leave
add
jne
mov
pop
repnz
test
sbb
add
shl
sbb
mov
jmp
jnp
pop
in
sub
imul
or
sarb
stos
mov
aam
jg
cli
jo
mov
dec
add
mov
lea
stos
icebp
pop
xor
sub
out
das
sti
jbe
iret
loopne
dec
inc
dec
mov
js
imul
imul
sbb
jg
test
or
add
or
cmp
mov
xchg
mov
jl
dec
cmp
mov
xorl
aam
sbb
pop
sub
out
out
mov
mov
out
adcl
or
mov
movsb
jae
xor
jle
jo
je
pop
stos
imul
xor
aad
dec
mov
jl
sbb
mov
iret
mov
dec
cmp
push
shll
loope
cld
add
cmp
pop
sbb
adc
pop
cmpsb
mov
mov
test
add
repz
mov
lea
pop
push
call
dec
mov
andl
fmuls
notl
out
dec
jg
fwait
jno
adc
inc
in
out
in
cmp
cld
xlat
mov
jnp
out
add
in
lods
mov
test
scas
fisttpll
and
xor
inc
jb
fsubrs
lds
jnp
fwait
sub
mov
popa
adc
stos
jmp
dec
mov
gs
cmp
icebp
jnp
and
jbe
sub
rolb
stc
cltd
mov
out
movsl
ss
jne
repz
loopne
fwait
test
pop
in
pop
push
push
aaa
fisubs
test
mov
inc
loopne
sub
out
inc
outsl
fistpl
mov
push
jmp
shll
aam
arpl
test
mov
push
les
clc
add
js
adc
daa
jg
jae
in
into
sub
adc
dec
push
cmp
cwtl
fidivs
stos
lcall
or
cld
pop
cmpsl
xchg
ret
es
push
xchg
lods
inc
movsl
inc
mov
fists
andb
icebp
xchg
mov
stc
xchg
data16
lods
mov
mov
loop
lcall
mov
sti
mov
rcrb
fnsave
ljmp
int
sub
aaa
loope
roll
out
in
mull
pop
and
jnp
add
movsl
psubq
jge
add
ja
sbb
clc
xchg
add
dec
adc
rolb
pcmpgtd
sub
pop
xchg
mov
push
push
adc
xchg
pause
mov
pop
dec
pop
add
fldl
loopne
in
push
loop
ret
icebp
fs
mov
jge
in
cltd
jle
mov
and
dec
not
or
leave
cs
insl
xchg
movsb
ja
push
fstpl
jg
push
divl
sti
jmp
pop
jl,pn
aad
or
xor
add
mov
mov
pushf
loope
or
sbb
decb
fwait
int3
ret
xchg
fistpll
fsubr
xchg
lret
inc
pop
xor
pop
mov
insl
test
add
por
shr
packuswb
inc
mov
popa
bound
addr16
in
and
pop
cmovs
push
sub
ja
loope
test
movsb
fstps
sub
pop
xor
mov
jp
sub
xlat
mov
aaa
mov
and
or
sub
and
hlt
mov
sbb
mov
shlb
pusha
aad
push
mov
cmp
pusha
xchg
rcl
gs
cmpsl
add
cld
lret
or
adc
mov
sub
sub
mov
or
push
rorl
test
xor
ret
xor
xchg
push
or
roll
popf
nop
icebp
xor
jl
rcrb
or
fdivrp
loope
fwait
je
nop
jge
adc
fiaddl
xchg
decb
jg
cli
hlt
les
outsb
pop
pop
test
stc
xchg
mov
je
orb
xlat
inc
and
mov
test
in
xor
cltd
xchg
push
mov
mov
pop
and
push
cmpb
pop
or
popf
pop
cmpsb
xadd
and
xchg
xor
cmp
in
cmp
mov
sti
pop
inc
outsl
sub
scas
outsl
mov
push
dec
cmpsl
loop
inc
mov
out
out
out
jg
and
pop
push
lahf
stc
xor
aas
aaa
sub
push
ret
jecxz
mov
into
je
mov
fstpt
cli
nop
xor
or
xor
fwait
xchg
fdivrp
aas
push
fstpt
scas
cwtl
cmpsb
gs
fiadds
in
call
testb
jo
cmp
inc
sbb
xor
pop
add
jge
in
mov
push
push
sub
iret
xchg
in
test
in
iret
shll
testb
nop
pop
out
test
pushf
pop
xor
outsb
and
pop
cmp
push
cmp
fdivs
loope
add
push
xchg
repnz
std
dec
cmpsb
pusha
sbb
call
into
xor
mov
xchg
mov
jo
jmp
rorl
loopne
imul
in
inc
jnp
lcall
mov
rclb
ds
sub
das
iret
xlat
mov
mov
mov
adc
insl
sub
add
mov
dec
push
icebp
xor
inc
repz
sbb
cli
cmp
sahf
lods
pop
gs
push
stos
aam
push
cli
push
push
test
fucomi
popf
and
push
jecxz
sti
lock
xor
std
fildl
adc
repnz
aam
xlat
fwait
lea
fisttpll
jnp
push
or
push
fstp
mov
leave
pushf
cmp
cmp
enter
and
or
loop
sbb
sub
js
lods
sub
int3
jp
arpl
das
add
pop
dec
mov
ret
mov
icebp
mov
pushl
push
idivb
add
xchg
push
mov
stos
jmp
mov
lods
aam
rolb
add
lds
scas
outsl
shl
ret
adc
jle
incl
in
fdivl
sti
stos
inc
test
inc
in
push
sbb
sbb
sub
vsqrtps
inc
fdivrp
xchg
sbb
ja
xchg
insb
out
divl
std
inc
sub
xchg
xchg
fiadds
stc
push
fsubl
fistpl
lret
call
iret
cld
xor
xchg
in
iret
push
pusha
pop
inc
js
ret
test
pop
xor
adcl
add
sbb
shrl
call
adc
xor
cwtl
cwtl
sub
test
rcr
sub
pop
add
mov
addr16
push
lock
jb,pt
xchg
sahf
ror
jecxz
out
or
aam
icebp
lds
into
jne
mov
andl
jo
pop
test
ljmp
popf
shl
cmp
jns
lcall
and
mov
mov
mov
inc
inc
je
mov
aad
mov
push
push
in
push
test
push
dec
repz
sub
push
sti
aaa
sub
jae
mov
adc
cmp
sub
aam
inc
fstps
call
mov
cmp
cmp
cmp
pop
add
dec
adc
adc
stos
imull
rorb
push
mov
or
push
dec
scas
fwait
mov
pusha
icebp
stos
pop
add
and
inc
sar
es
or
mov
dec
jecxz
jecxz
pop
inc
loop
nop
inc
loopne
ja
mov
mov
pushf
push
ds
mov
pop
std
test
mov
and
xchg
in
push
mov
aam
mov
fsubp
inc
out
mov
pop
pusha
dec
outsl
sbb
lret
push
fwait
lods
inc
add
add
push
idivl
mov
call
mov
fld1
push
ds
cmp
fcomps
push
add
jle
aam
leave
fcoml
pop
cmp
jmp
out
stos
xor
insb
jne
sub
xchg
push
lods
mov
fnstenv
xor
push
add
fwait
mov
xchg
repz
pop
cmp
int
dec
add
iret
repnz
outsb
ljmp
scas
lret
sub
mov
aad
loope
aaa
leave
imul
sbb
sub
sbb
push
mov
movsl
outsl
or
sub
push
fcmove
xchg
sub
push
xchg
jle
dec
les
mov
add
je
adc
lods
ljmp
cmp
pushf
sahf
mov
dec
shl
mov
sub
inc
adcb
pushf
xor
add
das
lods
fimull
cs
cltd
leave
add
push
pop
dec
stos
sub
loopne
popa
icebp
mov
insb
xchg
daa
pop
jae
add
xor
out
cmc
cli
rcrl
cmpsb
cltd
xchg
fpatan
jne
clc
pop
out
lahf
push
scas
adc
jmp
xor
mov
or
and
leave
fists
sbb
inc
xor
jo
dec
adc
mov
sahf
jmp
cltd
or
mov
inc
pop
push
mov
xchg
mov
andb
subb
mov
shll
imul
dec
push
xor
pop
add
shll
lds
out
cmpsb
in
scas
adc
ja
popf
xchg
pop
mov
lret
mov
push
or
lods
cld
mov
addl
dec
push
sbb
mov
scas
and
sahf
inc
xlat
or
cmp
cmp
cwtl
and
aam
adc
shll
inc
mov
mov
jae
sub
lods
ret
sbb
push
dec
jnp
dec
add
mulb
ret
mov
push
cli
into
pop
lahf
jbe
cmp
movsb
jge
and
cmp
lock
js
fs
sbb
cvttps2pi
loopne
lock
cmpl
pusha
fs
out
or
ljmp
out
fwait
pop
call
pop
sbb
jmp
dec
into
cmp
insb
ret
and
les
cmp
ja
push
out
popa
xor
dec
jne
push
and
fldenv
popa
cmpsb
or
inc
push
cmc
or
addb
xor
nop
pop
call
cs
mov
int3
mov
lock
into
dec
enter
daa
fstps
test
nop
sbb
push
sbb
cmp
mov
ror
jg
adc
movsb
pop
enter
jmp
pop
in
aaa
fstl
lahf
fs
stc
cmp
negb
into
push
repz
push
scas
lock
mov
jmp
mov
outsb
xor
std
mov
repz
xchg
sti
adc
call
add
push
cwtl
idivb
jbe
xchg
xchg
lds
mov
std
or
or
pop
and
xor
es
int
fs
divl
xor
roll
mov
push
inc
std
pusha
stos
in
pop
shr
push
mov
test
or
cmp
xor
lods
push
push
ret
test
mov
stc
or
pop
and
inc
pop
fadds
sbb
mov
aaa
ljmp
fsts
insb
sbb
push
das
cmpsb
stc
fs
out
jp
push
lock
ja
mov
and
jb
pop
shr
movsb
sub
or
mov
mov
fcomps
cmc
sub
arpl
out
xlat
or
shlb
test
and
popa
daa
adcl
or
int
jbe
test
adc
pusha
mov
scas
inc
jnp
adc
jp
mov
mov
aaa
loopne
xchg
fstpt
aad
jl
arpl
test
jae
add
shlb
sbb
and
cmp
xor
jo
mov
sahf
icebp
das
and
jne
jge
daa
sahf
jo
shrl
and
call
int
xchg
loop
or
sbb
dec
incl
mov
call
sti
sbb
movsl
jle
inc
call
mov
pop
loope
add
repz
inc
cmp
xchg
sub
les
loope
sbb
lock
sub
add
outsb
xor
rcl
xor
lock
add
mov
push
push
mov
xchg
fdivl
imull
sbb
push
sarl
add
repnz
leave
jnp
lret
cld
dec
imul
or
out
xorb
add
pop
fdivs
sbb
cmp
inc
push
gs
out
scas
ror
jmp
cli
cmp
or
pop
mov
addl
arpl
repnz
push
add
adc
lds
inc
fisttps
js
pop
jb
pop
mov
or
ja
mov
test
lea
xchg
xchg
dec
es
and
mov
aad
xor
xchg
push
in
out
scas
sbb
fists
cli
jl
sbb
sub
shrb
mov
adc
pop
xchg
pushf
push
sbb
jge
fisubrl
sub
sub
and
in
fstpt
cld
sbbl
mov
test
std
and
mov
push
roll
cmp
pop
imul
jp
xor
xor
mov
push
xchg
mov
pop
movsb
mov
das
pop
ja
dec
inc
pop
lret
outsl
mov
subb
cltd
cmp
enter
pop
dec
sbbb
mov
xor
dec
inc
jno
enter
movsl
rcrb
jnp
adc
and
shrl
iret
xchg
popf
or
imul
and
mov
push
xchg
std
fs
out
cmp
push
pop
test
outsb
jecxz
add
add
clc
push
insl
push
jae
push
lods
pop
sbb
fidivrs
mov
enter
outsb
xchg
pop
cwtl
imul
dec
dec
cltd
loop
rolb
mov
add
xchg
orb
scas
aas
xchg
pop
rcrb
mov
add
nop
pop
dec
xor
cmp
mov
insb
enter
std
enter
lret
bound
cmp
jmp
mov
loopne
stos
jl
div
sbb
outsl
sub
cmp
cmp
fs
add
jno
icebp
mov
mov
and
shl
popf
in
cwtl
or
mov
push
dec
aaa
divl
push
xchg
fists
dec
test
jae
adc
lret
repz
js
rcrl
jp
cmp
lret
add
sbb
pop
cmp
loopne
push
out
jnp
dec
stos
adc
je
sbb
xchg
mov
sub
sub
rorb
cmp
pop
sub
jns
jg
add
pop
sbb
push
divl
jecxz
or
dec
pop
lcall
dec
push
cmpsl
add
mov
jg
cmp
dec
mov
dec
mov
jmp
jge
std
imul
push
pop
jp
into
repz
xor
push
add
and
push
xchg
and
rorl
sbb
sarl
jp
xor
lcall
sbb
push
js
fucomip
xor
dec
mov
mov
mov
popa
jne
into
add
mov
add
sub
aaa
arpl
bnd
enter
cltd
pop
adc
test
cmc
repnz
xorl
pop
cmp
popf
subb
mov
fld
jl
mov
mov
and
mov
sub
repnz
mull
sub
mov
shrb
lock
mov
femms
repnz
add
and
addb
xor
int3
sub
adc
stc
jl
xorl
inc
mov
movl
aam
adc
pop
xchg
je
jl
inc
xchg
xor
adc
push
dec
xlat
mov
pop
or
test
push
rclb
jbe
xchg
xchg
out
in
cmpsl
and
sbb
xor
dec
jo
pop
pop
or
bound
int
mov
inc
movsb
sbb
push
or
push
or
or
into
mov
xchg
adc
push
pop
stos
leave
idivb
cmp
adc
sar
testl
mov
stos
sub
jge
lret
mov
dec
lods
push
daa
daa
lods
enter
mov
insb
pop
scas
rorb
jmp
hlt
or
adc
cmp
das
lret
outsb
je
xchg
sbbl
fidivl
add
adcb
adc
sub
fxch
or
and
mov
into
jl
or
daa
xor
xor
cmp
xchg
lret
subl
mov
iret
in
xchg
mov
mov
sbb
and
push
das
nop
std
arpl
adc
xchg
add
sub
mov
ljmp
lret
lds
jmp
icebp
mov
push
rcl
js
and
ja
push
inc
aam
and
mov
jns
add
incl
xchg
insb
inc
cmpsb
ljmp
jae
push
xor
stc
lret
pop
lret
pop
pop
mov
inc
mov
jae
in
sbb
out
shlb
mov
cld
shrb
jae
mov
bnd
mov
andl
pop
sti
add
mov
shrb
pop
inc
push
and
lahf
dec
popl
in
cli
rolb
xor
jle
ss
ja
pop
adc
xorl
movsb
js
lods
lret
mov
pop
in
fstpl
mov
popa
test
fucomip
inc
and
js
je
sar
movsb
jmp
jns
lock
mov
jo
sbb
cmp
jno
fisttps
dec
xchg
push
cld
sahf
leave
push
je
push
dec
pop
pop
or
incb
inc
cld
mov
xchg
mov
and
jae
ret
scas
jae
inc
ljmp
mov
ds
lds
or
adc
add
cmp
imul
inc
call
popa
pop
pop
enter
lea
pop
push
xor
cld
cmp
mov
cmp
jno
inc
mov
xorl
inc
adc
aas
push
testl
ss
xchg
push
js
jecxz
aam
fnstenv
cmp
push
adc
lret
cmp
stc
js
ss
jne
sbb
shrb
shll
repnz
cli
push
popa
mov
jle
xorl
xchg
mov
aad
cmp
ficoms
inc
jbe
mov
push
into
push
jbe
ss
xor
inc
fwait
cld
lret
lcall
or
and
inc
ffreep
push
inc
std
dec
mov
imul
pop
lods
enter
sahf
adc
jb
and
mov
dec
ss
xchg
shufps
xlat
fs
sub
sbb
mov
mov
subl
mov
jne
add
xchg
inc
arpl
enter
xor
arpl
stos
push
dec
orl
rcr
lods
imul
ja
or
sti
loopne
xchg
inc
pop
xor
xor
scas
lds
adc
mov
dec
xchg
aas
jl
mov
sub
es
push
inc
popf
cltd
and
and
ror
mov
mov
add
cwtl
add
or
sub
je
cltd
jne
and
ljmp
cmpsl
xorb
or
out
inc
cmp
stos
xor
int
and
xlat
test
lock
push
pop
popf
push
cs
cld
xor
cmp
inc
cs
ja
call
shrb
xchg
out
inc
jg
arpl
push
je
icebp
and
pop
xchg
or
ret
xchg
cmp
js
cs
and
xchg
cmpsb
loopne
pop
sbb
inc
mov
mov
fwait
ror
sbb
jle
out
dec
adc
loopne
dec
mov
xor
pop
inc
pop
int3
xchg
push
sbb
push
xor
call
ret
iret
mov
fldl
lods
jmp
mov
rcll
fst
icebp
aad
pushf
out
push
jmp
mov
repz
or
hlt
cwtl
andb
scas
add
add
lret
js
int
xchg
jge
adc
jmp
push
inc
test
jle
sub
shr
les
mov
es
jmp
mov
jbe
sti
sub
mov
in
xchg
jb
shl
hlt
ss
cwtl
adc
sub
addl
jmp
lds
iret
jns
jecxz
sti
cmpsb
in
inc
jns
test
xor
cmp
je
cmpsl
lods
dec
cmpsb
xor
xor
push
add
mov
sub
loope
psubsw
xchg
repnz
push
mov
push
out
pop
inc
cmp
mov
sub
dec
inc
incl
aad
out
inc
cwtl
loope
mov
fs
and
iret
jbe
icebp
divb
daa
sbb
pop
jbe
lcall
outsb
fwait
dec
popf
loopne
insb
and
stos
jmp
and
nop
test
pop
pop
push
mov
sub
mov
dec
adcb
jecxz
dec
sti
cmpsb
cmpsl
lahf
scas
dec
pusha
out
or
mov
or
lcall
int3
pop
add
js
iret
data16
xchg
fsubs
or
lods
fidivl
repnz
pop
cmp
dec
cld
sbb
xor
cld
lahf
loope
into
jle
lods
rol
sub
push
mov
xchg
ret
loopne
sbb
dec
test
inc
mov
cmc
out
or
jmp
rcrl
enter
mov
pop
or
cs
hlt
push
cmp
sub
lds
in
jp
in
test
or
cmp
xchg
lods
daa
add
inc
cmp
and
imulb
pop
push
jnp
xchg
call
mov
loopne
push
sbb
int3
mov
in
xor
jne
into
sbb
stos
mov
dec
das
movsl
out
jnp
fistps
sarb
int3
xor
mov
mov
pusha
pusha
mov
mov
push
cmp
je
arpl
and
roll
scas
out
sbb
mov
pop
scas
pushf
push
int
movsl
shrl
cltd
mov
fs
add
jmp
xchg
cmp
repnz
arpl
jae
enter
mov
into
xor
mov
jle
rcll
push
mov
shll
push
push
pop
push
popf
inc
jge
push
adc
gs
popa
mov
leave
dec
dec
dec
push
dec
test
sarb
ret
mov
push
outsb
pushl
sbb
sbb
ret
cwtl
add
inc
or
xchg
lahf
in
cmp
sub
pop
xchg
inc
jb
loop
call
imul
ret
jb
dec
bound
movsb
sbb
jns
pop
push
push
mov
dec
fistl
push
add
pop
mov
leave
je
js
dec
loop
or
pop
data16
adc
xchg
jmp
pop
cmpsb
int3
xchg
iret
mulb
inc
push
xchg
cmp
mov
cmpsl
push
scas
div
xlat
dec
imul
cmp
and
or
outsb
cwtl
and
stos
sub
loope
dec
dec
sbb
jbe
fstps
xchg
push
in
mov
push
bound
pop
sub
add
xor
adc
jnp
or
fcmovu
movsl
xchg
dec
or
dec
mov
test
fldcw
xor
test
sti
rclb
icebp
push
jbe
push
or
cmc
je
jnp
cmp
jne
add
mov
lock
jg
orl
xor
cmp
push
fisttpl
push
push
lds
loope
mov
mov
aas
or
ds
xchg
jbe
stos
mov
pop
adc
cmpsb
js
cli
mov
add
push
mov
pop
lock
cmp
push
push
ds
sub
xor
or
iret
hlt
gs
out
scas
addl
fmull
xor
fs
cmpsb
arpl
scas
lret
pop
mov
cltd
lahf
pop
and
pushf
lds
mov
inc
add
iret
ret
sarb
and
jecxz
jle
dec
fwait
push
dec
pop
cmpl
xchg
mov
or
flds
daa
sar
enter
into
std
sub
push
pop
cmp
repz
lahf
pushf
lcall
stos
imul
push
sub
lahf
mov
and
ret
push
adc
mov
add
test
inc
mov
or
cmp
mov
mov
inc
stc
mov
pusha
inc
push
mov
ds
addr16
xchg
push
dec
inc
pop
jno
xchg
ljmp
ret
sub
pop
aas
sub
fistps
ja
orl
aam
rcrb
jge
xor
cmpsl
mov
xchg
hlt
jb
xchg
xlat
adcl
dec
pop
push
aas
and
or
cmp
jbe
test
and
cmp
push
and
clc
pushf
movsb
pusha
cmp
adc
es
pop
ljmp
lods
add
mov
fisubs
mov
push
test
push
or
das
mov
out
test
dec
testb
repnz
repnz
fistpl
and
repnz
sbb
jle
add
add
sarl
jle
repz
fdivl
sub
xchg
lcall
jg
ret
inc
rcl
insb
mov
inc
insb
fbstp
flds
jle
lret
js
pop
subl
scas
jmp
xlat
les
sti
jmp
in
xor
mov
ja
mov
jl
inc
push
scas
shlb
dec
stos
push
fldcw
push
out
aas
xlat
inc
fldl
ds
popa
fmuls
imul
out
inc
cmp
dec
xor
jle
ret
movsl
mov
dec
sbb
pop
and
mov
scas
int
cmpsb
and
fucomp
cs
jae
add
rcrl
repz
cmp
and
sbb
imul
mov
add
mov
push
mov
inc
lcall
dec
rcl
sub
sahf
sbb
dec
push
js
xor
bound
mov
daa
loopne
stos
roll
insl
pop
mov
jmp
xchg
mov
ja
icebp
out
push
movsl
flds
xchg
stc
insl
pop
lea
inc
adc
push
mov
pop
jnp
arpl
test
filds
hlt
mov
sub
cli
xchg
cld
ud0
mov
xchg
lds
or
out
jno
fcmovbe
int
adc
dec
jle
add
jle
push
movsl
je
jmp
adc
sub
inc
sub
mov
pop
push
sub
mov
nop
add
xlat
pop
call
loope
jae
sub
pop
or
dec
jmp
sub
or
andl
data16
mov
and
out
addr16
add
push
pop
ret
int3
push
ljmp
stos
mov
or
cmp
sbb
sbbb
repnz
pop
adc
jmp
mov
pop
push
out
adcb
mov
popf
mov
jl
adc
rcrl
stc
xchg
bound
dec
fists
sub
in
call
aaa
mov
insb
scas
mov
or
pop
test
stos
movsb
mov
pop
stos
test
std
xchg
pop
fistpll
jb
ja
arpl
push
push
nop
imul
lcall
cs
out
xchg
pop
sbb
pop
jns
movl
leave
dec
insl
fs
cld
divl
cmp
shr
shl
push
sub
out
lret
imul
sub
cmp
mov
je
inc
int3
mov
ljmp
sub
xor
loopne
push
jmp
dec
or
xor
mov
fs
loope
scas
mov
dec
xchg
shrb
push
dec
sahf
aaa
bound
push
loopne
cs
iret
mov
xor
push
push
jmp
neg
stos
xorl
xor
test
push
test
inc
jno
pop
jle
imul
jo
pop
ficompl
pop
mulb
daa
and
jbe
sub
out
jp
insl
insb
shrb
ja
inc
cwtl
ss
dec
notl
inc
stc
bound
lahf
outsl
mov
mov
je
pop
sbb
jae
push
dec
sbbl
or
xchg
sub
dec
xchg
hlt
xor
stos
cmp
and
les
lret
dec
clc
add
dec
cltd
or
cmp
movsl
lods
fisubrs
addb
cwtl
popf
icebp
test
rcll
xor
int3
int
sbb
enter
fdivp
in
sub
int3
inc
dec
xor
inc
jns
mov
push
push
sub
mov
enter
lods
shl
push
je
aad
insb
sti
ja
test
add
jge
std
mov
push
mov
les
jl
cmpsb
outsl
mov
gs
lcall
jecxz
shlb
dec
sbbb
clc
mov
sbb
fucomi
scas
les
jmp
xor
aas
jbe
xor
out
fstp
loop
in
iret
xchg
imul
stos
mov
or
aas
xchg
clc
jno
gs
je,pn
lock
sub
jmp
mov
out
mov
jb
mov
sub
mov
mov
jge
cmpsb
xchg
pop
lock
psrlq
mov
lcall
cwtl
or
andb
cld
push
aam
pop
mov
outsb
add
mov
movsb
out
cmp
xor
sarl
cmp
inc
push
in
add
ja
cmp
xchg
jae
js
mov
shr
test
inc
nop
ljmp
jecxz
mov
or
or
cmpsb
xchg
and
and
jne
cmpsl
xor
sub
mov
arpl
testl
inc
mov
and
inc
nop
and
dec
stos
mov
popf
lock
bound
decl
push
fwait
and
jo
out
cld
jno
out
jns
jne
xchg
pop
cmp
cmp
pusha
or
xchg
loop
popf
push
xlat
shl
xchg
xor
inc
pop
out
mov
mov
loop
cs
mov
in
mov
mov
lock
xchg
shl
hlt
mov
add
cmp
loop
es
lods
sub
mov
aaa
lock
imul
dec
lods
mov
dec
sti
mov
scas
dec
mov
popa
xchg
loop
sub
pop
push
mov
inc
jne
daa
loopne
xor
cmpsl
xchg
std
and
push
les
aad
leave
sarl
sub
push
fnstsw
pop
xor
dec
cmpl
jle
ljmp
loopne
daa
sbb
inc
sub
scas
cwtl
adc
scas
int3
add
push
pop
das
sub
push
imul
or
add
dec
jmp
or
fsub
scas
stos
adc
call
lea
mov
mull
mov
mov
test
push
lea
rcll
mov
mov
jge
decl
repnz
rclb
or
or
mov
dec
lret
sti
jmp
and
fidivrl
loope
scas
ret
sub
sub
jne
lahf
into
fldl
sbb
add
fldcw
pop
push
repz
add
xchg
mov
ret
mov
jae,pt
movsl
xchg
sbb
loope
xchg
push
mov
pop
and
add
ret
push
lods
dec
pop
out
and
scas
mov
sbb
add
cltd
jnp
ficompl
lcall
lods
in
jne
loope
outsl
push
int
lods
or
lock
jb
pushl
cwtl
sti
outsl
add
jne
cmpsl
std
adc
sti
loop
int3
pop
and
insb
jns
fstl
jne
jl
imul
loope
dec
sbb
pop
jb
mov
movsb
push
sbb
pop
xchg
lcall
stos
fdivrs
lods
les
mov
les
xchg
and
sub
pop
and
and
xchg
and
inc
fmull
push
mov
mov
rcll
xchg
lcall
dec
mov
pop
test
jl
in
movsb
xorb
inc
loop
loopne
push
aas
jns
dec
aad
ja
push
lea
inc
jl
das
roll
mov
das
fcomps
mov
push
test
out
xor
sbb
jo
pop
mov
in
call
adc
and
cld
loopne
enter
stos
mov
repz
repz
loop
inc
test
mov
ja
stc
or
jne
lahf
lahf
push
out
add
daa
sub
cmp
fnstsw
out
dec
mov
pop
inc
test
inc
ja
idivl
fwait
dec
pop
scas
xor
jne
xor
add
xchg
scas
inc
jp
sub
adc
insb
sub
adc
cmp
jne
mov
push
sub
lea
mov
call
mov
test
call
loop
popa
mov
out
mov
out
dec
mov
dec
and
push
or
lret
jg
or
out
lret
ja
js
and
mov
sub
lret
cwtl
sub
mov
stc
sub
jb
xlat
outsl
pusha
mov
loop
js
push
aad
mov
jae
mov
push
jo
das
mov
dec
insl
inc
xchg
add
mov
ret
push
jb
xor
into
mov
repz
mov
daa
testb
outsb
icebp
insl
mov
out
dec
ljmp
mov
xor
in
xor
cltd
ret
ror
add
sti
push
call
xchg
in
and
fs
test
lds
sub
xchg
push
data16
into
fldl
cmp
rorl
cwtl
pop
sub
inc
in
xlat
mov
jg
sub
cmp
sarb
pop
stc
arpl
inc
fldcw
ret
flds
adc
rolb
data16
push
iret
mov
or
scas
movsbl
fisttps
std
repz
out
adc
mov
and
and
push
lret
sub
stc
or
xorl
stos
insb
mov
jo
lods
mov
sbb
mov
adc
add
and
adc
sub
sbb
dec
mov
and
mov
adc
jmp
mov
mov
lret
lcall
and
inc
out
daa
inc
mov
test
mov
push
cmp
clc
sti
add
sub
incb
mov
inc
sar
cmp
sbb
or
stos
out
in
xchg
adc
mov
push
mov
xchg
sbb
push
push
inc
leave
cmc
pop
jecxz
push
xor
sbbb
jnp
jp,pn
mov
aad
out
mov
mov
mov
sub
mov
imul
fs
ds
xchg
cwtl
lahf
pop
fcompl
pop
dec
outsl
jle
or
test
fbld
imull
jp
das
sub
lret
mov
ljmp
popa
repz
popf
cmpsl
sbb
jge
sbb
or
dec
xor
cmc
popa
and
dec
aas
dec
xchg
movb
rep
inc
xor
sbb
mov
pop
aam
lea
mov
cmp
dec
dec
rclb
add
js
fldt
pop
dec
push
adc
mov
jo
stos
ror
inc
in
leave
outsl
xchg
mov
mov
scas
cmp
fwait
pop
mov
arpl
push
mov
dec
inc
mov
sub
lret
imul
rcll
shll
rorb
jge
add
jg
sbb
adc
lcall
mov
dec
negb
scas
rsm
sbbb
pop
lods
sbb
mov
xlat
push
pop
add
xchg
push
cs
push
in
pop
mov
xor
scas
fdivl
lcall
xchg
aaa
dec
fsubp
jbe
sbb
sbb
pop
cmp
out
push
jbe
mov
repz
aaa
shll
adc
pop
clc
aad
or
xchg
nop
xor
sub
mull
jo
clc
js
arpl
fwait
jg
fucom
in
jo
dec
fidivrs
and
sub
and
add
repnz
in
fildl
int
gs
sbb
add
call
mov
test
mov
dec
xchg
ljmp
push
lahf
aad
enter
dec
mov
xchg
push
scas
lock
sub
mov
test
scas
push
lds
mov
aaa
aaa
sti
loope
mov
cli
rorl
les
jmp
dec
add
mov
sarl
sub
repnz
jne
dec
stc
sbb
xchg
insb
mov
sbb
ret
shr
cli
inc
shll
sub
push
mov
add
testb
pop
xor
mov
sub
push
repz
dec
mov
icebp
fbld
fs
test
cmp
ja
jmp
repz
gs
jmp
mov
inc
fwait
jg
push
stos
or
pop
add
fsubrp
mov
loope
mov
xchg
or
mov
insb
mov
lds
xor
std
data16
mov
testl
jle
fwait
inc
nop
jmp
mov
clc
sbb
leave
push
add
mov
test
xchg
cmc
in
lods
cmpsl
insl
xorl
loop
jmp
fnstsw
call
shrb
es
jp
insb
mov
sti
push
mov
cmpsl
push
push
mov
aam
and
mov
jg
fdivrs
mov
sbb
stc
fsubrs
push
push
push
push
xchg
push
js
pop
cpuid
sahf
icebp
dec
aam
fs
pop
sbbb
pop
dec
aas
or
xchg
out
loop
sahf
push
dec
cmc
xchg
and
arpl
push
andl
jl
and
pop
punpckhdq
sbb
mov
sbb
bound
add
xor
dec
and
sbb
pop
mov
push
mov
or
push
sbb
call
fs
xor
scas
pop
adc
in
inc
jmp
adc
pushf
and
xchg
ret
scas
dec
rcll
loope
sti
xchg
popa
xchg
addb
mov
mov
subb
push
pusha
sbb
mov
mov
add
fimuls
push
inc
test
dec
push
outsb
inc
push
adc
rcl
cmovo
insb
jl
stos
inc
fstl
cltd
fnstenv
in
ficoml
mov
dec
or
cmp
mov
or
cmp
add
mov
push
push
lds
mov
cmp
xlat
xchg
lret
xor
push
fistpl
jne
inc
jle
and
je
cmpl
cmp
pop
mov
pop
les
push
sub
push
mov
push
repnz
arpl
sbb
jo
test
add
mov
xor
mov
into
xchg
outsl
fdivl
test
mov
adc
fucomi
mov
adc
xchg
das
cmp
fst
nop
ret
push
sbb
xchg
lcall
aas
push
fwait
es
ss
mov
ficoms
sbb
add
inc
xor
and
dec
ja
sbb
inc
jno
das
add
int
mov
sbb
xchg
jmp
stc
and
outsb
push
repnz
xchg
jl
mov
testb
mov
jne
mov
loop
test
movsl
call
shrl
dec
add
int3
outsb
inc
mov
sbb
inc
xor
test
jns
jbe
pop
xor
pop
sub
das
pushf
jle
mov
lret
jmp
xchg
repnz
dec
jg
test
stc
sub
lods
fnsave
cltd
mov
push
push
in
jmp
pop
aaa
xor
push
test
adc
fistps
ds
dec
cwtl
gs
pop
leave
mov
jecxz
push
lock
lods
mov
pop
jmp
cltd
mov
pop
xlat
dec
jge
inc
movsl
pop
sub
sub
jnp
iret
pop
cltd
outsl
ficompl
leave
inc
inc
dec
pop
add
adc
ss
inc
xchg
std
xor
cmp
push
lods
stc
out
xchg
xor
mov
add
shlb
xor
mov
in
xor
rcr
sbb
jbe
lods
and
test
push
rclb
and
inc
ss
push
and
subl
int3
mov
lcall
sbb
xor
test
clc
in
mov
push
and
imul
cwtl
or
sbbl
je
jp
adc
xor
mov
je
mov
orb
call
xlat
jno
cwtl
fisubs
aad
jne
cmp
jecxz
inc
icebp
and
xchg
mov
and
out
fs
mov
xchg
popf
jns
insl
out
jle
dec
stc
pop
mov
mov
and
les
inc
je
cmpsb
shlb
sbb
push
cmp
cmp
cmp
lock
pop
sub
pop
loope
adc
movsl
cmp
ljmp
sbb
in
jne
lods
cmp
ret
shll
stc
rcrl
sahf
push
cmp
sti
mov
loop
cmp
jnp
xor
and
xchg
mov
dec
adc
shl
dec
test
push
aas
sbb
rcll
test
test
lahf
inc
mov
cltd
xchg
add
and
cmp
std
ret
cltd
cmp
jb
test
movsb
jnp
or
and
das
or
outsb
or
push
mov
gs
leave
cmp
gs
sub
das
pusha
test
xor
test
mov
fnstcw
add
es
aas
decb
into
mov
cs
mov
mov
cs
icebp
notb
cmc
push
mov
push
xchg
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
notl
or
.byte
push
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
ret
push
jg
and
out
mov
pop
hlt
mov
xor
mov
and
mov
out
mov
out
cmpsl
es
cmpl
and
mov
out
mov
push
and
mov
out
mov
jmp
jmp
jmp
call
stos
into
add
popa
jl
add
inc
inc
hlt
jecxz
mov
inc
dec
pop
cmp
mov
in
pop
popa
mov
cmpsl
push
es
jb
xchg
imul
jae
mov
pusha
jbe
pop
sbb
push
mov
rcl
mov
out
push
jl
cmpsb
mov
popf
icebp
cmp
nop
xor
inc
out
xchg
lea
popf
loop
dec
sbb
cmp
stos
js
out
loop
mov
cmpb
xor
add
out
test
mov
fwait
inc
out
and
ja
fwait
cmp
pusha
loop
mov
push
or
cmp
pop
adc
push
int
lahf
mov
lret
lock
push
jecxz
idivb
in
mov
fcoms
push
xchg
lods
lods
sub
mov
xor
loope
loopne
int
push
jmp
and
inc
leave
mov
mov
arpl
cmp
dec
mov
pop
xchg
jp
cld
or
mov
jae
add
push
xor
dec
pop
sbb
into
or
mov
push
ljmp
ds
jle
clc
xchg
adc
jne
mov
jns
push
jo
xor
dec
dec
fadds
shlb
and
or
aas
test
cmp
gs
test
iret
adc
sub
fwait
cmp
pop
das
dec
jno
rorl
lea
add
mov
mov
stos
push
xchg
stc
fucomp
aas
aaa
sub
sahf
jne
mov
lea
push
lods
mov
fst
cs
push
je
push
mov
add
dec
in
shrl
pop
cltd
int
push
lahf
sbb
lret
lods
aad
dec
adc
es
mov
roll
aaa
xor
adc
sub
fsubrl
ret
or
mulb
xor
and
lret
adc
add
pop
jmp
sub
xor
sahf
gs
divl
or
in
add
lret
add
jge
cmpsb
lods
test
adc
jecxz
les
sbb
out
aad
mov
or
add
int3
mov
cmpsl
mov
add
outsb
lcall
in
adc
bound
outsl
cmp
cltd
ret
mov
mov
rcll
xor
mov
jecxz
or
adc
ss
and
mov
push
shll
add
cmp
adc
sbb
aaa
lahf
cmpsl
mov
mov
add
mov
fbld
sbb
sbbl
jb
mov
inc
arpl
sti
loop
pop
pop
xchg
mov
popf
add
mov
fwait
out
push
cmp
fs
xor
push
pop
cmpsl
xor
mov
popa
ss
adcb
cltd
fisttpl
sbb
or
xchg
sbb
mov
int3
mov
imul
inc
sub
stc
jnp
test
sub
cld
sbb
test
xchg
push
out
push
xor
fldcw
or
xlat
cmc
push
sub
cmc
mov
fucomip
xchg
testb
pop
cmp
mov
jae
sub
rclb
enter
dec
inc
cltd
movsb
sbb
jg
and
inc
inc
xor
inc
mov
or
sub
xor
loope
popf
int3
xor
out
inc
and
outsb
jbe
xchg
pusha
and
mov
outsb
daa
jae
mov
into
test
mov
or
pop
subb
lret
cmc
mov
outsl
loopne
cmpb
mov
add
stc
repz
jno
in
add
dec
xchg
xor
add
loopne
mov
pop
sbb
push
push
xchg
insl
les
add
int
gs
adc
push
cmc
mov
jmp
sub
xchg
xlat
mov
or
out
push
sub
daa
xlat
cld
mov
and
sub
jecxz
mov
aam
dec
and
cmc
sbb
inc
push
lea
adc
xchg
sbb
adc
push
or
rcrb
dec
dec
pop
add
adc
lcall
pop
mov
xchg
pop
and
and
fdecstp
imul
xor
jp
stc
std
sub
cmp
stc
mov
lds
push
jbe
out
add
adc
mov
insb
adc
in
divb
test
jnp
fdivrs
mov
idivl
cmc
hlt
pop
arpl
test
sahf
or
jae
sbb
fidivs
sub
outsl
dec
sbb
stos
popa
dec
aas
cmp
outsl
ds
mov
pop
test
cmpl
rorl
sbb
add
jmp
fmuls
and
ds
loope
xor
into
jne
mov
pop
xchg
mov
jmp
dec
in
jns
je
mov
aas
popa
shld
scas
xor
fbld
mov
fwait
notl
add
inc
inc
je
fisttpl
outsb
jecxz
sub
push
pop
sub
stos
jp
lret
or
rcrl
test
mov
xchg
pop
dec
into
add
insl
ret
jg
es
movsl
clc
jne
in
mov
ja
push
sbb
aaa
mov
testl
mov
jmp
and
mov
inc
add
shrb
mov
sbb
mov
popf
pop
in
frstor
adc
testb
outsl
and
dec
xor
mov
push
and
jge
dec
ret
or
insl
sbb
and
out
data16
fimuls
sti
int3
xor
mov
adc
mov
int3
fildl
insl
push
fcmovbe
mov
fiaddl
inc
inc
xchg
aaa
sub
xchg
ds
loopne
out
add
ficoms
dec
loop
jg
shrb
jmp
jns
and
enter
ret
and
mov
insl
dec
push
lret
fnsave
in
jle
jo
lds
push
mov
push
cmp
imul
ljmp
icebp
dec
ret
lea
ds
mov
loope
insl
jae
xchg
xor
lods
xchg
subl
dec
mov
mov
cwtl
xchg
xor
add
fsubrs
sub
repnz
mov
jge
xchg
nop
mov
mov
roll
add
cmpsl
test
sbbb
hlt
pop
das
mov
adc
xor
mov
scas
outsl
and
out
xchg
fidivs
lcall
or
ja
push
test
add
scas
push
add
push
adc
aad
mov
push
popf
cmp
imul
xchg
mov
inc
popf
cmpsl
std
xor
lret
xlat
mov
add
mov
sub
rcr
push
ljmp
xor
fwait
sub
sarl
ljmp
dec
iret
nop
std
push
loope
clc
and
jl
mov
jp
aaa
roll
fwait
in
sub
in
add
xchg
xor
cmc
les
add
lret
sbb
pop
or
sbb
ret
add
mov
dec
jae
nop
cltd
jle
out
mov
mov
jp
pop
jge
lds
test
pop
jg
add
jecxz
and
pop
fdivrl
or
pop
divl
cmpsb
mov
out
aam
pop
xchg
jns
fnsave
xchg
jnp
xchg
add
or
mov
pop
push
mov
clc
iret
mov
and
cmp
sbbb
xlat
andb
xchg
test
adc
int3
sbb
loop
push
mov
insb
adc
sbbl
cltd
test
aam
push
cmp
pop
jl
pusha
add
inc
xchg
fstpl
loope
sbbb
test
sub
outsb
fists
popa
mov
and
and
mov
and
xor
xchg
cmpsb
mov
imul
aas
rcrb
sti
sub
dec
add
xchg
push
js
cmp
or
das
daa
mov
pusha
insb
stc
push
xor
and
int3
int3
mov
lds
imul
jae
pop
mov
leave
push
mov
push
push
add
mov
shlb
loopne
sbbl
lods
jae
jnp
cld
repnz
imul
repnz
negb
add
xor
popa
sub
popa
jge
out
dec
lret
out
push
test
cmp
and
mov
pop
loop
and
lcall
dec
xor
mov
testb
andl
inc
pop
scas
xor
mov
daa
and
int3
gs
mov
pusha
aad
sub
cwtl
pop
mov
scas
lret
jecxz
mov
xchg
lock
rorb
test
push
inc
cwtl
sub
adc
push
dec
mov
enter
lahf
pop
stc
rclb
jle
js
xchg
lds
int
clc
leave
ds
cmpsb
fdivs
adc
lcall
mov
sti
mov
xchg
inc
inc
out
or
ja
dec
jo
cld
mov
das
jns
mov
push
out
ret
sub
jg
jne
mov
fsubrs
cmp
test
mull
mov
add
xchg
rcl
and
xor
int
addb
in
mov
dec
dec
inc
leave
xchg
mov
mov
dec
mov
xchg
lea
xchg
nop
sbb
adc
popa
sahf
dec
jb
and
jg
add
rorb
xchg
xchg
mov
xchg
sub
clc
push
outsl
insl
jns
xchg
hlt
pop
call
jle
and
inc
into
jmp
shll
push
sub
scas
xchg
ljmp
ret
daa
nop
lahf
orb
ljmp
stc
data16
divl
int
jnp
test
out
popa
jae
cld
movsl
push
stc
das
mov
adc
mov
xor
mov
ss
push
mov
cld
sbb
and
out
dec
pop
out
mov
imul
mov
sbb
sbbl
xchg
lea
popa
push
xchg
sarl
ret
out
arpl
pop
scas
add
mov
lret
cld
lea
mov
and
mov
aam
mov
pop
cmc
push
loope
sub
mov
mov
data16
mov
or
jmp
xchg
cmp
jp
jno
mov
fnstsw
mov
mov
pop
inc
dec
leave
cmp
inc
sub
add
cmpb
cmpsl
pop
xor
jne
mov
mov
cli
fidivl
adc
aas
inc
out
sbb
mov
mov
sahf
sbb
dec
mov
adc
adc
push
ret
jmp
lock
pop
or
push
cmp
add
mov
and
sbb
push
pop
mov
cmp
pop
and
pusha
lcall
sbb
test
jle
loop
mov
jge
pop
ss
and
fbld
cmp
lret
insb
jnp
rep
adc
in
fisubs
mov
in
nop
cld
xor
cmp
cmp
mov
rorl
mov
sbb
out
aaa
ss
push
dec
inc
mov
sbbl
sbb
movsl
mov
imul
out
mov
push
or
vpcmpgtw
jns
pop
or
mov
scas
mov
dec
adc
fld
ss
pop
mov
sub
rorb
pop
sarl
lahf
insl
xlat
repz
jmp
push
fdiv
lret
scas
jg
sbb
jmp
bound
mov
xor
mov
loope
pop
xchg
in
cmpsb
mov
push
enter
xchg
outsb
cld
jb
xchg
xor
xlat
adc
aas
push
push
sti
andb
pop
pop
pop
enter
mov
add
dec
adcl
ficompl
lock
pop
scas
sbb
ds
push
in
adc
fdivr
outsl
inc
sahf
sub
imul
imul
dec
sub
jbe
ljmp
push
mov
test
fcoml
cmpsb
sbb
jnp
push
insb
pop
mov
sub
out
sahf
push
subl
cmp
jbe
mov
sub
jecxz
jns
add
push
fisttps
xchg
movsl
negb
xor
sub
into
nop
adc
push
inc
dec
push
stos
mov
lock
loopne
outsb
sahf
pop
sub
mov
lcall
push
jg
jge
pop
push
jmp
adc
sbb
mov
fidivl
lds
push
ret
mov
lds
push
mov
lds
shll
xlat
inc
push
cmp
ret
sub
cli
mov
mov
out
repnz
mov
add
add
fisubl
loope
dec
out
inc
jo
xor
sub
clc
xchg
je
aaa
loop
popf
push
sbb
incl
push
sub
gs
imul
inc
sbbl
daa
mov
addr16
sub
mov
jbe
jp
mov
adc
push
sub
add
scas
faddl
and
push
pop
mov
rcll
push
xor
cmp
dec
mov
pop
mov
add
jp
cmp
mov
and
jmp
mov
jnp
or
push
aam
dec
sahf
test
or
fists
pop
and
inc
ret
lcall
cmp
shll
bound
mov
out
imul
mov
xor
push
cmp
sub
adc
pop
loope
enter
movsb
pop
test
fcoms
push
sbb
inc
xchg
push
hlt
cld
inc
push
cmp
mov
dec
push
mov
cwtl
and
inc
ljmp
cli
lock
fdivs
inc
fst
ret
mov
repz
push
enter
sbb
sbb
inc
xchg
push
insb
pusha
icebp
mov
aam
xchg
cld
xchg
mov
mov
and
pop
inc
stos
and
repnz
leave
pop
push
cli
dec
xor
pop
and
enter
jg
and
stos
push
test
jns
and
jp
jge
into
sbb
add
shr
je
add
lahf
std
and
ret
or
sub
dec
test
xchg
push
sbb
jge
clc
data16
gs
mov
inc
pop
repz
push
fsubr
lea
jnp
pop
pop
mov
lock
addr16
pop
mov
sbb
fistl
xlat
push
enter
into
add
dec
int3
jae
js
adc
fs
lea
mov
xchg
sub
insl
ljmp
mov
push
or
ret
pop
push
outsb
aas
xlat
fdivrs
mov
jle
enter
xlat
push
in
in
aad
es
xchg
xor
mov
cmp
loope
jecxz
xchg
push
cltd
dec
pop
out
jg
fs
out
push
or
out
out
push
xor
sub
mov
outsb
lds
lahf
dec
jno
sbb
cmpb
jnp
and
out
fs
xlat
loope
xlat
push
in
dec
dec
jno
pop
push
dec
das
mov
hlt
test
out
ss
mov
mov
lods
inc
jbe
dec
cltd
rclb
dec
sub
inc
push
popa
mov
mov
sub
fstpl
bound
test
mov
pop
nop
inc
sub
mov
sub
call
aaa
dec
cmp
pop
or
add
in
mov
and
test
sub
mov
lcall
or
inc
mov
inc
mov
push
pop
jb
andb
add
test
repnz
mov
cmp
push
daa
sub
call
repz
out
jo
or
mov
add
je
inc
jg
mov
lock
jle
push
ret
rcll
lods
nop
out
jecxz
es
xor
sub
mov
xor
jbe
mov
sub
movsb
mov
mov
test
stos
arpl
jns
xchg
lret
jb
jmp
loop
call
and
scas
and
int
inc
in
cmp
and
movl
mov
mov
frstor
pop
mov
inc
pop
push
ds
cmp
daa
jbe
dec
cwtl
ficomps
out
xor
stos
cld
js
rcrl
shlb
cwtl
push
push
aam
std
mov
stos
or
shll
jecxz
add
iret
xchg
fucomi
sti
push
ds
icebp
mov
loopne
aad
or
inc
cmp
mov
int3
aam
adc
mov
push
pop
push
mov
and
or
movsl
pop
call
shll
nop
mov
nop
mov
fldt
inc
js
addl
sbb
lds
mov
push
loop
out
fisubs
insb
hlt
jo
push
cmp
or
loope
out
mov
les
js
inc
or
loope
dec
gs
adc
push
cmpsl
mul
imul
cmc
mov
je
andb
jbe
imul
test
cld
or
xchg
stos
mov
sar
fldt
jl
hlt
mov
add
add
mov
push
cmc
lea
mov
loope
cmpsb
sbb
pop
rolb
ret
lds
ljmp
ds
stos
sbb
pusha
hlt
jbe
in
scas
mov
pop
and
and
adc
lret
ds
daa
lret
lods
outsb
and
push
inc
pushf
out
repnz
jnp
xor
int3
sbb
or
mov
fimuls
out
xor
adcl
adc
lret
jl
cmpsb
mov
imul
daa
add
pop
jbe
aas
in
jg
adc
cli
cmp
hlt
mov
sub
push
xchg
fcmove
inc
popa
mov
cmc
leave
or
mov
xor
cmpsb
lock
fnstcw
mov
daa
sar
ljmp
out
jo
dec
xchg
adc
mov
lods
lcall
int3
loope
push
jbe
and
leave
mov
imul
mov
inc
xor
and
vmread
dec
dec
add
sub
or
cltd
inc
les
sbb
adc
rorl
mov
clc
dec
pop
pop
div
in
xchg
jnp
sti
adc
hlt
push
lret
add
cmp
call
fwait
sbb
mov
jne
lret
jnp
iret
sub
test
sub
arpl
aam
sahf
sahf
xchg
add
pop
call
in
popf
js
mov
sbbl
jae
je
inc
dec
dec
clc
inc
int3
adc
insl
ss
stc
mov
out
mov
leave
jecxz
mov
in
aas
aad
call
jnp
push
push
push
xor
sti
push
cltd
lock
and
shll
mov
fcmovu
pop
lods
dec
data16
hlt
clc
jg
outsl
xchg
sub
out
fsts
xor
inc
mov
push
mov
sub
ja
out
jbe
mov
push
sub
hlt
ficomps
or
iretw
arpl
imul
xchg
outsb
lcall
jl
mov
repz
lret
jo
fnstcw
ja
xchg
fimuls
andb
mov
aam
cmp
dec
ja
inc
std
fmull
test
les
outsl
ljmp
mov
pop
dec
dec
sbb
std
lcall
mov
subb
push
cmpsl
xor
out
ret
jecxz
sub
mov
mov
or
push
subl
push
dec
jb
pop
and
sbb
aad
mov
psubsb
mov
popf
xor
sbb
mov
fs
jg
add
mov
pusha
call
xor
xchg
lret
sub
loop
xor
add
pop
pop
cld
lods
movb
cmpsb
lds
add
push
xor
jecxz
scas
xchg
jmp
fstpl
pop
or
iret
mov
push
mov
cmp
and
cmpsb
int3
mov
jmp
subb
notb
aad
jmp
add
and
scas
inc
dec
fs
into
jp
shrl
pop
adc
inc
cmp
fcmovu
inc
leave
adc
cld
inc
pop
fcoml
andl
cmp
stos
mov
out
cmp
icebp
mov
nop
jle
lock
mov
mov
adc
in
adc
mov
and
cs
repnz
out
popa
mov
pop
cltd
fisttpl
pop
out
xor
nop
xor
mov
push
test
cmp
jge
sub
push
inc
pusha
test
xchg
push
mov
mov
fs
sahf
andl
loope
nop
mov
icebp
sub
jmp
sti
test
je
rclb
xchg
dec
int
out
mov
sub
mov
cmpsl
mov
sahf
sahf
mov
xchg
xchg
clc
mov
nop
js
leave
loop
in
jl
cmpsl
aas
ret
clc
leave
sub
lods
dec
bound
dec
fsubrs
je
bound
jl
cwtl
rcll
pop
or
sbb
push
add
pusha
dec
js
inc
aaa
es
je
mov
cmpsb
loop
lahf
sub
mov
lret
cmp
pop
into
icebp
lret
mov
stos
xchg
aaa
and
xlat
add
jl
xor
pop
jle
add
sub
inc
ljmp
std
cltd
das
lock
jp
xchg
stos
add
cwtl
dec
repnz
pop
lods
xor
cwtl
push
pop
lods
inc
clc
push
loop
aam
lds
inc
xchg
add
and
push
lds
repnz
jb
and
arpl
mov
jns
sbb
scas
pop
loop
sub
mul
aaa
lock
imull
jae
cld
add
xchg
scas
cmp
jge
subl
jno
pop
mov
sub
or
stos
mov
jb
dec
push
test
clc
mov
ja
lcall
cmp
inc
imul
out
and
xor
mov
push
mov
inc
xor
and
ret
push
sahf
fisubrl
jg
dec
xor
clc
lahf
mov
fidivs
fcoms
xchg
call
inc
iret
gs
jp
fnstenv
lret
sbb
cwtl
call
popf
or
dec
dec
subl
jmp
pop
repz
sub
je
push
pop
sub
movsb
pop
add
mov
std
and
gs
andb
push
mov
subl
lea
scas
push
mov
lods
mov
dec
pop
std
adcb
or
add
xor
mov
arpl
push
lret
notl
repz
xchg
pusha
jns
sub
frstor
jmp
pop
lds
mov
mov
push
adc
rcl
dec
inc
fs
jmp
adc
gs
mov
jg
cltd
cli
push
xchg
dec
les
ss
repz
fldcw
add
xlat
insl
leave
arpl
aaa
jne
xor
addr16
cltd
imul
mov
inc
dec
xor
mov
and
dec
aad
xor
shlb
das
pop
fs
outsb
out
mov
filds
fsubrs
push
lods
pushf
ret
push
xchg
roll
jae
mov
les
and
sbb
and
xor
int
push
cmp
push
cmp
xlat
repnz
lea
and
or
sub
jns
xor
lds
push
in
movsb
jne
xchg
xchg
repz
xchg
mov
inc
stc
ljmp
cltd
add
stos
cltd
inc
aaa
out
imul
int3
jnp
fwait
inc
mov
and
sbb
pop
add
mov
and
pushf
sub
leave
fwait
mov
scas
adc
xor
sahf
lods
mov
or
pushf
lock
mov
pop
xor
scas
sbb
mov
ficoml
pop
test
icebp
int
cmp
jbe
or
pusha
pushl
adc
jns
mov
lret
movsb
xchg
in
sub
mov
jae
cld
ss
int
popf
inc
iret
jae
push
sub
or
xlat
arpl
fcom
je
jge
fistl
lret
add
ds
and
scas
fndisi(8087
xor
mov
hlt
and
mov
inc
sbb
pop
in
mov
repnz
add
imul
data16
sbb
jge
or
or
or
in
xor
ljmp
jae
or
xor
mov
cmp
sub
xchg
or
push
or
fisttpl
and
nop
xchg
jmp
ljmp
or
imulb
bnd
js
xor
and
ja
sub
push
and
shl
cmp
mov
and
insb
mov
insb
push
cmpsl
arpl
fnstenv
mov
inc
leave
int3
mov
sub
roll
cs
pop
add
arpl
testb
inc
outsb
fdivs
stos
pop
scas
negl
mov
or
lcall
fs
bound
add
jns
fnsave
sbb
insl
popf
sbb
push
mov
sbb
jae
les
ja
jno
aas
aas
mov
lea
mov
pushf
out
jns
push
fwait
popa
dec
mov
mov
mov
mov
mov
mov
into
push
aam
pop
daa
add
pop
test
test
popa
mov
push
xchg
jns
in
mov
rcl
fdivrs
push
lock
and
jecxz
pop
test
inc
scas
jnp
add
out
test
bound
mov
mov
add
out
imul
xchg
daa
xchg
sbb
mov
into
pop
mov
pop
cltd
jmp
hlt
xchg
sub
cmp
xchg
xor
jns
pop
pop
pop
mov
mov
jno
fdiv
xor
sbb
out
addr16
or
xchg
ret
ss
pop
test
cmpsl
orb
adc
xor
mov
push
fs
sub
inc
sbb
xor
push
push
loop
mov
sbb
dec
and
cld
addr16
fists
adc
scas
xor
cli
mov
test
aad
ret
jmp
push
cmp
rcrl
jecxz
in
subb
das
mov
shl
mov
ja
repz
mov
pop
aaa
fcoml
imul
and
shlb
arpl
mov
daa
adcb
push
dec
bound
shr
ss
xor
aam
xor
loope
inc
int3
pop
inc
decb
adc
mov
pop
sub
xor
div
cmp
lods
scas
inc
aas
dec
xor
in
das
mov
pushf
pop
and
dec
dec
repz
repnz
cmpsb
in
xor
or
pop
mov
mov
xchg
leave
inc
test
incl
sbb
mov
int
out
loop
jl
ret
push
fldt
movsbl
sub
mov
push
sbb
fsubrs
jmp
aam
cmp
xlat
aas
mov
xor
int
cmc
push
icebp
popa
push
cmp
test
cld
loope
fildl
jbe
stc
and
dec
add
ljmp
cmp
or
cmp
iret
add
cmp
sbb
inc
add
shrb
xchg
cmp
into
aaa
int
in
fld
pop
jg
cmpsl
popf
and
add
mov
cmp
jmp
fists
or
push
sti
adc
aam
test
mov
mov
or
push
movsl
fldt
cmpsl
testl
sbb
lret
je
xor
jne
and
push
push
cmp
dec
pusha
aad
adc
insl
stos
adc
icebp
xchg
dec
ss
mov
mov
xchg
inc
add
fdivrl
outsl
push
mov
loope
mov
jbe
ret
jae
dec
mov
sbb
sahf
and
xor
jl
dec
pop
mov
dec
icebp
jae
pop
pop
dec
sysret
mov
inc
jmp
jb
test
adc
in
xchg
or
enter
ret
das
jo
cmp
push
scas
mov
xor
lret
iret
jg
pop
imul
loop
and
popa
or
popa
arpl
cld
insl
mov
mov
scas
mov
ds
aam
or
div
and
fs
pop
adc
daa
or
lds
mov
mov
aaa
fmuls
xlat
mov
data16
cmp
repnz
mov
fstpl
test
xchg
xlat
std
or
cld
cmpsl
jne
xor
jmp
cwtl
jp
cmp
sbb
fs
dec
dec
cmp
push
nop
stc
sub
les
fwait
push
mov
or
xor
lods
bound
movsb
lcall
pop
fdivrl
repnz
add
jbe
mov
test
lret
mov
xor
pop
test
push
jmp
mull
popf
push
shlb
jnp
sbb
and
pop
jnp
pop
ljmp
jmp
js
test
xchg
fs
add
leave
cmpl
mov
pop
inc
fs
inc
push
inc
sbb
jns
imul
rorl
cli
cmpsl
pop
cmp
cld
inc
sbb
movsb
imul
dec
jecxz
mov
cvtps2pi
cmp
mov
stc
adc
adc
mov
popa
fadd
aaa
push
and
leave
rcrb
mov
inc
xlat
mov
shrb
push
jno
inc
xor
xor
pop
lret
jo
or
daa
push
aas
pop
sub
sti
lods
mov
int
pop
mov
adc
sbb
adc
cmp
push
cmp
sarb
push
add
sbb
inc
lcall
xor
xchg
push
xlat
pop
enter
pop
jl
cmpsl
push
pop
xor
sub
mov
lahf
imul
icebp
sahf
jp
icebp
cld
outsl
sbb
pop
popa
jns
or
cwtl
jno
xor
fisubs
push
jge
mov
sbb
popf
mov
lret
or
mull
hlt
not
out
dec
sbb
vunpckhps
dec
in
rclb
notb
call
dec
push
jae
xchg
popa
sbb
enter
popa
mov
hlt
cmp
dec
mov
lahf
pop
hlt
fistps
mov
popf
mov
inc
faddp
and
fcomps
cmpsb
push
mov
sub
adc
dec
lods
mov
cld
and
sub
lret
sbb
xor
mov
testl
imul
test
shrl
xchg
icebp
fldenv
sub
fsubp
xor
xor
jb
xor
sub
fldt
aam
cld
stc
dec
rolb
mov
pop
repz
lret
es
pop
cwtl
mov
stos
xchg
add
mov
cli
outsb
sbb
mov
cmc
xor
outsb
xchg
and
or
mov
test
rorl
fstp
mov
jge
ds
in
outsl
mov
js
stos
sub
shr
mov
push
xor
xor
addr16
mov
in
xorb
jg
movsb
lahf
jecxz,pn
mov
jge
xor
in
push
adc
push
out
sbb
cmp
ret
add
divl
dec
jecxz
jmp
xlat
pop
jp
movsb
xchg
push
ljmp
addb
cld
xor
scas
jne
pop
enter
cmp
movsl
movsb
xor
sbb
sub
jo
jl
sbb
lret
jo
sub
cmp
gs
fidivrl
push
and
and
xor
sub
ret
pop
or
fwait
subl
movsb
inc
fstpl
xchg
fdivl
fsubr
adc
push
jmp
das
adc
xchg
std
testl
xchg
lea
push
mov
cmp
sbb
loope
or
push
inc
add
inc
cwtl
enter
inc
pop
pop
inc
call
jno
out
cmp
repz
dec
xchg
imul
lods
sti
jo
mov
jecxz
adc
lcall
sbb
xchg
rcrb
out
fnsave
inc
pop
add
mov
inc
outsl
xor
nop
arpl
scas
es
in
mov
sub
dec
xor
hlt
iret
popf
sub
mov
int
and
jae
mov
mov
and
push
add
sarb
out
in
pop
xlat
inc
rcrl
sub
stc
popa
rclb
dec
or
push
outsl
or
lahf
fbstp
aas
dec
fsubrs
cli
mov
adc
adc
fistpll
mov
xchg
rcrb
jl
push
pushf
mov
out
sub
fidivrl
pop
xor
dec
outsl
and
lea
rorl
dec
movsl
stc
push
in
mov
cmp
in
cmp
loope
insb
sbb
fldenv
cltd
outsl
jmp
mov
or
lret
and
leave
test
xor
cmc
mov
sbb
mov
call
das
sub
push
hlt
lods
add
lcall
jle
sahf
sbb
mov
xchg
dec
inc
lods
mov
adc
or
das
fs
loope
mulb
in
push
ds
test
jecxz
inc
jno
fimull
scas
psrld
sbb
inc
push
mov
mov
mov
jp
or
in
push
cmp
xor
lock
lret
push
mov
sub
xchg
jbe
fyl2x
ja
in
clc
jmp
mov
fbstp
mov
xlat
cwtl
sub
ret
mov
adc
call
mov
jns
sub
mov
cld
int3
lahf
dec
loopne
pop
push
into
mov
int
repz
ret
pop
outsb
sub
aam
test
jns
cmp
pop
sahf
pop
jge
inc
das
inc
pop
sbb
adc
sub
xlat
shlb
xor
sub
or
pop
sarb
arpl
data16
sub
ret
xchg
jge
adc
jns
pcmpeqb
pop
sbb
fmul
sub
mov
push
add
mov
repnz
cmp
or
mov
mov
jae
or
add
cs
xchg
les
or
mov
jne
inc
sub
xor
xchg
jge
bound
movsl
push
mov
push
loop
pop
xchg
fdiv
repz
nop
adcb
lret
mov
outsb
ss
addr16
xchg
mov
xor
push
cmp
mov
es
mov
mov
mov
mov
mov
mov
jecxz
lods
xor
pushf
add
adc
sub
int3
out
jp
fnstenv
jmp
add
arpl
mov
mov
dec
nop
cmpsl
sbb
daa
jne
cmc
fistpll
mov
adc
call
mov
int
mov
pop
push
rcl
jecxz
sbb
arpl
pop
cli
add
or
add
xor
cwtl
leave
insb
and
jns
jbe
insb
cmpsb
adc
jb
addl
cmpsl
addr16
ret
jg
xchg
mov
push
push
lahf
jnp
pop
sbb
cltd
push
out
jo
test
cmpsl
mov
aas
push
xchg
and
pop
mov
dec
mov
jb
sub
inc
out
test
dec
adc
sbb
jnp
lods
lock
iret
add
mov
mov
adc
jmp
pusha
mov
push
jge
lds
xor
and
aam
mov
and
shr
sbb
jb
push
push
fimuls
or
mov
xlat
sub
cmpl
mov
jge
cld
js
pop
jb,pn
arpl
loopne
push
ror
pushf
test
pop
push
push
adc
nop
mov
pop
inc
adc
lret
mov
mov
arpl
inc
icebp
loope
sbb
push
loop
fistl
push
aam
jmp
cltd
cld
push
pop
mov
out
lods
jge
imul
test
aam
ljmp
cmp
loop
push
popf
insl
adc
or
jecxz
adc
inc
test
jg
test
cs
shlb
or
cltd
jg
push
jns
inc
mov
ja
ds
fldcw
sahf
pop
xchg
and
push
cli
mov
push
mov
xchg
in
ljmp
or
fcmovu
nop
pop
outsb
in
dec
fnsave
mov
sbb
loopne
inc
rorl
sbb
sbb
ret
js
adc
decb
mov
adc
mov
in
dec
iret
lods
push
les
sub
gs
mov
mov
xor
and
rorl
sub
cwtl
sahf
std
fimuls
mov
mov
fldenv
aad
shlb
sbb
frstor
push
roll
lock
inc
mov
lcall
adc
test
xchg
movsl
std
sbb
fisttpl
mov
mov
inc
repnz
test
xchg
enter
adc
sbb
jns
ljmp
addr16
dec
shlb
repnz
out
mov
xchg
ficomps
and
xchg
adc
push
popf
shlb
loop
jo
mov
mov
int3
out
jge
push
or
pop
mov
push
cmpsl
adc
jecxz
jns
xchg
popf
mov
call
mov
mov
stc
xor
stc
cmpsl
pushf
int3
cmp
lock
js
or
mov
in
inc
cltd
xchg
sbb
cmpsl
test
movsl
sub
mov
fmuls
scas
loopne
xor
pop
jp
out
lahf
shr
inc
loop
jg
cmp
test
mov
add
lret
out
jbe
jg
sub
mov
shll
adc
sbb
je
sbb
jecxz
mul
sub
push
lods
mov
jg
push
lea
jnp
mov
ljmp
ja
and
pop
jg
add
insl
sbb
adc
movsb
sub
xchg
das
shrl
jp
test
pushf
or
xor
mov
xchg
add
inc
mov
cmc
cwtl
ja
or
sub
mov
push
pop
mov
inc
push
sub
cmp
sub
lods
push
mov
push
les
out
cltd
sti
inc
adc
jae
movsb
ljmp
sbb
lret
cmpl
xor
dec
out
int3
stos
add
lcall
shll
dec
mov
inc
lea
lods
xor
mov
test
lahf
lock
mov
cmp
imul
push
jge
fnstcw
cmp
dec
jl
je
cmp
outsb
pop
and
cmp
mov
icebp
fadd
mov
inc
mov
sbb
and
adc
pop
cwtl
adc
sbb
sbb
mov
inc
push
dec
jbe
jae
mov
cwtl
add
jl
fcoml
xchg
cmp
or
xorl
frstor
sbb
adc
dec
pop
ljmp
sahf
inc
cli
les
pop
pop
or
fdivs
aaa
inc
xchg
fistpll
shrb
ljmp
int3
mov
pop
sub
data16
cwtl
adc
push
mov
push
sti
jne
and
jns
and
repnz
mov
lret
movsl
int3
js
jmp
push
lods
das
sbb
aaa
in
mov
add
fwait
scas
pop
lcall
push
test
xchg
xchg
push
mov
icebp
xor
movsl
push
lcall
jge
rolb
push
int3
lahf
inc
push
jg
cmpsb
fldt
fcomps
out
adc
add
mov
test
jns
sub
bound
xchg
std
mov
cmpsl
or
rclb
mov
shr
repnz
lock
xor
xor
jb
fcoml
mov
mov
inc
das
dec
mov
inc
int
and
inc
scas
sarl
icebp
int
repz
hlt
jecxz
call
inc
mov
dec
mov
fcompl
lock
cli
mov
bnd
outsb
add
add
lds
xchg
icebp
pop
pop
jle
and
add
addr16
dec
lock
mov
clc
js
or
lock
dec
sbb
inc
clc
jge
mov
jnp
fadds
shl
call
shrb
or
int3
outsl
stc
movsl
leave
pop
daa
pop
clc
mov
push
icebp
and
xor
dec
xchg
pmulhuw
push
std
xor
inc
ljmp
outsb
fsubs
stos
ficoms
mov
testl
pushf
cmp
data16
arpl
and
out
push
call
scas
nopl
sub
dec
xchg
cmpsb
outsl
dec
cmpsb
sbb
mov
mov
rorl
mov
popa
pop
jo
fwait
test
addl
pop
mov
aas
push
jbe
popa
fnstcw
xchg
test
adc
add
sub
faddl
stc
or
push
jmp
xor
sub
sahf
cmc
popf
hlt
mov
mov
imul
cmp
fwait
pop
test
in
inc
popa
shll
add
sbbb
push
rol
data16
sub
insb
ds
inc
xchg
ret
mov
daa
sbb
dec
roll
lret
sub
push
lret
sbb
mov
mov
ret
clc
shlb
cmp
cmc
push
pop
addr16
test
sub
test
aam
sarl
shr
ja
lret
pop
fwait
mov
jnp
jecxz
sbbb
insb
ds
inc
dec
insl
sub
ljmp
lock
lods
sarb
cmp
mov
push
test
sbb
xchg
ficoms
mov
lds
stc
das
cmp
in
push
jmp
add
out
xchg
and
rcll
adc
loope
or
out
dec
pop
or
jo
inc
dec
repz
ret
cmp
mov
xor
inc
repnz
inc
pushl
cltd
cmp
or
xchg
mov
jge
or
xchg
rcrl
sub
xor
pop
inc
ss
pop
mov
filds
outsb
mov
sti
pop
lods
lea
sub
imul
rorb
push
and
sub
mov
xchg
sti
hlt
lahf
inc
push
sub
mov
shl
and
mov
sub
repnz
test
lret
cld
xchg
sbb
inc
and
and
and
xor
aad
xchg
xor
pop
mov
mov
lret
les
jp
xor
xorb
xorb
pop
inc
push
cmp
es
ret
leave
mov
in
cmp
daa
inc
icebp
std
inc
jne
fnsave
pop
sar
idivb
test
mov
fyl2xp1
adc
sub
loop
xchg
push
out
out
sbb
pop
faddl
jnp
aam
gs
lods
call
push
sar
xchg
and
fwait
popa
lcall
aam
mov
cmp
data16
dec
icebp
rclb
popa
mov
gs
cmp
aaa
lcall
push
sub
sbbb
cmp
or
or
insb
sbb
fldl
add
pop
repnz
dec
mov
adc
lret
xchg
pusha
lret
mov
jno
sbb
mov
pop
pop
fwait
mov
insl
pop
mov
mov
sbb
enter
imul
ljmp
inc
insb
rolb
push
iret
lret
test
mov
inc
inc
cmp
mov
shll
jle
dec
dec
fwait
xchg
add
push
outsl
jl
push
scas
pop
icebp
dec
pop
mov
ret
and
jb
mov
sbb
xor
cmp
inc
movsb
mov
dec
loopne
test
jp
xor
adc
shlb
aas
mov
rcr
jo
clc
test
xchg
pop
sbb
pop
aas
dec
es
add
push
adc
mov
cmpsb
mov
mov
nop
mov
stos
push
rorl
in
ljmp
out
imul
mov
cmp
movsb
cmp
xor
pusha
or
mov
pop
mov
push
or
out
jl
mov
pop
repz
mov
mov
xor
int3
movsb
sbb
sub
cmp
xchg
mov
push
js
popf
xor
or
hlt
int3
dec
andl
and
scas
fbstp
in
iret
jl
mov
dec
mov
add
pop
xchg
lahf
jle
clc
ljmp
std
sub
add
xchg
std
stc
and
cld
xor
cmp
xchg
nop
imul
enter
in
and
xor
xor
enter
add
mov
mov
mov
mov
lods
popa
and
mov
test
rolb
das
out
cmp
jg
arpl
arpl
cmc
lahf
ds
xchg
jnp
inc
clc
pusha
shl
add
lock
in
arpl
push
sub
or
push
mov
sti
into
inc
das
fiadds
pop
enter
xchg
js
lret
cld
mov
hlt
push
dec
dec
ret
sbb
cli
orl
andl
mov
rolb
lods
icebp
mov
push
pop
or
pop
sbb
and
ljmp
fmuls
clc
testl
call
loop
sub
sbb
sarl
out
dec
mulb
fbld
mov
lret
lods
dec
pop
les
dec
sti
xor
jns
fisttpl
aas
add
pop
dec
push
iret
loop
xchg
xchg
mov
fiaddl
aad
aaa
inc
jge
xchg
or
fstpt
test
pop
mov
cmp
adc
mov
nop
and
inc
pop
mov
es
test
xor
pop
ficompl
int3
dec
cli
mov
out
test
mov
inc
cmp
add
mov
lea
push
cwtl
pop
outsl
push
mov
insb
incb
int3
jge
mov
xor
jg
daa
popf
mov
loop
or
loope
dec
push
cmp
hlt
inc
jp
jno
arpl
repnz
mov
in
add
ljmp
pop
int
pop
mov
sahf
push
or
mov
dec
sbbl
mov
cmp
repnz
fst
inc
mov
lods
dec
or
stos
xlat
imul
hlt
sub
test
mov
mov
mov
in
add
int
jnp
lock
jge
xor
xor
mov
inc
fadd
mov
cmp
outsb
jge
jp
shll
fadds
leave
push
and
fwait
in
mov
or
mov
mov
popa
xor
mov
cmp
xchg
les
and
sbb
add
out
mov
xor
mov
repz
lahf
add
pop
mov
cmpsl
ss
add
jp
loope
popa
rorb
jg
mov
bswap
inc
push
movsl
je
std
xor
cld
sub
or
loope
nop
in
mov
lahf
xor
aam
inc
mov
jp
rorb
xchg
xchg
inc
xor
movsl
push
out
cmp
es
inc
xorl
stc
xchg
fidivrl
inc
add
lret
mov
push
mov
add
mov
xchg
pushf
jns
pop
int3
and
fmull
push
jb
arpl
hlt
pop
add
hlt
xor
loope
push
imul
pop
adc
incl
or
cmp
xchg
xor
repz
mov
stos
clc
jbe
xchg
pushf
mov
ret
xchg
xchg
mov
das
je
jl
mov
jg
cmc
imul
mov
inc
adcb
jne
pop
pop
or
insb
pop
test
mov
rcll
mov
pushf
or
cmp
inc
and
pop
add
outsl
or
lcall
call
cwtl
sbb
and
jg
mov
xchg
test
out
mov
or
addb
insb
sub
pop
test
adc
fcomi
ret
sub
lcall
add
mov
adc
insl
or
jecxz
out
mov
out
pop
popa
add
dec
pop
leave
or
xchg
insl
pop
sbb
fwait
xchg
add
mov
sbb
pop
and
sub
mov
ret
push
mov
fsubs
mov
xor
or
pop
sbbb
jns
push
cmp
loope
mov
aam
in
movsb
inc
vcvtsd2ss
mov
push
mov
movsb
rclb
popw
addr16
adc
test
mov
adc
addr16
push
cmp
sbb
add
mov
and
pushf
sbb
loope
lret
xchg
cmp
push
mov
sbb
lea
clc
pop
inc
lock
in
repz
dec
repz
inc
pop
icebp
pop
aam
fstpl
mov
sub
cld
cli
lfs
mov
outsb
ss
sbb
mov
pop
xlat
out
push
inc
aas
adc
clc
bound
lds
sbbl
data16
fcmovne
pop
pop
lret
jl
ret
test
xchg
test
jecxz
xchg
leave
std
aam
lret
loop
scas
fs
mov
out
insl
mov
add
call
mov
pop
sub
push
rol
xchg
fwait
cmp
sbb
pop
shl
or
aaa
xchg
xchg
cmpsl
into
idiv
push
push
mov
cltd
dec
les
push
sub
xor
xchg
popf
jmp
add
sahf
mov
daa
dec
jae
mov
shrl
ds
test
and
push
sbb
pop
jp
and
and
mov
mov
pop
pop
ds
rcrl
repnz
jl
mov
pop
icebp
pusha
pop
jp
cmp
scas
xor
test
bound
in
enter
fwait
lods
pop
popf
add
cli
mov
add
fdivr
pusha
js
cmpsb
jbe,pn
xor
and
iret
jl
fiaddl
mov
dec
adc
loop
xchg
aas
or
dec
icebp
js
das
leave
stos
imul
lret
push
cmp
xor
icebp
dec
rorl
pop
fisubs
push
or
out
sub
aas
sub
test
pop
add
pushf
inc
jne,pt
mov
aam
hlt
push
adc
sahf
sbb
mov
lock
orl
sub
sbb
call
mov
cmp
test
out
clc
push
mov
fdivrp
fidivrl
mov
insl
fisttps
scas
ljmp
stc
out
xor
aaa
js
cmp
repz
mov
icebp
ds
test
enter
sbb
jge
inc
sbbl
or
shl
dec
jg
aad
scas
cmp
or
cmc
inc
bound
scas
push
mov
fldcw
inc
xchg
fxch
add
push
and
mov
daa
mov
arpl
notb
mov
pop
test
cmp
xor
gs
pop
mov
nop
sub
test
xchg
pop
sbb
jge
stc
les
cli
pop
mov
jns
mov
loopne
scas
aad
dec
aas
lret
sbb
inc
aam
mov
addl
xchg
cwtl
movsl
arpl
rcrb
fadd
cmc
scas
inc
jne
loope
test
lds
scas
nop
lds
jge
negl
inc
test
pop
xchg
adc
sbb
sbb
jno
outsl
je
lock
fistl
adc
adc
inc
das
and
jae
push
add
dec
adc
loope
and
push
cmc
aad
sbbb
sbb
mov
adc
xor
aam
clc
mov
dec
pop
psllq
fs
sub
hlt
adc
sbb
xchg
add
popa
out
jb
jb
add
into
xchg
inc
js
adcl
popf
insl
inc
inc
jl
xchg
adcl
push
pop
jae
das
xor
or
adc
mov
mov
sbb
cmp
push
or
fisubs
insl
iret
les
cmp
das
pusha
lret
jl
stc
xchg
xlat
mov
data16
xchg
repnz
push
dec
xchg
popa
arpl
fisubl
dec
les
sti
mov
jg
adc
inc
outsl
dec
xchg
andb
mov
dec
mov
mov
jge
jae
cmp
dec
mov
push
ss
out
sbb
push
subb
pop
in
inc
xor
mov
jns
lock
idivb
daa
lcall
mov
cmc
lret
xchg
jle
enter
or
or
or
jmp
data16
push
cmp
test
movsl
inc
add
xor
adc
loope
jge
mov
repnz
decb
mov
insl
mov
stc
lods
push
lods
loopne
mov
into
ret
shll
pop
push
ret
mov
mov
fisttpl
je
ret
mov
mov
stos
aam
mov
mov
cmpsl
and
outsl
rorl
insb
sub
lea
in
push
push
lahf
dec
out
dec
cmp
imul
repnz
mov
cmpsb
or
xor
mov
push
or
cmp
out
pop
pop
je
lds
repnz
mov
outsb
pop
adc
pop
loopne
mov
ja
xor
jmp
adc
in
test
jae
into
push
mov
je
ljmp
push
pop
push
and
pusha
mov
repz
and
in
sbb
inc
and
mov
std
sbb
test
push
or
test
or
jge
mov
cmpl
das
lods
into
push
nop
cmpsl
or
add
rcl
sbb
int3
lret
sbb
xchg
jecxz
mov
loop
sub
sbb
ss
xchg
das
into
sbb
add
sub
sub
add
addr16
arpl
imul
cltd
and
fldcw
xchg
or
inc
cmp
ljmp
scas
ds
pop
fcmovbe
sbb
sbb
test
orb
out
stos
or
cmp
enter
sub
jae
add
iret
dec
lcall
ja
loopne
sub
push
fdivl
mov
pushl
lock
je
flds
add
add
cmp
inc
std
add
sbb
fnstsw
clc
inc
mov
jnp
inc
mov
sbb
mov
cmp
xor
mov
cli
add
in
fsubl
cmp
test
sbb
adc
or
mov
and
nop
xlat
dec
xor
mov
xor
mov
xlat
int
or
adc
iretw
push
sub
jno
mov
test
arpl
cmp
aas
call
pop
sbb
ljmp
fldl
push
mov
in
daa
adc
inc
int
push
scas
xchg
pop
aas
out
orb
dec
cli
xchg
push
mov
mov
fdivrl
lret
js
hlt
cli
out
push
jg
and
push
inc
mov
ds
sub
jns
cmc
hlt
adc
fstpt
nop
jno
jmp
fsubp
lods
or
aad
jmp
mov
scas
fmull
inc
mov
mov
imul
je
imul
jge
xor
sub
shll
jge
and
adc
adc
fistpl
jnp
movsb
insl
std
inc
lds
shll
lock
and
adc
push
movsb
xlat
xchg
and
ljmp
fidivs
push
cltd
xchg
sar
inc
nopl
loop,pt
sub
idivb
dec
mov
and
push
cmp
cmp
pop
out
jmp
js
xchg
push
mov
dec
mov
outsl
rorl
xchg
and
bswap
jns
cmp
rol
dec
hlt
ljmp
fwait
push
jecxz
xor
push
out
test
mov
adc
mov
mov
fistpll
push
out
addb
xor
cwtl
xchg
rcrl
cmpsb
jp
jo
leave
lds
xchg
aaa
sub
adc
in
mov
push
xchg
mov
xchg
mov
or
mov
cmpsb
out
cwtl
push
sbb
xor
cltd
lahf
add
enter
es
sub
adc
push
fisubl
xchg
pop
cs
inc
add
jmp
in
and
adc
out
sbbl
adc
popw
imul
insl
loop
sbb
sbb
gs
lcall
mov
aaa
mov
adc
ret
adc
aad
xor
ljmp
lret
sbb
cmp
and
push
push
jo
pop
ds
pop
add
cmp
xor
mov
scas
adc
scas
xchg
insb
inc
mov
rcll
push
mov
dec
out
and
xor
pop
xor
push
mov
mov
loope
xor
das
pop
fisttpl
or
cmpsb
in
mov
adc
fmul
shrl
push
lahf
jne
insb
xchg
xchg
rol
sub
outsb
aad
incl
int
or
xor
daa
hlt
or
push
push
lret
std
aaa
lock
xchg
in
mov
add
stos
das
bound
jnp
sbb
jbe
nop
aas
adcl
push
ja
mov
jne
pop
rolb
ficoms
lcall
jae
push
and
add
out
in
and
mov
push
in
and
push
mov
push
dec
fbld
insl
jecxz
push
aad
and
dec
sub
sub
ljmp
or
std
out
ljmp
or
repz
mov
adc
dec
dec
imul
ret
add
mov
adc
mov
inc
movl
adc
xor
popf
sti
mov
sub
daa
stos
stc
pop
js
and
push
out
inc
ret
mov
dec
shr
lock
mov
mov
jle
pusha
lret
aaa
mov
pop
sub
xor
rcrl
pop
bound
sti
inc
sbb
sbb
psadbw
jecxz
pusha
dec
insb
mov
mov
adc
xor
cli
les
or
ret
fs
dec
or
jbe
add
inc
xchg
fs
test
fisttpl
shr
dec
xchg
pop
ss
or
insb
adc
and
pop
mov
out
loopne
nop
movsb
adc
rcll
jae
shlb
cmp
sub
test
imul
cmp
cmp
fisubrl
mov
jbe
jno
dec
jo
push
mov
mov
pop
sbb
movsb
jo
out
imul
mov
xlat
xchg
aaa
mov
mov
repz
je
dec
mov
lahf
lret
pop
mov
outsl
lods
imul
jno
pop
jle
mov
lock
inc
ja
jo
std
popa
mov
or
outsl
fbld
sub
lds
xchg
xchg
test
enter
xor
cld
sub
xchg
sbb
gs
cmp
cmpsl
imul
jp
dec
cmp
sbb
jecxz
sahf
sub
notl
inc
mov
clc
lds
aam
out
xchg
lcall
jbe
inc
hlt
shrd
jl
add
xor
xor
push
int
fsubl
bound
cld
jnp
loope
xorb
jl
mov
push
pop
test
ret
mov
mov
sub
mov
cmp
ret
dec
aam
mov
xchg
shld
mov
mov
enter
cmpsl
and
pop
mov
movsl
pop
addb
sti
repz
and
push
popl
push
add
cmpsl
fs
lods
adc
push
mov
sub
movsl
pop
js
scas
insb
int3
out
adc
inc
aam
out
insl
and
stos
dec
mov
orb
fwait
scas
popf
int3
jbe
mov
and
inc
sub
lds
inc
lock
mov
movsl
pop
add
add
jmp
pop
mov
bound
ret
imul
jp
dec
dec
dec
mov
mov
pop
sub
and
sub
ret
rorb
and
movsl
jp
clc
mov
pop
data16
test
inc
pusha
out
ficoms
out
bswap
or
mov
test
ljmp
cmp
gs
push
aas
std
push
pop
mov
out
xchg
cmp
push
insl
or
in
shrl
jg
das
bnd
ja
xchg
push
shl
push
stc
scas
mov
repz
movsb
mov
adc
fldcw
add
cmpsb
pop
cltd
pop
adc
sub
jmp
fs
cmp
mov
lea
into
jg
imul
add
adc
lret
push
or
and
add
mov
fisubs
xchg
aam
sbb
rorb
dec
test
lret
or
in
mov
sub
iret
ljmp
iret
leave
call
xor
faddl
pushf
fidivrs
dec
dec
push
scas
into
mov
fstps
popa
dec
cmpsl
pop
fmul
pop
inc
call
fldcw
cltd
notl
aad
roll
mov
fistps
push
cmc
push
push
cli
hlt
in
mov
fistps
bound
dec
cwtl
repnz
shl
push
jno
mov
rolb
cmc
mov
inc
pop
adc
insb
cmp
fldcw
pop
or
and
xorl
dec
push
dec
mov
inc
enter
cmc
shll
cmp
andl
sub
push
xchg
clc
push
shrb
jmp
cs
push
int3
ret
inc
cmp
mov
pop
incl
add
jo
inc
aaa
ret
mov
cmc
pop
ds
inc
pop
cmp
xor
or
inc
cs
inc
jbe
cld
jle
les
jmp
ljmp
mov
arpl
xor
cmp
sti
paddb
jae
out
into
sbb
das
addr16
fsubrp
dec
dec
cs
cld
rol
mov
jle
xlat
out
nop
out
fwait
repnz
aad
sbb
add
add
and
call
shrb
push
mov
and
out
loopne
rcrb
sub
shll
mov
scas
pop
xlat
pop
mov
shlb
popf
push
cmpsl
xor
xchg
or
jnp
cmp
mov
mulb
pop
mov
aaa
sbb
jnp
int
or
mov
hlt
pop
mov
arpl
mov
add
fcomi
inc
mov
add
call
sbb
add
xor
sbb
push
pop
out
sarb
cwtl
lods
js
cmp
lret
insb
cmc
sub
or
dec
fwait
scas
mov
mov
mov
je
sub
aaa
cmp
das
lcall
es
stos
jbe
mov
ss
loop
sahf
cwtl
pop
jne
inc
mov
or
dec
mov
inc
movsl
sbb
sbb
mov
je
jne
xchg
push
push
pop
mov
stos
cltd
jg
loope
xor
add
jbe
jp
add
xchg
loop
aas
pop
daa
pop
push
ficoms
pop
xor
ret
push
outsl
jb
int
scas
shr
dec
adc
mov
xor
cld
add
sbb
mov
pcmpeqd
outsl
test
loop
xchg
fs
fsubrl
or
cli
adc
cmc
mov
lods
fcomi
sahf
in
add
hlt
jecxz
sbb
insb
fwait
movl
out
popa
cltd
aad
shrl
loop
pop
ljmp
test
imul
cmp
cwtl
imul
jge
pop
lock
jnp
push
add
stos
fmul
leave
xchg
xor
xchg
and
sbb
cmp
xchg
aad
inc
xor
sar
push
fisubrl
outsb
rclb
shll
dec
aad
div
add
inc
pop
shlb
and
rorb
das
outsb
xchg
cmp
add
cmp
sti
inc
sti
adc
pop
cmpl
push
xor
in
test
dec
lods
nop
ljmp
add
in
pop
inc
lret
enter
and
daa
mov
cmpsb
dec
ja
or
aas
cmpsb
dec
pop
dec
je
sti
in
jl
arpl
mov
sbbb
jns
dec
push
bound
inc
pop
js
jmp
or
js
ret
lock
xchg
movsl
sbb
xor
stos
cmp
pop
das
shrb
loope
sti
mov
jl
jmp
jns
adc
sbb
loop
aad
mov
xchg
cwtl
bound
addb
dec
incb
iretw
add
pusha
add
repnz
xchg
scas
daa
cmpsb
or
outsl
cmp
and
adc
or
call
mov
adcb
cltd
cli
loope
sbb
fisttpl
ja
pop
rclb
push
xlat
insb
push
cmp
xchg
in
loope
repz
movsl
test
stos
jo
push
inc
jmp
cs
fsubrl
outsb
repz
ret
rclb
cmpsb
pop
arpl
xor
push
push
daa
aaa
push
and
xchg
and
jle
cwtl
ret
lock
push
ds
fwait
iret
rolb
je
fsubr
loope
adc
cmp
popa
stc
insb
loopne
pop
xlat
add
nop
lods
inc
xor
mov
lcall
mov
lods
out
cmp
fstps
aaa
xor
and
jmp
sbb
les
xchg
daa
arpl
imul
call
dec
cli
sbb
xor
cmpsb
adc
or
inc
imul
bound
cmc
div
add
and
sahf
scas
inc
test
cltd
and
pushf
sbb
xchg
clc
shrl
mov
rcrl
xor
pushf
add
insb
mov
in
cmpsb
adc
inc
sub
ljmp
mov
dec
mov
mov
js
shrb
fistl
and
cmp
hlt
insl
mov
int3
pop
popf
or
dec
add
lea
adc
mov
jmp
ror
sbb
cltd
fwait
lds
jne
fcomi
enter
test
ret
jmp
stos
jns
stc
repz
cld
dec
pop
jp
cmpsb
mov
xchg
insl
mov
cltd
pop
sbb
lret
lcall
push
je
sahf
cltd
push
cmp
mov
or
mov
jbe
in
das
test
in
sbb
add
or
xor
test
mov
jecxz
mov
xchg
mov
out
movsl
mov
or
or
mov
push
enter
xor
mov
jbe
bound
bound
orb
divb
daa
test
sbb
ficoml
fidivrs
hlt
xor
popa
mov
adc
repz
xchg
ds
mov
adc
movsl
push
int
in
mov
cmp
notb
inc
ret
cmc
std
loope
sub
in
fsubl
add
and
or
xor
in
sbb
dec
movsl
fcoms
inc
xor
add
xorb
mov
imul
or
aaa
imul
daa
xchg
rolb
sbb
xor
pop
clc
dec
push
inc
pop
outsl
mov
int
inc
cli
mov
stos
xor
mov
cmpsl
cmc
jp
dec
imul
pop
mov
gs
xchg
pop
cltd
inc
pop
lretw
and
push
pop
cmp
pop
sbb
imul
ds
or
push
xchg
inc
push
mov
sub
sub
mov
fimuls
lock
popa
xchg
repnz
adc
fstpt
stc
fcomi
sub
es
imul
and
int3
sbb
loopne
add
jno
inc
ret
rcr
jp
mov
mov
fsubrl
in
jmp
cmc
and
popa
int3
into
into
dec
mov
jp
xlat
jge
insl
inc
rclb
adc
loop
pop
jno
xchg
fcmovnb
fwait
push
pop
lods
decl
xchg
pop
jno
sbb
lcall
cmp
es
push
add
jl
adc
rol
aas
pop
sbb
xchg
xchg
mov
bound
hlt
inc
cmpsb
mov
cli
arpl
testl
cwtl
pop
inc
adc
mov
imul
mov
std
xor
mov
in
cmp
or
shll
fwait
jmp
mov
mov
out
xor
shrl
inc
adc
out
inc
mov
bound
xor
pushf
icebp
xor
pop
jns
xlat
aad
cld
jae
in
enter
bswap
mov
lods
adc
and
jge
pop
ret
addr16
sub
ret
lods
jo
imul
sbb
stc
dec
xlat
loopne
pusha
pop
pop
movsl
cmp
cmp
std
subl
and
inc
jno
mov
sub
pop
inc
in
pop
ret
je
scas
xor
imul
pop
mov
cmp
movsl
ljmp
push
fmull
push
arpl
xor
shlb
lods
inc
dec
xlat
and
mov
test
jmp
mov
rcr
push
push
outsl
insl
out
mov
imul
pop
ljmp
imul
mov
cmpsb
sbb
mov
aad
loop
add
xchg
mov
push
mov
jno
sbb
aad
xchg
fcomi
and
jno
push
fstps
fst
out
jl
enter
loop
popf
jecxz
fdiv
mov
mov
push
mov
mov
std
cmp
js
int3
lock
xchg
xchg
jge
jl
into
sarl
mov
push
aaa
leave
test
or
dec
dec
fst
push
or
pop
leave
xor
mov
faddl
pop
shl
add
in
dec
out
ficoms
scas
stos
pop
or
and
mov
pop
inc
cmpsb
out
dec
aam
xchg
jp
push
outsb
dec
or
cmp
lods
leave
sub
lret
sbb
inc
aas
insb
cmpsl
mov
inc
je
pop
mov
movb
jne,pt
mov
push
mov
xchg
rorb
lcall
fsubrl
cltd
pop
mov
sbbl
or
mov
push
sbb
xchg
stc
mov
fistpl
dec
out
xchg
xchg
jb
pop
cwtl
sub
push
nop
jg
shr
jbe
adc
sub
cwtl
in
mov
ret
xor
dec
inc
movups
jae
imul
or
xchg
adc
notl
movsb
jae
or
lods
sbb
js
pushf
movsb
daa
fiaddl
sub
pop
mov
cs
push
push
in
sbb
pop
popa
push
movsb
add
ss
jbe
sub
in
xor
push
dec
pop
mov
unpcklps
xor
testb
in
dec
in
mov
ss
cmp
mov
push
insl
sbb
faddl
shl
push
xor
addb
cmpsl
sarl
lcall
mov
cmp
jp
xor
or
add
sti
mov
push
into
leave
mov
push
inc
imul
xor
dec
push
enter
loope
lea
test
mov
sub
packsswb
incl
call
mov
or
push
rclb
pop
or
ret
out
adc
cmp
mov
jb
pmaxsw
dec
push
xchg
notl
fisubrs
xchg
mov
sbb
inc
mov
mov
mov
or
in
bound
out
inc
xchg
push
push
ds
ljmp
sbb
xor
dec
repz
insb
ljmp
fsts
add
mov
popf
mov
pop
cmc
adc
shlb
cmovp
scas
push
or
int
test
dec
pop
in
fisttpll
pusha
push
sarw
jb
and
fcmovne
sbb
test
pop
popf
pop
enter
mov
mov
dec
pop
xor
push
jo
add
add
cmpsl
loopne
mov
lock
sbb
les
test
sahf
inc
aad
or
les
and
mov
in
sub
adc
addr16
mov
into
dec
cld
and
ret
push
int3
cmp
cmpsb
gs
or
xchg
test
jp
xor
mov
sub
mov
pop
sbb
pop
scas
fwait
and
mov
js
xorl
pop
push
lret
sub
xor
inc
cltd
push
mov
inc
add
jbe
leave
sbb
jl
cmpsl
shrb
mov
jbe
lods
sub
xchg
data16
mov
adc
js
mov
push
cmp
lock
adc
inc
ja
bound
lock
xchg
mov
outsl
scas
push
ja
ds
sahf
jbe
test
daa
dec
jmp
inc
cmp
loopne
push
add
sub
fldcw
push
movsb
adc
stos
mov
movsl
push
jb
cld
add
daa
mov
not
movsb
sbbb
sbb
pop
pop
and
xchg
push
mov
test
imul
sub
mov
push
cli
sahf
ja
xchg
movswl
mov
nop
flds
cmp
sub
lea
xchg
lret
enter
push
stc
add
or
inc
bound
jno
mov
les
xchg
push
ret
ss
sarb
clc
out
testl
add
je
into
stos
mov
add
lahf
and
xchg
add
dec
fisubs
mov
push
dec
fildll
rcrb
ss
mov
and
jecxz
mov
jae
inc
xchg
pushf
dec
gs
in
mov
lea
js
das
ja
call
fcoms
test
loopne
test
addr16
xchg
addr16
aam
stos
inc
shll
or
in
jb
andl
bound
outsl
fcomp
sbb
sbbb
lret
mov
sbb
jns
mov
jae
shrl
push
xor
sub
cmp
xchg
dec
testl
mov
loopne
mov
inc
stos
ss
adc
repnz
or
and
loop
push
into
adc
pushf
cld
or
mov
fisubrs
in
movsl
jmp
adc
push
mov
mov
clc
fistpll
dec
push
jg
mov
sbb
inc
mov
cmpsl
jg
pop
dec
inc
loop
push
shl
sahf
mov
fwait
jmp
xchg
xchg
lahf
push
roll
push
sahf
sub
sbb
or
shll
jmp
push
js
xor
fs
sar
dec
out
pop
mov
push
je
dec
nop
xor
inc
es
fmulp
mov
pop
xor
or
in
mov
stos
push
outsb
sbb
dec
cmpsl
mov
fs
mov
dec
push
shl
loopne
jmp
pop
add
xorl
sahf
insl
inc
xchg
cmp
dec
and
bound
les
call
or
hlt
int3
pushf
adc
sub
xchg
in
inc
xor
push
pop
insl
adc
lock
mov
and
aaa
cmp
cmpsl
dec
fildl
jbe
vmptrst
insl
pop
push
jb
or
or
mov
xchg
pop
rcrl
jnp
and
lret
cmpsb
jg
stc
sub
jbe
lock
inc
je
rcr
or
mov
dec
push
ljmp
cwtl
sbb
jp
add
adc
and
and
popa
sahf
insb
into
cld
insb
inc
stc
mov
icebp
add
iret
hlt
int
jle
movsb
jb
stos
pop
cmp
mov
cmc
mov
pop
jg
jecxz
dec
gs
or
pop
push
pop
aam
int
je
pop
fildll
rorb
inc
je
cmp
xchg
mov
or
push
loop
and
xchg
mov
or
loopne
add
scas
sbb
into
jl
sub
clc
mov
dec
dec
xchg
mov
in
ret
pop
shll
dec
mov
sahf
add
loope
jg
jl
lods
mov
clc
mov
add
je
pushf
aam
push
push
addr16
push
jmp
scas
out
stos
fdivr
cmp
xor
add
sub
jns
mov
sub
inc
arpl
push
add
adc
mov
orl
fdivrs
mov
or
sub
xchg
lea
cmp
sbb
push
out
sti
xor
dec
jge,pt
lret
push
jecxz
sbb
and
loop
xor
std
cmc
stc
inc
stos
adc
adc
mov
and
xor
popf
mov
sarb
cwtl
lahf
jno
jb
xchg
cltd
add
fistps
inc
pusha
sub
cmp
insl
enter
neg
dec
sub
clc
je
push
xor
and
in
add
out
cmc
icebp
hlt
rcrb
push
inc
rclb
cmpsl
hlt
cmp
or
adc
cwtl
addr16
shlb
adc
or
lcall
mov
mov
sub
mov
add
mov
je
out
inc
sbb
hlt
out
adc
mov
xchg
dec
and
inc
and
out
mov
fcmovnb
ds
sub
jmp
xchg
xor
dec
sarl
jmp
or
roll
add
mov
jne
push
xchg
and
xchg
ja
adc
fdivs
jb
fcoms
aam
arpl
xor
and
jecxz
jge
mov
iret
inc
mov
mov
dec
push
and
jmp
and
repz
cmp
push
inc
mov
fcompl
ret
es
lods
mov
fcmovb
lock
outsl
lods
dec
hlt
jg
daa
loope
mov
nop
test
push
pop
cli
jg
dec
add
mov
aam
lcall
mov
stc
inc
negl
stos
je
stos
pop
arpl
stc
das
and
bound
and
test
mov
mov
adc
push
lret
fwait
mov
aaa
dec
xor
inc
addr16
jbe
push
cmp
push
cld
sbb
nop
ss
mov
cmpsb
gs
arpl
ljmp
add
test
loopne
inc
sbb
in
push
and
rclb
jle
and
clc
stos
outsb
push
out
pop
out
sub
icebp
test
lods
cmp
xchg
sub
sbb
add
mov
test
inc
fs
xchg
fwait
ret
jge
call
push
dec
les
pop
aad
mov
sbb
or
add
pop
cld
sar
std
dec
dec
xor
cltd
mov
bound
mov
lds
ljmp
cwtl
mov
or
fimull
mov
cmp
sub
sbb
iret
xor
dec
pop
push
inc
dec
pop
add
sub
adc
cmp
dec
jno
lahf
xchg
lahf
lret
mov
inc
insl
inc
mov
pop
ds
mov
jge
lret
pop
add
mov
sub
mov
stos
or
adc
push
das
out
repz
icebp
sbb
in
mov
xchg
lods
mov
stos
or
lret
and
or
stc
outsl
add
mov
movsb
negl
inc
xchg
inc
push
cltd
mov
iret
test
mov
mov
jb
stc
imul
lret
xor
push
sub
push
loop
das
push
mov
sub
xchg
loop
lret
pop
out
mov
add
loopne
mov
dec
pop
fistps
push
and
cmp
stos
add
mov
mov
cmp
rclb
pop
in
data16
cld
aas
push
pusha
mov
jb
divl
inc
pop
or
ret
inc
jmp
xor
sub
imulb
popf
push
or
push
and
add
insl
inc
sar
or
sbb
add
fadd
inc
loopne
mov
ja
addl
push
cmp
loope
push
popf
adc
inc
das
ds
jns
mov
out
or
lea
fadd
adc
push
adc
movsl
cmp
cwtl
and
jge
mov
dec
scas
pop
cli
mov
les
out
cmp
int
int
mov
inc
jnp
mov
lds
aas
cli
sbb
jmp
iret
mov
mov
and
test
in
sarb
xor
pop
in
jmp
nop
push
loop
push
lods
test
pop
push
pop
aaa
mov
popa
jno
mov
push
scas
mov
and
out
stos
cmp
cwtl
dec
shll
xor
pusha
cmp
push
in
mov
mov
frstor
xor
add
jl
mov
cmc
xorb
cltd
addl
cs
jo
sbb
push
sub
sub
jl
inc
cld
push
jnp
mov
decl
xor
ror
sti
inc
dec
adc
ja
add
jnp
push
std
ret
lahf
mov
mov
mov
fdivl
fs
addl
into
inc
sbb
mov
leave
mov
adc
into
out
dec
inc
inc
push
jmp
pop
fdivrs
sbb
lret
sbb
mov
les
test
xor
jl
mov
lods
lock
xchg
pop
cmp
aas
fidivrl
imul
jae
push
mov
rclb
and
or
scas
xadd
sbb
sub
add
testl
arpl
pop
cwtl
rclb
or
fadds
xor
cli
movl
ds
mov
fbstp
adc
mov
imul
movsl
add
int3
sbb
lcall
sbb
jl
pop
ss
push
mov
mov
inc
jp
outsb
imulb
out
mov
dec
or
and
push
adc
inc
addr16
cld
mov
scas
cli
cld
inc
iret
and
fcmovnb
cmp
sub
jb
sbbl
sahf
mov
dec
pop
lods
insl
scas
in
sahf
and
mov
pop
mov
jmp
fsubs
shrl
push
sub
std
jae,pt
lcall
push
jg
or
mov
cmc
sbb
xor
mov
jl
fmul
and
sbb
out
dec
xor
pushf
repz
mov
xchg
mov
lods
fsubrs
and
mov
add
adc
sarb
mov
jg
enter
out
fbld
je
mov
push
rclb
dec
lret
push
enter
add
inc
jl
lret
outsb
mov
cmp
outsl
pop
aam
stc
aad
movb
cmp
xchg
into
fiaddl
insb
insl
cmp
mov
fs
je
lcall
arpl
add
cmpsl
cs
inc
pop
inc
adcl
mov
lret
es
adc
sbb
mov
sub
cmc
ds
data16
push
inc
dec
cmp
push
repnz
add
push
push
inc
movsb
adc
inc
cltd
sub
pop
inc
mov
mov
test
add
pop
cmp
xlat
mov
inc
aam
repz
movsb
pop
inc
xor
in
inc
sbb
push
loope
fdivs
fldt
fdivrl
stos
mov
lods
and
fcomi
jnp
pop
icebp
mov
sarl
push
sbb
push
test
int
push
fisubrs
mov
dec
pop
cmpb
or
xchg
clc
cmpsl
sub
adcb
pop
lods
cmc
mov
xchg
aam
sbb
out
jo
lahf
mov
aam
ss
je
mov
lcall
dec
add
cmp
cwtl
ja
sbb
scas
in
pop
test
sbb
adc
or
out
adcb
arpl
mov
std
xor
lahf
pop
sub
psrlw
cmp
mov
lea
fstpt
adc
inc
hlt
fsubl
jb
cmc
addb
fiadds
pop
pop
mov
jmp
aam
push
cwtl
in
xchg
push
loop
adc
mov
cs
insb
adc
sbb
inc
test
insl
inc
pop
fimull
sub
xchg
sub
jo
inc
mov
jp
add
rcll
std
notrack
bound
mov
enter
ret
cltd
loopne
mov
lods
push
pop
pop
jb
addr16
cmp
adc
mov
push
inc
jge
popa
mov
movsb
aad
enter
lahf
add
lcall
sub
addl
fdivl
xchg
push
add
stos
ret
popa
daa
test
xor
je
mov
jae
es
iret
inc
in
sahf
sub
pusha
push
inc
dec
out
enter
shlb
test
pop
repz
movsl
pop
fcmovu
adc
movsl
fcomps
jg
jns
and
xor
jecxz
mov
cltd
push
bound
xchg
popa
sbb
xorl
mov
cmp
adc
mov
repz
aad
sub
pop
jle
sub
sbb
and
out
loope
ds
inc
int3
idiv
clc
add
int
clc
jle
cmpsb
adc
ds
cmp
in
adc
lcall
push
pop
repnz
fsubp
or
in
call
fldlg2
fwait
jmp
js
addl
into
bnd
dec
inc
out
or
jmp
in
imul
je
adc
in
fisubs
sub
inc
jp
leave
cmc
jo
dec
test
xlat
scas
push
pop
out
xor
cmc
push
push
adc
inc
fwait
aaa
jae
push
sbb
and
les
cmp
ja
jle
leave
xchg
sbb
xor
push
sub
xchg
jp
sbb
scas
mov
sbb
pop
sbb
cmp
aam
add
jmp
mov
push
xor
lock
nop
cmp
or
les
push
inc
jne
out
jg
xor
test
rcl
mov
pushf
insb
push
jno
xor
out
sub
imul
daa
xor
ds
pop
add
or
fcmovnu
dec
push
call
mov
imul
mov
mov
int
outsl
pushf
hlt
loop
movsl
out
jmp
insb
pop
jo
xchg
push
mov
testb
imul
jmp
sar
imul
push
inc
sub
rorl
pop
shlb
xchg
and
xor
fsubp
mov
inc
fwait
cmc
dec
mov
test
movsl
inc
outsl
pop
insl
inc
scas
pop
out
adcb
pop
cmp
and
sbb
loop
popf
aas
dec
inc
xor
or
and
cmpsb
xchg
push
stos
gs
inc
pop
push
jns,pt
push
mov
jb
cmpsl
idivl
add
inc
sub
push
shrl
adc
imul
es
xchg
out
pusha
or
fs
data16
cmpsl
int3
pop
call
xor
dec
inc
inc
pushl
fsts
inc
mov
popa
in
add
aam
cld
xor
clc
lock
fcmovnu
dec
notb
push
mov
push
cmp
cmp
lods
pop
sbb
or
pusha
fstl
dec
or
sarb
hlt
lods
xlat
push
jge
ror
dec
insb
es
loope
cmpsb
push
mov
aad
pop
xor
jle
pop
mov
pushf
dec
in
mov
outsl
dec
and
pushf
int
xchg
fwait
dec
or
cmpsb
call
sbb
mov
in
adc
dec
pop
aam
xor
dec
loope
dec
pop
stos
fisubs
lret
ja
stos
cmp
and
cmp
cmp
push
push
mov
inc
xchg
stc
jmp
mov
les
fstp
add
dec
push
fwait
sub
cmp
mov
inc
ret
cmp
xchg
sti
push
push
ljmp
xor
cmp
cmpsb
mov
roll
or
lods
popa
xor
jno
jle
or
sbb
test
bound
out
call
fwait
cmp
testb
sti
xor
xchg
arpl
mov
and
pop
jecxz
lahf
in
inc
xchg
out
xor
sbb
xchg
mov
mov
mov
and
xchg
sbb
subl
add
rolb
mov
out
cmp
sub
fisubs
jne
mov
cld
in
inc
jae
jnp
sub
mov
cld
inc
jo
daa
cmpsl
cmpsl
dec
mov
inc
pop
adc
loopne
pop
movsb
mov
fsubrp
inc
loopne
adc
cmp
jle
stos
fscale
sahf
fs
xor
xchg
loope
daa
enter
dec
scas
xchg
imul
jb
sbb
xchg
jnp
add
xchg
ss
loop
add
std
cmp
outsb
and
enterw
pop
xchg
addb
cltd
addb
pop
cmpsb
aam
dec
test
add
xor
aam
decb
inc
mov
xlat
and
inc
test
in
xor
dec
sbb
inc
es
or
in
addr16
test
imul
and
pop
aad
pop
aad
pushf
xchg
add
dec
add
and
jg
jmp
and
adc
mov
mov
dec
lahf
mov
test
in
or
fnstcw
xchg
cmp
mov
sub
test
jle
sbb
bound
jecxz
movsl
lods
pop
lods
es
lock
fistpll
cmpl
lcall
aad
shl
dec
icebp
pop
mov
pop
mov
xchg
adc
dec
xchg
mov
insl
mov
or
inc
jle
push
je
xchg
push
xor
sub
jno
or
add
mulb
inc
pop
in
stos
les
adc
and
or
rol
adc
push
pop
and
pusha
jp
jbe
sub
xor
sbb
mov
sub
mov
and
sbb
jns
or
and
lret
xchg
add
push
out
xchg
hlt
pop
dec
and
sbb
and
pop
mov
cld
decl
daa
fisubrs
push
push
cmp
cmp
jo
xor
cwtl
std
cmp
in
xchg
lods
sbb
xor
call
cmpb
inc
js
dec
ljmp
and
jo
pop
arpl
and
jg
cmpsb
xlat
xchg
jmp
pop
cmp
dec
test
popa
xor
add
mov
cmp
rcll
mov
dec
mov
xor
leave
sbb
and
mov
mov
loopne
outsl
adc
imul
xchg
loop
orl
jae
sti
push
push
and
nop
loope
or
cmp
iret
jmp
mov
jl
or
enter
add
inc
mov
ljmp
scas
insl
cmc
iret
sbb
jnp
mov
inc
mov
mov
shr
mov
movsb
add
push
cmp
out
fnstsw
cmpsb
xlat
xchg
sbb
adc
test
call
push
add
sahf
inc
inc
push
push
mov
push
jb
jno
pushf
lea
inc
jp
iret
fidivrs
pop
movsl
cmp
in
and
dec
adc
sub
push
mov
ds
loop
mov
addr16
sbb
call
jne
test
jl
xor
sbb
xor
dec
pushf
mov
lret
mov
jp
ja
xchg
mov
push
inc
ljmp
ror
cmp
ja
push
ds
popa
lods
inc
jmp
inc
adc
pop
xchg
sub
dec
test
out
sub
add
les
ret
and
int
sbb
mov
add
sub
lahf
adc
or
test
mov
xchg
shll
ja
push
pop
pushf
mov
sbb
sub
addr16
lea
mov
das
xchg
in
sub
adc
hlt
add
pop
and
call
jae
fs
jecxz
std
dec
add
push
and
mov
cld
rorl
ljmp
xchg
fcompl
push
cmp
mov
and
dec
jg
cli
mov
mov
xorb
icebp
and
jmp
xchg
dec
adc
mov
ljmp
dec
push
mov
and
adc
sbb
jno
test
xchg
bound
mov
jne
mov
sbb
out
mov
lret
inc
jne
sub
dec
dec
pusha
arpl
sbb
cs
mov
xor
orb
lahf
jae
add
xor
sahf
add
testb
cmp
jbe
dec
inc
mov
sub
push
andl
rcrb
push
stos
movsl
scas
les
movsb
ds
lret
xlat
mov
dec
es
fists
mov
inc
pop
add
imul
movsl
jecxz
pop
aad
mov
push
cmp
add
adc
fnstsw
aaa
xor
jmp
jne
leave
jo
cmp
mov
rcrb
fstpl
mov
aas
xorl
arpl
jmp
outsl
inc
cld
int
pusha
xchg
jb
pop
mov
cltd
fsubs
dec
add
mov
xchg
xchg
pop
addr16
sbb
mov
cli
dec
stos
add
scas
and
or
arpl
adc
pop
and
and
sub
popf
movsb
out
mov
sbb
jge
xchg
dec
or
sub
jmp
dec
sahf
shrb
or
shlb
cmp
aaa
push
jns
adcl
cmp
cltd
in
mov
insb
add
pusha
mov
roll
lahf
data16
or
push
outsl
sub
mov
aam
adc
cmp
fnstenv
lods
cltd
dec
xor
iret
fidivrl
xlat
mov
dec
xor
sub
ret
jnp
dec
push
pop
mov
mov
mov
push
sti
loope
pop
push
mov
dec
std
loope
mov
stc
pop
and
mov
mov
and
jle
outsb
inc
stos
xchg
popf
ret
dec
js
add
pop
negb
push
fidivrl
mov
add
mov
mov
pop
push
outsb
mov
xchg
sbb
scas
push
rcrb
ljmp
push
or
sti
imul
cli
js
jge
mov
sbb
imul
insb
jmp
int
xchg
add
in
pushf
fnsave
inc
xor
inc
dec
push
scas
sarb
mov
test
fdivl
jp
xor
pop
xor
lock
or
mov
push
insb
clc
ret
jne
and
and
push
imul
jns
iret
jo
mov
in
mov
ss
imul
sub
pop
insl
mulb
push
lretw
xor
leave
mov
adc
xchg
jle
inc
ljmp
mov
dec
leave
push
inc
enter
jb
mov
xor
out
inc
or
xchg
xchg
into
call
cmp
outsb
jb
mul
sbb
popa
mov
xchg
icebp
jno
lea
daa
ja
inc
rcrl
shll
adc
jne
fbstp
fucomi
cmp
push
push
mov
sbb
adc
ret
pop
jge
insl
popa
ret
dec
sbb
jecxz
pop
push
lea
sub
xchg
pop
les
jns
pop
mov
pop
mov
out
xor
inc
inc
aas
or
jecxz
add
pop
testl
adc
mov
jle
dec
ret
lret
mov
or
xchg
js
jo
ds
jo
push
into
lcall
cmp
or
xchg
cld
sahf
gs
scas
pop
sub
adc
and
jge
dec
iret
out
cmp
cmpsb
mov
cmpsl
mov
xor
test
pushf
test
inc
stos
cmp
in
or
lock
mov
lea
mov
push
sarl
xchg
enter
pop
jno
or
mov
push
push
test
nop
and
daa
fs
cmpsl
xlat
push
loopne
push
icebp
sbb
movl
cltd
lods
pop
inc
aas
in
adc
dec
into
jnp
lahf
jnp
or
shl
sbb
rcrb
sti
add
xchg
mov
push
adc
lock
mov
jg
push
stos
xchg
hlt
call
or
adc
pop
aam
lret
adc
and
lret
mov
add
xchg
sbb
nop
cmp
test
sub
sbb
add
or
loop
enter
mov
xor
aas
cmp
adc
xchg
xchg
xchg
mov
loope
out
mov
add
and
fstpl
ja
into
int
cmp
stos
dec
mov
roll
scas
dec
inc
xchg
dec
and
imul
std
std
dec
testl
jbe
test
test
dec
icebp
repnz
iret
add
adc
sub
aad
mov
fcomi
mov
pop
cmp
in
andb
push
push
out
add
call
pushf
inc
sbb
aaa
outsl
sbb
add
cld
jnp
inc
dec
aam
fwait
mov
jge
push
mov
lods
cmp
mov
add
jae
jmp
call
xchg
push
dec
cmpsb
xor
dec
movsl
pop
adc
push
jbe
popf
testb
shll
pop
lcall
jne
adc
mov
ss
push
xor
sbb
ss
mov
lahf
sbb
mov
push
mov
xchg
lock
inc
xchg
lret
jmp
mov
cmp
mov
mov
jp
shr
lea
xchg
xor
jl
iret
xor
and
popa
mov
test
mov
daa
or
in
cmpsb
xchg
jmp
jge
mov
inc
sbb
and
pop
fs
fdivrp
sbb
inc
subl
xor
fldenv
arpl
cmp
ret
jo
test
xchg
push
loopne
je
and
out
int3
repnz
xchg
rolb
hlt
ja
iret
ljmp
mov
mov
mov
mov
xchg
sub
push
pop
lahf
pop
mov
clc
iret
fldcw
xor
dec
movsl
scas
cmp
movsl
sahf
pop
mov
mov
adc
rcrb
cmp
cmp
and
orl
jnp
push
and
pop
add
and
jns
bound
rol
popf
push
stos
cvtps2pd
push
add
arpl
fsts
mov
pop
push
and
xor
sub
and
jge
or
xor
fldt
sub
out
dec
mov
in
test
cltd
rorl
xchg
mov
mov
test
ret
and
filds
mov
sbb
sbb
xor
int
and
add
xchg
imul
and
leave
mov
push
leave
cltd
sub
and
inc
shrd
orl
add
sbb
push
les
xchg
xchg
sahf
sbb
clc
mov
pop
dec
xchg
outsb
adc
out
pop
nop
push
sbb
mov
icebp
sbbl
inc
mov
arpl
out
jp
orl
rorb
sahf
add
inc
orb
fdivrs
test
fcomps
pcmpgtb
dec
sub
fimull
inc
movsb
enter
push
adc
imul
dec
sti
fisttps
mov
roll
test
clc
loop
scas
xor
jb
cli
adc
adc
cmpsl
rcl
inc
shr
xor
in
in
xchg
xchg
sbb
pop
adc
sti
sub
inc
and
xor
test
test
fnstenv
ljmp
cli
out
test
jnp
addr16
imull
xor
aas
and
lods
into
dec
mov
jae
mov
adc
stos
push
inc
mov
xchg
out
jae
iret
xchg
cmpsb
movsl
add
sub
loope
xor
rcll
inc
inc
or
in
and
ja
iret
stc
cltd
cmp
xor
jo
mov
jne
jge
pop
repnz
jp
mulb
mov
inc
or
rcl
cmp
aam
pop
dec
cwtl
scas
ja
aad
pop
rol
and
lock
push
iret
and
fldln2
and
pusha
mov
jp
fisubrs
jnp
addr16
add
ficompl
dec
les
jl
repnz
imul
xchg
jecxz
push
daa
js
push
push
ret
scas
dec
out
mov
imul
cmp
sti
sub
xchg
or
cmpl
cmpsb
adc
jecxz
mov
cmpsl
outsl
div
cmc
xor
cmp
aaa
outsl
fwait
pop
push
sub
inc
cmp
cmp
xor
out
adc
in
inc
sbb
mov
das
sar
adc
insb
mov
push
jmp
mov
lret
repz
pop
aad
pop
or
adc
mov
ret
outsb
inc
mov
ds
push
out
xor
ret
scas
aas
adcb
lock
sbb
rorl
mov
mov
sub
mov
dec
fstl
ljmp
data16
jae
cmpl
pop
lret
inc
testl
shlb
fcmove
adc
push
out
imul
leave
lods
rcrl
dec
pop
sub
ret
mov
mov
push
adcl
je
loopne
pop
cltd
popf
lcall
popf
or
push
out
shrb
adc
xchg
sub
add
pop
or
push
inc
inc
das
adc
dec
or
sub
pop
mov
imul
pop
dec
sub
pusha
sbb
repz
das
insb
pop
mov
xchg
out
pop
dec
sbb
inc
arpl
test
mov
pop
lcall
scas
inc
mov
arpl
les
cmp
pushf
jl
inc
pop
push
daa
jecxz
jbe
xchg
mov
cmp
das
add
lods
or
mov
outsb
lcall
dec
rorb
xchg
xchg
les
fidivl
sbb
div
jae
cs
inc
jae
mov
das
jo
pop
xor
insb
xor
cltd
mov
and
dec
ja
fucom
aas
ret
xor
xchg
jns
cmpsl
out
scas
mov
adc
aad
pop
fldl
ja
sub
das
push
ret
andl
aam
imul
fidivl
push
xlat
out
mov
xchg
fidivrs
sub
dec
dec
aas
lock
data16
adc
mov
sbb
xchg
push
inc
mov
scas
mov
push
sbb
ljmp
push
das
jb
aam
sub
push
mov
add
mov
ja
sahf
cmp
stos
pusha
dec
or
dec
out
xchg
push
out
insl
inc
lods
xor
xor
mov
sbb
push
js
jb
inc
xor
add
inc
hlt
mov
pushf
pop
repz
popa
dec
push
repz
adc
pop
xorl
pop
repz
clc
popa
sub
and
fildll
daa
in
ds
das
inc
sti
sbb
int3
leave
outsl
mov
enter
testl
out
out
imul
int3
stos
adc
gs
jne
mov
mov
mov
cltd
pop
and
mov
int
gs
add
loopne
js
das
mov
mov
dec
xchg
ret
and
mov
jnp
sbb
pop
adc
sub
movsb
add
inc
fcmove
pop
idivl
fidivrs
les
pop
cmpsb
aad
sbb
lret
xor
cs
les
adc
loop
sub
ss
test
inc
sbb
jle
repz
and
push
pushf
and
push
adc
push
xchg
cli
adc
std
xchg
pusha
lock
mov
mov
push
mov
ret
xchg
jo
es
mov
int
sahf
adc
icebp
mov
movsb
cmp
cmp
mov
pop
ret
repz
mov
adc
and
call
andb
dec
sub
insl
mov
aaa
ljmp
aaa
ja
mov
insl
ds
sub
in
push
jae
sbb
xor
mov
mov
ljmp
jns
into
cmp
test
into
mov
jne
mov
sub
xchg
pusha
cmpsl
push
or
mov
stc
lock
add
mov
jns
or
gs
out
in
lds
ret
adc
fwait
inc
mov
fdivs
scas
mov
les
test
imull
add
inc
adc
sub
pop
or
cmpsb
jge
xchg
mov
mov
jo
into
lcall
push
xchg
mov
xchg
js
push
jp
imul
xchg
dec
or
and
add
scas
and
cmp
ffree
lods
xchg
lods
aam
sbb
cmpsl
push
arpl
repnz
mov
and
inc
dec
cmp
inc
mov
scas
pop
mov
and
xchg
imul
sbb
pop
pop
cmp
push
and
icebp
sub
dec
pop
pusha
push
sub
xor
pop
test
mov
adc
popa
inc
jg
or
jecxz
ret
or
jnp
jle
insb
ret
sbb
loope
lea
mov
mov
mov
add
inc
dec
test
in
lret
lods
jbe
sarl
inc
popa
decl
or
push
mov
aaa
pop
sub
ja
mov
into
cmp
out
ret
pop
rcrl
push
and
pusha
in
xor
lret
sub
aad
xor
test
xor
das
je
adc
sbb
pop
mov
cli
sub
lods
mov
sbb
dec
loopne
push
pop
loopne
ret
or
mov
sbb
aas
scas
mov
add
push
xor
push
fdivl
into
adc
pusha
outsl
jb
decb
and
dec
outsb
add
dec
out
xlat
inc
std
popf
iret
sbbb
repz
xor
cmp
daa
aas
xorb
or
mov
pop
ja
mov
dec
int3
shrb
les
gs
pop
fstpl
popa
push
hlt
sbb
dec
jp
mov
jp
push
and
das
dec
jg
test
sub
cmpsb
aad
adc
push
xchg
mov
in
cwtl
ficomps
insl
in
jae
jae
jle
inc
jp
xor
test
arpl
hlt
mov
jp
clc
es
cmp
and
push
outsl
cmp
stos
xchg
push
loope
jo
sbb
out
pop
xlat
pop
ss
cltd
imul
mov
stc
and
loope
jae
pop
ficompl
data16
ret
mov
and
mov
out
repz
pop
xlat
stos
pusha
dec
roll
insl
repz
adc
xor
or
jmp
dec
call
sbb
jle
inc
fisttpll
and
push
in
int3
jne
cmp
cmp
fnstcw
xor
sbb
dec
movzbl
mov
cmp
fstl
popa
dec
fwait
mov
inc
inc
inc
cmp
mov
stos
xchg
leave
aaa
aam
shrb
into
mov
lea
push
dec
push
pop
or
jge
decl
xchg
mov
mov
or
mov
inc
fnstenv
pusha
xorl
mov
lods
pop
in
pop
push
pop
push
lds
loopne
cmpsb
and
fimull
pop
pop
mov
push
imul
in
es
cmp
adc
int
mov
jg
jo
or
inc
fimull
insb
pop
add
cmp
sbb
in
mov
mov
pop
pop
mov
mov
pushf
dec
rorb
mov
scas
std
jbe
sub
push
ret
xchg
call
jmp
mov
andb
and
and
mov
aad
sub
iret
inc
icebp
lock
pop
xchg
pop
lret
add
iret
inc
inc
rolb
stos
mov
add
xchg
neg
aas
add
push
out
mov
mov
jns
and
aad
jle
cmc
pop
lret
mov
jecxz
mov
insl
dec
int
fisubl
outsl
push
adc
cwtl
pushf
adc
dec
push
or
scas
lret
jp
das
xchg
insl
push
cmp
insl
lock
cmp
jle
shlb
add
lds
lock
sub
out
sub
sub
lahf
and
xchg
sbb
push
aas
jb
loopne
inc
mov
sbb
pop
push
xchg
cmp
scas
dec
lods
andb
clc
daa
je
sti
push
mov
push
int
sbb
lea
bound
mov
iret
push
mov
faddp
sub
gs
mov
cld
add
adcb
dec
pop
sti
sbb
lods
popa
xchg
xor
imul
dec
dec
jecxz
gs
jmp
adc
int
lret
addr16
xor
xchg
bound
jns
test
loope
sub
dec
jge
fwait
adcb
loopne
movsl
lods
add
pop
mov
pop
outsl
addr16
inc
push
mov
loope
adc
mov
outsb
jno
dec
out
jns
xchg
jae
test
repnz
xchg
push
cs
adc
jp
pop
mov
sub
stos
and
lcall
mov
lfs
call
out
fwait
dec
cmp
push
xor
push
sub
sub
gs
sbb
sbb
dec
jg
faddl
and
nop
jae
xor
fs
cmp
mov
push
cmp
cmp
add
push
sbb
leave
jnp
mov
or
cli
test
sbb
in
mov
push
int3
mov
push
sub
mov
pop
cmp
inc
push
push
mov
adc
jne
ljmp
outsb
mov
cmp
cld
inc
or
subb
dec
xchg
adc
daa
xchg
pop
daa
xor
cmc
cmc
jp
outsl
aad
test
neg
jg
into
inc
scas
add
mov
push
mov
mov
shrl
aam
pop
out
push
lcall
jae
mov
test
cmp
fmuls
xorb
cmc
xor
adc
jnp
lret
in
aad
sbb
int3
addr16
.byte
repz
.byte
.byte
mov
or
add
or
add
or
add
or
add
push
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
insb
dec
add
add
add
incl
add
add
dec
add
add
add
jl
add
incl
add
add
add
add
incl
add
add
xchg
add
add
incl
add
add
mov
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
xchg
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
lcall
lcall
dec
add
dec
add
incl
add
add
movsb
dec
add
add
add
mov
dec
add
incl
add
add
add
incl
cmpsl
dec
add
sub
subb
add
jmp
dec
add
mov
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
incl
add
add
mov
add
incl
add
add
add
add
incl
add
add
mov
add
sti
mov
dec
add
add
add
incl
dec
add
dec
add
inc
rorl
rorl
and
adc
dec
add
xor
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
lds
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
enter
add
add
incl
add
add
enter
add
add
incl
add
add
leave
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
int
add
add
add
incl
add
add
dec
add
add
add
jmp
into
dec
add
into
dec
add
jmp
iret
dec
add
in
iret
dec
add
iret
dec
add
incl
rorb
add
dec
add
jmp
rorb
and
pushl
rorb
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
xlat
dec
add
add
add
incl
add
add
fmuls
ljmp
es
add
add
add
add
push
or
add
add
add
push
add
or
add
or
add
or
add
push
add
or
add
or
add
push
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
addr16
or
push
sbb
inc
outsb
sbbb
data16
jnp
sub
push
lcall
cs
dec
popf
dec
inc
pop
mov
mov
inc
jle
dec
cli
loopne
sbb
mov
dec
xchg
push
xor
jnp
mov
cmc
push
push
loop
pop
ja
test
mov
mov
mov
add
movsl
xlat
ss
pop
push
imul
in
mov
addl
out
push
mov
add
sahf
push
push
push
or
mov
mov
fwait
inc
mov
jns
rorb
repz
imul
push
stos
jnp
out
mov
in
in
insl
mov
push
fs
inc
pusha
pop
out
mov
out
shrl
inc
repz
sti
lods
dec
rcrb
scas
out
aaa
cmp
sbb
dec
clc
ret
dec
je
imul
push
nop
divl
sub
cmpsl
xor
sub
inc
sub
jb
jmp
fists
xchg
inc
clc
xor
fwait
cmp
call
bound
inc
xor
adc
jl
in
dec
jp
mov
faddl
inc
mov
rcrb
adc
push
ja
push
adc
scas
lahf
test
bound
aad
gs
mov
sbb
addl
xor
sub
rcrb
test
mov
scas
and
sub
inc
xchg
icebp
lea
scas
lret
loopne
jae
std
in
mov
dec
gs
mov
xorl
insb
sbb
add
cmc
icebp
lret
mov
out
mov
insb
xchg
stos
enter
sub
and
or
xor
mov
inc
xchg
mov
cmp
dec
popf
inc
inc
mov
sbb
cmp
mov
xchg
in
cmp
arpl
popf
insb
xchg
fcomi
add
test
jg
push
cwtl
popa
hlt
loopne
pop
jb
jmp
xor
test
lock
fmuls
cmc
sub
adc
out
jge
mov
jne
push
in
pop
sbb
shr
push
jge
sahf
push
or
test
incl
adc
ss
scas
cmp
psadbw
in
dec
lea
inc
mov
pop
insb
pop
cmp
or
sbbb
stos
add
xchg
stos
mov
mov
nop
adc
out
popf
in
idivl
sub
inc
jo
scas
fstpl
cmp
xor
push
or
rclw
add
in
aas
sbb
movsb
divl
inc
repz
push
cmp
adc
or
or
test
xor
divl
push
push
rclb
ljmp
adc
jns
repz
insb
pop
jmp
mov
mov
test
xchg
lds
xchg
out
add
in
pop
movsb
aaa
inc
mov
movsb
mov
ret
mov
inc
pusha
imul
in
in
or
push
popf
pop
dec
icebp
lods
cld
and
jmp
jg
push
sbb
sbb
lock
cmpsl
xor
cmp
adc
adc
ret
mov
mov
fwait
inc
push
inc
repz
int3
addr16
sub
loopne
stos
lods
cmp
jnp
mov
jecxz
test
inc
sub
jnp
addb
in
into
lahf
divb
cltd
shrb
ljmp
lods
das
cmp
jmp
push
iret
push
cmp
cmp
sbb
mov
mov
popf
loopne
fisubl
xor
pop
arpl
pop
or
inc
pop
in
cmp
xor
ret
and
frstor
nop
insb
dec
xchg
stc
pop
adcb
pusha
test
push
scas
and
mull
pop
and
insb
cltd
addr16
lock
add
inc
ret
mov
cmp
mov
push
jmp
xor
into
fs
cmpsl
and
add
mov
cld
jg
or
cwtl
and
sub
adc
js
imul
and
xchg
mov
push
adc
icebp
cmc
mov
add
in
lcall
popl
hlt
push
mov
or
or
xchg
mov
mov
sbb
out
fs
mov
sbb
jbe
cmc
fstpt
insb
les
fs
add
decb
jp
jg
aaa
leave
incb
xor
divb
scas
and
jmp
dec
sub
inc
fsubs
out
jae
adc
ret
jmp
mov
dec
jno
lret
xchg
insl
mov
scas
daa
cs
lock
mov
mov
add
ds
fs
scas
mov
xor
add
out
inc
adc
xchg
push
test
dec
cli
fcmovb
sarb
in
fisubl
sbb
adc
pop
mov
out
jl
xchg
insb
cmp
pop
xor
cmp
lcall
bound
rclb
in
mov
mov
xchg
add
mov
mov
leave
mov
sbb
dec
add
xchg
aas
push
and
dec
push
mov
loop
pop
popf
ud1
and
or
jae
outsb
mov
xor
lock
push
lock
test
sbb
scas
jae
repz
fdiv
xchg
cmc
sbb
repz
rorl
in
xchg
movb
sub
hlt
pop
subb
xor
inc
outsb
repnz
ret
cs
out
pop
imul
repnz
into
cli
repz
or
add
mov
mov
lcall
or
les
and
and
mov
sub
les
lret
cmc
jge
enter
add
push
or
out
out
mov
lret
shr
xor
xor
rolb
lds
shll
cld
jmp
movsl
pop
xchg
es
in
sub
cmp
adc
xor
fldt
cmp
out
scas
dec
and
lock
xchg
adc
dec
icebp
leave
dec
sub
cwtl
sub
push
cmp
or
fstl
adc
mov
dec
push
push
nop
enter
mov
xor
mov
ja
cli
lods
pusha
enter
sbb
fadds
sbb
hlt
stos
adc
sub
sahf
push
add
sbb
mov
in
and
jmp
idiv
pop
jmp
sub
js
mov
sub
insb
aaa
js
pop
loopne
dec
and
mov
jmp
push
jns
adc
xor
xor
mov
pop
cltd
cld
inc
sbb
add
sti
dec
sahf
push
cmpsl
pushf
out
and
jae
add
ds
test
lcall
cmpsb
hlt
or
arpl
js
xchg
inc
jae
lcall
in
cld
or
icebp
aaa
xor
xchg
int
inc
sub
xchg
push
xchg
xchg
xor
ljmp
pop
fisttps
inc
into
fistpl
pop
call
pop
mov
xor
rep
subb
push
add
rcll
mov
out
stc
pop
mov
scas
mov
out
fdivp
xor
jno
push
pop
or
or
xchg
bound
inc
popaw
sbb
hlt
movsb
cltd
sbb
insb
pop
daa
rorl
inc
fiaddl
push
pop
mov
movsl
jg
pop
lea
adc
cmp
add
loope
dec
or
push
aaa
imul
jns
push
lods
push
daa
dec
popf
push
insb
push
fmull
mov
mov
pop
leave
ret
rcll
add
xchg
movzbl
lods
cmp
jp
cmp
adc
mov
aad
push
xchg
loope
mov
ficoml
push
pop
pop
mov
lcall
jno
stos
mov
cmp
jno
in
sbb
sahf
adcb
gs
and
xor
mov
lcall
inc
inc
mov
fs
ret
outsb
mov
out
xor
scas
and
mul
jns
das
cmp
fistpll
aas
subl
push
loope
loope
into
mov
mov
shlb
push
mov
js
shl
sub
pop
iret
fwait
pop
cmp
pop
sbb
mov
popa
aam
dec
inc
dec
gs
mov
ret
sub
cwtl
out
pop
mov
jnp
scas
pop
sub
push
cld
mov
lahf
clc
scas
xchg
sbb
clc
and
mulb
js
outsb
mov
and
in
call
nop
mov
push
inc
test
fistpll
push
ror
movsl
mov
jne
arpl
xchg
test
cld
das
pop
loopne
mov
pop
sub
es
pop
hlt
mov
xchg
loope,pn
scas
in
lcall
dec
push
cmp
cmp
cmp
fwait
fs
fistpl
mov
mov
and
or
test
push
das
sub
inc
loope
lcall
jnp
push
adc
xchg
popf
aad
testl
cmp
aaa
nop
testl
sbb
stc
pop
movsl
and
rcr
dec
lret
outsb
arpl
imull
or
not
mov
pop
pop
mov
into
shrb
xchg
movsb
fwait
test
and
sbb
sbb
cmp
sbb
sbb
sahf
push
adc
test
mov
jo
xchg
jle
and
or
fwait
cmp
outsl
js
and
test
mov
adc
ret
jb
mov
xlat
mov
mov
mov
pop
add
outsl
aad
movsl
fidivs
add
aad
xor
dec
adc
fsubl
aas
dec
sub
testl
je
push
out
mov
jmp
jns
jg
insb
add
dec
mov
sti
cmp
mov
jecxz
adc
call
in
int3
mov
push
xor
or
rcl
cmp
xor
cmp
mov
lods
inc
pop
je
sbb
stc
sahf
add
adc
cs
bound
lret
xchg
mov
mov
pop
add
mov
int
scas
mov
repz
jmp
and
nop
fstps
xor
ljmp
cwtl
push
popf
lock
nop
cmp
cmp
lcall
xchg
shll
paddb
popf
fildl
aaa
xchg
sbb
inc
rcr
mov
imul
daa
nop
cmp
shlb
outsb
push
lahf
test
cmp
sti
icebp
call
lds
sub
fldt
cmpsb
enter
mov
enter
mov
sub
sbb
sub
push
inc
loop
test
call
xchg
mov
clc
xchg
and
mov
cs
test
xchg
ret
les
ret
jbe
std
dec
test
call
inc
dec
pop
cmc
in
sbb
jg
and
pop
push
pop
fdivrs
push
clc
aaa
movsb
xchg
push
adc
push
cs
shlb
or
xor
in
jnp
cmpsl
fstl
out
scas
sub
mov
stos
xchg
int
mov
add
mov
mov
xor
je
std
pop
jns
inc
dec
push
pop
fs
ds
cs
xor
ja
mov
push
cli
dec
scas
insb
es
scas
enter
sbb
lret
jmp
push
inc
mov
lds
add
data16
rcr
jge
aad
int
dec
cli
rclb
add
rolb
mov
xchg
mov
pop
xchg
hlt
and
scas
fnstcw
shlb
lock
mov
push
pop
icebp
mov
dec
xor
pop
jb
clc
lret
adc
es
leave
sbb
xchg
inc
sbb
mov
out
in
cli
jmp
xchg
pop
jl
pop
movsb
jns
jb
adc
jns
xlat
push
sti
jp
mov
rclb
jmp
mov
inc
jmp
pop
sbbl
in
insb
sbb
jno
fdivp
jge
push
fsubrs
mov
pop
in
movl
sbb
jb
lods
lods
les
outsb
ss
mov
jo
cmp
das
push
pop
dec
inc
jmp
clc
cmp
push
pop
sbb
les
inc
test
es
cmpsb
add
test
int
ja
lcallw
js
outsb
sti
jb
xor
lea
in
adc
mov
clc
test
sub
ja
pop
movb
sbb
jne
cmpsl
aas
js
pop
push
sub
packsswb
adc
rorb
movsb
jg
clc
push
jg
xchg
test
jo
mov
pop
das
sbb
mov
leave
ds
jbe
inc
jae
mov
data16
inc
ret
jb
nop
xchg
xor
in
test
mov
add
xchg
pop
xchg
das
mov
adc
or
imul
dec
cmpsl
jecxz
xchg
les
xchg
insl
in
inc
nop
jecxz
test
das
inc
test
movb
sahf
sbb
cmp
arpl
xchg
mov
or
push
push
dec
sub
stos
inc
mov
incl
imul
sub
mov
test
clc
repz
mov
sarb
cmpsb
sub
es
sub
nop
std
cli
or
addl
pop
inc
inc
pop
prefetch
pop
rclb
sub
fildl
push
call
ret
lret
pop
lret
dec
inc
xchg
sbb
ret
xorb
inc
cli
adc
sub
cmp
xchg
pop
sbb
push
imul
arpl
insb
adc
xchg
push
dec
and
sub
jnp
lock
sub
test
hlt
ret
push
ja
dec
and
mov
xor
test
fxch
addb
pop
jae
into
inc
rcrl
mov
jmp
mov
xchg
inc
test
pop
std
mov
jl
sub
pop
into
mov
push
call
sbb
cli
addr16
adc
xlat
push
inc
clc
inc
stos
inc
scas
fadds
shl
mov
nop
mov
sub
sbb
jae
lods
or
dec
loopne
int
xchg
rcr
popa
rolb
nop
adc
mov
movsb
dec
test
ds
pop
dec
sub
sub
popa
jb
in
cmpb
lret
cld
mov
push
fstl
mov
push
push
daa
mov
fistpl
fadds
addr16
test
and
pop
pop
out
wrmsr
push
cld
pop
mov
pop
jae
mov
jge
dec
into
movsl
lds
mov
mov
aam
daa
arpl
jp
fcoml
out
shll
add
dec
cld
aas
fcmovnb
andb
repnz
jg
int
dec
pop
push
fcmovnu
pop
btr
data16
int3
and
or
xchg
or
arpl
xor
push
movsb
scas
nop
add
push
xchg
xor
xchg
push
push
lret
jb
push
mov
adc
in
mov
enter
xor
daa
xchg
out
ja
loope
xchg
movsb
add
cwtl
iret
sbb
sub
mov
add
cmp
cwtl
jno
mov
xor
xchg
and
cwtl
xchg
or
inc
cs
fcoml
dec
lock
inc
push
jno
out
cltd
out
icebp
daa
sbbl
and
hlt
fnstsw
lds
dec
cmc
std
je
jecxz
fldt
mov
and
cmp
pop
jmp
mov
sbb
inc
mov
fadd
xor
in
lods
mov
hlt
clc
mov
std
adc
dec
xchg
cwtl
pop
or
pop
jns
ret
xchg
xor
jae
push
fimuls
jg
in
or
adc
jmp
in
popl
cmp
iret
sbb
mov
push
js
addr16
lea
popa
or
mov
or
mov
lret
call
pop
cmp
adc
pusha
inc
pop
icebp
jle
sub
lret
scas
fisubl
sbb
aad
inc
xor
out
xor
hlt
mov
adc
mov
fdivs
fiaddl
mov
lock
mov
into
mov
push
loope
jle
ljmp
loope
add
test
outsl
sub
push
cli
test
mulb
rolb
mov
test
push
mov
dec
call
push
cld
cwtl
rcrb
cmp
jge
jmp
js
in
mov
lea
shrb
jmp
daa
jl
cmc
mov
insb
adc
out
sub
lock
out
cmp
add
fidivrs
movsb
xchg
sahf
and
mov
xchg
add
jg
clc
mov
mov
loop
jl
xchg
aam
roll
mov
pop
inc
sub
or
int3
out
add
lahf
jnp
bswap
notb
and
fdivp
subb
xchg
fsubp
fisubrl
inc
dec
incb
or
lock
shll
pop
add
call
cmp
leave
xor
lods
sbb
je
pop
mov
xchg
mov
push
push
wbinvd
adc
or
or
adc
out
cs
cmp
mov
sbb
shufps
and
mov
dec
cmpsl
or
dec
ja
mov
add
arpl
ljmp
xchg
jl
outsl
out
jecxz
test
nop
outsb
rcrb
xchg
jne
mov
lret
pavgb
xchg
dec
cmp
fisttpl
mov
mov
xor
mov
lcall
insb
sbb
dec
dec
adcb
mov
or
int
es
andb
fmul
repz
mov
push
test
and
popa
add
lret
sub
sbb
xlat
push
pop
mov
jg
gs
inc
cmp
outsb
pop
pop
pop
mov
sbb
andb
mov
mov
test
jns
divb
lods
pop
push
mov
cld
mov
andb
and
out
sub
int
and
mov
mov
jecxz
test
xchg
je
ss
rep
mov
stc
sub
pop
nop
or
lret
pop
pop
out
shlb
sub
xchg
mov
call
pushf
cmc
pop
push
in
stc
imul
mov
add
pop
cmpb
mov
inc
sub
cmp
subb
icebp
jb
cmp
mov
xor
mov
mov
das
xchg
test
popl
jno
dec
and
jmp
pop
or
sti
pop
mov
dec
insl
jmp
mov
mov
insb
mov
and
ljmp
adc
xchg
iret
in
sbb
fs
xor
pusha
inc
adc
jae
xchg
sub
dec
pop
sbb
xchg
mov
mov
and
ss
adc
test
ret
pop
hlt
xor
sub
add
sbbl
pop
or
jmp
inc
sarl
clc
xlat
lcall
and
push
ja
jae
jle
rol
mul
mov
xchg
mov
jo
inc
cmpl
sbb
sub
test
fsubrl
insl
aam
mov
or
mov
xchg
xor
push
fstl
movsb
jmp
es
push
jmp
addb
jbe
push
mov
repz
mov
aaa
push
add
xor
out
mov
xor
sar
int
call
addr16
push
pop
jns
cmc
pop
cmp
test
and
push
pushf
push
add
stos
push
push
popf
cmp
jmp
mov
sti
sub
test
ds
push
or
cld
ret
mov
cmp
dec
xor
stos
es
push
call
fiadds
and
xor
ja
pop
inc
pop
add
inc
jno
or
ret
les
mov
fcmovnb
push
or
sbb
jg
inc
call
sub
sbbl
adc
loop
mov
xor
jp
repnz
cwtl
lret
data16
mov
jge
aam
xor
fimull
jns
mov
lcall
ljmp
outsb
jbe
inc
adc
lock
ja
pop
adc
test
jle
push
xor
mov
cmc
xchg
mov
dec
mov
jne
push
jno
mov
sahf
dec
jmp
pop
mov
stos
and
shrb
stc
sbb
push
fdivrl
and
das
sbb
je
cmpsb
xchg
popl
fs
inc
pop
fwait
hlt
movsl
ret
inc
mov
sbb
push
les
shlb
sub
jns
mov
xor
in
aaa
mov
in
fildl
jnp
repnz
pop
sbb
cmc
in
outsb
lods
imul
sub
and
loop
scas
mov
ret
lahf
in
jmp
leave
popa
pop
and
out
addl
fwait
scas
daa
lods
sub
push
subl
jle
push
aad
cmp
dec
sti
adc
or
push
cmc
clc
jo
cmp
dec
sbb
nop
cmp
insl
push
and
xor
loop
in
push
pop
out
sbb
mov
nop
mov
lods
pop
xor
add
xor
jmp
test
js
mov
sbb
andl
rorb
mov
fdiv
insl
nop
dec
loop
cmp
mov
lret
dec
cmp
test
testb
mov
inc
iret
pop
and
or
cmc
in
insl
rorl
loopne
mov
xorb
dec
mov
sub
mov
push
lret
stos
sub
and
outsb
dec
lds
cmp
icebp
xor
jg
cwtl
adc
and
mov
and
sbb
int
addb
inc
mov
mov
jecxz
mov
aaa
rcr
imul
adc
pusha
push
leavew
gs
test
xlat
fdivs
sahf
jno
pop
mov
adcb
push
jo
mov
dec
dec
mov
loope
add
cltd
or
sti
cmpl
xor
xchg
sub
lret
cmp
loopne
jl
or
out
scas
and
pop
xor
mov
dec
mov
and
mov
fs
scas
jl
data16
adc
cmp
cmp
sbbl
push
das
aam
aad
jo
mov
lahf
add
jae
pop
inc
mov
in
arpl
ret
imul
dec
out
pop
mov
out
push
inc
ja
jne
jge
movsb
loop
lea
pushf
mov
mov
notb
inc
dec
and
repnz
jns
dec
das
repnz
xor
lea
mov
stos
xlat
sub
and
arpl
mov
dec
orb
ljmp
mov
push
xchg
cmc
jl
movsb
xchg
mov
insl
lret
mov
sbb
lock
or
outsl
leave
push
dec
cltd
add
movsl
.byte
