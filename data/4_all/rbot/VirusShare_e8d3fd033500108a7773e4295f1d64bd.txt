xorb
push
push
imul
mov
adc
and
xor
pop
mov
mov
ds
out
push
mov
mov
js
daa
lahf
and
fsubrs
cs
ret
or
cmc
jb
sbb
pusha
or
ficoml
push
outsl
cltd
lret
xor
shrb
and
and
cmp
cmp
mov
lds
mov
or
nop
and
jle
ret
lretw
xor
dec
jo
dec
hlt
leave
mov
arpl
out
adc
aas
leave
cmp
push
xrelease
mov
mov
popf
out
jg
test
jae
adc
rol
xlat
std
lret
mov
sbb
divb
adcb
inc
mov
mov
in
sbb
lea
dec
call
aad
insl
push
test
pop
xor
int
jp
nop
or
add
inc
xor
lcall
mov
dec
sbb
or
or
call
xchg
sahf
push
pusha
push
sahf
imull
rol
call
or
jg
sbb
jecxz
add
jae
mov
in
jo
data16
negb
repz
push
mov
dec
lahf
mov
push
sbb
add
push
mov
aam
and
loopne
popf
pop
je
sub
mov
repz
fcomps
test
stc
mov
popf
mov
subl
outsl
dec
mov
sahf
sub
pusha
arpl
jge
cltd
cmp
dec
sub
xor
pop
push
movd
rclb
mov
dec
vpsubb
idivl
loopne
mov
and
inc
aaa
cmp
push
xchg
sbb
nop
addb
cli
int3
jmp
xor
jmp
les
shr
jle
push
push
pop
xchg
pop
in
sbb
push
lods
xchg
pop
mull
in
xchg
cli
jge
std
test
stos
xchg
fnstsw
or
dec
fnsave
lahf
aas
sbb
add
mov
nop
cld
pop
push
jmp
xor
and
js
add
fwait
ljmp
xchg
mov
shl
push
ja
loop
shrb
dec
push
add
ds
sahf
lret
mov
repnz
pop
enter
mov
inc
dec
add
scas
inc
pop
mov
popf
lret
xor
cmp
das
dec
mov
jl
dec
inc
xor
sahf
loop
outsb
push
das
sub
add
nop
insb
and
cwtl
xor
xchg
aas
inc
sub
jo
pop
icebp
jno
or
ret
sbb
pushf
cmp
push
mov
dec
push
mov
sbb
add
sub
scas
xchg
dec
mov
push
js
pop
adc
adc
add
jae
in
push
jo
lea
mov
sbb
cli
mov
loop
jo
arpl
test
cli
fisubrs
jns
enter
ds
inc
decl
out
push
cmp
xchg
scas
cld
add
stos
or
js
jp
dec
sub
and
rorl
mov
xor
and
std
cvtdq2ps
dec
jnp
xor
ret
mov
xor
out
mov
mov
shlb
add
inc
inc
mov
cmpb
inc
pop
dec
fidivrl
jp
sarb
sbbl
lock
in
sbb
lcall
adc
mov
idivl
jae
add
out
pop
mov
push
cmp
in
scas
mov
test
into
or
dec
sti
pushf
or
xchg
shrl
les
outsb
shll
sahf
and
rcrb
in
xchg
outsb
lahf
sbb
pop
std
jmp
mov
lds
and
mov
gs
ret
inc
pop
clc
test
aas
push
mov
das
cltd
leave
xor
adc
xor
aas
pop
xlat
movsl
rolb
rcr
dec
fcmovb
cmp
adc
fs
pop
ljmp
mov
sub
cmp
and
in
xchg
fstpt
test
loop
mov
push
lret
push
pop
inc
cmp
mov
hlt
iret
in
xchg
push
and
push
jge
xor
les
rorl
push
lcall
jnp
mov
les
mov
jnp
nop
pop
jnp
jno
sbb
in
leave
cld
scas
sbb
push
push
jbe
push
lcall
divb
addr16
fdivl
adc
adc
mov
inc
xor
mov
call
pop
dec
sub
sbb
les
mov
cmpl
nop
out
mov
jmp
push
lea
and
inc
ljmp
jno
idivb
mov
xor
add
inc
ret
and
cld
fiaddl
pop
aam
movsb
nop
je
jmp
cmpsl
xlat
cwtl
shlb
mov
cld
inc
lret
xchg
andl
dec
or
or
mov
ljmp
mov
mov
sbb
lock
mov
xchg
movsl
inc
loope
outsb
cmp
outsb
sub
test
mov
adc
xchg
mov
in
adc
push
xor
fs
setae
loop
mov
daa
scas
movsl
mov
lock
push
pop
test
into
jl
fcomps
lea
and
sbb
xorl
xchg
push
std
jmp
push
es
mov
xor
daa
jnp
loope
loop
xor
fisubs
ret
pmulhuw
faddl
mov
xchg
leave
pop
sbb
clc
call
neg
or
gs
stos
ljmp
jne
into
decb
cs
test
mov
aad
mov
mov
fcoms
repnz
out
ds
cmp
jge
out
mov
ret
mov
mov
aaa
jns
addr16
mov
xor
dec
movsb
pop
out
or
cmpsl
loopne
cmpsl
mov
xchg
dec
push
aas
or
cwtl
stos
inc
jmp
xchg
pop
and
test
and
xor
xchg
dec
mov
ljmp
in
inc
mov
or
cli
ret
aas
stc
loope
mov
xchg
mov
adc
push
fwait
dec
inc
sbb
movsl
lahf
jo
adc
icebp
sarl
cmp
and
mov
adc
xlat
repnz
and
hlt
int
sub
and
inc
lea
jmp
cwtl
sbb
mov
in
xchg
jecxz
test
xchg
mov
jle
adc
fstps
lods
or
mov
dec
push
in
cwtl
lods
mov
jp
fwait
or
out
inc
and
mov
and
cmp
cs
out
ffree
mov
xlat
xchg
lahf
mov
repz
fwait
lock
cmp
mov
int3
cmp
or
mov
sub
cmp
testb
rolb
pop
scas
lret
adc
std
sarb
inc
jne
jbe
cmp
inc
push
adc
mov
or
xchg
movsb
mov
pop
pusha
mov
cmpsb
add
cmpsb
sbb
jae
inc
xchg
test
add
lret
loope
jmp
int3
cld
or
gs
xchg
rcll
aaa
push
fisubrs
cmp
push
pop
imul
or
mov
mov
mov
sbb
xchg
dec
pusha
cli
into
icebp
mov
leave
lods
subl
test
or
push
cli
pushf
arpl
cmpl
addl
jbe
nop
stc
mov
push
cmovno
iret
test
dec
leave
hlt
cmp
aas
btc
pop
dec
adc
sub
daa
push
jbe
pop
outsl
dec
add
bound
pusha
data16
and
in
push
jg
lret
jbe
ljmp
cmp
shrl
jns
mov
pushf
test
adc
xlat
mov
pop
out
insl
movsl
jle
imul
into
std
jp
add
xor
cmpsb
dec
stc
cld
jmp
xor
out
mov
in
out
or
mov
xorps
xorb
ss
insl
inc
out
mov
test
mov
sbb
mov
test
lds
inc
call
out
cmp
imul
push
out
sahf
lahf
lock
inc
mov
jnp
adc
adc
dec
mov
mov
lahf
xchg
jecxz
sub
or
sbb
add
and
dec
jg
jnp
dec
push
sub
xchg
cmpsl
div
sbb
add
jnp
fcmovnu
push
xorb
and
or
mov
add
inc
stos
lods
mov
pop
xor
ret
mov
inc
inc
pop
jmp
outsl
test
pop
sti
mov
sbb
dec
adcl
ds
add
cmp
adc
jmp
shlb
jmp
mov
cmp
mov
cmp
mov
dec
adc
mulb
fmuls
or
push
xchg
xchg
add
cltd
test
loopne
mov
sbb
xor
push
js
shlb
daa
add
adc
mov
and
adc
sbb
jns
scas
out
add
adc
aaa
push
es
fiadds
lock
jecxz
adc
xchg
mov
lock
lahf
es
nop
inc
push
jl
call
sbb
pop
pop
mov
cli
aaa
scas
inc
sar
dec
leave
test
lret
and
test
lret
pusha
xor
pop
or
sbb
or
sub
repz
inc
cmpb
push
mov
push
iret
lret
cmp
jne
rcl
mov
mov
icebp
xor
fwait
std
pop
xchg
xchg
cmc
stc
test
call
shll
dec
sbb
dec
neg
lds
insb
sahf
cmc
xchg
ret
push
pop
outsl
sbb
xor
in
inc
xchg
mov
mov
repnz
dec
mov
test
out
inc
push
xchg
test
mov
add
loop
mov
push
fsubr
repz
or
sbb
cli
jno
jne
dec
je
sbb
push
jg
lods
and
push
add
cmc
fsubl
mov
jl
aas
outsl
mov
jle
add
cmc
inc
jmp
and
icebp
jns
xor
lret
in
mov
or
or
or
cmpsb
pop
in
jge
outsl
jl
mov
aam
pop
push
and
fcmovbe
pop
mov
sbb
pop
test
movsb
cli
jne
ds
sub
addr16
push
sbb
stos
jnp
iret
push
lahf
sub
cli
jp
call
xchg
lcall
pop
inc
repnz
jmp
movsb
adc
movsl
push
fwait
lea
or
adcl
call
cwtl
je
mov
mov
movsl
add
out
les
lahf
adc
sub
int
xchg
lcall
mov
int
flds
sub
pop
mov
in
addr16
and
jecxz
fucomp
push
wrmsr
push
push
pop
lods
inc
sub
sbbb
adc
adc
inc
ljmp
push
inc
pop
dec
popa
fnstsw
cmpsl
adc
jg
sbb
or
fst
sbb
push
dec
adc
icebp
aad
into
ret
push
lods
imul
cmp
sbb
lret
dec
std
je
scas
imul
mov
popf
mov
cmpsl
sbb
or
bound
rolb
adc
aam
or
pop
fs
dec
mov
out
pop
jl
fmuls
pop
sbb
les
xor
sbb
and
inc
in
fs
cmp
jno
sarl
push
pop
xlat
sahf
ja
leave
jge
adc
test
fcoms
cmpl
mov
or
cmp
les
mov
add
bound
ds
pop
pop
sub
push
jae
mov
push
jno
loopne
mov
retw
cli
fildl
adc
mov
adc
enter
mov
jle
push
add
test
xor
aad
xchg
inc
xor
dec
adc
dec
subl
push
jg
add
fwait
mov
ja
test
push
mov
mov
and
sti
stc
pop
push
lods
or
or
add
fisttpll
leave
cltd
filds
sbb
fisttps
sbb
ljmp
pop
cmp
fmuls
cmp
jo
jle
and
mov
xor
mov
out
shlb
fs
lods
pop
mov
test
and
pop
cmpsl
xlat
rcrl
push
jb
lret
lcall
and
adc
and
adc
sub
push
adc
scas
testb
movsb
mov
pop
out
addr16
ljmp
orb
inc
fdivrs
in
pusha
pop
call
push
jecxz
dec
jmp
dec
or
in
fsubs
add
mov
adc
imul
popa
and
pop
into
fcoms
xor
xlat
aam
je
mov
cmp
pop
dec
mov
scas
cmp
sub
outsl
xlat
lock
xchg
fists
push
xorb
xor
jl
dec
pushf
out
mov
stc
pushf
imull
dec
movsb
lret
int
decb
mov
in
in
nop
xchg
xchg
jo
inc
ret
push
call
jge
jmp
call
leave
inc
out
cmp
cmpsl
arpl
aad
lods
adc
xchg
add
mov
out
pop
fs
adc
data16
nop
pop
dec
clc
hlt
or
scas
xchg
pusha
data16
test
mov
negb
push
mov
mov
mov
inc
fs
push
subb
sub
push
lods
std
mov
inc
mov
out
mov
add
push
or
jae
pop
mov
negb
lods
sub
cltd
pusha
arpl
lea
mov
cmc
xor
out
cmc
lods
jb
ja
aas
jae
inc
icebp
xchg
push
or
push
mov
bound
adc
xchg
mov
ljmp
inc
or
push
dec
int
out
cld
popa
std
int
popl
ret
aas
adc
cmp
push
jno
sbb
subb
lahf
pop
xchg
pop
or
fmuls
arpl
jg
cmp
popf
test
dec
stc
jg
hlt
rol
in
pop
fisttpl
outsb
push
adc
lods
mov
fdiv
jae
cwtl
jne
notl
or
enter
ret
in
int
push
pop
jnp
pop
jno
test
sti
mov
xchg
add
mov
sub
pop
mov
mov
jmp
in
ret
cmc
mov
mov
mov
cld
sahf
movntps
mov
xchg
mov
lahf
stos
js
test
icebp
inc
lret
mov
stos
mov
dec
loop
jmp
shrb
cmp
and
repnz
fnstcw
pop
icebp
out
push
int
mov
roll
dec
mov
divb
pop
pushf
or
not
dec
lds
aam
imul
adc
test
out
loope
fbld
insl
pushf
xchg
les
push
mov
je
ud0
adc
imul
pop
and
mov
mov
adc
sub
dec
mov
ficoms
roll
adc
stos
pop
pushw
out
into
add
test
dec
nop
outsb
in
ss
pop
fwait
jae
cmp
cmp
repnz
jmp
adc
ret
lods
sbb
jnp
out
add
add
or
jne
insl
xchg
xchg
jno
xor
mov
inc
repz
cmp
mov
mov
int
addb
xor
lcall
sub
fistps
mov
mov
lcall
cs
sbb
push
lods
mov
fisttpll
ss
data16
out
hlt
addr16
stc
adc
test
cld
dec
into
xor
add
lods
movsb
xor
ljmp
jae
icebp
jo
cmp
fistpl
push
insl
sub
out
sahf
repnz
dec
mov
dec
arpl
out
std
mov
in
cmp
fs
pop
js
jnp
push
fcomi
jg
outsb
sbb
mov
pop
add
jae
sarb
add
add
mov
jns
lds
inc
push
xchg
insl
rcl
jae
int
inc
imul
loop
addr16
and
pop
inc
testb
repnz
divb
lcall
cmp
sbb
pop
sahf
sbb
cmp
es
cs
push
aam
in
lods
test
outsl
xor
push
cmp
pop
sti
dec
lea
ja
in
dec
adc
pop
fsubr
addl
add
icebp
mov
or
rcrb
popf
xor
jo
pop
adc
cld
and
stos
pop
mov
push
jns
mov
mov
in
rcr
pop
sub
ficoml
mov
add
mov
lcall
repnz
cld
sub
sub
pop
loop
loope
mov
cwtl
mov
mov
xor
and
inc
bound
jns
mov
movsl
adc
add
cwtl
adc
jne
adc
stos
outsl
pushf
and
testb
out
sbb
rcrl
jmp
pop
lods
pop
adc
dec
add
pop
inc
pop
jbe
mov
pop
inc
pop
push
pushf
cmpl
enter
lods
sbb
inc
mov
push
cli
fnsave
cmp
nop
lcall
fsubp
fnstsw
lret
shll
nop
sub
pop
leave
popa
loop
lret
ljmp
divb
bound
icebp
mov
inc
mov
scas
mov
notb
sbb
mov
les
cmp
mov
lcall
and
in
outsl
imul
stos
outsb
fbld
pushf
mov
jb,pt
lret
fldenv
cmp
xor
push
and
movl
inc
mov
or
into
adc
and
mov
push
pop
push
test
xchg
ja
and
dec
mov
and
mov
add
xor
add
mov
subb
cmp
mov
lods
shll
test
std
popf
jmp
imul
in
in
pop
jno
imul
pop
test
dec
popa
inc
dec
and
in
add
xor
iret
scas
je
cmpsb
repnz
sbb
jne
jne
call
std
and
inc
scas
adc
jmp
push
jp
push
or
or
lods
jl
sbb
and
inc
xor
imul
or
cmp
xor
pop
clc
fwait
xchg
jmp
xchg
push
dec
mov
sub
dec
pop
out
mov
push
push
mov
cmc
ljmp
add
mov
in
mov
loopne
das
fdivr
adc
mov
enter
cwtl
loope
mov
call
sub
xchg
clc
dec
shlb
loope
lahf
dec
xchg
mov
sbb
ja
xchg
push
sbb
loopne
or
xchg
push
ud1
fimuls
mov
lds
nop
inc
inc
cmp
mov
out
lods
out
dec
test
cld
pop
xchg
cmp
push
nop
mov
adc
push
gs
or
pop
add
dec
sbb
inc
cmp
adc
popa
aam
out
adc
ljmpw
adc
push
push
mov
add
cmp
not
idiv
shrb
rcr
ret
sbb
inc
fs
mov
movsl
and
into
lods
jo
psrlw
mov
pop
fdivrs
cli
shll
pop
pop
jecxz
push
jle
fcomp
lock
xor
xchg
pop
cld
loope
xor
and
pop
daa
lahf
imul
push
mul
es
cmp
cld
insb
call
cmp
and
xlat
dec
call
pop
shl
sbb
push
mov
xchg
dec
sbb
cmc
ret
ret
mov
jg
cmp
lods
pop
popl
mov
mov
push
cmc
and
jmp
jl
lret
pop
outsb
pop
jle
lret
and
push
adc
mov
add
test
xchg
inc
push
sbb
xchg
insb
rorl
pop
push
stos
or
fistpl
pop
pusha
in
lock
sub
jnp
bound
mov
mov
sti
push
dec
imul
and
std
insl
sub
lods
jbe
ljmp
ljmp
xlat
mov
cmc
xchg
das
cli
cmp
icebp
push
aas
inc
cli
jne
and
insl
jge
cmp
mov
ljmp
std
dec
sbb
in
aad
add
jg
popw
adc
lock
outsl
dec
cld
cmp
jmp
push
dec
incb
sub
cmp
rorl
movsb
cld
mov
jb
iret
fidivrl
xlat
pop
sub
repnz
adc
or
bound
sbb
fs
mov
out
add
std
dec
jnp
push
roll
testb
shr
and
outsb
jmp
sub
add
inc
addr16
mov
daa
cld
push
mov
cmp
or
shlb
sub
cwtl
insl
sbb
daa
or
add
add
into
movsl
and
jnp
cmp
cmpsb
adc
ja
and
loop
dec
jl
imul
cltd
mov
pop
xor
push
cmp
seta
ret
movsl
mov
notb
sub
enter
loop
aas
in
test
js
data16
sbb
std
jnp
shrd
pop
fnstsw
fnstcw
xchg
xor
int
sbb
clc
repnz
movsl
adc
and
rorb
or
aas
lea
mov
int
outsb
les
add
sub
cmp
in
mov
cltd
sbb
xor
sbb
sbbl
cltd
jo
pop
lahf
pop
xor
pop
jb
mov
out
mov
adc
ret
subb
or
ds
stos
testb
sbb
cmc
jns
sbb
push
sbb
fwait
push
insl
ds
inc
std
pushf
repnz
imul
or
adc
rorl
fists
mov
es
xor
adc
dec
cmc
test
or
fstps
inc
cmp
add
cmp
xor
push
in
jg
loope
mov
mov
sub
sub
leave
mov
cld
addl
pop
adc
adc
and
dec
scas
in
insb
idivb
jo
es
mov
jecxz
mov
mov
cmp
sbbb
int
pop
pop
mov
cmc
test
shll
sahf
push
shll
sub
xor
jnp
dec
dec
xor
out
sub
pusha
hlt
xor
dec
shll
and
ja
ret
arpl
out
mov
push
inc
cmc
leave
pop
pop
or
popa
or
push
xchg
mov
push
cmp
xor
mov
push
pop
sarb
pop
xchg
mov
sahf
mov
xchg
and
xor
add
jbe
test
xorl
jl
sarb
jne
or
int
inc
fistps
out
fnsave
mov
jns
inc
pop
push
fwait
mov
repnz
lods
mov
hlt
or
imul
stc
pop
mov
adcb
mov
testl
dec
xlat
out
shr
nop
outsb
stc
inc
dec
push
fxch
sbb
pslld
pop
fldcw
outsb
fisubrs
pop
cltd
ret
xchg
test
jl
mov
xchg
jg
sub
sbb
jl
leave
mov
add
fildl
adc
sub
out
daa
pushl
inc
mov
clc
icebp
sbb
ds
stos
ja
jbe
xchg
pop
jbe
xchg
xchg
lods
xor
xchg
dec
mov
mov
mov
dec
lods
daa
pop
enter
into
mul
mov
mov
xor
push
mov
test
jecxz
mov
adc
std
fnstcw
inc
shrl
inc
push
mov
dec
enter
imul
sbb
pop
shrl
pop
repz
into
sbb
cmpsl
sbb
add
test
push
hlt
cs
jl
adc
push
sbb
popa
test
pushl
xchg
dec
repz
iret
dec
inc
clc
xchg
pop
mov
and
fadds
jno
adc
add
daa
daa
std
sbb
sbb
jo
sbbb
jmp
add
test
sub
xor
cmp
arpl
push
jne
enter
inc
incb
mov
mov
push
pusha
call
pop
push
fidivl
std
lea
fmull
inc
lret
cmp
shr
flds
xchg
lahf
xor
add
mov
lods
pop
push
lret
lahf
xlat
or
adcb
pop
dec
stc
popf
scas
in
out
cmp
aas
imul
add
cmpsb
orl
in
fistpll
lds
xchg
fiaddl
ss
mov
cmp
aas
mov
adc
mov
enter
mov
enter
lds
lcall
testb
xor
cmp
mov
jmp
jo
outsb
lods
pop
mov
loopne
pop
test
or
cltd
icebp
mov
clc
push
xor
lock
rolb
xchg
outsl
out
fnstsw
enter
leave
pop
or
pop
jno
addr16
xor
insb
mov
mov
je
add
sti
cmp
pop
aad
pop
mov
mov
and
pop
movsb
pop
sub
mov
ret
mov
mov
in
adc
sub
xor
mov
enter
jge
mov
sbb
sbb
in
or
mov
cmp
and
loope
into
jb
or
jmp
pop
push
lret
scas
cld
test
das
push
aad
dec
fst
dec
inc
sub
and
fildl
mov
lcall
hlt
dec
ret
out
or
dec
sti
xchg
aas
mov
popw
aas
gs
ljmp
jnp
iret
sub
outsb
adc
out
fisubl
loope
pushf
loopne
popa
arpl
dec
adc
mov
xchg
sub
sahf
jmp
mov
out
sbb
imul
mov
push
and
pushf
insl
dec
xor
arpl
and
pop
aaa
adc
repnz
mov
jns
aas
aad
das
xor
lds
shlb
sub
inc
fwait
hlt
xor
xchg
clc
outsb
lcall
aam
lahf
lahf
mov
fs
pop
rcrl
pop
data16
bound
repz
xor
fsubs
pop
mov
cmp
cwtl
xchg
lret
orb
xchg
or
scas
xchg
je
xor
fisttps
pop
or
sub
or
or
out
pop
add
mov
rclb
sub
mov
mov
out
pop
add
inc
fisubs
dec
push
lods
mov
jne
movsb
jl
jmp
jle
mov
xchg
sub
mov
ja
dec
mov
pop
push
sar
mov
in
insb
outsl
xorb
test
push
pushl
push
out
fimuls
imull
fstpl
sub
and
add
mov
sahf
loop
mov
lods
lret
enter
std
jmp
push
or
cli
daa
je
or
loop
sub
dec
mov
orl
fimuls
pusha
or
add
mov
adc
mov
xor
jl
daa
arpl
push
test
pop
hlt
aas
sbb
mov
mov
pop
outsb
push
or
cmp
jg
ja
cmp
aam
adc
aas
pushf
mov
gs
ds
pop
gs
mov
fisttps
sbb
sbb
addr16
mov
and
and
dec
insb
pop
pusha
repnz
mov
sahf
out
aaa
mov
sti
shrl
and
hlt
out
std
ret
dec
push
mov
mov
push
in
out
mov
add
or
andb
mov
dec
test
lods
test
sbb
test
push
push
or
int
or
dec
inc
sbb
pop
xlat
sbb
pop
fiadds
mov
dec
iret
decb
aas
pop
rolb
and
shl
shlb
fdivrs
jnp
ror
mov
test
inc
sbb
mov
js
das
add
lods
cmp
push
sub
push
sub
or
add
pop
or
lret
imul
cmp
ret
aaa
and
ret
jnp
data16
orl
test
loopne
add
cmp
push
lods
lock
mov
lods
push
or
inc
or
arpl
xchg
add
fistpll
lock
lods
mov
sbb
push
add
das
xchg
and
stos
and
jae
cmpl
mov
mov
enter
adc
out
mov
xor
loopne
insb
add
fcomi
mov
ret
leave
cmpsb
sub
pop
add
sbb
je
popf
cmp
xchg
orb
fwait
test
lahf
stos
pop
adc
cmp
cmpsl
sub
jp
xchg
out
sbb
dec
and
mov
in
mov
insb
fisubrl
add
loop
mov
lods
jno
notl
nop
jg
dec
loop
cmc
xor
jne
mov
popf
jl
lcall
xor
lock
mov
filds
push
clc
inc
fstps
jno
call
xor
aad
inc
adc
push
mov
int3
fwait
jg
mov
pop
jno
scas
push
mov
das
mov
sub
bound
orl
sarl
add
lcall
test
cmp
das
bound
imul
mov
icebp
mov
in
inc
add
lds
and
dec
andb
xor
scas
out
inc
push
aas
mov
push
mov
xlat
add
mov
mov
in
test
sub
or
xor
sbb
dec
inc
cmpb
leave
cmp
cmp
leave
mov
push
fcomps
incb
outsb
mov
cmpl
mov
fwait
mov
cmpsl
enter
xor
cmp
mov
imul
sbb
xchg
test
push
xor
fdivl
cmp
mov
jae
xor
insb
cmp
mov
mov
mov
jg
int
adc
lock
adc
jle
enter
pop
jnp
adc
xchg
and
dec
jle
cmp
stos
lcall
or
add
cmc
inc
outsl
std
or
insb
inc
fisttpll
add
mov
xor
xor
inc
xchg
sub
sahf
and
ret
scas
and
out
shrl
sar
add
mov
aam
jno
iret
cmp
jecxz
adc
sbbb
in
loope
aaa
cmp
cmp
loop
mov
push
or
dec
cs
movsb
sbb
test
inc
sub
mov
add
jle
jp
pop
test
arpl
mov
or
or
xor
push
out
lods
enter
aaa
aad
shrb
xor
daa
in
xchg
add
jl
and
xchg
mov
fcmovbe
pusha
cltd
cld
sub
xchg
jmp
and
sbb
outsb
dec
mov
imul
push
sub
inc
subb
lcall
inc
jge
or
les
jge,pn
cli
cld
jnp
fistpll
ret
xchg
mov
fldcw
pop
jg
psubb
out
fistpll
and
repz
inc
cmp
push
jb
mull
ja
xchg
push
sbb
cmp
jb
adcl
loop
imul
outsb
sub
repz
cli
or
push
sbb
xchg
test
mov
pusha
js
push
sub
pop
jge
sub
add
mov
pop
push
jg
fldl
arpl
xchg
daa
jle
xchg
mov
mov
scas
int
mov
xchg
loop
cmp
or
sti
mov
fwait
mov
fildl
pop
mov
loop
inc
addr16
mov
jne
cmp
lds
mov
jae
aam
sub
enter
test
lods
cmp
iret
repz
jp
push
int
loope
mov
xchg
push
loope
mov
pop
add
push
cli
repnz
pop
scas
stos
cmp
cmpsb
cmp
outsb
cwtl
out
cmc
or
inc
shlb
dec
sbb
cmp
sub
cmpsb
add
xorl
xchg
mov
xorb
outsl
sub
scas
jne
shr
xor
or
aam
nop
xchg
stos
int
add
fadds
fadd
faddl
xor
cmpb
jnp
jb
test
pop
adc
ret
jno
push
lret
imul
vpsubsb
mov
mov
sub
mov
paddsw
ss
hlt
nop
mov
sbb
jp
cltd
fs
xor
sarb
push
ljmp
xlat
inc
jbe
mov
lds
clc
mov
cld
xchg
or
sub
mov
imul
push
sbb
cmc
fidivs
je
sbb
push
rorb
fwait
xor
loopne
bound
mov
fidivrs
clc
sbb
jne
mov
jmp
mov
cmpsw
stc
rcll
fadd
sahf
or
and
xor
pop
mov
repz
cmp
ret
nop
inc
mov
mov
cmp
lods
and
popa
jp
sub
cs
shlb
lock
pusha
mov
jne
or
xchg
cmc
or
mov
sbb
jp
mov
iret
stos
push
inc
inc
bound
fs
add
scas
out
std
jecxz
cltd
cmp
std
out
sahf
insb
jbe
test
out
mov
rcrl
mov
push
mov
cs
dec
dec
adc
and
mov
dec
add
and
sub
or
xlat
xchg
fisubrs
mov
lds
sub
cmp
out
dec
or
rcr
dec
out
scas
sub
ja
imul
sbb
dec
xlat
jmp
mov
or
clc
mov
sbb
clc
pop
rcl
sbb
add
idivb
lret
push
jno
xor
inc
mov
mov
daa
hlt
into
cs
inc
femms
dec
jns
icebp
and
fsub
insb
ret
aam
and
std
out
or
insl
inc
mov
add
inc
mov
push
aas
stc
sbb
insl
stos
rorl
int3
fists
sub
mov
jmp
mov
dec
mov
movsb
sub
sub
mov
test
sti
adc
mov
mov
mov
ja
popf
mov
repz
cs
arpl
adc
push
repz
out
adc
mov
cmpl
nop
movsb
cmpsb
dec
addb
pop
cmp
lahf
shlb
xchg
mov
aas
jae
lods
xchg
xchg
cmp
cli
push
stc
loopne
sbb
pop
push
sti
sahf
jns
and
dec
inc
sub
daa
dec
inc
mov
les
test
ljmp
push
add
add
sbb
pop
jmp
push
mov
add
push
sub
pop
sbbl
cli
or
adc
inc
push
lahf
fisubrl
mov
fucomi
ss
xlat
jg
jns
jle
movsl
jecxz
pop
or
call
inc
dec
pushf
les
jno
out
lret
shlb
sub
ret
add
and
jmp
mov
sub
cltd
jl
push
outsb
es
mov
xchg
cmp
addl
cwtl
subl
dec
and
adc
or
push
jb
lret
lcall
mov
inc
mov
add
insb
mov
call
je
xlat
cwtl
dec
cmp
and
jae
xchg
daa
xlat
or
stos
push
add
pop
or
mov
addl
fidivl
jo
mov
aaa
xchg
jle
pop
and
adc
iret
jmp
mov
mov
dec
or
push
xchg
jnp
jnp
lds
int
adc
addl
adc
lahf
mov
and
test
stos
add
pop
aam
mov
push
jae
mov
adc
sbb
dec
sub
aas
gs
mov
inc
out
add
scas
or
fistps
jae
aad
xchg
cmp
outsl
ss
je
mov
adc
mov
pop
mov
rcrb
jnp
mov
lahf
cmpsb
popa
adc
cmp
out
in
dec
add
or
leave
inc
cmp
mov
mov
mov
sbb
sahf
ret
pop
inc
test
pusha
pop
into
outsl
sub
daa
mov
pop
cmp
push
xchg
cmp
sbb
lret
sub
or
cmpsb
push
sub
jp
iret
lea
stos
adcb
cmp
cmp
or
scas
jne
xorl
stos
cli
loopne
adc
fcoml
aas
dec
test
insl
dec
push
add
pusha
fwait
sbb
jecxz
push
cmpsb
push
call
sti
sub
add
sbb
mov
xor
pop
jge
daa
fcoms
jecxz
aad
loopne
outsl
mov
popf
mov
enter
int
cmp
pop
pop
iret
sub
dec
pop
rorl
mov
sarb
popf
lahf
xchg
cmc
inc
fs
push
lret
je
int
mov
adc
mov
call
imul
add
dec
jmp
fcmovnu
js
call
dec
mov
xchg
dec
cmp
aaa
dec
mov
xor
movsb
jg
aam
mov
je
jb
imul
sub
dec
push
mov
fucomp
repz
or
jge
add
mov
mov
cltd
xchg
bound
push
fadd
adc
cmpsb
xor
idivl
shr
dec
int
test
and
cmp
mov
dec
xchg
jne
and
push
mov
inc
jnp
movsl
jnp
push
and
or
jl
add
sbb
js
insb
popa
pop
lret
mov
lods
push
orl
dec
mov
add
pop
into
cmp
lea
inc
sbb
pop
ss
iret
rclb
adc
adc
jmp
repnz
push
pop
mov
add
daa
loope
mov
jne
in
insl
fldenv
aaa
xor
lret
enter
mov
mov
adc
cmpl
mov
dec
or
mov
pop
movsl
inc
xlat
ret
xchg
mov
seto
adc
push
xor
cld
jne
jl
outsb
jp
mov
adc
pop
sub
iret
and
push
dec
inc
test
mov
add
mov
inc
sbb
lret
xor
rcll
push
mov
push
mov
add
cs
in
std
jecxz
jns
imul
test
ss
push
shl
push
jbe
push
push
mov
dec
inc
mov
aam
lods
xor
xchg
cmp
rorb
ret
stos
sbbl
mov
pop
test
aam
nop
imul
fadd
mov
xlat
sbb
jae
add
faddl
es
push
ss
cmp
mov
inc
ds
pop
xchg
aad
cmp
ss
xchg
push
into
sub
out
scas
adc
mov
jnp
sahf
mov
xchg
xor
loopne
inc
jmp
cli
dec
push
fdivl
das
es
insl
or
dec
mov
and
ljmp
imul
not
loopne
pushf
fisubrs
in
decb
pop
sbb
js
loope
stos
movsb
pop
psubusw
jmp
loopne
sub
or
inc
dec
sub
das
ret
aaa
jecxz
sub
mov
add
loop
fcoml
stc
push
add
cmp
mov
out
cwtl
xlat
mov
dec
arpl
mov
push
cmp
push
jae
sbb
xchg
test
daa
std
dec
scas
int3
insb
repz
dec
inc
in
hlt
or
inc
nop
add
inc
sub
sub
fsubs
mov
mov
and
ss
pop
imul
xchg
cmp
in
cmc
sub
push
imul
ror
mov
sub
sbb
fdivrs
inc
lret
cs
dec
leave
addr16
scas
outsb
sub
sbb
int
stos
mov
jae
xchg
mov
insl
and
fisubl
mov
test
arpl
xor
rcr
ljmp
ja
push
test
or
pop
das
hlt
mov
cmc
adc
jecxz
inc
lods
hlt
pop
cmp
cltd
cmp
rcll
mov
enterw
sbb
and
push
or
jb
dec
test
sub
imul
js
xor
mov
mov
movsb
xchg
mov
jae
or
mov
mov
data16
mov
out
inc
cld
and
addr16
cmp
in
mov
lret
in
ss
hlt
sbb
sbb
repnz
mov
jo
in
pop
xchg
push
jb
out
xor
add
sahf
testb
pusha
cmpsl
cwtl
mov
dec
leave
mov
scas
addr16
or
nop
addl
dec
lret
or
adcl
or
xor
call
mov
fs
push
cwtl
jge
arpl
xor
xor
add
cmp
cmp
cli
mov
jl
call
cmp
aam
sbb
mov
pop
jmp
lods
shrb
incl
std
ds
mov
adc
repz
mov
fadds
jne
adc
mov
mov
std
fnstsw
arpl
adc
cltd
add
loop
aam
cmpsl
xor
push
inc
jo
inc
xlat
add
movb
invd
mov
insl
iret
sub
jg
fimuls
jne
jb
xchg
mov
loopne
jne
dec
mov
lcall
mov
loopne
add
push
pop
mov
stc
pop
dec
test
xlat
shlb
xor
subl
scas
jl
daa
dec
outsb
into
xchg
enter
cmpsb
mov
scas
xchg
into
cltd
sub
pop
pop
dec
push
inc
push
add
fwait
ror
insl
aam
cmpsl
xor
int
jp
repz
mov
or
movsl
jno
xlat
roll
stc
push
dec
dec
arpl
push
aaa
das
subb
leave
les
sbb
lahf
push
pusha
enter
arpl
mov
fwait
push
pop
adc
sahf
or
icebp
test
ds
mov
xlat
lods
in
in
es
in
das
jns
pusha
xchg
lret
jb
add
lret
mov
lock
in
sarb
cltd
imul
orb
jo
stos
pushf
imul
outsb
movsb
cmp
jns
mov
mov
jp
insb
fsubrl
jle
pop
lea
cmc
leave
in
fwait
aam
push
lret
adcb
cli
push
and
lods
cmc
stos
dec
jecxz
cmpsb
std
pop
adc
scas
aam
add
ficoms
out
inc
loope
cmpsb
mov
cmp
sub
and
decb
jb
push
ja
bound
cwtl
adc
in
adc
rcrl
stos
push
pop
xchg
inc
pop
aas
inc
aas
bound
leave
pop
inc
push
imul
add
clc
sbb
rol
dec
push
aad
pop
mov
add
in
mov
mov
add
dec
mov
insb
adc
idivb
jnp
cmp
in
jge
and
shll
icebp
fs
imul
sbb
mov
push
and
movsl
jns
mov
jno
loope,pt
mov
pop
xchg
fisubs
cli
ret
add
jno
mov
or
dec
sbb
test
insb
outsl
mov
std
dec
icebp
sarl
jp
sti
rep
adc
mov
pop
ljmp
pop
cmpsb
or
stos
sbb
add
pop
and
cmpsl
cmovl
inc
adc
repnz
mov
stos
push
je
and
dec
lods
lcall
push
les
iret
cmp
and
xor
scas
add
add
idivl
mov
sti
test
cltd
inc
pop
mov
jae
pop
xchg
push
adc
mov
jecxz
enter
stos
jo
push
pop
jp
orb
lods
xchg
xchg
adc
fidivl
sbb
jno
mov
cmp
fidivs
mov
aas
and
mov
outsl
test
mov
in
jg
aam
push
pop
pushf
push
flds
add
mov
mov
inc
fs
aas
out
sbb
xchg
in
in
enter
arpl
fdivs
pushf
jg
popf
pop
xchg
movsb
xor
add
shl
stc
mov
xor
dec
mov
and
ljmp
jne
hlt
or
mov
jno
mov
push
not
pop
fsubr
jbe
mov
test
cmp
into
sub
sub
add
das
mov
dec
lods
inc
cmp
xor
push
cmp
aam
ds
inc
call
sbb
dec
rcrl
sub
pusha
xchg
mov
sub
pop
xor
repz
jmp
fnstenv
push
push
inc
ret
cmpl
sti
fstpl
and
out
addr16
rorl
xchg
lret
stos
negb
loope
pop
cmpsb
add
mov
xlat
sub
inc
inc
jbe
popf
loope
fcompl
add
cmp
sbb
je
jmp
mov
stos
sub
sarb
je
xor
fmull
dec
hlt
gs
insb
sbb
jne
inc
xchg
das
pop
xchg
es
jns
sbb
rorb
test
sti
add
fucomip
xchg
jmp
jne
mov
addr16
inc
fdivrp
mov
jmp
inc
inc
push
adc
jb
lock
lret
jne
jg
test
mov
pop
lret
mov
inc
or
xchg
mov
and
pop
pop
jge
and
jmp
scas
sahf
imul
fcomps
push
rcpps
scas
jb
data16
dec
mov
add
outsb
pop
dec
out
xor
jae,pt
sbb
mov
loope
xchg
cmp
pop
push
pop
lods
or
fstl
shll
or
aad
test
in
lret
dec
or
repnz
xchg
sbb
mov
sbb
cld
cmp
test
sahf
dec
sub
lods
fildl
aam
fcmovne
pop
popa
mov
fisubrs
out
add
sarb
aad
sbb
push
lds
insb
xor
icebp
xchg
test
into
testl
lret
int3
pop
rcrb
mov
punpcklwd
insl
push
inc
add
push
cltd
popf
arpl
fisubrl
and
mov
pop
das
in
ds
sbb
lds
movsb
xchg
jmp
mov
jge
shll
mov
mov
pushf
xchg
cmp
xchg
or
das
add
adc
mov
add
jl
popa
aam
push
xor
dec
xor
iret
adc
xchg
stc
adc
fimuls
mov
mov
lds
mulps
and
xor
fidivrs
mov
in
lock
cmp
sahf
test
test
mov
mov
ja
loop
push
cmpsl
cmp
mov
sahf
test
pop
enter
and
mov
loopne
lret
mov
jp
lret
cmp
je
pusha
inc
sahf
arpl
test
sub
and
push
cltd
and
jle
mov
inc
add
sbb
mov
loop
stos
sbb
pop
sbb
inc
sbb
icebp
in
push
mov
and
rorl
sbb
rclb
push
rcrb
popa
push
cmovle
sub
negl
dec
push
repz
xorl
xchg
clc
fisubrs
jg
loopne
adc
dec
data16
xor
rolb
xchg
mov
xchg
push
loope
arpl
inc
cltd
es
imul
arpl
orl
ss
aaa
into
out
and
sub
outsb
call
icebp
repnz
lods
pushf
stos
push
mov
ds
fwait
in
cs
fistpl
pop
push
pop
jne
mov
int
jecxz
sbb
adc
ret
ja
dec
out
es
adc
bound
outsl
aaa
pop
jp
and
or
jnp
jbe
scas
or
jb
leave
pop
in
test
aad
jmp
adc
pop
adc
mov
cmp
xor
add
mov
push
aas
out
xor
adc
insl
gs
xchg
insl
jl
out
xor
lock
xchg
stos
aaa
js
clc
leave
sbb
inc
adc
nop
les
pop
inc
jnp
repz
lods
dec
jg
mov
mov
add
dec
inc
xor
dec
ds
cwtl
mov
sub
jp
xchg
mov
into
xor
dec
xchg
mov
push
cs
outsl
test
add
mov
push
add
mov
lds
inc
into
ffree
jno
and
xchg
push
shrl
jno
out
mov
das
aas
in
mov
push
cmp
pop
test
popf
sbb
add
inc
je
jae
lahf
daa
adc
pusha
das
adc
jnp
push
gs
sti
imul
or
or
push
xchg
rcrb
pop
movsb
pop
and
inc
lahf
mov
orb
add
push
ljmp
and
push
jo
jle
std
pop
and
bound
loope
loope
or
xor
cld
or
mov
cld
clc
hlt
repz
ss
jl
mov
inc
sub
xchg
push
cld
gs
or
sbb
push
sub
push
loopne
jmp
pop
and
cmpsl
and
mov
cmpsl
xor
das
roll
sbb
lods
aas
mov
mov
mov
jge
ss
pop
jle
cmovl
or
adc
mov
jmp
out
jne
lock
sub
std
mov
or
or
mov
ror
jle
sub
jb
cmpsl
nop
cltd
xchg
pop
add
or
xchg
inc
push
push
jp
sbbl
test
mov
mov
js
push
sbb
mov
lret
adc
mov
bound
inc
ds
sbb
das
mov
pusha
xchg
loop
lahf
std
and
xor
scas
jnp
sub
adc
cmp
push
pop
stos
or
sub
mov
in
xchg
addl
and
out
mov
aaa
or
sbb
nop
mov
clc
mov
idivl
cli
or
ret
popa
or
or
mov
inc
test
fidivrs
repz
fistl
fsubrp
mov
and
sbb
adcl
xchg
scas
sti
push
pop
xlat
mov
push
jle
out
push
cmpsb
sbb
adc
pop
sbb
maskmovq
cmc
xchg
lret
shll
mov
add
leave
push
repz
cmp
leave
out
mov
and
rol
jmp
xor
or
cmpsb
jmp
insl
ret
dec
fdiv
inc
mov
movsb
popf
pop
mov
iret
test
aam
notl
xchg
fcomps
je
shrb
insb
push
imul
inc
lds
outsb
sub
movsl
mov
ss
sbb
rcrl
jbe
ljmp
inc
aad
addb
lock
xor
hlt
and
data16
lock
inc
push
push
int
inc
mov
xchg
sahf
shlb
pop
sahf
cli
sub
xchg
daa
lcall
clc
out
mov
mov
int3
loope
cmp
push
add
add
push
test
out
add
ret
loope
popf
mov
mov
xchg
out
mov
stc
push
xchg
leave
add
mov
cmp
add
fdiv
addl
inc
insl
aad
cmp
mov
add
inc
xor
popa
lods
test
out
testl
add
test
pushf
dec
xor
loopne,pt
push
pop
popa
jmp
jmp
add
loop
adc
or
add
add
subb
in
jne
and
repnz
ret
sti
mov
cmpsl
sbb
imul
popf
pop
pushf
orl
fnsave
ss
in
movsl
jae
lcall
push
imul
cmp
cmp
push
or
hlt
test
adcl
or
mov
cld
rorl
fsubrs
lds
call
das
add
adc
jnp
mov
loope
pop
mov
lret
mov
xchg
pop
add
insl
mov
aas
xlat
mov
lds
xor
cmpsb
insl
xchg
lcall
push
dec
jmp
es
xor
xor
adc
nop
mov
arpl
pop
xchg
pop
fwait
jp
jb
fsts
rcrl
icebp
sub
inc
dec
xchg
xor
outsl
cmp
inc
fnstenv
jmp
enter
pushf
add
int3
pop
cmpl
rcll
lahf
insb
ss
dec
cmc
cwtl
mov
loopne
js
stos
test
sub
ja
push
aam
stc
mull
sub
adc
fnstsw
add
mov
sbb
mov
and
cmp
mov
sbb
nop
mov
cs
xor
inc
data16
mov
popf
ljmp
stos
xor
or
dec
cmp
inc
pop
push
arpl
cmp
or
jmp
sbbb
add
pop
out
movsl
sub
fadd
add
subl
push
fidivl
mov
aam
pop
daa
adc
out
xor
dec
ss
xchg
scas
mov
cs
mov
sub
push
repnz
pop
cwtl
cmpsl
add
add
int3
clc
dec
mov
add
jne
jecxz
test
addb
xorps
add
push
fdiv
xor
adc
xchg
lea
in
test
pop
sti
bound
jp
div
mov
mov
scas
pop
ljmp
mov
inc
jno
sub
dec
and
shl
dec
sub
iret
mov
mov
mov
shl
outsl
and
mov
imul
jae
int
addb
inc
cmp
pop
push
out
push
cmpsb
push
adc
pop
push
rol
mov
testl
filds
dec
gs
addl
outsb
sbb
cmp
add
mov
pop
fs
ret
repz
lock
lret
ja
enter
xchg
pop
insb
lret
pusha
fwait
loopne
adc
lock
mov
dec
mov
repnz
ljmp
dec
repz
lret
movsb
in
xchg
repz
push
int3
lret
push
jb
mov
push
out
dec
or
mov
aam
and
jle
cmp
mov
xchg
fidivrs
mov
jmp
out
mov
repnz
vsubss
mov
adc
mov
mov
jle
add
push
std
or
arpl
scas
sbb
and
aad
shll
aas
sbb
pop
movsl
fldl
jae
std
sbb
lock
mov
jns
cmp
mov
xchg
mov
jg
xchg
rcrl
int
push
mov
xor
mov
sub
add
jle
lds
mov
push
fnstenv
imul
or
or
xor
and
mov
sub
pop
in
ljmp
push
xor
jne
stos
popa
mov
mov
imul
imul
fists
xor
jmp
in
mov
pop
lsl
or
mov
cmpb
stc
dec
cmpsl
arpl
dec
mov
in
mov
adc
pop
aad
pop
dec
lock
jns
int
xlat
dec
jae
jnp
push
and
push
ret
test
je
int3
pop
xor
aas
sarl
movsb
in
stos
pop
cmp
jo
cmc
xor
add
and
repz
stos
ljmp
rcrb
pusha
mov
add
subb
cmpsb
push
out
sub
jns
sub
inc
dec
in
fcoml
gs
das
leave
out
mov
in
dec
int3
dec
testb
in
sbb
xchg
hlt
fldl
dec
inc
hlt
movsl
cmp
inc
outsb
jl
adc
loope
jl
pop
rorl
clc
pushf
push
mov
mov
icebp
ds
out
cmpsb
cli
jmp
aam
mov
jp
pop
mov
xchg
fmull
lea
sbb
bound
fwait
out
and
adc
stos
sub
mov
or
cmp
pop
out
mov
lods
mov
xchg
test
test
mov
cmc
xor
mov
aad
inc
sub
xchg
jo
push
pop
leave
inc
test
out
fadds
scas
mov
and
adc
popl
and
adc
inc
sbb
jmp
movsl
sti
fnsetpm(287
data16
jae
mov
popf
lcall
ss
jnp
bound
cmp
fs
adc
adc
or
fwait
or
add
cld
sti
mov
xlat
jl
push
mov
fs
mov
xor
mov
imul
incl
push
mov
out
arpl
mov
test
jmp
xor
pop
addr16
outsb
std
xchg
xchg
stc
mov
mov
call
iret
push
jns
xchg
sbb
dec
cs
inc
or
sub
das
ficompl
mov
es
mov
popa
dec
shl
sub
dec
sbb
and
inc
aas
popf
xlat
dec
adc
movsl
sub
loope
mov
mov
mov
xor
cld
xor
sub
int
pop
out
cmp
lods
sbb
add
adc
jmp
out
push
mov
cltd
aam
and
testb
pop
sbb
fnsave
sub
xchg
sub
lcall
jae
mov
js
insb
mov
jb
repnz
cmc
inc
icebp
incb
adc
push
pop
xchg
lock
sub
xchg
mov
dec
and
dec
leave
push
sub
xchg
lea
dec
jmp
cmp
and
lret
je
call
pushf
arpl
inc
test
dec
bound
bound
mov
and
gs
jb
dec
aaa
jmp
imul
jo
decl
cmp
aas
rcl
jbe
sub
movb
inc
pop
aad
stos
cli
sub
mov
pop
fisubl
lcall
xor
insl
inc
mov
daa
inc
fwait
jge
test
mov
stos
in
in
mov
and
movsl
inc
or
xor
sbb
rcrb
es
inc
push
or
jg
hlt
fs
mov
cmp
adc
jae
jg
sbb
imul
cwtl
or
add
popa
pop
outsb
mov
fdivl
idiv
test
leave
int
shl
pop
fsubrp
adc
sub
shll
sahf
mov
jecxz
cltd
adc
pop
adc
xor
pop
popf
movsb
in
pop
adc
sahf
jl
sbb
adc
in
in
sub
aas
std
andb
dec
adc
popa
sbb
add
aaa
xchg
fdivrs
pop
cmc
jecxz
fisttps
aad
sbb
dec
movsl
push
fmull
mov
jle
dec
add
repnz
lock
rcl
iret
jns
add
imul
nopw
cltd
mov
push
or
fstps
in
dec
ja
inc
fcomps
imul
sub
mov
lcall
xchg
std
cltd
and
fsubrl
orb
in
iret
adc
pop
xor
mov
fiadds
jno
xchg
sub
inc
loope
xchg
push
inc
repnz
jo
sub
or
cwtl
fisttpll
outsl
insb
inc
jg
ds
lahf
aaa
cmpsb
das
sbb
stos
insb
in
loopne
mov
jp
leave
cmp
jecxz
fisubrl
xor
mov
ljmp
fs
fs
sub
pushw
outsl
test
jge
or
scas
sub
jmp
mov
out
call
jbe
push
adc
push
mov
das
fistpll
jae
lock
cli
enter
scas
mov
mov
mov
call
neg
jnp
sbb
sub
mov
rcr
push
insb
sbb
pop
inc
addr16
pop
and
xor
je
and
pop
or
jae
xchg
repz
test
jle
mov
lods
sar
hlt
adc
out
and
jbe
loope
or
adc
fadds
test
xchg
popa
cs
push
ljmp
dec
adc
pop
hlt
fwait
push
pop
fnsave
leave
push
jae
xchg
jmp
jno
push
mov
lahf
sbb
fs
fcoms
sbb
jp
push
push
and
push
ficompl
xchg
and
dec
cs
lcall
imul
xchg
pop
push
fcomi
mov
fidivrl
stc
lret
popf
sbb
inc
into
rcll
jle
fs
clc
inc
pop
mov
jne
xchg
xchg
insb
mov
call
mov
mov
lea
movsl
jnp
fadds
mov
jl
popa
xchg
fstpt
es
xor
xor
adc
mov
out
jle
lret
push
loop
xchg
xchg
fnstcw
fmul
jmp
dec
inc
adc
lret
push
clc
outsl
push
mov
aas
imul
or
and
in
shl
fwait
push
push
and
sbb
xchg
mov
leave
nop
leave
xor
pop
sbb
sbb
dec
and
add
mov
adc
rcll
ret
add
mov
popa
mov
dec
mull
fsub
sahf
fisubrl
or
push
or
test
popa
xor
xor
xchg
dec
shlb
mov
je
movsb
cmpsb
into
and
cld
push
leave
jne
cmp
loopne
mov
leave
xchg
xchg
and
ljmp
and
dec
mov
into
ljmp
dec
lock
cmp
lods
stos
push
pop
push
daa
mov
pushf
cmp
popa
jmp
jp
or
adc
hlt
stc
push
add
ret
adc
pop
mov
pop
test
outsl
jb
ror
mov
mov
adc
adc
test
xchg
inc
mov
imul
or
xchg
adc
js
int3
and
sbb
hlt
inc
pop
sub
cmp
stc
dec
xchg
push
add
inc
mov
cmp
int
adcb
shll
scas
shl
psubb
loopne
xor
stos
xor
movsb
es
out
nop
push
push
pop
push
xchg
cmp
push
shr
push
dec
jb
stos
add
push
cmp
lahf
das
adc
and
cmp
outsl
addl
pop
mov
shll
test
icebp
popl
push
cmp
adc
jno
mov
push
pop
lret
sub
push
int3
dec
out
fnsave
sbb
or
add
in
sbb
jp
jno
pop
adc
insb
jno
mov
div
jae
mov
adc
data16
orl
lds
test
call
fists
mov
inc
idiv
or
nop
popf
pop
cmpsb
adc
or
scas
mov
fmull
mov
xchg
iret
xchg
mov
mov
cmp
dec
push
test
lock
pop
adc
xchg
test
pusha
scas
xor
or
pop
dec
addr16
push
and
leave
leave
imul
in
repnz
stc
xor
ss
push
pop
cmp
and
mov
ret
loopne
jno
mov
ret
shlb
or
cmp
adc
loope
and
shrb
mov
pushf
sub
adcb
pop
lahf
jno
mov
scas
rol
es
adc
or
cmp
gs
mov
sub
sbb
in
xchg
push
daa
mov
sub
mov
dec
pop
lret
mov
mov
movsb
outsl
imul
cs
stos
call
sbb
lret
stos
out
and
pusha
cmp
sbb
mov
mov
inc
pushf
gs
dec
push
xchg
cli
std
divb
or
dec
lods
sbb
sub
xchg
repz
sub
sub
mov
dec
pop
pop
aad
xchg
xchg
add
js
into
jp,pt
fmul
in
xchg
xor
dec
sbb
lcall
jo
xchg
dec
out
mov
leave
dec
mov
mov
dec
inc
in
pop
lods
cs
push
cmp
mov
jno
xor
mov
pop
and
fdecstp
icebp
clc
mov
lds
inc
dec
icebp
je
mov
cmpsb
push
ret
movsl
or
push
lock
sbb
mov
push
mov
stos
fsub
fucomi
xorb
inc
mov
mov
xlat
ret
in
pop
mov
jecxz
mov
xor
fdivrs
pop
lods
int
mov
xor
loopne
dec
repnz
jnp
enter
push
movb
push
fistpl
sub
and
and
and
in
cld
fsubrl
xchg
aad
cmp
test
xlat
inc
pop
testl
leave
movsb
mov
lds
add
jne
aas
aas
cmpsl
dec
nop
sahf
stos
jne
sbb
adc
hlt
xor
pop
sub
inc
cmp
fcmovb
jmp
mov
jmp
scas
cs
in
and
and
lods
adc
orl
add
sub
call
jmp
inc
out
cmc
jmp
aam
pop
fwait
sub
xchg
jmp
mov
inc
pop
add
jmp
aam
cwtl
idivl
shl
jb
cmp
mov
dec
and
dec
test
push
aaa
out
xor
insb
xor
in
add
cmp
cmc
shll
test
shll
jno
lea
xor
push
int
in
inc
fsts
pop
andl
mov
ja
hlt
dec
std
mov
add
lahf
inc
adc
add
adc
fsts
aad
xor
mov
ss
push
lds
inc
jl
xchg
insl
repnz
call
xor
add
pop
xor
sbb
ret
push
add
pop
imul
jp
repnz
int
cmp
push
fistpll
push
xchg
test
sub
or
aas
jb
filds
inc
and
mov
jp
insb
fcoms
mov
mov
insl
test
mov
dec
stos
popf
fwait
jbe
and
testl
mov
cmp
jnp
cli
add
ret
ljmp
outsl
loopne
das
in
pushf
into
aad
mul
xor
and
adc
inc
cmp
ja
shll
clc
cli
or
mov
inc
jge
lahf
mov
mov
jg
pushf
mov
out
push
loope
lret
xor
cmpsb
testb
push
cs
push
mov
stc
pushf
xor
out
lret
xchg
sbb
sbb
cwtl
or
lods
xchg
lea
mov
mov
cmp
jecxz
addr16
bound
out
test
cld
pop
cs
cmp
mov
add
movsb
push
scas
test
ds
sbb
sbb
push
mov
test
imul
nop
push
mov
jnp
scas
dec
mov
push
inc
filds
in
in
arpl
and
lock
adc
fstpl
xchg
xor
out
xor
inc
sbb
aaa
js
jge
movsb
shll
mov
cwtl
push
push
jmp
cltd
sbb
hlt
jo
or
add
jno
push
xor
lods
pop
cmp
lds
sahf
sub
popa
movsb
sbbl
out
mov
in
loop
push
cmp
and
xor
add
xchg
cmp
inc
mov
test
mov
xorb
cwtl
shlb
test
ja
cwtl
ss
jnp
mov
fisubs
ficompl
loope
sbb
jae
imul
mov
iret
repnz
mov
push
dec
imul
push
inc
pop
inc
mov
push
cmpb
lahf
sahf
mov
push
push
jmp
sub
dec
cld
pop
fwait
fwait
and
test
sub
jns
shll
loope
inc
xchg
mov
push
and
daa
pop
adc
jle
adc
sub
push
int
fldl
cli
rorl
cli
lock
mov
les
imul
aam
add
dec
xor
xor
mov
scas
sbb
jno
cld
xchg
ret
mov
test
mov
inc
mov
cld
es
xor
push
lea
jns
mov
add
nop
mov
inc
jle
ss
int3
jns
insb
dec
lahf
push
aad
xor
lods
dec
inc
inc
jae
lds
cmp
clc
mov
in
cli
adc
cmpsb
les
testl
shll
sub
jp
daa
add
mov
mov
and
dec
xchg
in
inc
repz
testl
test
jp
mov
mov
adc
pop
mov
lret
jge
test
addr16
and
jb
pop
loopne
xchg
xchg
stos
xchg
divl
in
pop
sbb
dec
shl
push
inc
push
jnp
mov
scas
jmp
lahf
addr16
adc
lods
xor
ficompl
mov
mov
lods
or
mov
inc
lds
cmc
jle
popa
out
divl
and
fsubrs
inc
cmp
lds
cmpsb
test
and
adc
inc
sub
je
outsb
addl
loop
in
mov
popf
loop
sub
mov
sbb
mov
dec
jl
mov
add
out
mov
ret
or
adc
jno
xor
inc
enter
addr16
in
xchg
hlt
sub
fisubrs
add
jb
addr16
inc
mov
mov
jecxz
push
add
rcrl
and
pop
or
cmc
mov
mov
outsl
jle
aas
lahf
rcrl
call
shl
mov
in
push
xchg
cmp
push
nop
push
bound
imul
jge
sub
out
and
cs
loopne
mov
mov
test
cmp
outsb
ret
and
adcl
lods
lret
mov
xchg
mov
out
xlat
cmp
lods
lcall
jmp
mov
scas
xor
jns
ds
lahf
fwait
or
imul
cmp
mov
cmpsl
sbb
cmpsb
adc
clc
repnz
inc
inc
dec
mov
mov
out
mov
aas
mov
jmp
jg
cld
jmp
out
push
pop
dec
movsl
and
pop
sub
in
lods
dec
jbe
mov
fildl
loope
rcll
mov
push
inc
push
leave
test
sbb
ljmp
pop
xor
idiv
ret
dec
and
inc
adc
iret
jns
dec
call
mov
adc
push
sbb
sbb
iret
insb
insb
inc
lcall
push
in
inc
in
mov
sbbl
lcall
aas
clc
mulb
mov
fs
cmc
call
cmp
popa
jg
pop
stos
fwait
cmp
cmp
movb
lahf
hlt
aad
insl
mov
ficoml
sbb
not
mul
je
cmp
scas
dec
lods
int3
push
shr
push
inc
jecxz,pt
mov
mov
inc
xor
scas
mov
inc
insb
pop
andb
int3
bound
mov
shrl
fimuls
sahf
push
mov
inc
into
or
push
aaa
dec
adc
sub
fcoms
das
jne
ja
dec
stc
aas
dec
rcrl
sbb
pop
dec
cmp
sar
push
adc
mov
dec
ljmp
adc
imul
jnp
push
push
jp
loop
or
push
jecxz
push
das
stos
cmp
and
jmp
push
push
pop
push
iret
mul
push
pop
aad
movsb
mov
out
and
mov
in
ret
jp
clc
call
push
mov
dec
loopne
test
mov
jecxz
subb
push
in
outsl
sbb
mov
imul
call
ja
call
mull
pop
scas
cmpsl
xor
aam
sahf
push
mov
sub
rcl
sub
jl
xor
lods
mov
pop
and
pusha
add
repz
sti
cmp
insl
mov
cmp
add
and
mov
mov
pop
mov
in
cld
mov
testl
in
iret
mov
movsb
dec
xchg
dec
jnp
and
in
pop
scas
ljmp
pop
mov
push
xchg
dec
aaa
push
add
bound
xchg
enter
fldcw
out
int3
cmc
loopne
insb
jecxz
pop
add
jle
hlt
lahf
inc
in
adc
pop
lock
cmp
dec
je
cmp
rcll
mov
add
adc
dec
pop
pop
insb
data16
adc
and
shrb
pusha
icebp
cs
xchg
jle
xlat
push
movsb
sub
cmp
dec
mov
test
cmpsl
stc
and
scas
mov
int3
fcompl
jne
adc
ljmp
add
sti
hlt
dec
pop
mov
push
pop
mov
pop
cmpsl
mov
push
add
mov
ljmp
mov
push
insb
xorl
push
adc
mov
out
cltd
hlt
in
je
ja
outsl
in
repnz
int3
pop
cmp
or
add
psubsw
ret
pusha
out
mov
in
mov
lea
dec
aam
outsl
add
push
pop
int
add
pop
or
out
shll
bound
add
shr
jle
shll
xchg
mov
jne
lret
lret
inc
jb
mov
jno
cmp
pop
pop
cmp
jbe
and
cwtl
fs
outsl
popa
dec
push
inc
lods
xchg
and
mov
xchg
clc
inc
xchg
mov
fs
in
les
scas
lret
lds
lret
sub
adc
push
test
stos
lea
sbb
mov
jle
fistpll
cmp
cmpsb
negb
idivl
inc
popf
insb
cmp
dec
ljmp
push
jecxz
fcmovbe
ss
icebp
aas
pop
hlt
xchg
scas
cmpsl
aas
test
imulb
fistl
repnz
mov
xchg
lods
fsubrp
push
jo
js
mov
xchg
jge
and
jae
stc
scas
es
add
fimull
mov
cltd
fisubrs
sti
adc
pop
inc
pop
xchg
fucomi
sub
pushf
mov
fcomps
fldt
push
mov
push
scas
aam
dec
inc
sti
sbb
inc
mov
nop
xor
push
jo
popa
aam
pusha
sub
scas
je
outsb
jo
popa
xchg
std
adc
xor
cmc
bound
mov
into
fsubl
sub
std
push
inc
pushf
inc
std
xchg
cmpsb
and
xor
pop
test
dec
cmpl
inc
xor
mov
out
jmp
sbb
icebp
cmp
pop
adc
dec
je
lret
mov
adc
sahf
dec
loope
sub
ficompl
push
es
out
pop
lret
push
pop
xchg
ficompl
into
add
pop
pop
negl
ja
add
adc
or
cltd
add
cmp
pop
stos
in
add
into
push
inc
xor
push
cmp
mov
inc
sub
stos
or
and
shlb
ja
lods
or
shl
ret
jns
loop
inc
inc
mov
cmp
cmpsl
ret
fdivrs
jg
mov
in
out
scas
fadds
lret
rcl
mov
inc
or
loope
cmpsb
xchg
int
or
or
int3
sbb
mov
jg
push
mov
std
xor
sbb
pop
int
jo
rclb
sbb
pop
or
daa
pop
gs
push
dec
das
in
and
xor
mov
mov
sub
daa
sbb
insb
dec
ror
sahf
mov
sbb
inc
sbb
int3
aaa
xor
mov
jmp
sub
fisubs
sbb
pop
or
popf
bound
mov
dec
orb
mov
js
mov
dec
stos
mov
jo
lods
push
inc
outsl
lcall
adc
fnsave
int
mov
call
ret
leave
out
les
dec
cs
in
inc
das
jmp
xchg
test
mov
dec
fidivrl
xchg
cs
push
in
lret
jno
adcl
ss
fs
pop
gs
lea
pop
and
dec
stos
lods
pop
jg
lret
add
jmp
aam
andl
aas
imul
and
jae
jge
add
mov
aas
cld
pop
les
dec
xchg
fs
mov
fdivrl
cltd
cmp
jecxz
loope
xchg
fdivrs
mov
popf
stc
xor
fs
inc
js
cs
pop
xor
xor
push
shrl
mov
in
mov
movsb
out
call
dec
mov
loop
rcrl
jmp
test
push
outsb
rcl
adc
cmpsb
xorb
and
pop
roll
push
popf
pop
imul
mov
iret
test
scas
xchg
push
loopne
stc
pusha
push
push
mov
dec
cmc
scas
cmp
inc
fisttps
scas
in
pop
sbb
mov
xor
xchg
and
sub
movsl
adc
mov
xchg
outsl
dec
adc
nop
or
mov
pop
xor
aaa
loope
or
push
adc
or
pop
push
gs
xchg
dec
popa
mov
lods
pop
mov
js
cltd
jnp
aad
outsb
jnp
arpl
js
fwait
dec
daa
push
mov
mov
adc
stos
fwait
or
pop
wbinvd
mov
add
sti
and
cli
sub
int3
cmp
clc
push
add
mov
sbb
sbb
cmpsl
mov
push
ss
jmp
je
repz
aam
test
shr
pop
push
outsl
pop
cmp
pop
push
les
adc
lahf
push
jge
add
pop
xor
push
add
adc
bound
lret
in
xchg
or
push
add
adc
and
xor
out
imul
and
nop
xlat
xchg
mov
mov
sub
and
push
push
in
dec
xor
push
lcall
sbbl
lea
jns
mov
push
test
outsl
je
in
sub
or
lock
nop
insb
test
dec
pop
mov
test
or
scas
icebp
lret
adc
jge
xchg
test
decl
aaa
add
pop
aam
pop
mov
xor
mov
inc
lahf
xchg
adc
jmp
pop
mov
cmp
sbb
lret
add
out
jno
ljmp
scas
push
or
add
lret
sarb
jne
outsb
cmpsl
iret
cmpsb
pop
xor
and
test
inc
jo
pop
pop
stos
or
out
pop
iret
add
or
ljmp
popa
ret
xchg
cmp
icebp
popf
gs
xchg
ss
sbb
inc
xchg
jmp
mov
push
lods
js
jae
call
sub
jecxz
cmp
inc
xor
mov
negl
mov
div
xchg
ds
lods
xchg
mov
jmp
push
push
or
aas
lret
pop
cmp
mov
push
jge
movsl
jne
push
lds
popa
hlt
test
ret
fwait
sarb
sbb
inc
xchg
in
mov
mov
cld
divl
icebp
sub
out
das
add
inc
cwtl
loop
pop
sbb
test
push
repnz
sahf
das
test
or
pop
add
xchg
movb
fstpl
popf
adc
inc
sbb
mov
sbb
dec
sub
popa
mov
dec
sarb
xor
hlt
aam
addl
mov
int3
jno
push
mov
xchg
addr16
add
pop
xchg
pop
movsb
or
jns
mov
test
jns
mov
xor
popa
pop
sub
in
movsb
xor
cli
cmp
mov
popl
mov
data16
stos
ja
cli
nop
ljmp
jle
incl
mov
orl
imul
pop
xchg
mov
xchg
cmp
pop
sbb
jle
xor
shll
stos
mov
pop
push
int
xor
bound
sbb
push
scas
mov
leave
and
pop
dec
jo
dec
icebp
test
xor
lds
sbb
cmc
sbb
jae
je
ffree
mov
call
idivl
mov
je
xor
data16
jb
jmp
xchg
mov
fists
xchg
mov
inc
hlt
jnp
popa
lret
xor
xor
lods
test
or
push
dec
adc
fst
xchg
inc
and
idivl
out
or
imul
xchg
dec
outsl
adcb
push
inc
and
clc
xchg
adc
mov
xchg
pop
call
dec
mov
repnz
push
pop
addl
mov
push
fdivs
pop
and
int
es
lock
cld
rcrl
adc
iret
jne
mov
mov
adc
ss
and
sub
shrb
mov
lahf
in
test
jnp
jge
dec
or
jae
mov
or
fs
pop
xor
inc
sbb
xchg
sub
jp
shlb
shrl
mov
or
pop
pusha
test
xor
add
hlt
outsb
pop
sub
push
or
and
pop
mov
mov
push
cmpsb
outsl
bound
sbb
pop
sahf
stos
dec
push
fimuls
lods
hlt
cmp
cld
add
cli
movsl
mov
pop
movhps
sbb
stos
xchg
lcall
jmp
test
fbld
andb
push
dec
sbbl
fadds
cmp
das
adc
int
push
pop
xchg
sub
pushf
mov
mov
add
aad
outsl
pop
adc
cld
xchg
mov
xchg
aam
cmpb
push
sub
test
sub
pop
inc
cmp
push
addr16
fsubl
cmp
rcll
int
movsl
cmp
mov
xchg
rorl
inc
jp
lret
filds
shrb
aas
not
push
andl
repz
mov
test
movsl
mov
mov
mov
ret
mov
xor
inc
sbb
popa
mov
push
and
inc
lret
mov
stos
cmp
dec
adc
cmp
xchg
mov
mov
paddsb
adc
or
enter
pop
sarb
push
push
dec
xor
mov
adc
cmp
xlat
adc
sahf
cmp
ss
xchg
sub
das
add
or
add
sub
cmovl
sub
mov
jo
stos
cmp
outsl
sbb
sbb
imul
insb
outsb
mov
ret
mov
lahf
es
sub
outsb
mov
lods
and
jge
int
push
pop
or
cwtl
adc
xor
or
andl
push
push
int3
into
sub
imul
inc
cltd
lds
gs
dec
fwait
int3
jo
cmpsl
sti
insl
leave
adc
mov
inc
push
cmp
and
in
xlat
outsl
mov
mov
imul
pop
pop
mov
mov
jo
xor
mov
fldt
fstp
sbb
mov
ret
push
and
stc
mov
sti
rcl
push
push
insb
mov
gs
fstpl
cmp
and
pop
mov
mov
ret
lds
scas
sbb
jmp
and
scas
shl
rcrb
dec
lret
inc
test
pop
mov
daa
mov
xchg
pushf
ss
in
fnstcw
sbb
mov
mov
fisttps
aad
test
cmpsb
xchg
jp
inc
and
sub
fadds
sbb
sbb
mov
test
inc
sbb
test
out
sub
and
xor
adc
nop
test
es
insb
mov
aas
ss
jle
fwait
out
push
adc
sti
ss
aaa
scas
sbb
mul
scas
lods
out
sub
dec
xchg
pop
scas
nop
sarb
push
jnp
inc
lock
xchg
and
jae
dec
cmp
sub
fldl2e
repnz
push
jnp
dec
xor
lock
outsb
arpl
cmpsl
icebp
and
xchg
test
and
push
xchg
pop
ds
icebp
or
lock
add
and
les
pop
xor
push
stos
adc
shlb
mov
inc
data16
pushf
sub
sub
xor
fcmovbe
mov
mov
dec
insl
add
das
cwtl
rcrl
cmovle
dec
lcall
pop
into
sub
shl
pop
cmp
cmpsb
adc
xchg
pop
int
sub
or
jns
pmuludq
sub
cmp
ret
in
test
dec
js
int3
out
dec
adc
scas
mov
or
cmp
popa
popf
mov
daa
outsb
arpl
insb
cltd
out
sbb
and
outsb
mov
jge
pop
notl
cmp
loope
mov
mov
outsw
pop
mov
dec
mov
cltd
push
sbb
xor
mov
test
and
movsl
xchg
int3
cmp
add
popf
pop
xchg
jno
idivl
jge
adc
or
sbb
outsl
jle
adc
mov
dec
cmp
dec
pop
fisubl
dec
xchg
loopew
test
push
lahf
gs
cmp
inc
jmp
xor
ja
pusha
mov
arpl
rolb
loop
xlat
leave
je
push
das
xlat
mov
data16
out
inc
movsl
js
and
cmp
cli
mov
out
and
lock
mov
lret
loop
cld
jb
cmp
jno
ret
mov
loope
adc
out
mov
adc
scas
outsl
push
test
or
jl
jg
pushf
dec
sbb
shlw
icebp
setbe
jbe
stc
aaa
xchg
out
mov
mov
lahf
push
sarl
sbbl
pop
adc
int
inc
xor
push
hlt
cmpsb
dec
dec
out
sbb
pop
lock
out
push
cmp
push
mov
sub
pop
movsb
popf
adc
gs
or
aad
out
leave
adc
or
mov
loop
icebp
add
mov
jp
pop
jno
mov
dec
cltd
push
in
push
fisttpll
mov
aad
out
movsl
mov
rcrl
gs
add
mov
cld
iret
data16
fisttpll
das
push
mov
inc
xor
add
mov
aas
lahf
imul
dec
lcall
test
pop
aam
in
dec
out
aas
jmp
out
test
jl
stos
inc
mov
gs
mov
jne
fdivrl
mov
leave
mov
cmp
jo
dec
out
xor
and
inc
inc
adc
push
jo
xchg
leave
loope
jecxz
clc
adc
mov
push
shll
cld
leave
mov
and
inc
aam
mov
es
jg
and
cmp
or
gs
lret
les
mov
mov
sahf
mov
nop
loopne
enter
cld
cmp
pop
test
imul
imul
inc
aad
xchg
andl
mov
in
cld
imul
into
aaa
jno
out
fidivrl
cmp
outsl
and
mov
jge
test
jge
fisubs
add
cld
jne,pn
mov
adc
fnstenv
imull
and
pop
jl
dec
pusha
or
imul
inc
aaa
mov
mov
test
jl
cwtl
mov
mov
pop
imul
push
scas
sbb
sub
movsl
pop
push
sbb
and
jno
and
add
sbb
mov
sub
mov
ds
mov
add
sbb
jne,pn
popf
push
jns
cmc
pop
pop
sub
dec
insl
push
scas
scas
in
mov
cld
pop
nop
nop
push
jecxz
imulb
loopne
push
outsb
adc
mov
sbb
rcr
xchg
jge
or
mov
icebp
js
aas
sub
cld
jecxz
push
out
jmp
xchg
lods
sbb
iret
sub
push
das
lock
iret
adc
and
out
add
repz
mov
lahf
dec
arpl
push
enter
jno
mov
popa
pusha
mov
outsb
xchg
inc
dec
idiv
xchg
and
cmp
add
hlt
test
fdivrl
imul
sub
push
lcall
xor
lods
ds
aam
popf
jmp
fsubrl
in
or
stos
test
test
add
in
sbb
aam
lock
movaps
mov
cmpsl
pop
jb
sbb
push
xchg
dec
jns
cs
push
inc
or
iret
repnz
adc
add
repz
fstpl
imul
jp
jns
and
addb
xor
mov
push
push
out
test
das
fistl
test
loope
dec
rclb
nop
mov
sbb
jge
popf
subb
out
xor
out
gs
lods
xor
add
xchg
jnp
dec
adc
imul
push
leave
jbe
ror
inc
pop
out
stos
dec
push
mov
lods
xchg
insb
ror
inc
push
xor
mov
mov
fmulp
inc
jecxz
fwait
xor
push
lods
aaa
mov
jne
jp
or
into
inc
das
loopne
lods
das
lahf
or
jne
inc
ret
das
pop
data16
sbb
cmp
ljmp
add
aaa
fistl
sbb
repnz
sarl
shll
scas
cmpsl
into
rclb
xchg
mov
fdivr
cmpsb
jmp
cmp
loopne
cwtl
mov
adc
and
iret
fisubs
js
fistl
leave
divl
sub
lcall
mov
or
xchg
dec
cmc
adc
cld
pop
push
adc
lea
xchg
in
inc
push
sti
ret
add
iret
mov
mov
pop
mov
insb
pop
mov
testl
lahf
mov
call
add
lods
pop
cli
stos
dec
cld
imul
sub
jbe
out
jne
repz
insb
cmp
loop
lock
pop
dec
inc
sbb
xchg
push
stos
inc
xchg
pop
inc
fs
add
push
push
pop
aas
jge
mov
or
stos
or
shll
js
jecxz
ljmp
push
pop
iret
mov
xchg
lret
jno
aas
adc
aam
pop
lret
push
mov
xor
lret
daa
popf
sub
xchg
xor
ljmp
test
mov
and
cmc
xor
fistpll
jno
cmpb
imul
shll
sarl
jmp
add
out
test
rclb
pop
xchg
fildll
repnz
mov
dec
or
fs
scas
lds
pop
sarb
adc
or
fbstp
adc
add
fbstp
shrl
jp
mov
lock
nop
or
mov
pop
mov
pop
outsl
jbe
popa
lock
icebp
cltd
sbb
iret
jp
xchg
lods
push
dec
add
test
lea
pop
push
add
arpl
out
mov
stos
leave
rcl
sbb
idivl
mov
jg
jno
cmp
inc
std
scas
add
jecxz
js
adc
daa
mov
into
or
ficoms
add
push
popa
stos
push
xor
jo
mov
mov
mov
adc
xchg
xlat
gs
push
fistl
icebp
int3
mov
xchg
fistps
fs
out
roll
dec
pop
inc
push
js
mov
pop
jns
pop
scas
das
cmp
mov
fildl
aaa
fucom
imul
or
cmp
sbb
xchg
nop
leave
sub
sbb
jge
xor
cwtl
cmp
cltd
cs
lods
cmp
sbb
dec
xchg
xchg
lret
xchg
stos
xlat
mov
xchg
xchg
nop
mov
sbb
pop
jae
dec
adc
and
call
lds
enter
popf
inc
pop
test
test
xchg
bound
psubq
outsl
pop
out
dec
sbbl
popl
jl
mov
adc
imul
outsl
jle
mov
or
sub
sbb
sahf
movl
out
adc
mov
popf
or
sbb
lcall
cmpsl
push
pop
mul
mov
lock
out
push
inc
mov
push
push
lods
xor
mov
je
andl
pop
int3
add
sahf
or
ficompl
lret
inc
cmpsl
mov
test
push
out
mov
mov
or
out
xor
rorb
push
mov
cmpsb
adc
xchg
mov
mov
dec
jecxz
pop
dec
rorb
loope
inc
jmp
and
roll
jne
mov
cmp
loopne
or
jno
pushf
lock
es
jp
aas
adc
sbb
mov
insb
mov
sahf
and
push
pop
fidivrl
scas
sub
adc
dec
ret
mov
pop
push
sbb
sbb
dec
mov
add
push
dec
pushw
aam
pop
inc
outsl
loop
xor
insl
push
xlat
xlat
or
cmp
cmp
mull
lds
loope
cmp
jbe
rorb
or
or
testl
dec
scas
in
les
fdivl
or
loope
leave
lock
lret
dec
inc
cmp
into
mov
dec
insb
mov
imul
mov
icebp
jge
adc
and
mov
cmp
jae
rcrb
je
hlt
adc
push
jmp
ret
pop
mov
mov
mulb
sti
leave
xor
mov
mov
lea
into
sub
scas
or
out
sarb
pavgw
and
pop
pushf
hlt
call
mov
add
ljmp
jbe
add
out
xchg
dec
dec
inc
push
shrl
and
fadds
nop
xor
mov
mov
ljmp
gs
es
add
add
mov
cli
fbstp
and
addb
mov
aaa
jbe
gs
pop
mov
dec
mov
insl
idiv
scas
inc
ss
les
push
push
jo
lds
out
sbb
adc
adc
push
cmp
loop
cld
imul
and
out
and
xor
or
mov
xchg
je
add
xor
test
adc
fiadds
test
lods
insb
ss
add
repz
clc
ss
push
repnz
les
shl
push
sbb
mov
stc
jne
test
xor
addr16
mov
shll
add
cmpsl
pop
bswap
shrb
xor
imul
es
mov
cmp
adc
in
addb
push
mov
push
adc
arpl
call
pop
dec
mul
sti
add
mov
popf
aad
test
movsl
or
cltd
and
mov
push
mov
lret
inc
or
push
ss
cmpb
dec
jbe
pop
adc
scas
mov
or
push
fs
jl
jb
sub
jae
into
rcrb
mov
and
pop
sub
bound
ja
fcomps
popa
adc
xorb
outsl
es
cld
or
pop
inc
sbb
pop
test
adc
mov
jnp
test
dec
pop
dec
inc
call
popf
mov
jp
jmp
ficomps
cmp
repnz
pop
xor
cmpsl
daa
ja
sbb
sub
repz
fiaddl
adc
ja
sub
test
mov
ss
jbe
pop
sarb
adc
popf
rol
ja
xchg
jae
xchg
or
movsb
or
and
mov
lock
mov
stos
xor
push
dec
xor
pop
and
in
stos
std
pushf
call
in
sub
fsubr
mov
jle
dec
aaa
inc
sbb
mov
jns
jle
fcomps
mulb
push
push
jbe
inc
jo
lret
mov
es
xor
roll
int
mov
mov
mov
push
push
xor
ror
cmp
stc
shr
push
daa
mov
inc
lcall
test
sbb
add
loope
cwtl
xor
mov
loopne
sbb
stos
and
dec
cld
data16
push
push
out
mov
mov
pop
pop
dec
add
movsb
clc
ss
sbb
push
popa
push
push
cwtl
sbb
ret
or
mov
pop
clc
pop
add
js
jle
fwait
sbb
pop
xchg
fistps
lcall
cmp
stc
push
push
push
aaa
adc
int3
cmp
std
jb
adc
fnop
sbbl
jmp
lret
xor
movsb
andl
icebp
lret
repz
mov
insl
fisubrs
add
loope
jmp
ret
popa
ficoms
aad
sub
adc
out
xchg
in
jl
out
push
ja
fiadds
mov
faddl
rclb
sar
push
mov
mov
mov
mov
xchg
mov
mov
jb
lret
mov
xor
pop
orb
sub
pop
push
push
mov
loop
sbb
mov
lods
imul
dec
pop
xchg
mov
icebp
scas
out
inc
lock
fs
mov
mov
aaa
mov
jmp
jge
jne
jecxz
xchg
popf
fcmovnb
pop
push
mov
imul
mov
jnp
lret
dec
add
das
xor
rclb
inc
and
popf
ss
orb
push
mov
popf
cld
lahf
loop
xchg
xor
or
cmpsl
fsubl
ja
aad
incl
jp
out
and
lahf
xor
gs
outsl
mov
jge
jnp
inc
jno
xor
jbe
and
jnp
inc
mov
jge
mov
sti
dec
sub
sub
push
push
jecxz
xor
mov
mov
xor
addr16
jp
hlt
in
int
fiaddl
xor
pop
aad
mov
mov
xor
adc
inc
fldenv
repz
mov
pop
aas
in
rorl
push
push
imul
mov
mov
lret
jmp
fidivrs
outsb
jmp
lahf
jae
loop
test
lock
and
int
pusha
pop
cmp
and
jae
loope
ret
mov
xor
pop
outsb
fistl
test
ss
dec
add
test
adc
cltd
dec
push
sbb
in
add
jle
scas
bound
and
fsubs
fsts
xchg
dec
loope
mov
pop
push
roll
test
push
lock
popf
add
mov
rcrb
jnp
pop
addr16
rcrl
or
into
scas
loop
fisubs
xchg
js
sar
or
pop
cmpsl
mov
jnp
dec
mov
jbe
sbb
jae
mov
push
scas
shlb
enter
test
push
mov
aas
dec
daa
call
negl
mov
and
sub
and
and
mov
inc
xlat
pop
aad
xchg
mov
jnp
and
pop
mov
mov
in
mov
sbb
or
pop
mov
into
in
stos
or
shll
push
fadd
test
jmp
lds
sbb
ret
out
sub
mov
insb
gs
pop
inc
lahf
inc
in
pop
mov
testb
mov
cltd
jns
inc
hlt
addr16
dec
daa
cmp
xor
mov
mov
iret
mov
or
xchg
call
es
and
rcrl
add
jmp
ror
pop
shl
push
aad
aas
pop
push
add
mov
imul
mov
lods
or
loope
ficoms
call
sti
inc
int3
ljmp
adc
ljmp
aaa
adc
jl
ljmp
pushf
adc
movsl
and
lahf
imull
push
jmp
push
jbe
jl
rolb
adc
and
push
add
pop
imul
add
outsb
inc
pop
idiv
jmp
xor
jmp
lcall
mov
divl
pop
and
pop
cwtl
and
adc
inc
add
into
pop
pushf
inc
bound
cmp
pusha
jne
cltd
jecxz
ljmp
push
cmp
leave
ret
adc
push
clc
mov
cmp
mov
mov
aam
stos
lahf
mov
cmp
jnp
mov
movb
mov
jne
cli
orb
pop
or
sahf
sbb
sbb
push
xor
mov
mov
dec
pop
mov
cmp
fdivs
push
adc
jle
mov
lock
push
cmp
js
sbb
dec
push
mov
lret
xchg
es
lcall
xor
test
lret
in
cmp
adc
popf
jno
cs
iret
imul
sti
int
push
stos
addr16
jo
fidivs
sub
add
lods
dec
enter
push
cmc
xor
clc
jnp
push
sbb
out
push
lea
sbb
dec
mov
jmp
mov
imul
orl
xchg
cmpb
jbe
dec
and
loope
icebp
add
and
stos
in
xor
inc
jmp
arpl
mov
stos
aaa
mov
ret
daa
inc
popf
pop
iret
fsubrs
test
sbb
xchg
pop
repz
rolb
insb
pop
ret
sbb
loopne
sub
gs
addr16
mov
iret
cmp
ja
cld
jno
negb
aaa
loope
push
lock
out
cli
pop
jb
push
push
mov
out
mov
jno
sbb
movsl
mov
sub
dec
inc
cmp
mov
sub
insl
pop
or
xor
xor
sub
push
inc
popa
sarl
push
gs
rorb
mov
cmc
inc
or
jecxz
xor
imul
outsb
fs
pop
mov
fcmovnb
fwait
inc
andl
pop
sub
push
lock
and
pushf
dec
test
jge
xchg
jnp
xor
or
xor
and
movsb
pusha
xor
cmp
hlt
std
in
inc
jno
ficoml
adc
push
sub
mov
stos
pop
rclb
cmp
mov
xor
mov
insl
dec
and
mov
lahf
cmpsb
pop
std
push
subb
outsb
sbb
cmp
shll
jb
lods
add
cmp
mov
push
xor
ja
jmp
inc
repz
js
lds
inc
sbb
mov
fnstsw
jge
mov
inc
loope
adc
ror
or
movsl
mov
inc
pop
dec
pop
xlat
pusha
xor
inc
or
xor
pop
mov
rcrl
pop
or
aad
or
ficompl
xlat
decl
mov
mov
mov
sub
mov
push
cwtl
sbb
lahf
xchg
stos
stos
sub
ss
xor
cmpsb
call
cmp
or
inc
nop
mov
movsl
in
sbb
imul
pop
in
cmp
cld
lods
js
xor
jb
add
shrl
into
repnz
mov
push
or
icebp
lds
in
sub
sub
xchg
xchg
xchg
sbb
and
dec
mov
adc
jle
movsl
ljmp
fs
gs
rcl
mov
xor
aad
or
shrb
pop
mov
xor
pop
xor
push
fistpl
add
sub
mov
jmp
pushf
jbe
jge
cmp
jb
and
test
lahf
das
inc
imul
std
movsl
sub
lods
add
mov
mov
dec
dec
and
sub
ss
mov
repz
or
movsb
aam
sbb
mov
inc
shl
mov
test
sub
sub
adc
sti
mov
xchg
cmp
scas
pop
xchg
xchg
pushf
scas
sub
pop
inc
out
xchg
dec
loop
inc
xorb
enter
cmp
cmp
inc
add
hlt
inc
and
pop
in
stc
inc
add
mov
mov
mov
jp
popa
mov
sarl
pop
inc
std
arpl
sub
and
andb
aaa
inc
sub
lcall
test
push
mov
test
mov
mov
pop
jge
std
lds
shr
dec
push
and
dec
out
int3
pop
loopne
cmpsb
aad
repz
sub
sub
out
or
sub
lods
cld
fmul
aas
jle
mov
inc
out
dec
subl
loope
idiv
fimull
jne
xor
repnz
test
arpl
das
dec
and
outsb
pusha
testb
jne
fisttpl
in
mov
pushf
inc
push
and
mov
jle
sbbl
pop
lds
adc
jb
jne
aas
jg
inc
dec
inc
push
sub
call
or
pushf
jbe
and
leave
insl
pop
pushf
in
mov
popf
es
fwait
mov
sbb
adc
into
daa
mov
mov
sbb
daa
push
jae
les
loop
shl
adc
add
daa
pop
into
xchg
xor
jecxz
pop
or
add
xchg
cs
insl
inc
mov
cwtl
cld
fcmove
hlt
inc
fdivs
clc
jl
pop
pusha
cltd
leave
jns
mov
and
and
sub
in
xchg
insb
mov
fs
cmpsb
aaa
sti
inc
jnp
outsb
scas
push
aaa
scas
mov
push
push
jnp
xchg
aaa
sbbb
add
lods
dec
sub
jae
push
xchg
push
mov
out
pop
sub
or
imul
pop
in
xorb
lods
imul
adc
loopne
pusha
mov
mov
add
cmpb
adc
popl
cmp
adc
sar
cwtl
sahf
sub
xchg
inc
fs
in
push
test
jne
imul
lock
shrb
jae
loopne
shrb
repz
dec
cwtl
sahf
adc
aaa
mov
leave
stc
mov
nop
sti
sbb
adc
out
and
add
mov
pop
or
sarl
jb
mov
xchg
add
dec
scas
data16
sbb
out
mov
in
insb
hlt
sub
call
push
ljmp
jns
mov
mov
jmp
inc
into
clc
jmp
mov
add
repnz
push
cmpsl
cld
scas
dec
xlat
pusha
and
pop
jns
mov
cld
orl
in
sbb
mov
cwtl
popf
add
jle
dec
adc
ljmp
dec
mov
mov
jp
add
xchg
xchg
shlb
in
lock
mov
cmc
cmp
jmp
sbb
jg
jl
mov
ret
iret
mov
sub
test
sub
fidivrl
sbb
push
ss
push
adc
adc
sahf
mov
clc
add
push
fcoml
dec
sub
in
mov
mov
inc
dec
jb
push
xor
xor
hlt
addr16
outsl
lods
cmc
gs
enter
jo
in
mov
push
in
inc
push
les
xor
adc
lret
nop
pop
ljmp
movsl
loope
lcall
fdivr
je
inc
mov
cmp
add
stc
fwait
bound
xchg
pop
imul
test
xor
sarl
lods
pop
mov
sarb
adcl
adc
xchg
inc
or
insb
loopne
fsubl
or
add
mov
aam
popa
lods
fisubrs
cmc
xor
daa
mov
jb
cmp
ret
scas
push
insb
insb
nop
imul
push
mov
dec
xorl
push
ds
int
inc
jp
adc
sbb
insl
outsl
and
sub
inc
ljmp
cmp
loope
xor
loope
push
lret
in
push
mov
sub
flds
mov
popf
xchg
jp
jmp
or
out
mov
cmp
xchg
push
daa
and
mov
adc
cmp
sbb
mov
mov
push
sahf
daa
lods
mov
repnz
dec
inc
orb
stos
das
inc
or
or
jge
push
pop
out
jb
outsb
daa
pop
out
movsl
arpl
pop
dec
jnp
xor
mov
mov
dec
arpl
sbb
pop
mov
ret
cltd
or
gs
aad
fsubl
cmp
movsl
fucom
lods
pop
mov
pop
jmp
add
xor
mov
enter
push
mov
pop
cmc
pop
rcll
lods
pop
dec
jne
push
repz
imul
outsl
lret
icebp
gs
imull
fs
inc
jl
add
mov
push
push
cmp
fnsave
notb
call
fldl
xor
jae
std
or
mov
mov
and
xorb
mov
adc
cltd
jns
fsub
int
lock
in
repz
jnp
int
insl
xchg
lret
rorb
cmp
rorb
and
fwait
cs
jle
sbb
into
shlb
fstps
dec
call
lods
imulb
jae
sbb
dec
mulb
rclb
push
lds
or
mov
sub
daa
jle
int
sarb
and
adc
push
and
mov
scas
mov
add
clc
loop
aad
js
std
es
pop
iret
pop
addr16
inc
addr16
lods
xor
cmc
out
jmp
push
push
sbb
mov
mov
lods
cmp
sub
fdivl
clc
sbb
ss
stos
popa
xchg
aaa
jle
nop
test
mul
dec
inc
adcl
rcll
orb
jmp
add
cmp
cmpsb
adc
movsl
sub
lods
xchg
and
cmpsb
inc
push
sub
outsb
adc
fsub
and
inc
mov
pop
pop
shlb
inc
jnp
movsl
or
xor
data16
or
add
pop
mov
mov
and
mov
or
pop
inc
jo
mov
inc
out
pop
push
fcoml
pop
ja
leave
mov
jno
pop
mov
in
sub
out
sub
lahf
jmp
movsb
pop
mov
and
dec
and
or
or
repz
cmp
js
cmp
clc
push
sub
sub
and
and
push
outsb
pop
mov
fimull
add
gs
jmp
lds
sarl
leave
push
ja
mov
inc
std
or
stc
addr16
fsubrs
mov
lcall
in
push
xchg
mov
iret
push
jo
sub
and
invd
sub
shlb
cli
inc
push
sbb
pop
mov
add
into
dec
stos
ljmp
mov
pushf
mov
or
jmp
cmp
xchg
pushf
sub
and
push
fcmovb
pop
loop
or
in
xchg
shl
popf
out
je
in
and
sub
in
inc
scas
lods
sarl
or
je
outsl
sbb
pop
jp
lcall
push
outsb
jmp
int
repnz
dec
xor
fists
pusha
rcrb
ds
add
data16
jb
dec
pushf
mov
fimuls
insb
into
dec
shl
pop
mov
add
jae
xchg
mov
push
sub
loop
pop
std
push
ljmp
cwtl
dec
and
fildll
andb
addr16
mov
cmpsb
sbbl
je
push
xor
dec
rolb
loopne
enter
inc
cmp
mov
jge
dec
lret
into
out
cmp
and
leave
jbe
dec
push
and
xchg
push
inc
in
jo
add
out
aaa
repnz
out
sbb
enter
or
stos
jmp
shrl
xlat
mov
xchg
jnp
xor
arpl
pop
lret
aam
add
sahf
shlb
dec
jne
mov
out
jge
inc
in
sahf
fisttpll
sbb
push
jl
cmpsb
xorb
xor
lods
dec
cmc
jmp
rcll
fadds
push
imul
arpl
jp
repnz
adc
pop
mov
dec
adc
es
inc
loop
cmp
mov
push
push
mov
iret
pop
pop
es
cltd
fldt
xor
ja
leave
or
arpl
adc
mov
flds
push
mov
shll
ret
pop
cli
cwtl
gs
cltd
cli
dec
inc
pop
lock
les
push
adc
cwtl
icebp
mov
mov
cs
adc
push
push
lea
jle
ja
jne
movsl
sub
xchg
inc
fists
jle
ss
xlat
mov
sbb
outsb
mov
insl
imul
mov
and
divb
push
push
push
push
pop
mov
aas
xor
inc
aas
mov
out
mov
cmpsl
jne
arpl
push
lods
stos
jno
movsl
jnp
mov
mov
repz
ret
into
lret
sbb
leave
jl
jnp
mov
mov
movsl
hlt
enter
and
or
pop
sub
jp
aas
pop
aad
push
jb
lea
xor
and
cmp
movlps
into
scas
fistpl
push
into
scas
scas
push
in
xlat
dec
mov
popf
add
mov
sarl
pop
dec
outsb
or
jae
cs
shlb
xlat
into
mov
popf
sbb
fsubl
mov
jbe
fwait
rorl
mov
and
lds
insb
data16
xor
fwait
and
mov
imul
mov
inc
mov
cli
rcl
scas
cld
divl
pop
xchg
push
pusha
dec
fisttps
cld
dec
xlat
int3
addl
pop
push
loop
movl
jne
daa
ds
mov
sub
mov
pop
jg
cmp
pop
sahf
popf
stos
jns
scas
fmull
pop
repz
sbb
in
add
mov
sbb
loope
inc
aas
lret
sbb
inc
xchg
jle
sbb
test
mov
testl
ljmp
stc
sbb
arpl
pop
outsl
in
cli
push
or
pop
addl
xchg
jno
jle
dec
mov
imul
cmp
xor
push
hlt
mov
int
or
je
into
rclb
mov
jns
cmp
or
pop
out
cmpsb
push
mov
repnz
dec
xlat
cmp
jle
xor
shlb
dec
frstor
dec
mov
clc
out
rol
scas
push
repnz
out
mov
jb
shl
pop
rclb
repz
dec
jg
out
sbb
cld
js
stos
xor
jmp
fsub
xor
pop
cmp
sbb
sti
or
sarb
in
add
cmp
cmp
in
loopne
adc
adcb
pushf
mull
xor
or
fsubrl
mov
inc
mov
ds
leave
cs
in
or
lds
and
repz
mov
jae
push
je
loope
add
fwait
or
movsb
hlt
xchg
sub
outsl
aaa
mov
in
ss
inc
imul
div
xor
fsub
jle
imul
push
and
scas
ja
ja
pop
movsl
cld
mov
mov
or
inc
push
fs
out
jbe
or
pop
adc
fnsave
adc
push
mov
xlat
mov
loope,pn
cwtl
lods
lds
xor
mov
jbe
insb
inc
jb
vaddss
out
xor
out
mov
push
and
pop
sbb
push
in
xlat
cmp
xchg
mov
mov
ja
sti
arpl
inc
inc
out
sbb
pop
lret
jb
inc
out
into
jl
pop
lret
and
dec
mov
push
imul
mov
fildll
sub
pushf
add
pop
mov
sbb
inc
leave
xchg
or
sahf
or
sub
sbb
jne
xlat
les
mov
mov
bound
sbb
sub
sbb
lret
xchg
mov
adc
and
shrb
fsubr
push
je
push
mov
cmpsl
or
cmp
andb
cmp
lret
out
adc
arpl
or
fstps
stos
add
mov
fstps
mov
into
cmp
sar
dec
or
sbb
jae
inc
iret
sahf
dec
js
dec
jg
lds
in
out
fstpl
mov
outsl
pop
ss
sbb
dec
inc
jg
pushf
shll
or
sti
popl
outsl
sbb
mov
add
fs
adc
push
movsb
adc
xor
push
dec
jns
stos
or
sub
movsl
loopne
push
insb
lds
dec
jmp
in
or
or
sbb
and
cwtl
add
or
xor
loope
push
inc
inc
lahf
orl
mov
add
fwait
pop
lcall
xlat
cld
cmc
jno
xor
sub
jae
fadd
jl
pushf
inc
nop
ss
pop
test
jo
mov
shl
fnop
test
xlat
push
les
cmp
lock
stos
pop
inc
ret
je
sbb
and
stc
in
test
icebp
loopne
pop
mov
mov
mov
pop
or
enter
cmp
cmpsl
adcl
and
or
push
xor
push
enter
and
jo
jl
mov
insl
fadds
test
call
sarb
fdivs
insl
mov
fld
sbb
and
mov
lahf
jae
cmp
mov
push
sbb
jo
ret
xlat
jecxz
aas
fwait
push
sbb
and
mov
sbb
jle
cmpsl
pushf
cmp
inc
insl
pop
push
stc
test
pop
and
xchg
imulb
mov
mov
xor
cmp
jmp
mov
push
mov
test
sbb
bound
jno
inc
add
xor
cmp
fldenv
add
jb
xchg
roll
push
sub
pop
mov
jg
addr16
mov
addr16
lea
dec
fdivrs
mov
aam
pop
orl
aaa
icebp
xchg
dec
scas
jnp
mov
das
pusha
mov
inc
adc
cmp
or
imul
add
pop
add
jae
jl
in
das
cmp
mov
cmp
shlb
inc
out
xchg
jns
sbb
push
aad
jnp
push
mov
dec
mov
xchg
dec
pop
data16
inc
test
leavew
mov
pop
add
movsb
ret
ss
dec
and
or
pop
cmp
cmp
mov
mov
daa
imul
ss
adc
adc
sub
movsl
js
mov
das
jne
dec
or
pop
or
lret
xor
test
repnz
vmread
test
adc
xchg
lods
xchg
pop
decl
mov
lcall
imul
lahf
mov
and
jp
call
ljmp
dec
jl
lret
outsl
out
std
cmp
arpl
xor
fistl
mov
xchg
lock
pusha
aad
cs
dec
xor
sti
lcall
jmp
popa
xor
and
into
iret
out
fiadds
fimull
jp
and
or
enter
and
jne
stc
pop
mov
fs
push
xchg
sti
cli
push
adcb
push
xchg
xor
and
shrl
div
xchg
xor
xchg
mov
mov
or
rolb
inc
adc
inc
lods
xlat
int3
push
sarl
xchg
mov
stos
cmp
fisttpll
scas
or
xchg
pop
jae
jle
push
xchg
xor
sbbb
dec
mov
jo
pop
xor
mov
dec
fmulp
hlt
jnp
test
xor
inc
jl
aaa
insl
cmpsb
xor
jne
movsl
pop
mov
sbb
pop
pop
inc
jge
mov
out
push
mov
pop
shrl
add
dec
inc
xchg
jb
ret
inc
xor
cmp
inc
xchg
outsl
test
loope
or
push
lret
les
loopne
jl
into
imul
mov
mov
ficomps
hlt
jecxz
mov
and
cmp
test
xor
out
shlb
push
dec
jmp
daa
sbb
mov
and
cmp
das
out
mov
mov
pop
sbbb
sbbb
jbe
mov
test
xchg
sub
xor
xchg
pop
into
pop
out
cmp
pop
fs
test
cmp
pop
outsb
sahf
xchg
xchg
test
in
lea
mov
fcomi
jb
rcrl
popl
and
fwait
mov
outsb
pop
xlat
lret
mov
into
hlt
addr16
and
xor
test
jmp
adc
pop
lahf
xor
xor
je
loop
mov
test
repz
fnsave
or
jecxz
lock
sbb
aas
or
dec
xchg
dec
or
inc
shrb
mov
jne
dec
xchg
ss
sbb
dec
cmpsl
and
mul
data16
in
call
or
pop
cmp
mov
loope
cmp
fwait
mov
bound
xlat
insb
shr
inc
push
add
xchg
xor
xor
jno
cmc
push
sbb
loop
xchg
mov
jbe
js
sbb
cmp
sbb
lret
jl
push
js
mov
dec
gs
mov
mov
sbb
xor
ja
enter
lods
sbb
jne
jnp
push
xor
test
adc
mov
repz
pop
inc
fs
adc
addb
pusha
dec
in
ljmp
cmp
mov
bnd
inc
setnp
cmp
hlt
rclb
loope
fsub
jnp
jne
gs
pop
roll
inc
jo
push
jmp
shl
jnp
incb
xchg
push
rolb
movsl
lcall
push
movsl
mov
push
sub
mov
sbb
sarb
jmp
jmp
clc
scas
sbb
test
js
jl
int
lds
cltd
in
jge
mov
repz
dec
stos
push
popa
xlat
jnp
pop
pop
mov
nop
out
in
mov
xlat
shrb
mov
xor
pop
sbb
stc
in
inc
lock
lcall
repnz
incb
xor
stos
xchg
in
mov
push
or
fstpt
or
lcall
outsb
loope
scas
lods
xor
addb
rorl
clc
adc
shlb
and
xor
sar
xchg
cmp
adc
div
mov
push
mov
add
fwait
cmp
in
sbb
fwait
clc
rcl
mov
cltd
push
xchg
les
and
popf
sbb
sbb
jmp
mov
cmpsl
sbb
lods
inc
cmc
test
pop
dec
pop
shlb
mov
xor
jns
decb
jl
iret
imul
clc
shll
mov
imul
shl
add
xchg
adc
mov
int3
aaa
mov
scas
sub
and
insl
loopne
jg
or
add
test
in
jmp
movhlps
inc
pop
cmp
pop
cltd
jbe
imul
mov
pop
subl
jge
out
adc
out
add
jo
ret
shl
jnp
out
add
imul
in
and
sub
pop
cmpsl
jae
cltd
sub
roll
jmp
mov
and
cmp
sub
arpl
movsb
or
add
out
or
cld
fstpt
outsl
jl
cmp
fdivs
xlat
push
cmp
or
pushf
in
call
push
rorl
fsts
fadd
dec
xor
push
int3
arpl
and
fisttpl
mov
icebp
fcomp
in
nop
mov
mov
filds
and
cmpl
and
xchg
inc
bndldx
xor
mov
mov
popf
inc
jne
out
gs
mov
cmp
ja
in
and
fisttps
inc
push
or
insl
xchg
daa
push
icebp
sbb
test
pop
mov
mov
xchg
enter
cmp
stc
in
sub
fcmovb
popf
fstpl
aaa
push
jle
jecxz
jge
sbb
cmp
lds
cli
stos
jmp
jge
call
ret
hlt
or
add
fdivrp
shll
add
push
cmp
je
pop
outsl
push
addr16
in
es
mov
mov
or
jmp
jmp
push
mov
pop
es
and
dec
stos
jno
rolb
hlt
inc
shrl
and
push
pop
pop
mov
sub
jl
xchg
mov
or
xchg
out
or
test
in
pop
rcl
loop
call
add
outsl
mov
jl
jne
mov
arpl
fsubr
in
in
or
push
push
test
lock
xchg
cwtl
inc
sbb
lds
mov
pop
mov
dec
adc
pop
mov
mov
add
stc
xchg
mov
add
test
mov
repnz
negl
outsl
pop
fwait
mull
dec
insl
pop
ret
andb
cmpsl
scas
shlb
jns
jge
inc
mov
dec
js
pop
andl
jno
inc
cli
addr16
andl
xor
sahf
in
push
shll
pop
enter
adc
jp
cmp
mov
mov
xlat
lods
popa
aam
sub
push
movsl
aas
mov
fcoms
xchg
jl
dec
add
dec
mov
repnz
push
cli
scas
outsb
sub
push
das
sub
cmp
jl
inc
xorb
je
ljmp
ljmp
stos
aas
inc
test
adc
mov
rclb
loop
xchg
sbb
push
pop
xor
jg
sub
and
daa
loopne
adcb
addr16
fistl
dec
fsubrs
stc
sub
mov
lods
jb
outsb
mov
nop
insb
mov
test
in
pop
aas
mov
ljmp
test
mov
or
inc
dec
outsb
scas
xor
and
shl
push
repz
ficompl
rcrb
adc
adc
testb
mov
nop
sub
in
jg
sti
cmpsb
dec
ret
jmp
insl
orl
cli
pop
add
add
nop
mov
mov
sbb
outsb
add
repnz
shrl
xchg
mov
cmp
and
sub
aad
jo
and
idivb
mov
stos
fnstcw
push
add
fdivrs
mov
sub
ja
pop
mov
xchg
mov
xchg
fmul
pushf
mov
mov
stos
sbb
in
xchg
sub
add
jl
or
out
ret
test
dec
adc
cmp
sbb
das
xor
ret
xchg
aam
cmp
out
pusha
sub
loope
scas
cs
cmp
push
xor
xlat
adc
mov
movsl
add
clc
ret
pop
lahf
js
dec
testl
repnz
rcrb
jb
in
lods
subl
sbb
sub
jg
iret
push
mov
mov
xor
jle
jbe
call
ret
shlb
and
pop
mov
gs
jne
push
int
lods
push
nop
jnp
hlt
dec
adc
and
leave
jecxz
sti
sti
or
shrl
push
loopne
enter
sbbb
shll
dec
cmp
mov
cmc
adc
gs
mov
repnz
dec
out
daa
andl
enter
lock
jo
fsubrs
push
mov
and
mov
pop
testl
add
jne
pushf
shl
lea
push
pop
mov
gs
jg
adc
cs
xor
mov
lods
xor
sarb
andb
pop
pop
andb
cmp
push
sub
sti
xchg
int3
ss
into
xchg
shlb
loope
mov
add
dec
data16
cmp
popa
mov
and
outsb
pusha
aas
cmpsb
adc
sub
jmp
lods
sub
add
jmp
out
dec
mov
mov
cmc
inc
and
ss
sbb
pop
mov
popf
cmpsb
xor
bound
xchg
insb
lods
pop
rclb
sbb
leave
int3
xor
out
stos
ja
add
add
into
icebp
inc
or
cltd
les
dec
cmp
rorb
jae
lods
imul
pop
cmp
jae
mov
or
sub
imul
dec
shrb
ja
lock
int3
ss
fcoml
mov
jle
ljmp
leave
das
shrb
lods
cmp
loopne
scas
insl
mov
pop
push
cmp
jb
jmp
lret
sbb
cli
inc
pop
push
pop
mov
stc
shrl
mov
sbb
insl
lods
sahf
or
sub
push
jne
imull
inc
sub
cmc
mov
dec
dec
loopne
ret
popf
lcall
in
sub
repz
je
cmp
pop
sub
inc
ret
out
mov
loope
out
push
pop
pop
cltd
lods
test
popf
std
imul
insb
dec
mov
adc
scas
inc
dec
aad
adc
jne
loopne
test
iret
xchg
ja
dec
ss
xor
enter
icebp
fwait
ret
ja
mov
fisttpll
or
je
jg
add
adc
pop
dec
es
jp
rolb
daa
sbb
sub
mov
jnp
mov
data16
mov
xadd
push
sbb
imul
lods
pop
inc
mov
add
mov
and
cld
push
out
mov
cmp
cmp
decl
call
pop
push
imul
jp
pop
pop
outsb
and
cmp
push
xor
cltd
cmp
push
stos
shll
or
and
flds
movsl
mov
ret
fstpl
xchg
clc
daa
mov
inc
aaa
xor
push
popa
mov
mov
add
sub
or
leave
orb
pop
cltd
daa
imul
int3
std
lret
add
dec
push
sarl
adc
mov
lods
mov
dec
push
dec
push
adc
mov
mov
xchg
cmp
adc
outsb
int3
or
enter
add
jl
or
movsl
repz
add
orl
roll
mov
sub
sub
rcr
mov
mov
push
leave
les
fidivl
out
jns
cli
rorb
aad
pop
sbb
cs
jl
fcomp
rorl
sub
dec
xchg
adc
and
push
push
nop
dec
push
add
jle
in
push
xchg
add
mov
scas
dec
jae
ret
dec
and
or
mov
scas
push
jae
mov
call
push
cmpsl
sub
dec
inc
js
jle
scas
lahf
fwait
in
push
mov
lds
imull
pop
fldenv
scas
lock
dec
addr16
xchg
shll
jb
or
adc
inc
out
xchg
jg
call
jns
js
push
imul
imul
cwtl
insl
mov
or
in
sbb
fisubl
push
fcoms
jno
out
push
and
leave
adc
ss
sub
adc
pop
stos
jbe
pop
and
lcall
cs
fdivr
cmp
dec
scas
xchg
jo
pusha
and
fdivrs
data16
fwait
xor
push
int
jno
mov
shrb
dec
pop
adc
add
jno
push
push
clc
notl
mov
insb
lds
mov
jo
out
dec
sti
js
cmc
mov
push
push
in
aad
jge
push
xor
std
in
add
pop
xor
inc
mov
ljmp
push
add
xchg
sub
cmp
rorb
mov
dec
outsb
std
dec
and
xor
call
sbb
sbb
push
popf
jo
adc
loop
jg
add
mov
dec
mov
jl
xor
movsb
aad
pusha
add
andl
mov
pop
jns
push
mov
cld
pop
call
lret
aas
mov
sub
repnz
insl
in
ss
repz
mov
enter
fwait
jmp
ret
mov
lods
mov
loope
jns
imull
lahf
inc
in
pop
cs
cwtl
cmp
fsincos
inc
cmp
push
pop
dec
cwtl
dec
push
lea
sbb
mov
fistl
pop
mov
sbb
fildl
out
imul
cs
dec
and
movsb
cmp
cmp
sarl
lcall
sbb
push
leave
mov
shrl
out
xchg
gs
ret
addr16
dec
cmc
fnstenv
jl
jecxz
ss
fsubrp
mov
mov
pushf
push
sahf
clc
push
xchg
adc
sarl
inc
dec
push
cmp
in
lahf
movb
int
fwait
js
xlat
lods
decl
loop
adc
dec
out
and
jne
jns
or
lcall
stos
jno
and
mov
cmp
lahf
sbb
pop
inc
cltd
push
jecxz
iret
or
or
sahf
mov
adc
or
out
mov
inc
lock
movsb
pop
inc
mov
icebp
xor
xor
outsl
mov
mov
jmp
xchg
adc
cmp
insb
stos
push
adc
in
sbb
and
mov
mov
jmp
lea
xor
leave
outsl
rcrl
data16
cmpsl
insl
push
outsb
sbb
inc
enter
cs
xor
es
int
iret
inc
or
jmp
or
inc
add
arpl
jle
aas
push
lea
jb
or
mov
sbb
test
mov
jae
sub
cmp
int3
push
lret
and
adc
add
iret
lock
pop
sarb
cmpsb
or
jb
inc
dec
adc
mov
lock
and
cli
xor
mov
ds
aad
cltd
push
pop
loope
and
data16
hlt
ret
mov
mov
into
imul
stos
jp
out
jmp
into
mov
imul
ja
sub
mov
mov
xchg
jbe
test
adc
stc
aam
xchg
jmp
xchg
frstor
fistps
test
imul
mov
std
push
int
add
shll
nop
fwait
sti
xchg
dec
fstp
mull
cmp
sti
cwtl
add
ss
outsb
xchg
sub
push
cld
dec
jo
xchg
int3
inc
outsb
cli
jl
and
vfmsubadd231ps
mov
stos
fadd
sti
mov
lds
and
aad
sbb
in
jnp
push
sarl
test
push
enter
addb
je
pop
sarb
sub
cmpsb
mov
daa
insb
jg
xchg
mov
into
pop
call
fprem
rorl
sahf
dec
es
mov
notb
iret
ljmp
fwait
std
xchg
test
rcrb
or
add
xor
shrb
repz
mov
lods
in
pop
push
push
push
xor
pop
lods
sub
xchg
lahf
jno
pop
sbb
testl
imul
xlat
ja
sbb
inc
jmp
sti
movb
mov
mov
in
insl
ret
lret
sti
pop
fisubs
xor
push
test
idiv
cmc
mov
inc
mul
stos
pop
jl
das
mov
jmp
subl
jp
lea
mov
adc
andl
ja
out
ja
es
push
jge
insl
inc
jns
push
in
cmpsb
stc
cmpsl
int
inc
lock
popa
data16
or
cmpsl
jno
das
fdivl
cli
gs
ja
in
int3
mov
leave
pop
push
jno
call
or
sarb
or
jle
das
cmp
push
and
mov
mov
xchg
push
xchg
jo
dec
mov
xchg
pop
adc
fwait
mov
mov
pop
sbb
and
bound
or
adc
nop
adcb
js
jmp
addr16
or
add
movsl
int
adc
pusha
pop
fwait
pop
xlat
sub
mov
divl
or
out
js
js
pop
mov
popf
pushf
xchg
adc
lcall
imul
arpl
cmc
aaa
or
sbb
mov
scas
sbb
fcomp
push
mov
mov
mov
fldl
scas
adc
imul
xor
lahf
dec
mov
and
and
mov
adc
test
fstpl
or
adc
jmp
and
ficoms
sub
ljmp
ja
xor
push
ud2
jecxz
cmp
inc
push
fwait
push
rcr
test
sub
into
jne
cmp
addb
mov
jne
or
or
xchg
xchg
mov
pushf
inc
sub
repnz
mov
cmp
pop
xor
ja
dec
pushf
aaa
outsl
jge
or
call
xchg
push
sub
mov
or
jge
and
mov
mov
in
pop
inc
lock
push
jno
nop
std
xchg
inc
dec
or
cli
xor
inc
sub
mov
mov
test
mov
test
add
inc
hlt
jle
xor
pop
mov
jge
sub
mov
mov
xchg
pusha
sbb
push
pusha
rorb
xor
movsb
shrl
cmp
or
cmp
jmp
jl
and
add
enter
sti
xor
out
outsl
and
sub
popf
push
cmp
inc
lods
xchg
adc
cmp
adc
inc
repz
mov
fcmovb
sub
popa
and
mov
cmp
mov
stos
sbb
gs
addl
fimull
cmp
sub
lret
jmp
xor
lret
push
test
out
imul
pop
shrl
clc
cmp
lods
push
scas
mov
cli
into
std
xchg
pop
repz
and
sbb
xor
cwtl
adc
repz
lods
fistpl
shl
push
hlt
xor
adc
xchg
and
aad
cmp
lahf
push
jne
mov
ds
outsb
fstpt
dec
mov
adc
sbbl
pop
and
int
fsubl
lock
stos
rcl
je
int
and
dec
xlat
mov
test
pop
sbb
mov
loop
test
cmc
adcb
adc
or
pop
mov
out
mov
mov
push
or
pop
in
sbb
leave
lock
out
ljmp
testb
aad
out
neg
mov
stos
test
xor
sub
std
cld
adc
jnp
pop
jns
xlat
test
inc
jp
js
sahf
out
imul
mov
dec
dec
lret
xor
push
push
dec
sub
ja
mov
mov
sub
shrl
inc
cli
mov
out
lret
gs
sbb
mov
enter
xchg
gs
xor
mov
pop
mov
ljmp
dec
jmp
mov
mov
inc
das
cmp
pop
adc
lods
fmul
rclb
test
push
lods
xor
sub
test
xor
mov
lds
sbb
lods
pushf
add
jno
sbb
rcrb
cld
rclb
shl
dec
scas
mov
repz
adc
inc
sub
fstp
pop
js
jle
movl
push
scas
in
xchg
mov
sahf
ljmp
cmp
adc
and
xlat
lods
test
push
out
jbe
incb
or
and
mull
aaa
jl
dec
sub
repnz
xor
xor
sub
sub
mov
inc
fcompl
shrb
mov
push
jmp
adc
mov
xor
or
fdivl
mov
fiadds
out
fsubl
out
call
mov
or
push
lcall
add
push
add
dec
out
arpl
ret
sbb
lret
outsl
test
xor
jle
iret
aas
dec
shlb
pushf
or
cli
add
xchg
out
aas
cmp
dec
dec
xchg
sarb
xchg
add
test
mov
mov
inc
cmp
add
push
sti
movsb
pop
adc
in
dec
or
adc
inc
outsl
mov
cmp
pop
pop
mov
adc
insl
jo
add
stos
stc
sbbl
lock
sbb
pop
xor
push
push
aam
lcall
jno
add
mov
push
xchg
jo
sbb
insb
femms
mov
popf
repz
adc
mov
mov
jae
lcall
addb
sub
sub
fistl
jae
aaa
stos
dec
add
jmp
pop
lods
in
rorl
sub
xor
dec
dec
jae
aam
ret
cmp
mov
push
scas
push
push
inc
inc
mov
fcoms
sub
mov
jb
dec
mov
inc
mov
push
call
xchg
inc
das
dec
loopne
lahf
test
jge
mov
sub
inc
or
jns
and
lret
das
push
mov
stos
or
testb
cmp
dec
mov
out
cmc
mov
jmp
int3
dec
pop
adc
xchg
jmp
add
negl
sub
fmul
dec
dec
or
adc
and
ficoml
adc
rorb
and
mov
out
and
pop
les
or
xchg
loop
add
je
les
cmp
mov
push
das
mov
cmp
jae
fsubs
sbb
dec
into
sarb
cmp
pop
fsts
add
pop
jle
inc
dec
out
and
or
mov
and
pushf
fwait
rolb
jle
fmuls
dec
mov
lcall
stos
push
xorb
xor
mov
dec
add
push
shrb
push
in
lods
ljmp
shlb
sub
xor
xchg
jle
adc
mov
fisttpll
rol
sbb
iret
push
scas
xor
lods
jmp
push
int3
cmp
es
mov
pop
test
jbe
repz
jne
test
sub
stc
lret
mov
push
and
int
stc
jno
adc
lret
loope
mov
push
cmpsl
repnz
xchg
insl
sti
les
push
adc
xor
aas
daa
imul
xchg
int
sbb
addb
xchg
pop
jb
jae
loope
inc
outsl
push
mov
iret
pop
pop
cmp
lods
push
pop
xor
scas
inc
sub
xchg
xchg
cs
dec
rcrl
shl
and
dec
out
les
int3
in
adc
sbb
sti
scas
cmp
test
jecxz
mov
push
sub
lret
sub
lcall
and
daa
jns
mov
push
xor
pop
in
iret
mov
pop
xchg
cwtl
int
in
cli
mov
sub
inc
test
lret
inc
pushf
insb
rcrl
jle
mov
mov
ds
out
xchg
fstpt
into
mov
add
ljmp
push
repz
sbbb
jns
add
je
movsl
hlt
repnz
fistpll
push
std
mov
iret
je
mov
insb
xchg
and
sbb
stc
and
mov
fwait
movlps
xchg
adc
outsb
inc
icebp
sub
jnp
gs
outsl
add
repnz
sbb
ljmp
iret
jno
insl
not
mov
outsb
out
test
xor
jne
arpl
aas
lock
push
xchg
mov
hlt
cmp
pop
mov
pop
add
and
pop
incb
subl
in
cmp
lods
sti
mov
push
push
loop
push
jb
mov
aam
inc
iret
push
xchg
and
aaa
mov
outsl
jns
aam
mov
inc
pop
mov
jae
inc
rcr
or
mov
xor
pop
and
sar
cmc
sub
in
lds
imul
and
popw
iret
jmp
hlt
mov
mov
dec
lcall
push
cmp
cltd
shrl
pop
and
and
inc
mov
stc
pop
fnstsw
sbb
popa
xchg
fdivp
sub
inc
fwait
xlat
jmp
iret
mov
sub
mov
jp
cmp
pusha
rorb
aaa
pushf
mov
pushf
out
dec
push
outsb
sbb
mov
ret
mov
push
or
shr
dec
pop
test
and
ds
xor
cmpsb
lods
mov
sub
bnd
leave
stos
or
outsb
mov
call
outsl
push
push
hlt
sbb
jbe
cmp
movsl
ss
aam
jmp
sbb
test
pusha
jmp
sbb
into
push
imul
mov
xor
cmpsb
xchg
ds
sahf
ret
arpl
sbb
lds
cmp
mov
inc
shlb
sbb
int3
sbb
push
shl
fldcw
loopne
push
loop
and
pop
gs
jns
data16
leave
sbb
test
data16
xchg
inc
push
lock
pop
outsl
rcll
push
dec
into
cmp
aas
out
pusha
test
pop
mov
cwtl
jbe
xor
es
repz
dec
loope
xlat
jge
inc
aas
cmp
ds
mov
movl
adc
sarb
cli
mov
pop
insl
nop
imul
add
int3
es
outsb
loope
mov
imul
xor
mov
dec
dec
rclb
pop
sub
add
es
popa
int3
dec
push
mov
cltd
jno
leave
xchg
cmp
mov
aam
add
out
fldl
inc
aad
inc
dec
idiv
test
imul
jno
testl
lret
fdivrl
sub
mov
sub
cmpsb
rcrb
frstpm(287
jl
lds
ror
cli
xchg
inc
sahf
or
push
loop
pop
dec
cli
aam
imul
dec
and
mov
sti
jge
dec
push
addr16
and
or
pop
cmp
pushf
std
mov
inc
or
ror
ja
mov
adc
cmpsb
btr
add
mov
aaa
xor
sarb
inc
clts
mov
mov
push
lea
or
sub
xchg
cs
iret
imul
mov
push
push
push
aaa
xorb
das
xchg
push
jecxz
arpl
cmpsb
cltd
mov
es
icebp
xchg
fdivs
sbb
js
lods
xchg
push
rorl
dec
xor
hlt
dec
sbb
jns
mov
mov
bound
push
in
xor
adc
rorb
push
pop
bound
dec
ret
jnp
cmpsl
mov
cmc
xchg
add
sbb
cld
cld
lds
loope
pop
adc
out
push
push
subl
jae
add
shll
fs
out
sub
lds
xlat
or
fidivl
dec
xor
cmc
movl
mov
aaa
jmp
mov
xchg
mov
xchg
jno
add
mov
rorl
and
cmp
xor
xchg
mov
push
mov
or
add
loope
sbb
clc
jmp
xchg
push
inc
sahf
shll
push
test
or
sahf
inc
leave
mov
rorb
faddp
inc
cmp
xlat
mov
jb
or
lods
or
std
ds
jge
jne
sbb
cmpsl
inc
adc
imul
mov
or
cmp
insl
mov
cwtl
mov
outsl
jg
lods
sub
scas
and
popa
cli
aam
fstps
xor
mov
jmp
mov
cmc
xchg
rep
dec
loope
fmuls
dec
cs
mov
outsb
aad
cmpsl
loope
stos
mov
mov
mov
jle
mov
xchg
push
repz
fiadds
xor
jge
dec
push
dec
xchg
dec
in
xor
cmpsl
scas
es
jecxz
mov
mov
fisubs
pop
popa
inc
cmpsl
mov
jle
fistpll
pop
or
lea
jns
dec
pop
cmpb
fcmovbe
add
mov
fs
test
sbb
insl
inc
adc
sti
test
push
pop
minps
psubsw
cs
inc
adc
push
stos
mov
les
fisttps
es
out
xchg
in
mov
sar
call
sbb
dec
iret
outsb
mov
pop
adc
gs
lret
mov
jne
or
jge
cwtl
repnz
sti
fstpl
aas
insl
inc
addr16
mov
out
and
stos
fstpt
testl
jle
push
mov
push
aad
popl
cmpsl
cmp
int
mov
fldt
inc
inc
imul
sub
imul
or
in
shrl
jb
jb
mov
cmpl
cli
push
scas
jae
jae
cli
jmp
cmp
inc
mov
xor
nop
ss
in
fsubl
dec
movsl
aam
sub
push
jl
mov
jmp
mov
push
lea
push
xchg
xchg
xchg
push
xor
rorb
cmp
adc
pop
stos
out
mov
mov
cmpsb
dec
out
or
pop
mov
clc
inc
fldcw
push
jle
scas
xor
jae
les
mov
inc
shrb
xchg
push
lea
cltd
cld
lret
andb
andb
mov
and
cmp
bound
dec
mov
sub
loopne
jg
dec
out
mov
jge
dec
ret
and
xchg
fstps
mov
mov
xchg
stos
jmp
loop
rcl
adc
popa
cld
iret
pop
or
fisubl
scas
mov
adc
or
and
pop
test
or
lods
loopne
imul
sbb
push
fisubs
les
xchg
aaa
lock
push
pop
mov
aas
call
out
cmp
out
mov
or
push
les
imul
push
sbb
movsb
add
and
or
sarb
mov
test
mov
aad
push
lcall
jo
and
mov
cltd
test
cltd
in
mov
jbe
lods
xor
xchg
cmc
cmp
dec
in
lods
cmp
lods
jae
and
sub
aaa
push
dec
imul
subl
bswap
daa
lret
cmp
ds
inc
scas
pop
out
xor
aam
dec
icebp
or
popf
add
jp
dec
add
dec
jo
stos
dec
lcall
mov
out
imul
outsb
rcrb
xchg
cld
in
idivl
push
fistl
je
push
cmp
push
mov
cwtl
xor
popa
mov
iret
inc
jae
mov
or
or
mov
pusha
lret
sbb
cmpsb
inc
pop
mov
sti
pop
int
data16
sti
xchg
add
daa
mov
inc
test
adc
add
in
mov
popa
xchg
mov
xor
dec
add
shlb
and
lret
js
or
loope
sbb
popf
notb
jno
push
adc
inc
fdivrs
pop
adc
out
fsub
mov
dec
jecxz
in
xor
sti
or
loopne
jmp
pop
shl
cmp
xchg
movsl
mov
mov
insb
sbbb
or
and
xchg
js
inc
jne
daa
sarl
mov
mov
push
test
push
frstor
dec
fucomp
push
mov
test
dec
push
cmpsb
shlb
lock
push
and
ficoms
jne
sahf
mov
push
push
int3
xchg
adc
xor
add
inc
test
test
sbb
push
xor
mov
mov
stos
mov
repnz
mov
clc
pop
cmpb
mov
cwtl
getsec
in
loopne
xchg
mov
jmp
push
mov
cmp
enter
mov
add
aam
icebp
bound
out
xchg
inc
mov
and
stc
xchg
mov
dec
inc
shrb
ja
xchg
repnz
sub
xorl
repnz
test
and
out
loope
inc
mov
bound
xchg
push
imul
stos
add
add
popw
mov
mov
in
test
cwtl
fdivl
jbe
inc
xchg
mov
push
movsl
in
pusha
cld
sbb
adc
mov
jnp
int
outsl
clc
cmp
fwait
mov
jnp
psraw
stos
repnz
inc
mov
ja
lods
pop
mov
jbe
popa
leave
add
daa
cmp
test
aad
jp
add
mov
sbb
push
xor
loopne
enter
adc
push
xchg
mov
lock
pop
ja
ret
xlat
rclb
shl
cmp
xor
and
push
pop
mov
mov
jno
sbb
scas
jle
clc
push
repnz
scas
iret
and
jge
ds
pop
mov
in
stos
shrl
push
std
and
inc
es
adc
inc
imull
repz
popl
mov
je
shll
pop
ss
fistl
pop
inc
jnp
out
push
or
mov
shll
dec
aad
ret
lahf
aas
outsl
insb
jmp
sub
loope
nop
and
fcmovb
sub
loope
inc
pop
mov
pop
bound
lret
mov
push
ja
daa
push
mov
push
adc
push
gs
mov
sbb
cmp
dec
inc
sub
mov
xor
jne
push
xchg
lret
outsl
mov
aas
adc
cwtl
xor
xchg
test
inc
sbb
cld
jl
cmp
sbb
adc
scas
jae
jecxz
imul
fmuls
jecxz
movsb
repnz
inc
andl
daa
stos
nop
in
sbb
mov
clc
stos
fbld
iret
xchg
add
dec
add
jecxz
push
cmc
mov
jecxz
push
sbb
dec
cmp
not
mov
pop
ljmp
pop
jmp
mov
cwtl
orb
mov
insl
shl
mov
push
push
mov
jbe
lret
loop
pusha
sbb
icebp
jp
imul
movsb
divl
mov
popa
inc
out
jns
sub
xor
popf
inc
aad
mov
jmp
or
dec
mov
stc
das
call
lods
aam
jmp
inc
add
pushf
in
mov
xor
inc
ret
cmp
out
shl
mov
xor
fisubl
mov
push
dec
out
xchg
imul
in
inc
js
cs
mov
imul
mov
out
inc
clc
aad
dec
sahf
in
xor
frstor
inc
inc
push
es
push
jl
lcall
scas
sub
inc
adcl
inc
and
push
sub
lods
push
ficomps
mov
imul
lods
xor
pusha
rcrb
xchg
ljmp
sbb
sbb
sbb
or
add
dec
mov
inc
cli
dec
dec
test
call
fisttpl
xchg
xchg
cmpsb
and
push
sbb
or
cmp
test
ja
iret
push
cmc
insb
bound
sbb
xor
xor
pusha
sub
imul
cmp
xor
or
shl
cmpsl
and
cmp
sub
pop
mov
addr16
mov
aas
push
insb
jnp
int
push
sbbb
add
add
sbbl
xor
mov
mov
mov
movd
mov
add
add
iret
cmp
mov
pop
movsl
and
repnz
pusha
xchg
push
mov
cmp
scas
shlb
sub
or
mov
aaa
scas
jne
xlat
cmp
mov
ds
pop
jno
jae
fcmovb
sub
jb
imul
insb
iret
pop
or
mov
push
sbbb
out
push
mov
jno
dec
mov
sbb
and
jmp
jmp
pop
mov
cli
and
add
scas
add
cmpsb
mov
fwait
idivl
je
add
repz
sub
das
leave
pop
xor
jns
stos
outsl
and
leave
jns
fldcw
dec
lcall
movb
rcll
jae
push
mov
push
bound
mov
push
repnz
mov
add
xlat
lret
pop
push
fsts
push
inc
adc
sub
inc
into
jmp
inc
adc
outsl
mov
sub
insl
lock
mov
addr16
mov
inc
xchg
fsubrs
or
into
sbb
mov
cmp
xor
test
push
sbb
les
in
or
sarl
andl
adc
or
sbb
xchg
inc
sub
inc
stos
ds
lock
jmp
mov
in
mov
andb
sti
sarb
inc
inc
leave
shll
xor
into
cltd
js
push
test
ds
test
fcom
in
dec
popf
push
call
mov
or
mov
add
mov
jno
mov
fs
push
hlt
in
mov
push
mov
mov
cmpsb
jge
pop
and
xchg
mov
js
pop
loope
stos
pop
mov
bnd
push
call
sbb
ds
push
mov
cmp
cmc
clc
stos
les
scas
xor
out
lret
mov
imul
cmpsb
xchg
sbb
mov
xor
pushf
ret
insl
mov
cmp
rcrl
jne
pop
pop
iret
pop
mov
jae
sub
pop
imul
lea
and
mov
imul
cld
shll
popa
dec
xchg
rcll
sbb
push
xchg
std
sbb
push
test
or
sub
les
inc
and
sahf
imul
aas
mov
fst
cmp
clc
stos
popf
pop
dec
sub
stos
adc
add
popa
fbstp
fidivrl
pop
mov
mov
rolb
pop
lret
xchg
movsb
cmc
mov
nop
mov
sub
cmp
jl
mov
pop
es
shlb
jno
data16
fldl
mov
jecxz
leave
xlat
fimuls
adc
out
call
fst
lds
loope
push
lods
or
cld
imul
adc
loopne
push
aas
aad
or
arpl
inc
and
mov
mov
sbb
movsl
push
imul
stos
shrl
jae
sub
mov
test
orb
das
sub
arpl
cs
jae
mov
xchg
mov
fcmovne
cmc
enter
call
and
sub
mov
inc
cs
loope
cmp
push
xor
ljmp
repnz
push
test
mov
xchg
xchg
mov
jno
test
je
mov
or
lret
mov
insb
repnz
repnz
sub
xor
leave
shll
cmp
sbb
sarb
stc
ret
jmp
mov
iret
sub
xchg
in
test
enter
popf
outsb
int
xchg
xor
fs
std
aas
inc
insb
push
xchg
pop
cltd
add
xor
lret
cwtl
push
cmpsb
pushf
jne
xchg
mov
push
mov
push
out
rcrb
xor
scas
dec
cmp
aad
ds
mov
int3
scas
mov
aas
mov
cmc
xor
xchg
cltd
sub
into
outsl
pop
cmp
cmc
add
adc
loopne
lods
scas
push
js
stc
add
mov
pop
jno
test
pop
jge
mov
les
aam
add
in
pushl
dec
jno
shl
cs
enter
ret
cltd
jmp
push
fsubrl
jae
int3
mov
cmp
pop
jno
out
xchg
xor
adc
mov
jae
jp
sbb
dec
lahf
rep
sub
push
adc
inc
inc
ss
dec
cmpsl
cmp
movsb
mov
pop
lods
jbe
insl
incb
lea
mov
cmp
jne
mov
push
jp
jle
and
jnp
push
roll
xchg
cmp
loope
inc
stc
call
inc
jg
repz
int3
dec
repnz
outsl
out
push
and
pop
jp
scas
adc
inc
mov
adc
adc
push
js
in
add
cmc
in
inc
outsb
and
mov
adc
push
dec
jno
mov
bnd
jmp
cltd
lret
test
shrl
xlat
pop
in
mov
sbb
jle
out
dec
iret
pop
test
outsb
xor
testl
mov
sbb
icebp
mov
fadds
testl
out
adc
ret
cmpsl
xor
pop
pop
cmp
push
mov
push
fbld
neg
ljmp
pop
js
loopne
fadd
int
and
push
int3
test
es
cld
adc
or
cmpsb
out
hlt
addl
xor
loope
dec
push
pushf
xchg
cltd
cmp
adc
js
xchg
ficoml
pop
dec
cmc
vpgatherdd
jb
je
loop
jp
test
xor
out
out
mov
cltd
hlt
imul
imul
sub
inc
inc
test
dec
int3
cld
adc
inc
adc
ret
enter
inc
pop
pop
cld
xor
divl
nopl
fldt
hlt
sbb
stos
es
enter
aaa
movsl
xchg
rcrb
leave
lods
push
addr16
jle
and
adc
mov
cli
repz
cltd
xchg
xor
enter
test
std
xchg
hlt
jne
mov
xor
ljmp
daa
cmp
inc
cmp
xchg
or
out
push
jae
popa
xor
js
dec
sahf
jbe
pop
cs
mov
idivl
and
cmc
add
js
outsl
lea
or
mov
rorl
add
call
xor
or
xor
mov
enter
inc
cmpsb
or
sahf
and
stc
mov
lea
pushf
and
sub
mov
xchg
mov
loop
mov
mov
and
sbb
pusha
subb
andl
push
mov
jge
dec
sbb
push
or
int3
add
sub
pusha
lods
jns
insl
hlt
push
xchg
sbb
xor
mov
das
leavew
push
das
or
inc
js
fdiv
loop
jo
cld
and
add
sbb
pop
jb
fldpi
inc
pop
aam
xchg
out
inc
dec
cmp
xchg
cmp
add
mov
ret
test
imul
psubsw
filds
movsb
or
pop
or
sub
add
jp
mov
dec
and
add
stos
mov
cmc
push
mov
add
fldl
or
fisttpl
mov
je
sbb
movsl
or
pop
jne
push
and
mov
in
mov
jge
mov
sbb
call
arpl
cltd
adcl
test
scas
jge
ror
xchg
xchg
sbb
adc
mov
push
push
jno
inc
fs
fcom
aas
cwtl
out
iret
inc
in
ret
in
mov
dec
mov
lret
mov
sbb
mov
scas
loopne
cltd
mov
xchg
xchg
pop
in
lret
popa
fsubl
push
cwtl
ljmp
int3
enter
fdivs
pop
repz
mov
les
test
sbb
shll
pop
inc
out
or
inc
daa
push
fwait
and
or
pusha
sbb
push
mov
add
rorb
adc
ret
bound
pop
pusha
cmc
jne
rorb
sahf
push
adc
clc
mov
cli
js
rorb
es
cli
xor
adc
and
and
nop
test
daa
dec
orb
int3
dec
add
xor
adc
push
ret
add
push
out
dec
and
stc
lahf
rorb
lret
and
imul
adc
fldt
xlat
push
inc
jno
dec
mov
pop
iret
cmp
clc
nop
jb
or
loop
and
jne
mov
mov
mov
mov
test
xchg
add
movsb
mov
mov
nop
ljmp
cmp
sbb
imul
adc
cmp
das
pop
cli
fmuls
inc
ds
sub
mov
inc
pusha
pop
insl
sti
xchg
out
pusha
sbb
pop
addr16
out
jne
ss
mov
xchg
jmp
sub
mov
push
push
fidivs
pop
sbb
sbb
das
and
sbb
push
jo
mov
jp
lea
or
xchg
xchg
je
rclb
push
inc
fcompl
dec
data16
aam
test
loop
lods
xor
dec
leave
adc
mov
mov
pop
out
push
aad
enter
jp
mov
mov
xchg
xor
stc
mov
pop
lods
add
insb
cmp
cmpsl
shll
jns
push
inc
addb
pop
hlt
push
int
lret
fs
test
add
cmp
pop
ss
push
sahf
das
popa
sbb
push
sbb
mov
in
imul
and
gs
push
sbb
enter
jae
xor
test
cmp
bound
push
jne
sbb
mov
mov
sbb
lahf
lods
loop
daa
cmpsl
test
data16
jle
mov
ret
lahf
sub
loop
mulb
mov
jecxz
pop
dec
lahf
shll
pushf
shrb
pop
mov
xor
pop
call
addr16
and
sub
dec
mov
xchg
jg
ss
push
aad
int3
sbb
sbb
loope
jne
adc
test
or
fidivrl
stc
push
dec
cmpl
and
ficomps
jo
movl
jne
add
incl
fstpl
jmp
rclb
addb
xor
adc
cltd
inc
stos
stc
jmp
mov
xchg
mov
mov
sub
mov
cmp
cmp
out
mov
pop
mov
lahf
int3
iret
dec
lds
out
lret
push
push
xor
inc
sbb
and
pusha
aas
adc
frstor
test
adcl
and
xchg
ror
test
scas
push
mov
loopne
push
int
mov
shll
pusha
mov
pop
outsb
repnz
sub
pop
adc
dec
xchg
push
cli
jo
jb
push
in
mov
shrb
test
dec
mov
mov
loop
das
dec
cmpl
pop
pop
pop
jmp
outsl
outsb
insb
ds
pop
sub
pop
add
popa
and
popl
lret
popa
push
mov
lahf
cmpsw
jae
cltd
popf
test
push
mov
lcall
es
lret
cmp
es
mov
pop
outsb
insb
sbb
daa
pop
mov
push
sbbb
sub
xlat
outsb
gs
cli
mov
dec
adc
imul
fs
ret
push
loop
fcoms
adc
inc
and
cmpsb
jne
xchg
mov
pop
sbb
mov
sbb
cli
jmp
inc
inc
setnp
lret
fildl
adc
lods
and
stc
add
fistpll
test
adc
dec
test
jmp
aaa
ljmp
add
testl
lods
mov
dec
adc
ret
les
mov
cmp
jl
aas
mov
mov
mov
mov
outsl
cmp
fisttpll
out
scas
push
push
bound
outsl
add
and
xchg
push
lock
mov
xchg
ja
and
dec
bound
enter
lret
mov
dec
push
sbb
imul
adc
add
aad
cwtl
pushf
mov
sbb
int
outsb
push
inc
cmp
jns
out
sbb
xchg
sarb
cs
sub
movb
pop
loop
btc
arpl
arpl
cmp
outsl
outsb
out
ds
lea
imul
jge
cltd
repz
faddl
inc
pop
scas
adc
push
jo
mov
mov
cmp
sbb
xchg
xor
add
mov
and
mov
push
in
fcoml
lods
test
add
addr16
adc
cmp
xor
add
xor
aas
xchg
jl
and
pop
jb
cltd
sub
pushf
movsl
aaa
pushf
dec
mov
jp
and
xchg
popa
fstps
pop
hlt
cli
and
or
dec
es
dec
fdivrl
add
xor
fisttps
dec
or
pop
repz
fmulp
ja
loop
sub
lea
test
mov
mov
fadds
dec
xchg
jl
popa
and
scas
dec
in
mov
and
out
mov
lahf
mov
rcrb
mov
xor
inc
movsb
inc
inc
xchg
jg
sti
inc
aad
add
stc
in
cli
push
mov
sbb
into
xor
add
mov
push
sarl
hlt
jg
lahf
adc
roll
jns
out
out
int
jg
sbb
ds
pop
cmp
insl
outsl
fsubrl
dec
adc
jge
mov
insb
in
xlat
cmp
xor
xor
jno
pop
pop
adc
fmull
mov
push
and
daa
cwtl
add
mov
or
inc
repnz
js
dec
bound
fstpt
dec
inc
add
inc
and
in
cmpsb
push
enter
push
stos
lods
in
mov
adc
pop
inc
mov
aaa
fsub
repz
add
jbe,pn
sbb
mov
adc
add
cld
leave
pop
jbe
aad
test
repnz
mov
xor
ja
or
sub
into
lcall
adc
cmp
add
lds
fldt
pop
dec
sub
in
push
fldenv
push
pop
out
push
jecxz
test
sub
jno
in
xchg
stc
push
xor
mov
movsb
xchg
cmpsl
lcall
sub
popa
and
mov
jmp
pop
rolb
or
inc
jnp
addb
js
cs
mov
inc
repnz
jne
imul
sub
xor
arpl
mov
fiaddl
add
cmpsb
cmp
push
bound
jecxz
std
jne
push
pop
js
adc
jecxz
push
adc
test
sarb
dec
mov
jns
push
loop
stos
xchg
insb
push
push
mov
sbbl
mov
xchg
and
add
fwait
lret
mov
adc
xchg
push
lcall
lods
mov
lret
jmp
dec
lods
and
dec
js
dec
aaa
pop
jo
and
inc
mov
dec
mov
sub
adc
mov
imul
push
cmpsb
mov
inc
mov
mov
push
dec
addl
add
sbbb
data16
test
fsubr
fcomps
lods
in
lods
aaa
insb
dec
mov
xor
add
inc
loopne
movl
scas
shll
cwtl
lcall
lcall
fmul
sbb
jno
or
mov
adc
ret
push
inc
int3
cld
mov
sbb
lock
xor
aam
xchg
mov
shlb
repz
pushf
xor
pop
sti
add
inc
push
arpl
clc
push
and
xor
sub
cmpsl
loop,pt
fs
pop
sub
ja
test
pop
ja
xor
mov
lock
dec
pushf
cmp
pop
cmc
ja
in
nop
push
xchg
shlb
test
fwait
mov
jns
nop
jbe
pop
scas
add
add
cld
pop
loop
test
fimull
in
pop
outsl
loope
sub
xchg
push
jle
cmpl
into
add
dec
imul
pop
mov
out
xor
aas
int3
andl
movsb
out
xor
int3
adc
inc
add
stos
scas
incl
sbb
lea
dec
andl
jl
ja
dec
iret
and
pop
xor
jle
pop
fadd
in
imull
arpl
decl
pop
mov
mov
jbe
fs
xor
mov
call
push
cs
jo
test
into
shl
movsl
mov
iret
mov
scas
sahf
adc
out
or
lock
and
sbb
mov
clc
cld
arpl
and
out
das
movsl
test
add
fldl
sub
in
mov
sbb
out
adc
xor
lock
inc
push
scas
ffreep
push
xchg
fiaddl
shlb
add
sub
mov
push
bound
sbb
xchg
pop
pop
push
lods
sbb
lods
jno
pop
fdiv
inc
shr
dec
fucomi
mov
fwait
daa
xchg
jle
pop
imul
out
add
mov
inc
mov
in
nop
cmpl
and
push
xchg
je
in
xchg
das
repz
jle
sahf
sbb
aas
mov
cli
addb
movsl
in
lock
cli
push
cmpsb
imul
popa
mov
outsl
sahf
loop
and
icebp
cmp
and
push
or
jp
mov
sub
sti
or
scas
jne
sub
loop
add
or
hlt
mov
dec
adc
dec
or
scas
les
mov
lahf
popf
lds
in
dec
jge
push
pop
push
adc
or
xor
xchg
loope
push
mov
testl
fwait
subl
jb
insb
add
or
push
ja
dec
repnz
sbb
adcb
enter
js,pn
mov
adc
or
inc
mov
out
or
jge
fmuls
mov
outsl
nop
cmp
lret
mov
sub
imul
dec
adc
adc
sbb
movsl
xor
inc
das
sub
or
sbb
cwtl
test
stos
lret
lret
sbb
mov
push
test
mov
mov
sub
popa
adc
in
shll
pushf
mov
mov
repz
in
push
pop
xchg
push
cld
mov
pusha
sub
jae
push
mov
arpl
stos
pop
stc
cmp
mov
mov
leave
loopne
iret
sub
daa
fwait
mov
inc
ret
repz
insl
cld
cld
cmp
sub
lret
mov
adc
test
add
ret
jo
fcomps
jbe
sahf
in
hlt
or
fsubrl
and
cmp
add
jecxz
jg
and
sub
out
aas
mov
lods
cmp
xchg
adc
test
adc
and
jns
mov
popa
addl
lret
sub
shr
ret
shrl
ja
mov
loope
mov
mov
push
cmovno
inc
ss
fnstsw
xchg
mov
repnz
mov
das
xor
imul
test
bound
outsb
movl
iret
pop
pop
mov
cmc
js
cmc
dec
shrl
mul
inc
test
adcb
mov
sub
mov
sub
jns
jnp
adcb
test
cmp
and
sub
je
xchg
pop
mov
jno
jne
pushl
dec
test
outsb
roll
xchg
adc
add
xchg
or
pop
enter
ds
fimuls
cmpsl
loop
sarl
stos
pop
lods
mov
lret
cld
jmp
loop
popf
mov
xor
call
mov
or
movsl
jmp
test
gs
sti
push
iret
mov
test
sbb
popa
shrl
pusha
lcall
orl
mov
push
inc
fisttpll
lahf
mov
cmp
lods
or
pop
popf
test
outsb
xchg
lock
fmul
mov
js
sub
xchg
std
je
lock
sti
cmpsb
sti
pop
and
mov
inc
xor
inc
test
inc
cmp
outsb
sub
clc
fdivrs
add
mul
and
loope
movsb
dec
and
dec
sbb
ss
adc
xor
aaa
divl
xchg
stos
jg
out
sub
pop
xchg
and
xor
push
subb
push
xor
aad
xchg
mov
dec
sub
shlb
in
xor
dec
and
mov
outsb
cs
sbb
clc
leave
xchg
inc
aas
add
push
lret
sub
adc
jmp
xlat
xchg
and
ret
jle
nop
rolb
xor
mov
push
xchg
push
in
hlt
ljmp
in
in
xchg
mov
or
mov
roll
ja
pop
xor
loope
jle
scas
sbb
icebp
mov
mov
loopne
cmc
in
mov
out
in
out
stos
data16
lret
and
bound
test
mov
inc
cmp
fs
xchg
mulb
dec
subb
data16
push
jp
in
add
inc
jnp
imul
cwtl
mov
cmp
dec
xchg
adc
lods
fwait
or
xchg
pop
jae
outsb
sub
dec
xor
cmp
ret
mov
sahf
aaa
push
cmp
push
rclb
or
or
jns
jns
push
xor
jmp
cmp
sub
arpl
test
popa
push
popa
shll
ljmp
ffree
sti
mov
pop
lods
dec
jle
out
inc
push
sub
push
cltd
push
inc
ljmp
sub
add
sub
dec
iret
xor
jo
es
loopne
in
out
cli
inc
push
push
aad
jp
xchg
js
popf
sbb
fucomi
cmpsl
js
rcrl
jl
xor
popa
sub
outsl
push
inc
adc
or
ljmp
rcrb
or
mov
sub
aaa
jo
sarl
mov
mov
adc
aaa
pop
and
aam
mov
add
jle
and
sysexit
mov
and
mov
pop
xchg
dec
mov
out
jp
mov
std
mov
push
leave
xchg
cmpsb
push
cmp
cmpsb
inc
enter
inc
scas
add
sub
in
dec
pop
test
movsb
ror
sbb
jnp
dec
rcll
cmc
and
lods
imul
insb
pushf
shr
push
mov
jl
or
mov
push
pusha
sbb
arpl
sub
sahf
int3
insb
lock
jp
and
inc
cmp
scas
adcb
test
popa
pop
pop
cmc
lahf
andl
fs
xchg
test
and
mov
add
sub
lret
or
sarl
das
xchg
xchg
or
pop
in
inc
dec
in
mov
aas
xchg
enter
mov
and
cld
addr16
jne
inc
bound
xchg
insl
ja
in
add
loope
or
push
stos
subb
or
testb
pop
orl
repnz
add
push
and
aam
mov
test
adc
cmpsb
imul
push
xchg
and
aam
push
jge
fcompl
pop
mov
mov
jg
jp
hlt
pop
stos
sub
les
jge
xor
mov
mov
fcoms
and
push
lods
adc
lods
stos
dec
jae
sarl
xor
jle
mov
dec
and
cwtl
adc
jnp
clts
mov
out
cmp
aas
pop
jbe
and
mov
pop
push
or
out
iret
jg
outsb
int
cmpsb
jnp
sbb
mov
pop
xchg
or
mov
pusha
pop
enter
xchg
xchg
push
jmp
mov
faddl
inc
cmp
jl
repz
jae
ss
mov
push
popa
shrl
mov
mov
push
stos
movsb
lret
js
dec
add
into
dec
call
stos
lret
shrl
adc
outsb
scas
hlt
sub
jge
mov
out
pop
jo
jle
scas
movsl
rclb
or
xchg
pop
cmp
fidivrl
fcomps
pop
cltd
inc
aaa
data16
lods
mov
pop
jns
data16
xchg
jae
lods
mov
mov
icebp
xchg
jo
add
pop
inc
out
ja
test
daa
ret
pop
not
sub
js
shlb
movups
pushf
out
lahf
cmp
push
aam
lahf
adc
insb
lcall
stc
fwait
insl
psrlq
je
ficoml
dec
ja
mov
push
stc
or
sub
and
shrb
push
ret
pusha
adc
aam
lahf
imul
mov
test
jne
cltd
jbe
in
pusha
push
cs
in
iret
jo
scas
sub
inc
lods
mov
in
fbstp
xor
test
pop
mov
cmp
adc
cwtl
es
adc
shlb
mov
sbb
cmp
or
out
push
cmp
popa
negl
insl
scas
xor
in
lret
mov
dec
aas
xor
and
ljmp
jns
and
pop
jae
icebp
fldpi
xor
daa
push
mov
aad
sbb
xor
add
mov
push
test
ficoml
bound
sbb
dec
movsb
adc
insb
mov
insb
les
loop
fdivs
leave
stos
insb
outsl
pop
mov
fs
cmp
inc
hlt
fists
jns
xchg
xabort
and
or
aas
jb
callw
imul
dec
mov
cmpsl
ficoml
pop
sbb
pop
cltd
dec
xor
and
fidivrs
das
mov
cmpl
sbb
arpl
sub
push
sbb
shl
push
jl
popa
lods
ret
iret
repnz
fstpt
mov
pop
lock
sarb
cmp
jne
lret
cmp
sbb
mov
sbb
out
lods
and
or
out
das
loope
decb
mov
addr16
xor
mov
and
mov
divb
fistpl
andl
adc
lahf
xor
in
stc
loopne
mov
xchg
add
or
sub
es
and
je
mov
ja
les
dec
fwait
jp
add
or
adc
mov
push
or
testl
cmp
add
loopne
cmp
aas
adc
cmp
fs
lock
js
jle
fcmovbe
adc
daa
dec
ss
inc
push
fildl
and
inc
push
pop
ljmp
xor
cmp
lret
lods
lods
cmpsb
js
sbb
jb
imulb
push
aad
jb
adc
fcomps
fsubr
push
dec
inc
xor
dec
sahf
lahf
inc
lock
add
mov
pushf
or
push
in
jmp
jle
pusha
dec
repnz
pop
daa
pushf
add
clc
mov
mov
sahf
and
ds
adc
mov
out
scas
mov
inc
ljmp
rcrl
sub
aad
sub
ljmp
cmpsb
lret
shl
lahf
or
add
jp
ds
jecxz
test
dec
cltd
out
xchg
lcall
pop
fiadds
mov
and
sub
or
jbe
or
sti
bound
xlat
cmp
mov
daa
mov
sbb
popf
loopne
pop
sbb
cmpsb
ret
adc
adc
fcomp
push
in
jno
jl
pop
fsub
sbb
lcall
test
push
inc
sbb
jns
mov
std
push
inc
adcb
gs
cmpsl
rorl
cmp
das
js
cwtl
loopne
xor
iret
ficompl
fildl
and
je
sub
clc
push
xorl
or
adc
or
or
lods
nop
rcr
rol
arpl
xchg
in
scas
mov
add
lea
adc
aam
imulb
ret
outsb
xor
dec
xor
xchg
push
leave
jno
movsl
xchg
and
ss
mov
pop
outsl
and
les
aas
xor
push
imul
aaa
std
ja
pop
jno
js
and
inc
mov
repnz
and
je
jecxz
fsubrl
xor
sub
lods
pop
mov
lods
stos
sbb
mov
int3
lods
pop
bound
xchg
jo
ret
cmc
vpshaq
sub
ljmp
subl
xchg
push
insl
mov
fistl
push
lret
xor
or
jno
mov
add
mov
xchg
cmp
cld
fld
adc
int3
fs
jl
sub
shrb
popl
shrl
cmp
sbb
mov
out
sub
xchg
mov
outsl
sub
cmp
daa
je
repz
and
dec
sarb
jp
inc
jns
xor
flds
add
mov
adc
das
adc
lods
loop
filds
movsb
lods
scas
jnp
pusha
mov
and
cltd
pop
xlat
test
data16
dec
les
push
testb
mov
out
pop
aam
pop
imul
push
mov
pop
xor
stc
push
mov
in
fisubrs
shrb
sbb
mov
lods
mov
inc
sub
push
out
push
out
sbbl
je
cmp
jmp
jne
sub
jle
mov
aad
xor
push
pusha
inc
imul
rcrb
mov
in
das
cmp
mov
movsb
insb
fs
push
sbb
and
lock
lds
jl
xchg
insl
push
inc
add
and
dec
sub
pop
sbb
sbbl
lret
fcmovb
lea
jge
xor
jbe
cmp
cs
jge
cmp
jne
adc
or
add
and
mov
xchg
add
imul
adc
out
aaa
imul
inc
jae
fcom
lea
test
lahf
push
aam
ljmp
cld
xchg
stos
iret
pop
xchg
pop
shl
jg
lods
and
push
lods
jle
hlt
xor
and
push
loopw
out
ss
xor
inc
and
pop
xorb
rol
mov
xchg
push
imul
and
xchg
push
popa
jae
dec
and
vmptrld
sub
lret
into
stc
je
imul
daa
lret
gs
or
fdivrs
lds
pop
mov
ret
testl
cwtl
xchg
stos
iret
mov
popa
xchg
jg
mov
ds
cmp
sub
mov
mov
stos
inc
xor
aas
test
adc
push
and
icebp
dec
cmp
loopne
js
jne
push
ja
call
jae
and
loope
inc
repnz
mov
jl
aaa
lret
sbb
push
mov
jnp
repnz
in
adc
xor
adc
aas
data16
xchg
cmp
je
sbb
cmpsb
mov
repnz
jbe
sti
push
mov
or
add
mov
pop
mov
lds
mov
je
mov
sub
adc
mov
push
jns
rorb
lock
gs
rcrb
add
andb
jbe
jnp
roll
pop
fistpl
psrld
sbb
lods
add
shrl
sub
lea
addl
cmpsb
lahf
jb
sbb
call
jle
addr16
jecxz
aaa
adcb
in
sbb
dec
lods
gs
xor
or
and
std
xor
out
xor
jle
lret
mov
sbb
pop
repz
ljmp
adcl
push
insl
mov
jp
testb
sub
sub
mov
aam
pop
push
repnz
cmp
hlt
jo
repz
lret
leave
stc
sbb
adcl
cmp
mov
sahf
cmpsl
pop
test
xor
push
inc
lods
mov
std
into
cmp
mov
dec
out
int
add
cltd
dec
test
dec
inc
cmp
fdivrs
loopne
cltd
add
sbb
push
jno
iret
int
adc
je
int3
std
push
adc
imul
imul
fstp
xor
sub
xchg
dec
push
std
test
jb
dec
cmp
incl
and
pop
jge
add
ret
imul
ljmp
nop
or
or
or
call
xor
xor
xor
cltd
push
or
mov
xchg
divl
mov
xor
push
dec
test
mov
pop
fwait
push
inc
imul
je
js
sbb
pop
add
push
and
dec
mov
in
xchg
sbbb
mov
fidivrs
cmp
add
pop
mov
xor
jg
pop
sub
shlb
fidivrs
mov
repnz
enter
ja
mov
add
call
sbb
imul
mov
in
inc
xchg
sbb
out
mov
repz
push
xor
mov
stos
add
mov
inc
pop
imulb
push
jb
std
addb
cmpsl
out
scas
fidivrs
jecxz
push
jecxz
xchg
cmp
jae
pop
cli
mov
rorb
rclb
lds
add
add
add
loope
lret
adc
mov
inc
ljmp
out
add
cld
out
cli
pop
hlt
or
inc
mov
pop
fwait
mov
xchg
cmp
add
icebp
adc
mov
repz
loop
sbb
sti
fwait
int3
sub
sbb
push
jmp
imul
mov
mov
outsb
das
push
clc
mov
gs
and
pop
or
ror
jmp
xchg
mov
jns
cmpsb
fistl
inc
stos
adc
fnsave
rol
cmpsb
sarb
hlt
and
add
inc
ss
test
add
fstpl
dec
ja
out
aad
or
test
outsl
data16
cmp
xor
icebp
out
mov
dec
lods
repnz
or
dec
add
mov
shrb
dec
and
mov
mov
add
xlat
outsl
outsb
cltd
xor
mov
mov
add
mov
xchg
pushf
je
mov
or
jmp
out
mov
xchg
arpl
daa
or
cmp
cmp
ljmp
lods
dec
mov
sahf
xor
pushf
mov
xor
cmpsb
jmp
ret
push
out
mov
push
cmpsb
andb
fs
addb
adc
mov
jns
mov
adc
cmpsb
call
cs
orl
mov
pop
in
in
inc
jg
sbb
and
ds
or
scas
sarb
lods
xor
stos
sbb
xchg
cmc
fstpl
daa
stc
mov
rcll
insl
sub
mov
aad
movsl
inc
xchg
cmp
call
scas
mov
push
push
xchg
mov
mov
mov
cmp
mov
fwait
mov
mov
stos
mov
push
ljmp
inc
inc
adc
mov
lds
xchg
repnz
jb
test
ss
imul
insl
or
pop
xor
out
dec
jle,pn
jl
pop
mov
or
mov
stc
mov
hlt
pop
cmpsb
jne
cmp
push
popf
sarb
xchg
push
fnstcw
mov
lods
inc
pop
dec
sbb
jmp
pop
push
test
jae
cld
xchg
pop
push
in
cltd
fsubrp
icebp
cmc
mov
mov
test
das
repz
push
inc
int
pusha
loop
lock
mov
enter
push
loopne
aaa
ja
xor
cltd
jge
jge
jle
vcvtsd2si
mov
jo
sbb
adc
out
ret
cltd
mov
cld
mov
mov
xchg
repnz
jbe
lock
orl
lahf
xchg
test
xchg
out
mov
pop
pop
jmp
mov
lret
lret
jecxz
aad
jle
dec
jb
or
sbb
add
push
test
lds
cltd
inc
addb
dec
inc
jle
and
cmpsb
xchg
inc
outsl
push
jo
test
pushf
clc
xor
pop
add
pop
nop
orl
fcoml
movsb
pop
push
inc
addl
sbb
in
sub
xlat
adc
adc
repnz
xchg
add
adc
bound
cmp
xor
sahf
inc
adc
dec
xlat
pop
lret
fcmovb
and
sti
jge
das
stc
cs
fsubs
fwait
mov
mov
add
icebp
aaa
leave
ljmp
mov
xor
jno
fidivrs
or
int3
dec
call
mov
rcl
xor
xlat
sub
loopne
sub
repnz
add
dec
mov
lea
stc
icebp
jecxz
pop
jbe
jns
fistpl
xchg
arpl
xor
dec
aam
sub
mov
out
or
lea
fsub
add
jo
cli
or
aas
add
popa
xor
mov
cs
or
xor
in
dec
cmp
repnz
cmp
pop
into
repnz
leave
mov
fnstcw
push
call
ja
push
call
test
negb
testb
popf
add
or
mov
les
sub
adc
scas
call
popa
push
popf
xor
jp
lods
add
pop
es
or
add
dec
mov
mov
scas
mov
orb
push
and
mov
rorl
dec
add
jg
cmp
inc
nop
dec
xor
cmp
or
and
cmpsl
dec
pushf
andl
loopne
sub
sti
mov
cmpsb
test
idivb
mov
notl
pop
mov
pop
xchg
daa
js
dec
shlb
xor
into
adc
xor
jno
sar
ljmp
inc
cs
sahf
push
mov
stos
adc
enter
dec
xchg
mov
pop
scas
outsl
push
fistpll
xchg
pop
xlat
loop
mov
mov
jne
out
test
stos
or
mov
jae
adc
fcomps
in
jno
xchg
mov
insb
mov
mov
or
repnz
in
inc
add
mov
mov
daa
in
xor
pop
jb
movsl
ret
push
mov
jne
mov
push
and
mov
lret
sti
inc
imul
or
xchg
jnp
imul
in
ret
andl
int
ss
xchg
test
faddl
outsl
jb
std
cld
jecxz
lret
ds
jecxz
in
fwait
xor
or
dec
es
adc
lret
gs
cmp
sbb
add
out
das
movsb
loop
dec
in
adc
inc
insb
xor
cld
les
and
icebp
loop
shlb
pop
incl
repnz
clc
mov
ljmp
pop
push
or
rcl
sahf
mov
and
and
pop
xchg
mov
mov
pushf
or
and
gs
add
dec
es
push
dec
ja
adc
or
test
shll
mov
xlat
mov
out
push
sbb
pop
imul
cli
incb
jns
inc
xor
sahf
mov
test
aad
ja
dec
sarl
ja
jb
and
arpl
cmp
push
loopne
adc
cwtl
test
push
testb
icebp
rorb
jg
aad
lods
push
mov
and
and
or
mov
imul
xchg
je
xor
jmp
arpl
xchg
std
sahf
jp
jle
rorb
lds
add
loop
push
push
shl
adc
add
pop
test
insb
or
rol
out
sub
xchg
out
rorl
cltd
fsubl
lds
and
xchg
fnstenv
adc
scas
stos
xchg
arpl
xor
mov
inc
fldenv
cmp
pop
outsl
mov
int
test
lahf
add
or
cltd
xchg
cmp
icebp
xorl
fstpt
bnd
negl
xchg
outsl
sbb
fstp
jns
cmp
sub
dec
add
mov
cmp
jg
mov
push
sbb
mov
cmp
gs
inc
incl
ja
push
jl
and
shrl
inc
inc
and
out
or
test
test
add
stos
shlb
push
in
cmp
addb
xchg
jl
femms
mov
cwtl
pop
shrl
loope
hlt
cld
addr16
dec
add
adc
add
pushf
jge
mov
inc
es
jbe
pop
adc
sub
loope
add
and
mov
cmp
pop
adc
cmp
jg
add
scas
sahf
mov
or
mov
ret
out
sbb
insl
mov
mov
repnz
jno
in
cmp
pop
jmp
cmpsl
arpl
test
push
and
sub
popf
sbb
pop
test
test
push
divl
mov
mov
push
xor
sub
jl
lock
fcmovb
test
mov
notb
in
pop
outsl
mov
xchg
and
mov
int
push
je
addr16
sti
jb
jecxz
mov
dec
scas
sub
cld
cmp
stc
ret
add
sbb
dec
sahf
in
fs
imul
adcl
adc
mov
sahf
push
popa
mov
scas
jg
sub
lret
xor
push
fiadds
mov
add
jns
add
loope
test
cs
inc
push
aam
into
lret
loope
sti
nop
out
and
jno
mov
es
add
or
nop
shrl
xchg
hlt
adc
flds
shlb
cld
stos
fwait
dec
jbe
mov
push
lret
or
mov
cmc
add
cld
jnp
rcll
inc
iret
cmc
inc
adc
jmp
xchg
push
jg
jne
mov
dec
dec
xchg
mulb
loope
enter
ds
cmp
pop
sbb
xor
in
sbbw
loope
outsb
inc
push
sub
fadd
cmc
or
sbb
fbstp
or
out
jnp
movb
push
das
add
adc
dec
pusha
leave
adc
mov
dec
pop
in
loope
add
jae
inc
xchg
mov
and
aam
out
xor
xor
outsl
pop
xor
cmpsl
test
loopne
into
in
lret
dec
and
and
fsubrl
dec
mov
add
sarb
sti
aaa
sbb
lret
repnz
rorb
or
jb
dec
jp
or
xor
and
pop
ja
xchg
jo
mov
mov
mov
sub
xchg
mov
pushf
xor
pop
inc
leave
shrb
sub
gs
adc
mov
cltd
pop
rorl
insl
pop
pusha
lret
test
clc
sbb
addr16
cmp
lods
movsb
mov
xor
fisttpl
sarb
sub
das
scas
in
adc
in
lahf
jbe
xor
mov
out
ret
push
or
add
sub
add
mov
out
or
dec
test
or
lods
cmpsl
and
sbb
arpl
and
fs
adc
jle
outsb
sbb
push
or
in
dec
push
popf
mov
sti
cmp
stos
cmp
adc
inc
pop
jge
mov
out
inc
xor
pop
push
cmp
add
and
out
push
scas
loope
repz
pop
inc
push
jnp
adc
or
cmp
adc
lret
lcall
in
sbb
test
test
fcoml
lret
jne
xor
inc
je
ds
mov
or
adc
push
xor
jle
or
mov
adc
mov
leave
in
sbb
lcall
jae
lds
in
pop
mov
ss
inc
mov
sub
stos
aam
jae,pn
mov
andl
ss
shl
rcll
adc
int3
out
add
sbb
rcll
dec
push
mov
std
push
lret
inc
and
push
push
icebp
push
and
outsl
pushf
adc
roll
sub
data16
jae
rorl
in
rcrl
jne
sbb
subb
cmp
popf
nop
outsl
pop
loopw
pop
movsl
mov
lds
push
mov
es
test
push
fstpt
mov
jne
lods
loopne
sub
les
movsb
pop
push
inc
lcall
sub
call
xor
mov
xorl
int3
or
mov
mov
popf
leave
out
fbstp
ficoms
fists
pushf
add
popa
jmp
loop
pop
xor
fwait
arpl
sub
mov
mov
dec
lock
inc
popf
insb
jno
sbb
rcr
push
cmpsb
adc
fwait
jecxz
inc
dec
xchg
xchg
cmpsl
fs
xlat
ret
arpl
adc
bound
mov
mov
sub
dec
int3
dec
lret
or
adc
mov
movsl
xchg
mov
sbb
adc
sub
sbb
insl
andl
shlb
push
xor
mov
out
jnp
jg
sbb
cmpb
mov
or
adcl
sbb
stos
inc
in
inc
xor
inc
pushf
aas
inc
push
dec
ds
in
je
jne
cwtl
mov
mov
ss
and
xchg
sub
in
cmpsl
in
aam
mov
and
ja
pop
xchg
and
push
pop
xor
cmp
jg
push
call
mov
mov
sub
sbb
repnz
leave
stc
mov
mov
or
movsl
jae
mov
mov
mov
in
mov
out
sbb
aaa
sarb
arpl
sbb
mov
clc
rolb
and
lock
cmp
popa
and
adc
cltd
fcmovnu
in
pop
mov
aad
add
es
int3
loope
push
jne
pusha
mov
xchg
in
addr16
bswap
push
xor
inc
stos
adc
sbb
in
adc
cmpsl
xor
sbbl
lods
ja
xlat
je
sub
das
dec
jno
xorb
dec
out
loope
loopne
cld
xor
or
xchg
lds
pop
pop
mov
dec
insl
push
sti
mov
mov
roll
pop
push
aas
mov
mov
fisubrs
push
add
test
call
or
cmpl
mov
push
cmc
rcl
mov
cmpb
aaa
mov
fwait
mov
frstor
dec
adc
add
xor
jmp
cli
cltd
push
arpl
mov
xor
pusha
scas
lods
pop
cs
jp
int
es
sti
arpl
lahf
mov
imul
mov
mov
out
into
lods
leave
outsb
jb
ja
jno
jecxz
xchg
adc
jecxz
mull
imul
mov
mov
scas
incl
push
outsb
xor
js
rcll
pop
fbstp
adc
adc
cmc
xchg
inc
sbb
or
mov
mov
outsb
addr16
xchg
arpl
jmp
push
sub
pop
cltd
out
insb
sti
in
in
push
ds
adc
popa
icebp
mov
lcall
adc
mov
loop
inc
inc
std
mov
sub
push
pop
adc
sahf
aaa
movsl
ss
cmpsb
jp
shrb
push
cltd
insl
jae
cmp
sub
stos
jp
or
and
call
adc
jb
adc
mov
jp
jb
pop
aas
inc
push
int
pushf
pop
stos
lock
hlt
and
outsb
arpl
aaa
mov
and
scas
cmpsb
insl
push
mov
rorb
lret
push
xchg
and
adc
cs
ret
pop
test
lcall
insb
or
fidivl
jae
lret
orb
insb
lret
adc
jg
js
out
mov
outsb
filds
cmp
scas
jle
stos
xchg
daa
pop
cmpsb
leave
icebp
jo
stos
inc
and
loope
in
lods
bound
lahf
lret
lds
je
dec
out
or
cs
imul
pop
sub
cmp
lcall
lcall
sub
mov
repnz
sub
adc
das
jg
push
in
mov
aad
jbe
bnd
pop
push
sbb
mov
sub
ds
leave
cmp
xchg
inc
test
pop
aas
jl
notb
inc
dec
sub
inc
lods
inc
outsb
mov
and
push
movsl
xor
in
sarb
sarb
sbb
popa
and
nop
rcl
imulb
xchg
daa
inc
sbb
mov
movsl
aas
and
mov
sbb
and
sub
aam
popa
push
cmp
insb
scas
adc
or
stos
je
pushf
call
mov
cmp
sbb
dec
add
sbb
and
data16
dec
push
test
lock
jnp
mov
jnp
movsb
lahf
fs
pop
daa
jl
std
in
sub
mov
dec
jmp
shll
std
fdiv
je
adc
clc
lods
test
pop
mov
xchg
fstl
cmc
scas
pop
adc
fisttps
mov
lods
in
dec
sti
xor
mov
loop
mov
dec
sahf
ljmp
xor
cmp
aam
imul
push
sbb
cmp
out
ss
cmpsl
mov
into
sub
sarb
and
cli
jb
inc
mov
pop
jae
popf
lret
out
loope
and
fisubs
jo
jge
ljmp
cmp
dec
int
mov
mov
or
fsubl
lods
ss
sahf
movsl
jbe
repnz
or
sbb
or
mov
pop
aaa
push
mov
outsl
pushf
pop
orps
sarl
pop
jnp
cmp
jecxz
les
xor
jle
and
negb
pop
dec
xchg
ljmp
adc
pop
jge
pop
fisttps
dec
dec
int3
jo
xor
xor
adc
ja
pusha
loope
adc
xchg
jg
push
adc
cmp
and
les
inc
cmp
inc
cwtl
scas
bound
mov
insb
fdivrs
xchg
stos
sub
push
mov
in
push
or
mov
push
mov
gs
call
pop
ret
inc
jo
fidivs
inc
jnp
mov
mov
adc
out
pop
les
and
fstps
pop
sbb
inc
aas
sbb
repz
dec
mov
sbb
push
jl
add
out
insb
loopne
mov
jmp
adcb
ljmp
jg
aam
jne
cmp
jb
js
add
push
mov
pop
xor
in
jnp
jge
jne
popf
sub
scas
outsl
sahf
mov
adc
ret
add
test
movl
jge
pop
add
adc
test
ljmp
fdivr
sti
add
or
loopne
jno
jbe
sbb
xchg
cmp
mov
outsb
mov
cmp
jecxz
inc
and
adc
inc
and
pop
jne
shr
mov
sub
orl
daa
mov
enter
orl
mov
jl
adc
sub
mov
push
test
cmpsb
cmp
push
in
jae
xor
in
mov
push
sub
jne
paddb
and
adc
fiadds
fildl
fwait
in
bound
cltd
ret
jg
and
mov
mov
divl
test
ret
push
jne
jbe
push
aad
mov
adc
xor
hlt
lock
into
fisubs
stos
and
enter
popa
in
or
stos
int
mov
in
popa
add
in
xchg
inc
call
push
out
push
mov
add
fiaddl
xchg
dec
xor
mov
insb
mov
ret
cwtl
es
pop
xchg
pop
movsb
cs
sub
movsl
imul
fstpl
cmpb
das
lock
mov
lret
push
mul
mov
push
mov
fdivrs
loope
xchg
mov
cld
testl
cli
std
in
push
int3
jg
inc
sbb
fiadds
mov
pop
leave
sahf
js
mov
mov
orb
push
push
mov
pop
jae
adc
pop
pop
out
inc
jns
inc
or
sub
lret
pop
sub
push
sub
call
lods
movsb
mov
lds
repz
pop
call
movl
jge
mov
addr16
mov
pop
fistl
out
push
cmp
cmpsb
fdiv
pop
adcl
subb
push
inc
lock
mul
mov
or
ficomps
in
jecxz
mov
mov
xlat
test
mov
and
cmp
subb
inc
xchg
adc
aam
rorl
movsl
pop
push
fs
xchg
push
addl
or
mov
aas
stc
add
adc
adc
xchg
mov
cwtl
jp
sti
xor
in
test
mov
je
psubusw
stos
dec
repz
jns
pop
pop
or
lahf
cli
jge
sarb
js
fs
mov
jge
or
mov
jns
ljmp
push
int3
psrlq
pop
sbb
aam
movsl
les
mov
mov
adc
cwtl
inc
push
andl
daa
subl
push
loopne
xor
int
pop
jmp
cmp
repz
cmp
adc
and
mov
mov
xchg
ds
jae
dec
insb
xchg
faddl
insl
in
imul
fcoml
adc
dec
push
adc
adc
mov
mov
jp
adc
ljmp
fs
mov
dec
mov
sbb
push
mov
cmp
pop
adc
xchg
inc
fwait
mov
int3
in
push
push
jmp
or
adc
data16
js
or
lds
in
inc
xor
daa
dec
test
rclb
xchg
test
int3
jb
popl
dec
fsubs
loop
sub
lods
mov
mulb
sub
mov
shr
loope
push
aad
mov
popa
adc
into
inc
mov
cmp
lahf
mov
lds
sarb
iret
rclb
mov
ret
xor
int
push
ret
mov
jp
mov
popa
mov
xchg
les
dec
cmp
fwait
test
mov
int
or
push
jl
sub
into
cmp
xor
add
mov
jle
pop
arpl
movsb
push
rclb
mov
enter
sbb
incl
mov
shll
leave
mov
mov
adc
inc
test
or
call
hlt
repnz
fwait
sti
pop
and
mov
lahf
mov
add
insl
in
xlat
cmpsl
aaa
pop
cli
sti
je
cs
outsb
data16
dec
sahf
pop
dec
xchg
lods
or
clc
push
pop
push
decl
pop
jbe
sub
dec
or
mov
sbb
push
and
fsubr
lahf
vprotq
out
imul
aaa
imul
pop
add
notl
orb
mov
clc
mov
dec
xor
cltd
xor
movsb
xchg
stos
shl
ljmp
mov
mov
dec
jae
int
fnstenv
mov
jge
push
mov
jnp
ja
xchg
cld
jp
jae
not
pop
inc
cwtl
jae
inc
shrl
or
int
clc
inc
in
lds
adc
add
frstor
push
fstps
sub
inc
insb
nop
ljmp
adc
test
mov
outsb
xlat
out
aas
mov
jns
jo
cmp
subb
add
xchg
xchg
ficoml
lcall
push
sar
jmp
inc
std
mov
inc
iret
fimuls
pop
jnp
sbb
daa
cli
popa
sbb
outsl
xlat
pop
popf
push
push
leave
inc
test
in
jo
xor
inc
mov
sti
das
rcr
xor
mov
pop
mov
dec
lahf
in
pop
insb
jl
pop
stc
repnz
jb
imulb
mov
push
mov
cmc
test
out
fsubr
pop
jno
ficompl
in
scas
xchg
movsb
jge
xchg
push
jb
xchg
imul
ret
mov
add
lret
cwtl
mov
pushf
orl
fidivl
push
jb
xorb
stc
outsb
scas
jle
mov
insl
cmp
xchg
mov
loop
sbb
cmp
fwait
and
nop
enter
daa
testl
push
cmpsl
or
nop
das
aas
xchg
adc
popa
cmp
pop
popa
xchg
cmp
and
faddl
jg
push
jle
sahf
ret
lea
and
pop
stc
mov
xorb
repnz
jp
push
pusha
incb
pop
xor
stos
cmp
rol
xor
push
mov
adc
adc
scas
daa
ja
fisubrs
pop
in
add
mov
ljmp
dec
je
add
xchg
aaa
or
bound
cmpsl
cmp
hlt
popa
mov
es
ljmp
aad
stc
lea
jmp
mov
adc
popf
add
jg
mov
xchg
push
lods
mov
xor
flds
sbb
xor
lods
cmp
rorl
scas
addr16
aam
in
mov
cmp
mov
sub
insl
or
push
xchg
cmp
fwait
roll
pop
add
mov
cmpsl
int3
testl
pop
and
inc
adc
mov
add
adc
xor
arpl
or
or
xorb
sub
and
pop
inc
push
push
pusha
sub
scas
test
sub
jmp
cmpsb
xchg
jo
sbbb
shll
mov
mov
fwait
outsl
sbb
push
fdivrs
mov
outsb
sbb
and
and
lret
jno
sub
imul
lods
cmp
sbb
or
rclb
push
lret
mov
outsl
sub
jmp
adc
dec
popa
push
cs
mov
dec
mov
call
mov
outsl
fstl
std
push
idivl
pop
sti
and
mov
mov
loope
push
orl
xor
mov
pop
mov
or
loopne
jb
ret
shrb
xchg
test
sbb
adc
jmp
frndint
sbb
mov
pop
bound
mov
inc
cmp
sbb
int
shlb
cmp
pop
daa
dec
add
xchg
fcomps
aas
dec
xor
pusha
insb
adc
inc
push
xor
jmp
gs
mov
jg
out
sub
lods
mov
gs
or
dec
cld
outsl
inc
or
inc
jecxz
add
daa
jne
xor
int3
xlat
neg
arpl
cwtl
mov
mov
mov
dec
lcall
xchg
imul
out
xchg
out
xor
je
and
lret
pop
inc
add
add
adc
scas
outsl
jo
mov
add
sub
jns
mul
lds
rorl
sbb
or
test
sbb
push
fldt
test
sahf
setp
xchg
jae
xor
pop
cmpsl
push
fdiv
jae
cmp
xchg
into
and
out
and
mov
es
lret
adc
fnstenv
mov
jno
subb
into
adc
inc
dec
test
sar
push
push
jp
test
dec
insb
jno
cmp
xchg
popf
fdivs
jp
push
adc
add
je
inc
fcomp
jne
test
mov
or
mov
xchg
stc
gs
outsb
xchg
lahf
adc
shrb
popf
popl
push
and
jb
dec
out
out
mov
inc
mov
inc
lea
cmp
adc
xchg
repnz
lods
mov
jnp
es
xor
ret
lods
shrl
test
iret
mov
dec
push
adc
hlt
bound
sbb
push
mov
mov
push
in
or
ret
and
sbb
mov
push
orl
push
rorb
je
xchg
and
aad
mov
sub
fsub
or
push
and
es
mov
std
sbb
int
cld
mov
lret
adc
test
or
mov
enter
mov
out
cmp
pop
aas
rorb
xor
mov
vpminsw
mov
in
mov
xchg
outsb
sbb
mov
in
inc
jne
icebp
jl
dec
sbbl
outsl
jo
cmp
sub
cmp
mov
pop
mov
adc
xchg
addr16
and
jae
das
mov
mov
in
clc
cli
shll
push
mov
jg
mov
add
mov
jo
push
pop
push
push
mov
mov
in
mov
or
sub
mov
dec
mov
add
pusha
push
pushf
jns
jo
adc
loopne
mov
sbb
inc
in
mov
gs
dec
cmpsb
adc
add
movb
mov
out
or
insb
or
test
aam
pop
fcoms
add
aam
cld
test
pop
rorb
cmpsl
popa
out
fidivs
cmpsl
sub
dec
daa
enter
pop
aam
cli
sahf
ja
xor
insb
sbb
mov
clc
push
sbb
dec
xor
nopl
dec
mov
sysenter
xor
scas
mov
rdpmc
dec
out
xchg
xlat
fadd
push
daa
inc
call
mov
inc
dec
lahf
xchg
sub
test
pop
jle
out
es
aas
push
add
xor
iret
mov
pop
inc
mov
cmp
imul
es
sub
mov
out
into
test
mov
and
ret
add
jge
fnstcw
pop
mov
fwait
iret
rep
ja
fnstenv
and
pop
daa
loope
cmpl
mov
xor
movsb
es
push
pop
fcmovnb
jns
pop
icebp
or
iret
jo
loop
std
lock
dec
ret
aad
jp
xchg
or
mov
jmp
mov
add
adc
mov
cmp
mov
insb
push
in
lahf
pop
es
sbb
mov
jg
es
pop
hlt
add
sahf
repnz
xchg
lock
sbb
sarl
pop
mov
fildl
add
mov
add
rcrl
inc
cwtl
stc
push
hlt
cmp
enter
rcll
notl
push
pop
jecxz
and
xorl
xchg
xor
movsl
mov
cmp
ror
aaa
inc
pop
shll
aaa
popf
jle
or
inc
stc
or
jge
and
stos
cmp
scas
jae
int3
or
jne
inc
jp
xchg
mov
jno
dec
hlt
in
mov
push
push
push
xor
mov
inc
cmpsb
enter
ret
or
hlt
sarb
lock
subb
lock
out
push
lea
movsb
mov
popf
mov
hlt
push
jb
das
call
daa
call
lret
insb
arpl
jnp
stos
je
jae
in
and
dec
js
push
add
lea
call
sbb
jbe
jne
mov
sbb
popf
in
dec
jl
mov
sahf
out
inc
mov
dec
inc
aaa
adc
sbb
sti
mov
sbb
and
ljmp
cld
mov
loop
lcall
cmp
push
inc
test
inc
lret
dec
fcmovb
xlat
dec
mov
cmpsl
or
sbb
cmp
pop
mov
cmp
pop
adc
in
adc
in
out
pop
je
cmp
dec
or
addr16
push
mov
cmc
add
iret
jo
stc
bnd
pop
push
jmp
out
xor
in
add
mov
in
out
cld
inc
lock
inc
xchg
out
outsl
js
jnp
jnp
idivl
xchg
ss
pop
sub
or
xchg
lea
test
out
jle
nop
movb
push
adc
cli
mov
sub
inc
pusha
mov
out
or
je
push
sub
jns
push
rclb
ret
xorb
fucom
or
sub
mov
fs
dec
js
or
push
and
shr
jae
fimull
xchg
scas
adc
push
add
nop
sub
movsl
fsubrs
pop
dec
add
rcll
sbb
sub
ss
loope
push
mov
sub
das
mov
test
sbb
clc
test
das
daa
adc
inc
xor
sar
mov
shll
jne
mov
out
xor
push
nop
lods
cmp
and
dec
std
ljmp
jecxz
mov
filds
dec
jae
mov
push
or
jae
push
jle
cmp
push
pushf
inc
out
jecxz
pushf
lcall
dec
pop
js
cmp
or
popf
inc
jg
xchg
fnstsw
pop
pop
ss
push
iret
clc
fisubl
push
call
lret
hlt
lcall
loopne
aaa
aad
lock
ret
pop
cmp
inc
xchg
dec
shrl
xchg
sbb
arpl
push
outsl
xchg
mov
test
icebp
imul
leave
popf
repz
jno
xorb
add
push
icebp
test
in
push
and
dec
lea
movsl
fcoms
mov
jg
in
js
loop
pop
js
sub
cli
lods
pop
and
mov
aad
sub
cld
pop
repz
mov
inc
sbb
cld
jecxz
stos
pop
push
flds
cmp
pop
outsl
cmpsb
jle
pop
enter
jle
lret
sbb
std
loope
psrlw
xorl
push
cs
lahf
adcb
push
dec
push
filds
into
mov
sti
pop
xchg
xor
cmp
das
out
scas
gs
pusha
cmpsb
into
ja
cltd
icebp
rep
call
test
jp
fiaddl
shll
sub
popf
jp
arpl
push
dec
xchg
imul
dec
lock
ds
jno
jmp
xor
adc
sub
push
pop
pop
pop
dec
pop
cltd
inc
insl
push
mov
mov
ja
test
ret
lahf
int
outsb
xor
lret
add
mov
clc
sbb
sbb
test
xchg
jo
inc
and
cmp
stos
stos
sub
scas
push
jbe
mov
mov
mov
jl
sub
cmp
pop
dec
sbb
cmp
mov
insl
leave
pop
repz
xchg
rcll
shrb
in
out
mov
int
push
cli
mov
xchg
je
int3
xor
sbb
push
xor
imul
xor
aad
repnz
nop
hlt
jns
mov
out
ds
jl
pusha
cmp
out
fists
dec
xchg
cs
imul
stc
lahf
mov
enter
sub
xor
xchg
out
inc
xchg
jp
lahf
cs
mov
mov
stos
push
mov
jbe
pop
xchg
and
aaa
stc
mov
minps
push
pop
or
jp
dec
inc
bound
adc
mov
mov
and
mov
cld
pop
mov
pusha
clc
lods
adcb
dec
inc
js
call
call
js
inc
fadds
push
repnz
mov
cld
fistpll
mov
inc
insl
or
insl
into
sub
popa
xor
scas
push
in
sbb
inc
scas
add
mull
cmp
sbb
push
push
pop
loop
inc
dec
fisubrs
clc
jbe
sbb
shrl
xchg
cmp
lea
sbb
or
xchg
loopne
cmpsb
test
stc
mov
mov
mov
into
mov
lahf
fstpl
and
mov
and
add
adc
sub
aas
mov
outsl
xor
f2xm1
addr16
push
addr16
inc
lea
nop
xor
call
leave
xor
add
fadd
pop
notrack
pop
cmp
sub
xchg
fadds
dec
es
inc
add
jno
ljmp
sub
or
scas
mov
vphsubwd
add
mov
pop
xchg
sub
imul
and
scas
sub
sbb
and
dec
call
push
xor
shlb
push
jg
clc
xchg
ret
jno
add
das
dec
mov
test
packuswb
fistpl
movsb
push
sub
jg
jmp
push
adc
mov
mov
pop
sub
ja
out
pop
sub
test
outsb
mov
jo
sbb
jno
jne
arpl
std
cmp
ficompl
int
or
aam
cmp
mov
in
imul
cs
and
sub
mov
aam
sub
mov
mov
sbb
popa
repz
mov
add
sub
repz
xchg
sub
in
xor
pop
jne
dec
popa
cmp
push
mov
testl
shlb
jp
cli
jbe
aad
cmc
or
shl
cwtl
stc
mov
sub
dec
xchg
ret
cli
shll
fists
mov
insl
and
push
or
inc
popf
ja
push
mov
lods
adc
pop
lds
pop
inc
push
fadds
imul
in
pop
cltd
sub
jnp
mov
push
insb
pop
aad
cmp
xor
push
fidivrl
hlt
sub
bnd
pop
repnz
jo
pop
cmp
adc
adc
xor
pop
pusha
adc
cs
lahf
mov
push
orl
movsl
xchg
lock
aas
out
cld
test
loopne
push
hlt
mov
in
arpl
and
mov
icebp
adc
cmp
and
loop
cs
xor
fdivp
ds
lret
pop
and
cmp
cmpl
pop
pop
std
jbe
mov
sub
dec
add
cmp
adc
ja
outsl
sub
clc
or
xchg
jnp
lds
adcb
movsl
inc
mov
icebp
fcmovnb
mov
sti
and
into
jg
jmp
mov
mov
inc
xor
repz
add
push
into
xchg
push
mov
cltd
mov
push
fwait
or
xor
lret
cltd
push
pop
sbb
push
dec
leave
popa
into
fdivp
mov
aam
test
mov
fsubrs
push
out
shl
xchg
lahf
add
add
es
mov
iret
xlat
push
or
mov
aas
jmp
cmp
and
nop
or
dec
mov
xor
in
sub
stos
test
xchg
pop
cmp
xchg
inc
cltd
mov
xor
adc
movsb
mov
mov
mov
cmp
or
xchg
sbb
imulb
imul
or
adc
xchg
test
sub
dec
daa
int3
and
mov
sbb
inc
in
xor
mov
adc
stos
cli
mov
jns
xlat
jns
stc
sbb
fadd
adc
inc
leave
sahf
pop
sbb
push
lods
cmp
add
adcl
ret
pop
ds
test
cltd
dec
mov
push
push
ss
movb
jmp
jnp
adc
mov
sub
das
incl
sbb
in
mov
insb
push
lahf
mov
cli
and
adc
push
gs
pop
loopne
fsub
aaa
jbe
pop
push
repz
jb
es
fistps
adc
or
sbb
mov
add
insb
add
std
das
jo
push
movsl
gs
jg
and
lret
shl
test
lea
pop
add
mov
in
ficompl
shlb
xor
cli
pop
subb
xchg
stc
mov
sub
or
or
mov
aam
pop
imul
and
mov
sti
mov
js
jge
pop
xchg
push
mov
int3
clc
arpl
stos
imul
std
push
iret
fs
int3
adc
shl
test
pop
pop
mov
sub
je
and
gs
push
lods
in
out
imul
jbe
cmp
cmp
dec
jno
dec
stc
jne
mov
mov
incl
push
mov
in
push
adc
lock
cld
lret
xchg
movsb
icebp
popa
aas
jg
sub
xchg
int3
sub
nop
idivl
adc
pushf
std
adc
jns
xor
adc
push
xchg
pushf
ja
adc
cmp
fcoms
insl
mov
das
dec
cs
pop
xchg
repnz
and
xchg
test
ljmp
pop
add
adc
push
ficoms
push
fisttpl
popl
dec
or
pop
flds
sti
pusha
test
scas
ficoms
frstor
sbb
mov
inc
cmpsl
fwait
lcall
mov
cmp
mov
arpl
push
outsl
fists
sub
lods
sub
aam
dec
ret
ljmp
jne
into
adc
jo
mov
cmpsl
and
daa
dec
mov
fs
sbb
jge
mov
jp
pop
pushw
adc
inc
mov
std
lret
pop
xlat
and
jge
push
or
stc
jecxz
and
inc
pop
mov
sarb
cmpsl
insb
dec
add
pop
loopne
repnz
mov
mov
minps
jns
ret
sbb
shrb
xor
xchg
jle
mov
ret
push
imul
add
inc
pop
dec
flds
pop
out
push
imul
dec
mov
aam
xchg
adcb
inc
cltd
pop
sbbl
xchg
dec
ret
xchg
lahf
xchg
ss
pop
insb
ss
lods
push
push
cwtl
cmp
jb
int3
in
sbb
sub
mov
xor
arpl
jne
pop
jl
lods
arpl
xchg
pushf
ja
jecxz
rcr
xor
int
add
jnp
mov
add
cs
push
jl
sub
call
das
repnz
mov
push
mov
outsb
inc
into
mov
out
movsb
sbb
sti
and
push
jnp
cmpsl
jge
lret
cld
mov
pop
adc
stc
mul
mov
sbb
jl
jno
cmp
sbb
inc
inc
pop
sub
dec
cld
in
gs
or
sbb
xor
in
popa
js
and
mov
cltd
out
mov
fisttpll
or
pusha
mov
cmp
lret
daa
push
push
sbb
push
push
mov
ret
es
sbb
xor
mov
push
int3
js
dec
icebp
push
shrb
sti
jp
in
rclb
aam
hlt
mov
fsubrs
push
mov
cmp
dec
xor
test
or
pop
xchg
sbb
dec
inc
sbb
cmpl
pop
lret
mov
lods
popl
aam
adc
mov
leave
test
popf
dec
movsl
mov
pop
mov
arpl
mov
stos
pop
popf
data16
sbb
push
jg
mov
test
sarb
into
add
iret
pop
pop
pusha
and
dec
inc
jmp
cmp
out
imul
add
insl
cmp
inc
cmp
xchg
inc
in
cmp
jl
testb
push
and
das
pop
and
adc
out
jns
mov
sub
mov
aaa
clc
cmp
adcb
pop
add
out
push
xlat
jle
pop
pusha
mov
jl
imull
sub
fiadds
loopne
lret
mov
insb
cltd
xor
jge
fmull
dec
dec
add
adc
fld
xor
sbb
outsb
or
aad
inc
dec
lods
daa
cwtl
hlt
mov
cmpsb
or
push
mov
loopne
fwait
adc
stc
fwait
into
sub
sub
and
pop
add
popf
in
pop
adc
popa
mov
sub
add
xchg
mov
add
scas
out
shl
stc
pop
test
mov
in
jo
lcall
lahf
push
adc
popf
and
adc
inc
cmpsl
mov
in
jne
sbb
mov
dec
out
jns
inc
inc
inc
inc
adc
pop
mov
sub
cmpsb
jb
cmp
ret
push
adc
test
aam
pop
lods
mov
cmp
adc
mov
dec
mov
push
aad
cwtl
jnp
mov
mov
mov
mov
sarb
fcom
sahf
pushw
daa
sarb
mov
xchg
clc
push
loopne
push
push
adc
push
jge
lahf
out
outsl
cmp
negb
lea
xchg
mov
adc
pop
push
arpl
dec
outsl
nop
sbb
mov
jecxz
gs
mov
in
data16
hlt
or
push
pop
pop
adc
sub
xor
bswap
adc
cmp
mov
out
cs
insl
push
ret
xchg
inc
mov
insl
sub
adc
mov
into
jb
lahf
out
mov
xor
jle
sti
sub
cli
pop
shll
test
xor
rep
and
inc
ret
lahf
inc
push
test
mov
sub
repz
mov
sbb
dec
js
loope
jae
mov
pop
cli
adc
repz
call
insl
or
loopne
or
shll
decl
xor
xor
fs
mov
mov
pop
pop
fst
sbb
mov
xor
adc
push
in
ret
sbb
sbb
out
mov
in
pop
icebp
jl
add
cmpsb
jmp
cmpsl
pop
leave
xchg
sub
cmp
cmp
mov
mov
xor
sbb
mov
cwtl
adc
inc
arpl
dec
cmpsl
or
adc
std
mov
arpl
or
cli
cmp
test
lock
aam
pusha
scas
cmp
outsl
or
pop
add
dec
pop
test
and
stos
jle
sbb
mov
aam
add
negb
cltd
dec
adc
pop
nop
ss
xor
aad
sbb
add
xor
xor
int3
inc
lcall
jne
sti
sub
xor
leave
into
add
pop
jns
mov
and
push
mov
pop
rep
inc
push
nop
orb
movsb
pop
mov
incb
jbe
icebp
inc
fs
dec
mov
insb
lods
sbb
add
push
cmp
jle
cmp
jecxz
lret
cld
mov
pushf
push
sti
into
aas
shl
inc
cmp
dec
push
insb
enter
les
pop
fistps
insl
lahf
ljmp
stc
add
ja
sbb
lret
pop
push
lret
inc
jge
ss
dec
enter
aas
push
int3
sti
jno
push
sub
enter
mov
xchg
and
sub
imul
cmp
repnz
cmpsl
loop
add
iret
jno
cmp
pop
pop
imul
aad
mov
pop
pop
dec
cli
mov
cmp
andl
hlt
pop
pushw
and
push
leave
vpsubw
pop
add
and
aaa
data16
inc
arpl
mov
mov
lods
je
addr16
jecxz
mov
push
rcrb
inc
lret
mov
xor
das
imul
mov
call
das
jnp
call
dec
cmp
inc
and
or
mov
out
lock
jb
pop
int
mov
scas
mov
fsubrp
push
jmp
loopne
leave
jo
popa
in
xor
imul
in
jae
data16
dec
or
aam
cwtl
in
and
mov
rorb
sbbl
fwait
fsubrs
adcl
mov
mov
out
sti
repz
dec
pop
fistps
dec
cwtl
dec
jo
lds
mov
lret
xor
mov
xor
pop
dec
xor
push
mov
sbb
lods
adc
jg
sbb
mov
sar
ret
sti
mov
xchg
mov
and
dec
jle
adcl
mov
jmp
mov
dec
xor
or
xor
dec
scas
popf
cmp
icebp
aas
pop
stc
enter
enter
mov
insb
push
sbb
arpl
es
sub
jge
mov
flds
sub
lret
fsubs
push
xor
and
add
push
in
arpl
push
lcall
mov
shlb
cmp
dec
sti
or
jle
xchg
inc
and
divl
dec
push
xor
push
ss
nop
stos
les
movsb
jg
push
je
cmpb
mov
rclb
rorl
shlb
jbe
mov
cmp
sarl
xor
inc
cli
push
and
jle
call
imul
cli
stc
xorl
mov
clc
aam
mov
jmp
and
mov
in
xchg
fsubl
sub
ja
sub
mov
mov
mov
mov
sub
lret
dec
gs
lcall
outsl
mov
sub
add
ret
push
out
dec
mov
mov
pop
cld
cmc
inc
bnd
popa
xor
push
mov
fistpl
inc
cmp
and
adc
pop
jmp
add
out
xchg
imul
and
aad
cmp
or
test
adc
mov
push
mov
mov
mov
push
and
fisubrs
xor
cmpsb
mov
std
js
xor
add
outsl
rcrl
mov
pop
inc
cmp
shrl
mov
fs
dec
mov
pop
sbb
sub
movsl
test
hlt
jno
int
out
ja
sbb
fstps
inc
inc
push
mov
pop
bound
loop
push
and
and
stc
mov
andb
mov
add
testb
mov
cmc
int3
sbb
iret
fbstp
jnp
jp
je
or
idiv
fsts
pop
xchg
push
sub
sub
mov
jl
mov
and
movsb
push
xchg
sbb
push
repz
je
and
je
pop
cmp
mov
dec
inc
xchg
mov
loop
ficompl
mov
imul
std
clc
icebp
divb
ret
push
cltd
cmp
push
neg
mov
es
arpl
pop
adc
push
sub
sarb
mov
and
stos
inc
hlt
sbb
cmp
xchg
out
repz
jns
mov
push
fldl
jne
popa
mov
cmovle
icebp
push
lret
mov
and
pop
pusha
xor
mov
mov
clc
inc
imul
sub
insl
sbb
pop
jp
add
mov
enter
por
and
rorb
aad
loop
aaa
clc
or
movsl
add
push
les
repz
loop
shrb
scas
cs
dec
cltd
int
xchg
stos
add
in
or
andb
mov
outsl
mov
fsubrl
mov
js
stc
mov
cltd
call
data16
mov
lret
push
adc
in
pop
rcll
add
push
sub
popa
fidivrl
inc
scas
dec
sub
sub
add
fs
sbb
inc
xor
fucomp
bswap
test
sbbb
xchg
mov
dec
push
in
pop
sub
add
xor
stc
lods
push
jle
sub
cmp
or
aad
xor
mov
dec
rorl
mov
mov
cmp
call
dec
mov
sub
popa
ret
cmpsb
sbb
repnz
mov
pop
sub
push
dec
insl
bound
aaa
aaa
arpl
loopne
dec
je
sahf
rorl
jecxz
fcoml
pop
test
lods
call
inc
iret
and
sti
xchg
dec
inc
int3
adc
xchg
out
pop
icebp
add
mov
xor
sbb
and
pop
roll
stos
jae
add
pop
xchg
sub
mov
xor
pop
push
fdivs
daa
pop
adc
jns
sbb
cmc
jmp
in
in
fwait
das
adc
clc
add
xchg
test
adc
inc
fdivs
jmp
outsl
sub
mov
mov
test
or
test
fwait
or
xchg
fsubr
adc
ja
sbb
and
in
pop
lock
imul
mov
push
jl
mov
pusha
sbb
imul
add
js
iret
push
movsl
push
mov
xor
push
mov
dec
lret
js
lods
adc
pop
stos
fsubrs
popa
adc
iret
lods
test
mov
mov
cmp
dec
testb
test
clc
xor
push
pop
xchg
arpl
push
aad
mov
orl
insb
push
xor
push
xorb
cmp
test
push
pop
dec
out
pop
cmp
dec
add
leave
je
pop
xchg
jbe
insb
inc
sti
dec
push
int
mov
popa
dec
cmp
call
fisubl
ja
jno
dec
jno
faddl
push
inc
xchg
xchg
sti
xchg
ja
inc
movsl
repnz
das
and
movsl
pop
jns
add
push
push
movsl
loop
pop
mov
and
das
push
popf
push
dec
xor
icebp
dec
mov
movsb
cmp
std
cli
clc
jnp
fs
add
in
loope
scas
mov
push
sub
insl
and
add
push
jle
or
call
mov
sbb
stos
mov
pop
js
es
pop
xlat
aad
shrb
jmp
mov
jo
mov
jp
pop
adc
aam
leave
je
adc
shlb
xchg
ss
xchg
jecxz
ss
decl
dec
movb
inc
xor
mov
adc
cmpsl
nop
mov
or
jne
ja
inc
scas
iret
dec
or
fldcw
movsb
xlat
int3
jmp
loop
mov
cmp
mov
mov
mov
dec
jmp
adc
into
adc
int
mov
inc
ret
cld
test
ficomps
push
mov
add
gs
inc
insl
jnp
bound
and
stc
inc
pop
xchg
clc
stos
fcoms
sbb
pop
mov
aas
add
cltd
mov
inc
enter
xchg
mov
cld
dec
sbb
pop
add
or
push
and
cmp
mov
dec
das
xor
std
xchg
subl
push
xor
mov
das
push
sbb
sbb
daa
stos
pop
push
aaa
insl
in
fists
stc
inc
dec
mov
adc
and
mulps
or
enter
adc
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
.byte
xor
jle
pop
cmp
or
jbe
add
out
imull
mov
cwtl
in
test
pop
es
in
inc
ret
sub
out
mov
inc
add
loopne
ror
pushf
inc
xor
fcom
sbb
sub
popa
lds
fbstp
dec
mov
into
mov
and
stos
xchg
jge
mov
mov
adc
js
cmp
nop
stos
sbb
lock
or
push
lret
push
insl
sti
insl
outsl
add
and
addb
xor
roll
sahf
sub
and
hlt
repnz
fnstenv
pop
call
mov
cli
mov
inc
xchg
int
rorb
push
add
dec
cld
xchg
cs
cs
movsl
jno
mov
das
ret
test
pop
xor
mov
jmp
idivl
mov
gs
mov
jecxz
mov
push
inc
inc
ret
xchg
sub
mov
popa
push
push
in
ret
in
ret
nop
adc
test
leave
loope
adc
xchg
stc
adc
add
subl
call
pop
pop
push
outsb
mov
ljmp
cmpsb
push
and
sub
rolb
inc
sub
adc
lea
jnp
and
push
jb
imul
andl
pop
mov
lret
nop
adc
inc
aam
enter
lods
xorb
xchg
loope
and
mov
xor
pop
sti
cmp
mov
test
fstpt
pusha
dec
sbb
or
or
mov
sbb
scas
xor
adc
and
mov
mov
xor
fs
push
arpl
cs
xor
inc
das
xchg
mov
mov
add
aas
push
ja
xor
fsubrl
es
mov
jecxz
ds
push
push
jne
mov
dec
arpl
jns
je
push
arpl
ret
sbb
mov
jle
repnz
test
mov
or
sub
int3
xchg
xor
scas
cli
data16
fadds
nop
scas
dec
xor
outsb
faddl
and
cli
and
add
mov
sub
pop
and
push
test
outsb
fmul
fadd
cmp
sbb
imul
in
leave
pop
sbb
hlt
dec
sbb
pop
mov
movsl
iret
and
lcall
xor
pop
lcall
loope
test
dec
aas
push
or
xchg
imul
lret
pushl
incl
int3
mov
ret
lret
jg
pop
mov
cmp
ret
nop
fcoms
arpl
xor
icebp
and
out
pop
adc
imul
outsl
mov
das
aas
mov
push
js
fidivs
icebp
daa
repnz
mov
mov
in
in
xchg
fnstcw
adcl
lds
shll
mov
add
enterw
mov
int3
adcl
mov
pop
sub
sub
jl
sbb
mov
jmp
insb
adc
push
rorl
xchg
adc
push
mov
std
mov
lock
pushf
cs
pop
mov
fcoml
in
pop
test
pop
xchg
jae
pop
addr16
lret
mov
jne
pop
js
leave
test
jl
fwait
out
jb
enter
inc
sbb
dec
xor
mov
or
imul
iret
ss
xchg
jecxz
mulps
and
mov
jp
adc
fsubs
scas
jns
leave
loop
dec
scas
fsubrs
ficomps
pop
sbb
je
pop
popf
mov
pushf
inc
pushf
rsqrtps
in
push
cmp
xor
jecxz
xor
add
in
mov
in
pop
cli
sahf
sbb
jecxz
adc
cwtl
int3
daa
movsl
pop
dec
pop
jne
and
inc
addr16
into
jo
push
cli
push
xchg
lcall
and
push
xchg
jmp
nop
popf
adc
imul
push
and
inc
sbb
in
out
pop
loopne
call
shll
daa
iret
and
xchg
out
gs
mov
pop
inc
inc
push
xchg
fcom
cs
ficomps
test
mov
pop
xchg
fldl
fiadds
mov
mov
dec
ss
jmp
scas
pop
decl
mov
jo
push
lods
test
xor
cmp
xchg
lcall
jae
bnd
cmp
sub
fisttpll
pop
ja
xlat
lods
mov
shrl
sbb
stos
nop
gs
loop
clc
fcomps
js
mov
xchg
jge
mov
mov
jne
mov
stc
jmp
scas
popa
mov
fdivrl
aaa
push
popf
fcoml
jne
repz
fst
pop
pop
insb
mov
scas
popa
mov
lods
mov
jns
test
jge
push
push
rorl
fcmovnb
out
inc
fwait
sbb
pop
ret
ja
hlt
mov
ja
out
fildl
xchg
cwtl
rclb
andl
iret
sub
daa
ss
xor
or
push
adc
aaa
fisubrl
sbb
pop
dec
cmp
dec
movsl
sub
cmc
push
xchg
xor
dec
mov
mov
inc
pop
pop
push
insl
sbb
push
add
cltd
adc
cs
leave
adc
out
bound
mov
hlt
push
xchg
xchg
inc
cmpsb
and
cmp
cmpsl
cli
jb
das
jnp
out
outsb
pop
mov
push
pop
dec
xchg
jle
xchg
nop
imul
jae
loope
and
fwait
mov
mov
jbe
pushf
inc
std
insb
jg
scas
cmp
imul
fucomi
shlb
xor
in
xor
mov
mov
xchg
outsb
jmp
addl
xchg
dec
xchg
push
pop
dec
push
sahf
clc
icebp
and
pop
xchg
and
shl
mov
bound
mov
add
stos
dec
mov
cmp
mov
pop
pop
aas
or
lret
rclb
mov
test
inc
mov
movsb
fwait
cmp
pop
push
outsb
pusha
jp
push
sbb
mov
insb
sbb
mov
xor
adc
int
rcrb
dec
adc
and
jp
sub
out
adc
mov
push
pop
loopne
push
jbe
xchg
je
mov
mov
xor
add
leave
xchg
sub
or
cmpb
fwait
or
cli
xor
das
loope
xchg
mov
pop
jle
scas
push
sbb
dec
int3
pop
rcrb
or
mov
lods
jno
loopne
pop
and
cmp
ja
insb
jno
dec
adc
rcrl
push
xor
jo
cmp
and
dec
push
jmp
popf
cmp
insb
jnp
pop
xchg
and
sub
dec
ss
jge
and
js
adc
cwtl
adc
cltd
cmpb
outsl
cli
pop
mov
mov
nop
test
in
arpl
add
daa
mov
cmp
sbb
jmp
add
in
or
xchg
cmp
push
iret
popa
test
xchg
fwait
sbb
mov
in
pop
les
xchg
or
and
fisubl
pop
scas
adc
loope
adc
mulb
and
jb
aas
nopl
xchg
dec
mov
out
pop
imul
and
call
cmp
scas
mov
mov
imul
xchg
or
xor
dec
rol
test
jo
sub
test
je
popf
jp
cmp
subb
pop
mov
das
clc
pop
pop
xchg
xlat
dec
hlt
mov
ja
mov
ret
pop
and
fwait
mov
jno
mov
out
add
loopne
jmp
mov
jbe
jecxz
repnz
mov
out
test
or
mov
jbe
push
and
rcrb
lods
pop
jns
enter
daa
sub
ds
and
mov
clc
daa
sarb
sub
cmpsb
xor
jnp
cmpsb
enter
aad
pusha
mov
in
stos
pusha
pusha
and
fs
ss
push
sbb
jle
fisubl
add
cmc
loope
sbb
xor
adc
mov
cmc
repz
fistpl
fdivrl
imul
fs
push
fisttpl
scas
icebp
add
sub
loope
jp
jns
icebp
fcomps
pop
nop
out
fsub
mov
add
lods
mov
enter
and
divl
sub
jns
or
test
fmuls
jl
fwait
push
and
or
add
jnp
push
das
cmp
mov
xchg
adc
aaa
lds
ss
lea
mov
sub
inc
adc
pusha
dec
xchg
mov
int3
ja
sub
cltd
adc
xchg
scas
enter
mov
xchg
call
mov
push
lds
into
sub
xchg
adc
decb
jecxz
xchg
xor
dec
out
or
sub
jae
sar
dec
sbb
mov
xchg
insl
xor
pop
jae
scas
mov
fisttps
ds
es
ret
push
das
sbb
nop
imul
xchg
popf
call
and
ret
dec
int
hlt
mov
dec
adc
xchg
imul
repz
jo
or
lahf
jne
inc
add
sbb
sbb
aaa
push
push
lods
xchg
fcmovb
mov
add
lahf
leave
or
rcll
pmuludq
and
aaa
or
test
leave
push
mov
pop
test
icebp
lahf
inc
inc
push
test
and
xor
hlt
dec
mov
nop
jmp
aam
testb
lods
and
imulb
mov
rorb
add
dec
pop
fistps
jmp
sub
in
repz
mov
jo
jle
out
lea
repz
mov
sbb
pop
jge
fisubs
push
ficompl
aam
mov
cmpsb
xor
sbb
cld
adc
sub
repz
push
test
mov
inc
loopne
dec
and
shlb
shlb
fxch
mov
sbb
in
jle
pop
sar
jbe
cmp
aas
lcall
shl
inc
test
std
xchg
test
add
movsb
jne
sub
push
adc
out
pop
nop
addl
cmp
xchg
inc
addb
orb
mov
or
push
sbb
and
add
cmc
rcrb
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
.byte
dec
stc
or
lret
pop
cmpsb
and
sub
adc
cmc
cmp
fdivrs
jge
push
sbb
mov
xchg
je
sub
xor
jecxz
and
jmp
data16
mov
dec
jl
into
sbb
rolb
lcall
cld
push
xchg
or
fldt
cli
es
in
xlat
xor
jg
cld
dec
add
jp
test
xchg
jno
cmp
or
push
cld
mov
jg
fldenv
stos
test
rcll
sbb
repnz
push
cltd
stos
rorl
jle
mov
bound
sbb
fnstcw
enter
dec
je
pushf
test
fstps
mov
rcl
scas
mov
mov
aaa
add
hlt
popa
int3
mov
xor
ficoms
mov
out
lret
dec
fs
add
gs
mov
sub
mov
ss
push
jb
push
mov
ss
out
push
icebp
xor
push
mov
das
push
aad
dec
add
test
cmp
das
inc
sbb
mov
push
jmp
pop
pop
nop
ds
xor
ds
mov
sbb
push
flds
jns
sbb
and
hlt
inc
loope
lods
mov
js
jae
xlat
fcoml
inc
lods
push
mov
push
adc
xor
int
lahf
inc
pusha
sub
inc
scas
cwtl
test
pushl
call
mov
inc
dec
or
aad
mov
mov
jae
cmp
pop
sub
sbb
shrb
xchg
sbb
inc
es
jl
add
jae
mov
inc
adc
test
jo
fwait
loop
cmpsl
push
mov
mov
adc
mov
cmpsl
aas
inc
mov
inc
mov
aas
out
dec
ret
in
nop
add
ret
aam
inc
jne
cmpsl
dec
cli
std
fwait
adc
or
dec
nop
lods
lret
aad
and
inc
enter
adc
pop
cmp
mov
stos
cli
lea
cli
jnp
cmpsl
negb
aaa
pop
mov
lock
daa
xlat
pop
aam
pop
inc
push
lds
ret
out
cs
push
cmp
pop
mov
fcomps
int3
cmc
stos
insb
jnp
stos
sub
cmp
repz
xchg
cmp
icebp
mov
or
cwtl
inc
stos
test
mov
sarb
sbb
jmp
pop
cld
scas
idiv
divps
imul
stos
dec
push
mov
or
pop
add
sub
mov
test
imul
outsb
cmp
mov
mov
cmp
dec
add
outsb
mov
xor
cmp
mov
into
push
gs
imul
push
pop
mov
leave
cmp
mov
push
inc
mov
movb
jg
arpl
mov
mov
ljmp
hlt
cmp
cmp
adc
jne
pop
push
and
xchg
pushf
aam
adc
adcb
adc
call
cmove
ror
addr16
mov
sub
rcl
stos
stos
pop
inc
lahf
jg
mov
fsubl
mov
in
icebp
fisubrl
dec
cmpsb
adc
pop
sub
rcll
aam
jns
popa
nop
aas
loope
jmp
call
pop
ret
lcall
lret
dec
bnd
inc
mov
imul
push
cli
xchg
loopne
dec
mov
and
sub
or
out
mov
cmc
stos
adc
sarb
jae
and
mov
mov
sbb
mov
mov
movb
fstpt
or
push
aam
test
xchg
inc
xchg
jge
cmp
shrb
daa
inc
xchg
jge
in
push
push
inc
lods
int
sbb
ret
sub
call
xchg
mov
lret
dec
bound
or
sub
in
dec
stos
test
mov
or
ds
lret
mov
data16
cmp
or
es
dec
push
jg
add
outsl
jg
add
cwtl
popa
mov
xor
rep
push
sarb
pop
or
xchg
call
shll
inc
xor
push
cmp
mov
sbb
xchg
mov
mov
adcl
bound
ss
mov
sub
xor
mov
sti
jle
inc
mov
or
cmc
adc
test
push
fst
in
rol
adc
push
pop
call
hlt
ss
jecxz
mov
mov
inc
inc
fdiv
fwait
jp
jo
repz
aas
cmc
pop
popa
cs
pop
push
cmpsl
enter
addb
dec
dec
iret
cmp
push
xor
fs
cmp
sbb
stos
jns
mov
jae
inc
and
fnsave
add
sti
into
cmp
jmp
fucom
dec
cmp
rcll
hlt
jle
adc
lock
rorl
mov
sub
clc
mov
add
xchg
or
inc
mov
inc
or
in
iret
mov
push
xchg
aad
add
sbb
mov
dec
jns
outsl
shrl
push
mov
lods
mov
movsb
push
dec
mov
fsubs
clc
cmp
jle
subb
cld
add
rolb
cmp
ds
adc
mov
sub
int
xchg
shl
mov
aam
subl
lea
mov
push
push
les
lcall
in
test
or
mov
in
ja
adc
push
cmc
fcomip
nop
or
mov
movl
scas
jb
je
test
cs
outsl
in
mov
arpl
cmp
mov
aam
test
pushf
push
sbb
sub
cmpsb
pop
pop
loope
sub
mov
mov
mov
adc
inc
dec
xor
cli
mov
fstps
mov
int3
pop
pop
int3
enter
into
add
push
les
push
jmp
inc
push
cmp
mov
mov
aam
aam
jae
mov
lcall
jg
popa
bound
arpl
dec
jb
mov
mov
dec
push
jge
sub
lock
push
sbb
pusha
and
adc
jo
fiadds
aaa
push
out
pushf
ljmp
popf
shlb
loopne
fidivl
scas
push
enter
lds
cmp
jp
nop
jmp
mov
xchg
or
fndisi(8087
das
or
xchg
sbbb
pop
fs
mov
lret
mov
insl
dec
mov
and
fmuls
sarb
rorb
out
mov
jle
inc
movsb
pop
push
clc
sub
xor
notb
pusha
imul
add
rorb
in
and
rorb
test
xchg
scas
mov
jno
dec
test
lea
mov
loopne
sbb
and
push
stc
repnz
insb
aam
lds
jae
dec
insl
pop
adc
push
mov
aad
mov
in
outsb
pop
test
push
ret
ds
xchg
ret
mov
cmp
push
in
xor
aad
pop
cmp
pop
push
scas
push
xor
loop
inc
jp
pop
daa
jne,pt
mov
pop
xchg
je
mov
push
loop
sub
inc
sbb
rcr
repz
mov
mov
sub
xchg
in
loopne
pop
lods
jle
std
xor
mov
sti
out
sub
sub
sbb
mov
cmpsl
mov
aas
mov
lret
lds
pop
push
mov
leave
dec
popa
and
pop
lahf
sub
cmp
mov
dec
test
lret
stos
addr16
std
psubw
fistps
stc
out
rol
push
jno
push
es
xchg
gs
mov
jbe
adc
inc
and
sub
xchg
xor
fadds
adc
sahf
lret
xchg
test
xor
imul
scas
push
roll
in
push
dec
inc
pop
lea
mov
xchg
lock
jmp
add
test
aam
xor
add
push
mov
dec
dec
sub
inc
sub
mov
insl
loop
fadd
shll
adc
inc
shrl
js
movsb
ficoml
add
sub
xor
add
les
or
dec
dec
or
pop
scas
pop
jo
clc
jp
lods
lods
enter
xchg
into
push
int3
lods
push
insb
scas
adc
push
pop
cwtl
int
int
je,pt
jae
adc
mov
sbb
scas
ret
pop
mov
jp
sub
lcall
int3
lock
aad
mov
xchg
repz
sbb
vmaxsd
or
iret
rol
test
jo
sub
inc
es
repnz
lcall
pop
adc
lret
lock
mov
xor
fs
push
lret
pop
daa
mov
lods
mov
cmp
stos
lret
dec
xor
adc
push
ja
out
mov
mov
pop
xchg
mov
sbb
jae
insb
xchg
ds
dec
jo
jne
aas
dec
pusha
int
xlat
enter
push
test
xor
cmpsl
sub
gs
lea
fistpll
repnz
xchg
loopne
pop
and
ljmp
xor
addr16
shrl
andb
xor
ja
or
push
lret
inc
pushf
loopne
jo
ja
mov
mov
insb
cli
enter
cmp
mov
xor
sub
inc
sarb
dec
test
pop
sub
mov
arpl
cmp
pop
out
mov
pop
lds
js
ret
mov
or
adc
xchg
pop
mov
rolb
or
in
sub
sbb
mov
inc
dec
inc
add
pop
jge
imull
mov
xlat
push
dec
fwait
mov
test
in
sarl
jns
add
ret
jnp
fnstenv
sub
mov
pop
mov
scas
ljmp
cli
mov
int3
add
push
dec
pusha
test
lock
cmp
testb
bound
sbb
enter
in
xchg
mov
xchg
icebp
jb
xchg
and
sahf
imul
xor
fwait
mov
sub
divb
pop
imul
pop
or
push
jnp
jp
adc
pop
sub
test
inc
cmp
cmp
fwait
aad
sbb
and
fists
or
jp
stc
push
or
sahf
mov
enter
xchg
stos
es
mov
mov
inc
push
xor
dec
imul
inc
lods
push
ret
mov
mov
inc
lods
pusha
fcompl
add
movsl
push
and
mov
daa
push
in
inc
dec
jl
scas
in
mov
int3
jns
dec
leave
sbb
sti
mov
sbb
mov
add
scas
xor
add
andl
dec
push
out
jl
daa
sti
cs
dec
jl
lds
mov
or
sbb
push
rolb
bswap
arpl
mov
fwait
iret
sub
pop
mov
and
mov
jb
mov
xchg
test
cwtl
mov
fmulp
mov
nop
test
inc
negl
jl
sbb
dec
jb
mov
mov
add
mov
mov
jb
clc
pop
inc
xchg
sahf
dec
cld
test
sar
xor
gs
or
shlb
xchg
orb
push
loope
js
aaa
mov
and
aaa
adc
aaa
push
popa
cwtl
loopne
push
add
pop
or
data16
js
pop
dec
mov
fmuls
push
pop
jb
outsb
dec
insb
push
out
lret
adc
push
js
addb
adc
lcall
inc
fwait
push
sbb
sbb
aam
jae
mov
and
sbb
inc
push
cmp
iret
pop
stos
sub
cld
loop
mov
inc
pop
inc
jns
lods
fldl
loop
push
lret
bnd
push
xchg
xor
cmpsb
movsl
jnp
in
addl
je
shll
cmp
into
mov
mov
dec
jge
or
aaa
sub
addr16
int3
test
mov
in
sarb
mov
jnp
das
ja
fcmovne
testb
sbb
lds
hlt
mov
mov
outsb
dec
jle
push
add
mov
pop
mov
addr16
popf
pop
sub
xchg
cli
scas
inc
dec
jge
pop
ss
sub
testb
je
push
cmova
mov
arpl
jp
lods
insb
jns
leave
shll
es
pop
js
adc
cmpl
mov
cmpsl
inc
addl
mov
mov
and
popa
test
dec
mov
mov
add
hlt
sbb
scas
int
dec
sbb
mov
and
cmpsl
or
mov
subb
outsb
cmova
push
add
insl
cmp
mov
ljmp
and
aas
pop
mov
lret
mull
jb
les
fnstcw
push
xchg
mov
pop
mov
in
lahf
movsl
jmp
jnp
fldt
fdivrl
jecxz
fsubrl
jle
stos
ret
mov
dec
call
push
popf
mov
aam
mov
es
std
xor
pusha
loop
stos
fcomps
dec
sbb
push
popf
aam
jl
inc
lds
insl
xor
sbb
inc
cmp
es
mov
xchg
mov
add
xchg
sahf
inc
fcmovnu
mov
sub
imul
leave
in
lahf
pop
aad
xlat
mov
nop
push
add
add
adc
cld
jo
stos
pop
sub
and
xchg
cld
push
mov
and
imul
arpl
mov
mov
dec
xor
push
mov
cli
dec
xchg
xchg
mov
daa
mov
test
fisttps
fisttpll
pop
neg
xchg
mov
fisubrl
ss
adc
enter
fmull
and
orl
std
loope
jmp
lret
ljmp
rorb
pop
xor
fidivrl
outsb
inc
adc
outsl
into
out
ss
or
and
xor
mov
mov
push
dec
aas
in
dec
lods
dec
int
pop
xchg
mov
mov
jp
add
xchg
outsb
or
dec
inc
into
test
jbe
fprem
sar
dec
dec
std
cwtl
adc
cmp
dec
dec
push
repnz
cmp
lea
add
ficoml
int3
adc
stos
add
mov
push
das
sbb
and
pop
lock
repnz
inc
mov
shl
add
prefetchw
insl
mov
arpl
sbb
je
xor
insb
addr16
mov
jne
andl
test
or
fs
aam
adc
mov
or
jbe
ret
adc
push
mov
rorl
std
sbbb
or
push
xor
sub
mov
pop
stc
jbe
enter
xor
out
movsl
mov
mov
and
push
jle
cmovne
mov
jbe
mov
das
cmp
adc
ficoml
cmp
pop
or
loop
notb
add
cmp
hlt
pusha
jmp
fcoml
sub
pop
cmp
pop
push
or
fistpll
mov
popf
movsl
andb
mov
mov
sbb
dec
mov
fmuls
inc
inc
enter
fnstsw
jg
in
and
imul
fsub
arpl
outsl
mov
mov
mov
mov
test
mov
int3
xor
enter
push
pop
and
arpl
bound
pushf
jmp
test
cld
les
add
and
repnz
dec
fisubrl
ret
aaa
mul
lcall
adcl
xchg
sbb
ret
jb
push
xchg
dec
lds
cli
add
andb
sub
add
ljmp
rcrl
inc
xchg
add
jmp
lahf
jmp
sbb
test
mov
jnp
adc
ret
cmp
test
and
fldcw
imul
inc
jl
mov
jnp
and
outsl
jns
out
lret
cmp
mov
mov
aam
jle
loope
movsl
in
and
inc
cmp
js
loop
xor
dec
xor
push
mov
scas
sub
or
xor
iret
push
int
pop
int
js
jns
xor
cmp
adc
pop
js
ficompl
xchg
mov
out
ljmp
pop
cli
inc
mov
xlat
mov
mov
cmpsl
fildl
movsl
add
int3
mov
xor
fcmovnb
je
mov
rcl
loopne
pop
sbb
stos
mov
adc
lods
and
sahf
je
push
lea
stos
ljmp
mov
repnz
or
pop
inc
mov
lret
add
mov
dec
and
pusha
xor
loop
push
out
outsb
mov
out
ja
cs
test
jecxz
pop
inc
imul
push
add
pop
sti
mov
adc
mov
sub
lock
pop
push
outsb
inc
ja
in
cmp
testl
out
xchg
std
xor
inc
daa
je
xchg
fsubrl
xor
pop
pusha
ret
push
jne
jl
out
dec
lods
xchg
pop
jo
push
cmpl
jb
rol
xor
mov
sbb
xor
test
fistps
ret
orl
pushf
jg
push
and
in
rorl
in
inc
and
sub
cwtl
push
sbb
mov
mov
mov
push
xchg
mov
xor
int3
das
sub
hlt
jbe
addr16
and
push
cs
inc
movsl
jae
push
test
cmp
je
mov
in
pop
test
xchg
mov
lock
sbb
outsl
and
and
dec
cmpsb
mov
mov
xchg
pop
movsl
fistps
movsl
movsl
xor
les
and
popa
outsb
in
xor
aad
enter
push
mov
fisttps
xor
in
or
xchg
mov
ret
pop
xchg
shll
in
out
mov
stos
xor
stos
pop
sahf
dec
cltd
inc
fmuls
fisttpll
mov
inc
xchg
arpl
ja
js
negb
outsb
inc
xlat
mov
mov
movb
lods
imul
add
test
mov
jmp
dec
mov
push
repnz
dec
dec
ss
lret
fidivrs
jmp
add
jge
xchg
xor
inc
in
inc
mov
out
insl
dec
sar
out
jns
fdivrp
xchg
adc
mov
mov
enter
pop
or
aam
or
xor
ja
je
pop
cmp
rcrl
xchg
push
ret
insb
or
and
adc
shrb
mov
cltd
not
pop
adc
cmp
jp
ret
shrl
jge
push
and
pop
in
sub
lds
out
decl
jge
repz
es
je
stc
addr16
in
push
sub
aam
cmc
inc
fisttpll
jp
xchg
pop
and
mov
mov
sarb
inc
sub
mov
xor
push
aas
bnd
cmc
popf
cmc
call
cmp
adc
mov
in
stos
xchg
xchg
dec
add
mov
mov
call
push
xor
inc
stc
popl
sub
add
rcrb
push
or
shll
std
jecxz
dec
jge
cli
ljmp
jno
sbb
pop
xor
push
sub
jle
dec
js
out
lock
ret
mov
pop
cmp
gs
loope
aaa
fnsave
daa
add
mov
incl
outsl
subl
adc
jg
ss
xchg
add
fstpl
in
xor
cmpsl
enter
lret
mov
sahf
adc
lods
push
enter
inc
sbb
icebp
push
add
out
mov
cmp
or
unpckhps
cmc
cmp
out
xlat
push
xchg
jbe
cwtl
lret
mov
jns
in
je
adc
fs
pop
adcl
xchg
js
fcomps
outsb
mov
out
lds
aad
fs
dec
push
jbe
fs
pop
stos
int
mov
mov
jo
pop
dec
ljmp
jbe
cld
rcl
dec
sub
enter
cmp
cmp
or
fistpl
rcl
push
adc
sbb
idivb
out
cmpsl
xor
mov
jp
add
mov
mov
lret
imul
push
shll
jle
pop
inc
data16
xchg
or
aad
arpl
insl
scas
pop
inc
mov
dec
adc
insl
mov
cwtl
in
jae
add
stc
mov
xor
or
sub
inc
shlb
mov
repnz
push
outsl
jns
cmp
or
jne
sub
pushf
cmp
or
ss
mov
call
mov
insb
add
sahf
rorl
negb
mov
pop
insb
cs
inc
rorb
dec
xor
pop
xchg
pusha
fisttps
inc
arpl
add
xchg
or
fsubr
aam
add
add
pop
xor
loop
mov
test
mov
push
popf
andb
sub
sbb
inc
inc
fwait
mov
push
in
mov
fsubl
sub
test
mov
cmp
repz
add
js
xor
mov
clc
xchg
mov
mov
mov
mov
mov
shll
into
popf
out
add
mov
push
sub
xor
int
insb
stos
loop
rcr
out
enter
out
lock
sbb
enter
lock
stc
mov
or
jmp
outsb
dec
stc
fsubr
cltd
adcb
sbb
sbb
mov
xlat
adc
sub
xchg
push
sarl
adc
shrl
sub
mov
jmp
test
sbb
mov
adc
decl
pop
ds
pusha
je
push
xchg
mov
dec
jbe
call
push
cmp
call
cmp
jl
in
in
imul
icebp
movsl
sbb
pop
decl
negb
bound
pop
imul
xchg
lret
fdivrp
xchg
push
lods
ds
dec
fxch
inc
inc
int3
jne
divl
jmp
add
adc
repnz
ljmp
jnp
sub
test
inc
dec
or
xlat
repnz
jge
jg
mov
mulb
jge
mov
or
jb
sahf
mul
inc
jnp
std
sbb
test
lea
aad
dec
mov
je
push
pop
negl
pusha
pop
sub
stc
repnz
fwait
nop
add
or
out
femms
and
push
mov
sub
mov
mulb
mov
jne
mov
dec
call
inc
pop
add
sahf
mov
xor
rcl
lcall
sbb
ljmp
aaa
xor
mov
sbb
adc
es
dec
adc
add
and
push
inc
mov
out
icebp
cmp
ja
outsl
loopne
loopne
xchg
dec
out
sub
and
call
pop
xor
aam
or
jo
push
paddusw
mov
repnz
dec
cmpsl
or
sbb
xchg
mov
loopne
push
pop
loopne
lret
jb
idiv
cmp
inc
xchg
dec
insb
fnstcw
push
inc
std
and
xchg
cs
imulb
mov
imul
in
mov
sbb
mov
adc
pop
fbld
jecxz
and
test
and
xlat
push
sbb
cmp
repnz
orb
ljmp
pop
xor
das
jl
adcb
or
jne
jmp
mov
push
aaa
push
xor
mov
push
xor
cwtl
pop
sbb
push
out
subl
dec
fs
push
icebp
outsb
pushf
pop
add
jmp
out
jo
jp
cmp
cmpsl
out
dec
mov
push
mov
sub
lret
movsl
lcall
outsb
push
movsl
cli
into
inc
popf
pushf
add
add
shl
das
gs
xor
inc
stos
movsl
addl
fisubs
js
dec
ret
push
sub
aam
jg
jno
cmp
slwpcb
lcall
fwait
mov
daa
into
add
sarb
je
sbb
je
mov
pop
fidivrl
mov
fnsave
adc
addr16
jno
sarl
pop
xchg
mov
scas
add
pop
add
mov
adc
xchg
rcrb
fildl
jno
lds
sbb
or
lret
rolb
cmp
push
jne
sub
mov
dec
pop
push
clc
push
scas
bound
in
pop
ja
das
jno
in
dec
push
fwait
inc
or
ljmp
iret
pop
adc
cmp
mov
push
rcll
add
inc
jb
ss
inc
inc
push
pop
cli
jb
mov
mov
cmpsb
adcb
rcrb
or
mov
enter
outsb
inc
les
lret
and
and
cld
jno
cmp
mov
jnp
add
xlat
jecxz
pop
cmp
outsl
and
test
pop
jo
les
xor
or
out
xchg
jbe
rolb
addr16
std
ja
ja
push
insb
xchg
jb
ficomps
pop
adc
mov
jge
mov
jg
call
jns
scas
std
pop
les
inc
test
dec
out
fnsave
test
in
dec
int
outsb
cmpb
movsb
loope
mov
mov
or
stos
inc
xchg
fldl2t
xchg
push
push
cmp
fisubl
into
xor
sub
xor
mov
js
push
mov
pop
pusha
mov
xchg
and
push
std
add
push
subb
mov
xor
cmpl
and
icebp
push
push
testl
mov
stos
mov
dec
movsb
jno
sub
clc
pop
in
adc
bound
mov
dec
in
add
inc
cld
ja
jecxz
jnp
pop
xor
mov
int
stc
pop
mov
nop
sbb
push
xchg
test
mov
mov
fidivrl
mov
mov
lds
mov
pop
xor
and
pop
push
adcl
xorl
pop
fdivrs
rolb
mov
and
lret
enter
out
insl
cwtl
mov
sub
mov
sbb
xchg
mov
fnsave
mov
push
push
xchg
lods
popa
loopne
ja
lods
cli
dec
dec
decl
popf
shrl
add
jno
adc
push
mov
movsb
jne
xor
add
mov
fcmovu
and
or
test
test
or
adc
cmpsb
cmp
mov
test
push
cmp
add
mov
sbb
mov
mov
movsl
adc
push
scas
leave
jns
jmp
push
jge
pusha
test
cmpsb
sub
inc
jg
cli
shlb
in
shl
adcb
addr16
jle
gs
mov
xchg
xchg
inc
mov
mov
pop
in
fmull
test
rorl
insl
fcompl
shlb
jmp
and
jns
pop
adc
inc
fistpll
pushf
lock
inc
jbe
loop
and
nop
jns
cwtl
jle
jl
jne
dec
es
adc
jo
adc
dec
sub
mov
inc
lock
gs
gs
sbb
mov
push
mov
fcompl
test
sahf
jo
cltd
xor
mov
mov
push
mov
adc
mov
pop
cld
mul
ds
sbb
jne
push
or
or
add
addr16
outsb
add
inc
lahf
mov
fdivrs
das
push
aas
popa
and
pop
ljmp
lods
cmpsb
or
std
and
xchg
inc
rorl
mov
mov
out
jnp
adc
jle
sub
jl
cmp
sahf
aas
ret
and
enter
jno
repnz
sbb
icebp
dec
mov
push
test
shr
sbbb
ss
call
jge
sub
sbb
add
xchg
stc
mov
fstpt
addr16
cmc
adc
stos
add
mov
xor
lahf
inc
in
cs
sbb
or
stos
xlat
jnp
ret
outsb
sbb
aad
js
mov
lret
mov
ja
lea
mov
cmp
test
xor
add
mov
and
decb
pop
mov
sub
adc
aad
xchg
and
outsb
sub
mov
mov
fldt
xchg
inc
pop
leave
stc
xlat
aaa
xor
or
and
decb
cmc
jl
addr16
fisubrl
xchg
jne
push
inc
jle
push
mov
cmp
cmpsb
fstpl
hlt
sub
fsubrs
mov
aaa
lock
adc
and
mov
inc
pushf
adc
mov
sbb
add
sub
mov
testb
loope
das
sbb
aad
xlat
cwtl
scas
cmp
pop
inc
cmp
outsb
cmp
arpl
jl
scas
popf
fwait
sub
cmp
mov
jge
dec
pop
popf
pop
or
sub
dec
jecxz
and
add
xchg
pop
into
stos
add
bound
add
sub
mov
sbb
enter
xor
cmp
push
flds
jb
cli
mov
sbb
mov
loop
or
lds
jbe
and
jnp
es
js
dec
aam
or
cld
imul
jl
cmpsl
sbb
dec
mov
cmp
inc
lock
dec
shlb
sti
cld
hlt
stos
jmp
adc
dec
sbb
mov
mov
cmp
mov
mov
pop
bound
xchg
jecxz
movsl
jbe
sbb
cmp
and
into
push
enter
mov
out
pop
sbb
xchg
lahf
add
mov
or
nop
mov
jb
adc
cli
mov
test
cmpsl
aad
pop
push
enter
add
ss
arpl
aas
loop
cmp
dec
iret
cwtl
inc
incb
push
adc
sti
jl
pop
or
dec
stos
adc
sbb
rorb
dec
mov
or
popf
scas
lds
cli
fisttps
mov
adc
iret
sub
ss
jne
sti
adc
cmpb
jmp
push
xchg
push
mov
jns
mov
pushf
inc
dec
dec
add
imul
and
dec
jne
and
sbb
mov
cmp
aad
imul
and
data16
mov
push
add
jl
sub
test
sub
and
out
inc
pop
test
mov
insl
stos
xor
divl
inc
and
daa
scas
jb
repnz
in
imul
shlb
aad
mov
in
cmp
xor
add
pusha
mov
loop
ja
sub
jp
or
or
xlat
pushf
push
adc
mov
enter
pop
xchg
sub
dec
inc
fcomi
jle
fidivs
cmp
sub
fsubr
cmc
mov
push
xchg
push
aam
out
mov
loope
cmp
cli
ret
mov
fistps
inc
mov
lds
icebp
imul
mov
sti
repnz
arpl
lods
pop
ret
loope
aam
mov
lds
jns
lcall
cmp
test
cmp
dec
dec
mov
imul
popl
aaa
pop
pop
cmp
scas
mov
lea
mov
sbb
mov
push
xchg
dec
int
mov
subl
ds
out
mov
lea
jecxz
pop
outsl
or
loopne
fiaddl
pop
roll
out
cmpsb
sti
jno
cwtl
not
sub
mov
ds
movsb
scas
jb
inc
cmp
push
dec
repnz
pushf
mov
idivb
cmpsb
mulb
adc
xor
pop
cltd
les
fs
or
xor
sarl
mov
push
mov
sub
rcrb
sbb
sub
test
push
inc
ret
mov
sbb
xchg
xchg
jb
sub
mov
mov
push
lcall
dec
hlt
pushw
and
xor
mov
push
mov
call
sarl
cmp
ret
xor
rorl
das
orb
cmpb
loop
jp
sbb
sahf
test
mov
movsb
xor
push
cmp
stos
in
inc
mov
lods
jo
mov
push
cld
push
cmc
lods
cmp
jb
lods
rcrl
jmp
adc
sub
loopne
mov
dec
fiaddl
push
inc
pop
popf
jecxz
cmp
out
sub
xor
dec
test
dec
adc
jle
jg
mov
or
lahf
arpl
ret
cmp
fdivrp
add
jae
sbb
nop
pop
xchg
movsl
or
cli
sahf
fbld
and
es
pop
adc
pop
dec
std
pop
test
add
fs
xor
arpl
push
mov
mov
loop
cmpsb
or
or
or
adc
mov
int
adc
sub
push
fldcw
adc
inc
pop
inc
add
xor
call
aaa
mov
sub
test
dec
loop
test
into
insb
sub
ljmp
adc
cltd
jb
popa
adc
fadds
inc
jo
ret
push
int
arpl
enter
lock
test
out
stos
sbbl
jbe
add
sbb
cmp
std
fcomps
movsl
flds
inc
ja
in
sub
fsubrs
dec
outsb
les
push
je
or
in
jns
ljmp
ret
push
hlt
in
shll
sub
pop
jb
cwtl
xor
addr16
cld
fbstp
fdiv
inc
jno
clc
add
mov
dec
imul
xor
addr16
pushf
ficoms
dec
and
or
lea
outsl
jle
jns
idivb
cs
loopne
push
pop
iret
insl
sub
jmp
or
mov
in
add
mov
arpl
nop
inc
loop
inc
popa
ror
inc
jns
daa
or
js
vsqrtps
shrl
xchg
or
dec
add
std
mov
call
add
cmp
loope
lock
popa
ja
sub
pop
or
and
push
into
fistl
out
mov
fldenv
repnz
into
ret
push
jmp
xor
jnp
lock
sahf
mov
mov
jle
test
rcll
cli
inc
push
jl
ja
sbb
hlt
popf
rolb
sti
adc
push
mov
dec
xchg
jne
inc
repnz
outsb
les
test
or
and
clc
mov
add
jmp
lods
int
pop
add
loop
mov
cmc
push
pop
cmp
fidivrl
inc
mov
popa
ret
int3
add
jns
xchg
dec
mov
pusha
pop
in
divl
pushf
mov
or
movsl
sbb
xchg
shll
pop
lods
dec
das
mov
pop
push
loope
addl
fisttpl
int
ja
sbb
sbb
sti
js
repnz
insb
cmp
jmp
push
test
dec
jge
ljmp
test
xchg
gs
int3
es
movsl
outsl
push
jmp
hlt
and
pop
add
les
sub
inc
out
push
mov
stc
lahf
dec
add
and
cmp
int3
inc
ret
inc
roll
xchg
pop
sub
in
loope
test
inc
dec
addl
lods
adc
into
inc
jl
sbb
and
das
or
and
dec
sbb
mov
adc
gs
xchg
scas
push
imul
mov
push
push
xchg
repnz
shll
data16
movsl
sub
inc
push
or
adc
popa
push
or
outsb
adc
lock
rolb
and
lret
enter
xor
shll
mov
iret
dec
ret
pop
jmp
mov
clc
mov
sbb
in
lret
popa
adc
mov
arpl
stos
adc
nop
test
mov
jns
mov
movsl
cmp
cli
or
xor
mov
jl
and
push
hlt
mov
fdivrl
icebp
testb
ffreep
xchg
add
inc
repz
int3
fsubrl
push
es
pop
std
fidivrl
jp
stos
je
cmp
mov
mov
or
arpl
lods
and
inc
sbb
or
lock
enter
inc
sahf
testl
stc
les
push
jnp
mov
adc
and
lcall
ret
loopne
hlt
lods
mov
inc
sahf
mov
add
or
cmp
bnd
mov
cmp
hlt
jecxz
mov
jb
mov
sub
ss
ret
xor
ret
fwait
ds
and
daa
lock
rol
inc
jb
jecxz
iret
mov
mov
and
xorb
icebp
jo
dec
add
int
adc
jo
xchg
insl
repz
jns
adc
mov
rorl
dec
shrb
test
xor
ret
sbb
out
adc
in
fs
testb
push
lcall
sbb
stos
and
inc
jl
hlt
push
adc
mov
andb
or
jmp
push
add
das
sub
mov
es
es
and
fidivrl
sbb
xor
out
xchg
inc
std
mov
jno
xor
jle
inc
icebp
jae
pop
icebp
cltd
out
lods
ret
dec
adc
pushf
push
push
lods
or
dec
sub
cli
push
in
jecxz
add
loope
fwait
add
or
add
mov
les
shl
cmp
je
xor
cmpl
js
adc
mov
out
arpl
jmp
mov
push
sub
jo
sbb
push
iret
mov
fisubrl
push
roll
xor
gs
pusha
ja
dec
rorl
mov
jb
mov
pop
cmpsb
mov
mov
xchg
jbe
movsb
mov
addr16
pop
stos
inc
push
out
scas
xor
mov
jae
sahf
repz
xchg
cmp
mov
pusha
sub
dec
push
pop
push
loope
arpl
fs
pop
sub
mov
int
push
mov
lret
inc
lock
mov
xchg
pop
push
das
outsb
ljmp
test
mov
push
sbb
fs
aaa
and
cmpsl
clc
and
mov
fldt
fs
pop
adc
jns
popa
mov
bound
int
sbb
fdiv
leave
loopne
data16
cmp
out
aam
in
xor
aad
jb
aam
imul
sbb
mov
aad
nop
stos
sbbl
or
add
fcmovnu
or
bound
jecxz
icebp
icebp
lahf
enter
cmp
sub
adc
sub
scas
sti
fstl
push
pop
mov
inc
cmpsl
adc
add
fwait
cltd
rcrl
xchg
mov
mov
mov
mov
imul
add
mov
fsubl
jl
call
arpl
arpl
inc
or
jns
mov
into
xchg
pushl
xor
mov
outsl
cld
pop
andb
cli
cs
push
jle
fsts
jns
jp
or
ja
push
icebp
sbb
add
out
pop
cmp
pop
jmp
loop
inc
dec
mov
xor
and
jb
lret
mov
mov
push
push
lods
sub
bound
out
sbb
inc
mov
test
dec
into
fwait
js
jbe
adc
cmp
push
jmp
lods
add
shrl
hlt
sbb
or
js
ret
pop
sar
xor
enter
add
xchg
pop
sti
and
cltd
inc
and
les
push
leave
loop
dec
aas
adc
or
jmp
add
popl
popf
out
mov
jo
es
xlat
mov
roll
dec
outsb
in
mov
adc
cmp
push
fnstenv
and
stc
xlat
and
addr16
push
lods
out
mov
pop
cmp
and
jle
sahf
inc
fdivl
cmp
add
add
in
je
cltd
xchg
sbb
fdivs
aaa
and
ljmp
jns
dec
outsl
xchg
stc
inc
or
loope
cmpsl
repnz
sub
or
insb
lret
mov
lret
arpl
pop
xchg
add
cli
cli
and
ficoml
add
mov
idiv
cld
gs
sbb
cwtl
outsl
test
str
inc
aam
push
scas
mov
fildl
inc
or
inc
or
mov
jae
sbb
sub
out
cmp
movsl
subl
test
push
xchg
xor
pop
mov
sub
fnsave
adc
push
ja
inc
jne
mov
push
sbbl
or
jo
inc
pop
xchg
outsl
jne
adcl
stos
lcall
or
vmwrite
sbb
mov
sub
mov
add
mov
outsb
popf
insb
je
mov
mov
xchg
arpl
inc
xor
pop
bound
inc
inc
test
movsl
mov
loopne
mov
xor
xlat
mov
add
fcompl
loop
mov
pushf
mov
subl
je
jg
jbe
bound
fsubs
push
push
cwtl
push
push
dec
ljmp
pop
dec
jae
mov
rclb
ja
loopne
loop
nop
inc
fs
insl
data16
dec
pushf
xchg
jl
int3
mov
movsl
and
xor
mov
jg
cmp
stos
int3
fs
jns
in
jmp
adc
repz
cmp
add
fcoms
push
ss
cmpsl
xor
leave
lret
jb
adc
lods
fisttps
ja
movsb
sbb
ret
cmpsl
aaa
int3
cmpsb
stos
je
push
enter
call
and
add
fisubrl
in
inc
jg
mov
inc
aad
mov
jecxz
xor
jno
cmp
stc
sub
xchg
fs
into
bound
mov
dec
in
loop
repnz
xor
hlt
faddl
adc
push
fists
pop
mov
xor
sub
incb
in
std
xorl
jle
inc
dec
cltd
push
or
xor
and
xchg
orb
repz
dec
dec
out
leave
jnp
mov
in
in
adc
mov
xor
mov
jmp
cmpl
fldlg2
mov
lcall
mov
in
lds
out
mov
movb
popf
loope
movsb
mov
add
cli
std
aad
in
call
inc
jp
sti
je
jbe
mov
push
adc
mov
mov
stos
jge
mov
pushl
cmp
lods
orl
dec
xor
sbb
bound
adc
shrb
lcall
lea
out
xor
mov
mov
sub
jae
or
xchg
cld
iret
push
dec
jnp
mov
cli
ret
imul
negl
dec
pop
push
nop
lahf
mov
dec
cmc
or
rcl
in
cmp
add
and
xlat
nop
mov
sub
adc
jge
sbb
sub
scas
sub
sub
lret
dec
add
push
jnp
mov
xchg
xor
fisubs
sti
sub
jg
push
movsl
cmp
ljmp
push
push
shlb
test
or
sub
rol
dec
mov
movsb
mov
jl
push
into
aad
dec
inc
add
scas
xor
inc
jmp
cmp
pop
outsb
mov
push
in
or
dec
and
ret
je
fimuls
inc
arpl
js
lcall
in
pop
push
adc
les
nop
cltd
iret
mov
dec
sbb
sub
icebp
shll
lcall
xchg
stos
push
into
imul
add
adc
icebp
cwtl
pop
jo
shrl
mov
test
cs
ds
in
lcall
out
pop
test
fldt
cmpsb
jg
cmp
mov
xlat
fsubl
inc
out
jno
sub
mov
cli
es
sahf
out
mov
jbe
fnstenv
les
xchg
push
jbe
lds
mov
in
inc
in
mov
cmc
xchg
iret
or
popa
pop
orb
dec
mov
std
aam
nop
inc
addr16
in
out
std
jno
jmp
or
or
push
hlt
sahf
inc
xor
test
movsl
or
or
dec
pusha
aaa
add
inc
rclb
add
inc
and
mov
test
jbe
nop
push
nop
scas
adc
hlt
repz
ds
cmpsb
das
cli
js
mov
ljmp
ss
xchg
mov
xor
sub
in
jb
pop
fcoms
rcr
mov
mov
inc
and
and
jno
and
mov
cmpb
lahf
cs
arpl
popf
jns
pop
enter
and
mov
fists
bound
sub
hlt
mov
jge
mov
dec
and
dec
xor
jp
jnp
mov
pop
iret
mov
ds
stos
add
inc
sbb
lods
cmpb
jbe
cmc
mov
jmp
mov
testb
cwtl
aam
jae
ds
or
xchg
rcr
inc
test
push
and
nop
mov
push
std
add
mov
aas
fnsave
jae
jae
pop
shrl
sbb
mov
xchg
andl
push
and
inc
loop
loopne
jbe
popf
test
xor
inc
test
rolb
mov
addr16
sbb
stos
pop
loopne
pop
sbb
jecxz
xor
cmp
mov
insb
jmp
xor
xchg
push
pop
push
bound
cmp
fsubrl
movsb
xchg
xchg
dec
cmp
lods
leave
repz
lcall
insb
fbstp
cmp
and
fnstcw
leave
lahf
aas
jo
add
cmp
pushf
pop
imul
push
popf
cltd
push
mov
decl
mov
mull
push
fsubs
shll
mov
mov
sub
outsb
push
hlt
pop
jo
popf
xchg
mov
mov
sbb
sbb
and
dec
outsl
or
push
pushf
addl
mov
repnz
jbe
sub
ja
sti
push
leave
pop
cmp
aam
jne
icebp
xor
pop
movsl
lods
testb
cmpsl
fimuls
cmpsl
jmp
in
add
enter
xorl
aaa
dec
shll
loope
test
ja
push
inc
xlat
sbb
dec
fwait
add
xor
dec
add
inc
xorb
jne
or
int
xchg
scas
les
and
jecxz
data16
inc
repnz
aam
mov
repz
sub
and
iret
adc
mov
nop
popf
add
mov
dec
out
dec
scas
jo
xor
cltd
stos
test
data16
pop
mov
or
nop
test
daa
push
test
inc
add
xor
sbb
push
cmp
adc
std
push
sbb
js
jne
add
sub
sahf
pop
es
je
shll
adc
cmp
pushf
data16
adc
rorl
dec
xorb
mov
popf
iret
andl
pop
insl
sbb
pop
pop
insl
push
push
xor
out
lock
and
push
idivb
lea
pop
lock
add
add
add
gs
popa
add
scas
sbb
pop
pop
dec
mov
push
test
cs
mov
sahf
cmp
mov
btr
push
and
pop
shl
xchg
and
and
rcll
ret
sbb
mov
and
bnd
shrb
sbb
movsl
jae
lock
cmp
or
jb
jl
adc
lret
pop
push
inc
push
cmp
rclb
jae
xor
adc
out
test
or
push
pop
and
add
cmp
sbb
imul
mov
or
jp
jno
sub
scas
dec
mov
scas
push
mov
stc
ja
in
add
push
sbb
jp
rorl
leave
das
xor
in
fwait
adc
push
outsb
mov
repnz
imul
inc
jmp
scas
imul
das
xchg
enter
jne
pop
inc
lea
xchg
sub
lea
aad
mov
push
add
cltd
jo
mov
repnz
sbb
ret
insb
fcmovnb
jo
push
in
pop
pop
aas
call
sbb
popf
xor
sbb
mov
cli
mov
pop
pop
inc
jae
mov
imul
test
mov
jmp
das
cmpb
jp
mov
xchg
mov
mov
mov
inc
mov
cltd
inc
jnp
out
pop
std
popa
aam
xor
movsl
or
sbb
jb
fcmovb
lds
mov
fst
movsb
std
mov
jg
lcall
sarb
stc
ftst
rcll
cmpsw
je
cmp
dec
iret
cmp
push
rorl
loopne
and
pop
mov
sbb
mov
mov
iret
rorb
pusha
imul
addb
xchg
aad
aad
hlt
lods
mov
fldl
test
xor
aam
dec
orl
or
and
add
lods
shll
inc
jb
xchg
nop
ret
or
mov
adc
aaa
aas
xlat
stc
shrl
sbb
fcomps
mov
test
mov
xchg
push
outsb
pushf
rep
sub
mov
cmp
jecxz
sub
xor
sub
mov
ljmp
mov
minps
pop
popl
frstpm(287
imul
cmp
xchg
pop
movl
sbb
pop
pop
fidivrl
jne
jle
pop
jns
incl
fidivrs
cmpsb
mov
xor
jno
mov
mov
mov
cmp
andps
mov
or
fs
insl
mov
adc
mov
leave
mov
movsb
in
cs
jmp
decl
jmp
fwait
imul
sub
mov
stos
bound
sub
cmp
inc
cmpsb
add
xor
movsl
pusha
dec
adc
mov
mov
pop
adc
imul
scas
cmp
lods
xlat
push
mov
sub
mov
in
insl
ficoml
lcall
popa
testb
cmp
mov
call
push
lods
push
daa
js
loope
rcl
xor
lods
jo
cmp
inc
adc
mov
xor
pop
cmp
add
mov
mov
sbb
pop
sbb
cvtdq2ps
mov
mov
lret
adc
push
pop
xor
das
adc
pop
xchg
out
push
sbb
add
movl
lea
outsb
aam
sbb
out
mov
rcr
or
cmpsb
insb
das
scas
leave
arpl
es
gs
loop
xor
fldt
aas
mov
sbb
mov
lret
clc
cli
sbb
mov
xor
out
push
pop
sub
in
fimuls
clc
and
test
mov
int3
test
cmpb
xchg
cli
add
pop
and
hlt
xchg
pop
push
imul
shrl
xor
push
movb
mov
rol
stos
imul
out
sbb
xor
aam
lock
sub
out
push
sbb
gs
push
sbb
mov
xor
shlb
out
adc
test
jb
mov
or
ja
fcomip
mov
js
clc
cwtl
iret
cli
ficoms
add
popa
pop
lds
jmp
mov
push
push
sub
mov
ret
cmp
inc
push
nop
cmp
cmp
mov
push
ret
das
repz
xor
push
pop
std
or
rorl
addr16
fisubl
scas
xor
outsl
fists
pop
mov
or
add
test
dec
mov
dec
mov
jl
fidivrs
jae
cmpsb
pop
nop
movsb
cmpsl
je
mov
movsb
mov
dec
xchg
xlat
aad
sbb
rcrb
adc
inc
sbb
cltd
lock
or
fistps
out
cmp
hlt
mov
movsl
xor
sub
sbb
enter
into
mov
lods
cmp
mov
out
inc
pop
movsl
lea
sbb
jl
jnp
pop
jnp
adc
xchg
adc
inc
cmp
push
pop
sbb
call
dec
push
mov
adc
mov
stos
xor
cld
stc
shl
cltd
in
mov
popf
imulb
test
stc
xchg
adc
div
popa
sahf
sbb
or
add
xlat
xchg
cmp
jl
vpackssdw
sbb
jb
cmp
and
jge
push
push
inc
add
insl
pop
ret
fstl
bound
les
xor
pop
and
hlt
test
adc
sbb
push
sub
lcall
mov
add
add
xchg
outsb
cmp
sub
nop
jle
xchg
inc
push
aad
or
jno
or
xor
mov
or
cmc
inc
mov
xor
mov
loopne
add
push
fisttpll
aam
stos
daa
jg
mov
mov
mov
mov
or
scas
in
xor
sub
popa
fs
add
add
scas
mov
rcrl
stc
popf
faddp
sub
mov
inc
out
icebp
scas
fmul
add
cmc
pushf
loopne
cmpsb
dec
mov
adc
xor
mov
push
lods
out
push
or
jae
mov
sbb
xor
ret
cmpsl
fldenv
push
in
or
mov
inc
push
jmp
lods
scas
or
xchg
cmpl
faddl
mov
push
popf
adc
test
lret
jp
adc
lea
xchg
jno
add
mov
roll
sbb
pop
cmp
mov
cmpb
xor
push
and
std
lret
mov
nop
leave
lret
mov
dec
movsl
cmpb
xor
pop
sti
nop
sbb
lret
fcmovnbe
pusha
push
lods
lods
lcall
lcall
cs
sub
in
test
addr16
jl
out
dec
ss
fimull
add
dec
loope
aaa
cmp
mov
mov
lret
mov
mov
lret
les
or
iret
int
and
cmpsb
sti
cmp
mull
ror
mov
outsb
enter
jns
sub
add
pop
or
sti
int3
scas
movsl
xlat
or
and
push
fwait
cmp
out
xchg
js
push
push
cmp
jae
cltd
dec
insl
les
mov
mov
adc
lock
fwait
fs
push
or
mov
sbb
mov
in
aaa
sbb
outsb
jno
dec
cmp
call
test
adc
xchg
out
lret
mov
mull
adc
gs
sti
in
sub
dec
sbb
xor
cli
out
pop
cmp
xchg
sub
std
jge
mov
cmpsl
xchg
dec
mov
ret
loop
popa
and
cmpsl
xor
aad
mov
dec
hlt
sar
ret
and
test
pop
lods
xchg
mov
popa
enter
sbb
push
shlb
add
aaa
xchg
push
fnsave
xchg
mov
mov
sub
lret
mov
cwtl
ret
lcall
and
rolb
aam
add
add
cwtl
popa
jge
dec
lret
add
push
sbb
aam
xor
out
mov
lods
std
jge
sub
push
xchg
jge
xchg
inc
call
loope
in
shlb
lret
jno
int
cmp
xor
maxps
mov
push
inc
inc
fdivs
clc
ds
fiadds
dec
jae
jnp
push
xchg
cld
jp
sbb
mov
pop
adc
out
test
and
push
into
adc
ficoms
mov
inc
xchg
dec
add
adc
push
not
rclb
in
lret
mov
jecxz
pop
inc
lods
mov
mov
adcb
xchg
mov
cs
fmulp
sbb
pop
icebp
xorb
jae
int
pop
dec
pusha
inc
inc
pop
ficoms
add
pop
push
mov
mov
jle
repz
cmp
mov
dec
stos
pop
or
jns
jmp
xchg
in
jp
in
mov
ficoms
or
scas
stos
push
xor
xchg
negl
out
add
jl
or
test
stos
add
adc
mov
xchg
pop
es
enter
jae
and
adc
or
sbb
sbb
out
scas
test
mov
arpl
push
mov
jnp
pusha
and
inc
xchg
cmpsl
xchg
xor
loope
inc
fistps
fwait
hlt
jns
cmpsb
or
adc
fisubs
and
fldl
adc
arpl
pop
jnp
jnp
std
in
test
lock
cmpb
fnsave
fyl2xp1
push
xchg
in
pop
fstpt
jecxz
fs
inc
xchg
das
clc
mov
int3
popf
mov
hlt
sahf
pop
dec
imul
mov
mov
jge
push
inc
mov
insl
shrb
pop
aam
cmpsb
aas
clc
adc
nop
mov
test
mov
cmp
mov
cld
push
jl
mov
test
icebp
dec
dec
mov
sub
es
fs
ror
add
sbb
lods
jmp
lods
mov
iret
in
aad
fmul
mov
test
mov
and
test
test
lds
call
cltd
push
mov
fidivl
test
add
dec
je
sbb
out
imul
mov
add
sbb
mov
mov
pop
jp
sbb
and
pop
sbb
push
gs
xchg
and
pushw
sub
xchg
inc
push
jae
hlt
xchg
ret
sti
bnd
pop
pop
addr16
out
mov
ja
pop
mov
loope
dec
push
in
sbb
pop
test
insb
cmp
jg
fistpl
es
and
ficoms
mov
xchg
jb
push
jmp
lret
ja
and
mov
pop
jg,pt
mov
lods
dec
repz
lcall
fwait
jno
addr16
data16
sti
adc
enter
sbb
jl
mov
mov
push
pop
xchg
sbb
jns
cli
arpl
inc
mov
xor
dec
fadd
jae
jb
bound
lock
int3
pop
shlb
push
xchg
add
test
sbb
mov
sarb
test
hlt
pop
lods
jmp
sub
or
xor
add
test
in
lock
push
int
mov
ljmp
sub
test
filds
lahf
lcall
push
das
dec
test
cmp
mov
mov
and
xor
sahf
xor
mov
aas
ret
adc
xchg
sub
jle
jo
inc
les
mov
sbb
add
xor
pop
shlb
mov
inc
test
das
dec
lock
scas
xchg
add
movsl
lods
or
sub
mov
or
outsb
pop
mov
xchg
jmp
pusha
mov
sbb
xor
stos
out
cmp
test
and
pop
pushf
addr16
mov
bound
push
xor
insb
jmp
pop
in
dec
insb
loope
out
in
and
jge
jecxz
fistpl
pop
test
push
leave
fcomps
nop
jg
repz
fs
scas
outsl
lds
cmc
dec
mov
push
lahf
loope
fwait
decl
enter
jns
loop
hlt
orps
sub
mov
add
stc
stos
lock
lock
adc
shr
inc
pusha
cmp
mov
subb
outsl
xchg
dec
xor
je
mov
mov
xchg
fnstsw
sbb
cmp
hlt
dec
xlat
frstor
lret
xchg
cmpsl
adc
ja
sti
repnz
std
mov
cltd
mov
mov
insl
sub
fmuls
lcall
inc
stos
bound
scas
mov
movsl
cs
aam
sahf
xor
call
pop
jae
jmp
jns
jnp
out
out
imulb
lcall
cwtl
ss
and
test
pop
jnp
sub
and
popa
pop
repz
jle
mov
lret
mov
and
outsl
mov
and
xor
gs
in
out
les
incb
xor
pop
mov
mov
call
push
cmc
mov
aam
jne
popa
scas
mov
in
scas
stc
mov
pop
mov
scas
sbb
cmp
pushf
add
cld
rorl
adc
movsl
xor
adc
cmp
jp
inc
inc
inc
call
jae
outsb
pop
xchg
loopne
jg
inc
add
push
jbe
xor
sub
push
loope
jecxz
xchg
ja
fwait
popa
and
fidivrl
fnstsw
cltd
das
and
or
inc
rcrl
pop
or
flds
mov
dec
cmc
es
loopne
cmp
adc
shll
lret
xlat
fistpll
daa
mov
nop
outsb
stos
fnstenv
jg
sarb
mov
mov
xor
sti
pop
mov
push
int3
outsl
in
pop
cmp
sti
mov
cld
stos
call
xchg
mov
cmp
in
mov
inc
pop
repz
loope
outsb
test
dec
subb
test
mov
jmp
jne
das
sar
fcomps
sub
push
fs
imul
ss
xor
fsubs
xchg
push
inc
dec
adc
and
rorl
or
jns
adc
jl
outsl
jp
cmp
jns
adc
scas
je
dec
imul
aaa
sbb
or
xchg
sub
adc
sbbb
ds
cmp
leave
aaa
movsb
mov
int
mov
pop
xchg
cmpsl
stc
xchg
sbb
adc
add
shll
inc
mov
sbb
mov
shlb
xlat
lcall
iret
jmp
mov
pusha
pusha
std
pop
std
notb
cltd
sbb
and
ljmp
pusha
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
les
xchg
test
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
fdivrs
repz
loopne
dec
and
push
and
mov
mov
ljmp
jo
sbb
mov
xlat
hlt
pop
xorb
in
jecxz
sbb
mov
xlat
mov
push
push
mov
xlat
jmp
jmp
jmp
call
stos
into
add
pop
jl
add
sub
pop
mov
and
in
cmp
sbb
mov
into
flds
jns
xchg
xor
jecxz
mov
mov
mov
push
dec
pusha
mov
jb
dec
sub
cs
push
repz
inc
std
mov
enter
adc
in
rorl
mov
mov
sub
divb
add
lcall
pop
mov
sbb
enter
adc
adc
test
movsb
test
lcall
lret
fildl
lcall
stos
stos
insb
mov
aad
inc
sub
fs
push
iret
fistps
stos
inc
cmc
into
mov
je
mov
mov
push
int3
jl
push
fs
dec
loope
mov
xorl
popf
pop
nop
shrb
jbe
jge
mov
lods
mov
outsl
cmp
adc
lds
and
jge
dec
shlb
lcall
mov
pushf
pop
dec
push
dec
xchg
or
jne
xchg
and
fldl
aaa
sub
pop
sbb
daa
inc
or
das
push
fiadds
jecxz
fstp
add
add
push
mov
cmc
repnz
aaa
or
ljmp
ja
jb
movsb
pop
sub
lret
fsubl
pop
mov
pushf
repz
out
leave
insl
pop
notl
lret
mov
mov
inc
and
mov
mov
enter
fldl
mov
int3
or
inc
sub
mov
shlb
sti
push
mov
xchg
std
stos
push
fistps
inc
add
movb
std
lret
mov
je
scas
gs
jae
sbb
xor
mov
jno
mov
push
int
pusha
xor
ret
ret
pop
das
push
push
repz
cli
mov
fsubl
adc
xorb
xchg
fs
mov
dec
js
push
push
sbb
mov
mov
cmp
pop
sbb
xor
or
jecxz
iret
movsl
push
outsl
inc
ret
sub
mov
dec
cmp
mov
daa
push
lds
test
jl
dec
cmp
adc
mov
or
sub
and
insb
mov
mov
lds
push
clc
shll
rcll
outsb
arpl
xchg
dec
and
dec
cmp
sti
pop
jb
icebp
and
adc
dec
movl
lahf
xlat
push
fisubl
push
xchg
mov
adc
push
xchg
fiaddl
cli
add
leave
ret
addr16
in
lret
negl
sub
add
aas
sub
cmp
xor
test
in
lds
push
dec
push
push
dec
mov
test
jo
jbe
aad
ds
or
bnd
ljmp
sarb
dec
mov
cmp
jae
aad
testb
sub
insb
call
test
shlb
xchg
sub
cmp
inc
outsl
gs
fs
je
scas
movl
xchg
les
loop
mov
or
mov
mov
insl
sahf
cwtl
inc
push
jp
loop
movsb
dec
fisttpll
insl
nop
adc
mov
jecxz
jmp
ds
or
pop
mov
ja
rcll
fwait
ret
lea
push
cmp
and
fisubs
xchg
push
ret
lods
mov
dec
jg
gs
test
out
add
pop
jnp
test
jbe
das
pusha
pop
aas
inc
test
xor
repnz
mov
adc
stc
arpl
sub
xchg
cmpsl
xchg
loopne
pop
jo
jno
mov
sarl
dec
xchg
popf
and
mov
addr16
xor
xchg
imul
jb
sub
jge
mov
xchg
push
lcall
pop
lret
xor
mov
pop
sub
xchg
decb
inc
jecxz
sbbl
mov
mov
add
sub
stos
jl
push
pop
outsb
inc
adc
rorl
push
ja
sti
jl
sti
push
adc
dec
pop
fsts
dec
int
push
xor
imul
iret
jecxz
pop
sbb
dec
and
clc
add
out
and
cmpsb
xchg
push
das
ret
ss
leave
insb
jo
lea
je
dec
into
sbb
gs
rolb
jne
mov
pop
add
daa
or
mov
sub
adc
jnp
out
ret
pop
mov
scas
add
add
adc
fdiv
jnp
jle
outsl
mov
ljmp
jp
push
hlt
inc
sbb
adc
dec
iret
lret
lret
lds
mov
ja
das
orl
xchg
sarl
mov
sbb
scas
push
jo
xor
cli
add
xor
sti
mov
dec
xchg
xacquire
jne
cmp
int
out
test
movsl
shrb
xchg
add
orl
mov
int3
inc
dec
mov
mov
sbb
sub
sbb
mov
outsb
jae
mov
sub
js
jp
lods
jge
repnz
xchg
cwtl
xor
leave
rcl
popf
xchg
sub
es
cmp
jg
scas
ds
push
push
inc
stc
addr16
rcrl
push
rsqrtps
pop
sbb
repz
and
lock
xchg
repnz
pop
sbb
mov
imul
jbe
pusha
mov
cmp
daa
popa
mov
fsubrl
orl
xlat
sti
psubsb
ds
movsb
lods
lods
pop
and
sti
out
pop
inc
enter
enter
lret
out
out
iret
sub
cmp
int
sub
cmpsl
fisttpll
mov
sbb
int3
or
pop
stos
jl
mov
bound
clc
adc
mov
test
ss
sub
fwait
loope
ss
rolb
sub
loop
mov
dec
add
lcall
into
jne
imul
dec
and
mov
pop
adc
xor
es
fbstp
mov
aad
push
imul
loope
inc
xorb
cmp
les
add
stos
xchg
in
xor
insl
cmpl
xor
popf
mov
popf
ret
pop
dec
fldt
fs
inc
add
test
or
sub
imul
push
dec
shll
orl
cmp
aas
lods
pop
aas
jnp
test
stos
cmp
mov
pop
mov
inc
aaa
ljmp
imul
add
lret
jg
dec
inc
aaa
aas
test
add
clc
iret
sti
insb
stc
aad
loope
xchg
pop
or
int
shl
and
dec
and
fsubrs
push
cmpsl
or
cmp
idivl
stos
jae
ljmp
push
xchg
in
insl
sub
ja
lahf
cmp
fcmovnu
clc
mov
cli
push
shll
cmp
imul
dec
jg
aaa
jecxz
jo
push
enter
fbld
cs
hlt
sbb
iret
dec
mov
cmpb
inc
sti
popl
les
push
fisttps
xchg
andl
pop
or
gs
les
or
lea
ja
pop
inc
outsl
add
rorb
sbb
and
mov
dec
sbb
xchg
add
data16
mov
mov
in
jle
jmp
mov
jae,pt
add
mov
scas
and
jb
xor
mov
mov
xcrypt-ctr
cmpsl
pop
inc
xor
clc
mov
inc
xor
imul
or
addr16
lea
orb
xchg
int3
dec
dec
cmp
xchg
repz
rcrl
iret
lods
std
mov
ljmp
inc
dec
lock
dec
arpl
out
loope
push
aad
or
jae
mov
inc
outsl
mov
out
mov
pusha
loopne
and
sub
xor
das
mov
xchg
inc
mov
and
xlat
cmpsb
xchg
push
repz
mov
jno
andl
add
notl
call
insb
mov
pusha
movl
adc
mov
mulb
fwait
pusha
das
dec
or
rdtsc
add
cmp
lret
fwait
lret
pop
dec
mov
add
out
mov
dec
cmpsl
popf
nop
icebp
push
pop
inc
sbb
ja
mov
int3
daa
sub
lds
iret
mov
arpl
mov
lds
adcb
cmp
sub
xchg
test
enter
xchg
inc
or
mov
jb
imul
push
stos
repz
aad
mov
loop
adc
mov
xchg
or
rcrl
push
inc
xchg
je
insl
and
aad
xor
mov
jae
adc
sbb
or
jl
movsl
lods
leave
push
pop
inc
sti
jnp
mov
push
mov
fs
and
fimull
cwtl
sbb
nop
test
mov
mov
test
enter
lahf
out
ljmp
hlt
inc
test
jnp
mov
sbb
or
testb
adc
jae
lahf
xorb
inc
xor
or
dec
add
mov
aas
cmp
mov
mov
out
inc
sar
imulb
mov
fwait
xlat
jne
test
lcall
add
repz
ret
es
les
fsts
lahf
mov
popf
adc
dec
lods
les
out
or
jg
arpl
in
lcall
std
inc
push
jbe
popa
inc
or
inc
out
xor
repz
add
outsl
into
push
push
mov
lods
and
xor
in
aaa
pop
insb
inc
dec
xchg
mov
sbb
sbb
mov
fistpl
or
sarl
xor
push
into
sbb
sbb
mov
push
leave
mov
mov
jecxz
aam
push
ret
pop
das
cmpsl
cmpb
mov
fcmovbe
push
imul
sub
inc
add
or
lcall
or
testb
adc
mov
push
inc
mov
sbb
add
mov
mov
imul
testl
push
mov
inc
gs
lods
in
mov
adc
xchg
shrb
sbb
push
movsb
lea
add
sti
in
sahf
pop
and
jb
test
shlb
fidivrl
int
ds
lods
int3
rcrb
jne
ret
mov
push
ret
push
lret
icebp
stos
sub
inc
inc
or
in
dec
mov
pop
pop
push
stos
inc
cmp
movsb
imul
dec
sbb
imul
push
popw
inc
mov
fstpl
es
adc
xchg
dec
in
xorb
mov
es
data16
jne
xor
outsb
sbb
adc
orb
mov
push
xor
adc
jle
mov
adc
adc
push
aad
outsl
mov
push
push
jns
add
mov
pop
jecxz
stos
fwait
hlt
out
sbb
fadds
xor
jp
ss
dec
outsb
mov
in
repz
lods
cmpsl
inc
jnp
outsb
xchg
inc
push
data16
loope
xor
in
inc
inc
or
add
nop
xor
jae
cmpb
mov
cld
inc
sbb
xchg
sbb
and
aaa
xchg
push
cwtl
add
add
orl
ja
or
push
sub
test
push
clc
mov
rcll
dec
out
xchg
insb
fcomps
mov
outsl
push
ss
or
xor
callw
pop
push
aam
int
cwtl
cli
repz
cmp
scas
das
jmp
into
repnz
dec
add
pop
shr
inc
add
lods
jno
testl
xlat
add
push
inc
outsl
push
jb
mov
mov
cmp
mov
inc
stos
pop
stos
sub
sbb
add
or
and
stos
dec
jge
add
push
xchg
movl
pop
stc
mov
sbb
mov
lods
sbb
fmull
inc
das
insl
nop
insl
xchg
jbe
sub
aad
imul
gs
inc
cld
faddl
inc
insl
scas
or
stos
insb
xlat
mov
xor
ss
testl
add
mov
jbe
mov
data16
in
iret
xor
sahf
das
dec
hlt
adc
loope
jmp
test
shlb
jl
mov
adc
vpsubq
loope
cmp
cmp
push
mov
sahf
aaa
aam
and
push
movsl
sub
xchg
sub
lods
aas
mov
pop
xchg
daa
adc
inc
inc
jb
or
fisttps
aaa
and
inc
ret
mov
in
mov
mov
mov
out
movsl
xor
loope
mov
mov
gs
stc
arpl
cli
cwtl
cltd
jo
xor
clc
pop
out
pop
dec
and
andb
jecxz
rcll
and
mov
mov
adc
inc
pusha
sbb
sub
in
aaa
repnz
push
sub
lods
add
ss
adc
cmp
insb
inc
mov
cmp
jg
jo
pushf
xor
pop
jns
push
sub
into
ja
cmp
imulb
pop
or
cmp
loop
repnz
jns
or
jbe
aad
dec
pop
cmp
outsl
xchg
pop
js
pushf
or
iret
or
mov
mov
sub
inc
jp
jle
xchg
pop
cmpsl
and
fmull
add
mov
push
xchg
insl
aam
pop
test
xor
fbld
repz
ljmp
mov
pushl
mov
dec
push
outsb
mov
call
push
sti
movb
add
xchg
fwait
into
lds
mov
xor
clc
je
pop
push
mov
fwait
enter
sbb
xor
mov
sbb
cmc
lret
xor
sub
jae
and
std
push
sbb
repnz
mov
lock
adc
sub
push
mov
inc
or
or
push
icebp
aam
mov
jmp
push
jl
repnz
jle
xchg
dec
int
cli
in
xor
out
aaa
dec
ljmp
sahf
push
jle
nop
push
lret
lock
repz
add
jp
or
mulb
jp
je
mov
and
adc
inc
inc
je
incl
lahf
lods
sub
ret
or
test
loop
push
sub
xchg
sub
div
ret
cmp
pop
out
lret
pop
add
jl
jg
clc
cmp
out
shl
cld
addr16
notl
fcmovnb
mov
enter
into
adc
icebp
int3
inc
cmp
cli
test
pop
cld
out
test
test
or
jns
push
enter
xchg
mov
sub
outsl
popf
push
aas
xchg
fsubl
sub
pop
lods
jp
enter
xlat
xchg
out
mov
xor
or
int
jae
adc
xchg
pop
fmulp
ret
notw
andl
out
inc
dec
xor
outsb
push
cltd
popf
lahf
and
sbb
je
jmp
or
dec
jg
out
je
inc
loope
stc
and
dec
ret
jno
std
and
aas
cli
add
cmp
cld
or
mov
dec
sub
adc
push
jb
push
sti
dec
mov
mov
rcrb
mov
hlt
pop
pop
fldenv
mov
orb
and
pusha
sbb
arpl
and
data16
in
add
cmp
in
addb
lods
test
xor
and
cmp
and
inc
rcl
mov
mov
or
push
lcall
mov
cmp
push
jnp
and
lret
push
rcl
lods
or
loope
jae
sbb
mov
xchg
pop
stos
lock
mov
and
xchg
out
rorb
push
out
sarl
sbb
cmp
xor
jo
adc
inc
bound
frstor
imul
das
ss
fistl
xchg
fildl
lret
cwtl
scas
sbb
xchg
mov
sub
mov
mov
sbb
jno
les
adc
movsl
inc
jmp
xor
aas
lods
rclb
mov
sti
daa
pop
idivb
xchg
jbe
adcl
lods
xchg
inc
out
nop
and
outsl
push
mov
mov
add
enter
mov
jns
stos
sbb
cmpsl
pop
pop
mov
jge
fcmovnu
in
lock
mov
test
das
jb
dec
out
add
cs
lock
ds
mov
es
pushf
or
arpl
inc
call
xor
loop
icebp
push
subb
or
xchg
jg
mov
push
inc
mov
subb
xlat
gs
jae
lea
pop
push
movsl
xchg
andb
and
hlt
mov
std
add
cs
mov
jle
js
out
push
movsb
mov
in
int3
rcll
xchg
mov
stos
out
sbb
cmc
and
das
je,pt
imul
loop
aam
stos
in
mov
mov
mov
fwait
aam
mov
inc
mov
lds
sti
imul
cmc
bound
pop
xchg
and
jecxz
jae
out
mov
xorl
ds
stc
sub
arpl
sbb
ljmp
xlat
lret
aaa
std
hlt
mov
ds
shl
pusha
xor
xor
repz
sbb
push
insl
mov
loop
pushf
dec
add
ss
repz
jg
out
or
repz
mov
xor
push
jns
mov
mov
sbb
and
jbe
add
std
and
int
aam
xor
test
cmp
aam
mov
mov
iret
mov
loopne
xor
lods
cmp
adc
insl
cmpsl
push
push
sbb
loope
jns
out
jo
xchg
push
fimull
xchg
adc
es
pop
inc
dec
int
lcall
imul
jl
mov
mov
adc
jg
sub
pop
in
and
movsb
leave
xchg
dec
aad
lods
push
rolb
mov
icebp
outsb
ficompl
sub
and
arpl
lahf
sbb
cmpb
add
popf
mov
mov
adc
or
je
rcrb
dec
lods
xlat
pop
cli
push
or
sub
mov
dec
rolb
dec
xor
sub
xorl
rcr
rcll
cmp
cli
dec
add
and
and
mov
push
xor
add
dec
daa
cmpb
xchg
ror
jl
lds
dec
xor
rcrl
aaa
jge
lahf
lds
loope
mov
popa
ret
dec
test
out
dec
and
clc
out
add
cmp
jle
xchg
inc
add
sbb
je
movsl
mov
pop
pop
or
inc
fdivr
js
jbe
ret
outsl
imul
ret
mov
push
push
xchg
rcll
pop
int3
sub
cmc
lods
imul
daa
into
jmp
das
jl
jnp
es
sahf
jmp
push
clc
mov
jbe
sahf
mov
inc
adc
enter
pop
mov
mov
pop
sbb
push
int3
lods
in
xor
aad
repz
xor
scas
sub
les
out
lock
sbb
add
cs
mov
ja
adc
call
sbb
dec
stos
orb
daa
enter
fists
pop
pop
sbbb
inc
xchg
scas
inc
scas
scas
in
add
jle
call
push
sarb
or
pop
shlb
cmp
dec
adc
mov
lods
push
mov
mov
add
leave
mov
jl
add
mov
out
sub
out
jns
mov
mov
stos
es
mov
mov
aas
insl
or
stos
in
add
cmp
data16
popf
pop
clc
out
pop
inc
ret
and
inc
push
repnz
push
loop
adc
jge
jecxz
loope
call
jb
into
and
xchg
or
fst
adc
fs
mov
dec
xlat
xchg
rolb
outsl
es
repnz
mov
jmp
inc
movsb
outsb
lock
mov
ljmp
cli
ret
fs
fisubrl
dec
lret
or
test
pop
sbb
push
movsb
mov
mov
xchg
fisubrs
int
or
pop
pop
fiadds
out
push
gs
pusha
outsl
lahf
dec
mov
rcrl
mov
js
iret
imul
sub
aaa
pop
and
mov
icebp
jge
push
mov
pop
outsb
mov
sub
push
out
leave
sub
fpatan
mov
pop
idivl
and
sbb
pop
fldl
push
jb
push
jno
or
jge
adc
out
cmc
push
sbb
add
rorb
out
sub
lods
ljmp
dec
inc
arpl
clc
pop
inc
out
pop
add
outsl
lcall
and
scas
subb
mov
fmuls
in
push
outsb
in
dec
sub
mov
mov
ror
outsl
lea
push
in
andb
inc
div
sub
movsb
lahf
or
mov
inc
sub
icebp
insl
leave
loopne
fistpl
fcmovnb
les
cmp
out
sbb
sbb
or
movsl
inc
rolb
fiadds
outsl
push
and
pop
sbb
bound
in
icebp
xchg
cmp
nop
mov
pop
pop
xor
inc
adc
in
mov
mov
into
outsb
std
inc
or
out
sahf
or
addl
add
int3
fwait
movsb
sbb
adc
xchg
inc
pop
out
ficoml
dec
sbb
fdivrs
add
out
pop
pushf
add
mov
dec
push
fwait
popf
aas
popf
out
outsb
call
js
xor
jbe
dec
jmp
inc
push
pop
sub
and
nop
test
repz
pop
shll
cmp
fsub
shrb
clc
mov
push
lcall
xor
mov
out
mov
pop
int3
iret
scas
push
imul
fstl
mov
sbb
mov
add
or
mov
mov
ss
aas
dec
fnstenv
pusha
lahf
scas
lahf
mov
les
adc
nop
outsb
out
xchg
les
xor
out
mov
cld
sbb
bound
xor
aam
cmp
push
stos
add
jmp
addb
popf
test
je
ret
cmpb
loopne
popf
or
aad
rorb
data16
mov
or
dec
xor
test
loopne
pop
push
xchg
mov
xchg
cmp
imul
fcmovu
movsb
mov
gs
push
cmpb
repz
inc
call
test
std
mov
xor
inc
negl
or
and
lret
push
sub
in
aas
popf
out
outsb
fdivr
dec
mov
mov
cmp
cmp
out
or
sbb
or
jmp
mov
push
jg
mov
lds
cmpsb
call
sbb
scas
sbb
jae
lcall
std
inc
fisttps
inc
bound
jp
stc
mov
fstpl
rcll
fucomip
push
rcl
cmc
adc
cmpsb
scas
xchg
cltd
jecxz
inc
xlat
fs
xchg
rolb
stc
lea
js
sahf
sub
imul
roll
idivb
xchg
stos
push
sti
int
scas
repnz
enter
add
ljmp
pop
adc
out
lods
xchg
xchg
lock
and
movsb
in
sbb
in
jp
call
bound
scas
mov
pop
fdivl
sbbb
cmp
jbe
mov
push
cmpsb
xchg
ret
loopne
leavew
fstpt
adc
push
fstpl
xchg
push
daa
pop
sbb
push
js
dec
std
ds
mov
lahf
add
aam
pushf
mov
jmp
sub
inc
and
fs
xor
rcrl
jno
test
push
mov
les
stos
mov
mov
adcl
mov
xorl
arpl
jecxz
out
pop
cs
mov
push
enter
dec
inc
lea
movb
or
inc
sub
sbb
xchg
and
pop
stos
aas
xchg
ljmp
fwait
mov
fnstenv
js
xchg
dec
daa
loopne
cmpsb
int
xchg
aam
xchg
stc
iret
mov
aas
and
jo
adc
jp
dec
test
inc
aad
xchg
sti
pop
xchg
dec
mov
mov
or
in
add
shll
imul
imul
int3
push
test
lea
popa
into
cmc
add
cmp
mov
xorl
jecxz
bound
xchg
and
fsubl
pushf
inc
repz
fcom
mov
icebp
push
dec
ret
aam
jg
testb
adc
pop
ljmp
or
jg
call
and
mov
nop
sub
push
pop
mov
cmp
shrb
fdivl
pop
mov
fbstp
out
outsl
push
sub
inc
repnz
gs
jnp
pop
rolb
sbb
pop
push
loope
dec
fisttps
inc
push
popf
pop
movsb
pop
sbb
inc
cmp
shlb
and
sub
bnd
mov
repnz
les
sbb
stos
pop
test
fcoms
xchg
mov
popa
cmpsb
pushf
or
mov
sub
sbb
inc
or
das
test
xlat
mov
pushf
pusha
pop
mov
mov
push
fs
call
cmpsb
call
or
or
mov
sub
fdivs
stos
cmc
hlt
icebp
lock
cmpsl
sbb
negl
cmp
push
shl
loop
mov
cli
cmp
adc
insb
xor
xchg
mov
je
clc
in
and
xchg
repz
adc
xlat
cmovs
xchg
inc
movsb
ret
xsave
mov
push
cmpsb
jmp
mov
inc
ret
fisttps
fcoml
add
xor
sbb
daa
addr16
fstp
rcr
rcrl
inc
outsb
sub
or
jno
imul
jne
stc
xor
outsl
and
imul
mul
pop
dec
out
sub
push
sti
sub
adcb
fsts
mov
mov
mov
mov
or
mov
pusha
pop
call
mov
sbb
jle
imul
stc
movsb
cmpl
or
sbb
idiv
gs
dec
lods
push
mov
es
lret
xchg
cmp
shr
push
cwtl
cs
add
inc
cs
test
adc
fst
cmpb
pop
pop
lret
mov
sub
sti
cmpsl
pop
shl
shl
jno
fs
mov
inc
int3
cs
add
dec
mov
cmp
jg
and
insb
push
mov
cmp
fistps
scas
iret
xchg
leave
daa
sarl
fisttps
leave
mov
dec
adc
push
sbb
mov
mov
pop
pop
std
ja
stos
leave
jne
add
add
in
add
lock
scas
outsb
inc
push
sub
pop
push
int3
xor
cmp
fcomi
sbb
lds
in
dec
jns
andl
mov
stc
aaa
adc
cmp
dec
mov
inc
and
push
in
in
add
arpl
jge
repnz
dec
repnz
sub
test
pop
dec
push
xor
mov
out
fcomps
outsb
mov
ja
ss
inc
cmpsb
pop
rorl
xlat
mov
mov
sub
test
and
movsl
addr16
xor
dec
outsl
cmpsl
enter
lea
jp
push
pop
xchg
std
lods
xor
add
imul
fists
outsb
lahf
out
mov
inc
call
or
mov
jo
aaa
xor
or
mov
sbb
mov
outsb
sbb
inc
jg
cmp
mov
push
jmp
mov
fldt
cmp
bound
inc
test
icebp
pop
mov
std
icebp
sub
test
mov
add
pop
daa
lea
sbb
sub
cltd
gs
stos
rcrb
cmp
inc
test
xchg
js
jns
xchg
divl
frstor
roll
pop
sub
out
cltd
fwait
add
lcall
sub
push
mov
cmp
adc
mov
mov
nop
sbb
or
mov
cmpsl
pop
pop
cltd
cmpsl
lods
bnd
inc
sarl
insl
pop
xor
into
sbb
stos
sbb
xchg
mov
dec
test
mov
xor
inc
mov
mov
lahf
push
popa
icebp
pusha
mov
fwait
or
push
mov
push
cmp
popf
push
flds
leave
std
movsl
out
dec
push
cltd
lcall
js
les
fbld
cmp
clc
int3
int3
insl
xchg
mov
cwtl
cld
sbb
mov
sahf
xor
lcall
imul
cmp
push
jnp
inc
jb
xchg
add
push
pop
push
hlt
lock
test
loop
push
test
fiadds
mov
and
cmp
daa
sbb
jnp
sbb
es
pop
js
jmp
scas
sbb
cld
lret
dec
je
das
and
xchg
movsb
lret
stos
xor
and
xlat
cwtl
popf
inc
inc
add
insb
push
iret
add
ss
jge
cltd
sub
mov
add
mov
out
cmp
ficoml
jmp
adcb
dec
pop
sub
test
and
jbe
ss
int
scas
sbb
cmpsb
cmp
dec
into
mov
sbb
xor
divl
or
pop
lock
jns
out
mov
inc
in
add
sub
dec
jns
and
mov
movsb
jb
loop
scas
xchg
sbb
push
in
cmp
xchg
cmp
mov
in
mov
sbb
leave
in
xor
mov
adc
test
cmp
cwtl
loop
fiadds
and
rorb
fucom
fdiv
xchg
jl
adc
mov
dec
movsl
sarl
dec
push
xchg
jge
add
xchg
or
test
lock
dec
push
sub
mov
mov
jp,pt
mov
fdivs
hlt
and
xor
inc
adc
xorl
int3
or
inc
je
cmp
jp
add
sbb
sub
xor
aad
xor
lretw
push
sahf
fstl
imul
decl
jae
add
nop
pop
sub
or
sbb
ja
aam
sbb
insl
inc
pop
movsl
test
xchg
cmp
mov
cmp
pop
mov
cld
fldt
or
jne
cmp
roll
adc
push
mov
push
addl
popf
cmpsl
mov
in
sub
jno
cli
fs
scas
add
loope
jge
inc
mov
dec
or
push
adc
xchg
xchg
mov
dec
rorb
enter
add
push
lahf
pop
out
ds
cld
mov
xchg
xor
push
fldenv
inc
sbbb
sbb
fists
je
add
lcall
bswap
and
mov
and
ja
cmp
adc
add
lea
mov
mov
dec
adc
ret
cltd
je
gs
out
dec
ja
sub
add
inc
ret
push
jne
mov
subl
cmc
gs
mov
pop
mov
les
pop
outsl
incb
shlb
fdivl
ljmp
popf
push
fisubl
inc
enter
and
cmp
decl
and
push
push
jns
or
enter
test
xchg
je
out
jmp
push
or
pusha
mov
or
xchg
mov
dec
sbb
or
mov
repz
into
test
mov
push
ficomps
push
mov
xchg
jo
mov
into
enter
lret
pushf
sti
shll
mov
lret
fistpll
test
fiadds
outsb
rclb
mov
aas
loope
adc
aam
or
and
mov
aad
je
out
ss
lret
sarl
add
cmpsl
jl
mov
inc
out
testb
int
mov
sbb
cmp
and
add
gs
and
sbb
loop
sub
xchg
jbe
jmp
cmp
in
mov
clc
stc
adc
leave
inc
push
iret
clc
std
gs
adc
adc
and
sarb
jae
mov
int
push
ss
xor
int3
adc
add
add
rcll
dec
cmp
nop
fsub
data16
xchg
sbbl
out
push
scas
cmp
lret
push
sbb
es
stos
cmp
and
inc
dec
and
ret
pushl
add
test
add
aas
sub
push
test
pop
lods
pop
hlt
or
gs
add
inc
sub
push
inc
je
jecxz
and
dec
mov
fwait
rcll
pop
mov
mov
dec
sbb
in
pop
jnp
aam
call
mov
add
addb
cmpsl
mov
rcll
repz
icebp
xchg
mov
xchg
fcoms
insl
popf
into
in
dec
sahf
xor
je
rolb
mov
sbb
cmp
pop
and
push
mov
inc
aaa
into
popf
enter
push
fidivl
cmc
test
repnz
cwtl
sub
push
mov
fisubrl
scas
scas
outsb
shl
xchg
lret
push
xor
popf
mov
or
push
mov
pop
inc
push
lcall
fildl
test
das
cltd
sahf
add
and
xlat
sbb
add
push
pop
add
arpl
adc
in
orb
xlat
cmc
movb
andl
sub
aad
push
mov
mov
sbb
jae
data16
call
mov
repnz
cmpb
cmp
movsb
dec
pushf
xor
lahf
inc
popl
or
jmp
sbbb
push
out
adc
jge
or
cli
adc
mov
sbb
lea
jp
hlt
loop
sbb
fiadds
pop
jne
or
into
int
ret
push
and
fcompl
adc
inc
xor
cld
cmp
out
jo
repz
imul
pop
xor
and
icebp
mov
daa
mov
loope
or
xor
test
adc
pop
and
shll
adc
insl
mov
iret
adc
int3
fucomi
jno
popa
dec
sbb
dec
roll
and
rcrl
incb
push
ljmp
enter
push
inc
aaa
and
jle
stos
cs
rcrl
or
fnstsw
cmp
cmp
cltd
mov
rclb
rcrl
jne
stos
arpl
sub
xor
rcrl
mov
pushw
movsl
inc
nop
popa
lret
or
sub
jae
add
insl
jg
stc
push
jo
add
scas
add
mov
pop
lcall
xchg
adc
push
cld
es
mov
aas
stos
xchg
pop
js
and
out
inc
mov
enter
fadds
and
adc
sti
pop
and
mov
loop
xor
ret
out
cmp
sbbl
sahf
test
dec
test
repz
mov
imul
fcomps
insl
xlat
cltd
mov
add
movsb
adc
pop
sbb
fbstp
int
movsb
mov
push
dec
mov
ja
aaa
jg
jnp
mov
jb
fisubrl
mov
sub
dec
mov
xlat
inc
popf
loope
dec
push
add
cmp
jle
adc
and
dec
mov
dec
push
sub
sti
cmp
xor
mov
jmp
subl
mov
scas
sbb
leave
es
leave
dec
pop
inc
sub
repnz
inc
loopne
mov
lock
sbb
popa
sub
mov
je
repz
xor
or
lahf
lods
dec
pop
sbb
xchg
stos
adc
jecxz
mov
outsb
xor
lret
inc
iret
add
movl
in
lcall
dec
mov
inc
or
xchg
sub
sbb
inc
sub
inc
push
aas
mov
dec
in
jbe
insb
cmp
mov
ljmp
mov
stos
jge
mov
jb
dec
stos
mov
jno
pop
cmc
sbb
cwtl
xchg
shll
pop
lds
add
sbb
nop
aas
push
dec
sub
gs
adc
or
int3
enterw
sbb
and
fwait
jb
pop
jg
push
orl
push
xor
cs
sbb
mov
dec
jmp
pop
pusha
test
mov
cmc
ret
add
push
imul
sub
loope
push
ja
sub
andb
les
push
lahf
dec
jnp
jbe
mov
add
or
or
aaa
push
push
xchg
jnp
inc
and
mov
pop
push
xor
pop
add
cmp
cmp
popf
mov
test
mov
xchg
fwait
pop
add
mov
push
sbb
xor
test
fs
inc
jge
add
cmpb
lret
ja
repz
push
test
mov
flds
pop
stos
xor
add
call
inc
jb
insb
xchg
test
lds
jne
testb
cmp
or
xchg
mov
sub
adc
pop
or
ja
adc
push
mov
jo
mov
xor
xor
ljmp
je
arpl
cmp
jp
xchg
add
and
and
sbb
dec
sub
lcall
stc
out
xchg
imul
dec
bswap
push
mov
fmull
dec
and
xchg
fsubp
adc
push
jmp
sub
stc
loopne
aas
cmp
dec
push
pop
lods
and
xchg
and
sub
clc
dec
sbb
jecxz
int3
mov
outsb
sarb
int
ret
jecxz
fiaddl
es
rcrl
sub
ror
xorb
in
add
clc
fs
out
rolb
cli
push
hlt
in
cmp
shrb
repz
jo
add
mov
mov
jmp
aas
or
inc
loope
leave
aad
decb
jae
pop
lock
add
inc
in
sub
mov
dec
lds
stc
push
repnz
mov
sti
and
ret
in
aam
lcall
dec
jno
cmp
jb
sbbl
gs
mov
push
mov
pop
mov
data16
repnz
orl
mov
stos
dec
mov
add
leave
adc
rorl
stc
icebp
dec
and
sbb
jg
sbb
mov
push
mov
xchg
or
jp
daa
pop
dec
js
dec
or
push
movsl
mov
fsts
daa
push
jnp
xor
push
inc
cwtl
adc
std
int
sbb
mov
sub
dec
aam
sbb
ret
mov
xchg
test
cmc
mov
push
sbb
push
mov
aam
inc
mov
jl
loope
mov
pop
sbb
push
js
fmuls
push
jmp
scas
ss
xor
sarl
mov
hlt
dec
jno
ja
add
adc
dec
sbb
xchg
add
jg
movsl
xorl
fnstcw
cmp
sub
xor
adc
sub
pusha
nop
insl
cmp
adc
mov
and
pop
aaa
addr16
out
push
inc
iret
ds
push
cmp
je
idivb
arpl
fsub
cmpsb
push
mov
stc
mov
or
xchg
xor
adc
sub
in
imul
imul
xor
int3
sbb
out
out
pop
lahf
or
movq
mov
mov
cld
test
xor
xchg
push
out
xchg
pop
ficoml
lahf
or
and
inc
js
mov
dec
mov
jae
loopne
movsl
jo
and
mov
testb
xor
jbe
jno
out
xor
mov
mov
in
aam
sub
and
outsl
inc
pop
rorb
mov
aaa
xor
loop
sarb
cmpsl
loope
test
mov
xor
pusha
movsb
stc
push
movsl
nop
bound
gs
leave
jbe
mov
pop
icebp
pop
or
into
hlt
fwait
daa
stos
ljmp
xchg
push
sub
xor
xor
dec
in
ja
mov
add
rcr
or
pop
iret
into
xchg
rcrb
mov
xchg
xchg
test
and
mov
jmp
cmp
roll
xor
adc
xchg
cmp
enter
pop
dec
cs
in
cmpsl
fwait
aas
test
cmpb
sarl
adc
adc
add
fwait
test
jmp
push
sbb
sub
dec
lds
into
insl
rep
aas
test
loop
adc
popa
mov
sub
ljmp
sbb
sbbl
arpl
dec
add
out
js
and
mov
shll
mov
inc
xor
pop
pop
test
xchg
cmp
or
test
inc
mov
out
nop
add
fiadds
adc
ret
ljmp
sbb
or
adc
push
inc
int3
mov
adc
jge
nop
in
aad
shr
xor
mov
sub
out
sbb
push
cmp
jp
push
lcall
leave
mov
cmpsb
outsb
ljmp
ja
clc
scas
push
push
cmp
mov
pop
pop
inc
adc
test
les
mov
cmp
or
inc
and
and
inc
addr16
or
mov
jecxz
dec
jo
xor
movsl
cmp
std
cmp
or
enter
pop
stos
ss
and
push
fmuls
mov
sub
shlb
and
icebp
mov
xor
xchg
push
sbb
jae
lods
rorl
in
clc
push
xor
hlt
mov
lcall
outsb
push
dec
adc
addr16
arpl
or
cmp
adc
xor
xchg
push
jnp
mov
dec
xor
xor
test
push
stos
shlb
xchg
and
out
inc
jp
divl
sbb
xchg
in
pop
add
cmp
jnp
xchg
rol
lods
dec
test
push
jb
jg
mov
cs
lret
aas
mov
movsl
sarl
xchg
mov
lds
sbb
aad
fisttps
ficoml
roll
dec
xor
mov
push
mov
jmp
daa
mov
jmp
out
mov
add
jp
pop
add
fwait
in
jno
cmpsb
iret
adcl
xchg
push
cmc
mov
ret
add
add
scas
dec
sti
mov
inc
mov
mov
bound
pop
test
dec
andl
pusha
sbb
inc
aaa
jnp
dec
sarl
fimull
xor
xor
push
xchg
insl
adc
push
stc
cli
jl
cs
std
imul
out
push
sbb
int
xor
xchg
rcrl
or
dec
rolb
test
or
rcrb
mov
xchg
xchg
loop
xchg
nop
and
push
daa
push
push
jns
add
adc
cmp
shlb
jmp
stos
fdivp
imul
pop
movsb
jns
cld
xor
pop
cltd
sbb
out
dec
sti
popa
inc
jecxz
mov
clc
mov
mov
pop
inc
aam
mov
mov
xchg
and
addr16
add
aam
and
repnz
movsl
dec
xlat
dec
orl
sub
int3
xor
mov
jns
xchg
pop
push
out
sub
arpl
bound
test
mov
add
adc
imul
ljmp
shl
or
popf
icebp
sbb
test
adc
add
cwtl
rcrl
fdivrp
jo
fcmovnb
addl
pushf
cmp
call
add
repnz
jns
or
out
shrb
mov
int3
and
sub
cmp
in
daa
xchg
ret
dec
lock
stos
call
jecxz
pop
push
cmc
jmp
mov
sbb
and
arpl
in
or
inc
or
and
jae
repz
std
mov
int3
test
inc
test
sub
popa
push
mov
jnp
flds
xor
sbb
scas
and
insb
jle,pt
mov
push
push
jg
jae
mov
shr
and
stc
incl
adcl
fstpl
inc
in
jo
mov
jl
call
add
pop
add
lods
pusha
xor
lea
mov
aam
cmp
xchg
dec
dec
sbb
dec
sub
fisttps
into
mov
insb
and
cltd
adc
test
xchg
mov
mov
lret
in
insb
repnz
stos
clc
mov
roll
daa
jo
push
inc
data16
ficoms
inc
cs
jg
mov
xor
pop
stc
fildl
or
or
stos
mov
pop
lods
dec
dec
pop
adc
mov
xchg
fs
mov
adc
insb
and
je
bound
mov
or
xchg
mov
cli
mov
mov
call
push
lods
sub
insl
cmpsl
mov
ja
cmpsb
push
iret
xchg
add
insb
outsb
sbb
lret
lods
add
add
xor
fidivrs
imul
testb
and
out
jb
push
in
adc
shrl
add
or
pushf
ret
cld
xor
les
outsb
enter
push
xlat
int
push
cmpsb
faddp
lahf
add
int3
outsl
cmp
jecxz
and
cs
outsb
mov
and
lcall
call
cwtl
sbb
popf
repz
bound
std
dec
sbb
or
insl
test
cmp
mov
jae
xor
movsb
adc
orb
sarl
push
mov
aam
adc
inc
js
sbb
les
xchg
fidivrs
clc
jp
push
ror
aam
insb
add
imul
mov
jbe
or
movsl
cmp
in
insb
add
dec
sub
mov
add
lods
es
mov
xchg
out
clc
add
bound
subb
shlb
out
xor
lock
xor
jne
dec
fdivrp
imul
lret
cwtl
insl
and
pop
and
xchg
pushf
xchg
dec
lahf
or
jo
stos
sub
setae
int
xchg
in
int3
sbb
add
adc
gs
push
and
jge
sbb
fmuls
inc
and
xchg
adc
je
xor
xchg
in
lcall
cs
cmp
sub
xor
movsb
std
xor
mov
pop
loope
xchg
aas
aaa
lcall
xor
aam
test
adc
xchg
movb
repz
aaa
push
in
dec
pop
fildll
dec
adc
out
pusha
mov
data16
mov
roll
mov
xor
mov
test
std
xchg
push
add
mov
cmp
enter
jns
mov
jae
xchg
mov
aaa
pushf
pop
pop
inc
std
in
xchg
mov
ds
pop
into
cs
mov
sbb
scas
fisubl
xchg
adc
jno
xor
out
inc
hlt
add
pop
negl
inc
add
aaa
ss
jecxz
ja
push
jnp
shrl
decl
popf
into
push
jp
mov
jbe
mov
ja
ljmp
test
sahf
lret
add
xor
adc
sub
lds
fisttpll
jb
mov
orl
mov
xchg
cmp
push
ds
adc
ret
inc
pop
rol
pop
repz
sub
out
jbe
aaa
mov
scas
xlat
aaa
ljmp
test
jne
add
out
xchg
test
dec
push
fsubrp
mov
pop
jg
sbb
outsl
cmpsl
xchg
jns
stos
int3
lahf
arpl
loop
lds
mov
rolb
scas
jb
nop
test
stc
push
xor
adc
jb
pop
push
mov
decb
xorb
in
inc
push
imul
cmp
and
xchg
xchg
sub
in
repnz
dec
xchg
mov
sarl
rcll
fisttpll
js
inc
push
xchg
push
or
xchg
sti
loope
mov
rcr
cmp
mov
jns
pusha
dec
sbb
lods
sbb
icebp
das
sub
fwait
cmpsl
push
mov
addr16
es
inc
mov
stos
jl
xchg
xor
push
call
inc
sbb
ss
xchg
out
fs
das
jbe
cmpsl
incl
test
mov
mov
mov
or
cmp
mov
ret
push
xchg
mov
jnp
daa
add
cmpl
inc
dec
imul
popa
icebp
cltd
arpl
dec
imul
frstor
insl
dec
mov
push
mov
xor
repnz
scas
jae
sbbb
in
repnz
and
into
fcmovnu
or
test
fdivrl
pop
js
or
in
cli
dec
inc
and
outsl
test
pop
add
and
shrb
call
sub
fucomi
popf
jecxz
lods
jb
xor
mov
mov
std
enter
mov
gs
lret
stc
cmpb
mov
lea
cltd
ror
frstor
adc
mov
adc
mov
out
mov
xor
add
mov
loopne
pop
and
and
push
pop
lock
xchg
andb
sbb
mov
mov
jmp
ret
ret
lcall
mov
ret
fldl
lds
into
repnz
adc
lea
jecxz
insl
icebp
mov
mov
movsb
dec
aas
inc
mov
push
and
mov
aas
jecxz
and
sub
ds
fmuls
xchg
add
call
and
pop
subl
cmpsb
lds
jmp
fmul
lret
mov
xchg
leave
and
and
int3
js
add
loop
hlt
mov
sub
xor
sub
cli
push
or
xstore-rng
cmpsl
inc
ret
mov
sar
idiv
lock
pop
jo
mov
leave
rcrb
pop
dec
jae
test
mov
cmp
xchg
into
adc
sahf
inc
fiadds
fcomi
jno
dec
mov
dec
jb
jmp
add
mov
sbb
std
inc
mov
sub
outsb
dec
stos
xor
stc
lret
lret
jmp
jno
mov
dec
imul
mov
mov
xchg
stc
mov
jmp
lahf
jecxz
dec
jl
andl
subl
sahf
cld
outsl
pop
pusha
dec
dec
xor
fdivrl
call
jo
test
xchg
iret
xor
icebp
add
je
dec
aam
fwait
push
cli
add
adcl
jae
orl
xor
xchg
fwait
jo
pop
xchg
int3
add
add
aad
je
inc
lods
mov
sarb
sarl
or
test
or
sbb
outsb
sub
ds
cmc
dec
mov
sbb
ss
mov
pop
push
aaa
repz
outsl
add
mov
mov
cmc
mov
out
mov
fsubrl
test
inc
mov
adc
loope
sub
int
mov
ss
inc
cmpsl
jne
mov
roll
bound
jb
jl
fistpl
add
fcmovnb
divl
mov
mov
nop
out
cmp
xchg
pusha
sahf
in
mov
jle
test
js
xchg
mov
dec
or
frstor
push
rclb
inc
ret
mov
into
push
push
cmpl
push
daa
mov
insl
sbb
rolb
add
jmp
dec
fnstcw
stos
pusha
jnp
mov
mov
mov
movsb
dec
push
pop
mov
mov
and
xchg
jo
les
cwtl
sub
jbe
out
fwait
push
iret
cld
arpl
xor
mov
mov
out
fucomi
test
mov
addl
mov
aaa
mov
and
insb
ljmp
ds
lock
shrl
xor
jnp
fsts
rcrl
cwtl
or
jp
lret
scas
in
xchg
fimull
jl
push
test
test
and
inc
xchg
jecxz
and
push
xor
rcr
jle
cmpb
sbbb
or
mov
mov
test
stc
sbb
scas
add
lret
into
xchg
call
imul
clc
loop
movsb
pop
adc
mov
vmaxss
xchg
arpl
add
nop
leave
xor
shlb
jg
add
cld
in
and
xlat
cmp
or
dec
mov
or
sub
cwtl
mov
or
xchg
dec
test
pop
fisubl
das
inc
daa
jp
das
mov
inc
aaa
dec
xor
stos
adcl
mov
jle
fs
xlat
mov
xor
adc
cld
lods
loopne
rol
lock
fistpl
imul
mov
sub
loope
add
es
inc
ret
push
push
adc
mov
adc
ljmp
test
sbb
ret
mov
int
cmp
adc
push
xor
nop
scas
sbb
mov
xlat
movsb
cmpsl
repz
ljmp
push
mov
pop
andl
pxor
fldl
jmp
cmpsb
sbb
cli
adc
adc
fs
jl
adc
addr16
xor
ja
mov
sbb
test
inc
or
mov
repnz
mov
mov
test
ficoml
sbb
and
xchg
or
out
imul
xchg
subb
movsb
cmp
cmpsl
fists
aad
aam
push
jne
sti
icebp
rcll
jl
inc
push
vmovsldup
les
enter
sub
pop
cmpsb
aad
imulb
ljmp
push
inc
adc
jns
stos
jbe,pt
lahf
ficompl
cli
cmc
nop
pop
inc
push
jp
stos
dec
lcall
lcall
mov
sbb
dec
in
sbb
fisttps
inc
clc
loop
jge
pusha
dec
sbb
dec
and
and
divl
adc
xchg
lahf
sti
popf
mov
fs
mov
jmp
inc
adcl
inc
pusha
jb
inc
sbb
fcom
xchg
roll
clc
xor
inc
mov
jno
dec
cmc
iret
loope
cli
es
loopne
insb
push
lods
mov
xchg
test
jg
ds
test
cld
mov
lret
je
dec
lahf
movl
adcl
jne
lods
mov
lods
mov
jbe
loope
jns
test
imul
and
ret
icebp
jbe
fsubrl
outsb
mov
and
sub
xchg
jbe
jns
mov
cli
lret
popf
out
cmc
test
in
nop
outsb
adc
inc
cltd
jae
pop
pop
icebp
pushf
mov
push
sahf
mov
sub
test
cmp
mov
mov
cmp
ret
cmc
insl
cmp
outsl
sbb
pop
lcall
jmp
sbb
sbb
mov
sub
cmp
lods
hlt
andb
inc
cmp
jns
out
enter
cmpsl
scas
lods
outsl
inc
lds
movsl
mov
add
pop
stos
outsl
sub
enter
inc
pushf
loopne
cltd
nop
mov
aad
xchg
lahf
cmp
mov
stos
stos
fs
pop
mov
or
rorl
in
xlat
and
and
sbb
adc
imul
out
mov
in
aaa
stc
jecxz
or
dec
es
test
push
xchg
jg
int
call
fisttps
loope
xor
iret
xor
shrl
ss
jbe
sarb
mov
xchg
and
dec
push
outsb
sub
aam
in
mov
xor
int
les
and
or
jmp
adc
and
in
loopne
xor
cmpsb
lods
pop
call
mov
jl
jp
or
mov
pop
sarl
push
inc
inc
and
inc
adc
jb
cmp
hlt
sbb
and
popf
aas
cmpsb
and
add
add
in
aaa
out
cwtl
sub
shrl
decl
inc
dec
aad
popa
ret
fcmove
test
lds
sti
inc
and
clc
xor
fldl
fcmovb
cli
push
inc
stc
push
sbb
adc
mov
or
xlat
and
dec
ss
in
enter
push
add
xor
xor
pop
mov
mov
xor
sub
insb
lods
mov
cmp
lcall
pop
push
popa
jb
dec
ret
lock
push
xchg
enter
sbb
or
add
mov
push
enter
leave
or
cmc
out
lret
clc
loop
cmp
in
movl
lret
lret
push
or
inc
cmp
out
mov
cmp
cmp
sub
mov
mov
lcall
mov
add
cmp
add
push
sbb
jecxz
jno
dec
je
and
sbb
fbld
dec
sti
dec
and
mov
lock
xor
pop
sbb
sub
sub
mov
pop
lock
fimuls
inc
xchg
stos
mov
mov
xor
nop
dec
adc
jne
sbbb
add
mov
sbb
aaa
out
imul
int
and
push
icebp
in
lods
inc
push
sahf
icebp
cmpsb
xor
mov
dec
cwtl
mov
mov
mov
shrl
jge
adc
jb
add
add
repz
dec
mul
push
clc
mov
js
push
adc
ret
adc
cwtl
das
inc
push
dec
fwait
cltd
mov
sub
rcrb
cmpsb
pop
xor
jo
lea
add
mov
cs
rcpps
rcrl
cmc
xor
inc
jle
inc
xor
cmp
mov
outsb
push
ret
test
rol
and
jbe
jns
push
shrl
out
loope
mov
dec
pop
push
imul
xor
or
xor
or
cmp
mov
dec
add
lock
push
test
mov
fadd
adc
pop
push
fwait
hlt
cmp
popf
jbe
scas
repz
jge
repz
dec
rorb
sub
andb
adc
test
cmpsb
cmp
push
inc
mov
lock
xchg
mov
mov
push
xchg
adc
insl
inc
xchg
add
es
les
xor
jmp
insb
or
pop
ds
mov
xchg
push
mov
addr16
test
adc
repz
arpl
outsb
jno
adc
sbb
cmpsl
sub
test
and
scas
vrsqrtps
add
aas
push
jle
adc
gs
xor
fisttpl
cmc
test
cltd
insb
mov
int3
pop
movsb
insl
loope
jmp
shrl
jo
sub
andb
lahf
andl
cld
in
mov
mov
add
leave
jge
cmpsb
dec
ljmp
hlt
cs
or
fsubrl
add
imul
out
pop
in
push
push
push
pop
lods
hlt
mov
jl
loop
adc
and
jg
addb
stos
ret
cmc
and
and
cmpsl
push
lods
into
sub
xor
fdiv
inc
push
or
rcll
shrb
and
test
test
orb
jecxz
mov
mov
sub
jmp
sbbb
rcrl
adc
addr16
in
dec
out
mov
xchg
test
xor
insl
push
cmpsl
js
mov
jmp
mov
addb
mov
mov
mov
ljmp
pop
mov
mov
fsts
popa
rcrl
lret
add
mov
std
outsl
ds
leave
lret
push
mov
adc
or
nop
data16
notl
push
jbe
call
sti
mov
ss
xchg
mov
into
sti
push
scas
cmp
pop
sub
icebp
sbb
std
sbb
dec
dec
cwtl
dec
dec
mov
repnz
dec
lds
mov
jmp
clc
movsb
stos
adc
arpl
xor
mov
pop
shrl
imul
ljmp
push
xor
and
aaa
mov
out
dec
repz
jno
jmp
imul
ficompl
gs
in
popa
fstps
addr16
in
or
cld
loopne
mov
add
repnz
cmp
bound
fimull
lcall
mov
dec
pop
mov
xor
ja
das
dec
sbb
cwtl
in
mov
mov
clc
xchg
cld
lahf
fiadds
aaa
push
pusha
test
xlat
imul
pop
pop
js
sar
loopne
push
bound
lods
jne
ret
jb
jge
mov
sub
scas
and
sub
mov
sbb
add
fstpt
push
add
add
add
xor
std
dec
cmpb
fisubs
aam
ljmp
or
mov
jg
stos
out
xor
inc
add
rcr
push
inc
cmp
f2xm1
divb
lret
mov
cli
aad
dec
pop
push
popl
jecxz
cmp
mov
xchg
push
add
mov
andl
cmp
jg
pop
push
push
jae
jne
sbb
stc
sub
ret
fcoml
pop
mov
ror
and
inc
mov
add
inc
mov
aaa
pop
lret
xor
and
mov
adc
cmp
js
adc
decb
add
sub
add
and
lock
xchg
addr16
mov
mov
adc
in
cmp
aaa
lock
test
out
push
inc
call
dec
call
shrl
pop
and
jecxz
adc
mov
xchg
stos
sarl
pop
movsl
adc
jp
popa
xchg
call
mov
sbb
sbb
repz
outsb
insl
mov
cs
push
outsb
mov
xor
push
cltd
test
dec
dec
bound
add
sub
mov
mov
cmp
jae
push
lret
ja
cmc
fisttpll
enter
mov
fimuls
adc
xor
aaa
push
mov
cmp
add
pop
dec
pop
mov
shl
push
push
inc
mov
lret
bound
popa
dec
fxch
cmp
in
push
sbb
mov
push
repnz
cltd
push
jbe,pt
cld
and
je
jbe
bound
mov
sub
jmp
jne
xor
mov
pop
adc
ds
xor
lret
ss
push
mov
out
dec
adc
ror
call
fdiv
leave
cld
aad
xchg
cmpsb
inc
out
cmpsl
or
mov
int
jns
lods
jmp
aaa
fidivs
add
inc
jmp
push
lea
pop
mov
lea
sbb
add
or
push
stos
xor
or
mov
adc
jl
add
xor
negb
pop
mov
jne
pop
xchg
pop
sub
adc
iret
imul
mov
cmpsb
lock
testl
fcompl
adc
fisubl
fdivs
ret
andb
pop
movd
jbe
xor
sbb
mov
and
out
add
inc
sbb
je
enter
pushf
dec
sbb
or
mov
lcall
int
inc
add
sar
fwait
icebp
mov
inc
or
inc
and
cltd
add
push
lea
imul
mov
adc
ljmp
outsb
mov
mov
push
cmc
pop
dec
movsl
push
sbb
push
lahf
or
jg
icebp
fnsave
pop
xor
inc
sbb
mov
mov
arpl
xchg
repz
push
ret
shlb
daa
iret
or
jo
push
mov
sub
or
add
mov
adc
xchg
enter
adc
inc
shlb
mov
insl
lods
shrb
jmp
sub
aam
dec
mov
imul
lock
xchg
pop
add
in
lret
push
adc
adc
js
rcl
outsb
in
sbb
mov
das
ja
dec
jb
sub
fiadds
or
inc
cmp
adc
xor
incl
xchg
sub
jns
icebp
fidivrs
cwtl
fisttpll
inc
daa
aam
jo
cs
cwtl
lahf
icebp
push
dec
cwtl
fs
fwait
movsl
outsl
mov
sbb
mov
push
dec
outsl
loop
sbb
inc
add
movsl
loope
and
call
sbb
jecxz
test
ljmp
test
in
xchg
test
dec
add
xorl
pop
into
jecxz
jns
lds
add
into
bound
jne
lcall
jb
andl
sbb
jp
bound
pop
mov
push
push
pop
mov
sub
mov
cld
lret
movsl
inc
push
cwtl
cmpsb
fsubrp
sbb
clc
add
popa
mov
cs
push
movsl
enter
jns
adc
sub
aad
jle
push
fbld
add
push
and
add
dec
out
adc
stos
and
mov
jb
adc
sbb
insl
aas
cmp
inc
xor
add
imul
test
scas
enter
sub
adc
imul
dec
insb
add
ret
lods
jecxz
adc
cmpsb
jne
pop
dec
pop
mov
xor
mov
cmp
sarl
push
or
sub
loopne
xor
cmpsl
aaa
pop
pop
ljmp
add
daa
popa
add
jmp
imul
or
dec
aam
shr
cmp
jecxz
adc
rorb
loop
leave
inc
mov
ljmp
adc
adc
jns
xchg
adc
mov
ja
mov
das
add
xor
arpl
cmc
js
js
mov
fs
mov
test
mov
sbb
idiv
mov
and
sub
rorb
add
fimuls
out
mov
out
addl
cwtl
movsb
inc
test
cwtl
inc
mov
cmp
sti
push
jb
pusha
rcll
test
aam
sub
jge
xchg
into
xchg
add
push
or
icebp
xor
js
test
and
lods
stc
mov
jbe
inc
cmpsb
popw
into
xchg
xchg
imul
dec
rorl
mov
fldcw
aas
lock
add
aas
test
cmp
sbb
gs
dec
push
mov
xchg
fistpll
fists
dec
es
shlb
lds
mov
cwtl
jmp
push
add
rcl
push
lock
iret
add
or
sbb
imul
cmp
inc
lret
ret
sti
pop
rcrb
push
add
out
add
outsb
lds
mov
out
je
test
mov
mov
jbe
xor
fldt
pop
push
jne
das
out
aas
inc
mov
int3
mov
mov
and
ds
pop
sbb
mulb
adc
sahf
stos
jbe
cld
jmp
iret
insb
and
clc
rolb
push
enter
mov
dec
pop
or
xor
and
icebp
int3
add
lahf
in
lods
jp
push
sbb
mov
mov
add
imul
xchg
lcall
inc
sbb
pop
repnz
ret
lods
jb
add
sbb
jns
test
rorl
movntps
nop
aas
dec
xlat
dec
test
scas
out
in
cmp
xchg
dec
or
arpl
sarb
hlt
inc
rclb
pushf
imul
les
cltd
mov
test
movsb
sub
xchg
sub
rcll
andb
mov
push
mov
mov
push
xor
inc
pop
mov
loop
jb
adc
xor
cltd
and
add
lcall
mov
inc
push
or
cltd
incw
rolb
fs
jecxz
push
mov
rcr
cmp
pushf
fsubrs
push
add
inc
mov
jl
or
dec
ret
nop
xchg
stos
pop
dec
adc
and
enter
cmp
imul
lods
cmp
push
daa
das
jecxz
sbb
in
shrb
pop
andb
xchg
into
fldcw
inc
sbb
push
data16
ret
fdivl
loope
xlat
lea
rcll
mov
popf
xor
aam
imul
add
adc
pop
mov
lret
in
xor
jb
int3
lods
push
cmp
sub
mov
pop
fstp
xor
sbb
out
xor
je
leave
mov
adc
add
lds
inc
leave
jle
mov
xchg
loope
repz
mov
adc
inc
int
sbb
jecxz
pop
pop
jp
jnp
jle
or
push
cmpsl
or
adc
faddl
incl
push
loopne
pop
cmp
xor
mov
fmuls
inc
cmp
stc
push
pop
out
dec
out
jo
arpl
or
inc
fs
mov
mov
dec
std
stos
jecxz
fisttps
and
push
xor
ja
sub
inc
js
in
dec
in
and
dec
mov
jge
xchg
jne
movsl
sbb
repnz
cld
testl
cltd
inc
out
aas
in
lea
movsl
push
jg
insl
orb
lret
mov
movsb
aam
in
data16
xchg
xor
cmp
fsubr
mov
movsb
cli
pop
add
pop
sub
pop
pop
mov
jmp
inc
sarl
test
ds
jae
push
jo
pushf
dec
mov
mov
or
outsl
jne
cmpsl
lods
clc
mov
sbb
pop
cld
into
ljmp
in
dec
mov
fxch
jmp
and
jle
mov
sbb
insb
ljmp
sbb
dec
movb
jge
mov
mov
pop
addl
fucomi
rorb
or
lret
loope
shlb
push
sbb
sbb
inc
dec
jo
lods
aam
push
es
jg
dec
push
lret
adc
idivl
inc
inc
push
inc
fisttpl
ljmp
js
out
push
push
mov
dec
add
or
xchg
fimull
mov
shlb
sbb
xchg
movsb
mov
jns
push
mov
aas
arpl
mov
mov
cmpsb
mov
xchg
cmp
push
popl
jnp
lret
and
mov
in
add
jg
test
daa
push
pop
sbbl
mov
pop
outsl
push
mov
adc
dec
push
sahf
or
dec
cmpsb
mov
hlt
xor
mov
cld
jno
das
stc
es
pushf
add
scas
mov
inc
adc
sub
pop
mov
dec
or
enter
and
mov
pop
in
aam
xlat
mov
es
call
add
jecxz
pop
jae
das
ret
xor
sub
ja
sahf
fldenv
insl
dec
cmp
inc
or
cltd
xor
aad
clc
leave
out
xchg
and
pusha
mov
inc
call
je
cmc
sub
dec
sbb
cmp
fcmovb
outsl
dec
mov
adc
arpl
jmp
add
or
insb
pop
ja
loope
mov
lret
out
xchg
sub
add
dec
xchg
push
icebp
jo
and
dec
ja
nop
xchg
xchg
test
push
daa
add
out
and
mov
adc
cmc
rcll
xchg
in
or
mov
and
inc
cmc
dec
fsubs
daa
pop
xchg
xor
scas
int
or
stos
mov
enter
cmp
pop
mov
mov
ss
jmp
fs
shr
mov
cmp
repz
popf
call
in
add
shrl
shlb
insb
fcoml
dec
stc
push
pop
inc
lret
jecxz
or
mov
pop
test
std
sub
mov
pushf
lahf
cmp
inc
mov
sub
cld
jb
mov
cmp
pop
lods
xor
jmp
sbbb
sbb
icebp
sub
sub
jmp
cwtl
xchg
or
data16
and
je
ret
pop
mov
sahf
mov
sub
inc
fnsave
dec
push
out
fisttpll
cmp
or
popa
push
xor
or
add
mov
pop
xchg
imul
add
lods
loope
push
dec
leave
push
andl
stos
clc
fptan
xor
or
sub
push
in
out
push
adc
data16
push
and
or
lcall
sti
xchg
jno
cli
jno
cmp
xor
repnz
movsb
inc
cmp
push
sarb
pop
stc
popf
lods
ret
into
inc
movb
cs
aad
fcmovne
or
sbbl
cmp
pop
in
sbb
popa
pushf
cmp
dec
mov
scas
adc
imul
add
push
jg
sbb
lcall
push
stos
xchg
outsl
or
mov
pop
and
push
mov
dec
xchg
sbb
ja
test
jecxz
jge
xchg
fwait
sarl
sahf
mov
or
test
cmp
into
mov
pop
icebp
or
jnp
pop
push
mov
mov
mov
popl
inc
adc
ds
xor
inc
jbe
outsb
xor
lea
sub
ret
pop
jnp
icebp
cmpsb
fdivl
mov
adc
mov
mov
cs
xchg
mov
mov
cmp
and
mov
popf
dec
xor
shlb
sbb
dec
cld
sahf
jo
mov
scas
dec
mov
lahf
push
jns
jle
scas
lds
fnstsw
mov
outsb
fs
movsb
jbe
pushw
xor
xchg
mov
dec
dec
cmp
subl
mov
inc
xchg
jp
xchg
lea
adc
mov
out
mov
and
call
les
mov
and
inc
shl
leave
pop
nop
jl
mov
add
rorl
dec
in
enter
arpl
cmp
in
sbb
jbe
and
mov
daa
repz
mov
sbb
lret
cli
stos
scas
fsubl
sbb
push
ss
sti
subb
pop
push
fildll
mov
dec
sbb
test
push
pop
pushf
aaa
jb
ss
push
lea
dec
mov
lret
or
fsubl
mov
sbbl
rolb
jne
inc
loope
sbb
test
mov
sub
xor
lret
xchg
adc
mov
pop
xchg
add
xlat
ret
pop
push
inc
mov
sub
mov
loop
iret
enter
cmp
sbb
in
mov
xchg
pop
iret
loopne
sub
orps
vandps
cmpsl
ss
pusha
push
outsl
sub
pop
movsb
in
pop
cli
call
gs
sbb
cmpl
lcall
ret
in
or
dec
mov
jno
cltd
dec
xorl
movsl
icebp
ret
fcomps
aas
sti
jg
inc
mull
popa
ds
mov
jl
sbb
inc
in
cmpb
dec
les
push
inc
add
js
jns
into
mov
stos
shlb
mov
sub
adc
nop
pop
dec
jl
into
add
mov
popf
icebp
fs
xchg
mov
and
lcall
int3
out
scas
xor
pop
cmp
xchg
jbe
iret
rcll
inc
mov
sub
xor
dec
rcrl
xchg
xor
aad
sub
lahf
loop
dec
nop
subps
adc
lock
lods
jnp
imul
mov
mov
lea
jns
sbb
and
leave
sahf
jg
jg
test
xchg
jmp
dec
shrb
and
into
sbb
cmp
jne
mov
ljmp
mov
push
add
and
add
mov
jns
sub
lret
jmp
scas
jecxz
movsb
ret
out
mov
sbb
jg
inc
and
pop
pop
les
or
je,pt
cs
xchg
ljmp
sbb
stc
adc
pop
push
fdivrl
das
bound
pop
hlt
mov
sbb
push
mov
hlt
scas
dec
mov
stos
repz
xor
shrb
enter
inc
sarl
add
push
or
and
jge
jecxz
mov
test
sub
mov
test
xor
mov
xchg
es
imul
add
lcall
xor
es
nop
lock
jo
mov
lock
xor
and
push
xor
insb
nop
into
cmp
mov
inc
xchg
in
sbb
inc
int3
lods
test
loop
stos
into
jne
xchg
pop
add
js
xchg
jnp
mov
fsub
imul
pop
add
mov
mov
faddl
out
jmp
imul
sub
pop
and
jecxz
in
ret
js
arpl
jmp
jl
sahf
mov
inc
scas
movsl
fcoms
mov
and
xor
sub
fistl
repnz
fistl
adc
sarl
xchg
inc
push
test
aam
xorb
scas
outsl
sbb
dec
out
jmp
mov
jg
dec
add
cmc
jo
push
outsb
mov
mov
fiaddl
repz
dec
cli
dec
mov
push
lahf
movsl
mov
loopne
repz
or
xchg
inc
pop
bound
xchg
insb
into
cs
adc
cmp
xchg
das
pop
imul
les
leave
fdivrl
adc
stos
cld
jno
and
adc
dec
xchg
mov
lret
fnsave
fs
loopne
ja
cmp
lds
hlt
and
rcrb
sbb
push
push
lcall
jbe
add
push
idivl
ds
scas
push
push
faddl
mov
xor
inc
cmp
rorl
adc
ja
es
sti
xchg
jle
mov
fdivrl
push
adc
dec
jnp
aam
test
lahf
or
inc
imul
clc
mov
andl
jns
add
clc
arpl
push
addr16
fsubrl
in
lods
mov
test
pop
cmp
out
ljmp
inc
or
fildl
and
cmp
stc
jl
ljmp
fwait
dec
in
xchg
aas
dec
scas
roll
sbb
mov
nop
stc
mov
sahf
lea
mov
push
pushf
mov
mov
sub
lret
jb
push
sbb
xchg
jb
and
lods
ror
dec
xchg
repnz
aam
add
lods
lret
daa
mov
sub
push
test
lods
jl
dec
jp
cmp
fwait
push
cmp
jle
and
stc
out
cmp
add
cli
pop
jns
pop
iret
aam
cwtl
xor
subb
push
les
dec
int
in
jae
pop
or
rolb
or
push
dec
adc
cmpsl
es
sbb
enter
aad
pop
mov
int
cmp
sbb
outsb
jmp
inc
push
cli
pop
push
adc
push
ss
mov
clc
push
inc
lret
sbb
sbb
sbb
inc
stc
xchg
shlb
pop
sub
popa
or
mov
movsb
aaa
pop
int3
test
push
and
jns
into
call
jmp
or
jl
leave
call
sti
lahf
cmc
cmp
cmp
xor
xchg
pop
mov
push
ljmp
scas
cld
insb
jg
add
out
cltd
into
iret
xlat
jmp
fldl
pop
and
inc
roll
sahf
shr
and
inc
mov
std
rorl
aas
pop
pusha
mov
mov
das
clc
mov
add
push
jns
xchg
loopne
xor
jb
js
mov
mov
mov
popf
idivl
stos
ret
out
clc
xchg
sarl
fbld
les
out
bound
test
ja
inc
imul
in
ja
mov
test
jl
outsl
in
push
fyl2x
sub
dec
pop
xchg
inc
das
jbe
or
pushf
decl
xor
jg
scas
sub
xchg
dec
lods
sub
jge
adc
xchg
push
xlat
xchg
and
pop
test
xchg
hlt
or
sahf
xchg
mov
dec
add
inc
pusha
fs
mov
movl
push
push
scas
xorb
decw
lret
mov
dec
jle
loop
inc
cmp
inc
dec
pushf
xchg
sbb
jnp
pop
and
mov
std
jmp
ret
xor
fildll
mov
jae
hlt
xchg
fwait
xchg
xlat
mov
sbb
ret
lahf
stos
lahf
push
and
lods
sahf
xchg
sbb
jle
fstps
mov
into
jo
ds
cltd
and
or
out
dec
shll
mov
in
xor
sahf
jnp
cmp
cmp
out
js
mov
iret
mov
test
pop
dec
push
mov
sub
mov
xor
cltd
cwtl
sub
lock
adc
or
adc
ror
jne
addl
movsb
push
mov
inc
sbb
add
fstpl
pop
mov
test
or
dec
and
jno
call
dec
cmc
aad
fildl
std
in
xor
leave
repz
test
into
xchg
mov
inc
nop
es
jb
fists
mov
fiadds
shl
call
addb
in
ds
cwtl
cmpsb
in
sbb
nop
cmc
lods
adc
push
cld
sbb
iret
lock
cld
fbstp
xchg
and
aas
xchg
mov
dec
popa
xor
repz
jnp
test
lods
jge
and
pusha
pushf
jne
xor
pushf
pop
xchg
adc
inc
in
pop
pop
push
jp
pop
xchg
not
push
je
daa
jge
pusha
xchg
dec
aad
add
lcall
out
shll
loope
add
pop
popa
pop
cmpsl
push
ja
imul
xor
stc
mov
mov
sub
iret
sti
cmp
inc
out
and
movsl
es
push
push
hlt
mov
lahf
push
aam
cmp
lods
and
aaa
cmp
pop
mov
jns
sbb
dec
out
mov
out
test
pop
aas
and
mov
add
out
sbb
mov
cmp
loope
xlat
xchg
pop
and
clc
and
aas
jo
icebp
loope
inc
lret
dec
and
cltd
push
xchg
sbb
mov
scas
insb
cwtl
sub
mov
cmp
cltd
push
mov
dec
push
scas
jmp
fwait
add
and
sub
mov
push
mov
inc
fildl
notb
sbb
push
test
cli
imul
mov
cmp
sbb
pop
push
shlb
cmpsb
mov
sbb
bound
rclb
fbld
cmp
loopne
test
jo
dec
xor
add
xchg
in
sub
or
xor
negb
sub
jmp
shlb
mov
adc
dec
sbb
addr16
mov
fbld
aad
jl
adc
ret
idivb
xchg
sub
lock
imul
or
jecxz
push
push
scas
arpl
push
flds
out
insl
out
sbb
inc
sti
mov
inc
push
outsl
dec
sbb
enter
cs
or
adc
addr16
pop
shlb
inc
nop
divb
movsb
out
loop,pn
jae
xchg
pop
add
ret
mov
es
insb
dec
pop
dec
mov
rcrb
inc
in
mov
inc
add
mov
test
test
jg
sbb
lods
mov
and
xor
in
add
pop
mov
fiadds
je
addr16
int
insl
mov
cwtl
push
scas
bound
icebp
pop
fildl
sub
rcrb
stos
imul
aam
xchg
int
cmp
or
pop
sar
push
jo
push
outsb
push
sbb
lods
xchg
and
sbb
lcall
pushf
punpckhdq
xor
std
sahf
gs
lcall
and
push
dec
push
imul
out
sbb
roll
out
hlt
loop
mov
in
dec
outsl
and
push
mov
mov
inc
dec
fistpl
add
mov
cmp
mov
and
cmpsb
xchg
mov
xchg
cmc
ja
mov
outsl
sub
push
sbb
lods
inc
xchg
in
pop
stos
jmp
int3
mov
fisubrs
jmp
add
pop
les
lock
mov
scas
icebp
test
mov
pop
jne
sub
dec
pusha
in
dec
cmp
xor
ljmp
add
or
xor
shrl
insb
push
pop
jno
xchg
add
push
lds
out
jp
test
and
mov
cmp
lock
inc
xor
ret
push
push
sub
mov
or
enter
cmp
into
popa
fadds
mov
stos
mov
push
mov
xor
lret
test
mov
xlat
bound
pop
pop
pushf
std
aaa
dec
ja
mov
xor
sub
std
jmp
lea
lea
aad
jg
push
adc
dec
lock
push
ss
hlt
jae
and
inc
add
imul
push
repnz
aam
lea
aaa
xchg
dec
and
add
movsl
cli
and
out
xor
test
push
sbb
mov
sbb
in
test
aaa
mov
pop
pop
add
fidivl
push
mov
movsl
xchg
jae
push
lock
dec
shlb
lods
mov
push
lahf
repz
inc
sbb
sbb
loopne
or
inc
add
add
push
jp
mov
xor
mov
sbb
push
stos
iret
out
movsl
cmc
into
mov
inc
in
fcmovne
xor
outsl
ss
cmc
insl
aam
popa
push
cmp
mov
ja
sbb
sahf
push
and
je
ja
test
jne
repz
add
push
clc
les
pop
popf
or
loopne
push
cmp
pusha
bound
xchg
jne
sbb
pop
sbb
shlb
nop
imul
addl
jg
imul
adc
das
pop
pop
data16
daa
ja
xor
mov
jle
int3
sbb
mov
fistpl
mov
push
ret
add
int3
pop
les
cmp
mov
sub
cs
lock
imul
cmp
and
sti
sub
sbb
outsb
incl
push
sbb
out
inc
sub
in
icebp
arpl
rolb
out
cmp
xor
cmpb
jle
popf
test
fwait
xor
jbe
adc
repnz
scas
cmc
or
push
inc
xor
jmp
mov
fcmovb
sti
scas
sub
xor
mov
into
sti
xlat
leave
adcl
mov
inc
dec
scas
push
andb
fcompl
clc
into
jg
data16
ljmp
stos
orl
clc
jle
mov
jnp
xlat
cmp
test
push
push
xchg
mov
mov
sub
lods
pop
sub
lret
aas
fiadds
roll
jmp
dec
jns
cmpb
bound
stc
add
mov
fwait
or
jbe
je
xlat
mov
xor
jb
sbbb
repz
push
xchg
and
sub
mov
dec
test
cmp
mov
add
mov
mov
jecxz
in
or
inc
pop
pop
or
in
dec
sub
dec
fistpll
and
lcall
icebp
mov
or
push
js
ja
cwtl
clc
jo
test
xchg
sbb
pop
push
inc
scas
add
sub
lcall
sub
addl
shlb
push
fs
adc
pop
out
call
cmpsb
sbb
jbe
pusha
std
mov
and
das
mov
and
adc
cli
mov
fdivl
sub
jae
mov
dec
movsb
or
push
jecxz
jb
sbb
or
inc
jp
sbbb
repnz
dec
or
fxch
lods
and
mov
mov
out
and
aam
int
lds
cwtl
adcl
das
adc
and
cmpsl
loope
mov
jno
adc
jae
inc
ja
pop
cmpsl
xchg
popf
lcall
pop
mov
test
push
out
outsb
xor
mov
call
adc
in
adc
or
sbb
stos
dec
xchg
mov
mov
xchg
lcall
and
cmp
popf
in
out
cld
sbb
pop
cmc
lahf
jo
adc
testb
lds
adc
sahf
ds
into
cmp
sub
adc
rolb
scas
outsb
sbb
inc
inc
or
shrl
cltd
sub
aaa
loop
rorb
mov
or
sbb
dec
cmp
test
pop
std
push
mov
test
adc
mov
cmp
jle
dec
xchg
push
pop
jge
xor
fadds
int3
inc
sub
das
test
mov
psrlq
sub
aam
xchg
and
push
std
and
addr16
mov
mov
aam
inc
xchg
scas
sbb
daa
jg
push
aad
xor
mov
and
iret
iret
cmp
cmpsl
jecxz
aaa
push
add
aas
mov
cmp
pop
repnz
enter
stos
jnp
cmp
inc
int
xchg
sub
int
outsb
sbb
cli
jp
aad
lods
lcall
push
fisubl
inc
pop
rolb
inc
test
xor
mov
jmp
cmpsb
shl
and
pop
arpl
mov
jnp
inc
test
mov
sbb
jno
push
pop
call
pushf
cld
dec
xchg
movsb
xchg
mov
lock
dec
out
sbb
inc
aam
lock
and
lcall
xchg
leave
rcll
fimuls
js
push
adc
push
mov
jmp
cli
movsb
rol
sbb
andb
lods
cmp
mov
mov
scas
scas
in
jno
lcall
icebp
mov
push
lock
cmp
fbstp
imul
jo
mov
push
cltd
ret
decl
adc
sub
nop
aam
test
shll
mov
sbb
mov
ss
cld
popl
lock
stos
inc
das
push
push
push
xor
dec
leave
arpl
or
mov
sub
or
enter
movsb
pop
add
xchg
loopne
loope
loopne
insl
in
dec
or
inc
sbb
mov
iret
lret
sbb
fisttpl
nop
mov
lods
daa
sub
das
jns
lock
dec
ror
cmc
xorb
adc
dec
dec
sahf
rcrb
jne
jo
cmp
scas
inc
pop
pop
push
xor
xchg
or
ljmp
rcl
ljmp
ret
rcrb
and
pop
cmpsb
pusha
lock
arpl
jne
lock
push
test
xor
dec
sbb
inc
insl
cs
add
adc
pop
xchg
jg
push
stos
insb
adc
mov
fldz
lret
lahf
dec
call
inc
push
stc
popa
xorb
std
mov
mov
fdivr
mov
adc
cmpsl
pop
adc
test
je
and
mov
cmp
mov
jnp
sarl
sbb
iret
push
adc
mov
fucomp
add
iret
adc
fsubp
jg
inc
je
in
arpl
fisttpll
ljmp
outsl
repz
add
push
or
adc
sbb
dec
movsl
jo
push
bound
cmc
xchg
jg
insl
mov
imul
push
dec
shll
movnti
dec
and
nop
popa
cli
bound
or
nop
xchg
xor
sbb
enter
std
int
and
cmpsl
lcall
jmp
idivb
xor
xor
lock
adc
int
push
pop
xchg
ds
sub
push
mov
pusha
mov
fistpll
jp
xor
or
mov
stos
dec
fistpl
pop
aam
in
popf
cmp
cmpsb
stos
rcll
mov
cmp
fisubs
out
in
push
shl
push
sub
in
lods
loopne
jae
imul
stos
inc
mov
rcrl
fs
add
sub
pop
mov
jb
fcmove
subl
push
fisubrl
jnp
sub
idivl
jae
dec
xor
rclb
sti
addb
cwtl
adc
out
inc
add
scas
cmpsb
aam
pop
dec
je
inc
in
add
leave
out
sbb
stos
sti
bound
and
adc
pop
enter
xchg
add
das
sbb
add
xorl
clc
mov
xor
imul
and
fstpl
movsl
cli
xchg
xor
cmpsb
inc
xor
in
daa
xchg
mov
push
dec
add
test
jle
ret
adc
sbb
mov
push
add
gs
lcall
fsubrs
shlb
and
inc
repnz
sub
cmp
and
dec
pop
and
inc
pop
inc
sbb
jne
push
inc
js
iret
lock
and
jecxz
and
mov
push
lods
mov
xchg
add
cmpl
adcb
and
out
bndldx
stc
xor
jb
ss
mov
sarl
pop
dec
sbb
loop
cmp
les
mov
ja
mov
mov
in
repz
stos
jns
jle
sub
imul
addr16
imul
rol
daa
and
jg
ret
xor
aam
loopne
out
xchg
mov
cmp
xor
jmp
into
scas
aam
stos
push
xor
cwtl
push
jnp
pop
ficoml
ja
jbe
ja
adc
out
cmp
jge
dec
scas
scas
in
adc
divl
iret
loop
cltd
sbb
xchg
pushf
imul
xchg
xor
ds
cmp
frstor
and
inc
or
push
rcr
jns
sub
call
mov
sub
out
call
cmovns
aad
lods
je
sub
or
out
cmc
xor
cmpsb
mov
jge
mov
sti
adc
sbb
data16
mov
adc
out
cmc
ljmp
push
lods
inc
insl
in
mov
js
les
cmpxchg
loop
pop
cltd
and
enter
pop
sbb
push
fwait
out
sbb
stos
imul
loopne
enter
mov
imul
fs
js
jge
push
and
pop
dec
outsb
adc
imul
pop
mov
lea
dec
sbb
inc
test
pop
imul
pop
mov
jae
sahf
sarb
mov
fldt
imul
hlt
stc
fmul
sub
fistpll
push
sbb
mov
dec
dec
ljmp
aaa
adc
sbb
test
cmpsb
push
loopne
sub
xlat
or
jge
push
sbb
push
pusha
ss
sbb
addb
jg
xlat
dec
sub
dec
fdivrl
ja
iret
or
das
jecxz
das
adc
mov
jo
xchg
or
loopne
mov
das
shrl
xchg
gs
inc
push
sub
in
push
pop
scas
add
pop
movsb
flds
addr16
mov
add
and
sub
push
test
out
cld
fadd
cmp
cmp
pop
ljmp
lock
sahf
or
or
out
hlt
jl
lock
test
dec
clc
jle
scas
loop
jmp
leave
fiadds
adc
dec
push
dec
mov
xchg
sub
out
mov
xchg
neg
lea
faddl
fisubrs
mov
push
mov
in
jbe
rcrl
fisubrs
xchg
pause
and
jle
xchg
sti
jl
fldenv
jns
data16
lods
mov
mov
cmp
rolb
xor
inc
outsl
lods
or
das
xchg
mov
jae
insl
pandn
mov
xchg
mov
js
adc
add
sub
dec
mov
mov
xorb
adc
xor
dec
jb
sub
cmp
pop
mov
test
ret
call
dec
push
into
lret
dec
fwait
inc
rcll
and
cmpsb
sbb
add
sbb
pop
stos
sbb
les
lods
fimull
or
out
inc
sbb
lds
jnp
sbb
sbb
lcall
add
mov
pop
or
mov
mov
loop
je
sub
test
jp
lods
push
push
or
xor
call
add
or
pop
imul
xchg
popa
xor
xor
mov
push
aaa
out
jmp
sahf
adc
mov
pop
rcl
push
inc
and
adc
and
stos
mov
cli
inc
nop
fs
xchg
add
frstor
mov
pop
add
shrl
and
cmp
lods
sbb
xlat
xor
cmp
aad
xor
xor
and
loop
sbb
adc
std
dec
add
and
jl
dec
mov
lock
les
iret
enter
cltd
clc
dec
cli
pop
mov
mov
scas
mov
adc
dec
mov
aas
aas
jb
cs
push
es
pop
push
add
mov
gs
movsb
xchg
ja
cmpsl
call
mov
push
pushf
dec
sbb
lock
xlat
adc
enter
mov
xor
pop
insb
loopne
inc
lods
enter
pop
and
sbbb
hlt
jp
popf
out
push
imul
jl
cmpsb
ljmp
jno
mov
push
xor
xlat
ret
cltd
insb
xchg
sub
mov
mov
jne
xchg
pop
cmp
call
aas
xor
loop
in
andb
loope
cmp
jp
movsl
cmp
inc
jmp
mov
cmc
aas
lea
je
jge
sarb
sbb
jbe
cmp
adc
cmp
fs
push
mov
lahf
pop
jae
movsb
fistpl
xchg
sub
out
pop
stos
lcall
daa
dec
leave
call
sub
in
sub
inc
or
or
loopne
sub
ljmp
stos
mov
sub
xor
dec
inc
fstp
rclb
push
mov
add
ljmp
jo
out
xchg
sub
xor
mov
pop
inc
xchg
xchg
adc
or
lahf
inc
cli
xchg
cmpsb
testb
repnz
sahf
inc
xor
fsubrl
xorl
inc
push
enter
xchg
in
lahf
and
ja
lret
jae
pop
loopne
pop
aam
xchg
sub
dec
in
stos
lods
pusha
ficomps
dec
jmp
test
repz
enter
lds
cmp
scas
xor
in
enter
add
xchg
dec
push
adc
add
or
jmp
xor
loopne
inc
mov
movsb
cmp
js
cmp
xor
mov
and
xor
dec
jbe
adc
hlt
cli
mov
lret
stos
add
fwait
test
xchg
xor
les
cs
mov
cmp
and
jle
mov
sub
push
sbb
data16
adc
outsb
pop
jne
sub
fs
data16
loop
stos
gs
xlat
cmpsl
cmp
pusha
mov
iret
or
jmp
hlt
out
rclb
mov
cli
ret
xor
ret
push
pusha
ljmp
adc
clc
jbe
jne
out
fadd
inc
fs
and
add
aas
mov
imul
scas
cld
add
gs
mov
pop
popa
or
push
ret
xchg
loope
cld
add
dec
cli
es
call
inc
push
inc
jae
and
int
test
sarl
movsl
fildll
inc
pop
scas
cwtl
mov
xchg
das
lea
lahf
lret
scas
test
lods
pop
loopne
xor
push
jmp
jmp
int3
shlb
xor
arpl
scas
imul
lahf
push
fs
pop
int
ret
aaa
pop
mov
pop
ds
inc
into
iret
repz
fcomi
gs
movsb
jge
push
lret
or
cmpsb
aam
add
and
daa
pop
or
fidivs
push
mov
push
stos
stc
sub
sbb
push
aad
sti
popf
push
faddl
sbb
test
pop
subl
cli
lods
ds
pop
inc
sub
cmp
js
sbb
cltd
jecxz
pop
xor
cmc
mov
cmc
scas
sbb
xor
add
push
jne
cmp
sti
outsl
lods
adc
mov
fucomp
mov
cmp
lock
dec
shlb
push
fsubr
out
pop
inc
mov
xchg
and
inc
lea
insl
xchg
cmpsl
in
lret
xor
sar
mov
orl
in
in
lds
xor
adc
into
negl
sub
pop
arpl
jmp
mov
test
clc
ss
adc
dec
sbb
mov
pop
adc
and
std
int
lret
xchg
push
in
les
sub
fisubl
mov
js
sbb
ss
inc
mov
jp
jnp
cs
daa
gs
xchg
adc
sbb
lea
fsts
mov
or
pop
notl
push
sahf
dec
sarl
lahf
inc
fcmovbe
sbb
ret
cmpsl
das
xchg
je
imul
insb
out
loope
mov
popa
add
lods
xor
and
iretw
push
xor
ret
sub
test
cld
stc
adc
std
xchg
movsl
aad
xor
repnz
cld
xlat
sub
cmp
jne
adc
push
mov
out
stos
and
popl
shlb
xchg
call
mov
lds
push
cmc
xchg
adc
dec
icebp
mov
leave
or
ret
or
popw
bound
pop
outsb
lahf
mov
xlat
sbb
push
push
dec
mov
sbb
dec
fld
bound
addb
push
and
mov
mov
inc
lret
push
push
jo
mov
mov
gs
push
mov
dec
jbe
outsl
into
fcomp
adc
mov
pop
add
insb
pop
ret
xchg
inc
jmp
jle
xchg
add
dec
fwait
cmp
push
shrb
push
pop
gs
mov
xor
and
imul
orl
or
lea
mov
notl
subl
notl
ret
push
les
dec
lret
loopne
jl
mov
mov
cld
dec
jbe
lea
sub
mov
xor
clc
mov
test
out
mov
popf
les
dec
adc
cmpsl
sub
cmp
inc
pushf
cmp
insb
inc
outsl
lods
dec
iret
movsb
sahf
jmp
mov
mov
movsl
mov
int3
push
xchg
add
mov
nop
fcoms
mov
out
fst
push
pop
jb
dec
xor
lods
es
fisttpl
xchg
negb
push
mov
jp
push
test
es
cmp
push
shlb
sub
bound
les
inc
movsb
mov
pop
inc
scas
mov
mov
lret
and
cmpb
dec
dec
pop
xchg
jb
dec
mov
mov
dec
fdivrl
mov
into
and
out
mov
adc
cmp
clc
int
popa
cmp
or
xor
shlb
xchg
pop
mov
dec
test
jg
cmp
movsb
mov
jo
in
psrad
lea
test
lds
pop
sbb
daa
arpl
cmp
inc
mov
mov
outsl
inc
and
xor
mov
sub
add
adc
cmp
outsb
jmp
xchg
jne
insb
lods
fstpt
paddd
repnz
nop
add
sahf
inc
in
sti
stos
xchg
ss
loopne
imul
mov
arpl
jnp
loopne
jmp
arpl
add
jmp
cltd
fwait
jg
outsl
jae
hlt
sbb
ds
mov
mov
in
push
in
cmp
and
dec
gs
dec
enter
mov
pop
stos
repz
mov
cmp
sbb
mov
lret
cmpsl
add
in
dec
inc
lock
sti
or
sub
out
fnsave
cmp
movsl
aad
jb
imul
arpl
fstpt
sbb
xor
scas
out
jno
xor
mov
xor
insl
or
xchg
in
outsl
or
aas
inc
imul
sub
lods
orl
fcomi
xchg
scas
inc
aas
mov
pusha
loop
movsl
cmp
push
stc
and
cmpsl
daa
lahf
lock
mov
mov
inc
cmp
or
push
mov
adc
loop
pop
cmp
movsl
xchg
hlt
popa
sub
jb
gs
cmp
movsl
push
fildll
repz
jns
or
mov
loope
pop
jne
movsb
or
int3
negb
test
mov
push
jne
and
pop
pushf
add
adc
pop
lods
and
add
addr16
in
xchg
mov
filds
sbb
notl
and
fnstsw
dec
addps
outsb
mov
into
or
xlat
std
mov
xchg
addl
sbb
push
sub
sti
aad
iret
or
or
fadd
fstps
rclb
pop
jl
aad
data16
cltd
mov
mov
jns
xchg
sbb
pop
js
xor
or
jmp
je
out
movsl
fisubs
jne
es
dec
xor
dec
pop
cmp
xor
and
push
inc
ret
clc
imul
cmp
lret
mov
imul
rcr
sar
outsl
mov
popf
push
gs
outsl
cs
shl
and
repnz
jge
add
inc
lret
mov
mov
loope
push
fmull
sub
jecxz
into
subl
pop
daa
stos
je
add
cmpsw
sar
sub
jge
lods
pop
stc
mov
hlt
sub
int3
xor
inc
or
pop
jns
or
cmp
cli
fbld
mov
shlb
mov
aad
adcb
adc
js
dec
es
dec
jg
enter
cmp
dec
xor
movsl
add
rorl
sbb
xor
cmp
mov
xchg
clc
sbb
or
adc
sbb
pop
fdivs
test
add
leave
testb
inc
cs
mov
lds
les
jmp
js
cmp
pop
iret
xchg
push
je
rol
jbe
jmp
jge
lock
ss
push
in
aas
xor
fwait
sbbb
push
mov
mov
ja
xchg
daa
and
enter
addr16
shrb
dec
mov
aad
mov
jne
xor
or
jecxz
enter
fwait
orl
cli
mov
hlt
push
mov
rorl
sub
stos
mov
inc
lods
xor
bnd
xor
add
in
jecxz
or
aaa
mov
xchg
cmp
inc
mov
inc
sbb
into
inc
in
lret
lea
sbb
mov
sbb
call
loopne
lret
xor
push
negb
pop
insb
mov
jge
push
jge
inc
lods
in
in
jmp
adc
xchg
imul
sbb
adc
aam
stc
jmp
int3
ret
cmc
mov
pop
arpl
jge
cwtl
das
mov
and
cmc
cmp
sahf
cmp
xor
pop
stos
out
pop
pop
ret
dec
push
pop
stos
xchg
aad
sub
nop
out
pop
or
dec
mov
mov
and
enter
icebp
loop
nop
aaa
clc
sbbl
inc
sbb
inc
xchg
neg
cmpsb
add
cmpsl
cmp
xchg
add
enter
pop
and
rcrl
and
cmc
xchg
adc
mov
cmc
xchg
jle
dec
sbb
or
sbb
push
jno
pop
mov
lcall
mov
jb
dec
movl
es
push
icebp
shlb
loope
dec
movsb
cmp
lods
and
and
mov
adc
xchg
adc
pusha
lahf
lods
jmp
mov
push
lods
push
or
fs
out
and
sti
sarb
mov
mov
test
icebp
out
jne
imulb
fwait
mov
out
roll
jp
arpl
fbstp
sub
sbb
xor
mov
pop
shl
stc
adcb
int
sarb
lods
stos
push
sahf
inc
push
dec
pop
mov
mov
subl
clc
ret
mov
aam
insl
jne
or
xchg
pop
ret
sbb
fldt
pop
aaa
int
pop
inc
iret
imul
pusha
xchg
les
jbe
roll
aam
lods
les
xlat
sub
mov
sbb
push
jae
mov
call
add
and
sub
mov
clc
jnp
xchg
jb
je
cmp
or
cltd
cmp
or
xor
xchg
pop
out
sahf
std
jp
inc
mov
cmp
and
notl
or
ss
cld
mov
adc
out
pop
popa
or
es
ficoml
mov
push
sbb
jecxz
int
es
lods
sub
jmp
xchg
into
adc
or
dec
lret
ret
js
or
push
jecxz
sub
leave
mov
push
add
inc
push
add
mov
or
add
or
add
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
sbb
add
add
add
incl
add
add
dec
add
add
add
sub
add
incl
add
add
add
add
incl
add
add
aaa
dec
add
add
add
incl
add
add
cmp
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
inc
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
dec
dec
add
dec
dec
add
lcall
dec
add
dec
add
incl
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
incl
add
add
add
incl
push
dec
add
fisttpl
sbb
add
jmp
dec
add
fs
add
add
add
incl
add
add
fs
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
add
incl
add
add
push
add
incl
add
add
add
add
incl
add
add
imul
add
add
sti
outsb
dec
add
outsb
dec
add
add
add
incl
dec
add
dec
add
inc
jno
add
jno
add
aad
add
add
loope
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
jne
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
js
add
add
add
incl
add
add
js
add
add
add
incl
add
add
jns
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jge
add
add
add
incl
add
add
dec
add
add
add
jmp
jle
add
jle
add
jmp
jg
add
in
jg
add
jg
add
incl
orb
orb
jmp
orb
orb
pushl
orb
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
xchg
add
add
incl
add
add
mov
ljmp
dec
add
add
add
add
push
mov
or
add
or
add
mov
or
add
mov
or
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
loope
fs
insl
dec
pop
mov
cmpsb
pusha
pop
xor
mov
fstpt
xchg
and
or
cmp
or
jo
lahf
sbbl
mov
push
mov
xor
test
cs
jbe
loopne
mov
or
sbb
ret
sub
inc
push
rclb
xor
fcoms
std
mov
fisttps
push
pop
std
stc
or
adc
cmp
push
and
aad
imull
push
sub
jl
outsb
jg
sahf
push
mov
xchg
sbb
lret
adc
jno
cmpsb
inc
mov
fwait
mov
lods
jecxz
lcall
in
popf
imul
adc
sahf
imul
shrl
rcl
mov
pop
dec
jge
pop
out
popf
sbb
cld
and
sti
sub
int
xor
push
nop
daa
and
push
es
sub
inc
jns
hlt
scas
cmpsb
aad
inc
sub
xchg
ror
xchg
in
cltd
je
cmp
js
mov
or
or
movsb
pop
jge
or
dec
je
icebp
lock
add
push
mov
and
add
scas
out
pusha
movsb
inc
adc
out
inc
sbb
roll
mov
in
sub
adc
hlt
mov
rcl
shrb
fiadds
jns
inc
iret
les
negl
icebp
frstor
daa
lret
inc
lds
out
mov
clc
dec
aad
xchg
cld
les
addl
inc
filds
cmp
ret
dec
dec
push
mov
mov
cmc
les
mov
sarl
lds
xor
pop
push
scas
imul
or
repnz
mov
divb
lahf
cmp
sbb
dec
push
iret
stc
mov
repnz
iret
xchg
cmp
mov
dec
push
inc
nop
fisubrl
outsl
lahf
inc
insl
pop
jnp
cwtl
icebp
adc
or
xchg
clc
sbb
cmp
in
and
icebp
xchg
xor
jl
jno
jle
xor
inc
push
pop
enter
jge
sbb
mov
call
es
sub
xchg
mov
pop
push
es
dec
pusha
push
mov
mov
inc
or
ds
pop
sbb
movsb
ss
mov
cmp
cmp
mov
jle
aaa
testl
adc
dec
stos
add
jge
adc
or
push
cmpsl
pop
sbb
in
add
fidivl
icebp
scas
icebp
lcall
int3
stos
aas
or
pop
mull
arpl
lret
pop
pushw
in
std
cwtl
out
cwtl
rcrl
je
sbb
pushf
xor
sbb
pop
rcl
mov
jecxz
repz
jns
adc
insb
sub
cs
sbb
pop
lahf
popa
mov
pop
push
add
xchg
xchg
lods
add
loope
jg
jecxz
hlt
adc
lcall
add
scas
cmc
mov
push
int
xor
outsb
in
adc
lret
mov
cld
push
add
sti
cmp
or
mov
lcall
inc
sbb
lock
popa
lahf
aad
rcll
sub
mov
es
push
xlat
leave
push
int3
xlat
aam
cli
add
loopne
cltd
cmp
cld
into
inc
jnp
sub
inc
jns
pop
les
push
daa
lcall
addr16
dec
cmc
mov
xor
popw
mov
push
pop
xorb
push
and
mov
push
sbb
popf
ja
sbb
std
mov
out
pop
repz
in
subl
andb
jecxz
arpl
lods
push
andb
test
mov
and
rclb
pop
mov
bound
jae
pop
inc
xor
sub
jo
push
mov
add
xor
outsl
cmpsl
inc
pop
mov
add
ja
cld
outsb
enter
stos
ljmp
xchg
adc
jle
adc
push
ffree
jnp
xor
movsl
lds
gs
mov
lods
pop
fs
mov
inc
push
stos
loop
add
aam
ljmp
mov
fcoml
xor
cmp
in
jbe
sub
ds
pop
adc
int3
loope
adc
sub
mov
mov
in
mov
pop
call
cs
clc
ret
xor
add
adc
lret
dec
lret
cmp
sbb
fcmovnu
jb
data16
xchg
sub
jle
dec
sbb
call
jae
bound
pop
or
xchg
ret
fldt
fisttps
imul
xor
pop
in
xorb
ljmp
sbb
mov
mov
scas
pushf
add
xor
scas
fs
mov
cld
xchg
fs
ss
arpl
dec
imul
push
cmp
out
daa
aas
out
dec
cmc
orb
cmp
ror
mov
or
mov
in
xor
scas
rolb
ljmp
ficoml
dec
lahf
xlat
adc
xchg
pop
and
mov
mov
inc
das
sbb
inc
xchg
dec
adc
arpl
adc
call
xchg
or
and
pop
xor
int
mov
loopne
addl
push
adc
jne
call
pop
adc
gs
xlat
clc
mov
aad
movl
mov
xchg
flds
mov
shl
pop
add
xchg
stos
push
ljmp
jbe
cmp
xchg
fldcw
mov
sub
lret
leave
dec
mov
adc
mov
lcall
sbbb
mov
push
push
enter
add
out
mov
out
test
xor
cs
xchg
cmp
dec
js
fsubrl
mov
jb
leave
aam
mov
cmp
es
pop
iret
sub
add
std
and
pushl
xor
mov
out
jle
xor
dec
les
loope
fwait
sub
inc
mov
mov
inc
sub
cli
cltd
push
frstor
inc
pusha
std
jg
xchg
sub
cltd
out
mov
xorl
and
or
dec
add
mov
dec
sahf
into
xor
gs
insb
inc
rcl
addr16
int3
sub
outsl
jo
out
test
daa
push
sahf
add
add
sub
mov
dec
rorb
test
adc
push
fdivl
dec
stc
stos
inc
mov
add
cmp
out
adc
or
movsl
mov
or
cmp
out
fdivrs
dec
fstpl
out
lea
push
das
js
sahf
addr16
xchg
fwait
inc
ja
push
or
dec
xor
test
arpl
icebp
push
jbe
inc
rclb
and
sub
fs
dec
fisttpl
add
dec
sbb
pop
pop
push
lcall
jg
mov
hlt
enter
scas
lock
inc
loopne
stc
pop
add
cmc
jge
jb
pop
push
sbb
and
inc
in
and
dec
jg
xor
icebp
cwtl
jmp
push
inc
adcb
and
sbb
cmp
add
cmp
ficoml
stos
push
dec
fdivrs
cs
mov
imul
fsubrs
xchg
dec
inc
or
popa
and
dec
jbe
jo
lock
inc
xorl
insb
cs
cwtl
sahf
fistl
pop
push
rol
dec
sub
jns
sbb
das
cwtl
and
shufps
sub
scas
mov
pop
mov
repz
mov
in
popa
push
jns
xor
inc
push
fs
pop
loop
add
or
shld
sbb
mov
imul
repz
or
fldcw
repz
loopne
mov
sub
push
pop
push
lds
xor
scas
mov
notl
shrl
fstpl
jg
sub
mov
adc
add
push
loopne
jne
lds
ss
xor
js
push
subl
dec
shrb
mov
mov
stc
xor
add
xchg
jae
insb
xchg
test
jno
adc
sbb
pop
mov
mov
dec
push
and
sub
xor
sbb
sbb
mov
fdivrs
add
xchg
mov
orl
pop
idiv
and
sbb
xchg
add
das
pop
xlat
dec
test
test
mov
js
pusha
cmp
cmp
int
push
xor
jne
mov
inc
das
or
xchg
mov
xchg
or
jbe
cmp
jo
enter
fisubrs
test
popa
sbb
outsl
cmp
xchg
push
lret
lret
mov
leave
xchg
outsl
or
and
mov
test
mov
insb
arpl
cs
and
icebp
clc
push
xchg
mov
inc
xchg
pop
movsb
jp
imul
inc
arpl
xchg
lret
pop
xor
iret
scas
mov
fidivrs
xchg
pop
test
jp
push
adc
dec
loopne
insl
inc
dec
mov
xlat
daa
jno
test
xor
cmp
jp
lgs
sub
jo
mov
lods
xchg
sarb
push
cmp
push
cmp
jmp
jbe
pop
nop
xchg
mov
cltd
dec
mov
mov
pop
xor
and
xor
lret
mov
xchg
mov
adc
test
bound
jo
mov
cmp
mov
psubq
je
jne
sbb
shl
imul
add
cwtl
ss
xchg
lods
and
mov
xchg
aas
ljmp
movsl
notl
in
mov
sub
mov
xchg
ror
out
arpl
insb
shlb
cmp
inc
xchg
lods
shl
movsl
arpl
and
bound
roll
pop
or
loop
iret
cmpsb
fsts
and
and
fstl
dec
inc
pop
movsb
in
stos
addb
shrb
jp
adcb
xor
push
ss
movsl
mov
dec
push
je
sub
jo
sub
mov
fisttpl
call
nop
or
popa
or
mov
repz
flds
std
dec
nop
push
jno
cmp
mov
out
out
pop
inc
jne
pop
lcall
ljmp
sahf
sbb
inc
ljmp
hlt
in
imul
cmpsl
daa
inc
pop
adc
aas
pop
pusha
push
jbe
mov
jmp
push
cs
lds
inc
pusha
dec
and
aaa
cmp
mov
or
pop
xchg
sbb
add
sub
push
mov
cmp
adc
pop
jle
ds
popa
adc
ss
jge
test
and
out
mov
pop
cmp
or
fisubrs
std
sahf
add
and
adc
mov
sarl
addr16
mov
push
mov
cltd
or
mov
xor
push
jnp
fstpt
push
mov
mov
mov
push
push
mov
and
hlt
out
out
outsb
adc
ja
or
dec
dec
adc
mov
lea
sti
test
inc
dec
xor
push
push
jmp
or
jp
jb
dec
sbb
xchg
lret
aaa
call
adc
shlb
dec
icebp
cmpsl
aaa
data16
and
and
popf
in
pop
push
or
xor
xchg
xchg
sub
lds
repz
mov
imul
sub
fwait
pop
inc
sbb
add
xor
outsl
insb
out
pop
xor
sub
xchg
hlt
add
cs
jle
scas
xchg
mov
das
cmpsl
xchg
pop
sti
std
ds
jnp
mov
xlat
mov
repz
aad
popa
mov
mov
fs
add
movsl
fdivrs
xchg
dec
data16
je
sti
adc
jmp
aam
int
sub
push
sbb
mov
rorl
sti
mov
lds
mov
insb
aam
dec
cmp
pushf
sbb
lret
xor
adc
test
jb
das
nop
push
test
stos
imul
sbb
or
mov
adc
lock
imul
stos
aam
icebp
inc
push
mov
insb
xchg
sbb
js
xor
sbb
add
lods
mov
dec
dec
add
adc
push
sbb
xor
push
ja
iret
ljmp
xor
xchg
mov
or
mov
push
jne
ret
sub
enter
pop
icebp
cmp
or
xor
lret
sarb
nop
sbb
lcall
mov
push
and
inc
mov
sub
sub
jmp
aad
mov
js
cmovge
fs
in
enter
sbb
cmpl
xlat
pop
xchg
xlat
cmpsb
mov
push
or
push
adc
in
and
sbb
icebp
subb
inc
xor
cltd
idivl
sub
or
mov
out
xchg
pop
aam
addr16
in
push
ss
adc
cs
fstl
fcmovbe
jns
mov
dec
pop
cli
bound
jg
test
ret
jmp
imul
jmp
mov
mov
shlb
jle
xor
mul
mov
inc
adc
imul
adc
pop
dec
cmp
xor
mov
lret
sarl
out
xchg
cwtl
cmc
daa
leave
push
pushf
loope
xor
sub
mov
or
fwait
ret
mov
dec
call
xlat
stos
and
int3
test
scas
ljmp
mov
movsb
mov
outsl
add
mulb
into
ss
js
shll
loopne
jb
adc
shll
mov
loop
std
lahf
push
ficoml
dec
mov
rorb
in
icebp
mov
cmc
aas
pop
xor
ret
inc
mov
or
fwait
daa
cwtl
stos
hlt
mov
mov
pop
dec
jg
in
gs
jecxz
into
pop
inc
loopne
or
scas
push
jge
cmp
nop
jo
outsb
dec
add
cmp
inc
adc
mov
pushf
and
push
add
sbb
or
popa
pop
int
sbb
xor
fsubs
sbb
push
xor
mov
sub
das
ljmp
push
mov
xchg
popa
xor
mov
popf
orps
xlat
loop
jge
dec
test
cwtl
pop
ficoms
mov
jge
push
daa
loope
mov
sarl
adc
test
lods
sub
xchg
fs
jg
ss
dec
cmp
mov
ret
insb
jns
push
adc
jno
dec
jp
rolb
add
cmp
push
stos
insl
push
cmpsl
pop
xchg
adc
sar
xor
test
cmp
mov
xor
xor
and
clc
lock
repnz
cwtl
cwtl
xchg
lods
leave
loope
and
add
xor
lret
enter
lahf
xchg
popf
sarl
sub
and
stc
jns
sub
es
aad
ret
cmp
inc
cld
jl
push
addl
icebp
movsl
lock
add
and
lret
cmpsl
jp
push
jg
cmp
xchg
stc
add
mov
popa
icebp
in
mov
pushf
and
inc
jle
loop
mov
loopne
pop
lret
dec
adc
xchg
inc
mov
inc
lcall
and
push
popf
sub
dec
jmp
ja
push
aad
jl
and
in
je
sbb
mov
push
pop
mov
sub
hlt
mov
fs
mov
cmpsl
fs
push
mov
lcall
mov
and
push
pop
sub
repz
sahf
clc
cwtl
mov
mov
ljmp
mov
cmpsl
sbb
dec
out
outsl
dec
fcmovnu
fdivrs
jbe
and
aad
inc
fsubrs
pop
dec
stos
fadds
enter
mov
out
adc
cmp
fwait
push
out
fidivrl
shl
inc
leave
xchg
pop
icebp
mov
cld
in
xor
xchg
jg
inc
jge
cmpsb
out
addl
and
ja
movsl
sub
gs
sub
xor
inc
jne
insl
mov
std
mov
leave
sbb
mov
mov
sarb
lods
adc
and
sub
jnp
adc
mov
dec
sbb
insb
xor
pop
lret
imul
sbb
inc
lcall
dec
adcb
in
fimull
shll
adc
xor
mov
push
enter
pop
pop
sbb
fdivs
jns
repz
imul
and
imul
xlat
xchg
xor
add
mov
jno
aad
xchg
push
gs
aam
aad
loop
fadds
xchg
rolb
fildll
scas
je
scas
pop
mov
cmpsl
inc
or
decl
jb
mov
xchg
lret
in
inc
xor
movsb
sub
sub
cmp
popa
add
int
mov
cmc
neg
mov
stos
jns
mov
fsubrl
mov
xor
jae
jge
mov
icebp
sti
add
loope
adcl
inc
xchg
lret
lahf
sbb
jns
data16
movsl
stos
popf
in
jae
xchg
inc
loopne
mov
loopne
cwtl
add
adc
xchg
jp
sahf
jb
or
and
imul
mov
cmp
fistl
aam
mov
dec
mov
push
xor
dec
jne
mov
xchg
pop
sbb
cmpsl
rclb
inc
inc
pop
push
fs
gs
lret
rclb
sbb
jl
adc
mov
mov
add
insb
add
outsb
pop
mov
xor
push
cwtl
int
aaa
add
mov
into
negl
jmp
sarl
pop
mov
pop
adc
jo
add
imul
out
je
rclb
jne
pop
mov
out
adc
scas
add
xor
mov
js
add
adc
lea
nop
mov
daa
fidivs
mov
rcrl
gs
or
mov
mov
aaa
lret
cmp
arpl
ret
and
pop
cmpsb
add
jno
mov
das
fldl
dec
mov
ret
bound
test
jo,pt
sub
andl
ficoml
push
and
dec
aam
jmp
pop
addr16
jmp
sub
jg
imul
mov
jle
roll
push
add
cltd
lret
xor
and
inc
icebp
adc
mov
out
mov
lret
sbb
es
in
pushf
and
jge
aad
in
adc
mov
adc
jmp
adc
pop
add
sub
xchg
push
in
push
xchg
pushf
xchg
add
lods
int
cli
pop
aad
or
ljmp
mov
fidivs
add
stos
push
add
jbe
fwait
imul
test
xchg
pop
movsb
mov
mov
mov
rorl
fwait
add
xchg
sub
shl
xchg
jno
mov
mov
push
pop
outsb
dec
pop
cmp
cli
out
adc
aam
mov
adcl
arpl
test
hlt
pop
dec
mov
mov
cmp
xchg
and
stc
mov
adc
xor
sahf
push
test
xchg
or
adc
push
daa
hlt
push
lahf
lret
sti
in
add
jnp
imul
mov
jae
and
loop
incl
and
lods
cs
push
push
lea
lods
outsb
mov
mov
xor
imul
jne
and
pusha
in
sub
jmp
mov
sub
jno
lods
adc
sahf
jns
lock
or
jg
test
sbb
stos
movsb
xchg
leave
out
pcmpgtw
cmp
mov
sbb
mov
or
mov
xchg
jl
mov
fsubl
push
pop
scas
sub
push
xorl
cmp
aas
pop
test
mov
fs
or
js
xchg
aas
decl
ljmp
sub
push
decb
int3
sti
les
cmp
cmpsb
loopne
dec
and
and
nop
int3
push
jno
testb
aad
loopne
mov
int
jge
pop
dec
imul
inc
sub
or
mov
push
lods
mov
stc
in
adc
dec
jmp
imul
fidivl
fisttpll
mov
pop
ret
mov
jbe
fisttps
mov
adcb
push
dec
pop
cmp
and
arpl
xchg
add
aaa
addr16
in
sub
add
push
enter
pop
mov
cmp
imul
loop
pop
outsl
xor
lds
push
shl
lea
xchg
pop
test
leave
arpl
cmp
in
dec
orl
out
aad
jmp
cmp
ret
repz
in
sbb
cmp
push
sub
scas
sti
mov
out
lret
imul
jmp
pop
dec
jnp
sub
ds
movsl
mov
xor
jbe
cs
jnp
sbb
dec
clc
mov
fdivrl
mov
xchg
outsb
repnz
test
inc
stc
movsb
dec
cwtl
test
enter
out
jl
push
loopne
pop
push
xor
and
insb
mov
mov
sbb
mov
dec
test
lahf
pop
mov
rolb
cmp
sti
fildl
loop
cwtl
leave
int3
push
imul
mov
mov
xchg
pop
das
pop
add
nop
mov
adc
insl
push
mov
mov
adc
aas
cmpsl
test
cmp
sbb
mov
adc
dec
and
sub
es
cmp
stc
and
call
sbb
and
cld
arpl
loope
pop
mov
cmpsb
clc
icebp
andb
cmpsl
testl
mov
or
pusha
and
adc
mov
scas
pushf
sbb
pop
dec
scas
sub
bnd
scas
ret
sub
add
gs
cld
pop
cli
mov
and
pop
nop
popa
mov
xchg
sbb
push
xchg
pop
mov
push
pop
std
adc
inc
inc
lret
mov
xchg
vpandn
mov
sub
and
cmp
cmpsl
mov
pop
push
into
scas
push
or
sub
mov
or
insb
into
clc
insl
pop
roll
lret
inc
fildl
inc
jl
xchg
sub
les
out
mov
orl
push
pop
sbb
aad
mov
mov
rorb
mov
push
pop
inc
leave
xor
sbb
mov
shrl
or
jbe
cmp
xchg
cmpsl
add
ds
fistpl
mov
adc
imul
movb
mov
mov
mov
movsl
in
cmp
fiadds
icebp
outsb
sub
dec
push
inc
dec
popf
cmpb
lahf
pop
cmpsl
mov
mov
shl
push
scas
jnp
push
mov
dec
insl
ficoml
ror
jns
lock
test
push
xchg
lret
das
and
insb
