aas
cmp
es
pop
mov
add
jle
mov
push
daa
outsb
loope
sahf
mov
je
sbb
aaa
add
add
shr
das
les
imul
jge
jno
xchg
sub
jns
data16
or
sbb
test
test
mov
xor
mov
pop
xchg
fnstcw
inc
and
lods
jl
or
mov
stos
sahf
sahf
mov
sbb
jns
fwait
imul
scas
int3
xchg
adc
xor
mov
xchg
add
call
ja
jg
adc
push
jp
push
lock
jl
out
in
data16
stc
data16
fsubrp
adc
ror
xlat
mov
mov
adc
push
fnstsw
xor
pop
or
scas
adc
jl
iret
ds
aaa
sub
mov
push
dec
adc
or
inc
cmp
push
xchg
cld
fcompl
inc
dec
and
mov
pop
cmp
push
icebp
mull
pop
xor
jno
fisubl
add
mov
popa
out
sbb
push
push
pop
inc
xor
push
test
pop
cmp
pop
out
sahf
pop
inc
cmp
pusha
sub
test
imul
sub
dec
out
shll
popf
filds
inc
arpl
mov
inc
jge
lods
icebp
clc
mov
inc
gs
mov
std
push
add
test
fstpl
fdivr
daa
sbb
jae
arpl
out
pcmpeqd
pop
push
push
bound
or
xor
stos
cltd
ds
add
lcall
mov
push
dec
inc
mov
jmp
add
mov
xchg
inc
loope
mov
int3
mov
mov
jnp
sub
mov
dec
and
or
and
add
sahf
je
jne
incl
push
xor
adc
mov
mov
push
and
push
pop
dec
pand
mov
scas
sti
lods
arpl
mov
mov
lret
arpl
or
ja
cmp
push
pop
mov
ljmp
cmp
ret
pop
stos
ret
int
test
subl
aas
mov
adc
pop
shr
push
xchg
add
in
lcall
call
mov
cmp
into
icebp
loopne
mov
cld
clc
nop
lcall
or
aas
out
std
xchg
cmp
pcmpgtb
aam
mov
jmp
inc
insl
adc
pop
loopne
ficompl
shlb
pop
icebp
mov
jae
and
sub
lret
mov
shlb
outsl
pop
adc
cmpsl
loopne
or
cmp
leave
mov
add
int
mov
cmpsl
push
sbb
pop
add
push
leave
cmp
negb
int3
mov
pop
verw
jp
inc
pop
hlt
jno
or
add
mov
imul
xchg
push
mov
rcrl
jo
lcall
scas
fwait
lahf
pop
inc
mov
pusha
xor
js
movsl
test
xor
scas
cmc
mov
sarb
cmp
es
aam
sub
cmpsb
jne
mov
or
js
mov
inc
andb
dec
cmp
mov
arpl
sbb
inc
loope
sbb
fadd
xor
paddusb
sbb
shll
pop
rcll
jp
mov
mov
cmp
pop
rorl
xor
push
or
lret
clc
ja
iret
jns
cmp
push
push
sbb
sbb
push
push
adc
hlt
data16
ficomps
jge
popa
jb
hlt
in
stos
or
or
or
jb
sub
bound
shlb
sahf
push
popa
cmp
sti
dec
sbb
scas
aad
push
cmp
jnp
fstl
mov
test
stos
and
je
sbb
inc
dec
pop
cwtl
mov
dec
xor
or
pop
mov
fildll
mulb
lret
subb
popl
loope
dec
adc
in
dec
lret
in
sbb
loopne
imul
addl
dec
dec
mov
popf
sti
icebp
push
scas
inc
inc
incb
out
nop
mov
loopne
sub
xchg
cwtl
fimuls
pop
adc
dec
dec
mov
and
arpl
add
xchg
or
pop
fistpl
sbb
repnz
test
ret
sbb
mov
imul
xchg
dec
pop
or
xor
sbb
fdivl
push
cmp
lods
cli
sub
pop
rolb
mov
mov
mov
mov
cmp
outsl
loopne
fnstsw
rolb
jg
stos
rclb
xor
fimull
push
cmpsb
inc
pop
adc
inc
lret
add
das
jns
fucomip
lcall
sub
push
out
es
push
mov
imul
inc
xchg
lea
mov
mov
mov
insl
jo
orl
dec
mov
mov
mov
xchg
add
ret
in
ja
lods
das
push
aas
shrb
dec
sub
fstl
mov
ljmp
add
rol
fisttps
fisubl
or
jo
and
dec
xor
pop
adc
test
mov
fnstsw
imul
sub
or
shl
mov
add
inc
imulb
test
test
mov
push
divb
pop
lahf
ljmp
mov
outsb
cmpsb
jnp
arpl
mov
mov
clc
addr16
lea
cli
pop
mov
pop
jbe
xchg
xchg
pop
dec
enter
pushf
rolb
xlat
aas
loopne
fwait
hlt
sub
mov
imul
movsb
sub
in
inc
xchg
add
in
pop
pushl
adc
fbstp
imul
push
movb
aaa
das
std
pop
incb
popf
jle
jecxz
gs
repz
xchg
pop
stc
fs
and
sub
ret
lods
mov
nop
jo
les
adc
add
mov
add
cmp
hlt
mov
aaa
and
xor
movsl
cmp
jl
xchg
pop
sbb
ljmp
adc
jo
xchg
xor
mov
jb
mov
adc
push
pop
jmp
inc
pop
mov
jne
or
pop
pop
scas
or
in
out
push
es
xor
adc
or
rcl
jb
fstpl
imul
xchg
cmpsl
scas
xchg
adcb
mov
icebp
xorb
sti
sub
sub
and
cmc
inc
mov
xor
cmc
xchg
push
xor
adc
in
jo
jg
fidivrl
fisttps
and
stos
inc
je
fs
ds
mov
pop
aam
add
fcmovnu
in
cmp
xchg
shr
frstor
or
jecxz
pop
sub
fstp
inc
xor
inc
dec
cmp
cltd
push
pusha
int
inc
repz
lds
pop
js
sub
je
xchg
and
xchg
adc
mov
inc
lcall
shl
jl
mov
cmp
dec
mov
or
add
mov
jns
fdivrs
adc
mov
cmpsl
jns
push
frstor
fcmovnbe
xchg
dec
pop
mov
repnz
fnstcw
push
mov
cmp
ret
jb
int
add
sbb
cmp
mov
push
iret
test
sbb
lods
adc
test
ficoms
ret
dec
loop
jb
inc
mov
xchg
xor
mov
scas
mov
jae
hlt
cmpsl
jmp
jl
xor
cmp
dec
fidivl
mov
shlb
add
out
sbb
mov
pop
adc
adc
es
aaa
sarb
test
sbb
iret
and
aad
push
sub
mov
sbb
or
cmc
dec
pop
pop
mov
cmp
and
fdecstp
jns
pop
or
fs
orb
add
add
inc
cmp
push
jns
outsb
pop
call
jge
inc
pop
arpl
jp
dec
rcr
into
in
push
jecxz
imulb
sbb
push
mov
jns
fdivrl
dec
cmp
jno
sbb
out
cmc
inc
out
pushf
clc
sbb
mov
scas
adc
push
lcall
scas
jmp
clc
add
sub
ret
or
aam
fiaddl
sahf
mov
push
movsb
daa
add
inc
aas
pop
cmc
or
xor
pusha
imul
fmuls
cmpsl
ja
mov
loopne
sbb
mov
xor
decb
and
ficoms
mov
or
adc
xor
int
setb
or
ds
sub
sub
gs
popa
pop
cmp
mov
mov
push
dec
pop
mov
dec
xchg
je
cwtl
or
xchg
pop
lods
loopne
mov
test
add
and
dec
push
jne
xor
cmp
mov
cs
in
push
roll
inc
xor
pop
pushf
rcrb
sbb
lahf
inc
sbb
pushf
andb
mov
dec
mov
repnz
fisttpll
shlb
lahf
cmc
cmp
std
fs
cmpsl
out
pop
mov
sbbl
lea
dec
lods
adc
add
inc
mov
cmp
jge
push
mov
cmp
cmpsb
cltd
inc
fdivs
rcl
push
arpl
insl
xlat
movsl
in
jmp
enter
or
hlt
mov
aas
cs
sbb
lret
add
arpl
or
mov
sbb
sti
xor
das
sub
pushf
repnz
inc
inc
jnp
imull
inc
inc
cld
loope
and
and
or
sub
push
inc
fbstp
inc
into
in
mull
jno
aam
dec
sti
mov
dec
je
int3
xchg
repnz
std
mov
mov
lea
cli
mov
out
inc
aam
and
outsl
stos
cmc
mov
and
hlt
les
lret
ds
outsb
nop
scas
mov
mull
jge
cmp
clc
out
mov
cwtl
repnz
shrl
xchg
mov
jae
sub
fcompl
jne
loope
int
or
xchg
orl
repnz
test
pop
or
outsb
ljmp
popf
mov
dec
fmuls
jmp
ljmp
add
jne
or
and
mov
sub
push
add
cmp
cmp
nop
enter
dec
and
sarl
sub
sbb
push
pop
lret
push
xchg
ret
add
jecxz
inc
sbb
addr16
ret
lahf
in
gs
mov
out
adc
jbe
out
imul
mov
inc
mov
jns
mov
loop
bound
mov
push
inc
mov
xorb
ret
mov
popl
movsl
out
jl
dec
lods
dec
sbb
fst
mov
repnz
xchg
push
decb
pop
sub
lods
adc
or
jge
stc
ficompl
and
jbe
xchg
xlat
mov
aam
jne
shll
mov
mov
out
mov
ja
sub
iret
sbb
cmp
testb
fdivl
enter
outsl
je
lds
test
in
aam
dec
cmp
jae
shlb
in
sub
jb
es
lret
lea
adc
push
movsb
ja
jecxz
push
sbb
imul
jne
push
and
outsb
mov
rorl
es
mov
ffreep
adc
insb
fldl
outsl
mov
mov
dec
insb
push
sbb
cmc
xchg
ficoms
inc
cmp
nop
aad
pop
inc
and
pop
xlat
cld
push
fucomp
dec
and
inc
xor
mov
push
inc
mov
stos
mov
mov
xchg
and
stc
jecxz
jns
dec
jne
jne
fs
hlt
cmp
fldl2t
and
add
cld
out
outsb
cmp
mov
jmp
pop
out
mov
repnz
mov
dec
push
ds
outsl
cmp
pop
inc
jbe
cmpb
adc
jnp
dec
or
mov
push
fnstsw
rclb
icebp
nop
push
stos
mov
xchg
shrl
pop
and
push
ret
push
out
hlt
loope
mov
inc
repz
mov
jne
inc
inc
mov
push
or
sbb
mov
fistps
mov
or
mov
jo
xchg
dec
test
bound
rclb
mov
mov
notl
pop
cs
and
inc
dec
push
inc
mov
sub
sbb
stos
or
sbb
mov
sub
mov
mov
aad
add
frstor
imul
mov
scas
xchg
dec
popa
pop
mov
insb
ret
lds
mov
inc
push
stc
xchg
pusha
and
mov
in
or
mov
sub
aas
nop
add
arpl
sbb
outsl
test
pop
xor
and
lods
pushf
jnp
and
lods
jl
icebp
and
loope
inc
lret
pop
enter
add
inc
sub
pop
push
cmp
mov
pmaxsw
push
jmp
ljmp
and
js
dec
sti
and
jle
cmp
mov
jge
xor
inc
mov
pushfw
mov
pushf
sbb
push
mov
sbb
jnp
xor
ret
in
fbld
rclb
les
pop
pushf
shrb
test
or
push
fwait
adc
in
or
xchg
pop
rcrl
sub
lcall
into
or
test
mov
jne
popf
aaa
jnp
in
and
lock
in
adc
push
push
imul
mov
adc
push
pop
daa
jge
push
loop
add
shl
fimuls
adc
arpl
xchg
jno
js
lret
cmp
or
and
pushf
mov
adc
ds
in
sbb
out
xchg
clc
push
test
dec
inc
aas
adc
push
fiaddl
sti
lcall
ja
and
push
and
jge
outsl
addr16
xchg
pop
je
fdivrl
dec
subb
push
pop
push
mov
call
outsb
pop
dec
push
inc
jge
sbb
bound
in
sahf
rorb
ss
inc
and
ja
dec
xchg
dec
mov
mov
int
mov
add
or
jae
shll
pop
stos
adc
stos
bound
xchg
movsb
mov
out
int3
nop
jmp
les
adc
jb
outsb
pop
lahf
lock
lret
mull
pusha
sbb
sarb
hlt
and
push
mov
ficoml
ljmp
cmpsb
mov
aas
rclb
cmp
es
aad
jnp
out
into
jno
adc
mov
aad
cmpsl
movsl
imul
xor
insl
dec
stos
adc
and
filds
imul
in
imull
mov
or
jbe
lcall
sti
pop
repnz
repz
imul
or
push
repnz
pop
xor
test
cli
mov
cld
shl
popf
stc
mov
out
mov
mov
roll
cmpsb
ror
out
xchg
js
test
push
cmovae
sub
int
fadd
subb
cwtl
pop
incl
lret
data16
dec
xor
fimull
pop
mov
shlb
cmpb
mov
bound
jmp
mov
push
inc
sub
mov
rcr
rcrl
lods
stc
int3
enter
xchg
fsubr
stos
and
int
jne
shrl
pop
and
lret
mov
nop
mov
pusha
scas
pop
daa
enter
fsubrs
shlb
inc
scas
cmpsl
ja
adc
sarb
cmp
xchg
loope
repnz
jl
jle
je
push
and
jg
jp
clc
dec
les
jnp
pop
insb
xchg
int3
mov
push
sbb
push
sub
push
ds
push
lds
pop
push
mov
ja
mov
sub
mov
jnp
mov
and
leave
sub
incl
fldcw
push
int
scas
pop
xor
mov
lret
pop
mov
pushw
orl
mov
jle
mov
sahf
sbb
adc
aas
vpmulhuw
ja
sti
ljmp
pop
call
mov
sbb
aaa
jns
frstor
into
leave
mov
dec
pop
mov
fists
cmpsb
mov
pop
or
pop
adcl
imul
ja
sbb
pop
mov
xor
loope
pop
cmp
push
xlat
push
and
jnp
ss
aam
test
sti
pop
fs
push
mov
sub
in
gs
aas
call
lods
pop
mov
cmp
fs
rolb
movzbl
dec
sub
lock
orl
or
mov
stos
jne
mov
pop
cmpsl
jb
out
int
popa
add
std
ret
test
pushf
add
orb
out
cwtl
cwtl
jp
out
in
repz
arpl
pop
jle
mov
fwait
mov
loop
cld
outsl
data16
or
mov
rolb
and
aad
xchg
ljmp
not
ror
cmp
lcall
mov
mov
rorl
sti
mov
sbb
adc
cmpsb
sub
mov
cltd
arpl
xchg
sub
push
adc
add
and
or
jno
pop
out
push
dec
add
sbb
aaa
rorb
mov
jo
mov
clc
dec
or
inc
push
dec
insl
cmp
jno
xchg
cld
xor
testl
rcrl
enter
call
lock
cli
mov
pop
int3
cmp
dec
inc
test
js
aas
mov
xchg
adc
cmpsb
dec
shlb
adc
pop
fdivl
popa
jmp
jo
jmp
les
shlb
movsb
dec
adc
cmpsl
or
das
pop
into
dec
xlat
in
dec
cmp
xchg
in
cwtl
aam
fwait
addr16
dec
pop
rcl
pop
push
int
fistl
inc
pop
int3
movb
mov
in
mov
cmpsl
sub
inc
and
ds
jecxz
inc
adc
daa
addr16
push
fiaddl
xchg
rolb
sub
cli
sbb
data16
repnz
add
out
negl
icebp
repz
mov
dec
hlt
mov
das
clc
leave
push
cmp
or
push
data16
push
adc
mov
cld
in
inc
jp
pop
mov
jecxz
scas
push
mov
dec
test
cmp
mov
sahf
das
aad
and
xchg
push
xor
lods
add
xor
add
stos
imul
pop
ret
cmpb
jle
imul
repnz
jmp
adc
or
jmp
int3
push
and
add
rol
add
cli
test
movsl
lret
insb
mov
ljmp
add
bound
das
out
jno
mov
dec
repnz
lock
jnp
adc
mov
jmp
enter
inc
adc
add
dec
sbb
inc
dec
shl
add
test
sub
jns
pusha
mov
pop
mov
outsb
jge
call
ja
pop
pop
lret
jno
cli
fdivrl
repz
mov
and
xor
xor
lret
fwait
push
out
jge
in
popa
gs
sub
in
pop
cld
cmp
jno
cmp
cmpsb
inc
jle
jl
mov
sub
dec
nop
fldenv
mov
into
mov
cmpsl
sbb
stos
pusha
push
push
lahf
cltd
sbb
mov
pop
cld
cwtl
cmp
loope
add
lods
or
xchg
aad
negb
and
inc
bound
or
dec
in
dec
add
inc
in
aas
inc
repz
repz
mov
rcrb
addr16
insb
fucomi
push
enter
push
pop
rorb
fimull
xchg
sub
adc
sbb
pop
adc
inc
mov
repz
add
lds
jae
push
adc
push
outsl
pfcmpge
sub
popf
push
outsb
testl
push
jae
ja
arpl
fbld
xor
jle
push
out
xlat
leave
into
insb
pop
xchg
imul
mov
add
or
xchg
mov
inc
xchg
xor
dec
into
xorb
aam
xchg
dec
mov
pslld
mov
outsl
ret
cmpsl
fsubl
out
scas
jae
cs
mov
fstps
xchg
fcmovbe
cli
incb
or
repz
pop
scas
adcl
cmc
out
ljmp
jle
jl
pop
daa
outsb
in
fimuls
fsubrl
sbb
loopne
lods
ret
movsl
addr16
aad
xor
in
shlb
push
outsb
jae
shr
and
jmp
mov
popa
jecxz
cmpsb
mov
imul
jno
orb
cltd
cmpsb
sub
ficomps
aam
clc
in
add
cmp
push
fstpt
test
fidivrl
push
xchg
fnstcw
mov
lds
lret
xchg
pop
xor
adc
mov
and
scas
pop
inc
stos
pop
cmpsl
pop
mov
xchg
pop
mov
pop
xor
test
or
dec
std
cmc
imul
aas
std
scas
test
dec
movsl
cmp
cmpsb
xchg
inc
dec
pop
cli
mov
shl
ret
cs
test
mov
push
cmp
dec
cld
fstp
adc
mov
cmp
mov
add
data16
adc
sbb
insb
push
jge
pop
mov
inc
push
aam
and
jns
pop
out
mov
push
sub
jnp
or
mov
mov
insl
add
sbb
fcomip
pop
jno
xor
loopne
shl
int3
pop
es
test
scas
dec
mov
rcll
imul
fwait
data16
or
mov
add
cltd
push
xchg
or
xchg
jecxz
jae
out
cmp
icebp
hlt
pop
and
jno
das
popa
vscatterdpd
repnz
pop
mov
mov
stos
loop
out
jae
loope
out
negl
imul
dec
cli
cmpsl
int
lcall
mov
ljmp
sbb
outsb
or
jb
sbb
cmp
and
addl
dec
lcall
sahf
xor
cmc
jmp
shl
jmp
mov
dec
jmp
fidivs
out
loopne
divb
xor
aam
jmp
pusha
mov
aam
or
popf
call
mov
fcompl
pushl
pop
mov
push
add
mov
pusha
and
pop
notl
imul
sbb
testb
popf
pop
mov
jbe
jl
mov
jg
popf
pop
cmc
push
jb
fs
dec
sahf
lods
sbb
popf
insl
pushf
sub
push
fildll
bound
push
ret
sub
rolb
add
lock
hlt
filds
dec
and
and
dec
pop
dec
mov
mov
mov
jecxz
push
movsl
mov
icebp
fs
and
cmp
out
pushf
mov
mov
add
in
xchg
cld
rclb
cmc
pop
popa
ds
ret
stos
inc
adc
repnz
es
jge,pn
outsl
lods
xchg
jp
enter
fcomp
mov
std
push
dec
add
ljmp
xor
sarl
jge
sarb
in
inc
mov
xchg
cmpsl
jecxz
pop
pop
adc
cmp
jle
push
mov
inc
lret
sbb
fs
cs
imul
int
cli
jge
cmc
add
xor
shl
mov
sbb
mov
cli
mov
aam
or
mov
lcall
fstps
mov
pop
insl
xor
jno
mov
jge
cltd
rol
mov
mov
pop
mov
je
cmp
jns
pop
iret
pop
lret
cltd
push
sti
ret
inc
jecxz
in
push
pushl
hlt
mov
xor
inc
jmp
mov
lods
or
inc
jp
dec
movsl
in
aam
incl
xchg
cmp
sarb
xchg
sub
xor
xchg
adc
mov
in
out
popa
je
or
hlt
jmp
in
xchg
icebp
cld
into
cli
cld
mov
push
out
pop
inc
fucom
mov
or
and
cmp
pop
mov
push
loope
push
sub
lods
dec
divl
and
and
mov
jp
sub
call
addb
bound
sbb
in
addr16
jae
jbe
les
dec
arpl
jle
scas
dec
mov
xchg
fiadds
dec
push
jb
mov
pop
xchg
mov
arpl
lds
push
pop
vsqrtpd
sahf
aas
rcrl
jmp
inc
pop
rorl
ds
aas
and
lea
xchg
mov
lock
inc
jno
and
cli
cmp
cmp
xorl
xchg
clc
push
pop
xlat
call
or
sbbl
test
inc
jle
leave
ds
sub
test
pop
repz
aam
fs
scas
add
scas
mov
lahf
daa
xor
push
mov
mov
jecxz
xor
ret
push
lods
sbb
stos
and
mov
mov
sbb
inc
pop
mov
mov
adc
outsl
adc
sahf
je
sbb
stc
nop/reserved
mov
iret
mov
lahf
jl
fwait
gs
gs
or
jns
fistps
movsl
movsl
mov
mov
in
inc
xchg
mov
fildll
repnz
inc
iret
xor
ret
cmp
push
lcall
orb
repnz
pop
xchg
fwait
imul
mov
sub
add
add
inc
mov
test
pop
push
sar
iret
cmp
mov
jne
out
inc
cmp
add
insl
and
sbb
mov
add
inc
mov
repnz
sahf
mov
adc
push
aas
push
call
or
aaa
xor
sub
adc
adc
mov
in
lea
jg
clc
push
mov
mov
xor
pusha
mov
ds
adc
ret
sub
pop
sub
or
adc
into
pop
insb
jmp
in
add
inc
mov
push
ja
pop
test
push
fucomi
stos
jl
push
out
ret
jg
fxch
inc
pop
loopne
mov
push
orl
push
sbb
out
stos
inc
pop
xor
das
xchg
repz
rolb
dec
push
jle
mov
repnz
js
jge
lahf
mov
out
int3
movsb
and
fcompl
jmp
cwtl
xchg
sbb
iret
aam
add
jo
mov
lcall
loopne
xchg
mov
addr16
fisubs
jle
test
je
mov
ret
jge
in
xor
test
inc
jae
xchg
adc
out
pop
inc
lock
mov
or
jg
xchg
sub
nop
mov
add
sbb
mov
adc
mov
and
ja
xchg
adc
jnp
adc
hlt
ja
dec
mov
addr16
jecxz
inc
clc
popf
mov
mov
jne
hlt
inc
jno
sbb
sub
add
test
mov
cmpsl
mov
pop
add
and
subl
inc
mov
add
clc
inc
jne
stos
adc
or
nop
dec
pop
xchg
pmulhw
adcl
jns
std
stos
jg
out
xchg
pop
enter
cmp
jne
push
push
les
jecxz
movsb
insb
hlt
dec
and
xorb
bound
arpl
mov
mov
pop
dec
pop
add
fdivrp
fucomp
addr16
out
in
pop
movsl
adc
sbb
add
xchg
repnz
mov
lock
into
mov
cld
jnp
xor
jge
std
rorb
xor
cwtl
sub
and
xchg
scas
lods
mov
movsl
or
mov
sbb
imul
xchg
jnp
ret
mov
mov
mov
ret
jl
addr16
adc
lods
add
inc
push
test
mov
ret
pop
insb
fs
shr
fs
xchg
cmp
push
dec
pop
iret
sub
pop
aaa
pop
mov
dec
mov
js
cmc
sbb
hlt
fsubl
xchg
cs
inc
inc
ss
jmp
ret
xchg
dec
mov
jbe
xchg
js
jg
xor
jecxz
negl
aas
fsubrl
lods
mov
arpl
mov
rcrl
inc
loopne
in
jle
add
sbb
aam
loope
adc
aad
cwtl
xlat
lret
in
mov
dec
movsb
mov
mov
inc
xchg
dec
pop
es
aaa
daa
lcall
xchg
xchg
sbb
xor
insb
push
push
push
ja
inc
ljmp
sub
movsl
inc
shrb
push
cmp
pop
cwtl
xlat
ja
ja,pn
lds
into
lods
or
add
cmp
js
jle
sti
pop
sub
jbe
into
adc
insb
inc
aaa
cmpsb
dec
adc
lds
pop
mov
test
jne
aas
pop
cmpsl
mov
xor
test
push
xorl
and
jmp
inc
cmc
movsb
fwait
mov
in
mov
mov
addr16
cmp
sbb
push
xorb
cwtl
std
adc
test
lret
push
lahf
int3
xchg
stc
sub
adcb
xor
or
fnsave
mov
test
sub
imul
cmp
xchg
xlat
and
int3
ljmp
inc
in
mov
ret
pop
cmp
pop
push
add
mov
ror
jge
xor
jg
sub
jmp
call
or
pushl
push
jmp
in
add
mov
or
mov
pusha
adc
cs
adc
arpl
cli
jmp
jns
xchg
out
imul
cmpb
inc
clc
fwait
xchg
pop
dec
and
dec
xor
stos
and
outsb
insl
mov
repnz
jae
rcr
mov
xor
popf
dec
nop
icebp
std
lea
push
je
sub
ret
gs
aas
cmpsb
xor
mov
push
mov
cld
test
cmp
cmp
mov
insb
inc
out
mov
pushaw
pop
cmp
lods
sub
sarb
fbstp
sub
adc
mov
fidivs
cmp
bound
ss
sbb
fwait
push
mov
in
int
test
sub
pop
xchg
mov
xchg
scas
pushf
or
and
mov
sub
outsb
popa
push
mov
add
loope
je
push
pop
jmp
mov
inc
mov
mov
in
outsb
xchg
adc
jno
das
and
jmp
hlt
dec
sub
arpl
orl
call
adc
sub
adc
mov
loope
or
mov
and
incb
mov
jp
mov
cmp
push
into
mov
sbb
fisubs
bnd
inc
rclb
mov
mov
pop
sbb
or
divl
pushl
mov
sbb
int
cmp
sub
cmp
sub
sub
and
shl
sbb
xchg
xchg
rcll
pop
loope
imul
int3
scas
cmp
test
shrl
int
cmp
nop
cmp
fs
ret
cmpsl
das
cmp
fstpt
mov
clc
adc
repz
add
adc
and
pop
jbe
movsl
push
adc
addl
shll
lods
or
pop
movsl
mov
push
js
mov
les
cmpb
mov
sub
push
xchg
in
mov
mov
call
mov
add
and
cmc
or
xor
xchg
mov
hlt
sbb
lods
into
pop
adc
push
sub
xchg
push
mov
lcall
sbb
push
push
dec
rorb
sub
gs
jl
std
pop
enter
in
jg
dec
gs
xlat
gs
mov
in
das
xchg
iret
fidivl
fsubrl
das
aas
lcall
popa
aaa
insl
mov
xor
sub
xchg
sbb
and
imul
iret
push
lods
cltd
mov
pop
pop
dec
mov
test
jge
push
mov
or
test
rorl
cmp
xchg
and
pop
dec
cwtl
mov
aam
outsb
sub
push
fwait
adc
dec
popa
repnz
fmul
sbb
push
test
xchg
adc
addl
ja
insl
lret
pusha
cmpsl
jne
dec
lret
mov
cmc
mov
mov
xor
cmp
out
and
out
in
inc
xchg
insl
sbb
xorl
mov
xchg
rcrb
lods
fstl
icebp
addl
jns
pusha
mov
jle
in
lods
in
jb
negl
fnsetpm(287
push
jecxz
xorb
mov
ret
sbb
add
add
movsb
push
addr16
add
fmuls
in
leave
dec
and
cmp
sarl
cmp
adc
adc
and
cmp
lahf
jp
add
pop
call
jg
mov
aas
fs
mov
push
and
loopne
scas
pop
repnz
sahf
sub
dec
xchg
cmp
lds
popa
das
rolb
or
sub
cmpsl
sbb
xchg
mov
sbb
add
or
mov
hlt
cmp
fdivs
xchg
in
mov
loope
xchg
add
repnz
jg
xchg
nop
loope
push
into
inc
pop
cmp
cltd
lds
xlat
subl
flds
jl
push
cli
xchg
dec
sub
pop
inc
pop
cs
stc
mov
xchg
in
cmpsl
data16
ret
and
sub
fistl
cld
xchg
add
xor
roll
lds
out
xor
add
negl
dec
jmp
adc
loopne
cs
jae
or
push
cmc
jno
mov
pop
xchg
push
mov
or
push
jne
dec
sarb
iret
sbb
dec
divb
imul
adc
push
testb
data16
testl
dec
push
faddl
push
pop
xchg
fcmovu
push
mov
orl
xchg
mov
imul
pushf
fdivs
sbb
cwtl
int3
and
pushl
lahf
xchg
icebp
sbb
sahf
mov
or
cltd
or
pop
adc
sbb
lcall
inc
pusha
into
roll
enter
test
in
pop
or
mov
fisubl
and
insl
fmul
adc
sahf
call
daa
lret
push
fadd
lahf
pop
andl
push
add
mov
sub
out
cmc
push
mov
pop
xchg
xor
lret
pop
cmc
es
xchg
xchg
jo
hlt
adc
lcall
jne
sbb
mov
lock
sti
mov
testl
cmc
mov
insb
cmc
cmp
fwait
and
or
mov
gs
add
cld
scas
pop
imul
push
mov
jge
sub
arpl
dec
mov
cwtl
test
mov
into
sbb
or
mov
xchg
cmp
xor
jo
pop
jne
sub
xchg
pop
aaa
sbb
sarl
pop
mov
in
and
cs
out
rcrl
fisubl
loop
aad
jp
sahf
push
dec
cli
out
test
fs
loopne
mov
jle
push
fcomp
mov
jnp
popa
fidivs
lods
daa
pushf
data16
jb
in
xchg
daa
xor
and
xor
pop
aaa
gs
sub
push
add
das
cmp
mov
pusha
cmpsl
lret
xchg
mov
shrl
addr16
lock
rcrw
jecxz
xchg
sub
jl
fstpt
xor
out
mov
mov
lea
das
mov
pop
call
jl
stos
or
cmpsb
sahf
mov
mov
jecxz
out
out
mov
mov
fidivrl
push
push
pop
outsb
xchg
and
shlb
es
std
in
fwait
das
imul
test
or
aaa
testl
mov
test
xchg
mov
and
loope
mov
and
mov
fstps
cwtl
fucomi
jno
adc
fwait
push
inc
lea
aas
jae
shll
xchg
rcpps
add
push
xor
je
adc
mov
dec
pushf
in
cli
xor
sbb
dec
mov
mov
fdivr
pop
fstpl
jns
pop
shll
inc
lcall
or
jmp
jno
push
mov
fs
adc
adc
movsl
cmp
dec
outsb
push
insb
mov
inc
jne
inc
scas
out
cwtl
pop
movsl
mov
inc
mov
leave
ljmp
push
pop
dec
scas
and
adc
adc
cmp
sahf
mov
jne
pusha
xchg
insl
imul
xchg
daa
sti
xor
add
push
vmovsd
adc
push
aad
push
inc
xchg
add
lock
sbb
cmpsl
mov
std
fistpll
jp
fldl
ret
pop
push
mov
gs
aam
ds
loope
jnp
dec
sbb
cltd
lea
pop
inc
mov
mov
sub
add
mov
cmp
scas
xor
gs
mov
sbb
adc
loop
lcall
rorb
ret
xchg
cmp
sub
and
clc
inc
or
lds
mov
lods
hlt
imull
inc
jl
lea
je
lock
mov
pop
mov
and
into
lahf
enter
dec
xchg
adc
jl
pop
repnz
push
adc
pop
cltd
inc
xchg
xor
xor
lret
cmp
dec
or
pop
and
or
aad
mov
jg
into
mov
mov
imul
out
adc
sbb
jecxz
and
add
sub
in
dec
jo
lods
je
sub
adc
mov
sbb
ljmp
or
aam
negl
xor
mov
xchg
jo
subb
xor
outsb
xor
popa
and
and
stos
jl
lcall
add
push
xchg
xlat
push
das
and
aad
cmp
sub
lahf
aam
test
push
or
loope
add
movsb
cmp
pop
jno
push
push
int
stc
add
pop
sub
jg
push
ss
rcrb
jmp
cli
pop
mov
and
jg
mov
fwait
mov
mov
int3
dec
nop
cmp
push
xor
cld
xchg
push
loope
adc
xchg
or
popf
fcmovne
in
lea
loop
leave
ljmp
jecxz
xchg
push
ljmp
je
stc
lods
into
sbb
fs
or
mov
xchg
in
mov
daa
ljmp
xchg
mov
enter
xchg
fdivrs
xchg
rcll
jl
lret
lods
in
arpl
aas
js
dec
dec
jmp
cmp
ljmp
fcoml
out
inc
lods
sub
adc
mov
jns
adc
xchg
jo
and
or
or
inc
jne
movb
inc
sub
in
test
ret
iret
outsb
inc
mov
test
adc
mov
and
lods
decl
fwait
xchg
aas
imul
pop
xor
shll
lods
adc
cmp
push
fsubr
push
mov
mov
lcall
or
fcmovne
and
mov
jge
push
into
gs
cmc
gs
mov
sub
ljmp
ret
mov
pop
sarb
push
aad
lea
cmp
ljmp
mov
or
xchg
daa
nop
into
faddl
jbe
sub
mov
mov
and
pop
jp
out
sub
adc
neg
add
mov
pop
ja
cmpsb
imul
jl
jmp
ret
xchg
daa
lcall
test
and
fisttpl
jne
cmpl
jb
sub
dec
jo
mov
in
call
inc
popf
push
jo
cld
jl
or
and
pop
data16
icebp
pusha
stos
insl
xor
cld
dec
in
jb
aas
das
aad
mov
sub
sub
pop
sbb
xchg
mov
scas
call
sbb
notl
add
lcall
adc
push
out
xor
cmp
xchg
push
mov
sub
lock
push
add
stc
jmp
sub
push
out
inc
fstl
lret
mov
pop
stos
in
negb
in
test
frstor
xor
les
hlt
jb
inc
adc
lcall
inc
lahf
mov
aad
jnp
cltd
nopl
mov
lock
pop
loopne
mov
push
cmp
lcall
aad
fs
or
inc
ret
lret
je
jns
sahf
cmp
out
ret
inc
in
adc
in
int
or
lods
or
test
fmull
fsubr
into
jnp
cmp
cwtl
cmp
leave
repnz
outsb
lock
and
mov
pop
outsl
scas
popf
hlt
leave
aad
in
pop
xchg
jl
xchg
shll
cwtl
sub
in
into
int
lock
sbb
push
xor
cmpsb
negb
out
repz
xorl
out
jbe
aam
jg
cmp
icebp
pushl
jmp
out
int
mov
fildll
lods
mov
aam
ror
lock
sti
fsts
dec
fdivr
xorl
jl
leave
adc
jmp
sub
adc
and
cwtl
sbb
xor
test
push
addr16
mov
add
mov
notb
stos
pop
inc
push
mov
int
mov
cmp
arpl
std
jmp
xchg
dec
dec
out
mov
inc
jo
mov
mov
in
pushf
outsb
les
mov
pop
out
mov
sbb
mov
cli
rorl
int
lods
lret
or
fldcw
outsb
fst
adc
sti
aad
jo
mov
popa
aam
daa
jmp
pop
inc
gs
xor
movsl
cltd
push
add
ljmp
sub
rclb
add
xchg
xlat
dec
pop
sbb
mov
fists
push
shl
imul
inc
sbb
icebp
fiadds
fldl2e
ret
pop
cld
sahf
mov
fstpt
fisttps
cmp
inc
sub
lds
ret
jns
gs
xchg
sub
push
lahf
bound
xor
cmovp
jp
arpl
and
jne
jo
in
cmp
mov
into
mov
pop
lods
mov
push
jbe
or
popa
test
shll
lea
xchg
std
fmull
repnz
stc
mov
jp
xchg
dec
adc
push
lcall
cltd
push
iret
xor
cli
fcmovbe
pop
nop
sub
xor
pop
stos
sbb
test
mov
or
repnz
dec
mov
mov
xor
lods
sbb
push
daa
jnp
mov
and
test
bound
add
mov
mov
mov
in
jnp
movsb
push
aad
addr16
xchg
cmp
fs
mov
in
lds
cmp
mov
and
ss
fxch
fidivl
mov
loopne
ret
cmp
lahf
jae
mov
stc
enter
or
xor
cmp
lods
outsl
sbb
es
pop
lods
xchg
ja
ds
add
mov
pop
rol
adc
xchg
or
add
push
ja
shrb
add
in
add
push
pslld
lea
call
jo
and
cmc
sub
int
jns
push
shrl
adc
sub
mov
push
sbb
fnstcw
add
inc
or
dec
stos
out
int3
sbb
xchg
xchg
add
pop
mov
or
mov
mov
lea
loopne
int
cltd
pop
imul
xlat
sub
shlb
mov
in
push
ror
test
iret
in
pop
aas
aaa
call
jg
bound
push
jecxz
gs
sub
aaa
in
loope
stos
pop
or
ficoms
jmp
nop
aam
ss
push
push
sbb
fistpll
xor
or
push
and
or
jmp
xor
cmp
jle
test
add
loopne
sub
cmc
and
pop
sub
je
cwtl
push
lods
mov
iret
jg
xchg
in
imul
dec
mov
jb
xor
xchg
aam
mov
shll
aaa
imul
out
pop
imul
pop
dec
imulb
rolb
rep
por
mov
inc
mov
aaa
push
shll
in
dec
stos
pop
movsb
lea
mov
std
push
mov
mov
and
std
repz
push
addl
pop
and
cmp
out
jp
sahf
mov
jmpw
xchg
call
push
jmp
xor
xor
test
jns
mov
mov
clc
jnp
jecxz
adc
fld1
push
dec
add
stc
rorl
xor
les
dec
add
xor
int3
dec
sub
aaa
jns
ret
stos
test
daa
inc
into
jo
xor
cmp
pop
push
out
cmp
pop
sarb
int3
mov
lock
popa
pop
jg
jp
mov
ja
or
jge
arpl
mov
pop
adc
or
jno
push
jne
pop
aam
sbb
sub
jp
insb
js
mov
sub
pop
inc
push
outsb
fisubrs
mov
fadds
cmc
or
xor
inc
lret
pop
hlt
sub
les
mov
ljmp
sarb
mov
pop
shrl
nop
xchg
lods
sbb
pop
test
mov
filds
cwtl
pop
push
push
and
xlat
inc
test
aam
stos
in
aad
xor
mov
fnstcw
fwait
and
clc
shrb
adc
sbb
in
loope
outsb
inc
sti
inc
adc
std
fmulp
jmp
lahf
ffree
pop
inc
es
mov
js
push
ret
add
shl
xchg
repz
adc
cmp
sbb
add
adc
insb
popf
test
push
movsb
pop
push
aas
aaa
popa
sub
adc
xlat
in
mov
pop
fwait
push
pop
adc
mov
pop
sbb
push
out
insb
inc
pop
cmp
push
mov
cmp
pop
call
dec
fstl
jmp
lea
out
xor
iret
sti
push
arpl
mov
scas
xchg
cmpsb
jnp
and
cmp
sti
xchg
push
flds
cmpsl
push
pop
fs
xor
mov
cmpb
cmp
inc
mov
int
lahf
mov
push
inc
xchg
add
aam
mull
data16
cld
adc
into
inc
pop
in
jecxz
fmuls
loop
dec
test
jp
mov
ror
pop
ds
inc
cmp
pop
adc
fs
pop
movsb
adc
xor
mov
and
int
or
int3
and
sbb
adc
cmc
sub
mov
mov
xor
idivl
sbb
cmpsb
inc
sub
push
data16
add
fists
in
jb
out
fimuls
jmp
pusha
insb
mov
std
fildll
packsswb
mov
insb
add
mov
fisubl
je
xor
cwtl
sub
in
jmp
or
mov
rclb
adc
pop
out
xchg
lock
xor
insb
xchg
cmc
stos
adc
xchg
xchg
iret
mov
fs
ficoml
test
and
push
sbb
repnz
out
je
xor
mov
sub
dec
sub
mov
mov
hlt
mov
int3
xchg
dec
dec
jne
pusha
fcmovu
jle
shll
add
ret
pop
lods
stc
adc
pop
sub
mov
xchg
ror
adc
icebp
dec
mov
ja
into
ror
pop
cmpsb
divl
jne
adc
aam
fsts
test
sbb
rcl
imul
in
sub
mov
mov
lret
andb
mov
jle
pop
fsubrl
lcall
je
sub
inc
pop
pop
jge
mov
mov
repz
jl
imul
mov
push
cmp
mov
cld
test
mov
jae
shrl
dec
dec
movsl
dec
out
mov
mov
mov
js
insl
mov
pop
and
daa
dec
divl
subb
push
fstl
mov
es
les
mov
and
push
out
repz
jg
pop
push
lea
mov
insl
and
jb
adc
ret
jge
mov
dec
pop
iret
adc
ds
stos
fistl
cmp
loopne
xchg
adc
lods
aas
add
aad
cmp
aam
sbb
pop
cld
icebp
sbb
and
pusha
and
into
sbb
rcrb
push
pushl
sbb
mov
cmpsl
push
jns
jecxz
xchg
push
dec
and
mov
js
xchg
lahf
lods
jno
and
add
lods
mov
enter
xor
sub
int3
mov
out
dec
nop
push
xchg
jne
stos
sbb
testl
push
and
divl
jl
std
or
aas
sbb
jl
sbb
cwtl
test
mov
xlat
push
imul
ds
add
aas
inc
repz
loopne
in
mov
xchg
lock
lock
jl,pt
jl
punpcklbw
fistpl
scas
gs
jmp
and
mov
dec
cltd
push
inc
push
rcl
aad
mov
and
mov
pop
and
sbb
sbb
inc
jne
and
and
sub
adcl
repnz
sbb
inc
xchg
inc
aas
sub
jmp
icebp
or
mov
sub
pop
jg
push
dec
gs
inc
pop
push
ja
lea
iret
lret
ret
jl
add
movsb
cmpsb
pushf
inc
shlb
rcrl
cltd
xchg
rorb
insb
push
test
lods
inc
fdivr
mov
enter
push
xchg
mov
adc
out
and
xor
test
push
lcall
movsl
cmp
addb
clc
mov
arpl
jl
ficomps
cmp
lock
mov
cltd
pop
aas
xchg
mov
stos
stc
mov
mul
sbb
call
sbb
in
ja
and
scas
mov
loop
lret
sahf
rcr
pop
aam
shl
jne
enter
jb
add
popa
sbb
imul
cmp
aad
lods
mov
fldenv
popf
add
jp
push
jne
scas
cli
call
xchg
mov
push
outsl
outsb
aad
cmp
add
add
das
jbe
wbinvd
or
cmpsl
repnz
push
sbb
negb
inc
outsl
mov
push
in
xor
jno
push
push
xor
mov
mov
movsl
lods
cmp
or
push
out
mov
cmpl
cmp
cmp
sbb
xchg
push
ds
out
test
add
repz
test
mov
in
mov
push
xlat
inc
test
or
aas
sti
or
es
sbb
cmpsb
and
jmp
ffreep
int3
jnp
nop
movsb
inc
xor
or
lea
fwait
xor
sub
jnp
ss
ss
jb
sti
mov
pop
add
test
addb
inc
and
loop
jae
pop
lods
sbb
test
jno
push
xlat
xor
pop
sbb
dec
xchg
test
jae
lret
dec
hlt
xor
or
test
and
pop
aaa
add
cltd
jg
dec
sahf
push
mov
jmp
mov
ljmp
cmp
mov
xchg
adc
mov
mov
data16
mov
stos
push
imul
pop
shl
adc
movsb
jne
adc
lods
subb
in
pop
jbe
sbb
mov
mov
cmp
out
mov
mov
sbb
cmc
cld
orb
xor
popa
test
jle
fisubs
mov
call
lods
insb
fcoms
int3
test
int
xchg
mov
jno
xchg
sub
add
push
insb
fisttpl
sub
es
jno
lea
insb
sbb
or
mov
dec
arpl
pop
and
adc
xor
outsb
js
mov
aas
scas
mov
insb
and
dec
mov
cmp
aam
test
sbb
sub
inc
ss
inc
or
cld
jne
cld
xor
mov
xor
inc
add
mov
add
out
mov
jmp
xchg
mov
cmpsl
fwait
lods
xchg
adc
push
xor
xchg
xor
fnstsw
lcall
loope
add
sub
in
call
jmp
mov
scas
fidivrs
xor
aaa
pop
and
push
jmp
sti
xor
lret
loop
rcrb
add
sub
adc
push
sub
rcrl
jbe
insb
mov
mov
adc
pop
mov
jo
push
add
out
add
sarl
or
jge
arpl
and
addr16
jg
mov
ret
inc
dec
mov
mov
mov
add
jno
sti
pop
loope
and
push
bound
and
gs
add
push
scas
jnp
dec
lret
std
imul
incl
sub
mov
push
inc
jno
mov
int3
arpl
pushf
in
mov
fcomps
cmpsb
mov
mov
dec
pop
cwtl
or
sbb
outsl
pusha
shlb
jl
fdiv
add
lcall
dec
lea
sub
test
in
cs
dec
cmp
and
int3
sti
push
inc
sbb
sbb
inc
and
jmp
pop
jmp
mov
mov
movsb
fmull
in
add
enter
pop
cmpsl
mov
aad
rorb
xchg
mov
cli
cmp
pop
lock
and
push
imul
iret
mov
sub
pop
mov
xor
or
orb
int3
inc
add
iret
repnz
adc
mov
shrl
mov
es
mov
and
rorl
aad
add
rcl
jg
jbe
addr16
pop
aas
shrl
push
sub
dec
inc
and
cmpsb
xor
mov
out
jge
mov
sbb
jnp
pop
movsl
mov
pop
shrb
and
aam
cs
pop
shll
lock
jp
hlt
jnp
lret
shll
jg
insl
push
mov
call
movsl
or
repz
push
inc
sub
sbb
pop
aam
mov
cmpsb
rcl
repz
enter
jecxz
ja
pushf
aaa
push
insl
xchg
daa
xor
movb
mov
mov
mov
push
inc
cltd
dec
pop
cmp
dec
addl
mov
or
cmp
shl
imul
mov
cli
xchg
mov
cmp
fs
mov
je
outsl
mov
mov
jb
dec
popa
push
stos
lcall
and
pop
xor
inc
cmpb
push
adc
push
lahf
adc
ret
sbb
test
stos
addr16
shll
sar
dec
dec
dec
and
mov
xor
popa
mov
scas
and
ret
bound
xchg
dec
test
dec
lock
mov
lret
test
dec
mov
test
xor
fnstsw
call
shll
sti
inc
xor
push
add
loopne
adc
push
jmp
or
pop
fiadds
dec
pop
imul
mov
sub
int3
sahf
inc
mov
xor
xchg
mov
repz
stos
sbb
andl
scas
mov
xchg
push
jg
jae
cwtl
sbb
repnz
push
add
f2xm1
fstpt
test
out
ljmp
jg
cmp
lcall
cld
mov
stos
jge
mov
mov
loop,pt
sarb
test
inc
inc
push
mull
fs
test
mov
pop
rcll
xor
dec
pushf
add
push
fnstenv
mov
xchg
xchg
mov
clc
fstpt
jb
mov
notl
jne
adc
mov
dec
aad
shr
iret
add
les
rcll
test
sub
xor
xor
xchg
add
loope
cwtl
gs
inc
lock
call
push
clc
pop
fldt
or
sbb
notb
push
sbb
jno
adc
out
andnps
sub
add
mov
stos
int
or
or
hlt
jmp
adcb
mov
test
xor
dec
cmp
inc
pusha
push
and
les
lret
sub
sbb
sub
lds
lea
loope
scas
imul
push
pop
xchg
pop
add
push
jnp
and
pop
push
push
imul
or
sub
pop
or
adc
adc
fstp
outsb
cmp
xor
sbb
sub
dec
pop
fldcw
rolb
into
fucomip
or
xlat
or
or
cmp
loop
mov
iret
subps
int3
mov
sub
xor
in
inc
mov
xor
pop
pop
jns
push
mov
out
xor
xor
outsl
jno
int
push
add
clc
mov
ret
xor
enter
cmp
add
incl
adc
xor
mov
jb
aaa
outsl
icebp
stos
or
and
movsl
xor
xchg
adc
pusha
lods
gs
xlat
insl
fimull
mov
pop
pop
fsubs
sub
repz
mov
aas
fisubrl
loope
push
mov
fs
jbe
adc
lcall
adc
sbb
ret
mov
or
add
mov
pop
decl
mov
dec
push
shr
adc
out
inc
incl
sub
jns
inc
mov
loop
inc
lea
stos
dec
or
xchg
push
aas
cmpsb
leave
call
movsb
enter
push
scas
ret
mov
xor
cld
rcrb
cmp
aas
sti
sti
push
lahf
insb
fwait
add
out
in
lock
add
or
test
pop
jo
mov
jle
loop
arpl
jle
mov
bound
sub
pusha
hlt
cmp
cli
dec
cmp
mov
sti
addr16
push
sbb
xchg
les
xchg
call
sbb
je
adc
push
in
ja
mov
sbb
and
and
popa
pushf
fdivs
leave
sub
ret
lret
outsb
xchg
sbb
imul
out
jnp
dec
ret
sub
cmpsl
jbe
jmp
inc
pop
jne
hlt
outsl
push
or
ljmp
pop
push
ds
inc
dec
cmp
jge
lods
cmpsb
lods
mov
pushf
pop
insl
mov
xor
jnp
lahf
les
xchg
mov
leave
test
js
lea
jl
or
mov
jo
lahf
mov
push
pusha
das
adc
pusha
lret
xchg
sbb
test
ficompl
xchg
scas
or
xchg
fstps
mov
xchg
jbe
stos
mov
fs
pop
add
testl
mov
addr16
mov
lods
push
enter
faddl
pop
lret
popa
stos
add
scas
shll
dec
and
fisubrs
test
dec
orl
int
jle
xor
sub
pcmpgtw
xchg
mov
lahf
fwait
push
mov
push
test
inc
outsb
xor
xchg
mov
or
cltd
mov
int
push
insl
pop
pop
in
jo
aam
in
inc
daa
xchg
mov
xchg
cwtl
imul
xorl
ljmp
shlb
cmp
lahf
ss
imul
shl
jmp
adc
sbb
jg
add
jae
ret
std
es
lcall
das
cmp
je
xor
ret
es
xor
aaa
je
jmp
push
inc
fs
leave
aaa
stos
sub
or
jae
mov
jb
stc
inc
sub
push
pop
push
pusha
push
mov
cmpsb
mov
pop
jg
mov
pop
repz
fs
ret
mov
pop
xchg
int3
or
mov
sbb
mov
out
and
dec
mov
mov
xlat
testl
mov
push
sub
sahf
push
mov
imull
jp
xchg
mov
out
int3
lock
ret
ljmp
mov
and
sahf
dec
sahf
mov
aaa
adc
jmp
fstpt
and
or
xor
xor
int3
test
add
repnz
adc
shr
dec
sbb
cltd
cmp
popa
jg
and
mull
imul
ficomps
out
mov
sub
push
stos
or
xchg
movsl
pop
outsl
jo
pop
enter
jmp
lock
fdiv
sbb
push
inc
mov
gs
mov
pop
pop
push
add
xchg
pop
dec
mov
and
mov
imul
aad
lods
out
ret
cli
adcb
push
xor
les
sub
xorl
pushf
push
popa
adc
ret
mov
pop
mov
fdivl
notb
jb
js
imul
das
push
cmp
adc
mov
xchg
fmul
mov
inc
shll
lods
inc
rol
ja
add
sub
jmp
inc
pop
out
nop
xor
dec
ja
pushf
push
add
sub
push
fisubrl
adc
push
pushf
clc
and
stos
imul
lahf
shl
sbb
lock
loope
jmp
push
sbb
frstor
aaa
jle
stos
outsl
or
add
outsb
mov
pop
out
push
push
xor
and
cmp
pop
dec
jmp
pop
cmp
push
xor
mov
xor
es
lahf
pop
orb
loope
inc
sbbl
mov
in
fwait
and
imul
jae
sbb
xchg
push
sbb
clc
and
ja
or
push
xor
xchg
loope
xchg
push
xchg
scas
test
or
xlat
mov
aaa
mov
cmp
xor
and
rcrl
std
call
icebp
pop
sahf
inc
call
inc
mov
add
les
mov
stos
cmpsl
push
iret
loope
pop
xchg
mov
inc
xor
adc
fstpl
sbb
shlb
push
or
repnz
ja
mov
stc
loopne
stc
js
lods
xchg
sbb
cwtl
negb
out
mov
jb
sbb
lods
iret
pushf
pop
push
jg
rorl
cmp
daa
insl
icebp
pushf
test
xor
or
lds
test
and
pop
pop
adcl
imul
pusha
mov
or
sub
aad
and
inc
and
mov
lret
test
inc
xor
in
lahf
add
add
sub
push
fstpl
mov
lcall
jmp
xchg
lahf
icebp
sub
iret
add
mov
or
mov
out
sbb
xor
ret
les
aaa
push
cli
sbb
mov
fdivp
dec
addr16
pop
test
pop
or
mov
and
shlb
lret
js
pop
cmp
xorb
lcall
cmp
cmc
sub
jne
and
xchg
push
jg
push
bound
xor
cmp
add
insl
negl
loope
addr16
test
dec
jbe
or
add
repz
lods
movsb
jne
jns
and
aad
jp
frstor
pop
lea
sub
sub
inc
mov
push
add
cmp
xchg
div
pop
out
adc
mov
in
nop
mov
cld
inc
mov
cmp
lds
inc
pop
push
xchg
aam
fnstcw
jo
push
call
push
fxch
pop
idivb
test
out
pop
cld
shlb
aad
jmp
cmp
sub
cmc
in
dec
les
cli
loop
idivb
mov
scas
xlat
add
sar
push
aad
neg
stc
cmp
mov
xor
jb
dec
fsubrl
movsb
fs
dec
push
and
cltd
jne
arpl
arpl
xchg
test
push
int
and
add
emms
movsb
pop
jp
push
add
or
fadd
adc
les
or
mov
pop
cmp
fs
pop
andl
fstl
sub
push
xchg
push
dec
enter
jae
int3
sahf
leave
mov
sbb
fsubl
cmpsl
inc
jno
rclb
jne
mov
adc
xchg
cmp
flds
and
xchg
lcall
and
mov
sub
dec
lds
xchg
sbb
sbb
sbb
pop
xor
test
lahf
jle
mov
push
lea
sbb
cmp
ret
mov
mov
sti
xor
push
mov
sub
xor
xchg
shr
xchg
pop
aaa
lds
dec
push
cmp
and
out
movl
mov
push
dec
xor
lea
cmp
mov
das
inc
out
and
clc
sub
dec
test
adc
adc
push
mov
xchg
add
cmpsb
les
insb
jle
scas
mov
jne
adcb
fistl
dec
jne
push
das
add
pop
push
fisubrl
in
mov
inc
mov
ds
lock
add
js
sub
push
mov
scas
imul
jmp
aas
cltd
fdivl
lods
addr16
std
mov
js
lds
scas
cmc
inc
mov
pop
int3
sub
mulb
and
inc
pop
cmp
out
rcrb
in
cmp
test
lahf
movsl
push
mov
mov
scas
jb
or
jmp
jbe
inc
out
cmp
or
fwait
ss
or
js
adc
sbb
fiadds
outsb
lret
dec
add
out
mov
gs
push
and
sub
fs
pop
fs
sub
xchg
push
xor
lods
sbb
sbb
jge
push
ret
add
mov
add
sub
jnp
jle
pop
or
inc
sub
adc
jne
pop
xchg
iret
pop
lcall
add
push
push
pop
dec
mov
inc
and
mov
jb
push
dec
clc
fldt
dec
mov
idivl
insb
mov
arpl
loop
xorl
test
test
mov
icebp
push
test
mov
jae
xor
pop
push
jmp
or
test
mov
xor
xor
sub
cmpsl
sarb
pop
fstl
in
lcall
outsb
ret
ljmp
rorb
jl
mov
lret
adc
fld
loop
ret
dec
dec
into
xor
inc
sub
xor
fbld
adc
adc
popf
mov
test
jmp
xor
lock
add
adc
cmp
insb
mov
icebp
push
test
mov
lcall
cmp
cmp
insb
gs
inc
pop
push
dec
cs
out
push
inc
push
xchg
add
movsl
ljmp
lods
or
repz
mov
push
popl
imul
aad
mov
repz
sbb
mov
or
jbe
or
mov
cwtl
and
push
jecxz
iret
sub
test
pop
lret
inc
mov
or
push
mov
mov
rclb
push
lock
inc
cmpsl
in
cli
cld
in
xchg
setg
and
fdivp
orl
pop
mov
into
push
insb
adc
inc
mov
add
mov
push
jecxz
and
int3
sub
push
adc
rcrb
imul
mov
lret
wrmsr
jle
loopne
addl
sti
or
add
mov
sub
dec
mov
pop
mov
pushf
mov
repz
mov
je
adc
mov
push
add
into
cmp
pop
push
fsubl
out
les
and
add
mov
lods
push
stos
fwait
or
dec
call
fcmovnu
dec
dec
int3
xchg
xor
xlat
fstps
mov
mov
or
sbb
and
mov
rcl
xchg
jb
add
or
mov
xchg
jae
jbe
mov
test
add
inc
out
jno
iret
rolb
and
push
jge
das
iret
shl
imul
mov
lea
pop
lret
lock
jno
push
pushl
clc
mov
data16
ljmp
leave
mov
sub
cmp
ret
mov
cmp
xor
daa
rclb
scas
jae
out
adc
add
jmp
xchg
jle
cmp
pop
in
daa
loopne
add
dec
mov
imul
mov
inc
mov
sbb
jne
xchg
mov
lock
lret
out
or
imul
frstor
out
loope
repz
dec
mov
inc
mov
cli
jns
pop
mov
cltd
mov
sarl
out
lods
loopne
mov
fst
dec
int
jmp
fnsave
xchg
aam
cmp
ss
outsb
mov
rcl
out
in
inc
sbb
and
or
loope
in
in
and
fsubrs
sbb
xlat
insl
mov
cli
pop
sti
xor
jmp
xchg
cmp
sahf
out
dec
rclb
cmp
xchg
sub
pop
sti
lahf
mov
jl
push
mov
push
stos
push
mov
push
fs
fldcw
imul
mov
dec
and
retw
jle
iret
js
sbb
cmp
mov
push
popa
notb
add
ja
cmpsl
sahf
jmp
fs
loop
popf
adc
bound
shll
popf
cmp
movsl
iret
loopne
sub
push
jb
mov
ja
adc
mov
xchg
inc
popa
ret
fnstcw
inc
xchg
mov
mov
pop
sub
mov
lock
addr16
loopne
xor
mov
ret
add
add
jmp
sbb
andl
mul
push
push
push
pop
aam
mov
and
sub
enter
icebp
pop
sub
jb
or
mov
mov
add
sub
insw
mov
in
jmp
dec
push
sub
nop
imul
enter
push
sub
or
mov
or
iret
call
pop
xchg
or
and
mov
ljmp
int3
push
clc
push
scas
jp
lret
dec
addr16
xchg
cmp
and
adc
lods
cmp
movsl
add
xor
stos
shrl
mov
mov
out
xchg
jb
pop
iret
mov
mov
mov
cli
mov
xor
ret
je
fcoml
cwtl
shl
lcall
test
nop
pop
mov
xchg
js
xor
movsb
mov
adc
mov
cmp
or
lcall
cmp
test
push
or
icebp
pop
pop
and
int3
sbb
xor
out
sub
enter
ror
sbb
jge
jnp
jnp
xor
add
push
xchg
repnz
stos
outsl
or
add
adc
das
arpl
repnz
ss
mov
test
mov
inc
adc
push
jo
lahf
push
and
mov
pop
cmc
int3
cmpl
push
adc
cmp
lock
mov
shrl
inc
out
lahf
add
add
dec
sbb
aaa
mov
mov
jmp
cmpsb
enter
dec
or
mov
stos
mov
mov
lods
push
std
push
rep
fsubl
mov
out
mov
ljmp
pop
fwait
repz
jb
mov
roll
bound
je
mov
leave
mov
imul
ds
jle
and
dec
or
add
ret
in
mov
push
js
fwait
aad
jmp
mov
pushf
xor
push
push
lcall
cmp
ret
adc
stc
xor
dec
ss
and
adc
mov
xor
in
and
inc
and
lret
mov
adc
jge
push
sbb
inc
cmpsl
cld
ret
jecxz
sbb
std
pslld
cli
icebp
add
pushl
icebp
mov
call
adc
adc
mov
or
jl
sarl
shl
mov
sarl
popf
xchg
xchg
jae
inc
clc
mov
aad
cmp
pop
clc
out
outsl
mov
aam
int3
mov
loopne
lods
mov
mov
out
sbb
test
jns
jle
movsb
xor
pop
fcom
mull
or
lret
push
or
jg
xchg
leave
pop
hlt
mov
xor
mov
sbb
jne
loop
mov
xor
aad
rol
and
daa
lret
sub
ss
daa
adcl
and
loope
subb
lahf
xor
add
adc
lods
push
cmp
dec
inc
dec
dec
and
insl
pop
add
mov
imul
cs
lods
loop
fisubs
push
cmpb
add
jnp
jle
pop
mov
push
je
test
mov
sbb
insb
imul
mov
scas
test
outsl
mov
idivb
xchg
mov
pop
mov
jmp
push
dec
sarb
std
push
dec
icebp
or
mov
adc
mov
or
mov
sbb
push
icebp
mov
dec
jmp
aad
fldcw
fst
mov
addr16
add
test
adc
lock
or
movsl
es
jmp
cmp
mov
repnz
pop
xchg
inc
pop
pushf
xchg
pop
push
icebp
lods
mov
xchg
pushf
fsubrp
dec
in
push
lcall
or
shrb
pop
int3
dec
jno
shlb
mov
push
js
scas
cmp
sub
xchg
pop
pusha
push
sbb
je
call
adc
outsb
sbb
in
sbb
xchg
inc
into
repz
push
add
cld
mov
xor
sbb
dec
cmc
xchg
xchg
jo
cli
jne
inc
pusha
dec
enter
dec
leave
and
outsl
in
pop
push
das
mov
or
and
pusha
adc
inc
push
lods
movsl
mov
arpl
or
ja
inc
adc
insl
push
les
mov
rcl
sbb
mov
mov
sub
cltd
mov
or
add
mov
lahf
jno
fucom
adc
mov
fimull
sbb
roll
inc
repnz
leave
popf
sti
inc
cmc
int
jbe
push
loopne
adc
rcrl
inc
out
jb
fcmovu
add
loope
dec
adc
push
data16
xchg
ljmp
lea
aad
mov
inc
push
insb
hlt
int
negl
loope,pn
ja
sub
or
mov
std
in
add
and
popf
outsb
push
pop
out
lods
mov
jg
stmxcsr
lods
jg
mov
setnp
jns
imul
pop
mov
cld
mov
aam
and
dec
xlat
jge
adc
sub
cwtl
mov
ficoml
xorb
mov
sbb
mov
scas
ret
leave
mov
cmp
sarb
mov
push
pop
fwait
cmp
push
nop
int
std
sbbl
fstps
or
xlat
mov
xchg
hlt
push
fisubs
outsl
or
sti
in
mov
sbb
cs
jmp
mov
fisttpll
sub
inc
jne
mov
fnstcw
int
divb
or
sbb
jo
xchg
sub
sbb
or
mov
xchg
dec
lock
or
pop
mov
and
cmp
adc
mov
add
aas
jnp
jns
inc
and
mov
and
outsl
xchg
sbb
pop
int
fnstsw
fstpl
aad
mov
inc
jb
dec
lock
push
jmp
mov
pop
inc
sbb
mov
push
cmpsb
mov
shl
mov
out
dec
in
dec
sub
cmpsl
fldl
jne
fisubrl
icebp
ss
jg
icebp
xchg
xchg
cmp
mov
enter
xor
imul
jo
xchg
mov
sbb
add
fsubr
xor
jbe
dec
clc
sub
xchg
insl
and
cs
in
and
out
add
xchg
xchg
adc
addb
xlat
jmp
and
push
pop
pop
cmpsb
adc
xor
out
cmp
sarb
stos
mov
pop
push
lcall
hlt
xchg
or
fidivs
sahf
sbb
fidivrs
mov
pop
popa
xchg
mov
push
jo
push
cld
and
jns
cmp
pop
faddl
sbb
xor
push
test
mov
xchg
pop
in
sahf
sbbb
cmc
xchg
not
dec
fadd
push
fwait
cld
aas
jo
mov
add
sbb
mov
adc
jb
sub
mov
ss
jge
nop
mov
mov
shrl
movsl
fbstp
lret
sbb
or
incb
js
jg
incb
das
xchg
sbb
jns
jb
sub
fisubrs
xchg
and
mov
imul
xor
iret
in
or
mov
insb
xchg
cmp
and
or
in
pop
push
and
in
out
addl
sbb
sbb
xchg
lds
push
mov
jg
call
or
add
xor
adc
inc
inc
jnp
or
or
mov
xor
adc
jno
jge
and
lods
dec
imul
loop
or
enter
or
cmpsb
nop
ret
mov
inc
xlat
imulb
insl
ret
adc
dec
pop
popf
pop
jbe
push
cmpsl
scas
mov
pusha
push
push
cmp
mov
out
lret
outsb
movsl
lods
in
neg
movl
js
aaa
lret
jno
repz
repz
sti
out
fdiv
or
loope
xchg
out
rorl
mov
in
or
xchg
sub
shrl
stos
adc
dec
shll
pop
cmp
ret
push
sbb
mov
jne
and
mov
cli
add
movsl
stos
iret
repz
push
je
fisttpll
mov
jp
iret
ret
icebp
cmp
push
cmp
xlat
outsb
inc
fs
or
mov
jl
and
arpl
and
punpckhdq
lahf
pop
scas
push
jmp
icebp
dec
mov
and
jnp
xchg
ds
fsubr
push
jecxz
adc
push
shrb
cmp
sbb
fsincos
lahf
push
jne
xchg
xchg
add
mov
push
lea
pop
inc
jl
int3
jp
mov
dec
mov
or
in
add
jmp
bound
xor
adc
sbb
mov
adc
push
out
or
repz
cmc
xchg
jmp
mov
pop
shll
xchg
daa
inc
sub
cmp
sub
dec
shr
cmpsl
mov
stos
xor
negb
in
imul
scas
clc
jge
lahf
push
lods
xor
adc
xchg
cmp
shll
je
add
add
jno
jg
das
rol
mov
leave
je
cli
mov
push
add
pop
pop
movsb
push
and
rorb
pop
inc
jae
lret
cmp
popf
mov
scas
jo
scas
dec
mov
fidivs
insl
cmp
add
push
nop
xchg
mov
add
fsub
imul
add
fninit
decb
adc
dec
call
fcoml
jno
ja
insb
mov
push
imul
lods
dec
and
xchg
cmp
ds
mov
test
mov
adc
cmp
test
add
das
pusha
nop
mov
xor
and
pop
fldl2e
dec
stos
sub
in
adc
mov
fiaddl
push
mov
cmpsl
pop
adc
xor
jg
rolb
sahf
fmull
pusha
pop
je
call
adc
out
sti
movsl
lret
aaa
mov
xor
mov
pushf
cmpsl
inc
stos
sbb
mov
mov
jbe
adcl
mov
or
mov
popl
icebp
xor
in
dec
in
mov
out
loopne
dec
mov
xor
movsl
rcrb
pop
push
rcll
jae
sub
jmp
mov
or
dec
ret
stc
pop
xor
adc
mov
sbb
out
mov
scas
pop
loopne
fsubl
mov
sub
pushl
repnz
xchg
mov
xchg
sahf
inc
mov
mov
aas
adc
mov
sub
fs
lods
add
xor
mov
out
pop
aaa
xlat
jbe
in
inc
or
pop
test
cmc
inc
aad
test
xor
stos
push
xor
mov
shlb
sahf
pop
xchg
dec
out
jbe
dec
xchg
cld
adc
ljmp
xchg
jno
xor
mov
iretw
push
movsl
cltd
dec
sbb
cmp
jae
adc
sub
inc
sbb
iret
ja
and
sub
iret
stos
fidivrs
cltd
push
inc
jbe
jne
inc
inc
int
jle
mov
out
das
lds
or
fdivrs
mov
cmp
push
mov
xchg
jbe
pop
dec
inc
sti
mov
adc
sarl
movsl
inc
jne
dec
mov
lret
xor
out
nop
pushf
mov
in
test
push
aas
adc
mov
mov
mov
xchg
outsb
hlt
ret
clc
jae
cmp
mov
sub
test
xlat
xlat
xlat
cmpsb
shr
in
aad
and
mov
and
push
rolb
and
test
jne
lret
add
icebp
xchg
loopne
das
and
in
push
into
cmp
xor
mov
aas
adc
es
imul
xchg
inc
test
adc
adc
push
sbbl
add
cmpsb
fwait
sbb
add
loopne
add
out
jg
sub
stc
mov
pop
cld
lret
cmp
inc
jmp
pop
in
add
scas
dec
imul
ret
ljmp
or
loope
inc
pop
push
jb
jecxz
pop
cmpsb
fs
addb
ja
lret
sahf
shl
dec
jle
jbe
fidivs
xchg
or
enter
mov
push
ret
repnz
cmc
je
dec
cwtl
movsl
xor
mov
xchg
inc
and
iret
imul
lret
push
mov
adc
and
fwait
shl
pop
out
cmp
enter
fdivl
mov
sub
xchg
divb
dec
ret
push
flds
aad
out
lods
mov
push
sbb
pop
mov
aad
es
lret
push
sarb
das
lret
and
xor
mov
xchg
sub
inc
adc
aam
jns
inc
xchg
and
dec
mov
in
jo
xor
jnp
cli
add
cmp
add
inc
test
stos
mov
pop
jo
dec
rcrl
sbb
movsl
in
or
mov
lock
mov
aaa
and
sub
popa
repz
adc
in
jl
cmp
movsb
mov
add
scas
inc
adc
aad
nop
add
or
mov
pop
mov
and
pusha
testb
pop
mov
rorl
sahf
icebp
into
stc
mov
add
shlb
sbb
sbb
fucomp
and
aam
and
inc
push
inc
fistl
fnsave
pop
out
and
fstpl
je
outsl
in
mov
ja
push
or
push
push
gs
icebp
sbb
cld
dec
sbb
sbb
cmpl
lods
pop
jo
lcall
sbb
xor
aam
roll
repnz
mov
push
aam
adc
ljmp
mov
sbb
fwait
insb
xchg
cmp
inc
bound
pop
out
sub
pop
cmovl
and
pop
inc
cmp
fwait
xor
dec
outsb
lcall
cmpxchg
stos
pop
pop
xchg
add
jmp
cmp
push
mov
xchg
or
sub
adc
frstor
xor
mov
aad
xchg
and
scas
cmc
fisttpll
lods
fmuls
fisubrl
bnd
ret
scas
mov
adc
clc
mov
adc
mov
outsb
rorl
fiaddl
add
inc
mov
mov
jbe
inc
sub
lret
int
mov
mov
push
pop
jp
jbe
aas
dec
test
cwtl
adc
and
mov
mov
repnz
int3
pop
xor
arpl
es
fdivl
es
imul
bound
jge
xor
adc
icebp
mov
arpl
loope
jg
in
mov
xor
lret
sub
imul
mov
aam
cmc
aaa
fadds
dec
pop
cltd
push
mov
dec
loope
mov
dec
and
divb
inc
jmp
jg
and
jl
sbbb
sub
xchg
mov
or
push
cltd
jno
test
adc
scas
pop
repz
enter
in
lret
dec
cmpl
repnz
mov
sti
mov
adc
dec
jmp
inc
ret
out
xor
mov
adc
jl
mov
jl
jae
call
mov
sub
ljmp
rolb
push
fs
cmp
cmc
int
inc
test
fs
pusha
inc
mov
popf
scas
mov
cli
fs
fwait
jae
xor
inc
dec
imul
xchg
iret
rcrb
and
mov
ja
fnstcw
sbb
pop
imul
loopne
add
pop
imul
add
push
fdivrl
pop
dec
sahf
inc
pop
xchg
out
sti
mov
test
cmp
mov
dec
loope
jle
jne
sbb
sub
inc
fsubr
and
scas
nop
xchg
push
xchg
in
std
jge
xchg
frstor
cli
jp
test
ud0
subl
jmp
mov
add
adc
icebp
aad
loop
xchg
xchg
fisttpll
in
loopne
es
jecxz
enter
jnp
loop
push
dec
rol
or
add
js
add
out
push
adc
pop
xor
sub
push
cmp
sub
mov
icebp
cmpsl
fidivrs
jg
push
jno
or
repz
aaa
insb
push
xor
pop
shlb
fimuls
hlt
mov
dec
adc
mov
and
ja
mov
mov
int3
xchg
lahf
outsb
mov
cli
push
adc
xchg
push
mov
push
or
loopne
test
jb
xchg
mov
fcoms
push
xor
dec
lea
sub
int3
aad
test
dec
cmp
inc
nop
pop
stos
in
popf
test
imull
cmpsl
lods
dec
fucomip
jo
dec
mov
popf
jno
xchg
imul
add
dec
insb
mov
fdivp
jle
xor
and
sbb
mov
loope
daa
jnp
dec
sbb
mov
test
xlat
cltd
orl
pinsrw
fsts
leave
cmp
pop
cltd
ret
cmpsb
mov
cmpsl
popa
sub
fistpl
leave
xchg
icebp
js
shll
inc
adc
mov
xchg
jle
xchg
scas
sub
mov
int
adc
enter
sbb
loope
cmp
addr16
cld
sub
rorb
jecxz
mov
fildl
fidivrl
inc
lock
inc
push
popa
fadds
and
outsl
scas
fsubs
and
push
cmp
pop
inc
push
sbb
lcall
pop
jle
and
enter
inc
sbb
icebp
and
scas
mov
or
mov
mov
insb
orl
mov
push
andl
mov
into
cmp
cmp
sub
mov
in
xor
ljmp
shlb
jno
inc
loopne
insl
lret
xor
aaa
xor
fildll
xchg
lods
fnstsw
lret
and
cmp
cmp
leave
xor
lods
test
jo
lods
sbb
cmp
in
xchg
xchg
dec
cs
xor
mov
add
lds
cmovl
mov
mov
out
jnp
ja
sub
inc
jo
and
jl
data16
lret
mov
jg
xchg
sub
push
xchg
xchg
or
push
and
adc
into
pop
mov
jl
dec
and
mov
inc
bound
and
cmp
iret
pop
pop
std
stos
inc
and
ss
lock
mov
cltd
mov
push
mov
add
fcomi
inc
cmpsb
addb
jns
loopne
lea
ret
push
ror
pop
aad
jno
mov
add
mov
loop
xor
rcrb
fucomip
dec
cmc
int
ror
push
push
rcr
mov
lret
movsl
flds
push
mov
gs
ss
mov
pop
or
xlat
mov
xchg
xchg
pop
mov
sub
cwtl
pop
inc
adc
cld
in
jge
cld
inc
mov
pushf
dec
idivl
mov
xchg
js
cmp
imul
lahf
adc
int3
jbe
arpl
push
jne
fwait
arpl
repnz
pop
stos
popf
ljmp
xchg
sbb
inc
xchg
or
mov
push
jno
pop
ja
test
mov
addr16
push
sub
mov
mov
pop
lods
aad
sub
mov
test
add
sub
pop
cmp
stos
cmp
fadds
sahf
cmp
ret
mov
outsb
mov
mov
pushf
in
jle
and
or
nop
jl
fdivl
cld
mov
push
sbb
dec
add
dec
mov
fsts
jno
pop
mov
inc
mov
dec
sahf
sahf
xchg
and
lcall
mov
ss
mov
arpl
xor
mov
push
jg
aam
js
sub
decb
sbb
outsl
or
andb
testb
push
sbb
lret
rcl
out
popa
ret
inc
in
ja
mov
scas
jae
ljmp
sahf
pop
fistps
mov
pop
movsl
insl
mov
sbb
jge
int3
and
dec
loopne
cs
xchg
mov
fisttpll
cmpsl
xchg
fwait
xor
movsl
sub
xchg
lea
leave
into
sub
test
clc
pop
mov
mov
shlb
div
loop
mul
inc
push
sbb
lcall
mov
rcll
out
nop
int3
loopne
dec
ret
xor
push
shll
pop
add
fmuls
inc
stc
xor
cmp
leave
mov
sub
imull
nop
mov
pop
insl
out
mov
or
and
and
sbb
je
sub
cltd
sub
in
pushf
dec
sbb
jne
jl
pop
js
scas
fwait
or
or
sub
add
lahf
hlt
push
rcl
mov
pop
mov
mov
or
dec
outsl
xchg
gs
lods
in
mov
or
insl
mov
push
ss
mov
int3
pop
movsb
ret
test
mov
or
jl
outsb
cmp
int3
stc
repz
xlat
mov
jle
decb
mov
scas
int
add
lods
aas
test
test
jb
lcall
fiaddl
jl
shll
or
fcoml
aaa
fdivrl
jo
jge
cmc
subb
dec
mov
in
jp
dec
and
int3
and
fsub
fsts
andb
das
pop
into
movsl
pop
sti
enter
and
mov
push
xchg
call
fsubl
or
sbb
aas
out
sbb
mov
inc
scas
sbb
jns
divl
cmp
fs
minps
cmp
inc
loop
xor
dec
cmpsb
shll
inc
popa
pop
bnd
xor
push
pop
mov
inc
stc
leave
popf
scas
mov
add
fdivs
loopne
mov
mov
mov
mov
sub
cli
cmp
pop
sub
xchg
mov
add
add
xchg
scas
jl
xor
aam
loope
insb
mov
or
mov
pusha
jb
push
and
andb
jg
pop
out
adc
and
sbb
fisubs
mov
and
enter
mov
jge
xor
dec
cmp
aaa
fcmovnb
mov
or
mov
or
add
fstps
mov
sbb
mov
jge
xchg
cmp
cmpsw
in
cmpsl
mov
and
add
push
mov
adc
mov
pop
cmpb
pop
leave
cwtl
in
pop
xor
inc
add
cmp
shlb
scas
or
add
jae
mov
cmpsb
add
js
mov
punpcklwd
adc
inc
adc
dec
call
adc
mov
push
mov
mov
push
sub
insb
cmpb
sub
out
ffreep
inc
stos
adc
sbb
mov
cmc
popf
in
sbb
xchg
cmpsb
jmp
and
mov
rorw
pop
outsb
push
lea
popa
lea
into
mov
xor
push
cmp
popa
dec
add
and
movsb
xor
inc
push
gs
jl
leave
jns
sub
lods
cmp
add
xor
popa
inc
roll
cmp
adcb
inc
in
inc
leave
jle
sub
loop
loopne
cmp
unpckhps
pop
imul
mov
es
pop
test
loopne
inc
je
out
rorl
test
push
fisttps
mov
jle
pop
push
xor
mov
icebp
repnz
inc
rcll
outsb
test
ljmp
or
mov
bound
cmpsl
mov
xor
pop
scas
mov
dec
popf
adcl
movsb
add
xchg
or
xchg
push
add
outsb
xchg
scas
xchg
in
and
loopne
daa
shrb
ret
nop
and
push
gs
fwait
sbb
push
arpl
push
mov
dec
cld
cmp
daa
lea
in
sub
add
adc
sahf
dec
jg
mov
popa
neg
xchg
lahf
add
mov
cmp
mov
rolb
sbb
pop
cmp
aaa
stc
idivl
xchg
xor
sub
cwtl
adc
mov
in
mov
fs
call
jae
mov
cmpsb
pop
out
push
aam
popf
cs
lods
inc
inc
pop
cmc
lods
dec
pop
xlat
gs
pop
lret
jno
cmp
scas
daa
in
push
jae
and
pusha
sub
sub
mov
jb
iret
inc
xchg
sbb
pop
andb
test
stc
jne
inc
test
fcoms
cld
lock
cmp
popf
nop
imul
ss
pop
cmpsl
data16
out
test
mov
xchg
dec
mov
dec
jmp
dec
add
jmp
xchg
cmc
sahf
addb
fwait
cli
push
pop
dec
or
incb
cmp
ds
pop
cmpsl
cmp
adcb
das
jmp
pop
adc
fsubl
push
scas
fisttpll
iret
out
pop
jno
sahf
mov
cmp
je
push
or
out
mov
push
pop
aad
movsb
cmpsb
je
sub
repnz
in
test
rclb
shl
sbb
cmp
pop
or
sbb
mov
jg
popa
rolb
mov
sbb
loop
hlt
mov
leave
xor
cwtl
adc
insb
test
jl
xchg
dec
cmp
push
push
xchg
fiaddl
rorl
dec
insb
in
jge
test
out
inc
ficompl
xchg
mov
outsl
mov
cmc
sub
in
lods
sbb
pop
popf
cwtl
int3
in
push
data16
add
jecxz
lret
test
xor
push
js
sub
mov
imul
sbb
xor
jne
jmp
cwtl
or
sub
aam
imul
arpl
xor
mov
gs
das
pusha
mov
sbb
ds
and
mov
dec
sub
cmp
add
mov
adc
mov
adc
pop
jo
fstp
mov
mov
icebp
push
stos
outsl
jbe
pop
mov
xor
or
lret
negl
inc
jno
or
arpl
lret
pop
mov
mov
nop
std
and
pop
daa
imul
loopne
out
mov
mov
pop
mov
xchg
jbe
inc
shll
ds
scas
mov
sub
test
cmp
jl
cmpsb
inc
hlt
rolb
scas
sahf
in
mov
push
xchg
hlt
sbb
adc
and
in
dec
mov
in
xor
aad
clc
pop
popf
out
or
movsl
in
inc
push
cmp
mov
daa
outsl
pop
and
or
jb
and
fidivs
jnp
xor
xchg
or
cld
movsb
lret
cs
stos
cmp
leave
lods
xor
and
out
movsb
mov
ljmp
les
dec
shl
imul
imul
pop
lcall
push
push
add
repnz
jbe
jle
hlt
pavgb
mov
cmpsl
or
scas
push
cmp
mov
xor
lret
bound
daa
sbb
rcl
and
cmpsb
xor
xchg
dec
dec
push
clc
mov
dec
aad
mov
mov
addr16
sub
iret
dec
dec
lcall
idiv
lahf
fdivs
mov
sub
and
test
sub
mov
cmc
xchg
mov
enter
jecxz
scas
jecxz,pt
subb
in
xor
out
adc
xchg
ljmp
mov
shrl
in
int3
test
jl
leave
and
nop
sub
push
jp
ds
out
ficompl
das
scas
lea
xchg
jecxz
cmpsl
and
rol
jne
ficompl
add
mov
xorb
dec
fildll
sbb
cmc
and
jnp
rcl
orb
cmp
ficoml
fmul
jnp
mov
add
push
loop
and
call
lods
jb
jbe
mov
jnp
fucomi
or
inc
lock
sbb
push
test
popa
inc
jo
fidivrs
jge
push
ud0
out
fnstenv
inc
fmuls
inc
outsl
push
in
rclb
scas
pop
adc
rclb
sbb
out
mov
loop
xchg
cmp
aas
shr
cwtl
mov
add
loop
orl
aaa
jno
jo
xor
xorl
dec
repnz
push
lret
sbb
sub
adc
mov
adc
test
push
or
jo
and
pop
mov
shlb
or
ljmp
lret
jge
lock
je
fildll
cmc
insl
jg
fbstp
mov
mov
arpl
pop
test
jl
jl
clc
mov
cli
xchg
pop
inc
js
mov
dec
adc
clc
outsl
push
adc
cmc
cltd
cmp
pusha
cli
daa
subl
mov
movsl
sub
ja
add
leave
jnp
dec
mov
push
lods
jne
xor
sub
mov
jb
mov
lcall
lret
lock
push
mov
xor
mov
hlt
mov
or
pop
leave
xchg
mov
loop
xchg
mov
mov
lods
mov
sub
cmp
or
in
popa
rcrl
push
int
adc
push
add
mov
adc
addr16
enter
in
sbb
jae
ret
jae
sub
sub
xchg
jl
lret
nop
xor
cltd
inc
or
pop
xlat
cld
xor
sbb
inc
lds
pop
jge
fnstsw
mov
rorl
icebp
push
lods
lcall
bnd
out
jle
sub
sbb
dec
cmpsl
andl
xchg
mov
ljmp
xor
and
jle
out
es
ret
cmp
pop
movsl
jl
cmp
adc
push
mov
pop
mov
xor
add
shll
repz
es
imul
mov
lcall
ja
dec
out
repnz
test
aaa
cmp
fcomps
mov
outsl
cltd
add
fwait
jecxz
jg
iret
call
xlat
bound
std
or
mov
nop
fdivrl
enter
repz
daa
int
mov
in
sbb
push
sub
sub
in
int3
dec
or
cmc
and
andl
ss
js
and
sub
lahf
push
pop
testb
jb
pop
daa
out
jne
mov
or
lea
jb
arpl
or
add
and
bound
pop
sti
mov
or
rcl
popa
cwtl
repnz
pop
jbe
adc
mov
icebp
loop
pop
and
stc
jmp
inc
js
in
les
dec
mov
mov
mov
mov
adc
shll
sahf
sub
xor
test
mov
and
mov
fs
sbb
jne
out
lahf
mov
ljmp
mov
out
stc
sub
and
sar
rcrl
mov
dec
push
sub
dec
filds
jecxz
mov
stc
aad
fdivr
in
repz
add
jne
sbb
cmp
rcr
mov
and
adc
cmp
std
jns
push
mov
cmp
movsl
and
jmp
out
les
pop
fcomi
adc
cltd
pop
negl
and
out
sbb
add
or
sub
into
incl
rcl
push
pop
sub
popa
add
and
xchg
faddl
inc
pushf
sbb
adc
cmpsl
mov
pop
dec
add
cmp
cmp
icebp
and
jbe
push
add
or
xchg
shll
jbe
mov
push
cwtl
scas
xchg
fldt
cmc
fistpll
test
fdiv
dec
in
jnp
imulb
decl
mov
fcmovnbe
ljmp
subl
rclb
push
fldl
loop
xor
or
shlb
enter
insb
mov
or
in
data16
sbbb
out
inc
mov
push
loop
push
xchg
push
clc
sub
int3
cmp
cmc
or
adc
cmp
out
repz
jle
std
xchg
push
xchg
push
loop
pop
add
in
add
jae
mov
bound
push
ja
cmc
push
imul
push
xchg
mov
mulb
push
and
lret
push
mov
jp
mov
fsqrt
test
mov
daa
dec
ret
sbb
adc
xor
mov
adc
or
popf
mov
ret
mov
ror
xorl
and
cmp
adc
jp
xor
ss
rolb
in
ret
loop
loop
pop
jmp
iret
fcmovbe
cld
aas
adc
rclb
fdivrl
outsl
insb
test
cs
pop
xor
cs
sbb
iret
xchg
movsb
sbb
cmp
sbb
sbb
jge
and
lock
mov
push
imul
jne
push
negl
daa
sbb
mov
pushf
and
sbb
jle
xchg
jl
addr16
lods
lods
rorl
addr16
aas
mov
jae
nop
jp
aam
test
outsb
mov
adcl
xchg
ljmp
movsl
cmpsb
roll
mov
int
xchg
cmp
es
arpl
int
and
cwtl
fidivrs
dec
push
xlat
fwait
ljmp
stc
lea
int3
int3
mov
mov
jae
dec
adc
mov
fs
popa
xchg
dec
inc
jae
aaa
and
jge
mov
sar
lds
aas
repz
int
lcall
and
sbb
jbe
popf
adc
lea
adc
sub
push
mov
jmp
xor
adc
push
int
daa
nop
and
incb
mov
cmp
xchg
dec
sub
xchg
cmp
jb
dec
mov
mov
jae
xchg
lret
add
add
and
lds
sub
dec
icebp
rorb
bound
cmp
ss
push
push
aad
pusha
dec
xlat
int3
push
sbbb
mov
add
std
mov
dec
fwait
mov
inc
daa
inc
sub
mov
dec
cmp
subps
cmp
lea
and
pop
nop
mov
cmc
adc
xor
cld
add
fcmovb
nop
and
adc
add
dec
mov
mov
fbstp
pop
mov
movsl
shlb
inc
and
movsb
ret
inc
sbb
push
and
pusha
pop
clc
inc
inc
sbb
pop
das
std
stos
push
mov
popa
iret
adc
cmp
mov
cld
xchg
xor
pusha
lock
pop
and
enter
cmp
inc
sbb
sub
dec
add
or
sbb
adc
imul
inc
int
hlt
les
pop
mov
adc
cmp
xor
std
or
shrl
lods
insl
mov
sbb
lea
stc
xchg
xchg
jmp
lret
mov
data16
dec
ror
mov
mov
cli
movsb
cs
pop
mov
jns
sbb
scas
movsl
jecxz
movsl
loopne
jge
mov
and
jae
into
sub
popl
lods
shl
pop
mov
or
or
pop
mov
jne
lcall
push
pop
dec
and
cli
out
out
push
adc
xchg
out
cwtl
das
out
sub
jmp
int3
jle
and
mov
insb
pop
mov
rclb
inc
dec
mov
jnp
push
xor
add
daa
xchg
jle
addr16
fisubl
cs
test
adc
popa
fs
imul
add
or
mov
mov
or
xchg
into
mov
insb
add
out
jp
rclb
push
std
les
mov
test
je
sti
ret
sub
ret
cmc
mov
xchg
pop
mov
mov
pop
xchg
xor
nop
pop
jae
inc
repz
pop
mov
rolb
sub
cmp
push
jle
jno
sarb
movsb
cld
pop
lds
jnp
mov
insl
scas
push
mov
or
mov
cwtl
cli
into
dec
es
add
sub
push
imull
fsubs
fsubl
cmp
sbb
in
stc
mov
and
adc
jbe
in
jle
mov
dec
sub
stos
mov
out
fstl
hlt
aas
fidivrs
pop
inc
sbb
jge
xor
in
push
and
pop
bound
mov
adc
rcl
dec
sub
mov
sahf
ficompl
dec
faddl
xlat
popa
scas
in
ja
xchg
pusha
loopne
insl
inc
js
lret
jp
addr16
outsb
addr16
sti
push
pop
nop
mov
test
push
sbb
add
mov
aad
sbb
in
pop
add
jl
gs
sbb
xor
sub
push
repz
leave
and
jge
scas
ret
push
arpl
sub
push
xchg
jb
push
and
inc
jns
es
fnstsw
js
or
mov
jle
loop
sub
fsubr
mov
lods
test
sbb
inc
ret
loope
cmp
lret
xchg
xchg
push
sbb
sbb
not
add
sbb
les
add
insl
leave
std
xor
scas
movsb
xor
movsl
lret
adc
mov
cmp
ja
enter
stc
cmp
ss
pop
push
adc
loope
dec
icebp
push
sbb
fwait
out
repz
aad
test
subl
fidivs
imul
stos
data16
rolb
pusha
in
sti
mov
popa
inc
push
mov
stos
and
sub
mov
int
loope
out
dec
in
repnz
push
imul
subl
xor
mov
dec
sub
dec
xchg
xchg
out
mov
loop
notb
mov
lds
jns
and
out
jecxz
jge
push
jb
xor
bnd
test
cmp
cld
sub
push
fstpl
icebp
lds
push
scas
lahf
cmp
out
xchg
fstpl
mov
add
sub
idivb
pop
jae
call
das
stc
mov
movsb
sbb
orb
and
mov
add
lods
and
inc
or
jp
inc
in
jbe
xor
jl
imul
adc
je
cmc
out
dec
cltd
out
sahf
in
dec
add
shl
addr16
xchg
dec
lcall
fidivrl
aad
mov
xchg
add
cwtl
dec
cmpsb
cmp
pop
enter
sub
cmp
xchg
cs
mov
xor
aas
sbb
lods
sbb
es
pslld
sbb
outsb
mov
sahf
sbb
push
insl
cmpsb
pop
loop
inc
xor
mov
jnp
mov
add
and
xor
bound
pop
adc
ds
hlt
xor
pushf
mov
stos
sbb
not
sbb
xor
movsl
out
jo
inc
inc
aam
cmpsl
mov
mov
inc
enter
inc
fstpl
mov
xor
sbb
es
cmpb
cmc
in
push
sub
mov
add
mov
or
lcall
add
xor
jmp
repnz
fistpll
sahf
nop
std
aas
pop
in
jno
ret
pop
fs
scas
push
imul
push
push
xchg
rol
std
pop
incl
test
pop
jno
out
mov
cmovb
mov
dec
cmpsb
cltd
sub
adc
mov
cmpsb
clc
pusha
mov
daa
outsl
adc
shlb
xchg
add
pop
and
pushf
inc
lcall
in
xchg
push
and
mov
test
lock
lods
rep
xchg
in
popl
or
mov
mov
loope
mov
push
xor
jmp
push
outsb
push
lcall
add
adc
mov
testl
rclb
sub
lds
test
xchg
cmp
or
ret
push
and
push
mov
repz
pop
push
or
jmp
pop
insl
jle
and
jns
push
fisttpl
ret
dec
rorb
jg
and
sub
test
jnp
mov
mov
popa
outsb
sbb
mov
lea
jne
pop
jnp
sbb
outsb
sub
sbb
insl
adc
mov
clc
mov
mov
dec
faddl
movsb
dec
xchg
or
arpl
xor
and
sbbb
orl
addr16
test
test
mov
sbb
test
fistps
ret
stos
flds
adc
cwtl
pop
and
lock
ss
clc
sbb
xlat
test
repz
mov
fsubs
sbb
jle
ss
decl
push
fdivrs
jp
push
or
dec
push
add
push
imul
cmp
mov
mov
dec
js
daa
stos
push
jl
inc
mov
add
mov
jns
inc
in
adc
dec
dec
pop
jbe
inc
aam
or
test
add
stos
adc
mov
arpl
test
lcall
jmp
jo
jp
mov
inc
push
add
and
shll
cwtl
lret
addr16
xor
dec
dec
jl
inc
push
push
mov
xor
mov
dec
or
arpl
mov
mov
mov
daa
push
xchg
cltd
mov
out
addl
lahf
lahf
xchg
les
dec
addr16
mov
ja
cmp
mov
outsl
gs
sti
jae
out
ljmp
call
rcrl
ss
cmpsb
ret
scas
enter
in
sub
aam
aas
jno
ret
ret
dec
mov
push
pop
cmpsl
xor
mov
jge
dec
mov
push
fs
sub
in
mov
test
xchg
add
push
dec
out
xor
pop
or
mov
out
cmpsb
dec
or
test
test
lcall
mov
and
gs
clc
xchg
insl
xor
movsb
fcomps
loope
imul
shll
jns
dec
pop
test
lods
inc
out
ds
lock
xchg
scas
or
je
sbb
xchg
mov
loopne
in
dec
and
dec
sbb
inc
lret
imul
lahf
ljmp
cltd
jne
addl
loopne
cmp
pop
mov
dec
sbb
stos
pop
xlat
imul
cwtl
in
loopne
aas
jo
lret
js
jmp
lahf
outsl
setae
xchg
adc
pop
ds
sbb
es
out
adc
fnsave
sub
sub
push
sbb
bound
sub
and
loope
idivl
inc
jl
add
std
push
in
fidivl
xor
jp
jp
rcll
cmp
push
sub
rcll
or
call
lock
cwtl
lods
push
sahf
jecxz
push
daa
push
out
xchg
clc
inc
arpl
jae
xor
inc
jge
and
sbb
dec
dec
adc
dec
and
inc
popf
xor
sbb
adc
dec
xlat
pop
cmpsb
mov
push
jb
fidivs
in
and
xchg
xchg
ret
mov
ja
hlt
mov
ret
stc
xchg
push
shll
xchg
jo
ja
add
jbe
push
in
jnp
rcrb
jp
nop
aaa
pop
mov
orb
or
ds
sar
push
add
lods
out
sbb
scas
bt
loopne
in
jl
pop
pusha
leave
rclb
xor
js
rorb
xchg
loop
add
pop
add
int3
push
fisubrl
or
lret
sti
mov
add
jno
repnz
mov
push
sub
clc
sbb
mov
loop
imul
loopne
jl
incl
pop
xchg
push
pop
pop
imul
cmp
pop
mov
or
xor
pop
ret
int3
add
add
inc
lret
stos
and
movsb
mov
jb
ljmp
mov
push
loop
adc
push
stos
fcompl
inc
sub
jb
xchg
or
repz
mov
jp
sti
push
inc
cmp
addl
js
divb
mov
pop
call
shrl
sub
and
outsb
xchg
mov
xchg
ficoml
lds
mov
leave
mov
inc
pop
xchg
roll
lcall
ds
sarl
popf
aas
sbb
mov
and
xchg
popf
and
sub
adc
push
fdivl
pop
mov
outsl
xchg
fildll
adc
cmp
sbb
push
pop
sbb
xchg
in
or
adc
push
lret
shlb
fstl
js
add
jmp
adc
jae
dec
out
pop
dec
sub
jp
fs
pop
mov
xchg
pop
sbb
sub
pop
jg
cwtl
arpl
and
out
mov
cld
mov
cmp
test
lock
adc
loopne
shl
xor
aad
std
mov
mov
dec
xor
test
jbe
inc
negb
and
cmp
hlt
add
inc
and
dec
xchg
mov
xor
shl
mov
push
xor
ss
enter
aam
insl
movsb
enter
push
fbld
das
and
sbb
into
xor
xor
mov
dec
push
inc
scas
test
ret
push
int
sub
sahf
mov
mov
mov
out
push
aam
clc
das
mov
scas
push
push
adc
popf
adc
flds
jl
mov
push
xor
jns
mov
push
out
fsub
mov
or
jle
cli
cmp
outsl
pop
and
scas
or
outsl
push
push
imul
dec
insl
lds
outsl
mov
cmp
shlb
fisttps
cmp
push
sub
cwtl
inc
mov
rorl
fmuls
cmpsl
cmp
pusha
cmp
das
sub
loop
inc
gs
push
fwait
and
jle
xchg
sbb
xchg
es
imull
or
lret
repnz
stos
cmpsb
pusha
push
iret
adc
ljmp
in
jae
call
call
jb
aaa
or
sub
insb
data16
jge
mov
cmp
dec
popa
lret
and
pop
dec
rdmsr
mov
pop
push
shll
test
and
push
sub
ljmp
push
or
out
ja
movsl
sbb
inc
jne
mov
inc
cmp
jnp
dec
pop
mov
jne
mov
scas
dec
or
pop
lahf
ljmp
js
roll
push
push
pop
add
mov
in
push
push
push
popf
adc
jp
cmp
dec
es
jnp
adc
shrb
test
cmp
lods
xor
fidivrs
mov
adc
lahf
mov
scas
mov
rcrl
pop
sbb
divb
push
sub
cltd
fwait
daa
xchg
mov
xorb
rorl
mov
jle
jp
popa
mov
jno
fldenv
xchg
das
fldt
dec
ret
out
lcall
test
stc
push
and
mov
les
xor
sub
ss
sbb
xchg
add
jae
lds
jno
and
xchg
push
mov
lea
pop
or
dec
xchg
sbb
outsl
xor
shrb
inc
sbb
and
nop
leave
inc
fidivrl
adc
jg
push
adc
out
movsb
test
sub
mov
cwtl
fiadds
push
and
pop
xor
adc
jne
pop
fdivs
popf
pop
icebp
scas
mov
cmp
sbbb
fcoml
or
bound
lock
fisttpl
jnp
jne
loop
mov
pop
mov
in
mov
and
pusha
enterw
cwtl
cmpsl
bound
sarl
shrl
sub
cwtl
inc
mov
scas
shlb
sahf
shr
loope
jo
sub
push
jnp
and
aas
pop
sub
sbb
xchg
mov
jns
inc
dec
cmp
lods
mov
cmpsl
inc
push
scas
sub
jl
jae
icebp
pop
repz
mov
add
out
nop
adc
and
mov
xor
rorl
jge
inc
mov
ljmp
sbb
aas
out
sbb
out
scas
mov
push
stos
es
adc
mov
cmp
or
stos
xor
mov
and
xor
xchg
jecxz
cmp
scas
popf
mov
test
xchg
test
and
cli
cmc
lock
scas
fcomps
inc
stc
xchg
lahf
xor
cmpsl
and
aaa
mov
lods
pusha
xorl
jne
fcmovnbe
and
roll
stc
das
fstps
or
ret
cmp
in
xlat
mov
jg
fidivs
jecxz
in
enter
andl
mov
jo
pop
jmp
push
addb
es
mov
mov
xchg
or
lret
and
mov
jno
orb
xor
mov
cwtl
testb
add
and
jle
leave
mov
jbe
sbb
daa
pop
pop
scas
shrb
insb
ret
xchg
and
mov
and
cmpb
jae
iret
push
jbe
cmp
xor
mov
xchg
test
cmp
imul
jae
jmp
test
push
loopne
shrb
mov
adc
xchg
or
cld
inc
mov
fildll
mov
jmp
rorl
test
xor
ds
cld
ret
inc
inc
je
and
in
or
rsm
in
insl
test
movsl
ljmp
out
in
push
xchg
push
push
iret
and
adc
bound
divb
push
ss
adc
pop
scas
cmp
sub
push
stos
push
and
jnp
sub
mov
xchg
adcl
and
sbb
je
adc
add
push
fcos
jno
in
push
jl
ds
insl
mov
cmp
dec
gs
pop
fcoms
ds
dec
mov
cmc
xor
xchg
mov
xlat
mov
xor
outsl
leave
leave
mov
rolb
mull
mov
fcompl
push
sti
cmpsl
test
mov
jne,pn
lea
sub
cwtl
add
test
orl
pop
cmc
xor
cmp
pop
loope
fsubs
push
loope
lods
shr
push
jg
das
lret
mov
data16
fnstsw
mov
or
aad
cld
loop
mov
mov
pop
mov
jo
sahf
iret
and
cmp
rcl
repnz
and
lea
sub
mov
xchg
je
or
push
add
arpl
pmaddwd
mov
mov
add
pop
iret
dec
jl
scas
jp
cmpsl
into
and
pop
mov
arpl
aas
xor
adc
daa
iret
pushf
popf
sbb
ret
mov
inc
int3
inc
movsb
sub
lods
addr16
dec
mov
mov
xchg
mov
xor
movsb
out
loopne
imul
cmp
leave
inc
test
xchg
mov
stos
enter
addl
rcrl
xchg
xlat
aaa
push
enter
inc
mov
xlat
out
test
int
mov
test
aam
add
shr
jg
push
pop
daa
les
inc
popa
loop
sub
jmp
adc
push
adc
xor
shr
sbb
flds
out
and
insl
das
lods
into
or
repnz
aaa
jb
adc
jle
adc
sbb
mov
and
outsb
enter
xor
sub
inc
sbb
data16
dec
bound
test
dec
dec
xchg
mov
xchg
mov
sbb
push
scas
fisttpll
jl
cltd
data16
add
pop
push
ror
into
push
sub
stos
xchg
push
in
pusha
inc
mov
dec
movl
ret
add
jb
lret
call
cmc
arpl
and
cli
jo
in
test
ljmp
cmp
sub
sbbb
xorl
mov
call
mov
add
mov
mov
cmc
std
mov
std
shlb
shrb
xor
outsl
sti
in
and
ret
imul
sub
shr
xor
inc
push
pop
fidivrs
iret
sbb
dec
daa
cmp
rol
xor
and
sbb
mov
out
mov
mov
fcomps
and
inc
cmp
mov
lods
jbe
inc
test
cld
jae
scas
xorl
dec
pop
int3
add
mov
test
jbe
cmp
xchg
pop
repz
push
pusha
call
sbb
pop
std
push
das
xchg
and
dec
sbb
call
lcall
clc
pushf
inc
das
mov
sbb
mov
xor
lods
mov
lods
mov
stos
es
mov
stc
xchg
xchg
cmpsl
and
scas
sub
push
pop
in
aam
repz
out
add
push
and
cld
and
or
ljmp
xor
sar
xor
lret
jecxz
in
addr16
insl
loop
dec
push
rol
sub
rcrl
xlat
fcomp
fiaddl
pop
inc
ja
inc
testb
mov
int3
sbb
xlat
test
push
push
sub
jnp
inc
mov
mov
in
mov
xchg
xor
outsb
out
pop
or
pop
fwait
js
lcall
fisubrl
xchg
dec
dec
add
fwait
jbe
rorb
ds
mov
xlat
je
mov
dec
shll
cmp
fisubrl
push
mov
mov
scas
pop
mov
mov
xacquire
in
test
nop
lods
jp
mov
repz
mov
fsubs
mov
fnstcw
fisttpll
cltd
loopne
loopne
or
out
mov
jmp
add
sti
push
addr16
les
cwtl
call
loop
shlb
fidivrl
stos
mov
xor
xor
xor
cli
frstor
cld
addr16
loope
loopne
outsl
xor
push
loope
add
xor
push
fst
inc
sub
cmp
mov
mov
aaa
and
sub
sub
sub
sub
jge
and
lods
xchg
jno
stc
jl
sub
daa
movl
adc
sahf
jne
and
ret
mov
js
jp
pop
or
imul
add
insl
push
jge
imul
loopne
aad
pop
jno
pop
pop
dec
xlat
inc
fdivl
mov
dec
adc
pop
push
cmp
mov
pop
mov
push
mov
lret
inc
dec
mov
je
insb
xor
je
cmp
mov
cmpsb
jns
movsb
and
dec
repnz
negl
push
std
pushf
pop
jno
negl
xorb
movsb
in
lds
jb
into
xchg
lret
aaa
or
cli
xor
sbb
push
addr16
add
bound
loope
and
cmp
push
pop
int
dec
adc
cli
arpl
mov
dec
or
into
jg
xchg
int3
adc
cmp
sbb
cmp
adc
pop
cmp
clc
push
and
push
push
sbb
push
or
nop
mov
xchg
sbb
loop
xor
scas
push
jo
lods
jnp
outsl
aad
or
fstpl
sarb
sti
ficompl
sub
push
mov
outsw
arpl
in
or
pop
test
ret
inc
jb
pop
and
mov
inc
dec
push
sub
dec
into
aas
xchg
adc
mov
mov
cmpsb
lcall
test
cmp
or
mov
in
pop
inc
cmc
add
sar
sbb
fstp
or
mov
add
sub
call
std
mov
and
adc
cmp
out
les
lret
and
pop
mov
sbb
mov
dec
inc
outsl
add
mov
daa
setp
and
cmp
gs
sub
mov
cmpsb
jle
cmc
jae
pop
inc
or
popf
push
aad
out
inc
outsb
adc
arpl
push
inc
add
mov
add
sbb
push
add
pop
dec
orl
cwtl
cmpsb
push
pop
fcmovbe
out
mov
push
jnp
push
xchg
xlat
xchg
imul
repz
dec
jo
jl
int3
xlat
inc
sbb
mov
mov
lret
mov
sahf
sahf
insl
hlt
dec
ja
lock
sub
jecxz
js
aad
test
das
movsb
add
in
jbe
push
jmp
mov
mov
repz
or
hlt
cmc
scas
push
sahf
int3
je
or
stc
jne
jecxz
pusha
jne
in
fyl2xp1
loope
dec
and
insl
lea
inc
xor
push
adc
push
push
jbe
adc
cmp
leave
xor
cmp
in
sti
mov
mov
test
mov
xor
add
sub
fwait
and
or
jb
bound
jle
outsb
lahf
jnp
gs
mov
test
xor
add
xchg
jae
cmc
leave
push
or
popa
jg
loope
scas
out
pop
lea
int
fcoms
jg
mov
in
jmp
or
mov
cld
fcom
jns
out
mov
mov
jmp
lock
xlat
mov
mov
xlat
inc
mov
sub
mov
mov
xchg
add
stos
fs
sbb
test
cmp
mov
sahf
dec
insl
repz
fs
and
cld
mov
mov
call
jmp
adc
shl
mov
dec
cmpsb
inc
xor
xchg
push
push
lret
test
mov
call
fimull
pop
add
sbb
loopne
cmp
push
int
pop
sbb
in
ds
icebp
jle
dec
test
pop
push
adc
xchg
jle
xchg
ja
inc
sahf
mov
or
adc
orl
xchg
lret
dec
scas
test
ret
dec
fdivrp
xchg
inc
and
not
dec
shrl
mov
mov
mov
ljmp
scas
sahf
sbb
out
xchg
push
imul
mov
icebp
mov
repnz
mov
pusha
scas
test
loop
es
sub
fxch
jmp
out
xchg
or
push
push
hlt
mov
cltd
add
jmp
ret
clc
ret
or
out
lret
jae
xlat
add
xlat
rclb
cli
call
pop
inc
jmp
es
sub
lds
and
lds
mov
into
notb
ja
rol
sub
pop
mov
cmp
les
pop
cs
es
or
aaa
jnp
sbb
jo
and
sti
pop
and
sub
pop
andb
popa
push
popa
pushf
popf
shl
push
bound
jp
sbb
lds
popa
or
jbe
hlt
jg
jo
repz
mov
cmp
movsb
push
inc
ljmp
mull
lahf
aad
test
mov
xor
mov
jge
scas
in
lret
push
in
inc
out
movsb
pop
jg
dec
sbb
pop
sti
push
and
and
sub
mov
lods
inc
or
pop
mov
imul
adc
mov
stc
mov
push
jp
dec
xor
sub
icebp
add
out
rorb
sbb
fisubs
sbb
xor
rcll
stos
push
pop
enter
jo
push
mov
test
jae
pop
ja
sbb
arpl
cs
inc
push
push
sbb
push
push
cltd
pop
push
jb
xchg
adc
ret
or
mov
mov
or
cmp
std
cmp
iret
mov
out
inc
sub
in
cs
inc
pop
imul
inc
adc
jns
push
push
inc
xchg
jecxz
ljmp
mov
mov
inc
inc
inc
and
dec
mov
mov
push
in
lahf
xchg
add
lret
adc
add
mov
xchg
movsl
lds
xor
lds
sbb
adc
hlt
mov
xchg
and
cmp
mov
jne
xor
out
inc
and
out
dec
ss
fcmovu
push
ja
add
insl
xchg
iret
popa
jl
cli
rorb
push
lahf
fsubrl
xchg
lahf
cmpsl
xor
jmp
aas
mov
les
into
jmp
icebp
pop
sbb
or
bound
testb
adc
loopne
dec
aas
rcrb
jne
ret
xchg
add
dec
loop
pop
mov
sbb
inc
imulb
jb
adc
aas
push
jg
lds
push
sbb
push
mov
pop
lea
dec
loopne
fcoms
pop
xlat
sub
sbb
mov
pop
out
inc
push
test
lret
jns
add
mov
inc
sahf
test
mov
roll
nop
jno
cwtl
sbb
mov
mov
out
fisttps
cmp
das
dec
test
inc
fwait
repnz
orl
loope
push
fdivs
adc
mov
mov
cltd
adc
shr
inc
mov
mov
jmp
stos
dec
or
scas
mov
or
aas
enter
int3
and
repnz
lds
inc
mov
pop
mov
sbbb
add
test
sti
and
insl
or
icebp
mov
js
or
cmp
inc
out
into
xchg
sbb
jne
int3
data16
lock
sub
insl
xchg
mov
insb
pop
das
sarb
push
leave
dec
xor
cmp
icebp
stos
imul
xor
push
cmp
jp
dec
push
xchg
ljmp
xor
stc
and
cmpsl
nop
pop
mov
lret
jge
subb
in
xchg
hlt
mov
lret
xchg
jecxz
mov
arpl
les
ss
call
mov
mov
out
pop
sbb
lcall
mov
or
js
out
test
out
or
inc
xchg
aad
xchg
pop
arpl
mov
or
test
xor
xor
outsb
in
lret
outsb
pop
cltd
dec
inc
je
pop
cmpsl
outsb
and
in
add
dec
stc
pop
mov
pop
mov
and
mov
pop
arpl
pop
jo
push
cli
and
cmp
or
push
push
rcl
inc
dec
push
movsb
sub
movsb
sub
push
je
out
and
jmp
jl
cmpsb
ljmp
bound
add
sbb
adc
sbb
jns
push
call
and
or
add
pop
faddl
mov
add
cs
mov
mov
add
fidivrl
clc
mov
je
in
pusha
std
imul
jl
mov
aaa
lcall
js
jecxz
inc
and
or
out
cwtl
and
pushf
jmp
shll
insl
xchg
ljmp
adcl
insl
lahf
jg
fcmovnu
into
xor
test
movsb
imul
cmp
ds
fs
out
and
dec
adc
pop
or
fcmovnu
cmp
push
add
test
inc
sbb
loope
out
jns
ret
bound
lock
enter
outsb
enter
pop
mov
gs
fs
lret
gs
aas
and
pop
fs
dec
pop
test
adc
dec
mov
ds
aam
sbb
and
add
and
cmp
enter
pusha
xchg
mov
subl
xchg
cld
sub
cmp
test
dec
insb
lods
xchg
pop
testb
cli
ret
add
test
mov
arpl
xchg
iret
dec
cmc
daa
push
stc
jmp
nop
pop
out
cmp
imul
cmp
inc
mov
pop
in
sti
cmpsb
testl
xor
subl
repz
inc
cmp
insb
out
pop
cli
bound
jns
and
dec
sub
scas
ljmp
es
add
dec
test
scas
sbb
movsb
xchg
call
rolb
mov
les
adc
stos
pop
lea
jmp
mov
int3
push
push
push
scas
stos
jg
mov
enter
inc
ja
das
dec
xchg
jb
adc
xchg
mov
push
or
push
pop
jg
mov
dec
test
sub
push
in
mov
mov
push
pop
cmp
sbb
xchg
or
add
out
dec
stos
dec
cmpsb
adc
loop
sub
or
xor
or
fsub
aam
fs
sbb
pop
mov
test
mov
add
inc
repnz
and
int
loopne
push
push
gs
leave
jo
xchg
es
sbb
jo
dec
lea
inc
rcrb
pop
lret
jns
or
pop
pop
arpl
stos
lidtl
and
inc
add
push
jl
leave
lret
psllq
lods
cmp
or
stos
sub
ss
repz
push
and
adc
orb
or
mov
adc
rclb
and
movsb
xor
roll
sbb
jb
and
or
xchg
mov
das
loopne
negl
movsl
pop
xchg
into
nop
pop
into
in
jne
in
xor
jbe
outsb
jmp
jne
fsubr
jecxz
in
insl
push
mov
loope
xor
or
ds
daa
dec
dec
xor
mov
or
lea
or
mov
popw
push
mov
sbb
mov
movsb
and
test
dec
inc
or
xchg
ret
cmpsl
mov
and
mov
popa
insl
iret
movsb
das
xor
arpl
push
std
push
sub
mov
mov
jg
push
fbld
fs
xor
fimuls
popf
dec
cmp
mov
out
jmp
test
iret
pop
or
lds
mov
popa
imul
ss
xchg
xorb
jmp
fcmovb
or
push
mov
xor
mov
sub
pop
sbb
sub
pop
imul
and
sbb
mov
rcr
loop
sbb
and
imul
movsb
jmp
out
test
push
push
or
push
mov
sbb
jnp
int3
xor
sub
push
pusha
sbb
into
dec
fs
cmp
sub
xchg
pop
popa
popa
int3
pop
lret
scas
push
in
mov
inc
mov
adc
sub
cld
push
jnp
aam
outsl
daa
push
into
sbb
arpl
push
inc
push
dec
cld
push
jae
arpl
rol
mov
push
test
notb
adc
and
fists
bound
mov
mov
pop
test
push
stc
pushf
jo,pt
test
rorl
jle
cmpsb
hlt
jb
in
mov
stc
jo
and
xchg
lods
aam
popf
adc
popa
xchg
mov
sbb
fcmovnb
cs
cmp
xor
cmpsl
out
sbbl
arpl
pop
std
aaa
cmp
movsb
out
imul
jge
lods
cmpsl
push
pop
mov
pushf
icebp
mov
les
dec
fwait
pop
or
and
push
iret
ja
mov
xor
mov
in
cli
and
xchg
in
adc
rcll
repz
push
js
addr16
ja
mov
cmp
pop
push
fcoml
cmpsb
inc
das
bound
les
cmpsl
aaa
jg
test
lret
outsb
frstor
inc
imul
mov
push
or
or
mov
in
push
lea
push
and
mov
push
xchg
outsb
mov
mov
popa
mov
mov
xor
ret
jp
and
shlb
in
in
push
xlat
xlat
outsb
mov
push
pop
or
divl
daa
mov
push
fmuls
cmp
push
and
test
and
or
mov
cli
mov
insl
enter
add
cmp
dec
rorb
je
inc
xor
xor
xchg
cmp
adc
xchg
loop
sbb
pop
inc
xor
adc
push
fwait
ljmp
mov
mov
adc
xor
xchg
inc
test
xchg
nopl
cltd
or
js
sbb
dec
xchg
mov
sbb
insl
stc
sub
xchg
mov
out
repnz
adc
ret
je
sub
rorb
adcl
cli
dec
gs
stc
rcrl
mov
out
negl
push
sub
xor
cmp
adc
xchg
add
jo
imul
jecxz
push
mov
cmp
add
subl
nop
or
sub
das
sbb
mov
inc
xor
testl
popa
ljmp
cmc
xor
adc
in
cli
xor
sbb
in
test
test
dec
shr
cli
jecxz
push
data16
ja
or
inc
mov
repz
mov
mov
popa
cmp
mov
xchg
xchg
out
pushf
imul
cmp
mov
sahf
mov
inc
jmp
sub
sub
or
push
add
sbb
pop
pop
or
jg
or
inc
push
jns
jae
cmp
call
adc
xor
pop
mov
push
cmpb
fwait
clc
mov
std
cmp
scas
leave
adc
xchg
xchg
adc
mov
mov
mov
xchg
and
xor
mov
sub
mov
test
pop
loope
push
in
mov
sub
add
xchg
test
dec
mov
mov
pop
dec
aam
inc
dec
les
pop
mov
movsl
and
or
xor
loop
sbb
and
in
ljmp
jne
jge
shll
adc
cmp
popa
push
pop
dec
popf
fstpl
xor
sarb
add
add
imul
xor
outsb
push
scas
mov
adc
lcall
xor
inc
cmp
mov
out
mov
jp
mov
mov
or
insb
repz
bound
pop
push
fs
jle
mov
xchg
nop
xlat
in
ljmp
or
pop
jp
das
frstor
ja
push
inc
jmp
popa
stos
jbe
icebp
popf
mov
pop
or
loopne
into
orb
jp
mov
cld
mov
inc
nop
scas
test
lret
jp
imul
stos
mov
nop
out
or
mov
cmpsl
aam
mov
adc
stos
rcrw
cli
sbb
sub
adc
mov
lret
jg
adc
rcpps
stc
push
enter
fcmovnbe
cltd
jecxz
push
inc
outsl
xor
into
jno
data16
cmp
pop
int
sbb
stos
insl
shl
cmp
fstpt
dec
cmp
add
leave
xor
push
mov
lea
mov
push
cmp
popa
add
pop
push
or
mov
dec
pop
mov
pop
or
pop
jne
cmp
pop
and
loope
les
data16
fptan
mov
outsl
and
mov
clc
js
jae
jl
adc
mov
fidivs
inc
les
gs
inc
pop
in
add
inc
xchg
lret
cld
test
xlat
ret
icebp
xor
mov
out
jp
mov
adc
stos
pop
dec
push
mov
inc
test
mov
jle
mov
or
cmc
fs
dec
add
popf
loopne
test
aas
and
je
mov
adc
and
aam
out
dec
cmp
les
mov
jae
testb
or
les
jmp
aam
xchg
aam
cmp
rorb
ss
sub
fbld
and
lcall
mov
lea
test
xchg
pop
or
sbb
push
lds
dec
push
pop
push
hlt
xorb
inc
cmpsl
addr16
xchg
jno
shl
inc
movsb
ljmp
mov
aad
mov
mov
push
jmp
push
dec
push
jno
add
mov
pusha
in
out
or
pop
xchg
dec
shrl
outsl
lahf
test
and
fcmovu
xchg
fnstenv
xchg
lods
sbb
lods
push
pop
je
rol
imul
mov
scas
in
push
sarl
lock
insl
inc
ss
icebp
sahf
push
add
jge
in
push
sti
shll
bound
rclb
xor
outsb
sbb
aam
mov
jmp
dec
mov
sub
push
cmpsb
aas
xor
out
in
inc
testl
outsb
add
dec
daa
mov
arpl
std
pop
popf
cwtl
dec
jge
dec
push
popa
adc
jnp
or
out
or
xor
dec
stos
cmp
out
adc
pop
icebp
cmpsl
pop
maxps
out
sbb
add
hlt
sti
hlt
push
icebp
push
jb
rolb
inc
data16
cmp
inc
rolb
rcrb
cli
shl
mov
dec
push
dec
popf
sti
inc
lds
test
xchg
xchg
jae
mov
jns
sub
jmp
clc
mov
cmp
pop
lods
stos
fildl
cmc
test
mov
push
sbb
pop
add
popf
adc
mov
inc
inc
rolb
or
jmp
ss
pop
ret
loop
enter
xchg
xchg
cmp
aas
adc
insb
dec
xorl
inc
push
cmp
xchg
push
popf
adc
lret
mov
and
cld
and
aam
int3
daa
sub
out
cld
xor
fisttps
pop
fstpt
pop
and
dec
and
mov
inc
test
fimull
mov
iret
lods
sub
enter
fucomip
je
lds
xor
ret
jne
sbbb
aaa
xor
jmp
sbb
jmp
jl
rorl
pop
xlat
mov
mov
pop
lret
jbe
inc
push
ljmp
fbld
dec
lods
xor
bound
test
insl
mov
nop
sbb
cmp
inc
inc
test
inc
cmp
popw
sbb
xchg
jp
lret
test
lahf
pop
lds
and
mov
push
mov
shlb
stc
mov
inc
lds
aam
cmc
stc
sti
dec
nop
push
mov
mov
loopne
out
sbb
or
jmp
stos
cmp
fidivs
mov
out
mov
repnz
and
cld
aam
shrb
cmp
iret
jae
sub
push
xchg
and
inc
int
dec
es
pushf
xor
gs
push
jl
dec
cltd
xchg
adc
mov
pop
leave
jge
jecxz
jnp
push
arpl
push
inc
dec
inc
fdivs
jnp
icebp
xor
push
lret
adc
sbb
repnz
mov
lret
push
test
inc
or
cli
scas
mov
test
xchg
gs
inc
dec
push
inc
stos
loopne
cmpsb
es
test
or
popf
and
jno
xorb
ljmp
inc
dec
icebp
push
dec
adc
not
movsl
pop
mov
in
jae
adc
insl
nop
pop
in
sbb
aas
inc
inc
add
or
pop
out
arpl
lods
push
push
jg
sbb
adc
loop
ds
inc
jecxz
pop
aad
popa
js
jnp
push
cwtl
cmp
divl
movsb
and
push
cwtl
lods
sub
cwtl
mov
add
mov
add
test
add
mov
xor
es
mov
jno
fs
imul
jb
mov
push
sbb
push
cltd
aaa
add
push
cmp
push
test
mov
mov
lcall
or
dec
sub
cmp
lea
lods
movzwl
outsl
dec
inc
add
sbbl
pop
movsl
sbb
and
stos
ljmp
pop
xchg
sub
and
cwtl
mov
mov
stos
subl
idivb
push
gs
enter
add
iret
sbb
in
in
test
jp
in
or
mov
mov
loope
aaa
inc
fisttpl
fadds
iret
mov
mov
lds
daa
xor
leave
push
in
dec
or
arpl
sbb
pop
mov
adc
xor
adc
cmc
xorb
xchg
movl
jns
mov
repnz
ja
and
adc
jl
dec
dec
mov
fimuls
push
ds
mov
pop
xchg
inc
jae
pop
push
dec
push
push
mov
loop
pop
or
nop
mov
sub
mov
cmp
sbb
test
aas
nop
lcall
inc
adc
das
push
jno
ljmp
rorb
rcrb
cmpsl
fisttpll
add
inc
or
mov
fnsave
mov
jmp
in
xorb
nop
daa
std
mov
test
repz
sub
pop
scas
sbb
jmp
sbb
sahf
rcl
sub
fstps
mov
add
lret
sub
daa
jb
jge
insb
scas
fnstsw
imul
mov
and
push
insl
push
sub
push
insl
repnz
push
cmp
or
icebp
xchg
or
fisttps
jo
jne
outsl
jbe
aad
mov
add
cmp
pop
mov
sti
dec
pop
inc
popf
and
dec
push
mov
cmp
pop
outsb
cmpsb
xchg
jg
dec
pop
js
inc
sub
jbe
inc
or
dec
add
xchg
sbb
and
es
xchg
xor
lods
or
push
mov
inc
in
inc
push
lock
adc
cmp
and
push
dec
mov
mov
xchg
xchg
adc
adc
addb
pop
in
dec
jb
jb
or
dec
jns
iret
ds
or
jns
lods
inc
xor
pop
ja
jne
leave
adc
enter
mov
cmp
fsubs
pusha
cmpsb
decl
xchg
adc
cltd
clc
clc
lds
test
xor
or
add
std
and
pop
movsb
mov
jne
sub
ja
iret
mov
jecxz
xchg
idiv
xor
jecxz
or
pop
push
xchg
xchg
xor
mov
scas
jo
ret
push
xor
dec
sub
push
push
pop
jae
aam
lods
test
and
les
mov
add
shl
sbb
adc
lret
loopne
sbb
mull
das
add
jo
lods
inc
xor
mov
cwtl
sbb
es
imull
loopne
inc
mov
pop
je
push
mov
icebp
jb
mov
mov
pop
pop
pop
jbe
shr
das
out
xor
xor
ljmp
lret
aad
enter
sbb
clc
ret
mov
cmp
fdivs
iret
scas
ret
mov
idiv
loope
lods
lret
sbb
das
fisubrs
xchg
ret
test
mov
mov
popf
repnz
pop
jne
and
decl
sbb
insl
in
ficoms
fnsave
in
sub
fdivp
popa
push
push
lea
xor
stos
test
or
mov
inc
into
cmc
js
mov
popf
das
pop
pop
iret
jmp
cli
inc
fcomp
cmpsb
inc
adcl
mov
push
mov
or
sahf
mov
mov
mov
out
das
jnp
dec
lods
add
sahf
jno
sbb
test
mov
mov
jmp
xor
stos
sbb
leave
iret
out
cmp
aas
cmpsb
jb
icebp
fstpt
ss
mov
sbb
shll
or
js
jmp
scas
mov
aaa
popf
mov
aad
ss
test
cmp
pop
sub
lods
and
and
mov
out
aas
pop
test
push
jnp
dec
pop
sarl
xorb
add
mov
ud0
sub
popa
lods
lods
mov
imul
mov
push
and
shll
push
pop
scas
and
adc
leave
notb
inc
sahf
xchg
add
cmc
ret
movsl
lods
iret
leave
jae
xor
mov
xchg
sbb
imul
dec
test
xchg
add
xchg
aad
jmp
mov
outsb
std
add
xchg
inc
jo
push
inc
cld
lods
fcom
cli
ud0
out
in
push
lea
sbb
js
xchg
repz
sbb
xchg
pop
jne
out
rorl
push
xchg
sub
lods
lret
shll
rcll
jns
xchg
shlb
inc
xor
aad
int
lcall
faddl
add
push
fldcw
sahf
adc
dec
mov
sbb
arpl
pop
popf
mull
push
dec
add
cmp
pop
aad
insl
fs
pushf
add
aaa
cmp
bound
shlb
xchg
or
fcompl
int
jmp
std
inc
dec
cs
push
jae
sub
add
andnps
lods
mov
fwait
xchg
movsl
add
pusha
add
bswap
das
loopew
leave
rorb
nop
push
aas
mov
xor
mov
repz
adc
mov
in
mov
ja
daa
push
je
sbb
es
pop
add
xchg
adc
jl
sti
add
shr
call
std
xchg
rcll
pop
icebp
cwtl
xchg
call
pop
lds
lahf
int3
or
or
sub
popf
popf
mov
jo
mov
adc
sti
lea
mov
jle
aam
add
aaa
ficompl
cwtl
jge
or
in
inc
stos
roll
pop
sbb
jbe
lods
and
outsl
fsubrl
outsb
outsb
pmullw
gs
or
cltd
scas
fists
sbb
mov
bsr
mov
imul
sbb
repz
mov
cli
fistpl
mov
cltd
icebp
movsb
sub
imull
jae
xor
adc
xchg
popf
jns
out
mov
cmp
icebp
jb
xor
sbb
shrl
or
sbb
leave
pop
cs
sbb
add
lea
mov
mov
lods
ret
cmp
lcall
xadd
cmp
push
cmp
jno
fimuls
cs
repnz
and
adc
sbb
fmuls
sbb
and
cmp
rcl
sub
add
out
cmpsb
daa
movsb
adc
aas
and
jb
mov
lods
xor
inc
pop
jle
pop
push
lret
inc
imul
fwait
push
xor
lret
jns
adc
mov
push
pop
push
xor
xchg
mov
cmp
xor
inc
mov
mov
mov
mov
or
xchg
pop
pop
xor
les
push
out
test
add
pushl
and
out
mull
movsl
jno
inc
ljmp
cmpsb
daa
cmpsl
sub
xlat
shlb
iret
and
mov
in
clc
pop
data16
inc
fbstp
cmp
xlat
lea
aad
cmp
roll
in
aas
in
dec
push
add
xor
bound
mov
sub
cmp
fisubrs
push
jne
cmc
cmp
add
fs
insb
sbb
stc
or
hlt
test
mov
pop
sysret
push
mov
bound
mov
mov
outsl
mov
mov
test
xchg
sbb
lret
test
jnp
outsl
push
mov
push
push
fcompl
mov
call
dec
jno
insl
loop
fbstp
mov
dec
mov
jo
stos
fsubl
movsl
xacquire
repnz
xchg
call
push
xchg
lret
adc
cld
aaa
mov
push
insb
or
dec
mov
mov
xor
rclb
aaa
pushf
imul
out
lret
aad
shlb
ret
mov
mov
jbe
fidivrl
mov
lods
daa
mov
cmp
mov
fldenv
pop
enter
testb
mov
lods
int3
mov
dec
mov
adc
mov
mov
pop
inc
and
sahf
xchg
sbbb
popf
mov
push
test
add
rorb
sbb
sub
jle
loopne
push
clc
enter
outsb
jb
pop
rorl
hlt
mov
inc
shlb
mov
mov
pop
gs
jg
mov
popf
cmp
cltd
mov
mov
mov
adc
es
idiv
push
out
test
push
sub
mov
sahf
sub
push
jnp
imul
addr16
sub
and
xchg
mov
mov
or
data16
hlt
xchg
sar
dec
out
push
ss
pusha
ror
push
sub
scas
bnd
fldt
mov
lret
pop
pusha
scas
and
xor
inc
sub
jge
addr16
push
or
cmpsb
cmp
ret
and
mov
fs
xor
fadds
xor
mov
stos
arpl
push
enter
sbb
xchg
sbb
push
pop
mov
push
pusha
out
cmc
or
sub
jp
xchg
xlat
fdivs
lret
dec
into
orb
lcall
pop
adc
cmp
jge
dec
adc
xor
mov
lcall
lods
shl
push
nop
xchg
xlat
sti
mov
fbstp
jb
sbbb
mov
inc
test
inc
stos
in
out
lahf
pushf
sbb
paddsb
adc
test
loopne
fisubrs
mov
je
rclb
pushf
add
sti
lahf
sbb
addr16
loopne
mov
imul
pinsrw
negl
lcall
push
inc
xor
loope
inc
test
scas
mov
jl
out
movsb
lds
mov
aam
fisubl
sub
pmulhuw
je
mull
xchg
mov
pop
push
jno
nop
rorl
or
je
sti
int3
add
mov
or
mov
adc
bound
scas
jmp
jnp
cmc
bound
pusha
cmp
fcoml
gs
cmc
and
aas
sub
pop
xchg
sbb
pop
add
sub
in
sub
jp
mov
popf
js
mov
pusha
dec
outsb
das
mov
sbb
dec
insb
iret
pop
xchg
xor
adcl
xor
lods
test
arpl
xor
idiv
xor
je
xor
mov
xchg
mov
inc
test
std
mov
or
rcrl
adc
add
add
pmaxub
shl
sbb
cmp
fisttpl
inc
cmpsb
and
adc
movsb
mov
adc
insl
inc
dec
rorb
sub
outsb
ffree
mov
in
popa
lods
mov
xchg
add
jp
out
daa
or
push
popa
mov
jle
jnp
mov
push
in
ljmp
cld
pop
jns
push
jmp
popa
iret
sub
in
and
rorl
xor
or
test
or
ret
stc
mov
inc
mov
orb
or
mov
mov
mov
cmpsb
sbbl
paddusw
cli
faddl
div
sbb
add
leave
stos
stc
jno
inc
pusha
icebp
mov
mov
jo
ror
faddl
xor
cltd
scas
mov
push
cli
out
rorl
sbb
xchg
das
mov
orb
cmc
shl
add
and
lods
add
sub
sbb
mov
inc
xor
add
fwait
sbbl
xlat
fnstcw
mov
jmp
mov
sub
rcl
jge
sub
push
outsb
lock
lcall
sub
mov
jmp
out
dec
je
or
xchg
push
es
pop
cwtl
mov
imul
pop
and
aas
cld
cmp
sbbb
addb
xcrypt-cbc
cmpsl
push
pop
inc
nop
mov
pop
pop
xor
jle
mov
dec
adcb
sub
testl
das
mov
mov
cmp
inc
cwtl
call
rcr
mov
mov
jmp
sbb
gs
xchg
aad
test
jecxz
psubd
dec
loop
pop
mov
ja
mov
leave
in
mov
test
push
mov
fisttpll
pusha
jmp
sti
jo
inc
movsb
ficoms
pop
cltd
pop
mov
in
subl
adc
pop
movsb
push
sub
popf
and
cmp
das
and
scas
das
jne
and
xchg
call
popa
add
or
or
or
pop
js
sbb
and
jno
push
jno
outsl
xchg
ljmp
add
or
pushf
out
test
imul
mov
pop
sbb
imul
and
sub
test
es
hlt
add
jge
lock
imul
in
lods
dec
negl
movsl
mov
movl
ljmp
das
xchg
xor
push
cmp
jge
push
cld
fisttps
and
lock
les
jne
js
icebp
addr16
sbb
sbbl
sbb
xor
jle
or
leave
adc
jo
ss
or
cmpsl
lods
ss
rcll
xchg
mov
xor
pop
shrl
add
sbb
xchg
outsl
ds
or
pop
jb
add
xor
cs
in
addr16
ret
mov
mov
data16
pop
push
jns
hlt
clc
jp,pn
and
jp
sbb
push
pop
imul
pop
out
test
aaa
int
sub
mov
dec
call
xchg
jmp
jecxz
leave
sti
and
insb
xchg
rcrb
mov
mov
ret
xor
repnz
rolb
sbb
add
js
arpl
and
jmp
sti
test
pushf
mov
lods
dec
add
imul
sahf
push
aam
fists
or
sbb
insl
xor
stc
loop
cwtl
into
outsl
es
cmpsl
sub
aaa
lock
fldcw
pop
xchg
and
call
cmpsb
mov
adc
xor
loope
cmp
ret
xorb
dec
faddl
sub
and
sub
and
das
push
xchg
punpckhdq
sbb
and
outsl
push
notb
cwtl
xchg
cltd
mov
insb
mov
arpl
sbb
test
jae
mov
jle
mov
and
in
jae
test
dec
cli
in
jne
push
int3
xchg
jg
movsb
imul
scas
or
hlt
xor
jmp
loop
cmc
popf
sbb
out
inc
inc
mov
jne
jecxz
jae
into
fdivp
xchg
fcmovne
std
cmpsb
push
xchg
mov
lods
idiv
push
mov
ror
divb
clc
loope
mov
fnop
adc
add
push
stos
pop
push
ror
ss
xchg
lods
add
push
jmp
push
mov
negl
and
lds
or
sub
repnz
sbb
sbb
out
loope
insl
clc
rorl
inc
insb
ficoml
cwtl
fcomps
jg
stos
push
inc
jle
adc
sbb
cli
icebp
insl
cli
or
jo
jl
xchg
cltd
jnp
dec
pop
push
aam
lea
dec
push
dec
fcomps
ret
sub
or
push
pop
scas
adc
fsts
pushf
stc
sbb
xor
ret
enter
subb
call
mov
xor
fldcw
pop
aad
dec
mov
insb
xchg
push
adc
dec
aam
jmp
mov
jge
adc
lods
mov
sbb
or
mov
cwtl
xor
mov
mov
or
imul
test
hlt
cmc
xlat
leave
gs
test
mov
roll
add
ja
cmpsl
repnz
hlt
pop
loopne
adc
cmp
cmpsl
adc
iret
js
cmp
inc
out
and
je
mov
adc
dec
push
sbb
jns
sbb
stos
ljmp
pop
loope
jbe
shlb
pushf
or
or
lcall
dec
xor
cli
jnp
dec
push
jg
xchg
imul
add
jae
pop
gs
jg
inc
sub
rcl
xor
aad
sub
pop
push
adc
movsb
mov
xor
mov
mov
and
loope
sti
aad
mov
ljmp
mov
out
call
mov
daa
imul
xchg
pop
dec
pushf
cmp
div
and
movsb
into
adc
dec
cli
mov
icebp
push
push
lds
pop
xor
lock
mov
xchg
add
pop
pop
mov
fwait
rorl
inc
jne
gs
lret
cmp
iret
ljmp
lahf
and
lods
sub
out
jmp
insb
mov
jp
stos
inc
jl
sbb
or
and
pushl
psrld
jae
addl
ljmp
jne
mov
cmpsl
arpl
ljmp
sub
or
subb
mov
cmp
add
test
jae
in
mov
sub
add
mov
push
or
mov
xchg
lahf
mov
mov
das
jbe
mov
push
es
lods
cli
nop
sub
jmp
adc
adc
mov
data16
data16
cltd
cmp
das
sbb
mov
sbb
loopne
push
jl
aaa
and
dec
int
xor
sti
in
sbb
push
adc
rcl
outsl
sub
mov
xchg
ret
sub
dec
fiadds
in
jo
movl
push
cmp
pop
cwtl
push
push
movsl
cmpsb
bnd
or
into
jecxz
cmp
inc
test
add
fwait
xchg
inc
stos
inc
xor
out
shrb
push
sub
insl
sbb
fxch
xchg
faddp
dec
insb
mov
or
lahf
jge
cmpsl
and
mov
je
xor
mov
gs
dec
sbb
xchg
adc
stos
inc
pop
icebp
dec
stos
fcmove
jb
pop
pop
inc
daa
into
andl
imul
mov
popa
and
scas
mov
and
inc
hlt
add
mov
mov
stos
test
ja
push
cmp
add
test
lds
xor
fmull
fcompl
sbb
idivb
scas
xor
addr16
sarl
mov
mov
stc
cmp
pop
pop
rorl
mov
cmp
and
movsl
in
sub
mov
aam
out
sbb
or
and
in
mov
es
aaa
xchg
stos
call
nop
pushl
clc
xchg
jmp
sbbl
pop
add
adc
adc
fstps
sahf
push
enter
cld
sbb
jl
sbbl
mov
out
xchg
int
sbb
push
cmp
out
jmp
sti
and
mov
cmc
mov
inc
cs
sbb
imul
adcl
pop
inc
mov
xchg
movsb
shll
xchg
or
mov
lahf
or
adc
test
xor
xchg
or
jo
rorb
inc
adc
xor
mov
and
decl
mov
mov
mov
push
xchg
shrl
jmp
cli
add
cmova
xlat
xchg
inc
hlt
cmp
dec
shll
xor
repz
fstpt
sub
arpl
or
bound
add
repnz
imul
daa
sub
js
data16
or
out
inc
loop
mov
jne
pop
pop
adc
mov
sbb
subl
adc
cltd
hlt
mov
pmuludq
pop
mov
and
lahf
loop
loop
mov
mov
loop
stos
fsubrl
push
lock
mov
dec
mov
xor
sub
or
adc
lahf
jmp
in
cmp
adc
mov
imul
movsb
inc
push
dec
xchg
cld
mov
rorb
and
lahf
stos
mov
fadds
je
ds
mov
shrl
cmc
mulb
pop
adc
jmp
sbbb
in
fs
mov
loop
ret
mov
repz
sbb
pop
or
cmp
inc
xor
jge
push
xchg
leave
mov
cwtl
jle
stc
xor
mov
xchg
inc
rcrb
or
pop
subl
rclb
push
cwtl
daa
mov
jne
jae
or
jo
outsb
int
xchg
push
cmc
push
push
cmpsb
arpl
mov
fsubl
mov
loope
pop
shr
mov
inc
and
inc
lret
push
mov
mov
mov
mov
lods
mov
scas
cmp
clc
test
xor
leave
mov
mov
test
pushf
stos
js
lods
movsl
and
xchg
and
imul
lahf
xchg
iret
inc
push
adc
cld
push
negb
push
ss
iret
mov
lods
imull
cltd
repz
imull
mov
cld
and
mov
loope
in
in
mov
shlb
popa
je
mov
sub
xor
push
sahf
cwtl
mov
sti
fsubs
fadd
ret
int3
in
dec
mov
mov
aas
sarb
ss
push
gs
aas
in
sub
out
jmp
inc
xchg
inc
lret
popf
sub
pushf
add
pop
adc
or
lcall
xor
ja
std
rcll
pop
cmp
push
mov
shr
arpl
add
push
divb
adc
jb
ret
sbb
pop
and
dec
or
pop
lods
jo
dec
and
in
inc
sbb
mov
mov
mov
in
jb
pusha
movsb
repz
call
popf
xchg
jb
inc
movsl
or
mov
jae
mov
cwtl
cli
iret
orb
fcoml
push
insl
mov
mov
out
mov
lahf
fsubrl
sbbl
push
int
add
inc
sbb
insb
loope
nop
jg
inc
xchg
ret
enter
sbb
xor
mov
es
insl
movl
push
pop
mov
jbe
lds
jle
cmp
not
push
js
and
arpl
jo
pusha
call
mov
addr16
insb
stc
fldcw
mov
ljmp
pushf
xchg
dec
push
loope
pop
fsubrs
dec
mov
mov
mov
mov
imul
cld
imul
inc
cmp
cmpsb
cmc
repnz
xchg
mov
add
aad
dec
cld
sub
ror
popf
out
lds
adc
dec
mov
bound
adc
push
xchg
psadbw
add
je
daa
pop
ljmp
loope
xor
dec
pop
xchg
repz
push
rcr
xchg
push
fs
jmp
lea
pop
dec
ror
add
jbe
cmp
negl
dec
mov
cmp
std
or
jns
push
xor
push
jns
lods
mov
jp
je
cmpsb
mov
mov
or
add
push
xchg
add
cwtl
out
jnp
cld
fs
inc
js
and
out
jp
aam
dec
std
jp
ss
mov
push
xchg
pop
push
jmp
mov
mov
imul
mov
movsl
inc
inc
cmp
mov
xchg
es
cmp
orb
mov
out
mov
mov
add
scas
and
cmp
pop
push
adc
or
sub
jae
and
inc
mov
stc
add
out
ja
outsb
lock
pop
cltd
mov
cmc
inc
loope
add
cld
push
fdivrs
movsb
rorb
mov
add
aaa
and
push
or
inc
lds
jmp
lahf
add
push
pop
in
cwtl
cmp
pop
mov
and
jae
adc
push
push
aad
rcr
sti
inc
lahf
fxch
jmp
pop
add
sbb
or
js
jp
cmp
adc
xchg
rolb
add
lret
into
adc
push
xor
out
xor
mov
adcl
jge
popa
scas
pop
jp
push
hlt
imul
dec
pop
mov
cmpsl
aas
lock
sbb
cltd
or
jae
sub
dec
sarb
dec
xchg
gs
push
jae
das
jmp
push
mov
push
subb
sbb
stos
cltd
dec
xor
cmc
xorb
mov
les
mov
lock
cmp
add
mov
rolb
dec
add
or
xchg
fcmovnb
xchg
push
jl
ljmp
cmp
jbe
adc
xor
sbb
xor
daa
leave
iret
das
frstor
push
hlt
and
sti
push
subb
int
cmc
adc
lds
jae
into
jae
adc
out
jbe
pop
dec
ja
xchg
enter
sub
xlat
cmc
jmp
sbb
dec
push
fisubs
jnp
call
mov
push
jno
pop
adc
or
dec
pop
mov
mov
sbb
and
loop
adc
daa
add
fistpll
jae
push
in
shrl
out
inc
adc
lcall
cwtl
xchg
mov
or
js
imul
mov
es
dec
sbb
add
clc
fisttps
out
xchg
adc
and
loop,pt
mov
movsl
mov
dec
inc
fwait
testb
pop
js
sub
int
or
jo
xchg
or
lret
mov
data16
cltd
add
repnz
jle
out
lahf
or
fadds
stos
push
push
ffree
fs
and
test
sub
test
sub
sub
mov
out
mov
ljmp
outsb
test
push
push
jb
loopne
test
add
jge
push
push
test
mov
stos
jns,pn
sti
sbb
pusha
sti
jl
inc
sub
sbb
test
mov
andb
xorl
push
cmp
mov
lcall
cmp
loopne
imul
popl
mov
inc
aad
xchg
xchg
and
repnz
inc
popf
or
lods
out
sbb
icebp
sub
pop
jmp
lds
jg
xor
lock
inc
sub
sbb
adc
in
xor
popf
adc
xor
pop
sub
aam
cmpl
push
lods
adc
dec
sub
imul
lcall
call
xor
iret
movsl
mov
inc
add
inc
xor
rcl
sbb
mov
mov
or
je
and
sub
sti
pop
mov
jle
test
dec
mov
and
sbb
inc
std
jecxz
mov
fldt
cmpsl
das
mov
int
out
jno
push
in
popa
pop
pushf
lret
inc
xchg
xor
xor
nop
dec
and
push
pop
mov
adc
fsubl
dec
mov
lahf
repnz
sub
lods
call
fnstcw
pop
xchg
stos
adc
outsb
xchg
xchg
ret
scas
pusha
nop
in
test
or
xchg
stc
fcomip
mov
fisubrs
dec
jo
lock
cltd
test
xor
bnd
push
cs
ljmp
adc
jmp
jle
and
popf
lock
push
fcomps
rol
xor
daa
pop
jge
movsb
xchg
andl
sbb
and
or
mov
aad
out
cmp
out
inc
scas
into
in
pop
pop
sub
fsts
cwtl
ja
int3
and
mov
imul
rclb
cmp
pop
add
insb
push
test
push
dec
jl
jo
sub
inc
mov
sarb
jg
mov
push
mov
or
shrb
inc
sub
push
mov
mov
das
in
cwtl
ja
cmpsl
mov
and
mov
xor
arpl
and
out
shll
mov
pop
rol
nop
mov
mov
mov
jbe
insb
hlt
push
push
xchg
pop
bound
xchg
jbe
push
fisttpll
inc
dec
lds
ljmp
lea
jb
out
ja
lock
std
aaa
into
sbb
fnstsw
push
aas
add
jns,pt
fmuls
or
xchg
rcll
mov
fisubrs
insb
push
xchg
test
ret
adc
mov
cli
dec
sbb
mov
jae
sbb
rclb
sbb
adc
jns
idivb
xchg
or
pop
ljmp
add
fiaddl
xchg
jle
dec
sbb
test
sbb
add
insb
orb
insl
and
pop
dec
xor
in
fwait
sub
dec
mov
pop
pop
pushf
sub
push
ret
movsl
fisubs
inc
sbb
jl
cmpl
scas
dec
lods
and
pop
mov
lods
jecxz
pop
subl
cltd
jg
xchg
mov
push
jle
int3
push
sbb
xor
cwtl
mov
mov
cmp
pop
mov
push
subl
out
daa
clc
int3
es
fdivrl
sbb
mov
mov
jge
fistps
xor
ja
out
das
jge
shrb
push
push
stos
stos
in
xor
ret
push
popa
stos
mov
cmp
lods
push
xchg
fwait
lods
adc
xchg
decb
dec
test
lods
jae
ret
xchg
scas
mov
push
inc
jge
push
or
or
lret
ljmp
sbb
imul
insl
lods
sahf
pop
jnp
call
xor
mov
insl
pop
push
aam
add
rolb
adc
pop
or
fnstsw
mov
cmpsb
or
xchg
mov
cmp
jmp
sahf
andl
loopne
loop
movsb
xor
jmp
shll
add
repnz
or
inc
push
je
sbbb
neg
enter
daa
loop
in
xor
shll
add
xor
xchg
cmp
jbe
mov
sbb
mov
pop
ss
int
push
xor
stos
cmc
adc
fcmove
gs
lret
pop
inc
and
sub
ljmp
push
push
pusha
mov
xor
mov
push
sub
aaa
sbb
xor
adc
pop
sub
pushf
inc
fldcw
add
inc
loope
sbb
jnp
gs
insb
jns
addr16
mov
imull
addr16
jge
dec
push
inc
bound
mov
pop
sahf
ds
mov
xchg
lcall
int3
dec
shll
mov
sub
or
or
dec
mov
rcrl
rcll
lea
adc
lea
sub
test
mov
and
imul
mov
jle
xchg
lods
cwtl
add
and
orl
in
mov
sti
ret
loop
lock
idivb
inc
xor
xor
jbe
std
bound
fnstsw
jle
mov
inc
mov
mov
push
icebp
push
lret
push
lea
call
xchg
adc
pop
xchg
jecxz
pop
orb
cmpsb
dec
cwtl
sarb
rcrl
lock
imul
jnp
dec
dec
movsl
lea
mov
mov
jae
or
rclb
and
je
push
fmuls
or
shrl
or
dec
aas
sub
ja
xchg
out
mov
mov
movsb
es
sbb
insl
adcl
dec
jb
sbb
js
ljmp
ret
cltd
icebp
push
and
and
stc
mov
inc
popa
dec
xor
and
jno
std
test
cmp
inc
in
sub
mov
xor
int3
inc
das
jnp
sbb
xchg
aas
fwait
cmp
loopne
add
in
enter
sti
lods
sbbl
and
inc
and
stc
fisubl
addl
cmp
ret
test
and
sbb
jl
jbe
dec
sub
into
test
imul
into
dec
jle
jmp
lahf
lds
and
inc
call
inc
aad
test
push
je
gs
rorb
orl
push
in
inc
stc
int3
out
dec
and
xor
rclb
rol
jp
pushf
dec
sahf
hlt
xchg
gs
sbb
shll
cld
nop
and
sbb
stos
outsb
out
sbb
fwait
jecxz
add
xor
mov
sbb
mov
pop
mov
jle
pop
leave
lds
aam
jbe
arpl
add
in
dec
inc
imul
filds
xchg
xchg
add
int
xchg
and
sub
leave
es
into
imul
ret
das
sbb
cwtl
jmp
jl
fistpl
pop
test
aad
push
inc
sahf
adc
js
inc
pop
leave
mov
or
and
mov
aaa
add
cmp
adc
jns
lret
mov
loopne
push
cmp
shrl
xchg
jmp
jbe
xor
or
int3
mov
je
cmc
inc
cmp
inc
jp
aam
mov
test
in
fstcw
mov
fs
das
into
negl
mov
and
sub
jle
xchg
lock
loop
add
subb
xor
xlat
or
in
or
fldcw
cpuid
or
jecxz
sbb
in
out
xchg
out
cmp
int
movsl
mov
add
enter
push
scas
nop
jo
gs
loope
mov
fbstp
pop
adc
lret
push
ror
repnz
dec
mov
jg
lret
mov
push
dec
nop
xor
add
inc
pop
bound
cmp
enter
inc
fcomi
lods
in
jmp
sub
icebp
xchg
and
dec
or
pop
mov
rcrl
inc
xchg
xor
into
sub
stos
scas
lret
lahf
push
mov
jge
icebp
jp
pusha
or
outsl
push
es
add
je
jo
repz
push
sarb
xchg
out
mov
inc
dec
and
or
ret
inc
das
inc
and
push
fnstcw
mov
xor
push
dec
mov
pop
mov
aaa
dec
ficoml
repz
ret
clc
push
or
notb
jb
xor
insb
ja
outsb
cmp
test
lods
jo
xchg
pop
outsl
std
cmpsl
mov
push
bound
push
jl
or
adc
adc
sbb
fnstcw
jbe
push
ds
repz
xor
das
cmp
popa
aas
popa
xchg
ret
cmp
sahf
inc
sub
adc
inc
repz
push
pop
leave
fwait
test
test
inc
fcompl
js
outsl
in
popl
stos
fnstenv
jbe
addr16
dec
inc
jl
mov
and
sbb
pop
dec
jmp
mov
fildl
lret
inc
add
cs
jge
rclb
mulb
outsl
in
pop
inc
insl
test
xchg
ljmp
or
cli
xor
inc
adcb
hlt
cmp
mov
inc
rcl
and
pop
mov
rolb
push
jge
divb
jg
loope
lea
mov
cltd
rolb
sbbl
jnp
in
or
push
lret
adc
lds
cld
ds
js
xchg
test
or
invd
pop
pop
dec
es
push
sbb
xor
test
out
push
sub
pop
les
addl
jns
sbb
mov
mov
pusha
xchg
popf
inc
mov
mov
jp
lret
add
js
lret
add
and
push
repz
out
and
push
test
mov
mov
jmp
jnp
push
bound
imul
dec
dec
mov
dec
dec
dec
cwtl
movsb
testb
jb
in
jg
lods
outsl
sahf
xchg
xor
mov
loope
and
jle
inc
movsb
scas
push
mov
xor
arpl
lock
push
shlb
push
notl
pop
mov
pushf
push
int3
pop
sbb
lret
rorl
sub
dec
mov
cmp
repz
aam
stc
push
outsl
clc
iret
cmp
cmp
testl
xchg
xlat
test
bound
fnsave
call
imul
lret
jo
adc
adc
imul
and
mov
out
mov
adc
ja
sahf
lods
bound
add
jl
jmp
push
push
mulb
gs
inc
sti
pop
fdivrl
push
pminub
push
inc
fadds
or
movlps
inc
sbb
outsb
sub
dec
cli
jbe
dec
xchg
push
xchg
xchg
inc
enter
jmp
pushf
inc
loope
lahf
inc
enter
shr
mov
adc
mov
jns
and
sub
push
pop
sbb
xchg
or
ficomps
dec
pop
sar
sti
fcomps
adc
sahf
mov
push
mov
js
mov
repnz
sahf
mov
mov
insl
out
stos
xchg
pop
aad
loopne
hlt
adc
jmp
xchg
sub
and
outsb
xchg
addr16
pop
fwait
add
rcr
pushf
int3
movsl
inc
xchg
dec
jg
dec
cmp
mov
lcall
sbb
sub
mov
mov
movsl
jbe
sbb
lds
and
xchg
lods
pop
das
insb
jne
jg
pop
or
push
adc
out
or
imul
in
xchg
jo
push
cmp
stos
dec
mov
imul
mov
test
push
push
pop
mov
and
scas
adc
dec
mov
lret
mov
sbb
xor
ret
pop
mov
rcrb
sub
mov
jae
imul
lcall
mov
xchg
repnz
fdiv
jne
jne
jecxz
shll
cld
out
cmp
popa
xchg
jmp
aad
xchg
inc
xchg
shl
sbb
xor
fdivs
xchg
lret
pop
cmp
popf
and
je
sub
das
xor
imul
cmp
stos
mov
inc
nop
stos
pushf
insb
test
enter
cs
cltd
jbe
loop
fildl
imul
jmp
jno
mov
cmp
mov
jae
call
ljmp
arpl
jmp
outsb
or
push
jecxz
cltd
push
inc
fistps
negl
inc
or
inc
shll
dec
jg
mov
fdiv
dec
pop
mov
xor
inc
mov
inc
xchg
hlt
scas
and
add
xchg
inc
xor
xchg
jne
iret
cmpsl
test
test
fadd
in
repz
ret
cmc
cmc
bound
fcoml
stos
rcl
push
ss
mov
in
pop
imul
cmp
jno
shr
push
mov
fdivrl
push
imul
dec
gs
fistps
cmpsb
scas
xchg
and
outsb
jecxz
xor
cwtl
sub
jns
in
cmpsl
imul
hlt
sub
mov
push
push
dec
popa
enter
mov
scas
mov
ss
add
sub
xchg
mov
fwait
or
jge
mov
jg
fistps
das
in
dec
add
pop
dec
mov
push
xchg
stos
jl
xchg
inc
imul
testb
stc
xchg
outsb
in
aas
cmpsb
cmpsb
push
cmpsb
pop
movsl
add
xchg
mov
adc
jns
xchg
into
dec
lret
xchg
subl
lahf
pop
lds
sbb
jge
jl
fldcw
cmpsl
push
lea
adc
mov
out
xchg
arpl
in
xor
sub
xor
lahf
mov
rcl
addl
ret
in
filds
sbb
sbb
dec
jno
dec
cmp
jns
push
nop
xor
das
shl
mov
adc
dec
lea
sub
ficompl
inc
adc
gs
jno
movsl
pushf
inc
add
ror
cs
mov
loop
subb
push
jl
fs
push
and
xchg
movsb
gs
pop
push
sub
xchg
inc
sahf
add
inc
sbb
xor
inc
inc
mov
das
outsb
mov
movsl
outsl
addl
cmp
mov
and
shrl
shll
or
cmpsb
sbb
fwait
mov
sbb
pop
sbb
mov
leave
leave
ret
sub
ja
adc
jbe
dec
mov
out
jns
push
in
dec
and
shl
aad
xchg
mov
out
mov
jb
or
loope
mov
lahf
mov
out
xor
and
fwait
and
cld
jle
add
rcll
shlb
ljmp
xchg
je
mov
and
outsb
jmp
std
xchg
mov
lret
mov
push
stc
cmp
xchg
jl
inc
pop
mov
pop
jg
fnstenvs
stos
outsl
sub
repnz
inc
js
pop
jb
cmpsl
mov
pop
cmp
dec
dec
sarb
stos
rcl
mov
adc
sbb
into
aam
push
cld
out
pop
mov
xor
push
aad
cwtl
sub
pop
mov
push
call
insb
inc
push
xchg
xchg
and
repz
pop
push
mov
sbb
pop
mov
icebp
fdiv
loope
test
jno
mov
out
cmp
rorl
jecxz
jae
outsb
movsl
aam
pushf
mov
dec
fwait
sub
inc
aam
int3
inc
int
jno
insb
jmp
or
and
jp
jl
icebp
adc
add
icebp
cmp
mov
rcll
cmpsb
sub
adc
mov
mov
pop
inc
jmp
mov
cmp
jo
and
or
mov
xchg
jo
push
fadds
adc
mov
out
insb
shrd
bound
cmp
dec
lahf
or
stc
mov
pop
jge
pop
dec
sbb
cmpl
and
mov
sub
divb
mov
insl
jle
int3
fldcw
adc
and
sub
adc
xchg
jmp
stc
pop
stos
shr
cmp
cmp
or
sbb
cltd
jo
jo
pop
sbb
ja
jnp
adc
mov
fcmovnu
rorl
cltd
or
out
test
inc
aaa
fnstcw
adc
std
aas
lret
mov
loopne
int
cmp
mov
cmp
mov
outsl
dec
loopne
movsl
pop
jo
bound
inc
clts
in
jecxz
inc
imul
int3
das
sub
mov
adc
mov
mov
xchg
sbb
out
out
icebp
ret
add
ret
push
jns
lret
or
xchg
jns
xchg
icebp
cmp
sbb
add
mov
mov
insl
outsl
fidivs
scas
xchg
stos
inc
dec
push
sbb
or
scas
push
pop
sbb
pop
iret
mov
mov
addr16
sbb
sbb
frstor
adc
sub
lods
ljmp
add
pop
icebp
mov
push
test
sbb
ds
jg
push
mov
add
sbb
fs
push
in
mul
jge
mov
out
jl
lret
cmp
sbb
or
mov
addl
and
jbe
push
ss
inc
ja
adc
aas
imul
pop
and
dec
pop
mov
sub
add
imul
sbb
jl
or
arpl
add
mov
mov
hlt
push
xor
mov
outsl
xchg
xor
stos
divl
jmp
mov
dec
imul
sub
sbb
mov
idiv
add
icebp
inc
out
mov
cmp
dec
test
mov
ret
add
xchg
jl
xchg
sub
pop
jnp
int3
xchg
inc
push
adc
shlb
pop
cmpsb
sbb
imulb
rol
xor
xchg
fs
in
fisubrs
fbld
sub
ficompl
fisubrs
and
rcr
pusha
stc
jb
leave
cs
addb
idivl
scas
int
dec
iret
in
shl
mov
hlt
mov
mov
into
sbb
sub
pushf
cmc
lods
cmp
incb
sub
xchg
mov
adc
jp
bound
mov
in
sahf
jbe
mov
lret
add
jns
adc
icebp
cmp
pop
jg
push
cmc
xchg
loopne
mov
mov
shlb
or
arpl
cmc
pushf
sbb
loope
cmp
stos
cwtl
push
dec
inc
dec
cmp
mov
js
mov
inc
push
pop
fs
inc
hlt
shrb
faddl
sbb
jmp
sbb
loopne
push
popf
inc
bound
aam
push
stc
pop
test
iret
imul
sbb
mov
mov
xor
es
cmpb
sti
add
xchg
out
jbe
mov
mov
pop
fdivs
sahf
sbb
fiadds
dec
dec
xor
lahf
call
pop
std
cltd
loope
cs
aaa
xor
mov
and
es
add
pop
aad
jp
push
cmp
cmp
mov
push
ds
lds
dec
data16
js
sti
xchg
cld
xchg
mov
data16
xchg
lahf
pop
gs
jg
push
cld
dec
rcrb
inc
btc
inc
filds
ret
adc
mov
add
mov
sbb
cmp
scas
mov
rcll
mov
or
jbe
rol
push
stos
mov
test
aaa
data16
loop
push
aad
xchg
push
or
js
lods
pop
xchg
xchg
jb
adcb
dec
repz
mov
and
xor
loopne
mov
mov
sti
mov
cmp
loopne
mov
xchg
ror
or
cld
mov
push
movsb
pop
scas
pushl
or
pushf
ret
testl
enter
cmpsb
dec
arpl
jne
pusha
jg
push
cwtl
mov
mov
clc
add
inc
jbe
jnp
push
pop
push
ret
aaa
jg
jg
add
enter
push
add
add
add
or
adc
jl
test
and
stos
jo
sbb
dec
adc
jge
adc
mov
mov
and
sub
mov
mov
out
and
into
add
arpl
mov
lcall
rorb
and
jg
dec
xchg
mov
xchg
jge
fistpl
fsubrl
mov
insb
sarl
shl
xchg
shl
push
jb
in
std
sahf
mov
jl
repnz
sbb
fbstp
test
jbe
js
fsubs
shlb
xchg
inc
leave
inc
mov
faddl
push
fdivp
dec
sbb
inc
daa
les
adc
jnp
fisubrl
mov
push
sub
mov
mov
mov
sub
aaa
push
push
filds
xchg
sbb
cmp
mov
rorb
addl
movsb
dec
cmc
xor
xor
loop
loopne
loopnew
pop
insl
in
inc
sub
imulb
leave
dec
aad
fsubs
lds
icebp
mov
lcall
inc
jle
arpl
inc
cli
out
and
mov
je
mull
lds
popf
mov
xlat
push
mov
std
mov
push
pop
jecxz
ja
jne
rcrb
cmp
mov
aad
out
ret
sti
lods
mov
adc
sbb
iret
mov
inc
cs
sbb
push
lds
sbb
adc
pop
mov
out
popa
test
data16
mov
add
inc
outsl
lcall
inc
daa
enter
std
in
lea
push
cmpsb
nop
pop
and
movsl
test
or
out
sub
imul
adc
adc
or
jbe
or
je
cmp
pminsw
mov
sti
shl
addr16
das
insl
hlt
repz
mov
inc
loop
ljmp
mov
into
fisubs
dec
cmp
aaa
mov
cld
ret
xchg
mov
or
dec
xor
daa
mov
cmp
lea
lods
pop
dec
adc
mov
test
enter
push
std
jno
orb
shll
jns
cmp
xchg
and
pop
out
adcb
sub
in
lret
in
or
shrl
outsb
pop
xor
rorb
and
scas
inc
mov
push
cmp
in
mov
call
nop
cmp
cld
icebp
ds
popa
es
enter
sbb
xor
xchg
fwait
xchg
cmp
add
popf
daa
test
rolb
loopne
sbb
fistpll
jmp
out
cltd
orl
or
nop
mov
jne
inc
divl
inc
jb
pop
cmpsb
arpl
mov
inc
inc
jo
cmpsl
and
push
test
xlat
xchg
clc
mov
push
cmpsl
movsb
sub
lret
out
fldt
cli
cwtl
pop
xor
dec
lcall
cwtl
pop
int
mov
inc
lock
dec
mov
test
into
imul
out
movsb
sahf
lds
mov
mov
add
loop
shl
and
cmp
xchg
enter
adc
bound
cwtl
dec
fndisi(8087
pop
data16
test
hlt
cmp
rorl
add
or
jmp
testl
mov
push
test
add
dec
jae
inc
pop
jl
xor
push
mov
xor
or
stos
and
push
popa
jns
insb
pop
fwait
and
lock
clc
aas
shrb
daa
addr16
sub
cmp
add
enter
and
push
fisubrs
js
insb
jle
loope
movsb
push
shll
in
jnp
aaa
js
push
or
jg
test
loope
mov
hlt
mov
lret
stos
std
push
fmul
xlat
add
add
lea
dec
xor
or
stos
int3
and
int3
jno
icebp
jecxz
sub
cmc
shll
mov
scas
adcl
add
xchg
xchg
out
push
clc
in
lock
out
cmp
add
js
sub
mov
lret
dec
leave
arpl
pop
mov
cli
and
mov
xor
dec
repz
je
and
js
jge
dec
int
add
or
out
sub
movsb
cltd
mov
dec
shll
cmp
in
and
les
iret
pop
mov
lcall
sbb
pop
mov
inc
mov
xor
cmc
jo
mov
mov
jl
mov
cmp
imul
out
push
dec
dec
push
and
mov
push
push
pop
fld
sbb
cmc
mov
mov
into
xchg
in
arpl
cld
lods
mov
bound
call
jl
lret
xor
cltd
and
hlt
dec
or
int
mov
add
pop
aam
sti
jb
shll
in
mov
xchg
gs
cmc
enter
xchg
xor
shlb
or
fmul
repz
jbe
add
mov
pop
rol
xchg
repnz
fstpt
jne
xor
add
ja
jge
dec
jge
sub
stc
faddl
idivl
popa
out
sub
std
cli
or
pop
xchg
adc
or
mov
std
jo
sbb
jbe
xlat
icebp
lcall
jo
ja
mov
mov
test
cmp
clc
insl
push
ds
in
rclb
outsb
inc
notb
cmp
outsb
xchg
push
pop
mov
cmp
cmpsl
jnp
inc
inc
xchg
dec
mov
inc
scas
les
aaa
fmull
enter
repnz
add
mov
das
mov
push
push
adcl
lcall
or
in
das
adc
dec
cmp
out
out
xor
sub
insb
aas
sub
fwait
cmp
mov
ds
mov
scas
je
out
stc
in
es
fsqrt
jle
xor
popa
mov
andb
add
cmpl
sahf
adc
push
and
xchg
sbb
sub
add
pop
pop
xchg
push
mov
imul
sub
add
or
mov
jmp
jge
out
bound
fs
test
lods
sub
inc
adcl
or
cmpsb
fstpl
out
add
pop
pusha
push
inc
ja
pop
push
pop
iret
ror
cli
pushf
add
sbb
aam
inc
mov
or
loop
dec
sbb
les
out
or
sub
out
xchg
pop
or
cld
push
ljmp
or
rcrb
jbe
cld
je
sbbl
icebp
jbe
dec
das
fwait
mov
cld
xchg
mov
repz
ds
test
pusha
mov
inc
inc
es
pop
arpl
fdivr
testl
shll
out
xor
les
fcmovnb
mov
mov
cmpb
andb
push
stos
ljmp
dec
pop
movsb
nop
or
scas
mov
fstps
outsb
daa
add
out
stos
test
push
shrb
push
and
cmp
ds
outsl
shll
mov
pusha
xor
cmp
mov
popf
lahf
push
outsb
pshufw
mov
mov
push
dec
pop
xchg
sti
pop
scas
mov
mov
jne
shll
mov
and
sub
rdpmc
jbe
aaa
stos
test
addr16
xor
insl
mov
cltd
or
xor
into
jae
mov
mov
sbb
loope
jns
push
out
jns
lods
push
mov
cmp
xlat
aam
cld
adc
fadds
mov
xor
je
lds
dec
and
cmp
addr16
pop
dec
add
pusha
adc
sub
js
leave
jne
cmp
leave
add
jp
or
sbb
test
jge
outsl
sub
push
ds
cld
mov
sbb
add
jge
movsl
sbb
add
push
xchg
ljmp
jp
outsl
jae
adc
pop
das
rclb
jmp
jae
sub
je
mov
cmp
fwait
mov
sbb
inc
pop
push
movsl
lea
cmpsw
dec
mov
mov
dec
js
fldenv
fnstsw
xchg
hlt
sbb
jbe
cmp
aad
loope
mov
or
xchg
insl
xchg
addr16
xlat
push
fisttpll
cmp
mov
cwtl
mov
mov
lea
andl
pop
sbb
in
lea
dec
insl
popl
fsubr
cs
jmp
inc
loopne
pop
cltd
dec
jg
push
out
loope
aaa
rolb
pop
ss
add
pop
add
inc
jge
fxch
shl
cmp
and
dec
add
add
movsb
jb
add
push
jb
inc
jge
jle
sub
imul
ret
push
pop
stos
fmul
add
push
pop
je
inc
dec
or
adc
cmp
mov
insl
mov
mov
push
xor
ja
push
sarl
dec
in
rorb
add
inc
fisubs
sbb
ja
xchg
dec
jmp
out
stc
mov
int3
mov
push
stos
fsts
pop
xchg
push
and
jmp
jp
mov
or
imul
xchg
mov
das
clc
loope
pop
outsb
ja
mov
notb
add
push
ds
outsl
ss
test
jmp
enter
lahf
in
or
sub
mov
sub
in
xor
jne
jne
outsl
inc
aas
and
push
mov
sub
jo
in
in
adc
hlt
pop
bound
sub
stos
push
push
mov
sbb
cmp
xor
push
fldcw
int
jno
jns
jb
adc
mov
stos
mov
jae
arpl
sti
in
pop
and
stos
in
sahf
sbb
sub
jmp
mov
or
xchg
ds
cmp
and
mov
std
ret
mov
add
repz
xchg
xchg
xchg
dec
xchg
test
push
hlt
shl
mov
cltd
int3
incb
decb
bnd
repz
adc
popa
adc
pop
jl
int3
in
dec
outsb
fisttpll
loope
inc
cmp
push
pop
lret
dec
adc
fiadds
pushf
inc
das
jp
fadd
mov
add
sub
xchg
test
out
shll
leave
mov
dec
and
xor
push
jge
cmc
call
adc
cmp
fnstenv
dec
and
pop
sbb
flds
out
pop
dec
imul
push
jb
add
and
mov
or
add
jb
mov
push
into
pop
pop
or
mov
adc
daa
inc
sub
and
mov
push
test
mov
test
fnstsw
push
movsl
nop
cmpsl
mov
lds
pusha
out
or
fnstcw
or
adc
arpl
sbb
lahf
jo
dec
lock
aaa
add
sub
xor
jg
das
sbb
xchg
es
inc
in
push
imul
stos
ret
mov
mov
add
inc
inc
cli
push
pop
lods
sbb
adc
add
loop
push
pop
xor
mov
cmp
add
out
adc
xchg
adc
or
add
adc
std
outsl
orl
js
jle
fs
mov
jae
inc
push
adc
pop
mov
js
pop
mov
popf
les
nop
fsubrs
mov
vmread
sbb
nop
roll
push
inc
lret
jp
in
mov
int3
cwtl
test
jne
add
mov
lods
mov
inc
icebp
cmc
xorl
cltd
lods
sub
sahf
pop
or
frstor
jb
sbb
ret
xor
push
sub
in
jae
ljmp
mov
pushf
push
push
adcb
movsb
rorl
dec
jae
enter
or
dec
add
test
stc
add
and
jecxz
seto
stos
shll
jo
roll
pop
xchg
xchg
or
lahf
shrb
lcall
mov
mov
std
movsb
push
fcoml
leave
mov
popa
insl
pop
jno
jae
out
clc
xchg
out
hlt
xor
scas
adc
push
cmp
mov
pop
pop
lret
or
adc
jge
fidivrs
add
lahf
aas
fbstp
shlb
mov
cli
out
mov
jecxz
cmp
fsub
or
xchg
xor
adc
push
xchg
sbb
jno
cmp
test
addr16
clc
add
test
jo
inc
mov
aaa
fisubs
in
sbb
add
inc
into
pop
xchg
dec
rol
rcr
mov
hlt
adc
mov
cltd
int3
ljmp
das
inc
add
ljmp
and
popa
sahf
push
push
push
sbb
mov
scas
enter
push
cmp
mov
aad
cs
arpl
lcall
dec
pop
lret
mov
or
loop
jg
add
imul
jle
in
pop
adc
or
mov
pop
imul
adc
insb
outsb
sbb
push
imul
inc
adc
mov
pop
icebp
mov
pop
ret
dec
ds
add
nop
ljmp
movsb
inc
xchg
dec
mov
test
and
or
xchg
pop
loope
push
xchg
cld
mov
jnp
cmp
int3
sub
or
test
xor
mov
lret
rcll
int3
push
repnz
mov
into
lret
jmp
jmp
and
loopne
push
aam
add
add
or
push
dec
int
adc
and
mov
sub
cmp
inc
scas
jg
xchg
jl
and
shrl
cmp
cmpsl
inc
aad
pop
ss
cltd
ss
test
arpl
jns
int3
mov
std
mov
addr16
into
sbb
lret
or
dec
mov
xor
sahf
lds
mov
stc
adc
xor
aas
imul
add
push
mov
scas
cld
cmpsl
or
pop
cmp
ljmp
fsubrs
mov
mov
nop
mov
mov
out
mov
sbbb
jne
dec
add
shll
nop
bound
idiv
out
test
pushf
mov
cmpsl
dec
aad
jns
add
jmp
loope
cli
cmc
inc
aam
and
call
movsb
aas
das
mov
es
lods
cmp
mov
int
xchg
iret
add
popa
lods
xor
in
out
aam
adc
cmp
neg
stos
xor
adc
push
lahf
mov
data16
sbbb
lahf
pop
cmpsb
das
sbb
xchg
jmp
xchg
push
push
fwait
mov
mov
and
hlt
pop
push
fs
inc
sub
pop
loopne
sbb
stos
inc
les
xchg
add
movl
xchg
bound
fincstp
xor
xchg
cmp
sub
fwait
pop
stos
mov
ljmp
push
mov
dec
sub
sbb
xchg
xchg
jnp
pop
mov
sti
mov
loopne
add
xchg
lock
adc
pop
icebp
or
std
mov
into
xor
je
cmc
lds
es
mov
pusha
fisubl
or
jge
fs
fidivrs
jo
pop
ljmp
into
sbb
test
pusha
ljmp
das
adc
add
adc
ds
pushf
jmp
pop
sub
cmpsb
jo
pop
dec
mov
in
lods
testl
mov
sahf
stos
pushf
mov
inc
adc
js
jbe
mov
psubd
add
addr16
push
push
arpl
out
or
pushf
hlt
jnp
inc
cmp
pop
sbb
imul
sub
lcall
imul
bound
lcall
add
inc
adc
adc
adc
inc
push
adc
sbb
ds
and
fidivs
cmp
add
mov
cmp
mov
sbb
test
cmp
inc
add
stos
jcxz
repnz
call
dec
mulb
shrl
mov
mov
and
mov
cmp
xor
outsb
hlt
outsb
aad
jp
sub
ret
scas
shlb
mov
aaa
adc
adc
mov
mov
inc
sub
cmp
xchg
hlt
mov
jae
popa
repz
jnp
push
adc
ficomps
aam
scas
std
fbstp
cs
inc
inc
cmpsl
mov
mov
ja
sbb
dec
xchg
jno
mov
fnstcw
das
push
xor
mov
test
jmp
mov
and
sbb
scas
pop
inc
xor
into
loope
and
jg
xacquire
cmpsl
insb
push
jne
push
adc
notb
mov
nop
call
aas
cwtl
idivl
jmp
out
arpl
inc
lods
ds
mov
out
stc
fimuls
mov
pop
adc
sbb
pop
inc
fucomp
loop
call
ret
je
jb
pop
xchg
lret
adc
push
and
jmp
mov
cmp
jnp
mov
int
push
jle
inc
les
dec
dec
js
popa
or
fwait
in
mov
xor
decl
mov
cmpb
pop
pop
lock
fsub
dec
xchg
nop
mov
push
jo
stos
inc
pop
hlt
fcmovnu
test
sbb
lods
inc
cli
rorb
sbb
push
pop
cmp
xor
int
lock
mov
lock
mov
jmp
ficoms
int3
cmp
test
jmp
ret
insl
sbb
mov
dec
lds
cmp
jnp
push
lock
std
iret
shlb
sbb
push
loopne
movsb
repnz
fldcw
cld
or
xchg
inc
pop
xor
jb
test
push
pop
clc
ret
dec
dec
cmp
fldt
pusha
inc
rcrl
popa
xchg
mov
icebp
add
negl
ficompl
jl
fsts
pop
ret
and
add
bound
je
xchg
lock
sar
add
data16
clc
hlt
jo
add
fisttpll
bound
cmp
pop
add
push
js
in
cli
in
jne
mov
pop
aaa
lds
shlb
push
jnp
push
sub
mov
cmp
fstl
out
xor
jnp
cli
mov
lds
into
mov
jecxz
dec
push
clc
rolb
inc
das
les
xchg
mov
int3
insb
scas
lds
ret
pushf
add
stos
cwtl
inc
sub
lock
insl
xor
movb
jle
in
or
test
mov
push
test
js
into
cld
std
pop
xchg
int3
test
in
loope
mov
ljmp
in
rcrl
cmp
dec
sub
xchg
adc
xorb
dec
adc
push
fwait
adc
pop
xor
lcall
jns
and
sbb
fimull
fwait
clc
leave
inc
in
repnz
sahf
sbb
mov
push
sbb
rcrl
enter
andb
xor
outsl
inc
add
pusha
pop
jle
mov
test
test
outsb
nop
out
push
or
ror
ds
out
xlat
inc
pop
push
xchg
cmp
xor
rorb
mov
gs
xlat
mov
dec
mov
out
dec
cld
mov
lcall
cmpsl
inc
arpl
aam
jo
or
jecxz
cmp
push
push
and
jo
scas
out
std
mov
and
adc
push
das
out
cli
pop
inc
fs
jecxz
add
test
into
pop
jecxz
hlt
rorw
inc
pop
mov
mov
jo
mov
xor
pop
jno
xchg
push
push
sbb
lods
fldt
cmpsl
jb
jmp
mov
cmp
sbb
repnz
ss
sbbb
or
lods
cmpsb
push
cmpsl
and
lds
xchg
loopne
lcall
xchg
sub
outsl
inc
inc
in
imul
jmp
addl
cmp
cmc
mov
pop
dec
aam
mov
imul
xchg
sub
push
out
fcmovbe
fldcw
jnp
out
imul
pop
mov
or
xchg
bound
and
repnz
ljmp
xor
in
sub
in
sub
jmp
xor
imul
mov
std
imul
int3
lcall
mov
mov
sbb
insb
add
lea
fwait
sbb
into
sti
xchg
pop
pop
pop
mov
dec
imul
sub
sbb
mov
add
xor
into
jp
add
xchg
pushl
pop
call
xchg
bound
dec
or
ret
stos
cmp
outsb
hlt
testl
push
jns
and
cli
leave
push
jmp
aas
mov
xchg
inc
inc
mov
fwait
movl
ljmp
ss
jmp
dec
nop
xchg
rolb
sbb
push
mov
mov
clc
nop
popl
inc
dec
and
xchg
iret
mov
adc
lcall
push
mov
imul
aad
jne
pusha
xchg
ljmp
jecxz
leave
jecxz
pop
push
xor
call
jns
xchg
popa
dec
gs
lds
lret
lret
dec
mov
mov
push
data16
jle
cwtl
inc
jnp
sub
jmp
jo
js
das
pop
data16
xor
add
jg
inc
mov
int3
pop
xchg
shlb
cld
push
cmpsl
adc
mov
in
mov
addr16
jl
and
dec
jae
stc
xchg
jg
addl
out
roll
scas
stos
cmpsb
gs
push
add
in
cmpsb
mov
hlt
dec
cmp
mov
in
cmp
imul
mov
xchg
ret
dec
loopne
cs
xor
cmp
mov
mov
leave
xchg
and
adc
aad
shlb
std
paddusb
jle
testl
mov
hlt
jle
pusha
mov
lret
scas
pop
lahf
cwtl
pop
movsb
pushf
subb
fucomip
rcrb
lret
jno
in
cmpsb
in
ss
leave
jb
aad
cmp
jo
jae
and
enter
and
dec
in
in
shll
sbb
ss
hlt
lods
ss
cwtl
mov
clc
outsl
sbb
ficomps
clc
dec
pop
mov
out
jbe
fs
clc
popf
inc
outsl
adc
lcall
vmwrite
inc
dec
adc
mov
add
sbbb
pop
pop
outsb
scas
adc
jb
mov
cmp
push
sbb
mov
push
in
lods
inc
cmp
jecxz
scas
dec
movsl
lret
jns
mov
sub
cmp
in
and
or
cltd
mov
or
xchg
adc
inc
sahf
fsubl
and
add
pusha
xchg
clc
pop
int3
xchg
js
sahf
lock
jmp
add
xor
dec
cs
cmpsl
enter
jbe
popa
shll
mov
lret
jb
je
aad
iret
movsl
mov
stos
fs
xchg
add
lret
mov
mov
mov
vpaddsw
sub
adc
jmp
ret
xor
push
jo
imul
xlat
les
jbe
std
xchg
pop
xchg
mov
stos
push
idivb
jnp
mov
lods
pop
aas
js
jg
cli
dec
mov
sarb
in
jbe
shlb
xor
push
mov
pop
cmc
aad
sub
sub
ds
out
popa
add
out
outsb
stos
mov
xor
ret
xor
add
push
mov
pop
mov
cmp
push
stos
in
xchg
js
in
mov
adc
shrb
push
icebp
in
jmp
add
cmc
insb
jno
adc
push
lods
inc
sub
mov
lret
push
add
cmp
in
jmp
sub
inc
lock
arpl
and
push
pop
push
shll
sbb
cltd
or
ficoms
pop
and
ljmp
aas
xchg
sbb
and
push
hlt
fists
out
pop
cmc
mov
jmp
mov
xor
test
cmpsw
movsl
mov
movsl
xchg
mov
xchg
push
add
aas
cmp
mov
or
and
push
push
sbb
jnp
ss
cmp
and
insb
push
xchg
dec
jno
or
ljmp
pop
jb
jae
cld
rcrb
subl
mov
in
jae
mov
jl
jp
add
pop
xchg
inc
or
adcb
out
mov
sbb
dec
decb
iret
sub
xor
xchg
xchg
inc
mov
jecxz
or
push
pusha
hlt
mov
rcll
rcr
push
mov
neg
leave
pop
lods
scas
push
nop
movsb
adc
dec
insl
loope
cmp
mov
mov
aad
lret
jp
hlt
jge
mov
fldt
adcl
out
ja
das
cmp
jb
sbb
sbb
push
push
xchg
pop
push
add
dec
xor
xchg
arpl
jp
test
push
sbb
jmp
jns
cmc
popa
inc
nop
and
rcll
pop
adc
jo
fisttpl
out
dec
fisttps
dec
dec
cwtl
leave
jnp
push
ja
aaa
mov
sbb
ficoms
stos
cmp
adc
adc
aam
xor
sbb
out
cwtl
jge
or
pop
dec
je
xchg
shlb
popa
jge
decb
call
lds
iret
xor
or
jbe
xorl
shll
push
cld
loop
xor
out
add
jge
xor
lods
aad
test
les
sbb
mov
mov
insb
and
sbb
cld
or
xor
and
cmp
push
dec
ret
pop
leave
bound
jae
lods
pop
aad
int
scas
push
jg
fyl2xp1
jle
stc
push
jge
mov
sbb
push
pop
and
inc
jecxz
sub
mov
sbb
inc
cmp
push
stos
lcall
out
pop
stos
add
out
aaa
hlt
push
sahf
hlt
movsl
lods
mov
repz
arpl
nop
or
mov
push
stos
mov
pop
adc
mov
stos
fwait
loopne
nop
mov
fmul
scas
popf
out
or
mov
cmp
sarl
adc
pop
repnz
in
adc
sub
adc
cmpl
cmp
adc
jmp
in
js
out
in
cld
call
xchg
mov
lock
faddl
shr
push
cmp
jmp
gs
jle
lods
dec
jbe
ss
xor
jae
shrb
pop
or
aas
out
xor
in
imul
dec
insb
xor
ja
bound
pop
sbb
or
hlt
add
sahf
and
iret
lcall
or
cmc
mov
ds
push
add
insb
fidivrs
xlat
push
in
scas
dec
lret
mov
shr
cmp
jne
push
mov
pop
stc
fucomp
fnstsw
cmp
jno
mov
mov
outsb
cmp
lret
mov
ljmp
lret
dec
shl
sub
cwtl
add
mov
cltd
mov
adc
xchg
and
push
mov
fstl
std
mov
xlat
fsubrp
enter
jmp
adc
mov
pop
shlb
lds
add
fidivrl
pop
imul
xor
rcl
pushf
rclb
stc
int3
clc
lock
stc
fstps
mov
frstor
mov
nop
sahf
sub
les
jg
or
fwait
and
std
sbb
sahf
cmp
sub
sbb
adc
xor
add
in
jbe
sub
sbb
adc
mov
sbbl
ss
inc
es
xchg
stos
sub
rolb
jmp
mov
cli
lods
gs
popf
mov
push
dec
into
and
adc
ret
fwait
sub
bnd
pop
addr16
movl
divb
dec
call
je
dec
fmull
sub
popa
or
xchg
jp
movsb
inc
in
repnz
or
inc
jl
pop
fwait
hlt
ljmp
popa
std
adc
stos
xchg
loop
push
arpl
cmp
lahf
std
out
xchg
xchg
jno
imul
push
or
call
and
popa
mov
fdivs
xchg
push
sarl
xchg
xchg
sub
add
and
imul
jb
repz
push
sbb
and
out
or
incb
cmp
js
pop
xor
repz
test
adc
dec
imul
out
jg
xchg
cld
imul
inc
nop
wbinvd
test
fwait
dec
dec
jmp
addr16
push
pop
or
aas
jno
mov
outsb
mov
inc
sbb
mov
push
mov
leave
loop
xor
and
xchg
xchg
enter
cwtl
sahf
jae
pop
int3
hlt
or
cltd
pop
inc
lods
cmp
cmp
popa
xor
sarl
repz
dec
or
adc
jl
or
movsb
push
icebp
adc
cmp
ljmp
in
into
ret
adc
inc
mov
je
xor
jl
jg
jmp
sub
adc
mov
mov
mov
aaa
leave
popf
scas
cmp
sbb
pushl
jne
mov
jmp
and
xorb
in
sbb
pusha
inc
dec
jnp
or
jbe
xchg
adc
or
fcmovnb
and
mov
mov
test
xor
out
out
jbe
push
add
call
jne
cmp
inc
call
dec
mov
and
inc
lret
fidivrl
mov
jnp
dec
mov
jb
mov
sub
push
pop
mov
pop
pop
nop
mov
frstor
mov
lods
jne
pop
or
fists
outsl
aad
pop
mov
repz
mov
addl
cmp
mul
mov
rclb
jmpw
jbe
ja
adc
in
cmp
mov
aaa
iret
mov
pop
cmp
mov
lret
cmpsl
cs
mov
cltd
enter
mov
lcall
xacquire
daa
adc
lods
xchg
sub
ss
adc
add
sub
arpl
jecxz
or
adc
cmpsl
into
xchg
adc
mov
and
push
popa
push
jl
insl
mov
stc
andb
cmpl
dec
hlt
iret
negl
int3
rcrl
push
push
adc
in
inc
cltd
sbb
xchg
and
mov
lea
neg
mov
lods
sub
pop
test
xchg
lea
sbb
add
xchg
lods
mov
mov
mov
inc
mov
movsb
pop
mov
test
cmp
fimull
cmc
jecxz
std
lret
fistpl
lcall
mov
inc
shll
push
fcmovne
ljmp
lods
icebp
fisttpl
jns
fiaddl
addr16
add
pop
mov
out
and
push
dec
push
mov
cmpsb
pushl
lret
movsl
or
ds
adc
mov
cmpsb
push
or
lahf
sub
mov
inc
test
xor
loopne
or
cmp
mov
imull
std
and
inc
mov
ja
arpl
push
jecxz
fbld
and
call
leave
push
std
mov
ljmp
lret
sarb
lods
pop
xchg
stc
cmp
xor
clc
pop
jg
lret
or
sbbl
or
cmp
xor
jns
cmpl
pushf
repz
pop
lea
dec
aad
loopne
xchg
nop
push
das
sahf
daa
fidivl
add
test
mov
pop
int3
data16
jno
pushl
adc
and
in
sbb
out
mov
fmul
mov
into
nop
fdivrs
test
sbb
cli
mov
inc
adcb
lret
movsl
stos
xor
pop
push
repnz
scas
cltd
or
jne
lahf
icebp
add
inc
inc
stos
inc
cmc
pop
pushf
or
pop
cwtl
mov
pop
aam
pushf
movsb
add
mov
and
mov
push
xchg
sub
je
and
mov
jge
idivb
int
inc
in
cli
scas
push
imul
mov
lea
popf
pop
add
roll
xchg
cltd
and
cltd
xlat
jno
push
lds
divb
cld
push
mov
add
fsubrl
xchg
movsl
movsl
pushf
sub
pop
jno
ja
bndstx
into
adc
cli
insl
icebp
scas
mov
cli
jbe
dec
mov
into
xor
ljmp
scas
cmp
inc
popl
in
scas
mov
sar
and
test
or
add
xchg
sbb
push
jo
pop
lds
xlat
fwait
rolb
popf
shlb
mov
add
and
jo
test
mov
add
mov
sub
repz
out
adc
adc
pop
inc
adc
sub
jmp
adc
mov
out
mov
sbb
int3
sti
imul
xor
scas
dec
mov
sbb
fisubl
mov
movsl
insb
sbb
pop
xchg
or
out
inc
adc
popf
push
repz
jle
test
inc
adc
cmp
inc
adc
lahf
jbe
lret
jb
jo
xor
call
lahf
inc
xrelease
icebp
ret
inc
stos
lods
jmp
leave
aas
xchg
arpl
enter
xchg
fs
xor
mov
pop
test
mov
sub
jp
in
into
in
add
inc
or
jnp
aad
xor
in
add
aam
clc
js
fwait
pop
cltd
enter
inc
fwait
add
mov
and
enter
jns
jae
clc
aaa
lret
outsb
xor
inc
xor
mov
addr16
adc
leave
insl
dec
lret
das
fldenv
mov
stc
test
popf
add
cmc
add
out
jb
push
push
or
mov
jo
xchg
jb
enter
out
pusha
popa
mov
scas
push
xor
negb
stos
cwtl
push
inc
imul
nop
lret
std
inc
rorl
inc
rorl
movsl
int
inc
out
push
jmp
jno
jge
pop
shrb
adc
call
sbb
mov
xor
out
xchg
popa
add
mov
dec
dec
jl
pushf
dec
pushf
push
fidivs
cmp
cwtl
mov
xchg
xor
divl
fisubs
std
addr16
out
shlb
sbb
ds
adc
mov
vpmacssww
add
mov
cmpsl
outsb
push
push
les
or
cmc
aaa
mov
xchg
pushl
cld
and
pop
dec
arpl
push
fmul
and
aaa
stos
das
dec
loop
add
push
out
pop
in
int3
jns
scas
sbb
xor
ret
cmp
cld
cmp
mov
lods
and
push
stc
pusha
or
das
daa
sti
aaa
cmp
jns
hlt
shrl
pop
sub
call
pop
inc
aas
add
pop
and
sbb
mov
jmp
pop
cli
fdivrl
mov
mov
cmpb
orl
aas
sbb
movsl
test
nop
inc
pop
sbb
add
mov
dec
adc
stc
outsl
adc
sbb
es
add
ds
and
std
jne
popa
and
xchg
ffree
repnz
sub
outsb
test
mov
and
loope
xor
fidivrl
xchg
sar
mov
fs
jl
cmp
cmp
ss
mov
bound
dec
pop
lret
or
mov
das
sbb
lock
push
cld
or
rorl
dec
push
xchg
fldt
push
fcmovne
pop
dec
cmp
imul
and
aaa
inc
push
or
mov
shl
jne
aam
jg
xchg
xchg
imull
movsb
test
push
gs
push
push
aam
mov
inc
testb
sbb
pop
subb
push
mov
push
test
jmp
or
test
mov
popf
pop
mov
sub
mov
sub
lock
add
out
mov
mov
popw
mov
repnz
jae
lock
mov
in
jmp
jmp
stc
adc
iret
outsb
xchg
push
fdivs
aas
push
inc
rcrb
jp
fstpl
pop
push
pusha
xor
pop
cmpsl
cmp
jnp
mov
pushf
sub
mov
inc
push
push
fnstsw
mov
js
adc
push
pop
bnd
dec
push
hlt
add
add
arpl
std
mov
pop
out
mov
mov
adcl
push
mov
cmp
cmp
fucomi
ret
jno
pushf
inc
cmp
inc
and
cmpsb
int3
loop
inc
jg
push
sub
sbbb
push
sti
pop
sub
mov
cmp
outsb
sub
xor
adc
xchg
mov
rorl
mov
repz
ljmp
std
into
sbb
mov
jnp
icebp
and
cli
outsb
push
sub
rclb
mov
loopne
adc
jmp
jnp
mov
sub
and
xor
dec
sti
xor
xchg
stc
arpl
lret
push
js
jle
mov
xchg
sbb
scas
sbb
out
popa
or
dec
shlb
leave
adc
mov
cld
or
add
mov
fldenv
je
fisubrl
data16
movsl
push
inc
push
dec
pusha
sub
mov
iret
subb
js
out
inc
or
ret
pop
mov
test
in
sti
fimuls
push
cmpsl
push
lret
pusha
push
cmpsb
xchg
push
lcall
lcall
test
rcll
mov
fwait
adc
out
sbb
pop
out
jg
cmp
sub
sbb
iret
imul
out
outsl
mov
aad
pop
mov
rcrb
int
aaa
int
mov
jno
std
in
ds
sub
mov
popf
daa
mov
or
lret
out
jmp
adc
cmp
jle
jg
pop
sub
pop
xchg
in
mov
sub
int3
adc
out
sbb
cmp
ficomps
jno
jp
loop
js
movaps
jb
in
sti
or
jp
push
jge
arpl
test
pushf
mov
xchg
push
in
pop
jmp
push
mov
leave
inc
lret
dec
or
shll
ret
inc
addl
loope
jge
loope,pn
mov
xchg
sbb
or
movsb
inc
mov
and
xor
outsl
mov
cmc
push
cmp
push
lahf
inc
mov
test
cmpsl
stos
ljmp
clc
data16
xchg
rclb
das
rorl
and
mov
ljmp
cmp
push
in
sbb
add
mov
xor
test
or
sbb
xor
inc
jp
or
stos
or
jecxz
jns
dec
bound
lret
cmp
sti
sbb
sti
xchg
pop
setge
or
jb
int3
add
stos
cmp
mov
pop
mov
pop
out
sarl
push
pop
add
push
push
sub
push
jecxz
jl
sbb
push
movsb
xor
stc
inc
faddp
cmp
dec
fistpl
popf
jae
scas
jmp
dec
jb
xchg
outsb
into
in
cmp
adc
int
pop
scas
test
dec
cmp
adc
push
iret
fnstsw
sbb
mov
push
outsl
popl
cld
ret
shl
adc
std
ret
out
jg
lods
cli
cli
inc
sbb
xor
popa
jne
inc
mov
lret
or
or
setle
insb
mov
and
mov
mov
or
fisttps
dec
aaa
sahf
cmp
and
imul
push
mov
and
xchg
add
mov
data16
mov
lea
push
lods
push
and
jnp
jo
arpl
imul
mov
jmp
out
jge
sbb
inc
loop
adc
mov
jb
call
mov
inc
sub
xor
enter
push
pop
mov
outsb
sub
mov
ficompl
push
sahf
mov
mov
out
add
pusha
mov
loopne
rorb
pop
es
xchg
push
test
mov
dec
cmp
mov
out
inc
rcrl
hlt
sbb
in
sbb
cmp
in
xor
pop
push
mov
cld
xlat
iret
cmp
jmp
in
roll
aam
and
pop
addr16
loop
jge
jg
aaa
fwait
cmp
movsb
arpl
stc
dec
pusha
cli
push
push
xor
test
cmpsb
mov
or
and
aam
ret
sbb
jo
sub
sbbb
or
or
sbb
in
add
xchg
popa
or
adc
or
out
jge
xchg
sub
sti
out
jmp
and
lahf
imul
pop
cmc
dec
imul
enter
pop
fcompl
mov
fidivrs
repz
int3
lahf
insl
cld
mov
and
push
fdivl
mull
out
mov
push
daa
lods
add
je
cmp
cmpsl
mov
pop
xchg
sbb
cmp
xor
rcrl
cwtl
push
insb
pop
or
daa
mov
mov
es
xchg
divb
sbb
and
addb
dec
in
dec
xchg
jbe
xchg
or
pop
jne
push
mov
ret
mov
pop
je
cmp
int3
dec
shlb
xchg
aam
xor
out
enter
adc
fidivrs
inc
pop
push
fisubl
popl
icebp
out
jp
inc
inc
sub
push
push
addr16
cmp
fdiv
sbb
or
add
repz
je
or
or
jo
test
xchg
inc
in
mov
popa
out
imul
movsb
fidivl
aad
inc
xchg
adc
subb
pop
pop
ficoms
mov
je
mov
jmp
mov
cmp
orb
mov
repz
xchg
xor
in
testb
or
cmp
sarl
test
stc
and
sub
sub
adc
add
imul
icebp
popa
ret
inc
out
aas
out
dec
enter
clc
subl
xchg
adc
adc
daa
jge
hlt
filds
jo
mov
mov
adc
jg
pop
subl
fbstp
je
adc
mov
push
das
adc
push
xchg
inc
das
das
movb
push
imul
push
pop
jecxz
sti
xor
push
xor
out
mov
repz
inc
or
xor
iret
xor
sub
jecxz
sub
adc
push
ret
stc
loopne
adc
mov
add
int3
mov
lcall
mov
inc
mov
lods
xlat
call
cwtl
stos
nop
stos
cs
add
push
jae
or
aam
mov
sbb
pop
stos
popf
add
cmp
cmpsl
in
test
std
pop
test
sar
push
sbb
rolb
in
int3
xor
xchg
loope
imul
jns
movsb
nop
popf
pop
imul
mov
ljmp
test
lds
movsb
push
jae
jge
sbb
insb
cld
andl
lea
rcll
push
jp
imul
adc
btc
pop
add
push
rcr
outsl
jnp
lock
cli
out
mov
dec
ja
lea
js
test
loop
in
sarl
nop
das
mov
cs
cmp
xor
mov
jge
ffreep
sbb
loop
xorl
inc
std
imul
rcrl
sub
cmp
ret
cmc
mov
xor
adcb
popf
icebp
pop
push
outsl
xor
loop
cmp
xchg
dec
out
cmc
cltd
int3
icebp
push
mov
sbb
cli
cmp
xchg
inc
mov
fdivrs
push
hlt
aad
mov
fistpll
cmp
stos
xor
test
lea
sub
pop
jle
push
cmp
mov
mov
add
aaa
jnp
and
dec
push
aad
push
sahf
or
rcll
das
inc
add
dec
cs
mov
or
aad
inc
pushf
jp
lods
push
fsts
js
imul
pop
popa
ret
dec
call
push
push
les
sbb
pushf
mov
xchg
inc
lods
movsl
mov
pop
lods
ljmp
mov
cwtl
lods
cmp
pop
popa
stc
addl
outsb
pop
fnsave
adc
push
xchg
nop
loop
loope
pushf
pop
mov
pop
mov
xchg
add
mov
add
idiv
repnz
rcr
repz
es
jnp
dec
push
or
cmpsb
sub
xchg
jle
xor
and
jno
fxch
andl
lret
sbb
daa
dec
in
pop
jge
stos
push
nop
xor
xor
lock
loope
iret
pop
imul
xchg
imul
cmp
push
in
or
cmpsb
mov
add
adc
iret
and
jge
popl
iret
mov
push
mov
dec
out
outsl
js
cmp
cmc
pushl
push
inc
add
jecxz
xor
inc
inc
pop
sti
cwtl
sti
push
or
lds
mov
aad
lcall
aad
loopne
xchg
pop
mov
xchg
add
ret
mov
das
fidivl
and
xchg
popf
cltd
neg
lcall
inc
rorl
and
or
shll
sahf
in
sub
sbb
pop
shlb
enter
dec
jmp
call
jb
fdivrl
ds
adc
and
mov
loopne
out
jecxz
mov
iret
ja
cli
sub
xchg
fistpll
lret
aam
jge
es
or
jne
adc
xlat
fimuls
ja
sub
adc
cmpb
ja
inc
cwtl
rclb
add
ret
adc
stc
adc
mov
sbb
fs
cmp
dec
inc
icebp
into
rcl
cs
xor
or
sub
fiadds
pop
mov
movsl
xor
dec
jmp
mov
gs
in
ss
mov
cmpb
clc
es
add
mov
scas
sbb
lret
js
mov
rorb
rorb
test
cld
in
sbb
cmpb
sti
push
ljmp
stc
repnz
orb
pop
cs
adc
out
push
aam
push
loope
divl
mov
das
push
xchg
xchg
inc
dec
icebp
mov
lret
sbb
scas
xchg
rol
jo
mov
xor
jno
mov
inc
mov
mov
cli
mov
pop
mov
push
push
sbb
and
mov
push
sarb
xor
mov
xlat
inc
lret
stos
xor
jle
xchg
rolb
xchg
lds
outsb
push
ljmp
push
inc
jp
popf
cmc
lret
movsb
arpl
cltd
outsb
sub
jne
test
mov
inc
clc
dec
dec
mov
sti
repz
inc
push
repz
xchg
aad
loopne
xorb
iret
das
fisubl
dec
fcmovbe
fbstp
popf
ljmp
cld
mov
fcomip
and
in
ja
pop
inc
inc
aaa
sub
lahf
jl
mov
movsl
xor
aaa
jnp
or
pop
jmp
push
mov
popf
dec
rolb
mov
sbb
fimull
cs
fcmovu
add
mov
cmp
outsb
and
and
jnp
xor
popf
mov
mov
pop
arpl
adc
sub
into
or
sahf
or
repz
inc
sbb
scas
xchg
jle
inc
out
add
shrb
enter
jno
insb
xor
inc
jno
dec
inc
pushf
cs
jb
adc
scas
push
pop
pop
lahf
repz
cmp
inc
jae
lods
jnp
xchg
xchg
sbb
pop
mov
mov
into
jmp
xchg
and
push
push
add
xor
dec
scas
cmovnp
rcll
push
mov
das
pushf
jo
inc
mov
mov
mov
jae
ja
sarl
popf
repnz
xchg
loop
jo
out
inc
ret
mov
or
test
shl
test
cmp
mov
sarb
ror
loope
insb
adc
loope
inc
mov
fimuls
shl
test
mov
mov
in
data16
test
inc
ja
inc
jnp
loope
adc
and
in
data16
pop
das
sbb
fisttpll
pop
inc
daa
sbb
jge
addps
jmp
and
testl
movsb
sub
jg
cmpsl
dec
adcb
dec
jns
mov
cmp
fisubs
js
pop
bound
pop
lods
mov
js
inc
lods
in
mov
jg
dec
pop
pop
cmp
scas
sbb
xchg
and
fbstp
jae
push
add
outsb
push
sub
das
cmpsb
mov
not
push
rcrl
xchg
fstpl
cmp
add
xor
push
call
repnz
leave
shl
jae
jae
out
xbegin
pop
nop
lds
jmp
out
gs
lret
ret
pop
les
ror
int
shlb
inc
insl
inc
lret
addl
push
mov
cmpl
and
cmc
outsb
push
imul
inc
out
push
or
insb
sbb
mov
js
cmc
jbe
push
pop
out
loope
or
cmpsb
xchg
inc
mov
or
cmpsl
mov
push
test
test
jno
fwait
loop
in
jmp
pop
ret
pop
inc
pop
test
mov
clc
pop
je
push
shlb
jg
xchg
ss
in
mov
loopne
negb
std
jns
std
jecxz
clc
nop
stc
xchg
in
add
xchg
in
cltd
clc
jno
mov
xchg
jmp
or
push
jb,pt
fsubrs
into
test
sub
cmc
addl
inc
jbe
cld
repz
subb
sbb
ja
outsb
loope
sbb
rcr
push
es
or
mov
sbb
mov
and
gs
jne
in
test
mov
mov
xor
iret
and
dec
fwait
mov
pop
loopne
jns,pn
pushl
leave
sbb
jg
insl
add
test
subl
xchg
lahf
lret
fs
push
repz
adc
hlt
addr16
push
sub
and
nop
jg
subb
sub
movsl
lea
sbb
mov
or
pop
iret
push
out
jecxz
sub
out
mov
mov
insl
dec
xorl
das
iret
sbb
push
in
add
arpl
testl
cmpsb
mov
scas
imul
test
jmp
mov
testl
sbbl
add
mov
sbb
cld
mov
clc
ja
mov
push
cltd
jns
sub
fsubrp
leave
add
cmpsb
jns
std
xor
aaa
daa
jmp
repz
lea
rcrl
sbb
and
mov
sahf
add
cwtl
sbb
pop
scas
push
movsb
jb
stc
and
je
jne
aas
fildll
push
inc
icebp
idivb
jp
push
mov
imul
adc
push
test
adc
lea
fs
sbb
mov
inc
ret
inc
push
mov
xchg
nop
mov
jmp
test
pop
mov
inc
sti
jp
imul
inc
filds
mov
lret
lods
fbstp
or
xchg
out
movsl
sahf
mov
lret
movsl
xor
cmpsb
mov
xchg
in
sub
sbb
test
jge
dec
push
test
inc
outsb
dec
sbb
aad
cmpb
dec
ljmp
sbb
mov
cmc
sarl
dec
inc
cli
or
fsub
in
inc
test
int3
dec
gs
push
fisttps
push
rorb
je
test
mov
popa
bnd
push
iret
les
fcos
and
pop
xorb
cmp
push
hlt
and
aas
fildl
int
fstpl
pop
data16
shll
or
mov
out
icebp
shrl
jno
or
jne
icebp
pop
adc
mov
inc
mov
jge
and
out
and
xor
or
xchg
fists
push
imul
lds
xchg
pop
mov
cmp
mov
mov
dec
cmpsb
xor
xrelease
mov
scas
jmp
dec
adc
cmpsl
push
outsb
and
xor
xchg
sub
aad
sub
pop
popf
sbb
cltd
mov
mov
addr16
leave
in
pushf
int
out
mov
jbe
mov
test
sahf
inc
pop
fst
outsb
dec
outsl
testl
imul
jg
fdivrl
int3
xor
mov
push
out
mov
jno
lret
jbe
and
and
loope
or
push
sub
cld
cmpsb
js
cmp
push
gs
mov
add
dec
xchg
imul
scas
mov
xor
scas
push
repz
lock
cli
jns
add
or
pop
in
jge
lahf
ja
and
cmp
pop
mov
in
or
lret
sub
inc
push
xor
adc
fnstcw
in
push
call
cld
leave
inc
inc
mov
mov
xchg
cmp
sbb
fsub
mov
sbb
stos
lock
lods
xor
nop
add
fcoms
ss
lcall
iret
sti
jecxz
icebp
lods
cmc
xor
jp
lahf
sub
jecxz
sti
fcmovbe
out
fsubs
rcr
inc
push
add
mov
and
dec
and
daa
rol
xchg
sub
hlt
fwait
xor
ret
rcrl
push
in
movsb
rcrl
sub
xor
insb
inc
jne
out
subl
mov
sub
lret
xchg
arpl
pop
inc
inc
movsb
mov
pop
sub
aad
xacquire
sbb
push
jo
repz
cmpsl
push
pop
jl
jbe
aad
insb
mov
lock
jne
push
repz
pop
cwtl
mov
pushf
fnstcw
outsb
lcall
pop
sub
inc
lds
into
ficomps
fidivs
fiadds
dec
and
iret
nop
adc
dec
data16
mov
lret
aad
pushf
xchg
pop
mov
lcall
mov
repnz
push
arpl
enter
enter
test
nop
sahf
xor
mov
mov
push
adc
mov
push
cmp
shlb
cmc
in
jecxz
xor
stc
ljmp
outsl
bound
cmp
data16
mov
cmp
pushf
fcomip
int
addl
dec
arpl
jmp
pop
mov
outsl
and
jb
or
and
mov
test
divb
cmp
pop
rol
cli
arpl
std
push
fildll
add
les
xchg
fstps
jecxz
cltd
dec
jle
push
popa
add
pop
pop
add
or
cmp
int
bound
sti
negl
pop
sbb
fmuls
cmpsl
cs
xor
push
inc
clc
shll
imul
push
movsb
mov
mov
ljmp
sbb
sahf
insl
push
dec
mov
lock
push
les
ficoml
inc
lds
loopne
sub
inc
or
addl
adc
mov
push
fldcw
ja
in
pop
mov
lods
aad
pop
sahf
jb
mov
incb
in
fidivrl
or
or
or
addl
mov
lds
addr16
movsl
or
lock
cmp
adc
xor
cmp
push
andb
adc
push
pop
ja
inc
sbb
push
aam
test
dec
sub
and
push
stc
push
add
stc
repnz
hlt
faddp
insl
out
aas
add
mov
insl
dec
push
sub
sarb
pop
adc
cmp
pop
dec
insb
in
jne
loop
mov
push
cmp
inc
mov
repnz
mov
and
in
mov
push
mov
pop
xchg
xchg
mov
inc
jge
cmpsl
mov
add
xchg
ljmp
notb
ljmp
or
fdiv
or
popf
out
dec
push
lods
loope
adc
out
sub
call
adc
jp
xchg
loop
daa
xor
sbb
pop
hlt
sbb
dec
jmp
dec
mov
sahf
les
or
inc
ror
bound
cmp
inc
iret
cmp
sbb
ret
popf
mov
daa
fstpt
pop
pop
add
sub
in
push
loopne
ss
aam
aas
pop
imul
jbe
mov
mov
mov
data16
mov
dec
xchg
push
xchg
inc
push
in
or
push
movsl
ja
loop
or
pop
xor
sbb
je
push
dec
jae
out
or
push
pop
mov
cmp
movsb
das
stc
daa
fdivs
add
sub
pop
mov
iret
mov
cmp
mov
mov
cmpl
in
adc
xchg
sbb
addb
mov
roll
neg
loop
clc
inc
loopne
jmp
mul
cltd
push
add
mov
mov
out
cmp
mov
xchg
das
fidivl
inc
enter
call
lock
decl
sbb
out
jns
and
sbb
js
dec
xor
movsb
and
pop
stc
and
out
xor
mov
adc
mov
inc
cltd
imul
xchg
mov
pop
or
mov
push
jle
or
shrb
adc
vphsubwd
push
notl
bound
pop
arpl
push
jmp
mov
lock
jp
or
adc
mov
shrl
test
and
ffreep
scas
sub
adc
pop
dec
in
movsb
out
pop
or
popf
test
mov
mov
and
jg
cld
and
fwait
repnz
mov
sbb
lock
mov
mov
mov
out
hlt
fcmovnu
mov
cs
das
dec
mov
vmovntps
mov
nop
aad
dec
int
pop
ret
aad
dec
jl
cmc
jge
ror
fildll
xchg
les
sbb
push
adc
hlt
mov
adc
out
pop
cli
ds
lock
jmp
xchg
adcb
adc
jno
adc
cmp
jp
lret
xlat
mov
jle
and
jle
mov
movsb
cs
jle
bound
inc
enter
loop
fnstcw
insl
repz
push
mov
hlt
in
icebp
pop
push
loopne
imul
push
inc
pop
pushf
popf
dec
negl
lds
sub
cmc
popf
sub
and
inc
cmpsl
cltd
lahf
test
lods
sti
cmp
sahf
dec
pushf
push
dec
push
jnp
jbe
subb
or
mov
stc
jmp
out
xor
decb
bound
clc
out
and
jecxz
loop
fisttpl
daa
lock
mov
xchg
rcrb
dec
dec
xchg
scas
mov
xchg
mov
jb
add
ss
mov
sub
es
orb
sub
jnp
mov
jl
cs
enter
xchg
inc
jg
sub
testl
pop
adc
cli
movsl
lock
sbb
and
mov
add
bound
cmpsl
fistpl
cmp
push
sub
jecxz
outsb
xchg
jge
adc
push
xchg
and
je
popf
imull
mov
push
push
jno
dec
mov
pop
fs
movsb
sti
add
or
movsl
rcrb
and
sarl
ret
mov
xchg
mov
pop
xchg
push
xchg
mov
inc
or
hlt
lret
mov
cmp
mov
aam
popf
scas
shlb
or
aaa
clc
imul
xor
rolb
or
pop
push
out
jo
daa
add
in
leave
enter
sbb
push
ret
decb
jp
inc
ret
into
push
inc
addr16
fs
xor
push
xchg
sub
dec
adc
test
mov
in
jne
mov
fcmovnbe
lret
dec
sbb
cmp
notb
or
mov
prefetchnta
sbb
insl
das
cmp
xor
stos
fisttps
sub
pusha
cmpsl
shrb
add
aaa
jnp
inc
mov
ret
andl
pop
imul
xchg
pop
stos
cmp
pop
subl
mov
and
inc
inc
mov
inc
push
call
jecxz
push
mov
lahf
jecxz
xor
icebp
incl
xchg
push
in
cs
rolb
add
test
pushf
jg
das
fnstenv
jns
lods
jecxz
mov
mov
das
or
repz
dec
sbb
jo
lcall
arpl
push
xchg
pop
shl
into
fstl
scas
mov
sarb
and
cmp
lds
andb
scas
mov
adc
aaa
sub
cmp
pop
in
in
sub
sbb
push
adc
xchg
add
stos
adc
cmp
adc
inc
je
mov
scas
jge
mov
jns
jo
daa
cmp
andl
push
push
jnp
imul
jp
pop
out
mov
imul
pop
das
iret
push
aam
loop
out
mov
push
leave
arpl
sbb
or
int
adc
or
xchg
mov
jecxz
push
mov
maxps
vpperm
mov
cmc
stos
xor
xchg
test
cmp
xor
mov
adc
shlb
mov
mov
ds
cmp
inc
mov
lods
push
mov
cmp
fxch
and
sub
or
out
adc
lahf
push
and
leave
dec
jo
aas
mov
out
into
loopne
xchg
fs
add
daa
testl
icebp
push
sub
mov
insb
cmp
pop
adc
stos
or
rcrb
sbb
inc
and
add
cli
fstps
push
out
inc
int3
sbb
mov
inc
mov
test
inc
sti
jge
ret
mov
loopne
mov
mov
jg
negl
mov
dec
pusha
pop
orl
scas
mov
stos
ficoms
dec
nop
mov
iret
xchg
loope
cmp
lcall
cmp
ret
nop
scas
jb
shll
aaa
cmp
pop
adc
stos
popa
imul
jl
insb
dec
pop
hlt
js
shlb
xchg
adc
fdivr
out
and
shl
fisubrs
mov
in
dec
int
aaa
es
lods
jb
adc
enter
pop
cmp
stos
push
icebp
or
sbb
lahf
xor
mov
fwait
sub
xchg
xor
dec
clc
adc
mov
loope
add
xor
pop
outsb
sarb
push
sub
clc
ja
hlt
cwtl
mov
je
inc
iret
mov
jp
pop
jmp
xor
aam
btr
inc
enter
xlat
inc
dec
jno
notl
cmp
mov
mov
adc
ja
push
fwait
mov
mov
out
pop
lods
stos
push
jecxz
or
mov
lahf
repnz
sahf
xchg
cmpb
out
xchg
cmc
pop
xchg
jno
ret
jo
out
mov
jne
in
dec
push
icebp
add
cld
cmp
pop
mov
jmp
push
sub
sahf
adc
jae
sbb
jge
fnstsw
or
pop
and
cs
test
adc
mov
daa
push
adc
lods
imul
or
add
adc
or
push
outsb
call
rorl
add
inc
int3
sbb
nop
sub
pusha
je
dec
addr16
jge
cmc
nop
fs
stc
and
and
ret
lock
stc
mov
jo
sti
cltd
mov
dec
notl
inc
mov
int3
cwtl
sti
dec
push
mov
lods
or
in
pop
int
repnz
loope
cld
adc
dec
or
repnz
sti
sub
mov
arpl
fimuls
xchg
add
lcall
sar
fbstp
aas
cmp
into
ss
stos
loop
stc
dec
in
loope
cli
and
push
inc
sbb
push
mov
rclb
jle
xor
and
push
in
clc
out
fxch
and
pop
mov
leave
dec
xor
insb
jecxz
push
xor
daa
pop
mov
in
adc
dec
inc
sbb
sub
cli
mov
lea
xchg
xchg
pop
add
jge
jecxz
cmp
jne
cmp
jp
mov
mov
outsl
fs
or
fs
or
mov
imul
push
inc
xor
sbbl
mov
loop
inc
int3
mov
sub
and
mov
popf
sub
fwait
and
repz
mov
lahf
incl
orl
xchg
lods
dec
bound
shlb
mov
js
movsb
in
sub
dec
jmp
push
shlb
cs
inc
stos
and
insl
out
in
jbe
sub
sahf
push
add
les
and
clc
fs
into
inc
ret
pop
and
pop
xor
jg
js
cmp
pop
mov
mov
jecxz
mov
sarl
repz
and
mov
cli
cli
ja
shlb
jno
addb
xchg
in
test
adc
imul
jae
clc
cmp
jns
rep
adcl
lods
sti
daa
adc
ficoml
mov
ret
push
pop
xor
shlb
std
or
test
fcomi
xchg
movsl
adc
stos
jle
aas
jbe
stos
push
mov
xchg
addl
icebp
jb
popf
mov
shl
push
lods
jns
sbb
xchg
in
iret
dec
fcmovnbe
xor
ss
popa
cli
cs
aad
outsb
sti
in
and
ret
call
sub
aam
das
pushf
xor
inc
add
scas
jecxz
sahf
fistpl
addl
dec
push
inc
jbe
ja,pn
loopne
popa
xchg
fcoms
test
movsb
icebp
pop
adc
mov
ja
push
fwait
or
mov
mov
out
mov
test
outsl
mov
sar
sti
jno
cmp
fldenv
loopne
inc
pop
push
push
pusha
enter
scas
imul
cmp
push
adc
push
sub
lret
lods
dec
mov
push
push
push
mov
inc
jnp
jge
push
sub
std
dec
xor
inc
adc
ret
push
out
lcall
test
add
test
test
cwtl
cmp
lock
push
lea
outsb
mov
shlb
pop
jae
loope
push
sub
xchg
jmp
cli
test
xchg
mov
xchg
in
xlat
mov
popa
aas
jg
adc
lahf
ss
jae
mov
push
fcomp
hlt
movhps
lcall
cmp
sub
sub
int3
ficoml
repz
add
outsb
sbb
stos
rolb
adc
lds
inc
lret
sub
push
and
dec
adc
jge
loope
lods
loop
in
pop
or
xor
jb
out
jmp
js
dec
add
and
push
mov
xchg
jb
sti
mov
arpl
cmp
orl
push
jmp
push
stos
inc
stc
repz
andb
pop
fwait
mov
sbb
mov
ret
sub
mulb
xchg
mov
cmp
cmp
sahf
icebp
mov
daa
test
mov
mov
push
push
or
xor
andl
push
shl
lahf
ret
sub
add
lods
pop
rorl
push
cltd
push
daa
lret
and
pop
imul
and
shll
mov
std
and
fnstenv
or
add
cs
add
js
and
add
cmp
mov
or
push
jge
test
sahf
push
xchg
lods
outsb
and
test
or
or
jne
mov
scas
out
outsb
mul
mov
or
lret
jg
dec
or
repz
adc
psrlq
loopne
insl
repnz
fs
xor
sub
xor
fidivs
fidivs
mov
call
inc
sub
pop
test
inc
inc
and
dec
repnz
cmpsb
sahf
and
mov
jge
xchg
por
mov
popa
arpl
cltd
sbb
dec
jno
cli
xchg
sub
clc
mov
sahf
adc
and
mov
jne
popf
addb
cs
mov
mov
add
cli
cmp
mov
outsb
call
sbb
xor
mov
fadd
faddp
pop
xor
or
sbb
xor
xchg
in
outsl
mov
icebp
mov
scas
xor
push
cmp
lahf
mov
subb
out
mov
sub
or
cwtl
shll
pop
cmp
sub
ss
pop
je
cmp
mov
jno
dec
bound
xchg
icebp
xor
jnp
cwtl
mov
es
arpl
das
testb
mov
out
std
pushf
mov
fs
divb
and
enter
inc
ljmp
loope
mov
insb
mov
xchg
and
pop
cli
shrb
clc
xchg
fcmove
push
push
xchg
subb
or
xchg
and
out
and
in
push
fadds
cmp
rolb
adc
sub
lds
in
push
int
push
xor
dec
xchg
popf
cmp
push
sbb
pop
mov
mov
inc
cmp
popa
xor
rcll
mov
inc
mov
jmp
sub
sti
cmp
mov
not
and
sbb
jl
sbb
mov
jp
inc
pop
xchg
test
or
push
les
mov
decb
sti
nop
dec
roll
inc
int3
sti
cmp
insb
cmpsb
dec
mov
sbb
lods
cld
lods
lods
push
daa
inc
call
inc
xor
inc
das
inc
mov
dec
jbe
dec
dec
int
leave
dec
outsl
pop
movsb
mov
scas
out
and
or
lahf
loope
imulb
lock
xchg
insb
mov
or
dec
pop
call
mulb
pop
mov
test
imul
inc
sub
mov
adc
fprem1
lock
mov
repz
cmp
call
call
out
lods
fwait
leave
sarl
mov
mov
pop
shll
sub
xor
cmp
dec
xchg
insl
cmp
std
mov
and
cltd
sub
or
out
and
aam
popa
xchg
and
es
xor
in
mov
xchg
mov
add
orl
pop
test
pop
sarl
pmaxsw
icebp
mov
mov
sbb
dec
je
xor
insl
lret
pop
pop
dec
mov
sbb
push
and
cmc
mov
mov
mov
hlt
nop
jo
mov
test
into
and
pop
cld
pushf
negb
and
and
push
aas
pushf
je
rol
pop
cmp
cmc
out
add
push
in
dec
loope
movsl
stos
int3
lahf
fst
jmp
rol
sarl
mov
hlt
stc
push
clc
jmp
loopne
pusha
dec
fsubrp
repnz
mov
push
std
idivl
lar
xor
adc
pop
lret
std
imul
cmp
test
xor
inc
test
sti
mov
shlb
je
jecxz
pop
data16
pop
or
fwait
adc
or
xchg
popf
mull
push
mov
cltd
popf
and
insl
pop
lret
jno
aas
dec
out
push
dec
das
std
jae
push
call
das
fwait
outsb
inc
mov
outsb
jecxz
pop
pusha
pop
mov
push
push
dec
jle
pop
fistpll
inc
cltd
stos
pushl
pop
rorl
pop
pop
imul
loopne
dec
pop
xor
pop
ss
fstcw
out
lock
loope
mov
lahf
loop
lods
into
mov
push
cmc
xorl
mov
loope
movsl
outsl
mul
cld
or
xlat
enter
rcr
and
ret
sti
and
or
push
xchg
add
fisttps
mov
lahf
ficoms
inc
popf
ffreep
jns,pt
ret
or
mov
flds
loopne
cmp
mov
jae
aam
fldcw
xor
pop
or
mov
xchg
xchg
fnsave
and
es
mov
clc
mov
adc
sahf
fcmovne
mov
jp
in
hlt
pop
pusha
push
push
aam
jne
pop
in
jne
xor
idivl
sbb
call
inc
insl
push
xorl
lret
loope
ss
adc
mov
pop
cwtl
mov
dec
sbb
inc
adc
bound
pop
jecxz
push
xor
jmp
and
jnp
cmpsl
push
or
push
jmp
subb
cmp
lahf
cltd
popf
jge
icebp
ret
adc
out
push
dec
cmp
sbbl
mov
xor
fcom
std
xchg
aas
int
js
xor
cli
xor
add
jecxz
icebp
ret
stos
stos
dec
cmp
ficoms
push
stos
inc
pop
vmovhpd
popa
or
cmp
add
adc
mov
cwtl
pop
cld
aaa
mov
and
jg
popf
mov
jb
stos
pop
and
add
inc
add
fstpl
sbb
aam
jge
faddl
in
popa
mov
pop
pop
and
dec
rorl
rcl
divb
sub
inc
push
test
dec
and
loopne
mov
in
dec
scas
pop
xchg
inc
test
add
or
inc
lea
fistpll
xchg
pop
pop
insb
push
stos
push
mov
jo
into
dec
sti
call
adc
and
andl
xchg
cld
mov
cltd
jns
sbb
stc
daa
mov
mov
mov
aaa
mov
and
in
call
shl
iret
fmul
out
iret
stc
stos
mov
iret
and
xor
fdivrs
test
add
jnp
lea
mov
hlt
jb
cwtl
movl
lahf
xchg
jge
sbb
stos
sbbb
mull
aad
cmp
scas
sbb
mov
mov
lret
mov
xlat
and
jne
jnp
sbb
fstpl
mov
jae
mov
aam
dec
jecxz
addr16
js
loop
xchg
arpl
mov
mov
mov
push
cmpsl
int
cmp
fmuls
std
je
inc
movsl
xchg
movsb
adcl
in
dec
bound
das
shl
insb
dec
mov
cmp
xchg
mov
out
mov
mov
fistps
push
int3
mov
xchg
shlb
les
out
mov
loop
inc
push
jbe
rcr
data16
push
adc
or
ss
cmp
fldlg2
cs
inc
push
mov
push
xchg
roll
aaa
int
push
imul
inc
insb
ret
leave
lcall
sub
lret
out
inc
push
jae
push
cmp
sub
sub
divl
dec
add
sbb
mov
inc
lock
or
push
jg
and
jns
test
lds
hlt
add
inc
outsl
xchg
jmp
mov
pop
aas
es
mov
cmp
pop
inc
xchg
push
pop
mov
or
mov
cmpsl
mov
les
adc
add
dec
scas
mov
adc
rclb
sbb
mov
mov
pushf
or
sub
enter
cmp
xchg
xchg
stos
lahf
pop
pop
dec
cmp
fs
test
jl
iret
hlt
and
lcall
jecxz
xchg
cwtl
dec
push
mov
enter
push
rorl
loope
or
stos
inc
push
and
fucomp
inc
fnstcw
ljmp
insb
test
mov
or
sbb
ja
xor
aad
call
aas
mov
sti
in
adc
push
ret
sub
arpl
nop
or
inc
inc
into
sbb
call
push
vmread
xor
xor
popf
mov
sub
mov
inc
mov
movsb
cwtl
cmp
or
add
xor
mov
mov
mov
lret
dec
inc
out
loope
adc
cmpsb
sbb
mov
and
cwtl
mov
cwtl
shll
test
pop
icebp
mov
inc
mov
push
and
inc
dec
mov
les
add
rorb
aam
enter
fisubs
dec
sbb
shlb
and
lods
jae
inc
inc
dec
mov
ds
xor
pop
cmp
adc
mov
aas
std
leave
xor
add
and
sub
enter
sub
dec
mov
pushf
dec
ds
test
pop
cmp
out
push
jo
jb
jp
inc
fmuls
push
and
xorb
arpl
cwtl
mov
mov
xchg
leave
xchg
or
sahf
movsb
mov
push
mov
dec
outsb
leave
mov
fmuls
jbe
mov
fcmovnbe
ss
and
cmpsb
cwtl
lds
test
xor
xchg
popf
xchg
dec
nop
je
fs
mov
out
jg
sti
sub
inc
push
jbe
es
lahf
sahf
adc
cli
lock
push
mov
fstpt
push
mov
add
pop
dec
test
popa
push
fildl
inc
or
mov
mov
and
ret
arpl
push
lret
adc
mov
push
inc
mov
cmpsl
jp
scas
and
xlat
pop
ss
mov
adc
inc
or
jbe
decl
cmpb
gs
outsl
in
inc
clc
or
mov
xor
imul
lock
or
cmpb
push
add
cmp
nop
sub
dec
adc
xchg
cltd
mov
and
es
popf
mov
mov
shlb
dec
or
xor
mov
sub
es
sbb
jae
xchg
in
scas
aad
fwait
xchg
jg
jns
testl
xchg
insl
adcb
loope
cwtl
sahf
mul
mov
jbe
stos
push
mov
loopne
pop
adc
xchg
shrl
mov
shrb
iret
int3
sbb
loopne
cmp
fnstcw
pop
sub
and
lds
sar
imul
jae
adc
mov
cmp
imul
mov
daa
pusha
insb
cmc
jno
inc
lret
mov
dec
adc
pop
adc
imul
es
xchg
mov
sub
jge
pushf
push
loope
jbe
jp
mov
cmp
shlb
in
and
xlat
mov
add
out
ret
xchg
fdivs
inc
sbb
mov
mov
and
mov
push
cmp
or
lock
lock
jmp
data16
cmp
imul
sti
lahf
fnsave
sbb
pushf
xchg
mov
nop
push
cmpsb
cwtl
sub
out
int3
clc
test
pop
and
cmc
testl
insb
mov
cld
out
int
mov
mov
aaa
shl
lods
push
or
repz
mov
push
iret
sub
stos
sbb
lcall
scas
cmp
icebp
xchg
xchg
sub
mov
inc
or
sbb
inc
fsubs
pop
sbb
pop
in
in
or
mov
adc
je
in
lcall
fnstenv
adc
pop
icebp
insb
lea
leavew
mov
jbe
pop
push
js
into
cmpsb
jg
pop
mov
bound
stos
sub
push
inc
insl
in
jbe
xor
mov
push
lret
pop
pop
inc
cmc
inc
fildl
dec
and
out
cmc
inc
mov
aaa
ja
and
jmp
movsb
out
pop
out
fildll
addl
or
cmp
and
add
xchg
sbbl
adc
stos
mov
push
cwtl
subl
es
sub
jbe
jnp
outsb
push
xor
rolb
pop
inc
aad
cmpb
fimull
filds
xorl
dec
fadd
jecxz
mov
add
push
dec
and
xor
mov
push
cmp
pop
sbb
fwait
or
xchg
sbb
sub
int
jp
push
jns
test
jbe
incl
movsb
rorl
cmpl
lahf
pop
jl
mov
je
cmpsb
rcll
pop
sbb
in
outsb
push
repz
add
out
enter
lods
int
outsb
mov
push
aad
jl
dec
mov
push
xchg
mov
dec
mov
and
stos
jmp
cmp
nop
mov
adc
xchg
push
pushf
inc
call
addb
mov
pop
ret
outsb
xchg
repz
fwait
inc
jmp
int3
je
cwtl
addl
mov
lahf
in
add
out
mulb
xor
dec
out
out
push
push
jbe
lods
pop
in
fldpi
pop
sbb
mov
cmpsb
xor
mov
fisubl
outsl
inc
and
inc
xchg
jmp
test
enter
test
xor
lea
xchg
lcall
dec
and
gs
adc
jnp
jl
pop
jno
xchg
hlt
pop
pop
push
xchg
popf
or
test
pop
dec
xchg
and
sub
arpl
inc
push
mov
in
pmulhw
in
mov
in
mov
mov
push
add
inc
jmp
inc
jb
in
rcr
jp
iret
sub
lods
lods
adc
mov
imul
push
enter
into
adc
xchg
test
shl
push
sbb
push
adc
popa
bnd
xorb
icebp
in
fidivrs
loopne
mov
movsb
sub
aam
and
out
int
int
popa
lahf
sarl
call
shll
sahf
in
push
lds
ljmp
jbe,pn
nop
lret
sarl
add
in
sahf
sub
adc
xor
mov
sbb
pop
mov
ds
enter
mov
addr16
loopne
stos
push
add
lcall
sub
push
sbb
cmpsl
ljmp
lods
hlt
adcb
inc
pop
sub
dec
mov
add
sub
adc
cmp
inc
push
repnz
arpl
xchg
stos
dec
dec
fsubrs
aad
ljmp
dec
mov
arpl
aas
add
daa
aad
movsl
outsb
add
imul
jae
push
inc
sahf
pop
pop
sahf
inc
sbb
mov
inc
gs
inc
dec
orb
dec
or
push
in
mov
repnz
repnz
cmpsb
pop
out
lods
in
test
ror
mov
inc
sub
or
fnstcw
lret
loope
push
push
lock
mov
ss
push
inc
mov
and
lods
fbstp
sar
dec
xchg
pusha
loope
int3
dec
fstpt
fldt
push
lret
sbb
and
imul
lahf
loope
lahf
lock
jmp
push
adc
pop
dec
push
fnstsw
ret
xor
push
imul
jae
lds
or
orl
enter
or
xor
dec
jg
mov
dec
scas
mov
or
dec
bound
lret
fwait
sahf
cmp
aaa
sbb
inc
stc
loopne
jg
push
inc
cmp
inc
or
fnstenv
enter
jecxz
lea
popa
cmp
mov
ror
xchg
jmp
or
xor
stos
fsubrs
in
out
mov
xchg
jmp
mov
leave
jnp
xor
dec
aas
pop
loopne
or
inc
dec
inc
test
idiv
mov
mov
jne
loope
mov
mov
out
insb
cmp
and
cmp
in
icebp
adc
insl
enter
jo
inc
inc
xchg
sar
sbb
cmp
push
or
mov
shlb
ljmp
and
aas
call
mov
test
mov
and
add
icebp
mov
mov
mov
sub
ds
mov
mov
lds
xchg
inc
pop
leave
imul
pop
cmp
adc
sub
xlat
lret
pop
mov
icebp
and
addl
push
mov
xlat
mov
adc
cmp
leave
adc
xor
mov
sub
jmp
inc
inc
xchg
ja
dec
push
ret
mov
aad
cltd
sti
push
out
arpl
add
mov
mov
mov
xchg
and
adc
push
sbb
jae
ret
jl
fildll
std
test
movb
dec
inc
out
shlb
inc
mov
out
fisubs
mov
inc
sbb
dec
mov
mov
outsb
ficomps
inc
enter
cmpsl
aam
shll
adc
mov
cwtl
lcall
adc
xor
jns
loop
es
pop
jb
stos
ret
or
mov
lea
cmpsl
jl
mov
and
out
leave
push
xlat
inc
mov
sbb
xor
mov
adc
negb
rcrl
cmpsb
sbb
cmpsb
sbb
jg
push
mov
popa
fs
or
or
ss
inc
int
arpl
pop
pop
loopne
inc
pusha
xor
xchg
or
mov
cmp
cmp
ljmp
sbb
sub
dec
sub
mov
bound
cmp
push
jge
sbb
sub
insl
std
push
dec
cmp
pop
fldcw
out
pop
stc
dec
fiadds
jl
cli
and
inc
push
sub
pushf
jecxz
addr16
sbb
sbb
and
popf
inc
stos
test
daa
sbb
shr
stc
imul
cmp
lahf
pop
shll
mov
std
arpl
dec
shll
mov
inc
stos
cltd
inc
inc
mov
clc
jo
or
jbe
call
into
lods
shlb
popf
inc
push
std
cmp
aas
mov
or
sbb
pop
inc
ss
fwait
push
lahf
jl
out
fldl
cmp
nop
adc
xlat
sti
mov
cmp
les
in
xorl
inc
cmp
jbe
inc
jnp,pt
mov
ret
mov
stos
loope
mov
int
dec
repnz
ficompl
inc
mov
jmp
in
into
and
mov
fldenv
rorl
lahf
lea
int
inc
clc
aad
jmp
xor
pop
bound
xor
ljmp
dec
ljmp
jmp
sub
add
pop
lea
or
sti
sbb
and
in
sbb
mov
sarb
sahf
movsb
nop
loop
imul
sub
scas
mov
xchg
stos
stc
ret
ds
repnz
repz
roll
inc
das
jne
mul
inc
xlat
mov
or
cltd
add
rorl
sbb
fcomp
xor
pop
cltd
scas
stos
sbb
and
pop
mov
pop
ds
mov
add
les
into
je
cmp
add
push
push
roll
adc
sub
int3
cs
fsubrs
mov
hlt
pop
cmp
xchg
pop
inc
imul
mov
mov
loopne
int
cmp
leave
dec
pop
rorb
mov
lret
fwait
testl
xchg
pop
xchg
pop
xlat
cli
cmp
ljmp
push
leave
xchg
mov
test
xor
popa
jmp
mov
scas
cmp
sbb
adc
popf
or
xor
aad
mov
dec
pushf
test
es
test
lret
dec
ffreep
mov
imul
jne
subl
aaa
xor
call
mov
lock
lock
inc
push
icebp
lahf
pop
sub
addr16
xchg
cmpsb
addr16
jmp
addr16
inc
mov
push
hlt
push
dec
pop
sbb
in
rorl
push
cmp
sub
sub
mov
cltd
sub
lea
popl
sar
dec
enter
mov
scas
lock
inc
inc
pop
push
inc
add
out
push
loope
loop
inc
sub
fwait
cltd
hlt
jno
rorl
into
sbb
and
aas
mov
loope
lret
subl
addr16
cmpsl
cmpsb
movlhps
int3
cmp
and
inc
out
test
shrl
xor
int
dec
in
cmp
dec
push
mov
inc
and
sbb
jb
jmp
add
nop
test
inc
jecxz
ja
pop
ds
mov
mov
add
mov
loope
jmp
jmp
mov
push
sbb
push
mov
inc
push
movsl
fldenv
jb
and
sbb
shlb
nop
cli
es
loope
movsl
add
mov
pop
f2xm1
call
pop
shll
mov
sub
dec
ljmp
push
cmp
aad
sahf
sub
lret
cmp
loope
mov
xchg
scas
adcl
mov
mov
jno
sub
inc
adc
cmc
shrb
and
push
adc
jl
cmp
call
shlb
gs
inc
push
mov
int3
mov
std
dec
dec
push
xchg
lds
mov
add
daa
je
ficompl
mov
fmull
mov
or
or
cmp
mov
roll
mov
fiaddl
mov
mov
out
outsb
decl
push
enter
jne
sub
adc
ret
push
dec
mov
int
dec
adc
sub
cmp
in
inc
jecxz
insb
bound
test
sti
mov
int3
roll
div
cmp
cmp
cld
jo
sbb
rcl
fwait
pusha
pop
insl
inc
imul
jmp
imul
jae
fldenv
and
push
sbb
jmp
imul
fwait
mov
sbb
dec
std
adc
push
testb
lret
mov
bound
out
ret
aam
std
cmp
out
aaa
inc
out
jno
cli
out
dec
adc
inc
lret
out
cmp
in
test
pop
push
mov
aad
pop
int
xchg
aas
sub
rcr
push
repz
xchg
pushf
xchg
inc
dec
push
fcmovnbe
in
mov
shl
xlat
jmp
mov
in
repnz
in
out
jns
inc
int3
push
and
xor
test
lcall
aam
fidivl
ljmp
punpcklwd
cmp
ljmp
mov
jns
jmp
insb
jp
leave
daa
fildll
fiadds
std
add
cld
leave
cmp
cmp
imul
xchg
gs
sbb
stc
leave
popa
movsb
popf
sub
or
in
clc
enter
sbb
lods
lret
mov
cwtl
aaa
mov
popf
jnp
push
cmp
mov
fs
mov
fwait
iret
pop
int
xorb
lahf
fs
adc
xchg
daa
sub
sbb
add
cmpsl
or
dec
pushf
sti
pop
faddp
arpl
imul
imul
mov
testl
test
out
in
popf
inc
dec
cld
cmp
sub
push
adc
in
fs
push
xlat
arpl
xor
pushf
js
call
jns
cld
fcmovnb
cmp
jae
and
push
cmp
fsts
pushf
nop
idivb
sub
jp
mov
lret
enter
ud1
adc
and
int3
or
push
jb
mov
adc
dec
jl
imul
imul
inc
or
jecxz
push
arpl
push
add
popa
push
enter
mov
and
jg
inc
dec
icebp
dec
je
mov
pop
pavgw
cmp
call
or
xchg
push
data16
mov
jmp
cmp
dec
test
loop
scas
mov
daa
or
pop
out
mov
pop
ror
daa
pop
dec
add
into
leave
mov
add
mov
mov
dec
cli
subb
pop
sbb
pushl
add
xor
add
mov
pop
lahf
and
sbb
call
outsb
mov
call
rcrb
cmc
mov
loope
or
cmp
pop
test
aaa
je
inc
pop
sub
and
mov
pop
pushf
mov
loope
inc
ficoms
xchg
loopne
rclb
gs
and
sbbl
cltd
outsl
mov
pop
int3
in
mov
fs
mov
arpl
adc
dec
pusha
lret
icebp
nop
and
cmp
push
lds
lods
ror
sbb
rolb
adc
cmp
lret
fxch
movsl
lods
inc
push
fistps
jnp
roll
out
push
test
or
inc
add
lret
pop
shrl
cmp
repnz
xor
into
add
jno
xor
ret
rcrl
aas
and
fs
cmp
shlb
pop
add
push
dec
inc
jnp
shrb
sarl
xor
and
inc
adc
jecxz
pop
stos
push
push
cmp
sub
xlat
loope
and
jno
stc
and
test
fcomps
sti
lret
ds
test
cwtl
mov
xlat
stos
enter
pop
pop
pop
mov
jbe
int3
ljmp
lock
andl
mov
ljmp
cmp
jmp
push
ret
mov
arpl
stc
iret
xchg
shr
fidivrl
jbe
cmp
clc
cld
mov
dec
xchg
mov
pop
adc
ret
mov
loope
and
push
lea
mov
xor
dec
adc
xchg
std
sbb
jg
mov
inc
lds
icebp
in
add
mov
mov
out
lret
and
bound
scas
or
add
pop
mov
loop
sbb
push
pop
cs
scas
dec
stos
or
push
inc
inc
mov
pop
stos
and
sbb
fmul
ret
add
call
je
xor
imul
mov
mov
jmp
inc
mov
cmc
xchg
inc
shlb
sbb
and
inc
push
inc
cmp
test
or
out
repnz
scas
mov
leave
and
xor
pop
or
jbe
jno
cmp
por
cmpsb
xor
or
mov
and
imul
cmp
dec
xor
mov
mov
push
lock
sbb
fcoms
cmp
std
xor
push
pusha
mov
sbb
pop
aad
sub
push
in
test
das
pop
inc
pop
mov
dec
xchg
mov
inc
cmp
shl
dec
int3
push
dec
xchg
call
mov
sar
leave
mov
dec
lds
cmp
pushw
or
pop
xchg
ret
incl
mov
pop
sub
scas
rclb
and
fdivr
xchg
push
int
jmp
out
in
stc
cld
xchg
ror
int3
cld
xor
push
cltd
cld
rclb
int
mov
fidivrl
rclb
fcoms
sbb
aaa
mov
dec
xor
out
pushf
dec
push
mov
cmp
lahf
sbb
pusha
scas
push
dec
mov
cmpsb
jno
jnp
push
sbb
adc
stc
inc
rorb
shll
and
pop
ljmp
test
push
jecxz
pop
fpatan
and
push
mov
add
bound
push
leave
or
adc
dec
sub
jns
std
loope
cmp
sbb
xor
ljmp
xchg
push
sbb
ds
ja
iret
icebp
rorb
pusha
mov
ljmp
sbb
sbb
sarl
ficoml
xor
dec
cwtl
sahf
in
jmp
jae
pop
enter
add
xchg
cwtl
imul
dec
cld
or
mov
and
loopne
inc
dec
rorb
out
rcrl
push
int
jl
cmp
daa
and
xchg
aas
inc
push
or
dec
cwtl
and
dec
outsl
lcall
push
lea
out
sahf
dec
cmp
xlat
sarl
push
call
mov
and
imul
sub
int3
dec
pop
push
and
push
cld
ljmp
roll
mov
dec
jp
inc
repnz
pop
push
shr
ljmp
jo
mov
fistpl
iret
mov
rcr
push
inc
dec
mov
lret
imulb
out
cmp
shll
imul
std
cli
shr
mov
ljmp
pop
jge
mov
dec
pop
pusha
mov
cwtl
je
mov
jecxz
fists
fstpt
out
mov
lret
cmp
mulb
into
or
shll
xor
ss
repz
mov
mov
add
popf
xchg
jno
or
push
xor
jns,pt
out
cmovo
push
aad
out
in
dec
testb
cltd
rol
icebp
mov
fisubs
shll
insb
add
push
movsb
icebp
das
fsubrs
add
imul
scas
int
sbb
fidivrs
rorb
jbe
lret
push
aaa
mov
adc
sbbl
push
fst
add
mov
int
into
aas
and
pop
sub
ds
inc
mov
dec
cmpsb
arpl
int3
push
stos
cld
call
ja
out
mov
inc
xchg
sub
push
push
clc
pop
loopne
iret
dec
and
fidivl
clc
clc
out
cld
sbb
inc
sbbl
dec
inc
cmp
ja
xor
push
cmp
xlat
pop
mov
je,pt
mov
fmull
jbe
push
je
pop
xor
sub
fcoms
and
cmp
addb
jp,pn
sbb
or
xchg
out
js
daa
sub
or
cmpsb
sbb
xor
cwtl
push
out
adc
mov
mov
jnp
xchg
shll
adc
mov
lea
pop
adc
out
loop
rol
fwait
ds
mov
pop
mov
adc
mov
add
int
lret
lahf
pusha
stos
jno
into
xchg
and
lret
lods
jp
shll
adc
mov
sub
cwtl
je
leave
adc
es
ror
popf
mov
xlat
mov
pop
loope
dec
pop
adc
push
outsl
adc
cmp
dec
fs
push
lahf
xchg
dec
pop
sub
shrl
mov
pushl
test
mov
inc
and
jmp
int
fdivrl
pop
arpl
loop
stos
mov
and
loopne
xadd
push
push
cmp
xchg
push
psllw
imul
scas
xchg
int3
or
add
shrb
dec
movb
stos
cmovns
cwtl
add
ror
in
push
adcb
aam
loopne
rorb
inc
int
xlat
mov
cmpl
or
or
dec
jnp
ud2
jnp
xor
je
sbb
repz
in
jmp
das
mov
adc
lds
mov
gs
imul
and
iret
pop
negb
fnstsw
stc
loopne
orl
xchg
dec
adc
and
cmpsb
add
movhps
and
cs
cmp
dec
push
xor
sub
sub
push
ljmp
mov
lahf
sahf
lahf
adc
cmp
mov
or
scas
std
mov
insb
xorb
lcall
cmp
lock
fs
mov
leave
rol
and
and
dec
ljmp
bound
and
add
inc
lods
cmp
mov
cmp
imul
and
loopne
push
jp
rolb
into
inc
dec
push
leave
pop
addr16
push
pop
fmuls
adc
scas
js
jp
sbb
ja
leave
inc
mov
jecxz
punpckldq
addb
pop
mov
cltd
imul
cmpsl
adc
jb
and
mov
xor
dec
pusha
inc
mov
xlat
mov
mov
in
dec
add
add
lea
clc
rorl
loope
jl
fcompl
ds
shlb
mov
stos
out
and
ds
stc
cmp
enter
cmpsl
jmp
loope
pop
dec
into
ret
or
gs
xorl
inc
dec
icebp
nop
xchg
lret
popa
mov
nop
pop
add
js
cmp
pop
dec
sbb
int3
cmpsb
pop
ds
loop
icebp
out
xor
gs
lock
push
mov
ds
hlt
leave
sub
int3
sub
inc
mov
jmp
pop
xor
dec
fmuls
aas
push
cmpsl
sub
cmp
xchg
paddusw
dec
mov
shl
cmp
lock
and
add
sarl
mov
mov
xor
cmp
cli
icebp
sbb
cmp
lret
icebp
jnp
dec
jb
cld
xchg
mov
movsl
jecxz
mov
and
call
es
xchg
adc
pop
cmpsb
xorl
rcrl
es
sbb
mov
dec
xchg
fistpll
pop
ds
or
dec
mov
push
cmp
test
dec
clc
push
ret
in
test
pop
lcall
mov
scas
imulb
and
push
rcll
mov
jl
ja
mov
dec
mov
xor
mov
sbb
sti
int
adc
leave
fisttpll
inc
inc
pop
int
dec
cmp
sub
popa
imul
cmp
mov
xor
mov
loop
or
dec
xor
pop
push
mov
xchg
push
push
cs
or
rcll
stc
mov
dec
das
push
mov
enter
paddd
ror
push
test
pop
fadds
mov
dec
int3
movsb
mov
push
push
stos
add
and
cs
mov
xchg
inc
cmpsl
mov
adc
inc
int3
or
data16
mov
xor
inc
push
insl
dec
xchg
rol
pop
ret
incl
push
push
mov
cltd
cmp
mov
push
jb
mov
imul
jecxz
lea
push
mov
in
push
enter
shrb
xor
mov
shrb
mov
sbb
dec
mov
sti
dec
or
push
outsl
fninit
dec
inc
and
cmp
lods
jecxz
mov
clc
outsb
es
mov
inc
mov
mov
pop
flds
push
fldcw
xor
and
cli
dec
mov
inc
repz
mov
repz
repnz
or
stc
subl
mov
jb
dec
iret
mov
mov
pop
data16
loope
push
lahf
fldt
imul
jecxz
inc
cli
daa
rcl
xchg
mov
jb
sub
xor
inc
and
sysret
rcr
pushf
movl
add
lock
inc
jmp
in
inc
jne
adc
and
outsb
cli
xor
mov
cwtl
sbb
std
subb
sbb
iret
jecxz
js
fisubs
dec
das
rorb
cmp
out
test
cwtl
int
jns
xor
push
adc
lret
out
push
mov
push
ds
push
outsb
clc
lret
sub
jnp
adc
rorb
fnstenv
jno
inc
popa
fnstenv
cld
sub
rolb
sub
cmpsb
inc
leave
lret
jmp
pop
pop
loope
mov
jno
mov
push
jb
arpl
push
dec
mov
push
out
bound
int3
jmp
inc
insb
dec
shll
shl
leave
adc
add
push
jno
orb
test
mov
sahf
cwtl
pop
imul
dec
shl
fstl
stos
jns
out
mov
ds
cwtl
into
pop
push
pop
dec
sbb
decb
cmp
mov
loope
cmp
mov
dec
mov
addl
mov
add
loope
jae
pop
repz
push
shll
fbld
jns
inc
push
jno
in
sbb
jge
in
dec
shll
int
mov
dec
movsl
xor
das
rcrl
push
fbstp
aaa
xchg
outsl
inc
jb
icebp
mov
lods
js
loope
mov
out
ret
sarb
out
ja
lock
jo
dec
and
cli
enter
jg
stos
loope
sub
inc
push
xchg
imul
cmp
add
filds
push
or
and
push
mov
adc
in
enter
push
fadds
cmp
into
into
xor
and
cmc
jg
popa
ffreep
inc
adc
add
jmp
addb
dec
add
lret
push
sti
cld
dec
xchg
add
push
ja
add
dec
mov
dec
into
push
or
es
scas
jmp
fidivs
lret
pop
std
cmp
xchg
mov
addr16
and
pop
mov
pop
or
daa
pop
dec
add
ror
lock
push
outsb
ret
inc
adc
out
shl
sub
fdivs
push
dec
adc
mov
es
into
dec
into
jns
cmpsb
leave
scas
cli
inc
scas
mov
fidivrl
jnp
out
inc
arpl
movsb
sub
aam
pop
mov
push
rolb
inc
bnd
pop
rorb
into
xlat
les
ret
cmp
loop
outsl
in
xor
cwtl
dec
test
jge
js
add
and
or
aas
cli
mov
lcall
arpl
rcrl
outsl
into
cwtl
and
jg
mov
pop
jo
daa
sub
fwait
stc
clc
in
rol
xchg
stc
mov
int3
push
mov
or
mov
nop
into
ljmp
xor
mov
repnz
dec
outsl
or
loope
fnstsw
pop
mov
loopne
jno
push
sbb
sub
mov
dec
xor
cmpsb
mov
aas
inc
std
das
stos
fildl
sub
add
mov
push
enter
loope
fwait
push
cmp
pop
jmp
es
mov
arpl
adc
div
mov
push
rcrl
iret
scas
cmp
or
push
jle
mov
push
movsb
dec
xchg
std
pop
rcrl
test
pop
popf
ja
js
popa
lret
jno,pt
fwait
into
rcl
xor
scas
adc
mov
sbb
mov
je
sahf
loope
bound
bound
stos
xor
or
add
out
int
int
pushf
loopne
shll
mov
inc
xchg
adc
sti
bnd
data16
incl
cmp
mov
loope
inc
jg
hlt
and
inc
insb
stos
fldl
xchg
fwait
inc
dec
loop
mov
dec
dec
iret
sub
movsl
and
xor
mov
and
stos
dec
xor
fs
shlb
sub
mov
xlat
mov
outsb
rorl
xchg
mov
andl
sbb
shrb
adc
bound
cmp
pop
xor
sbb
sub
mov
fadd
shl
adc
jecxz
adc
inc
ret
inc
sub
test
push
sub
mov
loop
cmpsl
mov
inc
inc
cld
scas
addr16
mov
pop
add
rcr
dec
cmp
jg
test
push
add
pop
add
adc
or
lds
outsl
insl
or
pop
mov
push
mov
mov
push
in
jmp
sahf
inc
lahf
cld
pop
xor
xor
scas
cmp
mov
stc
daa
sub
addl
pop
mov
jmp
and
mov
sbb
xor
rcll
mov
inc
jle
pushf
subb
je
or
sub
fnstcw
mov
fidivrs
scas
sub
mov
sbb
jle
push
icebp
adc
mov
xchg
dec
lret
push
dec
mov
test
popa
daa
xor
sbb
adcb
push
rol
xchg
insb
jecxz
call
push
das
adc
inc
loope
lea
inc
das
ds
inc
outsb
push
scas
aad
mov
icebp
cld
iret
lcall
mov
mov
hlt
dec
xlat
sarb
cld
or
movsl
cmp
and
or
cltd
fsubrp
lods
leave
fbstp
icebp
or
mov
aad
leave
sub
aad
sub
arpl
jne
pop
inc
push
xor
mov
int3
add
mov
fmul
push
rorl
mov
ret
hlt
arpl
cli
popf
push
adc
mov
out
adc
dec
cmp
push
jae
and
push
addr16
adc
or
je
push
insl
lods
pop
jge
loope
das
aas
sub
jg
mov
lds
mov
fwait
iret
dec
mov
jae
js
ds
xchg
nop
sbb
mov
sbb
sbb
xchg
inc
int
inc
mov
cmc
add
in
and
push
pop
cmp
jne
and
push
sahf
pop
sub
aam
in
xchg
push
xchg
cwtl
push
popf
jp
pop
out
push
push
outsl
mov
rclb
adc
out
or
add
les
insl
lret
push
xor
icebp
cs
pop
out
adc
cmp
mov
lods
mov
roll
movsl
mov
mov
imul
sbb
pop
sbb
add
inc
mov
lods
mov
iret
jge
push
xchg
or
ljmp
andl
fwait
lret
mov
fwait
lahf
xchg
adc
in
es
lock
insl
iret
popa
dec
add
call
daa
mov
cmpsl
dec
cs
and
frstor
outsl
add
popf
out
lahf
rcl
dec
dec
mov
enter
pop
rcl
sub
loope
jns
lods
es
xor
dec
lahf
repz
dec
inc
push
ret
lock
inc
sahf
inc
jnp
das
fcompl
sbb
test
lds
shlb
xor
inc
cli
inc
or
xlat
loope
pop
inc
cld
jp
popf
pop
out
xchg
int
dec
mov
and
adcl
daa
stos
ror
cmp
and
dec
cmp
xlat
dec
adc
mov
mov
cmc
xchg
inc
inc
sub
mov
rorl
dec
aad
mov
loop
mov
sub
loop
and
adc
jae
enter
xor
add
iret
mov
lret
sbb
loope
sbb
dec
sub
js
xchg
aam
dec
clc
xchg
ss
sub
mov
inc
xlat
mov
pop
sarl
push
push
xor
cmp
imul
outsl
out
xchg
rolb
clc
cs
and
pushf
fidivrl
bound
sbb
mov
adc
pop
rcll
outsb
shll
faddp
mov
mov
iret
arpl
xchg
jecxz
iret
fidivrl
sbb
shll
xchg
ret
insb
push
rcrl
popa
pop
jmp
into
imul
stos
aad
idivb
les
js
pop
out
cmp
andb
les
nop
mov
and
and
movsl
adc
js
popa
inc
andb
adc
and
push
sub
scas
adc
pop
dec
dec
inc
sahf
push
lret
aas
out
cmpsl
xor
xor
std
test
ret
ret
test
dec
inc
push
adc
je
arpl
inc
aad
mov
cmp
int3
test
jge
xchg
mov
xchg
bound
xchg
sahf
mov
push
xor
incb
in
dec
cltd
cmp
lods
xchg
popa
push
add
jnp
push
jp
stos
arpl
cmpsl
inc
push
cli
lods
mov
dec
lcall
sub
scas
push
mov
mov
popa
ja
pop
lahf
jge
movsb
jae
pop
outsb
sbb
push
scas
adc
xchg
xor
jmp
mov
push
ret
inc
imul
lods
mov
jmp
push
shrb
shrl
add
std
xlat
pop
jne
adc
cmp
sub
insl
push
sbb
adc
and
push
clc
or
aas
or
sbb
rorl
loope
loop
dec
push
adc
sbb
in
adc
loopne
mov
js
push
aaa
adc
ja
jmp
hlt
xchg
jg
jg
mov
xorl
inc
nop
pop
jnp
sahf
lahf
fwait
imul
xchg
adc
rclb
cmp
cltd
dec
daa
sbb
sahf
jno
lods
les
stos
mov
inc
ret
test
ror
jge
mov
jmp
fwait
sbb
fdivrl
stc
dec
gs
mov
into
jge
mov
addl
lock
sbb
mov
test
adc
add
data16
insb
xor
add
out
jmp
lea
inc
mov
push
out
fcmovne
mov
out
add
popf
cmc
dec
xchg
xor
xlat
testl
sarl
mov
push
dec
lret
mov
fmulp
jecxz
repnz
ss
sbb
pusha
cmc
pop
ss
sbbb
xor
loop
je
sub
ja
adc
xchg
jmp
lret
sbb
adc
jbe
sub
pop
sbb
adc
inc
dec
sbb
xor
ror
add
dec
das
pushf
ds
xor
xor
sti
enter
test
out
cmp
jmp
ret
nop
daa
mov
lods
aad
cmpsb
hlt
mov
push
mov
add
cwtl
add
in
jne
aas
lahf
movsl
jle
ret
jae
fcoms
fidivrl
xchg
or
add
xor
push
stc
shlb
push
lcall
sbb
fs
mov
or
out
sti
pusha
push
pcmpgtd
hlt
push
addr16
into
mov
cmc
add
pop
mov
or
jnp
hlt
jp
fstps
adc
ja
xchg
sti
popa
pop
cmp
and
fbld
in
push
scas
or
adc
lcall
dec
push
daa
mov
test
lea
xchg
push
movups
ja
mov
cmp
mov
xchg
sub
les
mov
fwait
les
and
jne
popa
dec
dec
subl
dec
inc
dec
pop
mov
aad
loop
and
dec
push
xor
pop
jecxz
mov
xchg
and
jecxz
push
xor
lret
test
xchg
lds
mov
jp
dec
leave
sahf
push
mov
sti
push
mov
push
fsubl
loop
sub
xchg
mov
nop
xchg
xor
and
xor
pop
repnz
je
cmp
nop
lock
cmp
mov
cmp
adc
sbb
push
movsb
lcall
inc
cmp
hlt
mov
xorb
orb
push
or
sbbl
sbb
adc
ret
bound
and
or
aaa
add
jecxz
xchg
dec
dec
int
and
mov
cmp
inc
outsb
scas
int3
out
jb
dec
push
pop
repnz
jns
mov
lods
aam
mov
ss
jmp
lods
push
bound
push
pop
push
negb
loope
sbb
mov
ljmp
out
out
scas
out
in
mov
or
fdivrl
adc
mov
jge
mov
lret
add
jne
sub
and
inc
jg
popa
mov
aaa
daa
lds
mov
loopne
lret
mov
daa
aas
mov
pop
inc
cmp
or
cmp
hlt
jmp
ficoml
fnstcw
je
popa
push
ljmp
push
push
imul
pop
shrb
repz
testl
lods
pop
add
test
cld
frstor
and
push
mov
mov
mov
and
idivl
xor
int3
xor
les
scas
jo
mov
fidivrs
jle
sbb
xchg
pop
lahf
mov
nop
push
ret
loop
mov
dec
mov
and
test
incb
movb
cs
push
push
mov
push
and
push
out
aaa
xor
push
pop
fnstenv
sub
lcall
cmc
lcall
mov
daa
sahf
push
fwait
jl
fdivrs
mov
out
jecxz
lcall
xor
xor
pop
push
dec
cmp
push
hlt
popa
es
mov
xchg
data16
dec
jne
inc
pop
adc
jnp
push
dec
pop
cld
outsb
xchg
nop
pusha
imul
dec
imul
mov
repnz
lea
cmp
mov
std
test
test
push
gs
cmpsb
inc
xor
xchg
lret
pushf
mov
mov
aam
mov
push
sub
fsubr
pop
sbb
inc
fildll
stc
jnp
mov
push
or
xchg
addl
movsb
out
push
popf
insb
ret
loopne
das
inc
repz
movsl
movsb
int3
pusha
pop
sahf
xchg
rorl
pop
add
push
fidivrs
lock
aas
jns
mov
cmp
adc
lock
mov
aam
pop
cmpsl
stc
outsb
and
loopne
xor
add
pop
dec
outsl
or
fucomi
pop
out
popa
mov
lcall
daa
mov
rcr
shr
loop
cmpsb
push
sti
test
cmc
in
shrb
shrb
sub
cltd
mov
addr16
pop
stc
add
sub
cmp
js
jne
adc
xchg
pusha
lods
outsl
push
fstpl
sub
push
cmp
nop
adc
mov
mov
leave
stos
test
jmp
pop
push
sbb
push
xchg
xchg
mov
mov
ja
in
mov
push
dec
mov
out
inc
sbb
or
and
aas
cli
ljmp
mov
dec
inc
les
nop
xchg
or
leave
cli
dec
pop
loopne
jl
decb
push
jg
cmp
mov
xchg
lahf
iret
push
dec
aaa
push
sbb
jmp
test
sahf
test
cmpsb
dec
add
test
jle
mov
adc
cmc
js
adc
fildll
push
in
addr16
mov
and
cmpsb
dec
pusha
sub
pop
cmp
xor
fidivrl
sahf
cmp
test
mov
inc
cwtl
fcomps
out
lea
jbe
pop
andl
movsl
gs
inc
xchg
pusha
inc
fidivrl
stos
sbb
imul
lea
jb
fadds
mov
jnp
mov
js
mov
sbb
xchg
dec
loopne
xchg
mov
and
lds
cmp
ds
xor
cmp
inc
jo
cmp
mov
les
cmp
jo
daa
add
into
push
add
sub
lds
scas
dec
js
test
add
mov
jo
jmp
insl
pop
ss
inc
xchg
hlt
into
bnd
das
rcll
shr
shll
cmp
cmc
cmc
stc
mov
mov
sahf
sub
ja
cmpsl
je
dec
jo
popf
stc
pop
adc
sub
hlt
cmp
jle
cmp
out
xor
les
fisubrs
iret
mov
movsb
mov
or
inc
xchg
pushf
es
sub
pop
push
or
pop
mov
fbld
cmp
adc
or
scas
insb
inc
sahf
test
clc
push
push
jbe
gs
movsl
or
ss
scas
sbb
and
insb
pop
and
and
iret
popf
mov
inc
add
in
inc
cltd
adc
stos
outsl
inc
gs
das
aaa
lock
loope
mov
cmp
rcll
push
cmpl
push
fdivl
add
mov
cltd
inc
sub
jae
jp
jno
xor
jmp
mov
rcll
dec
popa
mov
loopne
sub
icebp
lods
test
xor
xchg
mov
mov
add
hlt
jl
mov
and
mov
mov
xor
nop
rolb
lock
out
rep
sbb
pop
xor
mov
stc
aad
les
sbb
outsb
pusha
pop
or
data16
push
outsl
mov
pop
ds
js
clc
sbb
or
pop
push
in
and
sti
xor
repnz
imul
add
push
icebp
adc
push
xchg
dec
push
add
dec
mov
mov
add
sahf
pop
mov
dec
push
lcall
mov
push
dec
adc
jae
dec
mov
fldt
bound
cmp
mov
jbe
inc
in
es
cmpsl
cmc
push
shll
outsl
movsb
movsb
xchg
jbe
and
add
call
lcall
pop
inc
mov
insb
repz
cmp
cwtl
jbe
push
fldl
jge
iret
jbe
push
cltd
inc
xor
pop
incl
xchg
lret
sete
adc
sbb
rol
and
mov
push
shl
repz
sub
adc
mov
dec
pop
cwtl
mov
loope
and
inc
adc
dec
scas
pop
mov
dec
outsl
push
jo
imul
push
loop
cld
pop
dec
icebp
arpl
pop
xor
mov
sub
mov
insl
clc
or
mov
push
adc
aas
sahf
jae
xchg
orl
pop
mov
inc
ret
mov
xchg
mov
xchg
das
xor
fiadds
xor
fildl
mov
xor
pop
xchg
loop
sbb
xchg
push
out
aam
jno
dec
data16
dec
popf
fisubrl
xor
roll
add
stc
rclb
push
xor
in
jp
push
push
mov
nopl
out
pop
xchg
lret
pop
gs
ja
xchg
sub
clc
sahf
repnz
jp
push
fsubl
movsb
outsb
lods
and
ja
sub
push
cmc
aaa
aad
sub
push
in
in
add
pushf
mov
mov
push
sbb
xor
or
jo
ficoml
cli
add
mov
imul
push
pop
les
je
sub
iret
aas
xor
and
cmpb
mov
das
pop
sbb
xor
rclb
mov
pop
lret
xchg
and
inc
dec
adcl
in
es
sahf
std
ds
mov
call
fisubrl
mov
cld
pop
loopne
fsts
mov
leave
cmp
sub
out
rcll
imull
push
or
mov
bound
inc
pop
inc
enter
mov
sub
mov
push
lock
aam
mov
mov
sub
cmpsb
jae
shld
and
xor
into
cmp
lds
imulb
iret
mov
and
loope
pop
sub
aam
inc
aaa
in
sub
test
add
inc
fcmovne
adc
mov
xor
sbb
cmpsb
lock
lods
lahf
and
imul
cli
dec
xchg
arpl
push
jle
cmp
inc
xchg
and
dec
and
imul
jmp
xor
cmpsl
xor
mov
je
sub
sub
or
or
aas
movsl
inc
mov
mov
mov
push
insl
pop
push
scas
push
jae
xor
out
imul
fmul
mov
arpl
mov
xchg
loopne
icebp
stos
add
fldcw
mov
jg
rolb
in
test
imul
adc
enter
or
sbb
testb
ret
cmpsb
mov
adc
sub
das
or
sub
outsb
xchg
idivb
add
cs
mov
sbb
aaa
or
dec
das
push
inc
fildll
pop
xchg
dec
imul
and
fsubl
push
and
pop
ret
out
ss
push
push
jne
test
or
mov
jge
testl
ret
lret
push
xchg
andb
adc
int3
and
push
pop
fdivl
xor
sub
imul
xor
pop
push
xorl
lods
divl
aad
inc
cs
mov
mov
xchg
push
iret
lahf
and
cs
fidivl
lahf
fmuls
das
in
mov
mov
ljmp
jne
cmpl
mov
push
push
mov
cmp
popf
lea
orl
lret
sahf
sbbl
mov
faddl
sarl
scas
movsb
push
scas
shr
sbb
gs
sbb
push
incl
enter
jbe
add
movl
and
fdivs
mov
loop
ljmp
xor
or
leave
enter
xchg
cli
push
sbb
bound
dec
mov
arpl
inc
sub
inc
daa
jp
lods
or
push
sub
divb
sbb
scas
lahf
cmp
test
cmpsl
mov
push
add
add
mov
jb
fdivr
push
ds
jbe
push
add
and
lret
test
enter
pusha
loopne
inc
push
cld
xorb
mov
mov
int
stos
mov
and
icebp
xor
cli
test
jecxz
dec
cmp
mov
loope
bound
xchg
mov
pop
mov
ret
lea
mov
sbb
lock
sub
es
outsl
sti
xor
jae
outsb
aam
cs
mov
pop
aas
ss
dec
dec
enter
xchg
into
sub
adc
nop
jl
sbb
dec
sbb
dec
fstps
pop
push
gs
ja
leave
jmp
or
scas
push
fstpt
push
call
mov
test
mov
outsl
or
ret
pop
enter
add
jle
rorb
cld
fadds
add
and
mov
push
mov
stos
test
rcll
push
fistpl
mov
jnp
dec
push
leave
addr16
cmp
mov
mov
roll
lcall
xchg
fbld
into
mov
mov
sub
fmuls
out
hlt
mov
pusha
in
popf
ret
stos
jbe
sub
hlt
cld
mov
rorb
jnp
orb
pushf
test
adc
outsb
jecxz
or
mov
sbb
mov
idivb
mov
pop
xchg
cs
sbb
fdivs
pop
xchg
pop
dec
sahf
dec
testl
jne
inc
pop
dec
jmp
insb
pop
xor
inc
mov
push
ljmp
cld
add
xor
xchg
xor
xchg
cmc
cltd
js
ds
cmpb
fsub
xchg
cmp
push
adc
andl
jno
mov
xor
jbe
ss
add
and
testb
out
movsb
outsb
jp
leave
push
push
pop
rcrl
mov
ret
jp
or
pop
xchg
in
inc
scas
jle
sahf
fnstenv
inc
jbe
rcrb
movsl
lock
sbb
loopne
stos
out
hlt
orl
pushf
in
xchg
sar
addb
xchg
add
pop
fimuls
push
xchg
jns
push
test
fwait
inc
ret
push
test
mov
mov
sub
mov
add
movsl
and
test
and
enter
movl
jbe
sarb
adc
dec
cltd
pop
xchg
push
or
sub
jmp
call
mov
xchg
arpl
inc
jae
or
pushf
outsb
cmpsl
adc
add
mov
iret
xor
sbb
jo
pop
pop
leave
fnstsw
loope
pop
dec
imul
sbb
ljmp
dec
iret
mov
call
mov
and
dec
xor
push
ror
mov
or
into
mov
xchg
stc
and
mov
ror
xchg
in
xchg
ja
mov
adc
je
sub
mov
leave
in
xchg
and
dec
lods
ljmp
shlb
fnsave
jns
fisubs
cwtl
mov
in
bnd
mov
ljmp
gs
mov
sub
add
jnp
loope
repz
je
fimull
jb
pushf
and
out
fcmove
and
pusha
cmpsb
out
push
hlt
and
inc
outsl
sbb
mov
push
jl,pn
repnz
add
push
lods
adc
push
jmp
insb
sbb
dec
outsl
jne
xor
hlt
push
into
or
dec
sbb
mov
cwtl
imul
in
scas
mov
mov
scas
jl
jo
pop
and
inc
xchg
testb
mov
fmull
mov
sbb
xchg
xor
dec
out
xchg
lods
jecxz
sbb
je
push
int3
ljmp
xor
andb
mov
xorl
ret
jne
js
push
ds
pop
outsb
mov
outsb
sbb
cli
inc
ss
sbb
lret
jne
cmc
fstps
outsb
pushf
adc
xchg
jae
add
mov
jle
push
pop
sbb
adc
cld
push
jns
mov
in
sbb
push
xchg
and
in
lcall
cmp
test
or
mov
divl
dec
sbb
ret
pop
fwait
add
mov
xor
andb
aad
ss
xchg
loopne
ret
add
sub
mov
dec
pop
imul
sahf
call
sub
mov
sbb
mov
cmp
sarl
cmp
inc
fnstcw
js
ret
loop
pop
cmp
popa
jno
dec
in
jnp
pop
xor
daa
adc
jbe
adc
lahf
xorb
arpl
push
sahf
sbb
movl
cmp
std
sbb
test
xlat
js
inc
xor
mov
sub
or
test
and
jg
cmp
outsb
ljmp
jns
mov
xchg
sahf
sub
sub
in
cmp
aaa
sbb
add
mov
orl
inc
bound
cmp
jbe
dec
cmp
sbb
dec
jae
ret
and
and
loopne
inc
pop
add
stos
mov
fs
pop
repnz
ss
testb
js
mov
push
xchg
lods
adc
pushw
push
push
jg
stos
lret
dec
jns
mov
adc
push
das
jmp
jge,pt
loopne
popa
cs
movl
movsb
add
mov
and
mov
dec
sbb
loopw
mov
shrb
jle
popa
sub
ljmp
jle
lea
fisubrs
push
subl
xor
cmc
xchg
xchg
lea
cmpl
push
iret
int3
xchg
cltd
lret
push
sti
mov
lea
mov
mov
ss
adc
cmp
mov
sbb
sub
fnstcw
std
fs
inc
push
ret
pop
push
fdivrs
imul
jmp
fucomi
push
in
in
out
inc
dec
lock
repnz
arpl
bound
addr16
push
sti
sti
pop
jl
push
sbb
inc
jno
cwtl
inc
xor
ret
adc
mov
lahf
adc
or
inc
jg
pushf
xchg
fisubs
sbb
mov
dec
int3
cmp
jae
mov
jb
outsb
mov
cmc
dec
lcall
xchg
je
cmpb
dec
add
pop
xchg
les
outsb
push
mov
jo
je
mov
mov
scas
in
scas
cltd
dec
jl
stc
lret
stc
mov
loope
add
and
cmpb
repnz
shrb
cmpsb
xchg
fimull
pop
out
lods
enter
and
mov
and
popf
and
mov
fstpt
iret
add
movsb
sub
int3
arpl
adc
xor
mov
lret
call
inc
pushf
xor
cli
loop
fnsave
pop
into
scas
xor
ds
sahf
fisttpl
fwait
mov
inc
or
mov
popf
cmp
add
adc
cmp
jle
in
pop
call
and
mov
mov
mov
test
outsl
movsb
ja
mov
icebp
jg
mov
test
mov
mov
dec
fmull
jbe
cltd
and
pop
ds
jo
repnz
mov
call
roll
pushf
cmpsb
push
jge
pop
aaa
xchg
test
push
mov
xchg
shrl
lea
add
test
scas
push
das
jns
lock
repnz
xor
mov
lods
sbb
xor
push
in
faddl
data16
into
jbe
fdivl
inc
insl
adc
leave
mov
aad
pop
jle
int3
movsb
aam
loop
fsubs
push
fstps
inc
adc
xor
and
std
push
jp
add
add
push
sbb
sbb
xchg
pop
sbb
sub
jl
jns
and
jge
pop
imul
cmpsb
outsb
adc
xor
ret
pop
xor
and
cld
setns
inc
scas
in
and
ss
lahf
inc
adc
aad
mov
pop
fstpl
xor
cmp
out
jp
or
ret
shr
scas
out
xchg
imul
pop
rclb
das
cmp
inc
iret
jns
in
cmpsb
mov
fcompl
cmp
stos
aam
je
pushl
aad
clc
iret
xchg
test
mov
jno
xlat
fcmovu
mov
push
mov
inc
jp
xchg
shlb
mov
jecxz
pop
popa
mov
xor
std
and
xchg
mov
push
jnp
testb
mov
arpl
repnz
imul
push
mov
es
fadds
stos
negl
mov
subb
cld
mov
clc
shl
imul
and
sbb
add
mov
mov
jge
popa
and
push
mov
mov
cmp
push
pop
xchg
xchg
aas
pop
imul
mov
fmuls
stos
push
test
scas
cmp
pop
mov
gs
jecxz
mov
pop
ja
jnp
fwait
out
lds
push
bound
ret
cltd
call
cmpsb
or
mov
push
call
mov
fwait
stos
inc
cmc
cld
in
subl
movsl
push
movsl
sbb
mov
shr
in
push
xor
cld
add
loope
jae
stc
xlat
mov
sbb
mov
shlb
sbb
dec
ret
fimuls
xchg
add
inc
pop
jg
lahf
sub
cwtl
pop
add
lds
mov
push
out
sbb
lods
arpl
or
push
sbb
cmp
xor
cmp
jg
jno
pop
lret
and
jl
sub
ss
xchg
in
js
shlb
pop
mov
mov
mov
sbb
xchg
or
lcall
xchg
repz
scas
rclb
jle
insl
dec
mov
add
push
test
int
mov
and
pop
lea
lock
aas
jb,pt
sub
je
nop
sub
xchg
mov
stos
adc
mov
jb
mov
mov
add
test
mov
sbb
mov
or
fdivr
stos
lea
xchg
fcomps
movsl
inc
adc
daa
and
or
lods
les
dec
rep
dec
push
sbb
xor
enter
aaa
jbe
push
mov
jno
cmp
decb
inc
pop
in
enter
xor
mov
pusha
mov
sub
xor
xchg
jg
and
mov
js
sbb
inc
outsb
jp
sbbb
inc
je
push
or
mov
xor
leave
js
cmp
and
dec
pop
mov
mov
cwtl
adc
test
cmp
jecxz
mov
test
dec
mov
pop
mov
jl
into
push
jg
adc
mov
mov
clc
loop
xchg
jo
add
insl
stos
jnp
loope
out
sub
or
sbb
xor
add
add
jnp
stc
push
mov
pop
xchg
lods
pop
xchg
sbb
mov
into
cmp
xchg
mov
repnz
pop
push
fisubs
les
mov
enter
rolb
xor
iret
insl
mov
cmp
adc
cmp
push
ja
sub
mov
cmp
addr16
xchg
adc
ficoml
loop
jle
in
inc
adc
push
fisubrs
push
loope
sub
cmp
xor
scas
mov
xchg
mov
xchg
decb
or
add
xchg
orb
cmp
negb
mov
mov
je
xchg
adc
and
xor
push
xor
icebp
inc
sub
mov
fdivrs
data16
dec
cmp
lahf
mov
test
lret
enter
gs
imul
repnz
aaa
cmpsl
xchg
scas
das
divb
scas
loopne
cmp
shl
orl
fwait
lret
or
add
add
adc
sti
push
int3
mov
int
nop
adc
fistpl
mov
scas
cs
and
scas
mov
sbb
mov
ret
lds
lcall
jae
sbb
push
into
imul
fmuls
mov
ss
out
inc
add
xchg
movsb
fcompl
dec
xor
in
out
mov
mov
jle
scas
pop
and
outsb
aad
jb
scas
addr16
int3
fistpll
sub
push
xchg
jo
pusha
or
jns
jmp
pop
adc
stos
js
add
insb
daa
push
fs
xorl
push
in
fidivs
jp
pusha
adc
sub
into
mov
dec
lret
cmp
ret
not
xor
and
iret
xchg
mov
cltd
pop
aad
fsubs
fisttpll
lock
dec
jno
push
imul
sti
xchg
dec
add
addl
cmpb
stc
mov
mov
adc
push
stc
js
in
int
mov
arpl
mov
notb
cs
clc
jg
pop
in
push
into
in
xor
mov
lcall
mov
les
imul
icebp
stc
pop
adc
in
push
pop
insb
lcall
dec
add
ljmp
mov
mov
mov
sbb
sbb
xchg
out
inc
test
dec
scas
push
stos
mov
cmp
sahf
xor
mov
adc
and
popf
adc
lods
jae
push
xor
lret
push
mov
pop
fwait
dec
outsl
pop
jl
mov
mov
aad
bound
jge
xchg
lret
push
cwtl
sti
stos
push
out
imul
push
hlt
cs
shl
push
test
insl
leave
js
imul
jmp
mov
add
int
xchg
pusha
or
mov
test
inc
pop
add
sbb
loopne
cmp
pusha
adc
fisubs
loop
jecxz
and
imul
jge
movb
hlt
stos
jge
sarl
inc
jl
flds
mov
rolb
mov
xchg
sti
clc
sub
pop
add
push
fdivl
ljmp
call
pop
dec
test
mov
cmp
mov
pop
inc
lock
es
cs
inc
mov
test
ds
test
repnz
movsl
mov
cmp
lahf
pop
xlat
xchg
dec
or
cli
cltd
dec
repnz
jp
xor
test
pop
mov
in
push
fnsave
mov
imul
repnz
mov
ss
mov
aad
sbb
xchg
or
lahf
ja
insb
xchg
lret
fxch
add
daa
cli
cld
mov
push
std
cmp
mov
pop
xchg
jb
adc
push
push
pop
mov
loope
push
dec
out
jmp
xor
adc
sarl
inc
rclb
adc
insl
lods
adc
stos
bound
sub
fsin
mov
xor
mov
ret
add
dec
mov
add
popa
push
insb
add
sbb
mov
jle
enter
mov
fistpl
test
insl
cmpsl
fwait
xchg
pusha
push
bound
fidivrs
nop
cli
or
dec
jl
dec
sub
mov
mov
out
testb
cmp
lret
roll
dec
push
idivb
addr16
int3
les
incl
push
push
popa
sub
lods
mov
loope
jp,pn
les
clc
daa
inc
test
orl
rol
in
push
adc
fwait
std
sbb
imul
out
inc
rorb
in
data16
or
push
ret
negl
test
jmp
mov
or
cmp
push
out
jmp
cmp
out
dec
pop
ss
adcl
sub
aaa
nop
pop
stc
clc
or
xor
gs
jg
mulb
pop
lock
adc
xlat
sbb
icebp
jp
loop
test
add
xchg
lods
push
jmp
push
mov
adc
sub
pop
add
mov
jb
pop
cmp
mov
inc
stos
stc
mov
stos
add
std
pop
inc
jl
mov
int
jmp
add
ja
push
loop
ror
ljmp
sbb
movsb
jo
dec
adc
leave
lcall
dec
sarb
nop
sub
lds
or
jmp
lcall
mov
mov
neg
sbb
ja
xor
xchg
adc
out
or
mov
std
cs
test
inc
insb
adc
scas
stc
inc
shll
cwtl
hlt
pop
js
pop
sub
icebp
cmp
aam
fucom
push
jg
shrl
xchg
ljmp
outsl
pop
mov
mov
sbb
mov
inc
or
test
or
adc
imul
js
mov
mov
cmp
lahf
cmp
aaa
mov
shl
dec
fwait
xchg
scas
or
inc
test
mov
test
popf
repnz
loopne
or
lret
push
ffree
gs
sub
xchg
data16
jle
pop
sub
addr16
push
mov
jb
fcoms
cmp
or
dec
fisubl
push
xchg
mov
pop
shl
jne
pop
lods
or
jp,pn
or
rorb
dec
das
mov
push
fsubrs
out
cmp
or
mov
inc
inc
adc
aaa
in
cmp
ss
cld
insb
mov
mov
xor
mov
pop
shl
jo
iret
pop
dec
adc
pop
fadds
es
dec
or
movsl
loope
push
std
jo
mov
scas
dec
aaa
inc
jg
andl
popa
jne
mov
and
cs
sub
jle
rol
outsl
loopne
add
fadds
sbb
shll
lahf
dec
xchg
and
sub
mov
lods
in
sub
push
subb
cmpsb
push
and
add
and
imul
bswap
imul
mov
and
sub
test
push
shlb
popf
fdivl
cmp
insb
xor
or
popf
cld
sbb
dec
mov
sub
mov
sbb
fsubp
sub
js
inc
test
dec
loop
xor
add
mov
xchg
xor
mov
mov
dec
and
jae
push
mov
add
cmp
push
movsb
push
jl
inc
xor
aad
ret
xor
or
outsb
cmp
xchg
dec
rorl
comiss
movzbl
inc
xor
loop
test
push
test
std
xor
ret
pop
push
sub
cwtl
push
arpl
out
add
push
jo
jo
pop
sbb
push
or
fdivrl
adc
orl
cmp
mov
push
arpl
sub
divb
adc
xor
mov
mov
mov
dec
mov
mov
shll
daa
dec
push
inc
std
cmp
mov
cmpl
mov
test
lods
shr
mov
scas
xor
jmp
add
repz
aam
aas
hlt
xchg
sub
cmpsl
and
mov
ror
lcall
mov
shlb
repz
push
mov
filds
rcll
mov
jne
cmp
mov
bound
xor
inc
loopne
pushl
pop
aas
imul
sbb
add
xor
hlt
mov
into
or
push
ds
lds
jecxz
movsl
pop
dec
fs
sub
sub
jge
insl
mov
out
out
or
push
xchg
dec
pop
add
jg
push
lods
push
js
mov
mov
push
cmp
push
jmp
or
sub
mov
outsl
inc
cmp
lret
cmpsl
dec
push
movsl
repnz
aad
pop
push
sbb
mov
pop
and
movsb
cltd
shll
inc
lods
mov
and
xor
mov
divl
and
fxch
or
cmp
xor
nop
insl
jno
sahf
cmpb
inc
xchg
daa
adc
sub
lahf
jg
sub
xchg
push
or
test
pop
ucomiss
mov
and
lods
inc
orb
jb,pn
cs
mov
addr16
xchg
sbb
xchg
xchg
out
push
mov
push
push
test
into
sub
fsts
out
adc
jo
add
imulb
pop
and
push
loop
or
adc
fs
sbb
dec
aad
xchg
mov
push
sbb
lret
xorb
mov
sub
lock
cli
mov
aas
add
mov
jnp
mov
repnz
fistps
sub
es
lds
je
and
add
pusha
rcrb
repnz
outsl
ss
cli
mov
jns
cmp
xchg
adc
xchg
or
pusha
fcoml
lret
movsb
fcompl
lahf
rorb
jns
xchg
aaa
cmpsl
mov
daa
jb
jl
rol
subb
jo
xlat
hlt
pop
ror
mov
scas
xlat
jno
mov
pushf
test
in
jo
inc
pusha
xchg
out
xchg
hlt
dec
jle
push
enter
loope
dec
and
fsubp
push
outsl
push
in
bswap
in
adc
mov
mov
inc
xchg
jno
icebp
jle
pop
andl
push
mov
orb
or
mov
roll
cmpsl
inc
lret
mov
mov
add
sbb
je
dec
cmp
andb
lret
jo
dec
loope
dec
and
test
mov
sbb
mov
pmulhw
pop
int3
aas
cmp
dec
stos
inc
lods
andl
mov
out
fstp
nop
repnz
stos
push
aaa
mov
adc
xchg
sub
test
ds
cwtl
mov
test
push
inc
sub
jmp
cld
in
pop
loope
fbstp
xor
flds
jp
std
cmp
dec
addr16
mov
notl
push
dec
shll
or
mov
pusha
xlat
push
and
push
add
dec
push
or
imul
movsl
jno
pop
jns
ret
mov
add
jne
jno
push
jg
mov
inc
in
push
xor
nop
int3
dec
xor
mov
sub
sub
mov
xchg
not
dec
xchg
xchg
xchg
fwait
data16
mov
mov
div
divb
cli
cmp
aam
out
mov
adc
jae
push
aas
fimull
fcmovnu
sti
mov
xorb
mul
jg
lods
iret
fisubs
cmp
loopne
mov
fsub
push
repnz
adc
mov
push
imul
out
std
shlb
or
pop
cmc
mov
out
roll
inc
sahf
cltd
flds
mov
pushf
mov
mov
ret
jmp
das
add
or
sub
ss
sub
int3
movsb
dec
inc
jl
ret
push
fcoms
dec
ds
les
xor
and
cld
fdiv
inc
or
sbb
fs
push
xor
sbb
and
fcmovbe
cs
dec
notb
mov
jae
xor
adc
or
pop
xchg
dec
jne
negb
push
xchg
cmc
imul
outsl
cmpsl
sahf
clc
aad
int
mov
xor
mov
xchg
test
ja
or
es
jl
jno
inc
inc
and
daa
rcrl
add
mov
or
das
sbb
push
mov
inc
repnz
mov
push
and
data16
or
lods
sub
xchg
cmpsl
jmp
pusha
adc
clc
inc
divb
xchg
out
les
jl
enter
addr16
insl
imul
ret
int
mov
jo
mov
sbb
cmp
clc
adc
test
push
lods
test
int3
push
sbb
xor
mov
jle
mov
in
adc
mov
inc
push
leave
xlat
jecxz
mov
das
and
jge
jae
cmp
sub
jb
test
repz
pop
ror
jns
cwtl
and
sub
jo
mov
les
mov
pop
nop
jle
jle
jg
fwait
inc
dec
cmp
sbb
push
fs
ds
sbb
movl
cmpsl
stos
in
pop
push
subb
aas
lahf
mov
dec
add
or
push
nop
cmp
std
jae
push
or
int3
jecxz
lds
dec
int
aad
xor
lahf
push
mov
test
lret
iret
jo
cli
jbe
popf
xor
lds
outsl
lea
xchg
es
pop
mov
inc
daa
bound
cltd
dec
xor
aas
cmpsb
or
add
and
or
add
lds
cltd
data16
pushf
int
add
fisubrs
enter
ss
jecxz
pop
pop
std
jne
imull
sbb
xor
jmp
sbb
mov
ret
test
jns
mov
push
cmp
mov
add
sub
js
mov
scas
pusha
imul
loopne
cmp
cmp
stc
fmuls
xchg
cmp
xchg
dec
inc
mov
popf
sbb
or
mov
pop
add
ret
mov
stos
mov
or
add
repz
mov
push
aad
sti
outsl
mov
sbb
xor
mov
call
imul
dec
cmc
push
test
shl
push
stos
fwait
push
stc
out
pop
cmp
cmp
test
daa
shrl
push
adc
mov
cmpsb
and
push
xchg
pop
adc
iret
mov
add
aaa
stos
adc
sbb
dec
in
mov
jecxz
sbb
dec
and
std
pop
lret
aad
mov
push
adc
mov
push
cmp
cmp
and
fs
repz
mov
push
insl
cmpsl
cld
ljmp
loope
push
adc
popa
jb
add
inc
lea
push
jne
pop
lret
push
xor
aad
daa
fstpl
push
imul
lcall
xchg
aaa
mov
mov
aas
sub
inc
bound
shl
out
lret
outsl
addr16
pop
ret
js
ret
mov
sbb
sbbl
pusha
lea
mov
mov
cmpsb
clc
mov
inc
cmp
mov
dec
mov
jne
mov
shr
movsb
out
cld
and
aas
movsl
add
cmp
scas
loop
movsb
sub
mov
dec
and
leave
iret
aaa
push
cmp
cmp
jns
aas
cli
add
lds
repnz
in
icebp
popa
repnz
dec
sbb
push
mov
loop
mov
call
fisubs
arpl
pop
xchg
xchg
xchg
js
push
jb
or
add
idivb
stos
hlt
sahf
push
cld
sub
lret
mov
push
push
sub
xlat
push
push
sbb
ret
push
and
adc
or
fwait
jo
add
nop
fnsave
inc
sub
push
pop
loop
scas
push
lahf
je
mov
bound
mov
xchg
mov
add
rol
pusha
add
cmp
mov
inc
fsubrs
ficoms
lahf
mov
out
fcoml
dec
ss
xor
movsl
push
stc
xchg
xchg
cltd
rcrl
fs
sbbb
xchg
jle
or
mov
cmp
pop
lock
sahf
mov
stos
fs
rcr
mov
std
push
sbb
pop
push
add
dec
mull
inc
inc
sbb
mov
push
dec
insl
lcall
or
mov
int3
loop
ljmp
sbb
fbld
jmp
mov
fs
call
popa
loope
pop
lds
and
clc
lahf
lret
xor
cmp
movsl
dec
mov
das
cmp
xchg
and
aaa
pop
jmp
xchg
sub
clc
or
push
gs
pop
fidivrl
push
stc
pushf
and
xor
outsl
xor
mov
orb
ss
mov
test
dec
inc
sarb
jnp
jmp
int3
sub
xchg
imul
mov
jae
jmp
mov
add
xor
jo
xor
xchg
push
xchg
loope
add
and
iret
dec
pop
xchg
lret
in
add
jp
loopne
out
mov
pop
lea
iret
pop
out
and
shl
mov
or
mov
pusha
and
xlat
out
outsb
js
inc
lret
or
pushf
mov
mov
xor
xor
int3
cmpsl
fwait
test
loop
cmpsb
pop
pop
xor
xchg
test
xor
mov
or
movsl
testl
js
push
mov
lods
lcall
dec
add
fisubs
xor
pop
cmp
sub
test
sub
sar
sub
adc
cs
dec
cmpsb
dec
sub
loopne
fisubs
mov
cmp
dec
jo
loop
ret
push
psrad
lahf
fninit
adc
arpl
inc
mov
addr16
mov
mov
cmpsl
push
sarl
leave
das
cwtl
fs
push
add
stos
out
andl
add
inc
movsb
mov
pop
jb
das
movsb
dec
or
and
scas
mov
push
adc
loope
cmp
das
cltd
cwtl
pop
push
add
jns
rorb
or
mov
ds
push
and
xchg
ljmp
outsb
mov
stc
jnp
fwait
xchg
and
fdiv
loope
push
xchg
xor
icebp
es
insb
ret
ficomps
cmp
jno
mov
hlt
xor
add
or
outsb
int
insb
enter
dec
lcall
das
add
cltd
jns
adc
push
and
xchg
and
jp
push
pop
in
testl
adc
add
ret
add
std
loopne
mov
mov
jne
leave
clc
fdivrl
add
pop
lcall
mov
sub
pop
movsb
sub
mov
fs
xchg
sub
es
cld
mov
mov
adc
sahf
pop
and
mov
or
or
mull
cmpsb
mov
sub
sar
loope
xchg
roll
push
sbb
sbb
inc
lea
add
and
addr16
or
dec
mov
inc
nop
lret
dec
pop
int3
in
pop
inc
shrl
push
out
int
xlat
fldt
dec
loopne
dec
mov
jmp
mov
loopne
xchg
push
lods
adc
sub
lret
cli
mov
ds
aam
sub
pop
inc
adc
mov
jo
sbb
add
sub
add
adc
dec
and
fildl
ret
stos
insb
mov
ret
lahf
cmp
movsb
pushl
sbb
push
mov
push
xchg
adc
add
enter
and
repnz
leave
in
xor
cmc
roll
outsl
mov
stos
sbbl
in
je
mov
sbb
vorps
enter
or
and
jmp
sub
lods
bound
je
mul
fcomps
loop
int
aam
lret
in
sbb
jecxz
push
iret
hlt
add
fsub
jp
mov
xor
std
fdivrp
cmp
in
test
or
sub
dec
test
inc
das
aaa
inc
adc
rcr
pop
xchg
lock
lret
mov
or
jl
jb
inc
and
xchg
push
ficoml
je
mov
xor
movsb
mov
jne
repnz
lods
out
pop
leave
push
frstor
std
and
adc
clc
xchg
aad
add
nop
in
test
lea
mov
xor
fstpt
adc
jge
pop
and
sarl
popa
flds
fwait
push
gs
or
stos
int
push
roll
cmp
jnp
mov
lock
sbb
loope
in
out
lahf
orl
xchg
cld
out
aas
aas
add
add
push
movb
stc
or
aam
jmp
add
fstpt
or
mov
xlat
lds
cmpsl
mov
add
popa
dec
and
das
pop
dec
lds
and
adc
adc
pop
sbb
or
mov
pop
mov
iret
sahf
push
mov
jp
dec
negb
cs
push
jp
push
mov
js
loopne
mov
pop
icebp
les
pop
or
lods
les
arpl
fmull
imul
push
imul
cmp
sahf
jae
outsb
or
sub
fs
das
or
lock
jg
jge
jbe
stc
mov
fs
jbe
mov
mov
sbb
or
andl
mov
xor
rcrl
inc
into
or
xchg
sahf
xlat
outsl
mov
xor
mov
cmc
idivb
push
or
cmp
lods
mov
mov
and
adc
jb
stos
fistpl
mov
lret
xor
enter
mov
or
sub
test
add
int
pop
rcl
inc
push
ss
pushf
add
incb
xchg
test
cmc
ret
dec
gs
movsl
push
push
fadd
mov
xor
sbb
je
xchg
push
and
imul
loope
ds
popa
jnp
jnp
jmp
or
xchg
and
lahf
lea
pop
fldenv
mov
sub
insb
sbb
xlat
outsb
lret
pop
fwait
or
pop
adc
xchg
aam
inc
ret
ss
jp
jns
fwait
push
int3
inc
ja
insl
pop
dec
jl
cmpsb
dec
fs
popa
out
push
div
ja
push
jns
mov
push
mov
lock
xor
cmp
gs
dec
push
inc
js
pop
loop
iret
aam
popf
inc
lcall
outsb
mov
push
cmpsl
leave
mov
nop
push
out
shlb
xor
push
push
lahf
cmpsl
cmp
shrb
clc
jg
int
fwait
jne
cmp
icebp
sahf
lods
pop
shlb
pop
inc
dec
push
mov
enter
cld
pop
fldenv
aaa
push
loope
pop
test
xor
test
cld
dec
xor
aad
pop
jbe
aam
addl
mov
mov
iret
jne
stos
xchg
pop
xor
pop
cmp
out
sub
hlt
push
jo
aaa
out
or
xor
cmp
subb
ja
out
push
mov
call
lock
push
push
int3
gs
lcall
bound
repnz
scas
jge
scas
xchg
push
dec
adc
adc
jno
aam
fsub
ds
pop
push
jle
adc
xchg
outsl
shll
and
push
ret
adc
in
mov
ficomps
sub
sbb
sub
mov
sarb
cmp
inc
aad
in
in
push
add
add
fistl
js
push
pop
pop
adc
rsm
push
in
addr16
sub
xor
stos
sub
pop
sub
lds
or
movl
xchg
dec
gs
test
or
adc
stos
test
and
cmpsb
cmp
pop
jae
adc
mov
xchg
lahf
aam
outsl
mov
dec
inc
insb
jb
mov
ja
xor
rol
push
dec
aam
cmp
jo
dec
das
out
adc
xor
pusha
add
ret
gs
mov
fldenv
int3
mov
lret
fsts
xchg
xlat
je
jbe
repnz
cmp
mov
inc
add
outsl
inc
and
or
movsb
movntq
jo
cmp
lods
dec
sub
dec
or
sahf
sub
aad
dec
out
mov
in
cmp
test
mov
stc
cs
mov
add
dec
aaa
loope
clc
scas
ljmp
lea
rorl
add
pop
test
cmp
and
fs
icebp
dec
pusha
pop
adc
addr16
repnz
shrl
or
sub
pop
jp
jl
xchg
or
addb
sbb
movsb
pop
pop
sarb
xchg
sub
xchg
mov
xchg
mov
nop
faddp
shll
sub
jle
inc
pop
adc
push
pop
and
jb
popa
andl
and
cmp
or
loop
cs
arpl
ret
nop
repnz
lret
es
cmp
pop
mov
inc
inc
cltd
enter
xchg
inc
out
addr16
cmp
mov
mov
andb
xorb
jne
movsl
or
das
add
push
aad
leave
ficoms
rcl
mov
or
cmc
push
dec
adc
push
push
xchg
xchg
push
insb
sbb
xchg
dec
test
push
cmp
enter
or
movsb
mov
jle
out
clc
pop
xlat
mov
jmp
xor
mov
repz
cmp
in
xchg
sub
shrb
inc
shlb
imul
andb
fisubrl
mov
cli
push
pushl
dec
roll
hlt
ljmp
xchg
setl
xor
xlat
aaa
xor
jge
xor
cltd
and
lock
cmp
mov
scas
in
dec
and
jns
and
ret
push
popa
sar
mul
enter
lret
xchg
movhps
or
test
enter
or
push
mov
pop
adc
inc
out
mov
push
mov
or
cmp
cmp
lret
mov
adc
ss
mov
cmp
std
and
gs
sbb
ss
jnp
loop
dec
mov
imul
pop
adc
dec
xor
mov
pushw
jne
jne
cmpl
test
ja
js
js
popf
xchg
xchg
sbbl
and
popf
mov
xor
movsl
inc
adc
jge
dec
add
xor
adc
leave
rorl
adc
lds
imul
int
fwait
jae
push
xchg
push
fs
das
call
cltd
pop
popa
ficompl
rcll
or
test
shr
fdivl
lock
cmc
jne
test
cld
jl
jle
out
shr
lahf
cmp
movsb
clc
or
or
rcrl
push
ficoms
stos
cmpsl
sbb
mov
dec
push
and
add
and
adcb
and
jmp
and
out
add
ds
inc
out
xchg
fisubl
push
fldcw
pop
jbe
xchg
pop
in
dec
repnz
icebp
adc
dec
repnz
mov
mov
push
or
shll
push
negl
outsl
movsl
inc
aas
xchg
add
or
outsb
fnstenv
sbb
jge
cmp
mov
xor
and
dec
out
scas
popf
adc
inc
push
sbb
cmpsb
mov
inc
mov
scas
jecxz
mov
icebp
data16
pop
fnstcw
dec
push
mov
push
daa
dec
lret
jg
fldt
dec
adc
test
movsb
aaa
rcr
imull
push
add
jbe
jge
std
sub
enter
jnp
int
adc
pop
rorl
loope
sbb
in
arpl
cmpsb
fldenv
mov
lods
dec
ja
lds
gs
push
out
repnz
xor
rorl
aaa
decb
pop
js
mov
into
jnp
dec
push
mov
dec
mov
pusha
pop
cmp
std
jne
fistps
or
push
or
adc
nop
inc
lahf
clc
push
aam
dec
insl
sub
out
test
or
fbld
xchg
xlat
pop
add
mov
adc
addr16
push
jno
push
in
dec
test
int
mov
mov
hlt
es
lret
pop
ds
pop
jns
outsl
add
or
dec
sbb
pop
inc
cltd
aaa
jge
fbld
loope
lods
test
mov
mov
xor
movsl
fidivrs
cmpsb
orl
rolb
xchg
out
shlb
mov
sub
sub
push
out
nop
cwtl
in
ljmp
sbb
leave
sbbb
adc
add
movsb
push
or
insl
jge
push
outsl
and
mov
fisubrl
ja
test
inc
mov
jg
or
mov
ljmp
into
arpl
pop
popa
cmp
out
add
jl
cmc
rcrb
jno
adc
adc
fwait
bound
xchg
add
xchg
mov
pop
push
and
mov
sbb
cmp
mov
dec
cmp
test
insl
pop
popf
scas
dec
femms
mov
cmpsl
mov
pop
incl
mov
dec
scas
ds
testb
add
ja
ljmp
faddl
sub
sbb
ds
aad
xchg
mov
loop
pop
outsl
cmp
daa
in
sbb
fnstenv
add
sbb
push
fmull
loopne
or
xor
adc
pop
cmp
arpl
daa
ret
rcll
pop
data16
movsb
xor
xchg
xchg
mov
test
dec
scas
inc
mov
aam
lret
lret
inc
f2xm1
cmp
decb
ja
insl
out
int3
fistpll
mov
jl
push
adc
in
gs
dec
cmp
mov
gs
nop
add
mov
xor
mov
shlb
cmp
sbb
mov
loope
lahf
sub
jnp
test
inc
xor
sub
sub
inc
outsb
push
test
jg
ds
dec
les
pop
int3
adc
mov
adc
sahf
sbb
pusha
sub
and
mov
into
shrb
pop
ja
lret
sbb
test
add
mov
mov
mov
loope
sbb
cmpsb
imul
mov
cltd
lcall
lods
insb
and
add
sbb
push
sub
iret
and
test
mov
mov
in
in
fdivrl
aad
adc
cld
mov
out
outsb
out
push
inc
inc
mov
fcoms
mov
jns
outsl
mov
mov
jb
scas
mov
insl
mov
pop
add
pushf
cmpsb
popa
xor
xchg
es
addr16
xchg
jmp
lret
ficompl
xlat
out
test
push
push
push
lods
jae
cmp
sbb
stos
push
mov
and
stos
mov
test
mov
fisttpl
dec
lods
movsl
into
pop
or
add
icebp
lds
push
popa
lods
popa
xor
loope
icebp
dec
mov
mov
mov
les
movsl
adc
int
jbe
repz
add
cmp
add
aam
mov
sub
out
aas
cmp
popa
in
mov
sub
push
adc
cmp
lahf
fcoms
push
jno
jne
push
iret
dec
sarl
fldt
divl
mov
and
add
adcb
mov
sbb
pop
out
inc
jno
push
js
adc
cmp
sub
js
and
xorl
mov
mov
mov
rcrl
add
sti
pop
inc
xchg
ret
insb
addr16
push
inc
xor
dec
push
cmpb
add
mov
sbb
pop
jae
xchg
pop
push
int3
pop
adc
sahf
add
mov
xchg
loope
sub
jle,pn
mov
mov
jno
cmp
inc
dec
push
mov
inc
or
pop
bswap
mov
push
mov
in
jg
test
mov
xor
pop
jo
dec
mov
outsb
mov
add
cmp
xor
cmc
out
iret
jmp
or
shrl
fsubrs
cmp
daa
icebp
loop
pop
xor
add
lcall
out
sub
mov
push
fucomp
movl
pop
jg
cwtl
mov
xchg
push
mov
or
arpl
adcl
fsubs
in
and
iret
jle
mov
movsb
test
jae
dec
cmp
mov
cmc
sti
mov
scas
dec
daa
sub
mov
vsubsd
jb
mov
dec
push
jno
mov
es
sub
mov
xchg
xor
mov
pop
fldcw
or
lret
pop
push
sahf
adc
xor
and
pop
mov
je
cli
aaa
or
adc
add
sbb
push
loopne
cmpl
cmp
stos
sbb
jmp
aaa
ja
in
test
popf
clc
lret
icebp
xor
or
int
es
mov
push
push
aaa
out
inc
in
pop
sbb
popa
int3
ja
push
dec
lods
sub
ret
sub
jbe
in
jp
mov
or
idivl
jae
inc
daa
adc
dec
mov
cmpsl
es
mov
ljmp
sbb
push
ret
inc
sahf
inc
ss
jmp
push
sahf
mov
scas
ret
and
sbb
push
jbe
addb
iret
mov
push
mov
xchg
mov
gs
inc
pop
jmp
sub
test
data16
push
data16
lahf
fadds
mov
stos
adc
pop
movsl
adc
test
push
dec
pop
les
xchg
hlt
cmpsl
inc
add
mov
movsl
int3
lcall
sti
aad
push
test
fmulp
and
inc
into
mov
or
into
xor
jecxz,pt
ret
vmovq
lcall
dec
mov
or
xlat
sarl
jg
hlt
adc
xlat
int3
sti
push
dec
jg
jno
iret
push
jo
push
daa
pop
mov
and
adc
push
sahf
xorb
sbb
pop
sub
daa
mov
sub
mov
dec
aam
lahf
inc
xlat
popf
mov
scas
loop
cmp
int
mov
insl
and
xor
dec
mov
dec
fnstenv
dec
add
jnp
pop
push
sub
pop
jb
cmp
cmp
or
lahf
push
repnz
sbb
or
cmpsb
push
sahf
loope
fisubl
shrl
or
in
lret
cmp
arpl
test
popf
rclb
mov
adc
leave
fdivr
sbb
insb
xchg
and
test
cld
sub
popa
mov
cli
repz
or
jmp
cmp
mov
push
in
adc
das
mov
mov
adc
mull
xchg
jle
fs
inc
pop
add
and
pop
jge
push
mov
iret
shll
sub
sti
jno
test
pop
bound
push
stos
add
int
shrl
jnp
ljmp
xchg
filds
ja
dec
leave
aaa
test
dec
bound
shrl
dec
lds
bound
mov
shl
jecxz
jo
sarl
ficoml
stc
push
rorb
aam
ret
popa
mull
mov
jns
mov
mov
call
pop
adc
std
loopne
fstpt
and
fmuls
lcall
popf
push
adc
cmpsl
fs
mov
xor
mov
push
movsl
dec
inc
lret
movsb
dec
ret
dec
sarb
pop
dec
xlat
add
dec
jecxz
cmp
lods
cmp
fwait
mov
scas
dec
or
fcmovu
iret
faddl
sbb
jnp
stos
sub
pop
call
sub
pop
aaa
jae
aaa
cmp
jp
push
jae
cmp
mov
dec
scas
lret
test
nop
insb
push
mov
sub
pop
dec
pop
sub
addr16
jl
inc
leave
adc
mov
adc
push
imul
mov
mov
mov
bound
scas
outsl
subl
fwait
pop
push
into
addr16
dec
cmpsb
xor
xlat
lea
pop
test
mov
mov
jge
mov
jmp
rorb
sub
repnz
test
fisttpll
sub
adc
loop
out
fldl
pop
out
loop
pop
jecxz
ja
push
cwtl
test
js
xor
adc
call
mov
iret
ljmp
push
xchg
pop
push
push
dec
push
fdivrl
jecxz
mov
mov
xchg
sbbl
cmp
pop
in
xchg
xchg
aaa
popa
ljmp
out
inc
ret
adc
addr16
or
fistpll
pushf
push
jo
adc
in
cs
inc
imul
pop
jmp
cmp
mov
xchg
jb
and
hlt
jbe
stos
mov
lret
dec
mov
lahf
mov
add
test
orl
test
push
push
addr16
cmp
mov
or
aam
push
add
icebp
adc
mov
hlt
lret
lcall
sub
mov
push
jp
outsb
int3
test
pusha
js
mov
aad
mov
pop
cmc
and
sahf
movsl
or
add
mov
xchg
jno
or
lret
pop
mov
js
je
mov
xor
add
hlt
lret
cmp
dec
mov
dec
adc
shl
push
adc
add
or
push
or
data16
xchg
pop
push
add
adc
sbb
jae
jae
or
sbb
lret
mov
push
jp
mov
cmpsl
cmpsl
clc
xchg
subl
mov
push
or
jnp
aam
and
and
sahf
sbb
jno
push
aas
xchg
jbe
inc
pop
xor
push
out
fidivrl
mov
inc
pop
add
dec
pop
push
xchg
mov
xchg
and
push
stc
inc
insb
test
push
mov
ret
arpl
lret
enter
popa
rcll
insb
call
xor
xor
hlt
imul
enter
sub
add
push
cli
mov
push
cmp
jae
sbb
int
mov
popa
sub
and
push
repz
xorl
sub
or
stos
sbb
add
adc
sbb
movsl
sbb
cmp
mov
lods
jns
adc
stc
into
outsl
dec
mov
add
dec
jne
rcll
jmp
sub
sub
add
add
xlat
add
mov
popf
add
xchg
mov
arpl
imul
and
test
mov
and
es
or
stos
test
inc
in
fcomps
repnz
pusha
add
cmp
push
mov
mov
daa
ss
push
pop
lahf
ficoml
inc
test
and
scas
iret
fwait
mov
leave
ss
fnstenv
test
jge
xor
xor
notb
cmpsl
lea
sub
cwtl
adc
stos
mov
rcll
leave
pop
pop
inc
or
push
adc
or
mov
sbb
lock
cmp
pop
mov
fstpl
push
outsb
hlt
pop
sbb
sub
and
jb
push
sbb
xor
xor
stos
inc
shlb
clc
int3
cld
icebp
cltd
dec
mov
je
gs
sti
sub
leave
rcrb
add
jl
xor
jg
rclb
adc
or
push
pop
dec
jl
jb
pushf
xlat
push
clc
call
loopne
ret
lret
xchg
mov
lock
stos
fsub
jno
mov
mov
ret
sub
in
pop
xchg
mov
or
mov
push
mov
jp
imul
out
pop
sub
int
loop
inc
sbb
mov
mov
push
test
push
call
push
test
jecxz
mov
push
int
inc
sti
dec
stos
adc
cli
xchg
arpl
ss
mov
incl
cmp
pop
xor
lea
and
mov
push
stos
call
data16
push
in
inc
mov
pusha
xchg
inc
dec
testl
test
sbb
in
adc
call
xchg
fcomps
jmp
das
popa
mulps
jno
and
ja
imul
enter
das
mov
inc
mov
xchg
xchg
inc
aaa
dec
xor
push
sub
arpl
dec
or
cmp
and
xchg
iret
push
iret
xrelease
mov
sbb
in
cmp
mov
cmpsl
add
jnp
xchg
and
int3
mov
cltd
cmp
cld
push
movsl
cmc
dec
sarl
loope
testb
mov
in
jp
icebp
mov
stc
or
adc
daa
leave
and
push
scas
push
out
mov
nop
push
sbb
mov
pop
pop
hlt
ljmp
cvtps2pi
fsts
scas
outsl
dec
cld
mov
iret
stc
int
in
inc
in
inc
leave
push
dec
dec
fnstcw
push
in
inc
adc
dec
loope
xlat
lcall
adc
iret
imul
out
int3
out
inc
push
jb
and
lret
jl
push
iret
imul
dec
pop
jbe
jp
xchg
mov
jl
add
arpl
fists
cltd
cmp
dec
jne
push
sbb
loop
lahf
push
mov
ds
mov
js
sti
je
inc
mov
aam
sbb
out
mov
push
xor
ret
stos
add
in
pop
imul
cltd
mov
sub
aad
and
loopne
push
arpl
jecxz
int
lods
dec
jbe
mov
inc
shll
rcl
leave
mov
mov
sbb
lret
add
pop
sbb
arpl
sub
and
inc
fstpt
push
add
loopne
fdivl
clc
xchg
cmp
add
xor
je
loopne
les
aas
into
aaa
xchg
push
loop
push
push
fwait
cli
repz
aad
inc
cmpsl
adc
push
mov
jnp
push
sahf
fs
mov
xchg
push
clc
sbb
add
mov
lahf
sbb
sbb
push
test
xor
xor
xor
addr16
mov
adc
xor
fcomps
lret
mov
mov
or
push
aaa
arpl
in
jge
sarb
mov
int
movsb
icebp
or
dec
pop
imul
sbbl
daa
pushf
push
test
into
aaa
cmp
mov
pop
fs
add
mov
push
add
jbe
jge
inc
out
mov
cmp
push
aam
sbb
push
test
push
inc
inc
movsl
mov
cwtl
xorb
outsl
scas
and
mov
es
inc
mov
inc
inc
sub
outsb
inc
sbb
or
jecxz
xlat
js
lock
push
push
jno
lods
inc
fildl
xchg
out
ja
popa
xchg
and
pusha
jp
pop
les
std
pop
ret
bound
cmp
push
gs
int
inc
bound
inc
jg
mov
popl
add
pop
xor
shll
popf
xchg
add
das
pop
addb
cli
mov
jl
sub
xchg
xor
xorl
je
daa
andl
divl
cli
scas
or
mov
insl
xchg
leave
mov
leave
mov
fbld
ret
and
loope
jg
mov
xchg
pop
in
cmc
into
into
lret
mov
movl
jmp
mov
loop
cltd
mov
in
sbb
cs
pusha
adc
mov
loopne
jmp
cwtl
jecxz
and
pop
iret
and
sbb
and
sbb
inc
js
adc
cld
loopne
in
sbb
aas
cld
in
lret
jmp
jmp
dec
jecxz
xchg
cmp
xor
cltd
aaa
cmp
sbb
adc
or
es
push
jmp
jp
inc
insl
mov
nop
enter
roll
repz
jge
imul
pusha
out
stos
xchg
and
sbb
mov
aad
xchg
push
and
mov
xlat
js
xchg
movsl
sbb
push
in
pushl
or
pop
mov
or
jecxz
call
mov
mov
fnstcw
xor
mov
adc
jge
les
push
mov
testl
sbb
push
cmpsl
dec
or
mov
mov
ljmp
sbb
adc
and
mov
sbb
aaa
dec
cmp
jbe
pop
icebp
ds
lahf
pop
lret
sbb
cmpsb
and
orb
sub
icebp
movsl
push
add
mov
ja
insb
js
cmpsb
pop
fisttpll
xchg
cmpsl
aaa
or
dec
lods
xchg
push
mov
jo
fadds
dec
mov
and
mov
cmp
dec
inc
arpl
fwait
test
int
xor
cmp
jmp
inc
stos
mull
lods
rorl
mov
or
mov
fs
sarb
dec
cld
addr16
clc
fstps
adc
jne
addl
inc
shll
cmpsl
jg
push
xor
push
add
aaa
dec
call
jle
sub
pop
pop
ret
mov
ret
xor
mov
cltd
adc
call
mov
pop
inc
jmp
dec
clc
add
push
mov
mov
and
das
add
fyl2xp1
outsb
sub
mov
pop
push
movsb
jp
in
push
out
adc
pop
ja
fs
test
inc
push
std
sbb
out
adc
sub
scas
push
andl
lea
loope
xchg
inc
mov
jg
outsl
daa
jecxz
jns
cmp
leave
neg
popa
mov
mov
cbtw
dec
aam
arpl
mov
pushf
into
je
push
scas
jmp
sub
mov
pop
or
enter
cli
cmp
rcr
jge
mov
mov
jb
stos
icebp
mov
repnz
mov
hlt
xor
test
movsb
lret
xchg
cmpsb
es
mov
push
loop
mov
mov
jne
shll
neg
adc
xor
lret
cmp
sub
dec
lret
sti
mov
inc
mov
lret
imul
fbld
inc
pop
add
fcompl
xchg
in
shl
arpl
xor
or
jnp
or
and
call
js
push
iret
insb
je
push
aaa
and
jno
sub
pop
push
inc
cwtl
and
jle
stc
mov
js
and
jne
push
test
out
sub
ret
cmp
mov
test
cmpsl
gs
lret
cmp
fcmovnb
rclb
mov
pop
out
push
lcall
pusha
lret
pop
les
mov
lret
mov
xor
fs
cmpsb
das
int
std
pop
dec
add
jne
scas
sbb
pmullw
lcall
icebp
fcompl
ret
jmp
test
cmp
mov
ljmp
push
lock
jbe
stos
outsl
aam
sar
inc
jbe
cmp
adc
mov
daa
sbb
mov
cmpl
or
movsb
jo
sbb
pop
cmp
sub
adc
out
jmp
stc
mov
add
sub
mov
aaa
popa
or
push
out
movsb
and
add
xor
cmp
jns
mov
filds
inc
cmpsb
jno
in
lcall
ds
ror
les
mov
test
mov
inc
arpl
push
or
stc
stos
dec
lea
pop
mov
test
psraw
sarb
xchg
jecxz
adc
into
push
mov
jge
fidivrs
je
mov
jno
orb
mov
mov
cwtl
xchg
stos
push
jl
jle
stos
dec
sti
add
ficomps
inc
push
or
movsb
scas
testb
cwtl
leave
leave
jb
insb
cmp
jb
cs
add
mov
shl
test
pop
inc
push
pop
ja
pushf
testl
pop
repnz
ret
aam
sub
mov
or
int
mov
inc
bound
mov
das
ficoms
gs
clc
mov
ljmp
fs
clc
out
lcall
leave
mov
insb
or
mov
inc
mov
fwait
sub
imull
mov
lods
mov
mov
adc
stc
mov
gs
adc
aad
cmpsl
or
push
push
add
ret
fstps
jo
mov
sub
shlb
out
shr
sbb
repz
loopne
jno
in
or
cld
addb
xchg
add
cmp
pop
mov
fildll
psrlw
iret
add
shrl
or
mov
add
inc
xchg
test
mov
in
movsl
int
test
add
bound
inc
scas
test
inc
lret
inc
fmul
dec
cmp
rcl
fldl
push
pop
fildll
in
in
imul
jmp
data16
mov
add
xchg
or
gs
incb
jge
or
jbe
add
lcall
adc
lahf
popa
sbb
cltd
cmpsl
repnz
push
stos
mov
jmp
dec
push
jae
movsl
xchg
cmpsb
daa
sarw
into
mov
hlt
inc
addr16
std
dec
jb
insb
rclb
test
jns
rcll
fistps
fnstenv
sti
sub
mov
out
xchg
jae
sbb
sbb
lock
lret
cmpb
or
fdivr
xlat
sarl
xor
mov
sub
push
jne
in
cmp
pop
mov
and
sbb
aad
lret
inc
es
imul
push
rorb
mov
mov
ficoml
cmpsb
dec
ss
or
rorl
adc
inc
test
int
lret
adc
mov
jmp
xor
mov
stc
dec
inc
sbb
jl
sbb
movsb
xchg
sub
cmp
sub
test
imul
add
pusha
sub
lods
adc
int
jg
push
ljmp
dec
aas
pop
data16
push
pop
fnstsw
cmpl
sub
subl
dec
das
or
inc
lret
xor
pop
sub
and
sbb
mov
in
mov
jg
jge
cmp
cmp
mov
iret
or
adcl
adc
adcb
mov
add
out
clc
or
lahf
sti
xchg
fidivs
mov
inc
call
mov
lds
cwtl
lahf
ror
inc
sbb
lret
dec
aaa
and
test
and
stos
mov
js
dec
fistpll
and
repnz
add
shr
pop
add
cs
or
in
jne
or
hlt
push
push
pusha
test
ja
lahf
mov
jno
icebp
adc
sbb
imul
mov
sbbb
cmpsb
fistpl
rcrl
xchg
aaa
mov
push
cmp
mov
jmp
imul
jno
lcall
lret
mov
cmpsl
or
jnp
aam
cs
outsb
lea
push
inc
aaa
mov
mov
mov
sub
and
xchg
or
xor
popf
adc
pop
ret
jbe
pop
xchg
pop
cmp
mov
add
jne
addr16
fwait
mov
fisubl
mov
sub
out
insl
addr16
das
jne
lock
cmpsb
fisubs
mov
mov
decb
push
out
jnp
insl
jnp
repz
xchg
add
dec
mov
ljmp
pop
enter
jbe
push
std
stc
sbb
mov
out
outsl
fmull
ficoml
and
mov
mov
xchg
dec
cmp
mov
cmp
lock
or
xchg
jo
data16
enter
xor
cmpsb
pop
aas
inc
push
and
pop
push
test
lret
daa
repnz
mov
jecxz
mov
push
mov
jbe
sub
repz
les
roll
jle
pop
jecxz
mov
loopne
dec
or
sbb
scas
nop
mov
pop
es
pop
stos
andl
out
mov
and
and
les
out
sbb
stc
jo
cmp
mov
iret
pop
dec
or
enter
aaa
add
lds
out
inc
push
lods
aam
shlb
xor
fwait
sahf
pop
cmc
loop,pt
mov
push
dec
pop
jecxz
lods
sti
add
mov
fmuls
in
fs
mov
xor
fimull
out
stos
mov
dec
outsl
sbb
sub
bound
pushw
cwtl
push
mov
push
fstl
dec
push
sub
cmp
shlb
mov
add
xchg
incb
ja
lock
rorb
frndint
in
xchg
faddl
popa
imul
fcomp
loopne
mov
shll
lea
lcall
adc
or
stc
xchg
in
cmp
ret
test
or
pop
mov
cmp
in
mov
mov
push
lea
sbb
inc
test
mov
stc
and
adc
or
sbb
ss
shlb
xchg
push
inc
or
xor
cmp
cmp
push
out
xor
inc
fidivrs
test
cltd
dec
icebp
das
js
mov
dec
out
adc
sti
mov
stos
sbb
orl
pop
in
sahf
out
dec
adc
lds
lds
sbb
jecxz
cs
xchg
lods
pusha
in
xor
popl
mov
cwtl
cld
adc
mov
cs
fsubl
pop
mov
jp
fwait
mov
mov
sub
mov
dec
insl
repz
push
inc
or
pushf
sub
clc
and
and
lods
repnz
into
cli
adc
in
repz
test
or
rcl
ret
sub
jne
rol
es
or
cmp
push
add
arpl
sbb
fnsave
ljmp
repz
jno
mov
ret
scas
pop
mov
movb
mov
mov
addl
pop
sub
sbb
out
jge
push
sahf
ror
mov
jge
add
orb
inc
dec
dec
xchg
mov
fstl
sbb
cwtl
in
stos
mov
test
aad
or
xchg
push
mov
ss
xchg
xchg
add
push
jmp
in
fcmovnu
cmpsb
negb
and
jmp
pop
add
or
clc
ret
sub
adcl
push
add
cmp
mov
dec
xchg
and
and
adc
xlat
dec
cmp
fidivs
and
in
cmp
push
inc
movsl
cmp
inc
das
xor
dec
repz
mov
jns
dec
cli
dec
cmp
jae
rcrl
pop
or
push
jno
addr16
xlat
pushw
push
pop
and
sbb
mov
addr16
jmp
mov
xorb
jne
inc
nop
cmp
add
dec
sahf
inc
mov
setle
xchg
xchg
pop
lods
push
mov
lods
fistpl
mov
lds
cmp
inc
sub
xor
pop
sbb
mov
out
out
xor
sub
jecxz
fsubs
cmpsl
movsb
clc
cld
das
cmpsl
xchg
and
shlb
enter
mov
or
mov
testl
fisubrs
and
aaa
xchg
sbb
mov
lods
lahf
fidivrl
sbb
lds
loopne
push
pop
cmpsb
sahf
scas
xor
sub
xor
jmp
stos
enter
mov
push
push
mov
out
icebp
stos
jbe
fisttpl
jb
pop
lods
push
push
mov
mov
cmp
dec
sbb
outsl
loop
push
fdiv
push
add
or
mov
fidivl
clc
xchg
cmp
and
inc
sbb
loope
stos
ljmp
lods
or
jl
out
cmp
sti
cmp
movsl
inc
mov
pusha
sbb
popa
add
mov
xchg
sbb
jnp
dec
test
daa
inc
fstpl
std
cmpsb
lds
dec
leave
jnp
push
jns
int3
adc
or
sbb
cwtl
xchg
and
jmp
ss
dec
sbbl
sub
sbb
out
lds
stc
sub
fidivs
mov
imul
cli
xchg
ds
dec
js
daa
inc
lds
hlt
sbb
push
cmp
out
fisttpl
test
mov
int
cwtl
mov
repz
dec
ret
and
xchg
outsl
dec
push
add
push
cmp
aad
sti
aaa
lret
cld
je
fldl2t
mov
pushf
dec
repz
idivl
incl
push
fisttpl
inc
lret
aaa
lods
inc
xchg
cmpsb
popf
sub
daa
mov
jo
sti
testl
cmpsb
xor
jecxz
push
lea
test
loope
lea
dec
mov
adc
stos
inc
test
or
rcrb
and
std
mov
out
outsl
in
ret
subl
mov
xchg
cmp
arpl
test
imul
xlat
loope
sbb
pushf
dec
es
push
xor
push
fcmovb
xchg
push
rorl
xor
mov
mov
push
rolb
int
inc
mov
push
mov
add
aad
insl
or
mov
inc
cwtl
jae
push
pop
inc
cmp
fwait
xchg
mov
inc
fcmovnb
dec
aam
imul
adc
jae
repnz
ret
cmp
loop
mov
push
out
cs
inc
push
inc
cs
adc
xchg
mov
ret
xor
rcll
mov
xchg
ret
gs
sbb
jns
xlat
rsqrtps
mov
xor
fsub
xlat
mov
cld
adc
and
hlt
mov
mov
outsl
jge
cmp
bound
sarl
push
mov
lea
or
hlt
or
jmp
push
in
test
adc
cmp
fstps
insl
jne
ret
sub
mov
ret
lods
fwait
sbb
add
out
sti
xor
pop
outsb
shll
adc
ret
push
loop
pop
addr16
rcrl
xchg
cmp
sbb
push
sub
cld
xchg
adc
xor
sbb
pop
aas
xor
dec
mulb
push
das
arpl
push
repnz
xchg
cmp
in
mov
jno
daa
sbbl
add
aaa
movsl
movsb
xor
leave
ja
ljmp
lret
in
push
mov
in
adc
cwtl
nop
cvtpi2ps
repz
sbb
xor
jno
mov
mov
push
xchg
jae
in
arpl
ror
dec
imulb
push
lea
sub
cmp
jmp
imul
pop
ljmp
pop
call
cld
xchg
in
outsb
fdiv
testl
mov
lahf
push
mov
aaa
repz
mov
mov
popa
lods
add
inc
or
movsb
hlt
sbb
into
jnp
lret
fwait
add
xor
test
dec
fists
sbb
adcb
jmp
or
in
out
mov
shr
leave
mov
xchg
and
bound
gs
test
pop
cmpsl
xor
mov
out
mov
xlat
jns
test
stos
and
xor
mov
fprem1
pop
shl
std
mov
fwait
adcb
and
es
dec
mov
sbb
cli
pop
fldpi
add
mov
sahf
mov
mov
lcall
inc
pop
ret
jg
inc
loope
orb
mov
cmp
adc
es
push
data16
and
fxam
icebp
movsl
cmpsl
mov
push
lea
mov
ret
in
mov
nop
sub
bound
imul
mov
push
dec
arpl
xchg
pop
xchg
jne
jle
mov
xor
jo
jae
xchg
jp
sub
test
sti
push
inc
add
mov
add
mov
iret
int3
or
mov
call
add
add
shl
push
inc
xchg
fmuls
das
aas
push
and
jo
sbbl
andl
sbb
fdivl
mov
stc
repz
jne
jns
jo
pop
xchg
movsw
xor
dec
aas
jb
adc
js
dec
out
cld
scas
fldl
stos
xchg
xor
sub
push
repz
jo
mov
mov
and
adc
adc
cmc
sub
or
repnz
gs
ficompl
mov
nop
push
mov
xor
repnz
and
mov
xchg
gs
sbb
cmpsl
ljmp
ljmp
test
adc
in
scas
into
icebp
mov
fs
inc
icebp
cmp
bound
rcrb
es
in
ficoms
dec
ja
add
lods
fucom
iret
lret
jmp
insb
xchg
mov
loopne
dec
xchg
js
xchg
mov
mov
pop
test
es
jbe
sbb
dec
mov
or
add
ja
jecxz
mov
sbb
lock
ret
push
pusha
and
inc
cwtl
test
roll
fidivl
push
in
movsl
sbb
cld
fistl
xchg
inc
jecxz
sbb
lock
mov
fs
lods
push
cld
syscall
das
aas
cmp
push
dec
dec
das
dec
mov
jns
lret
lds
xor
loope
cmpsb
lret
jl
es
mov
xchg
ficoms
push
data16
pop
jno
or
and
daa
xor
popf
aaa
and
mov
pop
mov
std
int
lahf
repz
scas
inc
cmpsl
imul
mov
les
outsb
gs
iret
xor
dec
jge
xor
decl
sub
cld
pusha
inc
or
psubd
pop
jnp
mov
push
les
pop
add
dec
xchg
fistpl
jle
movsl
popf
mov
jb
loope
fsubr
mov
scas
inc
lds
loopne
out
js
mov
popa
in
jge
dec
mov
in
leave
sbb
mov
rcrb
repz
das
mov
pop
sub
test
push
push
cmp
mov
jne
sbb
sbb
clc
add
les
pcmpgtb
cmpsl
mov
test
sub
cld
pop
push
in
iret
push
ror
push
bound
xor
je
popf
lret
int
pop
mov
push
das
ja
pop
mov
andb
aas
and
test
aad
mov
and
sahf
stc
addr16
aas
mov
pushw
pop
sub
push
pushf
sti
pop
xchg
mov
arpl
loope
mov
dec
mov
or
dec
inc
push
jb
mov
jnp
insb
jecxz
jo
inc
xchg
jb
sub
ror
loopne
aam
sbb
scas
xchg
ja
jge
cli
and
pop
movsl
push
dec
pop
imul
adc
jecxz
subl
nop
adc
sahf
cli
push
jno
push
testl
mov
mov
je
pushf
pop
dec
call
mov
inc
xlat
jg
pusha
and
xorl
mov
jg
arpl
fdivl
sub
popf
fst
dec
adc
xchg
fucomip
mov
xchg
into
mov
ljmp
sbb
rclb
int3
imul
xchg
and
dec
mov
pop
xchg
push
push
in
shr
xor
lret
loope
lret
hlt
sbb
data16
inc
fists
in
mov
subb
push
popf
and
inc
xor
and
jg
jg
lods
add
add
arpl
mov
add
mov
aam
mov
rol
add
mov
mov
pop
sub
fsubl
pop
ret
rorb
or
xchg
mov
rcll
lds
push
pop
les
or
rcrb
in
or
push
fnstcw
push
leave
ljmp
test
cli
xchg
je
sbb
pusha
inc
cs
dec
pop
fs
decb
adc
lret
ret
lahf
push
cmp
je
push
je
pop
xor
outsb
inc
hlt
pushf
xlat
adc
mov
popa
lret
mov
dec
adc
lcall
push
xor
ja
pop
adc
out
jecxz
in
inc
out
ds
les
mov
cwtl
jae
nop
and
xchg
imul
xor
pop
cmp
and
pushf
not
add
push
jno
lock
mov
push
dec
in
mov
jmp
ret
bound
mov
xor
jp
cmp
adc
pop
pop
and
mov
rcl
icebp
cmp
je
imul
xchg
iret
pop
push
test
popf
pop
insb
adc
xor
cmp
cmp
and
mov
sbb
rclb
xchg
insb
call
and
xchg
imul
inc
lahf
das
fadds
lock
or
and
dec
ja
negb
pop
in
sbb
cld
add
push
jo
mov
js
aaa
sbb
xchg
cmp
inc
or
push
sbb
inc
shlb
xchg
mov
lds
jle
hlt
jl
inc
sbb
stc
mov
dec
das
cltd
jg
idivb
imul
add
or
rolb
loop
inc
sub
sub
xor
push
test
mov
sbb
and
sub
movsb
xorl
sub
inc
jg
icebp
and
mov
push
xchg
mov
js
jnp
jae
xor
push
mov
loope
in
push
dec
add
pop
xchg
mov
test
movsb
jno
daa
mov
testl
cli
in
push
and
mov
out
dec
pop
and
adc
mov
ljmp
add
int
out
pop
movsb
ror
add
ret
mov
xchg
xor
jge
lahf
pop
fwait
xchg
leave
sbb
sub
xchg
scas
mov
jnp
int3
inc
popa
cmp
mov
adc
ror
faddl
push
adc
xchg
mov
dec
inc
mov
arpl
xchg
fcompl
fldt
jbe
fnsave
popf
adc
xchg
inc
mov
out
cmc
int
cs
cs
sub
repz
dec
shlb
insb
lock
hlt
dec
insb
lds
push
adc
ret
das
hlt
jecxz
mov
shlb
in
std
call
dec
push
pop
xchg
fldenv
or
and
fisttpl
push
sub
jecxz
pop
mov
and
jae
sub
sbbb
sarb
lea
push
ljmp
xor
push
or
std
jecxz
xchg
movsl
mov
pop
shrd
mov
rorb
daa
inc
inc
pop
or
imul
cmp
pushf
dec
adc
jae
iret
mov
pop
movsb
push
outsl
and
jne
inc
sbb
nop
rcrl
adc
pop
sbb
pop
leave
test
jecxz
xor
push
lret
and
notb
bound
mov
punpckhbw
in
xorb
mov
or
push
lods
sar
ret
push
mov
in
or
loop
jp
stos
fs
out
out
in
data16
jmp
and
xor
into
inc
dec
pusha
je
jge
call
ret
movl
xor
into
mov
bound
mov
pop
rcrl
push
stc
or
je
repnz
push
adc
ja
ja
xchg
sub
xorl
sbb
loopnew
in
orl
ja
sub
pop
xchg
pop
fcoms
mov
xchg
aaa
adc
dec
fwait
mov
js
movsb
pusha
push
outsl
jae
fs
inc
loopne
mov
xor
dec
scas
mov
add
xchg
aam
fstpt
dec
sbb
icebp
insb
sbb
or
jnp
rcrl
pushf
out
lret
ret
stos
and
sbb
bound
mov
jnp
or
jne
mov
sub
cmp
xchg
lret
push
lods
out
arpl
fists
ret
shrb
xor
es
es
inc
loopne
jne
xchg
mov
or
xchg
mov
add
loopne
cmp
mov
inc
adc
push
dec
xchg
pop
push
outsb
cli
fldt
cld
incl
or
test
push
inc
dec
inc
add
jge
cmp
pop
inc
inc
mov
int
andb
inc
sub
ljmp
imul
sbbl
sub
mov
or
and
pop
jg
popa
inc
sbb
add
push
push
and
movsb
ret
and
pop
test
sub
gs
cmpsl
pop
inc
push
jo
and
mov
dec
js
gs
gs
cmp
adc
xlat
imul
dec
arpl
stos
mov
jle
movsb
mov
in
cmp
fs
xor
pop
adc
iret
sbb
mov
cwtl
mov
mov
push
out
pop
dec
pop
loope
lret
popf
inc
lods
lds
movsb
mov
stos
mov
popf
jp
sti
and
movsb
mov
xchg
and
xchg
je,pt
scas
sub
sub
jns
mov
mov
push
pop
add
push
aas
jecxz
jno
fcomps
pop
outsb
pusha
sbb
adc
jl
inc
popf
clc
clc
sub
mov
sub
pop
jmp
aad
sti
adcb
movb
int
iret
dec
push
or
xlat
jo
xlat
cmp
stos
les
lcall
cld
leave
or
clc
lds
xchg
ds
mov
int
push
add
mov
add
cmpl
lock
fnstcw
dec
cli
or
sub
in
push
cmp
sbb
xor
scas
rcll
scas
push
lds
fcoml
or
or
and
fcomip
xlat
int
cmp
jno
sub
repz
or
fnstenv
jle
jle
or
rcl
cmp
sbb
sub
push
sbb
das
jno
dec
lahf
incb
jns
jne
push
sub
sti
dec
sub
scas
inc
fs
mov
lret
jmp
fidivrl
push
outsb
sbb
mov
jae
jb
insb
cmp
enter
add
dec
test
shrl
push
add
mov
mov
das
xchg
cmp
and
pop
jne
hlt
xchg
xchg
adc
mov
mov
bound
test
cmp
flds
push
movlps
rorb
std
push
cmp
pop
and
out
arpl
lods
aam
mov
sub
push
nop
inc
cli
clc
in
cmc
in
test
pusha
mov
push
pop
push
push
call
push
push
pop
sub
movl
pop
push
mov
xchg
pop
mov
xor
add
sub
add
xor
sub
sub
add
rol
ror
xor
add
mov
inc
inc
jmp
enter
jne
pop
push
mov
xchg
pop
push
mov
call
call
sub
movl
pop
sub
movl
pop
push
jmp
icebp
call
push
jmp
lock
inc
mov
inc
inc
mov
push
pop
mov
ror
rol
sub
sub
xor
sub
sub
add
dec
ror
sub
add
rol
rol
rol
ror
xor
rol
mov
inc
inc
dec
cmp
jne
pop
push
pop
push
push
mov
xchg
pop
call
call
push
pop
sub
movl
pop
push
push
call
push
push
inc
inc
mov
inc
inc
sub
movl
pop
push
pop
mov
ror
rol
add
ror
xor
sub
rol
add
add
add
sub
sub
add
xor
add
mov
jmp
shr
dec
cmp
jne
mov
add
mov
push
push
mov
xchg
pop
call
call
push
mov
add
mov
push
push
call
jmp
lock
inc
inc
mov
inc
inc
push
mov
xchg
pop
mov
mov
sub
add
add
sub
sub
sub
add
sub
not
add
xor
sub
add
inc
sub
add
mov
inc
inc
dec
cmp
jne
pop
push
mov
add
push
sub
movl
pop
call
call
push
mov
xchg
pop
push
pop
jmp
lock
icebp
call
push
push
mov
add
push
mov
add
mov
mov
xor
sub
sub
add
add
sub
rol
add
rol
add
sub
add
rol
sub
xor
add
sub
xor
mov
inc
inc
dec
cmp
jne
pop
push
mov
add
jmp
idivb
call
call
sub
movl
pop
mov
push
mov
xchg
pop
push
pop
cmp
jne
add
dec
push
push
cmp
pop
pop
je
jmp
push
mov
add
mov
add
jmp
lock
mov
mov
add
mov
sub
movl
pop
push
push
cmp
pop
pop
je
lea
inc
inc
push
push
call
push
mov
xchg
pop
push
push
cmp
pop
pop
je
mov
push
mov
add
pop
jmp
push
mov
add
pop
jmp
popa
push
pop
jmp
lock
mov
push
pop
jmp
icebp
push
mov
xchg
pop
jmp
repnz
push
push
sub
movl
pop
jmp
lock
sub
movl
pop
push
jmp
lock
call
call
jmp
adc
add
push
dec
inc
dec
xor
cs
insb
add
adc
add
adc
add
adc
add
add
add
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
outsl
add
outsl
bound
inc
jb
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
jmp
push
push
mov
xor
add
add
mov
mov
inc
shr
mov
dec
je
shl
jae
push
mov
mov
shr
mov
mov
shr
test
je
and
shr
add
jmp
and
shr
add
and
test
je
dec
je
dec
je
and
add
jmp
and
add
jmp
and
add
jmp
and
add
inc
mov
add
sub
lea
cmp
jae
rep
mov
pop
shr
and
add
jmp
cmp
jae
mov
mov
inc
shr
inc
mov
jmp
pop
mov
pop
sub
pop
ret
jmp
push
outsb
popa
bound
je
and
js
imul
popa
bound
add
insb
jns
outsb
inc
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
