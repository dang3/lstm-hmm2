in
test
or
pop
sbb
stos
loop
add
test
pop
inc
rorl
add
adc
in
add
cmp
or
xchg
fwait
test
xor
mov
loop
in
rclb
inc
sarb
push
inc
pop
adc
xchg
ret
rcr
mov
inc
les
inc
push
fisubs
out
out
sbb
cmp
cmp
loope
mov
mov
mov
faddl
mov
and
test
aad
ret
stos
push
dec
lret
sbb
sub
jbe
mov
ss
int
pop
mov
push
sub
or
cwtl
in
and
sahf
xor
jecxz
pushf
sbb
mov
lock
lock
jne
mov
ret
rcl
push
adc
ret
cmpsb
mov
dec
lret
stos
inc
in
stos
gs
loop
movsb
jmp
lret
fucomp
add
dec
popf
lret
fistps
insb
sbb
hlt
mov
lret
imul
test
cmpsb
fistpl
test
dec
push
xchg
mov
pusha
pop
into
mov
fucomi
repnz
push
jae
lret
hlt
and
cmp
push
and
mov
mov
xor
push
cmc
or
les
xchg
xchg
pop
xchg
int3
push
mov
xchg
lock
sarb
inc
jmp
xchg
adc
inc
test
into
es
aam
push
adc
cmpb
jmp
lret
cltd
flds
shll
call
aam
jb
adc
pop
lret
aam
mov
fists
test
sbb
dec
adc
repnz
jnp
stc
testl
fwait
into
jmp
mov
pop
ret
dec
sbb
mov
sbb
cli
stos
cmpsl
int
fs
scas
dec
scas
pop
rcr
mov
add
cmp
mov
xchg
add
mov
movsl
or
sbb
mov
pop
pushf
xor
cmp
xlat
push
jno
cmc
mov
faddl
repz
nop
xchg
filds
mov
push
sarb
sub
mov
jge
pop
inc
xchg
int
dec
sarb
pop
mov
adc
xchg
and
mov
mov
cmovae
call
push
fidivs
xor
push
and
jle
inc
loop
mov
dec
outsl
dec
fidivl
enter
push
adc
mov
sbbl
add
cmpb
pop
ficompl
pop
es
cmp
cwtl
sbbb
inc
sbb
dec
cmpsl
or
mov
cwtl
or
outsl
sub
cmp
cli
sub
aaa
imul
cmpl
jmp
ja
in
lret
sbb
daa
sub
daa
mov
mov
pop
xor
add
pop
mov
fldl
pop
gs
xchg
pop
loop
adc
jp
js
loopne
repnz
popl
adc
into
test
xor
addr16
fwait
cmp
mov
aam
sub
push
jns
fcom
pop
xchg
pop
jbe
sti
mov
xchg
sbb
pusha
mov
sbb
inc
cmpsb
push
or
sarb
xor
mov
pop
sahf
dec
sub
cmpl
int3
inc
pop
lods
dec
or
loopne
iret
xlat
jmp
test
or
loopne
daa
mov
lock
ss
sbb
popa
mov
test
cmp
push
test
lret
ljmp
sahf
cmp
repnz
dec
pop
les
jbe
cmp
daa
je
cmp
lret
ret
rcrl
lret
or
dec
cmpsl
ds
fistl
cmp
cmpsb
fstp
push
int3
xor
inc
push
mov
mov
push
test
ss
das
loopne
push
scas
xlat
in
pop
inc
loop
scas
out
mov
rol
sub
fcompl
out
push
cmpsb
shrl
push
fidivrl
fistps
or
jae
stos
mov
stc
out
mov
fisubs
sbb
cmp
nop
test
jle
push
dec
mov
pop
pop
test
jbe
mov
popf
inc
inc
mov
cwtl
fcmovnb
add
sbb
ds
aas
notl
xor
mov
outsl
ret
popa
mov
cmp
mov
mov
into
dec
cmpb
adc
subl
ficompl
jno
les
add
lcall
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
stos
loop
add
test
pop
inc
rorl
add
adc
mov
jmp
ret
ficoms
jle
scas
fcompl
and
xchg
mov
add
shlb
push
inc
pop
sti
push
dec
mov
sbb
jge
inc
push
fisubs
add
fidivrl
push
pop
addb
aas
ret
jb
fwait
in
mov
fucomi
push
adc
adc
inc
inc
mov
shrb
cmp
inc
js
or
lret
adcl
inc
lcall
popf
divb
fstl
rcl
adc
jnp
mov
add
push
bnd
pop
int
inc
pop
adc
insl
cwtl
ret
dec
test
jns
or
lds
mov
mov
sbb
sbb
fidivl
push
dec
shll
jno
dec
push
jg
mov
outsb
stc
fs
or
xchg
aad
pop
inc
shll
jne
gs
mov
fnstsw
jecxz
mov
loopne
jne
jo
and
stc
xchg
les
lahf
testl
cltd
lds
repz
cwtl
xor
pushl
mov
fwait
jmp
mov
out
shr
mov
jge
imul
leave
sub
cmp
jg
sti
xor
pop
pop
jb
out
adc
addb
inc
mov
pop
xchg
inc
mov
cmp
cs
sarl
cmp
lcall
xchg
rcrb
aas
push
repz
or
and
jns
popf
dec
pushf
fldt
adc
ss
add
dec
lds
rcrb
mov
insb
fs
add
push
lods
test
test
int3
and
xchg
enter
jae
fistl
repz
jo
fnstenv
lds
jl
dec
sub
add
inc
sub
mov
xchg
jl
rorl
test
fistpl
mov
push
mov
jp
xor
ffree
div
std
cld
xor
fs
rcrb
adc
pop
arpl
dec
add
add
pop
push
cmpsb
stc
xor
fidivrl
adc
mov
mov
test
fs
sti
mov
jno
xchg
dec
inc
xor
jb
jecxz
mov
xor
fwait
push
mov
movsb
dec
popf
dec
inc
mov
inc
mov
xor
ljmp
xor
daa
jb
cli
pop
das
pop
sbb
lar
scas
jo
jmp
add
cmpsb
add
shlb
pop
ret
cmp
dec
stc
lret
xorb
int3
stos
cmc
loop
xchg
cmp
icebp
pop
test
pop
push
inc
popf
lret
lock
movsl
add
inc
gs
adc
xchg
cmp
shrl
push
mov
jb
popf
pop
idivl
cmp
inc
inc
mov
sub
leave
hlt
in
leave
pusha
push
mov
js
lock
sbb
add
mov
inc
mov
pop
xchg
sub
fucomp
push
call
lock
inc
add
fcomp
xchg
test
aam
outsl
push
ret
test
pusha
mov
ds
mov
ret
movsb
jne
pop
mov
loope
adc
test
pop
das
xor
mov
insl
xchg
in
divb
aam
ds
loopne
ds
mov
mov
inc
test
test
test
add
add
leave
mov
cwtl
push
lock
cli
ss
mov
add
push
jb
mov
sbb
test
cmp
imulb
cmpsl
xchg
test
mov
repz
cmp
jae
xor
mov
stos
mov
cltd
repnz
fstp
inc
int3
mov
or
jge
or
cld
and
mov
cmc
cmp
inc
adcl
sub
adc
push
pushf
dec
and
push
aam
sti
sti
jns
and
sbb
jmp
xchg
cltd
cmpsb
enter
mov
ds
fcom
pop
cmp
jne
lahf
push
mov
and
push
adc
out
xchg
fwait
jne
fsubs
cmc
mov
movsb
adc
adc
imul
lea
add
lcall
mov
add
sbb
push
cmp
fcomps
je
and
add
sub
sbb
mov
dec
sbb
adc
repnz
mov
popf
jae
lret
pusha
adc
sbb
test
data16
pop
dec
xchg
adc
lcall
jge
jns
sbb
pop
cld
cmp
xchg
mov
fs
shl
dec
ljmp
std
cli
jnp
inc
mov
mov
inc
fisubs
inc
pusha
sbb
xchg
filds
sbb
mov
inc
xchg
inc
jge
xchg
inc
or
push
popf
pop
stos
cmp
push
xor
clc
sarb
sti
movl
mov
dec
mov
loopne
cs
lcall
jecxz
sbb
jecxz
pop
adc
mov
jge
push
cmc
pop
and
into
mov
hlt
mov
mov
inc
sbb
iret
inc
sbb
pop
sub
insl
lahf
ret
sbb
fs
std
les
pop
adc
jae
jge
rcll
lret
jno
sub
mov
inc
xor
inc
dec
jae
lret
xchg
or
push
xchg
pop
jo
gs
sahf
xchg
fistl
fldl
mov
mov
shrl
rorb
lahf
scas
fcomi
js
mov
in
cmc
xor
adc
jecxz
cmp
es
cld
outsl
jmp
fmul
add
fistpl
push
mov
and
mov
bound
imul
fsubs
int3
and
adc
push
sub
inc
xchg
push
and
dec
dec
mov
cltd
jns
sub
ja
cmp
or
lcall
or
mov
fstl
rolb
iret
sbb
in
imul
cmp
lds
adc
lret
repz
dec
mov
xor
test
inc
fldcw
jae
negl
inc
ljmp
push
mov
cmpl
mov
xchg
sbb
or
pop
dec
push
pushf
stc
push
stos
std
cld
pop
mov
mov
mov
pop
pusha
jbe
sub
insb
jp
xor
iret
js
jle
xor
icebp
jmp
jmp
jb
mov
push
stos
rolb
sbb
pop
outsb
icebp
out
test
fwait
xor
movsb
inc
insl
in
imul
push
inc
jne
mov
or
pop
fdivrl
sti
fldt
cmp
adc
bound
mov
pop
fisubs
jmp
mov
movsb
lea
add
lret
arpl
fnsave
mov
pop
pop
dec
sbb
test
test
daa
rcrb
pusha
cmpsl
pop
sbb
add
inc
stos
ss
pop
iret
movsl
sbb
sti
dec
cli
cmp
stos
mov
adc
push
pop
test
mov
icebp
push
jae
fisttpl
into
bound
fcomps
subl
stos
jne
in
add
rcrl
sbb
dec
mov
mov
mov
pop
mov
push
mov
jp
scas
pop
mov
jg
ret
sbb
adc
push
cmp
xor
cmp
sti
and
fxch
data16
push
fidivrl
pop
dec
xchg
insb
jbe
cli
xchg
call
es
mov
and
and
or
addb
lea
jle
push
out
xlat
sti
cmc
xor
mov
fscale
push
mov
ljmp
stc
jl
scas
iret
jmp
jae
stos
inc
mov
in
call
mov
inc
sbb
inc
fists
or
test
lea
sub
dec
sarb
aaa
sub
sub
dec
repnz
push
in
fcmovne
xor
xor
mov
repz
jp
orl
iret
jne
dec
xchg
and
test
mov
mov
xlat
stc
lods
jle
enter
jnp
movl
sahf
xchg
pop
stc
and
fldcw
and
adc
mov
push
pop
jnp
sub
inc
adc
les
cltd
xchg
imul
mov
fistps
movsb
jnp
enter
outsl
es
inc
flds
xor
adc
int3
pop
sub
push
ds
xor
inc
aaa
aam
out
xchg
imul
arpl
mov
lret
jno
out
stos
ja
pop
in
aas
call
hlt
mov
faddl
and
repnz
pop
and
fdivs
pop
dec
jno
or
rcrb
dec
sbb
test
mov
cld
daa
xchg
cmp
dec
push
addb
push
add
incl
cmp
icebp
stos
jl
jmp
add
testl
mov
sbb
mov
fistpl
popf
fcoml
sbb
mov
push
fucomi
in
mov
lcall
js
rclb
inc
aam
clc
xor
std
pushl
stos
add
xchg
adc
push
cwtl
inc
lods
lods
jbe
mov
cmp
mov
scas
xlat
xchg
sbb
xor
inc
dec
xchg
mov
sbb
lret
inc
sbb
mov
aad
sub
add
jecxz
xor
in
sub
cli
aas
in
cs
test
icebp
push
push
add
sbb
hlt
and
xchg
and
fdivs
pop
dec
jno
or
rcrb
sbb
mov
icebp
mov
clc
xor
in
movsl
dec
sbb
std
mov
int
cmp
lods
fcoms
sbb
adc
daa
xchg
jnp
stos
and
ljmp
jnp
xchg
pushf
and
ret
adc
fucomi
in
xchg
bound
call
adc
inc
loop
mov
andl
mov
aaa
in
cmp
nop
dec
and
push
aas
inc
mov
push
sub
mov
aaa
pop
fdivrl
sub
or
mov
mov
cwtl
cltd
test
inc
mov
cwtl
lods
dec
inc
mov
in
jle
pop
mov
movsb
cmp
fsts
add
mov
test
mov
or
ds
and
add
or
mov
aaa
mov
sbb
sbb
sarb
aaa
stos
test
lcall
shlb
push
dec
xor
lret
imul
mov
mov
cld
imul
repnz
cmp
outsb
push
mov
insl
adcb
stos
fisubrl
daa
mov
fs
cmp
mov
push
mov
inc
pusha
ficomps
jle
lahf
push
cmp
sbb
in
testl
std
decl
mov
out
out
pop
aam
shr
push
push
lods
xlat
push
frstor
fbld
es
ficomps
sbb
popf
iret
and
mov
shlb
push
aad
inc
xor
xor
popa
mov
inc
lds
adc
add
push
clc
addl
lds
ds
lock
inc
sbb
pop
cli
sti
dec
inc
sbb
inc
add
mov
test
shl
test
mov
in
scas
arpl
lret
adc
sub
pop
pop
lods
mov
pushf
sbb
test
dec
sub
dec
cld
xor
lret
or
push
shrl
push
mov
dec
fcoml
cs
cmpsl
pop
jo
jge
pop
dec
js
xchg
jg
ret
sbb
aas
stos
push
fsts
andb
roll
jl
jp
stc
mov
and
add
mov
aad
cmp
fistps
es
enter
mov
sbb
or
push
addl
repnz
jb
jl
adc
mov
dec
sahf
dec
mov
repz
movsl
ficoms
mov
inc
mov
movsl
popa
in
cmp
mov
mov
pop
or
pusha
xor
jnp
mov
cmp
pop
hlt
stos
lock
mov
hlt
sub
sbb
int3
mov
cli
das
push
dec
test
sub
dec
repnz
ljmp
xchg
fistpll
mov
in
test
shlb
cli
or
or
xchg
or
xchg
scas
imul
std
xor
mov
in
pop
sub
lods
jle
test
lret
jmp
push
mov
inc
shlb
pop
inc
loopne
mov
mov
inc
test
dec
dec
out
mov
jmp
pop
lcall
movsb
cli
jae
inc
loope
in
push
enter
fs
addr16
out
cmp
mov
push
hlt
sub
inc
sub
lea
cmp
mov
push
xor
mov
pop
pop
cmp
or
ds
clc
in
rcrl
add
ja
pop
ror
and
xor
cmpsb
adcl
inc
nop
shll
cwtl
xor
mov
sbb
add
inc
mov
ja
push
test
lret
and
pop
lret
rcrl
andb
fsts
pop
daa
mov
xchg
andl
push
mov
repnz
lods
movb
ret
fstps
add
pusha
push
jg
fxam
xor
xlat
pushf
stos
sti
inc
lcall
inc
aam
cwtl
cmp
inc
fbld
mov
or
les
fwait
pop
jmp
inc
gs
movsl
cli
mov
mov
inc
test
bound
cld
out
push
sbb
sbb
test
push
push
rorb
pushf
lret
adcb
lret
cltd
pop
lcall
inc
add
dec
pop
mov
jne
inc
inc
xor
mov
inc
jnp
mov
addl
or
or
aas
and
dec
adc
stos
mov
aaa
mov
lret
add
sub
out
int3
pop
shlb
repz
pushf
dec
pop
jno
add
jg
mov
outsb
sbb
das
or
push
daa
cmp
ja
add
pop
fnsave
xchg
jbe
popf
adc
cmpsl
pop
call
lret
iret
lock
out
sar
lcall
inc
in
mov
inc
in
enter
out
jp
push
pop
sub
pop
sbb
mov
push
dec
inc
adcb
jo
cmp
fstl
xor
jne
mov
aam
inc
imul
insb
push
or
push
imul
sahf
pop
and
mov
mov
mov
inc
notb
fdivrl
out
fimuls
jae
movsb
inc
mov
in
call
cld
or
fnstsw
pop
fimull
imul
dec
mov
cmpsl
pushf
adc
sub
mov
jmp
dec
mov
lahf
lcall
jmp
dec
bound
and
jl
outsb
push
cld
jo
xchg
inc
push
xor
int3
jns
or
lcall
ret
pop
pushf
ret
cli
and
les
jg
js
xchg
mov
sub
cwtl
push
mov
inc
fsubl
clc
cmp
je
mov
and
add
jge
stc
lea
push
arpl
xchg
imul
out
mov
pop
cltd
ficomps
pop
fdivrs
sti
mov
popf
iret
sbb
dec
add
inc
loope
mov
fldenv
es
cwtl
lds
sahf
dec
mov
xor
in
and
aas
int
gs
inc
inc
xor
std
fwait
clc
in
xchg
cmp
jo
in
ja
outsl
clc
enter
or
inc
and
mov
sbb
fsubrl
mov
scas
rorb
imul
and
arpl
outsl
mov
mov
pushf
dec
pop
pop
nop
insb
sbb
movsl
mov
lcall
cmpsl
xorb
gs
mov
pop
mov
fstl
cld
cmpsl
inc
pusha
push
pop
fwait
pop
test
fbstp
cmp
and
pop
inc
pop
sub
mov
and
cmp
das
ds
xchg
jecxz
jno
pop
stc
xor
fucomp
push
popf
inc
movsl
cltd
stos
xchg
pop
cmpsb
dec
inc
pusha
jo
jnp
mov
popf
out
es
aad
xchg
mov
push
or
daa
hlt
push
sub
and
sarb
xchg
xchg
inc
adc
sahf
dec
mov
jge
dec
int
mov
sahf
xor
pop
addb
cmp
mov
xchg
inc
sbb
push
sub
sbbl
dec
cltd
jo
hlt
das
cli
mov
vmovlpd
sub
inc
stc
pop
imul
jae
sbb
iret
pop
test
lret
fs
xchg
daa
push
push
jl
lret
ret
cld
xor
fcmovnu
rolb
mov
loope
std
neg
pop
scas
dec
mov
pop
sub
sbb
sahf
adc
test
fbstp
cmp
xor
adc
lret
jecxz
sti
ljmp
xchg
fwait
imul
xor
xchg
and
mov
mov
pop
es
into
mov
sbbl
cmp
addb
inc
mov
sbb
lret
dec
and
shlb
xor
mov
repz
jbe
sbb
or
sahf
divb
cmp
add
into
sbb
inc
pop
mov
pop
dec
jo
cmp
roll
mov
movsl
ret
mov
addr16
hlt
mov
mov
sbb
arpl
mov
mov
lods
pop
and
lret
ja
scas
jne
jnp
ljmp
test
aad
push
mov
push
push
mov
stos
xchg
out
negb
cmpsl
dec
cmpsl
dec
loopne
aam
jb
sub
lahf
inc
jge
pop
jno
and
jg
int
xor
out
in
subl
push
cmp
inc
mov
dec
and
mov
push
fidivrl
icebp
pop
addb
ljmp
jl
mov
lcall
pop
mov
out
pop
je
enter
dec
inc
mov
sbb
push
repnz
adc
orb
test
call
mov
aam
test
xor
inc
inc
icebp
test
pop
dec
jo
or
je
jecxz
sbb
add
orl
addr16
sbb
enter
les
add
sub
cld
sub
mov
pop
rep
rolb
fstp
outsl
push
mov
or
mov
mov
adc
test
mov
sbb
incl
dec
fucomi
bnd
xchg
fists
sti
jle
aas
push
icebp
dec
bound
sbb
clc
jb
pop
les
rorl
hlt
stos
aad
push
ja
xlat
mov
ja
enter
cmp
and
xor
out
mov
mov
xchg
enter
dec
pushf
and
adc
pop
sub
lea
sub
ljmp
daa
pop
fmull
cwtl
lret
imul
push
popf
mov
cmp
jp
add
sahf
rorl
add
insl
mov
xchg
adc
int3
dec
and
ja
inc
mov
fildll
stc
push
sbb
xor
shll
sbb
mov
jbe
arpl
add
lret
cs
stos
dec
mov
fsts
jl
jecxz
mov
pop
arpl
lods
pop
pop
ret
push
pushl
dec
loope
js
mov
pavgb
movsb
or
add
out
scas
cmpsl
mov
mov
movsb
fistps
dec
sbb
push
sub
sub
enter
cmp
sbb
out
pop
mov
popf
mov
mov
mov
je
sbb
add
or
mov
stos
dec
inc
xor
mov
lea
clc
movsl
pop
lock
pop
or
jns
inc
mov
jne
push
dec
aaa
fimuls
rolb
sbb
and
rcl
xchg
xor
lcall
ficompl
push
insb
xlat
push
shl
lret
fucomip
mov
mov
repnz
pushf
lds
arpl
jne
adc
cld
xor
or
mov
outsb
stos
cmp
fwait
lods
pop
xchg
push
cmp
pusha
mov
div
push
fs
fcomps
cmp
or
pop
adc
into
mov
rcr
xor
mov
shll
test
pop
test
gs
js
inc
cmp
cmpsl
jnp
enter
mov
xor
loop
mov
lret
fwait
enter
dec
push
and
cmp
fsubr
mov
sbb
push
cmpsb
cld
cmc
mov
shll
mov
ret
loopne
mov
jecxz
cmp
lock
mov
mov
mov
mov
mov
fadd
and
imul
sub
push
stos
push
aad
dec
sbb
fisttpll
dec
xor
adc
sbb
xor
xchg
push
nop
std
sub
dec
adc
addb
mov
fisubrl
rorl
xchg
fistl
jae
xor
mov
sub
movb
fs
out
test
cmp
xchg
pop
loop
xchg
adc
cwtl
cld
push
sarb
dec
div
lahf
pop
mov
and
push
aam
rcrl
jns
enter
test
mov
xor
std
subl
cmp
std
inc
fsubs
icebp
mov
inc
inc
mov
lcall
sbb
adc
sahf
dec
mov
icebp
das
int3
lcall
mov
add
mov
pop
push
iret
xchg
sub
hlt
mov
stc
test
repnz
pop
in
or
sub
imul
stos
xor
shrl
xchg
stos
imul
leave
dec
inc
sub
jl
or
inc
sbb
sbb
xchg
inc
sbb
mov
bound
sub
fsts
pop
out
jg
leave
in
mov
jo
mov
adc
jnp
pop
es
clc
adc
cmp
or
in
addr16
sbb
sbb
mov
loop
test
in
xchg
imul
push
fnsave
int
call
inc
mov
lea
es
and
lret
inc
mov
jne
dec
mov
lea
adcl
pop
adc
add
shrl
iret
sbb
jmp
test
out
mov
movsl
ret
inc
es
ret
mov
andb
sbb
cmp
xchg
leave
movsl
mov
mov
mov
dec
xor
mov
dec
lods
push
sub
scas
xchg
out
pop
mov
jo
mov
stos
lcall
cmp
aad
ret
shl
mov
jl
fscale
fldt
pop
test
icebp
push
push
fsubrl
mov
cld
loop
lcall
xor
sarb
lock
cmp
fdivs
addr16
fwait
xor
pusha
and
xchg
imul
fimuls
mov
jne
outsl
xor
stc
fsubs
and
mov
int3
jecxz
leave
sbb
in
push
jp
stos
fsubr
mov
sbb
dec
data16
ljmp
repz
imul
lret
jl
repz
jecxz
movl
add
int
inc
pop
loop
scas
out
pushf
pop
inc
mov
icebp
imulb
lds
mov
leave
inc
inc
lahf
mov
lahf
pop
jmp
push
xchg
fcmovb
cmp
cs
dec
data16
scas
xchg
cmpl
ja
sbbb
rcrl
stc
imul
and
fwait
push
xchg
mov
cwtl
add
mov
add
xchg
xchg
pop
outsl
negl
aam
cmp
xchg
mov
repnz
jbe
cli
jae
push
mov
mov
mov
mov
rol
fstl
cwtl
cltd
and
push
hlt
je
add
in
push
adc
cltd
cmpsl
int3
jmp
iret
mov
mov
mov
arpl
mov
mov
pop
pop
rolb
push
xchg
fs
jnp
popf
mov
jl
mov
cmp
add
gs
ret
fs
sub
xor
stos
leave
daa
fcmovu
mov
stos
push
sbb
sbb
test
lods
mov
jle
pushf
dec
ljmp
aad
fsts
jp
inc
inc
push
stos
std
aas
insl
lcall
or
and
in
lahf
sub
sbb
lods
pop
sti
ret
and
pop
xchg
fprem1
and
cwtl
cmp
or
and
jb
adc
rcrl
xor
dec
aam
pop
lahf
pop
xor
rcrb
cmp
fwait
insl
push
ret
push
sub
mov
shl
push
adc
mov
loope
mov
out
xchg
test
dec
mov
repz
pop
push
adc
rolb
push
pop
adc
adc
lret
imul
xchg
mov
clc
sti
int
fdivp
jnp
mov
sbb
adc
ret
or
cwtl
lret
inc
mov
int
sbb
les
fldt
pop
popa
das
scas
sahf
popf
fdivrl
std
fbstp
test
jl
ret
xchg
and
xor
lock
mov
negb
mov
jle
cltd
push
mov
fwait
shrb
jg
iret
loop
sahf
pushf
lahf
ret
mov
xchg
mov
pop
test
adcb
or
jg
sbb
addl
out
aam
sbb
movsb
inc
push
int
call
cmpl
mov
add
jp
mov
sbb
sub
and
mov
cmp
stc
inc
jp
xor
mov
call
push
mov
into
out
sti
repz
aas
in
and
cmc
jmp
popa
ret
mov
adc
imul
icebp
shlb
int
jecxz
mov
xchg
les
leave
mov
cmp
nop
pop
std
jmp
mov
icebp
test
or
addl
push
sub
sarb
sub
lock
push
sbb
aad
mov
stc
bnd
int3
scas
push
cmp
jl
popa
or
mov
rcll
xchg
fsqrt
test
adc
popf
mov
sub
cmp
cwtl
push
jne
insl
lsl
lea
shl
push
adc
xchg
loope
mov
dec
dec
mov
rorb
xchg
lcall
mov
push
or
pop
adc
inc
mov
mov
lods
std
pop
push
iret
ret
decb
jns
xchg
xchg
mov
mov
leave
sub
inc
and
cmpsl
mov
faddl
push
cmpsl
cwtl
icebp
ss
sbb
push
stos
push
and
mov
sub
add
pushf
aaa
repz
or
and
ret
lret
pop
rcl
xchg
ret
adc
pop
movsb
push
jb
sub
ja
gs
dec
jnp
lds
arpl
fwait
sahf
adc
fnstcw
or
addb
sarl
adc
lds
sbb
out
adc
xchg
cmc
mov
push
out
jmp
ja
and
cmp
mov
int
adc
sbb
add
adc
enter
test
add
jne
mov
adc
or
pop
cmpl
testl
pop
add
jae
pop
and
sti
insb
mov
mov
cltd
jo
cltd
xor
jbe
add
dec
mov
sub
dec
rcrb
push
cmpsb
stos
les
fildll
mov
jne
out
mov
dec
sbb
add
jbe
lods
pop
mov
xchg
inc
add
inc
cmp
lret
mov
xchg
adcl
ficompl
sahf
sbb
sub
pop
mov
jmp
pushf
sahf
arpl
into
das
lcall
stc
xchg
and
sbb
xchg
js
adcb
or
mov
cmpsl
cltd
xor
push
lods
mov
cmp
out
stc
call
xchg
xchg
jle
pusha
xor
out
sbb
add
mov
cmp
in
fadds
lret
popa
inc
sub
xor
and
ficoms
mov
mov
test
mov
fucomi
iret
jnp
pushf
rcrb
das
lock
adc
lret
inc
sbb
inc
dec
es
les
insb
adc
xor
pop
stos
inc
in
dec
sahf
lret
pop
sub
xchg
pop
jmp
dec
rcrl
jl
fiaddl
test
xchg
add
mov
rolb
imul
pop
sbb
test
pushf
cmp
lahf
scas
jg
leave
mov
pop
popf
sbb
sti
and
hlt
aam
dec
dec
sub
xchg
aas
inc
stc
inc
ljmp
cld
lahf
jmp
stos
sub
test
leave
pop
mov
aad
pop
fdivrl
aas
movsl
sarb
cmp
in
jg
and
loopne
cs
sti
mov
cld
cwtl
xchg
adc
xchg
lcall
int
cwtl
test
mov
in
cmp
adc
ret
sahf
add
mov
mov
icebp
xor
mov
adc
mov
cli
or
inc
sbb
inc
or
pop
cli
push
and
test
inc
mov
cmpl
jmp
nop
popf
mov
pop
outsb
fsts
std
daa
dec
sbb
xchg
mov
scas
testl
roll
mov
mov
pop
jl
pusha
cmp
in
mov
scas
aam
jl
xchg
fisubs
repz
mov
inc
adc
and
mov
ror
aam
sahf
adc
sti
mov
xchg
fisubrs
mov
sub
mov
xchg
mov
push
add
cmp
je
xchg
xchg
xchg
push
xchg
or
outsl
push
adc
test
mov
add
int3
fwait
cwtl
test
nop
mov
dec
mov
cmp
cltd
pusha
xor
jnp
hlt
jmp
inc
movsl
xchg
sub
pushf
ret
pop
pushf
lret
mov
push
enter
mov
test
pop
clc
sub
ja
loope
jne
std
jae
lret
jge
pushf
arpl
jo
test
jge
pop
test
jl
rcrb
sti
add
xchg
ficoms
jno
push
and
into
mov
mov
insl
insl
xor
sbb
cwtl
int3
inc
lcall
pop
lea
mov
jecxz
pop
adc
enter
cmp
mov
out
mov
std
jge
loopne
or
call
xchg
pusha
ds
adc
xor
xor
mov
push
aad
cltd
pop
imul
mov
movsb
adc
adc
cli
dec
cmp
lcall
mov
jno
pop
mov
sub
lock
leave
pushf
int
mov
adc
gs
ret
in
dec
cltd
push
in
cmc
xchg
xlat
stos
dec
sahf
js
push
test
push
xchg
repnz
sbb
int
adc
lods
mov
icebp
xlat
gs
bound
inc
movsl
insl
dec
and
mov
cmpsl
pop
stos
lds
mov
lret
xorb
push
pop
pop
cld
ret
shlb
outsl
loop
mov
decl
xchg
xchg
imul
loope
sub
pop
dec
iret
or
dec
aam
mov
pop
push
jecxz
cmp
mov
decl
icebp
or
jecxz
pop
fmull
rclb
jno
leave
push
sbb
int3
nop
xchg
xchg
push
adc
and
enter
xor
ja
push
lret
inc
inc
xor
loopne
clc
pusha
mov
cmp
mov
clc
pushf
add
inc
dec
xchg
lret
jecxz
gs
adcb
adc
lahf
cmc
cld
jg
imulb
lret
pop
shll
fsubrl
test
mov
pusha
mov
mov
push
dec
xor
fmulp
addr16
lret
orl
icebp
sbb
movsl
insl
ret
mov
in
cltd
push
push
cmpsl
push
push
mov
dec
jns
andl
les
loop
repnz
jg
rcrl
inc
cltd
repz
into
adc
jns
pop
pop
inc
add
pop
fsubr
fstps
pop
data16
push
aas
xchg
ret
pusha
test
fildll
push
sbb
ja
filds
cmp
iret
arpl
pop
inc
cltd
enter
inc
or
mov
mov
hlt
xor
mov
out
mov
pop
lds
mov
pop
push
dec
sub
and
mov
fnstcw
pop
ja
clc
add
pop
cmp
loopne
xor
push
mov
sub
xor
jno
jmp
addr16
inc
xchg
pop
mov
outsl
adc
ds
sbb
dec
shlb
dec
cmp
push
addr16
push
mov
in
pop
pop
and
xchg
dec
inc
sbb
stos
pop
test
xchg
test
jmp
in
sarl
ret
sub
scas
mov
xchg
bound
add
mov
or
pop
or
js
rcl
xor
sbb
and
insb
cmc
xchg
lcall
mov
and
cmpsb
addr16
push
mov
jp
int3
loope
orb
inc
mov
aas
aas
pop
outsl
rorl
pop
xlat
or
popa
mov
pop
xor
mov
inc
inc
mov
fstl
add
xor
add
push
mov
sbb
adc
mov
dec
pop
adc
add
inc
jmp
fisubrl
jge
lret
mov
lods
and
ljmp
push
gs
rcrl
roll
inc
inc
sbb
inc
pop
push
pop
pushf
mov
and
xorb
imul
fistl
pushf
sti
test
fisttps
ds
mov
mov
loope
adc
out
aam
mov
divl
aas
mov
popl
jnp
mov
mov
push
cmp
push
jmp
or
cmpsl
mov
fwait
fcmovnbe
mov
xrelease
loope
jge
je
add
jmp
adc
mov
fcmovnb
sarb
pop
push
xchg
int
push
lea
ss
sub
mov
cmp
sbb
sub
fucomip
repz
pop
push
inc
ret
repz
ret
mov
pop
sub
lea
inc
inc
aas
adc
test
mov
fsubrl
sbb
pushf
dec
and
xchg
mov
pop
stos
fsubr
stos
test
push
sub
out
int3
repnz
jbe
js
fldl
test
sbb
add
xchg
ficoml
outsb
shlb
mov
fcoml
jbe
xor
mov
lahf
sarb
adc
popf
scas
stc
shl
push
pop
jb
adc
test
sbb
mov
mov
repnz
insl
lds
sub
cmp
stos
cmp
jb
pop
mov
loope
loop
adc
test
push
pop
xchg
dec
dec
mov
shrb
lret
sbb
stos
mov
adc
add
test
lock
out
and
xor
repnz
scas
bound
repnz
pop
xor
inc
aas
loop
push
xlat
xchg
scas
nop
pop
rclb
dec
or
scas
push
inc
sbb
and
rolb
adc
sbb
call
fimull
mov
jae
inc
ret
cmp
roll
fsts
std
das
sub
lcall
add
pop
mov
fstl
jp
scas
jg
or
xlat
fcoml
sti
and
xor
mov
inc
mov
push
xchg
dec
and
into
aam
xor
jp
xchg
and
mov
adc
mov
pop
fsubl
fists
lea
mov
push
daa
lcall
ds
add
mov
shll
imul
mov
mov
adc
repz
lds
ds
fistps
xchg
divl
inc
sbb
mov
inc
mov
enter
ret
fldenv
adc
ss
rcrb
sbb
test
mov
dec
call
pop
fimuls
add
cli
jbe
jns
lret
fcmovnb
lcall
adc
les
mov
xchg
outsb
shrb
dec
jnp
push
add
lds
jl
sbb
into
lods
test
js
jle
das
fcomip
cmp
xor
inc
and
leave
incl
rcll
dec
mov
in
cmc
mov
inc
jmp
int3
inc
insl
in
imul
dec
dec
pusha
cmp
addr16
mov
add
adc
push
adc
andb
xchg
sub
sbb
bt
icebp
and
sbb
xor
add
lea
xchg
fildll
in
inc
pop
or
or
xchg
add
rcrl
adc
lret
repz
jno
xchg
int3
sbb
insb
test
push
idivl
in
scas
lret
sbb
inc
mov
lret
mov
pop
pop
in
jmp
pop
xor
test
addl
push
scas
xchg
lcall
shlb
mov
pop
or
mov
popf
movb
jmp
mov
dec
mov
std
cli
jnp
inc
mov
in
testl
pop
or
fsubrs
sbb
rcll
push
lods
mov
data16
inc
and
mov
pop
inc
cltd
xchg
xor
inc
pushf
pop
and
enter
dec
hlt
add
dec
cltd
push
es
ret
lcall
cmpsl
shl
pop
adc
arpl
lea
jle
mov
mov
repz
jbe
in
dec
popa
lcall
dec
inc
sbb
insl
xor
insl
lahf
ret
sbb
cmpsb
mov
dec
jp
pop
stos
inc
in
stos
dec
lods
push
lahf
mov
push
xchg
mov
ffree
jmp
pop
rcr
xchg
pop
xchg
test
int
xchg
test
inc
cmp
jae
xor
dec
jge
xchg
stos
inc
inc
or
pop
pushf
xor
cmp
inc
inc
lahf
scas
movl
popf
scas
inc
movsl
fsubl
jae
andl
add
or
inc
pop
lret
cmp
jge
sub
mov
repnz
cmpl
pop
mov
out
insl
push
vpshuflw
cmp
mov
pop
das
xchg
enter
xor
add
cmpb
push
inc
popf
lret
sbb
call
les
push
ficoms
imul
inc
mov
iret
sbb
lds
add
lods
jo
test
sbb
aas
sarb
ljmp
shll
mov
xchg
and
clc
stos
hlt
mov
fcmovbe
add
rcr
jbe
insb
fcoms
sbb
ret
mov
cmovb
add
push
rorl
scas
fistl
sbb
cmpsl
push
imul
pop
mov
mov
lret
lret
lock
pushf
sbb
and
push
cwtl
loopne
sarb
dec
mull
dec
add
or
lods
xor
cmp
insb
mov
pop
fsubl
scas
shr
gs
xchg
sbb
pop
sbb
bound
sub
cs
fwait
push
je
shrl
in
pushl
lods
into
pop
stos
pop
rol
mov
adc
jg
idiv
ror
negb
out
mov
xor
pop
fdivs
add
nop
or
pop
adc
insl
pop
sbb
insb
mov
cli
mov
ja
inc
in
lret
sbb
cmc
lea
stos
test
loop
cmp
pop
jne
add
prefetcht2
push
push
adc
insl
dec
mov
stos
xchg
sbb
inc
sbb
sub
add
movsb
and
xor
jbe
mov
int
jo
shlb
dec
sti
arpl
adcb
and
dec
cwtl
loopne
aam
jno
sbb
push
in
cmp
and
cmp
test
pop
fisubs
jge
outsl
cmovb
out
cmp
add
cwtl
xchg
or
push
add
mov
sub
movsl
mov
negl
add
or
data16
dec
rorl
clc
sti
mov
jecxz
add
scas
lock
cs
mov
sub
dec
leave
fsubrl
rorb
lock
jp
pusha
daa
adc
test
pop
adc
xchg
shlb
push
cmc
test
mov
cmp
mov
je
shll
aam
sbb
int
mov
cld
mov
xchg
add
mov
mov
sub
add
jb
xor
push
pusha
negl
fstl
jl
call
mov
into
xor
xor
in
pop
loope
iret
pop
mov
or
dec
adc
dec
imul
dec
xor
imul
and
ja
stos
cmp
fs
mov
push
stc
out
enter
inc
cwtl
jnp
xchg
enter
push
push
push
mov
int
mov
sub
mov
shl
pop
and
popa
pop
xchg
int
mov
in
mov
lods
std
fists
int3
sub
xor
lock
jbe
mov
inc
popa
rorb
sbb
or
ret
push
sti
push
scas
movsb
add
push
imul
xchg
rclb
rcrb
cs
dec
pop
sbb
lock
fmuls
fmuls
cmp
stos
movsl
sbb
test
add
jp
inc
imul
ret
shrl
scas
jg
fyl2x
xor
adc
repz
arpl
inc
mov
mov
cmpsl
mov
xor
rcl
rcrl
sahf
movsb
push
mov
fiadds
pop
in
or
mov
pop
out
enter
cmp
jg
enter
in
lret
lret
loope
bnd
fsubr
push
adc
pop
insb
mov
pop
pop
pop
add
or
jmp
mov
dec
or
out
and
fnsetpm(287
cmc
fists
mov
inc
ret
add
dec
sbb
mov
in
xorl
ss
dec
and
push
leave
pop
mov
push
and
lds
sbb
stos
jae
or
lahf
aas
mov
xor
pop
fcoms
and
xchg
or
push
dec
sbb
dec
pop
das
mov
arpl
mov
mov
mov
fildll
nop
jmp
call
or
sbbl
jecxz
pop
mov
inc
mov
push
cwtl
dec
xor
ret
push
mov
sbb
and
pop
or
fisubs
xor
idivb
xchg
inc
shlb
movsl
hlt
pop
sub
movsb
cmc
enter
xchg
iret
inc
mov
cmpsl
mov
sbb
push
popf
loopne
sbb
mov
ljmp
sti
pop
es
xchg
fisubrl
enter
pusha
mov
mov
add
adc
stc
pop
xor
nop
adc
xor
dec
test
movsb
push
stos
sahf
repnz
out
jge
mov
mov
testl
add
enter
and
mov
scas
xchg
int
fildll
mov
ds
mov
sbb
jle
xchg
bound
fcomps
int3
scas
pop
mov
mov
test
adcb
loopne
test
jb
add
fsubrs
popf
jmp
subl
mov
jae
pushf
and
test
xchg
inc
cld
fnsave
sti
int
sarb
sbb
sub
dec
push
and
shrb
mov
pop
hlt
dec
movsb
adc
pop
dec
jp
rorl
nop
adc
inc
pop
mov
sub
ror
xchg
icebp
mov
cltd
je
das
dec
sbb
or
ret
out
fs
cmp
enter
jno
hlt
fwait
pop
cmp
test
in
cmp
loopne
cld
mov
lcall
xlat
leave
jecxz
add
test
mov
or
sti
adc
mov
jns
inc
jle
shr
rcr
popf
pop
ficompl
pop
pusha
outsl
xchg
cmp
fildl
scas
pusha
mov
shlb
lods
and
or
cmpsl
rclb
sub
mov
and
sub
sarl
bnd
repz
mov
xor
jnp
out
xor
imul
data16
cmpb
xor
loopne
jbe
cltd
sbb
fildl
fmulp
mov
mov
call
lcall
or
test
clc
aas
in
and
cmc
cmp
paddw
enter
add
and
sbb
test
int3
fwait
fwait
rcrl
fstpl
fbld
stos
test
test
leave
pop
push
lahf
xchg
push
negl
jo
movsl
pop
cmpsl
dec
popf
pop
dec
cmp
lods
les
pop
mov
cmp
and
push
push
cli
cld
or
dec
sub
adc
lods
inc
sbb
scas
cli
fsub
and
nop
cmp
data16
rorb
inc
fwait
xor
and
mov
dec
mov
insb
or
dec
je
jmp
or
push
mov
insl
jmp
movsb
inc
sbb
cmp
call
sub
std
xchg
pop
add
or
lds
xor
mov
cmp
push
and
add
push
mov
sbb
lret
in
lret
pop
in
inc
dec
fwait
sbb
push
sbb
js
dec
and
ljmp
aas
repnz
inc
test
lret
fwait
iret
xor
fstpl
repnz
das
lods
push
dec
in
sbb
lods
popf
jae
lret
enter
sbb
fxch
push
push
test
cmp
xchg
add
xchg
pop
push
roll
xchg
fistl
sbb
stc
add
pop
cld
xor
sbb
aad
vmovmskps
fucomi
stc
mov
fwait
leave
xor
clc
jl
js
cmp
adc
or
or
sub
xchg
xchg
mov
lds
push
in
lret
aam
ds
rclb
ljmp
mov
insl
out
push
or
aaa
bound
out
mov
enter
or
adcl
gs
das
in
push
jne
mov
pop
imul
cmp
mov
cs
mov
loope
mov
fwait
sub
mov
sub
popf
hlt
mov
stc
inc
mov
add
dec
mov
call
inc
std
cmpsl
mov
lret
inc
fcmovnu
ljmp
ret
std
leave
in
sbb
jno
les
inc
lret
and
sbb
outsl
sub
clc
add
add
xor
xchg
mov
pop
inc
sbb
sti
and
add
push
push
sbb
add
outsl
xchg
adc
fidivrl
xchg
jle
fmul
push
fidivrl
ficompl
push
jne
sub
bound
cltd
loope
and
cmp
popf
rcll
adcb
aas
adc
test
and
inc
ret
pop
ja
pop
push
add
xchg
divb
and
iret
ret
clc
jmp
pop
orl
scas
inc
sub
rcrl
push
mov
mov
mov
cmp
es
sbb
in
sub
ret
scas
test
lahf
in
sub
pop
je
fistps
popf
lret
test
jo
test
push
mov
sbb
jnp
pop
stos
xchg
fistl
pop
push
arpl
adc
popf
dec
int3
adc
fldl
sbb
sbb
int3
mov
xchg
out
push
mov
sub
or
fs
ret
mov
cmp
xor
ret
and
adc
popa
jb
adc
iret
and
flds
mov
xorl
cltd
loop
mov
pop
lods
jecxz
inc
mov
inc
push
test
fs
mov
popf
fdivr
sub
stos
iret
mov
popa
mov
xchg
mov
sbb
les
fsts
mov
mov
loopne
xor
fwait
mov
mov
cmc
lret
in
add
jo,pn
mov
ret
popa
sbb
inc
pop
cli
or
movsl
mov
sbb
fs
push
aaa
lcall
ja
inc
cmc
fisttpl
fs
fisttps
pop
sar
jae
add
or
cmp
adc
cwtl
jbe
mov
movsb
pop
jae
mov
lods
jle
mov
pusha
ja
mov
mov
aad
mov
fsub
repz
push
pop
xor
cld
iret
push
pop
and
aas
inc
test
imul
stc
xor
or
sub
filds
mov
loope
push
lea
xlat
push
jle
mov
enter
xor
daa
in
xor
add
mov
cltd
mov
push
adc
rcrb
pop
push
mov
ss
shlb
insl
lds
cmp
push
daa
mov
push
mov
rcrl
mov
ret
insl
loopne
dec
imulb
adc
push
sbb
xor
xor
ja
push
cmc
mov
sbb
std
mov
stos
sbb
jno
mov
sbbl
ret
cmc
stos
jge
lcall
pop
pop
fistl
scas
pushf
inc
pop
cld
sub
rcrb
cmp
jg,pn
stos
loope
sarl
xlat
cld
cmp
pop
add
or
pop
lret
cmovle
mov
in
xchg
in
push
sbb
insl
icebp
addl
cmpsl
ret
test
add
xchg
out
enter
ja
add
adc
xchg
mov
sbb
in
rolb
sbb
bndldx
clc
lds
xor
sub
dec
push
ss
sub
fwait
lds
jp
xchg
pop
pop
test
sahf
xlat
aad
aas
xchg
mov
inc
aas
mov
das
jbe
inc
xlat
dec
test
sbb
fs
push
mov
cli
sub
mov
push
in
int
jae
sbb
iret
pop
test
nop
fcoms
data16
xor
push
jge
sbb
or
fwait
sub
lret
xor
xorl
std
push
dec
xchg
add
pop
into
and
pause
xchg
incl
mov
clc
xor
and
jb
and
dec
les
aam
decb
mov
jne
sbb
xchg
pop
test
pop
push
sahf
xorl
sub
js
sbb
mov
loope
sbb
inc
inc
das
fiadds
aam
cmc
pop
mov
mov
test
fwait
lahf
aas
sub
sbb
lds
mov
mov
mov
dec
aam
sub
iret
push
negl
inc
cmp
push
lahf
push
sub
xchg
mov
jl
pop
mov
aad
popa
cmp
std
xchg
dec
bound
push
dec
lcall
nop
xor
mov
mov
jle,pn
mov
push
lods
inc
pop
lcall
fwait
out
pop
mov
loope
xor
ss
inc
shlb
or
sbb
ret
jns
dec
nop
lock
mov
cltd
xor
nop
inc
jge
sbb
inc
mov
cltd
inc
fs
sbb
ret
sbb
add
mov
cmpb
sbb
mov
jl
ds
xchg
fwait
and
int
gs
das
in
cmc
xor
mov
and
inc
cmpb
into
popf
sub
sbbl
mov
mov
push
mov
hlt
mov
pop
enter
inc
sub
nop
jg
repnz
inc
sbb
push
jmp
lds
push
clc
mov
add
push
dec
ljmp
pop
inc
lods
mov
mov
or
bound
or
stos
movb
or
inc
xchg
mov
pop
andb
sbb
add
sub
shll
xlat
jl,pn
cmp
lahf
xchg
sbb
popa
or
mov
cmp
adc
or
jge
dec
decl
sbb
fisubl
xor
pop
inc
and
es
repz
dec
xlat
push
flds
mov
out
hlt
xor
and
dec
jnp
int
js
push
dec
mov
cltd
fimuls
cmpsl
insb
push
repnz
xor
in
mov
loopne
pop
daa
dec
xchg
jecxz
jmp
pop
divl
scas
mov
inc
cmp
add
std
fmuls
adc
lret
repz
arpl
xor
test
mov
popa
pop
inc
std
xlat
xor
in
jge
leave
test
xchg
or
fucomp
je
push
lret
sar
xor
setg
invd
inc
xchg
push
in
inc
pop
xchg
adc
mov
cmp
stos
std
mov
enter
jmp
sub
inc
cmp
and
shlb
loope
mov
out
js
mov
adc
rorb
push
mov
mov
fwait
jmp
loope
jp
adc
rcr
movsb
inc
add
pop
cltd
out
xchg
xchg
call
hlt
cmp
xchg
out
decb
or
sub
mov
rol
xchg
outsb
sahf
dec
movsb
adc
fsts
loope
ljmp
lcall
setae
jecxz
lcall
iret
or
mov
cltd
xor
std
pop
inc
pop
adc
mov
fs
icebp
imulb
popa
ljmp
ret
xor
mov
out
sbb
mov
sar
xor
sti
fcmovnb
fbstp
shll
sbb
shrb
or
mov
push
sub
mov
jbe
jb
lods
jecxz
jae
push
push
pushf
shr
sbb
insb
cmp
sbb
cmc
cmp
leave
sub
mov
adcb
dec
cmp
jge
ja
dec
pop
popa
stc
mov
cmp
movsl
ret
inc
mov
pop
mov
pop
mov
gs
fcmovu
push
lds
jne
in
dec
mov
hlt
je
and
dec
sti
mov
push
dec
mov
sbb
dec
inc
aad
push
inc
push
cmc
mov
out
js
sbb
adc
addr16
loopne
lcall
iret
xchg
or
dec
ja
sbbb
in
add
cli
fs
add
testb
cmpsl
ret
sbb
dec
stos
mov
jnp
inc
in
xlat
xor
ja
loope
sub
arpl
jns
sti
sub
fidivl
pop
mov
shrl
xchg
lret
rcll
dec
xor
dec
cmp
adc
push
jl
add
mov
fs
lods
loopne
cmpsl
push
fucomi
cmc
mov
enter
inc
shlb
or
sbb
or
lret
cmp
mov
test
mov
aam
jge
sbb
inc
mov
cltd
xabort
add
jmp
out
call
mov
out
movsl
sti
lahf
or
cltd
sahf
ret
inc
mov
ret
mov
mov
jns
sbb
adc
out
mov
mov
xchg
or
inc
ja
sbbb
cltd
subb
lock
mov
and
and
xor
mov
movsb
fisubl
movsb
jmp
cmp
ljmp
into
ret
xchg
push
fcoms
xor
test
cmp
xchg
add
ljmp
inc
lcall
inc
or
fstl
pop
rclb
sub
loope
mov
out
js
mov
adc
rorb
sbb
aam
aam
inc
push
sbb
pop
xor
push
lahf
test
in
and
cmp
sub
pop
mov
mov
shlb
inc
nop
sti
mov
je
cmp
jne
dec
pop
xor
mov
pop
push
mov
pop
ss
popf
loopne
pop
daa
into
xchg
jecxz
sti
daa
pop
div
jmp
sbb
mov
inc
cmp
add
std
clc
dec
sbb
movsl
push
sbb
jecxz
cli
push
dec
sbb
xchg
test
leave
test
sub
fs
stos
sti
in
arpl
lds
mov
les
xchg
fisttpl
sahf
push
fistl
fimull
jae
mov
mov
sub
icebp
xchg
leave
add
push
nop
push
scas
inc
xchg
repnz
and
xor
inc
xchg
mov
sub
xchg
xchg
cwtl
rcr
or
pusha
stc
xor
clc
les
movsl
ret
jb
xor
push
gs
fwait
mov
mov
fldenv
pop
in
adc
jl
jecxz
enter
or
fidivl
mov
dec
sahf
inc
sub
xor
mov
cmp
adc
popf
sub
mov
jns
into
iret
fisttps
mov
jp
add
cmp
out
cmp
test
cmp
push
pop
int
sbb
iret
notl
sbb
push
rorl
mov
push
sub
xchg
mov
mov
pop
mov
lea
cmp
xchg
xchg
dec
bound
push
dec
lcall
ds
jns
adc
push
add
jecxz
fwait
xchg
int
ret
scas
lods
pop
icebp
leave
imul
andl
xchg
jg
fsubs
test
sbb
mov
ljmp
or
xchg
imul
sahf
adc
shrb
push
cmpsb
inc
test
jp
inc
mov
cwtl
push
ljmp
cmpl
pop
and
adc
inc
cmp
jno
jp
popf
insl
sub
ret
into
or
les
jbe
ret
arpl
inc
xlat
jae
mov
jecxz
push
xchg
mov
jbe
lcall
shrb
pop
cmpsl
mov
cli
pop
and
iret
aas
push
out
mov
cmp
jno
lahf
inc
dec
push
push
test
cwtl
mov
aaa
stos
xchg
lods
ljmp
ds
lods
mov
mov
jno
inc
repz
popf
repz
dec
sub
stos
rcrb
jne
test
pop
mov
xor
insl
jle
mov
sbb
lods
inc
pop
lcall
xchg
loop
iret
xor
imul
mov
andl
add
dec
mov
pop
repnz
and
jp
push
lret
mov
loop
pushf
xchg
pop
out
sbb
lahf
outsl
aas
ret
bound
pop
out
repz
mov
inc
inc
mov
cmp
fwait
and
cmp
das
in
jmp
loop
mov
fisttpll
adc
repz
dec
call
sarl
iret
int3
xchg
hlt
mov
mov
cld
cmp
movsl
sbbl
movsl
cltd
inc
in
xor
mov
testl
lds
push
in
xor
imul
int
arpl
jo
test
pop
adc
leave
or
movsl
or
sti
dec
mov
xchg
sbb
das
jecxz
fwait
cmpsb
enter
pusha
jle
scas
pop
icebp
leave
es
sbb
xchg
fisttpl
clc
jle
add
sbb
or
push
or
les
and
adc
adc
test
enter
ret
mov
jmp
lret
cmp
sbb
and
push
xchg
stos
out
mov
xor
jg
dec
sbbb
push
mov
ret
mov
pop
test
cmp
mov
xchg
repnz
adc
or
mov
cltd
addb
mov
dec
adc
jno
dec
mov
inc
das
icebp
mov
dec
push
cmp
lock
ja
xchg
inc
mov
ror
fucom
cli
test
cld
mov
mov
pop
sub
les
push
inc
push
stos
rcrb
xor
add
lret
xchg
sbb
lds
mov
scas
fmul
mov
xchg
add
arpl
xor
mov
rol
sub
les
inc
jecxz
loopne
pop
cmpsb
push
fsubs
dec
nop
insl
or
adc
out
call
dec
add
sbbl
add
mov
sub
in
loope
jle
mov
cmc
mov
push
cwtl
fldt
mov
jecxz
xor
push
add
mov
cld
adcl
mov
add
testb
iret
fsubl
jge
clc
jnp
mov
xchg
dec
sbb
mov
mov
jo
in
gs
sar
jae
and
dec
jl
or
mov
push
sbb
cmc
mov
movsl
sbb
lret
dec
mov
xchg
sbb
in
adc
sub
scas
pop
icebp
leave
in
mov
pop
adc
sub
pop
xchg
pop
inc
mov
nop
enter
xchg
cwtl
sar
sub
in
and
push
mov
xchg
cmpsb
aad
pop
rcll
fsubs
lahf
pop
xchg
mov
mov
pop
pop
sub
inc
ds
inc
pop
sub
and
dec
sub
fmulp
lret
sbb
add
arpl
shrb
sub
imul
pop
dec
mov
mov
lock
loop
inc
sbb
mov
ret
test
fadd
pop
xor
mov
movsb
fisubl
stos
inc
push
decl
rcl
aaa
mov
aaa
ljmp
inc
cmp
sbb
push
pop
push
stos
rcrb
xor
mov
inc
jns
inc
rorl
mov
or
dec
push
xchg
inc
fwait
imul
lock
subl
dec
mov
pop
repnz
out
mov
jge
inc
jecxz
mov
cmp
movsl
in
and
in
dec
orb
mov
mov
and
mov
enter
int3
push
push
xchg
stos
cwtl
sub
sub
inc
aaa
iret
sahf
dec
movsb
adc
fsts
imul
out
mov
adc
in
mov
incl
repnz
and
mov
sbb
add
lret
lds
dec
cmpb
sbb
insb
mov
push
sahf
inc
in
xlat
mov
inc
and
inc
jno
jge
pushf
lds
arpl
jo
inc
inc
xchg
push
fsts
pop
inc
push
nop
mov
pop
mov
std
mov
add
inc
mov
loope
dec
popf
aad
mov
jmp
lahf
adc
pusha
les
xchg
inc
js
or
inc
add
and
mov
xchg
mov
xchg
cmc
mov
adc
inc
cli
jae
loopne
aam
cmpsl
ret
mov
jmp
lret
gs
movsb
arpl
xchg
dec
xorl
xchg
xchg
dec
cmp
fidivs
mov
xorl
pop
movsl
pop
in
call
rclb
cmp
jno
mov
jle
mov
inc
sbb
push
enter
add
rcrl
ret
dec
out
es
cmp
pop
xor
mov
movsb
fidivrl
jge
sub
mov
mov
mov
je
mov
out
roll
xchg
adc
and
cmp
les
fistl
xor
sub
jne
int3
scas
rcrb
ss
xlat
fdiv
sti
and
push
lret
bound
or
lcall
lea
inc
out
mov
jge
inc
jecxz
inc
ret
fsubs
sub
call
push
ret
add
adc
andl
sub
sub
mov
push
dec
mov
mov
xor
mov
call
push
sahf
shrl
mov
in
pop
mov
hlt
mov
insl
sub
or
and
mov
sbb
sub
mov
fs
test
stos
push
insb
aad
sbb
inc
mov
mov
xchg
int3
jmp
or
lahf
jae
rorl
inc
shrb
mov
and
add
lret
stos
xchg
fimull
sbb
pop
sbbb
mov
pushf
ret
mov
sbb
scas
popa
mov
repnz
add
or
push
xchg
cwtl
add
sbb
addr16
mov
out
mov
mov
nop
pop
test
in
xchg
jmp
ret
xchg
daa
pop
fisubl
cmp
fnsave
sbb
dec
fmull
enter
or
fcmove
testb
loope
sti
mov
mov
lcall
cmp
and
push
adc
mov
jns
mov
lock
sub
sbb
call
xor
shll
aad
xchg
test
mov
sbb
int
dec
cmpl
leave
mov
push
cmp
sbb
and
inc
sbb
or
stos
arpl
mov
lds
ljmp
fisttpl
loope
inc
xor
xor
jnp
jg
scas
loope
pusha
ret
popa
or
mov
or
mov
mov
pop
and
mov
inc
cwtl
inc
stos
sbb
fisubl
cmp
inc
and
es
repz
int3
xlat
pop
mov
out
adc
adc
les
hlt
mov
sahf
ret
inc
mov
ret
mov
div
cmpsb
repz
test
movsl
sti
and
imul
lahf
lret
in
rol
dec
add
add
and
roll
divb
cwtl
lret
inc
sub
jno
test
fcmovnb
fs
pop
cli
mov
mov
xchg
mov
fucomp
je
push
lret
rcr
test
xchg
adc
cmp
and
sub
test
sahf
stos
stos
rorl
xchg
out
leave
jno
add
jp
shr
rcrl
loop
aas
jge
inc
pop
dec
jl
mov
out
push
rorl
add
sti
add
add
cwtl
shll
mov
rorl
and
mov
mov
mov
and
call
mov
mov
fldenv
pop
imul
in
jecxz
enter
or
sub
mov
mov
int
ja
xor
mov
call
push
sahf
shrl
mov
cli
repz
out
mov
xor
sub
jbe
jns
inc
mov
test
and
mov
mov
inc
stos
adcb
mov
test
push
fcmovne
pop
dec
cmp
jno
rcr
jae
cmpsl
or
xor
xor
push
sbb
nop
lcall
fnsave
imul
sbb
xchg
push
push
pushf
rorb
mov
leave
push
nop
push
stc
and
pop
xchg
pop
inc
mov
adc
or
push
xchg
adc
xor
push
sub
movsl
fidivl
test
jne
out
stc
dec
insl
lods
jecxz
xor
jne
jecxz
movsb
or
xchg
dec
xorl
inc
mov
out
das
push
cmc
xor
pop
cmp
mov
popa
push
mov
pop
out
out
mov
clc
sti
pop
es
rcr
repz
mov
scas
or
repnz
sub
jno
dec
pop
sub
push
lcall
inc
stc
cmpsl
out
lock
sbb
mov
insl
inc
jns
jno
cld
lds
mov
inc
inc
xchg
rcr
adc
push
cs
pop
mov
lds
sub
clc
jecxz
fwait
out
or
jle
scas
pop
icebp
leave
es
pop
fists
fisttpl
mov
dec
xchg
loop
xor
cwtl
or
mov
xor
ror
negb
push
fisubs
xchg
imul
cmp
stos
push
sbb
inc
sti
mov
ret
cmp
inc
inc
mov
insl
dec
pop
xchg
jmp
cmpsb
arpl
imul
fsubp
mov
dec
int
mov
add
dec
call
lahf
stos
and
imul
mov
inc
sbb
in
push
loop
pop
sbbl
leave
jl
lret
movsl
ret
insb
test
lcall
nop
dec
sbb
mov
push
jno
aad
pop
lret
pop
imul
fimull
sbb
les
and
cmc
add
jl
add
pop
mov
mov
mov
int3
jno
pusha
mov
xlat
scas
mov
lahf
jecxz
enter
adcl
or
adc
pop
mov
test
sbb
mov
or
in
adcl
movsb
jp
mov
cmpsb
jnp
enter
test
mov
or
loopne
dec
pop
out
ret
shr
and
xchg
jle
mov
push
adc
adc
f2xm1
idivl
pop
loopne
in
mov
loop
fstl
cld
ds
mov
lock
loop
cmp
lock
mov
leave
sarb
imul
push
lret
fisubl
jge
dec
sub
mov
mov
mov
mov
xchg
adc
movsl
push
sbb
sbb
out
dec
inc
sbb
or
stos
arpl
xchg
loopne
xchg
leave
mov
pop
jno
lds
inc
cmp
insb
mov
ficoms
stos
popf
scas
jg
stc
icebp
xor
push
orl
dec
mov
pop
repnz
out
mov
add
push
xchg
inc
insl
xchg
adc
enter
ret
mov
jmp
lret
jge
out
or
xchg
dec
xorl
adc
enter
mov
add
insl
sub
xor
mov
icebp
aaa
call
pop
call
fucomip
hlt
cmp
fists
iret
int3
sub
stc
repnz
rcrb
mov
adc
lret
cmp
xchg
jo
bound
sbb
clc
imul
inc
in
std
test
and
inc
xchg
xor
cld
lds
arpl
jo
inc
inc
xchg
adc
adc
push
nop
and
mov
jecxz
cmp
mov
aad
mov
add
inc
loope
cwtl
xchg
jle
scas
xchg
test
xchg
test
mov
or
mov
xor
ror
testb
fisubs
xchg
imul
xchg
insl
cmovae
mov
psubusw
call
lods
add
sbbl
add
mov
push
inc
mov
ret
test
mov
push
jne
pop
loope
stc
int
pop
lret
lock
loopne
lcall
iret
xchg
or
push
stos
mov
xor
imul
mov
testb
fs
sbb
fsubrs
inc
in
xlat
xor
test
xchg
or
fucomp
je
push
lret
into
stos
je
mov
sub
adc
subb
jne
inc
pop
lret
stos
xchg
fimull
cli
outsl
sub
enter
dec
fs
sti
add
cmp
xchg
loop
daa
dec
in
push
xlat
fdiv
sbb
or
inc
add
sbb
test
add
inc
stos
sbb
movsb
flds
dec
mov
xor
and
es
repz
dec
xlat
xchg
mov
out
inc
hlt
mov
daa
sub
mov
push
dec
mov
sbb
lahf
mov
lcall
adc
std
mov
jns
into
cmp
repz
pop
and
test
lock
movsb
mov
mov
cwtl
or
js
clc
mov
sbb
test
dec
sub
push
lahf
push
lret
push
jae
lret
sub
mov
sbb
in
push
cmp
sbb
and
or
stos
jge
dec
mov
jbe
cmp
jl
fistl
xchg
jecxz
fwait
or
cmpl
mov
in
mov
leave
loop
in
nop
xchg
sbb
jecxz
mov
cmpsb
call
les
xchg
sub
and
and
add
lcall
enter
ret
mov
jmp
lret
gs
movsb
or
mov
sbb
mov
dec
mov
inc
in
mov
sub
popf
repz
popa
push
mov
shll
jp
aas
in
mov
or
push
jbe
movl
shll
aas
xor
dec
mov
pop
stos
push
insb
aad
sbb
dec
cmpsb
xchg
test
mov
lcall
mov
fbstp
cmpsb
or
jl
or
mov
push
sbb
jne
movsl
or
jp
mov
xchg
sbb
enter
cmpsb
enter
pusha
jle
scas
pop
icebp
leave
es
pop
fists
mov
add
arpl
rclb
jle
or
xchg
sub
and
push
mov
xchg
cmpsb
leave
jmp
jno
ljmp
pop
fsubl
repz
push
and
popa
adcb
pushf
test
fucomi
mov
sbbl
lret
cltd
fimuls
jb
jp
mov
lods
negl
into
adc
sahf
adc
mov
jle
push
iret
sbb
mov
cltd
xor
rcrl
mov
cli
dec
and
iret
aas
shr
test
xchg
jnp
stos
push
insb
aad
sbb
dec
adcb
lcall
mov
fbstp
and
test
xor
xor
push
sbb
test
add
rcl
cwtl
pushf
xchg
sbb
enter
add
cltd
sub
lahf
fisttps
jle
scas
pop
adc
mov
mov
mov
dec
enter
in
test
adc
ret
jne
test
mov
in
sbbl
jp
test
gs
adc
fdivs
mov
or
cltd
enter
rcll
dec
or
jo
sbb
push
mov
mov
cmc
clc
sub
int
mov
sbb
add
xor
push
mov
addr16
cmp
jno
mov
hlt
mov
mov
arpl
sbbl
aad
inc
sbb
jbe
mov
mov
jle
xchg
adc
sbb
dec
lret
sbb
mov
lcall
mov
fbstp
sub
inc
enter
mov
das
or
push
out
mov
sbb
push
dec
mov
xchg
sbb
jecxz
fwait
xchg
in
ret
scas
scas
pop
icebp
leave
in
mov
inc
mov
inc
add
add
and
mov
dec
mov
jb
addr16
adc
jae
xchg
mov
mov
mov
and
rcll
dec
popa
jge
pop
fs
out
cmp
mov
pop
pop
sub
inc
ds
inc
pop
test
orl
rcr
negl
orl
aaa
call
aad
js
pop
dec
pop
dec
push
loope
mov
imul
add
add
mov
xchg
dec
sbb
mov
ret
adc
popa
cmpsl
clc
movl
xchg
pop
lret
xchg
cs
scas
mov
sti
fisubl
fbstp
hlt
in
in
mov
pop
sub
les
xchg
rcl
xchg
sahf
pop
out
pop
mov
ret
mov
fs
lods
loopne
and
or
push
pusha
mov
out
push
adc
mov
in
and
adc
cli
sbb
fwait
jmp
loope
jp
imul
xchg
mov
push
jns
enter
cmpsb
fisttpl
mov
ret
lret
xor
loop
leave
sbb
enter
mov
xchg
stos
out
sbb
dec
adc
sbb
mov
mov
les
xlat
mov
arpl
inc
out
jnp
push
iret
sbb
mov
cltd
xor
std
clc
dec
ss
lret
repz
cli
sbb
xor
test
jecxz
cli
push
dec
pop
dec
iret
or
test
leave
test
mov
mov
cld
mov
sub
xchg
orl
xchg
dec
bound
push
movsl
push
stos
loopne
jb
pop
stos
jne
vsubss
pusha
cmp
aaa
aaa
sbb
pop
inc
mov
xor
and
loop
in
nop
xchg
sbb
mov
pop
or
jns
dec
xchg
lock
inc
mov
cltd
xor
nop
xchg
fisubl
and
std
bound
outsl
or
or
daa
out
leave
sbbb
sbb
mov
or
push
xchg
nop
fwait
mov
fisubs
aam
in
cmc
hlt
imul
adc
pop
jb
movsl
sbb
mov
and
mov
hlt
mov
in
adc
mov
and
mov
sbb
xor
iret
aas
adc
lods
fs
mov
aad
sbb
inc
mov
clc
aaa
push
jmp
push
fldl
test
or
mov
aas
xor
inc
mov
pop
outsb
stos
push
mov
jnp
push
pop
mov
out
mov
data16
scas
mov
lahf
fists
fistpl
nop
xchg
sbb
add
jb
mov
rol
adc
lret
inc
xor
arpl
test
stos
icebp
mov
dec
sbb
inc
pop
dec
mov
psubw
call
sbb
outsb
inc
pushf
call
sub
dec
shlb
mov
fsubp
mov
dec
fisttpll
jl
repz
dec
call
push
push
inc
or
fists
iret
int3
out
aaa
clc
add
mov
sbb
aas
mov
inc
sub
insl
movsl
adc
adc
decl
iret
push
xor
sar
test
in
stos
push
sub
and
rorb
dec
dec
dec
mov
pop
std
in
jmp
test
cmp
sbb
mov
sbb
or
stos
jge
dec
mov
sbbl
push
cli
icebp
xchg
jecxz
fwait
or
mov
popf
loop
mov
in
mov
leave
loop
in
nop
xchg
sbb
or
mov
rorl
mov
pop
xor
mov
pop
cmpsb
fsubs
shll
roll
xchg
frstor
pop
pop
cmpsl
sti
xor
fcomps
idivb
inc
inc
mov
sbb
ficomps
sahf
ret
ljmp
int
aas
lea
ss
mov
ret
fstl
mov
aaa
lret
jecxz
movsl
mov
add
inc
inc
sbb
xchg
test
ret
test
jns
pop
xor
mov
movsb
fisubl
and
push
dec
pop
dec
pop
dec
push
lods
fldt
jmp
addl
dec
adc
stos
loopne
inc
cwtl
pop
stos
jne
test
pop
mov
mov
lea
mov
sbb
lods
inc
pop
lcall
fwait
out
adc
rcll
addb
in
jb
or
sbb
add
xchg
sub
xor
arpl
test
stos
icebp
mov
sub
lret
fsubl
lahf
pop
movsb
in
out
cmp
mov
lea
xchg
or
rcll
int3
inc
ds
inc
pop
pop
int3
mov
in
cwtl
sbbb
cmp
ljmp
aaa
call
leave
imul
inc
xchg
mov
aas
xlat
mov
aaa
stc
repnz
sub
jg
fidivl
add
nop
or
mov
lods
ret
sub
imul
xor
ja
xchg
mov
xor
test
cld
mov
adc
xchg
jecxz
xchg
jns
dec
bound
push
dec
lcall
or
out
enter
sub
lret
xor
xorl
jge
inc
dec
dec
mov
or
out
push
xor
and
push
mov
mov
adc
mov
and
inc
add
int3
in
xchg
dec
scas
call
xchg
cltd
test
cmpsb
jnp
call
mov
inc
inc
mov
ret
add
xchg
fcmovu
repnz
sbb
add
std
mov
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
out
hlt
mov
les
adc
mov
mov
sbb
leave
jl
lret
movsl
ret
insb
test
sahf
sbb
test
push
in
xor
jmp
jp
lret
mov
add
mov
mov
add
xchg
lcall
gs
std
loopne
fistl
loope
push
xor
ficoms
fwait
lods
and
xor
icebp
xor
repnz
inc
add
adc
mov
xchg
mov
xchg
cmc
mov
xor
rolb
mov
cmpsb
xor
xorl
out
clc
ljmp
adc
fisubrs
sbb
xlat
adc
int
ja
ret
sbb
out
add
cmp
shlb
jne
push
adc
mov
jns
mov
cmp
insl
xor
or
cltd
inc
in
xor
mov
negl
sbb
test
push
in
xor
rcll
jmp
jae
add
das
jno
pop
lret
dec
fdivl
push
mov
adc
xor
fucomip
mov
inc
sub
lret
roll
shl
adc
ret
scas
cs
icebp
leave
test
cld
repnz
repnz
es
sbb
mov
mov
and
sbb
and
mov
mul
mov
mov
xchg
xchg
xor
cmpsb
gs
inc
js
cmp
andb
cmpb
je
test
jg
lock
inc
mov
cltd
sahf
push
xor
cs
sbb
lahf
je
decb
xlat
cmp
adc
repnz
mov
jns
into
aas
repz
int3
out
movsl
ret
aaa
lods
cld
aam
adc
mov
and
mov
stc
lcall
ljmp
jp
fst
ljmp
sub
and
jne
std
inc
loop
jae
sbb
mov
push
fcoms
sub
xchg
add
ret
push
add
movsl
xchg
mov
add
cmp
fwait
mov
jecxz
popf
sahf
xchg
fwait
inc
lock
push
popa
xchg
cwtl
add
dec
rorl
dec
and
pop
out
loope
fwait
cmp
call
cmpsb
fidivl
test
gs
xchg
test
ret
jmp
pusha
xchg
sarb
fsubs
loopne
ljmp
xchg
int3
fisubrs
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
pop
dec
mov
add
in
imul
add
add
mov
mov
sbb
mov
ret
or
movl
xchg
clc
mov
pop
xor
fisttps
dec
xchg
jmp
mov
in
mov
pop
sub
les
xchg
rcl
loope
aam
sbb
sub
add
gs
mov
mov
and
popf
adc
or
mov
or
out
push
fmul
xchg
sbb
jecxz
rolb
outsb
rcl
je
and
scas
aam
xor
adc
jp
mov
shrb
movsb
inc
add
xchg
cltd
out
xchg
xchg
mov
shl
hlt
lods
add
sbbl
add
mov
sub
xor
lahf
sarb
mov
out
jns
fiaddl
les
fstl
dec
mov
daa
ljmp
ret
lock
add
adcb
mov
outsl
xor
xor
les
leave
push
jmp
lds
out
stc
sbb
push
lock
mov
fucom
cli
mov
cld
mov
imul
pusha
inc
inc
or
xor
sbb
and
or
dec
xchg
mov
mov
add
jb
lods
ret
sbb
int3
push
push
pushf
rorb
mov
dec
mov
or
out
push
fmul
hlt
icebp
ss
rorb
or
sub
mov
test
push
xchg
adc
shrb
movsb
inc
add
xchg
cltd
out
xchg
pop
inc
imul
shlb
hlt
pushf
add
sbbl
add
mov
push
dec
mov
ret
test
shlb
mov
jne
pop
jmp
mov
shll
jp
aas
in
mov
jnp
mov
adc
ss
test
cmpsl
test
mov
inc
stos
adcb
mov
cmc
add
jns
inc
xchg
mov
mov
test
into
push
sarl
xchg
xchg
fcoms
movsb
xchg
test
cmp
xchg
add
fcmovb
mov
lret
int
mov
pop
jno
push
popa
xchg
adc
adc
mov
fabs
cmp
sti
and
sbb
or
mov
add
sub
mov
push
xchg
adc
or
pop
mov
int
inc
and
movsl
pop
repz
rorb
jecxz
je
or
and
mov
dec
dec
mov
and
loopne
push
negl
iret
adc
sbb
pop
mov
jecxz
xor
push
add
mov
int3
sbbl
imul
xor
dec
out
movsl
lcall
rcrb
mov
movsb
fidivrl
ja
inc
push
aas
xor
cmp
aaa
push
repz
ljmp
inc
cmp
jp
or
push
stos
rcrb
xor
mov
adc
jno
ja
lods
loopne
and
jmp
popf
in
xchg
bnd
lods
das
fbstp
ret
add
add
out
and
push
mov
dec
mov
jmp
aam
xor
adc
mov
mov
xchg
in
cmovae
lods
daa
add
fnsave
push
fnstenv
xor
dec
repnz
dec
dec
mov
cwtl
sahf
insl
push
xchg
test
gs
imul
sbb
lods
div
inc
adc
in
movsl
sti
and
push
adc
mov
jns
mov
add
xor
add
lods
movsb
sbbb
cmpsl
mov
nop
push
lcall
out
stc
jp
mov
ss
fucom
cli
test
cld
mov
aad
cmp
xchg
jecxz
xchg
sbb
fdivl
sub
lcall
or
out
lret
inc
lcall
pusha
fildl
ret
fwait
xchg
xchg
mov
cs
icebp
leave
es
enter
mov
jo
arpl
inc
adc
add
sbb
or
push
or
les
xchg
outsl
iret
arpl
dec
jmp
jb
mov
ret
sti
xor
fsubl
idivl
or
jo
cwtl
pop
dec
push
cs
mov
popf
out
push
adc
xchg
xorb
sub
fwait
pop
add
cmpb
into
popf
sub
cmpl
repz
int3
hlt
mov
add
adc
mov
mov
stc
inc
in
xor
mov
testl
cmpsl
out
aad
sbb
mov
pop
inc
jne
jge
pushf
lds
mov
inc
dec
xchg
pop
fsts
pop
inc
push
nop
sub
mov
lds
or
roll
pusha
mov
sbb
sbb
pop
inc
mov
scas
push
fmul
hlt
jo
arpl
add
and
es
cmpsb
mov
xor
ror
xor
inc
or
xchg
push
pop
and
jnp
enter
montmul
cmpsb
inc
test
inc
mov
or
and
addl
mov
jno
mov
fadd
aas
lock
xchg
in
cmp
mov
or
nop
cmc
sbb
inc
cmp
jbe
mov
sbb
mov
add
sbb
insl
movsl
ret
insb
rorb
imulb
imul
clc
jp
incl
cmpsl
out
cmc
dec
sbb
mov
add
stc
mov
xchg
mov
popf
lret
mov
imul
pop
enter
ja
add
push
jp
pop
sahf
mov
aad
mov
lods
push
bound
scas
ret
out
mov
fdiv
sbb
sbb
inc
push
mov
sub
add
inc
mov
mov
xchg
cmc
mov
adc
ret
pop
sub
into
clc
xor
lea
hlt
js
orb
shrb
mov
inc
inc
adc
stc
gs
insl
repnz
inc
fisttps
icebp
jle
mov
sahf
iret
jp
aas
in
mov
add
jg
loop
cmp
sub
leave
sarb
imul
mov
pop
movsb
fisubl
mov
inc
push
mov
jl
xchg
mov
ss
int
jmp
push
pop
sub
les
xchg
rcll
sub
sub
adc
gs
or
clc
sbb
popf
adc
loopne
mov
dec
jl
mov
out
push
adc
insl
ret
pushf
xchg
adc
sbb
cwtl
adc
dec
and
inc
add
scas
jge
push
popf
push
dec
sbb
call
ret
cltd
enter
rcll
dec
or
in
imul
and
imul
sub
filds
aam
sti
fistl
inc
sahf
sarl
mov
lock
dec
sbb
mov
mov
mov
add
cmp
add
cltd
mov
dec
fsubrl
pop
int
sbb
iret
notl
sbb
test
push
in
dec
pop
dec
je
inc
jbe
iret
push
lret
into
xchg
mov
shrb
mov
sbb
sub
jne
inc
dec
lret
stos
xchg
fimull
fisubrl
pop
sbb
xchg
mov
lods
inc
sbb
scas
popa
or
notb
mov
pop
adc
ja
adc
fmuls
cwtl
add
mov
into
xchg
or
xchg
sbb
pop
rcll
adc
movsl
cli
jg
inc
insl
xchg
imul
mov
xchg
pop
cltd
inc
xchg
mov
in
int
aam
xor
cmpb
je
sbb
push
nop
jmp
mov
popf
out
push
adc
xchg
mov
jne
inc
mov
pop
add
xorb
into
lea
pop
out
mov
jns
ds
mov
loopne
repnz
jbe
test
lock
ss
push
testb
popa
ret
popf
fmull
repnz
shrl
inc
in
xlat
xor
add
xchg
mov
push
lret
into
ret
xchg
push
fcoms
mov
dec
xchg
add
jp
sub
scas
adc
mov
add
outsb
jbe
lods
arpl
pusha
mov
cld
loop
sbb
ret
stc
and
dec
add
or
or
sub
xchg
xchg
cwtl
sarl
pop
and
xor
clc
les
movsl
ret
jb
xor
ja
jbe
xchg
xchg
cltd
inc
jp
adc
ret
adc
aaa
out
leave
cmpb
sbb
aaa
leave
sbb
push
mov
mov
cmc
clc
dec
mov
int
scas
lret
aas
in
fsts
mov
in
int
inc
sahf
rcl
inc
mov
mov
pop
pop
iret
adc
mov
cltd
xor
std
cmp
adc
mov
fs
icebp
mov
dec
or
mov
mov
push
icebp
stos
ljmp
pop
cld
mov
mov
push
cmp
xor
fdivl
sub
in
sub
jecxz
cmp
mov
aad
mov
add
dec
mov
scas
loop
inc
js
jge
xchg
fdiv
sbb
sbb
add
or
inc
mov
sbb
mov
adc
mov
cli
mov
out
sub
cmpsl
ret
mov
xlat
pop
fstps
cwtl
push
add
adc
jns
or
jne
mov
dec
cmp
fdivp
testl
out
mov
imul
imul
sub
push
jmp
out
cltd
adc
enter
add
enter
dec
test
test
pop
xor
mov
movsb
fisubl
stos
sub
lret
push
mov
fidivl
xor
andb
or
dec
xchg
mov
mov
pop
mov
push
into
fmull
or
push
pop
enter
lahf
scas
std
test
push
push
jmp
mov
andl
push
out
aaa
insb
les
dec
out
mov
or
nop
adc
cwtl
inc
insl
xchg
imul
jle
xchg
pop
cltd
inc
js
adc
ret
or
xor
ds
mov
jns
out
imul
mov
push
adc
adc
jae
idivl
pop
loopne
in
mov
addr16
jecxz
sbb
iret
add
xchg
jae
adc
add
inc
cmp
push
sarb
imul
in
push
testl
xchg
pusha
std
fbstp
xchg
in
popf
arpl
add
xchg
dec
bound
push
dec
lcall
nop
test
jns
adc
repnz
mov
dec
xchg
push
push
fwait
lods
and
mov
sbb
pushaw
push
mov
add
or
inc
mov
mov
or
mov
mov
insl
xchg
adc
cli
jae
loopne
sub
ret
mov
jmp
lret
gs
movsb
or
xchg
dec
xorl
sbb
dec
adc
fdivl
dec
sbbb
push
mov
les
aas
mov
arpl
lds
push
dec
adc
clc
std
lcall
and
sub
mov
popf
dec
push
and
iret
icebp
scas
sti
test
adc
add
push
dec
push
lret
mov
xchg
push
pop
fisttpll
test
or
xchg
mov
orl
movsb
test
mov
jbe
sbbb
sbb
add
xor
shll
fwait
inc
loopne
sbb
loop
inc
mov
pop
jb
add
mov
repnz
test
jno
js
dec
adc
xchg
cmc
mov
xchg
adc
xor
cmpsl
ret
mov
jmp
lret
jge
out
arpl
xchg
dec
xorl
adc
inc
pusha
mov
jmp
gs
filds
aam
cmc
fistl
inc
mov
daa
scas
test
imul
sbbl
cltd
repnz
lock
jl
add
inc
xchg
bound
cwtl
or
xchg
loop
les
shrb
push
in
dec
pop
dec
je
pop
cmp
into
fidivs
adc
insb
inc
mov
xchg
test
cmp
xchg
add
ret
push
subb
xchg
mov
add
jp
enter
inc
pusha
mov
cld
loop
cmp
adc
jno
adc
sbb
cwtl
add
pop
adc
mov
rcr
mov
stc
mov
dec
jl
sti
mov
cmp
int
push
sahf
cmpsl
sti
fsubs
lahf
outsl
or
xchg
add
scas
mov
sbbb
pushf
test
ret
lret
cmpl
pop
ja
cmp
adc
or
les
pop
mov
arpl
inc
rcll
sbb
mov
cltd
addb
mov
add
insb
cli
jecxz
jmp
mov
inc
stos
pushf
adc
mov
jb
leave
mov
sbb
int
dec
cmpl
leave
mov
push
cmp
sbb
and
inc
sbb
or
stos
jge
dec
mov
jb
call
mov
mov
push
lcall
fwait
cmp
lahf
adc
pusha
cld
sbb
popa
or
mov
adc
or
and
pushf
mov
xor
adc
leave
xchg
and
mov
cltd
in
cmovae
fisubs
xor
push
and
andl
and
xor
sbb
xlat
adc
ret
in
jle
adc
jle
jne
popa
or
mov
jno
mov
hlt
movsl
ret
aaa
lods
arpl
or
and
mov
ss
cmovl
pushf
cmpb
adc
test
jb
or
dec
sbb
mov
popf
lret
mov
mov
add
jge
pop
dec
outsb
enter
dec
movsl
sbb
pop
mov
aaa
fwait
lods
movb
lret
jns
push
push
fdivl
jmp
popf
ficoms
pop
cmpsb
and
mov
dec
mov
and
clts
mov
shlb
clc
xor
movsl
loopne
mov
xchg
pop
dec
cwtl
in
sarb
repnz
aas
aam
sbb
mov
cmpsb
fdivs
jbe
xchg
cltd
divl
test
add
mov
arpl
fwait
adc
jle
push
inc
mov
cltd
push
add
pop
pop
xchg
lcall
mov
mov
pop
push
into
inc
inc
loopne
xchg
add
or
scas
inc
sbb
or
sbb
aas
and
sbb
jg
xchg
stos
sbb
rcrb
and
sbb
xchg
fstps
repz
shll
outsb
xchg
jl
or
cltd
les
iret
adc
addb
test
lods
outsb
sub
xor
mov
pop
test
add
and
lahf
scas
jns
push
fcomip
sub
and
mov
add
sysenter
or
or
cmp
mov
and
or
xor
imul
cli
xor
lds
jg
movswl
jmp
std
mov
sti
and
xchg
xchg
add
leave
addb
inc
lahf
out
inc
push
push
lret
add
mov
xchg
push
repnz
test
mov
sbb
into
sbb
mov
jo
add
mov
dec
sub
mov
pop
jmp
mov
jne
jne
dec
popf
cmp
cwtl
lret
pop
push
xor
xlat
stos
les
xor
lds
scas
mov
bound
pop
lret
xchg
dec
arpl
orb
jnp
pop
nop
mov
add
jge
inc
cmp
xchg
stos
inc
lcall
adc
lds
cltd
sub
dec
xor
pop
repz
push
mov
loop
xchg
jno
mull
mov
cmp
pop
dec
add
shlb
test
push
mov
mov
pop
inc
cmp
fwait
outsl
mov
clc
mov
jnp
mov
pop
cmp
adc
adc
push
push
dec
xor
mov
arpl
or
inc
popf
ja
adc
pop
mov
loopne
jle
fwait
cmp
repz
sti
pop
push
add
pop
xor
sub
jbe
pop
or
mov
add
hlt
mov
shrl
cwtl
lret
pop
mov
rorb
inc
dec
fistl
test
cmc
xor
lds
lods
mov
bound
into
push
sarl
mov
dec
movsb
mov
mov
mov
andb
mov
mov
pop
test
mov
test
aad
es
fists
mov
lret
jp
pushf
adcl
pop
jl
test
les
jge
dec
push
test
adc
mov
push
adc
xlat
shr
lock
fisttps
into
pop
push
sbbl
shll
or
add
in
data16
imul
out
in
pop
sub
push
repz
mov
add
cwtl
aam
sahf
inc
lock
push
cmp
jl
mov
xor
popf
pusha
cs
es
xchg
mov
inc
in
into
inc
push
fldcw
stos
lea
fistl
lea
mov
int
jno
fildll
cltd
insl
inc
xor
jbe
lods
push
outsl
sbb
jg,pn
shl
push
fsubs
cmpsl
jne
sahf
dec
cmpsb
jb
int
mov
jbe
xchg
xor
fiaddl
scas
mov
dec
mov
ja
pop
xchg
sarb
repz
push
mov
repz
xor
movsl
xchg
pop
test
out
xor
lods
outsl
mov
lods
add
scas
inc
jmp
ss
sub
rcll
add
mov
dec
mov
sbb
add
mov
mull
aam
jae
push
roll
mov
cli
and
jmp
cmp
push
cli
ret
pop
pop
xor
sub
cmp
mov
push
cmc
sub
hlt
mov
cli
jp
fnsave
lods
and
pop
stos
push
pop
cmp
xor
jg
lahf
repz
repnz
stc
jnp
sahf
pop
xchg
iret
icebp
icebp
fsub
jbe
lods
cs
mov
push
test
aam
xor
in
rorl
mov
enter
int3
mov
adc
scas
push
dec
or
js
jle
xor
icebp
leave
test
push
or
scas
add
popa
fsts
mov
dec
cwtl
loopne
aam
inc
addr16
pushf
xor
out
jae
lock
mov
cmpsb
arpl
clc
xor
std
bound
mov
pop
mov
lds
xchg
mov
fsubr
mov
jo
push
aad
inc
mov
push
icebp
mov
inc
mov
add
inc
movsl
ljmp
fstps
out
sub
repnz
adc
js
clc
sub
int
inc
jmp
rcrb
rcrb
jne
mov
in
dec
sub
out
cmc
sub
pop
je
fnstsw
ds
loopne
cmpsb
or
sub
mov
jnp
repnz
aaa
or
and
pop
mov
shlb
dec
arpl
fs
mov
sub
mov
test
lret
cmp
inc
scas
pop
repnz
inc
dec
je
jge
jecxz
sbbb
mov
and
repnz
clc
inc
scas
subl
out
mov
fidivl
addr16
popa
movsl
mov
mov
or
mov
int
addr16
push
in
mov
add
test
bound
jns
ss
sti
insb
pop
mov
dec
mov
xor
mov
cltd
sub
adc
js
add
lods
cmpsb
sbbb
inc
sbb
xlat
arpl
fcomip
push
scas
lods
fisubrl
sbb
push
jne
fisubrs
push
sahf
jge
loopne
sbb
loop
cwtl
push
mov
adc
cmc
scas
leave
fcomps
jne
insl
dec
pop
cltd
enter
lods
mov
test
in
scas
aas
test
insb
scas
in
mov
jmp
pop
mov
fcmovbe
xor
out
das
add
push
cmp
shl
idivl
pushf
dec
cmp
jae
mov
pop
test
roll
loope
sti
cltd
js
cs
stc
mov
xlat
dec
push
pop
shrl
xchg
test
xchg
popa
adc
push
orl
rcll
mov
sub
or
lods
lods
inc
pop
fidivrs
aas
cmp
dec
adc
clc
lds
cld
outsb
ss
jo
or
pushf
sbb
mov
cltd
rcrl
rcrl
les
cmp
test
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
jne
inc
loop
pop
cltd
enter
lret
stos
push
arpl
jmp
ficompl
ficoms
add
add
aad
jno
jae
mov
push
roll
scas
push
repz
imul
lds
dec
or
pop
pop
loopne
xlat
sti
in
orl
jbe
mov
push
outsl
popa
jne
insl
or
sbb
dec
leave
pusha
push
or
cmpsl
dec
loope
mov
lret
cmp
int3
adc
gs
cmpl
push
dec
jnp
ret
arpl
lds
rclb
inc
mov
lret
movsl
xor
adc
add
lock
inc
addb
shll
pop
rcll
dec
loop
push
push
mov
xchg
aam
bound
pop
inc
xchg
arpl
pop
outsb
push
roll
push
push
mov
mov
or
sbb
lods
jge
insb
ss
jnp
xchg
add
movsb
repnz
jo
mov
pop
jb
add
pusha
sbb
std
call
push
xor
je
jg
pushf
repz
lock
pop
mov
lret
in
out
xchg
xor
jae
lods
sti
mov
orb
or
push
xchg
loope
dec
hlt
jle
nop
pop
fs
pusha
pop
or
xor
mov
mov
test
into
lahf
add
push
mov
mov
add
setle
xor
mov
cltd
popf
sbb
mov
popa
push
sbb
fs
push
outsl
pop
mov
fisubrl
jns
sbb
push
mov
add
push
sahf
jg
pusha
jbe
lods
push
outsl
xchg
xchg
test
sbb
in
mov
sub
shrl
push
and
sub
pop
jae
pop
es
push
inc
imul
ss
ja
adc
or
dec
mov
cwtl
cld
inc
ret
jb
fs
push
out
and
gs
fwait
cmp
mov
rclb
mov
stos
cmp
into
arpl
or
mov
mov
test
lret
dec
sbb
jp
addl
mov
shll
rcrl
or
sti
add
lret
push
or
mov
push
jmp
pop
mov
sbb
fistpl
cmp
xor
lea
sub
mov
xchg
das
sbb
outsb
xor
scas
popa
xchg
fnstenv
pop
cmp
jns
loope
lret
aam
in
sahf
jns
loope
pop
pop
mov
push
repnz
push
push
and
xchg
dec
and
jmp
lret
fldcw
sbb
dec
add
inc
clc
repz
popl
imul
sbb
add
or
test
xchg
loopne
push
mov
lret
cmc
shrl
jbe
jp
fisubrs
ljmp
popa
push
jecxz
xorl
add
stc
mov
and
inc
push
inc
cmp
sbb
sahf
dec
in
pop
and
fmull
pop
outsl
cs
xor
add
ret
adc
mov
jmp
push
inc
test
int
sbb
div
or
cwtl
lret
sbb
jmp
ficomps
adc
push
out
mov
dec
push
fcompl
push
cmp
fwait
inc
cs
mov
mov
push
dec
in
clc
popa
mov
pop
enter
insl
dec
xor
pop
push
dec
push
jbe
lods
js
cmpsl
adc
sti
add
inc
mov
leave
pop
cmp
in
xchg
pop
sbb
lret
adc
iret
inc
sbb
or
push
imul
cmp
cwtl
hlt
jle
imul
ja
movsb
cmpsl
sti
clc
popa
jge
outsl
push
mov
es
iret
out
aam
leave
ss
mov
add
mov
dec
adc
adc
test
adc
push
pop
push
test
pop
jl
mov
pop
add
mov
pop
lea
jbe
push
mov
push
decb
lahf
mov
data16
test
pop
inc
mov
mov
fldt
ljmp
movsl
leave
ret
inc
cmp
mov
lds
subb
nop
push
repz
inc
cmp
int
sbb
sub
in
fwait
xchg
pop
inc
pop
movsb
mov
mov
dec
aad
xor
push
leave
inc
pushf
xor
inc
fisubrl
mov
pop
pop
mov
popa
cmp
aas
sbb
lcall
stc
js
pop
cmc
or
fucomp
xchg
mov
out
ret
or
xchg
mov
inc
push
jns
lret
sbb
in
jp
movsl
iret
dec
out
ret
or
sahf
pop
sub
mov
or
or
loope
lahf
fsubr
mov
loope
loopne
cs
fwait
loopne
test
and
xchg
push
sub
pop
call
and
negl
mov
inc
pop
adc
ret
sbb
add
ljmp
cmpsb
cltd
lods
icebp
mov
subl
and
pop
movsb
fisubrl
inc
cmc
sbb
out
push
cld
mov
bound
data16
iret
idivb
scas
pop
repz
mov
cmpsb
dec
mov
gs
mov
mov
xchg
inc
and
jae
imul
jnp
inc
fiaddl
les
lock
jle
pop
xchg
js
inc
int3
sub
movsl
por
fstpt
add
pop
int3
dec
outsb
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
cmpsb
leave
mov
mov
add
jbe
fwait
sub
adc
je
push
popf
mov
sub
pop
mov
sahf
shrl
mov
dec
sbb
adc
fucomip
mov
push
cmpsl
mov
addb
jbe
push
aaa
scas
stc
aaa
sbb
insb
xor
cmc
in
cmp
add
sub
repnz
stos
scas
addr16
push
testb
repz
cmp
dec
pusha
dec
ljmp
xchg
xor
xor
push
jbe
lods
add
fsubl
in
push
and
movsl
push
icebp
inc
add
jge
adc
fwait
xchg
fcoms
pushf
and
or
cmpsl
push
pop
jno
in
mov
js
inc
mov
xor
sub
push
fisttpl
adc
repnz
xchg
out
cmpsb
xor
push
fidivrl
jp
pop
notb
add
cmpsl
ret
add
in
jl
pop
mov
add
inc
imull
sub
inc
test
push
or
dec
fwait
lds
cmp
and
scas
and
lock
cmpsb
jbe
xor
lahf
inc
movsb
push
cmc
cmp
cmc
xchg
insl
pop
dec
push
jmp
mov
mov
loop
jge
mov
push
and
js
adc
and
mov
dec
sbb
lcall
jge
push
bnd
lcall
lret
push
mov
lahf
popf
ljmp
fidivl
pop
outsb
test
add
and
lods
shll
dec
xchg
aam
out
pop
daa
jne
mov
and
into
and
das
cmpsl
repz
adc
mov
fwait
ss
sti
fcmovnu
xchg
stc
stos
push
inc
repz
mov
andl
add
mov
stc
dec
mov
adc
dec
inc
adcl
mov
push
fmulp
mov
ret
addr16
xlat
sbb
xchg
push
and
les
inc
inc
mov
mov
cli
lcall
jle
push
dec
mov
mulb
mov
xchg
ds
mov
pusha
or
cmc
push
sbb
leave
xor
mov
or
stos
mov
sub
mov
xchg
push
insl
aad
dec
cmp
adc
and
aaa
push
lea
lret
pop
adc
inc
aas
adc
dec
inc
outsb
xchg
xor
divb
inc
cs
dec
adc
movb
add
fistl
jge
mov
stos
lods
mov
cmpsb
int3
sub
in
xchg
aas
cmpsb
cs
push
dec
add
jb
rorl
cld
in
and
add
cmpl
fists
mov
call
repz
inc
insl
out
popf
pop
adc
mov
daa
sub
or
inc
mov
je
or
aaa
imul
and
hlt
cwtl
push
jne
sbb
or
xor
in
or
mov
adc
fdiv
adc
lock
push
cmp
pop
lea
jbe
push
mov
mov
push
push
imul
push
mov
insl
aad
in
add
adc
ret
scas
popa
lods
fldt
sahf
xchg
mov
mov
inc
addb
movsb
shll
lock
mov
mov
cs
stos
push
repnz
xchg
mov
push
iret
push
and
push
sbb
fiaddl
stos
pusha
lahf
fistps
inc
shrl
repz
xchg
jne
dec
pop
inc
adc
arpl
pop
stc
add
adc
test
dec
mov
xchg
sub
xor
push
xrelease
daa
mov
jo
lret
mov
mov
int3
dec
pop
mov
int
xchg
mov
shr
inc
lock
dec
pop
or
lret
add
mov
push
mov
mov
jb
push
jb
lahf
inc
movsb
push
sbb
mov
fwait
lahf
pop
stc
and
lock
push
or
jo
cs
mov
inc
ljmp
fwait
mov
fst
dec
sub
and
dec
pop
inc
cmp
jnp
mov
and
movsb
xor
fs
icebp
add
push
cmp
sbb
push
inc
sbb
je
mov
pop
popf
jne
insl
jle
mov
xor
mov
aas
test
insb
scas
in
mov
jmp
pop
mov
push
sub
sbb
repz
xor
add
add
pop
xchg
mov
xlat
sti
fs
xchg
mov
jnp
sahf
sub
aaa
shll
pushl
mov
test
xchg
mov
inc
adc
inc
aas
inc
orl
sbb
add
mov
mull
aam
jae
push
roll
mov
cli
cmp
mov
hlt
cmp
push
cli
ret
pop
pop
xor
sub
cmp
mov
push
cmc
sub
mov
mov
cli
jp
fnsave
movsb
fsubrl
stos
shl
xlat
jl
push
xor
cmp
push
ret
mov
mov
fdivp
adc
cmpsb
sub
sub
add
dec
shlb
dec
lret
sub
mov
and
int
jae
cmp
pop
or
pop
and
jbe
out
jno
mov
bnd
mov
out
sar
pop
pop
pusha
sub
rorl
mov
jecxz
inc
mov
es
mov
shlb
adc
inc
lods
xlat
xchg
mov
outsb
or
daa
loopne
js
xlat
mul
jle
mov
jecxz
mov
add
dec
into
lds
movsb
mov
or
ret
nop
and
push
or
mov
les
sbb
cmp
je
clc
jb
mov
xchg
jns
lret
or
in
and
xor
lock
imul
jbe
push
mov
das
dec
push
rol
into
push
mov
cmpsb
loop
cld
xchg
test
icebp
mov
pop
push
add
dec
mov
jno
push
popf
movb
adc
lret
lcall
ficoml
lds
rcrl
or
jl
rorl
cmpsb
lods
adcl
sub
ret
mov
fcmovnu
push
mov
movsb
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
adc
dec
aam
stc
mov
xchg
inc
mov
movsb
inc
ret
dec
push
pop
sbb
jo
shrl
mov
cwtl
inc
data16
adc
add
inc
jl
lock
sbb
mov
xor
jecxz
enter
xchg
insl
divb
aaa
call
inc
lods
pushl
add
repz
fists
rolb
rcrb
hlt
scas
lock
and
fs
icebp
mov
movsb
lds
nop
lds
clc
mov
loop
dec
sub
scas
movl
dec
xor
icebp
icebp
sbb
dec
mov
subl
push
idivb
mov
fstpt
imul
lea
lret
js
sbb
fadd
rorl
dec
subb
inc
mov
adc
adc
mov
jmp
cmc
fdivrs
stos
dec
sub
pushf
int
bound
xchg
std
fwait
mov
mov
js
inc
loopne
rcll
or
and
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
out
les
inc
cmp
or
imul
jecxz
add
mov
cmc
lret
in
pop
add
ljmp
xchg
leave
faddl
rcll
in
outsl
in
push
dec
and
xor
dec
movsl
arpl
mov
vmovsd
cmp
lods
or
add
dec
dec
push
jg
shlb
dec
xchg
xchg
xlat
and
inc
movsb
xchg
xor
mov
and
rcr
dec
cmp
mov
stc
and
cli
add
mov
push
repz
xchg
sbb
pop
pushf
dec
cmp
pop
inc
std
inc
les
and
gs
fwait
pop
xchg
sti
cmp
addr16
xor
in
mov
mov
adc
pop
mov
jmp
inc
pop
sbb
pop
or
push
pop
push
test
test
in
xor
ret
push
and
rclb
inc
mov
sub
mov
cltd
mov
insl
aad
insl
and
adc
and
mov
mov
aas
das
repz
sub
scas
dec
inc
mov
cmp
outsl
mov
and
push
mov
mov
in
in
scas
push
mov
or
arpl
dec
add
fsubrs
ret
jae
frstor
xchg
test
in
push
adcb
cmpsl
jns
clc
pop
sub
dec
stc
arpl
or
cmp
lret
adc
sub
dec
lret
fidivrs
jge
imul
fsubl
outsw
sbb
xchg
xor
popf
mov
rep
test
sbb
cmpsl
mov
ja
fnstcw
shrb
jecxz
mov
shr
mov
lods
fstpl
mov
fdivp
inc
fs
push
lahf
jp
popa
mov
mov
jbe
jb
hlt
mov
cli
hlt
pop
mov
lret
imul
xor
sbbb
or
shll
xchg
mov
lcall
imul
mov
xor
xor
hlt
pop
roll
add
dec
in
xchg
mov
imul
loop
lcall
cld
sbb
dec
push
sbb
lods
sahf
int3
scas
hlt
mov
jbe
mov
cld
loop
push
loopne
rol
mov
add
add
lods
mov
xchg
mov
pop
xchg
inc
add
mov
add
push
lret
fnsave
sbb
out
js
mov
mov
enter
push
xchg
daa
adc
xchg
aas
dec
jl
mov
cmp
jne
cmc
sbb
fsts
ljmp
and
ret
mov
mov
mov
jns
adc
mov
pop
lcall
addr16
add
dec
push
sbb
jne
xlat
in
gs
pop
mov
push
lret
adc
lock
xchg
nop
rcll
js
out
mov
adc
shlb
loope
imul
inc
sbb
mov
pop
xor
enter
scas
std
pop
jnp
js
in
mov
fwait
add
mov
inc
and
mov
sti
dec
roll
pop
sub
inc
mov
mov
test
adc
fwait
movsb
jno
mov
pop
rol
jb
leave
movsb
cmovae
ja
jg
add
sti
gs
cltd
push
sbb
lock
lds
decl
fsubrl
jge
negl
fbld
stc
sub
out
mov
lock
dec
pop
out
pop
loop
mov
je
xchg
iret
lds
cmp
xor
test
push
adc
stos
rcrl
pop
in
mov
jne
mov
div
xchg
mov
dec
add
cmp
jae
scas
jecxz
fimull
cwtl
stc
stos
out
jmp
push
fidivs
jge
or
les
lahf
mov
dec
cmp
call
cli
push
mov
jge
sbb
sbb
scas
aam
repnz
mov
mov
add
fwait
add
xor
sbb
mov
lahf
cmpsb
jo
mov
jge
jg
orl
mov
sbb
ror
mov
insl
mov
cltd
sahf
insl
mov
mov
call
jne
movsl
cmc
subl
dec
pop
pop
mov
jecxz
inc
xchg
stc
sbb
out
mov
mov
sbb
fisttpll
cmpsb
sub
divb
fst
leave
adc
js
push
adc
fsubp
loop
scas
rcrl
pop
call
adc
jecxz
test
add
add
jecxz
mov
xchg
stos
pop
or
jl
arpl
lahf
lds
pop
lret
mov
push
pusha
fidivl
insl
mov
pop
inc
xlat
popf
or
and
adc
add
or
cs
sti
pop
cli
test
push
and
lds
fsubs
gs
jmp
lea
dec
ret
inc
mov
rclb
and
mov
mov
mov
out
jnp
pop
pop
mov
jmp
sbb
divl
orl
hlt
lcall
mov
clc
clc
and
cmc
lret
test
scas
xor
enter
sub
cmp
xchg
sti
sbb
ljmp
nop
or
jne
pop
dec
jl
cli
mov
jne
in
push
mov
fbstp
lret
rcrb
add
lret
xchg
iret
xchg
mov
aam
push
jo
repz
test
adc
mov
mov
shll
mov
or
push
cmp
call
in
jo
insb
jo
cmp
xor
je
notl
or
pop
dec
movsl
sub
xor
or
sub
mov
movsl
clc
sbb
enter
test
hlt
mov
sub
jne
out
pop
xorl
cmp
mov
repnz
aad
cmpsl
mov
popf
divl
inc
dec
sahf
rorl
rclb
test
jae
or
repz
jge
negb
adc
jo
mov
sub
gs
iret
ja
leave
nop
ds
cmp
xchg
imul
push
sahf
std
push
pop
pop
lods
jb
mov
pop
sbb
mov
frstor
imul
in
cmpsl
icebp
or
and
inc
sbbl
or
sub
shlb
in
mov
and
add
push
dec
scas
xor
cld
loop
add
or
shlb
add
ret
mov
push
or
aam
mov
or
mov
dec
cmp
fsubl
cmp
iret
cltd
add
in
loopne
pushl
stos
adc
mov
cmpl
mov
inc
aas
sbb
mov
mov
xor
stos
mov
lods
pushl
add
fdivp
pop
leave
aam
dec
push
cmp
mov
dec
pop
adc
sbb
sbb
sbb
daa
mov
insl
testb
mov
decb
mov
stos
inc
xchg
pop
cltd
lcall
frstor
jns
cli
mov
push
pop
stc
mov
cmpsb
sbb
in
nop
add
ja
jp
or
negl
push
and
inc
add
lret
xchg
pop
mov
mov
adc
lea
xor
mov
loop
mov
and
inc
orl
or
jmp
fmuls
cwtl
pop
mov
adc
into
mov
cmp
push
fmull
cmp
jb
sbb
push
negb
mov
adc
sbb
in
mov
aaa
xchg
jmp
sbb
test
mov
jmp
push
mov
pop
loopne
cli
lods
xchg
mov
sbbb
scas
mov
mov
dec
pop
adc
mov
sbb
adc
adc
xor
pushf
insb
cmp
add
inc
ja
and
lret
xchg
mov
mov
andl
cwtl
inc
add
test
pop
lahf
sbb
shlb
fisubl
stos
jbe
jns
sbb
jbe
rcl
sub
fnsave
sbb
push
sbb
pop
push
mov
inc
orl
add
or
adc
dec
add
mov
and
int
pop
mov
inc
fisubl
push
lret
mov
adc
xchg
pop
cmovae
pushf
or
mov
xchg
cwtl
push
mov
dec
in
negl
std
sub
aaa
das
fmulp
sahf
xchg
std
aaa
cmp
repz
pop
cmp
mov
inc
mov
fcomps
stc
ret
add
test
scas
cmp
jns
int
imul
into
pop
xor
test
sbb
xlat
xlat
addr16
dec
lahf
push
fwait
push
pushf
cld
sahf
sbb
cld
mov
into
mov
mov
test
add
push
jge
in
add
sub
adc
movsl
mov
jg
fistpll
push
imul
mov
lret
jae
inc
sub
neg
bnd
inc
inc
add
xchg
jg
mov
inc
les
pop
cmp
sbb
iret
mov
mov
loop
ret
out
xchg
inc
add
adc
mov
pop
fxch
push
call
jle
and
xor
cmc
fstpl
pop
dec
gs
mov
mov
dec
mov
imul
mov
call
pop
inc
fnstcw
in
mov
mov
fistps
xorl
jle
lret
sbb
add
xchg
mov
inc
fidivrs
je
jp
cmp
lret
push
or
ja
call
iret
fbstp
pop
lods
ficomps
jne
test
dec
cmp
xor
or
push
stos
inc
add
xchg
cmp
mov
arpl
fsubs
lods
jl
adc
arpl
inc
scas
je
mov
loope
subb
mov
ret
sbbl
js
test
dec
shlb
xor
gs
inc
add
add
push
ret
adc
out
fwait
inc
pop
mov
mov
sbb
mov
mov
mov
shlb
jmp
sti
adc
pop
mov
mov
rcr
jno
hlt
lcall
mov
clc
daa
insl
out
lahf
pop
stc
adc
lock
xor
xchg
adc
push
lcall
insl
movsl
aam
sbb
nop
adc
mov
aaa
stos
and
xor
arpl
xchg
fbstp
leave
add
dec
push
xor
clc
cmpsl
pop
or
dec
sbb
jnp
cmpsl
loopne
sbb
cwtl
push
sub
mov
lock
les
or
pop
std
mov
adc
test
push
cmp
and
scas
jge
push
js
pop
pusha
pusha
inc
pop
in
call
jo
xchg
in
sub
xor
add
push
xor
enter
mov
orb
cmpsl
lock
imul
fwait
inc
push
lea
sbb
int3
xchg
push
mov
inc
or
xor
mov
sbb
dec
test
out
ret
xor
outsb
mov
std
mov
adc
inc
pop
mov
repz
jns
negb
out
mov
push
mov
mov
jge
int3
sbb
sbb
hlt
mov
mov
mov
lret
adc
jbe
mov
ljmp
fldenv
mov
add
mov
out
cmpsl
pop
or
cmp
inc
xlat
imul
imul
mov
insl
fcompl
push
jno
movsb
jne
dec
push
xchg
mov
mov
inc
add
in
sbb
shlb
add
sti
mov
movsb
sub
stos
mov
pop
xchg
jmp
push
xchg
push
lods
lods
inc
sbb
bound
pop
xchg
sbb
call
sub
enter
mov
pop
test
jge
lea
andl
adc
adc
lahf
jmp
sbb
jle
jecxz
mov
sbb
leave
cwtl
mov
dec
dec
loopne
cli
mov
in
jmp
lahf
or
mov
adc
sbb
or
mov
pop
lock
int
xchg
je
clc
mov
xor
lret
adc
sbb
lret
inc
mov
rcrb
cmp
stc
mov
mov
adc
push
or
enter
jmp
jmp
sbb
pushf
rcrb
scas
in
sbb
scas
insb
sahf
mov
xor
leave
test
adc
rclb
scas
and
sub
xor
movsb
cmp
stos
mov
adc
insl
inc
pop
fs
int3
mov
movsb
jno
sub
insl
lahf
in
push
mov
fnsave
cli
les
jb
mov
popf
cmp
or
daa
hlt
stos
es
repnz
or
mov
xchg
jmp
sbb
jle
jae
adc
xchg
mov
mov
or
xor
jmp
in
push
insl
lock
out
in
sub
mov
pop
dec
imul
cli
popf
pushf
xchg
insb
idiv
mov
sbb
leave
test
mov
pop
inc
cld
mov
mov
cmc
cmc
fcmovne
pop
subl
jge
or
add
inc
imul
scas
mov
ret
in
inc
stos
jbe
fisubl
sbb
inc
pushf
ror
jmp
dec
sbb
mov
fdiv
dec
cmp
out
clc
enter
imul
or
les
jb
fs
xchg
cmp
mov
sub
and
fs
cmp
fisubl
inc
cmc
popa
inc
fldenv
fdivrl
test
jge
rcrl
subb
jb
imul
pushf
ds
das
lock
loope
test
push
movsl
repz
dec
add
push
push
iret
adc
mov
jno
add
stos
fstps
or
pop
nop
repnz
inc
xchg
adcb
in
mov
push
lea
push
mov
jno
mov
fwait
push
xchg
cld
sahf
sbb
cld
mov
sbb
mov
popf
push
jns
xchg
test
add
das
cmp
cli
scas
enter
cmp
int3
adc
inc
cmp
fidivs
push
xor
inc
sub
leave
fdiv
fcmovne
xor
inc
push
add
aaa
xchg
dec
dec
sbb
call
call
mov
mov
gs
inc
add
adc
mov
adc
and
aam
fisubs
xor
push
lret
dec
pop
out
and
loop
jg
mov
sbb
add
push
dec
pop
pop
jb
push
mov
dec
call
jne
mov
js
mov
mov
jno
add
or
enter
rol
adc
push
aas
add
fmull
sbb
mov
lret
lahf
mov
dec
out
test
aaa
stos
xor
dec
push
fimuls
jns
mov
mov
lahf
popf
push
imul
jg
fcmovb
sbb
cwtl
test
les
adc
cmpsl
jl
ljmp
add
adc
test
jnp
lods
mov
add
cmp
add
inc
sbb
or
fwait
lods
dec
dec
add
pop
xor
or
outsb
cmp
inc
fsubs
sub
int3
mov
xor
xchg
mov
mov
mov
bound
gs
sbb
cltd
rolb
mov
shlb
test
xor
out
jle
cmp
mov
rcll
mov
adc
fsubp
imul
cmc
lret
xchg
fs
sti
je
xchg
adc
push
aas
add
leave
adc
ret
imul
mov
pop
mov
add
mov
sar
shll
mov
adc
dec
rcrl
mov
jnp
stos
loopne
sbb
mov
imull
pop
ja
clc
rcrl
lods
cmc
xor
push
and
es
inc
movl
enter
js
inc
test
daa
sub
xchg
dec
add
lret
mov
push
aas
inc
pop
xchg
inc
add
dec
popf
push
sbb
scas
pop
push
and
cmp
enter
and
int3
adc
outsl
inc
mov
pop
sub
sbb
cmpsl
mov
ja
aad
shrb
mov
leave
add
ljmp
fstpl
mov
fdivp
inc
sub
dec
push
lahf
cmp
sti
and
xor
jb
divb
mov
lret
imul
xor
inc
sbb
nop
xchg
sahf
out
shll
test
mov
lcall
imul
dec
data16
xor
xor
hlt
pop
mov
pop
dec
out
xchg
mov
imul
loop
lcall
cld
sbb
dec
push
sbb
mov
leave
je
mov
cld
loop
into
vprotw
lret
dec
and
add
lods
mov
dec
xchg
mov
pop
xchg
inc
add
mov
xor
push
or
sbb
out
js
xor
mov
enter
push
jecxz
adc
xchg
aas
dec
jg
mov
call
jne
cmc
sbb
fxtract
push
ljmp
and
or
mov
mov
popa
pop
adc
data16
dec
test
ret
aad
std
addr16
xor
dec
push
pop
nop
mov
xlat
in
gs
movswl
cltd
inc
push
lret
adc
lock
inc
jmp
and
mov
jo
test
out
jnp
inc
shlb
dec
roll
notl
fwait
mov
pop
xor
enter
scas
std
pop
ja
js
aaa
ffree
fwait
add
mov
inc
and
mov
dec
stos
roll
pop
sub
inc
mov
mov
push
dec
insl
lahf
inc
pop
lret
fnsave
leave
cmovae
js
jg
ret
dec
push
xchg
sti
gs
cwtl
push
sub
mov
fdivs
movsb
imul
sub
adc
mov
mov
ret
sarl
negl
fbld
stc
or
out
mov
lock
js
repnz
je
xchg
iret
lds
and
xor
sbb
mov
shlb
rcrl
pop
in
mov
mov
mov
div
test
jp
les
pop
or
cmp
jae
xchg
ret
adc
dec
test
js
stos
out
pop
stc
xor
fidivs
jge
dec
add
sbb
repnz
cmp
call
cli
push
mov
or
sbb
lock
aam
repnz
mov
mov
add
popa
scas
lods
ret
mov
xor
test
and
mov
xchg
lahf
cmpsb
jo
or
jge
jg
lea
imul
or
out
jnp
ret
mov
insl
mov
cltd
sahf
insl
mov
gs
inc
call
jne
movsl
cmc
icebp
outsl
push
iret
xchg
mov
test
ret
inc
lahf
stc
sbb
out
test
repnz
sbb
dec
fsubl
mov
hlt
fisubl
test
push
adc
fisubrs
lcall
stos
xor
lret
inc
inc
test
add
or
jecxz
jle
lds
sub
adc
jl
arpl
scas
in
pop
lret
adc
pusha
fidivl
jecxz
jmp
pop
inc
xlat
popf
or
and
adc
add
fsubrl
imulb
xor
mov
movsl
icebp
xor
gs
jmp
lea
scas
ret
inc
mov
rclb
sar
and
mov
sub
fadds
out
jnp
inc
int3
pop
mov
jmp
mov
cwtl
divl
orl
hlt
lcall
mov
clc
clc
and
lret
test
mov
jle
and
cmpsl
sub
add
fsubl
mov
sbb
mov
mov
repnz
mov
jne
in
push
mov
xchg
pop
dec
add
mov
add
or
aam
into
jo
repz
test
adc
cmpb
mov
xchg
xor
mov
or
push
cmp
call
in
and
push
aas
in
sub
push
or
pop
dec
test
xchg
or
sub
fsubs
sub
mov
sbb
mov
test
jne
out
pop
sbb
ds
jg
mov
ficomps
sub
mov
lahf
clc
cmpsl
mov
popf
divl
dec
inc
sahf
rorl
xchg
adc
test
jae
or
repz
jge
fwait
lahf
in
stc
enter
arpl
orl
or
fbstp
leave
nop
ds
xor
sbb
fs
adc
test
mov
jns
inc
and
stc
inc
jb
dec
mov
lret
paddd
xor
dec
dec
fwait
push
daa
je
sbb
xchg
int
jmp
mov
scas
push
adc
fucom
stos
add
jmp
scas
aas
test
insb
scas
in
mov
out
jno
sbb
jno
arpl
inc
fstl
push
fprem1
jmp
cmp
shl
idivl
pushf
dec
ds
jae
pushf
nop
pop
mov
shl
inc
lods
push
jae
fidivrs
popf
xor
fwait
loop
vaddsubps
sbbl
sub
imul
jg
clc
pop
mov
es
inc
mov
adc
and
aas
shl
repz
push
ret
lods
movl
in
cmp
test
out
cmp
les
aad
stos
das
lret
jno
pop
faddl
xchg
mov
sbb
fbstp
push
push
test
pop
sahf
in
cmp
sub
aaa
jns
outsb
cmpsb
jne
xor
xor
jbe
pop
xchg
nop
mov
sbb
pop
add
push
std
fsubrl
mov
push
push
dec
xlat
jnp
xchg
inc
inc
sbb
inc
cltd
lds
jl
call
je
mov
negl
jne
subl
sub
xchg
xchg
pop
inc
mov
dec
les
xchg
cmc
mov
addl
mov
pop
xchg
cltd
test
cmovae
mov
cwtl
mov
mov
jle
inc
push
shlb
js
dec
dec
fstpl
je
insb
scas
lcall
fstl
push
adc
mov
das
mov
jmp
inc
insl
mov
mov
adc
push
jmp
jle
sbb
into
xchg
fwait
cmp
lock
lods
hlt
addr16
sbb
outsl
loop
gs
sahf
xchg
cmpsl
pop
sub
adc
clc
pushl
insl
mov
add
andl
dec
mov
jnp
push
or
jl
arpl
mov
adc
adc
mov
imul
loope
jg
enter
cwtl
inc
shlb
push
arpl
dec
mov
and
adc
mov
inc
insl
in
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
dec
dec
adc
mov
bound
lret
arpl
call
int
push
pop
adc
pop
popf
subl
push
cmp
and
cwtl
mov
sub
mov
mov
push
cmpsb
shlb
mov
mov
mov
mov
in
fs
push
lods
cli
fwait
adc
aaa
jl
jmp
add
add
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
pop
inc
aaa
push
jae
mov
jno
jb
cmp
dec
adc
les
pushf
jne
jle
fimuls
inc
shlb
test
cs
dec
cmp
or
dec
cli
je
xchg
sub
jo
pop
sub
je
popf
popa
scas
push
movl
in
jle
fistpll
enter
inc
data16
add
add
adc
adc
rclb
mov
adc
jg
xchg
push
mov
and
test
ds
in
xchg
jns
push
xchg
xor
insl
push
sbb
jnp
fimull
dec
xchg
addr16
test
popf
pushf
inc
stos
xchg
adc
sub
pop
icebp
cmpsl
aaa
push
mov
leave
xor
fildll
jae
fcmovne
dec
inc
pop
adc
imul
xor
fsubl
ja
in
xor
sub
mov
sub
pop
sahf
xor
das
mov
in
mov
jo
sub
les
jno
insb
loop
mov
xor
scas
add
ret
mov
adc
mov
inc
jo
rorl
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
cmpsb
leave
mov
mov
add
jbe
fwait
sub
adc
je
push
popf
mov
sub
pop
leave
cmp
lea
clc
movsl
dec
sbb
adc
fucomip
mov
push
test
push
aas
mov
sub
mov
bound
addr16
inc
mov
data16
jno
dec
ficomps
pop
movsl
je
push
les
push
int
inc
jno
pop
cmp
into
and
adc
inc
ds
movsb
ret
lret
bound
or
and
pop
mov
sbb
xchg
add
rcrb
movsb
ret
push
popa
fsts
movsl
fstl
cld
test
mov
dec
shll
pop
push
fsubrs
scas
jg
fstps
popa
sbb
in
mov
adc
nop
fwait
pop
test
dec
mov
fnstenv
pop
repnz
repnz
scas
cmp
jae
mov
fstl
sbb
loope
sarb
add
inc
notl
add
pushf
inc
test
outsb
lock
or
ret
inc
dec
adc
mov
lahf
mov
and
test
mov
js
sti
repz
seta
xor
lock
inc
adc
pop
adc
sbb
rorb
cltd
ret
push
jnp
fistl
lret
lds
push
jns
xchg
cli
mov
cmp
or
ret
mov
aaa
jle
xchg
je
mov
sbb
dec
bound
xchg
add
lcall
inc
and
out
test
mov
adc
test
mov
pop
int
rcl
in
jo
sbb
xchg
int3
jo
and
mov
adc
cwtl
scas
push
push
orl
hlt
cmc
rcrb
insl
xchg
inc
adc
adc
rcrb
dec
loopne
out
jns
fld1
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
adc
bound
lods
sub
adc
pop
popf
xchg
mov
or
mov
push
push
decb
aad
push
sub
push
mov
insl
aad
insl
int3
inc
push
cltd
dec
xlat
and
fxtract
dec
push
jnp
dec
pop
insb
cmc
test
lret
and
mov
push
cmp
sbb
outsb
push
inc
sbb
rol
cwtl
mov
daa
cmp
or
mov
adc
loopne
sbb
mov
insl
stc
inc
xor
loop
loopne
jl
scas
adc
out
jns,pt
push
stc
or
or
loope
jnp
in
lcall
shlb
mov
enter
jb
or
cmp
in
cmp
into
mov
repz
loopne
hlt
mov
xchg
mov
add
orl
sub
push
adc
pop
stos
fsubrs
nop
mov
jns
test
mov
mov
ljmp
ficomps
jnp
pushf
sbb
mov
push
shll
mov
adc
imul
cmp
hlt
movsl
push
jno
pop
cmp
insl
jno
cltd
push
xlat
push
sahf
jns
jmp
add
inc
xchg
ja
in
jg,pn
xchg
push
and
test
sub
outsl
xchg
stos
aam
xor
adc
roll
push
jb
sahf
pop
and
xchg
xchg
mov
push
inc
jg
cmp
enter
leave
inc
mov
cmc
xor
sbb
in
mov
push
mov
lret
cmc
out
imul
xchg
mov
aas
xlat
mul
jle
mov
out
orb
xlat
das
cmp
test
ss
or
ret
jnp
xor
or
inc
shll
daa
push
js
test
in
and
dec
int
lds
lahf
scas
hlt
ja
scas
in
test
jmp
shll
sub
lea
xchg
add
lds
sbb
gs
sub
das
mov
stos
xchg
push
inc
push
push
insl
inc
push
pop
inc
jb
dec
inc
add
insb
cmp
fsubrp
les
xchg
rcrb
pushf
xor
imul
mov
test
pop
pop
aam
add
push
adc
push
mov
jae
adc
cwtl
fmull
mov
and
rcr
dec
cmp
mov
stc
and
cli
add
mov
push
repz
xchg
sbb
dec
mov
dec
cmp
pop
inc
std
inc
les
and
gs
fwait
pop
xchg
popf
cmp
daa
outsl
cld
test
jno
sbb
fidivl
mov
mov
lcall
jo
or
adc
xbegin
sub
jmp
pusha
add
call
cli
mov
inc
xchg
enter
lock
test
iret
imul
pop
xor
sbb
cmpb
lahf
lcall
repnz
imul
pop
fucom
cli
mov
mov
in
bound
ds
data16
or
cmp
mov
push
mov
cmc
repz
xchg
push
es
test
sub
aad
and
ljmp
cmp
das
push
roll
scas
inc
repz
cmpb
mov
jo
inc
int
inc
xor
jae
test
aad
pop
test
and
int3
divl
fidivrs
inc
arpl
inc
inc
add
sbb
dec
jl
loope
adc
ret
xchg
arpl
adc
pop
sbbl
arpl
mov
mov
fisubrl
xchg
decb
jae
adc
fwait
lret
jecxz
xor
int3
pop
sub
xor
mov
mov
push
fs
arpl
xor
dec
and
inc
inc
movsl
in
mov
jecxz
in
dec
push
inc
fbstp
pop
sahf
ficomps
add
jp
les
adc
pop
xchg
cwtl
inc
in
stos
jge
pop
sbb
sbb
adc
lds
aam
and
pop
fldt
jp
fbstp
pop
idivb
cmpsl
sub
sub
push
stos
cmp
repz
push
xchg
lods
out
cmp
cwtl
push
scas
xor
and
adc
cmpsl
mov
jg
repz
mov
dec
xor
mov
je
mov
pop
add
xor
xchg
cltd
imul
dec
mov
shl
jae
sti
fnsave
push
adc
inc
mov
sbb
inc
and
mov
jo
xor
mov
inc
mov
and
insb
jne
lds
xor
lds
and
jb
mov
out
inc
test
std
pusha
and
fsubr
cmpsl
cmpl
popa
fidivrs
imul
sbb
shrb
test
or
cmp
movsl
sub
arpl
ret
in
cmpsb
xchg
fistl
outsl
clc
int3
fnsave
lahf
jb
push
hlt
push
ljmp
popf
addl
xchg
sub
add
ret
xchg
inc
test
daa
dec
out
jno
pop
fisttpl
dec
cltd
leave
mov
mov
lds
aas
dec
orl
rcll
mov
sub
or
lods
lods
inc
pop
mov
mov
cmp
dec
adc
clc
lds
cld
outsb
ss
jo
or
pushf
sbb
mov
cltd
xchg
and
mov
test
rorb
ss
xchg
scas
lods
pop
adc
mov
cmp
adc
fwait
push
push
movsb
ret
xor
dec
inc
jae
les
imul
inc
repnz
mov
cwtl
push
mov
int
or
inc
pushf
rcrb
scas
les
sbb
sbb
enter
int
and
fcmovbe
cmp
js
sbb
cmp
and
xor
xchg
mov
mov
push
gs
lock
call
jmp
inc
xor
into
add
shll
or
mov
decb
shrb
push
lret
lods
je
or
int
push
dec
in
or
fldcw
in
mov
mov
leave
adc
sub
lea
jg
or
and
js
pop
adc
mov
movsb
pop
lods
inc
fs
add
sbb
clc
jl
push
pop
lret
mov
lret
sar
xor
pop
jp
push
dec
pop
xchg
test
inc
push
shrl
dec
push
and
sti
mov
in
mov
push
mov
mov
scas
outsl
mov
jge
adc
push
adc
lock
mul
jns,pt
outsb
or
add
xor
sub
dec
mov
shll
and
mov
adc
mov
mov
mov
pop
inc
fisttpl
jo
gs
pop
cmp
mov
xor
dec
mov
sbb
arpl
shl
mov
pop
dec
inc
dec
rcrb
pop
jno
aad
pop
addr16
jo
ljmp
loopne,pt
iret
jl
in
xchg
pop
rcrl
mov
sub
out
mov
cmp
fnstenv
int
js
rcrb
sub
movsb
add
stos
push
insb
ror
sbb
inc
lahf
mov
lret
fldl
add
lods
mov
inc
or
cmpsl
add
sti
push
adc
mov
jno
movsl
inc
pushf
mov
test
mov
jno
jo
push
push
or
repnz
push
imul
pop
rcl
ss
fdivrp
sbb
je
and
je
add
leave
js
js
dec
sub
jne
test
mov
dec
lcall
dec
inc
popf
push
sbb
iret
subl
pop
fdivrs
gs
push
adc
aam
in
loop
je
sbb
sbb
movsb
xor
mov
js
push
mov
repz
inc
lahf
pop
cltd
dec
call
xor
sub
xor
jmp
fistpl
leave
xor
mov
roll
jmp
add
xchg
stc
push
xchg
movsb
mov
pushf
dec
ficomps
adc
and
lods
sbb
cmpsl
pop
sub
adc
lcall
loop
lret
icebp
add
add
add
inc
inc
out
lcall
mov
lcall
and
dec
fsubrl
mov
lds
jle
mov
cld
stc
inc
es
or
xlat
cmp
mov
inc
icebp
or
inc
xchg
adc
dec
and
xchg
gs
sti
adc
pop
jg
test
arpl
pop
xlat
lcall
lea
aas
cmpl
loope
movsl
or
daa
mov
xor
test
mov
lds
push
mov
nop
add
cld
dec
je
repz
test
push
nop
jl
fbstp
hlt
sbb
push
ret
fldenv
xlat
sbb
xor
dec
popl
mov
or
pop
into
push
shr
jae
inc
scas
dec
pop
push
fistl
addb
bnd
vpandn
mov
jae
sub
pop
les
rcr
xchg
popf
daa
pop
dec
les
ljmp
fisubl
pop
add
sar
cmp
add
cmp
jle
jbe
lods
inc
in
inc
in
sbb
js
jle
xor
ss
aad
cwtl
adc
add
dec
iret
cld
and
mov
jmp
pop
adc
xor
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
push
rcll
dec
adc
pop
sbb
pop
inc
loopne
int
mov
lods
push
lsl
lahf
jmp
sbb
push
fists
add
inc
mov
mov
mov
fildl
je
mov
xor
dec
sbb
rcrb
sub
sub
stos
push
insb
sarl
incl
stc
arpl
sub
mov
dec
push
lret
pop
xor
test
or
and
mov
push
enter
xchg
subl
imul
test
shr
pop
rcll
popa
aaa
out
jno
test
ret
jle
dec
das
mov
shlb
fisubs
or
xor
imul
adc
iret
subl
pop
fdivrs
gs
push
adc
aam
aam
loop
je
sbb
sbb
movsb
xor
mov
js
push
mov
repz
inc
lahf
fistpl
cmp
xor
sub
sub
push
ss
addb
je
sti
jae
fbld
add
push
dec
inc
lret
pop
ficomps
push
cli
add
mov
stos
outsl
cmpsl
and
out
mov
or
imul
mov
and
in
add
shlb
dec
lcall
pop
xchg
enter
lods
mov
jae
or
ficoms
fsub
push
jae
leave
inc
xchg
inc
sarb
jl
arpl
iret
add
add
pop
sub
or
test
dec
mov
cmpsl
clc
mov
adc
stos
cmp
pop
jb
or
or
enter
imul
ret
jo
sbb
or
add
mov
or
xchg
gs
imul
test
cs
call
inc
and
into
aad
lock
push
cmp
es
mov
mov
orb
test
cmpsl
pop
fldl
mov
push
jne
rcrb
sbb
xchg
fs
icebp
add
push
jl
sbb
cld
jo
test
decb
fwait
add
jge
jns
push
sbb
add
cmp
lret
cmp
jge
or
bnd
popf
cltd
daa
fwait
leave
loop
outsl
inc
mov
dec
and
mov
or
xlat
mov
fs
sub
mov
dec
call
scas
dec
jae
pushf
lods
pop
jae
fidivrs
lahf
arpl
lea
aas
cmpl
loope
movsl
or
xchg
aam
fcoms
inc
pop
cli
fwait
dec
mov
push
sarb
push
dec
xchg
adc
or
subl
clc
cmp
adc
cmp
test
pop
lock
sbb
pmuludq
sub
push
mov
inc
mov
mov
dec
push
fcompl
push
cmp
fwait
inc
cs
cmpsb
mov
xor
loopne
pusha
jbe
inc
stos
adc
fdiv
sbb
dec
xchg
aam
jne
insl
bound
enter
lods
adc
ds
test
fisubl
test
cmp
and
xchg
xor
gs
and
mov
cmp
inc
sub
test
arpl
xchg
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
lret
mov
jne
cltd
pop
insl
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
pop
scas
inc
ret
lcall
pop
pop
mov
jno
mov
repnz
jmp
sbb
daa
sub
mov
push
fiadds
sub
push
mov
push
lds
sbb
stos
subl
push
sbb
jno
mov
div
inc
int
cwtl
nop
std
pop
mov
add
test
jb
add
scas
jecxz
pop
mov
mov
rcll
push
rcl
fistpl
fwait
pushw
xchg
ret
sahf
inc
and
cmp
xchg
and
in
sbb
add
or
aas
and
pop
mov
aas
out
sub
shl
mov
mov
fisttps
jae
fdivl
out
jno
pushf
dec
pop
xor
subb
or
xlat
mov
andl
leave
lods
push
iret
push
inc
push
pop
pop
mov
sub
adc
pop
hlt
mov
sbb
mov
adc
cmpb
test
fcomp
xlat
ret
pop
cmp
les
pushf
dec
xor
test
stos
push
mov
jno
pop
cmp
dec
and
adc
inc
cmp
dec
sbb
loope
xor
mov
aad
in
es
shlb
jns
inc
dec
xchg
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
adc
mov
das
sbb
push
scas
pxor
cld
repz
or
insl
bswap
jg
cmpsb
push
sbb
jbe
mov
fs
lcall
mov
xlat
imull
rcrl
test
mov
fistps
les
loopne
hlt
jbe
add
les
or
xlat
adc
cmpb
fwait
cwtl
movsl
inc
jmp
xor
xchg
sbb
in
cld
push
sub
divl
cwtl
roll
addr16
dec
jecxz
fisttpl
cmpsl
ret
test
dec
mov
jl
mov
nop
xlat
arpl
fcomip
sbb
push
mov
dec
ljmp
and
call
repnz
cmpsb
sub
sub
add
push
adc
bound
outsl
nop
sub
je
sub
sub
pop
enter
lods
mov
mov
pop
loop,pn
dec
fbstp
sub
cmpxchg
out
jno
insb
out
pop
mov
and
std
flds
jg
sbb
push
and
mov
fdivs
leave
fnstenv
pop
or
rcrb
push
mov
cmpsl
test
aas
xchg
xor
jne
fwait
cmpsl
inc
popf
ficomps
or
and
xchg
and
mov
and
mov
add
jge
sub
pop
movsl
pop
in
aaa
call
and
sarl
nop
cmp
pop
sub
sbb
sbb
xor
lods
popl
push
imul
daa
insb
in
inc
into
pop
mov
insl
imul
test
icebp
out
stc
mov
sti
sbb
push
push
fbstp
pop
xchg
ficomps
add
jp
les
adc
pop
xchg
cwtl
push
mov
jns
adc
lds
aam
and
movsl
aad
pop
mov
aad
jae
ret
xchg
mov
imul
shll
push
mov
jl
xchg
mov
lods
dec
fsts
inc
pop
mov
arpl
ret
xchg
ljmp
mov
and
inc
loopne
pushl
adc
aam
clc
test
sbbb
pmaddwd
sub
inc
pop
lea
sahf
shrl
mov
or
ret
pop
jmp
shrb
sbb
mov
inc
cmp
add
rcrl
jbe
xor
jecxz
leave
movsl
mov
imul
xchg
push
dec
ret
scas
addr16
stos
sbb
lret
inc
jno
cs
cmpsb
cmc
xchg
enter
arpl
popa
jbe
jp
pop
movsl
fmuls
out
push
inc
push
mov
test
jns
jne
xor
imul
xor
int3
outsl
mov
and
ss
fwait
mov
jne
sahf
fidivrs
sub
dec
stc
arpl
or
cmp
lret
adc
sub
dec
lret
fidivrs
jge
imul
fsubl
outsw
sbb
mov
stc
in
jbe
out
inc
sbb
xchg
push
hlt
cwtl
movsb
popf
xchg
mov
mov
dec
int
rcrb
push
notb
dec
push
pushf
add
jmp
jle
xor
mov
fwait
mov
pusha
enter
push
mov
icebp
insb
movsl
sub
jnp
cmpsl
mov
imul
test
push
inc
and
insb
lcall
xor
mov
call
imul
pop
sub
sub
pop
push
pop
push
leave
ret
leave
or
sub
mov
lock
add
mov
rcrb
jnp
leave
pop
mov
ficoms
scas
mov
ljmp
daa
mov
addb
test
push
mov
add
pop
fistpl
pop
mov
dec
lret
sbb
das
sti
jb
xlat
shr
lock
fisttpll
jno
jecxz
fcoms
outsb
or
cltd
ds
andl
nop
xor
or
in
aam
aam
mov
addr16
jno
mov
push
cmc
cmp
cmc
xchg
insl
pop
dec
push
decl
popa
mov
loop
jge
mov
push
and
js
adc
and
mov
dec
sbb
lcall
jge
push
bnd
lcall
lret
dec
lods
mov
popf
or
imul
mov
nop
test
sbb
adc
pop
mov
jne
pop
mov
dec
popa
xchg
adcl
jns
inc
inc
or
out
sub
lahf
mov
jne
sahf
fidivrs
rorl
daa
mov
cltd
mov
pop
xor
or
jecxz
xor
test
and
cmp
mov
loope
or
sub
fisubs
outsb
dec
push
add
and
mov
jns
push
xchg
test
mov
sub
sub
xchg
mov
ljmp
insl
mov
daa
jo
push
sbb
inc
and
add
lahf
jmp
lock
sarl
cmp
and
insb
jne
inc
into
push
mov
mov
adc
insb
jns
ret
xchg
ret
pop
push
or
push
pusha
jb
lods
jp
jmp
xor
fwait
js
stc
mov
shlb
test
icebp
fiaddl
dec
movb
add
pop
inc
mov
mov
fstpl
icebp
xchg
leave
jg
pop
inc
mov
repz
sti
cmp
adc
jmp
and
add
push
ja
lcall
mov
cltd
mov
out
jno
sbb
xor
aad
das
dec
fidivrs
sahf
sub
adc
into
jae
ljmp
hlt
test
test
lret
fimull
cli
test
insl
int
jb
mov
sub
xor
adc
and
xorl
pusha
lods
in
xor
leave
pop
ret
pop
inc
pusha
jnp
cmc
dec
inc
test
xchg
roll
lock
test
iret
imul
pop
xor
sbb
cmpb
lahf
lcall
repnz
imul
pop
fucom
cli
mov
mov
in
bound
ds
data16
or
cmp
dec
mov
mov
or
push
sbb
outsl
repz
jo
leave
cltd
pop
fwait
leave
loop
imul
push
movsb
xchg
push
js
ret
dec
sbb
mov
push
mov
mov
cmpsl
out
dec
mov
sbb
cld
mov
push
loope
fidivrs
jnp
jne
inc
pop
dec
cmp
loope
rcll
inc
inc
fidivrs
fpatan
leave
sbb
add
movsb
jne
mov
daa
popa
lret
cltd
sahf
inc
sub
pop
sub
jbe
ficoms
or
jg
outsl
mov
out
mov
je
mov
imul
aad
mov
imul
or
mov
lahf
dec
and
push
in
adc
ljmp
xor
test
ljmp
sti
pop
adc
lcall
sahf
jp
sub
sub
inc
dec
fsubl
ja
in
and
shlb
pop
andb
push
enter
mov
adc
enter
lods
pop
adc
pop
cwtl
jle
xor
js
in
jge
push
xlat
pushf
adc
and
or
inc
andl
loop
mov
jge
fistl
push
push
inc
push
test
in
xchg
jmp
lea
mov
ret
fldenv
mov
movb
aaa
jae
int3
outsb
pop
pushf
inc
addr16
or
dec
cmpsb
dec
idivl
xor
mov
xor
adc
and
push
inc
push
push
push
lds
or
scas
jno
jb
sub
xor
divl
inc
mov
sti
jae
fcomip
je
or
int
dec
mov
jge
dec
inc
popf
test
lret
inc
in
dec
sbb
jne
addr16
flds
cld
test
cmp
xchg
callw
mov
pop
ret
fsts
push
subl
jl
rcl
lcall
lcall
mov
fucomi
inc
xchg
addb
fcompl
aaa
in
mov
mov
out
push
jbe
mov
lcall
adc
xchg
data16
jbe
fldenv
out
cmpsl
mov
jge
adc
jle
fildll
cmp
jns
cmp
mov
sub
dec
mov
ret
mov
xor
sub
clc
and
in
imul
sbb
loope
push
or
xchg
in
dec
or
repnz
int
jle
add
mov
mov
cmc
jbe
ljmp
fs
or
lahf
push
sub
movsb
leave
pop
ja
mov
fucomp
add
fldt
repnz
dec
ret
adc
add
adcb
add
or
je
sub
in
stos
xchg
mov
scas
push
and
sub
push
bound
or
ret
iret
in
popf
out
jnp
in
test
pop
movsl
arpl
stos
xchg
rclb
xorl
cs
xchg
scas
cmp
js
lock
dec
xor
jno
xchg
jnp
stc
xchg
push
mov
fsubl
jne
stc
lcall
mov
pop
add
dec
xchg
mov
fldenv
sbb
mov
mov
test
gs
add
lret
mov
pop
lret
fstps
jno
or
js
xchg
mov
inc
outsl
js
mov
or
mov
fcomp
cmp
imul
push
stos
lea
ljmp
addr16
insl
jb
fildll
push
sahf
jns
sub
sub
inc
pop
fsub
ja
push
scas
test
sub
out
pop
ljmp
pop
test
xchg
test
push
pop
mov
push
aad
and
in
jno
insb
into
cmpsb
mov
mov
mov
jecxz,pn
cmove
inc
sub
test
arpl
xchg
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
lret
mov
jne
cltd
pop
insl
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
idivl
shr
repz
cli
dec
pop
mov
js
inc
repnz
jnp
mov
jecxz
arpl
stos
and
orl
lcall
push
out
jge
dec
xorb
stos
repnz
push
fcoml
push
lds
mov
lahf
sbb
pop
dec
sbb
fcomps
aad
xor
lret
or
pop
stos
adc
pop
pop
fistl
cltd
cmpsl
xchg
dec
cltd
lods
je
les
jo
lahf
scas
jb
movzwl
push
dec
in
pop
mov
pop
xchg
mov
mov
adc
aad
iret
jge
leave
xchg
adc
dec
cmp
rclb
pop
push
mov
clc
push
mov
lods
clc
pop
fidivrs
jnp
lcall
cmp
loope
rcll
inc
inc
fidivrs
fpatan
leave
sbb
add
movsb
jne
mov
daa
popa
mov
cltd
sahf
inc
sub
pop
sub
jbe
ficoms
or
jg
outsl
mov
out
mov
je
mov
imul
sub
mov
iret
xor
or
push
dec
xchg
mov
lahf
dec
and
push
in
addr16
sti
popf
ficoms
shr
sub
dec
push
pop
shl
jg
sahf
out
icebp
stc
jg
lahf
pop
xchg
iret
icebp
icebp
fsub
jbe
lods
cs
mov
repnz
aam
and
notb
adc
pop
fadds
mov
out
test
ljmp
fcompl
and
pop
rcrb
pop
pop
mov
and
hlt
jl
cmp
insl
movsl
pop
jno
jg
cmc
dec
and
ja
cltd
and
mov
icebp
fcomi
movsb
lods
xlat
xor
mov
mov
push
test
lock
inc
iret
mov
dec
inc
and
or
cmp
lods
cld
dec
add
mov
mov
sub
int3
push
xor
or
inc
xchg
dec
aad
or
dec
adc
dec
push
sti
or
fs
stos
jg
in
fcmovbe
mov
xchg
mov
add
scas
sti
sbb
pop
add
add
pop
arpl
lahf
shll
xchg
add
mov
inc
shlb
sub
jne
sahf
out
rolb
cmpsb
sub
fsubrl
cmp
jbe
lods
in
mov
fbld
pop
aad
bound
fists
jl
icebp
push
or
stc
fildll
repz
inc
aam
lret
fwait
adc
dec
mov
fisubl
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
idiv
test
in
xor
cwtl
sbb
xor
popa
jo
ret
orb
scas
push
xor
fistl
inc
sahf
cmp
fbld
stos
rcll
mov
and
daa
and
mov
push
dec
sbb
add
xchg
loop
sub
ficomps
pop
push
stos
test
negb
and
push
inc
out
xor
into
repz
cmpsl
mov
mov
sbb
or
dec
fldl
lds
adc
lcall
push
js
jbe
mov
in
stos
in
sbb
dec
and
add
repz
or
loop
cwtl
add
cmp
xchg
xchg
aas
inc
mov
jno
pop
xor
out
push
lods
sub
push
dec
fidivrs
pop
sub
adc
jl
pop
lods
out
bound
out
pop
push
pushf
pop
add
adc
mov
aad
push
inc
jo
xor
ret
mov
adc
and
push
inc
push
sbb
inc
in
xor
negl
cmpsb
or
dec
xchg
mov
add
fcomps
hlt
mov
rorl
or
sub
aas
outsb
xor
stos
dec
in
ficoml
jmp
mov
jns
in
fisttps
mov
xchg
lds
sub
into
push
sarl
mov
cmp
sbb
mov
test
jl
or
push
pop
sbb
lods
xlat
dec
shrb
cltd
sahf
cmp
bound
xchg
and
adc
cmp
das
cs
mul
jns,pt
outsl
cmp
into
lock
sub
mov
fists
fistps
jns
adc
divb
std
lods
dec
jae
fdivrp
xor
sub
ljmp
iret
or
dec
sbb
les
add
lds
dec
cmp
imulb
fstl
sub
movsl
pop
adc
pop
pop
shrl
or
add
in
mov
jl
mov
scas
roll
fcomps
je
and
add
inc
mov
clc
jg
adc
test
push
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
pop
shll
push
jg
shl
je
sub
in
stos
xchg
mov
scas
push
and
sub
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
jecxz
cmove
inc
sub
test
arpl
xchg
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
lret
mov
jne
cltd
pop
insl
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
idivl
int
mov
bnd
inc
inc
rcll
test
jae
leave
fs
push
mov
ja
push
dec
push
shrb
add
shll
data16
sbb
jmp
ficomps
sbb
stos
xchg
scas
data16
sbb
ljmp
cmpsl
sub
mov
push
repnz
popf
xchg
push
leave
inc
sub
dec
push
or
dec
xchg
jl
shrl
test
fistl
nop
jb
xor
lods
aad
ret
jg
xlat
xchg
mov
movsb
mov
xchg
andb
fcoms
mov
mov
jge
dec
je
xor
xchg
jmp
stos
pop
adc
stos
fldt
in
test
sub
ja
int
daa
mov
cwtl
add
dec
mov
leave
repnz
test
mov
sbb
jb
mov
xor
call
rcrl
mov
into
fwait
sbb
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
fbstp
push
push
test
pop
sahf
adc
and
out
cmpsl
adc
cmp
std
sahf
jge
ljmp
inc
cs
stos
push
shlb
dec
lret
xor
dec
xorl
mov
cmpsl
adc
int3
jmp
scas
ret
mov
xchg
jge
js
popf
mov
mov
cwtl
mov
imul
or
adc
jo
imul
push
enter
test
leave
push
fidivrl
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cltd
push
es
dec
mov
mov
mov
and
arpl
cmc
pop
stos
ret
loopne
dec
fucomip
repz
int3
mov
std
cmp
frndint
push
daa
xchg
lret
bound
je
daa
mov
leave
les
push
mov
enter
in
mov
lret
push
in
add
jbe
push
imul
dec
mulb
push
ret
sbb
jnp
mov
ret
lahf
xchg
imul
xor
inc
push
mov
xchg
gs
orl
inc
inc
mov
cmpb
clc
mov
cltd
out
push
hlt
xor
je
jmp
or
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
movsb
xor
cmc
jnp
testb
stos
mov
and
call
mov
push
xchg
dec
xorl
inc
xor
imul
inc
mov
pop
pop
mov
xor
dec
sbb
mov
out
sbb
xchg
jle
inc
push
mov
and
daa
add
test
or
imul
hlt
movsb
dec
ljmp
stos
imul
add
repz
test
scas
shl
inc
stos
sbb
movsb
pop
imul
lods
push
fmuls
xchg
test
push
push
fisttpll
mov
stos
les
aam
add
fs
mov
adc
sti
xchg
inc
xlat
pop
mov
dec
out
and
ds
xlat
in
or
cmp
jo
cwtl
add
push
push
ds
fistpll
pushf
out
out
jb
jp
scas
xchg
xor
fisttpll
test
fidivrs
fildll
jl
cmp
ds
xorl
data16
and
inc
sbb
cmc
or
lret
ret
faddp
mov
aad
cwtl
mov
lods
imul
lahf
mov
push
push
mov
mov
add
setle
xor
mov
cltd
sbb
mov
out
addr16
popa
push
sbb
fs
push
outsl
pop
mov
pop
movsb
fisubrl
jns
sbb
push
mov
add
jg
pusha
or
inc
inc
xchg
or
or
test
shrl
push
mov
roll
arpl
mov
lds
cmp
leave
loop
and
xlat
adc
adc
lret
or
iret
dec
mov
sub
lcall
fucomi
jns
jl
xor
cmp
jle
mov
clc
mov
out
int3
into
sbb
aad
dec
sub
popf
das
jnp
sbb
in
out
mov
sbb
adc
negb
and
xchg
sbb
fbld
scas
mov
mov
cmc
cmpsb
xchg
push
dec
xchg
mov
test
push
call
xor
mov
push
mov
je
mov
push
xlat
mov
cmpsb
push
xchg
mov
and
pop
fcmovne
push
add
inc
repz
or
jmp
js
scas
mov
xchg
sub
add
pop
push
add
sub
xor
addr16
push
js
adc
fsts
jg
sbb
enter
mov
dec
std
arpl
popl
xchg
std
push
mov
mov
cltd
mov
out
jno
sbb
adc
sbb
fidivrs
sahf
sub
ljmp
mov
shrl
add
jle
scas
int
lds
or
adc
and
push
inc
push
pop
inc
xchg
fwait
add
cli
ljmp
jmp
mov
int
aas
ljmp
adc
inc
mov
insb
movsl
sub
pop
mov
insl
and
test
push
stos
xchg
scas
data16
sbb
ljmp
daa
push
popf
mov
jns
and
dec
inc
mov
cli
aad
mov
fists
mov
outsl
les
mov
or
inc
pushf
sarb
pop
jl
pusha
test
ficoms
jg
mov
mov
inc
or
es
or
push
lret
clc
aaa
jge
push
dec
mov
sahf
dec
dec
aam
inc
addr16
pushf
xor
fcom
push
fdivrs
ja
ja
and
pop
cmc
fcomi
jecxz
divl
stc
adc
and
pushf
ret
addr16
sub
or
sub
adc
insb
pop
sbb
push
inc
push
pop
cltd
subl
xchg
in
mov
push
sbb
daa
adc
mov
jle
sbb
outsl
and
int3
imul
test
icebp
add
lods
dec
lret
push
in
add
push
pop
adc
jmp
decb
sub
sub
enter
push
jne
inc
inc
dec
les
xchg
outsl
sub
test
add
sub
fstpt
loopne
adc
dec
mov
mov
andl
mov
std
jb
jmp
std
xchg
and
data16
mov
popf
push
stos
icebp
mov
fdivl
call
push
xor
lahf
lcall
adc
pop
pushf
inc
sbb
pop
or
push
iret
hlt
aam
stos
dec
sbb
adc
and
push
inc
push
push
cltd
shr
movsb
ret
es
repnz
enter
jle
insl
and
rol
pop
inc
add
mov
aas
add
fsubrl
ret
dec
lret
cltd
adc
stos
repnz
sbb
lahf
jne
test
cld
mov
sti
cli
int
jbe
or
data16
icebp
call
test
push
cmp
inc
outsb
cmpsb
sub
lcall
gs
mov
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
push
repz
fidivrs
jnp
stos
hlt
jne
inc
pop
push
cmp
loope
rcll
inc
inc
fidivrs
fpatan
leave
sbb
add
movsb
jne
mov
daa
popa
mov
sub
pop
sub
jbe
ficoms
or
pop
outsl
mov
out
mov
lock
mov
xor
add
sbb
mov
decb
lock
xchg
inc
sub
jbe
xchg
mov
enter
push
inc
rclb
or
test
outsb
cmp
cmp
int3
es
mov
lret
push
adc
mov
mov
nop
sbb
mov
push
les
movsb
push
mov
cmp
sbb
pop
pushf
sub
sbb
aad
mov
nop
inc
repz
lret
jp
pushf
adcl
pop
jl
xor
in
push
test
dec
push
jp
inc
cwtl
les
push
pop
pop
push
test
cmpl
sbb
push
sub
pusha
mov
arpl
lahf
stc
cwtl
shll
insb
lea
cwtl
lds
jmp
or
lret
mov
jge
je
add
inc
imul
sub
adc
sti
mov
fisttpll
and
daa
adc
mov
cmpsl
pop
mov
or
sub
dec
rcrb
mov
pop
es
sti
sti
inc
push
movsl
arpl
pop
cmp
dec
and
adc
inc
cmp
mov
popf
lret
mov
out
out
enter
clc
in
es
shlb
jns
inc
dec
xchg
jmp
sub
and
data16
ss
dec
push
lret
ret
mov
jp
test
sbb
bound
sbb
pxor
cld
repz
movsl
xor
jecxz
cmp
cmpsl
fs
xlat
lret
jle
scas
out
in
dec
cmp
mov
stos
repz
fwait
cld
sub
mov
repz
inc
mov
xor
dec
fxtract
pop
sub
add
xor
rcrl
fisubrs
push
dec
mov
lcall
mov
mov
popf
je
fdivrs
sti
dec
cmpsb
push
pop
add
push
cwtl
xor
out
ja
int
mov
sbb
cmp
push
negb
in
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
mov
shlb
or
adc
aad
push
mov
rcrb
cmp
or
mov
dec
mov
add
fsubl
adc
flds
mov
and
iret
mov
les
mov
or
jns
xor
mov
icebp
jbe
in
ret
fadds
mov
pop
repnz
or
jl
push
xor
mov
add
pop
cmp
gs
cltd
pop
adc
cmpb
lods
inc
test
jns
pop
int3
inc
and
hlt
dec
adc
popa
xchg
sub
xor
and
pop
ja
or
mov
mov
jg
xor
aam
aaa
imul
cmc
mov
inc
adc
push
leave
cmpsl
inc
icebp
xchg
jle
sbb
adcb
idiv
ror
inc
push
cltd
jns
ret
xchg
ret
dec
lods
jmp
cmp
mov
stos
xor
dec
les
mov
movsw
mov
cmp
insl
or
xchg
ss
jne
push
xchg
js
xchg
stc
test
mov
int3
scas
hlt
mov
je
mov
sub
or
add
jecxz
out
xchg
adc
cmpsl
js
add
dec
movsb
inc
jmpw
or
sbb
mov
leave
mov
ret
mov
mov
pop
jle
pop
iret
sbb
inc
enter
stc
popf
pop
jnp
sbb
lret
les
sbb
xor
add
and
ljmp
call
jle
incl
inc
xorl
pop
repz
mov
jecxz
or
xorb
cmpsb
sbb
popa
ficomps
sbb
out
ret
mov
shlb
pop
push
lods
jg
lret
inc
fidivrs
sti
jge
mov
call
adcl
cmp
mov
xchg
add
jge
sub
movsb
sub
sbb
jle
cmpsl
or
inc
xor
ds
out
jl
int3
xor
mov
inc
lret
mov
bound
daa
dec
iret
ja
leave
xchg
iret
shll
pop
push
fs
lcall
test
mov
add
inc
js
mov
pushf
arpl
out
pusha
les
xor
pushf
add
sbb
out
jmp
test
xor
inc
and
or
mov
movsl
push
jmp
fldcw
mov
cmc
mov
dec
adc
mov
sti
add
imul
lods
int3
and
pop
adc
movsl
ret
aaa
lahf
lret
adc
push
div
test
das
cmpsl
movsb
leave
test
push
adc
cmp
in
dec
push
jge
les
inc
dec
jle
test
sbb
out
scas
xchg
push
clc
mov
inc
fidivrl
fs
mov
lods
movb
xor
enter
jae
fisttps
in
jmp
pop
inc
add
stos
xor
sbbl
cmp
es
dec
xor
and
adc
mov
mov
inc
int
jns
cli
jle
fwait
sub
sbb
repz
sahf
aaa
xchg
cltd
jmp
and
es
fdivs
jb
dec
mov
stos
call
nop
and
xchg
inc
gs
mov
mov
movb
cs
push
lds
ret
mov
cmc
push
pushf
popf
arpl
push
xor
cld
push
pop
lock
test
iret
imul
pop
xor
sbb
cmpb
lahf
lcall
repnz
imul
pop
fucom
cli
mov
mov
in
bound
ds
data16
or
cmp
dec
mov
mov
movsl
pop
test
push
pop
adc
ja
in
jo
sbb
xchg
int3
jo
clc
repz
scas
das
adc
scas
push
repz
inc
mov
inc
cwtl
inc
mov
mov
movsb
adc
aas
je
repz
mov
jo
fidivrs
push
xchg
or
and
rorb
jmp
dec
mov
adc
jnp
lret
mov
imul
iret
jp
incb
mov
orl
test
loopne
jle
incl
inc
orl
rcrl
add
mov
cwtl
fiaddl
cltd
andb
sbbb
mov
and
push
leave
pop
inc
add
mov
ja
inc
fnstsw
jle
jge
jnp
dec
sub
cli
jno
inc
fcom
mov
jl
sbb
or
dec
cmpsl
stos
xchg
into
imul
fwait
into
and
das
cmpsl
int3
push
mov
pop
jg
ret
sub
repz
cmp
sbb
inc
inc
loope
stc
loope
js
pop
jmp
or
add
xor
xor
out
movsl
pushl
outsl
arpl
cmp
scas
xorl
popa
rorb
arpl
loope
test
iret
testl
les
lock
xor
cmc
lds
mov
sbb
mov
loope
insl
or
xor
mov
arpl
int3
add
idivb
cmp
adc
jne
sub
mov
imul
cmp
adc
mov
and
jl
leave
mov
fsubrl
xchg
lret
movsl
mov
adc
addr16
sti
popf
fiadds
push
jmp
pop
pop
loope
lcall
inc
cmp
mov
lret
sahf
jno
jecxz
fsubrs
loope
pop
sbb
add
nop
and
pop
stos
xchg
stos
jne
dec
push
or
xor
lret
push
and
add
dec
sbb
js
adc
jno
mov
testl
push
mov
adc
jns
sbb
rorb
push
fisubl
xor
scas
enter
cmp
test
cmpsb
inc
add
test
xchg
add
pop
pushf
shll
add
sbb
scas
int3
mov
js
rcll
pop
sbb
jo
out
add
mov
sbb
neg
out
repnz
add
cld
mov
or
outsl
aam
lods
and
cmp
push
sub
push
mov
insl
aad
insl
int3
inc
push
cltd
dec
xlat
and
fxtract
push
and
aam
filds
pop
add
mov
push
roll
push
push
mov
mov
or
sbb
lods
jge
insb
ss
jnp
xchg
add
movsb
repnz
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
sub
je
pop
lods
addr16
fidivrs
pop
sub
adc
jl
pop
lods
out
std
into
add
and
rorb
add
inc
mov
out
mov
push
sbb
and
sbb
inc
rcrl
mov
jb
test
add
push
lds
or
pusha
jae
repnz
jb
call
test
inc
add
sarl
xchg
roll
mov
insl
lcall
push
out
jge
dec
xorb
stos
repnz
push
fcoml
push
lds
mov
lahf
sbb
pop
dec
sbb
fcomps
aad
xor
lret
or
js
adc
pop
pop
fistl
push
shrb
sub
inc
cmpsb
cltd
aas
scas
shrb
ss
sti
popf
scas
inc
jecxz
push
jg
or
insb
sub
or
out
daa
dec
lock
jge
inc
xor
cmpl
scas
mov
out
jb
fsubrl
jbe
push
imul
inc
iret
mov
aam
and
sub
imul
jg
clc
pop
mov
es
cmpsb
pop
out
adc
adc
inc
cmc
jecxz
inc
push
push
push
lds
mov
cmpsb
test
ljmp
jmp
mov
jo
outsl
add
mov
or
mov
push
stos
and
dec
pop
push
ret
lret
imul
push
clc
lods
pop
imul
or
pop
cmp
jne
movsb
pop
mov
mov
pop
insl
adcl
test
sbb
jg
out
sub
sub
shl
sub
mov
sbb
sub
ret
cltd
sub
add
addr16
cmp
es
dec
repz
jo
mov
mov
gs
adc
mov
repnz
xor
mov
push
pop
pop
imul
add
mov
xchg
push
test
cmovae
gs
cmp
push
and
dec
dec
mov
jne
pop
xor
dec
sahf
and
sub
test
arpl
sbb
repnz
jne
jg
pop
pop
shlb
xor
cmp
ret
je
push
testb
jp
test
fst
fildll
aad
test
mov
pop
cmp
flds
adc
stc
jmp
lds
pop
adc
push
mov
ficoml
popf
mov
inc
xchg
fsts
loopne
xchg
dec
cltd
lods
je
les
jg
orl
mov
and
les
jecxz
test
adc
adc
repz
push
fldt
cmp
sbb
ss
xorb
cs
xor
jb
mov
enter
xor
mov
adc
sti
pop
cmovae
dec
jno
fwait
push
push
sbbl
inc
dec
sub
movsb
enter
push
dec
mov
add
ret
cmc
test
imul
dec
call
mov
mov
imul
sub
push
mov
sbb
mov
sub
cmp
icebp
pop
iret
cwtl
push
fcoml
xor
movsl
mov
test
push
lods
pop
imul
xchg
mov
mov
scas
mov
cmc
push
add
dec
inc
mov
xchg
lods
push
outsl
sbb
mov
mov
test
fwait
push
add
dec
cmp
xorb
pop
add
cmp
leave
ret
mov
xchg
jl
call
je
fisubl
negl
jne
subl
sub
xchg
xchg
pop
inc
mov
add
jge
xchg
cmc
mov
addl
mov
pop
xchg
cltd
test
cmovae
mov
cwtl
mov
mov
xlat
or
inc
popa
sub
cltd
dec
in
pop
xchg
inc
and
ss
fstp
push
scas
push
test
adc
push
pop
pop
xchg
ret
in
out
rclb
ds
lahf
lret
in
addr16
mov
aaa
fisubl
lds
pop
xor
pushf
or
lds
push
cld
stos
jb
mov
mov
adc
mov
mov
jno
adc
movsb
bound
xchg
add
sahf
pop
sub
movsb
sub
mov
mov
leave
out
xchg
das
cmpsb
mov
and
jns
dec
sbb
fs
aaa
pop
cmp
enter
loop
mov
dec
lock
out
hlt
aaa
jge
outsl
inc
xchg
out
mov
push
fdivrs
cli
jno
les
inc
push
push
ret
fnsave
imul
int3
test
enter
push
leave
daa
in
hlt
xor
and
gs
cmp
inc
and
cmc
mov
and
xor
jg
ss
ljmp
int
add
in
and
lret
repz
int
enter
pop
inc
xchg
dec
push
push
jno
fst
outsl
mov
imul
pop
dec
ficoms
fldt
inc
lods
dec
push
xor
mov
aas
dec
imul
mov
lret
iret
xlat
mov
in
movsb
mov
daa
cwtl
movsb
push
les
adc
lock
movsl
sub
pop
cld
and
fstps
cwtl
xchg
pusha
or
sti
fstps
sub
inc
fwait
or
push
rcll
dec
std
adc
les
xchg
sub
sub
push
jno
pop
cli
inc
test
mov
jns
lret
sbb
jg
sub
pushf
xchg
mov
and
andl
sbb
mov
xchg
jmp
xchg
hlt
test
lods
lea
and
stc
lea
fsubs
sbb
jnp
mov
sub
inc
cltd
add
call
lret
or
jno
test
popa
push
movsb
mov
pushf
movsb
and
mov
iret
out
gs
cli
rcrl
out
lahf
aam
and
in
mov
cltd
jge
dec
inc
sub
int3
xor
ret
mov
lea
mov
cld
sub
aam
jno
dec
add
mov
rcrb
jnp
mov
scas
shr
mov
or
inc
xchg
ljmp
daa
mov
addb
test
push
mov
add
pop
fistpl
cmpsb
push
push
sub
cmp
inc
movsb
xchg
inc
xlat
sbb
pop
sub
adc
jl
pop
lods
out
bound
out
pop
push
pushf
pop
add
adc
mov
or
ret
nop
and
push
or
mov
push
add
and
push
inc
push
push
push
lds
sbb
and
add
mov
and
daa
add
test
push
leave
cmpsl
inc
icebp
xchg
jle
sbb
adcb
cmpsb
ret
in
iret
cmp
xor
inc
mov
push
mov
scas
iret
bswap
stc
dec
push
out
sub
mov
aam
addl
add
dec
sbb
gs
fisttpll
jbe
pop
jp
cmpsl
sbb
leave
pushf
lds
xchg
bound
cld
loop
in
nop
xchg
mov
outsl
pop
mov
daa
ljmp
lret
cmpsb
scas
divb
jp
scas
lahf
push
int
out
fmull
jae
fidivrs
sahf
sub
adc
jg
lahf
sub
hlt
test
adc
add
pop
push
orl
int
and
jne
roll
add
and
test
arpl
ss
loopne
lahf
cmpb
int3
push
xor
or
inc
xchg
mov
jbe
sub
pop
inc
xchg
mov
fs
movsl
xor
dec
xchg
test
push
stos
xchg
adc
inc
pop
movsb
loop
inc
fst
out
testb
inc
gs
mov
push
cmp
ret
and
lds
fcom
dec
sub
cmp
add
pop
cld
and
adc
fldt
and
adc
jp
pushf
adcl
pop
jl
scas
mov
add
push
test
dec
dec
shlb
cli
cwtl
push
ror
pop
test
xchg
stos
mov
fs
test
pop
into
ja
in
mov
mov
int3
inc
dec
adc
jo
aam
fisttpl
mov
adc
jg
xchg
push
mov
and
test
ds
in
xchg
jns
push
xchg
xor
insl
push
sbb
jnp
fimull
dec
xchg
addr16
mov
stos
xchg
adc
sub
pop
icebp
adc
stos
mov
sarb
lea
fwait
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
pop
shll
push
jg
outsb
out
sub
xchg
xor
xchg
inc
and
psubd
leave
out
pop
add
int3
lret
mov
sbb
js
push
shlb
xor
mov
inc
sarb
je
or
inc
xor
pop
or
add
inc
mov
aad
repz
stos
jmp
mov
mov
lods
mov
out
and
mov
out
hlt
add
pop
ror
arpl
pop
xchg
inc
gs
je
pop
mov
xor
ret
call
lods
xchg
es
scas
jno
adc
add
mov
and
rolb
out
inc
sbbl
mov
pop
leave
cmp
jae
les
lret
sub
mov
in
gs
jno
int
inc
rcrl
mov
pop
divb
jo
xor
sbb
or
sarb
xor
mov
add
pop
jb
lods
ret
movsb
std
pop
in
cltd
fmull
cmp
xor
push
in
bnd
pusha
xchg
mov
push
inc
xor
rorl
dec
and
mov
nop
inc
lock
outsl
xor
scas
xchg
mov
xchg
ja
mov
mov
std
push
lret
mov
mov
adc
ret
and
popf
in
inc
mov
jo
int3
pop
nop
xchg
test
popa
mov
mov
dec
mov
ret
mov
xor
ja
cmp
push
xchg
cmp
or
inc
mov
inc
add
xlat
sbb
xor
dec
popl
popa
rolb
mov
and
mov
push
xchg
xchg
dec
adc
xor
stos
dec
sbb
jns
out
lods
jmp
into
and
movb
mov
jmp
ljmp
aad
ret
daa
or
push
mov
leave
xchg
fwait
adc
sub
test
sub
in
scas
aas
test
lret
ja
gs
test
lret
cmp
ds
rorl
sbb
fsts
mul
addr16
out
jecxz
mov
xchg
test
dec
mov
fisubl
lahf
sti
fwait
pop
mov
jne
loope
sub
lds
mov
lret
dec
sbb
lea
js
or
lret
addl
int3
lcall
mov
loopne
rclb
adc
icebp
leave
cmp
mov
rorl
mov
mov
jmp
fwait
jno
dec
mov
test
aad
shll
pop
pop
mov
pop
add
pop
cmpb
lock
shlb
lock
mov
cwtl
cmp
add
sarb
xor
mov
add
pop
jb
lods
ret
movsb
std
jb
adc
scas
dec
pushf
jp
xor
jecxz
hlt
xchg
cmp
and
les
inc
movb
mul
jns,pt
outsb
repz
call
test
add
cmp
mov
push
stos
xorb
push
or
in
mov
pop
fdivrl
sti
icebp
dec
in
out
sbb
adc
adc
add
push
aad
lret
gs
loopne
cmc
mov
add
jge
int3
sbb
pop
in
pop
xlat
divb
incb
test
add
in
mov
jl
mov
cltd
je
lock
insl
leave
cmc
cld
or
jmp
pop
test
sbb
cmpsb
ret
outsb
xor
lods
push
ss
lea
cmp
jb
and
into
mov
lds
fnstenv
mov
lds
test
das
mov
push
insl
jb
sahf
cmpsb
and
arpl
cmp
lods
fmull
outsb
adc
lret
rorl
les
js
xor
xchg
popf
addl
xchg
lods
sarl
cmc
pop
adc
popa
test
fdivrs
cli
jno
les
inc
push
push
ret
fnsave
imul
int3
test
enter
push
leave
daa
in
hlt
xor
and
gs
cmp
inc
and
cmc
mov
and
xor
jg
ss
adc
iret
cmp
jns
ds
and
xor
lock
imul
orps
mulb
daa
cmpsb
cmc
fxch
mov
lds
data16
cmc
imul
ja
int3
ret
push
inc
push
mov
mov
stos
call
cmpsb
movsl
movsl
xor
xchg
aam
loop
pushf
inc
adc
shlb
add
scas
pop
or
rcrb
testl
push
xchg
pushf
cmpsl
inc
imul
bound
jnp
adc
mov
rorl
cmp
pop
inc
shlb
mov
xchg
clc
dec
mov
fs
mov
adc
test
sub
pushf
xchg
daa
sbb
arpl
int3
jns
sbb
std
into
add
fsubrs
cmpsl
addr16
xchg
mul
out
mov
and
pop
stos
jecxz
mov
cs
add
and
push
inc
lret
divl
inc
pop
xchg
fstl
addb
fcomps
das
fildl
jl
mov
add
dec
lds
inc
cmpb
xor
mov
testb
aad
jle
add
sub
mov
pop
dec
pop
adc
mov
mov
jno
or
xor
xchg
add
cmpsb
jno
jb
push
xor
fwait
xchg
dec
jns
enter
pop
push
ficoml
in
mov
mov
xchg
xchg
dec
aam
push
add
jg
and
out
sar
mov
cwtl
repz
imul
shl
imull
je
fidivrl
rcl
ss
lods
push
mov
sub
adc
jg
lahf
lods
xlat
xor
into
add
mov
pop
add
or
mov
inc
lret
mov
ret
mov
clc
rcrb
pop
jno
aad
pop
addr16
and
mov
sbb
loopne
iret
jl
in
xchg
pop
rcrl
mov
sub
out
mov
cmp
fnstenv
int
js
rcrb
sub
mov
insb
ror
sbb
inc
lahf
mov
pop
xor
mov
adc
mov
xchg
fwait
mov
syscall
jle
in
xor
push
jecxz
sub
es
leave
insl
jb
sahf
mull
or
xchg
aam
jne
insl
mov
inc
int3
xor
xchg
and
cmp
cmp
das
push
roll
insb
scas
pop
sbb
or
addl
xchg
xchg
adc
fsubs
gs
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
pop
out
enter
lea
push
xchg
dec
xorl
lret
fsubrs
sbb
or
cwtl
adc
inc
mov
int
clc
mov
mov
sti
clc
sti
mov
jecxz
cs
test
ret
lret
bound
jl
add
test
test
daa
jne
mov
sub
loop
out
jno
lds
inc
in
movsb
pushl
test
les
jno
dec
inc
add
adc
dec
jge
mov
sbb
or
sarl
shl
jecxz
fwait
cmpsb
mov
mov
cld
or
sbb
loop
push
xor
inc
pop
push
adc
cs
inc
xchg
cmpsl
or
cmp
push
or
fucomip
js
mov
lods
dec
fsts
inc
pop
mov
arpl
xlat
jae
xchg
lods
pop
jae
xor
adc
outsb
add
or
nop
add
dec
adc
adc
ret
pop
sbb
cli
cmpsl
jp
mov
iret
push
insb
loopne
xchg
add
popf
shll
jo
lock
dec
jecxz
pop
or
cmpsl
ret
test
pop
pop
push
fcompl
jne
fs
adc
test
mov
jns
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
push
nop
dec
and
pop
lret
test
lods
scas
das
test
add
sahf
pop
and
mov
lret
in
inc
lret
mov
push
add
les
mov
out
xchg
call
adc
add
xor
mov
add
pop
cmp
gs
cltd
pop
adc
clc
xor
cmpb
lods
inc
test
jns
pop
int3
inc
and
hlt
dec
adc
popa
mov
sub
xor
and
pop
ja
or
mov
mov
cmp
test
pop
mov
xor
ss
sub
mov
push
dec
cmpsl
lret
or
inc
jg
in
pop
movsl
mov
pushf
mov
adc
scas
movsl
xor
lret
scas
lods
pop
lock
movb
adc
and
call
cmpsb
in
xor
dec
ret
jno
mulb
push
ret
insb
mov
xor
xchg
dec
std
inc
add
inc
pop
jecxz
or
jl
rorl
cmpsb
lods
adcl
sub
ret
mov
sbb
push
mov
movsb
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
adc
dec
aam
stc
mov
xchg
inc
mov
jnp
out
mov
out
loopne
js
xlat
testl
hlt
icebp
push
ret
xor
shll
or
and
xor
imul
daa
mov
pop
sbb
insb
add
fadd
fldl
pop
ret
test
jecxz
inc
nop
fstps
insl
rolb
gs
rcrb
repnz
icebp
mov
int
inc
sbb
push
mov
mov
mov
or
push
xchg
ss
outsl
mov
std
fistpll
stc
mov
mov
test
in
andb
out
pop
dec
dec
pop
pop
push
dec
fs
cwtl
push
mov
lods
mov
popa
fcom
ss
mov
gs
in
aaa
in
clc
dec
popf
jno
lahf
jbe
mov
pop
shrb
rcr
pusha
inc
dec
je
jge
jecxz
or
mov
adc
gs
out
dec
mov
gs
push
push
ret
fnsave
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
call
mov
pop
add
inc
inc
add
cmpb
sti
stos
inc
sahf
jge
imul
mov
hlt
mov
ja
aaa
mov
cmc
push
mov
mov
insb
adc
leave
sbb
inc
repz
ficomps
rolb
push
aaa
push
lea
movsb
fwait
push
push
push
insl
jno
fildll
cltd
insl
inc
dec
inc
sub
int3
push
sbb
fsub
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
mov
movsb
into
fsubrl
lret
popa
jno
fcmovne
push
lret
bound
inc
sarb
js
mov
add
add
or
popf
fistpl
mov
rcll
inc
mov
push
fidivrs
xlat
sbb
lret
and
sbb
jnp
popf
cmc
insl
pop
mov
stc
test
addr16
mov
inc
inc
mov
add
sub
and
add
fsubr
dec
sbb
lcall
into
pop
je
out
inc
jp
test
jmp
fucomip
repz
pop
insl
xchg
mov
cmp
rol
pop
inc
mov
popa
sahf
out
or
add
push
into
push
mov
insl
movsl
imul
sub
pop
test
lock
fstpt
movsl
cmp
enter
test
mov
cmc
mov
mov
in
pop
push
push
rclb
lds
xor
sub
dec
stos
inc
in
pop
jno
lds
dec
add
and
lahf
xchg
fsts
mov
dec
mov
sbbl
xchg
pop
adc
cwtl
add
and
add
or
incl
sbb
push
dec
jp
mov
xlat
sbb
and
fidivrs
jnp
sbb
andb
add
pusha
cmp
data16
mov
dec
push
aaa
adc
inc
cmp
lea
and
daa
mov
xor
out
mov
sbb
mov
fcmovb
jns
das
fildl
jl
mov
add
dec
lds
inc
cmpb
xor
lods
icebp
testb
aad
jle
add
sub
mov
pop
dec
pop
adc
mov
mov
jno
or
repz
mov
lea
add
pop
mov
notl
xor
inc
and
fidivl
cmpl
in
xor
fistps
sub
mov
pop
jb
add
inc
cmpl
fists
mov
call
repz
inc
insl
out
popf
pop
adc
fsubs
pop
mov
fnsave
mov
je
or
aaa
imul
and
hlt
cwtl
adc
dec
xchg
popa
add
xor
add
out
int3
pusha
adc
jl
inc
mov
xor
and
daa
adc
xorb
mov
stos
sbb
data16
mov
aad
insl
and
adc
and
lods
fcmovnb
inc
pop
jno
pop
cmp
mov
rcl
mov
fists
inc
popf
lret
push
push
jbe
lods
push
outsl
sbbl
pushf
mov
xchg
xor
ja
shlb
dec
cmpsl
jle
pop
cmpsl
push
insb
lea
scas
shrb
ret
mov
sbb
xor
push
add
nop
push
add
cmp
mov
xchg
stc
dec
mov
adc
dec
inc
adcl
mov
push
fmulp
mov
ret
addr16
xlat
sbb
xchg
push
and
les
inc
inc
mov
mov
or
lea
mov
out
mov
shlb
xlat
push
lock
lds
movsb
sub
mov
js
cmp
je
es
out
inc
sbbl
cmpsl
push
ficoms
push
add
inc
inc
xchg
dec
rcrb
sbb
fstpl
pop
dec
cmp
cli
mov
adc
lret
jle
fs
cmpsl
dec
out
pop
rcrl
mov
add
loopne
xor
pop
rcl
xchg
mov
lods
inc
pusha
xor
pop
mov
dec
fidivrs
mov
add
inc
pushf
cmp
cmp
iret
jns
sbb
fs
push
xor
adc
add
mov
leave
mov
test
add
cmp
jp
scas
xchg
out
cmpsl
mov
jg
repz
mov
dec
xor
mov
je
mov
pop
add
popf
pop
jnp
sbb
cmpsb
mov
les
or
clc
and
xchg
adc
sub
leave
xor
mov
lods
dec
adcl
hlt
test
sahf
adc
jecxz
popf
fwait
add
jo
pop
adc
lods
cmpsb
pop
sub
inc
clc
lds
lock
xchg
jle
sahf
sbb
mov
sub
lahf
cmp
imul
fcoms
inc
out
subl
ret
fisubrs
jmp
dec
ja
enter
lods
adc
xor
aas
mov
lret
xlat
pop
mov
xlat
fmull
sti
add
or
and
mov
clc
dec
fdivrs
dec
mull
push
aam
rcrl
icebp
or
xchg
imul
insl
fcomp
xchg
test
aam
pop
insb
ss
pusha
sbb
mov
xor
xchg
or
rcll
addl
xchg
sub
cmp
xchg
mov
jp
rorb
push
pop
pop
mov
xor
dec
arpl
jl
dec
cmpsl
int3
mov
and
icebp
mov
je
and
daa
add
test
push
leave
inc
inc
loop
ja
fs
scas
arpl
fldlg2
mov
cmp
lret
stos
cli
mov
dec
sbb
inc
aaa
and
adc
inc
cmp
dec
sbb
loope
xor
mov
aad
in
es
shlb
jns
inc
dec
xchg
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
xchg
xor
fwait
leave
movsb
mov
sbb
fisttpl
or
sub
icebp
jmp
cmpsl
ficoms
outsb
cmp
inc
mov
mov
jge
dec
push
enter
dec
inc
rolb
cltd
js
enter
xchg
lea
xor
mov
mov
mov
test
jae
push
xchg
ror
xor
sarb
inc
inc
dec
pop
mov
jl
fbstp
hlt
sbb
push
ret
mov
inc
call
mov
jl
rorb
inc
ds
ret
imul
sbbl
mov
jb
dec
push
bound
push
lds
mov
and
sub
ljmp
rcrl
or
sbb
or
les
les
sbb
or
pop
ljmp
cmp
jb
sahf
pop
and
fsubr
in
mov
movsl
scas
push
fwait
pop
jmp
jl
pop
adc
mov
je
mull
jl
das
inc
iret
shll
out
push
les
xor
enter
xchg
xchg
fiadds
xchg
or
sbb
or
pusha
sbb
and
or
data16
inc
pushf
cmp
inc
push
es
mov
push
adc
sbb
mov
mov
adc
popf
imul
inc
pusha
test
stos
mov
shl
cmp
xor
dec
push
push
push
out
test
cwtl
add
mov
addr16
push
ficoms
leave
enter
inc
pop
mov
adc
cmp
test
aad
rcl
jbe
dec
mov
dec
jecxz
push
stos
dec
repnz
mov
sub
daa
out
imul
cmp
xor
add
sub
fstpt
loopne
adc
dec
mov
mov
test
jne
pop
dec
decb
std
jb
jmp
std
xchg
and
data16
mov
popf
push
stos
icebp
mov
fsubl
cld
mov
jbe
aaa
popf
xor
jnp
fpatan
fwait
xchg
and
jmp
int3
cmp
mov
push
adc
mov
and
push
inc
push
lods
xor
pusha
push
sub
repnz
add
cld
mov
or
int
and
hlt
imul
mov
xchg
xchg
mov
dec
cwtl
in
and
adc
and
aaa
push
lea
aaa
insb
scas
mov
loop
cmp
je
or
enter
dec
mov
enter
insl
or
xchg
cmpb
mov
push
pop
mov
xchg
das
cmpsl
int3
push
mov
shrb
jmp
dec
fisttpl
inc
fcoml
jg
js
inc
sbb
lret
lock
jge
inc
iret
shl
ja
std
pushf
out
out
jb
fdivs
push
cmc
daa
notl
pop
jg
stos
push
jecxz
mov
repz
outsl
mov
bound
cmpsl
push
fwait
jbe
dec
push
cli
mov
insb
je
scas
jge
fs
stos
dec
sbb
mov
mov
xchg
mov
dec
jmp
insl
andl
outsb
and
xchg
adc
subl
xor
rol
fimuls
xchg
cmc
in
cmp
add
sub
into
pop
imul
push
push
mov
sub
dec
xchg
mov
in
lret
cmp
subb
pop
imul
and
inc
inc
sbb
xchg
jge
test
or
stos
jbe
xor
adc
inc
fdivl
jecxz
fistps
adcb
loop
in
dec
and
aam
mov
sbb
push
rclb
stos
cmpsb
or
pop
sub
mov
jae
fdivrl
popa
pop
cmp
call
and
int3
arpl
testl
int3
pushf
ret
push
lock
sbb
arpl
xchg
rcrl
js
mov
pop
push
test
lret
sub
adc
pop
add
sbb
aas
ja
int
inc
mov
sub
mov
sub
push
mov
insl
aad
insl
ficomps
fldcw
loop
dec
pusha
sub
push
ljmp
jae
pop
cmp
xchg
lret
add
and
xlat
cli
aad
idivl
int3
and
out
sub
push
stos
in
cmp
sub
fwait
lods
inc
arpl
push
shl
hlt
xchg
cmp
test
push
roll
scas
inc
repz
push
fisubs
inc
xor
add
pop
jl
imul
jle
mov
jae
mov
push
call
dec
add
outsl
add
imul
ss
add
lods
xchg
mov
inc
mov
adcb
repz
dec
sub
pop
push
inc
push
pop
ljmp
dec
jmp
push
pushf
popf
arpl
lock
inc
sub
mov
mov
dec
push
sti
or
fs
stos
jg
in
jmp
mov
xchg
push
das
jno
xchg
add
mov
dec
pop
xchg
cmp
repz
lahf
sbb
orl
lret
sbb
or
dec
in
add
push
out
mov
or
movsl
js
jbe
mov
in
or
sbb
dec
and
add
repz
or
loop
cwtl
add
cmp
xchg
xchg
aas
inc
mov
mov
adc
fimull
arpl
pop
mov
fs
ficoml
jle
filds
aaa
jae
int3
xchg
sub
push
roll
sub
fs
fs
fsub
mov
mov
mov
lods
and
push
mov
inc
cmpsl
lcall
push
jb
pop
or
cli
out
clc
stos
jnp
lret
inc
adc
lock
lock
adc
inc
inc
sbb
add
add
gs
ret
sub
lea
pop
sub
clc
jge
xchg
mov
stc
and
shr
sub
mov
cmc
fisttpl
or
fistps
outsl
movsl
xchg
dec
xor
ret
adc
xchg
xchg
je
sub
pushw
inc
fimull
pop
push
xchg
cli
in
cmpsb
aas
stos
shrb
sub
btr
jno
insb
out
ss
jns
das
push
adc
insb
aas
xchg
pop
cld
mov
mov
xchg
cltd
xor
movsl
enter
mov
jae
loope
pop
fdivrl
dec
pop
outsl
or
test
pusha
mov
cltd
push
fucom
xchg
adc
mov
xor
sbb
push
daa
lea
or
xor
lret
repz
and
push
sahf
cmp
adcb
daa
mov
inc
jmp
das
xchg
leave
arpl
dec
push
mov
negl
fldcw
fwait
pop
imul
test
push
rclb
push
mov
aas
sub
jae
fldt
pop
dec
div
xchg
inc
pop
adc
test
xor
and
push
push
adc
mov
loop
push
and
into
xor
das
movsl
repz
test
call
into
cmpxchg
out
sub
inc
cwtl
das
push
roll
fsubr
das
add
mov
lcall
cmp
add
icebp
test
ja
popf
lods
push
jae
fidivrs
sahf
mov
jae
mov
xor
icebp
ss
add
lods
xchg
mov
dec
mov
adc
adc
idivl
in
mov
sti
xor
inc
xchg
in
mov
and
test
mov
mov
outsb
je
test
or
popa
mov
cmp
loop
leave
sub
jbe
sbb
jmp
ficomps
jmp
dec
mov
mov
push
lods
jp
jmp
cmpl
jecxz
es
les
cmp
ret
and
lds
fcom
dec
sub
cmp
add
pop
cld
and
adc
aad
mov
nop
inc
repz
lret
jp
pushf
adcl
pop
jl
xor
in
push
test
push
mov
lret
cmc
out
imul
xchg
mov
aas
xlat
mul
jle
mov
out
orb
xlat
das
jl
pop
push
mov
dec
test
call
inc
gs
imul
test
rolb
incb
lds
testl
test
ljmp
jmp
pop
stos
insl
adc
cli
add
fcomps
hlt
mov
rorl
or
sub
aas
outsb
xor
stos
dec
in
ficoml
jmp
mov
push
in
fisttps
mov
xchg
lds
sub
into
push
sarl
mov
cmp
sbb
mov
test
jl
or
adc
aas
rol
fs
pop
adc
test
jb
inc
int3
xor
ja
daa
push
dec
int3
ss
js
cld
pusha
pop
sub
idivb
out
xor
xchg
ljmp
bnd
sti
scas
mov
aas
lods
inc
mov
fidivl
pop
push
sub
inc
fmul
jnp
lea
pop
mov
xor
add
test
pop
sub
sub
xor
cmp
push
divb
pushf
cs
in
cld
aas
in
and
mov
inc
dec
cmp
inc
and
mov
xor
insb
xor
mov
insl
mov
jne
pop
test
push
stos
xchg
sbb
push
jmp
imul
inc
jge
ds
movsb
ret
enter
popa
mov
fwait
and
cmp
mov
or
mov
mov
mov
adc
adc
mov
scas
adcb
mov
xor
cmc
xor
fstps
mov
inc
mov
mov
gs
jns
data16
and
dec
stc
mov
sub
nop
xor
pop
cmpsb
fldt
fdivrs
cli
xor
daa
mov
cmp
mov
push
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
and
test
pop
shrb
int
push
fisttpl
pop
add
cmp
ss
ss
movnti
mov
xchg
xchg
mov
xlat
xchg
mov
outsb
xor
and
aaa
push
lea
mov
adc
cmp
sub
push
les
test
pop
or
lds
stos
xchg
stos
cmp
mov
cwtl
lods
inc
sbb
mov
lds
loop
ljmp
cmpsl
xlat
adc
adc
lret
gs
mov
fidivs
ja
pop
dec
pop
mov
cmpsb
xchg
imul
mov
loope
add
fwait
lea
popf
jae
into
adcb
cs
daa
inc
rol
add
ret
cwtl
push
jne
inc
sahf
insl
sub
clc
sub
xor
imul
sbb
loope
push
or
xchg
in
dec
or
repnz
int
jle
add
mov
mov
cmc
jbe
ljmp
fs
or
and
sub
mov
add
sub
stos
mov
fisubs
dec
inc
sub
sub
or
lock
and
push
fistl
arpl
dec
movsl
pop
jno
xchg
lock
lods
jne
sti
inc
sub
icebp
sbb
add
cld
sbb
arpl
nop
adc
push
mov
mov
sub
dec
and
inc
stc
inc
push
rorl
mov
jmp
or
test
mov
cmpsb
jno
test
and
rolb
add
inc
or
subb
or
test
and
inc
cmp
mov
loope
clc
sarl
ret
xchg
add
mov
in
stc
xchg
dec
fisttpll
icebp
mov
push
cmp
mov
jno
pop
mov
test
push
call
xor
xor
push
push
push
cmp
xor
shlb
pop
push
lods
mov
sti
jge
mov
call
adcl
cmp
mov
xchg
add
fistpl
pop
push
sub
sbb
jle
cmpsl
or
inc
xor
ds
out
jl
int3
xor
mov
inc
lret
mov
pop
pop
inc
jg
out
aaa
dec
lock
cmp
sbb
mov
adc
loope
lret
adc
jp
fisubrs
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
or
mov
dec
dec
mov
sbb
jb
sub
dec
add
xor
mov
pushf
ja
push
roll
shrl
into
fwait
sbb
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
mov
lods
daa
mov
hlt
rol
push
std
flds
xor
ljmp
repnz
bound
sub
sub
dec
dec
fsub
mov
bound
movsl
int
jge
mov
sub
pop
push
and
sub
jmp
ficompl
mov
sahf
pop
and
add
addr16
cmp
es
pop
scas
pxor
ret
sti
mov
leave
lock
jl
das
dec
iret
shl
idivl
outsl
outsl
int
adc
scas
jmp
pop
cmpsb
ret
jns
mov
popa
jge
outsl
pop
or
popf
rcrl
pop
insb
push
inc
inc
or
sub
movsb
cmc
mov
lea
mov
fdivs
mov
add
test
cli
insl
mov
mov
jns
push
xchg
xor
flds
sbb
add
dec
mov
cs
sbb
shlb
push
daa
push
ficoms
push
insb
jg
xchg
loope
cmp
into
bound
mov
push
lret
arpl
cwtl
divb
adc
and
push
xchg
test
aam
jne
inc
dec
jg
enter
into
mov
cmc
test
fidivrl
les
pop
mov
sahf
inc
xchg
dec
inc
sarb
clc
jo
test
dec
add
pop
xor
jnp
or
test
aam
sahf
cmpsb
sub
mov
fists
out
cmp
sbb
sti
mov
in
and
aas
lahf
es
dec
loope
jae
dec
mov
cmp
in
js
mov
shl
jae
fcomi
sbb
add
call
les
and
into
cli
adc
jno
sbb
sbb
daa
adc
rorb
dec
sbb
push
fmul
adc
sbb
pop
test
push
stos
lea
aam
mov
push
sub
mov
fildll
push
sahf
jns
out
dec
in
mov
or
push
dec
add
add
dec
cmpsb
push
mov
jne
insl
push
dec
xchg
shlb
je
sub
push
idivl
jle
movsl
je
and
sarl
cli
repz
push
adc
add
lea
rcr
mov
jne
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
mov
jle
das
xchg
es
and
shrl
ret
dec
sbb
jle
push
xchg
mov
pop
adc
adc
mov
mov
jle
mov
inc
jge
pop
rcrb
adc
cmp
adc
sub
add
data16
aas
mov
notb
stos
subl
push
adc
mov
sbb
sahf
jb
and
mov
shlb
add
scas
pop
or
pop
mov
pop
testl
push
xchg
pushf
cmpsl
inc
imul
bound
jnp
adc
mov
rorl
cmp
pop
inc
shlb
mov
xchg
clc
dec
mov
je
mov
adc
push
loopne
push
cmc
imul
pop
mov
pop
int3
mov
test
xchg
fistpl
inc
lods
fisttpll
imul
jo
insl
das
fidivl
adc
inc
pop
add
xor
dec
push
cmp
inc
cmpsl
negb
and
xchg
pop
movsb
pop
push
sahf
sub
xchg
sbb
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
aad
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
cmp
mov
je
fxch
push
test
fistps
les
pop
sbb
clc
mov
jns
gs
jmp
or
enter
mov
sbb
sub
jnp
inc
clc
dec
pop
movsl
test
inc
gs
mov
out
jns,pt
outsl
adc
out
adc
add
push
mov
sub
add
ret
xchg
add
and
mov
mov
fsubr
inc
sbb
enter
inc
gs
rcrb
dec
in
rcl
dec
sub
sub
and
cmp
pop
in
adc
and
xchg
lods
lcall
and
ljmp
shll
add
add
cmp
mov
inc
int
sbb
cmpb
push
movsl
mov
pushf
in
sub
arpl
rcll
pop
push
in
jle
iret
dec
xchg
mov
push
sarl
in
movsb
mov
cli
testl
insl
dec
xchg
aam
jne
insl
jb
sahf
enter
in
in
xchg
jnp
ret
subb
outsl
aad
js
jle
mov
jge
push
or
scas
add
popa
fsts
mov
dec
cwtl
loopne
aam
inc
addr16
fwait
xor
out
jae
lock
mov
cmpsb
arpl
clc
xor
std
bound
mov
push
adc
jg
clc
pop
nop
sub
jmp
inc
mov
xchg
pop
push
fdivl
orl
mov
repnz
add
mov
mov
mov
pop
sti
pusha
aas
js
push
shl
xor
int
inc
into
push
mov
mov
xor
mov
sahf
xchg
jmp
test
mov
popa
xchg
mov
xchg
flds
pop
xchg
shll
sub
xchg
fistpl
or
mov
xchg
movsl
add
jge
imul
inc
std
mov
add
pop
cmpsl
pop
insb
ja
xor
xor
jmp
pushf
fdivrs
and
repnz
pop
leave
sbb
pop
mov
out
inc
scas
jbe
cltd
and
mov
shl
idivl
das
incl
scas
loope
sti
jnp
fwait
jae
fidivrs
lcall
test
jo
shll
or
or
push
andl
es
and
andl
inc
xchg
sbb
xchg
scas
arpl
mov
and
in
mov
lea
mov
mov
pushf
mov
mov
sahf
jle
sbb
lret
subl
mov
mov
daa
or
adc
xchg
pop
popf
fistps
pushf
cmp
mov
or
sbbl
jmp
jns
push
push
ja
nop
test
repz
lea
clc
mov
das
pop
icebp
sbb
cmp
sti
daa
sbb
cld
rolb
test
push
sbb
jle
jl
xor
insb
movsl
pop
push
outsl
ja
sbb
loopne
pop
outsl
jae
pusha
es
hlt
movsl
call
repz
data16
jecxz
fwait
jne
hlt
pop
das
orb
ds
adc
fisubrs
push
dec
mov
lcall
mov
mov
popf
je
sarb
dec
cmpsb
push
pop
add
push
cwtl
xor
out
ja
int
mov
sbb
cmp
push
negb
in
arpl
mov
jg
fadds
push
push
mov
sub
jne
adc
cmp
sub
hlt
shlb
or
adc
aad
push
mov
mov
faddp
mov
aam
out
jns
dec
adcb
jo
lods
xchg
roll
leave
push
jae
fisttps
clc
xchg
cmp
and
cmpsl
xchg
scas
push
mov
add
in
inc
stos
xchg
stos
loopne
xor
or
scas
mov
adc
xor
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
cltd
push
fstpl
sbb
xchg
xor
sbb
push
daa
int
adc
jbe
fwait
movsb
pop
or
mov
fdivrs
adc
sbb
xor
and
daa
xor
mov
push
or
sub
or
mov
test
sub
mov
outsb
xor
and
xor
jno
pop
cmp
push
and
adc
inc
cmp
ficompl
sub
sub
es
pop
inc
inc
pop
push
inc
std
pop
mov
add
xchg
lret
and
mov
or
mov
pop
jl
pusha
test
ficoms
cmp
popa
jns
into
xor
xor
inc
or
es
or
push
lret
clc
aaa
jge
push
dec
mov
sahf
dec
dec
aam
inc
addr16
pushf
xor
fcom
push
fdivrs
ja
mov
lahf
jne
js
call
cmpsb
inc
cltd
pop
lds
orl
inc
and
mov
shr
fistl
push
lods
adc
arpl
adc
call
push
movsl
repz
jne
les
cmpl
sbb
imul
cmp
adc
mov
and
bnd
fldcw
lret
loopne
ret
sbb
xchg
mov
inc
mov
lds
cli
xor
and
sbb
xchg
enter
loopne
sbb
pushf
mov
adc
iret
insb
rcrb
pop
sub
out
pop
loop
dec
xorl
mov
push
es
dec
push
sarl
xchg
testl
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
call
pop
push
repz
fidivrs
jnp
mov
pop
into
cmp
loope
rcll
inc
inc
fidivrs
fpatan
leave
sbb
add
movsb
jne
mov
daa
popa
mov
sub
pop
sub
jbe
ficoms
or
jg
outsl
mov
out
mov
je
mov
imul
aad
mov
imul
jle
sbb
mov
sbb
loop
and
lahf
xchg
rorb
sahf
mov
ja
lds
negl
addr16
dec
imul
sar
sbb
insl
cwtl
and
cmp
dec
jg
enter
lods
xchg
das
cmpsb
int3
sub
add
cmpsl
jg
mov
fnsave
add
jns
jae
jmp
add
out
stc
or
fwait
imul
xor
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
mov
jle
das
xchg
es
and
shrl
ret
dec
sbb
jle
push
xchg
mov
pop
adc
push
lods
dec
pop
mov
filds
inc
jb
call
f2xm1
inc
or
dec
sbb
mov
arpl
ret
inc
inc
xchg
dec
les
test
aaa
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
les
je
sbb
add
jo
imul
xchg
shlb
sub
fs
rcrl
dec
pushf
push
jno
cmp
jmp
sub
int
popf
xchg
cmp
das
ss
or
repnz
add
cltd
and
push
leave
xchg
pusha
iret
shl
idivl
pushf
out
cs
dec
pushf
lods
fists
dec
push
enter
std
mov
mov
xor
into
add
xchg
ss
push
andl
nop
nop
and
add
xor
ja
cs
fwait
test
dec
lods
les
pop
inc
cmpsl
lcall
mov
cmp
and
repz
test
and
push
ss
xor
cmp
mov
mov
sub
cmpsb
in
mov
or
fisubl
cmp
inc
push
inc
inc
fistpll
jae
jns
fwait
cmp
stc
mov
shlb
test
icebp
fiaddl
dec
movb
add
pop
inc
mov
mov
fstpl
icebp
xchg
leave
jg
pop
inc
mov
repz
sti
cmp
adc
jmp
and
add
push
aaa
leave
inc
fcoms
xor
es
addl
add
pop
push
ja
xchg
ss
inc
out
mov
out
cmpsl
dec
sub
xchg
mov
jnp
leave
lahf
jmp
daa
and
add
inc
out
or
arpl
nop
es
sahf
je
loope
pusha
pop
sbb
ret
jle
inc
ret
push
sahf
sub
mov
sbb
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
aad
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
add
iret
push
test
fistps
outsl
movsl
xchg
dec
xor
ret
adc
je
sub
data16
mov
mov
mov
xchg
inc
and
mov
sahf
pop
and
sub
sbb
mov
adc
sub
mov
scas
popl
mov
mov
ds
push
mov
xchg
scas
out
jp
mov
loopne
add
cltd
call
inc
fisttps
dec
sbb
add
add
push
push
shll
xchg
or
sub
jo
push
mov
push
test
pop
movsl
pop
inc
sahf
cmp
fbld
stos
into
aad
xlat
cmp
sbb
stos
dec
les
pop
adc
mov
ret
xchg
movsb
sbb
gs
sub
loop
lret
push
inc
push
push
insl
inc
push
pop
inc
jb
dec
inc
add
lahf
sbb
orl
les
sbb
or
dec
incl
lds
adc
lcall
push
js
jbe
mov
in
and
sbb
dec
and
add
repz
or
loop
cwtl
add
cmp
xchg
xchg
aas
inc
mov
jno
pop
icebp
fs
lcall
inc
fcoml
cmp
pop
pop
outsl
lret
mov
in
jle
jns
jecxz
arpl
in
add
xor
outsb
add
sbb
and
xor
inc
in
mov
push
test
and
cmpsl
sub
out
std
sbb
jo
and
daa
adc
orb
movsl
mov
jle
sbb
cwtl
jmp
mov
xor
mov
xchg
ret
push
movsl
adc
xchg
jp
mov
cmc
mov
std
cmpsl
out
pop
xor
xchg
xor
inc
pop
jae
lret
nop
sbb
push
dec
jl
rcl
lcall
push
int3
fisttpll
xchg
dec
ficoms
lea
ljmp
insl
popa
or
or
add
dec
addr16
mov
sub
mov
dec
mov
push
lods
shrb
fisttpl
jg
lahf
adc
out
stc
in
jns
outsb
iret
gs
loop
repz
xchg
enter
jmp
inc
dec
mov
subb
and
idivb
sbb
inc
sahf
sarl
add
adc
loopne
std
into
lcall
mov
cmovge
lcall
jg
aad
pushf
ret
pop
mov
hlt
mov
arpl
sub
stos
lds
push
clc
sub
lcall
and
lret
in
or
repnz
bound
sub
sub
dec
dec
fsub
ja
or
jmp
push
push
daa
scas
inc
push
rep
aam
xor
enter
pop
push
notb
add
enter
rcrb
into
cmc
cwtl
fwait
mov
pop
mov
pop
sub
pop
cld
repz
out
das
in
rorl
mov
fsubl
addr16
pop
push
and
aam
daa
pop
mov
ss
push
inc
xlat
mul
jle
mov
cwtl
inc
data16
or
jb
leave
data16
daa
ss
stos
jae
nop
and
push
or
mov
aam
les
add
mov
js
sti
repz
seta
dec
dec
in
mov
adc
enter
mov
sub
mov
xchg
xchg
mov
inc
orl
xchg
push
aad
and
lock
out
pusha
in
dec
mov
jno
cs
inc
or
fxch
push
dec
in
sbb
fmuls
cmpsb
mov
fists
movsl
push
roll
add
adc
fwait
xchg
fcoms
pushf
and
or
cmpsl
push
pop
jno
in
mov
js
inc
mov
xor
sub
push
fisttpl
adc
repnz
xchg
out
mov
stos
adc
fidivrl
jp
pop
hlt
xchg
rorl
xor
js
call
inc
iret
es
inc
lods
fnstenv
mov
push
iret
sarb
add
xchg
xor
add
cmpsb
mov
xor
dec
xchg
sub
cmpsl
lcall
mov
movsl
test
add
xchg
fwait
lahf
mov
jns
popf
rcrl
sub
addl
push
adc
mov
sbb
xchg
sbb
mov
dec
or
inc
incl
xchg
xor
in
mov
jmp
shll
pop
cmp
inc
mov
mov
movsb
xchg
sub
pop
lcall
ss
mov
aas
stos
shrb
sub
btr
outsl
mov
lock
insl
mov
js
inc
int3
or
mov
dec
mov
cltd
out
xor
dec
aam
fs
mov
adc
jbe
je
pop
lods
addr16
fidivrs
pop
sub
jl
xor
hlt
icebp
adc
stos
les
aas
outsb
add
jle
nop
inc
fs
les
shrl
lds
cmp
jle
mov
inc
test
imul
and
clc
push
aam
cmpsb
add
stc
loop
mov
aas
pop
dec
inc
inc
push
decb
sbb
subb
aas
movsl
hlt
imul
test
mov
ljmp
lret
fstl
out
cmp
insl
xchg
aam
loop
pushf
inc
adc
xchg
mov
push
and
adc
push
mov
js
test
sub
es
rcrb
mov
fwait
ljmpw
pop
jb
add
inc
cmpl
fists
mov
call
repz
inc
insl
out
popf
pop
adc
mov
daa
sub
or
inc
mov
je
or
aaa
imul
and
hlt
cwtl
pop
bound
mov
subb
xor
push
inc
mov
sbb
scas
iret
fucomip
in
xor
jle
insl
mov
loop
je
add
outsl
hlt
jmp
decb
pop
lock
clc
pop
enter
int3
inc
push
cltd
icebp
testb
mov
mov
cmp
xor
ljmp
xchg
xor
xor
ret
dec
pop
cwtl
adc
or
and
mov
xchg
aam
xor
dec
popa
push
std
out
add
push
inc
xchg
fdivl
adcb
les
sti
test
inc
jg
sbb
and
push
lret
inc
mov
aas
fisubs
mov
jge
dec
jp
inc
cwtl
les
lds
pop
pop
ret
adc
and
jne
sub
test
dec
fwait
xor
mov
aaa
test
add
inc
out
dec
mov
cmpl
xchg
data16
push
push
rcl
hlt
cmp
or
sub
sarl
ret
xchg
add
in
call
jnp
dec
fisttpll
icebp
mov
push
cmp
mov
jno
pop
mov
enter
stc
cmpl
ss
lea
cmpsb
mov
aam
test
sub
movsb
pop
sub
cld
mov
mov
cmc
cmc
fcmovnu
mov
imull
fs
xchg
daa
push
push
jl
lret
rcrl
mov
xchg
leave
xchg
inc
mov
push
into
fmull
inc
sbb
cmp
enter
mov
cli
icebp
sbb
xchg
js
mov
pop
cs
addl
xchg
fildl
push
mov
sub
shll
out
cmpsl
push
jecxz
popl
mov
popf
jae
into
cmpb
jns
hlt
and
orl
fcoms
inc
pop
ljmp
jle
push
dec
xchg
adc
or
subl
clc
cmp
adc
cmp
subb
lock
leave
lds
sub
imul
push
adc
jb
lcall
lret
pop
arpl
lahf
aam
and
adc
cmp
gs
incl
mov
in
push
outsl
test
ljmp
pop
pop
je
mov
sbb
lock
les
dec
add
aad
shrl
pop
shr
sbb
push
bound
cld
and
scas
push
inc
clc
or
fildl
bound
adc
jge
xchg
cmc
mov
mov
mov
ss
mov
test
xchg
fistpl
les
push
shll
or
inc
negl
mov
push
dec
sahf
mov
push
cmpb
pop
adc
push
xchg
xor
int
jb
lahf
inc
movsb
push
cmc
cmp
cmc
mov
pop
dec
push
dec
mov
mov
loop
jge
mov
push
and
js
adc
and
mov
dec
sbb
lcall
jge
push
bnd
lcall
lret
push
mov
ljmp
fidivl
jecxz
test
inc
sbb
stos
jle
imul
adc
lods
fiadds
push
cmp
push
mov
int3
xor
repz
dec
add
jae
or
add
jmp
mov
rclb
sarb
out
sbb
cmpsb
fldt
push
iret
cli
ss
lds
mov
or
pop
fsubl
mov
jle
sbb
loopne
jns
hlt
jl
out
jg
fdivs
mov
imul
sbb
xor
clc
adc
add
incb
mov
cmp
lea
jbe
push
mov
cmp
dec
mov
insb
push
sub
push
mov
mov
xchg
test
push
stos
lea
ljmp
inc
bound
cmpsb
push
lea
cmp
lds
subb
adc
or
sub
xchg
das
cmpsb
enter
lods
mov
scas
aam
cmc
mov
jbe
cmpsl
jne
gs
outsl
cmc
out
fistl
mov
xchg
fwait
add
mov
lock
fidivrs
inc
mov
addr16
rcll
test
xor
cmp
imul
popa
pop
inc
cmp
cltd
pop
insl
mov
std
bound
enter
enter
rcll
add
ds
pusha
scas
fdiv
lods
imul
leave
shll
xchg
mov
jp
nop
push
decl
shll
push
dec
push
sbb
aam
jmp
popa
shrl
loop
les
stos
cmp
icebp
mov
daa
push
mov
mov
insb
push
fsubrs
data16
sbb
in
push
push
adc
push
lods
fldt
ljmp
ret
xchg
out
mov
fildll
push
sahf
jns
loope
pop
lods
push
jge
and
push
pop
bound
jg
out
out
out
inc
xor
push
hlt
mov
mov
mov
or
mov
imul
add
xor
loop
push
sub
xor
pusha
cmp
das
rorl
rcrb
sbb
mov
test
add
cmpsl
cmc
jmp
scas
xchg
out
cmpsl
inc
lret
xchg
xor
lret
xchg
and
testb
test
and
andl
test
imul
inc
mov
ds
xor
adc
inc
lods
lock
jo
mov
dec
pusha
jae
testl
or
adc
rep
je
test
lods
ret
mov
add
cmc
or
cwtl
lret
sbb
jmp
ficomps
adc
push
out
mov
dec
push
fcompl
push
cmp
fwait
inc
cs
mov
mov
push
dec
in
clc
popa
mov
pop
enter
insl
or
xchg
mov
int
xor
mov
mov
testb
loope
movsb
fstl
fdivl
jg
mov
jo
loop
add
dec
inc
add
subl
dec
std
adc
les
inc
movsb
push
rcrl
jb
mov
ret
icebp
cld
mov
mov
pop
insl
lahf
outsl
aas
adcl
int3
clc
data16
bound
jbe
xchg
xchg
aaa
rorb
dec
adc
lock
or
dec
adc
lcall
and
push
inc
push
sbb
and
add
xor
or
mov
adc
mov
icebp
nop
jle
sbb
push
mov
push
inc
pushf
dec
and
and
stos
lea
mov
daa
jae
pushf
pusha
push
popf
dec
movb
inc
shlb
inc
roll
xchg
mov
mov
mov
fucompp
xchg
outsl
or
movsb
std
cli
in
cltd
fmull
cmp
jle
jp
add
jno
sub
int
les
and
push
test
xchg
adc
es
cmpsb
sub
push
push
inc
outsl
ja
fucomip
mov
scas
loopne
jp
into
out
stos
mov
aas
xlat
mul
mov
lahf
clc
cwtl
andl
pushf
inc
addr16
or
dec
cmpsb
dec
idivl
xor
xor
adc
and
push
inc
push
push
cltd
sarl
sub
inc
movl
lods
adc
jmp
or
push
xchg
fisubl
ja
xor
cmp
divb
fst
fisttps
aad
test
mov
mov
stc
inc
repz
adc
sar
xor
xchg
inc
and
test
xchg
lcall
inc
xchg
fsts
loopne
xchg
dec
cltd
lods
je
les
cmp
push
sub
and
in
jge
xchg
mov
jnp
or
add
das
inc
iret
shl
ja
std
outsl
addr16
lcall
fistpll
mov
call
cmc
jmp
mov
inc
mov
out
xor
gs
es
or
inc
and
or
sahf
imul
adc
sbb
mov
movsb
sub
les
xor
or
inc
xchg
jge
ret
stos
and
std
mov
xor
inc
push
inc
mov
mov
dec
gs
jle
adc
fimuls
push
imul
dec
and
lret
ds
jae
iret
sahf
jnp
imul
mov
xchg
or
sbb
pop
rcr
je
pushf
cmpsb
int3
sbb
adc
mov
jmp
cltd
movsb
clc
add
xor
sub
push
cmp
or
or
push
xchg
add
mov
out
test
xchg
cwtl
inc
stos
adc
sbb
jp
fst
jge
mov
mov
out
ja
fisubs
mov
ud1
call
stc
adc
enter
pop
mov
subb
pop
dec
adc
lock
js
mov
stc
nop
rclb
rolb
repnz
test
test
in
xor
ret
push
and
rclb
inc
mov
sub
mov
cltd
mov
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
leave
jecxz
arpl
aaa
jl
or
add
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
pop
inc
aaa
push
jae
mov
jno
jb
cmp
dec
adc
les
pushf
jne
jle
fimuls
inc
shlb
test
cs
dec
cmp
or
dec
cli
je
xchg
es
jo
pop
cmp
push
sub
mov
js
std
jecxz
inc
out
mov
jecxz
cmc
jg
inc
data16
rolb
push
fdiv
jmp
fs
jae
push
dec
adc
mov
push
inc
cmpsl
loop
int
lds
lahf
inc
movsb
push
sbb
mov
fwait
lahf
pop
stc
sub
lock
push
or
jo
cs
mov
inc
ljmp
fwait
mov
fst
dec
sub
and
dec
pop
inc
cmp
jnp
mov
and
mov
je
icebp
add
push
cmp
sbb
outsb
push
inc
sbb
or
fiaddl
push
xchg
aam
xor
dec
popa
push
into
and
das
cmpsl
fwait
es
test
shrb
mov
mov
fs
adc
loop
cld
lock
add
loop
ds
scas
dec
repz
ljmp
out
out
mov
fwait
adc
dec
xchg
xor
movsb
pop
push
scas
fcomp
pop
sarb
ret
jp
gs
out
call
popf
xchg
mov
negb
mov
in
xor
cwtl
sbb
xor
popa
jo
ret
orb
ss
xor
fistl
inc
sahf
cmp
fisttps
inc
push
out
or
addr16
fcoml
xchg
leave
arpl
cwtl
pop
push
jno
rclb
mov
test
push
stos
lods
push
imul
mov
pop
sbb
xor
cli
fwait
lret
xlat
cmp
and
dec
cmp
mov
mov
xor
add
xchg
fstps
call
add
aas
nop
dec
ficomps
int
xor
and
dec
or
popa
cmp
push
sbb
mov
dec
xor
push
push
mov
pop
repz
push
lods
shrb
aas
fisttps
stc
in
pop
icebp
xor
into
pop
or
and
adc
xor
shr
loop
or
and
jne
push
push
xchg
adc
xchg
inc
cmpsb
imul
cmp
xchg
aam
pop
inc
mov
add
loop
dec
cmp
hlt
movsl
mov
jg
add
mov
int
inc
sub
cmp
lret
stc
and
sarl
mov
sub
movsb
xorb
fs
pop
add
decl
push
pop
adc
test
dec
mov
push
jge
sub
loope
test
enter
lods
xchg
das
cmpsb
adc
jno
in
mov
sahf
fdivrs
arpl
cmp
or
int
out
ret
jg
out
and
shl
xor
iret
shl
aaa
mov
mov
notl
call
movsb
test
add
cmc
dec
mov
bound
cmp
icebp
mov
jge
jg
addl
ret
add
push
aad
lret
gs
loopne
cmc
mov
add
jge
sub
pop
movsl
pop
in
pop
xlat
divb
incb
test
add
in
mov
jl
mov
cltd
je
lock
insl
leave
cmc
cld
or
jmp
pop
test
dec
mov
pop
mov
aad
mov
add
imul
movsl
inc
inc
jg
into
ret
and
inc
ds
arpl
inc
rorb
enter
test
xchg
xor
push
mov
cmp
dec
les
dec
add
aad
shll
pop
shr
adc
iret
pop
cmpb
inc
fs
sub
and
scas
push
inc
clc
or
fildl
bound
adc
jge
xchg
cmc
mov
mov
mov
ss
push
mov
xlat
mul
jle
mov
cwtl
inc
sbb
movl
xchg
in
scas
dec
sbb
adcb
dec
pushf
mov
adc
and
int3
inc
lds
cltd
lds
aas
in
and
imull
mov
inc
pop
adc
ret
sbb
add
ljmp
cmpsb
cltd
lods
icebp
mov
subl
les
pop
movsb
fisubrl
inc
cmc
sbb
out
push
cld
mov
bound
data16
iret
idivb
scas
pop
repz
mov
cmpsb
dec
sub
in
dec
push
and
xchg
inc
xor
call
mov
and
sub
sahf
bound
add
ja
dec
dec
daa
add
icebp
push
or
push
push
xor
lret
subb
mov
out
out
fs
subb
imul
clc
int3
pop
into
mov
cmp
shrb
add
ficoml
popa
dec
sbb
cs
dec
popa
pop
fwait
pop
push
mov
outsl
mov
rclb
mov
sbb
mov
jns
roll
mov
jecxz
movsl
mov
cltd
je
dec
dec
mov
or
addr16
mov
xor
sbb
cmpsb
repnz
clc
xchg
test
movsl
adc
push
enter
popa
inc
push
mov
imul
movsb
fbld
dec
inc
mov
add
push
outsl
sbb
jg,pn
out
in
test
xchg
aam
jne
insl
dec
pop
cltd
enter
lods
mov
test
in
scas
sub
fisubl
in
out
gs
out
sub
int3
pop
inc
mov
and
add
in
cmp
scas
xchg
mov
scas
scas
mov
xor
jbe
jae
test
popf
icebp
lfs
xchg
xchg
jle
push
jo
dec
in
out
test
xchg
mov
mov
faddl
jb
mov
mov
ret
dec
sbb
jle
push
xchg
mov
sbb
add
lahf
stos
or
mov
pop
dec
sbb
jns
pushf
rcrb
mov
jle
add
arpl
lcall
sti
popf
ficoms
scas
scas
imul
and
adc
inc
cmp
ja
mov
xchg
addb
dec
enter
arpl
push
dec
add
addb
imul
fwait
lret
push
sbb
dec
push
faddl
mov
or
mov
incl
fcoml
and
cmpsb
or
sub
cmc
inc
lahf
mov
stc
mov
addr16
sbb
movsl
cli
jg
inc
insl
in
imul
pop
call
jb
fwait
lea
into
add
and
rorb
ss
int
mov
mov
push
andl
add
and
push
inc
push
pop
cltd
sbbl
imul
sub
lea
and
xchg
xchg
inc
test
cld
push
pop
lock
test
iret
imul
pop
xor
sbb
cmpb
lahf
lcall
repnz
imul
pop
fucom
cli
mov
mov
in
bound
ds
data16
or
cmp
mov
push
mov
aad
negb
mov
or
lods
shr
sbb
adc
pop
adc
xor
icebp
jle
scas
pxor
cld
repz
out
ud0
lock
jl
outsl
das
sub
lock
inc
in
outsl
outsl
call
push
rcl
test
dec
fidivrs
mov
icebp
in
mov
jmp
cli
test
and
mov
pop
je
mov
push
and
imul
cltd
push
test
lods
int
clc
popa
ret
in
mov
outsb
push
pushf
add
mov
jmp
mov
lds
bound
push
dec
or
adc
dec
mov
popf
pushf
or
lds
push
cld
stos
jb
mov
mov
adc
mov
mov
jno
adc
movsb
bound
xchg
add
cmp
pop
push
sub
mov
mov
leave
xchg
inc
push
fadds
mov
sbb
cmovns
and
aaa
js
xor
jle
rorl
scas
outsb
repz
call
xchg
cmpsl
cmp
cmp
cs
push
in
imul
adc
iret
subl
pop
fdivrs
gs
push
adc
aam
call
cmp
cmp
sbb
movsb
xor
mov
js
push
mov
repz
inc
lahf
pop
cltd
dec
call
xor
sub
xor
jmp
fistpl
lret
jecxz
mov
les
rorl
mov
push
dec
shl
xor
sbb
mov
and
gs
push
inc
push
xchg
cmp
inc
insl
and
mov
adc
inc
ds
inc
ret
jnp
popa
jbe
lods
push
outsl
sbb
in
js
pusha
mov
push
mov
xchg
test
stos
movsl
inc
fmuls
dec
sub
mov
rclb
in
and
cmpsl
xchg
test
or
sub
icebp
jmp
xchg
xchg
xchg
jg
sub
lock
xor
push
jmp
fnsave
xchg
push
xabort
mov
add
std
std
bound
test
leave
addb
xchg
xchg
les
cltd
sahf
les
adc
mov
cld
mov
popf
xor
cs
aas
jo
pusha
or
adc
jno
decl
out
mov
fs
adc
ret
jb
dec
push
pop
repnz
jle
fldt
mov
pop
ficoml
imul
xchg
shlb
push
cmc
mov
fsubr
mov
outsl
cmpsl
je
or
jl
daa
dec
inc
or
cld
xor
and
fisubl
pop
outsl
les
jmp
lods
movb
add
jb
sahf
pop
mov
lock
pop
gs
lret
cmp
enter
sar
mov
adc
xchg
imul
cs
xchg
cmpsl
out
movsl
lahf
jno
outsl
xlat
icebp
test
ds
jecxz
dec
cwtl
jge
aaa
sarl
lahf
pop
sarl
mov
repnz
js
or
and
in
cmc
xor
push
adc
andb
pop
test
lcall
adc
mov
xor
pop
and
mov
or
ret
inc
sub
push
pop
cli
or
fnstenv
push
cwtl
ds
or
mov
loop
dec
pusha
sub
jle
test
ja
aaa
lret
fucomp
jne
jp
push
movl
orl
sub
jno
or
dec
dec
pop
jb
mov
or
jnp
leave
cltd
jbe
je
int3
scas
std
stc
dec
es
jg
xchg
test
cmc
ljmp
adc
cmp
pop
repnz
and
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
pushf
test
inc
addr16
inc
stos
jae
nop
and
push
xchg
mov
xchg
and
daa
mov
xor
out
pop
xchg
sub
dec
pop
out
mov
mov
ss
adc
mov
pop
repnz
inc
mov
or
jg
adc
test
test
cmp
hlt
jp
lahf
popf
stos
mov
sbb
fcoms
mov
or
dec
gs
or
test
lea
pop
ret
sub
leave
test
mov
mov
fldcw
cld
add
addr16
fnstcw
es
das
push
es
add
adc
add
ljmp
xchg
or
test
movsb
fsubs
rclb
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
out
sbb
test
arpl
cmpb
shll
rcrl
or
jne
stos
shr
bound
adc
or
adc
fcoml
inc
jge
pop
ret
sbb
cmp
daa
xor
test
jb
jnp
es
dec
mov
fstpt
out
mov
and
adc
inc
dec
pop
dec
cmp
movsb
scas
jl
cmpsb
xchg
lea
clc
dec
inc
mov
inc
inc
stos
xchg
add
ljmp
or
pop
mov
sub
arpl
adc
test
xor
shrl
dec
push
fcomps
scas
jg
fstps
popa
sbb
in
mov
adc
ds
push
adc
pushf
jmp
nop
popa
cmpl
lahf
scas
in
cli
jnp
out
mov
js
fisttps
cmpsl
jecxz
cmp
test
and
enter
sbb
xlat
mov
hlt
mov
xor
ljmp
ja
adc
imul
or
jmp
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
fbstp
push
push
test
pop
sahf
adc
and
out
cmpsl
adc
cmp
std
sahf
jge
ljmp
inc
cs
stos
push
shlb
dec
lret
xor
dec
xorl
mov
push
or
mov
cmpsl
cmpsl
sub
mov
pop
mov
pop
mov
pop
pop
pusha
sub
push
or
fsubrs
data16
fsubs
gs
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
pop
out
enter
or
xorl
lret
fsubrs
sbb
or
cwtl
adc
inc
mov
int
clc
mov
add
cwtl
aad
into
scas
xchg
xchg
leave
cmp
mov
popf
sbb
push
int3
js
cmp
mov
outsb
and
adc
outsb
xor
ret
scas
popa
lods
fldt
lahf
jno
pop
cmp
mov
fildll
cltd
insl
inc
dec
inc
jae
lds
jecxz
pop
adc
fisubrl
mov
sub
scas
push
and
sub
inc
lahf
pop
pop
mov
xchg
mov
cmp
out
jo
sub
repz
xchg
out
sub
int3
out
movsb
andl
add
mov
stc
dec
mov
adc
dec
inc
adcl
mov
push
fmulp
mov
ret
addr16
xlat
sbb
xchg
push
and
les
inc
inc
mov
mov
stos
lcall
jle
push
dec
mov
mov
popa
in
test
xor
lahf
adc
adc
adc
sbb
mov
mov
clc
inc
mov
jmp
cmp
insb
sub
jb
test
mov
popa
ficoms
sbb
fidivs
orl
cmp
add
mov
cmc
cmp
std
cmpsl
out
pop
xor
xchg
xor
inc
pop
jae
lret
nop
sbb
push
test
jl
rcl
lcall
push
int3
fisttpll
xchg
dec
ficoms
xchg
mov
ljmp
insl
popa
or
or
add
dec
addr16
mov
sub
mov
dec
mov
push
rcl
jae
pushf
lods
pop
xchg
sub
cs
stc
in
pop
leave
in
mov
mov
int3
inc
add
xchg
fs
push
xchg
cltd
adc
fadd
faddl
mov
inc
test
jecxz
xchg
aad
pop
in
adc
xchg
cltd
mov
ljmp
xchg
rcrb
mov
jp
lods
outsb
inc
or
add
insb
push
pushf
xor
outsb
aaa
and
iret
mov
sbb
js
nop
push
lcall
lods
mov
lea
push
lret
add
pop
mov
fsubs
cmp
bound
in
ss
shlb
lcall
pop
rclb
dec
jne
dec
inc
cltd
aas
stos
shrb
ret
adc
pop
mov
jecxz
or
pop
std
and
fdivrp
push
mov
jmp
gs
fisttpl
leave
ds
and
out
sbb
dec
nop
xor
movsb
jno
jp
insl
lahf
sti
fwait
pop
mov
jne
loope
sub
lds
mov
lret
dec
sbb
mov
sub
lret
addl
int3
lcall
adc
imul
test
add
mov
faddl
stos
out
inc
mov
icebp
cwtl
add
insb
adc
mov
repnz
shlb
mov
test
push
ljmp
and
adc
inc
aas
lea
jns
loope
pop
lods
push
outsl
and
repnz
xchg
popa
dec
xchg
aam
jne
insl
outsb
pop
cltd
enter
and
jae
pop
mov
inc
pop
jge
push
fs
mov
mov
cmc
jge
push
or
rcrl
and
cmp
mov
loopne
aaa
sbb
stos
xor
xchg
cwtl
lcall
jmp
push
lds
jg
jnp
out
xor
sbb
call
sub
pop
and
daa
hlt
xor
daa
jbe
or
out
mov
imul
stos
into
pop
stos
shl
xchg
inc
cmpsb
lret
sbb
adc
and
loope
inc
pushw
lods
pusha
test
sbb
mov
lock
test
iret
imul
pop
xor
sbb
cmpb
lahf
lcall
repnz
imul
pop
fucom
cli
mov
mov
in
bound
ds
data16
or
cmp
dec
mov
jge
test
lods
inc
sbb
scas
mov
push
dec
jae
in
add
sub
or
test
ret
and
jo
imul
adc
enter
test
leave
push
fidivrl
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cltd
push
es
dec
mov
mov
lcall
adc
xchg
aad
stos
ret
loopne
insl
mov
negl
scas
popa
mov
repz
fcoml
or
jmp
add
movb
xchg
and
lret
movsl
mov
lret
lahf
mov
cli
inc
lods
loope
mov
lret
push
in
add
push
pop
adc
jmp
decb
sub
testb
ret
sbb
jnp
push
cmp
mov
sbb
cmpb
test
adc
adc
mov
imul
loope
jg
enter
push
jle
lods
push
arpl
dec
mov
and
adc
jp
adc
and
insl
in
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
arpl
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
dec
dec
fstpl
je
insb
scas
lcall
add
push
push
cltd
shr
movsb
ret
es
repnz
enter
jle
insl
andl
adc
popa
sahf
cli
jecxz
cmc
add
popa
outsb
into
push
or
cmp
repz
add
push
cs
in
mov
xchg
shr
cmp
xchg
dec
xor
ret
bound
mov
and
sub
outsl
push
dec
lds
rol
mov
pop
push
cli
call
inc
add
mov
shl
xchg
cmp
ja
in
aad
xchg
sub
xchg
inc
mov
adc
adc
mov
inc
mov
jp
jge
dec
shlb
mov
inc
pusha
push
xlat
int
into
clc
int3
pop
into
cmp
cmp
shrb
add
ficoml
popa
dec
sbb
cs
dec
popa
pop
ret
pop
push
mov
outsl
mov
rclb
mov
sbb
mov
jns
push
push
inc
mov
lret
movsl
xor
xor
xor
adc
push
or
mov
mov
adc
insl
test
addr16
jp
jnp
out
xchg
mov
cmp
int
inc
rorb
push
xchg
icebp
add
inc
fsubl
cltd
rcr
nop
std
pop
adc
les
and
sub
jle
fcoml
jbe
fmull
jp
scas
ret
sub
sbb
out
push
cmc
test
adc
cmpl
cmp
add
push
dec
mov
or
daa
pop
movsb
push
push
jno
testb
ret
insb
pop
int3
jp
ja
jecxz
fistl
jns
sti
into
loope
and
dec
dec
mov
inc
inc
mov
pushf
sti
push
sbb
jbe
mov
cmp
out
jne
cwtl
mov
inc
inc
adc
pop
xchg
sbb
lret
negl
cmpsl
aam
iret
adc
dec
jnp
inc
sub
jae
add
mov
int
inc
sub
imul
lahf
xchg
xor
enter
movsb
xchg
sbb
fcomps
fnsave
pop
add
cmpsb
aad
xor
dec
inc
sub
sub
add
push
shlb
dec
lret
xor
dec
sub
cltd
enter
lret
push
inc
xchg
push
mov
mov
mov
adc
pop
mov
pop
mov
pop
sub
pop
js
inc
int3
cmpsl
dec
sbb
mov
or
stos
hlt
sbb
in
lret
ret
jnp
out
mov
loop
mov
shll
inc
outsl
sbb
lcall
test
sub
jmp
dec
imul
mov
sub
in
into
cld
pop
mov
push
fidivs
imul
xor
ljmp
mov
jnp
hlt
leave
popf
add
jp
inc
pop
adc
xor
cmp
mov
xor
leave
sbb
adc
xor
mov
pop
sahf
in
cmp
sub
aaa
jns
out
lock
sahf
jg
pusha
jbe
lods
push
outsl
xchg
push
stos
or
cmp
xchg
sub
sbb
fistpll
xchg
push
ficomps
fsub
inc
xchg
sar
pop
mov
popf
enter
js
outsl
sti
nop
adc
es
clc
mov
add
dec
test
dec
je
cmpsb
mov
dec
and
ja
aas
call
jp
mov
cmovae
pop
fs
cmpsb
jnp
fdivs
cltd
push
adc
lds
mov
jo
fstp
inc
sbb
stos
adc
nop
sub
or
jl
cmp
jo
xor
cmp
call
lds
pop
xlat
pusha
push
xchg
jle
mov
xor
adc
push
mov
dec
mov
fldt
imul
test
movsl
push
imul
lods
mov
push
sub
mov
fsts
and
mov
ret
ret
mov
fwait
scas
xchg
stos
jge
lcall
movsb
cwtl
push
mov
movsb
test
cmpsb
cmp
pop
and
movsl
adc
pop
and
fwait
jmp
stos
xor
mov
fstl
out
daa
dec
lock
jge
inc
iret
shl
ja
decl
mov
bound
xchg
ret
dec
push
xchg
xor
jb
jmp
xlat
pop
jle
pop
iret
sbb
inc
xlat
dec
xchg
lds
and
or
ret
push
adc
inc
adc
adc
lds
jecxz
call
pop
jo
pusha
mov
mov
jbe
mov
sbb
sbb
xor
dec
popl
mov
or
pop
into
push
fimuls
shl
fs
in
push
mov
xchg
inc
ret
dec
test
inc
lcall
jp
imul
or
std
cmpsl
out
pop
xor
xchg
xor
inc
pop
jae
lret
nop
sbb
push
inc
jl
rcl
lcall
push
int3
fisttpll
xchg
dec
ficoms
mov
ljmp
gs
jb
dec
imul
call
mov
mov
dec
jp
dec
aas
xor
repz
push
jae
fidivrs
lcall
mov
lahf
stc
cmpsl
leave
mov
dec
add
jle
nop
lds
dec
dec
adc
jo
mov
bound
mov
and
sub
pop
inc
pusha
lods
in
xor
pusha
jnp
cmc
dec
inc
test
cld
push
outsb
ret
sbb
inc
ds
imul
sbbl
mov
jb
dec
push
bound
push
lds
mov
and
xor
mov
je
fnstcw
inc
pop
fnstenv
jno
cld
cmp
jae
les
les
sbb
add
leave
cli
sarl
xchg
push
mov
sbbb
cmc
out
ljmp
cmp
das
push
roll
das
xchg
xor
imul
les
dec
iret
ror
jmp
scas
mov
pusha
adc
lds
mov
dec
sbb
fidivrs
sahf
lret
xlat
rorb
dec
cltd
enter
je
push
test
lds
mov
aas
xorl
pop
add
mov
rcrb
pop
jno
aad
pop
addr16
pop
push
ljmp
loopne,pt
iret
jl
in
xchg
pop
rcrl
mov
sub
out
mov
cmp
fnstenv
int
js
rcrb
sub
cmp
aaa
stos
push
insb
ror
sbb
inc
lahf
mov
lret
frstor
jmp
push
inc
ret
jnp
pop
shrl
add
add
clc
push
cmpsb
cmpsb
rcrb
sub
stos
inc
sahf
repnz
mov
xor
scas
iret
dec
movsb
ljmp
rcr
dec
cmp
mov
stc
and
cli
add
mov
push
repz
xchg
sbb
dec
mov
dec
cmp
pop
inc
std
inc
les
and
gs
fwait
pop
xchg
sti
cmp
addr16
xor
in
sahf
jmp
xchg
push
iret
sub
stos
into
pop
mov
add
push
inc
push
pop
push
test
xchg
mov
push
pop
jl
and
iret
popa
rcrl
mov
sbb
pop
int
jmp
add
out
sbb
sbb
es
aad
insl
imul
lods
fldt
mov
fistl
pop
lock
imulb
cmpsl
xchg
test
repnz
outsb
test
add
and
je
je
sub
data16
insl
push
pop
xchg
enter
lods
xchg
das
cmpsl
int3
push
mov
mov
into
mov
bound
jne
bound
das
push
roll
dec
inc
cmp
mull
mov
rcrb
xchg
xchg
or
fwait
out
jp
in
inc
insl
in
pop
sarl
jle
ljmp
xor
xchg
vcvtps2pd
pop
jmp
popa
or
jge
pop
or
test
add
mov
sub
fcmovnb
mov
les
incl
neg
jmp
jno
or
cmp
jns
pop
loopne
cld
sub
jo
flds
hlt
dec
inc
sbb
inc
xor
popa
fwait
ret
sbb
mov
mov
lds
test
sub
mov
xor
mov
std
cmpsl
jae
test
cmp
ret
add
pop
mov
and
push
stos
xchg
dec
jg
enter
mov
dec
dec
dec
jbe
mov
repnz
inc
out
into
bound
jne
xor
scas
add
loop
mov
inc
lock
out
outsl
cmp
int3
cmpsb
out
push
les
xor
enter
xchg
xchg
fiadds
xchg
or
sbb
or
pusha
sbb
mov
or
data16
inc
pushf
cmp
inc
push
es
mov
push
adc
sbb
mov
jns
shrb
gs
mov
repz
sti
push
mov
and
dec
cmc
inc
daa
adc
jno
je
dec
jo
iret
cmpsl
mov
adc
xchg
scas
insl
lret
sub
push
ja
inc
movsl
mov
sbb
jecxz
scas
aad
filds
or
in
dec
and
or
mov
cmpsb
sub
sub
std
std
inc
jnp
push
push
inc
jle
mov
cmp
dec
fs
xor
sbb
inc
bound
sbb
pop
out
ret
ret
jno
dec
push
idiv
lret
iret
jge
leave
xchg
xor
je
fidivrl
xlat
xor
cs
cmp
out
mov
into
pop
xor
scas
pusha
mov
add
pop
ret
mov
xrelease
hlt
xor
icebp
cmpsl
std
sbb
xor
mov
sbb
jb
lods
jns
dec
add
xor
mov
pushf
ja
push
roll
shrl
into
fwait
sbb
pop
dec
sbb
scas
call
and
sub
or
mov
aad
inc
sub
rcrb
sbb
fbstp
mov
es
inc
sbb
scas
mov
bound
fidivrs
lds
paddw
les
xchg
xchg
add
dec
enter
mov
push
mov
or
lods
outsb
cmp
pop
xlat
dec
add
aad
shll
pop
shr
adc
iret
pop
cmpb
inc
fs
ret
adc
js
scas
push
inc
clc
or
fildl
bound
adc
jge
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
dec
bound
jecxz
fcoms
add
andb
shrl
insb
xor
or
xorb
xor
pop
cmpsl
inc
test
mov
in
mov
mov
leave
adc
sub
lea
jg
or
and
js
pop
adc
mov
movsb
pop
lods
inc
fs
add
sbb
clc
jl
push
pop
lret
mov
lret
sar
xor
pop
jp
push
dec
pop
xchg
test
jmp
repnz
sub
mov
loop
adc
adc
stos
add
cli
in
cmpsb
aas
stos
shrb
sub
btr
outsl
mov
outsl
mov
push
mov
fildl
in
inc
or
or
in
dec
mov
repnz
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
mov
jle
das
xchg
es
and
shrl
ret
dec
sbb
mov
lcall
pop
mov
je
loopne
ja
fidivl
repnz
push
fdivs
daa
xor
enter
hlt
push
xchg
lret
add
sbb
sbb
and
inc
in
into
inc
push
fldcw
stos
lea
push
lret
mov
adc
inc
aas
adc
dec
inc
mov
lds
xchg
mov
cs
stos
push
repnz
push
push
and
xchg
dec
and
jmp
lret
arpl
mov
fidivs
pop
aad
iret
dec
push
movl
xchg
pop
xlat
cld
adc
cmp
mov
fdivs
xchg
pop
nop
jns
test
dec
mov
mov
and
cmpsb
mov
sbb
cli
xor
ss
sti
cmp
fdivrl
sti
mov
rorb
pop
xchg
enter
mov
dec
out
fstps
dec
fistpl
hlt
inc
or
push
xchg
push
jmp
ficoml
push
test
daa
jp
or
xor
or
mov
xchg
lcall
xor
sub
xchg
insl
leave
sbb
or
ljmp
repz
les
lret
sub
stc
aad
shll
movl
int
inc
rcrl
mov
pop
divb
jo
xor
sbb
or
sarb
xor
mov
add
pop
jb
lods
ret
movsb
std
jb
adc
scas
dec
pushf
jp
xor
outsb
loope
mov
cs
lahf
inc
pop
inc
xchg
loope
jg
fistps
std
cmp
mov
mov
out
aas
pop
dec
iret
pop
call
add
jbe
out
out
cmpl
or
clc
int3
pop
into
mov
repz
arpl
int3
shrb
add
ficoml
popa
dec
sbb
cs
dec
popa
pop
dec
pop
push
mov
outsl
mov
rclb
mov
sbb
mov
jns
roll
mov
jecxz
movsl
mov
cltd
je
xor
or
in
imul
aad
push
ficoms
adc
ds
mov
scas
in
imul
dec
jbe
outsl
fisubs
push
lods
rcrb
add
lret
xchg
xchg
insb
jg
or
jae
lds
pop
stos
sub
insl
push
cmp
aam
jb
and
jae
cwtl
xchg
cmp
fidivs
clc
int3
fidivs
mov
jne
cmp
push
adc
dec
dec
dec
idiv
lret
jl
leave
arpl
xchg
jl
mov
divb
test
leave
push
fidivrl
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cltd
push
es
dec
mov
mov
or
mov
mov
mulb
mov
scas
mov
stc
add
inc
enter
mov
add
dec
mov
add
dec
mov
mov
mov
cmp
jbe
mov
xor
fisttpll
frstor
mov
xchg
pop
in
dec
insb
or
rcll
sbb
fisubrl
adc
or
fwait
mov
adc
mov
mov
jmp
dec
lret
and
pusha
xor
rorl
dec
and
mov
cmp
cmp
adc
outsl
dec
call
notb
add
xlat
ffreep
fs
popa
pusha
mov
ret
mov
int3
sub
mov
nop
add
and
pusha
pop
add
mov
sbb
lds
iret
jp
incb
mov
cmp
dec
int
jle
pop
mov
add
add
stc
into
inc
lahf
or
mov
adc
pop
shlb
or
lds
pop
xor
pushf
or
lds
push
cld
stos
jb
mov
mov
adc
mov
mov
jno
adc
movsb
bound
xchg
add
cmp
pop
push
sub
mov
mov
leave
xchg
inc
push
fadds
andl
sti
push
aas
stos
clc
dec
fnstsw
mov
sbb
scas
pop
adc
add
sbb
into
ljmp
iret
ds
jecxz
fwait
cs
je
out
jae
pushf
lret
scas
loope
sti
mov
jns
rcr
jnp
sahf
sub
adc
jg
lahf
dec
mov
addr16
and
rolb
ss
push
andl
cwtl
mov
xlat
nop
inc
inc
xlat
leave
jnp
sahf
popa
jp
add
xor
jb
inc
inc
add
daa
jnp
lret
test
scas
jae
enter
lds
fistl
or
ret
gs
cltd
pusha
push
hlt
lods
dec
arpl
arpl
stos
lds
push
rcrb
jbe
movsb
lcall
stc
mov
push
adc
stc
jmp
lds
sbb
or
dec
scas
xchg
stos
mov
inc
lds
adc
lods
push
sub
jmp
inc
and
out
out
shr
pusha
xor
into
pop
mov
add
xchg
mulb
cwtl
scas
push
repz
mov
push
dec
je
xor
pop
dec
subl
les
inc
push
leave
ret
fnsave
imul
int3
test
enter
push
leave
daa
in
hlt
xor
and
gs
sbb
gs
inc
and
cmc
mov
and
xor
jg
ss
mov
cmp
jns
ds
and
xor
lock
imul
icebp
sahf
out
inc
sbb
inc
jae
decb
aam
pop
in
test
sub
dec
lock
test
push
stos
lea
push
mov
mov
cmp
sub
push
fs
xchg
sub
add
inc
adc
in
cs
stos
int
adc
jne
and
out
dec
dec
cltd
and
ror
push
lret
ret
mov
mov
popf
enter
js
outsl
sti
nop
adc
es
clc
mov
add
dec
test
dec
je
mov
aam
pop
outsb
ja
aas
call
jp
mov
cmovae
pop
mov
fisubs
jne
push
adc
int3
shrl
fsubl
dec
in
nop
inc
xor
push
dec
pop
xchg
inc
gs
je
shl
mov
int
loop
lret
and
push
sbb
and
add
mov
mov
mov
pop
inc
xchg
jl
xorb
mov
arpl
add
shll
jnp
lret
xchg
jmp
test
mov
popa
xchg
mov
xchg
flds
pop
xchg
shll
sub
xchg
fistpl
or
mov
xchg
movsl
add
jge
imul
inc
std
mov
add
pop
cmpsl
pop
insb
ja
xor
xor
fildl
scas
mov
and
dec
hlt
int
popf
xchg
cmp
das
ss
paddb
jg
or
jecxz
xchg
xchg
mov
mov
xchg
sbbl
pop
jmp
mov
mov
js
cs
icebp
lods
xlat
xor
adc
pop
mov
ss
dec
cmpb
call
subb
xchg
xor
mov
lea
inc
inc
sahf
rcr
jne
aam
pop
int3
add
or
icebp
ds
lock
mov
aad
je
repnz
cmp
mov
sbb
aas
and
or
xor
sarl
leave
test
cwtl
xor
aaa
jns
in
cmp
fsts
inc
mov
icebp
bound
mov
aam
xchg
nop
mov
sbb
sub
imul
push
stos
mov
pop
mull
push
sub
and
or
and
sub
daa
push
test
xor
out
stc
scas
repz
dec
sbb
mov
dec
les
cmc
mov
push
adc
push
iret
xor
imul
pop
jns
mov
adc
mov
mov
ud1
adc
hlt
add
shrb
movsb
and
sbb
mov
mov
sbb
sub
push
inc
xor
xchg
sub
cmp
pop
or
mov
sub
test
scas
xchg
xchg
js
xor
and
inc
mov
lods
pcmpeqd
push
mov
inc
rorl
ficomps
fldenv
push
aaa
push
lea
jnp
dec
pop
pop
cmp
mov
fildll
push
bound
add
adc
jecxz
fsubs
adc
sub
loope
leave
and
jmp
fimull
push
xor
clc
mov
aaa
aas
ret
jge
or
bnd
popf
rcll
inc
lret
loop
xchg
rcrb
fildl
pop
jge
add
mov
push
lret
imul
mov
mov
inc
aaa
fbld
cmpsl
icebp
iret
movsl
cmpsb
daa
ss
xchg
cmp
push
add
xchg
and
rorl
jle
cs
xchg
and
dec
fcmove
imul
pop
push
dec
push
sbb
int
cwtl
aaa
arpl
xor
jecxz
lods
xchg
cld
icebp
mov
push
cmp
mov
jno
pop
push
imul
mov
scas
dec
ret
pop
and
xlat
mov
dec
sbb
mov
jne
vpandn
mov
or
lods
cmp
rcrl
xchg
popf
pop
sbb
jle
add
xchg
inc
and
inc
jns
dec
rcr
xchg
mov
xchg
sbb
sub
inc
pop
lcall
cmp
xchg
lea
das
rorl
scas
repz
and
mov
or
cmc
adc
scas
xchg
out
cmpsl
inc
lret
cltd
push
pop
mov
dec
mov
imul
inc
inc
mov
dec
or
and
push
dec
push
xchg
push
mov
or
faddp
pop
test
push
flds
pop
fstl
addb
fcomps
das
fildl
jl
mov
add
dec
lds
inc
cmpb
xor
xor
testb
aad
jle
add
sub
mov
pop
dec
pop
adc
mov
mov
jno
or
pop
sub
push
inc
sbb
je
mov
pop
popf
jne
insl
jle
mov
xor
mov
aas
test
sub
cmpxchg
out
jo
jecxz
pop
add
mov
js
out
sar
mov
mov
xchg
jl
das
dec
iret
ror
cmc
arpl
xlat
mov
ja
popf
lods
push
push
loope
sti
jb
xor
std
jns
mov
jne
dec
dec
mov
cwtl
es
out
cmp
and
jge
xor
and
adc
out
leave
in
push
push
sahf
sub
xchg
xlat
sbb
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
aad
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
cmp
mov
je
fxch
push
test
fistps
les
pop
sbb
repnz
int
imul
mov
or
cmp
flds
mov
scas
jb
sbb
pop
aad
bound
cmpb
add
and
es
fidivrs
mov
sub
add
inc
insl
jmp
mov
iret
pop
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
xchg
push
cwtl
sbbb
cmp
cmpb
test
imull
pop
loopne
mov
push
cmc
sbb
mov
pusha
lret
jecxz
cmpsb
ja
cmp
pop
push
mov
cmp
ja
xchg
movsb
enter
cmc
imul
push
xchg
popf
and
call
int
add
xchg
scas
push
inc
mov
icebp
daa
push
or
adc
add
inc
ss
icebp
mov
adc
jno
mov
dec
inc
adc
sbb
cmp
mov
dec
fistps
jno
dec
sti
icebp
arpl
ret
andl
stos
mov
cmp
lret
xchg
sub
and
push
cmp
inc
pop
aam
sub
xchg
test
xchg
push
sub
jae
sbb
pop
inc
outsb
negl
and
sub
dec
fmul
jmp
repnz
pop
sahf
jne
loope
loopne
cs
add
and
push
inc
push
xchg
xor
sti
int
jb
lahf
scas
mov
xchg
sbb
adc
cld
sub
out
mov
popl
psrlq
mov
jae
push
cmp
ret
lods
mov
sbb
ljmp
sbb
test
cmp
pop
dec
sbb
and
fcoms
stos
mov
inc
push
sbb
fwait
xor
rcr
jne
test
adc
adc
fmul
and
push
pushf
cmp
sbb
flds
jne
test
jo
andl
mov
fprem1
jmp
cmpsl
pop
fdivl
cwtl
push
mov
out
je
pop
sub
adc
stos
fldt
shll
jle
fildll
inc
data16
add
or
or
sub
xchg
or
test
cwtl
iret
stc
xor
loopne
xor
mov
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
loope
cwtl
add
or
mulb
inc
adc
pop
xor
pushf
or
lds
push
cld
stos
jb
mov
mov
adc
mov
mov
jno
adc
movsb
bound
xchg
add
cmp
pop
push
sub
mov
mov
leave
paddusb
mov
enter
lods
shrb
sub
movzwl
pusha
into
adc
add
stos
xor
mov
fstl
out
daa
dec
lock
jge
inc
iret
shl
ja
clc
ror
ret
adc
ret
or
mov
loopne
sbb
xchg
cmp
cmpsb
jo
or
jge
movl
faddl
jb
mov
mov
ret
dec
sbb
jle
push
xchg
mov
sbb
add
lahf
stos
or
mov
fsubr
jns
pushf
rcrb
dec
mov
or
addr16
mov
test
sub
std
or
adc
and
xor
jno
pop
cmp
push
and
adc
inc
cmp
std
sahf
jge
ljmp
inc
cs
stos
push
repnz
xchg
mov
push
into
sub
scas
push
and
sub
jmp
fadds
pop
jo
push
xchg
xchg
test
lret
popa
jle
icebp
jle
jno
adc
andl
enter
dec
sbb
lcall
mov
inc
insl
jmp
mov
iret
pop
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
xchg
push
cwtl
sbbb
cmp
cmpb
test
imull
pop
loopne
mov
push
cmc
sbb
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
sbb
jmp
movsb
cmp
cs
cmpsb
ret
fbstp
int3
and
daa
sub
ljmp
ja
lds
adc
movsb
ret
enter
outsb
shll
mov
fwait
and
in
js
or
ret
push
mov
or
lods
outsb
mov
lock
les
dec
add
aad
shll
pop
shr
adc
iret
pop
cmpb
inc
fs
mov
and
scas
push
inc
clc
or
fildl
pop
dec
xor
mov
clc
dec
and
je
mov
out
xor
int
out
dec
cmpsl
ret
fincstp
clc
lea
mov
mov
mov
cwtl
mov
jecxz
inc
sbb
inc
adc
out
mov
cs
jne
push
mov
xor
test
aas
xlat
pop
dec
pop
mov
cmp
es
clc
rolb
mov
movsl
mov
jg
std
dec
inc
sbb
add
add
adc
leave
fdivl
ret
sbb
fs
iret
js
push
fwait
aad
sub
cmc
mov
jecxz
mov
mov
ret
cmp
mov
mov
sbb
cmpsb
sub
lcall
jge
pop
add
flds
cld
iret
jg
ret
sub
mov
cmc
mov
fmull
repz
mov
inc
es
mov
sbb
sub
adc
test
sub
mov
out
mov
ret
fld1
std
jge
test
inc
cltd
xlat
call
int3
pusha
jb,pt
jecxz
mov
shr
lret
insb
fisubrs
lea
cld
pop
add
mov
lcall
mov
sub
out
daa
push
adc
adc
mov
outsb
add
cmpsl
inc
test
shr
sub
push
nop
aas
mov
sbb
incl
pop
fs
mov
mov
and
pop
jmp
dec
sar
mov
xor
insl
pop
imul
xor
lock
rorl
stos
movsl
xchg
mov
fcoml
mov
leave
pop
stc
int3
scas
std
stc
loope
sarl
xchg
sti
jne
fsts
mov
or
add
jbe
push
call
push
stc
mov
fmul
popf
mov
lahf
cmpsl
mov
fwait
lea
daa
bound
out
adc
sub
cmp
or
inc
cmpsb
gs
cmpsb
or
jle
pop
push
mov
call
jns
dec
and
rcrl
fucomip
sbb
aas
call
xchg
movsl
mov
or
inc
movl
inc
cmpb
adc
ret
mov
or
xlat
addr16
cmp
lods
jns
loop
scas
xchg
sbb
stc
mov
dec
pop
pop
in
inc
sub
shrb
add
das
or
pop
dec
or
jge
imul
sub
mov
cs
cli
mov
das
pop
icebp
cmp
cmp
pop
pop
mov
popa
cmp
aas
sub
inc
sbb
mov
mov
mov
cltd
mov
adc
and
xchg
js
or
mov
jl
mov
cmp
in
jne
repnz
or
mov
add
inc
sub
xlat
adc
ret
dec
sub
into
pop
je
popa
push
mov
sbb
in
mov
mov
pop
xor
call
or
add
test
pop
and
dec
mov
adc
stos
inc
sbb
int
mov
pushf
adc
test
pusha
dec
stos
push
xchg
mov
lahf
mov
outsb
popa
push
pop
clc
stc
mov
xchg
sbb
push
sbb
lret
rcll
push
xchg
or
sbb
sbb
pop
call
test
cmp
fs
xor
cmp
cwtl
cmp
xchg
test
mov
addl
add
push
cmp
dec
and
xor
test
insl
loope
movsb
inc
sbb
cmpsl
ret
out
stos
mov
lea
xor
mov
cwtl
pop
aaa
xchg
enter
int3
adc
lret
sub
add
shl
mov
dec
arpl
aad
mov
loopne
rorl
callw
pop
in
cmp
xchg
xchg
push
xchg
jbe
mov
pop
shlb
inc
sbb
cltd
divb
shlb
les
mov
sbb
sub
mov
push
adc
dec
and
inc
cmp
adc
ret
push
nop
sbb
ja
or
mov
enter
cmp
mov
fmull
cmp
xor
fsubr
in
adc
cmp
sarb
iret
and
inc
jecxz
mov
repz
sbb
cmp
sub
repnz
and
call
mov
testl
test
add
mov
popf
mov
lea
dec
mov
add
mov
mov
imul
pop
xor
iret
sbb
lds
or
push
enter
jno
hlt
test
lds
clc
test
test
cltd
rorl
icebp
cltd
xlat
in
lret
sbb
lock
das
cmp
lods
inc
xor
lods
dec
or
dec
je
cmpsl
jae
test
cmp
ret
add
and
lcall
insl
pop
jnp
push
dec
sahf
sbb
jmp
cwtl
popf
adc
jg
pushf
jne
jle
fimuls
mov
cmp
mov
add
adc
sbb
dec
and
je
cmp
pop
test
out
xor
int
jmp
idiv
enter
inc
cmpsl
fucom
aaa
out
mov
and
movsb
cmp
cmp
jne
js
popa
pusha
mov
dec
and
adcb
inc
rcll
push
imul
lcall
into
inc
xchg
lods
nop
out
mov
mov
lock
add
cmpsb
sub
rcrb
mov
aaa
stos
inc
in
dec
sbb
lahf
movsb
fldenv
test
fbstp
ror
stos
repz
add
push
cmp
sbb
aaa
push
in
jae
int
mov
out
mov
xchg
lcall
movb
loope
movsb
fstl
mov
out
sti
jno
sub
int
push
adc
jb
clc
sub
or
mov
sub
push
mov
hlt
and
addl
push
and
lods
jb
fwait
jl
dec
mov
loop
rcrb
outsl
xchg
sub
xor
sub
and
mov
jmp
test
mov
mov
xchg
fisttpll
pop
pand
ret
pop
fistl
adc
cmp
jnp
std
aam
lret
jecxz
cmp
sbbb
lock
jl
mov
or
pop
mov
lret
inc
sbb
add
clc
mov
aaa
dec
inc
in
aad
lds
xchg
mov
lret
and
mov
mov
jno
or
sbb
xor
or
mov
xor
jecxz
movsb
fmull
cmpsl
or
pop
jb
sbb
insl
xor
pop
aaa
cwtl
rcrb
mov
mov
bnd
sbb
shlb
adc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
out
cmp
mov
hlt
pop
aaa
test
and
pop
int
imul
and
mov
nop
imul
mov
ficoms
ja
pop
inc
ret
call
mov
jns
xchg
rcrb
mov
add
mov
and
scas
imul
nop
adc
stos
jb
lcall
xchg
call
xor
mov
mov
je
scas
xchg
adc
jno
les
cmp
dec
mov
hlt
sub
xchg
mov
add
jmp
sbb
xchg
leave
jg
ret
in
push
mov
mov
xchg
jo
sbbl
adc
xorl
cmp
add
insb
mov
fildll
mov
lods
push
jecxz
movsl
ret
fadd
add
mov
mov
fwait
xlat
pop
fxch
mov
mov
cmp
xor
or
cmp
xlat
out
mov
mov
dec
cmp
in
aam
pop
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
sbb
cmp
dec
out
hlt
mov
jbe
push
xchg
add
mov
iret
add
cmpsl
xorb
mov
xchg
pop
fucom
cli
mov
mov
ret
cmp
lods
cmpl
lret
cmpsl
test
adc
add
and
stos
jge
pop
mov
int
add
jecxz
into
aam
inc
cmp
mov
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
pop
xchg
mov
mov
fwait
adc
stos
push
sub
mov
jl
mov
mov
sahf
int
mov
rcll
sbb
orb
adc
mov
daa
fistpl
sahf
dec
dec
sub
out
movsb
jbe
cwtl
movsl
mov
xor
sysret
fists
ret
sahf
push
gs
rorb
imul
insl
xor
jp
cltd
orb
stos
cli
mov
movsl
sbbl
dec
sbb
and
cli
mov
mov
scas
movl
sar
loope
mov
jl
xor
or
fwait
or
cmp
pop
push
sub
mov
mov
int
mov
pop
ds
jle
mov
xlat
xchg
scas
fcomi
js
mov
fcoml
xchg
movsb
or
xor
add
push
mov
xlat
xor
test
insl
jmp
movsb
inc
sbb
cmpsl
ret
test
stc
out
push
dec
mov
rcll
addb
sbb
je
dec
push
aam
dec
dec
test
cltd
clc
or
mov
sbb
out
and
cmc
mov
stc
ss
lock
je
mov
lods
lahf
pop
adc
ret
fidivrs
rol
xorb
jne
add
test
add
insl
fwait
ret
sbb
mov
cltd
cwtl
leave
test
lods
push
inc
inc
mov
xchg
repz
pop
test
xor
test
push
jl
inc
cld
xor
push
insl
cwtl
cmp
fisubl
pop
outsl
les
aaa
jns
adc
lds
lret
mov
pop
bnd
insb
push
lret
loop
sarb
lock
sub
iret
and
lea
pop
mov
lock
sti
adc
jae
dec
sub
xchg
inc
and
dec
push
jmp
xlat
xchg
push
adc
jecxz
inc
rcll
sbb
xchg
fcoms
lret
mov
fsubs
sbb
out
movsb
cltd
xlat
test
xor
ret
loopne
inc
adcb
in
cltd
pop
push
add
enter
mov
cmp
mov
mov
sbb
nop
pop
ret
cmpsb
mov
cs
lea
pop
push
jnp
mov
cltd
dec
sub
lahf
pop
stos
fs
movsl
stc
dec
push
pop
ljmp
rcll
mov
or
cmp
dec
mov
sbb
jle
cmpsl
or
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
filds
fiadds
popl
xor
mov
test
adc
repnz
test
out
xor
push
gs
mov
mov
in
mov
jne
aad
mov
pop
rcll
addb
pop
xor
int
mov
push
inc
xchg
sbb
cmpsl
or
dec
dec
lcall
pop
dec
pop
mov
cmp
cmpsb
ja
clc
in
popf
pop
aas
push
sbb
mov
adc
imul
sbb
jg
enter
mov
jno
dec
mov
sub
dec
sub
push
lahf
mov
jae
sbb
inc
jno
movb
mov
push
jle
sahf
sbb
dec
pop
xchg
sbb
int
lcall
lods
mov
mov
and
or
pop
mov
and
lahf
scas
mov
mov
stos
loop
xchg
into
xchg
sub
or
cmp
sbb
add
sub
push
mov
loopne
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
int3
loope
orb
in
lods
shr
inc
push
xchg
and
xchg
sbb
sahf
sbbl
int
push
mov
imul
cmc
fsub
hlt
xor
sti
jne
xor
enter
mov
jbe
adc
mov
sbb
pop
inc
test
sar
and
into
test
insb
ror
sbb
inc
lahf
arpl
sbb
sub
and
mov
push
out
cmp
pop
mov
inc
push
sbb
xchg
jge
jae
outsb
in
add
addr16
rorl
push
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
in
leave
andl
mov
mov
and
xchg
jp
into
popa
test
sub
movsl
pop
pop
mov
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
inc
loop
mov
jbe
adc
leave
mov
sbb
xchg
or
clc
mov
jnp
inc
in
lods
dec
sbb
lahf
movsb
fstps
sbb
call
push
xchg
push
test
mov
push
sbb
lret
or
inc
jns
dec
rcr
xchg
and
pop
test
lods
inc
sbb
scas
in
dec
sub
dec
push
jo
sbbl
sbb
or
or
add
lret
fsubrs
fildll
mov
lods
push
testl
and
cmpsb
jp
xchg
push
insb
pop
mov
clc
cld
push
jecxz
inc
cltd
enter
loop
je
cmp
dec
mov
push
adc
pop
and
orb
sub
into
pop
je
popa
pop
mov
sbb
movsl
dec
sub
mov
repz
std
fsubl
imul
hlt
movsl
mov
and
lock
and
sub
lret
pop
xor
fwait
fs
push
ja
inc
in
fstpt
mov
dec
pop
fnstcw
out
stc
jmp
lods
repnz
sub
or
imul
xlat
ficompl
fnsave
inc
movsb
pop
add
mov
lods
mov
mov
push
adc
inc
ret
outsb
pop
or
jmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
popf
xchg
adc
dec
sub
xchg
mov
xchg
sbb
inc
cli
jnp
jecxz
cmp
add
fwait
lea
cld
and
and
ja
enter
aam
sub
jne
movsb
popf
push
mov
shl
mov
inc
arpl
int
jns
xchg
push
iret
inc
xor
out
mov
cld
or
or
jo
lock
aas
mov
mov
int3
mov
popf
ret
popf
pushf
inc
stos
xchg
adc
sub
ljmp
mov
inc
fstpt
push
cmp
lcall
jl
orl
pop
rcl
xchg
mov
mov
jbe
mov
and
test
jbe
sbb
scas
fcomi
js
sbb
sub
andl
addl
add
push
mov
fwait
xor
sub
call
push
gs
jmp
jb
addr16
push
pop
fucomp
test
pop
hlt
pusha
inc
dec
or
js
sub
push
repz
gs
daa
fistpl
sahf
dec
dec
sub
out
movsb
jbe
mov
cmp
loopne
mov
repz
fmuls
mov
or
push
repnz
imul
sub
rcrb
sbb
mov
push
jns
les
pop
lret
push
cmc
mov
fsubr
mov
stc
jmp
lds
sbb
jl
adc
fdivs
mov
pop
or
mov
lods
mov
mov
push
adc
dec
ret
outsb
pop
leave
dec
jmp
xor
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
clc
push
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
sbb
pop
fisubs
rcl
ror
mov
xor
or
xor
and
in
lods
sub
cltd
das
push
iret
cmpl
imul
lock
fiadds
dec
inc
push
add
aas
add
ret
mov
xor
leave
sbb
adc
sub
mov
stos
mov
push
sahf
mov
pop
fstl
pop
dec
sbb
fcoms
callw
mov
pop
ret
flds
mov
stos
add
mov
mov
das
pop
test
mov
and
fcomi
js
push
popf
scas
inc
movsl
fdivl
mov
jb
insb
or
sbb
add
push
mov
lock
sub
fisttps
cmp
aam
inc
and
stc
jmp
xor
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
push
mov
inc
lods
lcall
inc
inc
fcmovnu
xor
out
mov
mov
mov
sbb
push
outsb
sbb
pop
sub
hlt
mov
cli
jp
fnsave
fs
inc
inc
mov
sub
call
scas
dec
mov
sbb
fisttpl
or
fisttps
lret
pop
adc
push
mov
rol
imul
mov
mov
lods
cmp
or
pusha
mov
in
js
insb
push
leave
iret
leave
loop
sarb
pop
sub
iret
and
lea
inc
mov
adc
add
push
xor
push
jg
fsubr
pop
out
inc
sbb
jnp,pt
sti
inc
adcl
das
jno
adcl
xchg
mov
add
sbbl
mov
push
inc
xchg
sbb
mov
rcr
cmc
fsubs
mov
jae
xchg
mov
out
mov
jnp
xchg
push
and
dec
or
ret
pop
xor
sbb
orb
xor
cltd
and
ret
mov
popf
jnp
fadd
stos
dec
sub
insb
push
push
in
jns
inc
pop
aad
xor
mov
je
fxch
push
add
fisttps
lcall
xor
loopne
xchg
stos
mov
stos
xchg
push
adc
push
mov
add
push
sbb
pushf
fucomi
jge
iret
shrb
pushf
cwtl
andl
addl
add
outsl
jecxz
dec
mov
sbbl
into
and
xchg
mov
pop
fidivrs
pop
adc
jb
fwait
jo
jmp
cmpl
lea
in
lods
shr
inc
push
xchg
and
test
sbb
gs
into
fsubs
ljmp
xor
int
add
in
aas
dec
ret
push
cwtl
mov
pushf
or
mov
sub
mov
test
les
lahf
mov
pushf
cltd
cld
mov
sti
cli
pusha
std
mov
dec
popa
cmp
rcll
andl
int3
or
sub
imul
adc
pop
mov
mov
pushf
or
icebp
dec
dec
js
popf
push
adc
sahf
loop
xchg
iret
shrb
or
mov
mov
repz
dec
xchg
adc
stos
fwait
xor
test
sub
xchg
push
jg
enter
inc
ret
fld1
popf
rcrl
sti
xor
adc
sub
je
or
push
or
inc
cmpb
push
dec
xchg
lea
or
popf
divl
xchg
cmp
movsl
jge
fstpl
pop
mov
jns
rcrl
add
xor
push
cld
jl
add
rolb
mov
mov
sbbb
xor
lods
jno
push
sbb
push
and
dec
in
push
ss
mov
aaa
push
idivl
fs
mov
pop
fnstenv
jno
cld
cmp
je
inc
sbb
or
jl
mov
cmp
push
mov
push
xchg
pop
test
add
dec
mov
pusha
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
enter
inc
inc
sbb
mov
enter
stc
mov
adc
out
inc
insl
cmc
imul
outsb
insb
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
pop
movsb
aam
mov
mov
into
add
inc
fcomi
fsubl
lods
sbbl
pop
lds
jl
mov
sti
jecxz
int
lods
jo
sub
rol
xchg
and
or
sub
and
ret
cmpsl
mov
cs
lea
pop
push
jnp
int
sbb
sub
lahf
jp
mov
push
aam
ja
in
xor
adcl
mov
add
mov
mov
fisubrl
lahf
or
sub
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
in
jo
jb
int3
pusha
sub
or
mov
loopne
sub
dec
aam
fcoms
and
xchg
jbe
pop
jae
inc
insl
icebp
out
xchg
xor
mov
arpl
or
add
mov
repz
repz
sub
sbb
sub
out
jne
cmp
fmull
negl
inc
fwait
clc
and
ljmp
stc
stos
into
sbb
xlat
mov
sahf
pop
dec
pusha
fwait
enter
mov
jp
add
mov
and
jl
pop
sbb
jns
enter
mov
jno
dec
mov
dec
in
dec
sub
push
lahf
stos
sub
mov
cmp
movl
pop
sub
inc
sbb
or
in
or
stos
xchg
stos
cmp
fwait
push
xchg
jl
shrb
push
ret
into
xor
jmp
scas
inc
fwait
leave
insl
xor
pop
push
cwtl
add
mov
dec
dec
mov
adc
inc
jmp
inc
cwtl
dec
int
push
fidivrl
jae
popa
xchg
sbb
push
jne
insl
or
dec
adc
iret
test
pusha
test
pop
hlt
pusha
inc
dec
or
cmp
or
sti
pop
mov
in
aam
imul
ja
xchg
cmp
mov
imul
and
mov
mov
inc
cmp
cwtl
in
lock
xchg
xor
flds
sti
dec
cld
aad
inc
sub
inc
cltd
pop
dec
or
sar
and
lret
aaa
stos
push
insb
ror
sbb
inc
lahf
stos
and
in
xor
ffreep
sub
xchg
test
dec
mov
sub
add
sub
pop
dec
les
xchg
adc
test
lods
inc
sbb
scas
in
adc
popf
scas
cmp
adc
sbb
ret
or
inc
clc
jp
mov
xchg
decb
inc
jnp
outsb
test
push
fidivrl
sub
stos
push
jne
inc
or
jge
insl
mov
xor
mov
push
adc
inc
dec
or
js
fwait
push
sahf
adc
inc
pop
mov
cmc
xor
mov
sbb
dec
adc
call
dec
out
mov
jmp
in
xor
push
add
jo,pn
push
add
lcall
mov
pushf
cli
push
dec
sbb
sbb
lods
xchg
clc
mov
jnp
inc
in
test
or
sub
pop
je
sti
pop
push
inc
arpl
pop
sub
inc
sbb
or
cmp
movsb
pop
imul
or
adc
pusha
mov
jmp
mov
fwait
leave
loop
and
rorl
inc
xchg
adc
cmp
nop
pop
pusha
push
xchg
adc
pop
in
ret
mov
cli
mov
xor
sti
rolb
clc
sbb
xchg
xor
rcll
inc
add
inc
inc
or
mov
lret
jnp
xchg
mov
loopne
jle
sbb
mov
cwtl
test
fistpl
add
loopne
mov
mov
into
add
repnz
add
ljmp
sub
and
or
aad
pop
xor
jge
mov
push
ja
inc
in
test
sbb
sub
mov
divb
fs
xchg
test
popa
mov
jp
inc
scas
xchg
push
xchg
fnstsw
mov
stos
add
sahf
dec
mov
lahf
pop
test
xor
mov
pop
scas
fcomi
js
cmp
repnz
inc
ror
pusha
push
mov
inc
sbb
mov
xchg
sub
push
pop
xchg
mov
loopne
fdivrl
xor
mov
adcl
das
jno
adcl
add
or
aam
push
je
in
sub
inc
sbb
jb
or
push
test
lcall
imul
pop
loopne
mov
repz
mov
imul
aad
jo
nop
mov
inc
pop
mov
mov
int3
mov
stos
and
adc
sub
jns
dec
push
dec
or
push
xchg
mov
mov
cmp
add
sub
fcompl
or
cmp
inc
lcall
gs
lods
cmp
dec
int3
pusha
mov
cmc
bnd
jg
xchg
push
repz
inc
loope
or
out
sub
popl
stos
xchg
sub
adc
xchg
pop
xchg
in
fdivrl
call
adc
jb
fwait
jo
jmp
test
add
sbb
jg
sbb
lret
cmpsl
stos
dec
lea
push
pop
push
mov
int
cmp
jmp
pop
push
iret
ret
clc
sti
jno
or
pop
mov
mov
fwait
and
sub
sbb
lock
sbb
jl
adc
movsl
ret
insb
test
repnz
scas
inc
dec
jge
push
bnd
lcall
ljmp
popf
lret
lret
cmp
les
sbb
sbb
xor
xchg
stos
mov
stos
xchg
push
adc
jmp
add
push
sbb
dec
fucomi
in
mov
dec
in
sti
mov
cmp
xor
or
divl
or
push
inc
mov
cltd
cmp
inc
clc
loopne
int
push
pop
xchg
and
inc
ret
fld1
popf
rcrl
sti
xor
jne
adcl
enter
orb
dec
inc
test
or
jmp
adc
ret
xorb
and
fs
mov
aam
lcall
xchg
decb
jae
mov
inc
popf
roll
addr16
fdivrs
cltd
xorb
add
mov
movsb
sbbl
xchg
xchg
jb
std
push
xchg
les
scas
mov
jecxz
fidivrl
mov
stc
mov
xchg
push
nop
mov
pusha
add
or
sahf
fisubrl
lahf
or
sub
pop
mov
cwtl
mov
lods
inc
and
lahf
scas
jg
leave
jno
mov
clc
jmp
js
cmp
mov
andl
lea
sbb
mov
mov
cmp
jge
mov
adc
xor
lahf
cmpsl
mov
pop
fdivrs
sti
mov
jne
sub
out
dec
test
adc
adc
jmp
imul
sbb
cmp
adc
inc
cmp
mov
and
fstl
add
out
and
sahf
adc
mov
or
pushf
sbb
sub
sarb
imul
push
div
test
push
fwait
and
mov
mov
jae
cmp
lods
mov
add
sub
inc
sbb
or
jl
mov
mov
arpl
fwait
push
xchg
fsubr
shrb
push
ret
into
scas
fistpl
daa
pop
sbb
sarb
pop
xchg
je
or
cmp
mov
push
or
les
or
add
leave
xchg
fldenv
icebp
xchg
xchg
lahf
fdivr
pop
fdivrl
sti
stc
sahf
ret
mov
or
sbb
test
push
adc
xchg
test
into
in
push
mov
movsb
popf
in
mov
fiadds
cwtl
adc
mov
ljmp
sbbl
add
inc
adc
sbb
mov
test
mov
sbb
iret
inc
sub
imul
les
sbb
outsl
jno
orl
movsb
mov
stc
pusha
cwtl
lods
mov
mov
xchg
test
dec
mov
add
dec
shrl
dec
les
cmp
cmpsl
insl
pop
test
lods
inc
sbb
outsl
fdiv
in
jns
lahf
xchg
mov
in
inc
rcrb
icebp
inc
sarb
clc
xor
xor
addr16
and
or
mov
pop
imul
inc
sbb
test
inc
clc
hlt
pop
mov
mov
shlb
call
xchg
adc
sub
movsb
jne
pop
adc
test
adc
mov
xchg
pop
test
xor
aam
imull
or
xchg
iret
sbb
or
inc
cmp
adc
shlb
jbe
add
int
sbb
mov
inc
mov
mov
mov
mov
aaa
fnstenv
lahf
sbb
mov
xor
arpl
pop
sub
inc
sbb
or
cmp
pop
inc
push
mov
lods
mov
mov
fstl
pop
mov
data16
dec
jg
call
sbb
scas
xchg
xchg
xchg
push
cwtl
les
cmp
aad
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
mov
cmovae
clc
imul
hlt
or
les
xor
push
sub
cmp
sbbb
mov
test
les
movsl
pop
in
aaa
call
arpl
adcb
ljmp
sahf
jb
sbbb
mov
repnz
cmp
adc
mov
sbb
cmp
lret
stc
and
negl
stc
stos
push
test
clc
sbb
cltd
bswap
fucomp
cld
std
mov
mov
popf
aad
push
or
pop
mov
stos
push
inc
scas
xchg
push
xchg
mov
add
dec
mov
mov
test
xchg
enter
addr16
pop
lret
jnp
sbb
jo
std
nop
xchg
ds
cwtl
int3
dec
out
inc
inc
sbb
in
stc
dec
sarb
dec
out
fadds
rclb
in
xchg
mov
test
fildll
push
into
inc
stos
cmp
test
daa
sbb
sar
and
mov
mov
mov
push
adc
lods
out
mov
sbb
int
jg
pop
adc
call
cmp
stc
lret
push
jae
mov
mov
xor
add
adc
mov
scas
flds
inc
das
jno
dec
lods
aad
cs
pop
mov
jl
test
repnz
scas
mov
negl
dec
pop
lcall
mov
shlb
or
imul
nop
xor
lods
movb
ret
sbb
dec
and
push
mov
pop
scas
inc
fwait
push
adc
and
dec
popa
pop
addl
enter
jb
dec
fmuls
dec
aam
jns
dec
adc
out
inc
jge
imul
inc
popf
fldt
mov
adc
pop
mov
enter
or
dec
push
xchg
inc
inc
dec
xchg
lea
pop
sub
adc
or
jle
push
xchg
mov
pop
clc
fistpl
adcl
mov
lods
xchg
lret
sbb
add
and
mov
lock
dec
inc
nop
aas
and
or
rclb
sti
push
push
test
pop
sbb
mov
sub
fucomp
jae
jns
jns
popf
lret
aad
test
mov
and
pop
ret
scas
xchg
stos
mov
stos
xchg
push
adc
add
jmp
pop
fldl
fnstsw
mov
paddusb
popf
push
fcom
fdivrl
and
sub
or
xchg
adc
adc
mov
rorb
sbb
adc
adc
mov
icebp
imul
mov
cmpsl
lock
xlat
push
filds
movsl
andl
bound
mov
hlt
je
popf
jle
xchg
sub
ficoms
dec
sbbb
push
test
lcall
inc
sbb
test
xlat
pop
adc
pusha
mov
fstpl
test
jl
lock
push
adc
popa
push
sbb
fs
dec
and
sahf
cld
lret
fsubr
mov
xchg
leave
jl
scas
mov
jecxz
mov
fldt
xchg
sbb
pusha
add
dec
mov
fisubrl
lahf
or
mov
mov
mov
pop
mov
and
lods
popf
xchg
cmp
icebp
dec
fucomi
sbb
pushl
andl
out
or
or
imul
push
inc
mov
cltd
cmp
xchg
in
mov
inc
cmp
inc
adc
call
daa
sbb
sar
and
cmpsb
je
sbb
inc
inc
sbbb
imul
fsubrs
test
aad
mov
int3
sbb
pop
and
popf
movsl
imul
fdivp
pop
icebp
fdivrl
xchg
lret
in
xchg
aas
cli
or
add
cs
jg
cld
lret
movsl
mov
mov
adcl
ret
push
test
pop
sbb
rorb
stos
fucomp
jae
jns
int3
dec
popf
lret
shll
sbb
sbb
inc
scas
xchg
stos
mov
stos
xchg
fistl
fimull
push
jbe
dec
jle
mov
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
sbb
mov
mov
cmp
xchg
mov
mov
cmpsl
jnp
lret
adc
push
mov
clc
enter
leave
add
sbb
mov
or
gs
das
in
cmc
mov
add
test
sub
lods
int
cmp
push
iret
and
mov
mov
inc
sbb
xor
enter
add
out
push
sbb
xor
cwtl
sub
sub
dec
and
popf
pop
lret
fsubr
mov
xchg
leave
inc
jae
mov
jecxz
mov
aaa
mov
dec
mov
xchg
push
nop
cmp
pusha
add
or
mov
imul
aad
stc
add
pop
mov
lods
inc
sbb
jmp
std
popl
cmp
mov
repnz
sbb
mov
mov
addr16
and
or
les
fwait
xchg
out
scas
mov
test
and
mov
call
bswap
fnsave
cmp
mov
test
aad
sbb
enter
inc
inc
addl
mov
ret
push
adc
mov
lods
sbb
hlt
cmp
in
cld
aas
in
and
mov
in
inc
inc
or
add
sahf
or
dec
popf
jp
xor
and
cli
cs
pop
stos
push
outsl
jno
fisttps
mov
in
jbe
lret
stc
push
mov
mov
mov
xchg
test
dec
mov
adc
add
lret
fistl
mov
mov
aad
add
push
push
pushf
pop
jmp
scas
pushf
pop
arpl
bnd
jecxz
adc
out
mov
rolb
cwtl
rolb
push
add
jp
pop
jb
and
les
inc
icebp
cmp
aad
pop
inc
pop
mov
pop
push
ret
xchg
fldl
sti
repz
xchg
sub
pop
aam
pop
xchg
push
adc
mov
mov
cltd
pop
sub
pop
inc
sub
fistps
andb
jo
ljmp
pop
mov
jns
ds
and
iret
hlt
adc
cmp
enter
or
add
xchg
into
leave
fsubrl
frstor
push
test
lret
xchg
cld
shrl
outsb
mov
lcall
test
lret
inc
ret
pop
sub
inc
sbb
xchg
add
ljmp
lock
mov
aad
lcall
sti
add
inc
pushf
dec
stc
arpl
add
adc
dec
mov
push
es
or
inc
inc
sbb
in
stc
dec
sarb
pop
in
and
sbb
mov
push
dec
popf
push
mov
mov
insl
lahf
in
push
dec
test
push
pop
fidivrs
mov
mov
inc
mov
repnz
test
push
and
push
jp
dec
mov
jne
cwtl
adc
inc
mov
add
or
fwait
cltd
dec
call
jnp
ret
arpl
lds
cmp
movsl
add
cltd
pop
out
mov
stos
lock
cmpsl
mov
testb
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
lods
or
inc
scas
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
pop
and
xchg
cwtl
test
xchg
icebp
sbb
add
in
cmp
insl
jecxz
lsl
call
lret
iret
in
movsl
je
sub
inc
push
mov
fsubs
ds
pop
mov
mov
sbb
sti
insl
in
lcall
pop
or
js
xor
les
jae
mov
pushf
fidivl
sbb
sub
test
fsubrl
pop
imul
mov
pop
mov
dec
in
mov
and
mov
negl
mov
sbb
add
bound
xchg
dec
data16
sub
and
outsb
les
fcoml
mov
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
loopne
adc
js
xchg
adc
dec
cmp
ds
mov
mov
cmpsb
pop
xchg
imul
in
fisubl
cltd
fwait
pop
call
pop
xlat
scas
cmovae
dec
shlb
loopne
hlt
js
orb
and
adc
js
mov
loopne
mov
push
mov
lret
pop
and
push
sahf
sub
or
xlat
lds
movsl
sbb
iret
addl
sub
sbb
mov
cmpsl
mov
loop
mov
movsl
mov
mov
rcll
les
rcrl
les
sub
fucomp
jae
jns
xchg
dec
popf
lret
push
test
inc
inc
stos
mov
xchg
or
mov
cmp
dec
dec
test
jno
loope
cmp
shll
add
lret
xchg
loopne
pop
inc
mov
subl
es
dec
test
std
pop
xor
in
gs
xor
fwait
aas
mov
mov
stos
cmp
imul
and
sahf
out
xor
cmpb
je
test
stc
dec
jl
xchg
push
and
inc
sbb
sbb
cli
jle
das
std
fidivrl
push
xor
fistl
inc
sahf
sub
dec
xchg
xor
pop
and
fiadds
mov
xor
sbb
sub
or
sbb
push
cwtl
sub
scas
pusha
pushf
dec
and
xchg
fmul
pop
stos
fsubr
cmpsl
popf
mov
sbb
scas
mov
jecxz
xchg
mov
lods
mov
mov
insl
mov
xchg
fcoms
bound
and
or
rorl
stos
cmp
sub
cmc
shrb
fs
fidivs
push
add
cmp
push
das
int3
jo
sbbl
jge
subl
rcll
sbb
inc
pop
cmp
stos
mov
sbb
mov
enter
and
das
shr
or
mov
xchg
cltd
jmp
and
es
imul
inc
mov
add
mov
into
pop
cmpsl
xchg
adc
sbb
idivb
shrb
or
imul
hlt
adc
dec
push
inc
jecxz
jecxz
and
sub
popa
xchg
dec
dec
sbb
mov
mov
jne
js
movsl
mov
mov
stos
mov
ja
dec
test
test
inc
mov
inc
ljmp
popf
lret
add
daa
push
dec
data16
push
cmp
lret
or
imul
xchg
jnp
dec
pop
test
mov
mov
mov
fcmovnb
lea
lret
cmp
cltd
ss
leave
loop
jnp
or
fwait
andl
roll
dec
and
dec
sarb
push
xor
fsubs
imul
cmpsl
cmp
mov
ud1
call
leave
add
push
sbb
cmpsl
je
sub
dec
inc
xchg
lret
xchg
jmp
cmp
mov
lods
mov
pop
inc
sbb
and
and
mov
push
mov
and
mov
mov
xor
jns
or
dec
popf
fisttpl
cwtl
lret
push
sbb
test
cli
test
pop
stos
push
outsl
jno
push
dec
sbb
sub
js
lods
mov
rcr
jno
pop
fxch
bound
or
lret
repz
inc
sbb
fnstenv
stos
inc
rorl
cmpsb
fistl
mov
fwait
lods
mov
jbe
xor
jno
into
mov
fucomp
rol
popf
scas
inc
and
icebp
and
add
mov
jb
fs
mov
adc
adc
and
cmp
inc
gs
dec
jae
fnstsw
adc
mov
jle
call
add
aam
xor
cmpb
mov
test
mov
dec
int3
sub
sub
xor
and
js
or
add
test
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
insl
lahf
xor
fsubrl
fnstsw
push
test
lret
mov
shrl
mov
fcomi
jae
fisttpl
lret
xchg
imul
jbe
addl
scas
xchg
push
pop
xchg
jl
rorl
movsb
cltd
fisubs
dec
mov
xchg
sbb
int3
mov
xchg
cmpsl
dec
test
scas
pop
push
mov
js
pusha
xchg
fbstp
ljmp
add
cmp
shlb
inc
sub
sub
aam
rcrl
xor
xor
mov
insl
push
ret
mov
mov
pop
sbb
inc
cltd
cltd
and
adc
data16
xchg
in
xor
lret
push
dec
mov
add
ljmp
pop
dec
push
idivb
sbb
fucomip
repz
pop
mov
dec
lahf
lret
insb
mov
add
cltd
push
mov
ret
cmpsl
mov
idiv
add
sbb
xlat
pop
sbb
test
clc
stos
dec
sbb
lahf
push
lret
fucomp
fs
stos
dec
orl
pop
xor
test
sbb
xorb
jl
shll
inc
lcall
xchg
cmp
fstp
adc
inc
popa
jae
dec
fucomi
sbb
pushl
xor
fidivrl
adc
mov
add
push
mov
or
les
inc
push
fdivrs
movsb
xor
or
lahf
outsl
aas
adcl
lods
sti
repz
iret
dec
leave
sbbb
test
fidivrl
sbb
adc
mov
mov
and
sbbl
ss
sbb
mov
pop
ds
mov
mov
pushf
mov
push
sbb
or
subb
mov
push
pop
imul
mov
pop
mov
pop
shrl
ret
scas
mov
test
aas
adc
in
stc
je
ret
xchg
jne
dec
mov
cmp
mov
imul
imul
inc
jmp
fstps
pusha
inc
loope
xchg
popf
pop
mov
sti
lahf
inc
aam
add
je
xchg
inc
andl
cmpl
mov
pop
lea
pop
sbb
clc
jns
push
fisubl
loope
cmpps
les
jb
int3
test
jb
and
and
and
or
out
push
and
dec
mov
inc
xchg
gs
add
push
das
push
lea
movsl
xchg
mov
jns
ss
pop
into
mov
push
sbb
lahf
add
cmpsl
push
cwtl
sub
das
add
aad
pop
stos
fsubr
mov
mov
sbb
xchg
xlat
repz
fs
sbb
jmp
les
jge
shlb
xor
mov
and
stos
lds
mov
mov
xor
inc
stos
shl
outsl
pop
lods
inc
sbb
jmp
std
js
jle
sbb
mov
loop
in
sub
sbb
cwtl
add
mov
xchg
sub
sub
pop
xchg
je
fwait
pop
xchg
sub
and
xor
gs
fwait
pop
lods
lea
insl
ds
sbb
enter
jmp
aaa
jmp
or
cmpb
fwait
cmc
lret
adc
pop
sbbl
int
mov
fneni(8087
mov
repz
sti
dec
push
orb
jecxz
and
lods
rcrb
dec
popa
cwtl
test
lds
jne
je
movsl
mov
mov
stos
mov
ja
pop
test
test
xchg
mov
mov
pushf
pop
mov
xchg
test
test
xor
xlat
push
addb
xchg
pop
jo
movsl
or
xor
mov
xchg
dec
cld
push
push
fcoml
adc
ljmp
stc
jmp
js
or
mov
xchg
sbb
cwtl
clc
dec
and
test
pop
aam
mov
repnz
fldl
cmpsb
fldt
fdivrs
cli
xor
loop
cmp
jne
lahf
cltd
xlat
push
mov
nop
adc
mov
loop
je
sbb
add
mov
sbb
ret
clc
movsb
cmp
dec
adc
call
pop
mov
daa
pop
mov
fucomip
jl
xchg
in
dec
lahf
aam
adc
mov
fcmovu
ret
mov
add
iret
cmpsl
dec
popf
mov
push
sbb
dec
and
pop
stos
push
and
mov
cmp
mov
cli
xor
test
and
in
cwtl
nop
cmp
sbb
or
imul
jge
pop
les
mov
movsl
nop
aaa
std
lcall
sti
push
lret
dec
jmp
lods
fiadds
ja
mov
pop
std
sarb
mov
dec
and
mov
or
int
mov
fwait
xor
fcom
push
fsubs
jno
fidivrl
mov
mov
jnp
out
cmp
cmpb
xor
xchg
test
cld
or
inc
push
daa
jne
dec
sub
lahf
sbb
pop
cmp
mov
jb
mov
ljmp
fsubp
lock
push
sbb
and
lods
push
sbb
add
pushf
ja
fsubrl
fnsave
push
test
lret
inc
imul
int
xchg
push
nop
cmp
dec
loope
mov
das
sub
jo
pop
dec
outsb
les
jmp
in
sarl
pushf
pop
jmp
cli
movsl
lea
scas
out
fwait
out
mov
dec
sbb
rcll
dec
adc
fcomps
test
je
adc
jge
xchg
cmc
mov
mov
ja
fcomps
cmpsb
movb
mov
repz
mov
sbb
daa
loopne
hlt
xor
test
outsl
push
pop
sbb
movsb
xor
mov
shl
mov
shr
repz
adc
rorb
mov
jmp
aas
pop
test
dec
lahf
lret
insb
mov
test
cltd
pusha
enter
and
fidivrl
cmpsl
mov
imulb
dec
sbb
xlat
dec
sbb
sub
leave
push
in
mov
or
mov
rcr
cli
cmp
sub
adc
mov
ret
push
inc
cmp
push
adc
xchg
pop
icebp
mov
cmp
inc
mov
scas
hlt
mov
popf
fists
fldl
or
adc
jecxz
and
sbb
inc
mov
sbb
test
cltd
xor
jmp
pop
pop
fiadds
or
mov
cmp
sbb
or
es
sete
mov
in
add
mov
pop
stos
pop
lods
lahf
lahf
mov
cmp
mov
xor
mov
and
mov
adc
mov
imulb
pop
imul
test
inc
sub
cmc
enter
cltd
push
in
leave
cmpb
iret
push
xchg
fucomip
sub
test
rorl
fsts
jl
sub
pushf
xor
sti
dec
inc
lcall
jle
mov
sub
pusha
es
pop
or
fdiv
repz
cmp
or
cmp
cmp
sub
and
add
pop
fistpl
xor
xlat
cmp
push
jne
dec
jo
sbb
mov
cmp
bound
stc
add
cwtl
hlt
xor
xchg
sub
or
mov
nop
idivl
sub
sbb
push
ret
loopne
dec
pop
rorl
and
gs
mov
int
cs
sbb
mov
cmpsl
mov
loop
mov
lret
movsl
mov
mov
and
push
dec
cmp
fisttpl
rcl
inc
mov
neg
fs
mov
lret
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
bound
pop
push
jmp
adc
or
xor
cmp
jb
adc
mov
add
mov
into
scas
fcomip
sub
xor
jle
outsl
cltd
iret
mov
sub
dec
aam
stc
js
pop
cmc
or
mov
je
dec
inc
mov
cmp
in
xorb
pop
xor
imul
ds
fisttpll
ret
pop
xchg
add
leave
addb
add
dec
orl
sbbl
sub
pop
mov
push
repz
cmp
mov
repz
sti
dec
push
shr
jecxz
and
sub
pop
sub
dec
popa
popf
adc
or
faddl
sub
xor
adc
test
insb
pop
push
dec
sbb
jae,pn
stc
inc
add
mov
and
add
cmpl
jae
enter
fnstenv
stos
inc
roll
cmpsl
fistl
mov
cwtl
pop
ret
jle
rcrb
clc
xor
xor
mov
into
mov
mov
inc
sti
and
or
jle
sbb
es
add
and
fwait
and
xchg
jg
fldl
imul
adc
hlt
lret
jge
inc
fists
call
push
or
fisttpll
xchg
mov
cmp
push
and
pop
out
mov
mov
cmp
jmp
inc
sbb
mov
add
stos
shr
adc
mov
daa
pop
xchg
iret
fucomip
jl
arpl
sbb
mov
repnz
mov
or
popf
pushf
insl
loop
or
sbbb
lcall
shrl
leave
insb
sbb
das
push
adc
mov
aaa
jmp
add
insl
test
out
lods
inc
scas
xchg
push
pop
xchg
cmp
roll
movsb
fistl
cld
addr16
mov
fldenv
stos
movsb
insb
jne
out
fcmovne
push
inc
cld
imul
mov
xor
in
sbb
mov
mov
cmp
repnz
mov
xchg
lahf
aam
jg
das
stos
fildll
dec
sbb
fsubl
jge
outsl
push
or
dec
pusha
mov
add
adc
or
sbb
mov
dec
xorl
sahf
dec
sub
cltd
sarl
or
mov
or
mov
mov
sti
mov
jecxz
push
sbb
or
adc
sbb
add
insl
movsl
mov
fs
push
mov
inc
sarb
sbb
xchg
stos
push
test
xlat
test
jnp
leave
fs
push
lret
fucomp
pushf
inc
pop
clc
scas
repz
stc
adc
jl
or
xor
push
cmc
add
cmp
rorl
cmpsb
fildl
mov
sub
cmp
int3
mov
jnp
pop
and
lahf
sahf
adc
js
xchg
jg
or
xor
call
clc
jle
andl
mov
dec
mov
dec
je
mov
fwait
cmp
lret
xchg
jbe
sbb
mov
daa
pop
repz
loope
mov
repz
push
and
cmp
sbb
mov
or
mov
int
jle
pop
jmp
mov
shl
mov
shr
repz
adc
pop
mov
loopne
out
mov
aas
pop
xchg
lahf
lret
insb
mov
addr16
pop
xor
mov
inc
pop
adc
arpl
in
stos
sbb
rcrb
or
lret
mov
push
cmp
xor
adc
fnstenv
clc
das
clc
aaa
jmp
mov
pop
sub
test
movsl
out
xchg
adc
xchg
lods
lock
pop
jne
in
pop
xchg
sub
ret
mov
in
fstps
pop
pop
sti
js
js
adc
add
adc
jmp
mov
cmpsl
or
push
xchg
cwtl
loopne
mov
inc
les
mov
xor
xor
and
fidivrs
jnp
cmp
sbb
xchg
xchg
mov
je
cwtl
enter
sbb
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
adcl
or
mov
sub
mov
std
lock
mov
adc
adc
ret
sub
aad
inc
sbb
xlat
stos
dec
push
adc
xchg
movsl
mov
and
xchg
inc
clc
scas
sbb
in
js
mov
xchg
dec
mov
sub
or
stos
jbe
pop
cmp
adc
lret
or
jmp
pushf
movsl
jg
cli
in
jae
aas
xchg
fwait
ss
popa
or
inc
cmp
andl
dec
adc
xchg
pop
mov
or
loopne
daa
mov
fsubs
movsb
xor
scas
enter
cmp
fsubrp
fnsave
mov
fstpl
xchg
cmovno
test
je
add
mov
dec
mov
mov
mov
sbb
ret
loopne
dec
pop
add
jmp
clc
sbb
mov
aaa
gs
push
enter
int
shrl
or
test
dec
and
leave
sbb
xor
insb
mov
sbb
popf
sahf
mov
jmp
loop
imul
les
jge
les
sbb
pushf
pop
sti
sub
xchg
sbb
sbb
lcall
inc
pushf
fidivl
jp
aaa
aaa
cs
ret
hlt
sbb
dec
cmc
cmp
adc
jmp
and
mov
lea
inc
jne
pop
jp
adc
adc
stos
icebp
mov
aam
mov
jnp
popf
cmc
insl
pop
mov
lea
mov
int3
pusha
ds
jecxz
mov
shr
inc
cltd
cmp
fsubr
inc
adc
dec
mov
push
pop
stos
shrl
push
adcl
pop
mov
pop
mov
or
mov
test
or
cmp
or
hlt
sub
jns
and
mov
and
sbb
test
test
shrb
jne
rcrb
jns
movb
adc
xchg
les
cld
xor
xchg
dec
cmpl
fisubl
add
sbb
arpl
test
add
cltd
cmpsl
pop
movsb
cmp
popf
dec
mov
clc
mov
icebp
leave
in
test
or
add
xor
sarb
push
out
repz
test
cmpsb
lret
xchg
cwtl
mov
xchg
mov
pop
mov
mov
testb
stos
mov
pop
mov
adc
add
mov
pop
dec
cmpb
fisubrs
popf
fwait
xor
dec
sahf
push
sub
mov
add
repz
daa
loopne
mov
repz
sti
dec
push
inc
cmpsl
lret
jecxz
add
mov
sbb
adc
inc
inc
cmp
lcall
push
adc
xor
mov
xor
mov
cmpb
lret
push
movb
fwait
jne
sbb
cmp
test
and
in
cwtl
xchg
sbb
cmp
pop
and
or
ss
add
pushf
xchg
enter
dec
lds
cmp
mov
fstps
mov
popa
or
fiaddl
mov
sub
iret
add
adc
sarb
xor
test
mov
cmp
imul
xor
jge
fcmovbe
or
cmp
in
jne
mov
adc
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
fwait
jl
dec
lahf
in
clc
daa
cltd
shl
pop
ss
add
mov
push
leave
fsubrl
popa
pmuludq
icebp
mov
adc
pop
stos
mov
loop
inc
std
mov
push
xchg
aad
dec
pop
inc
shr
and
push
nop
cmp
pop
sbb
cmp
jae
divb
loope
imul
push
jae
mov
jno
jb
adc
jmp
sub
fadd
push
fbstp
xchg
rclb
insl
in
pop
jmp
rcrb
repz
mov
in
mov
dec
and
lea
leave
aad
repz
stos
jmp
std
sar
fwait
lea
xor
mov
cwtl
cwtl
mov
enter
sbbl
cmpsl
mov
imul
sahf
dec
sub
cmpl
into
pop
mov
add
mov
and
mov
std
clc
sti
mov
xor
push
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
mov
mov
dec
aam
popa
cmpsb
loop
lcall
ret
pop
pushf
pop
addr16
std
mov
je
cmpsl
ficoms
jnp
jg
xor
mov
inc
sti
and
int3
xchg
jg
ret
movsb
or
daa
cmp
and
mov
push
in
imul
pop
inc
cmp
mov
call
cmp
cltd
enter
test
lea
adc
and
mov
sub
mov
shl
mov
shr
repz
adc
xchg
mov
loopne
out
cmpsl
mov
pop
mov
and
add
lcall
or
xorb
popf
mov
lret
push
dec
pushf
dec
int3
imul
cltd
and
repnz
test
cmpb
iret
sbb
rcrl
add
push
sub
add
inc
push
mov
mov
xchg
fwait
xchg
pop
sub
jns
mov
push
icebp
lock
lret
mov
lahf
fisttps
jle
lods
inc
cld
sbb
js
mov
subl
inc
stos
or
sbb
js
cltd
cmp
sbb
and
mov
xor
rolb
imul
jle
int
neg
cmpsl
ret
fincstp
clc
in
into
lea
cmp
mov
mov
pop
and
jecxz
inc
sbb
xor
adcl
cmpsl
or
adcb
mov
mov
and
iret
cmp
cmp
in
jne
rcrl
add
lcall
aad
or
ret
or
lret
movsl
mov
push
insb
mov
sub
testl
jo
push
scas
mov
bound
sbb
rcr
cmp
sub
inc
popa
mov
sub
enter
or
or
fistps
pushf
push
dec
inc
mov
sahf
xchg
cmp
js
xchg
jg
mov
ss
mov
mov
pop
fsubl
mov
jb
std
adc
mov
adc
dec
aam
stc
mov
and
pop
inc
std
inc
les
lods
ds
mov
pop
xchg
jg
jb
fwait
jl
into
daa
enter
loop
mov
inc
mov
test
je
xor
mov
dec
mov
mov
fucomip
repz
ret
loopne
pop
pop
dec
rorl
jnp
jl
mov
inc
sbb
mov
lcall
push
cwtl
xor
sbbl
mov
lods
popf
aad
fldenv
cltd
xchg
rcl
inc
mov
ja
fs
mov
cli
dec
loopne
shrb
add
lds
lds
xchg
mov
out
jg
cmp
pop
push
cli
std
ret
jnp
inc
pop
lcall
pop
test
xor
pop
imul
or
shlb
mov
xchg
clc
dec
mov
jns
dec
xor
jp
cmpsb
mov
fdivrs
out
mov
std
jge
imul
int3
pusha
ds
and
mov
xor
or
cltd
cltd
test
adc
adc
mov
das
push
mov
mov
movsl
sti
iret
mov
jae
fsubl
movsl
lds
jg
ret
sbb
bound
adc
ret
sbb
cmpsb
mov
out
les
pop
push
dec
sbb
cli
scas
jae
stc
fs
mov
pop
stc
mov
nop
sbb
dec
sbb
ret
or
push
or
xchg
outsb
xor
adc
lds
push
pushf
cmp
sbb
sbb
adc
cmc
and
pushf
sbb
cmpl
in
xchg
in
dec
mov
movsl
inc
push
mov
or
mov
clc
testb
in
lahf
cmpsl
mov
fwait
lea
jg
bound
out
adc
sub
push
dec
lea
fisubrs
popf
popf
xchg
mov
and
mov
out
repz
inc
or
mov
sub
out
divl
mov
add
movsl
inc
sbb
in
sub
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
fldenv
mov
jnp
roll
les
jl
jnp
hlt
xor
or
add
sub
cwtl
int3
jl
scas
mov
test
add
inc
pushf
loop
jp
xor
and
add
fstps
cld
into
movsl
xor
xlat
cmp
add
or
jg
repz
or
data16
xchg
loope
pop
xchg
fbstp
or
mov
fidivrs
cmp
in
jne
mov
sub
mov
dec
and
push
out
mov
mov
fdivrs
fsubr
mov
sbb
or
ret
shr
ss
les
jl
ss
pop
int
cmp
in
es
push
xchg
jecxz
pop
mov
sbb
sbb
add
lds
inc
cmpb
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
out
add
sbb
jge
shrl
cmpsl
pop
pushf
pop
pusha
add
sub
ss
ret
sar
and
or
popa
cmp
push
sbb
ror
rolb
inc
push
rorl
xor
test
insl
stc
and
mov
std
lret
movsl
fwait
lea
xor
mov
cwtl
jns
xchg
enter
ret
add
out
sbb
imul
sahf
dec
sub
xchg
jp
into
pop
test
adc
aam
cmp
lds
aaa
rcrl
lret
or
add
sub
cmp
xor
mov
mov
inc
sbb
inc
inc
sbb
orb
or
lret
mov
pop
cmp
into
clc
fbstp
das
outsl
test
sub
addr16
xor
and
or
stos
adc
popf
cmp
stos
sub
sub
cld
int3
cmp
inc
pop
pop
mov
cld
loop
loop
or
sub
cmove
rcrb
std
gs
inc
cmpsb
pop
addl
mov
sub
cmp
lahf
jle
push
call
mov
testl
sbb
xchg
xor
sub
mov
int
jle
fucomip
mov
xor
int3
lcall
pop
idivb
bound
mov
fwait
stc
lea
xor
imul
jbe
mov
pop
shlb
imul
lods
or
push
adc
ret
cwtl
lds
jnp
pop
xor
inc
fidivrl
cli
mov
aaa
jmp
loope
pop
invd
mov
shrb
inc
cmp
dec
lock
dec
popa
lods
fistl
jae
xor
jmp
xchg
mov
aad
cli
idivl
jmp
clc
jle
add
arpl
mov
mov
fistl
je
dec
xchg
dec
and
je
aas
xor
test
out
xor
int
icebp
push
cmpsl
ret
fincstp
clc
fcomps
lea
jbe
mov
mov
mov
enter
sbb
add
inc
adc
dec
imul
sahf
dec
mov
inc
iret
movsl
adc
ss
or
push
mov
mov
repz
add
sbb
in
xor
int
enter
jno
hlt
test
aad
cli
xchg
jno
dec
xor
dec
ret
test
pushf
dec
and
leave
pop
inc
add
fisubl
jno
lds
fbld
xchg
mov
clc
scas
js
pushf
cli
repnz
sbb
add
mov
cmp
jae
or
outsl
sub
pushf
sub
dec
int3
mov
cmp
scas
dec
sub
mov
xor
jp
js
inc
mov
pop
jb
add
push
inc
lahf
mov
stc
mov
mov
test
sbb
jecxz
xchg
mov
lahf
pop
xchg
fsubrp
jb
fwait
jl
or
add
movsb
push
pop
sub
dec
push
or
fidivs
push
pop
mov
cmp
shlb
insl
fistl
jns
jp
iret
fbstp
jno
mov
sbb
mov
mov
sti
mov
jmp
icebp
fisubrl
and
mov
and
pop
xchg
mov
mov
lods
sbb
fnstenv
scas
add
jmp
add
test
fidivrs
sbb
xchg
sbb
xchg
leave
xchg
fwait
adc
sub
jns
or
push
js
jb
lods
inc
inc
fmull
loopne
mov
insb
jns
aas
xchg
fwait
imul
js
sti
adc
xchg
push
pop
adc
mov
mov
and
xchg
jp
dec
test
aas
pop
sbb
add
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
aas
jecxz
mov
shr
inc
cltd
fdivs
fsubr
push
adc
nop
call
int3
or
shlb
insl
in
loopne
mov
push
pop
mov
lock
sbbb
hlt
test
dec
push
xchg
xchg
push
adc
xor
imul
cmp
jns
sahf
fwait
imul
call
jl
cmp
sbb
stos
aad
jne
mov
adc
or
xchg
pushf
cmpsl
pop
pusha
fwait
jnp
or
xbegin
jnp
mov
sbb
out
push
clc
pop
sub
in
sub
push
fildl
mov
fildll
mov
inc
cwtl
dec
lods
push
sti
mov
ret
fdiv
xor
movsb
inc
daa
popf
xor
cmpsl
mov
fwait
lea
ficomps
xor
inc
adc
popa
sub
lods
push
or
int
imul
enter
fisubl
lods
xchg
fisttps
pop
add
pop
add
js
dec
lahf
adc
jns
xchg
rcrb
in
sbb
add
addl
push
popa
stos
icebp
ss
xor
mov
xor
fistpll
leave
test
stos
add
movswl
jne
rorl
jno
div
fcmovne
pop
loopne
shlb
scas
outsl
mov
add
scas
ja
test
xchg
mov
scas
sbb
call
jnp
fistpll
pop
add
fdiv
sti
fstps
test
cmpl
mov
mov
mov
mov
dec
mov
fcoml
xchg
mov
mov
js
dec
mov
jl
cmp
call
inc
cltd
enter
ret
mov
cmp
mov
dec
and
add
out
mov
jne
dec
xor
loop
cmpsb
cmp
xor
and
push
js
mov
movsl
cltd
pop
pop
adcl
sti
mov
jb
insl
nop
popf
sbb
xor
popa
xchg
rolb
xchg
iret
cmpsl
mov
adc
push
lock
mov
xor
sbb
dec
sub
inc
xchg
fxch
cs
mov
pusha
cmc
cmpsl
dec
push
mov
in
je
cmp
dec
ds
mov
hlt
mov
jo
test
jl
or
xor
rcl
cltd
cmpsl
jle
mov
cmp
in
mov
cli
icebp
sbb
and
cli
or
repnz
lret
mov
xchg
pop
adc
push
add
jbe
mov
aam
and
mov
mov
enter
cmpsl
ret
out
mov
aas
mov
stos
xor
mov
cwtl
fnstenv
xchg
enter
inc
or
rcrl
push
xor
xor
and
call
xor
sysret
fists
ret
sahf
jp
insl
xchg
pop
flds
aas
orb
loope
shll
sbbb
sub
cld
sbb
xor
stos
rorl
jno
xlat
in
dec
push
movb
push
mov
fs
fnstsw
push
and
mov
les
ret
cmp
xchg
add
pop
inc
sub
pop
mov
jb
xor
in
cltd
push
pop
aaa
jns
sub
xchg
cld
sbb
sbb
sub
inc
fwait
xchg
iret
and
lea
add
rcr
mov
fwait
xchg
mov
sub
push
inc
and
call
cmp
cltd
enter
js
pop
sub
push
and
jp
fnstenv
xchg
sub
sub
aad
into
pop
stos
cmp
aaa
call
lock
je
mov
lods
lahf
pop
adc
inc
sahf
jb
dec
inc
sbb
adc
pop
fs
sbb
lock
ret
inc
mov
dec
mov
lret
aaa
stos
inc
std
mov
xor
mov
neg
shll
jge
push
mov
cmpsl
insb
sub
bound
xchg
add
cmp
jne
lds
or
std
dec
aas
pushf
rclb
jno
lds
cld
sbb
lret
fstp
sbb
dec
sti
icebp
arpl
cmp
addl
add
push
or
fidivrl
out
xor
int
jmp
cmpsl
ret
fincstp
clc
aam
lea
xor
mov
mov
sub
sbb
push
les
pop
jne
jge
push
dec
test
sbb
mov
pop
and
call
ret
loopne
inc
adcb
in
popf
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
clc
mov
testl
fstps
ss
sbb
movsl
xor
pushf
movsb
insl
stos
fcoms
pop
daa
sbb
aaa
cld
xor
lret
or
mov
scas
sbb
sar
mov
fsts
lods
jle
cltd
shll
push
repz
lret
jp
pushf
cmpsl
jb
int
sub
or
cmp
sbb
add
sub
push
mov
lock
movsl
ret
fwait
and
mov
lahf
pop
xchg
mov
jl
dec
ror
xor
mov
inc
inc
mov
ret
inc
sub
push
dec
test
rorb
pop
sub
xlat
pop
dec
pop
mov
cmp
cmpsb
ja
fadds
divl
lds
jg
ret
sbb
inc
pop
mov
insl
xchg
ret
sub
lret
imul
nop
adc
lods
stc
cmp
test
leave
lods
testl
and
pushf
mov
mov
sbb
cmp
adc
mov
cld
dec
adc
add
sbb
mov
test
fidivs
pop
aad
lds
xlat
xchg
mov
cld
enter
mov
cwtl
faddl
sbb
mov
sbb
xor
adc
test
sub
mov
out
mov
ret
fld1
std
jge
dec
cmpsb
inc
cltd
xlat
call
int3
add
orl
jb
inc
es
adc
aaa
jo
dec
sahf
xchg
push
pop
push
mov
lcall
mov
sub
ljmp
ds
cmpsl
ja
iret
rorb
mov
add
cmpsl
inc
sbb
pop
lcall
push
xchg
or
mov
test
push
dec
lahf
push
and
lds
jge
push
in
mov
fsubr
mov
sar
xor
xchg
cwtl
nop
mov
jae
mov
cmpsb
stos
rolb
mov
inc
jne
cmp
pop
cmpsl
pop
insb
ja
xor
xor
cmpb
adc
lds
cmp
sbbl
cmp
or
or
add
pop
fsubrs
fildll
mov
lods
push
in
movsl
ret
fadd
cmc
mov
lahf
cmpsl
mov
fwait
lea
lahf
aam
xor
push
adc
lea
jo
mov
dec
nop
lea
lea
rcl
pop
cmp
mov
call
pop
movsl
imul
lds
cmp
jecxz
pop
mov
or
inc
cmp
rcrb
jl
fisubrl
ret
sbb
xchg
add
adc
mov
push
pop
mov
pop
fstl
pop
dec
sbb
fcoms
ffree
push
adc
pop
or
jne
mov
stos
mov
adc
pop
pushf
jbe
xor
aad
adc
jg
out
cmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
js
mov
rorl
xchg
push
inc
push
sub
mov
jl
mov
cmp
jne
jecxz
movsb
popf
inc
test
inc
aam
sbb
fisubrs
das
pop
xlat
adc
sub
into
pop
je
popa
pop
mov
sbb
imul
cltd
in
stc
aaa
rcrl
lret
or
add
test
idivb
add
movsl
inc
xor
sahf
cwtl
cltd
adcb
add
popa
xchg
aam
xor
fst
leave
sbb
add
sub
call
scas
dec
mov
fs
fisttpl
or
fistps
jl
fidivl
mov
scas
fmuls
pop
dec
xchg
adc
push
pop
sub
nop
sbb
aad
pushf
xchg
cld
xchg
jb
mov
xor
inc
xor
fdecstp
js
pop
popf
scas
inc
movsl
fmull
xchg
mov
adc
cmpsb
add
jbe
iret
test
aam
test
dec
and
xor
test
insl
in
movsb
inc
sbb
cmpsl
ret
out
repz
fwait
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
fs
int
mov
add
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
sbb
or
sbb
cmpb
stos
int
sub
dec
xor
stos
dec
sbb
insb
push
push
xchg
jns
inc
pop
aad
stos
jae
ljmp
rcr
loopne
shlb
movsl
jl
lret
rcll
out
mov
adc
xchg
lcall
pop
stos
fsts
cmpsl
adc
loopne
jp
cmpsl
sbb
leave
push
xchg
pop
inc
bnd
insb
push
or
loop
sarb
iret
and
lea
push
mov
cld
jp
mov
jle
mov
sub
xchg
inc
and
call
cmpsl
pop
shlb
xchg
fmuls
and
rcll
shr
test
pop
movsb
popf
mov
lea
dec
mov
inc
add
dec
rcrl
adc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jl
sub
mov
xchg
iret
inc
sbb
pop
sbb
mov
imulb
les
jnp
cmp
fisubrl
sbb
mov
sti
cli
pusha
std
movsl
dec
push
dec
pop
in
dec
add
cmp
mov
add
test
cltd
stos
adc
pop
dec
fistl
xchg
xor
pop
cmp
sbb
jmp
scas
inc
fwait
push
shlb
jg
andl
xchg
decl
or
repnz
and
je
cmp
push
out
xor
int
decl
ret
fld
clc
xor
inc
jnp
aam
jl
xchg
or
fistps
push
or
out
jne
js
popa
pusha
mov
dec
and
add
pop
adc
add
mov
jno
iret
sbb
mov
adc
jbe
adc
stos
imul
mov
imulb
sbb
push
and
enter
push
adc
movsb
fldenv
negl
fs
sarl
pushf
in
jae
inc
fadds
cmp
cmp
mov
mov
mov
test
pop
dec
rol
fcmovnu
cwtl
mov
js
lds
inc
and
lahf
scas
mov
mov
loop
jo
jb
or
pusha
sarb
sub
push
mov
cld
inc
mov
sub
mov
lahf
xchg
cltd
out
mov
sti
sti
faddp
mov
js
loopne
jecxz
mov
or
out
push
adc
mov
jmp
test
xor
mov
xchg
jne
inc
hlt
out
les
shrl
loopne
mov
bound
mov
sbb
in
gs
mov
enter
inc
loop
mov
mov
mov
dec
test
dec
sarb
mov
cmpsb
add
stos
lods
mov
sbb
sub
stos
shll
jge
pushf
mov
sub
xchg
xchg
jl
out
lret
add
mov
stos
std
cld
jns
sbb
xchg
mov
xchg
pop
sbb
test
mov
pusha
pop
into
xor
mov
fwait
leave
insl
xor
pop
aaa
cwtl
call
es
mov
sbb
adc
adc
test
sub
mov
stos
cmp
out
aas
pop
sahf
push
dec
aad
jmp
inc
orb
sbb
mov
js
or
fstps
fisubrs
and
loopne
cmc
xor
aad
xchg
out
jbe
mov
sub
mov
pop
mov
pop
add
adc
jae
mov
xor
xor
push
hlt
test
ret
sbbb
inc
sbb
xchg
clc
mov
std
cld
xchg
and
les
cmp
mov
sbb
test
cmp
dec
mov
sti
cmp
inc
outsb
cmpsb
sub
mov
mov
ficomps
xchg
sbb
test
sub
sbb
scas
in
inc
mov
popf
scas
cmp
sbbl
cmc
adc
xorl
fwait
or
add
sbb
push
roll
dec
lods
push
out
dec
movsl
ret
fsubr
adc
push
loope
dec
xlat
int
ljmp
fucomp
test
pop
hlt
pusha
inc
inc
or
cmp
xlat
out
mov
mov
dec
sbb
loopne,pn
xor
dec
shll
movsb
negb
loopne
js
mov
mov
pop
adc
jae
fdivs
add
add
inc
pop
mov
add
imul
gs
pop
js
nop
sub
push
sub
movsb
leave
mov
dec
push
add
adc
mov
rcrl
or
sub
popa
sahf
cmp
imul
jge
mov
push
nop
test
mov
mov
push
adc
outsb
pop
dec
or
int3
xor
mov
mov
popf
dec
icebp
repz
call
out
jmp
mov
cmp
xchg
mov
pop
mov
sub
sub
dec
pop
cmc
stos
popa
jne
outsl
push
andnps
dec
xor
mov
push
adc
or
orb
adc
mov
jbe
mov
sbb
mov
call
mov
aam
popf
pop
pop
add
out
mov
mov
mov
or
push
aas
repnz
mov
add
or
inc
mov
lds
popf
lret
push
in
mov
in
mov
dec
sbb
in
data16
shrb
add
das
or
insl
movsl
mov
std
inc
jnp
push
lret
pop
test
repz
sbb
scas
fcomi
js
jg
scas
inc
movsl
fsubl
enter
mov
addl
add
push
mov
xlat
xor
test
insl
xchg
stc
mov
stos
mov
sti
gs
jmp
xor
rcll
add
sbb
je
dec
push
aam
dec
inc
test
cwtl
mov
icebp
lret
sbb
inc
and
cmp
pop
into
pop
stos
cmp
aaa
in
movsl
divb
pop
ds
pop
jns
clc
bound
jecxz
insl
xchg
xlat
or
sbb
movl
sub
sub
adc
movsl
dec
or
leave
xor
xlat
dec
sub
and
mov
pop
jne
movl
pop
clc
stc
mov
xchg
sbb
ds
lret
rcll
mov
scas
mov
sbb
or
cwtl
push
sub
gs
lods
cmp
ljmp
cmp
insb
push
dec
test
cmp
iret
and
lea
test
call
cmpsb
pop
mov
jp
mov
rclb
dec
lock
fdivrl
jnp
sti
inc
adcl
das
jno
adcl
enter
rcll
adc
test
cwtl
cwtl
mov
lret
sub
mov
and
in
and
xor
stos
sub
fbld
jmp
popf
sub
jb
rol
in
sub
lds
and
inc
dec
or
addr16
icebp
testb
aad
sbb
clc
push
cli
sub
fbstp
jae
stc
insl
push
lcall
xor
inc
cmp
adc
out
add
jo
imul
test
sbb
mov
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
mov
xor
pop
xchg
pop
pop
xor
mov
mov
fisubl
adc
sbb
fidivrs
pop
adc
jb
fwait
jo
aad
mov
pop
rcll
rolb
sti
inc
test
pop
mov
mov
es
mov
fwait
sbb
and
inc
pop
mov
ja
sti
pop
adc
push
sti
enter
mov
ss
add
lds
jle
addl
push
divb
aad
dec
sbb
push
jnp
push
lds
cltd
push
lock
das
cmp
loopne
xor
lods
dec
or
jae
test
cmp
ret
add
sbb
fidivl
lahf
or
sub
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
es
xchg
dec
ret
or
cmp
sub
push
mov
sbb
pop
cli
pop
mov
fs
mov
enter
inc
ret
fld1
popf
rcrl
sti
mov
push
mov
int3
loope
sbbb
pop
adc
ret
inc
aaa
jo
dec
sahf
xchg
push
pop
pop
mov
fwait
jns
pop
and
mov
ret
sar
fisubs
jmp
jmp
lods
lahf
jno
push
stc
ret
add
scas
jo
sbb
mov
iret
pop
xor
or
aad
mov
lods
std
scas
dec
sub
lahf
movsb
jmp
inc
mov
int3
xor
movsl
icebp
add
rcl
fstps
lock
sub
fnstenv
shl
adc
stos
xchg
stos
cmp
fwait
push
xchg
popf
sub
push
les
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
in
andl
mov
mov
repz
push
mov
jp
mov
aad
aas
out
xor
lahf
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
adc
sub
in
mov
hlt
xor
jns
add
xor
add
lcall
or
xchg
add
fs
icebp
mov
sbbl
xchg
lahf
xor
xlat
mov
and
mov
mov
mov
jno
mov
nop
ret
push
rclb
inc
mov
add
fldcw
pop
dec
les
pop
lcall
pop
test
lods
inc
sbb
scas
in
cmp
mov
push
jo
sbbl
sub
or
or
add
mov
push
cwtl
iret
test
sub
mov
mov
insl
icebp
out
xchg
xor
mov
arpl
jne
dec
cmpsb
inc
cltd
pop
xchg
mov
cmp
cmp
pop
cmc
leave
sbb
add
and
pop
int
imul
mov
xchg
xchg
pop
cmp
fnstsw
dec
call
or
jae
ja
sti
fists
rol
sti
mov
test
mov
adc
iret
inc
sub
imul
lds
mov
arpl
mov
pop
or
lods
xchg
cmp
jmp
jl
pop
adc
mov
push
or
in
sbb
sub
push
mov
push
xchg
mov
push
ret
into
xor
sbb
insl
xor
pop
aaa
cwtl
clc
or
addl
xchg
lock
xor
jns
rclb
jp
mov
movsb
inc
cmpsb
outsl
push
gs
insl
jg
fwait
lea
aad
repz
sbb
mov
inc
or
push
insl
lock
out
mov
mov
dec
sbb
loopne,pn
cmc
mov
mov
cmp
addr16
insl
xchg
sub
sar
fisubl
jmp
jmp
mov
pop
push
sbb
or
inc
cmp
adc
les
int
sbb
cmpb
push
imulb
adc
mov
and
and
sar
xor
pop
cmp
mov
clc
lock
dec
lret
aad
push
adc
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
in
and
mov
and
sbbl
add
or
or
add
mov
clc
or
sbb
outsb
mov
pop
xchg
hlt
push
sub
mov
nop
mov
call
or
lds
pop
fldl
add
icebp
mov
cmpsb
or
cwtl
cwtl
inc
sbb
in
cmc
sbb
fisttpl
jae
push
movsl
repz
push
ret
call
push
mov
in
std
test
sahf
popa
mov
cmp
repnz
cmp
adc
mov
sbb
pop
inc
test
movb
sub
and
test
pop
in
fisttps
mov
nop
movb
test
inc
fmuls
inc
lcall
sbb
or
cmp
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
enter
pop
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
outsl
mov
and
xchg
mov
in
ret
mov
cli
xor
cmpsl
ret
punpcklwd
outsl
or
inc
popf
repz
outsl
push
adc
sub
dec
push
aam
dec
inc
test
cwtl
clc
inc
cmp
mov
dec
mov
fisubl
xor
jne
pop
jns
pop
loopne
in
mov
jae
mov
adc
xor
add
adc
mov
sbb
mov
sub
push
mov
in
cmp
xor
pop
test
in
adc
shll
shlb
mov
pop
hlt
inc
scas
xchg
push
xchg
sbb
mov
stos
add
push
lret
pop
test
jns
sbb
scas
fcomi
js
jb
scas
inc
movsl
faddl
je
andl
addl
add
mov
xchg
xchg
sub
cs
pop
xchg
mov
in
fdivrs
aam
inc
and
lret
gs
std
inc
or
xor
fcoml
mov
rcll
adc
xchg
cltd
mov
pushf
adc
jnp
sbb
call
mov
cmp
pop
sbb
out
ds
jp
movsb
fldcw
in
fwait
rcrb
lcall
dec
mov
ss
xor
iret
mov
sbb
jbe
adc
cli
pop
xchg
xchg
cli
mov
cmp
pop
test
imul
sarl
xchg
leave
push
sub
scas
sbb
addb
imul
mov
fwait
lods
gs
lods
cmp
sub
mov
insb
push
dec
mov
sarb
andl
cwtl
into
and
ret
pop
dec
xchg
adc
xchg
pop
mov
fisubl
dec
and
insb
cmc
xchg
xchg
aas
xchg
in
pop
out
inc
sbb
mov
insl
call
test
mov
gs
mov
pop
rcll
rolb
dec
dec
test
or
jmp
cmp
xor
movsb
std
aas
std
dec
stos
push
mov
dec
in
xlat
pop
push
andl
mov
jnp
mov
cltd
je
lock
inc
aas
cli
shll
repnz
icebp
cli
dec
xchg
adc
push
mov
xlat
push
aaa
xchg
mov
cwtl
xor
aaa
pop
push
in
dec
stos
fildl
dec
sub
lret
in
cmc
iret
xchg
test
pushf
add
xor
lock
xchg
push
adc
push
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
rolb
dec
and
lcall
jge
adcl
rcrl
jg
and
xchg
mov
pop
fidivrl
jo
lret
cwtl
sub
mov
mov
int3
loope
sbbb
push
sbb
shlb
aam
xchg
cltd
sahf
or
outsb
mov
shll
xchg
sbb
aam
popf
jl
sbb
imul
ret
jecxz
movsl
mov
cltd
cwtl
jmp
sbb
push
xchg
mov
cmpb
xchg
xchg
add
faddl
movsb
fisubrl
pop
inc
inc
pop
dec
or
ret
mov
mov
mov
xchg
push
nop
cld
je
dec
mov
or
sahf
fisubrl
lahf
or
sub
pop
mov
add
lods
inc
and
lahf
scas
mov
mov
aad
jo
popa
or
mov
mov
inc
roll
or
mov
mov
pop
loope
push
sub
xchg
pop
pop
cmpsb
call
xchg
push
xabort
pop
mov
bound
out
xchg
test
inc
cmp
mov
mov
sbb
xchg
into
adc
mov
jne
fstpl
cltd
cs
adc
insl
mov
dec
sbb
jns
pushf
rcrb
dec
sbb
out
sbb
divb
sbb
stos
lds
push
clc
sub
mov
pop
sbb
clc
cmp
lods
dec
popf
lret
add
sub
inc
sbb
or
jl
jne
xchg
stos
cmp
fwait
push
xchg
sbb
shrb
push
ret
into
mov
fucomi
repnz
fwait
leave
cmc
xor
add
sbb
inc
sarb
clc
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
das
fwait
lea
clc
and
and
test
sub
fwait
inc
mov
adc
cmpb
jmp
shlb
imul
pop
adc
sub
push
mov
jnp
ret
pop
cmc
fisubl
cmp
fists
add
ret
mov
mov
mov
sbb
sbb
aad
sbb
pop
sub
jne
les
push
rcrb
jbe
movsb
lcall
pop
jae
fistpl
pop
lret
inc
ret
pop
sub
inc
sbb
or
cmp
pop
jae
mov
lods
mov
mov
push
adc
pop
lret
jecxz
bnd
int3
scas
pop
in
add
sub
inc
sarb
push
add
jp
pop
repnz
and
xor
jmp
lret
adc
mov
shll
popa
call
xchg
push
enter
and
xor
fimuls
push
adc
pop
cwtl
adc
out
aad
test
xchg
icebp
scas
int3
sbb
scas
jns
lcall
cmp
mov
mov
sbb
pop
sbb
cmp
fadds
hlt
sub
imul
sub
rcrb
sbb
vandnps
test
cmp
addr16
arpl
fucomp
cld
std
mov
mov
popf
aad
push
fs
pop
mov
mov
scas
xchg
push
xchg
std
sub
lret
out
dec
mov
rcrb
shrb
sbb
scas
fcmovnb
js
pop
cmpsl
iret
jg
aad
cmp
mov
adc
push
cwtl
int3
dec
out
inc
inc
sbb
in
stc
dec
cmp
jnp
mov
daa
scas
xor
imul
pop
sbb
into
add
dec
cmpsl
ret
fnstenv
xorl
and
xchg
sti
in
and
or
mov
out
cmc
mov
add
mov
leave
lret
inc
ds
sbb
aas
push
cmc
sbb
mov
js
sbb
mov
add
dec
inc
push
loopne
js
add
xor
mov
xor
leave
sbb
rcrb
cmpsl
jmp
xchg
mov
stc
and
lahf
loop
fildll
push
pop
pop
xchg
arpl
je
xchg
dec
inc
shlb
scas
cmpsl
cmp
inc
lcall
gs
lods
cmp
mov
pusha
mov
out
and
movsl
dec
stc
filds
and
popa
pop
addl
int3
dec
cmp
xor
sbb
imul
repnz
inc
insl
imull
push
aad
insb
and
mov
xlat
pop
jmp
jp
iret
lcall
ret
hlt
mov
in
and
dec
sub
cs
dec
ret
fildll
stos
sub
cmp
dec
in
out
and
stos
push
jae
adcb
mov
popf
jp
outsb
or
pop
or
jp
fnsave
leave
and
and
sbb
pop
sbb
mov
cmp
sub
jg
fwait
arpl
lret
leave
fldt
test
xchg
test
and
dec
mov
xchg
stos
mov
stos
xchg
push
adc
stos
mov
leave
inc
test
mov
sbb
xchg
dec
ret
out
jg
mov
dec
xlat
cld
imul
mov
pop
loopne
adc
js
xchg
adc
es
inc
jmp
fucom
dec
sarb
inc
repz
xchg
mov
adc
xchg
xor
mov
arpl
or
mov
mov
sub
jg
xchg
cmp
or
es
jg
pop
sbb
sbb
aam
push
adc
out
orb
mov
arpl
int3
add
lods
dec
sbb
out
mov
test
mov
xchg
push
and
or
ret
pop
xor
std
cmp
push
idivb
scas
pop
rcr
push
jge
sub
cmp
mov
sbb
scas
mov
jecxz
ret
lods
mov
mov
js
cmpsl
xchg
push
nop
pop
pop
xchg
dec
mov
or
stc
fisubrl
lahf
or
sub
pop
mov
test
cltd
lods
inc
inc
pushf
shlb
jecxz
push
sar
pop
or
fsubrl
pop
inc
mov
andl
outsb
jno
popl
cwtl
rorb
cmp
xor
add
mov
xchg
sbb
push
jne
insl
or
mov
call
add
and
add
or
dec
mov
cltd
mov
jbe
push
pop
jns
rorb
mov
shrl
mov
dec
lock
pop
push
add
pop
add
mov
lcall
sub
pushf
add
mov
mov
push
pushf
sbbb
jl
nop
mov
test
test
inc
mov
ret
mov
popf
lret
add
sub
inc
sbb
or
in
imul
mov
pop
mov
push
adc
pop
fiadds
imull
push
or
int3
jo
sbbl
cmp
xchg
stc
xchg
xchg
sahf
inc
cwtl
aam
sarb
fcoms
test
hlt
push
sub
stos
push
jne
insl
jne
fisubs
jb
mov
cltd
sbb
mov
and
dec
push
jb,pt
dec
mov
jne
js
and
mov
pop
adc
inc
mov
int
lahf
lret
sub
jp
rcrl
add
xor
push
cld
cmp
add
mov
mov
sub
jge
push
sbb
sti
inc
cli
shlb
scas
adc
push
outsl
jno
dec
dec
sbb
jne
lret
stc
cmp
mov
mov
mov
push
addb
add
pop
imul
xchg
adc
test
mov
pop
or
jmp
mov
mov
in
fsincos
cltd
ss
leave
loop
jnp
or
cmp
mov
mov
test
adc
pop
in
ret
mov
cli
mov
push
gs
insl
es
push
mov
bound
repnz
test
rcll
ret
inc
push
fwait
nop
sub
and
dec
mov
or
enter
pop
and
arpl
mov
jne
popa
pop
push
or
lods
cltd
jle
addr16
stc
jns
cmp
adc
mov
and
je
lahf
xchg
jno
pop
mov
push
sahf
ret
push
test
lret
cli
sub
test
sub
cmp
jae
fistpl
cwtl
lret
inc
ret
pop
sub
inc
sbb
or
cmp
movsb
pop
and
fwait
lods
jle
mov
xor
ss
mov
aaa
jg
cli
rol
popf
scas
inc
and
icebp
xor
xchg
into
cmp
addl
mov
mov
rorb
cs
pop
xchg
mov
loopne
fdivrl
xor
xor
fldenv
mov
lds
and
xor
addb
and
mov
mov
loope
cmpsb
cmc
hlt
dec
movsb
adc
fsts
mov
loopne
xor
mov
in
inc
mov
xor
jne
sbbb
inc
cmp
add
rcrl
ret
ficomps
cmc
jbe
ljmp
aas
and
jnp
push
test
clc
scas
or
cwtl
mov
fucomp
cld
std
stos
fidivs
push
mov
cmp
aas
mov
mov
push
xchg
pop
pop
mov
stos
add
dec
mov
ficompl
and
movsb
jp
aaa
pop
push
mov
js
pusha
xchg
fbstp
in
mov
sub
jg
or
inc
pop
fwait
cmp
jge
fwait
jmp
xchg
fisubl
dec
and
insb
cmc
xchg
xchg
pop
xchg
in
push
fdivrs
test
pop
add
fcomi
jne
outsl
or
add
dec
cld
loopne
push
xor
test
cmp
push
mov
cmp
jne
pop
mov
mov
iret
fldl
push
roll
shll
sub
ret
mov
cli
mov
adc
cli
add
rolb
enter
ret
fnstenv
dec
pushf
dec
lods
aad
push
mov
pop
mov
jo
test
cli
lcall
aad
fldt
arpl
add
xchg
dec
inc
shlb
or
imul
pop
push
mov
lds
lods
popf
xchg
cmp
icebp
dec
fucomi
sbb
pushl
andl
out
or
or
imul
push
inc
mov
cltd
cmp
xchg
in
mov
inc
cmp
inc
adc
call
daa
sbb
sar
and
cmpsb
je
sbb
inc
inc
sbbb
imul
fsubrs
test
aad
mov
int3
sbb
pop
and
popf
movsl
imul
fdivp
pop
icebp
fdivrl
xchg
lret
in
xchg
aas
cli
or
add
cs
jg
lret
movsl
mov
mov
popf
nop
xlat
stos
dec
sahf
fwait
pushf
push
test
pop
sbb
enter
cmp
stos
sbb
xchg
inc
dec
popf
lret
sarl
les
sbb
sbb
dec
scas
xchg
stos
mov
stos
xchg
fistl
fimull
pop
jbe
dec
jle
mov
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
sbb
mov
mov
cmp
xchg
mov
mov
cmpsl
jnp
lret
adc
push
mov
clc
enter
leave
add
sbb
mov
or
gs
das
in
cmc
mov
add
test
sub
lods
int
cmp
push
iret
and
mov
mov
inc
sbb
xor
enter
add
out
push
sbb
ret
push
cwtl
sub
sub
jne
ja
pop
stos
fsubr
mov
xchg
leave
inc
pushf
scas
mov
jecxz
mov
aaa
mov
pop
mov
xchg
push
nop
cmp
pusha
add
or
mov
imul
push
jb
sbb
jecxz
test
frstor
loope
xchg
mov
repz
inc
fwait
leave
or
js
sbb
faddl
rorb
xchg
mov
push
or
les
aam
cmc
jmp
and
and
mov
jp
lea
cmp
push
adc
movsl
loop
mov
pop
inc
dec
dec
mov
cmp
in
dec
ret
orl
mov
pop
mov
or
fisubrl
fldcw
cmp
mov
inc
lods
fadds
mov
sub
lds
jne
dec
push
movsl
mov
mov
stos
mov
ja
push
push
sbb
inc
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
xchg
fists
dec
mov
stc
add
pop
mov
lods
inc
sbb
jmp
std
popl
cmp
mov
repnz
sbb
mov
mov
addr16
and
or
les
fwait
xchg
out
scas
mov
test
and
mov
call
bswap
fnsave
cmp
mov
test
aad
sbb
enter
inc
inc
addl
mov
ret
push
adc
mov
lods
sbb
hlt
cmp
in
cld
aas
in
and
mov
in
inc
inc
or
add
cmpsb
or
dec
popf
jp
xor
orl
xor
fistps
push
outsl
jno
mov
mov
in
out
mov
stc
push
pusha
lods
mov
mov
xchg
test
dec
mov
adc
add
lret
fistl
mov
mov
aad
add
push
push
pushf
pop
jmp
scas
pushf
pop
arpl
bnd
jecxz
adc
out
mov
rolb
cwtl
rolb
push
add
jp
pop
jb
and
les
inc
icebp
cmp
aad
pop
inc
pop
mov
pop
push
ret
xchg
fldl
sti
repz
xchg
sub
pop
aam
pop
xchg
push
adc
mov
mov
cltd
pop
sub
pop
inc
sub
fistps
andb
jo
ljmp
pop
mov
jns
ds
and
iret
hlt
adc
cmp
enter
imul
repz
fsubrl
frstor
push
test
lret
xchg
aad
test
mov
lcall
test
mov
ret
pop
sub
inc
sbb
xchg
add
ljmp
lock
mov
aad
lcall
sti
add
inc
pushf
dec
stc
arpl
add
adc
dec
mov
push
es
or
inc
inc
sbb
in
stc
dec
sarb
pop
in
and
sbb
mov
push
dec
popf
push
mov
mov
insl
lahf
in
push
dec
test
push
pop
fidivrs
mov
mov
inc
mov
repnz
test
push
and
push
jp
dec
mov
jne
cwtl
adc
inc
mov
add
or
fwait
cltd
dec
call
jnp
ret
arpl
lds
cmp
movsl
add
cltd
pop
ret
mov
stos
pop
iret
cmpsl
mov
testb
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
push
fucomp
cld
std
lods
lcall
movsl
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
pop
and
xchg
cwtl
test
xchg
icebp
sbb
add
in
cmp
insl
jecxz
lsl
call
lret
iret
in
movsl
je
sub
inc
push
mov
fsubs
ds
pop
mov
mov
sbb
sti
insl
in
lcall
pop
or
js
xor
les
jae
mov
pushf
fiaddl
mov
push
sbb
sub
test
fsubrl
pop
imul
mov
pop
mov
dec
fwait
test
xchg
movsb
fildll
inc
mov
sbb
add
bound
xchg
dec
data16
sub
and
outsb
les
fcoml
mov
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
loopne
adc
js
xchg
adc
dec
cmp
ds
mov
mov
cmpsb
pop
xchg
imul
in
fisubl
cltd
fwait
pop
call
pop
xlat
scas
cmovae
dec
shlb
loopne
hlt
js
orb
and
adc
js
mov
loopne
mov
push
mov
lret
pop
and
push
sahf
sub
or
xlat
lds
movsl
sbb
iret
addl
sub
sbb
mov
cmpsl
mov
loop
mov
mov
push
nop
xlat
stos
dec
sahf
jp
push
test
pop
sbb
into
mov
cmp
sub
fucomp
jae
jns
mov
popf
lret
push
test
inc
inc
stos
stos
jl
adc
lcall
sti
dec
inc
lcall
jle
mov
lods
inc
movsb
outsb
shll
add
lret
xchg
loopne
pop
inc
mov
subl
es
dec
test
std
pop
xor
in
gs
xor
fwait
aas
mov
mov
stos
cmp
imul
and
sahf
out
xor
cmpb
je
test
stc
dec
jl
xchg
push
and
inc
sbb
sbb
cli
jle
das
std
fidivrl
push
xor
fistl
inc
sahf
sub
dec
xchg
xor
pop
and
fiadds
mov
sbb
fisubrl
or
sbb
push
cwtl
sub
scas
icebp
pushf
dec
and
xchg
cli
lret
fsubr
cmpsl
mov
dec
sbb
scas
mov
jecxz
xchg
mov
mov
insl
mov
xchg
fcoms
bound
and
or
rorl
stos
cmp
sub
cmc
shrb
fs
fidivs
push
add
cmp
push
das
int3
jo
sbbl
jge
subl
rcll
sbb
inc
pop
cmp
stos
mov
sbb
mov
enter
and
das
shr
or
mov
xchg
cltd
jmp
and
es
imul
inc
mov
add
mov
into
pop
cmpsl
xchg
adc
sbb
idivb
shrb
or
imul
hlt
adc
dec
push
inc
out
jecxz
and
sub
sub
dec
popa
xchg
dec
dec
sbb
mov
mov
jne
js
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
ljmp
popf
lret
add
daa
push
dec
data16
push
cmp
lret
or
imul
xchg
jnp
dec
pop
test
mov
mov
mov
fcmovnb
lea
lret
cmp
cltd
ss
leave
loop
jnp
or
fwait
andl
roll
dec
and
dec
sarb
push
xor
fsubs
imul
cmpsl
cmp
mov
ud1
call
leave
add
push
sbb
cmpsl
je
sub
dec
inc
xchg
lret
xchg
jmp
cmp
mov
lods
mov
pop
inc
sbb
and
and
mov
int3
mov
and
mov
mov
xor
jns
or
dec
popf
fldt
xor
sub
nop
xor
test
pop
stos
push
outsl
jno
xor
mov
in
stos
mov
stc
js
lods
mov
rcr
jno
xchg
fxch
bound
or
lret
repz
inc
sbb
fnstenv
stos
inc
rorl
cmpsb
fistl
mov
fwait
lods
mov
jbe
xor
jno
into
mov
fucomp
rol
popf
scas
inc
and
icebp
and
add
mov
jb
fs
mov
adc
adc
and
cmp
inc
gs
dec
jae
fnstsw
adc
mov
jle
call
add
aam
xor
cmpb
mov
test
mov
dec
int3
sub
sub
xor
and
js
or
add
test
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
or
inc
insl
lahf
dec
fsubrl
fnstsw
push
test
lret
mov
test
pop
mov
fcomi
jae
fisttpl
lret
xchg
imul
jbe
addl
scas
xchg
push
pop
xchg
jl
rorl
movsb
cltd
fisubs
dec
mov
xchg
sbb
int3
mov
xchg
cmpsl
dec
test
scas
pop
push
mov
js
pusha
xchg
fbstp
ljmp
add
cmp
shlb
inc
sub
sub
aam
rcrl
xor
xor
mov
insl
push
ret
mov
mov
pop
sbb
inc
cltd
cltd
and
adc
data16
xchg
in
xor
lret
push
dec
mov
add
ljmp
pop
dec
push
idivb
sbb
fucomip
repz
pop
mov
mov
jmp
cltd
push
cmpsl
mov
ret
cmpsl
mov
idiv
cld
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
stos
imul
push
lret
fucomp
fs
stos
push
dec
insl
cmp
cmp
xor
push
cmc
add
xchg
ja
stos
inc
lcall
xchg
cmp
fstp
adc
inc
popa
jae
dec
fucomi
sbb
pushl
xor
fidivrl
adc
mov
add
push
mov
or
les
inc
push
fdivrs
movsb
xor
or
lahf
outsl
aas
adcl
lods
sti
repz
iret
dec
leave
sbbb
test
fidivrl
sbb
adc
mov
mov
and
sbbl
ss
sbb
mov
pop
daa
sti
mov
adc
mov
adc
sub
add
fsubrl
pop
imul
mov
pop
mov
pop
fldcw
ret
scas
mov
test
stos
cmp
sti
push
jl
cmp
inc
movsl
out
xchg
add
push
pushf
pop
stos
xchg
push
fcmovbe
sbb
fistpl
jl
jecxz
stos
fmull
out
mov
mov
iret
pop
mov
enter
cli
cmc
jl
xchg
xor
in
or
pop
xchg
xor
push
or
adc
dec
cmp
in
mov
in
in
test
push
push
popfw
xchg
mov
mov
je
cmp
cwtl
push
hlt
stos
inc
icebp
xchg
adc
ret
push
dec
mov
sbb
inc
xor
push
repnz
test
imul
ret
loopne
dec
pop
subb
repz
sbb
movsl
ds
lret
jecxz
gs
repz
int
push
mov
sbb
mov
mov
loop
loop
lret
movsl
mov
mov
mov
fidivrl
sbb
and
mov
lcall
adc
in
stc
je
ret
xchg
jne
dec
mov
cmp
mov
imul
imul
inc
jmp
fstps
pusha
inc
loope
xchg
popf
pop
mov
sti
lahf
inc
aam
add
je
xchg
inc
andl
cmpl
mov
pop
lea
pop
sbb
clc
jns
push
fisubl
loope
cmpps
les
jb
int3
test
jb
and
and
and
or
out
push
and
dec
mov
inc
xchg
gs
add
push
das
push
loop
pop
mov
pop
mov
and
mov
pop
and
mov
jo
ret
mov
add
out
push
cwtl
sub
das
setl
push
jne
aam
pop
stos
fsubr
mov
mov
sbb
xchg
repz
fs
sbb
jmp
les
jge
shlb
xor
mov
and
stos
lds
mov
mov
xor
inc
stos
shl
outsl
pop
lods
inc
sbb
jmp
std
js
jle
sbb
mov
loop
in
sub
sbb
cwtl
add
mov
xchg
sub
sub
pop
xchg
je
fwait
pop
xchg
sub
and
xor
gs
fwait
pop
lods
lea
insl
ds
sbb
enter
jmp
aaa
jmp
or
cmpb
fwait
cmc
lret
adc
pop
sbbl
je
mov
xor
mov
repz
sti
dec
push
sbbb
lods
mov
popa
cwtl
fmuls
or
fdivl
je
movsl
mov
mov
stos
mov
ja
pop
test
test
xchg
stos
push
xchg
push
jae
cld
shlb
jge
pop
mov
xchg
test
test
xor
xlat
push
addb
xchg
pop
jo
movsl
or
xor
mov
xchg
dec
cld
push
push
fcoml
adc
ljmp
stc
jmp
js
or
mov
xchg
sbb
cwtl
clc
dec
and
test
pop
aam
mov
repnz
fldl
cmpsb
fldt
fdivrs
cli
xor
loop
cmp
jne
lahf
cltd
xlat
push
mov
nop
adc
mov
loop
je
sbb
add
mov
sbb
ret
clc
movsb
cmp
dec
adc
call
pop
mov
daa
pop
mov
iret
fucomip
jl
xchg
jnp
dec
lahf
aam
adc
mov
bound
fisubrl
ss
dec
popf
mov
push
sbb
dec
and
pop
stos
push
and
mov
popf
test
xchg
xor
test
and
in
cwtl
nop
cmp
sbb
or
imul
jge
pop
les
mov
movsl
nop
aaa
std
lcall
sti
push
lret
dec
jmp
lods
fiadds
ja
mov
pop
std
sarb
mov
dec
and
mov
or
int
mov
fwait
xor
fcom
push
fsubs
jno
fidivrl
mov
mov
jnp
out
cmp
cmpb
xor
xchg
test
cld
or
inc
push
daa
jne
dec
sub
lahf
int
into
pop
mov
cmp
mov
jb
mov
mov
sbb
push
sbb
and
lods
pop
sbb
add
pushf
push
leave
fsubrl
fnsave
push
test
lret
inc
imul
int
xchg
push
nop
cmp
dec
loope
mov
das
sub
jo
pop
dec
outsb
les
jmp
in
sarl
pushf
pop
jmp
cli
movsl
lea
scas
out
fwait
out
mov
dec
sbb
rcll
dec
adc
fcomps
test
je
adc
jge
xchg
cmc
mov
mov
ja
fcomps
cmpsb
movb
mov
repz
mov
sbb
daa
loopne
hlt
xor
test
outsl
push
pop
sbb
movsb
xor
mov
shl
mov
shr
repz
adc
scas
mov
loopne
out
and
fucomip
repz
pop
test
mov
movsl
mov
pop
xor
mov
and
fisubrl
imulb
dec
sbb
xlat
dec
sbb
sub
leave
push
in
mov
or
mov
rcr
cli
cmp
sub
adc
mov
ret
push
inc
cmp
push
adc
xchg
pop
icebp
mov
cmp
inc
mov
scas
hlt
mov
popf
fists
fldl
or
adc
jecxz
and
sbb
inc
mov
sbb
test
cltd
xor
jmp
pop
pop
fiadds
or
mov
cmp
sbb
or
es
sete
mov
in
sahf
dec
mov
into
pop
stos
pop
lods
lahf
pop
mov
cmp
mov
xor
mov
pop
lock
mov
adc
je
add
fsubrl
pop
imul
test
inc
sub
cmc
enter
cltd
push
in
leave
cmpb
iret
push
xchg
fucomip
sub
test
rorl
fsts
jl
sub
pushf
xor
sti
dec
inc
lcall
jle
mov
sub
pusha
es
pop
or
fdiv
repz
cmp
or
cmp
cmp
sub
and
add
pop
fistpl
xor
xlat
cmp
push
jne
dec
jo
sbb
mov
cmp
bound
stc
add
cwtl
hlt
xor
xchg
sub
or
pop
or
jne
cmp
repz
ret
loopne
dec
pop
shr
repz
sbb
and
cltd
adc
int
scas
mov
sbb
mov
cmpsl
mov
loop
mov
lret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
cmp
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
leave
jl
add
test
mov
fmull
pop
add
fdivrs
xlat
cmpsb
std
mov
cli
mov
pop
sahf
fisubrs
pop
mov
test
push
inc
mov
cwtl
stc
and
adc
and
inc
cltd
pop
test
add
ljmp
push
mov
movsl
popl
iret
fcomip
jns
sarl
xor
mov
mov
fwait
add
in
xor
fstpt
jo
dec
cmp
fisttpl
rcl
inc
mov
neg
fs
mov
lret
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
bound
pop
push
jmp
adc
or
xor
cmp
jb
adc
mov
add
mov
into
scas
fcomip
sub
xor
jle
outsl
cltd
iret
mov
sub
dec
aam
stc
js
pop
cmc
or
mov
je
dec
inc
mov
cmp
in
xorb
pop
xor
imul
ds
fisttpll
ret
pop
xchg
add
leave
addb
add
dec
xor
fisubrs
popf
addl
mov
add
mov
and
mov
repz
sti
dec
push
shrl
jecxz
and
sub
pop
sub
dec
popa
popf
jno
sbb
mov
scas
data16
faddl
sub
xor
adc
test
insb
pop
push
dec
sbb
jae,pn
stc
inc
add
mov
and
add
cmpl
jae
enter
fnstenv
stos
inc
roll
cmpsl
fistl
mov
cwtl
pop
ret
jle
rcrb
clc
xor
xor
mov
into
mov
mov
inc
sti
and
or
jle
sbb
es
add
and
fwait
and
xchg
jg
fldl
imul
adc
hlt
lret
jge
inc
fists
call
push
or
fisttpll
xchg
mov
cmp
push
and
fsubr
mov
mov
cmp
fsubr
mov
sbb
mov
add
stos
shr
adc
mov
daa
pop
xchg
mov
lahf
aam
sbb
mov
repnz
ret
mov
or
popf
pushf
insl
loop
or
sbbb
lcall
shrl
leave
insb
sbb
das
push
adc
mov
aaa
jmp
add
insl
test
out
lods
inc
scas
xchg
push
pop
xchg
cmp
roll
movsb
fistl
cld
addr16
mov
fldenv
stos
movsb
insb
jne
out
fcmovne
push
inc
cld
imul
mov
xor
in
sbb
mov
mov
cmp
repnz
mov
xchg
lahf
aam
jg
das
stos
fildll
dec
sbb
fsubl
jge
outsl
push
or
dec
pusha
mov
add
adc
or
jo
imul
sahf
dec
sub
cltd
push
mov
or
mov
or
mov
push
clc
sti
mov
jecxz
push
sbb
jl
adc
sbb
add
insl
movsl
mov
fs
push
mov
inc
sarb
sbb
xchg
stos
push
test
xlat
test
jnp
leave
fs
push
lret
fucomp
pushf
inc
pop
clc
scas
repz
stc
adc
jl
or
xor
push
cmc
add
cmp
rorl
cmpsb
fildl
mov
sub
cmp
int3
mov
jnp
pop
and
lahf
sahf
adc
js
xchg
jg
or
xor
call
clc
jle
andl
mov
dec
mov
dec
je
mov
fwait
cmp
lret
xchg
jbe
sbb
mov
daa
pop
repz
loope
mov
repz
push
and
cmp
sbb
mov
mov
adc
mov
int
jle
pop
jmp
mov
shl
mov
shr
repz
adc
mov
ret
loopne
out
mov
aas
pop
xchg
lahf
lret
insb
mov
mov
cltd
dec
inc
mov
adc
movsb
ret
in
stos
sbb
rcrb
or
lret
mov
push
cmp
xor
adc
fnstenv
clc
das
clc
aaa
jmp
mov
pop
sub
test
movsl
out
xchg
adc
xchg
lods
lock
pop
jne
in
pop
xchg
sub
ret
mov
in
fstps
pop
pop
sti
js
js
adc
add
adc
jmp
mov
cmpsl
or
push
xchg
cwtl
loopne
mov
inc
les
mov
xor
xor
and
fidivrs
jnp
cmp
sbb
xchg
xchg
mov
je
jo
jecxz
inc
sbb
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
and
dec
or
mov
icebp
sti
mov
mov
adc
adc
ret
sub
aad
inc
sbb
xlat
stos
dec
push
adc
xchg
movsl
mov
and
xchg
inc
clc
scas
sbb
in
js
mov
xchg
dec
mov
sub
or
stos
jbe
pop
cmp
adc
lret
or
jmp
pushf
movsl
jg
cli
in
jae
aas
xchg
fwait
ss
popa
or
inc
cmp
andl
dec
adc
xchg
pop
mov
or
loopne
daa
mov
fsubs
movsb
xor
scas
enter
cmp
fsubrp
fnsave
mov
and
inc
test
push
or
fidivs
popf
mov
dec
mov
mov
jmp
repz
ret
loopne
dec
pop
add
jmp
clc
sbb
mov
aaa
gs
push
enter
int
shrl
or
test
dec
and
leave
sbb
xor
insb
mov
sbb
popf
sahf
mov
jmp
loop
imul
les
jge
les
sbb
pushf
pop
sti
sub
xchg
sbb
sbb
lcall
inc
pushf
fidivl
jp
aaa
aaa
cs
ret
hlt
sbb
dec
cmc
cmp
adc
jmp
and
mov
lea
inc
jne
pop
jp
adc
adc
stos
icebp
mov
aam
mov
jnp
popf
cmc
insl
pop
mov
lea
mov
int3
pusha
cmp
jecxz
mov
shr
inc
cltd
cmp
mov
jmp
adc
dec
mov
inc
pop
stos
shrl
push
add
pop
mov
mov
jns
stc
mov
test
or
cmp
or
hlt
sub
jns
and
mov
and
sbb
test
test
shrb
jne
rcrb
jns
movb
adc
xchg
les
cld
xor
xchg
dec
cmpl
fisubl
add
sbb
arpl
test
add
cltd
cmpsl
pop
movsb
cmp
popf
dec
mov
clc
mov
icebp
leave
in
test
or
add
xor
sarb
push
out
repz
test
cmpsb
lret
xchg
cwtl
mov
xchg
mov
pop
mov
mov
testb
stos
mov
pop
bound
out
adc
add
mov
pop
dec
subb
fisubrs
popf
fwait
ljmp
pop
mov
add
mov
loopne
mov
repz
sti
dec
push
inc
cmpsl
lret
jecxz
add
mov
sbb
push
lcall
push
adc
xor
mov
xor
mov
cmpb
lret
push
movb
fwait
jne
sbb
cmp
test
and
in
cwtl
xchg
sbb
cmp
pop
and
or
ss
add
pushf
xchg
enter
dec
lds
cmp
mov
fstps
mov
popa
or
fiaddl
mov
sub
iret
add
adc
sarb
xor
test
mov
cmp
imul
xor
jge
fcmovbe
or
cmp
in
jne
scas
mov
adc
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
fwait
jl
dec
lahf
in
clc
daa
cltd
xor
pop
ss
add
mov
push
leave
fsubrl
popa
pmuludq
icebp
mov
adc
pop
stos
mov
loop
inc
std
mov
push
xchg
aad
dec
pop
inc
shr
and
push
nop
cmp
pop
sbb
cmp
jae
divb
loope
imul
push
jae
mov
jno
jb
adc
jmp
sub
fadd
push
fbstp
xchg
rclb
insl
in
pop
jmp
rcrb
repz
mov
in
mov
dec
and
lea
leave
aad
repz
stos
jmp
std
rol
fwait
lea
xor
mov
cwtl
cwtl
ret
xchg
enter
sbbl
out
sub
imul
sahf
dec
sub
orl
into
pop
mov
add
mov
and
mov
std
clc
sti
mov
xor
push
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
mov
mov
dec
aam
popa
cmpsb
loop
lcall
ret
pop
pushf
pop
addr16
std
mov
je
cmpsl
ficoms
jnp
jg
xor
mov
inc
sti
and
int3
xchg
jg
ret
movsb
or
daa
cmp
and
mov
push
in
imul
pop
inc
cmp
mov
call
cmp
cltd
enter
test
lea
adc
and
jle
lret
mov
shl
mov
shr
repz
adc
jnp
cmpsl
mov
pop
mov
and
add
lcall
or
xorb
popf
mov
lret
push
dec
pushf
dec
int3
imul
cltd
and
repnz
test
cmpb
iret
sbb
rcrl
add
push
sub
add
inc
push
mov
mov
xchg
fwait
xchg
pop
sub
jns
mov
push
icebp
lock
lret
mov
lahf
fisttps
jle
lods
inc
cld
sbb
js
mov
subl
inc
stos
or
sbb
js
cltd
cmp
sbb
and
mov
xor
rolb
imul
jle
int
divl
clc
in
mov
fst
ret
out
mov
enter
sbb
pop
add
inc
adc
or
cmpsl
xor
sbbb
mov
dec
and
iret
cmp
jnp
jl
mov
inc
sbb
mov
lcall
push
cwtl
xor
sbbl
mov
lods
popf
aad
fldenv
cltd
xchg
rcl
inc
mov
ja
fs
mov
cli
dec
loopne
shrb
add
lds
lds
xchg
mov
out
jg
cmp
pop
push
cli
std
ret
jnp
inc
pop
lcall
pop
test
xor
pop
imul
or
shlb
mov
xchg
clc
dec
mov
jns
dec
xor
jp
cmpsb
mov
fdivrs
out
mov
std
jge
dec
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
ret
jecxz
mov
shr
inc
cltd
cltd
pop
mov
jmp
adc
adc
mov
das
push
mov
mov
movsl
sti
iret
mov
jae
fsubl
movsl
lds
jg
ret
sbb
bound
adc
ret
sbb
cmpsb
mov
out
les
pop
push
dec
sbb
cli
scas
jae
stc
fs
mov
pop
stc
mov
nop
sbb
dec
sbb
ret
or
push
or
xchg
outsb
xor
adc
lds
push
pushf
cmp
sbb
sbb
adc
cmc
and
pushf
sbb
cmpl
in
xchg
in
dec
mov
movsl
inc
push
mov
or
mov
clc
mov
popf
jmp
lahf
cmpsl
mov
fwait
lea
jg
bound
out
adc
out
sub
out
push
or
int
imul
push
sub
mov
push
out
repz
inc
or
pop
mov
sub
out
divl
mov
add
movsl
inc
sbb
in
sub
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
fldenv
mov
jnp
roll
les
jl
jnp
hlt
xor
or
add
sub
cwtl
int3
jl
scas
mov
test
add
inc
pushf
loop
jp
xor
and
add
fstps
cld
into
movsl
xor
xlat
cmp
add
or
jg
repz
or
data16
xchg
loope
pop
xchg
fbstp
or
jmp
inc
and
mov
cmp
in
jne
lock
sub
mov
dec
and
push
push
out
mov
mov
fdivr
fsubr
mov
sbb
pop
mov
ret
shr
ss
les
jl
ss
pop
int
cmp
in
es
push
xchg
jecxz
pop
mov
sbb
sbb
add
lds
inc
cmpb
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
out
add
sbb
jge
shrl
cmpsl
pop
pushf
pop
pusha
add
sub
ss
ret
sar
and
or
popa
cmp
push
sbb
ror
rolb
inc
push
rorl
xor
test
insl
stc
lret
sbb
cmpsl
ret
out
lret
das
fwait
lea
xor
mov
cwtl
jns
xchg
enter
ret
add
out
in
fisubrs
pop
dec
mov
sahf
dec
sub
xchg
jp
into
pop
test
adc
aam
cmp
lds
aaa
rcrl
lret
or
add
sub
cmp
xor
mov
mov
inc
sbb
inc
inc
sbb
orb
or
lret
mov
pop
cmp
into
clc
fbstp
das
outsl
test
sub
addr16
xor
and
or
stos
adc
popf
cmp
stos
sub
sub
cld
int3
cmp
inc
pop
pop
mov
cld
loop
loop
or
sub
cmove
rcrb
std
gs
inc
cmpsb
pop
xorl
sti
sub
sub
lahf
jle
push
js
jb
js
mov
testl
sbb
xchg
int
dec
push
adc
sub
mov
int
jle
lret
mov
shl
mov
add
xor
bound
mov
fwait
stc
lea
xor
imul
jbe
mov
pop
shlb
imul
lods
or
push
adc
ret
cwtl
lds
jnp
pop
xor
inc
fidivrl
cli
mov
aaa
jmp
loope
pop
invd
mov
shrb
inc
cmp
dec
lock
dec
popa
lods
fistl
jae
xor
jmp
xchg
mov
aad
cli
idivl
jmp
clc
jle
add
arpl
mov
mov
fistl
je
dec
test
fidivrl
jae
test
out
xor
int
icebp
push
cmpsl
ret
fincstp
clc
fcomps
mov
mov
jecxz
inc
sbb
add
inc
adc
imul
sahf
dec
mov
inc
inc
sub
arpl
fsubs
movsl
popf
sysret
fists
add
push
sbb
enter
add
rcrl
jecxz
popf
lcall
dec
pushf
dec
int3
imul
mov
xor
mov
iret
fbstp
jno
rorb
cmpsl
icebp
add
cmp
sbb
xor
xchg
push
test
movsl
adc
pop
pop
fistl
pop
jo
sbb
aad
fstpl
pop
fldt
inc
cwtl
push
test
cld
loop
in
nop
xchg
incl
cwtl
cld
inc
mov
test
mov
mov
inc
cmpsb
pop
mov
xchg
mov
sub
and
and
call
cmp
enter
mov
int3
pop
sub
push
adc
xor
mov
fucomip
mov
cmc
mov
and
jle
mov
cmp
ljmp
je
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
add
pop
or
cmp
mov
mov
mov
test
pop
addb
enter
cld
and
rcrl
mov
movsl
mov
ljmp
rorl
inc
clc
or
fildl
pop
aas
xor
mov
add
adc
out
pop
test
out
xor
int
out
mov
fcoml
cmpsb
inc
cmpsl
fnsave
mov
cwtl
enter
sbb
inc
adc
out
mov
cs
push
fldcw
xor
xchg
and
rcl
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
inc
pop
xchg
add
push
cwtl
xor
sbbl
mov
sub
cmp
test
in
fisttps
inc
inc
ficompl
cli
mov
imull
je
mov
adc
add
test
std
cld
jns
sbb
sbb
lods
pop
fs
dec
inc
mov
xor
out
xor
sbb
jmp
mov
fmull
sti
and
push
fsts
aam
mov
add
mov
rcr
mov
inc
cwtl
push
test
push
mov
rcll
or
lahf
pop
xchg
dec
jb
fwait
jl
int
enter
loop
rcrl
cmovno
or
jbe
int
inc
cmp
or
mov
xor
test
aas
xlat
pop
dec
pop
mov
cmp
es
clc
rolb
mov
movsl
mov
jg
std
dec
inc
sbb
add
add
adc
leave
fdivl
ret
sbb
fs
iret
js
push
fwait
aad
sub
cmc
mov
jecxz
mov
mov
ret
cmp
mov
mov
sbb
cmpsb
sub
lcall
jge
pop
add
flds
cld
iret
jg
ret
sub
mov
cmc
mov
fmull
repz
mov
inc
es
mov
sbb
shll
adc
test
sub
mov
out
mov
ret
fld1
std
jge
jno
inc
cltd
xlat
call
int3
pusha
jb,pt
jecxz
mov
shr
lret
insb
leave
sub
add
mov
lcall
mov
sub
out
daa
push
adc
adc
mov
outsb
add
cmpsl
inc
test
shr
sub
push
nop
aas
mov
sbb
incl
pop
fs
mov
mov
and
pop
jmp
dec
sar
mov
xor
insl
pop
imul
xor
lock
rorl
stos
movsl
xchg
mov
fcoml
mov
leave
pop
stc
int3
scas
std
stc
loope
sarl
xchg
sti
jne
fsts
mov
or
add
cmp
sub
lods
push
stc
pop
movsl
ret
fmul
or
movsb
inc
daa
popf
mov
lahf
cmpsl
mov
fwait
lea
je
xor
inc
adc
sub
cmp
or
inc
inc
gs
cmpsb
or
jle
pop
push
mov
call
jns
dec
and
rcrl
fucomip
sbb
aas
call
xchg
movsl
mov
or
inc
movl
inc
cmpb
adc
ret
mov
or
xlat
addr16
cmp
lods
jns
loop
scas
xchg
sbb
stc
mov
dec
pop
pop
in
inc
sub
shrb
add
das
or
pop
dec
or
jge
imul
sub
mov
cs
cli
mov
das
pop
icebp
cmp
cmp
pop
pop
mov
popa
cmp
aas
sub
inc
sbb
mov
mov
jge
jg
test
adc
inc
push
sub
mov
jl
mov
cmp
in
jne
repnz
or
mov
add
inc
sub
xlat
adc
ret
dec
sub
into
pop
je
popa
push
mov
sbb
in
mov
mov
pop
xor
call
or
add
test
pop
and
dec
mov
adc
stos
inc
sbb
int
mov
pushf
adc
test
pusha
dec
stos
push
xchg
mov
lahf
mov
outsb
popa
push
pop
clc
stc
mov
xchg
sbb
push
sbb
lret
rcll
push
xchg
or
sbb
sbb
pop
call
test
cmp
fs
xor
cmp
cwtl
cmp
xchg
test
mov
addl
add
push
cmp
xor
test
insl
loope
movsb
inc
sbb
cmpsl
ret
out
stos
sbbl
mov
cwtl
pop
aaa
xchg
enter
int3
adc
lret
sub
add
shl
mov
dec
arpl
aad
mov
loopne
rorl
callw
pop
in
cmp
xchg
xchg
push
xchg
jbe
mov
pop
shlb
inc
sbb
cltd
divb
shlb
les
mov
sbb
sub
mov
push
adc
dec
and
inc
cmp
adc
ret
push
nop
sbb
ja
or
mov
enter
cmp
mov
fmull
cmp
xor
fsubr
in
adc
cmp
sarb
iret
and
inc
jecxz
mov
les
jecxz
xchg
mov
sub
cmpsl
inc
and
call
mov
testl
test
add
mov
popf
mov
lea
dec
mov
add
mov
mov
imul
pop
xor
iret
sbb
lds
or
push
enter
jno
hlt
test
lds
clc
test
test
cltd
rorl
icebp
cltd
xlat
in
lret
sbb
lock
das
cmp
lods
inc
xor
lods
dec
or
dec
je
cmpsl
jae
test
cmp
ret
add
and
lcall
insl
pop
jnp
push
dec
sahf
sbb
jmp
cwtl
popf
adc
jg
pushf
jne
jle
fimuls
cmpsb
andl
addl
add
out
xor
mov
imul
je
cmp
pop
test
out
xor
int
jmp
idiv
enter
inc
cmpsl
fucom
aaa
out
mov
and
movsb
cmp
cmp
jne
js
popa
pusha
mov
dec
and
adcb
inc
rcll
push
imul
lcall
into
inc
xchg
lods
nop
out
mov
mov
lock
add
cmpsb
sub
rcrb
mov
aaa
stos
inc
in
dec
sbb
lahf
movsb
fldenv
test
fbstp
ror
stos
repz
add
push
cmp
sbb
aaa
push
in
jae
int
mov
out
mov
xchg
lcall
movb
loope
movsb
fstl
mov
out
sti
jno
sub
int
push
adc
jb
aad
adc
pusha
sarb
sub
push
mov
hlt
je
movsl
ret
xorl
cmp
xchg
pop
mov
push
dec
mov
loop
rcrb
arpl
cwtl
sub
and
mov
jmp
test
mov
mov
xchg
fisttpll
pop
pand
ret
pop
fistl
adc
cmp
jnp
std
aam
lret
jecxz
cmp
sbbb
lock
jl
mov
or
pop
mov
lret
inc
sbb
add
clc
mov
aaa
dec
inc
in
aad
lds
xchg
mov
lret
and
mov
mov
jno
or
sbb
xor
or
mov
xor
jecxz
movsb
fmull
cmpsl
or
pop
jb
sbb
insl
xor
pop
aaa
cwtl
rolb
sbb
mov
sbb
out
and
xchg
jp
dec
inc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
out
cmp
mov
hlt
pop
aaa
test
and
pop
int
imul
and
mov
nop
imul
mov
ficoms
ja
pop
inc
ret
call
mov
jns
xchg
rcrb
mov
add
mov
and
scas
imul
nop
adc
stos
jb
lcall
xchg
call
xor
mov
mov
je
scas
xchg
adc
jno
les
cmp
dec
mov
hlt
sub
xchg
mov
add
jmp
sbb
xchg
leave
jg
ret
in
push
cs
lcall
sahf
dec
adc
xorl
inc
or
add
pop
fsubrs
fildll
mov
lods
push
jecxz
movsl
ret
fadd
rorb
sub
jmp
cmp
iret
mov
mov
cmp
xor
or
cmp
xlat
out
mov
mov
dec
cmp
in
aam
pop
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
sbb
cmp
dec
out
hlt
mov
jbe
push
xchg
add
mov
iret
add
cmpsl
xorb
mov
xchg
pop
fucom
cli
mov
mov
ret
cmp
lods
cmpl
lret
cmpsl
test
adc
add
and
stos
jge
pop
mov
int
add
jecxz
into
aam
inc
cmp
mov
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xrelease
sub
jmp
adc
scas
push
sub
mov
jl
mov
mov
sahf
int
mov
rcll
sbb
orb
adc
mov
daa
fistpl
sahf
dec
dec
sub
out
movsb
jbe
cwtl
movsl
mov
xor
sysret
fists
ret
sahf
push
gs
rorb
imul
insl
xor
jp
cltd
orb
stos
cli
mov
movsl
sbbl
dec
sbb
and
cli
mov
mov
scas
movl
sar
loope
mov
jl
xor
or
fwait
or
cmp
pop
push
sub
mov
mov
int
mov
pop
ds
jle
mov
xlat
push
scas
fcomi
js
add
scas
inc
movsl
fcoml
xchg
or
xor
or
push
dec
and
xor
test
insl
jmp
movsb
inc
sbb
cmpsl
ret
test
stc
out
leave
dec
mov
rcll
addb
sbb
je
dec
push
aam
dec
dec
test
cltd
clc
or
mov
sbb
out
and
cmc
mov
stc
ss
lock
je
mov
lods
lahf
pop
adc
ret
fidivrs
rol
xorb
jne
add
test
add
insl
fwait
ret
sbb
mov
cltd
cwtl
leave
test
lods
push
inc
inc
mov
xchg
repz
pop
test
xor
test
push
jl
inc
cld
xor
push
insl
cwtl
cmp
fisubl
pop
outsl
les
aaa
jns
adc
lds
lret
mov
js
insb
push
lret
loop
sarb
jnp
sub
iret
and
lea
loopne
rcr
mov
inc
cmpsb
pop
sti
sahf
xchg
mov
sub
xchg
inc
and
dec
push
mov
mov
jno
test
adcb
inc
rcll
sbb
xchg
fcoms
lret
mov
fsubs
sbb
out
movsb
cltd
xlat
test
xor
ret
loopne
inc
adcb
in
cltd
pop
push
add
enter
mov
cmp
mov
mov
sbb
nop
pop
ret
cmpsb
mov
cs
lea
pop
push
jnp
mov
cltd
dec
sub
lahf
pop
stos
fs
movsl
stc
dec
push
pop
ljmp
rcll
mov
or
cmp
dec
mov
sbb
jle
cmpsl
or
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
stc
addl
add
adc
sbb
dec
and
je
mov
out
xor
push
gs
mov
mov
in
mov
jne
aad
mov
pop
rcll
addb
pop
xor
int
mov
push
inc
xchg
sbb
cmpsl
or
dec
dec
lcall
pop
dec
pop
mov
cmp
cmpsb
ja
clc
in
popf
pop
aas
push
sbb
mov
adc
imul
sbb
jg
enter
mov
jno
dec
mov
sub
dec
sub
push
lahf
mov
jae
sbb
inc
jno
movb
mov
push
jle
sahf
sbb
dec
pop
xchg
sbb
int
lcall
lods
mov
mov
and
or
pop
mov
and
lahf
scas
mov
mov
imul
into
stc
sub
or
cmp
sbb
add
sub
push
mov
loopne
mov
das
xchg
mov
lcall
call
mov
push
mov
int3
loope
orb
in
lods
shr
inc
push
xchg
and
xchg
sbb
sahf
sbbl
int
push
mov
imul
cmc
fsub
hlt
xor
sti
jne
xor
enter
mov
jbe
adc
mov
sbb
pop
inc
test
sar
and
into
test
insb
ror
sbb
inc
lahf
arpl
sbb
sub
and
mov
push
out
cmp
pop
mov
inc
push
sbb
xchg
jge
jae
outsb
in
add
addr16
rorl
push
stos
mov
pusha
pop
into
mov
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
in
iret
andl
mov
mov
and
xchg
jp
into
popa
test
sub
movsl
pop
pop
rolb
insl
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
inc
loop
mov
jbe
adc
leave
mov
sbb
xchg
or
clc
mov
jnp
inc
in
lods
dec
sbb
lahf
movsb
fstps
sbb
call
push
xchg
push
test
mov
push
sbb
lret
or
inc
jns
dec
rcr
xchg
and
pop
test
lods
inc
sbb
scas
in
dec
or
dec
es
sbbl
fwait
adc
xorl
mov
add
insb
ds
sub
lods
push
testl
and
add
insb
pop
mov
clc
cld
push
jecxz
inc
cltd
enter
loop
je
cmp
dec
mov
push
adc
pop
and
orb
sub
into
pop
je
popa
pop
mov
sbb
movsl
dec
sub
mov
repz
std
fsubl
imul
hlt
movsl
mov
and
lock
and
sub
lret
pop
xor
fwait
fs
push
ja
inc
in
fstpt
mov
dec
pop
fnstcw
out
stc
jmp
lods
repnz
sub
or
imul
xlat
ficompl
fnsave
inc
movsb
pop
add
jno
jns
mov
push
adc
pop
ret
outsb
pop
or
bnd
int3
mov
fwait
leave
loop
and
sub
inc
sbb
mov
int3
xchg
push
mov
sub
xchg
mov
xchg
sbb
inc
cli
jnp
jecxz
cmp
add
fwait
lea
cld
and
and
ja
enter
aam
sub
jne
movsb
popf
push
mov
shl
mov
inc
arpl
int
jns
xchg
push
iret
inc
xor
out
mov
cld
or
or
jo
lock
aas
mov
mov
int3
mov
popf
ret
popf
pushf
inc
stos
xchg
adc
sub
ljmp
mov
inc
fstpt
push
cmp
lcall
jl
orl
pop
rcl
xchg
mov
mov
cmp
push
push
lret
pop
test
hlt
inc
sbb
scas
fcomi
js
sahf
popf
scas
inc
movsl
fsubrl
bound
mov
jg
add
jbe
into
pop
push
mov
fwait
xor
cmpsb
xchg
das
push
lcall
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cltd
jne
dec
mov
imul
cmp
dec
mov
inc
add
pop
arpl
int
mov
mov
mov
call
jp
popa
mov
cltd
test
inc
sbb
lock
mov
mov
jl
repnz
ret
insb
test
iret
add
stos
jb
stos
jecxz
jne
push
and
mov
fistl
adc
mov
mov
test
inc
sahf
cmp
mov
jo
inc
lcall
gs
lods
cmp
cli
xor
xchg
fsubrl
or
leave
loop
sarb
and
lea
andb
or
xor
jecxz
aad
popa
xchg
lods
sti
jmp
push
inc
popf
lret
mov
fnstenv
xorl
out
mov
add
in
pushl
mov
popa
pusha
mov
dec
and
addb
dec
arpl
fdivl
in
cmp
lds
bound
jecxz
popa
popf
rcrb
addr16
fdivrs
cltd
xorb
add
sbbb
test
fs
add
adc
lret
shld
ljmp
popf
ljmp
cli
xchg
test
jae
xchg
add
xchg
lods
outsb
lods
mov
pop
stos
xchg
push
adc
mov
dec
repz
aaa
stc
sbb
or
fucomi
jge
leave
out
inc
fwait
push
shlb
aam
andl
xchg
fidivs
mov
rcll
aam
jne
inc
gs
imul
outsb
insb
and
std
jmp
cmp
xor
cmp
in
sbb
xchg
fsubr
dec
test
xor
mov
xchg
pop
adc
mov
jg
pop
mov
cltd
daa
jmp
popf
sub
adc
mov
or
pushf
sbb
sub
sarb
imul
dec
lahf
lcall
push
gs
cmp
cld
or
in
jmp
cld
pop
sub
add
jge
pop
add
ja
imul
adc
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
add
jo
jb
push
xchg
adc
pusha
sarb
sub
push
mov
fwait
mov
mov
insl
icebp
out
xchg
xor
mov
arpl
jne
dec
cmpsb
inc
cltd
pop
xchg
mov
cmp
cmp
pop
cmc
leave
sbb
add
and
pop
int
imul
mov
xchg
xchg
pop
cmp
fnstsw
dec
call
or
jae
ja
sti
fists
rol
sti
mov
test
mov
adc
iret
inc
sub
imul
lds
mov
arpl
mov
pop
or
lods
xchg
cmp
jmp
jl
pop
adc
mov
push
or
in
sbb
xchg
stos
cmp
fwait
push
xchg
mov
push
ret
into
xor
fucomi
repnz
fwait
leave
insl
xor
pop
aaa
cwtl
clc
xchg
addl
xchg
lock
gs
rclb
jp
mov
movsb
inc
cmpsb
outsl
push
gs
insl
jg
fwait
lea
aad
repz
sbb
mov
inc
or
push
insl
lock
out
mov
mov
dec
sbb
loopne,pn
cmc
mov
mov
cmp
addr16
insl
xchg
sub
sar
fisubl
jmp
jmp
mov
pop
push
sbb
or
inc
cmp
adc
les
int
sbb
cmpb
push
imulb
adc
mov
and
and
sar
xor
pop
cmp
mov
clc
lock
dec
lret
aad
push
adc
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
in
and
mov
jb
xchg
adc
xorl
and
add
dec
mov
clc
or
sbb
outsb
mov
pop
xchg
hlt
push
sub
mov
nop
mov
call
or
lds
pop
fldl
add
icebp
mov
cmpsb
or
cwtl
cwtl
inc
sbb
in
cmc
sbb
fisttpl
jae
push
movsl
repz
push
ret
call
push
mov
in
std
test
sahf
popa
mov
cmp
repnz
cmp
adc
mov
sbb
pop
inc
test
movb
sub
and
test
pop
in
fisttps
mov
nop
movb
test
inc
fmuls
inc
lcall
sbb
or
cmp
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
lret
js
int3
xor
and
sub
inc
sbb
mov
outsl
mov
and
xchg
mov
in
ret
mov
cli
xor
cmpsl
ret
punpcklwd
outsl
or
inc
popf
repz
outsl
push
adc
sub
dec
push
aam
dec
inc
test
cwtl
clc
inc
cmp
mov
dec
mov
fisubl
xor
jne
pop
jns
pop
loopne
in
mov
jae
mov
adc
xor
add
adc
mov
sbb
mov
sub
push
mov
in
cmp
xor
pop
test
in
adc
shll
shlb
mov
pop
test
scas
xchg
push
xchg
sbb
mov
stos
add
push
lret
pop
test
pop
inc
sbb
scas
fcomi
js
jae
scas
inc
movsl
faddl
bound
sub
addl
adc
inc
jns
jle
xchg
sub
cs
pop
xchg
mov
in
fdivrs
aam
inc
and
lret
gs
std
inc
or
xor
fcoml
mov
rcll
adc
xchg
cltd
mov
pushf
adc
jnp
sbb
call
mov
cmp
pop
sbb
out
ds
jp
movsb
fldcw
in
fwait
rcrb
lcall
dec
mov
ss
xor
iret
mov
sbb
jbe
adc
cli
pop
xchg
xchg
cli
mov
cmp
pop
test
imul
sarl
xchg
leave
cmpsl
sub
or
or
cmp
inc
lcall
gs
lods
cmp
sub
pusha
mov
das
bnd
insb
push
dec
add
loop
sarb
andl
cwtl
into
addb
pop
dec
xchg
adc
xchg
pop
mov
fisubl
dec
and
insb
cmc
xchg
xchg
aas
xchg
in
pop
out
inc
sbb
mov
insl
call
test
mov
gs
mov
pop
rcll
rolb
dec
dec
test
or
jmp
cmp
xor
movsb
std
aas
std
dec
stos
push
mov
dec
in
xlat
pop
push
andl
mov
jnp
mov
cltd
je
lock
inc
aas
cli
shll
repnz
icebp
cli
dec
xchg
adc
push
mov
xlat
push
aaa
xchg
mov
cwtl
xor
aaa
pop
push
in
dec
stos
fildl
dec
sub
lret
in
cmc
iret
push
test
pushf
lahf
xchg
test
and
xor
scas
xchg
stos
mov
stos
xchg
push
adc
push
mov
test
mov
sbb
jl
fucomi
jge
ret
fildll
mov
andl
test
lcall
jge
adcl
rcrl
jg
and
xchg
mov
pop
fidivrl
jo
lret
cwtl
sub
mov
mov
int3
loope
sbbb
push
sbb
shlb
aam
xchg
cltd
sahf
or
outsb
mov
shll
xchg
sbb
aam
popf
jl
sbb
imul
ret
jecxz
movsl
mov
cltd
cwtl
jmp
sbb
push
xchg
mov
cmpb
xchg
xchg
add
faddl
movsb
fisubrl
pop
inc
inc
pop
dec
or
ret
mov
mov
mov
xchg
push
nop
cld
imul
sub
xor
or
sub
pop
mov
cmpb
lods
inc
and
lahf
scas
mov
mov
aad
jo
popa
or
mov
mov
inc
roll
or
mov
mov
pop
loope
push
sub
xchg
pop
pop
cmpsb
call
xchg
push
xabort
pop
mov
bound
out
xchg
test
inc
cmp
mov
mov
sbb
xchg
into
adc
mov
jne
fstpl
cltd
cs
adc
insl
mov
dec
sbb
jns
pushf
rcrb
dec
sbb
out
sbb
divb
sbb
stos
lds
push
clc
sub
mov
pop
sbb
clc
cmp
lods
lods
popf
lret
add
sub
inc
sbb
or
jl
icebp
stos
xchg
stos
cmp
fwait
push
xchg
sbb
shrb
push
ret
into
mov
fucomi
repnz
fwait
leave
cmc
xor
inc
stos
sbb
movsl
loopne
fdivs
adc
mov
push
or
dec
dec
movsl
ret
mov
pop
jg
call
xchg
lahf
out
cmp
inc
inc
cltd
enter
out
je
cmp
pushf
cltd
sbb
jbe
or
int3
pop
mov
inc
xchg
lea
js
popf
neg
adc
add
and
ljmp
mov
in
sti
pop
es
sbb
cmpsl
mov
ja
lahf
rolb
adc
lods
fs
pop
test
mov
jg
adc
test
pop
adc
cmc
sbb
push
mov
xchg
test
dec
mov
out
addb
add
xchg
imul
xchg
adc
test
lods
inc
sbb
scas
in
jae
mov
jmp
mov
fadds
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
das
fwait
lea
clc
and
and
test
sub
fwait
inc
mov
adc
cmpb
jmp
shlb
imul
pop
adc
sub
push
mov
jnp
ret
pop
cmc
fisubl
cmp
fists
add
ret
mov
mov
mov
sbb
sbb
aad
sbb
pop
sub
jne
les
push
rcrb
jbe
movsb
lcall
stos
jae
fistpl
lock
inc
ret
pop
sub
inc
sbb
or
cmp
pop
jae
mov
lods
mov
mov
push
adc
pop
lret
jecxz
bnd
int3
scas
pop
fcompl
sub
inc
sarb
push
add
jp
pop
repnz
and
xor
jmp
lret
adc
mov
shll
popa
call
xchg
push
enter
and
xor
fimuls
push
adc
pop
cwtl
adc
out
aad
test
xchg
icebp
scas
int3
sbb
scas
jns
lcall
cmp
mov
mov
sbb
pop
sbb
cmp
fadds
hlt
sub
imul
sub
rcrb
sbb
vandnps
test
cmp
addr16
mov
std
mov
mov
popf
aad
push
fs
sub
xor
push
xchg
std
jp
pop
stos
fs
es
mov
jecxz
test
mov
mov
fistps
fcmovnb
js
pop
cmpsl
mov
aad
cmp
mov
adc
push
cwtl
int3
dec
out
inc
inc
sbb
in
stc
dec
cmp
jnp
mov
daa
scas
xor
imul
pop
sbb
into
add
dec
cmpsl
ret
fnstenv
xorl
and
xchg
sti
in
and
or
mov
out
cmc
mov
add
mov
leave
lret
inc
ds
sbb
aas
push
cmc
sbb
mov
js
sbb
mov
add
dec
inc
push
loopne
js
add
xor
mov
xor
leave
sbb
rcrb
cmpsl
jmp
xchg
mov
stc
and
lahf
loop
fildll
inc
mov
pop
les
cmpsl
bound
or
xchg
dec
inc
shlb
scas
inc
cmp
inc
lcall
gs
lods
cmp
mov
pusha
mov
out
and
movsl
dec
stc
filds
and
popa
pop
addl
int3
dec
cmp
xor
sbb
imul
repnz
inc
insl
imull
push
aad
insb
and
mov
xlat
pop
jmp
jp
iret
lcall
ret
hlt
mov
in
and
dec
sub
cs
dec
ret
fildll
stos
sub
cmp
dec
in
out
and
stos
push
jae
adcb
mov
popf
jp
outsb
or
pop
or
jp
fnsave
leave
and
and
sbb
pop
sbb
in
mov
cmp
sub
jg
fwait
jns
popf
lret
leave
jecxz
les
sbb
and
dec
inc
scas
xchg
stos
mov
stos
xchg
push
adc
xlat
mov
leave
adc
mov
sbb
xchg
dec
xchg
out
jg
mov
dec
xlat
cld
imul
mov
pop
loopne
adc
js
xchg
adc
es
inc
jmp
fucom
dec
sarb
inc
repz
xchg
mov
adc
xchg
xor
mov
arpl
or
mov
mov
sub
jg
xchg
cmp
or
es
jg
pop
sbb
sbb
aam
push
adc
out
orb
mov
arpl
int3
add
lods
dec
sbb
out
mov
test
mov
xchg
push
and
or
ret
pop
xor
std
cmp
push
idivb
scas
pop
rcr
push
jge
sub
cmp
mov
sbb
scas
mov
jecxz
ret
lods
mov
mov
adc
cmpsl
xchg
push
nop
pop
das
xchg
dec
mov
or
push
fisubrl
lahf
or
sub
pop
mov
test
cltd
lods
inc
inc
pushf
shlb
jecxz
push
sar
pop
or
fsubrl
pop
inc
mov
andl
outsb
jno
popl
cwtl
rorb
cmp
xor
add
mov
xchg
sbb
push
jne
insl
or
mov
call
add
and
add
or
dec
mov
cltd
mov
jbe
push
pop
jns
rorb
mov
shrl
mov
dec
lock
pop
push
add
pop
add
mov
lcall
sub
pushf
add
mov
mov
push
pushf
sbbb
jl
nop
mov
test
test
inc
mov
imul
mov
popf
lret
add
sub
inc
sbb
or
in
imul
stos
cmp
fwait
push
xchg
pop
mov
push
adc
pop
fiadds
imull
push
or
int3
jo
sbbl
cmp
xchg
stc
xchg
xchg
sahf
inc
cwtl
aam
sarb
fcoms
test
hlt
push
sub
stos
push
jne
insl
jne
fisubs
jb
mov
cltd
sbb
mov
and
dec
push
jb,pt
dec
mov
jne
js
and
mov
pop
adc
inc
mov
int
lahf
lret
sub
jp
rcrl
add
xor
push
cld
cmp
add
mov
mov
sub
jge
push
sbb
sti
inc
cli
shlb
scas
jne
stos
push
outsl
jno
jne
sbb
repnz
stc
mov
fbld
mov
mov
stos
addb
add
jge
mov
dec
les
adc
test
mov
pop
or
jmp
mov
mov
in
fsincos
cltd
ss
leave
loop
jnp
or
cmp
mov
mov
test
adc
pop
in
ret
mov
cli
mov
push
gs
insl
es
push
mov
bound
repnz
test
rcll
ret
inc
push
fwait
nop
sub
and
dec
mov
or
enter
pop
and
arpl
mov
jne
popa
pop
push
or
lods
cltd
jle
addr16
stc
jns
cmp
adc
mov
and
je
lahf
xchg
jno
pop
mov
push
sahf
ret
push
test
lret
cli
add
test
popa
mov
cmp
mov
std
lret
inc
ret
pop
sub
inc
sbb
or
cmp
movsb
pop
and
fwait
lods
jle
mov
cmp
ss
mov
aaa
jg
cli
rol
popf
scas
inc
and
icebp
xor
xchg
into
cmp
addl
mov
mov
rorb
cs
pop
xchg
mov
loopne
fdivrl
xor
xor
fldenv
mov
lds
and
xor
addb
and
mov
mov
loope
cmpsb
cmc
hlt
dec
movsb
adc
fsts
mov
loopne
xor
mov
in
inc
mov
xor
jne
sbbb
inc
cmp
add
rcrl
ret
ficomps
cmc
jbe
ljmp
and
push
clc
scas
jno
mov
jge
pop
lret
fucomp
cld
std
stos
dec
mov
popf
aad
push
xchg
test
add
xor
push
xchg
pop
jne
pop
stos
add
dec
mov
ficompl
and
movsb
jp
aaa
pop
push
mov
js
pusha
xchg
fbstp
in
mov
sub
jg
or
inc
pop
fwait
cmp
jge
fwait
jmp
xchg
fisubl
dec
and
insb
cmc
xchg
xchg
pop
xchg
in
push
fdivrs
test
pop
add
fcomi
jne
outsl
or
add
dec
cld
loopne
push
xor
test
cmp
push
mov
cmp
jne
pop
mov
mov
iret
fldl
push
roll
shll
sub
ret
mov
cli
mov
adc
cli
add
rolb
enter
ret
fnstenv
dec
pushf
dec
lods
aad
cltd
mov
pop
mov
jo
test
cli
xchg
scas
mov
imull
mov
mov
bound
dec
dec
sub
jle
or
cmp
inc
lcall
pop
mov
and
lods
popf
xchg
cmp
icebp
dec
fucomi
sbb
pushl
andl
out
or
or
imul
push
inc
mov
cltd
cmp
xchg
in
mov
inc
cmp
inc
adc
call
daa
sbb
sar
and
cmpsb
je
sbb
inc
inc
sbbb
imul
fsubrs
test
aad
mov
int3
sbb
pop
and
popf
movsl
imul
fdivp
pop
icebp
fdivrl
xchg
lret
in
xchg
aas
cli
or
add
cs
jg
cmp
movsl
mov
mov
inc
nop
xlat
stos
dec
sahf
fwait
push
push
test
pop
sbb
xchg
mov
cmp
stos
jl
ljmp
popf
lret
roll
test
movsb
cwtl
xchg
test
and
arpl
xchg
stos
mov
stos
xchg
fistl
fimull
inc
jbe
dec
jle
mov
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
sbb
mov
mov
cmp
xchg
mov
mov
cmpsl
jnp
lret
adc
push
mov
clc
enter
leave
add
sbb
mov
or
gs
das
in
cmc
mov
add
test
sub
lods
int
cmp
push
iret
and
mov
mov
inc
sbb
xor
enter
add
out
push
sbb
imull
cwtl
sub
sub
dec
and
popf
sbb
pop
stos
fsubr
mov
xchg
leave
inc
xchg
scas
mov
jecxz
mov
aaa
mov
xchg
mov
xchg
push
nop
cmp
pusha
add
or
mov
imul
push
jb
sbb
jecxz
test
frstor
loope
xchg
mov
repz
inc
fwait
leave
or
js
sbb
faddl
rorb
xchg
mov
push
or
les
aam
cmc
jmp
and
and
mov
jp
lea
cmp
push
adc
movsl
loop
mov
pop
inc
dec
dec
mov
cmp
in
dec
ret
orl
mov
pop
mov
or
fisubrl
fldcw
cmp
mov
inc
lods
fadds
mov
sub
lds
jne
dec
dec
movsl
mov
mov
stos
mov
ja
mov
shrl
inc
mov
xor
jae
cmp
stos
jp
lret
add
sub
inc
sbb
or
xchg
fists
dec
mov
stc
add
pop
mov
lods
inc
sbb
jmp
std
popl
cmp
mov
repnz
sbb
mov
mov
addr16
and
or
les
fwait
xchg
out
scas
mov
test
and
mov
call
bswap
fnsave
cmp
mov
test
aad
sbb
enter
inc
inc
addl
mov
ret
push
adc
mov
lods
sbb
hlt
cmp
in
cld
aas
in
and
mov
in
inc
inc
or
add
cmp
jp
xor
and
and
pop
stos
push
outsl
jno
xchg
dec
sbb
mov
push
jmp
mov
mov
xchg
test
dec
mov
adc
add
lret
fistl
mov
mov
aad
add
push
push
pushf
pop
jmp
scas
pushf
pop
arpl
bnd
jecxz
adc
out
mov
rolb
cwtl
rolb
push
add
jp
pop
jb
and
les
inc
icebp
cmp
aad
pop
inc
pop
mov
pop
push
ret
xchg
fldl
sti
repz
xchg
sub
pop
aam
pop
xchg
push
adc
mov
mov
cltd
pop
sub
pop
inc
sub
fistps
andb
jo
ljmp
pop
mov
jns
ds
and
iret
hlt
adc
cmp
enter
rcrb
add
xchg
leave
fsubrl
frstor
push
test
lret
xchg
popf
shrl
sahf
mov
lcall
test
ret
pop
sub
inc
sbb
xchg
add
ljmp
lock
mov
aad
lcall
sti
add
inc
pushf
dec
stc
arpl
add
adc
dec
mov
push
es
or
inc
inc
sbb
in
stc
dec
sarb
pop
in
and
sbb
mov
push
dec
popf
push
mov
mov
insl
lahf
in
push
dec
test
push
pop
fidivrs
mov
mov
inc
mov
repnz
test
push
and
push
jp
dec
mov
jne
cwtl
adc
inc
mov
add
or
fwait
cltd
dec
call
jnp
ret
arpl
lds
cmp
movsl
add
cltd
pop
jnp
mov
and
stos
or
mov
testb
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
loopne
fucomp
cld
std
lods
pusha
mov
popf
aad
inc
and
adc
xchg
test
xor
add
xchg
mov
xor
mov
xchg
jmp
in
shrl
outsl
in
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
pop
and
xchg
cwtl
test
xchg
icebp
sbb
add
in
cmp
insl
jecxz
lsl
call
lret
iret
in
movsl
je
sub
inc
push
mov
fsubs
ds
pop
mov
mov
sbb
sti
insl
in
lcall
pop
or
js
xor
les
jae
mov
pushf
adc
pusha
or
subb
fcmovnu
push
pop
imul
mov
pop
mov
dec
ret
dec
and
mov
negl
mov
sbb
arpl
bound
xchg
dec
data16
sub
and
outsb
les
fcoml
mov
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
loopne
adc
js
xchg
adc
dec
cmp
ds
mov
mov
cmpsb
pop
xchg
imul
in
fisubl
cltd
fwait
pop
call
pop
xlat
scas
cmovae
dec
shlb
loopne
hlt
js
orb
and
adc
js
mov
loopne
mov
push
mov
lret
pop
and
push
sahf
sub
or
xlat
lds
movsl
sbb
iret
addl
sub
sbb
mov
cmpsl
mov
loop
mov
mov
jmp
xlat
stos
dec
sahf
jp
push
test
pop
sbb
adc
sub
fucomp
jae
jns
mov
popf
lret
push
test
inc
bound
and
or
rorl
stos
cmp
sub
cmc
shrb
fs
fidivs
push
add
cmp
push
das
int3
jo
sbbl
jge
subl
rcll
sbb
inc
pop
cmp
stos
mov
sbb
mov
enter
and
das
shr
or
mov
xchg
cltd
jmp
and
es
imul
inc
mov
add
mov
into
pop
cmpsl
xchg
adc
sbb
idivb
shrb
or
imul
hlt
adc
dec
push
inc
sub
repnz
pop
sub
dec
popa
xchg
ret
or
fdivl
js
movsl
mov
mov
stos
mov
ja
mov
shrl
inc
mov
int
jae
cmp
scas
cmp
xchg
xchg
dec
dec
daa
push
dec
data16
push
cmp
lret
or
imul
xchg
jnp
dec
pop
test
mov
mov
mov
fcmovnb
lea
lret
cmp
cltd
ss
leave
loop
jnp
or
fwait
andl
roll
dec
and
dec
sarb
push
xor
fsubs
imul
cmpsl
cmp
mov
ud1
call
leave
add
push
sbb
cmpsl
je
sub
dec
inc
xchg
lret
xchg
jmp
cmp
mov
lods
mov
pop
inc
sbb
and
and
mov
std
mov
and
mov
mov
xor
jns
or
dec
popf
fldt
sbb
xor
nop
xor
test
pop
stos
push
outsl
jno
dec
dec
sbb
outsb
mov
stc
js
lods
mov
rcr
jno
push
fxch
bound
or
lret
repz
inc
sbb
fnstenv
stos
inc
rorl
cmpsb
fistl
mov
fwait
lods
mov
jbe
xor
jno
into
mov
fucomp
rol
popf
scas
inc
and
icebp
and
add
mov
jb
fs
mov
adc
adc
and
cmp
inc
gs
dec
jae
fnstsw
adc
mov
jle
call
add
aam
xor
cmpb
mov
test
mov
dec
int3
sub
sub
xor
and
js
or
add
test
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
sbb
add
lahf
test
fnstsw
push
test
lret
mov
test
arpl
fcomi
jae
fisttpl
lret
xchg
imul
jbe
addl
scas
xchg
push
pop
xchg
jl
rorl
movsb
cltd
fisubs
dec
mov
xchg
sbb
int3
mov
xchg
cmpsl
dec
test
scas
pop
push
mov
js
pusha
xchg
fbstp
ljmp
add
cmp
shlb
inc
sub
sub
aam
rcrl
xor
xor
mov
insl
push
ret
mov
mov
pop
sbb
inc
cltd
cltd
and
adc
data16
xchg
in
xor
lret
push
dec
mov
add
ljmp
pop
dec
push
idivb
sbb
fucomip
repz
pop
mov
mov
mov
enter
push
insb
mov
ret
cmpsl
mov
idiv
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
stos
ficompl
lahf
push
lret
fucomp
fs
stos
fildl
repnz
xor
test
sbb
xorb
jl
shll
inc
lcall
xchg
cmp
fstp
adc
inc
popa
jae
dec
fucomi
sbb
pushl
xor
fidivrl
adc
mov
add
push
mov
or
les
inc
push
fdivrs
movsb
xor
or
lahf
outsl
aas
adcl
lods
sti
repz
iret
dec
leave
sbbb
test
fidivrl
sbb
adc
mov
mov
and
sbbl
ss
sbb
mov
pop
mov
mov
fcomip
mov
adc
mov
add
fsubrl
pop
imul
mov
pop
mov
pop
aad
mov
and
mov
test
stos
cmp
sti
push
jl
cmp
inc
movsl
out
xchg
add
push
pushf
pop
stos
xchg
push
fcmovbe
sbb
fistpl
jl
jecxz
stos
fmull
out
mov
mov
iret
pop
mov
enter
cli
cmc
jl
xchg
xor
in
or
pop
xchg
xor
push
or
adc
dec
cmp
in
mov
in
in
test
push
push
popfw
xchg
mov
mov
je
cmp
cwtl
push
hlt
stos
inc
icebp
xchg
adc
ret
push
dec
mov
sbb
inc
xor
push
repnz
test
imul
ret
loopne
dec
pop
orb
clc
sbb
movsl
adc
gs
ss
int
mov
dec
sbb
mov
mov
loop
loop
lret
movsl
mov
mov
pause
xlat
stos
dec
sahf
fimull
sbb
and
mov
lcall
adc
in
stc
je
ret
xchg
jne
dec
mov
cmp
mov
imul
imul
inc
jmp
fstps
pusha
inc
loope
xchg
popf
pop
mov
sti
lahf
inc
aam
add
je
xchg
inc
andl
cmpl
mov
pop
lea
pop
sbb
clc
jns
push
fisubl
loope
cmpps
les
jb
int3
test
jb
and
and
and
or
out
push
and
dec
mov
inc
xchg
gs
add
push
das
push
in
pop
mov
sbb
and
ficomps
mov
clc
mov
mov
add
insl
push
cwtl
sub
das
pop
pushf
dec
and
xchg
pop
lret
fsubr
mov
mov
sbb
xchg
adc
hlt
sbb
jmp
les
jge
shlb
xor
mov
and
stos
lds
mov
mov
xor
inc
stos
shl
outsl
pop
lods
inc
sbb
jmp
std
js
jle
sbb
mov
loop
in
sub
sbb
cwtl
add
mov
xchg
sub
sub
pop
xchg
je
fwait
pop
xchg
sub
and
xor
gs
fwait
pop
lods
lea
insl
ds
sbb
enter
jmp
aaa
jmp
or
cmpb
fwait
cmc
lret
adc
pop
sbbl
mov
mov
inc
loopne
mov
repz
sti
dec
push
adc
jecxz
and
lods
fcompl
dec
popa
cwtl
lock
sbb
mov
mov
jne
je
movsl
mov
mov
stos
mov
ja
pop
test
test
xchg
mov
xchg
push
jae
cld
shlb
jge
pop
mov
xchg
test
test
xor
xlat
push
addb
xchg
pop
jo
movsl
or
xor
mov
xchg
dec
cld
push
push
fcoml
adc
ljmp
stc
jmp
js
or
mov
xchg
sbb
cwtl
clc
dec
and
test
pop
aam
mov
repnz
fldl
cmpsb
fldt
fdivrs
cli
xor
loop
cmp
jne
lahf
cltd
xlat
push
mov
nop
adc
mov
loop
je
sbb
add
mov
sbb
ret
clc
movsb
cmp
dec
adc
call
pop
mov
daa
pop
mov
mov
lahf
aam
adc
mov
fimull
mov
daa
or
dec
popf
mov
push
sbb
dec
and
pop
stos
push
and
mov
pop
test
xchg
xor
test
and
in
cwtl
nop
cmp
sbb
or
imul
jge
pop
les
mov
movsl
nop
aaa
std
lcall
sti
push
lret
dec
jmp
lods
fiadds
ja
mov
pop
std
sarb
mov
dec
and
mov
or
int
mov
fwait
xor
fcom
push
fsubs
jno
fidivrl
mov
mov
jnp
out
cmp
cmpb
xor
xchg
test
cld
or
inc
push
daa
jne
dec
sub
lahf
into
mov
cmp
mov
jb
mov
add
sti
mov
jecxz
push
sbb
and
lods
mov
or
inc
insl
pushf
dec
fsubrl
fnsave
push
test
lret
inc
imul
int
xchg
push
nop
cmp
dec
loope
mov
das
sub
jo
pop
dec
outsb
les
jmp
in
sarl
pushf
pop
jmp
cli
movsl
lea
scas
out
fwait
out
mov
dec
sbb
rcll
dec
adc
fcomps
test
je
adc
jge
xchg
cmc
mov
mov
ja
fcomps
cmpsb
movb
mov
repz
mov
sbb
daa
loopne
hlt
xor
test
outsl
push
pop
sbb
movsb
xor
mov
shl
mov
shr
repz
adc
addr16
loopne
out
and
fucomip
repz
pop
test
mov
cwtl
mov
pop
xor
mov
and
fisubl
imulb
dec
sbb
xlat
dec
sbb
sub
leave
push
in
mov
or
mov
rcr
cli
cmp
sub
adc
mov
ret
push
inc
cmp
push
adc
xchg
pop
icebp
mov
cmp
inc
mov
scas
hlt
mov
popf
fists
fldl
or
adc
jecxz
and
sbb
inc
mov
sbb
test
cltd
xor
jmp
pop
pop
fiadds
or
mov
cmp
sbb
or
es
sete
mov
in
fwait
sahf
dec
mov
into
pop
stos
pop
lods
lahf
pop
mov
cmp
mov
xor
sti
mov
movsb
lock
mov
adc
sub
add
fsubrl
pop
imul
test
inc
sub
cmc
enter
cltd
push
in
leave
cmpb
iret
push
xchg
fucomip
sub
test
rorl
fsts
jl
sub
pushf
xor
sti
dec
inc
lcall
jle
mov
sub
pusha
es
pop
or
fdiv
repz
cmp
or
cmp
cmp
sub
and
add
pop
fistpl
xor
xlat
cmp
push
jne
dec
jo
sbb
mov
cmp
bound
stc
add
cwtl
hlt
xor
xchg
sub
or
pop
or
jne
movsl
call
stc
push
ret
loopne
dec
pop
shrl
and
gs
jno
pop
sub
sbb
mov
cmpsl
mov
loop
mov
lret
movsl
mov
mov
and
push
dec
cmp
fisttpl
rcl
inc
mov
neg
fs
mov
lret
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
bound
pop
push
jmp
adc
or
xor
cmp
jb
adc
mov
add
mov
into
scas
fcomip
sub
xor
jle
outsl
cltd
iret
mov
sub
dec
aam
stc
js
pop
cmc
or
mov
je
dec
inc
mov
cmp
in
xorb
pop
xor
imul
ds
fisttpll
ret
pop
xchg
add
leave
addb
add
dec
xorl
fisubrs
popf
sbbl
sub
lea
push
repz
sti
loopne
mov
repz
sti
dec
push
shr
jecxz
and
sub
pop
sub
dec
popa
popf
mov
sbb
mov
scas
data16
faddl
sub
xor
adc
test
insb
pop
push
dec
sbb
jae,pn
stc
inc
add
mov
and
add
cmpl
jae
enter
fnstenv
stos
inc
roll
cmpsl
fistl
mov
cwtl
pop
ret
jle
rcrb
clc
xor
xor
mov
into
mov
mov
inc
sti
and
or
jle
sbb
es
add
and
fwait
and
xchg
jg
fldl
imul
adc
hlt
lret
jge
inc
fists
call
push
or
fisttpll
xchg
mov
cmp
push
and
mov
mov
mov
cmp
fsubr
mov
sbb
mov
add
call
ret
daa
pop
xchg
iret
fucomip
jl
int
dec
lahf
aam
sbb
mov
repnz
mov
or
popf
pushf
insl
loop
or
sbbb
lcall
shrl
leave
insb
sbb
das
push
adc
mov
aaa
jmp
add
insl
test
out
lods
inc
scas
xchg
push
pop
xchg
cmp
roll
movsb
fistl
cld
addr16
mov
fldenv
stos
movsb
insb
jne
out
fcmovne
push
inc
cld
imul
mov
xor
in
sbb
mov
mov
cmp
repnz
mov
xchg
lahf
aam
jg
das
stos
fildll
dec
sbb
fsubl
jge
outsl
push
or
dec
pusha
mov
add
adc
or
pop
fisubrs
pop
dec
addl
dec
sub
cltd
stc
mov
or
mov
mov
out
clc
sti
mov
jecxz
push
sbb
xor
adc
sbb
add
insl
movsl
mov
fs
push
mov
inc
sarb
sbb
xchg
stos
push
test
xlat
test
jnp
leave
fs
push
lret
fucomp
pushf
inc
pop
clc
scas
repz
stc
adc
jl
or
xor
push
cmc
add
cmp
rorl
cmpsb
fildl
mov
sub
cmp
int3
mov
jnp
pop
and
lahf
sahf
adc
js
xchg
jg
or
xor
call
clc
jle
andl
mov
dec
mov
dec
je
mov
fwait
cmp
lret
xchg
jbe
sbb
mov
daa
pop
repz
loope
mov
repz
push
and
cmp
sbb
mov
mov
adc
mov
int
jle
inc
jmp
mov
shl
mov
shr
repz
adc
mov
ret
loopne
out
mov
aas
pop
xchg
dec
lahf
lret
insb
mov
cmpsb
mov
pop
xor
mov
inc
pop
adc
mov
stos
sbb
rcrb
or
lret
mov
push
cmp
xor
adc
fnstenv
clc
das
clc
aaa
jmp
mov
pop
sub
test
movsl
out
xchg
adc
xchg
lods
lock
pop
jne
in
pop
xchg
sub
ret
mov
in
fstps
pop
pop
sti
js
js
adc
add
adc
jmp
mov
cmpsl
or
push
xchg
cwtl
loopne
mov
inc
les
mov
xor
xor
and
fidivrs
jnp
cmp
sbb
xchg
xchg
mov
je
mov
jecxz
inc
sbb
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
add
dec
or
mov
sub
mov
shl
mov
adc
adc
ret
sub
aad
inc
sbb
xlat
stos
dec
push
adc
xchg
movsl
mov
and
xchg
inc
clc
scas
sbb
in
js
mov
xchg
dec
mov
sub
or
stos
jbe
pop
cmp
adc
lret
or
jmp
pushf
movsl
jg
cli
in
jae
aas
xchg
fwait
ss
popa
or
inc
cmp
andl
dec
adc
xchg
pop
mov
or
loopne
daa
mov
fsubs
movsb
xor
scas
enter
cmp
fsubrp
fnsave
mov
stc
pop
sub
dec
push
or
fidivs
gs
dec
mov
mov
and
repz
ret
loopne
dec
pop
add
repz
sbb
mov
aaa
gs
push
enter
int
shrl
or
test
dec
and
leave
sbb
xor
insb
mov
sbb
popf
sahf
mov
jmp
loop
imul
les
jge
les
sbb
pushf
pop
sti
sub
xchg
sbb
sbb
lcall
inc
pushf
fidivl
jp
aaa
aaa
cs
ret
hlt
sbb
dec
cmc
cmp
adc
jmp
and
mov
lea
inc
jne
pop
jp
adc
adc
stos
icebp
mov
aam
mov
jnp
popf
cmc
insl
pop
mov
lea
mov
int3
pusha
cmp
xor
das
shr
inc
cltd
cmp
fsubr
inc
adc
dec
mov
call
push
subl
mov
iret
fcomip
jns
mov
test
or
cmp
or
hlt
sub
jns
and
mov
and
sbb
test
test
shrb
jne
rcrb
jns
movb
adc
xchg
les
cld
xor
xchg
dec
cmpl
fisubl
add
sbb
arpl
test
add
cltd
cmpsl
pop
movsb
cmp
popf
dec
mov
clc
mov
icebp
leave
in
test
or
add
xor
sarb
push
out
repz
test
cmpsb
lret
xchg
cwtl
mov
xchg
mov
pop
mov
mov
testb
stos
mov
pop
inc
bound
out
adc
add
mov
pop
dec
xor
fisubrs
popf
fwait
std
mov
xor
mov
add
repz
pop
loopne
mov
repz
sti
dec
push
inc
cmpsl
lret
jecxz
add
mov
sbb
popl
mov
inc
push
aas
mov
insl
xchg
adcb
xor
cli
fs
lret
mov
repnz
xor
jae
leave
je
pop
lret
cmpl
pop
icebp
add
jl
ret
add
lret
or
mov
shlb
adc
pop
fs
jnp
or
loope
stc
int3
scas
cmp
xor
sbb
out
push
lds
mov
mov
or
push
mov
sbb
mov
pop
jae
inc
insl
jmp
pop
clc
jecxz
insl
cmp
mov
mov
inc
cltd
xlat
call
int3
pusha
and
xor
rol
out
mov
cltd
fldenv
mov
jmp
adc
dec
mov
lcall
shrl
push
addb
mov
mov
cmp
mov
xor
add
or
inc
pop
mov
adc
leave
fdivl
ret
sbb
xlat
stos
mov
xchg
mov
pusha
push
cld
sub
mov
scas
repz
inc
add
mov
and
add
movsl
hlt
mov
dec
insl
movsb
jecxz
fiaddl
nop
xor
mov
xchg
cmp
lds
fistpll
sbb
sti
fstps
pusha
scas
popa
or
rcl
mov
inc
inc
pop
mov
shlb
mov
mov
int
dec
mov
xchg
cwtl
inc
stos
adc
fidivrl
jp
jnp
enter
xchg
pop
fstl
pop
mov
mov
fwait
lea
aas
inc
bound
out
adc
sub
pop
push
or
int
imul
push
sub
out
mov
or
xor
mov
repz
sti
pop
push
iret
xchg
push
rorb
add
mov
in
sub
push
nop
jg
adc
adc
sub
test
dec
cld
lods
sbb
push
lahf
xchg
push
adc
mov
aaa
jmp
add
push
sbb
ja
pop
sbb
or
stos
int
add
push
fistl
mov
cmp
cmc
iret
jge
mov
mov
cmc
cmp
lahf
es
add
repnz
cwtl
leave
aam
js,pt
dec
xchg
sub
outsb
test
push
fidivrl
cli
pop
lods
inc
int
jns
cli
jle
fwait
pusha
jl
mov
cmp
in
jne
mov
adc
mov
dec
and
inc
adc
mov
mov
clc
sbb
mov
sbb
jne
shl
dec
adc
call
pop
mov
daa
pop
pop
iret
fucomip
in
dec
mov
jnp
ret
cmp
sbb
add
lds
add
pop
pusha
mov
pushf
xchg
rcrb
jge
les
imul
ret
rcll
ljmp
aaa
fnstenv
jno
popf
fdivrs
sbb
add
pop
ss
pop
mov
ss
out
jecxz
adc
or
sub
xchg
cld
or
sbb
inc
sub
imul
add
adc
mov
test
in
mov
jp
fst
jge
mov
mov
xchg
enter
cmpsl
ret
out
fisttpl
fwait
lea
xor
mov
cwtl
mov
inc
adc
or
mov
imul
sahf
dec
sub
orl
jne
mov
out
mov
jo
jge
mov
and
lock
cmp
xor
mov
mov
inc
sbb
lret
movsl
dec
rcrb
mov
jge
rcrb
jno
les
in
xor
adc
fnstenv
clc
cs
je
insl
xchg
int
add
inc
inc
pop
adc
repnz
mov
mov
test
cmp
lahf
dec
aas
pushf
rclb
jno
lds
cld
shrb
jle
xor
pushf
adc
in
stos
js
cmp
ret
xchg
sbb
sub
les
xchg
sub
jecxz
push
repnz
xrelease
push
lahf
les
lahf
jle
mov
jb
js
mov
testl
sbb
xchg
jae
dec
push
adc
and
mov
int
jle
mov
mov
call
lcall
adc
daa
mov
loopne
out
mov
sbb
aaa
pop
sbb
jns
add
sub
jbe
mov
pop
shlb
cmp
fsubrl
outsl
aaa
sbb
rcrb
stos
jge
sbb
add
xchg
movsl
mov
and
xchg
push
cld
das
repz
pushf
ret
adc
xchg
iret
add
sbb
add
cmpl
mov
mov
xchg
mov
mov
stc
mov
lods
jle
cltd
shll
pop
push
enter
and
cmp
lods
and
test
clc
sbb
cmp
fistl
nop
jmpw
or
sbb
out
xor
int
cmc
test
ret
fincstp
clc
loopne
lea
aad
mov
mov
test
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
xchg
js
dec
pop
movsl
dec
call
fdiv
in
cmp
imul
sub
jno
lock
sbb
cmp
leave
arpl
sbb
pop
dec
sbb
xor
insb
mov
sbb
popf
sahf
sti
stc
je
scas
add
mov
repnz
xor
test
jl
sbb
les
or
sub
lahf
pop
xchg
jb
sub
xor
and
cmp
or
sbb
dec
mov
sub
dec
cmp
adc
mov
daa
mov
add
mov
rcrl
jb
mov
addr16
movsb
ds
mulb
lahf
pop
xchg
pop
push
cmp
enter
loop
out
sub
dec
push
or
fidivs
mov
inc
shl
mov
fucomp
repz
adc
xchg
mov
mov
sbb
mov
cltd
inc
push
lock
rcll
or
mov
dec
and
lods
imul
aaa
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
mov
test
dec
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
inc
jge
fcoml
pop
cmpsl
pop
insb
ja
xor
xor
jmp
mov
cmc
mov
mov
mov
sbb
sbb
inc
cmc
or
jns
ficoml
sti
and
iret
dec
test
sub
ds
sbb
sbb
jge
xchg
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
out
jecxz
mov
shr
inc
cltd
mov
inc
adc
dec
mov
mov
push
mov
add
cmp
jae
mov
lock
sbbb
push
dec
sbb
in
jns
repnz
jno
pop
inc
int
clc
nop
icebp
mov
and
push
int
mov
das
lret
push
movb
sub
or
cmp
adc
ret
stc
mov
mov
cmp
or
daa
or
add
in
stos
mov
adc
pop
xchg
jbe
scas
inc
inc
mov
mov
std
leave
push
repz
cmp
mov
mov
fdivs
fistl
roll
aas
jns
dec
lods
push
in
movsl
ret
fdivr
mov
lahf
cmpsl
mov
fwait
lea
sahf
fwait
bound
out
adc
add
movsl
negb
or
int
imul
push
sub
je
mov
sub
movsl
pop
gs
fstl
addl
mov
jns
nop
rcrb
mov
shrl
dec
or
sub
dec
lcall
lret
inc
std
mov
push
push
inc
lahf
fisubrl
fxch
mov
mov
sahf
lahf
popf
in
js
nop
sbb
dec
sbb
roll
xchg
or
push
pop
sub
nop
sbb
jl
rcl
lcall
fwait
jnp
mov
scas
scas
ret
jnp
in
mov
fs
mov
adc
es
or
sarb
clc
xor
add
adc
cmp
stos
cmp
xchg
mov
ljmp
or
mov
inc
and
loope
call
xor
jne
sarl
and
mov
dec
and
pop
dec
out
mov
mov
test
fsubr
mov
sbb
pop
adc
imul
shrb
adc
inc
rcl
fidivrs
gs
adcb
adc
pop
and
dec
push
repnz
sahf
push
inc
mov
rclb
and
testl
push
clc
mov
lods
push
fildl
jnp
roll
les
sbb
ret
add
pushf
addr16
adc
xchg
lcall
pop
stos
fsts
call
push
adc
xchg
xchg
jge
mov
into
scas
mov
and
cwtl
cld
inc
sarb
js
or
in
ja
jns
data16
push
dec
and
xor
test
insl
incl
enter
cmpsl
ret
out
mov
fwait
lea
xor
mov
cwtl
sbb
xchg
enter
sbb
add
out
std
fisubrs
pop
dec
test
sahf
dec
mov
repz
mov
arpl
fsubs
movsl
popf
sysret
fists
add
push
sbb
enter
add
rcrl
jecxz
popf
lcall
dec
pushf
dec
int3
imul
mov
xor
mov
iret
fbstp
jno
rorb
cmpsl
icebp
add
cmp
sbb
xor
xchg
push
test
movsl
adc
pop
pop
fistl
pop
jo
sbb
aad
fstpl
pop
fldt
inc
cwtl
push
test
cld
loop
in
nop
xchg
incl
cwtl
cld
inc
mov
test
mov
mov
inc
cmpsb
pop
mov
xchg
mov
sub
adc
lahf
jle
int
call
cmp
cltd
enter
mov
lea
adc
xor
mov
fucomip
mov
cmc
mov
and
jge
mov
cmp
ljmp
je
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
add
pop
or
cmp
mov
mov
mov
test
pop
addb
enter
cld
and
rcrl
mov
movsl
mov
ljmp
rorl
inc
clc
or
fildl
pop
dec
xor
mov
mov
and
je
mov
out
xor
int
out
sub
fcompl
fnsave
mov
cwtl
stc
enter
sbb
inc
adc
out
mov
cs
push
fnstenv
xor
xchg
and
rcl
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
inc
pop
xchg
add
push
cwtl
xor
sbbl
mov
sub
cmp
test
in
fisttps
inc
inc
ficompl
cli
mov
imull
je
mov
adc
add
test
std
cld
jns
sbb
sbb
lods
pop
fs
dec
inc
mov
xor
out
xor
sbb
jmp
mov
fmull
sti
and
push
fsts
aam
mov
add
mov
rcr
mov
inc
cwtl
push
test
insb
mov
ficoml
or
and
sbb
fwait
jl
int
enter
loop
cmp
xchg
cmovno
or
jbe
int
inc
cmp
or
mov
xor
test
aas
xlat
pop
dec
pop
mov
cmp
es
clc
rolb
mov
movsl
mov
jg
std
dec
inc
sbb
add
add
adc
leave
fdivl
ret
sbb
fs
iret
js
push
fwait
aad
sub
cmc
mov
jecxz
mov
mov
ret
cmp
mov
mov
sbb
cmpsb
sub
lcall
jge
pop
add
flds
cld
iret
jg
ret
sub
mov
cmc
mov
fmull
repz
mov
inc
es
mov
sbb
dec
and
xchg
jp
mov
push
sub
mov
out
mov
ret
fld1
std
jge
repz
inc
cltd
xlat
call
int3
pusha
jb,pt
jecxz
mov
shr
lret
insb
sub
add
mov
lcall
mov
sub
out
daa
push
adc
adc
mov
outsb
add
cmpsl
inc
test
shr
sub
push
nop
aas
mov
sbb
incl
pop
fs
mov
mov
and
pop
jmp
dec
sar
mov
xor
insl
pop
imul
xor
lock
rorl
stos
movsl
xchg
mov
fcoml
mov
leave
pop
stc
int3
scas
std
stc
loope
sarl
xchg
sti
jne
fsts
mov
or
add
push
fsubrs
fildll
mov
inc
cwtl
dec
lods
push
stc
adc
enter
inc
daa
popf
mov
lahf
cmpsl
mov
fwait
lea
decb
ret
sub
cmp
or
inc
out
jb
cmpsb
or
jle
pop
push
mov
call
jns
dec
and
rcrl
fucomip
sbb
aas
call
xchg
movsl
mov
or
inc
movl
inc
cmpb
adc
ret
mov
or
xlat
addr16
cmp
lods
jns
loop
scas
xchg
sbb
stc
mov
dec
pop
pop
in
inc
sub
shrb
add
das
or
pop
dec
or
jge
imul
sub
mov
cs
cli
mov
das
pop
icebp
cmp
cmp
pop
pop
mov
popa
cmp
aas
sub
inc
sbb
mov
pop
xchg
scas
mov
push
adc
pop
push
sub
mov
jl
mov
cmp
in
jne
mov
int3
pop
xor
or
mov
add
inc
sub
xlat
adc
ret
dec
sub
into
pop
je
popa
push
mov
sbb
in
mov
mov
pop
xor
call
or
add
test
pop
and
dec
mov
adc
stos
inc
sbb
int
mov
pushf
adc
test
pusha
dec
stos
push
xchg
mov
lahf
mov
outsb
popa
push
pop
clc
stc
mov
xchg
sbb
push
sbb
lret
rcll
push
xchg
or
sbb
sbb
pop
call
test
cmp
fs
xor
cmp
cwtl
cmp
xchg
test
mov
addl
add
push
cmp
mov
ret
int
inc
sbb
cmpsl
ret
out
stos
and
or
out
inc
cwtl
pop
aaa
xchg
enter
int3
adc
lret
sub
add
shl
mov
dec
arpl
aad
mov
loopne
rorl
callw
pop
in
cmp
xchg
xchg
push
xchg
jbe
mov
pop
shlb
inc
sbb
cltd
divb
shlb
les
mov
sbb
sub
mov
push
adc
dec
and
inc
cmp
adc
ret
push
nop
sbb
ja
or
mov
enter
cmp
mov
fmull
cmp
xor
fsubr
in
adc
cmp
sarb
iret
and
inc
jecxz
mov
les
mov
sub
mov
sub
push
inc
and
call
mov
testl
test
add
mov
popf
mov
lea
dec
mov
add
mov
mov
imul
pop
xor
iret
sbb
lds
or
push
enter
jno
hlt
test
lds
clc
test
test
cltd
rorl
icebp
cltd
xlat
in
lret
sbb
lock
das
cmp
lods
inc
xor
lods
dec
or
dec
je
cmpsl
jae
test
cmp
ret
add
and
lcall
insl
pop
jnp
push
dec
sahf
sbb
jmp
cwtl
popf
adc
jg
pushf
jne
jle
fimuls
push
andl
addl
add
dec
xor
mov
xlat
dec
and
je
cmp
test
out
xor
int
jmp
idiv
enter
inc
cmpsl
fucom
aaa
out
mov
and
push
movsb
cmp
cmp
jne
js
popa
pusha
mov
dec
and
adcb
inc
rcll
push
imul
lcall
into
inc
xchg
lods
nop
out
mov
mov
lock
add
cmpsb
sub
rcrb
mov
aaa
stos
inc
in
dec
sbb
lahf
movsb
fldenv
test
fbstp
ror
stos
repz
add
push
cmp
sbb
aaa
push
in
jae
int
mov
out
mov
xchg
lcall
movb
loope
movsb
fstl
mov
out
sti
jno
sub
int
push
adc
jb
lea
sub
or
mov
sub
push
mov
hlt
dec
mov
xchg
xchg
mov
lahf
pop
xchg
pop
movsb
jb
fwait
jl
dec
mov
loop
rcrb
addr16
sub
xor
sub
and
mov
jmp
test
mov
mov
xchg
fisttpll
pop
pand
ret
pop
fistl
adc
cmp
jnp
std
aam
lret
jecxz
cmp
sbbb
lock
jl
mov
or
pop
mov
lret
inc
sbb
add
clc
mov
aaa
dec
inc
in
aad
lds
xchg
mov
lret
and
mov
mov
jno
or
sbb
xor
or
mov
xor
jecxz
movsb
fmull
cmpsl
or
pop
jb
sbb
insl
xor
pop
aaa
cwtl
rorb
sbb
mov
sbb
fbld
adc
test
sub
cmp
sbb
mov
call
cmpsb
inc
cltd
out
cmp
mov
hlt
pop
aaa
test
and
pop
int
imul
and
mov
nop
imul
mov
ficoms
ja
pop
inc
ret
call
mov
jns
xchg
rcrb
mov
add
mov
and
scas
imul
nop
adc
stos
jb
lcall
xchg
call
xor
mov
mov
je
scas
xchg
adc
jno
les
cmp
dec
mov
hlt
sub
xchg
mov
add
jmp
sbb
xchg
jp
mov
fucomi
repnz
push
enter
mov
test
sub
pop
jg
add
push
xchg
sbb
in
mov
lods
push
xchg
mov
shr
pop
adc
adc
mov
enter
mov
pusha
sub
hlt
jb
jp
adc
int3
push
xchg
cltd
insb
dec
out
mov
test
cmovo
mov
pushf
pop
mov
lds
mov
in
jl
std
mov
pop
popa
mov
call
dec
sbb
gs
or
insl
push
and
mov
sbb
mov
in
and
mov
adc
adc
xchg
dec
sbb
fsts
mov
shlb
sbb
xchg
push
cmp
ljmp
dec
fcompl
lcall
movsl
pop
scas
pop
dec
clc
sbb
popf
fimuls
sti
inc
mov
xchg
cmp
andl
inc
xchg
jge
fwait
xor
data16
movsb
jp
ret
pop
sub
jnp
fistps
test
xor
enter
mov
adc
clc
push
adc
das
pop
cmp
fisubrs
daa
popa
test
movsb
lret
push
jae
sub
or
mov
arpl
in
add
mov
in
mov
mov
ret
repz
cld
or
inc
cmp
pop
dec
dec
sarb
push
test
mov
xchg
sahf
dec
adc
xor
mov
int
mov
xlat
movsl
aam
daa
sbb
shlb
icebp
cli
xorb
add
jmp
outsl
jmp
push
jb
mov
movsb
push
shrl
xchg
sub
add
lahf
fisttps
mov
jae
jo
out
xcrypt-cbc
cmpsl
xlat
popa
dec
addl
in
icebp
js
incb
test
cld
jmp
test
cmp
dec
stc
pop
lods
jmp
dec
cwtl
sbb
fldz
imul
mov
push
pop
inc
pop
bound
dec
cwtl
add
dec
inc
repz
jge
cmp
inc
inc
push
jae
sub
or
or
mov
fisubl
cmp
sub
jae
mov
ret
pop
rolb
in
popa
out
icebp
cli
dec
and
cmpb
adc
push
dec
es
scas
mov
jno
mov
int
dec
xchg
lret
xchg
xchg
push
xchg
jl
or
nop
mov
mov
pop
arpl
dec
mov
or
shr
rcrl
ficomps
mov
or
push
or
push
fwait
imul
mov
mov
pop
mov
dec
mov
mov
dec
in
mov
cmc
sbb
call
inc
movsl
pushl
repz
in
jnp
dec
mov
fs
mov
fcomps
cltd
int3
inc
cmp
ret
jl
btc
jl
cmc
mov
push
pop
inc
xor
xor
push
movsl
call
mov
iret
lahf
imul
pop
dec
cwtl
adc
adc
add
lret
inc
add
xchg
int3
push
fcompl
jne
fs
adc
data16
adc
sbb
nop
cmp
cmp
adc
pop
xchg
xor
or
push
sbb
jnp
jno
and
jge
sub
out
adc
out
jl
push
out
js
pop
xchg
xor
pop
cmp
jmp
pop
out
push
xchg
cld
loop
cmpl
or
add
repz
ja
sbb
test
inc
jecxz
outsb
rcrb
fldt
mov
in
lahf
outsl
aas
adcl
xlat
xchg
ds
jb
dec
mov
je
enter
mov
add
push
adc
bound
cmc
mov
mov
addl
call
js
pop
sbb
ljmp
icebp
pop
push
inc
ret
sbb
mov
cltd
je
xor
jo
repz
cltd
and
iret
inc
sbb
sbb
les
mov
movsb
push
cld
stos
jb
lret
push
test
in
lods
mov
sarl
mov
add
ret
xchg
mov
or
fiaddl
mov
loop
xlat
push
mov
fcoml
ja
mov
jno
aad
ret
jge
inc
xchg
in
loop
sbb
leave
or
cmp
or
or
es
fsubs
shrl
and
xchg
pop
data16
fisubl
xchg
imul
cmp
insl
out
or
mov
stc
sub
es
hlt
xchg
sub
es
fldpi
push
and
pop
mov
pop
add
orl
mov
and
rcrl
sbb
xchg
jmp
dec
add
cltd
inc
in
push
sub
roll
push
pop
ret
push
sbb
fsubrl
cwtl
test
sub
adc
scas
lahf
xor
rorl
sbb
inc
sbb
sbb
lods
pop
test
mov
fs
xchg
pop
sub
dec
xchg
xchg
mov
mov
lcall
mov
std
lock
sub
movb
ret
cltd
addr16
sbb
scas
out
dec
mov
or
sarb
pop
andl
clc
dec
shll
in
repz
mov
rol
rcl
mov
movsl
ret
inc
gs
jmp
mov
int
jmp
fcom
pop
fdivrs
sti
mov
gs
loope
pop
lea
push
jb
dec
mov
xor
in
push
pushf
dec
fs
loopne,pn
cmc
mov
popf
mov
mov
add
xor
mov
arpl
cmp
ja,pt
sub
cmp
test
jns
add
sbb
jl
mov
dec
push
aas
lret
sahf
ret
lds
lea
pop
ficoml
xchg
mov
xchg
push
mov
sbb
aas
mov
testl
sbb
rol
cmp
xchg
fcoms
jge
pusha
inc
mov
lcall
fisubl
push
stos
mov
jge
jns
movsl
jns
push
flds
sub
inc
pushf
shlb
lret
fiaddl
jnp
jle
das
pushl
jmp
jle
pop
push
cwtl
lock
sarb
dec
cmc
addr16
fdivrs
shll
pop
sti
fwait
xor
push
sub
and
mov
push
bound
frstor
push
cltd
jmp
mov
and
mov
push
fwait
xchg
fsubrl
out
aad
enter
ljmp
push
xchg
imull
inc
sahf
mov
in
and
mov
data16
test
inc
cltd
add
sbb
add
inc
setp
xor
aaa
dec
testb
stos
dec
sbb
xlat
push
jns
repz
mov
imulb
aam
dec
adc
ljmp
push
aam
jge
or
cwtl
jge
std
movl
pop
mov
fistpl
jo
or
sarl
sbb
fisubrl
jno
int3
jno
cmp
xchg
cld
or
cmp
cld
hlt
test
rorb
or
stos
cwtl
add
in
iret
dec
xchg
sbb
mov
popf
xor
sub
gs
ljmp
mov
loopne
cmp
cmp
nop
fldt
xor
jo
loopne
mov
or
sbb
ret
inc
pushf
aas
push
fsubrs
out
push
nop
cwtl
mov
ds
call
sbb
or
std
dec
imul
lahf
push
push
arpl
mov
sbb
sub
fwait
hlt
mov
and
lret
fisubrl
add
pop
mov
sahf
fldt
sbb
sbb
scas
mov
fstp
jmp
dec
popf
aad
push
fs
dec
mov
or
dec
bound
pop
fistpll
mov
mov
sbb
imul
stos
movsl
pop
js
call
mov
xchg
push
or
stos
cwtl
add
js
pop
lret
popf
jmp
sub
xor
xchg
jae
test
inc
mov
test
addb
lahf
jo
inc
fcmovnu
jb
cmp
popf
and
adc
or
test
hlt
xor
and
cmp
mov
mov
mov
popf
negl
inc
int
roll
pop
rcrl
stos
mov
lcall
dec
lahf
in
mov
lock
mov
mov
add
iret
cmpsl
xchg
leave
cmpb
lret
test
fcomi
and
add
mov
movsb
push
lahf
xchg
into
sahf
loop
mov
lahf
jmp
add
pusha
insl
pop
mov
sbb
lret
or
jp
mov
add
fistpl
imul
cltd
and
or
pop
scas
pushf
shrl
mov
xchg
cltd
imul
cltd
mov
sbb
mov
sub
aam
pop
dec
xchg
int
jg
mov
adc
mov
xchg
lahf
jmp
movsb
int3
inc
arpl
ret
fsin
repz
mov
imul
addr16
cmpb
leave
lret
stos
clc
dec
push
or
cmpsl
adc
xchg
jle
push
inc
fwait
lock
fwait
and
add
sub
mov
loope
pop
daa
dec
cmpl
dec
cmc
lret
hlt
mov
mov
enter
mov
fwait
push
pushf
adc
mov
sbb
dec
movsl
mov
xor
jb
xlat
aas
dec
fwait
sahf
mov
dec
mov
movsb
leave
js
and
cmp
push
ja
xchg
dec
sbb
test
or
sbb
sub
lock
adc
xchg
xchg
adc
test
lods
inc
sbb
cmpsl
cmp
jmp
scas
loope
ss
mov
negl
mov
push
repnz
add
inc
mov
add
notl
test
cmpsb
mov
inc
inc
mov
es
pop
gs
cltd
jmp
lret
and
add
mov
add
mov
mov
adc
popa
mov
or
mov
xor
mov
rcr
jge
stos
sbb
xlat
cli
pop
sti
mov
sbb
push
pop
mov
pop
cmp
cld
gs
cld
xchg
jmp
dec
mov
popf
pushf
mov
fdiv
clc
mov
adc
test
inc
mov
lret
mov
adc
mov
mov
dec
jge
addl
lds
stos
mov
mov
pushf
xchg
fmull
subb
cltd
push
pop
pop
mov
mov
pop
or
bound
fwait
out
pushf
adc
das
rcrl
push
mov
clc
jo
push
dec
shrl
xchg
and
cmpsb
pop
xchg
imul
sbb
push
sub
pushf
xor
lahf
cmpsl
jnp
popf
divl
fcom
lea
dec
inc
xor
xchg
enter
mov
out
inc
adc
sbb
in
std
sahf
dec
mov
mov
stos
pop
lods
popf
mov
dec
add
mov
or
shrl
sub
gs
mov
pop
sub
mov
out
sbb
sub
out
hlt
mov
neg
mov
dec
pushf
push
test
lret
repnz
add
mov
aas
push
lret
mov
cmpsl
mov
test
test
enter
inc
push
test
inc
scas
mov
mov
stos
xchg
push
fldcw
and
mov
pop
lret
leave
or
imul
pop
pusha
jnp
xor
sbb
fnstsw
dec
inc
xor
sbbl
add
or
xchg
nop
add
rcr
xor
sub
notb
push
test
insl
leave
js
leave
sbb
dec
ret
flds
adc
call
lods
pop
sub
dec
push
or
mov
cli
mov
xor
dec
ja
ret
lahf
mov
loopne
lahf
mov
fucomip
repnz
sti
mov
jecxz
xchg
ret
enter
lock
cmpsl
call
and
xchg
fisubrl
sbbl
rcrb
div
test
dec
sbb
int
inc
adc
mov
xchg
test
mov
jno
leave
aad
jge
sub
test
imul
loope,pn
lods
jle
jmp
fstl
ret
jge
xchg
inc
sar
lret
inc
fwait
push
icebp
and
cmpsl
xlat
pop
testl
xchg
push
mov
sbb
mov
movsl
ret
shll
out
adc
adc
out
pop
or
aaa
popf
mov
mov
jne
dec
inc
mov
movsl
dec
imul
fwait
int
pop
cwtl
sub
dec
inc
push
filds
pop
sahf
roll
jae
sub
add
test
add
mov
cmc
lret
clc
jne
fmull
fimuls
rolb
orb
lret
insl
movsl
add
jg
adc
stos
push
insb
xlat
enter
sub
xchg
jp
mov
xchg
pop
loope
lret
mov
mov
or
out
mov
shrb
pushf
scas
hlt
mov
mov
mov
lret
iret
push
xchg
mov
jnp
or
int3
scas
pop
idivl
or
stc
enter
loope
dec
xor
sti
repz
mov
push
xchg
xchg
jg
cwtl
loopne
cmp
xor
cmp
fwait
dec
mov
jno
mov
ret
fld
fadd
mov
add
mov
fptan
repz
test
xchg
or
leave
hlt
jl
jo
mov
adc
inc
mov
in
jnp
sbb
sub
xorl
mov
sbb
add
shl
gs
jecxz
enter
jb
pop
cli
cs
pop
repnz
loop
int
push
cwtl
dec
movsl
mov
lock
shrb
jns
idivl
push
pop
mov
dec
push
mov
xor
mov
mov
jge
repnz
test
add
int
jge
fisttpl
cmp
movsl
and
pop
mov
mov
push
cwtl
dec
je
mov
ss
rcrb
fwait
add
push
sub
cwtl
clc
daa
js
add
pop
xor
sarb
addr16
push
xor
lods
xlat
mov
mov
mov
fstps
fcmovne
clc
xor
rcll
addl
bound
dec
inc
dec
push
and
inc
int
insb
jb
outsb
xor
mov
add
sub
jne
movsl
and
iret
lahf
iret
fisttps
or
sbb
cmpsl
mov
mov
dec
lods
mov
jo
pop
dec
jno
test
test
jg
js
dec
xor
sub
mov
ja
xchg
mov
xor
clc
jge
xchg
cli
sub
xor
movsl
xor
cmpl
mov
dec
xchg
cwtl
push
mov
add
mov
lods
sbb
aam
mov
push
xor
mov
sbb
bnd
enter
popf
adc
and
adc
cmpl
or
jns
sub
mov
inc
push
test
jge
stc
stc
inc
adc
in
cmp
cltd
bnd
divl
mov
int
xor
sbb
inc
pop
inc
pop
stos
xchg
fisttpl
fcomps
fldcw
into
pop
mov
jns
loopne
mov
mov
xchg
jae
test
in
mov
enter
jno
pop
rcll
in
cld
jg
leave
mov
mov
dec
icebp
mov
shrb
mov
leave
test
in
xchg
cmp
pop
ja
adc
xor
lcall
pop
insb
push
loope
sub
add
in
xchg
vpsubsw
xchg
cwtl
push
lock
cmp
pop
lods
sbb
pop
imul
fisubl
mov
enter
adcl
loopne
rolb
add
sub
or
dec
cmc
push
push
fisubs
out
mov
and
jb
lret
mov
int3
mov
inc
cltd
pop
xor
jge
pop
pop
scas
lret
jmp
aam
out
out
cs
fsubrp
ljmp
xchg
negb
add
adc
mov
test
add
in
and
fucomip
jns
add
scas
in
sbb
cltd
mov
inc
sub
inc
pop
ljmp
inc
test
dec
pushf
dec
and
imul
inc
sahf
lahf
inc
mov
negl
fs
mov
ljmp
or
test
pop
xor
inc
scas
ja
add
or
imul
aad
xor
xor
mov
int3
xor
fucomi
js
inc
mov
or
sbb
mov
in
push
dec
and
clc
xchg
and
mov
popf
in
test
fwait
mov
mov
ret
lds
enter
sbbl
add
and
lcall
mov
stos
in
sub
das
cmp
test
xchg
cli
xchg
sahf
mov
insl
inc
sub
lcall
lret
add
cs
sbb
lret
repnz
stc
testl
rcll
mov
mov
pusha
into
aad
leave
jnp
dec
sub
mov
sub
xchg
test
dec
or
pop
pop
sbb
lods
ret
adc
movsl
mov
jbe
mov
mov
clc
stos
dec
data16
cmp
sbb
lahf
sahf
xchg
jle
or
mov
stos
cmpl
in
loope
add
subl
adc
mov
enter
adc
adc
sub
in
fidivs
cs
int3
mov
mov
insb
xchg
insl
stc
xchg
xor
mov
enter
dec
pop
mov
shr
and
push
lods
pop
mov
mov
jno
pop
xchg
div
xor
aas
mov
jno
xchg
into
cwtl
cli
lret
or
pop
xchg
mov
mov
orb
xor
fdivs
add
stos
mov
pop
add
pop
lcall
mov
push
lret
icebp
jmp
lods
inc
test
iret
enter
dec
mov
or
mov
les
pop
stos
jne
vsubss
fstl
cmpsb
xchg
icebp
pop
jbe
adc
dec
sub
rcr
dec
cmp
add
mov
inc
sbbl
mov
aad
inc
pop
xchg
mov
xor
xor
test
sub
dec
inc
pop
lret
mov
insl
add
push
fdivs
jne
rcll
ret
add
ljmp
and
sub
mov
cmp
xchg
mov
dec
sahf
sub
inc
mov
pushf
ja
adc
imul
adc
mov
hlt
mov
mov
in
popf
icebp
mov
dec
test
sbb
lock
fisttpl
aas
push
xor
aas
dec
fwait
sbb
leave
test
clc
mov
addr16
lods
shlb
mov
jl
inc
add
push
cmp
roll
fsts
push
fidivs
testb
pop
sbb
xor
add
jmp
mov
adc
iret
push
inc
fs
inc
xor
adcl
inc
aam
pop
pop
add
mov
out
jp
xchg
mov
imul
sub
cmpsb
call
mov
sarb
push
cmp
in
xor
push
sub
dec
mov
mov
sub
cs
cmc
mov
and
xor
add
mov
cmp
loop
cld
sti
mov
jns
add
scas
jo
cltd
adc
push
inc
aas
lret
cltd
mov
fmull
push
lock
ss
mov
xchg
dec
push
fimull
cmc
jae
or
iret
sbb
rcr
xor
cltd
cwtl
nop
sbb
ret
cmp
sub
fisubrl
sbb
and
jl
rorl
lahf
lods
icebp
dec
push
dec
jecxz
mov
inc
insb
jnp
mov
fwait
dec
arpl
pushf
mov
fsubl
mov
enter
adc
cmpsl
or
fimuls
jns
sbb
xchg
cltd
dec
and
cmp
or
sub
mov
xchg
cltd
out
cmp
cmpsl
mov
std
fwait
mov
repz
fiadds
jle
dec
xchg
dec
mov
mov
sub
mov
sub
roll
fcomps
mov
mov
or
xlat
clc
jnp
mov
and
inc
xchg
push
hlt
fnstenv
ret
inc
sbb
add
pop
or
ret
inc
adc
add
test
push
ja
inc
and
adc
popf
inc
sahf
jmp
mov
mov
sahf
dec
pop
jno
mov
lods
ja
in
mov
lock
pop
stos
xchg
stos
sbb
jge
jb
movsb
scas
push
push
mov
push
pusha
jns
xor
xchg
add
jle
scas
fsubl
jo
arpl
rcll
pop
and
sub
mov
sbb
add
rcll
xor
pop
or
xchg
sbb
pop
pop
and
jb
add
popf
iret
push
pop
jne
or
or
lods
and
fbld
dec
fsts
roll
pusha
jp
push
mov
cmpl
mov
in
or
movsb
ret
mov
adc
pop
jmp
cld
orl
int3
sbb
mov
imul
jg
sub
sbbb
loopne
shlb
aaa
mov
push
jae
hlt
and
sbb
mov
in
and
jp
shrl
jne
outsl
mov
jle
sub
xchg
dec
or
ret
sahf
ficoms
jns
and
out
nop
xchg
sbb
cwtl
add
and
xor
jno
popl
mov
and
repz
push
cmpsb
shrl
fisubl
fbld
sti
cmp
pop
mov
data16
sbb
cwtl
dec
inc
int3
std
adc
jmp
mov
in
andl
cltd
fiadds
shll
call
insl
arpl
out
les
inc
cmp
or
push
pop
inc
ffreep
jns
ds
dec
clc
push
adc
push
testb
int
call
or
mov
lock
pop
shl
mov
lds
sub
pop
mov
fucomp
fs
cmpsl
int
mov
lret
into
push
sbb
sub
inc
adc
adcb
inc
insb
aad
cmp
les
int
pop
or
xchg
fwait
jnp
or
lahf
fisttps
cmp
xor
xor
in
lea
add
xchg
mov
adc
fwait
jmp
data16
fidivrs
out
mov
cmp
jp
frstor
aas
ret
mov
jmp
loopne
int3
pop
sub
hlt
mov
nop
xchg
cltd
push
adc
pop
enter
mov
add
test
arpl
mov
loop
shl
mov
ja
lret
cmc
mov
fists
iret
cmpl
lock
es
enter
fiaddl
lock
aas
sub
mov
fs
sbb
inc
mov
mov
ja
inc
in
lret
mov
aaa
stos
push
inc
jno
sbb
shlb
pop
dec
add
mov
pop
cld
mov
cli
jb
dec
adc
push
xchg
fimull
clc
dec
mov
arpl
jns
inc
pop
mov
and
movsb
into
bound
lock
rol
aam
sbb
jl
mov
pop
in
jl
jnp
incb
les
ja
mov
cmp
notl
shlb
mov
jns
push
cmc
jnp
fdivs
pop
cmp
xorb
jae
pushf
sbb
and
push
adc
pushf
test
cld
outsl
mov
cmp
out
aad
or
lcall
or
movsl
pop
sbb
in
cmpsb
imul
pop
push
sbbb
or
dec
lret
ret
sbb
add
adc
xchg
cld
cmp
pushf
lahf
daa
jnp
dec
pop
add
jns
leave
roll
sub
pop
cli
fldcw
stc
xor
aaa
stc
je
shll
push
cmp
ret
add
das
sbb
int3
mov
lret
pop
adc
xchg
pushf
pushf
adc
stos
cmpsl
jno
sti
add
test
roll
movl
nop
xchg
xchg
jl
pop
ljmp
fstpt
sahf
jg
mov
test
jno
add
pop
dec
mov
fistpll
push
iret
inc
xorl
xor
mov
mov
push
test
jl
iret
dec
sbb
mov
sbb
ja
out
andl
rclb
lds
nop
jp
add
xor
xchg
push
mov
xor
enter
ret
enter
mov
mov
inc
sbb
out
hlt
mov
imul
xor
mov
dec
and
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
ret
lods
test
xor
dec
lret
or
mov
stos
mov
inc
and
inc
lods
addps
test
subb
call
call
sbb
cmp
jge
inc
jnp
test
fstpt
fsubrp
sbb
js
mov
xchg
cmpl
test
jge
sbb
mov
xchg
fsubp
mov
fwait
rolb
out
mov
and
push
xor
mov
pop
push
dec
lea
shlb
mov
addr16
aad
jno
xor
inc
insb
aam
mov
push
addb
iret
imul
das
clc
sbb
fs
hlt
cs
mov
in
ljmp
sahf
int3
lds
jae
xchg
sbb
dec
jp
sahf
and
test
sub
test
xchg
daa
xor
test
std
mov
in
inc
mov
dec
jns
ret
add
add
andb
mov
lods
ja
or
cmpsb
rorb
scas
dec
push
push
mov
pusha
xchg
bound
js
test
cmc
or
dec
cwtl
xchg
xor
inc
std
rolb
cmpsl
or
inc
adc
dec
fcos
iret
out
cmc
icebp
cld
sti
add
cmpsl
mov
sbb
ret
mov
mov
imul
bound
and
mov
and
ss
in
xchg
lea
imul
rclb
sbb
or
push
movsb
xchg
jmp
inc
test
push
and
jge
insl
rolb
test
pop
adc
push
pusha
fbstp
inc
rcr
or
xchg
cmp
fsubr
les
or
add
lds
mov
lahf
fisubrl
mov
mov
xchg
test
jnp
jmp
push
sbb
bound
push
xchg
popf
mov
add
or
add
mov
sbb
push
xor
pusha
mov
and
scas
inc
cld
xor
and
mov
push
sbb
adc
adcl
sub
xor
push
lret
movsb
inc
xor
fidivs
roll
lea
xor
loop
faddl
push
repnz
adc
adc
je
imul
push
xchg
pop
mov
adc
ss
loopne
fisubs
inc
fstpt
hlt
mov
pop
sub
or
ss
inc
or
into
mov
lret
movsl
mov
aad
mov
pop
adc
pop
stos
pop
jp
scas
lds
js
mov
jle
cld
std
test
ja
mov
test
add
add
inc
and
mov
fistl
dec
jo
sbb
inc
sub
stos
idiv
mov
fwait
leave
loop
out
js
sti
adc
xorps
pushl
or
repz
adcl
pop
jae
inc
gs
mov
mov
fmulp
pop
hlt
ret
fisubs
outsb
dec
push
add
and
mov
test
pop
fwait
push
dec
mov
sbb
out
fdivl
out
and
mov
shl
mov
pushf
dec
pop
movsl
dec
sbb
and
ret
ret
sti
pop
pop
rol
lock
mov
sbb
or
add
rcrl
bnd
flds
mov
jb
negb
pop
inc
inc
mov
lds
cmp
stos
jae
or
mov
lret
or
mov
or
push
push
xchg
or
ja
push
xchg
stos
pop
lea
push
mov
repnz
push
enter
jbe
pusha
sub
jo
cmp
xchg
dec
sbb
pop
push
std
je
sub
add
dec
mov
int3
dec
cmp
shll
nop
pop
push
push
sub
cmpsb
adc
ja
and
mov
popa
sub
xlat
push
sahf
into
cmpsl
iret
sbb
jns
es
push
loope
add
in
std
cwtl
dec
sub
loopne,pn
jle
shlb
push
push
shr
repz
jecxz
pop
adc
adc
pop
push
inc
mov
sbb
movl
lds
or
or
ret
mov
imulb
push
xchg
mov
nop
xlat
dec
pop
inc
adc
sbb
xor
mov
mov
and
push
fst
or
insb
push
iret
push
pop
pop
adc
push
mov
stos
mov
lods
xchg
add
pop
dec
jno
aaa
fwait
lods
jle
cltd
aam
mov
add
inc
mov
scas
aaa
jmp
mov
sar
and
push
mov
inc
vunpckhps
test
dec
cmp
lcall
lret
dec
fldl
add
int3
sub
mov
in
or
mov
bound
out
sbb
push
xchg
cwtl
es
dec
pop
imul
out
lods
and
mov
bound
lret
jne
or
adc
lds
sbb
idivl
decl
sbb
call
jecxz
movl
xchg
push
or
cld
or
sbbb
dec
dec
pushf
or
stos
leave
test
clc
sub
sbb
enter
pop
fbstp
fldt
pusha
push
pop
insb
test
mov
jo
push
pushf
test
mov
push
test
pushf
out
mov
pop
in
lds
or
xor
xchg
sbb
inc
fsubs
inc
icebp
leave
icebp
xor
pop
std
inc
iret
add
add
or
inc
cwtl
lock
dec
repnz
iret
fsubs
sub
cmpsb
popa
pop
daa
sbb
cmp
into
bound
mov
loop
hlt
pop
cmp
mov
hlt
xchg
lea
pop
dec
xor
dec
mov
pop
dec
pop
jbe
movsl
or
ss
aam
fstl
inc
cmpl
imul
sub
lock
push
leave
adc
inc
pop
mov
in
pop
dec
mov
icebp
fldenv
lds
mov
aam
cmp
flds
cli
test
idivl
cli
aad
push
test
xchg
test
mov
jo
xchg
adc
add
sub
inc
fistl
pop
mov
lret
inc
fdivl
lret
or
jnp
jns
add
fmull
sti
and
cmp
sarb
clc
jb
add
gs
jg
outsl
sub
addr16
xchg
xchg
test
xor
leave
int
cmp
inc
and
jl
cmp
sub
push
jne
push
lea
orl
lret
gs
das
out
cmc
sub
popf
neg
pop
rolb
adc
stc
lea
sbb
mov
lods
mov
pop
rcrl
cwtl
enter
mov
inc
sub
adc
test
iret
imul
pop
xor
xor
movsl
pop
testb
cmp
xor
rorl
mov
jno
mov
cmp
dec
fmulp
arpl
pop
sbb
int
mov
sub
jp
lret
or
imul
mov
enter
lods
jne
jnp
sub
test
scas
inc
popf
ljmp
and
mov
push
mov
and
jp
iret
rorl
adc
and
xor
fucomp
inc
dec
mov
ret
xchg
fcmovnb
fs
cwtl
aas
xor
ds
sub
cwtl
push
in
shr
pop
xchg
outsl
mov
fistpll
mov
inc
inc
jmp
call
push
cltd
jo
pop
shlb
mov
fisttpll
inc
push
mov
adc
jbe
test
jle
fldt
mov
nop
adc
scas
and
sbb
cltd
pop
addr16
ljmp
xor
sahf
dec
pop
jae
aam
jg
mov
outsb
cwtl
lahf
pop
bnd
mov
mov
adc
dec
push
in
vpsubusw
push
cmp
cmp
xchg
mov
pop
pusha
cmp
mov
out
idivl
jne
cmp
inc
sub
test
adc
mov
popf
leave
xor
cmp
xor
js
and
daa
sti
fucomip
popa
mov
xchg
dec
aas
jge
rorl
subb
addr16
dec
push
rcr
lret
nop
dec
daa
ret
inc
mov
pop
xor
ljmp
fimull
mov
fucomip
daa
stc
daa
push
dec
lahf
lds
add
sub
push
aad
mov
rorb
iret
inc
adc
pop
xor
pushf
xchg
sub
clc
mov
dec
stos
pop
jp
enter
mov
adc
sbb
subl
mov
inc
popa
mov
adc
xchg
out
mov
lret
movsb
push
push
lret
popa
test
sub
ja
sub
fisubs
lahf
aas
lahf
scas
movl
loopne
dec
lods
fidivrs
cmpsl
imul
sarl
ds
leave
cmp
test
cltd
jge
fucomp
aas
mov
and
push
in
xchg
ljmp
pop
out
xor
rol
adc
or
sbb
mov
loop
jg
stc
add
int3
repnz
lods
pop
popa
cmc
mov
sub
inc
divl
idiv
push
movsl
repz
lods
movsb
jne
shlb
roll
ljmp
jb
adc
cmp
scas
add
sbb
cmp
jp
pop
test
fsubrl
stos
stos
movb
add
shlb
bound
jne
xchg
sbb
mov
jp
sub
punpckhwd
test
xchg
mov
cmp
cmp
push
add
jno
repnz
xor
jno
leave
mov
xchg
sahf
hlt
js
sbb
inc
ss
outsl
cmpsl
xlat
mov
sbbl
out
mov
mov
push
mov
fucomp
aas
je
or
push
lods
repz
ds
and
push
cmpsl
ret
fsts
pop
inc
mov
pop
out
jge
test
inc
ss
icebp
mov
add
xlat
fcmovne
fmulp
xchg
jmp
lret
adc
movsb
pop
das
fiadds
dec
sahf
rcll
mov
xlat
and
mov
xchg
std
xchg
insl
pop
dec
push
fistps
fdivrl
xchg
and
inc
outsb
hlt
mov
mov
mov
lret
icebp
dec
sbb
mov
scas
aaa
stos
dec
cmp
pop
scas
movl
into
lret
cmpsl
push
test
add
ss
inc
scas
or
xor
mov
cli
cmpsb
pop
movsb
push
rolb
lahf
or
and
lahf
sahf
lahf
jns
or
fsubs
add
cltd
sub
lcall
xchg
imull
je
aam
pop
hlt
lcall
pop
mov
adc
dec
lods
xlat
push
mov
repnz
xchg
fs
inc
cltd
decb
fwait
dec
inc
jmp
inc
mov
xchg
cwtl
call
mov
adc
inc
sbb
mov
dec
aaa
stos
shr
rep
jo
fwait
xchg
dec
sbb
inc
inc
xor
pop
mov
inc
mov
clc
loop
cmp
xor
or
pop
inc
xchg
aaa
shrb
push
cld
scas
and
sub
dec
sahf
mov
dec
add
fidivl
test
scas
mov
icebp
jmp
xor
xor
mov
movsl
and
or
cmp
xchg
lret
jno
and
int
rol
cmp
adc
jne
pop
ret
mov
aaa
push
mull
mov
data16
push
sub
ficoms
jle
xchg
mov
out
push
sbb
inc
shrb
test
ret
sbb
dec
enter
pop
cli
outsb
xor
fwait
dec
xor
mov
xlat
jg
fwait
dec
test
int
cmp
sbb
cmpsb
ljmp
xchg
fnstsw
and
pop
in
xchg
xchg
adc
xor
mov
fistps
mov
sarb
leave
xchg
and
mov
test
sbb
movsl
and
cmp
out
add
notl
pop
enter
and
sbb
mov
push
aaa
dec
push
dec
adc
mov
popf
fdiv
les
sbb
sbb
aas
test
loopne
test
pop
stos
jne
test
pop
adc
pop
add
xchg
cmp
jp
pop
jg
dec
scas
fdiv
js
mov
lods
jo
arpl
xorb
or
pop
or
xlat
aam
mov
add
repnz
fsubs
sub
mov
push
sbb
lcall
mov
inc
cltd
enter
popf
cltd
int3
pop
sub
jecxz
mov
int3
int
mov
xchg
jmp
sbb
xchg
or
popf
inc
inc
ror
cmp
cmp
and
dec
sub
sti
mov
jecxz
dec
sub
sbb
jge
nop
pop
xchg
stos
xor
imul
xor
mov
repz
add
mov
ret
test
cwtl
xor
hlt
js
in
fildll
or
jge
cwtl
sbb
stc
mov
mov
jmp
cwtl
imulb
jge
cli
movsl
adc
lcall
jle
fcoml
jbe
fcoml
mov
lock
inc
icebp
leave
movsl
lods
pop
shlb
or
xchg
xchg
sbb
adc
vsqrtsd
gs
adc
scas
xchg
xlat
xchg
mov
out
jecxz
ret
xor
fdivs
data16
fdiv
dec
push
and
cmp
enter
ret
push
stos
xor
cmp
in
jne
cwtl
mov
stos
xor
lods
inc
pop
mov
out
mov
mov
adc
mov
or
cmp
cmpsb
fdivl
sub
dec
jo
loop
xor
inc
push
mov
cwtl
or
outsl
sub
clc
lret
lods
mov
pop
stc
sbb
fists
je
fsts
jo
test
dec
bound
xorb
imul
xchg
fistl
cmpsb
js
lds
adc
mov
stc
or
inc
enter
push
mov
adc
imul
inc
repnz
test
stc
out
inc
shrb
jb
lahf
mov
add
inc
pop
ret
cwtl
xor
push
rcll
push
idivl
ret
fisubs
iret
dec
lea
shl
cmc
or
cmpl
cltd
cmp
and
call
popf
idivl
mov
repz
jmp
sahf
sbb
clc
aas
in
and
cmp
test
cltd
mov
dec
aaa
xorl
pop
sbb
cwtl
lret
pop
cld
jno
mov
out
xchg
mov
xchg
imul
out
mov
sti
lret
sub
dec
fidivl
mov
jae
test
jp
xchg
test
nop
sbb
mov
popf
mov
pop
stos
jne
imul
sbb
lds
jmp
mov
fs
sbb
sbb
loopne
push
es
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
popf
in
out
fwait
cmp
sub
out
enter
or
out
and
in
mov
xchg
cwtl
dec
mov
jmp
adc
push
mov
push
movsl
repz
loopne
xor
sbb
imul
or
psubsw
loop
inc
sbb
sahf
cmc
sub
mov
xchg
addr16
mov
test
div
test
push
cli
sbb
in
fisttps
or
xchg
mov
popf
lret
push
fsubs
add
sbb
or
dec
enter
xchg
fistl
fimull
pop
inc
mov
add
fsts
insb
xchg
lret
sbb
jge
adc
test
fimuls
xchg
adc
lahf
es
dec
cmp
push
cmc
addr16
aam
repz
sub
mov
xchg
mov
push
xchg
inc
in
mov
jne
cltd
out
jl
out
mov
xor
cmpl
lea
imul
push
pop
pop
push
test
pop
stos
shll
xchg
push
shrd
cmp
and
ds
and
ret
lock
inc
sbb
outsl
xor
sbb
gs
ret
repz
popf
jnp
mov
jb
pop
lahf
outsl
shrb
inc
pusha
fmulp
pop
add
fisttps
dec
rcrl
xchg
mov
pusha
test
sbb
sbb
lcall
fimull
adc
pop
mov
lods
inc
sbb
mov
aad
loope
jg
enter
cmp
add
mov
addr16
arpl
mov
adc
push
ljmp
daa
aam
xor
loop
popf
stos
ret
jo
push
lea
xchg
inc
and
jmp
mov
mov
pop
jle
mov
mov
int3
loope
cwtl
sbb
cmc
leave
sbb
adc
cmc
fsubrs
popf
xchg
dec
inc
cmc
hlt
mov
lods
lret
add
sub
mov
dec
sbb
mov
in
test
psrlq
sbb
pushf
jge
dec
sub
add
rolb
jl
hlt
sub
loop
xor
mov
lds
mov
rcl
dec
sbb
sub
sahf
cmp
mov
jp
loop
arpl
ss
ficompl
and
enter
test
xchg
dec
xchg
push
mov
push
sbb
subb
sbb
out
pop
icebp
sbb
xor
fwait
leave
cmc
and
adc
jmp
and
add
enter
jle
rcll
outsb
mov
push
fidivrl
push
sbb
sub
mov
jnp
popf
cmc
hlt
std
mov
sti
and
sbb
xor
mov
in
fstp
imul
jp
cmp
xor
mov
movsl
repz
adc
add
sahf
lods
jmp
nop
mov
jmp
jecxz
movsl
mov
adc
sbb
add
fcompl
mov
mov
dec
sbb
stos
shrl
leave
pop
ljmp
xor
pushf
vpaddq
data16
cltd
xchg
mov
lret
scas
xlat
push
xchg
sahf
sub
xchg
stos
inc
sbb
add
cmp
insb
jb
insb
mov
add
pusha
mov
jmp
mov
sbb
testb
rorl
jo
enter
pushl
pop
jg
leave
dec
pop
sub
inc
mov
stos
push
test
in
xchg
call
dec
test
fsubl
shll
ret
outsb
mov
cmp
out
shlb
ss
inc
pop
pop
iret
mov
mov
jo
mov
sub
cmp
adc
inc
lods
shll
add
inc
ficomps
out
mov
mov
mov
pop
xchg
adc
mov
add
mov
loop
imul
mov
nop
push
lcall
jo
mov
ja
loope
sbb
xchg
lret
sar
cmp
mov
add
cmpsl
shrl
mov
mov
scas
jo
push
lods
cmp
stos
std
cld
dec
popa
das
sub
cmp
lret
sbb
fldcw
jns
aaa
mov
inc
pop
fidivs
fdivl
popf
fists
rcl
mov
or
mov
add
inc
cwtl
call
nop
dec
and
xchg
and
movsb
bound
mov
nop
iret
cmpsl
ret
lcall
dec
sbb
mov
mov
sbbb
adc
xchg
ds
mov
push
or
fcomp
xchg
push
cltd
sahf
cmp
pop
addl
sbb
leave
or
in
mov
adc
sbb
movl
or
mov
xor
push
adc
push
pop
xor
or
nop
jecxz
pop
push
pop
test
pop
sti
xchg
xchg
adc
into
scas
pushf
movsl
cmc
jns
add
mov
popf
lret
loopne
test
add
nop
stos
pop
les
xchg
fisttpl
lods
or
mov
lods
js
or
adc
rclb
std
fildll
mov
cld
vmread
andl
and
mov
call
les
popf
jmp
and
xchg
or
inc
pop
xchg
mov
insl
out
mov
mov
xor
loope
int3
mov
inc
mov
dec
jg
addl
cmpsb
xor
dec
push
dec
mov
lcall
mov
std
sbb
inc
dec
inc
mov
cmp
jp
mov
xor
jecxz
lock
sbb
jmp
push
cs
add
gs
stc
inc
fidivl
cwtl
or
aad
xchg
enter
repz
sahf
in
inc
mov
pop
ljmp
sbb
sub
xor
rcll
ret
xor
add
xchg
or
fwait
into
push
lcall
pop
test
lods
inc
sbb
adc
int
repnz
push
clc
xchg
test
add
mov
push
mov
jns
dec
and
or
add
jae
dec
xchg
xchg
imul
rcll
outsl
push
mov
fnsave
inc
enter
test
jle
push
pop
jns
mov
xchg
in
jne
ret
mov
nop
mov
dec
and
mov
mov
test
mov
repz
dec
or
jecxz
lret
lret
mov
sub
pushf
sbb
or
fsubrl
jae
aas
mov
pushf
jmp
xchg
xlat
stos
les
pop
pusha
leave
test
push
push
int
mov
mov
fucomp
movsb
mov
clc
sub
into
jo
fnstenv
or
fsubrl
inc
cwtl
imulb
popf
fdivrl
mov
mov
pop
jle
fcoml
jbe
fmull
jnp
xor
push
or
push
push
pop
adc
cmp
cwtl
hlt
inc
mov
fdivs
sti
adc
ds
push
or
cltd
sub
div
sub
pop
test
add
cmp
popf
adc
xor
xor
fidivrs
jnp
push
adc
pop
sub
dec
mov
xchg
lea
mov
imul
test
jle
arpl
mov
je
loopne
mov
jno
mov
fwait
sub
and
cmp
out
xchg
hlt
test
mov
lds
movl
dec
and
push
stos
mov
ret
and
lret
push
mov
std
inc
sahf
outsb
jno
sbb
cmc
out
icebp
add
and
sub
jns
adc
or
fistl
jnp
loope
lcall
in
sahf
jecxz
push
fists
mov
xor
adc
cmp
push
xchg
dec
aam
jns
jnp
dec
test
or
jge
cltd
mov
aam
incl
and
jae
inc
shll
ret
lds
bound
pop
xchg
xchg
out
in
or
pop
pop
mov
hlt
je
popf
outsl
mov
adc
ds
mov
in
dec
ret
push
pop
mov
inc
popa
sub
call
mov
lds
cmp
cmp
dec
jecxz
imull
mov
and
or
repnz
jno
clc
lcall
movsl
shl
neg
out
sbb
jns
xlat
mov
mov
mov
push
in
mov
dec
jg
test
in
pop
mov
push
and
mov
add
inc
xor
test
add
sbb
adcl
mov
push
inc
mov
ficoms
cltd
aas
outsb
push
dec
cmc
and
pusha
sub
push
push
sbb
rcr
clc
dec
test
jle
filds
testb
mov
mov
jnp
inc
leave
or
mov
pop
out
xchg
and
sub
addb
or
sub
outsl
mov
sbb
sub
das
popw
mov
lock
push
movl
pop
iret
sbb
jnp
std
fwait
pop
in
fs
adc
push
idivb
sub
lock
jecxz
and
imul
sbbl
xchg
pop
cmp
push
insb
rorl
and
lahf
sahf
sub
pop
cmp
jmp
jnp
sub
test
and
inc
add
lcall
jbe
test
mov
lods
andl
cmpsl
pop
mov
pusha
or
icebp
sbb
sbb
rorb
add
xchg
fimuls
add
shlb
dec
je
es
repnz
xor
imul
pop
jns
inc
xchg
imul
mov
add
mov
mov
loop
out
adc
dec
nop
bnd
add
xor
push
adc
repz
adc
pop
jp
arpl
int
lcall
xchg
xor
pop
and
fdivs
sbb
sbb
je
inc
sbb
mov
ret
test
ret
cmpb
push
sbb
sti
or
pop
testb
pop
dec
imul
cmpsb
pop
mov
jne
adc
mov
addb
mov
and
xchg
push
adc
sub
mov
add
and
pop
mov
ficoms
arpl
scas
pushl
shlb
jmp
xor
ljmp
xchg
xor
mov
clc
push
mov
fsubs
push
sbb
js
es
push
mov
enter
loope
push
adcb
push
dec
jl
fwait
cmpsl
adc
inc
push
mov
das
jge
mov
pop
inc
fadds
inc
inc
jns
and
pop
jne
xchg
sbb
inc
dec
inc
jnp
mov
lock
pop
adc
pop
pop
adc
lret
or
push
ret
or
leave
lock
sub
dec
mov
push
mov
pop
stos
fsubrl
mov
into
cs
adc
dec
adc
xor
push
jge
stc
add
bnd
dec
divb
pop
stos
xchg
int3
dec
lahf
jns
sbb
pop
cmp
insl
mov
lods
inc
cltd
and
lahf
xor
iret
stc
movsb
les
cmp
andl
cld
jle
inc
sbb
add
daa
push
sub
les
jp
cmpsb
pop
dec
mov
out
dec
pushf
loopne
pop
jnp
sbb
int
aaa
popf
mov
mov
and
dec
sub
mov
dec
mov
jne
cmp
daa
jmp
mov
pop
xor
stos
shr
repz
pop
divb
ds
add
fists
inc
mov
jecxz
enter
sbb
mov
sub
hlt
mov
push
xor
lcall
psubb
push
pop
enter
jne
mov
mov
and
dec
push
data16
fcomi
sbb
add
lret
lcall
lds
push
cmp
jmp
inc
push
sub
mov
in
shl
inc
adc
enter
mov
idivb
clc
je
pushl
cmp
stos
sub
add
repnz
mov
sub
mov
mov
cmpsl
jnp
or
xchg
sbb
mov
mov
inc
add
xchg
mov
or
enter
jnp
sbb
dec
int
mov
notl
adc
int
stc
clc
shr
mov
loopne
inc
sbb
jae
mov
jecxz
add
sub
in
mulb
rcrl
rcrb
into
pop
xor
lret
or
dec
push
jmp
jno
add
mov
xchg
enter
fs
add
ljmp
dec
sub
dec
testl
pop
rcl
xchg
mov
xchg
test
pop
repz
mov
out
test
mov
outsl
std
pop
pop
or
mov
leave
loop
cmp
call
inc
pusha
sbb
or
push
add
dec
cmp
loope
movsl
ret
add
xchg
mov
lahf
out
or
clc
jb
sbb
push
push
cltd
enter
mov
adc
jmp
repnz
mov
adc
cmpb
adc
mov
xchg
mov
sahf
sarl
loopne
sti
mov
js
jns
sti
mov
repz
popa
mov
adc
or
cltd
jo
pop
adc
pop
xor
imul
sbb
push
sub
shll
mov
sbb
dec
push
test
jae
push
call
fisubl
ljmp
sbb
js
scas
mov
mov
or
lods
jle
jp
jecxz
mov
mov
mov
push
fdivrs
into
scas
lahf
mov
inc
sti
and
nop
inc
orl
xlat
or
add
xor
nop
mov
xor
fbstp
out
push
test
sub
and
jae
inc
push
xchg
out
call
adc
push
int3
pop
sub
cwtl
push
or
sub
mov
daa
popa
mov
cltd
sahf
push
test
into
pop
stos
rcr
xchg
ret
iret
dec
pop
mov
popf
idivl
adc
or
sti
mov
dec
or
adc
cmc
mov
cmp
insl
cwtl
mov
aad
inc
lds
mov
inc
arpl
push
es
push
inc
inc
inc
fst
out
sbb
and
rcrl
cmp
push
in
push
jl
sbb
push
jo
push
inc
lcall
rorl
xchg
mov
sbb
jp
dec
pusha
sbb
les
mov
insl
jg
mov
movsb
push
stc
inc
sti
sub
fcoms
xchg
push
dec
add
mov
xor
sbb
sbb
add
mov
pop
fimuls
and
pop
jne
xchg
out
push
mov
jb
rclb
xchg
enter
adcl
inc
pushf
aas
push
fsubrs
mulb
sbb
lods
xchg
cld
stos
ljmp
mov
or
cmc
lret
hlt
mov
mov
cltd
mov
xchg
ds
dec
push
xlat
cmp
ret
das
sub
mov
inc
mov
sub
lcall
lahf
xor
ljmp
stos
stc
dec
sbb
xchg
in
movsl
jge
or
or
lds
imul
xchg
jb
sbb
mov
aam
mov
mov
sbb
scas
ret
cmpl
popf
lahf
adc
sbb
xchg
bound
imull
mov
aam
pop
repnz
push
pop
dec
and
push
xchg
rclb
in
mov
or
int3
mov
jge
loopne
xchg
pop
cli
mov
in
cmp
dec
dec
mov
daa
sub
test
mov
pop
pop
pop
test
cmp
and
and
out
sbb
in
lods
es
sub
sbb
test
lcall
bound
cwtl
jmp
and
push
dec
iret
push
stos
lods
mov
xor
lret
fmull
inc
and
pushf
xchg
xor
cwtl
dec
pop
pop
push
xchg
pop
sub
dec
addr16
std
repz
mov
dec
std
mov
pop
scas
dec
push
xchg
mov
cli
mov
in
pusha
jmp
popf
in
in
lock
lods
scas
loope
out
js
mov
adc
popl
rclb
rol
rcrl
jb
mov
jns
push
inc
xchg
leave
movsb
inc
jne
add
pusha
jo
fsts
pop
test
fisubs
add
cltd
push
adc
dec
sbb
sub
fdivrs
inc
inc
xor
mov
int
pop
jl
pop
xlat
inc
sbb
jne
mov
mov
mov
movsl
ret
aaa
lods
dec
pop
adc
mov
pop
adc
mov
fs
jno
mov
sbb
outsb
mov
test
test
sbb
in
clc
movl
xor
sub
jge
push
pop
imul
stos
or
stos
pusha
gs
fcoml
push
int3
fisttpll
sbb
cmp
ja
repnz
out
mov
andl
lds
cltd
ficompl
sbb
dec
int
dec
cmp
and
ja
and
jae
inc
jge
inc
push
int
int
gs
mov
mov
std
jp
inc
bound
jle
xchg
xchg
jmp
cmpsb
in
xchg
dec
pop
mov
sub
fistps
iret
push
sahf
xor
mov
imul
inc
push
adc
pop
cmp
lcall
adc
rol
xchg
fimull
imul
ss
dec
xor
pop
leave
std
or
lahf
mov
sahf
sbb
scas
out
mov
fs
pushf
or
fistps
inc
sbb
cmp
stos
loop
adc
test
jl
rorl
sbb
add
das
ret
pop
pushf
sub
cmp
ret
pushf
mov
mov
cld
test
inc
pop
inc
xchg
loopne
jg
filds
mov
push
push
mov
dec
pop
std
lock
out
xchg
das
pop
push
out
mov
xchg
in
jnp
push
jns
xrelease
or
cmpsb
std
icebp
sub
push
ljmp
mov
mov
cmpsl
mov
fdivrs
jbe
lods
add
push
push
int
repz
orl
pop
xlat
bound
shlb
rcrb
adc
adc
ffreep
push
add
and
leave
into
enter
bound
in
jns
ror
pop
lret
inc
push
push
out
rcll
pop
push
bound
adc
cmp
arpl
and
push
divb
lock
out
aas
cmpb
mov
pop
mov
jbe
cwtl
movsb
mov
clc
test
dec
frstor
scas
xor
and
ret
fistpl
hlt
pushf
mov
aaa
outsb
lret
pop
cmp
cwtl
add
jecxz
lahf
je
sbb
pop
rcrl
cmp
sub
daa
push
inc
or
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
adc
shl
mov
lahf
inc
fcomps
inc
sub
xor
and
js
mov
daa
jp
or
xor
or
cmc
fsts
out
mov
rcr
pop
and
mov
lock
lock
adc
pop
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
xchg
test
lcall
mov
pop
test
xor
pop
pusha
xchg
bound
js
test
cmc
or
dec
cwtl
xchg
xor
inc
std
rolb
cmpsl
or
inc
adc
dec
fcos
iret
out
cmc
icebp
cld
sti
add
cmpsl
mov
sbb
cli
mov
lea
hlt
js
orb
pop
lret
je
mov
fdivrs
faddl
sub
iret
cmp
push
sbb
xchg
or
dec
aam
sub
or
push
sbb
and
lret
jecxz
inc
inc
sbb
inc
sub
add
rcrl
mov
fiadds
sbb
sub
sub
add
and
fildll
mov
pop
mov
imul
insb
push
cmp
jl
jmp
and
mov
jnp
adc
add
add
addr16
rcrl
loope
cmpsb
fstl
mov
scas
std
stc
in
scas
mov
inc
xlat
pushf
adc
and
pusha
adc
inc
mov
clc
jo
imul
or
mov
stos
adc
sahf
xor
pop
mov
fcoms
mov
and
mov
xchg
push
out
fmul
mov
push
sub
mov
lret
and
arpl
mov
xor
cmp
sub
sti
sbb
stos
jmp
repz
fistps
dec
lahf
lret
jecxz
movsl
mov
mov
lock
lds
dec
mov
lret
mov
sbb
clc
fistps
fcoml
rorl
or
scas
mov
dec
lcall
sbbl
and
cli
test
push
xchg
ljmp
outsb
les
inc
fstp
movsb
push
mov
xor
push
and
mov
pop
scas
cwtl
sub
js
jg
mov
ss
mov
or
push
jb
add
xchg
xchg
fsubs
sbb
mov
mov
cltd
sbb
in
mov
out
push
mov
xor
out
lcall
enter
or
xor
mov
rcll
cmpb
dec
lret
nop
dec
daa
daa
fstpt
sub
fisubrs
in
dec
pushf
xlat
ror
loopne
inc
adcb
push
pop
add
pop
stos
popa
iret
rorb
push
enter
sbb
inc
cmp
jle
pop
push
xor
inc
add
mov
lahf
add
cmp
xchg
push
dec
mov
xor
fsubs
es
push
shll
and
je
adc
xchg
mov
and
mov
fsubrl
mov
xchg
sbb
mov
cmp
push
jne
outsl
loop
mov
push
stc
or
bound
or
sbbl
sub
addl
sub
jmp
popf
sarl
pop
mov
push
mov
in
jbe
sbb
mov
sub
cmpsl
mov
andb
cwtl
dec
inc
push
xchg
imul
jecxz
xchg
xor
or
sub
dec
sahf
xchg
push
pop
cmp
dec
leave
mov
stc
aad
pop
ret
loopne
rorl
cmpsl
jne
xchg
lods
nop
loopne
mov
cmp
mov
lret
jg
fs
adc
sarb
arpl
push
mov
push
dec
mov
and
out
mov
mov
sub
out
xchg
dec
les
adc
ljmp
mov
daa
fcmovne
shlb
adc
and
and
cmp
mov
lret
leave
mov
bound
xchg
push
mov
je
out
idivl
lret
std
sbb
push
pop
or
sti
stc
mov
fucomip
push
test
sub
out
inc
fldl
int
jmp
mov
mov
outsb
aaa
popf
mov
pop
add
jecxz
adc
mov
lret
cmpl
dec
pop
adc
adc
arpl
cmp
sub
and
repz
int3
lret
sbb
out
mov
enter
loop
mov
roll
fsubrl
sbb
movsl
mov
cwtl
jmp
nop
xor
cmp
push
in
sbb
cld
mov
idivl
mov
popf
arpl
add
sub
add
sbb
addb
xor
popf
fdivl
add
mov
mov
ret
add
mov
push
xchg
pushf
in
push
xchg
mov
stos
aas
lock
adc
jo
das
in
push
cmp
sti
lahf
movsl
test
pop
test
mov
ja
fbld
mov
mov
lea
imul
adc
jle
cmp
stos
mov
test
mov
sub
jb
mov
jbe
mov
mov
in
int
fidivrl
loopne
test
scas
push
pop
adc
cmpsl
mov
xorl
sbb
scas
std
pop
pop
stos
fwait
int
inc
sbb
xchg
sbb
mov
pushf
jmp
jp
stos
les
push
cmp
loope
scas
mov
xor
pushf
mov
pop
loope
cmpsl
jmp
jecxz
mov
sbb
sub
shlb
push
lock
test
xchg
fisttpl
fidivs
fnstenv
mov
repnz
call
mov
enter
inc
sbb
add
popl
xor
cwtl
dec
cmp
mov
movsl
ret
mov
mov
adc
lret
mov
jne
lahf
in
cld
mov
test
xor
test
insb
fnsave
push
pop
rorl
int
imul
sahf
dec
je
xor
mov
lods
mov
inc
mov
pop
pop
pop
jmp
clc
ds
mov
clc
dec
or
insb
push
repnz
lock
push
iret
inc
xor
jmp
and
jno
les
push
test
jb
lcall
fucomp
push
dec
sbb
stos
push
cmp
test
xchg
jnp
sbb
shl
cmp
xor
mov
jns
mov
shl
adc
cmp
lahf
cmp
test
or
loop
std
rcr
inc
stc
xor
add
fldl
mov
cli
testb
repnz
out
jle
fistps
jno
dec
push
fimuls
std
inc
into
cmpsb
iret
xchg
fildll
fisubrs
insb
jb
push
fdivp
push
int
push
and
jle
inc
movsb
cs
push
out
push
aad
arpl
adc
cmp
in
lods
call
sub
xor
and
cmpsl
cmp
loope
push
iret
ret
mov
pop
adc
xchg
inc
sbb
mov
lcall
or
or
xchg
jno
test
sbb
jg
stos
push
mov
dec
or
mov
xor
xchg
lret
jge
test
sbb
in
cwtl
pushf
cmp
insl
mov
xchg
ds
sbb
push
cmp
stos
mov
pop
push
into
repnz
mov
test
xor
in
mov
nop
push
mov
fbstp
ljmp
daa
xlat
in
pop
push
loop
mov
jmp
sbb
jl
pop
stc
mov
std
out
push
pop
lods
xlat
adc
ret
enter
jb
jnp
dec
repz
lea
mov
lret
pop
pushf
loope
test
and
andl
testb
aas
fwait
insb
dec
mov
or
jle
jecxz
aad
mov
je
or
pusha
je
rcll
jmp
or
mov
and
pop
dec
mov
cwtl
int3
ja
mov
sub
cmpsl
adcb
xor
pop
cmc
fsubrl
scas
and
pop
int3
and
shrb
inc
mov
int3
mov
popf
lret
arpl
mov
inc
mov
fst
dec
int3
inc
scas
push
pop
jbe
insl
cmpsl
push
ja
mov
mov
pop
pusha
clc
cmp
movsb
push
vpxor
mov
dec
pusha
push
jg
sbb
pop
push
jbe
popl
xor
in
lods
push
jle
push
lods
adcl
xchg
mov
daa
xor
icebp
iret
dec
push
leave
imul
push
cmp
jb
repnz
xor
pop
or
and
insb
sti
mov
mov
xor
mov
cmp
inc
xor
mov
sti
pop
push
mov
ret
loopne
rorl
sub
nop
loopne
mov
cmp
xor
dec
ret
je
mov
mov
pinsrw
arpl
xchg
push
nop
ljmp
mov
pushf
pop
and
inc
mov
into
mov
and
and
push
cld
ss
pop
mov
ds
dec
cmpsl
sub
in
push
mov
jae
dec
or
js
cltd
lods
jbe
inc
fnstcw
xchg
fs
jp
mov
loop
jge
pop
fists
cmp
cmp
mov
jmp
out
frstor
in
mov
test
flds
jbe
inc
sbb
pop
mov
lea
test
mov
mov
enter
adc
mov
aas
aas
mov
sbb
or
mov
inc
add
aaa
shrb
xlat
mov
sbb
fisubrs
cmc
aam
sahf
push
mov
push
lock
ja
inc
add
arpl
cld
sbb
and
and
dec
mov
hlt
or
push
dec
jb
clc
mov
push
adc
mov
out
stos
cmp
repz
mov
push
in
icebp
mov
into
xchg
subb
testb
push
aam
pop
sbb
cltd
xchg
pushf
rcrb
imull
xchg
cmp
movsb
push
or
xor
adc
push
sbb
je
pop
clc
mov
jo
incl
jle
divl
dec
sbb
les
pop
ficoms
inc
loopne
cmp
lcall
mov
cmp
mov
pop
out
shlb
mov
fsubl
lret
adc
mov
mov
xchg
jmp
lcall
out
aas
jmp
mov
cmp
mov
cli
cmp
mov
dec
cmpsb
push
pop
add
add
cltd
push
lock
jecxz
add
imul
cmp
jg
pop
pop
push
lahf
push
fwait
mov
adc
adc
pop
mov
ja
stos
jmp
mov
je
fnstenv
test
pop
sbb
daa
sub
push
mov
sub
sbb
cmp
or
cltd
lods
jae
aam
push
ffreep
out
jns
inc
xchg
mov
sbb
xor
push
xlat
xlat
cmp
aas
ret
cs
inc
push
mov
imull
ret
pop
lods
mov
pop
xor
push
sub
pop
inc
loopne
in
jl
sbb
scas
push
cltd
enter
jae
pushf
sbb
and
rorb
sub
jl
dec
mov
cwtl
jns
cmp
xlat
adc
dec
mov
mov
test
je
cld
sbb
cmp
and
lds
jl
pop
cltd
push
out
int
sbb
inc
sub
rcrl
repnz
ja
pop
cmp
dec
dec
iret
dec
notl
aaa
stos
inc
sub
add
and
mov
push
push
lds
and
mov
movsl
xor
sbb
push
fcomps
adc
sbb
scas
pop
nop
popa
sub
mov
pop
mov
les
js
and
fsubl
std
das
nop
pop
in
jl
scas
push
fcompl
sub
shlb
pop
jle
addr16
pop
xchg
imul
lods
dec
fsts
pop
pop
mov
arpl
popf
call
cltd
mov
mov
add
add
mov
dec
roll
popf
adc
xchg
lods
sbb
in
dec
and
or
add
sbb
dec
sarl
mov
xor
push
xlat
bound
adc
or
push
pop
xchg
fldl
lcall
iret
mov
sti
cmp
movsl
mov
push
mov
stos
mov
inc
sbb
mov
mov
mov
xchg
jg
jg
fwait
mov
popf
lret
xchg
xchg
mov
inc
sub
mov
and
push
mov
push
ja
mov
insb
cmovge
mov
pop
shll
jne
mov
aad
lcall
sub
sbb
fwait
push
mov
out
popf
orl
scas
rcrb
imul
cmp
and
push
ljmp
sbb
dec
pop
push
jne
dec
jp
movsl
rcrl
mov
arpl
sbb
sti
push
xchg
leave
push
mov
xchg
jg
jl
in
ljmp
adc
hlt
sbb
testl
aaa
add
inc
loopne,pt
jns
pop
add
clc
and
lret
test
lods
jae
enter
lret
mov
cmpsb
hlt
dec
push
adc
jns
xor
mov
or
fwait
sbb
lcall
insl
outsl
mov
pop
jle
movsb
aas
xor
inc
iret
push
mov
shrl
sub
repnz
push
mov
jnp
mov
sti
mov
jne
lea
imul
arpl
fadds
mov
ret
inc
push
rorb
dec
lret
and
cld
mov
inc
sbb
enter
or
pusha
xor
dec
mov
xor
mov
sub
fnstenv
pop
jb
cltd
xchg
data16
dec
xchg
ss
icebp
pop
adc
dec
dec
jno
call
mov
out
push
sbb
les
jmp
adc
sahf
xchg
push
and
xchg
mov
add
test
xchg
jle
imul
lea
jmp
mov
stos
jne
stc
popa
int
inc
mov
iret
pop
adc
push
inc
pop
das
push
fwait
sub
fwait
cmp
cwtl
mov
call
repz
jnp
sub
pop
dec
add
dec
repz
or
and
sbb
add
jg
mov
sub
dec
stos
inc
in
xchg
cmp
push
cmp
shlb
pusha
mov
lock
sub
in
jp
xor
xchg
pop
pop
sarb
xor
ret
jg
push
ret
mov
fists
push
stc
lcall
inc
mov
jmp
jb
mov
and
out
pop
std
push
sub
mov
add
ja
xor
ret
pop
pop
xor
fadds
lea
dec
xchg
ret
ds
cmp
jg
imull
jnp
dec
cltd
pop
iret
add
mov
leave
inc
mov
push
add
movsl
mov
mov
fisubrl
int
lret
fs
push
pop
das
lret
add
sub
sub
mov
test
lods
mov
push
in
dec
push
aam
push
dec
xor
dec
outsl
ljmp
mov
and
bound
push
mov
xchg
pop
neg
pop
xchg
dec
jnp
or
cmp
test
lret
and
mov
hlt
jl
js
mov
push
sbb
xchg
std
decl
aaa
sub
js
stc
mov
mov
repnz
notl
cmpsb
dec
push
loop
mov
jb
popa
int3
pop
pop
aad
mov
sbb
sbb
insb
aaa
jp
dec
daa
or
xchg
js
dec
daa
jb
lea
mov
into
pop
stos
shrb
inc
mov
popf
inc
push
add
jmp
jge
addb
sub
dec
push
adc
outsb
cmp
rcll
stc
cld
jg
leave
mov
fsubrl
popa
xadd
popf
clc
pop
xchg
push
nop
ljmp
xor
push
cs
inc
add
fs
and
push
cmp
pop
xor
jbe
dec
mov
in
xchg
dec
push
jl
mov
gs
aad
and
and
fldcw
inc
fidivs
fs
mov
fwait
leave
in
push
aaa
xchg
rclb
jnp
clc
js
or
rclb
lahf
sahf
lock
xchg
inc
mov
sub
jmp
dec
jb
xchg
mov
popa
ss
loopne
jo
lock
push
push
pop
fwait
lea
mov
bound
out
or
and
add
cmp
dec
sahf
xchg
push
pop
xor
test
add
lret
loopne
inc
adcb
ds
add
pop
stos
popa
iret
rorb
push
enter
or
fnstcw
mov
enter
outsl
aaa
movl
sbb
test
mov
adc
inc
fdivl
inc
and
xor
mov
subb
mov
mov
and
xorb
sub
pop
stos
push
xchg
jbe
scas
mov
flds
mov
neg
sbb
sub
jecxz
sahf
pushf
sbb
mov
mov
pop
div
pop
push
loopne
cs
rclb
inc
rcr
sarl
aam
ret
imulb
pop
lcall
movsb
inc
inc
sahf
xchg
fsubl
xchg
pop
pop
je
cmp
xchg
sbb
movsb
add
js
dec
mov
push
inc
xor
pop
sysret
imul
dec
cmpsl
dec
mov
pop
push
cs
pop
shrl
mov
mov
add
iret
xchg
ficoml
cmovo
ret
in
add
mov
ss
adc
cmpb
pop
push
mov
cmp
outsl
sub
stc
lret
push
jae
shrl
xchg
pusha
xlat
data16
vunpckhpd
lods
mov
jae
aam
dec
push
in
or
xchg
das
test
jge
lret
push
pop
lock
aad
push
dec
out
cmp
lret
pop
xchg
dec
push
neg
fwait
adc
or
fucomi
repnz
jns
jb
fs
xor
pop
fmull
add
mov
dec
mov
icebp
add
mov
in
sarb
push
imul
addr16
fnstenv
dec
sahf
mov
mov
xchg
aad
push
sub
fs
aas
incb
mov
mov
in
lahf
orb
add
push
gs
loop
push
aam
aas
push
sbb
inc
sbb
mov
enter
mov
hlt
nop
hlt
iret
pop
mov
shrb
rol
or
jg
adc
in
cmpsb
ror
push
inc
std
cmpsb
mov
dec
or
push
in
mov
repnz
movsl
mov
xchg
cmpsb
xor
add
aam
adc
push
inc
lcall
out
std
add
loope
dec
fimuls
adc
or
add
in
stos
mov
aaa
sbb
std
jle
push
sbb
add
mov
dec
sbb
insb
sbb
or
push
call
sub
pushf
xor
xchg
xchg
pop
hlt
push
and
add
in
addr16
add
inc
sbb
aam
iret
mov
imul
mov
jmp
testl
test
int
sub
jns
xchg
lcall
inc
divl
lret
or
add
adc
push
enter
mov
xchg
add
or
push
cwtl
lret
aas
repnz
xchg
jecxz
sbb
mov
xchg
dec
mov
movsb
push
out
cmp
mov
std
cmpsl
mov
dec
xchg
xchg
in
inc
aas
xchg
mov
jb
xor
lock
les
xor
lahf
jbe
mov
test
push
cmp
in
bnd
cld
mov
fs
out
add
inc
push
sar
jo
nop
pop
pop
hlt
xor
jo
xchg
sbb
outsb
aas
push
into
and
add
dec
pop
in
jo
dec
mov
int
push
jecxz
xor
mov
mov
mov
mov
jb
jle
adc
dec
adc
rcrb
fisubrl
inc
xor
inc
rcll
jmp
push
ds
jecxz
inc
rcl
in
sub
jge
pop
mov
or
adcl
cmp
movl
sbb
data16
dec
mov
mov
xor
es
add
fs
and
test
mov
pusha
sbb
idivb
das
xchg
stos
jge
lret
push
repz
inc
mov
stc
sbb
jecxz
mov
mov
sub
scas
mov
enter
repz
jno
in
mov
icebp
inc
loopne
cs
jae
mov
sub
js
fnstenv
out
out
push
push
lods
daa
inc
ljmp
test
push
pop
push
call
or
xchg
jge
insb
aaa
bound
fisubs
dec
int
out
dec
gs
into
xor
js
mov
imul
insb
les
xor
ret
add
mov
iret
pop
fdivrs
sbb
pop
pop
xchg
sub
jg
bound
pop
xchg
cld
jg
adc
xor
dec
dec
pushf
dec
xor
arpl
pop
sbb
nop
dec
xor
or
lahf
fldt
rcll
insb
fcomps
ljmp
mov
and
bound
push
mov
xchg
pop
ja
pop
xchg
dec
mov
mov
mov
scas
fs
loope
xchg
and
mov
js
inc
cmp
fcomip
jl
adc
das
idiv
addps
sub
movsl
cmp
mov
in
pop
repnz
notl
cmpsb
push
push
loop
mov
je
add
xchg
inc
xchg
pop
push
hlt
pop
das
cmc
sbb
mov
adc
aam
dec
and
inc
mov
jle
lods
xor
mov
fsubs
insl
jecxz
mov
repz
sti
fisttps
inc
test
sbb
add
sub
mov
inc
add
sti
cmc
cld
sbb
mov
rclb
mov
mov
sub
push
dec
push
nop
ljmp
mov
mov
adcl
add
fs
and
push
cmp
negl
mov
cmc
sbb
in
xchg
dec
shrl
jbe
gs
fstl
lcall
dec
dec
mov
inc
jge
inc
in
push
or
sub
mov
aaa
jbe
popa
sub
clc
arpl
push
dec
dec
add
mov
stc
jno
pop
pop
les
rclb
inc
lcall
das
mov
sbb
mov
or
pop
adc
inc
mov
cltd
pop
cmpl
mov
mov
dec
push
aam
in
mov
int
jge
ds
lret
adc
rcrb
add
or
mov
push
add
rcrl
xchg
cmpsb
or
add
adcl
or
xor
xorl
shll
rcrl
dec
call
and
lret
sbb
xchg
sahf
jecxz
add
insl
mov
add
mov
scas
jne
sarl
rorl
xchg
fistl
fwait
cmp
or
jecxz
fwait
push
mov
cltd
int3
scas
pop
mov
or
stos
int
repz
adc
stos
fwait
mov
adc
push
push
mov
dec
pop
std
lock
out
xchg
das
pop
push
out
mov
xchg
in
jnp
push
jns
xrelease
or
cmpsb
std
icebp
sub
push
ljmp
mov
mov
cmpsl
mov
fdivrs
jbe
lods
add
pop
lods
adc
fildl
les
adc
jae
mov
mov
in
stc
mov
hlt
cmp
ret
shr
or
addl
leave
fsubl
pinsrw
arpl
dec
xor
rorl
push
mov
das
popf
inc
sahf
or
sbb
dec
pop
jno
inc
gs
insl
shrl
ds
sbb
xchg
lret
lret
sbb
mov
bound
pop
lahf
lcall
pop
pop
pusha
mov
mov
or
jl
js
test
idivl
lds
stos
or
jmp
dec
incl
inc
cwtl
inc
stos
adc
ljmp
popf
jo
mov
cmp
jecxz
and
movl
cli
xchg
and
iret
enter
mov
int3
jge
push
and
in
cmp
ret
rclb
inc
out
adc
add
pop
inc
pusha
lods
in
mov
sahf
jp
insl
xchg
dec
pushf
mov
pop
xchg
lock
add
dec
lds
add
movsl
mov
scas
mov
cli
pop
stos
fsubrl
sbb
sub
adc
mov
mov
scas
dec
pop
jno
or
xchg
push
fistl
lret
push
mov
ja
dec
inc
lcall
cmp
lahf
fstpl
loope
sahf
cmp
xchg
sub
fs
filds
jge
cmpsl
push
cmp
lock
mov
pop
cmp
jo
rcrb
or
adc
scas
mov
adc
inc
ljmp
fnstenv
sub
aad
push
mov
lahf
pop
filds
add
imul
cmp
out
mov
repz
xchg
sub
popa
dec
xchg
mov
xchg
test
divl
mov
sbb
or
push
fbstp
shr
or
sbb
cmp
hlt
clc
clc
mov
dec
xchg
lret
jecxz
gs
adcb
adc
jl
cld
jg
imulb
push
adc
jge
lret
pop
shll
or
outsl
sub
pusha
adc
pusha
mov
mov
push
dec
xor
fmulp
addr16
lret
orl
icebp
sbb
insl
ret
gs
je
in
stos
cs
cmp
push
mov
dec
jns
insb
push
sub
sub
jbe
mov
loop
repnz
jg
rcrl
inc
cltd
repz
into
adc
jns
pop
pop
inc
add
pop
fsubr
fstps
jle
test
push
aas
xchg
ret
pusha
test
fildll
push
sbb
adc
ret
jb
arpl
pop
inc
cltd
enter
or
pusha
cmp
mov
test
imul
mov
pop
pop
push
mov
call
clc
sbb
pop
mov
lea
xor
call
inc
xor
lods
mov
iret
mov
sbb
in
jns
ret
and
dec
mov
hlt
cmp
dec
jb
dec
cwtl
push
sub
inc
adc
into
sub
sbb
out
into
cmp
mov
sub
and
inc
cs
call
sub
std
mov
push
cs
lcall
sti
push
mov
jnp
icebp
lods
mov
jmp
push
mov
mov
stc
adc
inc
sbb
or
cld
js
mov
je
addb
test
pop
in
mov
test
rcll
cmp
ja
gs
jmp
jb
addr16
adc
mov
popf
mov
inc
fcoml
mov
rcll
cmp
sub
mov
aaa
mov
dec
sahf
xchg
push
pop
cmp
test
add
inc
inc
mov
add
xchg
clc
jl
pop
jl
or
mov
sbb
add
push
dec
or
add
gs
nop
mov
ficoms
stos
ljmp
xchg
aaa
addr16
push
pop
sub
lds
mov
mov
mov
jb
pushf
dec
pop
clc
sub
bound
dec
les
jno
je
mov
in
in
jae
dec
push
jge
xchg
stos
inc
pop
cli
mov
fcompl
push
and
lahf
inc
out
mov
xchg
mov
pop
pop
in
jnp
inc
adc
outsl
xlat
in
cmp
les
mov
aam
repnz
mov
dec
cmpb
adc
clc
xchg
inc
xorl
sbb
cmp
imul
movb
jmp
cmp
test
push
loope
cmpl
add
sub
mov
rcrb
stos
imul
lea
cli
aaa
test
in
sub
idiv
mov
mov
hlt
daa
push
sahf
fcomps
leave
fsubrl
adc
ret
sbb
cwtl
mov
xor
jno
lds
cmp
xchg
fucomp
jae
push
stc
push
xlat
and
add
jno
mov
int3
mov
and
push
jecxz
or
movsl
add
sti
add
dec
push
inc
fdivrs
mov
mov
xor
out
jb
jns
add
into
sbb
js
push
cmp
mov
add
cmpsl
inc
mov
push
fcomp
add
mov
inc
add
test
jl
push
mov
js
mov
enter
adcl
add
sti
sub
jmp
lret
imul
fwait
or
in
or
xchg
mov
fldl
jl
inc
pop
shll
rorb
roll
pusha
arpl
mov
aaa
pop
push
push
into
addr16
and
inc
hlt
inc
mov
push
cmp
jne
cmpsl
mov
mov
or
in
fildll
fldcw
xor
jge
hlt
dec
popf
lret
cltd
push
aam
sbb
mov
push
xchg
xchg
lds
xchg
inc
jl
add
and
xor
mov
jno
aad
aad
push
xchg
js
push
pop
sti
fdivrs
push
ret
xor
je
fstl
inc
add
push
test
lcall
dec
out
mov
andl
or
movsl
call
decb
fs
mov
out
sbb
xchg
inc
and
in
add
out
mov
shll
imull
cltd
push
or
inc
inc
aad
mov
loopne
push
adc
add
pop
add
cmc
lret
clc
push
pop
mov
pop
cmp
cld
push
inc
pop
ret
cld
xorb
adc
or
aam
mov
push
aad
dec
lret
pop
push
fldenv
pop
sbb
mov
mov
mov
xchg
dec
pop
xchg
les
xchg
sbb
adc
into
test
icebp
stos
push
negb
fwait
stos
dec
fs
pop
add
add
and
lahf
xor
test
std
lret
arpl
sbb
enter
mov
cmp
sti
lods
repnz
adc
ds
lret
mov
or
xchg
mov
cmp
xlat
mov
mov
jb
fnstenv
mov
push
into
bound
out
mov
aaa
sbb
int
inc
xchg
xchg
int
sbb
int
dec
test
xchg
dec
inc
xchg
dec
mov
adc
or
hlt
inc
popa
mov
iret
push
mov
or
pop
xor
lock
add
jmp
mov
inc
int
dec
leave
fsubrl
pop
icebp
cmpsb
add
adc
mov
lods
push
test
mov
and
cli
lret
and
push
inc
ss
pop
jo
stc
in
les
lret
xchg
mov
mov
mov
pop
sahf
aad
inc
leave
dec
pop
inc
lret
mov
fstps
push
arpl
and
lahf
pop
lret
jo
xchg
mov
fwait
out
fs
pop
lds
dec
inc
idivl
add
std
adc
xchg
jle
out
jp
cltd
js
fucomp
push
out
es
jmp
inc
out
ja
dec
lahf
jo
fcmovnu
jb
pop
lea
data16
loopne
and
and
aam
cwtl
ret
loop
hlt
mov
jle
adc
mov
movl
loope
or
dec
outsb
sub
ljmp
add
cmc
adc
inc
fdiv
cmp
xor
fwait
pop
push
push
pusha
or
sbb
xor
mov
fimuls
pop
jno
pop
jo
push
negb
mov
adc
icebp
stos
mov
cli
mov
clc
outsb
nop
jp
std
cmpsl
xchg
rcll
inc
push
sub
and
xchg
sahf
xchg
jl
fistl
sbb
mov
add
inc
fstpl
jecxz
test
insl
pop
inc
cld
imul
adc
cmp
mov
stos
mov
add
mov
rcl
adc
lcall
push
push
aam
xchg
imul
lahf
cmpsl
stos
insb
lock
cmpsb
mov
xor
sbb
push
mov
je
pop
imul
mov
mov
stc
lock
and
cmp
inc
xorl
jns
arpl
push
clc
out
fwait
inc
test
cltd
xor
jne
mov
popf
lock
dec
imul
mov
mov
sbb
add
lods
mov
lea
jg
adc
push
mov
pop
mov
push
or
mov
or
out
cmp
popf
shrl
pop
insb
push
les
stos
testl
or
imul
movsl
dec
xchg
adc
lods
mov
icebp
arpl
mov
sub
pusha
xchg
sarb
test
pop
in
jl
jnp
lret
inc
xor
xchg
and
repz
mov
mov
mov
mov
sub
iret
movsl
mov
sub
ja
int
daa
mov
aaa
mov
sbbl
add
mov
xlat
test
lret
dec
cmp
lahf
add
popf
jmp
cmp
or
cmp
shlb
mov
mov
add
adc
jecxz
cmpsl
jg
sahf
mov
xchg
mov
insb
sub
mov
cltd
cmp
mov
pop
fsubr
fwait
mov
bound
add
movsl
jge
or
faddl
leave
jno
inc
push
xchg
push
xlat
xchg
fldl
shufps
xlat
loope
or
and
mov
loope
scas
dec
fsts
imul
jle
out
decl
mov
xor
cwtl
dec
into
and
int
pop
fs
cld
xor
movsb
jno
jp
insl
lahf
outsl
mov
and
inc
repz
sahf
adc
mov
mov
jecxz
pop
and
or
adc
and
shl
mov
adc
add
int3
push
pop
pop
loop
jge
ret
push
adc
jl
fs
fcmovne
adc
inc
pop
ljmp
rcll
arpl
dec
mov
dec
and
out
lods
popf
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
ret
lods
test
int
push
mov
insl
xchg
test
fisubrl
or
cmp
ss
movsb
push
lds
mov
or
add
cmp
cmp
lds
popa
rcrb
test
shlb
add
leave
adc
sub
cwtl
or
scas
mov
and
sbb
push
jb
inc
scas
shlb
fstpt
aaa
int3
add
loop
fisttps
rcr
mov
fdivrs
mov
mov
dec
or
lret
xor
arpl
je
imul
mov
stc
cmp
pop
cmp
mov
cmc
lret
jecxz
add
stos
jne
jns
int
inc
movb
lods
lds
jo
es
push
arpl
and
push
mov
je
lds
int3
jnp
inc
mov
sbb
mov
xchg
andb
je
bound
dec
int
insl
dec
mov
ljmp
mov
shrl
gs
sbb
imul
stos
mov
jmp
insl
or
push
mov
inc
frstor
les
dec
xchg
outsl
sti
and
push
cltd
sub
push
mov
shrl
mov
mov
test
gs
rcr
test
addl
dec
inc
je
fsubs
adc
mov
cs
and
popa
mov
fst
xchg
adc
daa
popf
shr
mov
cmp
push
mov
adc
fisttps
or
jnp
sahf
out
aaa
mov
pop
dec
comiss
push
dec
xchg
mov
jae
adc
in
stos
enter
mov
jmp
and
call
arpl
pop
mov
xchg
fadds
gs
add
push
mov
xchg
xor
or
pop
xchg
fistl
fwait
cmp
out
pushf
xchg
fidivrl
push
inc
popf
adc
gs
roll
jp
fcom
je
sbb
or
mov
push
aas
std
pop
adc
in
adc
push
jl
stos
jae
cmp
mov
mov
fwait
mov
xchg
sbb
jg
xlat
push
in
aas
sbb
pop
adc
mov
mov
jns
sbb
jmp
test
roll
adc
loopne
aas
insb
dec
mov
pusha
out
int3
shl
mov
jo
or
sbb
or
sub
inc
test
jnp
test
std
arpl
ljmp
adc
inc
ss
sub
xor
jae
xchg
cmp
pop
push
mov
repz
mov
xchg
xor
inc
mov
rorb
rorl
mov
in
jl
insb
push
test
ret
cmp
push
pop
xchg
insl
sahf
jns
adc
incb
cs
sbb
inc
pushf
shl
jns
adc
fidivrs
pop
inc
fistpll
js
rorl
dec
popa
adc
andl
xor
adc
andl
jp
call
inc
enter
inc
shr
mov
pop
hlt
repz
add
sbb
fiaddl
rol
mov
dec
cmp
cmp
push
add
rol
mov
je
jle
in
aam
in
xor
leave
pop
ret
and
aaa
inc
sub
es
sbb
std
ljmp
int3
stos
stos
pop
loop
call
cwtl
or
sbb
gs
sbb
jg
lret
inc
cmp
jp
mov
mov
mov
pop
nop
insb
push
xor
cs
jle
sbb
divb
lcall
popf
test
jns
sti
sub
pop
addr16
xor
and
ficoms
lcall
fistpll
js
ror
push
imul
js
cmp
pop
mov
ficoms
ja
adc
adc
test
loop
test
movsl
cmc
hlt
pop
mov
cmp
jb
pop
call
popa
rcrb
mov
int3
jb
lea
mov
jne
lret
shl
mov
mov
fildll
sahf
sbb
jne
out
fisubrs
jo
or
mov
fwait
cs
in
lds
push
or
sbb
cli
sbb
hlt
mov
cmp
movsl
ret
xchg
cli
popf
fsubrl
rcll
pop
test
lods
ja
lds
inc
out
pop
cs
frstor
or
rcr
inc
pop
insb
lcall
out
fld1
test
push
jge
leave
fistl
sbb
pushf
dec
fs
rcrl
nop
push
xor
pusha
mov
mov
add
fwait
sbb
sti
or
in
fsubl
shlb
dec
out
rcr
xor
lcall
pop
xor
push
push
decl
rcl
pusha
jo
xchg
pop
and
cmp
bound
and
out
inc
gs
cwtl
or
dec
pop
daa
adc
sbb
jle
mov
xor
pop
sbb
jecxz
icebp
push
inc
jo
or
mov
push
insb
jne
pop
dec
aaa
pop
sub
mov
mov
gs
jne
cld
or
in
mov
mov
nop
imul
lds
mov
shrb
push
and
sarl
pushf
pushf
dec
data16
ja
pop
lea
add
pop
xchg
and
lcall
cltd
movsb
push
jo
push
fs
inc
movsb
lret
or
and
push
xchg
jae
aam
push
dec
pop
push
inc
sub
fwait
jge
and
sub
fildl
sbb
xchg
mov
ja
add
add
loop
push
sbb
mov
pop
mov
imul
sahf
dec
inc
flds
jg
jl
mov
insb
pushf
hlt
test
xchg
fdivrs
in
popa
dec
pusha
das
or
addr16
mov
stos
lods
dec
jecxz
shrb
lcall
sbb
out
pop
stos
cmp
dec
cmc
mov
lret
pop
imul
mov
lds
popa
or
rorb
sbb
sub
and
mov
ds
hlt
dec
sub
jmp
push
mov
lcall
mov
and
adc
push
dec
daa
xchg
stos
jge
jmp
adc
lcall
cmp
lods
inc
and
mov
push
in
aad
push
mov
inc
mov
sbb
cli
jle
inc
sbb
add
out
add
inc
adc
mull
pop
call
sbb
pop
cmp
outsl
lea
fwait
lea
fcmovu
xor
mov
xchg
mov
and
xor
aas
adc
inc
dec
xchg
dec
rep
mov
jo
xor
es
push
mov
mov
jg
jne
enter
in
fucomip
push
negl
inc
test
mov
rcll
lds
mov
je
data16
ds
sub
push
cmp
das
mov
hlt
test
mov
lahf
cld
repnz
xlat
lcall
mov
insl
mov
stos
mov
clc
jl
das
jne
or
dec
imul
cwtl
jne
jl
repz
jge
sbb
push
movl
scas
pushl
mov
mov
inc
orl
jl
cwtl
add
cmp
daa
xchg
xor
sbbb
cld
ljmp
cmpsb
lahf
daa
push
in
aas
insl
out
pop
xchg
call
data16
ret
leave
inc
push
push
cld
in
mov
je
cmp
aaa
xchg
inc
imul
out
in
jecxz
cmpsb
mov
sbb
scas
lock
insl
adc
lds
dec
addl
jecxz
rorb
movsb
lret
test
les
rol
adc
mov
xchg
cli
hlt
pop
dec
fst
hlt
pop
insb
push
test
stos
push
dec
jns
mov
mov
mov
xchg
inc
and
in
jecxz
sarb
cmpsl
jno
pushf
ds
dec
cmp
lret
insl
mov
and
out
push
jnp
lcall
movb
imul
out
mov
mov
stos
int3
jge
mov
lahf
pop
cmpb
test
push
or
pop
add
out
out
daa
xchg
xor
inc
jo
and
pop
jge
ret
sbb
dec
mov
mov
cmpsl
or
adc
jb
inc
push
in
mov
adc
imul
cmc
test
loope
or
sti
fwait
int
inc
test
xchg
dec
inc
negb
popf
idivl
aas
push
stos
roll
mov
mov
or
cmp
adc
loop
call
add
and
pop
mov
dec
rcl
jbe
cwtl
mov
adc
subb
dec
pop
in
jne
leave
test
cmpsb
add
pop
mov
pushl
adc
mov
arpl
inc
or
cmp
stc
int3
sub
sbb
cwtl
sbb
imul
lods
mov
inc
jns
mov
push
aad
stos
mov
mov
xchg
sub
xor
cwtl
cmp
sub
xor
ljmp
sbb
adc
ret
enter
dec
mov
sbb
xchg
cmpsl
jb
mov
mov
mov
pusha
xor
dec
mov
enter
decb
jnp
mov
les
or
in
imul
inc
ss
jne
lock
sub
add
enter
inc
cmc
adc
call
dec
aad
jb
sbb
add
mov
xchg
sti
mov
mov
ret
adc
inc
dec
jmp
imul
mov
lret
rcrl
and
mov
mov
jno
or
outsb
test
sbb
adc
jg
mov
lret
cmp
ss
movsb
push
lds
mov
jbe
jmp
test
cmp
push
pop
jg
xor
fs
cmc
jmp
unpckhps
addl
idivb
jns
sub
out
in
mov
xchg
and
jne
cltd
xlat
insb
movsb
sub
out
mov
cmp
dec
ljmp
aaa
popf
pusha
and
mov
inc
sub
push
pushf
leave
in
adc
adc
cmpsl
jecxz
dec
mov
into
pop
mov
or
mov
mov
imul
lahf
in
push
data16
lret
adc
mov
cld
or
jne
hlt
mov
dec
and
xchg
lret
shr
jne
rcrb
pop
xchg
mov
and
pop
dec
add
lret
xchg
iret
adc
and
dec
repnz
in
xchg
push
icebp
inc
add
inc
cmp
int3
adc
inc
cmp
mov
fcoms
lret
xor
dec
sub
rcr
icebp
jns
jae
fs
nop
shlb
inc
orl
add
jle
daa
inc
sbb
sub
mov
pop
xchg
inc
pop
ret
jnp
push
mov
out
add
pop
xchg
jge
call
ja
enter
mov
andb
dec
leave
pushf
sbb
sbb
jbe
and
mov
aad
mov
jg
xchg
push
mov
sub
ss
stos
jp
mov
iret
inc
mov
fcomps
pop
fidivrl
add
mov
pushf
loope
mov
xor
test
iret
imul
pop
xor
pushf
insb
sub
push
dec
jb
sub
in
gs
xchg
pop
mov
pop
push
repz
pop
or
sub
test
fistpll
sub
aam
jno
dec
les
dec
add
pop
mov
fstl
fdivrl
jne
dec
pop
inc
xlat
ljmp
xchg
pop
and
cmp
fs
inc
cmp
pop
sub
repz
inc
mov
pop
xchg
xor
movsb
jno
fmul
insl
lahf
inc
pop
push
ret
fnsave
pop
cmpsb
jnp
data16
lock
loopne
pushl
js
test
jge
movb
repz
inc
cmc
mov
rolb
fstpt
aam
pop
inc
jmp
push
jae
cs
add
cmp
cmc
lret
test
test
ds
mov
cltd
orb
movsb
daa
and
sbb
jle
shll
rcrl
stc
cmpsl
leave
test
lret
loop
push
mov
jg
lret
inc
mov
rcrb
js
stc
mov
divb
faddl
ret
xor
add
scas
pop
or
pop
mov
imul
cmc
xor
push
and
add
cmp
cmp
rcrb
sarl
aas
sahf
ljmp
imul
js
les
seto
pop
push
ret
or
inc
inc
mov
push
pop
push
cmp
mov
sbb
dec
jb
jns
pop
jmp
cmpsb
dec
push
sbb
jnp
mov
insb
aam
or
lods
call
shl
mov
cmp
pop
movsl
fldenv
push
fistl
test
fsubr
jns
movsl
dec
aaa
mov
pop
dec
jb
fcomps
stc
cmpl
ss
lea
sub
dec
int3
movsb
push
dec
pop
inc
faddp
adc
scas
out
mov
sbbb
pop
in
lock
shrb
and
daa
mov
shll
ljmp
popf
loop
fcoms
insl
rcll
and
test
inc
add
mov
push
xchg
enter
popa
test
cmp
out
add
or
icebp
dec
mov
test
dec
shrb
mov
mov
movsb
inc
sbb
stos
sub
sbb
push
inc
out
aaa
popf
mov
stos
xor
shlb
fisttpl
xor
mov
cltd
sahf
gs
notb
shlb
inc
mov
orb
inc
xor
jmp
clc
sbb
mov
pusha
xor
lock
mov
shll
pop
shlb
loopne
pop
dec
icebp
xor
out
addr16
push
jno
inc
and
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
ret
lods
test
xchg
sub
inc
cmp
popa
adc
xchg
fnstenv
push
cmp
push
aaa
sahf
cmp
push
test
inc
mov
xlat
or
or
shl
int
dec
popf
jg
cmp
fs
pop
cmp
aad
sbb
mov
dec
dec
fnsave
out
jne
inc
cltd
jmp
and
cmp
rorl
inc
mov
pop
fwait
daa
adc
mov
push
or
mov
pop
icebp
fisubl
or
in
mov
arpl
je
pop
fdivs
jne
pop
dec
aaa
adc
cmp
mov
jnp
add
lds
repz
cwtl
add
scas
mov
shlb
xor
pop
pushf
shll
test
jae
pop
imul
jmp
insb
xchg
mov
and
and
outsl
imul
dec
jnp
pop
lahf
bound
stc
xor
pop
ja
das
xchg
inc
in
ss
aas
cmpsl
les
ljmp
filds
popl
int
dec
add
cmp
jmp
gs
inc
pushf
cli
mov
lahf
fbld
es
lods
lods
data16
jno
das
push
or
aam
dec
xorl
aas
sub
mov
and
cltd
sahf
gs
addb
or
pop
or
popf
jg
aam
lret
add
xor
loopne
jno
cmpsl
arpl
mov
dec
jo
cmp
cmp
rcll
mov
jg
mov
cwtl
movsb
nop
icebp
lock
outsl
sub
ficoml
pushf
addl
lds
mov
ljmp
out
push
dec
mov
ljmp
movsl
hlt
lcall
outsl
jae
repnz
sub
cs
mov
out
enter
enter
sti
sub
mov
sti
iret
stc
adc
bound
inc
xor
mov
lea
jnp
jno
out
in
js
sub
shll
inc
add
lret
add
icebp
xchg
ret
adc
xchg
rcr
test
adc
mov
leave
repnz
out
add
pop
pop
pop
rclb
js
adc
lret
jnp
mov
sub
gs
add
inc
jmp
sbb
repz
and
sbb
inc
xchg
incb
jno
call
mov
sar
add
aaa
hlt
sub
cmp
jecxz
and
cltd
cmp
xchg
movsl
lahf
xlat
add
sbb
adc
push
mov
stc
or
jmp
fistl
rol
adc
inc
in
das
int
clc
cwtl
mov
fists
adc
mov
mov
xor
jo
cwtl
xor
dec
movsl
insl
xchg
mov
lods
inc
movsb
lret
xchg
inc
scas
push
fadds
stos
sbbl
xchg
add
or
xchg
cwtl
jbe
xchg
cwtl
jae
cmp
jl
pop
in
jg
sahf
pushl
sbb
bound
out
pushf
sub
sahf
mov
push
loope
pop
mov
loop
xor
gs
in
or
sub
insb
mov
ss
cmp
leave
mov
into
imul
shll
pop
movsl
pop
in
fdivs
lock
shl
mov
or
rcrl
dec
call
out
int3
sub
int
or
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
fldenv
stos
lds
lock
gs
mov
inc
mov
jno
in
leave
sub
pusha
push
hlt
dec
paddusb
popf
push
pop
xlat
lahf
jb
js
rcrb
stos
arpl
les
std
incl
push
adc
mov
xlat
push
xchg
fdivrs
xchg
imul
xchg
in
mov
lods
mov
pop
mov
sbb
cld
nop
insb
aaa
pop
cmpsb
leave
adc
mov
aas
jp
xor
repz
movsl
cmc
repnz
xor
pop
or
push
lret
cmp
std
fidivl
in
jmp
jne
inc
inc
mov
popf
adc
cmp
sbb
xor
add
addb
xchg
in
push
mov
sbb
add
xchg
fwait
mov
hlt
hlt
mov
and
or
movsb
mov
xor
adc
daa
lret
add
mov
adc
jbe
xlat
adc
lds
lret
push
sub
sbb
xchg
ret
adcl
mov
fucomp
out
int
divl
std
mov
dec
fadds
jle
xchg
cmp
scas
dec
subb
jl
stos
mov
inc
pop
sahf
ret
push
jno
mov
ljmp
xor
mov
xchg
scas
jb
add
inc
hlt
jle
sub
mov
xchg
jge
dec
daa
cs
aad
cmp
pop
or
cmp
add
pop
lods
fmuls
lcall
lahf
lret
sbb
mov
adcb
sarb
jecxz
dec
jg
pop
mov
lock
in
xor
add
sti
mov
rcll
cmp
mull
adc
push
sub
and
mov
mov
imul
pop
outsb
fsubrs
pop
daa
dec
in
cmp
aam
adc
and
sub
enter
sbbl
ret
xorb
jmp
cmp
call
and
inc
loopne
out
fs
inc
mov
xchg
dec
cwtl
fistpll
push
test
lds
push
lods
mov
out
loope
push
cmpb
lods
insb
icebp
pusha
stc
lods
cmp
sub
push
test
enter
mov
pop
fistpll
mov
divl
jb
xor
sarl
jo
dec
push
nop
jnp
adc
clc
sarl
es
cmp
mov
repz
or
jnp
pop
pop
iret
fistl
testl
dec
sbbb
adc
mov
xor
lods
bound
inc
and
add
xchg
dec
xor
xor
fmuls
dec
mov
into
in
cmp
imul
out
or
sub
adc
hlt
in
test
fadds
aaa
je
arpl
clc
lea
std
cmp
sbb
cmp
fmuls
jecxz
jnp
cmpsl
dec
mov
shll
movl
fbstp
cltd
and
adc
rcl
lods
fwait
add
movsl
xor
mov
xchg
mov
enter
imul
dec
repnz
xor
aas
adc
sub
fstpt
sbb
mov
dec
mov
mov
pop
jne
nop
pop
jl
and
push
and
jne
fimuls
dec
sub
mov
xor
cmp
push
aam
mov
inc
sub
dec
icebp
push
jp
add
add
adc
mov
xchg
and
cmp
xchg
cmp
push
pop
insb
push
les
jp
arpl
sub
in
call
in
inc
cmp
mov
inc
push
leave
mov
push
jle
subl
aaa
popf
mov
cmc
test
cmc
or
dec
cwtl
xchg
xor
inc
std
rolb
cmpsl
or
inc
adc
dec
fcos
iret
out
cmc
icebp
cld
sti
add
cmpsl
mov
sbb
dec
jo
outsl
xchg
out
dec
sub
loopne
je
pop
js
sbb
mov
xchg
and
inc
jne
dec
adc
outsb
mov
mov
xor
mov
je
pop
mov
insl
xchg
ret
ret
psubq
xor
xor
xor
lahf
pushf
ret
or
les
xor
jno
loop
pop
xchg
mov
std
inc
cltd
xchg
sbb
mov
test
ja
push
and
or
mov
popf
ljmp
xchg
dec
and
or
mov
pop
adc
mov
xchg
add
dec
scas
mov
stc
outsl
cs
in
iret
sub
push
aas
push
shll
add
add
adc
jmp
jmp
mov
out
sbb
in
push
jbe
loopne
movsb
das
imul
push
pop
mov
imul
fld
jns
popa
jb
jnp
call
mov
lret
push
lock
or
movsb
jo
sub
push
mov
xor
je
or
lret
add
xchg
cmp
loopne
mov
push
repz
pop
add
cmovg
mov
aaa
mov
xchg
mov
imul
sub
movsl
iret
dec
push
inc
rclb
add
jmp
int
and
jne
inc
enter
lret
jnp
adcl
mov
dec
or
mov
dec
inc
mov
inc
jg
movsl
dec
fs
cmp
xchg
inc
jmp
int3
cmp
movl
out
pusha
inc
mov
loope
fstp
or
cmpsl
std
jmp
js
popl
test
les
mov
push
stos
inc
lods
mov
sahf
mov
sbb
jae
xor
gs
in
or
aam
lret
mov
shrb
and
outsl
call
mov
xchg
mov
jp
icebp
aas
mov
rcrl
sbb
repz
jle
pop
lahf
lret
jecxz
inc
stos
cmp
sub
test
ret
imul
mov
fisttps
pop
mov
mov
sbb
into
aaa
and
adc
mov
xor
insb
or
sbb
jne
xchg
test
mov
pextrw
sub
push
cmp
jbe
movsb
push
push
mov
dec
fs
mov
jno
adc
mov
fdiv
repz
cmp
je
stc
idivl
inc
xchg
imull
call
je
je
ljmp
fsubs
sub
fnstenv
pop
jb
cltd
xchg
data16
dec
xchg
ss
icebp
pop
adc
dec
dec
jno
call
sub
loope
leave
aas
out
mov
xchg
fcoms
shr
mov
dec
cmpsb
mov
xor
dec
pop
lods
lods
mov
shrl
nop
iret
rcl
int
inc
ds
ss
lret
pusha
adc
in
sbb
and
or
ret
mov
cld
jg
out
leave
cmpb
pop
mov
rcrb
adc
test
je
mov
sbb
lret
and
xchg
rclb
sub
pop
jbe
pop
mov
mov
mov
cmpsl
pop
stos
lds
mov
mov
dec
fs
cmp
pop
sbb
xor
cmp
cltd
and
in
ftst
push
mov
jne
pop
lock
in
mov
dec
mov
ret
mov
fsts
xor
out
imul
cli
dec
mov
test
aas
and
adcl
sahf
add
jno
js
dec
mov
mov
push
repnz
js
adc
or
mov
shlb
mov
push
sti
jo
dec
mov
movb
decb
daa
mov
adc
or
sub
adc
xchg
add
stc
std
int3
addr16
out
mov
sub
addb
xchg
mov
and
bnd
mov
insb
inc
adc
enter
xor
adc
clc
push
outsb
push
mov
pop
lret
movsl
push
push
iret
dec
cmp
daa
cmp
lahf
dec
pop
movsl
push
pop
lods
pop
mov
sub
lret
shll
adc
and
icebp
and
shll
adc
pop
test
pop
ds
and
sbb
fstl
xchg
mov
jo
xor
and
mov
sub
lea
test
dec
inc
je
pop
mov
dec
mov
into
inc
xor
pop
sysret
imul
dec
cmpsl
dec
mov
jo
sub
jne
inc
pop
shrl
mov
ficompl
jnp
sbb
inc
dec
add
or
pop
adc
cmpb
pop
push
mov
or
outsl
sub
stc
lret
push
jae
shrl
xchg
pusha
xlat
data16
vunpckhpd
lods
mov
jae
aam
dec
push
in
or
xchg
das
sub
xchg
jg
xchg
push
pop
loop
test
cmc
int
repnz
mov
push
pop
xor
pusha
mov
push
or
mov
xchg
or
addl
in
js
xchg
ds
inc
or
test
cwtl
gs
dec
xor
in
sub
cmpsb
xor
mov
popf
es
add
push
mov
out
xchg
pop
aaa
sbb
or
xor
jl
cmp
stos
xchg
and
mov
cmc
mov
inc
inc
jbe
mov
pop
or
dec
push
cld
sbb
pop
jle
sub
pusha
testl
out
xor
sbb
xchg
xchg
cli
dec
mov
jns
in
push
rcrb
lcall
ljmp
pusha
pushf
mov
and
out
stos
cmp
sbb
arpl
movsl
test
lret
call
xchg
lret
insl
mov
jae
outsb
divb
mov
pop
mov
or
push
jne
fildl
push
push
int3
rcr
dec
cmp
add
mov
inc
andl
adc
in
enter
out
roll
daa
jb
push
jb
jno
cld
mov
jecxz
fs
mov
fisubl
std
add
scas
jb
int
add
mov
push
repz
loop
xor
ror
cwtl
mov
and
jbe
or
out
repz
cmp
ds
jg
repz
clc
sti
jmp
inc
pop
scas
lea
ja
xor
lods
xchg
add
fdivs
cwtl
add
cmpsb
test
dec
pop
div
add
call
pop
popa
das
movsb
cmpsb
aad
sahf
xchg
xchg
mov
int
lock
pop
out
or
jl
add
int3
mov
dec
mov
fisubrl
cwtl
insl
cli
or
sti
test
int3
pop
adc
idiv
and
and
fisttps
js
push
mov
inc
loopne
lahf
cmpsl
xlat
add
inc
pop
idiv
adcl
ds
push
mov
adc
ljmp
push
cltd
mov
xor
test
rol
adc
sbb
dec
inc
int3
cmp
xchg
clc
fdivrl
add
push
jmp
or
dec
sahf
dec
arpl
xchg
out
jo
add
sub
repz
jle
push
adc
clc
inc
pushl
inc
rcl
mov
sub
add
mov
xor
sarb
mov
adc
leave
int3
arpl
mov
jg
sbb
mov
leave
test
lret
loop
push
sub
sahf
stos
jmp
fcmovne
add
mov
sub
sbb
push
daa
je
sbb
xchg
arpl
pop
mov
inc
fnsave
add
inc
pop
mov
fstpl
sub
push
call
mov
ss
aas
cmpsl
add
orb
std
sub
xchg
cltd
jns
int
dec
out
aas
addr16
rcll
push
lods
ret
jae
xor
mov
xlat
testl
outsb
inc
cld
inc
jmp
scas
mov
cmp
stos
repnz
push
rcl
dec
aad
dec
add
push
dec
out
ror
or
inc
add
push
inc
ficomps
mov
lret
repnz
pushf
sti
icebp
clc
sti
fimuls
mov
ret
mov
stos
es
sbb
and
xor
test
xchg
das
pop
mov
push
std
arpl
cmp
nop
rcl
add
fists
stc
xchg
mov
jbe
out
lcall
jns
push
push
sahf
mov
pop
mov
cli
orl
mov
jbe
rcrl
xchg
stos
dec
sub
dec
clc
mov
aaa
das
les
jge
or
repz
loop
inc
mov
xchg
cmpsl
sub
or
inc
or
add
lahf
daa
xchg
xor
mov
push
add
movsl
mov
popa
jbe
cli
xor
jno
xchg
inc
cmpsl
ret
punpcklwd
pop
cld
fsubrp
addr16
int
sub
leave
xor
jl
imul
xchg
jmp
inc
rcl
sbb
int3
push
jl
sub
je
or
imul
lods
insl
aad
inc
mov
adc
jo
fdivs
popa
call
cmpsl
iret
cmpsl
dec
cmpsb
andb
ret
insb
mov
test
inc
or
mov
mov
lods
pop
test
xor
push
int3
fldenv
sub
xchg
cmpsl
xchg
push
xchg
cltd
sbb
outsb
push
ja
out
mov
xchg
mov
stos
negl
ret
mov
pop
xchg
jne
adc
movsb
test
add
xlat
outsl
loop
mov
ljmp
inc
fists
jge
xchg
pusha
adc
mov
pop
jno
pop
lret
jo
mov
mov
push
sub
addr16
sbb
xchg
call
fidivl
insl
push
notb
lea
dec
out
scas
sbb
ror
xor
xchg
mov
hlt
xor
aas
adc
cld
cld
dec
daa
push
fsubl
or
shl
inc
arpl
push
push
clc
pusha
mov
pop
inc
add
cmp
jecxz
cmp
jg
add
rorl
or
lea
mov
pop
aam
push
or
xlat
push
mov
pop
enter
jne
and
fucomp
jae
push
cld
sub
mov
outsb
xchg
pop
jbe
pop
mov
jae
mov
out
mov
pop
xchg
aas
lret
push
xchg
push
lahf
dec
pop
jbe
loope
xchg
adc
push
fistps
inc
jecxz
push
cmp
popl
es
cmpsl
xlat
or
inc
mov
out
sub
jge
pop
xor
jp
sbb
fucomp
adc
shll
sub
inc
test
fs
out
xchg
jmp
pop
fwait
pop
add
sbb
xor
popa
rorl
inc
xor
je
movsb
popf
test
push
xlat
mov
xor
sbb
pop
or
out
lahf
pop
ret
loopne
ret
sbb
fucomip
repz
mov
call
enter
add
adc
xchg
add
std
std
int3
addr16
hlt
sub
push
or
xlat
push
mov
or
scas
jecxz
jo
xlat
data16
bound
dec
mov
fildll
cmc
sahf
lds
xchg
mov
xor
popf
pop
cmp
in
push
mov
dec
fs
cmp
sub
xchg
dec
jnp
les
cmp
cltd
and
hlt
mov
mov
popa
stc
push
pop
push
cwtl
jae
out
add
jne
pop
fiadds
clc
ficompl
notl
or
inc
xlat
addr16
push
fwait
sbb
movl
enter
cli
inc
int3
pop
sub
mov
pop
arpl
sahf
inc
mov
push
cltd
or
push
sub
jecxz
jnp
jae
or
add
xchg
fdivp
lret
jge
fwait
lahf
pop
stc
in
lock
xor
xchg
adc
aas
add
mov
adc
add
outsl
adc
xor
mov
test
mov
lret
sbb
pushf
repz
loope
fadds
mov
sbb
mov
fcmovb
mov
stos
xchg
mov
pop
sbb
sbb
vpaddusw
push
mov
inc
fidivl
loop
scas
mov
xchg
out
cmpsl
xlat
popf
dec
std
jle
mov
dec
pop
ds
cld
int
mov
mov
fs
js
xor
movsb
cs
iret
pop
xchg
ds
divl
data16
jne
sahf
adc
aam
mov
xor
or
out
mov
int
inc
cwtl
rclb
inc
push
push
mov
sub
or
inc
mov
aam
xchg
repz
push
sub
divl
cwtl
roll
addr16
mov
cmpl
mov
pushf
in
imul
add
cmp
arpl
jne
dec
movsb
pop
cs
mov
gs
into
mov
jge
and
push
pop
sbb
add
inc
push
inc
xchg
xchg
movsb
movsl
lds
and
test
sarl
lds
shlb
ficoms
loope
scas
cmp
in
pop
loop
xor
or
sub
jg
and
push
jle
fnstsw
dec
cmc
add
fwait
repnz
ljmp
inc
mov
xchg
jns
jle
inc
mov
insb
jns
mov
adc
scas
fidivl
jb
xor
dec
mov
xlat
test
mov
inc
cld
inc
add
pop
jp
xor
in
cltd
mov
gs
and
and
lds
mov
sub
jnp
fildl
imul
cmp
je
popa
roll
inc
push
in
pop
mov
sub
push
cld
xor
or
jecxz
cmpb
sti
or
cmpsl
icebp
add
add
jno
push
push
pop
jae
or
dec
cmp
push
insb
jle
pop
lds
enter
es
mov
dec
pop
fs
push
shll
ror
mov
sub
js
mov
push
jge
jg
pop
ficompl
jle
mov
loopne
sub
pop
cli
mov
cli
leave
and
mov
dec
pop
rclb
sti
lahf
cwtl
enter
es
sub
pushf
pop
fstps
shrb
int
imul
call
lds
dec
mov
add
xchg
jmp
rolb
fcomps
sahf
adc
mov
sti
sarb
clc
mov
mov
cmpsb
cltd
inc
bound
cwtl
or
pop
sti
ja
add
add
fwait
test
mov
push
out
sub
in
xor
fisubrl
ljmp
imul
push
call
iret
push
add
cmp
xchg
ja
mov
gs
adc
adc
cld
add
addr16
leave
cmp
xor
add
adc
and
test
lcall
mov
es
sbb
enter
or
xchg
pop
inc
pop
pop
addr16
ret
adc
lcall
dec
add
dec
jo
mov
push
sbb
dec
lock
fsubl
popa
sub
das
add
sub
and
roll
xor
std
cmpl
mov
in
orb
add
jne
decb
push
push
pop
fistps
lock
adc
movsb
xchg
jns
xor
push
xchg
sbbb
sub
cmc
inc
rcl
fists
push
shrl
rol
mov
gs
and
pop
inc
jle
pop
inc
insl
lret
jnp
mov
sub
push
pop
loop
dec
adcl
scas
adc
outsl
pop
bound
adc
push
mov
fucomp
out
int
divl
std
mov
dec
fadds
jle
xchg
cmp
scas
dec
subb
jl
stos
mov
inc
pop
sahf
ret
push
jno
mov
ljmp
xor
mov
xchg
scas
jb
sbb
cmp
push
dec
add
loop
call
jmp
mov
xchg
push
mov
inc
mov
mov
xchg
clc
inc
sbb
xchg
cmp
adc
ret
into
push
xchg
ret
int
leave
call
lret
jnp
movsl
imul
sbb
xchg
cmp
pop
sub
push
inc
loop
dec
std
test
lret
xchg
mov
mov
shll
push
cmpsb
and
pop
stos
shlb
sub
ret
int3
call
adcb
gs
fisttps
imul
mov
push
or
and
add
gs
mov
push
sahf
lea
xor
lahf
scas
popa
fcmovnb
push
or
jae
adc
cmp
dec
mov
data16
rcr
or
test
sti
add
stos
and
fdivl
test
xchg
xchg
adc
push
dec
insb
push
stc
insb
dec
cmpsl
add
adc
test
test
cmp
inc
lds
repnz
push
push
and
add
je
add
cltd
lahf
inc
lret
cwtl
hlt
inc
sbb
adc
cli
mov
adc
dec
icebp
inc
lcall
enter
sub
mov
dec
lahf
push
sti
cmpl
scas
mov
vmovlps
and
pushf
jl
sbb
iret
sub
sbb
test
sub
fisttps
mov
sbb
lods
movb
jge
pop
out
mov
adc
fstps
gs
fwait
pop
roll
and
mov
add
mov
fcmovbe
pop
jecxz
test
shl
fnstsw
pop
sarb
ret
mov
or
int3
mov
and
add
test
insl
mov
incl
dec
enter
stos
and
pushf
sbbl
lcall
mov
mov
add
xlat
xchg
sbb
mov
xchg
adc
cwtl
arpl
test
insl
lea
int
cwtl
adc
pop
jecxz
push
mov
shr
fildl
pop
ljmp
dec
sub
adc
xchg
lahf
fs
or
fadds
ds
loope
lcall
in
ds
mov
and
adc
fwait
dec
push
adc
stos
fcmovnb
lret
sbb
push
xlat
and
add
jno
mov
int3
mov
and
push
jecxz
or
movsl
add
sti
add
dec
push
inc
fdivrs
mov
mov
xor
out
jb
jns
add
into
sbb
js
adcl
xchg
sbb
sub
mov
decb
dec
xor
ret
push
test
sbb
cmp
addr16
test
enter
or
es
push
adc
add
jmp
inc
cltd
jb
jmp
mov
cmp
xor
fucomi
fsubrl
test
in
mov
mov
pop
cmp
xchg
inc
in
lock
test
or
push
int
imul
addr16
add
dec
xor
icebp
xchg
add
mov
sbb
pop
dec
repz
jne
push
call
js
incb
or
aam
pshufw
inc
ljmp
fcmovne
xchg
mov
or
fwait
rolb
jne
pop
ret
loope
fadd
cmp
xchg
cmp
roll
jbe
mov
add
loope
stc
fstpl
push
jge
dec
rcrl
sub
jo
inc
int
sysexit
sbb
add
mov
ja
fbld
inc
add
inc
js
mov
pushf
lahf
iret
sbb
test
jns
pop
shrb
clc
insb
movsb
popf
out
lds
fs
mov
or
scas
sub
das
test
repz
cmp
xor
int3
cltd
add
xchg
std
iret
aas
xor
movsl
sbb
and
and
xor
dec
mov
xlat
pusha
xchg
jb
ljmp
xor
mov
pop
cmp
mov
xchg
into
push
mov
and
xlat
cli
aad
add
push
push
and
pop
cld
jo
cmp
outsl
stc
dec
lods
cmpsl
cmp
imul
dec
push
subb
pop
bound
jl
jnp
dec
mov
xchg
stos
cltd
fidivrs
outsb
push
scas
dec
sub
push
mov
fwait
cli
mov
inc
ret
cmpsl
ret
cmc
mov
cmpsl
sti
icebp
mov
jge
push
cmp
inc
mov
rorl
dec
popf
or
imul
shll
pushf
pop
insb
dec
rolb
mov
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
arpl
in
scas
sub
pop
aad
mov
xchg
das
pop
mov
push
std
arpl
cmp
nop
rcl
add
fists
stc
xchg
mov
jbe
out
lcall
jns
push
push
sahf
mov
pop
mov
cli
orl
mov
jbe
rcrl
xchg
stos
sbb
sbb
push
insb
xchg
pop
mov
jge
add
mov
int3
js
inc
mov
cmc
rclb
ljmp
pop
dec
fnstsw
xchg
sub
fimuls
ds
sub
sub
push
and
cld
jno
xchg
das
inc
outsb
sahf
pop
js
orl
adc
pop
sub
push
je
sub
xchg
mov
rcrl
jecxz
out
imul
xor
aam
cmp
jmp
sahf
mov
cld
and
subl
leave
pop
sub
mov
insb
out
adc
jns
xor
inc
xor
sbb
nop
adc
jne
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
ljmp
ret
or
repz
sbb
sbb
jo
adcl
and
loope
addl
jmp
jge
int
or
adc
push
fists
outsl
je
ret
mov
in
or
pop
int3
cmp
mov
adc
icebp
pop
cmovae
cld
sbb
mov
rcrb
cmp
adc
adc
out
push
cmp
ret
pop
push
fucomip
popa
ljmp
popf
jns
call
lock
and
pop
push
dec
cmpl
bswap
sbb
ss
hlt
daa
sbb
cs
stos
bound
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
decb
addb
sub
mov
scas
mov
jecxz
das
lea
test
lods
inc
movsb
outsb
shll
and
push
scas
inc
and
icebp
xor
cmpsb
sub
mov
dec
mov
push
frstor
or
shlb
fwait
xor
sub
cmp
inc
xlat
in
call
test
cmp
cs
roll
and
push
mov
adc
mov
mov
cltd
sahf
xchg
imul
insb
int
push
sahf
fisubl
lret
loopne
inc
sbbl
mov
jecxz
mov
adc
pop
movsl
push
dec
sbb
lock
xchg
pop
mov
rcrb
jge
mov
xor
lods
push
dec
sbb
mov
and
test
nop
cmp
adc
add
push
mov
pop
lret
scas
sbb
mov
ljmp
int3
pop
add
pusha
dec
loop
mov
fcmovnu
enter
and
lock
inc
sub
or
rclb
inc
rcr
rcll
pop
aam
jb
scas
add
xchg
mov
jo
push
sub
sahf
stos
fbld
cmpsl
rcr
call
cmpsb
ficoml
xor
dec
xchg
rcr
mov
dec
int
out
dec
test
jns
aad
inc
lcall
inc
adcb
sub
or
sbb
pop
divl
iret
pusha
or
insl
lds
mov
ljmp
aad
fldl
cmc
cld
jg
mulb
cmp
pop
shlb
add
inc
stos
mov
ljmp
dec
sbb
shll
push
sbb
or
out
sbbl
pop
jmp
scas
pop
icebp
pop
pop
cmc
mov
push
jmp
pop
scas
dec
push
negl
xor
or
sbb
push
or
inc
xchg
cltd
mov
popa
sub
jg
adc
test
adc
mov
ret
je
adc
lea
sbb
test
or
je
xchg
fcomps
push
bound
sbb
mov
shlb
outsl
sub
cwtl
mov
dec
inc
mov
or
fcoml
je
or
loopne
cmp
sahf
jae
and
ja
clc
add
iret
arpl
enter
mov
pusha
mov
fcoml
aaa
xchg
and
add
push
insl
dec
pop
mov
xor
dec
fst
ret
aaa
xorl
lods
push
dec
sbb
into
mov
push
test
adcb
cmp
ret
or
or
dec
scas
test
mov
int3
gs
jb
sub
dec
gs
jecxz
lcall
push
mov
push
pop
and
popf
jg
loope
mov
mov
sbb
jo
adc
bound
in
push
fidivrs
or
fs
arpl
scas
ja
lods
sbb
pop
stc
leave
das
call
gs
pop
fsubs
sti
mov
movsb
inc
loopne
pushl
adc
or
insl
rcrl
fisubs
mov
xlat
leave
jnp
sahf
sbb
add
pop
adc
xchg
repz
adc
mov
ror
hlt
movsl
mov
jg
arpl
movsl
or
pop
into
push
cmpb
dec
mov
popf
pushf
or
push
adc
ja
inc
movsl
sti
test
icebp
pop
fisttpll
pop
xor
sbb
jno
fwait
mov
movzbl
mov
imul
cmpsb
outsb
push
fs
and
lret
ficompl
test
mov
aaa
jo
push
bnd
je
jecxz
sub
shlb
andl
mov
adc
mov
jp
pop
xchg
pop
insb
xor
mov
xchg
arpl
jecxz
es
ret
mov
repz
movsl
cmp
out
xchg
ret
fbstp
addb
dec
add
fs
ret
sbb
lods
push
and
add
xor
xchg
pop
jno
sub
pop
mov
fmull
xchg
enter
inc
iret
xlat
jmp
pop
icebp
nop
pop
dec
push
sub
dec
push
adc
ja
pop
test
mov
mov
rclb
mov
mov
test
into
cmp
xchg
ss
test
xlat
test
pop
jne
pop
sub
ss
add
push
in
dec
hlt
pop
insb
push
jl
sbb
pop
push
pop
pushf
cmp
jge
push
mov
mull
push
mov
dec
fs
ss
int3
push
ret
sub
scas
mov
fistpl
popa
inc
out
in
mov
stc
inc
xor
dec
adc
cmpsl
mov
scas
and
xchg
sbb
xchg
inc
lcall
xor
sub
inc
mov
pusha
inc
std
pop
pop
je
cmp
add
cmpsl
inc
xor
dec
inc
dec
push
or
int
lea
rcl
pop
lret
das
or
cli
sahf
shll
mov
xor
mov
xor
or
cmpsb
adc
aam
push
jecxz
cmp
adcb
loop
mov
insb
jo
pop
cmpsl
mov
adc
xor
dec
icebp
lock
fsubrl
push
lods
push
push
int3
xor
adc
les
and
dec
mov
pop
insb
leave
call
xor
pop
sub
xchg
dec
xor
sti
stos
pop
xor
sub
lret
ja
mov
adc
movsb
dec
shll
mov
mov
hlt
fcompl
push
loop
jl
inc
cmp
idivl
fistpl
sti
pop
fsubrs
xchg
dec
xchg
pop
mov
push
test
mov
outsb
bound
lahf
pop
pop
xchg
xor
fs
add
pop
int3
pop
hlt
pusha
inc
sub
cltd
sahf
add
mov
divl
adc
stos
clc
jbe
push
int
clc
pusha
mov
call
ja
jnp
pop
add
dec
xchg
jg
sbb
add
mov
mov
cmpsb
dec
mov
and
movsb
xor
cmp
pop
shlb
add
inc
stos
mov
ljmp
dec
sbb
shll
push
sbb
or
out
sbbl
pop
jmp
scas
pop
icebp
pop
pop
cmc
mov
push
jmp
pop
scas
dec
push
negl
xor
or
jge
push
cmp
stc
js
bound
xchg
leave
loop
lea
xor
addl
pushl
xchg
cmpb
adcl
rcrl
cmpsb
dec
dec
jbe
leave
xchg
fstps
icebp
xchg
fwait
stc
pop
mov
scas
adc
je
mov
rcrb
hlt
jb
jl
adc
sahf
xchg
dec
daa
sarb
mov
mov
jg
mov
fdivr
or
inc
mov
add
jecxz
mov
mov
cltd
cmpsl
cmpsl
push
enter
mov
mov
in
jno
pop
ret
xchg
and
fisttpll
and
sbb
push
cli
cmp
shll
rcrl
rcll
icebp
ljmp
sbb
out
or
shll
mov
push
push
movsl
fldl
lret
jno
push
cmp
int
inc
mov
ficoms
pop
jg
xchg
int
pop
test
push
pop
mov
loope
out
xor
sbb
sbb
inc
cmc
add
cltd
inc
dec
pop
xchg
jae
int3
mov
cmpsl
push
xchg
cmp
dec
pushf
add
mov
pop
out
sbb
loop
jg
stc
add
dec
lcall
dec
rcrb
pop
push
mov
call
mov
mov
xchg
arpl
loop
mov
cli
add
sub
pop
cs
lods
pop
lods
dec
mov
jnp
add
lds
repz
cwtl
add
scas
mov
shlb
xor
pop
pushf
shll
test
jae
pop
imul
jmp
insb
xchg
mov
and
or
sub
xchg
sti
test
fisubs
insb
test
fisubl
add
pop
rol
aam
sbb
jl
mov
pop
in
jl
jnp
incb
les
ja
mov
cmp
notl
shlb
mov
jns
push
cmc
jnp
and
cwtl
mov
mov
test
mov
sti
pop
adc
mov
stos
fidivl
enter
xlat
adc
push
mov
sbb
rcll
aad
repz
adc
cmc
mov
push
iret
inc
mov
fcomps
aas
fidivrl
pop
out
cld
sub
stos
jno
dec
push
pop
stos
or
aam
jnp
add
insl
lcall
jne
test
add
test
jne
orl
mov
mov
xchg
fildl
xchg
lret
and
inc
mov
inc
add
push
inc
cmc
pop
jl
adc
sub
outsb
add
push
xchg
fisttpl
or
addr16
cli
dec
or
or
adc
push
add
in
shll
int
je
jmp
dec
cmc
xor
out
popf
pop
fists
xchg
cld
or
and
movsl
ficoml
sbb
insb
sbbl
mov
leave
leave
pushf
add
mov
push
mov
dec
inc
xor
mov
push
gs
lods
call
pop
and
stos
cmp
dec
lods
pop
sub
jae
cwtl
iret
inc
fsts
bound
add
xor
lods
out
sub
lock
mov
aam
and
lods
ret
inc
out
and
lods
inc
cli
leave
push
fs
rcrb
clc
lods
dec
pop
jae
mov
pop
xor
fmuls
dec
mov
into
in
cmp
imul
out
or
sub
adc
hlt
in
test
fadds
aaa
je
arpl
clc
lea
std
cmp
sbb
call
stc
icebp
and
inc
xchg
loopne
jg
fists
pushl
or
pop
jp
sub
outsb
mov
push
aam
ret
inc
insl
sti
jmp
mov
fldt
pop
xabort
pop
xchg
xchg
mov
mov
pop
sub
push
push
add
xchg
fsubrs
test
repz
daa
mov
sbb
fstpt
mov
shrl
stos
sub
ffreep
sti
jb
test
pop
cltd
imul
dec
mov
stc
mov
in
jnp
fbstp
cli
leave
mov
xlat
xchg
ja
dec
sbb
inc
ja
imul
int3
sbb
in
mov
push
adc
mov
fnstcw
or
sti
or
nop
lcall
push
dec
mov
js
arpl
jno
divl
andl
pop
test
clc
or
movsb
mov
push
inc
in
sarl
add
or
dec
mov
shll
shll
push
icebp
cmpsl
dec
inc
mov
and
and
jns
clc
and
xor
cmpsl
dec
sub
xchg
mov
sti
repz
adc
add
xchg
arpl
int3
inc
pop
and
mov
lds
dec
call
shlb
dec
inc
loopne
mov
and
repz
jns
out
inc
sbb
add
movsb
cltd
repnz
or
cld
xchg
leave
lock
mov
cltd
mov
js
imul
lea
push
rcl
mov
jns
cs
xchg
or
out
test
cmpsb
test
mov
cmpsl
push
pop
or
divl
mov
int
sub
or
icebp
je
mov
rorl
push
mov
sarl
je
mov
cmpsl
sbb
dec
cmc
pushf
sbbb
jle
mov
fnstenv
filds
and
cmpsb
ret
lods
cmp
push
fwait
mov
pusha
and
cmp
xor
test
lret
dec
adc
addl
pop
lret
mov
imul
mov
pop
jle
add
fiaddl
jmp
in
cmp
pop
cwtl
and
addl
out
or
xor
outsl
fldt
pop
lods
and
bnd
ret
xor
imul
mov
ja
push
aad
test
mov
add
mov
or
in
mov
ljmp
aad
push
adc
or
mov
ja
lret
pop
sub
add
leave
inc
fdivl
arpl
std
add
repz
out
icebp
inc
shlb
andl
cwtl
clc
jp
rclb
push
adc
int
movsl
adc
push
int3
mov
and
insl
push
inc
add
cwtl
das
pop
fsubs
pop
mov
bound
out
jecxz
jbe
add
push
test
dec
dec
mov
xor
imul
mov
je
mov
jo
push
mov
fbld
shrl
mov
mov
mov
lea
adc
jbe
jne
stc
mov
leave
ja
and
std
mov
dec
adc
xor
inc
pop
mov
xchg
dec
int3
test
mov
aad
jae
mov
pop
dec
rcr
xchg
cmp
mov
adc
push
dec
or
test
cmp
shll
mov
jb
adc
lds
fldl
pusha
xchg
movsl
mov
jmp
push
enter
sti
and
adc
inc
mov
clc
mov
imul
or
jecxz
dec
dec
aam
stc
lock
xchg
call
fcom
push
lret
jae
pop
je
mov
dec
pusha
push
jb
pop
mov
fistps
jle
sbb
out
and
test
dec
movsb
lea
inc
stos
pop
push
orb
cmpl
xlat
movsb
in
jmp
mov
fistpll
inc
ret
lahf
xor
shl
or
loopne
repnz
xor
aad
pushf
ret
pop
pushf
ret
xor
imul
mov
ja
push
aad
test
mov
pop
ffree
jnp
pop
cld
test
pop
test
ret
sub
push
inc
imul
mov
stos
divl
fcoml
mov
lret
cmp
xor
mov
out
sbb
fldl
push
fsts
aam
mov
stos
add
icebp
jno
lods
mov
lcall
enter
cmpsb
inc
popa
sahf
mov
mov
in
cmp
push
imul
int3
xor
xor
data16
shrb
cmp
cmpsb
dec
pop
or
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
xor
shll
xchg
mov
arpl
enter
lds
repnz
inc
pop
test
mov
pop
lds
insl
pushf
adc
and
ja
add
xchg
enter
ljmp
sbb
xchg
mov
sbb
push
inc
into
sbb
cltd
xchg
jg
lds
loopne
ret
fdivr
int
cmp
aad
jnp
lahf
jg
mov
fildll
sbb
repz
xor
ja
mov
out
enter
es
pop
jb
fwait
in
lahf
mov
repnz
out
adc
int3
adcb
inc
push
mov
jne
and
movsl
adc
ja
daa
pop
scas
inc
ret
lcall
mov
add
mov
push
mov
cwtl
bound
jg
inc
xor
sub
les
mov
pop
aad
jg
inc
pop
das
mov
adc
int3
jns
outsb
loopne
push
dec
sbbb
sti
sahf
pop
mov
mov
bound
cmpsl
mov
and
xlat
cli
aad
cmp
add
enter
xchg
fistl
sbb
mov
mov
jecxz
std
cli
sub
mov
cmp
lahf
cmp
test
or
loop
std
rcr
inc
stc
xor
add
fldl
mov
cli
testb
repnz
out
jle
fistps
jno
dec
push
fimuls
std
inc
into
cmpsb
iret
and
xor
int3
jnp
popf
cmc
insl
pop
mov
inc
bound
and
mov
xor
dec
inc
je
sbb
aas
out
mov
xchg
fdivrs
lret
imul
cmp
inc
mov
cmc
xor
jno
sti
cmpsl
daa
outsl
lahf
lret
aaa
lock
aaa
pop
mov
or
inc
or
outsb
xor
jae
fadd
adc
mov
dec
mov
mov
aam
dec
push
add
jge
sbb
ret
ljmp
pop
mov
inc
das
inc
stos
adc
mov
stos
andl
push
mov
xor
loope
mov
ret
jge
inc
xchg
cld
dec
repz
lds
inc
mov
enter
or
outsl
adcl
inc
cwtl
dec
xor
imul
fldl
pop
fs
jge
mov
fs
pop
outsl
push
cltd
cwtl
and
fisubl
xor
addl
mov
xchg
cmpsb
popf
mov
xchg
dec
mov
xchg
or
sahf
sbb
or
mov
mov
in
mov
sahf
sub
add
add
jp
and
mov
cltd
int3
addr16
jecxz
shr
push
lahf
fwait
test
rorb
insl
inc
movsb
fnstcw
sti
mov
test
cld
scas
dec
mov
insb
push
insb
jo
inc
aaa
data16
fisttpll
lret
or
mov
or
adc
mov
cmp
inc
in
aad
iret
jg
fstpt
sarb
mov
sbb
xchg
outsb
xchg
out
or
add
jg
fildll
mov
aaa
push
jne
and
insb
jbe
rcr
mov
lahf
jg
xchg
sahf
repz
cld
fwait
jl
mov
popf
iret
mov
jmp
xor
jbe
add
pusha
jo
cmp
sbb
daa
jne
cli
ja
ret
lcall
mov
movsl
cltd
mov
iret
fcomip
jns
std
mov
icebp
mov
add
mov
sbb
aas
xchg
cmp
dec
mov
add
mov
inc
stos
pushf
xor
cmpsb
leave
pop
stos
push
outsl
jno
mov
sbb
cld
mov
jne
repz
fcmovne
push
movl
sbb
ret
add
add
pushf
fwait
pop
xchg
pop
sbb
std
jnp
xchg
ds
jle
test
add
mov
or
inc
xlat
fcompl
sbb
jl
rsqrtps
in
push
dec
or
add
mov
push
cmc
icebp
sahf
push
les
mov
call
jns
call
inc
lcall
test
mov
sbb
mov
cwtl
push
and
sbb
dec
mov
lcall
mov
das
push
cmpb
out
push
iret
xchg
adc
pop
addb
xor
mov
fwait
and
mov
fcomps
je
cmp
and
mov
stos
push
mov
mov
push
sbb
test
dec
and
scas
mov
xor
push
cmc
fldt
jbe
lahf
mov
js
cmp
add
lret
fcmovb
mov
and
jbe
sbbb
add
mov
pusha
incl
and
mov
js
mov
or
mov
or
add
adc
rcl
mov
add
fisttpl
or
mov
mov
test
bound
cltd
fdivp
inc
notl
or
push
xchg
enter
sbb
dec
sbb
pop
mov
imul
lds
cmc
stc
mov
cwtl
and
ds
sti
daa
mov
lock
xchg
mov
lahf
cld
mov
jecxz
mov
leave
sarb
in
add
imul
lret
fisubl
idivb
aam
dec
pop
add
jmp
imul
jns
cld
mov
jg
push
add
mov
jg
inc
xchg
fildl
aad
pop
sbb
enter
pusha
jns
cs
negl
dec
xchg
mov
sbb
in
ds
jl
stos
into
adc
add
dec
mov
mov
je
mov
adc
je
xlat
or
movsb
jp
test
lds
jg
jnp
lods
insb
xchg
nop
xor
mov
xor
repnz
pop
je
mov
push
imul
insb
dec
mov
pusha
xor
push
adc
pop
jp
arpl
mov
pop
sub
loope
mov
imul
jecxz
gs
cld
enter
add
imul
adc
sub
aaa
out
aaa
stos
test
sbb
scas
sahf
mov
mov
stc
mov
lods
jmp
mov
xchg
adcb
ret
pop
jns
pop
stos
scas
xchg
fistps
stc
sbb
jecxz
cmpsb
push
mov
mov
push
xchg
leave
in
xorl
or
or
pushl
rclb
jp
jns
push
ds
mov
mov
and
mov
xchg
pop
sahf
inc
mov
xchg
mov
mov
add
enter
movsb
in
ds
mov
xchg
dec
mov
xor
sub
pop
loopne
test
xchg
cmp
or
roll
in
ret
roll
stos
aad
or
or
mov
les
and
dec
mov
repnz
iret
or
shrl
dec
push
mov
cmp
stos
rcr
dec
pop
insb
into
pushf
popf
shrb
sbb
jbe
jnp
push
push
mov
push
stos
fnsave
jnp
push
pop
js
jecxz
lcall
jp
xor
and
push
nop
sbb
sbb
xlat
in
pop
idivl
mov
dec
out
cs
xchg
loop
sub
fucomip
push
test
stos
icebp
mov
fbstp
call
cmpsb
jnp
call
roll
sbb
add
andb
js
sbb
jle
movsb
xchg
jecxz
testl
mov
les
pop
mov
arpl
lds
jnp
mov
jecxz
movl
add
push
mov
imul
inc
push
jno
ret
stos
lret
lcall
ss
shrl
test
xor
dec
ss
fst
loope
cmpsl
xchg
test
lret
sahf
cltd
test
mov
xchg
rorl
dec
mov
inc
inc
inc
lcall
xchg
inc
inc
sbb
out
sbb
xchg
pop
push
adc
shl
jo
arpl
sbbl
addb
adc
pop
mov
xor
inc
test
aad
es
lock
pop
xchg
dec
dec
inc
lds
xchg
stc
in
pushf
cmp
in
cmp
mov
xor
fcomi
jl
adc
jnp
fisubrs
pusha
loopne
mov
fdivs
sub
pop
pop
mov
add
dec
sbb
loopne
iret
je
addb
inc
sarl
jecxz
add
mov
jbe
add
int
sbb
inc
pop
adc
inc
inc
sbb
pop
ficoml
out
mov
test
jb
dec
es
push
sub
inc
sbb
test
pop
jp
cmc
cmpsl
dec
pushf
or
lods
cwtl
sarl
or
loope
cld
mov
xchg
or
insl
mov
stos
ja
roll
adc
pop
pushf
and
sbb
dec
cwtl
jnp
es
or
cmp
adcb
xlat
push
mov
out
es
dec
xchg
daa
aam
cmp
test
repnz
cmp
mov
inc
popf
mov
mov
enter
cltd
xlat
xchg
fnstenv
rclb
cmpb
hlt
enter
sub
hlt
xor
xchg
mov
jecxz
cwtl
sahf
inc
aaa
lock
push
adc
popa
push
jecxz
xchg
mov
push
aam
ljmp
mov
imul
lahf
lret
aaa
hlt
add
scas
jo
js
mov
mov
pushf
pop
and
test
inc
sbb
sub
test
fs
push
xlat
mov
dec
movsl
add
das
sahf
sbb
out
push
cld
test
les
jno
dec
inc
int3
loop
cltd
adc
jbe
scas
mov
and
jl
fstpt
jo
jbe
lods
inc
pop
shlb
jg
xchg
sbb
push
sub
loope
push
mov
dec
std
loop
inc
inc
pop
repz
mov
mov
and
imul
sub
or
ss
xchg
push
xabort
pop
sbb
jne
jmp
sub
cwtl
sahf
sub
loop
call
jmp
and
pop
pop
and
cmp
jne
push
mov
dec
adc
mov
jecxz
sarl
ffreep
adc
mov
adc
lds
enter
add
cmpsb
testb
pop
mov
fistpll
clc
mov
inc
mov
mov
iret
sub
push
push
mov
sbb
cwtl
rcr
daa
push
ja
scas
rolb
xchg
ficoml
cmp
lods
sub
mov
and
mov
xor
cmp
repz
cld
cli
sti
sub
sbb
push
cltd
inc
rcrl
xchg
pop
cmc
addr16
aam
ljmp
mov
jl
fidivrl
cli
xchg
dec
and
fimull
pop
ds
lock
fdivrs
sti
mov
jne
push
mov
shlb
dec
xchg
xchg
subl
cmc
mov
push
adc
push
xchg
loope
ljmp
xchg
inc
ret
inc
cmc
rcll
dec
ret
ficomps
jnp
pushf
ror
add
fsubrs
sbb
sbb
and
mov
imulb
cltd
lret
icebp
idivb
sbb
and
lds
movsb
leave
pop
sbb
fs
sar
cmp
pop
sbb
sbb
imul
or
push
mov
pop
mov
push
mov
test
xchg
jl
bnd
push
mov
pop
pop
mov
popa
cmp
inc
fldl
or
push
repnz
lcall
fwait
test
les
movsl
xchg
or
xlat
insb
jbe
stos
sbb
pop
jns
jb
fwait
outsl
movnti
mov
je
or
out
mov
dec
push
and
ds
fisubrs
push
dec
mov
pop
jle
or
ljmp
repz
imul
stos
in
test
into
lahf
idivl
pushf
dec
in
pushf
sub
mov
inc
sbb
and
icebp
shll
pop
fiadds
xchg
arpl
sbb
dec
into
fsubrl
sbb
mov
ja
xlat
push
sub
mov
sbb
mov
dec
bound
dec
sbb
fisubrl
inc
lcall
push
pop
mov
lods
adc
aas
lahf
inc
pusha
xchg
call
sbb
out
dec
mov
and
repz
dec
test
mov
or
cwtl
loope
xor
lea
inc
cwtl
mov
in
or
xlat
insb
jbe
jmp
cmp
inc
loope
pop
jmp
jno
popf
push
adc
mov
les
xor
rcl
lret
gs
shr
test
jmp
gs
filds
aam
neg
adc
inc
mov
fcomps
pop
or
in
jae
add
xor
sbb
lock
loopne
push
cltd
sbb
inc
cltd
xchg
jle
xor
shll
jmp
sbb
add
mov
sbb
sbb
clc
cmp
push
pop
dec
sar
cmp
test
inc
push
and
xchg
ret
add
xchg
or
sub
cmp
sub
add
movsb
sub
or
jg
movl
cmp
push
inc
fisubs
inc
repz
jo
pop
pop
inc
xor
dec
mov
inc
jmp
dec
dec
sub
xchg
and
out
cmp
shl
sti
mov
popa
dec
in
stc
int3
pop
stos
dec
pop
mov
or
repnz
mov
mov
mov
mov
fdivs
mov
nop
sti
mov
shrl
mov
sbb
int
loopne
inc
inc
mov
insb
xor
mov
mov
sti
and
mov
mov
and
int
cwtl
dec
rcrb
jmp
lock
push
test
dec
sbb
and
in
mov
adc
je
fnstenv
add
nop
cltd
pop
repz
cld
arpl
push
push
xchg
pop
gs
stos
ja
dec
xchg
ret
adc
mov
cmp
xor
lea
sub
add
mov
or
cmp
or
stos
test
in
lahf
aam
mov
mov
loope
call
mov
xlat
sbb
mov
dec
push
adc
int3
mov
lret
enter
or
sub
dec
fsubr
loope
sbb
jb
idivb
les
pop
mov
loopne
in
and
adc
repz
pop
adc
or
mov
cltd
addb
mov
mov
adc
mov
fwait
lret
and
popl
inc
dec
pop
dec
inc
inc
pop
test
mov
leave
pop
pusha
test
sbb
cli
fwait
scas
push
mov
xor
icebp
addl
insl
mov
jmp
push
sbb
xchg
add
push
popa
mov
adc
fistl
mov
movd
mov
fimuls
jmp
push
pop
inc
in
bnd
into
scas
jg
add
inc
ror
cmp
rclb
jns
mov
cltd
mov
icebp
popa
cwtl
dec
cmp
jns
movsl
ret
dec
jns
fdivrl
addr16
popf
mov
pop
mov
fisubs
jne
push
push
add
lahf
dec
pop
mov
sbb
sub
daa
cmp
mov
push
mov
cmp
out
jbe
mov
nop
sti
mov
cmp
pop
mov
xor
adc
cmp
push
mov
sbb
jle
mov
adc
les
xchg
cmpsl
ret
test
lds
out
pushf
fs
or
push
insb
fisttpl
mov
nop
fdivrp
stc
inc
push
mov
rorl
fcoms
subb
add
sub
in
stos
jge
jns
sbb
pop
test
fstl
pop
xchg
jo
ret
icebp
sbb
stos
bound
fs
push
add
sbb
jecxz
lods
clc
jb
add
mov
insb
xor
mov
stc
xor
push
sti
mov
aam
mov
inc
sbb
or
sbb
sbb
clc
int3
dec
mov
out
adc
mov
lret
cmp
movsl
mov
pop
push
test
ret
sti
call
xor
inc
mov
test
fwait
mov
out
mov
mov
sbb
pop
add
shrl
orl
cmp
pushf
dec
and
jne
les
test
mov
mov
dec
popf
mov
loope
xor
xchg
mov
cmpl
add
pop
jnp
or
test
dec
nop
xlat
fistl
fisubl
inc
jae
xor
mov
rcrb
sbb
ficoms
jle
lods
push
pushf
repnz
cmpsb
subb
inc
mov
clc
jb
adc
push
test
xchg
mov
data16
cmpsl
bnd
inc
gs
imul
cmp
in
les
cmpsl
fcmovne
cwtl
jne
jecxz
mov
pop
push
push
dec
mov
call
sub
in
xchg
push
adc
ret
pop
pop
mov
push
hlt
xor
aam
sti
pop
xchg
push
cmp
jae
mov
inc
loopne
ficompl
hlt
testb
add
mov
mov
inc
mov
and
and
add
imul
test
push
cli
test
repz
test
arpl
movsl
insl
mov
inc
cmp
lret
pop
nop
imul
fdivrs
mov
mov
fcoml
sbb
in
mov
fstpl
bound
sub
mov
jmp
pop
inc
aam
clc
or
pop
aam
mov
shlb
push
add
mov
data16
push
insl
fwait
insl
lea
xabort
fs
and
call
xchg
or
fnstenv
leave
sbb
adc
sub
mov
push
iret
mov
pop
and
and
arpl
mov
aam
jmp
into
sbb
mov
mov
mov
xchg
or
sahf
mov
xor
sbb
aas
and
or
fstps
mov
push
dec
sbb
add
mov
and
mov
sar
cmp
xchg
cwtl
xchg
popf
pop
js
jg
test
sbb
js
push
cmpsb
dec
push
mov
sub
repnz
lods
cmp
sub
lods
mov
add
pop
jl
pusha
add
push
or
inc
fdiv
sti
and
call
fldt
add
jbe
rclb
add
lret
fwait
aas
sub
jae
inc
pusha
xchg
aad
pop
ja
add
es
cmp
adcl
sti
xor
jne
cmc
cmpsl
enter
xor
lret
int3
loope
ret
inc
lea
loopne
xor
daa
xchg
fistps
dec
add
cmpl
or
and
pop
push
adcb
adc
ret
ror
mov
add
xlat
xor
mov
push
negb
sbb
jne
lds
stos
mov
jb
push
aam
dec
sbb
mov
cmp
xchg
mov
xor
xor
push
sbb
cmp
ja
or
inc
ljmp
xchg
lcall
xor
adc
jnp
jle
xor
mov
nop
scas
popa
or
insl
bound
sarb
clc
pop
call
mov
xchg
and
jecxz
push
fdivrs
mov
clc
int
cmpsl
sti
fsubs
loope
out
sbbl
clc
enter
jmp
mov
ret
add
xchg
jne
mov
push
pop
pop
xchg
ljmp
lea
movsl
imul
jmp
adc
out
and
mov
sub
add
rcll
add
idivb
jmp
ss
xor
lahf
cs
add
mov
inc
mov
lret
ffree
cmpsb
fistpl
icebp
mov
ret
add
and
pop
mov
movsb
pop
stos
pop
mov
push
into
fmull
pop
mov
xchg
pop
inc
jmp
fwait
bound
enter
cmp
mov
xchg
jle
pop
push
mov
inc
aad
cwtl
cmp
push
mov
inc
nop
and
mov
and
inc
add
mov
outsl
sub
cmpsl
jnp
enter
outsl
lds
ffreep
insl
add
mov
inc
lods
mov
int
mov
inc
incb
xor
xor
fucomi
pop
mov
imul
dec
cmp
pusha
hlt
bound
jb
adc
mov
adc
add
dec
pop
aas
or
or
sbb
arpl
icebp
mov
lods
shl
stos
mov
pop
test
mov
sbb
lods
dec
out
pop
loop
mov
mov
xchg
test
or
jl
adc
jp
cmp
pop
mov
xchg
cwtl
fstpl
dec
dec
xchg
mov
inc
insb
jle
maxps
sbb
xor
xchg
adc
sti
sub
and
or
and
xor
add
adc
popf
sub
xor
xlat
jecxz
adc
dec
mov
sub
cltd
push
adc
out
call
sti
xor
jno
aad
adc
dec
enter
hlt
je
xchg
xchg
lds
add
mov
lret
dec
fbstp
call
movsl
mov
pop
mov
imul
dec
cld
inc
imul
int
hlt
mov
inc
sbb
or
add
shr
or
xchg
or
mov
sahf
stos
and
iret
gs
or
jg
jnp
pop
sbb
test
test
fldcw
push
mov
mov
pop
adc
les
mov
or
adc
add
movsl
pop
subl
xchg
mov
add
pop
in
aad
mov
mov
js
lahf
scas
jg
leave
in
mov
mov
and
rorl
andl
data16
lret
aam
stc
fimull
in
xchg
js
dec
sbb
xchg
cltd
call
icebp
adc
mov
xor
xor
adc
mov
dec
inc
mov
cltd
sahf
inc
and
imul
push
aam
icebp
pop
adc
lcall
and
mov
sbb
add
mov
lahf
jnp
hlt
dec
inc
sbb
inc
dec
arpl
insl
movsl
ror
jle
cltd
je
fs
sbb
xlat
addr16
mov
pop
cmpsl
cltd
fstps
in
dec
decb
push
clc
sub
fbstp
rorl
sbb
ret
mov
xchg
add
pop
mov
dec
pop
mov
rcl
lcall
setge
add
sti
lret
sbb
cli
repz
sub
inc
mov
clc
aaa
jge
push
dec
mov
and
add
jge
fwait
cmp
xchg
sbb
fwait
sub
mov
adc
lods
in
push
mov
sbb
xlat
pop
fld
xchg
push
out
cmp
xchg
mov
mov
cld
inc
pop
jp
inc
mov
pop
push
mov
out
sub
sbbl
divb
aam
in
pop
pop
add
inc
inc
divl
pusha
loope
push
sub
add
mov
rcl
sbb
mov
pop
nop
xlat
dec
sub
and
mov
push
cli
movsb
fldcw
ja
fs
jmp
pushl
pop
mov
xchg
sbb
push
sbb
shlb
jo
xchg
add
pusha
cmp
or
add
xor
cmp
push
leave
pop
and
jmp
sbb
popa
push
jle
lahf
xchg
sbb
dec
sbbb
ds
push
cwtl
clc
push
sarb
fdivs
stos
aad
insb
mov
xchg
sub
jmp
cltd
pop
imul
xchg
jle
test
pop
fdivrl
pop
mov
gs
lahf
outsl
out
rol
mov
cltd
cltd
add
clc
aam
call
loope
subb
lea
pop
pop
mov
push
sahf
sub
add
and
mov
jae
test
in
sbb
fsts
cmc
mov
push
roll
ljmp
inc
mov
fidivrs
mov
pop
test
pop
cli
dec
sbb
inc
stos
and
jne
xlat
outsl
inc
stc
mov
mov
jae
das
pop
mov
pop
sub
adc
or
test
cmc
mov
movsl
or
pop
mov
mov
dec
pusha
jbe
stos
xor
mov
sti
shl
mov
pushf
repnz
and
push
sbbb
rcll
es
fs
mov
ret
into
xchg
mov
pop
xchg
inc
popl
add
cltd
aad
pop
mov
ret
inc
aam
insl
lahf
outsl
out
pop
fsubs
and
inc
test
jns
xchg
test
push
mov
xchg
pop
dec
push
inc
mov
sbb
xchg
scas
pop
push
mov
sub
in
jge
and
imul
inc
pop
add
in
mov
mov
inc
ret
and
sti
dec
adc
lret
inc
xchg
in
cmpb
out
test
and
testl
fldcw
neg
rcll
mov
cmp
xchg
fcom
inc
jl
ret
add
xchg
lret
pop
xchg
lret
nop
cmp
subl
jle
cmpsl
or
push
ret
into
scas
fistps
pop
jns
popf
shlb
and
add
aas
cmpsl
es
or
aam
pop
lret
mov
int
les
les
add
adc
dec
mov
sub
cltd
in
mov
cmp
xchg
dec
pop
fsubs
push
mov
shlb
or
xchg
dec
iret
mov
mov
cltd
faddp
add
stos
les
inc
sahf
shrl
mov
ret
in
aas
in
mov
movsl
ret
inc
cltd
mov
dec
add
rcrl
adc
mov
orb
inc
cltd
nop
push
xor
xor
leave
dec
sbb
outsb
test
int3
loopne
xor
mov
popf
neg
dec
cld
test
loope
repz
movsb
push
sub
cld
xor
test
out
xchg
stos
sahf
rorl
imul
movb
jecxz
fwait
popf
push
fldenv
movsb
mull
popf
fists
jb
inc
stc
rorl
add
rolb
stos
popf
outsl
pop
mov
and
enter
fwait
xor
push
sub
scas
pop
bound
cmpsb
jnp
stos
pop
cmp
mov
out
call
fsubs
in
hlt
or
shr
mov
push
sub
mov
lea
int
push
xor
mov
ss
loopne
jae
addr16
or
mov
pop
adc
lods
in
jp
mov
adc
adc
add
push
mov
scas
insb
sub
lahf
stos
mov
add
mov
dec
sbb
scas
mov
jne
stc
dec
dec
push
dec
dec
popf
push
lock
popf
lcall
push
fsts
mov
xchg
stos
xor
mov
ret
jns
dec
pop
cld
ret
mov
ret
fildll
sub
iret
lret
lock
popa
or
or
push
addl
or
mov
imul
mov
pop
xchg
imul
add
scas
rorb
jnp
enter
inc
scas
xor
mov
cltd
push
and
call
dec
dec
mov
dec
sbb
pusha
fldcw
loopne
aad
sub
inc
lods
shll
mov
dec
call
pop
ljmp
mov
hlt
mov
add
jae
add
enter
or
xlat
fdivrl
mov
icebp
imulb
shl
sbb
fwait
mov
lds
xchg
lods
leave
pop
sbb
mov
ja
fs
jmp
pushl
setge
xor
pop
shll
push
add
stos
jge
cltd
movsl
adc
mov
jns
inc
pop
mov
fstl
jp
scas
decl
mov
ja
lds
fs
js
xchg
sub
pop
xchg
jmp
inc
mov
xchg
rcll
push
fsubs
xchg
mov
pop
pop
cmpsb
adc
cmpsb
jnp
jns
icebp
fimuls
jno
push
adc
addl
leave
fcomps
lret
inc
cmp
movsl
mov
fdivs
jbe
mov
into
push
lret
mov
fsubp
jae
mov
sbb
in
xchg
andb
int
inc
mov
or
ret
xor
cwtl
clc
push
xor
pushf
dec
xor
rorl
ret
in
stos
push
and
rolb
lcall
cmc
fisttps
ret
arpl
rcr
nop
sbb
mov
test
test
jo
andl
outsb
mov
lea
fldt
mov
inc
inc
push
jnp
decb
fucomi
repnz
loop
inc
stc
cmpl
and
xchg
out
in
push
test
xchg
and
test
push
lahf
sub
mov
mov
popf
push
test
ds
cmpsl
jnp
cltd
bound
adc
repz
inc
mov
pop
mov
jbe
cltd
stc
imul
xor
mov
repz
hlt
mov
mov
ss
and
sahf
shll
jp
ds
mov
mov
rcrl
dec
xor
cld
add
inc
and
ja
mov
movsb
xchg
lret
movsb
push
sub
push
lret
jmp
loope
lahf
popf
clc
mov
iret
fwait
jo
xlat
imul
mov
cld
lcall
pop
mov
push
mov
jns
enter
pusha
lcall
movsb
mov
pop
inc
xchg
loop
adc
js
orl
clc
mov
adc
shll
fmuls
and
loopne
mov
jl
xchg
and
mov
cmp
loopne
mov
gs
xlat
lea
mov
dec
std
or
mov
jmp
xchg
mov
mov
imul
mov
call
inc
sahf
shrl
mov
push
out
out
repz
ds
psubsw
repnz
push
mov
mov
inc
pop
adc
out
mov
stos
jae
push
sbb
adc
sub
aaa
sub
dec
cld
leave
push
lahf
repnz
fidivrs
mov
fisttps
je
mov
sbb
fdivl
xchg
adc
mov
rorb
stos
fistl
repnz
jbe
lods
cltd
dec
mov
std
lahf
scas
dec
int
cmp
xlat
fmull
and
mov
mov
es
insb
dec
aam
jns
dec
and
adc
mov
push
push
mull
xor
and
call
jo
loop
iret
and
cmpsb
sahf
mov
test
scas
inc
ds
jne
fcom
adc
cmp
adc
xor
test
rorb
aam
mov
addr16
test
sar
gs
lret
jecxz
popa
cwtl
rcl
or
fs
hlt
scas
jo
push
adc
mov
sbb
shrb
imul
sbb
and
lds
pop
popa
lods
cmp
mov
pop
test
test
xchg
cmp
jae
dec
push
push
or
stos
ficoml
scas
pop
xchg
mov
cli
mov
or
shl
sbb
push
ljmp
lock
adc
inc
cli
dec
clc
xor
or
or
mov
movsb
xchg
xchg
add
dec
test
cltd
xor
shll
xor
insl
push
or
cmp
add
mov
inc
sub
inc
inc
leave
sbb
jns
lcall
lcall
ja
popw
test
xor
pushf
mov
aam
xchg
addr16
pop
data16
rcrl
addl
out
add
sbb
or
or
ret
cmpsb
mov
dec
imul
push
fistl
std
movsl
lods
loop
movsb
fsts
fists
in
mov
es
mov
jl
inc
loop
ja
in
or
lret
pop
cmpsl
fwait
xchg
jl
or
pop
test
add
ret
push
cmpsl
jge
inc
xchg
adc
push
jae
sti
ljmp
add
call
repnz
iret
int3
or
inc
jmp
mov
ret
cmpsb
push
pop
fisubl
jnp
fadds
repz
fldenv
adc
rolb
xchg
loope
xchg
xchg
jmp
adc
bound
imul
popf
repz
xchg
or
cmp
sub
and
cmp
pop
cmpl
mov
outsl
rcrb
ret
pop
dec
jo
sbb
in
outsb
xor
cld
dec
leave
xchg
dec
fwait
mov
insl
stos
push
and
int
mov
lret
ffree
jmp
jnp
sbb
jno
inc
push
pusha
adc
xchg
xchg
lret
mov
xor
arpl
sbb
les
rcrl
cmpsb
inc
inc
mov
ficoms
and
icebp
xor
add
add
jns
cwtl
or
movsb
cmpsl
test
jle
xchg
stc
xor
push
mov
or
add
mov
push
sbb
xchg
cltd
xabort
pop
lahf
lods
fcmovne
or
jecxz
adc
inc
inc
cmpsb
leave
sbb
pop
cwtl
out
mov
int
sahf
inc
fsubrs
dec
sahf
dec
mov
repz
adc
add
xor
pop
cmpsl
shrb
inc
sahf
shrl
cmpsb
ficompl
sbb
pop
lock
jecxz
pop
xchg
pop
sub
pop
xorl
in
cmpb
mov
inc
stos
cwtl
adc
mov
push
lret
inc
std
xlat
dec
sti
iret
xor
lods
movl
mov
repz
fs
mov
and
add
adc
outsl
jmp
pop
push
outsb
shrb
mov
fcoml
xor
sub
sbb
jo
es
out
xchg
inc
add
fiaddl
jnp
stos
or
or
scas
cltd
rcr
subb
push
fisubs
adc
ret
cli
inc
pop
fidivrs
mov
mov
pop
mov
test
and
test
xchg
out
push
mov
cs
mov
push
filds
scas
das
pop
mov
and
push
dec
xchg
in
ret
mov
das
jae
jecxz
push
imul
add
mov
dec
dec
sbb
gs
mov
and
iret
cmp
add
or
nop
xlat
xor
inc
adc
dec
dec
sbb
lret
mov
mov
fs
fbstp
add
mov
cmpsl
jno
lret
push
mov
cwtl
jmp
or
ficoml
stos
xchg
int3
fxch
imul
adc
cld
jecxz
movsl
pushf
push
pop
and
ffree
testl
dec
cmc
cmp
imul
add
mov
add
mov
xchg
leave
daa
mov
cwtl
dec
xor
mov
test
stos
addr16
aad
pop
inc
ret
sbb
test
pop
clc
pop
fdivrl
sti
repz
in
add
addl
fucom
inc
pop
xchg
dec
lret
cltd
sahf
inc
and
xor
mov
iret
pop
adc
imul
int
pop
lods
push
test
out
mov
mov
pusha
xor
xor
inc
sti
int3
add
mov
mov
sbb
inc
sub
or
ret
cmpsb
test
in
bnd
fs
jb
mov
repz
sbb
sub
dec
cmp
repnz
lods
pushf
shll
jno
inc
push
sub
imul
and
jne
dec
jmp
shrb
mov
xchg
jbe
and
push
mov
fsubp
pop
out
jns
into
scas
fists
arpl
pop
adc
pop
jl
pop
clc
xor
lea
xchg
adc
test
fwait
cmp
cmpsb
shrl
push
fisubl
pop
loope
sub
cmpsb
cwtl
cmpsb
test
out
cmp
mov
xchg
or
adc
xorl
lret
cltd
fisubs
mov
out
aaa
jmp
mov
mov
loopne
pop
daa
into
cmpl
lret
mov
divb
mov
cmp
adc
lret
inc
xchg
icebp
cvtpi2ps
in
dec
imul
lret
fldenv
gs
and
pop
popf
rcr
push
cld
mov
fisttps
jbe
das
insb
mov
inc
data16
and
stos
jne
or
imul
pop
jb
mov
sub
stos
mov
ljmp
push
es
leave
in
pop
popa
or
push
push
addl
decl
dec
xchg
leave
daa
xor
dec
out
adc
push
scas
xchg
xlat
xchg
mov
gs
outsl
mov
sub
bound
push
out
icebp
cmpsb
xchg
jp
push
aaa
stos
add
out
cmc
xor
push
adc
subb
fwait
pop
test
ss
xchg
inc
pop
mov
mov
clc
sti
mov
repz
mov
sbb
inc
sbb
mov
mov
popf
rcrb
xor
ret
inc
sbb
rcrb
sbb
mov
fdivrp
test
mov
sub
test
mov
lahf
jae
orb
and
jmp
cld
mov
xchg
or
dec
mov
mov
dec
jno
aaa
fwait
lods
js
xchg
push
or
jmp
popf
fiadds
out
jns
enter
pop
cmc
xor
inc
adc
jnp
lret
js
xchg
cwtl
retw
inc
xor
cwtl
dec
and
jp
fsubs
push
fwait
mov
test
mov
xchg
cltd
arpl
xor
jne
test
xor
and
leave
cwtl
pop
and
mov
push
cmpsl
xor
pop
cmc
cmp
sbb
test
jo
mov
aam
sti
jae
test
lock
mov
add
push
add
mov
add
imul
mov
rcrb
sbb
stos
mov
ja
inc
and
sub
rol
adc
inc
scas
fldt
jmp
mov
mov
pop
jbe
scas
mov
adc
pusha
or
adc
jnp
mov
lods
jne
xchg
insb
mov
push
call
xchg
rclb
insl
add
fmuls
add
cwtl
inc
test
dec
shrl
fstps
sbb
xlat
push
repnz
xlat
insb
imul
sahf
outsl
test
fnstcw
or
ret
push
movsl
in
add
test
mov
or
rol
movsb
cmp
clc
js
test
or
pop
stos
cmp
ss
ret
xchg
jl
pusha
xor
adc
test
out
mov
lock
mov
xchg
add
mov
inc
pop
adc
mov
and
iret
inc
cwtl
mov
inc
cmp
insl
lods
repnz
mov
in
dec
sahf
mov
xchg
mov
sbb
outsl
cmp
xchg
test
mov
pop
js
scas
mov
jge
dec
mov
movsl
xchg
and
jl
rorl
xchg
lods
xchg
arpl
xchg
dec
rclw
inc
jmp
cwtl
filds
jmp
scas
push
pushf
repnz
cmpsb
test
inc
clc
insl
ret
fldcw
sub
add
test
dec
shll
out
mov
xchg
and
daa
inc
sbb
fists
xchg
lea
xor
fldl
mov
sbb
test
jg
sbb
add
cli
inc
or
dec
sahf
inc
pop
fdiv
out
inc
test
sub
pop
xor
sbb
mov
jae
mov
or
add
mov
dec
stos
das
or
mov
subl
pop
and
ja
mov
int3
mov
inc
adcl
xor
lret
sti
sahf
popf
adc
aaa
repz
jo
test
shrb
in
jge
dec
xchg
stos
lds
xchg
push
push
cmp
push
mov
pop
inc
pop
mov
lods
inc
sbb
add
push
incl
xchg
pushf
repnz
cmpsb
test
cmp
or
stc
push
xorl
inc
es
inc
test
and
and
cmp
push
fsubl
insl
cltd
in
scas
ret
jb
fwait
outsl
jae
inc
mov
dec
mov
pop
inc
andb
push
repnz
inc
cmp
ret
movsl
imul
out
jmp
sarb
cld
loope,pt
iret
je
in
ljmp
mov
jae
mov
in
arpl
inc
sbb
sahf
test
ret
test
cmpsb
mov
sub
ret
xchg
pop
add
adc
xor
push
xchg
inc
std
xlat
cmp
mov
divl
stos
cmp
lret
test
cltd
pop
xchg
cmp
jae
les
in
xorb
xchg
popa
ss
stos
jbe
inc
pop
pop
mov
pop
ljmp
sub
lahf
inc
pusha
mov
std
fistpl
jecxz
leave
loop
and
push
andl
cmp
xchg
push
mov
out
out
cmpsb
lret
inc
xchg
imul
pop
jge
mov
sub
xchg
xchg
push
call
jnp
int3
jne
jecxz
mov
add
addl
enter
or
sub
movsb
leave
cs
cmc
fdivrl
lds
mov
mov
jg
dec
loopne
in
aas
testb
push
dec
subl
iret
rorl
mov
testb
lret
mov
sbb
add
imul
sbb
rolb
imull
xorb
test
push
icebp
rorl
mov
dec
jnp
mov
in
lods
cmp
stos
mov
subw
adc
add
pusha
sub
stos
std
mov
mov
mov
test
or
sbb
sub
fucomi
bnd
jg
movl
insb
or
js
test
dec
mov
icebp
or
rcl
sub
sbb
movsl
fimull
push
gs
insl
cmpsb
lock
ret
xor
jb
pop
repz
xchg
mov
enter
les
mov
or
jb
dec
sahf
xchg
inc
push
sahf
cmpsb
mov
stos
std
dec
mov
imul
fistpl
clc
imul
out
adc
pop
sub
xor
mov
add
ffreep
mov
push
xor
and
pop
stos
inc
in
dec
sahf
mov
addb
scas
lahf
popf
in
mov
mov
mov
movsl
xchg
test
add
inc
add
adc
shrb
aaa
jns
inc
pop
lods
ret
frstor
scas
xlat
push
jno
in
mov
cmpsl
mov
arpl
rolb
or
inc
dec
cmp
mov
rcr
mov
inc
xor
push
jmp
roll
jmp
int
fstl
mov
call
sti
xor
jne
jecxz
mov
inc
inc
mov
sbb
pop
fsubrl
in
jne
cmpsl
and
lds
rcrl
pop
adc
popa
pop
mov
arpl
int
jae
mov
jecxz
mov
adc
shll
imul
fwait
ret
sbb
push
rcll
loop
dec
sbb
inc
stos
push
and
out
sahf
popf
int3
out
push
cld
mov
fistpll
jmp
mov
xchg
fsts
add
fcmovbe
cmp
push
outsb
les
push
jb
lods
pop
or
das
cmp
popf
ret
jge
inc
movl
fists
pop
outsb
insb
jae
adc
cmp
cwtl
lock
shlb
ljmp
cmp
fadds
adc
movsb
pop
fisttpl
mov
fwait
inc
mov
xor
mov
out
and
test
and
cwtl
hlt
xor
nop
shrb
in
jne
sbb
shrb
pop
pop
mov
shr
repz
ret
loopne
mov
iret
ffreep
imul
jmp
lock
push
gs
jbe
adc
rcll
fsubrl
cwtl
xchg
sbb
arpl
insb
xchg
xlat
stos
les
xlat
std
lds
pop
movsb
mov
lcall
mov
fists
xchg
stos
pop
cmp
add
cmp
cmp
add
sub
lahf
mov
xor
dec
rcrb
push
pushf
xor
add
js
dec
mov
inc
fwait
out
jl
sarb
dec
lea
add
or
popa
or
arpl
jp
mov
popf
imul
cmp
jbe
fwait
lea
xor
loop
je
pop
sbb
out
mov
inc
shlb
cmp
pop
mov
fdivl
ljmp
icebp
pop
loope
inc
sahf
shrl
mov
push
lock
lock
add
dec
xchg
mov
and
mov
repz
dec
and
iret
inc
mov
xchg
dec
xor
ror
hlt
jb
mov
pop
xchg
ficompl
lods
insb
std
ljmp
ror
arpl
jo
test
push
mov
lcall
shrl
mov
cmpsl
inc
pop
pushf
ret
sahf
fstl
pop
cmpsl
rclb
cmp
in
mov
jmp
test
add
add
inc
sbb
or
sub
mov
sbb
and
insl
out
repz
push
sbb
push
dec
test
int
out
cmp
jecxz
je
or
inc
ds
dec
dec
mov
cwtl
sahf
inc
aaa
les
out
cmc
push
xchg
pop
repnz
orl
pop
adc
inc
stos
sti
imul
idivl
std
iret
fucomip
loope
insl
mov
adc
jbe
add
int
sbb
jno
movsl
mov
rcrb
sbb
les
adc
xchg
repnz
push
ljmp
arpl
cmp
push
fucomp
idivl
sbb
sbb
mov
mov
jmp
add
sub
cltd
fstp
push
xchg
ja
fstl
pop
cmpsl
push
jl
lret
leave
cltd
in
mov
pop
cmc
and
data16
or
pop
sbbb
aam
roll
inc
mov
jno
jp
mov
popf
js
sbbb
inc
cwtl
pop
cmpsl
ret
xchg
std
stc
sub
pushf
adc
add
add
mov
cmp
jmp
cmc
jmp
divl
shrb
jno
mov
pop
mov
xor
xchg
or
lahf
or
mov
pop
jg
imul
push
pop
cli
add
mov
jl
test
dec
aas
data16
rorl
or
pop
xchg
loop
nop
sub
scas
mov
mov
shll
jno
cld
in
xchg
imul
mov
pop
or
shrl
push
push
mov
inc
lcall
pop
mov
test
add
jg
leave
in
mov
mov
leave
cmc
cmp
sub
pop
std
arpl
inc
inc
sbb
ret
dec
xchg
pop
sub
mov
sbbb
xchg
cmp
mov
inc
sbb
push
inc
test
cmpsb
inc
cltd
add
mov
add
pop
int3
push
ficoml
dec
imul
or
popa
in
std
shl
mov
jno
xor
sbb
call
xlat
fcomip
clc
sti
pop
adc
ret
ret
out
mov
pop
sub
push
pop
fiaddl
jno
mov
mov
pushfw
dec
and
jne
les
lahf
stos
and
lds
movsb
shll
pop
jae
testb
mov
lods
iret
enter
add
xchg
lret
scas
pop
repz
addb
push
mov
mov
jne
jb
xor
int
lock
fiaddl
pusha
mov
stc
bnd
push
push
dec
xlat
faddl
sti
and
hlt
inc
aam
js
or
push
stc
jge
jns
dec
and
stc
xor
push
xchg
dec
popf
jp
mov
xchg
imul
inc
popf
mov
inc
test
xlat
pop
repnz
out
push
aam
xchg
mov
mov
cmp
cld
jl
adc
jne
dec
movsb
nop
out
xlat
adc
ret
pop
mov
dec
loopne
addl
std
pop
adc
jno
mov
dec
add
divl
jo
or
int
nop
cmp
add
ret
je
cli
mov
aas
push
xor
rorl
or
dec
and
lds
test
inc
sub
pop
fucom
rep
sub
sbb
jno
add
push
sbb
scas
pop
mov
dec
rcr
xchg
lret
shrb
jnp
movb
cmp
adc
in
cli
mov
scas
inc
cld
cli
inc
out
and
lret
mov
or
mov
xchg
sub
sbb
aad
push
mov
and
fisubl
stos
cmp
pop
jb
fwait
outsl
movnti
shlb
and
sub
sbb
in
hlt
xor
test
outsl
aad
or
adcb
cmc
mov
lds
gs
mov
loopne
ret
mov
outsb
pop
mov
jecxz
pop
mov
imul
lret
add
fs
inc
sbb
int
adc
les
testb
adc
mov
ja
push
push
inc
mov
xchg
jae
lret
dec
push
mov
popf
in
mov
cli
aas
jnp
add
pop
xchg
lret
or
dec
cmp
sub
arpl
ljmp
add
jmp
xor
mov
xchg
test
mov
in
pop
loope
add
cmp
sub
js
rcr
test
imul
stc
cmp
sahf
xor
inc
mov
adc
es
ret
cmp
bound
out
adc
addl
movsb
je
in
sub
mov
sbb
adc
add
ret
inc
int3
cltd
lahf
mov
fdivrl
ljmp
pop
mov
sbb
mov
movb
aas
add
sbbb
sub
sbbl
adc
aad
test
push
and
fldl2e
je
sahf
das
xchg
stc
cli
in
test
push
sub
adc
filds
addb
add
jns
pop
mov
stos
nop
test
xabort
lds
inc
mov
push
pop
xchg
inc
fmul
loope
xchg
inc
mov
mov
sbbb
rorl
in
mov
jnp
inc
push
mov
or
xchg
and
jbe
inc
sbb
cmpsb
fists
jb
inc
aad
xchg
mov
mov
fwait
push
leave
xchg
enter
js
or
cmp
jmp
adc
rorb
int3
fisttps
inc
sbb
pop
pop
rclb
fistpl
push
cld
das
leave
and
pop
mov
mov
orb
inc
sbb
les
aad
inc
sbb
test
ficompl
jge
les
imul
lds
cli
xchg
sub
lahf
sbb
stc
inc
pop
cld
test
jo
xchg
mov
aaa
cld
jo
test
xchg
imul
loop
jl
push
sar
add
pop
cld
and
cmpsb
popf
adc
cmpsl
dec
insb
es
incb
pop
test
jmp
push
pop
jb
add
call
icebp
inc
sti
pop
repnz
and
mov
jge
fwait
cmp
mov
into
push
mov
xchg
ds
fadd
pop
fsubl
jo
loop
aaa
and
es
rorb
cmpsl
jl
clc
nop
test
and
addb
adc
inc
sahf
sub
xchg
sbb
inc
push
std
into
sbb
out
jno
or
pop
dec
or
imulb
inc
xchg
add
jno
mov
mov
cmp
add
sbb
inc
mov
xchg
sbb
fnstenv
in
dec
mov
cmp
mov
xchg
add
cwtl
pop
movsl
or
xor
add
jecxz
lcall
sbb
cld
or
sbb
out
js
inc
and
pop
add
jo
cs
cld
dec
sarb
mull
addl
cmpl
fwait
jae
fistps
cmp
jp
gs
popf
inc
mov
int3
orw
add
test
jle
push
dec
mov
rcll
in
into
hlt
call
out
nop
je
loopne
ret
mov
bound
mov
lret
jecxz
aas
rcrl
adc
call
adc
ret
gs
push
lods
xchg
sub
adc
push
and
adc
sbb
lods
xchg
pop
jae
push
clc
mov
mov
pusha
adc
sbb
mov
inc
sbb
sbb
imull
jne
imul
adcb
fcomps
cltd
lods
jno
shl
stos
pop
scas
movl
push
cmp
imul
mov
sbb
cwtl
or
mov
mov
daa
mov
pop
test
mov
dec
mov
pop
mov
gs
jge
sti
decb
mov
inc
inc
mov
inc
push
sub
and
imul
ret
mov
lcall
repz
daa
xor
mov
or
std
sbb
sbb
cld
repz
flds
dec
or
or
mov
and
fs
movsl
mov
ret
outsb
xor
test
mov
popf
lea
lods
jecxz
data16
fisubrs
fdivrl
add
sbb
cld
jo
or
mov
outsb
shrb
mov
lods
pop
xchg
push
mov
ret
lahf
ficoms
fwait
div
loopne
popf
scas
inc
fwait
leave
loop
jne
fsts
xchg
popl
or
add
andl
dec
mov
adc
test
mov
fisubs
mov
cmp
call
jnp
pop
mov
add
in
sub
loop
out
mov
cltd
sahf
cmpsl
and
sahf
dec
mov
into
add
ret
arpl
mov
addr16
mov
lret
in
icebp
pop
xchg
sahf
repz
cmpsb
rcrb
cmpsb
sub
cmpb
sbb
arpl
adc
ret
insb
cmp
cmp
pop
cli
push
imul
imul
xchg
adc
ljmp
popf
lret
outsl
mov
pop
fbstp
les
das
xor
jo
movsl
adc
fstpl
mov
clc
jmp
popa
aad
mov
iret
fwait
outsb
mov
fdiv
push
inc
mov
fiadds
out
or
sub
pop
mov
xchg
nop
roll
mov
fwait
cmp
lock
sub
leave
push
insl
cltd
fcmovnbe
xchg
cltd
mov
cmpsb
jnp
mov
dec
inc
adc
dec
call
push
or
int
jle
push
dec
mov
push
cmp
mov
into
pop
stos
pop
lods
cmp
cmp
mov
clc
sti
dec
mov
jnp
jae
pop
mov
pop
push
lock
push
dec
bound
pushf
cmpsb
xchg
decb
shll
stos
mov
add
lds
pop
movsb
ret
mov
stos
xchg
jae
lret
rorl
pop
rcr
cmp
in
cs
mov
mov
xchg
rorl
xchg
fildl
imul
sar
aad
xor
push
enter
mov
bnd
int3
scas
fcompl
leave
loop
adc
mov
inc
shlb
push
popl
aaa
lods
addb
inc
xchg
mov
xchg
sbb
movsb
cld
clc
cmpsb
fsubrs
ret
ret
fld
popa
mov
out
cmp
push
test
out
sub
sbb
nop
dec
mov
mov
push
scas
cwtl
js
sahf
inc
cmp
out
mov
call
adc
pop
adcb
repz
sti
ja
add
sahf
repz
orb
inc
ret
mov
inc
rolb
and
iret
inc
sbb
insb
dec
xchg
stos
iret
in
mov
mov
stos
mov
int3
data16
lods
mov
mov
add
iret
ljmp
inc
sbb
sub
pop
stos
jge
dec
movsl
or
pop
mov
xchg
sahf
fstp
push
xchg
ja
cs
xor
mov
mov
data16
mov
add
arpl
rolb
outsl
rclb
aam
adc
and
push
fsubs
push
in
xor
sbb
pop
cltd
jno
mov
lds
jnp
pop
add
mov
dec
cmpsl
lcall
cvttps2pi
popf
pushf
sub
shlb
iret
int3
lcall
mov
call
outsl
jmp
sahf
jle
iret
fists
jno
es
add
add
push
mov
mov
sarb
sbb
push
jmp
lds
push
mov
sub
dec
sbb
scas
fldt
js
cmpsb
xchg
test
dec
mov
or
adc
xchg
stos
mov
push
mov
dec
dec
test
lods
xor
aad
in
scas
movl
fistps
xchg
loop
mov
mov
or
es
or
xor
push
stos
push
sbb
dec
and
sbb
es
push
insl
fwait
insl
lea
cmp
clc
cmp
jne
shr
mov
int3
inc
push
xchg
dec
lret
mov
cltd
sahf
inc
xor
scas
mov
cmc
hlt
imul
mov
int
pop
lea
pop
add
sub
mov
iret
lock
push
out
jo
or
add
lea
sbb
test
test
push
aad
cmp
sbb
adc
test
mov
sbb
and
push
cld
mov
shr
cmpsb
cmpsl
xchg
gs
pop
cmp
repz
dec
stos
or
dec
jg
mov
sub
aaa
std
xor
push
lods
mov
push
leave
xchg
mov
or
mov
scas
movl
xchg
loop
add
cmp
pop
sub
jmp
adc
or
cmp
pusha
inc
cwtl
pop
out
xor
push
sub
fstl
pop
sub
gs
inc
lahf
and
out
mov
mov
in
hlt
or
xchg
xchg
jmp
icebp
mov
mov
leave
ds
and
xor
mov
lods
divl
sub
mov
push
lahf
lds
ds
hlt
mov
add
add
out
rclb
mov
xor
jns
xor
mov
imulb
adc
mov
sarl
test
dec
in
ja
movsb
fldcw
insl
ljmp
cmp
xor
ret
add
addb
int
jmp
stos
std
adc
sub
mov
jne
jbe
lods
and
mov
ja
push
dec
sub
loop
sub
jo
or
sarb
jb
adc
test
xchg
inc
stos
adc
fisubl
xchg
dec
movsb
inc
sbb
or
cmp
jne
jecxz
mov
pop
pop
mov
mov
hlt
je
in
stos
jecxz
cmc
or
aam
in
dec
fldcw
shl
pop
and
imul
into
aam
sti
sub
jnp
mov
mov
mov
jae
mov
add
adc
movsl
stc
inc
mov
xchg
xor
mov
xor
rorl
shr
push
sub
sub
sbb
mov
leave
js
mov
xchg
imul
popf
lds
mov
sub
xor
les
sbb
inc
mov
inc
je
jl
pusha
test
ficoms
mov
fists
sti
xor
adcl
mov
test
mov
mov
cmp
or
and
xchg
mov
ret
pop
test
add
mov
push
pop
insb
arpl
iret
jb
fwait
outsl
lar
mov
cltd
push
add
cs
sub
mov
into
jmp
jbe
sbb
fadd
fldcw
arpl
fisubl
movsl
loopne
hlt
mov
repz
sti
pop
push
iret
ret
ljmp
cld
or
mov
repnz
xchg
pop
add
dec
inc
sbb
sub
adc
aam
scas
add
fsubrl
inc
in
xlat
dec
mov
sub
stos
cmpsb
mov
jmp
jae
into
je
mov
jl
leave
shrb
inc
sbb
or
xchg
stos
mov
js
cmp
stc
lahf
int
test
rol
pusha
jp
mov
jns
adc
sbb
loop
jb
rclb
inc
shlb
add
dec
xchg
dec
test
xor
push
fsubs
xchg
mov
pop
pop
cmpsb
inc
xchg
xchg
cmpsl
repz
lahf
out
xchg
or
enter
xchg
adc
sbb
push
adc
mov
lret
cmpl
inc
mov
into
pop
stos
test
lea
daa
mov
repz
ds
lock
mov
sbb
jg
add
inc
or
jg
cwtl
test
cwtl
lret
cmp
in
pop
xor
adc
mov
in
xlat
lea
test
mov
scas
xchg
and
jae
push
clc
mov
mov
sbb
sarb
stos
pop
mov
movsl
sbb
imul
mov
xchg
pop
sbb
lods
mov
aad
mov
movb
ficomps
out
js
adc
js
mov
mov
adc
mov
sti
jl
mov
jmp
push
mov
mov
fdivrl
mov
xchg
dec
cmp
bound
adc
enter
push
int3
es
hlt
pop
fldcw
jne
dec
jg
sub
mov
xor
mov
repz
push
hlt
mov
in
fisttps
jnp
pushf
shl
arpl
inc
or
add
out
jno
dec
and
shll
orb
adc
mov
sbb
sub
inc
fists
mov
mov
daa
dec
popf
lret
add
xchg
dec
bound
es
ljmp
adc
sub
mov
aad
mov
adc
jle
sub
mov
pushf
cli
sti
cmpsb
adc
subl
shll
xchg
or
aam
mov
je
rcll
push
daa
pop
popf
mov
mov
jnp
inc
and
xstore-rng
cmpsl
ret
out
mov
std
shl
clc
aam
ret
cltd
push
xor
test
cmc
jbe
test
and
loope
or
dec
mov
test
adc
arpl
stos
ds
pop
test
cmp
mov
clc
sti
pop
pop
iret
ret
lea
mov
mov
andb
movsl
rcrl
movsl
mov
ret
jle
aad
dec
sbb
outsb
mov
sub
test
jmp
mov
ljmp
popf
les
jl
mov
lret
push
leave
or
jae
stos
xchg
stos
std
xor
rclb
stos
shl
adc
fld
pusha
jp
scas
jg
enter
jg
mov
jecxz
jo
sub
popl
mov
inc
xor
dec
aam
jno
mov
movsl
ret
enter
mov
sbb
cmovae
xchg
ds
loopne
je
clc
cmc
or
push
xor
push
and
das
lods
fisubrs
or
in
aad
xor
pop
push
rclb
imul
popf
mov
out
pop
in
imul
and
mov
repnz
negl
sbb
jecxz
sbb
push
jmp
lds
jns
test
cli
movsb
leave
test
lea
test
shl
cmpsl
xchg
fcoms
sbb
cmp
mov
add
or
or
push
outsb
icebp
mov
mov
pop
jmp
jl
cltd
loope
inc
mov
scas
loop
mov
ss
fdiv
sti
ret
xchg
rol
push
mov
inc
aam
clc
or
sub
addr16
xchg
dec
xchg
and
data16
push
sub
pop
test
gs
imul
push
fiaddl
sbb
gs
mov
mov
cmp
xchg
enter
hlt
pop
cmp
dec
cmpb
test
dec
mov
test
rol
pop
arpl
sbb
lcall
jae
jle
cmc
ds
and
xor
add
pushf
sbb
cltd
insb
pop
shl
rcrb
mov
jbe
push
pop
mov
push
pop
jmp
cmpsb
leave
dec
dec
sbb
inc
mov
push
stc
mov
cld
sub
loopne
loopne
xchg
test
sbb
inc
sbb
inc
or
cmp
std
xor
popa
pop
jns
jecxz
mov
aad
roll
orl
add
xlat
push
jnp
adc
mov
sarb
out
es
lock
or
lret
aam
mov
test
push
movsl
lods
sbbl
daa
push
test
fsubrs
pop
jmp
sbb
jne
sbb
ret
aad
cli
and
mov
sbb
add
mov
jmp
mov
imul
sahf
dec
mov
icebp
das
int3
lcall
mov
lods
sti
filds
test
ret
fiadds
mov
pop
and
test
inc
or
add
insb
push
pushf
mov
outsb
inc
mov
icebp
cmp
xlat
stos
test
cmp
fldcw
push
lret
pop
mov
xchg
lret
add
lds
mov
ja
inc
scas
jne
dec
xchg
in
mov
cmc
lcall
mov
adc
cmpsl
fucomi
xchg
pop
scas
movl
and
or
sbb
stos
lock
adc
cmpsl
test
xchg
and
or
add
adc
add
insl
push
dec
test
lods
repz
enter
jg
fs
das
xor
jecxz
leave
sbb
and
mov
dec
mov
lock
cmp
mov
arpl
int3
bound
lods
imul
mov
xchg
sub
pop
cmp
ret
ficoms
jnp
mov
add
mov
aam
aas
das
and
mov
sbb
rorl
fldenv
inc
mov
jge
shll
push
sbb
add
pop
mov
daa
sbb
mov
addb
int3
clc
into
cmp
jne
push
andl
shr
sbb
jmp
xchg
pop
scas
inc
xlat
sti
ret
and
andl
mov
iret
xchg
mov
inc
repz
push
cs
xchg
and
rol
fistpl
pop
test
jae
lock
subb
fsubs
pop
fidivrs
jb
rcll
add
push
mov
mov
insb
push
push
jp
dec
mov
fcomps
in
cmc
hlt
jnp
xor
mov
int
pop
movsl
inc
lock
mov
clc
sti
mov
jecxz
pop
nop
jo
mov
inc
ret
sbb
add
rorb
fwait
inc
mov
dec
cmp
stos
enter
inc
and
mov
leave
test
mov
xor
jp
mov
jno
inc
push
or
pop
mov
das
sbb
frstor
pop
outsl
shlb
mov
dec
push
sbb
mov
jno
aad
jg
into
fcmovne
pop
test
int3
mov
icebp
or
dec
push
cwtl
clc
sbb
insb
clc
jp
push
subl
adc
push
sarb
call
xor
jmp
inc
fucom
stos
cmp
dec
mov
sti
xor
stc
jb
add
mov
hlt
push
mov
push
dec
lret
cltd
mov
push
mov
into
pop
mov
xor
mov
fistl
xor
cmp
rcrl
iret
fwait
clc
in
jno
imulb
jo
imul
mov
xchg
int3
cwtl
lret
inc
sbb
test
lahf
add
les
fsubrs
jmp
stos
fucomp
je
movsl
lods
cmp
pop
insb
test
ret
or
push
scas
push
add
rorl
adc
xchg
sbb
lods
fmuls
cmp
jo
and
cmp
in
pop
loope
dec
add
ret
andl
fsubrl
sbb
inc
mov
adc
mov
inc
jecxz
cltd
jp
or
xchg
adc
or
pop
push
and
xabort
pop
fisubs
add
mov
je
mov
pushf
rcll
ror
inc
sbb
cs
sub
jns
out
mov
les
dec
pop
aad
jmp
sbb
ffreep
imul
rcr
ja
inc
mov
adc
ret
pop
add
ljmp
xchg
and
mov
sbb
ret
outsb
xor
mov
incl
mov
fisttps
inc
sbb
movl
cmpsl
icebp
add
inc
fdivl
dec
and
pop
inc
sbb
xchg
add
xchg
jl
rorl
stos
ficompl
mov
lret
xchg
jge
mov
add
dec
pop
add
sbbl
xchg
cmp
repnz
add
es
cmp
add
mov
rorb
jb
shll
scas
add
mov
xlat
stos
xor
mov
cmp
mov
mov
cld
sub
enter
or
sbb
and
cmp
adc
jno
mov
and
xor
pop
das
push
mov
loope
mov
jns
cmp
in
mov
pop
mov
dec
sbb
test
cli
imul
in
jecxz
shlb
jno
les
mov
xor
gs
sub
push
pop
dec
push
push
or
fcoms
cld
lds
inc
sbb
fsts
mov
in
jge
sub
xchg
sbb
dec
push
inc
outsb
fcoml
fistl
and
dec
mov
jno
push
repz
pop
push
inc
repz
aam
into
inc
js
add
mov
dec
sbb
add
out
dec
push
repnz
xrelease
cli
pop
fcoms
fcmovnbe
xchg
cltd
out
divl
fnsave
xchg
push
mov
les
loop
hlt
xchg
mov
cltd
sahf
jg
shr
mov
cmc
hlt
imul
dec
mov
lret
arpl
mov
cmpsl
ret
loopne
pop
pop
dec
pop
dec
adc
add
aam
or
mov
add
mov
aas
cli
add
rorl
fldl
push
xchg
jecxz
std
sbb
stc
lret
xor
xor
dec
sbb
push
divl
stc
inc
sbb
je
mov
sub
cld
jo
xchg
sar
stos
lds
ret
cli
movsl
mov
movsb
push
sub
jne
adc
sub
cld
or
popf
scas
cmp
sbbl
cmp
or
fstpl
sub
push
mov
add
and
addr16
pop
push
mov
lahf
jne
jnp
jnp
stc
sbb
prefetch
or
dec
mov
xor
das
xchg
enter
aam
mov
adc
leave
pop
jp
mov
mov
mov
ficoms
sahf
sub
xchg
sbb
test
fwait
sbb
notl
cmpsb
pop
pop
addb
lea
sbb
add
add
push
andb
dec
hlt
sub
jbe
and
iret
cmp
sbbl
shll
aad
test
lcall
mov
jp
stc
mov
cld
push
sub
add
sub
fwait
rclb
pop
mov
in
dec
outsb
rcl
fcmovnu
xchg
sbb
sar
sbb
rcrl
push
jle
mov
repz
rclb
add
dec
mov
rcr
cmp
gs
push
les
jbe
scas
xor
test
insl
in
mov
pop
fdivrl
dec
xchg
jl
or
enter
loop
cld
pop
sub
add
jb
out
adc
or
movsb
jge
dec
mov
andl
mov
or
add
cmpl
pop
and
pop
insb
mov
loop
enter
mov
mov
cltd
mov
and
push
sub
pop
cmp
mov
mov
pop
push
clc
mov
mov
push
sub
popa
fs
fbstp
ret
sbb
lock
or
out
push
sbb
or
in
jge
stos
sahf
pop
stos
cmc
xchg
mov
sbb
xchg
jbe
cs
jnp
aad
mov
out
lock
push
js
ljmp
inc
pop
adc
cwtl
inc
xchg
or
xchg
pop
popf
imul
mov
aad
mov
pop
cltd
add
fwait
ret
pop
cmp
bound
and
ret
inc
add
subl
or
outsb
imul
fimuls
scas
test
stos
roll
rcrl
mov
and
loope
mov
loop
lock
jns
hlt
inc
add
inc
adc
pushf
pop
xchg
adc
xchg
and
adc
inc
test
push
push
js
test
pop
sbb
xor
stos
mov
fldl
dec
push
cld
mov
sbb
dec
mov
push
js
pop
sub
ficoml
das
sbb
fisubl
inc
add
mov
mov
fdivp
shrb
pop
mov
xor
insl
fcmovnb
push
call
or
jo
jecxz
aas
pop
sub
andl
rol
pop
mov
dec
xchg
and
insb
and
add
xchg
stc
xchg
and
cmp
outsb
and
std
bound
loop
mov
or
inc
push
xchg
dec
mov
cwtl
mov
mov
cmc
mov
rol
idivl
call
jne
punpckhwd
xchg
jge
ffreep
pop
lock
hlt
mov
fildl
addb
sub
aam
or
mov
mov
inc
mov
inc
cmpsb
dec
sbb
outsb
test
fsubrs
push
in
xchg
pop
mov
mov
mov
dec
mov
push
add
push
sbb
shll
inc
sbb
or
movaps
lret
pop
mov
pushl
iret
mov
jno
lds
xchg
out
ds
loop
outsb
mov
add
inc
sub
mov
stos
push
sbb
add
fwait
pop
cmpsl
addr16
xchg
xlat
xchg
mov
fwait
insl
cmovae
int
xchg
shlb
cltd
je
or
int3
xchg
dec
daa
fwait
jns
fisubrs
cs
cmc
fsubrl
xchg
repz
mov
sbb
shll
mov
inc
loope
out
mov
lods
mov
loop
pusha
lret
jecxz
mov
adc
sbb
testb
movsl
jg
push
test
cwtl
lret
inc
sbb
rolb
xlat
stos
les
sbb
lret
sub
cmpl
jb
lods
xchg
test
inc
nop
jae
dec
stos
or
adc
adc
fcomi
mov
pop
movsl
pop
xorb
ficoms
pop
out
pusha
mov
jmp
fists
jl
addr16
js,pt
inc
adc
or
sub
push
mov
inc
xchg
jmp
mov
enter
testb
call
jo
push
jne
mov
or
mov
dec
mov
mov
popf
out
sub
lds
adc
jbe
mov
popa
mov
jle
pop
movsl
dec
call
fwait
sub
clc
sti
fldl
jnp
mov
mov
sarb
lret
inc
mov
adc
sub
fs
jb
push
mov
inc
fists
lods
sahf
popf
xlat
lods
lahf
scas
mov
mov
je
lods
jae
aam
jl
roll
jge
scas
xchg
ficoml
lcall
pop
aas
adc
dec
pop
pushf
ret
stc
mov
xor
imul
repz
or
xor
call
arpl
popl
mov
and
outsl
sbb
mov
adc
mov
leave
or
inc
xchg
push
insl
fwait
push
fistpl
cmp
call
jnp
pop
add
cs
lahf
push
adc
insl
fcmove
jmp
xchg
imul
lods
idiv
sub
imul
inc
jmp
clc
cmp
sbb
rcrb
mov
push
sarb
cmp
lret
stc
and
stc
pop
sbb
push
push
clc
xor
call
jecxz
mov
mov
insl
mov
xchg
push
nop
fnstsw
xchg
dec
mov
fcompl
cmp
inc
lcall
movb
push
push
fmull
jmp
cmpsb
enter
in
or
popf
scas
push
sub
cmp
add
or
addr16
test
or
les
xchg
and
test
sub
aam
ds
enter
fldl2t
inc
fnstsw
sbb
in
jb
pop
fdivrl
sti
repz
sub
in
add
sahf
or
jne
dec
rcrl
mov
shl
mov
pop
loopne
lret
jo
jnp
sub
mov
pop
lock
and
lock
push
lods
jo
or
add
lea
sbb
adc
scas
nop
sub
lret
movsl
ret
popf
faddl
mov
dec
sub
mov
inc
lahf
push
sub
lods
lahf
popf
rep
lahf
test
repz
je
lods
jae
aam
cmp
rorl
daa
es
mov
mov
push
fadd
sti
mov
imul
lds
xchg
test
repz
loop
inc
shlb
or
mov
movsl
cli
dec
aam
cmpsl
xchg
cs
push
mov
daa
movsb
pushf
mov
jl
mov
push
pop
scas
arpl
call
jo
push
jne
mov
add
cs
sub
mov
into
jmp
jbe
fsubs
fadd
fldlg2
shll
mov
ret
loopne
in
mov
jb
cmp
jae
jecxz
pushf
mov
bound
shr
cmc
cld
imul
lahf
ljmp
dec
xor
mov
mov
lds
jp
leave
test
fnstsw
mov
lods
xchg
cmpsl
xchg
int3
xchg
pushf
pop
sbb
mov
and
lds
imul
xchg
int3
dec
test
sbb
jecxz
fstl
mov
lahf
scas
cli
int3
js
mov
dec
sub
loop
add
rclb
fildl
inc
inc
sbb
rorb
xor
sbb
pop
inc
cwtl
dec
xor
inc
add
mov
sub
and
insl
lahf
out
out
add
fnsave
add
enter
xchg
enter
hlt
mov
xchg
sub
adc
and
sbb
gs
ss
popf
jbe
mov
mov
ss
loopne
pop
push
dec
or
mov
lret
jecxz
mov
or
add
lea
sbb
test
test
push
aad
cmp
sbb
adc
test
push
cli
sub
mov
and
arpl
jae
push
mov
rcrl
dec
mov
addr16
lock
out
push
sbb
stos
mov
stos
xchg
fistl
fisubl
in
fwait
lods
divb
lret
mov
std
or
sbb
iret
js
jle
scas
je
push
cmc
loope
add
mov
andl
fnstcw
xor
or
mov
inc
xchg
inc
mov
and
cmpsb
fsubrs
pop
fidivrl
jnp
cmp
fwait
jns
sti
mov
scas
mov
pop
mov
add
in
sub
loop
out
mov
cltd
sahf
cmpsl
and
sahf
dec
mov
into
add
ret
arpl
mov
addr16
mov
lret
in
icebp
pop
xchg
sahf
repz
cmpsb
rcrb
cmpsb
sub
cmpb
sbb
arpl
adc
ret
insb
cmp
cmp
pop
cli
push
imul
imul
pushf
adc
ljmp
popf
lret
outsl
mov
pop
fbstp
les
das
xor
jo
movsl
adc
fstpl
mov
clc
jmp
test
sub
xchg
fists
repz
mov
mov
nop
dec
test
add
aaa
rclb
roll
mov
fwait
cmpsb
addr16
fdivr
push
fisubl
and
call
cmpsb
inc
cltd
fs
mov
enter
rcrb
or
push
dec
sub
loopne
cmc
mov
mov
lods
ds
movsl
mull
int
lcall
ja
lret
aas
jno
xchg
jl
lahf
in
clc
pop
pop
jge
shr
aas
mov
shr
sbb
add
insl
movsl
ret
inc
mov
sarl
fst
dec
lahf
mov
push
and
test
movsb
fldcw
push
sub
fcmovnu
jmp
cmp
pop
adc
mov
jo
xchg
adc
jl
roll
dec
scas
dec
fwait
lods
jle
mov
hlt
pop
pop
out
pusha
mov
leave
ds
jae
insb
inc
fwait
out
js
and
mov
out
sub
lahf
mov
dec
mov
in
dec
sarb
push
xchg
imul
sub
cmpsl
movsl
and
xchg
pop
sbb
bound
and
mov
enter
rolb
dec
das
lcall
jmp
lret
arpl
into
add
ret
fistl
mov
cmpsl
push
pop
jmp
clc
outsb
out
cmpsb
divl
es
and
mov
pop
nop
out
test
xchg
inc
sbb
rcrb
xchg
xchg
pop
in
and
js
xchg
dec
outsl
mov
cmp
mov
std
mov
outsl
repz
mov
or
jge
dec
movsl
sbb
ficomps
mov
sar
cmpsl
push
imul
aad
mov
scas
xchg
outsb
mov
out
js
xchg
mov
dec
mov
adc
rolb
adc
and
xor
movsl
ret
inc
xchg
fwait
mov
lahf
bound
jmp
jne
jecxz
jmp
inc
inc
orl
test
aad
xchg
mov
dec
push
adc
pop
add
aas
xchg
cld
into
pop
test
ss
sub
pop
mov
in
mov
out
sti
mov
jns
hlt
roll
imul
stos
jno
dec
and
xchg
and
xchg
xlat
stos
mov
mov
xor
shl
mov
jp
mov
arpl
aas
jl
or
rsm
or
inc
jmp
xchg
stos
and
or
iret
fdivp
shrb
lret
lea
aad
out
scas
xlat
bound
adc
out
js
shlb
sbb
arpl
rolb
out
rclb
dec
mov
or
inc
inc
mov
pop
cmpsb
enter
and
jne
outsl
mov
test
pusha
mov
incb
inc
mov
or
fisubrs
push
mov
mov
popf
repz
ss
mov
loopne
pop
push
inc
mov
jecxz
ds
mov
lock
pop
push
jo
fsts
inc
inc
sbb
inc
sub
iret
cmpsl
leave
out
pop
and
push
lds
mov
sbb
outsb
mov
fsubrs
push
and
incl
xor
xchg
xchg
arpl
pop
pop
cmp
mov
xchg
inc
scas
cmc
add
pop
sub
dec
sbb
imul
xchg
iret
cmpsl
mov
lods
xor
mov
icebp
sbb
out
faddl
aaa
mov
inc
shlb
push
popl
mov
dec
sub
fwait
xor
jno
cwtl
mov
lahf
insl
cmovae
xlat
inc
cmp
dec
xor
loopne
je
jnp
or
adc
push
dec
stos
dec
dec
mov
loopne
inc
nop
push
dec
imul
mov
lods
movhps
cmp
mov
ret
sahf
mov
enter
sbbb
mov
sbb
adc
cmpsl
mov
or
clc
movl
loop
repnz
test
cli
mov
sub
xchg
js
jae
jge,pn
lahf
fldl
idivl
fs
sub
rsm
or
inc
jmp
xchg
stos
and
inc
mov
mov
pushf
icebp
shrb
int3
lods
decb
pop
out
pusha
mov
fsub
icebp
jnp
insb
inc
fwait
push
rorb
or
inc
sbb
popa
rcr
das
rorl
mov
or
add
mov
inc
and
pop
cltd
jno
test
stos
in
mov
fucompp
mov
int3
xchg
dec
daa
fwait
jns
fisubrs
daa
jmp
mov
cwtl
repz
adc
pusha
stc
stc
int
pop
movsl
popa
hlt
setg
lret
loopne
icebp
pop
pop
iret
push
subb
jg
out
push
lock
pop
sub
cwtl
cmp
adc
ret
pop
cmp
cmpsb
xchg
adc
mov
inc
std
or
inc
sub
or
ljmp
popf
test
pop
jmp
dec
mov
add
push
scas
xchg
ficoml
lahf
pop
sbb
ja
lret
inc
mov
rclb
pop
fstl
pop
cmpsl
rcl
mov
scas
cli
int3
push
dec
sub
loop
add
rclb
mov
mov
add
inc
inc
pop
adc
fsubs
dec
mov
adc
test
sub
cmp
mov
inc
pop
jecxz
or
out
fwait
mov
lea
xor
mov
scas
add
dec
repz
push
dec
and
push
out
mov
mov
test
fsubr
mov
lods
mov
mov
fucomi
repz
cmp
or
pop
push
jae
mov
jecxz
add
mov
dec
pop
aas
mov
cmp
sbb
jmp
sbb
dec
adc
fsubl
fsubrl
inc
mov
inc
test
mov
scas
xlat
aad
fnstenv
popf
lret
mov
cmp
ret
add
setnp
xchg
addr16
int3
insl
movsl
sbb
test
fwait
lods
adc
shrb
jnp
movb
jbe
lahf
rol
push
es
leave
cmc
and
adc
or
dec
sub
sub
and
inc
cwtl
shrl
adc
jecxz
mov
inc
mov
xchg
lret
jb
and
enter
out
lcall
xchg
lock
loop
aam
clc
push
shrl
in
rcll
sarl
test
sahf
ret
mov
pushf
mov
mov
xchg
setg
sbb
mov
and
push
xchg
leave
icebp
lock
sahf
ret
mov
cltd
mov
xchg
rcrl
xor
cwtl
dec
sub
mov
ss
add
sbb
outsl
jno
mov
sbb
dec
mov
mov
popf
lret
mov
sub
fsubrs
daa
lcall
dec
movsl
adc
arpl
cmp
inc
pop
cld
cmp
adc
dec
mov
mov
mov
popf
fists
push
mov
js
add
andl
or
sub
mov
daa
lods
addb
adc
popf
dec
sbb
adc
add
fisubs
mov
or
jne
sub
inc
enter
hlt
mov
dec
dec
stos
fwait
jns
fiadds
shlb
jbe
fimull
xorl
pop
mov
imul
mov
pop
mov
or
jnp
mov
cltd
sbbb
lock
enter
xlat
mov
aas
and
ljmp
test
mov
dec
mov
fists
cli
stos
lahf
cli
jle
inc
fldt
inc
mov
xchg
int3
jno
dec
and
lret
inc
cmp
es
movsb
fisubrl
or
sub
fistl
mov
lds
stos
mov
mov
jge
mov
add
pop
iret
out
js
loope
mov
inc
aam
es
and
popl
cwtl
adc
dec
and
cld
lock
sub
fidivrl
stos
lds
cmpsl
ret
xchg
fnstsw
fwait
outsl
push
or
out
ja
sti
push
adc
adc
jb
dec
leave
sbb
adc
imul
sahf
dec
mov
lcall
mov
loopne
pop
push
rolb
iret
pop
lret
fucomi
lock
add
imul
ret
repz
xchg
and
sbb
jns
or
test
dec
sbb
test
jne
fucomp
mov
fldt
je
mov
pusha
mov
adc
adc
mov
dec
mov
lds
outsb
outsb
fcomi
mov
pop
scas
and
int3
lods
decb
test
in
lahf
repz
popa
jno
mov
dec
in
enter
or
rcr
fs
add
call
adc
mov
pop
pop
cmpsb
inc
xchg
xchg
cmpsl
jnp
imul
mov
pop
fldz
inc
test
mov
jb
add
cmp
xchg
xchg
inc
stos
mov
int
inc
sub
xlat
sub
sahf
dec
add
xor
mov
repz
imul
outsl
jmp
jae
mov
jecxz
inc
lock
jo
or
add
pop
loop
leave
sub
aad
inc
sbb
mov
imull
in
test
clc
fldenv
mov
pusha
cmc
mov
mov
popf
lret
lret
jno
inc
xchg
imul
mov
or
pop
mov
movsl
or
arpl
inc
mov
xlat
enter
push
jbe
mov
imul
pop
inc
call
popf
scas
push
jmp
xchg
lret
call
jle
inc
sbb
mov
dec
xchg
mov
pop
andl
aad
push
xchg
and
es
jae
and
lods
insl
xchg
enter
stc
out
xlat
pop
repnz
loop
je
jnp
fsubl
adc
inc
dec
stos
inc
mov
lret
dec
adc
loopne,pn
push
mov
dec
xchg
jmp
call
scas
mov
xor
int
dec
lock
hlt
jb
es
add
mov
lock
adc
andb
insb
dec
xchg
stos
iret
in
mov
mov
stos
mov
int3
data16
lods
mov
mov
je
std
push
test
ret
or
addb
mov
popf
insl
mov
lret
mov
adc
lahf
xchg
sbb
ficoms
and
dec
pop
mov
mov
repnz
sti
arpl
dec
inc
cmp
rolb
stos
mov
push
ljmp
inc
nop
scas
cmp
xchg
mov
mov
pop
fidivrl
icebp
test
daa
dec
aad
sti
mov
cmp
mov
enter
outsb
imul
mov
scas
ds
fistpl
rol
loopne
pop
inc
iret
fucomip
in
lcall
iret
ret
fdivp
jnp
cmpsb
mov
addb
xor
push
adc
lret
lds
stos
mov
adc
nop
aaa
adc
inc
loopne
dec
sbb
inc
mov
aad
pop
popf
shrl
ljmp
push
mov
fsts
pop
out
mov
dec
jg
mov
inc
sub
xchg
fcmovbe
mov
out
push
lods
movb
ret
mov
inc
sbb
scas
enter
icebp
repz
inc
fwait
data16
and
xchg
outsb
inc
xor
jb
adc
roll
dec
sbb
jmp
movsb
dec
mov
mov
sbb
xor
rep
or
aad
or
out
enter
mov
push
adc
jp
push
mov
fsubr
push
adc
pop
push
sti
cmc
fisubrs
pop
xor
pop
adc
pop
idivl
bound
mov
jecxz
inc
add
pop
sub
inc
pop
adc
insl
xchg
ret
xor
cwtl
and
xor
cs
outsb
xchg
and
js
cltd
dec
outsl
mov
inc
mov
je
popf
int3
cmpsb
dec
cmpsl
xchg
test
add
or
adc
and
mov
mov
loop
jecxz
mov
inc
sbb
scas
jg
leave
in
mov
cltd
loopne
and
xchg
or
mov
push
in
out
ds
push
xchg
inc
cwtl
dec
and
shll
cmpsl
mov
xchg
dec
outsb
and
loop
cs
xlat
xchg
lret
push
adc
cli
fsubp
mov
out
inc
ds
dec
inc
mov
push
jnp
mov
add
mov
scas
ds
arpl
jo
dec
dec
out
loopne
pop
pop
dec
or
out
sti
mov
dec
clc
add
daa
test
movl
xchg
iret
cmpsl
push
loope
int3
addr16
lock
shll
stos
mov
adc
mov
inc
mov
nop
arpl
jae
pop
push
dec
dec
popf
lret
mov
or
nop
jmp
sub
cmp
mov
mov
lock
pop
xor
mov
push
lret
mov
adc
stc
mov
xchg
js
mov
andl
adcb
cmpl
and
push
les
cltd
mov
testl
mov
ficompl
leave
bound
cmp
dec
xor
loopne
je
jnp
or
adc
push
dec
stos
dec
inc
cwtl
mov
and
push
dec
mov
scas
pop
stos
je
ss
mov
testb
div
enter
lahf
rcrb
mov
push
and
mov
jg
push
push
cwtl
lret
inc
sbb
shrb
xlat
stos
iret
in
lahf
inc
into
push
leave
mov
stos
mov
int3
jo
shrb
je
std
push
test
ret
add
push
addb
sub
fdiv
movsl
fisubrl
jl
fnstenv
outsl
pop
xchg
xor
pop
cmp
cmpsl
sbb
jmp
scas
inc
fwait
push
rolb
cmp
es
or
xor
jl
sub
mov
cmpsl
cltd
xor
cmpsb
shrl
push
fidivrl
cld
cmpsl
mov
ret
xor
loope
push
ret
add
scas
mov
pop
sub
mov
xchg
test
jle
xor
dec
mov
sbb
test
push
jo
cmp
into
sbb
out
jno
or
cmp
data16
add
das
jbe
add
jo
fwait
lock
ss
xor
dec
cwtl
inc
or
cmp
lret
stc
adcl
stos
inc
in
xlat
dec
test
inc
mov
push
add
mov
sbb
rcr
popa
xlat
icebp
add
push
sbb
lret
push
rcrl
dec
scas
dec
sarl
lcall
xor
fistl
icebp
shrb
les
mov
jge
int3
imul
stc
lret
inc
fwait
out
js
xchg
mov
dec
mov
adc
rolb
adc
and
repnz
xchg
leave
jmp
mov
push
pop
cmpsb
shrb
pop
fisubs
sub
outsl
lds
enter
xor
es
sub
or
mov
pop
stos
cwtl
js
sahf
dec
mov
jbe
mov
push
test
jp
imul
ficompl
scas
cmp
mov
divb
es
sbb
pop
add
rcrl
xchg
pop
cmp
sbb
and
add
mov
in
fisttpl
subb
cmp
in
inc
add
xchg
test
movsb
data16
scas
xchg
xor
or
pop
pop
adc
pop
test
movsl
movb
jmp
lcall
jle
sub
int
xor
add
add
ljmp
add
mov
push
addr16
les
cwtl
popf
lret
aam
sbb
test
xor
sarl
jne
rorl
inc
cltd
xor
dec
mov
call
es
hlt
je
xchg
dec
mov
mov
push
inc
mov
imul
call
les
lcall
fwait
lahf
hlt
repnz
lock
jecxz
es
add
add
mov
dec
mov
add
test
hlt
mov
rcr
pop
cwtl
lret
cmpsl
mov
pushf
inc
flds
stos
push
and
test
inc
mov
fucomp
fs
fisttps
lret
rcr
cmp
pop
or
lds
jl
or
mov
fstps
push
inc
lcall
jle
mov
cmp
pop
mov
fiadds
out
jns
enter
cltd
cmc
xor
cmpsl
xlat
adc
adc
inc
sbb
cwtl
or
mov
push
andl
aad
push
xchg
and
es
mov
lods
repnz
aaa
pop
cmp
call
push
ret
mov
decb
mov
hlt
xchg
pop
test
outsl
push
adc
sub
sbb
inc
jbe
xor
mov
arpl
int
pop
movsl
imul
jne
out
mov
jmp
mov
add
add
movsb
rcrl
addb
pop
mov
lods
xchg
sub
adc
mov
bnd
push
icebp
ror
jae
lret
fnstenv
mov
or
nop
jp
and
jne
add
leave
xchg
fistl
or
loopne
sub
xchg
sub
mov
pop
jo
sbb
cmc
xor
pop
sub
or
mov
add
inc
mov
fxch
cwtl
xor
inc
add
test
pop
pop
xchg
flds
push
fwait
outsl
push
ret
mov
mov
mov
sbb
or
cmp
xor
xchg
mov
aad
into
xor
sbb
loope
dec
int
mov
repz
mov
aad
jns
or
mov
movsl
sbbl
jae
addb
xchg
loop
enter
int
inc
mov
mov
xor
aad
lcall
mov
fsts
sbb
repnz
mov
pop
jp
jl
popa
scas
aad
lret
shrb
cmpsl
jae
cwtl
daa
sbb
ret
scas
std
cld
pop
movsl
or
pop
pop
rorl
xchg
jbe
sub
pushf
shr
fwait
xchg
test
leave
or
mov
shlb
andl
pop
inc
cmp
mov
push
mov
mov
and
test
push
lahf
and
pop
inc
jge
jmp
roll
out
cmpsl
ret
flds
mov
mov
xor
fmuls
inc
xor
mov
mov
adc
add
dec
cltd
push
or
xlat
adc
mov
dec
loopne
in
mov
movsl
sti
pop
mov
xchg
fisubrs
jae
mov
imul
test
jge
lock
xlat
insl
sbb
int
adc
iret
mov
pop
xor
mulb
flds
cli
and
ja
mov
dec
jp
shrb
je
arpl
mov
inc
pusha
dec
ljmp
sahf
sbb
adc
xor
mov
shrb
mov
jg
cmp
xor
fdivrl
stc
cmpsb
test
adc
push
mov
clc
xor
adc
jns
pop
and
stc
bnd
push
xchg
imul
mov
inc
fnsave
xchg
pop
test
xlat
push
flds
mov
popf
ljmp
sub
adc
adcb
cmc
hlt
clc
add
xor
and
lea
ss
sbbl
jno
xchg
jnp
sahf
rol
or
js
repnz
jo
push
adc
lret
cmpb
mov
mov
inc
ficompl
inc
in
push
xor
sbb
sub
mov
pusha
in
mov
imul
cmp
ret
mov
xchg
or
jo
movsl
sbb
pop
jnp
adc
shrb
test
xchg
cld
pop
mov
push
dec
or
push
jb
sub
adcb
or
inc
test
and
int3
or
clc
add
xchg
and
and
mov
inc
pop
popf
std
push
les
sti
mov
jne
popf
shll
inc
inc
mov
int3
sub
daa
push
push
jnp
popf
in
push
adc
icebp
pop
cmc
dec
inc
lods
les
inc
imul
out
sbb
jae
orl
out
inc
sbb
add
sub
nop
cli
sbb
add
leave
fcomp
push
fnsave
pop
lret
nop
lds
leave
inc
push
cld
mov
or
aad
lret
fucomp
fs
mov
fisttps
pop
inc
invd
movsb
les
inc
scas
in
pop
movsl
sbb
pop
dec
fistl
mov
dec
test
lods
cmp
lods
ret
jge
pop
in
ret
into
scas
cmp
jl
adc
push
mov
clc
xor
adc
add
xchg
gs
fidivrs
jo
xchg
and
fwait
movsl
jb
cmpsb
call
jnp
fsubs
in
cmpsl
sti
xor
jne
fwait
shl
popl
push
mov
es
imul
dec
fisubs
aam
gs
shl
int
cmp
int
mov
jle
loopne
std
inc
fwait
pop
jmp
clc
sti
inc
aad
cmc
jmp
movsl
mov
aas
add
gs
or
das
push
into
jp
aad
inc
sbb
rorl
dec
inc
addl
lahf
pop
sub
xchg
mov
xchg
in
mov
enter
mov
test
imul
fistpl
mov
mov
jno
aam
jnp
xor
sbb
mov
fdivrl
repz
nop
xchg
aas
mov
xchg
mov
adcl
dec
sarb
mov
adc
xchg
and
test
mov
cltd
jle
inc
pop
aad
cmp
movsb
pushf
data16
popf
mov
stc
or
mov
xchg
loope
adc
iret
mov
sbb
sub
cmp
sbb
test
jb
int
jg
arpl
cmp
ja,pt
sbb
jmp
cmc
sub
mov
into
add
test
inc
sbb
xchg
test
ret
test
ret
sbb
dec
out
sub
inc
clc
rcrl
test
cld
sub
cmp
dec
stc
or
mov
inc
pop
data16
and
fcmovnu
loop
sub
outsb
shrb
inc
ss
pop
cmpsl
sub
test
test
xchg
loop
sbb
out
jl
sarb
inc
test
popl
adc
inc
rolb
out
rol
cmp
add
mov
mov
xor
insl
or
xor
enter
leave
repnz
sub
or
in
jne
mov
mov
call
mov
repz
mov
xchg
sbbl
xchg
imul
jns
sub
pop
in
clc
add
mov
test
bound
sbb
lret
inc
mov
adc
ret
sbb
insb
mov
hlt
test
and
test
fstps
mov
xlat
xor
mov
pop
inc
pop
test
roll
fsts
pop
daa
push
je
mov
mov
movsl
or
add
movsb
lds
pushf
and
inc
fstps
jmp
popf
fsubp
mov
int3
mov
cmp
add
jecxz
mov
cmp
rcl
pop
test
xchg
fsubs
cmp
mov
gs
inc
lods
inc
or
jne
insl
out
rolb
xchg
pop
cmp
mov
fnstcw
xchg
xor
in
hlt
xor
nop
test
mov
lret
sbb
insl
add
xor
mov
mov
inc
sahf
or
mov
pop
add
stc
iret
sbb
in
clc
inc
adc
popf
cmp
xchg
jbe
adc
testb
dec
push
mov
or
push
jge
sahf
lods
fildll
jae
fisttpl
lret
rorl
nop
ffree
sbb
das
sbb
jo
pop
pop
outsb
les
sbb
mov
lea
jecxz
pushf
ficoms
cmp
push
pushl
pop
mov
jmp
or
and
cwtl
call
mov
and
add
pop
ret
fwait
xor
clc
and
and
mov
cmpsl
jnp
enter
jo
repnz
mov
push
push
mov
fwait
jns
popf
inc
mov
sahf
jp
shl
inc
sbb
dec
mov
jbe
mov
movsl
mov
mov
inc
imul
jmp
lds
ds
hlt
mov
inc
sbb
add
inc
clc
enter
int
lds
adc
subl
xor
jge
test
cld
test
mov
xchg
movsb
jmp
cltd
fucomp
je
fst
ljmp
jae
aam
cmp
ret
add
dec
xchg
or
lock
xor
lock
add
pop
cld
or
rcrb
jb
inc
pusha
ficoms
mov
out
js
mov
dec
sti
popa
mov
ja
gs
iret
cmp
jo
enter
pop
loop
test
sub
and
outsl
cmp
outsl
lds
enter
or
mov
xchg
test
pop
stos
push
inc
mov
pop
ret
pop
sarl
lret
popa
mov
pop
sbb
mov
jns
aas
sub
inc
jnp
mov
mov
inc
call
sbb
gs
sbbb
cmp
sbb
dec
notb
jns
push
test
lcall
jae
fisubl
mov
rcll
or
les
call
push
xchg
pop
lcall
sbb
fstps
xchg
fcoml
ja
das
mov
aad
int
out
xchg
ljmp
fdivr
sti
mov
jge
andl
test
xchg
cwtl
inc
mov
stc
repnz
jp
mov
shlb
movsb
inc
add
or
fwait
stc
outsl
push
xchg
xchg
ds
fsubl
or
hlt
cwtl
test
push
or
mov
jnp
fsubr
push
adc
ret
adc
test
outsl
jmp
ret
loopne
pop
adc
xlat
hlt
pop
sti
mov
jecxz
inc
push
sbb
pop
sub
mov
ja
sbb
or
mov
mov
and
mov
pop
cmp
jno
test
test
movsb
push
clc
sub
or
sti
mov
pop
stc
mov
mov
je
fyl2x
mov
test
inc
pop
mov
rolb
into
inc
lcall
pop
xchg
jb
mov
mov
aad
rcll
fwait
push
repz
fmull
jnp
loope
popl
xchg
xchg
jmp
test
dec
aaa
mov
dec
je
pop
stc
mov
and
inc
add
in
and
fwait
insl
in
add
xlat
fld
loope
and
mov
lea
push
push
dec
mov
push
dec
sub
mov
popa
gs
ss
les
inc
fcmovnu
les
in
mov
mov
dec
ds
lahf
lret
jecxz
add
mov
dec
or
inc
inc
sbb
push
movlps
inc
sbb
arpl
lahf
lret
movsl
mov
mov
sbbl
test
inc
in
xlat
dec
lods
or
fbstp
xor
scas
mov
mov
mov
xchg
xor
or
pop
mov
mov
mov
sbb
fistl
cltd
lds
cmpsl
or
bound
scas
jg
leave
jge
aas
popf
scas
inc
pushf
repnz
and
push
mov
inc
aam
fcoms
or
and
es
xor
repz
pop
cmpsb
fsubrs
fidivrl
pop
push
xabort
pop
fidivrs
gs
daa
enter
test
ud2
addl
xchg
imul
fimuls
shl
pop
adc
call
pop
movsl
popa
in
ljmp
je
pop
inc
xchg
insb
jmp
sbbl
sbb
aad
adc
faddl
push
icebp
mov
mov
and
test
stos
test
fucomp
jae
jbe
pop
lret
rcrl
nop
sbb
or
cmp
test
stos
iret
push
pop
mov
push
cld
lret
fstl
jnp
pop
pushf
jnp
ficoms
jg
sub
icebp
mov
sub
or
inc
add
sbb
leave
inc
mov
fwait
jg
xchg
xchg
mov
mov
mov
jecxz
or
insl
in
or
mov
mov
pop
inc
jecxz
and
and
in
aam
aaa
es
hlt
mov
vmovaps
cmp
cmpsl
cmp
xchg
pop
adc
mov
inc
ficomps
fidivrs
or
repz
stc
divl
push
in
push
idiv
add
mov
sbb
pop
fimull
imul
xor
mov
xor
out
inc
sub
lods
jecxz
sub
lret
fucom
mov
lock
aaa
mov
insl
mov
xchg
aam
push
sbb
lret
push
adc
shrb
mov
lock
hlt
pushf
fsts
xlat
pop
pushf
xchg
jge
dec
cwtl
xor
mov
jno
fsub
out
lahf
scas
mov
fists
sbb
loop
xchg
js
or
inc
inc
cmp
xchg
aam
inc
mov
pop
xor
or
xchg
imul
cltd
in
lods
inc
test
push
xor
jb
inc
lea
fmul
push
adc
lea
in
iret
repnz
test
ficoms
sbb
xchg
rorb
aam
cmp
and
enter
jle
sbb
in
or
rcll
fnsave
pop
fisubrl
pop
dec
cmpb
insl
cltd
enter
lret
nop
rcrb
fimull
repnz
pop
add
pop
ffree
jmp
lahf
mov
shlb
data16
fnstenv
inc
xchg
roll
cmpsl
fistl
fisubl
push
jae
mov
icebp
mov
cmp
pop
or
jmp
mov
xor
mov
loop
out
pop
and
mov
xor
inc
and
inc
sbb
clc
enter
or
push
rcll
xor
inc
roll
and
test
gs
jle
push
fld1
jb
cmp
cltd
cld
jge
inc
adc
mov
insb
aaa
es
hlt
xor
nop
cmp
adc
ds
inc
mov
sbb
cmp
test
les
jne
aam
sti
jg
ja
fneni(8087
test
pop
pop
pop
sahf
sbb
inc
sbb
pop
loop
out
rcrl
mov
sbb
les
lock
aad
mov
mov
jae
fimull
lret
pop
sub
mov
push
push
aaa
mov
arpl
prefetcht2
nop
cmp
enter
roll
cmpsl
fisubrl
outsl
or
sbb
shrl
pop
jno
sbb
push
jo
xor
fs
and
pop
sub
iret
and
inc
out
push
mov
adc
and
xor
aam
sbb
or
fwait
mov
or
mov
lea
and
cmpsl
rcrb
aas
xchg
sub
pop
pushf
and
pop
aad
outsl
mov
jmp
cmpsl
sub
mov
lcall
sub
pop
mov
arpl
add
ds
sti
jnp
test
in
fcom
inc
sub
inc
aas
adc
in
leave
faddl
mov
mov
xor
lods
leave
mov
and
test
movsb
fldcw
cli
fs
fisttpll
test
ljmp
inc
test
inc
pop
lcall
pop
mov
push
cmp
inc
lahf
jns
push
roll
cwtl
xchg
sbb
cli
neg
jmp
fists
fistl
rclb
aad
dec
cmp
add
cmp
fsubr
cmp
push
xchg
fcoml
mov
jne
in
lea
test
push
cmp
out
cmp
loop
jle
add
mov
int3
sub
movsb
lea
imul
repz
inc
mov
sbb
jp
pcmpeqw
dec
lahf
in
clc
add
es
dec
cmp
mov
mov
mov
faddl
lods
ret
fs
lret
inc
in
dec
push
add
jge
pop
mov
clc
aaa
repz
jo
movsl
jno
add
jl
arpl
jae
test
xchg
inc
lret
add
or
mov
sbb
push
pop
jbe
scas
push
inc
xor
scas
ret
hlt
js
jge
xchg
fadd
repz
mov
sub
orb
mov
fsubrs
fmull
dec
lods
push
lahf
mov
and
imul
inc
orl
sti
xor
daa
sti
adc
enter
cmp
addb
add
dec
dec
mov
sbb
loopne
cmc
mov
mov
in
fsts
add
ret
arpl
fldt
inc
loope
pop
mov
pop
add
pop
sahf
xlat
xor
repnz
push
lcall
inc
pop
adc
gs
ret
fs
or
jae
imulb
xchg
xlat
stos
mov
adc
test
dec
push
lret
dec
mov
popf
jmp
repz
mov
cmp
or
mov
push
sbb
nop
lcall
std
lock
sub
inc
mov
sahf
adc
inc
ljmp
gs
js
cmp
inc
mull
rolb
stos
mov
inc
jns
test
aas
outsb
cmpsb
xor
movsb
jp
sbb
popf
imul
mov
xchg
mov
or
sarb
xchg
cwtl
ds
cmp
mov
nop
shrl
out
jne
mov
dec
or
sub
fistps
dec
aad
cltd
repz
lahf
loope
mov
div
sti
mov
loope
mov
mov
mov
mov
adc
mov
pop
sub
popa
pushf
sbbl
pushf
adc
sub
test
movsb
push
cmp
lods
sbb
mov
ja
fs
movsl
iret
div
imul
je
fcomi
addl
ret
inc
pop
xchg
adc
cmp
cmp
stos
inc
lcall
cmp
mov
popf
ret
push
pop
leave
cltd
in
mov
mov
sti
and
test
subl
shll
orl
dec
aam
fidivrs
insl
fwait
popf
aad
jns
push
jne
sbb
mov
cmpsl
fldl
sbb
je
test
inc
pop
xchg
dec
dec
mov
aam
loopne
aad
pop
mov
icebp
pop
adc
push
mov
mov
pop
mov
lods
stc
fstl
jae
orb
insl
popf
sbb
add
cwtl
jmp
sbb
out
mov
push
pop
int
adc
in
std
fsubrl
rcrb
negb
push
std
dec
sub
xlat
mov
or
out
push
sbb
dec
mov
mov
push
dec
lods
and
inc
xchg
sti
push
inc
mov
lahf
es
and
jecxz
xor
cmp
xchg
sbb
lds
loopne
sub
das
call
imul
jns
fwait
add
mov
mov
sub
call
fwait
xor
cwtl
inc
jns
sbb
loop
pop
mov
cmc
insl
pop
mov
pop
sbb
enter
pop
loopne
mov
jmp
jecxz,pn
inc
mov
sbb
insl
add
xor
mov
stos
jmp
test
mov
dec
inc
int3
hlt
sarb
push
ret
int3
pop
xor
sbb
test
lcall
ret
xor
imul
dec
inc
mov
les
sbb
sub
fisttpl
test
lahf
jae
seta
nop
mov
orl
cmpsl
cmc
jecxz
xchg
add
sub
xchg
jmp
mov
adc
push
fs
mov
jno
in
jg
xor
icebp
stc
cmc
and
cmp
xchg
xchg
mov
pop
and
sbb
add
sbb
aam
sahf
inc
ret
int
pop
pop
cmpsb
adc
fidivrs
jge
ja
sti
repz
adc
jle
inc
inc
test
shr
or
jns
aam
mov
sbb
cmpsl
pop
push
mov
sbb
int
in
mov
pop
pop
in
fcoml
test
mul
or
mov
pop
xchg
and
mov
imulb
aad
inc
sbb
test
push
sti
mov
lods
push
cld
xor
mov
push
lret
push
cld
aaa
rcrl
ljmp
push
insl
test
push
sub
lret
add
dec
adc
or
add
xchg
xchg
sub
aad
push
cmc
outsl
push
test
scas
inc
xchg
sar
and
push
add
js
xchg
cmp
dec
and
push
les
fwait
mov
xchg
push
mov
sbb
fidivl
imul
insl
or
dec
adc
ret
sbb
leave
push
push
or
leave
sbb
pop
in
jp
movsb
push
hlt
dec
movsb
xchg
xlat
adc
cmpb
fbld
fbld
add
arpl
int
adc
jg
dec
ret
incb
ret
scas
add
add
mov
test
push
dec
and
mov
xchg
pop
pushf
dec
and
jge
out
cmp
cli
das
stc
ja
pop
and
pop
fidivrl
sbb
imul
or
inc
cmp
lret
add
inc
cmp
xor
fcomps
add
add
xchg
add
aad
mov
fsubr
repz
repnz
and
mov
sbbb
mov
jg
cwtl
dec
xor
rclb
mov
fimuls
push
icebp
pop
fdivrl
into
xabort
push
cmp
clc
int3
es
cltd
push
xor
test
push
pop
cmp
lds
xor
mov
lea
pop
pop
roll
ret
gs
mov
or
out
jmp
lds
push
add
rcrl
xlat
push
or
adc
imul
aad
mov
aad
inc
sbb
sbb
les
pop
cmp
mov
xchg
shll
fisttpl
lds
mov
xor
add
and
adc
subl
push
mov
lods
adc
push
pop
push
inc
in
ret
jno
in
iret
jmp
xchg
cld
cmp
das
adc
aas
push
or
inc
aam
fmuls
shl
or
xor
push
call
lret
inc
ret
xor
mov
int
sbb
push
mov
enter
int3
inc
xor
in
aam
mov
xchg
dec
mov
mov
sbb
insl
daa
aam
call
test
ss
lds
cmp
ds
lret
in
std
pop
pop
adc
hlt
movsl
ret
inc
sbb
and
movsl
lcall
movsl
mov
cwtl
or
nop
adc
stos
jb
mov
mov
lahf
subb
in
insb
arpl
push
sbb
ret
or
dec
push
xor
sbb
or
inc
stos
fistl
cwtl
fcoml
adc
push
jmp
pushf
sahf
arpl
into
xor
dec
js
sarb
inc
mov
rcll
mov
xor
fmuls
fwait
xor
enter
cmp
mov
test
fwait
xor
out
lds
mov
and
push
xchg
adc
jne
call
cmp
xor
mov
and
in
mov
movsl
test
roll
mov
and
xchg
rcrb
in
pushf
fwait
sub
mov
repnz
jno
test
sti
leave
rcrb
push
imul
push
mov
push
cmc
mov
sbb
mov
cmp
mov
pop
sub
les
imul
lahf
ficoml
outsl
add
mov
xchg
adc
jmp
popf
iret
fildl
lahf
fists
sti
out
mov
rclb
push
mov
clc
xor
mov
test
lock
inc
test
stc
jecxz
movsl
ret
sti
stos
out
xchg
push
mov
cmp
rolb
outsl
push
or
ret
jno
popf
push
adc
inc
sub
inc
inc
mov
sbb
add
and
xchg
dec
daa
cs
cmc
hlt
cwtl
in
xor
test
sub
lods
mov
add
out
jnp
cmpsl
divl
imulb
jo
cltd
jne
xchg
push
push
or
sub
fsts
mov
mov
adc
and
les
fsts
pushl
std
lods
dec
mov
cmp
sub
inc
sbb
or
fdivrl
adc
outsl
add
xor
mov
sub
inc
mov
xchg
jecxz
repnz
loop
inc
shlb
mov
and
std
pushl
or
cmp
rcll
push
cltd
es
cwtl
inc
insl
stc
jmp
add
pop
stos
xor
std
push
mov
popf
jp
ret
cwtl
ds
leave
sbb
or
sub
cmp
push
inc
mov
cmc
mov
add
bound
mov
add
mov
mov
data16
mov
lock
dec
popa
movsl
mov
sbb
aam
or
mov
jbe
and
fildl
leave
sarb
rep
les
pop
cmp
ja
push
cmc
mov
fisubl
insl
out
repz
cli
jo
mov
sbb
shll
jae
mov
movsl
or
fimull
jae
aas
fwait
lods
jge
add
cltd
lods
jno
lds
xchg
push
mov
aas
jo
push
mov
inc
aam
js
or
push
icebp
or
imul
sub
fstpl
and
movsl
ret
rorl
stos
mov
mov
xlat
pop
ds
rorb
mov
adc
loop
aam
js
xchg
xchg
inc
sti
popf
fisubrs
push
dec
mov
cltd
pop
out
fdivl
call
les
test
aam
sti
pop
adc
rcr
mov
fwait
mov
lcall
mov
add
fcoml
cli
dec
movsl
mov
mov
xor
stos
gs
std
xlat
dec
sbb
inc
mov
cmp
cli
cmpsl
xchg
pop
in
mov
shr
je
data16
shll
aad
pop
cmp
movb
adc
xchg
ja
mov
lock
fcmovnb
pop
jo
int3
mov
mov
cmc
cmp
cmp
dec
xchg
add
pop
inc
test
dec
shll
xor
or
orb
ret
and
cmp
into
clc
clc
outsb
mov
xchg
rcrb
cmpsb
push
hlt
sub
inc
ds
dec
inc
mov
fdivrs
mov
cltd
fisubs
loopne
out
mov
loopne
stos
mov
mov
pop
pop
inc
push
loop
mov
pop
iret
ret
mov
push
or
xor
mov
xchg
lods
pop
hlt
lods
push
mov
and
xchg
sbb
cmpb
sahf
sbb
mov
push
in
int
or
cwtl
xchg
in
mov
sbb
cmp
test
dec
imul
jge
pop
movsl
sbb
lock
cmp
sub
xor
cmp
jnp
dec
pop
cs
fwait
push
rolb
push
pop
dec
adc
rcll
rcrb
outsb
mov
cli
push
lods
inc
jge
imul
mov
or
mov
xchg
pop
mov
out
hlt
or
test
push
jle
adc
ret
mov
jmp
xchg
xchg
push
dec
lea
call
inc
sahf
xor
fidivs
jae
mov
addr16
outsb
rcrb
mov
pop
hlt
scas
lock
inc
cs
iret
inc
cli
dec
lds
adc
add
lds
es
jae
or
mov
sbb
popf
imulb
daa
xchg
test
sbb
inc
sbb
adc
sub
xchg
or
cmp
lcall
jle
mov
and
jmp
mov
shl
sbb
gs
mov
sbbl
shlb
dec
repz
mov
rcll
or
clc
and
movsl
cli
dec
dec
xor
mov
gs
out
push
int3
mov
mov
inc
mov
enter
cmp
int
push
mov
fs
loopne
cmc
mov
cmc
xchg
mov
adc
popa
push
int3
cltd
mov
mov
ret
sahf
pop
jns
movsb
rcrb
xor
mov
adc
mov
repz
pop
and
iret
gs
mov
xor
rorl
or
ljmp
lret
mov
sti
mov
fs
fnstsw
mov
and
inc
or
dec
addb
ficoml
out
xchg
test
sub
sub
push
pushf
jae
sbb
bnd
pop
out
inc
fwait
sbb
pop
adc
lea
sub
xchg
xchg
jle
test
dec
incl
inc
xchg
imul
cli
mov
out
cmp
fdivl
pop
mov
jne
jecxz
xchg
adc
inc
inc
mov
cwtl
adc
push
repz
inc
aaa
call
xchg
mov
mov
mov
push
ficomps
fwait
sbb
imul
xchg
or
jo
or
inc
pop
adc
imul
sub
mov
fst
dec
pop
add
aad
mov
cmc
fxch
decb
ljmp
jge
xchg
rcrl
loopne
pop
or
jae
test
lods
pushf
add
lods
out
outsl
push
lcall
inc
pop
test
mov
mov
xor
xchg
loopne
repz
out
inc
insb
inc
shlb
js
jnp
inc
andl
sub
sub
or
xor
jo
xor
rclb
fisubl
push
fdivp
jp
out
and
and
enter
dec
icebp
hlt
jl
sub
mov
lcall
sbb
mov
dec
cmp
stos
cmp
mov
aam
xorl
test
mov
lock
add
add
sbb
inc
aas
repnz
stos
ret
and
fmull
bnd
stos
mov
jnp
test
xor
mov
loop
mov
lahf
jp
negl
aaa
mov
add
sbb
roll
or
inc
adc
mov
add
enter
pop
sarl
lods
jno
shrl
movsl
jge
dec
js
xchg
jg
adc
jnp
adc
cmp
pop
mov
push
mov
rcr
cmpsb
sbb
jmp
scas
sbb
ret
sub
in
inc
call
mov
out
xor
sti
mov
ret
mov
fstps
bound
add
xchg
popf
push
test
add
xchg
cmp
or
aas
mov
adc
mov
pop
repz
mov
jae
mov
push
add
das
lock
adc
inc
das
mov
cmc
aam
or
sub
leave
push
lock
cmp
adc
mov
push
stos
xchg
inc
fists
stos
cmp
nop
pop
cld
sub
cmp
inc
sub
cli
loop
js
push
mov
popa
stos
enter
sub
adc
pop
xchg
dec
push
mov
jp
lods
jg
dec
push
repz
imul
js,pt
pop
xchg
pop
inc
mov
add
dec
ss
repnz
and
inc
cwtl
dec
and
jns
clc
aam
fdivrs
sbb
push
or
out
jp
cmp
xlat
data16
mov
je
fcoms
inc
jp,pt
outsl
mov
int
inc
sbb
add
mov
mov
into
pop
stos
shll
xchg
push
aas
lods
pop
sbb
ljmp
sti
pop
push
addb
rcrb
adc
mov
add
int
sbb
cmpb
lret
movsl
mov
pushf
fs
push
aaa
pop
inc
std
lods
pop
hlt
dec
sbb
nop
mov
push
sub
xchg
lret
cmpsl
jno
or
lcall
push
addb
stos
jge
lcall
sbb
xchg
mov
lods
pop
xchg
jb
sub
xor
sub
fucomi
repnz
dec
mov
ds
andl
add
or
aas
ja
sbb
mov
or
out
adc
call
pop
jae
gs
out
push
mov
std
jp
and
cmp
xor
mov
mov
adc
andb
sub
and
xor
and
sti
sub
or
loope
push
fucomp
pop
add
adc
adc
pop
sti
loopne
divl
xchg
jo
pop
pushf
mov
mov
inc
inc
into
cmpsl
mov
fsubl
mov
rcrb
ror
add
mov
stos
dec
mov
mov
fists
jae
fimull
rcrl
pop
cmp
insl
mov
dec
mov
cmp
push
ja
popf
mov
adc
mov
push
jnp
sub
mov
mov
fxam
std
mov
js
pop
cwtl
clc
xlat
in
testl
adc
ds
iret
xor
addr16
pop
add
je
ret
inc
mov
add
xchg
out
leave
inc
fnsave
data16
imul
sub
jg
or
jmp
xchg
dec
push
and
sub
xor
mov
loopne
stc
mov
in
add
repnz
add
inc
icebp
ja
call
lock
add
inc
cmp
jg
pop
mov
nop
pop
add
pop
ret
adc
mov
outsl
dec
into
aaa
xor
push
enter
jne
sub
test
js
pop
into
mov
bound
push
cmp
xchg
pop
outsb
push
mov
scas
insl
jge
cmp
push
ja
les
pop
jnp
cmp
leave
sub
in
cmp
sbb
or
inc
dec
js
rolb
jle
mov
jo
xchg
test
fidivrl
mov
push
call
inc
movsl
xorl
test
cwtl
pop
pop
in
stos
mov
in
dec
inc
xor
xchg
inc
and
add
inc
int
movsb
lea
mov
shl
arpl
movsl
call
push
push
kmovw
inc
ja
fcomi
jne
pop
dec
aaa
add
ljmp
movsl
pop
or
sbbb
dec
dec
pushf
dec
and
jne
les
pushf
dec
push
sub
lds
jge
mov
repz
pusha
std
movsl
int3
in
or
in
mov
pop
shlb
jnp
cltd
push
push
push
movsl
int
push
mov
dec
fs
pop
lods
push
mov
inc
pusha
push
jg
mov
notb
lahf
lret
jl
cwtl
clc
xlat
in
negl
shlb
mov
jo
pop
jns
pop
jb
je
xchg
adc
push
sub
je
ret
push
mov
out
dec
add
pop
jnp
pop
popa
jne
jl
andb
iret
sbb
repnz
dec
jecxz
mov
jl
adc
lret
dec
fsubr
mov
xor
inc
xchg
fists
repz
aam
std
inc
inc
xor
call
inc
mov
in
hlt
cmp
xor
inc
or
add
add
inc
mov
push
sarb
jge
lds
stc
pop
adc
push
add
inc
mov
and
dec
mov
fsubrl
pop
insb
dec
sub
and
mov
das
cmc
sbb
mov
gs
mov
fs
pop
idivl
sub
inc
in
cmp
cmp
stc
push
testl
in
jle
arpl
inc
out
std
mov
jl
daa
sub
outsb
sub
call
pop
scas
xlat
insb
jmp
inc
out
mov
cmp
inc
pop
pop
fs
popf
cltd
int3
pop
sub
orb
xor
cmc
popf
xchg
std
mov
das
jo
das
into
pop
stos
les
inc
popf
sbb
add
jecxz
std
sub
add
iret
xchg
mov
mov
add
jl
ja
pop
rcll
cmc
cld
jg
mov
and
xor
push
leave
add
mov
stos
dec
mov
pushw
push
dec
cld
test
dec
push
lcall
jl
mov
pop
jno
add
aas
push
mov
cltd
xchg
dec
cmpsl
outsb
hlt
daa
mov
or
shlb
dec
data16
js
cmp
sahf
mov
cmp
sti
inc
sbbb
roll
pop
mov
dec
ret
ret
cwtl
pop
xchg
int
dec
cmp
sbb
hlt
pop
cmp
xchg
mov
push
pop
cmpsb
push
stos
xor
into
clc
rcrb
mov
fwait
shrl
adc
aam
aaa
es
hlt
pop
pop
cwtl
rclb
dec
inc
jne
lret
mov
mov
mov
movsb
dec
pop
or
arpl
lods
fisubl
inc
inc
xor
inc
scas
sbb
loope
cld
cmp
jbe
add
icebp
pop
dec
mov
cmp
jg
pop
ret
xchg
int3
and
adcl
mov
outsl
adc
ss
scas
arpl
pop
aas
rcl
jns
fimull
rcrl
negb
sbb
lods
lcall
xorb
mov
mov
lods
dec
push
mov
cmp
andl
fists
sti
out
pop
inc
xchg
push
loopne
cmp
inc
icebp
mov
ds
sarb
adc
cmpsb
rorl
fdivrs
cli
jae
push
xor
mov
clc
cltd
out
push
mov
jo
jge
push
fwait
jle
imul
or
dec
dec
mov
cwtl
cmp
repz
mov
cltd
ds
out
mov
sub
fistl
inc
mov
ficoml
cld
adc
pop
cmpsb
std
mov
jns
mov
sbb
fwait
cld
jg
push
scas
push
lock
int3
addr16
lock
lock
outsl
sub
or
push
lods
and
movsb
push
js
stos
mov
jno
repz
pushf
dec
pop
jno
dec
push
jl
shrl
sub
mov
dec
cmpsl
push
jne
push
pop
dec
mov
pop
ja
sub
ja
cmp
pop
mov
or
push
fs
aas
cmpsl
ds
mov
add
idiv
xor
pop
ds
dec
cmp
jp
out
cmp
je
icebp
xor
jmp
add
ja
lcall
mov
insl
test
mov
mov
dec
inc
jle
sub
push
or
xchg
dec
jecxz
mov
jmp
mov
fisttpl
loopne
cmp
cmp
inc
clc
clc
add
inc
xlat
mov
sbb
cmp
add
icebp
pop
dec
mov
addl
and
insl
mulb
lock
sub
mov
lods
push
sub
cmp
add
and
mov
push
dec
hlt
bound
sbb
insl
dec
mov
ljmp
les
cmp
fwait
loopne
sbb
shrb
jnp
les
xchg
xor
stos
cmp
cmc
mov
xchg
jo
add
loope
shll
dec
aam
aam
cmp
and
sbb
mov
pop
or
mov
mov
stos
xor
test
sarb
pop
mov
inc
mov
sbb
loop
je
or
cs
movsb
incl
jns
cmp
add
sbb
call
addl
sbb
pop
add
pop
add
xor
imul
jl
xlat
mov
faddl
loop
sbb
push
fs
dec
iret
test
mov
mov
mov
mov
insl
ffree
jmp
lret
rcr
cmp
mov
mov
test
xchg
mov
lods
mov
dec
les
and
inc
xchg
sti
add
out
pop
shll
iret
and
aad
dec
fdivrs
jnp
and
sarb
adc
sbb
xor
jno
sbb
xchg
cwtl
pop
rcrb
mov
mov
and
daa
flds
jle
inc
ret
hlt
je
jl
std
push
and
push
adc
stc
gs
xor
test
xor
in
cmp
loopne
aas
into
sbb
icebp
dec
pop
out
mov
repnz
je
enter
dec
movsl
xchg
sub
pushf
ret
pop
pop
inc
mov
shl
mov
std
leave
adc
lds
fisubl
xchg
fs
lahf
popf
test
aad
leave
mov
jo
test
push
cmp
lret
add
test
dec
nop
xlat
fistl
jae
xor
mov
rcrb
pop
int3
cmpsl
sbb
jmp
cmpsl
inc
ret
sti
sub
push
cwtl
add
xchg
and
fistl
addb
push
leave
mov
imul
and
and
fstl
mov
xlat
mov
frstor
sti
xor
jne
jecxz
mov
adc
repz
dec
mov
hlt
xor
and
mov
fsubrs
test
cmc
xor
movsl
test
mov
lea
fsubs
mov
jge
mov
repz
test
mov
lock
fidivl
fsqrt
xor
dec
and
iret
inc
mov
sbb
out
cld
push
fsts
clc
sub
ja
push
cmc
movsl
popa
popf
lret
fs
fisttpll
dec
sar
mov
sbb
push
cmp
dec
addb
ficoml
les
mov
mov
fstl
jp
scas
decl
or
or
jg
or
out
mov
popa
or
and
inc
shlb
les
popa
dec
xchg
sub
subb
mov
mov
mov
out
bound
ret
mov
mov
pop
ds
call
cld
xor
addb
push
jp
into
mov
sbb
loope
cmc
mov
mov
pop
dec
and
cmp
and
mov
test
add
mov
dec
in
add
xor
sbb
push
pop
loop
insl
mov
test
icebp
mov
sbb
add
mov
pop
inc
lahf
jae
sti
mov
mov
cmc
std
in
test
add
jo
orl
add
jmp
adc
jl
fstpt
test
add
mov
lods
fisttps
iret
js
jle
xor
sar
mov
out
add
repz
jecxz
dec
inc
cmp
xchg
adc
dec
xor
cmc
fsts
mov
gs
ljmp
cmp
enter
insl
or
sbb
ffreep
or
xchg
inc
xchg
inc
andb
addl
nop
imul
or
test
sahf
sbb
mov
xor
decl
sub
sahf
xlat
cmc
cwtl
xor
inc
mov
jne
xchg
nop
lock
and
jo
sbb
mov
int
mov
filds
adc
dec
push
mov
je
pop
iret
pop
inc
rcrl
test
stos
push
add
inc
dec
mov
cmc
add
xchg
or
pop
inc
fistl
lods
enter
dec
mov
mov
addb
fnstcw
xlat
xchg
mov
enter
cmc
mov
dec
push
cwtl
clc
push
xor
cld
dec
testl
rcl
xchg
sti
je
or
mov
pop
scas
call
lock
ret
cmp
add
mov
add
sbb
push
dec
repz
add
add
adc
ret
push
xchg
jmp
lcall
mov
lods
mov
divl
rcrl
add
ljmp
imul
push
imulb
mov
leave
ss
lahf
subb
xchg
rorl
icebp
push
sbb
rol
mov
icebp
add
jl
ret
add
pop
arpl
or
dec
cmp
lock
mov
fnstsw
dec
add
add
sbb
xchg
and
lock
jg
mov
sar
mov
push
mov
adc
dec
aam
jb
enter
shlb
push
in
jmp
mov
xor
fstpl
xchg
mov
fidivrs
jmp
ljmp
push
or
es
seto
ret
push
inc
lret
dec
dec
add
sbb
pop
push
roll
push
popf
ja
or
cmp
adc
ret
fimuls
jae
jecxz
pushf
sti
add
fs
nop
shlb
add
mov
mov
sbb
enter
adc
stos
repnz
scas
inc
std
scas
dec
sbb
add
pop
mov
sub
aaa
sub
xor
mov
and
add
xchg
jl
rorl
outsl
cmp
jp
pusha
negl
fstl
faddl
mov
icebp
cmp
mov
cld
cmp
jae
nop
adc
es
mov
test
dec
cmp
xchg
and
mov
push
fidivrl
cli
pop
lods
inc
insl
jmp
das
inc
test
push
xabort
fimuls
xchg
mov
xrelease
and
xchg
lea
pop
push
inc
mov
sbb
popa
mov
repnz
pop
inc
inc
mov
int
mov
out
and
pop
hlt
adc
pop
addl
sub
add
shlb
cmpsb
cmc
aad
sbb
popa
pushf
add
lret
je
clc
test
mov
sbb
lods
lods
push
mov
fs
test
in
jmp
les
or
stos
or
cmp
lret
add
lds
xchg
outsl
les
std
lock
mov
rolb
jbe
fmull
mov
cld
jnp
sbb
out
mov
repnz
mov
mov
mov
cwtl
rcrb
xchg
adc
data16
push
fdivrs
jge
imul
cmpl
mov
fsubl
cmp
out
je
or
aam
sub
xchg
arpl
rorb
lret
push
adc
xlat
call
pop
mov
and
daa
add
adc
daa
jnp
mov
adc
ret
mov
xor
lock
sbb
jg
adc
mov
dec
pop
test
mov
lds
push
int
mov
popa
cmp
lock
inc
rorl
fsts
cmp
xlat
ficoml
add
cmp
xchg
jb
mov
xor
sub
xchg
fcompl
xchg
jo
popa
or
inc
mov
xor
sbb
add
clc
les
stc
xor
mov
or
test
stc
mov
lret
pushf
insl
push
or
xor
call
push
je
test
push
jp,pt
inc
mov
add
mov
pop
gs
xor
mov
lods
lcall
ret
push
stos
sti
imul
fwait
mov
out
cmp
loope
repnz
or
rorb
adc
roll
nop
dec
and
movl
sub
mov
adc
push
test
dec
sbb
pop
outsl
cld
mov
ja
fs
fldenv
xchg
fistpll
pop
inc
lds
movsb
sbb
adc
push
push
inc
imul
jnp
inc
cmp
mov
pop
or
or
sbb
dec
mov
xor
pop
jno
cmp
lret
icebp
and
add
repz
pop
and
sbb
add
pop
sbb
add
mov
pop
inc
mov
xchg
cmp
clc
les
xlat
xchg
pop
out
enter
inc
mov
insb
aaa
pop
sbb
add
cmpsb
jge
and
mov
mull
cld
divb
xorl
jmp
jge
fsub
lods
lea
ret
in
gs
fistpll
pop
mov
pushf
fldenv
sbbb
das
icebp
idivb
frstor
ljmp
pop
cli
movsb
leave
dec
aas
xchg
xlat
jae
mov
repz
stos
je
fcomip
loope
push
sbb
ret
or
or
xor
jns
or
ret
inc
mov
mov
ljmp
inc
mov
sahf
xchg
ret
mov
arpl
jne
fnstcw
jno
xchg
inc
cmpl
or
jmp
fcoms
sub
dec
nop
shll
mov
xlat
roll
dec
cmpsb
test
xlat
xchg
loope
popa
jg
repnz
jb
lret
push
or
int
mov
lret
inc
push
fmul
icebp
ret
xchg
mov
sub
mov
jmp
mov
ret
pusha
pop
call
aaa
jge
cmpb
mov
jae
cmpsl
mov
xchg
xor
mov
add
mov
or
gs
xchg
js
loop
add
fimuls
jne
cmp
aam
add
inc
jne
sub
dec
gs
test
xchg
and
aad
into
mov
or
fisubrl
mov
push
jbe
lods
loope
cwtd
xchg
mov
mov
inc
push
cmp
jno
mov
add
adcl
cltd
popf
out
or
mov
pushf
jbe
mov
xchg
jb
mov
insb
outsb
sbb
inc
push
movsb
cli
cmp
cmp
shlb
sti
mov
push
and
jl
jb
rcll
cmp
push
int
and
push
leave
push
movsl
cmc
mov
pop
and
jg
shr
repz
cmp
xor
lds
add
mov
sub
xor
add
jnp
push
add
push
jno
dec
pop
das
push
mov
sbb
jmp
mov
cld
jle
jbe
scas
inc
sub
lea
out
out
lcall
jle
cmp
xchg
bound
adc
mov
cltd
fnsave
pushf
stc
in
jnp
dec
push
stos
cli
cltd
pop
adc
push
pop
mov
adc
jbe
sub
loop
cmpsl
cmp
pop
fstpt
data16
iret
scas
jmp
adc
js
or
out
or
adc
xchg
in
scas
test
cwtl
in
sbb
mov
pop
xchg
inc
outsb
jg
out
lds
bound
repnz
jle
sub
xor
xchg
inc
shlb
pop
push
test
aaa
adcl
cmp
jne
inc
movsb
sub
daa
sub
sarb
adc
loop
fdivrl
rcrb
cmp
outsl
icebp
daa
fyl2x
inc
data16
inc
inc
dec
js
in
adc
and
adc
popf
mov
adc
mov
repnz
cmp
and
ret
jae
and
mov
xor
arpl
pop
add
roll
mov
lea
clc
push
lcall
jae
fsts
xchg
lret
jp
cmp
scas
jg
sar
icebp
cltd
jle
lahf
mov
add
inc
lret
in
sub
xchg
push
in
es
pusha
jne
mov
pusha
jno
mov
fwait
xor
cmpsl
jae
mov
mov
add
sahf
pushl
dec
mov
and
stc
je
or
xchg
pop
inc
stos
in
pop
xchg
xchg
jae
lcall
cmp
insb
test
cmp
and
mov
test
cmpl
jae
mov
pusha
jnp
arpl
stos
repz
adc
add
addr16
fdivrl
ret
inc
rcrb
mov
cmp
fildll
imul
insl
bound
mov
jnp
cmpb
aas
fwait
mov
xchg
mov
adc
pop
stos
inc
sub
cmp
arpl
mov
sub
inc
out
repnz
sti
pop
pop
fildl
jnp
push
jl
cltd
lahf
xrelease
inc
shll
mov
ss
sub
shrb
push
cmc
movsb
in
addr16
sub
arpl
ja
addr16
loope
icebp
rcrl
add
xor
lock
enter
mov
and
subb
adc
daa
mov
insb
mov
mov
inc
mov
mov
imul
shll
jno
pop
mov
jns
inc
sub
jle
repnz
inc
scas
lock
or
inc
sub
adc
inc
lods
icebp
mov
dec
sub
jge
push
test
test
mov
outsl
ffree
mov
and
arpl
add
mov
push
mov
jge
dec
push
pop
dec
gs
ficoml
pop
pusha
pushf
dec
xchg
jp
lods
ret
mov
jecxz
cmp
data16
out
and
daa
xor
sti
in
sti
imull
rcr
jp
jg
shrb
inc
rcrl
scas
enter
pop
lods
or
lods
mov
xlat
jae
and
fisttpl
out
pop
fbld
xor
mov
push
jle
mov
jno
shl
mov
and
xchg
and
mov
and
sbb
mov
sarb
push
pop
xchg
lds
ret
or
mov
xor
gs
popf
clc
enter
add
popa
aam
pop
pop
add
push
int3
dec
mov
jno
inc
and
shll
and
ret
push
ror
lds
bound
cld
outsl
rcl
cltd
divl
clc
sub
out
mov
jmp
xchg
cmpsb
and
je
out
xchg
dec
out
add
sahf
push
std
aad
cs
stos
ss
jno
lods
sbbb
add
mov
scas
sbbl
scas
add
idiv
adc
andl
mov
xchg
test
jb
cltd
mov
cmpsl
jp
xchg
dec
mov
cmp
cmpsb
jnp
sarb
mov
bound
out
fld
inc
enter
xchg
cmpsl
call
xchg
and
mov
xchg
daa
mov
pop
push
mov
repnz
sarb
cmp
movsl
dec
call
mov
repz
jge
cmp
jb
jo
or
loopne
push
adc
dec
add
aaa
adc
in
cmp
clc
jl
idivb
cltd
lret
lcall
std
cmpsb
ss
fstpt
sti
xor
movsb
ss
in
cmp
daa
push
dec
cltd
sbb
xorb
push
mov
xchg
into
jno
inc
stos
out
add
sbb
stos
pop
mov
lds
dec
testb
ljmp
sti
test
scas
mov
lods
cld
xchg
repz
adc
jmp
shrl
push
sub
jmp
jle
out
mov
mov
cmp
cmpsb
jmp
pop
ret
mov
adc
inc
shr
mov
nop
inc
and
cmp
mov
jbe
cmp
insl
lcall
sti
push
push
ret
add
mov
test
or
push
xlat
mov
jb
xchg
mov
push
orb
xlat
scas
enter
push
or
lret
xchg
cs
add
scas
jo
sbb
inc
fwait
or
cld
cli
hlt
je
sahf
das
xchg
stc
cli
loope
xchg
stos
les
or
sub
mov
fisubrl
pop
xor
test
sarl
sahf
push
xchg
jecxz
jnp
push
cltd
xchg
sahf
pusha
sti
mov
mov
lahf
mov
and
sbbb
add
clc
mov
inc
mov
xchg
mov
sub
lods
fistps
inc
test
sub
repnz
cmpsb
vmovd
xchg
movsb
jle
fld
inc
int3
xchg
cmp
cmpsb
mov
xor
push
cs
cmp
shrl
fldcw
call
mov
into
push
scas
rcrl
pop
mov
xchg
popf
sub
call
mov
xor
pop
mov
pushl
mov
pushf
ljmp
cmp
cs
cmp
push
into
js
std
xor
lods
ds
incl
mov
fdiv
mov
mov
je
into
xchg
stc
cli
out
mov
in
mov
test
sbb
jge
mov
mov
stos
xchg
and
into
dec
and
xlat
xchg
mov
mov
xchg
adc
sahf
rolb
lret
or
pop
leave
loopne
inc
sahf
mov
enter
push
mov
js
xchg
jp
popa
jg
imul
test
push
xlat
sbb
add
and
out
je
fwait
lea
ror
mov
mov
scas
xor
or
mov
lds
jb
mov
orl
or
xlat
movsl
push
in
daa
mov
add
cmp
lcall
pop
cmpsb
mov
pop
arpl
ret
push
lock
cmpb
test
repnz
inc
out
sbb
mov
dec
cmp
pop
test
jae
lret
sbb
dec
fs
xor
add
loop
movswl
add
or
push
xor
xchg
movsw
sbb
xchg
data16
fcmovbe
test
jne
cmp
sbb
mov
mov
test
out
push
pop
or
sti
mov
mov
sbbb
xlat
mov
mov
adc
incb
adc
cli
lahf
adc
xor
movsl
cmc
xor
std
ds
jne
cmc
mov
rolb
mov
sti
mov
add
repz
jbe
push
daa
xor
pop
jae
repnz
and
imul
aas
mov
out
clc
sti
mov
ljmp
sub
mov
adc
or
or
dec
sub
dec
jp
inc
mov
ficoml
andb
xchg
and
mov
cmpsb
or
adc
mov
popf
xor
sbb
movsl
pop
or
nop
js
or
lret
mov
test
pop
mov
lret
xor
cmp
inc
push
imul
mov
into
sbb
nop
dec
sbb
rcrb
je
test
xor
scas
push
jne
jge
imul
xlat
sub
mov
cmp
ret
mov
fmull
pop
loopne
outsb
dec
sub
lock
mov
pop
ss
cmp
push
push
xor
add
push
or
mov
jmp
mov
shl
out
jbe
lods
add
dec
mov
sub
push
sub
mov
lret
dec
cmp
js
xor
pop
outsb
daa
scas
add
mov
add
push
push
xor
outsb
xor
icebp
adc
fs
cli
sub
sub
out
stos
lods
test
stos
dec
sbb
pop
gs
xchg
and
mov
rcll
push
les
sbbl
push
test
jns
aam
outsl
push
fidivrl
mov
arpl
xchg
ja
pop
dec
mov
cmpsl
pop
inc
mov
fbstp
sbbl
bound
inc
aaa
imul
das
mov
cmpsl
jno
test
cmp
add
dec
and
add
or
fwait
xchg
adc
mov
lods
test
pop
std
sub
xchg
cmp
stc
fwait
jl
test
push
push
pop
enter
adc
mov
or
adc
mov
movsl
and
mov
ljmp
mov
loopne
mov
clc
add
cmp
movl
loop
pop
or
or
ret
test
xchg
lcall
dec
lea
mov
lahf
jne
add
mov
jp,pt
mov
cmp
shrb
mov
cmp
inc
insl
cmpsl
and
xchg
or
mov
fsubl
dec
lods
fsubrl
fxch
scas
lock
and
lcall
jo
or
pusha
fstl
or
ljmp
fsubrs
inc
dec
jae
push
sbb
add
in
popf
push
xlat
sbb
lds
xchg
and
cmp
xor
into
xlat
and
xchg
mov
add
leave
addb
ret
dec
dec
mov
push
hlt
enter
adc
jp
idivl
adc
dec
mov
cmp
inc
stos
mov
jnp
mov
add
pop
stos
adc
ret
sahf
mov
mov
push
pop
in
lret
fisubrl
xor
sahf
cli
push
jne
int3
push
mov
lahf
cmp
and
cmp
sbb
daa
test
negl
sbb
mov
xchg
cmpsb
fiaddl
adc
mov
jle
fcoml
xchg
nop
sub
adc
mov
or
jg
add
loope
dec
inc
sub
or
push
inc
sbb
cmpsl
sbb
movsb
sbb
dec
and
movsl
ret
inc
insb
addl
pop
test
nop
mov
cmp
shll
mov
or
into
or
fisubs
int
jp
rcrb
mov
arpl
inc
lds
repz
jg
push
jae
mov
mov
jecxz
mov
sbb
enter
or
das
inc
mov
int3
pop
subl
add
test
lods
xchg
lods
jae
out
mov
fldl2e
out
jp
mov
xchg
add
bound
ds
or
or
xchg
movsl
fisubrl
push
imul
scas
pop
jno
leave
sub
inc
inc
add
xor
mov
add
push
or
add
pop
inc
orb
inc
jge
or
lcall
and
and
ret
jmp
xor
jbe
jp
test
sub
adc
shrb
jb
mov
inc
mov
mov
or
inc
fistpl
fisubrs
les
in
test
popa
mov
jbe
inc
inc
jbe
stos
jns
jg
mov
mov
xor
inc
xchg
jo
pop
mov
arpl
cld
jg
xchg
mov
lret
lret
popa
xor
jg
or
dec
mov
scas
cmpsl
push
add
in
pop
lret
xchg
pop
pop
scas
mov
pop
inc
insl
mov
insb
fwait
lahf
inc
stc
mov
xchg
cmp
cltd
push
inc
cli
mov
je
xchg
pop
pop
push
iret
adc
push
mov
sbb
dec
cltd
outsb
mov
fsubrl
jae
loop
fwait
jecxz
add
and
andl
mov
push
fidivrs
push
loop
pop
xor
pop
test
addl
xlat
pop
xchg
insb
lods
fsubl
cmp
nop
and
fisubs
xor
in
lock
fcmovne
es
je
xchg
les
cmpsl
sarb
xor
mov
dec
sahf
dec
mov
lahf
fldt
mov
mov
cmc
inc
aas
ret
jns
push
xchg
add
lods
scas
test
ret
mov
mov
imul
in
pop
cmp
sbb
cmpsb
push
sbb
idiv
lahf
and
js
xor
repnz
rcrl
xor
mov
cmp
pushf
dec
insb
or
sbb
lret
fildll
cmc
push
ljmp
lods
imul
cmp
push
fwait
popa
dec
cmc
pop
push
aam
xlat
data16
add
iret
xor
idivb
fstl
pop
and
outsb
or
ficoml
cmp
jmp
andps
jge
mov
inc
push
adc
adc
push
in
popf
call
inc
jmp
lds
mov
insb
mov
xchg
rcll
ret
push
aaa
pop
mov
sbb
add
inc
adc
ret
xor
icebp
inc
adc
add
loopne
call
adc
cmp
mov
ljmp
outsb
scas
and
jo
sub
xchg
dec
pop
or
lret
iret
mov
xor
stc
push
dec
pushf
dec
and
mov
mov
pop
ja
and
lcall
xchg
lret
arpl
cmp
cmpsl
push
icebp
fdivl
out
or
cmp
adc
sbb
je
mov
inc
sbb
rcll
fucomi
or
inc
xchg
cmp
pop
sub
fcom
mov
add
mov
push
push
push
jle
mov
je
mov
push
shrb
jnp
cmp
aam
jge
ja
in
test
jae
mov
mov
ret
jle
sub
scas
enter
daa
adc
adc
xor
scas
lret
aad
movsb
in
mov
or
add
lods
inc
mov
or
cmp
mov
test
mov
pop
sub
cld
shll
add
xor
push
cli
insl
movsl
cltd
faddl
clc
mov
idivb
mov
mov
sub
mov
pop
iret
stc
mov
fmuls
call
jp
test
repnz
pop
imul
mov
jg
sub
xchg
rol
cmpsl
lret
cmp
adc
lahf
icebp
cmp
jno
lds
icebp
leave
test
outsl
pop
inc
and
cwtl
ljmp
lea
loopne
repz
jle
sbb
add
sub
jecxz
add
pop
xchg
mov
and
add
pop
pop
mov
fisubs
inc
cmc
push
push
or
push
xchg
enter
ret
jl
sub
les
and
pop
and
inc
int
aas
test
out
les
inc
cmp
ja
scas
pop
jae
mov
mov
lock
es
sahf
call
or
stos
pop
leave
add
fadd
mov
jno
ja
repz
pop
pop
or
icebp
jmp
sbb
bound
lcall
cmp
inc
in
orl
insb
sub
out
mov
mov
and
cltd
xchg
add
cmpsl
inc
in
cmp
inc
fbld
cmp
or
sbb
add
icebp
pushl
mov
fsubrs
xor
repnz
mov
sahf
movsb
mov
jae
lods
pop
mov
mov
fld1
jns
aaa
nop
and
pop
clc
enter
cwtl
or
mov
dec
add
sbb
int3
sub
fnstenv
mov
adc
cmp
call
out
and
gs
fildll
xchg
hlt
jl,pt
bound
enter
cmp
arpl
mov
add
insb
data16
sahf
mov
xor
arpl
stos
mov
pop
xchg
pop
inc
shrl
outsl
and
scas
mov
pop
jp
fldt
sub
adc
inc
bound
sub
lcall
iret
stos
pop
outsl
add
adc
enter
scas
das
cwtl
jno
lods
adc
adc
fisttpll
aad
leave
push
push
jl
and
jne
insb
inc
adc
lea
push
add
jp
movsl
mov
pop
mov
stos
icebp
mov
mov
test
gs
push
jnp
mov
xor
fwait
rcrb
sbb
scas
ret
xorl
mov
mov
popa
cmpsl
xor
mov
dec
loopne
mov
fsubs
inc
dec
pop
mov
imul
pushl
adc
lds
adc
orl
sysenter
xor
mov
lret
jns
pop
jb
lods
mov
shrb
push
fstp
arpl
and
lock
ss
int
push
cmp
add
sub
enter
or
stos
dec
mov
negl
and
mov
jnp
dec
mov
lcall
lahf
mov
pop
jns
lods
fstsw
inc
lret
sbb
and
add
jo
adc
sub
jnp
inc
sti
jmp
fwait
mov
ljmp
mov
lahf
popl
out
sbb
sbb
mov
mov
cmp
and
pop
out
push
adc
sahf
int3
adc
jmp
lret
pop
jo
hlt
mov
roll
in
cmp
or
jg
imul
lret
loop
sar
aad
jbe
mov
cmp
mov
xor
mov
insl
lahf
push
adc
cwtl
or
sub
aad
shll
in
mov
lcall
xchg
int3
push
dec
popf
enter
adc
nop
fisubrl
mov
insb
xchg
add
repnz
push
jno
pushf
ss
xchg
sub
lods
popf
adc
mov
clc
inc
xchg
inc
lahf
cmp
mov
push
or
imull
rcll
mov
adc
int3
les
xor
add
push
sub
cs
mov
ss
cltd
enter
push
sbb
dec
push
xchg
inc
dec
xchg
add
or
mov
push
adc
mov
cmp
mov
sub
push
dec
or
inc
adc
adc
and
dec
lahf
lds
xor
adc
pop
push
outsb
dec
add
pop
or
lods
lahf
movsb
pop
push
cwtl
lret
movsl
ret
jbe
jnp
stos
mov
jns
push
test
dec
test
mov
jle
jecxz
loope
mov
imulb
es
test
js
int3
sub
xchg
lret
adc
mov
push
mov
pop
addb
mov
cmp
roll
shrl
shr
repnz
pop
rorb
xchg
or
cmp
mov
dec
dec
xor
jle
xor
mov
pop
mov
xchg
mov
insl
cmc
leave
movsb
inc
sbb
cmp
mov
add
fs
out
aad
xchg
aas
and
int3
pop
xor
cmp
mov
dec
push
dec
add
cs
cltd
cmp
adc
mov
jae
outsb
cmpl
cmp
stos
and
mov
ret
int
cltd
push
inc
mov
add
loop
cmc
icebp
fwait
dec
fistpl
data16
xchg
dec
and
imul
sar
movsl
adc
jge
pop
cmp
sub
fucomp
jae
sbb
jmp
les
sbb
stos
fiadds
or
jge
jns
xchg
xchg
sahf
je
jne
dec
inc
xor
sbb
dec
nop
ja
xor
xor
shlb
xchg
pushf
lret
jmp
scas
fcomip
sub
iret
xchg
aad
pop
sub
mov
mov
jmp
jae
xor
cmp
inc
cmp
xchg
mov
xchg
fsts
in
mov
mov
dec
xchg
fldl
mov
mov
pop
jl
pop
repz
rorb
inc
mov
insb
cwtl
and
pop
jecxz
dec
mov
lcall
stos
dec
sahf
dec
dec
les
in
into
hlt
xchg
enter
inc
mov
je
fdivrl
add
repnz
out
std
call
int
jle
add
fwait
inc
icebp
call
sbb
cltd
or
mov
in
stos
jle
inc
ficoml
icebp
daa
xchg
xchg
dec
sbb
mov
push
pop
outsb
mov
and
add
jno
je
sbb
push
push
rcrl
xchg
fcmove
xorb
aaa
fwait
lods
mov
mov
roll
dec
mov
popa
or
mov
loop
and
mov
ljmp
iret
sub
adc
xchg
jp
popa
test
sub
fdivrs
dec
daa
popf
stos
xor
ret
clc
fdivr
inc
mov
xor
and
mov
or
xchg
mov
int
mov
cli
repz
jge
rcr
fdivrp
pop
stos
lods
lea
aam
mov
mov
jmp
mov
fistpll
lock
mov
adc
gs
mov
or
insl
popf
xor
xchg
or
std
daa
nop
xlat
std
enter
stos
mov
loope
push
cli
mov
xlat
mov
ja
push
mov
lods
mov
sarl
inc
imul
xor
add
or
lret
stos
xchg
cmp
mov
xchg
int
pop
xchg
xchg
test
push
lea
mov
ss
sti
rcrb
jecxz
jns
shrb
cmp
adc
or
add
mov
pcmpeqb
dec
nop
dec
and
bound
inc
out
push
js
add
ficoms
repz
jecxz
cmovl
add
mov
movl
aad
sbbl
sub
in
add
mov
aam
cmp
jo
sahf
pop
jae
addl
jmp
sbb
popa
lahf
outsb
sbb
add
lds
mov
mov
lcall
jb
dec
fisubrs
add
mov
fucomp
fs
adc
dec
ds
mov
mov
jo
enter
rclb
syscall
ficompl
push
insl
data16
cs
jmp
push
sub
jl
inc
or
inc
insb
add
test
or
fcoml
cmp
xor
lret
pop
inc
sar
mov
std
xchg
mov
fwait
jmp
cltd
or
jbe
or
xor
aam
daa
dec
dec
xchg
lds
test
inc
cmc
lea
push
test
enter
sub
and
pop
add
enter
sti
jmp
xchg
adc
xor
and
mov
call
ret
loopne
pop
daa
into
xor
jge
loopne
icebp
aaa
std
imul
cli
ja
lahf
lods
jecxz
or
add
jp
mov
lahf
xor
loop
test
pop
stos
push
sub
mov
xchg
push
dec
repz
fucomp
or
shr
adc
adc
and
ljmp
inc
mov
scas
inc
stos
jbe
mov
xchg
pop
sbb
and
fdivs
scas
dec
lret
push
lock
lods
shl
adc
or
mov
mov
adc
fisttpll
orl
mov
mov
or
and
lahf
sbb
add
lea
lea
sbb
pusha
or
movsl
movsb
sub
mov
cmp
fcoms
cmp
cmp
cmp
mov
adcl
loopne
les
pop
pop
xor
cmp
cmpsb
mov
es
cmp
push
mov
adc
frstor
and
imul
aam
stos
test
push
mov
lcall
out
jo
fucomi
mov
es
je
xchg
add
and
lcall
daa
call
fsts
sub
and
mov
dec
xchg
test
shl
or
sbb
jns
incb
out
int
jo
orl
mov
mov
sub
adc
jae
mov
loope
pop
cmp
jbe
cmp
aas
fwait
lret
in
mov
fldt
mov
outsl
das
add
sbb
cmp
dec
dec
test
fsubs
aaa
jle
add
mov
add
xchg
mov
aam
loope
int
pop
lea
jl
mov
je
mov
div
mov
adc
jl
imul
mov
sbb
xorb
mov
xor
fnsave
fildll
fidivs
popa
xchg
push
sarl
add
add
mov
in
cmc
mov
fs
mov
or
jl
pop
jbe
test
aaa
pushf
cli
cmp
sbb
int3
scas
sbb
or
shrb
xchg
stos
pop
divl
inc
sbb
dec
mov
mov
inc
iret
mov
xchg
repz
pop
inc
std
inc
les
jbe
ret
inc
and
cli
xor
fwait
xlat
aad
movsl
negb
int
mov
dec
pop
or
ret
int
fstp
imul
dec
mov
sbb
dec
loopne
ljmp
lcall
pop
or
idivl
mov
sub
lock
hlt
pop
fcmovnb
ret
popa
mov
or
pop
sub
adc
adc
push
and
cmp
fistps
mov
dec
popf
lret
cmp
mov
sbb
addb
add
push
imul
push
cmc
fwait
lods
movb
sti
mov
mov
jnp
enter
scas
lahf
fucomi
repnz
and
pop
inc
fwait
lret
fs
xor
pop
or
add
out
fisubl
mov
mov
inc
cwtl
out
sub
repnz
loope
or
and
cmp
fs
pop
stos
jge
in
jb
and
inc
jno
and
insl
sbb
and
push
testl
push
call
les
sbb
arpl
mov
mov
pop
inc
lret
movsb
pop
dec
cmp
clc
les
aaa
xchg
pop
mov
xor
sub
or
mov
mov
push
outsb
stos
xchg
lret
mov
adc
gs
stos
jnp
ljmp
test
pop
xchg
push
xor
adc
sub
mov
popf
out
pop
stos
hlt
mov
cmp
cs
lock
pop
xorl
ret
pop
scas
inc
lock
jmp
jae
mov
out
cs
jge
pop
dec
les
sbb
scas
lcall
push
mov
jmp
sahf
test
test
inc
xor
pop
mov
pop
jne
sbb
push
jp
fwait
lea
and
stc
js
loop
sbb
xchg
sub
lret
inc
xor
mov
test
push
mov
call
xchg
and
je
aas
cmp
iret
int3
out
xor
out
jg
pop
pop
dec
mov
add
test
or
and
mov
and
dec
repnz
das
push
dec
pop
adc
mov
jne
test
mov
mov
cli
pop
jecxz
mov
mov
pop
into
rolb
cmp
pop
sub
mov
lcall
jno
aad
mov
or
cmp
jl
inc
and
or
pop
sub
je
adc
ss
ds
inc
rcrl
xor
sbb
pop
mov
insl
out
popf
adc
gs
daa
stos
pop
mov
rclb
lea
mov
mov
push
testl
sbb
inc
sbb
xchg
out
adc
adc
in
sub
adc
aam
sti
fiadds
lahf
int
jnp
mov
xchg
sarb
loopne
push
sub
jb
mov
dec
xchg
adc
subb
xchg
pop
into
in
or
push
push
enter
mov
lret
out
js
loope
cmpsb
sub
into
popa
rolb
es
dec
xchg
push
mov
pop
scas
push
std
xchg
lcall
test
negl
fs
pop
bound
adcb
ds
lds
and
xchg
fdivp
andl
sbb
jb
or
daa
or
cmp
sbb
stos
and
adc
mov
fbld
idivl
and
aaa
testw
pop
sub
adc
or
out
jne
pop
sbb
push
jle
scas
pop
enter
dec
push
and
mov
or
sbb
mov
dec
call
push
cmp
cld
les
daa
mov
ss
flds
test
push
into
inc
mov
mov
or
fbstp
inc
mov
sbb
xchg
and
mov
mov
ljmp
int3
stos
adc
sub
icebp
stos
into
insb
adc
cwtl
mov
scas
aaa
mov
in
enter
sub
dec
cmp
stc
xchg
out
sub
aas
pop
pop
xchg
pop
sub
and
jb
movsb
push
dec
int3
lods
aad
push
les
add
pop
lahf
add
mov
push
and
cmpsl
ret
xchg
sub
lds
adc
pusha
xchg
in
pop
sub
push
or
int
gs
fldcw
dec
sahf
dec
aad
dec
mov
movsl
sbb
dec
pop
mov
f2xm1
pop
mov
sahf
addr16
das
leave
lret
out
jp
add
enter
push
fildl
shlb
lods
inc
daa
and
fldcw
push
jnp
daa
pop
inc
les
lahf
sarb
sbb
dec
jnp
sahf
pop
adc
fdivrl
xchg
push
cmpl
out
aam
push
rcll
lret
subb
push
stos
std
test
add
lret
sbb
add
fsubl
push
jno
aad
and
add
xchg
in
sbbl
adc
scas
add
xchg
xor
mov
mov
rol
jae
push
out
jle
or
jmp
lret
push
cmc
lods
cmp
inc
xchg
xchg
and
mov
shlb
cmp
add
cltd
int3
pop
mov
inc
aam
outsb
mov
sub
dec
daa
inc
xlat
sbb
sarb
jne
and
pop
sub
call
pop
mov
fildl
sti
repz
inc
sub
lock
push
sbb
or
movsb
mov
cwtl
js
test
or
stos
mov
add
push
add
mov
sbb
jae
fldt
aas
int3
cmpsb
jno
push
rep
or
aas
sbb
xchg
mov
fcmove
mov
push
push
dec
push
cwtl
rcl
xor
sub
outsl
jne
lods
push
sbb
mov
jo
sub
pop
lret
out
repz
xchg
fcompl
adc
jbe
sarb
in
push
push
add
lods
cmp
in
adc
jp
cmpsb
mov
xchg
sbb
and
cmp
sub
enter
xor
mov
adc
xor
test
or
mov
shrl
mov
cltd
sahf
imul
bnd
cs
scas
jne
push
sbb
xor
fadd
and
cmp
add
add
out
stos
stc
sbb
jne
pop
adc
pop
xor
mov
dec
mov
push
lea
mov
push
pop
mov
dec
dec
sbb
xchg
negl
push
push
jae
mov
add
mov
jl
add
mov
dec
popf
lds
inc
pusha
xor
or
and
dec
mov
lods
jle
mov
call
shrb
cmp
mov
or
addb
pop
outsb
rcl
nop
push
sbb
mov
xchg
mov
jmp
pop
mov
pusha
lret
mov
jns
mov
aaa
popf
iret
out
fwait
hlt
mov
insb
aaa
sbb
test
rdpmc
sub
idivl
xor
push
dec
mov
sbb
stc
adc
mov
xor
mov
call
int3
jae
cmp
cmp
shl
scas
mov
dec
divl
mov
adc
lret
pop
test
dec
sub
xor
sub
icebp
sbb
xor
test
mov
ret
negb
sbb
and
mov
mov
pop
mov
sub
lahf
or
idivl
mov
stos
leave
loop
sub
xchg
cmp
je
and
inc
add
popf
sub
cwtl
int3
mov
inc
pop
ds
lahf
outsl
aas
add
or
adc
test
enter
adc
fdivs
and
jp
inc
jno
cmc
fsubs
adc
jns
jmp
scas
sub
repz
int
xchg
lods
inc
pop
std
mov
cmp
fdivp
mov
xchg
mov
inc
dec
and
stc
test
lahf
rorb
test
cwtl
ja
fs
mov
and
hlt
test
in
push
push
dec
pop
mov
cli
fistpl
in
inc
cmp
jae
into
mov
inc
sub
test
inc
scas
xchg
mov
fisubrl
stc
scas
mov
and
fs
movsb
test
lods
inc
sbb
inc
xor
in
bnd
enter
sub
adc
add
sti
add
enter
enter
jl
adc
repz
sarb
or
mov
sub
test
lahf
out
mov
or
fisubs
xor
mov
arpl
nop
xchg
cwtl
inc
rorl
xor
mov
sub
hlt
out
insl
fldl
inc
mov
lret
test
and
mov
push
rolb
stos
aad
pusha
xor
add
sarl
xchg
adc
sbb
addr16
scas
inc
fwait
mov
sbb
push
lods
sub
imul
inc
and
cs
icebp
fsubl
lret
dec
sbb
sbb
sub
mov
push
push
pop
xchg
sbb
andl
mov
push
mov
mov
push
or
mov
pop
adcl
pop
xlat
in
divl
dec
shll
fmuls
hlt
xchg
call
shlb
pop
mov
stos
mov
xchg
lcall
push
xchg
std
bound
inc
mov
push
sub
inc
inc
cmpl
xchg
xchg
sbb
jge
jnp
inc
adc
dec
and
shll
inc
movsl
repz
pop
loopne
and
imul
cmc
lret
insb
cmc
cmc
push
sbb
fsubrl
adc
inc
aas
add
sbbb
int
aad
pop
sbb
lds
cmpsb
test
lods
mov
and
xchg
rol
ret
mov
mov
imul
into
sub
cmp
fdivl
mov
lcall
dec
mov
lea
stc
add
pop
xchg
inc
sahf
push
fstps
xchg
sub
add
nop
sbb
sub
repz
or
and
jmp
testl
fs
cmpsb
addr16
add
xor
imul
ret
sub
xchg
lods
mov
insb
lret
xor
cmp
fidivs
add
jecxz
mov
mov
mov
lock
sbb
sbb
mov
mov
push
mov
dec
adc
out
cmp
sbb
imul
sbb
sti
jns
pushf
shrb
mov
pop
jne
lock
or
in
cmp
out
out
sbb
add
sbb
push
xchg
stc
stos
push
test
hlt
stos
repnz
pop
fnsave
in
inc
sbb
shll
pop
xor
adc
test
and
rcll
xchg
int
ficompl
pop
scas
test
aad
insb
push
outsl
inc
test
cli
or
xchg
or
mov
mov
pop
sub
popl
cmp
addr16
xchg
lea
fwait
xor
shrb
and
jae
push
push
popf
insl
mov
shll
and
jb
pop
mov
mov
and
orl
fisubrs
aam
sub
cmpsb
icebp
ja
into
mov
lods
mov
imul
fildl
enter
mov
mov
aam
imul
jmp
ret
jl
sub
jmp
test
xchg
dec
or
fildll
jmp
xchg
iret
dec
push
mov
xchg
mov
lock
add
clc
test
push
vmaxss
mov
cltd
roll
cmp
sbb
adc
cwtl
and
into
scas
pop
xchg
cmc
in
subl
or
imull
adc
sub
dec
and
loop
scas
inc
push
imul
les
inc
stos
mov
sti
jb
fwait
lea
mov
inc
lods
jae
inc
mov
enter
sub
lcall
inc
adc
stos
mov
dec
loope
push
or
mov
mov
repnz
and
repnz
inc
push
mov
mov
cmp
es
cmp
andb
stos
rcrl
test
lea
sbbl
sub
sbb
add
into
pop
fldl
jns
ds
mov
mov
sti
cmpsb
js
sub
and
ret
xor
xchg
jge
gs
test
adc
aam
or
sarl
push
js
and
inc
mov
das
iret
popa
fisttps
fbstp
stc
cmp
popf
iret
adc
repz
jg
mov
mov
push
dec
xor
cld
scas
data16
je
or
or
cmp
push
aam
fidivl
imul
jp
cmpsl
jnp
add
mov
in
mov
inc
rolb
jo
out
cmp
loopne
ljmp
lret
loopne
sub
jbe
mov
mov
xchg
jge
mov
jmp
lcall
mov
sbb
xchg
pushf
pop
divb
jl
cs
or
adc
push
in
dec
int
add
and
leave
or
into
int3
push
aaa
lret
jb
in
imul
cwtl
aam
and
lret
mov
or
scas
xchg
stos
pop
xor
and
inc
or
or
stc
test
inc
sbb
push
dec
ret
mov
push
fisttps
leave
loop
inc
lahf
sub
repnz
push
jge
popa
or
sbb
xchg
inc
or
rclb
inc
movsb
mov
in
push
fidivrs
add
lds
mov
insl
lock
loope
lcall
xor
mov
sbb
add
popa
sbb
lcall
jmp
xchg
xchg
bound
sarl
add
push
inc
inc
jbe
js
mov
inc
mov
push
inc
rcll
sti
mov
add
xchg
scas
pop
pop
push
xorb
mov
xor
sti
dec
sub
loope
pop
mov
test
mov
in
jne
and
rorb
fwait
mov
fs
dec
pop
test
mov
pop
sub
nop
std
aas
jp
lods
hlt
cmp
imul
or
mov
lds
inc
test
cmp
xchg
cli
sti
add
fprem1
cmp
int
pop
shll
dec
cwtl
popf
xorl
adcb
and
bound
sbb
pushf
mov
sub
lret
and
cmp
jns
cmc
pop
in
enter
hlt
push
pop
mov
push
add
cltd
jns
pop
pop
aad
pop
and
sub
repz
xor
insl
fadds
repnz
rorl
ret
sbb
subl
mov
mov
sbb
movsb
outsb
dec
push
sbb
dec
repz
push
fidivrl
dec
sbb
add
stos
cmp
jge
push
mov
pushf
jp
outsl
cmp
shll
mov
xor
js
retw
jb
adc
std
repz
adc
jge
mov
xchg
lcall
mov
inc
inc
mov
gs
push
test
xlat
mov
xchg
mov
sub
dec
inc
cmp
mov
cmp
pop
jge
add
fcoml
pop
cs
xchg
fisubl
pop
flds
mov
lods
pop
adc
mov
adc
sub
imul
mov
int
imul
and
mov
popa
lea
dec
mov
cmp
mov
mov
fadds
xchg
in
ret
pop
subb
rcrl
ja
mov
nop
push
movsl
dec
jno
pop
pop
popa
inc
das
pop
sarb
cld
jle
fstp
test
mov
sahf
loopne
jle
dec
jae
inc
or
dec
popf
mov
mov
pop
nop/reserved
sbb
mov
insb
dec
jne
jns
push
mov
stos
shrb
pushw
inc
sbb
lcall
popf
scas
lahf
daa
leave
add
dec
mov
push
pushf
sbb
mov
jg
fwait
sub
mov
pop
je
adc
adc
mov
fwait
and
sbb
mov
ret
frndint
jb
fwait
lea
push
and
inc
add
adc
xor
mov
lahf
icebp
mov
dec
lret
mov
fstps
cmpsl
mov
mov
stos
mov
call
add
sahf
cmpsl
ja
lret
loop
pop
loopne
fistps
lock
mov
jg
jmp
mov
pushf
sbb
je
inc
sbb
rcrb
cld
jle
sbb
jmp
rcrl
movsb
shll
fs
fbstp
imul
mov
pop
invd
mov
ret
into
xchg
or
cmp
testl
push
mov
jae
push
xchg
fldenv
xor
and
fcmovnb
push
roll
mov
mov
mov
in
or
movsl
or
mov
xor
sarb
cmc
or
pop
adc
cmp
jne
jmp
cmpsb
inc
cltd
lret
and
cmpsb
adc
das
fwait
aas
or
sub
or
lods
sbbb
inc
mov
mov
xor
cmp
xchg
neg
xchg
into
inc
mov
push
add
push
or
jl
jmp
lahf
lret
hlt
lea
aad
movl
cmp
ficoml
sbb
xchg
xchg
adc
xor
icebp
xlat
lret
fisttpll
inc
out
dec
sub
pop
std
push
shll
fisubl
mov
cmc
lods
addl
push
push
cld
movsb
inc
adc
imul
dec
jno
mov
push
xor
lods
pop
mov
popf
mov
js
aad
sbb
or
loop
add
sub
mov
pop
inc
in
push
mov
push
fsubl
vpavgb
dec
cld
cmp
lds
out
or
sub
sbb
gs
cmp
dec
push
push
mov
cwtl
decb
rcr
aam
inc
push
lods
sahf
jb
pop
stos
test
cmp
js
bswap
fucomip
in
test
popa
paddsw
push
iret
cld
arpl
cmp
jb
pop
es
mov
fsubrl
adc
sub
jecxz
ret
jg
dec
ffree
dec
sbb
sbbl
ljmp
lods
fimull
pop
sub
cld
jo
rcrb
jne
add
adc
push
jb
lods
pop
rorb
add
rcrb
jnp
push
gs
sbb
or
adcb
xlat
push
in
inc
push
mov
dec
in
inc
test
and
xchg
int3
jns
adc
xor
dec
xor
add
call
jg
out
clc
cmp
or
jecxz
test
push
je
lcall
mov
pop
push
mov
fidivrl
mov
add
mov
loope
ds
mov
call
cmpsb
push
movsl
inc
and
shll
add
bnd
ja
dec
adc
mov
je
arpl
mov
test
fldenv
movsl
clc
imul
lret
stc
mov
xchg
movsb
les
xchg
and
or
push
sbb
mov
xchg
out
inc
dec
mov
pop
test
sbb
arpl
mov
inc
ret
shrb
jmp
cmp
inc
or
inc
andl
xor
xlat
or
pop
xor
add
bound
fnstsw
pop
lock
push
dec
pop
cmpsl
lahf
scas
ret
mov
inc
cmp
out
sub
and
push
lods
imul
xchg
or
adc
mov
into
jge
jmp
sarl
sub
icebp
mov
pop
loopne
test
cmp
pop
jbe
xchg
xchg
or
mov
mov
pop
enter
int
mov
fsubrl
ret
movsl
mov
jp
scas
jnp
mov
ret
xchg
pop
mov
sbb
fnstsw
insl
out
out
lods
dec
sbb
cmp
xor
hlt
mov
add
add
xchg
xor
xchg
cmpsb
mov
stos
push
inc
gs
mov
or
xchg
in
lahf
lahf
sub
xchg
fbld
mov
adcl
and
add
sub
test
movsb
jne
xchg
pop
fnstsw
xchg
add
imul
xor
movsl
cmp
cli
pop
cmp
enter
mov
jb
jecxz
pop
inc
push
or
dec
fisubrs
fsubrs
mov
rcr
inc
pop
dec
push
sahf
shrl
movsb
pop
jbe
je
in
notl
jmp
fwait
mov
in
clc
mov
mov
sbb
add
add
mov
ljmp
pop
popf
push
mov
pop
sbb
inc
cwtl
and
ss
shr
cmp
cmp
pop
cld
pushf
sbb
xchg
push
mov
jmp
inc
mov
scas
xchg
dec
mov
sbb
pop
inc
xchg
mov
mov
jmp
push
xchg
push
add
add
jns
dec
and
jo
sti
das
mov
out
inc
mov
cmp
es
aam
push
xchg
sub
inc
pushf
fisubrl
jle
mov
sbb
enter
mov
sub
mov
mov
pop
mov
or
xchg
mov
mov
cmpsb
push
outsl
xchg
pop
jnp
mov
sbb
rclb
cmp
popf
js
sbb
fidivrl
test
fildll
lock
mov
sbb
es
outsl
mov
push
in
movsl
adc
lods
or
mov
cmp
lret
movsl
mov
outsl
push
push
add
push
fiaddl
out
js
int3
stc
inc
bound
mov
inc
mov
push
mov
lds
inc
outsb
cmpsb
sub
or
sub
les
fsubrs
cltd
lods
cmc
aam
dec
pushf
xchg
loop
cwtl
lahf
fbld
inc
sarb
hlt
cmp
xor
pop
cli
sbb
push
and
xor
and
repnz
xchg
jmp
inc
and
cmpsb
jo
or
xchg
push
or
or
pop
cli
mov
mov
inc
dec
mov
cmp
xchg
mov
dec
pop
imul
movsb
jmp
pushf
lock
push
mov
pop
fldt
jno
aas
sti
mov
clc
sti
inc
mov
xchg
mov
and
mov
jmp
andb
pop
enter
in
inc
inc
sbb
adc
movsb
and
push
lds
cli
and
scas
lods
mov
call
bound
into
test
aas
jecxz
mov
fdivl
sbb
addr16
xchg
cld
sub
mull
xor
sub
js
ljmp
jg
mov
or
cmp
add
hlt
pop
xor
cwtl
movsb
mov
xchg
imul
xchg
jae
icebp
pop
in
add
dec
add
xchg
mov
insb
fs
mov
or
mov
icebp
mov
hlt
fwait
mov
xor
cs
mov
call
pop
mov
lret
push
fstl
rcl
mov
jecxz
xor
xlat
les
hlt
roll
repnz
outsb
inc
rcrl
test
jmp
mov
inc
outsl
pop
mov
adc
dec
mov
push
testl
ss
aad
mov
inc
push
sub
jno
sbb
test
lret
aad
xchg
int
add
cmc
insl
add
or
mov
and
outsb
inc
sbb
ljmp
jge
pop
ret
inc
sbb
clc
cld
dec
ja
xchg
mov
out
inc
inc
popf
xor
call
mov
push
mov
xor
aaa
iret
jb
cmpsb
cmp
xchg
popf
and
inc
jne
mov
loope
stos
fdivrs
mov
dec
arpl
xchg
lea
mov
pop
fisubrs
pop
lcall
dec
add
sub
cltd
sbb
imul
adcb
fwait
jge
icebp
mov
hlt
mov
adc
xchg
add
cwtl
or
add
int
add
pushf
dec
xor
rol
leave
insl
cmp
add
add
push
dec
ja
sbb
mov
outsb
pusha
jmp
in
mov
push
les
stos
loope
test
cmp
int
data16
dec
inc
cmp
mov
pop
mov
lods
pop
push
adc
add
pop
ja
in
jle
scas
fildl
cs
inc
rolb
lea
cld
push
xor
fs
sbb
ret
jb
mov
and
sbb
test
mov
mov
and
sub
jp
pop
insl
lret
in
and
sbb
das
lea
inc
mov
test
movsb
pushf
stc
mov
mov
cmp
les
sbbl
adc
insl
loope
stos
jae
jmp
push
jp
pop
and
ss
mov
lahf
dec
fnsave
or
leave
xchg
push
cwtl
jbe,pt
push
mov
mov
or
push
jns
jae
mov
fildl
lcall
rolb
leave
mov
pop
sub
mov
cmp
mov
xchg
dec
push
cmp
lock
mov
adc
shrb
jns
mov
adc
mov
pop
movl
shlb
jno
andl
scas
and
popf
inc
xchg
shll
push
sub
daa
rcrl
sbb
and
mov
and
xchg
pusha
xor
cltd
mov
lahf
dec
mov
add
push
call
jbe
push
sahf
dec
mov
sbb
lea
aaa
out
mov
fmull
add
adc
jae
sbb
jmp
jns
jle
rcrb
cltd
je
jecxz
xlat
dec
fisttps
leave
mov
and
xor
aam
sub
rclb
mov
repnz
jns
fdivr
dec
out
lods
mov
dec
pop
inc
mov
js
aam
push
jo
mov
jge
cmp
pop
pop
jnp
cwtl
lret
pusha
pop
dec
jnp
leave
ret
in
lahf
scas
adc
or
pop
push
ret
repnz
in
sbb
mov
add
mov
pusha
stos
mov
xlat
push
fdivrs
mov
push
mov
mov
aas
fsubl
mov
mov
xchg
fldz
call
popf
popf
sub
enter
repnz
hlt
imul
fimuls
fs
jne
or
pop
and
dec
out
mov
arpl
movsb
in
mov
jno
sahf
push
int3
mov
or
mov
outsb
int
in
leave
fsubl
fs
aad
mov
test
ljmp
loop
push
in
int
pop
xchg
out
arpl
pop
dec
lahf
mov
aad
test
xchg
test
add
das
add
test
fisubrl
rorl
xchg
ficoml
dec
mov
push
jns
test
fmul
aad
lods
popa
add
mov
and
add
sahf
pop
dec
cli
movsl
repz
pop
sub
inc
stos
mov
or
sbb
mov
test
sub
mov
jg
ja
cmpl
rorb
es
mov
imul
insb
xchg
xor
add
cltd
pop
adc
adc
pop
mov
dec
sbbb
inc
push
test
popa
mov
sbb
sbb
lret
xchg
shll
xor
pop
mov
and
xchg
push
mov
add
int
ret
inc
and
shlb
mov
push
cmp
test
pushf
jg
pop
clc
popa
mov
push
in
mov
or
or
js
std
imul
xchg
stos
xchg
dec
lock
adc
gs
dec
imul
fcoml
pop
mov
mov
fdiv
sub
das
loope
mov
push
xchg
popa
inc
cmpl
sbb
arpl
xor
insb
or
jge
cmp
push
call
mov
insl
das
sbbl
outsl
das
add
out
adc
jg
mov
add
cmp
xchg
and
mov
push
sarl
add
rorl
in
xor
mov
ja
lds
icebp
inc
bound
add
lret
in
stos
mov
sbb
sbb
das
adc
gs
or
js
lret
push
lods
xchg
sub
adc
mov
dec
inc
fwait
or
sti
cmp
add
mov
bound
test
xchg
flds
cmp
and
push
or
push
xor
sahf
lahf
mov
pop
add
ficoml
mov
jns
push
mov
movsl
dec
push
lea
sbbb
mov
aas
fiadds
mov
and
mov
jb
lahf
movsb
jnp
dec
repnz
pop
movsl
test
sub
mov
lahf
outsl
cmp
mov
mov
mov
ret
bound
or
fwait
scas
sbb
cwtl
test
dec
mov
xor
xor
mov
fcoms
shlb
mov
movsb
pop
in
mov
ss
mov
movsb
call
fwait
and
lods
push
lock
add
or
mov
sbb
and
dec
push
cld
mov
cwtl
call
push
lahf
push
inc
sbb
mov
add
scas
sbb
push
leave
mov
push
jmp
add
cld
mov
sbb
xor
ja
inc
fsubrs
dec
sub
nop
jl
fsts
and
xor
inc
xchg
lds
in
or
cmp
or
aas
in
testl
add
cmovg
push
out
dec
cmp
cmp
mov
xlat
sub
jb
adc
add
dec
xchg
jb
add
xchg
popf
inc
jecxz
sbb
push
push
xchg
and
jge
xchg
xor
scas
mov
inc
and
roll
call
add
repz
mov
decl
cli
jne
pop
lret
or
cmp
xor
ret
adc
pop
aas
add
inc
popf
mov
xchg
lret
movsl
ret
inc
push
cmpsb
enter
mov
pop
or
adc
dec
sbb
fldenv
dec
loop
mov
popf
in
int3
sti
shrb
xor
mov
mov
js
stos
add
addr16
cmp
xchg
int
inc
call
mov
pop
fwait
lret
repnz
pop
sub
xchg
out
enter
mov
push
shlb
push
lret
aam
pop
mov
and
out
add
dec
push
mov
movsl
repz
orl
inc
out
sti
test
int
mov
jb
add
iret
mov
mov
in
jmp
fsts
sub
shrb
lock
out
inc
lahf
dec
mov
fwait
or
sub
sbbl
pop
pop
mov
xorb
imul
iret
inc
mov
xor
sbb
ret
cmpsl
mov
mov
movsl
mov
insl
dec
cmp
lret
and
shll
or
push
sub
lret
pop
cld
repnz
mov
pop
popf
lret
int
add
sbb
add
dec
sub
jge
xchg
mov
lods
pop
adc
stos
cmp
mov
jle
sub
les
inc
shlb
mov
and
jmp
jo
xor
clc
jle
adc
xorl
movsb
lahf
xchg
movsl
out
rcl
inc
les
fstps
pushf
repnz
clc
and
sub
or
cmp
and
leave
add
insb
mov
jbe
xchg
out
ja
push
mov
mov
out
cmpb
stos
add
out
in
sub
inc
xchg
ja
stos
loop
sti
jge
xlat
testl
sbb
sub
lds
cmc
movsl
dec
push
nop
pop
xchg
adc
push
mov
std
mov
fiaddl
inc
pop
mov
dec
xor
imul
cltd
dec
gs
xchg
popf
lret
xchg
enter
mov
push
add
and
stos
adc
fldt
js
fld
sub
mov
lret
mov
test
mov
out
xchg
mov
add
cmp
or
or
adc
adc
je
sbb
rcll
inc
xchg
mov
sub
push
cmp
ds
popa
pusha
pop
sbb
fs
sbb
adcl
mov
push
mov
mov
fstl
out
jae
pop
cmpl
mov
push
jge
test
jp
enter
pop
jecxz
inc
dec
adc
pop
adc
inc
dec
adc
fnstcw
add
dec
dec
adc
jno
push
xor
mov
adc
mov
sbb
mov
out
scas
inc
mov
popf
ljmp
loopne
add
cmpsl
sbb
inc
shlb
inc
xor
loopne
pop
sbb
loopne
ftst
je
sti
cltd
lods
inc
mov
dec
inc
popa
repz
out
sbbb
jo
arpl
inc
add
lret
andb
add
xor
inc
rorb
push
scas
addr16
fcoms
push
and
lods
push
ret
into
repnz
jecxz
sbb
incl
lret
mov
push
aas
dec
insb
inc
jmp
cmp
pop
add
shrb
and
xchg
insl
mov
sbb
pusha
dec
fildll
ficompl
je
test
adc
rcrl
jno
iret
xchg
fdivp
divl
in
jae
mov
xor
inc
rolb
enter
fwait
push
cltd
sbb
xchg
shll
sbb
inc
imul
pop
push
dec
aad
aad
lods
mov
xchg
fcomps
xor
out
push
idivb
arpl
jge
or
add
lods
jnp
pop
add
xchg
inc
sbb
dec
and
iret
dec
sbb
jge
xchg
ficoms
inc
and
sub
push
inc
sub
fdivs
je
mov
rcrl
movl
sbbb
pop
xor
adc
push
mov
xlat
adc
in
cwtl
adc
and
icebp
jnp
jge
imul
cwtl
push
cmpsb
add
outsb
out
pop
fmul
mov
jmp
adc
mov
jbe
cmp
in
fwait
adc
jecxz
mov
ret
ds
mov
mov
xor
mov
mov
inc
aas
jae
ret
ret
sbb
or
shrl
lret
pop
nop
loop
cmp
dec
sbb
sub
rorl
ror
sbb
sub
xchg
sbb
jmp
ja
fidivl
add
cmp
test
cli
add
pop
mov
inc
xor
movsl
sub
cltd
lods
subl
or
xchg
sbb
out
hlt
jae
cmp
push
pop
dec
sti
icebp
arpl
ret
idivl
cmpl
not
les
dec
fsubs
adc
xchg
pop
jle
mov
cmp
jne
sbbl
dec
pop
rclb
inc
fdivl
loope
dec
add
or
faddp
xor
mov
dec
dec
dec
jle
push
dec
sbbl
in
decl
pop
mov
repz
mov
fsts
and
xor
bound
mov
xchg
testl
inc
rorb
and
ja
sbb
jge
test
mov
ret
sbb
leave
jno
cmp
xor
mov
jecxz
add
pop
lds
in
nop
or
dec
scas
rclb
mov
sbb
xchg
out
lret
ret
xchg
pop
iret
mov
xchg
mov
sbb
or
inc
adc
add
cmpsl
outsl
and
push
mov
pop
xchg
mov
lea
popa
sub
jae
or
xor
pop
jb
pop
lahf
pop
mov
cmpsl
xchg
xchg
addr16
orl
ret
fwait
xchg
mov
pushf
ss
xor
sti
mov
popa
jge
mov
out
rcll
iret
addb
jge
sbb
test
cltd
pusha
enter
cmp
mov
add
sub
dec
mov
jmp
cmp
xlat
stos
lds
jg
outsl
push
sahf
mov
mov
xlat
fbstp
cmpsl
rcrb
dec
mov
xchg
mov
pop
sub
mov
ljmp
mov
cmp
inc
xchg
dec
mov
test
fwait
imul
lret
jg
pop
js
bound
push
mov
pop
fldl2e
jo
jae
loope
sub
lret
filds
jae
lea
mov
adc
and
inc
and
into
movsb
sub
gs
popa
daa
fnstenv
add
stc
sti
push
call
mov
popf
jne
daa
mov
pushf
pop
sub
mov
jnp
out
dec
sbb
pop
mov
xchg
cmc
pop
adc
outsb
mov
push
stos
shll
clc
and
pushf
and
addr16
and
lea
inc
mov
fldenv
pop
ja
adc
in
ds
bound
lds
add
hlt
fxch
addr16
movsl
dec
popf
lret
cmp
mov
ret
arpl
rcl
jne
add
push
daa
jbe
int
out
lods
pop
adc
and
xor
insl
jge
incl
inc
cwtl
aas
mov
shlb
leave
dec
mov
cmp
inc
ja
sbb
imul
scas
leave
sbb
adcl
aas
fucomi
idivl
scas
push
dec
out
cs
xchg
sahf
dec
mov
mov
push
dec
fsubs
sub
das
jno
mov
pop
movsl
test
dec
pop
jge
mov
test
push
dec
sarl
subl
or
in
jge
mov
dec
sbb
dec
lahf
popa
mov
addl
dec
pop
mov
bound
icebp
xor
into
xchg
cmp
adc
mov
cmp
xchg
out
sbb
push
dec
xlat
mov
cwtl
imul
pop
push
jno
iret
movl
mov
mov
dec
test
stos
ret
fsubr
add
fldt
push
out
inc
arpl
pop
aas
sbb
dec
mov
stos
fidivrl
fldt
adc
lcall
movsb
js
js
test
inc
pop
cltd
ret
jg
mov
in
jp
das
jb
pop
adc
push
rclb
sbb
sub
cmp
xchg
pop
incl
js
mov
push
sub
push
mov
out
push
xchg
mov
xchg
aas
outsl
mov
cmp
pop
lret
and
es
outsb
and
sbb
imul
jne
movsb
popf
jecxz
mov
shl
pop
mov
jmp
ds
lcall
jb
inc
mov
lock
sbb
aaa
cmpsl
lock
mov
mov
in
popf
pop
dec
xor
testb
fstp
notb
subb
xchg
sub
int
lcall
aad
pushl
popa
xchg
mov
push
movb
pop
hlt
push
sub
xchg
js
sbb
push
jge
sub
pop
subb
or
cltd
ret
shl
mov
fmull
lahf
inc
adc
pop
js
dec
xchg
xchg
mov
cld
loop
mov
cmpsb
mov
jl
mov
inc
mov
jns
test
sub
loopne
movsl
inc
jecxz
inc
ret
inc
loopne
repz
icebp
jae
movsb
push
pop
sarb
add
mov
add
clc
gs
sbb
mov
imul
fdivs
enter
push
leave
push
lods
mov
andb
pop
sti
shll
mov
inc
adc
push
pop
mov
sbb
ds
mov
xchg
mov
sub
dec
mov
dec
cli
je
shll
xchg
or
lods
dec
pushf
dec
and
push
lret
cmp
fsts
pusha
push
mov
add
lret
int3
ljmp
pop
xor
sub
push
and
jecxz,pn
flds
sub
xor
cmp
inc
dec
pop
jb
mov
popf
pop
nop
jbe
mov
inc
cmpsl
dec
insb
jge
and
xchg
or
test
jnp
mov
jno
sbb
and
cmp
ljmp
mov
sub
cmp
push
mov
mov
rcrl
sbb
add
data16
pop
or
fs
and
sub
adc
gs
mov
sub
and
jmp
xor
add
sub
outsl
push
out
sub
pop
add
mov
sbb
stos
inc
mov
movsl
add
mov
inc
call
or
stos
out
mov
fwait
cs
insl
icebp
aaa
jp
ss
cmp
adc
push
push
scas
lods
jno
cs
int
jmp
pop
xchg
lcall
pop
loopne
jmp
add
sbb
lret
rcrl
and
fsubrs
stos
ret
mov
fs
pop
daa
adc
adc
fildl
stos
cwtl
jmp
xor
pop
cld
loop
in
imul
shlb
jmp
gs
mov
mov
lret
je
jp
push
mov
add
ja
add
pop
pop
xchg
fimuls
call
jg
lret
mov
and
add
sbb
dec
fcmovne
xchg
out
jns
mov
gs
lret
cmc
hlt
dec
pop
and
mov
and
dec
mov
pop
loopne
mov
sti
sub
sub
mov
mov
and
add
mov
and
mov
stos
ja
pop
stos
aam
cmc
mov
add
pop
cld
ja
lock
cmp
xor
adc
sub
add
dec
std
sbb
sub
lock
mov
je
js
and
enter
popf
movsl
popa
je
hlt
sub
int3
js
inc
inc
roll
je
jbe
rclb
jl
cwtl
add
pop
xor
mov
pushf
dec
jbe
sub
mov
fisubl
out
dec
lahf
pop
icebp
push
lret
jg
inc
cs
xor
sarb
sar
daa
test
add
test
imulb
fsubr
mov
shll
xchg
jnp
xor
ljmp
pop
mov
jb
insb
add
mov
pop
and
ja
mov
sub
inc
iret
mov
lods
xchg
lahf
sub
mov
fmuls
clc
mov
inc
cmp
test
adc
mov
dec
ds
in
xor
movsb
mov
sub
jno
shl
test
mov
or
std
pushf
xchg
push
fwait
rolb
inc
cmp
es
test
iret
dec
add
dec
gs
jns
dec
push
dec
fbld
sti
out
repz
mov
dec
std
jl
push
addl
dec
or
dec
hlt
xchg
into
and
mov
mov
inc
fstpl
imul
stos
cs
lock
cmpsl
mov
mov
jbe
push
jne
pop
or
jae
add
mov
mov
fs
xchg
mov
dec
dec
xlat
push
adc
gs
mov
push
cmp
mov
ret
icebp
jge
mov
ja
lahf
dec
fnstsw
inc
cmp
pop
push
mov
or
subl
dec
repnz
les
imul
lock
test
dec
into
or
in
out
mov
bound
iret
mov
js
cmp
lret
test
mov
inc
lcall
xchg
sub
adcb
test
add
add
out
dec
cmp
mov
lret
cmp
mov
std
xor
ja
jo
das
repz
push
pop
mov
xchg
xchg
daa
push
mov
mov
pop
pop
adc
xstore-rng
cmpsl
ret
fnstcw
and
or
pusha
inc
mov
mov
leave
pop
ret
stc
add
dec
sub
aaa
leave
sub
ret
push
mov
ds
jle
sbb
stos
mov
jns
fucomip
clc
cmp
iret
sbb
adc
add
pop
pop
cwtl
add
stos
xchg
cwtl
jno
inc
aas
sbb
outsl
sub
pop
out
testb
mov
mov
in
repz
je
scas
or
out
mov
fsubs
loop
push
adc
dec
loopne
xor
add
enter
xchg
cmpsl
inc
xchg
mov
pop
call
lods
inc
sbb
inc
pop
lock
xchg
xchg
shrb
fdiv
leave
or
sub
in
rolb
shlb
add
test
dec
mov
rcl
cmp
jecxz
hlt
inc
xchg
inc
stos
aad
xor
cmc
jmp
mov
cmpsl
fdivrl
inc
mov
int3
pop
sub
mov
cs
mov
lea
fisubrs
subl
lods
cmp
ss
cltd
mov
cmp
or
mov
xchg
testl
pop
jno
xchg
fwait
lahf
insb
pop
lock
mov
sbb
mov
jmp
sbb
pusha
jo
push
cmp
leave
adcb
xor
mov
pop
add
mov
ret
xchg
shll
cmpsl
xchg
cwtl
adc
mov
pop
repz
push
cmp
or
jne
sbb
cli
pop
cmp
pop
dec
sti
add
jp
xor
sbb
adc
mov
cmp
std
push
testl
push
xorl
hlt
daa
mov
pop
push
fdivs
movsl
jp
mov
popa
scas
popf
pop
and
lahf
adcb
jnp
fwait
lea
cs
cmp
cmc
dec
xor
sbb
imul
mov
mov
dec
sahf
dec
lds
xor
movsb
jbe
push
mov
mov
cmp
repz
sti
fidivrs
sub
enter
cltd
xchg
repz
inc
sub
testb
call
push
cld
scas
jp
xchg
test
ja
test
loop
mov
cwtl
dec
pushf
mov
call
push
adc
inc
inc
cli
sub
push
mov
stos
xchg
push
adc
enter
inc
cmp
mov
mov
cmp
sub
jp
xor
icebp
leave
loop
cmp
es
add
push
inc
sbb
add
stos
fsubrs
fwait
decl
and
pop
lods
push
sub
sbb
and
adc
gs
movsl
mov
push
addr16
sub
int3
or
and
xor
inc
mov
xchg
add
insl
lret
loop
fsubrs
inc
add
ja
sbb
iret
push
xor
and
cmp
sti
lahf
adc
jge
pushf
cld
fmuls
sub
mov
add
dec
roll
jne
inc
aad
lahf
hlt
xchg
arpl
lods
lea
movsb
mov
and
jns
lods
pop
add
adc
xor
inc
cmp
lock
jno
xchg
je
xchg
test
push
outsb
movsl
push
jnp
lret
mov
mov
mov
inc
mov
push
jb
mov
push
test
mov
adc
pop
lret
xor
cmc
mov
addr16
ljmp
inc
stos
dec
or
in
testl
lea
sub
pop
cltd
test
adc
aam
add
imul
cmpb
lods
sti
scas
jp
mov
das
popf
iret
dec
cmpsl
inc
popf
pop
cs
and
jae
dec
mov
in
inc
push
into
test
jle
pop
jne
imul
shr
repz
movsl
mov
or
loopne
iret
je
xchg
cmp
inc
sbb
sub
mov
negl
in
std
lret
pop
push
enter
mov
dec
sbb
fwait
pop
xor
mov
leave
xchg
mov
cmpsb
sub
jmp
mov
and
jbe
mov
andl
or
push
inc
mov
jne
jbe
mov
cmp
or
sub
clc
adc
loope
in
insb
or
pusha
aad
fnstsw
into
das
inc
subb
fdivl
imul
ffree
sbbl
enter
mov
adc
adc
ret
fwait
enter
je
sbb
lahf
dec
icebp
out
daa
pop
mov
dec
std
cld
jmp
lods
xchg
cmp
jb
adc
xor
lret
pop
adc
xor
xorb
xchg
dec
sub
stc
int
pop
dec
xor
add
fcoms
xchg
mov
cmovge
xchg
std
pop
adc
push
aas
add
mov
aaa
loop
mov
dec
icebp
test
and
iret
stos
mov
xor
std
cmpsl
dec
dec
mov
out
xchg
mov
lahf
lret
jle
push
jge
mov
mov
push
std
cmpsl
shrl
mov
push
add
add
xchg
xor
xchg
fisubl
and
mov
pop
ret
clc
fidivrl
movsb
xor
push
mov
shll
in
shll
push
scas
pop
jmp
jg
loope
push
lods
rclb
insb
push
andl
rcr
jmp
and
dec
fnstenv
int3
cmpsl
pop
xor
lods
aaa
fdivrl
add
movb
sub
mov
mov
and
mov
jmp
lahf
mov
xchg
arpl
xor
xor
mov
dec
sbb
ljmp
mov
sarb
add
mov
jns
cmpsb
xchg
sbb
jns
dec
pop
fsubrl
cwtl
pop
nop
jg
cmp
lret
sbb
test
sbb
mov
hlt
mov
mov
mov
or
fbstp
or
mov
inc
aad
xor
xchg
pop
sarb
jo
xchg
add
xchg
lea
inc
sub
mov
and
dec
enter
cltd
lods
aad
stc
addr16
xchg
add
jmp
xchg
cmp
sub
inc
or
jnp
add
popf
mov
adc
lods
or
cmc
pop
sbb
inc
dec
lods
sub
pop
bnd
mov
sub
jnp
cmp
xlat
and
or
xor
repz
mov
or
adc
cltd
pop
popa
mov
repz
mov
nop
or
inc
dec
sbb
and
dec
int3
out
sbb
xlat
pop
adc
adc
popa
cwtl
xlat
je
sbb
cmp
sbb
xor
sub
sbb
inc
in
mov
and
iret
jae
dec
adc
jae
cmp
mov
mov
inc
sbb
jge
or
pop
dec
add
inc
popf
xor
adc
cmp
sbb
adc
jbe
js
fstl
ficoml
pop
repz
incl
dec
inc
push
or
inc
fdivrl
sbb
adc
into
gs
mov
rorb
mov
mov
fs
insb
imul
adc
lea
jb
ret
popf
inc
testl
subl
adc
and
jne
dec
lods
out
dec
sbb
jle
cmp
ja
push
je
les
pop
mov
loopne
sub
push
rol
fdivr
pop
ss
add
dec
xor
arpl
xchg
das
or
pop
mov
popf
pop
mov
or
dec
sub
xlat
out
decl
xchg
popf
pop
pop
jmp
dec
lcall
fiadds
cmp
cld
cmpb
mov
fwait
mov
mov
icebp
cmp
inc
xor
mov
xchg
daa
mov
adc
fdivs
push
xor
lahf
xor
es
and
push
lods
push
cltd
jl
ja
test
js
fcom
jp
repnz
sub
movsl
test
cmpsl
jb
sbb
dec
popf
mov
dec
es
add
aaa
gs
repz
mov
jmp
aam
clc
das
aas
push
mov
rcr
mov
xchg
jecxz
and
push
push
les
fimull
dec
xchg
push
adc
and
inc
pop
ret
pop
repz
push
shrd
in
jae
mov
nop
push
sti
test
cwtl
xchg
fimull
insb
sub
and
add
pop
insl
sub
jno
sub
addr16
sub
fwait
scas
jge
xchg
push
sbb
shll
and
cmp
stos
pop
xchg
add
adc
ljmp
xor
dec
data16
lahf
das
cmp
mov
mov
lods
lods
mov
adc
xchg
lahf
sub
mov
xlat
movsl
and
push
imul
mov
mov
dec
push
mov
lods
jle
les
stos
pushf
out
mov
sbb
pop
lods
mov
jae
inc
xor
mov
in
sbb
and
sub
push
cmp
pop
test
dec
dec
int3
mov
push
mov
jb
rorb
mov
pop
mov
add
lds
inc
out
add
iret
les
jg
and
imul
mov
leave
data16
add
xor
mov
pop
sbb
scas
int
aaa
xchg
lds
pushf
dec
or
jl
aas
adc
test
js
stos
int3
inc
scas
xchg
lcall
xchg
xlat
fildl
or
jae
cmpsb
js
vpaddusb
adc
outsb
cmp
and
aam
out
xchg
add
push
jl
mov
jmp
std
mov
fsubrs
pushf
outsb
mov
xchg
xchg
lret
movsl
ret
push
jecxz
push
jg
mov
and
pop
lea
loope
push
xor
mov
lahf
mov
mov
sub
xor
gs
sub
pop
add
inc
int3
inc
xchg
mov
pop
into
inc
xchg
test
push
icebp
out
xor
stos
push
xchg
sbb
rorb
mov
jne
sub
cld
add
cmp
lcall
inc
scas
lahf
push
adc
popf
xchg
pop
sbb
loope
scas
movb
cltd
push
mov
xchg
cmp
mov
psubsw
xor
xlat
or
mov
push
lods
push
or
hlt
rcll
xchg
pop
dec
and
inc
mov
jmp
movsl
mov
push
pusha
inc
sarb
insl
xchg
int
inc
sub
cmp
lret
sbbl
jo
mov
out
jp
inc
nop
dec
and
pop
test
rclb
mov
loopne
dec
xor
xor
jnp
or
jmp
push
add
cwtl
test
mov
dec
lods
out
mov
or
mov
adcl
enter
mov
sub
sub
push
imul
mov
or
mov
xchg
sbb
adc
jb
adc
mov
add
push
fldt
stos
push
sbb
dec
dec
xor
adc
sub
jle
pushf
dec
data16
cltd
sbb
outsb
push
and
jge
out
gs
and
xchg
fcmovne
mov
dec
adc
ss
pop
mov
cltd
jbe
push
and
push
xchg
sahf
push
adc
test
cwtl
xchg
pop
jl
mov
subb
jo,pt
mov
mov
sbb
sub
call
cwtl
and
mov
data16
fbstp
jns
aaa
dec
push
add
popf
jg
hlt
test
or
jl
inc
mov
pop
xor
das
mov
popf
testl
xchg
in
jbe
mov
xor
insl
dec
xchg
push
add
push
inc
push
push
retw
cmpsl
je
jge
and
pop
mov
aas
add
mov
cmp
xchg
int
dec
sbb
outsb
xchg
ds
int3
mov
jo
setg
ljmp
xchg
fadd
les
push
pop
enter
mov
xchg
leave
push
daa
insl
stos
xor
lods
mov
push
lds
nop
sbb
shlb
fstl
jnp
inc
xchg
rcrl
mov
pop
or
add
add
dec
arpl
mov
pop
dec
mov
xchg
scas
pop
mov
push
mov
lret
in
mov
fcmovnu
or
fucomi
hlt
std
mov
sti
and
jns
es
mov
out
push
mov
fidivrs
inc
in
cwtl
lcall
gs
pop
pushf
mov
push
pusha
movzwl
sar
out
sbb
in
cmp
dec
in
loop
xlat
and
cld
stos
daa
test
jecxz
jle
cmp
xor
lcall
cmp
loop
stos
mov
inc
mov
std
dec
idivl
mov
push
mov
pushf
and
or
sarb
repz
cmp
jl
ja
pop
fcmovbe
mov
test
arpl
lea
jmp
leave
loop
pop
xchg
adc
jmp
xchg
xchg
rorl
sarl
fstps
xchg
pop
pushf
xchg
mov
and
les
inc
mov
xchg
rcrb
inc
lock
xchg
xchg
mov
cmpsl
push
ljmp
lock
sbb
outsl
enter
es
adc
add
cmpb
xchg
sub
enter
add
xor
mov
in
test
shl
inc
outsl
dec
fildl
sahf
fdivrs
jecxz
jp
mov
sub
pusha
scas
das
outsl
sub
mov
dec
sbb
repnz
lea
insb
jmp
jne
sar
push
mov
repnz
dec
dec
jecxz
out
cmp
mov
je
clc
lods
push
add
mov
inc
scas
jne
std
cld
jns
jns
xchg
stos
jge
pop
adc
mov
mov
imul
lahf
inc
add
mov
xchg
dec
xchg
jnp
out
and
aas
dec
xor
adc
push
push
xchg
inc
sbb
inc
or
mov
and
xchg
imul
xchg
imul
in
inc
and
xchg
mov
repz
movsb
lcall
stc
push
sbb
sbb
stos
mov
call
push
ret
mov
inc
lods
and
je
movsl
and
jl
cltd
jmp
cli
mov
out
push
sbb
sbb
addb
jp
sbb
cltd
jl
addr16
int3
mov
and
pusha
pop
adc
pop
jg
js
xchg
dec
xor
mov
popa
stc
sub
scas
test
sub
push
std
and
int
mov
orb
sbb
xor
dec
jge
push
xor
pop
jl
push
or
test
out
mov
in
xlat
mov
mov
mov
sbb
jo
aad
int3
xchg
std
push
outsb
inc
shlb
lea
pop
mov
cwtl
dec
and
push
test
cmp
clc
dec
loopne
insl
cmovae
mov
jg
out
pop
sbb
inc
enter
or
or
push
imull
fsubr
push
daa
mov
or
mov
push
mov
pop
loope
imul
sti
std
mov
in
repz
jo
sti
addb
xor
jbe
aam
in
in
cwtl
pusha
xor
fisttpll
nop
adc
scas
push
test
call
inc
mov
jge
push
inc
popa
test
sbb
imul
cmp
jmp
push
ljmp
and
nop
push
adc
mov
pop
dec
lods
cmp
cmp
mov
add
sbb
pop
fs
repnz
add
xchg
cmp
ljmp
mov
mov
int
stos
xchg
or
pop
jecxz
hlt
dec
xor
mov
add
mov
cmp
jge
mov
out
push
or
lret
inc
enter
jle
pop
mov
cwtl
stc
hlt
icebp
mov
je
pusha
fisubrs
mov
dec
adc
popa
sahf
push
dec
mov
xchg
ljmp
jmp
xchg
cli
dec
sti
mov
or
cmp
sub
std
pop
adc
push
aas
add
mov
sbb
add
movsl
mov
mov
stos
mov
pop
cmpsb
sbb
shlb
cwtl
xchg
cmp
jmp
in
xchg
stos
in
adc
inc
xchg
add
mov
inc
sarl
ljmp
gs
mov
cmp
mov
add
cmp
jmp
cwtl
enter
test
sbb
lcall
in
mov
call
mov
xor
frstor
je
inc
push
popf
push
mov
cmp
mov
jne
xchg
xchg
xchg
cltd
enter
and
push
inc
add
xor
ds
inc
mov
test
dec
ret
cltd
xor
movsl
mov
cld
cmp
dec
into
jecxz
mov
mov
fnstsw
sbbl
lret
bound
pop
and
hlt
mov
cmpb
pop
aas
mov
mov
notl
push
scas
repz
xchg
dec
sbb
into
scas
pushf
std
es
dec
push
test
adc
mov
push
push
adc
mov
scas
lea
stc
stos
xchg
stos
inc
sbb
mov
mov
lods
movb
cmp
pslld
sbb
sbb
int3
xor
int
es
aad
pop
jno
sbb
xor
ljmp
jge
dec
mov
dec
mov
into
sub
call
sbb
movsb
pop
mov
jne
sbb
inc
mov
out
dec
pop
or
incb
cwtl
push
lods
rol
out
mov
inc
into
push
mov
fidivs
dec
fsubs
mov
pop
lock
insb
push
cmp
pop
jecxz
inc
mov
repz
inc
mov
jns
add
cld
xchg
sub
jl
xchg
rorl
xor
sbbl
fs
sbb
jg
fisttps
cmp
sub
les
jge
fstps
aad
aad
hlt
xor
shlb
lods
push
jl
dec
loopne
leave
push
cmp
sbb
adcb
add
xchg
pop
dec
push
enter
inc
mov
cmp
test
and
aas
xchg
ret
outsb
pop
or
jmp
push
push
stc
mov
add
arpl
fdiv
jnp
or
std
jecxz
je
fnstcw
mov
jae
and
sub
nop
or
cmp
sbb
test
addr16
cwtl
dec
inc
stc
mov
test
pop
dec
jl
int
adc
xchg
jle
mov
popa
lcall
hlt
jecxz
mov
loopne
cmp
mov
ja
push
nop
in
add
rcll
pop
sub
xlat
in
ja
je
or
or
mov
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
rcll
push
dec
mov
bound
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
outsl
mov
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
ret
