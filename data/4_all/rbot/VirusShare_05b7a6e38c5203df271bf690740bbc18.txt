sub
stos
daa
fstps
and
loopne
leave
push
mov
pop
and
sbb
add
dec
in
sub
arpl
sub
xor
rcll
jg
xchg
mov
sub
repz
dec
outsb
inc
xchg
mov
addr16
jecxz
mov
sbb
xor
mov
xchg
cmp
nop
ds
add
fsub
pop
or
addr16
cmp
and
cltd
xchg
or
cmpsl
fsubrl
int
outsl
jecxz
mov
jp
insl
lds
or
movsl
cmp
inc
pop
mov
insb
and
scas
jb
cmp
mov
jp
add
or
jnp
pop
and
adcl
add
mov
add
fdivl
mov
repz
fbstp
and
aaa
inc
cmp
fmul
ret
cmp
nop
test
cmc
lods
push
fnstenv
in
mov
xor
subl
inc
add
stos
not
or
mov
insl
scas
bound
subl
cmp
clc
or
aaa
std
add
and
outsb
or
inc
cli
iret
dec
loopne
cmp
lcall
pop
add
jnp
arpl
mov
jp
daa
mov
mov
inc
addr16
push
add
test
out
add
aas
iret
into
sbb
mov
stos
in
out
popf
out
movsb
or
or
inc
nop
and
xor
pusha
jmp
xchg
mov
xchg
pop
mov
dec
ss
fidivrs
push
out
stos
dec
imul
mov
lock
mov
insb
jecxz
loop
cli
ja
sahf
mov
push
enter
adc
xchg
mov
cwtl
cmpsb
pusha
out
int3
adc
jg
sbb
cld
shrl
stos
push
xor
test
aad
lret
mov
jns
je
ds
clc
insl
cmp
test
in
icebp
jnp
imul
sub
inc
or
in
les
xor
fisubrs
stc
xor
es
jmp
sbb
mov
push
xorl
jecxz
xchg
mov
jae
dec
mov
stos
cmp
xor
sbbl
ret
iret
jae
xlat
or
mov
jge
test
dec
incl
mov
mov
fmuls
fisttpl
mov
out
sbb
xchg
xchg
out
sbb
xor
inc
aam
clc
fstpt
xchg
dec
mov
jle
xchg
subl
push
or
leave
aam
jg
inc
inc
mov
les
repnz
popa
test
fiaddl
push
inc
jp
mov
mov
stos
aas
jb
cmpsl
push
sub
push
divl
scas
pusha
outsb
leave
mov
xchg
sub
xchg
sub
mov
test
int3
lahf
and
pop
add
out
adc
icebp
subb
into
cmp
mov
inc
int
dec
and
push
inc
add
movsl
fs
loop
in
decb
test
enter
mov
das
cmpb
mov
nop
mov
lret
out
push
jmp
shrl
test
push
in
and
fcoml
test
xchg
or
es
mov
cmc
push
out
divb
or
lods
pop
in
outsb
pop
aaa
movsb
xlat
imul
lahf
sbb
iret
aas
push
clc
adc
cmc
push
pusha
addl
insb
test
cmp
pop
rorl
cmp
aaa
out
mov
push
lret
fldt
push
sub
div
inc
xchg
mov
scas
push
add
pop
xchg
sub
lds
push
dec
jecxz
bnd
mov
insb
lock
scas
bound
or
jb
and
inc
xor
push
lock
nop
jge
cmp
inc
push
ds
or
jae
lea
sbb
inc
mov
shl
jne
std
push
jbe
push
in
lahf
addr16
jl
fadds
inc
outsl
adc
notb
stc
xchg
mov
out
mov
and
ljmp
in
insl
addr16
loopne
dec
mov
lret
ret
ret
aam
push
push
mov
sub
jmp
fnstsw
xchg
add
repnz
in
mov
xchg
ja
lret
or
daa
sub
mov
pop
out
imul
push
shlb
inc
lret
or
outsb
pop
dec
mov
lds
mov
notb
gs
mov
xlat
pop
jecxz
add
call
je
jmp
push
push
decb
sub
inc
dec
xor
subl
push
cli
and
adc
arpl
xchg
fidivl
and
outsb
inc
lods
dec
andb
iret
mov
inc
imul
push
jmp
lret
lods
dec
mov
or
mov
inc
std
out
and
mov
iret
push
rol
mov
or
add
andb
mov
mov
mov
fadds
inc
mov
mov
jne
mov
fs
jle
pop
arpl
ja
jle
in
pop
jmp
lret
cld
shll
cmp
sub
daa
bound
ja
sub
sub
jns
jg
insl
adc
insl
in
cvtdq2ps
aas
sbb
into
jnp
fs
sbb
sti
loopne
xlat
jecxz
in
lds
mov
adc
and
je
rol
scas
inc
xor
testl
in
push
lret
mov
lret
xchg
addr16
hlt
gs
pop
xor
xchg
addr16
popa
jmp
outsb
cltd
xchg
data16
arpl
out
sbb
ja
out
push
push
fnstcw
fistps
push
sbb
test
repnz
and
jl
das
adc
out
outsl
sub
loop
in
cmpsb
inc
jo
in
or
dec
sarb
adc
outsb
stos
inc
dec
mov
cmp
mov
lds
or
or
inc
and
sbb
outsb
jbe
outsb
imul
cmp
sbb
cmpsb
push
repnz
mov
shrl
arpl
int3
movsl
jg
cmp
add
add
and
testb
jbe
mov
or
imul
aaa
push
dec
and
cli
and
test
sbb
mov
push
add
clc
and
add
aam
ja
jnp
pop
mov
mov
mov
jle
sbb
mov
les
movsl
int
and
mov
stos
or
dec
imul
in
jb
jns
cmp
and
movsl
inc
or
inc
jmp
lods
lahf
mov
xchg
andb
aad
sarl
pop
lea
nop
and
out
jns
push
das
imul
sbb
fcmovbe
movsb
loope
ret
negb
aaa
adc
or
mov
cmc
add
fidivl
sub
movsb
mov
pop
mov
pop
xor
fiadds
and
movb
popa
mov
cmpsb
inc
sub
push
cmp
mov
aaa
icebp
mov
jecxz
aas
cmpsb
push
push
mov
out
sub
adc
fstps
xor
sbb
adc
test
mov
cwtl
pushf
popa
popf
int3
and
ljmp
sbb
push
adc
std
and
fwait
outsb
outsb
dec
fdivs
push
pop
dec
movb
jmp
push
mov
xchg
sub
xchg
add
sub
mov
roll
inc
loop
jmp
rcrb
mov
je
cmp
fstl
call
lock
pushf
mov
data16
daa
jle
xchg
call
and
mov
ljmp
jnp
leave
loop
or
fmull
ficoms
adc
scas
mov
enter
sub
out
jno
ret
jno
dec
xorl
inc
mov
pop
in
or
mov
scas
jge
sbb
jbe
mov
xchg
hlt
fnsave
cmp
mov
mov
movsb
ljmp
jne
mov
jns
popf
aad
mov
lea
push
outsl
aam
roll
ss
and
sbb
lea
ljmp
in
or
mov
mov
mov
pop
clc
push
js
fs
xlat
mov
mov
add
jns
or
xchg
inc
inc
hlt
xor
cmpb
push
sbb
in
pop
or
pop
sbb
inc
inc
mov
rcll
push
lcall
sti
jmp
gs
add
nop
in
dec
jo
lcall
xor
jno
les
rorb
shl
sti
scas
sub
ror
jo
inc
inc
mov
xchg
mov
pusha
sahf
inc
cmp
xchg
shr
out
test
dec
mov
out
sti
cmpsb
call
mov
hlt
push
cmpsl
push
sahf
sub
les
mov
sbb
push
mov
shrl
mov
inc
clc
movsb
add
movb
stc
ljmp
subl
inc
jo
or
in
adc
mov
pop
dec
ret
xor
jbe
mov
cmp
hlt
dec
sbb
sti
pushf
xchg
arpl
add
jle
push
outsb
in
dec
in
xchg
or
sub
cmp
dec
xchg
jne
stos
out
ss
je
mov
dec
mov
push
xadd
fcmovu
xor
fildll
lret
and
loopne
es
xchg
xor
bound
push
test
sub
repnz
cwtl
popf
pop
dec
adc
add
imul
and
pop
or
sbb
xor
push
mov
adc
and
int3
mov
inc
xlat
ret
sbbl
jno
stos
adc
fisttps
inc
test
mov
mov
fnstcw
testl
fstps
scas
popf
and
imul
data16
inc
cmc
or
xor
leave
jge
xor
pop
sub
push
stos
xor
mov
shrb
fcmovnu
push
das
leave
xor
sbb
sbb
sahf
lahf
push
aaa
sub
ja
mov
sbb
xchg
pop
sti
sarl
ss
mov
jmp
js
mov
xlat
mov
dec
aam
inc
xor
xor
jns
stos
jnp
mov
xchg
sub
sub
lods
mov
mov
mov
ja
pusha
or
loop
das
mov
sahf
mov
ret
jge
cwtl
insb
in
pop
add
and
push
jp
or
orl
push
adc
sub
fldl
std
sahf
mov
mov
inc
add
sahf
fs
push
loopne
jecxz
aas
rcll
test
pop
inc
jp
cmc
lret
jp
call
add
and
add
fidivl
pop
cmp
test
int
mov
cmp
fidivs
ja
sub
arpl
push
pop
inc
stos
lds
loopne
shll
push
fmuls
mov
cmp
ret
pop
aam
mov
mov
out
sub
or
mov
mov
cmc
or
mov
rcrl
mov
stos
push
scas
mov
js
dec
xorl
add
inc
cmp
inc
in
jecxz
mov
push
adc
jns
mov
xor
aas
sbb
adc
popa
ss
push
loopne
popa
jnp
and
adc
mov
and
jle
daa
shll
sbb
cmp
rorb
mov
add
jnp
cmp
dec
rorl
cmc
xchg
xchg
mov
sbb
sbb
test
inc
xchg
pop
cwtl
cmp
jmp
es
mov
ror
pop
pusha
or
and
and
mov
mov
aam
loop
mov
ja
out
ds
xor
cli
mov
mov
xor
sti
mov
mov
lahf
andb
push
arpl
cmc
insb
movsl
mov
and
ficoms
in
ficoms
mov
mov
cmp
sub
mov
jmp
add
in
inc
test
mov
pop
jne
dec
adc
mov
cltd
in
insl
dec
testb
pop
lret
xchg
push
mov
sbb
pop
shlb
xor
jle
in
or
pop
push
and
jp
mov
cmp
push
pop
fs
inc
pop
in
stos
lea
repnz
mov
xor
in
mov
mov
cwtl
mov
addb
arpl
or
push
push
push
push
fcoml
loop
cs
sti
dec
jns
adc
add
xchg
fwait
add
imul
das
mov
cmpsl
ss
popa
icebp
movb
cmp
cmp
cmp
push
push
sbbb
and
xor
jp
iret
inc
stc
push
cltd
push
pop
dec
rcrl
cwtl
push
jmp
jnp
stc
cmp
push
std
sub
test
jp
push
int
cmpsl
push
adc
movsl
jle
sbb
mov
in
mov
aaa
inc
fdiv
push
enter
cli
mov
push
inc
adc
cwtl
push
cmc
fs
adc
idivb
pop
dec
popa
cs
lock
sub
sub
je
stc
xor
scas
xlat
mov
jno
insb
pop
outsl
add
aaa
dec
push
adc
fisttps
rcll
ror
push
js
icebp
xor
out
popl
push
fstpl
sbb
cwtl
movsl
jbe
add
into
test
inc
fisttps
ja
dec
sbb
sti
pop
mov
rcll
pop
mov
orl
scas
xor
out
inc
dec
int3
xchg
jle
inc
scas
repnz
sbb
popl
aaa
jbe
or
mov
sahf
mulb
jmp
jne
xor
xchg
cmp
cmpsb
and
fcompl
daa
in
stc
sub
jge
test
inc
movsl
push
cmp
cwtl
jne
xchg
dec
xchg
ljmp
pop
test
inc
nop
cmp
popa
loop
jbe
push
loope
lret
fists
fidivrs
mov
push
das
xchg
rcrb
pop
hlt
jp,pt
es
cwtl
je
inc
push
jg
adc
pop
inc
arpl
in
lods
adc
in
inc
les
imul
push
into
mov
and
aam
add
pop
test
mov
in
sub
mov
mov
test
ja
enter
pop
sbb
call
fstpt
mov
or
xor
ja
repz
mov
mov
adc
sbb
jnp
mov
add
and
aam
pop
mov
cs
push
mov
movsl
push
xchg
mov
xchg
xchg
loop
shlw
test
jp
loop
push
lret
iret
cwtl
pop
fnstcw
orl
les
jb
inc
xor
pop
lahf
fstpl
popa
adc
sbb
ret
aas
imul
les
mov
cmpsl
pop
pop
ss
push
shlb
std
faddl
pop
xchg
push
dec
jp
dec
ret
in
sub
push
xchg
adc
pop
xor
push
stc
push
sub
clc
push
pop
mov
in
shll
add
jno
mov
sbb
sbb
jo,pn
aaa
jle
or
xchg
mov
sub
or
add
movsl
dec
fnstsw
fwait
lcall
lea
push
push
and
jg
movsb
inc
ljmp
cmc
mov
adc
sahf
dec
dec
lods
mulb
test
lock
sbb
pushf
ficomps
xchg
add
jne
fidivl
sbb
adc
hlt
fwait
or
repnz
mov
iret
sub
movsl
xchg
ret
sub
aam
inc
mov
dec
cwtl
mov
xor
test
lcall
aad
pop
test
push
sub
xchg
push
push
int
ret
das
xchg
inc
bound
cmp
fadd
push
lfs
popa
jg
enter
outsb
xor
pop
mov
mov
push
cmp
scas
mov
xchg
cli
jge
stc
xlat
jl
dec
cmpsl
or
pop
push
icebp
sub
mov
into
movsl
mov
cmpsb
daa
iret
xlat
fadd
sarl
pusha
outsb
inc
jnp
xchg
scas
sahf
xchg
push
add
shrw
or
pushf
or
stos
cmpsb
mov
mov
add
inc
pop
adc
cmpsb
push
inc
inc
outsb
dec
enter
adc
fs
pop
cltd
cmpsb
mov
lcall
and
out
out
push
iret
push
inc
int
adc
xor
popa
sbb
adc
xor
lds
mov
pusha
lock
les
lods
jno
mov
in
incb
sbb
jns
and
mov
jns
jg
rolb
mov
ffree
xchg
lods
pusha
mov
add
add
sbb
movsb
mov
add
adc
rclb
pusha
dec
push
pop
inc
sti
xor
dec
add
adc
testl
rorl
movsl
fcmove
in
insb
xor
jp
push
aad
cmc
or
out
cwtl
or
insb
xchg
cmc
loop
xchg
jo
lds
pop
cmpsb
push
push
mov
shrl
xor
pop
mov
les
xorb
ljmp
fs
insl
loopne
es
ret
outsb
add
leave
mov
sbb
arpl
lock
mov
cmp
mov
stos
loopne
sbb
bound
cmp
jo
sbb
iret
gs
pop
bswap
fnsave
lahf
xor
add
jecxz
lea
cmp
repnz
lea
mov
lods
push
out
push
xchg
push
bound
jo
inc
movnti
xlat
cmc
leave
addl
push
mov
insb
popa
cld
dec
adc
ret
ja
ror
dec
cltd
adcb
lea
pushf
adc
jo
jg
lods
aam
cwtl
add
es
dec
jge
xor
xor
sbb
sub
push
xchg
into
push
fldcw
imul
push
sub
inc
jno
xchg
push
mov
enter
push
cmc
and
sbb
imul
dec
ljmp
add
pop
in
pop
or
mov
dec
pop
lret
outsl
repz
hlt
std
push
mov
dec
cltd
dec
xor
mov
adc
cli
cmp
aam
aaa
shlb
roll
pop
inc
push
jae
std
mov
sti
stos
shlb
repz
jg
pop
mov
cs
mov
inc
aaa
push
mov
jbe
xor
push
adc
pushf
mov
push
mov
or
dec
pushf
inc
sub
cmp
iret
push
out
addb
mov
and
sub
mov
scas
xchg
out
aam
insl
cli
mov
std
pop
aam
icebp
mov
rcll
fld
or
cmpsl
ss
push
mov
xor
sti
outsb
mov
lods
adc
adc
popf
pop
xor
dec
xchg
jns
xchg
enter
mov
sub
aaa
mov
in
push
shr
or
lahf
jle
lds
test
cs
aam
mov
push
dec
aam
sbb
adc
jo
jne
push
scas
scas
icebp
dec
shr
mov
add
insl
pop
shlb
push
jecxz
xor
push
emms
sbb
jns
lret
stos
jbe
inc
fldl
popf
cld
les
lds
push
push
inc
jnp
mov
push
sbb
sbb
jg
clc
into
fisubrl
aas
push
cltd
push
out
jae
or
lret
sub
call
test
hlt
mov
sahf
mov
nop
jle
loope
iret
pop
jbe
repnz
leave
xchg
je
push
cli
int
pop
xor
mov
jl
divl
dec
push
pushw
mov
outsl
xor
pop
jge
aam
stos
jbe
xchg
lods
pop
imul
add
in
sub
jp
fcomps
or
cli
cmpsl
jno
and
mov
cli
mov
rorl
cltd
in
aas
pop
leave
gs
xor
stc
jg
ljmp
lods
insb
inc
insb
xor
and
enter
popa
mov
jecxz
mov
cwtl
mov
in
mov
xchg
and
xlat
cld
out
dec
jecxz
test
sbb
xchg
pop
dec
scas
test
test
fwait
mov
rorl
data16
mov
or
sbb
mov
add
lret
pop
dec
nop
xor
pusha
sbb
adcb
in
sbb
mov
push
cwtl
pushf
stos
jmp
test
mov
cmpsb
sbbb
pop
das
aas
les
mov
je,pn
jnp
mov
push
sbbl
and
rorl
ss
out
jnp
inc
ret
in
out
jbe
aas
js
jnp
insb
sub
or
mov
stos
icebp
lcall
shrb
mov
or
sbb
xchg
pop
pop
mov
pop
and
sub
jmp
xor
cmc
insl
sbb
xchg
jl
scas
inc
add
js
xor
inc
popa
in
hlt
daa
xor
or
or
push
mov
lea
pusha
add
lcall
lcall
es
sub
or
dec
mov
loopne
xor
out
loopne
in
frstor
pop
and
pop
sbbl
push
repz
repz
out
sub
lock
mov
test
dec
sub
fiadds
xlat
cmpl
or
mov
stc
movsl
mov
xchg
ret
hlt
outsb
sti
mov
loope
dec
xor
lds
push
mov
mov
mov
pop
movsl
orb
inc
rcrl
mov
inc
loopne
in
cmp
fbstp
sub
jmp
mov
cmpsb
xchg
adc
lock
mov
xchg
or
std
push
mov
out
in
mov
jecxz
xor
jno
cmpsb
fsubrs
mov
insb
jle
outsb
mov
inc
jle
test
jno
pop
adc
aaa
add
jne
cwtl
jl
lock
inc
cmpl
and
add
dec
fbld
scas
add
push
push
mov
jle
mov
jl
dec
lret
ljmp
xorl
shll
xchg
test
stc
popl
add
subb
push
and
addb
dec
popa
mov
sbb
push
and
inc
test
popa
pop
add
mov
loop,pn
daa
clc
outsb
add
loope
cmp
daa
test
cmp
xchg
pop
iret
imul
cwtl
add
lcall
daa
sub
push
pop
psubusb
and
lds
sbb
icebp
adc
imul
mov
jne
out
lret
in
neg
or
aaa
xchg
iret
ljmp
or
int3
sbb
adc
pop
dec
imul
sub
cmp
xchg
dec
scas
pop
outsb
mov
mov
imul
and
out
jg
add
pusha
cmp
and
stos
pop
fs
pushf
jnp
xor
cmp
jno
sbb
cmp
pop
shr
xchg
lock
arpl
xlat
mov
mov
leave
fistpll
daa
adc
mov
or
push
pop
inc
jbe
jl
pmaxsw
pop
adc
add
xchg
pop
out
xorb
mov
ss
sub
iret
std
xchg
mov
mov
dec
aas
lret
sbb
push
xor
mov
lds
or
cld
rorb
mov
jb
and
pushf
pop
outsb
sbb
in
sub
jg
cltd
bound
std
mov
dec
jg
xor
mov
cmp
stos
mov
and
mov
cmpsl
icebp
push
es
pusha
sub
push
jp
ds
push
jle
repnz
jg
cmp
in
loopne
jmp
pop
mov
mov
lret
jno
xor
xor
nop
mov
or
das
cmp
and
lock
push
mov
xor
aad
scas
fldcw
popa
cmp
outsl
insb
add
sbb
inc
or
pusha
divb
in
ret
jns
mov
pop
je
es
lods
fldcw
mov
inc
jge
ret
push
adc
add
jp
or
xor
in
cmp
scas
movsb
imulb
or
pop
jno
mulb
adc
lahf
ds
sbb
scas
cmp
push
subl
bound
jb
push
lods
mov
xchg
iret
xor
out
lret
or
imul
or
std
scas
loope
jae
mov
jge
inc
scas
jecxz
lock
xchg
pushf
jnp
loope
arpl
pop
nop
in
cmp
rcl
sub
movb
pop
stos
repnz
outsl
dec
shlb
inc
cmp
jns
insb
aam
and
sbb
xor
pop
es
or
stos
and
cld
data16
mov
dec
bound
sub
movsb
and
loopne
xor
and
mov
fnsave
mov
cmpsl
push
push
or
or
push
sub
jg
push
lret
ret
daa
sbb
neg
or
in
hlt
mov
nop
push
xor
pop
insl
mov
sbb
inc
movsl
jg
out
mov
mov
outsb
xchg
sub
ficoml
divl
mov
int
in
pop
xchg
xchg
and
loopne
enter
mov
and
out
pusha
push
daa
inc
pusha
cmp
orl
outsl
andb
mov
test
aad
dec
fnstcw
add
add
icebp
sbb
sub
lods
mov
clc
ds
mov
inc
mov
loope
dec
adcb
pop
jno
add
mov
aas
addr16
data16
jmp
rcr
mov
insl
jne
lea
sbbb
bound
or
xor
dec
lock
pop
movsb
inc
ss
arpl
inc
popf
xchg
cld
push
add
imul
int
dec
out
push
mov
pop
jbe
lret
xchg
push
in
ss
loopne
jnp
mov
es
cmp
push
push
inc
or
aas
push
lds
mov
adc
enter
lds
sbb
shll
hlt
test
xor
test
rclb
adc
push
add
cli
rclb
push
mov
ret
sbb
jns
add
adc
mov
mov
mov
cwtl
scas
dec
fisubrs
xor
scas
mov
div
push
lds
stos
mov
jg
in
mov
sub
iret
jb
pop
dec
in
pop
in
iret
roll
jae
mov
mov
aam
sub
pop
out
js
mov
pusha
movsb
fists
inc
push
push
dec
jmp
add
fstpl
shll
cmp
std
xchg
test
mov
jge
pop
leave
lods
test
fs
add
dec
mov
push
and
insb
mov
insb
sbb
out
loopne
sub
not
mov
mov
xchg
mov
test
mov
jbe
sub
flds
cmp
push
sub
pop
sub
test
push
push
mov
pop
pop
xchg
jo
loope
and
mov
cs
add
lods
ds
add
sbb
das
aad
rorl
pop
jle
sti
sub
mov
push
fdivs
cs
mov
or
add
adc
xchg
shr
cmp
orb
xor
adc
aad
pusha
jns
inc
enter
rcr
in
ljmp
test
sti
mul
hlt
data16
add
jnp
imul
imul
call
or
push
pop
jg
daa
fwait
xor
and
mov
push
inc
pop
jg
xorb
xchg
add
arpl
dec
xor
cmpsb
adc
iret
mov
mov
scas
ret
dec
push
daa
nop
pusha
test
push
adc
jmp
dec
repz
mov
dec
sbb
pop
mov
xor
jnp
test
dec
mov
pop
mov
sbb
push
insb
or
std
movsb
push
shlb
dec
adc
scas
cld
leave
jmp
dec
mov
int
pop
add
inc
dec
fsts
lcall
enter
lods
cmp
pusha
aad
out
mov
jp
xor
les
pop
mov
dec
dec
sub
ss
mov
mov
cwtl
lahf
xchg
ds
or
sti
and
loope
pop
inc
jle
mov
mov
hlt
jge
les
xchg
loopne
shlb
cmp
xor
and
mov
push
cwtl
add
fdivrs
cmc
jo
stc
outsb
inc
bound
ja
jecxz
imul
sub
xor
jnp
jecxz
loopne
sub
divb
mov
sbb
imul
lret
mov
ret
xor
shrl
bound
inc
arpl
mov
stos
or
sub
push
xchg
or
mov
pusha
loopne
into
sbb
outsl
mov
mov
cmp
xchg
and
mov
aam
sbb
xchg
jp
push
push
ja
push
mov
sbb
or
cli
enter
push
sbb
aam
push
fidivrl
lahf
rol
je
add
pop
icebp
leave
loopne
mov
and
not
dec
add
push
xchg
pop
loopne
lods
aad
testl
out
and
jno
fs
repz
push
rcl
shll
cmc
cmc
xchg
ja
movntq
fdivl
add
rcr
pushf
ret
shlb
push
popf
sarb
into
cli
das
aaa
bound
sub
mov
sub
jmp
test
mov
cmp
fmuls
ss
adc
enter
leave
pusha
xor
xchg
cmpsl
mov
push
push
pop
aam
hlt
rcll
xor
mov
mov
jnp
pop
js
jb
push
pop
lea
stos
mov
cmpsb
cltd
push
test
jge
test
cmp
pop
mov
scas
mov
test
aam
xor
lahf
cmp
mov
movsl
inc
mov
int3
mov
in
clc
and
sarl
in
push
xor
int
pop
popf
sub
inc
and
aad
inc
cmpsl
movsb
or
xchg
xchg
cmp
lock
cmp
mov
mov
pop
stos
call
icebp
cs
mov
gs
clc
pop
daa
jo
shr
inc
jg
adc
stos
jno
testl
imull
repz
jo
cmp
pop
pop
shl
pop
and
mov
fadds
fsubrs
pop
arpl
mov
jns
scas
add
stc
fiadds
cmp
mov
xchg
sbb
divb
mov
out
ljmp
or
dec
pushf
dec
stos
cmp
jmp
cmpsl
hlt
mov
cmp
add
outsb
sub
jmp
jo
sub
out
jns
pop
xchg
dec
mov
mov
addr16
popa
and
xor
hlt
out
and
scas
or
push
sub
scas
mov
mov
sub
push
pop
mov
arpl
jne
repnz
sbb
sti
aad
dec
cmp
pop
enter
sbb
xorb
dec
pop
iret
sbb
push
aad
fidivs
cmpb
sub
and
out
jle
and
pushl
out
mov
mov
inc
insb
mov
std
in
push
pushf
cld
es
cli
push
push
cmp
mov
push
mov
adc
movsl
mov
aad
push
push
outsl
push
xor
shlb
push
mov
xchg
push
sahf
aad
lret
sbb
jb
dec
and
mov
add
leave
add
xor
push
roll
popa
push
cmpsb
insb
push
xchg
testl
andl
pop
int3
jle
xchg
into
pusha
xor
stos
push
pop
iret
push
enter
mov
test
lcall
jmp
andb
mov
mov
xor
push
cwtl
repz
das
xchg
jge
dec
aaa
lods
sub
add
push
je
repnz
out
jecxz
sbbl
jmp
cs
xchg
imul
loopne
jg
testl
xor
in
and
lods
pop
mov
xchg
sti
jmp
xor
nop
sub
pop
mov
das
ficoml
push
gs
test
xor
jge
dec
jle
fwait
pop
mov
lods
shll
pop
xor
or
ja
mov
cltd
push
cmpsb
ss
cmpsb
xlat
js
negb
stc
js
test
pop
test
int
test
popa
pop
fcmovnb
hlt
add
dec
lea
mov
jno
sahf
cltd
push
mov
sbb
adc
adc
adc
jnp
outsl
xor
or
push
out
xor
fildll
sbb
adc
jae
insb
push
insb
filds
call
sbb
push
sbb
adc
repnz
xor
fstps
arpl
sub
lds
mov
pop
cmp
aas
test
and
enter
inc
hlt
popl
popa
add
dec
sub
bound
jae
out
cmp
push
andb
mov
out
insb
fs
icebp
push
aam
inc
mov
sarl
sub
push
or
gs
pop
adc
add
mov
sub
jno
aad
adc
inc
cmp
into
add
sub
fwait
out
lcall
orl
test
cmc
imul
mov
jge
cmpsb
mov
sbb
imul
push
idiv
push
in
mov
aam
into
sub
mov
lcall
push
jge,pt
lahf
jnp
sub
clc
mov
int
jp
int3
je
les
jmp
inc
inc
cmpsb
jge
xchg
jo
scas
cmp
dec
stc
fildl
pop
into
push
sbb
pop
inc
or
pop
xor
out
repnz
dec
xor
out
jne
mov
mov
push
das
les
jecxz
push
mov
pop
adc
fists
nop
xorl
cs
sahf
fmul
ds
dec
adc
add
daa
mov
mov
pop
test
outsb
stos
and
jno
cmp
mov
cs
gs
xchg
inc
jle
cmp
scas
rcl
mov
cmpsb
dec
es
mov
fildll
or
pop
inc
mov
lahf
shr
nop
std
ds
adc
adc
fsubr
adc
pop
repnz
addr16
cmc
mov
mov
sbb
aaa
or
mov
xor
lds
cmp
loopne
cmp
and
pusha
mov
xchg
push
cs
dec
fwait
adc
mov
pusha
dec
pop
fwait
jno
test
push
shr
divps
mov
imul
push
xchg
add
mov
mov
adc
hlt
jp
adc
sar
js
jo
push
std
inc
cmp
orb
jge
aas
cltd
dec
ljmp
mov
dec
add
push
adc
lods
lods
xor
subb
fisubrs
mov
dec
mov
fsubr
lock
in
lock
inc
shrl
jmp
divl
pop
les
pop
add
out
cmpsb
jb
shlb
lcall
repz
cmp
xor
cwtl
adc
push
push
and
sub
add
inc
in
lock
test
aam
repz
in
sti
mov
mov
lahf
je
sbb
xor
xor
adc
dec
add
mov
nop
jae
orl
popa
sub
cmp
insb
mov
push
lahf
aad
jecxz
inc
mov
ljmp
xor
mov
dec
mov
xchg
jmp
xor
cwtl
sub
push
pusha
out
xchg
cmp
cmp
in
add
and
rcll
sar
outsl
pop
ss
aas
gs
cmpb
inc
add
cmp
movb
mov
push
pop
out
push
and
clc
push
sbb
and
leave
pop
cmp
sbb
jne
mov
iret
das
cmp
cmpsb
iret
dec
pop
stos
imul
pop
ds
push
or
pop
pushf
sub
mov
xchg
icebp
and
lds
cmp
sub
shll
popa
lea
jno
add
pusha
add
cmpsb
xor
jo
dec
imul
outsb
lods
cmp
push
int
cs
enter
rcl
mov
xor
dec
xchg
ret
jo
fstpl
fwait
aaa
test
test
rcrb
adc
sub
rcll
add
addr16
dec
pminsw
stos
mov
mov
xchg
lods
dec
leave
sub
repnz
bound
or
adc
lds
push
insb
xchg
out
mov
jo
repz
mov
jb
hlt
add
ljmp
jbe
and
and
and
insl
int3
push
pop
mov
aad
lret
ficompl
sahf
mov
xor
mov
push
mov
adc
jl
lods
test
push
cltd
in
or
xchg
bound
aam
mov
inc
loopne
iret
inc
sub
loopne
stos
and
xchg
notb
xchg
rcrl
int3
lahf
inc
loopne,pn
ret
mov
jbe
insl
dec
jo
mov
jge
fs
dec
lcall
dec
jg
daa
cmp
arpl
bound
sub
filds
test
js
sti
shrl
jecxz
jns
jno
jecxz
ret
jp
mov
lods
mov
call
stos
insl
add
inc
add
fistpll
mov
bnd
adc
movsl
mov
dec
out
rcrb
aas
int3
add
addr16
pop
jge
ss
or
inc
cmp
fwait
lods
sub
or
push
sbb
clc
add
dec
mov
addr16
push
or
test
fdivl
sbbl
mov
push
scas
int
adc
enter
and
pop
icebp
imul
pop
fmul
and
sub
sub
sub
out
mov
xchg
dec
inc
test
fs
push
pop
stos
lahf
popf
lahf
ja
jns
inc
cld
add
cmp
mov
inc
loopne
insl
dec
pop
inc
xor
cld
and
test
dec
pop
or
test
sbb
cltd
jbe
add
lret
pop
pushf
pusha
lahf
jae
test
shll
dec
lahf
cmp
push
sbb
dec
incb
and
rclb
fildll
icebp
fwait
inc
cmp
cmovo
sbb
movntps
mov
lret
nop
lods
dec
int
mov
cmp
cmpl
adc
xlat
fnstsw
sbb
lret
lahf
sbb
stos
push
xchg
int3
insb
std
jne
jge
add
xchg
fsubl
push
inc
cmpsl
es
int3
call
pop
pop
data16
lret
add
and
mov
cmpsl
pop
xchg
and
loopne
adc
xchg
jmp
pop
movsl
push
aas
sub
mov
jb
xor
aad
fs
mov
dec
movsl
jnp
ret
dec
push
push
stos
inc
dec
fs
clc
sub
mov
or
sbb
inc
aaa
cli
das
mov
test
xor
pop
into
push
pop
mov
test
cs
std
and
pop
mov
aas
mov
mov
lock
or
mov
jns
sbb
pop
dec
sbb
pusha
lahf
js
daa
and
mov
push
jle
ljmp
les
pop
addr16
ds
aas
mov
int3
inc
push
mov
aas
push
sbb
mov
mov
pop
stos
jnp
pop
mov
sti
jl
je
adc
fcmovnb
int
push
sub
add
outsl
call
mov
and
add
cld
pop
lods
enter
adc
mov
pop
out
mov
push
in
outsb
pop
addb
xchg
jo
not
out
mov
movsl
pop
aas
nop
test
inc
jmp
xchg
inc
shr
loope,pn
into
popa
lret
sub
push
rcrb
dec
pop
enter
push
pop
lret
sub
and
popf
je
jns
out
dec
xchg
daa
inc
jl
repz
fisttps
popa
add
add
addb
xorb
xchg
lea
xchg
dec
or
test
fcoms
jmp
or
jnp
fisubs
cwtl
int3
ret
jmp
adc
fildll
push
push
push
xchg
cs
sub
ljmp
iret
push
add
in
pop
or
push
fmuls
push
stos
fcompl
mov
mov
cmp
mov
cmp
jp
outsl
and
testb
xor
inc
xor
mov
jg
adc
mov
lock
pusha
cmp
popa
in
movsl
jg
jo
fs
mov
jg
xor
xor
pushf
ret
ficoml
mov
xchg
sbb
mov
push
subb
pop
mov
jp
sub
push
sub
clc
movsl
sub
mov
rorl
mov
aam
das
adc
ds
clc
cmc
xchg
cmp
xor
push
pop
jl
in
jmp
inc
pop
xchg
sti
xchg
loop
mov
cli
clc
add
insb
jns
clc
in
sub
aaa
push
jmp
sub
in
add
lods
rcl
insb
mov
mov
push
jae
es
mov
mov
ffree
and
dec
idivb
mov
imul
dec
and
push
xor
pop
mov
mov
jecxz
cmpl
xor
mov
inc
lea
dec
fdiv
xchg
aaa
fiadds
popl
mov
ja
inc
and
nop
mov
xor
rclb
push
inc
jae
mov
fimull
out
mov
cwtl
push
add
stc
scas
mov
or
aaa
fwait
int3
mov
and
mov
int3
mov
push
jecxz
daa
mov
into
arpl
xor
inc
mov
mov
mov
mov
fbstp
cmp
rolb
mov
push
xor
ss
mov
sub
out
mov
cmpsl
cmpsb
adc
movsl
in
adc
or
subw
add
std
adc
add
pop
push
lret
and
cmp
ljmp
sub
sub
rcrl
stos
sub
shl
loopne
pop
arpl
sbb
addb
test
addr16
inc
xchg
jne
mov
xor
or
push
jb
out
std
dec
test
sbb
sbbb
hlt
ret
push
and
sub
inc
sub
fcomip
cltd
pop
xor
pop
loop
shufps
adc
jmp
mov
loop
lods
movsb
add
mov
and
lods
jae
stos
lds
stc
and
pop
loope
addl
bound
xchg
hlt
and
sbb
add
xor
pop
mov
dec
mov
cmp
pop
daa
daa
in
pushf
frstor
xlat
loop
scas
jns
jle
sbbl
pusha
or
xchg
xchg
pop
mov
lea
and
cmp
bound
fmul
femms
dec
and
dec
xchg
and
pop
pusha
and
loopne
pop
cmp
es
mov
std
loope
jmp
dec
pushf
mov
imul
divb
idivb
arpl
or
sbb
cs
jne
sbb
das
jne
push
pop
or
adc
pop
bound
dec
popa
push
inc
bound
push
popa
cmp
push
inc
adc
mov
lods
dec
sub
jns
rolb
and
test
or
fsubrp
cmp
xchg
test
dec
cmp
iret
add
loop
mov
fisubl
out
addl
add
xor
xorl
sbb
lock
lods
rcrb
lods
fs
or
inc
xor
aaa
insb
and
jge
dec
and
mov
adc
cmp
imul
fucom
cmp
mov
xor
pop
movsl
sub
rcrl
daa
add
cmp
jmp
mov
add
bound
mov
scas
adc
xor
push
jmp
push
mov
mov
add
push
mov
sub
ss
dec
ret
in
xchg
test
cs
in
pop
dec
loope
and
mov
ret
jae
repz
das
push
mov
jmp
aam
mov
aam
jno
jl
adc
xchg
adc
adc
loopne
jle
data16
scas
jg
jp
pushf
imul
rcrb
call
adc
lret
pop
or
nop
cwtl
fldl
fs
push
dec
mov
mov
cmp
xchg
cmp
testb
cmp
sbb
data16
insl
aas
mov
push
pop
ret
jp
pop
push
adc
roll
mov
push
lock
xchg
mov
aas
vhaddps
jns
popf
mov
jbe
jae
add
imul
shl
dec
int
pop
push
mov
push
loopne
cmp
inc
pop
mov
mov
xchg
jns
push
shr
dec
idivb
loop
or
cmc
xlat
testb
mov
das
jl
divb
rcrl
cmpsb
jnp
mov
ret
insl
xor
sub
cmc
lods
add
fildll
sub
andb
cs
into
rcr
adc
lcall
xlat
jne
push
out
in
push
sti
mov
inc
cmp
cmp
sub
fisubrl
jmp
mov
mov
test
and
xchg
sub
dec
sub
pusha
mov
test
out
movsl
addb
mov
pop
inc
movsl
in
aaa
lods
dec
xor
xchg
jle
nop
jmp
dec
push
jp
push
ret
push
inc
push
xchg
adc
mov
inc
pop
rorb
fisttpl
cltd
xchg
cld
mov
outsl
cmpsl
dec
pop
or
loopne
std
call
mov
add
sbb
jp
ficoms
adc
push
loop
data16
jl
mov
fistpl
adc
stos
push
inc
xor
jmp
push
jecxz
cmp
fs
pop
ret
lahf
sub
mov
xor
movsl
cmp
pushf
add
subb
push
jo
push
imul
inc
or
push
js
jl
lret
subb
fildll
loopne
shll
sbb
mov
cs
mov
sbb
and
aad
outsb
repz
sub
into
fcomp
fs
add
pop
in
sub
notl
mov
cmp
test
add
idivl
das
loop
test
sub
pop
mov
push
mov
pop
pushf
testl
mov
lret
daa
popl
pop
call
jae
fst
mov
gs
lcall
or
push
xchg
mov
or
push
mov
mov
aas
jno
sub
sub
and
xchg
test
pop
fwait
pop
dec
pusha
add
mov
sti
decb
sahf
in
inc
je
push
pop
mov
cmp
mov
enter
mov
mov
mov
shrb
repz
es
movsb
rcl
mov
gs
sub
cmpsb
mov
xchg
jno
jg
push
out
jle
fcoml
fsubs
fnstcw
cmp
fs
pop
cli
add
cmc
pusha
dec
dec
jecxz
push
mov
mov
int3
subb
add
cmp
cltd
inc
leave
jns
nopl
pop
pop
pop
imul
xchg
xor
frstor
xor
ss
jge
inc
jne
jp
mov
or
js
push
lret
popa
jecxz
sbbl
out
iret
mov
jbe
push
in
mov
mov
sbb
sti
jo
loopne
xchg
add
dec
aas
mov
mov
mov
xor
adc
xor
jno
popf
or
mov
rcl
xchg
jo
mov
sub
sbb
lods
push
rol
cmc
out
dec
cmpsb
jb
xchg
adc
xchg
mov
jno
hlt
mov
push
in
mov
pusha
iret
daa
fimuls
popa
rcr
push
sbb
scas
popf
mov
scas
js
sub
push
xor
or
sub
add
sbb
fcoml
aaa
jae
iret
cli
dec
push
popf
inc
push
mov
pop
mov
jg
std
addr16
scas
sbb
das
insl
mov
andl
xor
xchg
aam
inc
mov
mov
xchg
pop
imul
sbb
aam
sbb
stos
jg
xchg
xchg
cmp
outsb
cmpsl
or
or
fiadds
inc
movsl
aas
jns
hlt
lahf
fwait
or
scas
and
popa
sbb
imul
dec
dec
pop
push
cltd
adc
xchg
popf
sbb
sti
or
jno
push
std
sub
lock
adc
push
cld
mov
xor
mov
lods
pop
int3
jno
jmp
sub
repnz
movsb
shl
sahf
push
es
fcmove
sub
mov
mov
lret
add
xor
push
jmp
xchg
dec
mov
sub
xor
xchg
addr16
addl
cltd
adc
les
ljmp
xchg
fcomps
nop
loop
jmp
outsl
mov
cmc
fsubs
sbb
adc
ds
xchg
ljmp
cmp
hlt
mov
divb
out
fists
popf
push
stos
lahf
push
fisttpll
xorb
sub
push
mov
out
jmp
inc
adc
mov
dec
xchg
and
mov
mov
dec
test
mov
xchg
call
push
jns
sbb
lods
lock
loop
dec
sub
and
stos
inc
mov
pop
jg
sub
xchg
sub
dec
xor
aam
push
in
xor
xchg
loope
test
rorb
mov
ds
pop
popa
mov
jae
jno
push
dec
loopne
sti
je
loope
out
cmp
xchg
jg
mov
push
push
mov
jns
lds
out
and
leave
test
jge
ds
in
cmpsl
mov
ljmp
push
or
mov
es
xor
ret
push
mov
xchg
loope
jecxz
inc
mov
pop
cmc
jge
into
mov
int3
inc
sarb
mov
repz
imul
mov
scas
jbe
scas
dec
xor
inc
xor
pushl
mov
rorl
test
pop
test
pushf
pop
fcmovnbe
mov
ficoms
inc
sub
push
cmp
test
mov
add
stc
cli
push
rolb
mov
orl
ss
cmp
or
jp
sub
inc
pop
pushf
cmp
adc
stos
dec
mov
lock
pop
dec
xchg
or
leave
push
sbb
mov
cmp
xchg
repnz
adc
out
xchg
mov
xchg
pop
or
clc
cmp
cmc
subb
popf
repz
aaa
cld
mov
cli
dec
loopne
lock
jl
test
shrl
cmp
pop
sbb
into
mov
dec
cli
sbb
or
mov
std
aam
sbb
cmp
cltd
fisubrl
jne
mov
das
jno
jecxz
dec
insl
sbb
jo
push
pop
dec
mov
push
imul
popf
sbb
enter
sbb
push
repnz
mov
or
out
or
cmp
jno
adc
movsl
lea
sbb
adc
insl
adc
push
lods
dec
and
aam
mov
es
xor
inc
leave
pop
pop
jmp
pushf
xchg
fimull
sub
jb
in
dec
sub
or
jo
scas
mov
xchg
lods
pop
fstpl
sti
ss
fildl
sahf
xchg
add
lock
cli
loopne
cli
jle
add
sbb
sarl
gs
shll
iret
xchg
out
mov
pop
fidivrs
push
arpl
mov
dec
jno
push
jae
adc
inc
test
xchg
in
jecxz
mov
lea
inc
std
inc
dec
imul
aaa
negb
mov
and
je
stos
xor
xchg
xor
icebp
call
lahf
mov
jecxz
addb
dec
gs
les
popf
ljmp
or
insb
std
cmp
fstp
mov
stc
ret
push
xchg
mov
cmp
je
lahf
test
call
ljmp
scas
insl
and
adc
mov
cmp
bound
inc
addr16
into
roll
cmp
test
jp
clc
lret
adc
daa
dec
mov
push
jae
sbb
mov
je
cmp
dec
in
popa
adc
mov
daa
lock
icebp
popf
and
mov
add
push
jb
and
stos
inc
or
hlt
jo
arpl
push
or
shrb
lock
sbb
daa
out
stc
fcmovnb
add
pop
dec
sbb
xchg
jnp
pop
into
lds
cltd
xchg
addl
rolb
mov
jle
sbb
iret
in
lret
aaa
add
sar
aad
lret
pop
addb
xchg
fldl
out
stc
lods
xchg
ljmp
pop
adc
int3
sbb
jb
test
mov
xchg
clc
mov
iret
jno
adc
xchg
hlt
pop
enter
insb
insl
pop
or
test
push
adc
and
adc
inc
jg
cmp
mov
aam
add
cmp
fisubrl
jle
divb
dec
add
inc
mov
xor
jp
mov
fisubs
adc
out
pop
stos
pop
rol
stos
popf
cmpsl
popa
adc
fisttpll
xor
mov
in
mov
ret
lahf
push
xchg
out
push
es
jbe
out
mov
test
pushf
test
sarb
xor
pop
pushf
add
inc
mov
lods
ss
lret
push
dec
fcomp
xchg
pusha
stc
sub
xchg
lock
cmp
or
add
jo
sbb
push
inc
cmp
imul
cmp
scas
scas
jbe
pop
sahf
xchg
cmp
sbb
mov
jecxz
pop
or
cmc
jno
dec
jge
shrl
push
les
cmp
fldcw
test
jb
outsl
test
mov
inc
dec
push
aad
arpl
lcall
push
xor
pop
lahf
xlat
adc
or
jecxz
iret
jge
arpl
mov
or
test
imul
scas
aad
sbb
mov
addr16
mov
push
mov
outsl
dec
cltd
std
jmp
sarl
jo
fiadds
jp
jnp
les
in
dec
push
sub
and
mov
in
mov
outsl
cmp
je
mov
jle
adc
mov
dec
aaa
pop
sbb
mov
pop
outsb
test
sbb
movsl
orb
jp
ror
aaa
push
mov
sti
xchg
insl
fwait
cmc
cmp
jo
xchg
cwtl
sub
jno
adc
movsb
sub
insl
loope
sub
fsubl
jno
xchg
mov
jmp
lahf
xchg
fmull
cli
sbb
adc
subl
rolb
sub
popl
mov
cltd
cmp
adc
pop
pop
or
imul
lret
mov
mov
and
cltd
cld
jp
inc
push
sbb
mov
dec
dec
cmp
out
pop
cmp
popf
scas
and
sub
stc
jge
lahf
movsb
xor
dec
xchg
testl
push
into
cmp
or
aam
add
sbbb
and
lahf
push
insb
mov
dec
mov
sbb
dec
cmp
in
pop
lock
aaa
cmp
dec
mov
in
push
fildl
mov
and
mov
mov
sbbb
jb
mov
push
add
aas
xchg
iret
adc
xchg
jmp
dec
repnz
mov
mov
icebp
cmpsl
rcl
mov
popa
scas
sub
dec
mov
insb
mov
inc
adc
lods
xchg
xor
lcall
ret
cmp
jne
fistps
call
dec
leave
repz
xchg
push
lret
pop
enter
pop
sub
icebp
sub
shr
out
jmp
push
adc
jb
nop
insl
add
fdivrp
xchg
das
push
lods
inc
in
sarl
shlb
in
xor
xor
xchg
inc
out
bound
bound
push
loopne
repnz
pusha
in
gs
lahf
jbe
imul
and
int3
cmc
sub
pop
mov
loope
adcl
insl
aam
js
es
test
mov
or
and
dec
mov
xchg
cmp
mov
das
cmpsl
jno
or
movsb
xor
push
or
lds
call
out
xchg
gs
lods
xor
psubw
outsl
dec
jo
rorb
pop
jb
ljmp
sbb
aad
cmp
and
rcrb
lea
adc
lds
push
cmp
popf
shll
and
mov
adc
sbb
mov
xor
dec
jle
dec
mov
dec
and
and
and
fucom
in
orl
data16
aad
ljmp
jle
mov
into
ja
scas
mov
sarl
outsl
add
push
add
test
fcomi
pop
push
sub
and
jmp
mov
sub
test
xor
nop
leave
insb
rolb
lcall
in
xchg
push
cmp
mov
sbb
out
sub
int3
out
xor
adc
lahf
adc
pop
jl
fnstenv
out
sub
inc
shr
outsb
or
call
lods
push
push
aas
sub
cli
xor
adc
push
loopne
cltd
in
push
cmc
adc
pop
data16
cs
pop
jb
sti
mov
push
mov
out
fisubl
inc
addr16
iret
mov
inc
cmp
adc
jge
hlt
insl
enter
mov
cmp
aas
into
adc
les
xchg
call
dec
inc
mov
outsl
pop
lds
loopne
or
jne
adc
subb
mov
and
les
jp
cmp
and
pop
testl
sub
insl
pop
rorb
les
xlat
mov
in
test
rclb
jmp
les
and
and
loop
daa
fistps
ljmp
dec
insl
sahf
ret
dec
sub
into
fadds
js
mov
lcall
xor
add
mov
add
push
inc
scas
mov
sahf
add
and
js
sub
loop
xor
cltd
sarl
mov
ds
pop
xlat
jb
mov
sbb
push
dec
out
es
mov
mov
xchg
sti
lods
jmp
xlat
sbb
add
xor
insl
sub
cmp
ret
out
dec
in
ret
iret
inc
adcl
cmp
mov
pop
cmpsb
xchg
and
shrl
xor
xlat
cmp
shl
out
sub
xor
ret
sbb
ret
xchg
aam
repz
and
adc
cmpsb
nop
cmpb
mov
sbb
cmpsb
xchg
jmp
inc
clc
add
lcall
cmp
adc
and
xor
mov
add
mov
hlt
inc
mov
add
orb
incl
push
mov
push
or
sub
dec
mov
lahf
icebp
rcrb
jae
into
and
stos
jno
mov
mov
xchg
pop
jl
in
rcrl
mov
pop
mov
sbb
ljmp
inc
sbb
outsl
add
mov
xor
dec
jle
stos
imul
dec
xor
mov
pop
push
data16
outsb
pop
inc
sarb
rcl
dec
jno
cli
dec
cwtl
popa
insl
mov
outsl
and
aas
adc
sub
in
nop
mov
bswap
and
pushf
xchg
mov
stos
int3
pusha
cmpsl
cmc
test
and
mov
nop
out
les
int3
mov
pop
imul
cmp
stos
xor
fidivrl
sub
mov
add
inc
dec
pop
xor
xchg
cld
adc
dec
jo
push
imull
add
test
mov
jp
mov
sahf
sbb
pop
fldl
add
mull
in
cli
testl
ret
and
mov
pop
call
rorl
dec
sbb
mov
scas
sub
sbb
les
sarl
add
jb
int
mov
addr16
mov
les
sahf
jnp
je
fs
pop
dec
and
jo
orb
sarb
jle
sbb
mov
sub
add
fyl2x
pop
sub
sub
push
pop
icebp
mov
in
pop
add
fstpl
lcall
cmp
or
lods
or
ss
ret
push
inc
out
divb
fmul
add
fwait
dec
out
or
sbb
adc
cmpsl
cmp
rol
inc
jo
jae
pop
push
mov
and
mov
sub
fistl
imul
mov
fs
push
popa
enter
loope
jae
mov
inc
inc
in
mov
int3
adc
push
xchg
pusha
fdivrs
rcrb
fstpl
push
outsb
cli
test
add
add
aam
cmc
push
ret
arpl
movsb
pop
rcll
mov
insb
cli
stc
jno
xorl
cltd
push
and
cmc
jecxz
add
jns
mov
jmp
jns
mov
stc
lret
mulb
int
mov
sub
pop
call
and
int
out
push
mov
xchg
cmc
or
lds
or
dec
and
scas
popa
add
rcll
pop
push
cmp
mov
popa
mov
jae
fcoms
out
cmpb
jl
lods
push
xor
dec
jl
xchg
mov
ret
mov
push
mov
lret
stos
sbb
adc
push
pop
cmp
sub
bnd
inc
insl
lock
sub
pop
add
cmp
sahf
xor
insl
push
xchg
lds
xchg
jbe
mov
lret
cli
das
lods
xchg
xor
or
ds
and
jge
or
mov
jno
pop
mov
adc
add
lahf
subb
out
adc
jo
loop
xorl
pop
pushf
test
or
push
push
inc
std
rcll
xor
cmp
stos
mov
and
mov
xor
loopne
lock
arpl
mov
stos
scas
mov
aas
mov
mov
xor
push
cmp
mov
xchg
loope
jnp
mov
in
jo
jg
push
stos
mov
dec
insb
sahf
dec
rclb
cmp
push
imul
ljmp
pop
les
xchg
lret
push
stc
es
xorb
into
lahf
inc
cmc
cmp
bound
outsb
cmp
pop
repz
je
iret
jo
shlb
ds
nop
sbb
test
aam
into
pop
mov
adc
sub
push
in
std
sarb
fsubl
lds
lret
inc
jo
adc
and
push
inc
mov
mov
sti
mov
cmpsl
das
out
mov
push
lret
sub
cltd
imul
lahf
mov
sub
sti
cmpsl
add
mov
cmp
inc
inc
push
push
lret
push
dec
fidivrs
dec
rcl
push
std
sub
xchg
imul
jnp
lea
adc
jnp
push
pop
sahf
pop
jnp
xchg
xchg
repnz
lahf
aaa
enter
sub
out
rcr
outsb
lret
push
sub
inc
aad
push
testb
test
or
jae
test
sub
lret
rclb
mov
and
push
xor
pop
pop
mov
jne
add
sub
add
shll
mov
pop
lcall
mov
ds
xor
cmp
cmp
rcl
fcoml
sub
ret
cld
jmp
mov
pushf
and
loopne
mov
sahf
sub
dec
mov
mov
sbb
mov
popa
arpl
mov
add
repnz
insb
fldt
push
sub
dec
lods
dec
cwtl
out
sahf
int
or
sub
es
fildll
inc
jmp
sbb
mul
and
mov
or
lods
inc
stos
cli
arpl
cwtl
lcall
mov
xchg
pop
movsb
adc
xchg
cmpsb
dec
lea
outsb
jmp
lret
jno
adc
cwtl
cli
pusha
fwait
imul
pop
jl
shl
jne
jbe
push
and
decl
pop
dec
daa
divb
inc
sbb
addb
enter
bound
movsb
insl
push
bound
mov
mov
in
adc
pop
stos
loop
mov
pop
aas
addr16
sarl
mov
sbb
lret
incl
aad
and
in
mov
mov
pop
sbb
xchg
mov
cmc
push
ja
pop
imul
dec
add
movsl
xchg
mov
and
lock
jae
pop
idiv
pop
or
xor
inc
cmpsb
call
xor
jno
ljmp
orl
push
je
pop
mov
mov
mov
fdivrl
call
or
sub
lock
loope
mov
push
push
lods
filds
lea
fcomi
test
rclb
stos
test
jnp
push
enter
xlat
push
sbb
repnz
inc
mov
jns
inc
and
hlt
xchg
mov
and
loop
out
adc
cmp
mov
push
sbbb
out
cmp
repnz
aaa
mov
aam
mov
arpl
mov
mov
pop
aas
aam
imul
dec
dec
and
in
jmp
push
scas
aad
pop
data16
addb
pop
push
stos
push
jmp
dec
xchg
xor
mov
enter
out
adc
xchg
aad
enter
adc
jle
cmp
mov
push
sbb
mov
dec
pop
push
adc
mov
aas
sahf
aaa
shrb
xchg
popf
stc
insl
out
add
fsubs
dec
out
and
xor
enter
sbb
cmp
fcompl
js
ffreep
mov
ret
mov
fstp
inc
adc
cmp
icebp
nop
add
in
andl
mov
in
clc
push
xor
aam
je
mov
repz
daa
jge
rcr
lcall
pop
test
jl
cmp
sbb
xlat
outsl
subl
shll
xor
rolb
out
sahf
loopne
pop
iret
mov
sbb
cmp
or
jl
pushf
nop
je
cmp
pop
jns
sbb
sbb
lfs
outsl
fcomps
xor
push
mov
add
jmp
nop
rolb
dec
push
sbb
lret
std
pop
and
cmp
enter
mov
jns
mov
cmp
and
or
test
int3
sub
push
and
push
shlb
dec
gs
sahf
jo
insl
push
mov
jle
popf
icebp
push
xlat
dec
jmp
daa
push
or
pop
adc
lret
pop
ret
push
mov
add
and
int
mov
gs
mov
mov
inc
mov
and
cmpb
mov
in
mov
mov
nop
pop
xchg
sub
add
mov
mov
aam
or
sub
sbb
je
je
orb
push
inc
std
jb
sti
mov
repnz
in
in
mov
cs
dec
fdivl
insb
sbb
aas
or
pusha
or
dec
and
sub
loopne
mov
and
pop
fwait
mov
push
inc
mov
lods
enter
sbb
repnz
mov
sub
ljmp
jbe
push
jp
push
movsb
shlb
cltd
cmp
xor
xchg
mov
jmp
cld
js
std
call
and
jge
pop
call
out
popl
ret
ss
sbb
inc
cmp
mov
push
or
cmp
stos
test
daa
dec
and
ds
sahf
mov
stos
outsb
mov
movsl
call
pop
test
adc
cmc
inc
adc
std
hlt
lds
sub
nop
imul
mov
jns
cmpsl
jno
in
inc
pushw
inc
std
jge
sbb
add
aaa
out
adcb
outsl
cmpsl
leave
outsb
jge
dec
out
shll
sbb
test
mov
sub
xor
cmpl
mov
sub
lods
xor
lahf
enter
xchg
insl
aas
int3
stos
mov
and
jg
fdivrs
xchg
pop
push
lea
mov
pop
loop
xchg
push
xor
sbb
mov
xchg
pop
xor
test
push
inc
push
mov
leave
test
mov
or
and
test
imul
sbb
xchg
jnp
and
cwtl
dec
add
mov
addb
mov
or
mov
sahf
xchg
sbb
outsl
fcomps
or
cmp
scas
mov
mov
cmpsb
mov
ss
xor
test
jmp
xor
mov
mov
loopne
push
mov
pushl
lods
jle
ret
cmc
pop
mov
push
loope
or
fcmovnb
dec
inc
add
mov
xor
out
or
loopne
mov
pop
aaa
roll
ljmp
nop
dec
xchg
fwait
xor
pop
pushf
mov
sub
dec
in
dec
add
addr16
or
pop
lods
fs
mov
mov
test
dec
add
mov
aas
fidivs
pop
sub
and
xor
scas
fistps
dec
test
mov
sub
mov
pop
repnz
icebp
add
pop
mov
and
pop
cmc
inc
sbb
push
lds
pop
adc
es
jl
cltd
sub
jmp
xor
xor
and
lds
dec
imul
hlt
sbb
cwtl
inc
mov
insb
imul
add
jl
cmp
push
mov
jne
loopne
sub
mov
pop
lcall
enter
lods
mov
leave
xor
lret
div
jmp
mov
xorb
imul
cmp
mov
xor
pop
xchg
cmp
cli
add
in
lret
cmp
in
daa
orl
sbb
ret
cmp
cli
dec
loope
sbb
sahf
and
and
orl
fdivs
ret
rcrl
cmpsl
outsl
rep
and
out
dec
mov
rcr
and
insb
std
es
out
jne
aaa
sub
mov
xor
xchg
sbb
das
push
pop
sub
les
push
movsb
out
push
jns
mov
pop
jo
imul
add
repnz
lea
inc
lret
dec
test
cmp
inc
or
in
or
scas
add
loopne
jae
fs
nop
movsb
mov
adc
add
add
bound
call
nop
clc
mov
dec
jmp
inc
sub
ss
mov
xor
pop
xor
out
cmp
push
pop
outsl
pop
nop
xchg
jo
jnp
mov
xchg
sbb
pop
or
adc
jns
nop
cmp
inc
inc
sub
int
leave
loop
loope
cmp
dec
cmc
and
scas
mov
loop
cmp
mov
mov
shl
inc
pop
sub
mov
jns
into
orb
pop
js
inc
stc
jb
stc
in
roll
mov
jl
xchg
dec
add
push
cs
fcmovnb
std
sbb
or
cli
popa
in
in
fwait
push
pushf
cmp
push
pop
scas
and
push
daa
in
pop
mov
mov
mov
xchg
out
fsubrl
addl
es
mov
cmpsl
icebp
std
sbb
jmp
inc
cmp
jne
pusha
stos
pop
test
inc
mov
sbb
cmpsb
aam
mov
fildl
jb
or
jl
and
sbb
pusha
sbb
xorl
push
mov
lock
push
shl
adc
mov
dec
jbe
mov
pop
push
sub
xor
insb
out
sub
sti
lcall
lret
sti
adc
xchg
push
xchg
hlt
cs
dec
ja
inc
mov
push
sbb
fistpll
jmp
int
lcall
mov
dec
cltd
jnp
test
mov
mov
inc
outsl
arpl
or
cmp
gs
dec
pop
adc
dec
shll
movsl
xchg
jge
add
test
push
pop
addl
xchg
pushl
data16
loopne
iret
and
daa
sub
cmc
dec
stos
xchg
in
mov
dec
shll
and
adc
push
fcmovne
imul
and
dec
inc
popa
cltd
cli
mov
add
or
dec
outsl
sarb
adc
jns
rclb
aad
in
mov
lods
in
dec
adc
add
push
cld
xchg
inc
nop
lret
arpl
js
cmc
out
sbb
inc
pop
mov
jbe
pop
pop
icebp
pop
test
out
jg
jae
and
call
clc
inc
mov
mov
out
dec
outsb
jecxz
mov
cmp
imul
jl
sarl
aam
aas
test
xchg
lret
clc
es
rorb
std
push
mov
xchg
out
or
cltd
jno
je
mov
outsb
add
rorl
jl
pop
movsl
rorl
lret
xor
push
mov
fisubs
call
sti
leave
test
es
pusha
lock
cmp
icebp
xor
push
popl
push
movsb
cmpsb
mov
lock
dec
mov
sbb
sub
push
push
je
sub
push
add
test
out
sbb
clc
rorl
in
test
ret
incl
es
dec
cmp
xchg
jae
dec
lock
popa
jno
mov
sub
pop
jg
out
int3
xor
cld
stos
mov
rolb
pop
sbb
pop
pop
notl
icebp
cwtl
roll
mov
sti
xor
test
mov
repz
nop
repnz
bound
and
imul
sbb
mov
adc
js
cmpsb
ficomps
inc
cwtl
push
rcll
test
xchg
or
aas
pop
jbe
xchg
jl
inc
popa
int3
loop
sarb
sbb
push
jp
mov
mov
xor
outsb
ret
push
std
pop
jp
add
push
cmp
sub
mov
test
jge
jge
ret
cmp
scas
lock
jnp
outsb
dec
adc
loop
sub
mov
into
pop
insl
lods
mov
nop
sbb
mov
inc
out
cmp
pop
add
add
icebp
xchg
and
dec
pop
scas
js
out
mov
inc
iret
popf
insl
mov
popa
jge
add
insl
fidivrs
sbbl
pop
mov
pop
sbbl
or
out
or
test
pop
lds
ret
cmp
lods
cmp
or
xchg
mov
mov
fimuls
jbe
fimuls
in
int
lret
sbb
jp
dec
aas
ja
lods
mov
adc
xor
aas
loop
scas
shrl
jbe
leave
aam
jo
lret
jp
pop
ds
fdiv
ror
adc
lret
sar
cltd
incl
hlt
sbb
sbb
imul
mov
rorb
scas
lds
jnp
cmp
int3
repz
jno
rorb
adc
scas
cmp
jbe
sub
pop
inc
sub
fsubrs
das
std
jne
sarb
jmp
test
jb
jns
xorb
or
ret
push
lds
pop
push
outsb
cmc
ds
mov
dec
repnz
mov
scas
pop
inc
jle
aad
xchg
gs
call
cmp
into
pause
push
fimuls
sbbl
sub
call
push
out
push
dec
mov
xchg
sub
and
out
jno
enter
add
xchg
and
mov
ficompl
inc
push
xor
jle
jp
jo
dec
add
and
test
jbe
mov
loopne
movsl
xchg
xor
negb
pop
nop
pop
xor
mov
xchg
dec
inc
out
dec
cwtl
movsb
pop
stos
nop
add
mov
push
pop
fwait
add
das
call
jmp
xchg
inc
mov
mov
movsl
mov
xor
bound
mov
sbb
lret
sub
mov
divb
pop
mov
mov
in
jge
icebp
divl
jmp
mov
lods
ror
pop
dec
mov
adc
pusha
outsl
add
jnp
lods
stos
dec
lret
sbb
or
mov
cmp
add
cmp
lahf
ficomps
xor
ss
push
jne
jo
mov
scas
sbb
pop
sub
rcl
in
jp
cmpsl
stos
in
or
jecxz
adc
fnstsw
clc
jecxz
test
xchg
push
mov
mov
mov
push
or
sti
in
icebp
cmp
mov
xchg
mov
lds
enter
push
sub
pop
push
jmp
push
inc
mov
lock
dec
out
gs
adc
cmp
or
in
in
ds
sbb
das
and
aaa
out
dec
sub
push
mov
sbb
leave
test
jbe
shlb
movsb
jbe
adc
xor
sarb
cmpsb
dec
mov
push
xor
imul
jmp
or
jge
mov
mov
fidivrl
mov
sub
enter
xor
rcrb
push
pop
loopne
cltd
sub
shlb
or
repz
adc
loop
jmp
imul
jp
repz
mov
push
scas
imull
cmp
leave
jecxz
cld
divb
daa
inc
mov
sbb
adc
bound
xchg
fs
repz
sbb
pop
jne
jge
or
out
jb
into
xchg
pop
mov
js
fdivrl
test
imul
cmpsl
je
add
sub
imul
lret
lock
adc
les
sbb
pop
cmp
xlat
fwait
and
fs
push
mov
aad
mov
call
xor
fistpll
and
jo
cld
popa
jp
subb
mov
fwait
aas
adc
push
fadds
sub
xchg
fidivl
iret
lock
mov
andb
fmuls
jnp
dec
pop
ret
xor
pop
lods
int3
pop
arpl
push
out
dec
outsb
and
or
in
in
mov
xor
mov
inc
xchg
and
pop
and
cld
mov
orb
pop
stc
mov
aad
arpl
lds
cmp
out
pushf
mov
jmp
aaa
iret
xchg
mov
lahf
ss
stos
inc
pop
ja
sbb
and
jle,pn
lods
mov
cwtl
or
xchg
mov
push
jae
or
xchg
mov
inc
fiadds
sbb
mov
into
hlt
out
into
lret
dec
mov
lea
ret
mov
push
aas
mov
lods
nop
pxor
sbb
in
fidivrs
cmp
pop
ffree
fsubrl
inc
outsl
jge
outsl
and
cli
scas
fcmovu
or
inc
push
popf
in
inc
cmp
mov
xchg
or
fsubrs
add
sub
cmp
test
repnz
cmp
pextrw
pushf
pop
loop
das
or
push
cmc
mov
and
add
xchg
mov
adc
jp
cltd
sbb
xlat
xor
or
out
mov
or
and
mov
jno
les
pop
fbld
sbb
lret
in
mov
jns
push
xor
lock
push
dec
ljmp
xchg
into
mov
pushf
ret
sbb
inc
xchg
jbe
fmul
adc
xchg
xchg
shll
ljmp
fisubl
stos
rorb
xlat
popa
pop
add
jge
aaa
addb
imul
jp
in
cmp
sub
setle
lret
xchg
dec
mov
sar
into
pop
xchg
and
std
inc
mov
push
mov
insb
enter
outsl
test
icebp
nop
pusha
and
fdivr
dec
or
and
daa
mov
jmp
nop
push
subl
adc
iret
orl
arpl
adc
add
add
cmp
lock
sbbb
xchg
out
mov
mov
inc
aaa
pushf
dec
add
sbb
popf
mov
rol
mov
in
mov
call
int3
les
jle
push
cmp
out
imul
pop
or
test
jecxz
cmp
cltd
incb
outsl
xor
ja
hlt
push
inc
dec
loopne
sub
cli
xor
mov
mov
popa
jno
push
aaa
jl
xchg
shrb
data16
xchg
adc
mov
dec
push
mov
lahf
push
xchg
add
packssdw
mov
sub
pop
mov
scas
js
push
xchg
dec
jbe
pop
hlt
movsl
popf
call
jecxz
loopne
cmc
sub
xchg
idiv
fldl
data16
insl
xchg
icebp
xlat
push
test
push
xor
cmp
add
aam
add
or
cmp
repz
sahf
mov
lcall
cmp
cli
adc
mov
xchg
lret
mov
jb
inc
mov
push
sbb
in
xor
xor
adc
pop
inc
dec
lods
sub
sbb
test
loope
xlat
lods
mov
pop
dec
clc
push
scas
pusha
outsl
mov
add
mov
out
pop
xchg
popf
adc
sub
or
idiv
rcrl
lret
xor
out
jmp
imul
lahf
popf
test
fcmovnb
and
mov
cmp
cmp
in
inc
ss
gs
inc
xor
dec
or
cmp
cmp
dec
sub
in
in
mov
mov
pop
mov
jnp
gs
sarl
icebp
pusha
xor
xor
loop
mov
mov
imul
push
push
mov
xor
movl
push
push
nop
das
cmpb
nop
lods
insb
pop
in
inc
dec
jmp
pop
adcb
xchg
cmp
lods
or
sarb
sbb
adc
mov
icebp
cwtl
xchg
sahf
lods
pop
or
bound
pop
outsl
xor
pop
test
data16
or
aas
inc
push
xchg
cmp
jmp
out
cmpsb
popw
inc
mov
sbb
lret
jp
sub
xchg
or
loopne
repz
es
arpl
loop
inc
pop
nop
lret
pushl
fcomp
insl
lea
mov
mov
lea
mov
jg
sahf
test
bnd
and
pop
arpl
and
cmp
jge
pop
cwtl
lcall
lahf
stos
dec
cli
stc
imul
enter
test
adc
cmc
test
aaa
mov
xchg
pop
paddb
lods
push
cmp
pop
pop
int3
add
lods
sub
jns
jo
sbb
adc
jp
lods
stc
mov
pop
cwtl
or
ds
std
popa
rcll
fcmovbe
jns
and
cli
stc
add
pop
sbb
fnstenv
rclb
sub
jl
push
mov
push
bound
hlt
xchg
fldt
inc
sub
xor
mov
sub
popf
aad
push
mov
aad
xor
xchg
mov
repz
idiv
movsl
or
addr16
push
jmp
iret
and
and
ds
fs
sahf
dec
sti
jecxz
xor
sub
mov
inc
add
pop
bound
xlat
and
mov
add
push
mul
inc
out
add
mov
xchg
xchg
sbb
das
es
out
push
lods
out
mov
jg
inc
sub
mov
sbb
jb
adc
adc
or
pop
icebp
repz
adc
shll
or
xchg
notb
out
dec
std
cld
inc
or
jae
call
jle
std
iret
add
fcmovne
jle
lret
lahf
scas
xor
dec
mov
push
mov
cmpsl
lcall
test
mov
pop
xchg
dec
lock
mov
cs
lahf
sbb
mov
inc
addr16
add
movsb
imul
ret
pop
mov
mov
lods
adc
repz
sbb
add
aas
mov
outsl
stc
cld
stos
cmp
movsl
jb
stc
mov
dec
dec
cli
sbb
adc
sti
int
inc
cmp
fistpl
leave
inc
jecxz
mov
jb
jns
aaa
pop
cmp
call
psubw
ret
test
cmp
decb
pop
pop
mov
mov
and
jecxz
lods
shll
sub
adcl
cs
nop
faddl
adc
pop
adc
std
scas
lea
sub
pop
mov
sub
inc
and
sarb
jnp
add
pop
das
adcl
dec
xchg
imul
hlt
repnz
call
mov
pushf
movsl
cmp
mov
adc
ljmp
dec
inc
scas
jb
xor
ja
repz
sub
mov
adc
andb
or
adc
loope
cmp
mov
int
pmulhuw
mov
mov
xor
sbb
kmovd
shr
inc
icebp
or
dec
mov
subl
popf
or
les
test
pop
sub
cmpsb
testl
out
decb
and
ja
or
outsb
inc
popf
xchg
mov
leave
ja
movsl
sbb
jle
pop
sbb
jmp
adc
lods
and
adc
pop
sub
push
mul
inc
jg
add
add
ret
inc
into
fucomip
aaa
imul
rcrb
aad
je
pop
rcrb
enter
mov
xchg
mov
and
addl
push
movsb
mov
push
push
dec
ss
and
int
sti
add
adc
dec
sbb
pop
mov
cmpb
adc
add
sahf
lcall
ja
mov
cltd
adc
inc
clc
mov
sbb
leave
dec
hlt
sarl
ficompl
outsl
pushf
arpl
or
jns
dec
xor
sbb
and
add
imul
adc
push
xchg
and
sbb
sub
outsb
mov
jecxz
cmp
mov
in
and
mov
pop
in
sbb
loopne
sarl
shrb
jnp
lock
rorl
cs
or
imul
rcrl
jecxz
lock
cmpsb
xchg
aaa
jb
inc
pusha
sub
das
loopne
inc
mov
scas
in
jecxz
negb
les
jmp
xchg
call
and
scas
push
mov
xchg
and
or
icebp
sahf
sbb
fildll
or
and
leave
cmc
push
mov
test
inc
inc
adc
xor
fimull
and
or
pushf
cwtl
das
dec
and
push
sub
inc
mov
dec
lret
icebp
outsl
insb
shrl
jg
pop
fwait
ss
pop
pop
jo
dec
in
dec
in
in
add
lds
jp
dec
fsubrp
jo
push
mov
lahf
push
xchg
fnsave
aam
push
cld
pop
loopne
setp
aam
jg
adc
imul
xchg
int3
sbb
xor
xchg
inc
pushf
fisubrl
push
mov
mov
pop
inc
je
ret
xchg
jl
mov
ds
hlt
pop
fistpl
mov
jp
ja
pop
das
push
in
sbb
leave
adcl
orb
dec
call
xor
jge
aam
sub
insb
ret
adc
subb
movsb
ret
or
push
hlt
cmp
into
lods
flds
inc
push
xor
xor
adc
les
pop
xchg
jb
pop
scas
push
cmp
pop
jp
jns
out
lods
jno
jo
enter
testb
adc
adc
dec
cmpsb
movsb
dec
les
fs
add
adc
scas
clc
les
push
fmuls
push
imul
loope
jo
shlb
add
into
xor
call
xchg
fcoml
sub
pop
popa
pop
adc
loopne
mov
imul
lds
cs
jmp
je
xor
loope
mov
push
in
and
loope
inc
stc
jp
jnp
in
js
dec
cmpsl
mov
inc
subb
pusha
mov
inc
pusha
imull
pop
inc
adc
sub
mov
gs
arpl
and
mov
enter
add
out
popa
jno
arpl
fs
fimuls
pop
test
cmp
test
mov
push
push
test
dec
push
stos
adc
addr16
mov
clc
dec
mov
or
sbb
cmp
ret
mov
fadds
cmp
mov
sbb
mov
out
aas
mov
add
sub
movsb
aaa
adc
cwtl
push
stc
and
cmc
in
in
divps
divb
inc
xorb
add
out
fwait
add
rcl
mov
and
mov
call
xchg
lods
mov
push
in
fwait
pop
sbb
daa
sahf
sub
mov
rcrb
addb
cmp
dec
xor
cs
sub
add
adc
push
push
mov
mov
jp
push
mov
or
cmp
movsl
and
jns
mov
and
aam
pushf
adc
push
xor
repnz
mov
inc
xor
jno
dec
lahf
aad
test
fistpl
xchg
inc
sarl
aas
fadds
adc
repnz
xchg
movsl
sbb
lods
inc
ljmp
adc
lret
ds
outsb
jmp
pop
fists
inc
int3
or
pop
arpl
out
test
sti
mov
sbb
push
inc
out
mov
mov
aad
mov
jmp
pop
inc
mov
std
das
xor
jno
xchg
push
repz
mov
mov
inc
and
jmp
lods
test
jno
xor
xchg
mov
ficoms
ljmp
push
popa
mov
je
jmp
insb
sub
mov
adc
pushf
pcmpeqd
push
jnp
pop
inc
cld
add
sbb
inc
sti
mov
cmp
sub
dec
outsl
jecxz
scas
pop
imul
mov
test
int3
pop
push
loopne
push
test
xor
lods
imul
jecxz
orl
pushl
xor
loope
mov
scas
inc
pop
addr16
pop
loopne
cli
js
xor
mov
scas
aam
and
jns
or
ljmp
inc
jmp
xchg
idivb
outsl
cmp
mov
mov
cltd
adc
dec
jge
dec
cmp
in
push
outsb
xchg
lret
push
test
fcoml
out
out
fdivrs
and
push
add
dec
jbe
jno
mov
xchg
adc
jge
and
or
or
mov
dec
hlt
adc
mov
cmp
mov
mov
mov
outsb
push
inc
dec
pop
in
and
addr16
mov
int
movsb
push
pop
mov
jge
cmp
fldcw
in
mov
push
clc
mov
inc
dec
out
xor
xor
xor
mov
pop
dec
sarb
mov
push
xor
and
js
pop
fisttpll
in
test
iret
je
push
jbe
in
out
lock
xor
dec
add
cmp
dec
adc
pop
sub
ficoms
je
adc
dec
or
sub
push
push
mov
mov
cli
inc
ror
add
or
mov
jo
xchg
mov
cltd
cwtl
jle
pop
nop
pushf
enter
xchg
and
bound
jno
shrb
lds
dec
xor
push
test
xchg
mov
mov
into
xor
sub
in
jo
push
es
sbb
std
pop
pop
es
xor
mov
push
cs
mov
ret
mov
into
add
cmp
sahf
push
inc
jmp
pop
out
call
adc
lret
sbb
insl
sbb
loop
xor
in
jne
adc
and
lahf
movsb
adc
sub
cmp
in
cwtl
xchg
xchg
add
mov
xor
in
jb
addr16
fisttps
js
xor
and
mov
call
cld
cmp
lock
fimuls
je
add
jb
mov
mov
out
jmp
subb
or
push
dec
xchg
fcoms
pop
adc
adc
sahf
push
mov
jge
inc
mov
add
or
lds
and
sbb
mov
mov
sub
jp
sbb
sub
lods
nop
fs
sub
add
adc
dec
and
pause
pop
lods
inc
repz
jg
pop
popa
adc
inc
jbe
ss
cmp
jnp
and
ss
lock
lret
dec
add
inc
xlat
ja
adc
fstps
adc
stc
stos
lea
xor
xor
jbe
lock
int3
call
dec
xor
mov
inc
or
dec
outsb
mov
dec
add
loopw
ss
jbe
lahf
and
sarb
test
ja
adc
inc
rorl
inc
jg
out
mov
xor
cmp
test
pop
add
mov
dec
stc
cwtl
cmpsb
orl
shrl
lods
fadd
into
inc
mov
jle
in
push
sub
test
lahf
sub
sbb
out
scas
mov
arpl
pop
mov
xchg
jmp
sub
fsubs
sub
pushf
in
push
cmp
in
ss
lret
movb
cmp
data16
push
xchg
add
fwait
rcll
mov
mov
jbe
fmuls
out
icebp
adc
sarb
push
and
dec
xlat
dec
bound
sbb
or
lods
jecxz
fsubr
out
add
inc
inc
jmp
mov
enter
adc
mov
xchg
loope
mov
and
sbb
in
fisubs
ds
adc
sbbl
sub
dec
aam
orl
fidivrl
mov
mov
mov
and
loop
loope
mov
mov
loopne
pop
adc
test
fisttpl
xor
sub
sar
push
cmp
gs
pop
sbb
aad
xchg
clc
rcr
sub
lods
push
adc
pop
cld
sub
inc
insl
imulb
mov
cmpl
cmpsl
or
int
fldt
test
filds
in
push
cmpsb
add
cmpsb
jmp
xchg
cmp
push
mov
lret
pusha
arpl
inc
dec
sbb
in
or
pushf
sbb
imul
mov
sbb
mov
ror
jle
sbb
mov
data16
inc
lods
lods
fs
stos
cmp
sarb
push
mov
test
adc
push
mov
into
cltd
or
loopne
imul
sarb
push
mov
dec
sbb
test
dec
notl
sbb
sub
cmpsb
repz
fdivl
into
sbb
int3
dec
mov
test
test
loope
adc
push
mov
sub
jb
mov
or
mov
cwtl
fcomp
fdivp
xchg
mov
push
cmc
mov
fnstenv
sbb
test
cmpsb
and
or
push
out
sbb
dec
addr16
add
xchg
bound
test
jo
test
stc
add
push
adc
inc
icebp
mov
aaa
fisubrs
pushf
adc
add
imul
inc
jb
rclb
pop
sub
aam
sahf
sub
jae
ss
mov
lock
scas
icebp
jae
push
pop
lret
test
adc
stos
inc
cmp
or
or
inc
xor
cs
rcrl
or
dec
xchg
cmp
sub
xor
jnp
mov
lods
or
pop
inc
rcl
test
and
fdivs
fsubp
rolb
out
in
pusha
mov
mov
hlt
adc
jmp
aaa
ja
popf
pop
mov
mov
xchg
out
ja
mov
xor
cmp
icebp
lcall
xor
sbb
jecxz
test
lcall
jp
cmp
sub
ret
popf
mov
mov
lahf
xchg
push
aam
rcrl
call
or
fldl
xchg
mov
lock
fnstsw
nop
bound
in
rorl
popf
jg
lds
iret
lods
repnz
mov
fdivr
sub
mov
pushf
rolb
pop
dec
and
mov
xchg
imul
out
or
sbb
inc
or
sbb
cmp
push
jg
movsb
enter
pop
mov
fisttpl
inc
pop
fsts
add
xor
inc
std
aam
dec
hlt
outsl
and
insl
xchg
xchg
xchg
mov
mov
test
out
jnp
roll
dec
cmp
movsl
fwait
and
push
popa
mov
lods
pop
mov
outsl
sub
jp,pt
clc
push
inc
arpl
gs
psubusb
or
mov
jp
xor
test
jmp
mov
subl
cmp
sbb
call
sub
cmc
jg
into
lret
movsl
pop
mov
dec
fs
or
insb
aaa
jne
add
mov
sahf
dec
push
mov
js
ret
stos
sbb
mov
pop
arpl
cmp
les
lcall
mov
movsb
sbb
lahf
loop
divl
xchg
fdivrl
into
sub
stos
add
shlb
and
mov
js
clc
pop
je
loope
insl
cmp
mov
pop
sub
jl
mov
dec
fistpll
lret
inc
pop
ja
test
inc
xchg
ds
rclb
ret
sarl
in
mov
mov
push
jb
mov
testl
enter
xor
nop
mov
push
fwait
adc
pop
push
xor
jns
xchg
and
loope
shrl
sbb
adc
test
add
and
xor
cltd
cltd
xchg
jb
sahf
aad
and
jnp
push
enter
lcall
cmp
push
test
inc
mov
fdivrs
inc
out
or
add
and
mov
jne
shl
xor
sbb
sbbb
xchg
push
pusha
add
and
je
mov
push
adc
cmc
imul
out
mov
xor
and
stc
rcr
dec
jp
pop
xchg
les
aaa
in
xchg
rorb
adc
aas
sahf
les
lret
nop
adc
cmp
ja
loop
jns
jmp
sbb
push
push
call
icebp
mov
lret
int
push
adc
cmp
xor
lret
push
mov
addb
ljmp
into
xor
mov
popa
sub
cmp
mov
adcl
out
jmp
nop
xor
call
jns
in
push
mov
pop
mov
lea
cld
jp
or
leave
xor
jecxz
arpl
jmp
test
xchg
jp
sub
mov
jno
pop
imul
aas
sbbb
test
xchg
push
xor
incb
cmp
mov
rorb
mov
into
sbb
inc
aas
add
stos
pop
mov
sti
mov
cmp
sbb
jg
movb
mov
xlat
loop
testl
out
jo
les
mov
stos
inc
or
out
fs
xchg
int3
pop
or
adc
add
mov
popf
adc
jno
int3
xor
outsb
mov
sub
into
pop
push
rolb
enter
loope
loop
push
xor
xor
inc
scas
dec
dec
cmp
mov
cwtl
lods
shr
fstps
jge
sbb
loop
inc
sub
hlt
test
sbb
out
mov
cmp
add
movsb
in
fcoms
adc
mov
in
mov
xchg
outsl
or
lds
push
std
gs
push
cs
cmc
cmc
fsubr
pop
sbb
pop
and
into
xchg
loop
insl
lods
or
lea
fbld
iret
fs
mov
lock
and
mov
ret
xchg
imul
adc
or
inc
rolb
enter
sub
pushf
mov
lods
sub
loope
in
jno
bound
daa
bound
inc
int
enter
mov
stos
xor
aad
pminsw
inc
adc
mov
aam
sub
xorl
mov
test
jne
mov
push
mov
cmp
and
fld
test
icebp
cmpsl
lea
add
sbb
loop
inc
sahf
hlt
push
subb
sti
jge
and
stos
push
in
xchg
push
and
cmp
dec
add
int3
inc
in
and
out
push
push
fsubs
or
test
jge
sbb
outsl
push
or
imull
pushf
adc
inc
addb
and
xor
mov
ficoml
push
jl
int3
popf
mov
pmovmskb
ss
cmp
xchg
cltd
mov
cwtl
popf
jg
loope
sbb
imul
pop
dec
push
mov
xlat
in
push
fidivrl
and
test
in
ds
insb
mov
xlat
ret
mov
jb
div
popa
decl
roll
jp
ret
adc
add
icebp
cld
mov
arpl
sti
dec
mov
es
mov
mov
jae
push
ret
es
bound
push
xchg
push
ret
pusha
cltd
pop
xchg
shrb
mov
mov
je
les
add
push
mov
mov
push
mov
jns
xchg
sahf
incb
shll
xchg
aaa
fwait
mov
cmpsl
or
add
push
arpl
movsl
and
and
xchg
pushf
clc
sbb
dec
stos
cmp
pop
or
clc
and
dec
loopne
shlb
incb
or
adcb
add
lods
dec
ret
pop
cwtl
scas
sbb
mov
leave
and
test
shrl
repnz
inc
stos
cmc
xor
mov
dec
and
daa
adc
aas
and
cmp
in
jno
ljmp
mov
mov
arpl
les
scas
jae
pop
adc
or
add
cli
inc
lds
sub
push
xchg
clc
mov
lock
test
nop
push
mov
mov
cs
and
sbb
loop
inc
and
and
xchg
pop
add
pop
jne
cmp
test
fadd
repnz
gs
out
or
out
mov
push
cmp
mov
mov
lret
es
sarb
add
dec
ret
js
imul
xor
lock
out
cmp
mov
in
dec
leave
mov
incl
sahf
push
xchg
fmull
pop
or
pop
mov
dec
pop
ds
in
mov
xchg
xor
adc
mov
bnd
xorl
sub
movsl
iret
js
out
ja
xchg
adc
rclb
les
fimull
push
mov
adc
mov
pop
sub
adc
sbb
loope
and
in
fcmove
insb
or
pop
jmp
jmp
repz
ljmp
lret
pop
rorl
ffree
mov
push
aad
inc
das
mov
push
mov
lea
int3
rolb
push
or
xchg
inc
out
xor
mov
push
repz
mov
cmp
scas
add
jg
daa
xor
fcom
cmp
rcl
inc
pop
pop
dec
rol
mov
loop
and
aad
pop
pop
jno,pt
lock
out
lods
orb
pop
hlt
dec
out
xchg
shl
pop
loope
sbb
in
pop
arpl
lods
test
or
and
lcall
lds
push
xchg
jnp
fsub
ficomps
cmpsb
outsl
dec
push
cmp
fdivs
mov
cmp
or
pop
adc
cmpsl
iret
fs
das
repnz
jg
clc
mov
arpl
cmpsb
repnz
aaa
lret
and
cmp
pop
jne
mov
mov
movsb
shll
dec
popf
test
in
xchg
xor
gs
jecxz
xor
fcom
xor
cmp
gs
mov
ret
and
movsl
xlat
and
and
mov
xor
xchg
jne
add
psubusw
aaa
pushf
push
or
stc
adc
stos
mov
aad
into
sbb
pop
imul
mov
dec
loop
ja
pusha
sub
inc
mov
mov
mov
mov
or
add
mov
sbb
lods
cmp
mov
insb
fidivrs
aam
xor
mov
shlb
or
mov
xchg
cltd
fwait
subl
sub
daa
ds
pop
iret
xchg
xchg
loopne
mov
scas
out
sahf
insb
or
out
in
jmp
loope
jns
call
sub
subl
cmpsb
mov
cs
xor
adc
xchg
jecxz
jp
gs
fsubrs
pop
cltd
cmp
pusha
scas
xor
mov
aad
insl
lahf
insb
mov
cwtl
cmpsb
adc
push
repnz
ret
cmp
sbbl
sbb
fs
mov
push
xchg
fwait
in
ret
sub
xchg
leave
arpl
sahf
jb
psrld
xor
lret
iret
dec
add
push
das
insl
movsl
adc
sub
jnp
and
pop
jnp
lock
jne
fwait
jp
inc
push
push
subb
inc
mov
cmp
int3
in
mov
xchg
sbb
cmpsl
leave
faddl
jg
mov
xchg
in
shlb
popl
cmc
push
ja
in
out
pop
mov
mov
cmp
mov
repz
and
movsl
add
lret
mov
std
lea
movsb
sahf
in
test
mov
jp
push
repnz
repnz
out
pusha
movsl
pop
fsubrl
cmpsb
aas
addl
adc
call
pop
sub
jne
or
int
cmc
or
out
sahf
movsl
sbbl
push
lret
jecxz
test
lods
andl
add
iret
fs
js
push
jmp
inc
lds
int3
pop
sbb
movsb
push
orb
cmp
data16
fsub
mov
xor
out
loope
sbb
bound
cmp
xor
dec
pushf
hlt
iret
or
lahf
ret
decb
mov
sahf
or
testl
mov
aam
adc
les
lcall
inc
mov
repz
in
inc
push
mov
rcr
lret
arpl
cmc
mov
insl
add
cmc
cltd
leave
fcompl
repnz
and
lret
mov
mov
xor
dec
test
imul
movsb
add
push
in
icebp
ret
jnp
aam
stos
and
cwtl
mov
pop
repz
mov
andl
popf
fiadds
es
int
sub
in
jb
or
lods
inc
pop
jnp
mov
nop
cmp
push
jmp
pop
pop
sbb
int3
adc
jne
clc
ds
push
jae
fdivs
jg
ret
lret
jp
call
loop
icebp
inc
cmp
xchg
add
mov
stos
outsl
nop
mov
repnz
jo
pusha
xorb
dec
mov
fucom
out
das
add
push
mov
ficoms
imul
repz
or
cmc
add
movsb
mov
push
int
ret
sbb
pop
inc
or
cs
fs
mov
dec
out
andb
pop
add
lret
adc
and
xchg
xorb
pop
xchg
lea
jp
cli
xor
cld
adc
lret
fcompl
adc
mov
hlt
mov
and
sti
xchg
iret
push
cs
mov
fldt
add
into
mov
imul
and
icebp
hlt
gs
outsb
push
in
call
dec
in
push
xorb
aas
mov
cs
lcall
mov
clc
stos
pmaddwd
sub
sub
xor
push
mov
rorb
jo
xor
movsb
incl
in
ss
xor
icebp
enter
jb
ss
rclb
or
fisubrl
xor
pop
cld
popa
std
mov
push
out
dec
and
fdivrs
ret
sbb
jle
xchg
or
inc
scas
test
jns
mov
or
pop
mov
xor
adc
inc
pushl
add
adc
push
out
out
std
gs
add
or
cmp
mov
mov
daa
push
sti
push
xor
movsb
jg
jl
scas
cli
cmp
pop
or
sbb
mov
addb
cmpsl
mov
push
nop
mov
add
in
hlt
mov
pusha
test
push
dec
dec
fiadds
xchg
cmp
jae
icebp
mov
insb
or
or
dec
fsts
xor
pop
stos
push
fbstp
std
pop
ss
out
addb
sti
sbb
pop
jge
pop
adc
stos
or
leave
movsb
xor
cwtl
in
mov
add
enter
sahf
arpl
add
cmp
mov
roll
mov
cwtl
bound
add
aam
lret
fs
hlt
cwtl
rep
movsl
push
shll
sbb
movsl
mov
lcall
cmp
adc
std
inc
pop
test
ficoms
cmpsb
xchg
cmp
add
call
test
sub
ja
clc
push
fistps
fmull
xchg
fsubp
in
adc
mov
add
xchg
cmp
addl
fists
out
add
cmpl
dec
xchg
incl
inc
icebp
out
out
imul
mov
stos
add
sbb
jnp
or
and
icebp
divl
pusha
mov
push
mov
sbb
les
push
int
pop
cmc
orb
mov
leave
sub
out
js
jecxz
in
es
test
pop
adc
cmp
jnp
es
push
or
loope
punpckldq
mov
cltd
mov
pop
adc
clc
jo
rolb
mov
int3
arpl
into
or
pop
ja
or
popa
jle
and
dec
add
mov
and
mov
rolb
lcall
out
cli
jae
xchg
mov
aas
jae
ret
cmp
loope
stos
shrb
cltd
or
daa
incb
mov
cmp
mov
cmc
lret
mov
sahf
ret
push
subb
pop
test
dec
inc
sti
dec
int
xlat
test
xor
test
mov
insl
out
lahf
sub
mov
xor
es
xchg
outsb
cmpsb
jno
push
ss
pop
mov
out
test
pop
movsb
mov
rolb
andb
jbe
push
adc
add
lds
or
fsubs
mov
add
push
cmp
sbb
les
and
mov
mov
mov
icebp
pusha
jne
mov
adc
sub
jl
rorb
lret
add
lret
jl
dec
dec
stos
outsb
pop
pop
loop
lock
push
mov
xchg
mov
jne
int3
xlat
or
mov
sbb
ret
and
outsl
inc
and
insl
sbb
je
jecxz
pop
jmp
pushl
test
shrl
sbb
lods
icebp
call
out
sbb
mov
jns
pop
mov
shrb
fistl
cmp
in
xor
mov
adc
or
lea
ret
xchg
fdivrl
dec
sbb
jne
push
mov
dec
jmp
xchg
and
lock
aad
pop
pop
out
or
sarl
arpl
jp
dec
or
popf
lcall
roll
pop
push
dec
addl
negb
and
adc
fsts
mov
mov
adc
test
bound
jle
adc
lds
adc
mov
pop
imul
insl
insb
lock
mov
shlb
rcll
mov
movsl
insl
inc
jno
or
test
mov
cmpsl
fsubrp
into
and
test
and
daa
mov
cltd
sbb
pop
shlb
les
xchg
filds
cs
ret
enter
je
or
mov
xor
fstp
mov
stos
mov
cwtl
pop
xchg
mov
call
insl
call
insl
pop
pusha
hlt
ds
hlt
inc
mov
cld
or
xor
mov
nop
dec
test
push
call
pop
inc
test
sarb
inc
inc
sbb
arpl
push
or
int
dec
aas
aad
aad
scas
dec
aas
les
ja
ficoms
fadd
in
movsl
and
xlat
and
mov
jb
fsubl
sarb
icebp
icebp
dec
mov
rorl
cld
aad
test
jge
jno
jne
mov
cmpsl
mov
in
stos
fwait
or
push
lea
xor
not
dec
pop
inc
xchg
mov
jnp
aam
repz
fists
cli
scas
jle
jae
leave
jl
xchg
stos
cmp
sub
mov
adc
xlat
mov
xchg
testl
adc
add
mov
push
ss
xchg
mov
adc
xchg
sbb
fsubr
sbb
cmpsl
pop
sub
data16
jae
cmpl
mov
ficomps
and
adc
mov
xor
hlt
shlb
and
pop
xor
push
xor
js
out
popa
leave
pop
aaa
loopne
mov
loop
jbe
pop
xchg
xor
adc
cwtl
inc
cs
loop
cmp
mov
lahf
pop
and
mov
aas
jl
cmp
loop
aas
pusha
mov
ret
and
movsb
xor
and
int3
sar
je
shll
in
rolb
jle
cmp
jl
inc
pop
shlb
mov
or
sti
xchg
insl
dec
push
cmp
pop
imul
sti
push
xor
sub
jmp
push
pop
popf
adc
push
shl
roll
stos
dec
lret
out
and
or
cmp
sbb
mov
jbe
out
mov
lahf
mov
and
loop
mov
pop
or
xlat
jg
aas
lea
ss
mov
jmp
push
dec
mov
mov
push
test
int
aas
cmc
shl
fcompl
sbb
pop
std
out
test
xchg
fld
adcb
adc
jnp
test
leave
cmp
inc
daa
out
ss
push
lods
inc
mov
pop
push
int3
ret
stos
leave
cmp
in
mov
push
je
or
pop
dec
sarl
jecxz
push
sub
xor
xor
cmp
fwait
dec
shll
mov
jb
sub
leave
sti
xchg
arpl
pop
adc
shlb
cltd
aas
cmp
into
les
sub
and
in
ljmp
sbb
cmpb
ja
and
cmp
adc
sub
and
fisubrl
pop
cmp
jnp
repz
mov
or
aaa
push
cmpb
and
out
lret
or
and
lret
push
stos
imul
cmp
xor
cmpsl
out
sbb
mov
or
cmpsl
scas
push
ss
sbb
jb
lcall
mov
cmp
les
push
ja
mov
or
pusha
add
mov
or
hlt
dec
cmp
fsub
jge
mov
jge
sbb
fldt
sub
push
mov
sbb
mov
push
xor
xchg
mov
jmp
mov
shll
push
add
or
inc
push
orl
sub
dec
je
add
mov
ficoms
popa
inc
scas
out
rorb
stos
test
jae
pop
lds
popa
xor
imul
aad
cmp
aaa
in
adc
sub
inc
es
idivb
clc
popf
test
jns
push
lahf
cmp
jnp
adc
rcll
inc
add
jle
in
mov
pop
int
sarb
mov
arpl
in
dec
jg
xchg
mov
and
cld
test
adc
out
clc
lahf
pusha
xchg
mov
lcall
sbb
popa
data16
mov
xchg
mov
call
adc
orl
jne
addr16
scas
push
roll
rcll
pop
int3
lock
scas
pop
mov
js
mov
int3
int3
push
daa
push
test
les
and
push
pop
fisubrl
scas
jno
and
mov
jp
jmp
pop
mov
cmpb
mov
sbb
out
sub
add
mov
xor
test
push
test
ret
jg
mov
or
lahf
sbb
mov
or
sub
shlb
out
scas
xor
jo
fistpl
pop
negb
mov
sahf
sub
dec
test
xchg
jnp
sbb
cmp
or
arpl
inc
cltd
pop
out
ljmp
adc
leave
pop
pop
jge
mov
push
xchg
loopne
jl
mov
das
xchg
pop
or
adc
lock
pop
mov
add
lcall
jne
jnp
lock
test
out
pop
xchg
dec
fldenv
mov
inc
scas
cli
rclb
push
sbb
ret
push
lods
jns
dec
aam
dec
jl
jne
loopne
stos
cmp
mov
ds
in
xchg
cmp
jle
mov
or
inc
pop
inc
sub
aam
out
ljmp
mov
mov
ja
loope
dec
std
in
icebp
fisubrs
aad
push
xor
aam
int
sub
pop
and
cmp
xor
xor
dec
daa
bound
xorl
movsb
shl
mov
pop
insl
stos
mov
sub
or
xchg
lea
xchg
sbb
mov
mov
aaa
xlat
es
rorl
push
pop
and
lods
nop
repnz
imul
stos
jmp
mov
adc
mov
xor
sub
xchg
xor
xchg
into
into
ss
inc
xchg
cmp
add
cmp
jle
xor
pushf
cmpsb
jp
mov
mov
js
jge
mov
cmp
mov
or
mov
fs
adc
dec
shrl
sub
sahf
int
pop
xchg
adc
in
adc
ficoml
lock
xchg
sbb
push
dec
test
imul
xchg
loop
pop
inc
mov
jmp
fidivs
adc
jbe
push
addr16
out
sbb
cmp
cmp
lahf
idiv
je
popl
sub
fnstsw
rolb
pop
fmuls
pop
insl
mov
and
adc
lahf
aad
jle
add
test
pop
aad
mov
or
pop
fwait
outsb
pop
jnp
xchg
popa
icebp
xor
xor
mov
mov
and
pop
xchg
inc
hlt
jns
enter
xchg
outsl
cwtl
cld
xchg
fisubl
jae
leave
lret
cs
bound
hlt
mov
dec
inc
cmp
mov
or
adc
mov
loope
jmp
fildll
loop
mov
xchg
mov
addb
xor
vcvttsd2si
lahf
and
mov
jmp
sub
call
adc
push
inc
std
jmp
xor
push
test
xchg
clc
popa
sbb
aas
call
inc
in
lret
addr16
inc
lods
test
or
subw
xchg
movsl
xchg
push
cltd
in
dec
scas
sbb
iret
popf
clc
lret
icebp
mov
jae
aas
int3
and
pop
adc
iret
dec
jae
icebp
xchg
cmp
inc
in
int3
mov
sbb
aad
sbb
popf
and
jle
cmp
add
push
aaa
jl
and
add
add
loop
push
lahf
or
pop
leave
jnp
movsb
mov
lahf
sbb
loop
dec
in
mov
sbb
mov
cs
subl
adc
cwtl
daa
pop
out
xor
inc
adc
pop
int
les
or
mov
pop
mov
cld
xor
aas
pop
xor
push
pop
sub
adc
xlat
and
push
dec
adc
sub
sub
inc
jmp
retw
rcrb
popl
pop
sbb
or
cltd
mov
sub
xchg
shll
in
mul
push
pop
pop
mov
in
push
mov
icebp
xchg
iret
mov
jmp
jno
push
adc
lcall
cmp
dec
jle
sbb
in
outsl
dec
adc
cmpsl
xor
out
xor
jp
ud1
cld
jnp
mov
mov
jecxz
cld
inc
dec
paddusw
cmp
inc
mov
inc
aas
aas
push
js
scas
xor
adc
push
sub
or
xchg
add
ret
in
test
repz
shlb
call
inc
xor
ja
inc
test
push
sub
and
xchg
lods
in
enter
xchg
dec
orl
lods
jp
xchg
push
aad
mov
cmpsl
mov
mul
sub
jmp
orb
mov
movsb
xor
mov
jl
aaa
test
mov
push
inc
cmc
aas
add
jb
mov
decb
jbe
mov
jnp
dec
hlt
or
sbb
outsl
mov
mov
insb
fucomi
outsl
mov
leave
cltd
mov
xchg
dec
add
inc
fmulp
enter
aas
inc
jbe
pop
int3
movd
sub
mov
push
cmpsl
out
jno
mov
sahf
adc
sub
push
sbb
pop
mov
pusha
not
jbe
mov
rcll
in
outsb
outsb
movsl
out
inc
xor
and
ret
cmp
and
mov
xor
mov
andb
fnstcw
fdivrl
jne
cltd
or
push
aas
ja
cmp
stos
add
push
dec
jo
xor
adc
icebp
inc
mov
push
xchg
std
shlb
inc
jmp
adc
insb
mov
cmp
js
jns
sub
push
dec
aad
jp
push
repz
shll
fs
adc
orps
jno
xor
sbb
mov
std
mov
rclb
push
adc
sbb
inc
leave
aas
in
cmp
lods
mov
ret
stos
push
pushl
push
popf
bound
xchg
sti
add
jmp
jne
adc
pop
push
mov
sti
movsl
jno
imul
ja
push
aaa
mov
push
imull
movsb
mov
rcll
cli
and
adc
fcmovnb
push
pop
sbb
or
mov
andb
and
dec
mov
xlat
es
mov
icebp
pushf
fldcw
cmp
in
xlat
dec
xchg
notb
sub
mov
mov
imul
je
sub
mov
leave
xchg
sub
adc
out
std
ljmp
test
inc
jnp
xchg
shll
push
jmp
out
pop
inc
xor
push
dec
adc
pop
mov
inc
shlb
movsl
in
jae
pop
and
lea
and
xlat
sbb
pop
sbb
sbb
lea
sub
lods
out
inc
imul
inc
fadd
push
repnz
mov
insl
or
cmc
cmp
sar
jmp
sti
pop
movsb
mov
or
pop
mov
dec
sub
inc
mov
popf
out
jge
push
and
adcl
ficoml
icebp
adc
test
cltd
adc
jecxz
popf
es
lret
sbb
cmp
cmpl
mov
into
adc
aam
jb
outsl
and
cli
testl
inc
out
orb
or
testb
subb
imul
rorl
adc
jmp
adc
add
aam
outsl
cmp
test
cli
inc
jbe
movsb
ret
lea
dec
adc
push
push
hlt
and
shrl
xchg
cmp
sub
nop
push
inc
pop
aad
adc
push
testl
xchg
xor
inc
xor
push
pop
imul
pop
mov
call
mov
loopne
and
xchg
mov
xchg
inc
in
leave
jmp
jbe
aas
in
and
ds
sbb
mov
mov
add
dec
and
pushf
jge
xchg
rolb
lods
xchg
adc
imul
xchg
ss
sub
and
test
lret
inc
pushf
dec
push
sbbb
and
int
mov
enter
roll
dec
mov
mov
xor
lcall
testl
add
push
push
leave
add
push
ret
arpl
je
or
ficompl
shlb
in
es
jmp
and
xor
ds
push
push
cmp
in
cmp
insb
mov
sub
int
xor
in
jae
sbb
xlat
pop
xchg
fsave
xor
mov
add
les
jle
lret
push
and
add
jp
push
mov
movsl
fistpl
pop
inc
cmp
mov
jmp
fwait
dec
push
mov
cs
xor
daa
stos
jns
or
stc
add
ss
jnp
push
das
aad
cmp
or
popa
js
cmpb
xchg
lods
clc
push
sbb
sub
shll
int3
hlt
ror
lods
dec
js
out
sub
fnstenv
rcrb
mov
cwtl
mov
lea
pop
mov
stos
jge
cmp
jae
pushl
mov
out
test
dec
idivl
pop
adc
aad
cs
or
pop
jno
or
aaa
stos
in
pop
xor
add
jne
push
sub
dec
outsl
xor
into
inc
sbb
fwait
sub
sub
ret
mov
aaa
pop
aam
das
rclb
out
cmp
out
cmp
fbstp
or
mov
adc
cmp
cltd
testb
sbb
mov
stos
jp
dec
outsl
lock
push
comiss
mov
filds
cmp
dec
into
fucom
in
mov
inc
and
fldcw
test
or
sub
ds
shll
dec
out
or
jg
jl
jae
xchg
out
xor
je
inc
out
gs
movsb
pop
stos
cmpsl
cmc
andb
test
jmp
loop
jp
shl
and
adc
adc
cltd
pop
pop
in
popl
dec
stos
cwtl
xor
pop
lahf
xchg
jmp
sti
dec
mov
sarl
es
rcrl
adc
pop
rorb
pop
or
sbb
ror
mov
adc
outsl
push
push
call
dec
push
cwtl
inc
into
fsubl
jg
mov
xor
push
std
ja
jo
sbb
xor
and
adc
daa
in
jg
cmp
scas
inc
ljmp
mov
lret
imulb
cmp
cli
sub
mov
push
fwait
lods
aaa
xlat
fnstcw
and
mov
xchg
inc
data16
dec
push
jge
lock
add
sbb
sub
pop
mov
xor
xor
loop
movsl
mov
bound
cmp
cmp
jo
dec
sub
movsb
ret
stos
push
sub
jmp
jle
xor
lret
mov
imul
je
sub
sti
jmp
fdiv
stc
les
cli
mov
imul
rclb
jns
dec
movsb
xchg
orb
xchg
sub
mov
fldt
cmp
jl
pusha
mov
dec
loopne
mov
dec
das
xor
pop
pop
adc
pop
fisubs
lock
or
pushf
xor
xor
scas
xchg
fdivrs
pop
shll
insb
pop
dec
aas
fldenv
cmp
cwtl
and
sbb
sahf
lahf
mov
mov
sub
mulb
data16
enter
mov
or
lock
and
mov
dec
sub
push
mov
out
daa
nop
lret
dec
jno
mov
cld
lods
cmp
loopne
adc
push
xchg
mov
inc
fs
and
inc
lahf
mov
jmp
cli
test
leave
sbb
jge
fiadds
pop
pop
adcb
jno
pop
push
lods
mov
popa
int
cltd
push
inc
mov
xchg
cmp
lds
lahf
dec
adc
shrl
sbb
fisttpll
sub
jns
ljmp
cwtl
mov
bound
lock
push
dec
sbb
push
mov
notb
xchg
fincstp
mov
out
ljmp
aaa
pushf
jp
test
xchg
jecxz
push
shrb
jle
shrb
cld
sti
add
imul
clc
ret
jecxz,pn
ret
fwait
and
sbb
fisubl
xchg
xorb
sub
push
mov
and
jb
adc
mulb
sub
aad
sbb
mov
test
jp
rcrb
jbe
ffree
cwtl
fisubs
pop
mov
cmp
push
xchg
leave
je
mov
adc
lcall
pop
xchg
in
push
sbb
ss
jg
mov
xchg
lahf
test
lcall
lret
sub
dec
dec
inc
dec
shrb
lock
and
movsb
sub
fmul
sub
cltd
out
clc
adc
mov
in
add
insb
adc
popa
lock
scas
lods
in
jb
xlat
jbe
push
xchg
jge
fs
js
sti
pop
ds
inc
mov
pusha
jle
xchg
push
out
icebp
pop
xor
xchg
mov
je
and
push
int3
xchg
or
xlat
aas
mov
cmpsl
push
lock
add
into
sbb
cmp
pop
mov
mov
xor
aaa
out
dec
pop
rolb
cwtl
push
lods
bound
xlat
mov
mov
rorl
dec
fwait
test
jbe
adc
jecxz
cmpl
stc
js
or
test
test
rcll
orl
pusha
loop
nop
leave
push
and
outsb
stc
sti
popa
lds
addr16
sbb
cmp
jl
xor
js
jecxz
push
ss
xchg
movsl
testl
inc
xchg
out
dec
rclb
add
clc
adc
incb
movsl
lcall
mov
cmp
mov
xchg
pop
fidivrl
cmp
sbb
adc
fildll
fdivrs
pusha
jl
cmpsb
lret
data16
pop
jns
jne
sbb
stc
xchg
pushf
mov
xlat
imul
add
mov
popf
push
test
movsl
fwait
push
fstpt
loop
mov
pop
mov
lea
inc
enter
loopne
ss
sbb
stos
loopne
pop
lret
lods
and
pop
mov
rcll
ret
jno
mov
lret
push
mov
xor
gs
cmp
xchg
lret
inc
stc
sub
push
adc
pop
std
test
adc
cltd
mov
outsl
stc
fadds
dec
push
add
pushf
mov
push
adcb
rcr
jge
or
xor
icebp
test
pushf
push
cmp
push
lea
andps
loop
sub
push
pop
cmpsl
dec
loopne
mov
dec
out
inc
xchg
ss
mov
push
jb
call
pop
push
gs
mov
hlt
mov
into
je
adc
orl
mov
pop
push
clc
jno
xor
addb
in
negb
sub
in
leave
xchg
mov
cmpsl
mov
dec
pusha
mov
loopne
das
and
icebp
stc
outsb
data16
xchg
repz
xchg
pop
pop
and
jge
fldl2e
int3
mov
inc
or
test
adc
cmpsl
scas
push
mov
xor
hlt
sbb
bound
jle
inc
mov
stos
roll
addr16
add
leave
sub
test
sbb
test
call
fidivrl
mov
jg
sbb
inc
lods
jb
jb
xchg
test
pop
arpl
dec
popf
in
mov
pop
out
and
movsb
push
sub
push
imul
fistpll
cmp
daa
es
sub
lds
cmp
pop
loop
fsts
bound
or
lods
push
add
cmp
adc
stos
ljmp
movb
cmp
inc
ja
or
mov
int3
repnz
lret
lea
das
xor
xchg
stc
push
js
dec
stos
lret
sub
ds
push
xchg
repnz
xchg
aad
mov
inc
or
fcoms
mov
iret
sub
xchg
arpl
movsl
xchg
inc
and
mov
mov
jae
shrb
fistps
sub
add
shlb
mov
mov
into
fistl
and
out
idivl
sbb
add
data16
push
xorl
fistpll
mov
pop
icebp
call
arpl
in
movsl
cli
xor
incb
cmpsl
adc
cs
divb
arpl
sarb
mov
xchg
adc
jns
mov
mov
xor
jg
gs
loopne
mov
clc
movsb
push
lcall
mov
adc
jne
adc
imul
xchg
and
cmp
xchg
adc
inc
cltd
pop
add
xorl
inc
sti
scas
enter
adc
stos
xor
imul
add
aam
xchg
mov
cmp
stos
cmp
imul
cltd
pusha
data16
jecxz
pop
adc
and
or
adc
pusha
js
cs
insl
repnz
mov
and
mov
mov
push
enter
push
outsb
lds
addr16
or
push
mov
xchg
push
aam
adc
daa
mov
lods
popa
dec
dec
lea
rcll
fdivl
mov
push
mov
jne
sti
shrl
stos
out
xor
push
aad
shrb
icebp
fnstcw
and
or
mov
hlt
pusha
mov
mov
dec
push
push
test
pop
cltd
repz
arpl
into
xchg
inc
test
bound
daa
dec
imul
cmpsl
mov
sub
cld
mov
or
jno
add
or
insb
call
xlat
lock
divb
pop
jp
std
test
stos
bound
pop
popf
sbb
xchg
shl
dec
inc
adc
test
dec
cld
pop
and
xor
mov
in
imul
ljmp
mov
push
cld
lods
jnp
pop
mov
lret
insl
lods
cld
es
xor
jbe
and
inc
xchg
xchg
nop
popa
push
jbe
addr16
mov
xrelease
xor
mov
or
jnp
push
xchg
lret
mov
les
cli
add
loope
ret
sub
ljmp
xchg
outsl
outsl
adcl
fldenv
mov
sarb
or
sub
jbe
in
lods
addr16
ljmp
adc
sbb
mov
ficoms
movsl
outsb
test
ss
pushf
loope
mov
cmp
or
mov
cli
ss
dec
loopne
lock
punpcklwd
cmpsl
mov
inc
or
lret
clc
mov
xchg
je
push
and
leave
fsts
mov
jae
les
in
cmpsl
sar
jns
fnstenv
pop
push
hlt
adc
mov
lret
adc
int
imul
das
sbb
sahf
stos
jp,pn
cmp
add
lcall
cmc
pop
sub
sbb
movsl
push
inc
icebp
call
outsb
leave
add
push
popf
fdivrl
add
fwait
and
imul
mov
dec
out
pusha
dec
clc
icebp
je
xorl
sub
ljmp
sub
aaa
pop
xchg
shll
pusha
mov
xor
cmp
clc
loope
pop
out
cmp
rolb
stos
xchg
jg
lods
adc
inc
add
andw
jo
cwtl
jmp
cli
ja
push
out
mov
lea
lock
int3
push
inc
sbb
and
pushf
popa
hlt
pop
out
sahf
in
out
pop
cmp
insl
push
scas
or
pop
or
inc
lret
jmp
lret
test
dec
lods
lea
std
push
mov
pop
aas
jb
jmp
push
adc
sbb
inc
repnz
xor
xchg
sbb
xchg
outsb
fisttps
inc
addr16
ss
jno
shr
pushl
xor
lock
push
mov
mov
ss
or
lock
sub
outsb
rcrb
fdivs
andb
jne
sbb
mov
xchg
xchg
jbe
mov
mov
dec
xorb
lahf
adc
out
sbb
mov
pop
mov
aam
lcall
pop
jle
cmpl
sbbl
lods
pop
hlt
cmp
sub
xor
xor
jge
cmc
lock
mov
push
xchg
jl
cmc
je
lock
jmp
sbb
orb
lds
adc
int3
test
pop
pslld
jb
or
push
jo
aam
add
pop
iret
jae
jne
jecxz
pop
and
ja
aad
in
adc
insl
lea
sbb
lea
adc
mov
out
lahf
or
mov
je
ds
pop
or
xor
aam
aaa
mov
mov
ja
sti
push
inc
sub
xor
stos
popf
cmp
push
loop
lea
sbb
fistpl
pop
jo
add
aaa
dec
dec
mov
enter
jp
divb
jl
int3
jmp
je
sti
icebp
push
je
xchg
jae
push
or
int3
pop
jb
ficoms
fsub
out
clc
int
mov
dec
mov
jp
pusha
lahf
enter
push
dec
or
mov
mov
sub
xchg
mov
lds
sahf
mov
cmp
insb
jg
je
lds
and
mov
rclb
hlt
sub
push
add
ljmp
push
insl
fs
adc
nop
push
in
push
test
and
mov
dec
mov
ret
icebp
aad
jge
inc
movb
adc
mov
inc
and
lret
rcll
fwait
movsb
jnp
push
andb
lds
dec
repnz
lock
pop
das
add
and
loopne
xchg
roll
push
cmp
sahf
mov
cltd
mov
fsubr
imul
sub
xor
shlb
mov
loope
repz
aad
in
push
test
dec
ja
aad
andl
dec
fidivrl
or
pop
mov
popf
and
ret
out
xor
pop
jp
fsubr
xchg
in
fiaddl
pop
dec
iret
and
cmpb
pop
mov
pop
jmp
cltd
jo
lock
jno
dec
mov
sbb
pop
xchg
xchg
lret
scas
out
adcb
push
mov
sub
les
xlat
add
xlat
loop
dec
ds
ss
adc
ja
push
add
andl
cwtl
sub
cmp
lds
mov
repz
subb
dec
in
add
and
lock
roll
cmc
xor
jle
ja
popf
insl
mov
mov
or
or
adc
imul
sbb
or
loopne
push
xor
das
hlt
or
bound
xor
jecxz
vpmacsdqh
mov
jb
push
jne
cli
shll
scas
rolb
dec
icebp
cmpsb
sarb
push
pminsw
mov
xchg
jg
pusha
mov
push
xor
lods
add
lahf
dec
pop
pop
cmpsl
or
pop
lcall
adc
stos
pop
pop
mov
ret
fdiv
mov
jnp
mov
das
inc
pop
mov
lods
mov
add
inc
mov
xor
push
inc
gs
xor
sub
sbb
mov
mov
icebp
decl
hlt
mov
scas
pop
dec
and
and
rolb
xchg
pop
add
ficoml
cmpl
and
dec
inc
dec
sbb
cmpsb
push
mov
loop
pop
arpl
push
and
dec
and
dec
lea
mov
rolb
jecxz
notb
jns
cmc
mov
sahf
add
mov
jo
cli
pop
repz
sbb
shrb
mov
and
jl
and
adc
jae
rcll
inc
sub
xchg
imul
adc
cld
lock
or
sahf
pop
cmp
into
enter
dec
das
scas
out
jae
jle
adc
cmp
mov
inc
ljmp
outsl
shl
into
arpl
cld
fcom
xor
out
lea
jns
fwait
out
add
ja,pt
std
fildll
cmp
jne
xchg
sbb
and
mov
jecxz
out
cmp
iret
dec
lahf
loope
jne
push
negl
mov
pop
fmul
mov
push
ret
jl
jno
add
xchg
ficoms
xchg
loope
xor
aam
mov
mov
lcall
push
xchg
stos
mov
fidivrs
mov
mov
std
add
sub
cltd
popa
add
stos
nop
insb
add
insl
decb
add
call
daa
xchg
jnp
lods
call
xor
sbb
jne
jns
and
adc
sub
sub
in
gs
nop
adc
cmpsb
pop
and
leave
jb
xchg
mov
xor
mov
insb
push
in
in
ror
test
push
cmc
insb
push
sub
and
xchg
jb
lret
mov
xor
push
sti
cmp
ret
movsb
inc
arpl
push
inc
dec
cmp
cmp
push
adc
hlt
sub
jle
insl
sub
sbb
jmp
push
inc
pop
out
flds
fdivrs
pop
pop
je
dec
xchg
fcomp
lds
cmpb
fwait
jecxz,pt
mov
rclb
sub
paddsw
dec
xchg
ljmp
inc
fsubrs
jo
fucom
mov
mov
adc
sar
pop
xorb
xchg
or
xchg
sbbl
nop
hlt
stos
daa
cltd
jle
lahf
pop
add
mov
cmp
mov
add
pop
movsl
bound
xchg
cmpsl
jb
or
push
out
cmp
pop
push
lret
jecxz
movsb
xchg
fcompl
pop
mov
push
ficompl
add
sti
push
mov
push
inc
mov
cmpsb
mov
pop
stc
mov
mov
xchg
jne
xacquire
jle
add
ret
mov
inc
ret
out
or
out
jmp
push
pop
sub
cmp
ljmp
cs
repnz
jno
or
shlb
scas
push
push
adcl
xchg
aaa
ljmp
mov
mov
add
inc
sbb
dec
fcmovb
repnz
pop
cmp
call
icebp
xorb
cmp
and
rcl
rcrb
mov
sbb
divb
ret
out
or
mov
cmp
xchg
inc
fisubs
mov
push
adc
std
out
inc
jbe
je
mull
cmp
and
enter
mov
push
jns
xchg
sbb
je
adc
dec
mov
imul
sbb
xchg
enter
inc
inc
sub
arpl
jb
cmp
mov
inc
pop
pop
arpl
mov
fs
out
mov
push
das
and
mov
xchg
lods
add
cmp
in
or
iret
lods
and
enter
addr16
pop
in
stos
movb
push
mov
in
add
jno
stos
or
leave
pushf
movb
xchg
cmp
cs
nop
mov
push
mov
clc
sub
add
push
cmp
fdivr
pop
loop
jmp
cli
mov
repz
inc
or
fisubl
cmp
add
lds
push
test
loop
add
fisubrl
pushf
ja
xor
and
sahf
sbb
cmpl
mov
inc
cmp
rcrl
sub
jle
mov
ss
mov
in
into
xor
add
insb
jmp
adc
mov
or
shll
ds
adc
xor
or
add
mov
sub
push
call
out
int
es
cmpsl
mov
xchg
cmpl
lock
js
sbb
or
cvtpi2ps
mov
cli
fdivl
mov
cmpsl
mov
or
ficoml
mov
push
mov
mov
subl
adc
bound
mov
and
icebp
stos
add
inc
std
fnsave
repz
out
sahf
adc
or
cltd
aam
adc
cmp
push
dec
in
scas
int3
scas
xor
ljmp
inc
xor
fsubs
es
xchg
fdivrl
sub
ljmp
sub
mov
mov
out
outsl
stos
popw
add
ss
hlt
std
aad
outsl
aaa
jae
adc
mov
xchg
dec
fisttpll
cmp
les
xchg
pop
jnp
sbb
xchg
and
aas
push
sub
ds
stc
mov
dec
cmp
adc
pop
xchg
pop
rorl
shl
pslld
daa
mov
sub
mov
imul
dec
call
mov
js
sbb
mov
lods
mov
xchg
sbb
movsb
out
mov
xchg
insb
pop
mov
dec
dec
push
js
adc
mov
xchg
pop
addl
push
dec
sahf
pop
adc
jnp
sub
mov
in
loop
call
lods
cli
fwait
scas
dec
inc
sbb
scas
cmp
icebp
in
cmpb
dec
inc
imul
push
dec
pop
mov
cld
jae
movsl
push
push
pusha
pop
dec
mov
test
loopne
lcall
pop
int3
push
cltd
lcall
dec
mov
fcom
mov
push
popf
sbb
push
scas
rorb
sub
mov
cmp
and
ret
addb
pop
in
lret
notb
mov
mov
push
testl
dec
xchg
in
enter
jmp
adc
fdivrl
loopne
push
mov
cmp
push
dec
or
icebp
push
cli
in
add
ds
adc
push
int
in
scas
mov
jge
fdivs
and
popf
mov
repnz
dec
push
loop
xchg
sub
pop
not
cmp
jo
cmovg
movsl
imul
pop
das
xchg
aad
outsb
lock
mov
jmp
mov
sbb
mov
push
dec
insb
fucomip
and
in
pop
push
negb
or
xchg
mov
sbb
outsb
lods
out
fbstp
lock
stos
or
mov
adc
in
rcll
aam
mov
jp
sti
jnp
ja
into
lcall
dec
jl
out
addl
bound
xlat
mov
fwait
stc
arpl
adc
rol
andb
add
insl
push
adc
icebp
push
and
aaa
fstpl
jl
imul
into
cmpsl
pop
test
push
popa
mov
shrl
gs
fwait
int3
cmp
lods
dec
dec
es
daa
cmp
mov
jno
push
add
dec
mov
rorl
sub
jge
dec
lcall
movsb
xor
add
mov
mov
orb
mov
add
inc
add
push
and
lret
add
adc
das
cmc
movb
xchg
push
pop
int3
pushl
mov
push
out
ret
dec
xchg
std
jecxz
sub
je
and
cmpsb
imul
mov
fcmovnu
cwtl
das
fisttpll
fyl2xp1
pushf
sbb
ljmp
in
rolb
push
cmp
loopne
and
gs
ja
mov
add
jg
adc
arpl
cmc
ja
data16
dec
lods
and
dec
mov
add
push
cmp
cmp
push
sub
mov
insl
adc
jnp
aas
imul
lock
add
jb
lods
adc
push
cmp
fisttpl
loope
cmpsb
ja
loop
jmp
sub
lea
fmull
stc
sub
dec
in
mov
add
jg
scas
jo
lds
stc
xorb
jp
shr
jo
jp
pusha
xchg
fdivr
fs
add
xchg
jmp
push
in
movsl
test
insb
test
inc
mov
jmp
jne
inc
cwtl
and
push
and
mov
jge
xor
and
push
or
push
std
lods
jg
sub
xchg
sbb
in
jno
cmp
xchg
push
xchg
enter
sub
insl
mov
xchg
mov
rorb
pop
and
out
nop
sbbl
xor
stos
pop
sbb
pop
xlat
cmp
inc
pop
ljmp
xor
cmp
movsl
xlat
dec
pop
pop
cmp
pop
mov
andl
mov
push
arpl
sahf
jecxz
push
jg
mov
fsubrl
in
std
mulb
xchg
cmp
push
jns
ja
in
mov
pop
mov
pop
add
out
push
test
sbb
push
jmp
ret
divb
aas
xor
aaa
mov
adc
sbb
das
mov
add
mov
adc
fists
mov
jecxz
xlat
adc
xor
push
jecxz
inc
aam
fistpl
lods
or
roll
out
pop
jns
push
push
std
sar
movsw
call
jle
push
hlt
hlt
ja
aam
fs
sub
in
and
adc
xor
mov
fisubrs
addb
es
sbb
bound
shrl
or
in
jnp
dec
int
das
pop
inc
mov
cs
add
les
stos
lods
xor
sbb
cmp
push
jo
and
bound
jbe
jbe
call
adc
mov
std
push
pop
push
jg
push
mov
arpl
outsl
out
adc
push
pop
and
cmp
repnz
jmp
mov
loopne
sub
and
mov
mov
insb
sar
adc
fiaddl
xchg
mov
jg
pop
mov
sub
repnz
dec
push
xor
mov
ret
loop
push
hlt
pusha
les
in
fnstsw
jnp
cmp
movsb
mov
mov
dec
add
add
pop
cs
sbb
loop
frstor
mov
jbe
test
out
mov
adc
lods
inc
jmp
sbb
pop
inc
xor
cmc
jge
or
adc
les
mov
movsl
insb
stos
adc
scas
pop
inc
lods
mov
inc
lret
or
pop
mov
pop
daa
call
pusha
mov
ficomps
fs
incl
jmp
sub
mov
inc
push
mov
repz
mov
lea
sbbl
push
xor
je
xchg
popf
xor
test
shll
nop
test
xor
je
cld
adc
fcmovne
xor
das
aaa
sbb
add
lods
or
pop
mov
xchg
mov
inc
repz
outsl
popa
push
repz
adc
or
into
dec
xchg
into
cmpsb
jbe
mov
xchg
sub
fucomp
mov
mov
popa
scas
dec
cmp
jb
dec
or
jne
or
push
les
xchg
mov
push
out
out
lcall
mov
cwtl
aas
mov
pop
jp
mov
dec
or
jns
xchg
fcoms
std
inc
loop
loopne
cli
inc
xor
lahf
push
loopne
add
sbb
scas
mov
ffreep
in
repnz
adc
fwait
aam
sbb
pop
jns
aad
or
sbb
push
mov
add
push
xor
movsl
and
into
fstpl
test
mov
lds
jno
out
aam
loopne
adc
daa
loop
clc
push
mov
mov
stos
aam
sbb
or
sbb
out
pushf
rclb
outsl
cmp
adc
jle
mov
push
mov
jb
ficoml
mov
push
fisttpl
mov
pop
icebp
mov
jb
add
adc
sar
push
int3
mov
mov
inc
mov
cmp
cltd
cwtl
loopne
mov
cltd
packssdw
mov
lea
mov
scas
push
push
push
xor
arpl
mov
addr16
pop
inc
loopne
pop
sbb
mov
and
jp
xlat
adc
lea
lcall
cmp
add
jge
mov
in
xchg
std
rcll
sub
lods
xor
repnz
stc
mov
insl
pop
rorl
xor
adc
out
fnstcw
sub
sbb
and
add
nop
push
out
and
mov
es
jge,pt
sub
cld
sbb
xchg
decb
aad
and
mov
nop
sub
xor
xor
icebp
test
lahf
dec
inc
ret
out
mov
jae
pop
xchg
out
into
push
rcrb
xchg
movsb
ds
loopne
pop
cltd
je
and
arpl
xor
mov
icebp
out
push
nop
icebp
in
jmp
lods
jo
loop
cwtl
lahf
or
daa
mov
out
adc
sbb
cltd
mov
iret
mov
push
add
js
add
das
and
sahf
or
aam
sub
cmp
mulb
inc
or
in
fldt
push
fisttpll
adc
fcoml
cld
pop
mov
bound
and
rcll
xchg
jle
xor
inc
je
fcoms
push
mov
adc
jb
inc
jns
jb
xchg
or
push
or
in
lcall
sub
xchg
cmp
mov
cld
adc
sbb
clc
enter
mov
dec
shll
mov
cmp
lcall
and
cmp
jg
xor
sbb
bound
pop
fiaddl
sbb
xchg
add
push
cs
mov
push
xchg
adc
push
jns
pop
mov
in
xor
fsubrl
adc
xchg
ss
lds
call
mov
and
mov
push
ds
add
lret
xor
and
and
jecxz
shr
jo
xchg
lock
cmpsb
popa
xor
pop
lret
push
loopne
loop
andl
sarb
pop
call
lcall
pop
pop
mov
mov
rorl
sbb
jnp,pt
out
xor
add
cs
imul
jp
fisubl
or
xchg
out
pop
push
scas
pop
adc
lret
add
ficomps
push
aad
std
cs
and
push
subb
pop
loop
mov
cld
and
loope
out
pop
mov
add
and
imul
sbb
pop
sub
jp
adc
pop
fs
movsb
lds
jmp
or
hlt
call
sub
or
scas
rolb
arpl
xor
cmc
fstl
xor
mov
movsb
sub
decl
vmwrite
cmp
shll
jnp
scas
jmp
sbb
lret
add
bound
mov
adc
or
clc
pop
int3
fistpl
int3
mov
sub
cwtl
subb
xchg
mov
push
clc
jo
clc
aas
in
cmp
pop
idivl
adc
mull
push
adc
push
test
ljmp
popf
icebp
or
leave
xor
into
inc
fsubrs
cwtl
push
mov
sbb
push
pushf
push
jg
repz
popf
dec
out
push
insb
test
push
sbb
shl
or
push
sbb
fcoms
leave
stos
lcall
or
fildl
in
ret
cmp
and
sub
mov
mov
jle
sbb
xchg
sub
or
mov
sahf
mov
daa
xchg
mov
push
add
jns
js
ss
adc
dec
popf
push
sbb
sub
addb
cmpl
jbe
sbb
inc
fistpll
jp
add
xchg
stc
cmp
or
jne
iret
scas
aaa
sti
pushf
or
pop
jnp
mov
dec
bound
scas
std
into
mov
popa
sbb
mov
js
imul
lods
jo
sbb
sar
dec
test
pop
xor
adc
and
xchg
push
jl
jnp
hlt
insl
push
out
jecxz
int3
sbb
test
pop
and
int3
or
push
xor
xor
cld
pop
mov
add
mov
fwait
pop
or
int
inc
cmpb
push
push
inc
mov
mov
insb
and
pop
clc
dec
loope
std
sbb
dec
cltd
nop
andl
xor
pop
xor
lret
les
fmull
les
aas
adc
cmp
in
lds
push
jbe
pop
repz
mov
test
xor
out
sub
mull
and
ret
cwtl
add
int3
mov
testl
shl
jecxz
dec
xchg
push
or
jg
rclb
push
mov
cmp
leave
lret
push
popf
lahf
jp
sbb
outsl
add
pop
test
das
and
pop
pusha
xor
mov
dec
jp
nopl
and
shlb
shlb
add
aaa
inc
in
adc
testl
xorb
lahf
xchg
adc
adc
cltd
jnp
or
cmp
leave
hlt
test
sti
insb
rcr
dec
pop
ficoms
jmp
jbe
sbb
inc
adc
mov
push
lods
pop
outsb
int3
insl
int3
mov
mov
fdivl
add
mov
scas
adc
dec
mov
cltd
movsb
or
imul
fstpt
push
int3
insw
xor
mov
pop
dec
jle
push
add
mov
sahf
jnp
ret
dec
aad
xor
dec
pop
sub
push
std
adc
fdivs
jle
mov
dec
divb
xor
test
push
std
or
js
sti
arpl
into
mov
jns
pushw
pop
aaa
stos
shr
jne
mov
pusha
sbb
push
dec
and
xchg
cmc
sbb
scas
data16
int3
lret
test
adc
lock
lret
sub
add
sbb
cmpl
inc
jecxz
mov
xchg
push
xchg
dec
push
adc
hlt
mov
cmp
pop
xor
test
aas
lcall
movsl
je
je
fldcw
mov
ret
jae
mov
das
popf
addr16
cmp
jmp
mov
jmp
rclb
dec
leave
jns
aas
adc
and
neg
cmc
outsl
inc
call
dec
sbb
adc
dec
lods
push
lret
xchg
bound
std
js
pushf
in
and
push
pushf
aam
stos
repnz
push
sub
xchg
fst
dec
mov
pop
sub
add
repz
inc
aaa
das
in
pusha
fnstenv
mov
lock
inc
js
push
mov
leave
ds
stos
mov
inc
fwait
lea
sbb
sub
std
cmp
int3
ja
push
es
mov
scas
int3
push
fisubrs
scas
orb
stc
int
aam
imul
mov
or
out
pop
out
mov
mov
dec
push
test
push
sub
push
addr16
jle
cmp
dec
jmp
rol
adc
fs
stc
push
xor
xchg
xchg
lret
cmc
ret
sbb
sbb
jg
xchg
sub
es
and
mov
sbb
popa
mov
ljmp
sbb
mov
pop
das
sub
cmpsb
cmp
mov
sti
mov
loopne
dec
in
and
pop
int3
fmull
pop
mov
loope
xor
sbb
repz
mov
roll
sub
cs
add
dec
jo
out
jl
bound
sub
test
inc
lret
pop
and
notl
enter
idiv
hlt
add
xor
idivl
cmpl
xor
lcall
mov
push
repz
lahf
insl
dec
fidivs
jge
push
aad
pop
imul
dec
leave
cld
add
jle
cltd
cmp
jecxz
adc
xor
in
incl
sarb
sub
mov
dec
sbb
sub
jo
pop
lds
and
loop
jnp
pop
sub
pop
iret
and
cld
mov
cmova
xlat
jne
push
mov
repz
sbb
sbb
sbb
into
mov
imul
sahf
es
fistpll
cwtl
or
lret
xchg
fisttps
adc
icebp
lock
mov
cmp
loop
cmpl
add
jg
inc
xor
scas
pop
sbb
mov
or
call
cs
repz
pop
stos
adc
fidivrl
dec
mov
gs
jg
cmpsb
sar
xor
data16
sub
and
clc
xlat
int3
mov
inc
cmp
xchg
out
pop
movsb
sarb
adc
sahf
and
test
xchg
jne
xchg
adc
fbld
insl
pop
pop
ds
adc
cmp
arpl
mov
sahf
testb
sub
sahf
jae
xchg
mov
enter
insb
mov
cmc
or
ret
std
xor
js
or
adc
out
pop
and
or
xchg
adc
jecxz
icebp
fwait
cmp
lahf
cmp
or
adc
mov
out
xchg
out
or
jmp
add
jb
ds
mov
add
clc
daa
lods
sahf
sub
push
or
jecxz
add
sub
xlat
xchg
cmp
pop
iret
jge
insb
jo
iret
int
dec
stos
inc
inc
dec
mov
xor
or
ss
mov
pop
mov
jp
adc
mov
mov
test
int
cmp
sbb
xor
xchg
fisubl
pop
dec
mov
xor
jns
or
in
inc
ds
subb
adc
inc
fldl
push
xchg
mov
or
xor
push
loopne
pop
test
out
add
xor
cli
sub
pushl
pusha
or
pop
rolb
subl
cmp
lods
testl
lret
sar
icebp
sub
xor
jnp
xor
sbb
sbb
sti
imul
mov
cmc
test
daa
dec
int
lea
xchg
sarl
mov
out
mov
stc
test
stos
pop
lret
dec
outsl
ret
insb
enter
into
sbb
sub
std
mov
cmp
or
pop
test
xor
popf
pop
lods
adc
push
mov
or
jg
adc
mov
adc
mov
icebp
push
fiaddl
and
je
mov
je
mov
cld
fs
stos
add
daa
cmp
inc
mov
das
cmpsb
cmp
cmp
sbb
psraw
in
push
push
stos
cmp
mov
pop
scas
aad
movsl
lret
scas
adc
clc
das
mov
jp
les
fistps
dec
stos
lahf
pusha
adc
cld
ja
je
out
mov
push
fistps
adc
ljmp
insb
and
sti
mov
xor
scas
es
mov
mov
mov
fnstsw
lock
dec
insb
ss
push
jo
into
ret
fldcw
and
sub
dec
scas
pusha
sbbb
aas
bound
pop
pop
sti
leave
movups
jge
lea
cmp
mov
out
mov
inc
lds
mov
stc
ja
jae
xorl
leave
dec
std
mov
xchg
xchg
pop
les
test
ljmp
pusha
jge
mov
push
jmp
enter
sbb
test
xchg
mov
mov
jecxz
push
bound
ljmp
in
movsb
sbb
lea
xchg
pop
stos
cmp
and
cld
push
insb
push
fldl
cmp
push
push
lret
stc
and
xchg
in
inc
decl
stc
adc
jecxz
dec
mov
ficomps
mov
cmpsl
dec
cmc
adc
repz
xor
and
leave
les
xchg
cmpsb
adc
lods
gs
lcall
mov
lret
or
mov
js
in
mov
fwait
mov
and
enter
fwait
dec
or
arpl
lods
cmpsb
pop
stos
xchg
or
push
inc
mov
fucomip
ss
xchg
insb
xorb
add
das
sahf
dec
dec
insb
and
outsl
clc
mov
fucom
cmc
ss
adc
sbb
adc
jae
lret
adc
add
dec
rcll
mov
repnz
fnsave
cmp
mov
ljmp
add
imul
clc
jo
jo
cmpsb
mov
dec
mov
call
mov
sbb
or
out
jp
sbb
cmp
aam
push
add
js
enter
rcr
imul
mov
fcompl
mov
lds
add
dec
stc
sbb
imul
push
push
fildl
pop
mov
mov
and
adc
stos
push
addb
ja
pop
fstpt
outsl
scas
or
outsl
es
leave
sub
and
adc
test
jge
daa
lret
inc
pop
cmp
mov
mov
push
mov
ror
mov
pop
repnz
mov
push
std
pop
jno
push
sti
insb
insl
pop
testl
inc
inc
movsl
cltd
mov
mov
in
cs
jmp
inc
cmp
xor
fwait
mov
rcrl
push
push
xor
xor
add
mov
out
sub
mov
jb
pusha
rcrl
loope
adc
push
stc
addb
ret
aam
imul
rorl
ret
out
inc
mov
push
pop
stc
fcoml
xor
shrb
popa
mov
or
in
sub
push
jge
jp
gs
mov
jmp
gs
js
ficomps
cmpsl
fsin
pushf
add
or
rcrb
mov
cmp
sub
or
lcall
push
cmpsb
lock
sti
mov
jg
mov
insb
pop
bound
cmp
xchg
mov
pop
and
cli
in
dec
and
xchg
dec
push
subl
inc
jmp
jge
push
mov
cltd
cmp
pop
outsb
lds
subl
aaa
les
mov
mov
loop
jl
rclb
std
jle,pn
cmp
push
push
mov
fs
push
and
sub
jbe
out
out
pop
push
lods
out
stos
mov
and
out
ror
or
int
arpl
lret
sbb
pop
fwait
jecxz
push
sub
push
lea
and
jnp
js
and
out
push
push
rclb
cmp
cltd
jns
or
mov
jbe
mov
xor
jp
adc
cmpsb
fs
into
jl
idivl
push
sub
sub
aam
sub
or
jno
cs
mov
jo
lret
push
dec
xchg
insl
test
mov
push
pop
ret
jno
jne
jg
aaa
dec
js
sbb
shll
xchg
mov
cmp
cmpsb
lret
dec
cmp
call
sub
lahf
lahf
nop
or
shl
test
push
cli
notl
mov
inc
adc
inc
add
leave
imul
push
fsubrs
pushf
mov
mov
push
ja
xchg
adc
loope
fs
lods
sbb
cmp
cltd
fcomip
cld
dec
ss
cmp
mov
xor
hlt
mov
xor
fsubs
mov
addr16
enter
bound
cmpsb
into
sbb
sub
movsb
xchg
adc
jne
test
adc
jae
mov
push
add
pop
enter
mov
mov
pop
les
sbb
mov
daa
mov
test
shll
repnz
dec
repz
fnstsw
rcrl
xlat
xor
xlat
push
call
pusha
repz
cmp
ds
lahf
push
or
dec
fisttpll
jmp
push
xchg
mov
sub
xor
jae
xchg
sub
mov
clc
lock
add
mov
add
sbb
cmp
popf
loop
adc
jb
leave
push
inc
xchg
jl
jo
xor
mov
jp
repz
test
notb
stc
jnp
daa
push
pop
repnz
xchg
aas
push
push
loop
or
adc
sbb
push
sub
inc
hlt
movsl
inc
or
repnz
sbb
movsl
push
vpcmpgtb
loope
add
fistpl
xchg
enter
mov
sub
mov
cmp
jl
jbe
lock
or
xchg
stos
cs
test
jg
push
in
pusha
jecxz
scas
push
cmp
call
aaa
sahf
in
xorl
popfw
jnp
mov
xor
xor
pushf
sub
in
popf
mov
push
dec
push
xchg
hlt
adc
push
fisttpl
int3
mov
or
call
xchg
push
cmc
clc
fmuls
push
xor
insl
enter
sbb
popa
loopne
je
fsubrl
inc
and
mov
mov
lcall
or
out
sub
cwtl
fnstenv
rolb
iret
jg
loope
mov
imul
adc
fldcw
push
jne
fidivrs
add
sarb
xchg
cli
mov
cld
sbbl
jl
jnp
push
pop
aas
sbb
out
pop
jmp
in
jp
jmp
push
mov
data16
test
jno
ret
sub
out
les
sub
sub
into
jns
ja
sub
js
pop
sbb
popa
pop
or
push
in
je
adc
jmp
daa
adc
mov
jl
mov
roll
cmp
int
xor
es
lods
jge
xchg
cmpsl
mov
dec
mov
mov
mov
sbb
add
aam
jno
and
cmp
int
rolb
out
repnz
xor
sub
add
movsb
test
hlt
push
ljmp
je
mov
inc
fadd
mov
in
or
loope
iret
adc
jne
aaa
ret
add
and
repz
subl
test
fcompl
sbb
dec
jecxz
call
pop
dec
out
push
mov
shrb
shlb
loopne
lds
dec
add
fs
dec
cmp
dec
push
xchg
or
adc
or
das
xchg
daa
push
in
push
mov
inc
or
jae
push
sbb
mov
lret
notb
dec
jmp
cmp
aas
fistpll
pop
pop
ja
lock
xchg
jl
aaa
mov
add
inc
sbb
add
inc
push
mov
dec
mull
decl
cltd
test
or
mov
mov
fiaddl
popa
jmp
dec
lahf
sti
iret
int3
test
jae
pop
sbb
psubusb
shr
jg
outsl
cmp
jns
mov
sub
dec
adc
jge
pop
jle
jb
mov
sarb
ret
pop
and
stc
jae
sahf
inc
mov
pop
or
mov
cmpsb
stos
xor
icebp
repz
inc
cmp
xchg
sub
add
mov
mov
pop
mov
or
lods
aam
stc
jo
int3
mov
mov
negl
adc
mov
lds
pushf
push
or
xchg
insb
stc
adc
adc
imul
jl
fs
ret
or
pushl
mov
pop
cmc
mov
mov
nop
mov
sbb
adc
movsb
leave
call
sbb
outsl
cmp
fldenv
pop
es
add
xchg
gs
hlt
fcmovb
dec
inc
mov
jmp
xor
or
loop
inc
cmp
adc
mov
pop
pop
pop
lret
mov
lods
and
mov
xchg
and
sbb
sbb
shl
outsb
sbb
sbb
xor
xchg
dec
shll
mov
pop
cli
out
cmp
fcmovnu
push
sub
fs
movsb
mov
cmpsb
adc
jl
adc
aas
cmp
cmp
push
sbb
jae
jecxz
cmp
rcll
push
xchg
jge
je
pop
inc
dec
ljmp
mov
inc
daa
insb
ljmp
loope
ud0
mov
bound
add
insb
adc
into
hlt
jnp
mov
jb
jae
stos
pushf
mov
add
imul
rclb
lods
mov
jmp
mov
into
ret
daa
loope
test
jmp
fwait
decl
sub
jbe
add
push
lret
cli
and
pop
inc
clc
ret
jecxz
cmp
icebp
idivl
xchg
xchg
cmpsl
inc
in
in
add
mov
insl
cltd
mov
nop
lods
mov
xor
imul
repnz
pop
imul
add
push
dec
xchg
inc
std
cmp
push
jbe
xor
jno
mov
mov
jle
cld
fcoms
scas
insl
dec
inc
sbb
js
cmp
add
fistpll
popf
fidivrs
push
das
inc
xchg
lds
gs
push
mov
das
push
xchg
adc
cmpsb
pop
cmp
pop
pop
in
mov
fwait
arpl
add
int3
adc
cmp
push
push
ja
in
cltd
das
mov
cwtl
out
sti
jnp
nop
clc
cs
arpl
add
adc
and
and
rcrb
inc
fdivl
dec
jl
push
aaa
lds
cmpl
subl
jmp
pop
scas
inc
out
leave
outsl
xchg
inc
in
push
ja
inc
imul
and
lret
cmp
cmp
xchg
dec
cli
jg
and
xor
call
outsl
mov
xchg
sbb
mov
ds
xchg
mov
inc
inc
xchg
movsl
loope
iret
add
roll
add
pop
fs
std
loope
add
cmp
and
push
dec
insl
js
xchg
add
or
ds
mov
dec
test
push
mov
or
push
ror
and
push
and
fcoms
in
mov
inc
xchg
cmp
push
loopne
add
adc
mov
push
lret
lret
sub
rcrb
loop
lods
icebp
cmp
cltd
fisubs
mov
shr
cmp
ljmp
adc
xchg
mov
or
fisttpl
mov
jne
mov
mov
push
subl
xor
aad
xchg
pop
fnstsw
inc
hlt
lock
inc
sbb
pop
ss
pop
mov
dec
lock
xchg
out
cmpsl
adc
inc
mov
push
jg
cld
lcall
iret
cmp
les
lea
xchg
mov
dec
and
push
ffree
push
inc
dec
adc
stos
hlt
mov
pop
jl
fwait
sahf
xchg
mov
ljmp
cmp
dec
out
cli
cmp
mulb
jecxz
clc
dec
sarb
or
cltd
in
inc
mov
mov
loop
push
cmp
cmp
scas
mov
sub
pop
fsubrl
cmp
and
aad
lret
imul
jns
test
movsl
dec
push
ret
xorb
dec
fs
jecxz
cmp
aas
pop
js
cmp
add
mov
cmc
rolb
lcall
lcall
xor
and
mov
lret
pop
or
sar
or
pop
loopne
cmp
stos
cmc
testl
inc
xor
les
out
sbb
out
adcb
lock
testl
jne
push
push
inc
test
xchg
cmp
push
rclb
jg
sub
mov
or
push
sub
shr
test
pop
les
and
xchg
pop
inc
mov
pushf
mov
mull
dec
lods
or
fdivl
fisttpll
in
mov
mov
jmp
shl
mov
bound
sub
cld
or
mov
inc
lods
inc
cmpl
lods
inc
push
stos
dec
sub
and
mov
lods
xchg
fstl
call
addl
out
mov
dec
mov
and
int
and
and
mov
enter
cmp
es
jecxz
lods
mov
adc
mov
cmp
inc
loop
outsl
sbb
inc
mov
hlt
cmp
pop
vmovq
lea
add
cwtl
inc
insl
in
fisttpl
inc
mov
std
pop
jmp
stos
inc
fildl
push
dec
cmp
mov
pop
add
in
mov
je
adcb
out
push
bound
push
test
adc
mov
aad
gs
xor
pop
and
std
idivl
enter
cmpsb
xorps
andb
orl
and
lods
xor
dec
dec
lods
dec
jae
sbb
pop
ret
push
loope
and
jne
add
xchg
pop
ja
ret
les
mov
jp
repz
imul
or
std
xor
repz
pop
aam
dec
mov
lea
jno
int
mov
loopne
mov
shlb
xor
out
insl
in
inc
xchg
mov
out
int3
xchg
sub
scas
test
shl
xor
fwait
and
push
std
xor
dec
icebp
inc
pusha
mull
mull
ja
fldl
sub
dec
mov
push
negb
hlt
xor
inc
add
subl
adc
add
js
fcoms
mov
mov
sbb
vpunpcklqdq
aaa
int3
mov
push
xchg
sub
dec
and
mov
shlb
adc
call
dec
fisttpl
or
sti
mov
or
ds
pop
inc
fmull
sti
pop
loope
insb
cld
xchg
adc
ds
rcr
inc
popa
aaa
mov
xor
outsb
and
cmp
fnsave
cmp
xchg
shll
lcall
testb
fistl
repz
jbe
push
adc
mov
mov
adc
rolb
push
test
icebp
std
dec
insl
mov
inc
push
jnp
loope
fsubr
mov
fnsave
fistpll
xor
mov
add
inc
nop
imul
dec
out
pop
out
bound
popa
scas
dec
clc
fisubs
and
ret
mov
jp
push
pushf
and
fmuls
push
sbb
mov
sti
leave
jg
fnstenv
pop
pop
jno
repz
inc
cs
xor
mov
stc
mov
dec
insl
mov
pop
pop
in
pop
xchg
push
pushf
jbe
jo
das
pop
dec
ret
pop
sbb
xchg
jae
inc
subl
push
aaa
cli
jo
xchg
repz
and
cmp
mov
stos
dec
psubsb
aas
add
pop
sub
inc
push
addb
ljmp
push
addr16
int
mov
pop
scas
add
les
mov
cli
push
push
hlt
pop
sti
mov
xchg
mov
sbb
lcall
xchg
lock
pop
les
mulb
or
push
push
scas
popf
arpl
inc
mov
add
outsb
aam
call
mov
fiadds
xchg
daa
outsb
push
lds
dec
and
mov
rorb
push
icebp
xchg
xchg
fchs
pop
bound
mov
fisubl
pop
xchg
and
jge
rorb
jecxz
mov
fs
jne
xchg
sbb
sahf
fwait
jb
or
mov
xchg
out
mov
out
xchg
add
mov
and
push
add
ror
jno
int
xchg
into
mov
mov
decb
fidivl
and
nop
adc
and
out
fidivs
insb
imul
pop
sub
mov
push
popa
jne
cmpsl
cltd
mov
addr16
out
test
ds
or
xor
dec
imul
sbb
push
inc
push
pusha
push
mov
out
add
jl
fadds
int
mov
pop
mov
sti
inc
lret
dec
nop
je
test
outsb
mov
in
inc
jo
in
das
dec
inc
out
mov
push
push
push
mov
add
mov
cwtl
mov
and
outsb
test
jae
push
lods
enter
ret
and
inc
jo
cmc
aas
jne
and
push
cmp
ds
jmp
mov
cmpsb
incb
aad
outsb
cltd
lods
aam
sbb
pusha
push
xchg
rolb
mov
sub
into
jo
inc
pop
ret
mov
cltd
cmp
sbb
cli
sbb
cmpsb
dec
sub
xor
dec
push
or
push
xchg
sbb
dec
xorb
lret
pop
int3
jmp
dec
cmp
lcall
jb
push
sbb
ja
or
lods
and
fnstenv
inc
pushf
xchg
xchg
adc
xchg
mov
mov
inc
xor
int3
dec
lds
mov
sahf
les
push
in
cmc
cmp
xchg
loope
fwait
or
sbb
movsl
mov
lods
cwtl
inc
mov
cmp
es
jb
in
mov
out
aad
test
cs
in
loope
sahf
pop
fisubrs
mov
repz
rclb
movl
add
ret
out
push
pop
stos
stos
gs
jg
adc
nop
iret
push
push
jo
jp
cld
ja
hlt
cmp
addb
rcll
jne
sbb
fstl
mov
popf
sbb
adcl
cmpsb
jmp
sub
cmp
mov
xor
cltd
mov
mov
call
mov
lds
pop
and
scas
jecxz
lcall
paddw
mov
leave
mov
mov
lret
test
add
outsb
pop
fs
inc
mov
hlt
ffree
data16
leave
inc
xchg
jp
lods
pop
lret
pusha
into
in
adc
xchg
or
inc
inc
dec
adc
cli
adc
imul
dec
hlt
xor
or
jmp
imul
mov
aad
test
xor
pop
or
mov
pop
outsl
mov
fwait
add
loop
subb
in
idivb
add
int3
mov
mov
js
pop
sbb
test
notl
leave
cmc
shlb
out
test
pop
cmp
ret
push
jmp
add
ficoml
arpl
add
dec
adc
push
pop
out
cmp
ss
movsb
cwtl
sub
jo
xchg
gs
push
cli
cmp
mov
nop
cli
imul
inc
inc
pop
ds
stos
loop
stos
and
call
mov
dec
push
loope
add
cmp
mov
mov
adc
mov
sub
gs
sub
and
pop
scas
inc
xor
out
insl
mov
das
pusha
mov
push
xchg
test
stos
icebp
mov
xor
dec
insb
scas
jl
jno
cmp
int
lock
jb
pushf
push
pop
int3
mov
mov
jmp
push
icebp
sbb
inc
nop
inc
sbb
clc
aaa
out
mov
push
and
and
push
cs
jns
push
sub
inc
ja
imulb
jo
inc
mov
mov
mov
lret
lods
stc
andl
mull
dec
mov
test
jecxz
testb
imul
xor
je
mov
ret
xor
scas
cmp
xorb
test
ret
ljmp
pop
lcall
and
and
cltd
repz
nop
in
insb
shl
rclb
inc
pmulhuw
pusha
mov
scas
out
xchg
mov
jne
mov
lock
mov
enter
jmp
in
xor
dec
rcrb
sub
std
jg
cwtl
pop
imul
pusha
add
addl
in
dec
stc
das
adc
pop
and
popa
das
lods
popa
push
or
mov
dec
xor
mov
pop
leave
jp
je
sub
inc
xor
leave
sbb
xor
jge
divb
cmp
lods
mov
leave
inc
cmp
cmp
je
addr16
mov
hlt
mov
iret
data16
mov
inc
jl
imul
test
inc
pop
jne
fcomp
jmp
xor
dec
stc
int
pusha
ljmp
fnstcw
mov
jo
adc
lea
cld
shll
cmp
loope
daa
fcoml
aas
cmp
negl
xor
repz
fs
inc
cmp
mov
adc
les
in
cmp
pop
es
mov
xchg
xchg
clc
dec
loop,pn
mov
movsb
mov
insb
push
sahf
sbb
movsb
fdivrl
xchg
mov
push
fbstp
cmp
cmpb
cmp
xchg
inc
push
std
pop
popa
sub
mov
cmp
fdivrp
lods
scas
leave
jbe
imul
insl
sub
mov
js
mov
dec
push
xchg
sbb
inc
lds
jb
sbb
faddl
inc
fcomps
int
push
pop
loop
inc
inc
inc
jl
addr16
and
mov
shr
push
mov
fwait
mov
xchg
add
aad
movsb
or
mov
sarl
xorb
mov
and
hlt
mov
xchg
pop
ficoml
jae
jbe
cmp
fsts
fwait
jne
and
fbld
sub
imul
jnp
xlat
out
rolb
insb
add
test
mov
imul
or
jmp
int
push
push
pushf
subl
fs
push
xchg
inc
and
lds
out
push
inc
dec
cltd
add
push
mov
adc
ret
add
nop
xchg
mov
loopne
xchg
aam
repz
pop
jge
adc
pop
mov
cmpsb
sarb
in
mov
push
push
add
and
cmpsb
ds
jae
fyl2xp1
push
sub
push
out
jmp
push
lods
sub
rep
pop
test
adc
xchg
out
add
mov
mov
mov
sub
cli
ret
jbe
adc
cwtl
clc
jecxz
adc
mov
lods
arpl
jmp
pop
sub
xorb
jp
aad
adc
test
push
xor
decl
cmpsl
cmpsb
cwtl
imul
call
pop
push
ja
je
and
dec
jne
jae
lods
cmp
shl
add
rorb
jns
fstpl
jmp
subl
mov
stos
cmc
jb
fnstcw
jb
xchg
sbb
sub
cmp
or
fmuls
push
leave
jo
pop
adc
pop
jns
sbb
test
mov
test
mov
cli
jg
addr16
mov
pop
fs
sub
shl
pusha
pop
mov
imul
push
outsl
jg
pop
mov
dec
nop
push
rcrl
cmc
int
jo
dec
pop
ljmp
and
pop
outsb
pop
pushf
daa
cmp
in
or
mov
ret
xchg
ficoms
hlt
pop
xor
adc
or
mov
mov
lret
stos
jg,pn
jb
inc
or
mov
mov
fildll
mov
sub
mov
js
shl
jl
mov
sub
mov
push
pop
adc
lret
shll
sahf
in
pop
inc
lods
icebp
sub
jle
jmp
iret
test
sub
outsl
arpl
cmpsl
push
lcall
bnd
mov
mov
hlt
xorl
mov
js
call
lcall
notl
jmp
ss
inc
rclb
insl
or
cmpl
hlt
fcoms
xchg
add
push
flds
push
sti
repz
mov
cmc
add
repnz
aaa
scas
mov
xchg
lcall
and
mov
loope
adc
inc
push
sbb
adc
sub
notl
jecxz
aas
push
push
iret
mov
ret
xor
cli
mov
shl
fwait
jns
sbb
push
aad
inc
jp
fisubrl
xchg
cltd
inc
or
dec
pusha
and
or
pop
clc
loopne
inc
fnstcw
push
insb
fidivs
je
mov
pop
jge
popf
add
sbb
and
mov
inc
dec
inc
push
cmp
cli
mov
xchg
lcall
cmpsl
xchg
cmp
out
jae
stc
xabort
mov
vdivsd
push
lock
sbb
add
mov
and
das
adc
and
in
dec
dec
inc
scas
or
dec
cmpsb
aas
fwait
pop
movsl
jns
movsb
pop
dec
mov
mov
rorb
inc
gs
daa
testl
add
sahf
pop
xor
cwtl
adcb
movsb
aad
clc
mov
outsl
hlt
movsl
sub
dec
daa
pop
pusha
out
mov
add
daa
dec
loope
addb
cmpsl
adc
pop
shrl
loop
pop
add
jae
test
push
sbb
jge
push
mov
dec
dec
stos
cmc
sbb
leave
bound
xchg
or
int
int3
test
mov
fwait
mov
leave
ja
inc
sub
clc
xor
mov
test
cmp
std
gs
cwtl
orb
cmp
std
mov
mov
xchg
xor
xchg
rol
mov
and
xlat
int3
fldl
ja
stos
sbb
and
mov
adc
cmp
or
outsb
inc
loopne
dec
pop
jne
stos
push
xchg
rcrl
mov
push
or
out
stos
fcomip
cmp
inc
repz
into
cmpsb
stc
push
mov
and
mov
xchg
push
daa
xchg
adc
push
or
push
arpl
pop
cmc
fld
es
adc
add
ret
mov
in
and
and
push
pop
in
aas
movsl
into
shll
mov
mov
lock
test
cmp
xor
js
loope
fisubs
es
xor
and
and
dec
cmc
lock
clc
xor
lret
dec
in
test
sub
sub
adc
mov
lods
cltd
xor
pop
mov
addl
pushf
repz
imul
or
or
leave
jl
adc
cmp
jp
adc
out
dec
sbb
adc
lods
cmc
test
and
cmc
cmpsb
fisttpll
jnp
cwtl
daa
stos
jne
and
flds
dec
stc
mov
fwait
xor
pop
stos
xchg
inc
outsl
pushf
fs
out
lahf
jl
jnp
outsl
lds
cmp
adc
sub
pop
cmp
aaa
in
or
xor
outsl
jnp
fistpll
clc
test
mov
jmp
mov
hlt
mov
sahf
or
xor
mov
aam
je
fmuls
adc
ss
std
out
ss
cmc
stc
cmp
sqrtps
sbb
mov
mov
jmp
out
sahf
dec
push
out
cmpsb
mov
add
scas
insb
push
xor
jns
rcll
subb
sbb
jne
jmp
fwait
mov
mov
in
push
cmpsb
sbb
sahf
cwtl
and
xchg
adc
dec
fldt
fsubrl
push
cld
push
mov
push
mov
orl
decl
adc
out
cmp
in
mov
fimuls
adc
pop
loope
inc
pop
lret
idivl
and
sti
das
push
add
dec
popf
popa
imull
sub
push
jne
scas
xchg
addr16
xchg
xchg
inc
call
push
repnz
adc
push
adc
mov
fisttpl
jae
or
iret
xchg
sub
clc
fdivl
sbb
daa
aas
addb
xlat
pop
lcall
jmp
test
in
jmp
repnz
pop
dec
scas
dec
lods
rcrb
mov
nop
xor
call
dec
and
push
push
lods
sbb
orl
pop
ds
mov
xchg
enter
stc
fstps
or
imul
push
add
xorb
jbe
test
mov
fmulp
pop
push
ja
fdiv
mov
or
add
push
jbe
pop
and
pop
bound
lods
int3
dec
xor
add
push
cmp
or
lds
adc
shl
imul
xor
jns
jo
jns
cmc
js
cmp
pop
push
gs
jmp
repnz
into
ja
sahf
sti
mov
scas
and
dec
cmc
neg
les
imul
inc
mov
mov
sbb
out
data16
cmp
add
push
mov
lret
push
lea
add
lds
push
adc
sbb
and
ljmp
shll
jno
lahf
inc
stos
push
in
cmp
mov
fs
scas
rclb
add
sub
sahf
lds
fcmovne
or
inc
cmp
out
mov
shr
popf
fisttps
mov
aas
or
cmp
jecxz
mov
jae
outsl
sbb
shrb
sbb
lods
pushf
mov
mov
dec
inc
popf
push
jl
test
flds
aam
fbld
aas
sub
mov
adc
pop
les
mov
dec
sub
cmp
push
loopne
adc
clc
pop
push
fidivrl
xor
jb
mov
and
cmc
cmp
cmp
nop
xor
jg
mov
and
pop
stc
adc
dec
sbb
ret
movsl
fucomip
sub
popf
pushf
push
cs
outsl
repz
ja
mull
push
dec
ror
xor
push
sarb
mov
xchg
ret
scas
clc
cmp
out
push
icebp
imul
adc
xchg
nop
mov
je
cmp
test
fwait
fs
jnp
add
dec
pop
bound
sbb
dec
inc
cli
outsl
inc
fisubrl
pushf
in
scas
xlat
adc
cwtl
add
pop
dec
daa
pop
int3
nop
push
mov
js
ds
mov
push
shr
sub
les
xor
cmp
pop
add
push
ja
push
fistpl
xchg
jne
mov
mov
or
ret
test
stos
clc
shrb
adc
popf
push
mov
xchg
sub
jbe
bound
cld
iret
ror
jns
or
gs
ljmp
jge
iret
fstp
aas
sbb
cmp
jo
push
mov
ss
std
or
jl
in
ret
ds
cmp
pop
int
daa
lcall
mov
mov
sub
xor
popa
insl
or
jecxz
out
inc
jecxz
mov
xchg
ret
and
outsb
mov
ror
pop
mov
test
mov
mov
xlat
aas
lea
loop
lods
pop
mov
sbb
push
cmp
xor
aam
add
mov
mov
adc
test
mov
pop
addl
int
inc
adc
in
pop
aad
and
out
xchg
pop
clc
jnp
mov
push
shlb
pop
repnz
ret
push
xchg
dec
ds
cwtl
fldl
imul
push
call
cmp
inc
mov
jne
sbb
mov
imul
sub
loope
aas
repnz
fsubrs
push
mov
add
je
lcall
nop
jl
add
mov
movb
adc
pop
insl
stos
loope
inc
jle
inc
cmp
imul
pop
sahf
int
mov
inc
mov
test
jnp
xor
iret
js
sbb
pop
push
mov
push
movl
fs
cmp
les
mov
negb
jg
ja
inc
xlat
add
sahf
cmp
ret
xchg
je
mov
repz
mov
push
push
outsb
dec
push
push
cmp
insb
adc
push
movb
neg
push
sub
sbb
test
lds
and
cmc
jns
jo
xchg
add
sbb
cmpsl
mov
push
adc
mov
scas
push
lret
jne
dec
fstps
shrl
hlt
into
repnz
out
mov
jae
test
mov
mov
cltd
scas
pop
out
shlb
mov
jl
ljmp
pop
cwtl
pushf
jnp
int
and
int3
lea
clc
pop
cmp
jmp
js
mov
sbb
push
outsl
sub
sar
dec
jns
push
sahf
inc
adc
jo
mov
push
nop
mov
xor
scas
addl
adc
fwait
sbb
adc
adc
mov
add
dec
mov
rcl
dec
pop
mov
fnstcw
aaa
lock
or
inc
and
ss
lea
addr16
jmp
test
pop
adc
test
aas
lods
or
dec
imul
adc
lret
dec
adc
push
lahf
popa
cli
mov
cltd
push
mulb
mov
jmp
mov
fwait
in
cmc
rcll
mov
rorl
push
js
gs
nop
mov
inc
and
inc
sub
hlt
dec
out
inc
sahf
loopne
cmp
push
je
pop
mov
aas
cmp
sbb
stos
inc
dec
sbb
icebp
dec
mov
inc
clc
pop
inc
inc
xchg
cmp
sub
push
mov
iret
xor
cmc
jbe
cmp
push
jecxz
dec
lcall
test
xchg
in
jns
call
dec
test
xchg
cmp
fsubl
xchg
dec
cltd
jns
es
pop
adc
inc
lcall
movsb
loopw
mov
jmp
inc
push
les
pop
icebp
sub
lock
roll
or
outsb
movsb
lret
into
ds
nop
push
sub
mov
jno
cltd
outsb
pusha
call
enter
cs
into
inc
dec
cld
push
sbb
dec
icebp
js
or
ljmp
cmp
inc
repz
cli
dec
outsl
lret
jecxz
mov
xchg
jo
xchg
je
cmp
inc
aad
call
mov
inc
call
jge
fcomi
outsb
add
jae
pop
hlt
push
jns
test
into
mov
xchg
outsb
enter
mov
or
dec
push
cs
ljmp
dec
int3
cmp
sahf
sbb
fisubrl
and
or
mov
mov
dec
test
pop
pop
loopne
mov
sub
ss
fs
int
lret
rcll
loopne
cmp
xor
mov
and
repnz
por
stos
repz
cmp
add
daa
stos
sbb
inc
enter
add
dec
pushl
dec
scas
fcoml
stos
or
cwtl
mov
dec
out
shr
leave
add
add
idiv
mov
sub
popf
sub
lds
and
pop
mov
sbb
rcll
sbb
or
jbe
idiv
pop
icebp
mov
inc
inc
leave
ja
test
addr16
insl
outsb
mov
push
cmp
scas
in
mov
jmp
add
divb
or
sbb
pop
xlat
jge
loop
sbb
or
hlt
jl
les
ret
adc
push
cmp
sbb
fsubl
in
test
les
mov
les
es
jecxz,pn
fldl2e
sub
cld
push
cs
mov
sti
sbb
xchg
fwait
xor
scas
popf
int3
aaa
out
rorl
cmpsb
xor
into
cld
inc
lock
mov
flds
xchg
loope
stc
cli
jnp
and
inc
lea
scas
mov
aam
rorl
lods
cs
pop
dec
push
iret
leave
mov
jge
mov
in
mov
mov
xchg
xor
cmp
jmp
push
stos
sbb
enter
cmp
pop
out
ds
xor
xchg
jns
es
jecxz
fs
sbb
cmc
cmp
add
or
cs
push
jmp
adc
lcall
xchg
lods
jmp
shlb
add
jne
cs
mov
nopl
push
jecxz
pop
jmp
loop
scas
lock
test
xor
lea
lea
out
mov
jmp
lea
cltd
lcall
mov
popa
leave
mov
xchg
cli
std
lret
call
mov
jge
and
jge
mov
dec
xchg
and
mov
push
pop
nop
and
cs
jp
sahf
and
jecxz
mov
jae
shrb
and
inc
pop
test
divl
adc
jle
fistps
xchg
pushf
arpl
ljmp
pusha
enter
inc
lahf
or
pop
dec
call
enter
es
clc
subb
add
sbb
xchg
xorb
insl
rorl
insl
mov
add
outsl
cwtl
insb
mov
pop
xor
xchg
popl
adc
fidivrl
jmp
movsb
mov
outsb
lahf
scas
xchg
ljmp
shrb
sub
movsl
mov
xor
or
cmp
mov
das
push
push
in
mov
outsb
and
out
cmp
cltd
ss
fiaddl
pop
xchg
cwtl
sub
push
jns
sub
popf
sub
stc
repz
scas
mov
movsb
push
arpl
add
and
mov
mov
cld
adc
fsubrs
shlb
jne
cmp
dec
or
mov
mov
or
mov
sub
arpl
in
sub
shlb
sub
add
dec
movsl
fwait
cs
add
push
mov
sti
xchg
loopne
pmullw
data16
call
mov
in
dec
clc
cmp
enter
dec
imull
aas
cmp
sbb
xchg
sahf
inc
scas
jmp
bnd
lods
mov
push
call
sbb
xor
aas
pop
push
cmp
js
cltd
into
mov
inc
push
dec
int3
sub
rcrb
dec
rorl
pop
jg
jge
xchg
outsl
pusha
lds
mov
bound
cld
dec
lret
insb
stos
mov
pop
mov
adc
rcrb
fadd
repz
stc
out
or
das
mov
cs
das
and
call
test
aad
ja
xchg
clc
fildll
andl
sub
test
out
fidivl
popf
mov
adc
cltd
sub
ljmp
push
dec
pop
es
and
ret
or
cs
lods
daa
arpl
inc
push
sub
stos
addr16
js
pop
addr16
or
jnp
mov
test
fmull
call
xor
jl
add
arpl
jno
test
cmpsb
icebp
pop
xchg
imul
cltd
outsl
enter
jl
ror
jnp
jle
mov
je
ja
out
mov
movsb
xchg
add
sbbl
sbb
sbb
pop
mov
or
arpl
or
es
popa
mov
jne
gs
pusha
test
mov
fistl
in
xor
xlat
pop
mov
fdivs
daa
je
out
mov
imulw
jmp
int3
and
test
pop
adc
adc
jae
cmp
inc
add
arpl
jecxz
sbb
pop
int3
fs
js
cltd
daa
leave
pop
push
dec
inc
enter
jle
push
ret
ja
pop
jmp
inc
loop
pop
outsl
cmp
sbb
mov
jl
push
adc
jmp
and
push
xchg
in
and
cmp
cmc
pop
bound
adcb
and
pop
pushw
scas
inc
clc
out
rorl
cmpsb
sub
mov
inc
jnp
inc
enter
pusha
pop
jo
stos
cltd
add
in
mov
imul
or
pop
call
dec
cmp
sar
cltd
xor
ret
inc
dec
add
sbb
dec
test
push
and
mov
outsb
xchg
inc
pop
cmp
dec
shrl
mov
inc
xchg
ss
sub
out
bound
test
testb
xchg
xchg
mov
lret
sub
and
rorl
lds
or
sti
bound
loope
fcmovb
mov
or
mov
xchg
jmp
add
insb
insl
xchg
andl
lods
je
stc
lret
dec
outsl
push
int3
add
pusha
mov
jmp
mov
dec
test
mov
loope
inc
das
repnz
cmp
push
cmp
mov
out
sbb
mov
in
fwait
ss
mov
imul
addb
push
mov
dec
adc
add
cmpb
inc
cmpsb
cli
mov
fcompl
pop
adc
cmp
shll
fistps
pusha
aad
scas
imul
jg
shll
xchg
call
les
jecxz
pop
cmp
mov
loope
daa
xor
sub
sub
mov
jg
fsts
xor
dec
arpl
leave
out
scas
mov
jl
lcall
sbb
pop
sub
arpl
lods
inc
xor
addb
xchg
frstor
mov
fstpt
ficomps
xchg
pusha
pop
clc
int
rorl
mov
mov
jl
fnstenv
movsb
mov
test
jbe
rcll
mov
cmp
movsb
fbstp
or
inc
sub
mov
out
sti
dec
sbb
dec
mov
mov
adc
into
cmp
testb
ret
cmp
and
sub
test
xchg
cltd
frstor
out
xor
mov
fwait
aad
ja
aaa
cmp
add
repnz
addr16
mov
jle
cli
pop
mov
into
notb
outsb
add
mov
lret
es
out
jmp
out
mov
mov
test
add
out
sub
xor
std
mov
out
xor
lds
pop
or
add
je
subb
jmp
pushf
push
jmp
lahf
mov
ja
in
pop
jg
out
pop
pushf
mov
rcrl
cld
repz
in
dec
loope
adc
jp
add
das
rcr
and
pop
jbe
xchg
mov
loope
pop
das
mov
cmp
cs
ja
ret
push
imul
jo
ret
fisubrs
mov
mov
or
fisubs
cli
imul
icebp
cmp
out
or
test
mov
clc
ds
cmpl
push
jne
lds
and
insb
jmp
sub
mov
out
xor
add
xchg
sbb
imul
cmp
adc
pusha
lret
and
lods
aas
dec
int3
cmp
fwait
sti
and
stos
push
jp
sbb
mov
data16
ds
mov
lods
sbb
sub
cwtl
jns
or
cmp
shll
dec
test
stc
mov
xlat
mov
dec
push
push
fidivl
shlb
sub
cs
cmpsb
inc
mov
arpl
adc
cltd
int3
push
test
dec
xor
dec
test
scas
lock
jge
lds
mov
fwait
sub
and
pusha
call
loopne
sub
cwtl
jb
sub
sbb
icebp
adc
int
sbb
stc
leave
clc
mov
imul
inc
mov
mov
into
shlb
or
imul
cs
mov
fcomi
sbb
pminsw
or
fadds
xchg
xlat
lahf
pop
push
adc
dec
jl
into
mov
ret
push
sbb
mov
cmc
or
jnp
and
int3
loope
out
add
cmp
das
and
or
adc
or
mov
lock
xor
mov
adc
out
add
fsubs
pushf
cmp
sbb
stos
xlat
out
pop
cmp
adc
and
hlt
jg
sarl
and
insb
pop
xchg
xchg
pusha
mov
lods
push
jp
adc
fimull
push
or
scas
xorb
fsubrl
pop
pusha
jg
add
out
push
dec
adc
repnz
bound
jle
ret
ds
addr16
mov
mov
xor
or
or
aad
sti
dec
imul
mov
xchg
into
push
push
mov
popa
insl
mov
mov
cmp
pop
dec
sbb
push
test
xchg
mov
sti
inc
imul
pop
lock
loopne
and
xchg
into
mov
or
mov
mov
adc
int
inc
mov
cmp
cmp
ljmp
lds
xor
jb
loopne
pusha
mov
je
jns
or
test
sub
outsl
inc
lds
pop
push
xor
into
pop
xchg
aam
scas
mov
inc
stos
jg
cmp
inc
call
jb
sub
movsl
dec
std
aam
pop
repz
jp
cmpb
daa
cld
or
out
outsb
shlb
xor
mov
fcomps
dec
xor
pop
cmpsb
test
mov
jns
out
adc
test
pop
xor
repz
std
roll
minps
jo
xchg
add
or
or
std
rol
mov
fsub
add
rcrb
pop
call
das
or
xchg
jb
mov
dec
xlat
jo
jg
and
or
cmpsl
push
push
pushf
ljmp
and
js
scas
enter
mov
mov
inc
push
je
pop
testl
push
sbb
xchg
jg
cli
mov
cld
push
js
mov
hlt
inc
shrl
lcall
ljmp
cmp
add
and
mov
fdivrs
pushf
push
xchg
das
imul
push
xor
out
pop
adc
or
inc
push
cld
jbe
pushw
arpl
popf
jo
mov
sbbl
addr16
and
sub
sub
outsl
sbb
dec
mov
xchg
jnp
shl
add
into
loop
out
iret
sahf
pop
xor
push
shrl
cmp
loop
clc
jmp
repz
pushw
adc
fldl
cli
out
mov
sbb
cwtl
sub
imul
movsl
push
adc
xor
push
push
fdivrl
xchg
push
imulb
add
mov
and
sbb
inc
repz
lock
add
mov
push
inc
test
and
leave
push
aad
out
cmpsl
mov
cmp
dec
jno
and
cltd
add
imulb
int3
sar
cmpsl
mov
lcall
cmp
aad
add
insl
xor
pop
fidivrl
fidivrl
or
fsub
pop
adc
cltd
pop
mov
and
mov
js
ja
jbe
in
cmpl
lods
call
sbb
stos
add
std
inc
lahf
jmp
testl
mov
mov
pop
jecxz
dec
xor
cltd
cmp
xchg
mov
imul
ja
sbb
pop
add
jle
jge
cmpsb
jno
mov
in
scas
int
add
dec
pop
test
jmp
cmp
add
int
inc
es
cmp
into
jmp
xchg
or
sbb
xchg
mov
mov
call
ljmp
mov
daa
xbegin
cmpsl
add
cltd
mov
xor
xchg
cld
movsl
and
push
cmp
lds
sbb
ja
cmp
out
in
bnd
daa
mov
in
outsb
mov
int
pop
add
pop
in
ss
or
bound
and
test
in
fmull
push
xchg
sahf
aaa
jg
adc
push
mov
mov
sub
mov
or
cld
cmp
scas
sub
xchg
lea
push
mov
in
lcall
movsb
push
popf
xchg
clc
and
aam
hlt
je
pop
loopne
xchg
mov
adcb
push
jae
jnp
inc
stos
adc
and
xchg
jl
das
sbb
out
cs
push
mov
pop
jge
cmpsb
jno
in
or
loop
fstl
add
fldl
and
mov
adc
cli
adc
clc
ljmp
andl
pop
mov
sahf
adc
daa
mov
jns
call
push
in
push
xchg
jne
lret
out
push
xor
sub
lds
dec
or
lahf
add
xlat
mov
subl
jbe
pop
xlat
or
addb
sbb
arpl
mov
sti
fcmovnbe
dec
sbbl
xor
testb
insb
test
fidivrs
subl
ja
inc
fidivl
lret
sarl
inc
addr16
inc
gs
xchg
jne
ss
jae
push
jl
jmp
xchg
imul
aas
mov
das
pusha
fdivrs
jo
gs
sbb
xchg
cli
loope,pn
fwait
leave
adc
mov
sub
pop
mov
xchg
lock
add
jno
mov
aas
loopne
call
out
cmpsl
movsb
test
pop
and
test
mov
xor
mov
mov
movsb
popf
mov
xor
sub
jl
aas
push
pop
mov
cmp
push
dec
call
push
add
cmpsl
loope
or
pop
gs
insb
xchg
mov
mov
mov
sub
imull
mov
insl
push
into
sub
sub
int
or
pop
mov
xchg
push
push
adc
sub
xchg
push
adc
imul
xor
frstor
inc
cmpsb
inc
mov
dec
push
in
fsubrs
mov
sub
sbb
test
iret
rclb
dec
xchg
cmp
sbb
cmpsl
lods
cs
insb
dec
add
adc
and
pop
sahf
ds
loopne
jp
push
jl
mov
xor
mov
push
ljmp
or
push
push
outsl
sub
xor
mov
dec
mov
aaa
cltd
and
ss
cs
pop
mov
stc
xchg
aam
popf
rcr
cli
std
test
sub
mov
es
jns
fwait
std
push
or
push
call
popf
fs
out
push
xor
xor
xor
les
dec
ret
jae
fimuls
rorl
das
andb
out
and
mov
fstpt
cli
push
or
xlat
jl
jno
inc
clc
sahf
icebp
xor
cwtl
jo
ja
add
inc
call
or
mov
daa
lret
sub
out
mov
movsb
mov
cmp
xchg
jae
pop
cmp
out
mov
je
xchg
inc
dec
scas
cmp
and
mov
sbb
cli
out
xchg
imulb
sub
mov
mov
outsb
loopne
dec
popa
out
jns
test
or
inc
sbb
jb
sbb
inc
xchg
mov
into
add
or
pop
mov
pop
xchg
movsb
lret
sbb
and
mov
sub
loop
push
jmp
loopne
inc
mov
dec
xor
ret
int
lea
loopne
js
mov
mov
imul
int
bound
sbb
lret
inc
jle
hlt
xor
xchg
pop
jne
xchg
mov
rolb
cmpsl
and
xor
jmp
pop
ss
hlt
aas
mov
sub
dec
mov
or
mov
adc
aaa
or
cmp
mov
inc
fdivr
lret
repnz
dec
cmpsb
pop
inc
lock
inc
sahf
or
sbb
jb
out
rorl
cmpsb
out
cld
fiaddl
lcall
cmp
xor
inc
lock
loopne
ljmp
cmp
sti
dec
dec
xor
sbb
mov
sub
push
push
and
or
sub
aam
or
xor
stos
push
movsb
pop
cmpsl
push
mov
fiadds
insl
aaa
stos
popa
sahf
mov
mov
jmp
xchg
mov
push
pop
pop
imul
stos
test
xchg
xchg
lea
lds
addl
sub
dec
leave
lcall
cmpsb
inc
hlt
shrb
int
lahf
adc
inc
mov
inc
jecxz
mov
adc
mov
mov
leave
jae
enter
or
cmp
ficoms
dec
divb
jl
out
and
cmpsb
test
push
lcall
out
mov
push
xchg
jnp
jmp
pop
adc
mov
lahf
ljmp
xlat
lods
incb
cmp
ja
int
sbb
fsub
mov
fwait
icebp
enter
pop
mov
inc
push
sbb
add
add
cmc
adc
add
push
jne
in
cmpsl
aam
jmp
arpl
andl
inc
xor
pop
push
pop
mov
jmp
add
insb
data16
and
test
out
mov
sbb
jg
xor
scas
movsl
mov
lods
insl
jbe
cmp
call
mov
out
xchg
and
sti
stc
dec
insl
xchg
movsb
mov
sbb
push
push
and
mov
inc
pop
mov
sbb
fstpl
out
imul
sub
enter
inc
add
and
in
dec
add
dec
sub
fs
and
or
xchg
mov
jmp
aas
shufps
mov
mov
or
sbb
xor
cmp
call
repz
scas
mov
stc
popf
movsb
mov
jle
add
mov
add
ret
push
lds
cmpsl
pop
mov
mov
jecxz
mov
jecxz
stos
push
in
in
bound
hlt
ret
ljmp
jg
or
sbb
inc
inc
jno
adc
mov
inc
addr16
scas
scas
mov
cs
scas
adc
inc
rcll
pusha
mov
adc
pop
iret
loope
aaa
pushf
fiadds
es
out
and
or
lods
ljmp
mov
inc
cli
sub
xor
sbb
cltd
divb
cmp
sub
or
push
mov
lcall
shl
sarb
mov
jmp
pop
lcall
pop
mov
sbb
sub
cmp
aas
push
mov
imul
and
adc
sahf
cs
imul
lock
mov
ret
ret
js
rorb
arpl
xor
rclb
js
adc
fucomip
cmpsb
arpl
fldz
push
jge
mov
push
dec
pop
add
aam
sbb
loopne
das
xor
mov
dec
jb
pop
enter
aas
test
push
je
aaa
out
stc
sbb
mov
imul
imul
inc
or
repz
mov
inc
gs
and
sbb
addr16
sar
jecxz
sti
xchg
fnstenv
mov
lahf
jge
negb
sub
push
mov
lods
lods
adc
ljmp
xor
or
repz
and
std
mov
xor
nop
popa
inc
aam
repz
or
jp
test
ret
out
cli
inc
push
dec
add
dec
add
cmp
gs
cmp
insb
lret
jno
jnp
xchg
imul
sti
cmp
xor
mov
mov
jg
leave
sub
das
movsb
sub
push
jge
loop
shlb
popf
fwait
adc
into
aad
xchg
inc
enter
loope
jns
insl
sti
shll
js
add
inc
jecxz
pop
cmpsb
jae
pop
mov
push
mov
jo
lods
inc
stos
out
pop
mov
out
mov
loopne
push
in
lret
cmc
and
ljmp
rorl
gs
out
push
into
lea
add
out
rolb
out
ja
mov
sahf
aaa
dec
or
lock
mov
mov
daa
cld
pushf
or
mov
push
jae
insl
int
and
sti
jmp
adc
xchg
clc
inc
in
mov
cwtl
xor
inc
jecxz
push
dec
xchg
mov
mov
inc
jne
dec
icebp
gs
pusha
daa
pop
daa
mov
out
jne
stc
add
fadd
int3
lea
or
dec
inc
cld
inc
sbb
leave
push
stos
jmp
push
inc
je
jge
lea
sahf
pop
push
and
je
mov
loope
and
xlat
mov
adc
in
mov
das
loope
cs
fmul
shlb
mov
sub
xchg
adc
test
mov
or
iret
jmp
lds
inc
test
jle
pushf
rcl
outsb
shlb
push
dec
mov
mov
or
scas
imul
cmp
sbb
pop
mov
dec
push
push
stos
inc
fnstenv
cmpsb
pop
je
lock
jnp
adcl
dec
xchg
mov
icebp
push
sbb
jecxz
fs
or
push
adc
aam
mov
outsb
imul
xor
inc
pmuludq
dec
pop
out
push
sub
lods
mov
sbb
mov
cmpsl
leave
xchg
push
cmpsb
lahf
cmp
add
sbb
add
mov
add
mov
pushf
add
int3
mov
mov
lsl
out
xchg
xorb
shlb
or
aaa
or
adc
push
test
jne,pn
push
clc
lahf
adc
pop
and
mov
xor
out
dec
sarl
mov
adc
mov
pop
out
jg
cli
lds
mov
pop
xchg
int
mov
and
out
out
fnstcw
mov
roll
call
rol
pusha
fistpl
repnz
stos
sbb
popa
push
test
lret
push
enter
adc
sbb
or
and
aam
pop
lods
cmp
data16
sbbb
test
cltd
adc
pop
sbb
mov
scas
pop
int3
test
adc
int3
pop
ss
cmp
or
sub
sbb
lret
jge
fcompl
es
inc
arpl
andb
pop
fldenv
sub
cltd
aas
mov
sti
or
sub
loop
das
sub
pop
inc
jns
inc
push
xlat
lahf
es
movb
in
cmpl
push
xchg
mov
and
jb
repnz
pop
arpl
xor
les
sahf
or
and
fs
movsl
loopne
lods
test
jbe
jle
lock
push
add
cltd
lea
lcall
adc
lahf
mov
cs
cltd
gs
lea
cmp
inc
push
sbbb
fldt
xchg
in
add
ret
xor
loopne
outsl
inc
and
cmc
pop
jecxz
cli
dec
pop
dec
mov
mov
mov
outsb
lods
and
scas
xor
lock
pop
arpl
sub
jge
xor
into
or
sub
out
inc
inc
xor
xlat
or
insb
mov
cmp
dec
and
mov
icebp
mov
push
xchg
dec
sbb
outsb
jne
mov
rcrb
loope
sub
cmp
bound
adc
mov
sbb
xor
inc
pop
imul
movsb
xlat
dec
mov
int3
outsb
in
aam
sub
aas
or
ja
outsl
fsubs
adc
cmpxchg
aad
push
adc
inc
push
idivl
push
inc
inc
cmp
fwait
loope
arpl
push
dec
imul
cmp
scas
loop
daa
mov
ja
dec
push
cmp
aas
movsb
push
sahf
dec
lea
hlt
xchg
xchg
fistpll
aam
and
stc
mov
and
mov
push
mov
add
or
adc
clc
dec
out
lods
adcb
mov
movsl
into
push
adc
mov
add
cld
sbb
and
ljmp
and
mov
sub
rcll
mov
cmp
xchg
adc
mov
outsb
jnp
faddl
int
and
pop
int3
push
outsl
and
jl
xchg
dec
aad
mov
mov
shll
pop
scas
jecxz
ja
loopne
mov
insb
addr16
or
lcall
xchg
aas
dec
dec
dec
dec
cmp
xchg
and
xchg
inc
cmp
add
arpl
and
lcall
sbb
push
lahf
jae
jae
fstl
enter
mov
cli
test
out
inc
ret
push
idivl
and
dec
mov
ss
inc
jo
add
push
jbe
loopne
jns
mov
mov
lret
mov
inc
in
call
jbe
inc
jns
mov
imull
mov
enter
mov
push
mov
pushf
pop
jecxz
push
push
xor
dec
vmovhps
adc
mov
xor
dec
je
es
cmp
pushf
add
pop
fidivl
int3
das
cmp
adc
or
mov
das
cltd
int3
data16
and
sbb
lahf
pop
mov
clc
in
fwait
in
xchg
pop
sbb
jne
sbb
sub
outsl
jb
dec
dec
xor
int3
in
mov
clc
cmpsl
push
das
sub
mov
push
push
mov
rclb
enter
mul
lret
test
jo
pop
jp
xchg
js
cs
dec
mov
push
push
repz
popa
pusha
pop
bound
mov
xchg
jnp
scas
stos
or
jle
lods
sti
push
icebp
insb
xor
loop
jo
das
lret
lret
fs
xor
pushf
push
sti
int3
adc
repz
fadds
cld
stos
push
mov
iret
test
sbb
ffreep
jle
fdivr
mov
ret
sub
and
enterw
and
push
enter
jae
cmp
sub
xchg
pop
dec
mov
aam
dec
test
adcb
or
fmull
and
cmp
pop
mov
in
insb
icebp
js
pop
scas
cmp
jmp
lods
mov
aas
std
push
shlb
shl
xchg
xor
cmp
aam
pop
cwtl
test
jg
push
fcmovne
lcall
mov
loop
dec
sbb
mov
push
jae
dec
jle
sub
pushl
cmpl
shl
xchg
movsb
andl
cmp
out
sahf
ljmp
pop
cmp
ud1
test
xchg
les
sti
into
mov
outsl
add
and
lcall
int3
loop
push
flds
hlt
mov
mov
rcl
sub
mov
add
mov
pand
or
cmc
mov
in
push
cmp
stos
or
dec
lret
in
sub
ss
movsb
ror
icebp
shlb
and
mov
arpl
popf
dec
int3
scas
jge
leave
aas
or
fdivp
adc
ljmp
int3
testb
sbb
mov
sub
mov
pop
push
mov
loop
jecxz
mov
dec
mov
mov
push
insl
std
adc
int
mov
fwait
hlt
leave
push
mov
test
or
popa
insb
pushf
xchg
pop
xor
shl
test
mov
pop
pop
lods
jns
or
std
idivl
sbb
xorb
inc
sub
dec
jae
in
mov
out
imul
jp
in
fdiv
adc
mov
cmp
hlt
xchg
pop
push
cwtl
jl
inc
out
jp
mov
pop
mov
ds
cmp
je
ficoms
or
cli
rorb
push
sbb
fbstp
and
adc
test
adc
repnz
ret
push
mov
call
mov
int
cmpsb
pop
pusha
pop
test
popf
push
lcall
rorb
sub
je
in
mov
pop
xchg
jmp
dec
adc
or
jb
into
mov
pop
gs
pop
inc
test
mov
add
mov
and
xchg
mov
mov
ja
mov
test
pop
fsubs
pop
inc
mov
test
cld
loope
xor
or
mov
inc
rol
mov
ljmp
leave
pusha
das
lds
cmc
pop
sete
mov
es
dec
xchg
movsl
xchg
std
ret
negb
dec
or
das
loopne
sbb
test
adc
mov
xor
pop
inc
dec
cmp
pop
mov
xor
test
sbb
fnstenv
xchg
cwtl
push
mov
test
mov
filds
roll
cmpsl
out
or
and
mov
cmp
imul
mov
jecxz
cld
xchg
adc
push
movsl
aas
mov
jmp
idiv
mov
loop
iret
lea
jg
in
pop
mov
xchg
mov
jae
jge
cmp
idivb
add
mov
and
mov
aad
out
sbb
in
push
int
data16
mov
aad
icebp
lock
mov
lret
mov
lods
mov
sahf
imul
jbe
ss
jne
insb
and
fcomi
std
or
sahf
stos
inc
rcl
adc
fwait
les
cld
frstor
and
jae
xchg
sahf
add
xchg
enter
sbb
divl
es
test
ret
mov
jbe
sti
cmp
sbb
pop
push
xor
adc
movsl
pushf
xor
mov
sbb
hlt
test
xorb
scas
mov
push
push
imul
test
push
pushf
js
bound
pop
ja
loope
dec
pop
rorl
dec
outsl
lods
pop
fimull
into
gs
add
xor
stos
jp
lock
out
imul
push
test
mov
inc
and
sub
shr
mov
inc
push
xor
push
push
call
add
test
mov
mov
addl
pop
jl
xor
rolb
out
leave
popf
pushf
adc
negb
seto
inc
xchg
fdivrs
jo
loope
mov
jl
outsl
or
cmp
aad
in
mov
mov
xor
sbb
inc
inc
xchg
fsubl
movsb
fidivs
mov
inc
mov
or
stc
inc
movsl
sub
cmpsb
inc
outsl
cmovge
mov
xchg
xchg
nop
movsl
je
mov
je
xchg
sbb
sub
mov
cmc
ja
scas
in
lds
sub
sarb
add
lds
xchg
es
xorb
leave
push
rorb
outsl
sbb
dec
jp
lea
int3
lcall
das
mul
xchg
and
iret
push
jno
or
cmp
pusha
scas
es
dec
imul
es
mov
sub
and
fmull
pop
js
dec
ja
or
fdivs
pop
or
arpl
or
add
sub
mov
orl
dec
ljmp
fistpll
adc
pop
sar
xor
outsb
fdivrl
lahf
fdivr
enter
js
rolb
clc
mov
push
mov
push
ljmp
cmp
loop
cmc
dec
lock
out
xor
add
movl
test
mov
stos
inc
gs
xorl
rorb
and
push
int
and
fistpl
push
xor
in
sub
push
fucomip
sub
add
js
pop
insb
push
loop
pop
rep
inc
addl
pop
loope
xchg
in
jp
insl
and
testb
sbb
test
jp
mov
mov
cli
xchg
fdivrs
movsb
mov
fnstcw
push
pushw
dec
out
scas
mov
mov
incb
js
jmp
addr16
lahf
xchg
data16
arpl
lahf
icebp
pop
lret
pop
mov
cli
int3
add
loop
repz
inc
lds
imull
outsb
inc
push
pop
lret
pop
xor
mov
pop
repnz
jb
or
pop
push
adc
push
loopne
xchg
ret
inc
jns
pop
shrl
not
insl
sub
mov
inc
lahf
lahf
dec
loop
push
or
mov
loop
outsl
test
jecxz
xor
jns
jnp
and
mov
ss
retw
pop
push
add
lods
outsb
test
push
or
add
jbe
call
loop
push
mov
mov
adc
or
shrb
mov
cltd
mov
movsl
stc
pop
ret
push
inc
cmp
push
adc
mov
add
pusha
mov
jo
push
add
mov
test
xor
adc
push
xchg
jle
cmc
dec
fsubrs
or
xlat
add
clc
push
das
pop
adc
jo
and
jmp
mov
xor
push
or
sub
ljmp
shr
adcl
mov
out
insb
rcll
fldl
sbb
and
mov
mov
fxch
xchg
scas
pushf
push
mov
push
rclb
ret
sbb
add
int3
sti
hlt
and
imul
jmp
inc
out
out
cmc
jbe
jnp
ds
xlat
lods
in
lcall
push
xor
pop
mov
jne
push
xor
out
pop
and
mov
mov
cmpsb
aad
lret
rcrl
push
jo
push
sub
ljmp
addr16
mov
or
xchg
ret
imul
inc
subl
xchg
insb
fdivrs
cs
fstpt
cmp
sub
sub
dec
lods
rcrb
scas
pop
xlat
mov
sbb
and
fs
lds
fistps
andb
es
arpl
add
or
mov
xor
jno
je
rcl
lods
fcoml
lahf
mov
test
add
sbb
xchg
push
out
btr
fdivrl
add
stos
pop
mov
cmc
leave
and
cmp
cmp
sarl
mov
movl
or
pop
lods
mov
inc
jae
dec
pop
adc
xchg
sbb
stos
cltd
das
loope
and
push
roll
push
and
ljmp
add
mov
adc
rorl
inc
mov
adc
pop
stos
in
mov
repz
add
lcall
pop
adc
add
or
mov
hlt
ret
aam
pop
xlat
jmp
lds
cltd
mov
sub
xchg
sub
shll
daa
mov
xor
mov
push
movsl
adc
lds
mov
hlt
out
mov
imul
cmp
lret
shlb
sti
adc
rcl
stos
xor
and
data16
test
mov
in
lock
xchg
dec
outsl
inc
push
insb
daa
addb
insb
dec
arpl
cmc
cli
ss
mov
iret
sbb
ja
lods
cld
and
pop
pop
mov
lret
jbe
xchg
pop
leave
jbe
xlat
sbb
daa
cltd
pop
or
pop
sub
jno
mov
out
push
pop
pop
sahf
faddl
outsl
or
ret
hlt
adc
out
add
call
jl
je
arpl
adc
push
es
mov
dec
jnp
outsl
cmpsl
rcll
ret
ret
setg
int
xchg
scas
scas
xchg
adcb
xorb
xchg
ss
xor
push
ss
jmp
jnp
sbb
add
mov
fists
mov
add
icebp
push
add
pop
es
scas
data16
outsb
ret
sbb
and
cs
mov
mov
jnp
inc
movsl
arpl
clc
adc
mov
mov
icebp
xchg
imul
ljmp
insb
pop
jp
cmp
xchg
cld
adc
add
xor
xchg
xor
push
orl
cmp
jbe
repnz
and
js
sbb
aam
and
ficoms
or
fsubl
or
aad
cmpsb
jl
cli
leave
iret
add
push
ss
sarl
xor
fs
fisubrl
mov
xor
les
dec
es
mov
enter
push
and
xchg
fucomi
loope
insb
xor
aas
dec
outsl
mov
sbb
adc
insl
adc
xor
or
les
clc
int
add
out
lds
mov
ljmp
mov
jnp
sbb
mov
es
mov
jbe
loopne
testb
fisttpll
inc
and
push
std
and
sub
mov
inc
scas
addr16
ja
ljmp
repz
loope
mov
xchg
pop
and
push
lea
mov
and
scas
in
xchg
jo
push
xchg
adc
jp
mov
mov
in
lods
mov
in
fcomi
dec
adcl
xchg
dec
and
icebp
cltd
mov
and
cmp
push
inc
and
pusha
les
or
cmp
rcrl
xchg
stos
test
sub
scas
mov
add
ds
mov
dec
pop
mov
jnp
outsb
cmpl
insb
sub
clc
mov
scas
rolb
pop
mov
push
lahf
cli
ret
dec
sti
mov
pop
sub
ss
adc
push
into
mov
cmp
cmp
mov
and
in
in
iret
test
lods
insl
in
adc
fnstcw
sub
sbb
xor
flds
nop
out
and
sbb
jo
xor
aad
push
stos
sbb
sbb
lret
adc
xchg
test
mov
aaa
rorl
cmpsl
push
jmp
rolb
jae
icebp
inc
call
fwait
or
and
shll
bound
dec
js
xchg
bound
mov
xchg
das
int
fistpl
lret
cmp
add
mov
in
add
nop
fdivp
mov
scas
mov
cmp
mov
adc
xor
add
aaa
int3
and
cmp
pushf
inc
out
and
mov
insb
jle
pop
push
push
aaa
xchg
mov
aam
pcmpgtd
dec
in
sub
or
out
cmp
mov
sub
iret
adcl
xlat
cmpb
int3
and
xor
sar
fisubrl
lds
and
mov
cmp
shrb
stc
mov
daa
cmp
push
cmp
mov
cmpsl
xchg
xchg
push
stos
mov
rclb
cmpsb
pop
loopne
push
cmp
stos
pop
lods
ss
mov
aam
lea
xor
pop
add
repz
clc
fiaddl
mov
cmpsl
mov
andl
ss
cmc
insl
cmpsl
cmp
outsl
xchg
fstps
mov
jp
xor
mov
lret
xor
xor
pop
push
lret
push
mov
add
mov
test
arpl
push
cmp
sub
push
xchg
jno
xor
popa
and
adc
add
mov
xor
sbbb
mov
fwait
repnz
fldcw
and
mov
jns
fnstcw
add
sbb
cld
jl
lahf
cli
iret
fnstenv
adc
shll
pop
jge
dec
xor
push
es
bound
add
and
push
fistl
inc
lret
lods
sbbb
fistps
xor
mov
mov
xchg
repz
mov
xchg
and
sbb
ja
mov
push
xor
add
ljmp
mov
insb
stc
sahf
gs
pop
push
andb
add
mov
cmp
pop
cmp
or
jecxz
inc
shr
sub
dec
mov
xchg
push
cmc
push
jecxz
fsubrl
dec
cmp
push
mov
inc
stos
inc
jne
idivb
cmp
cld
xchg
mov
into
xchg
sbb
lcall
xor
xchg
ds
adc
and
jae
push
dec
xor
pop
jae
lods
mull
push
jp
xchg
xor
xor
js
mov
push
push
jns
xchg
xchg
insl
shll
push
push
adc
dec
js
inc
jns
jno
inc
lods
add
addr16
lds
dec
or
scas
scas
cmp
push
icebp
lea
xchg
nop
push
cwtl
sbbl
jnp
jnp
ss
cltd
lret
mov
orb
pop
shll
data16
and
push
inc
fcmove
scas
sub
nop
mov
sub
jns
mov
pop
jne
sbb
adc
mov
add
popa
movsb
dec
cmp
frstor
mov
not
out
xor
jl
sti
mov
repz
xchg
xchg
pop
je
pop
adc
rorl
ljmp
scas
call
push
mov
inc
out
mov
jl
sub
pop
jp
dec
in
mov
or
add
xchg
cmp
rclb
mov
fwait
sahf
out
push
sbb
aas
inc
push
dec
ror
stos
mov
push
and
out
std
mov
inc
push
outsb
lret
xchg
xorl
not
add
cmp
pop
xor
ljmp
push
adc
xchg
iret
push
xor
imul
mov
fnsave
das
pop
fbld
repnz
push
and
cmp
sub
test
test
or
xchg
shlb
jno
adc
mov
add
std
into
jecxz
test
mov
cmp
cmp
loopne
lds
mov
push
js
mull
jle
outsb
ss
aad
add
pop
lds
pop
ja
rolb
adc
ds
inc
mov
loopne
sbb
sbb
mov
jecxz
jo
out
and
test
testb
mov
pop
lea
loopne
in
cs
xor
frstpm(287
mov
cmp
hlt
out
push
dec
aam
movsl
xchg
dec
jae
jle
add
sti
adc
es
and
ja
jmp
sub
loop
icebp
inc
pop
nop
push
ret
scas
lcall
scas
les
loopne
sub
add
sbb
test
mov
cwtl
and
adc
jne
sbb
rorb
in
push
aas
pop
mov
clc
sarl
adc
xor
dec
sbb
sahf
fsincos
loopne
rclb
es
movsb
cmp
mov
mov
pushf
push
testb
movsb
dec
aas
mov
push
sub
lods
notb
cwtl
dec
imul
cmp
add
cmp
loop
icebp
lods
mov
fwait
sbb
cmp
inc
rorb
cmp
push
faddp
lret
sahf
lahf
enter
add
sub
rcll
adc
push
in
movsb
jne
sar
daa
roll
or
cmp
icebp
in
add
ljmp
pusha
or
ja
fidivl
add
out
les
xchg
mov
fldcw
mov
aam
fiaddl
and
mov
subb
push
pusha
das
lds
lock
sti
nop
sub
les
mov
out
cwtl
sbb
push
idivb
addr16
into
imul
ljmp
adc
add
js
cmp
scas
lahf
push
or
cmp
repnz
inc
test
inc
adc
mov
movlhps
xchg
xor
sub
or
imul
test
push
xor
pusha
sbb
iret
ret
mov
hlt
imul
ljmp
dec
and
cmc
sub
unpcklps
enter
or
xor
movsb
iret
and
fdivs
test
pusha
outsb
adc
cmp
fidivl
sbb
or
icebp
jb
repnz
movsl
int3
push
out
push
pusha
test
arpl
pop
in
mov
hlt
and
ss
stos
je
fsubrs
sbb
xlat
das
sbb
adc
das
xchg
ret
stos
xchg
inc
dec
mov
adc
mov
mov
push
sbbb
in
mov
xor
loopne
adcb
roll
jmp
stos
sbb
cmp
ret
push
dec
aaa
mov
aaa
in
aam
nop
jns
pop
shll
cmp
pushf
dec
push
lock
xchg
mov
lcall
pop
mov
cmpsb
mov
sbb
pop
or
imul
mov
mov
or
in
loop
in
pop
cmp
popa
push
gs
scas
or
movsl
sti
daa
jne
cmp
adc
je
mov
cmpsb
push
inc
nop
push
inc
lahf
xor
pop
sti
sbb
mov
cmp
repnz
jo
mov
push
xor
push
jl
push
push
jo
adc
aaa
repz
or
push
cli
ret
cmp
push
inc
jns
and
mov
js
dec
lods
pop
pop
push
pusha
and
hlt
cs
mov
or
adc
insb
sub
xor
je
test
mov
sarl
or
cwtl
jo
arpl
dec
ja
sub
xor
shl
inc
xor
xchg
or
lcall
mov
fcom
insl
jo
pusha
sahf
in
mov
addr16
int3
sbb
or
pop
push
mov
dec
add
and
dec
in
je
fisubl
xor
mov
add
push
call
pop
xchg
xchg
jo
cmpsb
inc
xor
mov
mov
jmp
fists
out
push
ja,pn
sar
add
jle
adcb
adc
push
mov
pop
add
jno
or
orb
cmp
cmp
stc
fchs
int
fsubs
cmp
pushf
aaa
mov
cmp
xchg
mov
inc
out
bound
push
cs
loopne
push
mov
cltd
mull
in
and
lret
or
and
into
insb
mov
shlb
adc
xor
shrb
adc
ljmp
dec
add
daa
int3
xchg
lods
xchg
gs
loope
xchg
pop
das
adc
or
dec
pop
jae
sub
mov
flds
cs
jne
cltd
ds
out
lods
mov
sub
sbb
arpl
sbb
mov
mov
dec
jmp
bound
mov
jns
js
dec
xchg
adc
sub
sbb
mov
ja
xor
dec
add
stos
aas
push
jl
sbb
test
jg
mov
dec
xchg
xchg
pushf
pop
icebp
xchg
mov
add
cmp
push
mov
push
push
fnstenv
js
pop
mov
aam
fsubs
dec
or
push
and
stc
test
mov
repnz
adc
in
xor
jne
jnp,pt
push
iret
push
pop
js
sbb
xor
out
sbb
cmc
test
xchg
stc
or
xchg
stos
mov
repnz
or
jp
adc
pusha
cs
jbe
mov
aad
loopne
inc
xchg
pushf
pushf
bnd
outsw
adc
out
sub
sbb
std
xchg
mov
fs
aaa
push
pusha
popf
lea
stc
loop
popa
jb
adc
push
sub
mov
es
mov
daa
xchg
rcrl
stc
xchg
or
out
fidivrs
jmp
cmp
xor
sub
inc
push
dec
in
enter
pop
mov
mov
jo
cli
arpl
sub
push
jmp
std
sbb
dec
or
and
test
fistps
addr16
lds
sbb
sahf
clc
xor
ffree
cwtl
jp
cwtl
jp
inc
mov
lods
adc
pushf
mov
xor
test
dec
mov
cld
bnd
shlb
aaa
push
sub
sub
sub
xchg
int
cmpsb
test
sti
pop
sbb
ja
je
pop
into
mov
cmp
rorl
cmp
imul
mov
cli
cmpsl
scas
repnz
jp
cmp
lods
add
sub
cmp
and
pop
cmp
dec
dec
adc
ror
fsts
cwtl
std
js
jge
out
into
pop
ja
mov
or
iret
mov
fwait
outsb
and
dec
pop
jl
cvtps2pd
call
push
push
pop
repz
rolb
int
and
fidivl
push
mov
xor
mov
pop
cmp
xchg
mov
in
add
dec
cmp
sub
push
shll
mov
std
ljmp
call
push
insb
cmp
sub
mov
or
mov
mov
mov
arpl
das
sbb
add
sahf
xchg
and
dec
mov
xor
sbb
mov
xchg
loopne
inc
je,pn
pop
in
stos
mov
fildl
sbb
notb
je
xchg
fdivp
xlat
enter
pushf
pushf
test
push
add
sbb
xchg
jnp
push
and
mov
inc
sub
dec
pop
dec
outsl
jl
cmp
sub
shll
movsb
mov
dec
sub
movsb
outsl
stos
imul
adc
js
pop
xchg
pop
cmpsl
mov
ret
push
iret
shlb
mov
bound
loop
push
ret
insb
xchg
adc
test
xchg
xchg
pop
out
add
stos
cwtl
mov
in
push
push
cmp
sti
ljmp
sub
popf
in
inc
mov
xchg
es
fwait
xchg
lahf
cmp
sahf
outsb
sbb
into
mov
mov
dec
mov
mov
sbb
andl
movsb
jnp
fdivp
rclb
cmp
cltd
cmp
sbb
fwait
mov
xchg
dec
arpl
insb
mov
xchg
shr
inc
cmp
cmp
and
ja
dec
jp
pop
mov
bound
push
mov
lahf
popa
rorl
adc
pushl
mov
sbbb
outsb
std
out
std
push
icebp
and
lods
test
je
inc
lods
cltd
cmc
push
test
js
int3
out
mov
popa
xor
imull
inc
insb
je
jge
inc
cli
jne
mov
pop
jno
sar
repz
xchg
xchg
and
test
int
inc
inc
xlat
and
inc
push
adc
fistpl
data16
popf
jl
jbe
cmp
fistps
mov
add
sbb
sbb
sbb
pop
inc
and
and
in
loopne
push
ds
and
int
loopne
cld
add
daa
pushf
sub
push
popf
aad
pop
test
loop
push
test
mov
or
mov
fsts
repnz
and
test
clc
imull
and
mov
push
push
out
sbb
je
lea
cmp
andl
fists
xchg
adc
outsb
dec
inc
sub
dec
das
xchg
je
imul
fwait
push
jne
jbe
sbb
pop
jecxz
std
or
push
ljmp
jne
jnp
sbb
xlat
dec
sbb
mov
pop
jp
shlb
lret
mov
int3
test
jecxz
cmpsl
jg
fisttpl
lret
lds
inc
ret
pop
insl
push
fistpl
mov
sbbb
adc
xor
das
xor
mov
mov
dec
mov
icebp
jnp
loope
mov
or
inc
push
call
jecxz
xorl
lds
jo
push
test
mov
loop
fdiv
push
pop
ja
out
dec
pop
int3
add
js
and
cmpsl
push
jmp
mov
pop
mov
loope
cmp
mov
push
cmp
insb
add
cmc
rcll
jne
cmc
jns
or
sbb
outsl
jmp
adc
pop
inc
push
fstp
sub
cmpsl
xchg
xlat
lahf
sarb
cs
jns
mov
jno
push
mov
lahf
dec
test
jae
leave
lock
insl
sub
jno
add
gs
mov
add
and
jl
fmulp
push
push
sbb
mov
pop
or
and
pusha
out
push
mov
mov
es
mov
sbb
pop
inc
movsl
loope
jnp
int3
fcoml
lcall
push
dec
jnp
mov
jo
mov
pop
into
addl
xabort
mov
mov
repnz
xor
test
popa
sbb
cmp
add
jecxz
push
jne
int
dec
or
stos
cmpsl
inc
sbb
scas
nop
imul
cmp
test
inc
add
push
jge
adc
je
push
cli
fldcw
xchg
sub
pop
das
test
cmp
mov
cmpl
js
popa
inc
dec
and
xor
int
or
push
jb
and
ljmp
arpl
scas
inc
mov
inc
jno
lret
mov
jb
or
cmpb
out
xchg
jae
pop
dec
xlat
out
push
aaa
ss
mov
lret
or
sbb
mov
outsb
adc
pop
mov
inc
and
cmpsb
jge
add
inc
lods
and
sub
cmp
jmp
jecxz
lock
ror
cmp
sub
scas
fsts
shll
int3
jge
jae
xor
jb
int3
mov
popa
and
call
add
push
mov
in
sub
mov
xor
pop
adc
repnz
cmc
and
inc
lcall
cmp
jmp
sbb
subl
cld
fidivrs
fs
int
fwait
add
popf
mov
sahf
push
xchg
sbb
mov
insl
jge
sub
ret
cltd
scas
jle
cwtl
add
add
add
aaa
fiaddl
pop
or
dec
aas
xchg
sub
outsl
mov
push
jnp
xor
out
dec
sbb
cwtl
pop
inc
insb
fdivrs
sbb
test
mov
and
rcll
lock
jae
or
iret
or
pop
das
inc
push
mov
cmpsb
cmp
loope
loope
je
adc
adc
je
mov
sub
pop
mov
js
xchg
fs
lock
std
dec
inc
data16
neg
or
jmp
adc
sti
clc
out
mov
xor
push
movsl
jae
stos
and
inc
js
int
mov
adc
sbb
nopl
pop
xchg
mov
pop
jnp
adc
inc
mov
das
in
ret
cmp
in
aad
and
andl
or
jbe
inc
out
xchg
scas
push
out
lds
mov
pop
dec
sbb
es
sbb
sbb
in
jno
jnp
lcall
lock
test
pop
mov
lret
popa
aam
sbb
scas
dec
sbb
sub
pop
insb
lret
sbb
xor
lahf
out
pop
ret
xor
sbb
or
pop
test
popa
adc
or
sub
mov
popf
stos
psrlq
mov
es
mov
pop
xor
testl
push
sahf
lods
dec
and
mov
aam
dec
loopne
jne
xchg
sbb
pushw
jns
pop
or
mov
mov
mov
mov
and
std
incl
push
mov
cmpsb
insb
mov
adc
jecxz
cmp
lds
adc
inc
cli
iret
aaa
jl
xor
adc
push
mov
inc
jmp
push
outsb
cmp
jge
jl
xor
inc
adc
add
sub
pop
pop
daa
shl
push
jo
sub
pop
adc
xchg
jle
adc
and
sbb
cmp
arpl
push
push
outsb
xchg
cmpsb
int
rorb
and
push
sbb
mov
cli
mov
pop
dec
dec
xor
ret
cmpsb
iret
cmp
add
jp
stos
mov
fidivrl
cmp
xor
or
pusha
xor
jmp
cmc
mov
mov
shll
cmp
hlt
sub
cmp
test
cltd
ss
int3
push
push
mov
mov
push
mov
xor
in
jmp
in
add
jle
test
lahf
jo
shrb
addb
in
add
test
bnd
mov
mov
arpl
fwait
adc
fnsave
movsl
data16
jb
or
shlb
mov
ret
in
int
push
into
lret
in
mov
pop
jp
int3
xchg
sahf
mov
loop
test
cwtl
mov
out
pop
aaa
aam
sub
or
dec
sarl
sbb
dec
inc
sub
and
mov
mov
jge
jge
cmc
xchg
mov
cmp
fsubrl
cwtl
add
fidivs
push
mov
and
loop
lret
rcrb
dec
rcpps
sub
mov
jecxz
lea
mov
ds
push
imul
jle
push
hlt
xor
cmpsl
loopne
mov
aaa
xor
pop
cltd
push
insl
cmp
jl
pop
jbe
cmpsl
fisttps
push
clc
jp
mov
std
test
fsub
sub
mov
and
cli
out
jp
shrl
out
xchg
loop
call
pushf
popa
and
enter
mov
enter
jb
adc
sbb
sbb
or
xchg
test
mov
and
es
nop
adc
jo
lock
pushf
cltd
les
popf
cmpsl
pop
sbb
inc
in
out
lcall
mov
xlat
sbb
outsl
inc
imulb
jnp
push
stc
xchg
sub
ljmp
inc
insb
cmpb
stos
mov
popf
or
js
xchg
jge
push
jns
or
mov
pop
add
stc
add
and
movsb
cwtl
push
or
dec
les
fwait
aas
rorb
inc
xor
test
fcompl
jb
adc
sub
xor
stos
xchg
sbb
xchg
enter
cmp
scas
loop
fwait
sub
jg
inc
push
inc
cmp
gs
cli
daa
orl
jno
lret
lahf
adc
cmp
orl
mov
leave
test
cmp
mov
shr
icebp
xor
mov
test
jmp
pop
inc
fnsave
lahf
xor
adc
dec
dec
inc
sti
movb
aas
lret
mov
call
shrl
rcrl
das
ljmp
mov
sbb
enter
cmp
xchg
int3
or
stos
cs
mov
dec
jb
xorb
and
jle
lcall
xchg
mov
add
inc
adc
ret
mov
lea
lcall
out
xchg
cmp
je
inc
push
mov
push
adc
xchg
outsl
jno
pop
and
pop
xor
or
nop
inc
inc
jp
hlt
fcoml
jg
cli
adc
xor
je
addr16
test
lahf
mov
loop
jge
push
mov
into
cmp
cltd
pop
and
and
push
scas
xor
xchg
xlat
inc
mov
add
xchg
mov
sbbb
test
jp
pop
jle
fmull
arpl
movzwl
data16
xlat
lds
xchg
jbe
mov
xchg
stc
int3
or
imul
sbb
dec
mov
fsubp
adc
rcll
int
in
lds
cld
lcall
add
xor
push
mov
jnp
shlb
cld
scas
cmc
xchg
add
test
mov
nop
lods
mov
and
cltd
dec
and
mov
xchg
or
sub
push
pop
aaa
popf
ljmp
sub
stos
inc
xor
sub
js
and
stos
sub
rorl
stos
outsb
ljmp
es
aas
jne
jo
mov
icebp
xchg
mov
add
fwait
pushf
pop
pop
sbb
addr16
rolb
popf
jmp
and
icebp
cmpsl
mov
pop
adc
xor
pop
pop
sub
fdiv
outsl
adc
sti
lea
xorb
mov
daa
add
ljmp
push
gs
adc
das
adc
fbld
cwtl
sub
add
inc
mov
rcr
mov
mov
insl
jb
or
leave
test
rolb
outsb
pop
inc
xor
syscall
dec
jns
inc
mov
push
aas
pop
addb
inc
hlt
jbe
mov
iret
or
fnstcw
sarb
dec
push
into
sbbb
movsb
cli
jle
push
scas
imul
fbld
scas
shl
ljmp
psubb
xor
mov
sbb
add
add
in
mov
ljmp
popa
lcall
mov
insb
stos
sbb
inc
xor
push
lods
push
lods
jne
mov
loopne
adc
std
mov
jbe
lods
sahf
sub
mov
enter
jo
push
mov
sti
jge
lock
sbb
cmp
cmpsl
fisubrl
sbb
call
imul
aaa
pop
repz
and
int
bound
pop
out
lret
in
stos
lods
int
sarl
sbb
cmp
int3
mov
lock
imul
cmp
cli
xor
sbb
mov
inc
mul
and
or
enter
pop
sbb
adc
pop
stos
dec
pop
hlt
call
aad
or
mov
pushf
imul
repz
outsl
push
mov
lahf
mov
ljmp
sti
movsl
scas
lds
sbb
out
jbe
xor
sub
sub
pop
pushf
inc
add
pop
ljmp
lret
adc
cmpsl
mov
inc
daa
jecxz
imul
loopne
fcmovnb
xchg
movsb
rep
flds
inc
or
sar
push
sbb
sbb
mov
mov
mov
out
into
popa
arpl
js
lds
xchg
jg
mov
insl
or
cmp
mov
add
in
test
jge
push
scas
je
dec
mov
sbbl
iret
mov
mov
test
mov
sarl
pop
cmpl
int
movsl
cmp
fmull
fcmovnb
sbb
fs
mov
mov
fmull
hlt
cmc
into
mov
dec
or
adc
lea
sti
xor
jb
stos
clc
or
inc
jle
cmp
dec
adc
int3
add
and
add
jmp
mov
mov
test
jno
sub
pop
jp
xor
sbb
nop
ss
fisttpll
pop
in
pop
data16
imul
cmp
test
int3
cwtl
mov
mov
rcrl
stos
xchg
divl
ljmp
test
inc
inc
cmp
arpl
inc
daa
xor
fxch
test
mov
push
pop
loope
fcom
dec
push
test
pushf
or
adc
lcall
shll
rcrl
and
fsts
leave
loope
mov
cltd
loope
ret
add
jl
push
rorb
ja
cmp
sub
and
jmp
sub
lock
push
pop
cltd
and
xchg
sahf
mov
pop
cltd
jns
shll
fistpl
mov
dec
mov
jmp
inc
mov
imul
outsl
fsubs
gs
je
mov
add
popa
jae
and
and
adcl
into
icebp
dec
jp
sbb
push
xor
and
mov
ret
insb
pusha
mov
sub
xchg
int
aad
ja
fdivrs
notb
or
lock
adc
rclb
sub
cmp
int
cltd
je
dec
iret
push
rcrl
out
imul
xchg
cwtl
lods
icebp
test
pop
mov
test
in
sub
dec
jge
jb
push
loope
std
jnp
pop
push
and
out
les
pusha
and
loopnew
xor
int3
jno
jns
arpl
mov
test
add
scas
shlb
in
scas
nop
xchg
cmp
jno
adc
gs
sub
out
mov
ljmp
fs
push
addb
fwait
insb
mov
jno
gs
push
daa
pushf
adc
mov
or
sub
adc
lret
push
pop
outsb
cmc
das
adc
aam
jle
out
jg
cmp
ficoml
mov
xchg
add
and
cmpsb
jl
pop
aaa
jle
test
stos
scas
dec
mov
outsb
test
es
iret
lret
sbb
xchg
mov
jl
fiadds
bound
test
sub
cmp
and
jge
dec
cmpsb
imul
out
roll
dec
jl
add
inc
outsb
cs
lret
xchg
aas
rcll
ret
in
dec
movsl
dec
pop
jnp
lods
or
xor
enter
push
sbb
xchg
add
jnp
xor
int3
outsl
mov
and
inc
inc
mov
lret
divb
ds
jnp
jbe
jl
xlat
push
pusha
jb
cmpsb
cs
hlt
or
and
inc
lret
adc
out
xor
mov
mov
movsl
jo
leave
mov
cmp
cli
push
insl
push
sti
scas
rcl
cmp
xchg
movsb
cltd
sbb
sbb
inc
dec
out
stos
inc
shlb
cli
iret
jnp
inc
js
fs
inc
sbb
cli
cltd
mov
pusha
ljmp
fsubl
int3
add
fs
leave
cmpsb
xchg
adc
adc
out
xor
out
int3
scas
into
inc
loopne
movhps
in
in
and
idiv
mov
dec
cmp
ret
cld
call
and
cmp
ss
add
xchg
xorb
mov
sub
sub
mov
and
fists
hlt
repnz
lahf
mov
pop
xor
mov
aad
js
sub
jl
xchg
jae
and
ret
out
cs
ss
add
jnp
das
ds
cmp
mov
inc
scas
xchg
xchg
in
pop
xchg
imul
xchg
mov
push
stos
and
mov
mov
lock
gs
jge
dec
adc
xchg
and
fmuls
fnstcw
fwait
sub
aad
mov
test
mov
or
lods
std
movsl
popf
movb
sbb
pop
pop
daa
push
mov
loopne
test
fnstsw
pop
mov
mov
mov
jmp
fcmovbe
subl
call
ret
pop
fiaddl
push
aas
sahf
call
mov
sbb
hlt
cwtl
lods
into
or
push
or
mov
loope
xchg
not
xor
shl
aas
test
in
xchg
and
es
xchg
popf
add
gs
xchg
mov
inc
aad
lcall
or
repnz
inc
inc
fcoms
push
emms
add
jl
push
jbe
lods
popf
mov
ja
insb
nop
lods
inc
scas
popw
lock
xchg
out
inc
push
jmp
cmpsb
scas
jmp
xchg
popa
xchg
popf
int3
aad
xor
or
inc
cmpsb
add
jmp
cs
popa
hlt
aam
pop
xchg
mov
les
adc
inc
test
es
xor
add
aam
xchg
jl
inc
subb
mov
inc
add
sbb
push
test
push
cltd
lea
jb
sub
push
jmp
rcr
push
subl
cld
test
arpl
pop
jmp
sbb
xchg
shr
xchg
adc
dec
or
pop
pop
mov
sarb
pop
out
mov
lret
sbb
and
fucom
dec
dec
rcl
jge
cmp
and
imul
and
xor
in
insl
xchg
add
cs
les
mov
dec
cmp
jg
and
adc
inc
or
sbb
notl
popf
mov
adc
cld
incl
xchg
jbe
sbb
mov
loopne
stc
add
dec
loopne,pt
mov
jp
in
push
push
lds
and
outsl
shll
mov
lds
xchg
jp
out
or
push
add
and
xor
sti
cmp
mov
fstps
ficoml
mov
loope
add
and
daa
mov
fmulp
dec
fcompl
or
mov
cmp
or
aam
or
push
and
mov
movsb
cs
xchg
mov
pop
push
mov
jne
out
scas
repz
sub
and
jl
sub
push
xchg
loopne
pop
jns
imul
test
scas
push
scas
push
cmpsb
sub
test
subb
popa
arpl
aaa
xor
mov
mov
jmp
push
mov
push
aad
popa
movsl
scas
mov
loope
add
test
ret
dec
inc
add
arpl
push
gs
add
push
mov
xor
bound
ret
ror
inc
and
in
fcoms
xor
cli
lds
sub
mov
xchg
aaa
cmp
data16
fwait
aaa
and
cmc
js
adc
clc
lret
loop
pop
outsl
lock
sub
xor
push
push
iret
jns
xor
xchg
add
pop
mov
outsl
test
lea
jle
cmp
into
in
sub
xchg
lock
xchg
mov
cwtl
fstpl
in
xorl
push
fcmovb
xor
shrl
xchg
jp
test
mov
mov
jl,pn
fs
xor
push
enterw
std
mov
xorb
jmp
movsb
add
insb
sub
pop
or
and
xchg
loopne
jecxz
sti
push
stc
mov
jle
idiv
out
scas
loope
fbstp
push
mov
fiaddl
fdivrs
out
hlt
outsl
popa
iret
or
add
or
mov
lods
nop
sub
fbstp
and
jo
test
das
ret
stos
js
repz
jne
outsb
push
inc
dec
gs
adc
mov
or
lods
and
ret
stc
sub
mov
adc
mov
jle
loope
inc
and
and
mov
pop
cmc
negb
jo
dec
xor
sbb
mov
daa
jns
and
mov
cmp
rorb
mov
cmpsb
pusha
xchg
movsb
or
es
scas
adc
sub
sahf
and
pop
mov
popa
fwait
scas
addr16
push
orl
push
arpl
inc
mov
dec
sub
xor
ljmp
fcmove
xlat
sub
jbe
adc
xor
icebp
sub
dec
mov
and
cmp
xchg
jecxz
insb
lcall
adc
mov
pushf
push
insl
push
sub
or
add
and
lea
or
mov
jmp
dec
dec
outsl
ret
sub
xchg
fs
dec
pop
fcmove
sbb
mov
ss
sbb
xchg
cmc
clc
adc
hlt
fnsave
aaa
dec
popf
in
fwait
xor
dec
ss
and
xchg
fcmovnu
cs
das
push
inc
jmp
mov
push
push
push
mov
push
loop
add
fstpt
push
cli
jp
sub
pop
cltd
imul
xor
mov
push
test
fistpll
insl
repnz
push
fnstsw
adcb
push
inc
js
jp
pop
loopne
adc
arpl
and
mov
dec
mov
sub
pop
sub
bound
xchg
loopne
xlat
cmp
out
jno
int3
xchg
dec
dec
push
cld
lret
out
push
subl
test
icebp
inc
sub
add
mov
ja
jmp
movsb
insl
push
jl
inc
mov
and
sub
dec
cld
into
addb
and
fimull
mov
sbbb
jecxz
xchg
jb
repz
dec
mov
cmp
dec
rcrb
cld
aas
and
adc
mov
inc
push
js
fistps
movsb
ret
mov
push
or
cmp
push
pop
cmp
pop
or
shr
mov
pop
dec
stc
add
push
push
outsb
testb
pop
loop
scas
or
push
ds
push
or
push
inc
or
pusha
jb
jno
mov
sub
mov
sbb
dec
fcomps
flds
dec
adc
js
or
jnp
jecxz
data16
cmpsl
cmp
fcmovb
dec
repnz
xchg
xlat
mov
and
xor
popf
mov
pop
mov
cmp
loope
pop
shll
dec
pusha
mov
sbb
in
fnstenv
mov
fisttpl
mov
pop
jae
flds
mov
adc
pushf
es
mov
mov
xor
xor
lcall
mov
lds
sub
adc
mov
aam
imul
movsb
jg
jl
mov
xorb
xchg
mull
cmp
and
jecxz
adc
mov
mov
ja
sub
subb
idivb
lret
mov
fmull
inc
xlat
xchg
jge
mov
movsb
mov
pop
mov
mov
push
out
add
loopne
and
movsl
jmp
add
adc
sbb
xor
stos
aas
cmpsb
mov
jmp
pop
lods
mov
mov
mov
jo
and
xchg
push
andb
lock
jmp
push
fisubrl
adc
and
enter
push
das
adc
cmpsl
stos
aad
adc
rorl
hlt
xchg
push
scas
in
sbb
and
mov
call
aad
xor
adc
outsl
cltd
push
and
push
cmp
lret
or
add
cmp
lock
int
and
inc
leave
imul
js
xor
mov
add
in
pop
inc
fisttps
outsl
mov
mov
aam
dec
xchg
xchg
jl
js
push
sbb
das
stc
in
popa
xchg
repz
bound
cld
fsubs
aaa
aam
jmp
popa
pop
jmp
test
out
add
adcb
test
jge
out
clc
pop
sub
jl
ss
and
or
scas
jno
fidivl
nop
fldt
add
lock
rorb
lret
jmp
push
out
cmp
ja
pop
pushf
push
push
lgs
add
mov
lods
xchg
jle
xchg
sub
pop
cld
das
mov
cmpl
dec
mov
out
repnz
repnz
push
scas
sarl
cmp
xchg
cmp
sbb
mov
xlat
in
das
mov
in
rolb
scas
in
ja
mov
jno
and
call
rol
sbb
aam
cmp
not
clc
jb
mov
mov
hlt
repnz
arpl
enter
cmpsb
orb
outsb
mov
adc
std
mov
arpl
out
mov
mov
xchg
push
pop
xchg
xor
shlb
outsl
and
jp
sub
les
mov
pop
sti
push
scas
xchg
fdivr
rcr
std
aas
mov
jns
jp
push
movsl
in
les
inc
mov
mov
shlb
out
push
sbb
addr16
mov
cmpsb
cs
iret
inc
adc
xchg
mov
or
lahf
adc
mov
je
inc
rcr
xchg
push
insb
xorl
sbb
sbb
mov
lods
mov
insb
pop
mov
sbb
jne
cs
imul
negl
enter
sti
jae
jp
lret
pop
nop
test
xor
push
ret
jae
xor
dec
adc
mov
int3
mov
mov
adc
loope
popf
ds
sbb
leave
rcr
icebp
inc
or
and
les
jecxz
push
push
sub
jbe
enter
mov
or
out
mov
jl
daa
aam
ret
adc
fmull
lods
daa
addb
lahf
jl
adc
imul
xchg
push
and
and
es
jle
aaa
mov
pop
cmp
syscall
std
iret
dec
mov
push
push
jp
cltd
cwtl
or
xlat
scas
jle
adc
xor
into
sbb
inc
shl
add
loop
int3
sbb
icebp
lods
inc
cmp
fwait
mov
in
pushf
dec
mov
mov
loop
sahf
incl
fadd
and
mov
inc
sbb
cmpsl
je
sbb
mov
xor
mov
mov
fdivr
bound
cmc
mov
or
mov
inc
add
jo
sub
push
inc
push
out
jbe
out
ds
sub
fdivs
popa
loope
xor
or
and
repnz
arpl
cmpsb
insb
fwait
je
dec
adc
das
or
fstl
or
and
pop
jae
into
lcall
mov
stos
mov
xor
fisttpl
inc
add
stos
xor
mov
cs
adc
xor
cld
xor
mov
ret
push
aad
mov
adc
pop
in
mov
jo
loope
cmp
outsb
test
push
int
stos
xchg
xor
push
pop
addl
pop
cmpsl
aaa
pop
mov
mov
mov
ret
int
mov
stos
xchg
jno
daa
adc
inc
mov
movl
xor
int
ret
sbb
out
pop
xor
push
dec
je
pop
jnp
pop
test
jae
nop
inc
bound
ss
lods
push
dec
jns
xor
inc
cmp
std
mov
sub
add
hlt
cli
sub
fs
aas
jae
mulb
and
aas
call
pusha
addb
ja
xchg
fisttpl
pop
adc
and
mov
pop
mull
jns
pop
test
jo
xor
mov
sub
ret
mov
in
xchg
dec
fs
inc
mov
mov
sub
and
movsb
mov
jmp
jge
in
fwait
add
ss
fcoml
or
test
push
jae
jl
jmp
pusha
jae
mov
dec
ret
ds
xchg
mov
or
les
xchg
rclb
pop
mov
or
pop
call
ret
push
icebp
clc
mov
je
hlt
cmp
inc
mov
lds
test
shlb
cmpsl
or
testb
jl
iret
in
mov
fidivrl
sbb
jmp
sahf
push
xlat
xor
jnp
jae
das
jns
loop,pt
pusha
rorb
sbb
mov
daa
test
or
movb
jecxz
inc
or
out
outsb
ret
stos
inc
add
mov
fadds
xlat
aaa
iretw
loope
scas
cmp
sub
cmc
push
pop
int
sbb
add
pop
mov
sub
mov
stos
adc
loopne
xor
push
mov
int3
mov
bound
mov
in
pop
mov
dec
cli
add
loopne
xor
ja
fwait
cmp
pop
ret
hlt
rol
sub
inc
or
negb
jne
xor
adc
stos
and
cmpsl
dec
jl
ret
sub
loop
test
shrb
inc
xchg
loope
pop
mov
xchg
and
xor
les
fmull
sbb
push
pop
nop
js
xchg
out
enter
mov
and
jbe
sub
sub
out
addr16
popa
jmp
push
sbb
aam
js
lock
push
lods
push
stc
cmpsb
sbb
push
aaa
push
shlb
sar
pop
adc
dec
stos
repnz
cmp
xor
push
fs
stc
adc
lret
in
fdiv
push
fwait
sub
mov
popf
jp
stc
lods
xchg
lds
jb
mov
aam
mov
outsb
in
clc
xor
dec
mov
in
jmp
fsubrl
sbb
nop
and
pop
cld
insl
orl
or
xchg
in
xchg
stos
loope
and
and
fs
pop
cmp
push
rcl
pop
ss
mov
into
xor
popa
movsl
jno
in
cmp
cmc
out
mov
adc
cmp
mov
shld
fs
jne
sbb
push
and
and
xchg
scas
push
push
add
xchg
cmp
dec
mov
pop
adc
stos
dec
add
push
mov
lea
mov
push
push
and
mov
out
cmpsl
lret
das
mov
adcl
and
mov
push
xchg
xchg
ror
cvtps2pi
js
iret
mov
pop
push
ret
movsl
stc
mov
nop
bound
add
sti
xchg
hlt
sbb
push
pushf
rorb
movsb
adc
adc
pop
mov
pusha
lods
imul
sub
inc
inc
testl
push
add
test
stos
or
inc
aam
iret
or
mov
pop
mov
adc
mov
inc
xchg
lahf
pop
enter
mov
enter
mov
and
add
sbb
adcl
and
sub
hlt
clc
repz
aad
gs
sarl
pop
cmp
adc
or
or
push
cli
rcll
push
out
lret
mov
incl
and
inc
or
shll
gs
bound
lcall
dec
pop
and
push
sub
in
loop
cli
cmp
enter
nop
loope
addr16
shl
imul
jae
jl
cmp
mov
fwait
aaa
push
jge
mov
sbb
test
mov
mov
mov
mov
inc
test
jp
or
dec
daa
rcl
sub
into
cmp
mov
inc
mov
push
js
lret
or
arpl
jno
outsl
jno
sub
mov
push
cmp
dec
dec
and
daa
mov
cs
fildll
sbb
inc
sub
sti
pop
rcrb
add
data16
stos
xchg
stc
mov
in
xor
dec
push
repz
pusha
push
arpl
lds
aad
ja
xor
fcoms
arpl
lcall
outsb
push
call
dec
out
add
pop
mov
push
and
jae
add
int
ljmp
pop
loope
aas
push
inc
das
cmp
loop
mov
and
add
cli
nop
lods
stos
pushl
push
inc
in
mov
ret
movsb
stc
int3
js
es
fs
popa
cld
adc
daa
jp
roll
jp
das
aaa
in
inc
out
push
mov
add
adc
bound
lea
sub
mov
xor
push
mov
mov
jbe
pushf
xor
test
dec
mov
push
lods
mov
mov
rcl
jnp
jg
xchg
rolb
push
xor
leave
daa
inc
xor
mov
into
xchg
aad
jo
fmuls
xchg
stos
sub
es
add
jp
push
rcrl
int
testb
mov
out
mov
call
mov
addr16
shlb
pop
pop
pusha
rorl
test
xor
mov
pop
inc
scas
xor
jbe
jg
mov
ret
jecxz
rolb
movsl
insb
mov
imul
mov
xor
xor
shlb
sub
push
mov
hlt
jg
adc
cmp
stos
cmp
mul
sbb
pop
daa
fldt
negl
pop
dec
fcmove
mov
and
cmp
adc
cli
mov
jg
pop
jae
cmp
sbb
out
ljmp
aam
xor
js
dec
jb
push
pop
push
push
mov
test
mov
fs
cli
sub
aas
stos
mov
popa
call
mov
std
adc
mov
sbb
test
sub
in
jge
mov
mov
in
sub
mov
imul
and
dec
cmpsl
icebp
sub
inc
or
inc
push
lods
cmovb
jl
mov
mov
pop
lcall
xchg
xchg
mov
push
and
jg
jae
fs
add
fildll
jp
ds
mov
int3
pusha
sub
push
jmp
inc
cmp
imul
mov
repz
lahf
orb
lods
lds
imul
jnp
push
mov
xchg
pop
out
mov
inc
push
mov
xor
or
jae
mov
das
out
mov
sub
jmp
adc
push
inc
pop
ret
or
fisubl
cwtl
cld
out
shll
and
sti
push
lret
aas
mov
gs
aaa
js
inc
inc
sub
ljmp
in
lds
or
pop
push
and
mov
xchg
ss
dec
scas
and
fs
sub
lahf
push
inc
or
mov
push
es
mov
pop
inc
dec
aad
push
lods
gs
loope
out
cltd
fadds
pop
mov
jae
cmp
aaa
ret
xchg
mov
jnp
and
lock
push
pop
fdivrs
xor
sbb
popf
inc
sbb
lret
mov
mov
popf
xor
cmp
cmp
jno
pop
sub
sub
xor
mov
mov
icebp
call
scas
in
mov
inc
mov
ret
sbb
lods
gs
and
mov
enter
in
mov
out
mov
dec
adc
push
lcall
sti
loopne
shrb
roll
sbb
lods
jo
add
fnstsw
xchg
insl
loopne
test
icebp
fs
cmp
mov
and
pop
dec
cmp
icebp
pushf
xchg
jne
xchg
es
int3
loope
aad
test
fildll
add
pop
dec
push
inc
mov
popf
ret
jns
pusha
inc
push
sbbb
push
xchg
daa
jmp
out
mov
fsubl
test
es
int3
sub
test
jbe
fidivrs
call
or
in
xchg
sti
scas
sub
hlt
adc
pusha
dec
inc
test
inc
add
scas
imul
xchg
mov
sub
jae
add
xor
movsl
mov
ss
sub
inc
add
ud2
xor
adc
or
scas
mov
mov
pop
idiv
add
fldl
lods
es
push
add
scas
xor
in
adc
hlt
fwait
mov
ds
lods
in
pop
mov
int3
sbb
add
jns
xchg
sbb
xchg
mov
ret
shrl
mov
add
movb
adc
fiadds
jge
cltd
out
xchg
and
std
pop
int3
lcall
sbb
xor
sub
xor
sub
imul
push
push
in
inc
loop
mov
jg
cltd
xorb
fsubr
push
into
mov
dec
add
xchg
int
sub
lea
ret
aam
adc
xor
fdecstp
in
cmpsl
lds
pop
dec
cmpsl
jo
and
pusha
sub
mov
imull
lcall
out
sbb
ja
xor
add
mov
add
sub
scas
xor
aas
lea
xchg
xchg
mov
repz
sub
mov
mov
mov
mov
lea
xor
dec
stos
mov
movsl
mov
mov
leave
mov
imul
scas
rcrl
add
leave
cmp
push
and
adc
pop
sahf
dec
test
pop
xor
es
xchg
xor
push
mov
adcl
repnz
in
pop
mov
test
ret
sbb
dec
jae
adc
xor
icebp
ds
rol
and
pop
adc
pushl
pop
fcmovb
mov
push
dec
jp
fdivl
pop
fisttpll
insb
add
fmuls
iret
divl
mov
aam
lret
sbb
pop
jb
pop
cmp
cmp
mov
mov
jmp
ficomps
xchg
pop
out
and
lds
into
cmovs
in
outsl
mov
sub
sbb
js
mov
mov
or
fildll
dec
sbb
into
das
sti
inc
pop
mov
jb
cmp
fs
pop
push
adc
mov
jbe
je
push
sarb
add
add
jl
loop
sub
in
mov
inc
call
sub
andl
imul
and
dec
mov
out
mov
dec
stos
mov
xchg
or
sarl
jmp
inc
out
push
mov
ret
loop
jb
cmpsb
sbb
mov
mov
test
into
inc
lret
sbb
lods
shll
negl
fnstcw
jno
daa
ja
mov
push
mov
jno
in
xchg
sbb
nop
jbe
cmpsl
nop
cmp
lds
rolb
mov
push
add
adc
jmp
dec
cmpsb
pop
jne
sub
and
push
xchg
loopne
push
pop
adc
arpl
stos
sbb
cwtl
xchg
cmp
out
mov
sub
sub
aad
ja
in
mov
out
addl
push
notb
fdivr
mov
ds
pop
push
test
lods
scas
daa
mov
frstor
ret
mov
scas
mov
dec
fsubs
stos
mov
add
jmp
in
lds
dec
mov
cmp
shrb
hlt
mov
aad
sbb
pop
add
iret
lret
mov
add
mov
shll
mov
adc
mov
addr16
test
cmp
xor
jle
or
in
xchg
loop
pop
sbb
pop
out
and
cmp
call
and
pop
outsb
fisttps
jo
test
loope
pop
xor
xchg
cltd
adc
jns
aaa
fwait
iret
mov
push
lods
dec
dec
add
xchg
orb
sub
cmp
stos
sbb
call
gs
jg
cmpsl
push
cmp
push
or
das
repnz
jne
into
addb
clc
mov
mov
cld
jle
cmp
mov
sub
xchg
jle
repz
out
gs
jb
movl
pushf
stc
aad
pushf
sub
ss
cmp
movsl
adc
aam
or
les
clc
sti
inc
orl
shll
in
push
mov
adc
lock
lret
setb
inc
outsb
in
sub
pushl
inc
jne
sbb
adc
push
das
int
cmp
jmp
sub
push
jne
aam
sbb
dec
in
mov
jge
mov
cmp
xchg
inc
sbb
pop
movsb
and
mov
dec
lods
mov
mov
and
enter
xor
mov
pop
aad
pop
and
xchg
scas
mov
faddl
mov
call
test
sbb
stc
ds
xchg
cmpsb
mov
cmp
cmp
push
mov
pop
call
jle
pop
or
outsb
inc
cld
filds
icebp
sar
stos
clc
je
or
lods
int
sub
ret
neg
test
xchg
gs
adc
or
es
test
andb
pop
sarl
mov
gs
sub
test
fnstenv
and
aad
add
inc
mov
ret
cli
stos
les
nop
mov
jg
add
cwtl
jle
mov
sub
negl
cmpsb
repz
mov
cltd
sbb
aas
and
add
push
push
xor
sub
or
and
adc
rcrb
jl
scas
push
sbb
push
push
add
cmpb
mov
es
aas
out
imul
lret
jb
je
xor
sbb
filds
sub
stos
mov
xchg
fcomps
pop
adc
xor
jnp
icebp
mov
mov
test
xor
sub
push
and
pop
xor
cmp
mov
sub
nop
adc
push
test
push
push
pop
add
adc
shlb
fiadds
mov
cmp
into
add
inc
jns
jmp
or
and
mov
mov
lcall
mov
roll
push
adc
sbb
jmp
ss
fldcw
pusha
xor
mov
adc
aas
cmp
mov
test
ficoml
jl
pop
sub
mov
dec
mov
sbb
inc
mov
in
xchg
movsb
orb
xchg
ds
sub
push
mov
ret
xlat
divl
cmp
mov
ds
enter
mov
jbe
sub
sbb
call
xor
fisubs
out
and
add
inc
es
xor
test
inc
or
add
xchg
push
loopne
sub
push
fsts
jne
xchg
push
jge
rcll
inc
popa
call
mov
cmpb
ja
leave
push
mov
leave
test
mov
fldcw
xchg
out
sbb
adc
jp
ljmp
or
and
push
cli
cld
test
sub
dec
sbb
mov
dec
push
jecxz
sub
xchg
fwait
out
mov
roll
push
sahf
repz
out
leave
lret
pop
sbb
pop
xchg
mov
hlt
repz
xor
sbb
adc
mov
mov
cmp
sbb
mov
out
or
out
sub
mov
in
mov
sub
lods
fdivrp
xchg
jg
pop
js
ss
dec
imul
or
aas
shll
mov
stos
mov
jo
ss
pop
sbb
mov
addr16
repnz
test
add
push
cmpsl
xor
loop
jecxz
xchg
xchg
push
push
bound
daa
pop
adc
test
and
out
insb
sti
xor
jge
lock
sbb
mov
repz
jb
leave
jae
addr16
dec
cmpsl
arpl
lods
and
hlt
mov
das
lret
adc
push
repz
push
scas
fsubrl
jge
inc
inc
lock
gs
mov
lret
nop
jb
xchg
push
or
sub
lret
inc
arpl
lea
imul
jb
or
mov
or
push
bound
dec
jne
les
adc
add
sub
adc
push
lcall
icebp
shll
mov
sahf
and
or
xlat
push
stos
bound
jb
sub
mov
inc
adc
fimull
movsl
bound
push
iret
sbb
pop
mov
sbb
xor
cmp
insb
test
inc
xchg
and
test
push
loopne
xor
es
dec
stos
int3
xchg
inc
inc
push
cmp
es
mov
cmp
mov
xor
and
mov
call
and
in
pop
xchg
fisubs
stc
push
pop
into
das
inc
cmp
imul
and
mov
cmp
aaa
in
iret
int3
mov
sub
fildl
push
xchg
rcl
pop
scas
popf
dec
adc
das
loop
and
pop
aas
mov
xchg
jo
test
out
xor
aas
sbb
lret
and
dec
or
adc
imul
and
pop
jnp
dec
dec
inc
rcll
cmp
lret
mov
mov
in
jecxz
in
or
cs
push
lcall
pop
and
pusha
xor
sarl
testl
gs
lret
sti
popa
inc
and
add
or
in
mov
std
push
shlb
mov
iret
mov
sub
xchg
mov
out
add
call
popa
mov
ss
ret
sbb
fisttpl
sbb
or
sbb
std
shlb
popf
fsts
pop
fwait
or
mov
shll
dec
or
push
je
testb
xchg
sub
out
pushf
cli
adc
mov
mov
dec
fists
or
cmp
mov
enter
push
pop
js
vmulps
sub
mov
out
push
rcrl
fidivs
jle
mov
loopne
cmp
adc
out
adc
sahf
and
jg
xor
idivb
popf
mov
mov
inc
popa
mov
and
and
xor
xor
mov
outsb
pop
sbb
cmpsb
adc
in
outsl
test
push
in
lea
nop
iret
adc
or
repnz
mov
dec
xchg
repz
lea
sbb
mov
dec
jp
out
imul
std
xchg
lcall
mov
filds
adc
in
mov
push
and
push
jl
cmp
clc
xchg
loopne
dec
aas
out
mov
mov
leave
jmp
mov
aaa
dec
fsubr
push
jecxz
sbb
aas
shll
repz
adc
pop
push
jns
push
jo
mov
rorb
adc
and
pushf
cmp
jge
out
in
adc
cmp
daa
sahf
mov
cmp
inc
imul
lret
leave
push
add
pop
inc
ret
mov
rclb
xor
aam
xor
cmpsl
subb
mov
mov
add
fdiv
sub
inc
mov
jmp
arpl
stc
mov
out
test
push
jge
in
dec
lods
stc
adc
aaa
lock
jne
push
jp
pop
xor
insb
sarb
cmp
nop
call
dec
rcr
js,pt
addr16
push
adc
and
jl
inc
push
ret
fsubrs
pop
pop
icebp
fnsave
jl
jle
adc
lgdtl
notb
adc
pop
dec
mov
xor
shlb
jne
mov
lea
aaa
cmp
stos
push
cs
xchg
mov
movsb
arpl
mov
lods
dec
sub
xchg
negl
inc
int
push
repz
inc
imul
int
lods
mov
outsb
test
xchg
lret
fchs
cmp
push
icebp
and
fisubs
and
push
stc
leave
subl
test
addr16
inc
test
push
cltd
insw
jae
cmp
xchg
mov
xchg
loop
add
and
movsl
das
js
xor
ja
cmp
cld
stos
mov
js
aad
mov
notb
or
push
sub
sti
jae
ret
sub
out
xchg
mov
inc
sub
pusha
sahf
scas
push
add
daa
out
mov
lods
and
jmp
push
push
cmp
stos
push
xchg
test
sub
fs
shl
add
loopne
sti
sbb
mov
xchg
sbb
ljmp
mov
cmp
iret
ret
in
loopne
int3
adc
mov
ss
les
mov
loope
ds
xchg
sbb
adc
out
mov
push
jle
lret
sub
stc
js
cli
or
inc
add
lret
add
xchg
push
cltd
out
jne
sub
push
inc
xchg
outsb
mov
pop
leave
cmp
fcoml
mov
scas
ljmp
cmp
add
jg
adc
push
out
daa
pop
cmp
lcall
sbb
pop
clc
jno
mov
push
rol
fiaddl
cmp
sbb
sbb
pop
cmp
cmpb
adc
sar
inc
bound
scas
lret
and
test
nop
ja
imul
hlt
mov
mulb
sahf
adc
dec
jb
jp
sbb
nop
and
bnd
mov
out
xchg
jle
inc
jmp
fsubl
jcxz
sub
mov
xchg
or
iret
mov
out
push
dec
call
cmc
add
test
test
shrl
jmp
add
divl
push
mov
sbb
insb
sahf
xchg
cmpl
pop
push
movsb
cld
and
mov
jne
mov
call
dec
mov
push
and
lods
loopne
in
dec
fimuls
das
scas
insb
pop
hlt
pop
lea
pop
lods
sbb
sub
ds
negb
xchg
and
push
ret
loopne
int
adc
cli
ljmp
push
inc
push
mov
mov
jbe
call
into
outsb
lcall
dec
inc
xchg
in
int
cwtl
sbb
pop
inc
push
xchg
mov
lret
adc
inc
fwait
xchg
fcomps
fcmovnbe
jg
setb
fs
mov
js
adc
push
add
mov
inc
imul
imul
dec
fisubrl
or
pop
jns
rcr
and
cmp
and
push
and
cmp
or
mov
cli
inc
data16
dec
cmp
cs
sbb
enter
push
vmovaps
loopne
sbb
into
sbb
sbb
add
sbb
jns
iret
pop
cs
xor
mov
pusha
divb
adc
cmp
mov
add
sub
pusha
iret
cli
enter
inc
imul
daa
sub
cmp
xor
cmpsl
cmpsl
cmp
fcomps
mov
or
cmp
leave
cli
repz
popf
mov
fbstp
sub
mov
test
push
and
cli
xor
mov
jge
inc
inc
sub
lds
adc
sbb
rcl
mov
pop
icebp
std
lcall
pmovmskb
pop
lret
adc
int3
es
pop
je
pop
fiaddl
dec
scas
sub
mov
bound
adc
inc
popf
insb
xchg
jo
sub
push
pop
inc
mov
in
dec
movsl
repz
negl
push
sub
decl
cmpsb
xor
and
test
loop
or
xor
andb
dec
out
cmc
inc
movsl
jbe,pt
outsl
stc
and
fdivrl
pop
sub
lcall
and
push
sbb
ss
sbbl
cmpsb
in
xchg
shrl
comiss
nop
adc
lea
cs
mov
lods
fwait
cltd
mov
shrb
aaa
pop
mov
or
addr16
sub
dec
pop
hlt
inc
lahf
inc
xor
cli
imul
cmpsl
push
mov
daa
jno
xchg
fistpl
in
xchg
in
sub
jno
add
fwait
pop
and
mov
jb
fsubr
lea
pop
mov
or
or
dec
mov
dec
in
push
ret
xlat
div
aas
mov
aad
rcrb
and
inc
xor
push
sbb
das
inc
int3
rorl
or
xchg
jo
inc
pop
mov
clc
sub
sti
cwtl
mov
mov
pop
push
hlt
mov
cmp
pushf
push
scas
lea
sbbb
rcrb
das
sbb
jb
inc
loop
cmp
jno
decl
sbb
in
push
out
das
test
mov
xchg
emms
mov
je
imul
cmp
sbb
aaa
fistpl
movsl
xchg
ret
or
pop
into
repz
jb
stc
mov
pop
fistps
mov
add
lahf
shll
ss
out
jo
cltd
push
int
xchg
xchg
out
mov
mov
testb
call
rcr
jb
jno
cmp
stos
test
pop
pop
xlat
stos
rcrb
fimull
push
pop
stos
push
std
mov
nop
cld
mov
inc
jp
in
add
inc
mov
xor
sarl
add
in
adc
out
jne
adc
and
insb
lret
dec
inc
cwtl
fisubrl
jo
push
add
jo
jb
inc
mov
dec
out
jns
aas
mov
xchg
mov
mov
insl
rclb
or
hlt
push
loopne
dec
adc
insb
cwtl
fs
jge
out
mov
pop
pop
sub
add
cmpsb
dec
inc
mov
pop
sbb
pop
cld
mov
loop
mov
pop
je
nop
dec
aaa
push
inc
or
add
pop
xchg
mov
ret
rorb
and
or
enter
test
andb
in
outsb
push
add
dec
or
jne
hlt
dec
aas
int
adc
xor
mov
popa
pop
add
mov
mov
pushf
xor
cmpsl
dec
sbb
push
test
xor
daa
cmp
cli
ss
ret
push
push
xchg
push
test
call
test
int3
inc
pop
and
push
ret
or
xchg
mov
stc
xchg
add
outsb
and
jp
gs
call
rcrl
jns
mov
cld
neg
popf
and
lahf
mov
out
pop
enter
mov
shrl
jae
push
nop
jb
push
dec
xor
in
loopne
jbe
scas
mov
out
movzbl
xor
mov
js
pushf
or
sahf
lea
leave
or
addb
lahf
cmp
inc
enter
outsb
pop
push
pop
es
cmp
jg
out
push
adcl
loope
negl
push
mov
xor
mov
dec
add
mov
mov
xor
or
inc
pop
int
mov
adc
add
push
aam
clc
repnz
and
fs
mov
push
into
sbb
inc
jecxz
cwtl
pusha
mov
mov
fdivr
dec
and
pushf
lret
lods
mov
pusha
stos
int3
xor
cwtl
lcall
cmpsb
adc
jp
and
jp
or
sbb
adc
push
pop
pop
xlat
shr
xchg
mov
or
cltd
mov
pop
rcll
jle
or
mov
mov
es
outsl
mov
cwtl
bound
lcall
orb
pop
and
jne
dec
ficompl
and
cmc
sti
push
lret
test
mov
cmp
dec
pop
les
push
fwait
cli
fisubl
jo
or
fiaddl
fwait
xorb
mov
add
adc
mov
ja
mov
fsts
test
or
inc
fs
js
adc
ret
push
xchg
loopne
js
push
test
loopne
mov
add
sahf
or
scas
pop
inc
leave
jecxz
jmp
cli
xchg
mov
cmc
pop
rcl
sbb
push
sub
cwtl
mov
xchg
cmp
jns
jno
nop
jne
xchg
ret
or
les
add
sub
push
rorl
xchg
sub
jno
stos
test
repz
ret
push
adc
loop
gs
stc
int
or
aam
fldl
leave
data16
rcrl
clc
mov
stc
push
out
lret
sbb
jmp
in
ljmp
push
jmp
and
inc
sti
pushf
jbe
sahf
in
in
push
das
test
sub
scas
push
arpl
mov
jnp
stc
cmp
scas
add
movsl
xor
mov
sbb
cmp
ret
les
pop
add
push
ljmp
pop
mov
sub
mov
xchg
dec
sub
addl
push
dec
cs
mov
outsl
add
cmpsb
out
scas
add
or
fsubrs
cwtl
out
or
cmp
popa
loopne
in
sbb
xor
mov
mov
frndint
mov
out
and
lods
push
adc
movsl
push
ficoms
insl
iret
mov
mov
lock
in
adc
inc
xlat
and
out
xchg
or
les
es
ja
sub
add
push
pop
xchg
or
loope
cmpsb
pop
push
push
lods
xchg
movsl
inc
or
pusha
dec
xlat
sub
mov
fcoms
nop
movsl
adc
inc
fucomip
cmp
sarl
mov
xor
stos
aad
or
and
js
jp
mov
test
mov
jg
aam
rclb
mov
sub
mov
xlat
movsl
lods
jge
push
push
jnp
js
inc
jp
inc
xlat
cmp
lahf
popf
sub
lcall
push
mov
das
rcll
add
adc
dec
stc
jmp
xchg
and
insl
jnp
decb
push
add
xlat
aaa
xchg
xchg
jmp
test
mov
idivb
ret
psubusw
push
aad
jecxz,pn
fcmovb
in
aaa
aas
add
sbb
pop
add
repz
xchg
mov
or
and
loope
ja
leave
fsubrs
cmp
inc
imul
ljmp
inc
adc
mov
test
adc
cld
imul
sub
sub
aas
jmp
gs
movsl
inc
popa
lock
mov
inc
scas
ds
fldl
insl
jno
mov
dec
cld
rcrl
sarl
mov
sahf
dec
ljmp
popa
mov
mov
xchg
fistpll
push
and
fwait
cmp
fmull
mov
push
insb
mov
mov
mov
add
cmp
mov
or
lods
mov
xchg
cwtl
pop
push
jb
pop
pop
jbe
add
or
dec
xchg
push
jne
xchg
rclb
mov
pop
add
outsl
adc
inc
add
xchg
int3
or
pop
lcall
sti
push
int3
dec
outsb
into
sub
sbb
negl
jae
push
push
mov
test
jecxz
jno
dec
jge
daa
ffreep
sti
loop
push
mov
mov
mov
ret
call
call
jo
mov
clc
aas
aas
xchg
cmp
cmpb
jno,pn
cli
in
popf
mov
xlat
add
rclb
cmp
rolb
sbb
xorl
lcall
imul
fstps
lcall
dec
leave
inc
inc
sub
mov
inc
popf
popf
orl
outsl
adc
stos
inc
fs
pushf
adc
dec
das
cs
mov
loop
or
test
jne
out
mov
push
adc
das
cmp
aaa
xor
add
and
aam
jae
icebp
pop
stos
mov
or
adc
std
mov
mov
fsts
pmuludq
imul
push
aad
mov
and
shrl
insb
jge
insb
inc
clc
dec
mov
lds
push
clc
sub
adc
sets
push
in
mov
imul
xchg
pop
xor
ds
push
mov
inc
push
int3
idivl
sbb
dec
int
add
arpl
stos
sub
leave
sarb
loop
mov
mov
inc
inc
dec
and
jmp
ss
inc
iret
sbb
leave
xchg
cltd
ljmp
outsb
add
add
inc
pop
mov
lods
fimull
xor
dec
cmpsl
mov
add
movsb
mov
sarb
mov
aam
push
mov
mov
xchg
lock
and
or
popf
xlat
scas
push
pop
enter
jmp
dec
out
das
adc
in
movl
bound
in
cmpb
xchg
jecxz
mov
test
xorb
sbb
out
pop
pushf
inc
adc
cmp
sbb
cld
ja
pop
lock
mov
xor
cmpsb
out
cltd
sbb
incl
pop
xchg
in
xor
sub
stc
cmpsl
mov
xor
punpckhdq
les
fdivrl
out
sbb
mov
js
xor
insl
jbe
sub
arpl
pop
mov
jae
sahf
push
mov
adc
jne
cmpsl
add
xchg
lea
mov
mov
dec
gs
cmc
inc
mov
cmc
out
mov
push
jmp
cmpsl
pop
jmp
xchg
push
jae
sahf
fnstsw
jle
sahf
xor
lea
cli
or
pusha
sub
sti
mov
push
mov
jle
daa
lret
dec
call
insb
aas
and
fldt
or
pushf
lret
xchg
or
test
and
jb
jo
and
jnp
pop
das
leave
inc
xchg
dec
in
fs
loopne
ss
xor
add
stos
ss
mov
and
push
scas
cmc
popa
jle
mov
daa
data16
lret
sahf
or
dec
in
addl
aas
push
push
adc
cmp
push
inc
insb
aaa
jbe
fildl
sub
or
repnz
ret
gs
and
xor
lahf
push
sti
mov
ret
add
mov
cmpsl
cltd
mov
jo
mov
jae
xchg
pusha
adc
lret
es
pusha
stos
movsb
lea
xchg
add
loope
lock
stc
pushf
test
adc
pop
shl
mov
jg
mov
insl
repz
sbb
ds
dec
xchg
xchg
scas
jecxz
mov
and
jo
jne
xchg
dec
ljmp
push
xor
push
movzbl
jb
inc
in
xor
cwtl
sbb
imul
mov
xorb
in
loop
test
xchg
adc
leave
popf
cmp
mov
xor
sub
xchg
sbb
lods
mov
dec
jl
enter
sahf
push
and
mov
insl
loope
push
mov
ret
fists
mov
stc
mov
pop
pop
xchg
ret
mov
mov
imul
pushf
popa
jl
sub
and
mov
imul
ret
mov
jb
mov
mov
or
mov
xlat
mov
gs
inc
popa
fst
popa
insb
repnz
sub
popa
lods
inc
int
int
pop
bnd
stc
cmp
and
sub
not
imul
jmp
stos
aad
shl
sbb
or
popf
pop
adc
sbb
mov
stos
mov
xchg
jle
repz
mov
sar
rorl
adc
stc
cmpsl
bound
cwtl
xlat
aam
arpl
push
xor
mov
push
inc
enter
imul
pop
rolb
loope
iret
mov
repz
push
inc
test
scas
mov
sub
loop
lret
xchg
xor
insb
pop
or
add
cli
lahf
mov
cwtl
stos
add
out
jmp
xchg
add
push
out
jno
cltd
movsl
sub
stos
test
mov
fstpt
adc
mov
es
shl
in
mov
pushf
xchg
outsl
scas
mov
lock
add
loope
push
adc
sbb
adc
and
enter
mov
xchg
mov
movsb
sub
aas
icebp
in
les
jle
mov
das
cli
xchg
in
fmull
jno,pn
push
pop
xor
mov
jb
pop
and
sti
xor
jo
out
mov
cmp
push
loope
scas
jbe
out
pop
sub
fiadds
fsubl
in
incl
clc
imul
push
sbb
pop
repz
push
mov
cwtl
lods
je
je
xchg
cltd
jge
ds
in
loop
loop
push
nop
or
inc
scas
xor
js
cld
mov
je
mov
sub
int3
dec
icebp
push
add
dec
or
jmp
or
lds
repz
sti
in
sbb
test
dec
cmp
int
mov
xlat
inc
icebp
pop
xor
mov
mov
xor
add
ds
bound
shlb
dec
sahf
int
icebp
test
xor
cs
jl
js
in
xchg
movsl
stos
inc
cmp
add
sub
mov
adc
inc
ja
mov
test
xor
or
xchg
aad
mov
jne
fnstenv
arpl
test
imul
jae
push
jo
inc
stc
or
mov
out
xor
pop
inc
dec
inc
sbb
sub
dec
aas
xor
ja
cld
mov
fildll
or
xlat
and
sub
adc
ja
test
stos
repnz
jae
pop
enter
pop
int3
pop
add
xchg
icebp
cmp
jbe
dec
push
negl
xlat
cli
leave
popa
ss
push
imul
or
popf
rcr
icebp
mov
xor
aad
cmpsl
push
jl
or
loop
jl
add
pop
and
imul
xorb
lock
add
insl
jnp
mov
add
push
lcall
icebp
mov
daa
push
jbe
jmp
push
ret
outsb
cmp
add
push
out
adc
insb
sub
fmuls
mov
mull
outsb
xor
pop
leave
sbb
out
dec
sahf
add
in
fisttpl
mov
rclb
cmp
mov
jge
push
pop
sub
inc
jb
jnp
pop
xor
cmpsb
sub
dec
mov
mov
adc
jg
or
mov
aam
sub
sub
sahf
xchg
lea
clc
xor
push
movsb
arpl
sbb
dec
int
jg
ffreep
xchg
popa
je
cwtl
ret
sub
mov
mov
cmp
fdivp
outsb
or
add
cmp
add
mov
movsb
mov
mov
push
call
cltd
test
xor
add
push
mov
adc
or
mov
je
jp
jge
sbb
in
leave
daa
mov
aam
call
lds
jle
mov
push
cld
fbstp
lcall
aad
push
mov
jge
mov
push
imul
cld
int
jecxz
jecxz
rep
adc
ficoms
pop
mov
mov
sub
adc
pop
jl
sar
addl
xor
jns
dec
mov
int
shl
sbb
mov
mov
shl
iret
test
sti
adc
cmp
or
push
fdivr
inc
out
mov
add
aad
imul
dec
sbb
mov
jp
aad
repnz
pop
out
pop
subb
outsl
fwait
xlat
mov
or
es
aam
in
sbb
lods
mov
mov
out
fucomp
mov
inc
inc
pop
xchg
pop
loop
shrb
les
pop
push
stos
and
daa
clc
sbb
pop
dec
pop
sbb
inc
mov
cmpb
push
shll
xor
enter
cwtl
cmpsb
in
ljmp
lds
movsb
imul
scas
push
mov
sbb
out
push
repnz
lods
push
pop
push
jae
enter
xlat
mov
sbb
cmp
inc
and
clc
std
inc
sub
gs
insb
cltd
xchg
cmp
cmpsb
rcrl
arpl
lahf
les
cmp
sahf
decb
jno
lock
ja
rcrl
add
add
dec
es
dec
arpl
popa
aam
stos
mov
lea
add
inc
rorl
rorb
dec
mov
out
pop
and
xlat
mov
ss
or
push
mov
fwait
cmpsb
cltd
data16
lock
leave
and
inc
mov
cmp
jl
subps
xchg
lds
sarl
mov
stos
out
mov
inc
sahf
sub
add
push
cli
sbb
mov
push
stc
insb
loopne
subl
jl
cmp
cmp
sbb
pusha
adcb
sbb
jnp
sbb
ficompl
dec
or
scas
ja
stos
sbb
xor
stos
lret
ds
pop
fdivl
add
xor
push
adcl
je
movsl
push
xorb
sub
fwait
xor
jne
sti
and
incl
adc
outsl
int
mov
dec
mov
out
jge
jno
fidivs
je
les
sbb
into
divl
cmp
mov
dec
adc
xchg
roll
jge
jnp
pop
lods
dec
loope
mov
repz
inc
popa
pop
sub
xor
mov
push
or
out
xchg
or
imul
jl
out
mov
inc
movsl
shr
repz
push
loope
push
cmp
sub
in
or
fcmovb
mov
lret
mov
add
sub
xchg
leave
push
cmp
dec
mov
test
xor
mov
les
push
cmpsb
jne
cmp
mov
ret
sti
inc
jae
loop
adc
dec
lea
push
mov
mov
icebp
outsb
in
mull
int3
mov
sbb
mov
ja
cmp
adc
mov
inc
jbe
jae
rclb
outsl
fbstp
daa
add
add
sbb
lret
cmp
pop
push
dec
sti
mov
std
mov
les
popa
pop
or
ja
test
dec
mov
scas
inc
cmc
notb
and
and
loop
mov
jnp
xchg
pop
cmp
mov
push
push
adc
xor
sub
xchg
stos
adc
sar
sbb
push
imul
lcall
mov
pushf
mov
js
sub
sbb
out
testl
xor
cmc
and
xor
inc
mov
mov
mov
mov
push
xor
popf
fisubl
push
mov
add
aam
ds
lea
xor
loope
adcb
dec
lahf
and
les
in
xchg
xchg
insb
cmp
and
hlt
sub
lret
out
xor
push
popa
sub
mov
push
or
xor
iret
and
push
jne
mov
jnp
add
nop
fdivs
xor
pusha
sbb
dec
nop
pop
jge
out
mov
in
stos
xor
adc
lods
jo
cmpsb
push
inc
fdivrs
pop
push
push
clc
and
inc
out
lock
mov
mov
sub
and
insb
mov
jne
sarl
and
or
mov
out
ja
sub
arpl
std
cmp
sub
xor
adc
adc
jne
pop
xchg
shll
out
mov
scas
mov
push
fcompl
cs
push
push
xchg
sbb
es
fwait
outsb
insl
je
mov
xor
loop
iret
mov
mov
dec
sub
dec
loopne
daa
mov
icebp
lcall
lea
sbb
lods
inc
lock
and
in
cli
out
dec
bound
jne
jmp
ficoml
outsb
fnsave
fcmove
loopne
nop
cmp
fidivs
sahf
repnz
xchg
jl
xor
cmp
push
add
test
cld
ja
mov
std
shrb
mov
adc
or
sbb
je
push
int
fs
mov
fsubs
test
in
pop
mov
add
sub
push
mov
fwait
mov
xor
ds
aas
int3
rdmsr
test
sti
fistpll
cmovb
pop
andb
and
dec
jb
push
call
test
pushf
int3
and
sti
fnsave
mov
add
mov
mov
ret
rcrl
push
pop
inc
inc
js
cmc
dec
mov
jle
jg
cli
xchg
adc
push
sbb
dec
pop
lods
sbb
fdivl
cld
loopne
lret
or
mov
pop
push
rcrl
mov
fsubrs
jle
mov
enter
call
mov
pushf
xchg
mov
pop
add
pop
mov
adc
popa
xchg
mov
jmp
test
clc
test
rorb
adc
lea
loope
loope
cmpsl
test
movsb
push
jl
xchg
aas
mov
lret
pop
mov
dec
jae
test
daa
nop
leave
es
and
lret
fldcw
call
es
push
dec
pop
xor
pop
mov
sarb
call
mov
and
and
loopne
idiv
test
cld
clc
mov
repz
das
mov
jae
notl
ficompl
arpl
mov
pushf
int
and
fcomps
cwtl
jl
xlat
sbb
addl
mov
xchg
rcrl
or
lds
push
mov
das
inc
add
in
pushl
mov
rcrl
mov
mov
mov
and
jl
rcll
lret
pop
fistps
cmp
pop
cmpsb
sahf
mov
lcall
ret
xor
sti
mov
jbe
movsl
xchg
les
mov
xor
push
mov
add
es
int
es
cwtl
das
inc
scas
adc
ds
jno
fdivrp
fisttpll
dec
int3
and
pop
std
mov
popf
fldl
cmpsb
adcl
pop
or
mov
cmpsl
push
mov
jo
mov
dec
mov
repz
dec
cld
jne
bound
test
lea
inc
adcb
sub
mov
mov
dec
fstl
cmc
cld
jecxz
xchg
lods
xchg
jns
pop
std
ljmp
lret
rcrb
mov
repz
inc
push
rcr
mov
xlat
arpl
mov
outsb
movsl
cmpsb
out
aaa
iret
cmpl
gs
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
xor
mov
loop
inc
mov
subb
orb
push
fistl
and
test
push
imul
pop
or
jae
adc
imul
cmc
lds
mov
mov
leave
pushl
das
sbbb
hlt
clc
add
push
sahf
xlat
xor
jecxz
mov
imul
arpl
test
sahf
lock
pop
mov
ja
mov
pop
pop
sbb
sbb
fwait
pop
sbb
out
push
into
pop
mov
fs
aam
or
outsl
cwtl
inc
or
lret
dec
fwait
sbb
insb
cli
mov
jo
pop
popa
mov
sub
gs
xchg
mov
cmp
xchg
or
rcl
adc
je
pop
lods
out
xchg
jnp
popa
sub
mov
lock
add
jl
aaa
shrb
push
les
jb
adc
dec
and
or
or
sbb
jbe
arpl
push
out
mov
mov
jne
cld
push
sub
xor
mov
mov
add
int3
push
pushf
das
mov
cmpsb
icebp
mov
adc
jo
xor
in
mov
arpl
arpl
xchg
push
test
sub
sbb
xor
fcompl
or
sbb
jb
xchg
dec
stos
push
stc
push
adc
adc
out
pop
scas
jno
ret
xor
pop
and
testl
dec
stos
pushf
mov
xchg
adc
pop
pusha
lods
xchg
fs
cmp
xor
fwait
call
loopne
push
aam
mov
rorl
popa
sbb
shl
xchg
lock
cld
xchg
cs
sub
popf
inc
out
cmpsb
ljmp
scas
dec
fnstsw
ljmp
mov
push
or
fistl
jns
lret
add
nop
sub
pop
push
ljmp
inc
sbb
pop
mov
mov
pushf
pop
in
movsb
out
fisttpll
mov
xchg
out
mov
xor
cmp
jg
jl
mov
iret
adc
cmp
mov
sub
popf
xor
and
pop
jp
and
sub
insb
sbb
xor
xchg
xchg
ds
xor
mov
in
negl
lods
addl
inc
push
sti
dec
xor
stc
leave
insb
mov
mov
dec
enter
out
pop
rcrb
lock
imul
push
mov
xchg
mov
fstpl
pushf
into
sub
out
xchg
test
js
push
inc
sbb
dec
inc
jp
jo
inc
int
aad
jae
adc
dec
jge
mov
stos
loop,pn
add
pop
or
inc
mov
mov
jp
ss
and
xchg
enter
idivb
mov
xchg
add
mov
lods
mov
pop
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
lea
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
lea
call
push
dec
cmp
jb
push
pop
shl
push
pop
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
mov
pop
stos
cmp
jb
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
scas
sub
mov
loop
mov
mov
inc
lods
or
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
push
pop
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
