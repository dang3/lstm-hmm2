push
lret
das
out
mov
lea
repz
xor
push
aam
xor
dec
out
lret
push
cmp
jecxz
jl
or
ds
jg
pop
loop
mov
jno
out
fsubs
and
jae
rorb
test
dec
cmp
xchg
sub
jo
inc
test
mov
dec
push
xchg
mov
push
sbb
mov
cwtl
adc
cmp
repz
and
shlb
arpl
or
cltd
cmp
lods
dec
pop
push
pusha
test
lsl
mov
mov
or
nop
adc
call
lret
aas
clc
pop
cmp
xlat
mov
clc
lea
sub
addl
test
insl
enter
testl
iret
jg
incl
inc
cmp
xor
stc
popa
call
loopne
inc
dec
mov
or
mov
test
lea
rcrb
xor
mov
pop
aad
cmp
shll
mov
cmp
cmp
pop
cmp
leave
mov
inc
push
shrl
mov
inc
push
dec
xor
call
add
inc
cmpsb
int3
and
fldcw
lret
xor
mov
lods
out
roll
fsubrs
int
push
in
jae
dec
repnz
lahf
mov
cmp
test
je
gs
daa
out
xchg
dec
cld
push
daa
idivb
fdivl
insb
inc
ds
test
sbb
xor
adc
pop
add
mov
js
arpl
and
out
in
sbb
test
imul
adc
and
mov
in
inc
je
aas
xchg
sbb
icebp
callw
ret
fcoms
inc
aad
or
int
push
pop
ror
xchg
mov
and
dec
sahf
aaa
or
imul
mov
jo
test
cmp
inc
mov
sbb
add
lret
inc
addl
cmp
repz
ljmp
aas
mov
sbb
mov
push
mov
repnz
mov
mov
inc
mov
pop
push
sbb
inc
push
sbb
sbb
pop
and
xor
mov
jg
and
out
out
cmp
mov
cmc
dec
cmp
in
adc
xlat
or
fildll
lahf
dec
pop
lret
lret
cmpsl
or
jl
push
xchg
adc
xchg
xlat
jle
lret
es
cmp
inc
adc
push
dec
lods
mov
or
aam
and
cmpsb
push
rcrb
jp
cmp
lods
mov
roll
mov
push
popf
adc
pop
dec
or
in
ret
xchg
in
test
icebp
mov
aam
pop
adc
xor
or
std
fnstcw
rcr
mov
or
bound
in
cld
dec
fisubrl
sbb
pop
push
es
int
rorl
pop
mov
sti
mov
loope
mov
mov
jmp
add
xchg
adc
aam
pushf
pop
mov
das
jae
stos
outsl
fwait
jo
adc
arpl
push
fcomps
jo
cmp
cmp
pop
and
lret
loop
bound
cmp
adc
aaa
out
dec
lret
pop
mov
out
ss
adc
jle
lret
std
mov
pusha
dec
icebp
xchg
pop
lahf
scas
mov
int3
loop
or
loopne
push
jns
and
and
cmp
adc
xchg
pop
xchg
cwtl
cmp
and
fs
inc
out
mov
insb
int3
lock
dec
sub
sub
xchg
or
pop
fcompl
pop
pop
dec
pop
mov
adc
mov
jge
sbb
dec
lea
pop
or
popf
push
aam
loop
bound
test
cmpsb
loopne
aas
push
mov
mov
stc
imulb
cmc
adc
sub
lahf
xchg
pop
decb
inc
adc
cmp
push
pop
push
movsb
popa
push
jns
mov
ret
or
mulb
pop
andb
adc
loope
cmp
add
mov
cmc
test
dec
in
scas
imul
xchg
xor
out
pop
adc
ror
sti
cwtl
xchg
xchg
psubd
into
stos
jnp
xor
inc
sbb
inc
inc
js
loop
xchg
mov
loop
inc
outsb
adc
out
cmp
imul
std
andb
insb
add
pop
xor
int
mov
dec
ror
jl
jne
pop
push
adc
sub
lds
sub
andl
dec
sahf
dec
cmp
aas
sbb
jne
jmp
inc
shlb
gs
jg
lcall
loop
or
leave
inc
mov
jmp
jmp
pop
lds
xorl
in
xchg
push
test
ret
xor
loop
fdivrs
roll
sbbb
mov
mov
repz
out
push
fwait
cmpsl
mov
ds
xor
xchg
fcmovnbe
sbb
xor
out
subl
fs
sbb
cwtl
movsb
call
cmpsl
shlb
mov
fnsave
and
arpl
mov
and
mov
xlat
out
inc
and
loop
mov
sub
add
leave
or
xchg
lret
mov
xor
sbbb
pop
xor
sub
in
add
ret
out
loope
into
mov
inc
inc
ss
hlt
and
lret
xor
int3
std
jl
mov
mov
out
cmpb
lds
inc
jnp
fcoml
jg
dec
lea
shlb
jle
jp
test
pop
push
cmp
pop
ror
nop
pusha
or
push
push
push
rol
pop
pop
pop
xchg
push
pop
jl
sub
push
call
sub
cli
or
sbb
int
in
dec
pop
pop
and
add
xor
pop
pop
push
pop
push
jle
test
pop
push
inc
pop
cmp
jb
nop
push
push
pop
pop
nop
test
nop
or
cld
je
add
push
add
pop
jb
ror
call
dec
inc
js
push
sub
pop
jae
jnp
push
mov
pop
jae
push
mov
pop
clc
mov
inc
inc
inc
inc
add
test
and
push
push
push
xchg
pop
pop
pop
clc
inc
dec
add
ror
lea
sub
cmp
js
push
ror
pop
je
push
push
add
pop
and
cld
push
add
mov
pop
push
jp
push
rol
pop
pop
clc
js
rol
push
je
test
pop
nop
cmc
xor
add
push
push
ror
pop
pop
push
jg
jl
je
add
pop
sub
or
cmc
testl
je
push
jle
sub
pop
loop
jecxz
push
mov
mov
push
lahf
mov
movsl
pop
and
mov
mov
jae
mov
loop
push
inc
cmp
test
add
stc
adc
jg
sbb
cli
rolb
add
add
push
add
pop
loop
jecxz
xor
cmpsb
push
faddl
push
inc
push
push
pop
pop
or
push
call
out
stos
test
pop
cs
cmc
insl
xchg
push
xchg
mov
pop
xor
out
movsb
out
rol
bound
mov
cmp
push
pushl
xor
pop
pop
jp
and
push
call
sarl
inc
repz
clc
outsl
push
adc
cmpsb
or
outsl
dec
mov
cmp
cmpsb
mov
add
mov
inc
inc
inc
inc
push
call
fwait
sahf
gs
pop
mov
pop
out
in
mov
cmp
mov
xchg
sbb
out
inc
cmp
std
cmpsl
daa
aad
test
cmpsb
pop
movsb
aam
sti
punpckldq
aam
pop
and
sbb
xor
pop
jg
int
add
pop
push
push
pop
add
pop
jo
cmp
push
pop
xor
inc
dec
push
call
flds
and
sub
jae
sbb
test
insl
and
xchg
dec
loope
pop
rcrb
pop
lret
cmp
roll
pop
pop
dec
jne
push
call
add
pop
scas
fisttps
inc
or
and
test
std
jmp
call
arpl
lret
sbb
jp
les
add
sbb
aad
sbb
out
lds
inc
sbb
cmp
pop
push
jmp
sti
cmc
mov
push
dec
jae
sbb
and
inc
cmp
mov
mov
inc
xor
pop
pop
sub
nop
cld
outsb
dec
inc
cltd
mov
fcoms
xchg
jmp
ficompl
popf
mov
push
xchg
loopne
es
or
sbbb
leave
inc
pop
icebp
push
es
mov
test
jbe
sub
lock
jne
ja
js
add
test
jge
push
add
pop
push
add
pop
jae
xor
es
adc
dec
sti
mov
or
push
rcrl
xchg
sub
clc
lods
jmp
stc
fistpll
cmp
add
xchg
bound
mov
enter
daa
bound
cli
gs
mov
mov
xor
jecxz
lods
pop
nop
call
pop
pop
fsubrs
scas
addr16
jb
lahf
mov
mov
mov
sbb
loopne
adc
mov
add
scas
pop
dec
push
mov
add
call
jbe
in
xor
mov
icebp
rcl
jmp
call
sub
xchg
aas
hlt
imul
loope
out
dec
or
outsb
push
rcrb
mov
repnz
and
test
add
cld
or
into
bound
sbbl
and
jle
and
push
inc
scas
mov
jnp
mov
jmp
movsb
pop
rol
add
or
push
fldt
repnz
test
mov
add
test
dec
into
test
testb
imul
test
fbstp
push
icebp
test
ret
dec
dec
and
imul
mov
out
cwtl
mov
mov
fstps
push
lds
sub
add
gs
pop
stos
pop
inc
aad
shr
roll
jge
movsb
inc
mov
std
daa
jp
dec
cmpsb
cmp
cmp
push
outsl
ret
push
and
xchg
ret
dec
sahf
iret
fsts
push
imul
fs
jae
dec
out
xchg
inc
add
test
addb
mov
push
mov
inc
cmp
in
arpl
push
inc
jmp
insl
int3
cwtl
lods
mov
js
and
add
test
mov
pushl
mov
inc
popf
jne
repnz
lea
pop
nop
outsl
call
fistps
lahf
scas
ja
pop
call
xchg
das
mov
dec
xchg
dec
xchg
xchg
dec
push
jno
cmp
mov
xor
repz
movb
ja
lret
leave
loop
or
mov
andl
outsb
leave
dec
ret
lret
adc
inc
fistpl
cwtl
out
pushf
loop
cltd
in
jo
mov
lea
nop
cwtl
loopne
and
ret
fistpll
cmp
push
outsl
xchg
pusha
repz
out
xor
adc
andl
mov
int
addr16
push
sbb
and
clc
pop
sbb
sub
mov
xchg
push
mov
popf
dec
cmpsl
cmpsl
fsubrl
int3
cld
filds
popa
mov
mov
fwait
mov
in
cwtl
imull
pushl
fsubrs
cmpsb
xchg
mov
inc
lret
xchg
jne
mov
fcmovbe
js
sub
or
jmp
sti
push
xor
mov
mov
pop
or
sbb
stos
sbb
pop
cmpsl
sub
add
ffree
jae
movb
add
xorl
xor
or
xchg
in
es
popa
mov
rol
jmp
mov
call
push
sub
jle
mov
sub
jle
popa
fnstenv
xor
push
arpl
enter
es
sub
xchg
sub
rcl
pusha
adc
xchg
sbb
or
adc
test
push
push
out
adc
addl
add
sub
iret
xor
push
ret
not
jnp
push
push
add
lret
sbb
dec
dec
dec
test
push
xchg
ljmp
sbb
sub
int
das
inc
fnclex
ret
les
stc
stos
pop
in
dec
mov
add
xchg
mov
sub
jge
icebp
ret
leave
stos
inc
jge
subl
lods
or
addr16
lcall
inc
lock
cs
fs
xchg
cmpsl
add
dec
dec
outsb
jb
cmp
ds
pop
icebp
push
out
adcl
pushf
cltd
xor
ret
push
cld
and
bound
or
lret
loopne
adc
mov
shl
arpl
cmp
addr16
gs
and
dec
jmp
in
xchg
dec
ficomps
popl
js
pusha
ret
std
int3
out
add
mov
rcr
cld
pushf
mov
pop
js
lds
cs
outsl
dec
or
lret
lahf
adc
int3
jl
fstp
mov
add
sbb
clc
movsl
test
jo
adc
mov
int
in
add
rorb
pop
or
dec
cmpsl
lods
ds
arpl
roll
test
sub
test
loope
dec
test
or
fwait
mov
xor
in
jno
inc
fimuls
push
pusha
je
and
xchg
hlt
call
jl
out
xchg
or
in
scas
xchg
scas
adc
or
pop
imul
pop
and
and
stos
outsb
stos
inc
mov
loope
push
mov
sub
popa
aas
shl
jg
scas
add
rcll
push
or
mov
test
and
cltd
and
and
loop
push
xchg
lahf
bound
cmpsb
imul
xor
into
jae
filds
orl
in
or
rcrb
gs
mov
cmp
push
sahf
inc
imul
pushf
pusha
scas
repnz
scas
or
dec
in
jle
sbb
pop
movsl
sub
xchg
jbe
in
and
sbb
into
mov
cltd
cmp
out
mov
pusha
cli
xlat
imul
or
push
pushf
lds
mov
negb
mov
test
pop
fcompl
mov
jne
adcb
in
sub
or
in
jb
enter
cmp
mov
adc
inc
sbb
add
sbb
sbb
dec
aaa
insl
sbb
or
mov
inc
aam
cs
lods
sub
mov
cmc
dec
adc
cli
inc
lret
mov
adc
inc
sbb
sub
outsl
fwait
mov
ljmp
jne
repz
mul
dec
cli
adc
cmpsb
fiaddl
jbe
adc
pop
fxam
xor
add
adc
jge
or
imul
cmpb
xchg
ja
enter
testb
cmp
xchg
in
cmp
sbb
dec
lds
add
inc
mov
mov
data16
into
sub
scas
pop
enter
cmpb
ja
sbb
and
xor
add
mov
jbe
jmp
mov
daa
jmp
push
dec
leave
notl
mov
mov
xchg
fmull
rcll
addr16
xor
push
leave
rcr
add
mov
mov
or
push
xor
pop
pop
pushf
inc
pop
cmp
add
lock
lea
sub
xor
or
inc
iret
imul
movsl
in
xchg
loope
cmp
adc
stc
inc
mov
in
dec
dec
mov
mov
and
mov
mov
mov
iret
sub
jno
in
cs
mov
daa
pop
pusha
jecxz
or
in
xchg
scas
xlat
xchg
loop
mov
add
loop
push
in
xor
and
sub
push
sar
movsb
sub
push
std
ret
idiv
ret
jge
jge
into
rcrl
addb
cmp
stos
add
mov
pop
xchg
test
out
mov
xchg
or
jo
jmp
sub
and
mov
push
xlat
xor
loope
adc
cli
xor
dec
mov
es
push
adc
mov
scas
dec
test
jmp
cmpsb
cwtl
shrl
call
dec
out
lea
aad
jle
dec
pop
pop
jmp
cmp
dec
sub
adc
adcl
sbb
push
fstps
xor
xor
daa
mov
mov
rclb
xor
in
loop
adc
cmpsb
insl
test
cmp
pop
sbb
mov
push
lahf
lea
inc
aas
push
or
jmp
xchg
and
dec
int
enter
popa
mov
mov
push
ficomps
adc
stos
mov
lods
mov
sub
insl
in
adc
lret
adc
cmp
outsl
out
in
in
imulb
lcall
mov
push
inc
adc
xchg
or
adc
divl
and
xor
testb
cmpps
sbb
inc
sub
pop
lahf
jbe
stos
stc
iret
das
adc
ret
or
int3
mov
jne
dec
sbb
cmc
add
mov
jnp
cs
shr
mov
jmp
or
inc
mov
imul
mov
push
jo
fistl
sbb
test
jle
insl
fmuls
push
pop
push
sub
scas
or
and
pusha
sbb
scas
cmp
push
fisubs
xor
notl
in
cmp
add
add
int
sub
loop
adc
in
adc
lea
dec
jmp
subl
std
mov
add
test
loope
mov
clc
std
cmp
cs
lods
inc
jge
cmp
and
adc
mov
mov
pop
lret
rorl
test
ficoms
fsts
xchg
into
dec
or
pop
lea
xchg
rcrb
add
lock
sbb
jle
dec
lods
popf
outsb
ret
jne
outsb
aaa
adc
mov
or
loop
mov
mov
jl
pop
cmp
inc
sub
hlt
popf
cmpsb
inc
pushf
in
loop
push
sub
repnz
sbb
lea
daa
or
stos
idiv
stos
lret
imul
ja
data16
cmp
cld
jmp
hlt
push
mov
cmpsb
jb
push
std
ljmp
mov
dec
sub
call
dec
fmull
mov
lcall
xlat
add
mov
cmp
shrl
mov
jge
xchg
jg
hlt
mov
mov
out
outsl
sbb
add
dec
les
cmpsl
repnz
out
sbb
stos
inc
roll
xor
mov
ss
push
loop
divl
push
lock
push
test
push
inc
stos
fwait
rcrb
and
jb
xor
mov
ds
sbb
outsl
inc
iret
mov
mov
add
out
idiv
sbb
fistps
inc
mov
mov
add
lret
inc
ss
dec
std
push
adcl
pop
adc
sub
dec
xor
mov
push
test
lds
xlat
xor
std
outsb
xor
adc
outsl
dec
jnp
out
or
push
cmp
movsb
mov
loopne
push
sbb
jo
nop
test
xor
lock
mov
pavgw
inc
mov
cld
stos
fdiv
adc
imul
and
dec
lods
push
jbe
cmp
dec
roll
lods
xchg
stc
jb
cmp
ja
fistpll
push
xor
sbb
or
leave
pushf
test
imul
sbbl
sahf
mov
lea
fwait
pop
mov
sub
fisttpll
fwait
sbb
mov
cmp
xchg
jns
and
sbb
xchg
jns
into
popl
mov
xchg
call
dec
jo
xchg
lahf
cltd
std
add
mov
mov
shr
adc
mov
inc
sub
xchg
dec
sub
ds
xor
sahf
in
fidivrl
jno
negl
sarl
stc
inc
cwtl
xor
cmpsb
pop
xchg
jmp
andb
mov
std
pop
js
insb
dec
mov
sahf
sbb
popa
jge
or
push
fidivrl
pop
sub
mov
dec
jno
pushf
dec
jne
loopne
sub
mov
inc
lret
xor
test
stc
sahf
ds
imul
arpl
xchg
mov
xchg
in
ficoml
movsb
push
xlat
mov
daa
xor
sbbl
inc
loop
add
pop
inc
arpl
outsb
ret
shr
dec
jecxz
jecxz
add
push
testb
fs
add
push
and
mov
cli
insl
cs
imul
inc
jp
mov
pop
mov
xlat
outsl
and
je
pusha
sub
clc
outsl
or
xor
inc
adc
repz
test
insl
rorb
lods
xor
sbb
mov
lods
inc
call
push
or
mov
cmp
cmpsl
sbb
std
out
cli
cmp
mov
dec
fdivl
xchg
adc
inc
or
clc
pop
pusha
push
dec
or
fldenv
and
testl
imul
lret
pop
js
xchg
scas
adc
das
in
pushf
loop
cmp
ret
or
icebp
shr
push
mov
pop
lods
gs
cmp
xchg
dec
inc
inc
pusha
fmuls
pop
insl
lcall
push
pop
mov
sbb
xor
jle
lods
lahf
leave
ret
test
lods
in
movsl
call
pop
aam
sti
jp
push
jbe
adc
icebp
sti
pop
arpl
aas
xor
lea
js
lret
pop
pop
in
adc
test
aas
lock
popf
dec
popa
or
in
sbb
xor
cmp
leave
imul
imul
int3
xchg
inc
mov
mov
lock
std
cmpsb
fadds
mov
arpl
lds
adc
and
stos
addr16
pop
popa
out
aad
push
arpl
add
call
push
sbb
rcrb
addl
sbb
int
sub
mov
push
outsl
inc
pop
xor
sbb
in
bound
pusha
or
fildll
and
xor
push
in
mov
filds
imul
mov
cmpsl
and
mov
mov
xor
sbb
cmp
mov
imul
mov
add
nop
dec
mov
testb
inc
adc
sub
push
lret
aas
outsl
cli
adc
subb
testl
lods
loop
out
jp
push
or
mov
lahf
insb
int
add
sbb
mov
ljmp
pop
push
adc
or
into
jle
mov
fs
cmp
aad
cmp
pop
dec
inc
xchg
outsb
or
push
dec
pop
test
data16
mov
xchg
loope
pop
mov
hlt
roll
data16
mov
iret
push
xchg
fldt
pop
push
adc
push
sub
push
lahf
sarl
mov
pop
imul
gs
les
and
imull
outsb
sub
outsb
xchg
clc
js
xchg
push
flds
shll
in
push
mov
adc
mov
jb
xor
outsb
sahf
outsl
mov
lcall
insb
push
and
mov
sbbl
les
push
lods
cmpsb
sbb
into
xchg
pop
rorb
lea
xor
pop
pop
sbb
dec
xor
mov
and
daa
loope
mov
jl
cmp
cmpl
aam
mov
dec
jg
xlat
insb
mov
jbe
xchg
inc
test
or
je
ret
jae
cwtl
in
add
lock
sbb
cmp
mov
and
rcll
cltd
ljmp
xchg
mov
fildll
in
jno
in
or
hlt
adc
lcall
mov
aam
or
pop
add
ljmp
js
adc
push
pushf
pop
xor
mov
mov
std
xchg
out
test
stos
scas
add
sahf
fcomps
scas
cmp
dec
sbb
mov
test
xlat
mov
int3
mov
add
push
jge
lods
inc
cmpsl
mov
pop
pop
fs
dec
inc
push
xor
movsb
sub
jecxz
test
pop
mov
dec
jecxz
mov
xorb
jl
pop
push
cmp
sub
fcmove
or
loop
fbld
push
or
rcll
xorb
mov
movsl
mov
pop
mov
add
hlt
int3
leave
jae
jbe
fwait
pop
stos
aas
jno
push
dec
push
loope
ljmp
cs
or
and
nop
rorl
inc
xchg
sub
fdivr
test
mov
cli
icebp
or
or
mov
dec
mov
push
std
lea
sbb
cmpsb
insl
cmp
es
pop
rorl
insb
icebp
cmp
dec
push
addr16
out
mov
rorb
push
lahf
rorl
or
rcl
sti
inc
jmp
cmp
push
imul
xchg
adc
jge
xor
mov
lods
and
lahf
ret
sbb
xchg
int
jg
dec
in
dec
out
jge
mov
dec
jle
jne
test
pop
into
mov
and
sub
aas
xchg
in
lahf
jp
out
aaa
shll
mov
xchg
bound
dec
stos
mov
xor
inc
or
cmp
int
xchg
push
push
mov
push
mov
lods
mov
or
out
xchg
das
data16
lock
add
jo
lock
or
idivb
dec
mov
xor
sbbl
in
push
mov
inc
fisttpl
aas
mov
shl
pop
out
inc
sub
xchg
or
into
ljmp
xor
dec
add
pop
xorl
jo
jl
in
imul
test
mov
xor
mov
jmp
pop
aad
mov
or
or
jge
jnp
jle
xchg
or
sbb
jge
xor
push
xor
push
mov
movsb
out
aas
ss
fldt
inc
stos
jmp
inc
mov
shll
xchg
xorb
outsl
imul
jne
mov
lods
jg
add
imul
dec
and
push
fsubs
jecxz
inc
loopne
sbb
xor
mov
and
adc
sbb
mov
push
mov
or
cld
inc
mov
in
shl
pushf
pop
stos
bound
scas
cs
outsl
sbb
loope
fnclex
or
out
or
sarl
ja
inc
fcomp
stos
jbe
sbb
xor
mov
ja
jl
ja
cmpsb
mov
in
add
jnp
imul
mov
mov
cmp
popf
jno
cmpsb
pusha
repz
popf
sbb
mov
movsl
adc
pop
in
pusha
fdivrl
cli
cmp
leave
scas
jl
mov
jno
stc
jb
sub
xchg
jmp
in
leave
cli
jg
add
and
sbb
movsl
into
popf
dec
and
rcll
call
and
pop
cmc
ja
fistl
jae
fsub
push
movsb
sbb
cmp
mov
mov
shrb
adc
ljmp
cmp
cld
loop
cmp
push
add
lock
adc
cmpw
mov
xor
les
xchg
xrelease
ljmp
inc
loope
dec
or
or
addr16
mov
scas
jae
mov
pop
clc
mov
cmp
aas
inc
std
cmp
mov
mov
filds
add
movsb
dec
aaa
fucom
xchg
movsb
adc
loop
add
imulb
lea
xchg
ja
xchg
lahf
jg
fbld
xor
test
testl
out
add
cld
pop
jmp
inc
push
add
and
fwait
cmp
pushf
xor
cltd
mov
push
dec
rolb
xlat
xchg
in
idivb
xor
mov
xchg
sub
add
pop
xchg
ljmp
ds
movsl
add
stos
mov
jp
cs
and
add
das
sbb
and
movsl
adcb
mov
dec
stos
push
je
fwait
test
jb
sbb
icebp
push
sbb
sti
inc
ja
outsb
loopne
frstor
andb
inc
jno
movb
pop
mov
mov
mov
sub
xor
call
insl
sub
inc
push
pop
xor
and
movsb
pop
push
or
loope
fst
push
ficoms
icebp
cmpsb
push
rorl
test
adc
nop
imul
js,pn
aaa
lcall
push
hlt
inc
mov
mov
pop
cs
mov
loope
sahf
cmp
mov
xchg
xchg
sub
mov
cmp
scas
jbe
es
mov
and
pop
js
iret
push
lock
js
mov
sub
stos
or
loope
adc
add
jg
test
pushl
inc
add
mov
fdivrs
sub
or
cmp
imul
out
aam
fwait
ror
mov
inc
mov
or
mov
cltd
cld
or
xchg
push
ret
addr16
call
lcall
xor
stc
rorb
icebp
out
or
inc
scas
dec
fcomps
fprem
popa
lods
sarb
sbb
mov
or
xchg
pushf
dec
mov
mov
mov
lcall
jl
pop
dec
int3
xor
pop
push
insl
mov
jno
xor
or
loope
push
out
ljmp
add
mov
fisubl
jp
pusha
clc
push
in
lods
bound
dec
adc
mov
xor
mov
pop
mov
insb
les
inc
xorb
push
cltd
jecxz
mov
push
lods
sub
mov
mov
je
aad
leave
mov
mov
inc
in
movsb
lods
cmpsb
ljmp
mov
stos
fidivrl
push
insb
les
in
mov
jae
xchg
jns
push
pop
iret
fistl
imul
or
cmp
push
outsl
mov
mov
inc
pop
jo
pop
ja
ja
int
sub
out
hlt
fdivs
mov
movsl
mov
mov
fwait
mov
shl
into
xchg
ja
leave
popf
pushf
mov
push
adc
push
icebp
leave
jl
pop
sub
popf
push
adc
sahf
stos
ljmp
mov
ljmp
xchg
mov
daa
lock
ret
icebp
pop
lret
stos
xchg
inc
fs
mov
xlat
addb
dec
pop
out
clc
hlt
adc
mov
loopne
cld
out
push
or
insl
pop
hlt
int
or
test
pusha
pop
inc
stos
pop
xchg
pop
lahf
jle
jo
xchg
lret
aaa
push
add
pop
pop
inc
mov
mov
add
mov
loope
scas
cmpsb
sub
into
add
adc
imul
daa
lahf
push
jb
popf
xchg
out
cmp
enter
ja
mov
cld
and
cwtl
dec
pop
clc
movsb
xlat
sbb
push
jecxz
xchg
mov
push
inc
lods
xor
add
ljmp
movsb
daa
ljmp
mov
add
dec
stc
cmpsl
cmp
leave
in
fildl
imul
addr16
sti
and
jnp
sahf
jno
or
aas
idiv
cmp
lock
rorl
movsl
mov
jp
mov
clc
xchg
xor
divb
pop
fisttpl
pop
push
icebp
gs
ret
and
pop
pop
add
add
sbb
hlt
sahf
jge
push
hlt
out
mov
icebp
std
jno
ljmp
hlt
ficomps
mov
insl
scas
add
fildl
inc
scas
xlat
fmulp
push
and
mov
adcb
or
and
mov
fs
enter
dec
stos
adc
cmp
cmpb
call
pop
push
notl
xor
xchg
pop
or
enter
push
push
and
loop
xor
pop
imul
mov
jno
lock
sbb
dec
into
cmp
push
ret
xchg
push
mov
xchg
sub
cmpsb
test
add
jle
int3
push
sub
out
dec
test
aas
mov
mov
lds
xlat
mov
leave
dec
push
pushf
xor
inc
jbe
sbb
inc
daa
jle
jae
or
push
cmp
arpl
xor
xor
int
mov
fwait
mov
cmp
gs
mov
pop
or
ret
pop
and
xlat
fistpll
insb
pushf
adc
lock
lds
jns
aam
xchg
jns
cmovo
cltd
push
xchg
push
mov
add
mov
mov
insb
test
insl
xor
ja
xorb
ds
out
jbe
pop
mov
cwtl
lock
lds
test
lahf
ja
xchg
mov
rorb
xor
mov
je
xor
lcall
jmp
not
or
xor
dec
ret
movsl
gs
sub
sarl
iret
movsl
push
scas
push
and
push
pushf
imul
iret
pop
push
mov
xor
sub
testl
mov
popw
jp
aas
xchg
mov
jo
add
daa
aam
ljmp
xor
mov
test
sub
sbb
push
mov
mov
xchg
lret
jne
lods
in
cmp
inc
stos
fchs
out
pushf
shlb
xchg
adcb
add
jecxz
sub
mov
jmp
jnp
lock
push
xor
leave
lahf
popa
pop
scas
jnp
loop
into
inc
lahf
sub
iret
js
inc
movsb
or
or
jg
push
mov
xchg
adc
push
push
arpl
xchg
rclb
pop
adc
xorb
sbb
push
mov
in
fcmove
jne
xlat
and
mov
jnp
cs
sub
adc
mov
adc
add
sbb
sahf
fldenv
jnp
lock
mov
ljmp
xchg
jb
lret
xchg
adc
and
xor
mov
jmp
popa
fs
outsb
fwait
push
push
cmp
sub
jg
mov
movsb
dec
les
fisubl
dec
sbb
sbb
push
or
pop
or
adc
cli
repz
lcall
adcl
jnp
cmpsb
inc
sbb
mov
or
cmpsb
insl
pop
test
pusha
pop
divl
dec
in
call
cmp
xor
mov
jne
addl
jne
push
mov
xor
int3
pop
stos
or
mov
out
ffree
cs
sbb
mov
stc
lock
adc
jne
pop
xor
jb
cs
outsb
dec
pop
sub
sbb
ljmp
push
enter
out
aas
and
and
xchg
jle
repz
movsl
adc
cmp
xchg
je
dec
cltd
and
dec
cmp
fsubl
push
cmc
sbb
outsl
adc
sbbb
leave
sub
mov
divl
or
int3
dec
and
push
rcrl
cmp
jp
sahf
outsl
add
mov
mov
pop
lcall
and
arpl
ret
or
js
rol
int3
xchg
sbb
fcoms
fsubl
dec
xchg
and
xchg
ret
dec
inc
arpl
dec
fidivrs
fwait
arpl
mov
mov
lods
pop
imul
insl
xor
sub
dec
inc
push
xor
stos
xchg
xchg
pop
mov
aam
push
dec
fbstp
add
push
arpl
test
and
pusha
jecxz
pop
int3
sbb
add
sbbl
cmp
cmpl
out
idivl
aaa
push
push
xchg
or
gs
and
clc
pop
addr16
xchg
pop
add
add
jae
jnp
int3
orl
and
fildll
inc
fisubl
lret
and
cmp
test
xor
adc
cld
fs
cmp
sub
fiadds
add
iret
xchg
inc
sbb
fimuls
push
and
adc
hlt
sub
icebp
fisttpl
lret
push
les
pusha
sub
and
mov
cmpsb
aas
cmp
xchg
incb
and
fwait
push
repnz
add
out
adc
pop
outsl
insl
dec
cs
push
inc
mov
sbbl
inc
enter
inc
inc
outsb
push
jle
in
and
push
jl
test
inc
xchg
shll
or
xchg
jg
and
rorb
mov
jno
insl
pop
movsl
cli
cmp
lods
xchg
arpl
hlt
lock
into
inc
xchg
pop
clc
lods
test
movsl
test
out
adc
dec
jge
xchg
enter
mov
cmp
xor
pop
addr16
enter
test
mov
sti
shlb
cmp
mov
jne
xchg
stos
loopne
xchg
lods
fsubs
and
sub
sarb
fs
jae
and
fucompp
cmpsl
sbb
repnz
insb
outsb
cld
jns
and
in
mulb
cmp
int
push
stc
or
out
jle
mov
fxch
movsb
cmp
xchg
test
cmp
int
das
pop
mov
jle
lds
lret
or
scas
mov
dec
movsl
test
sbb
lcall
repz
pusha
inc
lcall
cmpxchg
mov
jmp
test
add
out
jecxz
addr16
or
dec
mov
sbb
nop
cmpsl
jns
mov
decb
iret
ss
dec
xchg
pop
adc
jp
adcl
in
mov
adcl
jo
xchg
sbb
push
push
adc
pop
outsl
shll
sub
or
lock
sbb
sub
negb
mov
mov
push
adc
sbb
cmpsl
movsb
lods
sti
inc
sub
sub
cmp
pop
mov
insl
push
xor
or
imul
in
or
pop
nop
in
pop
jl
icebp
scas
sbb
jns
repnz
insl
push
xchg
out
xor
out
fcoml
in
pushf
mov
and
lret
lds
jb
sub
lret
mov
fisttpl
cmpsb
rclb
js
inc
xchg
sarl
shll
sbb
add
mov
setbe
jecxz
jno
les
jmp
sbb
lret
lret
lcall
jo
test
jmp
xchg
add
cli
pop
lret
test
repz
lea
jmp
jmp
mov
sub
mov
add
movsb
adc
out
jmp
xor
cmp
pop
or
adc
jne
rol
lock
add
aas
mov
jb
mov
lahf
sahf
out
or
js
out
pop
icebp
adc
dec
sub
push
xchg
xchg
stos
mov
or
icebp
jg
and
mov
inc
addr16
pushf
pop
dec
loope
es
xchg
and
adc
xchg
das
jmp
repnz
add
inc
lret
hlt
xor
dec
xchg
dec
lods
or
imul
pop
sahf
shll
push
loop
movsb
nop
sub
xor
jnp
xor
xorb
xor
cld
fiaddl
in
xchg
add
dec
pop
sub
jns
cmp
adc
shlb
and
cmp
test
lods
adc
repz
push
out
jp
cmc
std
push
dec
xchg
gs
cs
push
es
cmp
pop
stos
pop
mov
fadd
les
pop
mov
in
mov
inc
jno
test
jg
jp
sbb
subb
daa
sahf
jnp
jno
xchg
and
out
lock
push
out
xor
push
mov
adc
in
pop
and
mov
pop
repz
push
mov
into
mov
or
lds
push
jno
fs
in
dec
pop
in
sbb
pop
adc
pushf
add
inc
jecxz
ss
jnp
xor
or
mov
cltd
adc
clc
cmpsl
call
fcoml
ret
cmc
push
fcoms
test
mov
jnp
pop
bswap
jmp
scas
popf
flds
iret
stos
push
movsb
lea
shll
hlt
test
xor
mov
mov
fidivrs
xchg
mov
xchg
jno
into
lret
clc
jns
jo
lods
cmp
orb
jle
sbb
test
and
cmp
and
or
lret
bound
push
sbb
and
lds
fistpl
decl
push
xchg
mov
and
push
adc
pop
mov
dec
xor
lea
sub
aad
mov
icebp
cmp
lahf
push
insl
addr16
jle
stos
cmp
ds
inc
cli
mov
rolb
xor
repz
pop
add
cld
ss
dec
test
popa
in
data16
jmp
or
arpl
dec
hlt
jp
cs
imul
gs
rcll
cli
push
jg
aaa
push
add
in
push
sub
jmp
rcr
and
mov
sarl
cli
cltd
xor
inc
loopne
sub
repnz
jae
dec
enter
mov
and
fistps
cmp
shr
dec
inc
dec
dec
nop
adc
jle
sub
add
jp
inc
sti
in
imul
push
push
jmp
sti
outsl
mov
movsb
dec
std
push
push
fidivs
pop
mov
xor
add
adc
push
inc
ror
mov
jmp
cmp
in
sub
push
ds
je
inc
leave
cmp
mov
in
push
adc
jge
jp
mov
xor
add
int3
mov
insb
fdivrs
or
pop
int
mov
jmp
scas
add
insl
mov
rcrl
mov
cmp
or
repz
cltd
pop
rcrl
stos
ss
pop
fwait
test
or
add
setl
push
out
lds
fisttpl
ret
jg
aad
repz
jmp
jno
xchg
mov
xchg
push
cmp
xor
mov
jns
pusha
nop
les
mov
enter
mov
adc
jge
or
fmull
xchg
pop
jne
ljmp
dec
adc
dec
mov
leave
mov
jno
sbb
lea
push
fwait
in
xchg
sub
or
shl
aas
mov
push
mov
aaa
inc
xchg
aaa
xchg
stos
and
enter
je
inc
sbb
add
and
xchg
add
cs
jnp
cmpsl
in
mov
sub
les
mov
mov
xchg
jno
js
loop
mov
pop
scas
aaa
jecxz
int
pusha
fcomps
mov
mov
pop
push
pop
jecxz
mov
dec
xor
xor
pop
push
mov
pop
stos
xor
push
adc
mov
mov
out
es
and
jl
inc
fwait
xchg
lods
movb
sub
xchg
push
outsb
fwait
add
stc
ds
add
aad
add
and
cwtl
pusha
mov
mov
cwtl
ret
adc
mov
scas
mov
arpl
imul
out
fldt
cmc
repnz
hlt
cld
dec
xchg
add
or
out
jl
mov
repz
dec
pop
sub
and
add
or
mov
sahf
push
aam
jbe
cwtl
lock
stos
std
xor
test
mov
out
imul
pop
call
div
jecxz
lods
jle
and
mov
movsb
inc
popa
jnp
addr16
or
mov
xchg
iret
in
repnz
stc
cmpsl
adc
fs
aaa
pop
sahf
push
and
rcll
pop
jmp
out
jle
mov
cmp
rcrb
or
das
jo
sbb
test
xchg
leave
jl,pn
jmp
pop
int
jge
dec
xlat
adc
cmp
icebp
fs
sub
push
ss
insb
fs
push
xchg
insl
inc
or
ja
xor
sub
adc
cmpsl
dec
stos
mov
fidivrs
and
stos
pop
hlt
lret
push
cmp
pop
pop
into
mov
hlt
xor
in
adc
push
cli
mov
adc
mov
pop
fnsave
mov
push
inc
jl
cmp
sbbl
jle
out
adc
mov
js
in
js
jnp
inc
js
mov
mov
pop
mov
mov
icebp
mov
xor
out
inc
sti
lcall
dec
xchg
jnp
push
in
mov
and
test
test
mov
xchg
lock
test
iret
mov
pop
movsl
push
pop
aas
repz
test
dec
jno
lcall
xchg
pop
pop
test
pop
ss
sahf
or
loope
jp
adc
dec
ds
xor
dec
or
popa
cmp
pop
mov
jg
aad
xchg
arpl
dec
das
jno
test
repz
adc
xchg
ljmp
mov
out
inc
jno
cmp
xor
cs
add
divb
out
cmp
sti
mov
jg
shl
in
fadd
aam
mov
stc
adc
ds
inc
test
push
dec
sbb
js
cwtl
popa
std
mov
sub
into
pusha
lret
jns
icebp
mov
lahf
or
lret
sarl
adc
mov
jnp
xchg
xorps
sbb
or
xchg
or
call
adc
mov
add
aam
xchg
xchg
je
mov
lods
cltd
mov
test
aad
jmp
xchg
mov
test
jp
add
xor
cwtl
pusha
cmpsl
inc
data16
jge
xchg
out
jns
cmp
sbb
xor
sub
inc
fldcw
mov
add
into
pusha
mov
jae
in
xchg
cld
xchg
xlat
or
pop
sbb
lock
ja
pop
sub
popa
jl
movsb
mov
imul
xor
scas
inc
and
mov
adc
cmp
leave
jp
mov
jo
inc
dec
stos
push
sbb
shr
pushf
xchg
xor
stos
inc
mov
jb
push
insl
inc
mov
jg
clc
dec
stos
daa
mov
ret
sbb
in
test
ds
sub
insl
popa
mov
mov
lret
sbb
aad
adc
in
mov
inc
push
loopne
and
sbb
cmp
pop
mov
xor
adc
inc
fisttps
add
test
mov
hlt
xchg
scas
add
aam
push
add
popl
loop
stc
out
icebp
pushl
dec
mov
ret
xchg
lea
mov
es
xchg
mov
push
nop
mov
movsl
pop
mov
dec
mov
xor
in
jp
jns
sub
add
push
jg
xlat
repz
sbb
inc
test
xchg
gs
out
jle
mov
inc
mov
xchg
and
or
mov
and
pop
jmp
cmp
sti
pop
sbb
dec
sarb
adc
pop
loope
xor
or
sub
and
dec
sbb
pop
mov
hlt
adc
mov
push
inc
mov
mov
stos
jno
dec
lock
repnz
movsl
test
add
pop
rcrb
push
mov
jae
xor
das
inc
dec
push
pop
push
cmpsl
jns
push
xor
dec
insb
es
js
xchg
rorb
jno
loop
sub
pop
xchg
sbb
sbb
xchg
in
add
add
outsl
repnz
push
iret
inc
lret
add
pop
fsts
dec
jnp
outsb
sbb
mov
push
rclb
je
cmp
pop
mov
push
jg
mov
adc
jo
lds
cmp
fldenv
mov
scas
jg
mov
out
pop
jecxz
stos
cmpsl
jp
mov
xchg
jmp
out
in
or
lret
dec
subl
push
mov
rorl
out
sbb
add
lret
sub
insb
pop
push
mov
fisttpll
int3
addr16
popf
loopne
lcall
out
jb
push
xor
cld
fstpl
adc
add
andb
inc
std
inc
adc
repnz
mov
sbb
fwait
lea
mov
sub
add
mov
sbb
cmpl
sbb
or
mov
or
shr
daa
cmp
mov
lea
in
outsl
push
sbb
xor
add
mov
clc
lods
fstl
outsb
sub
decl
pop
mov
adc
sahf
push
out
jns
bound
dec
mov
js
sbb
rorl
pop
shr
cmp
shlb
pop
orl
xchg
into
mov
sarl
adc
sarb
rcrb
repz
mov
mov
and
out
push
and
inc
sbb
scas
cltd
dec
and
push
daa
sbb
inc
lcall
hlt
mov
pushf
sets
add
pop
sbb
mov
gs
imul
xor
inc
les
push
stc
add
rorl
sbb
xchg
or
fstpt
mov
cmp
mov
je
pop
mov
add
std
adc
mov
jo
pop
repnz
jnp
lcall
mov
call
cmp
dec
pop
adc
popf
sub
jp
pop
rol
jmp
fidivrl
or
js
sbb
bound
aaa
js
sub
fisubrl
pop
out
sbb
loopne
adc
call
cmp
jno
out
inc
fistps
cmp
pusha
shlb
ret
clc
mov
es
push
je
lods
enter
popa
dec
rcr
pushf
xorb
outsl
xchg
shrl
jge
mov
xor
jnp
sub
mov
or
cmc
or
xor
roll
cwtl
mov
int
cmp
push
dec
call
dec
dec
or
lock
mov
sub
adc
push
push
jmp
dec
and
pop
jns
xor
out
es
ljmp
jno
clc
hlt
lret
mov
mov
addl
and
movsl
inc
add
data16
pop
int3
pop
cmpsb
sbb
cmp
push
jge
sub
pop
ja
imul
fsubrl
fnstenv
inc
jbe
dec
and
idivl
jbe
mov
push
faddl
jp
inc
push
adc
cmp
jno
xchg
cmp
ret
cwtl
nop
xchg
rol
divb
pop
or
sbb
ljmp
stc
out
sub
pop
movsl
xchg
in
mov
sub
repnz
out
or
mov
bts
mov
iret
fsubrs
mov
sbb
pop
mov
in
jb
stos
lock
or
xorl
gs
mov
or
jmp
lock
and
daa
fistl
xor
iret
adc
into
cmp
adc
xor
add
pushf
ret
sbb
scas
daa
lods
std
lods
leave
ljmp
sub
jne
nop
xchg
push
cmp
lret
or
push
mov
jecxz
push
inc
roll
dec
shr
ja
lods
xchg
pop
pop
test
xchg
or
inc
add
pop
mov
in
mov
test
adc
add
mov
mov
addl
movsb
add
rcl
adc
js
xchg
add
cli
icebp
cmc
cmp
inc
inc
outsl
mov
or
xchg
rcrl
loop
pop
fs
pop
icebp
sub
rcrl
xor
and
out
inc
xor
loope
add
js
mov
jo
push
jl
stos
cmp
xor
cmc
lret
xlat
inc
add
dec
xor
repz
in
lds
lock
scas
aam
adcl
jo
add
inc
in
ljmp
mov
call
xchg
cs
adcb
pop
and
xor
dec
cltd
jbe
pop
adc
ljmp
adc
mov
mov
pop
sub
rcl
pop
test
xor
out
pushl
pop
movsb
popa
push
movsb
stos
rcrl
dec
shll
adc
xor
jne,pt
adc
inc
sbb
inc
sbb
add
gs
pop
or
xor
cmp
mov
mov
fmuls
or
into
add
idivb
mov
lcall
jae
push
outsl
mov
test
fdivrp
pop
cs
adc
pop
clc
ret
into
push
dec
mov
test
dec
ret
stos
into
push
mov
jmp
cli
xchg
and
dec
aaa
xor
fildll
decb
inc
test
add
mov
cmpb
xchg
cmp
dec
int3
ljmp
dec
pop
add
test
lds
iret
in
pop
and
cmp
outsb
push
and
arpl
fwait
mov
xor
xchg
xor
pop
cmpsl
daa
outsl
lods
pop
dec
testl
push
popf
in
xchg
fld1
mov
mov
lods
loopne
dec
push
sahf
enter
xchg
loopne
in
xor
or
jmp
in
xor
es
push
aaa
es
mov
dec
sti
jae
jns
or
mov
pop
lds
sti
xchg
adc
xor
fwait
xchg
std
mov
call
fldcw
mov
aam
mov
sar
adc
std
dec
roll
push
or
movhps
cmp
loop
test
or
ljmp
bound
push
loopne
inc
rcrl
enter
sbb
xchg
push
jle
xchg
leave
jg
add
push
outsl
cltd
pop
outsb
xor
push
sub
mov
xchg
mov
pop
add
js
hlt
sarb
push
push
outsl
pop
xchg
insl
data16
idivl
mov
push
jp
xchg
mov
shlb
je
leave
mov
push
test
ffreep
mov
push
xor
arpl
int
ss
lods
cmc
xchg
pop
inc
inc
adc
arpl
sbb
mov
divb
stc
into
and
mov
mov
std
add
ds
mov
aaa
out
add
fiadds
adc
mov
mov
add
sbb
fcmovb
sbb
incb
ret
jp
arpl
add
test
sub
daa
cmp
sti
mov
add
inc
scas
xor
push
leave
imul
insl
pusha
push
mov
out
imul
repnz
icebp
push
shr
sti
dec
jmp
lahf
mov
stos
mov
mov
or
pop
test
lods
pop
lods
ljmp
cmp
cmp
pusha
pushf
arpl
pop
iret
roll
ja
cs
fwait
popa
sub
dec
insb
push
mov
and
test
nop/reserved
push
movsb
int
jae
inc
test
lock
mov
stos
aaa
xchg
mov
sub
cwtl
xchg
lcall
ret
pop
lods
mov
add
push
push
pop
outsl
xor
sub
mov
adc
enter
in
dec
mov
jecxz
shl
dec
popa
movsl
rcrl
in
pop
push
pop
jae
or
lea
std
ss
sub
xor
sub
dec
scas
outsl
jae
outsl
sbb
mul
call
jbe
pop
movsl
dec
sub
dec
cs
mov
leave
cs
cmpsb
je
fcompl
add
push
sbb
fidivrl
repz
movsb
je
dec
notb
xchg
subb
in
jb
cmp
mov
loope
add
cmp
push
push
lret
das
in
ss
push
add
packuswb
ljmp
inc
mov
lds
xchg
in
jp
mov
rcll
xchg
dec
mov
call
scas
testb
dec
push
mov
mov
pop
rcll
adc
pop
mov
and
inc
pop
xchg
or
pop
jo
adc
je
mov
xlat
xor
push
in
test
pop
mov
jl
mov
and
roll
and
dec
enter
icebp
xchg
pushf
add
push
sbb
mov
pop
xchg
ret
das
sbb
incl
jo
pop
addl
pop
xor
fistpl
xor
faddp
xchg
mov
lock
sub
dec
xchg
mov
test
lea
or
xor
push
or
ficoml
mov
in
jne
jp
in
mull
inc
cmp
inc
jp
stc
aas
mov
pcmpeqb
mov
mov
aam
mov
or
leave
jecxz
fisttpll
andb
ljmpw
sarl
mov
les
insb
push
mov
xlat
xchg
jmp
cs
pop
and
inc
lret
insb
mov
cltd
pushf
fdivl
arpl
push
outsl
sahf
pushl
int3
test
cmp
outsb
adc
mov
clc
adc
add
stc
clc
mov
fadds
pop
fucomi
fildl
aas
xchg
sub
insl
sahf
push
bound
pop
and
jg
test
add
jp
fildl
push
jne
inc
pusha
cwtl
or
test
jg
in
inc
inc
push
push
ja
mov
and
loope
insb
push
jbe
or
pushf
mov
in
xor
data16
mov
or
int3
mov
cs
call
inc
fnstsw
add
das
clc
sbb
aam
dec
dec
les
dec
adc
dec
inc
xchg
stos
add
mov
sbb
or
mov
jp
rclb
pop
and
jge
mov
jnp
or
xlat
ss
loop
mov
sub
test
out
rolb
cmp
in
push
jle
adc
je
loope
jmp
inc
pop
adc
movsl
aas
dec
inc
mov
loope
xchg
push
pop
div
subl
sbb
jl
ret
pop
ja
popf
les
add
out
test
xchg
dec
scas
mov
push
xor
test
mov
jmp
sub
push
push
shll
push
mov
clc
daa
in
mov
and
pop
arpl
mov
cmp
xor
stos
add
push
or
lret
mov
fwait
outsb
ret
mov
jb
inc
fwait
jmp
fadd
pop
push
add
sbb
mov
loop
xchg
enter
fs
lret
inc
filds
fwait
cwtl
inc
lahf
and
push
xor
cmp
jo
je
or
jecxz
sar
sub
es
jne
mov
lea
loope
nop
mov
mov
mov
adc
jl
jns
inc
inc
add
insl
rorl
sbb
jns
dec
pop
mov
ljmp
mov
xchg
dec
xchg
lret
xchg
cmp
sbb
out
mov
pusha
or
mov
mov
xchg
stos
cmp
dec
es
outsl
movq
in
mov
je
cmp
ljmp
leave
jecxz
outsb
mov
aas
push
dec
add
ds
push
sub
dec
pop
pop
shlb
iret
pop
cs
sbb
inc
cld
arpl
push
inc
jl
cs
jnp
push
or
or
sar
pop
out
cmpsb
mov
nop
adcl
adcb
shll
add
or
push
mov
les
iret
sahf
dec
push
shlb
icebp
jp
subb
cli
loope
hlt
xor
push
adc
mov
int
rcr
jbe
mov
cmpsb
into
mov
idivl
xchg
mov
in
or
ret
aad
stos
pusha
test
into
add
jbe
xchg
daa
js
jl
sub
sahf
jns
xchg
arpl
aaa
lock
dec
mov
in
and
fdivr
xchg
lret
adc
repz
out
push
jb
cs
inc
fimull
repnz
out
pop
push
push
cs
xchg
xchg
loopne
inc
popa
test
inc
mov
push
jo
mov
xchg
pushf
sbb
lods
sahf
movsl
insb
sbb
jbe
sub
gs
pop
xor
ret
add
inc
push
mov
mov
pusha
repz
sbb
fdivl
dec
not
insb
pusha
xchg
sub
hlt
mul
pop
cmp
in
or
mov
out
pop
sub
ret
ret
fnstsw
xchg
stos
inc
shl
and
sbb
mov
xor
outsl
sarb
bound
ss
push
adc
mov
jns
cmp
shlb
outsb
mov
rorb
add
mov
pop
mov
push
inc
jno
addb
stos
cmp
push
and
orl
jbe
push
and
jmp
mov
scas
mov
mov
push
fisttpl
subb
sub
inc
sbb
data16
dec
add
ds
adcb
sub
jecxz
sbb
movb
clc
gs
loope
insb
sub
movsb
outsb
push
popa
xchg
dec
inc
roll
add
jle
xchg
push
cmp
stc
jo
out
push
cmpsb
stos
dec
adcl
mov
mov
dec
in
cmp
sbb
xor
andl
cmp
pushf
jge
movl
je
aam
jl
pop
push
imul
aaa
popf
xor
fdiv
push
rorl
in
ja
repz
shlb
das
cmpsb
fldcw
push
mov
movsb
jge
sub
mov
mov
mov
mov
sbb
addr16
cmp
xchg
in
lret
cltd
pop
fcomps
inc
and
addb
xchg
dec
jmp
push
push
jg
hlt
fiaddl
arpl
ficomps
adc
das
ret
lahf
mov
ret
pop
mov
add
cmpsl
mov
repz
lds
enterw
xchg
sub
pop
imul
je
add
inc
dec
mov
push
test
les
rcrb
jp
sub
xor
fimuls
andb
add
dec
mov
fldcw
lahf
es
pop
and
das
shrl
mov
cmp
out
rcr
cwtl
pop
sbb
inc
int3
add
pop
dec
jecxz
mov
cmpsl
push
in
inc
aas
mov
shrb
mov
clc
cmp
jno
add
jp
out
cmc
dec
dec
loop
daa
pop
dec
inc
int3
and
or
or
inc
mov
cltd
outsl
jg
in
test
dec
stc
repnz
mov
sbb
scas
fldt
xchg
jecxz
mov
push
dec
arpl
sub
pop
pop
mov
cs
fwait
dec
sub
repz
adc
movsl
sub
adc
mov
jns
inc
outsb
es
aam
in
cmp
mov
sbb
mov
jns
mov
in
xchg
mov
fadds
out
mov
ja
cld
fldl
mov
xchg
sarl
cmpb
test
stos
mov
inc
sbb
adc
jnp
xchg
pop
leave
rcrb
add
hlt
rcrb
jp
stos
mov
sahf
aas
sub
imul
pop
subl
flds
xor
in
test
add
gs
faddl
jmp
and
or
out
sub
sub
push
lret
aas
push
or
shr
out
xor
sub
loop
jnp
loopne
mov
mov
mov
dec
fcoms
cli
mov
xor
sub
lea
out
xchg
das
jae
imul
into
mov
mov
pop
hlt
mov
inc
enter
inc
xor
mov
push
mov
daa
shrb
rcll
loopne
pop
cwtl
inc
leave
mov
mov
insb
inc
shll
xor
cmpsl
mov
repnz
dec
sbb
test
repnz
test
push
jge
mov
push
inc
rorl
es
adc
mov
and
cmc
xchg
bound
lcall
mov
scas
or
gs
pop
lahf
pop
imul
add
mov
jne
push
adc
mov
cmp
aad
xchg
pmaxub
xchg
cmp
dec
pop
sahf
ja
pop
inc
lret
sub
inc
iret
mov
outsb
or
xchg
cmc
mov
jmp
or
cmp
dec
in
and
push
imul
mov
xlat
fstp
adc
aas
mov
jecxz
fcoms
adc
pushf
imul
jo
mov
adc
iret
sarl
test
cmp
sub
mov
test
jge
push
mov
mov
cmp
mov
pop
pop
pop
xchg
mov
iret
push
in
add
outsl
add
mulb
or
lods
je
into
mov
jle
aas
stos
jnp
adc
inc
repnz
and
clc
push
sbb
mov
add
aas
mov
xor
cmp
loop
out
ds
dec
lcall
daa
pop
iret
enter
xchg
push
shrl
sub
lock
and
repz
aas
mov
out
rcrl
jl
enter
aaa
mov
xchg
sub
push
sbb
and
jmp
fucomp
jmp
pop
mov
cli
jmp
ret
add
push
jne
into
pop
imul
stos
sub
push
pushf
inc
mov
mov
arpl
adc
xor
xchg
lret
cmpb
dec
dec
sbb
mov
or
lods
push
stos
xchg
loope
mov
shlb
ja
scas
outsl
shrl
ss
or
dec
lods
das
jl
loope
jg
inc
and
adc
repz
sbb
inc
mov
dec
movsb
aad
leave
dec
ss
lret
in
cmp
xorl
xchg
mov
mov
jae
mov
adc
imul
pop
xchg
testl
pop
xchg
movsb
imul
stos
fsubs
mov
pop
insl
test
repz
mov
dec
jae
inc
pop
jl
jp
ret
xor
pop
setg
sub
pop
out
fsubl
sub
andb
int3
les
icebp
loopne
push
mov
pop
pop
mov
dec
inc
xchg
bswap
mov
les
dec
sub
dec
and
sub
daa
xchg
xchg
and
int3
inc
push
inc
jae
mov
inc
mov
or
sbb
sti
jp
test
scas
add
and
fistpll
popf
lret
ret
int3
nop
mov
jg
or
mov
sbb
rorl
mov
push
jbe
push
in
roll
pop
mov
pop
ljmp
mov
push
rolb
cmpsl
jmp
lret
stc
cwtl
mov
mov
xchg
rcl
rcrl
xchg
jg
movsl
lret
mov
or
out
xchg
xor
jl
cmpsb
fwait
lods
fnsave
mov
mov
movsl
xchg
add
ss
das
rolb
in
bound
sub
scas
and
fucom
sti
getsec
mov
xor
cmc
cld
fisubrs
in
aas
mov
mov
cli
push
cmc
push
enter
movsl
mov
xchg
test
das
mov
int
and
xor
add
sub
loope
fldl
loop
popf
xor
imul
xor
xorb
adcb
sub
mov
fnsave
icebp
ja
xor
rcrl
leave
jge
sahf
dec
data16
sbb
cmp
cmp
popa
dec
xchg
jg
lods
add
adc
mov
xchg
sbb
aad
fstl
out
push
or
sbb
fwait
ds
pusha
pop
test
sub
push
subb
call
or
pop
add
sbb
stos
pop
repz
pop
out
call
pop
cmp
enter
mov
cltd
outsl
add
mov
adc
shl
andl
int
add
xchg
and
arpl
loopne
push
in
xor
sub
sbb
mov
movsb
enter
jg
mov
pop
ss
pusha
test
iret
jb
xchg
xchg
dec
and
push
sarl
or
pushf
into
xlat
xchg
cmp
repnz
je
inc
jns
enter
jnp
push
fnclex
sarb
sbb
and
push
xchg
adc
sub
scas
push
aaa
sbb
mov
cmp
lea
inc
xchg
jl
pop
dec
shlb
adc
imul
cmp
mov
mov
push
mov
insl
push
jne
leave
sub
jp
ficomps
adc
add
lock
mov
jnp
sub
and
popf
ds
decb
cmc
mov
push
mov
or
jno
push
insb
adc
lods
adc
add
aas
adc
movsl
cli
cmp
rcr
add
cmp
in
enter
movsl
mov
jmp
add
fwait
mov
cs
add
mov
push
imul
imulb
mov
sbb
aad
fnsave
je
adc
and
ljmp
jnp
mov
xor
dec
xchg
mov
dec
iret
add
sub
push
in
movsl
xorl
test
sub
sti
sub
jg
xchg
push
ficomps
jg
mov
cmp
out
push
dec
cmpb
jb
clc
mov
cmpsl
mov
and
inc
rclb
mov
xchg
mov
dec
imul
mov
dec
and
fistpll
xchg
rcr
pop
jmp
or
mov
imul
imul
and
sbb
cmpsl
mov
mov
pop
inc
mov
sbb
iret
sarb
movsl
shll
pop
negl
sub
in
sub
sbb
xchg
mov
mov
push
test
add
dec
push
jns
xchg
xor
into
mov
fcoml
lods
or
xchg
lret
push
jle
pop
leave
mov
mov
add
outsl
jp
adc
iret
xchg
jno
shll
lds
scas
pushf
sub
fwait
loopne
stos
out
popf
jb
sti
jp
pushf
or
and
adc
dec
and
leave
mov
inc
dec
clc
and
cmpb
mov
cmp
out
jo
imul
xlat
push
jne
pop
xchg
fimuls
into
insb
cli
dec
or
add
and
lcall
add
out
xchg
cmp
clc
stc
scas
call
fists
ret
jle
xlat
push
add
orb
rcrl
sbb
sub
bound
loop
cli
mov
out
pop
sbb
or
mov
test
mov
inc
jae
add
lret
notb
outsb
pop
jne
inc
cli
into
int3
in
orb
inc
testb
insb
repnz
shll
adc
push
add
mov
mov
js
add
sbb
xor
sub
ficoms
mov
aaa
inc
inc
repnz
test
loope
sub
xor
aaa
lea
and
into
cmp
repz
xor
ja
and
cmpsl
rolb
xchg
scas
add
cmpb
test
sti
or
test
push
out
sbb
incl
sahf
cs
or
jecxz
xchg
imul
roll
dec
cs
je
push
jae
shl
add
push
notl
push
adc
gs
sub
lahf
and
cltd
push
lret
mov
adc
xchg
xor
shlb
and
scas
jp
das
cwtl
lcall
xlat
mov
stos
push
loope
daa
sub
mov
leave
cmp
mov
rcl
lret
cmpsb
cmpsl
adc
icebp
mov
mov
xchg
movsl
xchg
push
repnz
sub
sub
scas
clc
sbb
adc
sub
add
test
add
lcall
xor
jnp
insl
test
aad
int
adc
mov
jmp
add
dec
popa
movsb
jecxz
pop
daa
call
sbb
fsubrl
pop
cld
outsb
insl
xor
cmpsl
mov
sbb
shr
data16
xchg
or
lock
shrb
dec
mov
and
dec
cld
sub
pusha
stc
sahf
imul
sub
dec
mov
rcrl
mov
xor
or
lahf
mov
ret
imul
mov
cmpsb
std
xor
sti
ud1
inc
daa
xor
jno
pop
mov
fwait
div
push
ss
mov
xor
jge
push
scas
push
call
adc
pop
aad
sbb
loopne
jb
insb
inc
hlt
pop
pop
mov
mov
add
jg
ds
fidivrl
sub
and
sbb
fdiv
cmp
mov
push
lahf
inc
sti
fmuls
fidivrs
sbb
fisubl
clc
pop
mov
stos
es
inc
leavew
subb
iret
mov
xchg
or
cmpsb
and
cmp
rcl
or
cmc
in
mov
loop
jbe
dec
jmp
dec
sub
into
mov
lods
push
aas
loopne
inc
divl
and
inc
xor
mov
outsl
cmc
push
or
add
mov
rcrb
jbe
insl
insb
pop
les
mov
push
lods
les
lcall
in
outsb
or
xor
pop
mov
aad
arpl
xor
mov
dec
sub
mov
loop
std
jns
scas
ficoml
mov
lock
ljmp
clc
push
xchg
push
lea
push
sbb
test
das
push
clc
cmp
mov
mov
adc
push
push
add
dec
jae
push
sub
adc
xor
xor
lahf
cmpsb
pop
xchg
sub
mov
mov
cmpsb
inc
jne
stc
loope
lret
inc
cmp
mov
adc
or
dec
mov
stos
mov
mov
jg,pt
and
fstl
push
out
fimull
adc
cld
sbb
sahf
adc
imul
in
in
scas
imul
fdivrs
push
or
shll
hlt
cltd
fistpll
mov
movsb
adc
xchg
pop
xchg
ds
aad
call
into
jmp
jo
push
int3
lock
lods
pop
cmp
cltd
sti
xchg
test
test
xchg
inc
sub
andl
or
in
mov
push
or
push
push
cmp
and
and
jae
ret
pop
sahf
icebp
adc
arpl
jne
lahf
in
es
jno
sarl
insl
outsl
adc
mov
mov
jmp
inc
aas
xchg
sbb
mov
push
pop
xor
mov
scas
enter
cmp
test
jmp
xor
mov
insl
jne
mov
testl
sub
jecxz
xchg
sub
or
testb
dec
mov
mov
sbbl
add
repz
pop
imul
cltd
xor
cli
aam
cld
xchg
inc
push
cmp
jo
in
cmp
mov
adc
movsb
jge
lahf
xlat
stc
jmp
jns
adc
ss
pushf
push
aaa
cmpsb
mov
jl
fdivrs
mov
lahf
popf
add
pop
test
fwait
in
insb
mov
or
into
mov
stc
mov
sub
add
inc
mov
sbb
std
add
test
out
leave
lcall
mov
fistpll
add
jp
inc
testl
inc
iret
mov
pop
insl
popf
out
icebp
xor
cmp
fs
ss
mov
dec
out
push
js
es
sub
sub
adc
lcall
out
fidivs
inc
xchg
loopne
int
imul
xor
hlt
out
fwait
mov
and
or
push
rorb
pop
int3
push
inc
pusha
test
inc
fisubl
lock
in
subl
xchg
jl
call
popf
sbb
and
sti
es
mov
cmc
pusha
clc
dec
pop
adc
jb
xor
or
inc
fcmovu
pop
cld
mov
fldcw
lods
in
insl
rclb
pop
shrl
pushf
test
mov
sub
sub
mov
or
cmpsl
aaa
in
lea
xchg
and
in
mov
mov
cmpsl
add
push
shr
iret
in
divl
in
and
and
and
or
adc
rol
sbb
icebp
mov
sbb
sbb
pop
pushf
dec
inc
loopne
data16
shll
frstor
insb
cmp
das
mov
scas
pushf
push
jmp
add
or
push
fsubs
push
rcrb
fiadds
fld1
dec
scas
pushf
pop
idivb
push
lcall
cmpsb
repz
push
add
inc
mov
movsl
aaa
and
ds
push
aas
and
and
push
fucomi
jnp
cmc
push
sarl
imul
jmp
cltd
jp
testl
pop
pop
pop
lods
addr16
jle
add
jl
push
adc
fiaddl
fs
cmp
inc
sbb
mov
lods
jecxz
imul
add
xchg
push
xlat
mov
jne
jb
lret
popf
imul
jnp
mov
push
push
rorb
repnz
fisubrs
xor
push
cs
mov
int
mull
inc
adc
insb
sub
jge
fcmovbe
aad
js
mov
mov
fcmove
jmp
mov
fstps
je
push
mov
pop
mov
dec
xchg
push
inc
jns
arpl
cmpsb
fistps
lcall
insl
mov
xchg
iret
inc
push
bndldx
or
lock
sub
push
mov
sbb
pop
pop
mov
lcall
call
and
lods
jecxz
sub
cmpsl
sub
jo
push
out
sbb
adc
lret
scas
mov
cmp
push
bound
cmp
imul
clc
cmpsb
sub
ds
aam
dec
sub
clc
jo
in
mov
scas
mov
loope
xor
and
cmp
cmp
hlt
js
mov
pop
adc
lods
add
xchg
mov
aas
push
js
xchg
xchg
clc
inc
cmc
loope
rcl
imul
jno
sub
mov
repnz
push
and
test
pop
mov
jno
inc
les
xchg
or
push
xchg
sub
sub
xor
out
lods
mov
lock
add
jae
push
pop
test
push
adc
clc
jmp
lock
sub
push
sbb
inc
mov
mov
test
sbb
pushf
sahf
jnp
cmp
xor
add
fisttps
mov
xchg
and
push
or
lock
aam
inc
insl
lea
call
mov
or
mov
jns
pop
loop
rclb
rclb
jmp
fsubrp
xchg
sub
les
outsl
jg
hlt
push
cs
iret
adc
xchg
mov
nop
cmpsl
rorl
push
lahf
fistps
lods
iret
ret
xchg
mov
rorb
repz
bound
add
lods
lcall
aas
das
adc
outsl
stos
push
cmpb
test
dec
pop
push
jle
push
clc
call
icebp
je
outsb
cli
stc
xor
adc
pop
xor
adc
dec
cmp
xor
mov
sbb
cmp
js
jo
xor
jo
mov
call
in
add
and
mov
add
in
mov
pop
lret
scas
adc
icebp
popf
lahf
cmc
jo
popa
std
call
xchg
loop
cmp
in
push
loop
xchg
sub
into
sbb
icebp
inc
shll
loope
xchg
imul
sbbl
pop
sbb
and
aam
loop
or
loope
leave
xor
fimull
repnz
xor
lret
pop
int
jle
pop
or
mov
fs
ja
data16
fstl
mov
pop
mov
and
cmpsb
repz
cmp
lods
pop
xchg
repnz
inc
lret
cmp
or
jae
sub
sbb
in
lods
jnp
jecxz
pusha
cld
ja
sarb
add
les
adc
mov
repnz
xchg
insb
pushf
mov
inc
repnz
fdivrs
xchg
inc
inc
cmp
int3
sub
and
aaa
inc
mov
mull
iret
in
sub
scas
repz
dec
or
xchg
inc
movsl
xchg
bound
mov
cwtl
sbb
mov
cltd
mov
aaa
mov
pop
jp
mov
add
dec
sahf
stos
test
xchg
fld
jne
cltd
cmpsl
lahf
sbb
push
mov
mov
xchg
out
fbld
pop
sbb
dec
and
sbb
pop
pop
add
repz
jno
jp
scas
or
adc
jae
test
stos
push
lods
push
adc
imul
dec
xchg
popa
aad
sbb
mov
outsl
leave
mov
and
add
jbe
xchg
mov
adc
dec
xchg
mov
jo
mov
mov
out
sub
jp
jl
sub
xor
xor
int3
fstpt
mov
loope
and
mov
adc
xchg
int3
xor
mov
jecxz
ljmp
or
pop
push
rep
xlat
dec
divl
out
add
cli
aam
dec
out
mov
adc
jb
add
sahf
js
movsl
notb
fisubrl
outsl
cmc
and
and
jmp
aam
int
cltd
cwtl
lods
insl
mov
fidivrl
pop
sahf
push
lods
adc
xlat
add
dec
jp
popa
enter
add
or
mov
jns
mov
jno
mov
loope
out
daa
pop
xchg
lret
sbb
mov
adc
stc
mov
fdivrl
lret
sbb
sbb
mov
cmc
aaa
mov
les
mov
pop
fidivl
push
sbb
xor
xchg
aaa
push
loop
cmp
repz
cmp
and
pop
sbb
dec
outsb
fimull
cmp
addr16
imul
inc
mov
mov
inc
mov
cs
and
xor
leave
popl
push
inc
xor
pop
loope
sub
test
adcl
leave
in
into
shrb
int3
in
mov
sbb
mov
cld
xor
js
int3
outsb
stos
jle
xorb
dec
dec
sub
fwait
test
xlat
add
ret
loope
push
or
dec
sub
cmp
adc
push
push
adc
subl
pop
xchg
inc
fwait
jno
mov
adc
int
push
fadds
jnp
int
loopne
rcrl
nop
daa
sbb
int
mov
xor
mov
jne
add
ds
cmp
outsb
minps
inc
mov
push
pop
int
repnz
dec
xlat
jb
andb
push
test
and
pusha
or
fisttpll
enter
mov
jle
inc
rclb
loopne
rorb
sbb
std
idivl
cli
ljmp
xor
mov
or
mov
mov
outsb
dec
std
xchg
cmp
xchg
aas
xchg
mov
stc
into
xor
insb
mov
outsb
jb
outsb
pop
jne
fucomip
adcb
in
fisubrs
mov
pop
or
cmp
add
add
dec
mov
sbb
dec
je
ja
lret
adc
inc
mov
rorb
pop
jo
xchg
imul
or
cs
cltd
cwtl
outsl
xchg
inc
test
pop
inc
jecxz
sub
mov
inc
icebp
addl
test
push
ret
jbe
add
loopne
xchg
jb
gs
les
insb
sub
enter
add
sub
adc
pop
cmp
lcall
imul
sub
int3
shll
inc
push
or
mov
pop
repnz
fsts
mov
xchg
xchg
jns
mov
in
aam
add
push
pop
enter
das
in
popa
lods
ss
addr16
pop
dec
cmp
aam
xchg
sbb
jl
ss
fisubrs
out
adc
adc
dec
cmp
adc
push
xchg
add
aad
or
mov
dec
sbb
rorl
out
add
mov
in
ret
mov
addl
xchg
mov
pop
or
jg
push
adc
lret
mov
mulb
dec
movsl
xor
test
or
icebp
in
pop
in
flds
jmp
xchg
pop
cmp
mov
cmpsl
std
inc
sbb
outsl
pushf
push
pop
add
jp
jp
ljmp
pop
arpl
scas
pop
ja
js
push
dec
jge
shrb
out
xchg
sbb
mov
xor
inc
and
ja
mov
lock
sub
mov
xor
dec
imul
jbe
lods
stos
inc
enter
andb
cli
fcomp
cli
or
pop
xchg
mov
push
and
mov
add
int3
sbb
outsb
inc
push
imul
stos
xor
loopne
jno
incb
iret
sbb
test
jno
sub
popa
or
xlat
popf
dec
xor
xchg
shrb
sub
shrb
or
ljmp
adc
or
add
dec
inc
and
ja
mov
dec
jns
notl
test
xchg
insb
fcoml
test
push
out
scas
adc
xor
nop
push
lret
loop
or
imul
cmp
adc
ljmp
lods
push
adc
push
mov
xchg
push
idiv
add
lcall
mov
out
aaa
adc
xorb
cmp
sub
lahf
push
add
hlt
xor
push
out
mov
cmc
xchg
mov
test
jmp
pushf
test
add
adc
dec
test
pusha
mov
mov
aam
in
push
out
sub
clc
mov
push
loop
adc
xchg
pop
mov
fwait
push
filds
jb
inc
pop
std
sbb
inc
inc
stc
adcl
call
inc
inc
lods
push
fildl
xchg
and
cmc
push
int
or
inc
sbb
push
insl
jge
xor
call
shrb
les
adc
pushl
into
mov
xchg
inc
and
popa
ja
xchg
jp
enter
and
loop
sbb
neg
and
testb
iret
sarb
or
jne
cmpsl
arpl
dec
add
or
outsl
fsubp
cltd
pop
daa
xchg
and
cmpsb
pushf
pop
lcall
or
mov
movsl
xor
clc
dec
aaa
insb
popw
pop
aad
xchg
out
daa
cmp
pop
push
mov
inc
shll
cli
cmpsl
sahf
and
cmc
cwtl
pop
into
mov
aam
imul
shrb
call
xchg
ror
inc
andb
cmc
rcrl
popf
sbb
in
fsubr
cmp
pop
and
mov
xchg
push
pop
jo
cmc
lret
cmp
jb
adc
mov
bound
push
daa
call
xchg
das
shrl
mov
mov
mov
cltd
cmpsl
std
lock
xchg
clc
xchg
adc
outsb
sub
faddp
daa
insb
inc
rcll
arpl
xchg
loopne
cmc
push
insb
xchg
mov
leave
inc
lods
adcb
and
divb
mov
pusha
data16
outsl
stos
mov
push
adc
imul
fs
movsb
mov
pop
je
jnp
jnp
sbb
cmpsb
shrl
rcrl
mov
xor
adc
jo
jp
mov
pop
adc
std
imul
or
mov
repnz
outsb
lret
jp
mov
push
shrb
aad
and
xor
cmpsl
pop
inc
jb
rclb
or
clc
jp
imul
popf
movsl
pop
rcrl
aad
insb
adc
stos
lret
mov
mov
sub
in
adc
insl
push
imul
imul
jb
sbb
push
push
pop
mov
in
mov
adcl
mov
int
sbb
mov
rorl
dec
sub
stos
jns
icebp
loopne
das
clc
shl
lods
ret
cmpl
cwtl
fbld
std
adc
adc
imull
arpl
sub
es
xchg
js,pn
shll
adc
les
mov
ds
mov
cmc
dec
lea
xchg
inc
push
test
mov
imul
mov
jle
cli
stos
mov
in
jl
mov
mov
pop
mov
addr16
xchg
jne
push
adc
lods
cmc
sub
fistl
jmp
arpl
stos
negl
jmp
clc
fs
xchg
dec
push
test
rcll
xchg
out
mov
lods
cmpsb
ljmp
js
xchg
divl
adc
sub
sbb
cli
imul
sbb
inc
xor
je
dec
cmp
je
orb
incb
rorb
jp
test
cwtl
pop
pop
and
mov
outsb
xor
pop
test
jp
dec
test
repnz
sarb
jnp
and
movsb
push
xchg
mov
mov
pop
movsb
mov
adc
mov
mulb
pop
mov
lds
out
and
repnz
popf
xor
aad
jno
adc
lret
cli
fimull
ljmp
xchg
sti
mov
xor
movsb
insl
stc
and
std
fcomip
push
adc
stc
in
insl
iret
ljmp
xor
out
push
inc
pop
pop
outsb
movsb
jecxz
aam
cmp
jle
push
sub
add
cwtl
in
sti
ds
and
aad
dec
out
lods
pop
xor
mov
cmp
adc
les
cmp
aad
push
dec
sub
stos
mov
lret
dec
cltd
iret
popa
adc
sbb
outsl
loop
adc
dec
mov
jne
cwtl
insb
stos
mov
int
pushf
mov
add
sub
fsub
insb
pop
push
popf
lods
cld
push
test
adc
shlb
mov
ljmp
mov
out
mov
bound
push
lcall
mov
cmp
or
add
cmpsl
mov
xchg
sub
xchg
mov
xchg
add
sahf
lods
pop
adc
pop
movsb
dec
sub
repz
movb
sub
lds
add
dec
fwait
arpl
sbb
stos
jae
stc
fimuls
repz
nop
sub
jno
cli
cwtl
jle
pop
mov
pop
mov
xor
sarb
add
lret
push
arpl
xor
out
cmp
push
adc
sub
jmp
call
sbb
mov
not
dec
aaa
push
adc
repnz
das
xlat
addr16
and
outsl
minps
pop
pop
lcall
cli
or
hlt
push
push
sbb
push
mov
inc
sbb
sbb
pop
int3
dec
xor
add
xorb
test
jne,pt
pop
popa
and
fbstp
xor
arpl
rcll
pop
jl
jl
in
fldenv
mov
std
xchg
cmp
test
mov
cmp
fnstsw
xor
ret
mov
aaa
xlat
adc
sahf
cbtw
icebp
sub
add
mov
bswap
cmpsb
fwait
adc
aas
call
das
out
dec
fiaddl
test
sub
cltd
jbe
inc
jle
repz
add
shl
aaa
push
sbb
cmp
daa
fstl
jns
call
adc
ja
cmp
push
xor
push
lahf
aad
sti
add
scas
xchg
mov
cmp
out
les
mov
jns
retw
jne
push
mov
int3
lcall
dec
rcll
pusha
addb
out
ret
push
dec
push
adc
add
dec
add
out
xor
imul
push
jmp
cmp
add
aaa
sarb
jge
shl
or
inc
pop
jbe
rcl
loop
or
sub
cmp
xchg
xor
aam
lds
cltd
insb
cmpsb
lea
std
jnp
lods
jae
pop
fmuls
int3
pop
cmpsb
and
mov
xor
mov
aas
dec
push
es
or
cmp
das
shl
lods
add
es
cmp
or
ds
mov
cvtps2pi
andb
leave
push
or
fwait
rcrl
push
and
mov
dec
or
pop
popf
sti
dec
hlt
sbb
and
jns
subb
adc
sbb
aaa
idiv
xor
inc
lahf
out
repz
test
pop
push
out
rclb
repz
in
cmp
adc
loopne
xor
mov
cmp
cmp
mov
jecxz
int3
repz
pop
dec
dec
cmp
and
out
add
lret
mov
iret
arpl
mov
xchg
mov
inc
dec
cmpsl
mov
test
inc
lock
enter
adc
iret
iret
add
pop
xchg
mov
mov
je
push
scas
or
mov
xchg
xchg
xchg
in
and
pop
ds
jle
leave
push
aad
adcl
outsl
jnp
aas
xor
jmp
pop
jbe
les
jns
rcll
stos
hlt
xor
rolb
loopne
fdecstp
xchg
aad
in
add
nop
fldt
push
push
imul
test
sub
test
out
xor
pop
leave
int3
sahf
jns
push
adc
in
jle
in
outsl
call
insl
jbe
pusha
inc
cmpsb
jg
cmpsl
cld
test
out
and
dec
pop
jbe
popf
aad
scas
jp
in
sbbb
test
movsl
xor
xchg
fisubrs
dec
clc
ds
in
push
and
cmc
xchg
dec
subb
mov
test
test
in
jbe
jge
rcr
fidivs
stos
fsubr
les
xchg
nop
int
jb
sub
mov
jle
cmp
fldl
mov
ss
rorl
call
aas
int
mov
cmpsl
mov
pop
ret
jmp
mov
rcll
aas
cltd
imul
dec
mov
enter
ds
cmp
and
pop
rcrl
push
and
push
adcb
and
in
out
mov
cmp
and
jne
sub
lcall
xchg
filds
mov
imul
or
call
lcall
inc
inc
lds
adcb
dec
sub
and
fadds
adc
lcall
jno
xchg
jge
sub
jg
adc
or
push
xor
mov
xchg
add
loopne
mov
or
call
rcr
sbb
adc
bnd
xchg
xchg
cmp
jbe
data16
adc
lcall
std
push
fwait
pushf
rcrl
pop
das
in
add
nop
push
insb
adc
stc
push
lcall
js
mov
movsb
sarb
mov
outsl
fdivrp
cmp
sub
pusha
cmp
mov
adc
iret
inc
pop
lds
in
xor
mov
loopne
imul
and
cmpsb
mov
dec
xor
mov
out
popf
inc
add
fdivrs
test
inc
sbb
xchg
sbb
je
loope
cmp
jns
inc
ljmp
lock
sub
xor
stc
stc
inc
movsb
std
pop
leave
dec
lahf
xchg
jmp
fldenv
stos
add
cltd
dec
rorl
pop
in
leave
in
mov
add
or
flds
adc
frstor
lds
mov
push
jmp
rcl
aaa
aaa
test
inc
sbb
jge
mov
mov
or
push
aad
lock
test
mov
jo
dec
out
xchg
sbb
fwait
movsb
rep
or
test
jp
notl
push
addb
fdivrl
insb
ret
dec
push
cmp
sub
adc
test
xchg
aas
je
adc
into
popf
jbe
dec
incl
lock
outsl
sub
outsl
adc
mov
mov
or
add
jb
and
sub
xchg
cmp
jmp
inc
xchg
out
loop
dec
push
loop
or
jp
mov
or
xor
fldt
jecxz
addb
lret
xchg
popa
pop
mov
fdivr
pop
sti
int
push
test
fnstcw
rolb
loopne
sub
sbb
divb
test
rcrl
xchg
ror
in
clc
out
ljmp
push
cmp
negb
push
hlt
fists
fnstcw
pop
fs
xchg
and
arpl
loope
mov
aas
and
movsb
insl
mov
add
pop
inc
push
hlt
sub
mov
mov
das
test
sub
addr16
stos
sbb
cwtl
loope
pop
pushf
cmp
test
mov
fsubrs
icebp
cmp
es
xor
shr
add
out
pushf
leave
popf
sbb
data16
aam
outsl
mov
into
mov
pop
pushf
fstps
cmp
dec
addr16
inc
stos
scas
test
inc
data16
ret
test
call
fidivrl
adc
insb
negl
cmp
add
sbb
lods
jmp
jae
mov
mov
sub
mov
in
ret
je
and
jae
sub
adc
adc
cmc
jp
mov
sbb
out
xor
add
add
ret
adc
dec
and
movsl
xchg
rolb
fisttpl
pop
lds
push
testl
cmp
fbld
adc
nop
int
mov
sbb
push
je
cld
dec
and
fincstp
gs
out
or
add
sti
xchg
adc
push
inc
sub
xchg
nop
mov
stc
adc
pop
push
mov
push
lea
push
jg
sti
mov
test
out
or
addr16
cmp
repnz
cmp
ds
xor
mov
mov
les
cmc
inc
rolb
mov
inc
rcr
int
popf
sti
cld
push
dec
pop
pop
fcoms
dec
fstpl
enter
cmp
pop
lds
das
sbb
pop
orb
outsl
sbb
lock
push
push
iret
fisttpl
sbb
ret
push
repz
and
and
into
sarl
push
xor
jge
lods
xchg
sbb
pop
push
jge
test
icebp
cltd
sub
ret
jmp
add
push
and
test
push
or
aaa
adc
inc
mov
cmpsb
popa
xchg
inc
mov
sarl
push
je
je
pop
lahf
mov
dec
push
dec
stc
repz
fsubrs
and
rcrl
out
sbb
rcrb
aaa
push
push
lcall
pop
and
xchg
xchg
bound
sbb
pop
in
aam
pop
xchg
mov
shll
scas
pop
jns
push
push
in
js
sub
aad
mov
movsl
ficoms
xchg
clc
pop
leave
insl
loopne
sbb
ja
inc
sub
or
pop
iret
call
movsb
mov
sbb
pushf
test
pop
repz
fwait
aad
inc
xchg
ret
xor
in
les
lds
dec
mov
sti
mov
ds
inc
jnp
mov
pop
fnsave
sub
aas
push
jl
sub
popf
leave
mov
jb
lods
test
incl
je
ss
pop
xor
imul
xchg
add
inc
xchg
leave
push
xchg
cmp
daa
inc
mov
mov
dec
or
add
out
sbb
adc
adc
jecxz
ds
and
dec
or
js
jge
fisubl
das
sti
mov
sub
insb
int
pop
int3
icebp
movb
repz
inc
inc
or
dec
das
cmc
out
test
cmp
jg
dec
in
jg
popf
outsb
popa
ds
dec
sub
and
movsl
sub
mov
rcrl
movsl
rolb
jb
repnz
pop
ss
das
xchg
cwtl
pop
cmp
cwtl
inc
mov
dec
imul
ret
in
pop
in
repz
inc
xchg
fistpll
testb
bound
and
mov
jb
lods
jmp
outsb
popl
push
xor
mov
sbb
and
xor
push
fsubl
jmp
adc
sbb
mov
les
ret
enter
sbb
cs
pop
je
inc
xchg
fs
push
pop
xchg
sbb
jge
cmpsb
lea
dec
mov
rclb
xchg
ret
cmp
push
sub
sbb
into
hlt
xchg
push
loopew
jg
sub
mov
mov
ret
xchg
cwtl
jno
xchg
sub
push
pop
mov
xchg
in
test
pop
and
movsb
push
push
push
mov
cmc
xchg
ss
or
lcall
pop
out
add
xchg
sbb
mov
rcr
mov
in
push
inc
add
lret
jnp
popa
add
xor
test
call
lret
sub
repnz
xor
push
out
jmp
mov
aam
mov
iret
mov
push
push
cltd
mov
sbb
es
cli
inc
test
dec
sub
inc
sub
or
cmp
loopne
add
out
jb
mov
mov
addr16
int
and
rcrl
xchg
and
lods
push
jmp
add
adc
dec
push
call
mov
test
addl
jg
xlat
cmp
sub
xchg
adcb
add
fidivs
inc
lods
fxch
out
in
fdiv
addl
iret
sahf
fnclex
mov
sub
outsb
mov
test
sti
adc
cs
jg
les
ljmp
fldl
xchg
inc
sub
movsl
cmp
xchg
mov
lock
push
in
sub
sub
jge
out
sbbb
cmp
cmp
fwait
sbb
and
call
fwait
jne
popa
sbb
xchg
pusha
xchg
lcall
test
mov
flds
mov
cli
cld
xor
xlat
inc
shrb
cmp
lods
sub
cltd
inc
inc
push
inc
mov
ss
fdivrs
jns
data16
and
mov
xlat
xchg
sbb
movsl
les
and
pop
add
adcb
ret
imul
pop
fadds
push
adc
leave
dec
inc
in
or
movsl
adc
les
pop
cmp
int
push
stc
xchg
mov
xchg
dec
std
pop
fnstsw
loop
sbb
aam
xorb
rcr
xchg
lahf
testl
imul
inc
mov
jb
mov
push
xor
jge
lods
adc
jnp
and
sub
or
jle
add
fs
dec
repnz
out
dec
gs
push
outsl
push
mov
mov
aad
jecxz
cmp
jo
mov
or
dec
push
lret
mov
cmp
repnz
in
and
rorb
xchg
aad
cmp
scas
mov
mov
and
into
dec
icebp
lret
fistpll
jp
scas
test
mov
stos
mov
dec
loopne
loop
in
jbe
test
push
lret
inc
cmpsb
jnp
fwait
lock
decb
inc
pop
mov
adc
lfs
aad
sub
fisubs
push
add
in
data16
pop
inc
in
push
pop
add
cli
push
icebp
or
cmp
sbb
jnp
xor
or
jnp
out
test
into
add
out
or
mov
imul
jno
testl
test
jl
fwait
rclb
push
xchg
rorb
mov
add
fmull
and
jl
subb
clc
dec
inc
imul
stos
je
add
sti
push
fisubrs
jp
jmp
gs
xor
mov
push
repnz
inc
push
loop
iret
hlt
add
into
iret
in
cmp
jge
dec
je
outsb
arpl
xchg
test
push
stc
mov
pop
adc
cmp
xor
xchg
pop
cmp
cmp
mov
mov
jg
or
adc
rol
das
popfw
push
fucom
data16
jnp
aad
lods
and
ds
movsb
popf
sub
xor
pop
into
movsl
and
into
int3
sbb
jns
std
pop
pusha
cli
mov
cmp
outsb
popf
jae
push
loop
arpl
inc
push
push
xor
add
inc
cld
cld
insl
xor
out
adc
pop
test
loopne
jnp
pop
dec
jp
mov
pop
jg
enter
data16
mov
push
pop
aas
call
jge
mov
imul
std
test
movsl
xchg
push
adc
addr16
mov
xchg
cs
dec
frstor
cmp
mov
xchg
mov
sahf
jmp
out
mov
ja
dec
and
jno
addr16
dec
mov
and
das
fcomps
js
test
dec
aaa
mov
adc
lock
mov
mov
dec
jae
movsl
cmp
fnop
xchg
or
inc
dec
add
pop
xor
popa
mov
add
pop
xchg
loope,pt
daa
jle
xchg
xchg
mov
sbb
jbe
fxch
data16
pop
ret
or
cmp
push
push
push
in
mov
jge
stos
popa
sub
sub
out
xchg
xor
and
mov
ss
pushl
and
fsubl
fsubs
mov
in
cwtl
add
and
movd
or
xchg
vmaxpd
test
lcall
imul
jno
ficoms
out
bound
pop
jne
push
push
jnp
mov
mov
sbb
les
push
repnz
inc
jg
xchg
jmp
push
xchg
fsts
xchg
cmp
mov
jbe,pt
orl
xchg
lahf
mov
lods
jmp
cmpsl
sub
mov
aad
ja
jns
pop
popf
ljmp
xlat
mov
add
mov
shll
aam
mov
cmp
xchg
call
inc
pop
add
cmc
mov
mov
adc
aam
push
inc
leave
push
imul
cwtl
jecxz
arpl
aas
push
lods
dec
sti
imul
adc
inc
sub
movb
mov
scas
inc
push
icebp
movsl
inc
inc
ret
or
xchg
rcr
pop
jg
sub
adcl
sbb
lret
inc
sub
ret
xchg
inc
stos
mov
filds
pop
into
jecxz
push
jns
mov
adc
adc
mov
and
pop
push
xchg
inc
lcall
lahf
jbe
pop
jns
test
sbb
push
lods
pusha
ds
mov
push
inc
inc
das
cmp
push
in
mov
arpl
insl
cwtl
fcoms
mov
call
dec
call
out
nopl
lods
pop
pop
pop
dec
pop
cmp
jo
mov
ss
mov
inc
aaa
mov
sbb
or
xor
out
mov
fs
negb
adc
mov
sti
fs
push
adc
fisubrl
cli
test
mov
popf
cmp
iret
es
sbb
in
add
cmpl
aam
cs
sbb
xchg
xor
pop
push
test
dec
jne
stos
xchg
xchg
out
sbb
das
repnz
inc
filds
scas
cmp
add
in
insl
ds
dec
pop
mov
aas
ds
sahf
les
push
int3
lret
or
push
loopne
push
sub
call
mov
fs
inc
loopne
mov
mov
jmp
sbb
inc
stc
fmuls
inc
push
mov
fisubrl
jmp
or
mov
push
or
std
cmp
enter
ret
mov
loopne
repnz
jg
cmp
xchg
pop
sbb
nop
sbbb
in
adc
xchg
push
icebp
clc
shr
lea
nop
mov
shrl
mov
and
inc
jp
dec
icebp
inc
and
rorb
push
xchg
mov
into
xchg
sbb
into
xor
mov
push
icebp
es
mov
mov
inc
sub
jg
sbb
lods
lock
scas
push
mov
mov
sbb
cmp
mov
mov
lods
and
test
mov
leave
sbb
scas
push
arpl
aas
popf
shrb
dec
dec
pop
jns
shlb
loopne
cmp
dec
mov
mov
scas
pop
addr16
in
iret
lret
pop
fwait
add
ret
cwtl
add
mov
fsubp
jp
jne
cmc
or
sahf
push
mov
aaa
mov
data16
js
mov
fidivrs
push
mov
and
push
pop
je
dec
cmp
fisttpl
testl
rorb
out
fidivs
pop
rcrl
cltd
sbb
lret
mov
xchg
in
imul
adc
test
inc
loopne
loopne
hlt
jne
cltd
mov
popa
adc
nop
je
pop
jb
es
arpl
xor
fs
lods
fisubrl
rolb
xor
mov
jmp
mov
mov
insl
pop
jbe
cltd
out
sub
mov
aaa
mov
enter
sub
sahf
test
std
lods
arpl
jae
xchg
sar
ss
les
cmp
mov
clc
mov
push
and
and
dec
scas
ds
icebp
push
gs
in
sti
scas
cld
and
and
inc
sahf
pop
and
loope
or
xor
push
mov
clc
push
loope
shl
loopne
jnp
mov
fs
aas
ficoml
sar
icebp
lret
add
and
lret
loopne
mov
int
adc
sub
ss
jne,pt
push
ror
out
sbb
mov
push
int3
insb
shlb
cmpsl
popa
cmp
xor
mov
and
iret
ficoms
sub
sbb
aas
xchg
cli
jle
jmp
repz
sbb
pop
pop
push
mov
fcmovu
mov
mov
inc
xchg
jp
adc
mov
repnz
fdivs
dec
test
cli
pop
or
cld
lds
sti
aas
mov
jge
inc
notl
add
in
stos
imul
in
sbb
rcrl
jp
sbb
adc
pop
mov
pop
mov
dec
cli
mov
mov
jg
nop
into
ja
lldt
flds
mov
jae
or
inc
jns
lahf
outsb
jmp
add
out
mov
xchg
loopne
out
inc
loope
popa
pop
lea
jbe
mov
out
sbb
and
mov
xchg
idiv
loopne
push
push
popa
nop
mov
es
sar
fnstcw
sbb
mov
ret
inc
cmp
jns
push
mov
loop
cmp
jns
lahf
iret
in
iret
cmp
push
and
dec
pop
addr16
push
out
xchg
dec
jae
loopne
jecxz
mov
scas
fdiv
cmpsl
jg
cmp
rcr
jmp
ljmp
pusha
mov
je
mov
pop
dec
adc
add
mov
jge
fdivrl
das
mov
test
dec
mov
hlt
xorl
clc
pop
jo
inc
aas
inc
mov
mov
push
iret
scas
out
dec
push
jb
setnp
add
into
adc
inc
imul
or
xchg
cmp
int3
shrl
test
subb
cmp
pop
xchg
push
ss
cwtl
dec
int
xchg
fwait
add
mov
push
cmp
stos
jo
repnz
and
stos
mov
outsb
out
and
loopne
add
mov
xchg
fcoml
jecxz
aam
or
stos
fnstenv
out
fisttpl
sbb
xchg
sub
into
mov
std
sbb
jg
fidivs
adc
das
cmc
jbe
dec
mov
mov
rclb
cmp
in
cli
lods
fwait
mov
daa
in
push
enter
dec
insb
sbb
rolb
roll
data16
sub
sub
and
or
pusha
jbe
sub
or
mov
daa
xor
cwtl
scas
sbb
mov
mov
mov
cmpsb
sbb
pop
data16
mov
fucomip
add
mov
clc
leave
pop
mov
pop
xlat
mov
popa
jg
aam
dec
pop
call
iret
outsl
mov
gs
add
lods
jecxz
jo
mov
and
enter
ficoms
mov
cmp
idivl
inc
pop
jb
mov
daa
ja
scas
stos
inc
inc
sarb
sbb
jl
into
sub
insl
adc
fnstsw
repnz
test
movsb
fiadds
dec
aam
xchg
add
fistpl
mov
ficomps
in
ret
inc
jg
ficoms
popf
inc
mov
xlat
adc
orb
pop
mov
sahf
out
mov
std
push
push
push
xorl
lret
lods
pop
add
cmp
sub
shll
fstl
movsb
int
mov
push
pop
mov
and
pop
dec
or
sahf
call
sbb
pop
add
cmp
and
xchg
push
mov
adc
call
insb
mov
push
pop
mov
mov
adc
iret
fsts
mov
xchg
sbb
aad
mov
mov
inc
sbb
xor
push
movb
dec
cmc
adc
mov
lret
mov
dec
stos
movsb
jo
int3
out
mov
stos
out
jmp
mov
scas
rcll
cwtl
mov
lea
or
aas
and
or
mov
ss
aas
call
pop
ficoms
mov
or
pop
sbb
fsubrs
adc
inc
out
pop
jmp
dec
call
xchg
sbbb
rcrl
mov
arpl
xchg
icebp
cmp
sbbl
and
int3
sbb
std
gs
cmc
rcll
sbb
push
scas
lods
fcmovne
xor
push
cmpsb
dec
stos
mov
fldl
mov
lret
push
mov
dec
call
and
mov
lds
in
enter
mov
out
stos
lret
lock
ss
dec
xchg
push
jbe,pn
xchg
mov
orb
int
hlt
movsb
sahf
data16
aas
ret
out
sbb
mov
in
iret
repz
in
and
pop
mov
lods
jle
cmp
push
mov
sub
out
out
lds
sub
and
shll
int
insb
pop
ficomps
pop
in
pop
lahf
into
push
sarb
cwtl
fldenv
fxch
pop
lea
iret
cmp
lcall
pop
outsb
mov
and
mov
test
loopne
mov
xor
aas
call
fsubr
insb
xor
rorb
cmp
mov
sti
pop
sbb
insl
ja
inc
ljmp
lret
cmp
lods
sub
test
scas
out
add
aad
and
pop
pop
inc
js
dec
jecxz
dec
xlat
pop
push
addr16
aas
sbb
mov
mov
aas
jns
cmp
aas
adc
shrb
mov
cmp
or
push
fsubrs
popa
lea
or
add
cmp
lds
push
sub
and
adc
fidivl
movsb
cmpsl
mov
lock
pop
jmp
mov
jns
mov
ja
push
outsl
mov
add
mov
sub
adc
mov
adc
push
add
dec
iret
out
in
shr
cld
and
xchg
stc
push
out
and
add
add
push
mov
psubq
aas
movsb
je
popf
call
movsb
push
inc
shl
and
jo
movsl
ret
and
aad
fistpl
mov
out
mov
ret
pop
pushl
sub
xor
cmp
jbe
gs
repnz
iret
addb
fcoms
dec
or
in
sub
rorl
cmp
inc
xchg
clc
adc
enter
cmp
pop
ret
fistpl
insl
fs
and
add
daa
cmc
mov
dec
dec
mov
mov
inc
dec
dec
mov
fbld
sti
fucomi
lds
or
xor
mov
mov
int3
or
push
push
pop
cmp
or
jb
add
mov
lock
jg
rorb
rcr
push
outsb
cmp
mov
jo
jg
xchg
xor
xlat
rcl
int
sbb
js
lahf
in
dec
cmc
mov
dec
int3
aam
mov
fsubrs
cmp
out
xchg
xor
mov
sub
mov
sub
jle
mov
mov
push
mov
add
mov
test
mov
iret
clc
ljmp
fildl
inc
xchg
cmpsb
loop
push
adc
dec
mov
aad
jge
lret
push
pop
jns
jp
mov
jno
lock
loopne
cpuid
lea
mov
imul
mov
pushf
hlt
xor
ficoml
dec
mov
and
outsl
std
ret
xor
repnz
pop
xchg
push
in
fdivrl
push
sbb
into
dec
push
cltd
jbe
sub
pusha
rcrl
push
out
jg
mov
mov
mov
cmp
loopne
or
adc
scas
dec
mov
adc
mov
xchg
mov
dec
out
movsb
mov
scas
mov
pop
mov
bound
repz
sub
test
mov
fwait
mov
stos
ds
sub
xchg
test
repnz
cli
mov
xchg
push
jo
ss
in
add
inc
add
push
loopne
test
mov
call
mov
aad
push
jno
dec
mov
lea
test
mov
call
aam
loope
stc
jecxz
add
ljmp
push
adc
push
mul
cld
push
out
inc
or
aam
jne
sub
imul
or
lahf
mov
jns
jns
in
jp
pop
test
cmp
aad
insb
movsl
dec
repnz
jbe
jae
adcl
sahf
push
mov
and
in
cmp
inc
xchg
push
xor
repz
lods
inc
push
cs
fcoml
popa
imul
ja
push
lret
rcrb
inc
jne
insb
sbb
pop
fsub
sbb
mov
inc
inc
pop
mov
jns
daa
push
sub
loopne
sub
hlt
mov
sbb
loope
jecxz
mov
jp
cmp
fsubrl
mov
jnp
dec
arpl
lret
push
mov
adc
ds
pop
mov
lret
out
fsubl
jl
mov
dec
mov
inc
imul
push
sbb
test
inc
cmp
fsubl
ret
cltd
movzwl
mov
nop
loopne
mov
aaa
cmp
jno
jl
jmp
repz
jg
test
mov
mov
jno
inc
sub
stc
jno
pop
aam
cmp
mov
ljmp
movsl
xchg
sbb
in
orl
rcr
jecxz
movl
push
shlb
test
jmp
sahf
cmp
rclb
into
jp
scas
sahf
lahf
xchg
lods
cmpsb
and
pop
pop
fmul
mov
cmpl
xlat
fs
cmpsl
jno
fdivrl
or
das
std
sarb
xchg
cmc
or
pushf
fcmovnbe
sahf
cmpsb
orb
inc
lods
mov
adc
sahf
mov
or
js
leave
sahf
add
pop
push
jg
mov
divb
ds
hlt
aam
cmp
jmp
xchg
test
mov
xchg
es
into
insb
rorl
adc
lds
fsubs
sub
mov
fdivp
test
mov
testl
sub
push
pop
adc
adc
pop
cld
push
mov
and
xlat
xchg
in
mov
mov
mov
std
jns
enter
cltd
jno
fs
cmpsl
mov
jb
jp
sub
push
mov
xchg
or
outsb
int3
ficompl
push
popf
fsubrl
andl
std
pop
push
dec
int
pop
xor
xchg
cld
or
lods
arpl
cmp
out
arpl
cmc
sbb
jbe
push
insb
jne
dec
lcall
push
sbb
jmp
lcall
decl
sbb
pop
je
addr16
gs
clc
or
jg
and
mov
pop
fldt
cmpsl
mov
js
sub
xor
loope
jns
out
es
or
mov
nop
push
lea
push
ret
int3
adc
dec
mov
or
add
call
out
fisubrl
or
or
adc
xchg
negl
jne
push
mov
mov
inc
fcoms
jl
sub
aam
stos
jl
push
fisubl
jp
mov
shll
loope
scas
dec
jmp
pop
bound
jbe
push
xchg
add
loopne
je
ret
sub
pop
add
outsb
aam
leave
jp
inc
xorl
xchg
xchg
scas
fstps
fistl
leave
aam
push
ret
inc
into
hlt
mov
hlt
fmul
xlat
xchg
lahf
and
adc
sub
push
push
inc
add
loope
mov
data16
daa
nop
xchg
stos
js,pn
dec
jle
shr
loope
cmpsb
ret
test
push
nop
rorl
cmp
add
inc
in
adc
shlb
xor
cmp
mov
cmp
mov
jl
sbb
pusha
push
adc
lea
jge
pusha
cmp
mov
loopne
lret
dec
mov
push
pop
inc
sub
pop
cmp
hlt
xchg
dec
lock
mov
inc
cmpsb
sbb
pop
lret
movsl
push
and
hlt
imul
sbb
push
retw
insb
pop
nop
fnstsw
pop
push
sub
jmp
les
mov
or
movsb
in
fdiv
and
sbb
arpl
inc
xor
sub
jecxz
inc
lock
bound
test
lds
insl
dec
das
mov
in
lret
mov
mov
xchg
and
ret
mov
dec
pop
inc
test
stos
hlt
mov
cmpsb
xlat
pop
push
inc
fisttpll
movsl
push
data16
pop
mov
insb
inc
dec
aaa
cmpsl
sub
xchg
push
mov
fildll
cmpb
xchg
pop
mov
jge
jbe
sub
mov
rcrl
imul
cmp
pusha
xchg
shlb
mov
sbb
or
xchg
and
in
stos
js
scas
or
cmpsl
adcl
lea
mov
and
movsl
out
out
xor
sbb
adc
cmc
cmc
dec
pop
mov
inc
and
xor
dec
lcall
sub
mov
hlt
negb
popa
movsb
arpl
mov
xchg
int
xchg
sahf
scas
ljmp
scas
stos
mov
xchg
out
xchg
or
or
push
test
mov
xchg
push
aaa
pop
cmp
or
jecxz
in
addr16
out
sahf
and
out
dec
xchg
int
mov
jnp
out
aas
dec
cmpsb
mov
test
xchg
cmp
lret
mov
dec
cmpsb
cmp
push
loopne
xchg
or
jge
mov
outsb
cmpb
roll
sub
stc
or
icebp
dec
in
insl
adc
mov
lret
jnp
or
or
dec
insb
cwtl
lea
leave
cmp
xchg
sub
sub
cmp
cld
pop
cmp
cmp
insb
pop
shrb
out
je
in
int3
fmuls
inc
hlt
popf
jge
enter
insb
hlt
jbe
mov
mov
les
push
addr16
pop
push
scas
push
loop
in
jmp
fsubrl
pop
push
outsb
sub
xchg
xchg
pop
pop
ss
push
out
mov
mov
cmp
jbe
adc
or
push
js
lahf
sbb
data16
shll
das
adc
movsl
inc
cltd
fsub
in
push
popa
cmc
das
mov
je
inc
gs
adc
es
xor
inc
push
in
jmp
inc
sti
enter
add
lock
ds
push
sbb
xor
ret
fs
inc
and
xchg
lock
or
push
xchg
cltd
push
lahf
mov
xchg
push
cwtl
dec
cmp
pop
lock
pop
adc
ds
insb
outsb
imul
cmc
and
mov
test
mov
and
arpl
mov
lcall
test
xchg
daa
adc
push
hlt
push
enter
loop
adc
sahf
repnz
pushf
outsl
inc
aaa
adc
scas
loop
js
imul
push
mov
out
movsl
mov
enter
int
shr
leave
jl
mov
or
shr
pop
fnstcw
cmp
andb
cmp
and
push
mov
mov
dec
adc
enter
out
cmp
rolb
lea
mov
or
or
mov
xchg
xor
in
xorps
adc
out
jge
xor
mov
iret
aaa
adc
jbe
mov
add
mov
repnz
mov
inc
icebp
test
std
add
lea
dec
fistpl
jae
or
xchg
adcb
mov
sub
bnd
stos
int
cmp
or
fwait
pop
insb
popf
add
jp
aad
xchg
pusha
sbb
divb
mov
fdivl
pushf
push
xor
enter
and
sbb
aad
movsb
jbe
dec
push
push
add
inc
fdivl
jg
outsl
insb
sub
fidivrl
fsubl
cwtl
mov
mov
push
lock
hlt
adc
fdivrs
sub
cwtl
fdivrs
fcmovnu
popf
adc
mov
int3
mov
xor
jecxz
stos
or
inc
ljmp
mov
pop
inc
xchg
cmp
ret
cli
bound
sti
std
or
mov
mov
jge
add
mov
pop
jmp
jmp
push
addb
lcall
ret
lcall
sub
mov
and
jp
lods
and
into
pop
jno
pop
roll
out
push
ja
or
inc
mov
mov
or
pusha
or
je
das
or
and
push
xchg
or
lahf
out
outsl
fbld
dec
loop
inc
mov
and
sbb
mov
lcall
loope
dec
arpl
outsb
test
adcb
inc
dec
cmp
and
rcll
ffree
movb
jno
push
aad
jns
jo
stos
mov
push
aas
icebp
or
stc
sbb
loope
push
roll
iret
inc
bound
shrb
daa
pushf
test
popf
mov
out
and
jecxz
pop
into
add
rorb
mov
cmpsl
push
or
sub
popa
jmp
lahf
jb
xchg
xchg
adc
cmpsb
or
add
dec
cmp
adc
pop
and
push
inc
loopne
movsl
enter
pop
push
mov
fwait
sub
and
pop
mov
mov
jae
mov
sbb
pop
cmpsl
pop
cmp
addr16
std
inc
push
add
add
dec
push
jle
bound
lock
test
xor
jl
mov
popf
repnz
xchg
inc
or
push
lret
push
inc
dec
add
mov
dec
push
clc
inc
mov
andb
je
shll
push
xchg
cmp
mov
or
int3
mov
jl
test
loope
inc
cmp
stos
pop
inc
bound
add
and
and
cmp
jge
inc
fisubs
cmp
imul
cmpsl
mov
popf
sbb
or
sbbb
out
fld
loop
push
scas
into
data16
mov
sbb
imull
cmp
lahf
xchg
jmp
stc
push
mov
stos
notb
add
jne
in
add
xor
dec
ja
push
call
mov
jne
popa
cmpsb
ret
xchg
in
add
fistps
sbb
mov
and
jns
sbb
mov
or
mov
jge
sbb
jo
mov
cmpsb
data16
roll
inc
and
mov
xor
lcall
imul
ret
cltd
add
pop
adc
inc
loop
pop
inc
orl
mov
cltd
ljmp
ljmp
ss
add
jmp
sub
xor
rolb
lods
sub
mov
dec
xchg
adc
mov
stos
dec
fcmovnu
dec
xor
shr
movsb
dec
mov
and
xchg
jg
sbb
pop
inc
dec
aaa
inc
test
jp
fldenv
jmp
jne
lods
jl
cmp
sbb
sub
es
or
jne
stc
jbe
xchg
xchg
and
ljmpw
fprem1
and
sbb
adc
gs
shl
jg
sub
or
out
daa
in
addr16
jb
in
div
xchg
pop
stos
in
jge
mov
aam
outsl
add
cmc
inc
dec
stc
and
lods
or
adc
push
or
adc
dec
add
in
or
inc
jae
testl
ucomiss
call
push
inc
xchg
lea
xor
add
fisubs
mov
add
sarb
pop
mov
adc
loope
aaa
repz
mov
clc
lea
push
cmpsb
fildll
push
push
insb
cmpsb
pop
sbb
dec
adc
cld
cmp
addr16
jmp
push
pop
pop
and
dec
pop
ficompl
dec
xlat
or
push
push
inc
mov
lds
outsb
rol
cmp
cwtl
pop
mov
dec
or
aaa
dec
pushf
mov
ss
jle
inc
rcrl
les
inc
sbb
cmpsb
icebp
mov
or
jp
cmpsl
sbb
sub
dec
insb
push
shrl
pop
cmp
dec
dec
sub
add
add
fldl
scas
test
pusha
imul
and
mov
out
mov
out
outsb
sbb
cmc
dec
dec
dec
lcall
jp
cmpsl
jge
lods
imul
mov
cmp
fsubrl
mov
mov
mov
or
lods
adc
in
sahf
popl
arpl
jnp
lods
int3
sub
call
loope
lods
adc
cld
cwtl
inc
inc
clc
and
fcomi
inc
sbb
mov
insb
pop
and
mov
mull
push
sub
xor
mov
or
or
mov
pop
push
xchg
aad
push
insl
push
fiaddl
jmp
add
icebp
lea
outsl
adc
sbb
test
sbb
inc
add
aas
pop
call
adc
push
mov
or
xchg
sub
addr16
movsb
fwait
orl
xchg
shll
push
sbb
icebp
sbb
jecxz
in
sbb
or
mov
js
cmp
fstl
fsubs
add
jmp
jae
loop
aam
std
push
cmp
std
add
xchg
mov
mov
mov
mov
test
jne
cmc
xchg
mov
mov
mov
ret
gs
add
loopne
setp
pop
fadds
push
repz
xor
push
and
mov
out
outsb
mov
or
test
pusha
jnp
dec
sarl
mov
mov
test
mov
call
sub
fmull
aaa
loope
or
fnstenv
imul
aad
out
cli
jp
jnp
outsb
cli
fcmovne
mov
push
in
call
inc
js
jno
adcb
test
mov
xchg
insb
pop
mov
or
ljmp
inc
mov
test
dec
cmpsb
es
insb
xlat
outsl
mov
pop
sbb
push
push
sbb
and
xor
ret
mov
clc
adc
xchg
xorl
or
pop
test
subb
cwtl
and
lcall
push
rcll
pop
ljmp
lds
pushf
xor
sub
xor
and
mov
outsb
mov
insl
rcrl
lea
lea
cli
jl
cltd
jl
pushf
lret
xor
jb
lahf
stos
jnp
dec
sub
pop
jno
fwait
jbe
js
xchg
pushf
mov
cmp
inc
das
cld
orl
mov
mov
sbb
out
leave
jne
add
xorl
popf
cmp
xchg
xor
dec
and
mov
int3
adc
jmp
jns
and
xor
xchg
popf
ror
xchg
sbb
shll
push
mov
hlt
add
jnp
repnz
loope
loope
mov
xchg
ja
mov
and
push
inc
in
dec
ror
sub
xchg
test
and
xor
mov
pop
movupd
movsl
jne
push
xchg
lret
adc
xchg
ret
movsb
sub
sbb
test
xchg
and
pop
loope
cs
mov
outsl
jns
cld
repnz
dec
mov
stc
movsb
add
jns
movsl
movl
pop
xor
cltd
aam
mov
jo
sbb
jb
sahf
test
test
mov
mov
cmp
and
rorl
imul
loop
fistpll
div
cmp
inc
push
mov
in
adc
and
adcl
xor
cmp
push
fldt
mov
pop
ljmp
lahf
fisubl
push
sub
data16
xchg
xchg
and
pushf
jg
fld
mov
out
cmpsb
aad
xchg
or
xor
insl
lcall
lock
push
inc
out
fnstenv
or
adc
out
add
test
ret
xchg
scas
pop
fisubrs
inc
jl
into
xchg
jns
sub
rorl
add
pop
flds
setbe
push
sub
mov
in
push
xor
jo
scas
shr
nop
fdivrp
push
push
shrd
xchg
push
arpl
inc
jne
dec
cmp
ljmp
dec
pushf
mov
imul
mov
sub
mov
nop
scas
mov
gs
outsl
cwtl
stc
imul
in
call
push
scas
subl
in
sahf
xchg
push
cmp
adc
test
lret
xchg
pop
mov
dec
popf
push
dec
rcrl
mov
into
pop
add
xor
fwait
in
subl
sub
fnstcw
icebp
out
push
jae
fadd
rorl
or
movsb
loop
sahf
stos
idiv
push
cmp
shl
inc
repnz
imul
mov
shrl
fbstp
repz
push
mov
cmpb
int3
jle
lods
jl
lcall
movsb
xchg
hlt
fdivs
stos
movsb
mov
mov
pop
sbb
in
add
push
push
bnd
fstl
lret
insl
xchg
clc
adc
aaa
mov
cmp
pushw
lret
repnz
pop
pop
and
xchg
rcrb
ficompl
pop
xchg
lret
sub
fisubl
daa
or
ret
dec
popa
adc
cmp
outsl
add
push
imul
jbe
pop
insb
out
mov
ds
loop
arpl
adc
int
out
movsw
cld
jne
sub
divb
xchg
dec
lods
xchg
sbb
push
adc
ret
push
ret
or
jb
sub
aas
mov
push
xchg
mov
nop
cmp
jns
jecxz
call
ret
inc
into
stos
mov
push
xor
push
and
add
sahf
push
push
inc
pop
in
inc
dec
mov
jecxz
addl
push
sub
lahf
jge
or
repz
hlt
mov
int
pop
int
nop
je
push
inc
add
movsb
mov
fimull
dec
stos
mov
fs
cmp
icebp
inc
pop
pop
test
pop
or
adc
xchg
shl
mov
dec
addr16
xchg
fcompl
dec
pop
aaa
icebp
into
rolb
cs
mov
and
jbe
mov
aas
adc
adc
add
sbb
jmp
ja
rolb
add
dec
mov
ss
jecxz
repz
adc
add
aad
ja
mov
push
fiadds
insb
ror
jge
sub
jns
jmp
test
pop
push
std
xchg
fs
mov
mov
fs
fnstsw
andb
xchg
dec
enterw
dec
sub
jge
cwtl
inc
inc
lds
mov
icebp
mov
inc
aaa
inc
jmp
cwtl
sahf
ljmp
outsb
fnsave
push
push
pop
or
push
sbb
adc
pop
add
data16
ss
mov
pop
movsb
sbb
inc
mov
leave
mov
or
sub
fisubrl
jl
cmp
out
jge
lods
add
lock
xor
movsb
add
dec
adc
icebp
mov
and
fisubl
push
aad
xor
int
jl
jae
pop
addr16
pusha
lret
repz
cmpsl
loop
lret
pop
loopne
jle
sub
dec
xchg
int
or
adc
sbb
pop
adc
fmul
cmp
and
in
push
dec
fxch
xor
lods
es
sbb
cli
add
and
sahf
aas
pop
movsl
aam
arpl
pop
dec
push
pop
mov
dec
pop
outsl
dec
jmp
ret
adc
sub
rclb
aam
les
sbb
bnd
push
shlb
dec
mov
dec
sbb
inc
nop
daa
mov
adc
jo
inc
in
adc
sbbl
dec
fisubs
jns
sub
xor
out
lret
aam
pushf
addr16
xchg
ja
sbb
sbb
imul
shll
sub
xchg
or
ret
adc
sahf
inc
mov
mov
pop
push
lcall
sbb
faddl
jp
xor
mov
push
xor
lods
loope
in
popa
and
sbb
pop
and
out
cmp
xchg
mov
or
in
out
mov
dec
mov
rcrb
repz
scas
lret
jo
shll
loope
mov
xchg
cmp
adc
mov
inc
jmp
je
in
push
out
push
pause
add
ja
ljmp
sbb
dec
shlb
test
aaa
in
cmpsl
mov
clc
dec
jbe
mov
outsb
int3
push
movsl
pop
mov
mov
pushf
mov
jnp
test
mov
notb
shlb
test
adc
mov
daa
lds
hlt
xchg
and
je
xor
data16
push
xchg
xchg
cmp
ds
enter
int3
inc
and
cmp
cmp
mov
and
adc
dec
jp
mov
or
arpl
leave
lock
fs
jle
movsl
movsb
clc
jae
push
or
inc
xor
push
xor
sarl
dec
xchg
pop
add
pop
iret
pusha
in
call
insb
scas
sbb
movsl
mov
inc
movsb
cmc
and
adc
call
inc
ret
jl
movsb
pop
pop
jmp
insl
fildll
loop
cmp
mov
jns
mov
mov
mov
sbb
sbb
outsl
mov
add
movsl
popf
push
xchg
mov
dec
mov
cld
bound
inc
lret
mov
sahf
mov
mov
je
mov
fs
push
pop
mov
idiv
aam
in
fildll
scas
mov
xchg
enter
mov
mov
incb
lret
fs
jns
inc
negl
add
neg
push
push
cmpsl
cmp
mov
out
mov
xor
cmp
mov
adc
int3
or
adc
rcll
jecxz
push
outsb
aam
fcomps
push
cmp
inc
sbb
xor
xor
sbb
test
jns
jecxz
add
ret
xchg
pusha
dec
xchg
repnz
push
add
xchg
negl
cmpsl
mov
xchg
mov
or
xchg
aaa
pop
stc
ret
inc
les
loope
in
mov
jns
outsl
outsb
call
adc
pop
jne
ljmp
cmp
and
pop
das
or
add
mov
or
rcl
push
arpl
sub
cli
cmp
les
pop
cwtl
inc
test
sbb
insl
ret
lods
sub
mov
jne
out
jmp
test
clc
les
mov
cmp
rcrl
mov
jmp
out
push
jle
loope
aad
call
xchg
mov
cmpsl
xor
inc
enter
in
xrelease
shll
ja
push
mov
pop
fstpt
sub
push
add
xchg
push
jo
push
frstor
mov
iret
sub
mov
jl
ss
and
mov
adc
or
std
xor
aaa
pop
push
add
pop
push
mov
jmp
fimull
inc
mov
inc
xchg
jmp
mov
mov
daa
adc
mov
or
inc
pushl
clc
ljmp
mov
int
insl
roll
sbb
ss
add
push
adc
movsb
cmpsl
jle
imul
and
push
adc
push
outsb
adc
testb
lds
lods
mov
cmp
shlb
adc
jns
xlat
jecxz
out
jae
je
je
pop
dec
stos
sbb
sub
lcall
mov
mov
sbb
inc
icebp
push
push
and
push
push
xor
mov
dec
add
dec
mov
push
das
ffreep
mov
fstpt
jge
pop
outsb
out
sbbb
xor
inc
and
xchg
rcrb
loop
push
and
aas
xchg
xor
stos
in
xor
cmpsb
mov
dec
aaa
nop
aas
xor
sub
xchg
ror
push
and
mov
sub
ret
insb
stc
inc
loopne
fcoml
in
mov
mov
jbe
test
dec
test
nop
rcrb
fcoml
cli
cmp
testl
ss
and
sbb
adcb
mov
cmp
js
xor
xchg
sbb
add
popa
fwait
aaa
mov
outsl
lock
pop
sbb
xchg
xor
xchg
mull
fwait
sub
setno
mov
fstpt
incl
sbb
rcrb
and
dec
test
in
repz
icebp
fnstcw
cmp
cli
ficompl
ret
dec
ja
mov
mov
leave
cmpsl
shlb
std
or
jns
cmp
mov
mov
idivb
dec
adc
mov
out
ret
je
mov
cmc
jg
addr16
push
shl
cvttps2pi
aaa
xor
sbb
cmp
push
mov
stc
pop
jge
aad
jno
popa
mov
adc
enter
jg
inc
loop
enter
xchg
stos
int
daa
ret
shrb
test
lret
bound
jbe
push
or
je
xchg
jns
cld
dec
inc
sahf
int
aad
cmp
or
out
push
or
mov
add
fidivl
stos
xchg
xor
and
aas
adc
sbb
ret
test
pop
fmull
je
and
sub
push
add
test
sbb
cmp
pop
sbb
jbe
adc
and
push
mov
fldcw
and
lcall
loopne
adc
ljmp
add
mov
jge
xor
jb
lods
insb
aam
int3
push
pop
dec
xor
lea
std
mov
jl
jle
daa
and
nop
mov
mov
jg
push
cmp
sub
les
hlt
or
add
outsb
dec
adc
and
mov
pop
in
mul
mov
idiv
aad
lret
rcrb
icebp
leave
cmc
sub
ret
lcall
emms
cmp
das
adc
jne
ljmp
inc
cmp
mov
xchg
cmp
sbb
shlb
adc
sub
adc
in
pop
mov
sahf
push
dec
pop
sbb
mov
adc
mov
jnp
jg
stc
push
sub
lock
dec
adc
icebp
insl
xlat
and
sbb
xchg
clc
xchg
cmc
lock
pop
xor
cltd
in
push
cmp
push
pop
sub
lahf
filds
dec
xchg
loop
lock
aaa
mov
movsl
cmp
pop
pop
pop
mov
pop
test
and
xor
push
add
bound
jp
adc
xlat
lahf
cmpsb
adc
js
add
imul
sbb
adc
xchg
ret
add
adc
adc
rorl
dec
mov
mov
or
or
daa
xchg
dec
xor
xchg
mov
mov
add
imul
imul
adc
mov
cmp
push
push
mov
clc
jmp
mov
inc
cmp
das
and
push
stos
mov
loope
sahf
es
cmp
and
stos
insb
mov
mov
xor
mov
jmp
addb
jle
call
adcl
sbb
aad
aaa
mov
xchg
sbb
xchg
mov
push
lock
aaa
popf
mov
push
dec
and
add
mov
imul
adc
push
cltd
sub
fistl
or
int3
jmp
and
jno
pushf
dec
pushl
lcall
xchg
inc
in
xchg
rorl
cmp
mov
loop
ljmp
mov
dec
subb
dec
lock
loop
int3
push
in
pop
jae
adc
mov
out
xchg
enter
sti
mov
outsb
inc
rorb
rorb
jo
push
push
andb
mov
sti
add
sub
js
cmp
sub
out
scas
cli
push
lahf
cmp
mov
data16
lcall
xor
sbb
dec
and
sbb
mov
push
pop
arpl
fnstcw
repnz
xchg
jno
repz
push
insb
push
cmp
sub
or
inc
movsl
push
xor
fnstsw
addr16
data16
nop
rolb
xor
movsl
push
sbb
push
add
and
fisubs
mov
jbe
leave
iret
out
ljmp
ds
insl
jno
aas
pop
aas
fidivl
div
inc
mov
daa
cltd
or
jg
movsb
cmp
jmp
push
inc
imul
mov
xlat
movsl
inc
push
std
scas
adc
push
mov
xchg
and
decb
and
and
fsubr
fwait
lods
sub
stos
mov
add
mov
sbb
push
xorb
push
add
loope
aam
fnstenv
in
mov
mov
fcoms
call
and
divl
mov
outsl
into
data16
ljmp
lahf
cmpsb
mov
cwtl
std
pop
cwtl
dec
mov
mov
repnz
cmp
sbb
mov
test
jp
mov
push
int3
cltd
mov
cmp
addr16
jg
push
loope
or
and
addl
inc
cmp
addr16
pop
mov
pop
mov
loope
int3
iret
pop
cld
fsubl
mov
add
inc
js
outsb
mov
cmp
lcall
jmp
sahf
iret
rcrl
pop
iret
cmp
sbb
popf
pop
cs
dec
sub
fidivs
lock
dec
inc
add
in
test
jbe
lahf
push
mov
test
mov
sub
popa
fcoml
push
mov
push
insl
pop
cs
or
mov
sub
jbe
call
stc
inc
lcall
jae
out
mov
mov
cltd
clc
lret
cs
pop
add
decb
cmpsb
sbb
insl
cmp
lods
aaa
mov
or
ficomps
or
adc
dec
adc
shll
roll
out
sarl
add
adc
pop
in
pop
jge
rcr
je
sub
aaa
and
adc
das
pop
mov
dec
icebp
rcll
adc
pop
call
dec
dec
and
pop
addr16
xchg
push
add
repnz
mov
lods
mov
leave
pop
addr16
fnstsw
sahf
mov
add
lret
movsb
aam
lcall
jle
dec
pop
mov
lods
xor
out
cmp
dec
or
pop
bound
sub
jnp
les
xchg
out
xor
inc
int
cltd
pop
push
shrb
jbe
cmpsb
leave
inc
jecxz
jae
in
sub
jecxz
jb
fldcw
mov
cltd
and
add
cli
mov
jbe
or
lds
pop
jl,pn
loope
mov
push
xor
sbb
jl
ja
xchg
mov
jns
mov
andb
push
aad
jb
dec
pop
sbb
mov
xchg
add
pop
jns
subl
test
pop
insl
rcrl
fldt
int3
add
in
jle
stos
or
xchg
pop
cltd
outsb
mov
rolb
xchg
jnp
lret
mov
in
xchg
stos
in
hlt
ss
into
inc
fcmovnbe
insl
cltd
ja
pop
faddl
add
ret
cmc
loopne
aam
out
aad
sarb
add
inc
xlat
push
imul
lcall
mov
roll
inc
jbe
inc
sub
mov
dec
mov
dec
or
mov
mov
push
mov
ljmp
push
mov
push
loop
leave
xchg
cmpsl
cs
in
andb
adc
loope
sahf
jns
mov
fidivrl
call
jnp
cmp
outsb
xchg
fsubrl
pop
inc
mov
xorb
xchg
stc
pop
fildl
add
fsts
out
arpl
je
in
mov
ds
pop
xlat
and
inc
mov
and
out
pop
movsl
push
mov
mov
in
mov
mov
pop
andb
push
xor
ss
xor
mov
scas
in
fsubr
imul
ficoml
ljmp
inc
fsubrs
xchg
xchg
call
xor
sti
lock
shrb
sub
jmp
jae
lret
test
mov
aad
int3
arpl
push
imulb
sub
push
ljmp
xor
xchg
fwait
jle
cmp
arpl
lret
or
xchg
popa
pop
es
pushf
scas
push
scas
fdivs
lahf
inc
push
pop
call
push
cmp
pop
stos
sbb
data16
inc
dec
imul
xchg
pop
jbe
imul
xor
cmp
scas
scas
addl
push
mov
cmp
loope
adc
mov
clc
mov
push
imul
push
lds
add
mov
rcrl
jecxz
js
es
insl
pop
es
popa
pusha
adc
and
sbb
add
xchg
ret
adc
or
lock
cmp
mov
subl
dec
inc
jno
sarl
xchg
xor
push
sbb
lret
outsb
cmc
jo
aam
daa
sbb
scas
push
inc
push
int3
add
adc
add
adc
sahf
dec
repz
add
xchg
push
leave
repz
or
push
addr16
and
cmpl
sub
inc
mov
outsl
outsl
and
popa
cmp
aas
or
mov
fadd
inc
in
sbb
pop
imul
icebp
lock
pushf
xor
mov
rcll
jb
pop
dec
cmp
std
imul
lea
dec
outsb
push
hlt
out
lcall
dec
and
sub
push
out
push
ljmp
jle
call
adc
adcl
jmp
ret
jp
or
sub
mov
es
dec
imul
mov
jg
pop
jge
das
mov
sbb
aad
mov
mov
xchg
lea
pop
stc
xchg
pop
int3
xchg
in
add
push
pop
mov
mov
mov
mov
repz
push
pop
stos
sbb
nop
mov
shrb
add
mov
nop
rorl
mov
shlb
shll
iret
mov
xchg
and
push
fildl
icebp
sbb
insb
cmp
cmp
scas
inc
fimuls
cli
shr
imul
adc
jbe
inc
shlb
xor
sti
sub
push
inc
fwait
loop
notb
pusha
mov
clc
aam
lahf
sub
adc
mov
cld
and
jg
lods
push
lock
pusha
test
dec
leave
mov
pop
adc
sbb
xchg
loopne
mov
jle
ss
adc
dec
and
in
jnp
cmp
inc
adc
jg
jge
add
adc
mov
or
dec
or
jns
mov
xor
mov
add
cmp
and
je
sbb
and
lods
popa
inc
xchg
dec
test
aam
out
mov
mov
sbb
outsb
cmp
xlat
mov
into
icebp
mov
test
adc
loop
sahf
mov
or
cmp
shrb
scas
fldcw
scas
sbb
imul
mov
mov
scas
loopne
pop
push
mov
mov
sub
mov
xor
mov
xchg
scas
repnz
pop
or
cmp
sbb
sbb
inc
mov
das
sbb
dec
cs
in
mov
sbbl
call
scas
mov
adc
mov
xchg
sub
sahf
sbb
jp
add
cwtl
xor
dec
dec
div
enter
jmp
or
ljmp
and
xchg
inc
push
aas
test
and
add
sbb
adc
decb
out
sbb
outsl
adc
shll
fldt
jo
int3
ficoms
sbb
pop
jno
mov
js
icebp
xchg
push
pop
mov
mov
imul
aam
push
lcall
mov
and
add
mov
mov
inc
addr16
test
jmp
in
jnp
jns
neg
in
adc
adc
adc
push
pop
data16
sahf
stos
out
enter
out
outsl
push
clc
sub
mov
mov
cwtl
sti
ret
mov
cmc
int
std
stos
and
xor
fnsave
and
in
push
sub
repz
mov
lret
enter
outsl
mov
mov
enter
in
fbstp
mov
sbb
pusha
mov
mov
lret
pop
cmpsb
rorb
or
sahf
dec
nop
or
add
mov
in
not
scas
cmp
push
movsl
lahf
add
enter
mov
lds
sahf
jnp
mov
insl
cmp
frstor
cmp
and
sti
lock
das
adc
pop
aad
test
push
jl
lret
jno
xchg
js
push
int3
rcl
mov
pushf
popf
negb
dec
sti
or
adc
cmpsb
xchg
cmpsl
rorl
xchg
push
stc
cmp
mov
xchg
popf
fisubs
adc
and
xor
out
add
enter
xor
add
icebp
sahf
dec
adc
call
setnp
outsl
and
and
jecxz
dec
call
pop
adc
in
jmp
jg
repz
cwtl
stos
sbb
lcall
cwtl
cmp
les
cmp
jecxz
push
pushf
xor
lods
xorb
inc
inc
inc
imul
pop
xor
jnp
cld
shl
ljmp
imul
addl
pop
mov
add
popf
addr16
inc
pusha
add
cltd
aam
xor
push
or
jnp
mov
mov
test
adc
fcmovnu
aas
push
es
push
sub
jge
push
or
jnp
mov
xchg
and
fbld
mov
and
ret
mov
aaa
mov
orl
movsl
bnd
insb
jbe
pop
or
push
xor
lds
sbb
mov
mov
dec
and
enter
sbb
popa
xchg
outsl
pusha
js
or
out
outsb
mov
aam
push
popa
sub
ljmp
cli
sub
stos
dec
out
adc
and
mov
loope
daa
dec
jnp
mov
jmp
jne
out
popa
out
rorl
lret
dec
imul
adc
mov
adc
insl
and
subl
jne
popa
psrld
rorb
or
mov
aad
fldenv
push
les
daa
cltd
adc
leave
push
adc
test
hlt
mov
in
xlat
or
mov
lret
mov
scas
das
mov
testl
les
sahf
xor
cmp
xlat
sub
push
scas
mov
pop
pushf
mov
sar
cli
je
jg
out
lds
js
roll
push
lea
jmp
in
movsb
pop
imul
xor
push
fistpl
sbb
int
or
xlat
shrb
mov
rolb
cmp
incl
cs
cmp
sti
fidivs
sbb
ss
iret
inc
pop
sub
les
cmpsb
aam
dec
dec
imul
or
push
mov
push
insb
hlt
mov
pop
lcall
bound
repz
in
mov
xchg
mov
dec
pop
repnz
fdivrp
or
test
inc
and
dec
into
sub
mulb
push
stc
mov
lcall
bound
rcrb
shl
in
movsb
xchg
adc
fbstp
jge
cmp
jp
add
fs
flds
out
popa
jnp
jnp
mov
and
shrl
sbb
filds
lahf
jmp
data16
mov
jb
sahf
sahf
sub
int3
out
pop
aad
push
mov
sti
dec
jns
movsl
call
add
int
loopne
pop
sub
cld
pusha
or
js
or
xchg
cwtl
in
mov
inc
push
addl
xor
pop
outsl
push
pusha
mov
fldenv
cmp
stc
ret
das
mov
test
dec
in
inc
xor
sub
nop
nop
stos
push
mov
out
jg
jge
out
out
add
mov
cmovg
and
mov
push
mov
fisttps
or
mov
fxch
fxch
cmpl
data16
int
push
sbb
repz
lds
leave
jmp
mov
mov
fdivp
call
and
loop
test
call
sbb
inc
xchg
adc
pop
ja
and
inc
int
mov
mov
icebp
repnz
push
jg
xor
inc
add
dec
rcll
sbb
cmpsl
dec
add
pop
scas
and
mulb
cltd
cmc
pop
js
xchg
pslld
outsl
ja
mov
cmp
test
hlt
adc
lea
mov
push
jmp
imul
add
adc
mov
or
shrl
pop
jno
int
out
ret
jl
push
add
roll
mov
out
push
cmp
jecxz
addr16
mov
mov
inc
dec
lahf
fdivs
push
dec
insl
test
mov
hlt
pop
aaa
jno
adc
ss
insb
sbb
inc
push
add
and
mov
and
aam
inc
sbb
sub
push
xchg
sub
ds
inc
inc
fmull
mov
out
push
push
push
mov
jo
push
shlb
pop
cmp
data16
xor
repz
repz
fbstp
call
jg
stc
ss
jbe
inc
call
mov
popa
and
jae
idiv
or
out
enter
daa
dec
int3
pop
push
push
push
fdivrs
jecxz
and
sti
insl
push
enter
push
clc
jmp
imul
aaa
mov
dec
ljmp
push
scas
fldt
inc
insb
mov
mov
mov
sahf
std
test
sbb
loope
js
mov
xor
aam
and
roll
bound
or
xor
std
and
mov
cmp
xchg
imul
add
cmp
pop
xchg
sbb
daa
mov
mov
test
mov
bound
and
xor
iret
outsb
js
loope
push
dec
dec
mov
js
mov
sbb
lea
mov
push
int
jle
mov
xlat
out
gs
leave
cmpsl
adc
gs
mov
cmc
into
cmp
mov
adc
mov
orl
dec
cmp
jnp
and
lods
add
jp
mov
hlt
dec
test
xchg
inc
scas
lock
jp
fsubrp
push
inc
push
out
mov
das
sbb
mov
xlat
jge
fistpl
iret
mov
fisubs
push
popf
cmp
xchg
xchg
pop
mov
adc
add
mov
xchg
mov
loopne
scas
sbb
lock
push
cmpsb
xor
adc
mov
add
cmpsb
jg
xor
add
call
insl
pop
xchg
out
mov
cwtl
xchg
negb
mov
dec
jge
cmp
push
dec
xor
sub
jmp
jns
in
das
jno
stos
pop
cltd
inc
test
in
outsl
add
insl
mov
sub
inc
scas
loop
or
hlt
cmp
in
aam
add
or
jecxz
push
fs
fsubl
addl
jl
in
scas
loope
xor
sub
pop
lods
mov
enter
mov
aaa
jle
mov
movsl
dec
push
in
outsb
jae
hlt
cwtl
bound
rclb
xlat
cld
out
cmp
jne
push
mov
cmp
sarl
cmp
push
sbb
or
cmp
jp
mov
shrb
lods
cld
fstps
mov
rcr
mov
and
cwtl
or
scas
cmp
sarb
xor
call
subb
adc
fnstcw
data16
adc
fwait
mulb
jmp
dec
stos
hlt
imul
pusha
xchg
xor
or
fistpll
pop
popa
loop
mov
sub
ret
sub
or
jo
or
gs
cmc
mov
sub
orl
push
out
xchg
imul
jle
cmpsl
leave
dec
pop
mov
lea
mov
sub
adc
stos
inc
ret
jnp
xor
arpl
push
pusha
push
xor
add
mov
pop
mov
call
movsl
mov
cmpsl
loopne
jb
pop
sti
sub
scas
sub
outsb
and
push
sbb
sub
imul
popa
mov
sbb
or
push
push
imul
cli
or
sub
aaa
movsb
shlb
test
mov
repnz
or
idivl
enter
cmc
data16
mov
push
les
roll
cld
ret
lea
mov
mov
cmc
js
jecxz
cmp
xchg
mov
sti
and
adc
lahf
popa
inc
add
popa
stos
lcall
sub
add
or
and
sti
sub
pop
xchg
jecxz
mov
ffree
lahf
push
sbb
mov
or
push
test
aam
hlt
push
jl
xlat
nop
xchg
jle
or
jns
fildl
dec
xchg
movsb
nop
xor
icebp
dec
cmp
outsb
sti
enter
push
leave
and
sub
jecxz
push
dec
rcll
movsb
insb
sbb
pop
faddl
adc
mov
pop
or
cld
mov
div
sub
pop
inc
pop
out
hlt
rorb
lock
popa
outsb
dec
rcrl
movsl
imul
sub
stos
scas
das
sub
sbb
rorl
popf
lock
fs
cmp
mov
loope
jge
mov
xor
mov
mov
inc
jb
movsl
fmulp
mov
sarl
xchg
and
js
clc
dec
nop
stos
dec
adc
xchg
xor
cltd
jl
ret
jns
mov
xchg
ja
std
ljmp
xlat
lahf
pushf
cmp
fidivs
sub
mov
adc
add
dec
insb
pop
jge
mov
xchg
jnp
add
adc
dec
ljmp
stos
adc
rclb
sub
inc
lods
jg
dec
cli
sub
adc
and
or
aam
ja
inc
and
dec
imul
imul
lret
std
imul
js
adc
sub
push
popf
popf
dec
pushf
inc
lcall
bound
jae
add
pop
or
jp
cmp
xchg
std
std
cwtl
adc
test
mov
hlt
xchg
into
or
pop
lock
mov
or
rorb
cltd
int3
adc
mov
dec
pop
sbb
add
rcrl
dec
ja
cmp
test
xchg
add
jne,pt
mov
jge
pop
sub
lret
lds
repz
xchg
cmc
inc
rolb
xchg
xorb
cs
insb
mov
mov
mov
popa
lock
lods
cmp
mov
ljmp
es
bound
or
dec
out
je
add
jmp
add
lret
pusha
sub
cmp
or
xchg
movsb
shlb
jb
push
lods
addr16
inc
or
negl
adc
sbb
fidivrs
icebp
xchg
mov
xor
inc
lods
aad
cli
pusha
mov
add
add
and
je
cmp
lahf
fdivrp
push
or
fxch
dec
cld
loopne
das
pop
loop
xchg
je
call
sub
mov
push
sbb
push
ljmp
mov
and
lea
inc
call
jae
lahf
inc
sti
outsl
popl
out
mov
pop
add
adc
push
cmp
test
imul
imul
fwait
adc
mov
nop
shl
test
in
jmp
mov
test
lret
sub
add
sti
fsubl
add
sar
shll
es
xchg
adc
ficomps
repnz
mov
mov
jns
mov
call
mov
rol
in
repnz
daa
mov
inc
pop
sub
jecxz
rcl
gs
sbb
push
sbb
js
lock
sub
adc
adc
xor
xchg
nop
shll
pop
sbb
mov
and
push
adc
fistps
sbb
pop
push
jp
mov
pop
xor
jle
xchg
xchg
xchg
xlat
test
mov
cmc
sub
dec
enter
pop
xchg
adc
sub
or
shrl
sbb
cs
jmp
aam
inc
repnz
aaa
pop
and
or
cmc
lods
and
notl
xlat
testb
and
cmpsl
or
ror
push
push
ficomps
jp
pop
cmp
and
or
icebp
jnp
xchg
mov
pop
jle
push
xor
xor
and
pop
out
dec
mov
mov
push
adc
sbb
dec
data16
testb
clc
cmp
cmc
loope
daa
pop
not
adc
fnstenv
xchg
push
fwait
mov
xor
jmp
hlt
pushf
rcrl
setnp
xchg
or
lahf
call
push
imul
rcll
je
testl
dec
sub
push
add
add
push
adc
outsl
mov
jl
in
loope
mov
pop
dec
ret
xlat
in
sbbb
in
pop
add
cmp
pop
mov
pop
jno
les
repz
ds
mov
mov
adc
mov
push
mov
mov
mov
cld
out
xorl
int
pop
mov
lea
dec
inc
pop
shlb
and
sub
in
iret
push
mov
out
sub
add
repz
cmpsb
hlt
adc
pop
push
push
inc
sub
mov
outsl
shr
jp
sbb
call
mov
and
test
popf
fsqrt
mov
fiaddl
aas
mov
pop
push
scas
xor
testl
jg
loop
xor
imul
rcl
fsts
inc
or
aaa
jmp
out
pop
sub
inc
fisubs
fdivrl
roll
inc
subb
adc
pop
jne
stos
bound
lock
js
pop
fadd
adcl
bound
adcb
popf
popf
cmp
fwait
nop
in
ljmp
stc
or
pop
enter
outsb
xchg
push
xor
pop
jge
pop
out
test
sub
mov
rcrb
or
mov
and
push
sbb
push
push
xchg
ljmp
enter
xor
add
ror
add
dec
movsb
fimuls
in
mov
insl
cmp
pop
ja
out
testb
adc
addl
push
popf
lret
fs
mov
sahf
aam
popf
xchg
clc
fcmovb
jecxz
cltd
ret
in
fsubr
dec
inc
mov
fwait
sub
xchg
insb
sub
aaa
xchg
lea
call
loop
push
add
adc
mov
push
add
mov
push
xchg
mov
ficompl
adc
cwtl
pop
mov
xchg
sahf
out
out
pop
inc
push
dec
ja
mov
bswap
and
cmp
enter
or
hlt
adc
mov
xor
call
add
dec
lds
or
xchg
adc
cmpb
movsl
cld
inc
xchg
ret
adc
outsb
jns
arpl
sbb
cld
or
cmpsl
mov
popf
pop
and
xor
mov
lea
clc
mov
inc
inc
mov
ja
cwtl
adc
cmp
mov
popa
push
xchg
mov
xlat
negb
imul
inc
in
outsb
loopne
lock
in
and
pop
jge
insl
xchg
push
sbb
shrb
sub
mov
mov
fldenv
incb
adc
popa
adc
jg
cltd
loop
cmpsb
aam
das
mov
adc
pop
sbb
call
jg
mov
xchg
rcll
inc
inc
int3
dec
vorpd
lret
inc
dec
out
stc
stos
push
xchg
xchg
jmp
mov
xor
es
xchg
sbb
jle
mov
ss
sbb
movsb
xchg
mov
cmp
or
outsl
xchg
xchg
addr16
dec
adc
xor
enter
mov
testb
push
shr
out
iret
arpl
sarl
xor
cmpsl
sbb
in
xchg
jmp
xchg
xchg
js
lods
cmp
sub
xchg
and
ret
fldl
inc
cmp
lods
inc
imul
fwait
dec
pop
dec
dec
sbb
cltd
cwtd
jp
xor
jp
ss
and
inc
loopne
and
mov
mov
dec
int3
das
stc
movb
pop
push
mov
and
imul
inc
pop
je
inc
sbb
ja
ret
aaa
mov
std
sbb
xchg
push
lcall
mov
mov
pop
mov
test
jae
cmpsb
loopne
out
xorb
jne
adc
mov
mov
xlat
std
rcrl
test
rcrl
inc
push
adc
lods
lea
fisubrl
call
lds
out
add
add
divl
sbb
test
inc
les
loop
fcoml
xor
mov
and
test
insl
test
jno
sub
insl
adc
add
push
ret
ret
adc
dec
mov
mov
fs
out
mov
lock
mov
jp
aaa
loop
push
dec
jp
bound
cmc
push
dec
mov
movsl
xchg
js
dec
add
dec
in
popf
lods
xlat
or
daa
xor
cmp
cmpsl
jp
push
mov
fmul
xchg
fwait
lds
jmp
mov
push
fstl
dec
and
negl
adc
mov
pop
iret
dec
adc
rcl
insb
cmp
call
loopne
movsb
out
mov
xor
sbb
xor
and
sbb
lret
xchg
call
loop
push
mov
fstps
dec
lods
lret
popa
ficomps
dec
scas
sti
out
inc
xor
mov
xorl
aam
dec
mov
lea
cmp
out
movzwl
in
sub
sub
addr16
adc
mov
hlt
mov
push
enter
pop
ret
fs
fcom
xor
and
mov
loop
jns
jno
sti
popa
push
mov
nop
mov
je
repnz
inc
stos
and
inc
in
and
adc
push
jno
or
cmpsl
push
aam
testb
mov
push
or
mov
lcall
cmp
and
mov
fstp
jno
mov
inc
xchg
fcoms
xor
js
push
popa
call
sbb
in
or
cld
ja
xchg
adc
lret
mov
mov
sub
pop
sahf
or
mov
icebp
int
aaa
sarl
aad
fmul
jp
xor
xlat
rolb
and
lock
fwait
jl
sub
jo
fst
xor
dec
or
inc
dec
out
sar
insb
dec
outsb
ss
sbb
nop
inc
adc
mov
out
lods
test
outsb
xchg
xor
jecxz
mov
xor
js
inc
aad
mov
add
sub
in
pop
lret
dec
push
rorl
xor
ret
js
cmp
pop
jns
push
inc
imul
add
pusha
out
mov
movsl
enter
adc
call
push
cmp
xor
dec
xchg
roll
int3
data16
outsl
adcb
insb
adc
sub
mov
mov
inc
adc
mov
repnz
jg
dec
sarb
sbb
xchg
xchg
mov
cmpsb
or
orb
jg
mov
std
push
xor
and
xchg
scas
sub
mov
popf
sti
mov
pop
enter
aaa
xor
clc
out
ja
gs
or
sub
test
dec
rorb
test
inc
push
mov
dec
xchg
stc
ss
mov
cltd
iret
inc
sub
ret
sub
rcr
mov
jmp
dec
xor
je
dec
sti
mov
dec
push
lret
icebp
inc
inc
push
sbb
pusha
pop
das
or
testb
sub
mov
lods
push
insb
push
int
std
pop
jo
std
dec
mov
pop
mov
mov
push
or
mov
fs
test
fnstsw
and
sbb
popa
push
pop
xor
aaa
cmp
cmp
xchg
dec
in
jg
push
test
scas
inc
sub
dec
cmp
sti
test
sbb
shld
jecxz
lahf
push
jle
jle
jl
and
jb
push
jo
cs
pop
xchg
cltd
fwait
mov
adc
loop
fists
and
stos
faddl
arpl
pop
fdivr
je
cmp
addr16
push
adc
in
int
pop
fs
test
mov
inc
call
ret
lock
lock
call
xlat
andl
push
hlt
sub
jl
add
push
push
cmpb
fs
flds
hlt
stos
sbb
mov
hlt
dec
sub
cli
cltd
xor
push
insb
mov
rcrl
mov
sbb
pop
popaw
xchg
xor
in
adc
ret
outsb
test
and
into
xchg
lret
outsb
cld
aam
mov
push
mov
dec
cltd
dec
int3
test
pop
fldt
aaa
cmpsb
lds
inc
jg
push
lahf
push
test
lds
cmpsl
int3
pop
call
inc
lahf
rcr
cld
or
inc
mov
aas
int
mov
mov
inc
jle
leave
imul
xlat
ret
fstps
js
sbb
cmp
lods
jle
loopne
addb
sbb
sub
int3
xchg
sbbl
cmc
sbb
add
movsb
out
cmp
xor
shlb
mov
mov
add
jge
jmp
fcom
mov
leave
ja
test
into
cwtl
inc
stc
dec
and
repnz
cmpsl
test
mov
and
hlt
dec
sbb
cmp
movsb
jp
loopne
insl
cli
adc
jns
pusha
cwtl
pop
outsb
dec
retw
scas
addb
xor
movsb
xchg
sbb
sarb
jo
add
sti
lret
mov
xchg
sub
sahf
xor
aam
or
mov
jecxz
lret
les
int3
dec
lcall
int
fsubr
jne
push
test
lcall
cwtl
mov
sub
sub
sti
add
pushf
dec
ja
leave
les
loopne
cmp
pop
push
test
cwtl
das
mov
in
and
nop
pop
cmp
fsubp
std
xchg
sbb
shrb
adc
div
sahf
outsl
inc
mov
adc
push
mov
mov
jbe
or
dec
daa
stos
sbb
and
add
xor
fcompl
or
ss
in
sub
add
ret
xor
and
pop
or
cld
lahf
pop
mov
sbb
jl
or
jg
dec
xor
jp
stos
fstpl
inc
and
and
call
adc
lds
mov
nop
lods
ja
xchg
xchg
daa
fidivs
pop
push
in
cltd
sahf
or
lcall
aaa
mov
cmp
test
roll
xor
and
pop
jmp
xor
mov
pop
hlt
pop
aaa
cmp
cltd
mov
outsb
outsb
inc
xchg
call
pop
popf
dec
pusha
cltd
ret
aas
push
xlat
testb
push
dec
stos
push
mov
fdivrs
sbb
mov
pushf
or
mov
call
jns
mov
cmp
dec
push
out
mov
out
inc
mov
fcomps
adc
aam
lahf
sub
stos
aad
in
pop
ljmp
popa
wrmsr
xchg
or
je
adc
pop
sbb
add
sub
push
mov
pop
fmuls
int3
fdivr
sub
mov
sbb
dec
fimuls
aad
sub
cmp
es
rorl
xor
or
mov
and
pop
sbb
xchg
fsubr
adc
fcoms
jb
sarl
jle
insl
lret
push
xchg
icebp
push
les
cmpsl
adc
and
in
mov
push
out
pop
stos
movsb
inc
jae
push
enter
idivb
ret
mov
jecxz
stc
mov
add
sub
dec
or
loop
sub
fcmovne
cmp
mov
sti
sbb
aaa
out
hlt
jmp
dec
adc
dec
xchg
adc
loopne
stc
sub
push
das
test
out
imul
add
pop
popa
mov
pushf
cmpsb
inc
shrb
push
cmp
or
inc
mov
pcmpgtw
fs
push
jg
and
xchg
hlt
sub
add
dec
mov
fptan
lods
outsl
lds
pop
jg
dec
push
imul
imulb
outsb
ja
sahf
jecxz
xor
mov
jb
lds
fldcw
shll
ficoms
pop
mov
mov
push
rcll
push
loope
ret
sub
rcrb
insb
and
jle
clc
pop
lahf
jae
pop
inc
fildl
mov
dec
adc
popa
shlb
popf
dec
xchg
ds
imul
nop
or
aaa
sbb
sbb
popa
std
addr16
rep
lret
les
fisttpll
sbb
cmc
call
cmp
xor
sub
repz
divb
mov
jae
mov
int3
cld
dec
xchg
clc
lahf
add
adc
push
cmp
jnp
in
cmc
mov
scas
cli
jl
ret
push
gs
iret
xchg
lods
pop
js
test
lds
push
mov
test
jge
movsl
movsb
outsl
cmpsb
lret
mov
es
jne
sub
fsubrs
scas
ret
sbb
push
fcoms
imul
vminpd
push
outsl
jmp
aas
adc
mov
negl
dec
sbbb
mov
and
pushf
jno
mov
out
push
dec
sbb
cli
stos
das
fwait
jge
les
mov
ret
pop
in
lahf
jle
jecxz
or
les
jo
or
add
outsl
fstp
dec
jp
addl
xor
jl
jbe
int3
jmp
pushf
pop
pushf
cmp
movsb
int3
in
jecxz
jno
adc
jg
sahf
mov
mov
outsl
xchg
push
std
orb
int
imul
pop
or
notb
sbb
pushf
inc
gs
adc
jnp
and
mov
cmp
xorl
push
in
mov
pushl
dec
add
test
push
test
mov
sbb
inc
rolb
enter
andl
sahf
push
or
test
lret
lock
jecxz
mov
bound
dec
xchg
inc
xchg
outsb
fnstcw
aas
jne
roll
or
xchg
daa
imul
out
push
mov
stos
mov
scas
loop
push
icebp
nop
scas
hlt
pop
pusha
jne
lds
dec
push
push
lds
mov
pop
pop
sub
imul
add
fcomps
cwtl
aad
lock
add
movsl
aas
xor
aam
push
or
mov
icebp
sti
jb
add
sbb
sbb
in
nop
cli
scas
into
lret
ret
fcoms
push
mov
insl
pop
sahf
stc
dec
pop
inc
dec
push
push
addb
cmp
mov
mov
or
adc
dec
mov
ffreep
stos
aaa
sbb
inc
das
rol
or
or
jecxz
test
mov
outsl
jne
andps
insl
and
hlt
jle
cmp
repz
cmp
cmp
or
pop
pushl
js
pop
inc
mov
jl
add
lret
in
mov
mov
cmp
aad
inc
pop
adc
mov
loop
mov
pop
movb
dec
shr
fiaddl
mov
dec
stos
out
mov
and
fistpl
xor
faddl
push
inc
mov
sbb
popa
test
arpl
mov
insl
daa
sub
adc
mov
mov
nop
adc
lahf
jge
imul
jge
out
outsl
or
xchg
in
pop
jnp
loop
inc
mov
fisubl
addb
out
in
sahf
mov
sub
insl
inc
out
in
mov
dec
shlb
push
nop
dec
pop
std
mov
dec
pop
fsubl
pop
push
mov
lret
movsb
ret
mov
pop
push
cmp
call
popa
icebp
repnz
xchg
mov
mov
inc
jnp
jo
cmp
jl
inc
mov
sti
pop
loopne
pop
cmp
gs
mov
push
dec
sub
stc
daa
int
pop
xchg
jns
mov
xor
dec
leave
iret
sub
lcall
in
sbb
push
popf
jl
lock
xlat
adc
fcompl
in
pop
pop
repnz
jbe
aad
cmpsb
loope
adc
push
xchg
xor
pop
nop
ljmp
or
mov
and
aam
cli
dec
dec
and
lds
dec
sahf
push
fwait
push
xor
xlat
out
push
push
jg
jle
cmp
xchg
iret
test
adc
pop
adc
pop
ds
xor
fnstcw
push
notb
dec
pop
imul
loopne
or
jbe
sub
xor
clc
es
xchg
std
pop
push
push
and
out
jmp
jmp
dec
repz
add
or
push
sub
sub
push
xchg
or
xchg
mov
xor
nop
xchg
cmp
push
sahf
addr16
jl
sub
shlb
imul
outsb
call
mov
and
arpl
mov
sub
and
pop
mov
mov
test
sbb
sahf
xor
pop
jnp
in
jnp
aas
pop
stos
sub
lcall
cld
sub
shrb
cmp
xchg
add
push
aas
sbb
xchg
adc
hlt
add
lahf
mov
decl
shrb
jp
mov
xchg
out
fldt
das
and
rolb
dec
popf
push
in
pop
icebp
out
andl
lret
outsl
push
push
js
out
adc
repnz
pusha
dec
hlt
rcrl
inc
and
mov
pop
jge
sbb
cmpsb
dec
stos
pop
out
adc
leave
mov
fucomip
jg
and
mov
nop
fdivrl
cld
stos
data16
or
cmp
movsl
rol
lret
es
pop
xor
jnp
add
sbb
inc
fadds
mov
add
pusha
sub
scas
dec
mov
cmp
insl
jno
cmp
mov
int
jle
dec
popf
add
cs
loope
jno
nop
movsl
dec
int
jb
outsl
xchg
int3
test
bound
jecxz
xor
pop
repnz
push
sub
adc
push
cmp
xchg
in
aam
sarl
mulb
outsb
sbbb
adc
js
push
neg
adcb
sub
popa
adcl
lock
enter
sti
push
std
aad
xor
pushf
data16
les
inc
and
repz
jge
stc
lds
js
jae
dec
out
pop
fdiv
add
add
mov
sbb
aam
std
pop
sbb
xchg
loope
sbb
js
and
sbb
loopne
into
cli
cmp
or
call
fs
outsl
pop
sub
sub
imulb
or
pushw
rclb
dec
adc
adc
add
dec
cmp
sbb
push
mov
scas
inc
addr16
cmp
mov
dec
xor
repz
aas
adc
cmp
pop
mov
and
mov
dec
jp
dec
or
lret
mov
jns
xor
ja
rol
inc
sbb
mov
mov
es
mov
or
fwait
xor
call
xor
out
jbe
icebp
mov
and
mov
lock
xor
adc
lock
adc
push
xor
fadds
cltd
push
and
lahf
inc
mov
xor
xor
add
sbb
jl
mov
jle
arpl
adc
ljmp
ljmp
rcl
mov
scas
lahf
cmp
jb
add
add
adc
sbb
inc
sbb
cmc
adc
push
shl
or
loope
sub
fistps
shrb
push
aaa
out
mov
loope
xor
mov
lcall
addr16
out
sbb
out
lods
rcll
jmp
push
mov
and
inc
pushf
gs
pop
add
adc
inc
cs
cmpsl
inc
jo
mov
rcrb
dec
insl
mov
insb
mov
lea
test
xor
sbb
test
jl
pop
icebp
lods
inc
cwtl
mov
jae
leave
mov
push
inc
pushl
icebp
mov
int
or
or
dec
lock
sbb
nop
jg
sub
stc
loop
inc
ja
xchg
push
imul
outsb
stos
in
ljmp
imul
push
pop
jecxz
add
hlt
in
adc
xchg
in
and
pushf
cli
in
push
test
or
add
jmp
xor
jp
push
dec
das
or
imul
add
jmp
add
xor
add
push
int3
and
push
mov
sub
or
js
mov
scas
sbb
rcrl
jge
lock
mov
sbb
jns
mov
xor
adc
aas
repnz
xor
inc
shlb
sub
xchg
gs
std
ljmp
sbb
addl
xor
jo
pop
popf
lret
ja
dec
add
mov
enter
fstpt
xchg
xchg
aas
pop
movsl
and
jo
in
or
fnstsw
in
add
insb
test
pop
inc
pop
jl
lods
lcall
imul
mov
or
addl
and
cmpsl
inc
mov
sub
cmp
daa
ja
xchg
pushf
addl
inc
insb
sub
cli
bound
fwait
xor
mov
or
cli
loopne
mov
cmp
and
pop
sub
jle
cmpsb
sub
pop
repnz
mov
notb
xchg
insl
lcall
in
mov
xchg
inc
adc
loope
fdivrs
push
test
xor
fisttpll
das
data16
sarb
mov
jle
fdiv
push
sub
outsb
sub
fsts
stos
int3
sub
addl
xchg
loopne
mov
adc
push
push
xlat
sbb
push
pop
add
in
and
stos
or
push
inc
lret
inc
popf
push
inc
pop
push
imul
sbb
cmp
add
leave
cmc
add
xor
repnz
cmp
jbe
scas
sbb
xchg
xor
sbb
bsr
test
hlt
in
adc
inc
repnz
cs
fucom
xorb
sbb
shlb
fadds
mov
loop
xor
push
in
jp
xchg
xor
mov
nop
movsl
lock
cmpsb
lock
jp
push
aaa
xchg
lods
cmp
clc
mov
mov
pushf
outsl
outsb
mov
or
sub
push
fldl
jl
int3
sub
inc
push
in
lea
add
icebp
add
fidivs
pop
mov
fcomip
insl
jae
cmp
lcall
mov
or
popf
shll
xchg
repnz
mov
imul
mov
or
shl
mov
jmp
lods
xchg
cmpsb
and
ss
cmc
loop
sub
or
out
imul
mov
fdivs
dec
inc
xor
jnp
out
leave
jb
testb
cmc
in
mov
xlat
dec
bound
and
cwtl
push
movsb
inc
xchg
pop
mov
push
and
or
xor
arpl
push
jl
lret
pop
ficoml
int
ds
mov
sbb
ljmp
mov
lock
jnp
cltd
or
and
cmpb
mov
push
stc
lret
pop
std
scas
fstps
enter
add
jmp
ss
xor
stos
cmp
sbb
lahf
push
pop
mov
or
lock
push
inc
or
pop
xchg
mov
cmp
xor
or
jle
sbb
stos
dec
push
push
mov
mov
psrld
call
and
xor
or
dec
cltd
loopne
out
push
dec
cmp
insl
repnz
popf
push
divb
mov
add
push
mov
mov
mov
gs
call
popa
sub
mov
jnp
mov
jns
fbld
cltd
push
imul
lret
sti
cmp
xchg
mov
jnp
gs
push
pusha
aaa
sub
adc
mov
arpl
mov
fwait
dec
icebp
test
xchg
mov
insl
fldz
movsl
iret
ja
cmp
ret
pop
and
imul
jo
lret
orb
sub
hlt
lds
cmp
sub
xchg
ss
lahf
adc
inc
test
jp
jmp
and
pop
dec
outsb
in
pop
and
xlat
mov
mov
sbb
cltd
cltd
or
sub
in
ja
add
clc
mov
cmp
dec
push
cmp
cmp
mov
aas
loope
fs
jnp
nop
int
fsubrs
lret
push
shrb
push
inc
repz
sbb
lea
and
cmpsl
push
test
add
dec
adc
mov
clc
aam
mov
add
loop
sbb
pop
ds
dec
jl
lcall
loop
clc
mov
imul
sbb
mov
xchg
clc
nop
jecxz
sti
or
sub
fistpl
sbb
cwtl
iret
dec
jecxz
ds
xchg
xor
mov
mov
sbb
mov
outsl
movsl
shr
cmpsl
jb
stos
mov
je
ret
xor
mov
rorl
fwait
shrb
dec
dec
and
pop
pop
push
rolb
aaa
jns
pop
lds
xlat
adc
cmp
mov
jne
mov
ss
call
das
cmp
es
mov
mov
mov
stos
or
sbb
push
out
xor
jle
movsb
stc
ret
add
sub
divb
cli
lods
or
adc
cmp
dec
mov
xchg
jns
nop
cltd
inc
sub
mov
ds
and
cmpsl
or
or
add
jb
incl
xchg
sub
jge
xor
icebp
xchg
addb
xchg
jno
rcrl
add
pop
loopne
cmp
add
mov
aaa
push
or
push
call
cwtl
pushl
pop
jae
aad
pop
fisttpll
inc
fwait
mov
push
pusha
fnstsw
stos
seta
out
ret
xor
mov
push
jnp
push
imul
ljmp
sub
sbb
dec
arpl
gs
or
xlat
in
xor
cs
dec
test
mov
pop
xor
add
cmp
incb
in
or
mov
push
std
push
movsb
and
and
add
cmp
mov
mov
loop
movsb
inc
mov
icebp
cmpsl
loop
movsl
or
nop
mov
scas
cmp
add
add
insl
mov
add
mov
pop
fistpll
mov
cmc
inc
lods
dec
fistl
or
jne
stc
stos
aam
xorl
insb
int
mov
sbb
dec
mov
mov
repz
sub
xchg
stos
sub
mov
jae
out
jbe
outsl
in
jne
xor
bnd
lds
lods
jnp
test
cmp
mov
dec
insb
mov
fwait
dec
cmp
stos
pop
shl
sub
sbbl
jle
pop
xor
popf
enter
in
pop
xchg
in
ficoms
rorb
out
mov
out
push
sbb
int3
dec
imul
int
cmc
or
xor
jmp
jl
js
rorl
mov
push
es
ds
sbb
ffree
cwtl
cmc
inc
push
mov
test
push
mov
mov
pop
mov
repnz
sbbb
lret
repnz
mov
movsl
mov
xor
mov
lahf
sbb
cwtl
imul
stc
cltd
xchg
aad
stos
cld
jl
pop
inc
icebp
std
movsl
cmp
jae
ret
dec
add
js
daa
shrl
xor
fimull
and
movsb
pop
mov
xor
test
fyl2xp1
push
ds
cwtl
in
inc
lods
ret
ja
imul
and
out
std
lcall
mov
adc
or
inc
cmp
notl
cmpl
jae
insl
sbb
mov
jnp
and
mov
lds
stos
mov
imul
in
add
add
fwait
data16
and
insb
sar
jmp
pop
mov
sbb
mov
pop
adc
insl
xor
push
adc
dec
jmp
push
add
pusha
outsl
mov
xchg
lret
mov
imul
pop
sbb
or
inc
mov
mov
nop
repnz
jne
aad
outsl
dec
sub
pop
leave
imul
ljmp
push
inc
filds
dec
fmulp
pushf
push
lock
or
push
push
and
fidivrs
jns
sbb
testl
and
jl
mov
pop
imul
jle
jmp
sbb
outsb
or
dec
mov
push
into
sub
cmp
cmp
inc
adc
mov
add
sar
cmp
pop
push
cmp
xor
xor
mov
test
inc
push
xor
enter
arpl
xor
stc
pushf
ja
lods
or
inc
dec
cltd
xchg
pop
xor
cmp
fadds
outsl
inc
fistl
jns
cmpsl
jb
add
adc
pusha
pop
iret
sbb
adc
ss
mov
pop
fnstcw
mov
mov
pop
mov
push
inc
mov
jb
out
sarl
cmp
xchg
xor
imul
add
fimuls
or
jg
call
mov
sub
or
fwait
mov
sarl
jge
or
xlat
ret
mov
cmpsb
loope
jecxz
and
cli
xchg
lret
push
popl
decb
insb
mulb
pusha
push
dec
sbb
mov
jae
lods
xchg
jge
mov
ljmpw
cmp
insb
mov
jmp
mov
fldenv
mov
hlt
iret
cmp
lcall
aad
cmc
lahf
mov
cmp
dec
lret
mov
mov
js
push
cmpsl
movsl
mov
xchg
push
fs
lret
pop
movsb
jl
call
mov
fwait
jns
xchg
sbb
cli
cwtl
jns
pushf
mov
test
xchg
cmp
test
scas
cwtl
outsb
inc
roll
cmp
push
and
push
scas
test
arpl
sbbb
xchg
xorb
out
jl
bound
daa
insb
sbb
mov
nop
repnz
cld
ljmp
lret
cmp
jbe
imul
jns
jno
xchg
pop
inc
adc
add
hlt
jns
or
sbbb
imul
xor
roll
mov
pushl
add
jae
clc
mov
sbb
xchg
aam
jae
test
mov
mov
dec
or
cwtl
test
rolb
jne
data16
bound
ja
pop
sub
or
mov
cltd
stos
pushf
mov
push
mov
clc
sub
lea
out
and
movsb
test
mov
and
arpl
movsb
test
inc
push
mov
inc
sti
pop
xchg
dec
aad
cmp
dec
je
jae
jnp
lcall
mov
popf
lret
push
push
xchg
mov
jbe
movb
xor
clc
sbb
push
test
mov
add
push
jo
cwtl
inc
repnz
jg
cmp
xor
or
xchg
cmp
push
ljmp
mov
lcall
mov
push
add
outsb
shlb
mov
roll
mov
imul
mov
repz
pop
sahf
or
mov
adc
mov
push
sbb
icebp
lds
or
clc
sahf
sbb
jg
int
enter
shrl
push
sub
into
aad
fisubrs
ffreep
popa
dec
in
frstor
popa
add
xor
cmp
or
mov
or
dec
ljmp
add
shrb
dec
in
mov
icebp
in
negb
iret
lea
cmp
xorl
insl
loopne
popa
fildl
pop
insl
lahf
sbb
jo
adc
ret
cmpsb
sti
adc
sub
mov
push
ljmp
xor
loope
adc
xor
sar
pop
loopne
jl
dec
in
jmp
sbbb
rcll
jmp
lcall
scas
movsb
iret
mov
xchg
add
enter
xlat
cmpsw
and
lds
dec
frstor
out
int
inc
repnz
xor
pop
lcall
push
inc
fcomps
sub
pop
mov
mov
lea
add
mov
aam
ret
mov
sarl
jecxz
jmp
outsb
xor
daa
adc
leave
sub
test
mov
xchg
cmp
cmp
jb
and
inc
clc
in
and
push
and
adc
cmpsl
or
cmp
cmpsl
pop
enter
sub
pushf
dec
sti
dec
mov
icebp
cmp
int3
and
fldt
das
subb
pop
mov
aas
scas
into
lahf
mov
imul
test
mov
jno
mov
jo
fistl
jb
lock
ret
xorb
in
push
insl
mov
popa
jge
cs
cld
movsb
test
mov
mov
pusha
xor
jp
xor
lcall
rclb
les
xor
out
lods
inc
out
jae
mov
mov
js
mov
js
push
push
ror
in
xchg
in
xchg
add
testb
jg
sti
idiv
lcall
mov
outsb
jb
std
in
xchg
sub
jno
mul
testl
mov
std
adc
popf
stos
lret
jno
sbb
and
fsubrp
jmp
insl
pop
pushf
jne
push
test
test
movsb
xchg
ja
sbb
pop
ja
jnp
push
inc
mov
pop
std
fsubrl
inc
sbb
xchg
sarl
dec
inc
and
jg
dec
pop
int3
jne
scas
loopne
dec
and
daa
ret
pop
xor
gs
and
cld
and
lea
in
sub
sub
repnz
and
scas
lods
fnstcw
jnp
fsub
mov
add
or
mov
imul
popf
cmp
cmp
pop
sub
stc
cmp
adc
inc
sub
adc
or
lret
pop
pop
test
jo
fucomip
repz
cltd
inc
out
jo
or
lret
dec
lahf
jmp
add
push
pop
int3
sbb
xor
pcmpgtw
xchg
aad
dec
mov
and
test
ffree
xor
sub
adc
out
imul
mov
lahf
or
fnclex
pcmpeqb
adc
out
sub
push
adc
xchg
push
xchg
fwait
lahf
add
jne
ljmp
pop
ds
push
inc
xchg
bound
lahf
mov
cltd
popa
mov
std
mov
add
pop
mull
xor
mov
fstpt
fstl
pushf
or
std
adc
jne
xor
mov
sbb
test
xor
sbb
pusha
push
xor
mov
adc
fbstp
shrl
adc
adc
outsl
into
repnz
fcoml
pop
cs
dec
mov
cmc
cmp
ljmp
dec
xor
jb
xchg
xchg
ret
stc
loope
push
ja
sbb
rorl
cmp
movsl
ja
mov
pop
inc
not
add
and
jg
cmp
lea
push
mov
cmp
cmp
jnp
push
xlat
into
xchg
sarb
sbb
or
mov
xchg
add
cmp
imul
push
adc
jbe
lret
stc
or
lods
roll
inc
js
mov
mov
inc
ds
xchg
mov
inc
mov
sbb
pop
push
push
out
outsl
sub
xor
adcl
dec
ds
pop
or
xor
fsubs
push
adc
xor
repz
clc
pop
adc
in
push
mov
add
es
negl
fdecstp
addb
add
ja
adc
cmp
jl
xor
or
ljmp
inc
xor
push
out
xor
aam
sbb
pop
xchg
cmp
hlt
jbe,pt
xchg
rorl
arpl
sbb
mov
aas
loop
mov
pop
imul
push
clc
mov
les
mov
sub
rolb
dec
push
movsl
inc
xchg
adc
inc
and
test
in
pusha
pop
mov
mov
in
lods
hlt
pushf
cmp
sub
dec
push
repnz
dec
test
mov
jno
inc
xchg
jb
jb
inc
das
sbb
push
mov
ret
fcompl
jge
mov
xchg
pop
push
inc
inc
out
scas
push
cmp
es
out
mull
mov
add
or
into
mov
outsb
or
xchg
gs
dec
sub
test
mov
arpl
in
xchg
push
negb
xchg
mov
mov
test
dec
lahf
int
jo
mov
xchg
pop
out
mov
xor
mov
cld
je
sti
or
sbb
xchg
inc
jns
pop
push
je
inc
sbb
and
adc
jo
std
cli
add
jl
xor
mov
inc
dec
mov
into
js
pushf
insl
dec
out
lret
sub
mov
sub
mov
dec
data16
hlt
ja
pop
lea
je
xor
jns
mov
mov
add
fistpll
or
test
es
scas
xor
and
fwait
ret
xchg
adc
adc
xchg
mov
jle
xchg
and
fidivrl
jp
shl
cmpsl
sbb
in
or
cmp
test
mov
mov
in
dec
fsubrl
leave
dec
movsb
mov
shlb
fdiv
mov
loop
insb
adc
sub
loope
cmp
js
or
adc
fstpt
xchg
fwait
mov
stc
aam
std
jnp
push
xchg
loope
sbb
mov
mov
mov
cmpsb
cs
scas
dec
std
sub
ja
sub
in
movsb
sahf
pop
addb
or
sti
pandn
subl
inc
aaa
jno
ja
cmc
or
cmp
ret
fbstp
push
push
or
cmpsl
mov
lcall
and
loop
out
inc
push
or
or
mov
inc
push
mov
lret
cmp
stos
pop
adc
mov
xchg
sbb
dec
out
sub
pop
mov
ja
inc
adc
dec
ds
xchg
push
cld
fsub
test
cmp
shrl
add
rcll
cmpsl
cltd
ficoml
out
add
push
mov
jmp
aam
mov
js
push
sahf
repnz
fstl
jbe
cmp
xor
fisttpl
pop
outsl
ja
xchg
inc
jl
rol
jg
push
or
adc
std
cmpl
into
push
inc
dec
pusha
ja
sbb
mov
pop
pusha
fiadds
hlt
mov
sbb
mov
fstl
and
data16
mov
mov
inc
dec
sti
mov
or
jmp
mov
scas
adc
push
test
rclb
inc
mov
movsb
lock
pop
sub
pop
inc
jecxz
addl
lret
push
shl
stc
cmc
std
adc
out
js
and
je
fstpt
popf
notb
pop
mov
mov
jge
pop
mov
adc
sbb
das
jns
sub
and
lcall
scas
sub
adc
inc
xchg
fsubrl
xchg
ret
xor
or
xlat
inc
push
out
loop
jno
loope
subb
jbe
out
sub
fmul
stos
mov
mov
cmp
jo
das
sub
jg
mov
xchg
push
sub
pop
mov
mov
stos
movsb
js,pt
in
add
mov
mov
loop
out
rorb
es
roll
dec
lds
or
scas
dec
int3
enter
xlat
paddq
pop
pop
int3
or
movsl
and
inc
push
sarb
js
outsb
sub
pop
nop
adc
in
fwait
add
dec
sub
cli
inc
push
addr16
loopne
sub
sub
out
insb
dec
test
xchg
jo
insb
bswap
xor
mov
lret
pop
test
xor
adc
adc
push
add
outsb
and
mov
jge
pushf
cmp
and
add
sahf
pop
mov
xchg
sub
cmpsb
les
andl
sbb
sub
rcll
popf
call
out
cwtl
cwtl
dec
pop
clc
movsl
add
mov
xchg
and
call
add
xor
push
fisubl
leave
push
mov
xchg
mov
dec
add
inc
or
sahf
testl
sbb
shll
adc
ret
das
mov
dec
add
xchg
mov
pusha
cmp
test
inc
mov
cltd
add
sarb
ds
aam
push
mov
and
jmp
push
popf
mov
jnp
inc
jo
addr16
ss
mov
adc
aad
mov
push
hlt
or
xor
or
and
shlb
nop
mov
sbb
sbb
movsb
mov
and
jne
sub
jbe
sub
sbb
sbb
inc
pop
cmp
add
or
xor
ljmp
cmp
or
cli
mov
insb
push
rorl
dec
out
xor
movsb
cs
jnp
mov
hlt
inc
dec
mov
inc
adcb
popf
pushl
jbe
fwait
stos
mov
lret
dec
dec
scas
inc
inc
imul
data16
xchg
sub
incb
sbb
jp
xchg
jg
push
jmp
out
push
mov
xlat
ret
test
mov
enter
lret
xchg
inc
cmp
xchg
adc
cwtl
xchg
pop
cli
fsubrp
loope
sbb
or
pushf
setb
push
pop
sub
add
xchg
sbb
aad
sbb
dec
pop
dec
mov
push
push
dec
stos
and
mov
sub
test
outsl
ss
ds
loopne
hlt
add
adc
add
lret
mov
out
rcl
push
cld
daa
sbb
leave
sbb
popa
clc
cmp
mov
add
fdivrs
rcll
int
adc
mov
and
sub
fwait
push
outsl
aam
mov
add
mov
cs
sbb
push
mov
xchg
fcomip
push
xchg
in
push
loop
insl
dec
mov
sbb
jle
es
jmp
imul
call
stos
push
test
scas
sbb
loope
cmc
mov
shufps
cmp
ja
push
fisubrs
sub
sbb
cmc
cmp
cmc
fdivr
test
inc
adc
dec
sbb
pusha
pop
adc
lret
inc
fcom
add
ds
jns
add
xlat
lret
ret
pop
mov
cmp
shlb
sbb
aas
mov
mov
inc
adc
jb
in
xchg
lahf
pop
or
add
lods
enter
inc
mov
out
mov
insb
pop
shlb
incb
mov
lret
subb
mov
iret
pop
mov
test
ret
int
mov
rcrl
or
mov
pop
insl
popa
pop
int3
jge
fwait
ret
loope
xor
or
std
push
pop
push
sbb
xor
xchg
inc
ja
mov
push
in
and
mov
test
addb
inc
sbb
inc
iret
and
or
mov
in
cs
push
mov
xchg
adcl
cmp
cld
mov
inc
push
pop
sub
adc
ljmp
repnz
call
pop
cmp
popa
mov
mov
rolb
ret
addb
jl
cmpsl
pop
adc
inc
and
sbb
fisubl
pushf
aas
add
push
popa
pushf
inc
inc
fs
mov
cmp
dec
sbb
push
inc
mov
pop
outsb
popf
push
test
loop
jle
inc
add
jo
and
xchg
dec
add
cmp
rcrl
mov
cs
adc
and
mov
les
add
adc
adc
movsl
inc
loope
inc
adc
jnp
jb
jo
stc
imul
in
insb
fsub
xor
pushf
jl
push
rclb
mov
inc
dec
dec
ret
movsl
and
jle
sbb
js
and
xchg
mov
mov
cmp
je
add
clc
aad
rcll
jecxz
or
outsl
and
call
popa
and
das
and
jg
pop
cmp
xor
dec
mov
jle
push
jnp
repnz
dec
add
push
dec
inc
cmp
mov
and
push
lret
sbb
xchg
dec
movsl
sbb
pop
les
xlat
xchg
pop
jl
lret
pop
cmp
sti
ret
push
jnp
subl
cld
ljmp
das
es
cmp
add
iret
test
stc
sub
test
lock
push
inc
and
sub
leave
inc
ljmp
push
stc
add
fdivr
in
push
sbb
push
fdivs
int3
jge
jl
shrb
xchg
fwait
push
lods
cltd
dec
inc
jne
scas
inc
fnsave
add
and
and
pop
mov
test
out
iret
stos
jbe
mov
cmp
ret
mov
mov
fistpll
pop
pop
lahf
subb
mov
roll
mov
push
or
mov
gs
dec
rcrl
pushf
push
std
jp
dec
stc
adc
orl
mov
andl
inc
out
insl
mov
mov
mov
adc
push
or
mov
or
movsb
fldcw
lock
pop
imul
cmpsl
sbb
scas
lds
mov
xchg
xor
insl
fcmove
jo
push
pop
pop
negb
lahf
xor
xor
mov
dec
ret
fstpt
jle
inc
inc
gs
mov
jg
mov
add
mov
mov
pop
xchg
push
movsb
ret
push
inc
mov
pop
add
xchg
insb
bound
jp
or
loop
or
sub
jge
push
out
mov
sti
jmp
in
nop
cmp
rcll
pop
arpl
sub
add
stc
or
gs
jle
out
orl
cmp
imul
mov
mov
or
ds
jg
push
je
sbb
out
rclb
xchg
jmp
push
sub
mov
dec
jmp
push
lods
dec
pusha
mov
mov
and
movhps
js
popa
fnstcw
aaa
arpl
pop
mov
xor
xchg
ja
fidivs
mov
arpl
push
adc
inc
xor
and
aam
fdiv
cmpsb
xor
pop
dec
mov
dec
cltd
gs
mov
lahf
jg
dec
out
add
jnp
out
cltd
push
push
sub
add
lcall
cmp
xorl
dec
mov
leave
dec
cltd
or
inc
mov
loopne
xor
cli
dec
jo
mov
imul
xchg
inc
xchg
and
in
repnz
jmp
jle
mov
lahf
mov
cmpb
sub
add
or
cmc
push
cmp
repz
pop
jge
xchg
mov
add
push
test
and
jg
outsb
vminpd
repnz
or
jbe
mov
jecxz
sub
pop
jb
sub
imul
xor
cli
mov
push
jl
shll
shll
add
add
orb
dec
mov
adc
loop
loopne
faddl
sub
and
push
add
hlt
push
mov
and
je
loop
out
mov
add
shrl
jmp
dec
mov
icebp
cwtl
adcb
mov
aaa
inc
sub
fmulp
fistl
loopne
cmp
dec
aad
shll
scas
aad
scas
jl
sub
mov
fldl
mov
push
or
inc
cmp
jo
lret
rdtsc
adc
cmp
xchg
mov
idivl
mov
adc
add
mov
arpl
inc
dec
push
js
in
outsl
mov
mov
or
ret
mov
div
xchg
mov
xor
inc
js
and
test
push
dec
int
hlt
pop
sbbl
orb
lods
ja
cmpsb
call
ljmp
jecxz
lahf
push
lods
aad
lock
fmulp
aas
outsl
push
hlt
lea
xor
mov
loop
test
sub
mov
stos
adc
fsubrs
jae
les
std
xchg
das
pop
idivl
popf
cmp
cmp
mov
mov
sub
and
loop
das
pusha
cmpsb
jecxz
sub
xchg
gs
fcmovbe
mov
in
notb
hlt
cmpsl
xchg
in
rcrl
ds
fs
add
mov
outsl
cld
add
arpl
push
stos
and
jbe
popf
imul
sub
mov
xchg
fidivl
cmp
pop
les
push
fisttpll
xor
movsb
cmp
push
xchg
xor
popa
je
xchg
lods
mov
pop
nop
in
dec
fsubr
test
roll
movsl
jns
js
pop
lock
rol
in
jge
mov
sti
xchg
lcall
int3
stc
cwtl
je
push
or
mov
leave
push
aad
mov
scas
in
pop
dec
lds
mov
fstps
xor
push
push
pop
test
icebp
inc
mov
mov
cmpsb
stos
cwtl
sbb
cld
sti
ret
cmpsb
jle
pop
push
inc
xor
push
rclb
cli
ss
lcall
mov
mov
ds
mov
sbb
mov
jl
rclb
jo
int
mov
test
pop
push
xchg
push
mov
es
mov
pop
dec
lock
mov
je
push
xchg
ljmp
sub
loope
sti
pop
and
stos
sbb
rcr
cmp
aad
cmp
sarl
xor
daa
movsb
bnd
mov
imul
pop
pop
sbb
ret
arpl
xor
adc
add
cmp
pop
test
hlt
icebp
dec
lock
push
into
inc
loop
push
movsl
popa
pop
stos
mov
xlat
int3
cmp
mov
mov
or
rorb
mov
jo
popa
das
inc
push
jge
mov
mov
imul
pop
fs
notb
iret
jmp
pop
mov
add
mov
test
popa
lea
or
xor
shll
popf
scas
adc
mov
cwtl
xor
xor
aad
add
adc
mov
lds
mov
inc
mov
xchg
scas
sub
nop
xchg
fisubrs
mov
push
lock
dec
adc
roll
mov
adc
push
cmpsl
mov
je
sbb
push
shll
insl
cmpsb
xor
aad
arpl
sbb
in
adc
xchg
shl
mov
inc
xor
dec
int3
aas
pusha
pop
stos
mov
int3
jl
scas
and
loope
das
jmp
mov
inc
push
push
xchg
aas
push
daa
loope
outsb
add
cmp
inc
sub
stos
in
pop
xor
outsl
mov
adc
inc
sti
icebp
or
test
adc
adc
mov
mov
daa
or
jae
pop
lock
mov
dec
sub
and
xchg
out
xlat
mov
pushf
lods
mov
mov
call
fs
mov
add
or
jp
mov
fdiv
or
xchg
icebp
lds
sti
cmp
mov
inc
mov
dec
mov
sub
test
add
xor
mov
push
lcall
lcall
adc
fcmovbe
add
pop
dec
cmp
and
into
loope
dec
sahf
jb
or
movsb
dec
mov
fdiv
clc
push
xchg
mov
or
imul
lahf
xchg
and
adc
jl
cltd
mov
add
xor
xor
mov
pop
adc
fwait
and
jo
add
pop
fwait
inc
outsb
pushf
mov
mov
cmp
jg
jecxz
lock
mov
sbb
lods
testb
pop
rorl
xchg
and
sub
push
es
je
inc
sub
sahf
add
lcall
into
popf
sti
pop
xchg
mov
and
cmpsb
rcr
scas
mov
cs
pop
jle
aad
xchg
mov
ljmp
aas
sub
bound
scas
negl
inc
xor
cli
rclb
divl
daa
in
das
jae
jp
adc
mov
sbb
xrelease
ficoml
dec
addb
mov
imul
icebp
mov
insb
cmp
and
mov
lock
shr
xchg
push
in
push
jno
mov
add
xor
pop
mov
pop
fdiv
mov
cmp
daa
dec
push
shrl
add
sbbl
flds
cmp
or
subb
rclb
push
cmpsl
in
jle
pop
mov
inc
inc
insb
gs
fildll
lea
mov
stos
bound
mov
sti
or
ljmp
movsl
in
adc
sbb
dec
arpl
cmp
pop
cltd
push
mov
xlat
jle
lock
repz
inc
push
bound
sti
xchg
adc
sub
adc
jae
popf
popa
xchg
adc
add
cmp
sub
mov
shrb
lret
jno
lods
cltd
mov
aas
sub
inc
cmc
es
sbb
out
and
jg
mov
mov
in
fists
sbb
aas
push
adc
mov
inc
arpl
dec
scas
cmpsl
loop
xorb
mov
mov
jnp
sahf
xchg
add
xor
rol
sti
and
push
ljmp
adc
push
mov
or
inc
movsb
cmp
xor
jno
pop
push
jns
fildll
pop
xchg
dec
jae
data16
js
xchg
mov
or
pushf
aam
push
and
frstor
adc
push
icebp
cmp
cmp
jmp
adc
xchg
nop
icebp
lret
lods
fbld
movlps
lods
inc
stc
repnz
jle
rclb
test
popf
shll
lods
je
mov
imul
mov
mov
gs
push
repnz
insb
dec
adc
into
arpl
cmp
mov
xlat
or
iret
mov
pop
mov
xchg
inc
rcrl
push
mov
sub
xor
mov
lock
inc
rcl
mov
repnz
je
push
into
scas
scas
cmp
adc
daa
lods
js
int3
jae
mov
dec
push
frstor
pop
dec
fnsave
jne
sbb
mov
ret
jns
and
jno
push
mov
push
inc
cmp
scas
fcom
and
popa
cwtl
lods
sub
loope
mov
in
mov
insl
mov
sbb
adc
cmp
add
or
aaa
jp
inc
or
subl
jbe
popa
in
scas
pushf
inc
mov
xor
inc
sub
inc
cmp
shrl
or
movsl
dec
aam
stc
cmpsb
pop
lahf
inc
adc
push
mov
push
or
jne
mov
imul
xor
pusha
inc
mov
adc
cs
mov
sbb
inc
leave
dec
rcr
push
sbb
je
dec
lret
stc
std
sahf
loop
int
adc
xor
mov
sub
mov
push
js
nop
lds
push
xchg
sar
jnp
or
and
js
dec
loop
loope
aas
jp
xchg
cmp
mov
xchg
mov
add
mov
ret
paddsb
mov
jae
adc
addl
iret
outsl
fnstenv
mov
mov
xchg
scas
mov
call
mov
test
cli
sbb
jg
dec
pop
cmc
fnstcw
es
out
shll
push
shll
or
lcall
inc
dec
fmuls
jb
rclb
leave
mul
sbb
rcl
add
jb
or
cwtl
and
push
cmp
loope
jp
ret
or
add
in
lahf
filds
jmp
iret
movsl
data16
xor
mov
adc
mov
in
das
loopne
ljmp
insw
inc
adc
subl
add
out
test
push
dec
or
push
stos
adc
mov
add
in
hlt
push
sub
xor
xchg
into
pop
push
cmp
movsb
push
insl
lahf
or
add
cmpsb
in
lret
pusha
dec
lods
jo
xchg
cltd
xacquire
arpl
mov
pop
xchg
pop
shrb
cmpsb
mov
sti
dec
sub
cmc
inc
push
and
inc
scas
ljmp
cmp
scas
push
mov
push
inc
lret
ds
push
pop
ret
std
xor
mov
jae
jne
jno
sbb
imul
push
sub
aas
jl
lods
pop
sti
fdivl
sbb
xchg
in
mov
sbb
mov
jno
or
out
pushf
xchg
ja
loop
xchg
stos
sbb
sbb
jne
sbb
cmp
mov
mov
xchg
and
aas
or
jg
sbb
pop
sbbb
jge
lds
gs
push
in
fdivp
fwait
sub
xchg
jno
pop
inc
gs
leave
bound
dec
mov
sub
je
sbb
mov
fld
enter
pop
adc
inc
aam
mov
jle
test
in
jecxz
push
ja
lret
xor
aaa
daa
xlat
xor
xchg
sub
in
scas
pop
frstor
xchg
push
sub
adc
cmp
and
fiadds
dec
xchg
jecxz
push
mov
je
daa
jb
sar
dec
rclb
mov
sbb
xchg
bound
aas
cmpsl
mov
hlt
jp
pop
ficoms
push
push
and
jge
fstp
push
pop
insl
xor
das
in
pusha
and
mov
out
xchg
jb
pop
mov
lret
xchg
jnp
inc
add
inc
push
sbb
or
lock
std
stos
pop
xchg
pop
lcall
inc
cwtl
or
mov
data16
ss
mov
ss
ret
xchg
insl
add
push
es
push
fidivs
fs
jo
pusha
cmp
je
movsl
daa
pop
jp
push
inc
scas
inc
out
sti
jnp
xchg
cli
pop
pop
fwait
jae
out
push
or
insl
test
cltd
or
insb
enter
jle
mov
or
lret
sub
xchg
ret
push
cli
cmp
jmp
mov
stos
jb
adc
jle
xchg
mov
mov
mov
mov
lods
sbb
shrl
adc
jle
adc
hlt
mov
mov
shlb
mov
cmp
xor
ss
out
clc
stos
pop
sbb
popa
xchg
cld
jp
sub
pop
int
adc
pop
jae
push
jne
xchg
stc
cmp
mov
dec
inc
push
rorl
call
xchg
call
mov
sbb
mov
das
std
push
pop
jnp
mov
xchg
stc
jl
add
sub
les
or
or
add
push
sbb
sti
test
sub
imul
mov
mov
fstp
loope
cmpl
inc
jecxz
stc
cmp
pop
cmc
rolb
pusha
dec
es
pop
mov
xor
iret
sub
inc
pushl
fwait
out
mov
test
ss
mov
bound
jmp
in
arpl
mov
cmp
cmp
cs
cmp
push
push
cmpsl
out
imul
or
loopne
mov
push
insl
or
loope
xor
push
xor
lahf
add
dec
adc
jae
adc
inc
insl
call
aaa
aas
mov
cmp
xor
and
mov
jb
or
and
enter
dec
ja
sub
decl
jbe
ljmp
jo
test
ds
ljmp
add
sub
jge
mov
add
scas
adc
mov
pop
mov
dec
jp
sbb
pop
mov
adc
mov
int3
bound
mov
xor
push
ds
xchg
mov
sub
push
fsubrs
inc
cmp
jge
push
xlat
sbb
mov
adc
rol
decb
shrl
push
add
mov
push
adc
aas
je
xor
inc
repnz
mov
sbb
mov
imul
jne
jg
sahf
add
inc
fcomip
lea
jg
push
test
iret
sub
mov
mov
popa
aas
pop
out
xchg
pop
jl
lret
dec
mov
ret
stos
inc
sub
rclb
mov
out
sub
and
pop
fwait
sbb
mov
loope
loopne
stc
stos
scas
xor
shlb
lds
lahf
inc
jno
mov
fucom
movsb
add
lea
outsb
cwtl
adc
imulb
cmp
or
mov
fcomi
mov
es
ss
push
and
dec
sbb
dec
imul
in
pop
shll
jmp
std
scas
outsl
hlt
sbb
jg
shll
out
pop
and
cs
mov
or
mov
sbb
out
popf
inc
mov
adc
aam
lret
adc
mov
push
iret
push
ret
xchg
add
jb
mov
pop
pop
inc
int
mov
jae
push
ljmp
push
mov
jl
stc
outsb
add
outsb
jae
pop
and
es
je
sub
xchg
cltd
fimull
outsb
pop
ret
xchg
loop
into
jle
aas
adc
loop
sbb
daa
xor
and
mov
pop
movsl
sub
add
xor
push
lret
inc
cmpsl
xchg
push
push
lret
inc
imul
aas
pop
xor
into
dec
mov
dec
push
sub
hlt
scas
sub
push
mov
jbe
or
call
repz
aaa
and
xor
xchg
inc
pop
out
cli
xor
ja
icebp
jo
cmp
mov
mov
sub
ret
jg
add
dec
mov
outsb
push
test
nop
dec
popf
ss
mov
mov
scas
aam
sbb
stos
xchg
push
ljmp
push
je
add
pushf
xchg
sti
arpl
add
jg
addr16
les
rol
ficomps
repz
test
pusha
inc
mov
dec
fsubr
xlat
fisttpl
lods
ret
inc
and
sbbl
cmpsl
test
cmp
cmp
nop
or
and
xchg
cmp
aaa
rcll
cmp
imul
les
mov
and
xchg
outsl
fcmovne
inc
cvtdq2ps
add
add
cmpsl
mov
xchg
cli
add
rcrb
inc
cmpsl
xchg
and
ljmp
pusha
push
push
in
dec
mov
jno
push
adc
out
push
stos
pop
fsubrl
or
fst
mov
xchg
rclb
cmp
mov
adcl
fwait
pop
adc
les
push
fisubs
pop
fdivrl
adc
mov
push
xchg
pop
jg
sbb
xchg
mov
daa
enter
inc
xchg
jg
cmp
sbb
testl
ss
sti
inc
pop
insl
xor
and
iret
cmpsl
imul
lds
insl
in
mov
mov
mov
sbb
bound
mov
jp
bound
test
loopne
jns
fsub
out
mov
orb
lods
hlt
add
pop
das
je
jle
jecxz
fs
inc
xor
jge
adc
fcomp
outsl
pusha
mov
lea
xlat
cmp
dec
push
int
push
stos
test
test
mov
lret
outsl
hlt
mov
inc
xchg
jmp
hlt
pop
sub
sti
dec
pop
mov
push
mov
sahf
gs
mov
mov
orl
and
mov
shr
mov
mov
hlt
dec
aaa
fcmovbe
lds
sub
mov
dec
adc
outsl
xchg
fldenv
cld
adc
mov
fdivs
clc
xlat
jmp
push
mov
fisttps
mov
mov
xchg
dec
testl
rcr
callw
in
dec
cli
int
lret
adc
xor
pusha
cmpsb
insb
ss
stos
lret
and
pop
aam
clc
fisttpll
fdivl
inc
cmp
xchg
jmp
cmp
les
pop
mov
fsubl
mov
lret
dec
leave
mov
test
fists
dec
jb
sub
adc
push
jecxz
sbb
push
jne
gs
loop
mov
aaa
mov
into
sbb
in
andl
sti
mov
jnp,pt
adc
jmp
sub
call
mov
mov
sbb
movsl
in
add
cmp
rorl
xor
imul
xchg
pop
mov
inc
pop
sbb
dec
and
or
imull
nop
mov
pop
test
int
cmp
lret
mov
int3
mov
sbb
cmp
push
ret
leave
fs
pop
cmpsl
xor
xchg
mull
ljmp
mov
ljmp
lcall
out
adc
imul
sub
mov
int
push
xor
clc
xlat
lock
fwait
cmp
rol
fdiv
sbb
adc
dec
mov
ret
cld
mov
adc
stos
sbb
cmp
hlt
popf
or
push
hlt
adc
in
mov
jo
adc
int3
scas
and
jmp
mov
sbb
xor
lds
jno
cmc
adc
xor
adc
push
jbe
pushf
out
mov
divb
imul
stc
std
aad
xchg
testb
or
testb
mov
out
std
fldl
lcall
cltd
fcoms
and
movsb
ja
inc
add
pop
mov
jb
jmp
int3
ss
pusha
inc
jg
jg
xchg
mov
dec
in
sub
mov
sub
push
jp
mov
sub
roll
mov
adc
and
lret
and
in
mov
dec
jecxz
xlat
cmpsb
jg
hlt
push
scas
inc
mov
xor
jle
sub
fucomp
ds
repnz
dec
push
add
mov
xchg
cwtl
jg
andl
mov
sbb
xchg
test
pop
aaa
mov
in
add
dec
pop
mov
mov
or
mov
lods
mulb
jmp
cs
adc
sahf
loopne
stc
jmp
inc
dec
je
fs
inc
xchg
inc
lods
sub
or
fdivrs
cltd
mov
dec
outsb
dec
inc
or
lea
or
mov
ss
fdivrs
push
cs
dec
mov
lock
push
sar
adc
daa
inc
stos
xchg
lahf
mov
in
divb
aaa
xchg
stc
jne
mov
fsub
cmp
imul
ja
aas
ds
mov
inc
jmp
icebp
jb
or
lahf
mov
sub
push
nop
mov
push
jns
cmp
fistpl
mov
push
ret
test
or
push
mov
into
sub
dec
das
adc
sub
sbb
push
adc
sub
adc
daa
mov
jg
hlt
jp
daa
adc
xor
inc
mov
shl
mov
int3
xor
mov
push
daa
pop
jecxz
xor
stos
cmp
dec
pop
mov
out
xorb
jmp
iret
adc
mov
jl
or
inc
sub
and
sub
lret
out
ljmp
sbb
out
insl
in
or
adc
and
mov
sbb
out
bound
pop
mov
sub
jbe
ret
cmp
xchg
add
das
sub
add
test
jg
movsb
jb
test
fs
filds
mov
test
mov
cmp
cwtl
std
stos
sub
and
jae
ret
jmp
pop
xchg
sub
cmpb
push
repnz
stos
jp
xor
out
fsubr
loope
pop
shl
stc
into
xchg
daa
mov
mov
aaa
cmpsl
stc
repnz
shrl
xor
out
inc
or
lahf
mov
xchg
dec
xchg
sbb
add
mov
test
cld
int3
aad
jb
fiadds
movsb
bound
push
push
pop
fcompl
xchg
testl
fldt
add
in
cmpsb
cmp
add
sbb
cld
lret
sub
shlb
jae
imul
bound
mov
imull
xor
and
fcom
outsb
outsl
cmp
sbb
sbb
pop
mov
lahf
xchg
mov
mov
mov
mov
mov
pop
and
inc
hlt
jecxz
mov
mov
fcoml
mov
mov
jge
jno
cmp
fistps
outsl
repz
mov
loopne
jl
mov
insb
xchg
es
xchg
daa
push
push
mov
jb
xchg
inc
and
in
aaa
cli
mov
jecxz
dec
xor
iret
inc
ret
sub
mov
movb
in
and
cmp
dec
mov
cmp
sbb
pop
sub
push
mov
adc
jnp
lods
mov
mov
add
aam
mov
mov
ret
js
popf
iret
cmpb
mov
xor
cld
int
int
sbbl
repz
sbb
sahf
stc
cli
das
jg
loopne
bound
outsl
leavew
sti
cmc
mov
sub
push
rcll
xor
outsl
popf
shll
dec
mov
out
jge
in
jl
jns
adc
mov
fdivrp
push
loope
scas
and
pop
shll
ljmp
or
jns
xlat
js
mov
repnz
pop
sti
icebp
fisubl
es
jecxz
push
cmpsb
inc
push
xchg
push
mov
into
inc
dec
icebp
mov
test
test
sub
cwtl
mov
rcrl
jnp
les
add
add
xchg
and
mov
sahf
mov
mov
xchg
cmp
push
in
sbbl
sub
fnstcw
daa
add
js
dec
lock
shl
int3
adc
inc
dec
add
mov
push
fildll
decb
into
sub
mov
nop
mov
sahf
mov
mov
push
leave
scas
ret
cmp
dec
mov
xor
popf
inc
cmp
pop
inc
add
xorb
dec
xor
sub
xor
or
out
sub
adc
and
lahf
pop
and
jbe
jb
cmpsb
sub
or
adc
inc
clc
js
lea
sbb
jp
push
xchg
mov
cli
fwait
pop
add
je
push
aaa
jb
xchg
ds
imul
cmpsl
test
xor
inc
xchg
sbb
dec
pop
xor
jle
aaa
cmp
push
jo
test
rcrb
mov
fidivs
cld
scas
icebp
hlt
dec
iret
in
ror
addr16
xor
xchg
out
sar
adc
mov
sub
xchg
aas
insl
mov
jb
faddp
add
ja
movsl
pop
mov
lods
adc
ret
adc
push
pop
imull
xchg
movsl
push
and
adc
jmp
adcl
adc
xor
mov
fs
js
andl
mov
push
sbb
sbb
mov
mov
cmp
mov
push
popa
sub
sub
lods
pushf
sbb
lods
cs
insl
out
push
adc
xchg
fbld
inc
dec
es
aas
aas
push
out
subb
call
bound
stos
ss
mov
aaa
jmp
dec
pop
jns
stc
dec
rol
add
pop
mov
jmp
cs
sbb
out
pop
and
ds
sbb
pop
add
mov
push
fldl
jmp
fdivrl
jns
inc
rolb
ror
cmc
das
or
inc
gs
ljmp
xchg
test
cmp
jge
sbb
pop
rolb
mov
jbe
xlat
dec
xor
jl
in
xor
jno
dec
imul
cmp
adc
xor
adc
mov
adc
repnz
es
and
scas
inc
scas
movsb
sbb
loop
cltd
mov
mov
sub
or
not
mov
dec
cmp
es
and
rcr
or
jns
push
dec
leave
stos
push
lds
cmp
adc
pusha
pop
push
cli
cmp
lods
lret
or
repnz
cmp
call
mov
cmpsb
xchg
loopne
lret
jecxz
mov
ret
repz
push
inc
cmp
adc
fsubl
push
mov
rorb
arpl
jge
into
or
insl
or
pop
xor
sub
or
add
dec
xor
push
sub
sub
pop
jmp
xchg
int
arpl
mov
ret
adc
lret
mov
sub
mov
fnstenv
lock
jle
pop
test
mov
leave
jne
cmc
jb
outsb
inc
add
mov
imul
test
sub
or
pop
icebp
add
jl
push
and
popf
shll
cmp
pop
push
out
lods
js
cltd
inc
movsb
jmp
sbb
stos
jo
push
adc
mov
fisttpl
sub
arpl
add
dec
mov
jp
jo
adc
pop
xchg
pop
xor
dec
add
lea
rcl
jns
lret
and
and
push
int
call
call
push
mov
xchg
push
out
mov
pushf
pop
lods
repnz
inc
jp
inc
mov
cmp
jle
mov
aam
lcall
js
lret
fs
ja
mov
xchg
pop
sbb
mov
imull
mov
push
xchg
mov
pop
les
xchg
bound
pop
fcmovbe
aam
rcll
jmp
test
push
mov
roll
repz
arpl
ljmp
add
scas
jmp
inc
push
aam
scas
jge
call
fucomi
xchg
adc
push
xchg
shlb
std
cs
hlt
sub
and
xchg
test
pop
jbe
outsb
test
pop
inc
daa
into
cli
icebp
enter
jle
fisubrs
jbe
cld
push
popa
gs
arpl
lcall
or
or
sbb
std
cmpsl
bound
inc
or
mov
je
fildl
out
mov
push
or
cld
in
imul
adc
pop
sub
int
out
sub
mov
sub
lret
inc
nop
sbb
jnp
mov
xorl
je
mov
xchg
into
mov
mov
std
pop
daa
pop
cmc
mov
repz
cs
xchg
and
loopne
add
movaps
cltd
mov
imul
hlt
jb
faddl
aad
sbb
sbb
add
or
mov
push
sbb
lods
and
pusha
sbbl
pop
and
es
mov
xor
inc
mov
sarl
xchg
or
movsb
sbb
or
mov
mov
subl
mov
testb
inc
loopne
fcoms
cmpsb
into
out
dec
pop
mov
fs
mov
or
insw
or
in
mov
mov
movsb
ljmp
add
sub
sarb
cmp
loopne
push
movsl
daa
push
js
push
lods
cli
iret
cmp
xor
icebp
das
repnz
sbb
lret
sahf
rcr
xchg
pop
test
insl
xor
mov
jecxz
movl
lret
les
in
mov
adc
mov
inc
rol
sbb
pushf
and
outsb
into
in
lock
cwtl
push
pop
ljmp
aaa
jns
inc
shl
popa
in
xlat
cmpsb
xchg
sbb
in
sbb
dec
mov
add
sub
bound
lret
ret
xchg
test
loope
xor
dec
nop
mov
inc
inc
pop
clc
or
fsubl
fistl
push
or
inc
cmp
push
lods
push
imul
decl
bound
jl
in
ljmp
fildll
aaa
dec
pop
nop
jne
loop
popf
cmp
sub
mov
pushf
mov
dec
bnd
xchg
cmp
aas
movsb
and
rcll
outsb
sub
adc
pop
out
pop
sub
in
pop
adc
lret
mov
call
sub
cmp
cmpsl
push
xchg
sbb
xchg
xor
xchg
arpl
inc
cmp
dec
ret
push
cmp
pop
adc
and
sub
fisubrl
cmp
das
sar
insb
push
hlt
jl
add
int
add
outsl
mov
adc
filds
sbb
insb
sbb
push
inc
es
fiadds
lret
ss
push
mov
int3
add
sbb
sub
js
xchg
cmp
push
cmpsb
pop
outsb
dec
jle
lea
in
inc
sahf
xchg
pop
in
in
movl
pop
loope
int
iret
imul
incl
shl
xchg
sub
aam
cwtl
pop
les
lret
pop
mov
add
and
push
xor
xor
sub
mov
jns
sbb
imul
icebp
in
push
repz
cltd
sub
data16
mov
push
ljmp
xor
push
cmp
or
pop
ret
incl
scas
sbbl
cwtl
aas
pusha
fwait
pop
cmc
test
add
pop
inc
jmp
mov
lret
scas
pop
mov
icebp
sub
lcall
cmovo
lods
cld
jnp
and
or
add
pop
xor
cld
mov
fcoml
test
int
sbb
jp
push
lahf
fistps
add
jle
xchg
cs
adc
xor
std
imul
cmpb
push
mov
std
sti
in
add
aas
inc
stc
es
add
outsb
mov
pop
sbbl
cwtl
flds
xchg
push
xor
cmp
int
ds
add
lock
jle
lods
pushf
add
xor
jns
stos
sub
jno
out
and
cmp
icebp
cmpb
pop
xchg
jb
lock
mov
cmc
add
mov
imul
or
hlt
inc
mov
sub
je
fmuls
imul
stos
push
mov
xor
movsl
mov
or
pop
imul
push
jmp
fnsetpm(287
sub
nop
arpl
jns
push
push
pop
out
or
mov
inc
cmp
adc
hlt
adc
pop
roll
inc
out
cli
xlat
fnstcw
mov
cwtl
adcb
sarl
cmp
js
xor
jmp
sub
mov
dec
cmp
pop
jb
iret
push
add
jge
or
fisubrl
test
les
cmp
dec
jns
cmp
ja
stc
test
xchg
xorl
cmp
int
lahf
cmpsb
adc
mov
pop
mov
stos
adc
pop
mov
push
ljmp
xchg
frstor
and
popa
loop
or
xor
mov
imul
adc
jno
arpl
jge
xlat
int3
add
fisubrs
stos
push
cmp
imul
rclb
jnp
adc
arpl
xchg
and
addb
imul
jl
or
lock
leave
enter
sbb
add
int3
repz
sbb
dec
es
dec
shr
scas
scas
pusha
lock
cmp
pop
inc
ret
jmp
cwtl
stc
jae
out
pop
jg
or
or
test
fdivr
int
xorl
sub
push
lcall
mov
push
sbb
xlat
add
or
loope
xor
scas
outsl
movsl
push
subl
sbb
pusha
xchg
cmpsl
jns
dec
icebp
in
jnp
jge
xlat
shrb
adc
hlt
sti
add
push
mov
adc
lds
sub
loopne
adc
fstpl
lcall
ljmp
aas
mov
jb
aaa
jo
outsb
icebp
adc
test
pop
movsb
lahf
in
cmp
xor
fnstcw
sahf
subb
clc
fbstp
ja
jecxz
enter
mov
test
test
dec
scas
jp
es
xchg
pop
fs
inc
scas
sarb
loope
mov
jle
in
and
stc
in
cmpsb
push
pop
repz
jnp
leave
nop
dec
jle
mov
push
mov
lret
rorb
xchg
scas
sub
cmp
dec
xor
inc
inc
out
lahf
repnz
bound
dec
aas
mulb
in
hlt
out
xor
xchg
dec
jbe
ret
mov
icebp
and
sbb
jp
ds
es
sbb
stos
stos
sub
or
lds
push
inc
jb
push
lcall
andb
jns
cwtl
imul
insl
fdivrl
cmpsb
daa
cs
xor
cmp
jne
and
mov
imul
xchg
cmp
lds
xchg
das
stc
jnp
fucomip
repz
movsb
ret
out
es
pop
push
into
push
add
push
fadd
loopne
ds
ret
adc
cmp
jb
adc
mov
loopne
mov
negl
push
or
pop
or
xchg
jge,pt
jmp
pop
dec
insl
loop
and
nop
rorb
scas
test
in
shl
mov
in
sbb
xchg
insl
xchg
xchg
ljmp
outsl
ljmp
xchg
pop
xorl
jle
pop
fistps
imul
push
push
repnz
arpl
xchg
push
movsb
ret
cwtl
dec
repnz
adc
push
pop
in
imull
jle
sub
pop
sarl
mov
insl
lret
xor
pushf
and
add
popf
test
arpl
jbe
inc
cld
imul
xor
cmc
dec
out
jnp
cmp
and
mov
pop
jae
sbb
mov
fwait
jo
push
and
mov
test
push
mov
jno
shll
mov
test
cltd
mov
mov
sbb
cmpsb
fistpll
xor
ret
cmp
jno
cli
ljmp
inc
or
icebp
loop
jno
xor
roll
xor
roll
push
dec
push
inc
dec
in
xor
shrb
pop
mov
bound
adc
push
lock
daa
test
loope
xchg
sbb
call
jno
inc
pop
sub
ret
and
and
xchg
add
adc
rol
mov
pop
aas
insl
dec
rorb
mov
inc
out
out
pushf
mov
push
fldcw
adc
pop
and
jns
mov
jmp
push
iret
mov
add
aad
xorb
or
loop
add
and
mov
iret
lret
mov
mov
sub
dec
dec
sub
lret
sti
cwtl
cmp
in
jne
lea
sbb
sbb
pushf
add
push
test
test
lret
mov
cmp
dec
test
fwait
dec
cmp
xor
xchg
fists
sub
push
jge
push
stc
inc
mov
push
cs
pop
dec
scas
mov
fwait
and
cltd
adc
push
dec
mov
je
mov
lret
stc
pop
arpl
in
mov
push
sub
xor
inc
push
or
xchg
add
es
fidivrl
xchg
xor
and
mov
enter
popa
in
repnz
jae
lds
push
dec
mov
test
jo
repz
imul
dec
mov
or
cmp
repz
mov
rcrl
int3
in
push
lds
into
push
imul
inc
xor
mov
cld
lret
fdiv
xor
dec
sub
lds
sahf
mov
sub
jns
popf
and
xchg
jns
cmpsl
sbb
subl
outsl
inc
lock
out
in
into
lds
gs
sahf
rorl
incl
call
cmp
inc
test
lret
pop
adc
dec
scas
outsl
fmul
pop
or
add
push
sti
pop
data16
xchg
repz
mov
out
test
mov
rcrl
pop
pop
and
push
popf
fisubl
cltd
mov
movsb
decb
shrb
subb
es
push
js
push
clc
sbb
jle
notl
push
ret
aaa
pop
inc
cmpsb
add
lock
stc
repz
push
sbb
outsb
xor
adc
shlw
jmp
mov
dec
dec
mov
push
jge
jl
jbe
sbb
dec
lret
push
clc
cmp
ljmp
pop
outsb
lods
pop
adc
dec
sub
ficoml
insb
sbb
xchg
xchg
scas
pop
cmpsl
movsl
or
sub
and
arpl
jnp
fnstenv
cs
jb
popa
andb
xor
mov
push
or
insl
cmp
or
jmp
sti
inc
pop
add
dec
xlat
movsb
or
cwtl
cli
push
and
cmpsl
movsl
insl
mov
test
inc
roll
or
xor
sbb
icebp
cmp
fnstenv
lcall
shlb
dec
mov
hlt
outsl
adc
jns
lret
pop
in
adc
jne
xchg
push
cmp
cld
mov
insb
fs
mov
addb
push
pop
pop
mov
shl
xlat
cld
fisttpl
dec
mov
cmpsb
stos
repnz
push
sahf
je
push
lret
icebp
ret
std
in
and
mov
or
sbb
insl
fsubl
add
pushf
inc
xor
ja
cmpl
jns
adc
xor
add
and
mov
nop
dec
sarb
xlat
jle
push
dec
pop
push
mov
sbb
cli
cmp
xchg
std
mov
xor
or
push
mov
inc
xor
add
lahf
xchg
mov
sbb
subl
push
mov
push
mov
ret
dec
test
mov
dec
idivb
xchg
sbb
jno
jmp
mov
stc
frstor
scas
outsb
outsl
mov
adc
dec
sub
sbb
jecxz
add
sbb
sub
lahf
mov
push
test
test
stos
xor
js
jmp
and
and
adc
frndint
jge
add
xchg
jp
into
jno
dec
inc
andl
push
push
pop
or
scas
push
lcall
dec
in
stc
inc
sub
xchg
arpl
adc
lea
ljmp
aas
push
sbb
leave
pop
adc
and
mov
cmp
push
movsb
xor
test
cwtl
push
jp
dec
pop
subl
add
hlt
popa
pop
sub
mov
xchg
xchg
mov
fiadds
mov
js
push
in
add
lods
adcb
in
mov
lods
adc
scas
cwtl
or
push
xchg
jmp
mov
inc
or
cmpsl
pop
int3
and
xlat
lahf
pop
inc
mov
xchg
out
aas
inc
mov
in
lahf
sar
lods
lods
fdivrs
dec
mov
test
fs
adc
mov
pop
cwtl
es
jle
sub
cmpsl
nop
adc
je
pop
xor
pop
das
add
clc
inc
cs
pusha
movsb
sub
inc
or
int3
ja
out
jg
pop
scas
pop
les
xchg
jge
mov
movsb
addr16
pop
jecxz
xor
mov
pop
andl
jle
cwtl
lahf
cmpsb
push
lods
cs
loop
shll
mov
mov
mov
lock
xor
jns
cmpsb
push
adc
xchg
add
call
push
test
cmp
jns
pop
clc
aaa
je
jmp
je
mov
jmp
push
xchg
adc
adc
aas
mov
push
and
test
jmp
pop
hlt
push
test
leave
jp
sbb
mov
test
xor
jae
fstpt
lds
push
sub
xchg
sub
aam
push
fildll
sti
pusha
into
mov
push
push
adcl
jns
pop
lods
fdiv
pop
fs
dec
out
dec
adc
add
cltd
repnz
mov
imul
mov
sbbl
mov
xor
es
aaa
mov
cmpsl
les
ja
mov
ss
push
std
xchg
xor
xor
cs
dec
fnsave
gs
xchg
and
out
inc
insl
pushf
mov
aaa
addr16
push
mov
sarb
jle
sbb
ss
into
xor
imul
or
ret
adc
daa
jne
stos
pop
sub
aam
push
mov
pop
aas
aas
data16
pop
loopne
ror
lret
inc
inc
mov
sbb
mov
or
sbbb
in
out
jp
out
in
insl
movsb
mov
sbbb
dec
pusha
or
test
outsb
daa
movsb
push
mov
jae
jae
mov
lock
imul
test
jl
jne
les
lret
jno
sbb
js
push
pop
push
aaa
xor
in
push
push
imul
in
mov
xor
adc
sahf
cmp
scas
shll
mov
cwtl
or
insl
outsl
pushf
adc
out
je
mov
into
mov
addb
repnz
sbb
pushf
movsl
pop
add
aad
adc
repz
or
pop
push
pusha
or
pop
dec
cmp
dec
sub
into
mov
cmpsl
jle
inc
jne
shrl
mov
popa
pop
loope
mov
iret
out
dec
ljmp
sub
movsl
adc
jns
arpl
repnz
or
jnp
push
mov
mov
cli
mov
add
cli
jp
bswap
lods
mov
jmp
out
push
xchg
roll
in
test
pop
mov
xlat
dec
das
dec
in
pop
mov
xor
push
pop
dec
out
int3
aas
cltd
jl
lods
aam
push
sbb
outsb
sub
xchg
sbb
inc
jbe
or
and
pop
dec
pop
sub
pop
addr16
xchg
cli
sbb
dec
popa
push
xchg
jl
xor
jg
sbb
int3
sbb
pusha
sub
movsl
ja
lds
cmpsl
adc
and
aam
cmp
jg
inc
jne
nop
inc
imul
cmp
lock
leave
dec
dec
flds
pop
fidivrs
iret
dec
jl
xchg
mov
repnz
push
mov
enter
dec
stos
stos
inc
add
cwtl
rorl
push
popf
dec
push
jge
cmp
sbb
push
push
xor
jne
roll
int3
push
pop
cltd
imul
xor
scas
outsb
pop
repz
push
push
lock
es
jle
test
sbb
call
lock
cmp
jbe
and
aam
adc
dec
aas
out
mov
fwait
sarl
je
ret
lret
in
js
sbb
adc
and
repz
jo
fldl2e
mov
or
or
lds
imul
sub
mov
push
sub
imul
or
and
loopne
inc
cmpb
outsl
jmp
adc
xor
lcall
adc
int
movsb
sub
xchg
mov
ljmp
ret
loope
mov
data16
sub
sbb
arpl
neg
addb
mov
insl
dec
sahf
xor
nop
ljmp
lret
cmpsl
scas
scas
divl
or
out
and
data16
scas
int3
pop
in
dec
les
mov
andb
cltd
in
push
orb
fcoml
or
push
stc
lret
sub
sub
jecxz
fs
cmp
aas
sub
out
movsl
stc
popa
mov
xchg
sbb
pop
push
fmuls
and
stc
inc
fisubrl
inc
xor
loope
test
pop
ljmp
stos
and
or
pop
jmp
pop
subl
add
adc
or
push
cli
bound
lods
mov
in
enter
mov
addr16
call
inc
mov
and
aaa
xchg
out
jae
cs
call
sar
add
out
inc
and
stos
pop
loopne
sub
xchg
dec
pop
push
inc
sub
pushf
loope
push
loopne
inc
xchg
mov
pop
ret
sbb
adc
into
ret
or
adc
cld
pop
xor
fwait
into
xchg
fdivs
pop
sub
test
icebp
mov
cmp
mov
inc
and
or
mov
sbb
pop
pop
test
sub
push
mov
ljmp
xchg
mov
inc
out
adc
add
pushf
lds
push
sub
je
sub
jb
cmp
je
pop
inc
and
jp
cwtl
fdivl
lret
inc
mov
lret
xchg
fwait
dec
fsubrs
adc
sbb
cmp
jo
jmp
cmc
stos
repnz
pop
dec
arpl
push
inc
popf
sahf
outsb
std
inc
push
lahf
mov
int
enter
jo
jne
sub
cmp
pop
negl
jp
mov
fimull
dec
hlt
and
aam
int3
push
in
pop
push
xlat
cmc
loopne
mov
sbb
sub
stos
push
lret
xchg
mov
sar
push
pop
xchg
std
std
pop
pop
mov
and
and
ret
mov
xchg
mov
dec
xchg
xchg
and
repnz
aad
sbb
jl
scas
push
dec
sahf
inc
xlat
inc
push
imul
frstor
or
aad
sub
xor
imulb
jns
divb
cli
aad
aad
xchg
lcall
or
std
push
icebp
pop
hlt
jbe
hlt
and
jno
iret
mov
addl
jl
xchg
hlt
scas
inc
daa
stc
repz
mov
imul
pop
in
push
and
lret
cmp
sbb
lods
push
add
or
in
popf
mov
xchg
or
inc
mov
add
fnsave
leave
push
ja
jae
sbb
fcomps
mov
gs
fs
cmp
popa
in
inc
hlt
js
mov
stc
dec
and
mov
pop
bound
ss
mov
daa
ret
aam
test
ret
in
xor
inc
sbb
out
xchg
xor
addr16
push
fimuls
in
and
push
insb
xchg
movsb
mov
lock
mov
das
pusha
stos
mov
loopne
out
out
pop
je
pop
rep
pop
inc
jns
rolb
jl
push
add
mov
fs
fisubrs
aaa
pop
setle
das
stc
jle
xor
mov
cli
lock
sbb
outsb
mov
mov
out
sti
in
adc
sbb
xchg
loopne
pop
outsb
test
ds
mov
pop
xchg
pushf
ss
into
xchg
xchg
jbe
add
lahf
and
and
lds
into
inc
pop
jns
xchg
loopne
push
xchg
shll
testb
xor
lods
shr
imul
and
mov
in
shll
xchg
jns,pt
movsb
js
xor
push
data16
or
pop
xchg
adc
jne
cmp
rorl
lcall
pop
jbe
mov
and
lret
fs
inc
jns
fmuls
out
imul
enter
xor
push
push
cs
int3
mov
inc
push
das
xchg
sub
mov
fdiv
sbb
icebp
outsl
popa
out
sub
sbb
in
mov
jne
pop
mov
jne
cmc
lahf
xor
mov
push
in
mov
inc
in
push
loopne
rcll
or
and
cli
xlat
dec
cltd
dec
xlat
data16
leave
fstpt
adc
in
into
bound
mov
xor
outsb
in
or
xor
jb
js
push
mov
popa
push
and
fwait
std
sub
shlb
out
pushf
mov
and
push
aas
jl
mov
mov
fisubl
fidivs
sbb
cmp
or
fs
inc
bound
pop
inc
cmp
xor
mov
xchg
xor
dec
lods
add
jbe
add
faddl
mov
dec
stos
gs
xlat
push
mov
mov
and
aas
cmp
lret
jo
popf
adc
add
into
jnp
mov
or
mov
and
jno
dec
inc
pop
mov
cmp
sahf
insb
fs
mov
mov
or
cld
xchg
arpl
mov
addb
adc
arpl
add
out
sahf
inc
or
adc
add
jae
xlat
and
dec
pop
enter
cmp
cmpsb
lcall
lods
out
sbb
add
xchg
pop
scas
mov
subl
jecxz
fdivl
lahf
jnp
sub
insb
fstl
mov
test
push
add
mov
or
lret
xchg
rcrl
mov
inc
dec
xchg
fisubl
xlat
sbb
mov
outsb
jmp
adc
dec
mov
scas
fs
and
fsubrl
shrb
jnp
add
scas
loope
adc
stc
cmc
jbe
test
imul
xchg
pop
inc
test
stc
popf
call
es
push
sti
aam
in
xor
andb
dec
dec
jp
push
shlb
jg
sbb
daa
push
and
into
outsb
or
lds
push
pop
or
mov
or
add
cmpsb
pmuludq
mov
fwait
mov
adc
mov
pop
fs
lods
test
and
mov
fwait
xchg
or
stos
pop
ja
jecxz
fadds
fisttpll
lock
mov
and
mov
mov
mov
mov
jge
xor
push
ret
xchg
fimuls
loop
ljmp
mov
std
xlat
int
sbb
in
and
das
pop
clc
pop
cmp
fwait
imul
clc
test
das
rorb
iret
je
jo
fisttpl
lods
std
cmp
bnd
and
sbb
dec
jmp
enter
movsl
jmp
mov
add
aam
jns
fistl
mov
rorb
stos
pop
and
xor
aas
test
mov
out
fldenv
jecxz
ficoms
insb
push
lods
fiadds
xor
mov
push
movl
popf
call
outsb
andb
call
sbb
popf
jnp
adc
pushf
pop
inc
sti
pop
in
addr16
xchg
inc
into
cld
mov
adc
dec
aaa
movsb
repnz
mov
or
dec
push
xchg
dec
adc
jmp
mov
out
cs
inc
enterw
cmpsl
push
push
ds
adc
jae
xor
jae
outsl
test
ret
call
sbb
pop
sahf
lods
enter
dec
add
sub
clc
jecxz
xor
aaa
jge
test
add
std
or
mov
lahf
sub
cmp
movsl
test
int
mov
test
push
mov
inc
xlat
jmp
cmpsl
jl
js
push
ss
testb
cmp
fmulp
shl
into
les
and
inc
xchg
fucom
dec
mov
or
add
mov
imul
sti
fldt
sbb
xorl
inc
clc
push
aaa
sbb
mov
jno
push
lods
xchg
jl
int
lods
jl
hlt
test
int
dec
pop
cmp
jg
adc
roll
aad
mov
cli
xor
pop
lock
lcall
sbb
lea
jp
popf
loop
mov
lret
cmp
shr
push
ja
dec
add
jno
cmpsl
sbb
inc
push
fisttpl
sbb
je
leave
int3
scas
ret
fcompl
shll
add
pop
pop
push
jb
pop
fnstcw
xchg
pop
leave
jp
adc
inc
mov
xchg
add
mov
mov
cmp
xchg
insl
orl
pop
enter
sub
xchg
rcl
sbb
repz
and
inc
mov
mov
mov
add
mov
jne
jns
out
lahf
cld
notl
addb
xchg
out
repnz
in
xor
pop
jne
repz
mov
fstp
out
stc
sbb
jecxz
mov
push
add
enter
subl
fwait
in
lret
pop
adc
or
subb
mov
sbb
sub
shlb
lea
push
jb
jp
orl
dec
cltd
lds
pop
pushf
sub
rorb
pop
fdivrl
sbb
jmp
icebp
mov
sahf
mov
scas
push
cltd
ss
setnp
lea
imul
lahf
and
sbb
or
lods
iret
xchg
pop
sbb
xchg
or
jb
psubusb
mov
jl
test
pop
inc
shll
inc
test
xchg
sbb
xor
loopne
addr16
jmp
rcrb
shlb
outsb
push
cmc
mov
mov
test
sub
rcll
fdivr
rcl
or
push
cmpsl
aaa
dec
gs
cli
shrb
nop
stos
fcomps
repz
xor
mov
fldl
xchg
xor
dec
push
fucomip
adcb
add
nop
cmp
pop
repz
lock
stos
je
mov
ret
pop
aam
lcall
xor
push
xchg
mov
sbb
iret
insl
or
mov
pusha
xchg
sub
sub
loop
aam
inc
in
repz
sbb
or
or
lock
pop
or
xor
and
and
jmp
out
fmuls
popf
call
fs
mov
dec
test
decl
sub
pop
out
lahf
lea
out
or
dec
jo
shll
das
cmp
and
je
ljmp
add
jno
jbe
movsb
dec
dec
enter
inc
js
add
sub
gs
mov
jle
lods
jb
mov
lods
into
sbb
xor
mov
fwait
add
rcr
popa
pop
lods
pop
out
imul
xchg
data16
inc
aam
mov
mov
adc
mov
repz
movsl
pop
sahf
cmp
xchg
xor
pop
mul
std
cmp
data16
rcrb
in
xor
xchg
jne
nop
loopne
add
push
mov
jmp
jge
int
sbb
jbe
mov
xchg
sub
in
xor
mov
or
or
push
repnz
pop
pop
pop
sbb
push
pop
je
scas
hlt
mov
jp
loopne
sar
fdivrl
xor
inc
mov
push
test
and
jl
xchg
sbb
ret
or
push
jle
add
imul
add
mov
mov
into
scas
rorb
lcall
dec
into
sbb
adc
and
mov
fistps
xchg
pushf
push
xchg
cmpsl
mov
dec
test
rclb
adc
push
vmulps
out
jbe
mov
jmp
and
xchg
inc
addb
dec
clc
addr16
xor
fidivrs
dec
push
pusha
inc
cmpsl
lods
push
and
bound
loopne
into
bound
xor
jecxz
lret
inc
fmulp
mov
lods
rcrb
dec
add
sbb
and
jns
xchg
jbe
xchg
int
lret
int
cld
lcall
cmp
jmp
jne
aaa
div
adc
cltd
push
fcomps
dec
mov
andb
mov
js
mov
sub
gs
aam
sub
es
push
popf
adc
xor
gs
jbe
das
dec
jp
mov
sbb
sahf
mov
inc
pushf
ret
jne
rclb
daa
and
cmp
inc
dec
mov
sbb
aad
repz
nop
cmpb
adc
stos
add
xor
lahf
mov
lcall
inc
insl
dec
add
shlb
rcrl
or
dec
cmpsl
dec
jecxz
jmp
adc
mov
fistpll
stc
jnp
dec
test
xor
es
xor
pop
rcll
shrl
dec
xchg
popa
test
jns
aam
aad
fiadds
jae
jb
jg
and
dec
adc
xchg
adcb
imul
outsb
pop
jne
xchg
dec
mov
push
inc
pop
dec
fcoml
js
stos
mov
iret
in
mov
shlb
inc
or
inc
push
mov
adc
int
push
cmc
daa
bound
push
push
inc
cli
cmpsl
das
int
loop
lret
daa
dec
mov
out
adc
icebp
mov
dec
int
cld
mov
jbe
aas
fwait
adcb
outsl
scas
jmp
divb
mov
lods
test
add
lahf
cmp
or
bound
outsb
sarl
cmp
jecxz
scas
pop
shlb
shl
fisttpll
movsl
mov
int3
test
push
adc
mov
mov
xchg
and
out
je
icebp
add
mov
jmp
jb
je
xchg
mov
xlat
fadds
jle
stos
jmp
fldenv
shll
scas
push
add
xchg
cltd
out
fwait
leave
adc
adc
add
mov
iret
lret
jecxz
adc
ljmp
movsb
movb
insl
and
lret
push
dec
ss
cmp
mov
loopne
ja
mov
ja
sub
popf
pop
mov
cld
hlt
rorb
push
es
cmp
mov
add
xchg
inc
cmp
iret
dec
mov
adc
incb
jns
xor
les
lock
push
movsb
mov
in
xchg
dec
xchg
and
sub
ljmp
mov
cltd
rcrl
jle
jb
mov
pop
mov
push
xchg
lcall
dec
and
loopne
pop
addl
jnp
in
into
popf
sbb
sti
je
and
aas
ss
test
fsubrl
in
lods
sbb
les
push
sbb
pop
nop
outsb
cmp
pop
sbb
sub
push
sub
jmp
mov
outsl
sbb
xchg
lods
ficoml
fbld
arpl
push
movsl
cli
cmp
mov
incl
fistps
movsb
dec
mov
push
imul
jbe
push
jno
pop
pushf
xchg
rcr
mov
mov
das
cmp
xchg
dec
popa
jbe
pop
add
xchg
adc
push
dec
std
ret
add
inc
les
into
inc
test
cmpsl
shl
or
idivb
jle,pn
inc
lahf
sub
lahf
xchg
sahf
mov
inc
sbb
dec
xchg
push
int
dec
movsb
jne
outsb
inc
add
nop
out
push
sahf
xor
fbstp
repnz
outsl
and
and
xor
imul
and
sbb
xlat
dec
fs
roll
loopne
addb
add
add
cmp
sub
sti
sub
add
and
cmp
ljmp
push
stos
out
inc
fisubl
sbb
push
xchg
push
adc
rcl
mov
loope
xor
and
sub
mov
adc
cmp
outsb
mov
push
and
fwait
push
pop
imul
lods
into
insb
dec
push
imul
push
cli
jb
ret
insl
mov
nop
aad
push
or
inc
cmpsb
jb
call
pop
clc
jns
shlb
mov
ret
popa
pop
fnsave
inc
push
dec
cli
or
lcall
xchg
cmp
repz
jmp
popa
jne
lret
outsl
inc
aam
adc
mov
lcall
repz
or
mov
in
sbb
dec
test
ljmp
pop
add
jne
jne
iret
jbe
movsl
lods
push
xor
or
test
inc
dec
mov
xchg
fsubrs
cld
mov
sbb
cwtl
mov
aaa
add
loopne
loope
dec
popa
and
inc
push
add
pop
push
jg
jp
mov
inc
nop
lods
aam
int3
cld
in
xchg
xchg
cltd
push
ss
repnz
loop
pop
scas
aaa
cwtl
jecxz
jp
test
and
fcoml
jo
jmp
daa
test
pop
cltd
pop
push
sub
push
lahf
into
jecxz
mov
or
mov
xchg
push
sub
pop
xor
test
insl
and
bound
sbb
push
xchg
mov
jns
lock
mov
jp
pop
pop
imul
andl
aam
loop
aad
xchg
gs
jl
cmp
mov
je
rclb
shll
mov
adc
movsl
adc
dec
repnz
add
ret
xchg
dec
out
or
mov
push
mov
inc
sub
adc
and
jp
movsb
and
dec
cmc
mov
mov
mov
xchg
iret
sub
decb
cmp
aam
sbb
mov
insl
pop
push
mov
sahf
cmpb
jg
les
leave
cmp
movzwl
mov
lock
dec
lods
cmp
jle
mov
push
push
push
mov
inc
or
shl
es
mov
jle
imul
cmp
xor
add
adc
iret
ret
pop
push
adc
sub
daa
cmp
popa
lahf
push
mov
inc
cmp
js
push
adc
jmp
jnp
lret
cmp
movb
jecxz
cmpsl
sbb
xchg
movsl
adc
jmp
jmp
xor
mov
sub
outsl
lret
sub
inc
and
xor
fisttpll
fcomps
cmp
cltd
and
cmp
jnp
popa
aaa
popf
ljmp
push
cmp
sub
mov
xchg
xor
aad
or
stc
mov
sub
adc
xchg
in
imul
dec
enter
loop
pop
or
std
hlt
jno
insl
in
js
ds
imul
xor
and
xor
mov
js
sbb
xchg
test
pop
mov
outsb
popf
dec
sbb
lahf
das
cs
mov
fsubp
gs
jle
repnz
sarb
push
aas
xor
out
jl
ret
dec
mov
pop
xor
stc
icebp
cmp
mov
adc
test
cld
stos
xchg
cmp
pop
adcb
rcll
pop
mov
adc
test
and
cmc
mov
pop
ljmp
xor
dec
movsl
or
pushf
dec
aad
fdiv
lcall
push
jmp
sub
movsl
lahf
and
test
shl
daa
fiaddl
cli
sbb
mov
inc
push
dec
or
jp
imul
jo
cmp
pop
xlat
aam
mov
jb
push
dec
xor
into
js
mov
xor
sar
push
movsl
bound
es
jp
fisttpll
sub
dec
xor
inc
push
mov
pop
mov
xchg
test
fidivl
insb
stos
and
mov
cltd
cmp
stc
sub
add
or
imul
push
pushf
sub
pop
cmp
dec
outsl
pop
loop
stc
and
push
stos
rorb
push
imul
push
ja
loope
cmp
jp
movsl
inc
inc
mov
and
outsl
imul
insb
add
sbb
js
in
pop
mov
xchg
imull
xchg
loopne
in
xor
movsl
xor
mov
rclb
mov
add
cltd
jnp
nop
add
mov
xchg
xchg
into
and
shlb
xchg
cld
divl
movsl
push
xchg
stos
jns
xchg
mov
insl
sbb
fsubr
arpl
ja
dec
ret
fdivp
xorb
sarb
aas
es
pushf
dec
inc
sahf
or
cmp
cmp
xchg
or
rolb
push
sub
dec
mov
xor
fincstp
out
je
pop
mov
lods
inc
cmp
lcall
pop
enter
stos
sbb
sub
lret
icebp
fsubrs
ret
push
lods
xchg
repnz
sbb
xor
clc
sbb
ljmp
pop
stos
xor
sbb
push
or
and
aas
loop
sub
aaa
rcrl
add
cmpsb
fistpll
sub
ror
push
popa
scas
fdivl
pop
popa
mov
inc
lds
push
and
les
xor
cwtl
or
cli
ljmp
cwtl
adc
sub
lret
jne
mov
sub
sbb
fstpt
sbb
jmp
push
dec
idivb
sarl
mov
push
mov
inc
mov
sub
std
push
adc
mov
xchg
push
pop
push
adc
in
mov
enter
sub
jnp
inc
push
popf
mov
mov
xchg
jne,pt
pusha
or
scas
jmp
pushf
cmpsl
mov
js
mov
out
mull
push
and
add
push
jns
popa
cmp
mov
inc
sbb
loopne
rclb
bound
imul
mov
pop
pop
xchg
pop
xchg
stc
shlb
xor
mov
scas
mov
inc
fnstsw
lea
pop
stos
test
adc
jns
mov
inc
ds
aam
xchg
in
mov
push
pop
jns
xor
fstp
sbb
sbb
jb
in
lock
push
cmp
push
mov
push
ds
add
movsb
inc
imul
jae
xchg
stos
test
dec
sti
inc
or
mov
in
mov
xor
add
adc
lods
pop
je
dec
pop
clc
jae
push
addr16
inc
adc
sub
adc
dec
sub
mov
bound
jno
sahf
sub
mov
jne
cwtl
push
mov
push
push
cmp
pop
xor
and
fidivs
sub
stc
loop
stos
fisttpll
aam
stos
daa
mov
or
or
dec
shr
cld
adc
andb
and
mov
mov
push
or
xor
cmp
mov
pop
fdivs
ss
test
out
js
mov
int3
adc
fcompl
int3
in
sbb
aad
pop
out
add
push
sbb
jae
cmp
int
fsubrs
in
jle
mov
imul
iret
mov
mov
addr16
data16
pop
fisttpll
mov
cmc
adc
orl
add
fistl
push
add
push
es
not
or
sti
nop
dec
adc
xchg
pop
adc
fidivrl
call
sub
arpl
fcoms
mov
loope
sub
in
daa
orb
movsb
and
lock
jbe
cmpsl
push
mov
jle
nop
push
fdivs
mov
inc
mov
notl
out
mov
or
fbld
cmc
mov
and
sahf
lcall
inc
jle
add
adc
dec
into
push
sbb
add
imul
popf
add
leave
fimuls
cmp
dec
clc
int3
or
fldt
mov
insl
fistpl
fdivl
xor
cmpsl
lods
inc
das
or
test
adc
jbe
mov
cmp
je
dec
shl
and
cwtl
push
jbe
adc
xor
jo
xor
out
mov
gs
sahf
xor
movsl
cmp
es
loop
xchg
xor
pop
xor
and
push
sbb
sub
icebp
out
dec
xor
push
lods
jo
push
nop
pop
in
mov
push
arpl
popl
test
nop
fwait
adc
clc
cmp
push
push
and
push
push
adc
aaa
andl
mov
sbb
push
in
fsubrs
repz
jne
jns
push
andl
pop
hlt
mov
negw
jne
push
mov
jge
cmpsl
inc
sbb
es
mov
cs
mov
push
sar
js
addr16
divl
mov
jnp
pop
leave
js
lea
ja
mov
mov
clc
push
add
das
insb
lahf
adc
fstl
cs
stos
sbb
out
subl
ja
and
out
mov
xchg
mov
sti
cwtl
sbb
leave
and
adc
add
mov
repz
stc
int
or
sub
sub
repz
push
lret
or
iret
cmp
jecxz
inc
mov
insl
add
jle
adc
pop
sub
inc
inc
outsb
mov
inc
lret
fdivl
sbb
sti
dec
loop
lods
xor
mov
movl
pop
xorb
add
push
out
ds
das
and
jecxz
shll
loope
mov
push
fidivrl
dec
cmp
sbb
add
mov
adc
loope
mov
jbe
lea
and
xor
add
pop
out
ja
jne
ja
sub
imul
adc
outsl
dec
adc
dec
jg
ja
and
jnp
popf
xchg
pusha
mov
sahf
mov
aas
loope
lcall
fisubrl
fnstsw
loop
out
sub
testb
dec
or
aam
mov
js
mov
sar
iret
arpl
or
mov
lock
bsf
lods
ja
sbb
add
mov
out
outsl
adc
loope
cmp
ja
and
lcall
mov
ljmp
mov
adc
cld
mov
cld
ljmp
je
sbb
icebp
loope
and
mov
pop
and
cmpsb
in
sbb
inc
adc
sbb
lcall
das
fsubrs
ret
or
sbb
ds
shl
in
xlat
adc
pop
pop
push
xor
fwait
inc
xor
push
jmp
push
or
pop
aas
sti
pusha
adc
xchg
push
addr16
sub
adc
push
std
stos
js
mov
pop
in
pushf
and
fwait
jno
dec
in
cmc
jb
lds
cmp
jecxz
pop
pop
nop
aam
mov
mov
mov
inc
push
sbb
rcr
pop
out
or
loopne
mov
mov
fld
in
sbb
mov
in
xor
dec
lock
push
jge
push
iret
pop
pop
dec
mov
xchg
jns
pop
xchg
mov
rcll
shlb
lcall
xchg
icebp
pop
cmp
push
mov
dec
sbb
lods
sbb
adc
dec
rclb
lea
leave
psubd
lods
sbb
ja
int3
cmpsb
xor
xchg
icebp
fwait
mov
sub
jno
jb
add
lahf
push
xchg
xchg
pop
mov
icebp
adc
data16
mov
aaa
xchg
push
or
adc
or
aad
fs
lcall
push
lahf
out
dec
push
in
sti
xchg
psadbw
mov
cs
and
pop
jecxz
dec
mov
dec
mov
mov
xchg
or
mov
js
lds
leave
or
or
inc
dec
or
stc
sbb
ret
and
in
dec
test
addr16
aad
out
or
mov
mov
bound
mov
jle
fwait
scas
inc
mov
cmp
pushf
pop
int3
das
mull
pop
popa
nop
out
dec
lea
xchg
and
dec
mov
loopne
push
fcmovne
insl
test
pop
mov
lret
loop
aaa
ret
test
into
pop
into
inc
jno
out
clc
iret
scas
push
sub
loopne
std
jmp
inc
push
fcomp
xor
xchg
xchg
imul
push
and
leave
jb
lock
jmp
ss
lods
xlat
xchg
mov
pop
jmp
dec
ret
loope
fisttpl
inc
jne
sbb
popf
adc
fsubl
pop
sub
es
xchg
pop
jnp
fbld
or
push
and
outsb
add
sarb
in
sub
hlt
add
int3
cmc
push
xor
inc
fbld
mov
ljmp
mov
adc
cwtl
push
ret
cmpsb
xor
daa
jnp
jmp
cmp
jo
jns
xchg
or
in
sbb
outsl
je
adc
and
testl
test
fcompl
pop
push
aas
lahf
lahf
mov
mov
sti
mov
gs
xchg
movsb
test
xor
fisubl
push
mov
mov
loop
inc
addr16
dec
insl
xchg
out
push
fnsave
aad
out
cmp
outsb
sbb
insl
sub
lds
out
stos
sarl
sbb
pop
aaa
in
jne
pop
popa
dec
iret
mov
cmc
les
mov
mov
or
stos
dec
mov
push
inc
out
and
mov
adc
mov
subb
cld
out
cmpsb
pop
mov
fs
mov
sub
fstps
loop
xchg
xchg
les
mov
xor
cmp
dec
loopne
push
shlb
xor
mov
xor
sbb
mov
push
add
stos
xchg
sub
sbb
jae
mov
cmc
mov
jmp
lea
inc
or
xchg
or
or
and
fsubrs
or
mov
inc
mov
int3
cld
loop
jle
inc
cmpsb
mov
into
fisubrs
push
pop
adc
pop
push
out
jle
pop
xchg
ret
add
pop
aas
mov
dec
aad
push
cmp
jo
xor
lds
mov
xchg
sbb
jl
adc
lods
adc
sbbl
mov
adc
ss
xor
add
lds
adc
mov
inc
mov
insb
dec
cmpsb
stc
cld
das
icebp
push
or
das
dec
fiadds
rcl
xor
pop
adc
mov
enter
jae
inc
popf
ret
ds
sub
dec
fcmovu
jne
test
xor
sbb
imul
rorb
lret
inc
pop
mov
or
imul
lods
jne
jecxz
inc
add
add
test
outsb
das
loop
les
int3
ficoml
jmp
ljmp
jp
push
mov
and
clc
aaa
cmp
lret
cmp
xchg
add
icebp
scas
lret
push
jb
insl
mov
jmp
mov
jmp
and
loopne
mov
aad
jmp
ljmp
pop
mov
sti
aad
dec
imul
pop
cmp
outsl
sbb
adc
push
aad
mov
and
push
xchg
stos
or
jnp
jne
loope
mov
aaa
and
mov
js
sbb
dec
notb
shrb
movsl
rol
rorl
cmc
mov
shlb
aam
xchg
sbb
push
jl
sub
insl
mov
loope
xor
rclb
push
jo
inc
test
shll
jp
dec
cld
popa
fisttpl
fs
pushf
fistl
inc
icebp
call
inc
jb
jmp
mov
xchg
pop
rol
faddl
test
xchg
inc
and
sub
icebp
insb
ret
movsl
loopne
push
pop
stos
in
inc
test
imull
aam
es
loopne
cmp
jg
imul
pop
dec
xor
ss
mov
or
xchg
outsb
inc
pop
cmpsb
adc
dec
and
adc
and
and
mov
sbb
cmp
test
mov
in
sti
pop
cmp
movsl
and
sub
aas
rol
inc
mov
jp
insb
cmpsl
add
mov
cwtl
adc
fdivrl
push
in
sub
lds
xchg
mov
clc
add
pop
outsb
push
movsl
fwait
mov
xorl
insl
xor
ficomps
cwtl
lods
sahf
pop
jne
lock
lret
dec
shlb
push
loopne
pop
movsl
dec
loopne
and
cmp
mov
addr16
mov
xchg
andl
leave
dec
leave
orl
pop
jmp
push
push
in
jo
xchg
jg
in
pop
jge
jbe
int3
cli
lcall
mov
popf
out
sbb
cmp
xor
jb
sarl
ds
jns
sbb
mov
adc
mov
subb
stos
shlb
je
out
scas
lcall
add
jmp
adc
jge
push
test
xchg
sub
bound
loop
popa
std
repz
pop
push
cmpsl
test
movsb
in
cmp
lret
enter
push
mov
xlat
mov
cmp
adc
fsubrs
lds
dec
dec
xchg
mov
sbb
shl
jnp
aaa
dec
in
and
mov
dec
push
mov
scas
mov
sbb
lahf
ret
inc
inc
sbb
mov
scas
inc
jo
sahf
mov
cmp
in
add
repz
inc
in
dec
decl
shll
xor
mov
sub
lcall
cld
pop
arpl
aad
add
ret
fwait
dec
pushf
pop
rclb
test
and
and
jmp
adcb
cli
xor
rcr
mov
pusha
adc
cmp
lahf
or
and
jmp
std
popa
sarb
sub
ret
add
sti
icebp
mov
add
cmp
scas
aam
add
push
aam
sub
je
jp
cmp
rcrb
in
jecxz
and
sahf
adc
sub
arpl
mov
adc
mov
loop
pop
push
cmpsl
or
mov
xlat
out
dec
xor
pop
das
and
sub
stos
cmpsl
fsub
add
idivl
dec
test
push
cmp
ds
mull
leave
js
jb,pn
xor
cmp
push
or
adc
repnz
scas
in
cmc
orl
pop
lret
add
inc
jmp
ljmp
and
mov
lea
jno
pop
pop
lods
fisubrl
insb
pop
fnstcw
xchg
lds
inc
int3
sti
mov
mov
mov
lcall
cmp
adc
lock
jecxz
adc
pop
hlt
cltd
sbb
clc
dec
mov
mov
mov
mov
cltd
fs
lea
push
fsubl
add
mov
data16
jmp
push
inc
pop
inc
push
in
out
insl
sbb
mov
gs
fists
or
test
sbb
inc
add
sbb
push
cs
pop
icebp
iret
repz
fisttps
divb
and
loopne
cmp
jg
xchg
cmp
mov
inc
out
or
sbb
fdivrs
dec
dec
xchg
ret
movsb
es
pop
pop
xor
fsubl
pop
in
dec
cmpsl
jge
jle
data16
subl
jle
sbb
add
sbb
sub
mov
clc
jne
pusha
mov
in
cmp
or
pop
mov
fstp
outsb
pop
movsl
sbb
ficoms
arpl
std
arpl
sti
lods
or
cmpsl
stos
aam
jae
dec
dec
adc
fs
mov
pop
dec
hlt
mov
mov
addl
dec
roll
int
lods
xchg
cmp
lret
xchg
mov
insl
mov
mull
imul
mov
pop
jb
add
jns
aas
or
movsb
xchg
call
xchg
hlt
shrb
sti
pop
or
arpl
xlat
enter
push
push
mov
push
imul
xor
sub
jecxz
rorl
xchg
lret
dec
add
sub
pop
not
addl
and
addb
ljmp
mov
in
movsb
shll
dec
pop
rolb
pop
enter
xchg
mov
push
mov
add
scas
inc
dec
dec
adc
repnz
rclb
imul
mov
push
addb
orb
gs
sarl
inc
popf
cs
es
sbb
fwait
repnz
imul
sub
adc
mulb
cmpsl
push
aam
jl
xchg
adc
xchg
data16
xchg
sbb
arpl
xor
lock
out
lahf
mov
pop
push
icebp
lods
and
jae
xor
imul
or
cwtl
test
loopne
and
lret
inc
pop
stc
ja
test
std
jge
pop
sbb
pop
gs
dec
inc
sub
or
ficompl
or
pop
push
outsl
sarb
enter
loop
and
fsubrs
adc
pop
sbb
sbb
add
xchg
xor
cli
dec
cmc
xchg
cmp
jle
and
and
hlt
fisubrs
dec
mov
sub
xchg
icebp
jge
add
sub
add
sbb
xchg
insb
cmpsl
insl
push
push
dec
pushl
mov
cmp
int
push
pop
hlt
jne
xchg
mov
inc
fistl
repz
scas
inc
or
lret
inc
frstpm(287
popa
fimull
jae
pop
xor
insl
roll
dec
lret
xchg
push
cmc
rcrl
jb
and
stc
adc
jmp
shll
xchg
loope
pop
mov
cmpb
inc
mov
sarl
xchg
jbe
add
push
dec
xchg
inc
mov
adcl
cmpsl
arpl
jne
push
jecxz
lock
inc
xchg
cmp
fldenv
sub
xchg
ss
xor
das
pop
jp
dec
pop
aas
add
mov
movsl
mov
jb
pushf
inc
xor
jmp
fcoms
stos
mov
aam
or
rcl
repnz
in
dec
mov
fcmovb
in
xchg
sub
scas
aam
adc
push
and
in
xchg
rcl
dec
cmpsb
mov
push
add
jge
hlt
je
adc
push
add
in
cmp
dec
mov
mov
aaa
daa
add
in
in
call
outsb
mov
push
inc
movsb
mov
push
sub
sbb
jl
xchg
test
repnz
add
push
addr16
inc
addr16
les
pop
popf
imul
in
mov
dec
pop
sti
push
test
mov
and
in
mov
cmpsb
cmp
scas
test
std
and
or
jecxz
loope
pop
sbb
cmpb
add
xor
xchg
pop
stos
push
mov
loope
mov
jp
incb
cwtl
dec
sub
pop
sbb
xlat
cmpsb
jns
add
out
cmp
notb
lret
pop
gs
mov
mov
ret
lcall
mov
jmp
out
adc
cmp
cmp
mov
wrmsr
push
mov
xlat
test
sbb
ja
ss
inc
pop
sbbl
arpl
jge
add
das
xchg
scas
sbb
lahf
xor
int
mov
sub
jmp
lcall
pushl
hlt
enter
pop
mov
jecxz
fdivl
les
scas
into
outsb
shld
lods
int
push
pop
sbb
mov
mov
cmp
mov
jae
lret
outsb
adc
js
cmp
arpl
xchg
mov
and
pop
add
jp
pushf
fldl
test
out
pop
arpl
pop
iret
ret
pusha
loop
pop
dec
fbstp
mov
icebp
and
lods
mov
xchg
add
int
pop
or
mov
ljmp
dec
je
and
jns
push
and
nop
add
jmp
xor
sbb
pop
push
lret
outsb
mov
pop
jb
daa
mov
sbb
mov
sub
push
adc
icebp
adc
stc
int
mov
ss
mov
test
cmpsb
shr
mov
ret
push
call
cltd
lret
mov
fsubrs
mov
out
xchg
ret
aaa
aaa
dec
ret
sbb
lds
sub
scas
dec
aaa
add
mov
imul
xchg
dec
jo
jmp
ja
xchg
add
xor
call
push
lcall
jecxz
mov
sub
decb
and
ja
dec
xchg
add
jno
jg
sarb
imul
pop
adc
inc
loopne
and
lock
lretw
std
push
adc
loopne
cmp
cmc
nop
cmpb
xchg
sub
cli
xor
lods
jne
movsl
or
in
cmpsb
loopne
call
cltd
jp
insl
loope
cwtl
fs
sbb
lret
add
dec
enter
movsl
xlat
mov
lea
push
sbb
mov
int3
pop
lods
test
loope
and
push
mov
ljmp
fadds
lret
push
popa
mov
out
xlat
in
push
or
fisubs
in
jae
add
xchg
andb
xchg
or
insb
dec
mov
push
inc
out
test
out
test
sub
mov
rcll
pop
lea
jne
js
jp
ret
loope
das
dec
dec
push
loope
xchg
clc
aas
aaa
adc
cmc
lds
leave
mov
and
mov
jmp
fimuls
mov
fsubp
mov
std
stos
mov
or
int
push
roll
das
and
jp
sub
cmp
push
nop
cmp
call
push
leave
mov
popa
stos
sub
sbb
imul
jp
cli
push
xchg
jle
adc
fldcw
xchg
adc
lock
sarl
inc
cmc
insl
cmc
pusha
sub
pusha
stos
or
pop
or
repz
lahf
push
sbbb
mov
lds
movsl
subl
call
arpl
mov
fstpl
xchg
lds
test
fldt
mov
xor
lock
repz
test
nop
aad
and
mov
mov
subl
and
mov
and
mov
push
mov
xchg
push
xor
rcrl
enter
aam
xlat
ljmp
push
sbb
push
sub
int3
insl
stos
pop
pop
or
jae
lcall
cmp
test
test
jecxz
cmp
mov
in
mov
inc
cmp
mov
fmuls
jbe
jmp
jno
jp
dec
idivl
das
fnstenv
adc
cwtl
mov
cmpsb
fldl
cli
notb
out
lret
std
loop
sub
sub
pop
and
adc
cmp
pop
out
mov
push
in
movsl
stos
xor
fisttps
push
mov
insl
cmpb
sub
or
outsb
mov
in
fucom
mov
aam
sbb
sbb
in
jg
stos
into
pop
adc
rclb
pop
out
adc
adc
xchg
push
in
cli
push
xchg
fistps
in
lret
mov
and
jle
lcall
cmc
adc
xchg
aam
rcl
jnp
pushf
xor
add
or
jecxz
fadds
out
adc
pusha
mov
mov
sbbl
imul
sbb
xchg
test
mov
inc
leave
das
jp
jnp
mov
lods
pop
inc
sub
aaa
push
xchg
fsubr
jnp
mov
xchg
nop
lcall
xchg
adc
sahf
push
sbb
out
test
inc
js
and
push
sarl
cltd
mov
nop
ds
js
pop
in
mov
xor
aad
decb
fistpl
in
mov
xchg
sub
stos
sub
mov
rcrl
js
push
or
pushf
jecxz
cmp
pop
cwtl
stos
mov
aaa
aam
stos
push
jno
jmp
scas
push
jno
jp
jp
jbe
and
pusha
insb
mov
scas
lret
pop
rolb
or
jnp
insb
jne
sbb
sbb
mov
push
hlt
mov
popf
mov
pop
repnz
adc
pusha
mov
mov
cmp
dec
stos
and
fdivrp
pop
out
dec
dec
arpl
lret
jbe
mov
mov
sbb
pop
pop
jg
push
inc
mov
and
jmp
pop
pop
out
ljmp
inc
sbb
je
insl
fbstp
lds
idivl
inc
add
adc
pop
lahf
ss
adc
loopne
imul
xor
icebp
push
xlat
inc
cmc
int
cwtl
mov
in
mov
mov
dec
jo
fnstcw
inc
aad
std
les
jae
mov
jno
gs
push
lods
mov
sbb
dec
jo
aad
scas
mov
test
notb
and
push
push
leave
int3
sub
xor
repz
mov
stos
popa
or
dec
fwait
sbb
andl
rolb
lsl
test
lcall
je
jb
adc
repnz
xor
and
inc
sub
pushl
jg
cmp
jp
mov
into
add
mov
xchg
or
adc
inc
jo
cmpb
ss
mov
adc
dec
lea
xor
jbe
pop
fistpll
mov
and
and
mov
push
add
in
rolb
sub
sub
or
test
movl
popa
aam
jae
adc
add
dec
sub
sbb
or
lds
icebp
add
lahf
sub
cwtl
out
push
cmpsb
js
lods
sbb
adc
xchg
arpl
out
lret
or
popa
or
jmp
pop
mov
adc
or
jno
je
mov
mov
aam
mov
movsl
dec
jge
lcall
ret
or
ret
jmp
inc
aaa
rcll
adc
loop
sti
xchg
pop
fwait
cmp
mov
in
jp
inc
ss
fidivrs
add
ja
dec
mov
pop
add
adc
bound
inc
test
ljmp
add
daa
jb
rclb
call
mov
cmp
cld
xchg
stos
pop
xchg
sub
mov
jl
jbe
lahf
xor
jno
jns
xor
mov
inc
push
les
rclb
cmp
ret
nop
push
push
push
pop
popf
dec
mov
pop
push
out
ss
call
mov
mov
sbb
cwtl
mov
cs
or
divb
jae
push
outsb
mov
adc
shlb
in
sbb
inc
sti
mov
sub
xchg
movsl
je
xchg
mov
cmp
pop
jne
sahf
rclb
mov
mov
outsb
dec
scas
jae
lea
push
or
loope
lods
jb
mov
sbb
test
push
mov
mov
ljmp
loop
mov
in
addr16
sahf
xor
mov
ljmp
mov
jl
nop
xchg
clc
pusha
test
mov
lds
adc
iret
add
add
outsb
pop
outsb
inc
insb
ja
xor
shll
cwtl
fbstp
ret
scas
fs
xor
sbb
xchg
jge
stos
test
sub
or
jp
add
jb
sahf
add
push
push
xor
out
mov
lret
jno
mov
push
adc
test
les
inc
negl
cli
mov
int3
xrelease
push
in
aaa
stos
and
sub
mov
pop
push
jp
and
dec
fistps
add
fmuls
mov
test
loope
sbb
cmp
and
addb
das
rcrl
movsl
pop
into
xor
mov
adc
xchg
pushl
and
mov
pop
iret
loopne
and
mov
dec
in
imul
mov
jae
inc
push
push
mov
clc
adc
mov
lods
push
das
dec
jle
xorl
push
xchg
and
jnp
push
icebp
orl
js
xchg
sbb
inc
add
das
mov
or
add
jno
jo
in
and
mov
rorb
loopne
push
xchg
out
orl
fildll
out
sti
test
imul
add
lea
xor
imul
jmp
jno
jne
mov
cmp
dec
sbb
mov
mov
cmp
mov
mov
repnz
cmp
xchg
sub
gs
stos
shll
fwait
cltd
cmp
xchg
cmp
lahf
stos
scas
xchg
sub
fcomi
push
je
mov
add
cltd
mov
fwait
daa
out
jbe
enter
pop
or
push
inc
mov
and
lret
les
lcall
movsl
mov
sbb
mov
sbb
dec
aaa
notb
push
lret
mov
ljmp
mov
and
jne
gs
push
mov
mov
push
add
test
jo
movups
pop
scas
jmp
dec
cltd
sbb
pop
xchg
pop
sub
aaa
pop
fwait
xor
pop
or
mov
inc
loop
xchg
test
lods
or
jnp
insb
out
std
mov
or
rcll
jl
daa
jecxz
sub
and
leave
lret
lahf
mov
and
pop
jbe
in
lea
cmc
cmp
sub
push
and
xchg
mov
dec
cmp
fldt
pop
cs
adc
lcall
ret
out
jnp
dec
iret
lds
sbb
push
adc
incb
leave
push
dec
push
repnz
arpl
push
jae
push
mov
mov
rol
push
out
mov
out
popa
jmp
xchg
int
repz
lahf
adc
cmpsl
mov
xor
pop
imul
arpl
jp
inc
popf
inc
lock
mov
or
fsts
mov
dec
mov
sub
jb
mov
cmp
jmp
pop
call
mov
stos
cmp
jbe
lods
jno
mov
add
test
repz
int
sbb
xchg
pusha
insl
roll
and
xchg
bound
jnp
xlat
sbb
popa
jbe
ljmp
mov
xchg
push
insl
pop
les
hlt
jnp
push
push
dec
sarb
rcrl
test
xor
dec
jo
dec
mov
xor
cwtl
xchg
icebp
ja
lahf
add
stc
ret
inc
addr16
std
cmpsl
adc
imul
test
jle
push
add
std
iret
xchg
xor
dec
fstps
sbb
clc
xchg
or
inc
pop
pop
pusha
out
sarl
ret
out
add
and
mov
mov
lcall
add
sbb
mov
test
mov
pop
pop
scas
out
fbld
jae
rep
xchg
cltd
dec
das
and
ss
inc
mov
cmp
loope
push
ja
out
sbb
cmp
addr16
sbb
xchg
into
shll
repz
jbe
or
mulb
cmp
out
rorb
je
sbb
aam
fwait
dec
adc
sbb
mov
subb
rcrb
cmp
fwait
lahf
jmp
dec
int3
insl
subl
in
mov
or
mov
cmpsl
cmpsb
lods
gs
adc
jo
mov
xor
jg
xchg
out
pop
call
fldcw
repnz
mov
call
mov
add
lahf
mov
sbb
out
xor
lret
out
push
iret
adc
xchg
mov
negb
xor
mov
sti
lret
ja
pop
shlb
adc
scas
adc
inc
mov
xor
lret
push
xorl
adc
dec
or
dec
out
mov
sub
or
lock
mov
lcall
fisubs
and
or
mov
xchg
andl
push
sbb
and
mov
sbb
mov
roll
push
and
mov
xchg
cld
lods
enter
inc
mov
push
fmul
cmp
xchg
fst
cmpb
in
pop
sub
movl
arpl
jo
inc
xor
sbb
sti
jecxz
pop
sub
cmp
xlat
inc
in
mov
or
sub
jnp
xor
fsubr
lods
adc
insb
jge
repnz
pop
xlat
test
fs
data16
mov
scas
or
aad
jmp
jecxz
or
mov
inc
push
sub
inc
fisubs
pushf
das
xor
rcrl
sbb
sahf
pause
jp
mull
sar
xor
dec
call
or
outsb
das
test
or
repnz
cmp
mov
orb
xchg
stos
fldcw
sub
xor
aam
lods
adc
std
adc
xchg
inc
sub
ja
dec
out
fnsave
fwait
adcl
jno
xor
loopne,pn
sub
sub
mov
jnp
lock
inc
fcom
xchg
adc
fbstp
pop
fisubrs
jnp
pusha
or
and
cmpsb
stc
fs
pusha
imul
mov
mul
pop
or
sahf
fdiv
add
or
jo
stc
pop
cmp
jbe
test
pop
mov
in
add
dec
and
jp
and
jb
inc
dec
push
stos
data16
adcb
out
sarl
cs
inc
aad
frstor
lds
add
mov
out
cs
orl
pop
push
outsl
push
mov
daa
sbb
lds
insb
mov
cli
add
and
xor
jae
mov
cld
and
mov
les
inc
mov
gs
mov
addr16
dec
mov
cmp
and
dec
outsb
xor
call
dec
mov
mov
pop
cmp
or
cs
sbb
mov
push
adc
pusha
sbb
popa
aad
lds
loopne
xor
or
and
cltd
mov
mov
pop
call
add
sub
cmp
dec
push
mov
cmp
dec
int
xor
mov
push
popf
fdivrs
loopne
in
xchg
mov
pushf
les
pop
jle
les
mov
ljmp
lahf
xchg
pop
or
xchg
inc
inc
out
sub
xor
pop
imul
sub
loope
adc
lahf
push
in
or
or
push
jmp
jnp
shr
lods
stc
add
test
mov
insb
out
in
scas
shlb
push
fdivrs
pop
sub
aam
cmp
sub
mov
mov
dec
pop
clc
sub
int
mov
gs
dec
mov
push
fmul
mov
notb
pop
sbb
loop
dec
add
jb
fistpl
das
xor
dec
dec
mov
push
aas
adc
adc
jne
ljmp
es
xchg
inc
dec
cmp
push
sub
inc
cmp
ja
fisttpll
pop
lret
cmc
ljmp
mov
dec
inc
pop
enter
cltd
and
or
cmp
sbb
cmp
adc
xorl
fidivs
jmp
push
pop
test
xlat
repnz
stos
out
fbld
adc
or
sarl
daa
out
xlat
rcr
pusha
adc
pop
xlat
add
cltd
sbb
imul
push
mov
dec
add
sub
add
inc
push
sbb
test
xor
arpl
push
mov
xor
jmp
push
test
push
mov
sbb
fldt
ds
in
nop
inc
jbe
or
and
out
push
xchg
xchg
pushf
dec
scas
sub
push
lds
aas
push
xchg
lahf
add
cmpsl
dec
adc
mov
xor
in
insl
rol
std
nop
xchg
jns
cmp
icebp
add
iret
and
xor
loopne
ret
loop
fs
sbb
in
ja
jg
addr16
btr
push
leave
imul
call
or
adc
cmpl
sbb
pop
les
jns
jp
sti
inc
popf
aas
dec
fcmovu
imul
inc
sbb
sub
cmp
jmp
sub
and
jne
lods
in
pop
push
popa
xor
dec
pushf
pusha
mov
leave
mov
sbb
mov
mov
pop
mov
and
sahf
mov
inc
loopne
cmp
neg
lret
ficoml
xchg
inc
pop
cmp
stos
lea
rcl
jmp
add
repnz
sub
dec
in
fstp
movsl
xor
mov
and
bswap
aas
in
cmp
mov
movsl
inc
mov
pushf
sbb
mov
pop
cmc
xor
lds
xchg
test
pushf
cld
inc
pushf
lods
jae
sub
and
sub
fdivs
or
js
je
ficomps
adc
inc
pushf
jmp
cmp
push
push
mov
repz
inc
rorb
dec
repz
jg
push
adc
sbb
sbb
cmp
js
into
add
mov
out
xchg
aad
mov
sbb
push
pusha
mov
jbe
fldenv
push
sub
in
xchg
dec
jb
or
pop
fistpll
mov
cmp
mov
jbe
loopne
fisubrs
push
ret
sar
xchg
sarl
ljmp
rclb
push
les
cmpb
pop
test
xorb
push
mov
mov
xchg
mov
jns
sbb
mov
mov
mov
mov
mov
xchg
add
mov
adc
mov
dec
xlat
push
push
lahf
repz
pusha
mov
js
jns
pop
mov
js
ljmp
pushl
fcomp
mov
inc
vandnps
enter
call
add
rcrl
hlt
mov
jge
mov
int
dec
jo
jge
js
sub
xor
movsl
jg
jae
hlt
mov
hlt
inc
fsub
mov
cmc
das
push
test
xchg
xor
sbb
sbb
mov
adc
jle
pop
push
pushf
js
xorl
mov
scas
mov
xchg
xor
dec
adc
xorb
and
and
jecxz
scas
xchg
notl
sbb
mov
mov
dec
jle
mov
inc
icebp
shll
jl
aad
sbb
clc
les
add
ret
mov
ret
cmpsb
mov
sub
lods
add
mov
je
cmp
test
ss
push
movsb
sbb
and
js
std
push
fistpll
arpl
je
jns
ljmp
repnz
das
push
xchg
mov
daa
shll
mov
enter
pop
add
or
mov
sbb
xlat
aad
fdivr
dec
pop
add
popa
add
xor
test
and
fs
std
push
test
lret
neg
hlt
adc
iret
ss
popf
enter
sub
inc
cld
mov
int
xchg
push
mov
cmp
xor
cmp
push
add
test
mov
jge
in
and
bound
insb
out
xlat
xor
cmp
sub
xchg
push
sahf
int3
xchg
test
sahf
push
lret
jmp
or
fidivl
cltd
add
andb
pop
aam
dec
inc
es
or
sub
and
inc
pop
loopne
pop
add
mov
rolb
aam
cld
mov
idivb
add
sub
in
pop
cli
jns
mov
xchg
mov
pop
fnstenv
iret
fimuls
scas
mov
stc
xlat
pop
ja
enter
frstor
out
lods
cli
or
stos
int
cmp
pushf
out
stos
push
cmp
and
mov
xchg
int3
dec
data16
popf
fists
dec
sti
mov
and
sahf
xor
mov
dec
jo
jmp
iret
pop
push
mov
adc
push
decl
push
inc
push
in
inc
fsubl
pop
inc
fdivl
jo
psubb
jo
xor
cmp
pusha
mov
xchg
inc
mov
jno
pop
mov
outsb
test
lds
add
xor
decl
out
pop
hlt
mov
sbb
lret
into
dec
das
das
xor
dec
imull
test
dec
rcrl
jbe
jne
push
mov
push
cltd
cmc
sahf
jne
push
jnp
push
xchg
pop
inc
push
lds
inc
jo
arpl
jl
fsubrp
jecxz
hlt
jp
push
add
rcrl
mov
xor
ss
or
xor
aad
xor
push
and
nop
cld
divb
push
mov
mov
es
inc
dec
lds
lods
cmp
stc
mov
push
xlat
out
aad
add
or
cmp
lds
sub
mov
sahf
scas
cld
sbbl
xchg
cli
and
xor
fstpt
dec
test
mov
std
add
out
sbb
xchg
sub
vprotq
mov
inc
xchg
dec
lea
cld
pop
push
leave
and
pop
and
mov
pop
adc
push
sbb
or
lods
scas
add
mov
dec
adc
das
into
rclb
mov
loopne
dec
xor
daa
cs
adc
outsb
shl
clc
nop
js
mov
into
push
xchg
mov
dec
out
ss
and
jae
push
ljmp
sbb
adc
shll
out
arpl
outsb
les
mov
outsl
test
int
dec
stc
mov
stos
out
in
inc
movsl
pusha
sub
and
cmpsl
loop
jp
loope
cmpsl
push
or
add
jae
mov
mov
mov
or
mov
int3
repz
fidivl
test
stos
xchg
lret
movsb
pushf
cli
xor
jbe
mov
scas
cwtl
xchg
xor
jns
cmp
rorl
loop
cmpsl
ja
test
fldl
mov
jle
push
push
jb
jns
test
and
sbb
or
sahf
aad
pusha
xor
mov
or
mov
not
fwait
push
insb
push
rclb
xchg
cmp
pop
and
imul
or
pop
cmc
popa
cmpsl
aad
setbe
stc
inc
cmp
jle
xchg
add
stos
and
scas
repnz
dec
loopne
cmp
je
xchg
jmp
add
jae
aad
rclb
xorb
insb
adc
xor
sti
cld
push
xor
jle
xchg
mov
add
daa
push
inc
mov
aaa
lock
lret
ss
clc
xchg
cmp
and
daa
pop
xchg
fcoms
xchg
cmp
mov
dec
arpl
test
mov
push
add
popf
jle
jne
pop
ficompl
or
jge
xchg
mov
sbb
in
das
mov
push
mov
es
push
and
or
out
xchg
mov
pop
scas
jns
movsb
mov
mov
adc
ja
add
and
pop
or
call
inc
ljmp
gs
addr16
mov
or
int3
cmp
imul
mov
push
mov
fldcw
fcomps
sahf
imul
jo
ds
jno
lahf
pop
and
jp
sub
lret
int3
aad
cltd
int
movsl
mov
lea
sarb
aas
pop
mov
cmp
loope
fists
daa
dec
jo
inc
movsb
repnz
adc
xor
jo
push
or
hlt
mov
dec
inc
cmc
dec
js
push
push
je
enter
xor
fsubrl
mov
sarb
pop
push
hlt
dec
loopne
sub
sub
dec
rcrl
cmpsb
aad
fstpt
cmp
les
pushf
dec
nop
push
out
cmp
sub
sbb
add
add
mov
dec
mov
mov
sub
mov
lcall
icebp
or
imulb
adc
pop
aad
pop
gs
and
jl
fwait
aaa
mov
fs
scas
mov
mov
pop
shl
or
cmp
ret
push
push
sbb
push
test
jns
test
inc
pop
mov
mov
xchg
imul
fisttpl
leave
pop
xchg
pop
add
fucomp
pcmpgtd
imul
push
push
lahf
xchg
js
jmp
jne
inc
pop
in
mov
mov
movsl
movsl
ja
cmpsb
xor
jecxz
sbb
jb
cld
subl
sub
enter
divb
leave
xchg
mov
nop
aas
fwait
sub
xchg
pop
mov
sub
enter
sub
xor
lods
into
cmp
mov
mov
sbb
int
mov
push
fcmovnb
and
data16
loopne
mov
push
cmp
push
dec
jne
nop
jp
and
jecxz
pop
cld
mov
aad
push
sbb
shr
sbb
ret
ja
xchg
pop
mov
or
inc
in
xchg
bound
mov
out
cli
push
jb
nop
sti
ja
cmp
pop
lea
inc
pop
xchg
cmp
xchg
pop
mov
sbb
cmc
int3
imulb
sbb
jb
imul
imul
adc
and
xor
jbe
push
and
lock
ds
gs
pop
xor
cmpsl
lea
mov
cmp
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
