mov
pop
dec
pop
mov
inc
jp
push
bound
sub
daa
es
jmp
test
sub
pop
push
aas
pop
adc
and
or
jp
nop
inc
mov
scas
pushl
cli
clc
negl
rolb
jmp
pop
push
scas
das
jne
outsl
mov
sbb
ret
mov
sbb
rorl
jb
add
mov
pop
or
dec
mov
subb
and
sarl
push
mov
lret
push
pop
mov
addr16
adc
mov
lahf
insl
mov
xchg
daa
cld
inc
test
int3
je
data16
and
sbb
mov
dec
adc
and
arpl
jecxz
in
icebp
out
out
bound
or
or
mov
dec
fs
cld
cwtl
dec
inc
insl
sti
mov
outsb
outsb
insl
mov
mov
std
int3
movsb
cmp
pop
pop
jns
movsb
dec
pop
inc
inc
cmpb
cwtl
inc
dec
dec
cmp
in
fst
and
sahf
dec
sbb
stos
test
scas
ss
adc
xchg
in
or
rcr
div
cmc
hlt
ret
or
sarb
sahf
pushf
fwait
shll
out
stos
data16
jae
mov
jbe
xorl
jnp
inc
inc
inc
dec
dec
dec
dec
push
in
inc
mov
push
repnz
aas
xchg
add
push
dec
cs
imulb
adc
xchg
cltd
mov
cwtl
addr16
fs
mov
sarb
xchg
add
test
dec
std
hlt
push
sbb
push
adc
jge
jo
jge
or
icebp
lock
sbb
popa
pop
add
test
dec
fstp
fistl
inc
pushf
adcl
jbe
jp
mov
add
bsf
es
lock
jnp
push
fwait
jne
sub
sahf
aad
add
cmp
mov
aaa
mov
jns
mov
adc
or
clc
lcall
inc
sub
cmp
clc
gs
fsubr
or
mov
arpl
push
push
push
popa
pop
pop
ror
dec
bnd
outsl
inc
inc
inc
and
inc
add
push
in
cmp
aaa
mov
add
mov
stos
sbb
mull
sub
cmp
pop
stos
cltd
push
mov
imul
dec
popf
fwait
mov
or
es
jno
jp
popf
test
xlat
pop
adc
xchg
adc
out
arpl
mov
insl
scas
add
jno
xchg
aad
sti
arpl
push
dec
lcall
xchg
shlb
int3
loope
ds
inc
ret
in
mov
jecxz
jge
push
loopne
jge,pn
cwtl
mov
in
icebp
ret
and
sahf
dec
stc
xor
sub
cmpsl
and
call
mov
cmc
cmc
hlt
or
out
xchg
int
xor
push
out
pop
fnstenv
push
or
mov
adc
popa
pusha
pop
or
jle
fnstcw
adc
mov
xlat
push
pop
sbb
in
inc
mov
cmc
xor
mov
not
inc
pop
cmpsl
cmpsb
hlt
sbb
and
xchg
xchg
xchg
gs
insb
pop
mov
mov
xchg
xchg
pop
add
sub
sub
sbb
je
adcb
orb
repnz
das
mov
lcall
stos
add
add
stos
stos
cltd
push
cmp
dec
aas
add
leave
jecxz
js
xor
sub
mov
scas
cmpsb
dec
clc
dec
dec
jle
cmpb
ret
stos
push
push
sahf
xchg
cmp
aaa
repnz
icebp
jmp
sub
or
xchg
js
adc
adc
jne
mov
leave
mov
ljmp
test
adc
ds
shrb
pop
xor
in
and
bound
insb
jle
sbb
mov
in
inc
inc
and
out
out
daa
xor
aaa
ss
shrl
sbb
stos
test
je
mov
ret
jmp
jnp
lret
aas
mov
insb
mov
repz
fwait
pop
leave
mov
xchg
and
das
addr16
ja
inc
imul
add
and
in
icebp
add
push
pop
js
or
icebp
out
loop
mov
pop
jmp
xchg
push
gs
xchg
rorb
ret
int
mov
mov
or
xchg
jl
sarl
jne
mov
xor
scas
pop
and
aam
adc
xor
sbb
or
mov
jbe
mov
push
mulps
mov
insl
in
push
xchg
das
jo
mov
in
push
push
cs
sub
pop
ret
lret
jge
jo
inc
inc
inc
adc
jge
push
dec
int3
js
in
cmpsb
test
cmc
xor
inc
xor
cmp
cmc
cmpsb
sbb
push
leave
scas
lods
stos
push
fistpll
xchg
xchg
adc
scas
push
sbb
pop
mov
xchg
xchg
and
push
fs
mov
mov
jne
fwait
addb
scas
and
or
repnz
bound
adc
cmpsl
mov
icebp
repz
lock
std
xor
test
cmp
ds
lret
loope
sub
and
xorb
mov
pop
dec
into
and
cmp
cs
push
and
adc
iret
push
out
test
cmp
jg
add
add
mov
hlt
xchg
clc
jae
divl
adc
jg
xchg
mov
pop
imul
jb
jo
xchg
push
rcrb
pop
fists
sbb
sbb
mov
push
dec
dec
lock
inc
inc
and
push
cmp
cmp
inc
dec
cs
xor
shll
stos
cwtl
jg
sbb
add
mov
sbb
popf
inc
loop
mov
mov
stos
in
add
mov
sbb
lahf
and
mov
xor
dec
adc
jge
adc
in
inc
pop
xor
push
pop
mov
or
std
inc
out
loope
sbb
push
mov
add
xchg
sahf
xor
pop
insl
insl
insb
xchg
push
push
push
push
dec
pop
pop
pop
sub
daa
es
rcr
lock
sbb
out
mov
jmp
fadds
jecxz
enter
clc
jbe
adc
adc
push
test
mov
div
int
or
mov
mov
daa
jcxz
push
push
rcl
and
sub
mov
adc
mov
pop
mov
ret
jmp
in
fsub
decb
lret
das
push
flds
sub
sub
fwait
xchg
rclb
lret
and
cmp
cwtl
inc
cwtl
shlb
cmp
dec
xchg
movsb
pushf
and
add
cmpb
addb
loopne
xor
xor
ss
mov
or
in
in
cmp
push
xlat
mov
in
pusha
popl
aam
aas
ds
fbld
lods
cld
push
mov
mov
adc
outsb
imul
jge
cmp
pop
pop
pop
adcb
stos
mov
inc
inc
pop
jbe
je
mov
cmp
lock
stc
cmp
loop
and
repz
jne
push
scas
scas
scas
lret
fistpl
outsb
xor
repnz
mov
and
aam
pop
mov
lahf
jb
or
lea
or
sbb
and
dec
lret
arpl
jo
out
dec
stos
xor
aaa
mov
inc
sbb
test
repz
inc
inc
mov
lds
inc
xchg
cmp
fbld
push
leave
push
movntps
sbb
xchg
xchg
dec
dec
jo
push
cmp
lods
and
popa
push
xorb
pop
sbb
pop
pop
jecxz
icebp
fildll
push
push
dec
prefetchw
xchg
add
or
inc
dec
push
sti
sti
push
add
arpl
jo
lret
mov
fwait
test
bound
pop
aad
cmpb
fisubl
out
das
xchg
lcall
xchg
jmp
test
xor
sbb
xor
test
movsl
loope
into
and
or
ss
jl
leave
cwtl
xchg
xchg
lret
shlb
push
test
imul
cld
sbb
imul
push
pushf
mov
dec
dec
pop
dec
icebp
add
inc
push
push
pop
mov
or
cmp
jmp
ds
add
xor
fucomp
lret
movsb
xor
insl
lods
stos
and
pop
shll
mov
lahf
popa
inc
mov
lds
pop
pop
adc
push
cld
repz
adc
adc
xor
sbb
or
ds
push
insl
mov
add
fcom
push
and
inc
add
add
inc
imul
ss
cli
pop
pop
jle
xchg
stos
in
push
inc
rcl
mov
cli
inc
inc
inc
mov
mov
sub
cmp
jecxz
popf
or
jmp
shrl
or
test
ja
jb
xchg
jge
lock
clc
div
xor
adc
add
cld
sbb
jmp
gs
lock
pop
push
jns
and
pop
gs
gs
or
les
pop
dec
dec
lret
ja
mov
xlat
pop
bound
aas
inc
lods
imull
stc
rcl
dec
cmpsb
movsb
cmp
sub
xor
outsl
push
xchg
mov
xchg
mov
mov
add
mov
bound
arpl
stos
js
ja
fstps
push
and
sbb
mov
jecxz
sub
jne
jne
mov
fstps
lret
stc
addr16
mov
push
out
fcoml
dec
add
push
dec
cmp
outsl
int3
aaa
aad
pop
pop
cmp
mov
ljmp
dec
dec
lods
mov
bound
ficompl
dec
cmp
pushf
mov
test
or
cmp
inc
movsb
mov
je
jns
lcall
xchg
in
insl
cwtl
in
fstps
fbld
pop
mov
xlat
lds
xchg
dec
js
lea
jmp
in
mov
cmp
adc
mov
in
aad
inc
inc
aas
cmp
addb
movsl
repz
mov
sbb
mov
gs
pop
sbb
popf
pushf
fwait
or
mov
dec
inc
inc
mov
arpl
mov
push
xor
inc
jle
jl
jnp
call
jo
repnz
push
lcall
incb
or
cmc
lcall
enter
cmpl
jb
aad
js
mov
lret
inc
std
and
cmc
mov
arpl
pop
jbe
movsl
and
xor
mov
sbb
pop
out
xor
add
and
aas
mov
cli
aad
mov
xchg
cmpsb
or
sti
sbb
les
mov
sbb
punpckhwd
jecxz
les
insl
add
and
mov
jne
loope
xchg
pop
inc
mov
add
add
xor
push
dec
or
mov
out
add
fildl
inc
aas
mov
aad
aaa
xchg
movsl
movsb
add
cld
push
push
xor
lret
inc
mov
pop
mov
cmp
push
daa
inc
ret
daa
xor
call
mov
dec
or
jle
push
xchg
and
jb
out
cmp
add
add
ljmp
stc
clc
testl
xchg
js
cld
aad
mov
les
imul
int3
mov
mov
mov
mov
lods
in
jne
cmp
push
cs
xchg
add
pop
push
ds
and
test
adc
sbb
pop
push
mov
xchg
mov
movsb
or
stc
addr16
lds
cmc
or
xchg
or
ljmp
lock
jb
jo
loop
scas
sub
adcb
push
loop
inc
push
sbb
xor
inc
out
loop
cmovg
stc
lea
push
test
add
cld
fimuls
push
push
lods
and
scas
xor
gs
enter
int3
mov
or
and
popf
pushf
fwait
cmpl
pop
cmpsl
cmc
mov
add
int
xchg
pop
nop
ficoml
jg
adc
cmovo
cmp
or
fcoms
clc
nop
cld
xor
lock
lods
push
dec
adc
push
xchg
lahf
data16
outsl
call
xchg
pop
rcll
add
push
pusha
fldcw
pop
pusha
dec
mov
xor
out
daa
orl
int3
sbb
loope
test
adc
dec
xchg
icebp
or
cli
mov
int
xchg
push
dec
mov
mov
xchg
outsb
mov
pop
mov
fiadds
test
sbb
pop
dec
dec
out
dec
imulb
cmp
and
or
sbb
xchg
cld
and
mov
pusha
mov
popf
fwait
or
cwtl
sbbb
test
repz
shlb
sub
outsb
jne
jae
cmp
and
out
xor
outsb
adc
adc
cmp
test
fcom
pop
bound
loope
out
sar
mov
inc
pushf
adcl
clc
test
dec
lods
rclb
mov
lods
in
lret
and
das
cs
imul
xchg
popa
pop
adc
add
xor
or
cmpsl
and
call
mov
div
hlt
or
out
addl
addr16
pop
or
outsb
nop
leave
mov
pop
pop
jp
in
and
leave
sbb
rorb
dec
sbb
mov
jbe
dec
mov
jl
addr16
loopne
and
push
aas
ds
fcmovne
add
int3
lret
mov
fidivrl
fmuls
mov
popf
movsb
push
pop
inc
mov
sbb
and
in
mov
shll
push
and
cmp
inc
xchg
in
push
outsb
hlt
inc
adc
cmp
pop
push
call
sti
arpl
filds
jp
push
inc
insl
lods
push
xchg
cmp
add
sahf
push
jecxz
lret
mov
adc
push
push
enter
mov
sub
movsb
jo
xchg
scas
or
push
push
ret
sub
mov
push
sbb
mov
or
adc
jecxz
idiv
negl
xchg
mov
popf
pushf
imul
arpl
and
mov
loop
in
je
fadd
out
jg
pop
movb
jmp
and
repnz
movsl
xor
cmp
bswap
hlt
mov
push
inc
gs
pop
jmp
add
inc
les
jno
das
rorl
push
push
mov
arpl
lods
addr16
pop
pushf
sbb
sub
sub
jns
mov
testb
dec
inc
sub
sbb
stos
push
dec
jno
push
sbb
inc
xor
inc
scas
out
insl
push
std
pop
or
mov
leave
imul
sub
sahf
fmulp
sbb
pushf
mov
sub
xchg
shll
cmp
imul
js
ret
xchg
mov
pop
popa
stos
mov
dec
inc
inc
xorb
sbb
xchg
pop
icebp
les
and
sub
or
stos
adc
inc
stos
adc
jne
jl
cli
stc
pop
aaa
pop
add
rolb
in
xchg
mov
mov
gs
stc
stc
jno
in
cltd
cld
inc
out
int
push
push
adc
fsubp
je
cmpb
dec
dec
inc
push
mov
std
aaa
jp
dec
cmp
enter
adc
in
cmp
xor
sbb
repnz
das
pop
pop
stos
pop
sbb
push
xchg
stos
xchg
pop
sub
rol
adc
or
test
jb
lcall
xor
sub
popf
pop
pop
pop
pop
xchg
inc
ljmp
scas
sbb
scas
js
cwtl
push
mov
cwtl
andl
mov
arpl
jecxz
sbbl
mov
and
mov
xchg
fidivs
ljmp
lods
loop
cwtl
out
mov
xor
mov
es
flds
xor
pop
cs
xor
adc
cwtl
adc
push
or
ss
push
add
or
xchg
push
adc
mov
fwait
fwait
pop
bnd
arpl
add
add
adc
push
repz
mov
or
addl
inc
adc
pop
mov
sub
cmp
aaa
mov
rcll
ds
and
dec
xor
mov
int
adc
xchg
xchg
xchg
or
cmp
das
mov
int
dec
mov
test
js
hlt
rorb
add
inc
aaa
imul
cmove
or
aad
jnp
loopne
filds
fimull
push
sub
loopne
mov
fwait
bound
mov
cmpsl
jle
leave
imul
pop
mov
fwait
jecxz
mov
xchg
fnstenv
dec
es
aad
mov
fdivrl
and
aam
adc
nop
push
hlt
mov
jle
mov
mov
xor
fdivrp
std
mov
adc
icebp
inc
test
imul
pop
sbb
rcrl
lret
sbb
jle
push
lock
pop
mov
dec
sarl
lds
ds
out
sub
std
cmp
into
inc
mov
push
xchg
pop
loope
jecxz
mov
xchg
inc
jbe
test
psllw
xor
dec
pop
adc
cltd
jns
dec
inc
imul
dec
aaa
pop
js
pop
cmpsl
out
and
jge
inc
lods
in
push
xchg
or
jns
ffree
pop
popl
add
jb
xchg
sti
aam
cmp
ret
aaa
mov
mov
movsl
mov
ret
adc
jns
jnp
jecxz
cwtl
scas
adc
mov
sbb
sbb
aas
adc
clc
jae
sbb
or
cmpsl
movsl
movsb
mov
or
jle
or
cwtl
xor
mov
test
out
out
fwait
mov
jo
daa
aam
fwait
sub
xor
out
in
pusha
pop
pop
sub
pop
andl
mov
and
out
or
pop
xor
xor
sub
loop
sbb
fcomi
and
mov
mov
scas
scas
shrb
adc
cmp
negb
sbb
mov
test
daa
dec
dec
mov
and
cmp
repz
and
pop
cmpsb
out
sbb
movsl
test
cltd
fcmove
sbb
mov
insl
pop
xchg
dec
imul
into
rcl
lahf
mov
jne,pt
test
mov
sub
dec
mov
imul
sub
xor
cmp
das
push
mov
push
xor
sti
xchg
mov
lods
cmc
sub
jnp
pushf
jnp
outsb
mov
jecxz
cmp
mov
stc
packsswb
stos
bound
fs
adc
xchg
filds
dec
lds
adc
imul
in
inc
mov
or
aas
daa
push
fidivs
mov
sub
jmp
cmp
nop
or
mov
mov
inc
test
imul
xor
cmc
test
jae
addl
mov
in
jno
aam
imul
fcom
aad
mov
out
mov
lcall
push
add
xlat
into
int
dec
mov
es
inc
pop
push
test
pop
mov
dec
ror
out
xor
sbb
icebp
jecxz
fildl
sbb
popa
aam
mov
into
jge
add
ror
int3
xchg
sub
mov
push
pop
test
pop
cmpsl
pop
push
push
dec
sbb
fistpl
sbb
repz
mov
in
ja
mov
xor
out
dec
aas
pminub
fistps
fdivl
sbb
call
sbb
ret
int
lret
inc
shlb
push
shlb
pop
clts
enter
daa
inc
mov
xor
imulb
sbb
push
cmp
jmp
and
scas
or
repz
cli
push
or
repz
add
stos
mov
mov
shlb
cmp
mov
in
cmpsb
jge
mov
cmpsl
xor
ja
xor
call
dec
dec
cmp
xor
int
cmpsb
stc
inc
ds
ret
mov
in
or
mov
int
int3
mov
ret
fsubrl
add
pop
ret
mov
adc
mov
mov
addb
int3
add
adc
iret
rcll
push
mov
ss
inc
and
jge
push
test
cmpsb
movsl
hlt
lret
jg
mov
sub
or
cltd
jb
push
loopne
rol
clc
add
push
xchg
cmp
mov
mov
sti
add
gs
jl
jno
pop
out
in
jp
lds
outsl
cmpsb
fwait
lcall
andl
pop
sbb
push
outsb
dec
insb
cmpsl
ret
pushf
pushf
mov
js
orl
inc
std
and
jnp
out
es
jbe
shl
lock
fidivrl
xor
and
xor
and
lds
rcll
ja
lea
div
ljmp
mov
imul
lcall
or
lea
and
je
daa
mov
pop
mov
and
out
cmp
rorl
add
aaa
push
pop
adc
pop
fdivp
stc
sarb
cmpsb
movsb
xor
test
imul
pop
xchg
xchg
imul
mov
pushf
adc
test
push
sub
dec
xchg
or
cltd
sbb
sbb
aaa
cmpb
jo
mov
or
xor
inc
scas
out
insb
add
xchg
aam
out
popf
rcrb
in
xchg
dec
inc
in
data16
mov
lret
cmp
enter
push
push
push
mov
mov
mov
cmpl
sbb
adc
adc
pop
orl
pop
adc
sbb
lret
pusha
out
mov
in
mov
mov
cmp
aad
lea
and
add
insb
sub
push
mov
fistpl
mov
ret
or
sbb
add
adc
fdiv
outsb
dec
dec
mov
movsl
out
sub
xlat
rcl
loop
jno
out
xor
cs
js
shll
and
pop
lret
mov
pusha
mov
popf
fwait
cmovbe
push
cs
dec
test
cli
xor
repz
pop
push
adc
jle
push
jge
movsb
xor
scas
out
ds
jecxz
jmp
mov
bound
mov
inc
xchg
fstp
dec
xchg
outsb
rorl
aad
sbb
cmp
inc
in
push
bound
sub
push
jnp
xor
dec
sbb
cmp
sahf
mov
mov
xor
les
rclb
dec
mull
repz
call
mov
and
daa
jno
in
cltd
pusha
inc
out
mov
loopne
bound
ret
pop
pop
iret
cmp
jmp
push
push
dec
push
aad
add
cmp
xor
inc
jg
xor
arpl
mov
sar
mov
arpl
bound
lahf
popf
insb
adc
jns
sub
pop
push
sub
dec
xchg
xchg
jns
clc
inc
sbb
sbb
push
or
jle
xchg
out
gs
clc
or
push
lahf
cmc
inc
mull
in
jmp
adc
lods
aam
mov
pop
ljmp
push
lahf
mov
push
loope
imul
insb
cmp
sbb
push
jnp
out
movsl
mov
ljmp
daa
xor
xchg
lods
loop
dec
dec
in
or
sahf
lcall
jmp
aas
ds
loopne
push
fistpll
outsb
pushf
mov
xchg
ret
sar
divl
or
int
push
push
std
icebp
call
push
jne
arpl
js
outsb
insb
int
notb
push
xor
sub
xor
fcmovnbe
lea
adc
out
inc
push
inc
inc
mov
sbbb
jno
dec
cmp
mov
rorb
shl
push
cmp
movsb
xor
jne
sub
inc
orb
icebp
mov
movsl
insl
and
push
mov
cli
addr16
mov
jg
mov
add
cmp
jns
pusha
test
pushw
or
aaa
out
in
in
dec
lcall
aaa
cli
hlt
repz
scas
cwtl
fdivs
jmp
jmp
fimull
imul
lock
pusha
pop
jne
je
mov
fwait
jecxz
cmpl
sbb
cmp
xor
loope
lahf
aaa
inc
mov
jl
test
movsb
sbb
popl
div
push
add
adc
fwait
or
arpl
jns
daa
outsl
insl
loope
mov
mov
sub
bound
idivl
sbb
inc
pop
inc
inc
pop
repz
lods
lret
push
negl
cmp
fdivp
sysenter
inc
es
inc
cld
scas
test
negb
xor
mov
lods
lcall
and
mov
cmpsb
cmc
mov
mov
shll
test
into
in
or
cmpsl
das
cs
mov
inc
dec
adc
jge
adc
or
inc
push
outsb
inc
pop
adc
cmpsb
cmp
xchg
aam
ljmp
daa
push
cld
sti
outsb
mov
mov
jb
aad
loope
mov
mov
cmpsl
ds
outsl
popa
pusha
les
and
mov
add
xorb
call
sbb
push
mov
daa
lret
sbb
mov
loop
add
test
scas
mov
xorb
lcall
add
mov
sub
sahf
mov
push
addl
pop
mov
inc
adc
mov
pop
pop
sar
inc
jo
and
ljmp
repnz
jns
dec
cmp
mov
test
clc
jmp
mov
cmpsb
hlt
mov
pop
shlb
dec
lret
mov
and
addl
nop
movsl
lds
test
addr16
xor
mov
add
sbb
test
cmpl
xorl
or
push
es
add
fstl
xlat
aad
mov
lods
add
mov
mov
inc
push
ror
mov
xor
das
loope
mov
push
into
pusha
xchg
jge
cmp
aad
mov
das
and
jge
lods
jae
push
dec
in
call
rcll
in
sub
pop
push
sbb
or
test
adc
jg
fdivl
rcll
mov
cmp
or
xor
xchg
sti
rcrb
pop
fcoms
enter
addb
xor
iret
cmpl
data16
movsb
je
jl
inc
aas
stc
les
lret
or
cwtl
xor
leave
test
int3
mov
mov
cmp
scas
mov
inc
mov
gs
mov
daa
push
push
add
push
adc
jge
sub
mov
icebp
aas
adc
inc
lcall
jl
lahf
lds
fcmovne
lock
shlb
int3
inc
aaa
pop
insl
pop
pop
fnsave
fisttps
lods
movsb
cmp
inc
inc
sahf
mov
cs
call
sbb
and
test
fnstenv
jp
adcl
pop
and
insb
lcall
xorb
sarl
fnstenv
jae
pop
insb
imul
fsubl
jne
sbb
sub
pop
inc
lret
mov
pop
clc
cmp
mov
inc
add
cmc
jae
add
and
aad
cld
enter
jo
cmp
in
dec
cmpsb
inc
iret
ds
fstl
rcrl
add
inc
popl
mov
sub
lea
jle
imul
aad
ljmp
movsb
pop
int3
mov
sahf
clc
mov
lret
arpl
shrl
inc
push
jge
xchg
stos
jg
push
das
mov
xchg
sub
es
mov
pop
inc
push
mov
mov
ja
push
adc
pop
adc
in
nop
xchg
stos
test
adc
je
pop
test
icebp
int3
shl
jge
stos
mov
adc
leave
xor
inc
lods
or
dec
pop
pop
add
nop
push
bound
lcall
iret
xchg
aas
inc
add
jmp
push
dec
dec
ret
or
gs
xor
push
dec
pop
aas
and
icebp
imul
mov
call
sbb
int3
inc
subl
pop
mov
clts
fadd
sub
lcall
mov
cmp
hlt
mov
add
addb
jnp
mov
insb
arpl
jl
lods
in
cmp
stc
mov
xlat
push
and
dec
lahf
lds
std
icebp
aam
test
xchg
imul
ror
dec
stc
shrb
ds
orl
mov
mov
movsb
negb
inc
mov
pop
dec
sub
xlat
pop
shlb
cs
sbb
stos
adc
dec
lods
jbe
adc
jbe
cltd
aaa
mov
negb
mov
sahf
pop
out
and
arpl
rcl
add
and
push
rol
cltd
jge
jmp
push
and
jg
dec
dec
mov
sbb
inc
outsb
xor
loopne
adc
movsl
movsb
mov
rorb
ret
xchg
xchg
adc
scas
pop
push
lock
shrb
mov
xchg
xchg
dec
xchg
into
icebp
das
or
ss
cmc
dec
mov
adcl
call
repnz
in
imul
mov
clc
mov
cld
sti
mov
add
shlb
movsb
mov
inc
pop
imul
jle
movsb
sti
jge
jb
je
cmp
das
jge
mov
cmp
in
adc
and
push
push
or
ds
adc
push
xchg
inc
testb
mulb
or
negb
add
cwtl
jle
mov
push
xor
mov
pop
fcoml
dec
sahf
pop
xchg
pop
pop
sbbb
or
mov
inc
inc
push
mov
fdivl
stc
cmp
repz
add
inc
push
psubw
cmp
fmulp
xchg
das
es
scas
std
xor
xchg
jno
mov
clc
pusha
mov
or
mov
and
lea
out
je
incl
pop
mov
cmp
jecxz
and
xchg
add
fsub
mov
pushf
jnp
fucom
filds
mov
enter
pushf
ret
rorl
fidivs
inc
aaa
lea
pop
pop
xchg
jnp
and
aam
orb
and
jmp
xchg
fstps
dec
and
mov
adc
popa
test
mov
fildll
add
push
in
or
pop
test
scas
das
or
mov
jmp
imul
and
jo
divb
mov
jnp
js
sti
bound
pop
cs
adc
outsb
inc
lret
rcr
out
in
mov
or
jno
lret
aas
xor
iret
fcomi
into
jecxz
mov
scas
lods
lods
sbb
jge
xlat
jp
adc
push
pop
mov
dec
mov
pop
int3
rcrl
adc
and
push
in
mov
cmp
dec
add
lods
ljmp
adcb
push
mov
adc
aad
testb
addl
imul
dec
pminsw
loop
insl
je
je
pop
or
rol
cmp
cmp
es
jnp
pop
fimull
xlat
sbb
inc
add
loopne
pop
fsubl
inc
lds
dec
into
inc
idivl
mov
add
gs
mov
hlt
mov
rep
fnsave
jb
mov
jmp
insl
imul
push
bound
sbb
movb
ret
push
je
mov
push
jl
icebp
cmp
jmp
fnstenv
pop
inc
aas
push
lds
jecxz
sbb
or
addr16
test
mov
sbb
xor
lods
mov
dec
fwait
or
test
cli
adc
and
dec
pop
adc
push
hlt
mov
mov
or
repnz
xor
insb
arpl
push
add
sub
repz
scas
dec
dec
cmp
hlt
repz
dec
inc
scas
addr16
fdivrl
jp
inc
adc
cli
jecxz
push
adcb
imul
loope
daa
sub
enter
or
and
inc
dec
sub
nop
xlat
pop
aas
or
aaa
and
or
nop
or
pusha
fcoml
push
out
clc
cli
stc
mov
shlb
cs
push
aas
pop
mov
repnz
push
aad
incb
pushf
lcall
push
push
xor
sbb
sbb
adc
push
inc
lret
rclb
in
or
ret
or
rorl
rorl
loope
dec
and
and
mov
insl
insb
lods
into
inc
popf
rolb
xchg
insb
pop
loope
divl
mov
fwait
mov
inc
jp
or
and
ja
test
insb
ja
jne
mov
adc
jnp
lcall
mov
pop
adc
jne
fldcw
shll
sarb
jbe
mov
gs
int
lret
mov
jne
xchg
iret
dec
sbb
mov
scas
cmpsb
rcrb
je
add
lcall
push
stc
aaa
xchg
fcmove
ficomps
sbbl
or
sub
pop
mov
movsb
icebp
mov
mov
cmp
adcb
mov
mov
mov
les
out
adc
ret
inc
mov
push
bound
sbb
cmpl
inc
je
out
in
stos
mov
dec
loop
in
fcmovu
mov
jnp
inc
inc
mov
push
icebp
test
cmpsb
enter
outsl
mov
in
cltd
adc
sbb
aam
push
pop
fbld
push
adc
sbb
adcl
inc
pop
pushl
mov
mov
xor
gs
push
jb
pop
outsl
stos
adc
clc
idivl
in
pop
push
fstpl
es
div
ljmp
mov
out
sti
xchg
xchg
xchg
loopnew
rorl
lods
mov
popa
push
push
push
leave
call
movsb
jg
mov
xchg
dec
jns
and
xchg
lods
cmp
dec
cltd
push
sbb
rcll
dec
loope
and
out
in
xchg
enter
adc
jl
add
push
cmpl
lds
ljmp
test
imul
das
xchg
rcl
cmpl
fbstp
sub
push
add
jg
push
mov
out
out
or
jmp
out
sub
xor
mov
test
push
push
sub
mov
sbb
dec
inc
subl
imul
jbe
cmp
pop
push
or
stos
xchg
nop
pop
xchg
das
cs
inc
addb
push
jle
jl
cmpsl
sub
mov
pop
add
adc
or
jne
div
bound
fmull
lret
inc
xchg
hlt
iret
mov
mov
js
xor
in
sub
jmp
pop
mov
scas
ljmp
cs
dec
cmp
fidivrl
iret
sbb
or
xchg
push
loopne
int3
or
cmp
jae
aam
std
icebp
sbb
dec
shr
xchg
rcl
push
xchg
rclb
mov
mov
loopne
pusha
cli
push
ret
or
adc
jne
dec
add
ja
mov
inc
inc
aas
and
cmc
xor
xchg
out
hlt
sbb
fst
rcl
std
std
sti
aad
rcrb
pop
mov
or
mov
mov
sub
test
cmpsb
arpl
idivl
xchg
fistpl
cmp
and
jmp
and
cmc
call
movsl
movsl
pop
push
decl
clc
not
sbb
fsub
ds
leave
enter
addr16
jg
cmp
js
je
or
leave
pushf
out
jl
pop
fsubrs
pop
mov
pushf
in
jge
scas
pusha
inc
push
push
jnp
inc
rcr
sbb
xchg
pusha
pop
xchg
jmp
fidivrl
jmp
movsb
scas
scas
lret
mov
mov
lods
mov
ret
sub
xlat
mov
push
ss
pop
push
push
push
sbb
fmull
icebp
add
inc
sbb
cmp
aad
std
dec
cmp
mov
roll
insl
push
cli
shll
cmpsl
movsl
sbb
loop
ret
shlb
and
rolb
xchg
and
mov
fisttps
dec
ret
xchg
xchg
cmc
or
and
mov
inc
sbb
movsl
addb
xchg
out
jb
in
ds
int3
in
jmp
pop
adc
scas
pop
mov
loopne
in
cmp
sti
fs
into
int
dec
mov
es
inc
pop
push
test
xor
dec
ror
out
xor
jecxz
xchg
inc
sub
ss
icebp
test
mov
lods
ja
adc
mov
sbb
pushf
lods
cltd
cwtl
call
mov
imul
aam
popf
orl
push
push
push
sub
je
jle
jl
dec
jmp
push
pop
mov
jge
out
in
add
fisubl
xlat
push
or
aas
mov
xor
pop
dec
sti
adc
into
imul
and
test
ret
add
mov
mov
cmp
xor
cld
xor
xor
and
pop
cwtl
push
cmp
xchg
and
adcl
or
movsl
notl
xor
fmull
cld
jne
imul
and
mov
mov
hlt
or
jne
jmp
inc
pop
pop
pop
dec
shll
rolb
adc
daa
add
fists
fbld
daa
outsb
or
cmp
cmp
aas
movsl
mov
adc
sub
and
jb
jmp
mov
ret
sub
sub
lea
jo
mov
pop
sbb
leave
mov
in
mov
mov
mov
push
adc
dec
pop
adc
cmp
loop
pop
inc
sub
aam
addr16
imul
outsb
and
imul
dec
test
xchg
xchg
nop
xor
xchg
lea
cmpsb
jl
sbb
inc
xorb
inc
xor
sub
jo
push
repnz
stos
fisubs
jg
pusha
stos
adc
lock
std
int3
inc
xor
mov
cli
mov
lret
mov
lods
je
push
scas
mov
mov
pop
mov
popf
in
into
lods
out
dec
xchg
in
cmp
and
mov
dec
lock
shlb
fwait
aad
adc
cld
pop
icebp
xor
push
jbe
scas
std
jne
div
cmc
aas
rcrb
cld
imul
xor
jno
aam
jns
mov
and
sub
sbb
pop
enter
rol
inc
push
push
pop
mov
fyl2x
out
in
add
adc
push
sbb
add
jg
das
daa
cmp
lret
cmp
pusha
insl
scas
std
mov
push
lcall
xor
sbb
mov
push
sub
dec
or
inc
test
adc
sbb
push
push
or
test
and
jmp
aad
jo
push
add
jbe
pushf
cltd
fisubrl
aam
push
lds
push
cltd
cltd
jo
xchg
mov
mov
jo
fwait
test
lods
je
inc
jg
mov
call
mov
jl
mov
or
fldln2
pop
push
mov
xor
dec
leave
or
rolb
mov
movsb
je
add
xorb
lcall
rolb
jmp
xchg
mov
jecxz
insl
imul
fst
cmpb
xor
insb
jle
sbb
push
dec
and
in
sbb
in
or
out
add
inc
sahf
sub
xor
loopne,pt
sbb
addr16
push
jb
mov
pop
cwtl
add
cmp
sbb
mov
mov
insb
adc
stc
mov
jg
dec
mov
pop
stos
aaa
js
repz
push
adc
cmp
jnp
and
in
repnz
in
push
pop
clc
adc
aad
shll
add
jb
mov
movb
dec
insb
fs
pushf
push
test
mov
mov
sarl
and
adc
daa
int3
es
mov
out
sub
dec
dec
in
stos
xchg
test
sbb
and
fcoms
cmp
cmc
pop
aam
adc
adc
jbe
mov
mov
xorb
adc
repnz
pushf
cmc
aaa
fsubl
xchg
mov
sbb
lea
int
push
push
push
or
test
pusha
bound
cmovg
or
shl
xlat
push
lcall
scas
es
movsb
cmpsl
cmpsb
sub
outsl
mov
scas
lods
stos
sbb
cwtl
inc
mov
mov
dec
dec
mov
ja
xchg
nop
dec
repz
inc
dec
dec
and
xor
dec
push
cmp
and
pop
movsl
in
push
mov
pop
cmp
add
fcom
push
and
inc
sahf
push
scas
in
lods
ja
sti
aam
cmp
xlat
pop
jle
lret
mov
ljmp
in
add
out
sub
or
in
cmpsl
mov
jl
dec
dec
and
mov
adc
xor
ds
add
js
int3
or
stc
test
xor
mov
or
xor
outsb
clc
pop
pop
sub
leave
sub
sbb
sub
sbb
jecxz
add
mov
cld
repnz
jmp
clc
cmp
fsts
xor
push
lds
jecxz
sbb
add
jo
rorl
into
cmpsl
add
push
xchg
or
stos
or
sahf
insl
and
dec
mov
jbe
xchg
mov
mov
sbb
push
cmp
vpperm
cli
xor
fistps
dec
cmpsb
jl
movsb
testb
fisttpl
cmp
out
xchg
ret
mov
int
cmp
xchg
mov
mov
mov
test
jbe
dec
mov
imul
cltd
xchg
dec
dec
dec
mov
repnz
or
test
adc
mov
or
shrb
iret
jle
mov
std
icebp
call
mov
jb
jb
cmp
ret
sub
cltd
pop
aam
push
push
push
push
inc
das
sbbl
rolb
mov
cmovg
dec
pusha
aaa
shl
pop
jle
sub
aas
loope
dec
and
sub
hlt
add
insl
fcmovnbe
stos
test
pop
cltd
pop
iret
mov
mov
pushf
fwait
mov
stc
adc
and
xor
dec
sub
push
imul
cmpsl
call
mov
add
aas
fisubrs
pop
xchg
inc
jge
test
test
fisttpl
int3
dec
xorl
ror
xchg
jecxz
push
shlb
jg
js
not
ljmp
mov
xor
scas
pop
and
xlat
out
rorl
cs
enter
mov
jae
adc
jp
std
jne
clc
div
or
into
test
sub
imul
xchg
pushf
xor
dec
mov
cld
push
and
add
mov
into
add
jg
pop
lock
pusha
stc
mov
fildl
inc
aas
mov
sbb
dec
data16
pusha
faddp
cmp
and
inc
popl
xchg
arpl
popa
inc
mov
push
mov
xchg
and
lahf
ljmp
scas
adc
mov
sbb
mov
inc
testl
or
and
dec
mov
scas
xchg
fdivs
xchg
xor
mov
mov
sahf
push
mov
lret
mov
icebp
es
out
insb
lret
add
push
nop
es
mov
in
cmp
dec
xor
addr16
sbb
cmp
add
iret
mov
call
xor
outsb
sub
mov
xacquire
insl
insb
mov
push
aam
outsl
dec
mov
pop
pop
stc
pusha
sbb
call
push
dec
dec
sbb
jmp
fstpl
or
inc
mov
daa
fcomi
into
jecxz
mov
scas
lods
lods
fs
mov
push
cmp
popa
das
popf
sub
es
fldenv
mov
test
outsb
xor
pop
aas
jg
mov
daa
xor
stc
gs
repnz
push
mov
loopne
push
cmpsb
movsb
dec
inc
or
lods
stos
add
cmp
outsl
outsl
outsb
cmc
ss
pop
pop
mov
ret
int3
xchg
jnp
cmpsl
imul
or
push
xor
or
pusha
push
repnz
cmpsl
xchg
movsl
or
push
sbb
cmp
sub
sbb
mov
movsb
js
movsl
scas
or
lock
jge
jae
xchg
fs
cld
std
cld
lock
insl
adc
ret
aas
les
mov
rcrl
fisubs
jnp
outsb
lock
pop
les
jecxz
add
imul
pop
cmpsl
and
dec
shl
or
pop
inc
mov
aam
adcl
test
add
xor
mov
ret
mov
mov
mov
mov
popl
pushf
xchg
das
daa
and
dec
pop
pop
das
mov
aaa
ja
mov
gs
cmpb
or
sbb
mov
ret
lock
cmpsb
pop
sub
stc
aad
inc
loope
fidivs
jbe
movb
iret
sahf
inc
cmp
insb
imul
push
jge
ja
mov
inc
pop
pop
dec
xorl
call
dec
dec
dec
out
cmp
xor
and
or
mov
test
cmpsb
ja
lods
movsb
mov
adc
mov
inc
mov
fwait
xchg
mov
es
roll
jno
stos
fisubrl
push
dec
loope
push
popa
pusha
sbbl
xchg
push
inc
inc
out
or
sub
cmp
cmp
cmp
and
faddl
lcall
lret
shlb
cltd
inc
mov
mov
shl
sahf
push
adc
es
sub
in
nop
pop
push
fwait
cs
sub
cmpl
push
sbb
inc
xor
inc
scas
out
bound
or
xchg
rcr
xchg
dec
or
jo
jno
aam
lret
mov
shll
jg
jp
ret
mov
movsb
inc
dec
inc
inc
mov
jge
sub
or
pop
xchg
dec
aaa
pushf
fbstp
sbb
aad
cmp
cmc
rolb
movsl
mov
scas
or
imul
mov
sub
stc
xor
icebp
lods
push
aam
jns
mov
and
jo
mov
pop
ret
lret
jge
jo
pop
add
or
push
dec
push
mov
jmp
imul
icebp
aam
clc
iret
mov
pop
les
loope
into
int
test
xchg
jb
test
popf
sbb
sahf
add
in
pusha
push
clc
lgs
xor
pop
pop
xchg
outsb
ss
mov
push
adc
adc
stc
cmpsb
jl
inc
aaa
or
pop
mov
loopne
mov
movsb
adc
decl
dec
jne
cltd
push
dec
addr16
cld
sti
mov
lcall
cmp
insb
mov
movb
cmp
es
in
dec
add
in
sub
lahf
xchg
xchg
hlt
sbb
lret
lret
xor
xlat
les
mov
pop
jno
clc
jbe
adc
add
ljmp
add
mov
jno
mov
lea
pusha
jg
xor
popf
insb
fucomi
cmpl
inc
inc
mov
dec
push
push
mov
repz
xor
shl
sti
cmp
ret
arpl
lret
sub
scas
lods
sti
popw
push
cwtl
mov
cmp
outsl
aam
xchg
dec
mov
push
xchg
dec
dec
jb
mov
dec
mov
jg
dec
jb
sarl
gs
or
mov
cmc
stc
cltd
jmp
pop
push
stc
div
lods
mov
pop
fdivrp
lcall
or
dec
out
fs
out
jp
and
cmpsl
sarl
movsl
daa
dec
dec
inc
lret
out
leave
out
das
jle
jns
sub
popf
xchg
push
cmp
ss
icebp
test
mov
lds
add
adc
or
stos
and
cwtl
xor
mov
jmp
mov
arpl
jb
lods
pop
xor
fsubr
push
bound
addr16
out
mov
pop
mov
imul
or
out
inc
dec
das
divb
add
shl
inc
rcll
rclb
out
xchg
mov
adc
lods
int
int3
inc
pop
dec
push
xchg
arpl
xchg
pop
mov
mov
add
es
mov
das
test
and
inc
jbe
imul
dec
add
and
and
cmc
jno
in
jmp
push
rcr
aad
cli
hlt
lcall
lock
xchg
iret
sarl
mov
pop
sbb
mov
add
stos
jns
sub
mov
jecxz
jle
test
cs
sub
sbb
out
dec
in
loop
mov
ds
leave
clc
lds
sub
repnz
int3
or
jle
mov
rcrb
out
idiv
cld
sti
jmp
jge
arpl
enter
rcr
sbb
push
cld
clc
mov
sbb
pusha
or
rorb
push
sbb
and
push
push
into
jp
ja
push
maskmovq
divl
aaa
xor
and
cmp
push
js
movsl
int3
subl
mov
outsl
push
xchg
jo
mov
pop
pop
lahf
add
rol
mov
test
ja
nop
mov
cs
pushf
addl
sub
dec
es
cmpsl
out
mov
xor
dec
stos
lods
in
je
mov
icebp
mov
lahf
loopne
ret
or
mov
adc
push
mov
enter
mov
pop
cs
lret
jmp
cmp
mov
xchg
lods
push
push
dec
dec
ret
aad
in
xchg
loop
and
ds
adc
jecxz
ror
or
notb
clc
div
iret
sarb
pusha
pop
mov
pop
es
fs
push
fistps
popa
push
push
enter
pop
pop
lret
inc
inc
inc
inc
xor
push
dec
mov
or
cmp
adc
push
add
xor
push
or
dec
data16
int
jo
mov
jmp
fcomps
cwtl
xchg
xchg
xchg
sub
popf
pushf
imul
repz
adcl
pop
lcall
fbld
and
push
sbb
in
or
icebp
out
cmp
or
jge
movsl
cld
repnz
loopne
or
enter
xchg
mov
into
aad
out
jp
xchg
add
and
fnstsw
jge
jno
and
and
jno
mov
push
sub
and
sub
push
lahf
and
push
and
ds
push
lods
lcall
fstl
and
hlt
repz
mov
push
addr16
mov
jb
in
scas
es
fcomps
pop
push
mov
imul
push
or
add
pop
pop
sbb
mov
mov
adc
dec
adc
sub
test
fdivr
movsl
sbb
add
dec
fs
lods
mov
mov
xchg
mov
cmp
or
pop
and
cmc
subb
aaa
ja
push
je
adcl
ljmp
xor
add
adc
je
xchg
xchg
fsubs
loop
inc
pop
add
lock
sub
ret
push
or
mov
aas
jbe
xchg
ror
test
mov
fists
jecxz
lcall
push
pop
sbb
sbb
push
sahf
xchg
movd
and
sub
and
fmul
or
int
int
xchg
sahf
scas
pop
sbb
sbb
sbb
mov
pop
dec
data16
push
aad
xchg
xchg
mov
addl
sub
icebp
ret
or
outsb
inc
lret
inc
xchg
inc
cli
adc
or
mov
ss
cmpsl
aad
test
dec
jmp
clc
xor
movl
pop
xchg
and
ds
outsw
mov
push
mov
pop
pop
push
or
pop
xadd
xor
add
push
das
push
rcl
jl
push
lock
clc
mov
pusha
xchg
or
movsb
dec
lahf
or
mov
std
jbe
outsl
jne
vsqrtsd
jmp
mov
sub
pop
in
es
sbb
sub
inc
fistps
cmp
out
cs
xlat
dec
lahf
aam
or
rcrb
test
pop
cmp
or
cmp
stc
bswap
cmpsb
dec
lods
repz
cmp
push
add
shlb
mov
fs
mov
pop
mov
and
push
js
outsl
jno
push
pop
les
xor
push
cmp
sti
inc
push
jbe
aad
aaa
mov
rcll
ds
and
fcomi
dec
inc
dec
scas
xor
cmp
push
mov
movsl
fs
mov
js
pop
popf
add
adc
rsqrtps
clc
dec
mov
cs
jno
adc
adc
sbb
jne
pop
movsb
in
pop
or
jl
inc
stos
jmp
sbb
push
leave
pop
adc
xchg
cwtl
or
stos
inc
jo
outsb
dec
mov
dec
xchg
lret
mov
xor
test
scas
test
pop
pop
arpl
ds
mov
lods
icebp
sti
stos
fiadds
adc
pop
out
and
adc
xchg
es
testl
jno
rclb
nop
fs
cli
mov
or
cld
je
div
hlt
adcb
add
sbb
call
mov
mov
jbe
jne
lea
js
pop
jne
cmp
sbb
adc
push
dec
mov
int
jecxz
out
push
lcall
xchg
xor
jnp
xor
push
fcomi
sub
xorl
lods
stos
int
loopne
inc
loope
mov
sbb
mov
adcl
xor
cmp
sbb
adc
mov
popa
test
aaa
imul
add
stos
in
cmp
test
jecxz
jbe
fisttps
cld
sti
push
jmp
data16
xor
outsb
mov
xor
lock
pusha
pop
mov
push
and
leave
push
dec
dec
jmp
adc
push
std
sbb
sbb
movb
flds
adc
mov
or
jle
scas
stos
cwtl
xchg
ret
mov
push
add
in
fwait
mov
test
mov
jno
aam
aad
mov
push
push
shll
pop
adc
ljmp
nop
icebp
icebp
lock
mov
fcmovu
flds
inc
es
jge
and
aad
lret
jno
sub
or
rcl
adc
and
or
or
mov
sub
adc
and
repnz
and
jns
add
push
push
adc
and
xchg
int
outsl
sbb
lahf
scas
out
push
mov
insb
push
dec
fcom
jge
fsubp
loope
in
mov
mov
arpl
insb
sub
rorb
out
sub
cmpl
inc
sarl
jae
int
lods
push
jl
xchg
icebp
dec
jne
scas
loope
adc
xchg
jmp
push
pop
jge
add
xchg
mov
or
lcall
cmpsb
add
mov
cwtl
lds
clc
pop
js
cmp
in
xchg
sub
push
dec
xchg
adc
mov
sbb
int
add
push
rorl
repnz
mov
stc
cmp
shrl
push
push
cli
rcrl
ljmp
mov
pop
push
test
es
sbb
mov
xor
adcl
call
pop
add
xor
out
mov
jmp
loope
loop
lock
add
mov
push
js
loop
pop
mov
xchg
dec
inc
xor
addr16
cmp
adc
repz
xor
xlat
jle
mov
adc
sub
mov
mov
jg
jb
sub
mov
adc
and
xchg
pop
pushf
dec
adcl
add
mov
adc
les
jmp
xor
mov
pop
mov
outsb
or
das
lea
lods
jmp
dec
or
into
lds
call
addr16
dec
push
aad
movsb
dec
cmp
adc
in
ds
stos
lret
fwait
dec
rclb
test
fwait
adc
xchg
xchg
xchg
or
test
cmp
mov
cli
dec
frstor
cmp
hlt
js
jp
aaa
ja
sbb
dec
arpl
sbb
pushf
mov
enter
sbb
ret
scas
or
repz
jp
stos
dec
inc
add
imul
jp
int
cmp
lds
push
xchg
dec
in
mov
fs
sahf
sub
and
in
sub
fs
adc
fmul
add
jnp
enter
jns
rcll
movsb
mov
or
rol
lcall
mov
xor
push
xchg
insl
insb
mov
and
sbb
mov
mov
ret
movsb
push
cld
push
icebp
push
add
ss
shll
mov
mov
movsl
dec
out
outsl
pop
pop
sar
xor
xchg
jno
xchg
or
lret
insb
and
mov
inc
mov
push
in
lea
add
inc
adcb
jnp
addr16
or
mov
scas
lock
push
lcall
pop
imul
cwtl
cwtl
repnz
jbe
out
mov
xchg
ret
gs
jb
mov
jp
mov
and
mov
push
mov
mov
or
cltd
sub
mov
repnz
xor
xchg
test
and
mov
repz
je
inc
jae
fdivr
std
daa
jl
dec
ss
es
scas
mov
push
xor
adc
lock
sbb
mov
sub
dec
sub
inc
inc
inc
and
jo
dec
int
dec
inc
pop
pop
mov
inc
shufps
stos
call
xchg
or
iret
dec
mov
lret
xchg
clc
dec
lret
pop
mov
inc
rclb
dec
mov
cmp
enter
mov
es
or
in
push
scas
aam
push
lcall
aad
mov
ficoms
pop
lcall
pmaxub
xcrypt-cfb
cmpsl
cmpsb
in
mov
sub
inc
mov
ret
lahf
jge
loopne
adc
add
addb
sub
enter
dec
ret
add
test
sbb
loop
gs
cmpsb
fcmovnb
dec
leave
lock
mov
xor
mov
sti
mov
test
adc
in
bnd
outsl
out
pop
lret
sbb
lods
inc
xchg
push
mov
popf
sbb
out
fucomi
pop
inc
inc
inc
lret
adc
sbb
push
or
mov
mov
fmuls
icebp
push
scas
lea
xchg
stc
jmp
data16
cmpsb
movsl
movsb
sub
lds
pop
ds
lods
stos
inc
stos
data16
mov
dec
and
pop
mov
es
cmp
cli
outsb
mov
scas
lea
xchg
and
dec
adc
call
imul
add
loopne
cmp
mov
mov
hlt
sbbb
inc
test
arpl
jmp
mov
fistl
push
js
inc
subb
andl
push
dec
dec
cmp
inc
xor
sbb
cmp
push
xchg
adc
adc
cli
sub
cwtl
xchg
xchg
or
push
mov
push
imul
mov
loope
jbe
mov
adc
and
fsubrp
addl
in
js
push
push
iret
mov
mov
pop
fiadds
insl
mov
add
add
inc
dec
xchg
jo
arpl
adc
cld
imul
xchg
xchg
lret
mull
pop
pushf
adc
bound
lods
out
jne
dec
dec
dec
xor
test
xor
scas
call
jecxz
ror
call
lahf
fnstenv
test
js
dec
xchg
aam
enter
add
fcos
xor
loopnew
cmpsl
iret
dec
clc
mov
insl
mov
jne
jecxz
jbe
js
decb
movsl
and
es
and
jmp
fcomps
dec
and
mov
adc
ret
xchg
push
pop
push
sub
movsl
push
mov
int
and
lds
mov
roll
arpl
testb
pop
fisubrl
arpl
adc
mov
in
dec
mov
mov
mov
sub
mov
add
sub
jmp
push
inc
xor
push
das
jb
sbb
push
adc
push
into
int
ds
data16
and
mov
ret
pushf
fwait
movsb
les
xchg
cmp
hlt
cmpsl
adc
dec
cli
cmp
mov
push
cmp
cmpsb
add
jb
in
repnz
add
cwtl
fmul
and
pusha
mov
testb
inc
mov
and
mov
out
xchg
xchg
pop
repnz
push
iret
stc
xchg
jle
stos
cld
cmpsb
shrb
es
fistpll
push
dec
jnp
jecxz
les
cmp
push
mov
and
xchg
into
inc
cli
fldcw
inc
not
stos
ja
enter
dec
cltd
testb
add
in
push
push
ljmp
stos
fisubrl
popf
sub
imulb
imul
add
std
leave
push
nop
imul
into
add
jns
adc
cmp
cmp
sti
or
ljmp
imul
repnz
pop
jb
adc
movsb
pop
test
and
cmp
cmovle
push
cli
cmp
cwtl
jae
pop
xor
std
xor
dec
inc
push
dec
and
xlat
movsb
in
and
add
psubd
clc
xchg
or
ficompl
test
xchg
sahf
gs
jb
mov
enter
mov
repnz
jge
ret
mov
dec
mov
popf
repnz
push
sub
test
sbb
xor
jp
pop
test
sbb
cmp
fistpll
add
mov
out
or
lret
mov
jmp
int3
mov
adc
push
cmp
shrl
outsl
hlt
add
pop
es
and
cmc
sbb
icebp
roll
int3
jl
jmp
cmp
aaa
ss
push
mov
aas
mov
fcoml
dec
stos
mov
mov
ret
cmp
add
rcll
sahf
or
sub
lahf
popf
pushf
push
mov
test
ret
ds
cmc
dec
ret
fbld
push
pop
nop
push
push
aas
jg
inc
sbb
mov
sbb
mov
mov
in
in
xchg
cmpsl
mov
xchg
clc
imul
gs
fiadds
iret
jno
push
pushf
mov
xchg
rcl
and
test
jbe
jecxz
pop
icebp
daa
dec
xor
sarb
aad
int3
es
mov
lret
daa
or
iret
xor
cmp
cltd
ljmp
sub
idivb
cmpl
push
dec
mov
insl
mov
imul
fstpl
push
insl
pop
les
push
mov
jns
inc
dec
cmp
cli
lahf
mov
xchg
add
push
jns
mov
pop
mov
gs
inc
lret
mov
mov
cltd
mov
dec
mov
inc
xchg
bound
in
mov
test
insb
xor
push
scas
adc
cmp
sub
jp
in
out
out
adc
dec
xchg
aad
nop
div
in
iret
xor
fmull
jne
push
std
xorb
jb
leave
pop
mov
mov
xchg
xor
sarb
sub
sub
inc
shlb
out
das
stos
insl
enter
rcrb
adc
xor
jae
sbb
lds
adc
rcl
les
js
test
repz
mov
pop
inc
mov
push
lret
arpl
or
iret
outsb
insl
insb
sub
add
push
adc
pusha
subb
or
cmpb
add
mov
in
dec
dec
pop
out
inc
test
je
push
adc
insb
mov
mov
stos
test
or
mov
jmp
xchg
and
rcr
xchg
xchg
insl
mov
hlt
pop
pushf
or
xor
daa
es
jg
mov
sub
ss
stos
mov
pop
cmpsl
out
and
js
in
cmpsb
or
aad
mov
xchg
sar
js
jno
sbb
lds
arpl
lods
outsl
call
mov
cmp
sbb
es
mov
daa
addb
xchg
das
stos
insl
enter
dec
cmp
or
inc
sbb
mov
test
cmpsl
fcompl
jae
push
js
sti
insl
cmp
add
loope
in
repz
test
data16
mov
fcomps
push
notb
fists
jo
adc
leave
and
push
cmpsl
test
dec
inc
inc
int3
add
mov
mov
inc
cmpsb
sub
xor
loopne
scas
push
mov
mov
outsl
scas
imul
cwtl
adc
push
mov
pop
adc
pop
xchg
sbb
xchg
pop
stc
inc
outsb
notb
repz
rolb
sub
jg
sub
out
mov
jns
repnz
push
lcall
mov
out
leave
xchg
cld
aad
cmp
les
int
or
leave
imul
test
iret
mov
mov
jae
mov
mov
xor
jnp
or
sbb
icebp
cmp
cmpsl
js
and
inc
sbb
leave
or
shlb
clc
or
les
repz
cs
xchg
std
sti
mov
jo
addr16
pop
les
fcomps
std
pop
pop
bound
subb
or
jnp
push
mov
add
add
fnstsw
xor
mov
cwtl
xor
push
imul
sub
data16
dec
push
xchg
imul
cmp
repz
dec
mov
xchg
andl
xor
jo
ja
inc
xor
nop
and
and
sbb
pop
or
dec
scas
out
pop
sub
push
mov
fidivrs
fsubrl
imul
jb
aad
inc
js
mov
or
push
popa
pusha
imull
mov
daa
add
sbb
pop
push
adc
mov
sub
movsb
xchg
testl
xchg
inc
cmc
lea
and
popf
shll
add
push
xor
insl
js
dec
outsb
insb
and
cltd
xor
pop
lret
push
lds
dec
dec
dec
outsl
xchg
mov
les
dec
lret
ja
loopne
mov
mov
loopne
fcomip
stc
rclb
out
inc
adc
into
imul
push
xchg
sbbb
sub
mov
test
cmpsl
xor
stc
leave
jbe
dec
or
gs
mov
pop
push
cmp
ja
or
push
pushf
add
shr
test
push
out
div
cmc
mov
scas
add
ja
jo
sub
les
dec
loope
jb
popf
push
andl
add
int
xchg
jl
stos
shll
bound
inc
push
push
push
out
in
icebp
bound
loop
sbb
out
std
sbb
popf
dec
aas
mov
gs
loope
cld
jl
adc
pcmpeqb
jae
pop
cmp
gs
test
cld
jl
imul
pop
cltd
sbb
daa
sub
stos
xor
dec
mov
es
cmp
pop
cmp
cmc
movsb
push
int
in
or
push
mov
push
mov
icebp
add
psubw
xor
add
pop
ds
ss
pop
scas
into
inc
lcall
and
mov
fmuls
popa
cs
daa
es
adc
mov
and
enter
mov
aas
xor
aaa
jo
data16
jne
js,pt
jbe
je
psubsb
push
xchg
xlat
pop
or
add
xchg
out
xchg
insl
mov
or
xlat
idivl
mov
pop
jecxz
push
rclb
jg
popa
fisubl
mov
mov
xor
pop
fsubrl
push
leave
adc
and
aad
mov
fists
test
or
xor
and
cli
jo
and
rclb
jmp
cmpsl
subl
mov
fidivl
faddl
outsb
insl
je
xor
ficoms
pop
and
mov
rol
push
jnp
ljmp
std
shll
cmp
adc
loop
loopne
jae
sub
lret
add
das
push
ret
xor
push
xchg
xchg
mov
js
mov
cmp
pop
daa
es
cli
mov
inc
push
lcall
arpl
or
gs
push
add
out
jmp
mov
cli
jecxz
les
popf
lahf
inc
cld
data16
jle
xor
sbbl
je
test
pop
sarl
popa
adc
xor
push
lret
lahf
xchg
mov
repnz
sbb
pop
push
pushf
dec
pop
popl
aam
add
fsubrl
negl
stc
add
mov
lahf
clc
push
pop
es
xchg
cs
outsl
pop
nop
into
imul
xor
loop
in
je
das
out
test
dec
enter
sar
aad
in
or
sbb
dec
and
divl
mov
push
stos
daa
mov
inc
xchg
test
into
icebp
mov
ror
sti
ret
xchg
xchg
adc
xchg
loope
stos
movsb
test
inc
xchg
nop
or
inc
test
or
sbb
push
pop
lds
popf
pop
aas
mov
xchg
add
femms
xchg
div
cmc
mov
addr16
rcr
dec
add
push
mov
outsl
test
je
push
out
jno
es
mov
fistl
jecxz
sbbb
sub
mov
lock
mov
test
ds
hlt
ds
inc
leave
fstl
cli
je
jmp
xor
or
mov
or
push
divl
loopne
imul
push
push
sti
fs
das
out
cmp
test
nop
adc
pop
fnsave
cli
cmp
hlt
test
add
daa
pop
js
aaa
sbb
in
cwtl
cmp
push
stos
cltd
cwtl
sbb
rcr
mov
insl
adc
pop
push
sub
and
fnsave
mov
cmp
xor
push
rcll
adc
lcall
aas
insb
cltd
jmp
insl
aad
adc
bswap
mov
lods
sti
loop
xor
inc
dec
rolb
hlt
std
cld
dec
inc
addr16
push
arpl
lret
mov
out
push
xchg
xchg
jnp
cmpsl
imul
icebp
xor
xor
cs
repnz
mov
sub
push
sbb
fdiv
les
int
mov
mov
mov
int3
rcll
sti
jecxz
jo
pop
loopne
xchg
test
imul
pop
push
das
and
pop
pop
sbbb
or
lret
shlb
lret
cmp
out
in
popa
xor
hlt
xor
inc
aas
clc
xor
cmpsl
fildl
negb
xor
rorl
cwtl
int
int3
rcrb
xchg
xchg
and
in
pop
enter
mov
push
pop
testb
dec
inc
add
pop
push
sti
testb
mov
and
insl
lret
adc
femms
xchg
aam
cmc
dec
faddl
add
fs
push
cli
mov
lret
mov
lods
test
jge
cmp
mov
das
dec
dec
inc
loopne
mov
mov
cmp
cmp
cmpsl
scas
sbb
or
cmp
jl
add
mov
or
cli
in
clc
repz
jnp
push
adc
push
es
ret
mov
jbe
dec
insb
pop
loopne
pop
aad
dec
mov
cmp
jge
push
adc
sbb
mov
icebp
jmp
jmp
fdivs
aad
fs
cld
cmp
aad
leave
enter
les
into
cmpsl
mov
popa
mov
sbb
mov
push
sub
mov
and
bound
ja
mov
addr16
addl
dec
out
in
scas
insb
js
femms
popa
mov
cli
orl
filds
jp
ja
jo
mov
mov
outsl
outsb
mov
pop
sarb
movsb
cmp
pusha
pop
pop
shrl
jns
xor
lods
pop
sub
mov
div
mov
inc
lret
icebp
in
nop
xchg
stos
test
mov
gs
js
add
add
gs
lahf
sahf
popa
fwait
shll
rolb
xchg
lret
lea
push
jne
sub
and
pop
pop
adc
jnp
push
adc
and
rorl
xchg
xlat
or
loopne
ffreep
sbb
in
vcomiss
cmpsb
rorb
xchg
int3
int3
lret
mov
mov
cmpsb
cwtl
pushf
mov
sub
pop
notl
mov
jp
and
ja
sti
inc
ljmp
sub
outsb
pop
cmpsl
or
pop
and
icebp
fisubs
bound
xlat
aad
dec
pop
mov
add
in
fmul
leave
cwtl
push
popa
mov
shlb
dec
xorl
fwait
aas
ss
pop
pop
test
popa
lds
jns
and
xchg
stos
adc
dec
call
adc
and
fisubl
push
sbb
adc
xchg
stos
movsb
mov
mov
cltd
adc
arpl
add
jl
mov
js
data16
or
jo
inc
lods
and
cltd
and
bound
adc
ljmp
or
out
add
dec
pop
sbb
add
mov
or
xchg
test
mov
scas
adc
sbb
mov
jno
xor
lea
es
pop
pusha
xor
jne
mov
aaa
ja
sub
idivb
jge
push
sbb
or
xabort
adc
xor
or
lock
aas
xchg
dec
xchg
add
mov
insb
lds
je
dec
cmp
pop
ret
stos
out
jbe
jns
and
jg
stos
adc
dec
dec
lds
out
mov
out
inc
jp
cmp
add
cmpsl
mov
fstl
and
add
dec
lahf
sbb
cmc
dec
frstor
xchg
lea
cld
outsb
insb
and
pop
mov
and
push
js
sub
in
inc
dec
dec
and
adc
jecxz
push
ret
in
in
jmp
mov
aam
push
xor
cmp
rclb
lock
fwait
data16
mov
and
mov
lret
mov
pop
push
inc
ret
insb
mov
sub
bswap
mov
stc
out
xor
inc
push
add
push
adc
cltd
in
xchg
sbb
in
mov
or
aad
nop
imul
test
mov
pop
mov
rcll
ret
movsb
xchg
shll
pop
pop
test
xor
xor
cs
sub
ds
adc
xchg
jmp
xchg
cmp
cmpl
popf
mov
add
jg
cli
int
call
push
popa
je
jb
js
dec
outsb
insb
dec
test
xchg
pop
dec
adc
jb
jg
jge
je
lret
rolb
repnz
loope
movsb
ss
mov
or
jecxz
lret
and
lods
stos
arpl
mov
mov
xor
xchg
lcall
add
sub
test
inc
mov
jno
sahf
push
sbb
ss
repnz
repnz
add
stos
jmp
sbb
loopne
loopne
fbld
sti
mov
iret
arpl
sub
inc
jae
daa
aas
push
mov
sti
shlb
je
jno
mov
cltd
push
dec
or
xor
sub
dec
leave
jecxz
or
adc
jnp
add
clc
adc
loopne
and
rclb
lahf
sbb
add
and
paddsw
inc
or
and
xchg
sbb
pusha
fstpl
lods
lret
sbbl
rolb
xlat
in
ja
push
push
inc
sub
cmp
icebp
out
adc
dec
rcll
ds
push
cmc
xchg
aaa
push
xor
movl
and
mov
cwtl
mov
push
aaa
xchg
adc
push
mov
push
sbb
mov
xor
cmp
and
mov
mov
lock
scas
bound
mov
fdiv
leave
bound
lcall
sub
into
sarl
jb
lret
adc
pusha
and
ret
sub
sub
jo
pop
jae
mov
mov
xlat
dec
popf
aam
in
pushf
xlat
xor
lahf
cli
or
mov
int
mov
out
xorl
adc
sti
sub
ret
das
lods
fnstcw
cmpl
jnp
pusha
pop
jns
fisttpll
adc
popa
shrl
adc
mov
loopne
jns
cmp
mov
leave
sbb
cmc
fdivl
xchg
sbb
adc
lahf
int
pushf
addr16
mov
dec
fists
or
dec
adc
dec
and
fwait
sbb
add
cld
inc
lret
sti
ds
fstpt
outsb
gs
or
pop
xor
push
out
out
bound
push
ljmp
push
dec
mov
sti
push
rcll
ss
aas
jbe
xchg
xchg
push
popl
mov
sub
cltd
mov
inc
inc
push
jle
jecxz
sub
mov
ss
xor
sbb
mov
xchg
mov
push
ficoms
and
cmpsb
lret
shl
jnp
lahf
sahf
popf
mov
fs
std
aad
mov
cld
mov
jns
ja
stos
xor
jle
pop
ja
or
jle
add
or
sbb
inc
shrl
fistpl
mov
icebp
fldt
arpl
fwait
jo
pusha
cmpb
cmpsb
je
push
xchg
or
test
sub
pop
das
jns
test
xor
pop
adc
roll
lcall
out
pop
andb
scas
out
push
sub
mov
sbb
mov
pushl
loope
imull
mov
fs
sbb
push
jmp
insl
pop
pop
and
sarb
mov
push
pusha
jne
loopne
notb
sub
ljmp
mov
lret
sbb
sbb
mov
add
cmp
ret
cmp
sbbb
call
mov
shrb
addr16
xchg
fxch
pop
xchg
mov
shlb
sbb
ret
lret
jge
and
jmp
push
jecxz
cs
jae
hlt
fisubrs
inc
stc
clc
inc
stos
cmc
hlt
cs
dec
mov
mov
shrb
mov
push
popa
mov
push
add
mov
mov
pop
dec
pop
adc
divl
scas
loope
fs
sub
xchg
mov
pop
jno
pop
add
aas
adc
adc
aad
bound
in
inc
pop
push
repz
lcall
subb
test
jae
xor
int
jnp,pn
mov
scas
repnz
cmpb
and
fdivs
rcrl
push
adc
xor
in
movsb
xor
or
xchg
jns
cli
loope
mov
mov
div
test
xor
mov
adc
mov
insb
fsubr
mov
je
pop
pop
pop
xor
lret
sub
jae
jle
notb
jmp
sbb
jecxz
cwtl
shlb
lods
add
insb
inc
daa
cld
cmpsb
or
fcmovne
imulb
iret
mov
add
sbb
pushf
xchg
dec
popf
lea
dec
popf
jbe
leave
aaa
push
or
cld
mov
sbb
repz
xor
add
or
jno
bound
sbb
lea
hlt
mov
push
lods
inc
jbe
fcomp
fcom
mov
xchg
shll
fstpl
fcmovb
jne
mov
sub
jns
lret
mov
sub
in
jl
jmp
mov
pop
pop
pop
dec
scas
loop
jle
jne
in
jge,pn
ja
sbb
icebp
fwait
mov
xor
pop
in
xchg
mov
cmp
cmpsl
movsb
mov
or
test
cltd
cwtl
les
jge
inc
sahf
notl
pop
and
popa
aas
leave
ja
insl
insb
mov
jns
mov
fistpl
pop
xchg
jle
sbb
add
inc
push
dec
cmpsb
imul
sub
enter
fbld
jb
popa
jmp
pop
mov
adc
int
inc
pop
daa
push
xchg
arpl
xchg
xchg
mov
mov
inc
loopne
testl
pop
cs
sbb
sbb
gs
adc
push
cmp
gs
or
mov
pop
fsts
cmp
pop
push
loopne
inc
mov
sbb
xchg
xchg
dec
out
cmp
ror
ja
cmp
lods
push
push
push
divb
mov
movsb
push
pop
inc
inc
pushw
xor
in
sub
in
aam
in
cltd
adc
and
mov
mov
loopne
xchg
xor
dec
faddl
cltd
lds
mov
push
movsb
repz
xchg
mov
jns
mov
push
cwtl
pop
das
dec
loope
push
popa
pusha
gs
pop
ror
ret
ljmp
push
or
dec
cmp
stc
cmp
and
mov
stc
sub
cmp
mov
scas
lcall
mov
mov
fisubrl
or
sub
jg
and
pop
clc
fisttps
sbb
inc
sbb
adc
std
sub
add
ljmp
lahf
add
cmp
test
sbb
ror
lahf
loopne
pop
xor
fsubl
or
cld
xchg
xchg
mov
outsl
outsb
push
mov
stc
mov
leave
pop
dec
jl
mov
shrb
movsl
jno
sbb
add
psubsb
dec
cmp
jno
mov
in
aas
js
cmp
adc
cmp
lods
lods
enter
xchg
xchg
or
in
scas
mov
andl
imul
test
mov
push
aam
push
rorl
jp
lds
call
push
push
dec
push
mov
lcall
shl
shl
push
div
push
xchg
repz
sbb
add
adc
movsb
add
dec
lods
rcrl
xchg
push
test
dec
lea
clc
jb
sub
inc
popf
mov
inc
addl
and
cmc
mov
push
outsb
and
stc
out
push
and
int3
xor
or
cld
sti
push
and
jno
outsl
test
outsb
imul
or
mov
pop
js
in
inc
inc
jnp
fnsave
push
sub
fstps
dec
les
and
flds
rorb
or
dec
sti
mov
divl
sbb
mov
adc
mov
and
cmp
and
mov
arpl
daa
es
xchg
fsts
fistl
icebp
xor
addr16
push
and
pop
inc
and
push
dec
push
loop
inc
cmp
mov
movsb
and
in
cmp
fistl
int3
mov
scas
xor
xchg
lahf
pop
jb
adc
mov
enter
inc
lahf
daa
push
es
testb
add
xor
lds
cmp
mov
scas
xor
sbb
mov
cmc
push
insb
lret
fisubl
lcall
mov
inc
mov
inc
outsl
movb
ja
je,pn
rolb
mov
mov
call
xor
and
enter
imul
lea
mov
stos
test
jns
xchg
jbe
lahf
jae
test
mov
jge
lcall
sub
test
neg
sbb
mov
mov
and
sub
push
sar
repnz
mov
loope
dec
cmp
adc
fnstenv
sub
leave
adc
pop
loopne
fdivp
xor
add
dec
int3
cmp
mov
push
mov
and
mov
jnp
mov
shrb
adc
adcl
cmp
stc
xor
ljmp
push
jg
jge
xchg
ljmp
or
mov
cmp
push
or
cli
scas
cmp
loope
inc
pop
fstp
fistpl
addr16
mov
int3
cmp
leave
fidivs
push
out
jo
adc
mov
jne
dec
inc
jl
cmpl
dec
jecxz
aas
fbld
xor
ds
aas
scas
and
adc
loopne
push
scas
scas
scas
ret
ror
sarb
sbb
xchg
xchg
mov
cld
push
movsb
idivl
jg
outsl
rcr
hlt
lea
pop
insb
push
bound
jg
jle
adc
out
stc
pop
inc
inc
sbb
out
add
or
testl
std
cmpsl
inc
pop
cmc
xor
push
lret
sub
loop
fs
in
push
mov
xchg
xchg
arpl
push
lods
pop
pop
add
pushf
sarb
es
inc
add
sub
and
outsb
adcb
xor
or
pop
mov
jp
lods
out
sbb
cmp
shr
push
and
pop
and
clc
cld
sti
mov
nop
shll
outsb
loop
mov
mov
pop
frstor
mov
test
dec
dec
je
scas
xor
push
jge
fcomps
js
ss
stos
lret
xchg
ds
adc
fists
js
push
sbb
jmp
mov
popf
push
insb
mov
insl
mov
jno
aam
insl
orl
js
loop
pop
adc
adc
in
pop
ss
or
pop
jecxz
dec
lock
cmp
sarl
hlt
hlt
div
leave
inc
movsb
or
adc
xchg
movsb
lcall
mov
mov
sahf
adc
push
xchg
pop
sbb
mov
test
mov
adc
jecxz
lcall
xor
roll
aad
pop
test
xlat
scas
xchg
pop
lods
imul
push
xchg
dec
pop
inc
push
test
iret
into
pushf
xchg
jne
push
rorb
cwtl
jg
inc
xchg
mov
push
lahf
in
inc
mov
xchg
xor
or
sbb
xor
dec
xlat
jmp
xor
or
sub
js
aad
leave
leave
fstl
inc
or
cld
add
std
icebp
call
shlb
outsb
cwtl
sbb
add
stc
xchg
jne
in
dec
sbb
ror
xor
ljmp
inc
or
or
rcrl
aam
psubw
push
cmp
sub
std
add
sarb
stc
pushf
pop
lcall
mov
mov
iret
add
mov
es
dec
lahf
mov
jns
push
xor
popf
pop
jg
jge
push
icebp
xor
jae
aam
repnz
mov
cmp
insl
aam
pop
mov
cmp
stc
dec
cmp
push
add
int3
lret
lret
mov
dec
push
push
push
nop
inc
inc
xor
fwait
and
inc
in
fsubrl
mov
dec
out
jno
adc
fimull
ds
test
rcrl
imul
pop
div
hlt
repz
jnp
cli
bound
fsubr
or
or
mov
and
cld
je
and
movsl
dec
dec
xchg
popa
mov
repnz
out
jmp
push
sub
pop
xlat
aam
loop
pop
inc
leave
int
mov
cmpsb
std
and
ss
mov
mov
sahf
pushf
or
lea
testl
das
test
dec
std
hlt
sahf
sbb
push
push
adc
fwait
adc
pop
add
xor
adc
cmp
or
addl
cwtl
xchg
lods
fdivrs
xchg
mov
push
push
cmpb
cltd
ret
mov
out
mov
pop
pop
ror
ss
jle
cmp
xor
xchg
adc
bound
xor
xchg
mov
cmp
xlat
test
jp
mov
cli
and
xchg
xchg
xchg
adc
jle
test
hlt
in
mov
in
shlb
mov
adc
fucomip
addb
jge
ljmp
fdivrs
dec
dec
out
addr16
mov
adc
insl
dec
loope
dec
ficoms
fistl
imul
adcb
scas
pop
push
or
mov
mov
lods
jb
dec
fwait
pop
leave
xor
es
pop
orb
test
sub
sbb
mov
push
cmp
pop
jecxz
ljmp
add
imul
or
add
addl
std
cld
test
xchg
cmp
push
dec
ja
fbstp
dec
fbld
mov
cmpsb
xchg
pop
dec
dec
inc
loopne
addl
inc
cli
add
push
xchg
pusha
sti
xchg
in
aad
push
in
test
or
sbb
cld
mov
mov
into
out
jg
subb
out
and
mov
xlat
lahf
rcl
clc
mov
ret
shl
pusha
pop
pop
in
out
dec
dec
aas
xchg
iret
adc
pushl
xor
idivl
loopne
ss
or
lods
int3
cld
cmp
test
and
std
xchg
mov
jae
push
cwtl
mov
mov
pop
pushf
adc
mov
adc
test
cmpsl
sub
leave
xchg
mov
push
xchg
je
int3
mov
or
cmpsl
out
mov
lock
dec
jmp
xor
jno
shrl
adc
insl
and
getsec
jp
mov
mov
xor
mov
and
jae
scas
cmp
out
push
adc
icebp
mov
xor
ret
xor
rorl
or
sub
or
cmc
repz
int
inc
mov
add
sub
adc
mov
xchg
pop
aad
cli
xchg
mov
popa
in
push
std
push
popa
bound
out
inc
pop
pop
leave
test
xor
in
aaa
sti
cmp
in
cmp
fidivs
frstor
inc
inc
inc
stc
pextrw
mov
ja
addr16
mov
mov
sub
ror
into
push
jns
xchg
xchg
insl
insb
test
test
sub
and
pop
mov
sub
push
and
je
lcall
add
mov
call
fcompl
bound
or
subl
pop
jmp
cmp
cld
sti
push
jp
ret
rclb
cmp
jo
insb
mov
or
push
out
dec
inc
and
mov
dec
mov
adc
xor
repnz
inc
and
sbb
icebp
out
fiaddl
or
sbb
mov
sti
mov
jl
call
int
adc
popf
idiv
and
test
pop
sbb
add
push
jne
xor
push
movsl
push
int3
cli
mov
int3
push
lods
inc
and
or
in
inc
dec
es
xor
daa
sti
mov
ret
cmpsb
xor
popa
push
cmp
out
adc
xor
dec
fwait
lahf
dec
jo
sahf
mov
testl
xchg
and
jp
mov
mov
loope
cmp
cmp
jno
in
repnz
clc
out
out
in
movsb
stos
add
icebp
xlat
aad
pusha
and
js
xchg
cld
aad
xor
sub
outsl
ja
leave
xor
xor
mov
mov
pop
in
stos
outsb
in
in
lods
pop
and
cltd
mov
das
push
xchg
mov
aam
mov
jb
test
outsb
and
push
or
clc
lcall
add
mov
test
jecxz
mov
jl
insl
popl
ss
push
push
sub
jmp
adc
push
int
push
int3
push
lods
lods
repnz
cltd
inc
ret
push
scas
add
shrl
clc
fistpll
scas
sbb
sub
ss
rcl
pushf
in
mov
int3
lret
mov
es
cmp
scas
xchg
nop
adcl
mov
mov
xor
mov
cwtl
cmpl
xor
xlat
imul
fildll
test
pop
rorb
ret
mov
pop
inc
rclb
xchg
xchg
push
aaa
les
mov
jne
pop
repnz
or
jo
loope
fstps
clc
movsl
shll
adc
and
das
mov
call
ret
sbb
or
or
add
adc
pop
in
sbb
stc
push
aas
insl
cmp
add
cwtl
sub
cld
insl
out
xchg
xchg
negl
test
cmpsb
loope
fstl
and
or
push
jge
pusha
ljmp
xor
adc
dec
dec
add
xor
inc
clc
mov
and
cmp
xlat
or
cltd
jno
outsb
push
mov
inc
mov
jg
xor
and
mov
push
mov
jne
push
int
cmp
enter
ss
mov
inc
add
mov
sbb
loopne
loop
test
das
gs
sti
jge
leave
mov
rcl
adc
lods
adc
jns
aas
je
add
mov
out
lods
mov
xor
sub
cli
xchg
pop
lahf
cli
add
push
and
push
fnstcw
adc
cmc
rolb
jns
inc
mov
mov
or
imul
int3
in
jnp
cs
insb
stc
jb
add
insl
push
push
rcll
fcoml
pop
dec
cmpsl
inc
mov
pop
out
or
sub
mov
cmp
in
xchg
movsl
sbb
aaa
movsb
std
rorb
int
lock
rorl
pop
insb
es
daa
add
cmp
icebp
loope
fistpll
xchg
cmp
jp
xchg
inc
fwait
jl
int
adc
sbb
push
xor
add
loope
in
lds
daa
out
cmp
cmpsb
mov
dec
adc
lret
mov
mov
mov
dec
ja
mov
adc
or
inc
std
addl
inc
adc
aaa
and
xor
sarl
jns
test
loope
int
cld
dec
into
int3
rolb
ja
hlt
sti
add
in
gs
sti
pop
mov
cld
inc
loop
arpl
dec
outsb
inc
push
or
and
pop
adc
pop
or
or
cmc
dec
iret
dec
out
and
dec
push
dec
add
sub
mov
aaa
das
add
and
test
sbb
scas
cmp
imul
adc
rcrl
fwait
mov
jo
stos
lds
repz
test
and
jmp
inc
push
jno
je
add
dec
rcll
out
pop
sbb
scas
out
adc
xchg
xlat
jle
xor
popf
js
icebp
push
push
test
in
ret
rcl
rorb
mov
repnz
leave
ret
popa
mov
scas
jb
out
jb
cwtl
xor
inc
and
sbb
lock
and
test
mov
xchg
int3
scas
clc
jg
loop
clc
mov
inc
cld
mov
ds
push
lods
jmp
sub
addr16
gs
jb
insb
shrb
sbb
xchg
and
pop
pop
cmp
dec
inc
lds
and
sti
jmp
divl
pop
cmp
add
pop
out
ds
iret
in
loopne
cmpsb
movsl
movsb
xor
pop
mov
inc
lds
in
jno
dec
scas
and
lahf
popf
cmp
xchg
add
mov
mov
js
xchg
xor
aaa
sbb
jmp
xor
ljmp
out
push
mov
adc
xchg
xlat
mov
cld
pop
loope
loopne
or
arpl
repnz
cmpb
xchg
mov
add
push
jle
inc
rcrl
mov
lock
inc
inc
inc
fidivs
or
sbb
cmp
pusha
add
and
inc
dec
stos
loopne
mov
testb
push
and
jns
sub
stos
and
jl
sti
add
xchg
sub
int
xor
push
out
pop
icebp
mov
mov
mov
sub
sub
lds
jp
jecxz
insl
cmp
dec
icebp
add
inc
lret
adc
sbb
or
hlt
addr16
idivl
dec
inc
dec
daa
dec
cmp
sbb
add
sub
sahf
lock
adc
mov
movsb
sahf
mov
mov
test
mov
mov
out
imulb
out
fwait
test
xor
push
xor
jl
push
mov
lock
js
out
in
in
push
out
dec
xchg
clc
xchg
fstpt
or
lret
test
cmp
mov
and
jns
das
add
inc
cwtl
mov
rorl
call
inc
mov
xor
imul
jp
sub
mov
notl
adc
push
inc
inc
xlat
in
ds
cmp
jnp
add
repz
or
jp
cmpsb
cmp
rolb
testl
pushf
adc
leave
xor
lcall
stos
jp
das
and
cmovne
es
pop
sarl
addb
les
addb
dec
popa
sub
hlt
xor
shl
clc
or
repnz
xor
subb
push
mov
fstpl
pop
sahf
adc
lret
fnstsw
and
sahf
daa
les
std
int
mov
adc
push
cmp
jb
inc
adc
pop
inc
pop
cmc
jno
adc
jmp
xchg
loopne
mov
ljmp
inc
or
aas
and
repz
dec
mov
into
int
cmp
imul
test
mov
sarb
push
mov
decb
inc
stos
xchg
push
push
dec
sub
pop
icebp
cmp
lock
add
sbb
pop
cli
push
add
jnp
movsb
femms
enter
pop
idivb
popf
repz
or
sahf
idivl
pop
and
das
test
pop
repz
jne
lods
push
sbb
rorl
repnz
jo
les
or
push
sub
divl
pusha
addb
inc
inc
adc
push
icebp
fistpll
jle
cmpsw
push
jno,pn
pop
outsb
fdivs
cmpsl
mov
aam
popf
or
sub
mov
xchg
fnsave
xchg
cli
add
add
jno
pop
adc
push
outsl
push
rcrb
cmp
adc
sbb
lret
push
pop
or
stos
mov
fwait
add
test
inc
sti
gs
sbb
insl
xor
imul
mov
test
xorl
mov
xchg
lcall
shll
adc
mov
inc
inc
cmp
jno
add
mov
jp
clc
or
jo
mov
ss
xor
std
cld
sti
mov
mov
xchg
sti
mov
pop
fcoms
pop
bound
mov
mov
add
loop
call
push
or
mov
jo
xchg
and
loop
ficoms
daa
sbb
lret
jb
xchg
sbb
and
ror
int3
lret
adc
mov
mov
popf
push
dec
mov
out
push
push
andl
sbb
mov
sub
pop
mov
adc
sub
pop
add
ficoms
les
test
pop
push
sub
clc
test
pop
sbb
hlt
outsb
xor
xor
outsb
insl
inc
mov
dec
stc
push
bound
cld
daa
lock
cmp
sti
inc
inc
inc
ljmp
inc
scas
adc
inc
xor
inc
in
xchg
mov
cmp
stos
jp
das
cmpsl
movsb
mov
or
mov
jmp
mov
push
nop
loope
data16
imul
add
lock
jge
popa
popa
pusha
fistpl
jg
jge
sbb
inc
adc
rcll
dec
pop
mov
adc
pop
aam
add
ss
cmc
fcmovne
leave
dec
jl
jo
add
arpl
fdivs
mov
xchg
and
or
popa
daa
es
lea
jns
ja
add
mov
adc
outsl
cmp
int3
mov
aad
shrl
rclb
pop
test
insl
xchg
rcl
shlb
mov
insl
loope
dec
je
test
rol
ja
cld
je
add
inc
inc
mov
jge
inc
dec
sbb
lock
push
in
rolb
jmp
cs
push
add
mov
mov
cltd
cmc
hlt
int3
jg
mov
scas
sahf
pushf
fwait
femms
jge
arpl
jns
xchg
outsb
insl
and
pop
xor
arpl
fstps
pop
out
dec
pop
dec
into
lds
jmp
leave
push
dec
push
aad
out
cmp
adc
cmpsl
and
das
push
jl
leave
enter
push
sub
sti
xor
shlb
xchg
insb
jb
sbb
imul
mov
and
inc
sub
sbb
push
pop
shll
jl
xor
inc
xchg
lret
jp
inc
icebp
push
push
into
or
cli
add
inc
pop
mov
add
stos
cmpsb
jno
mov
dec
and
jno
push
sahf
aas
test
pop
fsubrl
jg
popl
pop
mov
jg
mov
xor
xor
jmp
aaa
ss
aas
out
xchg
leave
scas
fimull
shrl
mov
test
addr16
jl
mov
dec
arpl
jmp
xlat
out
pusha
test
push
pop
push
fbld
mov
fldl
cmpb
icebp
mov
ds
aaa
icebp
lock
out
addr16
add
rolb
xor
leave
cltd
cmp
cmp
mov
leave
enter
fsubrs
scas
adc
sbb
mov
or
jo
pop
int
adc
pop
or
std
lods
addr16
ja
mov
mov
push
fwait
jns
testb
and
or
or
pop
jo
add
adc
addr16
fisubrl
aam
pop
and
fcmovne
xchg
out
das
out
in
pop
xchg
rcrb
inc
ja
mov
mov
mov
inc
pop
shlb
inc
out
sub
movsl
pop
and
das
cs
es
aad
lock
jb
sahf
push
nop
movl
jo
int3
or
stc
divl
add
out
inc
xchg
mov
out
out
mov
mov
dec
xchg
mov
mov
call
lret
int
mov
out
and
test
lock
xchg
pop
fxch
add
xor
stc
fstl
shll
push
mov
addr16
fs
mov
in
sub
in
mov
mov
sub
es
or
scas
sub
stos
jge
xlat
sbb
and
and
push
sbb
cmpsl
cmp
in
lock
add
cmp
fcom
pop
bound
hlt
mov
std
or
fcom
int
lret
js
imul
xchg
or
jnp
sub
in
inc
loopne
lcall
fcomps
ret
inc
mov
push
daa
xor
inc
cli
jo
leave
or
adc
not
add
mov
pop
out
clc
lcall
or
pop
stos
mov
or
mov
pop
pop
imul
aam
ja
jbe
pop
popa
pop
pop
sub
or
add
mov
repnz
sub
cmp
loopne
inc
ss
repnz
mov
aad
lods
cmp
pop
mov
xor
and
into
iret
lret
mov
pushf
mov
adc
mov
test
and
lea
mov
ljmp
ds
jg,pt
cmpsl
lock
pop
icebp
in
stos
add
ret
jmp
out
enter
lock
sahf
ficoms
pop
cmp
pop
mov
into
int3
inc
ja
xchg
ret
outsl
mov
pop
into
sub
out
imul
aad
in
popf
shlb
sbb
inc
les
add
jg
movsl
mov
mov
fwait
lock
add
mov
lahf
clc
cli
loopne
addr16
popf
jecxz
test
add
pop
pop
pop
sub
jbe
jno
lahf
cmp
pop
ret
shrl
and
repnz
xor
cli
cmp
add
inc
dec
loop
loopne
neg
and
lds
and
push
adc
lods
jecxz
pop
pushf
or
mov
test
ret
cs
rcrb
sbb
cwtl
sbb
jno
xor
sbb
ss
or
adc
dec
out
clc
notl
jmp
inc
mov
dec
add
push
push
rcl
sarl
inc
aaa
leave
jno
pop
test
jle
stos
cld
cmpsb
mov
daa
es
pop
xchg
in
pop
pop
fstps
sbb
pop
out
loope
repnz
dec
inc
sbb
leave
or
mov
adc
aaa
jp
and
cwtl
cwtl
xchg
insb
add
push
pop
lods
and
repnz
pop
sti
xlat
fabs
lahf
mov
jbe
and
aam
jg
jle
push
cmpb
or
push
mov
cmp
sub
inc
ss
shl
stc
inc
cmp
shlb
sbb
inc
int3
ret
shlb
cwtl
xchg
adc
mov
ret
pushf
push
pop
push
mov
orl
mov
shll
js
mov
sub
das
sbb
sbb
mov
in
adc
fcmovu
xlat
pop
xchg
idivl
dec
push
adc
std
cld
dec
xchg
rolb
clc
jno
jo
or
sti
repnz
jmp
pusha
pop
inc
lea
sub
adc
xor
xchg
stos
pop
push
dec
dec
jecxz
aas
ret
dec
adc
xchg
test
cmp
add
dec
and
or
stc
jg
jnp
add
dec
xchg
mov
push
stc
orl
jno
rorl
out
imul
push
and
loope
pusha
pop
push
leave
fwait
adc
adc
ret
push
out
out
and
jno
dec
dec
mov
mov
fsubs
adc
and
dec
fstp
add
into
add
pushl
jb
addr16
jno
sbb
ret
pop
xor
mov
sbb
cs
jne
sbb
sbb
xor
aad
insb
arpl
push
add
push
add
fistl
div
lahf
leave
inc
pop
out
sbb
lcall
mov
dec
mov
insl
bound
cld
aas
clc
fidivrl
stos
jo
pop
pop
scas
aam
push
adc
sbb
scas
outsl
sbb
leave
pop
inc
or
push
test
cmp
mov
xchg
mov
mov
dec
idivl
stos
outsb
cmp
mov
jnp
test
mov
push
pushf
in
jecxz
mov
xor
fxch
mov
push
enter
mov
sarl
inc
push
ljmp
dec
add
mov
cmp
adc
inc
test
hlt
fdivl
pop
cmc
and
xlat
iret
int3
lret
mov
mov
add
mov
test
pop
jp
xor
mov
sbb
and
iretw
pop
sbb
adc
or
push
pop
xchg
and
cwtl
fsubs
cmc
hlt
call
stos
jb
push
movb
inc
cmp
jno
jmp
jno
push
push
scas
mov
bound
mov
ret
dec
jbe
mov
aaa
clc
mov
and
xchg
and
test
dec
inc
aas
aam
cmp
outsl
jge
add
jg
movsl
mov
xchg
inc
lahf
cli
stc
rol
cltd
adc
arpl
add
loop
add
lea
xchg
xlat
sub
daa
daa
les
pop
push
fldl
jae
lea
xchg
cs
dec
inc
inc
inc
inc
inc
mov
test
icebp
lock
mov
out
fcmovu
add
inc
clc
and
mov
imull
xor
fadd
les
mov
iret
lods
stos
mov
jno
or
mov
pop
dec
mov
xor
xor
lods
xor
xor
sub
dec
push
or
jmp
movsl
cmp
aas
ds
jge
fisubrs
jle
cmpsb
jge
pop
mov
add
arpl
gs
test
arpl
popf
inc
js
mov
cmpb
movsl
jl
lea
mov
inc
inc
adcb
mov
cmp
dec
push
iret
test
sub
cmpl
sbb
pop
xchg
std
cld
ljmp
xchg
mov
and
mov
jne
int3
jbe
cmpb
mov
or
in
std
dec
mov
mov
fisubl
xor
aad
push
test
cmp
sub
movb
ret
sbb
iret
into
pop
push
or
mov
lahf
mov
mov
sub
mov
xor
inc
das
cs
jne
dec
adc
jge
cmp
cli
xor
jecxz
inc
stos
stos
fstl
je
jmp
fcomps
stc
div
lods
mov
jae
fs
leave
enter
inc
movzbl
and
mov
sarl
mov
enter
mov
dec
dec
jne
ja
xor
scas
pop
and
cmp
test
mov
mov
push
ret
adc
jne
stos
scas
scas
scas
lret
mov
cmc
insl
rclb
das
push
jle
pop
xchg
pushf
pushf
fwait
inc
adc
pop
sahf
xchg
xchg
xchg
pop
or
int
xchg
js
ja
or
jge
test
lds
push
push
flds
lret
cmp
out
out
in
lods
fwait
xor
or
inc
mov
inc
fcmovu
fcmovne
sub
loopne
vcvtps2pd
imul
xchg
xchg
mov
insb
push
xor
mov
sub
daa
es
jne
negl
mov
ja
ja
push
pop
push
adc
xchg
outsl
stos
jnp
adc
ljmp
cmp
aad
aam
stc
lock
std
jbe
push
int
push
rcl
sarb
jnp
dec
scas
iret
pop
insl
pop
pop
jns
ret
push
cmpsb
jae
adc
sbb
inc
lods
xchg
inc
push
push
leave
ret
and
test
xor
fistpl
mov
cmp
nop
xchg
movsl
mov
js
mov
lcall
in
scas
mov
adc
data16
push
in
lahf
adcl
lea
and
sbb
pop
fst
lods
jg
jl
and
into
shr
in
add
xor
aaa
fcomip
xor
inc
or
inc
cmp
int
lret
movsb
mov
cmp
pop
lcall
addl
and
rol
adc
leave
shrl
push
sub
sub
sbb
sub
sbb
cmp
int3
pop
sbb
aad
jecxz
sahf
call
push
or
xchg
aam
push
neg
ficomps
sti
push
les
aaa
cmp
outsl
insl
insb
loope
xor
mov
ljmp
mov
pop
inc
inc
ljmp
jecxz
cmp
int3
add
and
and
add
mov
sub
arpl
mov
imul
xchg
or
insl
sub
xchg
mov
xor
std
repz
sub
dec
xchg
jns
cld
jecxz
pop
pusha
das
out
sbbb
lds
sub
mov
icebp
int3
js
or
jle
adc
mov
repz
jge
mov
mov
adc
into
imul
lret
sub
iret
lahf
sahf
add
xorl
sub
and
nop
push
mov
movsl
xlat
push
pop
jne
jae
adc
arpl
and
mov
jmp
out
in
imul
add
xlat
aad
cwtl
out
lods
ret
pop
adc
shl
mov
fs
mov
lret
int3
lret
loop
cwtl
jne
stos
inc
stos
push
push
push
jns
inc
jg
sub
cmpsl
arpl
inc
inc
jle
xor
icebp
out
mov
lock
lret
adc
sbb
sub
jne
out
scas
scas
leave
mov
cmpb
in
mov
nop
rcll
in
movl
jne
and
call
adc
inc
inc
lods
insb
test
push
push
fmuls
dec
bound
lret
cmc
ss
sub
aam
stc
push
lds
stos
test
xor
mov
arpl
lcall
mov
dec
xchg
mov
xchg
testb
dec
and
jbe
repz
jle
jl
xchg
icebp
sti
movsl
out
jno
pop
add
test
fcmovu
push
adc
dec
popa
dec
div
repz
scas
gs
cli
lret
xchg
dec
push
cmp
gs
enter
mov
jp
out
in
push
in
lret
inc
push
pop
mov
jg
int
fistpll
sub
inc
sbb
ret
or
jb
sbb
mov
sbbl
cmpsb
movsl
movsb
mov
lods
cli
stc
ja
push
addl
push
fnstcw
push
in
fwait
mov
lahf
outsb
insl
jmp
push
aad
mov
xor
jmp
adc
jl
call
jecxz
out
and
dec
mov
fadds
aad
xor
fstp
lret
lods
hlt
add
cmp
sbb
pushf
adc
xchg
xchg
xchg
divb
and
mov
test
xor
xchg
sti
or
js
push
inc
and
mov
jmp
push
or
add
in
cmp
mov
fcom
scas
bound
lds
fstl
push
dec
inc
cmp
data16
mov
inc
ja
mov
push
test
adc
jge
mov
test
push
xor
sub
jns
fstps
mov
sbb
or
cmpsl
adc
pcmpeqd
aaa
stc
adc
loop
jnp
mov
lahf
enter
sbb
je
add
xchg
xchg
sti
push
movsb
inc
mov
test
fiaddl
insl
imul
dec
sbb
fnstsw
jb
lret
mov
jecxz
cmp
dec
or
ss
std
pop
push
xor
imul
fcomi
leave
bound
push
and
mov
lcall
and
sub
sbb
or
cld
sub
std
push
mov
mov
sti
add
adc
dec
push
shrl
insb
arpl
push
add
adc
or
fcomps
clc
div
mov
pop
ss
std
jbe
out
mov
mov
int3
cmp
lds
push
xchg
xchg
dec
push
outsb
mov
movsl
lahf
pop
dec
inc
jae
ficoms
mov
sahf
xchg
jae
cmp
jecxz
jno
pop
push
pushf
xor
rorl
cmpsl
sarl
or
mull
clc
jns
cmc
jmp
mov
mov
out
cmc
f2xm1
lret
xchg
mov
pop
pop
xor
lret
ja
jae
cmp
mov
mov
enter
adc
xor
and
or
stc
push
pop
sub
sbb
popa
rcl
xor
push
xchg
and
mov
pop
cmc
insb
adc
cmp
or
dec
nop
hlt
or
cs
or
mov
jl
sbb
jne
fiadds
pop
adc
psllq
or
scas
scas
movsb
dec
lahf
cmp
std
cltd
sti
je
in
in
nop
rorl
outsb
insl
mov
pop
mov
inc
mov
mov
mov
sub
mov
mov
lods
fcomps
popf
xchg
mov
aaa
ss
icebp
test
mov
sbb
cmpsb
loope
cwtl
icebp
mov
jle
out
stos
cwtl
xchg
ret
xchg
cs
push
in
mov
enter
loopne
adc
das
and
pop
in
pop
fmull
jl
call
rorl
push
sbb
mov
in
fcmovu
add
dec
fists
cmp
daa
add
int3
push
mov
mov
mov
and
cmc
int3
mov
stos
popa
adc
mov
or
cld
sub
std
and
sti
add
adc
dec
push
rorl
jnp
inc
cmp
or
add
adc
or
fcomps
insl
clc
div
and
scas
push
mov
lock
inc
into
mov
insb
insb
imul
pop
push
push
cmpsb
jge
mov
pop
ja
xchg
test
xor
lods
xchg
dec
ljmp
pop
sbb
aas
fcmovu
mov
cltd
push
add
call
scas
daa
std
stos
add
jmp
repz
pushw
fwait
hlt
xor
arpl
out
or
pop
popa
mov
and
mov
jg
jge
push
ljmp
add
clc
repnz
pop
aad
stc
push
mov
stc
shlb
enter
add
into
int
test
push
sbb
jb
cltd
lret
sahf
popf
sbb
xchg
xor
mov
push
fisttps
aaa
js
push
pop
and
cmp
push
je
cltd
adc
pusha
sbb
or
mov
lods
in
cmp
stc
or
xlat
push
and
dec
pop
cmp
add
lods
lods
arpl
imul
lahf
xchg
cmp
data16
jo
mov
jne
ja
xor
ja
std
jp
dec
cmp
and
and
jnp
call
sbb
pop
push
adc
jae
or
cmp
cmc
rolb
jns
cmpsb
mov
js
cli
stc
clc
rol
cwtl
adc
jb
add
out
outsl
push
or
fs
test
jae
jle
push
aad
dec
cmp
inc
cli
pop
lds
push
rolb
dec
outsb
inc
sbbl
dec
shl
adc
mov
aam
prefetch
or
addr16
sub
enter
sti
call
dec
xchg
into
cmpsl
mov
int3
mov
test
fwait
jg
jecxz
xchg
adc
dec
jae
or
xchg
xor
mov
mov
xor
ret
cli
in
outsl
xor
int
xchg
and
mov
scas
pushf
imul
or
mov
push
bound
cmp
push
lea
mov
out
lret
cs
mov
mov
and
fists
out
cmpsb
xor
or
push
shll
adc
mov
fwait
lock
push
jl
scas
mov
jecxz
xchg
in
and
cmp
ret
sub
xchg
mov
push
fsubl
cmp
pushf
or
or
sub
inc
inc
out
dec
and
in
gs
fnstenv
pop
jb
aas
clc
or
test
repnz
ret
shrb
mov
mov
or
ret
mov
mov
insl
rcrb
or
mov
and
jno
mov
mov
sti
add
dec
dec
pop
js
pop
cmpsl
out
xor
cmpb
sbb
cltd
fstps
push
div
divb
add
stos
jb
stc
mov
mov
mov
sti
outsb
insb
imul
test
and
sbb
sub
cmpsl
arpl
call
xchg
xor
sbb
icebp
popf
loop
out
sub
xchg
xchg
add
pop
fsubrl
adc
adc
clc
adcb
movups
mov
jecxz
pushf
adc
mov
dec
enter
rcr
sbb
mov
push
and
pop
xchg
pop
pop
dec
jg
xchg
cld
mov
movsb
push
mov
or
icebp
lock
push
fcom
adc
sub
ret
sbb
inc
sbb
insl
rcl
std
mov
add
lret
mov
aad
mov
cwtl
jns,pt
xchg
cmp
cltd
mov
xor
and
andl
and
pop
cmpsl
out
pop
jno
push
add
ja
dec
lcall
aad
pop
mov
xchg
push
inc
test
push
push
dec
ja
jo
fwait
insl
cmpsb
je
pop
pop
pop
sbb
rol
push
mov
out
pop
dec
jbe
in
inc
inc
inc
fcoml
inc
insl
sbb
icebp
lock
cmp
mov
fbld
test
fnstcw
adc
jnp
add
cmpb
lods
stos
pop
mov
ret
mov
scas
std
push
and
ret
inc
rcr
test
mov
jns
and
iret
sbb
cwtl
dec
dec
dec
movl
andl
in
gs
jbe
inc
cli
stc
cli
loope
pusha
stos
push
jb
incb
mov
sub
sahf
xor
push
ret
outsb
mov
xor
pop
popf
cmpsb
add
and
bound
add
mov
inc
sbb
xchg
call
adc
aam
pop
cli
lock
or
ret
cwtl
sub
push
arpl
aad
jnp
fucom
fisttps
lret
mov
test
push
stos
xchg
shrb
in
fsubrs
inc
lret
sbb
adc
lcall
in
movsb
stos
daa
repnz
out
cs
adc
xchg
pop
rolb
and
mov
ss
push
add
inc
mov
cwtl
idivl
xchg
lcall
add
add
xlat
sub
std
xchg
addl
pop
xor
jp
movsl
mov
int3
sbb
sub
mov
inc
in
ja
push
push
enter
dec
cmp
icebp
mov
inc
leave
sbb
ds
test
loope
sub
push
push
outsl
scas
mov
xchg
xchg
xchg
cmp
mov
add
dec
cmc
inc
xchg
dec
dec
xchg
cmc
mov
aaa
ja
xchg
and
and
jl
adc
nop
xor
in
and
lock
insl
sbb
pusha
xchg
cmc
jle
cmpsb
mov
xlat
fsubp
loopne
mov
jbe
push
add
jb
mov
js
pop
pop
pop
push
lock
push
int
xchg
jl
pop
mov
sahf
out
jne
mov
inc
inc
push
push
lret
ret
aad
mov
daa
push
sbb
fidivl
orl
and
xorb
lcall
jge
mov
and
mov
jo
lcall
jp
jge
int
je
or
in
lahf
dec
dec
and
and
popa
addr16
movmskps
sti
icebp
out
dec
mov
add
nop
dec
adcb
aam
ja
into
inc
hlt
add
sub
into
inc
mov
mov
mov
add
mov
xchg
ja
xchg
nop
push
mov
cmpsb
fcoms
add
adc
dec
jno
mov
sbb
or
add
add
js
in
jmp
adc
clc
div
mov
jecxz
add
ja
jo
or
les
mov
pop
cmp
ret
cmpsb
jge
mov
pop
dec
rcrl
int3
and
xor
jg
iret
dec
sub
cwtl
push
daa
fwait
mov
es
out
movsl
inc
cmpsb
or
loope
mov
loopne
mov
out
mov
aas
xor
ljmp
cld
ljmp
inc
les
jno
insb
shll
xor
push
push
jbe
inc
ret
pop
pop
mov
icebp
ret
repnz
inc
sbb
int3
dec
icebp
out
out
in
dec
pop
fcmove
add
or
enter
cmp
out
sub
movb
sub
into
inc
popf
arpl
mulb
jb
cltd
and
popf
sbb
xchg
push
add
cltd
xchg
popa
sbb
sbb
cmc
ja
sbb
inc
adc
sbb
popf
jg
test
lahf
fnstcw
in
psubsb
adc
dec
bound
fstp
push
xchg
mov
mov
shll
outsb
loop
mov
rorb
jle
mov
pop
rcr
jecxz
jae
icebp
inc
das
mov
dec
mov
repnz
xchg
mov
mov
cwtl
mov
or
xor
jae
xor
or
mov
sub
pop
fbstp
mov
push
lret
mov
daa
dec
shlb
lea
inc
lret
sbb
sub
dec
and
jecxz
inc
push
sbb
fchs
dec
dec
mov
into
xor
stos
loop
movsl
xor
into
fstp
lret
or
lods
scas
lods
cld
mov
mov
or
es
ret
sbb
inc
mov
sbb
xor
das
cli
mov
out
cmp
add
ret
jnp
cmpsb
lock
inc
arpl
sbb
adc
jae
pop
ja
fdivs
mov
stos
pop
pop
pop
leave
enter
ror
into
mov
arpl
fs
push
iret
mov
icebp
xchg
rcrb
pop
inc
mov
test
sbb
mov
add
and
sub
jae
sbb
movb
jp
jnp
gs
ja
movsb
scas
pop
pop
out
mov
ljmp
xchg
mov
inc
sahf
mov
jo
jbe
jae
pop
fidivrl
push
push
enter
addb
jnp
mov
subb
mov
in
push
mov
aam
aas
push
lds
jecxz
movsl
movsb
mov
rcl
sti
inc
lcall
and
test
pop
xchg
std
dec
mov
std
push
xchg
je
mov
mov
inc
sbb
sub
sbb
in
jo
popf
jecxz
adc
mov
pop
or
jns
push
negl
xor
idiv
std
lret
outsb
out
rcl
jl
jns
loop
div
mov
insb
adc
popa
jge
mov
mov
mov
push
pop
inc
push
sub
sub
xor
sbb
push
mov
pushf
je
cmp
or
or
scas
lds
in
test
scas
idiv
clc
negl
call
lahf
sahf
out
in
inc
mov
push
in
outsl
insl
insb
fidivrl
pop
fst
inc
jp
jbe
je
das
or
out
dec
xor
call
xlat
in
dec
cmp
arpl
ss
inc
clc
pop
mov
cmp
cmpsl
sub
cmp
adcl
pcmpgtd
and
mov
outsl
cmpsb
sbb
mov
dec
push
sub
adc
xchg
nop
repz
fdivs
sub
and
sarl
push
jl
ljmp
pop
xchg
dec
jbe
aas
cmp
xchg
xlat
pop
mov
mov
jecxz
mov
dec
push
xor
mov
lret
dec
pop
xor
mov
test
bound
pop
into
add
lods
dec
jae
mov
pop
push
push
dec
xchg
xlat
dec
out
xchg
add
ss
xor
sbb
mov
add
cmpsl
mov
fsubl
or
mov
jae
data16
mov
fwait
adc
xchg
outsb
out
xchg
pop
or
pop
popa
jg
frstor
pop
loop
pop
xor
fldt
lock
in
inc
inc
sbb
rorb
xor
divb
test
aam
push
loop
scas
daa
sub
fcmovne
leave
and
jmp
cltd
lret
movsb
cmp
pop
in
lea
push
push
mov
hlt
inc
test
jge
jle
mov
xor
iret
out
sub
addl
popl
mov
cmp
in
adcb
inc
cmp
mov
cmpsb
bound
add
sbb
sub
int3
xchg
pop
push
fcmovnbe
scas
jle
jns
adcb
xchg
icebp
xor
xchg
sub
roll
adc
fistps
inc
push
and
mov
or
in
ljmp
jle
or
fdivrs
or
icebp
mov
shrl
push
inc
leave
xor
mov
adc
adc
xor
sbb
xor
add
xchg
test
dec
xchg
mov
ss
xor
cltd
xor
adc
cmp
mov
mov
adc
imul
fbld
lahf
popf
pushf
fwait
mov
stc
inc
xchg
fucomp
shrb
fs
mov
sbb
sbb
cmp
pop
aaa
popa
test
xor
xor
lock
out
jne
pop
cwtl
in
lds
not
dec
lret
jae
add
gs
xlat
aas
mov
xchg
pop
push
jle
jns
inc
mov
into
fsts
pop
test
sub
rorl
adc
fistps
inc
push
and
mov
or
in
ljmp
jle
or
fdivrs
mov
xchg
dec
or
mov
loopne
push
ja
xor
cmpsb
sub
inc
push
insb
fcmove
adc
movsl
cmp
sbb
movsl
inc
pop
push
mov
test
dec
inc
mov
mov
repz
cltd
xor
adc
cmp
lahf
out
stos
out
mov
or
scas
lods
lods
stos
inc
lds
push
xchg
jo
in
stos
sub
pop
sahf
pop
sti
pop
add
sub
lods
fdiv
push
xchg
pop
outsb
ds
mov
xor
lds
jle
mov
jg
pop
cmpsb
out
jl
mov
pushf
rol
repnz
inc
cltd
flds
mov
sbb
jno
sti
aam
mov
ret
mov
cmpsl
mov
clc
mov
mov
scas
mov
mov
and
mov
mov
call
mov
push
lock
jns
and
and
shl
sarb
add
lret
or
fxam
out
mov
cwtl
dec
sbb
icebp
mov
aam
imul
add
insb
mov
push
ret
pop
pop
cli
test
pop
inc
add
dec
mov
dec
movsl
push
into
xor
aaa
jb
lods
cmp
sbb
aas
pop
test
jecxz
inc
sbb
mov
ss
sbb
lcall
popa
mov
pop
pushf
mov
inc
test
ss
xor
in
cmpsb
outsl
aaa
ja
sbb
subb
stos
ljmp
cs
xchg
inc
scas
out
out
in
jmp
sbb
imulb
adc
inc
aas
xchg
imul
rorb
mov
mov
cwtl
jge
pop
cmc
shrb
in
addb
push
sbb
jbe
mov
adc
fistpl
jmp
test
sub
aam
bswap
in
fdiv
mov
cli
sbb
add
jnp
mov
std
pop
fbld
pop
ss
gs
sub
pop
ss
insl
ja
adc
orps
push
jnp
sbb
notl
pop
sarl
stos
inc
pop
and
dec
addr16
fs
inc
push
sbb
inc
inc
ds
cmpsw
add
jle
icebp
adc
lods
dec
cmpsb
shll
xchg
add
mov
add
mov
push
dec
xor
repz
xor
insl
jne
jae
dec
inc
cmp
xchg
test
inc
xchg
lock
jne
ds
fldenv
shl
sub
shll
sbb
push
jmp
xchg
mov
mov
adc
insl
xchg
xchg
jl
pop
hlt
rcrl
in
jg
mov
out
das
push
addr16
jl
sbb
jne
jp
and
daa
pop
out
lret
call
cmpsl
pop
sti
push
and
int
jmp
jecxz
clc
and
rolb
mov
sub
pop
pop
imul
inc
jno
ret
sbb
aas
dec
pop
addr16
and
aas
ss
xchg
rorb
repz
ds
sbb
movsb
mov
loopne
fiaddl
movsb
add
inc
push
std
cmp
cmpsl
cmpsl
movsl
movsb
mov
insb
lods
xor
cld
push
cwtl
mov
mov
popf
pushf
mov
popa
sub
stos
add
jno
jns
rcrl
dec
pop
jmp
cmp
push
mov
clc
cmp
scas
out
adc
je
cmp
fdivs
loop
sbb
jp
mov
xchg
test
cmp
fcmovu
mov
pop
mov
mov
test
xchg
jnp
pop
repz
jecxz
jle
roll
fidivrs
pop
icebp
je
jp
and
pop
es
leave
or
out
jl
add
pop
sbb
loope
or
mov
cltd
dec
sbb
les
loop
push
inc
rsqrtps
add
insl
movsl
add
adc
mov
gs
sub
jp
add
fwait
pop
xor
or
jne
divb
fmuls
aas
stc
sbb
and
fildl
mov
pand
lods
into
in
enter
outsl
add
pop
lahf
rcl
mov
cs
push
sbbl
xchg
bound
mov
insb
insl
xor
mov
pop
xchg
pusha
test
or
lea
inc
inc
stos
jmp
and
scas
inc
mov
push
jecxz
scas
xchg
mov
shll
mov
xchg
and
xor
jl
ja
xchg
int3
xchg
ja
xor
lea
sbb
dec
jb
xchg
ljmp
fstpl
in
lds
loopne
xchg
jnp
adc
lock
mov
gs
add
std
push
add
daa
addr16
icebp
jno
jb
dec
fs
imul
push
push
push
dec
pop
ss
pop
push
leave
icebp
pop
dec
dec
inc
pop
mov
add
int
dec
dec
dec
movsl
push
ljmp
xor
cltd
xor
adc
cmp
movsl
popf
test
or
mov
cltd
xchg
lods
mov
push
xchg
test
jne
sahf
add
jns
jno
xchg
xchg
jmp
mov
adc
jne
js
push
aas
jg
imul
pop
pop
mov
out
out
in
push
xchg
xlat
xchg
mov
fadds
aaa
lahf
fistpll
mov
idivb
xchg
sub
enter
iret
ljmp
mov
mov
mov
loop
out
loop
sbb
das
lret
xor
nop
xlat
pop
rorb
or
pop
mov
jg
pop
ret
or
out
cvtpi2ps
adc
lock
xor
insl
clc
sub
mov
stos
pop
hlt
outsb
mov
clc
push
xor
sbb
sub
xchg
push
or
push
push
push
push
push
bound
and
pop
jg
roll
addb
pop
repz
dec
push
in
andl
repz
and
jbe
ds
cmpsw
add
sbb
mov
jmp
lcall
mov
test
push
push
incl
sub
lods
das
push
dec
nop
dec
insl
cltd
jb
jp
rcrb
dec
pusha
enter
pop
mov
pop
dec
movsl
out
inc
inc
pop
mov
adc
jne
aas
cwtl
fldenv
shl
sub
imul
inc
xchg
push
test
adc
stos
jae
out
sbbl
mov
jle
jecxz
fisubs
or
sub
movb
sub
mov
adc
add
inc
mov
add
ret
or
add
loop
mov
xor
imul
cmp
push
aam
sti
sti
imul
rol
mov
pop
mov
mov
in
jg
outsb
cmp
inc
and
mov
and
cmp
rorb
add
inc
add
cmp
lahf
fisubs
dec
imulb
push
out
pop
push
cwtl
jb
cltd
cli
bound
jno
fwait
push
push
daa
fnstsw
test
lea
arpl
js
out
jns
pop
inc
subb
adc
or
aam
repnz
insb
inc
lods
in
pop
fcomps
xchg
xlat
xlat
aad
shr
and
sbb
sar
push
jb
ret
rcr
xor
add
les
push
lcall
mov
sub
xor
pop
je
sub
js
nop
aad
aaa
insl
sub
fstpl
fdivrs
or
stos
pusha
sub
fucomi
outsb
in
or
mov
into
loope
fnstcw
shlb
addr16
fdivl
jno
test
pop
and
repz
adc
jbe
imul
sub
lahf
insb
ret
sbb
push
or
in
xchg
mov
lds
adc
xchg
ds
and
pusha
hlt
fwait
cmpsb
in
insl
lods
dec
push
subl
push
mov
cmp
rolb
inc
test
jnp
cmp
dec
lea
jo
jne
aam
jbe
pop
cmp
jle
pop
movsl
in
je
xor
call
xor
sbb
inc
xor
leave
enter
xchg
ret
gs
aaa
addr16
lea
or
mov
call
sub
xchg
sub
sub
push
ret
xor
or
sbb
or
xchg
jnp
adc
adc
push
adc
stos
inc
jge
imul
mov
adc
and
push
outsb
nop
cmpsb
inc
outsl
pop
iret
push
push
mov
mov
xor
push
jnp
pop
xor
daa
push
dec
js
ret
xor
cmp
ss
aas
loope
and
mov
mov
ret
jmp
lcall
mov
test
push
push
add
sub
lods
imul
dec
insl
and
shl
mov
imul
rcrb
jge
jle
pop
movsl
in
jl
out
inc
lods
in
mov
test
std
fdiv
lock
sahf
fistpll
add
cmpsl
cmp
rcl
xlat
push
xchg
jp
insl
push
aas
outsl
sub
movsl
xchg
js
cmc
rcr
mov
addb
push
fcomps
jbe
mov
adc
xor
pop
lret
sbb
test
rclb
cmp
aad
mov
negb
xchg
dec
in
push
mov
int3
and
cmp
adc
into
push
push
js
sti
ss
push
pop
sbb
mov
push
sbb
sbb
dec
out
test
sbb
dec
pop
aas
loope
inc
scas
adc
add
ljmp
clc
js
push
xchg
push
test
popf
cmp
jae
push
std
inc
test
jnp
pushf
gs
lea
insl
xor
shrb
mov
cmpsb
out
popa
pop
mov
sub
pop
inc
lods
in
in
fcmovu
fdivrs
mov
divl
gs
mov
cltd
into
mov
pop
adc
mov
sahf
xchg
jnp
mov
dec
sbb
mov
in
sub
sbb
lea
pop
push
and
fiadds
mov
push
or
shlb
outsb
jno
fld
add
dec
pushf
push
mov
and
fsubr
jno
xchg
xchg
cmc
nop
lret
sub
cltd
push
push
sub
fstpl
cmpb
sbb
dec
in
js
in
iret
mov
clc
cmp
fdivs
and
cmp
les
movsl
hlt
lret
jns
mov
push
int3
lret
jb
fs
mov
sbb
rol
ljmp
aas
and
stos
gs
mov
idivl
sbb
popf
mov
pop
sbb
out
or
ds
inc
add
or
adc
mov
mov
dec
inc
lds
flds
mov
pushf
push
stc
adc
mov
push
push
jp
mov
xor
cmp
mov
filds
dec
add
mov
and
fsubrs
fdivl
cmpxchg
stos
and
popf
cwtl
mov
push
pop
adc
sub
cmp
jo
jmp
mov
adc
and
sbb
leave
pop
jl
jnp
push
adc
add
fnstcw
icebp
lock
ja
mov
mov
hlt
xor
xchg
lods
mov
daa
test
push
and
add
fs
adc
outsb
jb
mov
xchg
pop
ret
out
orl
loop
jmp
cld
repz
push
adc
jge
add
mov
jno
add
add
loop
js
stc
clc
push
pop
ret
outsl
xor
cld
mov
cmp
shll
jno
mov
pop
cltd
or
pusha
pusha
pop
jbe
js
aam
dec
clc
cmp
scas
imul
or
push
adc
fwait
sbb
adc
les
adc
enter
lods
lods
stos
rol
les
andl
push
frstor
pop
test
lds
loopne
pop
jp
jns
js
and
out
xchg
pop
pop
adc
lds
call
jecxz
ss
fucomip
in
mov
xchg
scas
mov
sbb
inc
imul
test
and
rcrb
jns
cwtl
xchg
jo
and
outsb
insb
mov
sub
sub
iret
repnz
fisubrs
push
and
cmp
stc
mov
insl
out
adc
stos
test
test
std
cwtl
addr16
hlt
pop
sbb
mov
jae
push
shlb
int
outsb
insl
loope
movsl
je
test
cli
sarb
pop
pop
xorb
loopne
cmp
xor
stos
push
cli
sahf
xchg
pop
cmp
aaa
mov
out
movsl
cltd
push
or
add
push
scas
scas
scas
lcall
xchg
jle
stc
icebp
call
mov
roll
and
lcall
stc
pop
push
mov
cmp
inc
xchg
repz
add
add
cmpsl
dec
imul
aaa
xor
ja
mul
pop
scas
cmc
shl
jmp
sti
cs
outsb
jae
push
addr16
mov
mov
fucom
sbb
jns
das
inc
aam
andl
lahf
pop
adc
sub
cmpl
shr
ss
or
outsl
sub
push
pop
stos
add
pop
sbb
push
mov
dec
imul
into
rcl
lahf
mov
sbb
xor
leave
ret
mov
mov
orb
and
mov
shlb
push
xchg
pop
cmp
adc
lea
ss
aas
mov
and
clc
mov
sub
jp
imul
mov
mov
out
ficoms
mov
inc
pusha
jno
push
pop
ficomps
jns
popa
pop
pop
add
dec
or
xchg
push
add
xchg
test
fs
dec
packuswb
mov
out
fcom
pop
xchg
cmp
aas
push
loopne
scas
rcl
jbe
cmpsb
and
xchg
sbb
jb
xlat
in
adc
mov
subb
mov
sub
sub
idivb
fstps
test
jae
cmp
lret
jg
mov
and
xor
push
lcall
xlat
mov
mov
or
jo
add
cmp
lret
bound
mov
inc
push
mov
mov
dec
dec
push
repz
xchg
pop
mov
dec
out
cmp
pop
fwait
into
dec
cmpsl
xor
mov
mov
and
ja
add
out
div
leave
mov
ljmp
push
lea
mov
mov
push
insb
sub
js
jbe
cs
lret
out
jge
and
mov
mov
dec
in
outsl
in
insl
fwait
mov
aam
and
shrb
add
sti
lds
outsl
sbb
lret
jns
dec
sqrtps
add
or
inc
push
inc
mov
dec
add
cli
sbb
ja
je
adc
jge
sub
or
push
jp
icebp
out
out
cmp
fdivs
lock
add
cmc
int3
mov
dec
inc
imul
shl
mov
mov
pop
data16
ret
movsb
mov
push
sub
aaa
scas
inc
push
shlb
cmp
out
jecxz
popa
ja
push
inc
mov
lds
sub
lret
aas
or
jns
adc
mov
inc
int3
pop
add
push
test
dec
or
push
outsb
aam
fadds
jno
push
pop
pusha
sbb
jne
pop
dec
cmp
inc
jmp
push
mov
adc
mov
adc
mov
std
ds
fidivs
mov
int3
mov
lods
cmp
outsl
stos
mov
scas
test
adc
bound
pop
and
ja
dec
mov
cmpsb
aad
dec
inc
sbb
iret
addl
out
inc
pop
xor
scas
out
test
in
jae
aad
xlat
mov
mov
enter
xchg
push
xchg
mov
rcl
roll
cli
mov
cmc
xchg
cmp
inc
mov
mov
push
jae
mov
jnp
mov
cs
in
add
aam
out
ss
lds
push
mov
jl
pop
push
add
lret
sar
mov
jae
xchg
xchg
xchg
or
jge
sahf
xor
inc
out
mov
pop
xlat
js,pn
rcrl
test
and
pop
pusha
lds
dec
or
xchg
insb
inc
pop
pop
push
push
push
push
dec
push
dec
dec
cmp
jmp
fmuls
loop
aaa
xor
stc
sub
jo
add
cmp
lret
out
push
imul
cmpsl
mov
fwait
xor
pop
stos
xchg
lea
shlb
ja
int
mov
mov
std
jbe
aam
and
ret
js
xchg
aad
fisubrs
xchg
arpl
or
dec
push
dec
sti
gs
lret
insl
sbb
je
test
bound
pop
pop
iret
mov
cmp
cs
xchg
ja
cmp
in
in
daa
push
and
fsubrs
adc
data16
jbe
or
clc
jl
aad
xchg
xchg
shl
jl
xchg
lahf
sahf
adc
aam
data16
idivl
jno
out
lcall
nop
pop
pop
adc
into
call
pop
sbb
or
inc
or
daa
inc
stc
push
lds
arpl
jb
data16
sti
add
sbb
mov
dec
std
negl
sbb
mov
rcll
mov
dec
leave
lea
mov
icebp
jg,pt
and
fisubl
push
push
add
fstpl
and
popa
aas
hlt
hlt
repz
fstp
fistpl
add
dec
lods
jb
jno
inc
cmp
stos
inc
aaa
pop
push
push
jbe
ljmp
and
lods
mov
ljmp
jecxz
sbb
fcompl
out
aad
fstpl
stc
rorb
push
adc
stos
cltd
cwtl
into
ret
int3
xchg
or
mov
xor
mov
fimull
pop
cld
push
xchg
jge
addr16
cmpb
sbb
adc
inc
rorl
push
push
in
and
xor
inc
and
jmp
cltd
jbe
movsl
and
inc
mov
lods
stos
lcall
popa
mov
pop
incb
dec
mov
adcb
call
cwtl
idiv
dec
mov
ja
ja
hlt
shl
mov
arpl
imul
shr
cmp
dec
xchg
xlat
pop
or
repz
repnz
fistl
outsl
je
in
les
jl
mov
repnz
mov
sub
daa
push
int3
shrb
dec
in
lods
repnz
dec
xor
imulb
lret
add
xchg
cmp
inc
mov
test
lds
or
pop
jns
mov
pushf
dec
xchg
push
pushf
fdivrs
jno
hlt
cli
push
xor
test
lds
pop
and
fs
adc
enter
xchg
shlb
xor
cmp
xor
sbbl
sub
cmpsb
bound
pop
pop
mov
rolb
mov
fwait
and
mov
push
xchg
sbb
outsl
ss
mov
jae
mov
pop
cmp
add
jecxz
xor
out
out
jne
inc
cwtl
flds
xor
aad
dec
or
ror
fstp
ja
xchg
je
popl
inc
iret
into
int
fwait
mov
mov
mov
and
ret
mov
int3
fisttps
mov
sbb
aas
mov
and
popa
mov
xchg
pop
aas
stos
test
xor
jmp
cli
lods
push
jl
in
mov
or
fdivrs
cmpsb
aam
lea
jecxz
das
jo
inc
cmc
or
sbb
aas
decb
and
inc
addr16
pop
icebp
pop
jo
rolb
fisubl
sbb
or
sarl
bound
inc
pop
push
sub
aas
inc
jmp
cltd
js
movsl
std
cld
mov
or
inc
aad
push
xchg
mov
pop
fistl
mov
cmpsl
incb
scas
push
nop
mov
jb
js
outsb
xor
adcb
test
in
dec
mov
out
xlat
out
fcmovu
shl
aam
fcmovnu
leave
enter
outsl
pop
insl
dec
mov
xchg
popf
popf
rolb
xor
mov
mov
sarl
cwtl
add
cmpsl
ljmp
pushf
jecxz
inc
fists
clc
cmp
xchg
push
xor
fnsave
out
xchg
leave
pop
fimull
cmpsl
sub
adc
pmaxub
or
push
and
fld
add
sub
lahf
clc
push
pop
es
mov
push
in
fldt
insb
dec
lea
mov
mov
bound
int3
idivb
jle
add
add
cmp
cld
mov
push
add
std
jo
dec
leave
push
std
les
cmpsl
int
dec
jae
outsl
mov
xor
mov
popa
mov
repz
fwait
xor
test
cltd
sbb
dec
lea
cmp
dec
and
jne
dec
and
and
pop
xchg
push
cmp
mov
pop
inc
lods
out
cmp
fdivrs
dec
popa
div
repz
int
je
insl
js
gs
or
js
cmc
push
xor
imul
ficoms
push
sbb
test
dec
shll
sarb
out
das
sbb
dec
sub
pusha
in
xchg
or
jp
adc
ja
divb
mov
xor
sar
std
cld
mov
nop
sub
and
dec
sub
cmpsb
imul
xchg
das
adc
imul
sbb
inc
add
es
xchg
adc
stos
mov
pusha
or
xchg
jecxz
ds
fistl
cmp
scas
sub
lahf
pop
flds
sbb
loopne
sahf
sarb
cmc
inc
xchg
pop
sbb
lea
std
inc
jl
add
aas
jg
jmp
sub
in
iret
dec
scas
lock
ficompl
fistpl
xchg
xchg
xchg
and
daa
shlb
mov
xchg
mov
mov
out
ja
xchg
fcompl
mov
rol
fimull
add
je
repz
and
xchg
aaa
lods
and
mov
adc
test
aad
push
movl
pushl
into
push
adc
rcrb
mov
mov
in
inc
mov
xor
imul
xor
popa
cmp
or
dec
lock
inc
inc
out
popa
mov
jo
dec
cmp
nop
dec
jbe
popa
fildl
gs
loope
dec
xlat
stos
xchg
jo
mov
sub
cmpsb
and
adc
pop
mov
dec
mov
sub
inc
mov
xlat
sub
out
push
mov
cmp
push
cmp
movsl
in
test
mov
inc
jns
inc
add
push
add
test
xchg
aam
stos
dec
sbb
lock
imul
xchg
shll
pop
push
push
out
sbb
xchg
pop
pop
pop
addl
in
sub
cmp
stos
and
fcmovu
inc
mov
cmp
fstpt
or
mov
and
add
jb
cwtl
stos
mov
sub
subl
adc
ja
je
addr16
pop
pop
jge
je
push
mov
cmpsb
nop
imul
adc
leave
pop
stos
ds
fcomp
leave
enter
outsl
mov
mov
loope
lcall
mov
dec
mov
sarl
mov
leave
sub
adc
in
pop
xchg
xchg
mov
scas
test
push
mov
jns
push
test
fs
inc
dec
mov
popf
in
inc
jno
cltd
fisubrl
div
cmc
lret
repz
add
repnz
aas
test
xchg
insb
div
rcl
aad
inc
cmp
outsl
insb
imul
test
and
sbb
pop
pop
cmpsl
arpl
movsb
outsb
or
or
mov
dec
dec
cmp
cmc
mov
and
sbb
xchg
stos
test
rolb
mov
xor
jg
lds
int3
int3
outsl
mov
js
push
fisubrl
or
push
dec
jp
pop
ja
pop
je
imul
dec
xchg
popa
jmp
and
xlat
dec
dec
dec
add
loopne
mov
inc
jo
aad
push
push
stc
lds
stos
test
mov
ficompl
and
aam
xchg
mov
push
fmull
pop
popf
movsb
imul
mov
ja
adcl
pop
adc
jae
ja
inc
imul
cmp
push
data16
in
iret
inc
scas
lock
ficompl
jecxz
mov
mov
popf
fstl
mov
mov
push
inc
xchg
ret
fcmovbe
movsb
into
xchg
mov
cmp
jne
ja
std
jp
dec
test
dec
and
inc
ficomps
aaa
mov
dec
dec
dec
sbb
dec
cmp
xor
cs
pop
mov
cmp
testl
test
and
mov
mov
mov
outsl
insl
pop
push
sbb
cmp
out
cmpl
int3
je
adc
jecxz
pop
push
sbb
in
inc
push
xor
xor
rcl
stos
cmp
inc
pusha
lcall
dec
sahf
and
mov
imul
ret
xchg
pop
push
mov
orl
stc
dec
jbe
stc
mov
xor
add
jle
dec
ss
or
push
jp
push
lods
out
cmp
fcomps
in
pop
js
dec
xchg
out
in
push
dec
sti
push
xchg
lahf
mov
jno
jns
cmp
sbb
sub
insl
mov
xchg
insb
and
lods
inc
inc
push
dec
in
in
aas
sbb
ss
xor
dec
std
aas
lret
adc
cmpsl
sub
into
pmaxub
push
clc
jnp
cwtl
cwtl
xchg
xchg
mov
lcall
jecxz
push
test
imul
nop
nop
lea
and
pop
xchg
arpl
jge
ljmp
js
icebp
lock
out
mov
inc
ret
insb
ss
dec
arpl
and
arpl
insb
lods
mov
adc
or
or
negb
outsb
adc
mov
or
andl
mov
lea
sub
sbb
dec
push
or
cmpsl
sbb
xchg
jg
outsb
add
adc
je
dec
xchg
fsubs
loop
loope
pop
add
std
xchg
cwtl
mov
gs
mov
clc
sub
int3
cmp
pop
pop
push
push
leave
fcoms
jb
daa
int3
es
mov
inc
inc
push
call
cli
insb
cmp
pushf
loope
mov
std
xchg
mov
cmp
adc
cwtl
ja
or
jne
stos
cwtl
xchg
int
int3
iret
xchg
es
out
inc
xchg
push
in
addl
push
push
es
pushf
bound
pusha
ret
lret
jge
and
and
jp
in
mov
icebp
lret
ja
in
push
fcom
aam
xchg
adc
cmp
rclb
movsl
sbb
vpsrld
addr16
imul
mov
and
jg
dec
mov
pop
mov
lock
jns
mov
sbb
pop
push
dec
push
dec
dec
push
lcall
gs
push
mov
adc
push
and
xchg
movsl
cld
pop
or
loopne
fists
cld
sti
mov
js
arpl
jp
cmp
sbb
push
stos
inc
push
push
push
push
sub
cltd
outsl
es
inc
inc
push
push
out
in
inc
sbb
aaa
mov
xor
int3
testl
iret
adc
xchg
ja
or
pop
stc
jl
cltd
cltd
xchg
xchg
lret
sarb
popf
pushf
out
and
in
inc
test
inc
aam
xchg
xchg
mov
push
and
sbb
ror
jle
jnp
and
xchg
icebp
mov
out
mov
lods
sub
shl
inc
in
imul
sti
adc
into
push
addr16
or
push
lret
dec
dec
push
add
stos
gs
pop
adc
sahf
js
add
sbb
dec
add
rcrb
mov
add
scas
push
pop
adc
or
xchg
aam
push
sbb
fsubp
fstl
std
std
push
lahf
xchg
sahf
mov
jo
js
cmp
pop
pop
in
test
push
push
bound
mov
call
jo
and
push
dec
dec
in
jecxz
sbb
xor
aam
outsl
fimull
cmpsl
sub
in
pmaxub
push
idivl
cwtl
cwtl
xchg
xchg
xchg
sub
int
sbb
pushf
adc
xchg
adc
add
js
xor
inc
push
test
fstps
push
pop
or
cmp
out
addr16
shll
in
aad
cli
sub
rcr
pop
cmp
push
xor
int3
sub
loope
inc
adc
adc
ror
inc
mov
fld
rcrl
cmovbe
push
testl
mov
push
sbb
pop
cmp
cmpsb
adc
lret
jecxz
icebp
pushf
fdivrl
cmp
fdivs
div
repz
aas
mov
lcall
cmp
gs
jo
fisttpl
repnz
bound
mov
pop
sbb
xor
das
sbb
ret
rorl
rorl
ss
inc
aas
and
jnp
pop
lods
jns
adc
push
adc
xchg
mov
lods
stos
and
lds
xchg
popf
call
jo
das
mov
inc
and
lcall
ja
push
ret
sub
dec
and
shr
call
pop
sbb
gs
ficomps
mov
aad
jl
and
push
lods
add
inc
test
jno
lahf
rclb
push
shrb
lds
pop
sahf
mov
ret
cmp
std
inc
test
aas
sub
or
xor
mov
inc
sbb
mov
push
and
xor
popf
xlat
idivb
push
or
adc
mov
add
push
test
sarb
pushf
lret
rcl
daa
adc
cmp
xor
mov
inc
pop
xlat
fidivl
out
stos
bound
aam
movsl
pop
sub
adc
stos
inc
pop
lds
xchg
dec
lock
mov
lds
or
sub
inc
iret
adc
and
cmp
add
or
addr16
xchg
movsb
xor
insl
hlt
lahf
lcall
push
loope
hlt
or
dec
hlt
pop
push
add
or
imul
mov
lds
lret
ds
test
dec
dec
hlt
jecxz
mov
dec
ss
pop
lcall
xchg
jns
dec
cmp
icebp
jo
mov
aas
lahf
cmp
ss
imul
push
jg,pt
stos
test
cmpsl
call
inc
mov
test
fiaddl
nop
popa
imul
shrl
frndint
mov
int
lret
lcall
xchg
jle
inc
sub
aas
pushf
out
iret
adc
and
ja
das
cs
negl
sbb
push
repnz
cmpsl
xchg
movsl
sbb
push
sbb
or
test
cltd
test
mov
xchg
lret
push
stc
clc
jbe
imul
add
std
int3
lock
mov
pop
test
dec
pop
sub
xchg
jp
jns
and
fucomip
je
subl
jl
in
fcomp
mov
mov
push
sub
fcmovnu
aam
mov
fmull
testb
aas
adc
outsb
scas
sbb
dec
cmpsb
or
push
xchg
cmp
rcrl
pop
es
enter
popa
cs
cli
stc
sub
and
pusha
repz
sub
fstl
push
adc
cmp
dec
xchg
cmp
or
xor
lock
sbb
push
adc
xchg
shl
out
xor
sahf
ficomps
ja
sti
jae
shll
fisubrs
jmp
idivb
test
movsl
xor
mov
add
xchg
inc
lods
aas
mov
out
out
sub
fadds
fcmovu
aam
inc
movsl
mov
or
orl
out
imul
icebp
jp
sbb
loope
adc
and
call
lret
out
adc
xchg
adc
ds
in
xchg
js
cmp
arpl
mov
mov
cmp
lahf
loop
xor
jo
add
imul
cltd
loop
mov
pop
sahf
adc
xor
ja
adcl
das
cs
sbb
cmp
push
jb
jnp
jo
sbb
test
stos
sub
js
das
stos
in
add
sarb
fbstp
pushf
faddl
sub
pop
and
enter
nop
inc
jae
test
mov
lahf
sub
cmpsl
arpl
lcall
jle
leave
adc
add
aad
pop
fists
addl
clc
jle
xor
repz
stos
xor
inc
add
jg
mul
cmpsb
mov
and
bound
jb
popf
and
nop
lcall
push
dec
mov
dec
addl
fmuls
cltd
xor
in
fs
das
stos
inc
jae
call
cmp
cmp
mov
jge
push
xchg
xchg
xchg
mov
add
push
scas
push
or
xor
xor
outsl
jbe
jae
mov
jge
test
outsb
cmpsl
or
pop
xor
in
push
sbb
xor
pop
push
div
nop
jecxz
pop
lahf
add
ljmp
test
mov
in
jo
nop
aas
ss
pop
pop
test
popa
call
data16
mov
adc
jecxz
leave
or
sahf
xchg
mov
cmp
ss
insl
lock
fnstcw
je
cmpsl
cmpsl
cmpsb
lcall
pop
jg
in
stos
cltd
cwtl
les
mov
int3
push
xchg
add
stos
pop
pop
loopne
pop
fstl
push
fistpl
je
pop
stc
jg
pop
int
out
adc
mov
add
out
xor
andb
es
movsl
cs
jmp
fisttpl
into
inc
loope
push
mov
cwtl
arpl
sbb
mov
xor
daa
inc
jp
popf
sti
addr16
mov
int3
sbb
push
cmp
sbb
or
pop
jno
push
add
ja
sub
pop
aad
pop
mov
stos
push
inc
cmp
sbbl
jo
outsl
fwait
insl
cmpsb
lods
pop
pop
pop
pop
sbb
push
push
ds
mov
sahf
pop
pop
dec
jbe
in
inc
inc
inc
fdivr
xor
icebp
lock
xor
test
or
jns
clc
fmulp
enter
test
xchg
xchg
xchg
mov
add
dec
push
mov
or
xor
ja
stos
insb
imul
imul
outsl
jno
push
pop
les
add
adc
mov
dec
dec
int3
js
mov
fcomps
push
ds
push
loopne
mov
push
sub
adc
std
iret
into
int
lret
movsb
mov
push
xchg
jns
dec
push
add
insb
mov
add
ror
dec
lea
mov
call
fistpll
jb
das
push
sbb
or
rcll
adc
or
lcall
inc
dec
adc
std
cld
cwtl
outsl
in
addr16
push
les
xchg
pop
ret
fldenv
ret
and
out
scas
es
leave
stos
out
pop
fdivrl
sbb
adc
fsubrp
movsl
sbb
mov
jl
add
mov
cmp
cli
jae
dec
out
cltd
cwtl
hlt
repz
aas
icebp
cmp
fwait
dec
add
or
add
clc
scas
repz
out
sahf
pop
pop
rol
jnp
inc
inc
jg
or
std
fwait
mov
test
imul
add
jle
stc
push
mov
sub
repz
mov
inc
mov
sbb
jno
sbb
sarl
ret
andl
jl
jp
movsl
sub
lcall
jle
cmc
push
mov
push
mov
add
in
jbe
xchg
pop
cmp
movsb
div
hlt
mov
pop
adc
std
icebp
pusha
add
stc
mov
shlb
in
xchg
stos
inc
addr16
push
push
jmp
mov
dec
jne
mov
ss
std
dec
dec
cwtl
push
and
xor
cmpsl
mov
ds
flds
fcmovne
cli
jg
jne
adc
mov
mov
push
leave
xor
scas
sbb
lcall
mov
dec
sbb
dec
mov
scas
add
lea
aam
dec
dec
dec
addr16
std
out
xor
inc
ret
aad
clc
xor
hlt
stc
add
push
leave
movl
dec
into
int3
movsl
xchg
or
push
leave
fisubrs
xor
pop
test
cwtl
cmp
inc
jl
in
imul
adc
adc
mov
dec
pusha
outsb
in
jecxz
inc
pop
add
adc
dec
or
pop
call
loop
inc
mov
lret
inc
mov
inc
test
int
aaa
mov
fsubrl
dec
jg
inc
das
pusha
pop
pop
jae
ja
sbb
xchg
mov
xor
dec
sbb
cmc
pop
adc
inc
inc
inc
dec
mov
cmp
outsl
pop
add
movsb
mov
mov
mov
data16
addb
lods
std
cld
lock
mov
xchg
fcomps
push
push
dec
pop
pop
or
dec
mov
or
sahf
jecxz
xchg
out
out
out
pusha
inc
jmp
es
xor
call
fildl
xchg
push
sub
sti
gs
movsl
imul
xchg
mov
aad
ret
fdivl
mov
add
sbb
std
ret
xor
das
add
xor
sbb
inc
imul
xchg
sub
dec
in
jb
adcl
sbb
test
movsl
notl
lcallw
add
mov
arpl
ljmp
pop
test
rol
cmp
jne
cmpsl
pop
pop
dec
dec
dec
mov
jle
push
pop
sbb
push
rcll
iret
xor
jmp
cmp
add
or
lahf
add
rorb
imul
fwait
mov
and
cwtl
lods
sub
jg
jge
push
push
push
dec
sub
gs
ret
mov
mov
insb
xor
js
cmp
cmp
ss
aad
loope
les
loopne
popf
pusha
lret
xor
int3
lret
mov
pop
movsl
mov
shrl
mov
mov
es
stos
mov
sbb
dec
dec
push
scas
sub
pop
push
sbb
or
ljmp
sbb
add
pop
out
add
stos
jb
aas
mov
mov
mov
shrl
imul
test
popa
lea
rcrb
dec
cli
push
inc
inc
mov
mov
dec
dec
call
ss
out
sbb
loop
stos
adc
hlt
rcll
ror
leave
adc
sti
sbb
sbb
gs
add
push
cwtl
in
and
stc
jb
cmp
pop
sbb
cltd
add
jbe
xor
pop
les
into
fidivrl
fdivs
pop
inc
adc
pop
ss
lock
popf
and
jno
add
fs
adc
shll
stos
push
push
mov
gs
push
lret
movb
xchg
mov
xor
inc
das
cs
sbb
cmp
jp
popa
test
mov
insb
scas
stc
add
stos
jmp
adc
stc
pop
jns
xchg
repz
sub
fistpl
push
mov
sahf
push
stc
mov
mov
icebp
or
and
cmp
popa
pop
pop
pop
aad
jbe
mov
inc
inc
inc
jg
mov
dec
dec
dec
inc
sbb
aaa
mov
rolb
fidivl
cmpsl
shlb
xlat
push
or
add
ljmp
pop
imul
and
mov
rcrb
pop
mov
pushl
cmp
sbb
or
hlt
ja
push
and
stc
and
jne
mov
lea
or
mov
ficoms
clc
sub
cmc
mov
ror
into
ret
mov
pop
push
inc
mov
shrb
mov
mov
xor
js
dec
dec
pop
nop
xchg
icebp
jg,pt
jb
sbb
inc
inc
imul
lock
in
cmpsb
or
aad
or
mov
sub
lret
inc
jp
data16
hlt
into
popf
push
mull
sub
jns
stos
lock
pop
pop
pop
aam
jne
mov
inc
inc
push
jle
mov
dec
dec
dec
aas
sbb
mov
roll
cmp
test
movsb
sbb
scas
daa
dec
mov
int3
int3
xchg
or
mov
enterw
jno
in
and
sub
les
popf
inc
fistl
cmpl
add
out
sbb
push
dec
int3
in
cmp
xor
loop
test
out
daa
add
leave
leave
and
ret
cmpsl
pop
pop
enter
adc
cmp
and
popa
add
pop
inc
or
sarb
or
test
repz
addb
mov
adc
push
pop
jae
jl
xor
inc
xchg
fsubrs
push
stos
aad
cli
xrelease
cli
stc
dec
popa
div
repz
add
jl
cld
cld
sti
aam
ds
cmp
lahf
jno
push
jbe
test
cld
ljmp
jecxz
cwtl
scas
aad
push
push
mov
fcomps
rclb
adc
nop
pop
push
pushf
dec
pop
repz
mov
fistpll
mov
mov
fstpt
enter
les
mov
pushf
out
add
icebp
pop
xchg
mov
js
jbe
cmp
fs
xchg
pop
dec
int3
ret
stc
jmp
dec
dec
dec
sbb
fistps
aaa
mov
inc
lods
outsl
jns
insb
sahf
divl
sub
fcmovne
leave
bound
rcl
sar
into
pop
pop
lret
mov
mov
pop
fistpl
mov
add
and
xor
sbb
addl
xor
stc
negl
lock
cmp
bound
push
nop
mov
call
mov
rcl
iret
xor
mov
lods
pop
rol
pop
outsl
pushf
lods
mov
jbe
add
xchg
pop
dec
dec
rclb
and
mov
adc
adc
pop
push
and
xlat
test
adc
mov
gs
mov
div
xor
or
xchg
or
insl
sub
out
out
mov
jo
jo
xchg
push
rcrl
pop
dec
xchg
fbld
mov
push
pop
pop
pop
ffree
pushl
jnp
cmp
inc
dec
push
push
aas
mov
jno
in
in
lods
xor
inc
inc
and
aas
cmp
fmul
leave
push
aas
mov
sbb
data16
into
xchg
pop
lahf
outsb
rcrb
add
cmc
or
es
cs
dec
std
hlt
xchg
sbb
push
push
push
or
push
jge
push
jne
fs
pop
push
inc
push
insl
roll
adc
cmp
dec
popa
xbegin
gs
lret
inc
imul
arpl
fwait
bound
mov
xor
mov
add
cmp
mov
or
out
and
xor
pop
out
dec
inc
jno
pop
push
xchg
cmp
jmp
jmp
xor
mov
adcl
mov
mov
jae
mov
icebp
call
shlb
xchg
mulb
xor
push
push
loop
jno
fcoml
jg
sbb
add
in
pop
mov
inc
in
in
in
pusha
mov
xor
xor
cld
cmp
cmpsw
sub
cmp
call
sbb
mov
loop
pop
stos
mov
dec
mov
mov
daa
mov
mov
push
cmp
imul
pop
jno
pop
add
aas
cmc
sbb
repnz
cli
cmpsb
std
jmp
cmc
hlt
cltd
inc
pop
aad
std
out
ret
xchg
imul
fbstp
jp
mov
mov
jg
jle
cmpl
sub
movsl
jno
lods
fbld
jmp
sbb
adc
inc
sub
or
das
push
add
lods
dec
or
stos
lcall
xchg
mov
xchg
pushf
fwait
mov
xor
jns
fsubrl
jmp
data16
xlat
xor
cmpb
outsl
mov
adc
in
push
push
ret
in
in
jmp
fsts
mov
pop
test
test
xchg
jno
les
adc
cltd
lret
icebp
mov
mov
iret
negl
mov
test
call
mov
inc
ja
movsl
sbbb
jo
jg
fs
sbb
mov
cmp
jge
fisubrs
mov
jmp
xor
fadds
fnsave
mov
xorb
mov
xorb
xchg
jnp
xlat
lods
movsb
sbb
inc
cmpb
rclb
in
xchg
sub
fcoms
and
cmpsl
cltd
jns
sbb
mov
loop
cltd
push
xchg
push
or
stos
lcall
or
std
cld
mov
lea
mov
jno
ja
insl
insb
add
push
cld
mov
or
mov
add
repnz
ja
push
push
mov
mov
repz
jl
xor
push
cmp
test
dec
aad
scas
addr16
add
sbb
lahf
pop
shlb
inc
xchg
clc
dec
xor
xor
cmc
mov
sbbb
test
jmp
lods
jecxz
and
out
out
insb
add
push
xchg
adc
bound
aam
loop
aad
mov
cld
sti
out
cmp
fisttpll
ja
aaa
in
pop
mov
pop
mov
sub
and
in
lds
mov
sub
mov
jae
inc
fstpl
and
and
dec
movb
in
fs
or
adc
mov
into
fwait
push
fiaddl
jge
dec
in
xchg
xchg
mov
mov
sub
lea
mov
popa
push
jecxz
rorl
popf
js
push
push
mov
dec
add
xor
inc
inc
mov
test
movsb
mov
imul
stos
lcall
mov
rcrl
dec
jne
pop
int3
shlb
or
ja
inc
jl
dec
xchg
cmp
jno
lcall
arpl
in
in
jmp
jmp
aam
push
movsb
pop
or
in
test
lds
push
fstpl
mov
aad
jbe
cmp
icebp
push
push
push
xchg
dec
or
pop
test
xorb
xor
xor
rcrb
aas
ret
jmp
test
pop
inc
stc
sbb
or
adc
cwtl
jbe
or
mov
pop
xor
push
idiv
push
cmp
push
mov
arpl
lods
cmp
pop
rep
add
gs
push
lret
sbb
dec
dec
dec
outsb
push
iret
mov
lahf
adc
or
sbb
divb
mov
outsl
xor
adc
shll
leave
enter
mov
sarb
pop
pushf
pop
lcall
and
mov
outsb
movsl
sbb
dec
mov
lahf
cmp
mov
das
cs
cmc
mov
addr16
in
and
and
pop
lcall
jo
add
adc
cmpsl
hlt
stos
fcmovu
fcoms
mov
in
daa
xor
int3
inc
jo
push
jge
lods
mov
ss
mov
mov
popa
sub
push
cs
aad
dec
test
xor
mov
out
out
push
pop
adc
mov
sbb
and
shl
pop
sub
mov
test
scas
scas
ret
adcl
repz
dec
pop
and
cmc
rsqrtps
arpl
leave
mov
push
xor
jp
aam
inc
jne
insb
les
jge
sbb
sbb
adc
inc
inc
rorl
insb
out
in
in
jmp
push
pop
mov
cltd
cs
sub
xor
and
mov
add
arpl
adc
mov
dec
xchg
lcall
sub
es
jns
pushf
fs
mov
sbb
out
mov
sub
jbe
in
outsl
and
cmp
push
xlat
push
and
inc
pop
adc
add
stos
xchg
lcall
test
lock
push
imul
inc
arpl
push
popl
negl
sbbb
jg
icebp
pop
stos
out
rcrl
dec
dec
mov
incb
xchg
mov
cmp
movsb
movsb
mov
scas
daa
add
xor
cs
sti
push
out
cmp
adc
push
imul
adc
push
ljmp
fstpt
cmc
pop
call
in
repnz
cli
lock
fisubrl
loope
fists
shlb
mov
adc
cltd
cwtl
mov
jno
add
jns
bound
icebp
sub
and
dec
das
cs
cmp
sti
imulb
inc
and
sbb
rolb
add
in
in
xor
clc
div
fnstenv
fisttpl
loopne
fwait
int
dec
int
iret
mov
fwait
push
imul
shl
cmp
pop
aam
jne
sbbl
shll
push
lea
pop
xchg
cmp
test
loope
mov
fstl
lcall
xchg
mov
cmpsb
xlat
addr16
pop
jmp
hlt
xchg
xchg
nop
loope
or
jbe
je
pop
pop
pop
push
sbb
es
inc
into
dec
sbb
mov
stc
out
out
in
adc
mov
aam
out
mov
daa
stos
stos
test
mov
scas
lods
xor
stos
cltd
cwtl
sbb
in
shll
and
fwait
or
mov
sub
xchg
push
cmc
mov
mov
lods
fcomi
pop
lods
jl
xorb
sarl
push
pop
adcb
push
pusha
scas
xlat
pop
lods
loope
pusha
imul
ret
add
adc
out
daa
inc
ja
outsb
insl
in
inc
mov
fcoms
and
scas
cmpsb
adcb
jae
sbbl
xchg
std
aaa
ss
sbb
cmp
rcll
loopne
inc
jnp
or
pop
rcrl
sbb
ret
ror
std
mov
stos
ret
mov
adc
test
sbb
pop
jp
dec
jl
mov
movsl
fildl
ret
sub
in
pop
icebp
push
push
pop
xor
test
outsb
adc
les
test
push
mov
push
jb
imul
outsb
and
imul
mov
test
sub
dec
or
inc
jg
out
js
push
popf
push
jg
orl
xor
sub
rorl
add
femms
add
inc
xlat
scas
lret
and
pusha
lret
je
insl
jae
rcl
push
sub
mov
mov
aas
add
sub
pop
sbb
outsb
out
dec
and
lock
es
xchg
push
es
sub
loope
ficomps
inc
mov
stos
test
dec
cltd
inc
prefetchw
daa
pop
xor
xchg
xchg
add
add
loope
cld
sti
push
in
xchg
mov
mov
lcall
jbe
je
pop
pop
pop
pop
jbe
into
add
jmp
mov
push
push
mov
divl
faddp
push
xor
mov
js
test
out
jo
scas
mov
scas
test
xchg
xchg
cmp
or
pop
int
rcll
repz
lret
cmp
cmpsl
xchg
repnz
scas
xor
and
jo
rcrl
or
xor
lock
sub
push
mov
aam
inc
pop
sub
repnz
xchg
xchg
insb
notl
roll
outsb
imul
inc
sbb
push
pop
xor
ljmp
xchg
xchg
lods
or
dec
jnp
add
cmp
xchg
pusha
das
and
jb
mov
cmp
mov
mov
or
shlb
iret
push
add
push
pushf
adc
add
jo
sbb
lock
mov
push
sub
pop
pop
sbb
dec
dec
and
test
dec
dec
mov
addr16
in
jmp
arpl
ds
ds
and
repz
mov
gs
jb
lea
and
mov
subb
cli
mov
or
xor
loope
lods
js
sub
inc
pop
inc
or
inc
jg
and
dec
out
arpl
addb
in
jmp
or
dec
popa
mov
push
jns
mov
sub
fdivrl
dec
sbb
jno
push
rcll
lock
adc
ret
cwtl
es
xor
icebp
out
jecxz
pop
mov
or
into
xor
ds
mov
repnz
leave
mov
jp
clc
divl
add
aaa
mov
sahf
popf
cmovns
jb
inc
scas
daa
sbb
les
jg
ret
jne
movsb
jbe
ret
sub
inc
jg
out
sbb
shl
sti
xor
gs
xor
inc
aas
clc
lds
sub
gs
lds
add
pop
cmp
clc
or
mov
cmpsl
ret
push
mov
cs
jo
xchg
dec
or
inc
mov
sbb
cmp
mov
sahf
enter
out
addb
add
xor
scas
popa
adc
or
leave
inc
imul
andl
jns
pusha
shll
jns
cmp
xchg
fisttpl
inc
inc
ffreep
cmp
sub
icebp
les
pushf
loope
pop
and
pop
push
sbb
cmp
adc
jae
pop
cmp
call
mov
sahf
fwait
mov
loope
xor
js
mov
insb
loopne
xor
jl
adc
lret
or
je
add
push
push
into
jp
mov
fsubrs
rcrb
sub
testb
jno
mov
into
pop
dec
lret
mov
pusha
mov
pushf
fwait
push
cld
aam
inc
test
ret
pop
cmp
das
cs
jne
dec
inc
cmp
sbb
in
jecxz
loope
out
out
cmpsb
pop
sub
aad
int3
xlat
gs
dec
jns
leave
enter
addr16
pop
shrl
xchg
sub
mov
ret
out
popa
pusha
pop
jbe
popa
xchg
es
arpl
lods
iret
das
sub
dec
cmp
cmp
and
cmp
add
movsl
movsb
push
cltd
or
js
push
lods
stos
lcall
xchg
iret
push
vcvtsi2sdl
and
arpl
in
scas
daa
pusha
fsts
rclb
jbe
je
mov
shll
dec
inc
pop
rolb
dec
dec
movsl
rolb
in
jmp
test
inc
shrl
stos
pop
fstpl
mov
xchg
lret
imul
cwtl
push
loop
or
mov
stc
jns
mov
sub
and
jnp
das
cs
jne
add
pop
adc
gs
lock
or
pop
jno
add
cmp
or
cmpsb
std
push
movsl
loop
inc
pushf
add
inc
inc
pusha
std
imul
inc
fs
inc
aaa
leave
outsb
pop
pop
test
bound
pop
pop
iret
loop
jecxz
cmpb
ja
sub
dec
cmp
mov
scas
pop
push
pushf
dec
pop
addl
rolb
jne
movsl
scas
scas
leave
leave
and
adc
xchg
or
repnz
jne
mov
jno
inc
lods
in
inc
cmpsb
sbb
loop
push
push
bound
aad
je
jg
dec
inc
inc
imul
or
loop
daa
imul
rcll
inc
clc
mov
in
es
rcl
rcrb
mov
mov
sarb
pop
adc
pop
ds
inc
xor
sub
sbb
add
repz
pop
push
sbb
or
push
outsl
mov
adc
mov
les
bound
ret
cmp
fistpl
push
arpl
popf
push
mov
mov
add
insl
repz
cmp
jmp
cs
nop
mov
dec
pop
lahf
cmpsl
cmp
inc
fldenv
mov
out
add
push
leave
add
cmpb
cwtl
xchg
jae
pusha
sub
fists
and
fs
lcall
mov
sbb
test
and
pop
in
sub
and
test
repnz
mov
sub
jmp
lods
je
mov
and
fsubrl
mov
mov
je
pop
cltd
roll
mov
nop
pop
sahf
insl
movsb
lret
mov
xor
test
xor
pop
cs
sbb
sbb
sti
leave
and
sbb
in
jb
xorl
fcmovu
or
test
div
jmp
fs
leave
enter
popf
mov
xchg
ror
into
es
jae
insb
imul
push
mov
ret
inc
sbb
mov
sbb
inc
pushf
sbb
push
dec
dec
lahf
xchg
push
dec
cmp
mov
out
cmpsb
xchg
out
or
hlt
sub
in
femms
jbe
fwait
mov
stos
jle
imul
jecxz
inc
sahf
popf
pushf
push
or
test
imul
mov
mov
jbe
add
fdivrl
call
jecxz
push
ret
out
in
jmp
sub
repz
leave
cltd
or
cmp
leave
dec
xor
mov
sub
mov
mov
jno
sbb
mov
mov
dec
inc
test
and
cmpsl
jle
mov
incl
mov
mov
test
xchg
sbb
inc
or
loop
push
push
push
or
mov
data16
icebp
int3
mov
cltd
lock
les
pop
jno
outsl
fwait
loop
mov
mov
sub
popa
les
call
dec
inc
inc
cmpl
lcall
aaa
mov
xor
add
xor
div
popl
mov
je
and
mov
jle
add
mov
cmp
gs
outsb
jne
in
pop
pop
xor
xchg
cs
fists
pusha
pop
aaa
loop
jle
jl
pop
jmp
in
mov
mov
cmp
cmpps
mov
ds
and
mov
jg
lods
sahf
sbb
cltd
xchg
xchg
loopne
jnp
fistpl
sarl
mov
or
dec
cmp
jns
ja
in
fld
ret
aas
adcb
jmp
in
lahf
fprem
loope
in
in
movsb
rcrl
mov
lds
or
fsub
std
inc
enter
mov
cmp
xor
mov
je
std
sub
and
scas
imul
fpatan
sbb
loop
ss
imul
movb
lods
ja
adc
je
shrl
popf
rcr
add
jg
cli
ljmp
pop
std
and
in
rcrb
jecxz
pop
push
push
and
sbb
orb
divb
cs
inc
sbb
sbb
mov
jmp
flds
mov
loope
mov
arpl
cmp
adc
into
inc
xchg
push
mov
add
add
pop
or
cmp
es
adc
divl
add
out
insl
aaa
sbb
or
loopne
sub
mov
in
in
jmp
adc
test
hlt
repz
ficomps
cmpsb
mov
push
jbe
arpl
jo
mov
popa
mov
iret
aas
add
mov
mov
inc
inc
inc
addl
dec
dec
xchg
push
or
leave
sti
mov
gs
stos
test
adc
push
jae
jno
movsl
cmp
divb
push
mov
sti
imul
pop
stc
js
sub
mov
cmp
jne
xor
pop
sbb
icebp
out
nop
jmp
in
repnz
test
cmp
nop
jg
xlat
adc
es
push
test
rclb
cmp
mov
scas
push
lret
push
loop
mov
xchg
test
push
and
mov
push
xchg
pop
and
adc
divl
decb
cmpb
pop
cwtl
repnz
out
insl
mov
jo
in
je
cmp
push
popf
or
stc
movsl
cld
popa
stos
loope
inc
pop
xchg
std
icebp
inc
enter
imul
ror
dec
stc
rorb
jge
pop
pop
and
in
popa
pusha
adc
lods
mov
mov
jl
roll
or
inc
in
movsb
jnp
or
mov
imul
roll
std
cld
adc
add
lahf
in
inc
fidivrl
mov
jge
xlat
bound
sbb
arpl
or
adc
mov
cli
xchg
mov
mov
xlat
aad
insl
aaa
push
lds
stos
test
sbb
push
rorb
ret
mov
mov
jae
sahf
popf
sbb
jp
mov
sub
adcl
pop
mov
movsb
jle
sbb
pop
addl
insb
arpl
clc
popa
cmp
in
pusha
push
test
clc
test
cmpsl
dec
add
gs
jg
jo
divb
lret
mov
mov
push
jecxz
rorb
mov
andb
jmp
or
mov
xor
inc
adc
xchg
lea
jns
std
adc
mov
jle
add
mov
cmp
gs
outsb
jne
icebp
pop
pop
xor
xchg
cs
fistpll
sub
lock
inc
inc
sbb
xchg
or
std
sbb
cmp
aas
data16
mov
inc
aas
imull
jl
lods
and
decl
mov
scas
mov
xor
outsl
mov
incl
mov
dec
mov
push
sbb
rorb
or
inc
mov
xor
sbb
clc
addl
out
inc
mov
jecxz
lock
push
sbb
loop
stos
out
ficomps
mov
mov
mov
loop
mov
cmp
sarl
jbe
cmpsl
mov
int
and
xor
inc
cmpsl
sub
icebp
or
in
sub
pop
fcompl
push
mov
inc
fdiv
lea
adc
cli
mov
sahf
inc
repz
call
ret
xor
mov
outsb
insl
and
sarl
imul
rorl
and
test
cmp
lock
out
pusha
dec
pusha
add
hlt
xor
push
aas
dec
jo
stos
hlt
push
fwait
cmpsl
movsb
lret
push
sub
fs
mov
add
cmpsl
mov
mov
mov
jnp,pn
xchg
xchg
pop
xchg
fimull
adc
dec
add
pop
fisubrl
mov
mov
jns
lock
in
cmc
jmp
jle
aad
loop
rcrl
fstl
fildll
shll
arpl
rcl
mov
jns
loopne
mov
mov
pop
call
insb
mov
ds
jmp
or
dec
dec
cmp
and
pop
sbb
iret
pop
push
loopne
dec
adc
adc
ret
jbe
shlb
or
xchg
mov
fisubrs
addr16
loope
xor
jnp
outsb
insl
daa
repz
shr
bound
fstpl
mov
clc
ljmp
push
push
dec
push
les
cmp
dec
std
xor
inc
lds
stos
test
popa
cmp
sbb
iret
inc
popf
inc
adc
push
xchg
cmp
mov
inc
pushf
fwait
push
mov
xchg
sub
or
inc
test
sub
in
sbb
push
mov
mov
ds
stos
jecxz
cmp
aas
out
lods
in
repz
fcom
scas
bound
fpatan
dec
lret
std
out
out
mov
jns
mov
push
sti
cmpl
sarl
mov
sub
outsb
in
and
xor
cs
icebp
xchg
push
out
pop
lahf
mov
and
fldenv
mov
mov
push
leave
add
ret
les
or
mov
fwait
xor
mov
in
sub
add
outsl
jbe
out
pop
xor
xchg
das
adc
dec
adc
jb
dec
push
inc
insl
call
imul
jmp
mov
inc
inc
stc
mov
fstl
cmp
cmp
out
int
cwtl
rcrb
xchg
insl
test
and
adc
lds
mov
jl
xor
mov
xor
adc
jg
leave
mov
ljmp
or
cld
lock
cmpsl
pop
sub
fstl
mov
cmpsb
hlt
sahf
fbld
push
fcmovne
mov
push
cmpsl
mov
rorb
mov
mov
inc
add
cmp
shl
lods
in
dec
popa
cmp
xor
stos
insl
in
xchg
lret
push
lock
cmpsl
push
xchg
sbb
roll
push
adc
fistl
sahf
mov
or
into
xorl
daa
std
cld
mov
icebp
fwait
and
jb
sub
scas
es
xlat
mov
std
loopne
and
loope
pop
pop
adc
mov
cmp
mov
inc
push
sbb
arpl
or
ret
cmp
cmpps
repz
cmpsw
into
popa
mov
out
addr16
bound
mov
mov
popf
push
or
bound
sbbl
xor
inc
add
js
repz
out
lea
sbbl
in
cmp
test
scas
hlt
adc
push
dec
mov
mov
and
dec
inc
xor
data16
int
inc
aaa
adc
icebp
push
xchg
push
lods
jmp
pusha
pop
pop
xlat
sub
inc
mov
and
dec
out
stc
dec
aad
cmp
fstps
ret
or
loope
or
fwait
or
shrl
loopne
repz
or
mov
jbe
addr16
in
push
sbb
daa
repz
push
push
jle
icebp
push
bound
fstpl
add
dec
and
out
push
fnstenv
mov
add
xor
or
cmp
test
and
std
xchg
jno,pn
scas
scas
push
cwtl
mov
imul
pop
xchg
or
scas
mov
popa
sbb
lret
inc
jl
sub
mov
and
ljmp
outsl
popa
lods
lock
test
flds
shll
lods
pop
and
fcmovne
xchg
lock
les
pop
ror
xchg
or
mov
mov
jle
inc
popa
cmp
jg
mov
out
xor
ljmp
xor
fiaddl
fwait
cmp
sbb
aad
push
test
sahf
adc
enter
jbe
mov
not
sbb
xchg
mov
cld
sti
mov
test
pop
icebp
fnsave
jb
mov
imul
loope
sub
sbb
pop
push
jb
ljmp
push
or
mov
aas
mov
idivl
aaa
adc
mov
inc
enter
cmp
daa
jmp
jb
mov
cmp
shrb
mov
and
aam
test
push
mov
cs
and
inc
cmp
dec
jns
push
sahf
popa
push
inc
orb
or
xor
arpl
jns
adc
fdivs
pop
jnp
cwtl
in
cld
xchg
outsl
shll
ret
fwait
dec
adc
mov
push
xorb
jbe
sti
jae
movsb
push
out
and
mov
xor
icebp
xchg
push
out
pop
lahf
pop
loope
pop
fldenv
mov
xchg
add
leave
add
int3
or
les
das
cwtl
mov
fwait
xor
cmp
pop
add
xchg
sbb
stc
jp
push
jle
sbb
and
pop
repnz
inc
inc
push
roll
add
imul
imul
imul
push
lods
sar
cli
enter
cmp
movb
mov
mov
out
mov
push
andl
add
push
aam
sbb
pop
mov
push
adc
pop
push
sbb
cmp
push
jno
int3
cltd
outsl
sbb
fsts
aam
dec
jnp
repz
fbld
ljmp
lds
iret
push
rcrl
xchg
xor
ss
int
jmp
es
adc
in
adc
aam
cmp
mov
and
fwait
pop
aad
xchg
sti
pop
push
loopne
cmpsl
cmpsl
iret
adc
ret
jbe
shrb
jno
add
lret
pop
scas
mov
jbe
mov
mov
insl
insb
add
mov
bound
fcompl
cmp
and
call
fmull
add
jns
stos
ret
xor
dec
ja
sti
cmp
push
mov
cmpsl
pushl
in
xchg
sub
addr16
into
push
xchg
mov
pop
sbb
jg
mov
lds
push
xchg
sbb
sbb
mov
fnstenv
mov
jge
loope
jmp
cmp
out
out
test
aas
seta
pushl
pop
and
lret
out
cmpsb
push
ret
pop
loope
iret
into
xchg
or
mov
mov
cmp
mov
sub
scas
or
das
jmp
sbb
cmpsl
adc
fxch
jmp
mov
cmp
das
mov
cltd
jns
push
or
shll
jmp
mov
popf
adc
mov
js
xchg
nop
jmp
data16
xor
jecxz
addb
push
inc
jmp
loope
dec
dec
pop
hlt
cmp
add
fiaddl
xor
rcl
imulb
jnp
lods
and
sahf
movsl
movsb
cmp
lds
mov
mov
outsb
xchg
adc
lahf
pop
movsl
cmp
dec
mov
popa
pop
test
cli
psubsw
mov
je
xor
cmpb
mov
aam
in
inc
fbld
add
push
stc
clc
xchg
jecxz
cltd
cmc
popf
fisubs
insb
lret
inc
push
sahf
mov
lea
xchg
mov
roll
jp
pushl
test
pop
sub
dec
shll
xor
xor
pop
lock
xor
cs
mov
xchg
add
leave
add
push
pop
push
mov
roll
rorl
stos
ret
mov
push
add
push
xchg
sbb
shr
push
loope,pn
sub
cmp
jle
pop
jo
jnp
inc
jmp
loope
dec
pop
mov
hlt
mov
push
dec
mov
cmp
test
and
std
xchg
jbe,pn
scas
scas
rorb
inc
jge
push
xchg
mov
pop
sbb
push
popl
pop
js
xchg
inc
xchg
stos
fisubl
dec
push
inc
sbb
jp
cmc
mov
call
andb
lea
shl
in
cmp
test
pop
nop
leave
fcmovu
or
loope
loope
fstp
xchg
inc
or
ret
shlb
fnsave
mov
mov
inc
add
cmp
mov
and
popa
xchg
das
cs
imul
xchg
inc
pop
adc
sub
xor
sbb
push
mov
pop
fists
in
push
or
lods
stos
mov
pushf
inc
in
add
out
pop
data16
repz
adc
mov
pop
pop
xor
xchg
cs
push
pusha
pop
cmp
push
inc
out
loope
inc
push
or
popl
inc
mov
fisubl
pop
iret
mov
inc
push
xor
repz
xchg
mov
ret
pop
ds
rolb
xchg
insb
pop
loope
xchg
or
xor
push
xchg
sbb
add
push
jnp
cmp
je
adc
and
out
jno,pt
cmp
insb
lcall
xor
xchg
aam
mov
loopne
xchg
dec
sbb
int
les
loop
add
mov
push
sarl
lea
ds
add
shl
pop
in
dec
push
xchg
xor
jmp
xchg
sar
sbb
cmp
and
jb
ficomps
cmpsb
popa
mov
or
test
clc
nop
das
push
adc
mov
sbb
clc
lahf
xor
hlt
repz
jle
mov
push
fwait
adc
or
js
loopne
insb
and
cltd
xor
mov
outsl
popfw
orb
icebp
sarl
xchg
or
lret
in
dec
dec
in
dec
pop
sbb
add
lret
aas
imulb
jnp
lods
and
mov
cmp
shrb
mov
sbb
insb
test
mov
mov
hlt
xchg
nop
dec
or
inc
jle
add
ja
sbb
cmp
ljmp
outsl
gs
out
adc
xchg
xlat
inc
inc
shl
lcall
cs
enter
in
inc
data16
rclb
aas
int3
lret
xorl
nop
sub
pop
ret
in
into
lds
pop
call
and
jmp
sub
dec
lds
mov
test
aad
dec
loop
cmpl
add
mov
or
into
xorl
inc
std
cld
sahf
pop
stc
adc
mov
fs
jo
daa
fisubrl
push
push
ja
jb
hlt
jae
pop
in
iret
dec
dec
and
test
dec
dec
lock
fnsave
mov
xchg
stos
test
add
jo
mov
fs
fnstenv
adc
xchg
xchg
mov
push
pushf
fwait
pop
leave
popa
test
push
xchg
sbb
aaa
jge
arpl
mov
push
adc
and
jb
sbb
pop
push
pop
scas
or
sbb
or
test
aaa
sbb
mov
pushf
fcoml
sahf
push
add
jmp
cmp
push
lret
mov
mov
sub
push
inc
inc
push
mov
push
fstps
jmp
adc
xchg
xor
fidivl
orl
lea
mov
enter
stos
xchg
xchg
rcl
pop
sub
fwait
hlt
push
push
xor
jl
xchg
nop
cmc
xchg
inc
push
pop
push
dec
xchg
fst
dec
lods
pop
pop
cli
push
xor
ljmp
push
cmp
clc
cmp
fstp
push
dec
mov
out
aam
cmp
sbb
mov
outsl
mov
xor
lods
stos
arpl
fdivs
and
xchg
mov
and
popa
jle
pop
cmpsb
jp
cltd
cld
es
lea
lahf
push
inc
jae
test
lods
mov
adc
pop
in
cmp
xor
jmp
movsb
addb
inc
loopne
xchg
dec
sbb
jbe
xchg
out
ljmp
iret
into
xchg
or
dec
imul
mov
sub
mov
aaa
shrb
sub
adc
mov
cmp
pop
cmpsl
sbb
les
mov
mov
stc
rcl
lahf
imul
xchg
test
mov
jno
movsl
aad
pusha
es
push
and
hlt
jbe
pop
cmpb
loope
inc
push
or
popl
push
jbe
int
fcmovu
ss
inc
enter
aad
sub
and
xchg
dec
mov
out
push
xchg
rcll
mov
popf
pushf
push
pop
leave
popa
xor
or
aas
and
cli
test
sub
jne
inc
or
jg
cld
sub
outsl
les
or
div
std
jmp
test
push
ret
imul
xlat
mov
rolb
aam
inc
loope
data16
lcall
insb
imul
rorl
call
pop
inc
inc
lret
pop
sbb
cs
add
aad
shlb
or
mov
adc
cmc
rolb
cltd
xchg
mov
or
and
lods
mov
jmp
mov
push
out
pop
pop
sub
xchg
nop
mov
jp
js
ja
je
or
dec
lock
call
flds
aam
out
out
addr16
pusha
adc
repz
mov
inc
aas
imull
jl
lods
es
movsl
cmpsb
movsl
popf
test
or
dec
cmp
xchg
push
fwait
cmp
mov
fwait
pushf
fwait
jae
mov
adc
xchg
adcl
das
cs
sub
incb
scas
jecxz
and
jmp
in
cmp
jns
add
pusha
mov
adc
xchg
mov
shr
jo
gs
jb
jmp
in
pop
popa
xchg
push
push
inc
cld
and
std
fdivs
shl
pop
in
dec
mov
repz
jmp
xor
sbb
pop
icebp
mov
test
xchg
loope
adc
xchg
mov
mov
cmc
hlt
int3
jg
mov
arpl
data16
cmp
or
js
xlat
insl
insb
and
cltd
xor
js
pop
push
test
dec
lock
inc
inc
sbb
xchg
or
pop
lock
sbb
xlat
or
lret
ds
cmpsw
into
popa
sub
out
addr16
jb
outsl
jns
jg
sbb
mov
dec
scas
insl
sarb
mov
xor
sub
adc
jne
adc
data16
sbb
sbb
mov
push
pop
or
cltd
pop
sbb
or
mov
adc
imul
push
sbb
mov
fstp
jecxz
add
ret
rcrb
push
mov
mov
mov
out
cmpsl
jl
adc
xlat
out
cmp
ffreep
inc
fldl
mov
dec
dec
dec
dec
les
in
sub
test
inc
lret
inc
xorl
cmp
jg
mov
jmp
rol
lds
jg
testb
xchg
mov
and
nop
mov
pop
sbbb
ja
sahf
jno
lahf
cli
dec
fs
jae
dec
out
and
jl
push
xlat
pop
or
sbb
mov
cmp
fwait
push
mov
push
lret
pop
rcrb
iret
dec
mov
mov
test
adc
in
sub
push
sub
cmc
xchg
nop
push
mov
movsl
xor
sbb
jg
push
and
push
in
cmp
lock
pop
push
mov
stc
clc
notl
jp
std
jbe
outsl
js
addr16
or
inc
cmp
outsb
imul
test
push
pop
pop
aam
int
pop
lock
inc
cltd
sub
icebp
or
xor
das
es
xor
xchg
push
add
repz
or
mov
inc
jnp
mov
cmp
gs
add
sub
aam
push
das
loop
sub
fnsave
aaa
cmc
jnp
jmp
mov
lret
jmp
out
in
dec
pop
scas
out
add
lret
aas
imulb
jnp
lods
and
xchg
cmp
xor
xchg
outsl
and
insb
test
mov
rolb
or
int
jle
sub
ja
sbb
cmp
ljmp
outsl
sub
lock
adc
xchg
xlat
inc
pop
shl
lcall
sub
enter
in
sti
rclb
cmp
lret
xorl
nop
sub
adc
rcll
lds
popa
mov
and
scas
jno
and
dec
lds
mov
test
aad
dec
loop
sbb
add
movsl
mov
mov
div
into
xorl
add
cld
sahf
pop
stc
adc
and
jmp
outsl
daa
fisubrl
push
push
ja
jb
je
sbb
in
les
and
test
dec
dec
lock
fnsave
mov
adc
test
leave
bound
loop
outsb
scas
mov
push
stos
lcall
xchg
movsb
das
ret
das
push
je
dec
cmp
sub
orl
xor
sub
jb
jmp
jg
or
mov
aad
pusha
and
std
jbe
out
push
std
xchg
ret
pop
loope
iret
into
xchg
or
mov
push
out
ror
or
mov
daa
jg
fs
lods
push
and
sub
pop
dec
aam
cmp
lahf
and
fcomps
cltd
sbb
push
test
adc
cmp
js
stc
shll
addr16
cmc
add
mov
mov
icebp
arpl
in
scas
daa
pusha
fsub
jno
pop
jp
gs
mov
pop
pusha
out
lret
adc
mov
cmp
rorb
push
jecxz
pop
push
sub
clc
cmp
shll
stc
mov
out
inc
cmp
adc
xor
lods
gs
jb
adc
stos
xchg
xchg
mov
mov
data16
fwait
xor
xchg
je
addl
mov
sbb
incb
xor
gs
out
pop
mov
lods
in
hlt
rcll
mov
adc
fcomp
fiadds
jns
repnz
add
rcl
mov
mov
mov
repnz
fistl
jle
inc
popa
test
sub
mov
mov
mov
sbb
xor
pusha
fcoms
mov
push
or
cmp
adc
les
shrl
leave
push
repz
sub
shl
gs
sub
jnp
insb
imul
and
rcr
pop
push
leave
fwait
adc
push
inc
inc
out
popa
pop
push
out
dec
shll
ret
movsl
mov
and
xchg
popa
fcmovne
leave
pushf
jecxz
outsl
cltd
xchg
sub
iret
into
int
test
inc
int
xchg
sub
lahf
sahf
push
or
push
mov
aas
mov
mov
xor
js
dec
add
jle
pop
cwtl
jp
insb
mull
lock
sub
out
clc
xchg
jecxz
popa
jo
fisubs
inc
lret
inc
push
sahf
mov
mov
ljmp
pop
roll
jp
pushl
test
mov
mov
jnp
out
xor
xor
lock
xor
cs
mov
test
leave
add
sbb
pop
push
mov
sarl
std
mov
stos
ret
or
arpl
test
imul
loope
sub
outsb
pop
pop
jle
pop
jo
jle
inc
jmp
rclb
pop
mov
imulb
push
dec
lods
xlat
cld
cmp
test
and
std
xchg
js,pn
scas
scas
rorb
inc
jge
push
xchg
mov
pop
sbb
push
popl
jnp
mov
fisubrl
dec
push
inc
or
dec
call
andb
lea
shll
cmp
test
pop
out
loopne
test
jge
or
fstp
xchg
inc
or
ret
shlb
mov
jns
popa
mov
mov
lea
jp
cmp
and
mov
xor
and
popa
scas
das
cs
imul
xchg
pop
sbb
push
mov
inc
inc
repz
add
cli
xchg
movsl
dec
cmpsb
movsl
movsb
mov
mov
div
int
inc
mov
cld
sti
popf
push
clc
setle
out
outsl
outsb
fldcw
pop
push
push
jbe
jno
jecxz
sbb
dec
inc
pop
rolb
dec
dec
out
push
hlt
xor
inc
clc
mov
xorb
cmp
fldt
mov
sbb
outsb
xchg
loopne
mov
mov
cs
adc
inc
cmp
ja
js
mov
aas
addb
sti
jl
xor
inc
fnstenv
lock
add
flds
rcll
pop
and
fcmovne
cld
jne
out
add
mov
into
int
cmp
xchg
mov
mov
out
rol
mov
popa
test
arpl
lods
scas
sub
sub
adcl
cmp
mov
pop
aam
xchg
push
add
mov
add
push
pushf
inc
jge
add
dec
out
in
xchg
mov
outsl
outsb
nop
or
xor
jae
pusha
pop
orw
inc
out
aas
rcr
lock
out
sbb
fadds
jae
inc
aas
mov
xor
dec
movsb
mov
xchg
adc
push
adc
arpl
popf
mov
mov
scas
test
push
in
add
xchg
mov
xchg
sbb
push
addb
jb
jb
jg
or
push
jg
inc
scas
out
ja
pop
in
or
pop
bound
cmc
hlt
mov
pop
lods
cli
std
cltd
dec
inc
mov
addr16
xchg
outsl
fwait
aas
mov
pop
test
popa
vorps
sub
jns
and
mov
and
stos
sub
dec
mov
xor
js
and
cmpsl
fsubp
or
les
mov
cmp
out
mov
call
loope
mov
jbe
sub
pop
mov
pop
inc
jmp
push
mov
push
jmp
hlt
repnz
xor
shl
push
lds
jecxz
into
loopne
mov
ret
pop
ds
rolb
xchg
insb
pop
loope
xchg
or
popf
fwait
mov
push
xchg
sbb
jle
push
jnp
pusha
jbe
jae
lods
in
call
sub
cmpsl
rcrb
or
scas
out
test
jmp
mov
pop
scas
enter
loope
in
xchg
fs
out
cld
sti
mov
lea
int3
inc
aaa
adc
pop
xchg
cmp
sarb
xor
jbe
loop
cwtl
scas
or
dec
mov
dec
dec
cmp
rorb
cmp
lcall
xchg
stos
test
movsb
mov
or
cmc
les
mov
cltd
jecxz
imul
pushf
sarb
outsb
insl
add
jecxz
adcl
popa
fnstcw
jne
int
push
je
out
and
out
bound
jecxz
ss
inc
and
stc
fcomp
fstl
adc
lret
lea
mov
sub
and
mov
cmpsl
fnstenv
xchg
mov
out
lods
enter
pusha
pop
add
cmpsb
fcompl
or
je
add
sbb
sbb
or
push
jp
or
push
push
and
dec
pusha
lret
add
repz
out
jns
xchg
shlb
mov
aaa
stc
adcl
jg
inc
mov
sub
mov
adc
xor
lahf
xchg
hlt
dec
cmp
aaa
shlb
icebp
xor
mov
scas
clc
popf
cmpsl
cmpsb
xchg
dec
sbb
mov
scas
lods
leave
mov
call
mov
lahf
push
mov
mov
jmp
cmpsb
mov
and
jns
and
pop
fsubs
in
jg
aaa
leave
jnp
pop
call
mov
jmp
or
fisubl
xlat
jo
aam
imul
push
lods
rorb
enter
lea
or
jno
and
lret
mov
pop
outsb
and
or
bound
adc
lods
jns
test
add
pushw
pop
push
cmp
or
test
lock
sub
push
pop
psubb
mov
fisubs
jge
leave
mov
mov
into
push
sbb
mov
pop
leave
inc
ret
ja
test
sbb
jl
lods
xchg
inc
dec
dec
in
inc
fnstsw
add
aas
ds
lods
jmp
adc
mov
jp
stc
xorl
adc
push
xorl
shll
xchg
xlat
xchg
lea
pop
mov
fildl
jle
adc
out
jg
inc
inc
mov
inc
movsl
rol
out
jmp
mov
aam
cld
sub
data16
pop
scas
or
inc
mov
inc
sahf
mov
test
mov
in
sub
lods
test
jmp
shrl
sbb
mov
push
or
xchg
jge
push
int
outsb
sbb
push
push
scas
and
push
pop
fadds
pop
ljmp
jne
mov
push
dec
dec
cld
push
into
iret
into
and
xor
and
into
sub
mov
test
int
dec
shr
out
xor
xor
sub
mov
stos
jno
inc
inc
and
aaa
or
sti
push
nop
out
or
jne
div
hlt
ljmp
cld
mov
mov
icebp
xchg
cmc
nop
mov
ficoms
push
inc
out
fistpl
notb
ret
in
call
rorb
out
push
fcmovu
xlat
fcmovne
ret
inc
pusha
and
lret
pusha
mov
adc
into
push
rcrl
xchg
xchg
adc
jle
sbb
add
and
add
sti
and
cs
sbb
push
adc
and
push
divl
repnz
push
insb
mov
fldt
shll
mov
std
dec
test
xchg
cmp
imul
jp
xchg
add
movsb
push
popa
pop
pop
ret
jb
and
stos
mov
sti
in
sub
adc
cmp
rorl
sub
xor
or
cmp
cmc
rolb
loop
pop
cmp
or
clc
pop
cltd
div
repz
pop
xchg
mov
daa
push
arpl
lods
push
inc
xor
jns
ja
jbe
aad
pop
pop
ret
or
inc
jmp
jecxz
mov
mov
or
cmp
rol
movsl
movsb
pop
cltd
sbb
ror
into
ret
xchg
xchg
mov
and
rol
or
add
into
mov
mov
sub
sbb
cmp
sbb
push
sbb
and
push
add
cmc
add
or
clc
mull
ficomps
push
jbe
dec
inc
in
push
imul
outsb
cmpsl
imul
push
push
mov
pop
pop
xchg
dec
dec
inc
inc
mov
jge
ja
sbb
out
mov
es
movsl
push
das
or
xchg
mov
je
cmp
scas
lcall
sar
int3
lahf
clc
and
addr16
ficompl
dec
imul
loope
push
mov
push
push
imul
dec
cmpb
bnd
in
or
or
shl
in
inc
pop
cmpsl
hlt
xor
aas
dec
mov
stos
dec
mov
clc
aaa
movsb
mov
imul
xchg
push
movsl
insl
insb
ja
sahf
lahf
sahf
aas
jns
aaa
cltd
or
es
ja
jns
inc
sti
add
sbb
dec
pop
pop
xchg
sbb
or
mov
add
insl
sbb
hlt
imul
xlat
mov
dec
jbe
loope
mov
cld
sti
outsl
jmp
jle
cmp
jo
insl
popa
jmp
jmp
inc
pop
mov
pop
pop
xlat
xor
xor
std
inc
push
push
mov
in
pop
shlb
lahf
mov
xor
movsl
leave
mov
add
mov
mov
add
cwtl
push
add
add
xchg
mov
std
mov
and
pop
sbb
cltd
sbb
or
pop
ficoms
test
xor
shl
pop
pop
adc
mov
add
adc
mov
lahf
mov
dec
mov
sub
push
icebp
fwait
sub
mov
adc
ror
into
subl
lret
mov
andl
cmp
inc
je
in
cmp
dec
add
outsl
xor
popf
xchg
pop
lods
addl
data16
sbb
push
pop
adc
or
aad
lret
push
mov
loop
pop
mov
loop
inc
ja
jb
ljmp
pop
mov
mov
shlb
cmpsb
mov
dec
dec
je
sbb
and
pop
nop
fcomps
popf
xchg
push
dec
ss
pop
es
test
or
add
stc
jmp
add
in
loop
lahf
sahf
mov
gs
push
dec
in
mov
cwtl
dec
jmp
mov
addr16
push
jmp
sbb
roll
out
and
mov
mov
adc
or
push
mov
jmp
push
loopne
lret
hlt
lret
subl
arpl
aaa
aam
sbb
pushf
mov
or
es
testb
push
incl
sub
adc
imul
sbb
sbb
add
push
insl
in
jmp
pop
push
sbb
imul
mov
inc
add
fwait
xor
outsb
test
mov
and
sbb
imul
loope
cmpb
xchg
bound
sub
inc
xlat
push
out
cmp
int
and
fwait
pop
aad
push
xchg
popf
lret
stos
test
cld
xchg
pop
cmpsl
mov
or
in
xchg
fstpl
cmp
test
lds
xor
fnstsw
jae
jg
mov
push
inc
push
in
stc
gs
push
pop
mov
cltd
icebp
out
in
pop
inc
pop
fidivs
xor
jl
daa
sub
fs
cmc
sbb
push
enter
std
xor
pop
pop
cwtl
gs
xchg
pop
mov
mov
test
adc
dec
mov
sub
pop
out
inc
sub
and
fsubs
jg
loopne
out
cmp
fadds
icebp
adc
imulb
fucom
sbb
mov
rol
cmp
and
mov
inc
mov
ret
in
push
inc
inc
sub
jae
push
dec
inc
fidivs
xor
mov
les
pop
adc
or
mov
test
jp
jbe
imul
cmpsl
mov
lds
stos
jno
lcall
mov
outsl
jmp
and
push
push
xor
popa
pusha
xor
pop
pop
pop
adc
lcall
in
lock
in
cbtw
adc
imul
dec
subb
sbb
adc
out
stos
lcall
and
cltd
and
jle
pop
fwait
cmp
pop
pop
sbb
mov
js
dec
sub
inc
adcl
sbb
or
add
in
in
stos
pop
push
mov
stc
clc
notl
jp
std
jbe
outsl
js
addr16
or
int3
lret
test
out
mov
cs
xor
imul
sub
mov
clc
and
or
pop
and
dec
idivb
jmp
dec
movsl
inc
mov
or
mov
add
stos
inc
mov
test
daa
add
repz
in
jnp
mulb
pop
repnz
cmp
mov
insb
fcomps
cmp
push
sub
pop
inc
ja
dec
dec
and
mov
pop
push
or
imul
scas
aas
inc
aas
mul
sub
jbe
test
clc
pop
mov
scas
lods
xor
xchg
adc
sub
or
lock
test
nop
cwtl
into
jmp
jne
shlb
inc
adc
sub
jnp
sbb
or
inc
pop
add
scas
out
adc
psubd
std
dec
jns
loope
mov
inc
dec
pop
add
sti
outsl
jmp
jle
aad
jo
out
insb
imul
imul
cmp
movsb
xchg
pop
pop
dec
dec
jne
andl
mov
mov
xor
xor
addl
adcb
xorb
in
mov
shl
jge
xchg
mov
es
stc
or
mov
mov
repnz
push
loopne
aas
lret
jge
int
jbe
mov
repnz
cli
cmp
add
incl
and
icebp
xchg
movsb
movsl
movsb
mov
sbb
fwait
ljmp
sub
mov
sbbb
inc
js
xchg
es
xchg
orb
xchg
or
aaa
js
je
dec
or
jle
xchg
sahf
arpl
sbb
or
mov
add
popa
pop
xlat
clc
xchg
fldt
jns
fiadds
dec
add
push
xlat
jb
outsl
outsb
cmpsl
in
pop
pop
ds
pop
push
push
ds
jg
es
insb
adc
dec
dec
cmp
cmp
test
xchg
jge
stos
test
shll
mov
xchg
out
stos
lcall
xchg
mov
push
nop
pop
sbb
fs
dec
test
xor
lahf
ds
addb
int3
ret
in
out
and
push
stc
movsb
or
inc
outsb
movsl
add
sub
lock
loopne
in
cmpsl
test
popf
in
and
jge
scas
dec
cmpsl
test
lcall
xchg
mov
lcall
sub
pusha
xchg
pop
mov
mov
popf
pop
jae
andl
xor
in
mov
pop
insb
add
or
test
loope
add
sti
push
out
ret
sarb
dec
aaa
fs
inc
ss
pop
pop
pop
xor
mov
jmp
ret
int3
jp
push
jbe
es
lods
aas
inc
push
dec
inc
adc
lods
cmpsl
dec
cmp
mov
push
mov
aad
mov
nop
jbe
mov
nop
jle
stos
lcall
xchg
out
jno
push
popf
adc
mov
adcl
mov
les
ja
xor
jae
pop
pop
ret
or
test
ror
jmp
out
imul
sahf
shl
stc
inc
pusha
fldcw
clc
iret
jns
movsb
mov
ret
ror
inc
cmpsl
imul
and
xchg
or
mov
mov
or
sub
xchg
dec
mov
sbb
push
pop
test
aad
out
fsubl
insb
arpl
mov
les
push
cli
stc
enter
hlt
repz
add
xchg
push
rcrb
mov
mov
cmpsl
ds
push
popa
pusha
jle
jne
push
or
scas
mov
enter
loope
adc
lods
cmp
aas
mov
sub
sbb
mov
scas
call
popf
push
adc
xchg
jl
imul
pushf
lock
mov
aad
pusha
aam
jmp
loope
ja
jae
or
jnp
and
adcl
gs
dec
or
xlat
dec
test
cmp
xor
fcmovnb
pop
outsb
loopne
adc
mov
addr16
xor
ret
mov
adc
lods
lret
jge
mov
lret
hlt
or
les
jbe
xchg
in
mull
and
lcall
mov
jge
fisubrs
mov
stc
clc
jl
add
ja
lret
lret
mov
mov
xchg
imul
test
bound
sbb
mov
dec
inc
push
push
lret
inc
loope
pop
push
out
mov
inc
mov
mov
nop
mov
sub
push
sbb
repz
jl
xchg
lahf
sahf
popf
push
clc
mov
add
arpl
sub
loop
pop
loope
out
mov
jne
dec
sbb
enter
ljmp
jecxz
scas
mov
pop
repnz
jmp
pop
xor
add
enter
cmp
das
es
leave
enter
mov
sub
jp
adc
or
jo
sbb
pop
scas
mov
pusha
and
incb
out
jg
jg
mov
cmpsl
out
jg
push
loope
xchg
pop
or
repnz
gs
lock
mov
cwtl
out
inc
notb
fs
pushf
push
stc
jecxz
mov
test
push
shll
je
dec
jae
and
inc
ficoms
aaa
jmp
or
xchg
dec
cmp
ss
gs
ds
add
and
mov
mov
push
jo
and
push
call
mov
sbb
pop
fsubr
cmp
mov
and
fisubrs
jbe
cmpb
jge
ljmp
jecxz
or
dec
or
stc
jno
xor
aad
loope
aaa
or
push
dec
cmpsl
cmpsb
and
subl
mov
rcl
and
imul
add
pop
pushf
pop
pop
mov
test
notl
mov
js
js
mov
cmc
out
into
inc
subb
sbb
fisubl
je
bnd
adc
fcompl
jecxz
les
setnp
fs
imul
imul
test
dec
outsb
pop
pop
sub
mov
jne
movsl
das
pop
dec
inc
jge
cmp
cs
pop
bts
dec
ss
inc
aas
push
xchg
dec
xchg
test
into
hlt
js
stc
movsl
scas
lods
jle
ljmp
pop
add
std
jecxz
sahf
call
jl
test
dec
rcl
in
lea
leave
loopne
jbe
sbbb
js
or
inc
inc
inc
inc
adc
jge
dec
dec
sbb
mov
pop
stos
add
jo
inc
aas
mov
xor
lret
jno
add
sub
push
inc
lods
das
push
xchg
arpl
scas
cmp
adc
adcb
push
call
xchg
out
cli
push
sbb
nopl
nop
xlat
sbb
mov
stc
testl
jmp
sbbl
out
fs
repz
or
ffreep
push
fisttpll
cli
in
pop
jecxz
test
bound
shrb
sub
daa
and
and
cmp
das
lods
pop
daa
xor
cmp
mov
test
xchg
inc
aas
aam
mov
sub
movups
ficoms
mov
into
out
in
mov
imul
jb
lods
push
inc
xor
aaa
jns
nop
jnp
cli
pusha
pop
pop
xor
adc
dec
sbb
ret
aad
out
and
imull
dec
add
in
and
sub
inc
mov
iret
jg
movsb
mov
fisubl
lret
mov
pop
sbb
mov
push
sbb
sub
stc
adc
sub
xor
stc
pushl
sub
inc
sahf
in
and
andb
adc
pop
sub
call
jp
icebp
aas
push
imul
cmpsl
repnz
shl
pusha
sbb
inc
dec
pop
add
cld
dec
test
xchg
cmp
imul
jmp
pop
shr
xor
cmpsb
mov
shlb
and
and
jno
mov
push
sub
and
lods
ja
cmp
push
lahf
pop
movsl
inc
inc
and
ds
push
lods
lcall
fstl
stos
mov
mov
or
lahf
sahf
mov
xor
arpl
jno
fisttpl
add
jmp
mov
sub
int3
shlb
repnz
testb
nop
push
test
js
fcomi
in
jmp
ss
stc
out
movsl
mov
fistps
fcoml
into
add
sbb
push
push
ret
xchg
or
scas
mov
mov
add
cmp
mov
stos
in
pop
popa
pusha
pop
pop
xor
cmc
mov
jnp
adc
bnd
xor
in
cmp
add
adc
xchg
fdivr
mov
aam
stos
pop
and
lret
inc
shrb
data16
int
enter
mov
pop
mov
ret
aas
push
pusha
pop
jbe
push
jae
es
inc
push
jle
mov
push
es
mov
out
xchg
mov
ljmp
mov
xor
je
add
cmp
lahf
sahf
sti
imul
test
mov
push
aam
inc
fcmovnu
lock
and
ret
jge
call
jecxz
icebp
movsb
jnp
cmp
xor
and
loope
ret
movsl
and
xchg
sbb
rcll
lahf
inc
dec
lret
add
mov
sub
rol
or
add
mov
push
test
mov
ss
ret
add
pop
adc
gs
adc
add
inc
pop
jo
push
add
jbe
lcall
xchg
aam
inc
pop
mov
aad
jno
pushf
mov
bswap
cmp
fs
inc
ja
mov
pop
outsl
push
push
nop
nop
jge
jl
jns
pop
mov
adc
mov
push
push
mov
push
pop
sbb
or
insl
fistps
mov
aas
cmp
adc
push
std
mov
mov
popf
cltd
adc
arpl
add
pop
ret
sti
sbbl
mov
jns
bound
mov
or
bound
popa
call
adc
mov
cmp
and
add
js
in
jmp
xchg
fdivs
lret
aas
ds
or
es
leave
enter
or
int3
lret
add
mov
and
insl
and
dec
mov
es
lea
andl
dec
or
jg
cld
sub
sub
or
jns
imul
in
jmp
test
mov
popf
fisubs
mov
cld
dec
test
sahf
test
arpl
stos
jl
insl
insb
loopne
mov
mov
mov
sarb
movsl
daa
fs
dec
sbb
sub
dec
les
push
shlb
and
dec
inc
lds
aad
popa
sub
adc
les
xchg
xchg
xchg
out
pop
xchg
mov
fwait
mov
test
imul
stc
pop
push
push
leave
loopne
jbe
andb
pop
dec
sbb
dec
in
jae
push
push
iret
mov
in
jmp
pop
loope
add
enter
cmp
daa
test
lret
int3
jecxz
out
stos
lcall
add
pop
and
xchg
sub
xchg
push
cmp
sbb
mov
addr16
fcoml
and
push
divl
repnz
addr16
pop
push
jmp
mov
loop
stos
addr16
out
mov
sahf
mov
jmp
ror
xor
sbb
insb
mov
movl
sti
push
daa
sub
jg
xchg
idiv
lock
dec
scas
dec
dec
cltd
push
sbb
or
adc
xor
inc
aas
nop
xchg
stos
test
icebp
mov
ja
stc
clc
rcrb
cmpb
jns
sbb
in
fwait
mov
outsl
mov
pop
and
addr16
push
loope
jo
sahf
push
into
jns
dec
dec
and
out
inc
push
cmpsb
jl
dec
dec
add
aaa
ss
lahf
xlat
aam
cmovbe
rol
dec
movsl
movsb
dec
repnz
scas
scas
scas
iretw
sbb
push
xchg
mov
and
add
jl
mov
sbb
cs
xchg
xchg
xchg
jmp
pop
mov
sbb
or
jle
arpl
xor
pop
inc
mov
int
adc
jne
std
cwtl
fldcw
shll
les
lret
mov
rcl
fwait
push
jmp
gs
test
mov
mov
pop
pop
js
push
mov
and
jmp
imul
sbb
out
cmp
outsb
popf
aas
mov
loope
sub
cltd
dec
prefetchw
iret
movsl
sti
jae
div
repz
cs
mov
sbb
out
xchg
mov
in
pop
jo
insb
andb
push
loop
sub
ret
mov
pop
jecxz
outsb
dec
inc
cmp
xor
popa
mov
hlt
xor
inc
aas
inc
jge
test
push
jns
jb
mov
sub
sahf
arpl
pop
daa
bound
sahf
jbe
mov
add
pop
es
mov
mov
sub
es
call
cmpb
loope
test
push
shlb
jo
shrl
flds
xchg
jmp
aam
dec
xchg
repz
in
lret
jo
icebp
dec
adc
outsb
insl
insb
in
fmulp
inc
add
push
fistps
je
mov
cmp
das
lods
pop
mov
push
rcll
mov
mov
mov
lds
dec
xor
mov
lahf
add
cmp
cld
sti
push
mov
imul
insl
insb
mov
imul
push
bound
mov
cmp
out
add
inc
push
mov
mov
dec
ss
aad
loope
pop
fisubrl
clc
iret
jns
movsb
mov
ret
ror
push
fs
inc
mov
pop
fstpt
push
mov
sub
je
pop
xchg
lea
jbe
mov
imul
jl
cmpsl
adc
mov
lock
clc
loope
in
in
bound
pop
adc
int
pop
mov
loopne
lods
lods
xchg
xchg
std
jbe
outsl
js
addr16
or
or
mov
push
pop
into
push
push
bound
sbbb
and
loope
inc
ficomps
fisubrs
jecxz
push
lock
lock
loop
loop
jge
rcll
lcall
daa
push
mov
int3
jg
mov
sti
push
aam
and
push
jmp
insl
insb
imul
cmpl
push
enter
mov
les
mov
out
sub
jmp
fnstenv
dec
aad
dec
cmpsl
sar
cmp
rclb
xor
shrl
inc
lahf
mov
and
jnp
or
sarb
sbb
popa
sbb
lea
lret
mov
and
push
xchg
xchg
or
idivl
lock
negb
in
fldenv
div
hlt
repz
ja
cwtl
outsl
mov
or
call
in
pop
sbb
push
push
aas
sti
mov
pop
pop
or
cmp
xor
jl
fistpll
and
jnp
and
lds
popa
xor
leave
mov
lods
stos
lcall
xchg
mov
popf
pushf
out
addr16
pop
sbb
xor
xor
and
out
fs
pop
leave
test
insl
adc
push
xlat
dec
push
xor
stc
cmp
xlat
add
xchg
inc
aas
ds
inc
push
int
cmpsl
add
push
dec
mov
imul
cltd
cwtl
xchg
pop
pop
pushf
or
std
mov
pushf
mov
sub
and
lea
subl
jae
shrl
sbb
insb
arpl
or
add
repz
or
imul
push
inc
cltd
outsb
push
push
cmp
outsb
out
pusha
sbb
pop
push
inc
decb
push
jl
cmp
and
fnsave
mov
mov
jl
jns
sbb
out
out
mov
fisubl
loop
inc
xchg
xchg
adc
adc
push
scas
lods
lods
and
outsl
jns
sub
push
sbbb
fwait
mov
add
das
pop
icebp
inc
scas
or
jae
add
das
and
jae
and
and
jmp
in
xlat
jmp
or
and
leave
sbb
cmp
call
mov
adc
js
int
inc
mov
push
xchg
arpl
xchg
cmpsb
lahf
sahf
sbb
xor
test
cltd
enter
add
sub
inc
sbb
cmp
xchg
add
test
in
outsl
xor
jmp
pusha
push
les
and
mov
mov
push
push
mov
sub
insb
imul
cmp
cmpsb
loop
cmp
popa
aad
scas
loop
mov
popa
fst
jmp
sbb
call
adc
inc
lret
adc
or
test
or
fsubrl
outsb
cwtl
xchg
cmpb
jge
sub
sbb
rorb
nop
test
imul
push
push
std
inc
ljmp
pop
arpl
in
or
jg
movsb
jnp
popaw
das
aaa
xor
xor
daa
mov
or
rclb
lock
das
icebp
pop
je
scas
and
jbe
lret
mov
mov
dec
ret
mov
sub
pop
clc
paddsw
adc
js
cmc
rcl
and
jge
xor
les
or
mov
cmc
stc
jae
fsts
lret
sbb
hlt
stos
out
arpl
push
mov
jmp
into
int
outsb
out
pusha
popa
pop
outsb
ja
test
ret
iret
adc
add
out
sub
pop
xchg
popa
or
inc
mov
pop
pop
push
fildll
cwtl
iret
adc
arpl
movsb
push
stc
or
add
xchg
sub
test
push
rcrl
push
out
imul
mov
mov
xchg
das
adc
push
pop
out
pop
pop
dec
jno
in
add
in
push
push
push
push
push
jno
mov
adc
fst
dec
inc
inc
daa
sub
sub
stos
popf
aam
inc
cmp
sub
iret
into
fs
and
test
sarl
daa
bound
push
xchg
mov
mov
incl
test
imul
sbb
or
popw
add
test
or
jg
sti
mov
ljmp
std
push
jmp
xchg
pop
rcrb
ret
xor
inc
insl
pop
pop
test
cmp
push
pop
pop
jns
shrb
addl
lahf
movsl
dec
cmp
mov
and
pop
xchg
mov
decb
add
pop
lcallw
add
insb
sub
adc
and
pushl
mov
mov
jnp
data16
fisttpll
out
add
push
push
push
pop
mov
in
in
in
pop
pop
ficoms
xor
jl
and
mov
fstp
repz
lret
mov
scas
lods
adc
sbb
fwait
pop
and
lret
mov
add
mov
mov
xchg
nop
pop
adc
pushl
hlt
shl
clc
adc
and
sti
sbb
pop
pop
outsl
addl
pop
ficoms
or
cmpsb
dec
popa
mov
add
fistpl
lds
jb
ror
fwait
bound
mov
xor
mov
ds
push
popa
pusha
mov
pop
jns
movsb
push
pop
inc
inc
addl
and
mov
es
testl
mov
mov
mov
stos
push
lahf
aaa
xchg
xchg
pop
outsb
mov
push
mov
jb
clc
lahf
insb
sub
je
gs
push
xor
inc
inc
pop
pusha
fcompl
in
add
out
jecxz
dec
dec
dec
dec
or
fisttps
xor
fs
loopne
inc
fisubl
iret
nop
sbb
sti
add
retw
xchg
xchg
gs
pop
push
mov
push
xor
lods
shrb
xchg
pop
mov
cmc
shrl
sbb
inc
or
popf
jg
cld
sub
sarl
and
arpl
mov
insb
mov
xchg
stc
push
nop
div
hlt
repz
gs
jae
cld
inc
add
outsb
rcrb
gs
sahf
mov
outsl
mov
pop
xchg
lahf
push
push
inc
cld
mov
push
mov
fisttpl
and
inc
sti
inc
push
mov
xor
jno
cmp
ss
jno
ficomps
pushf
xor
add
mov
sub
js
stc
push
or
mov
mov
mov
jo
jb
in
dec
mov
xchg
and
jo
lcall
arpl
adc
cmp
push
ret
pop
jge
jnp
dec
mov
adcb
cli
dec
mov
fadds
cltd
pop
inc
aas
div
xchg
add
lods
and
add
cs
rcl
iret
dec
into
imul
mov
dec
test
sbb
mov
xor
movsb
pop
xor
xchg
adc
mov
jmp
jg,pt
lcall
xor
scas
lock
fcoms
fsts
mov
lret
imul
outsl
test
insl
aas
pop
arpl
js
mov
inc
dec
jg
dec
sbb
pop
jne
leave
es
mov
out
out
pop
push
cli
push
adc
and
adc
fcom
mov
pop
push
fists
js
pop
ljmp
jbe
sub
mov
gs
push
jp
fwait
xchg
nop
daa
jae
clc
pop
push
rcll
mov
inc
imul
inc
sbb
and
in
popa
mov
fcmovne
pop
inc
aas
inc
jge
test
push
jns
jb
mov
gs
movsl
push
xchg
outsb
sub
ds
sahf
cmpsb
fdivl
mov
fists
and
cmpsb
sub
inc
mov
jmp
jge
xor
pop
aam
movsl
in
xorb
imul
rcl
shrl
pushf
fsubl
out
out
add
mov
jns
popa
lds
aad
jge
inc
push
jg
sub
and
cs
int
jmp
adc
jno
xor
stc
movsb
leave
or
mov
jae
or
jbe
lock
xchg
out
aad
mov
dec
out
and
in
push
dec
mov
nop
and
push
and
pusha
sbb
lret
testb
add
pop
aam
or
sarl
fstpl
jnp
xchg
add
push
cmp
leave
mov
pop
ret
rorb
inc
int
lret
mov
dec
mov
push
lret
or
mov
fisubl
jns
cli
sub
push
cmpsl
outsb
adc
lock
inc
or
lock
push
sbb
fistl
jecxz
shrl
js
jno
je
push
fcomps
pop
mov
push
nop
mov
inc
add
in
xor
xlat
pop
pop
cmpsl
arpl
or
dec
out
xor
adc
add
out
sub
sbb
push
inc
mov
stos
test
sbb
or
clc
rcrb
mov
ret
sub
sahf
popf
call
and
ljmp
lret
rolb
push
fistps
pop
cmp
pop
dec
daa
mov
ljmp
xchg
cmpsb
inc
imul
das
xlat
mov
lds
outsb
stos
test
mov
mov
sub
inc
xchg
stos
in
jno
xchg
xchg
aaa
andl
mov
shlb
ja
adcl
das
cs
jb
push
adc
add
addr16
push
mov
repnz
outsl
push
add
femms
or
xchg
aam
pop
imul
fcmovne
add
adc
addr16
rcl
cli
dec
add
mov
mov
jns
out
andb
call
lcall
in
sub
xchg
pop
icebp
ret
or
loope
mov
mov
lds
lea
nop
xchg
movsl
mov
xorb
mov
jle
inc
xchg
xchg
xchg
pop
jae
mov
pushf
addr16
add
sub
fsubs
mov
ficoms
imul
subb
or
lds
call
inc
pop
lcall
ss
rorl
shl
sub
xor
repz
cs
rcl
cld
mov
xor
sbb
lea
push
mov
and
pop
push
xor
sub
cld
cmp
xchg
mov
mov
pop
push
js
inc
mull
jp
jmp
xchg
mov
mov
inc
mov
std
ss
imul
repz
outsl
inc
ja
loopne
mov
mov
aas
pop
push
bound
test
ja
mov
inc
inc
inc
xor
cs
dec
cmp
fucomp
adc
je
inc
fcompl
or
scas
popa
fldl
adc
sub
lds
mov
addb
dec
test
mov
imul
jmp
adc
icebp
mov
push
divps
jle
icebp
jl
jmp
in
repnz
in
and
das
xchg
aam
loope
or
daa
test
lret
and
jo
add
imul
mov
mov
push
inc
popf
pushf
or
in
adc
sub
testl
xor
andb
mov
insl
mov
sub
out
out
out
les
push
imul
xchg
xchg
repnz
push
loope
add
jp
icebp
mov
add
push
fs
mov
ss
pop
pop
fdivl
jno
rorb
test
sub
ljmp
cli
push
dec
dec
in
dec
test
cmp
ss
lret
aas
mov
mov
loope
add
scas
les
pop
jge
push
imul
jge
xchg
mov
fwait
mov
xor
insb
outsb
insl
mov
loop
jbe
je
fistps
pop
sub
jge
inc
inc
int3
adc
rorl
out
out
in
shl
mov
fldcw
cld
lret
push
lret
cmp
mov
fs
cwtl
sbb
cmpb
and
pop
ret
sahf
push
push
testl
cs
test
dec
and
jo
mov
repnz
cs
outsb
enter
test
iret
lcall
add
mov
test
insb
pop
data16
rorb
ja
pusha
and
mov
enter
repnz
lret
pop
dec
icebp
xor
sub
push
xchg
xchg
pop
leave
dec
cmp
or
iret
sbb
jae
pop
sbb
inc
stos
test
fistl
jge
in
hlt
clc
div
jmp
mov
imull
pop
and
push
test
pop
int3
fstpl
loopne
jp
sbbb
in
pop
dec
dec
sub
jns
inc
pop
fs
push
out
out
mov
inc
in
mov
dec
aam
fbld
test
xor
enter
mov
dec
stos
lcall
sbb
sbb
mov
push
sbb
sub
stc
adc
and
pop
add
ja
sub
inc
sti
add
sbb
adc
push
xchg
push
mov
mull
pop
mov
shll
loope
sbb
cld
sti
dec
xor
cmp
push
rol
jmp
push
rcr
xor
movsl
mov
popa
pop
pop
shll
and
or
mov
imul
lods
jbe
aaa
ss
inc
xor
cmp
add
adc
int3
or
mov
lahf
lcall
mov
adc
rorl
scas
daa
or
andb
push
jnp,pn
mov
test
idivb
iret
rcl
jmp
cmpsb
shlb
ret
jbe
jecxz
mov
pop
dec
xor
sub
lret
hlt
lret
jns
mov
addr16
pop
push
xchg
lret
mov
mov
sbb
or
pushf
sub
cli
js
sub
push
je
add
adc
roll
in
inc
out
orl
adc
push
push
push
div
mov
ret
lcall
jnp
imul
jb
ljmp
pop
ds
insb
push
push
ds
jg
es
lds
pop
and
mov
mov
inc
ds
cmp
mov
jbe
lods
cltd
cwtl
sbb
sbb
sar
mov
xchg
lock
xchg
cmp
ror
jp
jne
sbb
ja
jl
push
push
insl
or
icebp
dec
fs
cmp
pop
ljmp
and
xchg
jae
movsl
pusha
cmp
rcl
lahf
sbb
cwtl
xchg
cmp
mov
pop
xchg
pop
lahf
and
jns
xchg
movsb
sub
lea
sbb
jmp
scas
lea
dec
xor
sub
out
inc
or
test
lock
fimull
push
xchg
fsubs
pop
cli
div
dec
pop
int3
jp
inc
or
dec
push
sub
gs
outsb
insl
fistpll
pop
fldl
sub
pusha
pop
pop
test
loop
test
out
das
call
dec
dec
mov
repnz
fwait
inc
push
mov
cmpsb
jg
mov
or
stc
enter
hlt
repz
jno
and
bnd
in
push
xchg
xchg
mov
jbe
leave
jbe
add
jnp
out
in
and
popa
mov
fistpl
xor
xchg
dec
mov
int3
push
insb
mov
fimull
lret
mov
pop
push
fdivl
mov
inc
dec
xchg
lahf
test
add
xor
mov
sbb
push
ljmp
push
add
adc
xchg
lret
push
lahf
loopne
out
imul
pop
testl
sub
pop
adc
nop
mov
jns
xchg
loop
inc
inc
jl
sbb
push
push
xchg
xchg
leave
dec
cmp
or
iret
or
test
xlat
sbb
adc
imul
or
leave
stos
and
cwtl
icebp
das
xchg
xchg
xchg
mov
add
pop
pop
jno
rol
sub
cwtl
add
jns
loope
push
pop
push
repnz
jno
in
inc
jmp
pop
shr
or
fidivl
popa
xor
xchg
dec
cmpsb
mov
jg
scas
lods
mov
loope
lret
aas
mov
bound
mov
mov
scas
repnz
and
xor
test
and
fwait
sbb
repz
and
cmp
push
mov
popf
shl
jp
push
or
aad
add
repz
or
gs
leave
enter
js
rcl
dec
ja
push
jbe
pop
push
push
mov
push
push
bound
xor
mov
pop
inc
jnp
sub
inc
push
shlb
adc
lahf
std
xor
xchg
rorl
or
fildll
mov
scas
lods
out
lcall
fwait
adc
imul
test
pop
lea
pop
and
sti
pop
pop
pop
leave
mov
push
insl
xor
push
inc
sahf
sub
dec
dec
dec
in
mov
aad
out
sub
movsl
pop
movsb
hlt
ror
add
sbb
popf
jnp
sub
lcall
fwait
and
orl
test
fidivl
das
mov
inc
sbb
cmp
enter
sbb
add
adc
mov
repz
or
pop
sar
hlt
mov
in
arpl
andl
jo
call
pop
pop
xor
es
in
pop
jl
inc
or
int
dec
clc
in
xor
lods
outsl
out
hlt
add
push
sbb
xor
xor
aad
leave
or
cmpsb
mov
mov
jp
add
xchg
xchg
out
sub
jmp
gs
jns
mov
pop
loopne
inc
push
js
jbe
fiadds
add
jle
vhsubps
out
psubsw
mov
jnp
mov
out
fcmovu
mov
shrl
testl
mulb
pop
xchg
xlat
sbb
ror
mov
pop
push
jl
rol
jae
inc
mov
ja
adcl
das
mov
xor
jae
mov
adc
sbb
pop
jno
or
ds
and
repnz
mov
hlt
jecxz
mov
mov
adc
mov
lds
dec
cwtl
outsb
pop
pop
daa
inc
and
push
les
pop
mov
dec
dec
inc
shlb
sub
fcomps
inc
adc
adc
int
in
inc
mov
lds
test
mov
mov
lods
stos
jbe
adc
inc
aad
cld
sahf
negl
adc
xchg
sti
int
sbb
fst
inc
jp
jbe
push
je
or
jecxz
xor
adc
mov
lock
fstps
loop
inc
leave
cli
shl
das
es
leave
enter
les
rorl
sti
ret
xchg
xchg
adc
xchg
or
mov
scas
sub
stos
push
dec
pop
fidivl
cs
mov
push
outsl
lods
adc
and
cltd
out
adc
enter
xor
lds
adc
mov
bound
or
clc
nop
iret
dec
dec
int
add
inc
stc
jne
mov
repz
iret
xchg
test
iret
mov
pop
dec
xorb
pusha
les
sub
sub
jge
and
mov
mov
dec
dec
popf
xchg
dec
dec
aaa
sub
movsb
std
int3
or
mov
stc
orl
lea
movsl
mov
xorb
xchg
xchg
jmp
std
mov
inc
fwait
mov
outsl
mov
pop
daa
inc
jns
jne
push
das
out
sbb
push
iret
sarb
in
or
sbb
jmp
add
add
or
addr16
sub
enter
fstps
fldenv
sbb
lods
jp
fwait
mov
mov
sub
stos
andb
dec
orb
and
xchg
pushf
mov
sub
jnp
xchg
sbb
push
mov
popf
shl
jmp
push
or
aad
adc
repz
std
ss
imul
jb
dec
int3
lret
mov
mov
stos
jg
cmpsl
stos
sub
pop
pop
pop
mov
sub
inc
lcall
dec
dec
mov
or
push
fwait
sahf
xchg
ss
inc
mov
lds
fildll
inc
add
les
lods
xchg
xchg
mov
jmp
sahf
out
out
pushf
mov
jo
jbe
sub
sub
aam
jp
jbe
push
xor
rcrb
push
rol
aad
out
mov
jg
ret
icebp
in
jmp
push
pop
dec
jo
inc
femms
loope
push
stos
push
fadd
dec
ficompl
adc
test
push
xchg
push
mov
push
add
mov
mov
sbbl
and
mov
imul
dec
add
addr16
pop
jno
pop
add
aas
not
inc
push
or
aad
add
lahf
loopne
in
add
outsl
cmpsl
mov
ret
fwait
mov
int3
inc
aaa
adc
pop
xchg
mov
rorb
pop
pop
aam
jne
mov
push
lret
clc
mov
cmp
pop
xor
jns
lret
cmp
shrl
cmp
sub
test
inc
lret
sub
mov
push
adc
xchg
pusha
hlt
jmp
pop
pop
jp
dec
jl
cld
je
sbb
arpl
and
xor
adc
std
xor
jo
out
in
popa
mov
xorl
sarl
fst
xor
leave
enter
outsl
mov
pop
mov
lret
aas
pop
mov
xchg
sub
ret
enter
xor
and
das
cs
test
push
sbb
and
and
lcall
xchg
adc
lcall
test
div
out
out
sti
mov
repnz
cmp
cmp
outsl
outsb
insl
insb
in
pop
xor
mov
inc
cld
pop
inc
and
pushf
adc
dec
inc
inc
or
mov
sbb
xchg
push
out
rcrl
pop
push
mov
lds
mov
mov
jp
mov
lods
outsl
cmpsb
xor
into
call
mov
std
das
addr16
push
jns
dec
in
xchg
aam
js
jbe
call
jae
jge
add
out
in
cld
inc
mov
icebp
in
jmp
repz
pop
mov
inc
inc
sub
cs
repz
fadd
rcl
mov
pusha
cltd
cwtl
push
loop
mov
or
inc
sub
adc
sub
dec
mov
ja
ja
inc
imul
test
call
insb
outsl
push
pop
adc
bound
add
divl
lahf
mov
lds
ss
sub
aas
xor
add
inc
bound
sub
pop
inc
mov
inc
aas
dec
and
add
jo
fcompl
or
jns,pn
rclb
cltd
xor
cmp
and
rcrl
mov
and
jle
sahf
mov
push
lcall
pop
push
push
js
pcmpeqw
fldt
jle
jno
inc
inc
inc
adc
jg
push
dec
mov
inc
mov
shr
xlat
mov
loopne
push
sbb
sbb
iret
into
adc
mov
or
ret
outsb
movsl
cld
mov
repnz
es
pop
xor
inc
sti
add
sbb
add
addr16
outsb
jno
or
push
stos
sbb
psubd
movsb
movsb
jnp
xchg
fadds
cmp
fs
sub
int3
lret
xor
inc
cmp
adc
out
lret
sbb
push
pop
pop
sub
dec
mov
pop
in
sub
mov
mov
orl
scas
jns
add
xchg
dec
hlt
cwtl
mov
std
cmp
xchg
rolb
pop
cmp
lahf
repnz
push
sbb
push
mov
insb
imul
or
aam
popa
divl
sub
les
push
mov
mov
dec
sbb
jmp
pop
cmp
inc
adc
xchg
cmp
out
xor
lds
cmp
clc
or
mov
pusha
mov
mov
shrl
cwtl
es
xor
mov
ds
mov
cld
push
jmp
dec
or
pop
scas
shll
stc
fsts
aad
push
sar
clc
movsb
jnp
fstpl
std
cld
xor
jmp
rorb
lret
mov
icebp
jbe
cltd
push
sarb
out
dec
mov
inc
pop
outsl
push
mov
inc
dec
dec
sbb
dec
xor
cli
inc
dec
enter
xchg
adc
xchg
dec
and
cmpsb
scas
lods
leave
and
das
gs
sbb
lahf
ljmp
xchg
sub
je
arpl
cmpsl
jnp
mov
cmp
jl
ljmp
int3
lds
lock
movsb
iret
add
fcmovu
test
and
sub
dec
lret
int3
inc
mov
push
fidivs
addr16
mov
test
insb
and
mov
sub
adc
xor
test
add
and
push
xor
or
push
inc
jns
shrd
mov
add
jne
clc
push
pop
out
inc
pop
daa
add
ljmp
push
out
jb
dec
clc
mov
push
jae
pop
xchg
mov
imul
sub
and
call
cwtl
pop
repnz
loop
pop
xchg
mov
cmpsl
inc
fistpl
test
test
test
fsubp
jbe
push
mov
scas
mov
mov
cwtl
xor
lock
out
out
mov
xchg
outsl
xchg
or
out
cli
mov
mov
push
jg
pop
in
xor
sti
movsl
xor
push
cmp
lds
out
in
mov
fs
fdivs
dec
std
in
lds
stos
test
pusha
xor
xor
das
scas
lods
lods
sbb
xchg
dec
jecxz
inc
repz
loop
mov
popa
mov
sub
push
pop
mov
dec
das
mov
adc
jl
push
xchg
sbb
or
mov
adc
insb
sbb
pop
push
sar
clc
movsb
jnp
adc
fbld
xlat
std
mov
addr16
xlat
or
jp
insl
out
pop
outsb
aad
push
inc
std
and
data16
mov
jb
repnz
adc
dec
int
dec
cltd
push
sub
ret
xor
shlb
sub
sbb
sbb
dec
daa
test
jp
push
outsl
mov
xchg
cmpsb
fldcw
je
and
sub
mov
or
xlat
fcoml
add
xchg
sbb
fdivrl
adc
or
and
out
mov
inc
push
rorb
cmp
jmp
jbe
push
ret
sbb
inc
inc
test
push
test
das
loopne
addr16
ret
cmp
add
stos
and
pop
into
mov
mov
push
movsb
lret
xchg
xchg
dec
pop
testl
xor
xor
ja
pop
cmpsb
out
and
outsl
sbb
out
out
jae
stos
or
aad
adc
pop
ss
fstl
rcrb
xchg
data16
cmp
in
sub
cld
test
xchg
pop
pop
pop
mov
repz
loope
inc
mov
jl
xchg
test
mov
lock
cltd
rcrb
aad
test
test
sbb
loope
repnz
mov
and
jb
hlt
repz
pop
in
inc
xor
js
xlat
out
fcoml
add
jbe
stc
push
sbb
arpl
cmp
or
data16
aad
scas
loop
imul
mov
cmp
lcall
mov
or
mov
lcall
xchg
in
sti
push
xchg
and
lret
push
inc
jecxz
jp
push
sbb
xor
ss
adc
js
out
adc
xlat
cmp
pusha
or
cmc
hlt
inc
mov
push
pushf
push
into
xchg
fmul
cmp
cs
int3
lret
insl
enter
cmp
push
aas
popa
popa
cmpsb
fldenv
sub
and
cmp
jle
ret
aad
sbb
loopne
pop
and
dec
aas
sbb
mov
cltd
ja
dec
mov
mov
scas
pop
dec
out
mov
je
xchg
jnp
cwtl
sub
bnd
mov
add
lret
ja
hlt
imul
xchg
call
jb
mov
push
leave
insb
pop
dec
dec
iret
pop
cmp
mov
or
sar
or
fiaddl
sbb
inc
rcr
mov
in
cmp
lret
pusha
sbb
rorb
int
lods
push
push
xchg
or
cmc
mov
shll
das
jns
test
xor
das
mov
icebp
jne
pushf
mov
test
sub
in
in
cwtl
push
push
pop
mov
lods
in
push
bound
and
into
sbb
xchg
dec
push
test
gs
lahf
cmpsl
mov
in
and
ret
xsavec
sub
sub
jb
cmpsb
and
icebp
xor
jle
rorb
mov
add
and
sbb
cmpsl
fsubp
cltd
ret
int3
push
or
jne
mov
xchg
pop
mov
imul
xlat
out
les
nop
mov
fs
adc
jns
or
in
jle
insl
cmp
dec
adc
add
out
add
mov
scas
inc
inc
inc
loop
xchg
js
stos
fdivl
pop
cltd
ret
cmp
add
stos
int
int3
mov
imul
lea
pop
pop
pop
push
or
xchg
nop
pop
and
adcb
stos
dec
imul
pop
push
sbb
xchg
cli
xor
icebp
lock
in
in
je
cmp
jecxz
loope
inc
pop
adc
enter
nop
ret
rclb
mov
cmp
xchg
test
xor
test
enter
adcb
jnp
cmp
aad
aaa
xor
fistps
popf
xor
xor
les
pop
pop
out
push
mov
lahf
mov
into
or
xchg
push
adc
mov
popa
dec
das
mov
ret
outsl
in
test
mov
adc
js
cli
pop
sub
xchg
sub
push
inc
ret
jnp
std
dec
pop
icebp
xchg
jp
rcr
fnstenv
inc
aas
mull
imul
cmpsb
div
pop
cltd
ret
pushf
xchg
mov
cmpsb
xchg
rorl
sub
rol
jp
rol
lods
xchg
rcrb
adc
and
and
xor
or
jle,pt
xor
rorb
add
stos
fisubrs
pop
push
div
div
mov
out
lret
lcall
psrad
jb
fldl
mov
pop
dec
add
mov
lods
movsb
es
inc
inc
mov
in
sub
jecxz
popf
xchg
push
aaa
aaa
ss
pop
inc
sbb
leave
or
and
ss
enter
fwait
push
hlt
repz
lret
loope
sti
cld
sti
pop
pushf
fbld
inc
sub
pushf
test
push
pop
push
push
aam
inc
push
je
sbb
jnp
and
clc
dec
icebp
dec
add
cmp
xor
cltd
push
loop
xorl
loope
lret
test
les
sbb
inc
popf
sbb
xchg
xchg
mov
popf
pushf
fwait
mov
mov
sbbl
jg
out
xor
xor
pop
push
call
stos
and
inc
pop
jno
pop
add
stos
ds
inc
cltd
fcmovu
push
adc
dec
mov
mov
push
dec
idiv
cld
sti
xchg
imul
arpl
cmpb
fdivrl
inc
jo
push
push
nop
mov
aam
repnz
dec
dec
inc
mov
adc
dec
jmp
dec
ds
and
inc
or
xchg
cli
cltd
inc
imul
pop
stc
lcall
mov
sub
mov
inc
sbb
sub
popa
add
push
push
loop
jno
subb
or
aam
add
imul
fs
lods
inc
inc
mov
cmp
cmpsw
repz
and
dec
scas
scas
scas
cld
data16
mov
pop
or
ret
insb
mov
pusha
lods
movsb
lea
dec
xor
idivb
jae
xchg
jb
xor
xor
scas
sbb
in
jmp
test
pop
cwtl
dec
lea
sbb
int
pusha
mov
fwait
mov
inc
ja
mov
inc
hlt
es
sarb
out
int
jg
lret
push
adc
das
push
push
dec
jb
cmp
jecxz
fbld
pushf
pop
mov
lds
aad
xor
adc
adc
int
rol
sahf
shll
xchg
jge
hlt
in
movsl
out
and
out
xor
sub
fstl
and
sbb
adc
call
or
dec
push
ret
fsts
mov
imul
cmpsl
cmpsb
movsl
pusha
sbb
into
in
push
mov
orb
dec
mov
dec
ljmp
jle
cmp
xor
jnp
lods
aad
subb
jl
xchg
movsb
enter
imull
adc
cltd
loop
std
lock
loope
testl
mov
inc
adc
int
orb
xchg
xchg
jae
je
mov
lret
aad
jmp
mov
add
xor
or
rcrl
jmp
aaa
sub
or
push
in
movsb
xchg
les
or
loope
add
mov
jp
or
mov
into
out
jg
cmp
imul
mov
daa
loop
aas
mov
push
popa
pusha
pop
adc
popf
dec
inc
inc
int3
sarl
in
mov
cmpsb
aaa
cmp
mov
inc
scas
loop
aam
mov
sub
sub
inc
rcl
shll
pop
push
sbb
mov
jno
ret
add
push
enter
jle
lahf
fldenv
mov
test
ja
dec
dec
push
xchg
lock
cmp
or
or
push
stos
sub
incl
sahf
dec
in
lods
pushl
cmp
gs
mov
mov
pop
cmpsl
jle
push
popa
int3
mov
jecxz
je
sbb
mov
cwtl
pop
and
jp
and
sub
fcompl
mov
ret
inc
add
jge
push
sub
mov
or
out
mov
xor
daa
addr16
mov
sti
test
js
sti
jno
sbb
fst
es
jbe
jmp
jecxz
jge
int
push
call
jae
dec
dec
add
jecxz
hlt
xor
lods
aam
fists
cmp
lahf
xor
pop
mov
iret
into
push
adc
arpl
pop
in
outsl
es
les
pop
xchg
lahf
xchg
shlb
mov
imul
adc
push
cmp
xchg
lock
jecxz
cmp
jl
fstpl
cli
stc
clc
movsb
dec
lahf
sub
int
imul
iret
into
dec
clc
stc
in
pop
ror
and
daa
jnp
push
lahf
sub
sub
inc
push
das
lods
pop
pop
jmp
rcll
lahf
icebp
xor
in
xchg
enter
das
adc
add
mov
sub
xchg
inc
addr16
divl
add
xchg
push
adc
mov
mov
xor
sbb
push
aad
push
adc
or
ret
inc
add
push
add
xchg
std
stos
push
dec
ret
pusha
cmp
fisubl
xlat
push
or
aas
mov
shrb
mov
shll
jmp
cwtl
ds
outsb
push
fucom
mov
jl
sarl
stos
xor
xchg
cmp
je
cmpsb
aad
lahf
xorb
or
and
cld
sub
fldcw
daa
out
and
cmc
jno
cmp
in
jmp
xchg
loopne
mov
mov
add
lock
mov
pop
ret
rcl
xor
xchg
jb
insl
mov
mov
mov
push
iret
sub
and
ja
cmp
mov
enter
or
adc
xor
or
loopne
movl
sub
sbb
mov
les
mov
pop
jo
popf
ret
repz
fnsave
jb
sbb
imul
jp
stc
inc
and
outsw
ret
or
icebp
mov
imul
addr16
inc
sub
xor
or
inc
and
ret
leave
inc
xor
jno
pop
out
iret
sahf
push
nop
cltd
xchg
xchg
sbb
push
mov
fistpll
pushf
fwait
add
in
roll
stc
push
xor
xor
idivb
jae
mov
and
mov
pop
cmpsb
out
and
outsl
lock
out
out
jne
rcrl
leave
aam
loop
lea
inc
jp
arpl
sar
push
dec
jmp
cli
mov
lret
mov
imul
test
imul
inc
fstl
xchg
ficoml
shlb
cmp
adc
shlb
sbb
inc
cli
adc
jns
or
mov
ret
out
test
sub
mov
xor
in
jae
nop
mov
jns
leave
loopne
js
andb
shrb
mov
dec
dec
mov
daa
mov
mov
std
jae
xor
iret
fildl
testb
arpl
cld
into
cmpsl
push
mov
sbb
or
lret
sahf
popf
jae
add
je
inc
test
jnp
mov
cs
inc
in
orb
and
cmp
or
xlat
add
cmpsl
cmpsb
repz
loopne
jecxz
cmp
jb
bnd
xchg
xchg
insb
testl
out
xchg
cmp
pop
push
push
push
in
decb
pop
dec
jbe
mov
aaa
clc
jmp
and
xchg
test
test
add
aas
aam
cmp
outsl
jge
add
movsl
push
pop
out
or
mov
cltd
xor
fwait
movsb
inc
add
mov
lahf
clc
push
pop
es
dec
insb
ljmp
incl
push
and
mov
pop
pop
les
cmpsl
pop
test
jp
inc
pop
in
or
loop
mov
movsb
out
ret
cltd
lods
icebp
push
pop
adc
movsl
movsb
cmp
sti
xor
push
xchg
cmp
outsl
mov
sbb
jbe
lret
inc
test
push
int
inc
inc
sub
jne
sbb
add
mov
insl
test
fists
or
push
or
adc
xchg
aad
or
popf
fstp
icebp
loopne
mov
in
ffree
jp
outsl
lock
cmp
repz
add
stos
pop
sub
xor
xor
push
sub
and
adc
jmp
fnsave
xorb
or
loop
adc
rcll
hlt
repnz
test
and
imul
jmp
xchg
rcrl
movsb
pop
jo
mov
adc
imul
pop
cmp
dec
aas
inc
jl
adc
cltd
ja
dec
cmp
rorb
lock
adc
cmp
jg
cmpsb
movsl
and
imul
dec
out
pop
loop
push
fucom
outsl
or
xor
mov
inc
test
dec
nop
popl
cmp
mov
popf
je
addb
jnp
sahf
lock
mov
fisubrl
repz
fcom
lds
push
pop
repnz
fdivrl
jno
test
pop
mov
push
mov
mov
mov
insb
in
leave
push
insl
in
pop
insl
ljmp
push
adc
xor
fsubr
jge
enter
xchg
sbb
push
or
mov
cltd
adc
rolb
xchg
ficomps
mov
sub
les
nop
mov
pop
lret
stc
ja
jne
or
or
mov
push
pushl
sbb
or
loop
mov
xlat
test
cmpsl
cld
cmp
outsb
sub
imul
lods
ret
or
mov
cmp
mov
imul
pcmpgtb
cmpsb
jae
inc
jle
jae
nop
call
pop
push
call
in
lock
out
push
xchg
shll
ljmp
cmc
dec
add
clc
xchg
shl
sbb
mov
lret
loopne
push
nop
jno
xchg
mov
sbb
shlb
and
movsb
jo
in
or
iret
jo
push
fcmovu
pop
push
lock
aas
sbb
stc
movb
push
jge
imul
pop
in
idivl
jae
push
sub
or
test
adc
arpl
outsb
enter
insb
mov
adc
addr16
das
out
ss
dec
enter
movsl
out
daa
cmovg
lea
xor
cmp
lock
inc
adc
leave
or
cltd
fwait
test
sbb
add
fs
xchg
pop
push
cwtl
stos
xchg
pop
pop
mov
and
push
xor
jbe
push
cmp
divl
mov
aaa
aaa
ficompl
in
mov
pushf
jl
xchg
or
or
rcl
rorl
xchg
pushf
jb
push
mov
mov
pop
adc
mov
cmp
mov
inc
xor
and
mov
sub
xor
scas
ret
mov
pop
cmp
sbb
xor
rcrl
adc
inc
aam
cltd
test
jne
hlt
pop
sarb
jmp
mov
mov
gs
add
sub
jae
inc
pop
push
aad
dec
std
popf
push
nop
pop
pop
cmp
jge
fdivrs
movq
add
repnz
sbb
inc
es
mov
sub
repz
les
and
inc
loopne
xchg
xchg
xchg
and
fmuls
xor
daa
inc
lret
andl
pop
insl
or
aas
jbe
pushf
jl
orl
nop
jmp
pop
push
add
adc
or
mov
imulb
add
xor
add
rclb
testl
pop
cmp
mov
ret
je
ja
rcll
mov
subb
pop
mov
sbb
jbe
adc
adc
and
or
cmp
cmpsl
test
adc
je
pop
scas
scas
lods
and
cmc
les
jecxz
dec
popf
popf
pushf
adc
fldcw
movsb
clc
scas
dec
pop
imul
movsl
adc
pop
pusha
pop
fisttpll
sbb
ret
adc
and
add
inc
outsb
movsl
add
cltd
jl
cld
loop
mov
mov
xchg
jge
faddp
pop
rcl
test
mov
mov
popf
pushf
mov
lods
xchg
push
clc
dec
jns
pop
arpl
mov
mov
pop
aas
jg
dec
gs
sbb
imul
scas
fsts
jae
cmp
clc
cmpsl
jno
shl
pusha
sbb
addr16
std
xchg
dec
imul
ret
rcl
aaa
mov
xchg
aas
cmp
push
push
outsl
pushf
cmpl
push
es
aas
xor
xor
cs
dec
cmp
cmp
dec
repnz
daa
inc
inc
aas
mov
mov
pop
push
add
femms
mov
sbb
pop
hlt
repz
pop
add
push
out
mov
jns
jno
jno
sub
inc
push
cli
rclb
push
dec
loop
push
bound
sbb
mov
sbb
inc
push
inc
sbb
dec
push
out
inc
cmp
divb
ret
adc
fwait
mov
cmp
and
sub
fcomi
lret
inc
sahf
mov
addr16
and
imul
xchg
mov
ret
testl
inc
stos
sub
adc
cmp
repz
push
adc
jge
xor
sbb
sbb
cmpb
icebp
idivl
pop
add
or
xchg
aam
push
mov
ficoms
jne
in
cmp
data16
ljmp
jecxz
pop
sbb
push
push
ds
mov
dec
pop
pop
dec
jbe
in
inc
inc
jmp
mov
sbb
pop
icebp
mov
fiaddl
sbb
dec
mov
jp
cmp
or
adc
add
aas
rcrb
stc
xlat
loopne
push
or
pop
das
outsl
jne
hlt
inc
popa
sbb
shr
jns
jne
call
adc
jl
jnp
bound
adc
inc
push
icebp
inc
cli
cmp
xor
xor
mov
or
cltd
lahf
test
popf
dec
ds
cmpsb
xor
iret
int3
lret
mov
dec
test
dec
mov
cli
adc
daa
and
pop
push
add
sub
xor
dec
in
sahf
cmpb
fs
sbb
mov
push
scas
sbb
push
lcall
pop
mov
call
xchg
std
sbb
test
mov
jnp
xor
mov
movsl
mov
jp
push
ret
pop
pop
addb
sub
sub
push
push
mov
daa
push
sbb
fidivl
orl
and
or
jbe
lods
cltd
cwtl
xchg
xor
rcll
arpl
in
call
out
je
xchg
nop
mov
jp
lahf
pop
sub
jae
dec
sbb
loope
inc
inc
int3
add
push
pop
test
icebp
aas
mov
mov
gs
aas
dec
mov
add
int3
push
cmp
ret
pushl
lret
push
loop
mov
pop
loope
mov
xor
xor
adc
xor
xchg
mov
js
push
pop
in
addb
std
mov
mov
imul
add
cmp
test
lcall
inc
dec
jo
std
cld
cwtl
outsl
in
addr16
push
cli
pop
lea
outsl
in
daa
pop
pop
repnz
push
iret
and
imul
daa
sbb
xchg
lods
inc
push
dec
dec
ret
push
in
xchg
cli
and
fcom
aam
sbb
test
xor
rclb
fists
rcl
jo
adc
or
out
adcl
mov
and
js
xchg
nop
jmp
data16
jnp
js
and
jecxz
addb
or
ret
aad
dec
dec
dec
sbb
sub
mov
xor
sbb
dec
movsl
mov
scas
std
xor
jb
mov
push
loopne
insl
cmpsl
std
aaa
rsqrtps
clc
dec
daa
pusha
pop
jecxz
mov
sub
mov
js
cmp
sbb
push
pop
movsb
in
xor
stos
jmp
or
xchg
aam
pop
add
add
lods
fs
mov
enter
andl
int
lret
pop
insb
pop
pop
fsubl
inc
xchg
pop
mov
jnp
loope
mov
push
dec
dec
dec
sub
cmp
or
iret
or
mov
lea
cltd
add
xorb
repz
dec
mov
std
mov
imull
data16
and
sub
add
add
pop
adc
jbe
jne
adc
sbbb
or
xchg
dec
imul
dec
aad
push
jg
clc
cmp
adc
xchg
cltd
cmp
push
fcmovne
inc
cmp
jno
mov
sub
aas
out
push
xchg
pop
push
shlb
mov
sahf
xchg
das
sub
sbb
in
lods
out
cwtl
movsb
sbb
pop
jno
pop
add
aas
testb
pop
dec
xchg
aam
lds
loopne
fstl
test
fs
loope
pop
xor
ds
sub
aam
jmp
sbbl
dec
inc
push
dec
out
inc
fildll
adc
aad
lret
adc
sbb
xchg
shlb
mov
repz
je
movntq
xchg
mov
pushf
mov
jecxz
mov
sub
data16
dec
adc
loope
fistpl
je
pop
push
enter
dec
into
add
ret
jecxz
movsl
push
inc
lret
pop
dec
dec
cmp
mov
and
testl
mov
jg
scas
lods
sub
stos
push
push
mov
cmp
cmpsb
test
push
mov
push
and
popf
mov
xor
xchg
sti
inc
adc
addr16
test
popf
test
data16
jno
push
scas
hlt
aas
fdivs
cwtl
fdivr
sarl
mov
add
xchg
cltd
jo
sub
les
loope
in
int
shl
mov
push
push
push
out
rorb
xlat
xor
out
dec
inc
mov
mov
dec
dec
ljmp
xor
adc
lea
pop
hlt
into
push
fstl
gs
int
mov
in
sahf
mov
jno
data16
negl
jo
daa
inc
xor
jb
jne
jbe
je
outsl
cs
jge
push
out
js
out
rorl
icebp
out
in
or
sub
xlat
or
inc
clc
add
out
clc
xor
daa
lret
ds
sbb
push
nop
lods
stos
lcall
or
nop
xlat
push
or
fmuls
les
jp
test
inc
xor
xor
out
je
addr16
pop
xor
and
xor
xchg
jl
jecxz
in
xchg
aam
ljmp
add
cld
inc
jns
push
xor
test
aam
js
stos
subl
cld
movsl
in
adc
mov
mov
xor
xchg
movb
inc
mov
cli
movb
inc
lods
jecxz
adc
jbe
sbb
mov
rolb
lods
lock
xchg
mov
or
xchg
cli
bound
outsl
xor
add
ja
push
push
pop
cs
push
or
pop
jnp
out
sbb
xchg
mov
or
jmp
push
fmuls
loop
les
cli
fstl
into
mov
pop
les
inc
stos
int3
push
lahf
mov
mov
subl
sub
lahf
and
xor
cs
ret
sbb
stos
in
mov
push
stos
ljmp
cmp
repnz
mov
adc
push
push
mov
in
inc
cmp
inc
mov
ret
cmp
mov
imul
mov
add
lea
ja
xor
out
xor
cs
push
aam
push
adc
and
xchg
in
or
or
and
add
adc
push
sar
cli
mov
or
shl
sub
into
repnz
cmpsb
and
xchg
cmc
pusha
sub
pop
sbb
add
jbe
call
jg
cmpb
gs
inc
push
rorb
addr16
jmp
fnstenv
shlb
pop
lahf
inc
into
scas
cmpsl
into
jecxz
inc
ret
scas
dec
cwtl
int
int3
mov
mov
mov
adc
push
es
cmp
dec
sub
push
push
adc
jae
cmp
mov
out
sbb
xor
ds
rep
add
cltd
les
scas
inc
sahf
test
scas
inc
jns
jb
sub
jmp
cmp
push
and
mov
jp
inc
mov
jmp
scas
sbb
mov
mov
jl
jge
les
into
pop
mov
pop
test
xor
inc
sbb
push
ss
stc
clc
div
jge
sahf
xchg
dec
iret
int
aaa
lret
popf
idivb
xor
aad
mov
es
xor
mov
subb
or
mov
cmpsb
int3
adc
idivb
test
gs
jb
mov
loopne,pt
or
enter
outsl
mov
ss
or
mov
pop
push
enter
ret
enter
push
sbb
adcl
aas
ljmp
push
dec
jb
rcrl
in
jecxz
add
adc
enter
les
int3
lahf
leave
jp
inc
push
mov
inc
dec
xorl
mov
pop
mov
xchg
bound
jge
mov
and
das
aam
mov
jg
push
dec
jnp
les
and
pusha
rcrl
leave
add
or
mov
sbb
femms
or
nop
jle
or
xchg
cmp
adc
outsb
popf
xor
arpl
xchg
sub
mov
aam
xchg
pusha
pop
pop
sub
cmp
xor
int3
pop
cmpl
pop
fnstenv
dec
or
sub
into
test
cmpsb
sahf
imul
fidivs
stc
ficoms
int
mov
push
pushf
fwait
mov
adc
inc
pop
out
cmp
repnz
test
test
mov
cmpsb
and
xor
push
cmpsl
sbb
or
and
addr16
std
cld
sti
xchg
in
sub
jnp
divb
daa
adc
incb
mov
rcll
fnstenv
pop
sub
addps
push
adc
sbb
out
loop
in
xor
add
cmp
leave
or
sar
gs
add
jle
fwait
vpsubsw
mov
pushf
cmc
mov
and
sbb
arpl
xchg
adc
pop
lea
pop
pop
in
jge
jnp
add
inc
push
push
mov
in
in
in
or
or
insl
pushf
cmpsl
push
xchg
cmp
sub
lret
inc
ja
scas
and
push
jmp
cwtl
xchg
outsl
push
shll
and
mov
sub
sub
jbe
dec
clc
dec
xor
mov
dec
dec
push
scas
xchg
or
les
push
xchg
jne
pop
push
sarl
push
mov
xchg
ret
in
gs
mov
cmp
dec
and
scas
mov
rorb
aam
mov
cwtl
daa
add
ret
add
jmp
jne
sar
xor
scas
pop
leave
ret
jns
push
mov
adc
push
sbb
cmp
cltd
arpl
or
and
imul
sti
jmp
cmc
mov
sbb
mov
pop
push
xchg
sti
dec
bound
pop
push
jecxz
scas
dec
inc
int
call
adc
xchg
inc
fidivl
cmp
shl
push
lds
stos
test
add
mov
pop
fs
addr16
jns
test
cmp
xchg
jae
sbb
dec
pop
adc
jne
ja
je
or
out
jno
xor
inc
xor
aaa
add
add
sbb
or
cmpsb
scas
notl
data16
fcmovne
xchg
dec
ljmp
push
ret
rclb
sub
mov
ds
adcb
imul
outsl
insb
jmp
int3
xor
shlb
mov
adc
xchg
and
mov
out
scas
cli
stc
clc
jo
adc
clc
jmp
gs
jno
insl
pop
insb
and
daa
push
insl
in
scas
sbb
sbb
pop
push
push
js
outsl
ljmp
dec
adc
add
out
push
push
imul
cmp
aaa
mov
ss
sahf
cmp
cmc
xor
and
pop
cmpsl
sbb
mov
mov
dec
pushf
rcr
fimull
fidivl
and
or
push
lock
mov
sbb
repnz
in
cmpsl
out
push
int3
jecxz
jo
shll
int3
and
or
xchg
aam
ret
ret
iret
mov
push
fnstsw
inc
sbb
iret
dec
stc
shl
sub
nop
das
adc
into
test
daa
mov
and
outsb
scas
sbb
jecxz
out
mov
dec
in
lock
repnz
cmpsl
xchg
movsl
insb
sbb
adc
loop
sub
mov
leave
jbe
push
mov
scas
and
int
iret
movsb
loope
repz
ret
sti
push
mov
and
mov
xor
outsb
in
cwtl
pop
hlt
xchg
adc
adc
sbb
jno
adc
inc
jo
adc
lret
incb
cli
cmp
lock
scas
aas
inc
aas
or
push
hlt
inc
ds
insl
lods
sbb
popf
push
jns
xchg
xchg
stos
mov
lods
div
pop
pushf
or
mov
es
shll
cld
loop
das
cs
sahf
sbb
dec
inc
push
and
cmp
stc
mov
or
mov
push
mov
popl
std
cltd
sti
xor
push
and
dec
clc
aas
ss
pop
pop
test
outsb
bound
mov
pop
jp
in
jbe
inc
rorb
out
das
push
lret
jb
adc
in
rcrb
int
inc
sbb
or
fmuls
sbb
pop
int
fcoml
inc
xchg
xchg
xchg
add
cmc
imul
pop
outsl
jo
aad
cwtl
ficoml
mov
push
push
dec
das
ret
lret
jge
and
outsb
lcall
pop
gs
cmp
std
jg
jle
inc
inc
inc
xchg
jmp
imul
ret
rcl
xor
push
xchg
mov
nop
pop
sahf
insl
adc
out
mov
xchg
push
xchg
popa
sbb
lea
sbb
pop
dec
adc
jge
cwtl
sub
lret
sbb
pop
mov
aam
out
ds
stc
ret
push
adc
into
xchg
and
xor
std
cld
jne
xchg
cmp
gs
insl
insb
pusha
sbb
pop
push
inc
dec
movsl
cmp
bound
jp
in
dec
dec
inc
loopne
cmp
sub
and
aam
in
xchg
or
mov
or
push
jbe
movb
movsl
loop
xor
add
sub
xchg
push
addr16
aaa
xor
mov
imul
fisubs
and
lret
jge
int
jle
adc
icebp
sbb
or
mov
aad
dec
push
adc
cmp
ljmp
mov
jo
rcrb
mov
mov
mov
mov
ret
mov
xchg
test
push
arpl
idivl
pop
nop
lret
jg
lcall
aas
xor
addb
fcoml
or
push
shl
popa
xor
fmul
inc
push
mov
mov
inc
aaa
xor
pop
test
rol
cmp
jne
fldt
mov
dec
inc
inc
jg
sub
inc
cmp
mov
test
fcomp
fwait
cmc
cmp
movsl
mov
shlb
je
or
jle
xchg
mov
mov
test
xor
dec
xchg
push
rcrb
pop
mov
jge
imul
sbbl
push
lret
adc
and
flds
dec
dec
push
ret
out
fcmovu
mov
cmpsl
pop
sub
lds
fmull
add
dec
in
outsb
mov
mov
push
xchg
sbb
and
out
dec
mov
fstl
xor
xchg
mov
js
repz
sub
adc
in
adc
sbb
or
stos
cli
xor
out
out
insb
sbb
pop
push
enter
mov
mov
mov
sti
shrl
stos
xchg
shll
mov
xchg
xchg
fsubs
add
jl
ret
int3
mov
mov
pushf
in
mov
inc
fucom
push
sub
xchg
fstps
call
adc
and
lea
loope
test
movsb
scas
scas
xor
imul
jge
clc
lock
lahf
mov
test
sti
rcrb
pop
mov
arpl
or
pop
dec
and
ljmp
push
dec
dec
dec
sarl
add
shl
call
fdivr
iret
mov
in
xchg
adc
popf
ret
into
int
ds
mov
scas
shl
sahf
shlb
orb
and
lea
in
xchg
outsb
xor
or
sbb
in
fldl
in
js
aad
mov
out
je
pushf
fstpl
ret
ret
cmp
outsl
lods
mov
cmp
bound
pop
mov
outsb
cltd
mov
inc
inc
push
xchg
ljmp
xchg
push
and
popf
ss
add
movsl
mov
mov
or
cli
ret
jge
lcall
xor
ljmp
xchg
sub
pop
jns
jbe
xor
subb
or
mov
lcall
repnz
divb
mov
outsb
hlt
or
and
loopne
fstp
clc
lret
movl
bound
adc
arpl
add
enter
daa
es
and
cs
dec
sub
inc
cmp
and
or
pop
push
inc
inc
add
stos
jmp
adc
lret
div
cmc
xchg
mov
push
outsb
dec
insb
rcl
mov
int3
lret
mov
dec
pop
push
push
jo
push
int
mov
es
xchg
lcall
xchg
inc
cmp
xor
sbb
fmuls
sbb
and
or
clc
mull
jae
pop
sub
lock
lahf
mov
in
pop
xchg
nop
mov
jns
jl
dec
je
fimuls
cmpb
in
in
in
jecxz
jle
les
cmp
adc
fcoms
mov
inc
add
cli
and
mov
movsl
repz
cmp
in
and
pop
lret
mov
mov
mov
cmpsl
arpl
push
cmp
sub
push
stos
nop
nop
xor
cmc
mov
and
sbb
jge
xor
in
jecxz
lock
adc
enter
push
psubw
pextrw
pop
popf
fstp
fstl
ret
xchg
jmp
mov
jno
jl
jns
aaa
outsl
pop
sub
rol
jmp
mov
and
mov
sub
sub
and
int
and
es
ja
mov
dec
shll
in
or
daa
or
xorb
or
mov
cmpsb
sub
outsl
push
in
daa
ja
sbb
nop
imul
adc
sbb
test
mov
push
out
loope
push
dec
push
mov
nop
mov
mov
dec
loope
shrb
cmc
movl
dec
fsubs
push
movsl
xor
sub
dec
mov
mov
xor
push
push
imul
mov
jno
jne
je
sub
mov
cmp
in
insb
scas
adc
in
bound
sbb
out
xchg
mov
lcall
lret
inc
push
dec
xchg
adc
mov
cmp
sarb
inc
cmpsl
jl
xorb
lods
mov
outsl
icebp
xor
inc
mov
mov
cmpsb
sahf
shrl
fldl
xchg
cmp
jb
adc
fstpt
sbb
cltd
cwtl
les
jecxz
xor
mov
pushf
adc
mov
sbb
sub
rorl
ja
jne
call
rolb
lea
pop
lret
shlb
in
xlat
jecxz
dec
dec
pusha
xor
xlat
adc
enter
cmp
out
sub
cmp
mov
dec
iret
into
xor
push
mov
jb
sbb
imul
fwait
xchg
dec
add
idivl
faddl
scas
sub
mov
bound
mov
push
lods
pop
ds
arpl
xchg
fcomps
stc
lret
sbb
push
push
xchg
mov
imul
pop
mov
mov
push
push
push
enter
mov
daa
es
add
dec
cwtl
push
daa
cmp
xor
dec
inc
sbb
or
stos
adc
dec
rol
ss
lret
stos
and
pushf
mov
xchg
xchg
mov
lcall
pop
dec
push
xlat
cmpsl
jbe
dec
imul
jg
aas
push
push
jmp
pusha
pop
pop
pop
pop
jbe
sbb
ret
xor
inc
inc
push
and
xlat
xor
out
out
mov
jb
dec
xor
mov
cmp
loop
loop
push
std
imul
cwtl
xchg
push
mov
shl
sbb
push
mov
xchg
jne
xchg
mull
xchg
icebp
repz
cmp
das
sub
gs
pop
sbb
jo
mov
and
rolb
or
fldt
dec
insl
mov
movsl
pop
adc
adc
fcomi
mov
outsl
jg
vblendpd
clc
nop
mov
dec
ss
dec
ret
movsb
cmp
pop
pop
pop
jae
push
pusha
jo
mov
inc
inc
cmp
sub
or
push
mov
jne
inc
inc
aas
pop
mov
add
cmpsl
cmpsb
mov
mov
scas
or
negl
push
xchg
xchg
mov
sti
nop
sub
xchg
hlt
imul
into
add
jns
sbb
cmpsb
call
jg
jge
cmc
test
ret
in
cld
out
int
push
fs
pop
xor
test
loopne
test
push
lock
pop
popf
cltd
fwait
mov
mov
mov
rcrb
ja
ret
cltd
xchg
mov
dec
pop
pop
adc
fnstsw
sub
int3
add
aam
xchg
lret
inc
xor
adc
ja
daa
pop
pop
push
push
lods
mov
lods
mov
lock
mov
sahf
push
or
dec
jo
jnp
loopne
daa
add
sbb
mov
sub
pop
pop
cmc
jle
insl
fdivrp
fildll
sbb
cli
pop
gs
mov
sbb
or
and
push
ficoms
or
imull
addr16
pop
aas
or
mov
mov
jp
outsl
arpl
sub
jmp
mov
jns
and
popa
fdivrl
cmpb
dec
dec
inc
jmp
push
aas
xchg
xor
add
mov
insb
mov
test
mov
jo
imul
xchg
mov
cld
xchg
mov
pop
test
xor
push
sti
jmp
cmp
pop
jae
js
inc
hlt
pop
xlat
adc
stos
daa
test
lods
icebp
cmpsb
out
mov
adc
fimull
cli
stc
clc
xchg
fcompl
pushf
fdivl
dec
cmp
les
or
pusha
ret
ss
sbb
push
mov
clc
jmp
jecxz
or
xor
dec
sbb
sti
bts
aaa
ss
lds
ds
stos
cmpsl
cmpsb
movsl
mov
lret
or
mov
jmp
mov
daa
popf
adc
fidivl
arpl
inc
cli
fsubr
mov
inc
xchg
fstpt
es
or
add
cmpsl
mov
roll
or
add
nop
loop
mov
inc
cld
add
enter
jo
sbb
inc
cltd
pop
push
sarb
dec
negl
jne
cmp
scas
add
or
pop
and
ja
dec
imul
aaa
test
jl
jmp
aam
repnz
insl
repz
jno
in
aam
xor
fisubrs
test
cmp
fs
js
aam
push
ja
xchg
xor
les
js
mov
insl
adc
jmp
jl
daa
leave
or
push
in
mov
test
adc
cmp
sbb
cwtl
fbstp
add
lods
lods
enter
xchg
xchg
or
out
mov
loope
mov
or
fildll
xchg
xchg
es
repnz
mov
ret
cmpsl
jne
sbb
cmp
iret
and
jmp
aad
repnz
sbb
jmp
push
fdivs
lret
loop
testb
cmp
sbb
stos
enter
and
mov
add
mov
mov
jae
sarb
sub
inc
daa
testb
add
les
or
jge
and
xor
sub
jmp
xor
push
in
adc
cmpsb
movsl
cmp
inc
or
stc
mov
lahf
fcmovne
cld
jne
outsb
jge
ret
sarb
lea
mov
dec
xor
movsl
sarb
sub
subl
xor
xchg
push
or
pop
lret
sbb
test
shll
cmp
mov
sub
mov
add
subb
xchg
mov
push
nop
pop
imul
fwait
outsl
or
andb
jge
cld
jg
and
sbb
push
mov
mov
fdiv
push
dec
dec
add
mov
fcmovu
fmuls
inc
ds
lods
lret
int3
gs
and
inc
int
lret
sbb
arpl
movsl
pushf
mov
sub
testl
mov
std
or
pop
inc
jge
jg
stos
in
xor
mov
inc
xor
sub
cmp
cmc
hlt
out
inc
dec
pusha
fmul
leave
mov
jecxz
fs
xchg
xlat
xchg
mov
je
push
push
xchg
dec
add
mov
sub
daa
int3
and
xor
rolb
mov
aaa
xor
ja
pop
out
xchg
mov
cmp
das
scas
adc
add
cltd
jns
push
or
iret
cltd
cwtl
xchg
xor
in
ds
lahf
sahf
popf
mov
mov
xchg
xchg
xchg
mov
mov
lcall
ret
lret
jge
sbb
in
out
in
or
icebp
lock
cmp
adc
add
push
push
mov
aas
and
push
cmpsb
cli
dec
movsl
cmc
cmc
sub
pop
add
lods
sbb
int3
inc
inc
mov
mov
mov
mov
test
adcl
sqrtps
sbb
mov
push
addr16
push
and
pop
pop
ss
or
pop
jno
add
add
adc
adc
clc
mull
in
inc
pop
push
hlt
lcall
inc
mov
push
mov
mov
rcr
and
bound
jp
mov
pushf
in
mov
inc
xchg
lcall
and
xchg
adc
sarl
ret
ja
push
cmpsb
mov
scas
call
ljmp
mov
pushf
nop
jp
mov
in
scas
test
je
js
rcrb
je
and
inc
pop
dec
and
push
jmp
push
push
pop
mov
xor
or
inc
push
ss
jnp
and
cmp
fnsave
mov
sub
add
into
push
movsl
out
push
xchg
sbb
loope
push
xchg
xlat
add
fnstcw
and
sbb
icebp
idivb
sbb
out
dec
jg
jg
lds
test
cmpsb
sbb
mov
adc
adc
xchg
and
pop
xchg
pop
or
ret
repnz
fwait
pop
sbbb
ja
iret
into
xor
or
shll
mov
ret
dec
daa
inc
pop
mov
push
and
mov
xchg
cmp
xor
xchg
push
aaa
xor
cmpsl
inc
aas
ds
cmp
jnp
add
dec
gs
ret
lcall
cltd
add
std
jne
sti
gs
jp
test
pop
xchg
nop
mov
into
push
push
frstor
call
pop
aad
pop
inc
dec
inc
cmpl
push
dec
push
fs
repz
push
es
aas
daa
push
xor
gs
dec
add
jo
add
arpl
fdivs
sahf
sbb
int3
pushf
and
adc
inc
sub
sub
pusha
pop
shr
mov
mov
std
cmp
mov
loopne
movsl
or
or
inc
not
into
in
jmp
push
sbb
aam
loopne
fstl
div
push
xchg
imull
mov
xlat
into
dec
xchg
data16
push
aaa
push
daa
ret
mov
mov
out
ja
ret
icebp
xor
fdivrs
mov
inc
sub
mov
test
inc
xchg
lret
iret
out
cli
mov
popf
repnz
loopne
shll
shl
jnp
lahf
sahf
popf
mov
fsubrs
jns
sti
mov
andl
add
cmp
pushf
and
jo
adc
push
pushf
push
dec
sbb
jmp
push
fucom
push
inc
inc
and
or
es
lret
hlt
lret
ret
ds
xor
and
push
xchg
xchg
and
pop
add
cmp
lock
cs
pop
es
add
mov
xchg
pop
push
adc
jge
push
jne
movsb
dec
mov
push
insl
adc
jno
cli
clc
icebp
loopne
testb
ret
std
xchg
jo
push
data16
jb
adc
lds
lods
je
andl
pop
fdivs
jns
jmp
in
cwtl
scas
jno
push
push
mov
sbb
sbb
aas
fbld
adc
mov
aad
ds
xchg
inc
stos
movsl
movsb
mov
scas
lret
xor
out
inc
xchg
mov
pushf
fwait
out
add
lock
adcl
mov
jbe
es
pop
pop
push
adc
aaa
add
out
out
pop
xchg
and
inc
cmpsl
test
cwtl
sub
or
fstps
jo
fstp
jmp
sbb
in
rorb
push
adc
arpl
push
loopne
rol
fwait
cltd
dec
mov
ja
adcl
inc
cs
push
mov
adc
and
pop
push
sbb
pop
pop
push
inc
add
das
add
psllq
or
push
and
dec
pop
and
add
lods
fs
sti
sti
push
xchg
addr16
les
mov
es
nop
test
and
jae
jae
xchg
ret
cmp
sub
outsl
shll
jl
and
xchg
xchg
cmp
sub
xor
movsl
mov
jae
movsb
xorb
add
repnz
or
outsb
insl
push
push
jns
inc
mov
fcmovnu
je
jge
call
jmp
dec
push
dec
int
inc
movsb
iret
cltd
jmp
fnstenv
adc
mov
fistps
ds
lret
xor
or
iret
int
rcrb
mov
add
mov
sub
daa
add
and
xor
inc
ja
jp
push
inc
sbb
addr16
push
pop
pop
push
nop
jns
daa
loop
in
inc
pop
dec
mov
lods
in
pusha
xchg
dec
test
inc
jecxz
shll
jmp
lret
pop
push
popa
cmpsb
mov
xlat
xor
stos
fadd
test
lret
mov
pusha
dec
sarl
xor
fstps
sbb
cmp
aaa
ss
or
nop
xchg
adcb
adc
xchg
lea
or
ret
jo
sarb
lods
xor
or
clc
es
es
in
xchg
in
test
adc
pop
pusha
pop
sub
jl
ljmp
mov
shr
out
out
or
and
fistpl
xchg
loop
sub
in
mov
push
rcl
shlb
loop
arpl
sahf
lcall
mov
arpl
mov
insl
divl
sbb
push
add
imul
xor
out
sbb
fsubs
push
jns
div
loop
mov
add
mov
outsl
outsb
mov
lcall
cmp
mov
in
stos
push
lcall
imul
pop
loopne
xor
pop
push
dec
jecxz
icebp
out
mov
loop
int
cmpl
jne
repz
lret
mov
push
adc
xchg
gs
outsb
mov
xor
push
push
dec
xlat
test
adc
inc
inc
lds
lods
in
jecxz
inc
mov
mov
adc
inc
push
ds
fcmovne
leave
jno,pn
pop
cs
rcl
cld
mov
stos
cwtl
xchg
data16
jmp
add
adc
mov
fiaddl
into
cmp
jp
js
xor
inc
sbb
xchg
cmpb
test
aaa
push
adc
jg
sub
fcom
movsl
movsb
notl
js
dec
inc
inc
cld
push
data16
idivl
dec
jo
imul
ss
popa
pusha
data16
pop
pop
dec
daa
dec
test
mov
inc
xchg
push
and
shlb
repnz
out
orl
loop
and
rcll
jne
jbe
scas
scas
lret
ffreep
sbb
in
jle
lahf
sahf
mov
gs
add
dec
xchg
nop
fst
lea
jne
push
addb
ljmp
in
repnz
jp
out
in
mov
mov
aad
adc
in
repz
test
movsl
pusha
push
insl
jnp
cld
inc
stos
inc
push
movsb
push
xchg
jo
mov
negl
add
adc
mov
insl
push
clc
psubusw
xor
xchg
dec
xchg
jns
pop
sbb
enter
dec
add
or
xor
out
outsb
push
mov
or
inc
aam
loop
inc
add
call
das
sti
push
inc
std
data16
gs
idivb
dec
outsl
imul
rclb
das
imul
pop
dec
inc
cmp
jno
stos
stos
push
dec
dec
mov
aaa
push
mov
jns
pop
cmp
or
dec
cmpsb
push
imul
mov
or
lods
and
cltd
xchg
xchg
mov
add
imul
xlat
cs
add
frstor
bound
enter
addb
push
jae
add
stos
jmp
mov
out
in
or
lahf
dec
add
adc
fstl
sub
xor
cmpsl
stos
insb
lods
data16
les
into
or
sarb
sti
push
xchg
and
daa
push
pop
xchg
sbb
adc
add
jnp
xchg
ja
push
cmc
push
push
add
in
movsl
stos
or
aad
sti
loope
loopne
jmp
int3
mov
xchg
jo
std
push
stc
or
insl
mov
add
ret
mov
in
cwtl
sub
and
ljmp
sbb
mov
xor
xchg
pop
leave
or
scas
repz
jns
insb
add
pop
inc
mov
je
pop
dec
rolb
in
dec
imul
ret
push
xor
xor
mov
cmpsb
sbb
sbb
lahf
push
mov
icebp
aam
dec
dec
iret
add
pop
pop
pop
lods
or
out
in
in
out
fnstenv
jle
int
aas
ds
stos
cs
pop
fldl
rcrb
xor
movsl
xchg
xchg
xchg
mov
sub
xchg
scas
mov
xchg
test
push
pop
cmc
and
ja
push
mov
scas
nop
xchg
cmp
xchg
in
or
add
outsb
sbb
fisttpl
dec
mov
mov
mov
jns
dec
cmp
les
dec
int
outsb
insl
loope
pop
je
test
rol
mov
sub
dec
dec
loop
jae
ficoms
fistl
dec
xchg
bound
xchg
pop
push
pop
and
leave
sahf
mov
enter
loopne
leave
jne
pop
sbb
addr16
insl
movsb
push
sub
xchg
lods
add
std
and
xchg
push
gs
fistpl
insl
loope
inc
movsl
pop
push
jns
adc
and
cli
pop
jb
pop
rcrb
sub
shrb
int3
xchg
test
ss
cmp
movb
add
stos
sub
js
jno
sbb
mov
stos
and
nop
jecxz
xchg
mov
mov
call
cmc
jp
inc
xchg
mov
jge
sahf
fsubs
cmc
lea
mov
dec
dec
mov
dec
dec
out
mov
and
mov
in
xlat
cmp
adc
mov
pop
shl
loop
fwait
pusha
add
or
push
mov
sahf
aaa
push
lahf
pushf
xchg
adc
push
xchg
sbb
out
and
xor
mov
or
fistpl
add
enter
and
fcmove
push
inc
lret
inc
cmc
push
pop
push
les
rdmsr
inc
jae
scas
int3
mov
xor
popa
dec
mov
mov
fs
and
jo
out
xchg
dec
and
adcb
mov
rorb
hlt
mov
cmpl
in
lcall
sub
jle
and
mov
cmpsb
xchg
in
outsl
lea
dec
js
jmp
gs
subb
ret
push
or
bound
andl
xor
xchg
das
test
mov
inc
sbb
xchg
cmpb
js
sbbb
add
jne
call
sbb
aam
popa
sbb
fdivrl
out
enter
data16
sahf
jo
mov
sbb
push
push
inc
std
int3
movsb
cmp
push
jecxz
inc
inc
jl
jo
jmp
sbb
push
mov
add
push
adc
fistps
xchg
xchg
jb
ret
add
or
mov
jg
fs
roll
out
dec
mov
xor
jne
jae
pop
insb
imul
and
adc
icebp
lock
outsl
push
jbe
vpor
or
out
sub
dec
aaa
movsb
mov
fidivs
push
out
jo
pop
fisubrl
pop
mov
loop
shlb
pop
daa
cmp
dec
xor
or
push
stc
add
adc
jl
ja
and
and
lds
cmp
adc
imul
push
sbb
repnz
cwtl
addr16
fcmovne
dec
inc
dec
ljmp
xchg
pop
icebp
fmulp
into
xchg
jb,pt
pop
popl
push
bound
pop
pop
iret
into
ret
cmpb
mov
sub
mov
xor
js
pop
test
cmp
lods
jne
adc
inc
xchg
ret
add
stc
ja
push
aas
shlb
cld
sti
push
cmc
ja
and
or
sub
mov
into
push
push
fisubs
sbb
sub
jecxz
dec
dec
inc
lds
push
pop
push
pop
out
dec
mov
divl
mov
xlat
jo
or
fwait
and
xor
fstp
div
into
push
lcall
sbb
fmul
int3
push
stc
popa
mov
cmp
xchg
es
fldenv
mov
outsb
jns
ja
adc
jae
cmp
and
outsb
movsl
jmp
pop
jno
push
add
ja
mov
jmp
add
lret
push
pop
sar
inc
pop
sbb
std
cltd
jo
pop
addr16
adc
fcmovne
mov
jae
jge
push
sub
add
out
js
mov
mov
lret
jmp
aaa
ss
lock
in
movsb
xchg
or
adc
adc
mov
inc
lods
lcall
add
jecxz
add
popf
push
jo
js
xchg
jmp
nop
mov
ja
lret
pusha
pop
pop
push
arpl
hlt
add
or
or
or
adc
test
mov
add
dec
push
sub
sti
push
add
lret
cltd
cli
push
xchg
xchg
xchg
push
nop
xlat
or
sub
or
es
popa
stc
inc
sub
push
das
mov
xor
nop
xor
sbb
jmp
imul
ss
cmp
femms
or
fst
shr
loope
push
dec
cmpsl
repz
sti
xchg
xchg
insl
mov
and
jp
mov
mov
adc
jnp
movsl
loopne
mov
imul
mov
inc
jle
xchg
leave
arpl
cmp
and
out
xchg
mov
ds
xlat
test
adc
or
stc
jno
stos
das
adc
lahf
lahf
sahf
popf
push
mov
mov
add
lock
push
inc
xor
arpl
stos
fidivrs
addl
inc
inc
rorb
addr16
out
fnstcw
fcom
aad
je
movb
stos
lahf
push
pop
aas
les
adc
clc
int
lret
inc
ret
loope
mov
imul
subb
sub
out
xor
pop
push
jo
sbb
dec
inc
adc
jge
js
pop
cmpsl
out
adc
aas
push
stos
add
fsubs
cmc
hlt
mov
pop
test
cwtl
xchg
mov
nop
shlb
or
sub
test
and
cld
xlat
and
and
mov
mov
cmp
lock
cltd
adc
xchg
mov
loopne
lods
or
repnz
iret
setne
adc
pop
mov
lcall
std
cld
mov
bound
mov
aad
mov
dec
jns
js
enter
addb
jnp
out
jp
out
rorb
in
in
or
test
rorl
sti
cmp
push
fmul
xor
or
les
mov
ror
mov
ss
pop
lahf
popa
pop
push
pop
adc
test
cmpl
pop
inc
inc
mov
je
xchg
sbbl
push
and
sbb
fs
out
in
adcb
je
cmp
inc
rcr
xlat
push
and
jge
sahf
sbb
fiadds
cmp
rcll
xchg
shr
cmp
insb
lds
lods
je
xchg
mov
ljmp
es
and
xor
xchg
pop
jge
mov
mov
fildll
and
dec
or
lret
movsb
mov
sub
cwtl
jae
adc
mov
repz
jo
xchg
xchg
push
outsb
insl
and
xor
push
push
push
bnd
jo
sbb
mov
jl
lret
mov
out
in
in
gs
fucom
cmp
ds
dec
ss
arpl
scas
lods
data16
xchg
cwtl
xchg
pop
bound
fstpl
sahf
mov
shlb
mov
repz
enter
push
push
sub
sbb
out
in
jno
or
insl
sbb
mov
lock
aam
push
lret
xchg
inc
nop
outsb
xor
dec
pop
push
imul
je
push
test
rol
nop
mov
ret
and
daa
into
xor
adc
sub
xlat
pop
icebp
cmp
pop
fdivrl
pushf
dec
pop
fimull
dec
sbb
jecxz
or
ret
clc
inc
sahf
pop
sti
repz
mov
sti
jmp
or
jp
insl
outsl
outsb
imul
push
rcrl
out
pop
pop
pop
adc
ret
inc
inc
inc
sbb
push
dec
dec
dec
mov
mov
xlat
aad
in
psubb
inc
test
test
int3
shrl
jno
stos
lcall
xchg
fnstenv
pop
pop
rcrb
mov
sbb
mov
adc
jne
dec
dec
adc
push
cmp
fisubrl
adc
out
in
mov
lock
test
psubsb
xchg
xlat
mov
nop
leave
loop
repz
gs
leave
mov
sub
rcrl
fdiv
pop
mov
les
out
lods
mov
mov
jl
fists
sbb
xchg
popa
xor
jne
pop
push
mov
pusha
cmp
test
sub
adc
fiadds
and
xchg
xchg
cmpb
ljmp
gs
xchg
out
loopne
outsb
insl
and
xlat
add
push
push
or
pop
and
push
popl
cld
ss
dec
add
cmp
xor
or
push
imul
jp
je
leave
xchg
dec
mov
pushf
xchg
mov
xchg
loope
pop
xchg
and
adc
push
push
or
push
or
js
inc
lea
dec
sbb
push
cmp
dec
add
mov
lcall
lret
mov
aam
mov
lds
dec
add
je
dec
xchg
mov
sub
jl
dec
cs
out
fidivrs
add
decb
mov
das
adcl
adc
inc
in
add
mov
aam
fidivrs
mov
xchg
adc
rcll
into
movsb
mov
outsl
jns
pop
and
mov
out
add
es
popa
mov
sti
pop
mov
test
loop
fildll
scas
stc
outsl
cmp
cmp
icebp
dec
iret
add
int3
inc
test
dec
adc
cmp
ss
sbb
std
xlat
add
pop
movsl
xor
fisubrl
scas
pop
insb
mov
insb
loope
arpl
fs
pop
dec
xchg
inc
mov
inc
mov
and
js
shl
xchg
movsb
mov
jle
sub
lods
out
pop
ret
cltd
mov
fistl
jmp
loope
fdiv
or
pop
iret
mov
push
vpcmpeqd
dec
loopne
lret
rclb
loope
repz
iret
repnz
jns
fisttps
pop
pop
dec
jg
fs
add
xchg
sbb
or
rolb
pop
repz
lods
mov
push
mov
xchg
push
dec
int
inc
mov
rcrl
mov
outsb
dec
imul
adc
push
push
push
enter
pop
adc
fldenv
or
mov
fcmovb
cmc
cmp
inc
inc
sub
leave
xor
stc
sub
xor
mov
sub
sahf
int3
pop
mov
lds
pop
rcrb
popf
and
lods
test
repnz
nop
dec
inc
hlt
mov
mov
inc
decb
inc
repz
xor
ss
ret
in
in
sbb
stos
sahf
shrb
in
roll
bound
repnz
scas
cwtl
xor
lret
add
nop
push
mov
jns
aaa
stc
in
ss
sarb
mov
sub
es
icebp
sub
into
xchg
pop
and
adc
push
and
and
test
lahf
aaa
jo
push
mov
mov
test
int3
mov
testb
mov
imul
mov
sub
fwait
adc
repz
arpl
test
pop
loopne
xor
and
pop
pop
les
imul
dec
mov
inc
mov
inc
aam
ret
mov
jb
mov
inc
sub
mov
loopne
outsl
and
movsb
ja
test
dec
cltd
and
arpl
push
mov
push
in
lahf
add
lea
jecxz
test
push
jp
movsl
xchg
xor
out
shlb
and
add
into
jmp
fs
icebp
divl
or
int3
push
xchg
loopne
adc
cs
enter
inc
das
and
aaa
mov
cmp
mov
ja
cld
add
arpl
js
es
add
pusha
jb
xor
xor
adc
sbb
mov
int
add
mov
std
movl
mov
sub
js
repz
add
cs
out
insb
cmp
jp
test
xchg
scas
jo
insl
insb
pop
data16
dec
push
adc
mov
dec
dec
dec
dec
rep
lret
push
rorl
mov
gs
push
ss
test
insb
cmpb
in
jmp
xlat
aad
shl
adc
ja
and
and
dec
pop
nop
loopne
dec
jmp
pop
mov
fistl
xor
add
mov
and
jle
fs
or
sub
arpl
icebp
xor
in
mov
sbb
daa
test
pop
loopne
mov
lds
ret
add
cmc
hlt
repz
pop
mov
stc
mov
mov
out
into
cmpsl
roll
push
daa
es
xor
cs
sub
mov
xor
or
sbb
or
cmpsl
mov
std
jp
sub
stc
clc
lcall
add
out
sub
cmp
aam
aaa
push
inc
cltd
xchg
fistl
jns
push
cmp
rcrl
rorb
push
lods
test
orb
filds
mov
test
jg
lea
scas
pushf
fcoml
scas
enter
cltd
cwtl
inc
mov
mov
push
mov
cmp
mov
int
inc
xchg
clc
lret
lea
je
ljmp
sbb
les
movsl
jecxz
add
push
mov
lods
jmp
or
fldenv
loop
pop
mov
les
dec
nop
dec
mov
aaa
jp
orps
add
pop
sub
jb
mov
ss
out
cltd
in
xor
add
aam
pop
inc
adc
fists
pop
push
sahf
dec
sbb
ss
jo
cmp
pop
xor
sahf
add
repnz
leave
sahf
inc
jbe
in
fldcw
in
xor
fldcw
mov
sbb
loope
in
frstor
pop
ror
sbb
inc
imul
rcr
clc
mov
fidivrs
cld
xor
es
sbb
jo,pn
loop
insb
and
push
pop
push
and
push
pusha
push
mov
push
dec
push
mov
test
xor
or
sbb
add
and
inc
jle
imul
insb
mov
movsb
movsb
sbb
push
push
aad
xchg
fistps
inc
lret
inc
xchg
push
test
dec
or
xchg
adc
xor
xorb
mov
jl
ss
les
push
dec
push
sbb
sbb
les
push
cmp
sahf
aaa
add
in
test
rclb
jbe
test
scas
push
jle
xorb
cmp
std
std
cld
sti
jmp
in
jb
cltd
orl
sub
mov
mul
adc
and
sbb
mov
or
push
push
mov
mov
aam
cld
mov
arpl
fdiv
push
aam
mov
sub
mov
sbbb
lods
adc
jmp
xchg
pop
popa
xchg
adc
sbb
mov
lock
repz
lret
jne
subl
mov
call
cmc
lock
or
loopne
mov
or
or
inc
clc
idivb
fstl
lret
mov
leave
dec
test
sub
aaa
mov
sbb
je
jge
cmpb
in
sub
in
mov
xor
loopne
cs
xchg
cs
mov
nop
les
mov
jbe
js
xor
xorb
out
in
std
cld
sti
imul
jo
xchg
sbb
rcrl
push
fstp
adc
aad
and
or
sbb
xchg
lret
push
push
mov
xor
mov
inc
sub
aas
and
test
gs
push
pop
pop
scas
push
pop
stos
and
bound
mov
pop
ret
enter
mov
mov
ret
mov
loope
mov
add
jg
jge
shr
jns
out
out
jecxz
icebp
lock
add
pop
negl
mov
lcall
inc
sub
leave
xchg
rcl
icebp
rol
mov
rorl
mov
xor
xchg
daa
mov
add
in
push
sbb
sbb
xchg
xor
sbb
addl
data16
int
or
rcrl
mov
mov
sub
arpl
in
outsl
out
mov
push
rcrl
loopne
adc
ljmp
stc
dec
jne
sbb
sbb
out
lods
dec
xlat
lock
out
add
repz
rcrb
inc
sub
decl
fwait
ss
pop
pop
push
push
aas
and
dec
shlb
sarl
push
mov
xchg
xchg
xchg
nop
dec
inc
int3
or
aam
mov
jle
je
jle
imul
addb
lds
scas
xchg
push
shlb
and
mov
fcoml
inc
std
ret
sbb
mov
out
andl
mov
inc
add
sub
or
mov
fstpl
xchg
fisubs
stos
xor
xlat
or
xchg
neg
pop
mov
mov
xlat
scas
idiv
add
mov
mov
mov
mov
cmp
jg
scas
mov
sti
popf
push
dec
pop
cs
lcall
loop
sub
fiadds
pop
loope
push
pop
sarl
add
cmc
popa
and
sahf
stos
push
push
or
mov
push
lahf
ss
mov
xor
clc
sub
leave
hlt
std
mov
sub
lahf
pop
flds
mov
mov
insb
ja
fwait
or
mov
jns
lcall
lea
mov
mov
incl
fisubs
xor
movsl
movq
sub
test
xchg
sbb
add
jb
loopne
movb
jbe
ss
in
inc
ja
cmp
mov
sub
mov
sub
insb
jno
push
push
bound
pusha
or
xchg
inc
or
pop
push
aam
idivb
lret
mov
cmpsb
xor
xor
mov
jmp
in
outsl
lret
jno
jo
or
aam
adc
jg
imul
pop
sbbb
dec
inc
inc
call
xor
xor
mov
aas
sub
dec
cmp
stos
test
in
mov
bound
push
out
xchg
mov
pop
dec
or
popf
popf
pushf
fwait
aaa
xor
loopne
cs
inc
cmp
push
das
mov
call
jle
lods
sub
jo
ret
out
test
imul
lret
jle
scas
scas
sbb
push
and
popf
xor
repz
jg
inc
imull
adc
fcoml
lret
xchg
int
int3
dec
in
xor
add
insb
in
push
pop
cld
mov
mov
fs
pop
cwtl
sub
ficoml
popf
adc
fldt
test
or
lret
das
lea
jns
insb
pop
cmp
cmp
test
cmpsb
movsl
movsb
mov
inc
jno
or
jb
jo
xchg
aam
aaa
push
and
cwtl
push
push
push
push
push
inc
pusha
pop
leave
pushf
testl
inc
add
push
and
cmp
add
cmp
mov
in
xchg
cs
movsl
imull
mov
xchg
xchg
xchg
mov
lahf
daa
les
ss
sub
sbb
aas
jge
mov
scas
jp
nop
aas
imul
jecxz
icebp
popf
add
ficoml
pop
adc
dec
stc
div
jne
loop
das
pop
or
flds
shrl
jnp
cmp
out
xor
add
int3
pop
push
sub
pop
shll
outsl
lods
mov
lock
sbb
rcrl
xchg
xchg
gs
inc
lea
jp
insl
clc
rorb
mov
adc
or
incl
cmp
cmpsb
call
cld
das
outsl
scas
test
cmp
das
fisttpl
ds
sub
xchg
add
dec
xor
repz
les
push
push
sarl
mov
inc
aas
loope
dec
ret
xor
xor
inc
lods
loope,pn
mov
and
adc
push
fwait
arpl
adc
mov
rolb
inc
iret
pop
cmc
and
inc
inc
ljmp
push
imul
stos
in
mov
cmp
in
in
bound
leave
enter
inc
mov
inc
mov
jno
add
pop
iret
ss
data16
mov
jge
ds
sbb
xlat
es
pop
addb
cmp
dec
push
push
cmc
shlb
add
pop
push
and
mov
mov
mov
test
pop
adc
mov
daa
add
rclb
push
cld
sti
jmp
and
mov
pop
mov
jo
jle
dec
push
loopne
adcb
movsb
ret
dec
rclb
pop
add
push
pop
into
arpl
jmp
fnstcw
call
cmp
movsb
es
cltd
test
in
mov
dec
sahf
shlb
pop
loope
mov
out
mov
aas
out
mov
mov
mov
mov
sbb
fcomi
add
addr16
and
lahf
into
in
add
lcall
clc
icebp
out
lahf
loopne
data16
fcmovne
mov
lods
les
push
sbb
mov
adc
rol
mov
sub
es
sti
and
jge
inc
lods
inc
or
jecxz
les
lock
adc
test
add
lea
je
idivb
push
insl
inc
dec
xchg
stc
inc
xchg
jl
add
sub
ss
in
add
push
sbb
insb
rep
pop
les
xchg
les
cmp
mov
add
fdiv
mov
mov
mov
cmp
dec
inc
lahf
repnz
xchg
lds
in
mov
mov
sub
xlat
pop
jge
push
into
ficompl
jnp
mov
pop
iret
les
mov
dec
repz
inc
add
mov
sbb
sbb
out
sahf
in
fildll
cmc
jmp
push
push
lods
and
or
or
push
add
nop
daa
rclb
out
loope
sbb
lret
xor
outsl
stos
out
int3
movsl
sub
adc
mov
loopw
lcall
cltd
insb
enter
fiaddl
dec
lret
movsb
xchg
mov
xchg
mov
imul
cmp
mov
or
sbb
fwait
push
cmp
fcoms
sub
outsb
insb
imul
mov
sub
adc
and
adc
nop
add
push
and
dec
out
cmp
cmp
mov
cmp
enter
rcrb
mov
insb
pop
mov
dec
jbe
aad
cltd
cwtl
xchg
inc
mov
sahf
dec
outsl
sbb
mov
mov
xchg
push
or
cmp
xor
aad
dec
cmp
mov
mov
cltd
jp
in
mov
jb
in
repnz
out
out
in
in
mov
pusha
xor
call
xchg
out
fcompl
popf
push
test
mov
js
mov
fidivrl
shlb
movsl
mov
gs
sub
daa
cmpsb
loopne
scas
fdiv
lcall
pop
cmp
and
push
inc
mov
pop
xchg
jns
xchg
decl
idivl
fwait
pushl
jmp
pop
stos
xor
icebp
lods
insb
sbb
test
jp
push
aad
and
sbb
lahf
sub
icebp
fucomi
stos
rolb
or
push
push
pop
mov
aam
neg
loopne
in
xlat
mov
dec
or
push
stos
test
mov
jmp
and
popa
fwait
insb
mov
stos
pop
dec
and
inc
sub
inc
jp
inc
xchg
or
hlt
dec
sub
js
jbe
sbb
nop
addl
lahf
out
insb
mov
jb
lock
bound
ljmp
in
shrl
push
sbb
push
or
clc
div
cmc
hlt
repz
outsb
xchg
clc
cmp
mov
cmpsb
fcompl
mov
add
gs
sbb
pop
sbb
sbb
ret
and
pop
int3
jo
inc
mov
pop
push
add
dec
stos
sbb
add
cld
fcoms
inc
in
imul
xchg
xchg
mov
xchg
jmp
push
fidivrl
push
push
aad
push
ds
pusha
pop
fdivrp
lcall
dec
in
push
push
dec
into
push
or
jne
add
lcall
into
mov
shll
jecxz
inc
xchg
dec
test
ficoml
pop
mov
pop
pop
adc
pop
or
inc
inc
dec
iret
hlt
dec
xor
push
mov
aaa
cmp
dec
addr16
mov
cmp
xchg
loopne
test
mov
pop
and
test
jns
inc
rcl
fcompl
lahf
insb
mov
rcl
mov
outsl
out
inc
mov
sbb
and
idivl
ljmp
sbb
pusha
sbb
mov
sbb
icebp
jmp
int3
adc
lss
adcl
adc
add
daa
sti
stos
and
popf
adc
pop
sti
cld
sti
fildl
das
data16
jb
out
outsb
jo
insl
pop
mov
mov
loope
push
push
bound
out
pop
pop
dec
shlb
iret
leave
push
push
dec
movsl
stos
push
mov
mov
adc
in
cmp
and
lret
lcall
sbb
inc
jge
imul
leave
dec
fwait
add
pop
pop
push
das
ret
mov
es
sbb
xchg
mov
rolb
arpl
addb
ja
and
out
out
jb
aam
stc
push
cmpsl
sub
mov
lock
sahf
filds
dec
jbe
dec
mov
dec
test
sub
jge
xor
fwait
fwait
test
addr16
push
push
out
sub
mov
std
loop
mov
fisubrs
mov
out
stos
push
sbb
cmp
sbb
and
or
cmc
les
cmp
add
mov
push
ret
and
iret
pushf
inc
testb
jl
mov
call
popl
stos
js
outsb
insb
imul
push
dec
shll
push
loopne
jg
push
leave
jne
push
xchg
cmp
out
jae
push
push
pop
adc
mov
xorl
mov
loopne
fstl
iret
xor
jmp
jecxz
push
sub
xchg
pop
js
mov
fsubrl
inc
js
aas
and
mov
mov
cmc
mov
cmp
ljmp
jnp
jo
inc
arpl
mov
xor
fld
adc
cmpsb
clc
xchg
fldt
add
je
insl
int3
pop
rcl
dec
or
cmp
aaa
test
pop
and
out
pop
mov
lods
pop
mov
fdivp
adc
adc
adc
iret
or
cmpsl
ret
dec
aas
fnstcw
stos
dec
pop
adc
lea
add
push
ret
stos
and
sbb
xchg
outsl
popa
pop
daa
mov
push
push
out
test
daa
and
dec
loope
jne
je
out
push
pop
pop
mov
cmp
push
out
in
mov
mov
out
jmp
cwtl
mov
arpl
xor
shr
mov
push
mov
cmpsb
enter
pop
mov
cmp
pop
lcall
outsl
jle
mov
and
lds
rolb
mov
inc
add
inc
dec
dec
push
in
push
xchg
lea
bnd
sbb
insl
mov
pop
and
xlat
pop
xchg
lock
fwait
les
loope
test
insb
iret
push
fst
int
jge
cmp
mov
mov
sbb
fmuls
and
scas
pop
aam
stos
pop
jge
fstl
push
pop
xor
cmp
and
popaw
push
roll
ret
fsubl
mov
nop
dec
mov
pop
or
jbe
shlb
jae,pn
push
add
in
imul
push
hlt
out
popf
dec
mov
fadds
mov
subb
push
loop
inc
fbstp
stc
pop
pop
pop
push
scas
lahf
cmp
data16
xchg
mov
xor
sbb
push
mov
mov
gs
sub
outsb
cmp
out
push
xchg
push
movsl
cltd
xchg
xchg
xchg
and
test
jo
rol
dec
lcall
xor
xor
add
xor
and
fs
bnd
ret
jbe
sub
xchg
int
pushf
xlat
push
cwtl
mov
add
adc
repz
sbb
sub
mul
and
nop
das
mov
test
fstpt
mov
sti
jae
rcrb
lret
jmp
jb
mov
sub
xlat
pop
out
insl
aad
subl
or
pop
movb
jno
into
push
mov
int3
cli
xor
push
pop
mov
fidivrs
ret
inc
popa
mov
stos
lcall
xchg
mov
xor
insb
lret
insb
or
jns
sahf
int3
adc
popf
aam
ret
or
push
mov
cld
fwait
mov
lds
lods
in
pusha
fists
fmulp
cmp
and
push
bound
icebp
dec
nop
je
out
xor
xor
jbe
xchg
inc
jge
repz
push
mov
jbe
sub
es
arpl
xchg
jge
xchg
into
adcl
add
fisttpll
add
pop
iret
sub
push
popf
and
dec
mov
sub
pop
push
sbb
bsr
icebp
outsl
insl
jo
addr16
leave
or
mov
cmc
loope
or
enter
adc
repz
iret
sbb
fdivrp
xor
fisubrl
jb
adc
loop
clc
ds
cmp
mov
cmp
stc
cmp
stos
test
movsb
mov
pop
pushf
out
and
imul
cmp
xchg
push
fstpl
ds
leave
sub
pop
dec
xchg
popa
push
lods
dec
ljmp
shl
cmp
jg
xor
das
arpl
loop
out
pop
js
out
push
sbb
or
xchg
add
inc
in
xlat
sub
pop
loope
jne
test
daa
xor
addr16
jne
add
fldl
jg
fstps
jnp
fimull
xchg
adc
mov
cmp
mov
sbb
sub
cs
jns,pt
out
and
adc
aad
lods
sub
pop
pop
mov
rcrb
stos
xor
mov
shrb
and
stos
call
movsb
mov
cmpsl
mov
je
push
pop
cwtl
sub
mov
pushf
pop
cmpsb
mov
aaa
divb
sub
xor
idivl
or
mov
pop
leave
test
out
in
cld
ss
jmp
fnstenv
fistl
push
hlt
std
sti
push
in
fcom
aad
shl
adc
ja
push
fadds
sbb
jg
imul
add
out
nop
roll
and
inc
subl
jae
jl
jnp
inc
aas
aas
cmp
js
int3
xchg
cmpsb
outsb
cltd
out
aas
in
ret
insl
sbb
pop
adc
push
call
xchg
repz
xchg
and
pop
std
fistpl
je
cmc
mov
cmp
mov
sbb
leave
xor
cmc
pop
rolb
inc
iret
push
push
fldcw
and
daa
es
scas
addr16
out
imul
pushf
pop
or
cmp
mov
test
movsl
add
movsb
adc
cli
jo
and
mov
add
push
inc
clc
mov
push
hlt
mov
jo
in
cltd
cld
lcall
and
jns
sbb
les
inc
rcrb
inc
into
add
shll
dec
insl
cmp
cmp
inc
aas
div
ret
scas
xor
xchg
sbb
sub
inc
xchg
sbb
and
cmp
sub
jp,pt
nop
aaa
cmc
test
add
data16
jge
pushw
out
sbb
aad
xchg
out
in
cmpb
mov
ret
ret
mov
sbb
jo
dec
shrb
jl
mov
mov
clc
jns
ret
mov
mov
in
jmp
cmp
sbb
mov
xor
cs
out
sub
shll
adc
int3
sbbb
or
xchg
les
imul
add
cmp
sahf
mov
mov
repz
arpl
in
outsl
out
mov
push
popa
iret
xchg
fidivl
jg
aad
add
popa
popa
add
push
jecxz
push
dec
inc
pop
push
jmp
and
dec
push
dec
push
mov
push
jae
jbe
push
adc
adc
in
cmp
repz
es
mov
mov
pop
lds
pusha
cmpsb
mov
mov
xchg
enter
mov
lcall
lahf
mov
jns
popa
stos
pushf
jp
add
push
aas
adc
pop
push
sbb
lcall
mov
test
pop
xchg
fstpl
mulb
neg
fs
cmc
sbb
inc
push
push
adc
jnp
dec
insb
mov
insl
mov
ret
sub
data16
adc
pusha
loope
pop
icebp
mov
or
sbb
ret
and
xchg
sbb
dec
inc
pop
adc
jp
cmpsl
mov
clc
xorl
push
xor
mov
pop
fldcw
push
in
scas
or
push
dec
cwtl
sbb
sub
mov
stos
insl
jg
cmpsb
pop
jnp
mov
in
lock
jecxz
jp
mov
rcr
fucomi
xor
lock
int3
stos
push
cmc
movl
adc
shll
lds
xchg
push
jns
pop
pop
cmpsl
jae
mov
xlat
scas
cli
dec
sub
xor
fldenv
fnstcw
fisubs
jo
pop
nop
fdiv
or
cltd
lock
mov
pop
shl
cmc
hlt
mov
jmp
int
lret
push
faddl
sarb
dec
out
aaa
in
cli
mov
ror
js
sub
push
sub
cltd
loopne
test
push
sub
jmp
ss
fcoml
aam
add
inc
in
push
jne
xlat
stc
adc
loop
jnp
test
jmp
mov
enter
movsb
ret
mov
mov
arpl
movsl
cld
in
and
arpl
es
pusha
jg
adc
push
leave
xchg
lds
sub
cmc
dec
out
or
push
in
aaa
mov
push
shr
clc
cmp
mov
dec
sub
add
jge
and
or
popf
pop
xchg
insl
movsb
mov
mov
rcrl
or
xchg
xchg
mov
adc
fwait
mov
sbb
inc
jbe
mov
mov
in
fwait
je
jl
icebp
xor
nop/reserved
jecxz
stos
not
dec
movsl
in
ficompl
scas
mov
popa
adc
ljmp
dec
add
sti
mov
jns
int3
cmp
mov
leave
shrb
jae
xor
call
mov
mov
call
repnz
xor
imul
pop
push
test
push
mov
cmc
std
jecxz
stos
popf
push
in
mov
mov
test
mov
jb
sbb
push
je
orl
fidivs
pop
rcrl
cmc
dec
jno
push
add
insb
into
sahf
cld
call
add
mov
adc
scas
fsubrs
and
movsl
movsb
mov
shlb
cwtl
nop
cmpl
pop
mov
nop
push
rorl
jns
lret
lods
je
sbbb
jnp
arpl
jae
aas
ds
sub
call
pop
fistps
stos
orl
loope
sbb
iret
dec
push
leave
enter
fdivs
in
mov
jg
sbb
inc
shlb
mov
sbb
and
sbb
xchg
pop
dec
loopne
adc
rorl
lret
or
pop
dec
mov
cmc
fmul
and
stos
fs
aas
sub
into
push
push
sbb
cs
push
push
ja
jp
mov
subb
sti
ja
cmovne
cmpl
jnp
push
xor
cld
into
notb
push
adc
js
scas
push
hlt
xor
subb
mov
or
push
scas
mulb
lret
aam
mov
ss
cld
pop
lcall
mulb
lods
inc
icebp
js
lahf
xchg
nop
or
jns
js
mov
out
jge
jg
cld
sub
sub
call
into
cltd
lock
jg
mov
xchg
aam
cmc
out
and
pushf
fstpl
es
xchg
dec
mov
fisttps
and
jbe
xor
xor
xchg
mov
jmp
or
es
aam
or
mov
lds
cmp
cmpsb
pop
stc
push
fdiv
sbb
push
sbb
iret
adc
ret
shlb
pop
mov
sbb
mov
sti
push
shl
mov
dec
push
xlat
push
sub
and
fs
and
mov
inc
inc
mulb
dec
rclb
int3
jbe
loope
cli
jbe
jno
aas
aad
mov
cld
cmp
xchg
jb
mov
in
dec
mov
xchg
xchg
insl
and
mov
mov
iret
into
int
lret
mov
mov
mov
dec
repz
inc
inc
inc
cmp
addr16
out
pop
fisubrl
pop
cmp
mov
pop
popf
rcrl
enter
clc
fisttps
cs
sbb
fwait
fwait
adc
mov
xchg
cmp
fdivrl
jmp
roll
out
daa
aas
bound
daa
aad
adc
mov
adc
and
xor
ficompl
pop
pop
loope
das
jmp
xor
cmpsb
or
or
test
mov
cli
and
fdivrp
xor
cmp
es
push
dec
incb
imul
pop
inc
sahf
rorl
pop
les
jg
or
push
into
jbe
prefetch
mov
cmp
std
cmp
test
cmpsb
movsl
hlt
dec
sub
sub
pop
inc
mov
pop
sahf
mov
adc
adc
cli
mov
lea
jbe
adc
in
leave
movsb
jnp
adc
repnz
adc
push
sbb
loope
fists
add
loope
mov
shrb
bound
xorb
rorl
mov
sub
dec
into
dec
inc
inc
lcall
dec
es
or
adc
and
pop
or
cltd
adc
cmc
lcall
mov
mov
mov
xchg
je,pn
push
aam
aam
icebp
sub
jle
adc
sahf
lds
jle
loope
adc
out
cmpsl
cmc
lods
testl
aaa
fdivs
ds
loopne
ds
test
xor
aas
jb
push
out
sub
cltd
cltd
inc
xchg
mov
mov
ljmp
pusha
scas
sub
jle
mov
push
cld
mov
imul
inc
imul
in
mov
out
in
xor
xchg
push
and
pop
pop
fldl
shlb
mov
fdivrs
mov
fstpl
xor
or
pop
test
in
loopne
mov
sub
imul
adc
sbb
cmpsb
lods
ret
sbb
loop
inc
sar
or
fnstsw
jae
popa
mov
mov
and
sub
cs
mov
mov
or
jno
stos
sbb
dec
xlat
mov
outsb
lret
xchg
pop
rolb
inc
or
mov
js
dec
and
repnz
inc
aas
or
test
outsb
stos
sbb
pop
xchg
mov
inc
stos
push
push
lahf
pop
jo
jb
ljmp
add
cmpb
inc
aas
mov
inc
jae
adc
add
adc
or
in
push
sbb
inc
imul
cmc
xchg
in
out
in
cmp
pop
mov
mov
inc
loop
dec
adc
nop
outsb
push
lea
dec
cmpb
into
mov
mov
mov
mov
daa
test
sti
xchg
mov
sub
es
adc
lcall
lret
mov
add
test
stos
adc
push
repz
jp
or
stc
cmp
jnp
cmp
jmp
pushf
inc
in
lret
and
adc
nop
aad
lcall
fcompl
xchg
leave
sbb
or
inc
cmp
xchg
rcr
mov
movsl
int3
aam
data16
mov
jno,pt
sti
push
dec
mov
add
test
and
es
ret
xchg
xchg
adc
mov
pushf
sbb
or
add
test
pop
cmpsb
jbe
jp
das
frstor
push
or
sub
movsb
mov
icebp
lock
xchg
adc
push
xor
das
jmp
popf
pop
sarl
add
dec
dec
addl
push
lret
mov
mov
adc
dec
mov
push
mov
pop
sbb
scas
roll
xor
adc
pop
popf
loop
push
je
test
sahf
xchg
enter
lds
scas
push
push
add
xchg
cmpsl
mov
and
xor
cwtl
sub
xchg
push
sbb
arpl
adc
pop
pop
pop
xlat
sbb
xor
pusha
filds
stc
push
lret
xor
aaa
push
or
mov
inc
aam
cmp
mov
xorb
cmpsb
clc
aaa
std
cmp
stos
and
fbstp
mov
pop
sar
inc
mov
mov
add
sbb
mov
xor
cli
push
pop
bound
pop
and
ja
hlt
shl
xchg
jle
pop
sub
sbb
jecxz
jo
mov
bound
fcmovu
push
enter
loope
rorb
lret
dec
jo
mov
sarl
ljmp
pop
sub
inc
mov
rol
pop
ljmp
fisttpl
enter
push
push
push
iret
sbb
and
stos
cmp
aaa
enter
loopne
dec
lea
or
or
xor
add
mov
and
cld
push
push
adc
sahf
outsb
insb
imul
push
push
dec
loope
push
bound
pop
in
xchg
mov
inc
inc
lds
bswap
jb
dec
mov
fdivrs
in
cmp
mov
cmpsb
movsl
int
mov
pop
rcrb
dec
mov
mov
add
imul
xor
test
xor
pop
adc
inc
js
cmc
shr
aas
xor
mov
xor
call
jb
cmpsl
pushf
aad
pop
mov
aam
sti
mov
gs
lret
dec
inc
inc
imul
int
lret
aas
movsb
insb
pop
pop
cmp
mov
mov
and
fcompl
push
lret
cmp
cs
xchg
aaa
add
push
ret
popa
add
xchg
or
or
pop
inc
clc
cmpb
cmp
std
fnsave
and
jo
sbb
xchg
cmc
push
cmp
bound
dec
aaa
sbb
rclb
xor
push
jno
mov
jecxz
push
cmp
ss
sarl
push
mov
fistpll
or
stos
lcall
and
mov
pop
scas
sarb
adc
adc
or
cli
dec
subl
push
inc
sbb
stos
and
daa
jbe
adc
in
lahf
aam
test
out
mov
cmpsb
or
aad
push
stc
jl
ret
pop
idivl
xchg
cld
aad
sub
jl
dec
xorl
nop
pop
jno
push
push
js
mov
push
rcrb
mov
and
xor
mov
sbb
fisttps
mov
enter
movsb
or
test
lret
cmc
lea
xchg
stc
cld
jne
div
hlt
ds
std
sbbl
cmp
jb
cltd
sbb
aam
and
pop
loopne
xchg
fistl
stc
inc
fildl
hlt
inc
push
in
jne
sbb
push
dec
dec
ja
repnz
cmp
addb
cmp
push
mov
cmpsb
movsl
movsb
pop
popw
insl
rcr
pop
ret
push
push
ficoml
pop
es
or
inc
mov
test
pop
xor
call
push
cmp
cmp
in
jo
or
pop
xchg
repz
aad
cwtl
and
fcom
mov
test
popf
pop
mov
iret
enter
xchg
push
mov
pushf
push
sarb
jne
jg
and
pop
push
jmp
mov
loope
dec
pop
das
xor
out
imul
adc
jmp
mov
dec
ss
les
aad
or
xchg
stos
mov
into
arpl
mov
jmp
arpl
movsl
adc
popf
test
sbb
mov
xor
dec
enter
sbb
jae
jl
add
outsl
in
push
into
arpl
dec
jo
je
out
aaa
xor
mov
cmp
fldl
sub
push
imul
pop
mov
xchg
push
xor
xchg
or
or
dec
mov
dec
rolb
mov
dec
xor
sbb
adc
sub
and
dec
adc
sbb
lcall
inc
aas
pop
mov
sub
add
cli
lret
dec
popf
incl
push
or
add
std
cmp
push
mov
jne
pop
xorb
push
mov
mov
out
push
cmpsl
pop
adc
fstl
loop
jmp
fiadds
add
mov
push
adc
mov
test
pop
test
xor
sahf
pop
popf
adc
test
arpl
scas
xor
stos
sub
outsb
insb
imul
scas
cmp
xchg
jp
push
cli
pop
rolb
in
sbb
repz
push
pop
mov
xchg
push
dec
dec
lret
ja
mov
add
aad
test
imul
cmpsl
and
cltd
pop
stos
enter
test
push
mov
insb
cmpsl
nop
daa
mov
pushf
fwait
or
cwtl
push
cmp
test
inc
adc
add
sub
dec
xor
push
pushf
push
test
in
mov
xor
cmp
aaa
mov
addr16
fstpl
ficoml
jp
add
xor
call
pop
bnd
addr16
cmp
pop
and
mov
icebp
aaa
addb
mov
xor
popa
and
mov
and
add
imul
xor
lret
add
mov
push
andl
xchg
xchg
out
xchg
mov
out
shlb
fs
xor
int
insb
xchg
mov
push
push
pop
mov
push
pop
stos
or
int
lret
clc
ss
dec
data16
mov
shl
mov
sub
cmpsb
pavgb
rclb
std
xor
les
insb
ds
cltd
sbb
xchg
pop
loop
insb
pop
xor
lods
add
dec
push
enter
inc
out
mov
cmp
test
cmpsl
test
pop
sbb
pop
add
cltd
out
and
add
movsl
xor
mov
mov
ja
dec
jbe
aam
jp
in
into
cmp
xchg
xchg
imul
dec
idivl
sarb
jmp
cmpb
mov
add
movsb
and
cltd
xor
xlat
notb
sbb
sarl
xchg
inc
pop
add
add
add
jns
movsb
dec
sahf
adc
rcl
cwtl
xor
mov
add
in
mov
push
push
pop
cs
and
in
cmc
outsl
insl
insb
dec
mov
xchg
das
push
push
bound
mov
pop
sbb
cmp
cmc
lds
dec
push
dec
sti
jge
mul
or
fsts
movsb
add
xlat
aas
mov
xchg
test
in
add
sub
mov
and
shrb
or
add
xchg
xchg
jae
lea
xchg
shl
incb
jg
lock
cmp
in
bound
add
lock
outsb
push
lods
les
addr16
mov
mov
mov
dec
mov
imul
xor
jns
cmp
mov
sti
out
push
cmpsl
xchg
shrb
sub
mov
mov
stos
lret
and
or
dec
mov
add
mov
test
cmpsl
xchg
push
clc
mov
mov
sub
mov
inc
add
sub
add
std
int3
lret
xor
scas
arpl
lret
sub
into
dec
push
and
ret
push
aaa
or
in
sbb
leave
add
inc
cmp
or
in
push
dec
add
add
ds
cltd
inc
inc
inc
insl
out
test
add
in
lods
addl
cwtl
mov
jp
mov
jae
mov
insl
sub
jl
popa
in
aaa
mov
js
push
arpl
lock
cld
and
cmp
insb
mov
out
jo
aas
mov
adc
test
and
mov
fdivr
daa
push
mov
push
sahf
sbb
mov
inc
and
sarl
fisubrl
pushf
scas
add
je
fidivl
xor
cs
adc
adcb
into
lcall
mov
roll
push
push
call
cmp
pop
hlt
div
xor
ljmp
add
push
push
or
lds
dec
pop
outsb
pushf
mov
dec
cltd
lret
inc
dec
sbb
or
inc
xor
dec
sub
sbb
sbb
loope
filds
cmp
mov
aam
xchg
sub
fsubl
lods
fwait
jmp
cltd
cltd
xchg
xchg
sbb
mov
pop
je
cmp
adc
and
into
test
inc
es
rcl
cltd
add
outsl
pop
in
or
pop
movsb
dec
rcl
iret
into
push
and
ds
sbb
hlt
loope
cmpsb
popf
pushf
inc
mov
inc
or
mov
gs
outsl
sub
xorb
rcll
pop
jae
int
dec
and
xor
mov
xchg
lcall
decb
test
stos
repz
adc
and
jg
pushf
stos
cltd
cwtl
xchg
jo
pop
sub
mov
fwait
fwait
mov
mov
arpl
jo
pop
sbb
pop
subl
jle
arpl
pop
addb
adc
lds
mov
les
call
sub
nop
adc
int
mov
mov
mov
lds
cld
das
push
jne
addw
stos
test
xor
xchg
cmc
cld
xor
test
cld
mov
fisubrs
or
nop
test
push
pop
xchg
int
loop
inc
pop
pop
mov
dec
test
mov
sub
jge
cmc
cli
cmp
mov
rol
push
inc
adc
pop
jae
and
and
xor
outsb
jnp
inc
lcall
out
mov
mov
cmp
movsb
mov
sbb
inc
xor
es
and
lcall
outsl
fisubrl
sbb
fldcw
sbb
pop
push
adc
mov
push
sbb
mov
push
shlb
iret
pop
lock
loop
mov
subb
add
xor
cltd
jmp
mov
stc
sbb
cs
lods
fildl
and
pop
imul
or
jb
pop
xchg
inc
pushf
sbb
mov
stc
jbe
xchg
jg
jbe
pop
inc
std
mov
js
jle
adc
and
popf
loop
mov
in
push
lahf
or
loop
hlt
fiadds
push
lret
mov
fcmovb
fcom
iret
lahf
popf
inc
js
mov
mov
ret
mov
std
fldcw
arpl
mov
push
pop
outsl
nop
out
aam
xchg
pop
les
cmp
add
xor
mov
inc
testb
jp
insl
clc
adc
lods
push
movsb
addr16
push
je
es
cli
in
pop
out
adc
cmpsb
fisubrl
push
fs
imul
and
jmp
pusha
out
cwtl
jg
iret
jo
jmp
into
pop
repnz
lock
jmp
fisubl
insb
xor
fstp
cmpsb
push
aaa
and
aaa
lods
pop
xchg
inc
lods
jb
xchg
cwtl
xchg
xchg
or
out
es
cmpsb
sub
mov
addb
lahf
or
jle
leave
js
jbe
lret
push
and
add
jne
in
addl
mov
into
out
xchg
push
add
repnz
icebp
push
roll
dec
cli
sarl
out
cmp
push
dec
ljmp
shlb
jae
mov
add
dec
pushf
fwait
shll
xor
add
sub
pop
mov
shrb
mov
stos
stos
lcall
xchg
iret
xchg
rcrl
inc
stc
sarl
nop
and
cwtl
xor
inc
adc
or
fidivs
xor
inc
shll
inc
push
cmp
jg
xor
aad
jmp
subb
mov
sub
test
movl
shrb
into
xchg
jno
adc
mov
fisubs
nop
scas
xchg
rcrb
mov
jns
mov
aad
cmp
pop
pop
push
imul
lods
jecxz
js
in
in
in
repz
fcom
scas
cld
lret
fisttps
fcmovne
inc
or
shll
jns
jb
push
mov
neg
mov
add
add
pop
pop
or
out
es
shrl
xor
sbb
sbb
enter
std
das
test
sbb
add
hlt
addr16
jne
push
jno
testl
adc
std
mov
fcomi
pusha
das
data16
ret
imul
push
lcall
test
pop
pop
imul
movb
sbb
loope
fisttps
std
aas
add
sub
dec
stc
and
sub
fisttpll
xchg
sbb
cmp
lcall
push
xchg
xchg
xchg
sbb
roll
xchg
inc
mov
pushf
add
jp
das
xchg
adcl
jge
inc
and
push
sub
sub
mov
xchg
mov
sbb
lcall
shlb
sahf
ficoms
loope
fstp
fisttpl
push
push
insl
cmp
into
cld
pop
xor
out
jnp,pt
adc
in
xchg
mov
dec
stos
fnstenv
das
pop
add
mov
sbb
les
pushf
leave
sbb
ficompl
ret
inc
and
mov
mov
test
or
cmc
jg
push
sub
int3
gs
jb
cmp
mov
hlt
push
xor
das
xchg
xlat
jbe
ficomps
popl
in
pop
pop
pop
mov
jg
jl
pop
movsl
mov
mov
jns
push
sub
shrl
movsl
sub
push
pop
push
mov
dec
mov
jae
xchg
add
rcr
sbb
loopne
inc
sti
dec
and
jp
add
sbb
stos
and
jg
std
lret
or
pop
xor
jecxz
add
lahf
loope
mov
pop
mov
dec
xchg
enter
inc
push
lret
dec
jbe
cmp
xor
mov
mov
out
sub
hlt
xor
scas
jmp
stos
out
sub
out
pop
xchg
mov
push
mov
pop
test
or
int3
adc
setno
scas
dec
cmpb
sbb
sub
sti
ljmp
imul
outsl
outsb
insl
in
loop
test
fsubl
int
pop
pop
call
pop
clc
pop
into
push
out
inc
inc
inc
shlb
xor
xlat
sub
xor
ret
and
adc
mov
sub
sbb
adc
fcmovne
mov
xchg
xchg
repz
inc
sahf
or
mov
fisttpll
mov
cmp
cmp
sbb
jne
call
jg
jge
jnp
cmp
or
insb
fldpi
lret
push
jle
xchg
jmp
xlat
push
and
fdivl
test
push
iret
rol
pop
dec
test
push
lods
cmp
into
int
lret
stos
leave
xor
cmp
ret
push
jmp
in
mov
mov
loopne
mov
sub
mov
iret
push
cmp
mov
into
adc
push
jnp
add
push
test
adc
adc
or
cmc
aad
pop
sub
out
cmc
push
and
fs
test
lcall
xchg
fistps
sbb
and
call
rolb
push
movl
dec
pop
movsb
repz
mov
cmp
push
arpl
mov
xchg
outsb
insb
jo
arpl
and
lods
add
xchg
mov
pop
clc
mov
pop
hlt
repnz
cmp
cmp
imul
xlat
arpl
xchg
add
jmp
push
push
hlt
bound
hlt
iret
stc
sub
push
test
cmpsl
mov
or
adc
xchg
mov
sarb
jle
cmp
and
pop
pop
popa
and
push
lods
call
jecxz
leave
les
ficompl
das
mov
sbb
push
adc
gs
sub
jno
lods
es
je
sti
add
push
shlb
pop
mov
cmpsl
inc
cmpsl
xlat
xor
fmuls
pop
push
adc
mov
xchg
stc
dec
repnz
inc
inc
inc
int3
pushf
rorb
dec
sbb
nop
aaa
cmp
bsf
inc
mov
mov
xchg
out
cwtl
mov
mov
movsl
xchg
xchg
and
pop
cmpsl
adc
mov
stos
add
mov
repnz
sub
xor
test
ja
jne
mov
fstpl
call
mov
jmp
cli
xchg
stc
mov
cli
pusha
and
inc
mov
jo
mov
arpl
idivl
cmp
xorb
cmpsb
repnz
call
scas
lcall
prefetch
or
int3
adc
fildll
test
xor
int3
mov
mov
mov
negl
gs
add
std
jecxz
pushaw
outsl
adc
jecxz
push
push
aaa
outsb
insl
insb
jmp
pushf
cmpsl
jle
or
idivb
pop
jp
and
test
or
pmulhuw
ret
cltd
frstor
inc
aas
ds
fsubrl
popf
mov
push
sbb
scas
scas
lods
ljmp
sub
or
add
test
xchg
jns
movsl
jp
mov
jp
mov
std
cmp
cwtl
out
push
outsb
stos
and
adc
push
rcrl
push
xchg
xlat
push
lahf
loopne
cmpsl
loope
mov
dec
mov
inc
or
nop
shll
dec
jns
iret
push
arpl
aaa
jae
icebp
adc
cli
cmp
mov
mov
mov
idivb
sbb
xchg
pop
sti
mov
popf
loopne
xor
mov
sbb
into
add
or
mov
mov
xor
jg
lcall
jmp
das
pushf
push
pop
fsts
mov
xchg
or
pusha
loop
push
pop
jns
or
pop
lods
rorb
rorl
stc
inc
out
jl
inc
mov
rcrl
cltd
push
jo
mov
movsb
pusha
lods
xor
stos
and
and
push
push
enter
jae
mov
mov
pop
jg
in
test
inc
mov
addb
js
cmpsb
jge
push
xlat
leave
loopne
out
sbbl
xlat
aad
lahf
in
jmp
mov
inc
fidivl
loopne
mov
in
jae
inc
mov
das
jle
test
addr16
and
repnz
or
das
cs
sub
sbb
cmp
jge
loope
clc
pop
mov
adc
loop
add
adc
or
lahf
adc
cld
xchg
jnp
jmp
mull
push
imul
sub
jle
fistps
and
cs
adc
pop
inc
dec
mov
xchg
in
fidivrl
push
mov
mov
cmp
cmp
xor
sub
loope
sti
mov
push
pop
pop
fstl
xor
in
mov
cwtl
push
fwait
ds
movsb
xchg
mov
popf
push
mov
xchg
les
adc
mov
add
jne
ficompl
lods
aam
test
sbb
outsl
cli
fsub
jecxz
push
pop
add
in
in
push
lcall
fildl
hlt
jb
add
movb
mov
rcl
int3
into
lret
aas
subl
jg
movsl
repnz
push
mov
jmp
repnz
mov
xchg
fbld
mov
sbb
lea
inc
push
js
divl
lret
sub
add
repz
cmc
hlt
repz
dec
test
out
cmpsb
sub
mov
jae
andl
data16
cs
testb
or
mov
dec
into
pop
push
ret
in
adcb
je
aaa
cmp
mov
inc
inc
sub
and
jb
fsubrs
pop
xor
data16
adc
xchg
adc
int
or
xchg
xchg
int3
loopne
xchg
sbb
fwait
mov
notl
xchg
nop
divb
xor
and
inc
divl
fsin
test
loop
data16
jno
in
test
or
sahf
icebp
inc
in
jmp
pop
daa
pop
mov
xchg
fdivr
sub
sti
shll
jns
and
push
sub
insb
mov
mov
cmp
pop
cmpsb
in
sub
sbb
cmp
and
xchg
aam
push
in
mov
and
sbb
adc
add
movsl
and
or
clc
idivl
cwtl
ljmp
icebp
das
imul
stc
inc
and
and
loop
xchg
shrl
push
sub
enter
push
inc
les
inc
iret
and
or
or
xor
xor
mov
xchg
mov
es
cmpsl
pop
mov
pop
xor
mov
scas
cs
ljmp
or
pop
negb
int
in
cmp
das
lea
cmp
dec
jle
cld
cvtpi2ps
jnp
lods
or
in
arpl
neg
jg
stos
loopne
lahf
or
pop
fistpl
loope
faddl
into
dec
xchg
enter
dec
mov
int3
lret
sub
popa
jbe
mov
cmpsl
pop
sarl
mov
fiaddl
in
push
xchg
leave
mov
cmp
pushf
leave
xor
sbb
std
fildl
stos
push
notl
jne
mov
lods
cmc
sub
pop
add
push
ret
imul
mov
gs
jno
outsl
out
aam
stos
sbb
mov
adcl
test
cmc
repnz
dec
int
loop
std
inc
xor
test
aas
fbld
scas
xchg
mov
addr16
pop
bound
dec
xchg
push
dec
mov
push
xchg
mov
es
xor
xor
test
mov
and
cltd
and
push
bnd
jecxz
lods
lock
cmp
push
xchg
fcmovb
xchg
roll
loope
cmc
ret
rolb
push
inc
pop
lds
inc
ljmp
into
int
inc
cld
or
jnp
mov
jnp
mov
pop
dec
add
rclb
cwtl
test
sbb
mov
dec
sbb
or
add
xchg
pop
xchg
negl
testl
mov
cmp
pop
icebp
data16
pop
rolb
insl
pushl
xor
jae
ds
nop
aaa
add
lret
jae
jnp
lret
inc
dec
dec
dec
rcrl
aas
dec
inc
mov
cmp
dec
cmpsl
leave
subb
das
les
stos
inc
xchg
seta
mov
lahf
insl
pop
mov
add
test
mov
mov
scas
mov
jae
jle
xchg
je
jl
fistps
mov
scas
out
hlt
jmp
in
xchg
aad
popf
fimuls
jae
pushf
fcoml
lds
dec
push
xor
lret
xor
cmp
int
in
stos
loop
cmpsl
out
sbb
pop
daa
es
shlb
imul
sti
mov
mov
sbb
cmpsl
sub
fildll
lea
add
insl
lods
and
and
std
lahf
lock
xor
jb
jo
cltd
insl
cld
imul
fisubs
loope
pop
fs
pop
jle
and
out
dec
adc
inc
pop
bound
cmpsb
cwtl
scas
xor
aas
lods
jge
std
incl
out
sub
mov
scas
scas
xor
add
sbb
popf
cmp
push
jnp
addl
test
dec
lea
call
jmp
call
aam
lods
in
scas
sbb
pusha
in
xchg
aad
xchg
and
xchg
push
mov
fiadds
loop
mov
dec
int
lret
cmp
insb
mov
xchg
les
ret
mov
sbb
loop
lcall
sub
sub
sbb
push
adc
adc
push
mov
mov
stos
test
adc
add
daa
divb
xor
jle
addr16
mov
sbb
nop
push
jbe
out
cmpsl
add
in
adc
adc
cmpsl
loope
pop
orb
jb
iret
or
add
bswap
ss
repnz
cmp
imul
fidivl
ds
inc
insb
test
add
mov
xchg
sub
sbb
mov
pop
lret
dec
jmp
inc
xchg
mov
mov
dec
mov
mov
dec
jecxz
out
fs
ljmp
repnz
sbb
mov
popa
leave
pop
xchg
shl
or
pusha
fisttpll
sbb
cs
add
mov
or
or
cmp
push
sub
out
push
das
scas
in
mov
adc
lods
or
pop
push
adc
and
push
mov
fs
push
test
outsb
mov
and
mov
into
xor
jmp
mov
pop
sbbb
shr
repz
xchg
imul
pop
fcmovnb
insb
xor
mov
mov
push
nop
test
mov
sarl
lods
jnp
cmp
or
shll
test
movsl
and
xchg
cs
pop
adc
iret
adc
loope
or
fwait
popf
lods
fwait
mov
inc
lret
sbb
ss
cmp
inc
sbb
sbb
and
mov
cmpsb
out
fwait
jl
adc
xlat
push
and
pop
and
pop
xchg
enter
inc
push
mov
sbb
inc
mov
xor
dec
sbb
jnp
pop
pop
mov
ds
and
and
rcll
ss
sub
sbb
mov
mov
push
mov
mov
stos
hlt
mov
or
lret
sti
jne
cwtl
repz
cwtl
jnp
add
pop
jb
add
inc
xchg
or
fimull
lea
pop
aam
pop
jne
je
ss
roll
jl
push
xchg
aaa
pop
push
pusha
dec
dec
sbb
jmp
push
cmpsb
add
cltd
jnp
mov
push
test
int3
mov
shrl
xlat
sahf
push
out
fnsave
test
pop
popf
or
add
mov
nop
or
and
mov
mov
mov
aaa
andl
push
icebp
sbb
imul
jecxz
into
push
test
lret
hlt
mov
pop
push
les
rclb
push
and
dec
lea
jbe
xor
mov
mov
sub
pop
dec
inc
inc
lods
outsb
leave
cmc
mov
push
mov
sub
sbbb
cmpb
pop
push
insb
push
mov
or
faddl
jg
clc
clc
div
fwait
add
mov
mov
cmp
sub
rolb
sub
pop
pop
daa
loop
fdivp
push
push
push
cmp
mov
and
test
pop
test
pop
xchg
sbb
loopne
mov
inc
xor
repz
movsb
in
test
and
mov
scas
push
fsubs
mov
xchg
enter
lods
and
dec
xchg
cmpsb
mov
or
dec
sbb
in
das
cmpsl
jbe
test
sbb
fsubrl
lock
ljmp
xor
out
rorl
in
push
pusha
jmp
cmp
leave
mov
lea
aam
test
jne
cmp
dec
adc
aam
inc
lret
xchg
cmp
mov
and
ret
xorb
xor
push
scas
mov
sbb
lret
pop
popf
and
bound
cmpsl
stc
cmc
pop
lret
sbb
or
sar
ret
inc
xchg
loope
out
cli
stos
mov
imul
out
in
gs
jo
push
jo
xlat
xor
outsl
aad
loopne
popa
jmp
test
popf
pop
sbb
int
adc
mov
inc
push
ds
add
inc
daa
jle
push
lahf
insb
inc
sbb
stos
pop
ds
imul
mov
pusha
mov
es
test
jae
cli
add
mov
mov
shll
jg
add
cmpsl
outsb
movsb
subb
icebp
enter
les
aad
mov
push
inc
lret
mov
jbe
xchg
into
ret
jle
cmp
fnstenv
cmp
shlb
jmp
daa
lods
repnz
out
call
out
mov
cli
adc
lret
sahf
mov
popl
cmp
jne
mov
mov
mov
pop
mov
push
pop
inc
lock
jmp
pop
push
jb
push
jge
inc
bound
pusha
vpmulhuw
cmp
and
sbb
mov
dec
dec
add
in
inc
pop
cmpsb
repz
subb
dec
push
lods
imul
jb
scas
scas
adc
sbb
sub
outsb
sub
xor
add
lock
flds
xorb
add
adc
inc
xor
xor
insl
scas
fmuls
popf
in
mov
push
test
add
push
jnp
cli
cmc
int3
sbb
inc
ret
push
xchg
into
dec
mov
test
mov
ljmp
xchg
pop
inc
mov
ret
js
sbb
jg
xor
dec
xlat
and
sbb
shll
cmp
dec
push
xlat
fists
pop
dec
clc
dec
leave
inc
aam
jp
insl
hlt
incb
jae
incb
je
add
imul
gs
pop
imul
outsl
in
inc
dec
fwait
out
test
cmp
mov
or
push
rcrl
push
les
dec
xor
hlt
cmp
fmuls
add
mov
ds
aas
inc
sub
add
dec
test
mov
imul
pop
mov
out
fwait
adc
jl
cmp
rorb
aad
js
call
adc
std
adc
cmpsl
push
jl
mov
xor
jle
fiaddl
stc
clc
mull
hlt
cltd
mov
hlt
test
mov
rorl
sub
iret
xor
out
inc
repz
mov
lea
out
subl
and
repnz
subl
sub
sbb
push
sbb
sahf
fiadds
cmp
and
push
adc
nop
sar
rorl
pop
push
or
ret
call
addr16
sub
push
in
sub
in
scas
or
jmp
lea
mov
adc
lret
hlt
push
int
test
dec
shl
push
mov
xor
add
mov
adc
and
std
sub
and
lods
xor
pop
addr16
mov
xchg
xchg
xchg
push
scas
or
mov
mov
test
rorb
xchg
mov
xor
xor
jnp
ja
std
in
shrb
jne
sti
sbb
sub
scas
fdivs
in
lock
push
adc
push
push
mov
lcall
lret
inc
add
vroundsd
push
fs
mov
shll
sub
jb
jbe
pop
jno
adc
mov
sub
sbb
xor
xchg
sub
dec
or
rorb
rorl
scas
mov
hlt
jmp
xchg
std
cld
sti
movsb
and
xor
insl
nop
or
mov
jb
inc
and
lahf
or
jg
outsb
cmp
inc
insb
push
sbb
jp
in
repz
aaa
ss
inc
enter
cmp
loope
push
mov
in
lahf
mov
scas
mov
lcall
xchg
xchg
or
pop
mov
dec
js
or
je
pop
adc
lea
neg
ljmp
leave
adc
jo
jmp
lcall
lds
push
mov
aad
dec
lahf
icebp
inc
ffreep
ror
inc
lods
leave
enter
cmpb
fstl
mov
ljmp
jle
adc
xlat
and
in
sub
ficoml
sahf
aad
mov
xor
jmp
or
repz
adc
sbb
xor
mov
sbb
push
jb
and
fsubrs
addl
addr16
push
pop
fistps
frstor
inc
pop
call
stc
push
lret
dec
repz
mov
fmuls
dec
push
out
out
addr16
loopne
dec
xor
rclb
cmpsl
in
lods
jb
pop
fcompl
ror
into
shrl
lahf
or
nop
mov
sub
jp
test
push
mov
das
flds
ja
subb
sub
and
and
pop
testb
test
leave
inc
mov
fdivs
sbb
testl
jmp
jg
and
int
mov
mov
daa
xor
jno
inc
and
and
sub
movsl
push
xor
das
fcoms
pop
sbb
adc
push
pop
push
sbb
inc
shrl
mov
and
mov
push
jle
std
push
rcrb
fs
das
test
outsb
insl
jmp
cmp
inc
loopne
popa
pusha
pop
mov
sbbb
push
jmp
jl
adc
arpl
jne
loope
bnd
jb
ret
mov
test
cmpsb
movsl
lret
xor
mov
scas
scas
sbb
dec
arpl
mov
and
ds
inc
inc
cmp
or
xor
sub
into
stos
jecxz
mov
sbb
in
aaa
sbb
jl
jmp
inc
push
add
adc
mov
xchg
and
loope
adc
popf
arpl
sti
push
call
add
mov
outsb
insl
cmp
aaa
pop
push
push
push
leave
pushf
sarb
pop
aam
dec
add
xor
xchg
push
lods
pop
mov
push
push
cmp
mov
sub
les
cmpl
sbb
adc
or
mov
adc
mov
mov
mov
scas
aaa
adc
loope
fisttps
mov
jo
and
inc
sbb
test
test
jmp
mov
mov
popa
lcall
aad
daa
movsb
jle
cmp
movsl
stos
or
insb
mov
ret
dec
movsb
and
nop
lds
adc
mov
pop
scas
nop
add
xchg
adc
seta
inc
inc
int3
repz
jne
sbb
stos
sbbl
repnz
enter
mov
fcmovb
scas
out
pushf
push
imul
in
push
xadd
mov
lret
dec
shlb
mov
xchg
shrl
cli
dec
jb
mov
mov
shll
pop
mov
sub
lock
cs
imul
aam
and
sbb
push
repnz
cmpsl
xchg
movsl
pop
and
sbb
xlat
loope
ret
dec
fdivl
ja
mov
cmp
xchg
cld
add
out
data16
pop
jno
ds
adc
jno
adc
stos
add
jg
xorl
lds
push
or
roll
cmp
in
add
sahf
cmpsb
aas
ds
or
mov
push
insl
mov
subb
push
xchg
outsb
and
popa
sbb
leave
ja
lea
sarl
push
jne
mov
sub
cld
mov
jmp
roll
jb
pop
out
push
mov
push
scas
stc
popa
lods
adc
mov
das
shll
sahf
faddl
in
mov
or
lcall
and
jl
cs
push
inc
das
scas
jno
mov
xlat
cmp
loop
mov
dec
movsl
sub
mov
test
pop
mov
sub
jp
ret
jne
sub
insl
xchg
mov
sbb
out
jb
xlat
sub
dec
nop
sbb
fdecstp
mov
aad
cwtl
push
leave
xchg
out
orb
repnz
jg
add
ljmp
push
fisubrs
xlat
test
jno
fsubrl
daa
pop
movsb
xchg
cs
ret
rcl
sub
inc
fwait
inc
mov
pop
repz
cltd
cmova
push
push
fists
scas
rorl
test
sbb
inc
lods
jmp
adc
xor
aam
fisubrs
int3
pop
or
popa
test
xchg
mov
jmp
pushl
int
jne
dec
xchg
push
iret
into
xchg
insl
out
pop
jae
pop
in
sub
sarb
push
sbb
in
loop
sbb
arpl
sub
sbb
add
sbb
test
add
repz
jnp
cmc
div
jae
sbb
push
sbb
jmp
shlb
icebp
add
pop
aad
bound
jge
pop
popa
pusha
gs
ret
and
enter
shlb
push
push
jp
xlat
dec
aad
cmp
cmp
xchg
rcl
loop
aam
pop
lods
xor
sbb
xchg
rcl
mov
sbb
addb
cmp
ret
int
mov
dec
push
sbb
mov
jns
xor
xor
jae
andb
ljmp
mov
icebp
xchg
loop
fsubrs
stc
scas
lods
push
inc
cwtl
xlat
popf
fstl
mov
add
cld
jb
imul
je
cmp
push
jp
in
daa
mov
scas
ljmp
and
sub
mov
aad
cmp
push
mov
fildl
mov
lea
sub
rclb
ja
jne
sahf
mov
insb
and
mov
repz
int3
test
mov
imul
fidivrl
aad
adc
mov
fistpl
in
dec
movntq
out
fmuls
dec
dec
ret
rorl
sub
push
fldl
sub
cmp
stos
sub
inc
bound
sub
and
lret
pop
shlb
aam
dec
fisttpl
mov
xchg
daa
aam
push
and
sbb
scas
andb
pop
mov
data16
aam
lods
adc
fcomps
scas
pop
cwtl
pushaw
mov
aam
jl
out
ret
xchg
insl
cwtl
arpl
mov
sarb
cmp
mov
movsb
jmp
movsb
data16
inc
out
dec
cwtl
xor
xor
dec
fisttps
out
ret
push
adc
mov
aad
xchg
add
inc
adc
lea
cmp
adcl
fildll
lcall
add
xor
lcall
push
adc
dec
jne
mov
dec
dec
enter
dec
mov
push
xor
cli
cmp
aas
cmp
xor
jo
sub
cmp
xor
mov
mov
cltd
pop
mov
mov
mov
es
cmp
xrelease
sbb
in
nop
xor
or
mov
jae
push
mov
in
out
mov
jecxz
in
sbb
xchg
popa
mov
push
mov
lds
fldl
dec
or
ret
push
push
andl
mov
mov
inc
into
pop
fdivs
pop
in
dec
int
and
cwtl
push
lcall
adc
xor
inc
movsb
int
or
mov
test
sub
mov
and
aas
rcrb
adc
gs
pop
adcl
je
push
pop
pop
xor
sti
inc
sbb
popa
pop
pop
cmp
jge
jl
dec
push
inc
inc
sbb
bound
jl
insb
in
xor
movb
mov
iret
leave
dec
test
outsl
and
ret
or
int3
pop
rorl
dec
xchg
pop
andl
roll
in
xchg
negl
hlt
js
push
cmpsb
dec
xor
aad
icebp
std
adc
fnsave
clc
in
push
sub
mov
lret
dec
adc
push
mov
inc
or
ret
movl
xor
ret
js
in
and
pop
scas
and
movsb
std
stos
pop
and
sub
and
push
xchg
in
sub
adc
or
or
lahf
mov
mov
or
or
mov
leave
mov
lahf
jae
dec
lahf
lds
hlt
repz
mov
sbb
es
mov
mov
in
outsb
insl
sbb
push
push
loop
je
enter
std
rcll
dec
or
jmp
jae
repnz
stos
sbb
mov
call
mov
cmc
es
mov
xchg
movsw
imul
aad
pop
push
mov
dec
mov
xchg
and
dec
mov
rolb
ret
mov
arpl
nop
outsb
out
lods
lods
clc
out
push
fcoms
je
stc
clc
mull
add
call
movsl
sub
cmp
mov
arpl
mov
fisubs
mov
xor
xor
fsubs
and
xchg
cmc
adc
ret
pop
sahf
std
sbb
loop
or
push
shlb
add
xchg
mov
mov
clc
popf
add
dec
cs
mov
jmp
outsl
scas
xor
or
lea
sub
cltd
leave
adc
faddl
stos
dec
dec
les
inc
inc
inc
ret
adcb
in
dec
dec
cmp
mov
pop
aaa
aas
aas
pop
scas
inc
sub
cwtl
call
mov
or
sbb
mov
nop
or
mov
pusha
xchg
mov
rcl
mov
add
push
mov
xchg
jle
jle
mov
arpl
or
xor
mov
lock
loope
xlat
test
clc
lods
lods
imul
fcoml
mov
add
xchg
loop
lret
xor
xchg
jae
cmp
inc
mov
mov
es
sbb
gs
fsubl
jae
dec
dec
mov
push
xor
insl
xchg
sbb
popa
sbb
dec
test
mov
mov
sub
add
add
add
ss
rorb
xchg
pop
test
pop
pop
pop
xor
cli
jge
inc
fstl
mov
popf
ret
xchg
push
mov
mov
mov
je
ss
mov
cmp
mov
push
pop
xchg
test
mov
pushf
cmp
fnstenv
cld
bound
pop
adc
lea
sub
sub
sbb
push
loope
loopne
lret
add
fbld
nop
jmp
loope
insb
jmp
fldenv
imulb
xchg
aam
lret
lahf
and
ret
rorb
jnp
pushf
or
mov
mov
dec
stos
fisttps
lods
lret
fildll
inc
aad
lret
enter
dec
ds
adc
fadds
cmp
stos
test
movsl
fists
ret
sarb
lahf
cmc
xor
lods
xor
mov
pop
test
sbb
jo
outsb
in
adc
adc
or
lds
cwtl
rorb
mov
mov
cli
dec
xlat
pop
into
jb
dec
shl
arpl
lods
lret
sub
lods
das
push
lcall
mov
lods
lods
stos
and
jno
adc
push
and
cmp
pop
sahf
inc
test
shrb
dec
dec
mov
xchg
sub
sub
outsl
jae
cmpl
loop
jb
jmp
movl
repz
test
loop
mov
inc
or
gs
shlb
outsl
subb
pop
pop
ret
push
mov
mov
dec
fimull
cmpb
das
cs
out
lds
xor
sub
sar
into
xchg
mov
mov
mov
jg
or
mov
imul
and
clc
insl
sub
mov
jg
fstl
inc
pop
mov
pop
push
pop
ret
dec
or
jmp
dec
shr
test
loope
mov
or
inc
fsubrs
pop
stos
daa
movsl
mov
cmp
cmc
into
aaa
aam
lds
cs
jns
into
inc
pushf
lret
inc
sbbb
test
popf
pushf
push
push
enter
icebp
mov
cmp
adc
sub
push
sbb
loope
cmpb
mov
and
divb
jnp
in
in
bound
aad
fwait
loop
stos
rcrb
fstp
lret
dec
testl
ret
xor
cmp
cmpb
test
mov
sub
push
dec
push
leave
mov
dec
cwtl
ret
pop
leave
push
or
repnz
adc
add
sbb
in
mov
test
jp
adc
test
jbe
clc
div
jl
imul
mov
repnz
data16
jne
xchg
xchg
aam
popl
pop
dec
sbb
cmp
push
je
sbb
dec
hlt
push
call
xor
ret
fcom
mov
ret
stos
cmp
loopne
and
enter
inc
stos
push
adc
outsb
jb
lahf
ret
mov
xchg
lds
stc
dec
mov
mov
cmp
sbb
inc
out
ds
lods
fs
pop
jb
and
xor
jb
jecxz
icebp
leave
test
mov
xchg
ficoms
mov
fcmovne
test
es
insl
inc
rcl
shlb
loope
jns
inc
jne
pop
add
jmp
pop
fsubrs
pop
sbb
adcl
adc
into
and
xor
sbb
pushf
stos
mov
lods
xchg
inc
movsb
mov
cli
movsb
mov
repz
push
push
hlt
jo
mov
pushf
fwait
mov
popf
inc
sub
jo
outsb
push
cmp
pop
jle
cmp
sub
fistpll
cmp
pop
dec
test
movsl
or
push
into
jbe
prefetchwt1
xorb
xor
inc
inc
ds
stos
test
sub
stos
aad
pop
lcall
lea
aad
into
loop
lret
fidivs
rcr
mov
inc
pop
ret
cmp
jno
xor
lods
jle
xorb
mov
cli
fbstp
fildll
andb
xchg
aam
cmc
out
xor
pushf
fisttpll
jbe
out
imul
call
roll
aas
push
pmulhuw
and
les
xchg
sbb
arpl
cmp
in
stos
add
adc
adc
or
jg
add
mov
addr16
in
jecxz
and
sub
cld
mulb
imul
aam
adc
mov
dec
movb
sbb
into
dec
push
rorl
lret
ja
inc
lret
jecxz
fs
mov
add
add
les
cltd
push
fstpl
pop
inc
outsl
outsl
sbb
adc
popa
sbbb
ja
or
roll
and
lods
jg
sbb
cmp
dec
add
jmp
cmp
pop
push
mov
and
imul
dec
mov
dec
lret
or
popf
bound
xlat
push
cmpl
mov
sbb
push
mov
sbbb
lods
add
pop
fmull
out
and
and
xlat
movsb
hlt
xchg
adc
fcomps
dec
pop
outsb
cltd
jge
push
or
test
jge
push
outsb
jl,pt
push
insl
jne
push
scas
repnz
mov
aas
insl
xchg
mov
push
aad
jo
xor
sbb
cli
dec
test
or
popf
addr16
mov
dec
mov
sarb
dec
cmc
xor
test
out
cmp
push
xchg
insb
mov
lods
sar
ret
mov
mov
cmp
push
jp
add
cmpb
movsb
ja
iret
shll
add
popf
xchg
nop
gs
adc
out
imul
sbb
push
and
imul
jmp
insb
xchg
or
inc
sbb
dec
sbb
mov
xchg
adc
xchg
stos
sbb
adc
jmp
rorb
sub
pop
pusha
xchg
imull
scas
bound
inc
sbb
or
xchg
push
add
add
imul
fstl
dec
or
sahf
add
mov
dec
in
mov
and
mov
mov
ljmp
xor
push
rcrl
lds
dec
lods
lret
push
mov
jno
bound
mov
jge
mov
push
cmp
shll
orb
cmpsb
dec
pop
mov
scas
push
xor
and
imul
xor
sbb
mov
sbb
mov
add
inc
push
push
jne,pt
adcb
cmp
and
xor
add
fisubs
aam
data16
fcmovne
test
and
jp
test
ss
cmpl
dec
mov
orb
and
adc
xlat
lods
pop
daa
mov
or
pop
test
das
rorw
mov
adc
xchg
stos
movsl
out
pop
pop
mov
das
imul
or
push
ljmp
mov
and
jp
jo
outsb
in
cwtl
pop
subl
adc
call
lret
sbb
sbb
lods
pusha
jns
pop
cwtl
repz
jmp
mov
push
shrl
dec
les
daa
adcl
mov
das
jmp
in
iret
inc
jbe
loop
inc
sbbl
sarb
mov
push
sub
sub
scas
in
cmp
mov
lcall
mov
js
xchg
je
mov
adc
or
push
and
cwtl
and
xlat
add
ja
sti
je
insl
jb
gs
loopne
ljmp
sub
mov
popa
cmp
lret
jg
jae
lret
mov
frstor
jmp
in
arpl
in
and
cmpsb
xor
sbb
mov
enter
xchg
push
mov
sbb
sbb
add
add
into
or
dec
push
push
ret
pop
popl
xor
push
adc
cs
gs
or
inc
inc
inc
inc
sbb
aas
or
gs
rorb
sti
inc
enter
or
stos
fwait
jno
add
enter
outsl
mov
out
mov
cwtl
loop
inc
sbbb
mov
xchg
cmp
mov
xchg
sbb
in
mov
hlt
aaa
test
loop
je
sbb
je
lcall
orb
jae
sahf
aam
fwait
aad
call
call
aam
loop
clc
loopne
dec
sub
lret
jl
or
ss
sub
test
pop
repnz
mov
cmp
jmp
inc
rcr
out
das
xchg
gs
lock
mov
mov
mov
cmp
jp
xchg
jne
jne
dec
js
stos
cltd
pushf
add
repz
imul
mov
add
or
sub
jno
adc
popa
orb
jg
adc
push
inc
ret
test
clc
sbb
xchg
out
push
fsts
movsb
add
out
daa
pop
je
aad
xchg
loope
lcall
mov
cltd
popl
xchg
mov
xchg
mov
xchg
insb
mov
mov
inc
mov
lahf
add
jle
cld
js
jbe
mov
lahf
sub
mov
ljmp
sub
sub
add
in
in
jmp
aad
push
push
aam
imull
test
arpl
push
pushf
inc
jns
gs
iret
test
inc
xlat
popa
daa
pop
and
push
cmpsl
in
notb
xlat
xchg
jae
dec
rcll
loopne
inc
fstl
push
lret
daa
mov
aad
mov
mov
mov
adc
or
ficoms
insl
cli
or
lods
and
arpl
add
scas
push
cwtl
outsl
out
pushf
fwait
mov
scas
testl
or
and
push
enter
jne
dec
into
sub
inc
inc
les
mov
dec
dec
dec
lret
rcrl
xor
xlat
aas
aas
cmp
popf
inc
cmp
movsb
movsb
inc
xchg
lods
std
mov
jl
int3
jno
mov
pusha
mov
mov
xchg
or
sbb
dec
mov
mov
outsl
mov
lcall
jmp
test
fsubrs
aad
bound
dec
mov
out
in
jecxz
lods
lcall
rcl
shll
repnz
daa
insl
pop
pop
xor
adc
add
mov
sub
in
dec
sbb
pushf
out
inc
and
and
pop
in
pop
push
lock
and
mov
xchg
test
or
jle
div
addr16
add
mov
lock
fsubl
push
add
sub
popa
pusha
popf
rolb
jle
mov
inc
inc
test
mov
mov
call
aaa
daa
movsl
add
sti
cmp
out
dec
out
mov
xchg
lods
mov
dec
adc
ss
pusha
adc
lods
or
push
cmp
cmp
xor
cmp
jbe
mov
addr16
push
push
fstpt
inc
outsl
lods
out
jb
lahf
in
lock
scas
lods
in
bound
add
push
push
clc
stos
sbb
stos
inc
mov
fidivl
mov
fwait
jge
push
jo
xor
out
negb
push
mov
fcmovnbe
mov
adc
and
pop
ficoml
and
leave
jmp
add
adc
icebp
in
test
fwait
cltd
push
pop
push
add
and
mov
jns
ret
xor
add
jmp
mov
and
lock
pop
flds
data16
push
push
rorl
sbb
aad
inc
pop
jno
pop
adc
aaa
xchg
test
scas
dec
push
or
mov
xchg
cmp
jo
or
sbb
loope
mov
push
movsl
and
scas
data16
fisubl
push
je
rclb
mov
sbb
mov
push
push
icebp
nop
jmp
lea
test
and
or
aad
call
sbb
loope
out
mov
xlat
push
or
stos
mov
or
cmc
mov
mov
sub
call
and
aas
push
popa
fisubl
mov
sbb
es
xor
jb
jo
pop
jge
mov
dec
dec
lock
mov
enter
inc
scas
and
cli
movsb
pop
ret
div
cmc
jae
xchg
mov
mov
mov
insb
mov
shr
pop
pusha
cmpsl
or
inc
cs
loop
orl
fstl
pop
addr16
cs
sbb
cmpl
or
in
push
mov
inc
push
in
inc
cmp
fwait
ds
ds
mov
jle
jge
lock
fs
dec
jne
in
fcmovu
int3
mov
lods
sub
js
fwait
mov
fiadds
shr
loopne
in
or
sub
xor
and
mov
jmp
and
add
xor
in
in
pop
or
mov
testl
cmp
mov
mov
inc
mov
mov
hlt
sar
jl
movsb
data16
bound
cmpsl
push
sub
fsubrs
outsl
aaa
sub
and
es
inc
mov
cmp
iret
movsl
mov
cmpb
and
pop
data16
mov
cltd
mov
pop
divl
sbb
sbb
push
pusha
popa
pusha
fimuls
hlt
dec
into
stc
cmp
cmp
dec
jmp
shl
shl
mov
cmp
mov
fs
mov
sbb
push
push
shrl
loopne
jb
daa
jno
dec
xchg
jp
fwait
mov
enter
in
xchg
xchg
testl
xchg
jbe
sub
out
xchg
jl
adc
call
jecxz
insb
or
in
in
fildll
lahf
pop
mov
dec
xchg
dec
ret
popa
sub
inc
dec
mov
stc
ror
into
xor
xchg
js,pn
ds
mov
add
adc
arpl
mov
negl
out
das
lods
imull
push
sbb
adc
jge
mov
or
or
andb
femms
or
clc
divl
xor
in
push
mov
push
mov
mov
lret
imul
pop
push
jge
cmp
bound
or
mov
or
inc
inc
inc
fidivrl
lea
jne
and
cmc
xor
fwait
xchg
xor
ljmp
jb
sub
nop
sub
fbld
add
pushf
fwait
mov
test
clc
jnp
lock
cmp
jle
xchg
jnp
push
adc
aaa
fs
scas
out
sub
stc
fiaddl
pushf
loop
jmp
scas
stos
adc
scas
mov
rcrl
test
sahf
cmp
and
inc
daa
jae
and
sbb
inc
add
push
push
lods
sbb
out
push
xchg
and
in
sub
adc
rclb
add
mov
sbb
mov
mov
dec
test
fnstsw
mov
cmc
outsb
push
and
mov
ljmp
mov
imul
or
cmpb
xor
dec
xor
fdivrl
push
roll
xlat
mov
or
scas
cmp
push
cli
cli
imul
cs
jno
imul
jmp
test
lea
pusha
outsb
mov
push
adc
test
push
adcl
das
add
push
out
and
test
in
dec
pop
sbb
aas
insb
leave
scas
into
cltd
lock
icebp
mov
test
add
pop
stc
clc
pop
sti
stos
sahf
pusha
ret
sub
imul
out
insb
imul
fwait
push
bound
data16
jae
pop
pop
sub
insl
call
sub
dec
lock
sbb
dec
and
or
call
pop
pop
add
fnsave
lret
jno
imul
shlb
inc
cs
arpl
sub
pop
pop
mov
fisttpl
cmp
pop
ret
jge
popa
hlt
inc
int
mov
or
sbb
std
aaa
ss
shll
test
pop
lret
aam
out
test
inc
xchg
ret
mov
mov
insl
add
push
test
push
pop
pop
sub
cmp
cli
mov
inc
add
loopne
xorb
jp
movsb
jnp
xor
xor
stc
imul
cmpsl
imul
pusha
test
mov
jns
sbb
fldl
rolb
jae
dec
mov
in
dec
and
out
xchg
in
or
or
or
xchg
mull
out
in
and
fstl
das
lcall
xor
aam
adc
sub
adc
scas
cmp
or
mov
es
mov
hlt
jg
sub
in
in
and
clc
daa
pop
fildll
pop
outsb
pop
or
pop
aad
adc
imul
or
fidivs
testl
ljmp
dec
hlt
loop
mov
arpl
pop
inc
rcrb
mov
enter
sbb
xor
nop
pop
stos
sub
pop
mov
test
or
add
jne
pop
mov
jp
aaa
cmpl
add
xor
ljmp
lds
sahf
int
adc
xchg
jecxz
ficomps
xlat
mov
mov
sbb
fildl
dec
jl
mov
mov
or
mov
sbb
push
jge
adc
and
cmp
and
in
loop
cltd
ret
fcmovnbe
lods
shll
sbb
push
xchg
dec
cmc
shl
mov
pushf
roll
mov
test
sbb
mov
data16
mulb
mov
repz
out
daa
subl
mov
jb
sbb
cs
insl
mov
subl
mov
push
jle
repnz
ljmp
iret
lcall
pminub
cli
jae
add
sbb
cmp
xor
mov
rolb
in
lds
pushf
push
inc
fwait
fwait
mov
mov
cmc
and
push
ja
jne
sbbb
jg
jge
jnp
insb
call
in
outsb
jno
out
in
ret
or
add
push
fucom
mov
push
adc
test
mov
pushw
add
out
xor
adc
mov
js
xorl
inc
push
xor
in
mov
pusha
imul
shrb
mov
jns
daa
sti
stos
and
pushf
adc
xchg
xchg
mov
icebp
mov
add
push
das
jo
lods
je
ficoml
mov
inc
jne
cmp
pop
ret
jae
xor
ds
lret
mov
aaa
adc
mov
gs
popf
xor
lret
xor
loopne
xor
add
fnstsw
mov
xor
int3
pop
rorl
xchg
pop
lahf
add
leave
pop
dec
pop
pop
pop
pop
rcll
adc
pop
dec
inc
inc
mov
sbb
addr16
aaa
push
cwtl
repnz
jg
imul
out
leave
xchg
in
push
xlat
fnop
lahf
mov
shl
inc
dec
fstp
ret
fiadds
rol
push
mov
cli
jns
mov
lret
and
mov
rolb
call
mov
push
repnz
mov
or
sub
sbb
popf
loope
fistps
sbb
lea
adc
or
adc
jae
pop
das
clc
subb
add
into
loop
pop
and
adc
addr16
ret
test
scas
daa
or
pop
push
pop
push
xor
pusha
pusha
pop
pop
xor
inc
ret
dec
in
adc
aas
mov
ss
leave
fnstsw
cmp
int3
scas
sbb
pushf
iret
sbb
dec
bound
xchg
adc
mov
mov
inc
sahf
mov
pushf
ss
enter
push
and
stc
lret
cmpsb
mov
ret
mov
jg
and
aad
call
fisubrl
push
xchg
out
push
xchg
xlat
xchg
xchg
push
push
loop
divb
rclb
inc
fidivrs
and
rcrl
dec
pop
stc
js
dec
call
pop
mov
clc
mov
cmp
pop
jp
mov
push
jecxz
lcall
out
daa
add
aad
mov
xor
push
sbb
push
mov
test
mov
mov
je
incb
and
cs
inc
popa
outsl
xor
xor
fsts
xor
sub
pop
jb
jb
out
or
add
jmp
dec
dec
adc
or
jne
push
cmp
stos
test
cmpsb
popa
xchg
sbb
cwtl
push
push
cmp
cwtl
adc
jb
insb
pop
pop
ljmp
sub
jg
nop
mov
js
std
inc
loopne
imul
sti
sbb
mov
push
fmull
sahf
mov
pusha
sahf
leave
push
ja
fucom
mov
in
fmul
leave
dec
xorl
shlb
cmp
stc
aad
mov
mov
mov
std
and
xorb
lds
and
out
sub
sub
or
or
sbb
push
sbb
or
fdivrs
push
in
outsl
mov
jle
sti
jnp
cld
call
test
push
popa
bound
das
pop
pop
sub
jg
jge
xor
xor
push
inc
sbb
sbb
dec
inc
inc
cmp
rcll
push
mov
dec
ret
mov
aad
outsb
mov
push
mov
inc
sbb
stos
scas
dec
pop
gs
aas
cmpsl
mov
push
pop
push
xchg
test
aaa
jns
jl
cmp
and
xor
mov
push
mov
push
adc
icebp
xchg
xchg
jnp
movsb
pop
out
or
push
jmp
push
stos
fisttps
mov
dec
mov
push
fs
insl
leave
cmp
rcl
rclb
mov
lret
xchg
push
push
push
inc
cld
daa
jae
mov
ljmp
jge
loop
adc
repz
aad
repnz
fwait
inc
adc
inc
add
out
outsl
mov
sub
js
es
jbe
rorl
ret
sub
sti
push
add
gs
sbb
jmp
or
test
push
jnp
popa
pusha
pop
pop
pushf
sbb
out
lret
inc
inc
inc
mov
es
mov
cmp
je
repz
pusha
xchg
std
cmp
fld1
shlb
scas
mov
cltd
stc
pop
sbbb
mov
popf
pushf
fwait
pop
leave
xor
sahf
push
xchg
xchg
cmp
mov
jbe
je
xor
aas
sbb
sbb
inc
ja
adc
fcompl
in
popa
xchg
hlt
hlt
repz
mov
fistpl
push
test
jo
fwait
aas
scas
mov
pop
pop
jno
push
push
jg
cmp
pop
aam
lods
movsb
ljmp
test
lahf
xchg
in
cmp
cmp
push
ss
shrl
xchg
dec
and
scas
scas
lods
and
cmc
les
jecxz
sbb
popf
pushf
mov
mov
xchg
nop
repz
push
push
es
fdivs
jae
lcall
ljmp
jecxz
push
pop
lods
dec
cmp
xlat
pop
xor
mov
test
lret
lea
outsb
cwtl
adc
jmp
cwtl
addr16
mov
pop
outsb
shlb
mov
test
sahf
pop
jg
lea
mov
cmp
cmpb
add
sbb
icebp
jno
imul
adc
out
in
shrl
pop
mov
leave
push
pushf
push
mov
adc
shlb
mov
in
mov
inc
mov
mov
in
fldcw
sbb
lods
insl
mov
sub
and
popf
loop
and
ds
test
rorl
adc
femms
xchg
divb
repz
aam
insl
sub
push
sti
into
test
cmpsb
dec
sub
out
mov
sbb
repz
and
push
push
jl
pop
popa
pusha
sbb
mov
repz
pop
dec
mov
je
pop
lods
divb
mov
inc
sub
sub
mov
mov
mov
jl
pop
nop
pop
cltd
pop
aad
ret
aad
lahf
and
mov
jne
mov
xchg
mov
mov
into
stos
mov
jae
idivl
rcl
aas
jg
mov
ret
gs
fcmovne
cltd
lock
mov
cmc
fucom
push
mov
leave
pop
pop
mov
mov
and
jmp
je
xlat
dec
fs
mov
cmp
jp
jmp
sub
es
and
sub
xor
fisubl
shrl
shl
adc
cld
push
inc
sbb
inc
rorl
daa
stc
adc
pop
sar
div
hlt
subb
nop
adc
gs
jns
jo
iret
insl
insb
imul
loopne
push
push
push
loopne
push
sub
icebp
sub
mov
stc
xlat
or
stc
adc
scas
add
loop
inc
lods
imul
push
insl
lret
addr16
mov
jno
mov
mov
int
mov
repz
cmp
xlat
add
mov
mov
adcl
js
xchg
jns
xchg
fimull
mov
iret
fisubrs
fcom
push
or
loopne
fidivs
test
dec
jno
fsubrl
mov
or
add
daa
jle
pop
fadd
pop
mov
push
jecxz
lods
out
push
pop
outsb
lret
lock
sahf
or
popf
pusha
xchg
push
and
xor
sbbl
mov
roll
lret
pushf
scas
scas
jns
cld
sahf
std
sbb
lret
inc
call
imul
xchg
and
nop
sub
pop
pop
jns
insb
jbe
or
pop
xor
negl
cmc
push
push
pop
out
cmp
pop
inc
or
test
mov
repnz
sub
sti
push
in
fcom
aad
shl
push
mov
mov
mov
filds
inc
mov
adc
mov
jp
js
xchg
mov
addl
in
les
inc
sbb
repz
sub
in
in
jmp
add
test
push
hlt
loop
or
mov
lret
dec
testb
repnz
js
sbb
ret
cmpb
and
and
sbb
adc
cmp
int
dec
jmp
cmp
add
popa
jne
jne
xorl
jle
sti
jnp
jb
rclb
jp
xor
dec
cmp
and
jp
or
cmpsb
lock
inc
mov
adc
jge
cmp
clc
ss
hlt
inc
sub
in
cld
stos
add
aad
mov
insb
and
and
push
pusha
push
sub
pop
adc
push
dec
push
adc
push
push
test
dec
add
idivb
add
incb
sbb
jno
data16
push
outsb
in
out
in
icebp
and
pop
adc
fcomps
or
push
mov
lret
mov
dec
xchg
lret
test
xor
js
add
sub
mov
sub
imul
cs
push
xchg
adc
loopne
mov
pop
mov
sbb
leave
add
fcoml
xchg
jp
hlt
cmpsb
jbe
push
cli
stc
clc
and
ss
add
sbb
cwtl
lds
mov
mov
xchg
push
leave
sbb
enter
pop
pop
pop
leave
addb
in
cltd
jns
stos
lret
mov
or
in
xchg
mov
sarb
stos
leave
push
xchg
sbbb
lods
pop
in
mov
pop
pop
rcrb
mov
ljmp
push
xchg
dec
xchg
icebp
loop
cmp
and
inc
jae
add
std
push
in
outsb
push
pop
inc
or
rolb
jb
mov
push
xchg
fidivrl
pop
sahf
loope
pushf
fiadds
ficomps
enter
push
push
rorb
mov
cmp
mov
inc
outsb
jg
mov
sub
push
in
in
pop
lock
in
sbb
inc
fcoms
flds
and
dec
fmull
nop
les
mov
jbe
js
addl
xorb
call
sub
cli
lock
pop
out
xor
push
fsubrs
push
sbb
loopne
leave
fisubs
pop
pop
les
pop
pop
dec
jns
jg
mov
ret
adcl
jnp
cmp
out
ss
out
add
and
mov
mov
outsb
mov
insb
scas
push
imul
pusha
xchg
sbb
or
dec
fwait
add
mov
inc
vpcomw
idivl
mov
cmp
inc
je
je,pt
cmp
cmp
ds
aaa
inc
inc
sub
loope
fisttps
inc
in
xchg
fisubl
push
push
xchg
iret
dec
jb
loope
fidivs
ret
movl
outsl
and
cli
jo
mov
cmp
inc
pop
push
in
jp
std
daa
in
jb
cmpsl
pop
and
fidivl
les
mov
sub
sbb
ds
mov
xor
or
or
add
pop
data16
call
jae
or
cli
stc
cmp
andb
jge
lahf
movsl
sub
out
mul
movsb
imul
ja
js
loop
sub
xchg
sbb
lret
pop
sbb
dec
adc
adc
mov
int
dec
shrb
jne
inc
sub
pop
xchg
sub
movsb
add
mov
cltd
inc
cmpsl
pop
push
pushf
pop
dec
mov
movsl
mov
mov
xchg
mov
dec
mov
ja
mov
out
dec
sbb
add
adc
daa
call
out
in
jecxz
sbb
mov
sub
lahf
mov
mov
fcmovnbe
int3
fwait
loop
lods
inc
push
inc
or
add
inc
jo
cmp
dec
sarl
mov
jo
shlb
sbb
es
and
push
lret
and
lds
out
push
stos
or
es
movsl
sbb
xor
adc
jp
nop
hlt
pushl
js
stos
push
mov
cwtl
pop
es
gs
push
out
mov
es
sub
insb
inc
and
imul
shll
mov
rcrl
adc
adc
xchg
sti
dec
mov
jp
xchg
in
xchg
xor
lahf
cmpsb
cmp
stos
sub
lret
jo
scas
mov
dec
and
push
out
int
and
pushf
jbe
mov
inc
xlat
xchg
test
out
popa
sbb
xor
das
inc
dec
sub
and
je
ret
and
adc
es
lahf
adcb
xchg
in
pop
fcoms
mov
aam
popa
or
push
stos
inc
jo
outsb
fisttpll
mov
sti
adc
clc
jns
mov
jp
out
mov
ljmp
dec
and
xor
test
sbb
xchg
pop
ret
es
pusha
loop
or
sbb
add
lret
test
sbb
js
shrl
push
cmp
pop
shlb
mov
cwtl
pop
es
idiv
push
icebp
cld
mov
mov
outsl
outsb
cwtl
sbb
jge
lahf
and
in
xchg
jne
inc
inc
vmovsd
shr
pop
push
lret
jecxz
gs
mov
movsl
jo
rcr
insb
adc
ss
mov
xchg
fisubrl
lods
stos
lcall
stc
mov
popf
mov
xchg
mov
ret
out
sub
jg
jg
loope
adc
call
jbe
add
jmp
jmp
add
and
loope
xor
hlt
jb
dec
add
ret
enter
mov
xor
jecxz
pop
push
push
push
push
sti
jl
sub
jecxz
and
in
and
xchg
and
enter
sti
rclb
xor
mov
sbb
fnop
mov
cli
stc
hlt
ja
scas
cmc
lods
adc
push
jno
cltd
gs
decl
push
in
popf
pop
pop
pop
addr16
js
jne
cwtl
ficoms
pop
movsb
ljmp
out
cmc
dec
inc
cmp
cmp
cwtl
pop
xor
aad
fsubs
leave
or
push
push
loop
popa
stos
lds
fs
insb
lods
adc
xchg
les
mov
mov
push
mov
test
mov
pop
adc
push
inc
push
into
jae
cmp
sti
scas
sbb
push
out
fs
lahf
in
jo
adc
cmpsb
stos
add
cli
stc
scas
dec
mov
inc
add
fcompl
add
inc
jo
dec
nop
mov
sub
push
mov
sub
jl
sub
aam
stos
aad
popa
jecxz
xor
mov
cs
jl
cmp
dec
xchg
bound
xchg
dec
xor
setge
ds
add
mov
sbb
or
pop
sbb
mov
jo
stos
push
add
sbb
push
add
pop
pop
pop
xor
mov
pshufw
pop
sub
sbb
jl
xchg
cmp
jnp
xor
les
in
adc
mov
test
insb
dec
xlat
imul
scas
xchg
adc
fisubrl
outsl
loopne
jb
daa
jno
pop
dec
xchg
mov
cmpb
inc
xchg
clc
mov
into
cmp
mov
jne
std
mov
roll
mov
mov
xchg
je
cwtl
fcmove
pop
fstenv
inc
sbb
fdivrs
push
dec
lds
xor
add
ja
in
lds
jmp
xor
fadds
xor
je
xor
cld
mov
jbe
mov
or
sub
pop
xchg
push
jne
sbb
and
xchg
test
mov
ret
pop
outsl
mov
push
or
cli
js
lcall
push
sahf
pop
jno
push
pop
aad
pop
outsb
nop
imul
xchg
dec
loope
jne
jae
test
inc
addr16
or
push
std
lods
aaa
lcall
mov
cmpsb
clc
aaa
std
cmp
enter
fcom
aad
shl
sub
sbb
jbe
sahf
xchg
fucomip
mov
lret
mov
and
adc
fmulp
pop
hlt
push
xlat
cmp
sbb
xor
data16
inc
jl
icebp
push
addr16
icebp
lahf
mov
xchg
in
mov
movsb
add
push
stc
clc
lods
dec
fdivrl
pop
jge
leave
jne
xchg
std
mov
mov
jecxz
jne
mov
jne
pop
sub
lods
out
sbb
sub
xchg
aad
mov
adc
test
out
mov
mov
lods
imul
je
jmp
ret
mov
test
sti
push
shl
pop
mov
cltd
xor
pusha
xor
js
jbe
je
cmp
mov
jge
and
test
pop
scas
cmp
sbb
mov
aaa
pop
inc
or
mov
push
cmpsl
lods
mov
mov
scas
leave
in
lea
sahf
lcall
mov
clc
ret
push
adc
push
jp
test
nop
nop
in
jno
js
js
jns
sbb
addl
xchg
out
fdivrl
neg
aam
add
pop
sbb
mov
xchg
mov
rcr
fcmovnu
leave
outsl
lret
rolb
out
mov
repz
test
std
jbe
imul
fsubrl
push
lds
sbb
dec
push
and
pop
add
cmp
or
add
adc
xor
cli
clc
clc
notl
repz
add
repz
sti
sti
imul
imul
push
in
mov
fwait
pop
jl
roll
jle
pop
dec
dec
hlt
dec
jle
inc
inc
push
std
cmp
ja
bnd
xor
inc
clc
insb
ds
test
sti
fmul
xor
push
jne
xor
into
insl
or
mov
les
mov
add
rdtsc
lea
imul
jbe
out
add
jl
and
nop
ljmp
xor
lret
cmp
cmpsb
cmpb
lods
or
mov
xlat
push
hlt
add
lahf
fld
mov
rolb
mov
pop
aas
sub
lock
mov
cwtl
movsl
loopw
jg
and
shll
sub
test
mov
loopne
pop
fcoms
sar
loop
fdivl
mov
insb
les
lods
idivl
cmc
or
aas
shll
adc
lock
movsl
jle
test
cs
xor
outsb
aad
xchg
ficoms
and
nop
pop
xchg
lods
jnp
imul
pop
push
jmp
in
repnz
mov
add
arpl
sar
daa
push
hlt
xor
es
enter
iret
ss
mov
and
pop
mov
cmp
movl
mov
inc
inc
dec
mov
je
ds
push
pushf
je
mov
fidivrl
mov
test
aas
pop
xchg
fcomp
cs
inc
lods
sbb
ret
sbb
mov
pop
sbb
dec
add
ljmp
prefetchw
mov
lea
and
inc
scas
insl
jo
inc
xor
xor
dec
inc
xchg
fadds
aad
scas
push
dec
mov
inc
insb
cmpsb
jb
xor
mov
mov
jp
cmpsl
jne
pop
xchg
add
shrl
dec
pushf
sahf
das
popf
icebp
and
and
insl
and
xor
testl
mov
rclb
jmp
mov
dec
dec
add
clc
idiv
jnp
or
xor
data16
add
xchg
push
pop
xchg
pop
call
lcall
popf
sbb
push
inc
fwait
testb
daa
cmpsb
xchg
xchg
adc
xor
mov
push
test
sbb
adc
stos
and
aad
xor
in
add
adc
movsl
ficoms
fcom
dec
mov
add
add
or
std
mov
push
movsl
imul
lock
inc
rcrl
test
loope
repnz
in
sub
push
hlt
fists
adc
sbb
ljmp
add
push
inc
mov
ja
cwtl
fbstp
test
mov
ljmp
mov
jno
and
mov
aas
xchg
mov
jle
jbe
jne
pushf
aas
dec
ja
jge
jnp
dec
imul
in
fs
sti
lock
in
adc
inc
fidivs
push
xor
repnz
mov
std
rcl
iret
into
inc
popf
pop
push
mov
inc
into
xor
pushf
lret
and
mov
ret
cwtl
test
inc
xor
cmp
int3
jns
add
jle
jl
icebp
sbb
xchg
and
lahf
push
xchg
loop
test
pusha
out
lret
rorl
lret
pushf
mov
and
sbb
outsb
out
mov
push
inc
std
and
push
pop
ljmp
loopne
push
cmp
push
pop
in
stos
xchg
test
adc
out
out
in
aas
mov
jp
aas
loop
testb
scas
sub
jle
mov
xchg
xchg
jg
dec
cmpsb
cmp
pop
push
movsb
mov
rol
sbb
sbb
fstl
and
pusha
orb
rorl
jbe
lock
call
jns
sbb
mov
outsl
test
xor
jecxz
xchg
and
inc
movsb
sbb
jecxz
cmp
div
push
sub
stos
dec
mov
or
adc
or
mov
cli
repnz
jnp
hlt
jmp
scas
jge
jle
add
sbb
push
push
mov
idivl
cmc
jecxz
or
scas
cld
push
adc
repz
or
lahf
popf
mov
pop
inc
push
mov
xor
inc
ja
mov
mov
mov
cmpsb
in
imul
or
sub
daa
int3
mov
aaa
push
cwtl
inc
mov
sbb
pop
jne
add
and
or
pop
jb
add
hlt
jecxz
out
mov
mov
pop
sub
rcrl
cld
roll
xor
scas
mov
mov
repz
bound
xchg
pop
fcompl
mov
inc
movsl
js
adc
mov
aas
subl
aaa
ss
aad
inc
mov
push
cmp
sbb
test
into
dec
cltd
cwtl
mov
loope
scas
jbe
cmp
pop
xchg
push
pushf
lods
or
push
xor
jns
add
sti
sub
in
and
lock
stos
or
jmp
jge
sbb
aad
pop
sbb
push
rcr
inc
rcll
rolb
gs
ss
push
cmovb
mov
mov
std
ret
sub
mov
jg
mov
das
cs
adc
and
and
in
fcmovbe
stc
scas
xchg
sub
pushl
ret
or
mov
repz
enter
test
mov
mov
insl
hlt
fwait
aaa
and
arpl
lahf
push
lret
pop
dec
sub
push
inc
lret
cmp
stos
clc
dec
push
lea
mov
clc
and
std
cmp
jo
bound
test
pop
cltd
inc
nop
jnp
jle
mov
out
fwait
add
or
xchg
int
pop
xchg
cmp
ja
jmp
aas
jg
shlb
jmp
imul
loope
out
ds
or
mov
rcll
mov
sub
cmp
mov
sbb
ljmp
mov
ret
and
jmp
and
out
or
cmovle
jns
push
in
leave
and
inc
cli
nop
rorb
cmp
inc
testl
std
jbe
clc
div
aad
ret
jg
pusha
cld
test
push
push
out
dec
jno
outsb
into
lock
adc
sub
adcl
les
inc
inc
out
lds
mov
in
adc
arpl
enter
fildll
out
lahf
in
sub
lret
scas
lods
lods
gs
repz
mov
mov
adc
pushf
and
or
inc
push
xchg
adc
or
lret
mov
subb
inc
push
insb
sub
sub
loope
lcall
jae
shll
inc
daa
sub
bound
outsl
outsb
loope
sub
cmp
sarl
jmp
fs
ret
fdivs
stos
or
out
cmp
sahf
xor
fadds
or
dec
cli
adc
rcll
jbe
fs
xor
outsb
jb
test
mov
lcall
push
mov
std
xor
outsb
or
pop
and
push
ljmp
sbb
dec
movl
cs
cmp
clc
cli
or
adc
cli
lods
loopne
mov
push
mov
jecxz
push
mov
scas
adc
ja
aas
cltd
outsb
sbb
imul
xchg
dec
inc
xchg
xchg
adcl
xor
hlt
mov
insl
out
leave
cmpsb
jge
test
fidivs
scas
in
pop
xlat
std
mov
inc
fbld
lahf
cmpsb
dec
jno
xchg
scas
jns
int
int
xor
cmp
mov
jl
adcl
xor
pop
sahf
pop
xchg
cli
xlat
cs
inc
or
adc
fisubrs
sbb
add
add
add
hlt
jnp
into
push
mov
lret
hlt
pop
pop
mov
cld
bound
sti
mov
jb
dec
sbb
mov
xor
pop
daa
dec
shlb
cmp
pusha
das
xor
mov
xchg
fmuls
inc
sub
mov
add
or
test
imul
cmc
sarb
add
cmp
lcall
xchg
xchg
jo
outsb
test
imul
mov
mov
sub
bswap
inc
hlt
mov
cmp
pop
xor
je
into
mov
insb
dec
or
pop
lret
push
dec
adc
psrld
mov
into
push
jp
dec
and
jg
rorb
hlt
mov
test
dec
outsb
outsb
insl
inc
cmpb
mov
les
daa
daa
es
loopne
and
sub
lods
pop
popf
push
cmp
negl
fstp
sbb
loop
xchg
xchg
es
adc
je
sbb
cld
jne
div
hlt
ljmp
or
imul
mov
jmp
das
sub
jae
fsubp
xchg
adc
enter
pop
gs
outsl
dec
dec
inc
lret
add
push
sub
mov
push
aaa
cmp
mov
xlat
cmc
mov
xor
mov
dec
in
jns
scas
insb
mov
pusha
lods
ret
rcrb
mov
sbb
xchg
xchg
addb
xchg
test
clc
push
dec
dec
mov
je
jb
ss
fisubl
loopne
pop
call
je
and
aad
das
scas
lods
in
add
pusha
fcoml
xchg
shl
xchg
pop
jae
fnstsw
push
test
dec
mov
xlat
rdmsr
int3
jns
xor
mov
repz
sarb
std
inc
sub
sub
in
test
xchg
xchg
pop
fcom
push
mov
push
or
leave
movl
push
cltd
pi2fw
mov
mov
imul
daa
fdivrl
sub
clc
fsubl
dec
outsl
dec
scas
add
lcall
fimuls
and
pusha
enter
or
pop
sbb
imul
in
stos
inc
aad
dec
cmp
mov
stos
je
sub
jb
mov
xor
outsl
cmpsb
bound
scas
dec
lahf
lahf
push
xchg
push
ss
push
xchg
jae
jle
daa
popf
fisttpll
mov
lods
xchg
bound
xlat
xor
inc
inc
movsl
xor
adcb
and
pop
xchg
xchg
insb
loope
loop
lock
ret
lcall
xor
mov
out
ret
xchg
sti
and
in
sub
sbb
outsb
add
pushf
and
xchg
fwait
sbb
sarb
mov
cli
mov
movsb
std
loope
test
fsubrs
stos
insl
enter
push
lcall
xor
sti
push
inc
mov
adc
outsl
int3
add
ret
dec
std
dec
xchg
mov
jge
cld
lds
fs
popf
mov
pop
jno
insb
jecxz
and
jb
out
cwtl
pusha
jmp
mov
js
movntps
fdivl
pop
iret
add
cmp
inc
stos
stc
push
push
sbb
jmp
out
push
rcl
movl
mov
movsb
pop
inc
sbb
lock
cld
mov
adc
mov
mov
jae
movsb
test
xchg
mov
mull
or
test
sarl
jne
scas
jns
or
sub
orb
lock
notb
push
or
and
data16
sbb
notl
test
sub
out
ja
stc
and
cmp
mov
pop
jge
stos
js,pn
jmp
inc
inc
mov
inc
call
dec
and
xor
cmpsb
jb
ds
add
adc
ret
jmp
inc
mov
inc
into
out
std
or
push
add
mov
sub
inc
jno
push
and
aad
push
push
enter
sahf
je
leave
ljmp
cli
push
ljmp
repnz
ss
xor
ja
loopne
out
sub
lret
lods
xchg
cs
lcall
mov
mov
fwait
mov
jmp
mov
xchg
lea
sbb
dec
push
or
xchg
and
test
jmp
bnd
jnp
lcall
int
jns
dec
sbb
inc
pop
fisttpll
std
cltd
xchg
outsl
or
addr16
or
call
pop
fmul
pop
push
inc
push
push
push
out
sub
xor
add
xor
scas
pusha
push
dec
enter
cmp
jmp
loopne
add
sbb
mov
xlat
scas
mov
cltd
push
xchg
mov
mov
or
stos
add
gs
mov
inc
cmc
xchg
xchg
cmp
adc
scas
jo
push
sbb
insl
insb
imul
mov
inc
or
pop
cmp
sbb
cmp
ss
ja
repnz
add
aas
xor
roll
cmc
out
xor
test
mov
test
dec
xchg
nop
lret
cmp
scas
pusha
push
xchg
lret
xor
mov
cmpsl
out
mov
out
shrl
cmc
shr
ret
fs
dec
xchg
jnp
fmuls
popa
or
push
jno
aam
cs
push
xchg
loope
mov
fdivp
shlb
add
decb
int3
inc
push
add
jns
popf
outsl
out
insb
sub
pop
push
push
inc
std
and
cmp
out
and
stos
fldt
cwtl
bound
dec
xchg
sbb
push
or
inc
sbb
pop
xchg
or
pop
test
dec
mov
mov
jg
jl
jmp
xchg
dec
xorl
jno,pn
imul
andb
loope
pop
ficomps
cs
jecxz
icebp
insb
rolb
dec
pop
into
sbb
mov
or
decb
cmp
roll
inc
mov
stc
imul
adc
add
mov
sti
mov
int3
lret
mov
jno
sahf
ret
imul
mov
mov
scas
mov
mov
jns
xor
push
and
or
and
pop
push
jge
movsb
out
or
mov
xchg
pop
sahf
loop
adc
sahf
movb
or
pop
data16
repz
dec
jp
sti
insl
mov
cmp
mov
fnstenv
aad
jne
pusha
inc
inc
inc
mov
push
push
dec
sub
repnz
rcrb
add
inc
dec
xlat
nop
lods
xchg
js
pop
jae
fsubs
or
mov
int3
xchg
sub
and
sub
aam
jne
adc
fisubs
out
divb
push
fnsave
testb
add
ret
jnp
cld
dec
into
out
push
pop
inc
imulb
xor
mov
push
test
test
xchg
xor
lahf
push
mov
mov
mov
movsl
mov
lods
subl
xchg
xchg
xchg
jae
int
adc
cmpsb
mov
mov
repz
jge
add
jmp
das
mov
icebp
jo
out
movsl
repz
jbe
xlat
jl
lods
push
popa
not
inc
lcall
call
iret
sarl
lret
mov
icebp
and
add
push
sub
js
pop
out
xchg
lods
xor
xor
stos
push
mov
adc
mov
lret
or
or
adc
mov
negl
jp
imul
gs
mov
adc
daa
addr16
icebp
mov
xchg
fxch
imul
xchg
jle
jbe
je
sub
ss
addr16
or
push
cmp
lcall
cmp
cli
cmp
aas
mov
jnp
cmpsb
push
icebp
and
pusha
movsl
xor
test
cmp
push
lret
push
mov
or
ret
push
sub
xchg
cmp
sbb
sbb
cltd
pop
subb
addr16
cwtl
out
imul
cwtl
or
lcall
xchg
xlat
js
dec
and
xchg
mov
mov
mov
enter
cmpsb
cli
inc
mov
push
add
out
mov
aad
mov
int
out
pop
in
movsl
dec
adc
pop
push
roll
and
xchg
dec
push
popf
push
inc
inc
inc
pushf
inc
outsl
or
or
mov
sbb
mov
pop
add
iret
xchg
rorl
push
sub
insl
pop
lds
lahf
loope
inc
frstor
pop
pop
pop
ret
test
adc
cli
call
mulb
dec
int
movsb
insb
cmc
cmp
jne
fmull
pop
dec
mov
lcall
dec
sbb
int
rorb
pusha
mov
xchg
adc
pushf
fwait
mov
mov
adcl
jge
jl
das
lock
jle
jl
movsb
or
and
sti
and
xchg
mov
shl
pushf
mov
dec
sub
or
mov
in
mov
lret
mov
fcmove
mov
fs
loop
xchg
bound
insb
pop
pop
lret
jns
push
and
test
sub
sub
dec
inc
inc
cltd
mov
xchg
sub
cmp
push
adc
cmc
mov
mov
sub
rcrl
mov
std
cmp
push
mov
data16
inc
out
mov
test
stos
fsubrs
aad
das
cmp
pop
push
stc
lret
call
pop
pop
ret
mul
cmp
adc
jb
inc
daa
mov
or
cmp
fcom
or
enter
cmc
xor
stos
lods
and
sub
gs
lods
sub
scas
push
shr
mov
pop
test
xor
pushf
add
mov
xchg
jmp
or
pop
inc
pop
sti
ds
cmp
movsb
push
cmpsl
and
out
mov
jb
add
in
jmp
mov
fdiv
xchg
repz
mulb
xchg
cwtl
dec
xorl
aad
jo
inc
ja
daa
add
dec
aad
pop
cmc
mov
inc
shll
lock
aad
fldt
fsubrs
push
call
add
insb
and
sbb
mov
mov
adc
and
sbb
out
cltd
sbb
repz
add
jle
cmp
mov
xchg
adc
pop
test
jnp
jne
insb
das
ret
or
inc
int3
and
sti
ja
clc
cmpb
xchg
mov
scas
fldcw
ja
out
fists
stos
scas
lods
lods
ret
dec
out
push
xchg
mov
sub
or
jp
dec
push
idivb
mov
aas
add
xor
out
movsl
out
jmp
repnz
lods
out
and
fisubl
fcoml
loop
lds
lret
test
and
xchg
shlb
sarl
aas
pop
xor
rorl
mov
fwait
pop
lret
movsl
inc
xor
mov
push
in
aam
dec
pop
loopne
inc
dec
fsubrl
dec
push
les
xor
ss
mov
stos
mov
lea
mov
arpl
inc
sbb
sub
adcb
xor
testl
enter
inc
sti
dec
add
shrb
stos
je
aaa
cmp
roll
ds
xchg
jne
pop
and
in
mov
scas
test
dec
xchg
sbb
xchg
push
mov
fisubs
mov
push
scas
adc
ds
adc
mov
imull
dec
cmp
and
in
out
push
lds
add
sbb
xchg
pop
jmp
enter
pop
sub
pushf
push
jae
imul
jae
mov
cwtl
push
insl
mov
push
ret
das
outsl
aas
adc
cltd
mov
pop
mov
mov
inc
rolb
push
clc
cwtl
out
ja
testb
jae
cmpsb
push
aas
scas
dec
shl
mov
addr16
out
pop
pmulhw
mov
ja
sub
adc
and
pusha
sbb
ja
push
pop
arpl
add
push
dec
in
out
insl
inc
loope
fcomp
xlat
sub
mov
push
aaa
cld
stos
and
and
scas
cmp
rcrl
xchg
xchg
xchg
pop
pop
shrb
bound
pop
inc
mov
mov
push
push
jp,pn
js
jnp
inc
and
xchg
pop
and
scas
xor
sbb
out
mov
lods
repnz
cmp
lahf
in
test
dec
jns
aas
ds
pushf
push
lods
test
push
xchg
hlt
xchg
pop
loop
jb
inc
jns
mov
jne
xchg
outsb
push
push
movsl
jl
lea
pop
pop
lods
jecxz
stos
fsubs
mov
inc
lods
pop
daa
push
or
sbb
leave
das
mov
int
test
and
xchg
add
or
sub
jp
jno
add
hlt
arpl
mov
mov
dec
mov
outsb
popa
iret
lods
jmp
jno
push
frstor
js
adc
mov
lret
hlt
inc
or
decl
je
ss
xor
xor
inc
mov
pop
stos
cmp
cmp
iret
jbe
mov
pop
mov
push
popa
cwtl
jb
inc
and
dec
cwtl
jns
out
inc
fwait
bound
outsb
test
pusha
idivb
fdivs
jp
xor
xchg
mov
loopne
add
stos
sbb
inc
insl
sbb
pushf
ret
jecxz
or
out
dec
fsubl
mov
jp
xchg
cltd
cltd
jo
push
push
mov
pminsw
pop
shrb
incb
in
xor
xor
or
das
fucom
xchg
push
cltd
cmp
pop
dec
and
push
xchg
fcomps
int3
dec
adc
inc
add
arpl
lock
js
div
insl
das
pop
gs
xchg
outsl
ljmp
jb
add
xchg
in
xchg
add
xchg
popa
fwait
and
adc
inc
inc
inc
jmp
lea
scas
testb
cmp
mov
fincstp
jae
sub
mov
add
dec
sub
mov
rclb
and
popa
mov
add
mov
repnz
lea
xchg
jbe
push
ljmp
test
and
mov
fs
repnz
jp
add
dec
ficoms
jg
stc
xor
sbb
or
jg
arpl
leave
daa
imull
jg
lock
sub
sub
mov
rcrb
loopne
inc
in
pop
stos
jl
enter
adc
es
leave
push
xchg
pop
addl
cs
add
jne
scas
jbe
scas
xor
cmc
hlt
ljmp
jo
sbb
addr16
sub
in
das
mov
sub
and
adc
lret
pop
push
mov
iret
or
les
inc
aas
jmp
cmp
aam
loope
mov
dec
loop
pop
mov
rcrl
pop
mov
xchg
test
push
cmp
dec
sbb
stos
test
aaa
int
pop
inc
xor
push
repz
xor
push
adc
xchg
insl
cwtl
loop
or
jg
js
loope
roll
ret
cmc
and
test
dec
sbb
popl
jns
aas
jbe
xchg
jno
push
call
loope
sub
and
jmp
and
das
scas
enter
insl
cmc
cmp
push
adc
and
fwait
rcrb
test
inc
add
adc
js
lahf
xchg
xchg
das
push
cmpsl
sub
xchg
mov
xchg
sub
lcall
hlt
orps
adc
cmp
stc
jecxz
repz
mov
fnstenv
add
dec
pop
in
je
loop
inc
test
mov
and
ret
push
sub
mov
shll
and
repz
mov
add
mov
lods
mov
add
jge
pop
xor
je
mov
add
aam
jns
icebp
insl
mov
lea
leave
xchg
loop
lods
movsl
movsl
pusha
xchg
fistl
mov
ja
fistps
enter
and
ret
xchg
inc
daa
push
rcll
sub
aas
out
fs
xchg
mov
in
imul
and
pop
dec
dec
jle
and
aad
fldt
icebp
bound
popf
test
int
or
divb
into
add
mov
scas
daa
add
clc
cltd
jb
pop
sub
mov
cmpsb
std
in
adc
xchg
in
lods
lea
cwtl
sub
and
fistl
cmp
jg
inc
inc
xor
int3
dec
incl
push
or
or
popa
in
or
pop
aaa
fadds
imul
fistpl
mov
subb
sti
inc
int3
lret
xchg
jno
xchg
mov
push
loopne
mov
xchg
xor
test
ud1
jecxz
inc
cmpsb
jo
mov
cmp
cmp
sbb
jo
lea
lea
icebp
js
cmc
scas
in
ja
xlat
movsl
sbbb
pop
jo
cltd
xchg
xchg
push
jecxz
mov
mov
int
int3
out
xchg
scas
mov
mov
cs
daa
mov
push
pushf
stc
sub
or
ficoms
out
inc
sub
dec
cli
xchg
add
or
stc
cli
stc
clc
jle
adc
adc
mov
mov
mov
std
dec
and
paddb
outsb
jge
push
bound
sbb
or
mov
adc
jge
add
std
inc
icebp
push
add
arpl
dec
aaa
scas
sti
cmp
add
lock
xor
mov
scas
xchg
dec
mov
xchg
sbb
dec
xchg
lahf
lea
and
xchg
js
mov
mov
stos
jns
jle
mov
jl
adc
xor
lahf
roll
jl
ficomps
push
cmpsl
aam
mov
orb
js
dec
test
ss
iret
and
out
inc
jge
cmp
sbb
fcoms
aad
int3
and
nop
sbb
and
pop
lods
rcll
jne
rcrl
fmuls
xchg
test
push
add
xchg
int3
push
mov
gs
jbe
lods
lods
stos
mov
insl
or
mov
mov
adc
and
std
pop
pop
sub
jne
xchg
dec
loope
push
bound
adc
pop
pushf
lret
movsb
jnp
adc
in
insl
xlat
mov
mov
mov
dec
dec
xor
jg
pop
lds
es
sbb
ss
xchg
popf
adc
mov
mov
sarb
push
mov
dec
jae
xchg
and
or
test
dec
dec
sub
ljmp
sbb
pop
fstl
test
add
fcmovb
imul
mov
jmp
out
negb
push
adc
cld
push
rcr
les
mov
jge
pop
cmp
push
sbb
add
js
fdivrs
es
loopne
inc
mov
cwtl
pop
lds
icebp
icebp
cmp
aas
xor
adc
mov
test
lcall
jae
stos
adc
hlt
repz
mov
cmp
lock
jb
inc
mov
push
in
inc
imul
sbb
xchg
loope
seto
aaa
pop
pop
stc
dec
mov
movsb
inc
test
xchg
xchg
pop
mov
push
push
test
jno
dec
xchg
aam
cmpsl
xchg
stos
cmp
loopne
sub
leave
pop
outsl
xchg
inc
xchg
cli
js
pop
xchg
sbb
push
mov
mov
in
xchg
jns
sub
xchg
nop
popl
in
xlat
inc
jns
ret
in
cwtl
out
jns
rol
enter
jns
insb
or
push
outsl
xor
lods
mov
push
int
pusha
loop
leave
fs
cld
sti
mov
jns,pn
jnp
ss
das
and
mov
ret
leave
mov
pusha
adc
mov
add
and
neg
push
xchg
adc
mul
sbb
iret
or
xchg
cmp
test
sub
xchg
adc
lods
gs
pop
lock
adc
pusha
cld
pop
jno
and
out
outsl
repnz
insl
ja
aad
lods
mov
mov
jge
push
jne
sbb
sahf
push
clc
aas
icebp
ss
add
into
push
mov
sti
arpl
jns
inc
xor
inc
inc
inc
psubw
cs
fstp
add
xchg
das
jb
ret
rclb
or
xor
mov
dec
lahf
sbb
inc
mov
lods
and
adc
jmp
dec
add
dec
scas
ret
adc
sbb
outsb
xor
lret
mov
stos
out
lods
push
insl
int3
jmp
add
out
sub
mov
add
lret
repnz
pushf
rcll
outsl
jo
outsl
test
sbb
jle
add
add
dec
loop
rorb
inc
push
lods
pop
and
and
int3
and
ret
add
push
adc
cmp
insb
push
ret
scas
hlt
mov
mov
inc
out
inc
push
inc
xor
lahf
mov
pop
xchg
sbb
pop
cli
inc
ret
imul
mov
xchg
add
push
mov
mov
dec
dec
cmp
or
mov
icebp
stc
mov
mov
mov
jmp
sbb
inc
test
mov
or
les
test
iret
inc
inc
inc
push
int3
dec
add
clc
in
jmp
cmp
adc
loope
or
ds
xlat
js
inc
in
je
sbb
or
mov
ja
dec
cltd
enter
jg
mov
xadd
mov
out
ret
dec
sub
cltd
or
sub
dec
outsl
adc
jo
lock
repnz
imul
cmp
pop
loopne
rorl
cmp
jecxz
scas
scas
mov
cwtl
xchg
int3
jg
mov
adcl
es
mov
scas
mov
pop
pop
jp
inc
inc
and
xor
pop
sbb
cmp
and
cmp
inc
push
mov
pusha
mov
hlt
jo
mov
test
popa
scas
dec
mov
pop
scas
sub
push
push
inc
adc
push
mov
fmuls
and
push
adc
test
sahf
stos
idivl
pop
ss
jns
ja
int
push
cmp
stos
push
jne
jnp
inc
xchg
fs
enter
mov
fiadds
fistl
mov
inc
arpl
mov
out
mov
and
sbb
mov
jne
lock
mov
or
iret
or
and
mov
sbb
sbb
xchg
push
in
rcrb
xchg
push
inc
pop
xor
mov
test
iret
stc
push
adc
adc
stos
sbb
repz
add
jl
jmp
test
and
fsubrs
loop
decl
push
push
out
pop
imul
inc
push
push
push
into
loop
sbb
movsl
out
lods
mov
fwait
push
cmc
push
stos
push
dec
lods
lahf
jno
add
mov
lods
addr16
or
dec
mov
xchg
mul
inc
fwait
xor
bound
lods
je
cmp
pusha
jl
jns
mov
add
je
cmpl
out
mov
popf
jnp
mov
fcmovu
xlat
scas
scas
pop
mov
xchg
pop
repz
push
leave
addr16
jge
jno
fsubrl
mov
shll
jnp
mov
sbb
or
pand
sbb
in
jmp
int3
sbb
sub
imul
arpl
or
inc
push
sti
cmc
repz
sub
inc
sahf
xchg
add
mov
lods
fsubrs
jns
pop
add
xchg
fldl
jl
mov
or
jle
mul
cmp
fwait
inc
inc
push
sbb
repnz
in
out
push
fnstenv
pop
mov
pop
pushf
fidivs
push
cwtl
cmpsb
xor
xchg
sbb
into
inc
mov
push
xchg
jno
dec
mov
rclb
loope
and
mov
js
jbe
mov
ficoms
pop
xchg
outsl
mov
xchg
add
in
mov
lds
ret
sbb
hlt
add
sbb
sbb
call
arpl
insb
jb
shrl
insb
lds
add
call
xlat
mov
outsl
loopne
or
xchg
pop
jl
dec
xor
rol
aaa
mov
idivb
loope
xstore-rng
push
movsb
mov
or
es
lcall
cwtl
push
mov
nop
push
cmpsb
ficoml
stos
fsts
mov
imul
sbb
cmp
dec
enter
or
shrl
mov
cli
add
ret
add
push
out
jecxz
add
mov
cmp
push
xchg
into
int
test
cmp
stc
dec
test
pop
mov
popl
out
xchg
mov
cmp
mov
jge
je
xchg
jnp
and
lock
sbb
push
stos
adc
inc
lahf
fstp
push
push
mov
sbb
scas
inc
arpl
add
arpl
xchg
out
out
test
out
mov
iret
into
int
xlat
xor
mov
inc
mov
jp
cmpsl
lret
sahf
add
daa
adc
add
sub
jecxz
pop
adc
adc
xor
sbb
push
lods
or
scas
loope
pop
outsb
mov
les
repz
arpl
cld
sti
adc
lret
arpl
mov
imul
ja
dec
je
push
dec
sbb
dec
dec
inc
lds
ss
inc
push
dec
dec
cmpsb
jno
addr16
sbb
cmp
cli
stc
clc
fistps
fcoml
dec
test
cmpsl
shrl
pop
pop
push
in
jp
test
sahf
popf
pushf
add
mov
sub
subl
mov
xor
sbb
lahf
adc
std
sub
push
sbb
in
xor
neg
adc
es
popf
or
pop
xchg
sub
jbe
rorb
lret
mov
jg
arpl
sub
mov
pop
shr
xor
cmp
xor
jb
dec
and
jmp
sub
aas
mov
mov
loope
mov
cs
inc
mov
lcall
scas
lods
jo
and
jl
negl
sub
and
sub
fcomps
cli
lock
nop
cmc
jmp
jp
jns
ja
lcall
sub
test
add
int
repnz
lock
addr16
push
mov
push
or
lds
jecxz
sub
ret
mov
cmp
and
xor
fwait
xchg
xchg
xchg
mov
.byte
sub
add
add
add
jb
gs
xor
cs
insb
add
inc
or
dec
inc
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
pop
push
push
popa
jb
sub
imul
push
je
popa
insb
je
sub
arpl
je
arpl
jne
jo
jb
inc
ja
bound
insb
insl
popa
jae
gs
arpl
and
ja,pn
bound
insb
insl
popa
jae
gs
arpl
add
add
add
in
mull
inc
add
add
add
jmp
jmp
add
jmp
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
nop
xor
add
sub
add
add
nop
sub
add
xor
sub
nop
add
sub
clc
add
stc
nop
clc
sub
dec
nop
dec
xor
add
sub
add
add
nop
sub
add
xor
stos
loop
mov
jae
ficomps
ficomps
movsl
push
cmp
dec
pop
call
scas
pop
faddp
or
push
or
xchg
jge
inc
inc
jge
inc
mov
loop
jl
pop
out
dec
sub
pop
out
int
xor
cmp
pop
cmp
rcl
jl
pop
push
test
inc
cmp
imulb
mov
mov
jge
jle
sub
int3
pop
cmp
push
mov
pop
aam
push
or
sbb
inc
jge
dec
dec
call
jp
pop
rcrb
push
lods
dec
testb
mov
mov
call
subl
popf
pop
lods
cmp
xor
dec
jbe
je
xchg
popa
aas
std
call
dec
aaa
arpl
in
out
shr
add
jae
dec
push
lock
dec
jge
repnz
jno
jge
loop
push
scas
insl
aaa
shrl
out
aad
popf
pop
or
fpatan
lea
pop
std
std
les
jno
dec
call
in
aaa
das
pop
pop
pop
loopne
jae
outsl
mov
mov
dec
and
in
and
dec
call
pop
lea
pop
loopne
rep
dec
or
arpl
std
fs
push
das
in
clc
shlb
add
pop
pop
mov
jae
dec
sub
lea
cmc
pop
xor
inc
rorb
lahf
pop
outsl
pop
pop
insl
xor
mov
std
call
lea
das
jns
sub
pop
cmp
pop
cmp
mov
add
pop
mov
call
ljmp
pop
pop
fmuls
and
mov
sbb
std
cmp
jp
add
dec
popf
dec
push
cld
int3
add
popf
pop
cmp
fidivs
outsl
xor
cmp
jg
jg
ret
add
dec
dec
mov
outsb
outsl
insl
clc
or
lahf
pop
repnz
pop
cmp
dec
cmpsl
dec
movsl
jg
std
pop
lock
dec
dec
dec
mov
out
in
outsl
and
out
lahf
pop
out
and
punpckhbw
pop
rolb
dec
out
xor
lahf
dec
loopne
push
popf
pop
mov
xor
leave
sarb
bound
std
repz
hlt
sub
mov
adc
lret
cs
mov
lock
cli
shrb
dec
popf
cs
jbe
and
bound
das
and
ret
aas
std
xor
roll
out
cmc
out
daa
lods
lahf
pop
out
outsl
insl
dec
push
ja
dec
jge
repnz
inc
outsb
lods
imul
out
adc
xorb
aas
ds
scas
mov
std
jl
or
loop
test
pop
pop
fidivrs
inc
inc
sahf
mov
push
push
dec
dec
dec
int3
imul
inc
sti
dec
dec
outsl
out
iret
mov
mov
pop
pop
insl
in
or
push
mov
std
jle
dec
dec
inc
sahf
xchg
loope
test
mov
xchg
popa
push
rcl
lods
mov
fstl
xchg
gs
mov
idivl
push
xor
mov
fcmovu
stc
js
imul
out
fadds
fdivrs
inc
dec
test
and
aaa
cltd
in
pop
daa
int
adc
or
push
cs
repz
sub
sub
lods
sbb
aaa
icebp
ds
cltd
das
sub
lods
pusha
adc
and
pop
sarb
cmp
and
ficoml
dec
pop
jo
pop
or
aam
cmpl
pop
in
add
cli
xlat
sub
dec
dec
lods
imul
mov
dec
xchg
insb
out
jp
jl
pop
out
inc
and
pop
pop
insl
outsl
mov
and
dec
pop
aas
mov
jo
dec
xchg
pusha
ss
lea
sub
dec
outsl
dec
dec
std
mov
add
dec
push
adc
loop
and
lods
lahf
pop
push
inc
lods
rolb
into
ja
mov
nop
inc
pop
jg
push
outsl
pop
pop
inc
cmp
mov
icebp
dec
testb
pop
mov
loope
ss
out
pop
out
pop
push
lods
lahf
insl
testb
jne
dec
dec
cli
lock
cwtl
mov
bnd
das
and
pop
xchg
mov
popf
add
cmp
ret
mov
dec
dec
popf
ret
jl
pop
push
pop
pop
pop
xchg
or
dec
pop
mov
push
xchg
jge
clc
lods
push
push
push
nop
pusha
fwait
push
push
fadd
sub
outsb
rcl
jl
dec
aam
std
pushl
std
decl
xchg
xchg
call
pop
shlb
lods
lahf
pop
das
push
idivb
int3
xchg
mov
push
lea
das
xchg
push
cmpsb
mov
xchg
pop
xchg
xchg
lea
dec
std
jmp
or
xor
in
pop
pop
mov
icebp
imulb
dec
dec
dec
iret
lea
mov
xchg
cmpsb
mov
dec
sub
outsl
xor
cmp
jl
decl
mov
lret
inc
xchg
or
xchg
push
ja
cmp
dec
int
jg
jnp
xchg
call
dec
les
sbbl
add
outsb
into
xor
repnz
inc
into
push
dec
insb
pusha
add
int3
lret
pop
fidivrs
repz
lret
or
mov
loop
or
insl
popa
insl
outsl
pop
ret
mov
or
sub
insl
outsb
mov
loop
sbb
std
movsl
jecxz
and
call
pop
aam
bound
cmp
fstpt
int3
lret
xor
lret
mov
push
outsb
sbb
outsb
adc
or
sub
sub
dec
dec
pusha
push
cltd
arpl
imull
iret
ret
loope
add
mov
mov
jmp
cmpsb
jno
cmpsl
test
adc
dec
fsubrl
lcall
sbb
xchg
mov
mov
cmp
cltd
aaa
xor
rcll
popa
ds
stos
scas
and
je
push
push
add
sbb
js
data16
in
push
xchg
push
inc
ja
push
je
loope
in
movl
cltd
sahf
clc
inc
mov
div
push
mov
add
push
std
loope
js
sub
pop
int3
cmp
es
jns
push
jge
jle
sbb
lret
push
sbb
and
and
sbb
push
pop
mov
addb
rorl
xor
pop
test
pop
add
std
dec
cmpsl
stc
out
sub
mov
add
xor
xor
dec
adc
pop
popf
fcomip
pop
xchg
mov
nop
or
test
pop
fdiv
leave
std
lea
out
cld
outsl
test
pop
pop
out
rcrl
pop
add
fisttpll
dec
jno
jge
cmc
jg
jg
mov
fldenv
aad
pop
pop
pop
cmp
dec
fcmove
out
std
aad
std
decl
int
in
out
in
out
pop
pop
pop
negl
pop
pop
pushf
xor
dec
dec
dec
repz
jg
jg
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
mov
inc
insl
daa
or
arpl
icebp
std
ljmp
std
sbb
loope
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
std
std
std
std
decl
dec
out
in
out
in
out
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
dec
jge
jge
jge
jge
dec
dec
dec
outsl
insl
outsl
insl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
insl
outsl
insl
dec
dec
dec
dec
xchg
dec
push
dec
outsb
jg
inc
dec
dec
out
in
out
in
out
xchg
mov
cwtl
in
inc
xchg
jmp
mov
mov
jge
jge
jge
mov
nop
scas
dec
std
xchg
mov
pop
pop
pop
pop
pop
test
mov
pop
push
lods
pop
dec
inc
mov
in
out
in
sahf
dec
mov
inc
mov
cmpsb
jmp
lods
insl
dec
dec
dec
dec
mov
fcmovu
fmull
dec
dec
dec
scas
dec
outsl
insl
outsl
insl
xchg
mov
test
dec
dec
dec
push
scas
push
andl
dec
xchg
inc
inc
xchg
mov
mov
inc
mov
pop
pop
insl
outsl
insl
mov
fmull
dec
mov
dec
xchg
nop
xchg
mov
ret
mov
scas
lahf
inc
nop
mov
add
add
xchg
add
