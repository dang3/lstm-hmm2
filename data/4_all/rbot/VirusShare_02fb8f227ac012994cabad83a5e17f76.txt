in
pop
sbb
sbbl
stos
lock
shrl
or
fistpll
movsl
rol
add
xchg
push
out
leave
cmp
cli
scas
add
aad
fcmovu
and
icebp
add
push
cmpsl
pop
aaa
jecxz
aas
push
dec
out
in
in
sbb
out
icebp
repz
and
pop
mov
gs
or
btc
roll
push
sbb
pusha
add
inc
sbb
out
jbe
and
mov
and
sub
cwtl
xchg
sub
cli
add
test
cmp
sub
inc
jb
mov
adc
jl
dec
mov
push
test
sar
sarb
in
dec
push
iret
jae
jo
xor
testb
and
push
lret
stos
test
mov
xchg
ret
xchg
xchg
cmp
add
enter
fdivs
fsubrl
mov
sub
mov
ret
mov
hlt
sub
std
xchg
push
mov
in
jg
sub
rol
loopne
inc
sbb
in
dec
loopne
fisttpll
aam
out
aas
mov
dec
sub
das
insb
mov
sti
push
lock
out
add
int
or
or
add
notl
adc
popa
sbb
sbb
and
lods
push
dec
sub
das
xor
and
jle
cmp
cmp
add
push
jecxz
dec
dec
mov
push
mov
out
push
pop
pop
loope
dec
test
lds
cs
loope
fistl
pushf
jbe
stos
jnp
daa
bound
cmpsl
addl
mov
mov
cwtl
cwtl
add
push
inc
cld
cmpsl
cltd
iret
test
mov
clc
sub
fnstenv
mov
mov
hlt
fcmovne
leave
leave
xor
push
sub
not
aas
clc
rolb
add
and
icebp
and
cmp
out
int
or
ficoms
cmp
xor
pusha
jns
je
cld
lock
sbb
imulb
or
adc
pop
cmp
cmp
sbb
sbb
and
adc
sub
wrmsr
adc
das
xor
mov
mov
cmp
push
inc
dec
xchg
sahf
stc
jb
adc
js,pt
lods
sbb
xchg
enter
pop
pop
movb
addr16
icebp
push
xchg
insb
scas
jno
jb
mov
popf
ja
cld
out
mov
mov
jno
test
mov
mov
xchg
xchg
xchg
xchg
arpl
lcall
xchg
leave
mov
stos
lods
lods
sbb
inc
scas
scas
mov
cli
jae
fdivl
mov
out
sub
pop
and
std
test
lret
int
aad
shr
xlat
or
xor
out
xor
pop
mov
or
in
push
xchg
emms
movsl
loope
hlt
bound
repz
and
incb
sub
pop
pop
or
stc
xor
jnp
ret
adc
dec
sti
push
pop
push
rolb
adcl
dec
sub
or
cs
sbb
xor
subb
cmp
pusha
cmp
sub
mov
or
and
fdivl
inc
mov
push
push
push
mov
pop
pop
rcrl
arpl
push
push
xchg
outsb
leave
je
pop
fs
jbe
aam
inc
mov
jle
mov
push
sahf
sub
mov
adc
ja
nop
mov
fstl
mov
push
adc
mov
add
mov
or
fistpll
in
das
cs
shrb
mov
dec
aad
xor
inc
aas
xlat
fchs
loope
push
lods
pop
sbb
jmp
jmp
repz
fldenv
mov
pusha
sahf
sbb
outsb
daa
pushl
dec
in
xor
push
cltd
imul
push
cmp
xchg
mov
sbb
and
arpl
vpperm
popa
xor
pop
xor
dec
pop
cmp
inc
jo
pop
jne
inc
lods
jmp
mov
inc
dec
push
push
jg
dec
cmp
push
scas
mov
xchg
pop
jb
dec
xchg
sub
lea
cmp
dec
rcr
leave
pop
rcrl
insb
mov
mov
repz
test
sub
jae
mov
rol
std
mov
jecxz
pushf
push
ret
xchg
test
enter
outsl
neg
stos
stos
sbb
cvtps2pd
and
push
test
and
mov
cmp
inc
pushf
xchg
xchg
and
cs
mov
dec
add
adc
ficoms
push
push
ficomps
xor
add
fstpt
sahf
adc
leave
pop
pop
add
inc
jg
xor
adc
dec
mov
add
pop
jae
pop
mov
xchg
dec
cmc
rcrl
cs
pop
and
pop
xor
sbb
and
lcall
sub
add
cmc
mov
scas
div
movsl
rcrb
and
push
pop
mov
mov
pusha
xchg
ds
mov
arpl
jle
xchg
insl
fnstsw
xlat
jae
call
lret
call
push
sub
stos
dec
mov
fdivr
mov
mov
loop
sbb
lahf
mov
ljmp
push
add
push
aad
sbb
test
fldt
pushf
mov
sbb
mov
int
xor
aam
call
xor
fdivp
std
daa
push
loopne
mov
cmpsl
dec
dec
dec
xchg
xchg
inc
pop
mov
hlt
cmc
gs
push
push
push
dec
push
insl
iret
pop
outsb
mov
decb
lea
adc
adc
adc
pop
test
and
push
out
xor
sub
fs
xor
std
mov
mov
cmp
mov
lods
cmpsb
rolb
dec
jbe
nop
dec
dec
dec
movsl
sbb
pop
push
pop
lret
aas
push
pop
adc
xlat
test
push
mov
shl
imul
mov
test
jnp
loop
jl
test
scas
mov
mov
cmp
pop
dec
lcall
xchg
mov
movsl
cmpsb
push
and
cmc
mov
movsl
fdivl
mov
shl
sub
ret
lret
mov
repnz
xchg
cmp
rcl
cmp
ds
movsl
ficoml
pop
fwait
pop
jecxz
in
xor
jmp
pop
jmp
push
xor
idiv
imul
pop
mov
add
lret
add
ja
orb
adc
dec
notl
incl
and
xor
inc
and
mov
es
subl
je
cs
popf
xchg
sub
aaa
cmp
pop
push
push
mov
jge
adc
inc
ja
scas
mov
dec
push
jle
cmp
inc
xlat
adc
pop
lret
les
dec
ror
sub
outsb
pushf
fcmovbe
push
jb
jne
cmp
movsb
js
call
jb
addl
mov
hlt
sbb
cmp
std
sub
ret
jg
or
aas
cmpsb
test
imulb
add
imul
mov
mov
rol
mov
adc
leave
cmp
dec
jb
rcl
rcrb
test
xlat
fucomi
fcmove
add
dec
inc
xchg
pop
or
dec
and
jmp
push
sbb
repz
dec
mov
push
inc
cli
adc
out
and
rolb
or
cmc
imul
dec
testb
adc
inc
and
das
pop
xor
pop
xor
cmp
cmp
and
cmpb
inc
xchg
pushf
lahf
mov
std
dec
dec
dec
mov
mov
aas
and
ja
pop
fiadds
popa
popa
bound
dec
dec
xchg
imul
xorl
jb
je
jbe
sarb
insb
mov
scas
lock
roll
mov
mov
xchg
lret
je
hlt
push
hlt
mov
xlat
cmpsb
test
xlat
adc
mov
mov
push
jp
fnsave
daa
and
mov
cs
sub
mov
jne
mov
aas
mulb
std
fadds
addb
add
dec
loopne
ret
call
in
in
dec
repnz
test
stc
cli
sti
outsb
mov
insb
gs
outsb
sbb
or
sarl
packuswb
inc
push
sbb
add
fstpt
push
push
mov
mov
outsb
out
push
sub
xchg
shlb
test
pop
xor
cmp
pop
addb
inc
pop
cs
outsb
dec
mov
xorl
push
xchg
sti
mov
pop
rorb
xchg
ror
lcall
xchg
outsb
lahf
cmp
je
loop
stos
jp
jge
inc
jg,pn
sub
jae
cmpsl
mov
enter
imul
xchg
xchg
xchg
lret
lock
or
pop
cld
imul
repz
pop
cmpsl
and
popf
mov
mov
and
popa
loope
in
ret
cmp
in
popf
int
je
mov
adc
clc
roll
jmp
and
fimull
dec
inc
adc
jecxz
sub
clc
or
pop
mov
adc
in
push
xchg
add
dec
ret
dec
stc
insb
les
das
incb
add
insl
data16
add
jge
rol
aaa
or
jg
dec
pop
sbb
dec
loope
sbb
sbb
ds
daa
rorl
xor
jg
sti
iret
push
aaa
aaa
lahf
xor
xchg
mov
xchg
and
dec
ss
dec
dec
mov
push
push
stos
test
jge
add
lds
in
or
imul
jo
xchg
jbe
pop
sarb
stos
jnp
loope
xlat
fdiv
je
test
insb
orl
mov
jno
mov
pop
fisttpll
icebp
testb
es
lret
mov
inc
aam
test
xchg
push
js
fidivl
mov
sub
in
ret
out
enter
iret
iret
mov
xor
sarl
cmp
pop
stos
ffreep
loope
cmp
pop
fnstenv
filds
adc
repnz
push
clc
stc
popa
lahf
adc
rorl
push
jnp
jbe
and
imul
jp
sbb
sbb
sbb
sbb
push
and
jae
sub
das
xor
pusha
xor
pop
aaa
stos
push
jmp
loope
shr
inc
inc
inc
jo
dec
push
cld
jne
enter
stc
clc
cmpsl
ret
and
mov
enter
bound
push
mov
cltd
insb
insl
outsb
xor
cltd
jae
mov
jmp
std
call
sbb
dec
out
xchg
outsl
int3
jo
push
xchg
pop
jnp
push
mov
rcrb
rclb
fwait
fs
movsl
fsubl
cli
xchg
leave
call
enter
insl
insb
sbb
xchg
dec
xchg
dec
int3
int
cmp
mov
inc
cld
pop
and
push
cmpsl
cmpsb
push
jecxz
push
or
mov
in
out
out
push
xchg
add
sbb
mov
std
cmp
cmp
gs
adc
sub
pop
mov
sub
mov
xor
xchg
and
jmp
lret
cmp
repnz
xor
mov
daa
pop
aaa
mov
inc
mov
sub
inc
lods
or
clc
iret
push
push
push
aam
dec
mov
aad
xchg
sbb
add
or
test
insb
fcoml
cwtl
int
inc
in
cmp
add
mov
orl
in
cli
dec
adcl
popf
adc
add
movsb
movsl
jmp
mov
pop
outsl
scas
mov
ja
mov
sbb
aaa
jne
mov
fisubrl
enter
test
xor
inc
mov
sbb
iret
add
and
frstor
push
insl
stos
aaa
repz
cmc
repz
stc
outsl
adc
inc
add
add
pop
int3
dec
arpl
or
fs
jns
sbb
sbb
push
shl
and
and
ret
and
dec
adc
xor
aaa
mov
cmpsl
mov
mov
imul
addb
pop
test
pop
lret
and
mov
mov
lds
fs
imul
ret
jo
push
xchg
fidivrl
jae
jl
inc
push
jp
addb
xchg
mov
cmp
in
icebp
repz
dec
mov
add
in
stos
sahf
lods
or
or
mov
jno
insl
loopne
mov
sar
lods
cmp
lret
xchg
xchg
cmc
into
into
sub
aam
mov
fisttpl
fdivp
aad
push
loopne
sarb
out
loop
std
sbb
adc
lock
repz
ret
cmc
pop
mov
jb
popa
popa
pop
stos
test
sar
lock
arpl
sub
sarb
cwtl
sbb
sbb
orl
dec
sub
or
push
sub
xor
push
cmp
cmp
adc
test
jnp,pt
mov
push
push
push
subb
into
push
pop
jno
test
push
leave
jb
addr16
pusha
sarb
jo
jb
loope
data16
jl
call
or
mov
mov
mov
bnd
xchg
xchg
fidivrl
pusha
inc
int3
pushf
pushf
add
mov
dec
or
pushf
cwtl
or
test
mov
xchg
push
xlat
and
jge
in
mov
xor
ret
ss
or
xchg
xor
jae
ss
dec
lods
movsb
dec
and
movsb
xchg
or
loopne
inc
mov
pop
cmc
xor
repz
pop
mov
cmp
push
ret
scas
sub
pushl
add
pushl
testb
gs
cmp
adc
js
xor
sub
xchg
adc
and
jnp
ljmp
sbb
xchg
and
xor
and
scas
and
cmpsb
arpl
aas
lods
cmpsb
xor
dec
jbe
xor
dec
mov
push
lds
pop
adcl
daa
xchg
mov
nop
fcompl
lret
imul
cmp
jo
enter
loop
addr16
jge
jg
push
cmc
imul
in
jns
mov
xchg
xchg
cli
cmp
scas
imul
sahf
push
dec
mov
mov
scas
scas
adc
push
pop
pop
and
mov
mov
and
xor
int
int3
int
jecxz
and
stc
aam
sahf
mov
push
mov
cmp
mov
sbb
in
cwtl
shl
inc
cld
sbb
imull
or
ret
outsb
clc
add
jp
ds
arpl
ja
adc
and
adc
out
push
mov
and
and
in
mov
xchg
iret
sbb
pop
sbb
movsl
or
mov
cmp
xchg
stos
adc
inc
sahf
or
je
dec
mov
cmp
clc
cmpsl
ret
and
mov
lret
test
cwtl
inc
xchg
fwait
push
adc
adc
xchg
sbb
and
and
sub
test
mov
lods
cmp
xor
cmp
cltd
cmp
imul
mov
jno
dec
les
dec
enter
int3
or
rolb
fstpl
fldenv
xchg
shll
mov
insb
call
test
je
lods
and
hlt
xchg
or
in
cmp
movb
out
or
stc
xchg
adc
and
les
movsb
and
in
test
shlb
lods
sub
sub
xor
sub
cmp
push
cmp
and
enter
int3
dec
pop
jge
test
icebp
xchg
push
sub
xor
lea
fnstsw
aas
xchg
outsb
pop
daa
insb
inc
inc
sahf
mov
pop
inc
dec
dec
mov
push
push
mov
adc
pop
pop
bound
mov
jle
mov
pop
stos
js
int3
push
in
fs
jle
xchg
les
push
pop
test
xchg
or
add
rcrb
mov
insb
push
add
lods
lods
scas
push
or
pop
mov
sub
hlt
addr16
enter
js
jae
cli
loop
cmp
jbe
xlat
fadds
pop
fstp
fstp
fiadds
dec
rcrl
sbb
and
push
push
push
sbb
fs
std
incl
insb
lock
fucomip
pusha
sbb
jbe
jb
pop
jns
inc
mov
adc
xorl
adc
pop
mov
int
xchg
adc
adc
aas
and
nop
and
popf
popf
fwait
out
xchg
scas
or
dec
mov
dec
cmpsl
or
stos
sbb
jnp
pop
mov
mov
cs
bound
push
push
mov
xchg
xchg
jo
lret
cmp
jae
jnp
push
imul
cmp
fimull
mov
dec
mov
out
out
push
cmpsl
inc
mov
ret
mov
insb
mov
fwait
pop
pop
insl
jmp
xlat
mov
jl
fidivrl
test
mov
mov
pop
test
jbe
lret
xchg
repnz
sub
sub
jle
aaa
aaa
popf
adc
xchg
or
call
dec
jmp
repz
xchg
jecxz
dec
mov
stos
and
push
les
xor
add
or
sti
addr16
ret
cmp
push
mov
sbb
jb
jb
sbb
and
in
dec
sub
xor
xor
cmp
std
lahf
out
addr16
lcall
jp
adc
dec
push
push
mov
adc
mov
mov
pusha
pusha
mov
bound
rorb
pop
mov
jb
cmp
lcall
jp,pn
sub
jae
filds
ss
mov
push
xchg
mov
nop
ljmp
fwait
add
mov
negl
dec
mov
test
add
add
mov
sbb
pcmpeqw
fistpll
rol
repnz
outsb
mov
jle
shrb
pushf
mov
fcomp
xor
xor
xchg
aas
aas
movsl
ja
pminsw
xchg
adc
dec
mov
pusha
sahf
jmp
fdivl
jl
addl
pop
or
movsb
aam
xor
aam
xor
push
dec
mov
lds
sbb
push
sbb
and
orl
mov
lahf
mov
mov
pop
cmp
addr16
inc
pushf
je
jge
xor
dec
mov
ds
jne
sarl
jnp
aam
mov
sbb
sub
cwtl
shlb
imul
adc
int
xor
and
mov
jle
fdivs
mov
in
adc
pop
mov
xchg
xchg
lock
fwait
mov
std
std
gs
int
add
shrl
jp
mov
mov
sbb
das
lea
mov
and
mov
jecxz
sbb
rolb
cmp
ficoml
fisttpl
sub
dec
add
das
loop
lods
inc
or
xlat
out
fidivrl
fwait
push
ret
clc
or
inc
and
jno
dec
push
insb
dec
sub
pop
jb
pop
cmp
mov
mov
mov
push
jno
xchg
dec
negl
sub
das
outsl
push
andl
scas
jmp
movsb
in
jmp
mov
add
cmp
adc
sarl
mov
cmpsb
cmpsb
mov
sub
sbb
jmp
insb
xchg
aam
std
outsl
outsl
jo
xlat
jbe
jns
inc
lahf
jge
jg
dec
out
test
fsubr
cli
outsb
cld
mov
nop
xchg
xlat
fs
mov
rcrl
cli
xchg
clc
stc
push
sar
sbb
scas
scas
fstpl
adc
mov
mov
movd
pusha
shrl
and
xchg
lea
mov
pushf
xchg
jg
rcl
sub
sahf
fcomp
and
cld
add
cmp
dec
fsubrp
inc
inc
pop
inc
pop
push
sbb
repz
cmp
sbb
daa
rcrb
xor
cmp
pop
pop
jns
pop
or
ja
cmp
adc
inc
jle
pop
pop
sbb
inc
jb
mov
ret
xor
xchg
sub
push
lock
cs
xchg
pop
xor
stos
pop
add
shrb
inc
xchg
mov
or
dec
dec
test
pop
test
pop
mov
lea
xchg
mov
ror
xchg
cmp
cltd
xor
dec
insl
outsb
adc
xlat
xor
mov
mov
inc
scas
jno
and
fdivr
nop
loopne
in
mov
mov
rclb
out
repnz
inc
outsb
mov
mov
test
push
xor
adc
xorb
call
mov
sbb
loope
leave
cmp
ss
negl
ss
xlat
fadds
fimull
mov
inc
test
dec
dec
adc
cs
lock
repnz
or
sbb
ret
xor
lcall
add
pop
mov
jns
fptan
std
adc
cmpl
data16
in
mov
add
and
sbb
adcl
adc
xor
sub
push
push
mov
mov
lods
dec
dec
mov
adc
cmp
sbb
jg
mov
and
push
shlb
jo
mov
cwtl
jb
fstpl
lahf
sub
xchg
dec
int3
lods
xchg
dec
std
js
inc
xchg
mov
pop
adc
pop
enter
int3
clc
dec
les
mov
repz
les
sub
and
mov
xchg
push
ss
mov
das
mov
or
cmp
cmpsl
ror
pushf
inc
inc
int3
in
push
dec
push
jmp
push
sbb
mov
xor
repz
cmpsb
push
push
call
ss
daa
add
js
dec
fistl
das
or
or
push
punpckhdq
cli
outsb
insb
pop
pop
sbb
lcall
push
and
daa
and
sbb
xor
adc
cmp
xchg
imul
jbe
inc
jb
imul
push
push
push
sbb
pop
outsb
ret
pop
mov
popf
stos
mov
int3
mov
outsb
pushf
fcmovbe
push
insb
je
mov
test
pop
mov
jge
fldln2
out
jg
mov
mov
xchg
xchg
xchg
pop
mov
cmpsl
or
inc
iret
cli
sti
invd
movsb
movsb
test
rclb
scas
mov
daa
pop
sbb
mov
rol
jp
jmp
sub
inc
pop
cmp
aam
sbb
fdivrp
fmuls
fstl
test
sbb
in
ljmp
sbb
dec
sahf
sbb
out
clc
stc
std
adc
dec
and
insb
imul
and
adc
testb
sbb
pop
push
sbb
jne
out
and
and
cmp
dec
sub
adc
xchg
mov
xor
divb
ss
cmpsl
pop
and
cmpsb
mov
push
inc
ds
dec
cmpsb
jge
inc
xchg
push
push
ret
mov
mov
xor
gs
push
mov
dec
pushf
jo
imul
outsb
push
in
jno
nop
mov
jg
test
jg
ljmp
inc
jne
xchg
xchg
xchg
cmpsl
sbb
mov
xor
notb
stos
stos
fldcw
mov
cs
inc
mov
mov
data16
shr
mov
xor
rcl
aam
push
pushf
fmuls
fucomi
out
add
loope
aam
push
mov
imul
sbb
push
icebp
repz
and
imul
arpl
cld
add
dec
lock
cmp
or
dec
xchg
lea
and
push
mov
push
sub
push
sub
imul
lcall
cmp
adc
addl
pop
push
jae
push
add
push
push
push
push
push
mov
in
lahf
dec
popa
popa
mov
push
mov
outsb
loope
xor
xchg
jb
loope
jp
jnp
stos
jle
popa
addb
test
dec
xor
mov
xor
xchg
xchg
cwtl
stos
mov
rcrb
mov
arpl
pop
jne
dec
shrb
mov
ficompl
or
add
mov
dec
inc
repz
into
into
iret
sbb
cmp
aad
fstl
mov
in
and
or
push
dec
inc
in
out
out
sbb
cmc
mulb
pop
xor
cld
std
inc
mov
and
xor
pop
ds
pusha
push
mov
insb
pop
adc
push
push
test
sbb
and
xor
mov
sub
push
cs
pop
popa
xor
aaa
movsl
sahf
jbe
aas
inc
xchg
or
insb
dec
dec
mov
movsb
movsl
mov
dec
lds
scas
pop
jnp
es
iret
cmp
ret
arpl
mov
popa
insl
push
in
mov
in
mov
jle
lods
inc
pop
mov
dec
jg
mov
mov
std
test
xchg
cwtl
in
pusha
daa
pushf
pushf
add
mov
sti
invd
loopne
test
xchg
scas
ret
xlat
mov
stos
repz
sbb
mov
xor
les
mov
lret
int3
and
pop
cmc
rcl
aam
int
jnp
fmull
fcomip
sbb
pop
loope
dec
or
xor
push
push
ficomps
out
repnz
les
incl
or
add
lret
pop
aas
pop
pop
pop
or
sarl
dec
push
adc
cmpb
sbb
dec
sbb
and
ret
and
mov
sub
pop
hlt
dec
add
xor
das
cld
jne
cmp
mov
es
push
popa
mov
dec
mov
dec
dec
cmpsb
pushf
push
sbb
jnp
icebp
scas
mov
imul
mov
aad
xchg
insl
outsl
jo
lods
jno
ja
jb
sahf
jns
inc
pop
mov
jg
and
sti
cmpsl
fisttps
mov
cmc
cltd
lcall
mov
mov
adc
mov
ja
xorl
sub
mov
cld
rol
cld
and
mov
loope
pop
not
aam
xchg
pushf
cmpl
icebp
int
add
xor
subb
shr
in
inc
dec
cmp
sub
pop
push
mov
ja
repz
mov
filds
or
aaa
push
out
lock
and
pop
cmp
js
mov
dec
fsub
add
jns
insb
sub
daa
sub
jns
xor
jnp
xor
fs
or
cmp
outsl
arpl
sub
js
imul
xchg
ja
mov
add
pop
pop
mov
rcl
test
fs
push
loope
mov
add
popf
mov
jle
rol
addb
shl
pop
imul
sarl
mov
adc
mov
test
mov
jmp
movsb
out
bswap
jno
in
lods
mov
mov
mov
mov
bsr
add
in
or
sbb
fimull
das
in
clc
int3
filds
adc
rcl
dec
dec
inc
std
sub
fiadds
cmp
dec
inc
aas
xchg
push
inc
sarl
pop
repnz
mov
pusha
mov
push
pop
scas
sub
xlat
inc
push
jecxz
xor
adc
push
push
jl
jb
nop
and
pop
pop
and
mov
and
data16
das
jle
lret
mov
xor
cs
cmpsl
xchg
sahf
mov
inc
inc
icebp
insl
movsl
jp
popa
xchg
xchg
jbe
fwait
mov
dec
mov
mov
push
mov
mov
adcb
outsb
loop
icebp
jns
jo
shrb
subb
into
out
jecxz
lahf
ficomps
in
pop
cmp
xchg
xchg
das
push
popa
sbbb
xchg
test
stos
notb
rcr
js
ljmp
mov
pop
out
les
adc
sbb
cmc
iret
push
in
mov
inc
out
fcomip
add
push
loope
or
and
out
fistpl
in
in
push
pop
push
xor
stc
jmp
sti
inc
pop
pop
enter
add
mov
push
add
es
pop
cmp
loop
push
push
push
out
pop
and
push
sub
imul
mov
lcall
pop
cmp
arpl
push
scas
movsl
xor
jo
aaa
push
fs
lcall
jle
les
scas
adcb
negl
lahf
lret
cwtl
push
movsl
adc
int3
mov
dec
in
filds
divl
mov
ret
leave
xchg
xchg
add
or
dec
shrb
xlat
movsl
movsl
hlt
mov
jne
out
mov
push
fsubs
shr
jmp
sub
jmp
clc
ss
xchg
xchg
repz
sarl
ja
and
inc
std
or
sub
dec
add
adc
pop
adc
sti
stos
xor
ljmp
repz
div
or
push
add
or
add
or
jns
pop
adc
adc
fistl
sbb
jg
or
add
dec
daa
cmp
dec
sub
das
lahf
fcoms
loopne
nop
xchg
xchg
aas
mov
das
or
mov
adc
dec
dec
push
lds
ret
sub
pop
lret
pop
cltd
popa
popa
sti
sbb
dec
data16
ret
jb
fst
test
jne
jbe
rolb
ja
and
mov
lds
inc
push
jo
mov
hlt
hlt
repnz
add
jg
popf
or
adc
cmpsl
test
pop
push
cmpsl
ss
xor
mov
mov
rcr
scas
out
repnz
inc
xor
sar
cmp
inc
aad
xlat
add
fstp
or
inc
push
fucom
in
lods
adc
push
push
cmp
icebp
repnz
sti
sbb
and
cli
xor
mov
js
pop
or
outsl
push
or
adc
jge
push
adc
int
pop
push
pop
in
das
and
mov
cmp
sub
xor
xor
xorl
cmp
sbbl
cmp
xor
imul
hlt
test
aaa
rolb
push
push
mov
fdivl
or
jl
push
fistl
loope
sub
out
inc
js
xorl
mov
inc
lea
nop
xchg
cwtl
lcall
mov
call
push
lret
ja
or
or
xchg
or
cld
mov
mov
es
or
mov
lds
inc
sub
xor
rcl
aad
inc
cmp
scas
jmp
fimuls
test
repnz
dec
mov
and
pusha
or
icebp
fs
pop
push
mov
gs
lret
add
add
int
sbb
or
and
fisttpl
adc
inc
fmull
sbb
sbb
imul
and
mov
out
or
sub
das
inc
dec
pop
push
xor
xor
and
mov
jg
aas
cltd
stos
addr16
mov
inc
dec
mov
pop
dec
push
push
test
push
push
mov
inc
mov
iret
enter
push
insb
fistpll
outsl
subb
xchg
jno
call
in
popa
out
dec
jnp
xorb
fnstsw
loop
scas
push
mov
negb
xchg
cwtl
lcall
les
adc
out
xchg
and
loopne
pop
jg
mov
scas
mov
rol
ret
mov
inc
mov
jg
iret
rcl
inc
mov
fcomp
push
std
dec
test
xor
out
adc
in
out
xor
icebp
xlat
subl
pop
mov
std
jb
dec
mov
jmp
jl
xor
cmp
cmp
adc
jns
add
mov
or
aam
and
es
dec
push
sub
sub
lahf
pop
insb
jmp
xor
mov
cmp
test
or
inc
pushf
mov
imul
mov
dec
dec
stos
push
mov
pop
pop
mov
shrl
sbb
popa
imul
fcmovbe
cmp
jne
cmp
inc
jp
loopne
cmpl
outsl
cmpsb
adcl
mov
push
pop
add
add
jae
mov
pop
mov
push
loopne
test
and
sbb
mov
mov
sbb
cmp
lret
pop
lock
roll
xor
push
dec
dec
inc
lods
out
push
dec
mov
in
in
sbb
mov
mov
fs
ljmp
add
jl
cld
outsb
ss
adc
jnp
sbb
sbb
add
mov
cmp
xchg
xor
sbb
inc
pop
xor
adc
cmpsb
lahf
mov
inc
inc
test
cmp
ret
xor
bound
dec
sub
pusha
js
test
pop
pop
cmp
cmpsl
cmp
mov
sub
rorl
mov
int3
jbe
loope
faddl
jle
ljmp
xchg
push
orl
mov
xor
clc
pusha
xchg
cltd
lcall
add
cmpsb
movsl
cltd
or
stos
stos
stos
cli
xchg
or
sbb
mov
loopne
push
rcl
or
ret
sub
lret
xor
rcl
aam
inc
cmp
xchg
jmp
pop
out
jecxz
ds
mov
out
lock
pop
push
shr
mull
std
inc
mov
addr16
add
or
shrb
aam
pcmpeqb
adc
cmc
xorb
inc
sbb
xor
mov
add
pop
pop
or
xor
cmp
mov
cmp
sub
inc
and
jle
mov
push
xor
mov
lea
pop
insb
bound
or
mov
outsl
loop
cmp
jecxz
dec
jne
jle
xorb
jl
test
xchg
xchg
icebp
pop
mov
pop
cwtl
cltd
in
push
mov
and
mov
add
inc
in
mov
push
iret
and
mov
and
pop
or
sbb
sub
pop
xor
lret
int
add
cli
sub
div
cld
xlat
inc
push
lcall
adc
or
and
pop
in
push
xor
pop
repnz
clc
or
call
dec
add
add
dec
sub
sub
hlt
jbe
pop
or
adc
pop
xor
cmp
jnp
push
sbb
dec
in
sub
and
mov
lcall
mov
cmp
ds
or
inc
inc
or
push
inc
inc
lods
jmp
mov
pop
dec
push
push
jg
dec
push
push
push
scas
pop
int3
sub
movsb
test
adc
sub
ret
lds
pop
pop
xchg
jno
jbe
jns
jp
jge
inc
jmp
jg
mov
jp
dec
stc
dec
xor
std
pop
negl
cli
fsts
shr
pushf
pusha
xchg
rol
mov
cmpsl
cmpsl
cmovge
std
mov
mov
sub
adcl
shrb
mov
sub
xor
ret
xor
aam
iret
inc
cli
shlb
aad
mov
xchg
mov
out
push
mov
push
xchg
dec
mov
xlat
xor
pop
and
sbb
imul
ja
jmp
xor
jae
push
addl
cmp
mov
inc
lea
inc
nop
adc
or
es
dec
and
push
sub
in
cmp
fldpi
and
pop
aaa
fcomip
and
cmp
push
push
outsb
dec
icebp
mov
push
jp
sarb
subb
push
leave
xchg
mov
push
mov
push
sub
pop
fcompl
insl
cmpsl
in
inc
stos
jle
imul
loopne
push
cli
test
call
sub
mov
push
aam
inc
stos
stos
lods
add
xchg
sbb
jnp
cmp
xchg
mov
mov
dec
ret
xor
xchg
iret
out
mov
xor
rcl
inc
cli
into
fdivrp
aad
rcr
rolb
loopne
loop
xor
movsl
out
jmp
mov
repz
testb
insl
std
incl
cs
sub
pop
movl
adc
fisubrl
push
push
jle
xor
jae
xchg
adc
xchg
bnd
fs
daa
jle
repnz
xor
pop
mov
cmp
cmp
popl
inc
mov
adc
mov
movsl
sbbb
push
push
pop
xchg
pop
pusha
mov
fs
or
cmp
je
xchg
outsl
fst
mov
cmpsl
inc
pop
cmpl
das
addb
mov
xchg
xchg
ljmp
cmp
or
test
clc
or
test
lahf
lahf
cs
push
jl
jle
cltd
mov
push
daa
push
into
adc
mov
lea
lret
int3
sbb
and
push
sbb
loopne
inc
xchg
pop
fisttps
repnz
dec
mov
dec
test
mov
repnz
cmc
dec
and
inc
add
stc
addr16
jl
add
dec
add
add
or
and
inc
jge
xchg
adc
jge
sbb
inc
mov
and
sub
push
das
popf
xchg
mov
aaa
cmp
push
cmp
imul
inc
inc
test
arpl
mov
lret
dec
push
push
jg
ds
leave
cmp
pop
enter
bound
sub
inc
push
int
lret
push
adc
stos
push
scas
rorl
inc
mov
fcmovu
mov
clc
fdivl
push
outsl
lret
xchg
xchg
in
add
repnz
scas
sub
les
pop
xor
out
scas
scas
adc
lret
adc
test
xor
sub
mov
xchg
xchg
fmul
int
inc
mov
dec
mov
mov
ss
inc
aas
mov
push
mov
mov
iret
ljmp
lods
insb
sbb
clc
or
inc
and
ret
sub
incl
push
push
dec
sub
xor
jnp
push
pushl
adc
pop
in
fs
dec
sbb
inc
in
js
out
xor
and
mov
pop
cmc
inc
inc
xor
cltd
xlat
dec
sahf
stos
ret
cli
sbb
stos
movsb
enter
je
imul
imul
push
push
push
popf
mov
cltd
dec
sbbl
xchg
shrb
pop
nop
imul
ds
fstl
jns
jl
lret
sbb
out
call
mov
jge
cmc
push
push
cmpsl
loop
cltd
outsb
fwait
push
push
shrl
jl
sbb
lcall
mov
lcall
mov
mov
je
cmp
rcl
sub
lcall
jmp
loope
dec
pushf
loop
ljmp
out
pop
sub
pop
lcall
add
insb
gs
or
outsl
add
aas
pop
aaa
adc
sbb
fsubr
and
cmpsl
in
sub
das
sub
sti
xor
jno
lahf
add
inc
inc
outsl
inc
mov
mov
stc
inc
dec
dec
mov
pusha
push
push
push
outsl
sarl
pop
shll
aam
xlat
dec
fimull
lds
rcll
jp
xchg
xor
jp
jl
ja
xchg
fisubrl
and
cld
test
xchg
add
xchg
cltd
lcall
dec
lods
mov
adc
stos
lods
scas
fcompl
adc
mov
jecxz
nop
and
das
out
shl
sub
enter
loope
xor
popa
fdivrp
aam
mov
dec
ljmp
aam
dec
fwait
out
in
sbb
fnstcw
pop
pushf
add
mov
pop
add
pop
insl
leave
jg
data16
add
adc
ja
shll
lahf
jmp
add
push
jle
test
das
xor
cmp
mov
cmp
inc
mov
adc
dec
jns
xchg
pop
dec
dec
xchg
rorl
cmp
push
pop
pop
mov
iret
outsl
leave
ret
arpl
xchg
je
addr16
push
cmp
jb
cmp
js
mov
jmp
test
subl
mov
dec
xchg
mov
mov
mov
cltd
or
push
fistps
push
ljmp
in
cmpsl
scas
scas
jne
mov
mov
push
enter
test
and
cmp
into
iret
std
roll
movsl
rcr
fisttpl
inc
inc
and
loope
sub
scas
cmp
ljmp
call
push
fs
cmp
imul
push
xor
mov
rol
adc
emms
mov
cmpb
sbb
dec
loop
and
and
and
sub
das
fcompl
cmp
mov
xchg
xchg
lcall
mov
dec
movsb
pushf
aaa
push
sub
nop
pushf
inc
jl
mov
and
andb
mov
jl
les
jb
mov
pushf
ja
in
jle
lret
pop
mov
pop
repnz
hlt
stos
mov
mov
mov
mov
rcrl
lds
adc
lods
ret
in
lock
jb
nop
sbb
std
add
cmp
ret
enter
lock
sub
rorl
jmp
ds
add
out
jmp
out
pop
mov
dec
es
popa
mov
addr16
js
popa
or
jl
adc
js
add
cmp
pop
push
cmp
push
and
and
push
sub
sbb
fcoms
xlat
dec
fcompl
mov
mov
inc
inc
inc
mov
dec
cmp
jno
aas
insb
push
push
push
pushf
imul
jo
mov
xchg
sub
js
push
loop
mov
jle
jae
jmp
mov
jl
scas
inc
mov
addl
je
mov
divb
xchg
lods
add
fwait
mov
mov
add
adc
out
iret
test
ja
mov
mov
je
sub
mov
pop
sbb
aaa
stos
sti
mov
lret
inc
lcall
adc
inc
std
rorl
adc
loop
or
cmp
adc
sbb
imull
pusha
insl
in
imul
dec
jmp
dec
imull
or
push
out
sub
inc
or
lea
popw
lock
movsl
es
sbb
lahf
push
arpl
testl
pop
repz
lea
mov
inc
pop
mov
or
dec
dec
jbe
inc
inc
mov
push
orb
bound
fimull
mov
insb
inc
fwait
outsl
dec
frstor
xchg
mov
popf
jne
jle
xchg
out
push
test
jnp
pop
jmp
jnp
adc
mov
ret
pop
cwtl
cwtl
pop
hlt
cmc
adc
mov
add
stos
jae
jo
scas
adc
movsl
and
mov
call
cmp
push
sub
cmp
aaa
lock
std
cmp
shlb
dec
enter
pushf
push
loop
add
lods
push
ljmp
scas
arpl
pusha
pop
fildll
mov
bound
filds
jo
jmp
or
jle
or
cmp
ret
ds
sbb
push
mov
cmpsl
rcrb
sub
lcall
lods
xor
outsb
inc
push
test
imul
dec
popa
pop
jne,pt
mov
std
mov
lods
enter
lea
dec
scas
bound
imul
xchg
insl
shrl
fsts
sbb
fwait
jl
fcomp
in
cmpsb
adc
scas
mov
mov
cld
jmp
iret
imul
xor
jmp
mov
stos
push
cmpsb
scas
shll
daa
add
fstpt
fistps
push
mov
or
push
mov
cmpsb
cld
shl
pop
shl
cmp
leave
inc
test
dec
or
push
mov
loopne
sti
arpl
pminsw
popa
divb
add
repz
mov
pop
mov
insl
imul
add
dec
aas
arpl
or
aam
lret
adc
jbe
insb
insl
mov
sbb
arpl
inc
and
push
xchg
dec
fistl
and
cwtl
xorl
cmp
aaa
aas
push
dec
das
inc
movsl
mov
cmpsl
movsl
lock
lret
xor
dec
mov
push
mov
shlb
sbbb
xchg
dec
lods
lods
lods
out
cmpsl
jo
push
cltd
popa
lods
jno
popa
movsb
dec
cmp
in
dec
mov
and
dec
shl
mov
hlt
dec
jne
add
filds
cwtl
mov
stc
iret
out
mov
out
cwtl
iret
stos
sbb
cwtl
pop
in
ljmp
mov
ret
push
stc
add
rolb
aad
or
std
xlat
fisttpl
sahf
xor
add
or
sub
in
pusha
aam
idiv
push
icebp
cmp
notb
outsl
add
sbb
jbe
push
add
loopne
or
dec
sti
xor
mov
jle
xor
push
loopne
insb
mov
out
xorl
and
lock
sbb
dec
subl
cmp
push
xchg
inc
test
insb
adc
andb
push
push
adc
stc
jge
sbbb
arpl
imul
insl
insl
aad
pop
ficoms
imul
mov
test
ljmp
mov
aaa
mov
nop
nop
xchg
xchg
or
cwtl
or
je
cmc
movsb
push
mov
sbb
and
push
cmc
test
cmp
pushf
and
mov
inc
in
sti
call
inc
ror
jmp
loope
cli
aam
loop
add
cmp
test
in
in
dec
mov
mov
xor
pop
adc
inc
repz
je
sbb
push
push
ret
data16
sbb
sti
or
or
pushl
adc
adc
mov
arpl
sbb
dec
and
adc
xchg
sbbb
into
sbb
xchg
xchg
mov
scas
adc
jge
jb
fidivrl
mov
mov
ret
rorb
icebp
jne
fs
mov
adcb
fidivl
rcl
insb
fiadds
lock
test
xchg
stc
sar
mov
decl
xchg
repnz
out
jbe
divb
mov
int
stos
xor
mov
jmp
nop
call
int3
loopne
pop
inc
cli
and
rol
or
fldln2
enter
das
hlt
into
shrb
aad
xor
inc
pushf
inc
add
inc
push
jecxz
in
sbb
fsts
jmp
in
shr
lock
mov
daa
sbb
dec
inc
lds
cld
add
pop
ret
cmp
add
dec
fistpl
das
or
out
mov
pop
ss
adc
add
and
push
ljmp
addb
xchg
pop
xor
test
scas
mov
mov
mov
inc
cs
dec
jnp
outsl
push
push
push
mov
mov
rcr
rorb
jns
xor
lock
insl
les
cwtl
jae
pop
mov
call
xorl
loopne
xlat
mov
sub
rcll
in
mov
les
mov
cmpsb
adc
andl
or
in
mov
sub
shlb
sub
enter
movsl
cli
into
inc
movsl
xchg
in
rcl
cmp
inc
cmp
fstp
or
cs
inc
lods
lahf
mov
inc
lock
loopne
repnz
dec
fs
push
adc
cli
add
or
ja
repnz
cmp
andl
adc
fimull
pushf
call
or
sub
and
push
xor
cld
xchg
daa
fs
addr16
push
add
in
xchg
das
xchg
mov
dec
dec
push
les
push
addr16
and
pop
pop
les
dec
pop
cmp
adc
ret
lds
push
je
xchg
sub
hlt
insb
je
cltd
test
shrl
pop
out
pop
and
test
add
dec
lds
mov
iret
test
pop
aam
jns
xlat
mov
mov
lods
or
sbb
xlat
addr16
push
jae
cs
int
es
stc
sbb
fucomi
bound
add
sbb
jecxz
in
test
inc
pop
push
mov
imull
cli
or
cmp
repnz
add
ret
std
jmp
or
pop
sub
int3
cmp
das
mov
lret
xchg
push
jle
mov
or
xor
jge
xor
push
jbe
lods
push
stc
xor
inc
inc
daa
mov
xchg
xor
dec
mov
push
stos
sbbb
push
pop
pop
mov
rorl
bound
arpl
push
cmp
sub
pop
jns
shrb
and
mov
clc
bound
mov
mov
data16
pop
incb
hlt
and
cmpsb
cmpsb
cmpsl
adc
mov
divl
lret
fidivrs
or
ret
mov
push
and
repz
jp
mov
cmpsb
enter
push
enter
jecxz
aam
in
push
or
adc
cmp
cmc
stc
or
ljmp
sbb
pop
dec
sub
or
adc
aaa
adc
mov
ret
ret
ljmp
jg
or
sub
cwtl
xchg
sub
xor
popa
xorb
dec
and
pop
cmp
inc
mov
push
arpl
dec
mov
test
inc
inc
int3
lcall
mov
pusha
arpl
ret
cltd
xor
adc
shlb
jl
stos
jg
cmpsl
addl
mov
mov
stc
icebp
pusha
jne
pushf
pushf
mulb
mov
into
test
aam
out
repnz
add
es
or
sbb
and
cwtl
add
iret
sarb
imul
fxch
pop
inc
jb
ret
dec
inc
leave
fsub
out
sbb
jmp
push
dec
sbb
dec
pop
test
bound
add
pop
into
pop
sbb
or
aam
xor
adc
fstpt
cmp
pop
mov
xor
sbb
jo
movsl
lret
out
push
sub
xchg
inc
mov
xor
and
xor
cmpsl
pusha
push
inc
inc
inc
inc
pushf
scas
movsb
nop
dec
pop
out
cmp
lods
sbbb
pop
outsl
add
pop
xchg
and
data16
mov
scas
mov
fwait
jbe
loope
mov
mov
xor
xchg
dec
jge
jae
mov
test
out
hlt
rcrl
iret
rorb
pop
fbld
fldcw
loopne
pop
push
and
shrb
ret
pop
rorb
mov
lret
cmp
clc
mov
in
pusha
xor
arpl
push
pop
iret
in
in
cmp
pop
push
lret
clc
inc
imull
shll
std
std
dec
inc
aaa
sti
outsl
sub
or
jae
es
dec
push
push
pop
inc
jno
xlat
into
sbb
sbb
and
arpl
dec
pop
pop
lcall
aaa
stos
jle
pop
imul
push
sbb
push
cmp
jecxz
push
push
push
mov
xchg
xor
dec
xchg
mov
aam
mov
cmpsb
push
fiadds
pop
fbld
frstor
mov
test
pushf
sarb
xchg
pop
push
jns
xchg
out
in
add
mov
adcb
sbb
fsubrs
icebp
gs
sbb
xor
incl
xor
into
iret
cmp
rcl
inc
inc
add
fcmovnu
sbb
sahf
push
test
out
inc
ljmp
xor
pop
xor
stc
cli
sub
mov
std
add
dec
adc
sub
cmp
subl
mov
adc
sbb
add
test
xchg
jb
outsb
adc
sub
sbb
cs
popf
push
fidivrl
imul
ret
pop
cmp
lcall
adc
jo
adc
mov
addr16
mov
ret
jle
pop
les
mov
mov
mov
jnp
insb
and
jno
cwtl
sbb
and
lahf
jg
in
fcmovnu
stc
jb
aad
roll
mov
push
sbb
xchg
xchg
add
mov
shlb
sbb
aas
mov
xchg
mov
and
pop
jmp
loopne
in
test
loope
shll
sbb
cs
iret
rclb
aaa
loope
rolb
pushf
xbegin
xor
push
lret
cmp
clc
sub
or
mov
iret
ljmp
add
repz
ret
adc
stc
pop
mov
insl
inc
add
or
sbb
or
aam
sub
adc
insb
insl
mov
jno
xor
sub
pop
and
xchg
dec
into
outsl
jl
push
sub
dec
xor
xchg
repz
xchg
std
inc
dec
fs
lods
jb
inc
dec
cmp
jnp
push
push
jg
sbb
mov
mov
arpl
fisubs
aam
jecxz
arpl
aas
insl
insl
outsb
fcoml
fwait
jbe
inc
xchg
jl
loop
fcomp
mulb
outsl
cltd
scas
mov
or
ret
and
mov
pushf
test
lds
jno
adc
dec
out
test
shrb
mov
pop
jae
push
test
mov
ret
repnz
inc
leave
lret
aaa
lock
cmp
xor
aas
clc
sbb
inc
inc
mov
loope
sub
scas
addl
imul
jo
div
pusha
sbb
cli
add
xor
push
and
jno
xchg
mov
adc
imul
xor
pop
sbb
and
and
outsl
insb
aad
dec
sub
cmp
cs
aam
andb
lcall
add
dec
inc
inc
stos
addr16
mov
lcall
jb
jg
jbe
add
bound
mov
leave
pop
push
in
jp
insb
and
jno
cwtl
sbb
adc
cltd
jg
in
fcmovnu
ja
and
mov
ficomps
imul
lret
fs
xchg
mov
std
sbb
scas
adc
mov
push
pop
mov
mov
add
loop
sbb
xchg
cs
pop
mov
out
sti
cmp
lretw
sbb
in
pop
mov
inc
or
xchg
push
call
lahf
sti
call
mov
div
and
std
sub
mov
stc
add
lret
sbb
pop
outsl
lods
push
js
movsl
or
adc
push
sbb
jo
and
add
inc
and
aas
xchg
dec
into
outsl
and
push
sub
dec
xor
xchg
repz
pop
sbbl
aas
fwait
inc
sbb
inc
dec
dec
movsl
jl
inc
insl
push
push
mov
aam
ret
dec
iret
lret
fs
mov
cltd
xlat
shrb
loopne
ret
mov
sub
cmp
jns
xchg
icebp
orl
xchg
test
clc
xlat
testl
sbbb
cmp
add
jecxz
notb
sbb
mov
mov
mov
inc
loope
lds
repnz
xchg
iret
in
rcl
cmp
adc
loopne
iret
mov
sub
push
push
mov
and
pop
pushf
or
cmp
cmc
fldl
push
pop
rclb
push
push
dec
aaa
adc
dec
sbb
sbb
sbb
mov
jl
in
dec
inc
sub
nop
into
aas
cltd
xchg
loop
xor
arpl
mov
cmp
xchg
push
mov
jno
mov
nop
jo
cmpsb
xchg
mov
pop
push
pop
pop
mov
and
pop
pop
lds
push
into
pop
popa
push
xchg
test
lahf
fst
es
js
jp
gs
add
movsl
jg
dec
xchg
pushf
test
mov
nop
xchg
fidivl
leave
mov
test
add
mov
dec
ret
cmpsl
cmpsl
cmovge
sbb
popa
stos
mov
or
jnp
int
mov
jmp
rol
les
scas
fimull
out
leave
adc
add
into
cmp
test
xlat
das
push
lahf
outsl
neg
fildl
lret
sub
sbb
in
out
jmp
jmp
repz
and
pop
popf
ljmp
pop
xor
xchg
sbb
ja
rorb
adc
xchg
pop
sub
js
xchg
xchg
and
es
jae
inc
clc
xchg
dec
xor
pushf
push
xchg
lods
es
imul
sub
xchg
mov
dec
push
push
sbbb
insb
push
push
lds
mov
ror
sbb
les
jo
push
loope
sub
shrl
sbb
lock
mov
mov
add
or
sahf
mov
mov
mov
test
fcomp
adc
lahf
scas
ret
mov
jae
sbb
mov
mov
mov
push
scas
leave
lret
insl
lret
sbb
or
aad
lahf
repnz
inc
popf
aaa
cmp
inc
dec
lret
push
dec
mov
in
out
xor
and
or
negb
push
out
pusha
dec
in
add
fbstp
imul
or
pushl
adc
fadds
cmp
dec
sbb
pop
push
inc
out
outsb
bound
daa
loope
pop
push
sub
cltd
cwtl
xor
xor
sub
aaa
sub
cli
insb
das
clc
imul
jno
imul
sbb
or
cmpb
jge
mov
pop
dec
pop
pop
movb
enter
push
pop
into
iret
insl
insl
outsb
jb
imul
jle
lods
sub
test
mov
xchg
xchg
add
out
lahf
mov
invd
pop
mov
lods
pop
fidivs
leave
mov
sbb
andb
mov
mov
leave
add
int
iret
sbb
inc
or
flds
nop
loop
adc
dec
mov
push
push
mov
and
push
sub
scas
stc
add
das
add
push
sbb
outsl
stos
or
adc
adc
adc
sbb
dec
inc
sbb
cmp
mov
cmp
xor
xor
mov
popf
in
aaa
ds
insl
inc
mov
inc
push
lret
mov
lods
jmp
push
xchg
push
push
mov
clc
push
pop
pop
mov
lret
les
data16
scas
pushf
mov
mov
cmp
xchg
js
loopne
imul
xor
fnstenv
mov
mov
xchg
xchg
rcll
loopne
lcall
jmp
out
outsl
stos
push
jne
scas
scas
mov
pop
push
mov
mov
loope
sub
or
mov
clc
xchg
imul
int
hlt
test
aas
cmp
aam
fimull
and
inc
xchg
fsubp
out
adc
ljmp
icebp
repnz
icebp
das
push
call
mov
sti
add
insl
enter
jne
mov
or
adc
push
mov
sbb
fstl
xor
test
icebp
sub
sub
popa
push
das
popf
xchg
out
aaa
cmp
cmp
movsb
loop
lods
cmpsb
testb
popf
ja
xchg
pop
dec
dec
cmpsb
jle
mov
dec
push
push
test
inc
pop
outsl
jecxz
test
lds
pop
addr16
imul
imul
jae
movsl
imul
jmp
xor
test
popf
mov
inc
lea
lcall
add
pushf
movsb
movsl
shrl
test
adc
stos
mov
or
and
push
mov
sub
cmpsl
or
in
and
xchg
imul
into
ss
aas
cmp
or
cmp
dec
inc
xchg
loope
jmp
out
add
push
lock
push
xchg
clc
stc
mov
cmp
mov
dec
pushf
add
or
rorl
adc
outsl
das
pop
pop
jg
ss
and
xchg
leave
es
pop
jbe
push
xor
cmp
add
aas
aas
cmpsl
in
mov
stc
inc
dec
dec
mov
dec
dec
test
push
pop
pop
mov
pop
jb
cmpsl
xchg
rclb
sbb
outsl
subb
jno
fsubr
jno
jp
jl
outsl
jg
fisubrl
and
orl
mov
int3
icebp
test
int3
pop
mov
insw
data16
movsl
cld
std
aad
int3
movsb
inc
add
je
je
mov
or
mov
cmpsb
and
insl
mov
mov
shl
pop
mov
das
insl
ficomps
cmp
fmuls
and
add
or
loop
cmp
loope
pusha
call
icebp
and
pop
popf
ljmp
pop
xor
xchg
sbb
pop
popa
cmp
rorb
adc
xchg
pop
sub
jge
fnstsw
jbe
out
movsl
icebp
push
or
sub
mov
ss
cmp
mov
aas
and
inc
lods
mov
cmp
mov
inc
mov
push
push
push
mov
pop
outsl
xchg
dec
sbbl
lret
fdivs
push
shll
jb
lret
mov
ja
sbb
clc
out
jle
test
test
jecxz
mov
in
add
call
mull
add
push
bt
es
and
aam
or
ret
add
rol
enter
mov
repz
inc
gs
jmp
cmp
cmp
pop
out
aas
sbb
scas
xchg
jmp
push
lods
inc
imul
push
mov
lds
rcrl
aam
mov
insb
mov
jl
nop
fdivl
jno
jge
sbb
pop
dec
data16
and
cmp
outsb
dec
sub
jns
jnp
xor
jp
xor
cmpsb
adc
test
or
pop
inc
inc
lods
ljmp
jb
xor
popf
jl
pop
int
movsb
les
popa
bound
cmp
cltd
jae
insl
jns
enter
mov
mov
mov
mov
lea
clc
fs
cltd
lcall
les
mov
lds
adc
mov
loope
mov
mov
adc
es
mov
xlat
dec
or
and
shrb
lcall
cmp
ret
xor
inc
inc
lods
loop
cmp
clc
pusha
xor
add
adc
cmp
cmc
arpl
std
sub
arpl
cld
add
xor
pop
repnz
inc
xchg
subw
adc
add
sbb
push
xchg
or
xchg
or
ret
and
mov
roll
xor
xchg
cmp
mov
cld
adc
inc
mov
push
inc
dec
push
inc
aam
rcr
cmp
push
pop
pop
mov
nop
into
arpl
xchg
xor
insb
insb
fcmovbe
ljmp
jne
loope
xchg
jne
jl
inc
pop
insb
jg
mov
jmp
aaa
cmc
scas
pushl
jbe
mov
popa
js
popa
into
mov
mov
int3
adc
xchg
out
and
stos
pop
or
xchg
mov
or
fidivrs
adc
or
jmp
lret
fisubs
repnz
dec
mov
aas
clc
sub
inc
add
or
dec
or
adc
push
adc
bound
pop
pop
push
adc
idiv
ds
xor
cli
sub
pop
in
add
push
or
ja
sub
adc
pop
adc
adc
ficomps
sbb
add
mov
push
out
xchg
sbb
sub
xor
arpl
ljmp
les
repnz
inc
dec
dec
jnp
add
push
push
sbb
push
pop
pop
mov
sub
sarl
arpl
bound
iret
outsl
imul
cmp
sbb
xorb
adcl
insb
mov
addb
arpl
gs
jmp
cmpsb
cmpsb
cmpsl
adc
mov
fistps
cs
jnp
movsl
mov
daa
fisubrs
not
icebp
ss
or
in
enter
int3
sub
dec
or
rolb
leave
fcomp
fisttpl
mov
dec
inc
aad
out
dec
mov
sbb
in
lret
mov
loop
icebp
push
mov
outsl
jno
sbb
std
imul
push
xor
xchg
cli
or
inc
xor
test
nop
int
pop
push
sbb
sbb
sbb
and
and
inc
movsb
loope
and
sub
cmp
push
and
ficomps
cmp
mov
inc
sbbl
sbb
adc
mov
pop
pop
lds
mov
push
xchg
mov
pop
push
loop
fcmovnbe
inc
outsb
jne
movsb
js
arpl
fiadds
jg
xor
pop
outsl
mov
nop
xchg
xlat
adc
mov
lods
cltd
cltd
add
mov
add
movsb
movsl
shll
test
cmpsb
lahf
and
sbb
sub
xor
rol
and
xor
movl
into
inc
xchg
mov
sub
pop
notb
push
dec
mov
in
in
xor
adc
and
arpl
std
sub
arpl
int3
pop
out
or
jbe
fisttpl
adc
aas
fdivrs
jnp
adc
add
and
jmp
push
daa
daa
int
xchg
cltd
xor
xor
call
pop
cwtl
xchg
ds
pop
xchg
or
inc
inc
inc
mov
movsl
xchg
dec
dec
dec
sarb
pop
xchg
xchg
dec
sbbb
arpl
je
lret
xor
cs
cmp
ja
rcl
aad
cmp
addl
loop
out
cmp
popf
cmpb
push
call
xchg
mov
enter
pop
sbb
jmp
cltd
jecxz
mov
pop
mov
cmc
test
les
fbstp
pop
jle
repz
hlt
enter
cmp
iret
fcmovu
or
jne
sbb
test
push
mov
xchg
and
icebp
repnz
and
jo
push
add
dec
sub
pop
sbb
imull
or
js
dec
or
adc
dec
cmp
sbb
mov
push
jmp
out
sub
fs
mov
fadds
daa
pop
cmp
add
inc
inc
mov
adc
cltd
mov
lcall
push
dec
dec
adc
inc
push
push
shlb
scas
mov
sub
es
pop
pop
lret
sbb
pop
gs
ljmp
cld
stc
push
outsl
jo
push
loopne
push
int
loope
dec
inc
daa
push
jg
and
orb
jae
xchg
movsl
aad
mov
jle
add
jle
sti
jg
mov
jmp
movsl
adc
adc
movsl
mov
mov
sbb
mov
mov
mov
cmp
xor
shl
fwait
sbb
sarb
int3
fmul
cmp
fcmovu
and
loope
arpl
out
loope
ficoms
aad
lock
pop
ret
and
js
fdivrl
adc
cli
push
imull
out
or
pop
dec
gs
mov
push
pop
insb
inc
adc
sbb
pop
xchg
mull
and
mov
xchg
filds
xor
pushf
in
aad
ss
gs
andl
aaa
inc
xor
cmc
sub
jle
mov
xor
push
subb
pop
mov
inc
pusha
popa
mov
aam
xor
jo
jae
jne
insb
and
jnp
xchg
push
lret
jmp
int3
outsb
mov
xchg
xchg
enter
js
popf
lahf
mov
push
sbb
adc
adc
mov
mov
sub
cmpsl
ret
ljmp
int
iret
shrb
cmp
mov
fisubrl
or
cmp
shrb
mov
in
in
push
xchg
pop
inc
dec
pop
pop
in
stc
cli
sub
adc
and
xor
or
daa
push
xor
inc
int3
inc
stos
out
adc
push
jle
pop
pop
sbb
cmp
and
xchg
bound
std
sub
sub
cs
lahf
popf
xchg
adc
cmp
mov
aas
inc
jle
lods
sbb
outsb
test
mov
dec
push
push
sbb
push
push
push
popf
cmp
pop
mov
mov
sub
data16
pop
inc
outsb
outsl
popf
xlat
int3
insb
test
cmp
sbb
call
repnz
jns
mov
movb
pop
cltd
lcall
push
pop
xchg
outsl
test
add
jno
fwait
lods
lods
adc
or
sbb
xorl
cmpsl
sbb
jle
add
lret
cmp
mov
add
mov
xor
movsl
mov
loope
cmp
lods
stos
aam
jmp
ljmp
div
pop
pushf
jmp
out
lret
dec
mov
shl
stc
or
jb
push
cmpl
dec
in
or
jnp
and
xor
pusha
pop
cli
mov
ss
xor
inc
inc
inc
or
inc
inc
inc
mov
and
dec
orl
out
xor
pop
cwtl
scas
inc
sarb
sahf
and
xor
int3
dec
imul
dec
jb
jne
loope
js
jnp
mov
sub
test
xchg
nop
nop
add
stc
push
xchg
lcall
sahf
xchg
movsb
xchg
and
sbb
test
xchg
xor
mov
rorb
in
ret
jbe
mov
mov
int
iret
addb
cmp
fcmovu
or
push
les
dec
xchg
mov
ljmp
adc
sbb
insl
loope
gs
add
dec
inc
pop
pop
pop
jb
stos
add
jl
add
sub
push
pop
test
arpl
dec
mov
insl
mov
sub
cmp
das
das
xchg
aad
insb
rol
xor
cmp
lret
inc
scas
test
inc
dec
dec
js
scas
pop
inc
push
push
jg
push
inc
dec
push
pop
push
cmpsb
aas
pop
pop
ret
lret
les
gs
sub
ret
outsl
orb
cld
jno
jp
adcl
aad
xchg
jno
test
push
or
jae
mov
mov
jmp
lock
lcall
out
mov
popa
leave
test
stos
mov
pop
inc
dec
mov
mov
lret
fistpll
jecxz
xor
or
das
out
enter
test
clc
roll
inc
jg
adc
sbb
aad
or
out
mov
shr
in
cmp
pop
sbb
sub
push
sub
out
call
push
inc
daa
add
pop
jp
or
cmp
adc
cmp
add
push
xchg
or
dec
sub
sub
cs
xchg
jbe
xor
mov
test
or
inc
inc
mov
cmp
jae
stos
sbbl
mov
pop
andb
pusha
fs
lods
mov
rorl
jo
jae
jne
fdivrl
xchg
imul
ljmp
pop
out
lods
adcb
mov
xchg
cmp
cwtl
mov
lds
sub
in
into
test
adc
lock
aad
cli
sbb
std
sti
fdivl
loop
cmp
jmp
adc
fcoml
inc
stos
xchg
pushf
mov
fcmovnb
mov
cmpsb
enter
in
int
test
fsubr
out
xlat
leave
pop
adc
sbb
lret
mov
add
pop
popa
cmp
seta
cmp
cmp
lahf
imul
and
mov
daa
and
xchg
inc
mov
cmp
aaa
cmp
cmp
xor
push
inc
inc
loope
sbb
dec
dec
dec
cwtl
push
ss
push
lahf
mov
pop
cmpsb
jnp
cmpsl
mov
scas
into
jnp
scas
nop
push
ds
outsl
outsl
or
jne
je
jno
into
shl
mov
addb
cmc
scas
dec
mov
nop
xchg
fstpt
mov
call
movsl
xchg
or
cmpsl
test
iret
xchg
scas
xchg
insb
jl
mov
mov
stc
loopne
mov
outsb
ret
cmp
leave
fsubr
adc
lret
cmp
mov
nop
or
les
scas
aam
mov
in
lret
push
dec
push
jmp
push
xchg
lock
sbb
stc
cli
inc
adc
and
sub
add
and
test
jle
jb
jne
push
push
pop
inc
cmpl
push
dec
and
inc
and
daa
int
cwtl
xchg
push
sub
xor
push
repnz
cmp
cmp
inc
pop
xor
insb
inc
dec
mov
xchg
jbe
push
lcall
xchg
inc
enter
bound
stos
or
lea
outsl
mov
push
jo
mov
ja
sbb
addl
mov
scas
jnp
nop
add
notb
xchg
jle
lcall
or
adc
cmpsb
test
fdivl
cltd
mov
or
and
mov
mov
movsl
rcl
or
ret
insl
insb
sbb
xchg
dec
xchg
lret
mov
into
ss
in
sub
lahf
lods
sbb
loopne
stos
xchg
leave
out
ljmp
out
inc
mov
stc
insb
call
ss
insl
data16
pop
or
rorb
or
jp
adc
inc
pop
mov
test
sbb
pop
js
jecxz
inc
and
pop
sub
nop
into
aaa
cltd
xchg
xor
xor
xor
sbb
cmp
inc
inc
inc
jb
mov
xchg
jno
mov
dec
mov
movb
inc
push
pop
pop
outsl
pop
dec
sbbl
mov
das
in
jp
push
cmp
bound
js
out
dec
jg
xorb
xchg
in
push
mov
mov
ret
adcb
lahf
mov
mov
test
push
emms
scas
mov
idivl
inc
movsl
mov
popa
and
ss
cmp
mov
rorl
cli
into
pop
lret
xchg
ljmp
ficoml
aad
or
push
das
fsubrs
adc
inc
mov
add
icebp
dec
mov
pop
popf
add
xchg
incl
add
pop
jp
je
aad
push
andnps
dec
adc
cli
adc
add
sbb
push
and
mov
and
mov
and
sub
pop
xor
cmp
lahf
fnstsw
jb
lahf
out
xchg
scas
mov
adc
xor
mov
call
mov
mov
stos
int
mov
ljmp
insl
insl
outsb
outsl
cmpsl
xor
jbe
jne
in
adc
or
stos
test
ret
xchg
mov
xchg
movsl
cmp
mov
cwtl
cltd
call
pop
mov
int
out
negb
and
ljmp
fiaddl
mov
mov
cs
pop
ror
divl
rclb
das
maskmovq
add
cmpsb
aas
fisubrs
jl
jmp
pusha
test
hlt
div
dec
pop
sbb
pop
xchg
stc
add
dec
add
lret
push
push
mov
jnp
test
adc
fbld
std
sbb
add
lret
mov
pop
sub
pop
je
sub
push
scas
mov
dec
xacquire
mov
push
inc
pop
jp
outsl
dec
xchg
mov
shll
push
aam
mov
rcrb
dec
or
sbb
data16
insb
insb
insl
mov
mov
cmp
pushf
loopne
cli
nop
out
roll
mov
add
xor
dec
and
xchg
xchg
jbe
xchg
xchg
pop
mov
xchg
sbb
movsl
cmpsb
mov
stos
stos
lods
pop
adc
mov
cwtl
mov
mov
mov
and
aad
sarl
xor
imul
flds
mov
inc
loope
cmp
push
push
jge
ljmp
mov
lock
repnz
std
adc
dec
and
xor
ss
jp
sbb
ja
adc
sbb
inc
pop
inc
sbb
pop
xchg
push
adc
daa
xchg
mov
sub
xor
xchg
pop
xor
cltd
cmc
cmp
cmp
push
pop
mov
xchg
xorb
pusha
hlt
cwtl
jne
mov
mov
mov
int
cli
bound
xchg
das
cmp
imul
shrb
jno
js
loop
emms
jl
ljmp
pop
dec
pop
orl
mov
pop
and
cltd
sbb
and
pop
cmp
fnstenv
xchg
scas
scas
push
push
popf
add
int3
and
cmpsb
xor
cmp
lret
ds
lcall
mov
aam
fmull
mov
cmp
dec
or
addr16
stos
adc
loopne
es
cmc
pop
jno
imul
pop
xchg
idiv
incl
jae
enter
add
push
pop
or
cli
sti
xor
pop
xchg
add
push
jno
popa
ljmp
push
xchg
adc
xchg
pop
pop
or
pop
xchg
sub
xor
jp
pop
pop
ss
cmp
sbb
arpl
lcall
and
cmpsl
aam
xchg
ja
push
sub
pop
mov
mov
cmp
shr
mov
imul
out
xchg
xchg
jb
sti
cmpl
jg
or
stos
test
mov
call
xchg
xchg
outsb
ffree
mov
xor
lds
lret
lret
cmpsb
add
shrb
fdivs
fistpll
mov
out
dec
jg
in
cmp
add
scas
adc
into
inc
or
out
xor
dec
or
notl
in
sbb
shrl
out
in
and
jnp
adc
arpl
ja
or
pop
das
inc
and
jae
cmp
pop
dec
sub
jnp
dec
mov
cli
mov
adc
adc
inc
sbb
clc
pop
test
insb
dec
and
subl
inc
adc
addb
xchg
inc
inc
inc
inc
mov
insb
insl
dec
dec
pop
fistpll
dec
mov
mov
mov
mov
mov
mov
imul
sbb
sarl
cmp
push
into
stos
test
mov
call
xchg
xchg
outsb
mov
push
call
ljmp
int
shrb
fdivs
fistpll
xchg
pop
out
dec
dec
or
cmp
add
pop
adc
into
inc
fmull
out
outsl
pop
cld
dec
fcoml
test
cld
sbb
xchg
das
or
pop
cld
and
sysexit
adc
arpl
sub
mov
sbb
imul
mov
dec
dec
sub
add
add
xor
addr16
push
push
pushf
into
bound
sbb
inc
and
insl
dec
sub
jno
push
push
sub
pop
xor
movq
popa
cmp
adc
arpl
outsb
dec
mov
cltd
jbe
lds
sti
lret
inc
pop
outsl
aas
dec
sbbl
stos
mov
dec
mov
insb
insl
mov
xchg
xchg
jb
dec
in
mov
insb
fsubrp
jge
jle
xchg
cmpsl
test
fisttps
mov
out
into
fdivs
mov
mov
in
sahf
mov
lret
mov
xchg
pop
icebp
xlat
mov
cmp
fidivrs
in
sbb
or
add
or
int
lahf
sbb
rolb
push
repz
add
dec
clc
push
sti
xlat
sub
loop
clc
push
add
fsubs
or
cmp
repnz
popf
insb
out
fbstp
and
add
add
dec
xchg
inc
sub
arpl
push
movsb
dec
xor
imul
icebp
pusha
cltd
pop
inc
sbb
movsl
das
imul
push
jno
sub
movsb
sbb
pop
aaa
lods
sbb
jmp
inc
inc
inc
inc
inc
nop
cltd
mov
test
sub
mov
pop
mov
movsl
mov
xchg
scas
lea
inc
mov
lods
xchg
outsb
lret
mov
mov
xlat
add
cmpsl
addl
jae
mov
xchg
push
jp
mov
loope
fwait
lahf
ja
imul
mov
into
test
test
leave
pop
not
mov
sahf
cld
ljmp
ficomps
lret
add
mov
jmp
out
mov
jmp
idiv
and
fstl
sbb
ret
in
lret
daa
nop
pop
fsts
icebp
repz
cmc
sarl
pop
cli
push
call
cmp
sub
and
testl
xchg
mov
adc
sbb
sbb
and
stc
xchg
push
data16
sbb
ljmp
pop
xor
jns
cmp
inc
inc
sbb
dec
movsb
rorl
je
push
sub
mov
les
cmpsb
xlat
mov
leave
scas
mov
inc
mov
lods
xchg
outsl
lret
clc
sbb
rcr
mov
lret
test
xchg
fcmovb
scas
mov
adc
aad
xchg
imul
aam
xchg
repnz
ret
js
mov
sub
out
iret
test
mov
xlat
mov
hlt
in
shlb
fistpll
and
out
ss
loop
pxor
ds
ljmp
or
adc
loope
aam
mov
mov
in
add
fstl
ja
cmp
hlt
mov
cli
cld
cld
std
outsb
or
dec
ds
or
push
add
stc
adc
pop
and
sbb
mull
pusha
inc
and
sub
sub
jae
insl
push
das
mov
cmp
cmpb
popa
cmp
push
cmp
xchg
xchg
jne
push
sub
mov
and
cmpsl
cmp
scas
mov
mov
jo
stc
jg
pushf
jbe
push
rcrl
mov
leave
test
inc
lret
scas
mov
adc
fnstenv
and
mov
out
popf
mov
leave
movsb
add
scas
xchg
dec
repnz
mov
cmp
add
jecxz
sbb
or
enter
or
lret
daa
push
or
not
aad
sbb
sbb
fdivs
ret
and
sub
or
inc
outsb
lods
xor
jmp
arpl
pop
repnz
jnp
ds
clc
cld
aam
dec
inc
and
pop
mov
dec
sub
dec
xor
xchg
mov
adc
out
pushf
mov
aas
sbb
pop
inc
push
jp
sti
push
addr16
subb
or
je
xor
cmp
gs
pushf
leave
jnp
insb
inc
dec
and
test
push
push
das
sahf
pop
fwait
jg
mov
insl
cmpsb
xchg
cmp
subb
mov
insl
jno
mov
sar
jg
mov
jp
cmpsb
sbb
xchg
mov
ljmp
jo
pop
fcmovnb
fwait
mull
out
mov
stos
out
iret
test
scas
mov
mov
shll
add
mov
mov
or
mov
int3
push
jmp
sbb
rol
cmp
testl
in
add
xor
ljmp
sub
pop
cmp
imul
pop
mov
sbb
push
inc
daa
scas
push
xor
add
adc
xor
andb
mov
sbb
dec
jae
pop
xor
cwtl
mov
push
ja
fs
arpl
xchg
jo
mov
cwtl
js
movsl
mov
mov
xchg
jnp
stos
mov
lds
push
lds
jb
movsl
scas
xchg
das
shlb
mov
test
test
mov
inc
stos
lahf
fdivrs
mov
jecxz
lcall
enter
faddp
sbb
shrb
xchg
stc
fdivs
sub
mov
in
dec
cs
lds
xor
icebp
lret
int
into
iret
sbb
stos
inc
rcrb
fxch
inc
rcr
fnstsw
sub
ljmp
dec
jbe
cmp
repz
cli
push
sbbl
add
dec
jl
sub
arpl
adc
pop
push
push
cmp
popf
jae
inc
sbb
mulb
popa
inc
and
dec
insl
dec
daa
sub
jb
outsb
push
mov
cmp
jg
jnp
cmp
inc
inc
sbb
dec
movsb
shll
sub
mov
sbb
xchg
jl
lods
mov
push
divb
mov
outsb
jecxz
stos
sarl
mov
mov
movsb
jle
nop
mov
xchg
nop
ret
aam
mov
mov
inc
pop
mov
mov
loopne
lcall
enter
faddp
lock
in
push
and
pop
xchg
and
fdivl
cli
imul
push
pop
sbb
or
or
and
out
mov
enter
jo
add
sub
in
out
jmp
adc
sbb
clc
lret
data16
outsl
cmp
cmp
add
fimuls
inc
or
push
push
xor
lahf
push
cmp
jb
mov
inc
sbb
clc
pop
cmp
lods
and
sub
ja
xor
push
pop
sub
aas
fisttpll
fists
dec
dec
xchg
in
mov
push
sub
dec
xchg
pop
dec
mov
test
lahf
mov
inc
mov
cmpsl
xchg
insb
enter
cwtl
jb
dec
mov
aad
xchg
lds
jecxz
stos
xchg
setge
mov
nop
push
xchg
out
sbb
loop
cltd
popf
jne
lds
int3
cmpsb
stos
xor
call
adc
fnstenv
cmc
fistpll
out
les
and
adc
int
test
aam
pop
lret
and
fcmovu
mov
scas
sbb
loope
push
sub
and
call
stc
cmp
hlt
imul
cld
jno
cmp
jns
inc
and
orl
adc
dec
push
xor
xchg
das
pop
cmp
cltd
das
pusha
inc
add
dec
push
xor
dec
jo
cmp
jle
mov
adc
dec
pop
sub
outsl
dec
rcl
xchg
jne
sti
ss
jnp
push
push
pop
pop
mov
bound
fldcw
adc
nop
imul
dec
mov
lods
cwtl
jae
cld
outsb
mov
mov
jbe
cmpsl
orl
sti
jns
xor
cmpsl
pop
jge
movsl
jne
mov
mov
out
lahf
mov
inc
loop
test
jg
movsb
in
lods
and
mov
mov
loop
sbb
or
ret
lahf
jmp
call
dec
push
not
inc
ret
adc
icebp
cmpsb
fsubr
mov
xchg
sub
jecxz
lret
psubsw
jmp
in
ss
sub
repnz
out
imull
inc
pop
cmp
pop
add
dec
sub
sub
arpl
adc
pop
and
adc
popf
aas
popa
inc
sbb
mulb
pop
inc
and
hlt
jo
daa
sub
arpl
jne
das
mov
jge
xor
push
jo
popa
andl
push
js
adc
xchg
mov
arpl
inc
ja
ficoml
sahf
jge
add
adc
popa
stos
dec
mov
fsubs
imul
mov
mov
jae
js
mov
xlat
add
enter
pop
mov
mov
push
xlat
mov
add
test
pushf
and
call
fs
int
test
in
aad
mov
and
data16
loop
sbb
lcall
dec
enter
iret
cmpsl
push
pop
maskmovq
cs
andl
and
add
cmp
sub
in
shll
sub
in
dec
jne
cmp
repnz
jb
push
stc
push
andb
cmp
add
sub
xor
pop
dec
sub
mov
push
xor
xchg
aas
pop
cmp
cltd
aas
pusha
inc
int
push
sub
pop
outsb
xlat
cmpsb
dec
add
cmp
sub
ret
gs
jmp
ljmp
dec
lods
lods
orl
ret
and
pop
pop
mov
mov
fwait
cwtl
lods
scas
lea
fsub
pop
loopne
jno
mov
fidivl
jnp
ret
mov
push
addl
mov
jns
cmpsb
addr16
cltd
cmp
rcl
in
out
lahf
adc
movsl
fcomps
out
int
adc
mov
out
xlat
mov
jl
mov
and
sbb
cmp
int
jo
pop
add
sbb
rorl
and
fisttpl
fsubp
jecxz
sub
or
out
mov
mov
pop
push
icebp
hlt
div
and
ret
add
data16
and
cmp
or
jbe
adc
cmp
pop
icebp
pop
and
nop
mov
subl
add
insb
mov
dec
inc
je
mov
mov
inc
dec
dec
dec
xchg
pop
jo
dec
jg
cmp
push
push
scas
mov
mov
lea
ss
mov
outsl
in
jne
or
jp
jg
das
movsb
cmpsl
xorb
jecxz
clc
icebp
lea
xchg
or
cmpsb
push
popf
add
xlat
aam
ljmp
inc
repnz
mov
cli
imul
mov
sbbb
pop
sbb
cmc
sbb
cltd
rcl
ss
or
je
std
xlat
dec
in
adc
add
in
call
ljmp
dec
dec
pusha
pop
cmc
clc
cli
sti
sub
jno
cmpsb
int
add
cmp
push
xor
sbbb
inc
pushf
pop
cmp
cmpl
jg
inc
push
dec
call
jg
xchg
lea
sub
das
pop
test
movsl
sbb
cmpsb
add
cmp
int3
xchg
mov
inc
js
mov
mov
dec
dec
dec
push
xchg
xchg
je
push
sbbl
push
pop
mov
enter
bound
mov
xor
lea
jae
cmpl
jmp
test
mov
stos
xchg
mov
jmp
xchg
xchg
or
mov
fcmovnu
fs
int
sbb
lods
loopne
not
scas
sbb
mov
mov
mov
sub
enter
and
inc
mov
pushf
aam
cmp
andb
fistl
loope
mov
or
push
dec
out
jmp
xor
adc
out
pop
mov
dec
push
fs
stc
cld
ljmp
lret
or
outsb
lods
sub
or
adc
pop
adc
cmp
sbb
ja
xchg
ss
xchg
mov
sub
sub
subb
push
test
popf
cmp
aas
insl
push
xor
inc
inc
pushf
cmpsl
cmpsl
movsl
lock
sahf
mov
int3
cmp
rol
jge
cltd
add
push
aad
jecxz
fidivl
aad
outsb
fimuls
push
int3
call
aam
mov
jge
out
push
out
stc
xchg
xor
pop
nop
xchg
pop
addl
movsl
inc
sbb
xchg
lahf
mov
cld
outsb
and
stos
scas
and
mov
pop
in
jg
mov
mov
mov
aad
ret
push
int3
int
jp,pt
mov
cmp
pop
stos
lret
loope
cmp
inc
cs
shr
ljmp
hlt
cmc
dec
and
and
clc
stc
imul
add
cmp
xor
clc
dec
mov
icebp
je
adc
pop
dec
mov
sub
sbb
xor
mov
cmpsb
and
dec
outsl
outsb
fsubrs
fnstsw
mov
stos
imul
pop
mov
dec
dec
dec
leave
cmp
push
push
cmpb
cmp
mov
adc
fs
ja
insb
insl
fwait
outsl
loop
aaa
idivl
jb
fistpl
out
fisubl
test
dec
push
mov
jl
or
push
cld
pop
idivl
rcrb
icebp
or
and
mov
mov
imulb
test
sbb
add
mov
ret
or
fadd
enter
mov
rcl
xlat
inc
mov
rcrb
and
andnps
out
out
lock
imul
repz
pop
insb
add
jl
lret
loop
xor
adc
sti
push
pop
jb
dec
adc
int3
test
int3
xorb
aas
fbstp
cs
lock
inc
xorl
mov
pushf
inc
pop
aad
insl
dec
mov
fidivrl
jbe
push
push
movl
mov
call
jo
mov
cmp
dec
jmp
rcl
ret
jl
jle
fcmove
data16
mov
mov
out
decb
xchg
icebp
lcall
adc
insb
pop
je
test
add
xchg
mov
or
mov
addr16
pop
fstps
int
cmpb
ffreep
sti
push
cwtl
sbb
stos
ret
inc
inc
mov
push
mov
mov
ljmp
pop
push
mov
idiv
es
fdivr
cli
sti
push
inc
data16
add
cmp
or
jg
imul
jo
jb
dec
push
or
push
insl
and
and
sub
sahf
or
mov
pusha
xor
stos
adc
inc
pop
jmp
mov
dec
push
sub
movsl
pop
cmpsl
inc
mov
arpl
dec
data16
into
push
fiadds
fstl
inc
cmpsl
sarb
insb
mov
in
out
sub
mov
lea
stos
xchg
xchg
in
in
fnstsw
jge
call
out
mov
mov
ja
jns
lcall
jmp
popa
fistpll
hlt
cmp
jmp
jb
int
and
sarl
cmp
or
fidivrl
nop
rorl
jecxz
dec
sbb
in
sbb
jmp
repz
sbb
pop
ret
arpl
call
pop
or
jo
or
adc
daa
dec
add
push
xchg
pop
sbb
xchg
pop
pop
and
sub
mov
and
xor
push
push
xor
cmp
aaa
cmp
arpl
jo
cmpsl
fistpll
dec
ja
xchg
sbb
dec
cmpsb
jle
mov
dec
push
push
test
sbbl
arpl
ret
lcall
xchg
aad
loope
shrl
jge
and
imul
xchg
shr
mov
cwtl
inc
mov
lahf
ljmp
xchg
into
test
sahf
aad
push
pop
aaa
mov
mov
stos
loop
and
or
xor
sar
shl
jge
stc
aam
cmp
or
jle
jecxz
adc
sbb
adc
in
push
mov
mov
out
gs
xchg
idiv
add
insb
gs
cli
push
pop
xor
xor
jns
fidivrl
jge
lcall
sbb
imul
push
subb
pop
sbb
nop
nop
fcom
mov
xchg
cmpsb
mov
dec
hlt
xor
ds
aaa
shrb
lods
dec
lds
mov
inc
inc
adc
pop
push
pop
pop
mov
mov
mov
jg
xchg
movsl
ljmp
fidivrs
pop
arpl
orl
rcl
fadds
push
test
scas
xchg
nop
add
stc
mov
fwait
leave
hlt
sahf
adc
adc
mov
and
xchg
sahf
in
mov
sub
cmpsl
mov
cmpsb
scas
hlt
lea
enter
and
cs
cli
or
dec
xor
push
inc
dec
fdivrs
cwtl
cli
sahf
sub
jno
pusha
mov
in
xor
repz
imul
repz
out
xor
push
or
std
int
xor
js
or
mov
adc
inc
adc
xchg
scas
push
push
xchg
adc
aad
mov
mov
xchg
test
and
nop
jo
mov
ds
addr16
inc
jnp
xor
iret
mov
pusha
pop
push
pusha
xlat
dec
mov
nop
push
cmp
gs
je
push
fs
jbe
push
dec
cmpsl
ljmp
xchg
ljmp
icebp
xorl
cld
mov
ret
test
lcall
mov
sbb
icebp
shrl
lds
jbe
mov
jecxz
cs
sbb
fsubr
or
fucomip
adc
into
xor
inc
jns
jge
idivl
dec
arpl
loope
dec
and
call
scas
imul
mov
and
es
addr16
sbb
sti
outsb
fisttpll
or
push
aas
aaa
adc
out
adc
dec
inc
sbb
lret
pop
and
push
push
dec
es
sub
sub
push
xor
jmp
xor
jle
pop
cmp
cmp
jo
inc
push
lret
inc
dec
dec
mov
xor
pop
jge
jne
int3
dec
orl
pop
pop
pusha
test
das
lret
push
xchg
xchg
outsl
aas
out
mov
inc
repnz
enter
test
out
mov
add
sti
jbe
cltd
lcall
pop
or
push
loop
cmpsl
test
stos
repz
aad
scas
jg
cli
add
jecxz
mov
ljmp
hlt
lock
fwait
out
push
dec
sti
not
mov
fldcw
add
xchg
out
into
xor
adc
aaa
enter
mov
push
push
lret
inc
imul
add
push
sub
or
mov
enter
adc
pop
xchg
pop
sbb
cwtl
pop
sbb
dec
mov
push
sub
je
je
push
mov
cmp
inc
daa
sub
xor
xor
ss
aaa
movsl
rcrb
and
cmp
mov
cmp
mov
mov
jle
mov
insl
lds
popa
fistpl
sahf
jns
lock
ret
xchg
sub
stc
mov
mov
xchg
xchg
cwtl
push
decl
sahf
mov
lock
sbb
shrb
xchg
movsb
mov
rol
std
and
mov
int3
cmp
inc
mov
dec
pop
add
adc
push
jmp
pop
sti
adc
lret
pusha
fdivs
xchg
pop
bnd
bound
push
stc
leave
or
and
js
sub
xlat
daa
push
push
cmp
push
fisubs
pop
outsb
inc
cmp
dec
inc
sbb
add
push
dec
and
cmp
sub
xchg
push
push
adc
scas
xor
sahf
scas
aaa
aas
inc
xchg
addr16
jae
pop
or
xchg
dec
dec
sarl
push
test
inc
pop
into
inc
and
add
push
in
pop
xlat
mov
jno
test
push
out
outsl
jg
mov
inc
ret
stos
sub
dec
in
xchg
ss
ficoms
pusha
push
cmp
hlt
clc
push
aad
xchg
leave
movsb
add
xlat
imulb
mov
test
out
inc
mov
mov
pop
pextrw
sbb
adc
lret
mov
sub
mov
fcmovu
fidivl
in
push
sbb
inc
pop
sub
ficoms
dec
inc
stc
cli
insb
std
xor
push
pop
add
push
das
or
jp
subb
dec
pop
cmp
cmpl
orl
and
jl
pop
jb
sub
bound
xor
outsl
xchg
cmp
inc
movsb
lahf
mov
stos
lea
dec
stc
clc
cmpsl
ret
and
pop
iret
inc
and
popa
bound
xlat
dec
rcrl
insb
imul
jo
pop
fsts
jbe
jnp
push
push
pushf
ds
inc
sub
push
mov
int
mov
stc
mov
ds
cltd
bound
mov
or
bswap
pushf
push
iret
cmpsl
fcompl
rorl
mov
mov
fistpll
shll
test
leave
lret
mov
rcl
aam
sub
aad
xor
out
repnz
fldl
xor
jmp
inc
out
popa
aad
mov
hlt
cmc
imulb
gs
rclb
out
imul
or
outsl
dec
or
fimuls
ja
or
jnp
add
std
push
fisttps
push
adcl
xor
adc
ss
es
insb
inc
inc
inc
inc
mov
adc
subl
lret
sub
sub
bound
stos
bound
insb
fists
nop
jo
jae
out
jecxz
mov
jge
aad
stos
jnp
iret
jno
fimuls
mov
dec
divb
jp
xchg
add
mov
add
cmpsb
mov
or
hlt
fcmovbe
scas
loopne
cmp
mov
and
iret
sub
scas
or
mov
and
xchg
lods
rcl
aas
test
and
inc
cmp
fstp
and
or
vcvttpd2dqy
in
icebp
repnz
cmpsb
aad
cli
addr16
mulb
cmp
addr16
add
or
xor
cmp
cmp
adc
pusha
adc
cmpb
sbb
dec
ja
out
add
ja
xchg
and
xor
ja
pop
pop
xor
sbb
cmp
aaa
cmp
pushf
push
sub
jno
mov
xchg
mov
or
pop
pop
jo
arpl
jl
outsl
xchg
and
inc
pop
sub
mov
loopne
jp
or
scas
test
push
out
hlt
mov
in
pop
cmpsb
jns
sahf
or
lcall
mov
shrl
mov
mov
and
mov
mov
cmpsb
mov
ret
or
sbb
cmp
int
aad
mov
cld
xlat
or
sub
cmp
fndisi(8087
call
mov
iret
lock
pop
adc
bound
cmc
cld
std
inc
lods
sub
xor
pop
jecxz
add
outsl
add
adc
aas
imul
negl
sbb
pop
and
lea
outsb
jecxz
dec
sub
cmp
das
xor
lea
cmp
xchg
xchg
add
mov
inc
dec
xchg
push
mov
inc
dec
dec
push
xchg
sarl
sbbl
push
pop
cmpsl
pop
mov
ret
arpl
mov
insb
fsts
jae
and
insl
jae
jnp
out
mov
addb
addl
xchg
xchg
add
xchg
fwait
jmp
fwait
mov
lret
outsl
cmp
sbb
test
adc
andb
mov
adc
xor
int
adc
cli
cmc
rolb
lcall
xor
aam
loope
adc
stos
mov
ljmp
pop
push
call
dec
and
decb
pop
outsl
push
cmp
out
adc
jg
push
jp
push
sbb
xchg
sbb
and
dec
dec
and
or
sub
xchg
xor
cmpsb
sbb
js
cmpsl
cmp
dec
pop
jne
dec
jl
cmp
push
push
mov
dec
push
pop
pop
mov
fs
insb
mov
insb
jae
mov
cmpsl
inc
pop
pop
jnp
lret
jg
in
out
addb
ret
nop
std
mov
xchg
loop
add
mov
ret
sahf
iret
push
repz
add
mov
or
jns
xchg
mov
and
sti
mov
mov
mov
xchg
cmp
sub
cmp
rcr
fisttpl
xor
loop
dec
xchg
inc
inc
mov
sbb
jecxz
lock
aaa
les
sbb
and
cmp
clc
stc
dec
sti
pushl
insb
gs
incl
pop
xor
jg
aam
jmp
adc
xor
adc
mov
sbb
dec
push
sbb
adcb
sub
shll
xor
sub
mov
mov
stos
cmp
mov
mov
les
dec
mov
insl
mov
push
pop
pop
pop
test
xchg
mov
addr16
xchg
outsb
cmp
jb
mov
inc
and
jge
das
mov
orb
xchg
dec
mov
nop
xchg
ficompl
mov
lcall
scas
dec
mov
xchg
shll
and
mov
daa
mov
mov
add
and
imul
xchg
dec
adc
repnz
dec
sbb
add
aam
es
jge
fcmovu
sbb
out
jo
in
pop
adc
pop
add
sub
jge
sbb
jl
and
iret
es
inc
sub
dec
push
repnz
sbb
mov
ds
xchg
aaa
mov
sub
adc
push
dec
sub
dec
jne
pop
push
xor
dec
jl
arpl
or
adc
fs
mov
mov
sub
stos
stos
or
leave
daa
jp
pusha
popa
mov
addr16
fcom
xor
jae
cmp
insb
jne
ficomps
jmp
je
test
mov
mov
in
add
mov
add
mov
pushf
movsl
cmpsb
adc
insl
mov
lcall
addr16
call
rol
push
shrl
mov
leave
lret
lret
aad
not
ss
dec
call
fstps
test
mov
mov
push
push
scas
in
icebp
and
mov
idiv
daa
mov
sub
ss
es
mov
sarb
or
mov
jg
je
mov
jae
mov
xchg
dec
jno
xchg
pop
addr16
jmp
adc
call
mov
sub
cmp
fists
mov
pushf
inc
std
xor
insb
inc
nop
cmc
jp
dec
pmaxsw
cmp
push
push
mov
and
xchg
mov
push
lods
jno
aad
xor
lahf
jns
fildll
popa
addl
in
xor
std
pop
ljmp
mov
add
xchg
dec
or
sbb
stc
lods
jne
test
mov
or
in
xor
mov
sbb
sub
sbb
and
sub
rcl
add
inc
mov
ret
frstor
sub
or
inc
mov
lret
push
xchg
add
dec
imulb
push
inc
clc
rorl
add
in
retw
pusha
jae
orb
clc
into
xor
shlb
decb
sbb
cld
push
pop
xchg
adc
inc
xchg
dec
setne
push
lock
xor
roll
pusha
cmp
inc
test
icebp
stos
cmpsb
icebp
mov
fs
push
push
stos
scas
mov
int
and
popa
xchg
pop
mov
mov
mov
fwait
xchg
insb
jo
pop
outsb
jbe
pop
fucomip
inc
loop
outsl
inc
mov
es
icebp
stos
jp
cmc
scas
push
mov
ficoms
xchg
cltd
cltd
lcall
ljmp
sbb
sub
and
or
mov
mov
mov
bnd
movsl
enter
inc
mov
aad
add
dec
ret
fisttpl
mov
inc
test
mov
sbb
adc
data16
dec
pop
arpl
push
fwait
push
imulb
stc
or
inc
and
popa
mov
add
mov
cmp
inc
jp
fisttpl
stc
sbb
inc
sbb
and
jb
sub
xor
pop
xor
cmpsb
adc
jmp
inc
mov
mov
xchg
ja
rcll
push
push
push
dec
mov
xchg
pop
lahf
inc
vxorpd
es
adc
mov
int3
pop
lret
int
ja
pop
push
jmp
repz
sub
sti
mov
add
or
xchg
popf
sahf
add
outsb
cmpsb
clc
std
imul
test
in
sahf
and
adc
mov
mov
cmpsb
push
sbb
add
out
xor
xor
jae
cld
pop
in
das
add
movsl
pop
mov
aam
adc
sbb
pop
shrl
es
fdivl
jo
cld
inc
xor
add
fiadds
pop
outsl
lods
push
fisubrl
xor
jge
push
push
dec
jp
fdivrs
sbb
mov
les
and
pop
add
sub
fsts
movsb
add
cmp
cltd
inc
mov
jns
lods
mov
dec
dec
cmpsb
push
ret
aas
mov
stos
jl
pop
into
inc
rcll
aam
lret
int
sub
fstpl
movb
adc
leave
loopne
cmp
call
sub
jg
shrl
push
mov
sarb
mov
addr16
add
adc
cmpsb
lods
scas
hlt
and
jp
mov
stos
sub
cmpl
scas
nop
ret
iret
xor
rcrl
adc
dec
push
adc
es
jecxz
dec
test
jmp
es
inc
adc
int3
cmc
testb
outsl
jmp
xor
jns
or
ret
adc
xor
notl
cmp
ds
jbe
xchg
ret
in
and
ja
and
ljmp
sub
hlt
cs
and
scas
and
cmpsb
sbb
cmpsl
in
mov
inc
test
xor
xchg
jbe
mov
rcll
aam
daa
pop
pop
pop
push
ret
fs
ret
insb
jg
mov
outsb
jb
gs
cmp
jp
mov
mov
pop
addl
mov
xchg
pop
jnp
mov
ds
jo
xchg
aaa
fs
dec
dec
stos
sbb
push
not
mov
stos
mov
iret
mov
shll
push
out
cmpb
sub
lret
or
ja
mov
push
cwtl
orl
mov
out
data16
call
dec
and
sbb
daa
push
xor
fs
addr16
je
pop
and
jbe
sbb
inc
add
adc
cmp
push
mov
insb
pop
jge
sub
cmp
sub
add
cmp
bound
mov
push
dec
add
xchg
mov
mov
dec
dec
mov
inc
xchg
dec
enter
jge
mov
xchg
push
fldenv
lahf
test
push
les
lock
sbb
dec
dec
lcall
test
arpl
mov
sar
or
or
jbe
lahf
mov
or
push
cmovle
push
push
cmc
outsb
add
or
push
test
adc
lods
adc
das
call
nop
inc
cmpsb
lret
int3
xor
mov
inc
cli
mov
fdivp
pop
sub
loopne
pushf
or
adc
sbb
cmpsb
adc
ret
and
stos
push
push
stc
mov
pop
enter
add
stos
pop
ja
insb
mov
jl
adc
dec
call
cltd
cmp
pop
mov
sbb
nop
adc
fwait
sub
test
out
adc
test
cwtl
add
and
sti
sub
hlt
mov
or
cmp
adc
dec
dec
aaa
inc
adc
sbb
or
sbb
mov
nop
push
enter
lret
loop
loop
xor
jge
add
test
mov
cmc
mov
cld
cmc
rcll
lods
add
rcrl
popa
or
or
fnsave
mov
pop
sub
xor
sub
xor
add
int
cmp
iret
add
cmp
mov
std
xor
dec
mov
push
dec
stos
out
lock
pop
repz
scas
cmc
idiv
mov
bound
std
add
jns
or
cmpb
insb
outsl
fidivrs
ret
lea
nop
and
notl
xchg
mov
push
adc
aaa
cmp
sbb
inc
test
jmp
xor
test
mov
mov
fsubl
rolb
int3
test
jg
mov
iret
dec
push
out
jbe
pop
jns
je
mov
aas
cld
pop
test
insb
mov
clc
icebp
int
xchg
xchg
sar
push
xchg
cltd
lcall
pop
je
mov
add
push
lret
and
mov
in
sbb
mov
jae
ret
mov
pushf
leave
lret
fidivrs
xor
lcall
mov
cmp
cmp
clc
aam
or
xchg
ds
mov
fst
lock
gs
push
push
push
dec
es
outsb
shrb
scas
push
or
decb
popf
adc
adc
pop
dec
loope
hlt
sbb
ja
adc
jno
sub
cmp
sub
pushf
push
xor
and
cmp
mov
jo
inc
inc
je
icebp
insb
sbb
dec
dec
popa
mov
jbe
mov
ds
int3
mov
arpl
stos
mov
adc
vaddsubps
xlat
pop
jo
jns
push
shlb
push
addb
dec
std
test
sti
hlt
cmp
xchg
xchg
les
sti
inc
lcall
mov
jnp
test
adc
mov
loopne
dec
pop
mov
mov
inc
mov
mov
lds
lcall
scas
inc
aam
sti
lret
dec
lret
mov
fidivrs
mov
fisttps
popa
leave
icebp
add
cmp
repz
push
lock
data16
mov
ds
mov
jae
call
ljmp
xchg
lock
xchg
add
xchg
clc
pop
sbb
mov
cmp
sub
out
xor
xor
sub
mov
inc
inc
mov
jb
xchg
aaa
stos
cwtl
cmp
sbb
sub
inc
icebp
mov
push
lret
xorb
push
xchg
iret
enter
push
shrb
mov
dec
jbe
jne
popf
js
out
sub
cltd
dec
pop
pop
test
mov
xchg
cmpsb
fdivrl
rcrl
dec
and
mov
aam
test
push
test
mov
inc
or
mov
jge
lea
idivb
xchg
mov
sub
cld
cmp
jg
aam
add
mov
cmpsb
loopne
inc
test
dec
dec
nop
loope
ljmp
icebp
sarb
dec
push
push
cld
por
and
stos
push
jo
push
sbb
add
pop
adc
and
pushl
adc
sub
sbb
nop
add
lds
inc
repnz
daa
lcall
cmp
push
das
xchg
icebp
cmpsb
cmp
stos
and
pop
add
mov
cmpsl
outsb
cmp
adc
lods
mov
movsb
movsl
cmpsb
mov
push
enter
shll
pusha
rcrl
jbe
push
mov
adc
adc
rcr
out
cmp
iret
shrl
cmp
fwait
arpl
test
fdiv
inc
pop
mov
xchg
xchg
xchg
dec
sti
xchg
xchg
xchg
add
dec
xchg
sahf
lahf
push
cmp
pushf
movsb
movsl
lcall
repnz
std
fidivl
push
into
loop
xchg
ret
lds
fisubrs
sarl
test
lods
fcmovnu
fimuls
push
fisttpl
call
in
add
out
push
mov
sub
in
imul
pop
mov
je
add
pop
dec
mov
add
inc
shll
jae
mov
andb
ss
mov
xchg
pop
xchg
ret
xor
cmp
test
jns
pop
mov
lock
xlat
inc
dec
dec
dec
xor
ret
jo
mov
push
pop
pop
xchg
test
and
pushw
pop
iret
sbb
jno
pop
je
dec
jbe
jns
fnsave
jle
lods
jmp
adc
xchg
sbb
cmp
loopne
xchg
or
sahf
lahf
int
adc
movsb
pop
mov
stos
stos
adc
pop
mov
jle
mov
and
scas
mov
cwtl
mov
sbb
loop
sub
lret
int
cld
rolb
shl
mov
sti
aad
xchg
lret
ds
fnstsw
cmpsl
jecxz
in
cltd
shr
jmp
xor
fists
out
repnz
clc
imul
icebp
std
aad
pop
add
icebp
sub
imul
in
or
adc
inc
rcll
adc
sbb
insl
xchg
mov
and
jbe
sbbl
mov
mov
xor
cmp
test
inc
mov
imul
cmp
dec
dec
test
lds
mov
int
mov
nop
into
xchg
push
sbb
xorl
loopne
push
rcl
jnp
ret
repnz
inc
dec
jle
xchg
sub
mov
jnp
lcall
sub
pop
push
mov
incl
sbb
cmc
sbb
scas
mov
in
fistl
test
data16
xor
mov
xchg
xor
xor
xor
xor
icebp
int
add
out
ljmp
lock
lock
or
sbb
addr16
pop
cmc
jo
dec
lcall
pop
hlt
sub
insb
enter
inc
adc
and
add
adc
outsb
ror
add
push
mov
jmp
cli
es
xchg
jle
addb
bnd
sub
mov
arpl
inc
inc
jge
mov
mov
and
mov
add
inc
pop
pop
jb
test
popa
fsubs
iret
mov
xor
jae
fidivrl
pop
pusha
in
flds
xor
in
xchg
loope
movsb
cmp
mov
push
xchg
pushf
popf
jecxz
repnz
movsb
movsl
or
xlat
and
or
je
mov
pop
in
shlb
mov
je
sub
sar
xchg
push
cmp
xlat
dec
cli
lahf
sbbl
xor
loope
or
cmpsb
sbb
jmp
push
pusha
sbb
dec
sti
push
movb
testl
mov
or
push
daa
popa
xor
jl
rorl
push
pop
inc
ficomps
sbb
add
push
xchg
dec
adc
lea
sub
sub
popa
mov
test
cmp
cmp
or
dec
mov
xchg
jbe
sbbl
pop
pop
pop
daa
inc
pusha
popa
and
arpl
push
pop
rolb
outsb
outsl
lock
jo
js
out
and
mov
addl
mov
imul
mov
xchg
xchg
cld
pop
repnz
and
lahf
mov
movsl
fldl
sbb
jbe
mov
loop
mov
mov
sbb
test
fidivl
jmp
inc
aaa
xor
xchg
in
shll
cltd
lahf
adc
push
sub
cli
jp
psubsw
pop
rorb
xchg
push
mov
hlt
clc
sub
and
imul
mov
push
dec
or
or
cmp
imul
adc
xor
inc
lea
je
xchg
inc
mov
xchg
dec
lret
pop
sub
jmp
ret
xor
divb
cmp
add
inc
inc
cltd
mov
xchg
lahf
mov
pop
inc
dec
dec
movsl
jl
inc
and
inc
scas
mov
mov
lea
mov
push
into
pop
insl
outsl
jo
test
cltd
jae
mov
out
cmp
addl
pop
mov
add
push
mov
xchg
or
sahf
lahf
int
les
sbb
push
stos
lods
adc
sbb
outsl
lods
mov
jecxz
dec
sbb
rcr
pop
out
les
out
mov
and
loope
mov
mov
repz
xlat
inc
and
mov
loopne
sbb
xor
dec
pop
sbb
mov
jo
repnz
mull
outsb
out
jnp
or
jbe
dec
adc
push
imul
fldenv
pop
sbb
add
mov
jns
outsl
or
lea
sbb
jnp
push
ljmp
add
cmp
addr16
sahf
jne
xchg
stc
dec
dec
movsb
jl
jae
adcb
push
lahf
jg
rcll
jge
aad
gs
scas
lea
roll
outsl
pusha
xchg
jb
xor
sub
jns
cmp
jg
dec
lock
mov
xchg
ret
pop
jns
fadds
push
ret
lret
or
mulb
mov
xlat
mov
sub
xlat
jecxz
in
sbb
mov
and
cmp
lret
int
adc
inc
adc
inc
xor
setge
jg
add
shrb
jmp
adc
mov
push
insl
push
incb
jb
add
push
jb
pop
insl
mov
dec
das
aaa
mov
ja
ficomps
sbb
loope
int3
sbb
test
or
jns
mov
sub
pop
sub
stos
jnp
xor
cmp
jbe
adcl
stos
cmpsl
stos
mov
movsb
div
movsb
mov
push
push
push
jle
mov
stos
mov
iret
xor
and
adc
outsl
jno
jb
cmp
xchg
call
mov
inc
xor
lcall
xchg
arpl
lods
adc
pushf
or
push
lds
arpl
mov
push
es
or
jns
bound
movsb
or
aad
ljmp
adc
cmp
dec
sti
aad
movl
repz
loop
fsubr
pop
incb
decl
xor
out
idivb
push
push
add
dec
and
push
iret
jo
push
jb
adc
pop
inc
cmpl
push
dec
and
outsl
and
sub
test
xchg
and
xor
popa
mov
shlb
cmp
lahf
fldl
stos
xor
imul
dec
dec
sarb
out
push
cmp
inc
jl
daa
rcrl
fwait
lods
push
into
xchg
mov
xchg
das
inc
sbb
imul
pop
jb
adc
pop
ja
mov
call
clc
xchg
orl
cli
jns
fwait
pushf
imul
std
repz
or
push
push
nop
lods
add
jl
mov
subl
adc
hlt
popf
add
xor
fcmovnb
int3
int
cld
js
scas
mov
rcl
cmp
test
cmp
dec
cmpsb
stos
inc
cwtl
out
ss
pusha
add
push
jg
hlt
cmc
and
sahf
adc
cmp
inc
int
in
pop
or
jno
jmp
adc
enter
sbb
sbb
and
sub
push
lock
sub
xchg
pop
or
mov
aaa
push
cmp
scas
test
and
js
scas
and
push
push
jg
out
push
push
pop
adc
xor
popa
bound
gs
imul
lahf
aad
lret
je
int
cmp
jecxz
cmp
addl
push
clc
aas
out
nop
xchg
into
xchg
shlb
nop
add
xchg
cmpsb
cmpsl
adc
mov
fistpll
fs
sbb
mov
sub
ret
xor
add
dec
add
inc
rolb
lds
or
fiadds
dec
cmp
dec
std
push
fwait
inc
jmp
in
push
inc
rcrl
sahf
sub
push
sub
stc
icebp
sti
cld
outsb
loop
jp
aaa
popf
cld
push
pop
jns
jo
std
jae
or
pusha
xchg
cmpl
dec
in
pop
and
nop
dec
es
xchg
lea
mul
fdivs
xor
cmp
outsb
pop
scas
icebp
inc
inc
stos
jmp
int3
jno
adc
mov
lods
scas
lret
cltd
pop
push
mov
mov
stos
dec
out
pushw
push
xor
jno
xchg
jns
pop
pusha
scas
mov
xchg
jl
jg
outsb
jl
test
xchg
jb
jl
lea
cmp
jns
xchg
add
sahf
mul
xchg
sbb
mov
cmpsb
or
add
sahf
adc
cli
cmpsl
xor
mov
imul
mov
mov
lds
sets
lret
xchg
out
iret
shlb
xchg
sub
dec
in
movsb
push
add
fists
stos
xchg
xchg
in
popl
pop
jb
xchg
out
lock
xor
imull
mov
arpl
dec
lret
subl
or
jno
addr16
dec
and
dec
jmp
inc
push
and
and
jb
test
sbb
cmp
aas
inc
inc
scas
mov
in
push
dec
or
dec
dec
dec
mov
push
test
pop
rcrb
aam
or
xor
addr16
fs
cwtl
fs
fisubs
iret
mov
inc
sub
in
fcmovnu
ja
sub
lods
cmp
xchg
int3
mov
adc
sbb
add
shrl
dec
movsl
cmpsb
push
dec
xchg
jecxz
hlt
mov
mov
or
mov
mov
outsb
ret
test
and
rcl
rolb
ds
out
fcomp
pop
nop
push
add
or
add
push
dec
cli
in
in
sbb
icebp
icebp
repnz
jnp
sbb
cli
insl
in
jl
add
insb
gs
into
xor
sub
cli
push
jns
sbb
sbb
arpl
and
and
and
sbbl
shrl
das
xor
inc
mov
sub
gs
inc
mov
or
jmp
dec
adc
dec
test
lock
js
sbb
add
mov
ret
push
popa
leave
test
fisttps
sbb
jbe
fnsave
jle
lods
fadds
sub
fnstsw
std
div
mov
ret
inc
xchg
xchg
xlat
inc
repz
add
movsb
pop
mov
daa
mov
lods
ficoml
jmp
addl
adc
nop
mov
addb
ret
stos
ror
test
push
add
mov
aam
inc
ljmp
or
inc
mov
xor
ljmp
jecxz
lock
pop
xchg
loopne
mov
pop
pop
pop
movsb
mov
sti
cmp
js
jae
add
or
jecxz
adc
js
outsb
outsl
mov
inc
fwait
pushf
sbb
or
lea
dec
pop
clc
ja
xor
fstl
mov
outsb
pop
mov
inc
inc
inc
mov
xchg
stc
dec
dec
xor
lods
lods
sar
pop
int
sbb
inc
subb
xor
insb
insl
add
js
jp
imul
addl
mov
pop
out
xchg
xchg
cli
push
lock
or
mov
mov
movsl
or
add
mov
sub
out
jmp
imul
mov
insl
mov
sbb
je
lret
int3
int
shll
xor
inc
pop
add
cmpsb
ret
loope
dec
movsb
ds
fimull
ljmp
hlt
cmc
imulb
mov
pusha
mov
jo
or
or
adc
cmp
jge
sbb
mov
fsubrp
or
sub
sub
pop
xchg
nop
inc
sub
xor
scas
pop
xor
pop
fdivrl
cmp
inc
jno
xor
dec
dec
dec
std
test
mov
ret
add
mov
dec
ret
arpl
js
imul
jo
scas
mov
jne
and
jge
xor
addl
out
mov
push
mov
mov
dec
stc
popf
sahf
lahf
clc
retw
dec
mov
lcall
mov
pop
or
fdivs
mov
mov
xchg
vcmppd
movsl
outsl
in
enter
ror
into
rolb
das
sahf
ret
xchg
fiaddl
ss
rolb
jecxz
call
in
inc
mov
xchg
out
lock
mov
dec
call
cli
push
inc
add
add
dec
pop
or
mov
jmp
ja
push
adc
push
orl
xlat
push
jns
and
nop
or
dec
sub
xlat
das
xor
fwait
mov
lock
inc
inc
inc
mov
imul
repnz
dec
mov
cmpsl
test
mov
cmp
mov
dec
mov
bound
cmpsb
addr16
mov
cmc
imul
sbb
jnp
scas
ret
jg
sub
xchg
mov
cmp
mov
xchg
xchg
xchg
pop
jo
xchg
xchg
add
cmpsb
xchg
lahf
mov
pop
setg
imul
push
ds
mov
out
pusha
mov
sub
xor
mov
iret
sarb
xor
leave
aad
add
cmp
or
repnz
in
shll
out
mov
nop
jmp
inc
pop
push
add
cmc
testb
mov
arpl
sti
push
pop
jb
iret
cmp
jo
or
adc
add
push
adc
add
inc
sbb
and
or
xchg
scas
shrb
jbe
ss
cmp
sub
outsb
xchg
mov
jnp
dec
dec
ljmp
sbb
cli
push
push
mov
inc
push
sbbl
add
int
outsl
jo
inc
in
xchg
jb
sub
mov
jl
jecxz
imulb
loop
sti
je
out
nop
xchg
clc
cmc
aad
xchg
xchg
into
xor
fwait
pushf
popf
mov
icebp
lcall
test
sbb
loop
ret
and
mov
in
mov
mov
add
daa
push
ret
enter
inc
lods
lret
int3
xor
mov
cmp
test
dec
mov
lods
leave
push
mov
in
sub
loopne
aad
hlt
cmc
dec
cmp
jb
clc
rol
cld
std
arpl
lock
or
ja
dec
push
movups
mov
enter
std
jg
lret
inc
push
push
cmp
mov
dec
sub
inc
sub
xor
xor
ret
loop
cmp
movsb
lock
inc
mov
jnp
dec
dec
dec
mov
mov
dec
push
push
ret
pop
pop
pop
fsts
pop
arpl
lods
shl
lea
inc
imul
jb
lcall
jle
dec
inc
inc
mov
xor
mov
aas
rcl
xchg
xchg
mull
les
pop
pop
mov
outsb
inc
fldt
or
das
fidivl
mov
mov
rol
ret
and
int3
int
out
iret
imul
lret
ds
xchg
adc
push
dec
jnp
in
in
xor
out
and
stc
stos
sub
lds
add
adc
or
ja
divb
or
adc
cmpb
sbb
dec
xchg
push
jmp
xchg
dec
and
pop
and
and
cmp
movsl
sahf
ds
inc
outsb
lods
movsl
push
aas
inc
inc
lea
outsb
dec
jp
cmp
mov
push
pop
pop
movsl
outsl
mov
fcmovne
pop
pop
movb
push
mov
fwait
ret
fcmovbe
fldt
jne
mov
rcl
jle
outsb
movsl
xor
xchg
jge
mov
xor
xor
mov
lods
jge
rcrl
insb
adc
cmpsb
cmpsl
neg
lods
shrb
lods
mov
sub
mov
insl
inc
in
enter
int3
int
xor
aam
add
outsb
push
fldenv
dec
add
push
out
int
xchg
adc
push
loope
push
icebp
lock
cmp
imul
enter
add
pusha
popa
cld
outsl
test
or
jb
pop
sbb
orl
push
int3
dec
and
sub
scas
push
xor
stc
cmp
jo
sub
xor
hlt
xor
mov
sti
je
mov
pop
xchg
pop
rorb
jl
gs
or
imul
mov
shll
je
mov
js
out
addr16
cmpb
sub
jae
mov
std
jns
lock
nop
xchg
xchg
rcr
adc
popa
pusha
pop
lahf
mov
movsl
jge
sbb
imul
lods
xor
mov
sub
mov
les
enter
iret
rcl
lcall
lods
push
stc
aam
dec
ret
mov
and
dec
dec
call
xor
fdivrl
pop
fwait
sbb
push
inc
and
add
mov
push
iret
xchg
mov
or
push
mov
xchg
sbb
pusha
or
inc
sbb
andl
and
push
insb
mov
lahf
pop
hlt
pusha
jmp
xor
adc
cmp
cs
inc
or
js
cmp
jb
push
push
iret
push
push
fwait
inc
add
mov
mov
ficoml
jl
insl
outsb
rcll
mov
jae
leave
mov
jnp
bound
and
jg
mov
clc
insb
dec
cs
mov
xchg
xchg
xchg
xchg
ret
fadd
adc
cwtl
pushf
ja
mov
test
jo
mov
jbe
mov
ret
pop
mov
sbb
adc
scas
and
adc
rcrb
inc
jmp
out
lret
lea
sub
xor
sysenter
test
clc
ficoms
sub
pusha
or
scas
jecxz
jmp
inc
loop
jnp
repz
cs
pop
jmp
xchg
push
cld
std
xor
mov
add
or
mov
ficoms
mov
ret
ret
sbb
jp
cmp
sub
push
imul
push
xor
aaa
cmp
inc
mov
or
out
mov
dec
push
push
mov
push
lahf
pop
adc
pop
les
or
mov
push
insb
das
pop
pushf
jb
aaa
jnp
ljmp
sub
lods
pop
jl
mov
das
xchg
or
std
aad
sahf
lahf
in
sbb
pop
popa
cmpsb
cmpsl
adc
mov
mov
cltd
jp
pop
mov
push
pop
int
jnp
cmc
mul
xor
lds
mov
lret
lock
es
and
dec
into
dec
mov
ficompl
xorl
push
add
dec
dec
and
jmp
shll
xchg
ffreep
or
sbb
dec
loope
bound
add
add
jo
loope
iret
out
or
jns
ljmp
sbb
lea
cmpb
sub
and
cmp
push
testl
xor
mov
pop
or
cmp
ds
cmp
mov
orb
xchg
xchg
jae
jg
cmp
push
push
ret
pop
pop
pop
mov
inc
daa
mov
bound
or
sub
sbb
lods
adc
fdivs
jl
arpl
addb
push
out
pop
insl
ret
call
mov
xchg
xchg
xchg
xchg
add
int
popf
sahf
lahf
or
or
dec
lret
cmpsb
sbb
adc
sub
and
lahf
add
cmp
mov
lds
sub
leave
lret
adc
dec
repz
sub
fmuls
and
pop
add
cmp
cmp
out
out
lock
and
es
adc
and
push
lds
mov
add
cmpsl
inc
or
push
sbb
dec
ret
add
popl
in
ret
pop
and
es
sub
aam
xor
sbb
sbb
inc
inc
inc
jno
jecxz
inc
inc
mov
test
dec
xchg
ss
push
sbbb
cld
push
push
mov
cltd
popa
bound
fimuls
mov
in
xchg
jne
ja
pop
cmc
sahf
jns
inc
cmp
jg
and
mov
xor
adc
add
rcrb
jo
sahf
lahf
stc
or
jg
xchg
outsb
pop
imul
stos
test
or
mov
popf
mov
mov
out
lcall
sub
fwait
daa
xchg
xlat
inc
stos
inc
pushf
push
loop
movsl
dec
dec
and
jmp
test
int3
and
xor
stc
cli
sub
outsl
jecxz
and
add
stos
or
jno
sbb
into
add
adc
sbb
sbb
xchg
add
and
in
sub
xor
popa
lahf
cwtl
or
cmp
push
cmp
inc
mov
sbb
jp
iret
repz
dec
mov
jb
mov
add
sub
pop
pop
mov
gs
xchg
cmp
ds
in
inc
xchg
loop
jp
jl
aas
jmp
test
jp
sarl
hlt
dec
jbe
jns
lret
out
fstl
sbb
pop
arpl
cltd
or
fldt
sub
mov
ret
je
mov
js
adc
rcrb
cmp
mov
lret
xor
jge
aam
xor
test
add
movsb
sahf
fnstsw
inc
mov
popf
adc
mov
adc
hlt
cmc
pop
mov
push
in
pop
ljmp
lcall
jl
add
or
data16
adc
pop
repz
aas
sbb
loopne
pop
test
jnp
pop
mov
push
sub
test
cmpsb
push
das
clc
out
xor
notb
push
icebp
mov
or
scas
or
adcb
popf
add
jle
and
pop
pop
pop
les
mov
xchg
addr16
xchg
outsb
aaa
out
jb
fnstenv
out
stos
jl
fld
cmp
test
dec
out
xchg
xor
mov
and
ret
pop
pushf
popf
add
cli
xchg
pop
mov
cmpsb
cmpsl
add
ss
lods
jbe
jae
mov
je
rsm
sbb
call
pop
cmp
ret
mov
sub
in
addl
pop
jo
add
and
push
add
in
inc
das
push
out
out
lock
mov
dec
push
cli
lods
cs
incl
dec
jmp
add
jp
cs
xchg
xor
pop
mov
adc
ret
fstps
sbb
jne
xchg
aaa
and
push
andl
sub
jno
movsb
push
sub
xor
mov
ss
xchg
adcl
test
sahf
lahf
mov
lods
push
push
push
sahf
insl
lcall
rolb
pop
pusha
mov
data16
out
push
shrl
jne
test
push
xor
jg
cltd
sti
test
mov
mov
pop
out
xchg
xchg
cli
push
lock
push
mov
push
sar
mov
in
movsl
pop
int
icebp
mov
xchg
fnstenv
fnstsw
mov
aaa
fcmovnb
jns
daa
lret
int3
int
mov
rcrl
scas
dec
sti
mov
aaa
and
stos
jecxz
in
dec
test
inc
pusha
add
mov
testb
lahf
jo
cli
inc
mov
xchg
sub
add
dec
mov
out
push
pcmpeqw
imul
lret
dec
jns
push
pop
imul
test
dec
and
dec
sub
xchg
push
sub
mov
test
repz
cmp
push
inc
hlt
jbe
inc
inc
dec
xchg
sub
xchg
mov
mov
push
push
mov
aad
sbbl
and
xchg
push
mov
out
jno
ret
xor
fdivrl
rcl
outsb
loopne
cmpsb
jg
fmul
lret
cld
stos
xchg
inc
mov
xor
mov
clc
adc
fwait
fs
pop
lahf
mov
cwtl
or
test
es
jns
jo
mov
ja
adc
sarl
lds
fisttps
adc
inc
repz
cwtl
xchg
cld
rcl
das
sbb
mov
inc
mov
call
in
out
cmp
ss
push
insl
sbb
shll
adc
add
out
push
pop
insl
leave
arpl
adc
inc
jno
push
pop
arpl
pop
add
inc
sbb
inc
and
xchg
dec
and
subl
out
das
xor
lcall
or
jecxz
inc
inc
stos
pop
mov
js
dec
stos
cltd
push
into
jp
push
ret
adc
pop
rcrb
push
les
arpl
xchg
outsl
sub
aad
lret
int3
fsts
js
aad
push
clc
movsb
jg
addl
adc
gs
push
cwtl
cltd
lcall
notb
mov
into
test
scas
adc
or
cmpsb
sbb
loopne
mov
jecxz
xchg
jge
ret
sub
jmp
pop
nop
dec
clc
rcrl
lcall
loope
ds
popa
or
in
in
push
scas
dec
dec
in
stos
sbb
notl
mov
and
mov
add
push
insb
push
das
or
push
ret
mov
adc
aam
pop
jge
jae
jno
jge
mov
dec
daa
lock
sub
out
mov
in
cmp
arpl
mov
stc
mov
lods
pop
inc
dec
dec
jge
cmp
lret
mov
lea
movsb
fs
sbb
mov
sbb
mov
inc
ret
cmp
in
fcmovu
jbe
jb
xchg
mov
push
out
xchg
xchg
stc
push
out
lock
xchg
ret
stc
out
sbb
mov
test
push
add
mov
push
cld
or
fnstsw
mov
mov
push
in
mov
adc
inc
repnz
jecxz
rcl
cmp
add
fdivrl
or
loop
out
out
dec
test
test
xor
sbb
rol
sti
cld
bound
sub
test
or
jecxz
adc
ja
insl
outsb
or
aas
sbb
ja
push
lcall
es
addb
xor
inc
idivl
cmp
movsl
or
les
adc
or
push
mov
lods
lods
dec
mov
mov
popa
flds
fs
daa
rol
iret
add
mov
lcall
loopne
xlat
jb
stos
ret
addl
push
out
mov
xchg
cmpsl
fcomps
sbb
lahf
push
or
add
or
popf
sub
jne
mov
mov
test
ret
pop
or
xchg
jecxz
int
xor
sub
cmp
xlat
fdivs
mov
add
cmpsl
lahf
loop
dec
movsl
aas
inc
fisttpl
cs
in
dec
aaa
call
scas
idiv
pop
mov
testl
subb
or
add
pop
jae
loop
inc
sbb
and
mov
jbe
stos
push
xor
out
ss
popf
stc
xchg
xchg
das
mov
popf
mov
insb
inc
adc
add
mov
test
inc
mov
xchg
push
push
mov
sub
ret
sbb
and
stos
push
mov
jmp
sub
rcl
outsb
loopne
mov
daa
stos
xchg
inc
mov
xor
rclb
rcrb
push
cld
std
sbb
scas
scas
mov
lcall
cmp
fidivrs
mov
jmp
enter
and
cs
dec
repnz
dec
aam
dec
push
add
loope
and
in
out
shrb
push
xchg
add
adc
in
sub
arpl
stc
outsb
fbstp
xor
push
push
mov
adc
popa
adc
jle
sbb
and
aad
and
adc
ret
das
xchg
shlb
pop
mov
mov
xor
mov
test
cs
inc
dec
lahf
adc
dec
dec
cmpsl
xchg
cmpsb
leave
jbe
sbb
or
push
mov
sarb
pop
pusha
mov
data16
out
push
shrl
sbb
mov
inc
ss
out
js
repnz
or
xchg
xchg
sti
push
icebp
repnz
call
fstps
sbb
pusha
test
pop
mov
mov
inc
xor
mov
mov
mov
fiadds
enter
in
inc
hlt
iret
cwtl
out
rcl
cmp
test
fstp
cmp
std
pop
or
lods
jecxz
call
inc
loope
movsb
xor
repz
cmp
ret
std
rcrb
push
fs
out
xchg
push
xlat
out
adc
jns
outsl
jo
jge
pop
sbb
jns
sbb
loope
sub
xchg
in
xor
mov
pop
cmp
ret
idivb
xor
inc
mov
dec
push
jecxz
push
push
mov
mov
mov
bound
out
data16
ret
les
lods
stos
jo
int
and
pushf
ja
xor
fcomp
je
add
xor
jecxz
nop
xchg
notl
out
mov
out
lcall
mov
cmpsb
or
add
sahf
adc
in
mov
cli
mov
je
mov
mov
add
lds
into
iret
or
ret
mov
iret
and
ret
lcall
pop
ljmp
data16
mov
pop
mov
add
push
jns
dec
xchg
jge
or
out
push
pcmpeqw
imul
dec
sbb
sbb
xchg
inc
and
jecxz
and
sbbl
ret
xor
sub
pop
cmp
ret
cmc
cmp
mov
cmpsl
mov
inc
dec
mov
je
sbb
or
push
mov
mov
aad
stos
push
shrl
pop
test
jo
cmpsb
andb
sub
jp
pop
fwait
mov
pop
mov
cwtl
cltd
lcall
notb
mov
adc
shrb
mov
jb
or
mov
push
and
jg
sub
xor
rcl
dec
int3
sbb
mov
inc
mov
and
pop
jecxz
popa
arpl
hlt
cmc
pop
mov
push
in
pop
ficoms
incl
jbe
dec
push
jp
pop
shl
mov
push
daa
adc
bound
inc
push
out
and
mov
jg
sbb
xor
xor
cmp
movsb
movsl
push
inc
inc
dec
mov
jno
adc
mov
lods
scas
dec
mov
pop
rclb
mov
out
addr16
pusha
sarb
jno
jbe
insl
mov
inc
xor
in
fcmovnu
ja
push
cltd
mov
out
mov
pop
ret
dec
xchg
xchg
cld
pop
repnz
jbe
lahf
mov
stc
sbb
test
jecxz
lods
lods
adc
or
mov
cs
in
xor
mov
les
xchg
and
rolb
sbb
dec
sti
lahf
mov
fildl
aaa
cmp
inc
lret
cmc
in
jmp
pusha
adc
mov
movsb
icebp
repnz
mov
dec
ljmp
jae
dec
cmp
add
jecxz
or
outsl
lret
add
push
adc
pop
mov
pop
dec
mov
in
rcrb
and
mov
sub
mov
push
xor
jmp
xchg
xchg
das
mov
inc
mov
outsb
dec
adc
add
mov
stos
stos
inc
mov
pop
iret
push
movsb
popa
roll
fs
daa
rol
iret
test
outsl
jae
push
xchg
ljmp
jl
ds
je
test
adc
push
out
xchg
xchg
stc
push
out
lock
dec
stos
pushf
popf
mov
sbb
movsl
outsb
jecxz
test
pop
mov
mov
sub
mov
shll
sbb
xlat
lret
inc
pop
mov
mov
fdivrs
lcall
loope
out
out
pminsw
push
mov
dec
out
and
hlt
inc
divb
add
jecxz
add
arpl
jo
sbb
adc
or
cmp
sbb
sbb
jp
xchg
cs
sub
push
das
clc
out
xor
notb
inc
cmp
mov
mov
add
mov
cmpsl
test
mov
pop
push
push
pop
int3
push
mov
es
pop
popa
enter
pop
int3
pop
jb
insb
jo
addr16
cmp
fistpll
aad
jno
mov
addb
mov
inc
lea
xchg
pop
xchg
xchg
cwtl
out
arpl
popa
sti
and
into
test
scas
push
aad
and
stc
mov
and
cmp
out
sub
int3
cmp
shlb
mov
lock
pushf
imul
cltd
jecxz
dec
cmpsb
inc
inc
pop
aam
mov
dec
pop
pop
pop
icebp
stc
cli
inc
jns
sti
cld
sub
add
sbb
or
push
jbe
xor
adc
imul
imul
mov
sub
pop
xchg
cmp
lahf
sarl
xchg
xchg
inc
push
sub
imul
xchg
cmc
xorl
aad
sarb
into
jae
jno
dec
test
stos
mov
mov
icebp
push
imul
cwtl
jae
adc
jnp
out
dec
inc
add
jg
fmul
mov
stos
xchg
aas
mov
xor
xchg
xchg
xchg
in
in
popa
pop
sbb
stc
cli
and
aam
mov
cmc
lods
lods
scas
testl
mov
xor
jns
lds
xchg
and
iret
sub
cmpsb
inc
cli
aad
ret
mov
fiaddl
ss
push
or
ret
pop
or
scas
out
ljmp
sub
and
sbb
rol
sti
cld
bound
and
daa
rolb
mov
imul
aas
sbb
adc
cltd
dec
and
adc
sub
js
hlt
iret
mov
xor
jle
scas
pop
cmp
das
ds
scas
data16
test
mov
cs
jbe
mov
pop
and
jmp
pop
ret
mov
push
arpl
push
imul
xchg
gs
pusha
jb
jp
sub
cmpl
dec
or
push
jecxz
xchg
xchg
clc
push
out
out
or
or
lahf
mov
or
test
stos
scas
mov
pop
mov
mov
mov
rol
xor
fld
lret
call
iret
sarb
jbe
cmp
faddl
movsb
or
fsubp
out
jo,pn
sub
inc
inc
lock
loopne
repnz
repnz
sti
inc
mov
cmpsl
push
cmpsl
jle
push
jl
or
out
cld
xor
aas
pop
std
mov
adc
jnp
adc
pop
lods
pop
and
sbb
lea
xor
cmp
addr16
jle
aas
inc
inc
mov
or
int3
inc
dec
lods
jmp
adc
dec
dec
pushf
test
push
inc
jp
hlt
dec
push
pop
pop
shrb
pop
stos
dec
fmull
insb
shrb
enter
sbb
jbe
xchg
icebp
ret
mov
popf
and
stos
test
je
pop
pushl
nop
lret
xchg
fidivrs
cltd
or
shl
mov
or
lea
int3
js
pushf
fldt
gs
or
adc
addr16
mov
ret
sub
add
pushf
inc
rcl
inc
mov
sbb
or
lock
loop
popa
sbb
in
scas
cmp
ljmp
icebp
repnz
stc
lods
cmp
std
pushl
sub
add
insb
enter
or
adc
cmp
sbb
xchg
inc
pop
jmp
subb
dec
sub
out
cs
xchg
icebp
mov
xchg
or
cwtl
xchg
out
inc
inc
lods
or
les
lahf
aaa
sbb
pop
pop
pop
mov
into
roll
popa
enter
fcoml
fists
push
aaa
shlb
jne
mov
inc
ret
push
jl
jecxz
divl
cli
outsb
aad
push
mov
nop
jmp
xchg
pop
sub
cmc
adc
std
jno
loope
inc
jbe
stos
lods
push
xchg
add
andl
xor
xor
fcmovnb
int3
int
dec
push
hlt
iret
add
cmp
fnsave
cwtl
sub
jmp
mov
lcall
mov
pop
or
cld
std
outsl
ljmp
cli
add
push
dec
sbb
or
push
movups
outsl
cmp
ffreep
stos
sbb
sbb
mov
dec
clc
push
lret
ljmp
xor
ss
cmp
ds
mov
mov
cwtl
jb
inc
adc
mov
jle
dec
dec
push
lea
lods
subl
inc
and
popa
bound
push
nop
imul
pop
js
fidivs
jns
jle
jns
xor
test
dec
adc
lea
push
mull
and
adc
popf
insl
std
call
je
add
and
jecxz
mov
pop
jae
push
sub
icebp
push
mov
lret
shlb
ret
jbe
mov
leave
cmp
int3
aas
mov
xor
aas
cmp
rcr
fisubl
pop
adc
fmull
loop
mov
mov
xor
cmp
in
mov
sbb
popa
pop
or
sti
cld
sub
pop
mov
lcall
cmp
jp
pop
or
js
and
adc
inc
adc
sbb
mov
jecxz
cmpsl
and
xchg
ss
cltd
xor
cs
cmc
dec
xor
mov
cmp
nop
inc
or
roll
lods
or
push
dec
push
push
dec
pushf
or
call
mov
imul
int
scas
outsl
jo
scas
pop
ficoml
pop
jnp
jge
je
push
shlb
test
jle
push
scas
nop
xchg
pop
mov
sbb
mov
pushf
popf
add
cli
xchg
pop
inc
cmpsb
cmpsl
stos
push
mov
scas
js
aas
mov
sbb
adc
ret
or
jmp
out
lret
lea
sub
xor
dec
sub
frstor
dec
movsb
ds
fimull
jmp
lock
cmp
sbb
mov
pop
mov
jge
add
pop
jp
dec
insb
pop
xor
aam
lcall
or
cmp
sbb
xchg
adc
and
out
es
jmp
notl
xor
mov
add
enter
add
imul
rcrl
push
push
mov
mov
arpl
pop
stos
mov
mov
out
imul
leave
fs
pop
xchg
jne
jp
jno
ret
int
jle
or
fnstsw
jnp
pop
lods
mov
repnz
xchg
pop
ret
and
lcall
test
lahf
lock
jecxz
mov
pop
jae
push
test
mov
adc
call
enter
and
rcl
dec
int
pop
sub
fisubl
inc
mov
mov
jmp
push
inc
push
icebp
mov
pop
mov
inc
sbb
add
sti
dec
sub
or
jecxz
or
jae
imul
pop
sbb
inc
pop
call
mov
addb
xor
pop
ss
enter
std
xchg
cwtl
xor
dec
mov
jb
push
jecxz
push
push
mov
mov
pusha
rcll
insl
mov
fs
iret
sub
popa
rorl
nop
jb
ja
outsb
mov
inc
or
js
push
cmpsb
mov
scas
loope
xchg
pop
and
xchg
std
pop
repz
popl
push
mov
pushf
in
mov
jecxz
lods
scas
adc
or
cmpsb
sbb
iret
mov
mov
cmp
rorb
xchg
and
iret
roll
sbb
es
xlat
mov
inc
sahf
cmp
aam
push
cld
in
ljmp
out
mov
jg
repz
mov
push
jmp
push
adc
std
add
add
into
jecxz
or
jo
data16
sub
punpcklbw
ret
lods
and
xchg
jge
sbb
das
mov
pop
xor
mov
xchg
xchg
xor
inc
mov
outsl
dec
adc
fisttpl
mov
stos
lods
inc
mov
pop
rclb
scas
xchg
jecxz
gs
sub
ret
pop
rcr
subl
out
mov
inc
ret
or
aas
jne
std
lcall
nop
xchg
into
aaa
cli
mov
xchg
cmc
jns
pushf
popf
adc
push
xor
add
mov
daa
stos
cld
gs
fnstsw
mov
mov
neg
mov
ds
hlt
iret
cwtl
out
rcl
cmp
hlt
repz
loop
fldcw
cmpsl
in
or
scas
out
ljmp
push
fmuls
hlt
cmc
stc
insb
lock
rolb
std
mov
add
push
insb
fsubs
or
addl
mov
cmp
jg
jne
adc
daa
lcall
hlt
out
das
xor
lcall
xor
inc
or
into
inc
inc
lods
or
aas
push
push
push
enter
cmpsl
jle
and
in
pop
les
mov
push
addr16
icebp
mov
cld
je
rcl
insl
fistpll
idivb
and
lods
xchg
adc
jmp
xchg
xchg
lcall
sahf
addr16
sub
add
lods
mov
test
inc
add
mov
ret
inc
mov
pop
mov
scas
mov
enter
xor
icebp
int3
xchg
jecxz
rcl
aaa
xchg
sub
fcmovu
fists
daa
pusha
xor
jecxz
out
out
dec
stos
inc
inc
loopne
fcmovu
icebp
repnz
imul
ret
movl
call
addb
ret
pushf
adc
jae
or
pop
and
sub
rclb
and
ss
pop
cmp
mov
fwait
pushf
aaa
test
dec
rolb
jbe
sbb
fcoml
mov
shrb
pusha
xlat
pop
lods
mov
jecxz
insb
insl
shrl
leave
lret
inc
pop
jbe
jnp
jb
ror
movsb
jg
or
loope
out
imul
fcmovb
in
xchg
pop
and
clc
xchg
add
test
sti
shrb
mov
je
rsm
sbb
lahf
mov
or
adc
les
das
mov
mov
rcl
dec
into
pop
adc
add
movsb
data16
inc
mov
aas
int
ljmp
pop
repnz
pop
mov
lahf
out
add
push
cs
jecxz
or
imul
cmp
sbb
adc
inc
and
jecxz
and
mov
addl
mov
add
cmp
mov
or
inc
dec
mov
mov
push
sbbl
pop
int
mov
nop
sub
and
mov
cmpsl
ret
ja
jns
and
ljmp
dec
xchg
xchg
repnz
xchg
ret
xchg
xchg
xchg
fwait
scas
sahf
jecxz
popf
or
cwtl
movsl
cmpsb
aam
mov
stc
xchg
sti
scas
std
xchg
and
fidivrs
lea
push
aad
mov
ss
lret
cmp
aaa
xor
aam
xlat
ljmp
inc
mul
loop
dec
inc
mov
push
dec
ret
lock
pop
push
leave
shl
mull
std
sub
arpl
jecxz
add
loop
or
mov
fdivrs
adc
mov
xorb
and
push
jnp
cmp
jo
daa
jg
sub
sub
adc
aaa
gs
cmp
test
stos
mov
lcall
mov
sub
subb
pop
mov
leave
ret
arpl
addr16
mov
imul
xchg
jo
xchg
pushf
jbe
fstl
psrlq
orl
lea
loop
cwtl
cltd
lcall
sahf
addr16
sub
add
lods
mov
test
push
push
fidivl
mov
mov
dec
ret
ret
les
cld
sbb
int
or
shll
scas
aad
xlat
dec
into
pop
jo
add
movsb
push
cmp
fmuls
jmp
inc
mov
addr16
cmc
pop
mov
dec
insb
and
ja
and
insb
gs
into
cmp
stc
inc
insb
add
cs
mov
test
pop
push
pop
dec
and
fs
es
lcall
xchg
roll
xchg
inc
das
ss
gs
push
nop
cmp
add
jb
aas
inc
push
pop
xor
jbe
xor
dec
dec
movsl
adc
mov
push
scas
and
pop
pop
lods
cmpsb
stc
mov
pop
out
push
push
outsb
outsl
imul
dec
push
jns
into
test
addl
sub
push
xchg
xchg
fstps
pop
inc
and
fiadds
addr16
or
subb
mov
cwtl
mov
orl
fimuls
fidivrs
mov
mov
mov
loop,pn
iret
sar
cmp
inc
leave
xlat
sbb
or
inc
test
cmp
push
dec
push
fucomip
in
sbb
movb
cmc
dec
cli
or
bound
dec
sbb
pop
xlat
out
push
rcrl
push
xlat
cmp
add
or
xchg
sbb
sub
cs
xor
ss
pushf
fimull
sahf
dec
cmp
inc
outsb
pop
xor
lods
pusha
adc
jl
repnz
push
push
mov
pop
cmpsb
cmp
popa
movl
insl
outsb
outsl
and
jbe
inc
jns
pusha
jl
dec
inc
je
jg
fidivl
mov
test
xchg
xchg
push
jle
or
sahf
or
test
movsl
and
test
psubq
jns
aaa
mov
and
scas
mov
rorl
insb
mov
cmp
aad
add
lcall
fstp
inc
mov
push
dec
aaa
fucomp
in
sbb
inc
adc
hlt
cmc
pop
mov
push
outsb
jmp
add
adc
add
push
nop
or
dec
mov
jp
mov
sbb
or
js
test
and
dec
lods
sub
mov
and
imul
push
lds
inc
stc
mov
dec
mov
mov
adc
pop
mov
out
sbb
rcr
bound
xchg
lret
imul
bound
mov
jne
pushf
je
jbe
sub
mov
hlt
icebp
icebp
mov
mov
sbb
adc
push
mov
lock
adc
lods
mov
sti
mov
mov
call
mov
mov
notl
xor
fstpt
ss
xlat
fadds
mov
test
sub
out
aas
in
call
fcoml
out
pop
pop
inc
in
div
ds
sub
stc
cli
cmp
sub
js
or
jmp
das
or
push
dec
pusha
xor
pop
sbb
sbb
inc
sbb
and
and
sub
jae
jg
das
popf
xchg
inc
xor
cmp
pop
aad
cmp
inc
inc
jl
fisttpll
aaa
aas
mov
dec
push
push
sarl
mov
lret
lods
loop
mov
int3
or
insl
outsb
popf
ss
jno
jbe
inc
jo,pt
jns
jle
gs
movsb
jg
xchg
xchg
repnz
xchg
xchg
pop
jo
xchg
xchg
in
pushf
dec
fistps
int
cmpsb
cmpsl
adc
lret
mov
out
scas
mov
fbstp
and
pop
mov
mov
lds
add
int
lock
rcl
cmp
fcomps
jg
fimull
movsb
pop
jge
loopne
dec
dec
clc
loop
ljmp
out
out
push
xchg
sbb
hlt
cli
sti
popw
ret
sub
imul
push
xor
mov
dec
or
mov
pushl
adc
sbb
dec
add
popf
dec
and
push
sbb
pop
ja
jle
xor
shlb
ds
cmp
fbld
sbb
in
dec
dec
xchg
push
push
push
push
sarb
test
pop
mov
movl
push
addr16
ror
insl
jae
loope
jo
stc
loopne
sarl
jg
jecxz
jns
test
mov
jecxz
mov
push
adc
jl
sti
mov
jo
sahf
lahf
mov
int
stos
stos
jno
xor
mov
mov
pop
iret
divl
rol
mov
mov
mov
xor
sti
lret
sahf
mov
fcomp
and
fnstsw
loope
inc
add
scas
jecxz
jmp
in
repnz
addr16
stos
push
cmc
sti
cld
addr16
mov
add
daa
add
or
pop
push
andnps
adc
leave
push
bndldx
loope
mov
test
sbb
fistpll
sub
sarb
cltd
xchg
xchg
aaa
cmp
test
jge
inc
inc
jno
cltd
mov
inc
sahf
lahf
dec
pop
xor
dec
mov
push
sahf
decl
add
filds
fimull
jnp
pop
push
mov
popa
je
les
mov
jg
xchg
push
dec
in
mov
fcoml
mov
fwait
pushf
test
arpl
fdivrp
mov
pop
outsl
sbb
ret
mov
pop
add
mov
sbbb
adc
xor
cs
xlat
ror
test
rcl
inc
mov
fdivrs
fcmovu
loopne
cmpsl
push
and
out
mov
dec
popa
jmp
nop
lock
cmc
push
idiv
std
ret
jo
jmp
out
push
ljmp
xor
hlt
push
sbb
gs
jb
fcoml
and
out
push
lret
imul
cwtl
mov
cmp
mov
in
mov
sub
stos
mov
inc
dec
dec
dec
test
fidivs
mov
add
ljmp
and
mov
push
loop
xlat
xchg
pop
scas
jecxz
pop
jp
dec
mov
icebp
pusha
dec
popf
out
cmpsb
push
repnz
das
ret
div
rcrb
mov
idiv
or
sub
adc
mov
lds
lods
scas
scas
in
lods
sbb
clc
mov
and
mov
repnz
mov
inc
and
iret
aaa
jne
into
lods
hlt
xchg
shlb
loopne
test
loope
jecxz
xorb
and
shr
hlt
or
xchg
clc
icebp
sti
cld
outsl
jmp
add
adc
pop
or
jbe
iret
cmp
jae
adc
adcb
inc
pop
mov
and
orl
sub
xor
adc
push
fwait
dec
cmp
inc
inc
inc
push
xlat
mov
mov
mov
push
jle
out
push
push
mov
pop
push
pop
pop
shll
xor
imul
fst
mov
ja
cmpsb
aas
mov
jp
mov
fidivs
mov
sub
add
repnz
les
das
cwtl
cltd
pushf
rorb
xchg
loop
and
scas
scas
scas
scas
scas
mov
pushf
sbb
cmp
cmpsl
mov
les
sub
leave
lret
xor
imul
cmp
fcompl
dec
inc
push
loopne
out
push
scas
dec
mov
jmp
mov
cmc
pop
cwtl
loope
out
insb
adc
icebp
cld
add
pop
xor
dec
cmpsl
push
pop
outsl
lods
neg
sbb
dec
mov
sbb
fs
ds
and
mov
out
out
sub
xchg
in
xchg
sub
cmp
jno
mov
scas
mov
mov
outsb
dec
dec
add
xchg
push
push
pop
pop
or
pop
pop
pop
pop
adc
pop
arpl
fsubl
cltd
cltd
xlat
rolb
xchg
mov
pop
adc
shr
loop
jl
test
imul
das
cwtl
div
repz
xchg
xchg
add
ficomps
out
mov
test
stos
sbb
adc
call
pusha
and
aaa
in
xor
mov
xbegin
int
cmc
pushf
aam
and
fsubr
xlat
enter
jns
fucom
jecxz
mov
and
push
in
in
aaa
scas
and
repnz
sahf
jno
stc
push
out
pusha
fwait
testb
cmp
imull
decl
or
sbb
xchg
scas
adc
insl
and
mov
sbb
sbb
out
shlb
or
sub
adc
xchg
shll
xor
dec
aaa
ds
test
mov
jb
pop
filds
scas
in
push
inc
inc
mov
dec
push
push
scas
sbb
clc
push
pop
mov
xchg
push
arpl
push
pop
movsw
pop
imul
popa
fdivrl
jne
lret
int3
jecxz
mov
jle
xor
fisttpl
and
mov
or
cltd
lcall
out
aam
mov
daa
pusha
cmp
shrb
mov
push
adc
push
mov
movsb
mov
ds
test
sbb
iret
cmp
fadds
lahf
pop
outsb
fcmovu
xor
push
fisttpl
mul
out
push
ljmp
arpl
mov
mov
push
ret
jo
decl
ss
mov
xor
add
or
jnp
adc
push
pop
xchg
out
out
mov
imul
xchg
sub
das
mov
mov
xor
sbb
and
or
pop
scas
in
pop
mov
mov
dec
push
push
scas
sbb
repz
pop
mov
xchg
pop
arpl
push
add
movsl
pop
imul
popa
fdivrl
jne
lret
int3
sarb
dec
aad
jo
jle
leave
inc
mov
test
add
mov
and
xor
sbbl
cmpsb
push
fwait
push
ja
scas
mov
or
dec
mov
jbe
sahf
mov
cmp
shl
cmp
xchg
int3
iret
rcl
sub
out
sbb
aad
dec
test
aas
pop
fsub
loope
push
jge
jecxz
pop
into
push
dec
inc
out
out
mov
mov
icebp
popa
push
lods
cmp
arpl
add
jo
fldl
shl
adc
fsub
cmpsb
adc
cmp
xchg
and
jl
and
and
sub
loopne
sub
xor
cmp
in
jl
cmp
xchg
jb
test
xchg
scas
lcall
push
push
stos
ret
push
pop
pop
test
movsl
popa
lret
iret
int3
enter
fsts
xlat
inc
jae
jns
shlb
adcb
repz
mov
nop
sarb
cld
adc
push
mov
mov
mov
mov
lret
cmpsb
jo
stos
stos
cli
jecxz
les
push
sub
test
mov
arpl
adc
xor
aam
cmp
cmpsl
or
loope
enter
in
jmp
out
pop
ficompl
std
bound
lret
inc
jl
pushl
push
pop
or
iret
dec
cmpsl
or
jnp
add
or
lret
and
sbb
test
mov
push
sub
cmp
das
xor
ss
mov
cmp
imul
mov
imul
cmp
dec
dec
movsb
mov
push
mov
popf
pop
pop
ret
add
lds
mov
cwtl
rcl
jo
jno
mov
jne
into
jnp
bound
jge
in
mov
test
mov
xor
mov
pop
lods
xchg
stos
jp
mov
in
les
movsb
repz
lods
out
roll
jle
sarl
mov
xchg
mov
testb
ror
iret
rcl
inc
mov
fcmovnu
or
jecxz
lret
rcr
jmp
push
mov
in
push
push
shl
cmc
mulb
sub
cld
std
bound
adc
into
or
stc
ja
fadds
adc
mov
nopl
mov
push
outsl
and
xor
xchg
add
lahf
aam
das
cmp
adc
inc
inc
mov
xor
dec
push
mov
sbb
push
push
sarl
les
mov
bound
jecxz
fs
fs
fistpll
aad
bound
je
cwtl
push
outsl
jge
jmp
test
inc
shrb
sti
mov
xchg
xchg
loop
pop
mov
inc
cmpsb
or
adc
outsl
fadds
pop
adc
jge
mov
stc
pop
hlt
mov
push
mov
mov
outsb
cli
lods
enter
xor
roll
xlat
ljmp
sub
test
xor
std
jmp
mov
out
cmc
les
clc
stc
dec
jle
push
imul
push
pop
xor
or
sbb
jne
xlat
push
pop
inc
faddp
mov
sbb
xchg
push
mov
push
out
jecxz
sub
test
loop
xor
xor
cwtl
sub
cmp
push
cmp
addr16
inc
mov
mov
enter
mov
mov
mov
test
mov
fs
iret
sbb
xor
outsb
xor
fisubrs
fcoms
xchg
lret
loop
mov
jge
imul
ljmp
lea
out
mul
pop
cwtl
cltd
loopne
movsb
fcompl
xchg
leave
movsb
adc
sbb
lods
hlt
push
loope
scas
mov
pop
sbb
pop
xor
mov
mov
das
sub
ret
adc
sbb
int3
std
xchg
cmp
sarb
js
sysenter
int3
int3
aas
and
fstp
cmp
xor
jmp
ljmp
mov
jl
push
imul
xor
out
pop
or
sbb
jae
xlat
adc
inc
fadd
xchg
sbb
nop
add
and
and
push
in
out
daa
sub
xor
popf
xchg
jbe
aaa
cmp
test
inc
mov
scas
cmpsl
pop
or
ja
out
dec
dec
push
ret
aaa
mov
and
mov
into
test
int3
leave
lods
sub
iret
jg
jo
mov
mov
sub
jl
inc
pop
lock
out
mov
icebp
ljmp
mov
xchg
stc
aaa
cmp
ja
pushf
popf
or
gs
testb
out
stos
mov
mov
cwtl
mov
xchg
jge
mov
mov
inc
push
lock
mov
hlt
iret
add
lcall
fstp
or
pop
push
loopne
dec
xchg
push
inc
fcmovnu
dec
inc
shr
in
inc
repnz
pop
pop
or
stc
cli
sub
scas
aas
incl
add
cmp
cmp
sbb
inc
stos
pop
aad
adc
gs
xchg
ljmp
xchg
and
sub
sub
sbb
cmpsb
lahf
fisttpl
inc
inc
outsl
or
mov
inc
mov
jl
dec
dec
dec
mov
push
inc
lds
xchg
ret
es
pop
mov
and
leave
pop
push
ror
pop
ss
insl
fwait
outsl
and
fcoms
fisttps
cmp
test
mov
jmp
push
mov
push
cmp
xchg
xchg
jmp
sti
stos
xchg
pushf
popf
jmp
add
and
scas
sbb
jbe
pop
push
pop
iret
cmpb
sti
mov
test
xor
xchg
int3
int
jne
mov
rclb
jns
push
jns
fmuls
fdivp
ror
loopne
sub
or
mov
mov
icebp
add
loope
repz
cld
outsb
lret
add
add
ror
push
mov
fs
sbb
adc
pop
jae
lcall
sbb
es
out
dec
mov
jno
xor
push
xor
cmp
mov
mov
xor
dec
mov
push
sbbb
ljmp
sbbl
rorw
mov
insb
shll
jp
jl
scas
inc
dec
adc
jmp
test
mov
cmp
cld
pushf
xchg
popf
sahf
or
iretw
testl
test
jmp
add
mov
cltd
mov
mov
gs
movsb
mov
inc
imul
loope
mov
fistpl
mov
loope
loopne
or
sbb
in
pop
mov
repz
cmp
cmc
mov
jno
pop
add
push
jnp
or
fstpt
and
adc
pop
call
sbb
sbb
and
out
sub
jae
jne
das
clc
jl
ss
mov
test
or
inc
inc
scas
in
cmp
and
push
push
stos
mov
pop
sahf
cmp
pop
mov
repnz
pusha
enter
ret
mov
outsl
loop
aaa
xchg
or
jae
sbb
shr
insb
stos
call
xorl
loopne
mov
iret
nop
xchg
cld
cmc
std
popa
xchg
xchg
fstl
xchg
cwtl
cltd
lret
xor
lahf
shufps
stos
sbb
cmpsl
adc
mov
fsubrs
mov
mov
ret
icebp
das
sub
adc
repnz
xor
into
aad
sbb
mov
dec
jae
fidivs
dec
inc
mul
out
xor
sbb
push
xchg
cld
pop
push
pop
xabort
fs
bound
add
dec
push
pusha
or
movq
in
sbb
dec
lcall
sbb
xchg
cltd
xor
cmp
sbb
pop
jne
ja
xor
cmp
pop
cmpsl
cmp
movsl
jecxz
js
insl
or
xchg
orb
jne,pt
mov
jae
pop
pop
lret
sub
and
cmpb
addr16
inc
fisubrl
aad
push
imul
insl
sahf
rcr
sub
jne
jle
out
jg
test
xchg
sub
ja
cmp
xchg
nop
xchg
cwtl
jnp
shl
data16
bound
cmpsl
sbb
xchg
inc
stos
stos
sbb
movsl
pop
loop
mov
scas
mov
jno
mov
sbb
and
sub
stc
aam
xchg
inc
cmp
push
int3
daa
or
or
lods
stos
ljmp
out
mov
imull
aas
in
mov
outsl
incl
retw
clc
push
or
or
jns
adc
inc
pop
notl
leave
or
and
and
sub
sbbl
fwait
sub
es
gs
xor
cmp
mov
jb
test
xchg
dec
xchg
jb
jle
cmp
push
push
ret
mov
pop
ret
popf
push
or
ds
addr16
rorl
dec
arpl
in
shlb
ds
and
in
ja
xchg
out
and
jg
mov
inc
ret
fistl
or
fwait
pushf
testb
fs
movsl
cmpsb
jae
cmove
scas
lahf
adc
mov
sub
mov
mov
push
xchg
lret
int3
cli
xor
and
inc
aam
inc
cld
aam
aas
iret
shl
loope
add
mov
ljmp
icebp
aaa
in
cmp
repz
cmp
clc
stc
push
push
add
xor
fbld
or
pcmpeqw
add
faddl
test
ljmp
popa
and
sub
prefetcht0
lcall
xor
mov
mov
inc
push
daa
xor
inc
ja
in
xchg
jno
push
pop
sbb
push
push
inc
jle
xchg
clc
push
push
popa
aam
sub
sub
scas
call
aam
jb
je
shll
jns
movsb
mulb
jg
out
js
aad
mov
repz
xor
lcallw
xor
out
cmpsl
test
or
cmpsb
lods
scas
scas
bound
mov
mov
push
add
xchg
rol
mov
fmulp
iret
sar
rolb
lcall
je
fcmovnu
inc
sub
mov
push
pop
call
aam
out
dec
and
or
in
testl
cs
adc
rcl
mov
push
cmpps
adc
aas
xchg
cmp
ffreep
mov
sbb
test
lret
pop
test
sbb
ja
xor
xor
std
mov
cmp
test
jg
push
xchg
imul
mov
cmp
mov
push
pop
pop
lret
stos
pop
setg
popa
bound
push
insl
mov
mov
cmp
je
mov
call
xorl
lock
mov
mov
add
pushf
mov
out
stos
add
sbb
jb
es
mov
sub
mov
mov
insb
leave
lret
adc
cmp
rcl
cmp
sysenter
int3
dec
divb
fists
dec
inc
cmc
out
jmp
out
out
fidivl
pop
cltd
or
idiv
ljmp
add
insb
sbb
or
xor
jl
push
jb
je
sbb
ret
loope
xchg
fwait
repz
xor
fwait
sub
imul
xor
mov
mov
cmpsl
mov
jo
sub
push
mov
xorb
adc
jle
and
pop
pusha
daa
data16
bound
lcall
subb
jae
inc
mov
test
pop
out
jge
inc
push
hlt
addb
mov
pop
stc
repnz
xchg
mov
add
push
adc
or
sbb
scas
mov
ja
and
mov
test
lods
sub
es
rol
testb
adc
lret
daa
xchg
push
inc
rcl
sbb
xor
push
push
add
cmpsl
jl
in
out
mov
xor
xor
in
mov
das
repz
mov
xor
in
pop
fwait
movb
add
push
jns
into
xchg
jns
or
dec
add
insl
cmpl
out
inc
push
dec
call
mov
adc
sub
movsb
ja
cmp
xchg
add
cmp
xor
inc
fwait
ss
cmovp
scas
pop
dec
push
push
jg
cmp
jo
pop
pop
movsb
sbb
inc
pop
pusha
mov
lea
adc
outsl
leave
mov
mov
jns
jnp
xlat
inc
outsl
loope
dec
addl
push
xchg
sti
mov
jmp
clc
jnp
lcall
sahf
add
cli
xchg
adc
add
sbb
mov
mov
cmpsl
and
add
push
xor
cld
scas
lret
rcrb
dec
clc
rcrb
xor
pop
es
test
in
out
inc
mov
dec
jnp
out
out
dec
icebp
fs
cmc
gs
aaa
lock
push
out
popa
xchg
movl
dec
sub
or
rcrl
adc
xchg
pop
cmp
sbb
sarl
and
imul
xchg
sub
nop
in
xchg
ss
cmp
popa
cmp
mov
or
push
push
mov
adc
testb
imul
pop
pop
adc
fdivs
insl
loopne
xor
mov
aas
push
mov
data16
mov
ja
mov
xchg
push
mov
fs
mov
cwtl
cltd
add
or
insl
xchg
pop
test
sbb
push
sahf
out
cmpsl
movsb
push
ja
mov
into
mov
movntq
out
repz
enter
xor
lret
rcl
add
cmpsb
cmp
fnsave
push
loope
es
mov
mov
icebp
sub
in
jnp
stc
cli
push
shll
clc
jo
lret
xchg
jae
pop
out
cs
push
sbb
inc
jmp
adc
es
jl
addl
mov
aaa
add
rorb
inc
inc
jnp
adc
stos
aad
dec
dec
dec
rcrl
push
push
xchg
mov
dec
mov
nop
mov
imul
outsl
jo
cmpl
fidivl
loopne
popl
inc
addb
xchg
cli
mov
xor
add
fistpl
adc
stc
mov
sbb
mov
les
adc
mov
and
lret
push
push
repnz
xchg
cmp
xlat
xlat
fadds
out
fchs
loope
jecxz
lret
dec
out
inc
inc
push
push
add
icebp
repnz
aaa
sbb
and
cli
bound
lret
pop
or
dec
das
or
aam
jb
adc
fdiv
adc
sbb
pop
mov
and
sub
push
push
sub
xchg
rcrl
xor
cmp
scas
add
mov
mov
mov
pop
inc
dec
dec
xchg
dec
xor
push
sbbl
mov
pop
pusha
popa
cmpsl
mov
arpl
imul
enter
xor
ja
fimuls
scas
dec
xor
addl
mov
movsl
xchg
xchg
lds
sahf
lahf
adc
cmpsb
adc
mov
fdivl
sbb
mov
push
aam
jbe
imul
mov
rol
push
xor
cmp
iret
sarb
jbe
popf
add
daa
and
fisubrs
sbb
jnp
out
out
dec
icebp
fs
cmc
gs
aaa
lock
push
out
popa
xchg
les
add
xchg
sub
popa
shlb
or
movhps
adc
add
test
sbb
and
dec
and
out
cmp
divb
jnp
jp
aaa
push
cmp
roll
dec
jg
adc
scas
ja
push
push
stos
push
push
sbb
add
and
fs
sub
imul
subl
mov
ret
mov
add
mov
hlt
mov
xchg
cwtl
cltd
cmp
fsts
or
test
xlat
jo
adc
xor
push
and
shr
sub
ret
xor
mov
sub
cmp
ret
cmp
mov
cld
aam
inc
inc
int3
cmpsb
loope
dec
inc
mul
out
cs
sub
ljmp
dec
pop
pop
or
stc
cli
inc
or
jmp
push
insb
imul
das
sarl
jnp
je
adc
push
pop
sbb
pop
xor
cmovbe
xchg
nop
or
sub
jno
pop
adc
lods
pop
xor
push
sub
outsb
xchg
test
mov
pop
inc
dec
dec
jp
cmp
ds
xor
cmpsb
pop
jo
dec
test
jbe
addr16
dec
outsb
outsl
les
mov
jne
ja
inc
add
jg
pop
les
mov
and
pop
and
xchg
xchg
repnz
mov
mov
cmpsl
test
iret
xchg
adc
mov
sbb
es
inc
mov
roll
rol
hlt
lea
enter
enter
leave
aam
inc
stc
leave
aas
cmp
rcr
fimuls
push
jecxz
adc
insl
loope
jmp
push
push
add
icebp
repnz
sbb
and
cli
push
imul
sbb
jno
dec
jbe
pop
or
outsb
test
push
pop
and
xchg
sub
and
sub
sbb
fwait
lcall
push
loopne
mov
xor
adc
pusha
dec
cmp
mov
lret
sbb
popa
je
push
mov
and
lret
insl
cmp
cltd
je
jl
jnp
stos
call
or
imul
jle
loop
xchg
xchg
out
pop
je
cwtl
cltd
lret
mov
int
in
add
mov
lcall
fwait
dec
std
loopne
in
test
shrl
mov
and
iret
shlb
cmp
rcr
fimull
fmull
loop
int
addr16
mov
inc
inc
dec
cmc
push
in
inc
incl
mov
pop
jp
dec
add
or
sub
adc
pop
cmp
sbb
addr16
and
setl
js
jp
fwait
push
sbb
dec
sbb
aaa
ja
scas
outsl
aas
dec
cltd
lods
movsl
push
aas
inc
inc
cli
mov
jp
cmp
dec
dec
sbb
insb
int3
mov
rorb
mov
jbe
jge
mov
insb
popf
cmp
cltd
je
hlt
dec
jnp
enter
repz
dec
movl
in
pushf
xchg
mov
rcrl
xchg
xchg
cmp
arpl
jno
mov
in
jns
int
add
scas
adc
std
out
fidivrs
roll
or
ret
lea
mov
xchg
jbe
iret
ret
xchg
mov
std
fsubs
cmp
dec
movsl
aas
ficompl
lret
out
out
dec
mov
pop
icebp
repnz
div
notl
addr16
fldl
add
outsb
addr16
pop
or
push
out
cmp
xchg
sbb
adc
sbb
bound
sbb
pop
mov
aas
in
push
and
sub
xchg
lock
cmp
cmp
inc
sub
cmp
dec
xchg
jne
lods
sbb
push
push
mov
pop
mov
out
sbb
mov
sub
imul
lds
outsb
pop
xchg
jno
cmp
jbe
sarl
popa
jl
xlat
adcb
cld
stos
test
mov
jo
xchg
xchg
fstl
jge
cltd
repz
sub
sbb
mov
lret
cmpsb
add
adc
lods
imulb
xchg
mov
push
sbb
mov
mov
ret
les
pop
das
pusha
pop
ds
xchg
aad
rcl
sub
xlat
mov
inc
sahf
cmp
push
add
sub
out
daa
nop
insb
ficompl
mov
aas
mov
and
lds
ja
rcll
mov
dec
or
push
pop
jo
jo
sbb
dec
in
dec
pop
and
mov
adcb
mov
push
xor
sbb
jge
cmp
pop
mov
jl,pn
cmp
inc
mov
push
adcb
pop
pop
pop
pop
iret
inc
and
enter
lret
imul
cmpsl
jno
leave
fstenv
jmp
inc
icebp
xor
mov
dec
jb
fwait
bound
push
push
xchg
repz
jmp
xchg
xchg
ja
pushf
hlt
jecxz
call
mov
and
icebp
shrb
es
fidivl
pusha
aaa
mov
pop
call
jnp
or
push
lret
dec
not
dec
rcrl
and
and
loopne
int
out
inc
das
les
jmp
fidivl
dec
cmp
ret
add
data16
adc
or
dec
mov
insb
fmul
xor
cmp
sbb
inc
in
mov
adc
and
sbb
xor
std
lret
cmp
xchg
stos
in
scas
inc
inc
inc
fstpt
rcll
or
iret
test
push
pop
sahf
jmp
ficompl
mov
lret
jnp
insb
insl
fwait
outsl
and
call
jnp
loope
pushf
inc
shll
sub
mov
mov
cmp
add
xchg
cwtl
inc
call
fwait
mov
mov
stos
stos
leave
xchg
stos
lods
push
or
repnz
xchg
sbb
mov
add
mov
icebp
mov
sub
sub
and
aas
mov
jl
or
dec
mov
cmpsl
dec
test
sub
push
push
popa
jmp
sub
cmc
sub
insl
cmc
cli
sti
in
pop
std
std
std
decb
arpl
enter
sbb
or
sti
jns
push
sub
jg
push
and
sbb
jnp
jecxz
and
sub
xchg
dec
xor
ss
ljmp
rolb
cmpsl
xchg
dec
ja
out
dec
dec
test
xchg
push
dec
push
push
mov
lcall
pop
gs
sub
rorl
subb
mov
ljmp
sarl
xchg
mov
xchg
add
in
adcl
ja
mov
lahf
mov
or
sbb
adc
dec
lods
mov
push
pop
daa
mov
mov
mov
mov
jge
leave
into
iret
xchg
imul
sti
lcall
ret
inc
loopne
dec
xchg
dec
cmpsb
pop
add
loopne
icebp
repnz
repz
and
cli
bound
sahf
testb
or
movsb
mov
or
xor
js
cmp
sbb
mov
pop
and
es
fisubl
loopne
sub
xor
out
xor
cmp
movsl
sahf
dec
cmp
inc
xchg
addr16
jae
pop
lds
mov
push
push
sahf
cmp
push
mov
rcrl
into
xchg
xchg
mov
insl
outsb
pushf
mov
xchg
mov
sahf
jns
call
leave
sub
cs
or
add
xchg
cmpsb
jbe
mov
lods
xchg
sahf
lahf
in
out
mov
cmpsb
cmpsl
cmovge
int
or
sbb
mov
mov
mov
lods
mov
cmp
fnsave
xor
lret
add
das
ds
mov
push
not
inc
pavgb
call
in
cmp
lock
loopne
repnz
jge
cli
sti
insl
lret
inc
mov
or
or
or
jp
cmp
adc
pop
xchg
adc
dec
pushf
sbb
lea
xchg
sub
xchg
dec
and
push
and
xchg
pop
xor
pop
or
inc
xchg
es
inc
jae
dec
movl
dec
push
push
sahf
outsb
sbbb
test
mov
or
test
xchg
mov
push
cltd
mov
xchg
lods
outsb
mov
xchg
fwait
jbe
movsl
and
jle
mov
ljmp
mov
rcr
hlt
mov
pushf
popf
jmp
nop
mov
sahf
jno
ja
scas
sti
xchg
ja
fidivs
cmp
mov
lds
sub
es
or
mov
iret
rolb
add
cmp
movsb
dec
pop
fnstsw
dec
xchg
mov
inc
push
dec
dec
mov
repnz
fs
sub
cld
std
cmp
jae
ret
sub
jae
jo
or
imul
cmp
cmpl
inc
or
movsl
fldcw
sub
xchg
stos
sti
xor
pushf
xchg
leave
pushl
aaa
gs
aam
push
cmp
aas
inc
mov
aas
lods
stos
pop
sbb
mov
imul
push
sarb
mov
nop
fs
divl
push
outsb
outsl
mov
xchg
in
jbe
iret
out
jns
or
mov
xchg
sub
repz
pop
xchg
xchg
std
mov
ret
jmp
sti
pop
addr16
popf
lret
in
mov
mov
lea
pop
jns
mov
pop
in
mov
hlt
pop
and
pop
xor
mov
movsl
mov
cmc
push
fldt
out
lret
jg
rcrb
pop
aad
aam
cld
xlat
adc
lods
fnstsw
push
scas
test
push
mov
out
sub
bound
dec
mov
pop
mov
insl
jecxz
les
add
call
or
inc
push
adc
adc
out
or
sbb
push
mov
adc
loopne
sbb
popf
sbb
xor
ss
xchg
xchg
or
and
aas
inc
scas
cmpsl
scas
cmp
ja
pop
mov
jb
movsl
cmpsb
cmpsl
mov
pop
xchg
mov
mov
scas
cmc
bound
or
int
cmp
popf
ss
in
jno
repz
dec
jnp
aam
xchg
jmp
pop
push
test
mov
imul
cwtl
cltd
lcall
jno
mov
movsl
adc
jge
scas
jne
xor
and
mov
pop
cmpsb
and
mov
xchg
enter
jle
ror
aaa
mov
popf
mov
fcmovnu
xor
dec
inc
repnz
in
imul
out
mov
gs
inc
pop
push
add
cmc
testb
mov
arpl
clc
push
pop
jb
iret
cmp
jo
loopne
adc
lahf
jno
adc
add
inc
sbb
and
or
xchg
scas
shrb
aaa
dec
sbb
pop
cmp
sbb
inc
inc
inc
xchg
jl
pop
dec
cmp
xchg
inc
inc
push
push
and
bound
pop
leave
pop
xchg
mov
popa
xlat
js
cs
jmp
push
sub
loop
lret
cmp
jne
inc
pop
sbb
mov
jnp
xchg
jmp
lret
js
cmc
xchg
xchg
xchg
xchg
lds
cld
test
popf
sahf
ljmp
mov
stos
lods
lods
adc
in
cmpsb
and
mov
rolb
rol
repz
enter
iret
rcl
cmp
popa
xlat
sbb
or
dec
push
push
pop
rcll
in
mov
push
push
push
jmp
add
stc
cli
sub
scas
dec
testb
push
pop
pop
outsl
les
xchg
mov
adc
cmpb
sbb
popa
sahf
jnp
sbb
and
jnp
mov
and
pop
idivb
fcoms
pushf
lods
xor
outsl
xchg
scas
cmpsl
iret
cmp
ja
or
mov
push
cmp
push
pop
pop
movsb
add
mov
loopne
push
push
pop
xchg
jo
mov
in
lea
jg
inc
pop
cmc
addl
inc
push
nop
xchg
out
pop
out
pop
xchg
cwtl
in
fwait
scas
lcall
fwait
movsl
cmpsb
sbb
mov
pop
fisttps
scas
mov
out
cmpsl
and
xor
movsb
test
call
sbb
int3
int
iret
inc
lret
adc
dec
ret
mov
cmpsb
push
loopne
sbb
or
es
pop
or
pushf
push
scas
pop
push
add
loope
and
and
lret
add
add
and
or
and
adc
fbld
sbb
jg
sbb
and
dec
and
sub
outsl
stos
das
xor
mov
aaa
cmp
fwait
pop
cmp
add
pop
cltd
inc
mov
outsl
dec
dec
add
aas
sbb
lret
sar
mov
rcrl
and
addr16
imul
loop
aaa
in
jbe
fstp
popf
js
push
popa
jl
int3
push
scas
stos
addl
jmp
mov
pop
mov
inc
xlat
xchg
cwtl
cltd
lcall
sahf
push
cwtl
movsb
sti
cld
sbb
stos
jp
cmc
into
adc
mov
sbb
mov
mov
mov
ljmp
lret
ds
into
adcl
inc
mov
loope
adc
call
cs
out
lock
fdivrl
mov
bound
icebp
sub
cmp
mov
push
fnstsw
jo
adc
cmp
lea
jne
je
pop
and
sbb
loop
pop
sub
fsubrl
sub
xchg
push
arpl
inc
jae
stos
pop
inc
dec
dec
xchg
aaa
scas
jae
jg
cmp
push
push
lods
pop
int3
push
mov
arpl
cmpsb
addr16
push
xor
loop
jo
aam
outsb
jne
movsb
cmp
loope
test
pop
addl
mov
fbld
test
push
ret
addr16
sbb
stos
stos
test
scas
adc
out
adc
mov
mov
lret
int
iret
rolb
cwtl
mov
jp
mov
loopne
and
in
push
dec
gs
jmp
push
in
in
push
mov
outsl
repnz
loop
lods
cs
incl
addr16
add
jo
icebp
pop
push
xor
ja
push
or
add
add
and
xchg
inc
jge
rorl
movsb
sub
xchg
out
mov
sbb
cmp
cmp
inc
inc
mov
test
dec
jns
cmp
dec
dec
cmpsb
mov
pop
movsb
jns
and
jg
pop
lds
je
arpl
imul
ljmp
or
nop
fs
movsb
jg
out
addb
outsl
mov
xor
mov
lods
jl
rcrb
movsb
movsl
jmp
pop
int3
cmpsl
fdivs
and
sub
mov
mov
xchg
or
roll
aam
iret
sbb
cmp
fcomp
pop
fnstsw
loope
push
int
xor
std
in
pusha
fdiv
add
cmp
repnz
aas
push
clc
rorl
ljmp
je
sbb
cmp
dec
adc
outsl
jo
sbb
pop
pop
and
and
sub
outsl
push
mov
sti
cmp
cwtl
dec
xor
cmp
scas
es
outsb
pop
push
jg
inc
stos
jmp
mov
push
push
les
mov
mov
imul
add
imul
imul
ja
bound
repnz
jecxz
outsb
dec
rorl
push
out
and
add
incb
xchg
xchg
cwtl
aad
or
hlt
sahf
adc
mov
mov
lcall
fptan
sub
shrl
mov
std
ss
mov
mov
jns
leave
lret
das
dec
ret
rcl
pop
push
rcl
roll
dec
add
inc
inc
pop
xlat
in
push
or
dec
dec
dec
fucomp
out
pop
adc
pop
push
pop
out
mull
or
cld
std
inc
sbb
and
xor
pop
push
add
pop
je
sbb
sub
fdivrs
mov
nopl
mov
jns
mov
jb
dec
insl
xchg
pop
cmpsb
movsl
mov
out
es
inc
sub
jmp
jo
shlb
xor
push
sbbl
inc
pop
pop
lods
xchg
arpl
push
mov
add
pop
insl
outsb
loopne
aaa
aad
je
jbe
jno
sub
jl
jle
repnz
fimull
jecxz
mov
xchg
nop
cmc
xor
cwtl
cltd
dec
fcompl
sahf
mov
movsl
cmpsb
xlat
jo
and
fwait
pop
gs
mov
mov
mov
sub
adc
mov
les
xor
int
dec
repz
stos
xor
pop
fnstsw
fdivrl
inc
push
dec
ss
lock
out
idiv
arpl
std
incb
and
push
add
push
or
adc
fnstcw
mov
sbb
and
mov
sub
jae
push
xor
aaa
cmpsl
cmpsb
xorb
inc
xchg
je
inc
inc
sub
enter
dec
shll
xor
js
test
and
sub
lods
xchg
fs
push
mov
add
loope
cmp
sbb
mov
out
jns
add
mov
pop
fimull
mov
hlt
movsb
mov
fistpl
mov
rep
movsl
or
outsl
pop
push
lods
lods
scas
loope
popa
fidivl
mov
and
int
mov
out
repnz
mov
int3
aas
cmp
loop
rcl
add
mov
fcmovnu
dec
movsb
mov
xchg
lods
and
and
repnz
call
ret
push
std
jo
lds
stos
pop
pop
jp
cmp
push
cld
fldenv
pop
sbb
add
or
pop
and
sub
addl
jp
xchg
pop
cmp
inc
inc
xchg
sahf
push
dec
dec
mov
aaa
mov
push
sbb
ficoml
pushf
and
iret
inc
and
mov
arpl
xor
insl
rclb
pop
movsl
das
cmp
sti
jbe
js
jae
cs
hlt
insb
dec
jae
xchg
ja
nop
xchg
inc
xchg
xchg
jecxz
filds
rcrb
jo
cmpsb
pop
fiaddl
stos
stos
lods
clc
lret
or
mov
cmp
fidivl
das
mov
jb
ret
lds
mov
cmc
in
enter
in
xchg
aad
rcl
inc
fcmovu
sbb
dec
lock
dec
movsb
ds
rolb
push
gs
in
inc
mov
sbb
gs
sub
cmp
push
pop
jns
popa
jne
cmp
movups
fldcw
adc
jge
add
xor
and
xchg
or
sub
pop
xchg
lret
xor
pop
xor
jmp
cmp
movsb
mov
cmp
dec
mov
push
fwait
aam
push
push
mov
sysret
pop
pusha
popa
daa
dec
bound
or
sbb
ss
je
int3
movsb
loop
mov
jge
loopne
movsb
jg
dec
pop
rolb
xchg
pop
mov
cmp
lahf
mov
stc
adc
push
movsl
stos
stos
fptan
in
out
scas
push
pop
mov
fwait
movsb
mov
cmpsb
rol
imul
imul
inc
in
jecxz
shl
add
xor
fsubs
sub
jecxz
loop
or
pop
test
out
pusha
mov
cmc
dec
cmp
outsl
sbb
cld
std
arpl
pop
dec
mov
cs
jecxz
or
imul
sbb
mov
movb
and
and
fldt
sub
cwtl
xchg
lods
sub
xor
xor
cmp
stos
bound
test
mov
imul
xor
push
mov
aas
repnz
ret
rorb
bound
mov
dec
pop
pushf
lds
lret
xchg
jno
fmuls
jns
jnp
lods
inc
dec
testl
fsubs
xchg
stc
aaa
mov
sti
xchg
xchg
pushf
popf
or
gs
testb
out
clc
ret
jmp
add
les
and
lock
sub
in
cmp
mov
xchg
xor
aad
xor
loopne
pop
loop
adc
mov
repnz
mov
push
push
stc
ret
pop
test
add
bound
pop
or
jl
rcll
push
cmovg
push
std
xchg
push
mov
mov
loopne
or
push
adc
xchg
push
sub
lcall
in
mov
aaa
push
cmp
add
jne
xlat
cmpsl
outsl
dec
adc
push
push
push
sbbb
adc
fnstcw
pop
arpl
mov
das
out
push
shrl
pushf
hlt
pop
cmc
jbe
js
jl
clc
inc
inc
and
test
test
icebp
cmpsb
jne
repnz
xchg
xchg
xchg
ret
adc
lahf
mov
movsl
jmp
and
cmpsl
jo
and
or
jg
sti
mov
jmp
out
js
es
add
rcl
lds
add
add
dec
inc
outsb
fsubp
in
stos
jmp
out
dec
jp
out
lock
aaa
int3
outsb
sbb
imull
mov
imul
dec
dec
fs
rol
push
push
js
adc
dec
jne
sbb
pop
adc
cmpsb
and
sbb
jne
mov
xor
cmp
iret
mov
cmp
push
xchg
push
stos
mov
lods
je
sbbb
lret
mov
jge
sbbl
dec
rcrl
xchg
mov
push
push
ss
js
jne
jmp
lahf
jp
into
jle
out
lcall
out
mov
cmc
xchg
xchg
xchg
xchg
idivl
data16
movsb
movsl
adc
test
repnz
or
scas
mov
popf
jp
std
mov
jle
loop
sub
mov
pop
adc
fcoml
cmp
mov
sti
mov
fsubrl
mov
fisubs
dec
movsl
aas
inc
pop
adc
int3
rcll
rcl
push
sti
sti
cld
std
sub
add
add
dec
shlb
or
rcrl
adc
push
push
pop
sbb
add
inc
sbb
xchg
or
jl
and
mov
popf
pushf
stos
dec
sub
test
subl
ret
nop
inc
inc
test
sahf
lahf
mov
int3
dec
dec
dec
mov
cmp
xor
cmc
fistpl
test
leave
ret
arpl
dec
dec
fildl
mov
pop
stos
shrb
xchg
into
jnp
jbe
hlt
xchg
ret
nop
cmc
xor
cltd
loopne
clc
rcrl
cld
insl
shrl
stos
stos
lods
pop
ret
hlt
jl
mov
loop
shll
and
mov
adcb
rcl
inc
in
inc
ret
sbb
push
std
fcomp
dec
movsb
andb
jecxz
xchg
dec
and
lcall
icebp
inc
pop
mov
div
dec
push
xor
push
pop
rep
es
das
inc
inc
push
or
dec
push
inc
or
jnp
adc
push
pop
xchg
or
and
push
neg
jmp
and
xor
push
sub
push
test
add
inc
inc
inc
cmpsb
in
or
nop
dec
dec
xchg
cs
pop
pop
xchg
je
xchg
pusha
push
push
pushf
dec
jge
mov
pop
jno
dec
test
gs
push
mov
dec
imul
pop
mov
je
jecxz
hlt
je
jle
lds
addl
mov
xor
je
xchg
adc
xchg
lcall
sahf
lahf
and
sahf
cmpsl
test
lcall
xchg
mov
mov
and
movsl
mov
mov
lods
in
sbb
daa
xlat
ror
negl
int3
fisttps
repz
call
out
ret
cli
aad
cmp
fcomp
fimuls
inc
lret
ftst
in
cmp
sti
in
in
inc
sbb
lret
icebp
pop
pop
in
stc
cli
sub
out
add
das
dec
mov
sub
imul
or
gs
imul
jg
add
sbb
dec
xchg
sbb
and
mov
and
lret
jmp
cs
imul
mov
pop
cmp
or
push
sub
lcall
dec
dec
mov
mov
test
sub
das
dec
test
popa
outsb
jbe
movsl
jecxz
nop
jnp
jle
lods
test
iret
test
lock
xchg
xchg
rclb
nop
pushf
push
mov
sbb
pop
mov
stos
mov
sbb
mov
mov
sahf
stos
loop
std
mov
in
stos
shrb
addr16
rcl
xlat
ljmp
inc
cmc
loopne
jecxz
dec
dec
clc
loop
ljmp
xchg
pop
push
or
div
and
std
push
dec
call
add
mov
das
or
jp
shll
fisubl
popa
adc
je
inc
mov
outsl
and
fwait
ret
pop
and
inc
fsts
push
pop
xor
stos
filds
push
xor
inc
jb
mov
aaa
dec
dec
pop
scas
cmp
dec
mov
push
xchg
pop
pop
lret
fcomps
data16
movsl
call
cmp
test
cwtl
cmp
out
insb
jns
xorb
in
add
test
xchg
xchg
les
lcall
mov
cmpsb
xchg
into
test
jecxz
mov
mov
mov
mov
mov
cs
mov
divb
test
aam
es
fdivl
dec
scas
cs
out
loope
or
clc
fstl
xchg
aad
push
hlt
cs
fildll
stos
out
incb
adc
cmpsb
ljmp
adc
fildl
aaa
adc
mov
push
cmp
seto
pop
bnd
xor
mov
cmp
mov
pop
mov
inc
cwtl
scas
test
dec
dec
dec
lahf
jns
mov
mov
push
push
push
test
push
jp
pop
mov
mov
ljmp
imul
mov
fwait
jbe
pushf
pop
movsl
jnp
mov
jecxz
test
mov
iret
aad
cmp
cmp
xchg
repnz
sub
ret
jmp
in
int
int
imul
out
mov
sbb
and
push
popa
out
sbb
jmp
cmp
pop
ss
stos
cld
shl
aas
sbb
sarb
xchg
dec
rcrl
dec
fcmovu
stos
jmp
loop
add
dec
mov
lock
out
pop
pop
jmp
pop
mov
sbb
sub
je
add
testb
or
movlps
push
jp
adc
xchg
mov
adc
pop
sbbl
jb
ficoml
ja
xlat
pop
xor
jnp
cmp
loop
bound
lock
adc
xchg
dec
dec
sahf
xchg
lcall
lahf
pop
pop
les
arpl
mov
imul
insl
popa
rcrl
clc
mov
ret
mov
mov
xor
ret
nop
in
sbb
cmp
xchg
pop
ficomps
fsts
mov
cmpsl
test
dec
scas
push
shlb
jl
mov
cmc
mov
or
ret
cld
xchg
jno
mov
xchg
ret
pushf
xchg
fmuls
ret
xor
cmp
push
mov
loope
scas
in
fsubrp
lock
popf
jae
div
idiv
stc
cli
sti
xor
imul
push
pop
xor
or
fsts
inc
notl
adc
sbb
repnz
pop
and
fcmovu
pushf
dec
and
cmp
and
mov
or
cmp
mov
and
sub
popf
mov
sbb
dec
add
push
data16
sahf
jnp
xchg
fistl
test
jbe
lods
mov
fdivl
lahf
mov
jae
bound
jne
int3
out
xor
xchg
addb
in
mov
dec
dec
xchg
xchg
xchg
mov
push
adc
jmp
shr
xchg
or
cmpsb
cmpsb
cmpsl
adc
cmpsb
scas
rol
mov
sub
sbb
mov
and
mov
xor
lea
lret
int3
xor
mov
jg
sahf
mov
and
push
mov
dec
mov
ljmp
adc
pop
sbb
imul
pop
sahf
std
incl
add
aam
push
out
push
out
js
add
pop
cmp
mov
sbb
pop
or
dec
bnd
xchg
dec
repz
xchg
inc
aam
pop
xor
cmp
cmp
mov
xor
adc
mov
dec
popa
loope
jbe
cmpl
sbbl
mov
imul
xor
mov
ja
cmpsb
es
sub
addb
mov
das
lods
cli
dec
dec
or
push
adc
lcall
push
pop
movsl
cmpsl
test
out
mov
cwtl
mov
data16
mov
sub
cmp
les
out
lret
mov
sti
push
not
fwait
cmpsb
hlt
xor
dec
add
es
adc
loope
out
mov
decl
xor
fprem1
or
sbb
ret
xorl
lcall
add
pop
push
aas
or
cmovns
xchg
fcoms
pop
sbb
jmp
test
in
and
movntps
mov
push
sub
mov
add
cmp
imul
aas
inc
test
das
fwait
mov
dec
dec
jl
mov
int
jp
xchg
std
and
pop
pop
pusha
mov
sub
cs
dec
gs
lea
pushf
enter
arpl
xor
jns
jl
add
mov
stos
xlat
ljmp
xor
pop
out
push
inc
fistl
cltd
or
jecxz
shrb
mov
jmp
movsb
pause
add
hlt
adc
mov
setnp
mov
shll
xor
imul
mov
int
pop
shll
aas
outsl
xchg
push
add
fcomip
jle
pop
loope
rcll
mov
aas
in
pushl
mov
push
mov
out
std
adc
and
push
jne
repnz
ljmp
cmp
xchg
sbbb
les
pushf
or
xor
enter
push
inc
inc
xchg
push
test
dec
movsl
mov
push
lahf
inc
sbbl
push
pop
enter
addb
and
or
xchg
insl
fistl
sub
jnp
ret
mov
xchg
imul
mov
shll
jae
iret
cmp
adc
bsr
orb
and
lods
lods
add
jl
std
out
mov
mov
call
aas
stos
pop
enter
lock
loop
sbb
rcl
dec
js
jg
fcomp
xor
push
loope
test
cwtl
adc
dec
loope
inc
pop
and
fists
icebp
data16
rcrb
arpl
add
xor
xor
jo
push
xor
adc
jae
push
lea
loop
popa
sbb
push
and
sub
xor
jecxz
xor
dec
mov
pop
cmp
filds
inc
jns
in
in
jge
mov
icebp
mov
push
aaa
push
push
pushf
ja
jge
pop
iret
inc
and
test
pusha
and
push
push
outsl
subb
jno
call
jp
jge
icebp
imul
mov
pop
jmp
jnp
test
add
notl
sbb
rcrb
mov
or
lods
fnsave
cmc
mov
or
and
mov
mov
cmpsb
ret
or
les
xchg
xchg
iret
rolb
inc
mov
xor
cmp
cmp
fsub
in
out
inc
sbb
repnz
fucom
sbb
cld
std
aaa
jl
jbe
jo
std
or
adc
repz
adc
mov
cwtl
xchg
adc
sbb
sbb
and
jb
sub
sbb
sti
jns
out
imul
cmp
int
inc
inc
addl
mov
inc
dec
push
push
scas
test
sar
mov
fsubs
lret
pop
gs
insl
fwait
outsl
mov
jne
test
ja
cmp
loop
jle
in
out
addb
mov
pop
mov
mov
cwtl
cltd
cmp
hlt
or
xchg
fwait
mov
inc
jmp
xchg
push
pop
sbb
stos
loopne
pop
sbb
mov
mov
mov
cli
leave
lret
dec
dec
repnz
incl
stc
mov
fsubs
loope
enter
in
dec
mov
aaa
jmp
es
dec
div
clc
mov
inc
jl
and
iret
out
push
xchg
push
dec
cmp
ret
fiaddl
sbb
sbb
sbb
jge
cmp
jg
clc
scas
cli
cmpsl
pop
xor
cld
ret
xor
cmp
xchg
test
inc
jb
sub
inc
mov
dec
test
test
int3
inc
rolb
and
mov
push
lea
xlat
nop
xor
test
sahf
test
lahf
aas
push
fimuls
stc
dec
mov
dec
pushl
xor
xchg
xchg
out
add
xchg
int3
or
fwait
shlb
push
in
lcall
stc
repnz
das
mov
cwtl
out
ret
mov
les
xchg
outsl
pop
mov
lcall
and
cmp
inc
incl
or
loop
or
dec
mov
push
jg
adc
bound
lret
sub
addr16
pop
pop
push
pop
pop
ret
sub
pop
jbe
jae
adc
aas
jns
jle
cmp
pop
sbb
sbb
fldenv
xor
adc
mov
sbb
das
mov
and
cmp
cmpsb
pop
or
repnz
cmp
outsb
cli
jae
mov
add
push
cs
lret
jge
loope
js
xlat
dec
xor
scas
cwtl
sbb
imul
outsl
jo
lret
int
pusha
mov
inc
fisttps
pop
bnd
mov
xor
add
mov
enter
fiaddl
movsb
mov
xchg
lret
cmpsb
out
adc
and
mov
xchg
movsb
mov
rolb
inc
out
repz
enter
enter
cwtl
dec
out
xlat
cmp
setns
xor
lods
adc
ss
fdiv
pop
outsl
aas
sbb
pop
lock
outsl
sbb
add
sub
imul
jmp
mov
cmp
sbb
icebp
push
loope
inc
sub
sbb
xor
xor
jp
ss
clc
xchg
xchg
scas
push
inc
mov
sub
sub
jbe
outsb
dec
adc
popa
push
push
mov
cmp
push
xchg
ljmp
fildll
xor
bound
mov
mov
fsubrl
insb
sti
out
lds
out
sti
leave
jnp
imul
mov
cli
dec
or
xchg
sti
sti
lcall
out
cld
std
adc
and
add
scas
mov
sbb
add
push
aaa
mov
jne
out
cmpb
enter
lock
in
pop
not
aam
dec
pushf
sub
fdivs
mov
cmp
dec
pop
sbb
mov
out
add
push
lock
loop
scas
mov
push
clc
popw
and
filds
add
dec
repnz
mov
jbe
adc
mov
push
push
into
rcll
jg
fbld
and
mov
cmp
dec
sbbb
ljmp
and
dec
popl
arpl
icebp
mov
jns
aaa
int
dec
pop
gs
push
push
lret
subl
add
sub
arpl
mov
fwait
outsl
adcb
jno
push
jmp
jl
pinsrw
dec
pop
in
mov
mov
arpl
xchg
xchg
out
lock
mov
pop
sbb
movsb
test
das
lock
fidivl
adc
sbb
mov
mov
lock
hlt
lea
leave
lret
int3
xor
xor
ljmp
xchg
xchg
push
add
loop
imul
mov
lret
out
icebp
repnz
push
xchg
and
push
daa
inc
int
and
lds
js
int
clc
or
jno
cld
jb
test
adc
testl
lcall
and
cwtl
mov
sub
push
popf
push
arpl
popf
mov
push
inc
inc
inc
mov
dec
dec
mov
cmp
push
fs
inc
js
add
loop
pop
pop
int
dec
mov
mov
xor
jno
cmc
test
sahf
out
aam
addl
mov
mov
ret
xchg
cmp
mov
sahf
lahf
mov
scas
mov
add
xchg
lods
lods
or
sbb
lret
mov
rcl
mov
ret
hlt
or
xchg
loop
shrl
sub
out
sbb
imul
roll
push
or
inc
sbb
push
xchg
fdivp
imul
inc
dec
daa
add
pop
push
in
push
jno
in
je
in
adc
pop
cmp
jnp
sbb
pop
push
push
pop
dec
mov
int
or
sub
xchg
cmp
andb
cld
xor
mov
dec
lret
xor
test
inc
mov
mov
or
into
rcr
pop
xor
pop
jno
leave
imul
out
jae
mov
lret
test
shll
test
push
xchg
xchg
xchg
lcall
into
mov
dec
test
cmp
shrb
scas
mov
cli
push
xor
pop
adc
mov
cs
lret
and
xor
add
inc
push
push
add
loop
dec
mov
push
push
popf
fs
pop
adc
mov
inc
mov
insb
and
in
imulb
push
mov
cmc
adc
push
mov
aas
sbb
cmovbe
push
imul
lock
das
xchg
ss
xor
scas
fbstp
jno
push
xor
and
mov
jne
pop
pop
sub
into
fisttpll
js
lods
lea
iret
xor
jno
movsb
repnz
jae
cmp
loope
push
mov
repz
push
mov
pop
lea
xchg
fwait
pushf
bound
inc
mov
or
stos
fdivs
fwait
scas
mov
or
mov
sub
mov
mov
ljmp
fxch
int3
es
in
ret
xorl
lret
add
push
cmpsl
xor
ljmp
adc
aaa
jo
sbb
inc
adc
outsl
pop
cli
sti
xor
mov
lods
sub
mov
sarl
addr16
pop
std
imul
sbb
js
dec
andb
mov
cmp
pop
cmc
rcll
test
xchg
fimull
push
sub
insl
push
xor
mov
in
dec
inc
mov
push
les
and
pop
loope
sub
fs
add
gs
adc
xlat
test
idivl
in
and
dec
mov
loope
lods
test
movsb
lods
cmpl
or
cltd
into
popa
or
enter
mov
sbb
xchg
or
int3
or
imul
mov
mov
pop
cmpsl
cmc
repnz
roll
and
and
enter
sbb
cli
aad
repz
inc
xor
and
mov
or
fs
pop
xchg
dec
dec
xchg
xchg
inc
pusha
mov
push
sti
push
push
jmp
std
cs
xor
add
hlt
je
std
cmp
push
push
notl
adc
pop
xchg
dec
mov
jb
sub
arpl
xchg
shll
push
fstpl
mov
cmp
mov
lcall
cltd
push
push
push
mov
lea
cmp
or
les
mov
jmp
add
outsl
lret
cwtl
push
movsl
cmp
mov
addl
jnp
lea
xchg
sti
adc
icebp
push
rolb
sbb
adc
or
jae
sbb
stos
adc
jle
and
subl
call
inc
nop
daa
aas
add
mov
mov
mov
fs
or
mov
dec
fs
pop
scas
lea
shl
jno
fdivrl
jo
rclb
andl
pop
sub
outsl
insl
adc
dec
mov
lds
mov
and
je
add
jbe
xchg
push
xor
xchg
cmp
mov
jne
jmp
inc
shll
lods
lods
mov
shl
movsl
rcrb
and
insb
je
sbbb
pop
pop
mov
int3
pop
stos
loop
lcall
xchg
rcll
jp
and
movsb
inc
mov
xchg
loop
xchg
subb
scas
fldt
mov
out
cltd
lcall
movsb
pop
mov
cmpsl
test
dec
ret
sbb
xchg
pop
push
push
and
adc
mov
sarb
adc
cmp
int
lret
icebp
xchg
sub
dec
push
lea
fstl
js
dec
cmpsl
pop
fcoms
add
push
icebp
xor
popf
ret
imul
fnstsw
mov
add
xor
stc
push
xor
adc
cmp
jbe
jo
imul
and
test
xchg
sub
sub
aas
lods
data16
mov
cmp
nop
fwait
std
js
cmp
insl
popf
mov
test
mov
mov
addb
jmp
push
mov
xchg
es
stos
test
mov
shlb
mov
mov
xchg
or
popf
adc
mov
ss
movsl
out
push
inc
popa
fidivl
mov
add
sub
jle
lock
jg
ret
lret
and
xor
fldcw
jmp
cmp
fwait
ds
adcl
jecxz
push
xor
push
push
sti
in
in
out
inc
pop
dec
outsb
dec
dec
inc
add
addr16
hlt
subl
repnz
insl
cmpsl
or
or
or
xchg
pop
mov
sub
dec
mov
jmp
repnz
xor
xor
cmp
stos
popa
insl
xchg
je
inc
inc
sub
mov
jecxz
dec
dec
mov
insl
mov
les
mov
mov
push
mov
adc
nop
mov
mov
repz
int3
adcb
cmp
xchg
mov
jbe
mov
adc
sahf
lahf
pop
inc
mov
insb
icebp
shrl
sub
out
std
fdivl
lahf
sub
cmp
sub
negl
enter
xchg
or
inc
lahf
push
mov
xor
adc
pop
sbb
sub
jecxz
dec
sti
call
call
xlat
repnz
cmp
movsl
sbb
cld
jge
add
push
jl
jbe
or
mov
dec
xchg
dec
insb
and
push
mov
sub
push
cs
lock
xchg
pushl
cmp
stos
and
or
imul
movsb
movsl
push
ret
dec
push
data16
lds
cmpsb
daa
les
xchg
addr16
and
call
jne
jge
jg
push
cmc
imul
sub
div
pop
mov
adcl
popf
xchg
lahf
sti
jmp
add
lods
adc
xchg
and
lods
out
pushf
adc
and
mov
call
enter
pop
hlt
into
xor
ds
lahf
rcr
and
add
lods
les
sub
scas
cmp
jmp
arpl
repz
ret
cmc
lds
cld
int3
jecxz
call
push
add
or
sarl
ds
punpckhwd
nop
sub
or
and
es
adc
pushf
adc
ret
xor
pushl
cmp
add
ds
jbe
fisttps
stos
mov
dec
mov
dec
mov
sbb
jp
xchg
jle
mov
sbbb
fs
mov
popa
imul
mov
fstpl
dec
jnp
jge
divb
aaa
lods
xchg
push
popf
fisttpll
dec
inc
mov
cbtw
lahf
mov
or
movsb
je
out
push
lods
xchg
scas
mov
jp
lgs
cmp
xor
or
xor
xchg
lret
int3
cli
into
inc
mov
mov
jnp
inc
aas
cmpsl
fchs
loope
test
lret
out
dec
nop
iret
dec
jmp
inc
bound
repnz
sub
imul
arpl
add
jno
pop
int
push
or
push
jb
cmp
adc
push
outsb
fmul
bound
sbb
sbb
mov
pop
mov
xchg
mov
sub
xor
pop
xor
sbb
mov
and
inc
jno
dec
lahf
inc
inc
scas
in
cmp
insl
sahf
push
push
enter
and
pop
mov
dec
aad
sub
xchg
push
xlat
sarb
push
jb
cmp
ja
iret
fisubs
andl
clc
jl
fwait
mov
mov
or
pop
pop
nop
xchg
test
push
xchg
cltd
lcall
out
pop
mov
cmpsl
test
add
jnp
sbb
scas
mov
cld
mov
sbbb
mov
xlat
cmp
and
cmp
lret
add
inc
mov
cmpsb
or
fiadds
repnz
inc
lods
out
scas
xor
in
in
inc
and
cltd
dec
arpl
ja
sbb
cli
sti
push
xor
cmp
pop
stc
insb
stc
or
or
or
pop
xor
stc
adc
pop
lahf
aas
sbb
add
aaa
arpl
es
sahf
pop
cwtl
push
sub
fistl
mov
xchg
imul
cltd
mov
inc
dec
mov
cltd
jbe
mov
sarb
inc
mov
das
inc
stos
mov
mov
xor
imul
in
jne
inc
mov
out
pop
jp
or
out
test
mov
in
jmp
add
or
sahf
lahf
int
adc
movsb
pop
mov
stos
stos
adc
sbb
mov
mov
fbstp
mov
sbb
test
and
fisttps
adc
inc
stc
and
daa
mov
add
dec
inc
fsubrp
std
loope
adc
push
scas
pop
push
shr
div
imul
sti
lret
loop
ljmp
add
int3
pop
cmp
or
push
orl
cmp
jecxz
pop
mov
add
addl
mov
sub
pop
icebp
cmp
sub
xchg
push
xorl
lods
sub
inc
jo
mov
inc
mov
dec
dec
mov
bound
test
push
inc
pop
pop
xchg
jns
cmpsl
xchg
push
enter
addr16
mov
outsb
outsl
jae
dec
and
dec
sub
int
test
daa
jo
inc
pop
cmp
rep
lea
cld
mov
add
shrb
stc
cmpsb
cmpsl
cmovge
int
mov
sub
mov
ret
mov
lock
fnsave
xor
dec
mov
rolb
xor
add
or
dec
cmpsb
push
or
push
cmpsb
out
lock
in
sbb
imul
pop
jg
cli
sti
jl
aas
repnz
add
add
enter
outsb
jo
or
add
outsl
push
sbb
xchg
addl
adc
jnp
sub
punpcklbw
jg
ss
xor
scas
subb
push
jae
inc
push
xor
cmp
add
ss
pop
pop
iret
inc
movsb
jmp
inc
stos
int3
lret
ret
cltd
xor
insl
outsb
adc
f2xm1
mov
xchg
jp
lock
ljmp
xchg
jb
std
jno
mov
movsl
clc
je
cltd
lcall
mull
xchg
or
stos
stos
lods
pop
adc
pop
fnstenv
mov
and
ret
adc
xor
int3
std
xchg
cmp
rcl
sub
push
xor
dec
repnz
push
int
inc
rcr
out
call
shlb
push
xchg
push
pusha
pop
aad
cli
sti
sub
push
loope
add
shll
lods
pop
jne
push
ja
fldenv
cmp
jb
jmp
lcall
and
fwait
jae
test
das
das
xor
xor
pop
push
sub
mov
inc
inc
adc
or
mov
cmp
ret
scas
sbb
movsb
push
pop
outsb
dec
dec
sbbb
iret
sub
shll
ficoml
call
js
enter
dec
fnstenv
test
lods
jo
mov
mov
loopne
add
or
jl
les
or
cmp
and
and
outsb
sbb
insl
add
sub
pop
daa
xor
insb
out
vshufps
es
cmpsl
std
and
call
inc
cmpsb
or
data16
cmp
in
inc
das
les
jmp
lock
loopne
repnz
mov
push
sbb
sub
inc
mov
push
jns
jne
aam
jb
xchg
adc
in
sbb
dec
cmpsw
mov
jmp
or
sub
nop
popf
fsts
cmpl
cmp
cmp
xor
lahf
mov
je
or
mov
iret
popa
lds
rcll
pop
dec
xlat
dec
bswap
dec
or
insl
outsb
pop
lods
fistl
je
ja
mov
sub
push
int3
jg
out
out
xchg
jbe
mov
notb
scas
jecxz
add
adc
sahf
lahf
or
loopne
jle
imul
lahf
mov
lea
lods
add
stos
mov
sub
rorb
and
sub
xor
ja
and
push
mov
xor
adc
cmp
pop
sbb
dec
inc
sub
es
xor
cmc
and
mov
push
cmpsl
cmp
stc
imul
ja
pop
test
xchg
mov
decl
xor
adc
repnz
popa
cmp
jns
fsts
mov
pop
xchg
in
lea
jmp
cs
jle
mov
and
mov
pop
add
icebp
dec
add
scas
inc
xor
pop
loopne
lcall
mov
pop
ret
pop
ror
stos
out
enter
insb
test
in
dec
or
stc
mov
lret
enter
cmc
icebp
add
sbb
leave
movsb
or
fsub
movsb
jp
out
mull
mov
mov
mov
mov
or
adc
xor
dec
mov
cli
aam
xchg
lret
fstp
filds
ds
xchg
mov
push
mov
mov
inc
inc
and
cmp
pop
jb
mov
imul
cli
pop
jbe
cmp
into
fldl
or
popa
data16
fidivrl
jge
or
cmpl
pop
jne
inc
ljmp
cmc
rorl
sub
sub
inc
pop
and
cwtl
hlt
movsb
jae
sub
mov
inc
push
and
addr16
jae
shll
dec
mov
mov
insb
dec
dec
sbbb
shll
jbe
push
mov
scas
test
nop
imul
jb
lret
ja
pop
out
jno
lock
pop
jnp
test
fsubr
scas
outsb
mov
test
xchg
imul
jnp
or
fbstp
lahf
mov
movsb
sbb
adc
cmpsl
mov
xchg
mov
lods
mov
jnp
movsb
out
ret
in
cmpsl
sub
movsl
and
shrb
or
fmull
cmp
mov
mov
ds
inc
pop
push
repnz
cmc
cmp
sub
idiv
push
js
add
jmp
sub
ds
mov
add
push
movups
or
adc
add
jne
push
jl
dec
sbb
sub
pop
and
es
cmp
add
inc
inc
inc
stos
ja
dec
mov
dec
dec
dec
mov
scas
sahf
nop
jo
pop
mov
adcb
cmp
or
jp
jo
jg
pop
xchg
outsb
lahf
mov
cmp
loope
push
test
xchg
xchg
rorl
mov
std
mov
add
push
movsb
or
je
adc
jo
clc
xchg
scas
ret
mov
pop
sub
fisubrs
mov
shl
jl
in
nop
ret
iret
es
sahf
jecxz
setnp
sti
fistl
fidivs
in
mov
cmp
popa
fdivrs
add
add
inc
idiv
jb
std
adc
in
and
add
jb
adc
sub
xchg
adc
adc
push
sbb
sbb
lcall
clc
and
insl
dec
es
fs
outsl
mov
cmp
ds
inc
mov
xor
dec
dec
movsb
movsl
mov
push
push
mov
stos
and
pop
shlb
rorl
adc
movsb
mov
ret
push
sbb
lret
jns
push
jge
hlt
xchg
lock
dec
xchg
mov
xchg
out
cli
test
mov
cmpsb
sbb
inc
mov
and
dec
ret
insb
or
pop
int3
cmpsl
add
push
mov
mov
cmp
fdivl
mov
cs
out
enter
xor
cmp
repz
sti
pop
mov
cmp
push
hlt
dec
mov
push
leave
or
mov
adc
in
cmp
jmp
adc
clc
sub
adc
pop
push
jns
insl
mov
jbe
sub
adc
pusha
dec
sti
adc
lret
aas
sbb
adc
adc
and
inc
mov
xor
xchg
fsubrl
cmp
cmp
pop
jmp
pop
sub
pop
jge
mov
movl
ficompl
roll
ss
inc
mov
mov
push
insb
lods
dec
jmp
cmp
mov
in
gs
lock
inc
stc
outsb
pop
sub
cmc
loop
in
sub
xor
mov
mov
fsubl
inc
test
lret
inc
popa
fdivl
adc
ss
xor
imulb
scas
add
ds
or
inc
mov
js
jl
adc
dec
pushf
sbb
loopne
call
lcall
add
pop
repnz
adc
test
es
std
mov
and
mov
negb
es
cmp
inc
sbb
pop
dec
pop
and
pop
out
dec
test
sahf
data16
and
out
es
mov
mov
inc
test
test
push
xor
sbb
push
pop
pop
xchg
or
les
dec
pop
mov
das
mov
fsub
jg
les
dec
jae
jne
cltd
popa
iret
shl
fs
jg
jle
fs
loope
push
adc
nop
nop
xchg
ret
jmp
xchg
cmp
cmc
push
jo
adc
fadds
jb
test
mov
lahf
mov
sahf
jg
mov
mov
jp
ret
imul
sub
je
ds
push
sahf
mov
aad
cs
ss
xor
loopne
loop
sbb
in
out
out
push
pop
jmp
hlt
cmc
sub
pop
sti
incl
add
inc
inc
les
inc
enter
mov
mov
sbb
pop
sbb
je
sbbl
push
jmp
push
es
int
xchg
xor
dec
lock
inc
inc
jb
inc
pop
mov
rcrb
mov
pop
xchg
sbbl
arpl
lds
data16
insl
fwait
outsl
loop
jb
stc
mov
jp
mov
addl
scas
mov
dec
jg
in
xchg
xchg
in
in
add
xchg
xchg
fwait
pushf
lret
test
mov
roll
adc
or
mov
and
ret
and
sbb
adc
mov
clc
push
sub
xor
in
dec
lods
dec
pop
imul
push
pop
or
pop
arpl
jecxz
shr
in
and
jg
cmc
mulb
mov
and
data16
jecxz
sub
pusha
popa
js
lods
or
adc
mov
sbb
cmpl
fstpt
cmp
outsb
dec
sub
call
cld
shll
and
cmp
stos
movsb
les
inc
je
add
ret
dec
popa
leave
cltd
jbe
mov
aad
aad
fistl
pop
aas
shrl
gs
out
fsts
jb
js
aas
mov
xlat
fdiv
lret
xchg
mov
in
adc
lea
mov
pop
cmpsb
nop
xchg
cltd
fistps
add
sahf
mov
inc
sub
xor
or
ret
repnz
jle
inc
out
enter
adc
into
rorb
fsubr
mull
add
ficoms
cmpsb
lahf
cli
loope
cmp
call
ljmp
and
inc
addr16
test
incl
mov
insl
sub
insl
xchg
or
punpckhbw
mov
jg
js
das
das
fs
push
mov
mov
cmp
jno
sub
xchg
push
xor
push
andb
ds
loope
inc
test
inc
mov
xchg
jno
jl
pop
mov
push
sbb
pop
cmp
ljmp
add
imul
insb
jno
iret
cmp
sahf
je
fstpl
mov
jle
add
addl
repz
lea
xchg
cwtl
cltd
cmc
pusha
daa
lds
imul
mov
or
movsl
stos
stos
fldcw
scas
mov
cmp
loope
pop
test
sbb
enter
lock
iret
rcl
and
push
mov
dec
add
cmp
das
rolb
icebp
aas
push
mov
jb
repnz
stos
jl
div
das
repz
cs
das
add
or
xor
notl
push
sub
sbb
jbe
add
inc
mov
cmp
jo
sub
jns
sbb
popa
cmp
pushf
inc
pop
adc
cmp
dec
sahf
aas
lods
push
imul
pop
pop
pusha
xlat
xchg
fiaddl
mov
outsb
lds
jne
mov
test
jle
and
mov
loope
dec
clc
icebp
sub
mov
cmp
fistpl
push
pop
inc
mov
mov
aam
loope
fsub
in
mov
mov
cltd
mov
jmp
sbb
jecxz
sbb
rolb
inc
cmp
fcmovnu
and
inc
add
push
pop
and
in
push
dec
mov
in
out
cmp
push
mov
loop
repz
cs
sbb
jecxz
jmp
and
subb
jbe
xchg
jnp
mov
pop
and
push
push
jno
sbb
add
push
mov
imul
or
daa
rcll
cmpsl
push
das
movsl
cmp
aaa
push
inc
inc
xchg
inc
je
pop
xchg
mov
cmp
adcl
push
inc
jle
xchg
rorb
fs
xchg
mov
jne
mov
test
jle
and
mov
loope
dec
clc
icebp
sub
mov
cmp
ficomps
push
pop
inc
mov
mov
out
or
mov
movups
mov
pop
inc
xchg
lods
enter
sbb
mov
xor
imul
adc
int3
int
jmp
adc
fisubrs
mov
fdivrp
cli
xor
sub
push
dec
add
out
push
out
or
emms
or
jnp
lcall
sbb
mov
jo
jnp
movsb
xor
aas
cmp
xchg
sub
aaa
xchg
xchg
test
pop
xchg
outsl
or
addr16
inc
lods
ljmp
jb
xor
popf
jl
int
test
cmpsb
movb
mov
mov
insb
jo
out
ficoml
cmpsl
ret
shll
mov
xlat
insl
into
out
jecxz
icebp
out
mov
fsts
add
inc
ret
ret
rorb
enter
jmp
shrb
sbb
movsl
loop
sbb
sbb
mov
mov
leave
int
les
dec
roll
insb
sub
fcmovb
add
dec
pop
push
dec
or
push
inc
adc
mov
lock
js
shl
cld
push
add
dec
sub
dec
outsb
sub
sarb
xor
or
cmp
adc
inc
push
sub
sbb
psubusb
mov
and
daa
jbe
mov
je
push
popf
push
inc
arpl
dec
pop
daa
pop
cmp
xor
shll
insl
pop
mov
inc
mov
push
push
push
popf
mov
sbbb
push
daa
inc
pusha
popa
pop
pop
in
cs
push
mov
xchg
jo
fistpl
js
inc
pop
mov
xchg
int3
stos
test
dec
cmc
mov
xchg
movsl
int
mov
add
clc
or
mov
lret
mov
aam
stc
sbb
pushf
and
or
fbstp
in
repnz
or
xor
cmp
cmpsl
add
inc
cld
nop
daa
push
or
dec
or
or
inc
sbb
movsb
sbb
repnz
sbb
cmpsb
sub
pop
inc
incl
dec
out
sub
pop
aaa
rolb
or
mov
jge
lret
inc
fimuls
test
mov
jl
xchg
dec
ficoms
imull
xchg
rolb
and
test
pop
rep
inc
mov
inc
push
push
mov
lods
aas
dec
cmp
sub
gs
lcall
pop
pop
pop
movsb
leave
movl
int
insl
outsb
outsl
popf
ss
gs
ficompl
gs
pop
out
fcmovu
jg
ret
mov
fwait
xchg
shll
in
divb
out
icebp
lcall
mov
mov
int3
test
into
push
mov
xlat
mov
and
mov
cmpsb
rol
mov
dec
int3
int3
int
sub
cmp
repz
jbe
cmpsl
loope
jle
ljmp
mov
repz
fs
push
push
imul
add
iret
add
or
lea
adc
adc
cmpb
sbb
dec
xchg
push
mov
push
lock
cs
pop
fwait
xchg
cld
xor
pop
cmp
pop
js
jbe,pt
test
pop
jge
ds
inc
mov
push
add
cmpsb
pop
pop
pop
mov
sub
arpl
ret
push
iret
aaa
imul
cmp
jne
js
inc
inc
subl
xlat
flds
test
loope
mov
dec
pop
jp
xchg
xchg
push
int
sahf
popa
nop
xchg
mov
mov
lods
xchg
cmpsb
jge
push
push
push
call
xchg
pop
lock
mov
in
sbb
or
jmp
fs
lret
es
imul
sarl
ja
cmp
cmp
inc
pusha
lods
jne
jecxz
aas
push
or
sbb
in
adc
testb
out
clc
pop
mov
in
or
sarl
outsl
xchg
or
push
cmp
add
adc
sub
add
icebp
sub
dec
stc
sbb
stos
notb
test
cmp
sub
sub
cmc
scas
mov
stc
clc
test
jge
pop
dec
insb
movsb
and
inc
shlb
jnp
pop
mov
xchg
dec
lret
xchg
xlat
jns
ljmp
pop
stc
push
xlat
mov
shl
in
imul
xchg
xchg
add
fcmovne
outsl
incl
negb
call
xchg
cmpsl
aad
mov
fadds
loop
adc
fbld
xchg
sbb
fists
repnz
and
pushl
cmpsl
sub
add
add
inc
mov
xlat
fisttps
es
xor
mov
xchg
push
dec
out
pop
int3
add
ret
push
xlat
pop
mul
insl
fldt
mov
sbb
sbb
gs
pop
jbe
mov
xlat
sti
adc
push
jo
cmp
dec
lds
aas
ds
and
inc
cmpsl
mov
ds
sbb
sub
mov
xchg
les
aas
mov
in
addr16
clc
stos
insb
inc
scas
xor
mov
dec
push
push
std
js
in
jge
sub
aam
or
scas
lock
mov
xchg
shr
clc
lret
jecxz
sbb
jbe
mov
testl
fisttpll
rorb
out
scas
mov
hlt
or
xchg
push
jnp
mov
cltd
imul
cld
lret
cmpsb
sbb
adc
scas
pop
cs
sub
mov
ret
das
sub
leave
lret
cmp
int3
std
xchg
cmp
rcl
inc
cmp
jle
inc
add
sub
cs
push
sti
ljmp
bnd
jp
pop
stc
cmp
add
add
jb
dec
cmp
pop
push
adc
inc
adc
adc
pop
sbb
dec
pop
xor
or
xchg
dec
jae
xor
jns
xor
test
pop
cmp
fs
lods
cmpsb
scas
aas
inc
dec
jbe
cmp
xchg
xor
push
sarb
pop
jo
dec
test
mov
enter
push
mov
fsts
pop
push
jae
iret
jns
adc
mov
in
test
mov
out
mov
loope
add
and
popf
sahf
push
inc
lea
enter
mov
add
and
sbb
subb
sbb
xor
sub
xchg
outsl
mov
sub
inc
xchg
mov
shlb
arpl
jecxz
dec
xchg
in
out
sbb
push
dec
repz
cmc
and
or
sti
cld
sub
jno
nop
popa
add
pop
xor
imul
or
push
adc
push
mov
sbb
and
push
xchg
mov
sub
push
icebp
stc
and
cmp
xchg
insb
lods
arpl
or
lcall
mov
dec
push
push
test
pushf
sub
pop
inc
pop
pop
popa
aam
sub
fs
loopne
push
fwait
iret
iret
int
adc
loop
jnp
cli
inc
out
jge
flds
addb
xlat
mov
nop
clc
ss
rolb
loopne
cltd
lcall
movb
stos
mov
adc
mov
ret
mov
mov
call
or
mov
iret
add
das
xor
add
scas
mov
push
or
push
or
inc
sbb
pop
push
rorb
mov
popa
lahf
in
add
add
lret
nop
or
popa
cmp
in
cmp
pop
out
cmpb
pop
sbb
sbb
pop
xchg
xchg
out
arpl
and
inc
mov
test
add
cmp
stos
popa
mov
mov
jl
dec
dec
inc
rolb
out
push
push
push
movsl
dec
nop
sbb
mov
hlt
mov
neg
cmpsl
xchg
jb
mov
jbe
sarb
lret
gs
test
out
orb
movsl
cmp
fisubs
add
lcall
movsl
cmpsb
push
dec
xchg
jecxz
pop
mov
mov
scas
fwait
mov
push
popf
daa
call
pop
icebp
sub
add
fcmovnbe
adc
lret
rolb
shl
jle
sti
aad
pop
rorb
fldt
jecxz
out
call
ljmp
push
es
idiv
shll
cli
sub
pop
cmp
add
rorb
sbb
aam
dec
movups
ljmp
sarl
sbb
xor
inc
and
dec
pop
xchg
mov
sub
pop
das
inc
xchg
ja
xor
mov
adc
pusha
pusha
push
sub
out
push
insb
dec
pop
mov
fwait
mov
int3
test
orl
scas
iret
les
stos
outsb
outsl
filds
cmp
js
popa
dec
cmp
mov
inc
push
jo
cmp
mov
out
mov
into
popf
lahf
mov
movsl
cld
aam
mov
adc
add
or
and
out
fimull
sub
sbbl
shll
xchg
scas
int3
aas
xchg
loop
sbb
rcrl
stc
aaa
sahf
ds
je
faddp
fnstsw
cmp
cli
sub
psubsw
arpl
add
pop
push
dec
testb
aas
push
clc
bound
pop
imul
ret
push
sub
aaa
rclb
into
push
jno
sarb
jmp
and
and
out
dec
es
lock
insl
sub
out
mov
jns
pop
subl
testb
mov
xchg
imul
xchg
lea
mov
test
lds
ds
push
push
icebp
cmpsl
inc
mov
push
mov
sub
fs
add
gs
mov
aaa
fs
and
jns
jnp
daa
mov
int
xchg
icebp
scas
fdivr
mov
divl
test
in
stc
jmp
mov
stos
mov
clc
sbb
iret
add
and
cmpsb
out
fimuls
mov
jmp
mov
into
iret
cmp
add
frstor
hlt
dec
pop
or
or
in
in
cmp
pop
push
dec
and
mov
sti
cld
dec
loop
and
inc
inc
pop
or
das
jns
loop
sbb
or
cmpl
inc
inc
push
mov
push
in
repz
sub
xchg
iret
inc
jnp
pushf
push
inc
bound
or
cmp
add
dec
cmp
dec
jb
push
sub
ja
sub
pop
aas
pop
pop
push
sub
lret
ds
addr16
jg
mov
outsb
ficoms
in
cmp
mov
ja
ds
dec
xchg
mov
xchg
add
in
rorl
xchg
xchg
xchg
les
sti
lret
xchg
pushf
popf
jecxz
or
lahf
shrb
fisubl
pop
push
and
add
sbb
mov
mov
mov
jbe
mov
dec
int
jo
cmp
int
add
dec
mov
xchg
movsl
lahf
lret
cmp
call
ljmp
cmp
repz
sub
jno
imul
push
xor
inc
jbe
or
inc
or
adc
clc
adc
sbb
sbb
and
xchg
test
sub
mov
cmp
ret
jbe
cwtl
jns
test
dec
dec
dec
mov
push
dec
ficompl
inc
pop
pop
pop
stos
inc
movl
jge
xchg
insb
fsubl
jae
fcomi
mov
jp
jnp
xchg
jle
cmpsb
addl
jg
nop
xchg
xlat
xchg
mov
int
cltd
add
mov
sti
xor
adc
lods
scas
fcompl
adc
mov
scas
mov
mov
shll
aad
sub
xchg
cs
aad
pushf
add
fdivs
mov
dec
inc
vcvttpd2dq
cmpsb
sbb
jmp
cmpsb
stos
push
repnz
sbb
xor
cld
mov
push
pop
or
sub
and
aaa
adc
dec
fs
test
sub
xchg
and
out
imul
pop
sub
cs
xor
and
cmp
mov
or
inc
inc
dec
dec
xchg
fwait
push
jae
jg
addr16
push
push
xchg
std
mov
ret
rol
cmpsb
iret
popa
popa
bound
gs
lea
iret
addr16
imul
ja
lahf
jp
inc
pop
jg
fadds
jnp
mov
xchg
xchg
xchg
ret
lea
lods
lahf
mov
movsl
cmpsb
aam
jne,pn
lods
lods
pusha
nop
mov
mov
adcl
cmpl
xor
inc
pop
scas
leave
lret
nop
mov
sarb
pop
iret
fcomp
lcall
add
adc
out
xchg
andps
out
fwait
push
ret
clc
div
clc
stc
ret
std
data16
in
outsl
sub
pop
jne
fiaddl
movups
adc
lret
adc
add
mov
sbb
sub
xchg
out
sub
xor
mov
mov
pusha
fs
xchg
xchg
inc
inc
inc
mov
loop
mov
dec
dec
dec
push
data16
jnp
pop
int3
test
jg
pop
jb
cmpsl
xchg
rorb
jns
imul
outsb
jne
jbe
cmc
push
jnp
loope
jg
sub
addl
les
xor
mov
add
xchg
cltd
fwait
pushf
lret
xlat
sahf
lahf
rorb
movl
lods
lods
scas
mov
push
sbb
sbb
mov
push
out
mov
leave
cmp
ss
and
xchg
inc
add
sarl
ja
cmp
fcmovnu
xor
loop
sub
out
pop
xor
icebp
repnz
aas
repz
cmc
sti
cld
movsb
pusha
icebp
sti
add
out
lahf
std
add
or
femms
mov
adc
jp
xor
mov
inc
inc
dec
xchg
ja
loop
push
xchg
mov
es
pop
xchg
inc
repz
xor
cmp
pusha
pop
insl
xchg
lods
addr16
mov
cmp
dec
dec
jns
cmp
mov
inc
mov
pop
into
lret
push
push
bound
iret
enter
push
insb
pop
arpl
jno
movb
jle
lods
inc
xor
test
dec
test
mov
mov
push
add
out
sahf
or
mov
adc
fsts
rorb
inc
sbb
mov
jnp
enter
ficoms
test
xchg
ret
sub
lea
push
rcl
rolb
js
rcr
inc
jge
jp
fucom
in
dec
jmp
in
lods
and
div
fdivrp
mov
add
addr16
add
pop
clc
rol
jmp
cmc
rcl
icebp
sti
push
mov
loop
dec
sbb
sub
xorb
hlt
scas
insb
das
xor
xchg
insb
xchg
stos
push
jno
test
inc
dec
dec
js
mov
push
gs
push
int3
addr16
mov
int
jle
lods
lods
rorb
outsl
jo
in
ficoms
pusha
rcl
mov
inc
int3
test
testb
xchg
xchg
jmp
cmpsl
mov
mov
bound
popf
sahf
push
adc
test
stos
loope
dec
xchg
lods
lods
pop
and
mov
xchg
mov
mov
mov
mov
call
enter
mov
add
xlat
cmp
ss
jle
test
in
jae
or
addr16
pop
and
out
lock
xor
enter
clc
inc
stc
xor
add
dec
or
pop
or
paddb
lahf
test
adc
sub
sbb
test
lcall
mov
xchg
mov
push
aaa
push
pushf
fisubl
mov
cmp
mov
repnz
lock
mov
ss
push
lods
scas
mov
mov
aad
fmuls
je
insb
rorl
andb
hlt
mov
jmp
loopne
jl
addr16
gs
xchg
loop
div
mov
or
xchg
lds
movsl
cltd
lcall
push
mov
stos
sbb
jne
mov
mov
mov
gs
ds
daa
daa
outsl
outsb
pop
push
and
inc
sarl
adc
push
dec
pop
fcmove
fcmovnu
fcompl
sub
adc
cmp
adc
lock
add
sbb
push
arpl
imul
outsl
test
jne
ret
adc
sbb
test
mov
fistpl
enter
sub
xor
push
jge
movsb
repnz
mov
cmp
js
arpl
lea
push
lods
mov
cmpsl
stos
lods
mov
mov
call
lahf
pop
rorl
les
imul
xchg
out
sbb
cmc
ja
sbb
in
fildll
xlat
repnz
mov
loope
push
imul
mov
or
xchg
fdivrs
mov
sbb
add
mov
mov
jno
daa
fwait
mov
out
mov
ret
out
les
ss
lds
push
nop
mov
sti
aad
enter
mov
mov
data16
mov
addr16
and
subl
push
or
outsl
add
jb
add
sub
add
ss
xlat
jno
cmpb
cltd
in
add
es
or
push
pop
sub
pop
xor
cmp
pushf
clc
xchg
xchg
mov
pop
scas
cmpsl
inc
inc
dec
dec
dec
mov
jae
jg
cmp
push
push
mov
pop
sarb
ret
pop
bound
fnstcw
mov
cmp
outsl
jo
push
arpl
repnz
xchg
enter
outsb
in
in
test
je
pushl
ret
xchg
clc
cmpsl
add
xchg
cltd
fwait
pushf
lret
popa
mov
adc
test
nop
stos
lods
in
sbb
push
sub
mov
push
inc
xor
mov
out
sub
jnp
in
xor
test
ss
cmp
inc
adcl
xchg
data16
call
imul
les
shr
jle
jo
test
xchg
add
add
add
ja
in
cmp
inc
adc
sbb
mov
jg
pop
and
cmp
jg
clc
scas
cli
mov
mov
stos
stos
lods
lods
stos
cld
adc
inc
inc
cmp
je
dec
cwtl
xor
mov
push
inc
pop
pop
push
ljmp
xchg
mov
out
xchg
xor
sbb
inc
call
daa
mov
push
enter
clc
icebp
out
hlt
sub
mov
xchg
xchg
inc
jl
out
dec
ret
adc
adc
stos
add
add
je
jae
mov
push
mov
cmpsl
xorl
outsb
rol
xor
xor
lret
int3
cli
xchg
ja
into
iret
cmp
fadds
inc
cmp
or
in
sub
push
or
cli
in
out
push
xchg
or
cmc
inc
fdivr
or
insb
into
data16
ljmp
das
inc
and
adc
add
int3
mov
enter
and
daa
jb
dec
and
inc
lcall
pop
cs
xor
push
inc
inc
lods
ljmp
jge
push
gs
popf
jp
mov
mov
pusha
lret
xor
xchg
sub
ret
stos
pushf
fcmovbe
fildl
jne
into
js
inc
mov
fxtract
xchg
dec
jbe
test
stos
aam
lds
dec
xchg
xchg
xchg
pop
jbe
cwtl
cltd
repz
lahf
mov
call
nop
aad
or
movsl
lods
scas
hlt
push
sbb
mov
jp
mov
movsl
icebp
mov
and
mov
mov
lret
and
adc
aad
aam
cld
xlat
add
lds
lods
sub
push
dec
jbe
call
rcrb
push
icebp
and
leave
repnz
sti
inc
xchg
std
cs
pop
or
add
testb
or
or
sub
lret
adc
sbb
cmp
xchg
or
ret
sub
add
xor
sti
push
sti
cmp
cmpsl
sahf
lret
cmp
ret
imul
mov
mov
stc
clc
cmpsl
shlb
inc
pop
pop
int3
sbb
mov
aad
aad
subb
gs
cmpsl
imul
js
aad
or
jg
sub
popl
repnz
cmc
ljmp
mov
cltd
lcall
movsb
stc
shrl
cmpsl
test
pop
sarb
add
ja
ret
mov
cld
mov
mov
es
sarl
mov
lds
sub
lock
xchg
inc
jecxz
sarl
jns
inc
std
in
dec
inc
stc
fnclex
jecxz
adc
dec
pop
sub
pop
push
bound
gs
mov
push
sub
pop
stc
add
das
add
push
sub
ja
and
adc
pop
xchg
test
adc
ficomps
sbb
mov
out
pop
and
pop
andb
popf
imul
arpl
ds
cmp
push
sti
mov
mov
mov
dec
dec
push
push
les
sbb
pop
push
push
mov
mov
je
aad
iret
mov
push
jecxz
insb
insl
aad
pop
stos
iret
iret
out
mov
aam
fists
cmc
fnstenv
xchg
sub
jne
mov
ret
and
or
test
movsl
fdivr
out
int
stos
mov
sbb
sahf
cld
xor
fnstsw
mov
out
hlt
xor
arpl
int3
int
and
xor
into
aam
add
das
fldlg2
adc
add
sbb
sub
or
mov
inc
inc
inc
inc
push
repnz
pop
mov
jecxz
xor
std
int
dec
add
jb
pop
pop
or
cmp
cmp
movups
mov
sbb
jo
mov
jb
shlb
mov
sub
pop
xchg
popl
xor
pop
xor
dec
xor
cmp
cmpsb
inc
cmp
mov
pop
inc
inc
inc
je
cs
dec
dec
mov
xchg
ja
push
enter
cmpsl
mov
stc
pusha
bound
lahf
bound
mov
pop
xchg
insl
sbb
fistpll
jbe
xchg
int3
or
test
out
orl
cmp
out
icebp
in
push
mov
addr16
lods
mov
stos
pop
xor
aam
xchg
mov
leave
stc
fidivrs
sub
stos
lock
xlat
sub
mov
lret
lret
daa
ss
cwtl
outsl
push
rcl
xchg
fcomp
xor
movsl
dec
adc
loope
cmp
cmp
push
adc
lcall
mov
push
sub
add
popa
in
or
clc
outsb
lret
add
push
and
adc
jbe
sbb
ja
and
outsl
dec
sub
hlt
clc
cs
jle
lahf
cwtl
adc
cmp
xchg
ds
inc
mov
mov
test
dec
dec
dec
mov
pop
push
push
lods
mov
addr16
pop
mov
mov
shrb
js
imul
jle
xchg
inc
sbb
test
jecxz
jns
adc
fs
dec
xchg
iret
push
hlt
insb
les
divl
xchg
or
ret
test
fstl
iret
cld
outsb
xchg
mov
stos
add
fidivrl
pop
xor
mov
mov
mov
jg
test
sbb
ror
lret
aas
hlt
iret
sub
cltd
xlat
mov
fidivl
movsb
mov
fnstsw
enter
mov
pop
push
push
sbb
mov
push
fbld
lcall
lret
add
pop
or
push
push
adc
rolb
sub
sbb
ret
or
and
es
xchg
inc
xor
popf
scas
xor
inc
jb
or
push
inc
dec
mov
repz
push
push
lods
sbb
dec
ret
xchg
ds
mov
scas
outsl
loop
leave
cmp
jae
js
jae
jbe
jnp
xlat
fimull
test
lahf
mov
or
mov
test
xchg
fs
lahf
mov
mov
pop
rcrb
mov
mov
jne
pushf
out
loopne
in
add
das
sub
leave
mov
int3
std
xchg
imul
sarb
js
pcmpeqb
xor
jecxz
push
dec
ret
in
in
sbb
or
repz
pop
popf
push
push
add
lret
pop
or
cltd
or
or
into
dec
jge
bound
dec
fnstenv
jg
jge
jbe
out
push
push
xchg
jl
cwtl
sbb
sub
jae
outsb
push
mov
jge
arpl
test
xor
xor
mov
leave
mov
push
gs
enter
mov
dec
mov
movsb
jmp
into
pop
loop
jecxz
mov
cmc
mov
mov
imul
jno
xchg
mov
mov
xchg
int3
push
xlat
addr16
rol
xchg
std
adc
adc
push
adc
out
push
sbb
cltd
mov
pop
pop
adc
sub
adc
xor
mov
sbb
aaa
loopne
mov
filds
push
into
sbb
pop
sarl
push
leave
adc
ja
call
push
adc
sbb
and
mov
push
in
lock
es
xor
out
aaa
rolb
or
xor
push
cmp
or
nop
mov
and
push
imul
and
pop
and
mov
jbe
adcl
movsb
out
sahf
mov
mov
scas
roll
jle
pop
pop
pop
pop
xchg
aas
xor
dec
in
stos
fcoml
fs
pop
out
imul
xchg
jmp
repz
add
cmc
das
icebp
jae
les
incl
iret
mov
jle
pop
insb
adc
ja
mov
mov
jmp
jbe
mov
mov
je
cvttps2pi
mov
test
aaa
fdivl
inc
add
ds
adc
mov
inc
mov
enter
notb
adc
sbb
jmp
ret
lods
inc
das
mov
sub
ss
outsb
mov
je
jo
cmp
icebp
mov
add
jge
or
je
mov
rcrl
subl
and
xorb
js
das
inc
inc
ja
xor
sub
jbe,pn
scas
or
inc
push
dec
dec
mov
cmp
cmp
push
pop
insl
shll
leave
xchg
data16
scas
mov
rcll
xchg
cmp
ret
loope
jg
loop
addb
xchg
imul
out
nop
xchg
out
pop
and
test
mov
or
movsb
cmpsb
cmpsl
aad
push
int
stos
lods
lods
pop
or
sbb
mov
mov
mov
rol
jnp
in
sub
mov
into
sub
aaa
das
mov
fsubr
push
daa
add
inc
mov
in
xor
adc
mov
stc
lock
dec
and
std
adc
test
pusha
jae
fmuls
and
pop
cmp
jns
cwtl
imul
cmp
push
mov
push
out
push
xor
sub
xor
mov
lods
inc
jb
test
inc
mov
ret
adc
dec
dec
mov
cmp
push
push
cmp
inc
cmpsb
inc
mov
jne
inc
mov
cmpsb
xor
ficompl
sub
pop
jo
mov
mov
and
shr
dec
outsl
xchg
addl
mov
mov
xchg
xchg
add
add
cwtl
adc
nop
adc
adc
subl
mov
mov
adc
loope
and
stos
testl
aaa
xor
rcl
sbb
inc
stc
aam
sahf
adc
and
fisttps
pop
stos
out
cs
call
inc
clc
out
lock
cmpsl
hlt
cmc
mulb
cmc
fistpll
insb
bound
xchg
mov
or
jo
adc
fcoms
cmpl
push
jbe
out
inc
and
jno
xchg
mov
adc
adc
test
sahf
jp
aas
inc
xchg
mov
inc
jae
mull
dec
mov
mov
and
pushf
xor
jge
mov
adc
pop
lods
push
into
mov
push
nop
imul
arpl
fcmove
outsb
jnp
ret
mov
mov
cli
scas
mov
push
xchg
xchg
mov
mov
adc
out
mov
sahf
iret
add
mov
push
test
mov
cmpsl
sbb
sahf
mov
loop
push
lock
lds
mov
pop
jns
xchg
mov
jmp
fmull
dec
add
cs
mov
fstpl
mov
dec
testb
inc
push
clc
pusha
repnz
out
popa
lods
in
add
nop
sub
outsl
fwait
or
push
pop
rorb
inc
movsb
cmp
inc
pusha
mov
inc
sbb
and
and
imul
daa
pop
icebp
imul
jmp
fwait
sti
xor
bound
inc
mov
or
addr16
dec
scas
in
push
mov
cmpsl
mov
pop
xchg
pop
pop
pop
leave
mov
bound
rcrb
dec
push
sub
push
test
inc
xchg
addb
mov
xchg
mov
out
add
addr16
pushf
popf
lret
mull
mov
lods
mov
jle
mov
or
jl
mov
mov
lods
or
mov
repz
xchg
xchg
fcom
shrl
fidivl
fcomip
data16
pop
loope
mov
call
movsl
out
out
lock
push
mov
clc
stc
daa
gs
push
sub
jb
cmpsb
push
add
dec
mov
out
push
fsubrs
adc
cmpl
jbe
xor
jecxz
xchg
lods
sub
sub
das
xor
cmp
pop
push
imul
es
cmpsb
pop
inc
inc
stos
jmp
dec
dec
dec
daa
mov
push
stos
test
mov
pop
pop
mov
lret
sub
mov
nop
push
sub
loopne
jno
jb
xorb
push
aad
xchg
popf
cmpsb
or
lock
inc
xchg
mov
jle
fiadds
pop
jle
popf
mov
in
lahf
call
push
lret
outsl
stos
mov
clc
sbb
jnp
mov
adc
es
mov
sbbb
rolb
lcall
and
dec
add
dec
inc
adc
in
sub
out
call
in
out
push
xchg
or
sub
sbb
ret
mov
add
pop
xor
ja
push
je
cmp
push
andnps
adc
inc
fldt
push
pop
jg
jb,pn
in
pop
and
sub
sahf
adc
inc
test
repnz
leave
ss
cmp
inc
sbb
dec
popf
ja
xchg
push
dec
dec
cmpsb
jle
mov
push
push
push
test
sbbb
lods
mov
lea
mov
fcmovnbe
outsl
jo
shll
pop
movsb
pop
sahf
jns
ret
or
movsb
jg
out
addb
mov
nop
clc
cmpsl
int
push
xchg
cwtl
cltd
repz
mov
stos
stos
fsts
ror
fnsave
iret
mov
sbb
jg
rol
mov
xchg
jno
mov
sub
in
sbb
roll
lret
cmp
pusha
lods
xor
inc
inc
stos
or
in
pop
imul
jbe
mov
gs
gs
idiv
add
mov
jne
rolb
adc
mov
fadds
and
sbb
jno
jno
sub
xor
aaa
test
cmp
push
adc
addr16
mov
and
dec
jns
mov
dec
push
push
sbbb
nop
push
push
ret
jl
mov
shr
popa
bound
gs
push
rorb
pop
cli
imul
fcompl
lahf
jp
lods
xlat
out
fs
popf
mov
mov
hlt
xchg
jbe
xchg
or
inc
push
mov
repz
clc
mov
movsb
or
mov
jmp
outsl
lock
popa
pusha
cvtpi2ps
rol
push
and
cmp
push
push
push
xchg
ljmp
aad
fisubs
arpl
mov
in
movsb
sahf
in
out
jecxz
cmp
cmp
mov
xchg
aad
ljmp
faddl
add
cli
xchg
dec
xchg
dec
or
or
lcall
inc
bound
sbb
icebp
push
inc
and
sub
mov
testl
sahf
aaa
aas
inc
outsb
pop
imul
push
aaa
xchg
cli
ss
dec
push
fs
inc
js
stos
ret
push
pop
pop
mov
pusha
jae
stos
mov
and
sub
lret
adc
ret
sub
jae
cmp
aam
shrl
inc
adc
xchg
xchg
xchg
ljmp
fwait
loope
mov
movsl
cmpsb
adc
lods
sahf
adc
add
jae
fnstsw
rol
lock
ffreep
lds
xor
aad
into
iret
sbb
lcall
xor
aam
fstp
or
inc
mov
in
adc
movsl
in
in
out
mov
inc
add
std
push
daa
cs
and
push
jmp
adc
fldenv
xor
int
pop
dec
mov
daa
push
out
repz
sub
cwtl
mov
xor
iret
nop
xor
mov
cmpsb
std
in
inc
inc
inc
inc
mov
dec
dec
dec
xor
sti
push
push
push
push
daa
inc
rcrl
pop
pop
pop
inc
dec
mov
lods
cmp
imul
pop
dec
xchg
jb
fsts
inc
adc
insl
lret
test
mov
xchg
ret
mov
xchg
out
pop
add
xchg
mov
leave
movsb
aad
repz
test
stos
xchg
mov
loop
sbb
lods
mov
fstpt
test
stos
sub
sahf
iret
rclb
dec
test
pop
cmc
xlat
fsubs
ljmp
fnsave
rorb
sbb
pop
fwait
mov
lcall
arpl
add
jb
jmp
sbb
jbe
repz
adc
sbb
xchg
sub
xchg
xchg
mov
dec
cmp
xchg
xchg
stos
add
cmp
cmpsb
pop
dec
xor
inc
mov
aad
dec
dec
mov
pop
inc
mov
fbld
push
push
ret
es
pop
jle
push
mov
xor
leave
adc
push
mov
rcrl
inc
je
loop
fldl
jnp
sahf
mov
sub
in
ljmp
xchg
lea
add
out
pusha
daa
mov
add
je
cmpsb
aam
outsb
repz
test
scas
scas
mov
ljmp
sbb
arpl
sub
ret
les
dec
mov
iret
rcl
shrl
das
xor
cmp
dec
add
adc
fsub
jmp
dec
stos
inc
inc
loope
sbb
repnz
sbb
daa
gs
mov
or
add
int3
pop
push
pop
or
testl
adc
cld
insl
sbb
sbb
and
arpl
dec
sub
sahf
push
pop
test
xor
aaa
inc
inc
inc
nop
sub
inc
dec
dec
mov
mov
and
push
push
pop
cmpsl
insl
mov
rolb
pop
pop
out
dec
bound
jmp
insl
lods
push
fsts
push
loope
jns
inc
dec
cmpb
lock
fcmovu
dec
inc
movsb
mov
sti
mov
rcll
xchg
xchg
repnz
jecxz
jb
lahf
mov
mov
int
sub
cwtl
and
push
sbb
sub
xor
out
sub
ror
int3
rolb
cwtl
push
fcom
aam
das
fimull
call
push
into
lods
push
call
pandn
dec
repnz
cmc
or
repnz
lds
add
pop
lret
jp
push
pop
popa
bound
sbb
aaa
adc
mov
and
js
xchg
and
and
sub
pusha
stc
sub
cmp
xchg
xchg
xor
jp
pushf
xchg
dec
xchg
das
dec
pusha
pusha
xchg
jne
mov
push
mov
cmp
pop
stos
dec
lret
test
xchg
sub
addr16
or
outsb
outsl
jo
sbb
jp
mov
out
out
cmpsl
outsl
mov
fwait
out
shlb
mov
std
mov
ret
adc
cltd
call
xchg
popf
cltd
sub
stos
stos
sbb
push
push
scas
scas
mov
test
pushf
mov
sub
mov
mov
insl
adc
rolb
sub
sub
xchg
scas
add
cmp
hlt
push
fucomp
pop
mov
lods
jmp
in
out
dec
pop
push
lcall
push
jbe
and
push
add
add
sbb
push
xor
jae
adc
sub
ret
and
and
sahf
outsb
dec
and
lahf
and
xor
mov
pusha
cmp
push
idivb
inc
inc
or
inc
inc
mov
xchg
je
mov
mov
mov
mov
pop
jbe
arpl
or
iret
pop
imul
jne
fidivl
shr
nop
ret
jge
adcb
in
mov
insb
pop
mov
rolb
and
jg
sub
sahf
iret
or
test
xor
cmp
scas
mov
push
mov
mov
shlb
rol
sub
lret
aaa
lock
cltd
mov
jnp
inc
aas
xchg
loopne
push
cs
in
push
dec
ja
jmp
pop
outsl
inc
sbbl
cs
cmpsb
movsl
push
outsl
int
pop
pop
add
or
arpl
jl
std
pusha
adc
sbb
adc
mov
sub
sub
jge,pn
jg
ss
dec
jle
cmp
xor
xchg
xor
dec
jnp
inc
insb
dec
push
mov
ficoms
pop
movsb
push
subl
cmpsb
lods
mov
rorb
popf
jno
fdivrs
and
js
out
arpl
mov
test
js
mov
icebp
pop
sbb
cmp
cmp
ret
fwait
xchg
add
out
lods
test
mov
scas
sbb
mov
insb
mov
rol
fwait
xor
xchg
movsb
lret
int3
adc
lods
repz
lcall
sub
cmp
xchg
fstp
or
inc
iret
ret
adc
pop
out
push
mov
pusha
pop
in
cli
sti
sub
adc
std
decb
outsb
addr16
or
dec
test
xor
cmp
repz
adc
push
arpl
test
cli
push
pop
gs
jmp
cmp
daa
loopne
sub
sub
xchg
pop
add
cmp
icebp
push
cmp
aas
movsb
xor
inc
inc
inc
stos
inc
adc
dec
dec
mov
pop
push
push
push
mov
and
clc
sub
pop
ret
arpl
and
imul
jo
adc
loopne
inc
cmpsb
sarb
push
mov
imulb
push
out
data16
mov
mov
jmp
cmpsl
sbb
mov
push
repz
dec
movsl
cmpsb
aam
test
stos
sub
sbbb
sub
or
mov
aad
or
les
lret
and
rcl
add
xlat
ljmp
scas
mov
loop
cmp
shl
cli
push
xor
jmp
dec
cwtl
xchg
hlt
pop
adc
in
push
add
jo
add
or
jae
cli
inc
or
fists
sbb
inc
loopne
sbb
xchg
cmp
cmp
sbb
push
xchg
xor
lods
adc
andb
lret
cmp
mov
jge
jno
imul
scas
push
dec
dec
push
xchg
fstpt
cmp
push
pop
sar
xchg
cli
sbb
popa
xlat
cmpb
push
sarl
imul
fistps
pusha
inc
mov
and
mov
cld
repz
nop
xchg
xchg
loop
roll
pop
call
popf
not
pusha
loope
enter
cld
pop
jne
ja
xchg
scas
scas
or
jecxz
inc
inc
inc
or
ret
ret
cld
leave
and
outsb
js
push
sbb
jns
je
and
sbb
mov
std
andl
test
xor
insb
out
in
sbb
or
jmp
ja
les
incl
pop
pop
xor
dec
inc
and
or
push
pop
es
mov
das
sbb
add
dec
nop
inc
and
lcall
je
sahf
push
xor
ss
faddl
and
inc
push
push
mov
mov
scas
dec
dec
ds
xor
push
test
rclb
mov
cmpsb
dec
movl
lret
or
lea
mov
xchg
dec
push
jo
xchg
mov
add
jl
mov
int3
stos
test
lock
dec
fdivrs
mov
mov
fistpll
ljmp
mov
sbb
lods
cmc
out
mov
sub
mov
jecxz
sbb
mov
clc
ss
ret
cld
daa
shl
pop
sbb
sarl
xchg
leave
cmp
movsl
in
jecxz
or
inc
jmp
or
in
cmp
pop
push
rorb
mov
popa
lahf
call
dec
lods
sub
jmp
or
push
lret
cli
adc
jnp
fcomps
sub
inc
sbb
inc
in
adc
sub
je
sub
xor
xor
mov
pop
cmp
ds
push
nop
jle
inc
pushf
je
stos
mov
insb
dec
push
push
cwtl
rcll
test
imul
ret
popa
xchg
mov
fimull
nop
cmpsl
insl
outsb
lds
jb
fsts
ljmp
pushf
addb
mov
mov
repz
mov
lcall
pop
and
test
stos
sbb
into
mov
mov
jecxz
mov
mov
adc
sub
ffree
ret
sbb
out
enter
in
shl
lock
rcl
cli
sarb
jg
inc
pop
fmul
roll
jecxz
out
xor
std
or
adc
pop
adc
and
xor
testb
fildll
mov
das
dec
lea
add
imul
or
push
or
push
cmovo
pop
loopne
xor
xor
fisubs
and
fwait
inc
subl
sub
cs
xchg
push
cs
mov
mov
add
test
addr16
dec
dec
jnp
dec
notl
stos
mov
jns
mov
lret
sub
inc
popa
bound
cmp
popf
ss
test
ficompl
popa
jecxz
fs
fs
xchg
ljmp
rorb
inc
pop
mov
rcll
repnz
jmp
xchg
movsb
mov
in
int3
cmpsb
push
adcb
scas
and
cld
lahf
sbb
mov
mov
stos
testb
and
adc
scas
int3
int
xor
iret
aad
add
fldlg2
push
and
fistpl
cmp
out
int
nop
and
in
inc
sbb
push
bound
icebp
mov
cmc
cmc
mulb
cld
call
dec
sbb
add
push
or
adc
push
pop
outsb
inc
pop
xor
and
and
push
in
dec
inc
daa
sub
mov
xor
xor
dec
cmp
xchg
imul
jb
inc
pop
into
outsl
dec
mov
dec
ret
adc
cwtl
fwait
dec
push
push
push
pop
outsb
pop
dec
sbbb
dec
lods
mov
lret
imul
outsl
subl
push
arpl
fcmovbe
jns
jl
jnp
inc
mov
addb
mov
mov
stc
mov
loope
jg
popf
or
lahf
movsl
cmpsb
aam
test
stos
add
mov
mov
sbb
popa
pusha
cvtpi2ps
rorl
inc
cmp
lret
and
repz
jno
inc
stc
aam
aas
cld
int3
xor
add
or
cs
or
push
scas
cmp
ljmp
sub
pop
fs
idiv
incl
data16
and
inc
insl
call
test
pop
insb
jp
cmp
adc
pop
movsb
loopne
pop
dec
loope
push
sbb
mov
ljmp
pop
xchg
nop
sub
xor
pusha
sahf
xchg
scas
aaa
cmp
add
sub
pop
mov
scas
push
outsb
dec
jp
xchg
fs
dec
test
pop
pop
pop
mov
adc
pop
lret
test
sub
xchg
dec
rcll
xchg
jne
loope
test
inc
pop
jo
jg
cmpsb
es
xchg
popf
xchg
cmc
mov
ficoms
add
adc
xchg
mov
inc
pop
jbe
test
mov
hlt
cli
fnstenv
push
mov
sub
mov
jmp
idivl
or
rcl
aam
cmp
push
dec
inc
pop
stos
call
ljmp
icebp
popa
pop
pushf
cmc
div
inc
mov
int
add
xor
shlb
repz
adc
or
cmp
jb
mov
sbb
dec
mov
jg
out
negl
sub
jp
fwait
xchg
test
xor
pop
cmp
adc
cmp
mov
mov
sahf
sbb
jp
idivl
dec
dec
mov
xchg
lods
sbb
insb
push
pop
mov
shlb
sub
push
gs
or
mov
stos
aaa
je
fneni(8087
lcall
mov
rol
add
frstor
mov
movsb
std
xor
outsl
pushf
popf
add
bnd
mov
movsl
add
sti
mov
mov
sbb
iret
xchg
imul
xchg
mov
ss
enter
inc
jecxz
iret
xchg
leave
cltd
stc
aam
sahf
mov
or
dec
mov
in
adc
btc
and
lds
fs
xor
adc
add
movsb
cld
aam
pop
outsl
lods
push
je
movsl
push
adc
pop
sbb
jo
sbb
out
aaa
and
pop
out
sub
sub
cltd
repz
pushf
fs
ds
cwtl
inc
push
enter
stos
cmp
or
dec
dec
dec
cmpsl
adc
les
lea
mov
scas
mov
xor
clc
mov
jns
sub
aam
loope
jbe
xorl
scas
mov
shrb
mov
mov
pop
loopne
lcall
sti
invd
pusha
popf
test
shrb
aad
jmp
mov
sbb
mov
and
cmp
or
xchg
in
enter
mov
lock
inc
cmp
xchg
fcmovnu
or
xchg
pop
loop
adc
xor
xchg
icebp
aaa
test
sbb
and
adc
clc
stc
inc
pop
ljmp
push
pop
xor
or
cld
adc
pop
ja
adc
mov
out
inc
and
notl
es
int
xorb
xor
cmp
cmp
ret
test
cmp
inc
dec
dec
dec
lahf
mov
push
push
subb
scas
mov
lret
les
xor
ret
jo
jg
xchg
jb
cmp
bound
shrl
jl
jmp
dec
push
test
pop
mov
nop
flds
xchg
xchg
xchg
add
sbb
popf
sahf
in
lds
pause
movsl
cmpsb
push
dec
lods
add
dec
loopne
mov
stc
stos
lahf
mov
and
nop
mov
aam
or
ret
sub
int3
into
iret
adc
aad
aam
cld
xlat
pop
movsl
xchg
fcmovnu
cmp
lret
push
loope
insb
mov
call
stos
lock
repnz
mov
mov
mov
int
jmp
add
or
fldt
jnp
adc
and
sbb
cmpl
lock
sub
xor
mov
xor
pushf
pop
add
popa
cmp
daa
mov
xchg
jno
mov
inc
mov
push
push
push
movsl
dec
jg
mov
arpl
pop
imul
enter
jno
mov
iret
jl
add
movsb
jle
js
idiv
filds
jno
mov
clc
icebp
sbb
xchg
test
hlt
loop
pushf
popf
sahf
out
imul
sti
test
das
lock
or
sbb
mov
sarb
or
mov
lds
ja
out
lret
loop
pop
not
cmp
xlat
dec
stc
xor
inc
aas
xlat
loopne
getsec
in
pop
das
or
fisubrl
lock
mov
fistps
push
lahf
cli
sti
cld
pop
int
dec
out
test
roll
or
fs
idivb
or
sbb
sbb
jo
jnp
repnz
sub
jns
xchg
sub
cmp
fnstsw
cmp
mov
out
push
dec
dec
dec
dec
mov
ja
mov
fwait
lds
mov
ret
pusha
popa
mov
mov
imul
jo
js
ja
jns
stos
inc
dec
jno
or
xchg
cmp
out
push
mov
scas
ret
xchg
or
cmpsb
sbbl
imul
test
pop
push
cmp
in
push
xor
inc
mov
and
imul
xchg
dec
xchg
fnstcw
cmp
and
aas
xor
int
add
cmpb
out
push
ret
adc
pop
dec
int
push
rcrb
popa
push
lret
xor
addr16
jns
push
add
or
push
adc
pusha
cmp
popl
push
fsubrp
inc
pop
and
xchg
dec
sbb
sahf
bnd
xor
js
xor
cmc
sub
stos
arpl
fwait
mov
inc
xor
inc
mov
inc
subl
je
mov
xor
pop
adc
das
int
gs
addr16
mov
jp
xchg
pop
jno
clc
jno
jae
loop
daa
insl
jl
ret
js
movsb
jg
dec
pop
outsb
test
divl
je
xchg
add
inc
addr16
mov
nop
movsb
movsl
call
adc
mov
push
mov
cmpsb
mov
mov
fidivrs
fisttps
cld
rol
fisttpl
mov
icebp
xchg
xor
inc
jle
aas
mov
dec
add
xor
call
ljmp
hlt
fstpt
cli
sti
push
sub
lods
testl
sub
or
jae
pop
or
sbb
inc
sbb
addr16
and
jecxz
mov
daa
sub
jb
inc
sub
lahf
cwtl
in
cmp
add
popa
cmp
push
pop
sub
mov
xor
lods
stc
inc
dec
dec
xchg
idivb
inc
push
push
mov
lret
pop
fs
sub
imul
mov
insb
ja
cmpsb
jp
dec
jge
xchg
movsl
jg
out
negl
mov
jns
inc
pop
add
popf
iret
add
dec
lds
mov
int3
xchg
lods
pop
xor
mov
mov
out
sbb
or
sti
movsl
out
push
jmp
cmp
lret
jge
rcl
sbb
mov
outsl
fcmovu
inc
cmp
jecxz
pop
add
jmp
mov
push
mov
bound
adc
cld
outsl
jecxz
mov
cmpsb
pop
jno
mov
or
shll
rclb
adc
mov
xlat
push
xchg
and
jp
cwtl
sbb
cmp
jae
sub
mov
inc
jnp
xor
scas
mov
data16
stos
dec
inc
dec
dec
dec
roll
push
data16
and
mov
pusha
arpl
stos
mov
push
adc
rcr
out
cmp
jb
into
rol
xchg
scas
jl
mov
daa
jo
xor
jbe
sub
in
add
mov
xchg
pop
jg
or
movl
sahf
or
test
pop
lock
std
sahf
mov
mov
mov
rol
sub
ret
clc
pop
int
daa
sub
xchg
pop
inc
stc
aam
sti
lahf
insb
dec
add
xchg
stos
pop
push
pop
loop
or
xchg
adc
mov
outsl
jmp
or
out
stc
addr16
sub
add
imul
jo
add
adc
adc
or
sbb
sbb
iret
dec
and
popf
out
cltd
xchg
mov
test
jge
test
cmp
pop
and
aas
cmpsl
in
sahf
mov
rorb
dec
jp
dec
bound
jbe
shrl
cmp
pop
outsb
ds
sbbb
inc
xchg
ror
icebp
push
xor
subb
xor
int3
jmp
jns
adc
imul
jns
out
xchg
or
pushf
push
xchg
jge
xchg
jmp
add
cwtl
lcall
xchg
or
test
add
lods
sbb
mov
mov
xor
add
ret
movsl
cmp
fdivp
adc
int
mov
rcl
inc
add
inc
fsubs
adc
aad
mov
sarb
repz
mov
sub
jmp
and
mov
inc
fistpl
incl
push
in
pop
or
pop
add
adc
outsb
outsl
jle
sbb
out
or
mov
dec
add
fstpl
xchg
dec
das
ss
cmp
popa
cmp
inc
inc
inc
mov
insl
dec
dec
mov
dec
push
stos
mov
lods
or
into
inc
lret
orb
dec
rorb
sub
outsb
outsl
jae
movsl
or
out
movsl
sub
lahf
orl
mov
stc
aaa
mov
push
aas
cwtl
cltd
lcall
mov
ret
lods
ficompl
shll
jp
fwait
mov
daa
and
mov
jg,pn
enter
leave
lret
lea
cmp
and
aam
xor
faddl
loopne
push
shl
stc
mov
push
call
xchg
xchg
push
sub
cmc
dec
push
push
insl
sub
outsl
flds
pop
push
sbb
jp
adc
adc
adc
adc
sbb
push
sub
mov
and
sub
das
xor
jle
cmp
cmp
push
cmp
jmp
mov
mov
mov
testl
es
pop
pop
mov
mov
popf
inc
aad
sbb
mov
rolb
aad
jecxz
inc
inc
pop
addb
outsb
mov
xchg
xchg
rcr
add
pushf
scas
outsl
mov
sahf
or
push
rclb
or
stos
stos
icebp
bound
lods
ficomps
or
push
adc
pop
mov
stos
sub
enter
and
incl
mull
fsubr
mov
add
inc
pushf
push
stc
sub
lods
out
ljmp
out
es
cli
hlt
hlt
cmc
arpl
sub
shrb
push
jno
add
push
out
popa
js
loope
adc
inc
adc
pop
data16
test
and
divl
sub
mov
add
pop
aaa
jnp
cmpsl
adc
scas
movsb
inc
ret
test
test
test
push
pop
mov
pop
pusha
popa
nop
scas
fs
mov
nop
imul
sub
jno
xchg
in
in
sub
addb
or
mov
nop
xchg
stc
mov
imul
cwtl
loopne
outsl
sbb
filds
sbb
mov
fdivr
fnstenv
xor
mov
and
cmp
loop
pop
not
cmp
mov
mov
push
cwtl
test
or
imul
out
pusha
imul
stos
sub
or
add
pop
or
or
cli
jge
or
testl
push
fcompl
cmpl
rclb
xchg
and
mov
xor
and
mov
stos
lock
stos
or
dec
dec
push
and
pop
pop
fildl
ret
sub
or
push
xchg
imul
aaa
call
jl
out
push
test
ss
xchg
lock
jno
jne
bound
jns
addr16
or
sahf
lahf
adc
outsb
mov
js
sbb
adc
mov
xchg
lock
sbb
mov
cmpsl
rol
cmp
mov
add
jge
mov
inc
ljmp
cmc
inc
xchg
inc
mov
int3
dec
lods
in
mov
fisttpl
pop
adc
push
xchg
pop
or
push
pop
pop
mov
jecxz
lret
lods
ret
or
or
jne
adc
subb
sar
sbb
sbb
xchg
cli
xor
aam
push
cltd
xor
into
sub
cs
inc
sub
xor
xor
stos
fisubl
sub
mov
pop
jnp
mov
dec
cmp
mov
fwait
mov
inc
mov
mov
sub
mov
aam
pop
lcall
mov
jns
sti
and
inc
mov
testb
gs
cmp
repz
mov
mov
ret
orb
jnp
mov
movl
add
adc
pusha
popa
bound
test
jg
push
mov
ret
mov
repz
jg
push
ret
adc
faddl
nop
xchg
xchg
push
adc
inc
push
xchg
loope
xchg
repnz
dec
shlb
decb
mull
jno
or
jnp
leave
shl
jno
push
movups
sbb
sbb
test
and
and
movaps
sub
cli
sbb
lods
push
test
mov
test
inc
test
mov
rcrb
jb
inc
mov
mov
push
add
pop
pop
pop
iret
jbe
dec
or
sub
pop
lret
imul
jo
inc
loop
ss
pop
in
in
loop
jecxz
jg
dec
xor
jecxz
cmc
stos
mov
xor
test
cmp
xchg
or
push
lcall
dec
push
jo
mov
stos
lods
lods
and
sbb
mov
stos
mov
enter
in
jecxz
xchg
rcl
rcl
cmp
mov
fildl
lods
ret
pop
mov
decb
lret
push
mov
pusha
fldenv
sahf
fcomps
insl
repz
ret
arpl
add
jb
or
pushw
mov
mov
mov
ret
in
jne
xchg
or
or
out
fsts
aam
cmpsl
push
outsb
sub
scas
xor
and
cmp
push
add
daa
test
das
mov
push
jecxz
xchg
xchg
push
ret
cmp
and
rorl
inc
dec
dec
or
lret
inc
lods
stos
push
jo
dec
mov
jno
jbe
loop
mov
sarb
ret
leave
movb
ja
mov
add
add
addl
mov
pushf
mov
push
sahf
sub
repnz
scas
sbb
and
mov
jmp
sub
sub
lods
das
ret
push
les
aam
jle
adc
inc
les
inc
mov
mov
out
loopne
pop
push
loop
lock
negb
inc
incb
dec
inc
push
lahf
dec
dec
or
dec
push
ja
push
adc
cmp
fiadds
xchg
ljmp
fwait
notb
mov
push
cmpsb
pop
stos
movsb
pusha
mov
scas
fs
lods
push
mov
dec
mov
push
push
cmp
pop
icebp
or
aas
test
stos
push
mov
outsb
push
mov
pop
fcomp
and
ljmp
imul
cmc
jb
jne
mov
idivb
idiv
aas
ds
add
or
movsl
adc
lea
aam
sbb
xchg
adc
pop
pop
and
sub
mov
xor
mov
movsb
mov
test
xor
mov
mov
aad
imul
loop
clc
sub
jecxz
push
out
xchg
cmpsl
shr
in
in
push
call
aam
add
inc
inc
incb
add
dec
dec
inc
add
or
pop
push
adc
addb
push
fucomip
push
mov
and
push
push
popf
fisubs
and
js
jae
mov
and
movsb
push
add
lods
jno
scas
sbb
mov
xor
push
dec
ficoml
pop
out
mov
int
dec
imul
dec
rclb
xor
pop
fistpl
loopne
out
test
test
std
mov
xchg
fwait
jecxz
lcall
loop
fucomip
out
lret
repz
sti
repnz
fsubs
shlb
fsubrl
sub
das
sub
xor
xor
aaa
fidivl
in
cmp
cmp
aas
mov
inc
clc
inc
ret
dec
dec
add
dec
add
lret
push
lret
pop
into
pop
rcrb
out
lock
fld
fucomi
stc
sti
lea
cmp
insb
add
inc
add
push
dec
or
xor
mov
addb
inc
pop
addb
push
adc
adc
pop
sbb
stos
test
daa
scas
insb
sub
mov
dec
mov
sti
cli
ret
jns
cmp
jmp
out
sub
bound
dec
adc
cmp
jb
xor
pop
sub
jg
jle
daa
icebp
dec
jmp
cmpsb
imulb
pop
mov
nop
xchg
sti
mov
pusha
mov
fwait
pushf
push
ret
arpl
sbb
jae
mov
mov
es
sahf
mov
movsb
mov
xor
sub
enter
std
mov
cmpsb
mov
inc
pop
fstp
fisttps
out
in
out
jmp
outsl
aad
push
shl
lcall
cld
jge
outsb
inc
std
retw
js
push
jl
xchg
or
push
andl
adc
adc
mov
out
xchg
dec
and
jecxz
xchg
data16
in
aam
jo
mov
neg
movsl
jp
stos
push
call
repnz
dec
ss
lds
pop
inc
mov
push
ret
pop
inc
aad
pop
cmp
inc
dec
ficoml
sbb
push
rcrl
outsl
cmp
insl
jecxz
aaa
push
pusha
pusha
cmp
and
pop
outsl
addr16
icebp
xor
dec
insl
dec
push
outsl
jne
sbb
gs
cli
jle
inc
xchg
lcallw
mov
test
dec
in
cltd
stos
stos
and
sbb
sbb
in
sub
ret
test
mov
mov
aam
mov
or
rcl
dec
mov
fisttpl
dec
dec
and
adc
cmp
into
pop
sbb
ljmp
xor
aaa
sti
jo
jmp
jae
aas
arpl
or
lret
jl
lret
sar
dec
dec
cmc
test
add
mov
push
js
mov
sbb
test
add
out
cli
xchg
sub
rcrb
xchg
lock
fidivl
ss
cmp
in
jle
mov
stos
push
inc
xor
repnz
push
ret
cmp
rorb
dec
push
rorl
lahf
ret
push
sub
shrl
cmp
fistpll
fwait
arpl
call
inc
cmpsb
xchg
mov
cli
jbe
lods
imul
or
ja
push
mov
pushf
add
mov
ret
test
sbb
lea
iret
mov
lahf
and
xchg
out
mov
mov
and
ss
xor
sub
inc
mov
inc
std
popf
fstl
dec
add
or
out
push
pop
mov
popa
int
cmp
loope
icebp
addr16
outsb
sbb
sub
ja
jo
jecxz
and
das
jmp
pop
push
xlat
mov
adc
insl
outsb
test
jnp
ret
ret
xchg
and
lock
fists
push
lock
sub
out
mov
pop
popf
xor
jmp
and
std
outsl
jge
scas
inc
pop
cmp
sbb
and
mov
pop
rorl
inc
loope
inc
movsl
pop
and
cmp
push
shl
push
insb
dec
sbb
shr
out
andb
insb
fsubr
xchg
xor
add
in
pop
push
cmpsb
xchg
xchg
repnz
lahf
mov
mov
cmpsl
cmovge
push
arpl
sbb
sub
movsb
mov
les
xor
lret
das
das
jne
aas
popf
cmp
fsts
add
xor
dec
push
int
xor
ds
or
and
adcb
call
add
ror
jo
ljmp
adc
call
leave
inc
sbb
add
nop
or
fcomip
pop
pop
cwtl
fdivl
fists
icebp
add
mov
adc
push
xor
ja
add
and
or
xor
jnp
sub
jl
xchg
pop
iret
and
inc
fisubs
xchg
nop
pusha
aam
jbe
fs
mov
fwait
push
sarl
aad
mov
sub
mov
sub
cs
xor
xor
scas
mov
xor
adc
add
cltd
xchg
into
pop
pop
mov
ja
orl
stos
lods
and
sbb
in
mov
push
bound
in
mov
movsl
mov
mov
and
outsl
mov
ds
push
inc
cwtl
inc
aam
mov
lods
mov
dec
mov
sbb
xchg
shrb
out
icebp
bnd
adc
idiv
stc
jp
rolb
std
incl
add
test
add
scas
insl
outsl
insb
inc
iret
mov
cmp
dec
in
mov
sub
push
pop
add
or
movsl
sbb
clc
test
popf
test
inc
popf
out
addr16
movsl
cmpsl
movsb
in
mov
inc
lods
scas
stos
hlt
mov
mov
stos
lds
mov
int3
mov
out
pushf
es
loope
fsubp
popa
jne
pop
in
fs
insb
xor
mov
fisttpl
xchg
test
jmp
jg
js
ret
jno
movsl
fwait
or
decb
and
jns
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
in
mov
mov
cmp
cmp
ss
das
movb
lret
inc
xlat
call
ficoml
mov
inc
lahf
push
into
push
int
out
cwtl
pop
fmuls
in
dec
push
sub
mov
imul
leave
jp
jbe
jno
repnz
out
test
jg
cli
js
mov
xchg
sbb
push
call
mov
jns
xor
popf
pop
xor
cmpsb
jecxz
cltd
sahf
jecxz
mov
inc
inc
cmpsl
add
cli
jne
fs
dec
dec
testl
pop
iret
pusha
dec
es
jno
lret
or
outsl
pop
jo
jae
cmp
sbb
ljmp
push
mov
jo
add
xchg
notl
out
or
pushf
popf
idiv
add
mov
shrl
aam
adc
and
push
mov
mov
ds
xor
xor
xor
mov
mov
rcl
aad
inc
dec
in
and
push
leave
lret
leave
push
or
mov
xchg
adc
in
fsubrp
lock
and
inc
repnz
out
jo
insl
sub
retw
inc
scas
jbe
jg
jp
push
adc
add
pushf
lcall
or
push
addr16
mov
xor
or
lods
xor
outsb
xchg
inc
mov
inc
inc
scas
in
ss
rorl
pop
jp
xor
jb
and
jno
pusha
enter
fldcw
fcoms
fsts
jbe
jge
jg
mov
sub
in
mov
lcall
jle
arpl
enter
insb
repnz
mov
sbb
jb
lods
lods
scas
or
mov
mov
and
mov
test
mov
enter
or
aaa
mov
fildl
mov
loopne
cmp
push
mov
mov
lock
repnz
add
push
push
push
idivb
add
push
icebp
imul
in
jns
fistpl
push
adc
lea
mov
inc
pop
lret
xchg
into
push
jge
lock
cs
test
inc
xor
mov
std
dec
cmp
mov
mov
test
mov
cmp
popf
push
push
xchg
pop
adcb
mov
push
les
jle
mov
cmpsb
adc
push
ficoml
popf
mull
ja
lret
aas
std
mov
jecxz
xchg
in
negb
mov
xor
push
pop
call
enter
xchg
fwait
scas
adc
movsb
pop
rorl
out
shrl
jbe
in
mov
sbb
sbb
mov
sub
subl
cmpsb
inc
loope
les
imull
es
rcl
or
out
push
int3
add
inc
lahf
push
sti
dec
and
adc
call
lods
sub
lock
mov
imul
cmp
pop
je
or
jle
dec
inc
cltd
fnstcw
adc
pop
sbb
je
and
sbb
in
push
sub
sahf
adc
cli
add
add
push
test
gs
mov
sub
ret
dec
dec
mov
push
push
push
mov
xchg
jge
inc
rorb
shll
xchg
mov
ret
mov
mov
sahf
je
ljmp
adc
daa
sub
xor
testl
xchg
xchg
xchg
add
push
les
test
adc
push
jmp
mov
sub
ja
mov
daa
xchg
sub
stos
push
leave
lret
int3
dec
inc
xchg
ds
ss
dec
fdivrl
fwait
dec
mull
fsub
ficoms
push
jecxz
call
push
fs
mov
rcr
outsb
repz
fbld
imull
add
sti
ret
add
jp
jbe
jno
or
jns
jp
push
adc
lcall
sbb
xchg
jmp
add
cmp
into
or
sub
sub
xchg
pushl
push
negl
sarl
cmp
mov
mov
ds
dec
dec
dec
shll
push
push
push
leave
cmp
add
jne
andb
pop
stos
lret
jle
mov
adc
fmuls
fcomps
jg
loopne
aam
dec
mov
rep
outsb
fsubp
clc
pop
ja
and
jg
xchg
sti
mov
pop
jl
xchg
pop
addr16
mov
sbb
xchg
lods
and
fdivs
mov
stos
mov
inc
mov
cmp
cmp
scas
xor
inc
rorb
inc
iret
xor
dec
ret
fists
cmpsb
adc
in
in
leavew
out
dec
cli
iret
out
imul
pop
xor
imul
insl
jmp
incl
retw
push
insl
test
jns
xor
in
mov
adc
sbb
out
pop
and
mov
adc
sub
adc
test
mov
test
and
ds
jo
xchg
pop
inc
inc
lods
aas
dec
mov
jae
mov
adc
inc
push
sbbl
inc
push
lret
imul
iret
ror
sbb
loope
sbbl
dec
in
imul
xor
lods
lea
mov
add
push
mov
inc
mov
jl
lret
movsb
out
scas
rclb
xchg
pushf
lea
pop
test
jne
rorb
ljmp
lret
or
mov
mov
sbb
test
lock
add
test
lret
push
jmp
jne
mov
pushf
stc
cli
sti
shll
mov
add
arpl
pop
out
mov
adcb
adc
jl
sbb
or
fisubl
and
shll
push
xor
loope
sbb
cmp
cmp
push
hlt
outsl
inc
sub
dec
sbb
orl
incl
add
mov
jge
outsl
dec
sbb
push
rorl
gs
inc
fstl
jecxz
in
jae
jle
jmp
in
sub
xchg
ss
mov
xor
out
jge
jecxz
jge
mov
jge
pusha
dec
js
imul
popf
lcall
sbb
shll
sub
xor
jecxz
test
ljmp
add
fdivp
aad
repnz
ret
aam
inc
mov
mov
push
xchg
dec
cwtl
cltd
lcall
mov
xor
imul
adc
sarl
je
or
add
push
ljmp
daa
jge
sbb
xchg
fwait
xor
jbe
cmp
and
nop
add
xchg
push
xor
test
dec
and
stos
dec
cmpsl
gs
stos
popa
inc
push
ja
cmp
imul
mov
sub
jg
insl
lds
pusha
dec
ucomiss
cmp
xor
pop
gs
cmp
loope
jecxz
jp
jae
popa
sub
outsl
mov
imul
lds
mov
les
jle
jae
outsl
pushl
cli
incb
inc
mov
push
int3
cmpsl
jo
into
stos
lods
in
sbb
loopne
negb
ret
movsl
sub
daa
jae
mov
mov
les
dec
push
mov
call
stc
push
stos
cmpsl
outsl
loopne
loop
in
sbb
mov
cmp
repnz
repz
mulb
shr
sti
cld
mov
inc
stos
clc
push
or
or
jne
idivl
paddusb
pop
jecxz
adc
pop
in
int
insl
icebp
repnz
punpckhbw
popa
xor
jbe
scas
push
ds
push
dec
aas
inc
inc
pushf
mov
icebp
insb
or
dec
dec
dec
mov
xchg
sub
pop
pop
iret
cmp
dec
stos
arpl
pushw
leave
inc
xchg
insb
xor
fsts
xchg
fidivl
jmp
sarl
fs
arpl
test
fdivrl
jecxz
pop
xchg
jp
flds
out
cltd
lcall
dec
dec
dec
push
push
push
push
int3
lods
xchg
adc
push
add
xchg
or
xor
stos
stos
xchg
and
cmpsb
xor
dec
mov
inc
es
cmp
cmp
fmuls
int
clc
push
nop
push
push
push
adc
and
aam
lcall
pop
pop
mov
in
leave
out
adc
nop
jp
ja
push
jp
or
test
dec
or
or
add
and
es
call
aad
lock
mov
out
add
pop
js
mov
stos
or
sub
push
dec
rclb
push
push
push
push
xchg
pop
int3
add
and
add
lret
mov
fists
jb
mov
inc
pushf
ja
insb
xor
imul
test
push
jbe
js
pop
mov
orl
sti
jne
cld
pop
or
insl
jne
mov
sarl
stos
mov
frstor
fldenv
cld
mov
shll
ror
ds
into
iret
xor
dec
ficoml
jmp
into
int
loope
mov
push
shll
pusha
pop
xlat
daa
inc
popa
xlat
lcall
lds
popa
es
add
js
jae
inc
cmpb
fs
jle
cmp
sbb
mov
mov
mov
mov
hlt
dec
and
loopne
jb
push
push
mov
mov
lcall
and
fs
ret
inc
ret
leave
das
cmp
inc
mov
insl
sbb
mov
dec
shlb
jno
cwtl
mov
fmuls
dec
movsl
cmp
push
rcrl
fists
pop
and
lahf
ja
mov
scas
xchg
mov
inc
outsl
std
jl
or
add
push
jp
fsts
pop
jg
mov
les
pop
pop
adc
and
mov
xor
das
leave
cmc
loop
cmp
mov
cmpsb
js
leave
ror
int3
int
mov
mov
lahf
rcl
cld
mov
mov
loope
or
dec
stos
pop
rclb
jmp
out
push
repnz
ljmp
call
push
push
adc
sbb
loop
push
and
xchg
adc
js
icebp
push
pop
xchg
dec
and
inc
stos
and
mov
xor
decb
fcmovnu
inc
jns
dec
jnp
adc
cmp
push
sarb
dec
cmp
mov
sub
sub
cmpsl
addr16
pop
sahf
jb
pop
jne
pop
cmp
jge
fs
jbe
dec
sbb
addl
in
jmp
ret
shl
insb
ret
icebp
or
test
cli
xchg
add
or
stos
lods
and
sbb
out
mov
mov
jmp
cltd
out
leave
dec
mov
adc
shrb
stos
add
iret
xchg
ret
mov
pop
pop
push
cld
push
mov
scas
out
in
fwait
out
sbb
js
in
jnp
decb
imul
pop
xlat
repnz
or
mov
in
inc
sbb
push
push
mov
push
subb
mov
push
sub
or
xor
stos
cmp
scas
and
minps
pop
mov
inc
cmp
xchg
into
cmp
jns
inc
lret
add
sarl
fisubrl
xor
outsl
jo
enter
aas
movsl
int3
in
fs
addr16
jp
out
sahf
addb
adc
mov
add
jg
fcoml
jnp
inc
inc
xchg
test
jbe
fldl
or
and
mov
mov
and
sti
cmp
rorb
cmp
aas
mov
mov
idivl
mov
inc
pop
ret
and
pop
jecxz
in
push
inc
in
sub
push
or
lock
repnz
push
push
lahf
popf
loopne
dec
push
fs
pop
pop
ljmp
add
enter
jb
adc
add
mov
jecxz
dec
push
pop
xchg
inc
mov
mov
fwait
repnz
sub
push
aaa
sbb
cmp
mov
inc
arpl
xor
dec
push
sarb
dec
mov
jb
test
enter
popf
inc
movb
and
pop
aad
push
adc
outsl
insl
insl
outsb
outsl
cmpsl
xor
out
gs
nop
in
mov
repnz
xlat
mov
jl
loop
xchg
or
repnz
push
lds
sbb
and
mov
adc
or
mov
add
and
xor
mov
and
sub
dec
mov
cmp
dec
test
inc
push
enter
out
pop
int3
mov
adc
fbld
pop
lods
popa
fstps
and
ja
cmp
add
jns
jne
lock
divl
or
stc
jns
add
push
mov
dec
mov
nop
dec
cmp
movsb
push
push
cmpsl
adc
popf
pop
xor
xchg
mov
push
mov
fs
es
dec
cs
mov
dec
mov
add
xor
dec
into
dec
mov
dec
test
iret
sub
ds
push
cmpsl
xor
loop
jns
sbb
jnp
sub
data16
mov
das
clc
xor
dec
jno
jle
xchg
roll
mov
add
popf
adc
mov
int3
mov
ljmp
jl
and
mov
sub
mov
in
add
xchg
pop
inc
or
xor
les
repz
adc
rcl
aam
aas
cld
movsb
inc
jmp
loopne
in
cld
push
jmp
push
in
in
pop
xchg
pop
push
mov
idiv
push
insl
lret
addr16
pop
imul
mov
out
mov
jle
sub
hlt
test
add
cmp
inc
lea
mov
sub
jne
xor
pop
or
test
cmp
dec
mov
and
jae
xchg
fcoms
push
push
add
pop
pop
pop
int3
addl
adc
mov
mov
sbb
jne
loopne
mov
shrb
in
jl
negb
mov
jmp
stc
js
cld
mov
xchg
xchg
cwtl
push
loop
mov
lret
push
push
push
add
jns
or
push
add
xor
movsl
xchg
es
daa
daa
and
cmp
shll
rcl
aad
fcomp
dec
iret
dec
add
enter
aam
int3
lahf
iret
jmp
dec
dec
pop
adc
clc
aas
sub
cmp
inc
add
incl
add
inc
insl
or
pop
or
jns
adc
jnp
sbb
and
xchg
pand
push
pop
xchg
test
dec
jnp
ss
cmpsl
pop
icebp
and
xchg
cli
sub
in
mov
dec
mov
cmp
mov
sti
mov
fwait
movl
fadds
movsb
ficoml
cltd
push
fld
pop
cmpsb
lahf
push
in
sub
jbe
iret
stos
cmp
mov
mov
fs
lods
xchg
mov
hlt
mov
cli
loope
in
hlt
cmp
cwtl
inc
inc
jmp
mov
adc
stos
xchg
in
adc
sbb
mov
and
mov
ffreep
mov
add
xlat
in
into
scas
jge
divb
inc
sahf
sub
mov
fwait
sbb
loop
in
cmp
daa
ret
fisttpll
in
out
out
sub
push
leave
pop
cmc
imul
shr
movsl
std
ljmp
out
ljmp
jae
mov
add
adc
nop
movsl
push
pop
and
cli
pop
dec
sub
jge
xor
orl
cmp
sahf
cli
mov
inc
push
daa
xor
inc
scas
inc
mov
add
pusha
push
push
push
mov
lret
movl
adc
sbb
fiaddl
jno
sub
jns
out
jl
mov
mull
cli
jbe
xor
mov
loopne
mov
push
or
sar
jne
mov
xchg
outsl
xchg
jb
scas
add
pushl
mov
out
rcl
mov
ret
add
sub
sub
sub
je
ds
add
cmp
rcl
cs
ss
xor
mov
in
dec
fsub
aas
pop
or
in
sub
pop
fstl
push
push
ret
std
data16
in
orb
sub
xor
jb
xor
xor
jnp
pop
cwtl
pop
sbb
loop
and
and
imul
xchg
scas
hlt
pop
xor
cmpsl
sbb
push
mov
mov
ret
mov
sbb
jge
xchg
rorl
inc
rcrb
push
aam
leave
loopne
fimull
loop
fnsave
enter
cmp
jmp
imul
insl
xor
jle
in
pop
jns
mov
jns
mov
add
bswap
fcompl
mov
sbb
mov
call
mov
pop
mov
jl
loope
mov
popa
stos
aas
les
inc
loopne
int
lock
lret
dec
mov
dec
aad
mov
inc
test
arpl
daa
out
lock
call
bound
lcall
gs
push
push
push
ret
aaa
sub
jmp
out
orl
push
jbe
and
xor
das
adc
mov
std
sbb
pop
test
xchg
or
cmp
pop
dec
sub
adc
xchg
out
movsb
and
mov
mov
out
in
out
out
lock
repnz
mov
movsl
movsl
mov
pop
shrl
ds
push
nop
sbb
pop
aaa
inc
fs
push
pop
icebp
xchg
insl
mov
jmp
out
fstpt
pop
jb
call
daa
es
test
mov
dec
add
xchg
les
lcall
movsl
xchg
mov
pop
push
pop
jle
mov
jbe
sahf
mov
stos
dec
out
test
push
jmp
decb
inc
jmp
inc
cmp
mov
rcrl
pop
icebp
or
sbb
out
mov
sbbb
mov
sti
cmp
in
push
mov
or
mov
push
adc
push
push
sub
dec
and
adc
fwait
movntps
or
push
sub
and
pushf
mov
cmp
inc
adc
sbb
mov
pop
js
mov
lds
add
adcl
sub
into
pusha
and
dec
push
xchg
imul
push
scas
push
and
inc
mov
orl
adc
addl
dec
add
xchg
inc
sti
inc
jp
lcall
lahf
fnstenv
leave
movsb
in
push
mov
adc
xchg
mov
sbb
cmc
mov
lods
mov
lds
lods
jo
rcrl
int
xchg
pop
rcl
sub
daa
fcmovu
push
loope
cmpsl
icebp
in
out
mov
mov
jmp
repnz
pop
lcall
dec
inc
icebp
add
push
imul
or
or
adc
outsb
xchg
xchg
aaa
dec
adc
jmp
pop
sub
mov
cmpsl
loope
xchg
inc
sub
mov
dec
sub
sti
sbb
and
dec
dec
ret
std
push
fwait
pop
insl
lret
push
mov
xlat
push
mov
push
fistps
jno
jmp
fs
lret
mov
subl
pop
in
fs
das
jp
cmp
cmp
cmp
ds
inc
inc
inc
out
repnz
adc
adc
cmpsl
mov
loopne
cmpsb
jge
xchg
aam
sahf
scas
test
sub
rcl
adc
mov
call
jp
jl
jle
mov
lret
inc
cmpsb
rcrb
add
hlt
fsubrl
cmp
fisubl
arpl
cs
fisubrs
daa
sub
pop
mov
jne
jmp
das
repnz
outsl
fs
jnp
adc
jne
xchg
jnp
pop
mov
sbbb
xrelease
pushf
adc
sub
inc
mov
nop
lcall
push
cmp
stos
sub
mov
mov
xor
ret
cmp
aas
dec
stc
cmp
inc
add
jae
inc
pop
pop
mov
push
imul
adc
fldcw
push
cmp
sub
xor
out
xor
xchg
je
stc
lret
xchg
add
or
fistpl
pop
test
lock
lcall
fsqrt
push
pop
sub
icebp
nop
out
mov
ljmp
xchg
loope
int3
int
rcl
rcl
jmp
xor
subb
es
push
pop
loop
stos
sbb
out
jge
jmp
pop
cltd
mov
mov
negb
mov
push
call
sbb
add
hlt
outsb
repz
icebp
xchg
pop
sarl
outsb
std
jg
adc
inc
sbb
and
and
pop
neg
push
sub
mov
xor
or
gs
sbb
ss
outsl
inc
jge
mov
jae
push
sub
lret
jp
adcl
fdivrs
and
insb
insl
loop
lods
pusha
pop
jae
jmp
dec
xchg
ss
addb
rcrb
mov
or
push
shrb
popa
lcall
data16
insb
pop
lds
and
adc
mov
sub
mov
ljmp
nop
or
iret
es
xchg
jo
rcl
cmp
push
fcmovu
inc
popf
pop
add
inc
jmp
push
fcoml
in
jne
mov
and
idivl
shlb
cld
lds
ret
sub
or
pcmpgtd
cmp
adc
xchg
gs
mov
pop
and
mov
and
data16
xor
xor
pop
shrl
dec
lahf
sub
imul
insl
icebp
dec
mov
cld
and
mov
int
mov
pop
cmp
rcrw
in
mov
leave
aaa
mov
jne
cmp
jb
jnp
mov
mov
push
mov
mov
dec
insl
mov
mov
out
aad
add
add
adc
push
test
fs
imul
aam
lods
sbb
repnz
call
and
xor
daa
xor
enter
or
xor
aad
icebp
and
inc
mov
push
int
ljmp
sbb
pop
cmp
hlt
pop
cmp
clc
pusha
fcmove
arpl
add
jnp
mov
rcr
xor
cli
in
adc
push
dec
sbb
sbb
xchg
or
daa
sub
push
xor
sbb
cmp
cmp
inc
scas
js
lret
jnp
adc
mov
mov
lret
add
push
inc
rolb
les
xchg
xlat
sbb
dec
ficoml
aas
push
sub
inc
fwait
jbe
mov
lret
fs
fmuls
stos
test
mov
sti
mov
cmpsl
lret
cwtl
shl
mov
lods
stos
mov
push
lret
xchg
loope
xchg
push
and
andl
mov
in
scas
sub
sub
es
or
cmp
aam
fcmovu
add
inc
aad
movsb
mov
fisubrl
xchg
lock
dec
pop
in
clc
imul
jecxz
out
push
outsb
int3
pop
jno
rcrl
repz
xlat
lret
adc
push
jnp
sbb
sbb
jmp
dec
adc
adcl
xor
and
and
pop
stos
and
imul
or
dec
dec
dec
jo
lea
cmp
xlat
pop
mov
daa
mov
pusha
popa
add
mov
lea
aam
imul
pushf
dec
call
mov
in
jne
mov
in
sbbl
mov
pop
xchg
call
mov
mov
popf
sahf
pop
lahf
rcrl
and
push
sub
outsl
cs
and
mov
xchg
test
popf
out
jns
jge
jle
push
out
adc
pop
mov
lock
cmp
fdivrs
adc
fsts
fwait
inc
or
loop
push
xchg
dec
or
push
bswap
push
adc
pop
adc
cmc
imul
mov
jno
enterw
imul
jnp
xor
jg
je
testb
stos
std
adc
jge
adc
jecxz
push
sbb
push
in
mov
es
push
and
mov
sub
mov
mov
inc
inc
ret
inc
push
mov
das
mov
dec
mov
mov
mov
les
aas
sub
fmuls
fcoml
xchg
mov
fistps
jge
les
mov
xchg
xchg
jle
pushl
sti
push
add
mov
cmpsl
outsb
mov
mov
xchg
xor
fdiv
data16
lods
orl
ljmp
call
jecxz
into
dec
les
scas
mov
rol
movsb
mov
inc
push
fcmovbe
lods
mov
out
push
pop
jecxz
mov
aam
icebp
pusha
fidivs
das
imul
jl
das
jno
sub
subb
subl
rorb
inc
andl
xchg
adc
pop
inc
inc
cwtl
pop
adc
mov
and
pusha
imul
sub
and
jo
sub
js
xor
cmpb
dec
mov
push
push
mov
inc
sub
cmp
sbb
imul
push
fsub
cmp
sbb
jae
jnp
popf
cmpsb
in
push
lods
imul
dec
lret
xchg
nop
test
loope
or
sbbb
push
and
add
mov
mov
jle
stos
sbb
out
xor
ljmp
mov
into
sbb
test
mov
rol
dec
or
inc
fsub
push
pushf
out
jmp
iret
ss
popa
sbb
fs
push
lret
xor
ret
cmpsb
add
or
fdivrl
mov
adc
sbb
movl
mov
and
test
sub
xor
sub
call
inc
inc
or
xchg
inc
jo
pop
les
jg
cmp
jnp
cmp
push
adcb
test
test
cwtl
iret
imull
jno
cmp
mov
rcl
loop
inc
stc
aad
movsb
sub
addb
out
jecxz
push
ja
xor
test
test
xchg
xchg
inc
xchg
fildl
push
mov
popf
push
adc
mov
and
movsl
and
and
daa
in
mov
cld
test
les
das
push
leave
rcl
jp
popf
rcl
aam
inc
cmp
fstp
inc
add
jecxz
or
lret
push
push
ficompl
jmp
popa
sbb
pop
lahf
imul
pop
hlt
in
sar
shlb
sahf
adc
xor
push
push
movups
test
pop
lock
mov
sbb
dec
and
mov
and
fistps
cmp
cmp
or
ds
cmp
sub
rorb
mov
inc
aam
ret
jp
cmp
pop
pop
pop
mov
and
push
rcll
push
jcxz
data16
jl
pop
jecxz
data16
jmp
je
movb
xor
cld
mov
in
ret
std
ret
lods
andl
pop
inc
mov
outsl
and
pushf
adc
mov
mov
enter
adc
mov
ret
sbb
fnstenv
dec
or
std
lret
cmp
mov
cmpsl
mov
loope
dec
lods
jmp
out
push
mov
loop
cmpsb
repnz
sbb
cli
sti
and
pusha
enterw
fildl
or
xor
std
outsl
js
adc
ja
stc
push
jns
pop
pop
sbb
aas
lret
daa
sbb
dec
insl
mov
fwait
adc
nop
aad
and
sub
test
aaa
cmp
or
stos
push
pop
xor
lret
test
xor
mov
enter
daa
and
adcl
bound
xchg
push
popa
lea
push
xchg
cmp
jo
xlat
xorl
out
sub
daa
mov
dec
das
stos
insw
mov
xchg
xchg
mov
bound
cltd
lcall
and
pushf
mov
movsb
stos
lods
adc
pushf
xchg
test
test
and
movsb
and
mov
mov
or
test
cmpsl
xor
lea
scas
jae
jbe
int3
int
cwtl
jnp
rcl
cmp
mov
add
push
cmc
fimull
test
fcmovnu
test
jmp
in
in
lcall
xor
mulb
xchg
sub
push
in
in
or
xchg
inc
or
mov
mov
xchg
add
and
psrld
sub
sub
std
and
xor
pop
das
mov
mov
xor
mov
dec
mov
inc
push
jg
mov
add
shlb
test
mov
xor
jge
push
jecxz
in
cli
pusha
popa
test
in
mov
sub
xor
cmc
mov
clc
add
inc
push
shrb
adc
shlb
mov
adc
ja
sub
mov
mov
adc
mov
sti
xor
mov
insl
jmp
ret
jno
inc
mov
hlt
xchg
loopne
mov
movl
loop
push
pop
ret
leave
stc
pusha
mov
loop
push
push
inc
sbb
cmc
add
movsl
out
push
jns
jne
lock
sarl
rcl
add
adc
jo
sub
adc
outsl
xor
and
lods
or
cmpsb
je
mov
aaa
mov
lods
fwait
pop
data16
add
xor
jb
jg
jl,pn
push
jl
jle
sbb
inc
nop
into
xchg
rcll
insl
outsb
shr
outsl
leave
out
inc
addr16
inc
out
dec
call
js
test
jle
jle
cld
jp
add
push
ljmp
lcall
sahf
adc
push
mov
lods
push
sbb
pop
xchg
test
mov
sub
mov
jmp
mov
cmp
sar
cmp
fldenv
sbb
loope
dec
and
jmp
push
sub
ret
sbb
cmc
dec
gs
jp
dec
fists
adc
shl
cmpsl
jae
das
or
icebp
pop
jbe
cmc
ja
mov
jge
sti
sub
mov
add
dec
push
fwait
or
sub
sbb
test
mov
xor
fdivrl
cmp
cmp
or
inc
adc
dec
xorl
adc
xor
jle
jnp
cmp
test
lret
rcr
push
aad
int
pop
shlb
outsl
jo
sub
jnp
push
pop
mov
jne
ja
pop
mov
orb
cli
je
int
xlat
inc
push
fcompl
push
adc
mov
stos
stos
lods
sbb
jne
fnstenv
sub
mov
xor
ret
les
pop
lret
cmp
mov
cltd
in
aam
das
cmp
dec
cmpsb
stos
inc
dec
push
lret
pusha
and
dec
in
aam
call
xor
pop
jno
pop
je
jns
mov
jge
mov
add
dec
mov
or
push
lds
mov
xchg
mov
pmovmskb
xchg
hlt
dec
and
test
jbe
pop
repz
add
mov
cmp
pop
and
add
mov
or
sbb
push
push
push
mov
dec
mov
pop
outsl
stos
lret
fs
pop
int3
ljmp
in
fnstenv
ljmp
ljmp
sahf
icebp
scas
insb
pop
sarb
mov
clc
xlat
pop
xchg
cld
fistpl
cwtl
push
adc
sbb
sub
repnz
xor
mov
sub
xor
inc
mov
ror
in
jle
shll
int3
push
inc
jmp
rcrl
dec
ret
cmp
fldl
xchg
lods
shl
push
jae
or
jnp
sbb
in
adc
stc
cli
popa
jbe
fs
jle
mov
ja
jae
divb
test
xor
jg
push
jl
mov
incb
rcrl
lahf
popf
xlat
and
jg
sbb
mov
xor
in
cmp
jge
lock
test
fldcw
scas
dec
nop
mov
ret
jo
ja
ret
stos
ds
cld
push
pop
pop
lret
sub
bound
lret
xor
filds
loop
bound
jecxz
pop
aas
cld
jbe
jle
mov
out
clc
jae
add
mov
and
mov
pop
idivb
mov
dec
sbbl
cmpsb
cmpsl
shrd
adc
scas
mov
and
lcall
repz
pop
xor
sub
adc
enter
jl
dec
test
les
mov
rcr
sub
inc
dec
cmp
fmuls
int3
jmp
out
mov
popa
stos
cs
sti
cld
imul
repz
cmp
or
jne
inc
or
ja
and
sbb
lret
add
push
es
xchg
nop
test
stc
adc
in
xor
xchg
cmp
cmp
sahf
inc
inc
inc
lods
sbb
outsl
dec
dec
into
cmp
push
push
scas
mov
inc
sti
sbbl
inc
mov
daa
fmull
fwait
daa
aad
out
ja
fistps
in
pop
inc
sbb
test
pusha
pop
dec
ret
test
push
add
pop
psubd
push
mov
dec
inc
jge
lods
push
cltd
ficompl
jnp
fidivrs
mov
ret
les
pop
xchg
mov
ss
repnz
mov
xchg
dec
cli
dec
call
mov
movsl
dec
or
in
setnp
mov
in
hlt
cmc
int3
les
pusha
jo
incl
push
insl
push
sub
or
adc
mov
and
cld
ljmp
xchg
xchg
xchg
sub
movsb
adc
sbb
stos
popa
cmc
inc
insb
clc
cmpsb
add
pop
cmp
es
jb
pop
cld
push
push
push
ret
sub
xchg
out
sbbl
dec
mov
mov
imul
fildl
jb
cs
into
ficomps
fistpll
lock
in
movsb
cmp
outsl
mov
pop
dec
xchg
mov
or
fstpl
pop
arpl
stos
sub
bound
mov
mov
mov
ret
lds
pusha
mov
cli
into
loope
fwait
cmc
sarb
jbe
popf
loop
xlat
fdivrs
adcl
add
out
sahf
addr16
ljmp
fwait
pop
stos
cmc
mov
imul
add
into
out
jl
xor
pushl
notb
adc
sti
or
adc
add
sub
fisttpl
dec
std
lcall
popa
sbb
xor
pop
push
mov
jmp
sub
lods
fs
xor
add
inc
dec
leave
movl
jne
push
ret
add
nop
pop
popa
loopne
fcoms
iret
and
imul
lcall
push
ljmp
aam
adcl
jmp
dec
hlt
lock
icebp
mov
push
sarb
add
pop
pop
cmp
dec
jg
movsl
cld
or
push
xchg
adc
test
mov
pop
ficoml
and
mov
mov
and
and
cmp
cmp
outsl
push
dec
dec
pop
pop
cmp
xchg
ds
mov
adc
clc
popa
sbb
lds
out
out
push
imul
cmp
in
test
sbbl
lds
sbb
jge
sbb
sbb
vpmulhw
mov
out
adc
push
xor
test
imul
mov
out
add
or
sub
lods
sub
decl
adc
sarb
mov
enter
mov
iret
mov
in
dec
shl
push
fucomi
push
fisubs
lahf
and
repnz
jp
data16
fs
dec
cwtl
ret
out
add
cld
mov
xchg
mov
cli
xor
dec
or
pushf
cmpsl
test
int3
adcb
scas
lahf
adc
mov
mov
mov
sub
push
mov
mov
cmp
stos
sub
xor
dec
shll
rcl
inc
jge
mov
mov
dec
xchg
aam
push
mov
div
addr16
jnp
mov
repnz
cmpl
or
adc
pop
or
xlat
xchg
xchg
inc
sbb
mov
xlat
xchg
jle
repz
and
aas
xor
int3
or
test
inc
jb
test
jns
sub
hlt
cmp
pop
pop
pop
mov
daa
icebp
pusha
popa
lret
fisttpl
pop
rclb
jecxz
sbb
jp
sub
shlb
ja
test
pop
in
loop
out
xchg
mov
jmp
pushf
popf
or
ja
mov
movsl
lcall
push
shrb
scas
mov
mov
sub
sbb
mov
cmpsl
ret
out
adc
sub
iret
cli
jle
iret
aam
ret
mov
fcmovnu
ss
sub
in
out
or
mov
out
hlt
popa
lret
pop
push
into
pop
jne
cli
outsl
jmp
push
in
or
lds
aaa
jp
scas
frstor
sbb
inc
jecxz
push
and
and
mov
daa
cltd
adc
repz
cs
mov
xchg
push
cmp
mov
movsb
out
inc
inc
inc
push
scas
kmovb
mov
xor
push
shlb
rorb
ret
daa
out
popa
push
dec
imul
int
fnstenv
ljmp
popa
in
mov
movsb
test
xor
je
mov
pop
adcb
cld
xchg
popf
sahf
or
cld
js
pop
das
movsb
cwtl
or
popa
scas
mov
mov
ss
mov
push
es
adc
and
add
out
leave
lret
dec
mov
div
rcl
cs
cmpsb
les
lods
add
rcrl
enter
arpl
ds
or
sub
bound
jns
and
in
jle
jecxz
fsubp
imul
aad
push
or
jb
fisubl
sbb
cmpb
inc
xchg
hlt
dec
and
test
addb
mov
pop
pop
aaa
sub
push
xchg
inc
out
pushl
jae
cmp
or
or
aad
sbb
std
pop
out
push
pop
pop
lret
xor
push
jecxz
sbb
jne
sub
xchg
push
or
mulb
xor
out
push
stos
ss
push
cmpsl
aaa
test
lods
cmp
loopne
push
add
arpl
sahf
adc
je
movsl
cmpsb
add
sub
pop
lods
mov
mov
adc
lods
pop
mov
out
mov
das
jp
movsl
ss
cmp
pop
pushf
mov
push
mov
iret
inc
mov
loopne
movsb
arpl
in
dec
jmp
pop
push
push
lock
pop
das
xchg
sbb
clc
jp
dec
fists
adc
add
pop
pop
shl
cmpsl
jae
das
or
icebp
data16
cmc
ja
mov
sbb
or
loope
lret
dec
xchg
dec
rclb
xchg
push
fadds
addr16
mov
adc
inc
pushf
popf
adc
call
aas
pop
xor
enter
add
push
bound
cmp
dec
mov
call
jp
xchg
xor
xchg
sbb
cltd
mov
loope
and
stc
cmp
outsl
test
lods
cmp
pop
xchg
mov
in
pop
cld
mov
mov
leave
dec
add
cmpsb
sbb
stos
stos
add
mov
pop
mov
xchg
cmp
ja
xor
enter
xor
mov
xor
rol
ss
aam
push
push
mov
push
in
add
or
pop
fcomps
jb
xlat
pusha
pop
jnp
sbb
in
ja
cld
jno
push
insl
in
or
or
idivl
cli
ficomps
aaa
ret
subl
cld
push
sbb
jl
adc
or
rcrb
out
sahf
sbb
das
pop
js
mov
out
scas
xchg
sub
sbb
dec
dec
cmp
cmp
cmp
dec
push
leave
inc
pop
int
mov
xchg
pushf
pop
pop
mov
fnstcw
fstl
loopne
xor
lret
int3
inc
cwtl
jns
sub
notl
jo
inc
je
test
mov
je
scas
jbe
add
loopne
hlt
inc
xchg
cltd
push
sbbl
movsb
movsl
cld
adc
push
push
and
adc
cwtl
jmp
sbb
xlat
mov
test
lock
jge
enter
out
int
jbe
inc
sahf
add
add
fcmovnu
push
inc
sub
fsubp
aas
sbb
push
gs
jp
scas
scas
mov
pop
das
aaa
mov
push
call
je
cmp
lods
stos
push
pop
or
jp
or
inc
jbe
aas
adc
aas
or
out
pusha
and
mov
inc
mov
popf
add
xchg
stos
xor
movsl
in
pop
xor
jp
jecxz
jnp
adc
inc
xor
dec
dec
cmpsl
test
clc
repz
adc
pop
push
mov
mov
jnp
cmpsb
mov
xchg
insl
popa
fidivl
jae
and
outsl
pop
call
jmp
in
inc
scas
test
insl
dec
push
jo
scas
pushf
jno
add
in
pop
sbb
nop
pushf
repz
add
mov
mov
shl
jno
in
lods
lods
cld
mov
jns
sbb
pop
adc
das
fcomps
xchg
hlt
enter
out
lret
inc
mov
stc
aam
sahf
cmpsb
mov
mov
leave
arpl
cmc
lret
mov
pop
aad
mov
or
repnz
ret
or
add
scas
sub
add
lock
or
adc
insl
jo
insl
orl
mov
or
out
pop
fldcw
sub
push
lahf
popa
and
xchg
cltd
scas
mov
das
mov
xor
subl
ss
nop
popf
fnstsw
test
int3
mov
in
rclb
pop
insl
outsb
adc
mov
jmp
fnstsw
hlt
outsl
in
jl
stos
outsb
push
outsl
in
mov
mov
cld
mov
xchg
std
jg
push
aas
clc
inc
cmc
or
mov
mov
insl
mov
test
add
mov
mov
je
sub
mov
lods
add
mov
leave
lret
movsl
in
xor
xchg
ss
xor
adc
adc
and
mov
mov
jle
mov
sub
loope
mov
js
out
add
xor
fwait
or
or
or
fisubrs
js
pop
add
mov
adc
add
and
pushf
push
sbb
push
imul
pop
xor
daa
cmp
jmp
xchg
inc
or
mov
mov
ja
sbb
je
push
mov
pop
lods
pusha
sub
lahf
arpl
ss
mov
mov
xlat
sahf
outsb
jbe
pop
jns
movsb
imul
clc
test
dec
mov
ja
mov
cli
inc
cwtl
cltd
lcall
mov
xchg
push
push
leave
adc
cwtl
jbe
scas
mov
sbb
aas
mov
xor
ret
xchg
stos
ss
mov
inc
out
dec
mov
rol
fcomp
inc
jg
inc
sahf
dec
or
push
ss
fucomp
pop
ss
inc
xlat
out
push
sub
jecxz
out
stc
push
insb
or
jecxz
cmp
das
add
inc
mov
loopne
adc
jle
adc
into
and
and
adcb
stos
inc
sub
sub
fs
negb
stos
and
fistps
mov
jmp
inc
inc
mov
outsl
mov
cs
dec
mov
sub
push
mov
dec
inc
mov
stos
inc
arpl
or
fnstenv
popf
sahf
vpandn
shl
cmc
gs
loopne
fidivrs
loope
cli
movsl
jle
or
xchg
dec
xchg
jge
cwtl
push
push
mov
movsl
movsl
cmpsb
push
pop
loope
shlb
scas
mov
icebp
mov
mov
mov
inc
adc
or
aad
repz
xchg
ret
sti
cmp
fcomp
adc
fcom
inc
inc
loopne
loop
or
out
call
mov
out
lock
sub
push
mov
cld
std
gs
lret
add
add
dec
jle
jb
dec
fisttpll
outsb
jl
sbb
push
add
lahf
shll
insb
fisubs
sbb
sub
fadds
mov
pusha
lods
dec
mov
cmpsl
or
dec
aas
jmp
mov
lea
pop
mov
add
pop
pop
pop
pop
fildll
arpl
les
dec
mov
xchg
imul
js
jp
dec
insb
js
inc
testb
test
xchg
xor
hlt
mov
xchg
xchg
fcompl
xchg
xchg
cwtl
pushf
jnp
push
adc
push
dec
cltd
jmp
outsl
jg
and
enter
in
and
test
fisubrl
lods
das
pop
in
repnz
ja
sub
inc
adc
fwait
add
adc
pop
loopne
cmp
rolb
mov
insl
sub
arpl
jmp
fistps
loope
aaa
movsb
jbe
lret
inc
insl
xor
push
es
imul
out
adc
cmp
inc
sbb
and
pop
popf
inc
xchg
pop
sbb
fwait
xchg
and
mov
jmp
adcl
mov
add
aaa
leave
cmp
mov
xchg
push
cwtl
test
mov
pop
cli
daa
mov
pop
imul
loopne
cwtl
jae
xor
jp
mov
addb
inc
push
mov
ljmp
nop
pop
stos
xchg
xchg
xchg
sti
push
icebp
push
lea
mov
lret
cmpsb
fisubrs
loope
in
push
imul
mov
mov
mov
jmp
and
mov
shlb
dec
dec
nop
icebp
cmp
shll
aam
cmp
fcmovnu
outsb
stos
or
sbb
adc
xchg
shlb
icebp
repnz
xchg
jnp
and
push
lret
sub
jo
insl
aad
ja
push
out
sbb
adc
adc
jle
sub
push
ffreep
jbe
out
mov
push
xchg
push
adc
movsb
sbb
mov
sahf
loop
sti
push
das
lods
icebp
mov
and
mov
insb
dec
dec
dec
mov
push
mov
push
mov
xor
int3
jl
sarl
mov
rol
fs
arpl
jae
shll
jmp
ja
test
addr16
vpsllq
mov
mov
adc
scas
add
movl
mov
scas
pop
xchg
int3
lds
ficoms
pushf
fwait
mov
fistl
popa
mov
cmp
and
es
add
mov
rorb
aas
push
cmp
dec
rclb
out
sahf
scas
in
aam
pop
icebp
aaa
outsl
fldl
push
imul
pop
div
imul
add
push
rorb
cmc
pusha
push
jge
add
pop
cld
xchg
add
aam
and
push
add
cmpsl
adc
or
cmpsl
xchg
movsb
arpl
cmpsl
mov
jp
and
bound
mov
pop
dec
sub
or
cmpl
jle,pn
xchg
inc
cmp
popa
inc
mov
outsb
jno
pop
push
call
cltd
lret
test
lock
addr16
mov
divb
cld
mov
stc
ret
jp
or
addb
xchg
sahf
adc
loopne
xchg
or
xlat
jnp
cltd
pop
push
or
sbb
out
mov
hlt
cmpsl
add
scas
cmp
aaa
divb
rclb
add
pop
rcr
push
rclb
mov
mov
pop
scas
lock
bnd
mov
mov
in
int
cmpb
jns
jae
call
in
jg
cli
cld
insl
stc
addl
sbb
sbb
cmc
in
lea
adc
cwtl
dec
daa
xchg
pop
xchg
push
inc
sub
push
sub
or
cmpsl
add
test
mov
dec
mov
push
sahf
push
cwtl
pop
pop
sbb
push
inc
xchg
jecxz
gs
pop
and
cltd
outsl
adc
cmp
ja
stc
push
dec
lods
data16
dec
lods
xor
jbe
jne
push
mov
hlt
adc
xor
xchg
xchg
xchg
ss
cltd
or
mov
insl
into
movsb
adc
xchg
sub
shrl
xchg
mov
push
jg
mov
xor
or
ret
adc
xchg
repz
int
mov
lea
sbb
fidivrl
or
dec
imulb
pmulhw
push
xchg
mov
bound
call
adc
cs
daa
inc
add
jae
out
outsb
lods
cmc
or
cmovg
mov
aas
adc
add
mov
test
out
dec
and
lret
sub
pop
xor
fidivrl
sub
or
inc
lahf
jl
xchg
mov
jle
xor
adcb
and
sbb
mov
jbe
push
mov
adc
dec
mov
push
and
popf
jae
cld
incb
jns
incl
jle
insl
or
test
into
sub
mov
dec
pop
mov
add
sbb
fimuls
int3
xchg
sbb
clc
hlt
lods
into
scas
mov
mov
movsb
mov
mov
mov
lods
aaa
fld
aas
mov
lret
incb
in
sar
mov
faddl
inc
pop
ret
lods
push
in
adc
dec
shr
pop
xchg
dec
push
xchg
inc
pusha
mov
fbld
loop
push
insb
dec
out
pop
cmp
shr
mov
cs
leave
xchg
mov
iret
hlt
notl
adc
sbb
imul
bound
lea
mov
adc
and
sahf
das
jns
and
mov
test
inc
pop
fdivl
insb
inc
lods
or
sbb
push
push
push
shl
cmpsl
pop
pop
cltd
pop
lds
adc
es
push
aad
pop
lods
rcll
data16
jns
call
out
in
lock
xchg
jl
mov
mov
test
cwtl
jle
mov
negl
mov
loopne
sbb
xchg
sbb
pushf
and
mov
std
mov
ret
lock
subl
lret
int3
cmp
idivb
jns
xchg
cmp
or
push
push
les
push
xchg
mov
sbb
push
push
popf
pushf
dec
les
out
sub
outsb
inc
icebp
pop
pop
jae
mulb
xchg
jp
sbb
sti
ja
sub
lds
incb
sbb
mov
and
push
sbb
std
push
outsb
add
pop
mov
cmp
mov
inc
inc
inc
cmp
insl
dec
dec
dec
xor
lea
les
test
aas
test
push
mov
dec
mov
rcl
fcmove
push
lods
rcrb
cltd
fisubrl
xor
repnz
scas
test
pop
test
jbe
cltd
mov
mov
push
lret
int3
mov
inc
pop
dec
test
and
or
sub
rep
xor
cs
scas
aaa
idivb
lret
aaa
dec
into
rol
inc
pop
xlat
fcomp
dec
pop
fmuls
mov
call
out
sarl
xor
dec
out
adc
pop
push
call
push
loop
pop
icebp
imul
jmp
out
je
cmc
jge
hlt
push
imul
jo
inc
add
orb
filds
wbinvd
popf
inc
test
inc
sub
xor
xor
and
scas
arpl
ret
mov
or
dec
push
shrl
and
cmpb
mov
mov
pusha
into
xchg
inc
and
addr16
fadd
pop
fistps
jb
pusha
loop
jl
dec
gs
aad
out
lods
test
lods
xor
rolb
enter
xchg
xchg
xchg
mov
lods
pushf
pushf
popf
or
xchg
adc
cmpsl
adc
movsl
pop
pop
jecxz
sbb
xchg
out
mov
and
mov
and
jmp
dec
lret
cmp
lret
xchg
shll
push
mov
adc
push
adc
push
or
push
cmpsb
call
push
pop
mov
fcompp
icebp
into
sbb
pop
out
jae
outsl
cs
jmp
clc
repz
xor
sbb
add
inc
jp
xchg
adcl
movsl
setne
sahf
stos
sbb
pop
cmpsl
scas
sub
mov
cmpsl
mov
add
lods
dec
mov
xor
inc
mov
cmp
aas
lds
lret
mov
cmpsl
cwtl
push
loopne
fistpl
data16
fnstsw
loope
gs
hlt
lcall
hlt
cmp
mov
mov
mov
push
sahf
adc
push
aam
movsl
cmpsb
cmpsl
sub
xchg
sub
mov
and
mov
stos
mov
ljmp
enter
xor
xor
inc
mov
or
jg
stos
or
push
stc
insl
mov
call
into
mov
mov
fsts
fdivrl
and
negb
insb
cmp
imul
or
fnsave
push
adc
jns
hlt
jl
sbb
icebp
jecxz
inc
push
shlb
pushf
sbb
or
adc
cmp
es
sub
cmp
lahf
sub
mov
aas
mov
pop
orb
dec
or
jae
cmp
rorb
inc
pop
into
ljmp
fmuls
in
addr16
loope
jg
sarl
xchg
icebp
out
hlt
sub
sti
mov
mov
inc
or
add
fwait
mov
popf
mov
mov
xchg
mov
sbb
mov
loope
and
lret
mov
cmp
js
mov
roll
xlat
sti
fiaddl
dec
or
sbb
jmp
pop
xor
push
pop
in
in
out
negb
les
ja
cli
jo
movsl
adc
ljmp
pushw
adcb
in
fdivrp
js
sti
adc
add
mov
jp
xchg
lock
cli
cwtl
push
in
sbb
xchg
or
mov
movsl
dec
mov
lock
cmp
aas
scas
xor
cmp
orb
push
push
push
add
mov
xchg
mov
inc
iret
dec
jno
xor
aaa
sub
pushf
shrb
xlat
pushf
push
xlat
mov
imul
jl
jge
lods
shlb
test
mov
incl
add
xchg
add
sarl
jae
sti
imul
push
lret
stos
pushf
pop
loop
fidivrl
or
shll
cwtl
nop
mov
jmp
gs
xor
lods
les
cmp
xor
or
lods
lds
leave
dec
pusha
fsub
push
adc
push
data16
aad
jno
pop
outsl
fucomip
pop
addr16
cld
std
insl
sub
outsb
out
aam
jle
jo
icebp
jae
lock
repz
idivb
test
pop
dec
add
add
out
sub
push
push
adc
xor
cmp
sub
hlt
push
inc
inc
inc
pop
sbb
js
ss
and
roll
inc
mov
pop
pop
pop
pop
loopne
xor
xchg
fs
rcll
insl
outsb
outsl
frstor
jbe
dec
dec
arpl
sub
jno
jb
mov
test
cli
mov
js
add
xchg
incl
or
xchg
push
xchg
push
dec
adc
jmp
scas
and
hlt
mov
xor
in
ret
bnd
ss
das
das
sub
lahf
cmp
dec
ret
sbb
add
dec
js
out
pop
xchg
lods
in
pop
or
mov
hlt
fstpl
sbb
test
xor
cld
test
or
or
add
jbe
add
adcb
adc
add
xchg
inc
xchg
or
popf
inc
cs
sbb
lahf
xor
sub
cmp
cmp
popa
dec
and
popl
imul
sbbb
bound
push
mov
jo
dec
test
inc
mov
rclb
sbb
jo
fldcw
ljmp
jl
scas
inc
fisubrs
fisttpll
mov
loop
nop
in
mov
cld
pop
lea
popf
sahf
lahf
add
call
mov
mov
pop
mov
xlat
lahf
and
stos
sahf
pusha
clc
jnp
loope
daa
in
mov
sub
in
sarl
or
shll
rcl
rcll
ret
inc
les
dec
loopne
loop
sbb
pop
pavgw
pop
sbb
fcmovnb
push
popa
push
repnz
and
dec
add
aam
push
or
or
inc
and
and
push
jl
mov
push
xor
push
inc
and
mov
lcall
cmpsb
dec
mov
lods
push
in
sub
sub
dec
test
xor
cmp
leave
push
cmp
xor
insl
movsb
pop
cmpsb
pop
pop
rolb
jle
popa
leave
pop
push
in
push
fisttpll
push
pop
cltd
ficomps
push
jge
insb
in
gs
hlt
xchg
data16
outsb
or
jo
jbe
or
push
xchg
mov
sahf
pop
dec
popf
sahf
dec
test
cmpsb
cmpsl
test
push
scas
prefetch
push
out
mov
mov
ja
lods
mov
outsl
and
cld
xchg
outsl
add
push
pushf
in
mov
aam
movsb
fsts
add
dec
or
pop
into
push
cmpsl
pmulhw
inc
fists
lock
popa
mov
in
pop
mov
outsl
shrb
daa
shr
jbe
sbb
xchg
push
ja
fadds
cmp
push
xchg
or
in
xchg
push
pop
in
dec
sub
sub
push
mov
aaa
cmp
and
ret
aaa
test
or
mov
dec
mov
sub
pop
pop
lret
mov
lea
enter
push
xchg
pop
loop
fadd
addr16
push
mov
bound
dec
sub
shrl
enter
mov
or
add
fwait
pushf
test
les
std
adc
imul
mov
add
jbe
shrl
fisttps
imul
in
mov
int
icebp
mov
aad
mov
inc
adc
dec
add
pop
mov
sbb
aaa
iret
inc
and
js
movsb
pop
cmc
lds
data16
lret
sub
jbe
push
adc
sbb
das
or
cmp
nop
cld
jle
or
rcrb
mov
repnz
fwait
mov
std
insb
lahf
sbb
inc
sbb
and
pop
daa
mov
and
inc
inc
lock
stc
je
addr16
dec
dec
mov
push
and
data16
sub
bound
adc
inc
pop
xchg
push
aam
jb
sahf
outsb
stos
mov
inc
jge
jg
daa
es
testb
push
mov
nop
cmc
xchg
ljmp
push
lcall
out
xchg
insb
testl
sbb
cltd
negl
cwtl
popf
pop
jnp
xchg
sub
cs
pop
xchg
ljmp
xor
sti
ss
int3
cmp
std
fidivrs
mov
loop
leave
and
rcll
arpl
pop
fnstenv
push
popf
imul
jo
jle
and
in
push
jge
jns
xor
inc
pop
test
dec
sub
pop
inc
jg
test
xchg
sbb
or
add
adc
sub
xor
sbb
js
jno
jecxz
lods
or
test
mov
jno
jle
inc
xchg
ret
jp
mov
enter
inc
int
pop
lret
or
cltd
xor
xchg
pop
lret
int3
jecxz
pop
loopne
and
loopne
xlat
in
dec
hlt
xchg
fmull
inc
mov
xchg
push
inc
mov
test
ds
or
fld
je
mov
sbb
iret
sbb
out
push
xchg
cmpsb
push
jbe
lea
icebp
sub
test
pop
int3
int
fwait
pop
cmp
mov
in
ficoms
dec
cmp
dec
xor
push
mov
push
or
pop
pop
test
subb
cwtl
mov
test
test
les
cmpsb
pop
imul
sub
or
xchg
add
lea
test
addl
inc
and
iret
pop
adc
jne
lds
and
push
out
add
inc
inc
cmpsb
mov
mov
mov
mov
mov
les
push
xor
pop
insb
mov
push
pushl
insb
outsb
fstl
lock
lds
jne
jl
in
and
test
out
or
mov
mov
lock
sub
hlt
push
mov
mov
adc
lret
jle
stos
and
in
push
repnz
pop
sahf
sub
mov
rcll
lret
sbb
or
roll
inc
mov
xor
and
aad
movsb
int3
lea
mov
push
jmp
push
xchg
add
jmp
push
mov
std
insb
sub
aaa
add
push
lods
rcll
movups
loop
cld
fidivrs
sbb
call
lds
push
sub
test
push
xchg
sub
inc
xor
mov
popa
adc
cmp
inc
pop
shrb
mov
push
imul
lods
and
adc
lds
dec
rcl
lds
mov
fsub
push
lret
je
push
ja
fisubrs
popa
in
fdivl
jmp
mov
mov
mov
mov
sbb
lds
lods
shll
shlb
dec
rcl
xchg
faddl
mov
mov
mov
daa
lods
icebp
cwtl
out
les
push
outsl
inc
into
das
jne
mov
xchg
dec
into
testb
xor
push
enter
mov
loop
lods
xchg
jmp
push
fdivrs
fcomps
and
stc
push
std
jo
push
xchg
std
add
push
cmc
xchg
fbstp
outsb
insl
mov
xchg
pop
pop
lea
cltd
or
lahf
adc
cmp
mov
clc
mov
aaa
pushf
fisubl
xchg
loopne
mov
inc
mov
inc
mov
inc
mov
dec
dec
sbb
push
leave
inc
pop
int3
inc
and
add
or
mov
push
insb
xor
lret
int3
sbb
in
filds
pop
popa
xor
fistpll
push
sbb
pop
push
pop
insb
push
mov
lea
push
ret
mov
mov
nop
jecxz
out
pop
push
call
xchg
dec
fidivrs
in
and
test
stc
int
cmp
hlt
iret
xor
aad
xchg
jne
fnstsw
dec
add
lds
xchg
adc
push
xchg
sub
cwtl
or
adc
adc
pop
in
add
icebp
adc
testb
sbb
pop
cmc
or
or
fidivrs
adc
rclb
sbb
shlb
and
rorl
ficoml
adc
cs
stos
pop
fstpl
adc
popa
aaa
push
cmp
cmp
xchg
lods
or
mov
mov
sub
test
sbbl
inc
rorl
ljmp
faddp
jbe
dec
jge
xchg
mov
stos
xor
cmpsb
xor
imul
xchg
adcb
aad
xchg
sahf
adc
je
cmpsb
cmc
les
iret
xchg
add
les
fdivs
lahf
push
andb
mov
mov
and
or
mov
xchg
mov
fmull
xor
repz
pop
loop
mov
adc
mov
pop
int
call
fxtract
hlt
cmc
arpl
sub
sub
jb
push
add
mov
dec
xchg
insb
insb
push
mov
inc
pop
loope
cmp
push
cli
push
cmp
dec
and
and
jb
ret
ja
xor
xor
pop
cmp
jne
sbb
adc
dec
pop
sub
inc
mov
sub
pop
xchg
mov
ja
mov
mov
lods
sbb
jbe
sbb
lahf
sbb
call
bound
jg
bound
xchg
mov
cltd
cltd
cltd
lcall
incb
add
push
xchg
dec
cld
sbb
sbb
rorb
or
stos
bnd
sbb
mov
xorb
push
enter
inc
in
shl
movsb
sar
inc
movsl
aas
dec
mov
ror
inc
xchg
loopne
pop
in
out
int
push
lods
aam
iret
in
mov
pop
cmp
push
gs
add
and
lds
ja
rcl
sbb
adc
inc
lock
call
mov
pop
jge
xchg
aas
xchg
or
lock
call
push
add
fldenv
cwtl
xchg
aaa
aaa
cmp
pop
sbb
inc
mov
inc
mov
cwtl
dec
dec
ret
gs
push
dec
mov
mov
mov
fsts
fcoml
jg
pop
xchg
outsb
fisubrs
out
aaa
mov
imul
jbe
imul
mov
aas
mov
addl
xchg
or
sahf
adc
adc
movsb
pop
mov
test
scas
pop
aad
cwtl
mov
mov
fwait
sti
and
and
vcvtss2si
mov
insb
xor
jnp
cli
lret
lock
mov
loopne
mov
adc
jmp
pusha
les
dec
lahf
or
aaa
and
std
push
and
scas
sub
pop
pop
or
gs
cmpl
mov
sbb
cmpsb
or
sbb
jns
pop
addb
addb
xor
out
cmp
cs
mov
jl
and
adc
push
push
test
ds
int3
sub
jbe
pop
pusha
mov
or
shll
les
insl
aam
adc
pop
adc
dec
mov
mov
popf
repz
pop
scas
test
stos
cmpsl
mov
jb
in
mov
sti
lea
fs
mov
or
cmpsl
test
add
fld
fbstp
sub
jle
out
mov
daa
in
add
cwtl
sbb
lret
cli
into
inc
mov
out
inc
test
dec
fwait
sbb
roll
loope
jecxz
inc
loop
test
push
lret
call
hlt
pop
cmp
push
push
push
lds
popl
add
cmpsl
lock
ds
push
aad
sbb
repz
sbb
adc
and
dec
fsubrl
sub
mov
mov
cmp
in
aas
inc
inc
inc
mov
pop
dec
mov
push
lds
push
push
sarl
add
inc
xchg
pop
xor
subl
pushf
enter
je
pop
cmp
xchg
loopne
xchg
jmp
jns
lahf
jnp
gs
insb
cmc
cld
inc
ret
add
xchg
in
fs
or
mov
xchg
cmpsb
sbb
mov
push
sub
pop
sub
jbe
mov
cs
dec
mov
mov
jo
adc
bswap
adc
rcl
aam
push
inc
cld
inc
sub
into
dec
sub
shl
les
inc
push
push
loop
xor
popf
sbb
clc
stc
cli
sti
bound
repz
add
add
jne
fmuls
clc
or
push
punpckhwd
mov
in
mov
mov
mov
mov
push
cs
adc
fdivrp
xor
xchg
stos
jno
adc
xor
hlt
imul
dec
sahf
aaa
mov
push
mov
dec
pop
cltd
and
inc
xchg
insb
ficompl
dec
lahf
jne
cmpsl
in
jbe
lret
cmc
popf
addl
xor
mov
xchg
mov
cmp
out
add
adc
mov
sbb
stos
jno
shrl
mov
fnstsw
std
shll
lock
lret
and
cmp
xor
cmp
xlat
xchg
fxch
fcmovnu
push
ss
pushf
out
dec
cmpsb
inc
push
aam
add
add
pop
fisttps
and
arpl
inc
push
jmp
inc
outsl
imul
mov
testb
dec
aam
push
jns
push
fidivrl
test
xchg
inc
xchg
lcall
mov
clc
ss
mov
and
mov
dec
aas
cmpsl
mov
inc
adc
inc
mov
cmp
sbb
pop
scas
mov
rcrl
jecxz
fisubl
sub
pop
mov
jp
fidivrs
aam
repnz
imulb
outsl
outsb
sti
mov
cld
mov
xchg
add
or
xchg
xchg
dec
pop
test
sti
and
jmp
pop
mov
mov
mov
int3
pusha
in
nop
lret
into
iret
cmp
mov
dec
mov
mov
inc
and
fisttps
shlb
pop
stc
pop
sub
in
insl
shrl
shrl
mov
mov
xor
out
jo
insb
jns
mov
add
or
or
xchg
adc
pop
sbb
sbb
push
push
and
es
outsb
es
inc
popf
push
cld
stc
test
aaa
cmp
cmpsb
jge
mov
mov
mov
es
or
dec
push
sbb
push
push
xchg
lret
imul
and
xlat
dec
sub
popa
push
push
xor
lods
fadds
jae
mull
gs
cmpsb
jl
int3
addr16
test
test
repnz
add
mov
mov
loope
sahf
shlb
bound
scas
je
stos
mov
pop
jmp
stos
dec
jns
sub
test
xor
test
lret
mov
xor
inc
or
lret
rorl
and
adc
out
lret
in
out
pop
pop
insb
fsubl
fistpl
mov
push
stc
addr16
add
sbb
fidivl
sarb
int
pcmpgtd
xor
inc
push
cmpb
push
mov
mov
sti
push
daa
xchg
dec
sbb
xchg
jbe
xor
pop
xor
cmp
cmp
mov
inc
mov
cwtl
inc
mov
or
lock
mov
adc
xchg
dec
push
push
fstl
pop
leave
subb
pop
enter
mov
out
scas
fbstp
xchg
adc
jmp
in
sbb
repnz
pushf
bound
test
in
mov
lea
cmp
xchg
cwtl
or
addr16
mov
in
bswap
sbb
xchg
sbb
xchg
sbb
imul
imul
and
dec
cld
out
stos
aaa
lds
negl
and
std
cmpl
push
push
adc
mov
fiaddl
xchg
dec
xor
or
inc
inc
mov
jmp
repz
xchg
jecxz
push
pusha
insl
cmc
imul
leave
sbb
add
jne
int3
roll
or
adc
nop
add
test
and
sub
dec
aad
stos
add
sahf
push
fnstcw
mov
sbb
js
ret
mov
push
pop
mov
xor
je
rcrb
push
int3
js
aad
and
mov
das
xor
pop
jb
jne
int
les
rcll
addl
xchg
out
sti
mov
hlt
cmp
pop
adc
lahf
lahf
mov
dec
sbb
lahf
adc
mov
mov
mov
jne
fwait
and
add
cmp
dec
scas
cmp
xchg
dec
fmulp
int
sub
aad
xlat
fidivl
fistpll
cmp
xlat
dec
mov
call
push
fstps
mov
pusha
jecxz
fdivr
cld
std
clc
jmp
inc
sbb
pop
popa
bound
pushl
movups
pusha
adc
fldl
sbb
jae
sbb
and
daa
lahf
cmp
lahf
inc
test
inc
dec
cs
xchg
aad
lcall
cmp
cmp
sub
inc
inc
push
shlb
test
inc
arpl
lods
scas
mov
pop
mov
inc
jb
popa
mov
mov
sahf
push
fstl
ja
cmpsb
rolb
lcall
fisttps
xchg
test
mov
inc
movsb
xchg
xchg
out
out
cld
pop
or
xorw
mov
ficoms
leave
add
mov
sbb
xchg
fisttps
sti
iret
inc
out
cwtl
jge
xlat
movsb
mov
fildl
test
loopne
out
sbb
xor
inc
rcrb
in
std
jo
insb
fadd
jbe
add
test
or
imul
fisttpll
push
pop
xchg
xor
xchg
adc
and
sub
cs
xor
dec
mov
sub
sub
inc
dec
dec
mov
push
mov
ret
sbbl
mov
scas
leave
daa
lea
lcall
cmc
push
insb
aam
fildl
jb
call
jl
fwait
jg
xchg
xor
test
je
sti
jae
push
fldl
nop
cmc
xor
xchg
xchg
cwtl
repz
mov
rorl
enter
stos
sbb
jne
outsb
mov
and
pop
int
loopne
xor
push
cld
ds
inc
stos
dec
or
cmc
mov
add
xchg
inc
std
lret
dec
les
vandps
push
push
iret
xor
jmp
mov
cltd
hlt
addr16
push
cli
insl
jmp
into
add
add
js
insb
stos
and
cs
jp
or
and
aaa
or
ret
mov
test
and
inc
setae
cmpsl
insl
in
sub
clc
lods
sbb
sbb
pop
add
mov
sub
test
cmpsb
aas
mov
push
push
push
mov
ja
lock
mov
leave
loop
gs
or
inc
xchg
insb
shrb
aam
jae
je
inc
sbb
dec
movsl
jnp
jle
call
je
stos
dec
mov
xchg
mov
pop
js
popf
jl
cwtl
sbb
loop
ljmp
movsb
adc
mov
xchg
and
mov
sub
andl
or
adc
lret
int3
xor
mov
aam
adc
int
cmpsl
fstp
fisttps
stos
push
or
push
push
or
bound
repnz
and
lahf
adc
fildll
imulb
push
pop
or
icebp
jp
aad
pop
add
addr16
pushf
popf
mov
enter
mov
test
xchg
pop
inc
lcall
sbb
mov
lods
arpl
scas
jns
mov
adc
push
test
outsb
push
andb
dec
cmp
jg
filds
test
das
lret
orps
in
push
sub
lock
jmp
out
push
jle
popf
xor
xchg
jbe
imull
add
out
mov
cld
cmp
xchg
or
xchg
pop
popa
mov
roll
adc
scas
mov
das
sub
add
mov
and
imul
scas
inc
inc
in
inc
in
rolb
roll
dec
popf
dec
out
fists
loop
int
stos
xor
lea
mov
lock
inc
rorb
adc
push
add
add
and
and
fwait
push
inc
mov
out
rol
or
push
jle
stc
or
clc
pop
mov
jg
sbb
and
sub
cmc
mov
xlat
and
nop
sahf
mov
mov
and
ret
jae
mov
jo
bts
pop
iret
jnp
sarb
arpl
jbe
fsts
fcoml
sbb
adc
xchg
ja
xchg
jp
jge
jle
xchg
xor
mov
testl
repz
cmp
jge
rdpmc
mov
mov
into
movsb
or
mov
mov
jle
call
sti
jg
out
mov
rorb
or
in
nop
lret
mov
mov
dec
in
cmp
mov
mov
lods
dec
adc
jmp
je
out
lock
mov
popa
loopne
das
outsb
and
outsb
sub
ja
repnz
jb
andl
sbb
jbe
int
orl
stos
and
sub
ljmp
je
cmp
call
enter
mov
shrl
ds
aas
jl
cmp
aas
inc
pop
pop
push
sbb
arpl
dec
push
imul
jo
int
mov
sarb
stc
aas
cmpsb
jl
or
out
mov
push
int3
dec
mov
adc
push
mov
mov
cld
inc
lock
imul
jae
test
iret
popl
push
shrl
mov
sbb
je
in
daa
mov
mov
cs
int3
int
cmp
fsts
pop
adcl
add
stos
out
jmp
pop
inc
rorb
lods
mov
mov
adc
mov
call
shrb
sub
popf
jle
js
cli
or
jle
xchg
into
cmpl
ljmp
das
xor
fs
sti
pop
xor
pushf
add
cmp
pop
rcll
inc
xchg
inc
dec
jl
adc
mov
push
lods
subl
pop
mov
mov
out
xor
insl
mov
fst
cmp
js
cmpsl
shl
filds
addb
test
mov
pop
xchg
xchg
divl
add
sahf
lahf
xchg
pop
mov
and
pop
push
nop
je
mov
sbb
push
jge
mov
shll
cmp
ret
xor
lcall
rcl
adc
orb
adc
dec
fildl
cli
addr16
push
push
in
fstpl
mov
pop
pop
xchg
shlb
enter
pop
je
addr16
cmpb
outsb
mov
xor
sub
mov
xor
repnz
mov
loopne
sbb
pop
pop
xchg
loopne
dec
sbb
out
jge
sub
aam
sbbb
xor
pop
aaa
outsl
pop
push
xchg
xchg
lods
mov
ja
test
inc
mov
js
les
aaa
out
adcb
pop
pop
pop
jno
dec
test
jno
data16
fstpt
dec
incb
insl
outsl
outsl
jo
jne
add
pushf
ja
loope
js
xchg
and
push
lods
subl
sbb
mov
mov
add
leave
stc
pusha
ret
loop
popf
sahf
ficoms
movsl
cmpsb
fidivrs
push
cmp
adc
and
fdiv
mov
sub
test
sbb
fnstcw
in
enter
mov
shll
adc
xchg
das
lcall
insb
push
jecxz
sbb
dec
sbb
adc
push
or
sbb
in
mov
jne
cli
out
pusha
mov
incl
outsb
das
shlb
push
sti
insl
cltd
or
add
pop
sbb
push
loop
out
and
mov
adc
or
xchg
mov
mov
pop
xor
or
aas
mov
incb
cmc
pusha
mov
loop
jp
ds
fstps
test
pushf
or
push
mov
aas
insb
arpl
adc
in
imul
fldl
sub
inc
lods
addb
lea
mov
push
add
xchg
sbb
and
pusha
popf
and
and
and
shlb
and
sub
mov
and
sub
test
mov
lcall
rcrl
cwtl
call
aas
adc
sahf
add
cld
and
or
push
mov
ljmp
push
xchg
pop
cmc
push
shrb
inc
xchg
sti
add
ret
shr
insl
scas
or
pop
inc
cmp
jb
jo
pop
out
sbb
sarb
push
pop
xchg
aaa
jo
in
or
sub
adc
add
pop
das
xor
xor
imul
mov
add
inc
pushf
mov
sub
ret
das
mov
push
ret
cmp
pop
mov
lret
ret
or
mov
aam
pop
and
xchg
data16
out
xor
jno
fistpl
mov
mov
fs
insb
lods
test
test
mov
xor
push
pop
jns
push
lea
pop
inc
add
sub
shufps
or
push
mov
push
and
jle
mov
test
xchg
mov
ret
sbb
hlt
lret
outsb
jle
sti
roll
jecxz
cmp
push
push
xchg
faddp
loopne
and
fwait
sbb
mov
js
repz
mov
dec
push
pop
mov
lods
leave
sub
leave
xchg
lea
or
popa
bound
outsb
mov
cld
mov
add
loop
sbb
loopne
pop
jl
push
sub
xor
sbb
and
mov
inc
inc
ds
push
inc
and
dec
dec
push
sbb
push
pop
mov
xchg
inc
scas
jns
or
test
sbb
lcall
mov
inc
stos
dec
addl
add
lea
xchg
add
pop
jnp
fsubs
dec
adc
outsl
cmpsb
scas
adc
jb
jg
jp
test
add
jecxz
xchg
ljmp
dec
xchg
push
insb
not
dec
fnstcw
sbb
xlat
inc
sahf
dec
faddl
push
iret
in
mov
sbb
daa
pop
das
mov
sbb
repnz
push
mov
ret
lret
enter
imul
jecxz
out
das
add
dec
jp
into
pop
hlt
jg
jns
aaa
adcb
fldl
mov
fucomip
pop
sbb
or
lcall
sub
cmpsb
pop
aaa
test
cmp
inc
push
jne
imul
xor
xor
jbe
and
mov
mov
fisubrs
popa
bound
rorb
push
xlat
jbe
and
jne
and
sub
sub
xchg
out
cs
push
repnz
jns
jmp
add
xchg
ja
std
jg
adc
xchg
cmpsb
std
add
lods
scas
scas
adc
fwait
out
pop
sbb
mov
add
adc
mov
cmpsl
fadd
enter
pushl
int3
jns
ds
dec
adc
popf
fcmovnb
dec
hlt
jbe
cmpsl
pmulhw
dec
mov
in
lret
shrb
or
xor
call
mull
inc
sbb
add
jle
jp
add
adc
call
inc
sbb
push
pop
and
es
sub
push
pop
sub
xor
mov
lods
and
xor
aam
inc
inc
push
add
jmp
insb
xor
mov
jae
outsb
mov
movl
dec
inc
loope
mov
dec
mov
imul
xor
outsl
jno
xlat
adc
jmp
out
ljmp
add
lods
jno
lret
test
enter
or
gs
mov
mov
jecxz
xchg
sub
je
sub
mov
in
xor
lods
cmp
cmp
iret
inc
cli
into
inc
add
aas
cmp
scas
gs
call
mov
aad
and
dec
push
pusha
sbb
xor
ds
cmpsb
mov
sub
add
sbb
push
xchg
jg
sbb
testl
mov
sub
sub
aam
sbb
pop
cmp
popf
sbb
cmp
inc
inc
aaa
test
xchg
das
dec
dec
dec
mov
push
test
dec
dec
test
and
jp
lret
imul
xchg
outsb
lahf
cmp
iret
in
insl
jl
jg
jmp
je
test
mov
icebp
or
or
xchg
cwtl
pop
mov
popf
sahf
or
movsl
cmpsb
or
cmc
nop
mov
scas
or
dec
mov
sbb
mov
rol
jp
xchg
jmp
xchg
push
mov
sub
xchg
mov
mov
dec
mov
jecxz
lods
subl
inc
inc
mov
jb
repz
xchg
sbb
dec
mov
pushl
pop
lret
ja
or
push
stc
sub
push
sahf
lods
adc
lds
push
pop
jg
es
fnsave
arpl
xchg
lret
xor
mov
insb
subl
pop
cmp
push
xchg
das
inc
scas
enter
dec
mov
inc
cmpb
pop
add
mov
stc
xchg
xor
aam
and
jae
movsb
pop
xor
mov
jno
jae
mov
adc
jge
aas
fprem1
push
xchg
nop
xchg
call
add
jle
push
imul
outsl
mov
xchg
adc
jmp
loop
call
addr16
and
and
out
add
test
add
shll
rcl
roll
mov
cmc
fstp
fiadds
push
iret
dec
inc
into
out
test
out
out
push
lock
lock
clc
lcall
call
mov
dec
out
jae
testb
rclb
adc
cmpsb
out
sbb
pop
pop
shll
mov
xchg
pop
loopne
std
push
das
aas
loope
cmp
data16
xor
mov
inc
add
dec
mov
push
jne
mov
rcr
push
leave
pop
pop
sbb
dec
or
xor
push
fisubrs
xor
pop
push
pop
xor
js
jp
jl
mov
jns
addb
inc
pop
mov
repnz
lea
xchg
xchg
pop
push
xchg
pop
outsb
lds
je
sub
and
fnstenv
sarb
ss
test
aaa
lret
rolb
mov
fsubrs
stos
add
lods
lret
lret
call
inc
jb
ret
sbb
push
cltd
cmc
ret
imul
push
dec
in
and
pusha
pop
pop
test
inc
fcom
xor
or
shl
push
adc
push
inc
mov
inc
push
jl
mov
pop
out
inc
nop
or
push
xchg
adc
xor
dec
es
cmc
callw
pop
cmp
mov
imul
dec
mov
shll
jno
inc
jle
cwtl
ja
push
sub
jge
dec
mov
dec
and
pop
adc
adc
mov
cmp
jae
shr
pop
inc
adc
mov
push
lods
cmpb
pop
lcall
pop
mov
xchg
cwtl
out
add
sbbl
outsb
push
xchg
movsl
cmpsb
cmpsl
fdivs
dec
scas
mov
cmpsl
out
mov
sbb
mov
lahf
and
pop
das
not
cltd
out
lds
xchg
and
ds
notb
adc
dec
lock
loopne
xchg
dec
int
pop
aas
push
scas
xchg
push
lcall
int3
cli
sub
lds
add
and
xor
jno
mov
mov
cmp
adc
adc
dec
aad
je
jnp
ret
or
dec
and
jp
sub
nop
inc
adc
xor
cmc
xchg
xchg
and
es
inc
inc
dec
dec
mov
mov
cmp
mov
int
xchg
add
xor
and
xor
outsb
loopne
fcoml
fs
loope
push
loope
inc
test
arpl
insl
test
mov
insb
mulb
repnz
out
jle
lret
or
sbb
cwtl
mov
pop
or
lods
stos
adc
test
movsl
pop
mov
cmp
stos
aaa
lods
add
xchg
out
xchg
stos
dec
add
shlb
rcl
sarb
push
mov
pop
ret
inc
add
ret
dec
sbb
lret
or
sub
insl
es
fs
sahf
cli
outsl
push
arpl
pushl
sub
in
jns
fcomi
inc
out
inc
mov
stos
fadds
xor
or
iret
adc
mov
fisubl
aaa
lods
daa
mov
mov
test
dec
mov
dec
mov
pop
jle
cmp
inc
rorb
inc
int3
inc
enter
push
pop
and
ljmp
push
mov
pop
ja
mov
sarb
xor
add
in
push
stos
mov
notb
jnp
mov
fwait
cmp
inc
inc
repz
insb
rcl
cli
incb
xlat
lods
and
xor
mov
mov
out
lds
and
fidivs
jae
cld
rclb
jg
or
scas
add
dec
pop
push
fisttps
push
leave
push
push
or
sbb
popa
in
cwtl
pop
cwtl
mov
insw
cmc
imul
out
xor
dec
test
or
jno
clc
jb
test
js
push
jecxz
cmpl
xchg
pop
js
xchg
sbb
sub
xchg
dec
es
test
pushf
jno
or
cmp
sahf
sahf
pushf
out
jno
jecxz
sbb
sahf
popf
mov
aas
jne
mov
mov
std
movsl
ds
push
lahf
pop
dec
cmovp
ds
imul
jae
push
arpl
out
arpl
and
push
stos
adcl
mov
orb
xchg
outsb
add
mov
in
mov
mov
fnstsw
hlt
in
and
mov
or
insb
mov
out
sbb
sbb
out
stc
leave
mov
inc
add
xchg
outsl
jae
adc
cld
dec
jecxz
xor
out
aas
cmp
stos
popa
fcomip
arpl
loope
pop
xchg
clc
stc
push
popa
push
jmp
pop
add
pop
add
inc
cmc
sub
jbe
fdivrs
dec
mov
testb
testb
cmp
sub
mov
pop
pop
xchg
repnz
inc
cltd
adc
pusha
inc
lahf
sub
movsb
sub
jae
std
mov
outsl
fstpt
ds
mov
jp
adc
pushf
mov
push
push
mov
cmp
inc
jge
enter
mov
leave
das
mov
xor
jo
aam
lret
fistpl
jp
add
inc
stos
subb
dec
mov
cmpsl
mov
nop
pusha
mov
hlt
jns
incb
mov
mov
imul
or
and
mov
pop
lods
jecxz
or
cmp
sub
leave
lret
rorl
xor
les
xchg
aam
inc
call
xchg
faddp
loopne
and
into
pop
mov
sbb
outsb
dec
mov
mov
sti
sti
cld
lds
add
ret
pop
jns
outsb
in
sub
ja
jge
adc
adc
sbb
push
adc
test
sub
cltd
ficomps
outsb
imul
cmp
jne
push
outsb
inc
jl
lods
inc
lret
je
xor
adcb
int3
imul
dec
arpl
push
mov
daa
fmull
push
ficoms
aaa
lahf
jne
sub
pop
popf
call
jmp
in
scas
imul
nop
or
leave
jb
cmc
pop
ret
into
jae
fbld
dec
into
mov
sbb
mull
fsubrs
lods
call
jecxz
cs
loopne
lret
mov
inc
mov
aad
iret
mov
pop
adc
and
pop
aad
sbb
sarl
jno
pop
repz
sti
cs
mov
pop
repnz
addr16
das
mov
repz
out
adc
add
mov
pop
sbb
dec
es
lea
fwait
adc
fsubrs
xor
xor
add
popf
pusha
and
cmpsl
jl
cmpsb
jg
jmp
pop
sub
mov
xor
push
test
cmp
test
inc
xchg
push
push
iret
or
pop
dec
aam
aam
sub
xchg
bound
xchg
xor
push
mov
sbb
ds
xchg
in
outsl
cmp
pop
jne
aaa
or
cmp
rcrl
xchg
in
leave
bound
mov
cli
sti
sub
jns
cmpsl
sbb
push
jecxz
je
mov
add
mov
sbb
fstl
adc
sbb
xorl
into
sahf
mov
repnz
call
aas
ret
mov
add
in
mov
mov
in
pop
xchg
mov
xlat
fcomps
mov
arpl
and
shrl
pop
jns
insb
enter
cmc
adc
xor
xchg
or
out
pop
xchg
in
push
fstpt
out
enter
popa
sub
push
sub
sahf
adc
jg
das
xor
xchg
xchg
jo
jp
mov
jbe
adc
jb
mov
cmp
iret
mov
sub
gs
clc
aaa
mov
ficoms
mov
mov
dec
mov
insb
mov
addr16
xor
cmp
lea
xchg
div
ds
or
lahf
test
adc
test
xor
out
cltd
sub
sbb
cmpsb
push
test
rol
sbb
scas
add
scas
cmp
int
jecxz
cmp
sbb
dec
leave
adc
dec
int
jmp
add
sbb
pop
rol
pop
sahf
clc
popa
and
push
add
incl
add
lret
lcall
pop
notb
test
sbb
jno
rorl
hlt
dec
and
loopne
imul
mov
jbe
lods
dec
je
sub
sub
xor
icebp
mov
xchg
mov
mov
je
das
test
je
mov
adc
dec
scas
pop
and
mov
insb
mov
loopne
filds
jbe
xor
je
mov
and
push
stos
test
jg
or
xchg
cmp
lock
sub
pushf
jae
mov
movsl
test
stos
adc
inc
adc
sub
mov
mov
mov
xor
fwait
xor
imul
loop
xor
mov
lods
loopne
push
mov
cwtl
and
les
cld
cmp
xchg
fnsave
or
js
sarl
inc
adc
pop
jae
das
dec
or
xchg
or
clc
aas
cs
adc
push
xor
loope
enter
and
sbb
lods
ds
dec
dec
stc
inc
mov
push
push
push
mov
pop
pop
pop
pop
enter
fadds
fstpt
push
or
xchg
mov
int
ljmp
mov
sahf
jb
inc
out
sub
mov
mov
add
lcall
sahf
lahf
pop
out
mov
dec
adc
adc
mov
sbb
and
adc
mov
mov
push
das
test
fwait
loop
adc
sbb
adc
inc
or
loop
pop
mov
inc
ss
mov
pop
in
out
dec
dec
pusha
ret
imul
cld
std
pop
pop
add
push
jns
push
or
jle
push
and
xor
add
jae
nop
add
xor
inc
and
sub
les
xor
mov
cmpsl
xchg
push
jp
mov
scas
pop
mov
ret
pop
lods
dec
mov
and
lds
push
mov
push
pop
roll
pop
das
test
addr16
xlat
cwtl
pop
sahf
jno
pop
mov
jbe
fistps
js
pop
ljmp
std
jns
add
add
xchg
cmpsl
out
mov
xchg
ja
movsb
movsl
cld
adc
in
push
jno
mov
or
mov
jae
sub
add
ret
sub
int3
into
into
iret
lahf
mov
dec
les
inc
fwait
les
mov
dec
into
ljmp
xchg
pop
enter
imul
popa
mov
lds
jg
aam
rorb
push
into
push
cmp
inc
pop
cmp
dec
pop
mov
xchg
and
es
idivl
stos
mov
sub
jb
and
push
jnp
mov
add
daa
mov
test
movsb
mov
test
xor
push
mov
iret
scas
leave
add
enter
mov
push
pop
cmp
lods
fs
scas
fnsave
aam
fildl
xchg
js
jae
add
jnp
jecxz
data16
call
nop
mov
nop
fisubrs
jns
adc
mov
cltd
xchg
loopw
mov
retw
imul
mov
mov
int3
daa
sub
inc
xchg
xchg
int3
mov
aas
cmp
dec
lods
push
movsl
scas
int
xchg
jecxz
iret
in
popa
sub
hlt
sub
ljmp
xor
push
test
repnz
in
das
jl
cmp
fcomi
ds
add
nopl
or
mov
test
or
jecxz
cmp
sub
adc
loope
xor
xor
popf
popf
jecxz
bound
andb
or
mov
inc
xor
jle
mov
sbb
inc
pop
roll
bound
lret
push
sbb
dec
pop
lcall
push
jp
call
arpl
shl
dec
subl
mov
pop
mov
fwait
pop
int
cmp
aam
mov
adc
mov
xchg
mov
out
js
jp
rolb
jmp
insl
test
jbe
mov
lret
jne
jbe
inc
sahf
cmp
rorl
fdivp
pop
iret
add
sbb
ljmp
mov
sbb
sub
cli
or
xor
insb
and
sub
sub
inc
xor
inc
loopne
inc
adc
cmp
mov
lcall
jmp
popa
loope
int
outsb
aas
sub
sub
leave
push
das
clc
lret
aaa
ss
cmp
and
sbb
jl
xchg
mov
push
les
cmp
scas
mov
xchg
and
cwtl
and
aaa
cmp
nop
push
xchg
loop
xor
push
cltd
je
fwait
push
dec
sbb
jg
push
jae
xor
lods
xchg
scas
push
sub
xchg
xchg
cld
ret
jl
lcall
movsb
rcl
cmpsl
mov
packssdw
imulb
sbb
andb
rcrl
cs
fwait
enter
mov
xchg
xchg
aas
aam
sub
xchg
lds
rclb
mov
jecxz
adc
push
rcll
out
icebp
repnz
mov
fnstsw
lock
and
push
add
cmpsl
hlt
pop
into
xchg
ja
or
sti
ja
stc
jp
adc
addl
adc
ljmp
push
sub
xor
jnp
aam
aaa
xchg
add
cltd
or
mov
dec
dec
ret
sbb
push
push
popf
inc
ja
pop
mov
mov
fs
or
icebp
jo
sbb
loopne
fiaddl
in
shlb
sub
test
in
add
jmp
andl
inc
mov
sahf
push
mov
dec
sbb
xchg
out
scas
test
mov
cwtl
xor
mov
imul
cmp
lock
int
iret
nop
mov
xlat
fcomps
test
fnstsw
loope
push
or
dec
pop
sub
in
call
add
pop
out
aaa
insb
adc
lcall
add
add
lret
or
icebp
adc
adc
or
sub
cmp
sbb
sbb
and
xchg
fwait
out
in
das
sbb
xor
sbb
cmp
xchg
add
inc
inc
inc
lds
dec
test
mov
push
push
jl
push
ds
pop
iret
fs
adcb
popa
bound
mov
mov
imul
fs
mov
je
jbe
in
test
repz
shrb
movsl
xor
cmp
clc
lods
push
inc
mov
popa
lock
fwait
pushf
dec
ret
xchg
test
push
int3
pushf
stos
stos
stos
lods
sbb
fwait
adc
mov
sub
sub
mov
sub
scas
inc
hlt
push
or
jmp
push
xchg
xlat
mov
or
lds
dec
adc
leave
loopne
fcomps
jne
arpl
jb
repz
cmc
faddp
out
ljmp
add
lret
popl
or
ja
jno
cmovl
test
js
xlat
lds
pop
ret
cli
int3
inc
sbb
xchg
into
in
shlb
daa
sub
test
mov
bound
test
cmp
and
push
jp
inc
mov
addl
mov
jae
mov
insb
lods
push
push
inc
jle
pop
jo
dec
test
sub
cmp
mov
push
loope
out
pushf
jae
inc
pop
fldt
in
pop
stc
cmpsl
jle
xlat
aad
sub
xchg
stos
mov
loope
cmp
jp
decl
rolb
pop
lds
xchg
cmpsb
and
test
and
fsubs
lahf
or
ret
les
addr16
mov
inc
aam
or
aam
dec
aaa
pop
push
push
rcr
add
push
rcll
into
imul
pop
xchg
push
push
push
pushf
fwait
jne
stc
clc
inc
sti
push
enter
pop
insb
stos
rep
leave
jg
mov
adc
repz
sbb
xchg
aaa
jo
jb
jge
fdiv
sub
xchg
sub
mov
cmp
add
aas
inc
inc
in
in
out
out
lock
repnz
mov
movsl
movsl
mov
inc
rcl
les
or
lcall
enter
bound
push
push
insb
loop
xor
push
fnstcw
pop
fsubrl
out
xorb
adcl
repnz
inc
insl
xchg
add
jo
jns
xchg
cltd
sti
xchg
lcall
mov
push
xchg
test
scas
fistl
divb
and
in
ret
xor
stos
xchg
xor
ss
cmp
mov
jo
mov
loop
xchg
push
rorb
push
adc
lods
mov
push
sbb
pop
popf
ficompl
pop
repnz
xchg
addl
xchg
jecxz
add
hlt
jae
je
adc
jp
push
jge
add
and
dec
es
or
or
cs
adc
jecxz
jbe
fistps
jp
sti
sbb
mull
addb
xchg
insb
mov
adc
js
push
jl
les
shll
int3
mov
ss
mov
pop
aam
loopne
ficoms
outsb
out
jmp
in
lock
fs
addb
orl
jg
xchg
stos
jns
lcall
loop
adc
lea
or
sbb
xchg
adc
adc
pop
pop
es
out
es
outsl
outsb
xor
xor
cmp
aad
add
add
inc
inc
mov
loop
fs
out
aam
out
lock
pusha
repz
ljmp
cltd
popf
int3
dec
or
push
in
adc
push
adc
xlat
add
sbb
test
add
push
mov
xor
or
sahf
lret
xor
cmp
sbb
addb
sub
clc
mov
xor
ss
ds
push
push
loopne
pusha
hlt
clc
daa
mov
aad
push
jno
aam
push
fstpl
frstor
loop
arpl
js
imul
cmpb
mov
std
mov
sarb
jg
movb
mov
iret
cmpsb
or
xchg
adc
mov
mov
lods
cmp
mov
mov
mov
sbb
push
into
adc
push
dec
sahf
sbb
push
mov
and
push
or
push
or
push
pop
adc
pop
adc
or
or
insb
push
push
outsl
out
push
sub
jo
jl
jp
jg
js
test
cmpb
cli
cmpb
mov
mov
pop
and
or
or
lock
sub
xor
cli
jbe
idiv
jp
lar
scas
sub
jb
mov
xor
cli
sarl
addb
inc
lret
mov
mov
mov
lret
fcmovu
xchg
push
lcall
pop
in
jp
cmpsb
jge
mov
sub
hlt
push
mov
lret
jb
push
mov
or
or
ret
lsl
cmpsb
push
fwait
push
xchg
cmpsb
sarl
and
mov
out
in
es
mov
mov
lret
out
into
inc
loope
cld
int3
add
dec
int3
add
add
inc
aad
dec
add
cli
lret
jmp
push
mov
mov
cld
data16
push
or
jge
cld
outsl
es
jb
add
and
into
mov
cmc
icebp
ret
ds
push
pop
sbb
and
dec
sub
jne
add
and
fistps
cmpsb
fs
push
shlb
enter
mov
mov
xchg
sti
les
inc
mov
test
pop
rcr
addr16
aam
aam
and
mov
cmpsl
inc
cwtl
dec
cmp
jns
inc
push
addr16
in
imul
jmp
cld
sahf
in
lea
xchg
xchg
sti
cmp
add
dec
notl
jo
or
add
jecxz
shlb
fbstp
or
push
int3
mov
xchg
out
jne
mov
xor
gs
lock
popf
fcmovu
fdivrl
fwait
xor
in
lret
lods
xor
ljmp
pop
adc
pop
mov
mov
adc
jmp
inc
popf
adc
lcall
mov
incl
add
cs
lea
mov
or
aad
lock
jb
cmp
and
sub
push
out
popf
mov
mov
scas
mov
or
lret
mov
lret
fcoms
adc
xor
arpl
insb
dec
fcompl
call
stos
jae
das
pop
push
repz
jbe
test
mov
addr16
sar
mov
xchg
adc
or
adc
and
ret
xchg
sbb
sbbl
imul
loopne
out
mov
mov
mov
les
inc
rcrb
ficompl
fldl
enter
dec
adc
push
adc
frstor
jno
cmc
jbe
cmc
ja
sti
cmp
sti
jge
mov
add
sti
jno
add
subl
adc
jo
jle
sbb
mov
jb
jle
mov
push
negb
adc
ss
cmp
imul
inc
inc
test
xor
mov
pop
cmpl
mov
aad
jmp
sahf
pop
in
jb
aam
aam
xor
aaa
adc
jbe
lcall
jg
cmp
mov
sahf
mov
int
cld
mov
ret
xchg
cltd
lcall
add
loop
sbb
and
frstor
es
cmp
cmp
fsubrl
in
and
mov
movsl
loope
clc
sbbb
loopne
sub
dec
adc
push
cmp
les
mov
fcmovu
xor
adc
into
push
pop
aad
scas
push
push
shl
lds
jo
icebp
bnd
iret
out
in
popa
std
cmp
jmp
sub
outsb
pop
jmp
cli
fyl2xp1
jae
cs
cmpb
jge
jns
ja
shll
inc
pop
and
sub
lock
sub
das
xchg
rcrb
xlat
jns
sub
cmp
inc
sub
mov
call
adc
dec
sbb
push
mov
mov
mov
dec
into
xchg
rorb
push
insb
insl
jno
pop
ficoms
jp
jl
test
mov
arpl
and
mov
pop
hlt
pop
mov
xchg
int3
mov
rcrb
iret
shlb
xlat
adc
or
daa
fwait
and
and
sub
jmp
imul
cmpsb
sub
mov
int3
int
jae
cmp
inc
add
sub
mov
cmp
in
iret
notb
imul
pop
loop
leave
push
cmp
loop
or
add
jbe
stc
mov
or
in
mov
xchg
dec
dec
nop
add
inc
sbb
inc
pushf
push
push
xchg
sbb
and
sub
cli
inc
mov
xchg
mov
xor
jmp
xor
mov
cltd
mov
js
sahf
orb
jne
test
scas
pop
pop
inc
push
pop
sbb
pop
ffree
aam
rorb
and
dec
imul
push
pop
xchg
pop
fists
xor
jl
outsb
jl
pop
repz
shlb
repnz
xchg
mov
adc
je
ds
or
xchg
xchg
jns
sbb
jmp
mov
adc
into
jnp
stos
lods
data16
in
mov
mov
mov
mov
inc
add
inc
mov
lahf
fwait
stos
dec
mov
mov
out
in
dec
ret
iret
push
aad
rcrb
fsubp
cmpsl
aas
pop
pop
loopne
pop
pop
movsl
movsb
push
outsb
int3
push
shrl
data16
or
aaa
sti
inc
cmpb
dec
loope
push
pop
and
push
jae
jne
nop
notb
cltd
mov
mov
mov
cmp
and
and
outsb
inc
cmp
sub
and
shll
adc
push
fbstp
add
inc
cmp
imul
aaa
pop
es
xlat
xlat
pop
push
pop
inc
mov
addb
sub
loop
xor
jbe
cmp
cmp
jle
inc
jle
inc
lea
xchg
dec
mov
sqrtps
xchg
popf
mov
fwait
mov
test
imul
je
xchg
lods
enter
int3
int
lock
lret
aam
dec
jmp
rcr
ret
push
pop
xchg
push
rcl
nop
mov
xlat
mov
out
lock
int
jecxz
lret
insb
in
cli
sti
std
std
int
in
add
jmp
imul
icebp
cli
push
pmuludq
mov
pop
mov
pop
adc
xchg
push
sbb
rcll
and
xchg
fldenv
sub
lahf
loope
ss
ds
inc
mov
stos
in
sub
dec
dec
push
cld
test
push
leave
pop
fcoms
pop
pop
pop
sarl
adc
push
mov
push
pop
pop
outsl
pop
jno
inc
pop
bound
js
jmp
jg
xor
xchg
aaa
pop
jne
aaa
lea
xchg
xchg
jp
cli
or
sahf
lahf
inc
notb
outsl
aad
inc
andb
popa
mov
mov
mov
fisubl
sub
movsl
mov
mov
enter
out
mov
sbb
jns
clc
fnstcw
fimuls
push
jecxz
test
aas
inc
ds
mov
mov
sbb
sub
fidivl
idiv
dec
out
and
insl
divb
dec
jmp
jg
mov
add
adc
mov
jge
sbb
or
sbb
and
push
repz
in
xor
fadds
pop
cmp
cmpsl
in
aas
inc
fistpll
or
sub
mov
sub
ja
ret
insl
mov
das
lret
addb
dec
push
addr16
sub
xchg
jb
dec
fidivl
jmp
loopne
cmp
pushf
in
movsl
inc
mov
stc
jno
popa
in
dec
js
or
add
xchg
xchg
xchg
cwtl
rclb
outsl
adc
xchg
fwait
je
stos
sbb
mov
or
sbb
sahf
daa
jbe,pn
cmp
sbb
cmp
mov
loope
mov
cmp
xchg
adc
pop
fmuls
sbb
leave
dec
gs
in
push
xor
stos
pusha
fsubrs
es
dec
shll
incl
mov
pop
aam
ds
push
aad
sbb
pop
dec
cmc
jle
adc
pop
add
in
and
sub
addl
imul
cmp
pop
pop
cmp
cwtl
inc
mov
xchg
dec
dec
shlb
and
push
mov
pop
pop
pop
xchg
fnstenv
jg
mov
fstpt
rol
loope
jno
dec
popa
cwtl
jae
xor
xchg
in
pop
dec
loope
push
clc
sahf
loopne
loop
jecxz
out
add
movsl
imul
cmc
ljmp
cld
std
push
lret
xchg
push
push
loope
or
fisttps
or
int3
nop
test
xor
jp
leave
lret
inc
stos
fwait
mov
inc
roll
inc
fldcw
pop
pop
mov
push
addr16
xor
push
mov
and
mov
ret
out
add
cmpsl
lods
scas
pop
sub
push
pop
das
sbb
pusha
jnp
jne
clc
push
test
aas
add
pop
add
and
and
mov
dec
and
sub
pop
xor
and
mov
ret
mov
cmpsl
mov
cmpsl
cmp
dec
sbb
xchg
xlat
pushf
shl
dec
mov
insb
rorl
push
fidivrl
in
in
jns
sbb
out
test
out
movsb
hlt
push
jge
mov
mov
xchg
jecxz
jns
adc
adc
int
push
push
sahf
lahf
mov
cmpsb
cmpsb
cmpsl
test
mov
std
mov
jp
and
mov
jae
mov
and
xor
test
cmp
ds
add
in
push
lahf
leave
dec
fstp
inc
add
cmp
push
shrl
xor
gs
imul
jno
sbb
xchg
pop
je
leave
je
pop
or
jo
andl
adc
jo
add
in
dec
and
or
xchg
or
jno
clc
insl
sub
pop
xor
jo
loop
jb
push
imul
test
insb
inc
out
mov
test
lds
jle
imul
roll
rorb
insb
push
mov
pop
lcall
fdivrl
in
pusha
mov
in
sub
daa
fildl
xorl
add
inc
stc
aas
out
arpl
jp
mov
nop
movsl
cmpsb
add
notl
mov
sbb
jae
loopne
sahf
adc
fsubrs
xor
cmpsb
sbb
sub
cmc
enter
xor
mov
shlb
ficoms
cltd
test
pop
aad
out
ds
mov
mov
sub
ror
notl
outsl
dec
inc
icebp
and
add
xchg
hlt
sub
jbe
dec
or
jo
push
movups
push
pop
push
mov
sbb
clc
test
test
cli
dec
and
push
sub
xor
js
iret
pop
xor
mov
ds
movsb
jnp
icebp
insb
inc
sub
cmp
xchg
dec
jmp
sub
adc
push
sbbl
movsb
and
test
gs
push
insl
shrl
in
jne
fnstenv
jbe
lret
lods
push
mov
test
mov
dec
add
mov
xchg
or
les
int3
mov
jno
fsubrl
rorb
fdivl
mov
fwait
xor
ret
sub
jp
movsb
rolb
roll
dec
mov
mov
faddl
mov
lret
in
dec
push
outsb
mov
lock
pop
jo
fdivp
insb
jmp
mov
and
add
daa
or
aad
aas
leave
outsl
lret
orl
mov
sbb
and
xchg
push
lret
xchg
fwait
sub
sbb
xchg
sub
outsb
cmp
movsl
jl
or
inc
sub
mov
sbb
imul
jl
into
inc
lods
push
aad
pop
pop
lret
popa
mov
dec
push
push
xorl
jl
mov
push
cmpsb
jl
repnz
fimull
inc
xchg
push
pop
jle
fmull
xchg
cwtl
std
cmp
inc
stc
sti
out
mov
call
rorl
test
mov
cwtl
inc
sbb
int3
mov
test
xor
enter
and
int3
divl
jecxz
in
jae
test
fimull
mov
addb
or
out
adc
and
sbb
insb
lods
popa
sahf
push
push
popf
dec
lds
std
inc
xchg
push
movsl
add
das
out
arpl
push
or
xor
fiaddl
cmpb
je
xchg
lret
or
push
sub
push
sub
sub
mov
cwtl
or
sbb
dec
scas
in
xor
jae
inc
mov
push
push
push
movsb
cmp
xor
popa
movb
inc
push
ljmp
mov
out
je
addl
mov
mov
nop
xchg
stc
aaa
test
mov
fwait
pushf
fcoml
rcll
or
add
mov
sbb
sbb
mov
mov
sub
xchg
lods
cmp
jle
iret
mov
xchg
fimull
xor
cmp
mov
popa
daa
xor
jmp
inc
mov
repnz
mov
pop
pushf
jmp
out
and
out
add
ljmp
mov
adc
push
pop
sbb
decl
push
cmpsb
in
dec
and
sub
xor
xchg
aam
mov
loop
sbb
data16
ds
inc
test
inc
mov
inc
jle
sub
ficoml
cli
stc
ret
cmp
leave
dec
xchg
xchg
and
sbb
dec
mov
jb
fstps
sbb
in
jnp
aam
testl
mov
lock
add
loope
cwtl
cmpsb
pop
push
pushf
popf
sahf
add
add
adc
adc
mov
lods
es
mov
ja
mov
mov
pop
mov
mov
test
lds
lods
enter
int3
int
xor
xor
js
neg
mov
mov
cmp
les
push
sbb
fdivrs
lret
adc
pop
popa
dec
fisubs
pusha
cmpsb
outsl
and
out
jbe
in
fs
jge
rcr
fnsave
add
addb
add
call
aad
repnz
roll
inc
aam
add
pop
push
xchg
stos
lcall
mov
xor
jno
orb
lods
cmp
scas
inc
aam
lds
fildll
jmp
scas
insl
outsb
outsl
les
shlb
jne
cltd
inc
cmpsb
into
inc
je
jle
aam
mov
test
dec
mov
iret
pop
mov
roll
add
je
lahf
mov
mov
loopne
in
xchg
and
pop
xor
fdivl
sub
orb
xor
mov
mov
adc
ds
mov
inc
pop
mov
mov
cmp
out
insl
adc
repnz
repnz
pop
insb
fisubrs
push
and
aaa
cs
dec
outsl
imulb
pop
lcall
fistpll
outsb
mov
push
inc
add
inc
push
nop
dec
lods
adcb
add
pushf
pop
or
xor
sbb
daa
mov
ds
adc
inc
rorl
lret
push
inc
iret
dec
fstl
aam
loop
push
fimull
aaa
xor
dec
into
fistl
data16
jle
push
js
jg
adcb
or
push
jne
nop
iret
scas
sub
xchg
or
out
xlat
sbbl
insb
mov
lret
push
sahf
adc
mov
mov
jg
sahf
mov
imul
les
sbb
shl
cmp
mov
adc
sbb
ja
pop
loop
dec
ja
out
imul
out
std
adc
add
and
jge
and
out
addb
xchg
xchg
pop
not
mov
adc
inc
bound
rcrl
sbb
fwait
sbb
lcall
xchg
sub
addr16
ret
push
and
xor
cmp
cmp
inc
inc
inc
scas
fwait
adc
dec
inc
or
roll
sbb
mov
xor
dec
iret
mov
and
jb
shrb
jecxz
fsubr
imul
jge
je
dec
popl
push
insl
mov
pop
inc
int
sub
or
push
inc
bound
lahf
mov
or
jo
sti
jg
xchg
jns
scas
fisubl
mov
sub
loope
mov
inc
mov
repz
push
lret
and
mov
aas
mov
leave
xchg
mov
popf
push
sti
inc
pop
pop
jmp
mov
adc
pop
push
sbb
mov
fs
adc
insl
out
push
movups
aam
adc
dec
sub
outsl
repz
mov
test
add
popf
add
xor
lock
in
cld
mov
scas
ljmp
jp
mov
cmp
xor
dec
mov
jbe
push
cld
mov
addl
enter
addr16
cmp
push
fists
jmp
stc
jns
outsl
jmp
add
mov
mov
int
jg
xor
mov
pop
dec
adc
xchg
jno
stos
stos
lods
adc
iret
mov
shlb
es
mov
aam
ljmp
xor
iret
sbb
xlat
and
das
mov
sub
aaa
adc
rcl
dec
dec
in
in
mov
in
in
out
lcall
sub
int
std
push
mov
jmp
or
cld
jg
jle
cmp
cmp
cmp
in
xchg
or
xchg
pushf
push
lods
cs
inc
das
xor
idiv
push
cmp
mov
cmpsl
jle
adc
add
int3
aaa
lcall
push
lods
scas
and
sub
inc
mov
es
int3
xchg
outsb
outsl
fistl
insb
fcomi
inc
ja
sahf
data16
jo
sbb
fnstsw
or
push
jae
ja
mov
std
mov
ret
xchg
insl
xchg
jb
and
stos
stos
lods
jl
mov
test
ss
mov
popa
out
ret
das
call
int3
int
icebp
lods
add
or
cltd
push
mov
rclb
or
cld
push
adc
or
push
add
icebp
jne
xor
cmp
jno
cs
and
lock
pop
ja
scas
jp
mov
test
mov
aas
jecxz
sbb
pop
add
sub
sub
cli
sbb
pop
add
pop
jns
jnp
jge
mov
xor
jno
mov
ss
xchg
inc
jle
movsl
lds
mov
inc
mov
insl
outsb
adc
jno
addr16
fisubrl
jns
outsl
mov
cmp
jl
mov
rcll
les
fstpl
outsb
mov
movsl
jae
test
iret
popl
sbb
lret
sbb
scas
and
movsl
adc
pusha
jnp
ds
inc
ret
outsl
adc
and
lock
js
lods
jge
clc
mov
cmp
test
rorl
or
xchg
xchg
adc
popf
pushf
sbb
cmp
and
incl
jo
ja
scas
sub
mov
repz
jne
adcl
cltd
add
and
outsb
add
lods
insl
daa
jp
sbb
stos
and
das
cmp
aas
inc
inc
cmpb
dec
sbb
mov
ret
rclb
push
push
push
int3
inc
rcl
pop
shlb
mov
pop
movsl
pop
fnsave
call
mov
loop
pop
test
arpl
jg
sub
jl
fnstsw
push
aad
mov
mov
adc
outsb
adcl
stos
notb
ja
and
jge
ja
mov
data16
je
scas
nop
adcb
cltd
iret
mov
stos
and
push
inc
std
mov
aam
pop
mov
aas
leave
in
dec
mov
xor
imul
pop
sbb
and
and
jmp
lcall
cld
sub
jne
sbb
jae
andb
sarb
cwtl
inc
aas
std
sub
sbb
aaa
movsl
or
mov
in
and
xor
sub
loop
sub
cmp
or
jne
mov
int3
imul
pop
push
push
pop
fildl
andl
fistpl
pushf
imul
ficoml
cmc
movsb
fisubs
call
in
cmpsb
dec
mov
dec
scas
jg
mov
mov
mov
xchg
add
popa
lret
cwtl
mov
shrl
stos
stos
pop
iret
mov
cmc
test
xchg
les
lret
mov
mov
shlb
xor
lock
ret
add
cld
mov
adc
dec
mov
sbb
pop
and
jmp
xchg
clc
aam
push
xlat
in
mov
cmp
push
cli
ss
int
mov
or
mov
inc
push
test
cmp
mov
push
fmuls
test
imul
dec
cmovp
push
adc
outsl
fbld
aaa
lock
popa
cmp
ja
and
xor
xor
jle
test
enter
jg
inc
xchg
sub
fadds
xchg
dec
fimull
sub
rcr
enter
pop
loop
popf
sahf
jmp
mov
inc
arpl
ret
imul
out
push
insl
cltd
repz
js
test
push
jnp
cmp
lcall
mov
cmpsb
jbe
sbb
xchg
sbb
addr16
test
mov
mov
in
je
xchg
ljmp
push
lret
xor
mov
add
mov
rolb
jecxz
dec
loopne
shll
shll
inc
aas
fimull
push
pop
cld
jmp
jecxz
or
mov
push
cmpsb
loope
or
subb
out
sbb
inc
and
push
xchg
xchg
push
mov
pop
xor
cmp
jecxz
mov
mov
fiaddl
repz
dec
mov
cmp
inc
mov
rorl
xchg
sbb
mov
dec
imul
jo
jae
lret
out
fdivrl
in
nop
loope
fs
sbb
cmp
hlt
stos
outsl
cmovne
mov
lds
repz
cmp
mov
mov
push
call
dec
fs
mov
lods
adc
rcrb
mov
sti
bnd
jg
rolb
leave
inc
mov
add
iret
mov
push
mov
ret
fcomps
fcmovu
push
repz
mov
mov
cmpsl
jmp
rcll
fwait
shlb
stc
leave
jmp
sub
jmp
add
insl
scas
or
pusha
jnp
jne
sbb
dec
cmp
jo
js
xchg
push
loope
int3
outsb
xchg
push
adc
xchg
push
negb
adc
sub
les
dec
repz
dec
out
lret
push
dec
int
dec
lcall
shrb
pop
pop
stos
loop
out
int
imul
xor
clc
je
jne
clc
jbe
mov
dec
mov
mov
mov
jmp
or
roll
mov
out
in
sbb
adc
ficompl
cmpsl
and
movsl
daa
jmp
adc
mov
out
xchg
cmp
test
idivl
inc
cmpsb
ret
pop
lret
loopne
or
mov
fistl
pop
sbb
push
sbb
pop
pop
mov
sbb
and
mov
lock
jb
std
insl
enter
push
sbb
adc
mov
jp
mov
mov
adc
push
xchg
or
push
in
lahf
rcll
push
ss
and
xlat
mov
inc
inc
lea
dec
inc
jo
int
addr16
into
dec
pop
pop
fidivrl
pop
pusha
pop
pop
stos
enter
mov
out
insb
lock
lock
pop
jne
je
rcr
popa
jp
mov
mov
ds
xchg
outsl
subb
mov
mov
les
mov
imul
and
jle
repnz
subl
mov
cmc
mov
repz
sub
movsl
enter
iret
inc
jmp
adc
push
pushf
fcmovu
dec
leave
fiadds
lds
mov
xlat
xor
or
adc
mov
arpl
fiadds
cld
jge
sbb
sub
dec
imul
xor
jo
out
jns
in
jbe
stc
mov
in
bound
add
mov
cmpsb
test
sub
das
cltd
mov
mov
sbb
pushf
lcall
jmp
adc
ljmp
xor
adc
dec
jnp
mov
shrb
xchg
mov
test
shl
popa
les
pop
xchg
insl
aad
shrb
in
pusha
ret
jecxz
mov
push
rcr
repnz
jo
imul
jecxz
push
push
popf
add
add
add
sbb
popf
push
adc
sub
sub
jl
mov
cwtl
jns
mov
mov
repz
and
out
mov
nop
pop
insb
into
iret
jbe
jnp
jge
jg
addl
pop
roll
loop
and
adc
jmp
inc
repz
neg
sub
inc
adc
sti
je,pt
dec
push
insl
scas
sub
push
jnp
pop
dec
push
adc
pop
xchg
add
inc
inc
imul
add
popf
mov
mov
dec
outsb
clc
subl
inc
inc
insb
insl
mov
jge
xchg
mov
dec
dec
push
jl
jle
mov
movsb
lcall
sbb
jbe
enter
loope
push
aad
out
into
cmp
mov
addb
jne
mov
nop
out
repnz
push
idivb
push
fs
test
xchg
gs
dec
or
leave
sti
out
hlt
mov
test
cmc
pop
mov
jg
and
xchg
adc
int3
into
inc
jecxz
rolb
fwait
insb
mov
xor
sub
leave
mov
adc
push
adc
cmp
pop
ds
sbb
and
cli
xor
sub
leave
repz
lret
xor
xor
cmpl
sbb
bound
fsubs
push
popa
inc
inc
call
mov
jnp
lret
pop
aaa
cmpb
cmp
inc
push
int3
xor
test
xchg
ja
sbb
inc
jp
mov
push
inc
jne
mov
bound
sahf
ret
jnp
xchg
cwtl
sbb
pop
cltd
mov
mov
mov
out
outsl
jecxz
and
test
mov
lret
cmp
lods
xchg
push
scas
xchg
or
jnp
adc
xchg
int3
cmpsl
jno
stos
stos
lods
adc
xchg
and
icebp
pop
sub
pop
adc
and
fwait
and
test
pushf
repnz
add
jb
test
clc
fmull
movsb
lds
or
into
dec
loopne
pop
rclb
push
inc
inc
dec
dec
imulb
stc
insb
call
add
xlat
lock
add
inc
scas
jge
inc
lret
aad
movups
aad
jle
adc
and
lea
mov
sub
outsl
xlat
mov
in
cmp
jo
movsb
cltd
adc
inc
outsl
jle
sbb
adc
stos
mov
int3
jmp
mov
aad
fdivrs
push
pop
ret
mov
dec
bound
fsubl
jp
jl
aad
cmc
pop
test
pop
mov
jae
jb
mov
add
or
mov
popf
pop
sbb
or
or
lods
scas
adc
sbb
pop
sbb
mov
xchg
icebp
jnp
fs
jns
enter
int3
xor
enter
adcb
dec
call
xor
aad
ficoms
or
out
out
inc
inc
out
popa
vpcmpgtb
hlt
addr16
push
cli
or
bound
lock
int
push
test
xor
sbb
xor
jle
and
pop
test
addb
xor
test
cmp
pop
aas
push
adc
inc
stos
push
test
sarl
sbb
push
push
scas
mov
int
pop
shll
es
fs
lods
sub
push
es
push
movsb
mov
jl
mov
sti
addb
inc
stos
outsl
divl
pop
mov
fdivr
je
popa
mov
ret
cltd
pop
rcrb
mov
int3
nop
fprem
lods
je
scas
scas
mov
push
lret
sbb
fwait
out
jns
mov
jnp
scas
mov
test
mov
sbb
adc
imul
cltd
mov
fmuls
adc
stc
mov
loopne
sbb
test
adcb
dec
icebp
add
loop
repz
mov
fbld
push
iret
daa
std
int
add
out
sub
clc
mov
sub
cmp
notl
adc
xor
inc
sbb
xchg
cmp
xchg
xor
xchg
adc
lcall
pop
push
push
das
stc
ret
xor
cs
mov
cmpsl
mov
stos
mov
jge
bound
dec
mov
insb
mov
imul
mull
xorl
sub
lea
jno
push
ficoml
sarl
push
icebp
imul
cwtl
pop
jne
xchg
popa
repz
jnp
push
pop
xchg
xchg
xchg
add
xchg
or
pop
xchg
sbbl
sbb
roll
daa
stc
mov
and
mov
addb
xor
nop
sbb
iret
xor
mov
xlat
or
add
mov
push
push
mov
clc
cmp
lods
and
ljmp
sub
jo
dec
push
dec
sti
outsb
into
jno
add
add
das
or
add
adc
adc
cmpl
incl
sbb
xchg
daa
mov
xchg
int
push
fcoml
push
jne
cmpsb
jge
add
test
inc
stos
jno
dec
jle
je
test
test
lds
push
mov
dec
cmpsl
pop
pusha
mov
test
mov
in
mov
bswap
inc
pushf
jb
cltd
xchg
in
push
sub
add
mov
or
in
add
xchg
pop
jnp
or
rcrl
movsl
cmpsl
test
mov
scas
and
mov
leave
jle
xchg
mov
lea
sub
cmp
int
jl
push
pop
rcl
sub
into
push
dec
mov
ret
mov
jbe
jecxz
cmp
xchg
push
sub
mov
lahf
out
lock
nop
sub
clc
jle
inc
and
mov
add
cli
js
.byte
sub
pop
add
add
add
jb
gs
xor
cs
insb
add
lock
add
pop
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
pop
push
push
popa
jb
sub
imul
push
je
popa
insb
je
sub
arpl
je
arpl
jne
jo
jb
inc
ja
bound
insb
insl
popa
jae
gs
arpl
and
ja,pn
bound
insb
insl
popa
jae
gs
arpl
add
add
add
in
mull
inc
add
add
add
jmp
jmp
add
jmp
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
clc
sub
stc
nop
sub
sub
sub
add
dec
sub
sub
sub
stc
sub
clc
add
add
dec
xor
xor
stc
sub
clc
sub
stc
nop
sub
sub
sub
add
dec
sub
stos
loop
pop
xor
adc
insl
mov
outsb
shl
dec
xchg
inc
test
add
xchg
jmp
fcmovu
aam
pushf
sarl
icebp
in
push
mov
dec
mov
sub
mov
jecxz
es
fidivrs
mov
divl
test
lcall
pop
ret
xlat
rcr
cwtl
add
pushf
xlat
xchg
ficompl
adc
aam
popa
mov
call
popf
lahf
ret
jne
je
sbb
rcr
insl
in
sub
xchg
dec
dec
inc
sub
imul
push
mov
jns
sub
jmp
shll
sbb
pop
outsl
jp
mov
mov
cs
add
add
mov
xchg
sbbl
push
xchg
lea
and
xor
loop
popa
stc
popa
pop
jnp
xor
arpl
pop
xor
aam
out
leave
enter
sbb
jb
pop
push
std
mov
fildl
pop
jmp
sarl
iret
mov
test
stos
push
sub
loope
dec
daa
jns
fistps
mov
cmp
lock
ss
out
mov
sub
jne
ret
subb
ja
fstps
xchg
lcall
je
rorb
test
jb
fs
in
mov
pop
call
jp
cmp
xchg
pop
lcall
aam
cmpsb
cmp
ds
pop
mov
adc
cmp
xchg
pop
pop
outsb
sub
sub
inc
lods
es
lods
jbe
sbb
or
sub
sbb
data16
cmc
jae
das
push
or
mov
or
cmpl
in
sbb
cmp
push
adc
adc
sub
in
cmp
loopne
addr16
das
pop
fsubp
clc
sti
cli
in
jle
icebp
lock
div
in
out
jnp
adc
or
pop
dec
mov
jnp
std
mov
fcmovnu
aad
ficompl
push
sarb
int
iret
dec
add
cmpsl
and
lock
mov
and
add
xor
enter
fadd
xchg
xor
cltd
add
xchg
lret
lret
inc
mov
adc
mov
ljmp
shl
stc
pusha
jge
jo
xor
inc
subb
daa
jle
rep
ds
cmp
std
lods
pop
in
std
imul
dec
adc
daa
frstor
and
and
movsl
pushf
cmp
je
data16
lahf
or
lods
dec
mov
or
inc
xchg
xchg
xchg
arpl
sbb
addr16
addr16
cmc
cmpsl
push
jmp
jp
jne
in
mov
pop
cmp
cmp
pop
dec
clc
mov
jb
cmp
out
shlb
mov
std
or
and
push
ret
fcmovbe
aam
adc
and
sarb
and
sbb
movsb
lods
xor
fsubr
add
pushl
sahf
xchg
cmp
stos
mov
mov
add
mov
pop
sbb
sub
add
jge
arpl
mov
xor
scas
and
sbb
jp
scas
movsb
mov
outsl
jge
dec
cwtl
xor
lcall
add
or
push
call
sbb
xor
adc
xchg
mov
adcb
inc
daa
es
iret
mov
into
sbb
pop
inc
jne
hlt
fnstsw
mov
test
pop
dec
or
ret
inc
std
add
test
lcall
hlt
push
dec
jmp
in
out
loopne
addr16
das
pop
fsubp
mov
adc
neg
jg
out
leave
jne
lret
adc
mov
dec
add
xchg
stc
jmp
shl
fwait
mov
iret
cmp
hlt
in
lods
movsl
loope
pusha
mov
mov
pop
mov
add
mov
mov
xchg
jge
aas
adc
pop
cld
cltd
fistl
mov
test
insb
mov
popa
dec
gs
pop
pop
ljmp
xor
clc
inc
sbb
xor
test
mov
icebp
adcl
fmuls
push
push
andl
dec
sub
and
jbe
bound
pusha
cmp
xor
pop
clc
xchg
mov
adc
add
js
pop
mov
dec
cmp
out
sbb
sbb
fs
cwtl
or
mov
xor
out
leave
loop
fcoml
dec
sub
sub
imul
mov
mull
xchg
lret
lret
sbb
or
dec
les
jbe
adc
add
mov
iret
test
mov
adc
dec
mov
push
jmp
enter
jo
push
ljmp
aad
test
movl
cwtl
fwait
push
mov
jecxz
xchg
or
loop
xchg
jae
insl
loope
bound
fucomip
pop
inc
xchg
int
loope
cwtl
mov
hlt
jl
xor
push
outsb
cs
dec
out
mov
test
mov
fcomps
pop
aad
push
inc
xlat
popa
dec
dec
sub
adc
cmpsl
sub
push
stos
hlt
sbb
pop
pushf
xor
scas
cmp
inc
jb
xor
or
or
inc
add
cmpb
outsl
jae
shl
sub
mov
jmp
dec
jmp
in
out
enter
fbld
xor
add
repnz
shrb
push
shrl
pushf
mov
addr16
dec
loop
xchg
xchg
jns
mov
ret
ret
loopne
cmp
xor
push
cmp
ds
filds
jle
or
adc
cli
hlt
out
das
cltd
out
leave
pop
pop
mov
test
push
ret
jnp
leave
jmp
lahf
in
lods
inc
out
ret
sahf
mov
or
shlb
jge
jno
icebp
sbb
loop
popf
xlat
jns
adcb
cmp
sbb
fildll
sub
leave
adc
mull
inc
adc
push
cmp
xor
cmp
hlt
icebp
add
cld
sbb
enter
loop
jmp
loopne
fmul
clc
cli
hlt
sbb
mov
pop
jmp
mov
cmpsb
or
sbb
mov
push
cwtl
jns
mov
push
push
sbb
nop
pop
mov
repz
enter
les
test
add
inc
nop
ja
aad
imul
dec
addr16
test
movsb
cmpsl
cmpsb
push
pushf
mov
mov
pop
ja
cmp
aaa
inc
test
ret
call
cwtl
fwait
add
xchg
xchg
xchg
pop
adc
lea
and
data16
bound
pop
mov
jne
ja
jno
jae
insl
insb
outsl
outsb
dec
dec
dec
adc
dec
inc
inc
jno
inc
dec
filds
adc
ds
decb
push
add
push
push
push
dec
dec
dec
dec
sub
sub
and
and
and
cmp
cmp
xor
xor
or
or
add
add
cld
sbb
sbb
adc
adc
adc
call
out
loope
jecxz
fstp
stc
clc
sti
cli
cmc
hlt
div
icebp
lock
in
out
out
leave
enter
mov
mov
fcomp
fcmovbe
aam
rcl
rcl
int
iret
into
test
movsb
cmpsl
cmpsb
mov
pushf
lahf
sahf
mov
mov
mov
mov
mov
lods
scas
scas
mov
xchg
jge
jg
cltd
cwtl
fwait
lcall
xchg
xchg
lea
push
fs
pusha
arpl
pop
pop
pop
jns
jnp
jne
ja
jno
jae
insl
insb
outsl
outsb
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
cmp
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
dec
dec
sub
sub
and
and
and
cmp
cmp
xor
xor
or
or
add
add
cld
sbb
sbb
adc
adc
adc
call
out
loope
jecxz
fstp
stc
clc
sti
cli
cmc
hlt
div
icebp
lock
in
out
out
leave
enter
mov
mov
fcomp
fcmovbe
aam
rcl
rcl
int
iret
into
test
movsb
cmpsl
cmpsb
mov
pushf
lahf
sahf
mov
mov
mov
mov
mov
lods
scas
scas
mov
xchg
jge
jg
cltd
cwtl
fwait
lcall
xchg
xchg
lea
push
fs
pusha
arpl
pop
pop
pop
jns
jnp
jne
ja
jno
jae
insl
insb
outsl
outsb
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
cmp
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
dec
dec
sub
sub
and
and
and
cmp
cmp
xor
xor
or
or
add
add
cld
sbb
sbb
adc
adc
adc
call
out
loope
jecxz
fstp
stc
clc
sti
cli
cmc
hlt
div
icebp
lock
in
out
out
leave
enter
mov
mov
fcomp
fcmovbe
aam
rcl
rcl
int
iret
into
test
movsb
cmpsl
cmpsb
mov
pushf
lahf
sahf
mov
mov
mov
mov
mov
lods
scas
scas
mov
xchg
jge
jg
cltd
cwtl
fwait
lcall
xchg
xchg
lea
push
fs
pusha
arpl
pop
pop
pop
jns
jnp
jne
ja
jno
jae
insl
insb
outsl
outsb
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
cmp
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
dec
dec
sub
sub
and
and
and
cmp
cmp
xor
xor
or
or
add
add
cld
sbb
sbb
adc
adc
adc
call
out
loope
jecxz
fstp
stc
clc
sti
cli
cmc
hlt
div
icebp
lock
in
out
out
leave
enter
mov
mov
fcomp
fcmovbe
aam
rcl
rcl
int
iret
into
test
movsb
cmpsl
cmpsb
mov
pushf
lahf
sahf
mov
mov
mov
mov
mov
lods
scas
scas
mov
xchg
jge
jg
cltd
cwtl
fwait
lcall
xchg
xchg
lea
push
fs
pusha
arpl
pop
pop
pop
jns
jnp
jne
ja
jno
jae
insl
insb
outsl
outsb
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
cmp
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
dec
dec
sub
sub
and
and
and
cmp
cmp
xor
xor
or
or
add
add
cld
incl
mov
popa
sub
adc
insl
pop
push
je
js
dec
sub
inc
dec
inc
pop
stc
clc
sti
cli
cmc
dec
cmp
inc
inc
push
ds
dec
aas
lret
mov
dec
and
and
and
push
push
xor
cmp
rcl
int
iret
or
cs
sub
or
mov
loope
or
sbb
cmc
add
add
mov
lods
lods
scas
icebp
adc
out
adc
cmpb
jecxz
fdivrl
xchg
xchg
nop
xchg
aad
loopne
div
in
mov
popaw
pusha
arpl
mov
fnstenv
jno
jae
shlb
iret
cmp
in
movsb
jno
