jmp
int
mov
push
pushl
add
rorb
ljmp
popa
arpl
mov
movsl
movsw
xor
mov
test
stos
pop
add
ljmp
mov
sbb
incl
ret
lea
add
jne
call
call
out
rcr
iret
add
pop
xlat
lea
mov
add
or
jmp
call
push
mov
mov
push
push
mov
adc
add
sarb
incl
in
add
jne
nop
push
jmp
je
je
pop
pusha
insl
add
pop
pop
dec
pop
jne
leave
ret
pop
popa
add
pop
jb
in
add
push
push
cli
or
shlb
call
lret
sbb
inc
mov
pusha
dec
xchg
outsb
inc
mov
enter
cmpsl
mov
loopne
dec
sar
incl
scas
jo
cld
iret
push
or
insb
inc
shlb
je
inc
jns
pushl
mov
sub
dec
pop
or
loopne
and
push
pop
stos
push
in
fs
shl
sub
adc
dec
lea
cmp
mov
daa
into
inc
push
loopne
or
xor
add
mov
push
cltd
pop
idiv
cmp
jne
cmpl
call
incl
push
pop
jne
push
push
insl
cmp
sahf
mov
or
pusha
loopne
xlat
jmp
push
mov
fistpl
hlt
repz
fwait
jmp
push
sarb
push
decl
cmpsl
jne
cwtl
or
cmp
pop
pop
cmp
outsb
add
rcrl
add
js
aaa
std
jmp
add
jecxz
and
mov
jmp
lods
or
jl
into
into
cmp
sti
fisttps
or
pop
cmp
mov
sub
inc
cli
rorb
incl
mov
push
cmp
adc
dec
test
mov
movb
mov
pop
clc
loope
dec
cmp
cmp
addl
inc
xchg
and
jne
pop
loope
or
sti
mov
arpl
pop
insb
dec
mov
push
xchg
cld
push
orl
add
sub
add
ret
lcall
mov
pop
and
je
push
test
sub
lcall
adc
push
pop
push
imul
cwtl
test
mov
and
mov
repz
jmp
add
mov
bound
out
xchg
push
mov
push
mov
jmp
add
xorb
push
push
cmpsb
ret
xor
incl
mov
mov
jne
clc
es
lods
push
adc
sbb
imul
jmp
dec
fwait
cs
jbe
mov
dec
pop
int3
push
and
adc
orl
add
or
mov
jp
cmp
pop
jnp
nop
clc
add
dec
xor
out
aam
mov
fiaddl
mov
test
push
sub
mov
movl
scas
data16
lcall
jae
xchg
xchg
sets
jp
sbb
mov
jmp
js
jge
adc
subb
iret
add
jne
push
jmp
push
lret
pusha
inc
jmp
mov
pop
xor
incl
in
mov
mov
data16
mov
scas
fstsw
dec
popf
aad
jne
cwtl
mov
fcmovbe
mov
jns
int3
std
push
imulb
pop
mov
push
sub
push
mov
std
add
fsubrp
push
insl
xor
xor
imul
add
js
cmp
cmp
jne
mov
cmpsb
loopne
fstps
adc
loope
or
lret
xchg
push
adc
call
lea
pop
pusha
adc
xor
push
insb
mov
aas
in
decl
jmp
add
push
mov
sub
cmpsb
cmp
in
cmpsb
jg
lcall
popf
mov
lret
mov
in
lods
push
xor
iret
ret
or
decl
sti
and
cmovbe
pusha
vpsllq
or
ret
ljmp
sub
enter
and
jb
fisubrs
in
ljmp
lcall
sub
sub
mov
mov
loope
push
icebp
sub
push
mov
push
or
out
hlt
in
cld
in
call
jo
jb
add
sub
ret
ljmp
insb
js
jmp
flds
jns
mov
out
cmp
int
mov
int
push
sahf
mov
loopne
idiv
in
sbb
ja
jne
mov
xchg
push
in
stos
jecxz
aas
cwtl
in
mov
bound
pushf
sbb
ds
push
dec
test
ror
push
add
hlt
mov
stos
mov
cmp
pop
repnz
scas
scas
fadds
and
push
xor
xor
xor
inc
rorl
and
xor
js
pusha
cli
aaa
inc
scas
xchg
mov
push
push
sbb
dec
into
push
mov
or
popa
cmpsb
iret
mov
decl
jb
mov
mov
sub
in
nop
or
jecxz
fiaddl
scas
add
clc
add
movl
or
adc
mov
pushl
arpl
dec
push
mov
inc
push
push
sbb
xor
inc
les
jo
push
mov
cmp
add
dec
sbb
mov
lea
mov
dec
jg
mov
mov
loopne
aad
mov
popa
sub
push
int
jg
js
pop
lds
out
aam
shl
mov
inc
inc
ret
test
fistpll
jns
jns
pusha
xchg
ret
pusha
arpl
xor
cli
ljmp
adc
test
ljmp
test
lods
or
cmp
add
sbb
mov
addb
orl
xchg
jmp
cmp
mov
cmpsb
pop
xlat
xchg
xchg
push
out
and
cld
mov
rorb
pop
loop
jne
fs
mov
les
add
mov
add
cmp
mov
push
mov
add
sub
mov
insl
fistpl
fcomps
jmp
movsb
xor
lock
in
outsb
daa
jl
cmp
clc
ljmp
xchg
aaa
test
mov
loopne
test
into
popf
nop
pop
rorl
mov
pushl
lea
push
add
lods
xor
xchg
enter
adcl
mov
mov
out
push
mov
fwait
or
and
xchg
js
pop
fs
push
mov
sub
sbb
mov
jo
mov
lods
pusha
test
pop
mov
xchg
xchg
push
add
incl
mov
scas
leave
or
cld
shll
inc
and
das
mov
decl
xchg
fmull
adc
jl
adcb
lret
popf
jne
aam
nop
movsb
fndisi(8087
cltd
ret
cmp
push
dec
loopne
cmc
or
mov
push
push
lcall
lock
push
or
xchg
or
incl
cwtl
cltd
push
pop
dec
popf
outsl
into
sub
and
mov
jae
lahf
je
ds
xchg
push
aad
mov
lds
cmp
xchg
jb
mov
pop
inc
int
idiv
shll
addr16
push
ficomps
lcall
incl
cmp
test
sub
je
dec
je
icebp
outsl
inc
adc
pop
mov
mov
or
les
fmull
imul
das
icebp
adc
xor
mov
xchg
cmp
rclb
jg
rorl
idivl
out
test
cmp
xorl
movl
ljmp
arpl
fadds
fcmovbe
faddl
lahf
xor
ret
inc
and
xchg
pop
add
pop
mov
or
dec
fwait
mov
xchg
imul
adc
cmpsl
pop
je
xor
rcrb
dec
stos
push
jns
inc
jbe
jmp
repnz
call
pop
ret
mov
mov
adc
cmp
outsl
lock
xchg
test
and
arpl
in
or
push
pop
scas
lcall
lret
adc
xor
mov
cltd
pop
push
sbbl
stos
or
xor
cwtl
std
call
mov
sub
ret
xchg
pop
daa
or
cmp
lcall
xchg
setge
in
or
add
push
xlat
pop
aam
call
ljmp
push
outsb
or
push
pop
pusha
pop
mov
jno
mov
add
adc
incl
sub
add
movl
xchg
inc
insl
or
mov
push
add
push
xchg
jb
pop
jmp
push
jno
jp
lea
test
xor
xchg
lock
movl
inc
push
mov
xchg
sysenter
pushf
jns
cmpsb
jmp
mov
clc
add
ljmp
mov
ss
jo
dec
scas
enter
fistps
xor
pop
sub
ds
or
cld
mov
leave
push
cli
pop
loopne
pusha
mov
pop
insb
or
mov
sbb
pop
call
add
sbb
jne
adc
inc
call
aam
mov
rcrb
imul
rcll
push
dec
imul
mov
decl
pop
adc
or
mov
mov
sub
push
data16
inc
sbb
cmp
push
lcall
sbb
dec
les
inc
dec
fsubr
fdivrl
mov
adc
cld
or
idiv
int3
enter
lock
in
xor
mov
std
xlat
fldenv
popa
add
pop
outsb
adc
push
pop
js
add
push
bound
cmp
push
jmp
lcall
sub
fcoml
into
mov
push
clc
mov
pop
or
jnp
ljmp
lock
inc
inc
xlat
pop
pushf
test
mov
ljmp
pop
mov
idivb
mov
push
pusha
cmp
into
lock
jge
lcall
loop
fcompl
outsl
lds
stc
cmp
and
in
outsl
add
sub
pop
dec
shlb
test
jae
xor
cmp
xor
pushf
lds
pop
mov
repz
xor
outsb
jb
out
data16
add
lret
scas
std
jo
in
push
das
mov
cld
movntq
xchg
mov
fwait
mov
in
loopne,pt
jns
mov
xor
decl
sti
pop
mov
xchg
gs
mov
mov
ds
imul
dec
xchg
aaa
clc
push
jne
rolb
shr
arpl
rorb
xor
jmp
adc
dec
add
shl
std
call
mov
push
xchg
lods
std
or
aaa
rep
lcall
pop
xor
inc
push
imul
mov
std
fcos
jmp
add
xor
popa
cmp
in
add
lahf
jge
adc
das
hlt
sbb
adc
andl
push
adc
ljmp
inc
stos
cmpsl
inc
pushf
pop
loop
dec
add
xchg
jmp
repz
adc
fcomps
lock
loop
add
dec
mov
mov
inc
clc
dec
push
aas
adc
fildl
adc
inc
xor
call
roll
lahf
push
mov
push
popf
rolb
push
cmp
xchg
push
push
decl
or
sbb
pop
test
mov
ret
pop
fimuls
pushf
pushf
pusha
xor
jmp
sub
mov
add
push
mov
push
add
jmp
adc
mov
aaa
dec
rolb
mov
push
cwtl
push
lea
decl
dec
jne
cmp
pop
push
and
fidivrl
repz
mov
cld
pop
loopne
rcr
js
mulb
sbb
or
movsb
and
shl
incl
fstpt
faddl
loope
or
xor
push
test
fstl
push
js
push
pop
inc
lock
pushl
gs
jnp
outsl
and
lods
out
clc
xchg
outsb
and
mov
add
add
lcall
jl
adc
sarb
push
mulb
mov
decl
add
cmp
js
jbe
adc
pop
or
adc
or
adc
add
jmp
mov
std
jg
ljmp
mov
outsl
xchg
xor
jle
lcall
mov
dec
in
adc
ljmp
iret
push
adc
inc
sbb
mov
outsl
mov
fisttpl
fdivr
mov
mov
cmp
jae
or
push
adc
mov
adc
cmp
add
aad
movsl
pop
ljmp
data16
cmp
cwtl
add
sub
add
push
push
add
pop
push
daa
iret
push
bound
push
xchg
scas
notl
jb
mov
incl
adc
mov
aas
les
js
sti
or
shll
sar
call
gs
jbe
movsb
pop
mov
dec
pop
div
mov
decl
xor
in
shrl
mov
cmp
jae
pop
push
enter
pushl
xchg
or
lea
or
pop
fcmovu
jmp
test
inc
sub
popa
push
push
movb
add
in
pop
mov
ret
cs
sub
in
lcall
cmpl
mov
adc
shl
nop
leave
sbb
and
mov
adc
ja
add
cld
mov
add
stc
sbb
call
push
je
cmp
push
les
adc
ficompl
inc
jg
or
push
jbe
add
adc
dec
adc
shrb
ljmp
jmp
xor
les
add
adc
xor
mov
xchg
stc
dec
add
jmp
test
mov
stc
cmpsl
inc
cmpsl
lahf
mov
mov
cli
push
or
incl
and
inc
fs
sbb
or
ret
decl
ficoms
dec
mov
outsb
nop
test
sub
cmp
push
data16
add
fwait
call
fdivl
or
stos
or
mov
aad
push
push
push
icebp
es
insl
daa
add
fnstsw
pushl
test
js
daa
loopne
jbe
push
cmp
add
sti
sub
xchg
cmp
pushf
test
scas
lea
jmp
add
sbb
sbb
je
outsl
jge
call
mov
mov
mov
adc
jne
cmpsl
cmpsl
pop
daa
rcrl
call
fsubrs
ja
inc
cld
jmp
or
ds
or
mov
xchg
fs
inc
sub
adcb
jmp
inc
sbb
fnstcw
mov
xchg
lock
push
pop
xor
std
fisttps
incl
lock
fiaddl
lret
dec
insb
cmp
jmp
lea
cmpsb
out
sbb
repz
call
pop
in
pop
psllw
lea
mov
stc
push
jne
lcall
insl
inc
lret
pop
cld
xor
push
rol
fwait
clc
push
sbb
mov
leave
or
ljmp
inc
or
pop
or
add
inc
notl
cmpsb
pop
sub
icebp
mov
push
and
and
cmp
sub
sbb
push
mov
outsl
cld
ljmp
adc
dec
repz
inc
cmpsb
jge
stc
fs
inc
sbb
push
lea
add
mov
add
push
pop
push
pop
out
repz
add
fildl
decl
in
mov
mov
push
mov
mov
add
sbb
lea
sbb
lret
rorb
add
mov
mov
sar
and
aas
adc
add
or
mov
pop
add
jo
add
lret
sbb
mov
incl
out
push
add
add
lea
xor
fisttps
inc
call
xor
inc
aad
mov
inc
cmp
jb
cmp
outsl
jg
shlb
jb
push
mov
push
shrb
pop
cmp
ljmp
push
add
jne
xchg
lds
das
push
sub
xor
enter
sarb
push
sub
xor
rcrl
inc
repz
push
xchg
or
clc
rcl
sahf
shlb
pop
or
mov
in
lea
push
and
add
cmovo
loop
inc
lock
pop
adc
jmp
push
jmp
adc
out
push
push
push
or
pushl
push
push
mov
add
mov
lcall
lcall
cmp
int3
xchg
mov
test
push
jg
lcall
push
push
cmpb
loopne
sub
lea
jmp
sti
adc
movsb
in
adc
mov
push
push
aam
adc
inc
outsl
cld
add
lods
push
cli
outsl
cmc
nop
add
les
xor
pop
mov
les
or
sbbb
sub
test
shlb
sub
stos
mov
xor
dec
aad
lods
push
notl
out
stos
mov
sub
jg
sub
and
or
call
out
je
adcl
push
cmp
sub
loopne
sub
and
clc
fisubl
jg
sub
xor
jne
push
mov
sbb
jmp
mov
mov
sbb
mov
jo
jne
push
out
sub
inc
hlt
hlt
lcall
inc
xchg
adc
sbb
mov
xchg
aas
imul
mov
mov
xchg
and
iret
adc
jecxz
mov
lock
aaa
cli
ret
jnp
call
or
sub
outsl
ljmp
inc
mov
push
fnstenv
push
lcall
fcmove
and
and
notb
cltd
sub
sub
call
cld
push
aam
xlat
je
push
mov
jb
jnp
stos
fistpll
or
in
xor
push
lock
xor
push
sub
cld
dec
xor
lret
je
adc
push
test
mov
inc
mov
ljmp
or
lock
or
psubsb
aaa
jp
add
sub
mov
sarb
xor
leave
push
loopne
scas
shlb
inc
test
loop
lcall
push
sbb
mov
adc
in
es
mov
xor
xchg
xor
ss
sub
cmp
sub
and
clc
adc
cmp
and
pusha
cmp
aas
sbb
int3
or
push
addl
lcall
call
decl
imul
cmpb
rorb
ficoml
xchg
int3
cli
aad
test
mov
push
repz
cmp
pop
cmpsb
jmp
ljmp
sub
pop
jnp
push
add
arpl
mov
mov
call
pushf
repz
mov
and
incl
pop
jl
push
dec
pop
inc
out
inc
cs
mov
lods
sti
xor
cmp
fstpl
sti
add
sbb
jmp
xorw
or
movsb
shrb
cmc
pop
inc
jge
roll
pop
and
lcall
decl
xor
das
enter
xor
leave
push
jp
divl
push
int3
xlat
addr16
mov
cmp
in
lcall
enter
std
dec
cld
incl
dec
cmp
shrb
mov
jne
hlt
cmp
movsb
jae
shll
add
sbb
sub
dec
inc
mov
jmp
add
fiaddl
rcrb
inc
mov
inc
cmp
fisubs
xor
inc
dec
aad
decl
dec
popa
xor
movsbl
inc
sbb
subb
inc
sub
dec
sbb
or
adc
inc
or
or
mov
cwtl
inc
lods
decl
je
in
std
push
aas
test
mov
add
pop
cld
push
mov
xor
jne
repnz
jl
sbb
jne
sbb
inc
push
jb
fs
push
dec
push
sub
fucomip
jmp
shl
out
pop
cmovp
mov
and
sub
push
incl
cld
mov
cmp
sbb
sarl
adc
sti
loope
clc
decl
pushf
sar
add
orl
pop
gs
test
pushl
or
mov
popl
mov
pop
out
lock
imul
or
arpl
movsl
push
inc
or
jmp
push
sbb
jge
mov
movsl
shl
xchg
adc
pop
loopne
inc
lret
or
mov
bnd
incl
movsb
lds
mov
dec
jae
stc
mov
lock
push
insl
sub
fmull
jecxz
repnz
cmpsl
insb
xor
movsl
or
std
test
sbb
cmp
incl
out
shll
outsb
and
push
aaa
in
pop
clc
sub
sahf
ss
ds
push
nop
push
adc
and
sbb
xor
xchg
pop
or
js
lods
sbb
sarl
mov
push
push
pop
in
pop
xor
mov
aas
mov
push
inc
jne
call
imul
sbb
in
sub
jg
dec
outsl
movsb
mov
jge
pop
xchg
enter
call
int
mov
js
add
mov
xchg
or
adc
xchg
mov
pop
lcall
je
mov
dec
mov
mov
daa
ret
add
xchg
or
sbb
test
roll
mov
jge
sub
push
cmpsb
sub
adc
mov
add
je
mov
incl
or
testb
idivl
lahf
add
inc
push
sahf
je
in
int
imul
mov
inc
sahf
outsb
add
jne
or
add
test
xchg
pop
inc
lock
test
sbbl
mov
mov
dec
cs
inc
or
xchg
pop
in
sub
cmpsl
movsb
dec
aaa
add
adc
ljmp
jl
in
insb
ret
rcll
outsl
pop
inc
mov
loopne
or
add
cmp
lods
inc
inc
mov
mov
mov
mov
add
push
xor
dec
mov
adc
loope
or
js
sbb
leave
xchg
loope
sbb
add
decl
xor
xor
mov
fcomps
dec
fnstcw
add
pop
push
sbb
xchg
inc
push
lret
push
imul
or
data16
test
mov
fildl
pushl
clc
lock
in
lods
shr
fdiv
js
test
jne
stos
push
rcll
cmp
jmp
xchg
test
mov
das
jbe
sbb
mov
dec
test
mov
ljmp
xchg
or
shrl
mov
mov
xlat
inc
pop
in
sub
ljmp
repnz
pop
sub
lods
aad
enter
add
mov
das
lock
mov
push
xchg
dec
xchg
adc
sarb
adc
mov
mov
mov
or
mov
cld
out
stc
pop
in
dec
mov
shll
cmp
add
lret
outsb
clc
add
pop
pushl
pop
or
fsubs
mov
lods
xor
push
popf
les
ljmp
je
push
pop
or
mov
add
add
jno
xor
test
cmp
xchg
test
outsl
sub
inc
js
jo
call
lcall
call
ljmp
sub
xchg
inc
fnstsw
ljmp
mov
ret
in
fistl
loopne
ljmp
add
mov
pop
push
pop
clc
mov
int3
fisubrs
rorb
pushl
and
add
xchg
mov
rclb
cld
cmpsb
add
popf
mov
ja
mov
push
gs
test
jg
sbb
cwtl
pusha
shlb
test
movl
pop
cmp
in
decl
fldt
js
daa
xor
cld
sbb
daa
inc
mov
inc
into
icebp
push
jp
jmp
pop
aam
les
test
push
loop
dec
push
add
mov
imul
ljmp
ja
out
fwait
add
nop
jg
push
in
lods
cltd
cmpsl
rcl
mov
and
fisubs
jmp
bound
popa
adc
cmp
test
das
sub
jge
lods
bound
ljmp
xor
je
dec
pushf
push
pop
xor
mov
jmp
inc
aam
mov
add
sub
and
fwait
incl
jne
push
push
mov
mov
xor
out
lcall
xor
jo
or
mov
pop
push
and
imul
xchg
outsl
jmp
xchg
cli
aas
add
mov
mov
and
jg
andl
xor
mov
das
je
jbe
cld
pop
test
pop
mov
mov
or
daa
dec
aas
jne
mov
pop
dec
das
xor
push
mov
loope
xor
imulb
gs
pop
sub
xchg
xchg
jg
inc
xchg
jmp
movsb
jb
mov
ds
fwait
sbb
and
decl
decl
in
sub
dec
mov
mov
adc
std
mov
andl
push
mov
imul
lcall
out
movsb
cmovl
ret
sub
nop
mov
add
mov
inc
cwtl
mov
int3
cmp
addr16
cld
fsts
js
outsl
mov
shl
movsl
shrb
cmp
push
lea
mov
inc
and
sub
cmp
sub
incl
adc
inc
push
std
lock
addl
outsl
fucomip
mov
or
pop
call
popf
outsl
mov
adcb
dec
xlat
mov
test
cmp
dec
loopne
outsl
xchg
test
loopne
in
sbbb
push
aas
xchg
clc
add
adc
cmp
setg
sub
outsl
mov
jl
push
push
pop
push
pop
cmc
and
pop
fidivrl
mov
aaa
orb
mov
dec
jo
dec
ficoms
jl
xor
std
mov
pop
imul
jb
jecxz
jge,pn
je
rcll
xor
xor
sbb
ljmp
stos
aaa
jb
int
pop
push
mov
std
mov
pushl
subl
inc
das
fdivrl
mov
jnp
ret
and
pop
mov
push
idiv
pushl
dec
imul
shrl
push
out
outsl
mov
adc
pop
inc
mov
push
ficoml
les
imul
xchg
fdivr
mov
sub
mov
daa
loope
dec
inc
sbb
dec
outsl
mov
lds
jmp
mov
jl
mov
pop
pop
sbb
pusha
push
mov
mov
or
ret
sbb
aam
pop
jg
mov
xor
in
fs
add
mov
lds
xchg
sbb
push
pop
inc
shll
repnz
sbb
int3
cwtl
ja
or
dec
ljmp
sbb
into
add
ss
ja
push
icebp
xchg
pushf
fistpl
ljmp
shlb
push
mov
cmpl
decl
scas
add
pop
mov
mov
xor
adc
adc
dec
cmp
call
mov
mov
jmp
mov
je
and
lds
clc
add
mov
push
dec
mov
int3
pop
pop
jg
decl
shlb
out
push
ret
sub
mov
daa
mov
mov
fneni(8087
dec
loopne
ja
clc
imul
jne
movsb
xor
lods
cmp
push
call
filds
cmpsl
jb
clc
jmp
jmp
lcall
xchg
decb
sahf
inc
cmp
xchg
xor
sbb
or
push
mov
daa
jo
insb
sbb
cmp
jo
jmp
inc
mov
ss
in
mov
xlat
enter
add
xor
pop
jns
push
call
adc
cmp
push
std
cwtl
mov
or
popf
daa
xchg
aaa
clc
cmp
adc
fstl
sbb
roll
jb
mov
arpl
dec
ljmp
ds
pop
les
cmp
add
jbe
dec
or
testl
dec
pushl
jmp
imul
fmul
test
sub
pop
pop
jo
ljmp
cmp
loopne
xchg
push
cmp
in
push
incl
inc
outsl
pop
cld
dec
out
sub
ljmp
pusha
outsl
mov
push
leave
sbb
fidivl
aaa
call
jmp
int3
icebp
test
cmpsb
mov
mov
mov
push
bnd
sbb
mov
xor
jle
mov
mov
loopne
adc
fidivs
sub
or
mov
fidivrs
loop
and
shl
lds
decl
adc
push
sub
dec
ret
stos
xchg
mov
mov
dec
insl
push
fidivl
or
adc
sbb
mov
fisubrs
add
repnz
and
es
int3
jne
push
or
sbb
sbb
and
ds
xlat
repnz
popf
sub
dec
sbb
sbbb
aam
mov
js
or
pop
sbb
jmp
in
sbb
sub
or
inc
cmp
xchg
and
insb
mov
mov
push
movsb
inc
sub
fdivrl
inc
pushl
xor
dec
mov
jo
xchg
lea
mov
fdivl
hlt
ljmp
push
insb
mov
out
jl
rcrl
dec
loope
notl
das
cld
das
std
jo
test
fdivrl
stc
in
pop
out
test
lea
movsb
loopne
test
sbb
push
pushl
mov
outsl
mov
pop
pop
push
fcmovbe
pop
aam
in
cmp
ljmp
dec
cmpl
xchg
stc
lds
cmp
mov
and
inc
adc
or
test
push
nop
xchg
push
hlt
push
jne
push
pop
or
rorb
and
or
inc
ljmp
xor
inc
das
addl
int3
mov
mov
cmp
rclb
decl
inc
test
cltd
push
sbb
push
loop
dec
push
cmc
mov
or
or
ret
ja
addl
push
dec
fistl
mov
or
je
lds
ret
fs
cli
decl
mov
pop
gs
push
and
rcrl
add
clc
decl
scas
dec
or
pop
adc
hlt
mov
stc
pop
push
insb
inc
cmpsl
add
mov
inc
cmp
and
jg
dec
jo
int
hlt
and
mov
sbb
lock
ja
push
dec
clc
dec
mov
mov
imul
icebp
pop
add
incl
pop
cltd
mov
mov
add
add
push
pop
sbb
jmp
adc
jo
sub
lahf
and
inc
dec
enter
inc
jne
xchg
decb
dec
sbb
fcmovbe
mov
sub
or
mov
sar
ljmp
les
xor
mov
inc
add
fsubl
lea
push
push
and
andb
push
inc
into
adc
inc
pusha
sub
mov
test
jbe
addl
fucomip
ficoml
enter
inc
mov
in
mov
add
xchg
mov
mov
mov
jmp
sub
pop
mov
push
decl
xchg
dec
and
fcmove
orb
push
cmp
pop
lcall
sbb
jmp
mov
les
inc
mov
or
ja
ret
jb
push
dec
dec
mov
loopne
hlt
cld
idiv
and
in
add
push
sub
je
stos
jg
mov
je
push
fwait
adc
sub
dec
aam
out
jg
add
or
imul
xchg
dec
jbe
lahf
pop
inc
out
scas
fnsave
pop
xchg
pop
adc
jae,pn
mov
dec
ljmp
push
mov
jg
pop
mov
test
and
add
push
adc
test
ljmp
or
pop
sub
hlt
inc
sub
sub
lock
sub
mov
cli
dec
mov
enter
test
hlt
inc
xchg
sub
mov
jl
pop
incl
dec
xchg
pop
shlb
sbb
loop
fsts
or
call
xorb
add
lock
cld
loope
sti
clc
xor
pop
inc
cld
das
xchg
clc
mov
adc
mov
test
dec
push
xor
and
add
fbld
and
shlb
fadd
fldlg2
cwtl
mov
lcall
inc
mov
or
pusha
sub
add
add
push
sub
insl
xchg
incl
lret
ficoml
cmp
pop
ds
cmp
mov
jecxz
mov
inc
inc
in
hlt
add
or
cmp
jo
lea
xor
inc
mov
inc
inc
inc
jno
outsl
hlt
sbb
jbe
adc
aad
ljmp
sbb
xor
inc
nop
lret
lret
test
add
lock
jb
dec
cld
add
loop
subl
cmp
lcall
or
out
jmp
adc
inc
nop
je
ja
push
cmp
push
ss
cld
sbb
fldpi
js
cmp
aam
pop
cld
lret
pop
adc
lcall
jae
push
repz
xchg
lock
sub
in
aam
pop
and
adc
popf
nop
fistps
xchg
clc
mov
je
addb
sub
mov
mov
hlt
call
clc
and
jnp
cmp
xchg
lret
dec
inc
push
jb
mov
sbb
adc
adc
rolb
jmp
rorl
add
and
jne
not
pop
dec
xor
xchg
inc
mov
mov
jmp
lock
xor
aas
ret
inc
inc
leave
sahf
movsb
adc
pushl
clc
mov
fwait
in
daa
jg
ret
inc
mov
add
test
testb
je
jg
fmuls
mov
std
inc
xchg
fsubr
sbb
lcall
push
pop
dec
cmpb
ljmp
scas
sbb
add
imulb
inc
push
and
mov
adc
sub
ret
inc
cwtl
mov
and
jbe
inc
xor
test
pushl
inc
ror
and
pushf
xor
ret
insl
lea
hlt
decl
sub
jg
mov
or
cmp
lcall
mov
lock
push
jl
dec
rcrb
jg
call
mov
push
dec
push
es
xchg
dec
aas
jbe
push
dec
icebp
call
call
scas
inc
jecxz
mov
decb
pop
out
and
decb
push
jmp
or
xlat
jno
mov
jmp
push
xor
jae
js
lock
add
jmp
je
ret
inc
push
je
push
inc
mov
mov
add
sarl
jmp
js
push
sbb
cli
jmp
xlat
xor
inc
sbb
fcmovu
clc
js
mov
ljmp
or
mov
and
add
pop
js
or
push
dec
jp
in
inc
xor
mov
push
outsl
jno
sub
mov
mov
mov
dec
shll
jne
outsl
cmc
lcall
push
aam
outsl
pop
call
mov
cmpb
adc
mov
sbb
fs
jl
test
cmp
jne
idiv
lods
pop
pop
sahf
xorl
in
and
pushf
inc
push
mov
hlt
hlt
mov
push
push
dec
pop
stos
or
mov
xchg
add
push
clc
lcall
mov
pop
mov
insb
dec
push
pop
lods
cmc
int3
dec
pop
cmp
cld
pushl
xchg
push
cmp
mov
xor
lock
cmp
aaa
gs
push
mov
jbe
je
pop
lret
fiadds
cmp
je
cmp
std
inc
push
cmp
xor
mov
mov
sbb
sbb
call
push
stos
or
lahf
adc
jb,pt
sub
inc
pop
and
mov
xchg
test
push
jle
inc
fisubrl
pop
cmpsl
adc
cmp
sarl
add
jg
addl
or
jge
push
in
push
test
mov
or
fadds
jmp
or
mov
fwait
aaa
popf
mov
mov
and
add
push
push
test
cmp
push
push
sub
jo
sub
pop
cld
test
cmpsb
sarb
decl
pop
push
jg
sbb
fs
and
mov
fwait
push
inc
retw
xchg
cmp
pop
addr16
fidivl
incl
push
mov
iret
push
push
pop
jg
lahf
icebp
add
push
jmp
and
pop
cld
ljmp
xor
mov
rclb
mov
mull
inc
incl
pop
dec
cmp
dec
inc
rorb
nop
jno
adc
pusha
js
push
pop
in
call
adc
fcmovb
jne
jle
call
inc
pop
bnd
xor
std
incl
incl
mov
cmp
push
mov
sbb
ljmp
push
pushf
xorb
push
testl
xchg
call
push
sub
je
mov
stos
push
hlt
sbb
fwait
js
add
les
pop
jae,pt
push
dec
mov
enter
push
pop
push
clc
sbb
push
pop
ret
test
dec
ljmp
jge
push
call
ret
push
fwait
jg
mov
xor
sub
sub
cmc
jnp
mov
call
js
add
fdivr
inc
in
jmp
lret
idiv
decl
enter
pop
jl
or
or
push
pop
xor
adc
in
mov
lea
jmp
rorl
mov
sbb
fildll
cld
lods
insb
test
mov
xor
add
push
adc
decl
popa
jno
cld
mov
dec
adc
aad
call
mov
jge
mov
movb
lret
adc
sbb
aaa
mov
or
sbb
inc
js
xchg
mov
jge
ljmp
ds
addb
xor
imul
or
mov
mov
imul
xor
outsl
add
mov
movsl
clc
push
or
pop
es
or
notb
pusha
pop
add
adc
xchg
xchg
adc
adc
and
cltd
pop
fst
sub
mov
int
cltd
neg
sbb
and
add
mov
lret
mov
push
inc
int3
pop
aaa
or
lock
lcall
fdivs
adc
mov
popf
jae
popf
and
push
jmp
or
repnz
ljmp
add
andb
xor
fdivrl
pushl
jmp
cmp
jns
jae
divb
mov
test
or
lcall
push
pop
jmp
ja
js
xor
int3
and
xor
inc
sub
das
jl
jnp
jo
sub
jae
and
mov
movsl
adc
and
cmp
inc
popa
push
mov
pop
imul
or
or
ficoms
enter
bound
pop
cli
push
aam
cmpsl
adc
push
into
xor
ljmp
pop
test
xchg
in
cld
pop
inc
stc
sub
xchg
sahf
lret
bound
lods
push
push
mov
dec
xor
or
lcall
push
setno
and
xor
insl
mov
ss
dec
bound
push
sbb
dec
sub
mov
insb
xchg
and
mov
outsl
or
or
int
dec
add
subl
out
das
cld
decl
mov
add
sbb
call
sub
xchg
or
mov
add
xchg
ret
nop
add
dec
mov
mov
ljmp
and
mov
insl
imull
in
push
and
outsl
shll
in
push
outsl
cld
ljmp
adc
insb
loope
xorl
incl
scas
sbb
adc
dec
jl
add
jl
in
adc
push
cmp
mov
stos
pusha
add
push
adc
cs
pushl
inc
mov
lock
pushl
mov
and
cwtl
ret
pop
inc
sbb
imul
pop
mov
decl
cmpsl
and
fs
xchg
mov
in
xor
sbb
movsl
mov
pop
call
inc
xor
push
inc
int
sub
mov
iret
jl
inc
jecxz
xchg
fs
mov
lcall
das
je
lods
jo
push
mov
push
mov
pusha
stos
adc
sti
decl
cld
pushl
xor
xchg
sahf
add
test
subl
mov
jge
clc
lods
outsb
mov
ja
mov
xchg
push
sarb
in
aad
fwait
add
fisubrl
insl
push
mov
fwait
adc
xor
fs
es
pop
xchg
je
stos
shl
std
call
in
pop
sbb
mov
xor
sub
pop
sub
mov
icebp
pop
dec
mov
mov
lea
outsl
and
push
cld
adc
jne
les
xchg
imul
pop
sub
in
mov
add
pop
inc
testb
cmpsb
ljmp
sub
aam
fmull
vmovntps
xchg
hlt
aaa
sub
outsb
sub
popf
shrb
pop
test
mov
add
pop
push
in
lcall
pushl
cld
pop
xlat
push
fisttps
and
cmp
push
std
incl
gs
test
push
pop
push
push
jmp
fstp
push
jecxz
movsb
jmp
xchg
or
xchg
shrl
inc
push
push
sbb
adc
arpl
jno
or
inc
inc
adc
jb
loop
sub
pop
mov
movsb
pop
ficomps
push
sub
cmp
fwait
cmpsb
aad
dec
mov
in
enter
std
call
in
push
or
jp
push
lret
dec
mov
cmpsl
xchg
dec
cli
push
call
mov
xor
sub
movsl
inc
lea
pushl
mov
add
mov
inc
adc
ret
inc
popa
push
or
push
pushl
cli
rolb
jo
push
test
push
sub
lea
inc
jmp
mov
dec
pop
faddl
orb
cwtl
xor
or
fldenv
das
icebp
add
push
sbb
call
xor
je
dec
and
sbb
sbb
push
mov
int3
addr16
mov
add
popa
pop
int3
cli
ret
test
pop
or
lds
call
push
clc
roll
inc
dec
xchg
lock
inc
push
rcrb
or
cmpsb
call
lcall
jo
ret
enter
add
xchg
xor
push
insb
push
jne
adc
arpl
and
inc
lret
fucomip
test
hlt
xchg
shll
call
or
inc
mov
jmp
test
sar
fcoms
jo
xchg
test
call
movsl
jnp
jae
mov
sbb
xchg
push
cltd
add
dec
fwait
das
mov
jmp
outsl
pop
mov
aam
ud0
mov
inc
sahf
pusha
imul
or
mov
adc
add
jl
sbb
into
xor
pop
mov
in
test
std
inc
pushl
stc
xchg
sbb
std
stos
inc
cmp
aam
cld
push
or
adc
push
mov
pop
cmp
jo
fstps
pusha
addr16
insl
sarl
lcall
dec
lock
jle
je
into
mov
push
cwtl
bound
popa
ss
adc
jo
push
jo
xlat
mov
pop
call
js
push
cmp
mov
je
daa
inc
pusha
mov
sbb
stos
pop
clc
jmp
xchg
ljmp
cmp
pop
adc
and
pop
jnp
mov
outsl
pop
addb
int
mov
cwtl
add
ljmp
mov
pop
push
mov
rcrl
inc
sti
pop
push
inc
mov
cmp
lods
mov
push
je
mov
mov
fcoms
or
jge
mov
sbb
push
xor
loop
mov
pop
aaa
ljmp
xor
push
push
insb
xchg
sbbl
adc
mov
push
mov
cmc
xchg
add
dec
adc
jg
mov
add
add
mov
or
push
xchg
idiv
inc
lcall
clc
push
outsb
dec
add
imulb
mov
mov
cmp
test
test
loop
xlat
inc
sbb
jno
pop
lea
mov
cli
pusha
and
mov
jmp
fs
mov
loope
and
mov
sbb
stc
rcr
add
pop
mov
lds
lret
mov
sar
iret
pusha
sarl
dec
in
hlt
pop
push
push
xadd
decl
jg
inc
dec
sbb
xchg
sbb
lods
clc
adc
ficoml
push
push
push
popa
arpl
xchg
pushf
add
mov
cmpsl
fdivrs
adc
incl
incl
imulb
mov
cmpsb
mov
pushf
mov
push
cmpsb
pop
cld
add
in
push
fcoms
ljmp
and
and
loope
sahf
insb
repnz
jne
fcmovnu
cltd
cmc
mov
dec
push
sbb
icebp
outsb
jo
mov
outsb
mov
dec
sbb
clc
outsl
or
xlat
inc
push
push
fs
dec
dec
repnz
xchg
test
aaa
mov
adc
sar
pop
std
jg
pop
pop
ret
jle
lods
fdivrs
and
in
adc
test
mov
orb
pop
lods
cld
cs
dec
push
insl
sbb
sub
pop
or
add
dec
pop
lcall
fisttpll
dec
mov
cmpw
push
mov
mov
or
push
jae
fstpl
jmp
or
das
lods
mov
mov
lcall
ljmp
rolb
sahf
jnp
pop
sub
xor
in
xor
mov
lea
jbe
ljmp
cmp
test
pop
pop
ret
mov
sbb
outsl
hlt
decl
mov
jbe
jb
cmp
sbbl
push
aaa
test
inc
pop
mov
sti
arpl
faddl
lods
dec
and
and
movsl
outsl
inc
push
das
test
and
dec
mov
dec
xchg
mov
mov
inc
cmp
inc
push
push
pop
jle
pop
adc
pop
sub
inc
hlt
loop
enter
incl
orl
dec
add
std
jg
sub
mov
test
loop
lcall
push
lods
stc
mov
sbb
add
inc
int
mov
nop
out
cld
add
test
out
jae
push
aad
cld
sbb
lock
imull
clc
int
insl
push
mov
stos
push
loope
inc
pop
loop
or
push
add
sub
call
lock
inc
add
cmp
pop
xchg
and
xor
jno
lea
inc
xchg
xor
sar
incl
jl
call
data16
mov
mov
orl
sbb
call
mov
nop
inc
scas
fsubs
sbb
inc
sub
decl
inc
in
call
pop
sbb
push
mov
ss
pop
mov
call
sbb
or
pop
ss
fiaddl
add
xor
mov
mov
call
andl
jnp
fs
mov
pop
mov
add
xor
mov
push
adc
inc
mov
inc
or
mov
loopne
lret
repnz
push
add
add
adcb
inc
mov
rcll
inc
xchg
hlt
jg
push
jge
push
xor
lock
daa
sahf
insb
jmp
ljmp
sbb
pop
clc
cmc
fdivs
cmp
push
shrb
mov
nop
bound
inc
fwait
add
pop
loopne
fimuls
mov
mov
or
cli
aaa
push
xor
or
inc
cmp
in
ja
lods
add
mov
mov
sub
jo
decl
pop
out
mov
mov
or
das
jo
dec
xor
xchg
inc
or
into
pop
or
pushl
clc
jmp
movsb
lods
mov
aaa
adc
nop
xchg
push
in
arpl
stc
mov
lds
push
dec
fsubs
fidivrl
adc
fwait
push
mov
mov
enter
xlat
int
fldenv
dec
fucomp
lret
sub
xchg
jg
lock
in
sub
cmp
ss
mov
test
incl
add
or
jne
cmp
jbe
mov
sub
mov
jle
inc
inc
mov
jb
fisubrs
movsl
lcall
cmpsl
push
xchg
sub
sbb
popa
mov
pop
sar
mov
push
ret
bound
jbe
outsb
cmp
fwait
insb
movsl
mov
cld
and
scas
xchg
jge
inc
push
es
inc
jne
inc
enter
jbe
daa
adc
add
pop
fsubr
lea
sub
ds
add
cli
scas
shl
sbb
stos
mov
cli
pop
insb
std
imul
scas
lcall
jmp
loopne
arpl
xchg
jl
cmp
lods
test
pop
cs
sub
ljmp
int
in
shll
mov
jmp
decl
xchg
cmp
mov
popa
in
adc
mov
fnstcw
mov
testl
xchg
inc
cmpl
jp
cmp
sub
repnz
jmp
rcr
mov
cld
das
cld
fs
fdivrl
fcmovbe
push
repnz
call
in
mov
insb
nop
adcl
pusha
call
jmp
pop
out
fdivr
mov
jge
or
sbb
pushl
or
jnp
lds
pusha
repnz
inc
cmp
mov
xor
xor
mov
ret
and
out
sub
leave
loopne
and
add
dec
xor
xor
mov
fwait
adc
push
xchg
jecxz
sub
subl
dec
lock
adc
lds
inc
adc
xor
xchg
loope
fildl
call
pop
lret
xor
mov
mov
das
cld
decl
jne
inc
out
or
dec
es
lock
incl
ljmp
push
sahf
xchg
repnz
jge
mov
rcrb
push
push
rorb
jnp
std
jge
push
add
pop
jbe
fs
xchg
lret
dec
mov
fidivs
and
inc
or
jg
jne
jns
out
inc
jmp
in
out
cmp
test
loope
pop
inc
push
add
jg
add
jo
in
inc
and
movsl
mov
enter
pop
mov
or
popf
out
divb
dec
push
add
pop
enter
incl
xor
push
inc
popa
stos
add
fbstp
push
adc
push
jne
inc
add
add
pushl
push
out
aaa
imul
push
xchg
cli
pop
inc
jmp
lret
leave
or
fcomip
test
js
mov
test
jecxz
pop
jl
push
insb
or
jg
clc
sbb
movb
stc
shl
lock
mov
inc
lea
and
imulb
ret
clc
dec
outsl
icebp
sbb
or
inc
test
jg
dec
lcall
mov
sbb
cld
push
sbb
or
ret
adc
sub
decl
mov
push
leave
jne
inc
and
into
jno
lcall
push
pop
int3
fnsave
mov
mov
cmp
xchg
roll
push
loopne
sub
push
andb
insl
hlt
inc
icebp
test
shrl
lock
lret
add
sbb
push
jmp
jae
mov
movl
jecxz
add
mov
loope
xor
cmp
data16
jl
inc
push
mov
jae
nop
addr16
mov
jo
pop
sbb
inc
mov
sub
test
pop
ljmp
cltd
mov
xor
hlt
jl
cltd
fcompl
lcall
xorb
cli
shlb
sbb
lret
aam
cli
loope
pop
or
or
mov
cmp
arpl
aad
call
outsl
dec
ljmp
pop
loopne
jg
mov
sarb
lahf
cmp
mov
shl
xorb
mov
pop
mov
movsb
sub
sub
fistpll
push
icebp
pusha
xor
pop
pop
movsb
push
repnz
loop
aas
push
stos
jnp
mov
jne
push
test
or
call
pop
lods
cltd
dec
lock
push
inc
orl
loopne
fwait
mov
dec
fistps
aad
pop
push
push
inc
cld
xor
jns
mov
adc
fbld
negl
add
int
hlt
cld
pop
aaa
mov
jle
cmp
push
or
movsw
sahf
push
hlt
sub
cmpsl
fcmovbe
mov
mov
cli
add
enter
xor
call
jg
outsl
lods
dec
imul
test
test
pushl
mov
mov
pop
fs
sarl
adc
sbbb
lret
mov
jnp
mov
lcall
test
das
andl
out
iret
insb
push
push
cmp
inc
cmp
dec
pusha
push
insb
push
sahf
mov
pushl
pop
cmpsl
sbb
inc
inc
nop
idiv
lcall
std
push
pop
leave
imul
in
mov
call
out
jno
pop
lea
adc
dec
ds
popf
sub
idivl
mov
decl
imul
jae
sbb
ljmp
sub
or
mov
popf
mov
sbb
jge
dec
mov
cmp
arpl
mov
cmp
pshufw
scas
mov
pop
ret
inc
sbb
sti
mov
or
lea
sbb
cli
mov
sub
insb
movsb
test
sub
lcall
xchg
in
jae
int3
inc
xchg
adc
and
mov
sub
mov
clc
mov
pop
lds
loope
inc
mov
call
cmp
pushf
sub
cld
jmp
enter
pop
call
cli
push
fsubl
sub
adc
jbe
cmp
mov
mov
inc
movb
call
jle
lahf
dec
sub
adc
stos
lahf
or
sbb
pushf
int
bound
imul
pushl
dec
mov
pop
jbe
outsl
cld
call
je
das
add
cmp
das
je
dec
jne
inc
xchg
or
ljmp
pop
fdecstp
lret
cmp
je
imul
lea
call
xchg
mov
xchg
rolb
mov
cmp
cmpsl
mov
bound
push
fisubl
mov
cmp
fmull
mov
fucomip
dec
or
push
cmp
mov
ja
mov
dec
mov
push
dec
out
push
and
sub
cli
mov
insl
pop
cli
incl
cltd
not
loopne
dec
test
sbb
lea
outsl
sti
inc
fisubl
push
add
fucomip
das
hlt
mov
scas
pop
ret
fs
enter
add
inc
xchg
setb
stos
pop
push
xchg
dec
ljmp
xor
jmp
push
insl
or
mov
gs
mov
lcall
adc
ds
jmp
jp
pop
add
dec
popa
push
int3
sub
adc
ret
cld
and
es
xchg
shl
mov
aas
in
lret
test
lods
pop
xchg
jmp
not
pop
jg
fs
pop
adc
push
cmp
mov
notb
cltd
call
pusha
and
xchg
out
xchg
cli
call
cld
mov
push
sbb
push
fnstsw
jmp
test
pusha
inc
test
xchg
dec
loope
das
hlt
incl
push
and
cs
xor
je
les
xor
call
pop
lcall
sbb
or
sbb
mov
xor
adc
inc
ffree
mov
push
es
jmp
push
cld
je
sub
mov
call
clc
testb
pop
cld
push
cmpb
push
dec
aas
adc
clc
sar
jg
pop
or
or
outsb
ret
xor
inc
xor
scas
sub
ljmp
std
jne
push
push
int3
mov
push
fidivrl
dec
scas
jbe
add
stos
or
pop
cli
outsl
cmc
add
das
push
inc
lahf
pusha
aad
lock
jb
xchg
incl
mov
push
cmp
pop
jl
mov
mov
std
lcall
push
leave
jmp
sub
push
cmc
cmp
adc
mov
mov
ljmp
stc
mov
lea
or
sbb
lock
and
mov
cld
or
sub
lock
fs
pop
mov
lcall
jp
mov
pop
push
jge
xchg
mov
mov
push
lret
lret
push
aad
insl
outsl
xchg
cmpb
and
sub
call
ljmp
sub
xor
and
leave
adc
scas
sub
mov
push
sub
xchg
out
mov
mov
xor
movsb
push
mov
xchg
xchg
call
iret
jmp
cmp
lahf
loopne
lcall
std
fildll
or
push
adc
or
jno
lret
sub
mov
jns
jne
fwait
movsb
scas
sti
cmp
xchg
jbe
lods
in
enter
call
mov
xchg
add
mov
ret
sub
push
mov
rolb
outsb
cld
add
call
cmp
xchg
inc
jnp
comiss
addr16
ljmp
inc
imul
mov
jecxz
mov
jg
mov
in
test
ljmp
pop
jae
cmpb
fwait
repnz
cmc
xor
divb
mov
mov
movb
jmp
mov
cmp
push
pop
ja
insb
lea
and
sbb
push
cli
cli
pop
jg
mov
pop
rcrl
push
orl
cs
jnp
xchg
decl
or
enter
gs
loope
decl
jmp
cmp
ss
sbb
mov
add
mov
jo
pop
or
aaa
jle
or
je
sar
ss
sbb
ljmp
jb
or
sar
outsl
xor
popa
fcoml
mov
jne
shr
xchg
cmp
push
xor
jmp
pop
mov
jmp
or
pop
xor
out
inc
jmp
pop
movsb
fs
pop
jmp
pop
out
push
test
addr16
adc
push
xor
fnsave
clc
lcall
xchg
fimuls
mov
adc
mov
push
jnp
xrelease
lock
cli
mov
xor
lea
cmp
jne
stos
mov
and
ljmp
sbb
push
jo
imul
pop
mov
lock
lock
popa
ss
sbbb
fsubl
mov
decb
rcll
or
dec
mov
decl
hlt
pop
push
or
mov
mov
pusha
outsl
xchg
sub
add
lds
mov
and
mov
push
pushf
jno
pop
cmp
push
jae
sahf
in
call
in
xor
push
sbb
mov
and
decb
jne
test
mov
inc
out
inc
fistl
xor
add
cld
add
ljmp
icebp
jl
hlt
movsb
mov
add
dec
mov
jne
andl
jmp
dec
insb
cmp
sti
mov
adc
xchg
in
clc
mov
xchg
call
movsl
xchg
sub
roll
push
pushf
test
mov
jo
xor
or
fisttps
lret
push
mov
and
xlat
add
mov
xchg
pop
ljmp
popf
mov
jb
out
push
sbb
jae
inc
xchg
xor
out
jmp
stc
mov
xlat
shll
xchg
fwait
mov
sbb
fbld
pop
add
icebp
das
xor
push
mov
decl
fstpl
lods
dec
push
jb
push
add
mov
das
jne
pop
jnp
mov
inc
adc
mov
pop
pop
jg
mov
xor
cmpsb
lcall
push
mov
pushl
call
mov
xor
hlt
enter
hlt
mov
jae
popf
adc
jp
dec
repnz
sub
cmp
lock
dec
jno
bound
jg
call
inc
fldenvs
xor
das
pop
ds
lret
sub
sar
xchg
cli
lcall
jns
jmp
and
lret
mov
dec
sub
cmc
fimull
xchg
je
xchg
mov
inc
and
test
sub
sbb
lds
jg
mov
and
je
xor
jmp
dec
or
cld
push
les
je
mov
fcmovb
int3
stos
inc
aam
adc
idiv
inc
mov
fucom
xchg
dec
jo
outsb
cmp
imul
sub
inc
xor
xchg
orl
push
das
icebp
or
bound
js
inc
jne
in
mov
xchg
lods
adc
add
rclb
incl
dec
add
ss
pop
mov
cwtl
push
sbbl
insb
cwtl
push
adc
sub
add
mov
ljmp
pop
add
mov
push
sbb
cmpsl
add
sbb
xchg
lock
addr16
adcb
mov
mov
faddl
jge
pusha
icebp
add
outsb
stc
ret
movl
ljmp
pop
add
jno
or
jbe
cmp
add
lret
fwait
shl
ljmp
mov
fisttps
fnstenv
call
std
je
xor
hlt
ljmp
fimuls
mov
sub
mov
sub
add
inc
lret
aaa
mov
test
jnp
cmp
mov
jge
add
pop
jp
stos
testl
sub
mov
sbb
xchg
popa
lods
test
mov
xchg
out
mov
mov
aas
scas
es
lea
clc
dec
or
fwait
xlat
gs
cmovne
add
out
cwtl
sbb
ljmp
or
dec
jb
lahf
add
dec
add
lret
je
add
mov
ret
jge
lea
mov
nop
fstps
push
popf
inc
js
mov
test
lret
adc
cld
xchg
xor
pushl
jns
xor
aad
xchg
cmp
xchg
outsb
adc
insl
push
adc
push
das
ret
fcompl
in
test
in
int3
popa
xchg
ja
out
js
cs
in
cmp
jg
test
add
ja
iret
push
lds
insl
adc
subl
pop
xchg
cli
sub
jno
sti
lds
idivb
test
and
scas
lret
pushl
adc
adc
cld
je
movsl
dec
xor
xchg
lds
jge
inc
inc
gs
ljmp
test
push
xchg
mov
inc
and
rorb
aam
jmp
inc
cmp
cmp
adc
mov
in
cmp
mov
cmp
jno
das
hlt
jg
sti
in
cmp
sti
imul
mov
dec
inc
incl
shrb
xchg
adc
mov
fistpl
mov
sbb
adc
sbb
lods
call
lock
push
cmp
js
inc
test
jns
push
data16
test
jle
inc
xchg
rorb
pop
jge
movl
or
ds
scas
push
jge
cli
push
ljmp
mov
into
lahf
add
mov
xchg
adc
sbb
std
decl
mov
sub
rorl
rcll
inc
cmc
mov
push
and
push
mov
mov
lret
mov
in
pop
dec
cmp
call
inc
loope
mov
js
add
incl
pop
adc
pop
test
pop
shlb
ret
fucomip
decl
adc
push
mov
adc
mov
out
cmp
std
mov
push
pushf
dec
cmpb
push
sub
loopne
call
inc
mov
andb
and
mov
add
lds
push
pop
call
pop
clc
xchg
stc
add
in
sub
pushf
dec
jbe
clc
push
mov
cmp
add
movsb
adc
mov
cld
jo
cmp
mov
loop
je
cmp
shll
sbb
sub
andb
jmp
lret
or
aas
xchg
mov
jecxz
cmp
lock
jg
or
add
jmp
loop
mov
jmp
cmc
ljmp
adc
mov
xor
test
js
xchg
cli
inc
shrl
clc
call
loopne
or
je
or
jl
pushl
insb
sbb
jbe
pop
or
out
pop
mov
loopne
jle
push
outsb
pop
and
ja
mov
push
ds
dec
je
in
xor
sub
jle
cmc
ljmp
sbb
aam
jecxz
test
ret
sub
and
adc
ljmp
insb
xor
je
xor
jmp
in
lret
sbb
mov
std
decl
lcall
shl
fsubrs
les
cmp
mov
inc
test
pop
loop
outsl
sarl
les
out
and
mov
pop
int
clc
les
insb
aam
xchg
add
fs
outsl
insl
lock
dec
dec
lock
repz
push
mov
jecxz
fistpll
xor
push
push
adc
add
fdivs
mov
call
fisubrl
push
xchg
inc
in
push
out
fdivrp
ljmp
lock
sub
out
shrb
push
ficomps
cmp
fnstcw
lock
cli
in
call
inc
mov
inc
int3
mov
mov
scas
fnstenv
jo
imul
inc
adc
cmpsl
cmp
sub
inc
mov
arpl
jno
dec
je
or
mov
cmp
jp
xor
jg
stc
lcall
cld
clc
jecxz
and
pushf
push
int
iret
adc
idivb
add
mov
xchg
insl
cld
mov
push
scas
insl
fmull
pop
enter
insl
fdivrs
cld
filds
mov
insl
sbb
xchg
insl
xor
out
ret
insl
or
cwtl
mov
js
fists
mov
pusha
pop
pop
and
data16
push
pushl
sar
in
cmp
xor
mov
xor
shll
cmp
out
mov
push
dec
xchg
shr
mov
mov
xchg
lock
mov
fistps
call
insb
push
daa
cmpsb
call
add
adc
add
xchg
pop
lret
sub
sub
mov
inc
jge
jg
aad
mov
cmp
sbb
out
mov
mov
gs
cmp
jmp
lret
into
scas
lea
xorb
aam
xchg
imul
cwtl
dec
push
mov
xor
push
mov
aas
adc
and
bound
idivb
out
lods
pop
fldl
push
je,pt
add
jecxz
inc
insb
hlt
add
clc
stc
test
jo
fcomps
ja
lods
mov
dec
or
xchg
mov
inc
insl
sub
call
mov
clc
movsl
pop
push
jns
cmp
or
lock
incl
jb
cmp
mov
addl
aaa
mov
mov
or
add
shl
xor
xchg
addl
test
and
pop
add
int
push
leave
imul
cmc
je
push
imul
mov
mov
dec
lahf
or
push
jne
adc
imul
lods
mov
pop
push
sbb
or
mov
xor
fstp
stos
lock
hlt
mov
push
push
fldcw
mov
ljmp
dec
cmp
inc
insb
xchg
les
dec
mov
jno
pop
adc
push
mov
push
fs
ljmp
stc
jo
rorb
jl
sbb
ds
dec
push
push
push
mov
nop
mov
pop
dec
jge
mov
and
xchg
jo
nop
mov
inc
sbb
sub
jle
push
xor
outsl
cld
sbb
ds
fadd
mov
pusha
mov
shlb
div
xor
xor
imul
jle
std
dec
xchg
pop
jmp
addr16
cmp
les
mov
sub
aaa
fcmovnu
js
jo
inc
cmp
sti
fucomip
ljmp
fadd
mov
daa
cmp
test
cmp
stc
xor
js
cmp
add
ljmp
cmp
pop
inc
inc
pop
jge
test
cmp
cltd
popf
sbb
addr16
clc
jmp
cmpsb
inc
in
addr16
mov
adc
or
stos
or
pop
and
xor
je
pushl
incl
push
jae
sti
and
rclb
in
jnp
and
jne
cmp
rolb
push
clc
cld
add
leave
xchg
out
leave
cmp
stc
sti
stc
jmp
jb
or
aas
stos
mov
adc
sbb
stc
stc
stc
test
sub
xor
cmp
inc
inc
lcall
dec
jecxz
stc
popl
in
adc
test
jne
inc
pusha
je
adc
and
mov
shlb
or
mov
inc
push
and
adc
pushf
pop
aam
pop
jno
jg
mov
and
leave
or
pop
gs
sub
push
jmp
xor
push
push
mov
mov
adc
xor
dec
xor
inc
inc
push
lock
jno
sbb
xchg
sub
incl
mov
adc
les
stc
cmp
adc
in
or
call
or
push
mov
pop
xor
les
adc
inc
and
jge
call
and
mov
or
in
aam
mov
cli
sub
cmp
mov
sbb
cmp
jl
xor
jle
add
add
cmp
dec
xor
cmp
je
call
call
add
jge
mov
inc
inc
cmp
jl
cmp
ljmp
rorb
dec
mov
lea
insb
add
add
popa
outsb
std
ljmp
cltd
or
jg
xchg
mov
pop
add
xor
decl
popl
inc
mov
xchg
stos
adc
mov
cmp
pop
cli
sub
add
icebp
dec
lea
dec
das
hlt
outsl
hlt
mov
adc
and
test
mov
push
lock
ljmp
jae
xor
cltd
ljmp
mov
popf
xchg
sub
outsl
mov
mov
mov
jmp
bound
jg
pop
loopne
jp
imul
adc
xchg
lods
inc
ret
add
pusha
or
les
mov
cmp
add
push
pop
dec
xchg
pushl
clc
rcl
les
sbb
jecxz
test
enter
leave
repnz
ss
push
outsl
std
outsl
icebp
enter
sbb
mov
sbb
push
ljmp
mov
pop
je
insl
ja
mov
das
arpl
cmp
outsl
hlt
jmp
aad
inc
xlat
or
inc
xchg
clc
ss
xor
int3
adc
adc
mov
das
popf
in
xchg
push
add
push
xor
ljmp
mov
or
sbb
rcrl
jae
cwtl
jae
pop
push
cld
push
nop
push
mov
pop
mov
pop
outsl
rorb
fs
call
jg
and
add
es
icebp
test
add
jmp
lcall
fsubs
mov
xchg
push
aad
leave
push
mov
lock
dec
add
or
shr
lcall
bound
enterw
in
imul
shrl
pushf
push
jg
aam
ljmp
jns
and
lods
and
mov
mov
mov
sbb
es
adc
cld
ljmp
mov
popf
mov
imulb
pop
sub
popf
rcrb
mov
push
ljmp
mov
lcall
xor
int
pushl
clc
das
rep
lea
cwtl
and
fsubl
fists
and
out
hlt
jg
test
add
xorb
cld
lods
cmpsb
idivl
pop
stos
inc
aad
or
popa
add
inc
ljmp
cld
cmp
clc
sub
out
push
inc
test
je
pushf
in
dec
mov
jmp
fstpl
mov
jmp
or
pop
dec
test
mov
mov
cmpsb
cmp
jo
push
hlt
mov
decl
jle
mov
add
rcrl
jge
in
xor
lea
xor
jmp
mov
jne
dec
mov
jg
cmpsl
outsl
std
jg
push
add
and
lods
push
sbb
xor
push
dec
dec
mov
ljmp
pop
jmp
insb
mov
inc
incl
psubusb
repz
dec
fidivs
dec
bound
int
sub
cmp
les
jle
sti
or
push
jg
in
mov
outsl
xor
jmp
sbb
je
ret
pop
insl
popf
and
fs
incl
cmc
push
popa
arpl
mov
pop
pop
aaa
lock
jmp
xchg
cwtl
ret
sti
ja
je
add
enter
dec
call
repnz
adc
xchg
test
push
je
dec
test
and
test
jns
xchg
sub
stos
jmp
fs
int3
test
insb
sbb
push
mov
mov
and
push
das
pop
call
inc
xchg
ja
ja
mov
push
jge
jo
push
push
sbb
insl
je
aad
outsl
icebp
lea
cmp
ja
movzbl
mov
xlat
jg
jp
cmp
jbe
push
mov
push
sbb
push
xchg
cli
inc
sbb
push
call
loope
mov
push
ret
sbb
roll
cmp
mov
lods
cmc
and
cmp
repz
insb
jp
xchg
gs
pop
mov
jae
add
add
add
or
inc
add
int3
push
or
decl
sbb
aaa
adc
pop
mov
cmp
push
shrb
xor
lods
mov
mull
and
fcomip
fcomps
ds
adc
inc
test
or
jle
bound
lea
or
sbb
popa
jmp
orl
mov
ror
enter
mov
sub
mov
mov
pop
jns
jns
call
jns
and
iret
cmove
pushl
sbb
fs
push
lret
clc
jg
pop
loop
push
add
insb
mov
call
mov
dec
mov
jne
fcompl
pop
sbb
call
je
gs
push
in
mov
sahf
jg
add
xchg
or
call
xchg
aas
add
inc
shlb
decl
inc
xorl
push
add
mov
inc
les
push
shl
push
pusha
pop
pop
push
push
cmp
int3
sar
ljmp
popl
mov
mov
orl
rol
out
sbb
ljmp
ljmp
ds
fs
nop
sub
sub
dec
push
int3
cmpps
jl
rcr
and
mov
out
and
sbb
int3
fdivl
adc
push
push
gs
mov
decl
push
sub
loopne
mul
mov
popf
jbe
pushl
lds
insb
pop
das
xchg
test
out
push
jb
add
mov
pop
rclb
mov
dec
sub
xchg
jb
out
stos
sub
incl
faddl
iret
inc
push
call
jle
xchg
or
pop
jnp
das
lock
bound
mov
push
lods
sbb
loop
out
pop
push
test
pop
sub
add
mov
push
jl
cld
and
mov
push
mov
push
xor
clc
xchg
es
sub
lods
jae
jle
pop
icebp
inc
fdivl
fistpl
mov
aas
into
add
mov
mov
sub
pushl
mov
les
and
sbb
xchg
inc
dec
add
mov
stc
movsl
inc
adc
popa
clc
pop
sbb
jp
aas
scas
movsb
leave
rcrb
stos
cmpsl
call
mov
cmp
mov
push
jecxz
sub
mov
xor
cmp
scas
cltd
cmp
and
dec
sbb
or
push
call
imul
jb
xor
pop
pop
jmp
or
decl
out
or
sbb
lret
push
jmp
clc
mov
es
decl
jnp
pop
je
add
add
xor
je
xor
mov
leave
sbb
pop
loop
add
or
pop
inc
ljmp
mov
int3
mov
lret
ret
sbb
jg
js
or
insb
push
or
jle
sub
push
push
pushl
clc
jl
mov
ja
je
sub
decl
es
dec
adc
jne
icebp
pop
mov
inc
inc
push
mov
sub
hlt
pop
call
mov
sub
jnp
jnp
decl
xchg
jnp
jnp
pop
add
mov
xor
movsl
inc
lcall
dec
shl
adc
dec
xchg
insl
sahf
iret
mov
jl
ret
mov
call
cmp
in
jns
test
mov
adc
loopne
sbb
call
insl
xor
test
cmpsl
inc
jne
sbb
out
ret
pop
loop
inc
daa
xchg
push
cmp
test
dec
pop
cli
jmp
repnz
dec
out
adc
fsubrs
loop
xor
adc
outsb
hlt
incl
pushl
cmp
pop
add
jmp
insb
mov
adc
js
jmp
mov
jle
lea
das
lock
btc
xor
push
push
adc
mov
inc
mov
cmpsl
push
test
test
pop
push
xor
pop
cli
and
dec
mov
dec
sub
xlat
add
mov
inc
sub
pop
push
jecxz
pop
inc
jbe
jmp
or
push
sbb
xchg
jbe
mov
mulb
out
cld
and
call
pop
movsl
imul
mov
in
lock
shl
hlt
lahf
push
push
sbb
lcall
cli
incl
jge
cld
mov
test
push
jb
enter
mov
cmp
je
push
mov
inc
jae
and
sbb
cld
or
insl
mov
aad
loope
ss
sub
jbe
jmp
outsl
andb
pop
enter
fs
bound
addr16
pop
jl
add
lcall
bound
pop
aam
dec
sub
movsb
xor
mov
clc
repnz
pop
addr16
fucomip
incl
sbb
ds
xor
ficomps
sete
sbb
push
add
adc
mov
or
fldl
ja
sbb
scas
sbb
add
decl
pop
cmp
push
mov
pushf
and
or
and
sahf
addr16
icebp
adc
incl
jns
call
push
movsl
jg
leave
les
xchg
dec
inc
cld
pop
decl
ja
call
mov
clc
in
mov
push
addr16
call
aad
je
cmp
push
in
adc
sbb
mov
or
out
push
dec
je
pushl
aad
rcrb
lock
jle
jle
sub
xchg
inc
cmp
decl
jmp
pop
mov
popa
js
push
shll
mov
dec
adc
dec
and
pop
sbb
divb
ljmp
xor
xor
dec
inc
pop
lock
xchg
xchg
mov
pop
sbb
cmp
ret
jno
incl
xchg
jle
push
lds
test
je
sub
test
mov
fildl
fisubrl
pushl
cwtl
xor
xchg
pop
je
or
mov
iret
je
xor
sub
xor
sbb
sub
adc
add
adc
push
push
adc
lcall
in
loope
xor
push
xchg
adc
dec
sub
xchg
mov
push
push
add
jbe,pt
lea
sub
shll
jb
jmp
fidivl
lock
jnp
or
pop
and
je
mov
js
mov
iret
adc
inc
jg
call
cld
pop
movsl
mov
xchg
inc
and
in
sub
pop
push
inc
repz
add
rorl
sbb
push
icebp
lock
dec
lret
sub
fcoms
push
push
incl
stc
add
pop
lea
shr
inc
neg
lea
cs
adc
decl
sub
ds
inc
inc
negb
add
sub
adc
xor
add
push
add
mov
shr
jg
call
and
add
int
call
add
push
outsl
ljmp
or
add
in
fcoms
xor
xor
out
xchg
es
inc
mov
std
std
mov
fisttpll
xchg
je
addl
jbe
pop
mov
adc
jg
cmp
xor
adc
addr16
mov
lods
sbb
outsl
push
and
out
inc
and
cmp
mov
or
push
std
dec
cld
push
cmp
jo
js
adc
test
pop
aad
cmp
or
jae
std
call
jge
or
add
es
call
push
push
push
aam
xchg
xor
mov
ljmp
mov
push
popf
sub
jl
das
fstps
mov
or
fbstp
ds
pop
xchg
cmp
and
mov
xchg
movsl
and
jg
mov
cmp
fs
scas
jl
outsb
mov
mov
into
inc
mov
jge
push
les
movsl
in
jecxz
xlat
adc
and
push
call
call
mov
cmp
dec
push
jne
je
test
stc
inc
push
flds
nop
xor
jg
xchg
push
scas
addb
inc
push
jo
lds
adc
or
mov
mov
mov
xchg
xor
test
pop
cmpsb
mov
or
dec
fnstsw
test
jmp
loope
add
into
int
mov
mulb
insl
subb
movsl
hlt
call
insl
ja
inc
jae
sub
mov
jg
inc
inc
les
dec
push
movsb
jmp
sub
xor
rorb
test
rolb
decl
clc
add
flds
push
daa
push
pop
xor
lock
cli
cmp
mov
pop
mov
jle
mov
sbb
adc
aas
mov
xor
xchg
or
sub
popl
mov
push
push
or
pop
loop
pop
je
dec
push
jno
das
mov
int
pop
adc
ss
dec
std
outsl
je
lods
xor
xchg
or
sub
push
lods
mov
das
std
cwtl
inc
sbb
jnp
js
out
in
cmp
daa
push
loop
cmp
or
xchg
cli
lcall
pusha
cmpsb
cmp
xchg
imul
repnz
dec
jge
lds
dec
push
outsl
or
sbb
stc
pop
mov
jg
fstl
sti
cld
mov
push
repnz
lret
insb
push
into
nop
jae
adc
test
outsl
mov
xchg
xchg
inc
movsl
xchg
imul
je
cmp
mov
mov
mov
nopl
dec
iret
xchg
push
frstor
imul
pop
push
inc
mov
mov
dec
inc
mov
mov
jge
mov
cmp
xchg
std
xchg
ret
mov
sub
lcall
call
xchg
dec
push
popa
fs
or
mov
lret
push
scas
mov
or
sbb
pushl
cli
ret
xor
imul
leave
fsubl
hlt
xorl
or
pop
aam
xor
lcall
outsl
int3
arpl
push
xor
fnstsw
cmp
mov
shlb
mov
cld
incl
add
mov
rorb
sub
mov
pop
rcrb
mov
jp
mov
xor
pop
push
shlb
inc
inc
ret
sbb
hlt
ljmp
sar
addl
adc
dec
push
or
jne
mov
decb
cld
push
les
xor
pop
pop
xchg
cmp
rcr
loopne
adc
jne
push
fldl
mov
inc
cmp
pop
js
sub
test
xchg
aad
js
cwtl
sbb
push
pusha
push
call
aam
inc
mov
sub
data16
cmpb
xor
bound
adc
cmc
decl
push
aaa
mov
mov
fldcw
jecxz
inc
inc
mov
mov
out
jae
or
imul
sbb
jmp
and
clc
xchg
pop
cli
inc
and
sub
add
push
sar
fists
or
mov
test
mov
out
xchg
push
enter
push
stos
adc
ljmp
adc
test
lret
aam
test
add
add
in
rcrb
jg
nop
sbb
movsb
sbb
stos
lcall
test
dec
cmpsb
jo
mov
cmpsb
push
movsl
outsl
sub
mov
outsb
shl
insb
loop
adc
push
add
pop
call
mov
push
mov
push
mov
stc
xor
add
mov
cwtl
pop
mov
sub
push
adc
mov
movsb
jno
enter
push
pusha
cwtl
xchg
cmp
ret
inc
jo
dec
push
jle
dec
pushl
jns
sbb
dec
mov
mov
add
adc
mov
popa
shll
loop
jle
jmp
adc
adc
call
or
std
je
je
push
les
sub
decl
cmp
jg
lcall
repnz
test
aaa
jg
inc
jmp
jmp
mov
in
pop
js
rcrl
pusha
sub
movsl
cmpxchg
or
std
ljmp
jno
push
es
xchg
out
test
pushl
lcall
inc
push
xchg
or
adc
inc
push
add
inc
int
push
fs
sub
pushl
arpl
push
lea
pop
and
dec
mov
and
cmp
xchg
aaa
cli
test
je
pop
pushl
test
ds
push
mov
ljmp
add
mov
fnstsw
incl
xchg
lcall
into
scas
arpl
xor
nop
loope
jne
incl
and
push
icebp
ja
je
sub
mov
pusha
loop
push
inc
mov
xchg
and
fdivrp
add
inc
ficoml
fs
xor
pop
cli
aaa
push
in
cld
add
data16
pop
push
cmpsl
ret
sbb
pushl
add
fnstsw
mov
sbb
push
inc
and
mov
jne
mov
fstpt
hlt
incl
jae
in
loop
xor
out
pushf
mov
fwait
push
jnp
mov
add
jl
mov
cmp
pmaxub
jg
inc
push
shrl
mov
dec
pop
push
push
pop
lea
lods
or
ljmp
jne
cmp
dec
jne
movsbl
movb
aaa
clc
decl
mov
sub
dec
jns
pop
popf
push
ljmp
cmc
sub
adc
shll
push
test
inc
cmpb
inc
ljmp
push
and
lea
call
lock
iret
push
lahf
and
xorb
sub
pushl
lods
add
and
mov
cli
xor
sbb
incl
sbb
push
mov
addr16
rcrl
mov
adc
lcall
pop
jg
xor
fs
lea
push
out
pop
xor
mov
pushl
clc
ret
in
out
test
mov
or
xchg
sub
push
xlat
popa
pushl
insb
enter
cmp
cmp
xor
sbb
xorl
es
push
pop
xchg
enter
ljmp
paddw
mov
cmp
je
mov
mov
jb
clc
mov
in
shrl
mov
mov
push
jmp
sub
mov
pushl
std
shll
dec
and
or
fistl
add
gs
fidivrl
call
in
ja
mov
inc
lcall
cmp
push
push
xor
lret
das
cmc
outsl
cmc
orb
cs
add
and
xchg
pop
sar
mov
add
fs
jae
repz
mov
sbb
mov
outsb
push
dec
rclb
jnp
enter
mov
call
je
inc
shlb
lds
insb
sbbb
jmp
cld
dec
add
mov
icebp
add
lds
fwait
das
rol
push
iret
pop
add
jg
sbb
or
cld
cwtl
mov
xchg
hlt
or
test
pushl
xchg
and
sbb
fldt
dec
cwtl
rorl
cmp
clc
add
mov
sbbl
dec
call
pushl
or
xchg
call
mov
mov
scas
dec
xchg
sbb
xchg
inc
aaa
mov
jg
sbb
ficompl
lods
adc
nop
xchg
mov
fisttpl
shl
call
test
xchg
ret
mov
into
je
push
mov
mov
js
mov
and
insb
icebp
mov
and
sub
add
sub
sbb
fists
call
sub
and
subl
js
roll
push
decl
sub
xchg
cli
lds
jo
add
js
push
negl
xchg
push
jmp
push
loopne
pop
addb
stc
rol
mov
jb
sbb
pushl
popa
xchg
clc
cmp
lds
jecxz
ja
in
push
lret
inc
ja
lcall
outsl
push
out
xor
push
jp
xor
sbbb
and
pop
mov
dec
fidivs
jne
sbb
pop
popa
cmc
ret
cld
fwait
mov
inc
dec
je
call
ljmp
mov
add
or
cmp
pop
lcall
std
lcall
lahf
cmp
xorb
je
sub
and
imull
sbbl
add
push
mov
mov
dec
dec
add
push
push
sbb
pop
inc
jns
mov
ljmp
fimuls
cmpb
clc
rorl
jo
add
or
xchg
adcb
push
xchg
mov
in
mov
outsb
ljmp
xchg
out
insb
sub
movsb
mov
loop
lahf
gs
popf
movsl
stos
or
clc
adc
cmc
rolb
and
js
pop
sub
mov
jmp
push
negb
mov
or
mov
loop
and
incl
and
mov
xor
mov
cwtl
fistpl
xor
jmp
icebp
popf
sub
add
inc
lea
mov
cmp
fildll
push
lds
jo
mov
les
or
mov
int
or
call
adc
loop
pop
pop
pop
jl
push
add
nop
sbb
pop
inc
mov
out
inc
adc
imul
lods
mov
cmp
pop
adc
xchg
sub
pop
imul
rorb
imul
dec
into
add
aaa
inc
int
cmp
push
push
sbb
lret
adc
or
xchg
sub
call
loopne
ficoml
int3
mov
xchg
cmpsb
dec
cmpsb
jmp
decl
cmp
outsb
pop
ds
in
ret
push
dec
decl
push
ja
mulb
cmpl
pop
add
or
and
add
incl
mov
or
sub
decl
sub
fsts
ljmp
pushf
push
fwait
inc
adc
insl
lcall
enter
mov
dec
pop
cli
jg
nop
je
xchg
dec
dec
push
out
or
mov
mov
gs
mov
jg
fs
mov
sbb
push
sub
mov
mov
inc
pop
dec
stos
cmp
inc
mov
test
rolb
fsubrl
mov
xchg
mov
mov
or
loope
mov
lods
add
pop
mov
call
pcmpeqw
cmpb
jl
cmp
push
mov
mov
xor
cld
lock
pop
mov
es
push
add
dec
std
mov
dec
fildll
clc
inc
lds
xor
xor
call
jg
ljmp
fidivs
pop
inc
or
and
xchg
push
and
mov
pop
mov
and
and
mov
ljmp
cmp
jge
inc
lea
jl
push
test
add
cmp
rorl
sar
mov
mov
xor
test
aas
cmp
incl
lods
jl
loope
mov
sbb
push
lahf
outsl
pop
jle
popf
pop
mov
pop
jns
mov
fs
dec
cmp
je
and
cmp
adc
adc
call
dec
sbb
adc
or
xchg
ds
add
mov
add
mov
outsl
hlt
mov
mov
jno
rclb
mov
pop
inc
movsb
xlat
mov
cmp
dec
mov
mov
mov
in
add
xchg
sub
push
push
into
stos
xchg
add
or
push
incl
shl
cmpsl
push
inc
inc
dec
add
fld
mov
hlt
mov
in
das
jge
add
icebp
call
pushl
jne
mov
sbb
xchg
addr16
jns
lock
nop
test
outsl
pop
cli
dec
jbe
mov
lea
cld
push
fdivrs
jg
cmp
mov
mov
inc
pusha
lret
pop
push
sbb
stc
inc
icebp
jno
mov
in
fwait
push
flds
repnz
pop
ljmp
bound
fwait
inc
scas
mov
cmpb
clc
mov
rclb
lahf
mov
inc
imul
cmp
mov
inc
mov
in
xor
pop
jnp
add
mov
jmp
fsubr
inc
shlb
fadd
stos
and
cld
decl
lret
mov
gs
dec
mov
cmp
lods
idivl
test
sbb
orl
xchg
aas
mov
pop
pop
mov
je
push
repz
mov
pusha
push
clc
mov
aas
push
into
sub
pop
jle
dec
jne
sbb
outsl
icebp
fildll
lret
lcall
cmp
xchg
negb
jmp
mov
stos
insb
ljmp
mov
aam
std
mov
hlt
hlt
push
addl
push
incl
push
shlb
les
mov
mov
ds
mov
cmp
call
icebp
outsb
jle
cwtl
call
cmp
mov
jl
pusha
cli
or
pop
cmc
cmp
push
scas
popa
push
cmp
jmp
stos
sbb
xor
out
idiv
sbb
xor
es
adc
movsb
ss
and
mov
and
dec
sbb
xor
push
cmp
or
imul
pop
idivl
imul
stos
xchg
jle
push
aas
aas
sti
clc
cld
mov
hlt
stc
icebp
movl
mov
xor
repnz
loopne
cmpsb
lahf
and
aam
inc
das
add
xor
les
call
repz
mov
mov
iret
jl,pt
test
ja
sti
fldt
movsb
imul
mov
xor
fstpt
insl
sbbb
loope
jl,pn
pop
je
jnp
iret
pushl
clc
lock
xchg
sub
pop
jl
cmp
aas
aas
jg
push
and
xchg
cmp
imul
decl
cld
call
xchg
test
add
push
dec
fucom
xchg
sbb
insl
push
or
dec
mov
jecxz
sbb
cmp
jl
mov
pop
push
daa
jmp
push
pop
pop
mov
clc
aaa
cli
push
into
test
daa
jne
adc
jno
push
mov
xor
aam
xchg
push
std
mov
lcall
push
cmp
fwait
pushf
mov
hlt
jge
jle
pop
std
fadds
loop
outsl
hlt
pop
inc
enter
push
aam
icebp
mov
or
pusha
xor
cli
in
inc
inc
pop
mov
sub
cmp
sti
mov
into
sbb
mov
mov
xchg
xchg
ret
lods
mov
push
mov
cmp
movsb
and
mov
ret
add
or
cmp
jg
data16
sbb
ds
mov
mov
xchg
inc
push
mov
pop
call
push
inc
pop
dec
cmc
lock
xchg
jmp
cld
test
incl
mov
and
adc
add
daa
jl
sbb
mov
inc
decl
jmp
inc
or
adc
jmp
pop
cli
pushl
test
push
movsb
cmpsl
push
pop
mov
pop
and
incl
call
shl
fidivrl
mov
dec
or
std
pushl
clc
push
xchg
hlt
mov
fwait
mov
xlat
add
pop
add
lcall
mov
add
inc
je
push
lods
mov
in
inc
sbb
popl
mov
cli
xchg
mov
inc
daa
adc
or
sub
test
ret
dec
test
sbb
into
add
ljmp
dec
sbb
mov
inc
push
mov
je
push
push
sbb
lds
mov
sub
add
in
add
call
cwtl
xor
jmp
push
xchg
or
jg
xor
push
sub
cmp
ljmp
jnp
and
or
adc
ja
add
sub
mov
aas
idivb
mov
and
mov
jle
les
mov
in
out
sbb
fsubrs
cld
mov
ftst
mov
and
mov
clc
fsubr
and
mov
and
divl
int
mov
in
enter
rcr
mov
pop
mov
cld
repz
jle
mov
repnz
mov
push
test
pop
push
movsb
mov
push
pushf
movsl
aas
repnz
sbb
push
ja
mov
or
movsl
js
lock
je
insb
lea
roll
aas
clc
push
sbb
fistpll
aas
std
ds
out
dec
rclb
and
pop
pop
stc
xor
push
sub
adc
out
fwait
mov
push
adc
adc
aaa
movsl
aaa
std
mov
mov
push
lods
loopne
jl
push
adc
pop
xlat
pop
jnp
mov
jmp
push
xlat
adc
hlt
subl
jg
in
adc
jecxz
aam
setg
testl
pop
fidivrl
or
cmc
mov
mov
mov
sti
ret
cwtl
scas
aam
or
flds
test
mov
stos
push
je
nop
jno
pop
add
mov
add
clc
pop
js
adc
bound
notl
sti
in
cmpsb
in
jb
dec
inc
pusha
push
mov
fbstp
xchg
std
pop
mov
jmp
adc
scas
jecxz
pushl
pop
out
dec
popf
out
inc
push
loopne
testb
out
mov
mov
jge
lea
pop
xchg
xor
data16
fists
repz
movsl
into
add
push
filds
call
pop
fsubr
pusha
rcl
xchg
adc
xchg
scas
cmpsb
les
or
mov
in
dec
sub
loope
mov
inc
adc
mov
xchg
mov
in
loop
jle
call
cmpsb
std
or
lahf
scas
sahf
subl
mov
int3
jmp
xchg
loop
xchg
shrb
jg
movsl
sbb
in
sbb
pop
scas
ret
movsl
dec
jae
out
dec
mov
call
iret
andb
faddl
or
loopne
xchg
arpl
repz
push
loope
outsl
icebp
xchg
decb
jmp
add
repnz
das
hlt
call
pop
inc
in
xor
cmpsl
jle
jecxz,pt
jg
or
dec
xorb
pop
ljmp
mov
mov
mov
ljmp
lret
sub
inc
iret
mov
loope
cmp
add
fnstsw
decl
outsl
test
stos
popf
into
out
sbbb
add
mov
add
add
jmp
jecxz
adc
inc
ja
push
and
and
inc
js
mov
ljmp
jne
pop
pop
hlt
in
pusha
pop
lret
test
inc
or
pushl
fs
gs
inc
roll
or
add
cmp
cmc
pop
cli
lods
decl
cmp
push
xor
fdiv
lret
xlat
imul
shlb
sar
lcall
mulb
xchg
shrb
fildll
inc
cmp
inc
ljmp
pop
adc
lea
push
shll
aam
pop
ja
lods
dec
jg
lret
inc
dec
sub
sbb
jae
or
loope
sbb
pop
cmc
adc
pop
mov
push
daa
mov
inc
insl
lods
xorb
call
outsl
js
scas
sti
enter
jae
mov
loope
and
test
std
cli
push
push
enter
movsb
push
inc
aam
adc
sbb
inc
jo
out
mov
cmp
sbb
dec
cwtl
nop
stc
jb
js
pushl
xchg
mov
aad
cld
sbb
lock
sbb
mov
cmpsb
fistpll
mov
les
out
outsl
mov
call
decb
clc
loope
cli
repnz
ficoml
imul
lcall
jl
mov
js
addr16
jmp
xchg
je
mov
insb
das
ret
mov
mov
daa
pminsw
sbb
mov
sub
xor
inc
lcall
mov
js
cltd
loopne
cmp
nop
imul
and
fucomip
test
sti
sub
loope
push
fdivr
dec
xor
ret
enter
add
add
pop
cmp
jbe
sub
cmp
call
push
loopne
int3
jbe
pop
sbb
stos
inc
push
test
mov
ljmp
inc
push
loope
test
fdivrl
adcb
xchg
pop
imul
cmpl
std
pop
loopne
gs
cld
orb
call
jg
pop
push
adc
adc
je
cmpb
je
mov
outsl
cmc
fs
inc
mov
imulb
decl
ljmp
jne
out
or
stos
call
add
pop
loopne
jg
ret
lea
sub
sbb
cli
add
xor
mulb
decb
cld
and
and
dec
jb
push
add
sub
out
repz
fstp
lahf
je
pop
add
push
inc
scas
inc
mov
cmc
ret
jne
push
jle
jmp
push
push
lea
mov
push
fcomps
push
cmp
jl
mov
in
jg
lcall
dec
lret
fidivl
addl
and
call
rcrb
shlb
push
push
aas
or
pop
sub
inc
sti
lock
jmp
sbb
insb
pop
and
jne
jmp
clc
adc
or
enter
call
dec
test
mov
xchg
cmp
stos
mov
fsubl
cmc
int3
adc
fsts
les
call
mov
aas
dec
stos
cmp
cmp
or
sti
inc
ret
ret
jnp
or
mov
inc
jmp
ljmp
adc
btr
xor
pop
clc
sub
movsb
jb
pop
sbb
lock
fnstsw
orb
dec
add
adc
xorb
outsl
inc
cmp
jb
xchg
clc
mov
cmp
jbe
cmp
lea
pushf
jp
das
mov
call
loope
hlt
sub
push
cli
mov
ljmp
cmp
divl
adcw
lcall
iret
iret
mov
lcall
notl
adc
fcomi
ds
or
ja
sbb
test
test
xor
rorb
movsb
cld
cmp
cld
and
dec
jg
cmp
cli
mov
cmpsl
pop
add
mov
fisubl
aaa
clc
sbb
lods
loop
movsl
inc
stos
and
jg
pop
jae
ja
lods
repz
decl
pop
add
cmp
test
and
jb
xor
sub
mov
sub
pop
dec
std
repz
or
fiaddl
mov
and
jae
mov
ljmp
das
jmp
jbe
xchg
push
jne
pop
jmp
je
inc
xlat
cmp
xor
pop
mov
xlat
xor
cmc
cmp
push
xor
push
lcall
inc
out
push
fdiv
les
sbb
fadds
incl
fdiv
test
mull
push
outsb
sbb
test
loope
fiaddl
mov
jg
mov
pmaxsw
mov
dec
xchg
push
mov
repnz
cmp
movzbl
test
incl
push
repnz
lock
dec
int
dec
ss
repz
rcll
jnp
or
cmp
cld
adc
mov
lods
ret
cmpsl
incl
decl
stos
shrb
bnd
pop
cmc
mov
je
push
and
sahf
hlt
in
dec
cld
call
sti
xchg
je
lods
out
lret
mov
pop
mov
cmp
mov
mov
out
cmp
mov
jb
pop
sbb
js
jne
ss
or
pop
or
out
dec
and
je
scas
lahf
xor
mov
adcb
das
mov
clc
xchg
fdivrp
hlt
decl
jg
in
fs
jecxz
push
inc
sbb
pop
shlb
flds
jmp
xchg
push
js
fsub
push
jp
js
or
loop
shll
hlt
bound
xchg
call
adc
inc
push
fs
test
add
jo
fcomps
xor
jmp
rcrl
push
and
out
jmp
ljmp
inc
paddsb
add
cmpl
in
movsb
jecxz
imul
jecxz
repz
js
fnstsw
call
leave
ljmp
mov
pop
imulb
loop
jl
test
dec
loop
inc
adc
fisubl
mov
lret
xchg
leave
pop
xchg
iret
cmp
out
loop
cmp
dec
lahf
mov
sbb
out
or
sub
incl
xor
lret
push
test
push
popf
inc
iret
mov
incl
push
push
sbb
or
add
and
sbb
cld
mov
lcall
call
cmpsl
mov
inc
je
fldt
push
mov
test
arpl
incl
arpl
ss
push
xor
mov
inc
jmp
and
jle
jne
sti
sbb
int3
enter
icebp
jg
aaa
clc
mov
adc
scas
inc
adc
jne
loope
mov
push
mov
nop
pop
pop
mov
add
cmp
out
jmp
es
pop
stc
shlb
push
and
adc
dec
std
adc
pop
loopne
dec
or
jp
inc
jecxz
in
pop
decl
mov
clc
xchg
sti
repz
insb
xchg
push
push
push
imul
inc
push
push
loopne
jl
es
mov
cmpsl
pop
inc
inc
ret
lret
dec
add
push
adc
ljmp
xchg
mov
xlat
mov
das
cwtl
pop
cmpl
lds
cmpsl
les
cmp
xchg
outsb
mov
pop
lock
ljmp
mov
and
push
mov
inc
push
gs
inc
sub
adc
or
or
jg
in
gs
xchg
arpl
test
xchg
cmpsb
jmp
jne
dec
incl
jae
call
push
xor
dec
or
jle
shll
aas
call
dec
mov
nop
js
inc
jb
dec
push
imul
jmp
push
pop
push
dec
cmp
xchg
mov
sbb
adc
cltd
push
sub
mov
mov
repnz
hlt
jmp
and
outsl
dec
sub
pop
mov
or
mov
push
sbb
test
test
push
jg
movsl
outsb
adc
dec
addr16
dec
jno
ljmp
push
jp
addb
push
insb
out
push
test
test
enter
sbb
adc
jge
inc
jmp
jle
insb
not
scas
icebp
fbld
or
ljmp
sbb
pop
ret
dec
lea
push
sbb
push
cmc
jmp
jecxz
adc
push
call
movsl
arpl
in
sub
scas
xchg
fldt
call
ja
test
jb
adc
movl
cmp
enter
mov
mov
push
push
xor
lret
sbb
jno
lcall
fdivrs
out
shlb
test
xor
inc
adc
sub
push
mov
sub
sub
pushl
fistps
jne
fs
sub
into
ficompl
cmp
fs
mov
or
shll
xchg
mov
mov
call
push
imul
add
rcll
jne
rep
loop
test
flds
out
push
loopne
lcall
out
pop
les
ljmp
dec
ljmp
lcall
std
pop
mov
rcrl
lods
mov
pop
inc
mov
rcr
aas
fcoml
xchg
mov
push
fs
outsb
pop
orb
dec
fs
test
incl
xor
jb,pt
sub
shrb
scas
lods
test
ljmp
movsb
pushf
lret
xor
jg
fildll
xchg
dec
hlt
push
xchg
icebp
xchg
and
rcrl
xor
lcall
fists
jecxz
or
mov
push
je
jl
shrl
test
push
mov
dec
mov
sbb
cmpsl
mov
inc
inc
fldt
sar
scas
jg
sbb
dec
cwtl
mov
call
mov
or
xor
je
inc
xchg
or
adc
into
je
jo
ret
mov
mov
movsl
push
mov
push
cmp
lcall
out
push
movsb
xchg
push
mov
ret
aaa
xor
mov
lods
push
pushf
mov
jne
pop
lods
decl
outsl
push
adc
jmp
sub
dec
pop
push
enter
aam
call
clc
incl
and
or
cltd
out
xor
stos
inc
xor
add
xchg
jmp
call
inc
int
das
js
push
fwait
loop
inc
jmp
and
push
cmp
leave
sar
jg
arpl
cmp
jecxz
popa
ret
add
lcall
pop
xor
xor
shll
pop
jmp
inc
pushl
les
or
mov
outsb
mov
xlat
mov
jmp
insl
sbb
les
jecxz
icebp
scas
mov
or
pop
bound
in
xor
add
jnp
xor
sub
fstpl
push
inc
xchg
push
adc
hlt
pushl
cwtl
lea
in
sub
inc
mov
push
fucomip
pop
stc
testb
jmp
xorl
scas
mov
std
decl
jecxz
pop
test
or
ds
lock
dec
jp
jo
stos
cmc
mov
dec
out
add
inc
pop
je
xor
out
dec
arpl
push
mov
pop
repnz
int
loop
decl
adc
lock
push
or
loopne
lds
xchg
push
push
jo
mov
sub
push
test
daa
push
adc
xchg
jo
fisubl
xor
pop
mov
mov
cmc
push
adc
outsl
add
decl
cmp
push
ficompl
adc
aaa
cwtl
fucomip
xor
jns
push
movsl
lea
inc
and
mov
clc
decl
mov
sbb
hlt
adc
jge
adc
mov
push
shrl
xchg
dec
aam
call
orb
jb
je
xor
dec
mov
mov
js
inc
outsl
inc
xchg
mov
xor
in
add
add
sahf
mov
mov
pop
bound
popa
sbb
pop
pop
xor
push
push
push
adc
in
incl
lcall
lahf
add
sub
mov
lcall
jle
icebp
movsl
push
fsts
pop
adc
mov
cmp
jg
js
mov
jp
and
shll
xchg
jecxz
mov
xchg
jno
ds
ljmp
xchg
sub
dec
push
mov
ss
xor
inc
aad
int
push
push
addr16
lret
adc
rcl
add
push
push
adc
or
mov
cmp
xchg
addb
cmp
add
rorl
sbb
rolb
pushl
sub
dec
stos
rcrb
mov
push
or
jle
push
or
or
out
clc
test
pop
push
nop
mov
enter
loopne
add
dec
xsha256
cmpsb
rclb
and
fs
add
mov
lea
push
or
push
icebp
push
bound
xchg
and
lahf
cmp
cmp
push
mov
sahf
xor
mov
das
lds
decl
pop
insl
lock
mov
mov
or
jg
add
cli
sub
cmpsb
xchg
test
bound
mov
inc
lds
call
ret
pop
push
push
sbb
jo
addl
mov
pop
ljmp
mov
jns
mov
rcrb
mov
stos
hlt
decl
nop
lock
xchg
aaa
pop
les
cld
decl
sub
and
inc
sbb
aas
ret
lds
sbb
outsl
shll
mov
add
dec
pop
enter
rorl
incl
ret
cmp
mov
jnp
mov
roll
test
mov
call
mov
pop
add
cmpsb
hlt
inc
or
decl
in
popf
nop
in
fs
movsl
sahf
aad
movsl
lods
mov
adc
mov
int3
add
pop
xchg
mov
mov
push
jecxz
lea
dec
ljmp
test
scas
cwtl
mov
pop
push
mov
or
xchg
sarl
jg
ret
mov
into
lock
test
je
ret
jg
test
lret
inc
out
push
mov
adc
call
sbb
pop
outsl
addb
sbb
pop
mov
xchg
push
mov
push
test
or
dec
sahf
push
out
cld
arpl
or
divl
mov
je
mov
call
push
pusha
into
xchg
push
sub
outsl
or
jns
popf
jnp
push
sub
scas
sub
cmp
cmpsb
and
cmp
das
icebp
ljmp
push
push
jne
pop
push
cmp
hlt
push
dec
cmp
adcl
cmp
aas
dec
or
repz
sbb
jmp
pop
loop
sbb
addr16
fnstsw
xchg
cltd
cwtl
imull
and
mov
lock
repz
cwtl
jno
cmc
jmp
xor
popf
stos
push
fs
rcr
scas
repnz
lcall
mov
cmp
fwait
cmp
jmp
mov
and
lcall
lea
adc
adc
jo
and
adc
lcall
or
mov
jmp
lods
pushf
adc
xor
adc
mov
mov
mov
les
arpl
xchg
cltd
hlt
sar
jg
out
cwtl
adc
jle
xchg
pop
data16
push
imull
cltd
adc
adcb
push
mov
mov
xchg
fisubl
mov
inc
decl
iret
sbb
add
jge
xchg
rcrb
cmp
call
nop
scas
add
test
mov
in
xor
pushf
shr
lret
inc
das
sbb
jmp
mov
inc
inc
out
mov
mov
push
mov
lret
insl
scas
mov
mov
call
inc
sub
int3
roll
insb
outsl
add
data16
enter
addr16
outsl
jge
outsl
negb
mov
fcompl
test
pushl
lcall
push
adc
mov
xchg
add
lret
les
sbb
das
repz
testb
add
cli
das
lock
mov
jg
pop
insb
loop
xchg
dec
dec
mov
pop
fwait
jmp
sbb
je
aad
push
xchg
daa
cld
dec
adc
jecxz
cmp
es
mov
call
stc
xor
push
xchg
aam
rcrb
stc
add
nop
jg
ljmp
jl
js
lea
movb
divb
fwait
pop
mov
push
pop
cld
mov
sbb
sub
sti
idivb
mov
inc
orl
mov
cld
ljmp
push
sbb
fistpll
push
push
push
call
call
xor
into
scas
pop
xor
sbb
mov
nop
lahf
pop
outsb
in
pop
test
mov
mov
mov
enter
inc
in
icebp
push
pushl
jp
xor
mov
loope
push
nop
aaa
mov
push
cmc
ljmp
les
adc
cmp
jl
out
xchg
jmp
cld
and
push
incl
mov
daa
xor
lahf
sub
dec
lcall
xor
push
pop
push
pop
lock
xor
lcall
aas
add
decl
std
lea
ret
xor
lock
lcall
cs
sar
jg
push
mov
adc
push
inc
inc
pop
mov
pushl
gs
mov
ds
or
xlat
mov
cmp
fidivrl
mov
adc
test
and
popf
pushl
iret
sbb
sbb
lret
xor
cld
jo
enter
aam
sbb
pushl
gs
mov
sbb
and
and
sub
decl
pop
cltd
out
cmovno
sub
inc
fstps
fimull
sbb
xchg
mov
cmp
push
push
inc
mov
sub
and
lcall
int
pop
frstor
mov
hlt
cwtl
add
mov
ds
lcall
push
scas
test
fmuls
push
mov
add
es
incl
lea
lock
adc
cmp
inc
add
jecxz
pop
mov
mov
push
and
gs
xlat
inc
and
sub
fucomip
mov
adc
and
inc
insb
pushf
jecxz
test
cld
outsl
cld
clc
test
add
push
jmp
adc
bound
pop
call
call
push
mov
mov
pop
fwait
test
dec
xor
js
mov
sub
mov
gs
in
pop
cmpsl
arpl
xor
pushl
xchg
jns
jae
mov
addb
push
clc
mov
clc
push
push
inc
push
mov
or
ljmp
ljmp
nop
pop
dec
xor
push
inc
bound
sbb
jmp
jmp
add
pop
jbe
xchg
cmp
ret
loope
addr16
rclb
or
jl
clc
or
pop
fsts
aaa
bound
mov
int
sub
mov
pop
loope
std
push
sbb
dec
scas
push
jo
xchg
cld
cltd
dec
fs
ljmp
adc
inc
lds
in
ss
sbb
cld
call
test
mov
sbb
or
add
inc
clc
and
outsl
lea
les
add
mov
insl
call
sahf
xchg
cmp
add
dec
add
aas
adc
call
jne
testl
xor
imul
add
lea
dec
cld
incl
add
cmpsb
and
xchg
pushw
movsb
add
mov
and
jbe
decl
or
sbb
cld
push
bound
adc
ficoml
xchg
lcall
pop
mov
or
push
push
enter
pop
scas
cmp
pop
lret
imul
mov
jg
lret
movsb
and
xchg
shlb
cmp
push
in
je
sbb
ret
mov
cmp
pop
jb
andb
sbb
push
call
enter
jmp
pop
test
cld
jmp
out
xchg
jne
fistpll
sub
je
add
int
ja
test
ljmp
inc
mov
mov
xchg
xchg
loop
cli
lcall
cld
movsb
and
xchg
dec
push
push
jmp
mov
pushf
jno
repnz
sbb
xor
or
jne
push
inc
push
xchg
clc
push
jnp
dec
rorb
and
adc
mov
or
lcall
imulb
mov
sub
mov
mov
es
mov
push
sub
outsl
std
ljmp
add
test
jne
call
jo
pop
cmpl
pushf
dec
cmp
jp
mov
xchg
push
andl
add
pop
imul
mov
cmp
mov
clc
pushl
lcall
sub
sbb
pop
sbb
adc
out
mov
mov
xor
imulb
outsl
dec
xor
frstor
stos
test
das
xchg
sbb
dec
mov
sahf
aas
push
xchg
cmp
insb
imul
jmp
mov
fcos
add
sbb
ret
cld
and
clc
pop
jne
sub
and
inc
pop
decl
std
lods
xlat
pushf
pusha
jmp
xchg
out
dec
lods
add
adc
ljmp
aad
test
ret
je
decl
or
xchg
push
mov
jge
cld
cld
push
jl
dec
roll
fisubs
imul
incl
jecxz
sbb
aad
add
mov
jmp
lcall
cli
lods
movsb
sahf
add
and
adc
mov
jo
mov
jg
dec
lea
inc
addl
inc
movsl
sbb
dec
and
inc
stc
sbb
out
pusha
fsubr
in
clc
mov
ljmp
cmp
pop
jg
aaa
sub
rclb
mov
cs
mov
cmc
std
ljmp
mov
in
jne
xchg
mov
inc
adc
dec
outsb
nop
xchg
xor
inc
ljmp
push
push
and
aas
dec
inc
and
or
test
orl
stos
ljmp
pop
test
sbb
jp
cmp
pop
pop
insb
jne
cmp
sbb
jg
dec
popf
dec
push
insb
sub
cli
xchg
arpl
dec
mov
mov
ffreep
cli
adcb
movzwl
cmp
xor
sub
sbb
pop
icebp
imul
inc
push
fists
lea
mov
cmp
decl
testl
dec
inc
lds
fisttps
mov
jo
daa
nop
mov
xor
and
jl
mov
push
jmp
mov
or
xor
cmp
lcall
repz
test
xor
out
and
sahf
imul
dec
xor
lds
ljmp
adc
ficoms
jp
pop
inc
push
sbb
sbb
or
xor
cmp
mov
push
movsb
xchg
push
sbb
or
jne
jmp
cmp
adc
cmp
decl
dec
xor
orl
mov
sbb
cld
test
push
ret
and
pop
push
pop
mov
push
inc
adcl
incl
cmp
dec
cmp
sub
push
push
call
lcall
xchg
sub
sbb
lret
pusha
sbb
dec
movsl
out
repz
cmp
mov
pushl
repz
int3
xor
inc
add
or
xor
call
sbb
insl
sarl
sub
xchg
cmpsl
lds
mov
lcall
sub
sub
add
orl
xor
or
jmp
pop
xchg
arpl
jge
or
inc
pushl
push
cmp
xor
test
ret
and
lods
in
lock
cli
or
ret
mov
cltd
xor
test
adc
pop
loopne
or
push
or
xchg
cmp
and
iret
inc
jne
shlb
cs
inc
xor
imul
call
pop
add
cmp
jecxz
dec
insb
jbe
mov
ret
sbb
mov
imul
dec
and
stc
and
scas
rolb
add
jbe
mov
xor
jg
dec
sub
pop
int
lds
mov
rcrl
push
or
mov
call
pop
insb
hlt
xor
jmp
fcomps
out
xchg
cld
and
mov
xchg
stc
icebp
test
add
lds
jg
pop
pusha
mov
add
decl
inc
adcl
mov
into
inc
jo
inc
sub
or
xor
aaa
clc
mov
xlat
gs
cwtl
lods
xchg
mov
fs
stos
in
cmc
ljmp
daa
add
mov
push
xlat
clc
in
gs
adc
pop
movsb
aam
aas
iret
pop
mov
adc
mov
hlt
enter
or
or
sub
mov
mov
call
outsl
mov
and
fnstcw
sbb
xchg
mov
dec
inc
xlat
sbb
jo
fmul
add
mov
aam
xlat
ljmp
jo
loope
xchg
or
insl
pop
shr
push
hlt
inc
pop
outsb
xchg
cli
ljmp
push
cmpsl
test
xor
xor
adc
mov
fistps
dec
xor
int
mov
call
dec
jo
push
adc
mov
pop
mov
sarb
sub
jne
std
lods
jmp
mov
sbb
adc
je
test
ss
subb
out
lock
incl
rcl
addl
out
add
out
or
or
daa
lods
sbb
sahf
mov
mov
gs
mov
xor
fdivl
xchg
pop
xor
inc
call
outsb
stc
xor
push
and
pushw
jge
mov
cmc
dec
and
movsl
mov
mov
mov
mov
sub
in
mov
dec
fsts
stc
test
pop
or
xchg
cmp
mov
lea
and
popl
and
mov
aad
sarl
aam
test
inc
xorb
sub
or
adc
mov
ja
add
daa
or
xor
cmp
xchg
xchg
jnp
dec
and
pop
outsb
sysenter
or
inc
fldcw
add
pop
adc
mov
data16
fadds
decl
push
ret
pushf
or
sbb
mov
push
jmp
jae
lret
cli
les
sar
test
pop
decb
nop
jp
push
filds
divb
sbb
sar
icebp
xchg
and
pop
subb
std
out
xchg
sbb
inc
mov
lahf
adc
mov
push
stc
pushf
cmpsb
js
pop
push
xchg
jns
sar
clc
das
mov
cmp
push
pop
mov
xor
decl
std
adc
call
and
in
xor
insl
push
sub
jmp
xor
out
pusha
stos
sub
loop
push
xor
fldt
cwtl
inc
jg
mov
or
add
call
pushl
repz
cmp
xchg
pop
cld
incl
loopne
popf
call
pop
cltd
pop
pop
xchg
int3
pop
mov
sub
cmp
cmp
and
test
pop
xchg
add
test
inc
mov
out
xor
mov
roll
movsb
mov
insb
jmp
lahf
push
daa
sbb
decl
je
enter
xor
ljmp
jnp
push
cld
repz
push
nop
add
sub
cmp
mov
push
mov
fcomp
es
jno
push
addb
lock
cmp
mov
out
push
ret
in
add
mov
js
mov
add
or
pop
pop
ljmp
adc
xor
push
call
sbb
and
mov
push
aas
pushf
movsb
pop
fs
in
mov
test
loopne
or
cmc
shll
sub
test
int3
jle
ficoml
mov
dec
std
decl
mov
xor
xor
push
or
rol
sbb
sub
inc
xchg
mov
scas
cmpl
jmp
outsl
or
add
call
sbb
add
sbb
inc
hlt
popf
outsb
icebp
inc
add
call
pop
cli
mov
dec
mov
cmp
call
clc
das
jo
in
and
adc
mov
int
xor
inc
or
fadds
scas
cmp
andl
sbb
jno
cwtl
jg
push
dec
daa
loopne
jae
cs
push
cmp
jbe
mov
push
cmpb
call
sbb
mov
mov
sub
ds
xchg
pop
jnp
fcoms
mov
xor
push
xchg
sub
push
orb
ror
push
pop
mov
add
ffreep
pop
jge
decl
jae
std
xchg
movsb
adc
test
je
aad
imul
pop
cli
rclb
cmp
add
adc
mov
incl
outsb
add
jno
sub
pushl
cld
add
addr16
pop
ret
aas
test
pusha
add
incl
das
inc
inc
mov
sub
iret
movl
enter
decl
mov
or
mov
pop
add
lods
dec
dec
pmulhw
je
pop
mov
decl
push
mov
imul
rclb
sub
loop
or
incl
roll
push
in
repz
notb
mov
fs
inc
inc
sub
cld
jmp
sub
lea
push
stos
jno
stos
and
adc
xchg
clc
mov
rol
ds
or
add
jmp
ret
push
mov
cmp
jae
adc
pushf
xchg
xchg
clc
mov
ss
jl
cmp
jl
mov
in
call
decl
mov
das
cmpsl
xchg
or
and
push
push
mov
dec
adc
aam
or
xchg
mov
push
cli
adc
es
clc
inc
push
pop
or
shr
push
cwtl
mov
cmc
dec
dec
add
add
call
jnp
fs
ljmp
mov
jne
aas
push
fisubrl
mov
jg
cmp
pop
pop
mov
clc
add
imul
loopne
mov
jmp
mov
sbb
js
stos
int
in
inc
icebp
pushaw
mov
mov
adc
xchg
sub
cwtl
into
lock
inc
movsb
das
inc
jae
andl
decl
pop
mov
jne
push
sub
out
into
leave
push
add
decl
xchg
jge
pusha
cmp
and
mov
hlt
pop
cli
imul
jl
and
adc
pop
jl
mov
push
icebp
sahf
in
ss
addr16
ljmp
hlt
imul
mov
movsb
inc
jg
or
jecxz
inc
aad
ja
cwtl
rcrl
jle
rolb
fwait
incl
call
fildll
add
cwtl
push
adc
iret
call
ds
loopne
or
outsl
std
les
pop
loopne
repz
xorl
decl
ds
js
jge
mov
fwait
mov
sbb
dec
sbb
filds
pop
pop
or
mov
loopne
and
lock
add
ret
int3
ret
in
popf
mov
xchg
test
pop
sbb
call
inc
or
xor
add
cmp
xchg
outsl
add
lods
inc
gs
test
into
push
call
push
stos
cmpsb
mov
ljmp
into
addb
arpl
dec
pop
insl
mull
ds
in
lea
sar
ljmp
hlt
ret
shrl
iret
es
popf
mov
mov
pop
iret
sahf
push
lods
pop
or
lcall
add
push
mov
imul
pushf
repnz
addb
or
push
xor
mov
xor
dec
adc
push
incb
inc
pop
inc
pop
push
dec
add
testl
push
jg
das
add
sbb
out
or
add
mov
out
dec
lcall
mov
les
and
inc
out
cli
fistpll
fcmovb
inc
aam
mov
in
mov
jns
lods
sbb
sbb
push
les
lds
cmp
fs
push
jne
rcrl
lock
jmp
sti
push
ret
or
dec
pop
sub
imul
test
scas
loop
and
sbb
clc
outsl
in
or
or
dec
xor
loopne
sbb
jbe
mov
adcb
ljmp
cli
or
fistl
jg
test
cmp
add
jl
shll
push
dec
mov
jne
jle
push
inc
xchg
cmp
pop
sub
push
inc
aaa
ficoml
pop
std
xor
decl
std
mov
insl
je
loopne
sub
icebp
inc
cltd
mov
mov
movsl
cli
fmull
nop
mov
mov
cmp
cmp
or
mov
lcall
mov
push
add
mov
enter
pop
mov
mov
push
lods
add
je
cmp
push
pushf
pushl
mov
data16
jne
movb
jecxz
sbb
insl
pop
outsb
outsl
jo
xchg
mov
add
xor
lcall
mov
mov
or
jno
movsb
sbb
repz
add
mov
outsl
fsubr
pop
dec
or
push
jae
pop
outsl
into
mov
faddl
push
jne
push
frstor
and
adc
sub
aaa
cld
lcall
decl
nop
mov
lcall
or
fs
call
repz
push
xor
xchg
mov
sbb
mov
push
add
test
cmp
push
push
sub
sahf
clc
mov
pop
add
cmp
call
or
dec
xor
lods
pop
inc
mov
outsb
push
in
rol
and
dec
mov
call
adc
inc
xchg
mov
jmp
mov
movsl
int3
cmpb
aam
mov
nop
mov
stc
sbb
int3
outsl
incl
xor
out
pop
and
push
ficoml
inc
fs
add
cmp
jmp
orl
lcall
or
xchg
nop
adc
loop
mov
jp
xchg
fwait
adc
mov
pop
ret
mov
sub
ds
sti
ljmp
inc
inc
add
loopne
xor
aam
lea
push
mov
das
push
mov
cmp
addr16
mov
dec
sub
aad
stos
movsl
or
and
pushl
mov
sbb
in
cwtl
dec
sbb
out
cmpsl
sub
rol
outsl
cld
lods
dec
add
ret
je
dec
sub
cmp
lock
ljmp
int3
pop
addr16
xlat
sbb
jmp
aam
jmp
jb
lret
mov
sub
std
rolb
xor
leave
fildl
mov
xor
sub
stos
jb
mov
decl
lea
cs
xor
jb
sub
hlt
call
jg
out
mov
cld
sbb
inc
or
push
xchg
lds
aaa
adc
incl
in
push
loopne
mov
mov
outsl
add
ss
jmp
sar
lcall
push
xchg
inc
add
push
sub
add
je
add
in
sub
adc
loop
mov
add
inc
lods
mov
addr16
adc
or
cmp
pop
clc
mov
cmp
pop
push
mov
test
mov
mov
cmp
movsb
add
rclb
mov
into
hlt
sub
sub
lcall
pop
je
jne
inc
mov
sbb
sbb
shr
cmp
movb
cmp
imul
add
repnz
cmp
mov
pop
push
daa
sub
call
rorl
add
or
and
test
xchg
or
adc
mov
xor
pop
outsl
cmc
mov
mov
xchg
or
pop
mov
ljmp
cmp
mov
dec
push
fildll
out
sbbl
popl
mov
adc
lock
test
adc
and
int
or
cmp
lret
mov
mov
add
repnz
xor
andl
pop
icebp
lret
xor
fwait
decl
xor
inc
sub
or
push
sbb
sbb
inc
std
call
push
adc
aas
fstpl
outsb
lods
push
stos
push
cmp
pop
sub
mov
iret
daa
pop
clc
call
inc
insb
movsb
pop
mov
leave
in
aad
and
aas
mov
push
clc
lcall
andb
cmp
xchg
sub
xchg
je
cmp
cmp
lods
cmp
into
int
mov
push
mov
ret
cmp
mov
call
imul
xorb
pushl
mov
outsl
aam
lea
lock
cli
inc
push
adc
xor
sbb
sbb
jne
ljmp
sti
aam
gs
jne
test
test
add
cmc
sub
fs
xchg
addr16
mov
add
sbb
jo
mov
ret
pop
orl
sbb
dec
inc
and
xor
mov
mov
sub
mov
lock
movsl
fwait
sub
pop
xor
arpl
lods
sti
pusha
jo
lock
lock
lock
push
loope
mov
push
ljmp
and
es
test
loop
inc
adc
std
std
xchg
stc
insb
add
hlt
adc
incw
decl
dec
push
pop
es
test
sarl
pusha
push
or
ljmp
xchg
mov
or
loop
cmp
aad
pop
adc
out
bound
lcall
loope
jle
mov
pop
cmpsb
sub
push
mov
inc
lods
add
test
mov
jmp
pusha
popf
add
push
bound
or
push
jg
mov
and
jp
or
shlb
jmp
and
imul
mov
inc
cmp
sahf
inc
movsb
push
pop
mov
add
outsl
fucomp
dec
jo
sub
dec
and
push
incl
inc
push
cli
jg
loope
adc
icebp
cmp
inc
mov
int
call
mov
sub
cmp
jp
mov
aad
test
rorl
stos
xor
out
xchg
dec
pusha
ljmp
jno
mov
mov
jg
stc
loopne
inc
sub
stc
stc
jno
imul
jns
js
das
push
mov
sbb
jecxz
test
mov
dec
dec
sub
mov
mov
into
in
xor
push
stos
les
pop
push
lret
repnz
push
inc
add
push
pushl
pop
pop
and
cmp
clc
hlt
xor
bnd
lcall
mov
mov
adcb
xchg
mov
xchg
xchg
popf
je
mov
jg
and
xor
jg
jg
mov
lret
ret
incl
popa
sub
adc
push
add
loope
add
push
and
inc
push
mov
decl
mov
out
mov
ja
mov
je
ds
loopne
cmpl
mov
cwtl
stos
push
incl
jg
rep
xchg
fiadds
jmp
or
cmp
lods
pusha
fs
jge
das
cmc
lcall
and
mov
add
fnstcw
jge
add
outsl
xchg
ljmp
stc
adc
hlt
sub
cmp
sbb
lock
test
sub
das
mov
push
dec
mov
iret
call
pop
sub
inc
enter
lods
inc
sub
push
mov
push
add
icebp
adc
inc
sub
pushl
filds
add
xchg
sbb
enter
cli
filds
mov
sub
jmp
jl
adc
mov
js
mov
sub
gs
das
cld
hlt
add
sbb
add
xor
in
or
inc
and
rorb
das
std
sbb
or
pop
mov
jns
loopne
inc
add
xchg
inc
inc
str
xor
mov
push
mov
add
popf
mov
pop
fld
push
sbb
leave
or
fwait
test
repnz
add
ja
jb
cmp
ja
push
jg
ljmp
or
sbb
lret
rcr
leave
pop
ja
orb
add
std
incl
mov
inc
inc
cmp
int3
cmp
xor
repz
mov
jmp
sbb
sbb
mov
rorb
test
call
add
mov
adc
in
mov
xchg
movsb
rorl
and
test
mov
inc
xor
pop
pop
mov
outsb
mov
adc
je
bound
or
ljmp
fsubrs
mov
lods
mov
aaa
test
cmc
ljmp
adc
sub
bnd
fs
inc
loopnew
sub
sar
cmp
je
and
mov
or
and
gs
ljmp
mov
das
mov
push
push
fs
lea
and
adc
std
pop
and
ljmp
fs
lea
not
mov
call
xor
mov
push
mov
popa
std
jg
clc
add
push
insb
nop
adc
mov
stos
les
sti
push
jg
pop
jae
xor
sub
sbb
insb
data16
loop
ljmp
and
xchg
lret
insl
ret
adc
hlt
dec
aas
mov
or
call
fistpll
pop
mov
or
inc
and
push
cmpsb
inc
incl
adc
lods
cwtl
or
in
enter
movsb
xor
leave
adc
call
xor
repz
inc
jecxz
mov
push
and
in
out
mov
push
js
repz
jmp
mov
mov
loopne
cld
inc
test
decl
jg
and
inc
sub
fcoms
scas
lds
outsb
push
test
xchg
jmp
fs
stos
push
sbb
into
add
jmp
mov
test
sbb
dec
cmc
js
shl
decl
cli
and
je
cs
sbb
jp
sbb
jno
push
xor
sbb
lcall
push
add
aad
or
cmp
cld
sahf
pop
adc
cmpsl
mov
xor
mov
jmp
sbb
sbb
lock
inc
jne
lods
je
jmp
rcll
js
mov
cmp
dec
aam
sub
movsl
lds
xor
jle
xchg
add
ss
and
ljmp
dec
mov
je
lret
pushf
or
les
mov
clc
adc
pop
outsl
cmc
das
cmc
pop
and
and
adcb
sub
cmp
sti
das
push
lret
inc
std
push
in
push
xchg
dec
xor
rclb
push
jp
aas
loope
mov
sbb
or
jbe
xor
ret
out
add
pop
lcall
xchg
lret
imul
pusha
mov
fnsave
or
or
jecxz
pop
or
push
in
outsl
icebp
dec
out
bswap
cmp
icebp
sbb
mov
cs
leave
mov
sbb
push
adc
xor
xchg
jne
pop
sbb
push
sbb
andb
mov
lret
adc
pop
cmc
mov
lret
insb
dec
cmpsl
test
jmp
call
adc
inc
cld
ljmp
jns
wrmsr
cmp
lahf
inc
and
lahf
pop
clc
pop
clc
xlat
inc
rcr
cltd
jge
rcl
lcall
adc
pop
sub
sbb
sub
pop
sub
dec
sbb
cmp
enter
nop
mov
mov
cmp
mov
cld
aas
test
dec
inc
inc
out
jns
or
pushf
lret
dec
test
jbe
pop
cli
add
push
or
pop
clc
call
sbb
sub
insl
cmp
icebp
les
pushl
dec
movsb
fcoms
hlt
clc
inc
jecxz
xor
enter
test
sbb
stc
sbb
lret
loop
cmpsl
addb
dec
mov
pushl
call
daa
int
and
jmp
shll
adc
ljmp
cwtl
xor
mov
bound
ss
and
jb
cmp
or
insb
jne
pop
clc
lcall
jns
sbb
jmp
jae
std
mov
mov
dec
xchg
sub
icebp
dec
push
and
movsl
mov
push
in
test
mov
ljmp
mov
jl
cmpsb
testl
shlb
cmpsl
jmp
fwait
jo
jle
cmc
lcall
cli
dec
xor
pusha
scas
sub
std
push
xchg
enter
mov
xchg
mov
mov
sbb
in
aam
divl
and
cmpb
dec
fucomi
ljmp
dec
cmpsb
movsl
jnp
add
lea
pop
sub
aad
jg
sti
mov
pop
addr16
out
cmp
rcll
js
lods
push
xor
dec
outsb
insb
test
push
in
shll
push
inc
and
jns
test
add
testl
sbb
outsl
mov
sub
popa
mov
jg
mov
cmpsb
push
aad
jmp
movsl
dec
pop
push
xor
jmp
sub
push
sub
lret
cltd
push
fsin
jg
call
inc
and
mov
out
sahf
jne
or
or
ljmp
lock
mull
inc
std
or
inc
mov
lods
loopne
leave
lock
iret
andb
cltd
push
dec
jp
inc
mov
lea
push
pop
fs
in
and
lret
sbb
sub
cld
incl
mov
movsb
lret
dec
dec
push
call
cmp
cli
jb
mov
sahf
push
pop
pushf
push
pop
jne
cmp
or
ret
ret
fiaddl
xor
mov
call
mov
sub
cmp
add
inc
cmp
push
mov
add
stos
xchg
incl
xor
and
lea
xor
andl
or
and
sahf
push
mov
punpcklwd
sub
inc
pop
mov
xlat
mov
lcall
mov
jge
sbb
mov
les
movsl
in
arpl
hlt
lcall
test
les
mov
or
or
xor
cmp
jle
mov
fs
inc
imul
push
pusha
les
pop
je
inc
mov
sub
pop
cld
jmp
sub
lds
pop
das
add
mov
push
mov
insl
cmc
and
lds
and
ljmp
nop
lds
lds
xor
jp
pop
push
arpl
fistps
inc
loopne
adc
shll
jg
cld
or
or
pusha
pop
or
cld
or
add
and
test
jle
cmp
je
pushl
push
mov
pop
enter
sub
mov
adc
mov
jg
rclb
push
and
roll
int3
cmp
push
bound
xor
jo
mov
cmp
mov
ret
mov
inc
jno
xor
in
call
cmp
jle
sbbl
sbb
push
push
mov
mov
std
xchg
mov
add
or
sbb
pop
xor
das
fisttpll
stc
cmp
in
add
xor
je
push
icebp
mov
ja
das
icebp
inc
xchg
sub
leave
jmp
dec
outsl
pop
xchg
pop
repz
sbb
incl
push
inc
aam
mov
inc
sbb
jg
mov
lods
push
lock
shlb
inc
cmp
push
fildl
lods
faddl
popa
push
repnz
sbb
lcall
ja
dec
sti
push
xor
mov
and
sti
ret
and
inc
dec
push
pop
test
popf
add
adc
clc
push
ljmp
addr16
int3
mov
test
leave
pop
and
nop
adc
push
pop
ficoms
mov
jne
jb
aaa
dec
dec
mov
fucomip
mov
inc
dec
push
sbb
lret
mov
pop
enter
mov
sti
lcall
add
xchg
push
imul
lret
inc
and
jmp
aam
jmp
push
xchg
xchg
pushf
shlb
push
cmp
lods
out
jg
push
sub
or
mov
rcl
fwait
or
stos
sub
push
jp
ljmp
ljmp
sub
test
sarl
mov
ljmp
fisttpll
lahf
add
mov
or
pushf
incb
or
lds
in
and
bound
jae
cmpb
cld
jne
inc
mov
mov
aaa
clc
decl
add
cmp
cmpsl
add
sub
sub
cli
jg
decl
push
cmp
je
mov
mov
call
xchg
sbb
adc
fdivrs
mov
add
incl
popl
subl
add
stos
inc
divl
es
and
push
xchg
out
fucomip
push
pop
xchg
ja
fmuls
jle
clc
mov
test
je
mov
outsl
lock
sub
push
popa
sub
sbb
jmp
test
cmp
enter
sub
mov
inc
push
mov
loop
mov
test
pop
mov
mov
mov
push
test
and
fcoms
scas
ljmp
icebp
push
adc
popa
xor
jne
dec
pop
pop
adc
and
jmp
incl
ljmp
decl
movsb
ja
call
mov
push
mov
mov
mov
jne
incl
mov
sar
jg
cmp
mov
inc
sub
push
imul
aad
adc
call
adc
shll
cmp
je
xchg
jae
jb
pop
hlt
or
push
incl
inc
add
mov
mov
mov
or
or
inc
mov
cmc
xor
cwtl
rolb
push
mov
cmp
mov
pop
call
ss
dec
dec
dec
mov
mov
call
pushl
mov
pop
stc
lds
mov
addr16
cmpw
je
inc
inc
cwtl
ljmp
inc
cmp
pop
dec
test
data16
movsb
and
test
mov
cmp
test
inc
icebp
ds
xor
mov
incl
decl
test
nop
int
cmp
test
pop
test
testb
outsb
cmp
jmp
lock
popf
xor
add
jl
ja
add
orl
inc
pop
call
dec
xchg
loopne
xchg
mov
push
cli
jg
push
xchg
pop
or
xchg
ret
int3
push
mov
or
dec
dec
mov
push
into
cmp
jb
neg
xorl
ljmp
loope
sub
mov
add
sub
cmp
enter
xchg
adc
xchg
lret
jmp
lcall
rep
or
out
dec
arpl
pop
pop
and
push
dec
adc
cmc
dec
adc
mov
cmp
jbe
enter
jb
push
jmp
add
stc
or
pop
push
orl
xor
incl
xlat
add
loopne
add
test
mov
ljmp
nop
sbb
lods
shlb
shll
xor
mov
adc
imul
and
pop
nop
mov
into
clc
ljmp
addr16
add
push
xchg
jne
add
jbe
leave
out
aaa
and
push
aad
mov
cltd
xor
lret
jmp
sbb
ss
mov
mov
mov
dec
call
pop
mov
fdivl
hlt
out
or
or
pop
call
pushaw
mov
lock
inc
hlt
mov
mov
cmp
cmp
cld
xchg
fwait
leave
lods
pop
nop
outsl
jp
jecxz
call
mov
rorb
push
je
repz
or
and
icebp
sahf
sbb
dec
cld
clc
outsl
je
sbb
lret
lret
test
icebp
pop
sar
sub
outsb
les
in
sbb
pushl
lret
mov
jmp
inc
out
out
jns
shll
mov
mov
xor
shr
jns
nop
int
in
sub
sbb
out
push
jb
lcall
mov
jmp
jae
int3
aam
repnz
addr16
mov
sbb
jns
stos
sbb
sahf
or
adc
or
ss
or
mov
fbstp
cmp
sub
mov
lret
push
out
pop
call
dec
xor
and
cmp
add
sbb
inc
dec
cmp
dec
adcb
or
jo
sub
and
bound
mov
test
mov
mov
shrl
inc
inc
into
push
push
addr16
shll
xchg
mov
or
pushl
push
mov
push
popa
push
xor
mov
inc
inc
pushf
adc
jg
inc
ret
test
push
cmp
call
loope
call
daa
push
sbb
dec
in
cmpsb
test
mov
xchg
pop
jmp
push
out
sub
cli
insb
ret
push
test
inc
push
sub
add
pop
rclb
and
call
mov
mov
add
popf
pushl
ret
or
ret
test
inc
cld
xor
and
icebp
jmp
mov
jmp
lea
rol
mov
std
xchg
mov
fucom
mov
enter
aad
mov
push
out
push
dec
lret
xor
sub
and
test
mov
add
add
fs
and
and
add
mov
call
jl
jecxz
arpl
adc
pop
mov
lock
cmc
fdivp
decl
lret
stc
mov
pusha
test
pop
push
dec
jnp
inc
lcall
call
lods
sbb
ljmp
mov
aad
pop
mov
arpl
enter
or
nop
sub
std
aaa
shlb
testl
aad
frstor
mov
in
aaa
sbb
cld
pcmpeqw
cmp
sub
fistpll
xor
inc
push
test
enter
jb
lcall
das
adc
pop
scas
pop
notl
and
sbbb
sub
add
das
cld
adc
fnstcw
scas
add
pusha
pop
pop
clc
jg
fs
jmp
mov
add
movd
jae
or
cmp
clc
jae
xor
sub
add
sbb
push
int
shrb
sar
jmp
cmp
jl
repz
add
or
test
mov
cs
jnp
mov
loop
add
push
aam
ret
aad
mov
clc
inc
or
cwtl
out
insb
repz
pop
sub
std
jmp
cmp
leave
ret
or
or
daa
jo
fadd
int3
subsd
jmp
fldz
ret
fildl
pop
cmp
aad
loopne
mov
mov
nop
mov
jl
mov
pop
movl
test
repz
sub
xchg
pop
and
lea
ljmp
lods
adc
es
movsb
and
cld
pusha
loop
in
fld
fstps
cs
sbb
adc
pop
mov
mov
mov
pop
test
test
jns
fcos
outsl
icebp
lcall
mov
xchg
adc
xor
pop
add
rolb
adc
rcl
mov
push
mov
or
mov
push
sbb
xchg
dec
or
pusha
call
mov
sbb
mov
add
stos
loop
jle
bound
icebp
insl
loopne
lcall
imul
shlb
mov
push
mov
ja
mov
in
push
add
push
roll
add
adc
jmp
dec
inc
push
std
inc
add
fadd
mov
or
mov
cmp
dec
orl
mov
test
pavgb
incb
lods
sbb
jb
int
fisubrl
pop
ret
cld
mov
fcmovnbe
dec
or
jecxz
or
clc
decl
mov
xchg
jo
or
fldt
sbb
adc
lcall
adc
rorl
or
sub
incb
xor
das
add
andl
adc
xchg
mov
movsl
or
pop
dec
pop
sti
ljmp
aad
jmp
pop
pushf
orl
popa
xor
fdivr
mov
nop
and
sub
shrb
rclb
sub
sbb
jns
int3
sarl
jg
jmp
lcall
mov
popa
cld
push
psubusw
add
pop
fninit
sub
enter
mov
aaa
fchs
data16
mov
call
decl
insb
cld
jmp
push
sub
push
loopne
xchg
adc
lret
adc
or
jg
jnp
js
movsl
popf
push
or
mov
mov
gs
call
jmp
adc
jo
loopne
insb
xchg
jo
js
pop
cld
mov
lea
push
jbe
jl
cld
inc
xchg
adc
pusha
add
mov
sbb
add
pop
add
or
scas
hlt
into
adc
loope
lret
xchg
out
call
inc
mov
fstpt
ja
cmp
jbe
cwtl
sbb
pop
pop
xor
pop
ljmp
mov
cmp
add
sti
decl
insl
lcall
inc
xchg
mov
xor
sarb
add
enter
or
and
pushl
lock
and
cmp
xchg
decl
mov
jbe
hlt
adc
inc
sbb
fildll
js
dec
sub
or
out
jmp
call
lock
scas
sbb
push
ds
jp
xchg
mov
shll
dec
nop
mov
jnp
sbb
sbb
push
pushf
inc
mov
sub
jns
add
orl
push
pop
xor
add
mov
xchg
cli
cs
lods
xor
scas
inc
decb
mov
call
cmp
jl
add
rcr
jnp
or
or
imul
push
jmp
fs
in
enter
cwtl
gs
icebp
cmp
mov
cmpl
dec
int3
fstl
cmp
sub
into
inc
cltd
mov
xchg
cmp
cld
push
mov
popa
push
jmp
shlb
sbb
xor
push
push
sub
outsb
push
mov
popa
mov
lods
xchg
xor
cmp
pop
mov
movsl
inc
xor
push
lret
hlt
or
jno
in
sub
adc
ljmp
inc
call
outsb
xchg
js
int
jne
pop
or
jl
or
push
mov
pop
mov
sbb
int
inc
pop
pop
nop
xchg
jecxz
mov
push
std
call
push
push
xor
andb
out
dec
sbb
mov
clc
dec
dec
cmp
push
sarb
push
push
push
nop
cmp
cmp
loop
xchg
ret
lock
or
add
and
mov
mov
ljmp
loop
lea
inc
inc
cmp
jb
push
mov
mov
lods
sub
jg
push
push
pop
imul
andl
or
sar
dec
fldt
or
test
nop
lods
std
pushl
dec
mov
test
je
mov
sbb
add
pop
pop
out
and
lret
sub
xor
loopne
jo
sub
push
push
add
jmp
call
outsl
stos
or
jmp
push
pop
es
sub
add
xor
xchg
sbb
jmp
push
je
jbe
mov
lds
push
add
push
je
cmc
call
mov
inc
das
add
out
mov
mov
aaa
ret
and
or
dec
push
bound
xor
mov
add
add
dec
push
dec
adc
jno
lret
fsts
rcr
xchg
pop
jmp
mov
cmp
sbb
pop
lock
mov
cmp
adc
testb
fsubrl
or
cvtdq2ps
or
xchg
rorl
xor
push
addl
xor
inc
incl
test
je
push
shlb
lds
inc
jns
and
rorb
out
iret
int3
std
pop
enter
push
mov
cli
inc
js
or
leave
scas
adc
mov
push
or
outsl
mov
sub
xor
cmp
push
sub
call
arpl
or
test
daa
mov
sbb
mov
push
jg
popa
and
cmp
fidivs
outsl
sarl
int
dec
cmp
push
popa
xchg
sub
jg
mov
sarb
jae
lahf
add
out
fldcw
or
sbb
in
call
mov
push
add
stos
shlb
sbb
imul
mov
or
mov
mov
dec
jg
or
adc
add
dec
ja
dec
scas
imul
outsb
add
test
leave
xor
add
cs
xor
or
popa
and
add
mov
add
mov
xor
mov
inc
nop
sbb
shl
fildll
or
hlt
xor
ret
loop
dec
js
out
sub
fcom
call
pop
sahf
add
xlat
xchg
lret
mov
aam
mov
jmp
ss
outsl
and
pop
clc
call
xor
movsb
pop
inc
mov
sarb
mov
icebp
clc
sbb
mov
int
jmp
decl
pop
faddl
or
jg
xchg
pop
add
pusha
into
push
decl
pop
addb
andl
pop
inc
cld
ljmp
pop
xor
sbb
mov
adc
inc
xchg
cli
ljmp
sbb
xchg
cmp
dec
adc
inc
mov
pushl
out
fs
inc
rorb
adc
mov
inc
sbb
mov
data16
jge
sbb
cmp
and
repnz
mov
push
pushl
cmp
cmp
push
mov
xor
and
iret
cmpsl
shl
add
movsl
les
fdivr
pop
jge
or
inc
aaa
int
push
or
dec
jp
icebp
lcall
add
sbb
or
and
cs
shr
add
pop
repnz
mov
fadds
dec
cmp
loopne
lcall
inc
sbb
or
jecxz
arpl
push
sub
dec
rcrb
and
pop
mov
pop
shlb
lea
mov
pop
mov
leave
pop
sbb
fsubr
lcall
je
mov
cmp
je
rcr
jmp
sarb
push
lcall
shl
mov
mov
push
incl
lret
push
icebp
std
pop
cli
mov
and
xchg
sub
rcll
aaa
xor
out
popa
pop
jb
mov
dec
popl
jg
ss
cmp
je
outsb
mov
jae
adc
jmp
pop
js
mov
je
sbb
jmp
les
push
ja
daa
inc
lret
jg
and
and
sar
pushl
mov
and
sbb
add
push
jmp
shrl
cmpsl
std
xchg
inc
ljmp
xchg
add
jne
movb
adc
dec
cmp
sbb
ret
fidivrs
adc
lock
sbb
fnstsw
dec
push
mov
and
mull
insb
adc
out
in
call
add
pop
or
mov
or
push
mov
call
sub
cmp
icebp
call
jne
mov
pop
mov
xchg
decl
rolb
les
pop
mov
ret
lea
adc
das
imul
push
sbb
ret
or
call
je
mov
inc
movsl
mov
ret
push
or
push
cmpsb
sub
jno
xor
mov
and
xor
pop
std
jg
scas
jge
test
rolb
iret
mov
or
push
jg
dec
xor
insb
adc
fstps
xchg
sbb
or
mov
mov
push
cwtl
cmp
cmp
jmp
inc
add
mov
out
add
jle
cld
in
incl
ds
stos
ret
clc
jmp
jb
popa
adc
stos
cmp
jmp
cld
mov
or
push
push
ret
lret
paddsw
xchg
rcll
ret
xchg
outsb
and
sub
jg
mov
pushl
fsubrs
cld
inc
sbb
jbe
fidivl
sar
xchg
incb
adc
add
jmp
fcomps
adc
mov
jg
mov
fistl
mov
sbb
cmc
push
pusha
rcr
mov
push
or
xor
mov
jmp
push
lods
mov
add
decl
ljmp
inc
dec
aaa
push
push
lea
add
xor
and
add
cli
mov
scas
sbb
inc
cmp
pop
pushl
and
je
pop
sbb
mov
stos
push
xchg
cli
mov
mov
and
incl
decl
notl
inc
clc
jo
xor
bound
push
fcmovne
or
aaa
outsb
std
test
push
addr16
addr16
cmp
pop
mov
ja
dec
test
pop
jmp
jle
push
or
jne
mov
push
and
push
push
jmp
xor
mov
ja
test
sarl
and
mov
jo
push
jns
cli
and
std
inc
add
jno
dec
ds
decl
mov
or
cwtl
ljmp
pop
out
inc
adc
xchg
cmp
aaa
clc
daa
nop
je
jle
xchg
xor
inc
jecxz
icebp
movsl
mov
dec
dec
fcoms
xchg
inc
mov
decl
daa
jns
pop
mov
mov
call
and
fcoms
enter
call
and
filds
jge
mov
test
fnstsw
outsl
sub
fmuls
ret
int3
lret
dec
ret
out
sub
xchg
dec
std
call
adc
xchg
add
fdivrs
jb
sub
push
xor
incl
incl
add
inc
dec
outsb
xor
sub
in
push
cmp
xchg
mov
call
out
int3
xor
or
add
or
loope
lock
inc
mov
sbb
dec
push
cli
add
add
pop
divb
ljmp
sbb
mov
sbb
pop
ret
test
jl
ficomps
push
mov
push
sahf
sar
jg
inc
jb
int
inc
push
pop
mov
adc
pop
dec
les
jg
mov
lods
data16
fs
mov
cli
fucomip
ljmp
or
shr
inc
pop
add
rcr
shr
rcr
or
call
mov
div
mov
mul
jb
cmp
loopne
ja
jb
cmp
decl
dec
adc
adc
sbb
dec
push
xor
mov
cmp
addb
ljmp
icebp
rorl
pop
xchg
push
adc
adc
jns
lods
divb
loop
das
lcall
sbb
jns
cmp
add
lcall
xchg
test
shr
inc
xor
push
in
dec
jge
fldt
mov
icebp
pop
adc
dec
shl
adc
dec
dec
cmp
cmp
nop
sahf
or
push
push
adc
push
xor
int3
cmpsl
xchg
add
mov
sub
ret
rclb
inc
test
mov
in
add
jns
add
jp
add
or
incl
sbb
clc
scas
jl
cwtl
int3
xor
push
or
ljmp
imul
jmp
and
dec
rorl
dec
mov
les
aaa
cli
adc
dec
xor
lea
inc
stos
jg
pop
mov
mov
xchg
push
sar
mov
in
popf
push
jno
decl
iret
pop
add
dec
push
add
cmp
fstpt
inc
xchg
lea
cmc
mov
xchg
xor
daa
ljmp
test
aad
xlat
push
aaa
xor
mov
push
add
pcmpeqw
stos
imul
sbb
pop
cmp
jne
mov
mov
addps
and
call
jecxz
jmp
mov
clc
lret
in
xchg
push
pop
cs
cld
adc
cmc
addr16
lods
mov
adc
ljmp
pop
ja
inc
lcall
cwtl
rorb
inc
mov
cmp
mov
lret
inc
push
push
sbb
out
jne
cmc
jg
icebp
xor
and
cmp
fsts
dec
or
call
ja
add
loop
push
push
cmp
std
and
mov
jle
test
int
mov
les
mov
inc
or
pop
inc
jmp
or
jg
mov
add
add
clc
movsb
jl
xchg
clc
movsl
xorb
sub
adc
add
clc
add
or
test
mov
cmp
cmp
push
shrb
das
lock
mov
sbb
adc
outsl
adc
bound
and
xorb
xchg
in
and
mul
sub
xor
xor
ret
add
inc
test
je
sub
incl
test
jle
popl
and
repz
and
add
dec
cmp
sbb
sbb
or
push
bound
add
cmp
jbe
notb
mov
and
pushl
clc
mov
pop
sahf
adc
enter
rorl
inc
incl
xchg
ja
dec
add
and
lock
push
ljmp
pushl
sbb
or
xorb
gs
xor
fwait
and
incl
mov
xorb
xor
sbb
nop
xchg
rcr
push
popa
xor
or
add
jbe
negl
jp
or
add
xor
and
jle
or
mov
nop
in
sub
adc
test
incl
push
and
push
sub
leave
dec
shlb
xlat
cld
das
hlt
decl
into
jp
popa
call
dec
int
iret
add
das
and
mov
inc
jg
cmpsl
ror
jg
mov
cmc
inc
mov
andl
xchg
inc
ja
inc
mov
cmp
jae
xor
mov
adc
clc
inc
sbb
or
cmp
xchg
pop
cmp
cmp
or
dec
adc
lds
outsl
cmc
aaa
push
add
in
jb
and
add
or
std
push
mov
les
punpckhdq
lock
decl
imul
and
lret
jne
outsl
add
xorb
clc
or
scas
ss
ljmp
cmc
incl
or
ljmp
sbb
or
xchg
rcrl
xor
pushl
incb
pop
jb
cmpb
jne
ss
int3
js
shll
or
ss
lcall
cld
and
inc
jmp
xor
or
xchg
or
xchg
jno
and
iret
fildl
incl
push
testb
inc
mov
jmp
out
sbb
out
or
pop
pop
mov
or
inc
pusha
cmp
movsb
lock
sub
sbb
pop
sub
cmp
pop
nop
imul
jo
add
push
js
jl
xchg
cmp
cmp
mov
add
mov
cmp
jb
out
daa
pop
adc
mov
incl
sub
fcoms
popa
lock
push
inc
push
in
ljmp
ljmp
xchg
adc
sub
xor
xchg
push
mov
into
mov
adc
call
outsl
push
pop
int
cs
mov
mov
inc
iret
push
jecxz
xor
negb
clc
aam
pusha
pop
rol
lret
ljmp
repz
mov
xor
cmp
add
divl
cli
outsl
insl
hlt
cs
or
adc
std
adc
jne
pop
imul
pop
or
out
mov
shlb
lea
cli
jmp
push
mov
mov
sbb
pop
and
icebp
jae
mov
enter
call
cmp
xchg
push
divl
sub
lods
in
ds
outsl
lock
aam
mov
add
nop
imul
adc
pop
mov
cwtl
inc
stos
push
pusha
pushf
push
popf
mov
mov
call
or
xor
jle
xchg
jne
lret
cmp
cmpsb
cwtl
xchg
inc
push
out
mov
lods
pop
std
mov
jae
loope
adc
and
jmp
mov
dec
mov
dec
gs
mov
xor
fadd
mov
jne
rcrb
lods
call
mov
mov
xor
rorb
call
dec
jecxz
dec
add
pop
clc
pop
loopne
hlt
mov
int3
push
pop
aaa
mov
ret
test
jmp
jmp
xchg
jbe
xor
test
lea
or
fsubrp
dec
stos
inc
xchg
cmp
test
inc
and
add
add
push
adc
arpl
xorl
cli
pop
add
jno
adc
bound
add
pop
mov
push
jmp
in
jne
ja
sub
mov
mov
pop
jns
cld
add
testb
test
lcall
inc
mov
pop
push
cli
adc
cmp
pusha
fildl
pop
mov
mov
inc
les
or
test
test
or
ret
loopne
pop
cli
test
inc
sarb
inc
adc
xchg
push
push
mov
xchg
or
inc
or
and
mov
jle
jo
mov
lock
or
add
mov
cmp
mov
pusha
call
mov
stc
add
sbb
mov
aaa
cli
cmp
outsl
movsb
cmp
call
or
pop
mov
add
cmpl
push
inc
mov
pusha
xor
mov
sbb
pop
add
daa
cmpl
pushf
adcb
inc
mov
jns
ljmp
addb
pop
ficomps
mov
mov
call
stos
iret
add
mov
inc
pop
jo
mov
ret
jg
pop
outsb
test
icebp
adc
cmp
sbb
pop
clc
jmp
mov
jno
sub
fimull
adc
adc
push
xorb
outsl
cmc
decl
pop
push
inc
or
mov
adc
xor
fyl2x
loopne
inc
mov
push
inc
shr
push
pop
inc
xor
or
xchg
cwtl
cmp
insb
jne
hlt
idiv
lods
decb
mov
cmp
test
movsb
adc
aam
outsl
icebp
decl
mov
push
push
orb
fsub
in
cmpb
dec
pop
jne
call
dec
cld
inc
shrb
loopne
mov
or
push
add
pop
add
cld
int3
mov
test
mov
cmp
mov
jg
das
std
int
push
or
push
push
mov
jl
pcmpgtd
repz
test
mov
dec
xchg
mov
mov
jne
pop
and
popa
insb
mov
mov
movsl
dec
xchg
in
mov
mov
lea
mov
mov
js
incl
lds
push
ljmp
lods
fiadds
push
xor
jns
cld
shr
test
call
std
into
iret
imul
mov
lock
pushl
push
enter
sbb
adc
fbstp
outsb
stc
sub
mov
ret
stos
je
cli
add
mov
aas
inc
rol
aas
pop
mov
adc
push
jp
incl
mov
jae
and
mov
and
decb
jne
sbb
dec
loopne
push
mov
mov
ficoms
sub
mov
pop
inc
xor
imul
les
push
mov
stos
pop
clc
addl
insb
jecxz
jne
sti
add
sub
aaa
clc
pop
sub
pop
cmp
jbe
arpl
clc
cwtl
icebp
fucomip
decl
xlat
cmp
xlat
add
cmp
sbb
jno
jo
mov
mov
lret
shr
not
and
add
hlt
add
lret
and
jl
dec
loopne
fnstenv
push
lahf
mov
dec
add
sarl
mov
jecxz
arpl
or
in
dec
cld
hlt
test
inc
ret
sub
mov
sahf
bound
dec
adc
pusha
lds
movsb
data16
cld
hlt
movsl
incb
xchg
mov
cmpb
push
push
push
mov
loopne
mov
aaa
jmp
pop
test
loopne
sbb
sub
jno
repnz
outsl
fdivr
pushf
mov
rcpps
mov
and
test
xor
ljmp
mov
mull
fsubl
mov
stos
lds
ds
scas
mov
mov
push
lcall
push
push
call
xor
fisttpl
push
or
ret
mov
incl
push
xlat
decb
mov
adc
push
cmpl
mov
fdivrp
or
mov
xchg
adcl
incl
xorl
subb
enter
sub
push
mov
mov
cmc
imul
cmp
jg
sbb
mov
insl
sbb
mov
or
pop
decb
jl
dec
nop
and
fisubl
pop
dec
push
mov
call
clc
or
and
adc
sub
mov
jo
les
xor
push
clc
mov
cmp
pushl
push
pop
dec
or
push
xor
lods
adc
cmpsb
push
sub
or
jmp
orl
dec
incl
stos
mov
add
sub
push
xor
or
pushl
out
inc
into
xor
stc
mov
imul
test
inc
clc
pop
rcrb
xchg
inc
or
or
adc
jne
mov
push
or
arpl
out
xchg
mov
xor
cld
lret
loop
xchg
add
cmp
cmp
ja
pushf
sbbb
sar
jmp
inc
orl
or
inc
arpl
adc
pop
push
movl
shl
dec
push
add
sub
mov
lret
mov
incl
cmp
add
lea
mov
js
sub
push
ljmp
push
andl
test
test
inc
mov
insb
hlt
lods
xchg
sti
mov
loopne
dec
inc
sub
sti
ljmp
cmpl
and
adc
inc
or
xor
adc
lea
pop
xchg
pop
enter
add
or
mov
mov
cmpb
incb
or
ret
leave
add
add
cmp
mov
stc
add
hlt
sar
dec
cmp
arpl
cmp
pop
inc
loop
cld
call
pop
and
add
cmp
sub
and
ljmp
cld
pop
xor
dec
jl
dec
or
mov
clc
ljmp
in
or
into
ja
lods
sub
pop
ret
sar
dec
pushl
xor
cmpsb
xchg
cmp
aaa
sti
pop
jno
fstpt
stc
dec
popa
sub
push
addr16
pushf
lock
cmp
sbbl
incl
cmpsb
mov
sbb
jg
dec
je
or
and
outsl
mov
test
jmp
scas
sbb
sub
call
or
cmp
xor
fcmovne
mov
addb
pop
pop
mov
mov
jmp
fadd
or
pop
fistps
dec
sub
pop
pop
cld
call
dec
dec
pop
xor
add
incb
in
ret
xchg
mov
and
test
cld
xlat
fs
push
aad
in
dec
je
jno
aam
dec
xlat
mov
mov
mov
out
or
leave
and
add
push
or
dec
mov
xchg
mov
cmp
mov
jns
push
pminsw
mov
mov
daa
fwait
je
out
sub
in
dec
sar
mov
pop
inc
or
cld
push
jp
imul
aam
pop
and
push
int3
clc
call
xchg
mov
push
jp
mov
pushf
leave
xchg
or
lea
jge
or
lcall
xchg
push
cmpl
enter
push
xor
shr
enter
mov
out
cmp
pushl
int3
adc
cmp
pusha
pop
inc
mov
push
cmp
test
call
xchg
or
inc
dec
sub
jne
adc
fcoms
sbb
call
cli
and
sbb
cli
xorl
push
aaa
cmp
push
inc
loope
fstl
test
incl
sub
pushf
adc
and
jns
cmp
mov
icebp
decl
in
cmp
je
xchg
push
cmp
push
and
jne
add
lret
push
pop
push
mov
nop
add
pop
rorl
dec
lret
xchg
or
lods
sbb
movsb
mov
add
inc
sbb
or
jp
cmpl
comiss
add
jg
call
inc
test
xorl
aad
push
inc
icebp
mov
ljmp
jle
pop
or
testl
sbb
xor
cli
xchg
iret
mov
lcall
xor
fs
pop
mov
loop
jo
pcmpeqw
in
das
xor
jg
or
sub
js
mov
xor
bswap
nop
ljmp
lock
clc
loopne
out
jp
lock
inc
movsl
and
dec
jp
int
loop
pop
jno
arpl
jge
clc
jmp
or
mov
or
in
imul
or
cld
or
add
pushl
fdivrl
jne
lea
out
or
lret
and
les
jg
ljmp
dec
ret
lock
in
sub
xchg
hlt
lea
mov
clc
outsl
cld
push
jne,pt
cmp
cmp
xchg
push
int
js
into
lea
outsl
cld
dec
xor
sub
or
push
pushl
sub
xchg
aam
mov
repz
lods
cwtl
inc
inc
mov
sbb
test
scas
test
sarl
mov
and
gs
clc
enter
inc
enter
sbb
or
jmp
cmp
xlat
dec
or
jne
xor
mov
inc
rcr
test
lcall
or
push
ret
es
ds
push
sbb
inc
dec
adc
pop
call
push
icebp
sub
int
mov
sbb
push
push
add
add
fwait
and
or
lcall
jmp
mov
pop
mov
and
or
decl
pop
sbb
movsb
sti
mov
cld
test
ljmp
cmp
xorl
pusha
and
mov
pop
pop
testb
add
lds
js
xor
cli
jg
sarb
xor
shrb
in
jp
rorb
ret
incl
mov
jmp
xchg
hlt
adc
es
cmp
xchg
adc
js
add
pop
xlat
mov
cmpsl
inc
in
fcos
mov
cli
je
cmpl
lret
push
jmp
add
ds
mov
incl
xchg
xor
sub
imul
sub
lods
ljmp
rclb
movsb
inc
pop
mov
mov
push
mov
push
ljmp
pop
rolb
pop
js
pop
mov
loopne
decl
decl
mov
inc
sub
andb
xorb
inc
fdivl
sub
std
jmp
pop
rcrl
test
mov
pop
sbb
dec
sahf
pop
loopne
aaa
sub
iret
loope
lret
fs
jge
cmp
mov
pushf
test
xor
lods
les
push
sub
cmp
push
cmp
je
ljmp
jmp
dec
dec
je
pop
bnd
jmp
jb
add
mov
addb
inc
incl
inc
jmp
jne
test
dec
cwtl
jno
mov
xchg
adc
clc
es
cltd
pop
and
mov
adc
mov
fildl
insb
leave
aam
add
add
std
mov
std
rol
je
int3
or
pop
xor
ja
jne
cmpsl
mov
xchg
mov
loop
push
push
imul
cmpb
xor
lcall
pop
inc
or
std
cmp
xor
jmp
sbb
add
inc
add
jne
js
push
lock
decl
mov
add
nop
add
push
and
idivb
xchg
jnp
cmp
sub
ret
aas
test
sub
xchg
mov
mov
xchg
clc
addr16
das
std
aaa
xor
mov
and
test
mov
push
out
mov
call
xchg
iret
pusha
pop
or
pop
ljmp
clc
xor
enter
cmpsb
and
pop
cli
pushl
mov
mov
scas
rclb
or
push
popa
push
mov
mov
in
jo
pop
stos
lret
push
mov
xchg
jg
ljmp
mov
mov
mov
stc
rolb
lahf
clc
outsl
aam
jo
cwtl
in
int3
lods
pop
push
or
mov
sar
pop
xchg
adc
jge
cmp
dec
pop
pushf
jmp
jg
push
mov
pop
or
xor
inc
jnp
call
push
xor
mov
push
icebp
xor
dec
mov
mov
mov
mov
ljmp
jecxz
lcall
sbb
sbb
xchg
xchg
mov
ljmp
test
rcrb
les
gs
jne
and
lcall
or
insb
push
dec
xchg
xchg
and
mov
mov
rclb
jg
cmp
inc
subl
les
cwtl
and
call
dec
popa
xchg
stc
mov
into
and
jmp
xchg
add
jb
pop
mov
push
faddl
nop
insl
call
call
mov
and
dec
int3
lcall
pop
into
mov
incl
ds
inc
inc
push
sbbl
call
sti
or
cmp
add
add
in
fmuls
pop
or
add
xorl
inc
dec
fdivr
xchg
mov
sbb
or
sbb
repz
mov
cwtl
insb
jmp
dec
test
incl
add
or
leave
adc
les
mov
movb
mov
jns
test
jae
std
popl
xor
test
je
decl
jno
ret
sti
ss
fistps
fiaddl
pop
ret
lods
test
mov
jne
jg
lcall
jne
xor
add
adc
adc
rclb
or
or
pop
rolb
neg
test
mov
rcll
mov
or
test
mov
mov
or
pop
es
ljmp
mov
jl
jg
js
xor
sub
lret
xor
test
stos
add
mov
jmp
lea
sub
inc
add
dec
insl
cmp
ja
lcall
inc
cwtl
jne
or
and
inc
test
lcall
hlt
fstpt
lcall
mov
sub
sub
sub
je
and
fucomip
or
test
lods
mov
mov
dec
popf
adc
mov
inc
repnz
loop
cli
ljmp
jo
dec
mov
or
or
mulb
das
icebp
pop
dec
xor
xor
dec
jle
or
aad
aaa
lds
inc
jge
mov
add
idiv
outsl
mov
leave
pop
inc
jle
mov
lea
mov
mov
jmp
jo
inc
hlt
mov
push
fisttps
ljmp
cmpsb
push
int3
or
lds
insb
in
push
inc
nop
sub
clc
lcall
incl
lret
xchg
arpl
leave
ret
shlb
jo
lret
movsl
cltd
movsl
fidivl
sahf
ret
jecxz
cmpsb
add
cmpsb
and
mov
pop
outsb
and
jmp
adc
xchg
adc
pop
sbb
incl
out
pop
sub
mov
shll
je
faddl
sub
rorb
shrl
mov
fcoml
push
loopne
out
add
mov
int3
int3
jne
mov
enter
cli
or
xor
sbb
sbb
add
mov
icebp
mov
jmp
inc
mov
call
mov
push
add
xor
fstpl
fnstsw
in
call
call
push
das
cmpl
adc
or
ljmp
mov
mov
lahf
add
scas
mov
arpl
pop
adc
pusha
dec
dec
xor
mov
jbe
sbb
add
outsb
jle
out
push
jno
push
aaa
clc
mov
insl
push
mov
lahf
hlt
rcrl
push
sub
sub
cmp
jmp
dec
push
ret
ss
or
and
jne
test
adc
add
movsb
inc
dec
addr16
lcall
xchg
push
jae
dec
imul
jle
cmp
ss
or
mov
bound
inc
hlt
pop
ljmp
pop
push
push
fstl
jg
arpl
leave
shrl
jmp
nop
std
push
fs
enter
xorb
fistpll
call
push
pushf
pop
mov
xor
pop
std
adc
pushf
pop
sub
int
popf
dec
and
pop
mov
outsl
ja
loopne
push
adc
xchg
push
aas
test
xchg
cli
lcall
and
xor
lcall
insl
mov
push
mov
push
inc
push
push
xor
xor
push
lea
xchg
call
out
mov
fstpt
ljmp
das
divl
daa
imul
adc
ljmp
jg
pusha
mov
inc
fcoms
decl
aam
mov
jmp
pop
jbe
gs
test
add
and
in
push
int3
sub
call
jbe
xor
xorl
jle
mov
jb
and
adc
or
cmp
icebp
test
decl
push
push
and
pop
jmp
faddl
shll
mov
pop
call
fs
pop
pop
cmc
adc
shlb
fucompp
fnstsw
jg
push
les
xchg
jns
clc
and
in
adc
stos
call
insb
ret
mov
pop
inc
pop
idivl
inc
mov
mov
mov
pop
pop
call
roll
mov
xor
incl
and
lret
lds
pop
inc
inc
mov
cmc
add
push
inc
jmp
cmp
insb
jmp
nop
xchg
out
hlt
cmp
je
pop
add
mov
inc
inc
lret
cmp
cmpl
dec
mov
lcall
jmp
sbb
int
adc
mov
hlt
cmp
mov
mov
xor
ret
in
mov
outsl
pushl
and
sub
in
sbb
push
push
add
or
jns
or
cmpb
add
push
pop
adc
dec
sbb
lahf
lcall
sub
sete
mov
add
mov
push
int
jo
jns
pop
pusha
test
sbbl
push
rcrl
das
std
rolb
cmp
lds
adc
jg
mov
lea
mov
fs
insb
es
sub
push
lahf
cmp
dec
jmp
data16
pop
loopne
lret
ja
lcall
lods
xchg
add
fildll
pop
inc
jae,pn
imul
neg
sub
clc
fs
pushl
decb
cltd
push
pop
idiv
dec
jae
or
push
gs
jecxz
inc
push
jns
lcall
das
push
nop
or
push
sti
sub
sub
out
outsl
je
das
xchg
jne
xlat
mov
dec
xchg
stos
inc
shll
pop
ljmp
fildl
and
push
jne
pop
or
test
xor
insb
mov
inc
ljmp
sbb
push
mov
and
cmpsb
mov
inc
jmp
add
leave
lods
add
inc
mov
mov
inc
test
jge
add
aaa
idiv
mov
je
lds
mov
push
push
push
inc
fcmovne
push
pop
inc
icebp
xor
add
sbb
add
dec
mov
push
sarl
loop
push
mov
jg
xchg
jp
pop
lock
cmp
mov
aaa
clc
or
cld
mov
jge
xchg
pop
push
or
mov
inc
pop
sub
sub
mov
decl
xchg
insb
test
and
hlt
frstor
adc
xchg
mov
ljmp
rcll
mov
mov
or
pop
ljmp
jne
loope
inc
jmp
fwait
mov
mov
sbb
adc
add
mov
lock
incl
popf
add
nop
lock
test
sub
dec
insl
pop
call
call
clc
push
mov
inc
sub
std
jo,pt
call
or
inc
rcl
out
adc
fwait
addb
movaps
je
add
sbb
or
push
push
lret
aam
or
testb
dec
or
das
cmc
decl
mov
sub
sub
stos
sub
cmp
mov
roll
sub
mov
sub
lock
std
fistpll
incl
data16
mov
je
fmuls
and
outsl
push
add
sbb
push
or
roll
jmp
xor
andl
push
pop
add
mov
mov
mov
pushl
scas
sbb
inc
sub
sbb
fisttps
mov
movsl
cmpsb
repz
decb
mov
jmp
mov
mov
movsl
js
das
or
mov
int3
in
lock
cld
jle
decl
push
inc
adc
cli
sub
or
sbb
pop
fbld
addr16
xchg
jp
cmp
xor
pop
or
test
jle
jl
rclb
mov
movb
add
inc
push
lods
xchg
jne
int
es
loopne
inc
imul
inc
enter
adc
lock
sbb
les
lcall
mov
mov
mov
jns
les
test
push
adcb
cmp
nop
cld
test
jno
jmp
in
test
int3
pcmpeqw
cmpl
das
mov
out
cmp
inc
call
xchg
sbb
cwtl
jg
loopne
pushl
aas
mov
push
in
dec
out
enter
adc
jo
jg
fisttps
inc
fdivrs
and
adc
push
mov
cmp
jae
ljmp
xchg
aam
add
inc
mov
pop
ret
jle
cmp
xor
das
cld
incl
add
push
push
inc
icebp
fs
movsl
mov
jb
xchg
lcall
cwtl
stos
loopne
into
out
or
jmp
enter
sub
int
sub
mov
mov
mov
dec
cwtl
sar
mov
lea
cmp
daa
scas
js
clc
jge
sbb
add
and
leave
imul
nop
icebp
mov
loopne
incl
cli
push
push
sarl
mov
push
push
cli
fildll
or
cwtl
mov
stc
sub
or
incl
incl
xor
xor
fstps
inc
or
imul
or
incl
mov
lea
rcll
into
lret
pop
add
xor
movsb
ljmp
ljmp
jle
rolb
les
xchg
jmp
xor
test
es
je
je
popa
mov
scas
ret
bound
repz
push
in
jecxz
vcvtsd2ss
cmp
icebp
adc
lock
call
incl
xor
js
fdivr
inc
test
push
movsb
xchg
incl
popa
repnz
add
mov
or
jg
scas
movsb
adc
adc
icebp
inc
test
xor
mov
cltd
push
incl
dec
cld
xor
push
js
movsb
cmp
add
mov
decl
inc
fcomps
sub
faddl
mov
push
and
icebp
or
dec
jg
ljmp
pop
mov
test
add
inc
das
adc
pop
and
sbb
jo
ljmp
mov
mov
jne
sbb
jae
imul
nop
adc
imul
cmp
mov
push
cmp
jl
jg
sbb
decl
sbb
sarb
test
hlt
je
jne
cmp
rcrb
in
ret
lea
leave
xchg
jb
movsb
or
cld
lods
js
or
das
mov
lods
leave
out
xchg
loop
ds
inc
rcr
cmp
jl
cmp
xchg
dec
popa
and
sbb
push
sbb
xor
mov
inc
call
sbb
aaa
xorl
mov
mov
jb
xchg
mov
js
sbb
in
incl
in
push
xchg
jnp
xor
in
push
pop
cli
jmp
int3
mov
add
mov
neg
mov
fisttpl
adc
les
xchg
push
hlt
and
pop
dec
hlt
dec
imul
jg
decl
push
sysenter
cmp
jg
xor
adc
jo
bound
adc
call
cli
jle
push
mov
lea
addr16
adc
jle
pushf
inc
int
adc
add
decl
xor
sbb
inc
addl
push
loopne
jg
clc
call
cmc
ffreep
movb
mov
sub
imul
aad
and
es
mov
pusha
push
mov
dec
rolb
je
mov
sar
push
loop
mov
sub
shlb
pop
mov
nop
jp
and
rclb
mov
adc
cwtl
rcrb
jbe
sub
call
sbb
pushl
or
mov
call
push
stos
sbb
push
or
pop
es
sub
sbb
fucomip
incl
cmp
gs
sbb
push
sbb
cmc
lcall
mov
sahf
jbe
jno
jecxz
sub
aam
cmp
pop
mov
adc
jmp
inc
sar
mov
into
cmpsb
xor
xchg
fnstsw
mov
inc
jo
andb
cmpsb
cmp
push
out
sub
xchg
movsb
enter
mov
insl
imul
nop
cmpl
dec
dec
xor
cli
je
push
pop
mov
pop
sbb
jo
mov
push
mov
loop
aam
mov
fcoms
inc
shl
add
dec
mov
pop
xor
sbb
inc
push
nop
or
jmp
stos
sar
jmp
mov
aas
scas
cmp
or
push
adc
mov
cwtl
mov
das
cmc
lcall
and
sub
and
dec
decl
js
mov
decl
ret
cmpl
ret
push
push
xor
incl
in
lods
pop
sub
mov
mov
dec
fwait
jg
adc
fsubrs
ss
popf
cs
mov
push
out
xchg
dec
xor
jmp
sbb
and
inc
lret
stos
dec
leave
popa
in
mov
decl
icebp
inc
xchg
sub
add
mov
in
stos
push
mov
aaa
decl
mov
pusha
jno
out
fs
mov
inc
dec
je
icebp
icebp
sub
outsl
icebp
in
and
add
jae
inc
sahf
cmp
cmp
dec
gs
decl
aas
inc
je
outsb
add
xchg
lea
xor
xchg
adc
lea
decl
pushf
pop
sub
sub
and
inc
xchg
inc
dec
dec
loop
cmp
sti
dec
jne
adc
hlt
lea
xor
add
loop
cld
fldenv
dec
fcoml
movsl
push
pop
aas
sbbb
push
push
cli
sub
xor
jmp
popf
andb
loopne
call
or
inc
js
inc
pop
jne
jmp
dec
jg
popa
jmp
push
cmc
pop
fildl
or
mov
std
addr16
xor
lea
cmpb
mov
jne
and
arpl
lock
out
clc
push
inc
and
into
xor
jmp
jnp
data16
pop
clc
incl
push
or
inc
test
push
filds
pushf
iret
and
call
inc
or
cmp
je
arpl
je
pusha
or
insb
cs
jb
cli
ljmp
xchg
int3
jl
sbb
cmp
mov
outsl
repnz
mov
mov
jo
add
jle
cwtl
incl
aad
jle
push
mov
pushf
cmp
movups
cmp
or
ljmp
je
ja
mov
mov
in
inc
arpl
add
mov
mov
roll
jl
mov
pop
daa
movsl
incl
inc
add
sub
xor
xor
clc
call
xchg
dec
cwtl
jmp
mov
xchg
add
lret
aam
mov
or
test
mov
sti
push
xlat
faddl
jecxz
mov
pop
iret
daa
cmp
mov
stos
das
adc
stos
cmp
jg
jne
insb
das
add
push
incl
mov
xchg
cli
cld
sbb
int3
and
sbb
push
dec
dec
dec
int
data16
mov
movb
fmull
stc
add
sub
and
lahf
sub
jp
jmp
xchg
mov
std
fcom
stc
out
or
push
inc
pusha
or
incl
xchg
or
out
jmp
lea
pushl
jb
cmc
movsbl
icebp
or
adc
mov
adc
ss
inc
fcmovu
popa
mov
mov
push
mov
lret
and
adc
test
mov
pushl
lret
or
adc
loope
je
add
sbb
cmp
movsl
adc
cli
aas
or
shl
imul
daa
outsb
jle
and
ret
cli
cmp
adc
pop
sub
mov
sbb
adc
movsl
jg
inc
dec
test
jne
and
sub
cmpsb
sub
mov
push
pushl
rcll
xchg
aaa
cltd
jg
pop
movsl
mov
xor
mov
jmp
call
ss
ficoms
cwtl
mov
outsb
or
lock
jne
mov
inc
movb
ljmp
cmp
lret
dec
inc
mov
lcall
inc
cmp
jae
pushl
cli
mov
jmp
mov
shlb
loopne
shlb
ret
xchg
ss
sub
cmp
movsl
and
xchg
add
add
into
and
add
loop
adc
sub
subb
shr
pop
mov
mov
mov
mov
in
mov
push
aad
rorl
lcall
movsl
cmp
mov
rep
xchg
push
xor
ret
outsl
hlt
jmp
andl
jb
nop
call
aaa
pop
outsb
push
mov
stos
call
les
clc
or
jle
jne
xorl
push
xchg
add
add
int
xor
inc
shl
sub
roll
sar
xchg
add
xchg
iret
test
lea
xchg
xchg
jg
mov
jne
int3
loop
imul
in
inc
jne
jmp
jge
test
lods
inc
push
cmp
mov
icebp
mov
mov
jnp
mov
mov
sub
ret
bnd
incl
cld
or
adc
add
lods
pop
xor
sbb
push
or
lret
inc
je
xchg
dec
mov
lcall
mov
mov
hlt
bound
push
pop
sbb
stos
call
xchg
mov
mov
fldcw
inc
push
xchg
dec
push
aaa
cli
call
subl
add
cmp
jle
mov
jmp
pop
mov
inc
lahf
stos
imul
loopne
mov
push
cmp
mov
lret
xor
iret
push
cld
decl
jle
andl
mov
jno
or
sbb
and
cld
or
xor
addl
outsl
mov
push
shlb
jnp
aad
jmp
pop
inc
fldenv
in
add
xor
xor
shld
incl
jmp
loop
sub
mov
mov
jns
cli
fs
xchg
push
cld
push
xor
pop
out
xchg
sub
les
ds
mov
test
icebp
jbe
jne,pt
ja
mull
or
cltd
add
pop
shlb
aaa
sub
mov
push
sub
xchg
das
mov
cmp
mov
in
mov
pop
ficoms
fadds
incl
neg
xchg
cmp
inc
je
icebp
ljmp
mov
xchg
push
and
into
cmp
dec
fnsave
cli
fstpt
inc
shl
repnz
dec
pop
mov
pop
mov
mov
mov
das
lock
ror
fldcw
daa
clc
xchg
mov
decl
and
incl
push
dec
in
mov
jmp
jne
xchg
icebp
jo
mov
jae,pn
in
adc
in
das
popa
adc
mov
xchg
xor
inc
push
sub
fs
pop
clc
movsl
pop
adc
inc
sub
jmp
ret
pushl
cmc
jns
pop
test
ds
fwait
aaa
pop
fwait
or
jmp
add
and
cmp
cmp
fidivs
push
ljmp
push
fimuls
inc
mov
mov
out
jae
aas
inc
mov
imul
jmp
mov
icebp
or
sahf
mov
push
jo
inc
es
stos
mov
call
and
and
dec
inc
adc
roll
or
lcall
fistpll
adc
inc
cmp
push
or
rcrb
mov
lcall
pop
push
push
iret
testb
mov
nop
pusha
rcl
ss
inc
fisttpll
pushl
cli
pop
xor
dec
mov
mov
dec
or
xor
mov
mov
adc
sbbl
sbb
or
mov
clc
call
add
je
cmc
call
cmp
andb
cmp
jg
cmpsb
pop
mov
and
xchg
and
jne
and
dec
lret
sahf
and
call
jmp
add
outsb
test
xor
insl
inc
pop
xor
or
sub
mov
or
inc
push
aaa
sbb
sbb
je
std
ljmp
adc
mov
mov
data16
sti
pop
add
ret
cld
push
pop
cmp
addb
movsl
subb
loope
adc
incl
test
and
pop
inc
or
sub
pusha
cltd
jle
push
push
fbld
xor
test
jns
std
add
jle
xor
dec
outsl
cmpb
or
stc
jo
cmc
arpl
popa
test
ja
mov
insl
add
inc
or
and
aam
inc
movsl
xchg
mov
xchg
push
insb
cld
incl
repz
cmp
sarb
loopne
mov
ljmp
aad
cmp
test
xchg
mov
or
shrl
shlb
pop
adc
jnp
cltd
aad
rcll
pop
mov
dec
fwait
add
clc
mov
incl
push
mov
mov
adc
mov
fcom
les
inc
pop
enter
push
xchg
hlt
mov
push
inc
jge
shrl
cltd
adc
rorb
pushl
sub
lea
mov
fidivrs
inc
mov
insb
out
jg
ljmp
fsubl
fs
bound
push
and
ret
aaa
shlb
insl
testl
push
stc
int
jns
mov
cmp
jg
mov
or
addb
or
mov
ljmp
lahf
out
push
daa
adc
das
or
ffreep
dec
inc
mov
sarl
mov
pop
icebp
lcall
adc
outsl
adc
fstpt
sub
arpl
cmp
sbb
pushl
add
pop
cmp
into
or
add
mov
cmp
call
ljmp
push
clc
push
jg
je
sub
and
pushl
mov
leave
imul
add
jmp
in
and
imul
pushl
adc
jne
inc
jmp
jo
mov
loopne
jo
cld
pushl
test
push
or
enter
enter
shll
inc
daa
and
pushl
or
call
es
adc
aaa
mov
sbb
lahf
adc
mov
cmpsl
mov
rclb
jmp
mov
or
outsl
js
pushf
inc
cmp
xor
rcrb
push
or
lods
clc
sub
pop
shr
jg
out
inc
sbb
notb
jo
movsl
pop
loop
push
les
sbb
sbb
adc
dec
adc
cmp
in
inc
std
sti
std
sbb
jle
push
arpl
scas
and
adc
inc
push
push
mov
std
decl
aas
mov
jmp
mov
mov
or
iret
mov
jecxz
or
call
inc
dec
and
daa
and
inc
dec
pop
cld
or
add
fmuls
sarb
in
decl
push
mov
mov
lods
test
pop
popa
mov
decl
rolb
and
pop
jge
pop
out
mov
mov
pop
add
and
pop
cli
sub
jecxz
mov
xor
and
mov
lea
xor
lret
in
or
ljmp
shll
or
xor
push
jne
push
adc
sbb
filds
decl
and
adc
insl
addr16
hlt
xchg
sub
cld
push
dec
add
cmp
pushw
dec
dec
fwait
pop
pop
das
cmc
ljmp
into
or
loop
add
or
push
xchg
sbb
sti
xchg
pop
std
lcall
pop
movb
cmp
dec
xchg
sar
cmp
or
loopne
add
dec
cmp
jae
cmp
ret
or
inc
mov
arpl
adc
outsb
dec
xlat
out
daa
fwait
jno
xor
dec
dec
into
inc
lock
pop
hlt
and
lea
adc
in
lea
movb
mov
rolb
js
jp
mov
sbb
dec
loope
neg
imul
sahf
jg
inc
or
dec
roll
inc
ret
aam
mov
add
or
ljmp
ljmp
popf
lods
and
cld
out
adc
out
inc
sbb
lcall
call
lret
je
roll
mov
hlt
lcall
test
rcrl
icebp
jae
lods
adc
mov
dec
std
adc
mov
test
in
nop
push
push
push
cli
aad
stc
in
std
xor
inc
das
js
inc
mov
inc
nop
lcall
mov
mov
nop
sub
cmp
jae
mov
nop
decl
pop
mov
jnp
loope
test
mov
mov
jl
mov
push
dec
sub
repz
movsl
pop
mov
arpl
stc
and
sbb
inc
mov
les
mov
inc
movsb
mov
mov
pop
pop
ret
jne
mov
decl
jmp
dec
mov
adc
add
jae
mov
insl
mov
mov
pop
mov
inc
mov
cli
push
ret
mov
xchg
clc
dec
shrb
inc
fadds
andl
add
cmp
push
sub
std
call
arpl
repnz
ja
and
aam
xor
les
add
sar
dec
shlb
inc
and
add
adc
and
push
notl
andb
and
test
lret
mov
or
repz
push
call
add
sbb
push
push
sbb
sub
decl
add
ja
and
xchg
mov
ljmp
fiaddl
sub
mov
dec
neg
sbb
add
imul
add
insl
fnstsw
clc
push
xor
jb
test
pop
cmpsb
data16
lods
or
jne
dec
push
cld
incl
lret
sbb
in
test
je
adc
cmp
in
outsl
cmc
jg
add
sahf
test
addl
adc
inc
pushl
jno
adc
cmpsb
mov
roll
inc
int3
cld
dec
and
inc
xchg
or
inc
push
mov
jmp
shlb
push
rorl
or
push
jmp
sbb
mov
inc
mov
in
mov
icebp
adc
xor
and
fdivr
js
and
jno
das
mov
pop
lods
popa
adc
sbb
inc
xchg
dec
cmp
std
pop
pusha
jmp
mov
sub
sbb
sbb
rcll
int3
daa
mov
mov
in
xchg
adc
add
xchg
mov
xchg
clc
je
enter
int3
and
aaa
decb
pop
sbb
popa
sbb
and
sub
outsl
icebp
decl
sub
mov
xor
and
dec
lea
sbb
daa
fisttpl
mov
leave
mov
inc
in
push
sub
mov
add
in
rolb
sub
in
popf
je
dec
cli
add
dec
fstps
call
add
add
cmp
shrb
sub
and
jbe
aas
loopne
adcl
hlt
std
mov
push
sti
daa
add
jg
in
push
ret
xchg
cmp
bound
fs
fbld
push
faddl
ud0
mov
cmp
sub
fcmove
popf
fcomps
sbbl
les
mov
sbb
push
ljmp
push
clc
jle
cmp
cmp
push
xor
sti
rcrb
fildl
lock
sub
push
inc
mov
stos
mov
and
mov
pop
pop
inc
hlt
or
call
sub
xor
std
sbb
and
xchg
sbb
jmp
pusha
mov
push
std
or
ss
jmp
dec
jecxz
call
cli
das
es
cmc
jne
dec
int
shlb
sbb
les
mov
fcmovnbe
adc
jns
fcmovb
repnz
pushf
stos
mov
les
fadds
fldl
mov
data16
mov
movsl
mov
cwtl
repnz
mov
aaa
nop
jmp
mov
lock
testb
ret
push
inc
xor
push
test
xor
inc
and
or
adc
xchg
notl
dec
enter
inc
jg
pop
je
cmpsl
adc
inc
lea
jae
cld
adc
adc
movsb
add
sbb
adc
jnp
lea
add
pop
push
push
lea
enter
pushl
clc
sbb
mov
fists
data16
js
imul
xor
mov
popa
test
pop
or
push
adc
jnp
hlt
mov
sub
add
jmp
nop
xchg
imul
fstpl
mov
mov
lods
gs
pop
add
popa
pop
inc
jnp
mov
jg
sub
or
sub
jns
or
outsl
hlt
jg
ja
dec
or
sbb
jmp
or
into
dec
aad
xor
xlat
push
add
pop
clc
incl
pop
std
mov
sub
or
ljmp
ljmp
imul
cmpsb
push
inc
sbbb
and
pop
js
or
xorb
jb
enter
repnz
adc
out
gs
arpl
jne
fs
add
gs
ljmp
hlt
or
sarb
jne
lea
inc
insb
enter
dec
and
pop
jp
lcall
add
iret
cmpb
jle
mov
sub
dec
cld
pop
cld
add
pop
pop
and
sbb
mov
push
xchg
out
icebp
das
add
or
sti
xchg
sub
pop
loopne
outsl
jne
loop
es
push
mov
mov
sar
decl
sub
and
and
inc
inc
loope
mov
sbb
gs
jno
adc
ljmp
inc
or
or
stos
stos
and
cmp
add
mov
mov
mov
movl
call
pop
mov
hlt
mov
or
lret
add
mov
mov
sub
and
enter
cld
and
push
out
push
xor
ret
shlb
sbb
jmp
ret
lds
nop
rep
cmpb
inc
jne
xlat
mov
xor
add
shlb
push
decl
jecxz
imul
fisubs
addr16
js
cmpsb
mov
ljmp
popf
pop
cwtl
and
and
pop
cli
fwait
and
mov
mov
jg
test
mov
sbb
mov
xor
and
jmp
movb
idiv
or
xor
adc
or
sbb
adc
inc
inc
incl
mov
arpl
ja
bound
mov
jmp
int3
imul
push
movl
add
decl
jl
add
push
sub
pop
loop
js
adc
mov
jmp
outsb
rol
sbb
cmp
xchg
pop
incl
xor
add
lea
push
shlb
xchg
inc
xor
arpl
sub
cwtl
rorb
movsb
and
ret
test
or
xchg
clc
mov
or
es
xchg
je
add
je
stos
mov
adc
add
rcrb
push
shl
cld
jmp
out
subb
sbb
repz
mov
dec
mov
add
cli
cmp
mov
mov
nop
inc
andl
push
decl
inc
outsl
jne
decl
xor
movsl
shll
lods
or
mov
mov
lea
in
movsl
movsl
loop
lret
dec
jg
jmp
andb
mov
lcall
jns
jle
imul
cmp
jb
iret
push
fdivrl
fnstsw
jmp
xchg
pushl
cli
sbb
cmp
out
dec
iret
insl
dec
cmc
pop
inc
xchg
test
sbb
fxch
pushf
imulb
or
call
and
movsb
es
mov
adc
dec
add
ret
int3
push
xor
aaa
xchg
cs
dec
ds
arpl
sbb
mov
je
inc
inc
sub
movsl
mov
dec
xor
and
sar
or
cmp
adc
cmp
popa
lret
mov
pop
push
cmc
pushl
dec
imul
les
jbe
xchg
decl
add
cwtl
add
bnd
mov
hlt
cmp
mov
add
or
or
add
sub
mov
icebp
lea
adc
and
mov
mov
cld
push
add
or
push
sub
cmpsl
sbb
lcall
ret
push
movb
push
pop
sub
mov
sub
push
mov
adc
das
std
call
popa
pop
mov
cmp
arpl
push
xor
push
ret
sbb
and
jge
out
and
aaa
sub
mov
pop
repz
lds
inc
out
je
sbb
std
push
cmp
psubw
push
inc
cwtl
stos
add
dec
mov
inc
subb
pop
test
sbb
dec
adc
push
std
mov
mov
std
mov
and
aad
mov
jg
jge
mov
sub
push
shlb
cld
jl
push
hlt
add
inc
or
pop
and
ret
bound
and
dec
lret
cmpl
ret
mov
cmp
xchg
sub
push
xchg
fsubp
pop
fcmovbe
pop
cli
sarb
dec
sarl
shlb
cmp
xchg
add
rolb
jmp
ret
mov
add
inc
mov
xchg
incb
adc
fsts
clc
and
ret
rolb
ret
cltd
call
adc
inc
push
out
sbbl
fs
or
jg
jg
mov
add
cmpb
adcb
jl
lret
jmp
xor
lahf
movsb
add
cmp
jnp
scas
nop
ljmp
popa
rcll
jae
xchg
lock
push
stos
mov
dec
sbb
ficoms
jne
bound
clc
pushl
add
add
mov
repz
scas
cmp
mov
inc
lds
inc
push
inc
push
dec
div
and
push
add
add
fistpll
add
push
and
and
push
andb
pop
dec
into
cmp
adc
add
shll
mov
cltd
mov
adc
lods
mov
sub
ret
mov
mov
pop
jbe
add
dec
nop
addb
clc
push
push
stos
cmc
sbb
adc
mov
adc
add
pop
xor
mov
push
icebp
fsub
sarb
or
push
js
push
fcompl
push
outsb
jnp
rolb
sub
push
mov
add
push
fcoms
adc
lods
push
push
ret
cmp
insb
lds
lea
sbb
mov
and
je
cld
decl
sub
add
movzbl
shlb
mov
stos
add
call
or
mov
decl
adc
xor
mov
mov
mov
mov
loop
lcall
cmc
mov
and
lcall
pop
or
push
imul
xchg
sbb
in
les
mov
jns
arpl
ja
xchg
add
mov
dec
or
mov
inc
mov
mov
add
jge
in
mov
inc
jbe
pop
push
sbb
ret
sbb
jne
mov
mov
mov
pop
xor
incl
cltd
orl
push
jmp
out
inc
inc
xorl
xchg
test
dec
xchg
test
sbb
pop
xchg
xchg
mov
dec
decl
rcll
dec
cmpsl
dec
rcrl
sarl
nop
dec
jmp
lods
xor
dec
scas
mov
adc
and
mov
cmpsb
push
data16
push
shll
xchg
test
fs
push
and
push
push
mov
test
jne
lret
aaa
sub
xchg
fsubrs
mov
jl
add
add
mov
scas
cmpsb
mov
inc
cmc
shlb
in
sbb
incl
dec
das
or
nop
adc
xor
sbb
ret
jne
aam
rclb
ljmp
cmc
pop
xchg
in
jl
or
das
pop
cwtl
enter
sub
decl
adc
sbbb
sub
push
in
mov
add
fnstsw
incl
cmc
cmp
jne
call
mov
dec
stos
mov
push
inc
pop
mov
inc
pop
jl
gs
insl
or
cmpb
push
mov
ds
jg
movsl
sbb
sbb
sbb
push
inc
cmp
iret
and
rolb
mov
mov
jmp
jmp
jg
incl
add
inc
push
sarl
testb
sbb
inc
add
pop
inc
or
and
mov
les
cltd
sub
ljmp
dec
addl
icebp
dec
jmp
clc
stos
testb
push
ljmp
hlt
jmp
ret
outsb
int3
inc
fildl
push
inc
inc
imul
es
out
push
in
mov
sub
sbb
incl
cld
add
sbb
mov
push
pop
popa
push
loop
push
mov
dec
xor
js
das
cmp
idivb
and
les
sub
in
lret
inc
jmp
push
dec
jo
leave
idivb
mov
jne
imul
fcmovnb
add
mov
xchg
sbb
mov
cmc
test
sbb
mov
iret
sbb
lret
push
movb
decl
movsl
jbe
mov
scas
orl
mov
imul
fildll
jne
sbb
xchg
jmp
xchg
add
inc
mov
scas
xchg
pop
lds
mov
adc
dec
test
inc
cmp
pushl
aaa
pop
mov
fidivrl
mov
xchg
cmpl
ret
adc
cmp
xchg
xchg
xor
inc
mov
pop
out
lds
add
jge
js
inc
or
cmp
add
std
push
je
add
sbb
popf
dec
mov
ljmp
clc
xor
loope
cmp
test
xor
cmpsl
add
cmpb
das
icebp
jg
jmp
aas
inc
add
lret
gs
fimull
incl
adc
fs
adc
or
cmp
je
inc
xor
cmp
fisubs
je
inc
cmp
pop
push
sti
incl
pop
sbbl
jle
xor
mov
or
test
xchg
push
pop
std
decl
test
or
dec
faddl
cli
rorb
xor
movsb
add
cltd
daa
add
dec
mov
sahf
add
data16
outsl
jg
mov
lea
mov
movsl
add
and
or
mov
dec
fisttpll
or
jb
subb
call
sbb
adc
push
mov
jbe
clc
idiv
mov
adc
nopl
and
fs
adc
push
or
fists
jle
mov
adc
or
mov
fcompl
movsl
rcrb
dec
adc
mov
pop
loopne
iret
mov
mov
inc
inc
sbb
decl
pop
cmp
ja
fcom
pop
decl
sbb
xorl
bound
adc
cld
and
and
pop
push
mov
dec
xchg
or
mov
jmp
pop
add
orb
clc
pop
arpl
lret
ja
or
out
jmp
addb
mov
jl
jmp
mov
inc
ret
cmpsl
aam
aam
ljmp
std
dec
sub
push
sub
addb
jmp
cs
mov
lea
xchg
xlat
fisttps
mov
dec
jno
and
or
decl
in
test
pop
movsbl
cmp
mov
roll
shlb
lea
adc
jne
rorl
mov
aaa
mov
jge
aad
cmpsb
insb
fadds
cltd
jp
outsb
xchg
inc
pop
decl
mov
call
daa
or
pop
sbbl
jb
andb
rorb
andl
xchg
stc
fadds
cmc
jl
push
mov
repnz
inc
iret
add
cmpl
enter
sbb
cmpsl
ror
xor
dec
addl
call
incl
int
jno
loop
inc
push
adc
inc
add
inc
push
xor
cmp
movsl
call
rcl
aaa
mov
add
test
icebp
data16
lods
call
inc
loop
pop
xchg
mov
add
fdivl
adc
sbb
cmp
imull
repnz
cltd
fmull
fists
or
mov
dec
stos
lret
cld
inc
cld
pop
clc
call
add
dec
xchg
test
test
jb
cs
push
addr16
mov
decl
stos
out
pushf
and
jmp
shll
dec
or
filds
cs
shl
in
lods
inc
pop
pop
or
imul
roll
jmp
and
add
imul
xchg
test
mov
loope
pop
pop
cmp
mov
or
or
add
push
fcom
call
or
and
adc
xchg
push
mov
ljmp
xor
daa
jmp
cmp
shlb
push
jle
int
mov
std
pop
or
or
jmp
pushf
cwtl
fiaddl
decl
and
push
mov
jecxz
loope
adc
or
cltd
jecxz
jmp
enter
jg
mov
xor
inc
nop
loope
xor
aad
imul
decl
int
inc
sbb
fiadds
pop
adc
mov
jge
aas
sarl
dec
xchg
push
jmp
test
imul
pop
or
mov
ljmp
es
cmp
dec
or
add
add
sub
fisttps
jg
jmp
or
dec
je
or
sub
mov
subb
push
sti
sbb
push
push
or
testl
outsb
call
and
mov
cwtl
or
mov
push
pop
sbb
test
aaa
push
lret
xchg
inc
or
mov
fstpl
loopne
es
popa
sbb
or
aaa
and
sub
mov
jg
test
sar
pop
mov
not
pop
mull
cmp
js
and
pop
mov
push
sti
into
mov
add
ret
xchg
inc
fwait
dec
pushf
rcll
pop
jmp
mov
sub
mov
sub
and
fldl
lods
sbb
fldl
rolb
loopne
or
mov
aam
mov
xchg
packsswb
out
ja
dec
ret
jecxz
jg
cmp
aaa
ret
test
push
cmp
enter
add
cmpsl
repz
pop
xchg
gs
decl
xchg
stos
roll
sbbb
mov
pop
sbb
pusha
into
jge
decl
fmull
jmp
mov
scas
add
adc
inc
push
jmp
nop
sub
adc
outsl
hlt
jmp
mov
push
enter
test
lcall
dec
shrl
hlt
je
and
notb
hlt
dec
jne
or
push
mov
pop
jmp
jg
sub
mov
xlat
xchg
std
call
push
scas
xchg
adc
jg
or
and
mov
fcmovb
push
sub
pop
jmp
fidivrl
xchg
xor
pop
cs
mov
test
ljmp
std
push
add
cmp
out
add
mov
ret
or
mov
and
cmp
mov
ret
cmp
out
or
sbb
testb
pusha
or
leave
inc
mov
test
mov
hlt
add
jmp
clc
and
jnp
bound
or
jae
lods
push
mov
lock
pop
call
jg
mov
fstpl
push
test
jmp
mov
mov
jg
movsl
and
xchg
popa
jne
cmp
aad
inc
pop
or
ljmp
mov
cwtl
ja
fadds
lret
incl
xchg
fwait
pushw
adc
sbb
sub
cmpsl
jl
loope
call
hlt
mov
and
ss
sbb
add
sbb
xlat
andl
mov
lcall
and
iret
sbb
jle
mov
mov
outsb
dec
fcoms
sub
clc
pushl
mov
out
movsb
lahf
insb
lret
push
fstp
fisubs
pushl
out
sbb
ret
sub
xchg
mov
incl
or
cld
fldl
dec
pushl
inc
leave
push
jb
push
popf
xchg
inc
mov
add
gs
or
push
adc
pop
fnstenv
ds
jne
xor
pop
cmpsb
dec
clc
and
in
ss
decl
and
sub
mov
popa
dec
iret
add
call
leave
adc
cmp
cmpsb
movsl
pop
test
sbb
aaa
and
pop
xchg
jp
cmp
pushl
or
stc
add
sub
je
add
push
bound
xor
jno
push
mov
sbb
mov
popa
rclb
shll
xorb
iret
add
inc
mov
mov
sub
sub
andb
lcall
decl
cwtl
and
mov
lea
mov
shr
aaa
arpl
sub
in
loope
clc
cltd
sub
fnstsw
movswl
loop
xchg
add
fstcw
ss
and
cmp
shlb
shlb
into
mov
loopne
ret
insl
or
mov
pop
push
mov
call
sub
cmp
cmp
mov
adc
fwait
sub
push
sti
adc
insl
push
clc
pop
mov
fdivp
push
test
data16
lods
cwtl
jl
sub
jne
pop
pop
sub
or
shl
dec
mov
adc
add
aad
cmp
push
inc
jo
stos
push
mov
push
cmp
loopne
lea
push
xor
pop
sbb
jmp
mov
jns
dec
js
lea
adc
aaa
cs
dec
or
inc
enter
xor
dec
xor
jg
pop
sub
inc
roll
rolb
mov
cwtl
je
lea
ret
in
push
ljmp
ljmp
sbb
and
inc
cmp
dec
enter
mov
lret
add
enter
and
mov
pushl
dec
mov
dec
xor
cmc
nop
popf
mov
mov
mov
add
or
mov
pushl
pop
iret
inc
push
pusha
push
pop
push
mov
pusha
sub
cli
js
xor
mov
call
sub
xor
or
cmp
jne
out
cmp
cld
jl
inc
cmp
push
decl
sub
cmp
mov
adc
jmp
dec
mov
or
jno
test
sbb
xor
lea
sbb
mov
sub
jge
pop
scas
add
mov
out
or
addl
incl
shlb
pop
add
aaa
ret
pop
inc
jmp
mov
movsb
das
jge
jp
fs
sbb
push
stos
fisttps
lds
jbe
add
ljmp
daa
cmc
sub
or
jg
cmp
cld
stos
xor
imulb
in
cs
add
std
std
mov
dec
fucomip
ljmp
or
cmp
repnz
jmp
cmp
or
and
les
ljmp
icebp
or
subb
adc
pop
mov
sub
jg
mov
cmp
pop
pop
popa
lret
jbe
shl
mov
sbb
lcall
leave
andb
sub
or
adc
mov
jmp
std
ljmp
icebp
mov
ret
scas
adc
dec
into
cwtl
or
rclb
sbb
add
mov
aaa
sub
push
gs
and
in
lock
mov
jbe
int
lret
add
pop
cld
mov
jmp
aaa
ja
xor
mov
mov
fstpt
pop
clc
inc
lret
add
xor
pop
cmp
adc
rolb
incb
sbb
adc
push
mov
jne
fildl
enter
jg
adc
test
cmp
ret
cmp
xor
mov
incl
jmp
adc
lods
mov
pushf
push
or
icebp
jmp
and
push
mov
add
xchg
clc
mov
mov
and
les
cmp
and
jmp
fbstp
clc
push
mov
lods
sub
xchg
jg
sub
inc
and
cmp
pop
xor
bound
xchg
or
imul
mov
lea
dec
add
loop
test
adc
mov
add
incl
loop
shl
shr
or
add
cmp
pop
ljmp
xor
adc
insb
stos
pop
jno
cli
dec
std
call
xor
jp
imul
push
cmp
dec
adc
mov
movsl
das
add
test
ret
pop
sar
jmp
nop
add
cmp
sub
mov
into
aam
xchg
jne
jb
rolb
cmpsl
sub
mov
movl
bound
add
adc
ljmp
std
and
scas
and
inc
int
mov
add
lret
inc
sarb
ljmp
int3
mov
sbb
arpl
pop
add
lcall
into
or
jmp
or
jmp
xchg
out
jb
xlat
xchg
gs
add
call
jge
dec
jae
push
sbb
test
sub
movl
jg
jns
in
and
ret
popa
ret
les
lret
mov
call
dec
pop
push
mov
adc
lret
jmp
xchg
sahf
or
add
mov
xchg
xor
or
jmp
or
adc
pushl
mov
enter
lret
xchg
adc
cmpsl
push
ss
jae
stos
jno
inc
and
or
decl
rorl
icebp
lock
popf
sbb
xchg
call
push
idivb
inc
lds
adc
xor
stos
repz
test
lahf
xlat
cmp
push
push
sbb
testb
inc
repz
sbb
mov
int3
adc
adc
and
shr
mov
ret
lds
xor
jne
stos
lcall
mov
cmp
push
addl
push
dec
inc
xchg
dec
cmpsl
je
lret
popa
or
adc
aam
int3
pop
call
mov
mov
jae
and
jecxz
pop
mov
lds
add
mov
jb
repz
sub
pop
cmp
mov
and
sbb
sbb
sbb
clc
jg
data16
mov
add
adc
mov
decl
mov
adc
enter
arpl
dec
loop
and
lcall
jne
jb
cmp
nop
add
call
jg
xchg
inc
or
lcall
enter
scas
jb
push
jp
nop
iret
xor
mov
mov
inc
dec
cmp
std
call
in
xchg
dec
and
push
dec
ljmp
and
int
dec
or
loopne
jne
subb
sbb
xor
jne
cmc
mov
fwait
adc
jmp
pusha
repnz
add
sbb
aas
lcall
or
push
adc
popf
adc
push
mov
xchg
fsubrp
divb
clc
or
adc
jmp
mov
mov
ficoms
adc
cmp
cwtl
fsubl
pop
adc
push
cmp
jmp
mov
fimuls
mov
and
hlt
push
sbb
fldcw
inc
push
xchg
sahf
lret
in
dec
or
and
inc
inc
xor
mov
daa
push
dec
jb
mov
out
sbb
enter
loop
adc
addl
mov
movsb
aaa
mov
cmp
es
mov
lock
int3
mov
insb
in
movsl
add
out
cmp
jb
or
rolb
ret
xchg
or
das
add
inc
orl
and
ds
call
cld
sub
lea
lea
lcall
lods
mov
dec
ljmp
call
add
nop
rcll
jae
aas
popa
cmpsl
sub
cmp
xchg
xchg
dec
lds
sub
aaa
mov
adc
sarl
outsb
pushf
jns
mov
cmc
mov
pop
pop
jg
mov
cli
frstor
dec
push
xor
icebp
xor
fidivl
aas
add
les
push
cmpsb
jp
sbb
test
mov
push
push
orl
xor
aad
lock
sbb
jns
shl
pop
cmp
mov
jbe
aas
pop
jg
and
repz
daa
ret
or
and
lock
loopne
loop
lds
inc
sub
jnp
xor
std
ljmp
cmp
jne
push
out
scas
jne
xor
clc
jo
xor
lock
xor
outsl
cmc
decl
push
je
vpmuludq
sahf
movsb
xor
inc
dec
xor
jnp
push
mov
xchg
sub
outsl
sub
loope
lcall
add
adc
mov
dec
mov
or
sub
in
lods
pop
mov
push
lret
push
neg
add
and
mov
mov
ret
insl
aad
fnstcw
push
adc
pop
std
fbld
mov
sub
push
cltd
popf
push
mov
out
and
lcall
or
out
sbb
sub
add
xor
fsubs
mov
mov
ljmp
fmull
and
and
mov
mov
sub
push
push
jns
aaa
jl
or
push
fbld
cmp
ret
stc
int3
inc
fs
jmp
subl
leave
push
and
mov
jns
in
push
mov
adc
or
movsb
incl
dec
sarb
add
test
cmp
ja
add
push
lcall
jmp
mov
imul
mov
ds
subb
xchg
xchg
and
nop
bound
aaa
mov
lods
dec
cli
stos
mov
sbb
cmp
mov
call
or
xlat
arpl
addl
push
add
jmp
ret
cwtl
xchg
push
push
push
subl
jmp
pop
loop
aaa
clc
dec
shlb
sub
mov
sti
loopne
ud0
jg
mov
je
xchg
mov
cmp
push
sbb
aas
subl
push
fsubrs
add
repz
or
cmp
jg
andl
jne
js
sbb
or
test
pushf
push
or
pushl
add
clc
add
les
not
sub
popa
daa
xchg
xchg
mov
ja
push
jno
pop
iret
jge
imul
mov
out
insl
incl
rcll
dec
inc
clc
or
fisttps
push
mov
or
push
push
sbb
mov
add
lea
sub
pop
lahf
mov
loop
adc
hlt
testl
fistps
stos
add
repz
xchg
sub
imul
xor
or
pop
aaa
adc
aam
push
xor
sti
sbb
cmp
pop
inc
jbe
pushf
movzwl
loop
push
or
movsl
pop
loopne
adc
mov
mov
push
cmpsl
lds
outsl
call
jno
lock
inc
fs
cmpsb
adc
shll
jne
and
inc
sti
mov
mov
push
imul
sahf
adc
outsb
xlat
inc
mov
dec
sar
push
mov
imul
das
inc
sahf
cmp
sbb
loope
dec
add
pop
push
shll
call
mov
lods
pop
cmpsb
push
push
dec
enter
or
sbb
cli
sub
cld
mov
add
aam
jb
outsl
ljmp
mov
test
int3
mov
mov
sbb
or
xor
push
aaa
or
mov
loope
addl
rcl
dec
mov
or
dec
call
sub
mov
in
cltd
loopne
jne
aaa
jmp
push
mov
mov
enter
or
movb
or
mov
pop
enter
mov
fsubrs
fdivrl
cmpsb
jmp
jo
dec
pop
dec
lret
adc
cmc
rcr
fstpt
ds
test
cmp
sbb
xchg
mov
sar
pushl
sbb
mov
ja
push
or
insl
testl
int3
jmp
pshufw
push
inc
push
push
hlt
mov
jg
pop
xchg
dec
xor
icebp
mov
cmp
jge
pusha
inc
xor
xor
mov
push
stos
into
xor
test
mov
cmp
push
int3
stos
or
decl
std
xor
push
add
adc
mov
pushf
stc
call
fnstenv
cmp
jae
addr16
leave
push
mov
pushl
mov
enter
lods
dec
loop
sub
stc
push
sub
push
jg
js
sbb
sbb
sbb
mov
jmp
xchg
jne
clc
cld
and
loop
nop
dec
xor
decl
cli
push
mov
and
mov
cmp
push
incb
shll
xchg
xor
ljmp
cmc
decl
sub
andl
xor
testb
adc
cmp
dec
pop
adc
push
sarl
mov
roll
cs
add
xchg
js
jmp
sub
mov
aaa
fldenv
pusha
adc
lock
incl
push
fdivs
mov
inc
add
sbb
push
inc
daa
xorb
decl
std
jle
ss
test
test
les
loopne
jle
incl
adc
enter
dec
sbb
xchg
cvtdq2ps
lret
jg
mov
sbb
add
mov
push
mov
icebp
ljmp
mov
mov
jle
rcll
pop
inc
mov
stos
incl
in
jg
inc
in
add
mov
xchg
call
inc
jp
cs
adc
lea
inc
push
or
dec
fildll
std
incl
inc
mov
jmp
push
outsl
xchg
out
into
lea
inc
cmp
cli
decb
lea
test
and
mov
mov
jmp
pusha
xchg
cmp
inc
sub
add
inc
enter
jmp
lods
sub
xchg
pop
sub
imul
aad
mov
je
push
fsubrl
fcmovnbe
mov
mov
inc
lea
test
pushl
pop
clc
mov
mov
les
or
and
mov
push
pushf
and
push
or
dec
lcall
std
jne
test
or
add
sub
call
nop
push
outsb
and
inc
or
je
mov
das
or
push
leave
movzbl
sbb
push
aad
insl
test
jg
mov
test
push
insb
decl
lcall
adc
xchg
es
shl
loope
add
add
sbb
imul
inc
cmp
inc
fiadds
sub
jg
jg
cmp
jo
dec
cmp
mov
mov
inc
xchg
test
aas
or
incl
jl
jne
enter
sbb
add
dec
jns
mov
ljmp
cmc
pop
std
xor
add
testb
xchg
xor
popf
lret
inc
xor
adc
std
add
xor
add
andl
pop
ss
adc
loop
dec
dec
pop
xchg
pop
push
popa
aad
xor
inc
call
fadds
fisttpl
ficoml
mov
xchg
pop
push
xlat
jecxz
test
sub
inc
sbb
pushl
int3
mov
pop
or
ja
dec
jae
jns
sub
cs
xor
cmp
shr
xor
xor
xchg
pop
pop
mov
rol
ljmp
mov
mov
mov
push
mov
shr
lcall
cmp
pop
pop
imul
sarb
shr
test
cmpsl
mov
mov
call
leave
aas
lret
inc
clc
mov
pop
ret
or
inc
mov
mov
jbe
sbb
outsb
xor
push
cli
push
movsl
movsb
adc
decl
mov
cld
lahf
stos
add
cmp
lock
addl
mov
mov
jg
pushl
mov
mov
sbb
pushf
clc
fs
cmpl
movsb
sbb
cli
jg
jae
gs
test
and
pop
lahf
sar
pop
test
test
in
in
lock
andb
or
adc
pop
push
push
xor
pop
les
and
flds
push
sub
int3
daa
push
pushl
mov
push
adc
mov
dec
ss
or
lret
pop
push
cld
or
inc
jmp
pop
outsl
cld
outsl
aam
mov
or
xchg
push
sbb
incb
add
pop
add
sti
xor
notb
add
incl
xor
pushf
add
mov
mov
mov
dec
pop
sub
int3
xor
sbb
jmp
jmp
rolb
hlt
mov
xchg
mov
bound
adc
xor
mov
inc
jle
inc
jle
arpl
gs
idiv
call
repnz
push
in
inc
fimull
push
mov
pop
popa
jmp
pusha
pop
pop
in
test
outsl
icebp
addr16
xor
sub
cli
lea
push
push
ds
add
sarb
cmc
outsl
icebp
incl
insl
lcall
or
les
jmp
cltd
das
push
mov
lcall
das
lock
mov
gs
ret
es
add
ljmp
mov
dec
jne
inc
cmc
mov
adc
mov
icebp
mov
decl
sub
add
insl
xchg
lret
push
jb
lds
dec
cmp
cmc
or
inc
int3
pushl
cli
incl
mov
add
imul
jmp
pop
adc
push
or
sub
jmp
cwtl
add
push
pop
dec
mov
pop
cmp
shlb
decl
daa
push
repnz
pop
nop
sub
mov
push
pop
sar
clc
inc
inc
leave
or
or
cmp
mov
ljmp
mul
xchg
inc
sbb
call
je
test
pop
push
adc
inc
ljmp
lock
mov
xlat
mov
cld
or
fimuls
ret
sub
push
or
mov
inc
movsb
outsl
mov
adc
cmp
cmpb
cmpsb
lods
sbb
icebp
jl
incb
and
sbb
loope
adcl
xor
dec
hlt
inc
xor
lods
push
fwait
and
push
add
add
lods
add
mov
add
loopne
mov
sbb
sbb
inc
cmp
loope
jl
inc
xor
pop
ljmp
and
push
pop
out
mov
cmp
jmp
enter
mov
push
mov
cmp
add
test
aad
cltd
les
rcrl
lock
pop
add
xchg
popa
sub
adc
mov
ds
sbb
outsl
lock
out
mov
add
pop
shr
dec
sub
cmp
mov
fists
int3
xor
imul
push
enter
mov
mov
movb
arpl
in
out
out
and
jmp
pop
orb
sti
out
aas
fs
in
mov
inc
ljmp
mov
or
mov
or
cwtl
cmp
jne
mov
incl
clc
data16
aam
mov
maskmovq
adc
and
lcall
jl
cwtl
hlt
pop
adc
rcr
test
jne
push
call
adc
sbb
ja
pop
add
ljmp
push
mov
or
clc
loopne
push
jmp
movzwl
cmp
test
adc
stc
nop
ja
lock
cmp
icebp
fistpll
sbb
dec
lea
inc
shll
inc
cbtw
adc
mov
es
fcomps
lret
inc
xchg
clc
notb
inc
pushw
cli
aas
insb
js
outsb
dec
mov
pop
cli
mov
pop
inc
or
mov
jbe
je
add
xchg
das
icebp
jg
sbb
add
int
call
adc
es
sub
aas
cli
add
and
in
mov
aaa
pushl
neg
and
sub
mov
fisttps
sarb
mov
test
movsl
bound
inc
outsb
fdivr
mov
mov
and
shl
cmp
mov
mov
push
mov
push
inc
jmp
das
mov
mov
stc
xor
sub
mov
mov
jae
adc
add
cmpb
add
sbb
inc
sbb
sahf
push
loop
dec
pop
push
xor
incl
shll
into
adc
daa
or
mov
cmpsb
int
pop
jp
inc
xchg
pop
aaa
mov
mov
add
adc
and
rol
lcall
ljmp
rcrl
inc
rolb
fnstenv
pop
inc
sbbl
std
pop
loop
in
jb
and
or
mov
andl
dec
fadds
mov
and
enter
test
xor
les
int3
or
aad
or
loop
jl
dec
push
ljmp
cmpb
shlb
add
loopne
sar
jmp
addr16
cmp
or
adc
test
popa
and
mov
mov
mov
add
lret
mov
xor
je
push
lock
or
add
inc
xchg
in
loopne
clc
jg
mov
pop
and
mull
sub
jg
hlt
outsl
xor
push
fists
push
adc
cmp
adc
data16
adc
pop
mov
leave
mov
aam
xlat
pushf
mov
sbb
test
sbb
inc
xchg
js
or
call
xchg
stc
ss
sub
inc
rolb
jne
push
and
test
lcall
nop
test
incl
outsl
lcall
inc
xchg
das
xor
adc
and
rcrl
jg
lods
add
repz
pop
or
dec
inc
sub
lcall
std
test
outsb
and
adc
fisubrl
xor
add
mov
es
xchg
leave
sbb
xor
cld
inc
push
dec
adc
outsl
icebp
ret
lcall
jp
lods
ljmp
es
pop
adcl
mov
sub
adc
or
and
dec
or
push
xchg
push
add
mov
and
xor
and
and
pop
cli
jg
push
adc
cmc
fwait
jle
add
incl
pop
xchg
mov
mov
xchg
stos
test
mov
cmp
movsb
lods
sbb
pusha
adc
inc
or
incl
and
sbb
sub
push
mov
push
rclb
cmp
cmp
mov
fucomp
incl
jb
adc
push
in
sub
cld
lcall
xchg
add
push
sar
jle
dec
xchg
movsl
enter
jnp
inc
sub
jns
loopne
decl
inc
stos
mov
das
inc
scas
rorl
pop
adc
xor
das
lock
in
push
in
sbb
subl
add
jne
in
sub
addb
decl
jg
orl
shlb
mov
testb
dec
mov
outsl
aam
pop
cmp
lret
hlt
outsl
hlt
and
js
fadds
mov
mov
int3
ljmp
pop
xchg
cmp
mov
arpl
lock
in
lock
inc
cmp
loop
inc
and
cmp
loopne
sub
jmp
xchg
sbb
sbb
sbb
in
jne
push
js
cmp
add
push
data16
test
jmp
stos
cmp
pop
inc
out
sbb
pop
sub
inc
or
dec
repz
dec
push
or
sub
rclb
jmp
outsl
std
push
fistps
jmp
pop
inc
and
cmpl
subl
fistl
cmp
fadds
movsb
jmp
bound
push
or
mov
cmpb
faddl
scas
out
sbb
pop
je
mov
std
mov
push
or
in
push
mov
pop
outsl
shr
jg
and
cmpl
xor
mov
cmp
and
les
dec
test
jo
test
jae
sbb
jb
fisttps
xchg
adc
inc
sbb
pushl
push
adc
and
add
sbb
cmp
and
fs
or
jmp
addl
aam
add
adc
insb
mov
mov
divb
inc
aaa
sub
xchg
and
push
insb
mov
subl
dec
mov
sub
push
mov
mov
mov
sbb
jg
and
jg
rcrb
pop
cli
mov
dec
sub
jp
mov
adc
sbb
daa
addb
jmp
faddl
ret
icebp
popf
fwait
mov
and
decl
push
fistpll
or
push
pop
push
mov
xchg
pop
and
fisubrl
arpl
ljmp
lahf
cld
cs
in
lcall
push
mov
add
push
pop
dec
adc
jmp
out
jmp
mov
inc
jg
push
lods
sub
fisttps
jp
int3
incl
out
xor
ljmp
inc
insl
mov
sbb
inc
jb
mov
ja
and
sbb
add
pop
add
and
sub
jg
je
dec
fildl
xor
dec
iret
and
fnsave
adc
inc
inc
mov
xchg
pop
jl
inc
cld
jmp
pop
inc
pop
inc
mov
inc
dec
mov
iret
adc
jge
incl
add
out
rorb
inc
push
lret
push
fldt
sar
xchg
xor
pop
push
in
mov
ret
cli
dec
lret
mov
fucomip
xchg
push
negb
lock
jo
dec
call
mov
sbb
inc
je
das
jmp
inc
dec
adc
xchg
xor
pushl
pop
dec
sub
cmp
shll
and
push
loop
je
inc
insb
xchg
cli
mov
inc
fldl2e
popa
aaa
push
fidivs
sti
push
inc
push
sar
pop
ljmp
push
out
je
orb
pop
fists
call
lcall
and
loopne
mov
push
inc
or
sarb
into
or
sub
add
add
mov
data16
xchg
leave
cs
push
stos
push
test
push
or
xorb
add
cmpsl
jns
mov
fadds
sbb
push
xchg
or
jmp
push
mov
pop
loop
xchg
xor
adc
mov
movsb
addl
inc
cmp
sbb
and
das
mov
pusha
cmp
inc
xchg
rcrb
dec
mov
inc
nop
push
push
add
sbb
fdivr
shrb
cmc
jbe
movsb
or
push
outsl
push
in
push
je
and
loope
lcall
inc
cmp
mov
dec
sbb
ss
cltd
scas
adc
incl
popa
mov
aam
mov
ret
mov
scas
cmp
repnz
ljmp
jmp
add
inc
loop
popa
shlb
sbb
lods
pop
xchg
lret
lcall
pushf
mov
adc
jp
outsb
mov
shll
je
xor
jg
push
mov
decl
sbb
and
pop
jg
addr16
xchg
shrb
jge
arpl
fisttpl
test
adc
cmp
adc
sbb
add
jg
loop
les
ss
faddl
fwait
or
mov
lcall
sbb
dec
shll
sub
and
pushf
jg
ljmp
fwait
xchg
mov
aam
js
lea
pusha
inc
dec
pop
inc
cmp
push
lcall
xchg
in
push
push
pusha
lahf
loop
mov
mov
xor
and
jp
xor
pop
cld
dec
leave
and
hlt
stos
fldcw
call
jns
and
test
adc
fdivl
lcall
xlat
mov
dec
inc
xchg
mov
pop
dec
sbb
shll
loopne
jne
adc
cltd
aam
jecxz
ljmp
bound
xor
pop
sbb
int
call
fadd
pop
cmp
and
popl
hlt
lcall
jge
pop
xchg
or
push
push
push
sbb
dec
out
or
mov
add
mov
outsl
push
xor
je
cwtl
inc
pop
loopne
testb
rclb
popa
xor
shl
push
ret
movsl
jmp
dec
test
cld
mov
loopne
dec
leave
aam
jne
enter
outsl
push
repnz
rcrb
outsl
jge
cmp
mov
orb
dec
or
out
arpl
ljmp
hlt
adc
repnz
adc
gs
adc
lcall
and
aam
imul
addr16
xor
fcompl
mov
fdivrl
mov
clc
decl
lods
mov
jno
fmull
mov
ljmp
mov
lcall
dec
push
mov
js
loopne
dec
mov
cmp
loop
roll
inc
pop
mov
or
xchg
jmp
inc
js
insb
outsl
imul
into
lds
mov
jecxz
test
jge
push
inc
imul
add
data16
arpl
jne
sbb
sbb
cmpsb
pop
pop
jo
jo
xchg
clc
jmp
gs
addr16
sbb
popa
jo
mov
arpl
lods
test
outsb
pop
xor
test
es
cmp
jne
xor
dec
lret
nop
addr16
jg
fsts
bound
js
sbb
pop
gs
push
je
and
sub
jae
xchg
insl
lret
loopne
cwtl
xchg
sub
loopne
adc
int3
imul
jmp
mov
ret
mov
add
push
add
arpl
mov
pop
pusha
ret
inc
nop
cwtl
jno
inc
addb
aas
sbbb
aas
inc
inc
push
mov
fs
push
das
xor
mov
adc
insl
add
jae
cmp
je
jnp
mov
outsl
loop
add
stos
clc
jmp
sbb
pushf
adc
test
outsb
pusha
pushf
mov
lcall
sbb
popa
jb
xor
sbb
jnp
lahf
jo
out
insb
stc
movsl
fistpll
jne
lcall
xor
fnstcw
sbb
cmp
fistl
filds
xor
jbe
fs
fcoml
sub
imul
jle
add
push
and
mov
mov
sub
inc
lret
add
aaa
xor
cs
sub
cwtl
es
push
xor
jl
pushl
jb
lds
xor
scas
xor
scas
in
xor
in
add
sti
cld
xor
xor
pop
dec
mov
popf
inc
outsl
pop
cld
lcall
pop
push
and
aaa
xchg
sbb
imul
gs
mov
outsl
fldt
xor
lahf
cmc
jbe
testl
sti
mov
aaa
lods
fcmovnu
mov
xor
pop
sbb
out
fdiv
popf
pop
sbb
push
sbb
fistpl
jp
xor
mov
jns
add
cmp
adc
xchg
aaa
xlat
push
filds
adc
adc
repnz
pusha
jo
push
std
xor
fldt
loop
out
mov
repz
pop
dec
out
out
or
ds
jno
push
jno
xor
xlat
fistpll
out
jle
push
sbb
cmc
ss
outsl
mov
cmpsl
ficoms
and
rcr
push
and
push
sub
fcmovnu
inc
outsb
insb
xlat
jns
aad
xchg
or
jns
mov
into
push
aaa
xlat
pop
and
push
outsb
into
cmpsl
repnz
fcmovnu
cmp
jmp
xchg
cli
mov
test
add
inc
dec
inc
clc
paddsw
cmp
cld
add
push
sub
add
mov
lahf
call
pusha
sub
lcall
ljmp
mov
inc
ret
clc
jle
cli
mov
gs
cmp
ljmp
setp
jg
pop
push
popa
insb
rep
les
fs
shlb
cmpb
or
jg
or
jnp
jae
insl
inc
pop
arpl
popa
or
popa
arpl
pop
pusha
jbe
cs
jne
jb
lcall
fcom
pop
inc
inc
popa
jl
dec
push
test
jmp
jle
jb
and
popa
nop
jb
jmp
cs
mov
push
rep
jecxz
call
sub
int
mov
cmp
imul
mov
adc
popf
outsl
call
outsl
push
je
cmp
movsl
adc
fsts
gs
out
into
cmp
loopne
int
lds
pop
or
jmp
cmp
repz
ljmp
arpl
das
out
pop
loopne
jne
les
bound
outsb
out
shrb
jmp
lcall
mov
jb
insl
xchg
dec
mov
sub
mov
sarl
jb
mov
xchg
bswap
outsb
das
cli
dec
lahf
dec
mov
jecxz
std
mov
pop
je
sub
sbb
lcall
jae
jb
fidivs
rorl
xchg
sub
lret
repz
popa
cs
add
popa
or
bound
and
jg
sub
pushf
cmp
mov
xor
adc
scas
sbb
push
clc
inc
adc
leave
lea
mov
decl
mov
dec
dec
inc
lock
ljmp
call
pop
int3
mov
imul
je
dec
sub
jg
decl
push
andb
add
mov
add
push
push
dec
inc
popa
mov
popa
jmp
call
xor
and
cwtl
outsb
aaa
dec
jg
incl
dec
fisttps
pop
sub
jmp
je
call
push
dec
xor
fucomip
dec
xchg
or
imul
data16
add
xor
sarl
loop
jae
jp
hlt
jg
daa
cmp
imul
ljmp
add
outsl
test
inc
dec
gs
lret
inc
xor
outsb
add
jo
insb
loop
lods
insb
push
push
ficomps
mov
mov
es
shrb
adc
gs
in
repnz
inc
jmp
ror
dec
jne
xchg
push
sub
cmpsl
sti
int3
mov
mov
or
cmpsb
dec
pushl
bound
jns
jno
lds
rorb
jp
loop
incl
mov
loop
lds
xor
xor
xor
inc
sbb
lods
std
divb
cld
ret
repnz
jle
js
aad
push
imul
data16
xchg
pop
aaa
cltd
ret
and
xchg
bound
mov
iret
mov
aaa
clc
jmp
cmp
jbe
adc
push
push
or
cli
push
insl
mov
lods
cmp
ljmp
das
je
andb
dec
inc
pusha
cltd
int
dec
inc
popa
imul
leave
jb
lahf
push
arpl
out
inc
insb
jb
insb
cmpsb
dec
lcall
fwait
mov
inc
pushf
inc
sub
mov
jl
xlat
xor
add
decl
out
out
out
stc
icebp
ja
jg
cmpsl
mov
inc
dec
mov
std
push
shrb
pusha
xor
xorl
cltd
add
dec
std
mov
cmp
xlat
rcrb
cmc
xor
rcl
fucomip
jg
inc
test
pop
push
pusha
xchg
and
pop
jmp
mov
or
cmp
lret
jno
cld
stc
pop
sarl
add
sar
insl
sar
jg
jne
fnsave
scas
dec
ljmp
cmc
mov
mov
lea
shlb
jae
shrl
je
lock
jmp
jns
mov
sti
cmp
jb
adc
mov
scas
add
lods
push
std
xchg
sub
loopne
lea
jg
int
mov
dec
jo
in
xorl
inc
jmp
jp
push
jg
cmp
inc
mov
aad
xlat
dec
add
cmp
mov
outsl
std
inc
jmp
jnp
fs
cmp
data16
stc
pusha
test
lods
mov
mulb
dec
in
fildll
les
push
ud0
in
pop
mov
popa
imul
ljmp
jmp
jmp
inc
leave
mov
je
adc
je
cmpsl
imul
iret
jb
ret
rorb
or
loopne
xor
cmp
js
ja
add
inc
fcoms
mov
ds
fists
pushf
cli
push
outsl
enter
mov
adc
aaa
and
and
push
icebp
push
jmp
inc
mov
ret
enter
or
cmpsl
int
inc
mov
mov
xor
jecxz
das
imul
and
loope
jbe
fsub
and
pusha
adcl
sub
rcl
push
xchg
xchg
outsl
lods
fbld
ss
int
rclb
out
and
xor
push
es
ret
aam
mov
jo
sub
or
adc
dec
jl
outsl
out
sub
mov
dec
and
and
fs
dec
iret
push
mov
or
mov
int3
mov
pop
adc
xchg
mov
jp
call
push
xchg
add
dec
mov
jns
jmp
outsl
mov
imul
dec
call
pop
or
mov
mov
ret
dec
rorl
imul
push
imul
xchg
pop
jo
pusha
xor
jmp
pushl
and
ret
fdivs
test
or
call
ljmp
inc
lea
xchg
in
dec
sub
mov
xchg
sub
sbb
mov
lret
ljmp
sti
ret
dec
insb
sahf
idivl
push
cmp
xor
cmp
jl
jg
mov
xor
int3
jns
mov
lret
xchg
imul
pushl
pop
push
mov
cmpsl
rol
inc
mov
hlt
mov
and
scas
out
inc
or
mov
fwait
adc
dec
js
and
cmp
push
cs
cmc
fldl
add
pop
ja
popa
push
out
mov
les
hlt
push
xor
mov
sahf
xor
mov
aad
mov
rclb
lcall
mov
pop
sub
mov
sbb
dec
jno
repz
cld
incl
in
insl
push
mov
hlt
movl
imul
jmp
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
call
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
aas
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
lods
xor
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
and
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
cmp
stc
add
mov
call
mov
cmp
scas
add
xchg
add
decl
fsubrs
test
insb
jnp
add
shl
adcb
stc
inc
pmaddwd
fnstenv
adc
or
mov
cld
fistps
ficoml
repz
mov
mov
into
daa
push
in
cmp
mov
loop
mov
dec
xlat
xchg
push
or
shll
pop
lcall
incl
fldcw
inc
mov
shlb
add
in
idiv
incl
xor
or
cmp
add
daa
adc
or
and
lcall
or
mov
or
mov
popa
into
push
stc
fidivs
pop
cwtl
leave
fldcw
ljmp
adc
pop
cmp
mov
cmp
lods
insb
sti
mov
and
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
xchg
lcall
scas
add
mov
pop
jge
xchg
psraw
lock
sti
ljmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
mov
mov
ficoml
int3
dec
fnstsw
fistpll
mov
mov
mov
call
xchg
shll
push
repnz
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
lcall
out
mov
jns
imul
andl
shrb
ss
cld
push
xchg
ja
int3
add
mov
das
es
lds
or
jmp
pushl
cmpsl
call
ret
shlb
sbb
ret
es
aas
push
arpl
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
orb
adc
mov
jnp
sbb
xchg
or
in
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
add
int
jg
mov
mul
ja
adc
xor
sbb
pop
jo
ud0
cmp
int3
decl
or
adc
sahf
gs
clc
sar
imul
incl
mov
push
addl
mov
cmp
cmpsl
idivl
outsl
aaa
rcl
sbb
push
dec
fildl
scas
fdivr
jg
pop
fldenv
filds
test
scas
mov
fidivrs
mov
jmp
xlat
loop
sbb
mov
lret
mov
and
sarb
xchg
push
mov
push
mov
jp
mov
aaa
pop
ljmp
xchg
push
inc
sub
pushl
mov
or
sbb
add
sub
mov
rorl
movsl
push
insl
stc
xchg
xor
xor
pusha
push
jp
mov
pop
jg
loopne
shll
mov
xchg
or
sub
cs
imul
mov
xchg
mov
adc
mov
inc
or
mov
iret
xchg
pop
outsl
xchg
ret
fs
testb
popf
xor
stos
jnp
add
mov
add
fucomip
xchg
bnd
aaa
xchg
dec
mov
daa
sbb
shrb
push
mov
js
jg
into
pop
sub
and
and
cmc
data16
push
sub
lods
fwait
xor
outsl
call
xlat
mov
adc
cmp
popa
sub
pop
icebp
movsl
mov
out
adc
hlt
fadds
stc
testb
mov
jg
call
sahf
sbb
sar
cs
mov
inc
lcall
outsb
xchg
loop
mov
ja
repnz
adc
sub
or
imul
dec
xlat
jo
outsl
icebp
incl
daa
cmpsb
xor
push
pushf
dec
xor
dec
push
outsl
inc
cltd
fldl
inc
lahf
out
cmc
mov
push
push
jbe
nop
roll
and
fnsave
hlt
mov
in
xor
xchg
decl
iret
inc
lret
fldl
sub
push
dec
adc
dec
ds
stc
and
test
outsl
hlt
jmp
xchg
mov
lds
xchg
and
adc
cmp
push
jae
movsb
leave
arpl
add
std
movsl
cmp
imul
lcall
fmuls
inc
in
stc
fdiv
icebp
inc
rolb
mov
sarl
fists
mov
cmp
mov
adc
das
icebp
aaa
fs
push
clc
push
inc
dec
aas
pop
lcall
inc
jg
decl
xor
cmp
outsb
push
loopne
xchg
cmp
or
jle
in
dec
cld
pushl
fisubrl
push
add
or
dec
incl
call
sub
inc
cmp
jmp
pop
cli
ljmp
ret
flds
test
inc
sub
cs
cmp
dec
pop
mov
das
hlt
aaa
mov
push
in
sbbl
bound
fildll
dec
push
cmp
push
push
test
pusha
loop
push
inc
xor
lods
sub
lods
js
insl
les
loop
sub
cmpsb
rolb
push
push
xchg
loopne
jg
sub
pop
and
dec
das
inc
sub
jo
out
xchg
add
lcall
cs
sbb
xchg
mov
dec
mov
test
cmp
adc
mov
inc
cs
cmp
xorl
fdivrp
das
icebp
testl
lock
inc
lcall
ret
mov
rcl
mov
cmp
or
dec
cld
fsubl
insb
push
push
cwtl
xchg
jae
enter
movb
sbb
push
push
cmp
sbbl
clc
aaa
lods
jnp
jne
lahf
shrl
dec
lret
cmp
ljmp
movsl
fisubrs
dec
fcomip
mov
call
push
or
cs
aad
rcrl
jns
or
mov
cmc
xor
popa
pop
push
std
jg
adc
xor
pop
data16
test
mulb
das
std
lods
adcl
shr
push
push
dec
push
mov
mov
popa
bound
and
adc
ljmp
xor
adc
enter
push
xchg
push
pop
popa
xor
movb
ret
cmpsb
pop
mov
test
mov
push
inc
push
push
cmpb
dec
push
push
mov
sarb
dec
fwait
push
fst
adc
push
js
fidivrl
and
cmpsb
sub
lock
pop
sub
outsl
sbb
pop
gs
fucomp
add
push
decl
xor
push
fcomi
int3
aad
movsb
pop
mov
mov
aam
jmp
mov
push
jns
decb
std
je
fldt
dec
add
jne
inc
push
pop
push
push
sub
lcall
aam
and
pop
dec
and
arpl
enter
push
push
xor
lods
jns
push
popf
sbb
sbb
pop
popa
xchg
je
mov
push
pop
xor
lcall
std
ljmp
push
mov
shlb
add
xlat
call
dec
js
loope
jecxz
jne
ret
push
inc
leave
cltd
aad
outsb
shll
cmpsb
ja
dec
enter
cmc
pusha
and
xor
jne
and
push
in
insl
mov
cmp
jl
loop
inc
push
andb
dec
push
dec
cmp
movsl
mov
imul
xor
leave
test
cli
dec
inc
pop
ds
test
dec
push
mov
fdivr
mov
cmp
sar
lcall
sub
sub
dec
xor
inc
std
pop
fsub
sbb
add
mov
dec
scas
or
jmp
lret
mov
repnz
pop
sbb
ljmp
dec
mov
pop
dec
adc
add
fdivrs
ds
add
jae,pn
call
mov
cmp
fcmovne
pop
jae
pop
fsubrl
jne
sub
jae
call
xlat
mov
xor
xchg
repnz
mov
insb
mov
and
mov
pop
js
sti
pop
cmp
adc
fwait
sbb
pop
sub
das
xor
mov
decl
sbb
fsubrl
rorl
adc
imul
or
hlt
cld
dec
jmp
aaa
test
pop
lods
fcoml
ljmp
les
dec
popa
lcall
mov
sub
xchg
xor
dec
cld
mov
gs
adc
ss
inc
stos
cwtl
pop
in
and
xor
jmp
test
mov
sahf
enter
lahf
leave
sbb
leave
fwait
hlt
je
jmp
adc
sar
or
xchg
jmp
movsl
lcall
inc
aad
jae
arpl
imul
shl
sub
test
dec
dec
add
lods
insl
jns
mov
icebp
inc
adc
scas
xor
roll
std
std
pushl
xchg
inc
sub
add
popa
pop
pop
mov
cmp
pop
jb
mov
lcall
sub
dec
push
cld
sbb
sub
loop
imul
push
popa
stos
pushl
or
test
mov
inc
inc
xchg
inc
dec
push
stos
popf
popf
cmp
jae
mov
call
call
mov
in
or
dec
cmp
cmp
pop
lock
andl
jns
lds
outsl
ss
cld
bound
insl
xchg
and
popf
js
das
jnp
popa
jge
pop
adcl
cli
pop
hlt
push
mov
xor
add
incl
and
dec
or
pop
jae
cmc
pop
dec
faddl
push
mov
call
jmp
insb
pop
repz
cltd
repnz
inc
dec
push
or
push
decl
loop
pop
pop
cs
je
ljmp
push
dec
jmp
pop
lret
jns
mov
push
in
call
popl
or
lcall
pop
dec
inc
sub
pop
push
cmp
and
imul
xor
sahf
sub
jl
jle
ljmp
aaa
pushf
sub
cmp
sarl
mov
ljmp
dec
inc
pop
xchg
mov
jmp
lahf
sub
mov
pop
test
adc
jecxz
aad
sub
xchg
add
or
xorl
pop
clc
aam
inc
inc
push
xor
cli
jo
xor
xchg
mov
arpl
outsl
mov
mov
dec
gs
popa
and
popa
out
outsl
cmc
and
xchg
fs
mov
dec
or
out
or
and
dec
mov
or
loope
in
in
inc
cld
popf
std
leave
ss
cmp
or
inc
je
mov
dec
mov
arpl
decl
adc
adc
push
lods
loop
std
les
rclb
xchg
dec
clc
les
lds
arpl
push
jns
pop
fistpll
dec
sahf
rcll
mov
dec
jno
pop
dec
jo
fstpt
jmp
xor
int
outsl
fmul
fbld
incb
jo
ret
outsb
jae
lods
xor
push
fucomip
jae
fistps
jmp
fs
pop
stos
dec
nop
in
jge
lret
push
dec
int
test
es
push
lods
out
repnz
xchg
test
dec
lret
stc
aas
push
inc
pop
enter
call
leave
xchg
test
push
fs
outsb
neg
outsl
bound
incl
jo
out
sub
out
leave
mov
aas
ret
mov
mov
inc
outsl
lock
fildll
iret
test
jl
negl
pop
jl
test
pusha
jg
pop
sahf
sub
ja
imul
cwtl
add
je
push
into
jae
pushl
sbb
leave
push
jb
inc
negl
test
js
mov
hlt
and
ljmp
sub
push
sti
jmp
sub
cs
call
push
in
inc
xor
lcall
test
push
sub
outsb
scas
test
call
scas
iret
std
xchg
sub
mov
push
movb
sar
sbb
add
sahf
stos
mov
pop
xor
data16
loopne
sar
pop
pop
sbb
mov
cmp
je
push
fisubs
sbb
or
call
push
mov
jecxz
stos
cmp
popa
push
inc
mov
loop
jmp
movsl
mov
jp
cmc
dec
mov
mov
test
jae
adc
pop
cld
jmp
adc
fmull
out
shlb
xor
cmc
lods
call
bound
lock
clc
fadds
insb
lcall
lcall
iret
iret
pop
add
sbb
and
push
inc
lcall
mov
jbe
push
aas
xor
add
jmp
repz
scas
push
repz
mov
mov
imul
pushl
xchg
outsl
cli
xchg
jne
cmp
sbb
push
je
call
mov
lcall
cmpsb
inc
adc
movsb
shrl
les
jle
cmpsb
sub
sti
dec
outsl
ds
lcall
mov
lahf
fists
push
xchg
pop
cs
clc
sub
daa
decl
cld
je
ds
repz
jg
dec
mov
fwait
xchg
mov
aaa
decb
mov
inc
push
or
lcall
loopne
push
xor
sti
pushf
lcall
insl
cmpsb
cmp
push
das
out
mov
pushf
adc
imulb
mov
mov
or
enter
push
xor
sbb
das
lock
add
daa
out
in
sti
dec
in
fbstp
int
dec
jg
push
sbb
lea
pop
fwait
jge
cmpsb
and
or
ret
xor
call
or
jmp
mov
pop
fistl
mov
popf
pop
mov
es
or
add
enter
jne
inc
sub
cmp
call
jb
imul
into
jne
divb
decl
mov
inc
lock
in
bnd
clc
jg
mov
js
imul
test
mov
and
sbb
iret
sbb
cs
xor
mov
das
icebp
xchg
outsl
stos
fsts
jb
movsb
mov
lods
dec
int
ljmp
cmp
push
fdivl
fstl
enter
call
lock
push
les
mov
adc
push
test
jnp
jae
popa
dec
les
lcall
insl
dec
push
gs
nop
inc
cs
inc
pop
mov
imul
dec
jae
test
outsl
or
adc
ds
dec
jg
pop
mov
popa
fs
dec
cmpsb
adc
ljmp
push
and
mov
and
shrl
push
shlb
iret
pop
mov
mov
push
fsubl
imul
std
outsb
jecxz
inc
or
mov
out
fmul
sarl
leave
dec
jns
push
mulb
jmp
push
mov
push
and
insb
roll
js
xlat
sub
packsswb
jg
push
jae
fisubrl
mov
jno
sbb
inc
mov
xchg
outsb
call
jae
and
cmp
jmp
xchg
inc
subl
lcall
lods
mov
pop
or
sub
in
aam
mov
cmp
and
decl
jns
shl
movsl
cs
std
xlat
insl
mov
incl
fs
cmc
es
arpl
jmp
scas
xor
lret
and
jae
inc
mov
loope
lahf
outsb
mov
and
mov
dec
std
ljmp
xchg
jnp
imul
sub
loop
mov
pop
mov
decb
inc
jns
popa
pop
jb
mov
outsl
adc
mov
jp
xchg
psrad
lock
cld
or
jne
ffree
lret
jb
jecxz
mov
xchg
push
lods
pop
xor
shl
cmpsb
pop
sbb
fcom
and
imul
cmp
sbb
in
lods
cmp
jo
xor
outsl
lock
pop
sub
jg
enter
in
xchg
lcall
inc
in
and
and
cmp
sub
xchg
dec
aad
fs
mov
call
shrl
sbb
mov
shlb
push
jp
in
enter
hlt
call
dec
push
out
imul
imul
mov
sbb
and
iret
push
mov
pop
sub
call
pop
stos
gs
sbb
add
cli
adc
sub
and
jne
pop
aaa
jbe
out
std
decl
pop
into
lret
pusha
ljmp
xchg
icebp
mov
js
mov
lcall
ja
sti
inc
push
lds
fldln2
jb
stos
xchg
lahf
cmp
test
dec
in
pop
call
in
cmpsb
pop
push
pop
sub
push
lret
fsts
aaa
inc
call
js
test
mov
push
mov
jne
pop
clc
pushl
jl
fs
inc
lods
jae
and
mov
dec
xchg
dec
out
inc
cli
je
add
std
call
aaa
std
xchg
adc
leave
outsb
daa
loop
mov
dec
fildl
cmpsb
cmc
mov
adc
mov
mov
cmp
mov
js
adc
mov
mov
test
test
rcrb
js
mov
ret
jl
insl
mov
xchg
pop
push
and
outsb
mov
jecxz
mov
and
inc
jne
xchg
jg
movsl
outsb
push
mov
out
xor
pushf
mov
mov
cmpsb
loope
fstp
mov
fstpt
in
sub
outsl
dec
aam
int3
mov
xor
jecxz
dec
out
xor
nop
addr16
jno
sbb
outsl
cmp
xchg
mov
pop
test
inc
lret
arpl
lahf
adc
add
sbb
mov
jp
mov
lret
mov
cmpsb
adc
pop
insb
jns
mov
jmp
sub
daa
dec
pop
and
sbb
cmp
test
cmp
bound
sbb
icebp
call
bound
add
popf
mov
push
call
mov
push
pop
ret
sub
test
repz
jae
orl
in
mov
pop
xchg
ret
jp
inc
ljmp
fisttps
xor
and
dec
outsb
pop
push
rorb
mov
mov
cmc
ss
outsl
ljmp
lcall
xchg
dec
sbb
int3
loop
sub
jns
lods
pop
out
xchg
sub
jg
movsl
sub
lcall
cs
jg
cwtl
mov
iret
sarl
sti
add
jle,pn
aaa
dec
aam
fidivrs
loope
call
push
cld
outsb
div
sti
jp
mov
loop
add
fdivr
jg
xor
xchg
pop
lods
mov
mov
xlat
pop
fildl
lret
adc
dec
xchg
pushl
cli
xor
push
jae
cmpsb
shll
pop
in
popa
cmp
cmp
shrb
cwtl
sbb
lret
push
pop
mov
mov
loop
cwtl
jg
imul
xchg
jl
xchg
inc
fbld
dec
stc
jp
in
jae
divb
cmpsb
test
fs
mov
dec
sub
xor
add
inc
dec
push
push
inc
dec
scas
xor
ljmp
add
fimuls
std
bound
scas
push
pushf
pop
mov
adcl
inc
push
push
and
cwtl
ret
lret
mov
jo
jns
sbb
addr16
pop
cli
filds
ljmp
mov
loop
jg
inc
loop
dec
cli
jns
mov
repz
push
inc
push
and
xchg
outsl
loop
test
add
inc
call
cli
and
sbb
mov
lods
push
pop
jg
mov
sahf
add
mov
xchg
iret
fwait
test
dec
mov
cmp
push
mov
push
push
dec
dec
inc
inc
ljmp
mov
xchg
cmc
cmp
pop
add
sbb
cmc
dec
add
arpl
add
or
jp
iret
cmp
sub
mov
push
je
jnp
outsl
lcall
sub
pop
fucomip
add
cmp
inc
and
addr16
sbb
dec
dec
dec
push
dec
pusha
shlb
push
inc
push
push
push
pushf
sbb
dec
pop
fdivl
and
jnp
pop
and
adc
push
or
das
std
pushl
bound
cmp
sbb
and
data16
loop
movsb
xor
sbb
stc
stc
mov
xlat
cld
fbstp
stc
add
xor
xor
push
mov
xor
aas
cmp
add
out
pop
xor
xor
xor
jge
lahf
add
pop
sub
scas
stc
fistpll
pop
sub
out
iret
xor
out
jge
into
jge
ret
pop
sub
mov
call
xor
xor
ja
sbb
cmp
pop
bound
sar
jb
and
in
cmp
loop
fisubs
ficoms
or
ja
scas
jb
add
jb
mov
xchg
push
in
fidivs
cld
cmp
xor
add
out
add
loopne
filds
dec
rcrl
jns
into
pushf
out
sub
lock
outsl
or
out
add
mov
jl
mov
sbb
std
in
es
jnp
xchg
mov
xlat
inc
mov
inc
mov
sub
pop
xor
jl
or
repnz
mov
jg
sub
cld
mov
inc
xlat
in
cmp
jbe
adc
imul
decl
xlat
push
cmp
imul
bound
popa
jb
inc
jmp
and
aas
xor
js
into
rolb
pop
jno
xor
sbb
mov
popa
mov
incl
mov
outsl
xchg
popa
xchg
das
aas
out
xor
cld
icebp
out
mov
xchg
pop
lock
adc
mov
aam
mov
mov
lods
or
lfs
mov
mov
pop
rcrl
ss
addr16
std
xor
jecxz
jecxz
adc
out
push
dec
push
mov
pop
mov
pusha
adc
add
sbb
pop
mov
in
das
hlt
xchg
popa
std
add
add
insl
mov
imul
ljmp
hlt
push
mov
aaa
jns
sub
imul
jle
sub
mov
stc
pushl
add
cmp
add
mov
xor
in
out
mov
jne
pop
sub
fdivrl
pop
into
xor
in
call
lahf
mov
add
popf
mov
sar
fildl
mov
shlb
out
mov
ja
std
mov
out
add
jb
pop
xor
movsb
add
sti
incl
cwtl
mov
xor
negl
in
cld
pop
repz
mov
loopne
add
mov
call
aas
outsb
int
in
jo
dec
call
mov
incl
lcall
dec
jp
inc
cmp
xchg
bound
jp
sub
push
cmp
jg
incl
inc
dec
pop
push
dec
inc
sub
aas
mov
call
dec
jl
iret
cli
and
adc
xor
and
xlat
and
cmp
pop
ljmp
add
sub
arpl
jb
aas
mov
popa
outsw
std
insl
adc
repz
dec
sub
cli
in
shlb
push
mov
pop
rcpps
mov
fucomip
outsb
cmp
ljmp
popa
pop
sbb
cmp
add
clc
lcall
and
mov
and
mov
addr16
and
xor
aaa
xor
test
jns
cwtl
push
dec
jg
and
xchg
adc
xor
adc
push
sbbb
das
das
mov
sahf
push
cmp
push
add
dec
and
cmp
inc
push
lea
orb
or
cmp
in
inc
sbb
fs
push
inc
sbbl
dec
out
add
jge
lods
lcall
pop
testb
lds
das
imul
push
andb
inc
push
mov
inc
xor
or
xor
xor
mov
push
or
and
pop
and
push
ja
incl
cs
dec
cmp
das
pop
nop
fisubl
inc
xor
mov
cltd
test
insl
cli
push
das
hlt
xlat
pushf
cltd
out
icebp
loopne
mov
shl
adc
and
inc
mov
mov
jns
inc
test
add
jns
jbe
outsl
insb
jae
outsb
outsl
aaa
cli
pushl
add
mov
gs
loopne
adc
add
mov
add
les
jb
add
pusha
lods
orb
jg
das
bound
add
sub
in
test
mov
ret
add
bound
xor
lcall
xor
xchg
xchg
jnp
gs
add
ds
pop
call
dec
fsubrl
dec
dec
and
mov
icebp
cs
cmp
call
sub
pop
arpl
movsb
mov
sbbl
ljmp
fdivl
dec
lret
cld
sub
jno
stos
mov
mov
fcmovnb
jne
sahf
aad
clc
pop
and
lock
dec
xor
pushl
orb
ds
clc
sbb
in
popa
or
scas
mov
push
imul
inc
incl
dec
inc
imul
dec
sbb
xor
dec
outsl
std
decl
scas
mov
insb
xlat
nop
jbe
xor
sub
jb
dec
lods
dec
jl
das
xor
sub
rsqrtps
inc
je
cmp
cli
push
adc
das
cmc
incl
dec
iret
fdivrs
xor
fs
jo
int3
and
sbb
pushl
incb
push
ja
push
add
insl
outsl
call
rolb
int
insl
inc
push
inc
outsl
icebp
decl
cltd
test
mov
int
call
outsl
loope
sub
fs
adc
mov
or
sbb
sub
jg
call
push
repz
xor
sbbb
std
decl
cs
popf
sub
jmp
incl
jmp
xor
xor
mov
cs
call
aaa
xor
ror
mov
mov
fidivs
mov
mov
mov
imul
gs
sub
dec
fdivrp
mov
loopne
js
imul
out
aaa
sbb
sysenter
imul
call
or
or
add
int
add
jmp
clc
arpl
pop
sar
fcmove
xor
mov
or
mov
dec
jp
dec
dec
orb
cld
mov
xor
adc
lea
xor
cmp
insb
popf
orl
dec
cli
call
sbb
sub
cwtl
mov
jmp
ss
decl
call
push
cmp
jle
cld
pushl
or
and
cmp
sub
out
pop
ds
cli
push
dec
add
rclb
lock
fnsave
mov
das
cld
sub
movsb
and
or
outsb
cmp
lret
mov
pop
inc
out
jb
mov
push
insb
rclb
aaa
imul
jmp
jmp
leave
inc
cmp
cmp
ret
ljmp
jg
cmpsb
jl
cltd
pop
out
xor
hlt
or
mov
xchg
es
mov
mov
mov
dec
aaa
push
add
xchg
inc
mov
cmp
inc
mov
fs
cmp
movsb
pop
sub
sbb
mov
adc
hlt
push
aaa
leave
jmp
pop
ret
dec
stc
mov
call
enter
fucomip
movsl
aaa
imul
xor
data16
pop
mov
pushl
lahf
mov
xchg
rcrb
loope
pop
cli
pushf
hlt
shl
add
aad
jnp
mov
scas
sbb
sbb
outsl
adc
xor
popa
sub
std
retw
mov
into
adc
xchg
cli
sub
mov
xchg
das
xor
xor
push
incl
inc
clc
inc
pop
inc
xchg
leave
pusha
es
mov
hlt
mov
dec
in
inc
gs
sub
sub
fistpll
inc
ja
dec
adc
and
and
push
incl
mov
test
nop
sbb
les
add
pushl
icebp
sub
cs
mov
cltd
dec
push
add
pop
mov
jae
inc
movsl
scas
jmp
pop
loopne
sti
xchg
cmp
stc
jbe
xor
popa
repnz
jo
sub
add
imul
xor
dec
inc
test
cmp
ljmp
in
je
dec
insl
xor
xor
jmp
push
cltd
xlat
mov
repnz
fbld
mov
add
addr16
cmpsl
xor
ds
dec
jne
pushl
jae
sbb
and
xor
xchg
jle
popf
pushf
lcall
pushl
pop
mov
insl
inc
push
push
movsl
dec
xchg
pop
sub
int
mov
andb
out
leave
and
sbb
mov
aas
xor
jne
movsl
xchg
mov
sub
cmp
cs
je
inc
out
mov
jg
idiv
decl
mov
mov
mov
pop
dec
or
sbb
pop
push
cli
ljmp
sub
xlat
mov
outsl
push
mov
dec
int3
xchg
and
push
out
inc
inc
outsl
lock
cld
push
xchg
mov
popa
push
int
push
mov
incl
inc
inc
push
push
cmp
fimuls
in
mov
adc
bound
dec
movsl
pop
xchg
dec
movsb
cs
fwait
out
pop
dec
and
cmp
cmpsb
mov
inc
jmp
in
cs
pop
push
and
pop
jg
mov
std
movsb
test
push
mov
mov
add
inc
sub
push
and
dec
subb
xchg
inc
pop
push
cltd
sahf
inc
xchg
pop
lods
pushl
jnp
inc
les
lret
xchg
xor
mov
jb
popa
popl
pop
push
fists
and
mov
jns
pop
sub
cmp
or
pop
nop
cmpsb
or
movsb
stc
adc
xor
and
imul
fidivs
lds
lds
stc
rcll
push
cmc
pusha
or
or
lcall
pusha
out
test
insb
aaa
ja
je
outsl
pop
sub
pushl
pop
sub
test
pushf
jne
and
imul
sub
shlb
xchg
adc
pop
sub
dec
outsl
mov
outsb
loope
push
movsl
xchg
xor
cmc
arpl
stos
xor
outsb
sbb
add
mov
pop
les
jmp
outsb
out
mov
ljmp
in
loop
in
imul
sub
or
push
aam
ret
scas
add
pop
cli
push
iret
fldl
push
repz
int
inc
dec
dec
cmp
sub
jmp
jae
popf
pop
rorl
cmp
stos
adc
fisttpll
mov
call
js
cmp
cltd
stos
pop
out
jno
ds
into
mov
ss
sbb
cwtl
iret
movsl
xchg
ljmp
movsl
xchg
push
pop
or
pushf
sub
shlb
stc
cwtl
nop
fldt
inc
int3
lret
push
cs
or
jmp
dec
push
sbb
push
jmp
push
sti
sub
or
rorl
inc
testb
popf
lods
jmp
mov
outsb
outsl
sahf
xchg
decb
ficoml
aad
gs
movsb
jns
mov
jmp
sar
inc
cld
aaa
cmpsb
test
mov
dec
test
and
jb
mov
test
and
jg
sub
adc
cmpsb
scas
push
jae
sti
std
les
cmp
ja
jge
mov
adc
jg
mov
cs
lcall
jecxz
aaa
mov
insb
jmp
ljmp
imul
fcmove
fs
out
jmp
xor
mov
sar
aam
cmp
and
push
mov
sbb
jae
jb
shr
popa
inc
sbb
lods
decl
mov
cmc
cmp
mov
scas
xchg
out
jno
loop
inc
incl
lds
mov
xor
test
dec
push
jmp
incl
test
jne
mulps
cld
call
cmp
push
and
jbe
jmp
jbe
xchg
lret
jo
or
std
addl
dec
divps
dec
decl
xchg
ret
cli
cmp
dec
out
sbb
out
lahf
cltd
sti
outsb
int3
call
jg
dec
dec
xor
nop
movsb
aaa
mov
fisubs
lea
aam
sarl
fsubrs
cld
call
stc
cmp
popa
jns
dec
andl
cld
sahf
xor
push
inc
fiaddl
inc
or
lcall
jne
mov
xor
mov
inc
inc
mov
or
incl
imul
outsl
decl
push
lock
or
mov
sub
leave
stc
add
inc
enter
rol
pop
mov
inc
inc
jl
test
mov
or
inc
pushl
cmpsl
out
pop
aad
xchg
cmp
test
std
decl
xchg
hlt
jnp,pt
jg
int3
mov
push
lods
mov
addr16
mov
outsl
mov
jge
fstpt
cmpsl
aas
dec
pop
or
mov
push
in
clc
ljmp
std
pop
sbb
xchg
mov
mov
sub
cmp
out
jb
sti
push
mov
jmp
fisttpl
sar
mov
outsl
mov
push
pop
dec
in
xchg
mov
in
movl
cmpl
out
jb
cmc
or
xor
dec
pop
ljmp
mov
aas
std
sub
add
nop
and
hlt
cmp
mov
ficoms
mov
mov
xor
mov
sub
mov
rcrb
cwtl
les
ds
push
ss
fdivr
das
cld
add
dec
call
shlb
cmpsl
xor
ljmp
fistpll
push
mov
adc
test
test
inc
stos
pop
sarb
push
mov
fisttpll
add
mov
or
daa
test
imul
push
aam
lret
fmull
outsl
lea
repz
jg
push
inc
lcall
mov
sub
mov
or
imul
std
incl
aaa
dec
dec
movsb
lds
push
out
sbb
jl
pop
lret
imul
adc
xor
mov
push
pop
iret
out
pop
dec
jecxz
and
mov
lcall
aad
ljmp
pushf
xchg
adc
fistl
jo
das
cmc
call
mov
stos
push
jo
aas
lcall
pushl
das
cmc
ljmp
aaa
xchg
push
sub
sub
repnz
je
jns
xchg
xchg
pop
mov
adc
out
sub
pop
aas
stc
xor
jne
cmp
test
lds
dec
inc
idivb
das
pop
mov
inc
jns
loopne
jb
outsb
mov
jle
add
mov
out
fists
test
stos
decl
jl
mov
cs
jno
es
shll
in
inc
out
cmp
mov
andb
inc
sub
ljmp
outsl
dec
insb
scas
push
lahf
and
popa
addl
lret
test
xor
pop
fsubs
jnp
add
faddl
jae
sbb
out
push
in
sbb
mov
decl
add
es
aas
insl
jbe
inc
push
jp
xchg
pop
imul
inc
pushl
bts
lret
xor
mov
fdivs
in
sarl
repz
imul
push
jp
sub
insl
sbb
popa
mov
pop
jecxz
jae
call
loope
pop
insb
loop
arpl
jo
jb
mov
outsb
popa
mov
adc
call
dec
sarb
push
adc
xor
and
xor
fdiv
pop
xchg
mov
pop
mov
insl
cmp
pop
sub
jg
jecxz
cmc
sub
popf
ret
dec
mov
inc
es
test
adc
pop
cli
decl
hlt
divb
add
shrb
cmpsb
sub
inc
das
jmp
dec
sti
ficompl
cmp
lea
adc
rcrb
stos
mov
roll
enter
push
pop
mov
ljmp
jmp
enter
and
mov
hlt
and
mov
jge
in
addr16
decl
fcmovne
ja
inc
aas
aad
es
pop
mov
mull
sbbl
fs
cld
data16
lea
int
out
data16
push
insl
sbb
out
ds
cld
ds
cmp
pop
pop
inc
mov
xor
jbe
lods
xor
vmovdqu
ljmp
iret
mov
mov
push
sbb
sti
sub
mov
ja
mov
push
in
decl
add
push
lret
jmp
jo
shll
inc
lret
xchg
sti
aas
jno
add
jg
or
shll
xchg
jo
mov
push
adc
lcall
xchg
popa
mov
jle
pusha
sahf
pop
loop
jo
xor
and
mov
imul
dec
mov
pusha
decb
jmp
cmpsb
jae
jb
dec
fsubs
push
popf
imul
jecxz
fcom
jb
jmp
shl
jo
pop
lds
lea
out
jo
cli
es
jg
pop
cli
fcmovu
cmp
out
sbb
popa
ds
out
xor
pushl
mov
mov
fs
mov
outsl
add
ja
lock
inc
ss
dec
jecxz
subl
jp
xchg
inc
fistpll
dec
mov
jge
imul
adc
jl
push
xchg
imul
mov
clc
outsb
pop
mov
aaa
je
jae
cmp
jns
dec
mov
sbb
cmpsb
imul
std
call
rcrl
adc
mov
fsubl
fstpt
xor
decl
cmp
shlb
add
int
lods
jbe
jge
incl
xchg
dec
and
push
std
cmp
nop
pop
ljmp
adc
xchg
loope
stos
shll
inc
movsl
insl
and
andl
pushf
insl
rcrb
scas
xchg
dec
cli
inc
fmuls
mov
jge
push
scas
data16
incl
cli
dec
cld
xchg
or
cmp
enter
scas
or
xchg
xchg
ss
dec
insb
insl
fstpt
fs
mov
cmp
lret
add
std
push
push
sbb
xchg
in
pop
cmc
push
cmc
xchg
std
mov
jl
inc
sub
insb
sbb
ud2
int
aad
scas
push
popf
lcall
xor
jp
jno
das
mov
cmc
arpl
insl
mov
push
daa
sub
sub
call
inc
add
lock
sub
bound
dec
ljmp
sbb
and
sub
imul
add
decl
sbb
sbb
cld
scas
shrb
jg
lret
sub
push
notb
adc
popa
xchg
inc
lret
cmpsb
fdivrs
mov
sub
add
ljmp
mov
iret
test
nop
hlt
xor
dec
inc
mov
cmp
mov
dec
icebp
jnp
mov
movntq
sub
int
add
ds
mov
inc
push
push
inc
mov
add
xor
call
bound
jmp
icebp
push
mov
sub
adc
imul
inc
sti
pop
test
inc
call
ficoml
xor
cmp
rolb
hlt
mov
das
hlt
ds
imul
divl
inc
add
push
mov
xor
jns
jmp
inc
inc
in
out
subb
mov
fs
gs
mov
mov
ljmp
cmp
and
jge
sar
movsb
stc
pop
and
mov
and
mov
jg
add
movsl
or
add
or
jo
xchg
enter
mov
aad
and
mov
sub
jmp
adc
loope
or
adc
sub
push
add
int3
sub
pop
ss
mov
shlb
inc
ss
xor
sbb
cmc
incl
jle
lods
jg
sbb
ds
add
ljmp
ds
mov
push
xor
mov
push
xchg
fidivl
ja
adc
imull
outsl
lock
push
pop
or
pop
mov
stos
pop
mov
xlat
adc
mov
data16
push
adc
inc
cmpsb
aaa
ja
dec
dec
testl
mov
mov
fmuls
sub
cmp
sub
dec
jno
pop
imul
mov
jl
scas
add
aas
add
dec
loope
out
pop
push
cmp
xor
dec
loop
clc
incl
fildll
pop
push
xor
pop
jle
push
dec
dec
ljmp
mov
popf
popa
loope
movsb
inc
cmp
pop
mov
call
aaa
sarb
jno
std
and
fwait
push
arpl
loopne
push
ljmp
push
sbb
mov
aaa
jle
mov
pop
ss
mov
imul
push
ja
inc
imul
push
mov
mov
in
mov
stos
les
imul
mov
decl
cmp
data16
popa
jnp
sub
push
jle
pop
fsub
jmp
xchg
push
test
inc
pop
in
dec
mov
or
int
insb
cmp
idiv
ljmp
icebp
mov
rclb
cmpsl
imul
mov
jae
arpl
cs
call
push
adc
inc
fs
ljmp
jb
lcall
popf
test
xchg
lods
adc
jnp
idivl
or
mov
loopne
lret
adc
lahf
inc
xlat
mov
fldcw
xchg
icebp
jno
lcall
push
insb
repz
jg
adc
push
mov
gs
imul
push
or
aaa
decl
je
mov
push
pop
sbb
repz
icebp
push
sub
push
dec
adc
mov
push
insb
mov
sbb
cwtl
jmp
jge
aam
fs
into
and
adc
lahf
mov
pusha
movsb
ljmp
xchg
mov
mov
mov
push
cmp
adc
call
push
sub
xlat
enter
in
dec
enter
push
ficompl
js
push
decl
hlt
push
lret
cwtl
lret
push
loopne
mov
dec
add
or
push
and
pushl
xor
adcl
inc
mov
jg
xchg
leave
adc
xchg
fidivrl
jno
call
mov
out
xor
je
mov
sub
xor
test
faddl
in
push
cmp
pop
mov
sahf
jb
in
inc
mov
pop
into
push
imul
call
mov
notl
jmp
jns
mov
or
sub
push
ljmp
xchg
in
push
mov
dec
fldl
mov
and
stos
dec
add
mov
push
dec
outsl
lahf
dec
test
outsl
push
loopne
jns
nop
sbb
mov
xchg
pop
aas
es
jnp
fdivp
in
and
adc
mov
js
insl
add
jnp
inc
sar
icebp
adc
pop
out
pushf
add
pushl
loopne
add
mov
imul
or
mov
ljmp
ljmp
sub
pushf
into
call
inc
mov
mov
lcall
mov
cmp
data16
js
stos
ret
jecxz
cmp
jmp
mov
xchg
stos
sbb
dec
daa
jg
fnstsw
jp
add
je
das
sub
lock
push
mov
mov
jmp
jno
loope
mov
mov
push
es
pop
sahf
test
add
call
push
push
jnp
xchg
push
cmc
lods
jnp
mov
dec
mov
push
inc
xchg
mov
cmc
les
je
cmp
out
sbb
test
push
mov
outsl
add
sub
mov
and
add
cmp
in
call
pop
or
aaa
xor
push
push
add
or
pusha
push
ret
sbb
js
gs
add
outsb
mov
push
or
sub
jb
jne
cmp
sub
incl
sub
outsb
sti
push
adc
jl,pt
aas
jg
loopne
lds
and
subb
js
add
rclb
out
out
lret
ljmp
pusha
inc
mov
clc
ret
movsl
add
mov
ljmp
fsubr
inc
mov
jb
mov
pop
dec
xor
xorl
addr16
push
xlat
out
jbe
sbb
orl
ljmp
dec
scas
out
sbb
sahf
aaa
adcl
clc
and
out
or
jae
inc
mov
xchg
repz
imul
xchg
shll
or
mov
xchg
loop
xor
popl
sbb
sub
mov
mov
mov
ja
fistpll
push
testl
adc
js
pop
sub
dec
add
addr16
test
popf
pop
out
subl
out
jns
xorb
out
cmp
stos
and
ljmp
xorl
mov
add
mov
dec
push
outsb
out
push
jo
jne
mov
mov
push
out
lods
mov
shrb
cltd
popf
mov
jmp
into
shl
stc
rolb
jo
call
push
push
in
jmp
sbb
fidivl
jmp
cmp
in
fldl
insb
dec
icebp
sub
xchg
fsubrl
mov
push
sub
cmp
add
inc
dec
jmp
add
push
ss
cmp
sub
sub
stc
dec
movsb
jmp
fimuls
pop
lret
ljmp
clc
fisubl
adc
push
insb
gs
mov
or
test
ja
insl
xchg
pusha
mov
jl,pn
mov
sbb
xchg
push
jl
loopne
adc
lea
pop
mov
gs
mov
jecxz
mov
iret
cmp
andl
ljmp
sub
aaa
push
lods
insb
insb
mov
pop
fwait
push
daa
mov
cli
ljmp
loope
sbb
pop
fists
xor
in
sub
sarl
add
call
sbb
adc
mov
aaa
insl
testb
jmp
xlat
dec
cmc
in
das
cli
dec
adc
pop
jb
ret
jg
call
mov
outsl
cmp
push
test
jae
outsb
arpl
add
jge
xor
jmp
call
and
ds
outsl
cmp
pop
xchg
xorl
cmp
lcall
pop
push
bound
xchg
test
inc
cmp
push
imul
rcr
stos
sbb
mov
or
push
decl
cld
or
pop
and
xchg
ret
cmp
inc
push
lcall
mov
insl
mov
movsb
ds
dec
mov
cld
mov
or
pop
das
mov
inc
xchg
xor
daa
add
cmp
ljmp
pop
push
xchg
jmp
sti
mov
or
sub
popf
add
push
push
add
ljmp
std
ret
lods
jno
xor
mov
cmp
jmp
in
mov
call
fmuls
addr16
jp
or
inc
and
mov
mov
jb
mov
sbb
call
das
push
xchg
arpl
aam
mov
stos
push
jo
fadds
add
lcall
ljmp
add
xchg
and
cmp
shlb
sbb
push
sub
mov
add
or
es
outsb
sbbl
movsb
adc
cmpsb
mov
int
cmp
fs
sbb
mov
sti
mov
fwait
shr
clc
xchg
clc
into
and
lret
in
loop
ret
mov
push
clc
pushl
mov
mov
mov
addl
pop
hlt
push
add
add
test
push
das
sub
inc
pop
gs
push
iret
sub
cmc
sub
sbb
add
icebp
loop
outsl
js
and
call
mov
push
lahf
mov
decl
pushl
fnstsw
push
mov
frstor
out
mov
mov
lds
dec
pushl
push
mov
dec
in
pushf
xor
fidivrs
push
xchg
mov
decl
std
pop
ficoms
and
push
mov
icebp
arpl
es
pushf
ret
push
push
cmc
loop
loope
clc
sub
sub
outsb
pop
aas
sub
dec
jne
cmc
ljmp
dec
inc
sub
jge
scas
jmp
add
daa
push
xor
call
add
dec
mov
inc
sub
repz
add
iret
mov
out
repz
nop
dec
jg
adc
aas
int3
dec
fsubrl
jg
scas
add
out
dec
mov
sbb
adc
stc
jecxz
fimuls
fistpll
loop
js
jns
cmp
jnp
frstor
sub
mov
cmp
jl
add
dec
mov
push
rcrl
inc
incl
repz
mul
mov
inc
ret
xor
dec
mov
pushl
lret
test
inc
out
pop
call
xor
pop
add
decl
fsubl
jl
dec
add
into
jnp
pop
jl
sub
mov
jp
loop
fisttps
dec
icebp
cmp
push
sub
and
pop
scas
xchg
movl
jns
les
jmp
sbb
xchg
loopne
mov
sbb
pushl
loopne
pushf
sub
scas
mov
pop
mov
call
cmp
pop
loop
fcmove
xor
mov
sub
dec
push
pop
rcr
xchg
mov
rcr
testb
push
mov
inc
pop
outsb
orb
call
std
in
std
in
sub
jns
push
push
xchg
stos
mov
lock
adc
fstpt
dec
pusha
jb
or
jns
repz
out
es
neg
cmp
xor
js
cwtl
imul
idivl
pop
icebp
or
mov
jmp
jge
and
add
out
ljmp
jp
dec
sub
js
sti
or
jmp
ds
pop
je
pushl
ljmp
lcall
outsb
jmp
push
fistl
jg
sub
mov
orb
or
add
push
add
call
test
mov
xchg
imul
xchg
sarb
inc
jns
push
xchg
test
mov
jb
ljmp
cld
lock
stos
mov
bound
add
popf
or
pop
inc
ljmp
add
test
fs
add
adc
inc
call
fistl
adc
xlat
outsb
lret
jne
sbb
jmp
dec
lock
jecxz
jecxz
add
adc
mov
ret
xchg
sub
aad
push
sub
inc
shll
xor
lcall
mov
test
dec
inc
rcrb
jp
mov
pop
imul
pop
cli
cltd
pusha
mov
push
push
add
test
mov
inc
jno
push
add
fcmovu
or
pop
xor
popa
push
mov
sbb
cmc
sbb
std
imul
mov
outsl
ljmp
lods
add
xor
inc
vcvttss2si
or
push
xor
inc
ljmp
ret
sahf
adc
mov
cmp
enter
mov
ljmp
ljmp
hlt
scas
dec
cmp
imul
dec
rcrb
ljmp
adc
das
out
jge
loopne
or
add
out
add
adc
sar
adc
mov
icebp
xor
ljmp
dec
mov
pop
dec
sahf
idiv
lods
mov
ret
xchg
inc
mov
lcall
les
popf
imul
push
cmc
adc
push
inc
je
inc
xor
mov
jmp
scas
ljmp
pop
sub
push
js
aas
outsb
stc
pop
ljmp
dec
arpl
pop
mov
sbb
fistpll
pop
push
mov
rorl
mov
in
adc
loopne
negl
push
jg
aam
hlt
pop
leave
out
or
inc
push
je
push
jo
push
std
jmp
add
xchg
xchg
addr16
sbb
shl
jg
insl
stos
pop
or
gs
sar
lcall
mov
mov
sub
inc
cmp
sar
sbb
or
pop
dec
cmp
xchg
cmp
fistpll
dec
fcompl
pop
dec
inc
std
ss
inc
stos
xor
push
jle
lods
pop
cli
push
loopne
jo
lods
imul
jecxz
mov
out
imul
decl
std
aam
add
imul
ret
das
xor
xor
mov
out
hlt
lods
fistps
push
and
bound
ds
add
test
movsb
inc
jbe
imul
pushl
nop
lods
or
mov
add
push
push
mov
dec
ljmp
jb
test
shrl
imul
out
cld
lcall
cmc
arpl
sub
lods
scas
popa
or
jp
dec
push
mov
decl
insl
cltd
pushf
out
pop
mov
inc
ljmp
cmp
sbb
dec
mov
dec
jp
or
inc
inc
inc
out
cmpsb
in
aad
lret
xor
call
lret
clc
das
jnp
shlb
in
aaa
mov
lret
in
hlt
or
xor
jnp
fildll
leave
cld
add
ret
mov
xor
out
fs
inc
fcmovu
pop
add
in
mov
das
pop
sbb
add
add
outsl
dec
lcall
dec
imul
pop
jns
push
mov
mov
mov
insb
cmp
aas
pop
mov
mov
add
pushl
xchg
mov
sub
cmpsb
jno
cmpsl
shrl
jp
and
adc
in
add
add
jmp
fidivl
arpl
xchg
fwait
push
das
icebp
inc
cwtl
push
push
and
xchg
and
incl
jecxz
mov
lock
das
std
movsl
icebp
inc
int
xchg
enter
add
dec
jg
push
icebp
rclb
mov
gs
mov
lret
ret
hlt
mov
lods
xchg
or
cli
test
incl
cmp
push
add
pop
std
int3
inc
scas
cmc
lcall
pop
or
jo
xchg
cmc
cmp
jl
mov
das
pop
call
adc
outsb
jb
mov
and
in
test
or
test
or
add
dec
inc
dec
push
xor
pop
jmp
lcall
pushf
push
xlat
xor
cmc
and
call
sub
jmp
or
mov
imul
inc
lock
leave
mov
pop
call
jmp
cld
rep
stos
int3
push
nop
ret
push
js
mov
pop
fisttpl
push
jne
and
data16
cmc
test
pop
mov
or
into
pop
mov
mov
sbb
ljmp
mov
jo
cwtl
xchg
cwtl
dec
rclb
test
rorb
mov
call
rol
test
sbb
push
cli
mov
pusha
loop
ljmp
add
jg
mov
cltd
cltd
icebp
daa
outsl
jp
mov
fucomip
out
imul
ret
xchg
add
dec
pop
jp
sti
or
jae
pop
cs
call
test
popa
push
sahf
and
sub
jmp
xor
adc
pusha
xchg
or
pop
sar
sti
adc
sub
add
sbb
or
sub
add
mov
ljmp
lock
add
sub
xchg
loopne
std
xor
std
jg
pushl
cli
incl
jne
add
push
jp
pop
jo
adc
and
rolb
push
in
fs
sub
add
js
jb
out
add
call
mov
jb
and
xor
push
add
sub
aaa
cmp
inc
std
arpl
add
add
jl
mov
ja
mov
pushl
scas
addb
mov
cld
ja
jmp
pop
dec
xor
rol
add
and
ljmp
call
cwtl
std
cmp
cltd
adc
xchg
adc
test
icebp
xchg
adc
popf
sarb
push
out
stos
stos
mov
int
adc
add
clc
ret
jne
popf
or
or
icebp
cwtl
iretw
mov
add
lea
inc
or
mov
add
cltd
popf
dec
adc
mov
lret
out
movb
cli
hlt
std
cltd
adc
test
mov
jg
shlb
xor
mov
pop
add
rcl
shl
lods
ljmp
leave
enter
jmp
popf
fwait
stos
sbb
xchg
test
xchg
enter
dec
adc
movsl
adc
mov
lcall
insb
stos
push
rcr
xor
gs
stos
inc
xchg
cld
jmp
xchg
pop
push
xchg
lcall
in
jle
adc
mov
std
pop
lea
mov
lock
hlt
xor
rcrb
jp
push
call
xlat
xchg
jne
addr16
mov
stc
push
je
mov
cmp
iret
jg
xor
loopne
loopne
dec
jg
out
cmp
or
sbb
inc
adc
in
xchg
mov
bound
xlat
lea
adc
imul
shrb
sbb
jg
pop
clc
fdivrl
ss
adc
pop
daa
les
dec
js
test
jge
pop
or
fwait
xchg
cmc
jmp
mov
xchg
adc
lcall
lret
iret
pop
gs
jnp
or
incl
pushf
in
aad
cmp
fwait
mov
or
mov
add
into
into
imul
popa
mov
sub
shlb
std
lods
inc
adc
iret
mov
fists
ficomps
pop
lods
pop
inc
popf
call
adc
jecxz
jns
ret
and
arpl
jge
sub
pushl
pusha
enter
inc
lret
gs
add
fdivrp
call
in
leave
jmp
cli
fdivr
std
jmp
mov
cmp
mov
in
ljmp
cld
cmp
adc
cltd
fsub
lock
and
lods
jne
not
sub
add
sti
jmp
movsl
clc
jmp
andb
and
repnz
div
lock
xchg
negl
dec
xor
cli
cmc
imul
push
jo
sub
call
inc
jb
push
or
push
enter
mov
inc
lds
dec
push
dec
and
jg
jmp
inc
mov
and
mov
jb
xor
in
jecxz
xor
ljmp
enter
xlat
stos
sub
dec
ds
pusha
or
jmp
dec
xor
cmp
jp
movsb
jae
mov
imull
jg
adc
add
or
subb
add
push
push
push
vminss
xchg
orb
jmp
push
add
cli
ret
and
inc
roll
js
xor
ficompl
and
inc
pop
out
lahf
add
jecxz
insl
inc
inc
shl
popl
outsb
mov
mov
incl
cmp
cli
adc
add
call
mov
dec
sbb
in
stos
sbb
scas
xor
outsl
jge
idiv
or
jne
cli
push
dec
add
or
divb
mov
inc
loope
mov
cmp
ljmp
jns
adc
xor
pushf
mov
mov
faddl
add
pop
push
pushf
pop
jg
call
in
je
incl
inc
adc
outsb
inc
or
xor
outsl
in
sbb
fs
dec
pushf
and
xchg
pop
in
push
mov
incl
cmpsb
in
xor
push
inc
aas
lcall
xor
push
outsl
cld
mov
sbb
or
rclb
fwait
test
dec
fldcw
mov
pop
clc
push
call
jecxz
aaa
or
pusha
mov
jmp
mov
push
jg
sahf
push
mov
or
in
imul
cld
xchg
adc
aad
xchg
push
jo
xchg
jg
jg
js
adc
int
loop
clc
movsb
imul
mov
mov
inc
xor
out
and
xor
shrb
xor
cmp
mov
into
and
repz
lods
dec
decl
psubusb
je
out
sbb
jo
pcmpeqw
push
dec
test
scas
loopne
push
inc
call
je
jge
push
xor
popf
lods
and
xchg
arpl
ss
data16
ss
adc
pop
jne
or
xlat
jae
ljmp
jmp
test
sti
xor
xchg
mov
mov
adc
mov
incl
mov
add
test
jae
pop
orl
fisttps
insb
leave
out
push
std
push
jge
shlb
lcall
jg
addl
invlpg
loop
aad
out
aaa
adc
and
jg
scas
cmp
lahf
shr
push
jo
inc
and
jg
incl
inc
inc
inc
inc
mov
jno
inc
add
xchg
pop
adc
dec
pop
ljmp
out
inc
inc
inc
inc
dec
dec
xchg
sbb
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
aaa
fcmovnbe
bound
cmpsb
dec
push
insl
outsb
outsl
cmp
sar
push
pushl
je
jbe
js
int3
mov
test
repz
jg
mov
add
std
in
pushl
push
add
testl
subl
jbe
imul
lret
call
mov
xchg
call
xor
jp
sub
call
mov
push
mov
mov
mov
repz
xor
sarl
push
popa
jecxz
sbb
add
pop
pop
ss
call
jmp
jl
sub
dec
add
add
arpl
jle
add
add
filds
xor
push
mov
mov
mov
out
mov
leave
mov
incl
repz
je
jmp
jle
popl
pop
popa
ret
cli
mov
xchg
and
add
jg
add
outsl
jne
cmp
mov
cli
cmp
je
mov
pushl
dec
add
inc
std
add
or
sbb
pop
sbb
inc
cmc
add
pusha
es
xor
inc
xor
push
add
aaa
mov
mov
add
jecxz
dec
mov
add
xor
fucomip
fistl
jno
je
ror
jmp
cmp
jl
and
loope
aas
cmp
dec
sbb
lret
push
xor
inc
jmp
outsl
sbb
repnz
cld
call
jl
mov
push
shrl
cld
ljmp
rcrb
in
jno
ret
test
xor
and
mov
sbbl
xor
mov
push
push
fcomip
es
jl
pop
daa
push
cli
push
pusha
push
jmp
push
incb
dec
add
call
incl
mov
popa
fmul
mov
jmp
dec
mov
loope
inc
mov
andl
pop
xchg
clc
and
outsl
mov
sarl
lcall
xor
mov
inc
loop
ficoms
dec
pop
aaa
xor
int
test
inc
loope
add
xor
lds
add
push
pop
sbb
jns
addb
push
add
call
xor
jne
mov
sub
or
xor
mov
jbe
adc
push
cmp
call
icebp
add
cmc
lods
mov
mul
xlat
push
xor
mov
and
adcl
pushl
inc
aam
add
outsl
insl
imul
mov
fistpll
cmp
mov
mov
jae
jg
jno
in
lret
inc
mov
adc
mov
in
repnz
or
mov
fbstp
aas
pop
loopne
mov
adc
fmull
sti
add
jg
xchg
sub
arpl
add
mov
fdivrs
stc
pushaw
mov
mov
adc
pusha
pusha
and
and
sbb
push
js
loopne
imul
icebp
mov
push
stc
mov
addr16
pop
mov
daa
ljmp
clc
push
nop
pop
add
call
jp
call
pop
jecxz
adc
cmpsl
cmp
inc
sbb
mov
inc
in
mov
or
out
sti
push
mov
inc
call
ljmp
jle
dec
insl
fdivr
add
pop
mov
dec
test
inc
pop
roll
vfrczpd
push
pop
rolb
sti
xchg
jle
jmp
mov
lahf
adc
jge
jmp
lods
fst
ljmp
jmp
add
push
pop
push
cli
or
inc
add
jnp
inc
sub
sub
or
loop
shr
xor
shlb
add
add
sub
add
inc
pop
add
pushl
inc
jo
scas
add
adc
cld
pop
jmp
pop
jbe
ljmp
mov
cmp
addr16
sbb
fcoml
jecxz
mov
decb
cld
mov
out
pause
and
js
incl
jns
icebp
mov
out
fidivrs
mov
add
push
ja
out
add
mov
in
cmp
mov
ret
jecxz
popf
fnsave
mov
mov
mov
xor
in
lahf
cmp
pop
gs
mov
sbb
jmp
adc
scas
js
test
cmp
fpatan
sahf
in
inc
cmp
int3
cmp
fnstcw
jbe
jecxz
rcrl
xlat
jmp
arpl
in
shlb
icebp
into
out
cmp
mov
cmp
cmp
sahf
ja
mov
icebp
rclb
cli
mov
fildl
push
sbb
pusha
inc
add
cmp
mov
enter
mov
lods
addr16
cmc
jmp
cmp
and
jl
cmp
fs
dec
rorb
sub
popf
cld
out
ja
or
sub
cld
mov
repz
sub
fistpll
jecxz
repz
std
dec
ljmp
das
cmp
push
lods
sarb
cmp
or
xchg
mov
dec
cmp
lcall
xor
decl
pushf
jg
aaa
shlb
xchg
cld
loope
aaa
mov
outsl
push
jo
aaa
cmp
loope
and
add
out
call
ss
xchg
ss
js
pop
ss
cld
sbb
sti
and
or
sbb
xor
cmp
xor
inc
nop
sub
or
hlt
cmp
sarl
jne
in
pop
pop
mov
inc
dec
xor
xor
sbb
loop
pushl
adc
dec
aas
jecxz
mov
outsb
and
jnp
test
mov
inc
in
cmpsl
lahf
mov
xor
icebp
sbb
sar
xor
out
inc
sbb
sbb
cmp
fs
mov
ud0
loop
pop
push
pop
mov
imul
aaa
jbe
leave
popf
sti
pop
js
jmp
out
cmp
ret
outsb
or
mov
in
xchg
pop
mov
sti
mov
mov
call
jle
fucomip
pushl
scas
mov
fmul
movsb
cld
mov
jbe
jbe
push
mov
decb
inc
mov
inc
mov
testl
cmp
jae
cmc
mov
out
or
push
aad
mov
or
call
insl
sti
test
sub
outsb
je
jle
cli
jg
jmp
imul
test
pop
mov
push
push
push
jno
nop
outsb
cmp
and
mov
sub
pop
aaa
movsl
in
add
aaa
movsl
pushf
sbb
jno
cmp
and
call
pop
aaa
mov
repnz
jmp
popf
testb
imul
and
popa
mov
cmp
test
mov
es
fiaddl
lcall
lea
in
mov
jge
jno
bound
imul
iret
mov
icebp
ljmp
cmp
add
or
xor
rclb
lcall
lea
push
outsb
orb
dec
icebp
iret
iret
xor
aas
xor
add
dec
out
xchg
fmuls
dec
mov
jp
out
test
pop
sub
add
push
or
aam
decl
xlat
loop
mov
cmp
stc
stc
and
rorb
add
sub
dec
jne
fildll
jg
je
dec
clc
out
mov
adc
sbb
lock
lahf
jg
clc
mov
call
adc
dec
rorb
jle
jo
add
mov
orb
call
fs
les
dec
pushf
dec
sarb
pop
cmp
pop
mov
inc
mov
idivb
pop
dec
xchg
pushl
jle
icebp
nop
jl
loope
mov
cld
inc
loopne
jo
cld
rolb
xchg
inc
pop
mov
pop
cmp
cld
inc
clc
inc
repz
jecxz
in
ljmp
pop
iret
je
sub
jne
sti
outsb
inc
pop
loope
je
rolb
mov
cmc
test
ljmp
dec
or
call
hlt
mov
cmpb
ljmp
mov
pop
aas
sahf
sub
sti
add
add
lret
js
call
outsl
add
adc
cmpsb
add
sbb
aaa
rol
stos
jns
imul
mov
std
call
xchg
pop
inc
push
inc
pop
mov
jecxz
inc
xor
push
into
pop
pop
arpl
incl
ficoml
cmpb
movb
xor
insl
sbb
adc
sub
int
out
pushl
or
jne
pop
mov
jbe
adc
pop
sbb
clc
std
cmp
scas
and
mov
pop
js
mov
ljmp
in
clc
xor
xor
mov
ret
lcall
lret
xor
incb
ja
fidivl
adc
push
fists
ds
xor
ss
aaa
aaa
es
lcall
mov
decb
xor
mov
sub
pop
mov
call
push
xorb
cmp
xchg
and
add
stos
push
mov
inc
mov
decl
push
add
push
je
test
mov
xchg
repz
enter
jg
mov
push
popf
add
repnz
xor
outsl
test
addb
call
in
dec
add
sbb
mov
adc
inc
xor
add
call
pushf
push
ss
push
inc
seto
data16
adc
ljmp
mov
adc
in
push
push
xor
popa
rorl
clc
in
imul
out
dec
ljmp
pushl
daa
and
bound
pop
imul
inc
arpl
filds
inc
push
jbe
xor
mov
aam
inc
dec
outsb
es
mov
outsl
mov
sarl
push
push
sub
cmc
mov
outsl
sub
push
mov
pop
js
mov
ss
push
enter
push
dec
pop
and
cli
pop
add
and
arpl
aam
pop
or
insl
rcrl
incl
fildl
dec
dec
pop
clc
sbb
enter
gs
incl
mov
push
xor
dec
dec
inc
pop
add
enter
push
push
pop
loopne
push
pop
inc
lret
cmp
loopne
jmp
fnstsw
push
adc
jle
inc
insb
xchg
xchg
jg
push
mov
pushf
add
push
mov
aad
mov
shrb
cld
incl
rolb
push
sbb
mov
ss
ret
insb
sti
lcall
stos
out
xor
pusha
adc
cmp
fsubrl
adc
sar
insl
adc
mov
popa
jne
fdivrl
mov
lcall
adc
arpl
mov
mov
cmp
fstp
pusha
pop
fnstsw
aaa
and
sbb
or
fsubrl
dec
in
jbe
fmull
cmp
sub
inc
push
dec
lock
cli
inc
mov
and
add
jns
mov
ret
repnz
push
lret
jg
and
xchg
in
fstpt
addb
cmp
sub
sub
loop
push
jbe
inc
out
and
pop
mov
scas
push
mov
sub
aas
in
jg
out
daa
pusha
fs
and
sub
mov
mov
frstor
pop
and
sub
cmp
aas
daa
pusha
jle
xchg
lock
xlat
ja,pt
pop
and
pop
xor
iret
sub
imul
pop
in
aaa
repz
mov
push
sub
xor
movzwl
mov
fnsave
fimuls
and
out
cld
scas
repz
ret
js
pop
stos
in
inc
and
out
mov
and
and
pop
xor
and
andb
je
cli
fistpll
mov
push
cmovne
je
push
mov
dec
xchg
dec
push
cmc
fbstp
adc
push
test
jb
xlat
popf
push
pop
cmc
call
and
add
in
pop
xlat
mov
lods
jg
mov
out
fdivrl
pop
ljmp
mov
inc
sub
xchg
inc
rolb
add
pop
cmc
jae
incl
jnp
je
xor
pop
push
jb
and
inc
outsl
dec
inc
shll
push
rcrb
outsb
xlat
xchg
xor
mov
sbb
or
mov
push
je
imul
and
or
add
mov
outsb
daa
in
jg
loop
sub
rorb
sahf
data16
lcall
imulb
xor
xchg
repz
popa
les
cli
pop
bound
mov
xchg
mov
iret
xor
xchg
mov
push
push
fildll
repz
pop
xchg
shlb
jl
dec
xor
leave
gs
call
cld
ja
ret
mov
and
push
in
nop
add
nop
add
decl
xchg
push
lock
dec
mov
in
enter
imul
outsl
add
jp
fnsave
loope
mov
sar
mov
add
xchg
ficoml
sub
je
jbe
jns
jo
dec
jae
mov
jne
cwtl
mov
sti
jl
adc
mov
and
cmp
xor
and
xchg
pop
adc
rclb
in
mov
int3
test
mov
cwtl
mov
xor
outsb
xlat
or
and
test
push
jg
je
pusha
into
inc
jle
inc
cmp
mov
xor
and
sbb
or
push
mov
hlt
in
dec
int3
shl
lcall
repz
xchg
push
jo
insb
push
insl
or
aas
inc
cmp
sbb
int3
or
mov
jae
lcall
call
les
xlat
mov
cmp
jae
pop
sti
sbb
clc
mov
pop
int3
ret
jbe
test
jp
mov
adc
sub
lods
test
lock
in
fst
mov
call
jns
pop
shlb
lods
test
cwtl
nop
mov
roll
push
iret
or
xchg
sbb
jae
mov
in
loope
sahf
mov
jmp
out
pushf
lods
inc
out
jmp
mov
cmp
rcrb
pop
mov
mov
xlat
jge
pop
aaa
xor
aaa
add
icebp
out
cmp
cld
cld
test
in
loopne
ror
sarb
cmc
pop
lods
andb
arpl
fisubrl
jnp
test
inc
in
add
test
call
negl
fnstcw
pop
cmp
cmp
cmp
fdivs
test
pop
lods
lcall
cmp
and
sahf
adcb
nop
call
push
jnp
cmp
xor
cwtl
addr16
pop
xor
xchg
repnz
jo
jo
dec
roll
ljmp
cld
jne
mov
pop
dec
pop
test
mov
pushf
xchg
enter
fs
cmpsb
ljmp
roll
push
ds
in
adc
jmp
stc
stos
add
cmp
jno
jae
incl
stc
loopne
push
lret
mov
scas
adc
mov
xor
outsl
cld
decl
and
addb
or
mov
add
lret
js
pop
jp
mov
push
sbb
nop
stos
push
push
in
push
mov
cli
sub
sub
mov
cmpsl
xchg
stos
cmp
mov
ret
mov
push
mov
pushl
repnz
push
call
cmp
dec
xchg
adcb
decl
call
call
je
jb
pop
pop
pop
push
pop
js
insb
js
dec
dec
mov
lea
mov
rep
and
push
push
push
push
mov
add
test
decl
nop
jne
fdivl
sbb
jae
lret
inc
jge
xchg
out
lcall
clc
xor
loope
xchg
add
vmovd
xor
push
sbb
aas
pop
outsl
incl
and
mov
mov
inc
mov
aas
and
es
rol
rolb
rcl
cmp
pushl
adc
add
inc
jecxz
or
add
mov
xchg
les
jl
sahf
dec
std
ljmp
jecxz
das
out
push
roll
mov
xchg
out
adc
addr16
shll
ljmp
icebp
pop
jns
repz
pop
xchg
pop
lret
scas
push
push
xchg
out
xchg
jg
pop
xchg
test
insb
jns
xor
sbb
mov
incl
stc
mov
out
addl
xchg
aas
fwait
aas
ljmp
inc
rcrb
aas
call
mov
lcall
mov
or
cmpb
fistps
movsl
addl
push
fbld
inc
jle
test
mov
cmp
faddp
sar
das
mov
add
inc
mov
mov
in
clc
mov
push
iret
mov
push
add
push
ficompl
inc
pushl
fcomp
loopne
insl
in
loope
adc
cmpsl
mov
jmp
aaa
add
or
adc
int3
out
cli
xchg
icebp
adc
aam
sbb
sbb
xchg
adc
icebp
cmp
aad
dec
aad
push
cmp
cmp
lods
mov
cli
inc
push
aad
or
fucomp
fstp
das
shll
jp
lea
ja
pop
mov
mov
xchg
std
fucomi
popa
add
testb
sub
nop
mov
pushl
adc
insl
xchg
jg
cld
pop
add
mov
fwait
push
adc
cld
mov
fmul
mov
cld
lcall
int3
sbb
pop
jno
fwait
rcr
fldenv
popf
popf
rcrb
hlt
test
mov
stos
out
pop
mov
sahf
in
fstps
mov
sub
and
out
or
cmpsb
mov
mov
stc
sub
sbb
xlat
and
fsts
jecxz
pop
fnstcw
push
fldenv
push
fld
and
and
dec
fldenv
fldenv
xor
mov
std
pop
or
clc
out
sbb
mov
inc
pop
xchg
pop
cli
jmp
add
lret
out
rcll
xor
add
sbb
aam
mov
decl
mov
popa
sbb
add
mov
aaa
aam
push
ret
mov
adc
das
push
mov
mov
leave
sbb
mov
inc
nop
rorl
loop
stos
mov
lds
mov
in
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
out
stc
mov
adc
or
mov
decl
js
loopne
outsl
pushl
jmp
inc
mov
cmp
pop
add
mov
popf
sti
jmp
stos
push
inc
outsl
out
pushl
int3
repnz
test
pop
stos
clc
scas
adc
and
cli
inc
jmp
aam
aas
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
pushl
cli
lcall
lock
mov
clc
std
mov
fsubs
in
pop
cli
stos
xchg
clc
repz
subb
fwait
xchg
and
cli
decl
and
int
int3
cmpl
xlat
mov
fs
dec
lea
aas
ret
pop
shrl
ljmp
loop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
cld
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
jmp
mov
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
sti
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
arpl
std
outsl
std
push
int3
and
xor
sbb
and
das
cmc
sbb
sarl
addb
std
xlat
cmp
sti
fmull
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
push
fisubl
xor
push
jg
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
lods
add
call
pop
push
xchg
cmp
aas
fdivr
decl
gs
std
add
scas
push
xchg
jge
ficomps
frstor
push
add
xchg
ljmp
dec
aam
inc
push
jmp
les
inc
mov
xor
call
ljmp
fldt
je
outsl
pop
jb
jmp
adc
std
inc
sbb
and
int
add
add
test
mov
add
fs
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
cmp
mov
push
or
and
lcall
push
mov
sub
push
mov
lea
movsl
movsb
jg
sub
and
or
add
add
push
push
mov
jl
add
rcrb
cld
push
incl
je
cmp
addb
mov
sub
fnstsw
and
pushl
push
lea
mov
jae
cmp
jae
mov
add
in
mov
jl
jmp
addr16
jg
sub
jno
cmp
out
adc
sub
cs
pop
call
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
jmp
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
dec
pop
pop
ret
sbb
inc
add
xchg
sbb
sbb
add
inc
jp
or
xchg
inc
xor
jmp
push
pop
inc
loopne
add
and
cmp
aam
mov
sbbl
jo
jg
lcall
loopne
adc
sub
jl
sbb
lods
jg
dec
dec
mov
push
dec
or
add
sbb
adc
js
sbb
jno
mov
call
mov
fmull
push
push
push
push
call
or
adc
inc
ret
inc
cld
xor
push
or
sbb
ret
pop
clc
decl
and
dec
or
mov
cmpl
je
jmp
push
js
jae
test
push
mov
cld
push
test
outsb
push
cmp
lea
ljmp
xchg
dec
sbb
sbb
push
call
mov
repnz
and
fdivrl
push
jmp
icebp
iret
adc
call
rol
cmpsb
mov
xlat
add
sub
dec
xor
incl
jnp
mov
push
inc
cmp
and
adc
lea
lcall
xchg
or
lock
sub
push
push
and
lea
fists
push
pop
sbb
xchg
xlat
es
inc
rep
nop
lds
pop
push
inc
mov
push
inc
lcall
push
mov
rcrl
pop
sub
addl
inc
or
inc
es
clc
icebp
add
adc
push
jmp
incl
pop
adc
dec
jle
hlt
andb
pusha
or
or
pop
pop
ret
jecxz
incl
out
orl
adc
add
lret
push
call
cld
incl
add
cmp
sti
xor
add
inc
push
aad
ret
mov
ret
sti
xchg
add
ret
in
or
push
jne
or
jo
fisttps
dec
ror
and
decl
inc
scas
lret
adc
sub
or
stos
pop
xor
push
mov
jmp
cltd
xchg
xchg
cmp
ljmp
cld
clc
es
add
dec
cmp
or
pop
bound
jo
mov
ljmp
cmp
inc
adc
dec
sub
push
cltd
push
cmpb
enter
lcall
add
cmp
jge
push
inc
xor
rcl
pop
add
sub
je
dec
jne
xlat
jmp
rcll
out
xor
rorb
rclb
les
push
add
dec
incl
pop
inc
inc
adc
inc
cmp
inc
int
or
jnp
lea
test
add
pushl
icebp
jmp
push
scas
jecxz
ficoms
add
pushw
push
push
call
sbb
scas
pop
ljmp
int3
out
aad
lea
push
inc
add
dec
add
popa
xor
push
je
in
pushl
jge
dec
or
cwtl
adc
mov
stc
add
movsl
movb
xchg
jnp
push
cli
pop
shll
and
xchg
stos
lret
shlb
add
cmp
mov
movsb
call
pushl
cmpsb
popf
inc
add
lock
es
adc
add
push
push
xchg
xchg
jle
jl
mov
jmp
xor
cmp
jge
fcoms
cmp
enter
insl
cmp
xchg
test
call
lock
lds
das
hlt
push
sbb
pop
fldcw
dec
sub
push
in
xchg
lcall
fnop
enter
lahf
inc
aam
inc
adc
adc
outsb
sti
push
jmp
pop
dec
repz
nop
cli
cmp
push
stc
jmp
cmc
sbb
shll
movl
fsub
sub
xchg
repz
pop
mov
out
and
jbe
std
lahf
mov
ljmp
fwait
repz
jno
je
je
cmpsl
add
xchg
dec
mov
call
mov
cli
cmp
cmp
push
call
ja
pop
call
adc
jmp
sbb
lcall
popf
ret
and
inc
mov
jle
dec
rcr
ds
sub
mov
add
jmp
push
cwtl
pop
lahf
push
adc
rolb
testb
stos
lahf
popf
cmp
mov
push
dec
test
mov
dec
hlt
ljmp
std
jmp
insb
cli
inc
mov
inc
xchg
mov
adc
mov
sub
jmp
lcall
rclb
lock
call
add
decl
cmp
ss
pop
rorl
jp
cmp
subl
stc
pop
and
dec
and
bound
mov
mov
pop
mov
andb
fistpl
or
ss
aaa
fbld
arpl
cli
cmp
jne
je
inc
outsb
into
outsb
jg
jns
imul
or
fs
push
inc
jo
arpl
mov
insb
cmp
int
mov
ljmp
bound
xor
idiv
out
ss
lret
inc
cs
and
inc
sub
jns
loop
jnp
test
jae
jb
js
cmp
xor
je
push
jnp
inc
outsl
js
ja
fwait
jecxz
inc
cmpsl
data16
cmp
add
inc
js
je
test
cld
fildll
push
cmc
testb
dec
stos
ret
pop
dec
add
pop
mov
fisttpl
add
cmp
or
xor
or
pusha
pop
pop
mov
jl
sub
enter
add
insl
popf
fistps
xor
call
shr
and
inc
mov
call
dec
or
shlb
aas
stos
jmp
call
jne
inc
pop
cli
dec
outsl
jmp
lods
roll
sbb
jmp
or
sub
cmp
jae
cmp
ja
inc
xchg
mov
insb
mov
lds
jmp
add
sbb
push
inc
ret
jne
in
mov
inc
mov
jmp
lods
shrl
inc
les
add
xlat
mov
or
inc
sbb
sbb
outsb
lcall
inc
add
pop
adc
mov
lea
inc
std
lods
incl
mov
movb
mov
dec
cld
mov
iret
ret
mov
popl
aaa
clc
add
push
push
cmp
cwtl
xor
mov
push
mov
ljmp
pushl
push
mov
add
mov
call
pop
mov
push
xor
or
insl
lret
mov
push
repnz
rcl
mov
pop
or
sub
pop
ret
add
mov
inc
mov
adc
push
sub
add
adc
xlat
sub
pop
pop
cmp
subb
adc
pop
pop
pushl
inc
fchs
add
xor
test
fbld
xor
add
fs
jb
inc
or
outsl
arpl
in
test
fs
jae
orps
je
imul
sbb
dec
add
add
add
and
incl
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jle
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
sub
push
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
pop
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
mov
push
dec
repnz
push
call
pop
or
je
mov
add
jmp
popa
ret
popa
jmp
