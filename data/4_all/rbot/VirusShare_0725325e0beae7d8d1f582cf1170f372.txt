iret
aam
push
dec
out
movsb
lahf
sbbb
imull
cwtl
mov
lahf
aas
pusha
lods
popa
int
adc
aad
and
in
daa
int3
or
clc
dec
mov
mov
out
stos
jbe
adc
mov
pop
dec
imul
or
pop
xchg
jle
pop
clc
mov
sbb
shlb
push
cmp
mov
popa
adc
mov
pop
jmp
xor
mov
aaa
or
and
cs
pop
cli
or
and
push
lods
mov
dec
and
push
std
or
sbb
xlat
or
add
bound
cmp
roll
mov
pusha
testb
mov
leave
nop
xchg
jle
flds
sub
stos
or
mov
mov
mov
js
ja
mov
adc
fisubl
hlt
loope
and
sub
popl
mov
adc
add
adc
pop
test
sahf
shrl
inc
lea
and
mov
mov
push
pop
mov
or
add
mov
push
mov
mov
sub
clc
pop
test
add
mov
fisubrl
or
jae
and
push
pop
bound
xchg
xchg
sub
clc
aas
lods
cmp
repz
or
jne
vpmacssdd
push
add
mov
cmp
shr
dec
outsl
push
lea
in
fisubs
out
popf
std
mov
enter
neg
and
jmp
insb
repnz
push
jecxz
add
nop
jg,pt
or
scas
push
xor
pushf
xchg
xor
outsb
xacquire
push
lcall
cmpsl
loope
xlat
stc
fistps
lds
inc
sbb
ds
inc
and
ja
pop
mov
cmp
sbb
inc
fsub
mov
sbb
mov
and
enter
jge
jo
adc
mov
mov
mov
subl
inc
in
pop
mov
stos
xor
test
repnz
in
lock
out
push
or
mov
mov
imul
cmp
std
cmp
mov
call
mov
aas
testl
sbb
xor
aaa
inc
mov
hlt
pop
sbb
jne
adc
xor
xchg
shlb
jnp
xchg
sti
arpl
mov
and
xchg
daa
cwtl
fisttpl
inc
jbe
inc
jb
pop
jl
cmpsl
xchg
or
cwtl
mov
mov
jno
push
jo
das
cmc
loope
ret
inc
dec
dec
sbb
inc
mov
jl
clc
decl
push
mov
push
out
outsb
sbb
jmp
shl
cmp
insl
and
inc
add
push
jnp
aas
sti
dec
pop
mov
inc
cld
test
jns
outsb
mov
sbb
cmc
xchg
sbb
xor
xchg
push
mov
mov
sub
or
inc
imul
dec
mov
pushw
pop
andl
imul
mov
shr
inc
shrb
ja
hlt
pop
mov
xchg
fwait
loopne
imul
std
push
or
test
incb
movsb
dec
cmp
add
jp
int
dec
bound
xor
jl
push
clc
add
lds
shlb
push
in
loopne
cmc
mov
inc
push
aam
cwtl
dec
xor
cmpsl
inc
loop
and
cld
cmpb
div
xor
xor
int3
imulb
dec
push
and
inc
push
mov
mov
jae
in
insl
jns
or
add
mov
pusha
scas
call
push
jl
sub
xchg
mov
int
sub
jge
sbb
add
push
test
mov
xlat
sbb
push
das
out
add
mov
cld
xchg
xor
les
jo
jmp
mov
ret
dec
imul
sbb
mov
in
and
notb
sti
loope
in
sbb
ss
sub
push
or
es
pop
lods
das
sbb
mov
shrl
fidivrs
push
cmp
iret
dec
xchg
daa
xor
push
pop
test
insl
fbld
inc
xor
mov
xchg
mov
hlt
dec
and
jecxz
lods
jecxz
inc
mov
test
push
sub
xchg
jge
bound
loop,pt
pmaxsw
dec
jne
pop
mov
in
in
sub
and
lods
leave
les
xor
jns
inc
int
pop
or
pop
xchg
jmp
sti
insl
fisttpl
enter
add
push
js
add
movl
inc
pusha
repz
in
je
negl
adc
data16
popw
mov
shll
mov
mov
mov
dec
hlt
imul
push
cli
es
push
mov
int
repnz
jl
cs
addb
ret
push
or
cs
nop
lods
pop
sbb
or
aas
xor
push
imul
add
push
cmc
dec
push
mov
dec
pushf
push
dec
dec
scas
dec
loope
mov
out
xorl
fsubr
push
mov
std
mov
lea
jo
sub
mov
inc
xchg
sbb
shrb
sbb
pusha
clc
sub
clc
xor
xor
mov
adc
dec
icebp
jno
inc
inc
push
lret
dec
mov
cmp
lods
dec
xchg
icebp
jbe
jns
and
lcall
xlat
and
push
popa
and
inc
cmpsl
mov
fs
xchg
xor
mov
mov
jnp
mov
repz
sub
cmp
sub
pop
pushf
jecxz
push
and
dec
xor
js
jmp
and
and
ds
sbb
idivb
inc
scas
fwait
or
mov
push
sub
rep
mov
data16
push
xlat
or
inc
gs
lret
dec
rcr
hlt
cmp
out
mov
jecxz
mov
push
fimuls
pusha
xor
or
lea
jle
je
cmp
clc
mov
xchg
push
jbe
test
pop
xor
or
push
or
pop
push
push
mov
pop
pop
push
test
pop
clc
cmc
jmp
jmp
call
cmc
or
add
push
push
add
pop
pop
cmp
jo
cld
mov
inc
inc
inc
inc
push
push
js
cmp
pop
pop
or
stc
push
add
mov
pop
nop
sub
inc
dec
mov
xchg
add
push
movzbl
jno
fnop
push
push
cmp
pop
pop
jl
push
test
pop
clc
and
test
loop
pop
push
cmp
pop
nop
stc
clc
lea
mov
jb
cmp
push
call
dec
xchg
push
and
lock
mov
sti
std
test
push
outsl
pop
pop
pop
mov
shr
test
je
cmp
xor
test
push
push
sub
pop
pop
cld
ror
cmc
push
add
pop
push
jnp
test
pop
jle
push
ror
pop
nop
rol
push
jns
jb
shl
pop
push
and
pop
push
mov
pop
push
mov
xor
pop
loop
jecxz
outsb
rcrb
jbe,pt
movsb
jnp
push
call
inc
imul
int
popf
mov
xor
pop
jbe
enter
in
ret
les
push
xchg
pop
push
pop
xchg
pop
xor
jle
or
ror
inc
dec
push
push
pop
add
pop
cmp
clc
nop
dec
jne
push
call
icebp
inc
inc
cmpsb
pop
and
and
cmpsb
push
dec
lret
xor
data16
xorl
jge
mov
loopne
inc
das
jmp
jmp
jmp
inc
roll
or
xor
and
mov
xor
bound
sbb
fisttps
cltd
push
in
scas
in
loop
mov
push
in
cmp
mov
setl
mov
test
and
in
dec
cmp
cmp
ror
lcall
daa
out
inc
out
inc
xor
pop
sbb
or
or
cmovg
stos
mov
stos
int
into
sbbl
sbb
je
pop
dec
les
cmpsl
inc
and
addr16
ja
mov
xor
and
lret
push
repz
mov
rorb
test
clc
jmp
std
int
add
add
xchg
inc
outsl
adc
xchg
lea
mov
andl
lret
sbb
mov
dec
dec
shll
nop
test
push
xchg
rcrb
mov
inc
lahf
mov
sbb
into
adc
sti
sbb
push
and
pop
adc
adc
push
jbe
mov
std
adc
dec
xchg
xchg
vpunpckldq
pop
adc
in
call
ror
cmp
out
aaa
jne
mov
add
push
test
ljmp
mov
scas
pop
test
cmc
dec
ljmp
lods
arpl
lcall
les
shrl
add
dec
in
sub
xor
push
pop
push
stc
pop
xchg
add
out
iret
test
nop
jge
icebp
out
roll
sbb
lret
cli
mov
mov
cmp
push
cmp
xor
les
dec
mov
test
orb
aaa
movsb
pop
mov
sub
loope
pop
push
adc
mov
pop
fldcw
ja
bound
nopl
jbe
rcrl
cmp
test
and
stos
mov
nop
add
sbb
pop
call
fidivs
push
sbb
and
out
adc
sub
cmp
push
push
cmp
cmp
or
lret
sbbl
mov
pusha
repnz
mov
mov
mov
int
xchg
dec
mov
and
inc
add
fld
fsubrl
lcall
or
movsl
roll
mov
int
test
cld
frstor
mov
stos
xor
hlt
push
adc
mov
cmp
jecxz
mov
popl
cmp
adc
mov
lcall
adc
inc
loopne
out
pop
cmp
mov
into
fisubs
jae
xchg
fildl
iret
pop
xor
cmp
es
sarb
divl
mov
mov
movsl
int
pop
loop
dec
fists
in
scas
pushf
sbb
xchg
stc
lods
pop
in
jbe
test
mov
arpl
inc
out
fs
daa
scas
lret
fucomip
jb
xorl
mov
enter
mov
or
pop
inc
fdivs
inc
out
shlb
loop
mov
push
jne
out
cmp
imul
lcall
fisttpll
mov
adc
mov
punpckhdq
bound
inc
xchg
int
fidivl
inc
sub
gs
mov
dec
cmp
mov
pop
add
add
xchg
push
pop
cmp
sar
cmp
jmp
pop
push
aaa
push
push
ret
adc
in
sarb
aaa
lds
into
jle
pop
ds
clc
xor
mov
sub
xor
cwtl
ror
dec
adc
cmp
add
or
pushf
push
out
xchg
inc
cmp
xlat
fmuls
ret
outsb
and
aaa
call
push
cmp
sbbb
leave
xor
adc
xor
add
pop
push
or
gs
in
jo
mov
add
scas
into
in
mov
into
cmc
in
add
cmp
adc
mov
insl
lahf
test
shlb
fwait
loope
push
imul
jmp
mov
testl
shlb
fucomip
cmp
mov
mov
jecxz
outsb
enter
push
rolb
lret
popf
push
sbb
mov
daa
and
data16
testb
pop
mov
cmp
sti
xchg
inc
jae
or
xor
clc
mov
and
or
pop
testl
xchg
fisubrl
loop
push
jns
aam
test
push
repz
sbb
std
insl
inc
sub
jo
or
push
movsl
push
daa
aad
sbb
sub
sbb
jne
pusha
fnstsw
push
dec
loope
nop
add
fildl
sbb
fadd
cld
scas
mov
cmc
mov
hlt
sub
test
sub
jbe
adc
lods
push
pushf
cmp
push
push
nop
fcoml
in
popf
ja
js
lahf
xor
mov
out
out
sbb
stc
mov
outsb
ret
adc
fisubl
arpl
pusha
cmp
lods
pushl
xchg
popf
mov
lds
dec
in
out
dec
jmp
and
shlb
popa
fwait
xor
frstor
ss
jbe
addl
jp
push
fsubs
cmp
mov
mov
xor
rolb
hlt
js
add
aad
int3
sbb
movsl
in
mov
scas
push
adc
shr
adc
outsb
push
cmp
subb
shlb
iret
pop
and
mov
arpl
cld
in
jns
sbb
faddl
inc
xchg
sbb
aas
lretw
add
outsl
push
add
cmp
pop
xchg
imul
xor
and
call
mov
adc
shlb
or
out
cmp
push
test
rolb
fwait
or
and
test
xor
rcrb
xchg
shrl
enter
dec
imul
hlt
and
dec
inc
pop
mov
xchg
push
and
fstl
push
ds
sub
mov
lcall
mov
and
cmp
xchg
addl
dec
orl
or
jae
test
jg
sub
loop
pop
enter
fcoms
fisubl
add
mov
cltd
pop
fs
adc
mov
aaa
sbb
call
and
aaa
and
loope
filds
mov
inc
fsts
and
cld
call
sub
push
and
jbe
fbstp
xlat
cmp
xor
mov
ret
sarb
inc
xchg
nop
mov
jne
or
cmp
stos
mov
push
push
add
and
pop
xchg
mov
add
add
or
xchg
mov
jnp
mov
loopne
dec
xchg
in
cmc
pushf
mov
and
inc
cmpb
lods
int3
test
push
jno
pop
mov
iret
jae
mov
mov
test
outsb
cmpsb
scas
mov
jecxz
mov
sub
lcall
mov
addr16
mov
or
or
xor
cs
add
fdivrp
aad
inc
jne
mov
int3
dec
int3
pop
test
sarl
add
into
push
lcall
icebp
push
gs
insb
mov
ds
xchg
push
jae
dec
dec
lahf
sbb
add
jno
in
popa
push
mov
scas
add
mov
xor
push
mov
in
outsb
and
fldenv
nop
scas
out
icebp
xchg
daa
xchg
add
mov
hlt
idivb
stos
inc
xchg
mov
aas
outsl
jne
add
mov
lahf
data16
dec
or
push
fildll
push
mov
cmp
jns
push
push
mov
iret
add
loop
js
add
fisubs
ret
mov
dec
in
repz
aas
fwait
sub
scas
jne
fdivrl
int
push
lds
in
jge
jg
jecxz
in
mov
jb
cmc
xor
arpl
out
into
pushf
jne
shr
test
jns
popa
jecxz
lods
jbe
mov
dec
outsb
xchg
xchg
jno
lods
mov
inc
and
loopne
xchg
in
pop
cmp
or
mov
inc
jne
jb
negl
mov
dec
jge
lcall
sub
idivb
fimuls
add
lcall
mov
adc
insl
add
mov
ljmp
test
or
sub
dec
mov
adc
jno
adc
mov
mov
in
test
or
shufps
cmp
rep
imul
aam
lods
aam
aas
bswap
fmull
mov
mov
jbe
jae
ret
mov
shr
jne
sbb
pop
xchg
jbe
mov
dec
jns
cmp
inc
push
push
mov
out
xchg
ja
xor
push
cli
mov
xor
ror
je
sub
lods
fistps
fisubrl
jmp
add
and
sbb
mov
jns
out
fs
mov
clc
addr16
inc
or
push
imul
xor
dec
or
shlb
mov
cltd
inc
push
push
movsl
lret
mov
mov
push
jne
js
lcall
lock
mov
out
mov
mov
add
cmp
xor
fs
movsl
adc
shlb
addr16
stos
lahf
mov
mov
lret
repz
inc
ret
xor
and
cmc
adcb
das
mov
into
jbe
repnz
dec
inc
scas
scas
rorb
fiaddl
push
out
inc
jmp
test
pop
xor
xchg
dec
push
adc
dec
in
jae
inc
push
insb
jmp
jnp
loopne
sub
std
outsb
add
stc
dec
or
fmuls
lret
push
mov
cltd
leave
add
int
inc
outsl
cmpsl
pop
sti
jbe
imul
lods
aas
popf
lret
mov
jg
cs
inc
lock
sbb
inc
mov
xchg
mov
popf
jns
iret
test
adc
sti
rcrb
scas
movsl
push
je
sbb
xor
ds
in
pxor
dec
pop
lea
imul
lods
xor
fwait
or
popa
mov
push
and
mov
cli
dec
sbb
in
cmp
mov
xchg
add
jg
fwait
outsl
push
dec
sub
in
jbe
lds
sub
or
push
sbb
push
ja
dec
mov
add
jp
out
imul
mov
jmp
jecxz
es
lods
das
in
fidivs
xchg
dec
mov
lea
jge
add
rol
inc
outsb
popf
stos
sbb
push
adc
lea
mov
mov
ret
jo
and
and
push
lods
into
imul
mov
cmp
cld
inc
and
adc
mov
pop
xchg
icebp
mov
pop
push
outsl
inc
cmpb
stos
les
jne
ret
inc
sbbl
xchg
adc
les
lret
pop
lcall
das
cmp
push
mov
leave
adc
or
jp
repnz
in
add
jb
sub
jbe
cmp
pusha
dec
mov
mov
push
and
xchg
bound
in
push
mov
jns
testb
push
push
cmpsl
add
lods
and
jge
mov
cmp
adc
jge
xor
dec
push
cwtl
bound
xchg
data16
cmpsl
repz
or
push
das
push
or
dec
shl
ja
pop
vmwrite
stos
jmp
or
cmp
lods
je
icebp
sbb
pop
pop
in
and
into
pop
cmp
loope
mov
pop
add
std
sahf
aad
lea
ret
out
cmp
xchg
xchg
push
out
or
xor
fsts
cmc
sbb
and
mov
ret
cmp
cld
pop
add
jbe
mov
pop
stos
sub
xlat
lret
pop
xchg
jmp
xchg
xchg
bound
or
push
pop
push
lret
mov
je
mov
dec
or
out
fnsave
mov
gs
jmp
or
cmp
xchg
mov
xlat
repz
cltd
pop
or
push
mov
jge
enter
jae
xchg
sbb
jp
fisubrl
push
cwtl
enter
mov
lea
add
inc
sub
movsb
rolb
inc
pop
sbb
aaa
sub
jnp
pop
and
dec
pop
mov
sbb
jno
cltd
inc
fdivrs
dec
pop
jns
mov
das
cmc
cmp
push
xchg
lds
xchg
test
sub
dec
and
clc
pop
mov
test
leave
push
pop
add
daa
pop
jb
xlat
fwait
sub
pop
mov
loop
sbb
mov
lods
ds
push
dec
cmpsl
in
jmp
lret
clc
in
push
mov
fstpt
movsl
mov
add
jl
xor
movsl
add
and
fwait
add
push
add
inc
dec
fdivp
test
mov
je
pushf
stos
lret
dec
cmpsl
push
icebp
add
jb
pushf
adc
rcll
in
push
es
mov
dec
add
aas
aad
loope
sbb
mov
mov
decb
xor
dec
mov
sbb
mov
faddl
xchg
mov
jo
cmp
mov
adc
inc
push
sti
dec
and
and
xchg
adc
js
sarb
adc
outsb
in
cmpsb
outsl
jecxz
daa
push
movsb
jnp
pop
jae
test
pop
pop
in
lret
xor
pop
cmp
repz
insl
imul
xchg
jecxz
test
cmp
sbb
xchg
push
icebp
adc
adc
jecxz
scas
addr16
sub
negl
inc
push
mov
sti
cmp
xor
dec
dec
dec
je
sbb
cmpl
ss
mov
jecxz
xchg
inc
aam
dec
push
push
mov
mov
dec
jns
stos
jns
insl
mov
jno
dec
xchg
cmp
sub
imul
or
sbb
push
mov
out
cwtl
cli
es
iret
test
shlb
sbb
loope
mov
jp
mov
push
jns
jb
jge
jl
pmullw
mov
fwait
jg
rorb
ss
stos
fildl
xchg
cmc
das
mov
testl
cmp
and
or
insl
aaa
movsl
sub
sub
lods
lahf
fwait
jl
xchg
cmp
outsl
dec
arpl
pop
mov
push
jnp
push
stos
leave
in
or
int
mov
lcall
adc
xor
aad
int
mov
xchg
push
sti
cs
aam
repnz
in
mov
fcoml
mov
stos
xchg
outsb
ljmp
sub
jle
inc
orl
in
dec
mov
push
add
js
js
lcall
imul
xchg
adc
rcrl
cmp
test
jb
lea
mov
call
outsl
jbe
roll
jp
dec
movsb
iret
push
hlt
xchg
xor
ret
pop
xor
mov
and
out
sti
xor
out
loop
inc
mov
mov
stc
test
test
mov
mov
xchg
jno
in
insl
xor
rcrb
jmp
ja
rcll
test
test
jg
lcall
popf
xor
les
loop
cwtl
arpl
fs
mov
popa
and
repnz
xor
xlat
sbb
inc
jle
lock
xor
in
add
hlt
cld
nop
lods
pop
pop
in
mov
mov
sub
mov
pop
cmp
insb
icebp
fstpt
mov
js
test
sbb
fistl
lods
sarl
movsb
imul
push
pusha
adc
notb
inc
or
xor
cmp
sbb
stos
or
fmuls
cwtl
jns
push
inc
jbe
xchg
jnp
insb
push
mov
add
cmpsb
mov
adc
repnz
push
mov
adc
ret
adc
cmp
cmovp
cmp
mov
sub
add
notb
ret
pusha
xchg
lcall
cmc
ret
inc
pushf
jo
fstps
or
push
fwait
ljmp
inc
hlt
or
sub
pop
mov
into
std
nop
push
in
outsl
pop
adc
dec
mov
std
mov
lret
sbb
cli
jns
mov
jle
mov
sbb
dec
ret
pop
xor
ja
in
pop
inc
sti
mov
pop
fdiv
push
enter
iret
ja
rcrb
lds
push
push
pop
or
cmp
fwait
jns
ror
cmp
iret
scas
sub
lret
xchg
jge
jo
and
lcall
mov
pop
pop
or
push
xor
bound
jbe
or
lcall
sub
in
sub
add
mov
xchg
mov
and
sub
mov
negb
test
negb
add
mov
xchg
ficoms
lods
add
or
lods
pop
lock
sbb
mov
jno
inc
add
aas
and
pop
inc
out
ficomps
and
sbb
and
jle
pop
adc
xor
into
mov
mov
push
int
test
push
js
es
mov
iret
xlat
lret
push
push
cmpsl
mov
stos
sbb
dec
push
loop
push
les
imull
push
dec
sub
mov
lret
mov
mov
mov
sub
mov
loopne
xor
dec
inc
sub
mov
jns
pusha
xor
ret
jmp
das
mov
pop
out
xor
adc
jge
fstl
repnz
xchg
inc
mov
push
sarb
xor
jne
enter
xor
fsubl
jmp
add
jl
cmp
xor
hlt
enter
and
jo
push
lahf
out
xchg
dec
ds
mov
sbbb
mov
xor
ss
mov
xchg
aam
inc
push
nop
jge
lret
mov
lcall
mov
lock
sbb
movsl
xor
ret
pop
in
adc
cltd
or
xchg
mov
sbb
jle
sub
lret
jmp
pop
call
and
inc
fisubl
jne
xchg
imul
and
into
cmp
gs
lock
pop
sbb
mov
dec
test
inc
sbb
pop
out
inc
mov
loop
jo
inc
inc
mov
data16
ficoms
lret
sti
dec
xchg
jno
imul
push
mov
jecxz
add
xchg
test
icebp
jg
or
push
sub
mov
inc
pop
sbb
pop
leave
movsb
jg
mov
jbe
and
dec
sbb
movsl
clc
stos
rcrl
wrmsr
enter
xchg
xchg
mov
popf
imul
jp
push
dec
cld
jmp
daa
scas
lds
jmp
push
pop
cmp
mov
es
push
jo
inc
dec
pop
fldenv
push
out
xchg
dec
ficoml
je
cld
sub
push
dec
xor
sbb
test
push
push
cmc
cmc
mov
inc
jge
lahf
lcall
inc
enter
xchg
call
pop
popa
cmp
push
sbb
mov
stc
push
cmpsl
lock
clc
mov
pop
mov
mov
lods
and
xchg
or
add
mov
mov
xor
sbb
sub
std
sbb
pop
xlat
sub
adc
mov
jnp,pt
leave
je
ror
adcb
mov
adc
jno
and
pop
or
sarb
fisubrs
pop
insb
cld
pop
dec
xchg
dec
movsb
out
jmp
cltd
je
jp
fiaddl
pop
dec
icebp
pop
incb
pop
add
cmc
xchg
fyl2x
xor
pop
lret
in
jle
scas
mov
cmp
sti
cmp
cmc
cmp
mov
lret
push
pop
orl
outsl
cmp
nop
push
scas
xchg
xchg
fwait
and
ret
xchg
or
into
mov
mov
jmp
add
out
mov
sbb
xchg
adc
test
stos
ds
aaa
out
xor
and
insl
sub
js
in
movl
lcall
dec
or
nopl
jbe
sbbl
icebp
sub
push
jns
iret
add
xor
sbb
or
mov
popa
enter
inc
dec
fisubrs
jp
or
fwait
push
in
ljmp
sbb
into
nop
sti
pop
jp
sbb
mov
in
insl
inc
mov
mov
push
orl
or
adc
mov
mov
xchg
mov
inc
hlt
les
icebp
cmp
icebp
fmull
push
xchg
hlt
mov
sti
cmp
popf
jo
in
dec
cmpsl
ja
pusha
and
dec
inc
add
movsl
dec
mov
daa
je
pop
sbb
xchg
cmp
xchg
mov
daa
jb
add
pop
and
es
cmp
test
push
fdivl
lock
frstor
mov
les
mov
dec
dec
imul
bound
leave
stc
xor
and
cmc
push
movsb
or
add
push
pop
mov
imul
mulb
fnsave
mov
push
lods
fmulp
adc
imul
xlat
jg
jns
push
pushf
and
jp,pn
mov
test
out
cli
and
lret
push
mov
int
out
bound
data16
push
arpl
ficoms
jb
scas
sbb
jne
lds
lds
sar
xor
or
nop
jne
lea
adc
adc
ret
pop
adc
shlb
in
adc
call
adc
loopne
mov
aas
mov
mov
outsb
repnz
dec
js
mov
push
mov
rcll
enter
cmp
xor
pop
cwtl
xchg
jmp
xchg
nop
cmp
daa
or
xor
mov
mov
int3
nop
sbb
loop
xchg
push
add
lods
push
pop
cltd
sub
lea
cld
xlat
xlat
inc
daa
gs
popf
fldcw
cli
lods
jg
mov
mov
lods
pusha
nop
or
add
ret
clc
lret
arpl
push
int3
jle
xlat
add
mov
pop
mov
jmp
sub
add
sub
inc
loope
addr16
fnstcw
xchg
fldt
out
es
add
outsl
or
aaa
xor
mov
aaa
je
pop
or
sarl
ljmp
sbb
pushf
push
push
fwait
adc
rcr
lods
outsb
pop
jg
lret
fistl
mov
mov
or
pop
cmp
xor
rcr
fwait
pushl
jle
popf
xor
inc
lretw
add
mov
insl
scas
jae
faddl
js
lods
test
and
int
outsb
and
xor
mov
in
repnz
inc
jno
adc
lcall
sbb
std
sbb
cmc
les
stos
insl
jl
aad
inc
jecxz
and
ss
push
xchg
pop
in
xchg
mov
dec
sbb
adc
inc
xchg
imul
lea
inc
dec
test
and
mov
xlat
jmp
jle
je
push
imul
movsl
lock
addr16
int
push
je
xor
stc
fs
lds
mov
dec
in
sbb
mov
push
rorl
mov
loope
jge
cli
xchg
adc
and
or
aad
xor
adc
xor
fs
dec
dec
add
or
addr16
mov
dec
inc
jns
mov
cmpsl
pop
fdivs
das
push
lret
in
pop
mov
jns
mov
mov
dec
mov
pop
pop
aas
push
les
adc
ja
out
js
xchg
cld
cld
scas
stos
daa
push
sbb
mov
mov
pop
inc
xlat
addr16
mov
or
and
sbb
xchg
pop
push
dec
in
inc
fistpll
pop
sub
xchg
neg
xchg
adc
mov
insl
stos
in
jnp
push
or
cwtl
push
scas
mov
mov
sahf
jl
popa
mov
cmpl
jp
cmpsb
cmpb
gs
dec
mov
xchg
inc
adc
je
sahf
mov
adc
dec
std
mov
xor
push
popf
cmpb
jmp
test
std
fwait
dec
scas
aas
popf
adc
pop
xchg
push
and
in
in
enter
mov
jecxz
xchg
fsubrp
and
inc
adc
xchg
sub
add
add
sbb
adc
aam
or
mov
das
adc
ss
je
insw
sub
xchg
rclb
mov
and
pop
jb
fistpl
movsb
cli
or
fwait
cmp
sbb
sub
mov
loop
std
sub
sbb
mov
addr16
cmp
sbb
mov
mov
rcll
idivb
nop
xlat
lock
and
hlt
push
jmp
daa
xlat
addr16
and
pop
aas
adc
dec
ljmp
dec
xor
xchg
icebp
iret
push
mov
imul
iret
cmc
mov
pusha
movsl
cmp
and
popf
mov
lea
seto
call
outsl
push
es
sbb
inc
mov
stc
in
pop
rcll
and
pusha
stos
mov
stc
inc
adc
out
out
sub
push
xchg
fcomp
test
cld
jg
cmp
xchg
cltd
cmp
or
cmc
adc
fists
jae
out
inc
and
int3
push
jo
xor
lds
sub
stos
cld
sub
xchg
ror
in
xor
fsts
lds
fdivrl
mov
fldl2e
jp
out
cli
out
in
rolb
mov
xor
cmp
sbb
hlt
mov
es
cmp
cmpsb
or
test
mull
sub
mov
or
sbb
lcall
jo
pop
mov
xor
jne
xchg
or
push
test
data16
loopne
fnstsw
xchg
push
or
jae
mov
pop
ja
jns
or
mov
into
cmc
jge
xor
cmp
adc
jae
out
ret
fwait
push
jbe
fcoml
jge
mov
call
jns
sahf
pop
inc
push
pop
shlb
inc
sahf
push
arpl
push
data16
cwtl
inc
in
pop
and
mov
jo
movsb
mov
pop
push
adc
test
pop
or
inc
add
push
mov
lahf
mov
jg
arpl
sbb
dec
xor
fnstsw
fs
in
mov
fisttps
or
loopne
jmp
test
subl
or
sbb
jno
cld
inc
cld
nop
inc
pop
push
rcrb
mov
and
decb
dec
fistpll
movsb
jne,pn
xchg
lods
shll
sub
lds
adc
stc
cmp
push
pop
pop
mov
std
mov
mov
lods
mov
or
imul
cmp
xchg
sub
cmp
pop
inc
int
push
mov
sub
dec
push
xchg
ja
mov
push
sbb
xchg
jnp
popf
not
mov
aaa
lcall
fnsave
inc
mov
adc
push
jl
stos
loope
push
mov
xchg
loope
jecxz
out
fisttpll
movsb
xlat
inc
cmpsl
fnstsw
nop
stos
xlat
orb
pminub
shll
repz
lock
pop
push
xor
scas
pop
mov
insl
sti
imul
and
js
add
imul
ljmp
dec
or
cmp
push
push
jg
test
sbb
jbe
fwait
lret
ret
je
repz
and
scas
xlat
xchg
mov
xchg
push
sub
js,pn
sub
or
dec
pop
inc
outsb
nop
adc
lods
cmpsb
add
pusha
int3
imulb
cmp
mov
ds
jmp
insl
repz
out
imul
lods
push
mov
loopne
jbe
sbb
lcall
jl
adc
cli
mov
loopne
inc
js
test
je
add
adc
mov
movsb
lret
mov
add
push
test
loope
out
pop
imulb
push
adc
or
divb
lret
inc
push
scas
icebp
mov
mov
xchg
fmuls
xor
outsl
push
nop
mov
aas
xchg
stos
addr16
jmp
xchg
xchg
push
cmp
xor
mov
dec
adc
out
push
ja
push
sbb
adc
jecxz
sbb
fs
jbe
imul
sub
loopne
push
fsubr
shrb
mov
clc
mov
inc
inc
lahf
das
dec
loop
cmpl
sbb
stos
push
dec
cmpsb
inc
popf
outsb
jl
ljmp
mov
rorb
mov
sbb
aad
outsl
notb
inc
push
add
jb
mov
inc
inc
aad
jb
add
in
hlt
lcall
fwait
loop
in
cli
iret
lret
xor
adc
adc
push
or
and
xchg
sbb
rolb
jns
loope
push
aam
inc
fcoml
inc
pop
mov
vsqrtpd
testb
outsl
dec
mov
and
adcb
sbb
mov
sahf
add
inc
aad
fstpl
fistps
call
cmpsl
xchg
mov
jno
pop
fldl
mov
sub
push
jle
test
push
pop
cmp
add
dec
dec
insb
cltd
outsb
fs
movsl
ret
mov
sahf
mov
lahf
sbb
cmp
cmp
aad
imul
movsb
mov
xor
push
cmp
adc
daa
mov
mov
push
sbb
ret
jno
sbb
xor
je
mov
ss
or
mov
fcom
repnz
mov
inc
int
outsl
stos
sbb
cmpsb
push
loope
mov
popa
ret
popf
push
cmp
cltd
pop
push
imul
push
mov
jns
sti
xchg
pop
adc
xor
fadd
and
ret
lock
mov
cmpsb
push
nop
xchg
sbb
xor
out
push
testl
adc
loop
lods
jl
sub
stos
scas
mov
pop
jp
cmp
sbb
je
movsb
aad
mov
vmptrst
xor
lcall
and
pop
jge
daa
cmp
pop
push
addb
arpl
and
jg
lock
jne
lret
repz
les
pop
pop
jbe
xor
movl
push
or
lret
pop
lahf
jmp
les
ret
jbe
aas
aad
outsl
fwait
int3
test
out
mov
lret
rcl
xorl
push
scas
mov
pop
mov
sbb
loopne
and
sarb
scas
rdmsr
imul
sub
ss
sbbb
xchg
ljmp
in
dec
movsl
gs
pop
nop
ss
clc
inc
scas
sbbl
testb
bndstx
lahf
loopne
mov
ss
dec
lods
clc
sbb
les
aam
popa
inc
sub
lea
js
pusha
mov
sahf
fldenv
add
popa
mov
xchg
mov
sahf
stos
test
jbe
out
test
jecxz
push
nop
nopl
and
push
add
sti
jecxz
mull
test
scas
stos
ret
ljmp
mov
fs
icebp
add
std
ret
pushl
cltd
iret
aaa
fisubrl
adc
fwait
ss
add
pop
pop
xlat
popa
sub
push
pop
jg
subl
lock
sahf
inc
mov
sahf
mov
xor
push
icebp
push
dec
sbb
pop
fsts
aad
inc
or
dec
push
xor
and
int3
outsl
sbbb
loopne
popa
mov
jbe
fmull
jle
call
mov
sub
jne
pop
in
and
int
xchg
aaa
fldlg2
pop
mov
rcrb
push
push
or
sub
dec
add
xchg
or
mov
scas
std
pusha
mov
push
mov
dec
or
aam
xchg
jae
ljmp
jae
addr16
and
pop
mov
rolb
scas
push
lcall
outsb
add
stos
cmpsb
and
scas
aas
insb
std
add
adc
and
std
rcll
fcoml
pop
add
imul
and
addr16
pop
fists
xchg
lahf
stos
or
pop
mov
mov
js
data16
ljmp
test
popa
daa
push
fcmovbe
push
repz
fisubs
gs
add
cmpsb
mov
shlb
loop
arpl
int
jmp
xchg
jne
setl
cmpsb
and
cltd
jo
sub
clc
insl
js
cmpsb
arpl
adc
mov
cmp
push
sub
stc
mov
fwait
inc
jb
adc
sub
inc
dec
dec
in
scas
lods
xchg
or
inc
mov
jl
dec
lret
ja
push
mov
rorb
push
lods
aaa
inc
xchg
in
xor
push
sbb
decb
xor
fistpll
push
inc
lahf
add
inc
loopne
jnp
insb
mov
popf
pushl
adc
les
jle
lock
es
iret
shl
jecxz
lcall
fsubrs
rclb
jne
pop
jg
inc
outsl
gs
das
lock
scas
arpl
push
add
xchg
ss
fsubs
aas
cwtl
out
xor
hlt
inc
and
xor
loop
adc
mov
mov
mov
sub
xchg
pop
jle
test
pop
cld
mov
mov
jg
dec
mov
fidivrl
add
daa
cmp
scas
mov
jae
retw
pop
push
mov
jns
jns
jne
inc
cmp
test
pop
jo
mov
gs
sbb
data16
out
xor
pop
mov
lret
bound
mov
inc
daa
imul
sub
hlt
cs
pop
xchg
push
mov
aad
xor
sti
fists
test
cmp
cmp
push
stc
lret
sbb
cmp
ds
mov
or
jp
dec
shll
mov
bound
jl
add
sub
imul
sbb
and
jge
and
or
movsb
add
pop
and
xchg
aaa
fwait
call
adc
xor
insb
xchg
enter
mov
repnz
cmp
adc
in
fcmovu
mov
and
cmp
jne,pt
xlat
sub
in
jne
mov
pop
mov
jmp
divb
or
das
shll
fwait
mov
xchg
push
daa
aas
xchg
and
insb
sahf
adc
and
nop
push
jl
movsl
cmp
adc
fs
adc
mov
mov
pop
or
test
sbb
dec
adc
dec
cmp
fnstcw
setne
pop
sbb
out
pushf
outsb
push
fiaddl
cmp
mov
sub
xchg
nop
add
xchg
filds
pop
cmpsb
cmc
xor
sbb
mov
pop
lret
in
ja
jmp
lcall
xchg
in
pushf
dec
std
adc
mulps
in
les
cmpsb
and
inc
dec
rorb
mov
divb
repz
add
pop
cmp
fstl
fmul
pop
and
es
or
shll
das
inc
dec
negb
xor
mov
cltd
mov
inc
adc
xchg
sub
xchg
lea
pop
mov
mov
ficomps
push
mov
xor
cmp
pop
jb
repnz
jle
pmaddwd
cmp
add
testl
scas
push
fs
out
enter
roll
or
cwtl
stos
in
pusha
fsubl
je
or
cld
addl
jns
fwait
ss
clc
adc
mov
inc
cld
mov
pop
xlat
clc
enter
leave
pop
aad
add
sub
pusha
dec
mov
mov
xor
cmp
test
les
pop
adc
leave
jnp
arpl
insb
fiaddl
push
inc
sub
iret
pop
int
fnstenv
or
mov
push
loope
dec
lds
adc
jmp
jg
lods
je
dec
cmp
int
sub
shlb
xor
jle
pop
push
push
stos
daa
inc
mov
and
dec
repz
aad
sub
mov
push
clc
repnz
inc
mov
xor
jge
pusha
std
cli
ret
and
adc
pop
adc
pop
inc
or
mov
enter
xchg
mov
mov
ret
enter
xchg
mov
fimull
mov
xchg
mov
mov
adc
movsl
or
incb
nop
outsb
in
rcll
fdiv
inc
ljmp
push
enter
mov
cmc
or
adc
shl
jg
adc
pop
insb
add
aaa
push
aad
enter
out
mov
nop
loop
xchg
jl
in
sub
pop
or
xorl
pop
js
aam
ss
xorb
test
scas
or
int3
pop
mov
or
dec
xor
jecxz
cmp
daa
fstpt
jl
cmpsb
jg
push
popf
addl
mov
repz
fnstenv
lret
jns
cmp
sub
xor
sti
dec
rcll
adc
clc
imul
cli
sbb
in
cltd
push
mov
add
mov
or
hlt
pop
shll
aam
jno
pop
pushw
rcrl
jnp
mov
pop
jne
mov
stos
mov
adc
add
push
add
jae
daa
in
add
cwtl
pop
pop
pop
add
repnz
mov
imul
mov
sahf
dec
neg
pop
rcrb
adc
cmp
and
jne
pop
add
inc
push
or
mov
leave
bound
sub
mov
jnp
dec
fidivrs
test
cmp
and
pushf
popa
in
inc
data16
std
xchg
dec
pop
mov
cmp
add
ss
test
xlat
iret
push
lods
insl
js
sbb
aad
lret
ljmp
inc
xor
rcr
hlt
rorl
adc
aas
call
or
clc
adc
pop
push
fiadds
and
leave
arpl
push
xlat
pop
fnstsw
push
inc
out
daa
and
xchg
decb
mov
popf
cmp
jnp
push
and
pop
inc
pop
test
inc
rolb
adc
ja
sbb
mov
aad
mov
outsb
and
loop
rcrl
scas
js
stos
push
rolb
inc
fstpt
adc
mov
pop
rol
outsb
hlt
cmp
icebp
cs
mov
int3
xchg
mov
popf
pop
mov
int
push
cmpsb
mov
enter
stc
push
pop
stos
out
sub
push
sti
add
rorb
out
loop
das
mov
clc
xor
outsb
xchg
jae
das
fsub
ret
bswap
stos
add
mov
inc
push
jp
jno
mov
cwtl
imul
and
sbb
sbbl
movsl
lock
sbb
cmp
jne
cld
movl
sbb
imul
fs
and
jp
addr16
inc
ret
lahf
ljmp
mov
xchg
add
repz
xor
ffreep
mov
fidivs
cmc
or
loop
jg
push
popa
xchg
adc
jae
pop
outsl
dec
fdivrs
jp
jne
sub
pop
pop
stos
mov
push
inc
add
and
cmp
xlat
fidivs
add
fnstenv
repnz
mov
mov
flds
jl
lret
fidivl
popa
repnz
and
fisubl
cmc
ljmp
xchg
sbb
lret
pop
pop
cli
mov
mov
jae
ficompl
movsb
out
fwait
pop
notl
mov
jecxz
inc
and
dec
out
pop
sbb
icebp
xor
inc
movsl
jb
pop
insb
mov
je
inc
cld
out
dec
mov
xor
cmp
inc
nop
pop
jns
mov
add
add
je
loope
and
out
popf
inc
cs
aad
nop
cmc
mov
add
out
movsl
daa
xchg
xor
bndldx
and
lret
ss
jno
insb
lock
sub
sbb
mov
repz
add
int
or
mov
or
xchg
cmp
lahf
insl
jne
fbld
iret
fsubrs
stos
push
out
pop
idiv
pop
adc
rep
fidivrl
lock
or
jmp
mov
lds
pop
fnsave
add
cmp
sbb
scas
xor
xchg
enter
mov
cmp
out
sbb
rcl
daa
hlt
sbb
popa
scas
out
imul
addl
gs
out
inc
xchg
xchg
jge
js
addr16
jo
jge
mov
and
pop
push
ss
mov
es
out
and
repz
cmovne
repz
rcll
sbb
je
rclw
push
sbb
xor
pop
jnp
loopne
insb
fisubs
int3
xor
ljmp
jno
or
and
cmp
fcompl
dec
pop
mov
xor
jge
test
push
xchg
data16
inc
jns
fstpl
add
mov
add
or
and
push
ja
or
fs
sahf
fistl
popf
push
mov
imul
adc
lcall
xchg
mov
out
loope
loope
pop
stc
mov
mov
jmp
outsb
adc
mov
imul
push
xor
cmp
mov
test
pop
jbe
mov
jle
cwtl
loop
test
aad
les
jns
jbe
outsb
xor
jnp
stos
lea
mov
jle
adc
popa
jae
lods
leave
sub
push
ret
mov
and
jmp
dec
inc
pushf
add
and
arpl
or
mov
popf
or
sbb
mov
xchg
xchg
outsl
rcr
sub
ss
imul
push
in
push
mov
jno
mov
or
jecxz
leave
xchg
cwtl
ret
or
shrb
pushf
mov
mov
pop
push
sbb
push
call
mov
inc
mov
xchg
pop
std
xchg
push
xlat
movsb
or
out
add
xlat
dec
cmp
in
inc
jb
pop
pop
push
subb
imul
ss
insb
mov
pop
push
test
jmp
fbld
repnz
and
mov
inc
pop
movsb
xor
sub
mov
jbe
mov
xor
popf
int3
pop
adc
imul
xchg
or
sbb
pop
cvttps2pi
lret
pop
mov
jo
mov
xor
jno
dec
rorb
jnp
arpl
call
shlb
aas
or
mov
rorb
aam
arpl
std
test
mov
inc
pop
imul
fdivrl
test
inc
pop
push
jbe
loop
loopne
xor
loope
lods
fs
ret
nop
gs
push
xlat
movsl
cmpsl
or
shll
ss
push
cmp
lret
cmp
ds
idiv
cwtl
int
dec
outsb
mov
cs
lods
jno
daa
add
movsb
and
push
inc
lock
jp
mov
mov
aas
addr16
inc
mov
cli
or
mov
push
dec
cwtl
sub
lcall
mov
out
out
loopne
jge
test
mov
loop
and
ja
pop
pop
sbb
aaa
cmpsl
jl
push
mov
and
stc
gs
bound
ja
cmpsl
jo
mov
aad
sbb
popa
jmp
andl
push
jmp
adc
lahf
sub
adc
in
cmp
repnz
repz
out
stc
int3
pop
lret
adc
hlt
cmp
sbb
sbb
les
adc
std
sub
pop
mov
fldl2t
push
jle
push
rcl
mov
jmp
add
jae
cmp
sub
sarb
or
stos
out
add
xor
into
push
xchg
jo
add
jecxz
push
xchg
sbb
mov
outsb
add
jo
xchg
clc
xor
in
fnstenv
aaa
mov
out
cmp
jge
jle
mov
lcall
dec
ror
jno
adc
repz
into
and
negl
sub
dec
fstpt
in
icebp
adc
adc
out
lock
out
aad
cltd
daa
sub
mov
out
cmp
pop
and
dec
jnp
rcl
das
fisubs
shll
xchg
mov
push
jp
cmp
bound
cmc
test
dec
data16
inc
dec
adc
cmc
out
and
fsub
xchg
leave
add
add
mov
cli
es
enter
mov
xlat
mov
sbb
pop
aas
jle
mov
dec
cmpsb
add
push
jge
push
ljmp
lea
inc
cld
mov
hlt
cmc
sarb
adc
and
sti
pop
shrb
xchg
loope
pop
jae
divb
mov
cwtl
in
push
in
mull
outsl
push
cli
rcrb
push
fucomp
icebp
xchg
cmp
sbbl
adc
jmp
mov
clc
addr16
lods
cmp
negl
mov
fidivl
xlat
dec
xor
lret
and
scas
mov
jp
fwait
scas
xor
sbb
mov
xor
and
fwait
jmp
sub
sarb
pop
add
push
inc
mov
sub
clc
or
pusha
xlat
mov
inc
mov
daa
jb
jl
pop
inc
push
repnz
sub
jne
bound
xchg
inc
inc
jle
xchg
jae
inc
xchg
inc
mov
add
sub
mov
outsl
mov
mov
in
test
jmp
or
dec
cmp
jl
mov
inc
mov
aam
in
sub
nop
add
ljmp
call
inc
dec
jnp
xchg
push
ret
sbb
add
sub
cmp
xor
fisubs
or
outsl
fs
fwait
andl
mov
cld
xchg
aaa
daa
test
int3
xchg
adc
mov
fadds
cmp
cmp
and
push
or
xchg
inc
and
lock
lcall
cmp
and
cmp
cld
movq
js
jae
pushf
addr16
cmpsl
fdivr
and
sub
aad
and
aad
js
lock
xor
scas
gs
insb
dec
jae
jne
aas
in
mov
loopne
jp
call
sub
pop
loope
lcall
lcall
les
out
jae
mov
cmp
cltd
dec
adc
add
js
sub
sub
or
push
mov
xchg
mov
gs
mov
jb
xor
push
pushf
cmp
loope
ret
cmp
test
or
outsb
mov
stos
add
test
testl
pop
xor
fwait
jge
pop
xlat
out
mov
xchg
and
xor
fcom
out
mov
pop
shrl
lods
lds
inc
je
xchg
shll
xor
lcall
hlt
popa
or
addb
add
dec
cli
cmp
sub
xor
faddl
cmp
cli
or
inc
das
xlat
fisubrl
xchg
jns
cmp
int3
mov
sbb
inc
mov
inc
mov
jnp
or
loope
sbb
std
mov
jae
shlb
dec
or
push
repnz
cmc
js
mov
adc
sbb
out
cli
xchg
lret
sti
clc
xchg
add
dec
cmpsl
push
dec
sbb
inc
movsl
adc
ficompl
movsl
xchg
pop
inc
lea
mov
mov
mov
pusha
jns
lods
push
pop
cmp
imul
sbbl
das
lock
mov
cmpsl
and
sub
jmp
xchg
mov
into
aaa
push
je
and
scas
sbb
call
in
add
inc
ljmp
inc
jbe
out
pusha
sub
jne
push
inc
dec
adc
jmp
push
das
jl
dec
enter
lret
mov
sbbl
rcl
loopne
add
out
repz
sbb
pop
mov
pushf
mov
lock
test
jle
icebp
jo
mov
xor
mov
jbe
xchg
sbb
roll
std
imul
inc
adc
fs
sbb
push
dec
rcll
xchg
daa
clc
repz
cs
dec
and
into
cmp
test
seto
inc
lods
aam
mov
flds
repnz
push
clc
fistpl
xor
mov
loope
sbb
out
cmp
test
mov
sub
mov
ljmp
cmp
popf
inc
push
fistl
rcrl
test
push
xor
mov
outsl
cmp
shrl
dec
sub
adc
jo
jbe
cmpsl
mov
lods
ficoml
dec
mov
lahf
stos
scas
adc
sti
inc
cmp
fcompl
shlb
fwait
xor
and
mov
lahf
mov
inc
lcall
insb
mov
insb
fstpl
inc
shll
mov
movsb
xor
inc
out
divb
jne
test
push
push
lahf
inc
sub
pop
cli
stos
mov
les
dec
xchg
xchg
fwait
loopne
into
and
inc
cld
mov
push
in
cmp
mov
orb
dec
mov
pop
mov
add
stos
iret
jl
mov
inc
pop
xchg
mov
xchg
inc
loopne
flds
dec
dec
mov
lods
adcb
hlt
cmp
cs
fidivrl
mov
or
lods
pop
mov
cmp
add
cld
cmp
fdivrs
mov
scas
pop
sbb
xchg
test
arpl
push
mov
xlat
pop
cs
xor
adc
enter
dec
mov
pop
fwait
pop
inc
sub
inc
add
and
xchg
inc
adc
repnz
fisttps
std
ror
out
cmp
fdivrl
imul
xchg
or
pop
xchg
cwtl
jno
sub
ficomps
pushf
sahf
call
sbb
cltd
pop
rcll
insb
xchg
add
and
pop
ljmp
pop
mov
lea
pop
inc
stos
mov
push
test
in
imul
xor
or
mov
sbb
cmc
sbb
mov
inc
sub
pop
or
cltd
sbb
mov
mov
in
addl
hlt
dec
cld
cmp
test
push
push
shrb
aad
divl
xor
into
push
xchg
cmp
xor
and
add
pusha
pop
pusha
add
cmc
mull
aad
inc
pop
mov
fcompl
inc
and
xor
loope
push
xchg
leave
mov
xor
les
loopne
stc
pop
mov
and
aam
sti
cmpsb
in
jno
cs
mov
and
adc
sub
or
imul
jge
jp
sub
call
dec
cmpsl
jle
sbb
shlb
movsl
sub
xchg
jmp
push
mov
inc
xchg
and
in
jo
movsb
out
call
push
arpl
stos
outsb
cli
mov
dec
fsubrl
sbb
dec
lahf
mov
adc
inc
add
lret
push
arpl
mov
lret
xor
push
push
cmp
mov
lods
inc
imul
subl
in
lea
nop
dec
movsl
fidivs
adcl
outsl
rcr
dec
adc
mov
test
inc
mov
filds
mov
ja
and
mov
pop
test
add
mov
and
in
es
inc
mov
xlat
int
pshufw
fistpll
stc
cmp
pop
gs
popf
mov
xchg
into
fcmovnb
ja
lret
shrb
jp
push
add
js
sub
xor
ret
mov
sbb
lods
lods
jns
jmp
aas
add
mov
les
xor
xchg
test
enter
sbb
sbb
or
push
or
xor
jns
mov
mov
in
imul
int
insl
addr16
mov
add
xor
dec
jl
lds
bound
loop
pop
lahf
jne
enter
inc
cmpsb
mov
cmp
sti
leave
push
movsb
add
mov
inc
shrb
movsb
subl
inc
loope
mov
mov
pop
sbb
sbb
dec
xchg
outsl
movl
icebp
addr16
inc
mov
int
insl
dec
cltd
add
dec
leave
sub
jnp
mov
repnz
or
das
or
xchg
arpl
adc
loopne
lea
mov
ds
push
cwtl
xchg
adc
sub
mov
pop
insl
stc
out
jae
sbb
add
out
jbe
or
sub
add
js
pop
push
inc
push
push
das
adc
daa
mov
int3
dec
push
xlat
cmp
xchg
loop
movsl
andb
cmc
adc
mov
ljmp
out
pop
in
mov
jo
add
xchg
popf
enter
addl
dec
mov
mov
inc
mov
rolb
sti
nop
loope
incl
xor
stc
xlat
popf
js
push
jge
arpl
lahf
add
sahf
jne
rorl
adc
cmp
cmpsb
and
inc
dec
mov
loope
push
hlt
jbe
jo
popf
mov
sub
jb
mov
jmp
cmpsl
push
jp
je
outsb
das
out
mov
or
stc
add
jns
sub
inc
xchg
mov
pop
dec
pop
mov
inc
hlt
popf
mov
xlat
push
out
ds
adc
inc
incl
in
les
mov
mov
lret
push
push
in
sahf
sbb
fs
inc
and
rol
jge
out
jno
xor
popa
daa
cmc
push
or
out
cmp
ds
xor
mov
imul
push
out
dec
stos
leave
mov
sub
lods
fnstsw
push
inc
call
cld
hlt
xor
out
mov
sahf
stos
xchg
xor
adc
mov
xchg
popf
shll
and
jbe
sar
pop
jne
shlb
push
jnp
xchg
fwait
fs
mov
add
adc
cmpb
fadds
fs
mull
jle
movsl
mov
mov
pop
imul
je
daa
cwtl
jl
inc
sbb
test
add
arpl
in
pop
cmc
loopne
pop
pusha
adc
stos
jb
sbb
mov
popa
call
push
and
jbe
push
xor
pop
jl
mov
sub
dec
inc
pop
add
lock
in
jmp
inc
ficoms
cmp
fistpl
fprem1
jg
fsubs
dec
lret
dec
pop
add
iret
push
daa
bound
inc
fisttpl
loope
lods
and
mov
and
cmp
pop
sub
ds
jle
add
das
sbb
mov
nop
jnp
test
push
dec
cmp
or
addr16
fisttpll
xchg
pop
aaa
sbb
mov
jbe
loop
cmp
push
imull
push
enter
sahf
mov
int3
sbb
imul
roll
es
ret
pushf
cwtl
xor
sbb
mov
mov
mov
lds
les
stos
imul
mov
mov
in
xchg
xorb
imul
stc
sti
dec
ss
loope
lds
fucomp
lods
ss
inc
mov
sbbl
sub
mov
popf
and
push
mov
in
lea
inc
repz
mov
jle
and
in
or
shlb
add
call
in
nop
cmpb
insl
add
mov
dec
aaa
jnp
xor
aas
push
in
cltd
add
fs
pop
fsts
or
mov
adc
sbb
lea
stos
push
lods
dec
xchg
stos
sbbl
xchg
cmp
cmp
jecxz
lret
cmc
fld
xchg
mov
sbb
push
mov
pop
ret
xchg
mov
inc
imul
jp
cmc
xor
testb
xchg
cld
jge
ja
xchg
mov
adc
jo
xchg
jnp
sar
inc
gs
enter
jl
je
add
test
and
add
dec
imul
xor
mov
sarb
xor
xchg
int3
push
ss
adc
ja
xchg
xchg
push
bound
sbb
iret
pop
loop
mov
mov
lea
inc
movsb
test
jmp
fbld
xor
insl
and
sub
pop
fnsave
mov
cli
inc
cmp
popf
in
mov
jnp
mov
test
ret
jecxz
data16
lock
imul
ret
lcall
cmpsl
jb
call
xlat
loop
bound
lcall
mov
adc
lock
mov
xor
je
in
xchg
clc
dec
fistl
sub
into
pushl
or
sub
xchg
adc
xor
cmp
inc
mov
push
inc
xchg
shll
in
mov
cmc
xlat
mov
and
mov
imul
jmp
dec
scas
pop
lock
xlat
mov
pop
aas
push
test
jmp
test
out
mov
lcall
mov
and
add
adc
pushl
push
jp
xchg
push
psrlw
add
mov
ljmp
inc
fists
icebp
adc
xor
in
movsl
mov
cwtl
xchg
dec
cmp
xor
cmpsl
mov
push
shlb
jne
sub
negb
sbbl
cmp
in
cmp
cmpsl
cmpsb
sbb
pop
cli
ja
add
jecxz
rcrb
outsl
push
push
mov
or
adc
dec
ret
add
inc
xor
adc
xor
movsl
xchg
cmpsl
sub
xlat
mov
xor
icebp
adc
xor
sbb
mov
xchg
adc
jge
xchg
inc
sahf
jmp
cmp
pusha
out
imul
loopne
cmp
lret
push
cli
mov
or
mov
montmul
int
int
loopne
push
ds
mov
daa
jmp
neg
mov
ret
test
scas
roll
adc
push
adc
outsb
add
mov
jo
movsl
mov
mov
sti
mov
mov
js
rcr
xor
lcall
fwait
mov
out
xchg
pushf
xor
and
mov
pop
movsb
sbb
pushf
scas
js
mov
and
popa
push
push
int3
sbb
push
shll
js
out
and
cmpsl
mov
mov
add
adc
mov
jp
mov
int3
fldcw
fisttpll
in
mov
push
cmp
and
hlt
ds
mov
subb
push
xlat
push
in
dec
inc
mov
lds
add
cmp
or
add
adc
jg
out
cmp
mov
pop
mov
mov
xchg
push
iret
ja
add
rcl
mov
fucom
pop
int
push
adc
inc
xchg
fisubs
aas
and
xacquire
pop
jbe
stc
aas
and
int
push
jae
jg
xor
ja
mull
dec
shlb
add
shr
mov
push
sbbl
shlb
and
nop
lret
inc
pop
mov
pop
sub
mov
in
cwtl
in
leave
xchg
out
cmp
fs
cs
fldl
ret
xchg
pop
mov
sub
add
inc
adc
fucomp
mov
aad
xor
fs
and
push
xor
mulb
negl
xor
push
fstpt
adc
cmp
sarb
push
inc
cltd
aaa
out
mov
push
xor
sbb
movsb
xor
leave
push
mov
pop
jmp
mov
xchg
rol
std
mov
pop
dec
cmp
jecxz
mov
lcall
shufps
push
shll
loop
addb
mov
subb
and
ret
mov
lock
stos
inc
ss
es
insb
xchg
nop
dec
mov
mov
push
lods
inc
popa
lcall
ficomps
xor
xchg
testb
int
fldcw
dec
fcompl
loop
cmp
inc
or
popa
jns
in
xchg
xchg
jns
imul
dec
hlt
in
ret
int3
lret
imul
stos
aas
repz
jae
shld
imul
sti
inc
jmp
das
cltd
mov
sub
mov
test
ljmp
push
out
adc
movsl
sbb
mov
insb
mov
mov
xchg
das
inc
xchg
lahf
subl
mov
xor
popf
push
pop
inc
daa
test
jbe
mov
add
sbb
enter
loop
out
call
hlt
aam
sbb
pop
scas
xor
sub
jp
data16
jge
lock
sbb
shlb
and
and
xor
xchg
aad
aas
pop
shll
mov
ljmp
push
cld
jmp
pusha
push
mov
adc
mov
push
aas
aam
repnz
push
and
pusha
cmp
fs
cmpsb
in
mov
test
call
inc
sub
rcrb
xchg
ljmp
inc
in
and
and
xor
push
faddl
notb
push
in
in
iret
push
dec
int
push
mov
adc
insb
sbb
shll
sahf
lea
xlat
or
lcall
cwtl
or
jne
aaa
ss
add
pusha
jp
push
push
push
rcl
scas
xchg
or
jns
or
int3
xchg
xor
or
imul
mov
push
sbbb
lock
sub
xchg
inc
dec
loop
mov
filds
fadds
test
jmp
popa
jmp
push
frstor
stc
psubw
hlt
pop
and
adc
adc
out
ljmp
lock
or
sahf
adc
jne
cltd
lcall
outsl
push
loop
hlt
dec
sub
cs
adc
movsb
lea
lret
add
inc
lret
pop
xchg
call
out
or
lret
adc
shl
add
lahf
imul
outsb
pop
mov
cmp
test
popf
push
popa
push
mov
push
inc
out
xchg
sbb
call
bound
int
fisttpl
arpl
inc
sub
or
cmp
aam
mov
in
notl
insb
push
sbb
aam
xor
mov
add
or
jmp
push
outsb
call
mov
jns
int3
rcll
out
jno
adc
cmp
stos
lahf
iret
jge
mov
fdivp
or
repz
sub
fsts
ret
push
jns
iret
push
sub
int
jnp
subb
pop
ret
mov
push
push
je
xchg
rorl
cmpsl
xchg
jp
sbb
data16
sub
mov
push
adc
daa
pop
jp
jmp
inc
xchg
or
mov
pop
faddl
mov
insb
dec
fldl
imul
out
stos
mov
dec
xchg
push
sahf
in
dec
jno
add
sub
loope
fmul
fs
data16
mov
pop
or
inc
mov
xchg
dec
jge
js
ret
push
pusha
mov
sar
jne
mov
jmp
mov
data16
adc
sub
enter
lock
cmp
mov
test
test
mov
imul
stos
jno
enter
xor
test
cld
sar
or
and
leave
mov
jecxz
jl
add
ret
mov
pop
cmpsb
mov
sbb
je
enter
push
add
pushf
mov
icebp
cmp
scas
sarl
dec
and
daa
inc
lahf
sbb
sbb
cwtl
inc
rcl
pushaw
es
rorb
xor
adc
sbb
mov
mov
sti
call
dec
cwtl
in
sarb
rorb
enter
sbb
push
movsb
int3
jmp
test
cmp
imul
mov
fcoml
ss
out
fimull
fwait
mov
mov
sub
or
insb
add
fldcw
jge
pop
mov
lea
in
dec
into
cli
int
inc
iret
xchg
xor
cmp
jb
adc
movsl
jnp
xchg
cmpsl
mov
and
or
sbb
cmp
mov
add
into
cmp
mov
sub
fcmovnu
ds
push
inc
fwait
inc
mov
loop
jecxz
lcall
xlat
mov
push
test
push
mov
out
lret
pusha
xor
jb
les
cwtl
push
cmp
or
xchg
mov
adc
test
pop
fstpt
repnz
stos
insb
ds
sbb
div
sbb
lods
cmc
xchg
lret
lahf
stc
sbb
push
icebp
cmp
mov
pop
jo
jg
jno
div
aam
inc
mov
fdivl
mov
mov
push
jge
scas
addb
cmp
and
jl
int
and
mov
jns
push
push
sbb
sbb
std
push
pop
fst
mov
stc
filds
cld
mov
or
add
addl
pop
scas
int3
cmp
pop
inc
lock
xchg
lahf
nop
dec
push
dec
xor
xchg
stos
stos
mov
add
mov
pop
stc
fidivl
rorl
pop
pop
pop
aad
dec
aam
xor
test
nop
push
dec
mov
jp
ficompl
xor
aaa
dec
in
add
pop
cmp
xchg
xor
pop
push
xchg
out
or
mov
pop
or
sbb
sbb
dec
mov
jl
mov
jb
and
fs
rcrl
scas
dec
in
dec
dec
xchg
imul
xchg
jmp
or
cmp
jb
fwait
fs
push
call
push
cmp
cli
in
or
pop
xorb
popa
enter
stos
xchg
pop
es
cs
adc
jmp
or
push
mov
leave
mov
inc
inc
push
pop
or
daa
mov
rcrl
push
lret
lea
loope
lret
pop
mov
cmp
jbe
add
enter
push
nop
mov
fcoms
fsubl
mov
xchg
rolb
sbb
xlat
data16
ret
mov
adc
and
mov
jae
mov
repnz
ljmp
push
jno
fadds
sbb
xchg
js
mov
fldenv
and
push
mov
mov
stos
imul
imul
shll
lea
scas
and
cmp
mov
mov
in
imul
lret
fidivs
rcrb
xchg
mov
xchg
lods
inc
pop
and
mov
bswap
cmp
scas
push
dec
pop
out
cwtl
negl
lret
nop
xor
inc
push
pop
outsb
enter
arpl
jne
mov
test
rorl
lcall
test
lods
test
js
sbb
mov
mov
sub
int
enter
mov
push
cmpsl
shl
xor
mov
mov
enter
aam
push
inc
ljmp
add
ja
shlb
inc
lods
adc
sbb
inc
mov
iret
dec
dec
jnp
add
leave
rcrl
and
xchg
enter
lds
jg
push
mov
cmc
into
xchg
stos
mov
out
jnp
mov
and
pop
loop
push
xchg
test
push
aad
dec
inc
push
cmc
test
and
xor
std
rolb
cs
sbb
dec
jb
lcall
icebp
leave
push
xchg
xor
mov
cmp
call
outsb
jae
mov
cmp
mov
jbe
sub
push
pop
push
inc
mov
jae
push
fwait
jecxz
pop
cld
pop
les
lock
mov
leave
adc
push
orl
mov
xchg
fsubrl
gs
adc
enter
push
mov
pushf
inc
call
mov
xlat
mov
pop
pop
cmp
imul
pushf
inc
movsl
std
daa
outsl
dec
xacquire
dec
out
xchg
es
dec
sbb
inc
std
ljmp
fwait
sbb
jns
pop
std
push
lret
imul
xchg
mov
pop
dec
cld
out
jecxz
mov
addb
into
rolb
add
ficompl
add
test
xor
mov
rclb
test
repnz
mov
add
or
pop
fs
add
or
pop
inc
xchg
push
mov
movsl
mov
pop
mov
pop
shlb
pop
sbb
test
adc
loop
jae
std
test
cmc
fmul
cmp
push
mov
mov
arpl
mov
xor
outsb
sbb
shrl
cmp
and
leave
fstps
loope
or
jo
add
push
nop
xchg
mov
sahf
mov
pop
push
push
push
mov
mov
mov
test
leave
mov
imul
lods
xchg
out
pusha
ret
stc
in
and
xchg
testl
adc
or
lret
mov
jbe
movsl
dec
ss
out
xor
in
aam
sbb
stc
and
outsb
std
jbe
jecxz
xchg
push
test
leave
mov
mov
shrb
int
add
or
mov
popa
mov
mull
add
repz
sub
inc
lahf
pop
cmp
cs
and
cld
sub
and
push
aam
imul
leave
xchg
xchg
repz
push
lea
outsb
mov
aaa
mov
jmp
lcall
ja
dec
jge
jb
in
insl
out
mov
int
ja
fsubr
pop
push
cmc
push
push
movsb
out
dec
lds
pop
shrb
dec
pand
jnp
insb
je
mov
ret
jle
lcall
or
loopne
or
call
cmpsl
je
fstl
and
ret
cmp
scas
push
mov
mov
lods
push
mov
pop
sbb
dec
mov
push
arpl
shlb
mov
xor
sub
adc
adc
popf
jns
je
and
inc
xor
jae
inc
xchg
mov
hlt
in
es
ret
pop
int3
repz
in
test
out
mov
mov
daa
mov
lahf
push
addb
mov
inc
insb
inc
lcall
shl
dec
jno
or
ja
mov
movsl
ljmp
mov
mov
mulb
mov
stc
or
xor
sub
push
dec
push
scas
inc
in
cmp
int3
js
pop
ja
jg
mov
mov
push
mov
mov
shrb
lods
fistpl
add
rcr
repz
xchg
xchg
inc
adc
int
frstor
xchg
scas
rclb
adc
les
pop
cmpb
and
jge
mov
shlb
cltd
add
push
jae
int
jmp
push
xchg
cmp
add
hlt
mov
push
xor
rorl
call
dec
rcpps
cmpsb
sub
and
js
xchg
push
push
les
stos
cmp
xor
sbb
cs
mov
sbb
sbb
jle
or
insb
or
jp
xchg
bound
xlat
xor
icebp
pop
in
and
xchg
ret
jnp
pop
xchg
fmull
test
mov
jmp
mov
shrb
add
movsl
inc
movsb
mov
add
cwtl
mov
jae
iret
add
xchg
subb
cmp
xchg
test
sarb
cmpsl
hlt
mov
loopne
cmp
stos
fistps
jmp
cmp
aas
and
loop
cli
add
addl
incl
sub
js
shll
mov
and
mov
mov
adc
jnp
incb
ret
fucomip
sbb
movsl
inc
pop
xchg
add
ljmp
pop
lods
bound
sub
jecxz
xor
ja
aam
cmc
int
das
cwtl
push
popf
pop
jnp
out
pop
scas
imul
scas
mov
out
push
stc
inc
xor
test
dec
enter
insb
je
mov
mov
mov
jbe
push
xchg
lret
out
cmpsb
xchg
pusha
iret
cmpsb
xchg
insb
mov
and
inc
imul
fs
int3
and
mov
incb
xchg
mov
mov
and
imul
hlt
imul
lea
push
jmp
fldln2
pop
xor
and
dec
addr16
loope
fbld
js
or
sbb
cmp
add
popf
fs
xabort
mov
pop
adcl
sbb
mov
adc
or
and
enter
in
aaa
jae
ja
mov
pop
movups
add
mov
xchg
pop
in
add
lock
ja
inc
aaa
cmpsl
xchg
or
dec
repnz
adc
mov
xor
inc
jnp
sub
fcmove
push
fisubs
cmp
push
sbbb
xchg
mov
mov
pop
lret
or
xor
sbb
repnz
inc
add
xchg
and
pusha
and
sbb
imul
add
cmp
fwait
add
test
sarb
or
lea
mov
xor
mov
jle
and
cmp
dec
enter
inc
int
push
loop
xor
repnz
push
clc
fcomp
popa
xor
xchg
mov
mov
mov
inc
jl
mov
cmp
rolb
lods
mov
pop
and
inc
jmp
loopne
push
mov
pop
sbb
mov
jo
pop
push
enter
and
inc
push
inc
mov
sahf
jl
and
imul
out
std
sahf
dec
addb
outsb
push
testl
mov
sbb
addb
and
add
mov
enter
lods
rolb
adc
jne
dec
and
aaa
mov
push
inc
movsl
incl
pop
scas
jb
xchg
add
das
gs
cmpsb
mov
or
shrl
repnz
mov
cli
ficoms
dec
cmp
mov
jbe
jmp
xlat
or
dec
sub
xor
xchg
jecxz
out
inc
inc
dec
jl
mov
dec
dec
mov
std
ret
int
faddp
jmp
lea
into
push
xchg
pusha
and
adc
or
xchg
add
cli
pop
sub
sbb
add
adc
or
sbb
les
xchg
mov
inc
call
sbb
in
jnp
fnstcw
xor
mov
sub
inc
icebp
dec
movsb
mov
lret
notb
push
shlb
inc
dec
lods
cmp
adc
in
pusha
mov
les
lds
mov
xchg
push
inc
insb
and
dec
lea
add
subb
push
jp
add
test
mov
mov
jno
sbb
add
add
ret
jg
xchg
jmp
in
xchg
mov
and
adc
in
xor
mov
dec
data16
das
ss
pushf
push
pop
jge
sub
sti
sub
jne
lds
rolb
mov
enter
aas
hlt
loope
lret
push
inc
sbb
movb
stos
movsb
pop
cltd
orb
push
lahf
cwtl
jg
out
test
ss
jge
jo
ss
jae
or
cmp
pusha
cmp
std
mov
mov
dec
mov
scas
sbb
sbb
in
lock
xchg
inc
popa
mov
xchg
jg
xor
xchg
movsb
ds
pop
pop
pop
dec
gs
mov
pop
ficomps
das
insl
jp
sbb
bound
and
cwtl
fidivrl
stos
mov
mov
push
insl
dec
test
rorl
test
mov
or
jbe
aam
push
addl
shl
jo
lds
cmpsl
sub
jg
cmp
sub
idivl
push
push
lcall
aad
and
mov
sti
and
std
cmc
jnp
jge
jno
or
lahf
or
icebp
stos
jo
xor
sarb
dec
fst
mov
sbb
sbb
loopne
jo
mov
into
xorl
xorl
and
lahf
mov
ja,pt
pop
lods
ror
data16
mov
sbb
and
mov
hlt
adc
and
cmp
sbb
pop
cmp
int3
gs
and
imul
cmp
pushf
dec
inc
in
in
mov
out
push
push
test
lret
adc
mov
test
loopne
xchg
xor
or
shlb
sbb
mov
push
xor
addr16
inc
stc
ss
or
into
mov
cld
cmp
ljmp
xor
pop
mov
push
pop
mov
jae
shll
mov
push
idiv
jle
jb
ffree
daa
pop
inc
dec
stos
movsb
aam
iret
stos
mov
stos
cmp
ljmp
jmp
repz
imull
push
mov
mov
dec
jmp
insl
adc
pop
adc
jae
jp
xchg
das
mov
movsb
rcrb
std
mov
les
and
pop
stos
inc
xor
loop
in
sbb
mov
cli
jae
jle
xchg
sub
dec
push
mov
subps
or
stos
pop
mov
data16
pop
ret
sti
jnp
daa
xor
jle
lahf
subb
loopne
test
xor
imul
and
sbbb
ret
es
inc
adc
add
and
xchg
cmp
dec
sub
dec
movsb
mov
cs
xchg
insb
push
pop
xor
sahf
add
sbb
pop
clc
mov
pop
lcall
sbb
pop
pushf
xchg
stos
cmpsl
push
test
or
cmp
rolb
adc
add
inc
or
jo
in
or
daa
movsl
fimull
ret
or
push
lods
cmp
fcomps
pop
mov
clc
imul
xorb
cmpsl
std
adc
bound
js
int3
shlb
test
insl
sbb
xor
inc
stos
jge
icebp
or
shll
repz
mov
adc
push
sbb
pop
test
or
leave
ficoms
stos
loopne
inc
dec
arpl
outsl
popa
adc
mov
push
pop
push
cmp
cs
jge
push
insb
mov
bound
inc
mov
cmp
inc
orb
push
and
clc
and
jmp
mov
push
ret
inc
fidivl
ds
dec
xchg
inc
cmp
dec
arpl
fildl
push
push
shll
xchg
bound
mov
test
out
add
mov
sbb
ljmp
cmp
xor
adc
xchg
mov
xchg
or
add
xrelease
add
xchg
je
hlt
test
mov
xor
sahf
inc
mov
pop
ret
sub
loope
mov
add
sub
lds
jne
pusha
out
pop
test
pop
enter
or
cmpsl
gs
popa
enter
ficompl
cmp
adc
lods
outsl
mull
lea
adc
push
ret
mov
add
sub
int3
es
insl
cmpsb
push
out
mov
subl
lock
xorb
mov
push
ret
lods
inc
cmp
imul
add
ror
es
mov
xor
push
sti
lahf
arpl
sbbl
xchg
mov
in
sub
bound
mov
pop
mov
cld
fidivrs
in
out
int
mov
mov
lret
pop
jo
sar
mov
add
xor
out
fcoml
out
xlat
mov
aad
push
mov
and
inc
jbe
in
enter
popf
jle
in
rol
scas
mov
xchg
add
jle
adc
xchg
pop
cmp
pop
in
jle
jg
mov
adcb
mov
nop
stc
test
stc
cli
cmp
pop
mov
adc
add
pop
out
int3
mov
jg
cmpsl
dec
jmp
pop
es
mov
dec
and
lods
call
pop
dec
fdivs
sbb
cmp
sub
icebp
dec
adc
ret
add
in
and
movsb
cmpsb
and
mov
push
out
imul
pop
aam
adc
jo
or
test
mov
lahf
adc
add
loope
push
aas
cmc
cmpsl
in
pop
dec
loop
xchg
inc
popf
pop
outsl
int3
inc
push
cld
iret
int3
imul
in
sub
ja
testl
inc
jno
adc
cmpsl
mov
mov
dec
add
cmp
lahf
and
shlb
outsl
jecxz
or
jno
ljmp
xlat
mov
jmp
mov
adc
push
cmp
stc
movsb
in
fsubrl
xor
out
and
push
pop
adc
lret
sbb
icebp
aas
mov
mov
xor
jle
mov
push
cmpsl
xor
testl
jle
dec
popa
orb
lock
cmpsb
push
mov
in
dec
enter
outsl
mov
adc
ss
sub
lods
dec
insl
ja
jnp
into
mov
pop
cs
shlb
inc
rorb
mov
mov
in
pop
xor
jnp
jg
lods
sub
push
add
dec
cmp
add
fs
sbb
or
fwait
inc
sub
stc
popa
inc
or
icebp
aam
fwait
fwait
push
int
iret
iret
sub
xchg
into
jnp
ret
inc
icebp
jge
cmpsb
shrl
aaa
clc
inc
into
xor
lods
roll
mov
pop
xor
in
mov
push
pop
add
cmp
or
popa
daa
movsl
outsb
sbbl
repz
push
dec
sub
cmp
sub
mov
fsub
stc
sub
loopne
xchg
xor
push
outsl
cli
scas
xchg
enter
ds
sarl
scas
cmp
out
jb
push
sbb
push
jno
mov
data16
jp
movsl
inc
rolb
hlt
andl
cmp
mov
mov
cmp
loopne
fidivrs
xchg
lea
push
pusha
ja
xor
jno
andl
and
mov
add
mov
mov
adc
cmpsb
and
shll
shrl
and
shl
sbb
jmp
push
push
insb
mov
jbe
lods
mov
mov
pop
and
in
mov
inc
adc
or
fisubrs
cli
inc
xchg
and
insb
xor
sub
ret
aad
xlat
cmp
out
mov
loopne
outsb
or
pop
push
sub
rcr
xor
or
sti
sahf
xchg
add
clc
out
cld
jmp
and
dec
adc
jae
pop
mov
in
push
sbb
out
xchg
mov
ljmp
cmpsl
das
pushf
pop
pop
dec
seto
pop
fnstenv
aam
or
fsubrl
sbb
cltd
dec
pop
jl
adcl
loopne
inc
pop
int3
fstpl
mov
dec
call
sahf
insb
pop
popf
xchg
mov
addr16
jl
in
fxch
sub
out
adc
or
repnz
sbb
out
mov
dec
fadds
adc
sub
xor
cld
xchg
xchg
cs
iret
jge
adc
cmp
xchg
iret
push
sub
movsb
rclb
fmull
mov
cli
or
out
mov
idivl
xchg
jnp
jne
dec
movsb
xlat
lret
push
addr16
dec
cmp
data16
imul
or
mov
xchg
push
loop
add
jmp
fisubrs
xchg
fnstsw
mov
ficoml
push
pop
pop
pushf
insl
mov
push
mov
adcl
test
pop
push
sub
testl
lods
xchg
out
out
dec
cs
pusha
push
stos
pushf
inc
mov
xchg
jae
pop
jmp
sbb
mov
mov
lods
xor
push
outsl
mov
lcall
pusha
add
fcmovu
and
fdivrs
icebp
loope
adc
jle
mov
pop
push
adcb
pop
cmp
out
fwait
psrlw
xchg
xor
xor
adc
aad
leave
mov
push
dec
mov
and
jmp
clc
imul
fstpt
repnz
jl
xor
or
je
jb
add
adc
push
cli
repz
psubsw
jno
mov
mov
push
fsub
js
inc
mov
data16
loopne
mull
iret
fnsave
jb
jne
sub
imul
sub
ds
outsb
mov
jmp
xor
xchg
xchg
data16
or
jae
xchg
sar
add
popf
rclb
int3
decb
mov
cmp
test
xchg
inc
insb
mov
push
jo
fimuls
xchg
lods
pop
in
int3
rorb
aam
invd
push
inc
push
shl
out
or
je
cmpl
lret
add
shlb
jne
cwtl
jecxz
clc
xchg
jge
pop
int3
adc
mov
mov
xor
push
xor
out
ror
jle
mov
cmp
sub
clc
mov
mov
push
ja
cmp
push
mov
jmp
enter
adc
xor
divb
mov
mov
leave
in
adc
ret
cmp
movzbl
sahf
hlt
ljmp
inc
jp
cmp
sbb
jp
lock
sarb
push
int3
repz
jae
js
jecxz
or
inc
lea
into
push
sub
push
jle
sbb
je
adc
jle
push
ffreep
add
test
sbb
push
movsl
xchg
and
push
es
cli
and
add
push
mov
pop
mov
iret
xorb
cli
ret
aas
ror
mov
jns
sbb
jecxz
not
cmp
and
jns
pop
nop
mov
lahf
mov
filds
mov
in
inc
call
adc
and
sbbb
fmull
dec
mov
dec
cmpsb
clc
cld
cmpsl
cli
jne
jno
lods
scas
in
push
mov
sub
test
lret
filds
pop
push
sbb
jmp
ret
mov
jbe
imul
repz
inc
xchg
inc
mov
mov
or
mov
jno
push
test
inc
cmp
in
mov
aaa
or
imull
adc
dec
jnp
push
pop
sbb
xor
pushf
and
and
xchg
xchg
pop
mov
mov
repz
jns
pop
xor
cmp
xor
shrb
push
adc
mov
sub
sbb
aam
xchg
mov
clc
pop
mov
test
test
mov
fldt
lods
icebp
mov
push
push
imul
fadds
and
or
fstpt
cmp
loope
mov
cmp
jecxz
xchg
mov
lahf
loope
daa
cmp
jbe
rol
je
andb
ret
dec
gs
addr16
jecxz
lock
fcomi
out
inc
xor
sbb
jle
fdivrp
cmp
mov
adc
mov
pop
mov
mov
dec
xchg
xlat
into
rorl
sub
adc
out
xor
and
rclb
mov
aas
push
jmp
test
and
cltd
insl
dec
popa
cmp
bound
inc
xchg
pop
nop
outsl
add
fildll
jbe
push
jb
sbb
lahf
loope
aas
pop
subb
imul
stc
or
xor
fidivrs
addr16
inc
xor
sbb
lds
roll
and
insb
sub
fists
jb
mov
mov
adc
adcb
xchg
sbb
test
not
sti
adc
push
cltd
mov
xchg
mov
pop
lods
mov
stos
sbb
push
mov
lods
pushf
aam
into
stc
stos
lahf
pop
int
imul
repnz
test
aas
dec
push
sub
mov
mov
clc
jnp
clc
lea
scas
cli
jne
shr
repz
pop
aad
gs
cld
es
push
push
xchg
repz
rclb
push
insl
lret
xor
mov
inc
popa
adc
or
inc
jmp
push
ja
mov
cs
addb
sub
inc
mov
arpl
pushf
scas
jno
jp
bndstx
mov
xchg
aad
cmp
shrl
data16
cli
inc
cmp
or
push
stc
cmc
call
cmc
or
cmpl
xchg
add
mov
test
push
cmp
inc
mov
add
imul
xor
and
add
mov
cmp
pop
cmp
and
stos
in
sti
mov
daa
adcb
xorb
das
int3
push
popf
push
sbb
jecxz
addr16
jmp
sahf
fnstenv
push
mov
mov
into
and
in
dec
sub
frstor
loope
inc
daa
in
and
lods
or
int3
jbe
mov
jmp
test
cmp
arpl
rorb
fstpt
push
add
pushf
xor
mov
ljmp
lret
push
jecxz
mov
lods
call
mov
ror
cmpsb
cmpl
bound
sbb
cmp
cwtl
sub
pushf
nop
jo
andl
cmp
pusha
enter
cld
mov
sahf
ljmp
imul
pop
jno
mov
hlt
dec
rcll
test
pushf
insl
aas
into
push
shl
mov
stc
jmp
and
pop
bound
test
dec
mov
dec
and
mov
cld
lret
or
pmulhuw
adcl
ret
aad
push
ret
shll
mov
mov
ret
loop
std
add
int3
iret
out
cmpsb
inc
pop
add
mov
cmpsl
adc
data16
pusha
out
lock
je
mov
and
xchg
pop
loop
mov
pusha
fmul
push
xchg
and
sbb
jnp
dec
sahf
rclb
ret
sub
sti
adc
inc
ss
mov
jge
add
fisubrl
jae
insl
ret
gs
sarb
cmp
sarb
and
cmp
lock
pop
int
out
mov
cltd
loop
lret
inc
mov
adc
mov
jge
mov
fldt
push
in
dec
enter
xlat
cmp
dec
test
or
push
push
lock
enter
sub
es
int
xchg
xor
addl
div
loope
out
dec
pop
mov
sbb
test
sahf
add
mov
mov
into
data16
mov
xchg
jno
cmp
xchg
pop
mov
sbb
loopne
lret
leave
and
test
fstpl
xor
xor
bnd
adc
jno
aam
sub
sti
mov
lahf
push
ret
and
testl
mul
xchg
cmp
shl
inc
jg
int
in
cmp
xor
ds
fsubrs
mov
loop
out
gs
and
fidivrl
mov
jb
mov
mov
jl
cwtl
test
nop
in
push
sbb
mov
clc
mov
pop
cmp
dec
fstps
mov
sbb
add
out
jle
cld
addr16
jle
add
cwtl
dec
mov
xor
and
clc
mov
aad
fisubrl
shlb
mov
xchg
mov
pop
lods
sub
setno
xchg
mov
inc
into
lahf
loope
push
add
shlb
jbe
imul
insl
mov
popf
inc
testb
mov
xor
lods
jo
xor
jg
insb
sbb
shll
leave
movsl
mov
or
aas
jmp
or
mov
lcall
test
xlat
cmp
inc
call
addb
sbb
cwtl
xchg
subps
push
push
loop
jge
cmpsl
lcall
jbe
pop
add
fsubs
lods
clc
lods
fsubl
pop
mov
cmp
addr16
and
loopne
xor
out
in
mov
sub
mov
enter
or
les
xchg
add
test
fsubrl
ret
dec
mov
jnp
xorl
and
out
js
fisubl
pop
enter
int
lock
shll
add
push
loope
js
jg
mull
cs
cld
xchg
pop
push
div
dec
sbb
mulb
sub
emms
sub
imul
shlb
xchg
cmp
xor
test
xor
xor
add
and
xor
inc
cli
pop
mov
mov
adc
cltd
std
sub
loopne
loopne
cld
es
mov
add
push
test
daa
mov
int3
inc
push
loope
mov
sbb
sbb
xchg
sbb
popf
leave
idivl
loopne
out
inc
sahf
into
jb
dec
push
cmp
mov
std
push
sub
pop
add
jp
cs
fdivl
sub
inc
hlt
dec
in
jmp
mov
mov
xchg
or
mov
push
sub
psrad
inc
dec
mov
adc
xchg
mov
loopne
call
cli
mov
fistl
shll
inc
jmp
add
sub
test
insb
dec
orb
cld
xor
xor
test
inc
mov
aaa
mov
cmp
xor
push
popf
jmp
std
movsb
xchg
clc
repnz
imul
cmpb
xchg
mov
fiadds
sbb
nop
clc
stos
xchg
mov
insb
and
mov
lret
xlat
add
out
sahf
ljmp
dec
shlb
stos
std
mov
mov
dec
mov
lahf
or
movsb
test
nop
mov
dec
gs
fistpl
into
cmc
mov
bnd
sub
mov
adc
filds
stos
fucom
cmp
jne
mov
pop
jge
mov
fists
lea
pop
adc
in
loop
push
xor
subb
cmpsb
or
cmp
jns
mov
xor
stos
mov
mov
mov
xchg
mov
popf
fbld
sbb
scas
cmc
sub
jl
scas
fisubl
xor
xor
ljmp
int3
mov
cmp
and
iret
cmpsl
ret
cltd
aas
negb
pusha
adc
std
xchg
cli
mov
mov
xor
pop
stos
sbb
jmp
add
xchg
or
mov
cmp
ss
test
add
addr16
es
jb
nop
cltd
cmpsl
les
leave
lock
out
sub
mov
add
xor
or
dec
adc
roll
adc
cmpsl
or
mov
jo
jge
jmp
insb
in
shrl
add
push
mov
data16
lods
push
cmpsl
sbb
mov
push
aaa
mov
inc
sbb
lahf
cmp
stc
mov
pop
imul
fcomps
dec
jne
insl
xchg
movhps
inc
sub
ljmp
mov
ret
in
jo
shrl
aas
insl
ds
jae
or
insb
cld
pop
cltd
ja
cld
or
inc
je
xchg
stc
sahf
xor
xchg
imull
jb
loope
or
jne
sub
push
dec
adc
outsl
bnd
push
xchg
and
cwtl
sbb
pop
hlt
mov
mov
push
dec
jne
jecxz
outsb
mov
movsl
mov
outsl
sub
pop
pop
in
pop
call
inc
xchg
jl
dec
mov
mov
mov
pop
jae
addl
loopne
cmpsb
adc
mov
call
xlat
fwait
xorb
mov
fldt
xchg
fstps
fnstcw
lret
xchg
rcrb
xor
das
sub
rdseed
aad
cmp
push
ret
mov
lods
jle
scas
in
fisttpl
inc
inc
xor
pop
jecxz
sahf
lcall
lods
sub
stos
inc
inc
jo
in
sub
mov
mov
mov
ffreep
dec
inc
dec
sub
cli
push
cltd
xor
inc
rsqrtps
sbb
inc
lock
fs
mov
push
cltd
sub
mov
rclb
jne
inc
popa
dec
inc
sarl
in
testb
repz
sbb
fwait
aaa
jb
popa
bound
and
aaa
jo
mov
sbb
ret
and
lret
push
sbb
mov
mov
sbb
push
fnstsw
and
lret
mov
push
push
jecxz
shrb
jge
repnz
xchg
int3
lds
loop
sldt
cs
cld
movsb
dec
cwtl
lret
or
inc
cmp
insb
mov
xchg
popf
insb
pop
addr16
xor
jne
int
idiv
setle
or
cmpsb
pop
jns
and
and
movsl
jl
xor
or
int3
mov
lahf
pushf
jbe
xchg
adc
xor
or
push
inc
pop
mov
inc
sarb
dec
jg
sub
pop
xchg
xchg
lock
sub
mov
cmc
mov
xor
das
std
jae
mov
repnz
xchg
adc
jl
dec
sbb
xchg
push
leave
or
adc
add
or
mov
adc
psubd
jle
push
mov
sub
mov
arpl
leave
out
mov
xchg
pop
in
insb
jne
fisubrs
leave
pop
mov
mov
mov
xchg
mov
dec
push
push
int3
punpckhwd
sbbl
cmp
daa
andb
inc
int
stos
cmp
outsb
push
dec
iret
adc
dec
adc
and
push
pop
xlat
xor
mov
push
unpcklps
cmpsl
insb
imul
les
call
cmp
pusha
dec
aaa
mov
jbe
or
dec
cmp
repnz
mov
pop
leave
sub
pop
aam
jmp
push
es
mov
mov
fld
push
mov
fs
ja
inc
in
lahf
sub
ret
gs
inc
andl
iret
out
scas
dec
fnstcw
xchg
mov
xlat
lea
ja
inc
in
sub
mov
pop
pushf
repz
mov
stos
cmp
ja
dec
cmpxchg
sbb
adc
lahf
mov
push
sarb
enter
dec
repz
lock
iret
sbb
outsb
hlt
add
ja
sub
jmp
lea
inc
mov
stos
mov
mov
inc
lret
mov
sub
mov
add
xchg
iret
pop
pop
mov
sub
jbe
dec
cld
cld
pusha
jle
push
pop
sbb
ljmp
and
xor
int
pop
inc
into
or
cmp
adc
xchg
das
sub
cmc
test
arpl
cmp
xchg
ds
in
dec
xor
clc
xchg
xor
or
inc
adc
cld
adcl
testb
iret
fisttpl
and
and
iret
les
sub
es
lds
ret
push
dec
and
adc
repz
xchg
sbb
outsb
xchg
daa
xlat
push
jns
hlt
adc
dec
cmpsb
mov
lahf
jb
dec
es
jl
mov
ss
cmpsl
sub
int3
not
inc
mov
xor
call
cmpsl
movb
mov
lcall
push
dec
mov
lahf
mov
arpl
jge
sahf
cs
cmp
mov
mov
mov
or
jnp
and
mov
or
mov
xchg
sub
fstps
push
inc
and
inc
rclb
rolb
je
mov
xlat
sub
lret
push
mov
jb
imul
push
sbb
or
mov
mov
pop
mov
scas
out
leave
fisubrs
xchg
or
mov
scas
pusha
sbb
xchg
fldt
js
adc
add
xor
push
mov
in
int3
push
dec
fistpll
mov
ret
pop
sbb
cmp
or
sbb
jle
imul
jl
js
in
sub
pop
sti
lahf
fcompl
jb
cmp
dec
iret
insb
add
jae
cmpsl
insb
jne
repnz
shl
sub
jle
push
shrl
cmpsl
imul
mov
sub
cmp
shl
push
inc
fs
repnz
ljmp
outsl
jnp
and
mov
ja
cmp
push
jmp
pushl
cmc
out
xchg
mov
sub
xchg
scas
out
push
test
mov
sbb
or
roll
clc
mov
rorb
pop
mov
scas
loopne
or
pop
lds
mov
mov
mov
mov
mov
mov
inc
push
or
sarb
iret
jg
sbb
cld
and
sti
push
push
lcall
lods
adc
xor
cmp
out
stos
jp
mov
or
xchg
push
insl
jge
in
sbb
or
xchg
aas
sub
ret
inc
std
mov
push
je
out
pop
cmp
jbe
jo
xchg
sub
pusha
fcmovbe
ret
mov
add
xchg
add
sbb
lds
pushf
sub
popf
roll
into
call
jge
inc
jle
push
arpl
mov
mov
mov
add
pop
or
test
jbe
loop
in
icebp
mov
fsts
movsb
rcrl
je
jns
shrl
mulb
int
mov
xchg
fwait
and
outsb
stos
in
mov
pop
or
scas
scas
imul
lret
aam
mov
pushf
xor
sbb
cmpsb
inc
rol
sub
cwtl
out
loop
arpl
sbb
sarb
xchg
hlt
imul
movsl
nop
test
bound
jg
sbb
jecxz
jns
cmp
xchg
rol
aam
roll
sbb
mov
adc
rcrl
inc
stos
loope
jg
pop
test
std
add
push
sti
jge
sub
mov
or
pop
int
dec
xchg
adcl
imul
std
xchg
fs
fadds
and
pusha
add
cwtl
cs
mov
cli
push
mov
xchg
xchg
pop
and
test
stos
and
out
mov
cmp
cmc
xor
mov
mov
adc
in
das
adc
mov
rclb
dec
mov
mov
repnz
daa
in
lds
dec
lahf
test
lods
cmp
fisubrl
inc
inc
ja
jle
inc
sahf
mov
je
xor
lods
cmp
mov
adc
pop
xchg
nop
repz
inc
loope
pop
jne
fists
mov
fcmovnb
sbb
dec
mov
xchg
xchg
dec
cmpsl
mull
adc
icebp
dec
mov
adc
pusha
enter
mov
in
adc
sub
pop
shll
mov
sbb
clc
jno
xchg
shlb
dec
test
sbb
pop
push
jbe
add
xchg
add
jno
jecxz
xchg
mov
xchg
seto
das
nop
out
hlt
int
push
stos
adc
inc
daa
sbb
idivb
cmp
shll
inc
or
mov
cmp
dec
fcmovb
ds
mov
xor
jae
mov
dec
in
mov
out
and
lods
call
mov
pop
into
dec
ret
adc
dec
mov
mov
mov
pop
jl
jae
mov
js
xor
sbb
call
ret
sbb
push
int3
das
cmp
inc
pop
fildl
push
xor
dec
sub
sbb
lret
lods
pop
mov
or
add
out
or
lcall
adc
lahf
sbb
mov
cwtl
jbe
sub
gs
loope
mov
test
hlt
mov
mov
dec
dec
and
sahf
inc
jns
push
lahf
xor
lret
dec
cmpsb
jne
mov
xor
insl
in
scas
or
enter
out
sub
pop
add
xchg
sub
aas
mov
mov
or
nopl
jmp
add
stc
stos
cmc
or
xor
xchg
mov
fs
dec
jmp
pushf
fnsave
out
bound
add
sub
jmp
enter
and
sahf
rcll
add
or
inc
loope
jo
lret
and
mov
sarl
imul
add
add
and
rolb
ljmp
in
inc
pop
inc
xorl
idiv
sbb
cmp
outsb
insl
push
xchg
adc
bound
aam
xchg
clc
and
push
jecxz
rcrb
add
and
add
mov
pop
push
sbb
cmp
mov
lahf
xchg
mov
mov
dec
jbe
inc
in
mov
sbb
test
sub
bound
xchg
aad
fstps
addr16
jp
jne
and
mov
mov
mov
jbe
test
sbb
add
xlat
cwtl
add
cmp
js
push
and
aam
imul
mov
jnp
lret
roll
int3
dec
add
je
imul
mov
mov
fisttps
daa
mov
orb
imul
fisubrs
inc
mov
in
mov
outsb
mov
mov
out
cwtl
pushl
add
lds
jle
cmp
or
add
dec
test
test
out
adc
adc
lods
sub
xor
lds
test
iret
or
add
dec
js
mov
lret
je
test
xchg
cmp
dec
lods
add
mov
xchg
fdivrs
fwait
sbb
mov
mov
ret
pusha
dec
aaa
push
inc
sub
or
xchg
daa
jmp
imul
mov
mov
negl
pop
sbb
js
lds
xor
jae
outsb
movsl
sbb
jo
in
cmp
xchg
mov
js
clc
shlb
mov
movsb
stos
test
fwait
or
mov
xor
aam
sub
jbe
mov
push
mov
outsl
lods
inc
pop
jge
outsb
mov
mov
or
rclb
enter
mov
fs
ret
daa
mov
dec
cs
add
pushf
xor
jl
or
push
cmp
push
lock
push
ret
aam
mov
xchg
es
jg
jle
into
popf
mov
out
mov
mov
nop
lea
mov
sti
xchg
jp
xchg
test
imul
or
in
test
adc
inc
and
adc
xchg
jmp
jmp
shlb
mov
jo
leave
push
mov
jle
movsl
ljmp
cmp
fnstsw
or
aaa
xor
cmp
xchg
bound
pop
add
fs
repnz
inc
lret
movsb
cmp
fiadds
mov
adc
gs
mov
stos
jle
xchg
xchg
in
aaa
insl
pop
and
outsb
pop
sbb
js
sub
int
jecxz
shlb
add
hlt
mov
lret
aaa
mov
ds
xor
xlat
pop
shlb
sbb
fwait
dec
xchg
sub
adcb
jb
cmp
jno
das
sbb
scas
stos
pop
xor
les
cmp
and
cli
test
aas
loop
pushf
insl
enter
insb
movsl
jb
or
add
ljmp
call
ljmp
push
jge
sahf
int
inc
mov
data16
imul
ds
jno
push
lods
and
jne
pop
pop
jge
rorb
push
lds
cmp
and
jns
inc
lock
pop
adc
push
push
stos
xor
push
push
inc
scas
mov
xchg
loopne
or
dec
mov
insl
mov
mov
adc
xchg
fadds
cwtl
inc
xchg
xor
adc
or
mov
insb
repnz
jp
test
aad
ret
pop
or
lret
push
aas
inc
xchg
movb
sbb
leave
ljmp
pop
lret
dec
adc
popa
cmc
mov
pop
sahf
and
addr16
test
cwtl
loopne
test
cmc
push
mov
jl
sub
inc
ficoml
pop
mov
jno
pop
mov
xchg
es
jl
out
cmp
sbb
mov
shlb
in
push
shlb
popl
sahf
icebp
int3
sahf
dec
mov
pop
stc
dec
xchg
clc
enter
cmp
aaa
jo
dec
cmp
push
and
jmp
popf
jge,pn
stc
fsubrs
mov
in
push
push
pusha
pop
dec
cmp
adc
lahf
dec
arpl
lods
xchg
pop
negl
cmp
cmc
jle
aam
or
and
xlat
dec
mov
jae
push
bound
lcall
in
stc
xchg
jmp
mov
stc
sub
push
imul
test
xchg
outsl
add
lahf
mov
cwtl
sarl
xchg
fs
mov
xchg
xchg
mov
pop
xor
cmpsb
ss
dec
jecxz
push
mov
enter
mov
mov
or
or
js
lcall
lahf
scas
push
xor
mov
pop
pop
cmp
cmpsl
js
std
call
xchg
or
cltd
inc
inc
lcall
adc
cmp
jne
ja
arpl
cmc
mov
ss
lods
push
arpl
clc
push
call
xchg
bound
xchg
icebp
imul
adcb
mov
xchg
lret
imul
nop
and
lods
lahf
rcrb
xor
dec
pop
sbb
pop
dec
mov
pop
int3
stos
ret
data16
daa
xchg
pop
mov
fnstsw
mov
pop
and
mov
das
cld
mov
jnp
pop
push
js
mov
inc
subl
xchg
es
sti
stc
mov
push
inc
fldl2t
pxor
xchg
push
outsb
dec
nop
mov
daa
sbb
mov
mov
mov
rol
or
pop
mov
jne
push
inc
jecxz
lds
in
add
or
jno
divl
jmp
adc
and
lock
xchg
loopne
push
cmp
std
setb
sarb
shl
dec
dec
jnp
mov
imul
mov
pop
cwtl
jp
push
scas
ja
pushf
and
call
add
dec
pop
call
mov
loop
jae
inc
inc
cmp
xchg
popf
xlat
mov
lods
sub
loopne
jmp
push
push
xchg
pop
sbb
jb
test
fnsave
pop
or
jnp
fildll
add
aaa
loopne
add
jg
xor
mov
inc
sub
xchg
cld
shl
xor
jno
std
jno
mov
jb
sub
mov
out
sbbb
mov
and
mov
call
xchg
adc
xor
mov
xor
ds
and
xchg
add
mov
and
xchg
jg
daa
adc
cltd
mov
into
sub
cmpsb
bound
xchg
pop
mov
cltd
xchg
lcall
out
sub
insb
aas
xchg
xor
mov
addr16
adc
mov
dec
fsts
xor
jnp
out
sti
push
or
or
sub
or
xor
and
add
jnp
inc
cmp
mov
leave
push
insl
push
inc
lods
xchg
fs
sub
sub
cwtl
cmp
shll
push
loope
jge
rcll
mov
pop
mov
aam
xchg
dec
nop
xor
fcompl
mov
outsb
aad
push
dec
cmp
add
into
fstpl
daa
and
jnp
adc
test
push
sahf
stos
push
sarb
les
dec
das
es
call
hlt
outsb
pop
jl
dec
cmpsb
lock
mov
mulb
scas
inc
pop
ficoml
int
xor
test
jg
lcall
push
cmpsl
sbb
and
fcoml
xchg
pop
out
pushf
cltd
ds
push
pop
mov
mov
add
sbb
mov
iret
add
sub
loopne
sahf
push
jg
xchg
cmpsl
mov
movsl
sar
mov
loopne
sbb
lahf
jno
sbb
mov
sbb
stos
hlt
cmp
imul
and
and
cwtl
ljmp
mov
xor
xchg
xor
inc
pushf
and
pop
sub
cmpsl
daa
mov
outsl
push
into
jno
cmpsb
movsl
arpl
and
mov
arpl
mov
mov
lcall
mov
loopne
mov
cmp
out
ret
sti
push
incb
push
adc
out
daa
xchg
in
daa
out
sbb
enter
imul
or
cmpsl
jns
mull
sbb
aam
inc
daa
test
dec
dec
loope
mov
in
lcall
repz
daa
xchg
cmp
ljmp
je
ret
dec
call
leave
jle
push
fistl
leave
mov
dec
bound
sbb
cli
add
and
jno
and
dec
xchg
jb
xchg
and
js
jnp
jmp
fdivl
aad
sub
xchg
int
fiaddl
stos
test
pushf
ljmp
or
add
jo
jmp
cmpsb
std
xchg
cld
pop
arpl
mov
scas
add
or
lds
mov
jge
push
arpl
push
bound
pop
loopne
fildll
xchg
mov
cvtps2pi
adc
dec
xchg
or
out
xchg
fbstp
inc
xchg
cmp
negl
les
inc
rcr
and
jmp
mov
and
icebp
lods
mov
mov
shrl
cmp
std
mov
repnz
jae
and
loopne
dec
xchg
cmpsl
xor
cmp
imul
push
imul
loopne
cli
imul
leave
loope
pop
adc
add
jge
mov
mov
mov
stos
js
sbb
mov
sahf
inc
fs
sbb
inc
adc
nop
in
aam
mov
shrl
adc
int3
movsl
loope
inc
dec
fcompl
insl
xor
dec
pop
lret
mov
in
dec
add
or
int3
aas
mov
fisubrs
mov
xor
ljmp
aad
ret
fldcw
icebp
mov
mov
int3
mov
outsb
add
popa
out
jmp
popf
sahf
xchg
push
es
and
jno
mov
or
jno
divl
or
xchg
xchg
add
jle
decl
in
and
dec
lret
mov
mov
pop
aas
mov
sbb
xchg
loopne
inc
frstor
negl
scas
out
add
push
iret
pushf
add
jecxz
sbb
sub
mov
mov
ret
arpl
mov
xchg
pop
inc
repnz
movsl
pop
orl
xchg
out
push
imul
aaa
mov
icebp
ret
push
rcll
sub
fistl
in
push
testl
cli
pop
mov
je
mov
cmc
fdivrs
les
add
inc
sub
cltd
bound
call
scas
mov
sub
je
xor
lea
dec
jmp
stc
fs
mov
imul
outsl
addr16
test
adc
xor
fmuls
mov
test
or
push
jb
xor
cmp
add
sbb
fidivrl
cmp
or
cmp
test
cmp
pop
xchg
adc
and
mov
mov
sub
iret
pop
pop
mov
loope
test
xchg
jmp
mov
lock
xor
out
cs
movsb
xor
aas
dec
xchg
mov
mov
loop
je,pt
not
mov
push
fsubs
or
test
out
outsl
out
outsb
mov
pop
pop
jne
int3
aad
xor
mov
sahf
cs
std
add
dec
sub
popf
push
test
clc
fldl
push
adc
repnz
inc
fldlg2
sbb
pop
mov
jge
out
cmp
je
mov
dec
cld
dec
cmp
xchg
stos
incl
inc
cmp
test
daa
mov
nop
pop
mov
add
aad
out
repz
sub
cs
in
je
add
nop
in
enter
mov
xor
popf
cmc
push
fildll
sar
lods
mov
jnp
test
xchg
repz
dec
enter
pop
mov
jge
inc
int
jo
in
iret
shrb
mov
hlt
movsb
fisttps
or
xchg
add
fsubrl
sub
xor
jo
test
xchg
jb
xchg
into
adc
in
mul
nop
mov
aam
push
dec
stc
fldenv
sub
xor
dec
sub
outsl
pop
cli
ret
inc
xchg
xor
sub
mov
sbb
nop
sub
cmp
inc
jle
jmp
mov
xor
cld
lods
cmc
sahf
test
mov
mov
cmp
push
pop
sub
faddl
call
or
jle
xchg
inc
mov
pop
cmp
adc
xor
and
out
pop
mov
sar
push
xchg
add
pusha
sbbb
cmpsb
dec
mov
mov
shll
dec
sbb
pop
ja
inc
sub
sbb
fstpt
cld
repnz
pushf
sbb
push
cmp
scas
loop
dec
jne
sub
push
scas
insl
nop
or
pop
sar
jnp
mov
ds
lods
adc
xor
mov
decb
xchg
push
fs
xor
or
sahf
pop
push
pop
shrb
xor
bound
or
inc
add
test
cmp
mov
lcall
xor
movsl
pop
pop
bound
hlt
sar
jle
mov
faddl
and
add
mov
mov
mov
wrmsr
inc
ds
fldl
mov
clc
les
jg
loopne
lods
mov
lcall
call
subl
mov
sbb
lret
test
xor
sub
sub
imul
xchg
push
push
ljmp
les
xchg
daa
xor
es
dec
and
pop
adc
cmp
cmp
push
mov
inc
add
mov
xchg
xor
ljmp
xchg
rcrl
mov
inc
jp
inc
jle
movsb
sbb
fs
stos
nop
pop
iret
mov
push
popf
cmp
or
orl
popl
push
jg
rcl
stc
aad
mov
xchg
test
jle,pn
or
pusha
repnz
xor
data16
add
cmc
leave
sub
fadd
notl
aam
nop
repnz
stos
aam
dec
test
inc
cmp
mov
adc
and
ficoms
imul
pushf
fildll
pop
fwait
das
out
scas
arpl
scas
adc
into
adc
aad
sub
and
dec
pmuludq
cmp
mov
cmp
test
lock
dec
pop
aad
popf
movsl
sbb
xchg
mov
outsb
ja
sbb
jb
dec
dec
lds
cmp
adc
mov
ret
inc
mov
jl
inc
test
and
dec
push
jge
imul
jp
jne
xchg
imul
add
pop
mov
outsb
xlat
loope
shll
fucom
and
mov
xchg
push
mov
push
dec
hlt
mov
jo
pusha
stos
jl
dec
add
je
lret
cmc
adc
pop
add
stos
roll
push
shrb
iret
lret
lods
jbe
pushf
jge
add
fcomps
and
lea
mov
jno
gs
sbb
sbb
mov
shl
xchg
push
mov
pushf
sub
call
addb
cld
ffree
push
rcrl
jecxz
jge
pop
aas
jmp
outsl
pop
mov
leave
ja
or
pop
xor
lods
js
aas
lret
xor
jg
sbb
aam
test
cmpsb
xchg
shrb
xchg
jno
push
pusha
xor
cmc
dec
js,pt
mov
testl
int
arpl
sub
xor
inc
mov
rcpps
aad
mov
add
add
pop
mov
test
mov
aas
sbb
scas
cmp
adc
mov
out
mov
add
xchg
icebp
mov
xchg
cwtl
or
fnstsw
xchg
hlt
jmp
ja
incl
call
mov
dec
lcall
roll
xchg
test
and
fwait
sub
xchg
mov
fs
test
loope
das
mov
mov
adc
daa
icebp
daa
call
sub
repz
adc
outsl
mov
push
mov
sub
push
das
lret
cmpsl
sbb
mov
or
aaa
xor
scas
in
mov
sub
outsl
insb
mov
mov
test
mov
stos
jae
jle
adc
repz
nop
ret
sbb
jae
jae
arpl
adcb
dec
test
sub
movl
sub
cmpsl
data16
cmp
out
xchg
mov
mov
lock
popf
mov
and
rclb
xor
mov
push
stc
cmc
jmp
mov
scas
stc
stos
dec
sbb
insl
mov
push
inc
jo
daa
and
mov
popf
mov
je
push
inc
mov
call
jbe
out
lods
xchg
hlt
not
push
cwtl
mov
mov
test
mov
stos
xor
sub
mov
lods
xor
sbb
jl
pop
bound
jmp
arpl
or
test
and
scas
out
repnz
aas
jo
cmpsb
int3
pop
loope
push
rcrl
shll
pop
into
or
movsb
test
dec
sub
je
cld
dec
pop
in
pop
and
ljmp
xorb
inc
dec
jae,pt
lret
mov
das
sbb
ss
dec
movsb
mov
adc
and
pop
add
data16
inc
in
nop
pop
mov
ret
test
pusha
or
bound
mov
xor
loope
std
vfmadd231ss
xchg
mov
mov
jg
addr16
sbb
mov
mov
xchg
in
out
or
sub
mov
jecxz
fcomp
loopne
adc
mov
outsl
daa
mov
cli
mov
fcoml
dec
pop
movsb
lea
arpl
dec
ss
hlt
adc
testl
jbe
popa
pop
xlat
mov
loope
shrb
push
repz
lods
imul
cmp
jae
adcb
test
cmp
cmp
mov
push
adc
lret
sti
loop
adc
jl
mov
pop
mov
sbb
insb
jle
sub
enter
and
into
addr16
clc
cmp
testb
hlt
cmpsb
pop
xchg
cmp
sbb
adc
das
cwtl
push
pop
mov
clc
xchg
test
mov
loopne
mov
stos
dec
and
popa
fs
loopw
arpl
pushf
push
outsl
push
std
pop
repnz
pop
test
lahf
mov
cld
enter
leave
mov
push
sti
or
xor
push
mov
jbe
test
std
dec
mov
mov
test
daa
or
adc
or
push
loopne
push
test
and
in
fs
xchg
ja
jge
loop
shl
mov
jns
lock
fmuls
and
das
cmp
inc
mov
scas
jmp
lock
es
icebp
xlat
mov
je
sti
xchg
loope
imul
xchg
leave
jp
pusha
and
arpl
ja
push
fwait
jbe
lahf
add
add
stos
in
outsb
dec
and
enter
and
test
jle
lods
xchg
scas
dec
push
cmp
addr16
iret
sub
pop
xchg
rorb
mov
mov
in
leave
shlb
ljmp
mov
cld
xor
fldcw
fmull
xchg
movsl
xor
cmpsb
fwait
mov
jns
xchg
pop
push
push
jne
faddp
in
andb
cmp
in
fstps
stc
mov
hlt
testb
cmc
add
insl
cmp
ss
ljmp
outsl
outsl
out
scas
xchg
rcll
inc
xlat
cmp
bound
cltd
pop
lds
mov
aaa
push
xchg
push
lods
popa
fwait
andl
pushf
es
push
sbb
mov
pusha
sbb
fs
into
cmpsb
mul
dec
mov
pop
out
mov
loopne
stos
sub
cwtl
fs
out
std
sbb
jp
cmp
mov
cmpsb
mov
call
sbb
or
lret
mov
mov
icebp
scas
push
or
push
loopne
lea
xchg
jno
xorb
inc
mov
dec
mov
push
adc
inc
mov
out
cld
addr16
mov
jge
cmp
setg
scas
js
mov
and
cld
adc
out
xor
movsb
mov
mov
mov
dec
test
xor
sarb
lea
pop
test
pop
cmpsb
inc
dec
or
stc
aas
or
jbe
fbld
bound
mov
shrb
into
and
xlat
push
loope
repz
lcall
data16
inc
stos
pop
dec
inc
mov
cmp
mov
pop
push
fcmovnb
lret
aas
xor
lods
int
call
adc
aas
mov
scas
cmp
sub
mov
clc
xorb
mov
orb
test
or
rcrl
mov
or
push
and
cmp
inc
divb
push
mov
addb
xor
scas
mov
add
sarb
shlb
sbb
pop
xor
mov
cli
fmulp
pop
xchg
mov
mov
outsb
icebp
arpl
je
mov
cwtl
nop
xchg
cwtl
cmp
cmp
and
sbb
rclb
out
shlb
add
jnp
adc
mov
mov
cwtl
jmp
jb
sahf
pop
clc
xor
std
push
jb
mov
fnsave
lods
and
sti
xchg
mov
int3
jno
fucomip
push
les
inc
std
arpl
cli
add
js
shrl
sub
andl
cmp
popf
popl
push
cld
dec
mov
mov
sbb
fsubrs
mov
dec
push
fwait
das
je
mov
jl
push
pop
fisttpll
lcall
add
sub
rcrl
or
lods
inc
and
movsb
xor
test
sub
aam
mov
adc
sahf
jg
push
jle
js
push
dec
inc
push
jnp
dec
dec
xchg
test
jmp
mov
jg
out
inc
jecxz
int3
sub
fists
xor
insb
jnp
ret
jmp
ret
sbb
jg
data16
or
pop
bound
adc
and
nop
adc
cmp
bound
xchg
scas
addl
sti
jecxz
sub
icebp
mov
push
xchg
xor
clc
cmp
adc
bound
out
scas
out
mov
cs
sarl
jnp
sbb
ret
cwtl
fcmovnb
push
cltd
imul
testl
pop
adc
and
movsb
gs
mov
dec
into
bound
or
cmp
stc
push
sub
xchg
ss
data16
jg
repz
cmpsl
xchg
inc
sbbl
xchg
jno
mov
scas
mull
out
incl
dec
iret
daa
pop
push
push
xor
jp
pop
pusha
out
movsl
or
pop
ljmp
dec
shlb
dec
out
loopne
loope
sub
push
push
std
shl
dec
cld
sbb
mov
fwait
sub
insb
mov
cltd
mov
scas
arpl
push
cmp
inc
mov
and
or
sub
jp
scas
movsl
adc
or
jns
and
sbbb
cmp
stc
negb
inc
mov
sbb
sbb
js
xor
andb
cltd
adc
add
xchg
test
hlt
push
call
xchg
xor
jno
scas
pop
cmc
inc
xchg
ret
stos
lock
cmp
in
cmp
xchg
in
fisubrs
imul
pop
push
ss
insb
xchg
gs
pop
mov
repz
mov
lea
mov
data16
in
je
adc
fsubs
repz
mov
mov
pop
inc
dec
adc
inc
movsl
subb
sub
inc
test
stos
dec
pop
mov
daa
xchg
sbb
daa
or
jmp
inc
imul
cltd
jne
or
dec
fwait
dec
sahf
inc
mov
xchg
xchg
sbb
pop
sahf
mov
jecxz
ljmp
flds
pop
xor
sbb
rcl
mov
inc
out
adc
loopne
std
ljmp
insl
xchg
pop
or
repz
int
jno
and
cmp
imul
push
add
ljmp
fisttpll
stc
pop
mov
jle
bound
mov
mov
fiadds
iret
fsubr
jge
outsb
jns
imulb
mov
adc
fwait
add
xchg
mov
xchg
fiadds
and
jmp
call
mov
mov
cmc
and
sti
pop
mov
inc
pop
lds
movsb
inc
jmp
aam
adc
fstpl
and
inc
test
add
dec
mov
pop
mov
into
xchg
fidivs
mov
stos
leave
enter
lret
repz
int3
pop
test
adc
cmp
mov
sarl
xchg
xchg
push
sub
ds
xor
cmpl
out
push
cmp
cmpsb
popw
xchg
ja
pusha
push
inc
sbb
das
mov
cld
mov
sbb
push
clc
in
sub
loop
xchg
xchg
and
mov
pop
inc
adc
dec
clc
jb
std
insb
dec
loopne
lret
dec
data16
pusha
inc
xchg
pop
iret
cmpsb
mov
inc
push
bound
fucom
js
mov
jbe
scas
xchg
mov
mov
jno
bound
push
mov
or
mov
insl
into
xlat
call
and
popa
mov
jae
mov
shlb
mov
fildl
fs
loope
push
pusha
enter
jne
sbb
je
xchg
jg
and
test
cmp
push
lea
popa
test
sbb
lahf
out
stos
cmpsl
andl
dec
pop
into
and
xor
lcall
in
push
mov
dec
test
incb
mov
fwait
cmp
mov
jnp
int
lcall
fcomps
mov
lahf
jmp
pop
and
xchg
sahf
mov
movl
adc
mov
pop
sbb
loope
movsb
test
hlt
fs
inc
ss
pushf
mov
test
or
jle
dec
std
ss
fists
sahf
int3
sub
jo
xchg
and
jmp
loop
out
daa
and
data16
dec
or
xor
in
mov
iret
add
lcall
out
cmpsl
rol
xor
shlb
xchg
stos
test
imull
out
ror
rorb
stos
cmpsl
pop
call
or
sbb
rclb
aaa
cmpb
stc
and
clc
adc
pushf
pop
les
cltd
xchg
out
mov
mov
mov
mov
or
popf
aaa
movsl
mov
push
xchg
int
jbe
stc
or
and
jne
outsl
mov
sub
add
push
or
out
ds
mov
inc
sbb
jnp
jp
clc
mov
out
mov
adc
cltd
add
clc
insl
aaa
rclb
jns
in
pop
mov
shrb
jmp
xor
pusha
push
xor
icebp
lcall
out
outsl
inc
in
in
out
jnp
mov
push
js
sub
cmp
and
leave
inc
roll
sbb
daa
nop
xor
push
lock
mov
lcall
in
pop
scas
in
dec
push
fcomip
mov
and
cmpps
push
jo
fdivrs
push
aad
and
subl
out
mov
sbb
mov
push
push
lret
lock
mov
cltd
cs
int3
lahf
mov
adc
add
pop
lea
xchg
jnp
jp
negl
mov
sub
cmpsl
xlat
outsb
inc
out
mov
sahf
fisttpll
notl
push
into
movsb
sub
ret
or
push
push
in
sarl
xor
mov
jno
jbe
xor
sub
dec
sahf
lea
sahf
nop
adc
inc
xor
movsb
mov
lock
cmp
pop
mov
inc
nop
std
inc
scas
data16
push
xchg
mov
test
add
sbb
push
pop
out
jae
dec
scas
cmpsl
aam
xor
ss
fistpll
scas
mov
jns
ficoms
dec
jns
popf
insl
mov
xor
xchg
mov
pop
repz
xlat
mov
jno
push
xchg
cmp
hlt
lods
mov
add
mov
shl
repz
pop
sbb
mov
and
xchg
shlb
adc
sub
add
jbe
jecxz
adc
lods
xlat
dec
jns
outsl
xchg
mov
pusha
mov
out
jns
push
ss
loop
test
inc
arpl
mov
add
aad
lahf
loop
cmp
dec
sbb
jne
xchg
or
xchg
cmpsl
in
pusha
js
repz
mov
ss
test
cmp
cltd
sbb
pop
scas
cmp
adc
sbb
cs
sbbb
jno
pop
sub
mov
dec
hlt
lret
test
lahf
pop
fisttpll
jge
aad
out
or
cs
jbe
pop
lret
call
xlat
in
scas
xchg
lock
mov
cmp
mov
jae
sub
adc
push
arpl
int3
and
xor
rolb
adc
jns
jp
fxch
inc
rorl
lods
in
cmp
mov
or
in
and
js
jb
rcll
sub
xchg
outsb
pop
and
inc
movzbl
inc
test
cmp
add
add
test
xchg
sbb
fildll
xchg
xor
jnp
dec
xorl
pop
xchg
jne
addb
push
bound
push
push
push
inc
test
daa
arpl
pop
stc
iret
inc
xor
rcrl
fsubrl
cli
xchg
cmp
icebp
adc
das
test
or
xchg
fcoml
lock
sub
jle
mov
ret
fdivl
fnstcw
xorl
scas
and
fsts
or
outsl
pop
mov
push
fidivrs
inc
adc
stos
test
daa
push
sahf
pop
cmp
xchg
inc
scas
or
addb
les
ret
in
xor
aas
inc
ficoml
sbb
ss
xor
jle
jns
dec
sarl
popf
cmc
pop
pusha
sbb
cs
das
jecxz
pop
sbb
sahf
faddp
int3
stos
fs
xchg
fcmovne
dec
movb
aam
fisubl
push
lret
mov
or
jbe
mov
test
mov
stc
dec
cli
fincstp
xchg
test
test
orb
sub
xor
adc
fwait
sub
sti
stos
dec
andb
js
outsl
sti
xor
mov
aam
xor
loope
sbb
std
mov
les
inc
mov
das
and
mov
xchg
mov
dec
mov
mov
popf
fstl
mov
mov
scas
push
and
inc
loope
mov
and
push
sbb
dec
xor
mov
fwait
insb
fcomi
pushf
xchg
lds
mov
iret
clc
push
pop
dec
pop
rcrb
inc
movsb
call
xor
push
inc
xchg
ret
mov
imul
data16
ja
lret
mov
jnp
adc
xchg
loopne
mov
sub
call
push
mov
mov
xor
in
movnti
xchg
dec
push
in
sub
inc
cmc
shlb
and
ljmp
pop
sbb
xor
ret
push
mov
cmpsb
xchg
mov
xor
fsubl
ret
div
lret
adc
inc
jo
es
popa
cmp
xchg
mov
jae
jb
cmp
adc
leave
dec
aad
jmp
pop
lcall
bound
ret
mov
lods
in
test
mov
shlb
out
lds
jb
pop
jg
popa
outsb
shll
in
cmp
jg
sti
xor
aaa
dec
loope
movsb
pop
movb
xchg
pusha
ljmp
adc
pop
roll
dec
xchg
arpl
rol
adc
pop
shlb
int3
in
faddl
sbb
mov
pop
cmpsl
pop
dec
add
insl
das
dec
ret
or
inc
cwtl
bound
int3
rol
dec
push
xchg
hlt
mov
adc
sbb
or
inc
dec
pop
cli
lcall
add
mov
inc
cwtl
jmp
std
inc
test
mov
jns
or
or
inc
mov
lahf
pop
repz
adc
dec
cli
xor
push
arpl
pop
orl
push
inc
jb
mov
lret
add
leave
pop
subb
std
jl
cmp
push
jmp
xchg
lahf
fs
or
sbb
jbe
and
and
cmp
mov
outsb
sub
jo
mov
fists
and
scas
cwtl
scas
fs
cmp
mov
push
dec
push
adc
jle
mov
in
jp
lahf
lcall
pusha
ja
jns
cli
push
pop
cmp
add
repz
int3
ja
decb
aaa
jmp
cwtl
hlt
imul
insl
dec
push
ret
mov
jle
cmp
fdivs
mov
push
pop
cmp
sbb
xor
mov
xchg
repnz
mov
and
pop
loope
pop
add
dec
sub
cmp
mov
sbb
adc
rcr
in
pusha
fisttps
or
sub
fidivl
lods
imul
mov
test
das
sbb
mov
jge
sbb
lahf
adc
jne
mov
std
cli
out
and
outsl
shlb
loopne
sub
movsl
rcl
and
aas
xchg
jne
dec
rcll
dec
insl
lret
mov
or
pop
lods
pop
ret
fcoml
sbb
mov
loopne
fs
inc
bound
mov
arpl
pop
fimull
rcll
cmp
cltd
icebp
mov
push
cmp
pop
into
mov
icebp
outsb
mov
add
jbe
arpl
filds
xchg
push
addr16
sbb
sbb
dec
push
xor
sbb
push
test
sub
push
out
outsb
imul
sti
pop
ja
mov
sarb
ror
sub
sbb
lret
cmp
mov
xor
shr
push
arpl
push
jnp
outsb
jbe
leave
jbe
test
cmp
ds
out
out
imul
cmp
dec
lahf
jmp
jno
in
sbb
and
scas
insb
iret
out
or
icebp
cmp
leave
sub
adc
fisubrs
lret
test
je
outsb
mov
cli
sub
jmp
pushf
jae
pop
push
mov
sti
lea
xchg
orw
push
xchg
adc
stos
cmp
test
into
pop
and
shll
push
mov
rcll
int
jp
adc
outsb
and
add
mov
loopne
xor
roll
faddl
loope
imul
mov
in
scas
sahf
jne
sub
cltd
jnp
dec
push
je
push
or
or
int
adc
je
push
outsl
out
or
and
icebp
loopne
jl
push
negl
pop
mov
out
mov
mov
sub
movsb
fs
mov
cwtl
out
out
push
test
aaa
mov
icebp
adc
or
add
cmp
xchg
mov
cli
stc
push
popa
mov
xchg
mov
das
add
es
test
cmc
roll
mov
rorl
sbb
add
fwait
ss
out
or
push
jg
and
mov
enter
into
jp
xchg
aam
sub
mov
in
jbe
aam
pop
or
add
mov
inc
into
sbb
imul
pop
sahf
mov
popf
mov
out
push
daa
dec
xor
adc
or
pop
xor
lock
dec
mov
scas
pusha
xor
jbe
test
and
popf
aam
mov
sti
jecxz
mov
pop
and
mov
pushf
dec
jp
jl
out
lcall
dec
mov
mov
xchg
jmp
push
fwait
dec
pop
fs
mov
fidivl
cmpsb
shll
xchg
cmp
call
inc
mov
inc
push
push
shlb
insb
xor
cltd
sbb
push
repz
cmp
cwtl
enter
jmp
push
sar
pop
mov
inc
pop
outsl
push
insl
sub
repz
pusha
push
std
dec
cmp
inc
xchg
fcomps
mov
sub
int
fcmovb
mov
fnstenv
cmp
lods
adc
dec
ficoml
jns
pop
mov
outsb
insl
or
pusha
popf
dec
lcall
out
jo
negb
mov
insl
jnp
clc
sbb
pushf
xchg
and
and
dec
incl
dec
loopne
push
add
inc
pop
and
xchg
inc
pop
insb
sbb
and
sbb
adc
popf
out
ja
pop
push
push
pop
jmp
leave
in
cmp
add
and
cmp
add
adc
insl
cs
fsubs
in
xor
mov
stos
pop
nop
cld
cmc
fidivs
lods
pop
stos
popa
xor
jmp
lock
and
cmp
js
fcmovnu
jae
cmp
inc
lret
add
int
es
adc
scas
mov
test
push
scas
daa
jmp
loope
test
decl
es
mov
fcoms
insl
ja
mov
push
fwait
aas
icebp
mov
bound
mov
mov
cmc
or
ret
xor
pop
sbb
inc
push
or
jb
rcrl
push
rcll
lods
movsl
add
dec
pop
jmp
outsb
fdivrp
xlat
fistpll
ret
fadds
lahf
lret
pop
jb
test
fwait
cmp
cld
stos
dec
stc
fnstsw
xchg
rcrl
mov
xchg
jg
or
sahf
pop
add
mov
stc
push
addl
push
jo
repnz
inc
dec
mov
mov
adcb
lret
lret
fstpt
inc
shll
dec
adc
mov
mov
pusha
xor
ljmp
icebp
jns
hlt
lret
add
aad
sub
addr16
pop
ja
adc
cmp
pop
pop
xor
int
stos
adcb
inc
cmpsl
sub
adc
aad
pop
add
push
nop
xor
xchg
mov
stos
bnd
fisttpll
fnstsw
push
insl
jg
mov
nop
mov
sbb
and
jbe
or
mov
out
pop
pop
arpl
pop
push
aaa
mov
xchg
out
cmp
loop
sub
int3
mov
pop
lods
js
roll
aaa
mov
frstor
arpl
add
inc
stos
js
push
ss
out
jecxz
mov
cmpsl
outsl
pop
xrelease
adc
ds
mov
jnp
aas
inc
insl
addr16
push
xor
or
mov
iret
or
imul
cmp
jae
ficompl
lret
lcall
sbb
cmp
adc
mov
movsb
cmpsl
lods
bound
aam
push
cmc
pushf
sbb
shl
ds
mov
mov
xchg
sbb
mov
imul
cmp
clc
dec
push
sti
call
or
movsb
push
sbb
mov
ficoml
push
lock
lods
fsubrp
lret
outsb
push
aaa
or
xchg
call
and
adc
icebp
mov
sub
ds
push
ror
pop
js
cld
adc
sbb
loop
dec
mov
pop
outsb
imul
push
dec
jnp
sub
enter
sbb
push
jae
repz
cld
int3
jns
stos
ficoms
test
mov
xchg
jg
test
or
adc
addr16
ds
xchg
ficoml
and
dec
mov
add
mov
adc
int3
arpl
scas
cmp
test
cs
add
cmp
pop
shlb
xlat
pop
clc
ds
outsl
das
test
push
stos
outsb
ljmp
mov
dec
mov
cmp
or
mov
adc
shlb
test
mov
out
pop
jecxz
addr16
mov
mov
jb
cmpsb
or
lret
cld
mov
pop
and
dec
mov
cwtl
fimull
mov
xor
mov
movsl
inc
lahf
sub
sub
shlb
icebp
jo
mov
addr16
add
push
or
jle
inc
jnp
test
subl
jno
jmp
mov
gs
imul
inc
pushf
sbb
jo
mov
clc
repz
aas
dec
popf
repnz
movsb
fucomip
dec
jne
cld
iret
xor
sbb
adc
nop
cmp
loope
mov
jg
fiadds
and
fidivs
pop
mov
jg
add
push
mov
mov
enter
push
inc
fimull
mov
jle
mov
sbb
jmp
xlat
xor
aaa
lret
ljmp
jno
mov
mov
sub
cmp
test
popf
scas
js
andb
and
in
add
xor
daa
xor
dec
call
loop
lahf
jb
loope
fisubs
pop
cmp
stc
loop
fs
int
repz
and
cmp
mov
cli
outsl
leave
clc
rclb
push
in
clc
jns
fdivrs
sub
push
xchg
mov
and
dec
xor
stc
lahf
add
into
fsts
pop
pop
test
fstp
pop
add
pop
mov
pop
adc
pop
sbb
ljmp
decb
mov
pop
add
stos
es
std
inc
lret
xor
pop
and
or
mov
rorb
rol
fnstsw
sbb
xchg
cmp
push
sbb
lret
aaa
push
inc
adcb
aas
cwtl
pop
out
imul
stc
cld
fldl
pop
sub
sbbb
mov
out
or
inc
je
adc
lret
xchg
cwtl
and
push
fwait
repz
sbb
popa
popa
lret
push
and
fucom
lods
xchg
mov
icebp
aas
sti
fimuls
shlb
rcl
into
xchg
movsl
cmp
stos
xlat
push
jns
leave
pushf
mov
adcb
mov
ret
mov
dec
sbb
cld
and
cmpsl
icebp
xor
sub
dec
sbb
mov
cmp
enter
fcoms
popf
sub
fisubs
test
cli
in
lahf
stc
in
sub
dec
dec
mov
cltd
jo
push
dec
arpl
sbb
lahf
out
pop
jnp
push
outsl
sbb
push
stos
or
cmpsb
sbb
xchg
cmc
mov
jo
cmp
in
movsl
std
movsl
lcall
push
test
pop
jno
gs
les
jmp
add
js
js
xchg
aaa
xchg
pop
rcrl
xchg
xor
clc
fdiv
dec
cmp
lcall
hlt
dec
out
dec
dec
jae
jge
mov
enter
push
pop
popf
fdivl
data16
int3
sub
rcrb
lock
mov
rorb
mov
and
xchg
out
insl
lock
adc
sub
push
inc
flds
aas
hlt
pop
icebp
mov
movsb
test
sti
xor
lret
xor
mov
add
mov
call
mov
push
outsl
ds
dec
data16
loop
scas
fstl
fwait
adc
mov
sub
roll
aad
lahf
or
ds
dec
lret
cmp
add
push
dec
into
pusha
jmp
aam
das
sub
movsb
clc
jl
sub
fs
subl
notl
jno
inc
push
scas
xor
scas
pop
xor
les
cmc
or
dec
xchg
fiadds
mov
cwtl
int3
xchg
mov
loopne
push
sar
pushf
gs
mov
loope
int
popa
loopne
repz
std
js
dec
dec
sub
jecxz
andl
or
sub
movb
sub
fimull
aas
jo
or
outsb
bound
dec
arpl
lahf
fisubrs
xlat
insb
call
mov
das
nop
adc
repz
adc
xchg
test
jbe
outsb
dec
sti
push
cwtl
pop
insb
pop
mov
les
iret
push
mov
cmpsl
jge
add
jmp
test
enter
mov
insb
cmpsb
iret
ds
sbb
out
fs
pusha
jmp
nop
ja
test
or
outsb
dec
mov
dec
aam
psrld
mov
push
decb
or
adc
sbb
mov
pop
sub
dec
sub
pusha
enter
add
cmpsb
iret
add
loope,pn
pop
jp
movsl
cmp
stos
pop
mov
jne
fwait
cmp
inc
inc
sti
mov
and
mov
rolb
sub
push
xor
dec
andb
cld
add
push
dec
ret
or
bound
xor
cmp
arpl
sub
movsl
adc
incb
shrl
hlt
jl
fisttps
dec
std
dec
and
inc
inc
cli
inc
xchg
out
sub
push
lret
call
test
enter
call
dec
dec
dec
ret
arpl
xor
push
xchg
xchg
addr16
mov
cltd
and
imulb
inc
imul
test
or
dec
xor
sbb
out
jmp
push
mov
jo
push
fistpll
sub
aaa
sub
and
lahf
stc
sub
xor
mov
xor
stos
rcrb
testl
and
cmpsl
push
lahf
jns
aaa
sbb
adc
xchg
mov
adc
scas
sbb
xchg
out
lcall
xchg
pop
jp
out
stc
jo
adc
mov
mov
pop
adc
psubq
lret
test
inc
dec
adc
lcall
mov
outsb
xor
mov
add
int3
mov
fsubl
lahf
imul
sti
popl
cld
push
outsb
mov
pop
mov
dec
mov
pop
sbb
lahf
cmp
lret
dec
in
or
int
mov
push
push
jecxz
scas
ret
jns
vmovaps
outsb
scas
push
jae
out
js
lret
xor
jg
movsb
xor
in
pop
add
jmp
and
lods
mov
push
sbbb
fcoms
sub
dec
and
sbb
push
push
sbb
mov
and
dec
push
xorb
pop
xor
fcoms
lret
adc
mov
sub
xchg
mov
mov
jge
enter
cmovl
addl
es
fcmove
int
fisubrs
jno
mov
sub
es
xor
and
xchg
and
ficoms
inc
jns
int
fdivs
jl
bound
insl
stos
lea
jae
mov
lret
and
xor
and
xor
rcrb
and
inc
xchg
cmp
call
stc
xor
in
push
xor
jl
cmp
mov
mov
aas
in
in
mov
adc
es
push
mov
arpl
fwait
cld
mov
cmp
jle
ret
inc
je
jp
xor
push
sahf
cmpsb
mov
lock
aam
int
xchg
inc
ds
sub
arpl
xor
jg
mov
les
das
cli
arpl
and
add
ja
bound
and
test
repz
aaa
xor
scas
xchg
inc
xor
xchg
repz
jb
mov
push
cmpsb
cwtl
push
dec
add
cli
push
pop
mov
jg
cltd
fstl
adc
cli
gs
cmp
mov
mov
xor
arpl
fwait
cmp
cmp
sahf
jo
xchg
leave
inc
inc
pop
call
imull
mov
in
fwait
iret
in
pop
jae
inc
push
pushf
xlat
xchg
pop
pop
or
insl
cmpsl
and
inc
mov
js,pt
cmp
lock
mov
or
xchg
mov
jbe
xor
mov
sbb
jb
sub
mov
adc
jnp
xchg
call
in
je
js
jle
or
ret
aaa
aam
fiadds
and
push
inc
and
cmc
sbb
cld
dec
inc
movsb
mov
ret
pop
aad
dec
repz
sahf
pop
lods
push
or
insl
ds
xchg
pop
lfs
fildl
jbe
pop
xor
ret
or
out
das
jecxz
xchg
sub
jge
bound
loop
cmc
arpl
js
mov
outsl
mov
decb
pop
push
ret
add
cmp
adcl
inc
rol
jne
push
cmp
add
stc
and
shlb
sub
add
mov
adc
push
fcoms
sti
ror
dec
outsb
xor
in
add
imul
mov
les
and
loop
fs
mov
add
inc
inc
add
nop
or
adc
shr
scas
sub
and
mov
jns
addb
dec
fwait
or
ret
sub
int
adc
add
pop
outsl
nop
mov
mov
adc
rolb
inc
adc
jbe
mov
mov
mov
aaa
data16
push
inc
pushf
mov
test
jle
pop
sub
pop
testl
vmaxps
jo
aas
dec
rcr
pop
sbb
dec
shl
push
test
jbe
pop
out
xchg
movsl
jmp
dec
jg
aad
inc
call
mov
pop
clc
std
add
ret
icebp
leave
fstpt
icebp
mov
pop
jne
mov
insb
jmp
andl
pop
adc
inc
scas
adc
or
push
add
pop
negl
fcom
scas
or
push
pusha
inc
jb
fwait
out
hlt
repz
xchg
stos
xchg
movsl
lcall
push
sbb
cs
add
xor
mov
and
mov
adc
mov
in
icebp
repz
push
cmpb
or
orb
js
aaa
mov
adc
sbb
enter
and
mov
lods
cmp
xor
push
adc
scas
ss
cmp
xchg
sbb
rcl
jae
imul
sub
jge
std
mov
into
movswl
mov
cs
rcrb
das
mov
cmpb
sahf
add
cwtl
dec
push
pushf
sub
push
sub
lods
call
addb
jge
and
in
scas
xor
clc
fdivs
mov
xor
sbb
mov
nop
fsubl
scas
cld
jno
out
xor
in
mov
xchg
mov
int3
fmul
mov
xchg
sbb
movsl
test
push
outsl
daa
sub
mov
inc
mov
nop
mov
cmp
sbb
out
popa
jle
negl
and
push
and
mov
lea
dec
cmp
dec
cmp
push
int3
push
inc
jne
dec
jbe
mov
or
in
xchg
jae
and
imul
imull
sahf
sahf
dec
inc
mov
lcall
enter
test
pop
and
call
mov
xlat
popf
aaa
sub
xor
cmpsl
xchg
daa
inc
pop
xchg
jg
cs
dec
sub
push
push
fiaddl
mov
fidivrl
shrl
call
jp
mov
adc
das
dec
pmaxsw
mov
scas
int3
push
mov
add
divps
push
sbb
dec
push
div
or
push
aaa
fldt
pop
mov
mov
idivl
inc
push
sub
xor
mov
mov
pop
and
sbb
daa
cmp
jge
cmc
and
sbb
insb
dec
shrl
adc
pop
cmp
jo
fidivl
iret
fcompl
cmp
jno
imulb
test
ret
or
cmp
dec
xchg
fs
filds
jp
dec
xchg
movsb
and
dec
sbb
add
mov
mov
outsl
std
incl
mov
jmp
test
das
outsl
or
scas
xchg
lds
pop
lock
lret
sub
arpl
scas
dec
into
adc
stc
add
aam
fidivl
arpl
mov
fstpl
sub
daa
or
imul
inc
call
fiadds
adc
pop
inc
xchg
fisubrl
mov
mov
clc
decl
das
test
fwait
xor
ja
jb
out
dec
push
lahf
xor
js
imulb
gs
je
mov
into
pop
nop
jmp
xor
or
mov
fdivrl
movsl
aaa
addr16
jno
and
dec
enter
clc
xor
mov
gs
mov
mov
jnp
xchg
adc
repz
jp
fldt
inc
sbb
jo
inc
int3
notb
adc
add
jno
xchg
imul
cli
mov
jno
push
mov
cmp
cmp
outsb
mov
xor
pop
adcb
sbb
loopne
adc
dec
adc
cmpsb
movsb
pop
inc
into
mov
loopne
adc
xor
repz
mov
cwtl
mov
cmp
loopne
data16
pop
into
xchg
xchg
int
ljmp
cmp
lret
jne
enter
lahf
stc
out
inc
push
in
and
loop
xor
fcom
adc
ss
jmp
adc
subl
nop
psllq
iret
jno
fisttpl
out
fmuls
ret
lods
and
push
jae
add
clc
add
push
add
movsb
pop
mov
test
xchg
jmp
mov
mov
sbb
out
adc
imul
or
adc
loope
aas
js
in
jp
mov
add
or
rorl
xor
sub
mov
adc
ja
arpl
fwait
dec
jne
pop
pop
sbb
mov
not
cmp
repz
cmpsb
mov
lds
movb
into
xor
aam
xchg
cmc
repz
dec
std
or
mov
cld
add
sub
sub
add
jle
push
inc
mov
or
mov
jecxz
cltd
pop
in
imul
sub
loop
mov
out
ret
mov
mov
data16
cwtl
push
fimull
in
mov
outsb
pop
xchg
roll
call
test
push
out
call
pop
xchg
add
sbb
mov
or
or
js
mov
idivb
xchg
or
fdivl
adc
pop
jge
and
jp
pushf
repnz
movsb
adc
cmpsb
mov
andl
xchg
xchg
jmp
je
jne
add
sub
xor
rcll
xchg
jle
stos
pop
adc
pop
adc
hlt
add
sti
mov
dec
mov
mov
jo
les
popa
sub
cmp
inc
lret
pop
cmp
adc
lahf
scas
mov
sub
dec
cmpb
mov
fbld
add
mov
nop
js
pusha
cmp
mov
pop
cmp
push
dec
lock
xchg
decl
in
cmp
sbb
gs
xchg
xor
push
int3
stos
fisttpl
lods
pop
pop
adc
mov
fsubrs
addr16
lea
and
pop
dec
inc
popa
cmp
inc
inc
dec
sub
jecxz
sbb
cs
les
out
jg
push
push
and
adc
lret
ret
call
push
pop
mov
mov
mov
pushf
push
sarb
into
push
cmp
add
jg
stos
pushw
or
stc
or
lret
stos
int3
push
roll
adc
cmp
mov
mov
mov
dec
add
xor
xchg
clc
adc
sub
bound
dec
cmc
jns,pt
inc
jbe
push
shlb
js
add
imul
xor
test
into
cmc
sub
shlb
push
mov
lock
jmp
pushf
inc
sbbb
cli
adc
mov
into
iret
test
sub
mov
outsb
sub
adc
adc
mov
inc
dec
dec
pop
pop
scas
pop
out
test
jmp
popa
adc
cmp
jbe
mov
sub
dec
xor
filds
loop
sbb
ljmp
in
popa
adc
mov
and
dec
dec
or
scas
test
xchg
xorb
mov
notb
ljmp
sbb
sub
addl
sbb
inc
call
inc
jecxz
ret
xchg
scas
dec
movsb
fsubr
sbb
inc
in
jns
sub
inc
das
adc
out
incb
xchg
or
mov
lods
pop
add
push
testb
fwait
adc
je
push
aaa
push
aam
das
shrb
scas
movsb
cwtl
and
inc
hlt
mov
mov
or
loopne
repz
fcmovbe
jle
and
jp
out
and
dec
test
xchg
scas
sbb
and
sti
and
mov
mov
xchg
rcr
mov
pop
mov
mov
fnstcw
cmc
mov
push
xchg
mov
sub
pop
out
adc
adc
or
test
push
sti
and
rcrl
movsb
lock
test
les
push
stos
loopne
inc
dec
sbb
fidivl
jl
ljmp
pop
mov
lea
mov
fstl
jmp
push
orl
sarl
inc
or
sub
mov
push
add
mov
xor
pusha
cmpl
idivl
icebp
flds
jo
out
and
into
jmp
dec
mov
fmul
cmc
xchg
cmp
repz
adc
add
je
insb
sti
cld
jle
or
adc
jmp
in
and
push
sti
loop
les
xchg
ret
mov
push
xchg
inc
rolb
push
add
cmpb
cs
shrb
jle
adc
xchg
sub
ds
fdecstp
adc
adc
lods
cwtl
aas
cwtl
or
pushf
add
js
jb
and
fisubrl
pop
sub
sub
sub
pop
testl
adcb
inc
loope
imul
dec
test
into
clc
push
or
out
xchg
dec
adc
or
adc
dec
shlb
gs
push
outsl
dec
push
aad
inc
clc
dec
test
inc
pop
or
test
adc
push
inc
pop
jg
ljmp
jne
mov
adc
mov
mov
lock
push
into
aad
mov
stos
cltd
pop
mov
shll
imul
xchg
pop
leave
lcall
mov
push
pop
pop
sub
scas
pop
pop
lcall
pop
aaa
dec
or
icebp
dec
jno
xor
addr16
testl
scas
sub
and
and
lret
jecxz
ss
mov
mov
jge
dec
mov
loopne
out
jecxz
mov
sbb
add
mov
sub
sub
lods
sub
cltd
cmp
outsb
enter
add
xor
ljmp
ficoms
in
call
in
stc
sbb
adc
popa
lret
repnz
cli
adc
popa
lds
cmp
pop
test
push
imul
test
lcall
xor
jne
mov
adc
iret
addr16
or
jecxz
adc
push
mov
lret
or
scas
cmp
add
in
popa
pop
scas
and
pop
call
inc
pop
adc
and
mov
xchg
ret
mov
mov
js
push
inc
dec
sub
fadds
stos
push
jecxz
dec
pop
ror
gs
sbb
cmp
loope
out
cmc
xor
mov
aas
sbb
stos
out
fdiv
cltd
lods
dec
inc
xchg
adc
test
xchg
aam
cld
imul
fisubs
ret
adc
int3
inc
lahf
dec
stos
dec
and
pop
push
dec
push
sub
ret
cwtl
sar
cmp
jp
mov
and
das
dec
xor
adc
inc
xchg
cmpsl
loop
fwait
in
mov
idivb
dec
es
into
bound
jmp
jno
imul
jbe
repnz
mov
outsb
sti
mov
movsb
dec
jno
pop
mov
repnz
stos
cmpsb
cmpsb
push
or
lret
and
pop
out
mov
subl
xchg
in
lods
fsubrp
popf
dec
mov
jp
daa
lcall
js
dec
mov
fists
adc
enter
mov
lock
xchg
mov
arpl
out
mov
sbb
jmp
cmp
push
aam
arpl
dec
pop
and
iret
cmp
add
js
mov
fsubrl
dec
les
lods
aam
shll
sbb
mov
xor
das
pop
in
and
sbb
mov
jns
xchg
test
xor
jns
mov
cmc
mov
repnz
testb
pop
addb
int
pushaw
inc
mov
mov
sbb
fcoml
jmp
sbb
cmp
xchg
popa
jge
loope
mov
out
or
xchg
cmp
inc
cmp
ds
sbb
jb
mov
fisttpll
push
push
fbld
cmp
sti
outsl
pop
lds
or
lahf
cmp
mov
das
outsl
es
push
test
mov
inc
fnstcw
mov
jno
popa
and
sbb
popa
xor
shrl
mov
jb
enter
push
cmp
movsl
or
es
imul
push
mov
or
mov
inc
or
cmp
inc
inc
xchg
push
das
test
push
mov
jp
int3
bound
out
scas
call
rcll
jle
int
xchg
sahf
cmp
ja
cmpsl
lahf
lahf
push
mov
lods
shlb
pop
repz
cwtl
xchg
sub
aaa
pop
in
sub
fs
daa
or
xchg
mov
andb
fidivs
in
in
hlt
leave
add
pop
lret
mov
fucom
cli
add
inc
push
adc
push
add
movsb
pop
sub
push
or
xor
pop
jecxz
xchg
imul
mov
mov
jg
shll
loope
inc
mov
adc
adc
mov
out
leave
xor
aam
sbb
mov
testb
mov
add
adc
loope
shlb
mov
and
sahf
cmp
out
aaa
lret
sbb
push
jne
mov
cs
sub
mov
insb
movsb
xchg
inc
aaa
cltd
into
jnp
xor
movsl
iret
daa
push
jae
or
pushl
mov
dec
mov
shl
mov
sbb
mov
fcomp
mov
out
dec
cmp
pop
stos
jb
int
push
popa
mov
aas
cli
or
push
shll
enter
icebp
lods
lret
popa
aad
jb
outsb
xchg
dec
negb
repz
cwtl
mov
xchg
repz
mov
push
inc
dec
jo
test
and
dec
pop
arpl
pop
in
stos
pop
loop
dec
scas
pop
or
mov
lahf
repz
xchg
adc
pop
arpl
ret
notb
mov
xchg
push
xchg
mov
add
cmpsl
mov
lret
jecxz
ret
sub
mov
icebp
mov
scas
jl
push
clc
hlt
fwait
pop
faddl
orb
call
mov
push
inc
fcompl
in
pop
add
jp
into
pop
and
jmp
imul
jns
jno
sbb
xchg
mov
pop
xlat
xor
push
jae
in
clc
loop
movsl
jbe
mov
pop
popf
xchg
fs
mov
mov
test
dec
xlat
and
inc
inc
sbb
xor
js
psubsw
jmp
rcrb
cld
add
inc
addb
push
daa
rcrb
ja
leave
jecxz
cmp
cmp
rep
je
les
push
jne
aad
ds
jno
mov
pop
pop
cmp
int
mov
mov
leave
sbb
leave
jmp
icebp
out
in
xchg
mov
cmp
xchg
aaa
sbb
sbb
out
xchg
outsb
pusha
cld
adc
movsl
adc
xorl
sub
add
dec
inc
scas
add
push
inc
cmp
js
outsb
sahf
inc
rcl
leave
sbb
mov
dec
xchg
dec
sbb
aad
jp
in
cli
inc
popa
xchg
jb
jle
in
imull
aas
test
loop
sbb
adc
call
or
pop
xchg
pushf
jno
push
orb
mov
jg
je
xor
ret
and
cli
and
pop
adc
stos
mov
fisubrs
inc
je
adc
xor
sub
adc
pop
movb
push
loopne
lods
les
inc
call
jle
inc
add
sbb
lds
vmulsd
fistl
orl
ret
aas
inc
jo
psrlq
jmp
lahf
mov
inc
cmp
sbb
pusha
cs
sti
mov
sarl
push
add
adc
hlt
inc
pusha
mov
pop
pop
std
stos
ljmp
mov
push
pop
cmp
xchg
enter
xchg
rclb
js
cwtl
dec
mov
jns
mov
push
pop
sub
int
adc
and
xchg
out
sbb
sub
cmp
or
clc
aas
xlat
push
out
jnp
xor
xchg
ss
ljmp
jle
fnstcw
adc
adc
mov
mov
cmpsl
mov
xorb
jle
mov
clc
aad
adc
pop
cli
dec
call
push
sar
sbb
pop
lock
addb
mov
test
cltd
adc
lahf
sub
inc
aam
xor
sarl
and
out
cmp
mov
add
inc
in
inc
xchg
add
push
mov
push
cmp
and
mov
jno
addr16
jo
dec
lahf
push
inc
mov
lahf
sbb
add
pop
mov
sub
jl
or
popa
add
jl
mov
test
popa
adc
xchg
movsb
icebp
mov
add
cmp
aas
inc
jecxz
stos
mov
sub
jmp
ja
sarb
push
out
stos
inc
mov
loop
adc
or
mov
ja
out
push
cld
ret
popf
aaa
jbe
loopne
push
shld
fnstsw
inc
cmpsb
sub
pop
lock
imul
xchg
pop
addb
jbe
jle
mov
jle
sub
fmull
pop
xchg
divb
sub
fstps
js
test
pushf
dec
aas
push
cmp
js
mov
ljmp
push
test
inc
xchg
rcrb
popa
inc
add
mov
arpl
and
scas
test
mov
mov
dec
jmp
movsl
repnz
bound
ja
outsb
jecxz
adc
daa
ret
jae
mov
or
popf
cmpsl
fimuls
rcrl
subl
lcall
pushf
xor
lahf
pop
sbb
and
xor
rcll
xor
in
int
mov
stos
xor
inc
sub
fnstenv
push
or
pop
inc
add
cs
push
mov
jp
aam
mov
mov
movsb
test
cli
mov
pop
mov
dec
mov
stos
mov
and
jg
subb
add
cs
pusha
mov
div
in
ret
mov
test
pushf
dec
ret
ret
jb
arpl
idivb
movsl
rcll
insl
mov
add
int3
cmp
fsts
sahf
iret
mov
sbb
mov
adc
test
mov
jae
xor
enter
js
fwait
scas
add
icebp
pushf
adc
icebp
jns
sub
fisubrl
adc
outsl
and
mov
or
and
jo
aam
push
xor
add
adc
cmp
dec
add
in
pusha
lock
jb
sub
mov
add
aam
dec
pusha
lcall
sub
cmp
lds
add
dec
push
dec
scas
cmp
ds
repnz
and
push
sti
lcall
lods
lea
mov
mov
push
lret
or
sub
cmp
in
and
addr16
mov
int
cltd
lods
out
sahf
ss
adc
rolb
in
jge
ss
push
sbb
loop
mov
xchg
mov
add
pushf
dec
lret
in
cmp
loopne
adc
and
adcl
add
xchg
mov
mov
stos
pop
mov
inc
and
inc
add
fistps
pop
sbb
add
mov
and
mov
xor
hlt
call
add
andb
inc
mov
sbb
std
int
rol
jb
pop
sahf
push
aad
fs
enter
xor
jle
bound
cmp
and
lcall
popa
fdivrs
jg
jl
rclb
gs
pop
jns
lods
xor
lret
adc
mov
loop
lds
sub
test
mov
jae
shr
nop
ss
int
aad
xchg
aas
pushf
jb
push
prefetch
dec
xor
cmpsb
mov
scas
sbb
fnstsw
jae
sub
enter
shlb
imull
leave
leave
sbb
stos
xor
in
dec
out
mov
sub
iret
cmp
leave
lahf
leave
sbb
stos
sub
push
push
out
pop
nop
repz
cld
mov
jns
inc
xlat
push
fisubs
inc
dec
or
out
in
cwtl
adc
adc
push
ret
std
bound
cmpsl
pop
aaa
iret
mov
xor
outsb
mov
jns
inc
or
shll
cmp
mov
pop
jmp
fisttps
out
push
std
jno
addl
aam
push
imul
adc
sub
addr16
out
enter
and
in
pop
pop
cwtl
pop
pop
and
test
icebp
lret
pusha
or
jmp
cmp
xorb
jecxz
dec
mov
ja
xor
push
out
mov
test
mov
xchg
mov
movsl
mov
mov
mov
jb
jecxz
cs
sub
dec
push
cli
in
mov
repnz
or
mov
or
xchg
mov
jne
test
push
jmp
sbb
fnstenv
gs
insb
cmpsl
push
dec
sbb
inc
lahf
in
fwait
decl
shr
movsb
push
jno
idiv
push
add
fadd
pusha
mov
ficoml
in
loop
xchg
add
fisubl
fstpt
in
xor
gs
cvtps2pi
or
andl
xchg
imul
jns
stos
or
cmpsl
fbstp
cmp
and
dec
jle
inc
dec
pop
inc
aaa
imul
mov
test
pusha
adc
fcomp
movb
mov
insb
int3
nop
das
mov
push
xor
lock
mull
lods
ds
leave
mov
pop
outsl
push
fsubrl
mov
dec
idiv
push
stc
cmp
mov
push
data16
push
out
out
jge
cmpsb
mov
dec
in
mov
in
je
ret
adc
cmp
mov
cmpsl
enter
push
lahf
pusha
fsubrp
xor
mov
cmp
ds
push
shrl
popf
xor
adc
sub
rorb
shlb
push
push
push
popf
rcl
mov
fldt
jne
cmc
mov
out
jmp
lret
mov
push
cmp
sbb
xacquire
sti
daa
xor
and
pop
in
inc
adc
mov
push
js
pusha
push
jle
add
mov
xor
aad
push
int3
mov
in
sub
pop
adc
aam
ljmp
push
push
and
repz
stos
or
push
lds
fcom
inc
rep
pop
inc
or
push
std
pop
xchg
or
int
mov
add
inc
cmp
sub
xlat
test
or
xor
xor
sbb
aam
and
or
ror
daa
lea
icebp
push
les
inc
imul
inc
cltd
sbb
push
cli
mov
add
imul
lods
xor
scas
lea
xchg
ret
mov
stc
test
popa
imul
xor
cltd
lods
inc
ret
jbe
lock
jmp
cltd
sbb
or
pop
std
aas
mov
test
icebp
jl
dec
fwait
divl
mov
rcll
sub
fcmovne
xchg
shlb
cmp
fists
xchg
mov
jb
xchg
xchg
lods
mov
push
add
and
popa
je
jmp
xchg
loopne
flds
mov
push
mov
add
xchg
cld
adc
fs
dec
cmp
cltd
outsl
cs
xor
cmp
mov
push
pusha
mov
mov
or
add
sbbl
sbb
iret
dec
or
in
xor
jae,pt
push
icebp
xchg
fbstp
inc
push
inc
cmp
jbe
and
jg
sahf
mov
divps
rcl
in
mov
insl
jbe
insb
sbbb
fs
mov
fsubrs
lret
or
rcrl
sub
ret
cmp
add
fs
lret
pusha
jae
and
xor
sub
imul
xor
cmp
stos
xor
std
dec
jge
lea
mov
sub
into
jae
xorl
or
or
mov
mov
loop
popa
sbb
mov
aaa
mov
jl
enter
fs
cmpsl
xchg
cs
add
push
in
inc
fisubrs
lock
daa
in
lcall
push
xor
mov
jnp
xchg
loope,pn
test
outsb
enter
and
lods
pop
cwtl
enter
xchg
xchg
shrb
fcompl
divl
pushf
mov
sbb
sbb
aaa
lds
mov
fcoml
imul
gs
out
ja
in
adc
dec
xchg
popa
push
mov
jmp
mov
mov
jge
adc
rcrb
orl
and
cmpb
divb
push
mov
sbb
mov
cmp
push
or
xlat
push
dec
sub
mov
js
cwtl
aas
mov
xor
mov
add
cld
xchg
dec
clc
jo
arpl
sbb
into
or
xchg
aam
mov
stos
mov
es
inc
shrl
dec
sbb
mov
std
ficomps
out
dec
xchg
sub
fisubrs
ja
in
or
cld
fisubs
cmp
out
mov
pop
jle
out
test
xchg
push
cld
es
cmpsb
and
or
rolb
sub
dec
daa
decl
filds
jp
pop
cs
pop
inc
outsb
scas
push
mov
dec
jp
inc
push
mov
test
bound
icebp
xchg
sub
adc
mov
pop
arpl
inc
mov
das
sahf
cmp
mov
mov
dec
and
pop
mov
dec
das
int
cmp
jne
or
pop
ret
or
pop
push
push
fildll
mov
or
and
pop
gs
lds
or
std
addr16
sti
xorl
sub
push
int
lods
movsl
fstpl
frstor
dec
out
mov
roll
jecxz
mov
cmc
neg
jb
inc
popf
fiadds
xchg
or
ljmp
lock
pop
and
pushf
dec
imull
adc
notb
add
mov
jp
jns
dec
stos
mov
sub
lock
pop
adc
cltd
fcmovu
dec
xchg
adc
sbb
pop
mov
jg
jg
and
xchg
adc
lret
or
fxch
mov
add
lock
mov
inc
or
mov
or
pop
clc
xchg
loopne
stos
adc
lods
ret
jg
xor
sbb
notl
loopne
mov
lret
aam
inc
mov
fildl
mov
push
sub
ljmp
pusha
daa
and
fstl
aaa
cli
shr
sub
or
rclb
addb
mov
sub
lea
les
fcomps
mov
jl
mov
push
inc
ficoml
cltd
lahf
jl
fdivrs
ret
xchg
jne
hlt
lea
rorb
cltd
jmp
rcrb
sti
js
lret
pop
mov
repnz
test
pop
or
adc
adc
incb
leave
in
hlt
inc
add
sub
or
sbb
cwtl
popa
jbe
shrb
xchg
inc
mov
xchg
mov
rcr
cmp
inc
pop
std
mov
push
stos
bound
and
std
test
lods
xchg
jg
mov
out
cmp
cld
and
fimull
push
sub
pop
xchg
push
faddl
pop
subl
jbe
pop
test
aad
divl
inc
mov
mov
xchg
jmp
mov
mov
rorb
jmp
adc
mov
icebp
out
push
push
mov
xor
xchg
clc
mov
adc
mov
mov
lret
ret
xor
push
push
inc
inc
dec
sub
sahf
xchg
mov
mov
shll
fcmovnu
sbb
comisd
fnstenv
cltd
mov
push
or
outsb
xchg
and
sti
push
mov
dec
jge
shr
add
push
adc
dec
bound
jge
xchg
rcl
loop
pop
add
lods
and
sbb
ret
xchg
cmp
mov
ds
jb
push
sarb
in
fs
sahf
mov
addr16
mov
les
pop
sub
and
adc
aam
and
add
sarl
sarl
nop
cmp
js
and
add
popa
add
mov
ds
pop
pusha
sldt
sahf
hlt
sub
sbb
test
mov
and
sub
xor
sub
loope
add
mov
insl
dec
out
xchg
sbb
insl
cwtl
mov
mov
cmp
dec
lea
add
cltd
jg
adc
pushf
jmp
xchg
shll
xchg
sub
inc
call
int3
out
fdivl
mov
jle
adc
or
xlat
jb
inc
lret
pop
mov
scas
inc
sbb
mov
jbe
xor
push
pop
lods
inc
fdivrl
adc
mov
rdpmc
dec
push
mov
lods
cmp
xor
rorb
outsb
xchg
sub
in
xchg
lods
std
and
sbb
pop
in
cld
push
and
and
xor
movsb
xchg
flds
add
cmp
sbb
mov
sub
jecxz
pop
cld
orl
sbb
adcl
insl
add
aad
xchg
std
xchg
mov
sbb
movsl
xor
lahf
xchg
adc
pop
jbe
mov
sub
jno
sub
mov
push
call
adc
adc
sahf
pusha
cmc
test
or
xor
and
out
adc
or
lcall
push
inc
pop
not
insl
in
cmp
pop
fbld
mov
lret
cmp
push
mov
dec
mov
inc
jmp
lods
int
jae
test
fndisi(8087
pop
pop
nop
scas
lods
aam
test
int
inc
pop
xor
and
sahf
xor
xor
int3
cld
movsl
mov
jmp
lret
xlat
mov
scas
mov
int
xchg
mov
jp
xlat
arpl
sub
mov
dec
addl
into
pop
xchg
or
inc
mov
rep
out
push
jl
adc
neg
adc
lods
test
call
cmp
popa
pop
sbb
dec
imul
add
and
pop
cmp
int
inc
push
lods
fidivrs
sbb
ficoms
xor
pop
fistpll
out
cmp
mov
dec
pusha
push
fisttpll
es
clc
loope
cmc
adc
xor
fnsave
test
mov
mov
mov
mov
pushf
scas
cmp
shll
shrb
mov
fwait
icebp
cmp
xlat
mov
iret
popf
inc
mov
insb
es
xchg
sbbl
lea
movsl
xchg
aad
in
rolb
imul
repnz
inc
and
fldl
bound
das
inc
das
mov
jl
cmp
sbb
imul
push
adc
adc
and
inc
lods
cmpsl
jo
adc
je
je
sub
gs
inc
fistpll
push
mov
push
test
mov
fisubrl
test
inc
shlb
mov
mov
ljmp
or
je
jbe
pop
xor
push
subl
inc
repz
pop
cld
xor
movsb
stos
and
mov
mov
pop
shlb
cmp
inc
adc
cmp
xor
pushf
in
into
adc
jp
pushf
mull
inc
pop
inc
and
jmp
adc
jne
popa
jg
sbb
ret
push
cld
inc
in
push
leave
sub
mov
xor
dec
je
or
push
inc
lahf
popa
xor
hlt
xor
out
mov
out
mov
iret
movb
fbstp
lds
xchg
and
xchg
sarl
stos
inc
sub
or
inc
and
ret
xchg
lods
or
push
mov
mov
xchg
sar
sbb
ror
mov
es
adc
push
jl
sbb
ficomps
outsl
dec
jne
clc
mov
pop
add
nop
sbb
mov
movsb
nop
dec
jg
fwait
in
mov
test
add
sahf
sbb
mov
ret
cmpsb
lea
or
pop
lods
lods
pop
shl
fnstcw
mov
sahf
pop
xchg
mov
fdivrl
xchg
mov
mov
jne
ja
mov
cs
cli
pop
jae
inc
fwait
data16
out
stos
aaa
cmpsl
and
subl
jmp
daa
gs
push
nop
mov
iret
lcall
lretw
add
or
loop
jp
test
or
sbb
mov
dec
lods
sub
inc
adc
xchg
xchg
jnp
int3
mov
int
sahf
inc
addb
push
mov
aaa
out
jne
movsl
sahf
xor
ret
ja
fdivrl
adc
je
fnstcw
xchg
sbb
shrl
in
sti
repnz
add
int
inc
ds
cmp
mov
rcll
push
sub
xorl
ja
nop
sbb
jo,pt
or
dec
inc
adc
sarb
iret
shll
mov
mov
in
stos
xchg
jo
pop
or
mov
addl
imull
pop
addl
std
mov
call
je
pop
sbb
or
aad
cmc
jmp
adc
hlt
jl
pop
mov
test
js
jg
lods
call
mov
push
test
inc
cli
dec
lcall
outsb
cld
jl
push
mov
nop
sti
in
cmp
push
or
inc
sbb
jg
cmc
int3
mov
ucomiss
ret
mov
dec
lods
orb
test
mov
or
cmp
mov
movsl
pop
dec
in
ret
lods
xchg
mov
loope
in
inc
push
mov
nop
push
xor
pop
cmp
sarl
cli
scas
ret
push
inc
cvttps2pi
sub
mov
pop
cmp
xchg
sbb
xor
sahf
sub
sub
notl
stc
mov
adc
lods
jecxz
data16
mov
stc
dec
sub
cmpl
das
imul
push
clc
pop
pop
icebp
adc
dec
mov
test
push
cli
and
push
daa
cmpsl
aad
out
adc
add
js
scas
mov
cmpsb
aas
repnz
hlt
subb
add
jecxz
cli
lods
push
inc
xchg
lds
or
and
test
shufps
xchg
jl
sbbl
pop
loope
mov
mov
pushl
adc
mov
or
add
mov
loop
gs
sbb
mov
adc
movsb
fisttpll
scas
rcll
in
cmc
std
fmul
shll
scas
dec
in
fiadds
shll
enter
xor
mov
push
xchg
out
fistl
orb
push
mov
or
adc
pop
mov
adc
stos
xor
lods
roll
out
fdivrp
test
cwtl
int3
or
sbb
cmp
mov
bound
int3
jecxz
ljmp
rorl
adc
xchg
sub
sbb
pusha
popf
jl
sti
stos
mov
ficoms
cmp
or
cmpsl
sbb
cmpsb
js
arpl
pusha
in
push
sub
and
fstps
sbb
into
or
xchg
mov
adc
loope
jmp
lcall
cmpsl
adc
ja
xchg
ja
cs
pop
dec
lahf
ljmp
cmp
push
push
ss
into
mov
decl
faddl
mov
subb
or
insb
xchg
stos
push
push
add
mov
pop
fdivrl
cltd
lods
cmp
xchg
pop
pop
adc
mov
test
mov
xchg
scas
mov
mov
pop
aas
adc
inc
jno
or
ret
jle
add
or
dec
dec
xor
sti
cmpsb
inc
pop
dec
fsubrl
fstps
add
cltd
insl
je
add
xchg
jne
pop
in
std
or
xor
jae
add
cwtl
mov
and
xor
dec
jns
xorl
scas
leave
imul
mov
fcomi
pop
dec
nop
sahf
xchg
fidivs
mov
pop
xchg
or
pushf
cld
loopne
movsb
fidivs
jnp
xchg
xor
add
adc
cld
test
sbb
add
movsl
mov
xchg
cmp
pop
push
jns
loopew
dec
orl
push
xor
repz
and
repz
in
push
push
xor
lea
add
test
adc
adc
lret
and
mov
pop
in
in
jns
xorb
je
cmp
ror
sub
inc
or
scas
adc
mov
pop
push
sti
roll
mov
dec
adc
jbe
negl
jb
adcl
cli
popf
or
xor
faddl
or
fadds
loop
and
call
xchg
into
cmpsl
jnp
std
imul
xor
daa
aaa
push
out
mov
out
dec
aam
xchg
xchg
fwait
sub
repz
and
add
adc
push
nop
aam
xorl
cmp
add
and
lods
rorl
xor
xor
popa
gs
cmp
sub
hlt
or
jae
std
aam
sub
lret
enter
add
stos
scas
add
mov
shrb
scas
out
lahf
fsubrs
inc
xchg
js
cmp
mov
xchg
ja
and
cld
or
fldl
pushf
and
scas
out
mov
iret
pop
mov
cmp
pop
adc
pop
sbbb
ss
cmp
in
call
les
sbb
add
fnsave
mov
lea
jg
and
fsubs
fs
adc
jle
call
js
fs
idivl
and
or
cltd
push
sbb
mov
int3
jns
lret
test
pop
mov
pop
xor
push
stos
fldt
cmp
nop
xchg
mov
lcall
xchg
int3
inc
lar
mov
gs
roll
hlt
push
push
int
mov
es
cmp
jae
rcll
push
pop
inc
inc
pop
out
xchg
cmp
leave
movsl
sbb
dec
daa
mov
inc
aaa
xor
or
sbb
adc
add
and
clc
cmp
xor
push
jno
mov
jmp
xchg
mov
xor
mov
shll
mov
ljmp
iret
xchg
mov
cmp
push
out
or
stos
xlat
sbb
add
fldl
dec
das
arpl
xchg
cmpl
inc
push
pop
pop
in
in
pop
xchg
adc
in
shll
adc
idiv
lret
stos
inc
sub
test
sub
lds
addl
lods
aas
adc
and
jle
mov
add
jge
mov
int
jnp
jae
pop
mov
xchg
imul
mov
fbld
ds
test
stos
push
pop
nop
sbb
mov
shll
adc
push
imul
int3
aas
pop
add
sbb
gs
leave
and
pop
xorb
lods
cmp
pop
dec
mov
cwtl
lock
cmpsl
add
in
cmp
xor
dec
adc
inc
aaa
jb
int3
mulb
lgs
xchg
repz
xchg
jnp
pop
lahf
inc
hlt
in
cli
or
mov
inc
cs
jbe
lcall
es
or
pop
popf
inc
mov
and
cmp
xor
idivl
dec
sub
aas
adc
pop
data16
mov
and
xchg
sbb
xor
incl
xor
stos
and
inc
mov
out
fwait
rcrl
mov
add
js
pop
cmp
add
aas
ret
xor
mov
mov
sub
push
insb
or
dec
or
sti
movsl
xlat
test
in
js
mov
cmp
lahf
push
sti
mov
mov
fimull
sbb
jecxz
leave
cs
mov
push
add
stc
vmread
je
sti
inc
inc
outsl
xchg
je
jmp
nop
test
dec
scas
sbb
adc
ss
pop
clc
mov
lcall
rorb
lcall
scas
ljmp
imul
xchg
call
push
cmp
movsb
lods
dec
cvtps2pi
lret
divb
lret
or
fadd
jecxz
xchg
std
adcb
insl
lods
shrb
add
in
js
mov
or
mov
pop
movl
pop
pushf
rcr
or
or
xchg
xor
xor
mov
push
sbb
xor
mov
xor
lods
push
cmp
shrl
xor
loop
scas
sarb
outsl
and
xlat
movsl
movsl
fcomip
adc
cwtl
lods
sarb
icebp
push
repnz
push
and
insl
std
push
movsl
pop
mov
inc
inc
add
pop
sar
pop
xor
loopne
jae
testl
in
cmp
loopne
inc
cmp
cli
test
clc
mov
mov
mov
fwait
push
in
adc
les
lret
fdivs
shlb
inc
dec
mov
in
nop
subb
mov
jns
out
fiaddl
sub
sbb
mov
adc
sbb
sub
out
fnsave
xlat
xchg
mov
sbb
pushf
scas
and
adc
push
arpl
xor
in
cmp
jbe
hlt
movsl
sbb
mov
or
sub
loope
cmp
mov
xchg
push
je
adc
loop
mov
pop
cmp
mov
dec
mov
pop
push
loopne
sbb
cld
cmp
cmpsb
jmp
jno
pop
sub
fdivrs
xlat
xchg
stc
fcomps
fisubrs
lret
rcll
mov
or
xor
lcall
mov
movsl
lea
or
rcll
fucom
xor
movsl
fidivrl
mov
popa
sub
cmpsb
test
icebp
mov
push
inc
das
into
add
add
rorb
push
mov
nop
add
rorb
mov
dec
push
cmp
std
adc
or
shrl
divl
add
or
ljmp
pop
je
push
mov
sahf
gs
or
cmp
bound
mov
test
push
fdivr
ss
xor
sahf
in
negl
ret
mov
inc
xor
aam
sub
add
fwait
lret
xchg
push
pop
rcll
cli
jne
sbb
and
cmp
push
sbb
mov
sbb
adc
jmp
nop
xor
notl
add
mov
test
push
add
xchg
mov
outsl
cltd
clc
push
fisubrl
cmp
fstl
mov
push
sbb
and
jb
leave
clc
les
sbb
cmp
push
dec
dec
mov
sub
pop
mov
loop
addr16
sub
sahf
out
fists
movl
ficomps
hlt
jl
cli
sti
mov
das
push
jns
rol
xchg
xor
in
lcall
lock
cmpsl
sti
shlb
jmp
xchg
sbbw
jge
sbb
or
ljmp
and
ret
pop
dec
orb
adc
out
adcb
xchg
cmp
jae
xor
xorb
sbb
jno
mov
push
out
shll
addr16
sbb
mov
nop
in
push
fistpl
sbbl
int
and
mov
mov
in
lea
add
insb
and
out
sbb
add
pop
lods
nop
xchg
rcl
std
mov
push
repnz
sub
cmp
loopne
scas
adc
mov
jbe
xchg
sub
fdivrs
outsb
stos
shll
enter
hlt
add
dec
das
or
xor
jne
int
shrl
xor
inc
pop
jne
pop
mov
bound
jmp
lods
es
lds
jb
push
cmpsl
or
imul
and
jbe
sbb
fcoml
imul
adc
ljmp
iret
clc
pop
push
or
popf
xchg
loope
clc
cwtl
icebp
or
or
or
add
pop
pop
test
pop
fidivrl
push
sub
push
mov
xlat
xchg
ror
lock
sub
idivl
hlt
orb
jno
xor
pop
add
adc
out
sub
sahf
leave
scas
pop
cmc
sarb
mov
aaa
iret
dec
xchg
mov
mov
jb
arpl
xor
cld
push
rcl
add
and
cmp
xor
loop
idivl
ret
movups
lcall
xchg
xlat
in
xchg
or
and
in
mov
scas
in
daa
lcall
jl
in
dec
cmc
jno
into
ret
jns
push
sbb
or
cmp
fstps
add
shr
into
rolb
aad
flds
add
xor
repz
sub
adc
dec
popa
mov
dec
jo
hlt
cwtl
and
jl
sbb
sub
adc
xchg
iret
pop
jmp
push
es
cmp
sub
cs
cmp
mov
fisttpl
rcll
data16
xchg
mov
jmp
xlat
cmp
popa
in
inc
rcll
test
bound
das
push
xor
loopne
push
inc
jb
inc
push
fmulp
xor
jb
cmovo
mov
outsb
aaa
jmp
sub
outsl
gs
or
repz
xor
jb
dec
xchg
fdivrs
pop
and
test
es
les
fdivr
outsb
add
mov
pop
pop
lahf
dec
xchg
pop
xchg
ficoms
mov
add
push
mov
fcoms
mov
sbb
adc
jge
pop
mov
ret
enter
ljmp
inc
jbe
aas
fsub
xchg
mov
ljmp
out
and
mov
movsb
adc
inc
inc
fiaddl
daa
and
stos
add
adc
mov
shr
and
loopne
stc
fcmovne
or
jge
in
mov
js
pop
decl
enter
enter
imul
add
int3
outsb
in
push
push
into
je
ret
ds
mov
jbe
test
addr16
sbb
mov
xchg
scas
push
pop
lret
jno
sbb
les
xchg
xor
repnz
stos
lods
and
loope
inc
inc
mov
rcrl
ffree
stc
test
dec
push
sbb
sub
xchg
call
sub
sahf
mov
fimuls
repz
cmpb
push
leave
sub
mov
cltd
ret
pop
les
out
hlt
add
dec
mov
jmp
sbb
cmp
ss
or
inc
xchg
aaa
and
jns
dec
ret
cmp
rorl
mul
xchg
call
dec
repnz
popa
push
adc
scas
arpl
pop
in
xor
pop
aam
xor
xor
fsubrs
push
adc
pop
sbb
lret
or
pop
bound
lea
pop
test
sarl
and
in
pop
in
push
xor
out
sub
bnd
xchg
adc
jnp
mov
adc
imul
adc
pop
pop
nop
dec
stc
mov
cmp
adc
iret
push
sbb
xchg
cmp
out
dec
out
inc
hlt
jnp
jns
out
ds
roll
mov
call
push
xor
outsb
scas
mov
mov
pop
or
je
and
call
sub
xor
cmpsb
loop
jo
pusha
and
add
add
test
in
dec
stos
inc
rol
addr16
pop
leave
shrl
pop
jb
cmpsl
les
jno
or
adc
or
mov
in
push
shrb
sbb
push
add
je
out
mov
mov
or
clc
pop
xor
lods
bound
test
push
cmc
lds
outsl
in
cmp
mov
xor
ja
sub
pop
lret
rclb
clc
test
shr
xchg
xchg
repz
aaa
add
sub
stos
mov
das
das
dec
add
pop
loopne
cmc
xchg
push
scas
sub
cltd
cmp
pop
cli
push
ss
ret
repz
fcmovu
mov
mov
lcall
xor
jl
jmp
sbb
sub
andb
pop
add
insb
cmc
mov
sub
leave
or
imul
xorl
lods
outsb
in
lea
popa
jns
lahf
or
sub
scas
jns
lret
sbb
jmp
pop
pushf
mov
sub
xchg
or
or
sti
push
mov
into
sbb
cmp
stos
enter
aad
cmp
loopne
icebp
xchg
inc
mov
xchg
jnp
pop
mov
push
daa
out
paddusw
cmp
sahf
aad
pop
dec
sub
stos
roll
testl
fwait
insl
lidtl
xchg
movsl
fisubrl
dec
cli
sub
xor
jne
pop
fsubrl
push
cs
cmp
inc
adc
pushf
jle
lret
mov
repnz
roll
push
imul
pop
bound
xchg
incb
arpl
cmp
popf
cmp
int
pop
jne
push
push
and
mov
xlat
mov
sub
loope
sub
in
sarb
mov
pushf
mov
mov
sub
sub
push
addr16
push
lret
add
sbb
ds
xchg
cmp
sbb
imulb
call
fwait
pusha
or
pop
inc
or
jmp
mov
das
mov
leave
xor
xchg
inc
inc
jne,pt
or
aad
cwtl
xor
inc
popa
sbb
loope
xchg
push
cmpsb
and
inc
add
sub
call
xor
cmp
mov
sar
scas
jnp
xlat
jecxz
and
imul
inc
push
je
int
mov
gs
andb
mov
cli
pop
imul
icebp
push
ss
xchg
cmp
mov
pop
sub
fistpl
cmp
push
out
rol
or
repnz
jne
jge
popa
sub
sbb
add
cltd
and
and
cld
iret
shlb
cmpl
inc
out
or
ja
mov
rorb
les
add
imul
rol
dec
lcall
dec
lret
mov
cmp
cmp
sahf
shr
lret
in
jg
jnp
lea
pushf
sbb
insb
mov
cmc
pop
cli
pop
or
mov
sbb
xor
jns
data16
push
js
bound
ljmp
inc
sub
iret
pusha
xorl
xchg
cmp
xchg
mov
pop
cld
jae
mov
inc
lea
mov
rclb
sub
sbb
fcmovnb
push
cmpsl
test
loop
pop
scas
adc
pop
filds
add
ljmp
fisubl
enter
xor
sub
jmp
mov
pop
jns
test
push
mov
in
xor
dec
mov
stos
fiadds
mov
addr16
sub
xchg
adc
lahf
cmp
std
push
leave
in
sbb
mov
cs
fwait
sahf
and
std
nop
add
xor
xor
scas
pop
pop
jne
mov
or
cmc
sbb
dec
mov
sbb
push
xchg
ret
leave
out
mov
push
xor
mov
flds
lahf
in
xor
xchg
scas
mov
leave
xor
mov
cmpsl
push
and
jge
pop
dec
sub
shrb
dec
mov
test
sbb
stos
fstl
int
cmpsb
jb
inc
in
addl
jl
fdivr
jge
iret
pop
scas
inc
jae
jmp
popa
dec
mov
pop
in
in
outsb
lret
mov
aaa
xor
push
andl
xor
add
and
lods
xchg
cwtl
imul
cmpsl
call
lret
and
hlt
int3
push
ljmp
pop
out
add
and
subb
jo
mov
cltd
movsl
in
aas
mov
cmp
addr16
imul
imul
das
mov
mov
adc
test
push
pop
push
adc
xchg
jnp
in
cltd
loopne
pop
push
xorl
push
shrl
pop
mov
lret
repz
sub
jb
mov
sti
cmpsl
mov
ja
movsb
iret
push
pop
mov
add
lds
xchg
rcrb
fldcw
lds
cmpb
fimuls
push
into
loop
aam
into
inc
xor
mov
test
cmp
fldenv
add
inc
jmp
leave
sbb
mov
out
mov
lock
loop
cmpsw
mov
idiv
push
imul
inc
push
jbe
push
jb
sti
test
notb
cmp
addb
sarb
out
pop
popa
mull
testb
sub
dec
gs
addr16
mov
mov
xchg
mov
cmp
mov
loop
sbb
add
imul
repz
loope
mov
jb
cli
rcrb
je
jmp
push
call
call
mov
adc
cwtl
data16
dec
xor
call
mov
lea
mov
jne
bound
pop
xor
add
push
ds
cltd
push
add
daa
cmp
xchg
int3
cltd
cmpsb
cmp
pusha
mov
pop
mov
inc
in
inc
fmuls
mov
or
jbe
jecxz
fsubrs
sub
jge
je
dec
mov
pop
je
ret
jns
dec
or
mov
sbb
sbbb
adc
dec
mov
xor
adc
and
icebp
lcall
mov
int3
mov
or
adc
outsb
push
sahf
pushf
mov
mov
or
push
enter
ljmp
jg
mov
bsr
sub
or
cmpsb
inc
lods
outsb
cwtl
sub
hlt
adc
mov
sub
mov
cmc
loopne
push
lods
xor
or
orl
mov
cli
push
popf
lcall
push
lret
rcll
ja
inc
mov
xchg
push
inc
dec
fldl
sbb
mov
and
ja
sub
jecxz
add
jge
mov
jg
push
cmp
mov
ja
or
sub
out
jbe
sub
inc
aaa
mov
andb
xchg
push
lcall
sahf
jae
outsl
pop
sbb
aad
mov
jbe
mov
and
insb
js
aaa
or
inc
stos
lds
dec
push
mov
ljmp
sbb
sbb
lock
and
das
sbbb
jbe
jl
mov
aaa
aam
and
lea
imul
sub
mov
pop
inc
hlt
mov
in
mov
sti
js
pop
xorl
loop
outsb
push
sahf
push
shrb
adc
nop
cmpsb
popf
inc
xchg
stos
inc
adc
out
cmpl
pop
sbb
test
stc
push
shld
dec
test
mov
xor
cltd
repz
ljmp
xor
mov
push
xchg
dec
das
enter
ret
repnz
ss
jle
lcall
fldt
add
insl
cmpsl
and
pop
and
mov
push
loopne
xor
gs
lods
cmp
add
sub
shlb
or
cmp
jns
mov
subb
push
stos
adc
add
into
mov
int3
inc
fcomps
pop
je
and
fwait
iret
std
out
adc
aas
and
fistpl
cmp
xor
iret
scas
in
dec
push
negl
imul
jns
pop
int3
lcall
jne
aaa
and
cmp
fistps
push
scas
je
ljmp
lret
push
popf
fmuls
sub
addr16
xor
and
out
add
movsb
mov
lds
pop
inc
divb
sbbb
xor
into
lods
es
add
fldl
jmp
push
mov
dec
lock
gs
jo
pop
data16
and
adc
and
push
push
test
or
hlt
lret
cmpsl
daa
sbb
push
jmp
add
out
xchg
mov
and
cltd
push
push
loop
sbb
mov
xchg
ficompl
lret
out
into
jp
mov
sarl
mov
cmp
in
and
pushf
pop
nop
outsb
andl
inc
mov
int
insb
mov
sbb
mov
imul
addr16
adc
ret
out
in
xchg
push
mov
push
dec
push
mov
std
xchg
ljmp
test
or
mov
inc
or
cmp
inc
push
xchg
dec
sahf
fisttps
imul
jl
ds
and
and
or
aas
notb
jbe
lcall
shll
xchg
lret
aas
fwait
add
shll
dec
pusha
push
jae
xchg
xorl
adc
adc
push
pop
and
pop
push
sub
jmp
inc
insb
std
push
or
stc
dec
enter
lcall
ror
and
dec
psubsw
pusha
in
sub
stos
add
dec
mov
push
add
and
stos
sbb
xchg
rcrb
cmp
fmulp
js
push
push
pop
into
mov
int
cmp
push
rcll
loop
push
popf
mov
aas
push
fnstenv
dec
outsb
call
dec
insb
into
scas
es
xlat
stc
xchg
cld
nop
mov
adcl
push
mov
push
aas
adc
test
cmp
pop
cs
push
in
in
int3
pop
cmpsl
movsl
jno
popa
xchg
aam
in
ds
sti
mov
int
mulb
pop
push
es
cwtl
mov
lock
xor
out
and
push
xor
xchg
push
fdivrl
sahf
mov
fisubs
dec
pop
pop
fstpl
mov
jge
ja
das
push
aam
lods
je
lock
adc
in
sub
mov
jnp
popf
xchg
cmpsl
adc
and
dec
fstl
stos
cmp
in
mov
mov
jge
lret
int3
in
test
filds
jg
dec
stc
leave
inc
orb
cmp
and
mov
cmp
fidivs
cmp
shlb
icebp
mov
xchg
cs
xlat
push
lret
int
dec
xor
xchg
mov
sbb
push
cmp
mov
cltd
dec
mov
jl
jle
negb
push
fnsave
dec
xchg
je
fisubs
hlt
insl
add
dec
aas
pop
loope
out
call
pusha
popf
setno
or
xchg
mov
push
test
adc
in
pop
andb
xor
iret
jns
repz
add
push
dec
pop
in
xchg
popa
fistpl
aam
xor
inc
outsl
movsl
rolb
cmp
leave
out
incl
dec
or
arpl
adc
sbb
xchg
scas
or
xchg
mov
popf
mov
jle
xor
out
inc
sbb
mov
shlb
pop
mov
sub
adcb
popa
aam
mov
es
pop
test
lods
xchg
and
or
push
or
mov
fcoml
push
out
push
or
inc
mov
imul
dec
mov
fs
xchg
cmp
adc
dec
mov
cmp
ja
xor
xchg
jg
sub
lret
mov
and
dec
adc
fiaddl
ret
jge
xor
popa
mov
jp
mov
cs
lret
int3
pop
push
in
xor
ret
xor
std
or
mov
xchg
pop
ljmp
std
pop
popa
js
xor
dec
je
lock
sub
pop
jb
fistpl
lret
pop
and
add
or
insl
sub
repnz
or
leave
or
push
mov
sub
stos
mov
push
jae
les
push
repnz
xor
sbb
lock
loope
lock
adc
lods
int3
and
das
std
cmovns
pop
xchg
aas
int
movsb
into
pushf
and
cwtl
push
mov
imul
mov
movsb
mov
sar
rorb
pop
bound
daa
fcmovnb
out
sti
lods
dec
fldl
leave
sub
mov
aad
cmpsb
rorb
in
daa
cmc
sub
pop
xchg
mov
jno
and
cmc
add
and
into
xor
inc
rcrb
jb
cmpb
xchg
out
scas
hlt
fistl
cwtl
ljmp
scas
xchg
lret
mov
shl
imul
jb
mov
pop
iret
xchg
inc
mov
xor
lds
test
lret
jnp
loop
push
xchg
sbb
popf
adc
sti
jecxz
pop
mov
add
out
outsb
xchg
and
sahf
cs
or
add
cmp
jecxz
pop
jb
pop
mov
or
adc
loopne
xchg
lret
addr16
std
scas
and
in
xorb
xlat
ret
mov
push
cmpb
push
ffreep
mov
cmc
xchg
add
and
push
jmp
xchg
cmpsb
pusha
xlat
pop
push
adc
xor
xchg
push
nop
lods
ficomps
cmp
arpl
ljmp
push
inc
xchg
aam
mov
push
jb
inc
add
and
jg
mov
mov
push
xchg
push
sbb
mov
fnsave
adc
and
arpl
cltd
sbb
xchg
pusha
stos
xlat
xchg
lret
adc
lods
or
loopne
push
arpl
hlt
iret
roll
movsb
imul
cld
leave
push
adc
jecxz
or
clc
scas
xchg
rorb
sub
push
jle
bound
jno
push
je
push
dec
dec
dec
cmp
mov
mov
cmp
loop
mov
in
rorl
ret
paddusb
repz
mov
jbe
mov
sub
inc
pop
scas
sub
ret
inc
fnstcw
xchg
xor
icebp
sub
fs
sbb
mov
es
fisttpll
push
ljmp
mov
hlt
cmp
sbb
data16
xlat
jg
sbb
arpl
push
or
aad
mov
adcl
cwtl
or
leave
call
mov
das
mov
pusha
mov
pop
add
xor
aas
in
mov
jecxz,pn
scas
cmp
push
push
push
inc
loope
push
into
pop
add
hlt
fstl
xor
push
jmp
lea
aaa
loopne
imul
push
jle
outsl
pop
and
adc
leave
dec
aas
sarb
dec
js
push
in
jno
ficompl
jle
gs
sbb
pop
mov
outsb
scas
pushf
or
fcmove
test
aad
or
shll
jo
xlat
sbb
sub
out
int
ja
sub
cwtl
outsb
and
inc
pop
and
sub
push
dec
ja
add
adc
pop
add
fisubl
stos
jmp
jmp
push
inc
cmp
add
jns
hlt
sbb
lahf
loopne
jae
xchg
mov
ds
and
out
iret
outsb
cmp
je
ror
leave
jle
adc
xorb
cmc
jp
sarb
jb
cmp
in
adc
aaa
inc
mov
iret
cltd
mov
ficomps
test
out
mov
or
out
pusha
xchg
ret
sub
xchg
movsl
in
jno
pop
jg
mov
decl
cmp
jp
pop
adc
mov
testl
inc
cmp
fcompl
adc
or
add
in
int3
lret
pop
lock
jbe
ret
add
xor
inc
mov
in
mov
xchg
arpl
push
movsb
fcompl
mov
mov
xor
inc
jmp
aad
jne
sahf
pop
in
jo
push
xlat
dec
nop
push
or
adc
std
or
inc
sbb
subb
inc
dec
out
pop
cli
loopne
out
insb
mov
dec
push
test
or
je
movsl
adc
sub
sub
adc
cmp
pop
push
fucom
fldt
imul
adc
insl
jne
jp
jo
adc
cld
inc
aam
repz
out
in
movb
pushf
jp
dec
jg
int
adc
mov
pop
mov
jo
cmpsl
xor
sub
movsl
in
push
xor
jp
lahf
lods
add
mov
shl
insb
lock
rorl
scas
pop
xchg
adc
loopne
repnz
je
mov
add
xor
sti
jo
jl
scas
lock
mov
lea
in
dec
jp
pusha
dec
movsl
jnp
nop
in
push
daa
repz
loopne
push
in
sbbl
mov
nop
pop
lods
mov
push
ljmp
dec
sti
sub
dec
inc
mov
pop
aaa
add
fisubrl
pop
pop
out
lods
and
mov
mov
cld
xlat
dec
adc
cmc
nop
mov
cmp
xchg
fimull
loope
stc
test
movsb
mov
hlt
push
fwait
pop
cmp
sbb
sub
addr16
mov
mov
sbb
fstpt
lea
stos
pop
bound
ret
mov
push
int
ret
jo
loope
scas
mov
lahf
dec
sub
lds
daa
sub
ja
movsb
les
lahf
pop
stos
jge
hlt
arpl
sbb
cmpsb
fistpll
fisttps
stos
pop
adc
mov
pop
repz
mov
xchg
push
test
sub
adc
push
cmp
and
push
or
xchg
ds
xor
lock
push
ficomps
or
clc
sbb
call
leave
ss
add
pushf
fnstenv
push
jecxz
cmpl
sbb
and
daa
sbb
mov
and
loopne
arpl
in
rclb
scas
mov
scas
insb
xor
sti
cli
test
ja
mov
sahf
ja
pop
loopne
xchg
pop
stc
jge
loope
jns
sbb
int3
in
cmp
pop
mov
pop
lods
dec
jb
mov
dec
ds
fidivl
das
cmp
jbe
pushf
ja
sbb
mov
xor
decb
pop
mov
jp
mov
or
out
lret
test
pop
push
into
lea
dec
insl
mov
mov
dec
jg
clc
lcall
jp
and
ss
movsb
jge
leave
imul
fsubrs
fsubr
add
xchg
lds
out
sbb
sbb
xlat
sbb
enter
icebp
js
inc
jb
jp
shll
xchg
mov
jnp
inc
xchg
and
or
cmp
cs
ljmp
jae
inc
stc
in
push
cli
pop
inc
leave
push
ja
out
fmul
or
outsb
add
in
fs
das
pusha
inc
test
cltd
imul
push
jae
mov
pop
jns
mov
or
sbb
ja
mov
xor
and
adc
adc
cmp
mov
mov
mov
adc
pop
mov
sbb
pop
mov
les
shll
sarb
pushf
xchg
sub
js
fldt
into
and
ja
sub
clc
lret
adc
jmp
addr16
xchg
mov
mov
test
dec
cmp
inc
sub
inc
rcrl
das
mov
cmp
les
pop
pop
lcall
int
xchg
adc
dec
orl
lcall
enter
ss
mov
mov
outsl
push
mov
iret
sub
movsl
cmp
loopne
add
mov
cmpsb
insb
mov
or
mov
cmpsb
popa
inc
push
mov
int3
call
lret
pop
inc
clc
or
xor
movsl
push
rolb
loop
inc
xchg
aaa
lahf
cli
fdivl
jmp
clc
push
jle
sub
inc
add
mov
rcr
aam
xchg
repnz
or
and
jle
test
sbb
pop
xchg
adc
push
xor
sub
mov
push
shl
ja
xchg
and
pop
adc
inc
mov
mov
or
sbb
add
andl
xchg
cmpsb
out
and
mov
sub
mov
xor
scas
stc
scas
lahf
sub
adc
inc
fdivl
push
hlt
ss
inc
cmp
mov
sbb
loopne
int3
leave
xor
lea
push
sarb
sbb
mov
fldcw
adc
xchg
loop
or
out
xor
cmp
shr
aaa
mov
mulb
fbld
cltd
jo
nop
sbb
xor
xchg
aam
mov
out
iret
push
imul
add
xor
lret
push
sub
repz
shl
in
mov
ss
js
fnstcw
sub
es
loop
jp
out
xchg
jp
lret
addr16
sbb
cmp
scas
stos
cmp
pop
and
add
and
sub
pushf
ret
outsl
jmp
cmp
xlat
mov
xor
jmp
or
stos
jne
pop
or
cmp
xor
out
jbe
sbb
mov
adc
pop
mov
lods
xchg
mov
sbb
add
mov
rclb
push
and
cmp
mov
adc
push
rcr
fcomps
fsubr
in
negl
jg
push
addr16
call
pop
lcall
pop
sahf
repnz
pcmpeqd
stos
insb
leave
lcall
sub
jmp
aam
pop
pop
xchg
dec
mov
dec
sub
mov
pop
cmp
jo
dec
adc
in
repz
adc
and
and
pandn
outsl
rclb
mov
xor
xor
cld
mov
test
pop
cmp
push
pusha
mov
test
rcl
imulb
jbe
sbb
aas
cmp
aad
ja
mov
outsl
fwait
repnz
leave
add
incb
push
push
push
cmpsl
cmp
js
shrl
pop
xlat
stos
fnstenv
jge
jns
enterw
test
inc
scas
add
jno
ss
sub
adc
mov
add
lods
cmp
pushf
mov
cmpsl
sub
jmp
clc
add
fwait
and
das
imul
rorl
sbb
push
gs
ret
popa
xor
jl
push
into
faddl
jno
adcl
cmpsb
or
cmp
fmuls
push
and
push
cmp
cltd
pushf
mov
and
sub
adc
adc
inc
js
dec
lret
push
pop
xchg
push
imull
jne
jns
into
inc
push
mov
xlat
pop
dec
jae
popa
lds
mov
pop
mov
dec
andl
sti
pushf
jmp
fdivl
fisttpl
cmpsb
cltd
rolb
jle
xor
push
xor
jge
pop
mov
fsubrl
fisubrs
fdivr
out
sbb
dec
add
cmc
adc
insb
cmp
fildl
test
hlt
testl
jbe
int
push
inc
xor
ja
mulb
int3
jae
jge
aad
loopne
daa
arpl
xchg
stc
jbe
testl
sub
sub
sbb
and
shlb
cld
insl
inc
xchg
insl
or
je
pop
notb
fcompp
adc
out
adc
scas
stos
scas
sub
cmpsb
shll
mov
movsb
out
dec
loop
add
test
cmp
cmpsl
mov
les
mov
into
popf
jmp
fimuls
push
sbb
in
mov
mov
insb
clc
loop
add
cltd
or
out
mov
or
push
pop
popa
pop
mov
dec
icebp
add
xchg
xor
inc
inc
jne
cld
cltd
sub
mov
cltd
leave
jno
jecxz
fisttps
fnstcw
jg
dec
push
jmp
cmp
pop
fldcw
js
cmp
stos
mov
ljmp
cmp
cmp
xor
mov
mov
icebp
arpl
and
lock
dec
dec
repnz
fdivrs
shrb
xor
ja
xor
cmc
pop
pusha
xchg
sub
pop
xchg
pop
xchg
aam
xchg
or
add
imul
inc
and
mov
lea
sarl
fdivs
add
dec
add
or
into
in
adc
jge
mov
mov
pop
mov
cmpsb
cmp
inc
ds
fisubrl
sbb
jnp
repnz
in
inc
add
lds
ret
rcrb
mov
or
jle
dec
cs
shl
sub
mov
addr16
inc
push
fdivs
inc
mov
push
cmp
ja
lcall
push
or
or
cmp
dec
stos
bound
xor
sbb
add
cmp
xchg
adc
test
mov
cmp
inc
clc
nop
or
mov
sub
mov
or
popf
adc
daa
push
mov
cld
cmp
ret
jns
arpl
out
xchg
mov
xchg
gs
addb
push
adc
cmpl
pop
adc
jge
jp
fsubr
addr16
xor
mov
pop
dec
mov
push
jmp
inc
es
minps
test
xor
icebp
mov
insb
lcall
cmp
lret
lods
dec
outsl
movb
dec
rol
xor
mov
cltd
fucomp
mov
sub
insl
dec
jb
neg
cli
push
cli
inc
outsl
addr16
movsb
dec
jp
inc
xchg
cmp
pop
lock
push
stos
loop
add
jmp
in
cwtl
cmpsb
xor
dec
xchg
inc
push
adc
push
push
push
push
aam
sub
into
cmp
pushf
push
adc
loope
cmc
xchg
es
mov
mov
ss
pcmpeqd
cmp
test
fldenv
push
dec
xor
out
loopne
dec
xchg
and
xchg
mov
push
call
movsb
int
lea
and
fnsave
inc
cmc
popa
fs
cld
loopne
imul
aam
cmp
sbb
and
push
lcall
test
mov
popf
mov
jne
in
push
popa
subb
push
adc
test
sbb
addr16
ficoms
pop
sti
inc
mov
inc
push
enter
push
xchg
outsl
cmp
or
test
pop
adc
cmpb
jle
cwtl
cmpsl
xor
pop
jl
stc
adc
sbb
loopne
mov
adc
mov
jno
mov
lds
xchg
jns
or
out
sub
lods
popf
movsl
ds
stc
test
inc
test
xchg
ljmp
out
out
sbb
movsb
add
lds
add
insl
lock
jo
adc
andl
ret
leave
ret
fildl
fdivl
sub
or
add
pusha
gs
or
add
mov
jno
jg
aam
jb
jns
pop
mov
xor
insl
ret
movsl
cltd
mov
lods
enter
movsl
clc
xchg
jl
add
outsl
mov
xor
testb
push
pop
inc
movb
insl
pop
testl
mov
cmp
fcoml
insb
sub
int
imul
mov
mov
xchg
and
dec
jecxz
inc
push
cld
inc
cmp
pop
sub
adc
ret
scas
dec
out
xchg
scas
test
movsb
imul
test
ret
test
mov
hlt
inc
mov
add
jg
xor
sarl
sbb
data16
adc
xor
sub
int
mov
jae
mov
notl
je
or
sbb
out
subl
ficomps
test
fcomps
lahf
jl
xlat
cmc
jbe
cmp
int3
in
mov
push
dec
aam
fs
movsl
icebp
fld
test
sbb
pop
sub
mov
pop
pop
enter
or
xor
add
cwtl
and
js
mov
mov
jge
hlt
add
mov
stc
mov
pop
inc
test
jno
cmpsl
ja
jp
ret
je
xor
jno
add
jmp
inc
and
jle
or
xchg
pop
test
jns
inc
mov
loop
inc
jle
loop
xchg
aam
dec
cmp
mov
or
lods
pop
cmpsl
jb
loop
cwtl
in
pop
xor
lock
stos
xchg
pop
pop
iret
sbb
mov
and
fs
and
cmp
lock
clc
clc
mov
hlt
cwtl
cmp
push
jg
adcl
or
mov
sub
sub
or
dec
es
dec
ds
repz
fs
xchg
jmp
shll
ror
mov
shrl
or
scas
repz
fisttps
icebp
lock
daa
xchg
pop
push
shlb
loop
fmulp
popf
ret
pshufw
lods
inc
xor
inc
add
push
cmp
scas
hlt
jne
push
pop
xor
scas
jge
lret
enter
pushf
mov
pop
fs
movsb
adc
movsb
push
inc
test
mov
dec
xor
fiaddl
out
pop
pop
add
mov
or
cmp
mov
movsl
cmp
stos
out
sbb
cld
popa
insl
lods
aas
mov
inc
sahf
add
or
scas
adc
daa
pop
data16
pop
lret
mov
mov
mov
in
pop
aad
comiss
pop
mov
cld
mov
icebp
push
cmp
pushf
mov
mov
cmp
outsl
stc
scas
xchg
fistpll
cmp
dec
xchg
add
mov
inc
xchg
daa
popa
xchg
push
test
dec
nop
rol
sti
mov
adc
aam
cmpxchg
stos
mov
adcl
push
lret
rcrb
dec
push
adc
int3
mov
movsb
pop
cli
clc
test
iret
pusha
stc
cmpsl
sub
xchg
sbb
imul
imul
std
push
fldcw
lds
sub
rol
pop
sub
sbb
out
sub
and
cmc
outsb
sub
add
sarb
sbb
add
call
pop
pop
imul
fistl
in
adc
cmp
shl
xor
adc
sub
inc
push
out
fmull
ljmp
inc
jge
push
mov
nop
shlb
sbb
push
dec
mov
pop
std
idivb
xor
sub
inc
movsl
lock
add
pop
jl
ficoms
inc
xor
stc
arpl
push
push
rolb
mov
scas
mov
jno
les
cli
pop
xlat
fadds
bound
sub
mov
repnz
adc
sbb
clc
pop
mov
mov
out
push
push
xchg
frndint
test
xchg
inc
pop
inc
pextrw
sahf
out
loope
test
add
adc
inc
add
popf
test
add
xchg
push
xchg
add
les
test
test
push
lret
repnz
pop
sub
jp
cs
ss
aas
inc
cwtl
in
filds
mov
push
arpl
fsubs
insb
les
and
jns
cmpsb
dec
inc
mov
cmp
lods
loope
ret
in
insl
imul
cmp
xor
cmpsb
mov
xchg
cmp
fidivrl
and
imul
jg
pop
ret
mul
dec
mov
mov
gs
or
loope
mov
div
inc
pushf
push
cmpsl
into
lret
push
mov
pop
test
ficomps
sbb
jno,pn
cmp
ficompl
aas
jnp
out
in
in
ja
stos
mov
push
repz
mov
cmp
pop
sahf
in
xor
dec
jmp
rorb
inc
push
fiaddl
test
in
shrl
xchg
jge
jl
loop
adc
jecxz,pn
pop
sarl
jg
mov
fsub
addr16
push
and
scas
fs
mov
add
xchg
ljmp
sbb
and
cmpsl
jge
test
jge
aad
orl
arpl
aaa
out
cmp
aaa
xchg
cmp
outsl
push
cld
fs
mov
out
add
testl
sub
inc
icebp
cmp
shlb
je
loop
adc
lret
out
sbb
mov
pop
test
int3
sahf
dec
push
nop
xor
fld
std
imul
dec
stc
aas
push
into
enter
mov
stc
mov
and
fcomps
cmp
sub
xor
jb
cmpsb
jns
xchg
sub
ljmp
xchg
scas
mov
pop
js
xor
iret
or
stc
pushaw
movsl
pop
mov
js
pop
fcom
pop
pushf
mov
ret
xor
or
or
xchg
xchg
insb
fsubl
mov
repz
xchg
imul
mov
add
je
sahf
je
jo
and
adc
fldt
imul
inc
mov
sub
sub
mov
test
outsl
nop
sub
outsb
andb
inc
pop
repz
inc
into
js
cltd
xlat
xchg
scas
loope
fsubr
adc
xchg
mov
pop
dec
mov
or
adc
imul
lcall
sub
jl
jno
xor
movsb
int3
jb
jns
add
les
dec
loopne
and
fucom
jp
ja
inc
scas
rclb
sub
xchg
rcr
fs
and
ret
stos
sub
xchg
sub
push
mov
sub
sbb
lock
mov
pop
inc
dec
xor
or
push
mov
cmp
mov
adcb
stc
xchg
push
pop
jecxz
jge
jbe
sbb
out
xlat
jge
test
cmp
repz
leave
test
fsts
in
das
or
add
cmp
fs
out
js
sarl
cmp
repz
mov
sub
mov
dec
sbb
test
mov
xor
in
and
mov
sub
arpl
insl
mul
shrb
mov
or
lds
push
cmp
jo
inc
lods
sti
push
ffree
mov
sub
repz
jmp
test
cmp
inc
fldcw
dec
cmp
xor
cmp
test
stos
ljmp
mov
jbe
xchg
adc
call
mov
cli
cmp
ds
jne
lods
enter
aam
or
pushf
cltd
mov
movsb
es
testb
clc
stos
and
fwait
cmc
cs
jo
xchg
cld
cld
repnz
out
mov
mov
xchg
movsb
xchg
in
popf
imul
mov
jbe
js
cld
adc
and
mov
mov
sub
push
lea
push
divb
pop
rclb
jp
inc
lods
inc
ret
dec
cmp
mov
mov
lret
dec
sub
fildll
jle
pushf
jg
call
popa
and
adc
aas
iret
push
in
ret
cmc
dec
mov
bound
imulb
jbe
sbb
in
inc
jno
jmp
sti
push
adcb
inc
cltd
ljmp
dec
scas
mov
push
mov
cmpsl
xor
pop
dec
add
xchg
sub
push
jmp
iret
mov
icebp
sub
shrb
xor
popa
or
push
mov
clc
jmp
leave
pop
mov
push
and
cmp
jns
push
and
sub
loopne
in
fstps
mov
mov
cmp
mov
sbb
dec
pop
cmc
cmp
rcll
xchg
shlb
lea
std
xchg
sbb
xor
int
pop
in
int
gs
xchg
inc
pop
mov
pop
cmpsb
sub
push
push
cld
movsb
adc
jne
jb
pop
je
lea
push
dec
ret
and
jg
sub
fstps
inc
addr16
out
mov
scas
mov
sub
add
dec
shrl
dec
or
sub
out
shll
and
lods
dec
call
cmp
enter
adc
cmpsb
es
imul
ja
add
push
rorb
sbb
mov
stos
aad
mov
add
pop
sbb
pusha
dec
dec
cvtps2pd
cld
xor
inc
push
jae
cmp
fucomp
jo
cmp
mov
xor
mov
in
adc
dec
fsubrs
push
pop
adc
and
daa
sbb
cmc
cld
sti
pop
push
xchg
xchg
sbb
push
int3
push
xor
repz
mov
dec
jmp
cli
sub
pushf
xchg
sbb
jecxz
mov
mov
lahf
cmpsb
or
jge
or
scas
int3
pop
scas
lea
lods
inc
mov
fwait
pop
xchg
xorb
pop
cmp
or
fs
mov
mov
or
mov
imull
xchg
push
dec
mov
dec
fcompl
mov
ljmp
push
cmp
cmc
fadds
and
cmpsl
pop
mov
rcrb
sbbl
dec
lock
cli
loope
cmpsl
inc
mov
pop
add
mov
push
stc
enter
fisubrs
xor
dec
lahf
dec
scas
cld
cmp
push
adc
mov
xorb
data16
cmp
or
incl
fstpt
dec
jmp
xchg
lock
adc
inc
push
cld
stos
pushf
xor
push
ret
cmp
jl
imull
lock
imul
cmpsb
mov
cli
cmpsl
jg
clc
shlb
adc
sbb
aas
out
fdivp
pusha
mov
mov
or
mov
jbe
or
stos
push
stc
xchg
lret
mov
xchg
cmp
cmpsb
jp
mov
popf
pop
filds
arpl
aas
insb
hlt
and
mov
pusha
es
subb
pop
sahf
inc
fisubrs
cmp
cmpsl
sub
cmp
mov
jl
rcrl
dec
adc
inc
inc
add
dec
dec
mov
cli
cmp
cwtl
add
sbb
scas
mov
and
aam
out
pop
in
pushf
pop
jbe
sub
loopne
cli
orb
pop
push
in
mov
cld
test
das
lret
xor
dec
lret
cld
frstor
les
rcrb
je
dec
test
sbb
push
bound
jg
mov
cmp
mov
push
aam
out
popf
sub
and
loope
push
mov
and
int
ret
cld
test
enter
add
fiaddl
outsl
lcall
mov
adc
pop
into
mov
mov
sbb
mov
call
push
insb
or
and
loop
shrl
dec
mov
fiaddl
adc
imul
mov
adc
inc
fucomi
cmpsb
mov
movsb
fildll
or
push
ja
inc
loope
out
lds
shll
shrl
fildll
jecxz
sub
push
mov
insl
outsl
sub
mov
stc
push
pop
jnp
gs
cmc
mov
push
js
adc
xor
push
adc
outsl
in
sub
cmp
imul
into
pop
xchg
jbe
aam
aaa
fistl
pop
test
outsb
stos
mov
pop
add
lods
rclb
out
cld
iret
add
or
cmp
jo
or
sbb
mov
sub
add
sbb
push
push
mov
es
pop
sub
jecxz
shrb
imul
movsb
in
pop
pop
inc
sub
jno
sbb
mov
int3
sbb
out
xor
inc
jp
dec
sub
stos
mov
aad
lcall
cli
adc
and
cmp
aas
jecxz
push
lret
fdivs
dec
xchg
xor
lahf
outsl
repnz
or
ret
hlt
iret
out
xchg
push
mov
add
jmp
pop
cli
sub
mov
push
decl
adc
das
add
faddl
gs
notl
lods
fsts
xchg
mov
push
cmp
das
jmp
jge
clc
cld
xor
jmp
add
jg
jmp
int3
cmp
add
add
in
ds
push
jl
cmpsb
pop
popa
xchg
push
or
mov
mov
pop
inc
cmp
dec
cmp
faddl
fwait
inc
xor
dec
out
in
ds
cmp
fnstsw
and
pop
subps
xchg
mov
pop
xor
xor
pop
mov
incb
mov
cmpsb
mov
dec
add
ss
sub
or
jl
xor
inc
test
jmp
adc
leave
dec
add
dec
outsb
shlb
ret
xor
pop
adc
loope
xor
es
mov
lods
arpl
xor
icebp
pusha
jnp
mov
xor
xchg
pcmpeqb
dec
xchg
adc
into
mov
pop
outsl
mov
mov
call
jo
out
dec
and
pop
jnp
pusha
jbe
jno
inc
push
and
inc
mov
dec
and
lods
pop
xor
mov
or
shrb
ja
inc
fbstp
cmpsb
adc
mov
aas
pusha
test
aaa
or
cmpsb
sub
cmp
mov
ret
es
adc
fdivrs
stos
add
inc
xchg
cld
bound
in
mov
jge
ret
jnp
sbb
ja
push
sti
aaa
leave
std
repnz
pop
pop
xor
mov
sbb
jo
inc
cmp
mov
out
cld
test
mov
dec
xchg
adc
dec
push
rolb
lods
arpl
scas
test
xchg
add
jl
dec
outsb
popf
jns
lret
cwtl
mov
iret
sub
pop
xchg
mov
sar
dec
int
lods
imul
or
cmp
cs
jp
push
push
mov
test
lret
mov
mov
mov
add
in
sti
mov
orl
ss
shrl
jp
dec
xchg
aas
sbb
outsl
rclb
pop
jmp
gs
sarl
jmp
jp
mov
jp
insb
sub
mov
imul
and
jp
int3
enter
je
aas
fwait
mov
sbb
in
lods
or
shrl
ja
fldpi
sbb
jmp
mov
bound
jmp
or
xchg
inc
ret
push
mov
xchg
mov
fwait
orl
mov
popf
jmp
jnp
flds
push
pop
lock
dec
rclb
jbe
jp
sbb
jb
xor
cmp
sbb
in
mov
inc
push
aas
aad
orb
out
add
push
pop
xchg
rcrb
mov
aam
mov
xor
movb
fistpl
clc
xchg
cwtl
sub
fdivl
clc
xchg
orb
add
ds
inc
mov
popa
cmp
stc
mov
dec
outsl
nop
lret
hlt
stos
test
jbe
ret
cmp
or
sahf
cmpsl
xchg
aam
jmp
and
jb
shlb
out
push
ljmp
mov
inc
mov
syscall
in
andl
lret
cmp
sub
aas
mov
sahf
fisttps
movsb
jmp
add
out
lret
xchg
in
xchg
lods
in
push
aam
ds
sub
push
rcrl
fiadds
push
push
hlt
adc
out
mov
pop
sahf
xor
aaa
ss
jno
adc
xor
or
adc
repz
inc
or
fwait
test
pushf
ds
mov
jecxz,pt
les
je
push
mov
test
repz
or
js
mov
mov
xorb
push
in
add
xchg
ficompl
rcll
inc
cmpsl
rol
lcall
icebp
iret
test
pusha
insl
loop
push
loopne
dec
jle
fists
cmpsl
bound
dec
in
jb
in
mov
mov
sub
push
out
cmp
xchg
push
fisttpl
ss
xor
orb
dec
in
lcall
sub
fwait
es
aam
adc
dec
dec
jae
shlb
mov
adc
int3
fwait
or
xchg
lret
add
or
push
cmp
cmp
or
jo
jge
fisubl
sub
and
arpl
fnsave
inc
mov
or
lret
sub
xchg
sti
out
mov
mov
pop
std
mov
adc
lods
xchg
mov
jmp
call
mov
sbb
sbbl
enter
jno
sub
es
sub
rcll
sbb
push
cwtl
mov
push
dec
push
xor
dec
stc
inc
or
lahf
push
sub
int3
jl
std
dec
sbb
je
adc
arpl
xchg
aas
push
mov
ljmp
and
xlat
xlat
push
push
mov
mov
inc
mov
xor
add
loope
jne
in
xchg
jne
sbbb
gs
aam
insl
xor
xchg
jle
sub
sbb
movsl
jne
stos
outsl
mov
cltd
lods
lcall
ds
popf
lret
dec
mov
ds
lcall
test
lret
popf
out
sarb
inc
inc
mov
xchg
dec
popa
stos
lahf
push
jnp
mov
imull
xchg
movsb
lret
inc
jo
popa
adc
ss
arpl
iret
cmp
or
int3
dec
push
mov
cmp
inc
add
shl
cli
xor
sahf
or
fnstsw
arpl
iret
xchg
mov
dec
ret
out
xchg
repnz
lock
inc
sti
or
stos
filds
xlat
and
dec
pop
sub
push
jbe
movsb
repz
pop
out
je
and
cli
inc
pop
jge
scas
xchg
sbb
sub
ret
sub
mov
test
jae
xchg
es
popf
repnz
jp
push
xlat
jno
adc
repnz
aaa
or
ficompl
std
xlat
rcrl
xchg
movsb
stos
shll
add
dec
xlat
ja
push
xchg
popa
test
lret
movsl
scas
dec
push
fiaddl
jmp
test
inc
int
sbbl
inc
movsb
jecxz
test
cltd
pop
mov
fcoml
jnp
xchg
or
addr16
out
xchg
in
adc
cmp
and
dec
iret
xchg
xlat
mov
rcrb
test
sub
adc
push
xlat
mov
scas
andl
jo
bound
in
sub
mov
xchg
adcb
int3
jo
mov
dec
hlt
inc
cmp
iret
jns
fildll
sti
test
mov
jl
add
outsl
inc
icebp
adc
les
fsubrs
and
jbe
mov
fdivl
sub
stos
int
insl
xchg
pop
xchg
adc
and
and
sbbb
iret
ds
cvtdq2ps
out
cld
sbb
jae
or
add
pop
pushf
jbe
mov
loope
icebp
mov
aaa
or
jb
lds
sarb
sub
add
xor
sahf
cmovg
adc
je
cmp
movsb
ja
mov
xlat
mov
cmp
je
in
mov
sbb
jle
call
adc
fstl
inc
call
lods
in
dec
scas
xchg
sahf
mov
fisubl
jp
rcl
shrl
stos
xchg
sub
dec
int3
inc
fsubr
test
dec
jnp
fcoms
aam
pop
popf
gs
jns
or
xor
cmc
dec
popf
cmp
enter
mov
fldcw
in
mov
push
xor
adc
sbb
pop
test
mov
lahf
mov
lahf
and
cwtl
fists
sbb
dec
pop
jbe
add
sbb
and
adc
and
push
cmp
repz
addl
pop
xor
out
sub
push
lret
sarl
rcrl
loopne
int3
or
scas
pop
xchg
leave
hlt
stc
cmp
inc
xchg
mov
mov
inc
xor
adc
out
lcall
pop
push
mov
out
xor
stos
sub
and
xchg
es
cwtl
addr16
or
fsubrs
into
in
sbb
out
dec
cmpsb
xor
pop
mov
jg
mov
sbb
sbb
aas
jb
cs
pushf
xor
push
cmp
out
jno
lods
push
mov
sarl
pop
or
js
stc
cmpsl
in
aaa
psrld
jno
dec
mov
nop
out
aaa
out
xchg
dec
ss
mov
lods
divb
mov
int3
pop
mov
lds
es
js
mov
xor
xor
mov
lods
add
pop
insb
pop
cmp
pop
and
add
mov
lret
jb
pop
lret
mov
jb
adc
add
dec
movsl
jbe
js,pt
test
cli
pop
add
jno
rol
out
clc
dec
jns
fcompp
dec
jno
inc
pusha
push
idivb
scas
dec
dec
or
push
pushf
shrb
mov
pop
ss
mov
and
xlat
xchg
repz
outsl
inc
mov
dec
mov
gs
fsubl
pop
stos
jnp
rcr
outsl
pusha
popf
adcb
mov
dec
pusha
movsb
jmp
pop
xchg
pusha
dec
mov
pop
test
out
iret
adc
enter
mov
int3
arpl
cmp
and
push
popa
movsl
popa
imul
sbb
lods
pop
lcall
jp
ja
pop
mov
xor
push
sar
hlt
xchg
sahf
loop
cmpsl
mov
cmpsl
adc
movsb
enter
fisubrl
xor
cmpsl
jl
push
sub
pop
cmp
sbb
cld
cs
xor
popa
add
into
in
incl
push
addr16
gs
mov
push
and
movsb
mov
adc
pop
push
push
movsb
or
imul
cmp
cmp
ss
add
or
pop
cmp
xor
gs
sub
jnp
sub
adc
push
enter
jae
sti
jno
mov
mul
fucom
and
dec
add
fstpl
cmp
fadd
sbb
jae
outsl
ljmp
jbe
cwtl
jbe
outsb
in
dec
xor
mov
popa
xchg
xor
cwtl
xor
xor
fs
fisubrs
sbb
cmp
jne
dec
inc
loope
adc
das
push
dec
std
pop
mov
insb
sbb
in
mov
ja
mov
adc
jg
pop
mov
push
das
cmc
popf
push
loopne
fidivl
call
jns
jae
test
rcrl
std
add
ret
jne
sti
and
xchg
xor
and
cmp
xchg
nop
mov
mul
inc
inc
sub
imul
xchg
adc
pop
mov
scas
jp
mov
dec
pop
pushf
cmp
push
sahf
out
sub
ret
xchg
mov
cwtl
sub
imull
in
and
lods
or
xchg
aam
cmp
jb
repnz
sub
cmc
jns
sbb
ror
insl
in
js
xor
xorl
lahf
lods
cwtl
push
fldenv
stc
mov
jl
int3
mov
std
push
movsl
fidivrs
dec
fldcw
jnp
icebp
xor
xor
popf
add
push
and
dec
mov
sbb
insb
in
loopne
or
lock
jne
add
pop
sti
sub
mov
add
stos
or
mov
cwtl
xchg
xor
dec
subl
outsb
dec
es
addr16
or
pusha
pop
loopne
loop
jb
nop
and
test
fidivl
out
or
sub
rcll
dec
jbe
mov
jns
sub
sub
fcom
push
mov
sbb
pop
in
stos
in
add
lret
sbb
adc
outsl
into
rclb
lds
sahf
sbb
ja
push
or
in
ss
sbb
jle
test
in
adc
cmp
add
jg
hlt
pop
sarb
in
mov
xchg
sbb
xor
mov
pop
jmp
adc
dec
pop
test
fildll
cmpsl
inc
ss
cld
add
sub
cltd
jle
push
xchg
call
sbb
fidivl
imul
pop
dec
nop
mov
fistps
aad
dec
sti
cmp
lret
pop
adc
jmp
jb
mov
cmp
push
dec
scas
push
je
xor
lret
jb
jb
lods
mov
cmp
mov
stos
int
xchg
pop
adc
insl
mov
adc
mov
call
sub
int
je
js
leave
fldt
jecxz
faddl
int3
jmp
mov
lods
and
cltd
sub
pop
push
cmp
pop
sbb
cmp
mov
sahf
mov
mov
aaa
pop
push
sbb
ds
dec
shll
mov
pop
testb
pop
cmpb
movsl
jl
pop
aam
pusha
iret
jecxz
adc
push
xor
jne
jns
or
pop
outsl
cmc
out
jns
fmuls
push
ret
sbb
cmp
or
insl
and
push
mov
pop
adc
inc
push
mov
in
imull
imul
das
jecxz
xchg
pusha
mov
aam
subb
cmpsb
stos
xchg
in
mov
jg
xor
daa
adc
xchg
mov
aam
aaa
sub
test
ret
test
inc
or
or
adc
imul
pop
cmp
ret
jg
shrl
sub
push
add
or
sbb
repnz
sbb
or
cltd
or
clc
adc
mov
push
jno
repz
lcall
cmpsb
scas
jnp
xchg
mov
cli
xlat
fildl
popf
adc
stos
fildll
fisttpl
push
and
mov
jb
sbbl
xchg
das
popf
xchg
inc
add
aam
incb
popa
mov
pop
negl
inc
mov
mov
fwait
xchg
dec
mov
xorb
sub
lods
xor
aad
aaa
loopne
int
scas
dec
enter
inc
mov
sub
ja
jb
mov
jbe
mov
icebp
jge
and
xor
add
shlb
push
and
aas
and
mov
lods
jg
dec
lock
or
subl
dec
lods
add
hlt
imul
movsl
addl
aaa
or
rep
jns
dec
or
ud1
xor
lods
scas
mov
mov
push
addr16
adc
bound
inc
notb
sub
js
je
inc
fildll
add
mov
int3
int
aad
dec
popa
fs
flds
jb
loop
je
popf
jp
cmpsb
movsl
push
mov
sarl
xor
add
loopne
data16
dec
adc
stc
out
enter
out
push
lea
aad
xor
or
lcall
stos
stos
mov
pop
pushl
fdiv
or
imulb
xchg
repnz
xchg
jmp
in
mov
sub
stc
out
xchg
xchg
and
xchg
xchg
repnz
xor
cmp
iret
int
mov
lods
cmp
push
cwtl
in
in
inc
loop
mov
ja
mov
sbb
addr16
subl
in
mov
push
sbbl
sub
sub
push
push
lock
nop
js
and
lds
daa
pushf
movsl
call
sub
xchg
jne
cmp
xor
popf
gs
mov
sub
xlat
mov
out
js
mov
sub
es
pop
mov
popf
std
test
mov
push
sbb
push
inc
dec
jmp
xor
push
loop
sbb
cmpsl
push
ss
sbb
xor
push
jge
jmp
mov
flds
and
push
pop
stc
pop
push
ds
jo
or
cltd
inc
js
sub
or
stos
pop
divb
sbb
out
mov
add
jns
stos
cltd
mov
cmp
es
fsubr
jae
sub
popa
ss
out
aaa
xchg
addr16
mov
cmp
cmp
add
or
pop
add
fnstcw
inc
or
dec
popa
movsb
add
xor
jno
movsb
pushf
lahf
mov
outsl
add
jbe
mov
scas
sub
dec
fimuls
adc
cwtl
cs
cmovbe
ret
movsl
push
notl
or
das
cmp
fdivrs
mov
adc
sbb
arpl
push
mov
cmc
test
sbbl
out
insb
ror
sbb
sub
mov
and
cmp
scas
jnp
jbe
repnz
mov
in
push
cmp
dec
lods
ss
cld
cmpsb
dec
push
inc
test
pop
cmp
loopne
or
sub
add
imul
or
int
mov
add
loope
repz
les
jae
loope
gs
in
fisubl
sbb
cld
cmp
sbb
rcrl
sub
jno
xor
imul
sbb
rorb
dec
pop
jl
cmp
sub
fsts
mull
stos
aad
and
inc
divl
cmpsl
std
shlb
dec
cmp
sbb
loopne
jl
pop
cld
or
mov
push
pop
add
loopne
push
adc
dec
jae
sarl
mov
xor
adc
and
fmuls
sahf
clc
popa
adcl
mov
add
dec
xor
sbb
inc
lahf
cmp
dec
cld
and
jge
fidivl
rclb
outsl
sub
pop
popa
adc
arpl
cwtl
add
mov
cmp
inc
clc
sbb
jb
aam
lahf
and
xchg
insb
rclb
mov
movsb
jb
inc
push
sub
lcall
mov
test
cmpsb
inc
punpckhdq
jb
les
pop
and
out
mov
aas
jno
cmp
xchg
xchg
mov
leave
test
repz
es
cltd
fwait
pop
push
dec
cs
pop
inc
iret
xchg
loope
outsl
push
cmp
std
cmp
gs
jnp
mov
aam
iret
or
loopne
dec
mov
adc
or
bound
shl
mov
push
add
xor
out
ljmp
and
sarl
push
mov
insl
imul
jmp
mov
iret
das
mov
movsb
imul
push
outsl
dec
cmpsb
sar
cmc
sbb
inc
jg
fsubl
test
in
push
sbb
scas
jbe
cmp
sti
mov
or
es
mov
jo
sub
in
icebp
pop
sub
mul
lahf
shll
ror
jbe
movsl
jo
in
pop
jb
insl
push
xchg
pop
iret
push
or
sarl
mov
scas
aam
data16
imul
mov
orb
xor
inc
add
imul
mov
pop
cli
leave
mov
sti
mov
movsb
and
into
push
push
das
clc
xorl
inc
mov
add
sbb
dec
or
sub
test
out
lock
push
fcmovnb
xlat
push
sbb
mov
daa
lea
xchg
add
xlat
or
shr
mov
icebp
clc
cmp
call
or
das
adc
movsl
stos
insb
cli
adc
imull
cwtl
cmp
nop
repnz
and
pop
mov
mov
jne
pop
mov
fistpl
dec
xchg
fs
xchg
popf
sbb
inc
aas
fwait
dec
roll
push
cmp
adc
stc
ret
ldmxcsr
fsubrl
sbb
add
imul
fisttps
mov
das
add
mov
in
sub
pushf
pop
out
mov
push
sub
mov
and
fisubs
daa
mov
in
fwait
mov
and
xchg
rorb
or
push
movsl
sbb
push
and
jb
je
push
decl
sti
adc
dec
insb
xchg
mov
fldcw
stc
out
fs
iret
pusha
push
dec
shlb
in
jp
std
shrl
cli
not
mov
jge
mov
dec
sbb
insb
jecxz
jl
pop
nop
stos
insb
mov
jge
stc
jmp
mov
sub
or
jne
loop
dec
sub
in
js
adc
inc
imul
jns
jmp
leave
into
out
dec
nop
fcomps
sbb
das
outsl
and
popf
cmpsb
or
aad
xor
pmulhw
lods
ret
scas
mov
imul
jno
test
in
je
stos
idivl
es
mov
or
lock
or
daa
push
and
leave
xor
popf
inc
clc
js
adc
push
negl
pop
sbb
or
push
xchg
pop
mov
mov
mov
xchg
test
and
mov
fstpl
lret
sbb
daa
sub
mov
cwtl
mov
rcll
aam
xor
rorl
pop
call
xchg
mov
pop
mov
lcall
pop
dec
leave
add
testl
in
push
clc
popa
jge
ss
imul
xor
xor
xchg
xchg
jb
push
enter
call
mov
inc
jne
arpl
sub
xchg
mov
jbe
add
or
sbbl
dec
pop
out
adc
pop
out
mov
cmpsl
dec
cmpl
ljmp
out
sub
dec
adc
xchg
mov
and
hlt
test
push
mov
pop
out
cmp
nop
das
push
in
lcall
dec
sub
xchg
mov
mov
sub
and
jmp
loope
jecxz
push
or
mov
sub
or
out
lea
mov
into
push
popa
cwtl
xor
pop
xchg
outsb
jp
mov
sub
dec
mov
mov
or
and
out
scas
xchg
scas
mov
xchg
mov
in
popf
movswl
mov
or
push
lds
gs
fiadds
add
out
not
in
les
jmp
mov
cmp
out
mov
and
pop
adc
cwtl
clc
in
push
jno
mov
and
xor
sbb
icebp
subb
adc
mov
js
mov
push
sbb
insb
in
and
add
add
stos
pop
sbb
test
xchg
pop
into
jmp
inc
xchg
pop
shrb
lcall
imul
icebp
int
or
test
movhps
or
pop
addr16
arpl
mov
sub
int3
adc
popf
leave
cmc
jmp
sbb
cltd
addr16
jbe
pop
sub
jbe
mov
adc
mov
xchg
pop
sahf
lock
sti
xor
stc
jno
enter
xchg
arpl
je
jnp
adc
push
aaa
pushf
cmp
jle
pop
dec
je
pop
push
adc
in
fsubrs
cmp
lods
cmpsb
push
mov
mov
cmp
imull
add
icebp
xchg
enter
insl
mov
mull
mov
dec
cmp
or
mov
mov
or
ds
jle
testb
mov
mov
fs
jecxz
icebp
mov
and
leave
dec
sub
dec
fidivrs
push
in
pop
push
pop
mov
movsl
cmp
push
or
imul
jno
in
sub
mov
mov
and
aad
push
imul
jmp
mov
xor
icebp
mov
pop
js
add
inc
das
aas
xor
inc
push
add
lea
jbe
ljmp
cmp
cwtl
shrl
push
jno
dec
sub
or
mov
pop
jb
outsl
push
movsb
cmp
imul
xor
icebp
loop
cmc
ljmp
pop
jge
rorb
in
nop
xchg
xchg
cmp
xchg
fisttpll
pop
lahf
in
xchg
cltd
out
ja
jae
mov
lahf
test
inc
fidivs
xor
and
cmpsb
neg
test
jns
inc
clc
jmp
arpl
adc
inc
mov
xchg
cvtps2pi
push
dec
cmp
ficoml
mov
outsb
push
in
inc
ficoms
into
dec
fs
sbb
push
push
in
loope
ret
popa
mov
dec
call
adc
cltd
sub
lcall
jno
fsubl
sub
xchg
loope
mov
stos
cmp
and
push
loop
jl
int
add
sbb
pop
xlat
pop
out
rcr
call
xchg
pop
push
sbb
mov
jno
shl
mov
dec
into
int
cmpsb
nop
xchg
ja
sub
mov
cld
add
mov
ljmp
xor
mov
sbb
rcrl
ss
sbb
pop
je
lods
xchg
mov
xor
shlb
test
int3
and
and
in
xor
sbb
ljmp
mov
jo
bound
movsb
stos
or
sub
cld
adc
pop
sahf
push
in
ja
adc
mov
jle
ljmp
popa
xor
mov
and
loope
outsb
sbb
add
test
subl
addr16
and
mov
cmp
xchg
test
xor
mov
daa
adc
das
mov
pop
xchg
mov
mov
pusha
and
dec
and
mov
cmpsb
mov
out
mov
lret
xchg
ljmp
loope
mov
push
xor
jne
addr16
popf
cld
int
adc
sbb
sbb
or
lods
call
mov
orl
dec
fisubl
or
shrl
xor
fisttpl
jae
ds
and
je
mov
mov
repz
mov
mov
cmp
adc
adc
sub
stos
xchg
sub
rorb
cmp
jmp
xchg
je
repnz
mov
jo
hlt
loop
mov
mov
dec
stos
stos
ficoml
xor
and
cmp
fildll
insb
loopne,pn
and
push
daa
test
not
ds
out
outsl
sub
add
enter
test
lock
jmp
inc
mov
pop
das
je
pop
xchg
mov
push
pop
nop
mov
ljmp
xor
add
cmp
stos
bound
jne
adc
jne
cltd
aad
aam
add
repnz
hlt
cmp
pushf
inc
cmpsb
push
aas
fs
lret
and
lea
aam
cmpsl
xor
xchg
or
fcoml
sarl
push
mov
adc
incb
cmp
jecxz
mov
mov
push
jle
or
sti
sbb
xchg
dec
pop
std
aad
icebp
loope
ljmp
daa
movsb
stos
lods
fstl
cmp
shll
push
mov
aas
cmp
push
dec
sahf
adc
scas
and
jg
jns
mov
push
push
add
pushl
stos
call
cltd
data16
in
add
dec
sbbl
in
in
xchg
test
and
data16
icebp
xor
fstps
adc
add
add
sub
jnp
push
push
mov
dec
pop
bound
jno
and
xchg
daa
repz
leave
sub
or
and
jmp
into
mov
sbb
js
mov
sub
inc
or
mov
cmp
imul
rcll
and
outsb
push
mov
mov
or
arpl
xor
cmp
jo
fidivrl
inc
insl
jle
imul
sarb
inc
sub
sbbl
add
mov
fwait
imul
inc
shlb
addr16
push
sbb
out
rolb
jb
outsl
pop
xor
cmc
das
pusha
out
daa
cmp
ret
setno
fdiv
adc
sub
xor
testl
and
or
pop
cmp
cld
push
test
testb
adc
repz
sahf
fsubrp
cmp
sbb
push
sub
cmp
cwtl
and
mov
adc
loop
js
movsb
hlt
js
push
sbb
js
fmul
mov
scas
xor
sbb
or
test
imul
cmpsb
sahf
xorl
xchg
dec
sub
clc
and
add
in
outsb
repz
pop
std
shlb
pop
mov
ja
mov
sbb
xchg
push
cli
insl
mov
mov
fldt
dec
rcr
adc
adcb
js
sub
inc
or
jge
adc
fwait
test
scas
push
cmp
cmp
jne
fcmovu
inc
int3
push
push
jne
adc
mov
out
lret
dec
mov
cld
xchg
loop
dec
fmul
jnp
sub
dec
jae
ss
stos
and
int
out
adc
add
pop
lds
inc
sbbb
aad
jmp
sbb
cmpsl
mov
sub
scas
sbb
sub
xor
pop
fistl
jle
mov
and
aaa
repnz
movsl
clc
mov
loopne
ja
or
xchg
imul
adc
rcrl
mov
fiaddl
sbb
or
dec
jae
into
dec
jmp
jecxz
pop
pop
imul
rcr
std
js
outsb
fistl
daa
sub
outsl
add
lds
and
dec
int3
paddd
dec
xchg
clc
and
inc
movsb
sub
movsl
xor
int3
push
or
ret
cmp
sub
out
lret
leave
dec
dec
inc
jl
ljmp
in
mov
push
and
shll
mov
jmp
imul
inc
out
mov
add
push
and
pop
xor
imulb
jbe
xchg
pop
fsubrl
dec
xor
in
sub
inc
pop
outsb
aaa
cltd
mov
aaa
pushf
jbe
lcall
push
repnz
ljmp
test
jp
je
pop
test
adc
sbb
mov
sub
push
mov
out
pop
call
clc
xor
lea
jg
cmpsb
xor
sti
scas
les
sub
cmp
push
pop
loope
mov
or
fs
and
xlat
int
ss
jle
sarb
jnp
dec
rolb
ficompl
es
mov
sub
hlt
hlt
and
sub
jb
aam
xchg
into
pop
out
xchg
cs
ds
lods
xchg
mov
pop
xchg
pop
popa
inc
in
aad
push
fs
fdivrp
cmp
bound
cmpsl
xor
cli
into
hlt
loop
and
dec
pop
scas
mov
mov
mov
enter
or
sub
adc
negb
xchg
cmc
and
and
fwait
or
and
adc
mov
and
and
jmp
test
and
shr
mov
lahf
call
rorl
das
stos
inc
imul
ficoms
js
push
lds
frstpm(287
scas
mov
xchg
loope
faddp
int3
push
jp
adc
mov
hlt
lods
jl
mov
xor
jmp
xchg
scas
mov
mov
iret
jnp
insl
imul
out
test
inc
hlt
lods
outsb
sub
xchg
shl
and
mov
sub
mov
adc
push
sbb
sub
push
subb
icebp
and
push
mov
rcl
xchg
out
call
int
pop
pusha
scas
xorl
inc
or
scas
and
push
sbb
xor
xor
sub
and
loopne
stos
test
push
cmp
daa
nop
roll
sub
je
mulb
xor
xor
xor
sbbl
lock
scas
jbe
inc
hlt
xor
mov
enter
ret
cmp
mov
in
in
push
out
lods
push
inc
jecxz
sub
mov
lahf
mov
jge
jae
dec
add
stc
sbb
stos
and
cmpsl
aad
inc
fld
loopne
cwtl
mov
test
fwait
leave
mov
mov
fdivrl
inc
popf
arpl
aas
in
xchg
mov
pop
into
dec
orl
inc
insl
sahf
loop
push
das
push
testl
mov
loop
insb
adc
jmp
pop
addr16
cmpsb
cmpsb
push
dec
fisttpl
push
imul
es
push
mov
scas
outsb
lock
xchg
popa
nop
scas
jno
mov
push
je
inc
arpl
stc
mov
mov
shrl
inc
sbb
shl
mov
xchg
push
cmp
inc
in
dec
or
lcall
mov
lds
and
test
inc
js
push
sub
adc
lahf
mov
iret
push
out
dec
jmp
sbb
lahf
xchg
inc
filds
cli
int3
sbb
mov
pop
jae
mov
xchg
push
mov
jle
adc
mov
iret
xchg
cli
lret
imul
repnz
mov
jge
fs
pop
loope
mov
fisttpll
or
imul
mov
lock
cmp
je
jge
adc
jecxz
cmp
es
pushf
dec
or
cmp
and
mov
clc
popa
inc
icebp
xlat
add
adc
ds
jg
jns
jno
gs
sub
or
push
and
imul
push
mull
sbbb
xchg
xchg
repz
test
or
ja
test
in
push
subl
cmp
fcompl
inc
fisttps
aam
test
jl
pop
sub
movsl
mov
push
mov
lea
cmpsl
bound
sub
cmpsb
fnstsw
sub
data16
adc
mov
cmpsb
xor
jg
sbbb
lahf
or
pop
fisubs
es
or
push
shll
jg
xchg
hlt
leave
add
fwait
or
sbb
rcr
xor
mov
outsb
ljmp
pusha
xchg
add
scas
cmpsl
mov
and
faddl
fisttpl
mov
push
imul
sub
jl
repnz
sub
aad
mov
sub
sub
dec
sub
insb
mov
cld
inc
ljmp
call
push
and
inc
xlat
xchg
push
cmp
push
mov
sub
xchg
enter
mov
pusha
scas
push
sub
clc
cmc
nop
testb
test
fsubrl
inc
dec
xchg
aad
cmp
sbb
pop
xor
out
or
je
dec
or
outsb
setne
adc
rorl
add
mov
inc
add
int
sub
xchg
out
xor
or
mov
std
ds
adc
cwtl
rol
lcall
addr16
lea
xchg
jns
lea
push
cwtl
stc
mov
xor
aad
cmp
sti
fdivrs
xorb
jne
jnp
aam
fadd
xchg
add
sub
out
xor
pop
imul
sti
jb
dec
push
int3
movl
mov
pause
movd
jp
adc
cmp
icebp
sub
jmp
aam
and
xchg
les
lods
mov
add
adc
xchg
aad
inc
sbb
sarb
xor
js
sahf
sub
std
sub
mov
lds
lcall
and
xlat
sbb
bound
es
daa
es
adc
cmp
pop
lret
cltd
xor
out
jbe
lahf
pop
inc
dec
mov
out
movsb
iret
popf
and
pop
mov
pop
mov
push
and
imul
stos
xchg
dec
fxch
mov
ret
xchg
fstpl
cmp
fildl
shrl
dec
and
xchg
inc
bound
mov
imul
aas
ja
mov
test
xchg
out
cmc
mov
dec
mov
push
sahf
sbb
and
insb
xchg
loope
xchg
testb
out
hlt
mov
adc
popf
icebp
daa
xchg
cmp
mov
xchg
and
sbbl
xorl
adc
adc
leave
in
jle
dec
pop
lahf
cmp
mov
add
sti
xor
imul
add
mov
sbb
and
add
pushf
mov
or
or
shrw
outsb
sti
icebp
jbe
ss
out
sarb
call
cltd
sysexit
in
out
daa
sarb
xchg
pop
test
lds
xchg
ja
xor
inc
mov
pop
repz
adc
mov
fcoml
pop
xchg
push
xchg
xlat
or
in
in
mov
stos
pop
dec
mov
sub
xor
xor
lahf
sub
xchg
jns
xor
pop
mov
mov
stos
lds
or
mov
ds
mov
mov
lea
mov
int3
mov
mov
mov
mov
enter
xchg
mov
inc
je
addr16
cmp
cld
push
sub
mov
dec
fimull
mov
push
inc
cld
adc
mov
iret
sahf
sti
pop
sub
test
mov
cltd
xchg
mov
imul
sbb
ljmp
xor
das
in
cmp
gs
stos
push
and
out
cwtl
repz
out
xchg
mov
testb
xchg
mov
jge
je
clc
aam
sahf
sub
jne
sti
cwtl
sbb
jecxz
fadd
test
sub
lret
jns
ret
or
call
lcall
enter
enter
mov
shlb
out
loope
sbb
cmp
push
xchg
fldcw
and
notl
rolb
daa
aas
add
cwtl
cmp
jb
jmp
icebp
cmp
fiaddl
iret
sti
mov
pop
movsl
mov
sbb
push
popa
cmp
adc
jns
adc
lds
out
fdivrs
sub
push
cmpb
sbb
aaa
xlat
arpl
scas
insb
push
and
and
icebp
jl
fstl
ja
adc
xchg
andl
cli
xor
or
mov
push
dec
pop
icebp
out
addb
cmp
pop
xor
rcrl
xchg
dec
in
icebp
mov
xchg
xrelease
repz
sbb
xchg
xor
mov
fidivrl
imul
pop
cmp
and
sti
cmp
lds
push
mov
mov
cmp
je
lcall
popa
imul
pop
xlat
icebp
xor
sub
mov
xchg
outsb
push
push
es
pop
mov
movsl
or
jne
xchg
push
sub
jne
sbb
es
cmp
adc
mov
je
lock
nop
lret
mov
test
pop
add
xchg
arpl
pop
jmp
cmp
xor
and
fimull
jne
out
and
push
in
fsubrs
les
adc
xchg
add
into
scas
sub
jnp
popf
test
pop
adc
adc
cmpsl
inc
imul
xchg
jecxz
insl
outsb
xchg
xor
popa
inc
test
fs
hlt
data16
xor
mov
or
push
sti
out
jne
push
mov
xor
es
pusha
hlt
imul
divb
mov
push
addl
mov
mov
add
fstpl
cmp
dec
movsb
xchg
push
add
inc
ljmp
adc
ljmp
hlt
jg
inc
movsb
jl
or
mov
mov
jmp
pop
inc
out
mov
lock
adc
and
sub
cmc
mov
enter
add
in
pop
push
or
gs
cltd
add
xchg
dec
fs
jg
loopne
lea
jg
xor
pop
sahf
inc
and
push
push
lock
addr16
push
sub
fldt
mov
mov
insl
xchg
mov
jne
jae
push
jnp
cmc
push
add
ja
pop
daa
fwait
sub
jp
mov
stc
xchg
imul
js
jo
lea
xor
dec
hlt
jp
stc
mov
pusha
cmp
mov
out
addr16
pop
add
pop
sbb
push
in
test
cmc
jg
adc
nop
mov
movsb
mov
insb
adc
enterw
addb
or
roll
and
cmp
push
arpl
leave
stc
out
cmp
adc
jmp
mov
xchg
mov
cmp
sub
lods
xor
inc
jae
es
cmc
sub
das
fdivrl
ljmp
jmp
loope
and
stos
mov
xor
pusha
arpl
jno
aam
ftst
imul
out
push
sbb
adc
pushf
stos
in
dec
insl
add
cwtl
pushf
pop
je
pop
cltd
popf
pop
push
sub
and
jecxz
push
inc
cmc
jno
call
mov
in
aas
or
shl
and
out
lds
cmpb
push
kandnw
int
lcall
shll
shlb
and
add
das
fmull
cmpsb
pop
mov
stc
outsl
adc
dec
iret
imulb
xchg
fsubp
push
es
mov
cwtl
pop
fdiv
sub
fistpl
sub
or
push
adc
stc
sbb
lea
enter
mov
fcoms
movl
mov
cmc
movsl
idivl
push
xor
and
or
dec
xchg
fsubrs
cmc
cmp
push
jecxz
jp
or
scas
imul
jp
mov
inc
inc
lods
clc
scas
les
push
xor
jge
mov
xor
aad
cwtl
insb
mov
cmp
mov
pop
fcomp
jnp
lret
shll
divl
mov
sbb
mov
mov
mov
xchg
mov
jmp
dec
mov
push
or
sbb
push
clc
lds
jp
test
xchg
pop
rcl
sub
pop
mov
jle
in
or
and
out
mov
inc
mov
mov
jo
cmpsb
dec
pop
sub
test
lahf
pop
scas
movsb
jns
shrl
sahf
xor
adc
lret
adc
sbb
rcr
or
xchg
loopne
push
jae
push
into
jne
push
fnstenv
xchg
xlat
jmp
dec
push
push
add
jg
loopne
sbb
mov
ds
xchg
sbb
mov
pop
les
or
lods
into
push
xchg
mov
in
push
popa
fwait
sbb
fsts
xchg
cld
shll
xor
xor
fwait
test
in
add
daa
stos
lods
outsl
jnp
roll
push
jno
xchg
mov
jmp
xlat
and
int3
and
jmp
je
mov
cmp
mov
push
push
ret
adc
stc
repz
pop
insl
xor
pop
repz
xchg
pop
popf
mov
inc
iret
pop
call
jmp
loopne
sub
dec
xor
cli
ds
xor
shrl
nop
sub
push
fldt
imul
cmp
or
mov
push
loop
jo
push
or
fdivr
mov
fidivrs
sub
mov
and
gs
nop
popa
pop
mov
or
fs
xor
pop
lock
cmp
outsl
xor
sbbl
insl
mov
inc
push
loop
sbb
xor
jo
push
mov
lods
aaa
dec
js
shlb
lea
pop
jge
fs
push
add
int
aaa
out
mov
adc
loopne
sub
cmp
jo
out
jge
out
push
sub
mov
mov
mov
adc
lcall
adc
jno
xchg
add
push
mov
cmp
test
imul
xor
adc
incb
inc
sbb
inc
mov
dec
pop
int3
mov
jp
jge
cmp
push
sbb
sub
push
and
movsl
shl
je
xchg
sbb
pop
imul
dec
jns
push
scas
outsl
out
rcrb
test
outsl
aas
shlb
rolb
sub
mov
mov
movsl
out
jmp
mov
adc
or
xchg
test
outsl
ret
adc
leave
xchg
xor
sbb
test
mov
lret
mov
rcl
outsl
mulb
repz
pusha
mov
xor
int
mov
jle
fstl
ja
xchg
hlt
adc
add
nop
pusha
cmp
into
jmp
lods
xchg
movsb
icebp
int
xchg
mov
push
movsb
lretw
mov
test
inc
hlt
inc
push
mov
movsb
ss
sahf
aas
je
mov
shl
arpl
dec
pop
scas
cmp
shrl
int
js
aad
jno
xor
xchg
div
pop
dec
mov
outsb
fsubrs
in
dec
inc
push
gs
xchg
call
xor
xchg
add
push
js
test
nop
or
sbb
add
cmp
sub
or
fdivl
outsb
cld
outsb
jae
orl
jp
addr16
andl
fstpt
jo
lret
push
mov
mov
jmp
cld
mov
js
dec
in
iret
push
iret
pop
fsubr
sbb
and
pop
lahf
stc
hlt
pop
sub
and
jno
das
lods
es
mov
dec
in
pop
and
push
lods
test
lret
fdivrs
xor
jmp
fwait
sbb
insb
cwtl
or
dec
ja
push
mov
sub
sar
pop
cmp
sub
jg
lock
mov
clc
sub
inc
jno
jns
cli
sub
jle
push
sbb
adc
mov
xchg
mov
pop
push
repz
into
pushf
xchg
test
inc
stc
bound
enter
enter
shl
mov
xchg
push
hlt
dec
lret
jnp
sbb
aam
add
mov
mov
repnz
or
fwait
jmp
push
cmp
inc
mov
inc
and
jb
ja
cmp
xchg
xchg
pop
mov
xor
lods
int
fidivl
pop
mov
xor
mov
leave
aaa
test
addr16
or
push
outsl
and
push
mov
popa
push
adc
test
mov
clc
sub
push
das
dec
xor
data16
in
stos
cwtl
test
bound
lcall
dec
fldt
push
adc
in
push
mov
icebp
adc
decl
repz
dec
and
cld
inc
cmp
pop
inc
int
xlat
push
mov
loopne
lods
push
js
push
dec
rcll
jl
sbb
pusha
js
and
push
adc
sub
xor
xor
cmc
lods
in
rorb
cli
je
pop
aas
cwtl
and
daa
xchg
shr
mov
mov
fs
decb
ss
ljmp
sahf
cmp
movsl
jo
vmovaps
cmp
xor
insb
push
movsl
dec
xorb
fstpt
dec
inc
test
scas
xorb
insl
aam
gs
push
jns
and
mov
jbe
jl
cli
xchg
loop
jne
add
repz
arpl
addb
dec
mov
pop
jno
stos
fdivrl
out
daa
jne
pop
addr16
test
pop
out
fisttpl
aam
and
cmp
sbb
stos
mov
cmp
jbe
sbb
mov
jb
or
mov
cmp
pop
lahf
popf
pop
fwait
add
pop
arpl
repz
in
or
mov
pop
loop
icebp
adc
in
sub
pusha
cli
pop
jl
or
cmp
scas
or
rcrb
mov
rcrb
js
test
xchg
mov
mov
mov
out
sbb
xlat
mov
dec
fisttpl
cmp
xchg
and
fs
sub
les
jo
les
pop
inc
cmp
and
adcl
sbb
and
xchg
dec
es
popf
test
cmp
sub
test
push
adc
lods
aad
mov
inc
jg
sub
xchg
addl
or
xor
cmc
cs
fistps
ds
fs
shrl
inc
cltd
jbe
leave
sbb
mov
fs
mov
loope
cmp
pop
dec
cmp
in
lods
inc
inc
mov
fsts
in
mov
pop
cmpsl
lods
inc
pop
ja
lahf
mov
lods
mov
mov
mov
test
push
cmp
xchg
cmp
xchg
enter
xchg
inc
sti
test
pop
stos
in
aas
inc
sbb
adc
bswap
icebp
jge
repnz
hlt
fsubp
sub
fmuls
in
push
mov
mov
mov
repnz
pop
add
dec
sub
cmp
aas
andl
jno
pop
sbb
jp
pop
insl
das
and
pop
sbb
push
mov
test
cmpsb
xchg
dec
out
int
ds
dec
fdiv
pop
test
pop
lock
cmp
fiaddl
lock
mov
pop
mov
loop
call
cmovne
push
adc
dec
hlt
loopne
jno
into
ret
sbb
jno
jae
fistpl
hlt
stos
data16
into
xchg
add
pusha
out
sub
and
xchg
fsubr
das
pop
inc
fadd
and
clc
inc
cmp
std
adc
sbb
pop
cld
shlb
js
mov
sbb
push
pop
lock
xchg
pusha
sub
movsl
add
ss
fldt
lds
aad
mov
push
inc
mov
out
adc
lock
js
int3
or
sbb
sbb
jg
pop
mov
push
in
roll
out
mov
dec
mov
daa
cmp
aaa
aas
jg
aas
jp
cmp
ss
aaa
in
cwtl
jno
mov
pop
dec
fsubr
xchg
xchg
sub
aas
jno
xor
sbb
mov
mov
xor
fidivrs
jmp
push
push
andl
xchg
mov
lds
mov
jo
dec
testl
leave
or
and
push
in
leave
mov
xor
in
sarb
cmp
xor
lahf
fdivrs
mov
aam
subb
sbb
ja
loop
loopne
pushf
mov
daa
push
jle
dec
push
dec
iret
adc
shlb
in
lret
lods
lret
jbe
push
mov
mov
lds
xor
test
call
test
dec
in
fwait
lret
scas
or
mov
jmp
test
pop
jp
pop
lock
iret
xchg
mov
sbb
in
xchg
iret
outsl
xor
xchg
sbb
push
xchg
jmp
mov
sub
xor
repz
stos
xchg
pop
pop
movsb
xchg
xchg
leave
in
and
aad
les
adc
mov
xchg
dec
pop
mov
fsubl
loope
mov
mov
fxch
jb
nop
leave
adc
dec
insb
push
jle
xchg
pop
sub
insb
in
mov
xchg
dec
addr16
in
push
push
cld
fwait
mov
jae
mov
rcl
xor
dec
push
sub
rcrb
les
push
fwait
push
adc
sbb
pop
lahf
imul
sub
arpl
xlat
sub
cmp
xchg
sbb
adc
fwait
and
es
mov
dec
test
and
mov
cltd
cltd
nop
nop
cmp
aas
inc
adcb
dec
and
pop
mov
sti
adc
sbb
xchg
mov
fstps
pushf
decb
pop
lret
inc
outsb
mov
stc
test
mov
cmp
in
sub
pusha
pop
lock
jp
popa
repz
mov
inc
jg
xor
inc
pop
shr
stc
dec
cmc
pop
mov
ds
daa
pop
mov
or
sub
cmpsl
or
dec
cmp
push
rcll
xchg
leave
xor
pop
inc
cmpsl
add
iret
mov
sub
sub
mov
std
jb
out
fistpl
adc
ljmp
pop
jecxz
inc
lwpins
dec
imul
pop
lret
lds
std
lea
push
add
or
dec
pop
es
iret
push
repnz
mov
push
push
pop
loope
out
into
lret
hlt
push
clc
mov
jmp
rcl
add
dec
cwtl
dec
mov
add
shrl
sarb
pop
call
aam
inc
loopne
pop
fisttpl
xlat
rol
or
push
jle
addb
test
dec
stc
std
pop
pop
mov
xchg
sti
sbb
mov
mov
daa
inc
fstpl
les
lret
out
inc
dec
call
and
push
mov
ljmp
and
or
inc
push
inc
cmp
in
leave
mov
clc
outsl
scas
xlat
cmp
inc
out
sbb
inc
sbb
sub
int
test
lds
daa
xor
pop
mov
mov
sbb
mov
mov
pop
sub
ja
or
frstor
fs
lock
lahf
mov
fldt
std
cmp
cmpb
sub
pop
ret
sub
xchg
dec
jg
sbb
popa
push
insl
jmp
hlt
push
and
mov
call
add
sbb
mov
inc
orl
sub
adc
fwait
sub
and
lods
xchg
pop
sub
sub
jns
jno
bound
fimull
ljmp
mov
out
ret
fcmovne
int
or
enter
add
int3
nop
fldlg2
mov
add
push
cmp
loope
adc
js
inc
jmp
mov
cwtl
cmp
into
sahf
stos
outsl
ljmp
daa
stos
std
lret
xchg
cld
xchg
jne
and
mov
inc
cmp
and
clc
xchg
icebp
push
aam
xchg
into
inc
dec
dec
adc
popa
mov
dec
sbb
push
fldcw
adc
pop
in
jmp
movsb
and
out
js
test
lret
pop
mov
cs
jns
es
imul
mov
lahf
sub
fistps
outsb
rcr
inc
hlt
iret
icebp
daa
jo
fisubrs
cmpsl
cmp
inc
mov
push
daa
arpl
mov
call
shrl
mov
dec
sbb
loopne
outsl
or
or
test
xchg
jns
lds
dec
xchg
ss
pop
pop
cmovo
mov
mov
and
push
jle
xor
lods
xchg
sub
cmp
aad
mov
int
out
add
dec
add
xchg
outsl
inc
pop
push
cmc
in
jecxz
xor
pop
jae
pusha
shrl
cmc
ljmp
sub
ss
cmp
xchg
in
shlb
repnz
lret
stos
cmpsl
mov
pop
push
testl
add
and
mov
sahf
scas
or
jb
lahf
repnz
out
dec
mov
das
dec
jo
cmc
int
inc
xchg
xlat
mov
arpl
shll
sub
or
lret
mov
pop
sbb
add
fisttpl
mov
mov
mov
mov
pop
push
fimuls
push
push
adc
sub
insb
push
sub
cmp
or
xor
sub
and
lcall
push
or
nop
mov
repnz
mov
repnz
mov
sbb
je
fsubrl
popf
mov
fucomip
stos
dec
idivb
sti
sbb
pushf
xchg
inc
sub
stos
mov
adc
cmpsb
xor
dec
lcall
xchg
ret
sahf
ret
cs
hlt
cmpsl
ret
sub
xor
xlat
cmp
pop
push
mov
dec
ja
sti
int
ja
or
adc
gs
push
xchg
arpl
pop
cmp
push
js
lret
xchg
movsb
aas
mov
push
mov
pushf
movsb
and
ret
sub
insb
push
in
jmp
mov
and
sti
ja
and
aas
repnz
out
sbb
jp
xor
ret
push
int3
and
addr16
inc
pop
shll
aam
lea
or
sti
adc
and
jbe
mov
lcall
mov
test
les
sub
cwtl
aaa
iret
dec
sbb
int3
incl
mov
sub
into
sahf
xchg
mov
jl
sbbl
rcll
inc
jnp
lds
add
adc
pop
test
adc
in
sub
mov
icebp
test
xchg
add
divl
ror
je
and
cmp
sar
std
adc
leave
outsb
lcall
mov
das
fsub
push
jle
mov
stos
add
push
mov
cmp
bswap
sub
mov
shrb
imul
jb
jb
ljmp
mov
dec
sbb
inc
lds
pop
dec
ficompl
ret
cli
scas
gs
ror
je
lods
pop
or
pop
fwait
loopne
jne
clc
and
jl
jns
dec
imul
int3
pop
nop
push
aad
dec
aas
inc
xchg
and
outsl
outsb
sub
adc
imul
add
ljmp
adc
ret
mov
cmp
inc
mov
hlt
dec
sahf
insb
xor
mov
or
push
shrb
into
cli
xchg
ljmp
repnz
cs
inc
stos
call
and
and
rol
cwtl
stc
je
les
clc
add
push
add
shlb
dec
add
daa
sti
mov
lock
popa
mov
out
in
mov
lret
repz
pop
pop
push
out
mov
push
dec
es
cmp
inc
mov
mov
stos
popf
dec
fidivrs
mov
mov
imul
cmp
add
neg
and
mov
clc
xor
mov
adcb
fbstp
lcall
lcall
mov
adc
mov
mov
cmp
loop
cmpb
or
leave
cmp
push
movsl
dec
inc
mov
xor
std
jle
pop
and
mov
inc
fstl
js
les
cld
fmuls
int3
loopne
xchg
sbb
mov
fwait
daa
cmp
imul
mov
shll
icebp
jle
push
dec
das
das
cmp
subl
mov
jp
pop
jns
movsl
or
lds
add
xchg
in
cwtl
pop
subb
into
mov
xchg
mov
jnp
in
mov
fs
adc
lods
mov
push
sub
mulb
push
movd
inc
in
pushf
mov
xchg
cld
jecxz
push
jg
fadds
rolb
movsb
inc
cmp
adc
stos
xchg
add
stos
call
mov
sbbl
add
push
sbb
fs
xor
or
pop
push
cwtl
icebp
insl
jg
daa
add
nop
lock
cs
jge
sarl
xchg
dec
mov
xchg
mov
gs
and
in
pop
jl
cli
and
hlt
dec
in
cmpsb
insl
in
movsb
add
stos
aaa
repnz
subl
popa
sub
pop
loope
sub
cltd
cmp
add
adc
fldt
cwtl
mov
and
push
ss
push
cs
ljmp
lock
mov
push
jg
dec
pop
ds
xlat
ss
cmpsl
sub
lahf
out
out
in
ret
inc
adc
mov
dec
mov
add
mov
sahf
sbb
int
mov
and
dec
fcomi
sbb
sub
xchg
mov
or
and
mov
scas
pop
dec
mov
lods
pusha
jne
adc
xchg
mov
mov
push
scas
and
aad
adc
cs
lcall
sbbl
popa
cmpsb
xor
pop
pushf
rcrl
add
test
mov
popa
mov
sub
jnp
std
mov
mov
outsb
ds
test
mov
dec
mov
fsub
push
mov
or
push
ss
xor
jbe
stos
shll
mov
dec
in
jnp
scas
mov
and
enter
jecxz
in
ljmp
adc
and
test
movsb
jmp
rorb
fwait
outsb
mov
movsb
adc
fldcw
sbb
lcall
sub
lret
mov
lcall
sub
jge
xchg
ds
and
cmpsl
shlb
lret
jo
mov
popf
xchg
cli
mov
pop
mov
xchg
fadd
jns
imul
push
xchg
sti
push
pop
lods
xchg
mov
js
pusha
inc
cmp
push
in
or
xlat
pop
push
adc
or
stos
dec
pusha
or
add
mov
mov
aas
pop
mov
and
mov
jnp
mov
mov
sub
pop
lods
jo
lea
xchg
push
andl
xchg
ret
std
data16
cmp
add
push
subl
sbb
imul
pop
out
int3
cmp
push
and
xlat
and
test
push
lret
sbb
repz
push
jne,pn
movsl
test
and
push
adc
loopne
and
adc
lret
repnz
icebp
ds
lcall
scas
repnz
movsl
pop
jo
ret
sarb
test
arpl
mov
rcll
xor
add
cmp
dec
add
pop
mov
jl
fcomp
daa
mov
shlb
addr16
and
cli
xchg
push
mov
pop
in
mov
lods
out
pop
mov
std
ljmp
mov
jmp
rclb
cs
jbe
sub
or
and
pusha
add
cmp
or
sub
rorl
loope
notl
dec
lret
repnz
sbb
pop
inc
xor
or
dec
jle
push
pop
cwtl
cli
test
push
xchg
fdivs
leave
jg
and
jg
rorb
int3
sub
or
jp
inc
dec
mov
mov
push
inc
cltd
inc
int
rcrl
mov
pop
sbb
push
or
jne
mov
xlat
inc
add
mov
pop
mov
jp
lret
stos
adc
mov
lods
xor
data16
pop
add
or
clc
sub
mov
cli
push
js
je,pt
dec
sub
in
xchg
adc
sbb
rclb
dec
aaa
mov
pop
mov
cmp
out
hlt
or
dec
mov
out
gs
and
jmp
jb
js
add
and
or
js
daa
adc
fdivrl
fnsave
pop
adc
cmp
pusha
insb
push
cmc
jp
scas
out
lods
sbb
addr16
cmp
icebp
stos
pop
dec
mov
lahf
cmp
leave
sub
scas
cmp
push
push
popa
js
mov
scas
movsb
and
dec
out
in
mov
or
cmpsb
jbe
xchg
pop
dec
sbb
fdivrs
sub
imulb
popf
pop
and
insb
push
cmp
enter
push
push
sbb
xchg
inc
jge
or
mov
mov
out
hlt
mov
jae
dec
xor
test
test
daa
cld
insb
xor
dec
ljmp
pop
mov
int3
mov
jmp
push
or
out
sti
pop
cmpsb
lea
or
push
lock
mov
cwtl
ss
fisttpll
push
enter
gs
xor
insb
fists
dec
jecxz
push
sub
bound
mov
jle
sbb
cmc
clc
bound
or
xchg
insb
cmp
xor
leave
int
sbb
mov
dec
jb
mov
pushf
into
loopne
mov
xchg
mov
xor
sbb
sbb
insl
jo
mov
inc
fcmovb
fs
cmp
jae
inc
push
lahf
mov
out
mov
mov
cmp
out
dec
mov
movsb
or
outsb
hlt
scas
push
push
push
dec
mov
cmp
pop
lds
xor
mov
mov
cli
add
cmpsb
inc
sarb
and
addb
push
hlt
inc
pop
adc
mov
dec
insl
js
pop
xor
minps
mov
bound
fisubrs
test
cmp
mov
ret
cmpsb
xor
enter
stc
mov
movsl
xor
pusha
jno
cltd
adc
shll
lret
mov
inc
shlb
xchg
xor
inc
loopne
mov
xor
fwait
push
and
xchg
dec
mov
lds
out
cmp
mov
and
testb
mov
mov
inc
jne
lods
pop
pusha
in
jl
clc
jmp
cs
repz
or
jmp
sub
nop
inc
adc
mov
adc
lret
addb
jbe
push
rcll
xchg
jmp
sub
jo
mov
inc
aad
sub
in
or
test
cltd
les
push
or
mov
iret
xor
stos
fisttpll
sub
repz
xchg
dec
out
pusha
push
sbb
inc
add
dec
in
in
xchg
test
xor
fcoms
leave
or
insb
stos
add
in
dec
cmpsb
pop
mov
xor
mov
hlt
jecxz
popf
lret
xor
xchg
pop
jmp
popf
jae
in
ss
pusha
outsl
pop
mov
xchg
cmp
les
push
lcall
jbe
dec
pop
movsl
push
jg
mov
adc
pop
sbb
xchg
inc
mov
lea
cmp
subl
and
or
aas
sbb
push
mov
or
rcl
popa
mov
sub
jbe
jge
fwait
xor
xchg
jo
icebp
push
jns
inc
add
fldenv
and
repnz
jmp
mov
xchg
out
inc
sti
ret
jecxz
pop
testb
js
pop
nop
pop
aad
or
xlat
std
sub
stos
gs
add
pop
adc
jbe,pn
into
or
pop
mov
lcall
add
pop
push
repnz
mov
mov
jle
add
xor
cwtl
mov
pushf
js
sbb
sbb
xchg
xlat
push
test
nop
adc
mov
push
mov
test
popf
call
xchg
jge
sti
lret
sbb
mov
dec
pop
stos
enter
mov
call
mov
or
movsl
clc
push
adc
pop
mov
lret
fldenv
xor
mov
rcrb
push
push
jno
ret
hlt
sbb
add
call
call
mov
pop
inc
cmp
dec
add
shll
mov
push
mov
dec
insb
loop
mov
inc
iret
jmp
cwtl
or
test
aad
les
in
bound
das
or
movsl
test
stos
stc
pop
icebp
rorl
xchg
dec
xchg
movsl
mov
call
ds
mov
sub
inc
lods
cmp
mov
mov
ss
xlat
mov
sub
or
outsb
out
xchg
fld
test
ss
jne
xchg
mov
nop
adc
sbb
int3
js
ret
dec
enter
lahf
int3
add
mov
inc
jg
popa
shll
dec
add
add
adc
add
outsl
fsts
jecxz
int3
mov
dec
dec
cmpsl
in
jno
inc
pop
cmp
adcl
sub
jbe
popa
add
push
inc
es
sub
xchg
cmp
add
in
clc
dec
inc
testb
sbb
dec
push
dec
jnp
mov
or
cmp
sbb
sbbl
sbb
sub
jbe
inc
sub
and
inc
notl
xchg
rorl
mov
jle
pop
inc
loop
test
clc
leave
cmc
push
dec
xchg
enter
inc
lock
mov
mov
insb
fnstcw
push
out
int
push
sub
xor
jg
dec
lds
les
das
push
xchg
pop
and
sbb
call
stos
xchg
mov
and
insl
rorb
and
repnz
dec
lock
mov
es
ret
leave
pop
sub
cmp
xchg
roll
sub
aaa
add
outsb
jle
imul
add
xor
cmp
mov
jb
js
or
sahf
mov
cmpsl
mov
lahf
sbb
cmp
dec
out
outsb
pop
shll
mov
cmc
mov
mov
sub
mov
xor
pop
inc
lods
or
push
pop
cmpsl
mov
daa
mov
add
and
mov
xor
test
or
mov
jl
lods
mov
nop
pushf
cmp
sti
mov
test
pop
jnp
imul
cmpsl
mul
push
lret
loop
sbbb
add
xorl
lods
mov
xor
jno
xchg
inc
cmp
adc
cmp
xchg
nop
imul
sbb
or
and
sbb
lds
inc
movsb
out
lds
sbb
clc
loope
jbe
ret
ret
out
ret
push
out
inc
or
pop
sub
inc
lds
xchg
aas
mov
mov
inc
or
adc
jnp
outsl
xchg
fnstsw
cmp
push
mov
test
cmp
pushf
add
popa
gs
incb
das
dec
ret
fldpi
aas
lret
sbb
aam
or
imul
divl
repz
mov
cmp
adc
fwait
stos
inc
inc
xchg
sub
push
sbb
lock
jbe
das
fadd
adcb
sarb
out
adc
jp
jg
stc
fistps
sarb
cmp
xor
sahf
ficoms
add
jge
cld
xor
push
das
mov
mov
ret
fwait
jb
sub
outsl
jl
leave
int
or
stos
dec
jg
sub
cld
fmuls
ss
hlt
leave
pop
mov
imul
icebp
sti
or
lods
adc
mov
nop
imul
push
lret
xor
out
cltd
ret
test
bound
mov
insb
and
adc
mov
orl
xchg
lcall
repz
popf
ss
lret
ljmp
cmpsb
arpl
jo
inc
leave
cmp
loope
imul
test
mov
pop
jle
enter
or
dec
jb
and
into
in
js
cld
push
jge,pn
sbb
imul
scas
mov
icebp
subl
mov
push
mov
cmp
aaa
jmp
test
stc
sarl
push
lret
lods
xor
les
loopne
popf
xchg
iret
inc
mov
int
pop
add
jmp
ljmp
or
int
dec
lods
or
xchg
lods
xor
cwtl
jl
xlat
pop
movsl
pusha
mov
aaa
js
or
xor
xchg
shlb
scas
adc
fcoml
mov
nop
push
push
daa
xchg
jne
fists
cli
adc
pop
out
jnp
je
sub
lret
cmp
mov
and
cld
and
sbb
mov
cmpsl
sub
push
sbb
lds
push
insl
sub
jmp
pop
mov
daa
mov
aaa
add
cmp
das
sub
rolb
test
in
fwait
add
loopne
pop
cwtl
jmp
jne
shl
add
mov
iret
sub
repnz
pop
sub
fisubl
idiv
push
lea
pop
jmp
jne
not
xchg
iret
out
outsl
js
mov
xchg
mov
lret
mov
lcall
sti
mov
lds
les
lcall
outsb
cltd
repnz
out
add
or
orb
inc
call
mov
leave
arpl
shr
loope
hlt
sahf
mov
insb
js
scas
arpl
xor
cmp
sbb
ror
jno
push
aas
cmp
push
cmpsl
ret
lods
xor
pop
jo
add
popa
insl
fdivrs
dec
popf
frstpm(287
iret
imul
mov
pop
xchg
insb
sub
adc
or
ret
punpckhwd
inc
or
subb
jbe
pop
xchg
nop
mov
sarb
movsb
cmp
and
negl
int3
xor
data16
std
add
int3
into
xor
mov
xchg
dec
fcmovnb
sar
pop
aam
notb
int
sahf
test
sti
push
xchg
inc
cmp
xor
mov
inc
fldt
pop
mov
fsubrs
aam
rol
lahf
sahf
push
dec
stos
std
dec
xchg
out
push
mov
insb
jp
andl
iret
pusha
lcall
stc
stos
cli
shll
add
and
mov
pop
orl
sub
out
xchg
cwtl
sbb
aaa
sub
xor
xchg
push
popf
pop
pusha
lds
loopne
push
sub
cltd
mov
or
adc
cs
push
sti
push
xor
mov
sarb
sub
or
jg
sbb
roll
lods
xor
dec
stc
pop
inc
push
pushf
sub
pop
stc
inc
push
mov
jno
pop
ss
into
sub
rorb
adc
add
inc
or
adc
adc
rcrb
xor
jo
push
sbb
pop
or
cltd
push
inc
mull
jl
mov
decb
jmp
mov
and
mov
out
fs
pop
repz
bound
std
fldt
dec
mov
ret
test
int3
push
loopne
and
xor
xchg
movsb
mov
pop
je
jge
push
sbb
mov
popf
out
daa
dec
rcrb
mov
push
pop
or
push
sti
jecxz
and
xchg
test
dec
dec
jb
outsl
pusha
sbb
add
ja
shl
sbb
aam
mov
out
rcll
xchg
fdivrs
lods
hlt
dec
cmp
cmp
into
pop
fdiv
xchg
or
lret
roll
shl
pop
add
jne
adc
stc
into
out
imul
xlat
je
mov
fcompl
insb
mov
iret
mov
aas
dec
test
dec
into
cmp
ret
es
and
in
test
mov
cmp
ror
out
or
and
mov
xor
loope
fsubrs
ss
xor
xor
popa
pminsw
iret
jb
xchg
or
fists
add
scas
or
int
mov
dec
and
rclb
or
outsl
jno
cld
repnz
outsb
lahf
pop
ja
sbb
enter
inc
mov
movsb
and
jg
inc
movl
mov
xchg
inc
add
bound
push
adc
cwtl
mov
lcall
dec
xchg
leave
push
movsl
adc
aaa
push
punpckhwd
int3
outsb
pop
cmpsl
enter
test
push
movb
adc
pop
dec
dec
scas
pop
mov
dec
ficoms
leave
mov
jl
fisubrs
out
add
pop
test
in
fcomp
xchg
movsb
xchg
lods
mov
fnstcw
xor
test
jne
movsl
inc
sbb
inc
imul
or
push
out
loopne
in
out
sahf
das
movsb
xchg
mov
jecxz
pop
mov
adc
cltd
ss
xor
jle
inc
outsb
cmpsw
pop
cmp
sub
cmc
lret
imull
ret
test
js
push
fsts
lock
into
repz
mov
xor
cmpsl
xchg
and
je
movsb
or
xor
mov
push
xchg
or
addr16
pop
and
jno
loope
mov
jo
loopne
repz
mov
shlb
addl
xchg
dec
jo
aaa
adc
pop
mov
jo
mov
or
std
in
sbb
dec
jl
out
sbb
xchg
lds
mov
cli
pop
xor
hlt
ds
repnz
dec
sbb
mull
sub
lods
push
leave
jo
jmp
out
imul
xor
sahf
push
icebp
jmp
popf
xchg
and
sbb
sti
in
scas
mov
dec
pop
nop
or
adc
fwait
sub
adc
and
les
loopne
push
ds
adc
sbb
arpl
xor
xchg
sub
decb
jle
pusha
xor
popa
repz
dec
cwtl
sub
out
in
cmc
shll
cli
cs
xchg
cmp
xchg
sbb
sarb
adc
xor
filds
inc
daa
sub
pushfw
cli
cs
xchg
pop
ret
cmc
ljmp
jg
add
arpl
lds
or
pop
push
mov
pushf
adc
loop
loop
mov
out
mov
ss
mov
sbb
adc
xchg
xchg
dec
mov
in
mov
out
ds
sbb
pop
adc
mov
dec
arpl
test
push
add
dec
jb
int3
jmp
ret
jmp
jnp
and
lret
sub
in
mov
dec
nop
orb
pop
xor
xlat
mov
cli
stos
stos
aaa
repnz
mov
test
or
xor
lock
loop
repz
fildll
add
push
std
cmp
or
and
sbb
ja
test
or
mov
adc
mov
das
outsl
cwtl
jmp
lret
jp
dec
sarb
cld
add
clc
adc
mov
xchg
loope
jl
in
cmp
das
cs
cmp
insb
test
dec
pop
cli
sarb
push
push
jo
jge
xchg
outsl
add
dec
cmpb
and
das
aam
xchg
dec
ds
and
pop
repnz
arpl
out
add
test
enter
jns
mov
mov
pop
xchg
push
or
adc
mov
cmp
pop
xchg
in
sub
out
stos
into
jnp
pop
xchg
xchg
jns
jnp
popf
mov
dec
mov
scas
jbe
sbb
add
sbb
xchg
fbstp
icebp
cwtl
jp
inc
pop
insb
nop
and
fwait
jb
lods
push
add
mov
shrl
filds
mov
hlt
and
test
mov
mov
mov
shr
jo
inc
stos
jb
lock
iret
mov
rol
stc
cmpsb
jb
sub
lret
xchg
pop
push
mov
add
mov
push
cmp
dec
mov
clc
jnp
pushf
push
ja
and
std
pop
xor
xchg
lret
insb
push
inc
mov
fwait
add
push
xor
addb
ljmp
sub
mov
je
push
mov
mov
ljmp
in
xchg
mov
jne
inc
ljmp
mov
push
decb
loop
test
enter
hlt
test
sbb
xchg
pop
fstl
sbb
xchg
stc
dec
ja
cmp
js
jmp
sub
xlat
dec
mov
fs
sub
push
cmpl
divl
push
xor
sahf
sbb
add
data16
sbb
sub
repz
ficoml
jge
cmpl
rclb
arpl
pushl
js
in
arpl
mov
andb
xor
mov
add
loopne
mov
adcb
adc
adcb
adcl
mov
lret
rorl
je
jecxz
iret
mov
push
imul
jnp
adc
daa
cli
test
or
lret
pop
pop
fiaddl
sub
cmp
fnstsw
insl
lret
dec
pop
stc
sbb
mov
jmp
in
cmp
push
or
daa
cmp
push
sbb
in
icebp
xor
hlt
xchg
dec
jo
push
mov
or
bound
mov
out
xor
inc
bound
jbe
xchg
mov
mov
js
jno
dec
sbb
mov
decl
cmp
imul
int
jns
nop
ret
fnstenv
in
mov
adc
add
nop
aad
dec
ds
dec
or
xchg
mov
or
insl
pop
sbb
cmp
lahf
loop
rcll
sbb
jmp
imulb
mov
int3
in
xchg
add
sbb
sub
test
ret
pop
sub
sbb
fs
and
sub
pmulhw
xchg
mov
shr
or
jle
or
pop
fstpt
inc
addr16
dec
or
lret
push
jg
ljmp
cltd
icebp
pop
lret
cwtl
sahf
cmp
scas
inc
lret
stos
ljmp
imul
xor
pop
mov
sahf
cmpsb
xor
cli
sahf
dec
int
jae
mov
and
std
jns
inc
mov
fistl
lcall
push
sub
mov
or
imul
daa
lret
cmp
push
xor
adc
imul
sub
lock
cld
jp
int3
xor
out
test
xor
test
pop
sub
das
xor
inc
xor
incl
ret
jle
not
jmp
jb
jg
dec
insb
sbb
mov
inc
adc
dec
ds
dec
out
inc
inc
jbe
cwtl
dec
ss
cmp
adc
jae
mov
std
mov
enter
cmp
jo
ja
adc
pop
aam
scas
jp
sbb
clc
insl
inc
jl
xor
dec
stos
add
adc
loop
jl
rclb
mov
das
out
std
xor
mov
xchg
fimull
dec
sub
mov
adc
ret
pop
fmuls
sub
call
fwait
sbb
mov
in
push
leave
cmp
stos
loopne
xchg
loopne
mov
gs
repz
in
iret
lds
es
mov
cmp
jmp
jb
lcall
movsl
jmp
inc
ret
in
sub
test
inc
hlt
push
xlat
sbb
test
xchg
scas
xchg
shll
fsubs
jno
adc
add
xchg
jl
test
sbb
in
inc
mov
mov
mov
cld
lcall
inc
add
shr
outsb
xchg
mov
fistps
mov
and
int3
inc
pusha
cwtl
ret
sahf
lods
push
add
lea
adc
dec
dec
scas
jmp
andb
xchg
popf
out
mov
jmp
nop
sub
imull
es
jle
sti
out
scas
and
push
dec
cmp
mov
dec
xor
push
ret
movsl
sbb
mov
aam
mov
mov
lea
mov
nop
in
call
cmpsl
push
repnz
fiadds
and
xor
jle
cmpsb
and
dec
sbb
pushf
push
mov
push
pop
xor
adc
sbb
rcr
xchg
popa
stc
mov
mov
inc
and
dec
mov
cmp
into
mov
scas
xor
push
add
outsb
adcb
popf
js
insb
dec
ds
inc
or
lea
mov
and
outsl
popa
sbb
jns
or
loopne
lsl
add
adc
or
shl
arpl
int
mov
cld
and
xor
push
inc
lock
pop
incb
pop
mov
negl
pop
push
lock
lahf
pop
push
cld
adc
jns
xchg
lea
aas
fwait
mov
inc
dec
shll
mov
leave
sahf
dec
mov
ja
dec
cmp
cmp
sti
xchg
jo
scas
mov
cmpsl
mov
sub
les
fs
mov
aas
inc
jnp
test
xchg
and
out
mov
sub
aas
testb
pusha
dec
xor
xor
shlb
lahf
gs
sub
scas
dec
jl
adc
mov
lods
roll
cmc
inc
cltd
sub
push
xchg
and
xchg
outsl
mov
pop
xchg
inc
cmp
loope
push
pop
jno
xor
lods
divb
call
fisubl
xchg
cli
mov
push
into
inc
dec
movsl
jl
lret
ret
pop
in
push
xor
outsl
mov
orl
loope
jecxz
xchg
bound
push
mov
lds
frstor
mov
es
pop
jle
sub
jae
sub
xorl
int
mov
or
stos
ja
sbb
mov
push
pop
jecxz
mov
jae
mov
or
sbb
repnz
fnstsw
xor
test
jp
xor
ds
imul
jl
xchg
mov
dec
jno
cmc
call
fwait
daa
mov
sub
lcall
inc
push
fucomp
add
pushf
lcall
and
pusha
dec
sbb
call
icebp
lock
pop
or
cmpsb
lods
or
int
shrl
popf
or
dec
sarl
into
pop
stos
cld
aad
sub
mov
fimuls
es
cltd
cmp
iret
push
jecxz
xchg
inc
pushw
mov
iret
enter
push
outsb
jmp
aas
adc
push
sbbb
push
pop
xchg
leave
and
mov
das
or
lock
push
xor
push
xchg
ficoms
cmp
rorb
jno
xchg
outsb
popf
adc
sub
xor
cltd
sub
cmp
mov
shll
inc
fst
add
stos
sub
sub
push
movlps
fistl
cld
aad
pop
sub
scas
sub
insb
add
xchg
or
push
adc
arpl
or
add
stos
jns
adc
add
sub
cmp
push
pop
add
pop
jge
dec
scas
insl
rol
mov
xor
sub
mov
rcr
out
subb
int3
push
sub
and
outsb
sub
push
xchg
je
adc
adc
mov
ja
xor
adc
rolb
aam
push
mov
nop
stos
fstl
ror
dec
mov
push
dec
dec
lea
cs
mov
sbb
clc
or
and
add
mov
or
aas
and
and
rclb
sub
andl
vpshuflw
lcall
fcoml
push
add
in
pop
cmp
loopw
daa
push
repz
pop
rclb
lea
test
cmp
daa
push
loope
movsl
call
icebp
xor
or
int3
fsts
pop
add
xor
lods
sub
mov
push
dec
and
inc
push
nop
mov
cmp
push
stos
sbb
jno
scas
mov
andb
imul
pop
lea
push
repz
movsw
dec
enter
mov
cwtl
dec
sub
mov
or
dec
dec
rorl
mov
add
inc
imul
outsl
dec
sub
jecxz
xchg
out
cmpsl
das
sarl
add
movsl
mulb
roll
xor
in
addr16
and
cmp
test
cwtl
sbb
mov
push
push
sti
xchg
push
data16
shll
jne
lcall
dec
adc
cmp
rcrb
sbb
adcl
add
cmpsl
mov
leave
test
outsl
adc
arpl
mov
mov
shrl
cmp
or
add
popf
add
aas
inc
adc
mov
fidivl
loopne
dec
in
push
or
in
push
inc
cltd
pop
test
push
insl
adc
add
insb
out
mov
dec
mov
fmuls
pusha
mov
push
inc
cmp
inc
xchg
aam
out
fmull
lock
mov
stos
push
lahf
shl
sbb
and
xchg
and
adc
repnz
xchg
cli
mov
push
adc
xor
xchg
dec
xchg
jp
jbe
push
dec
iret
les
and
leave
jbe
ficoms
loop
push
cs
lea
dec
mov
adc
or
sub
cmp
insl
repz
call
push
movsl
mov
in
and
lcall
lahf
add
dec
pop
fnstcw
loop
or
cmp
loopne
mov
lahf
popa
fsubrl
fistl
ret
mov
mov
in
pop
pop
int
mul
lods
or
fsubrs
jge
jecxz
mov
or
sub
xchg
inc
out
jl
push
aaa
int
test
fisttpll
jne
les
pop
je
cwtl
stos
scas
push
clc
xor
lds
leave
mov
filds
nop
sbb
cmp
push
loopne
pop
jge
mov
ss
scas
fsubrl
les
fwait
jae
into
loop
fcmovnu
aam
xor
movsb
and
nop
fldenv
lods
mov
mov
aaa
mov
jbe,pn
fsts
xorl
das
fmuls
jecxz
mov
aaa
sbb
movsb
mov
insl
repz
pop
lcall
or
push
xchg
and
ja
aad
shll
xorb
lds
xor
sub
xor
movsb
clc
gs
mov
mov
mov
mov
out
int3
sub
push
sub
shl
and
pop
mov
inc
negb
cmpsl
filds
pop
or
mov
fucomi
and
sbb
out
stos
xor
jb
loopne
popf
fsubrp
pop
shlb
jnp
xor
and
popa
fstl
mov
cmp
outsl
mov
cwtl
add
push
mov
int3
mov
aam
xlat
call
and
pop
xchg
mov
insb
lahf
push
es
rorl
int
mov
or
sbb
lret
arpl
sub
and
xchg
sub
iret
not
pusha
inc
sbb
hlt
stos
hlt
sti
pop
or
mov
ljmp
in
iret
daa
in
cmc
sbb
dec
push
mov
jae
mov
pop
in
xor
out
mov
dec
leave
jp
jg
or
fnstcw
fs
mov
adc
jg
sub
mov
stos
mov
xor
cmp
push
inc
pop
stos
jo
and
lods
push
out
inc
jmp
push
xor
dec
loop
hlt
iret
xor
fwait
xor
jl
push
cmc
dec
jg
pop
loopne
push
mov
jecxz
sbb
popa
mov
fs
pop
push
jno
push
inc
popa
lret
sub
cmp
in
dec
dec
sbb
cld
mulb
lods
call
clc
icebp
mov
adc
cmp
ret
or
mov
fisubrl
jns
jnp
sarb
pop
shlb
andl
cmpsb
lock
mov
pop
enter
nop
lods
in
jmp
adc
and
adc
arpl
cmp
mov
adc
mov
mov
in
push
lret
push
out
cmc
inc
testb
mov
jg
mov
mov
cmp
xor
sbb
mov
pop
sub
mov
mov
or
adc
mov
cmp
adc
ret
pop
iret
push
arpl
aad
outsb
jecxz
leave
ffreep
adc
scas
imul
rclb
lods
jno
jg
pop
add
imul
out
imul
pop
jb
sub
pop
lcall
mov
cmc
xorb
mov
push
or
adc
inc
int3
insl
xchg
js
iret
sti
sub
xorb
mov
leave
out
inc
or
mov
aam
test
ja
fwait
xor
outsl
add
mov
jae
add
or
jmp
inc
lock
push
les
push
xchg
jbe
sub
shlb
xor
xchg
jl
pop
insb
loopne
mov
mov
jmp
andb
data16
push
lods
jle
and
lea
cmp
mov
cmpl
daa
push
dec
in
jns
jecxz
sbb
sbb
and
loopne
jmp
div
mov
rorb
iret
jp
add
gs
mov
rorl
aaa
and
and
jg
stos
insb
mov
outsl
daa
pop
outsl
cmp
faddl
push
cmpsb
mov
sti
scas
sarb
cmp
insb
jmp
test
mov
pop
roll
aam
pop
clc
scas
adc
lret
mov
jl
xlat
mov
lock
xchg
push
or
pop
xchg
inc
inc
fnstenv
syscall
mov
inc
mov
push
insl
arpl
pushf
cmc
not
add
popa
lahf
inc
fwait
into
mov
add
and
in
add
fildll
or
mov
movsl
jl
jge
int
cmc
mov
and
push
mov
loop
and
mov
aas
add
xchg
sbb
cmp
roll
or
sbb
bound
sub
lcall
add
movsb
movb
adc
mov
lret
repz
sbb
insb
popa
inc
mov
jne
adc
shrb
cmpsl
orl
sahf
fmuls
js
icebp
bound
out
clts
fsubs
stos
push
lea
call
push
or
shlb
aam
mov
int
mov
dec
imul
lds
mov
sub
mov
in
mov
push
aam
and
mov
and
xor
out
xchg
fimull
test
inc
ljmp
hlt
xor
push
adc
cmp
aas
or
sbb
mov
mov
pop
cmp
push
push
push
loop
pop
outsl
fsubrs
inc
scas
dec
mov
in
insw
bound
jl
ret
sar
gs
add
mov
lock
ds
mov
mov
adc
and
lret
mov
push
jge
cmp
mov
loopne
lcall
sarl
movsl
or
rcll
push
mov
into
mov
inc
sarb
movsb
xor
xchg
add
ljmp
bound
cmp
leave
fsubs
xor
sbb
adcl
cmpsl
add
or
push
sti
stos
dec
xchg
cmp
mov
cmpsb
add
shlb
jae
jp
cmp
push
mov
xchg
lods
mov
nop
cmc
inc
push
iret
pop
loop
jno
ror
lret
decb
mov
loop
adc
jbe
mov
adc
andl
jg
repnz
inc
imul
fucomi
daa
jp
aaa
loopw
cmp
mov
jne
pop
adc
std
movsl
add
add
pop
fldt
cmp
push
fisttpl
dec
cwtl
mov
stos
mov
xor
test
jns
inc
sbb
int3
mov
mov
lds
push
sbb
cmpsb
mov
adc
std
sti
push
popf
xchg
dec
int
aam
int
xchg
arpl
xchg
mov
or
cmp
lret
ja
adc
fisubrs
xchg
cmpsl
xor
push
pushf
sbb
das
mov
add
fdivs
xchg
ds
xor
fmul
mov
pop
and
pusha
bound
cltd
pop
pop
pop
insb
mov
mov
jne
notb
xchg
movb
xchg
outsb
cmpsl
cmc
add
outsl
mov
leave
pusha
pop
sub
push
sahf
fcoml
fcoms
lahf
test
ror
insl
push
cmp
or
adc
jo
stos
lahf
or
or
pusha
dec
cmp
cmpsl
cmpsb
adc
dec
xchg
inc
mov
les
mov
fstpl
mov
bound
in
rclb
rcl
xor
cmp
cmc
xchg
push
sar
mov
popf
dec
psubusw
jns
sub
pusha
pop
xchg
popa
push
jecxz
or
out
push
in
idivb
and
addps
sub
int3
dec
outsb
cmc
ljmp
in
mov
aam
mov
ljmp
pop
andb
pop
ficoml
or
cmp
pusha
fiadds
test
scas
mov
aaa
sub
rcrb
test
lcall
loopne
jne
inc
cld
lret
or
dec
enter
jbe
push
lcall
dec
lods
mov
sbb
gs
das
es
mov
dec
imul
popa
ljmp
pusha
cmovge
mov
push
js
adc
pushl
rclb
pop
jecxz
mov
jb
inc
out
mov
subb
scas
out
in
jmp
aas
cmp
jp
adcl
push
inc
int3
or
or
pop
leave
push
test
xorb
adc
inc
sub
iret
into
cwtl
pop
rcll
xorb
push
es
into
dec
int3
add
roll
scas
imul
jp
pop
stos
xorb
jo
in
insl
or
enter
inc
mov
xchg
jl
shll
xor
mov
scas
add
push
icebp
dec
out
lret
xchg
call
das
lret
pop
test
stc
sbb
scas
fdiv
daa
sbb
push
icebp
xor
pop
and
sahf
cli
std
ror
push
std
movsb
lahf
cmp
fnstcw
rol
js
sub
cmpsl
addr16
aas
lret
lcall
pop
stos
fisttpl
imul
inc
scas
mov
cmp
push
add
mov
mov
out
icebp
lahf
or
push
inc
rolb
sbb
aad
std
mov
adc
sub
in
adc
adc
cmc
mov
sti
lahf
cmp
ds
iret
and
loop
jle
std
std
adc
sbbl
add
adc
and
lret
sub
xor
ljmp
jae
push
iret
fcompl
dec
push
hlt
dec
xor
jge
cmpsl
das
mov
push
mov
ja
fsub
cwtl
pop
push
dec
outsb
pop
sbb
inc
jno
pop
xchg
ds
daa
leave
insb
aas
mov
xchg
jl
add
xchg
and
mov
cwtl
lock
pop
int3
aaa
fwait
ljmp
ja
test
jg
xchg
jle
into
mov
push
scas
xor
pop
mov
inc
jns
mov
test
shl
in
mov
lods
imul
pop
mov
int
cld
popf
mov
sub
cmp
rorb
ret
xchg
mov
mov
mov
push
push
mov
cltd
xlat
sbb
inc
shl
push
jg
cld
mov
sub
inc
stc
clc
mov
out
rcrb
jl
enter
repz
xlat
push
gs
xchg
scas
iret
dec
dec
pop
pop
fdivrl
xor
sarb
inc
lahf
call
lea
push
negb
movsb
aam
xchg
jns
xlat
xor
icebp
lcall
aam
xchg
push
mov
jae
jnp
adc
adc
add
fdivrl
jle
cmp
fisubrl
lahf
stos
mov
pop
jnp
imull
outsl
icebp
or
sahf
jae
push
movsb
mov
add
mov
add
in
mov
or
mov
mov
jnp
cld
rclb
inc
xlat
std
enter
jmp
sub
dec
push
fsubrs
xchg
mov
incl
repnz
pop
inc
adc
xchg
loope
adc
mov
jae
mov
pop
inc
ja
in
pop
push
mov
push
iret
jbe
pop
jnp
add
jns
xchg
ljmp
mov
adcl
pop
pop
into
sub
xchg
hlt
out
or
addr16
aas
outsb
cs
decl
dec
pop
pop
ljmp
or
add
shlb
mov
sar
fwait
movsl
push
stos
ret
rcrb
add
daa
lock
push
add
in
mov
xchg
mov
push
and
les
xor
inc
jo
shrl
inc
rcr
xor
jmp
or
fs
ljmp
push
jmp
jb
jnp
mov
jg
xorl
fwait
lods
fimuls
int
sub
pusha
push
int
out
xchg
jl
bound
repz
popf
add
dec
adc
data16
pop
xchg
out
cmpsb
xor
shll
sbb
xchg
and
push
mov
fs
fstl
mov
fiadds
rorl
sbb
mov
and
aam
popa
fmuls
cmp
xor
jo
lahf
jmp
sahf
mov
push
fnstsw
mov
insb
inc
test
adc
cmpsl
cwtl
sbb
xor
insb
fldcw
or
out
xor
stc
js
out
enter
fmull
sbb
sub
and
int
sbb
dec
shll
out
icebp
pop
pop
rorl
xchg
xor
add
rorl
mov
xor
cmpsl
aaa
shr
pop
inc
testl
popa
in
out
jns
repnz
dec
pop
int3
stos
sbb
rcrl
mov
sub
adc
xor
in
xchg
push
jmp
outsl
fsubrl
jns
push
jp
jp
and
xor
lret
mov
jno
jp
arpl
lret
outsl
push
imul
jge,pt
mov
jae
ror
lods
test
outsl
fimuls
out
inc
leave
xchg
xchg
jmp
insb
mov
inc
aas
mov
sahf
jmp
xor
mov
pop
movsb
sub
inc
cwtl
jbe
je,pt
shr
int3
push
ss
cwtl
mov
stos
test
outsb
lock
std
iret
add
xor
pushf
mov
lret
and
xor
daa
jne
push
test
dec
mov
jne
pusha
fnstsw
push
fdivl
add
inc
outsl
mov
or
cmp
adc
imul
xor
sub
test
sub
adc
add
push
stc
jo
divl
add
mov
lods
cmp
add
pop
push
in
dec
push
adc
xor
fisubrs
cltd
jno
stos
xchg
push
into
clc
mov
sub
cmp
xor
fcmovnbe
cmpsb
sub
loopne
dec
add
outsl
cli
outsb
jp
sub
mov
call
pop
movsl
cmp
bound
dec
decl
push
pop
mov
int
fsubl
cwtl
fisubrl
jmp
pop
add
cmc
add
neg
inc
and
nop
out
push
push
clc
mov
cmpl
mov
ds
xor
ret
cmp
dec
or
push
lods
cli
in
mov
add
xchg
mov
adc
scas
cmp
int
ljmp
and
inc
pop
cwtl
adc
sub
dec
push
test
sbb
inc
mov
lds
add
xor
mov
mov
jns
xchg
xor
push
add
add
and
jp
sbb
bnd
mov
scas
xchg
cmp
leave
int3
push
or
inc
sbb
sbb
into
jbe
cmpsb
ficompl
mov
lods
scas
inc
shr
fiaddl
ficompl
call
mov
mov
fstps
sub
mov
xchg
adc
xchg
xchg
pop
jmp
pop
push
gs
xor
inc
in
and
hlt
jne
test
push
pop
leave
insb
popf
jg
push
sbb
xor
aad
dec
xchg
mov
fcmovne
pop
dec
or
mov
sub
push
jne
inc
out
mov
jno
or
adc
ret
js
inc
cs
inc
jmp
fsubl
mov
add
test
xor
cmp
into
inc
popf
inc
dec
frstor
cmpsb
mov
sbb
jl
lcall
cmpsb
jae
imul
adcl
int3
xchg
mov
xchg
mov
and
jo
mov
mov
frstor
pop
ficoms
ror
mov
xchg
cmp
call
in
cmp
add
cmp
into
sub
test
cltd
or
idivb
sbb
fdivrp
xchg
stc
adcl
xchg
es
andl
pop
out
and
arpl
and
in
stos
dec
mov
out
jg
add
push
cmp
icebp
ss
xor
mov
xlat
mov
add
push
jb
and
adc
shr
bound
pop
cmc
lahf
xor
pop
xor
or
test
adc
shll
push
mov
jl
aad
pop
pop
or
lcall
das
ret
pop
in
scas
mov
inc
out
icebp
inc
arpl
daa
ljmp
pushf
inc
adc
in
pusha
aaa
aas
std
je
loopne
gs
test
adc
and
outsl
mov
aad
sub
sub
adc
out
fs
clc
cmp
test
clc
xlat
adc
mov
sub
clc
mov
adc
push
leave
stc
dec
mov
into
cmp
mov
arpl
cli
scas
popf
jo
addl
in
mov
test
inc
fildl
pop
bound
cmp
mov
inc
sbb
and
dec
jno
test
cmpb
or
inc
mulb
mov
mov
lods
subb
inc
ljmp
popa
out
sar
jne
jae
xor
jge
into
sub
loope
in
test
insl
push
sbb
shr
faddl
mov
and
xor
add
ret
stos
sbb
lahf
pop
or
or
sahf
push
fs
jecxz
jne
mov
sahf
sub
cltd
mov
ja
or
pop
jmp
and
cmp
push
scas
mov
repz
sbb
adc
fs
nop
and
push
stos
cmpsb
jo
and
add
xchg
jno
mov
repnz
cmpsl
shll
lods
xchg
sahf
fists
dec
dec
and
jg
out
fdivrl
xor
pop
jl
add
pusha
inc
xchg
or
mov
out
mov
int3
add
xchg
fstps
add
mov
scas
sub
xor
leave
sub
adc
lods
mov
and
mov
out
stos
repnz
jno
xor
jnp
pop
sub
ja
adc
fwait
in
cmp
xchg
addl
pop
xchg
add
repnz
pop
adc
mov
cmp
stos
cmpsl
inc
dec
inc
pop
scas
xor
and
mov
in
testl
fst
cmpsl
dec
pop
insb
xor
sahf
mov
lea
mov
pop
sub
daa
jle
pop
aas
cmc
jg
pushf
cltd
sahf
push
mov
add
mov
mov
shlb
cmpsb
hlt
test
lcall
mov
mov
cmp
xchg
cmp
ret
mov
sbb
leave
add
pop
mov
mov
clc
mov
mov
cld
sbb
push
xor
dec
mov
mov
insb
add
divb
pusha
add
je
loopne
xchg
lods
fstp
cwtl
aas
pop
mov
sahf
mull
lods
cmc
inc
xlat
add
pop
pop
add
push
dec
jne
mov
std
jl
xor
add
mov
aam
pop
movsb
rolb
enter
dec
xor
jbe
mov
xchg
adc
adc
jns
pop
push
jle
roll
cltd
xchg
inc
add
sub
data16
cwtl
movsb
lds
mov
push
ds
inc
xor
xchg
mov
movsb
adc
lahf
inc
loopne
dec
or
adc
aad
icebp
insb
mov
jge
sub
dec
outsb
xchg
mov
xchg
xchg
xor
lret
add
or
or
daa
sbb
jne
in
insb
mov
mov
mov
mov
aas
cmp
dec
cmpsl
adc
in
add
push
xor
pop
and
cli
lahf
mov
xor
cs
xchg
inc
pop
and
jge
mov
in
movsb
and
clc
mov
mov
cmc
insb
dec
ja
cs
fistpl
pop
stos
popl
or
push
xchg
xor
leave
push
or
leave
pop
sbb
mov
push
in
push
mov
inc
daa
cs
lret
in
jl
mov
xor
adc
ljmp
xchg
lcall
jbe
dec
ja
sbb
les
fisttpl
shll
stc
not
lret
mov
shr
push
test
mov
divb
aaa
jb
lcall
fwait
mov
cmpsl
rcr
addr16
pop
mov
mov
xchg
int3
ljmp
inc
xchg
inc
lods
popf
push
mov
sbb
sbb
jae
pop
fs
push
cmp
test
or
inc
pop
xor
mov
xor
mov
fcmovnb
jne
push
fisttpl
pushf
dec
lahf
andl
sub
sub
rcll
cmp
hlt
movsl
inc
mov
mov
pop
sub
lock
mov
add
orb
mov
loope
or
in
jmp
mov
or
aas
cmp
pop
mov
sbb
nop
adc
pop
push
mov
int3
mov
adc
pusha
sbb
xchg
fidivrl
jmp
jmp
fadds
and
pop
int3
aam
into
mov
adc
or
std
xchg
add
jge
mov
lods
pop
in
in
inc
fsts
pusha
stos
xchg
jns
push
test
std
adc
sbb
push
xchg
add
pop
sbb
cwtl
sub
jle
insb
dec
adc
addr16
cs
outsb
pop
mov
add
dec
add
ss
dec
jb
cmp
lea
cmp
fimuls
pop
dec
cmp
out
push
jp
fs
lock
adc
inc
and
std
popa
mov
or
testl
push
sbb
lods
outsb
loope
dec
pop
pusha
lods
and
or
pop
xor
scas
das
mov
fcomps
insb
inc
mov
iret
inc
call
xchg
repz
fmuls
jo
pop
mov
push
dec
sub
or
in
xor
idiv
and
add
ficompl
xchg
cmpsb
fmuls
cmp
roll
test
pop
xchg
dec
out
and
jp
int
push
test
jnp
aas
dec
mov
pop
mov
pop
pushf
inc
jo
repnz
call
jbe
aas
leave
xchg
out
popa
jmp
arpl
inc
jge
mov
stc
mov
xchg
dec
adc
cld
imul
pop
scas
int3
sbb
stos
mov
lret
imul
dec
repz
push
outsb
mov
and
rorb
dec
lret
mov
mov
loope
and
sbb
icebp
sti
je
mov
jnp
push
mov
rep
aaa
das
clc
jge
pop
xchg
cmpsb
cmp
push
mov
or
and
cmp
shlb
nop
sarb
add
lea
jnp
push
xchg
mov
ljmp
punpcklbw
add
cwtl
shr
cmp
in
scas
pop
movsl
sbb
and
inc
push
in
pop
pop
sub
or
scas
shlb
and
inc
sbb
lea
es
fcomip
out
outsl
xchg
add
pop
or
add
out
xchg
mov
mov
push
inc
sbb
cmpsb
or
bound
mov
or
stc
sbbl
lcall
pop
mov
mov
mov
jle
or
ret
mov
add
stos
cmc
xchg
pop
xor
popa
imul
enter
inc
insl
stos
jg
imul
pop
cmp
leave
imul
pop
rorl
cmp
rolb
jl
fisttpll
in
push
push
sbb
xor
filds
mov
mov
and
cltd
mov
adc
inc
out
mov
fisttpl
popf
pop
lock
mov
mov
sbb
in
sbb
scas
arpl
cld
lcall
jp
ja
add
inc
mov
or
jo
adc
mov
xor
xchg
aad
call
aad
sbb
lods
push
fstpl
mov
lods
mov
ja
fwait
pop
add
cltd
mov
cld
test
cmp
imul
adcl
inc
cwtl
scas
xchg
and
out
dec
adc
push
fwait
jno
cs
test
lret
movsb
fcmovnu
pop
sbb
out
sbbl
sub
add
add
add
inc
nop
xor
sldt
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
