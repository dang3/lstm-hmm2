clc
jge
add
jle
add
jle
add
jle
add
add
add
xchg
jle
add
add
add
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shrl
mov
push
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loopne
mov
mov
mov
mov
pushf
sub
int3
imul
int3
push
dec
lret
int3
push
int3
mov
int3
push
int3
in
dec
int
outsl
cmp
ret
int3
insl
cmp
ret
cmp
int3
gs
int3
mov
inc
mov
int3
clc
pop
ror
push
int3
inc
pop
ror
gs
adc
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
and
mov
mov
mov
mov
sarl
adc
mov
bound
mov
jb
mov
shlb
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
mov
ret
ret
mov
mov
ret
mov
mov
mov
mov
mov
shlb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shlb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
shlb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
xchg
in
mov
pop
and
mov
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
loop
loop
loop
sarl
lahf
jp
mov
push
sbb
lss
fdivs
mov
mov
and
mov
add
push
or
add
push
ljmp
adc
sbb
push
repz
rolb
push
sti
sub
adc
push
pop
push
shl
and
and
and
and
and
repz
jge
shll
cli
dec
jo
popa
jo
push
imul
jo
imul
mov
mov
imul
outsl
cld
leave
dec
jno
outsb
jne
jne
jo
imul
cld
push
jae
inc
popa
pop
jno
aas
loop
push
push
jb
jmp
in
pop
outsb
gs
jo
outsb
push
pop
pop
push
xchg
cld
dec
outsl
gs
mov
and
dec
insb
popa
push
jne
inc
frstor
lahf
dec
jg
aam
jno
push
pop
mov
sub
ret
aas
outsb
popa
rcl
popf
sbb
inc
je
or
enter
dec
adc
mov
into
push
push
imul
jno
mov
int
outsb
jo
rorl
jnp
daa
loope
mov
mov
add
jo
out
mov
jecxz
in
sub
push
push
cmp
push
adc
mov
mov
add
ja
pop
sub
push
and
and
mov
imul
sbb
js
out
mov
jo
adc
std
pop
sub
or
es
clc
sbb
mov
and
lods
mov
sar
and
pop
sbb
popa
sub
int
cmp
push
rcll
mov
imul
insl
daa
xchg
mov
and
cmp
andb
or
add
sbb
es
cmc
push
adc
push
push
add
and
sbb
and
and
hlt
push
adc
fstpl
lahf
jno
push
adc
push
sbb
cwtl
or
out
outsb
mov
mov
adc
cltd
and
jno
adc
lea
loope
cmp
sahf
xor
daa
mov
lods
mov
enter
mov
daa
mov
dec
lods
sarl
int3
mov
enter
sbb
or
jb
das
pop
movsl
pop
xchg
scas
insl
xchg
mov
aas
add
pop
mov
cmp
pop
testb
cmp
mov
sub
mov
add
add
add
add
lods
mov
and
aaa
jb
es
mov
cmp
mov
xor
jnp
mov
cmp
aaa
ljmp
mov
mov
mov
js
ret
rclb
enter
mov
jmp
push
daa
push
test
mov
mov
std
std
testl
loopne
inc
notb
lret
das
inc
call
mov
xor
out
sub
push
push
sub
fsubr
out
or
pop
xor
in
repz
hlt
stc
cli
and
imull
or
xor
jno
daa
and
lret
jge
insl
add
pop
pop
xchg
mov
leave
cmp
pop
enter
push
sbb
push
icebp
add
leave
aad
mov
mov
stos
push
and
adc
mov
push
pop
mov
pop
mov
repnz
imul
rcl
mov
out
arpl
sub
and
add
inc
mov
call
js
xor
repz
mov
bound
jp
add
es
sub
loope
sub
mov
adc
daa
mov
cli
sbb
cmc
sti
imul
sbb
adc
and
repz
sub
and
and
sub
sbb
xor
shl
or
sub
shrb
mov
ret
jecxz
insl
pop
daa
repnz
push
es
mov
and
fistpll
aad
sub
inc
and
shrb
aad
fs
outsl
fisttpll
push
icebp
sti
add
mov
std
sub
mov
mov
pop
movsb
icebp
adc
mov
xor
lea
sbbb
xchg
mov
adc
aam
mov
or
mov
in
int
movsl
mov
loope
in
mov
repz
cmc
arpl
push
divb
stos
bound
xlat
and
daa
sbb
scas
insb
or
fnstenv
push
mov
jae
push
pop
stos
jecxz
std
cmc
bound
sarl
mov
jecxz
in
filds
jmp
int
sbb
push
data16
es
xor
push
in
lret
cmp
pop
sbb
push
lret
cmc
std
test
aad
daa
adc
sbb
or
imul
or
sbb
clc
xor
xor
test
mov
mov
add
pop
mov
shll
scas
mov
add
loop
fisubl
fmul
test
aad
imul
and
mov
in
mov
sbb
and
and
sbb
shl
sbb
shl
shrb
sbb
mov
hlt
sbb
and
jg
popf
and
dec
add
adc
mov
mov
add
add
iret
pop
xchg
imul
sbb
adc
repz
shll
mov
leave
and
pop
mov
adc
sub
xchg
loop
shlb
mov
int
add
repz
sub
sbb
repnz
insl
cs
stos
pop
push
mov
mov
divl
sahf
xchg
or
ret
adc
sub
add
and
push
mov
or
imull
mov
mov
xor
mov
xor
mov
aaa
sahf
pop
and
dec
cmpsb
scas
sbb
loop
or
imul
aam
loope
cmp
push
mov
daa
or
mov
mov
add
mov
mov
cmp
sahf
push
rolb
jmp
nop
xchg
xor
daa
scas
mov
std
es
idivl
inc
scas
sbb
mov
rclb
mov
push
xchg
cld
mov
add
hlt
push
adc
insb
mov
sbb
fimull
xor
daa
or
or
adc
jno
fildl
mov
jmp
mov
rcl
adc
insb
mov
mov
fdivl
das
ret
ret
mov
adc
popf
shll
or
je
mov
testb
test
loop
inc
or
xchg
sbb
and
or
imul
sbb
nop
outsb
imull
js
incb
stc
ljmp
or
or
dec
or
push
sub
lds
lods
mov
push
es
xchg
aad
dec
push
pop
int
mov
shrb
adc
mov
aas
not
mov
lds
inc
add
or
sub
les
in
ljmp
in
jne,pt
xchg
xor
mov
les
testl
cs
pop
xchg
sarb
test
imul
xor
mov
sarl
mov
test
mov
ret
pop
outsb
add
ret
out
into
pop
ds
add
imul
lcall
sarb
sbb
xchg
or
xchg
fimuls
inc
aaa
insl
cli
lds
sbb
lahf
aaa
add
ljmp
stos
xchg
mov
daa
sarb
mov
mov
pop
mov
add
and
cmp
xchg
push
push
andb
or
dec
cmp
scas
and
in
maskmovq
shlb
clc
in
jae
push
xchg
jno
into
cmp
jge
mov
popf
or
cmp
and
das
xchg
xchg
sub
test
dec
sbb
lret
es
lea
test
rcrb
cmp
mov
scas
sahf
orl
rcrb
sub
mov
aas
cmp
add
or
push
or
adc
and
addb
das
mov
movsb
pusha
and
stos
aas
aaa
jmp
cmp
lods
xor
mov
das
lods
sbb
xor
push
cmp
outsl
iret
lock
lea
jb
mov
pop
mov
mov
aas
repz
mov
inc
popa
imul
cmp
pop
pop
and
inc
das
push
inc
orb
cli
mov
and
add
fisubs
pop
xor
push
in
mov
mov
fidivrl
js
mov
les
xor
xchg
js
pop
sbb
push
cli
and
push
lcall
mov
test
xchg
scas
pop
sbb
pushl
cmc
mov
cli
out
jbe
or
sti
mov
sub
jns
sub
not
into
sarl
loope
fst
push
cltd
jnp
rorl
rcrl
ret
stc
xor
es
dec
pushf
inc
lds
repnz
mov
fisubrl
cmp
mov
leave
cmp
in
ret
in
jge
les
mov
add
push
stc
add
mov
jb
imul
in
jne
call
imull
jno
jg
xor
and
insb
cs
adc
faddp
sbb
mov
jl
xor
xor
mov
addr16
cmpsb
sarb
cmp
aas
insb
cltd
call
mov
lret
mov
shrb
sti
in
aas
es
ret
xor
sbb
loope
fmul
dec
mov
int
lds
loope
test
mov
ret
sarb
insb
imul
nop
pop
pop
xor
sub
sarl
popf
sbb
cltd
mov
sbb
rolb
push
pop
sub
ret
mov
repz
iret
add
aas
into
mov
or
dec
imul
push
shll
mov
xor
and
xlat
gs
mov
xchg
push
les
mov
clc
mov
into
stc
sahf
push
in
dec
ljmp
call
cmp
mov
into
imul
fbstp
cmp
lret
lret
arpl
fwait
inc
mov
shlb
negb
push
call
push
mov
mov
out
sahf
or
pop
scas
mov
test
push
mov
mov
add
into
mov
mov
jmp
push
mov
sub
out
movsb
pop
mov
mov
into
cmp
daa
push
xor
jp
sbb
stos
out
jmp
mov
ret
lret
adc
sbb
pop
call
push
cmp
lret
cmp
mov
popf
leave
ss
mov
cmc
mov
inc
outsl
jp
cmp
mov
xchg
cwtl
test
es
das
sahf
adc
ret
sbb
mov
dec
jg
cmp
daa
ret
icebp
movsb
bound
cmpl
fdivs
jg
jp
mov
mov
bound
nop
mov
shll
add
mov
out
adc
push
fidivl
pop
mov
mov
movzwl
icebp
or
bnd
adc
mov
mov
sahf
mov
cmc
mov
mov
mov
mov
inc
cmp
loopne
sub
jo
clc
fisttps
rol
push
fnstcw
in
mov
outsl
mov
and
dec
adc
dec
fwait
dec
loop
outsb
lret
mov
ss
pop
fists
lods
lret
cmp
mov
add
jae
push
test
iret
sbb
or
in
and
sahf
sbb
scas
mov
xchg
jno
fcompl
dec
mov
or
push
filds
insb
fnstcw
inc
mov
sarl
xor
lret
inc
rorl
ror
inc
sarl
jp
lret
inc
cltd
movsl
mov
mov
xlat
fbstp
inc
mov
mov
loop
mov
adc
jae
pop
mov
and
xchg
vpcmpgtw
push
loope
cmp
push
movl
aad
data16
inc
inc
insb
aas
decl
adcl
add
sbb
inc
loop
add
shll
push
cmp
adc
jle
cmp
sbb
mov
test
inc
sarb
mov
icebp
movsb
inc
shll
scas
out
scas
in
or
mov
cld
inc
sub
sbbb
cmpsl
dec
shrb
inc
jecxz
add
jo
sarb
insb
xlat
dec
arpl
iret
ds
scas
aam
loop
movb
xor
iret
adc
sub
or
sahf
insb
sahf
mov
ljmp
mov
dec
mov
fisttps
fcmovu
iret
xchg
leave
ss
imul
add
sbb
hlt
sub
cmpsb
jg
shll
adc
pushl
insb
mov
xchg
lret
in
mov
adc
mov
popf
xchg
aaa
jne
sub
dec
mov
mov
sbb
dec
andl
mov
mov
jmp
xchg
mov
popa
shl
into
imul
ficoms
es
adc
or
jns
int3
mov
sbb
clc
mov
mov
mov
out
daa
jb
pop
cmpsb
fstpt
mov
mov
xchg
add
lods
cmp
mov
in
or
mov
mov
fcmovb
in
mov
imul
fnstcw
pop
mov
ds
mov
mov
enter
or
mov
or
je
enter
outsl
mov
jns
rorb
orl
inc
or
xchg
jns
push
xchg
pop
pusha
cli
lret
mov
daa
into
int3
pop
mov
mov
rcl
lcall
add
pop
mov
cmp
fmuls
lcall
mov
bound
scas
into
loop
xor
ss
mov
sahf
xor
lahf
xchg
aaa
push
imul
imul
mov
imul
sahf
mov
push
xchg
lock
xchg
jnp
addr16
jb
mov
mov
enterw
call
jp
fisubrs
xchg
popf
das
shlb
popf
adc
inc
std
mov
scas
sbb
mov
notb
fcmovu
inc
std
in
or
xchg
fsub
mov
bnd
mov
int
ljmp
inc
mov
or
mov
add
icebp
adc
call
mov
fidivrs
and
push
rorb
jle
mov
mov
loope
sub
mov
cs
mov
mov
adc
mov
das
jb
sarb
fbld
push
bnd
dec
dec
mov
mov
mov
gs
dec
dec
xor
mov
and
int
shrl
loop
daa
inc
in
fs
add
mov
fucomi
xlat
or
mov
cmp
stc
jge
jge
into
jg
xor
in
loop
jle
cmp
mov
mov
jmp
mov
cli
mov
jno
jp
or
ret
xlat
xchg
gs
daa
enter
sarb
mov
scas
xlat
popf
mov
shl
loop
sahf
inc
aam
jnp
lock
add
movsl
data16
ss
lahf
data16
xchg
ds
cmp
mov
fs
push
dec
jb
gs
clc
add
cmp
adc
subb
dec
ret
jae
lods
mov
dec
jp
ret
sahf
fbld
adc
mov
mov
shll
les
je
mov
mov
enter
pop
mov
mov
je
cli
sarb
ja
out
jnp
xor
mov
loop
out
jecxz
jnp
adc
fneni(8087
outsb
mov
push
in
movb
mov
imul
fisubl
mov
test
sub
cmp
xor
cmp
jl
loop
nop
xor
int
sbb
adcb
jp
fldt
push
mov
and
ss
adc
adc
shrb
shlb
or
jbe
bound
mov
add
jge
and
sbb
adc
push
mov
xchg
cmp
ret
leave
call
rcrl
sti
xchg
loopne
push
fsubrs
sbb
mov
cli
mov
push
sub
push
lcall
xchg
roll
lods
xchg
lods
cs
sarl
adc
in
lahf
mov
fdivrl
call
mov
or
rcrl
loopne
enter
xchg
mov
repnz
jecxz
test
inc
outsl
mov
jb
repnz
mov
lds
adc
lcall
aam
mov
orl
shrl
rorb
shll
push
mov
sbb
loopne
dec
add
jne
popf
and
mov
adc
xor
shrl
or
push
xchg
out
or
imul
sub
xor
nop
pop
in
out
leave
js
scas
lret
aad
aas
out
and
mov
sub
xchg
mov
lret
scas
mov
test
mov
cmc
jecxz
inc
and
imul
loopne
sub
lcall
mov
fnstsw
rorb
mov
xchg
les
shlb
popf
fistps
fildl
cmp
sahf
fimuls
jae
push
mov
fistpll
inc
in
pop
mov
adc
mov
into
push
int
mov
ret
rorb
push
cmpb
rclb
sub
adc
outsl
into
scas
xor
je
mov
lds
and
mov
sbb
mov
mov
outsl
mov
mov
in
daa
pop
ret
inc
add
adc
test
aaa
jmp
cmp
xor
in
mov
xor
jb
jne
ret
push
mov
ret
cli
cmc
rorb
movsl
shll
push
ret
fs
pop
inc
loopne
push
int
sbb
jo
jb
sarb
jp
in
xchg
sbb
xchg
add
gs
outsb
fs
or
pushl
repnz
adc
cld
adc
bound
ss
cmp
iret
mov
fs
lcall
loop
push
push
fsubrl
sub
mov
xor
push
mov
push
adc
mov
push
data16
jle
cmp
lock
mov
ret
sarl
shrb
std
cmp
mov
fcmovnu
jb
push
and
push
jae
add
pop
xchg
adc
fisubrl
int3
divb
xchg
fisubl
loop
inc
std
cltd
lods
lods
sub
lods
out
aad
ret
sti
loop
inc
std
push
mov
jbe
or
pop
inc
mov
gs
or
jb
data16
loop
les
outsb
jp
gs
mov
loop
mov
push
dec
dec
jp
mov
add
lock
mov
int
cmp
adc
or
jp
push
popf
loope
sbb
loop
jmp
mov
mov
push
into
xor
popf
dec
popf
dec
popf
inc
lea
stc
fstpt
cmp
lock
clc
lret
push
cmp
mov
mov
lcall
or
inc
mov
mov
fistps
mov
mov
sub
ret
add
adc
ret
sbb
mov
add
mov
rcll
sar
scas
or
mov
xchg
in
xchg
cmpsb
jbe,pt
mov
mov
and
jge
mov
and
dec
xor
xor
jp
xlat
adc
scas
jmp
jp
imul
mov
adc
into
add
ljmp
cmp
jecxz
lea
mov
stc
out
add
xchg
sbb
mov
imul
push
ljmp
pop
mov
adc
add
sbb
nop
mov
push
xchg
xor
stos
hlt
icebp
mov
push
xlat
push
aaa
test
loope
push
sbb
or
mov
or
leave
ret
mov
push
mov
hlt
aad
js
aad
xchg
stos
cli
jecxz
push
in
imul
adc
setle
mov
mov
mov
mov
adc
add
push
cmp
das
mov
loopne
mov
mov
push
dec
sub
jo
cmp
jne
subb
mov
lods
push
scas
mov
mov
fisttps
xchg
push
cmc
sub
mov
sub
add
mov
lret
scas
jno
xor
inc
pop
push
jmp
mov
fnstsw
addr16
aaa
imul
idivl
add
xor
daa
mov
dec
aaa
mov
add
lea
daa
test
adc
sarb
adc
mov
mov
add
and
daa
neg
jo
or
daa
xlat
or
mov
dec
push
sub
xchg
cmpsb
pop
mov
addb
mov
test
mov
xor
mov
mov
fbstp
adc
ror
arpl
mov
or
mov
jae
pop
mov
sbb
xor
push
roll
aam
mov
es
call
ret
repz
test
cmp
mov
pop
int3
insl
dec
push
sbb
sub
sbb
call
sbbb
leave
mov
subb
pushf
xor
mov
test
and
mov
int
es
mov
dec
test
or
xor
sub
ret
popf
push
das
ret
mov
mov
gs
add
mov
shlb
push
push
jbe
roll
stos
daa
and
fsts
push
ret
in
push
rorl
cli
ffreep
repz
dec
sbb
dec
jp
daa
inc
inc
jb
and
mov
insb
mov
sti
jno
fstl
push
xchg
loop
adc
jb
rcll
adc
adc
stos
sbb
push
aad
adc
scas
loop
loop
adc
xor
jmp
sti
mov
stc
lcall
or
pop
jle
stos
cmpsl
jne
push
dec
stos
fsts
sbb
push
push
pop
outsl
pop
jmp
adc
mov
cmp
popa
loop
jmp
adc
dec
ret
jae
xor
xchg
mov
sub
in
inc
sub
call
adcl
lcall
cmp
jno
inc
xor
fcomps
sub
shrb
dec
add
in
jmp
xchg
and
mov
cmpsb
jb
adc
dec
jge
adc
stos
je
cmp
cli
shrd
mov
xor
pop
or
mov
loopne
insl
call
cs
mov
aam
lods
push
cmp
xor
or
cmp
xor
xor
xor
cmpsb
scas
int
fimull
cmp
mov
dec
push
mov
fldl
add
lock
aaa
icebp
jmp
mov
mov
cs
sahf
fdivrs
adcb
and
fwait
ret
daa
test
addr16
dec
popf
mov
add
rclb
mov
cmp
lds
push
stos
repnz
cmp
cs
mov
into
out
dec
daa
leave
xor
fists
jne
fidivrs
es
stc
out
jne
mov
push
imul
pop
pop
hlt
ljmp
aam
add
push
mov
bound
cmp
or
add
shl
imul
pusha
xor
test
mov
mov
jp
fmulp
xlat
loope
jnp
mov
xor
mov
fnstsw
mov
in
fwait
ret
movb
arpl
xchg
mov
shll
es
dec
outsb
mov
movsb
mov
outsb
push
repnz
in
add
xor
aaa
sahf
cld
lods
jne
scas
mov
aam
aam
fidivrs
inc
ret
mov
or
rclb
adc
jl
xor
divb
rorb
xor
call
inc
inc
pop
jnp
scas
sar
mov
or
inc
xor
jg
adc
dec
mov
dec
into
shll
divb
lock
daa
int
mov
mov
pop
sbb
cmpsb
pop
popf
push
cwtl
mov
in
ficompl
or
mov
imul
sbb
mov
jb
cmp
dec
test
aas
aad
out
ret
in
fimull
mov
push
push
dec
dec
inc
roll
idivb
xor
mov
xchg
mov
mov
mov
aad
sahf
les
sbb
mov
lret
addb
les
cmp
ljmp
adc
loop
lods
popf
rep
mov
es
adc
inc
lcall
xor
mov
cmpsl
xor
push
push
mov
sub
xor
jns
in
das
mov
mov
ret
aad
jp
push
or
or
aad
clc
hlt
hlt
and
in
testl
pop
repnz
add
push
push
push
xor
cs
mov
shlb
cld
adc
cmp
mov
pop
mov
int3
aas
fadd
xchg
jmp
push
sbb
aam
pop
test
cmp
hlt
ds
stos
ret
mov
jns
push
mov
push
adc
push
or
nop
xor
testb
sti
pop
cmc
push
fsubrp
ds
es
call
mov
xor
lret
pop
in
mov
sub
dec
mov
xor
jne
in
outsb
sahf
aam
es
add
xor
je
adc
or
movsb
push
mov
push
scas
je
bound
pop
or
stos
mov
jle
xchg
fucomi
inc
ret
inc
fbld
das
mov
ret
cli
ljmp
adc
rol
enter
add
lret
mov
outsb
jnp
movsb
mov
mov
cmp
mov
mov
mov
test
je
jbe
mov
in
jb
push
mov
jp
test
les
add
push
cld
pop
data16
push
lret
pop
ds
shl
mov
push
std
mov
js
jb
scas
sbb
jae
sub
xchg
out
stc
or
dec
inc
adc
lret
pop
out
add
xchg
sar
gs
int
insl
loopne
and
cmp
repnz
or
push
push
push
and
hlt
sbb
cmc
loop
fsub
cli
test
sarb
loop
out
push
adc
fcmovnu
push
rcr
loop
aad
mov
jae
shr
xor
fisubrl
jmp
iret
mov
outsl
mov
mov
dec
sahf
ljmp
mov
push
jnp
jb
pushf
pusha
mov
clc
lea
mov
adc
push
cwtl
or
jne
mov
dec
int
cmpl
cmp
cmpsb
fnstenv
int
les
lods
fidivrs
mov
sar
xor
sub
or
jge
pusha
push
xorl
xor
cld
daa
popf
xorb
mov
faddp
xor
mov
pop
mov
mov
mov
bound
jae
jae
cltd
repnz
fldcw
and
mov
and
or
mov
and
lcall
mov
dec
push
mov
mov
adcb
jg
xchg
roll
test
or
ficoml
fucomp
or
jbe
movsb
cli
cmp
sub
jmp
mov
mov
repz
fildll
movsb
xchg
xor
xlat
and
sub
and
test
push
scas
cmc
nop
iret
lcall
jae
and
les
push
les
jp
and
and
loop
in
or
add
sub
mov
pop
out
mov
clc
inc
insl
fisubl
sbb
mov
xor
lds
loop
sub
pop
scas
adc
mov
cmp
andb
roll
xor
movsb
jb
adc
sti
xor
in
mov
jae
mov
and
in
mov
add
push
mov
jne
cmp
fwait
into
mov
adc
pop
int3
icebp
mov
not
cmc
enter
imul
lret
cld
mov
mov
int3
nop
jl
leave
sti
ja
ja
out
xchg
rcr
sub
fdivl
fidivrl
fdivl
iret
outsl
jl
jmp
cmp
dec
mov
in
inc
sbb
add
popf
shrb
shrb
dec
push
jg
cmpsl
ja
push
arpl
lret
jb
sahf
ss
leave
iret
ret
int3
jp
and
stos
dec
decb
mov
jmp
fiadds
xor
outsb
lret
arpl
adcl
cmp
int3
add
pop
sbb
mov
xchg
adc
cmp
mov
orb
test
add
mov
push
fdivs
aad
xor
jns
add
js
or
mov
xor
mov
jl
mov
sub
dec
out
negb
jno
mov
or
sbb
inc
mov
xchg
push
fbstp
sbb
aam
dec
fidivrs
js
iret
or
sarb
cwtl
decl
or
inc
jae
shrb
popf
out
or
mov
mov
cmp
mov
add
dec
adc
scas
into
xor
cmp
mov
scas
mov
jl,pn
bound
daa
xlat
loop
out
lds
loop
add
mov
ret
sarb
sahf
popf
ds
decl
test
or
jp
or
inc
repz
loop
iret
lret
xchg
inc
adc
adc
mov
cli
ds
mov
pop
mov
mov
mov
sbb
pop
jle
xchg
mov
jp
jp
orb
out
fnstcw
add
pop
dec
imul
data16
out
push
xchg
addr16
scas
cmpsb
add
clc
cmpsl
shrl
push
in
sbb
shr
add
adc
fcompl
add
loop
dec
fnstenv
scas
out
push
push
sbb
cs
inc
or
add
bound
mov
sbb
xlat
push
bnd
sub
xchg
sbb
or
js
rcr
cmp
mov
xlat
sub
sahf
test
xchg
add
pop
mov
fidivrl
push
js
jno
mov
mov
mov
fisttps
lods
xor
fucomi
adc
outsl
mov
addr16
imul
inc
jp
add
mov
in
jne
pop
ljmp
sbb
xchg
inc
lods
cmp
lcall
sbb
inc
repz
inc
push
clc
lcall
loop
aam
lods
scas
scas
and
jg
test
push
mov
xorb
mov
xchg
sar
cli
aas
xchg
lret
xor
aam
ret
sbb
or
add
sti
add
add
add
add
cmp
aad
push
or
mov
sbb
not
pop
repz
jb
aas
cli
pushf
out
das
stos
dec
and
pop
ss
orl
cmpb
mov
mov
mov
fsubrl
fstpt
sub
sub
ss
ficomps
mov
inc
int
pop
cmp
pop
cmp
ret
sbb
push
lea
adc
jns
in
ja
pop
sbb
add
mov
movsb
or
frstor
popf
rcl
add
sbb
pop
mov
jg
scas
push
sbb
mov
rol
fisttpll
xor
ds
mov
adc
xchg
sarb
mov
fnstsw
ss
pop
dec
jg
ljmp
mov
popf
fidivrl
aas
loopne
in
test
inc
adc
out
add
fisubrs
ljmp
rolb
cmp
mov
and
scas
out
mov
xchg
mov
sbb
das
arpl
rol
hlt
jno
int
mov
ret
out
jecxz
or
fwait
jecxz
push
sbb
rcrb
jecxz
mov
sbb
jle
mov
pop
adc
mov
rorl
icebp
sbb
sbb
cld
ds
popa
jle
cli
xor
mov
adc
pop
out
sahf
push
mov
sahf
ljmp
hlt
pop
js
aas
es
sbb
push
and
xor
inc
scas
mov
cmp
jmp
sbbb
dec
and
sub
lret
bound
daa
and
adc
mov
dec
mov
call
mov
xor
sbb
das
pop
inc
aas
jns
pop
push
ljmp
mov
mov
sub
pop
sbb
adc
scas
and
pop
mov
pop
es
jno
or
lock
sbb
cmp
loope
inc
jmp
push
ret
xchg
je
jne
xor
popf
ret
popf
lcall
hlt
dec
push
mov
adc
cmp
fsts
cmp
fmulp
dec
lds
push
mov
imul
mov
mov
jmp
aam
jge
ss
ret
pop
mov
out
fxch
mov
mov
cs
fdivrs
popf
jnp
sub
push
popf
mov
ds
or
and
cmpsb
push
sub
inc
sub
mov
lea
enter
adc
into
shlb
das
jnp
test
mov
cwtl
lds
dec
mov
dec
mov
jnp
mov
int3
ljmp
lcall
dec
bound
into
fwait
or
and
call
or
jg
push
in
jmp
mov
loop
scas
mov
and
mov
add
lock
pusha
mov
xchg
in
fsubrs
je
repnz
cmp
aad
mov
arpl
leave
fnstsw
repz
mov
add
or
fmulp
mov
pop
out
pop
popf
xor
mov
in
pop
lret
es
inc
bound
addr16
ret
mov
std
jb
movb
inc
mov
mov
add
fcoms
lds
mov
lock
mov
xchg
int
ret
mov
mov
push
cmp
repnz
or
es
pop
jg
icebp
add
cmp
idiv
test
addr16
in
hlt
push
cmp
dec
mov
repnz
out
mov
ljmp
xchg
ss
ud2
popf
or
xchg
xchg
aas
push
scas
pop
mov
push
mov
rolb
jns
mov
mov
in
nop
push
mov
repz
pop
mov
outsb
jns
push
jecxz
in
in
push
xlat
negb
push
arpl
sbb
sub
and
xchg
sub
iret
lcall
popf
inc
xchg
daa
and
push
inc
mov
stc
out
std
fs
mov
ss
cmp
push
lret
cmp
pop
bnd
loopne
bound
sbb
aas
dec
dec
add
fstpt
inc
repz
xor
enter
repnz
mov
bound
cmp
or
addr16
popa
ds
out
push
jp
cmp
int3
lods
scas
cmp
mov
jae
push
inc
fdiv
and
sbb
mov
sti
jg
push
or
mov
sti
inc
out
adc
mov
mov
adc
push
mov
sbb
fs
xchg
fmulp
hlt
sub
and
push
mov
jnp
andl
ds
ds
fcmovu
das
inc
mov
popa
cwtl
test
cmc
fnstenv
aas
aas
decl
shll
mov
pop
fistpl
sub
mov
sub
lds
xchg
or
in
daa
jo
ret
adc
rcl
out
sub
mov
mov
sub
sub
dec
aaa
lret
inc
repnz
lahf
call
daa
cs
sbb
ljmp
add
enter
sbb
mov
adc
jnp
fcmovb
leave
sarl
mov
hlt
sarl
out
mov
mov
iret
popf
loope
daa
enter
mov
mov
cld
dec
dec
mov
jnp
or
daa
call
cmp
push
dec
mov
dec
loope
hlt
or
mov
jecxz
repz
mov
out
hlt
out
dec
cli
jmp
inc
mov
movsl
mov
test
push
ret
fsub
ret
andb
sbb
xor
daa
pushf
add
mov
sarl
mov
mov
into
test
or
mov
xchg
enter
mov
sbb
jecxz
mov
aam
adc
stos
push
call
jne
out
mov
dec
mov
nop
repz
sbb
push
fstpt
mov
bound
pop
ret
fs
es
mov
mulb
dec
lret
adc
mov
clc
repz
sahf
pop
inc
test
mov
mulb
jmp
out
loopne
lret
fadds
jnp
inc
and
cmpsb
arpl
aas
inc
icebp
sbb
shlb
aaa
and
ljmp
daa
dec
shlb
push
shll
cmp
dec
imul
xchg
fidivl
sarl
mov
mov
xchg
daa
les
loop
jecxz
mov
or
aad
jmp
ret
mov
loope
mov
sbbb
fsubl
add
loopne
jns
pop
adc
out
adc
jae
scas
mov
jae
repz
mov
mov
data16
ret
or
addl
adc
add
inc
mov
insb
sbb
and
mov
mov
rcrb
ret
pop
mov
add
mov
mov
adcl
jb
inc
andl
je
and
sbb
outsb
jnp
outsl
jne
pop
stos
fiaddl
in
xor
xor
and
push
shr
cmp
in
aas
xor
shr
add
cmpsb
shll
mov
mov
negb
sub
push
mov
negb
and
push
pop
aad
and
pushf
mov
mov
je
jp
daa
sbb
or
xor
inc
loop
xlat
mov
test
aas
stos
adc
push
loope
loopne
aaa
push
pop
inc
xchg
jne
push
cmp
sub
or
jne
xchg
loop
shrb
mov
add
scas
xor
xor
adc
add
mov
clc
in
push
push
adc
dec
pop
jecxz
js
pop
lods
push
mov
xor
movsl
lcall
xor
cmp
ret
adc
sarl
adc
icebp
shl
gs
xor
jae
imul
addr16
sub
rclb
mov
mov
out
jge
out
jne
js
outsl
pop
push
ja
insl
data16
mov
daa
rcrl
xchg
stc
popf
jmp
push
sbb
in
dec
mov
mov
mov
in
aam
shll
xchg
sbb
add
jge
xlat
ret
addr16
cmp
inc
mov
aas
ss
aad
jns
sub
rol
and
push
adc
add
test
jo
test
test
xor
out
loop
mov
mov
mov
lods
jo
insl
adc
add
push
rol
cmp
hlt
in
jmp
sahf
pop
mov
rcll
mov
inc
xor
add
fsubl
mov
mov
jno
in
shl
ljmp
adc
mov
sarl
ffree
repnz
in
fidivrl
mov
and
mov
in
lcall
das
ss
loopne
and
mov
add
mov
idivb
xchg
inc
out
out
out
es
xor
jp
add
jno
pop
inc
lcall
test
add
or
or
jb
int3
scas
push
clc
cmp
mov
mov
add
mov
icebp
pop
fimull
jle
jae
mov
add
jbe
inc
push
mov
in
clc
insb
adc
jns
scas
ds
shll
je
les
adc
sub
popf
mov
mov
cmp
cmp
testb
mov
cltd
je
cmc
cmpl
in
loop
dec
or
mov
mov
xchg
cmc
add
or
repz
xchg
js
or
mov
in
add
cmp
jae
out
jge
mov
movsl
push
sbb
adc
sti
cmc
cli
sub
into
xor
adc
jmp
push
hlt
mov
xlat
shr
inc
jb
mov
mov
mov
fmull
xchg
cmc
xor
sahf
sbb
inc
ret
sarb
sar
test
jae
out
mov
add
lods
imul
mov
lret
add
sarb
push
mov
sti
daa
mov
push
sub
fcmovb
cli
cli
js
movsb
push
fdivp
mov
out
sbb
testl
mov
icebp
testb
ror
cld
insb
mov
pop
cmc
dec
cmpsl
insl
cli
in
push
jb
ret
mov
xor
fcom
pop
lret
enter
fwait
push
test
loopne
cli
jb
in
dec
dec
sbb
add
es
out
inc
or
rcr
push
fistl
mov
test
lret
sbb
xchg
sub
mov
rol
aad
mov
or
adc
push
mov
adc
adc
clc
add
test
ja
cs
pushl
test
arpl
in
sti
mov
xor
jae
not
rorb
or
mov
incl
mov
daa
fildl
call
or
xor
push
pop
xchg
mov
or
sarb
push
dec
jbe
clc
fdivrs
cmc
add
and
add
repz
jp
pop
popf
xor
or
decb
in
cmc
cli
jle
add
sar
jle
jae
and
pop
push
loope
push
enter
push
or
fsubrl
inc
pop
xchg
jbe
sbb
jge
dec
push
xchg
cld
andb
add
rorl
mov
fs
or
inc
xchg
pop
jmp
test
dec
out
loop
inc
scas
xor
out
jecxz
mov
out
in
mov
hlt
out
in
xor
ss
ffreep
sbb
out
popf
mov
cli
ds
fsubl
ljmp
jae
mov
fwait
repnz
cmc
mov
sub
jo
ficoms
or
add
lds
xor
lds
sub
mov
or
test
sbb
adc
jecxz,pt
mov
inc
pop
lret
sub
daa
rolb
push
pop
icebp
jne
leave
in
lods
dec
stos
or
cmp
fists
lds
xor
mov
pop
mov
inc
jb
jp
ret
and
push
and
mov
sahf
les
or
mov
lcall
fnstsw
lahf
std
scas
mov
xchg
in
mov
enter
pop
stc
push
iret
mov
lret
xor
xor
stos
push
call
adc
aas
jmp
addr16
cmp
cli
in
inc
sub
xor
sbb
mov
mov
xor
xchg
nop
pop
mov
mov
pop
add
fadd
mov
xchg
aaa
pop
and
sbb
clc
sbb
dec
jae
rcr
add
or
adc
fimuls
mov
mov
arpl
and
mov
or
push
add
or
testb
popf
lahf
jo
repnz
and
cli
out
or
mov
push
fsubrl
sti
mov
mov
dec
into
ret
sarl
adc
or
cmp
aam
mov
jmp
fcoml
stc
sbb
push
mov
or
and
cli
rcrl
lods
rorl
in
xorb
mov
mov
fmul
xor
repnz
jae
test
inc
pop
sti
cmpsb
and
cmp
sub
pop
mov
sub
std
mov
mov
or
mov
jmp
mov
inc
add
in
jae
fwait
sbb
push
push
sti
data16
adc
hlt
iret
jbe
xlat
sbb
fstps
jmp
daa
mov
xor
into
daa
sub
xchg
js
popa
mov
aam
sub
jnp
mov
xchg
jp
mov
xor
add
inc
popa
push
ja
scas
mov
mov
inc
inc
arpl
lods
push
fnsave
xor
xor
test
orl
pop
and
cmp
sbb
out
imul
mov
aad
push
push
sbb
lahf
xor
negl
pop
add
jmp
push
jg
orb
or
cmp
aaa
test
lret
or
js
push
dec
ss
mov
or
jno
lret
xchg
jmp
aas
xchg
clc
pop
inc
inc
xchg
xchg
xor
cli
pop
adc
xor
loop
or
dec
or
jl
dec
pop
push
push
test
add
pop
enter
inc
add
sbb
pop
mov
lcall
xlat
sbb
or
divb
je
mov
out
pop
xor
cmp
xor
scas
rorl
inc
fsubrl
pop
lods
mov
in
mov
xor
push
stos
les
xor
and
and
rcrl
das
mov
mov
cmp
je
adc
jnp
into
mov
adc
das
out
fwait
push
adc
jle
addr16
pop
inc
mov
cmc
pop
jg
mov
cmp
push
les
xlat
xor
mov
or
fldenv
aas
or
mov
adc
and
imul
fisubs
push
fcos
fcmovnu
jp
ret
mov
mov
mov
rcrb
cmp
mov
adc
dec
sub
or
sbb
or
cmp
es
out
mov
and
mov
into
ret
mov
push
xor
jbe
cmp
cmp
fstpl
lds
pop
in
decb
mov
adc
mov
add
pop
mov
push
popf
and
mov
mov
mov
lcall
in
repnz
mov
push
aas
mov
loop
rorl
xor
or
js
out
jo
inc
dec
and
jp
ds
in
test
ljmp
jae
pop
mov
cmp
aas
jo
add
mov
dec
mov
ret
in
push
enter
loope
dec
bnd
in
mov
cs
and
mov
lock
mov
loop
xlat
dec
dec
stc
mov
or
mov
cmp
lcall
cli
xchg
mov
insb
mov
xor
data16
sub
ret
push
and
dec
lcall
push
cmp
mov
faddp
leave
sub
mov
sbb
and
fisubrs
mov
mov
adc
or
push
push
mov
sahf
inc
cmpsl
daa
mov
lret
shlb
push
sub
arpl
inc
cmp
lea
cmp
test
push
xor
cmp
stos
bound
ret
xchg
mov
sbbb
push
out
jp
in
xor
daa
mov
stos
cmpsl
push
sahf
sub
aas
jp
mov
jecxz
hlt
aaa
pop
lock
push
mov
sbb
or
fcoml
movsl
es
fidivrl
pushf
in
sub
mov
jne
mov
leave
mov
out
cs
and
fucomip
push
sahf
hlt
shlb
in
push
cld
and
and
in
cmpsb
out
fimuls
lcall
test
mov
sub
adc
arpl
es
rol
dec
cmp
pop
ss
movhlps
xchg
dec
notb
mov
xchg
mov
leave
dec
sahf
lahf
mov
orl
cmp
cmpsb
cmp
in
pushf
repnz
imulb
mov
incl
enter
mov
imul
pop
ret
fistps
lea
imul
sbb
das
mulb
push
xor
pcmpeqd
idivl
mov
mov
shlb
xchg
or
or
jno
cli
cmp
ret
daa
iret
dec
stos
push
mov
call
stos
push
fwait
in
fildll
es
bound
pop
lea
or
shlb
lcall
test
in
ss
imul
push
push
mov
fisttpll
or
mov
xor
shll
jne
cmp
imul
aaa
mov
xchg
mov
and
sbb
and
aas
dec
call
int
dec
adc
mov
daa
add
test
mov
mov
aaa
jne
mov
loope
lea
ds
ds
mov
or
cmp
dec
push
js
or
shl
or
push
sbb
push
scas
clc
cli
mov
push
lods
out
int
mov
lds
jo
je
mov
daa
adc
lods
xor
jbe
xchg
popf
loop
jo
rol
mov
adc
cmp
mov
sarb
mov
repnz
aad
jb
mov
fldl
stos
and
push
iret
call
push
xorb
out
out
pusha
iret
dec
push
filds
mov
mov
mov
test
gs
sub
fcmovne
enter
jae
or
sbb
jb
movsl
fsubr
and
add
push
movsl
mov
push
iret
cmc
jns
xchg
mov
cmp
add
sub
add
iret
shrl
popf
mov
xor
aas
mov
rol
sub
dec
in
jae
in
pop
and
stos
xchg
in
mov
fisubl
out
mov
clc
das
lret
cmp
xchg
mov
mov
ljmp
testb
loopne
adc
xchg
and
cmp
sub
mov
mov
mov
aaa
rcrl
mov
jg
mov
xlat
cs
faddl
sub
mov
cmp
rol
clc
in
mov
cmp
fidivrl
faddl
clc
nop
and
sbb
inc
mov
xor
jne
sbb
add
or
jg
loope
jb
daa
rcr
stos
xor
aas
das
dec
or
add
lods
pusha
das
aas
out
mov
add
and
lahf
sbb
test
cmc
cmp
adc
pop
dec
insb
loopne
jmp
pop
mov
and
mov
and
pusha
pop
push
and
mov
in
pcmpgtd
cmp
mov
lret
jno
cmp
aas
cli
mov
push
arpl
in
xor
mov
adc
add
decb
and
mov
inc
pop
jae
mov
lret
push
sub
sbb
stos
mov
fisttps
out
cmp
roll
xor
mov
xchg
aaa
pop
jbe
jmp
enter
cmp
push
cmp
stc
in
ret
aas
and
enter
ret
push
dec
push
mov
xor
es
or
in
hlt
ljmp
int3
and
sar
shll
mov
sbb
mov
inc
daa
jbe
mov
xchg
sahf
pushl
cmpb
rcl
xchg
xor
hlt
popf
cmp
xor
dec
mov
mov
aaa
add
xchg
xor
shlb
scas
imul
inc
mov
sub
xor
xor
aam
mov
popf
out
lahf
adc
lcall
imul
sbb
mulb
and
jb
dec
jecxz
add
cmpb
xchg
mov
or
xchg
shr
mov
cmp
or
repnz
pop
push
jle
xchg
das
lds
test
mov
das
jp
sbb
aam
scas
sarl
mov
cmp
mov
fdivl
ja
enter
lds
jb
mov
mov
cli
push
xor
inc
sbb
mov
cmpsb
lods
daa
jno
push
cmc
mov
popf
jmp
imul
jae
push
call
jp
repz
adc
cmp
imul
push
push
sbb
push
rclb
pop
into
in
outsl
sub
gs
imul
arpl
mov
adc
cmp
lret
mov
or
lcall
or
jb
pushf
mov
stc
in
int
sub
push
or
add
rcll
or
or
xchg
sbb
add
xorb
push
add
sub
inc
mov
pop
mov
subl
test
add
sub
sub
out
push
bt
aas
fdivl
and
mov
sbb
xchg
imul
mov
popf
cwtl
into
cmp
ffreep
or
push
cli
jne
mov
rolb
push
mov
call
lahf
or
shl
sub
lea
pop
xor
fcmove
gs
mov
repz
mov
push
es
mov
stc
insl
fbstp
cld
jnp,pn
pushf
dec
lea
shl
ds
pop
imul
mov
mov
adc
out
pop
cmp
xchg
xchg
repz
push
mov
inc
cld
mov
testl
sbb
sbb
loop
xchg
push
jb
cltd
test
test
aaa
add
add
mov
aam
ret
mov
shll
add
int
mov
loop
mov
or
sti
sbb
fsts
adc
or
dec
or
dec
mov
mov
cld
fcomp
mov
mov
push
jle
add
lds
enter
dec
adc
add
pop
pop
hlt
jbe
cmp
and
mov
cmp
pushf
roll
scas
inc
lods
jg
lods
ficomps
outsb
das
jb
jp
test
cmp
push
push
aaa
loop,pt
cmp
push
pop
adc
ss
push
sbb
repz
int3
cmp
cmp
repnz
ret
or
mov
xlat
pop
outsb
cmp
rclb
insb
sarb
ret
inc
push
repnz
into
cli
sub
xlat
cmp
mov
jbe
adc
adcl
mov
pop
xor
push
jb
push
cmpsl
fidivs
inc
daa
dec
stos
mov
cmp
mov
das
daa
xchg
xchg
push
hlt
jecxz
daa
cld
arpl
jle
into
out
aam
mov
jle
lods
jb
std
ja
arpl
push
das
aas
imul
addr16
pop
in
push
lahf
cmp
sarl
mov
pcmpeqd
clc
xchg
dec
mov
std
imul
out
orl
aam
mov
jl
in
loop
sbb
push
aad
jecxz
les
or
push
sbb
push
xchg
scas
sahf
push
cmp
cs
scas
sbb
notl
sub
sbb
sub
sahf
or
sbb
addr16
fisttpll
and
xor
cmp
add
push
jnp
aam
mov
adc
leave
hlt
dec
mov
mov
mov
jbe
sahf
mov
fidivrl
mov
subb
push
and
pop
jp
outsb
and
xlat
dec
mov
mov
inc
inc
push
push
pop
scas
cmp
xchg
dec
aaa
stos
dec
push
and
inc
sub
inc
inc
adc
ds
into
pop
or
rol
ds
mov
pop
add
or
lds
leave
adc
mov
je
cmp
pop
inc
xor
rolb
rcrl
lods
adc
leave
push
repz
add
movsb
dec
mov
add
mov
inc
jge
ret
and
mov
sarb
inc
mov
jle
cli
mov
nop
arpl
dec
inc
cs
in
imul
cmp
mov
cmp
aaa
jg
inc
sub
xchg
jp
lock
or
mov
and
dec
shlb
jl
xchg
mov
adc
aad
rclb
or
mov
and
lret
xor
int3
sub
mov
mov
lds
mov
and
ss
push
cmpsb
mov
xor
jne
pop
inc
cmp
ret
push
test
loop
andb
push
cmp
inc
out
jecxz
cmp
out
xchg
retw
inc
aad
stc
arpl
xor
mov
dec
mov
frstor
cmp
cmp
and
and
mov
mov
testl
jl
dec
outsl
fyl2xp1
aad
push
fdivrp
cmp
xchg
push
xchg
pmullw
inc
adc
pop
xchg
sbb
jl
mov
or
or
push
nop
mulb
dec
lods
lret
popf
shll
mov
aaa
mov
in
test
inc
lods
aaa
aam
imul
mov
lahf
rolb
daa
cwtl
lock
lahf
lret
jmp
push
lds
sub
mov
shll
fs
sbb
inc
sbb
fdecstp
lret
sub
push
mov
aad
lret
inc
mov
mov
addr16
pop
stos
cmc
xchg
mov
in
lcall
sbb
aas
add
adc
stos
cmp
xchg
sbb
xor
loop
xchg
mov
and
add
push
es
pop
inc
stos
jg
fcomps
adc
call
jns
cmpsl
dec
divl
push
mov
ljmp
dec
pusha
mov
inc
mov
bound
cmp
lret
and
mov
out
xchg
push
sub
mov
add
ror
sbb
mov
mov
add
aas
lcall
mov
aaa
lods
fnstsw
pop
loopne
lods
scas
mov
push
mov
lods
push
rcll
xor
mov
cld
repz
inc
cmpsb
leave
nop
mov
adc
mov
mov
mov
in
scas
cmp
loope
std
xor
fsubs
cmp
fldcw
lahf
inc
mov
lock
mov
lret
or
xchg
mov
imul
aad
clc
jne
iret
in
enter
les
xor
jnp
mov
add
mov
lods
pop
mov
jns
mov
out
push
ljmp
movsl
and
add
jo
dec
cmp
sub
shll
and
mov
jb
pop
push
ret
xor
lahf
push
mov
sub
mov
or
push
mov
inc
add
sti
and
stos
cwtl
push
shl
lds
pop
add
clc
mov
mov
mov
push
sub
fdivrs
sbb
into
mov
xor
icebp
push
or
js
scas
sub
sbb
xor
or
cmp
addr16
loop
xor
mov
repnz
testb
add
mov
cmp
jns
push
mov
in
inc
leave
fldenv
cltd
mov
or
enter
bound
mov
push
mov
repz
inc
add
ja
mov
add
insb
push
cmp
jo
fnstsw
mov
mov
sbb
ret
fnsave
stos
movsb
ret
addr16
fstl
es
es
push
mov
jne
js
je
aas
bound
or
int
nop
rcrl
or
dec
addr16
mov
repnz
inc
sarb
or
rcrb
test
fisubl
mov
out
lret
es
rcr
or
test
aad
cs
fcompl
and
sbb
orl
repz
fwait
adc
js
arpl
push
shl
in
or
xor
out
aaa
aaa
sbb
lods
add
pop
dec
cltd
test
hlt
push
fisttpll
and
lds
es
push
stc
mov
sbbb
fisttpll
sahf
clc
inc
scas
push
ss
popf
daa
icebp
sbb
loopne
mov
es
pop
jge
mov
fdivrl
movsb
push
mov
xor
cli
loopne
fmul
inc
jg
mov
lds
lret
and
mov
leave
pop
loop
lods
xor
mov
push
mov
daa
notl
sbb
or
mov
xor
xchg
mov
xor
push
pop
push
or
ffree
cmpsl
sarb
mov
ret
cmp
icebp
inc
aaa
pop
push
pop
jl
setge
mov
nop
pop
and
test
cmp
adc
xor
sub
shrb
pop
mov
add
adc
pushf
ss
push
sbb
cmp
repnz
cmp
xchg
aas
xor
cwtl
mov
dec
push
mov
push
cli
mov
inc
and
sahf
mov
sub
mov
lret
xor
dec
xor
push
and
not
adc
pop
daa
adc
mov
add
sbb
and
sbb
mov
xor
mov
or
jne
repnz
sbb
sbb
inc
cmpb
gs
and
cltd
mov
ret
sub
and
or
mov
pop
stos
call
es
cmp
fdivr
mov
sbb
inc
push
repz
data16
lret
in
cmp
mov
fsubrl
int
lret
push
or
int
mov
sbb
mov
sub
sahf
aas
dec
addr16
cmp
push
in
sbb
cmp
jmp
jne
sbb
or
jae
lods
mov
cmp
test
jge
mov
cmp
mov
sarb
test
mov
movsl
daa
mov
pop
xchg
xchg
xchg
mov
ret
mov
mov
sbb
cmp
mov
das
add
sbb
into
ret
ret
es
push
stos
mov
mov
fidivrs
into
ret
mov
adc
int3
sbb
outsb
jbe
sub
sub
adc
or
cmp
adc
fbstp
and
mov
mov
mov
sub
mov
push
cmp
sbb
xor
int3
out
lret
xorb
mov
sarl
or
push
outsl
cmp
into
popf
sarb
mov
out
ret
stos
or
mov
and
xor
push
in
out
es
clc
loopne
push
mov
sbb
cmpsb
mov
pop
add
add
les
mov
push
dec
divl
add
sbb
xor
cs
dec
scas
and
adc
pop
mov
cmc
jnp
cmc
adc
leave
mov
cli
sbb
push
cli
repnz
nop
popa
sarb
les
shll
cmp
cmp
sbb
ret
push
dec
cmp
fadds
mov
psubd
arpl
mov
loop
mov
dec
lahf
movsb
jg
pop
out
jns
ds
xchg
mov
inc
mov
dec
push
push
lret
je
or
out
loop
add
adc
mov
adc
sub
aam
loopne
fidivs
sbb
sbb
push
mov
xchg
push
mov
mov
cli
mov
adc
jg
jae
jbe
pop
call
push
xor
das
into
inc
mulb
fsubp
adc
lret
and
push
inc
roll
or
lret
test
cli
fwait
out
mov
or
mov
les
leave
out
ficomps
and
cmp
stos
mov
test
idivb
mov
popf
mov
cmp
loop
add
jmp
arpl
xor
mov
dec
loop
or
and
xor
ljmp
inc
adc
push
mov
aam
pop
cmp
decl
lret
les
ret
lods
mov
int
fcomps
sub
xlat
mov
xor
sub
into
add
sub
clc
mov
push
iret
or
and
cmp
push
mov
and
into
mov
rorl
mov
mov
mov
iret
xchg
test
ljmp
push
arpl
and
std
out
push
jp
rclb
pop
push
int3
fwait
stos
sbb
cmp
jbe
pop
cmp
aaa
test
mov
jbe
sti
pop
outsl
jg
dec
idivb
pop
add
ret
lret
repnz
out
jbe
mov
lret
out
insb
rclb
fldl2e
xor
arpl
loop
sub
mov
ud2
jb
add
ds
lret
xor
add
inc
and
push
push
scas
xor
mov
mov
es
xor
cmp
movswl
xor
fists
push
cmp
lahf
loop
rcrb
aas
xor
cmp
test
stos
imul
cmp
xor
and
mov
push
mov
arpl
mov
fiadds
data16
into
cmp
xlat
sub
push
pop
inc
pop
mov
xor
es
inc
mov
dec
outsb
push
pushf
push
fsubrs
and
push
orb
and
test
insb
std
testl
jmp
mov
mov
mov
fisubl
popf
pushf
fisttpll
ficompl
or
xor
sub
cmp
and
les
pop
ja
jg
cli
and
mov
jp
sbb
sbb
push
mov
adc
add
fucomip
adc
sub
mov
mov
stc
rcl
int
lods
mov
out
pop
popa
test
std
mov
cmp
xlat
aas
pop
push
and
in
ja
ret
fbld
push
adc
lcall
fbstp
and
rcr
sbb
or
jge
sbb
mov
lret
jbe
mov
fnstenv
jno
mov
scas
popf
fsubrl
pop
imul
add
lds
mov
mov
pop
mov
push
inc
mov
ja
shll
or
push
jecxz
hlt
mov
cmp
je
test
jns
push
xchg
hlt
adc
mov
fxch
daa
mov
clc
imul
jne
mov
jmp
dec
out
cmp
xchg
cmp
sub
sbb
stos
mov
mov
out
push
and
popf
icebp
sbb
cmp
mov
mov
add
lret
cmp
or
cmp
mov
in
loope
sahf
stc
test
movsl
pop
or
xlat
frstor
hlt
repz
cli
cmp
xchg
cmp
cwtl
xor
jns
in
popf
and
mov
add
push
cld
adc
pop
bnd
daa
and
and
les
jae
mov
adc
inc
sub
movb
test
jge
mov
push
inc
ret
int
sarb
call
and
and
in
mov
mov
in
xchg
mov
mov
mov
push
lcall
and
scas
shrl
clc
xor
pop
xor
lret
out
ljmp
cmp
lahf
mov
mov
mov
xor
pop
add
push
mov
ret
aad
testl
xchg
xchg
or
mov
push
add
inc
popf
cmpsl
sbb
or
fstl
jnp
sbb
imul
mov
rol
sub
xchg
add
dec
popf
and
imul
sbbb
stos
xchg
sahf
daa
jmp
add
imul
popa
mov
sbb
pop
imul
mov
dec
mov
mov
fwait
cmpl
mov
clc
mov
jnp
lods
ljmp
repz
out
pushf
inc
and
sub
pushf
mov
jmp
add
and
xchg
add
testb
aad
es
lret
sahf
mov
sbb
iret
or
ljmp
stos
cld
cmp
cmp
mov
shrb
pop
sub
add
and
and
or
out
out
add
add
mov
mov
lea
hlt
std
mov
mov
and
test
mov
cld
psignd
faddp
mov
xchg
mov
sarl
std
mov
or
je
outsl
pop
data16
xchg
push
or
negl
pop
mov
or
mov
jnp
xchg
mov
aam
cld
add
mov
sahf
adc
or
into
loope
stc
les
shll
mov
inc
icebp
int
xor
int3
hlt
cwtl
rol
iret
mov
test
pop
fs
sti
fldl
xchg
bound
add
add
mov
mov
sub
add
stos
mov
test
rclb
out
push
es
push
testb
mov
xchg
fisttps
xchg
xor
in
dec
dec
stos
les
xor
mov
fiadds
mov
out
shr
add
or
xchg
fincstp
or
or
dec
sub
mov
sub
jp
pop
mov
mov
test
loope
test
mov
jp
xchg
fdivp
mov
xchg
into
lea
sahf
mov
add
shl
loopne
jecxz
cmc
lods
lea
and
sbb
es
cmc
fcmovnbe
in
in
add
xchg
jo
clc
sbb
sbb
adc
or
test
mov
xchg
cmc
ss
out
das
ss
ret
xorl
and
push
ffreep
aaa
mov
and
adc
jbe
cmp
lahf
fcomi
jne
sbb
push
adcb
cwtl
add
loope
lods
push
mov
push
jle
adc
cmp
sti
mov
test
sbb
mov
test
mov
mov
andb
sbbb
pop
sub
sarl
sub
and
in
mov
inc
lret
mov
dec
aad
jge
jg
std
mov
push
add
stos
mov
mov
repz
pusha
mov
dec
fisubrl
fidivrl
aad
jl
push
sub
add
pop
test
mov
mov
pop
sub
shlb
lea
and
push
lods
imul
add
sbb
lret
test
sbb
lods
add
add
sbb
shrl
and
mov
and
dec
mov
test
and
repz
int3
and
add
cmp
fmul
fs
pop
push
mov
cmp
shlb
mov
imul
mov
mov
xor
ja
pop
and
push
sub
or
push
and
icebp
jecxz
ret
or
and
or
xor
data16
lahf
leave
and
pop
pop
jge
imul
mov
divb
and
sbb
gs
xor
out
cld
mov
je
or
cltd
adcb
lods
add
loop
inc
leave
fmull
mov
mov
sbb
daa
mov
pop
push
aam
adc
out
push
roll
sbb
movsb
cmp
and
sbb
xor
aad
in
in
sub
push
add
cltd
fsubs
sbb
sti
pop
lea
jae
xchg
iret
sbb
add
mov
imulb
fbstp
pop
cmpsb
repz
sbb
sahf
push
sub
rclb
in
xor
sub
lea
jne
mov
hlt
rorl
xorl
je
mov
jl
pop
test
sti
and
sub
stos
push
add
ffree
sub
push
xor
cmp
js
test
add
pop
xchg
jne
pop
mov
and
mov
mov
in
push
mov
jge
cmp
pop
jbe
cs
add
roll
cld
daa
add
pushf
xchg
adc
cmpb
and
call
add
loop
lds
push
mov
sub
sbb
aas
in
rcll
daa
sbb
pop
faddp
jb
mov
and
sbb
outsl
into
push
cmp
lahf
and
sbb
jmp
dec
mov
scas
fldenv
mov
rorb
add
gs
dec
jbe
ret
xor
sti
test
ja
loop
inc
test
pop
sbb
jnp
hlt
lret
or
and
adc
mov
adc
sbb
push
fimull
aaa
fimuls
mov
cmc
xchg
test
adc
pop
das
mov
push
rorb
mov
and
adc
cmc
sub
clc
lcall
ret
mov
and
push
sub
out
js
pop
icebp
icebp
jecxz
pop
xor
div
or
and
and
sbb
adc
imul
mov
ret
mov
out
jg
stos
add
mov
fucomp
cli
inc
xchg
imul
cmp
push
push
push
mov
cli
mov
test
cmp
or
addr16
mov
mov
xlat
mov
sbb
and
and
cs
gs
xlat
pop
sub
cmc
sbb
inc
push
std
mov
enter
push
mov
fidivrl
push
and
popf
lret
and
rol
aad
rcl
adc
push
mov
push
and
sbb
fistps
adc
adc
pushl
lea
push
and
and
xor
jmp
out
frstor
aad
pop
mov
lock
sar
sbb
xor
sub
ds
test
jg
jnp
ret
dec
ss
or
sub
push
mov
iret
mov
or
dec
mov
adc
and
or
xlat
cmp
cs
enter
hlt
and
sub
or
push
mov
sbb
dec
notl
dec
ss
addr16
in
daa
loope
and
push
and
jnp
sub
fiaddl
mov
xlat
cmp
or
fmulp
and
stc
mov
into
or
cmp
add
mov
sub
repz
pop
aaa
ret
lea
hlt
adc
mov
pop
push
fs
dec
pop
sbb
mov
jge
fidivrs
mov
mov
fs
and
and
or
or
mov
aam
loop
mov
ret
mov
mov
loopne
fadd
mov
mov
leave
mov
leave
mov
mov
xchg
mov
int3
rcl
cmc
shr
mov
cli
mov
lds
imul
mov
mov
int
mov
fistpll
lods
lret
mov
mov
mov
aad
iret
and
int
int
mov
lret
lret
rorb
fstpt
mov
sarl
mov
mov
mov
mov
mov
lret
fdivl
mov
mov
mov
aad
int
int3
leave
xlat
les
imul
mov
mov
lret
fstpt
adc
mov
sarb
mov
ret
pop
lods
mov
mov
mov
lret
call
adc
enter
add
mov
inc
scas
lea
lock
mov
stc
add
lea
ret
sarb
adc
out
mov
fcompl
iret
add
fdivs
mov
push
int
ret
mov
jecxz
aam
lods
mov
fcomp
les
mov
ret
les
mov
leave
mov
sbb
lret
dec
jecxz
mov
mov
call
mov
mov
lret
vshufps
iret
sarb
scas
lds
jb
leave
mov
mov
mov
pop
xchg
int3
lret
aad
mov
shlb
movsl
mov
mov
mov
loopne
mov
adc
mov
mov
sub
or
mov
mov
mov
faddp
int3
sarl
adc
insb
sub
movzwl
in
mov
jno
imul
sarl
mov
je
cmp
les
mov
mov
arpl
xor
loopne
ror
sbb
inc
push
ffree
mov
ret
leave
enter
mov
xlat
xchg
mov
fnstcw
rol
sub
aas
aaa
jle
sub
jecxz
dec
jae
fxch
cld
lret
mov
lahf
dec
mov
mov
jnp
je
jno
lret
aad
int
xchg
mov
mov
out
mov
leave
iret
mov
push
enter
iret
xlat
cltd
mov
mov
int3
aas
or
shlb
fisttpll
mov
fsubr
fdivrl
idivb
in
popa
mov
ret
jno
mov
or
ret
aad
ret
mov
push
mov
enter
mov
lds
sarb
iret
lds
test
imul
aad
inc
mov
dec
xlat
ror
mov
stos
cmp
xor
mov
clc
aam
add
add
stc
mov
pop
mov
jecxz
sarb
ret
imul
xor
rolb
mov
ficompl
mov
shl
fcmovb
insb
hlt
xchg
inc
jmp
push
das
or
vpsraw
xchg
xlat
lret
or
mov
adc
mov
mov
xlat
mov
out
push
rcrb
inc
dec
call
fistps
xchg
into
and
aad
ret
stos
mov
jne
cmp
arpl
cwtl
mov
mov
into
mov
mov
push
mov
rorl
mov
jne
out
orb
mov
fsub
out
int3
insb
shrb
rcl
and
fsubl
int3
cmp
imul
cmp
bound
int
inc
xor
xor
in
fcoml
mov
mov
mov
fcmovb
push
out
adc
outsb
cmpsb
and
xchg
sbb
mov
xor
jecxz
jecxz
mov
sarb
into
rcr
sbb
xlat
imul
ret
iret
mov
mov
fwait
mov
loopne
xor
dec
mov
mov
mov
mov
or
push
lods
rclb
rcl
xlat
jbe
or
fnstsw
mov
lods
mov
mov
call
loop
xor
push
xor
adc
or
bound
push
mov
into
into
les
or
ficoml
mov
fcmove
push
jno
lea
mov
jmp
shl
push
stos
inc
dec
adc
pop
arpl
stos
mov
add
mov
aam
enter
push
into
dec
fistpll
pop
push
and
mov
xor
iret
lcall
or
das
sub
fwait
mov
call
mov
mov
push
xor
rcrl
or
xchg
xor
sbb
mov
das
lret
sub
lea
mov
imul
sub
sub
dec
pop
roll
add
lret
mov
mov
out
dec
mov
mov
and
and
mov
clc
pop
mov
and
ret
fstps
fildl
or
inc
mov
adc
mov
shl
loop
mov
not
mov
aad
les
pop
xchg
mov
sbb
mov
sbb
mov
fisubrl
mov
mov
jnp
mov
mov
mov
ret
cli
mov
outsb
jp
sub
roll
push
mov
je
loopne
mov
outsb
jne
das
jae
popf
mov
sarb
rcr
fsubrl
cli
sub
fnstenv
ss
popf
xor
mov
mov
mov
xor
mov
mov
mov
jo
jb
ret
mov
mov
or
inc
inc
inc
cmp
clc
cmp
mov
scas
ret
lea
push
mov
mov
lea
mov
scas
ret
ret
jb
lea
shlb
and
lcall
cmp
clc
xor
cmp
lea
mov
scas
ret
ret
jnp
lea
mov
scas
ret
ret
jnp
shl
mov
daa
mov
scas
ret
ret
jnp
lea
shlb
and
xor
xor
loope
scas
scas
sub
cmp
hlt
cmp
fwait
adc
cmp
cmp
fwait
mov
mov
mov
mov
cmp
mov
mov
mov
test
movsb
cmp
sbb
mov
jbe
stos
xor
mov
mov
mov
cmp
idivl
loop
ret
mov
add
jp
mov
inc
cmp
stc
mov
stos
sub
add
imul
movsb
pusha
pop
mov
jle
mov
mov
mov
jne
popf
mov
jecxz
je
mov
jns
aas
adc
stc
mov
mov
cmp
jb
cmp
mov
shll
sbb
popf
xchg
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shll
mov
mov
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
shll
mov
mov
xor
testl
loopne
mov
testb
add
in
loopne
push
push
mov
idiv
in
loopne
push
push
mov
add
loopne
push
push
mov
cli
idiv
in
loopne
push
push
mov
cli
decb
repz
loopne
push
push
mov
add
loopne
push
push
mov
sti
add
add
push
loopne
push
push
mov
add
loopne
push
push
mov
and
push
sbb
adc
repz
stc
pop
add
adc
pop
and
pop
sbb
push
and
mov
mov
pop
push
pop
es
div
mov
adc
and
mov
add
imull
pop
adc
mov
mov
cli
notb
push
pop
es
std
pop
sub
mov
push
and
and
mov
sti
and
pop
and
pop
add
pop
and
mov
ret
mov
out
mov
mov
mov
pop
nop
icebp
mov
xor
pop
pop
in
add
mov
lock
pop
outsb
ja
jp
jno
jno
je
add
push
cmp
xor
jno
pop
outsb
ja
jp
jno
ja
push
push
je
imul
jle
add
jp
jno
ja
jns
push
jmp
dec
sbb
pop
sbb
push
pop
add
sbb
dec
and
sbb
dec
xor
add
sbb
dec
in
pop
add
sbb
or
add
inc
nop
dec
inc
pop
xchg
cmp
mov
adc
dec
or
icebp
nop
dec
cmp
mov
add
stc
mov
mov
jp
outsl
inc
pop
add
std
push
add
stc
mov
mov
adc
jbe
add
nop
cmp
out
pop
clc
stos
nop
int
out
clc
test
inc
xchg
mov
std
add
icebp
mov
mov
xorl
adc
jne
or
push
loope
mov
clc
stos
nop
iret
mov
sub
push
stc
clc
test
stc
nop
xor
test
adc
std
push
add
add
mov
mov
or
mov
lahf
add
or
add
sbb
jp
pop
add
in
lds
mov
dec
std
nop
push
or
dec
or
mov
xchg
sbb
sbb
sbb
mov
nop
add
lock
add
nop
dec
add
add
mov
pop
push
add
std
add
sbb
push
dec
add
mov
dec
add
mov
jp
mov
sbb
mov
add
nop
xor
dec
stc
nop
push
adc
push
or
into
mov
adc
leave
add
test
adc
mov
xchg
movsl
add
or
mov
push
or
out
or
out
mov
adc
mov
inc
nop
int3
xchg
add
add
add
dec
or
popa
imul
nop
addb
hlt
adc
dec
imul
imul
xchg
addb
cmp
add
inc
adc
mov
mov
mov
adc
cmp
in
adc
add
add
imul
dec
add
std
ds
std
addl
or
push
add
add
push
icebp
mov
subl
jne
mov
sti
dec
or
outsl
or
or
push
in
push
push
add
loope
jp
add
icebp
jp
nop
dec
sub
movl
mov
jns
mov
add
or
push
add
mov
nop
dec
or
and
add
add
pop
jmp
vmovlps
test
add
jmp
arpl
or
dec
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
imul
gs
xor
cs
insb
add
push
mov
sub
push
push
adc
es
rcl
test
inc
mov
bt
mov
adc
mov
cmp
adc
rcl
inc
test
add
mov
rcl
movzwl
mov
xadd
ds
in
int
add
push
push
call
test
jne
mov
add
mov
add
shld
mov
imul
mov
jmp
cmp
rcl
loope
movsb
shrl
lret
cmp
ja
imul
movzwl
not
movzwl
shld
shld
xchg
imul
neg
lea
xchg
inc
repnz
mov
mov
bsr
xor
addb
repnz
mov
shl
or
imul
mov
mov
repnz
inc
shl
inc
cmp
jb
inc
mov
bsf
mov
dec
movzwl
shld
imul
and
cmp
bts
shld
imul
cmp
bswap
and
mov
and
inc
bswap
bts
xor
addb
test
shl
dec
mov
lea
xadd
imul
inc
cmp
jb
mov
shrd
lea
es
bts
not
xchg
mov
mov
bts
bsf
inc
movzwl
bts
mov
and
bts
bswap
bswap
shld
shld
push
call
mov
mov
xchg
jmp
add
dec
shl
mov
test
test
bts
shl
fs
repnz
mov
andl
andl
push
push
call
push
push
mov
call
mov
mov
mov
lea
mov
mov
mov
mov
shld
mov
imul
mov
jmp
cmp
rcl
loope
movsb
shrl
lret
test
add
movl
es
bswap
and
pmuludq
shld
fs
lea
movb
push
movl
call
and
repnz
repnz
shrd
not
and
bt
and
pop
xor
pop
leave
ret
push
mov
sub
jbe
adc
mov
mov
cmp
jne
mov
inc
test
je
cmp
jne
cmpb
jne
inc
jmp
cmp
jle
inc
cmpb
jg
mov
test
je
cmp
jle
andl
lea
add
adc
call
push
push
call
testb
pop
pop
je
movzwl
jmp
push
pop
push
push
push
push
call
push
call
mov
call
jbe
adc
pop
leave
ret
push
mov
add
jae
mov
test
je
call
add
jmp
pop
ret
push
pop
push
push
mov
call
pop
mov
pop
ret
mov
test
je
mov
lea
push
push
call
pop
pop
ret
mov
imul
push
push
call
push
call
ret
int3
jge
add
jle
add
adc
add
jge
add
add
and
add
clc
jge
add
jle
add
jle
add
jle
add
add
add
xchg
jle
add
add
add
add
add
add
adc
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
insl
add
je
imul
je
add
push
dec
inc
dec
xor
cs
insb
add
mov
jae
addr16
outsl
js
add
inc
push
xor
cs
insb
add
jge
inc
js
je
jb
arpl
jae
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
insb
insb
outsl
arpl
inc
add
je
jb
arpl
jae
gs
jo
