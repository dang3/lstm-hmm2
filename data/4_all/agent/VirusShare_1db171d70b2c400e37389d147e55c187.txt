add
add
loop
idiv
call
in
mov
test
je
call
pushl
pop
xor
imul
add
pop
leave
ret
pushf
pusha
or
xor
in
xor
fnstenv
ja
mov
xlat
mov
lea
nop
jg
add
or
add
lea
pushl
pushl
lea
jne
push
cmp
loopne
mov
inc
or
xchg
std
jg
shll
test
jne
je
pop
push
pop
jecxz
mov
push
pop
mov
popa
popf
ret
add
or
hlt
gs
mov
xchg
adc
mov
xchg
adc
into
mov
lods
je
stos
inc
add
pop
sub
cmp
insb
popa
jne
adc
popa
out
pop
jmp
mov
lods
mov
mov
repz
pusha
adc
adc
cmp
mov
or
pop
xchg
flds
sbb
or
lret
jbe
and
or
pusha
adc
mov
out
into
or
leave
mov
pop
mov
inc
mov
jmp
movsl
nop
or
jbe
push
and
or
pushl
gs
xor
cs
insb
add
outsl
arpl
jae
gs
add
outsb
fs
jg
or
insb
gs
add
imul
fwait
std
xorl
fs
jo
aas
and
fcmovu
incl
jne
push
popa
insb
jne
mov
add
mov
jle
ds
push
push
xor
int
mov
mov
mov
push
cmpsl
adc
add
add
shrb
inc
mov
inc
push
inc
push
fucomp
mov
push
and
iret
pop
add
fdivrs
mov
aad
call
mov
mov
mov
add
jns
outsb
cli
jg
cmpsl
mov
or
jmp
cmp
in
jge
or
sahf
adc
daa
stc
sbb
adc
adc
cld
jle
cmp
lcall
ret
add
xlat
mov
imul
and
adc
repz
xchg
adc
push
lret
insb
adc
ret
lret
xchg
cwtl
mov
xchg
test
mov
inc
dec
test
jg
loope
stos
push
finit
emms
rdtsc
or
fistpll
ret
call
pop
sub
push
fildl
in
pushl
add
fxch
fdivrp
frndint
pop
sbb
push
sbb
sub
xor
xor
adc
xor
cpuid
fs
add
adc
or
or
mov
xor
sti
or
insb
adc
jns
cli
ja
jb
adc
into
repnz
repnz
loopne
std
fistpl
and
lock
incl
or
icebp
call
cmp
fildl
in
cmpsb
push
and
jae
icebp
push
loop
pop
jp
insl
loopne
xor
xor
cmp
and
inc
jb
shrb
mov
and
jo
insb
inc
mov
outsl
outsb
cmp
and
out
in
out
cld
repnz
fstpt
jae
adc
out
jmp
out
loop
adc
jle
outsl
fwait
cmp
add
lahf
icebp
loope
lock
shr
out
and
push
and
xor
out
call
in
push
loop
adc
mov
mov
in
repz
in
and
in
call
or
call
out
jae
idivl
call
call
sti
jmp
das
inc
les
in
sbb
call
shl
test
cmovae
mov
out
push
dec
dec
or
shrl
xlat
fisubrl
jbe
ja
jmp
jecxz
or
dec
sbb
push
xchg
add
mov
cld
inc
mov
and
cld
push
fstl
push
fs
jle
imul
jp
push
in
push
out
cli
cmpsb
imul
lcall
mov
mov
fs
push
popf
addr16
push
mov
jae
add
or
cld
jne
push
pop
or
push
pop
jne
push
rcrb
pusha
push
dec
out
pop
jns
or
or
xchg
popa
ud2
fmul
into
ss
aaa
push
or
pop
repnz
xchg
inc
push
movzwl
lcall
repnz
je
dec
arpl
cmp
jo
and
sbb
sbb
push
push
rcrl
cld
mov
xchg
or
mov
fidivs
sarb
push
lahf
add
sahf
out
mov
nop
sub
and
mov
push
pop
pusha
sbb
sbbl
sub
jnp
outsb
xor
xorl
cmp
cmc
test
dec
adc
mov
xorl
sbb
sub
insb
test
sti
cwtl
imul
add
adc
push
push
add
ret
in
cmp
mov
sahf
scas
mov
fxch
into
add
pop
out
out
adc
cmp
testl
jmp
or
push
xchg
inc
popf
mov
jge
orl
enter
xor
arpl
jns
fistpll
std
push
movl
push
andl
xor
lods
insb
cmp
sub
adc
mov
mov
pop
inc
sub
sbb
sbb
mov
cld
arpl
adc
xchg
js
insb
js
cmp
popl
add
jmp
xchg
addr16
push
arpl
filds
clc
mov
cmp
dec
ret
test
adc
stc
mov
adc
add
or
xor
cltd
xor
sti
xor
add
mov
push
push
test
fmuls
mov
jae
in
out
or
enter
dec
mov
cmp
jne
jne
loope
icebp
add
mov
roll
add
add
fistl
add
fdivl
scas
cmp
or
sbb
push
jne,pn
or
filds
jmp
je
andl
adc
mov
sub
les
add
call
push
or
sub
ret
test
push
loope
pushf
test
je
nop
jne
jnp
push
dec
imul
mov
mov
jbe
ja
mov
xchg
add
xchg
jmp
rorb
add
clc
push
push
ror
mov
cld
xchg
mov
fsubrl
xor
pop
loopne
and
loopne
mov
dec
cmpsl
push
or
js
lret
mov
or
int3
push
rclb
pop
push
aad
jge
sahf
clc
xor
pop
add
or
sbb
mov
cmp
cmp
leave
bound
xor
cmp
pushf
pushf
aas
cmp
mov
inc
or
ficoms
jg
inc
xor
add
movsb
or
in
decb
inc
mov
add
inc
push
js
xchg
addr16
xchg
sbb
movb
jp
mov
mov
adc
test
mov
or
add
nop
sti
insl
ja
hlt
and
adc
push
cs
popf
xor
push
fimuls
inc
mov
fstl
lock
pop
pushf
lods
adc
cmpl
mov
sub
enter
ds
adc
pushf
sub
add
into
pop
add
mov
sbb
inc
imul
nop
mov
mov
pop
mov
sbb
mov
push
add
adc
fstps
sbb
cmp
aaa
fwait
or
add
push
inc
bswap
dec
negl
lea
in
lods
mov
inc
mov
ja
xchg
int
push
and
mov
out
mov
sub
stc
or
add
push
lahf
cmp
test
mov
add
and
inc
push
inc
mov
ror
shll
jmp
xchg
fcoml
js
pusha
xorl
inc
xor
out
aam
mov
mov
hlt
fcomp
sub
mov
sbb
cmpsl
or
mov
ficoms
pop
adc
imul
dec
loop
mov
lret
add
and
insl
add
or
push
and
add
xor
lods
mov
jl
cmpb
cli
inc
cmp
ja
pop
adc
fldl
decl
mov
ret
fs
ljmp
ss
dec
je
gs
movsb
fidivs
add
inc
push
outsb
gs
aas
stc
pop
push
outsl
imul
imul
and
addr16
xor
jo
popa
arpl
add
inc
push
dec
dec
push
cld
ja
lret
rol
hlt
in
outsb
incl
sub
dec
inc
inc
and
decl
leave
je
mov
mov
shr
cmp
jb
add
add
mov
inc
and
cmp
add
add
pop
inc
sub
testl
hlt
push
inc
sbb
adc
add
into
addl
jp
call
lcall
addl
popa
adc
jnp
pop
shrb
adc
mov
mov
pop
test
sbb
ss
mov
and
mov
fstps
setns
add
and
sub
adc
cmpb
mov
mov
mov
or
test
inc
js
cmp
push
adc
push
xor
or
dec
pop
adc
into
loopne
fnstcw
and
adc
pushf
std
mov
arpl
neg
bound
inc
mov
orb
xchg
lea
add
xchg
mov
add
leave
and
pop
xchg
push
cmp
in
std
pushf
std
pushf
std
adc
nop
push
mov
push
jb
les
ret
inc
dec
jl
inc
inc
inc
dec
push
mov
mov
fs
testb
adcw
push
push
inc
push
cmp
or
aaa
flds
and
sub
xchg
mov
jne
nop
lea
in
sub
aad
loopne
mov
add
ljmp
int
pop
push
push
faddl
sub
sub
sbb
sub
add
inc
push
push
add
aad
push
add
fbld
add
xchg
imul
inc
loopne
je
jne
pop
push
add
push
je
pop
sysexit
fwait
mov
sub
mov
cmc
add
les
fwait
sbb
adc
and
mov
shr
lret
mov
or
movsl
pop
jo
cwtl
push
push
adc
aaa
test
stc
sub
push
xchg
or
add
adc
arpl
nop
in
mov
or
dec
adc
inc
repnz
pop
sbb
adc
push
leave
push
add
ret
inc
inc
clc
ss
lret
or
jl
dec
mov
mov
cmc
andb
imul
inc
push
push
xor
mov
xchg
cmp
test
jp
mov
and
dec
push
xlat
jl
sbb
xchg
jb
shr
aaa
dec
ljmp
add
pop
add
test
xchg
int3
dec
lock
mov
fisttpl
iret
fstpl
scas
hlt
movb
clc
pop
add
cld
test
sub
pop
cmp
lahf
fisubl
inc
lock
mov
fisubrl
lock
or
and
hlt
daa
xchg
int
sbb
inc
data16
inc
sub
pop
mov
add
sbb
daa
inc
add
jb
dec
fldt
lock
lock
sbb
gs
jo
fsubrp
sbb
rcrb
xor
inc
leave
jp
decl
inc
add
push
sbb
add
mov
das
sub
mov
in
jbe
pop
inc
jmp
add
pusha
scas
jle
mov
or
popa
mov
inc
inc
aam
aas
pop
stos
push
js
pop
scas
jmp
cmp
sub
pusha
addl
cs
rorb
jmp
cmp
xor
ret
nop
fwait
add
gs
rcrl
jmp
mov
push
mov
cmc
ljmp
fcmovu
xchg
cmp
xchg
mov
sti
inc
mov
mov
sbb
bound
ljmp
add
dec
push
mov
jp
ss
andb
jmp
pop
pop
inc
cmp
mov
mov
push
test
add
sarl
in
add
loopne
add
pop
sub
and
cmpsb
jb
mov
iret
push
outsb
mov
sbb
inc
lret
push
jg
mov
sub
push
shll
icebp
xchg
or
xor
ss
jne
mov
sti
repz
cmp
push
mov
pop
or
cmp
push
mov
mov
movsb
mov
pop
push
fnstenv
loope
adc
xor
stc
push
sub
add
pop
push
xor
popa
pop
jl
adcl
sbb
and
lcall
shll
sbb
call
movsb
xor
lahf
xchg
pop
add
rorb
mov
lret
clc
out
ds
repnz
data16
rorb
adc
pop
sbb
sbb
out
mov
aad
jl
pop
imul
mov
or
std
fnsave
and
popa
out
push
mov
adc
jl
cmp
fistl
mov
adc
mov
lds
sahf
out
pop
jg
add
out
cmp
aad
inc
lahf
push
pop
daa
jnp
lahf
ja
cltd
mov
jg
icebp
test
mov
jl
inc
mov
cmpsl
mov
pushf
mov
fbstp
xchg
xlat
pop
add
fwait
cmp
sub
into
mov
pop
out
push
mov
sub
sub
pop
xchg
fsubs
sub
jae
pop
fwait
jae
sar
inc
sbb
repnz
cmpsl
sbb
inc
cmp
popf
dec
fwait
jge
add
insl
sti
pop
dec
mov
fs
dec
ds
jg
push
fstpt
cmpsl
sub
pop
sub
sbb
sub
xor
jnp
insb
out
pop
cmp
sub
sbb
and
mov
jns
sub
rcll
rcll
and
scas
aad
inc
inc
or
dec
pop
mov
sbb
bound
lods
arpl
std
outsl
jl
sub
push
arpl
inc
sub
or
out
dec
jbe
mov
sub
sbb
enter
inc
cmp
mov
mov
lcall
mov
xchg
idivb
xor
or
dec
fdivr
mov
fistpl
mov
sub
out
xchg
out
std
push
roll
sub
add
mov
and
dec
roll
dec
cmp
sbb
pop
gs
mov
push
push
cmp
cmp
stc
pop
shll
scas
fwait
ds
mov
rcrl
mov
add
std
lcall
mov
cmpsb
in
jg
dec
dec
jne
fisttps
insl
jbe
insl
insb
or
pop
mov
sti
decl
cmp
jle
hlt
nop
mov
and
aad
dec
out
leave
fs
lcall
nop
ret
ficompl
sbb
lds
add
pop
inc
add
fistl
fsubp
cs
and
pop
sub
xchg
in
mov
sbb
or
je
shll
pop
fs
aaa
pop
sub
roll
push
mov
icebp
lcall
test
mov
dec
mov
xchg
push
pusha
mov
pop
cmp
pop
sbb
cmpsb
mov
sbb
or
mov
mov
aaa
sub
sbb
xor
or
fld
pop
mov
cmp
push
sti
out
mov
fistpl
cmp
sbb
inc
fdivs
pop
pop
js
pushl
push
mov
ss
mov
popa
and
pop
sti
test
clc
dec
fldenv
pop
xor
or
sbb
sub
jo
push
ljmp
cltd
inc
ds
dec
or
roll
jne
sbb
sbb
add
in
and
fists
mov
dec
std
inc
pop
movsl
fwait
iret
xor
pop
sub
lcall
xor
pop
pop
xor
add
mov
or
dec
mov
or
or
pop
mov
movsl
cmpsl
cmpsl
add
stos
sub
mov
scas
cmp
cmpsl
push
inc
pop
loopne
outsb
rclb
iret
xor
fucomp
rol
fnstenv
mov
mov
add
int3
fcmovb
push
pop
push
mov
sbb
xor
and
aas
or
orl
lock
rcll
adcl
sbb
or
imul
jl
mov
test
sub
and
pusha
push
ss
add
and
add
sbb
pop
pop
arpl
mov
mov
icebp
mov
pop
mov
sarb
pop
rcrb
pop
cltd
mov
outsl
or
pop
push
js
sub
scas
lret
in
sti
mov
or
ret
aam
jp
cli
xchg
ds
jns
cmp
ds
lea
push
push
hlt
clc
xchg
mov
or
cld
sbb
xor
push
mov
test
sti
aaa
pop
mov
into
push
lock
mov
sti
adc
sbb
or
lods
pop
push
pop
pop
add
jmp
pop
cmp
stos
sahf
das
pushl
add
sbb
ret
data16
xchg
cld
call
jbe
push
and
enter
push
add
dec
push
add
and
inc
stos
push
in
popf
andb
jle
incl
cmovne
enter
inc
dec
push
push
dec
inc
pop
cli
stos
aaa
stos
fsubr
int3
mov
xor
lds
ss
mov
dec
push
xchg
rcll
or
in
rorl
push
or
or
cs
xor
and
int3
inc
js
sbb
pop
inc
or
cmp
xor
or
imul
jae
mov
push
cmp
mov
adc
pop
ret
pusha
lahf
sbb
pop
and
xor
ror
shr
or
stc
movsb
js
mov
test
add
enter
or
inc
add
xchg
adc
adc
jnp
sbb
sbb
jne
push
test
mov
mov
add
sub
adc
addl
lods
xchg
pushl
insl
cld
mov
mov
out
pop
adc
inc
mov
cmp
je
or
dec
inc
inc
xor
sbb
sbb
mov
out
cmpl
mov
nop
jecxz
sub
dec
pop
cmp
cmpl
and
and
aas
push
lea
xor
xor
mov
shr
mov
jg
outsl
clc
add
cmp
sub
push
jl
sub
inc
dec
jne
shl
or
pop
pop
ret
aam
push
and
pop
push
cmp
inc
xchg
mov
outsl
shrb
lcall
enter
fistpl
add
mov
xchg
ss
ja
or
or
into
add
xchg
lods
xchg
push
pop
int3
or
mov
or
and
cld
fldenv
cltd
jae
cmp
enter
aad
sbb
sub
cmp
mov
mov
mov
push
jmp
adc
mov
add
fisttpl
notb
jge
fscale
les
pusha
cmp
push
sbb
xchg
mov
pop
loopne
add
pop
negb
cld
sub
xor
cmp
mov
ud0
add
lea
push
push
call
adc
ss
adc
mov
clc
jge
data16
in
dec
mov
data16
push
xchg
push
imul
pop
sbb
xorl
or
xor
xchg
loop
jmp
and
mov
lret
add
shlb
iret
pop
mov
sti
push
jbe
data16
xor
push
push
adc
and
jo
cld
adc
call
out
lods
lods
pop
sub
pop
mov
inc
cmp
jne
hlt
fwait
adcb
cvtdq2ps
push
push
jmp
movsb
inc
cmp
jne
insl
push
out
add
js
cwtl
call
mov
push
aaa
inc
jne
jmp
push
bswap
ja
or
mov
mov
pop
pop
add
sbb
sbb
cmp
sbb
dec
mov
adc
mov
and
sbb
or
and
sbb
imul
or
jne
repnz
cltd
adc
sbb
andl
pop
pop
inc
sbb
mov
ret
sub
loop
mov
or
pop
or
dec
in
sbbl
sahf
sti
inc
jne
jmp
jb
js
sbb
xor
dec
in
dec
aaa
repnz
inc
es
fadd
mull
out
push
mov
nop
in
xor
sub
dec
jne
mov
fcompp
xchg
xor
lret
add
mov
dec
push
dec
push
inc
pop
repnz
dec
jne
pop
xchg
push
or
and
jne
jae
add
push
jns
je
int
mov
fucomip
or
ret
dec
mov
in
dec
cli
push
pop
inc
ja
leave
fsts
push
sbb
pop
jne
cmp
xor
imul
jne
bound
fidivrl
ss
loopne
and
adc
sbb
ret
add
xor
sub
pop
lea
mov
jne
clc
adc
mov
xchg
daa
push
fistpl
pop
jne
push
jne
fimuls
xchg
add
rolb
pop
inc
push
call
inc
add
jne
push
in
andl
inc
add
push
shll
lret
mov
jo
das
into
add
inc
fdivs
insb
adc
cmp
jne
test
lods
push
pusha
mov
adcl
vunpcklps
xor
loopne
push
aaa
pop
push
xchg
mov
pop
cmp
cmp
enter
fs
fsts
gs
xor
data16
jne
out
adc
pushf
cmc
xor
ret
out
insb
xchg
xchg
dec
dec
xor
add
cmp
sub
neg
inc
fildl
shl
add
adc
jne
bound
inc
cmc
xor
pop
dec
push
enter
cmp
and
pushl
or
aaa
or
or
and
pop
mov
or
inc
xor
in
add
lret
cmp
fsubs
jle
mov
aam
mov
filds
add
xor
add
adc
add
pusha
inc
or
adc
jne
push
pusha
adc
xor
xchg
jne
mov
sub
jg
jmp
cmp
cmp
aad
ss
cmp
jne
mov
in
inc
xchg
xchg
add
pusha
aad
dec
insb
jmp
shrb
push
int
sbb
loop
mov
and
lcall
jns
in
cld
push
add
sbb
sbb
xor
sub
sbb
sbb
and
sbb
sbb
sbb
adc
or
xor
sbb
add
push
hlt
lock
and
xor
call
iret
out
push
fcoml
push
aam
rclb
repz
jl
push
enter
fcoms
inc
sahf
iret
mov
push
test
inc
xchg
cwtl
pushf
mov
cmp
inc
push
lods
mov
sbb
sbb
sbb
les
adc
sbb
sbb
sbb
and
xor
sbb
xor
inc
inc
add
xor
xor
or
xor
xor
xor
pop
pop
xor
xor
pusha
fs
xor
push
rol
fs
push
dec
pop
fs
push
pusha
cld
fs
fsubr
in
fs
lock
fs
mov
movsb
test
js
fs
mov
fs
cwtl
xchg
fs
mov
data16
push
push
ret
mov
adc
decb
push
movl
clc
jmp
jns
sub
mov
lcall
mov
jmp
mov
mul
mov
lea
add
sub
add
mov
inc
inc
movsl
mov
call
pusha
pop
cli
jmp
mov
mov
inc
cmp
jb
pop
pop
pop
push
or
xchg
fisubrs
adc
cmp
out
test
add
jb
pop
ja
push
and
jmp
dec
inc
add
imul
add
cwtl
adc
inc
or
sub
xor
push
sub
into
jae
add
in
iret
pop
cs
add
gs
add
fdivr
jg
and
jp
add
sub
cmp
and
ljmp
adc
push
push
clc
lods
cmpsl
outsb
push
jb
jbe
addr16
fists
inc
bound
adc
inc
push
dec
cs
dec
dec
add
cmp
sti
dec
outsl
fs
inc
sbb
insl
gs
js
add
outsl
outsl
testl
js
pop
sub
outsl
out
daa
out
arpl
lahf
pop
outsl
insl
insl
popa
outsb
fs
mov
pop
sub
outsb
jae
popa
and
rcr
mov
outsb
add
lock
data16
add
or
arpl
jae
pop
sub
daa
inc
pop
inc
jne
pop
outsb
je
fs
lods
mov
pop
sub
and
push
adc
mov
mov
add
or
add
add
addb
in
invlpg
imul
add
lea
push
gs
fs
or
outsb
sbb
insl
outsl
sbb
in
jbe
inc
xor
je
jb
inc
adc
je
push
flds
adc
mov
add
push
outsl
ja
je
or
fcmovne
adc
gs
push
adc
outsb
adc
push
frstor
dec
pop
popa
insb
mov
orl
pop
imul
jns
shrl
inc
or
jo
fsubrs
outsb
or
or
mov
insb
push
or
dec
imul
xor
sbb
push
lods
jne
mov
jnp
dec
outsl
fucomi
jae
jns
mov
dec
outsb
mov
outsl
adc
inc
fs
or
dec
cmpsl
test
data16
pop
ja
adc
pop
push
jb
mov
add
adc
push
outsl
xor
imul
insl
xchg
rorb
inc
mov
mov
or
mov
fldenv
push
jns
jne
inc
sbb
lret
fs
mov
add
add
push
push
ss
sahf
jnp
jg
inc
inc
gs
fdivr
mov
scas
inc
cltd
push
outsl
outsl
insb
push
addr16
add
push
push
sahf
sub
mov
or
jo
loope
leave
fstl
imul
dec
mov
sub
and
cmp
add
dec
gs
and
out
ret
sbb
aad
or
stos
rclb
add
add
imul
push
jnp
push
jno
jae
mov
mov
xchg
pop
jne
xchg
jge
dec
dec
jne
adc
dec
pusha
shll
bound
mov
je
mov
and
cmp
dec
dec
fcomps
int
test
push
push
out
push
mov
ret
xor
insl
lds
int
fs
push
pop
popf
loope
in
adc
dec
bound
lcall
jae
sbb
leave
idivb
jge
push
add
push
pmaxub
js
dec
push
popa
sbb
int
jno
dec
dec
inc
push
dec
int
xlat
mov
es
or
xor
ds
mov
adc
loope
push
test
outsl
jnp
pop
mov
push
imul
push
jne
fs
fnsave
pop
jo
dec
adc
je
sub
xchg
into
push
inc
sub
jae
shll
push
jne
dec
hlt
in
jp
fwait
adc
mov
jbe
or
mov
cld
imul
fs
jb
jae
pop
sub
lods
and
mov
fdivl
mov
push
or
add
pop
out
mov
out
popa
jae
adc
push
loope
mov
jae
mov
je
mov
cwtl
sbb
jbe
push
test
ret
fldenv
sbb
pop
push
xor
or
fisubl
ljmp
es
shl
push
divb
gs
sub
and
push
outsb
or
outsl
ss
sub
imul
jae
std
insb
outsb
imul
xchg
dec
pushaw
mov
or
jns
inc
sti
into
push
arpl
loope
pop
pop
mov
popa
pop
imul
sbb
inc
xor
push
or
inc
arpl
pop
push
inc
add
dec
add
add
mov
and
jmp
add
add
add
cmpl
divl
or
add
lea
pop
add
push
xor
add
adc
push
add
popa
adc
sbb
enter
popa
mov
je,pn
xchg
add
nop
jmp
and
mov
jb
inc
popa
and
sti
fldl
inc
add
es
lret
mov
jl
rolb
pop
call
adc
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
