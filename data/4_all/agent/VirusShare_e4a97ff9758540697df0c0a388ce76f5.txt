sti
pushl
rolb
cmp
je
push
push
and
push
mov
mov
and
adc
and
mov
or
or
push
push
movl
test
mov
or
adc
call
add
mov
inc
and
xor
cmp
jne
sbb
pop
outsl
fidivl
and
pop
xor
cmp
fstpt
or
cmp
pop
push
loopne
pushl
je
mov
mov
dec
add
dec
add
push
mov
ret
push
push
mov
xlat
fists
dec
mov
orb
push
mov
mov
push
mov
fldt
sbb
pop
pop
ret
ds
mov
and
push
push
cmp
divb
cmp
cmp
jb
cmp
test
aaa
or
andps
mov
push
push
push
push
stos
test
pop
mov
fstpt
negb
or
pop
adc
ss
repz
add
aas
dec
pusha
cmpsl
ljmp
fucomi
mov
cwtl
movsl
aad
inc
incl
jmp
rcll
mov
test
mov
ljmp
mov
int3
xchg
rcll
add
pop
cmpsl
mov
or
adc
nop
pop
data16
inc
push
fs
jmp
jo
out
sub
jbe
mull
push
fadds
out
imul
cs
sub
roll
add
lods
nop
rcll
out
xchg
push
inc
jne
or
sub
sti
je
test
call
out
ja
ja
pop
add
or
lock
and
push
fs
push
insb
cmpb
cmp
xchg
mov
jp
je
pop
adc
rcrl
adcl
xchg
push
cmpb
cwtl
loop
xorl
push
push
outsl
inc
jno
add
aas
ds
out
ret
add
or
add
sbb
mov
in
cmpsb
push
movl
clc
daa
cmp
push
stos
pop
cmp
imul
add
and
inc
out
imulb
pop
adc
jmp
or
int
jnp
cmpl
adc
push
push
xchg
mov
movsl
int
pop
rorl
pop
add
imull
xchg
adc
sbb
push
xor
lea
rolb
adc
pushf
mov
or
hlt
pushf
pop
std
int3
push
aad
inc
lcall
push
insb
lahf
pusha
xchg
push
ret
aas
icebp
inc
xor
sbb
mov
div
loop
cli
movl
in
mov
ds
andb
add
mov
pop
lret
mov
imul
outsb
scas
add
inc
ss
add
test
push
cmp
mov
and
inc
or
cmp
mov
and
jl
rorl
cs
adc
mov
fcmovnu
mov
sar
push
cmp
sbb
dec
adc
push
mov
jmp
sbb
mov
jg
adc
fldcw
add
inc
add
mov
imul
push
push
push
mov
sub
iret
repz
and
sbb
xor
out
pusha
mov
mov
cmpsl
stc
pop
mov
dec
dec
mov
push
mov
mov
imul
push
inc
mov
lcall
je
jne
divps
adc
sub
aam
test
jle
and
ffree
jecxz
add
loopne
inc
lea
daa
mov
add
add
mov
or
push
xor
cmp
je
mov
nop
mov
add
inc
push
jg
jg
repnz
add
test
jne
mov
shlb
in
pop
mov
or
push
jmp
push
or
pop
call
xchg
test
push
movzbl
int3
orb
add
jns
adc
jo
insb
pop
add
lock
add
sbb
push
push
push
call
add
cmp
cs
popf
add
cmp
sbb
cmp
callw
mov
clc
fisttps
mov
jne
inc
mov
jne
scas
insl
subb
cmp
adc
loop
mov
pop
cmp
ret
sbb
mov
test
inc
sub
push
sahf
add
or
int
js
negb
dec
cltd
cmp
and
adc
lcall
ja
adc
jbe
adc
inc
mov
cmp
mov
xchg
fsubp
dec
and
test
mov
and
and
addr16
scas
adc
jo
xorb
or
xlat
sbb
xchg
jp
rcrl
mov
push
jo
push
dec
sbb
cmp
push
jns
pop
pop
dec
xor
push
sbb
pop
lock
cmp
add
std
sbb
dec
lds
dec
clc
sub
sub
add
xchg
jge
pop
sbb
jle
insb
orl
dec
fcoml
cmp
dec
lds
enter
outsb
ret
lock
jp
pop
pop
pop
adc
xor
cmp
mov
add
or
adc
push
dec
sbb
push
sbb
fs
outsb
or
js
xorl
insl
sbb
test
or
das
hlt
cli
insb
scas
mov
loope
pop
insl
insb
sbb
cwtl
shll
cld
sbb
inc
sub
jl
cltd
fs
and
xchg
cmpsl
std
lahf
mov
adc
add
sahf
out
lea
inc
add
pop
mov
adc
dec
orb
push
out
ss
ja
mov
push
test
add
push
sgdtl
pop
or
push
stc
or
or
or
dec
jns
mov
adc
jmp
xor
jp
fdivrl
divl
mov
mov
pop
xor
pop
ret
xchg
imul
push
es
imul
scas
add
shlb
add
push
push
xor
mov
sbb
or
sub
dec
inc
lret
add
mov
jb
pop
pop
pop
cmp
jg
cmp
jge
push
lea
mov
mov
add
pop
cmp
je
int3
add
jl
push
movsl
out
ret
xor
ret
pop
cmp
mov
in
cmpsb
mov
xchg
mov
cmp
jns
add
bound
jbe
iret
xor
insb
push
mov
push
outsb
out
pop
pop
sbb
jns
into
sub
fdiv
xlat
divl
sbb
mov
xchg
lea
nop
pop
test
sub
loopne
jl
mov
mov
xor
test
xchg
push
or
xchg
enter
pop
jbe
dec
xchg
shrl
add
inc
adc
push
pop
call
add
rolb
incb
xor
call
push
push
mov
in
push
clc
mov
inc
addl
adc
cmp
jae
lea
addl
mov
scas
fs
pop
in
mov
movl
mov
inc
mov
sub
test
aam
jns
rorb
push
out
out
daa
mov
ffreep
js
ja
in
sbb
mov
xchg
add
scas
fnstenv
mov
xor
movsl
jns
clc
lea
mov
cmp
add
mov
pop
out
aaa
shlb
cmp
add
cmpsl
loopne
lock
in
xchg
out
lret
cld
mov
jne
fs
insb
inc
inc
fdivrs
out
lea
push
imul
mov
pushf
and
imul
add
push
adc
add
fs
sarl
or
popf
fsts
xor
cld
xchg
push
add
in
rcll
lods
sub
dec
jnp
test
cld
clc
mov
dec
fisubl
sub
and
adcb
and
sbb
leave
insb
xchg
sti
or
iret
or
dec
cld
inc
incl
mov
je
jns
sub
daa
push
insb
xor
std
dec
add
clc
mov
mov
adc
push
or
fmulp
mov
inc
xchg
lcall
fcmovu
stos
ljmp
ret
sub
inc
testl
and
jbe
xor
push
push
sbb
dec
hlt
arpl
add
fidivrs
add
cmp
sti
mov
data16
push
movsb
dec
bound
rolb
ss
mov
arpl
into
mov
mov
movsl
push
arpl
cli
sarl
xor
push
rcrl
lahf
in
loopne
insb
xchg
sbb
ret
pop
sarl
lcall
lock
mov
mov
movl
mov
mov
add
sub
push
dec
adc
jnp
or
sub
sti
jae
jnp
lods
scas
lods
adc
cmp
push
and
adc
mov
pop
jnp
mov
pop
adc
or
dec
repz
push
push
int3
or
pop
ror
in
mov
dec
pmulhuw
and
cmp
inc
cmp
repnz
or
push
ds
push
in
jb
test
mov
inc
or
data16
paddusw
xchg
adc
push
mov
push
xchg
mov
push
mov
sbb
add
push
push
shrb
mov
jg
push
movl
das
xor
pop
or
fildl
dec
adc
cmp
iret
or
cmp
les
mov
daa
pop
push
inc
sub
les
push
in
jmp
push
push
mov
sahf
mov
jle
push
add
repz
cmpsl
adcl
call
pop
cmp
jg
mov
pop
sarb
jb
sbb
push
sahf
dec
push
push
push
mov
jb
mov
ret
addr16
xchg
orb
movl
ret
push
pop
jnp
addl
and
les
fadds
int3
mov
xchg
sub
and
or
sbb
mov
add
jb
push
jno
icebp
or
mov
repnz
sahf
add
adc
add
mov
dec
xor
lods
inc
and
adc
add
fldz
testl
inc
push
lea
into
push
movsl
xchg
and
bound
xchg
cs
lea
jge
cs
gs
arpl
and
sbb
fcoml
dec
add
cmpl
mov
add
test
jge
in
in
mov
xor
mov
and
fwait
dec
and
sbb
aam
xchg
add
or
pusha
inc
sbb
out
cmp
fstpt
cmp
adc
aad
cmc
aam
add
pop
test
pushf
cli
add
mov
jne
push
ja
insb
adc
lea
sti
sbb
rcr
ljmp
xor
xor
jmp
fistps
or
arpl
dec
add
hlt
pop
jl
jg
jle,pn
shl
add
push
test
test
jne
xchg
cmpsl
pusha
test
icebp
lds
test
cmpsb
lds
dec
mov
mov
scas
mov
xchg
fcompl
push
sti
add
loope
test
fisttpll
js
jg
lea
addl
iret
jl
ret
insb
adc
fmull
mov
inc
nop
lcall
adc
inc
push
js
sahf
push
fimull
and
aas
scas
aam
das
xchg
mov
or
negb
add
mov
inc
fstpt
mov
mov
cmp
add
test
mov
negl
aam
int
jb
repnz
inc
inc
sbb
inc
pop
vdivpd
movzwl
cld
les
adc
aas
jg
mov
push
out
jns
mov
adc
fbstp
push
mov
push
cmpsb
push
inc
sbb
mov
adc
or
nop
pop
mov
ret
sbb
or
mov
fucom
fldt
xchg
sbb
xlat
jge
adc
jae
repnz
dec
addb
add
and
sub
sar
outsb
jne
je
mov
movsb
and
mov
stos
shlb
lock
into
lock
data16
inc
or
sbb
ret
xor
adc
rcll
jns
rclb
inc
cmp
movsl
pop
mov
pop
push
loop
leave
pop
je
mov
jb
mov
dec
jg
pusha
add
mov
sarb
rcrl
movsl
mov
hlt
add
lock
dec
add
insb
push
ja
sub
in
adc
push
xor
insb
cmp
repz
inc
mov
jnp
ja
pusha
divl
adc
add
aad
xchg
adc
dec
jmp
jbe
add
in
mov
mov
inc
inc
cmp
jl
lea
and
push
mov
adc
push
mov
add
xchg
shl
or
push
jg
inc
or
sub
cwtl
sbb
cmp
mov
clc
jl
mov
jmp
sbb
lret
push
rclb
push
mov
ljmp
xor
pop
inc
jg
sahf
je
cmp
jle
ds
cmp
je
add
lea
push
push
or
jb
mov
lea
push
and
pushf
inc
add
jmp
or
jns
push
xor
rcrl
add
adc
out
cmc
rol
sub
pop
add
mov
fsts
jnp
loopne
jecxz
out
push
sbb
sbb
ret
imul
in
lea
lret
or
imul
or
js
test
jno
inc
pop
call
iret
mov
add
pop
in
push
in
out
xchg
stc
add
jge
cmp
pop
hlt
fildl
je
inc
dec
xor
mov
jge
jmp
jecxz
cmp
jp
jnp
js,pt
out
and
push
jmp
sbb
je
xor
push
push
mov
adc
pop
and
mov
mov
sbb
leave
int3
adc
jb
pop
invd
cltd
je
xchg
test
frstor
jmp
mov
jb
xchg
sbb
ret
mov
loopne
or
pop
repnz
pusha
xchg
addb
add
add
sub
push
subb
jne
inc
cs
and
inc
rclb
sub
push
xchg
sbb
lret
sbb
inc
es
jb
jnp
adc
aas
repz
jnp
push
jle
adc
inc
repz
adc
int3
dec
cmc
dec
ret
xor
jmp
loopne
jns
and
cmc
mov
pop
or
jae
daa
pop
or
sbbb
out
pop
jbe
or
sbb
adc
lds
and
cmp
mov
and
out
jmp
push
xor
adc
faddl
dec
subl
call
or
test
lock
insb
xchg
popf
jo
dec
push
bound
loopne
ds
xorl
jl
mov
rclb
jg
dec
mov
push
leave
adc
call
dec
jl
xchg
xchg
mov
int
mov
shr
mov
add
and
inc
mov
cmp
push
xor
jbe
stos
pop
lods
sbb
xor
vpmuludq
insl
dec
pop
pop
out
out
dec
mov
sub
mov
je
sub
and
out
je
pop
je
xchg
jl
insb
sub
or
xchg
push
loope
inc
rcrb
push
ss
data16
orl
sbb
or
popf
jl
sub
jae
adc
mov
xor
mov
call
adc
xchg
add
or
popa
cmp
pop
add
adc
push
jb
or
xchg
xor
push
fmull
dec
adc
inc
fs
jb
dec
inc
addr16
pop
push
loop
jo
sbb
arpl
dec
push
add
pop
xchg
or
lahf
sub
enter
push
sarb
inc
mov
sbb
and
push
push
sub
addr16
les
roll
pop
sfence
cmp
jbe
fimuls
mov
sti
dec
cmpl
mov
push
push
dec
outsb
mov
inc
cmp
jb
outsl
mov
sub
mov
test
or
lea
in
mov
add
out
add
in
adc
insl
lock
pop
mov
sbb
adc
outsb
out
rcrl
add
pop
adc
fnstenv
sub
popa
mov
imul
iret
adc
inc
add
jbe
dec
imulb
mov
push
inc
ja
push
add
xor
xor
imul
mov
pop
movlps
mov
loopne
cmp
dec
test
adc
sbb
push
push
dec
mov
test
enter
sbb
inc
cmp
repz
and
push
jl
xchg
lea
imul
push
push
jbe
and
stos
add
mov
lret
shl
cmp
push
lcall
adc
dec
lds
inc
mov
mov
push
je
test
or
iret
es
jb
cmpb
pop
int3
push
pop
or
pop
mov
mov
les
inc
orl
sbb
pushf
cmp
jle
or
imul
xor
or
jmp
jg
push
data16
jg
scas
lds
push
inc
push
test
and
adcl
je
cmp
xor
pop
ja
or
push
cmp
jae
adc
ja
jne
and
inc
jmp
test
sub
std
jo
insb
add
call
sbb
or
sub
push
fninit
inc
pop
xor
nop
push
inc
xlat
cmp
cmpsl
dec
dec
mov
cmp
mov
mov
loopne
or
cmp
or
ja
xlat
sti
sub
adc
lea
imul
xchg
push
add
inc
dec
in
loop
pop
clc
jge
push
aas
inc
mov
add
test
movsl
and
popf
add
lcall
jmp
mov
pop
pusha
test
ljmp
inc
imul
or
jb
leave
movsl
mov
loop
and
or
cmp
pop
jb
xor
sub
repnz
xchg
mov
je
addl
sbb
cmp
push
inc
push
push
mov
push
or
jmp
pop
lods
lcall
push
shrl
inc
popa
xlat
push
sub
add
inc
imul
sbb
sahf
orl
fiaddl
sar
sbb
addl
and
xor
xchg
lahf
outsl
lahf
testb
xor
sti
addr16
push
int
inc
add
xor
int3
lahf
mov
mull
mov
push
add
enter
ds
pop
push
add
push
or
or
js
loop
or
or
pop
xchg
jo
cmp
pop
and
mulb
push
in
out
sub
dec
adc
lcall
and
rolb
loopne
inc
and
mov
in
or
inc
or
ss
cmp
andb
data16
mov
push
adcl
mov
add
push
jge
sbb
dec
xorl
std
adc
adc
hlt
jno
adc
pop
dec
xor
mov
mov
fs
mov
mov
dec
mov
test
pop
ret
mov
sarb
or
xor
cmp
je
push
call
adc
cmpsb
mov
ljmp
lods
mov
lock
push
add
and
aam
jge
mov
pop
ds
test
sbb
or
cltd
mov
sub
push
pop
loop
push
clc
inc
add
add
pop
or
sub
push
push
outsb
lret
jbe
mov
in
jl
or
je
int3
sub
cmp
out
adc
ja
movzbl
sbb
and
or
test
movsb
push
cmp
je
dec
mov
div
jl
jg
fucomip
mov
loope
cmp
jge
lods
sub
push
push
mov
inc
jne
notb
mov
and
int
fcomp
incl
cli
or
lret
orl
ja
cs
imul
fstpt
ret
push
mov
mov
push
pop
and
xchg
sub
push
pop
aam
sbb
in
or
mov
data16
je
xchg
cmp
enter
cmp
popa
movsb
adc
sub
mov
sub
mov
lret
push
push
push
add
add
xchg
xchg
sbb
add
int3
adc
push
sub
jg
mov
push
shr
ret
decl
inc
or
cmp
xchg
imul
mov
cmp
jo
es
sbb
inc
cli
and
mov
rclb
aas
push
faddl
lret
mov
cmpb
lahf
or
subb
adc
mov
push
fsubl
adc
shlb
lcall
out
iret
pushf
dec
xchg
lea
pop
mov
mov
cmp
hlt
cwtl
inc
lcall
cmp
sub
dec
outsl
loope
ret
pop
push
flds
jl
test
jle
sub
jo
xor
adc
sub
jl
add
or
add
mov
pop
insl
mov
push
lock
enter
add
scas
push
sub
mov
adc
les
shll
fildl
test
cmp
jg
add
scas
push
or
cmc
xor
push
pop
dec
fstpl
mov
sbb
sbb
inc
sbb
ret
fcompl
push
scas
mov
jnp
cmpsl
clc
adc
fwait
inc
push
sub
fmuls
xchg
das
cmp
and
adc
add
roll
cmp
inc
cmp
xor
movsb
push
les
mov
divb
inc
jle
mov
mov
adc
ret
aaa
insb
stos
pop
mov
pop
mov
jl
inc
push
jne
sbb
dec
jae
sub
les
push
cmpsl
lds
pop
cmp
call
or
out
inc
lea
test
jl
and
mov
xor
jle
push
fcom
or
stos
rcll
fldt
je
jle
movsb
mov
loop
shll
test
negb
movsl
sbb
push
sbb
sub
js
mov
pop
fsubrs
dec
pushf
fidivs
dec
adc
imul
sahf
cmp
cmp
sarl
sub
aaa
loope
mov
lods
sub
inc
or
into
jge
jo
dec
cmpsb
loopne
test
aaa
pop
add
sarb
sbb
cmpsl
ror
cld
dec
push
movsb
pop
push
pop
add
and
ficoms
sub
sub
push
sbb
cmp
decl
mov
jle
pop
inc
pop
aas
adc
jle
pop
xchg
mov
cmp
mov
fiadds
shl
in
cmp
call
test
mov
mov
inc
idiv
add
adc
std
add
add
adc
cmp
dec
outsb
aaa
sbb
in
out
or
or
je
or
or
popa
xchg
cmp
jb
xor
dec
mov
or
push
add
movb
mov
in
adcb
insl
jl,pt
cmpl
mov
or
arpl
stos
mov
pop
outsb
or
scas
lea
push
rorb
clc
repz
call
add
cld
or
cltd
call
pop
loope
addb
push
xchg
pop
push
sbb
cli
sub
aad
outsl
push
mov
dec
lock
pop
jns
mov
pop
mov
xchg
xchg
xor
int3
fistpll
pop
fidivs
push
je
testb
inc
sti
dec
and
je
xchg
lcall
jmp
mov
cmp
jb
add
and
add
lock
cwtl
adc
mov
push
addl
inc
adc
or
ficompl
jb
jmp
push
adc
add
pusha
push
and
sbb
ficoml
inc
cmpsl
sub
push
xor
and
cmp
icebp
pop
jne
aam
mov
or
out
push
pusha
cmp
movb
jne
test
loope
pop
out
ret
push
and
daa
lods
dec
negl
aas
pop
testl
dec
incl
jne
mov
mov
add
jo
xor
pop
add
shrb
les
push
movsb
or
jns
and
or
lahf
or
andb
mov
js
idivl
mov
or
data16
into
aam
jmp
leave
inc
outsl
les
loopne
clc
push
push
dec
lcall
cmp
dec
rolb
adc
mov
ud0
jmp
jmp
fisttpll
loop
mov
adc
fidivrl
inc
push
push
push
mov
sub
push
sub
mov
sub
push
push
push
subl
dec
push
inc
inc
mov
pusha
pop
sub
push
insb
hlt
je
push
or
test
je
adc
mov
add
pusha
xor
jo
jecxz
call
inc
cmp
lcall
lret
pop
jg
jno
fnstenv
add
stc
mov
faddl
ret
mov
pusha
inc
and
push
and
fldl
push
ds
pop
xor
sub
mov
add
or
or
sbb
les
push
shlb
pop
pop
ret
xor
add
dec
cmp
and
out
adc
pop
or
add
mov
adc
pop
aam
or
lea
sub
jo
sbb
xor
push
sbb
cmpb
push
scas
std
data16
or
xchg
fldl
pop
loope
cwtl
and
inc
pop
sub
mov
nop
pop
mov
mov
ss
push
or
inc
pushf
add
jl
mov
xor
mov
mov
xor
cmp
xchg
xor
mov
push
or
adc
push
pop
or
add
add
call
jb,pn
je
jb
and
add
repnz
daa
push
clc
roll
je
push
or
test
mov
or
mov
lods
out
sbb
mov
jle
jle
out
pop
mov
test
mov
add
fisubrs
mov
sbb
call
push
pop
or
adc
ret
rol
inc
add
and
mov
insl
jmp
jbe
sub
rep
mov
sbb
jl
jo
inc
cli
outsb
or
in
arpl
sub
adc
mov
add
int3
scas
in
sbb
add
mov
jmp
shll
mov
sbb
mov
jne
pop
testb
inc
add
xchg
pushf
jbe
pop
sub
xor
xor
sub
adc
or
jge
clc
out
je
ljmp
jb
xchg
je
test
jbe
push
add
add
divl
sbb
sbb
dec
add
ljmp
addl
rolb
incb
pop
jle
xchg
sbb
push
add
ja
int
sbb
mov
sbb
jbe
enter
int3
sbb
or
lret
jb
rorb
xor
test
call
dec
jmp
repnz
mov
testl
mov
lahf
xchg
xchg
jmp
jb
jmp
pop
mov
dec
sub
sbb
cmp
sti
sbb
adc
xchg
jo
les
adc
sbb
push
fsubr
icebp
inc
jae
mov
out
push
mov
xchg
cmpb
je
das
push
dec
push
cmp
mov
movsl
mov
ja
sbb
sbb
test
pusha
jbe
xorb
adc
sbb
jl
pop
scas
xchg
pop
mov
dec
rcrl
fiadds
add
bound
sarb
xchg
jmp
dec
push
ja
xchg
mov
andl
xorb
pop
xor
xchg
orl
repnz
xchg
push
enter
jo
mov
mov
push
or
lea
lea
cltd
sub
adc
shld
push
push
jmp
push
push
jmp
aas
dec
jnp
pop
jle
lea
fidivrs
cmp
jle
jbe
addb
mov
sbb
aad
repnz
pop
sbb
push
inc
roll
mov
jp,pn
dec
push
rolb
sbb
bound
or
mov
mov
adc
adc
cmpsl
cmp
jne
ret
pop
cmc
mov
adcb
mov
movsb
xor
push
test
lods
je
mov
and
jb
cs
mov
or
xor
inc
add
sahf
in
add
cmp
paddd
and
idiv
jmp
sub
push
mov
in
pop
sub
xor
jae
mov
insb
xor
out
mov
mov
xchg
out
mov
mov
mov
test
loopne
lahf
xor
xchg
dec
lock
cld
add
in
dec
ja
mov
or
loopne
sti
in
cmp
cmp
inc
aas
xchg
jbe
sahf
dec
shlb
icebp
stc
sub
mov
lret
rclb
inc
les
dec
inc
call
xor
sub
jnp
push
adc
cmpl
adc
sub
lods
jg
mov
jns
dec
sbb
fiadds
adc
inc
js
push
push
pop
movsb
mov
lock
cs
mov
shrb
xchg
out
int
inc
fcompl
das
int
jmp
hlt
or
aas
add
dec
adc
test
xor
xor
and
mov
cmp
sub
in
jl
dec
adc
pop
jns
xchg
lret
repz
test
cmp
push
test
jl
in
mov
aas
mov
xchg
out
bnd
rclb
fcom
call
sub
push
jbe
or
dec
sub
pop
mov
scas
daa
cmpsl
inc
inc
je
call
pop
gs
mov
push
mov
push
sub
mov
inc
jo
mov
sub
jo
movsb
inc
loopne
push
jns
or
adc
sub
fbld
mov
inc
xor
in
pop
push
sbb
repnz
mov
or
push
lret
jl
test
jge
out
repnz
jbe
lret
repz
mov
rol
sub
pop
int3
test
insb
in
xchg
out
sub
or
aas
clc
or
lahf
xchg
xor
adc
adc
sbb
dec
in
imul
cmp
cmp
push
push
or
pop
pop
inc
cmp
pop
ja
jns
or
mov
imul
sub
cld
mov
dec
xor
fisttpl
dec
cmp
sbb
jo
movsb
mov
je
cwtl
nop
xchg
xchg
xchg
lret
lcall
lret
or
mov
fsubrs
adc
fdivrl
mov
sub
movsl
xchg
mov
mul
dec
cld
cmp
or
mov
cmp
add
mov
jbe
add
je
push
xchg
add
dec
les
enter
dec
movsl
push
stc
loopne
loopne
in
mov
les
or
xor
xchg
xchg
dec
mov
xor
sub
cmp
outsl
or
pop
cs
pusha
push
xchg
lret
in
pushf
mov
out
mov
pop
int3
jb
or
call
jnp
or
or
or
sub
enter
ret
xor
insb
out
xor
movsb
mov
dec
jl
push
lret
xchg
mov
sub
in
shrb
fcomp
ds
mov
hlt
clc
xor
add
inc
xchg
inc
push
sbb
and
and
cmpsb
inc
pop
mov
dec
bound
fs
bswap
in
sub
cmp
push
sub
jns
popf
outsl
ficomps
js
pop
or
gs
cmp
fs
in
cs
inc
jns
mov
in
sub
ss
pop
pop
or
adc
or
ss
sbb
xor
add
dec
ss
idivl
cld
fwait
jo
xchg
xor
jl
lock
nop
push
xor
mov
pop
inc
rcl
lret
lods
mov
hlt
xchg
clc
lret
xchg
cld
test
pop
outsb
xchg
iret
and
mov
cmp
inc
inc
jb
jns
cmpsb
jbe
pusha
fs
inc
test
mov
sahf
inc
test
mov
ja
in
stos
int3
xor
aam
ret
ret
mov
lock
cmp
pop
stc
sub
mov
pop
in
fcompl
testl
or
cmp
sti
mov
sub
bnd
push
dec
xor
fs
mov
pop
cmp
dec
cs
push
test
and
mov
lret
xchg
cld
lcall
xchg
clc
in
xor
dec
xor
cmp
dec
sub
cmp
jb
test
pusha
fs
lret
leave
mov
addb
xor
mov
shrb
aam
lret
in
xor
hlt
xor
enter
cmp
cmp
shrl
sub
cmp
sbb
add
sub
cmp
xchg
iret
fcompl
sub
mov
es
cmp
push
ja
movsl
repnz
push
jb
xchg
je
cmp
es
mov
mov
xor
xor
iret
push
test
or
repz
cltd
sbb
push
sub
and
sub
inc
inc
cs
push
pop
pusha
repnz
cmp
cmpsl
addr16
jl
xor
mov
cs
xchg
data16
enter
inc
inc
mov
lock
push
cs
push
hlt
clc
gs
or
test
cmp
adc
push
xlat
xor
jb
xor
pop
aad
push
daa
iret
xchg
lret
pop
pop
jae
inc
js
mov
push
mov
movsl
mov
movsb
mov
mov
out
cmp
xchg
mov
movsl
bnd
cmp
lods
movsl
stos
cmp
mov
mov
sbb
cs
fcoml
mov
xchg
cmpsl
nop
cmp
adc
cmp
dec
inc
dec
clc
cwtl
pusha
fs
call
pop
mov
or
pop
enter
or
mov
enter
lods
mov
mov
in
jae
inc
or
or
adc
xchg
lret
leave
repz
or
and
daa
iret
test
push
push
pop
push
les
pushf
push
je
jl
loopne
in
push
cwtl
pushf
mov
lret
dec
mov
loopne
push
cs
in
mov
push
sub
cmp
cmp
sub
popf
mov
sarb
fadd
xlat
into
in
movsb
lock
aas
cld
js
stos
mov
cmp
and
jns
xchg
dec
mov
cmp
subb
movsl
push
pop
pusha
push
mov
movsb
nop
mov
cmp
sbb
sahf
outsl
int3
xor
adc
lock
jl
clc
in
xchg
adc
mov
or
xchg
aaa
cmp
sub
daa
into
xor
dec
cmp
fcoml
stc
xor
jo
je
in
push
mov
cwtl
pop
outsb
xchg
xchg
pushf
into
fs
jb
lods
imul
xor
in
jb
gs
cmp
dec
in
enter
dec
push
inc
stos
jno
fidivrs
dec
fxch
pop
xchg
jo
xor
inc
pop
cs
mov
mov
mov
fs
dec
in
jl
mov
push
test
les
rolb
push
sahf
dec
in
hlt
and
cld
sub
enter
add
xor
jns
xchg
xchg
push
cmp
dec
in
pusha
es
js
test
cmpb
pushf
cmp
cmp
cmpsl
xor
pop
inc
fcomp
push
fisubrs
mov
cld
xor
ds
mov
lret
ds
lret
push
push
pop
inc
xor
dec
push
cs
sub
xor
mov
cmp
loop
lret
in
mov
mov
lods
pop
dec
fcomp
iret
clc
jns
movsb
popa
je
test
nop
push
fisubs
es
cmp
fldcw
lock
or
push
or
adc
es
sbb
sub
pop
push
mov
cltd
ret
dec
je
cmp
jl
out
push
cwtl
xor
lret
repnz
cmp
and
in
push
sub
lret
ret
or
mov
and
mov
inc
aas
aas
sub
xchg
dec
aas
fstpt
aas
in
push
fsts
nop
sub
lods
arpl
pop
dec
sub
aam
das
shrb
xor
cld
aas
test
add
inc
sbb
inc
push
mov
and
and
movsb
sbb
andl
pop
xor
pusha
jbe
shlb
int3
mov
lods
jl
sahf
leave
or
aas
push
aas
leave
sub
adc
pop
jo
bound
fbstp
xor
fidivrl
mov
shlb
xchg
fsubrl
iret
addr16
xor
call
dec
mov
jae
shlb
aaa
into
shll
push
test
inc
enter
xor
and
pushf
push
jbe
inc
xor
test
in
push
mov
cs
xchg
lret
lock
clc
push
mov
inc
sbb
in
jb
adc
cmp
sub
arpl
inc
mov
addb
movsb
xor
pcmpgtd
ja
jle
xchg
nop
sbb
xor
shlb
sarb
cmp
or
aas
in
lret
sub
add
inc
hlt
jns
xchg
xchg
xchg
and
sub
jns
lds
inc
cmp
pushf
cs
in
push
xchg
lret
repz
sub
mov
rorb
and
inc
je
mov
fdivrs
cmpsl
dec
ja
mov
xchg
xchg
addr16
adc
inc
sbb
xor
push
cs
cmp
shlb
movsl
jb
pop
pusha
push
sub
movsb
in
push
mov
push
stc
mov
int3
inc
inc
rclb
sub
xchg
out
in
in
xor
adc
inc
pop
sahf
xchg
and
inc
adc
out
dec
in
mov
loopne
xchg
clc
sub
xchg
cld
add
fcoms
inc
stos
cld
fisubs
sub
mov
inc
inc
inc
aas
mov
sub
xchg
lret
in
mov
mov
xchg
xchg
pop
jbe
fists
loopne
add
cmp
out
and
stos
shlb
xor
jno
and
in
or
jns
mov
cmp
inc
inc
xor
cld
inc
inc
xor
js
push
cs
jl
ljmp
movsb
rol
cs
lret
enter
sbb
test
inc
or
in
repnz
adc
xor
daa
xchg
lret
push
push
pop
js
mov
jl
mov
adcb
cwtl
rclb
or
xchg
pop
scas
inc
sub
es
xchg
mov
mov
push
mov
in
nop
int3
dec
in
mov
lock
sbb
mov
mov
and
dec
jns
mov
dec
arpl
and
mov
in
dec
inc
test
jno
stos
mov
repnz
in
xor
and
xchg
lret
in
mov
inc
or
lahf
xchg
inc
or
out
mov
sub
jns
pop
xor
inc
dec
push
in
mov
inc
jo
pop
stc
mov
js
popa
jl
subb
gs
push
xchg
cwtl
pushf
xchg
xchg
xchg
lret
dec
mov
fdivrl
in
push
in
mov
hlt
out
inc
jns
or
rorb
pop
int3
inc
daa
aam
in
lock
sbb
pop
clc
mov
sub
lret
sbb
je
sbb
fists
inc
adc
pop
inc
cld
pop
fidivs
pop
inc
xor
cld
mov
repz
mov
aam
jbe
and
mov
sbbl
or
cmpb
adc
mov
xchg
lret
in
push
xor
mov
daa
dec
xor
shrb
cmp
aam
mov
jmp
mov
mov
js
test
loopne
test
int3
insb
jns
sub
or
xor
repnz
mov
inc
dec
lods
jl
lock
inc
mov
test
pop
fisubrs
push
cmp
lea
adc
test
push
roll
and
jl
cmp
mov
xor
fidivrl
test
es
mov
int3
mov
pop
sahf
lret
jae
or
xchg
or
shrl
xor
push
adc
xor
iret
in
or
sub
in
jo
dec
cs
pop
mov
nop
xchg
pushf
push
push
mov
mov
es
mov
aam
xor
xorb
cld
add
mov
iret
xchg
lret
and
inc
push
inc
inc
push
push
cs
inc
dec
stos
push
fs
mov
mov
scas
lret
nop
jmp
cmp
jg
test
push
or
push
stc
cs
orb
in
mov
ja
xchg
int3
loopne
in
xor
fisttpll
push
or
push
adc
dec
imul
dec
sub
xchg
lret
dec
push
pop
fs
out
mov
xchg
fdivp
pop
sub
adc
dec
pop
jo
dec
dec
jb
sub
clc
cld
pop
cmp
dec
sbb
and
in
repnz
cs
fldl
arpl
push
mov
sbb
push
xchg
lret
dec
test
mov
aaa
push
push
cs
xor
aam
pop
lock
pop
mov
loopne
adc
mov
sbb
dec
cmp
insl
mov
stc
xchg
subl
add
dec
or
and
adc
mov
dec
sub
cmpsl
sar
jns
mov
adc
mov
xchg
insb
jo
push
mov
ret
nop
xchg
pushf
jns
scas
repnz
mov
pop
push
jb
or
cmp
out
cld
xchg
add
dec
and
and
sub
call
cmp
inc
dec
int
test
dec
dec
lds
dec
movsb
dec
dec
dec
cmpl
and
xor
lret
rolb
arpl
mov
adc
dec
test
dec
ret
in
dec
enter
dec
dec
inc
leave
inc
dec
mov
dec
ss
arpl
test
xchg
dec
and
mov
adcb
dec
xor
lret
movsl
mov
and
aam
repnz
cmp
out
lods
xor
cld
daa
add
mov
and
xchg
lret
je
inc
dec
sahf
scas
mov
mov
jo
popa
aas
mov
lock
mov
test
xor
dec
dec
sub
mov
push
dec
xor
push
loop
xor
inc
mov
dec
ss
xchg
out
jecxz
dec
dec
dec
nop
cmp
jb
xor
std
mov
lret
cmp
push
decl
in
xor
inc
js
xchg
xchg
lret
jl
add
pushf
mov
movsb
repnz
dec
and
dec
gs
dec
scas
roll
add
push
dec
push
push
stc
rcrb
lods
inc
mov
movsb
and
sbb
push
shlb
aam
or
or
push
dec
dec
je
dec
and
sbb
sub
clc
mov
fcoml
dec
mov
gs
out
dec
cmp
or
lret
mov
push
jae
cs
mov
int3
sub
fdivrs
pop
jecxz
mov
dec
adc
sub
jns
lds
inc
mov
push
dec
mov
xor
pushf
push
push
xor
jb
pop
shrb
lret
dec
gs
xchg
cs
xchg
mov
mov
call
sbb
add
or
dec
mov
push
sub
inc
scas
xchg
xchg
lret
dec
dec
push
push
mov
das
mov
or
mov
ret
xor
adc
inc
and
ja
orl
sub
test
test
in
sub
int3
in
lock
repnz
clc
mov
pop
sub
xor
inc
sahf
dec
movsl
repnz
in
fnstenv
je
js
xchg
sub
xchg
cwtl
xor
pop
dec
mov
mov
jb
loopne
add
pop
cmp
or
cmpsl
and
jecxz
in
sub
dec
inc
dec
dec
fwait
mov
mov
and
xchg
jo
dec
repz
jl
inc
pop
arpl
pushf
outsl
dec
xor
fstps
push
das
xchg
sbb
mov
iret
movsl
stos
cmp
mov
in
push
sub
enter
cmp
dec
call
dec
dec
movsl
pop
stc
adc
dec
inc
xor
ds
xor
sub
dec
dec
cmp
addr16
jnp
pusha
and
repz
sub
or
cmp
dec
xor
cmp
or
das
xor
hlt
dec
jbe
xchg
dec
dec
sbb
dec
push
xor
mov
dec
inc
and
sub
jb
pop
pusha
cmpsl
inc
inc
dec
dec
xchg
lret
in
push
jecxz
push
push
cs
xchg
lcall
mov
mov
in
repnz
fsubl
xchg
iret
lret
dec
clc
cld
add
lahf
sbb
xchg
lret
and
xchg
lods
inc
ds
push
das
mov
mov
push
or
push
sub
mov
sub
sub
mov
notl
pop
jl
out
mov
andb
mov
sbb
push
or
jno
test
movsb
inc
loopne
lret
in
inc
add
sub
push
sub
push
sub
or
cs
cmpsl
inc
in
dec
gs
jle
dec
push
mov
cmp
lret
std
dec
inc
mov
lods
mov
xchg
lret
or
aam
pop
dec
sub
push
dec
hlt
clc
cld
push
mov
sahf
inc
sbb
push
and
cmp
inc
inc
gs
mov
push
push
sub
xchg
dec
push
dec
jne
push
push
enter
in
cs
push
push
mulb
or
inc
je
jl
repz
xchg
push
fcoms
sub
mov
repnz
and
and
sub
push
add
or
fcmovnb
inc
pushf
adcb
cmp
xor
fs
dec
stc
push
sahf
shr
push
pop
dec
cmp
test
in
js
xchg
push
fnstsw
dec
jns
es
push
jbe
xlat
sub
in
inc
mov
mov
push
adc
sub
pop
cmp
push
sub
sbb
pop
aaa
cmp
pop
dec
cmp
cwtl
jp
pop
aaa
or
cmp
push
ret
push
lret
or
lret
dec
gs
ja
movsb
test
daa
iret
xchg
lods
pop
xchg
inc
enter
cmp
hlt
ret
adc
mov
xchg
and
fs
cs
lret
fsub
es
mov
push
cld
add
or
test
movsb
mov
and
push
xor
pushfw
lods
repnz
push
sub
ror
test
je
test
push
pop
in
test
mov
and
jns
fsubs
cld
adc
add
cmp
les
out
push
or
push
fimull
push
push
push
xor
xchg
lret
dec
pop
pop
pusha
jo
inc
mov
push
push
xchg
test
pop
dec
movsb
test
fwait
lods
push
cs
xchg
xchg
mov
cmpsl
enter
xchg
dec
rcl
lcall
in
lock
and
xor
adcb
adc
dec
sahf
lahf
push
loopne
inc
xor
jb
cmp
xor
lahf
xchg
subb
test
xchg
out
inc
push
push
or
test
sti
ds
fs
push
repz
push
inc
push
xor
mov
sub
insl
sbb
push
aaa
enter
je
cmp
inc
push
dec
pop
out
cs
insb
pusha
fs
sub
dec
movsl
sbb
dec
push
push
pop
stc
and
movsb
sbb
in
enter
push
push
fsts
push
push
outsb
push
xor
mov
or
adc
sbb
dec
cs
lret
xor
scas
pop
pop
clc
jge
je
imul
pop
cli
push
aaa
gs
sbb
pushf
jnp
rorb
cmpsb
loopne
test
inc
cmp
adc
dec
loope
dec
cmp
test
mov
xchg
dec
in
cmp
rcr
xor
sbb
cld
xor
loopne
fs
sbb
adc
cmp
subl
inc
sub
pop
pop
pusha
push
push
cmpb
bnd
movsb
test
mov
enter
enter
mov
stc
loop
xchg
push
push
notb
inc
aad
out
cmp
add
or
push
jg
movsb
sbb
push
push
push
cmpsb
pop
mov
push
push
jns
dec
in
push
jo
js
pop
sub
mov
mov
mov
in
fwait
lret
cmp
pop
pop
je
fsts
inc
pop
pop
pop
stc
fimuls
pop
adc
xor
clc
sbb
pop
jo
push
or
push
or
lcall
repnz
dec
adcl
xor
jl
sub
cmpl
add
mov
add
in
mov
or
hlt
jl
jae
andb
arpl
in
fstl
imul
pop
or
daa
xor
cmp
push
mov
test
pop
cmpsl
je
pop
pop
push
inc
pop
das
sub
inc
insb
jo
movsl
je
xor
sbb
pop
pop
arpl
scas
pop
outsb
xchg
fbstp
inc
mov
cmp
fsub
out
outsb
sub
lods
gs
pop
pop
les
jae
sbb
pop
pop
in
fwait
inc
sahf
fwait
lret
pop
pop
inc
sub
dec
fsts
pop
xor
xor
loope
mov
or
xor
pusha
nop
sbbb
das
dec
pop
xor
inc
mov
cmp
les
iret
push
test
in
daa
lock
pop
or
rcll
cmp
hlt
add
pop
xor
cmp
pop
push
sbb
out
into
repz
xorl
cmpb
xor
mov
sbb
mov
daa
xchg
or
inc
outsb
aam
cmp
push
fcoml
cmp
jle
sbb
and
movsb
mov
and
jo
inc
cs
xchg
fisttpll
pop
outsl
fs
pop
insb
mov
imulb
mov
lods
pop
outsb
xchg
pop
shlb
aam
sbb
jb
test
sub
das
scas
sahf
sbb
pop
and
mov
pop
lret
int
mov
pop
or
pop
dec
sub
mov
dec
push
test
sbb
pop
sub
out
cld
adcb
loopne
mov
test
movsb
je
xchg
iret
add
pop
or
mov
cmp
repnz
xor
ss
lret
and
or
push
mov
cmp
jno
fs
mov
adc
call
dec
sub
mov
mov
xchg
jbe
fs
and
lock
inc
test
pop
fisubrs
mov
cmp
pop
repnz
jmp
int3
fldl
in
repnz
jno
pop
rcl
sub
int
pusha
adc
mov
or
addb
pop
sub
pusha
pop
insb
fldl2t
jae
daa
jo
dec
adc
pop
enter
xchg
xor
cmp
fdivrs
mov
jg
gs
hlt
clc
aaa
or
cmp
xchg
aam
sbb
pop
sub
inc
mov
pop
aas
push
mov
mov
je
sti
jo
test
ja
je
sub
pop
lahf
inc
test
int3
fldt
in
mov
pop
popa
clc
cld
inc
push
and
adc
pop
sbb
jbe
pop
pop
and
test
xor
cmp
pushf
push
pop
pop
mov
jl
in
cmp
xchg
xchg
outsb
push
dec
ffreep
enter
xchg
fst
inc
cmp
call
loope
pop
lods
aaa
mov
test
sahf
shl
pop
xor
rcl
cs
fwait
jl
fdivrs
sbb
sahf
lret
xor
cld
jle
sbb
in
xor
pop
cmp
pop
xor
pop
sahf
dec
fsubl
push
jo
test
mov
mov
ja
cs
jl
ret
cmp
cmp
pop
adc
pop
mov
xor
mov
ret
pop
pop
jge
pop
fs
roll
js
and
iret
xchg
mov
rcrl
mov
jge
or
in
stc
cmp
fcomps
add
pop
mov
add
adc
xchg
out
out
mov
and
cmp
jl
jle
cmp
jae
aas
dec
inc
in
pop
sahf
out
pop
pop
insb
sub
or
aaa
nop
adc
ja
cs
test
mov
enter
jl
int3
or
xor
in
jge
stc
mov
or
aaa
cld
fdivrl
jo
cmpsl
pop
pop
or
pop
adc
into
sti
sbb
cmp
inc
xor
push
popf
cmp
fsubrs
adc
inc
je
gs
fsubl
pushf
dec
les
cs
pop
mov
in
mov
pusha
mov
pop
sub
adc
xchg
xchg
out
cmp
imul
gs
pop
mov
dec
xchg
lret
and
cmp
mov
jb
cld
xchg
cwtl
mov
mov
repnz
test
adcb
mov
mov
xor
dec
in
enter
iret
movsl
push
mov
cld
push
ds
xchg
jl
pusha
adc
pusha
sbb
cs
ja
aam
pop
inc
mov
iret
in
pop
fs
js
je
jb
cs
cmp
lods
out
shl
cmp
jmp
mov
cmp
loopne
in
in
jns
sbb
popa
add
insb
out
daa
xchg
xchg
dec
push
dec
sahf
sub
mov
jo
mov
pushf
push
nop
xchg
mov
fstl
cmp
popa
add
xchg
fisttpll
pop
aas
fcomp
and
sbbl
inc
call
or
sub
in
xchg
cmp
xor
push
sbb
int
add
in
adc
rorb
cld
jnp
sub
popa
mulb
lret
in
xor
push
push
pop
mov
jns
pusha
int3
je
js
xlat
pop
sahf
outsl
xor
cwtl
popa
pushf
loope
xchg
ja
mov
pop
int3
jl
in
mov
in
call
cmc
bnd
jmp
or
insb
cmp
bound
dec
ficoms
and
dec
bound
push
bound
inc
insb
pop
cmp
nop
xor
mov
mov
adc
sub
xchg
xchg
fadds
clc
cld
jl
sub
sbb
mov
and
inc
lret
push
clc
daa
inc
fsubrl
sub
pop
jns
bswap
cmp
pop
pop
inc
out
mov
jo
je
aaa
cmpb
cwtl
pushf
movsb
out
jl
in
mov
mov
cld
jp
add
nop
dec
bound
call
lods
jl
arpl
arpl
arpl
sbb
test
xor
dec
in
rorb
je
xchg
out
lods
insb
jo
repz
mov
mov
pushf
push
push
enter
pop
mov
jb
hlt
clc
out
ja
fs
repnz
test
lret
fidivs
fs
jp
xchg
xchg
xchg
test
push
dec
sub
xchg
jl
rolb
pop
cmpsl
loopne
lock
push
push
sub
mov
sbb
les
iret
and
call
cs
add
mov
sbb
fs
push
test
jns
dec
lret
in
push
in
cs
and
mov
mov
mov
enter
mov
rolb
lret
movsb
aam
faddl
in
jo
in
mov
fs
sub
gs
mov
repnz
jns
movsb
bound
inc
cmp
pop
imul
ja
mov
pop
inc
xor
cmovs
jnp
and
xor
push
imul
push
lahf
addr16
push
jae
cmpsl
imul
add
gs
dec
ja
sbb
or
or
mov
jns
inc
or
mov
sub
sub
sbb
jnp
jns
cwtl
add
jl
out
mov
mov
mov
lret
in
rcl
fsub
shl
jb
pop
lock
clc
cld
xchg
xchg
xchg
out
mov
sbb
mov
and
test
jae
js
bound
dec
pop
sub
fs
jo
sarb
idivb
test
pop
mov
or
jne
pop
fldcw
iret
xchg
cwtl
jp
lret
dec
test
lods
pop
andb
or
add
daa
cmc
dec
dec
leave
add
movsb
fmull
sub
jg
mov
jge
pop
imul
xchg
mov
mov
push
and
movswl
or
dec
or
mov
aad
pusha
push
push
adc
inc
data16
or
inc
lea
dec
sub
repz
int
mov
daa
dec
dec
sbb
popl
inc
sub
mov
lret
mov
pop
in
pop
clc
cmp
adc
clc
bnd
cs
leave
cli
sbb
cmc
je
jecxz
fcmovnb
add
inc
cmp
loopne
mov
fwait
cltd
lcall
add
xchg
inc
or
in
dec
jp
adc
call
sbb
cmp
in
das
sbb
sub
or
xor
mov
dec
pop
cmp
adc
jmp
jne
jae
mov
and
cmc
mov
in
jo
mov
pop
or
gs
lods
cld
repnz
jbe
pusha
inc
adcl
mov
in
dec
test
mov
loopne
decl
sub
ret
je
hlt
adc
add
cmp
or
sti
push
pushf
cmp
je
push
adc
jb
neg
jnp
mov
or
xor
int3
cmp
pop
xchg
loop
je
or
repz
inc
inc
sub
add
push
insb
mov
ret
fisttps
and
ja
xor
sbbl
adc
xor
inc
stos
xor
dec
push
nop
push
cmpsb
pop
xchg
pop
jns,pn
jnp
lcall
push
push
xchg
jg
mov
cmp
out
push
mov
jmp
adcb
pushl
lock
mov
test
rorl
out
adc
int
mov
or
dec
lret
insb
cs
or
inc
icebp
adc
or
mov
es
push
jmp
icebp
ficompl
inc
xchg
xor
mov
xchg
mov
push
pop
sbb
dec
xor
jbe
xor
sbb
repz
inc
fadds
cmp
add
out
lea
test
lock
sub
xchg
jne
jo
shl
mov
jns
push
das
fst
jle
adc
loopne
loopne
ja
scas
xor
mov
inc
repnz
adc
movzwl
xchg
push
je
sub
lds
cmp
gs
mov
sbb
out
cmp
push
push
mov
inc
xor
sub
imul
fcoml
loopne
push
adc
stc
push
sbb
xchg
inc
ss
pop
mov
orb
add
add
imul
dec
or
ljmp
fdivrl
cwtl
hlt
xor
xchg
push
cvtps2pi
fcompl
fstpl
in
dec
movsl
xor
sahf
cwtl
add
js
sub
lods
js
ficomps
lret
in
adc
and
and
inc
cmp
test
push
and
push
into
repz
cmpsl
mov
cmpsl
shl
cmpb
nop
adc
push
jnp
add
stc
mov
mov
sbb
mov
push
sahf
jl
mov
cmpb
jge
es
sbb
inc
fwait
xor
fcomp
jne,pt
adc
test
out
cmp
or
mov
dec
dec
add
pop
and
push
call
dec
shlb
sarb
cmpl
into
daa
clc
or
cwtl
xchg
dec
xchg
lret
cmp
xchg
jnp
mov
mov
dec
sarl
test
dec
scas
inc
or
orb
test
jle
clc
mov
pop
xchg
aaa
mov
or
lock
add
cs
mov
push
popf
jbe
mov
movl
or
jmp
cmpsl
addl
xor
loope
sub
imul
push
push
mov
int3
jne
ret
push
clc
sbb
mov
in
add
xchg
outsl
add
pop
fs
push
jae
sbb
xchg
repnz
push
push
xor
popf
mov
ret
push
ja
ljmp
pop
inc
add
sbb
test
xlat
xor
daa
pop
loopne
inc
popa
aaa
orb
test
leave
pop
andb
cmpl
inc
add
xor
popa
movsl
test
sarl
lea
shr
adc
xchg
pusha
mov
pop
imul
subl
or
and
ja
cmp
xchg
inc
loope
loopne
and
aad
or
out
add
mov
pop
aad
rolb
adc
dec
out
lock
std
mov
or
adc
mov
mov
sbb
andb
clc
add
data16
cmp
jb
cmp
and
mov
inc
shrb
add
mov
add
js
loopne
xor
pop
push
mov
jl
stc
sbb
and
mov
xor
ljmp
es
test
test
cld
fsubr
mov
dec
xchg
div
test
or
mov
mov
mov
push
loopne
lods
dec
cmpsl
fstps
sbbl
pushf
scas
lret
fimull
jecxz
sbb
in
or
mov
dec
mov
xor
mov
mov
push
push
sbb
sti
xchg
jno
add
xchg
stc
push
add
add
int3
cmp
es
or
mov
mov
sbb
sub
rorl
mov
push
xor
cmp
inc
or
add
mov
sub
cmp
sub
or
or
xor
movsl
fstpl
shrl
lock
out
xor
movsb
xor
fstpt
push
addb
jb
mov
and
outsb
fwait
and
push
add
pop
mov
es
xor
rcr
or
orb
adc
cmp
cmp
push
cmpsl
lock
push
jmp
push
in
cmp
sbb
call
pushf
dec
add
ds
test
push
mov
sbb
mov
adc
jl
add
sub
or
js
or
add
sbb
mov
push
xchg
inc
add
sahf
scas
adc
sub
stos
popa
mov
dec
xor
pop
cmp
cld
sahf
notl
push
cmp
fs
push
add
insb
jo
xor
ljmp
sbb
negl
dec
cli
sbbl
add
in
sub
out
jmp
cmp
jo
push
into
and
sbbl
push
loopne
shr
les
push
mov
mov
je
pop
xor
jae
popl
movsb
add
movsb
adc
stos
xchg
adc
scas
add
stos
das
or
push
ljmp
add
mov
xor
xor
sub
cmp
outsl
movsl
inc
pop
sti
sub
je
ss
adc
lahf
insb
jo
lock
jnp
cs
cmp
data16
test
push
cld
add
inc
mov
inc
jmp
sub
bound
inc
test
xchg
push
pop
fmul
xchg
xor
xor
adc
cmp
stc
inc
mov
or
and
cmpsl
push
call
jae
ss
insl
andl
int3
insb
js
loopne
sub
mov
cmp
or
mov
push
push
cmp
inc
mov
jo
cld
push
sbb
sbb
adc
outsb
sbb
insb
pop
dec
add
addl
outsl
mov
xor
je
ds
xchg
lock
cmp
mov
sbb
dec
or
lea
cmp
outsb
sub
jnp
pushf
data16
or
jne
dec
adc
nop
cmpb
loope,pt
orb
mov
inc
mov
je
enter
lahf
test
aaa
mov
js
mov
cmp
in
adc
popa
cmp
outsb
mov
mov
rol
sbb
loopne
inc
clc
mov
cwtl
sbb
cmp
cmpsl
fnstenv
inc
movsl
cmp
loopne
xlat
add
orb
cmp
add
out
mov
sarb
repnz
push
lahf
out
add
xor
or
rcll
data16
out
jns
push
or
cmp
cmp
lea
or
and
sub
mov
push
xchg
ret
hlt
ss
mov
and
adc
repnz
mov
jg
mov
mov
add
pop
push
add
cmp
dec
mov
shlb
loop
sbb
in
xor
cmp
adc
xor
int
orb
dec
mov
mov
jo
push
fidivs
fisttpll
dec
mov
in
cmp
jb
lret
or
inc
or
lahf
test
inc
xchg
adc
adc
imul
nop
loopne
popf
iret
lds
cltd
out
cs
test
aam
sbb
fcoms
xorb
push
push
cmp
repz
js
sbb
sbb
adc
adc
outsb
and
orl
push
lret
push
dec
sar
push
pusha
and
jnp
addl
adc
add
test
cmp
je
hlt
sbb
xlat
lea
mov
cmp
pop
pop
or
shrl
inc
mov
adc
xorl
sub
xchg
shll
rcl
mov
sub
jp
dec
or
cltd
mov
stos
cmp
xchg
test
movsb
push
dec
xchg
adc
cmc
inc
push
xchg
dec
rdpmc
push
nop
arpl
mov
mov
add
xor
idiv
adc
ss
jecxz
mov
out
cmp
ds
pushf
sub
out
sti
cmp
psubd
rdseed
cmpsb
ret
mov
push
add
cmp
xchg
cmp
in
testl
xchg
jle
outsb
inc
gs
mov
test
push
dec
mov
inc
jl
dec
jmp
push
push
inc
push
mov
or
dec
xor
xor
enter
cld
sub
lret
push
push
jo
inc
sub
aad
inc
jae
adc
adc
pusha
jnp
xor
inc
dec
adc
add
stos
cmpsl
cmp
add
jle
jmp
push
fstpt
mov
jmp
mov
dec
clc
ret
xchg
scas
add
inc
mov
loope
and
or
lods
mov
cwtl
cltd
lea
mov
cmpsb
rcrl
mov
xor
test
pop
cmpl
mov
mov
jo
inc
push
cmp
adc
shrb
or
adc
adc
cmpsb
xor
sub
and
push
cmp
xchg
add
sahf
insb
lea
add
dec
jge
adc
dec
adc
cmp
fdivrs
aas
inc
and
mov
cmp
movb
out
dec
adc
cmp
das
jo
pop
pop
outsl
jne
adc
fimuls
lea
and
jb
dec
test
aas
aaa
imul
inc
cli
inc
popa
fildl
sahf
adc
jns
pop
daa
cmp
scas
cltd
inc
inc
wrmsr
push
cmp
or
or
push
sbb
lods
mov
adc
inc
into
repz
mov
sbb
lret
outsb
les
inc
fidivl
arpl
dec
cmp
leave
dec
ss
sub
pop
and
ret
cmp
cmp
repnz
cmp
cmp
cmp
nop
pop
or
and
mov
loopne
sub
call
xor
das
in
cmc
or
dec
sbb
sbb
xor
lock
loopne
dec
adc
or
fwait
mov
cmp
add
lock
mov
daa
inc
ljmp
movb
or
cmpsb
mov
jmp
lea
lea
jb
ja
cmp
je
and
aaa
loopne
xchg
orl
cmp
jg
xchg
aaa
andb
xor
pusha
js
call
pop
loopne
decl
ja
sub
xor
and
and
out
addr16
lret
or
or
add
fnstcw
push
cmpsl
cld
es
popf
pusha
sbb
cmp
dec
lds
jne
cmp
outsb
mov
lcall
dec
scas
cmp
add
scas
cmp
cmp
cmp
cmp
sub
and
push
pop
mov
pop
jmp
pop
or
mov
xor
out
and
jno
jo
mov
push
xlat
ret
in
pop
or
das
xor
or
and
rcrb
pop
repnz
or
pop
cmp
cmpl
orl
lods
rolb
push
mov
add
or
xchg
pop
sti
xor
into
and
xchg
out
add
adc
ljmp
cmp
adc
out
sbb
inc
pop
sub
jns
in
push
cmp
xchg
nop
cmp
inc
out
scas
pusha
mov
stc
jbe
rorb
push
and
jb
aam
push
inc
test
lcall
movl
jle
rcrb
push
cmp
repnz
cmp
cmp
fisttps
stos
cmp
mov
xor
adc
out
mov
lds
add
fiadds
clc
sbb
lock
mov
lods
and
add
ds
leave
mov
or
notl
and
into
sub
pop
call
xor
and
push
jb
and
call
xchg
clc
sarb
add
push
push
sub
cltd
cli
cld
jg
clc
movsb
lea
adc
pop
mov
cmp
repz
add
push
imul
scas
cld
push
add
mov
jne
xchg
movsbl
fidivrs
xchg
adc
sbb
dec
adc
or
cmp
push
adc
or
fcomp
sbb
adc
or
or
cs
cmp
or
sbb
stos
fisubrl
pop
jmp
ljmp
stos
pop
stos
pop
cmp
add
je
mov
in
push
ss
adc
jl
lds
inc
jge
or
push
dec
shrb
test
test
jbe
mov
mov
imul
movzbl
jnp
dec
lds
xor
inc
add
out
add
pop
inc
xchg
cmp
stos
ret
push
jmp
movsl
and
jbe
push
out
scas
lods
cmp
les
js
ja
sbb
inc
and
pushf
ret
cmp
inc
dec
inc
pop
and
mov
push
or
sub
or
inc
dec
pop
addr16
push
clc
xchg
add
inc
mov
xor
sbb
inc
adc
inc
inc
xor
in
inc
pop
inc
bound
fcoml
mov
sbbb
jne
xchg
jno
adc
shrb
lahf
jne
mov
andb
cmpb
add
inc
sbb
jge
clc
or
adc
adc
pop
push
sbb
repnz
add
cmp
lcall
cmp
cmp
jo
mov
fimuls
scas
jp
enter
cmpsb
aas
mov
int3
aas
sbbl
fdivrl
jecxz
cld
aas
mov
and
aam
addl
xor
fiadds
pop
or
test
push
xchg
inc
jo
dec
sub
dec
cmp
sbb
or
push
push
push
adc
iret
stos
sti
push
ja
sub
icebp
jne
fwait
mov
popf
int3
inc
mov
pushf
adc
ucomiss
xor
sbb
mov
add
dec
cwtl
mov
bound
stos
pop
mov
repnz
int3
xchg
sahf
push
jb
or
pop
mov
outsb
insl
mov
xor
mov
add
jecxz
mov
inc
xor
pop
ja
pop
push
and
lods
fisubl
dec
push
mov
mov
add
pop
push
inc
lock
test
ds
dec
mov
test
inc
nop
movsb
loopne
clc
jecxz
push
push
insb
or
out
and
add
ljmp
pop
or
and
push
xchg
je
cmp
ficomps
sub
push
popa
adc
inc
push
lock
roll
sub
or
les
xchg
add
sbb
or
movsl
or
pop
subl
push
sahf
mov
cmp
scas
cld
insl
push
push
aam
push
and
mov
imul
jl
lock
add
in
xor
iret
pop
inc
jo
stos
ret
adc
fsubr
lock
add
pop
and
mov
testl
repz
jl
aam
jl
loop
jle
inc
lea
pop
add
imul
or
ljmp
ds
mov
sahf
inc
ret
mov
out
lods
mov
jmp
fidivs
adc
xchg
xchg
inc
rclb
or
shll
fwait
jb
fildl
add
add
scas
push
lcall
imul
pop
repz
je
dec
shlb
xlat
insb
dec
out
add
call
sahf
push
iret
ljmp
mov
ss
out
jns
lods
mov
push
sbb
fidivrs
push
movsb
ds
push
adc
pop
add
pop
pop
add
add
push
pop
or
mov
movups
adc
adc
adc
jbe
orb
mov
mov
xor
orb
and
lods
pop
cmp
jmp
inc
push
mov
nop
cmp
shrb
cmpsl
inc
mov
sub
add
jbe
push
mov
xor
lock
fiadds
or
scas
sub
mov
inc
scas
push
inc
mov
in
xchg
push
iret
push
fcoml
push
repz
add
dec
dec
das
sub
add
int3
or
sub
xchg
or
test
gs
pop
or
inc
adc
sbb
lods
and
mov
jo
jp
adc
dec
pop
cmp
nop
gs
testl
je
jns
xchg
sbb
fiaddl
mov
nop
xor
movb
mov
jmp
sub
es
pop
mov
push
inc
jne
xchg
sbb
or
xor
xchg
xchg
dec
mov
push
sub
out
push
sbb
add
and
das
repz
mov
xchg
push
lock
dec
add
fnsave
in
dec
mov
adc
out
sti
add
aas
fld
fnsave
shl
mov
pop
test
aam
push
add
pop
ss
dec
fstp
fildl
fcompp
fnstsw
test
mov
in
sbb
and
outsb
add
mov
enter
dec
pop
push
dec
ss
add
inc
out
js
mov
mov
push
pop
mov
dec
push
in
xchg
inc
loop
push
je
adcb
xor
push
xchg
dec
stc
ret
add
aas
scas
inc
push
push
dec
mov
scas
dec
mov
jl
dec
mov
jmp
loope
leave
testl
testw
inc
inc
sub
mov
loop
adc
mov
bound
mov
sbb
add
add
fcomps
sub
push
sbb
mov
mov
push
mov
pop
xchg
in
sarl
add
push
or
or
jge
ds
repz
adc
xor
fldenv
mov
jp
inc
mov
or
or
xchg
repnz
pop
cmc
lods
add
pop
jle
add
aam
add
mov
jne
dec
sahf
jl
jp
mov
inc
dec
pop
das
roll
in
push
jp
stc
movsl
inc
mov
pop
jne
inc
imul
inc
or
cmp
aaa
je
daa
sbb
push
test
push
mov
jg
dec
inc
fcompl
and
or
enter
fisttps
push
and
icebp
mov
xor
jl
cmp
jne
imul
lea
cltd
mov
mov
cltd
add
adc
jg
xchg
add
jg
fcmovb
int
rcrl
js
outsl
or
add
scas
mov
pop
jbe
push
adc
fisttpll
sub
mov
push
xor
or
and
mov
call
mov
mov
mov
add
mov
test
es
xor
push
jo
sbb
out
inc
or
out
out
or
push
xchg
rcl
mov
pop
jmp
mov
or
jl
movsb
dec
add
push
cmp
orl
mov
pop
lcall
sbb
or
emms
inc
ss
cmc
mov
test
mov
adc
sbb
sub
imul
icebp
scas
insb
mov
adc
cwtl
test
push
add
stc
mov
repnz
xor
mov
sub
stos
add
es
adc
push
adc
test
aas
add
cmp
cmpl
adc
dec
fcmovnb
cmp
or
sub
add
enter
mov
xor
jb
jge
or
xchg
test
xlat
pop
cmpl
mov
movsl
into
pcmpeqw
xchg
nop
fwait
rol
push
testl
xorb
inc
insb
das
in
push
sbb
movb
cmpsl
inc
shrl
fs
push
movsl
mov
cmpsb
and
std
cmpsl
or
or
notl
mov
xchg
jne
popl
add
test
mov
ds
test
cmpsl
insl
incl
in
inc
add
push
push
ds
repz
test
dec
xor
xlat
push
dec
push
ljmp
mov
cmp
je
cmpb
jne
or
insl
cli
jg
adc
mov
pop
decl
pop
ret
mov
xchg
aas
jno
push
test
inc
or
push
outsb
push
jmp
fisttps
sub
inc
and
js
pushf
pop
ret
idivb
les
mov
mov
adc
xor
cmp
test
adc
out
xorl
mov
mov
push
mov
xlat
dec
mov
lcall
idivl
das
push
mov
jns
pop
addl
push
inc
pop
cmp
push
test
inc
xor
push
push
or
or
pop
add
fmuls
jno
mov
push
jo
and
arpl
xchg
push
push
jle
mov
push
filds
loope
jmp
xchg
adc
xchg
std
or
fs
fsubl
fldz
or
call
scas
xchg
lods
sub
push
mov
mull
inc
subl
leave
inc
sub
or
stos
leave
or
ds
cmp
lahf
es
pushf
or
cmp
jmp
add
mov
mov
mov
or
hlt
notb
adc
push
scas
shrl
jecxz
push
jae
test
mov
lfs
sbb
stos
imul
imul
inc
rorl
cltd
ss
jecxz
rorl
test
jecxz
imul
lret
cmpb
call
loopne
inc
jae
jg
int
mov
cs
push
lods
daa
add
add
mov
fistps
push
push
call
mov
lods
xchg
movsb
fs
or
movb
ds
pop
cmp
cmp
test
lret
cwtl
cmp
or
push
or
and
or
mov
mov
faddl
aam
daa
adc
pop
add
dec
fadds
dec
add
jg
mov
cmp
jb
lock
and
loope
mov
bndstx
adc
xchg
jp
loope
fildl
push
cmp
lods
ret
hlt
negb
or
sbb
rclb
ret
dec
or
and
clc
dec
or
mov
test
xchg
test
rorb
xchg
lock
shll
push
inc
test
xor
xchg
jmp
cmpsb
jae
int3
test
inc
or
jp
lds
sbb
aam
mov
test
and
inc
jmp
mov
lea
sub
inc
loope
ret
add
das
cmp
jo
push
loope
jno
cmp
popf
arpl
mov
inc
cmp
pop
mov
mov
mov
push
ds
add
mov
inc
xchg
test
cwtl
cwtl
jg
adc
push
incl
lret
decl
lcall
inc
es
imul
orb
inc
xchg
mov
jnp
mov
jbe
cli
inc
jge
inc
fs
movsb
inc
je
scas
pop
or
adc
sbb
inc
orb
pusha
xor
das
dec
cld
and
aaa
jne
xor
dec
pop
mov
call
das
pop
adc
ret
xor
mov
push
inc
scas
inc
cmp
sbb
je
test
mov
push
inc
or
dec
pop
or
pop
icebp
ja
ja
adcb
add
cmp
nop
shlb
pop
loopne
mov
decb
movl
push
mov
dec
loop
lret
xor
inc
andnps
fisttpl
push
das
stos
cmp
inc
jg
mov
jne
cmp
pop
mov
imul
pop
les
inc
bound
loope
mov
rolb
rcll
and
ss
push
xor
ds
jmp
sbb
and
adc
mov
das
adc
lods
inc
lods
push
jle
adc
pop
dec
add
add
or
mov
mov
mov
rol
fdiv
cs
adc
adc
movsb
rolb
xorl
fwait
inc
mov
cmp
or
mov
or
fsubl
adc
mov
mov
adc
pop
call
dec
xor
test
cmp
inc
xchg
jbe
ljmp
and
sbb
lea
popa
and
adc
divl
int
cmp
xchg
xchg
or
cs
lret
dec
dec
push
push
pop
push
and
mov
jl
mov
add
addl
jne
sbb
dec
ret
xlat
mov
orb
rcll
aas
cmp
inc
lods
mov
movsl
and
push
test
mov
sbb
addb
cld
push
pop
xor
mov
adc
dec
out
cmpb
push
fs
cmpsb
xor
or
shrb
mov
xor
ret
push
es
std
sti
es
dec
dec
jnp
pop
and
jno
or
dec
inc
sbb
jbe
roll
push
dec
mov
or
inc
inc
dec
je
pop
js
lret
pop
data16
imul
clc
fisttps
inc
mov
lods
movsb
mov
in
sub
sbb
clc
es
insl
shrb
lahf
or
push
sub
or
fisttps
xor
orb
add
test
mov
sarb
or
xor
les
or
jl
test
dec
add
mov
pop
xlat
mov
sub
into
ds
sbb
sarb
lods
pushf
rorl
fsubrp
ljmp
aam
adc
daa
jo
add
hlt
push
arpl
in
clc
jge
sbb
sbb
push
addr16
inc
mov
outsb
fildl
sahf
add
cli
and
fstpl
repnz
fmull
push
js
cmp
popf
xlat
scas
cltd
lea
mov
fmulp
xor
add
leave
lea
cmp
adc
or
adcb
mov
rorb
mov
jge
push
int3
and
adc
test
in
je
movsb
jo
out
lea
stos
push
adc
rol
jge
pop
call
dec
test
fisttps
mov
cmp
ljmp
jg
mov
stc
inc
mov
adc
in
or
mov
pop
adc
int3
insb
mov
pop
push
adc
and
sbb
test
scas
clc
cld
mov
cmp
call
aad
xchg
lret
in
or
dec
dec
push
jnp
pop
cs
pop
pop
pusha
orb
mov
xchg
mov
stc
mov
mov
jb
ja
addr16
pushf
mov
movsb
aaa
test
mov
cs
inc
cs
pop
xchg
mov
aam
pop
push
fdivrs
divl
mov
addb
aas
xlat
stos
or
push
dec
ret
dec
mov
aas
xchg
mov
jl
push
fxam
repnz
pop
push
fidivl
cmp
sub
add
sub
and
inc
aam
xor
lock
fldt
je
jge
or
xchg
lret
in
adc
adc
repz
mov
or
add
sub
mov
push
pusha
insb
and
cmp
cmp
std
push
sbb
sub
xchg
pop
cmp
cmp
pop
mov
push
lds
jbe
adc
sahf
or
or
lahf
xchg
rolb
cmpb
std
dec
cmp
ja
dec
push
fisubs
repnz
mov
loopne
mov
mov
shll
data16
add
ja
add
shrb
clc
sbb
mov
call
push
push
push
dec
sarb
jbe
je
mov
mov
rclb
ret
inc
jp
bound
jae
imul
lods
jne
mov
xchg
ffree
fists
outsb
mov
stc
ret
or
sbb
xor
or
stc
dec
lea
insb
adc
int
fdivrl
cmp
xor
inc
push
mov
ret
adc
inc
adc
in
inc
adc
xor
mov
add
cltd
cwtl
adc
les
aam
sub
push
je
mov
ret
cmp
add
or
inc
and
hlt
rorl
xchg
shlb
mov
xchg
mov
cmp
cwtl
jp
pusha
push
dec
mov
push
push
mov
mov
pusha
movsl
out
add
jo
adc
mov
pop
jle
jp
mov
movb
cmp
dec
insb
test
sbb
mov
jp
push
mov
arpl
xchg
inc
inc
jnp
mov
push
call
mov
pop
aaa
pop
mov
pop
ljmp
loopne
mov
je
lcall
xchg
jo
jp
mov
push
inc
inc
cmp
dec
jecxz
push
mov
pushf
jbe
clc
js
jne
out
mov
mov
stos
sti
adc
sub
pushl
sbb
inc
call
popf
rorb
dec
jl
add
adc
fcomp
ret
sub
xor
mov
xchg
lahf
mov
sarb
arpl
jno
movsl
and
jecxz
sbb
mov
push
push
test
filds
mov
adc
cs
pop
and
or
cs
ret
jns
or
pop
dec
pusha
pop
dec
pop
imul
popf
jb
sahf
mov
sub
je
pop
sbb
xchg
js
push
jnp
cmpb
test
repnz
push
adc
lcall
or
xor
add
insl
sbb
negb
pop
xchg
lock
pop
or
mov
stc
lock
sub
loop
sub
das
xchg
xorb
ljmp
pop
loop
cmp
cli
inc
jo
mov
lods
shl
popa
mov
out
clc
jno
movl
mov
stos
or
or
insb
jp
aad
sbb
mov
add
push
jge
fdivrs
mov
xchg
rcl
fisttpll
add
insl
hlt
pop
ror
inc
jge
mov
and
jecxz
or
shr
mov
fs
mov
insb
or
xchg
or
jecxz
icebp
fadds
add
jecxz
push
cltd
idivl
aas
and
scas
rolb
repnz
lock
xchg
push
xchg
or
cmpl
adc
and
rolb
or
pop
xor
pop
cmp
mov
sarb
popa
xorl
inc
sub
push
lret
dec
jae
push
adc
mov
xor
sbb
repnz
pop
inc
mov
mov
inc
or
ret
jne
into
inc
dec
mov
loop
fs
mov
sysexit
mov
stos
sahf
inc
dec
in
jmp
ljmp
popf
inc
or
jns
adcb
cmp
add
add
jmp
sub
push
rolb
adc
mov
or
les
sbb
xchg
sbb
adc
xor
rolb
clc
inc
inc
fsts
test
jne
xchg
scas
push
dec
push
push
sbb
push
lea
mov
mov
ret
push
xchg
int3
das
push
lea
arpl
leave
and
xor
adc
lods
push
inc
push
xor
out
mov
push
mov
add
dec
jo
jecxz
jbe
mov
add
and
mov
mov
cmp
pop
sub
mov
inc
adc
insb
inc
popa
out
je
mov
adc
mov
xor
or
mov
sub
push
sbb
js
adcb
out
pop
fidivrl
fstps
clc
add
lods
jmp
cmpsb
lret
mov
pop
cli
lea
gs
push
pop
mull
pop
dec
rcll
mov
and
sub
xor
shr
aaa
cmp
inc
cmp
sub
movsb
cmp
mov
adc
mov
mov
mov
sahf
movsl
push
nop
icebp
mov
push
pop
and
mov
jno
mov
xchg
or
push
adc
data16
clc
sbb
or
pop
imul
push
cwtl
shll
call
sarl
jg
call
or
push
sar
mov
out
inc
or
sarl
into
jo
push
scas
xchg
enter
enter
and
mov
es
shlb
mov
fs
loop
jne
mov
inc
fwait
and
dec
sbb
dec
cmpl
hlt
daa
mov
test
loope
push
pushf
inc
scas
hlt
cmpl
sub
jl
mov
dec
dec
divl
or
xchg
loopne
mov
ds
clc
mov
cmp
pop
cmp
dec
mov
mov
pop
and
push
xor
sbb
xchg
sahf
inc
pop
xchg
loop
sbb
orb
cmp
stos
ds
dec
xor
jecxz
movsl
cltd
in
mov
push
or
in
insl
popa
test
in
pop
mov
add
mov
or
xchg
icebp
das
sub
andb
out
mov
icebp
in
scas
pop
ja
dec
rep
cmp
mov
incl
fsubrl
mov
sbb
in
cmp
mov
jl
push
jno
test
sbb
cmp
cmpsl
loopne
jp
in
sub
cmp
add
ljmp
test
cmp
mov
pop
mov
jnp
mov
ret
cmp
loopne
testl
sbb
adc
out
lcall
adc
cld
jo
dec
xchg
inc
add
xor
mov
jp
and
ret
lret
stos
fsubrs
mov
pop
mov
push
iret
and
add
cmpsl
lods
and
inc
mov
push
pop
mov
sbb
adc
es
loop
jle
das
outsb
jg
push
add
push
dec
rcll
xchg
add
adc
out
or
pushl
or
add
dec
int
dec
loope
enter
gs
sub
xor
cmpsb
data16
aaa
inc
imul
rorb
mov
xor
xchg
ret
icebp
xor
sbbl
test
leave
je
push
mov
mov
icebp
or
mov
jbe
dec
and
inc
sub
or
mov
xchg
pop
xorb
ds
cmp
ljmp
clc
push
adc
pop
adc
mov
lods
xlat
inc
call
xor
call
rorl
lret
addr16
push
cmpsl
mov
int3
cld
fisttpll
adc
cmp
or
mov
orb
dec
insb
lcall
jl
or
shrb
sub
popf
sub
jl
fs
mov
or
mov
xor
lds
jbe
insb
mov
adc
xchg
push
pop
or
push
push
clc
jge
or
pop
test
in
mov
aam
xlat
push
insl
sub
test
sbb
cmpsl
leave
xlat
xchg
or
xlat
and
pop
insl
imul
jp
and
in
insb
sbb
pushf
loop
jne
and
mov
mov
flds
and
in
sub
cli
sbb
cs
mov
jle
xor
mov
sti
dec
xor
xchg
or
xor
mov
adc
ffreep
hlt
ja
cmovg
insb
mov
dec
push
xchg
and
sbb
adc
xor
sarl
sbb
mov
sub
clc
jno
ret
dec
push
push
mov
or
jle
insb
push
sar
or
add
sti
test
mov
or
or
and
mov
addr16
fadds
adc
shl
xchg
sbb
lea
push
fsubl
lds
push
sar
out
fldl
pop
push
mov
sbb
mov
xchg
adc
mov
add
mov
xchg
mov
cmpsb
lock
lods
and
mov
and
orl
push
or
and
call
or
clc
or
loopne
push
out
pop
xor
or
lea
add
jns
jl
lods
jmp
mov
into
lret
cmp
inc
xor
xchg
dec
in
les
aaa
pop
lahf
sarb
add
pusha
fbstp
jl
fs
movsb
out
mov
das
mov
mov
es
mov
int3
test
mov
xor
jg
jo
jp
int
sub
jne
dec
jp
inc
xchg
mov
mov
lea
xor
out
fsubrp
fisttps
cmp
jle
sub
sub
mov
pop
add
inc
cs
jge
bound
mov
jg
adc
mov
js
add
popa
add
sahf
inc
aas
stos
mov
outsb
mov
pop
sub
ret
add
or
jge
mov
loop
jl
mov
iret
cmpb
mov
xchg
and
pop
or
add
fsubr
jecxz
inc
sub
dec
ret
test
insb
inc
dec
mov
or
stos
test
and
mov
push
test
popa
adc
mov
xchg
add
sbb
mov
mov
jb
cmp
mov
aas
gs
cmpsb
adc
ja
fdecstp
and
jg
pushf
xchg
sti
sub
jne
cmp
xor
lods
mov
inc
andl
add
xorl
stos
push
or
jb
fwait
lret
inc
mov
and
lods
jle
stos
outsl
mov
mov
push
je
out
cli
jg
adc
sub
sbb
cmp
jl
jg
jmp
add
adc
or
push
adc
sbb
cmp
jg
jl
ljmp
sub
cmp
call
adc
dec
cs
add
fwait
push
mov
adc
push
push
mov
push
mov
arpl
sti
jne
cwtl
mov
or
test
push
jns
cmp
ljmp
sbb
sbb
fmul
sbb
push
mov
push
das
orl
inc
sub
xchg
adc
inc
cltd
sub
sub
pop
iret
xor
adc
push
dec
push
sub
cmpl
fiaddl
in
orb
xlat
jge
mov
or
lods
fnsave
hlt
sbb
lret
test
mov
cwtl
xor
fiadds
xor
add
inc
add
pusha
push
test
inc
movsl
mov
push
cmpb
iret
ret
mov
sbb
adc
rcrl
mov
loope
dec
xchg
clc
push
insb
pop
loopne
jl
test
xor
fstl
mov
ja
pop
dec
orb
xchg
cmp
and
push
in
push
cld
sub
or
test
je
ss
fscale
cmp
jl
pop
push
cld
cmpsl
fadds
pop
aaa
mov
mov
fnsave
adc
movl
sahf
add
mov
sbb
mov
dec
push
jmp
or
sbb
enter
or
int3
and
int3
add
inc
fdivrp
dec
jmp
stc
movzbl
mov
adc
dec
adc
push
sbb
popa
aas
add
mov
cmp
mov
pop
jg
fmull
nop
cmp
rcr
cmp
lahf
pop
mov
lea
lret
push
lods
xor
dec
mov
pop
les
dec
cwtl
and
insb
mov
pop
or
shlb
rclb
shlb
push
bswap
aad
mov
jo
push
xchg
sbb
call
sbb
dec
shll
shll
and
dec
daa
sub
mov
fisubrl
mov
inc
sbb
mov
in
aaa
clc
sbb
mov
add
daa
cmp
add
xor
pop
in
push
lds
add
out
xchg
fisubrs
je
add
xchg
or
push
xor
mov
lcall
movsb
rolb
dec
sub
push
cmp
add
out
inc
dec
cmp
sahf
out
sbb
and
and
lret
jl
pushf
pop
push
int
xorb
imul
jecxz
imul
data16
adc
icebp
fs
subb
adc
lock
je
mov
ljmp
xchg
sbbl
adc
rcrl
lods
fucomp
dec
pusha
dec
cmp
adc
dec
enter
dec
inc
lea
je
test
inc
xchg
sbb
mov
adc
adc
sub
and
movsb
sarb
popa
pop
insl
sbb
mov
sub
fisttps
and
mov
xor
sbb
dec
xor
movsl
dec
mov
cmp
xor
lea
mov
mov
cmp
ret
mov
or
lahf
xlat
shl
jg
cs
push
push
push
dec
dec
into
sbb
jl
push
pop
lds
mov
cli
pop
add
pop
sbb
cli
sub
jne
cli
fldenv
test
cmpsb
adc
sbb
cli
mov
push
push
or
xchg
or
xchg
jg
aad
sbb
xor
mov
or
pusha
add
iret
fdivrs
inc
push
adc
mov
and
fsubr
adc
and
xor
jle
push
lea
out
sti
xlat
in
clc
or
push
jns
mov
rolb
mov
push
push
out
jnp
mov
xor
mov
jp
mov
js
bound
insl
push
imul
add
cmpl
pop
fcmovne
int
adc
clc
jbe
jl
dec
inc
or
test
and
push
sub
xchg
scas
cmc
je
and
lods
add
adc
add
jbe
orb
out
jmp
or
or
pop
test
fsubs
cmp
adc
in
mov
sarl
insl
push
push
dec
adc
sbb
xchg
xchg
xchg
les
dec
and
xchg
les
or
ret
push
rolb
push
imul
daa
add
xchg
pop
pop
pop
mov
js
mov
lods
jg
push
xchg
imul
adc
mov
mov
mov
xchg
jecxz
subl
or
add
jne
dec
mov
and
sarb
fadds
jecxz
pop
popf
rorl
adc
shlb
cwtl
cmp
push
xchg
push
push
out
nop
dec
or
xor
jle
pop
mov
xor
push
mov
loop,pt
addr16
je
in
jo
dec
mov
lds
jecxz
and
mov
inc
xor
sbb
dec
jb
cmp
cmp
pop
mov
push
jne
push
push
icebp
mov
orb
in
mov
arpl
add
pop
or
or
sbb
incl
adc
push
pop
mov
mov
sbb
fisubrs
push
imull
punpckhbw
and
adc
lcall
aad
cmp
andb
fiadds
push
filds
dec
aas
test
mov
idivl
std
jne
pop
mov
cmp
je
sbb
in
cmp
lcall
subb
dec
adc
shll
or
adc
int
test
cmp
jbe
cld
push
sbb
movsb
or
adc
gs
jb
lea
pusha
add
in
fmull
push
shrl
mov
fwait
xor
mov
jae
inc
jb
pop
pop
add
inc
jne,pt
cmp
jle
add
loop
mov
xor
cmp
mov
test
sbb
ret
or
lods
lret
and
add
mov
or
push
nop
cwtl
mov
mov
dec
add
ret
fisubl
aaa
shlb
popa
js
imul
mov
adc
out
add
add
pop
xor
mov
adc
ds
imul
fxam
movl
jno
add
adc
test
and
sbb
nop
push
pop
aaa
xor
ret
shll
int
inc
and
adc
fsubrl
jp
mov
imul
les
or
adcl
lods
cmp
inc
pop
push
mov
mov
dec
aas
pushl
mov
fidivrs
fdivrl
push
popa
lods
or
je
xchg
jnp
jle
aam
pop
mov
popl
out
aas
adcb
orl
push
and
pop
lea
mov
shlb
xchg
mov
mov
and
jg
lret
jno
or
jbe
mov
int3
pop
adc
scas
ss
cmp
pop
into
movsb
mov
test
sub
jb
dec
test
movsl
pop
shr
add
repnz
jle
shrl
dec
cmc
cmpsb
mov
adc
push
in
cwtl
and
sahf
mov
pop
xchg
fwait
aas
pop
pop
inc
sub
sbb
cmp
inc
mov
aas
sbb
jmp
shrb
xchg
push
repnz
fiadds
pop
xor
xor
push
mov
test
pop
jmp
decb
and
push
push
push
jb
adc
test
inc
cmp
adc
ss
lds
jl
xor
mov
mov
lea
clc
push
addb
push
push
in
rolb
push
in
inc
dec
je
and
push
dec
adc
addr16
stos
cmp
js
inc
loopne
dec
cmp
mov
stos
fisttps
rcll
add
xor
fdivl
inc
je
jbe
pop
add
js
push
jne
fsubs
scas
add
shrl
insb
mov
or
dec
rcl
scas
sbb
adc
add
and
call
add
sub
lret
and
insl
loopne
dec
mov
add
roll
mov
push
pop
sbb
jmp
sbb
adc
fiaddl
mov
inc
mov
mov
push
inc
imul
jmp
sub
les
add
clc
xlat
mov
fbstp
push
les
push
inc
sbb
pushw
jle
pop
cmp
or
pushf
testb
adc
or
cmp
add
or
inc
clc
and
dec
mov
xor
movzwl
retw
jmp
inc
sbb
and
jno
cmpsb
fdiv
pusha
shll
or
and
xor
jo
cmp
adc
add
cmp
add
les
mov
cs
pop
sbb
adc
nop
mov
inc
add
add
sub
mov
out
lods
stc
icebp
sub
mov
push
sub
stc
lock
in
sbb
pop
ret
xchg
mov
sbb
mov
sbb
rcrb
sbb
sbb
aad
jo
jecxz
push
push
push
movl
add
mov
adc
andb
or
decl
push
add
out
jl
push
fisttpll
add
data16
lods
cmpsl
inc
and
jae
and
push
adc
aas
enter
adcb
lea
mov
test
mov
mov
imul
test
lods
mov
jbe
jg
adc
mov
cmp
je
cmp
sbbb
cmp
jl
scas
mov
jne
in
test
push
push
sub
scas
or
movl
pop
or
push
adc
pop
push
je
inc
jmp
adc
push
jns
xchg
inc
push
xor
inc
in
mov
pushf
or
cmpsb
xchg
ja
and
xor
ljmp
lret
ds
mov
push
pop
lock
add
push
push
or
das
mov
sub
cmp
jl
push
xor
out
jbe
push
push
mov
push
pop
das
loopne
enter
xlat
and
inc
mov
es
dec
xchg
in
sarb
push
cltd
cmpl
pushf
aas
aad
int3
je
adc
ret
movzbl
add
or
mov
sbb
push
ljmp
aam
lea
ds
pop
cmp
jnp
je
dec
ljmp
cmovp
dec
nop
pop
rorl
sub
das
add
inc
inc
pop
dec
movl
add
inc
addr16
mov
fdivrl
mov
or
xor
jbe
stc
test
daa
cltd
and
pusha
add
cld
sub
mov
pushf
inc
sub
stc
or
cmpb
sbb
in
xchg
rclb
sub
lret
dec
lock
jmp
mov
cmp
jae
add
inc
fildll
repz
add
jbe
dec
push
push
test
shlb
cmp
push
push
lea
adc
mov
adc
mov
mov
pusha
test
inc
push
mov
xchg
dec
mov
add
and
mov
add
stos
rorl
shrl
pushl
les
jno
ja
in
cmp
xor
adc
movsb
mov
adc
push
inc
lea
frstor
cmp
xchg
les
adc
xor
mov
ds
movsl
push
dec
jecxz
push
xor
inc
sbb
cmp
fsubrs
pop
repz
xor
jb
shr
inc
inc
jle
fcmovbe
mov
or
mov
or
push
add
or
push
sbb
sarl
add
sub
jne
aas
pop
inc
xchg
xor
mov
jae
add
repnz
inc
lods
lock
clc
xor
shll
add
shll
int
lret
dec
test
mov
movsb
push
rol
add
and
cmp
shrb
mov
dec
cli
out
push
sahf
or
shl
shlb
and
or
add
in
lods
loop
adc
and
mov
push
mov
divl
lock
add
lea
into
or
repnz
mov
fldenv
out
loop
scas
cmc
jl
cmp
lcall
sub
xchg
jne
fldcw
aaa
sub
adc
inc
xor
xlat
ss
xchg
cld
xor
imul
cmp
in
xchg
jl
mov
incl
mov
xchg
pop
cmpsb
inc
and
nop
imul
xchg
xchg
jno
std
mov
dec
mov
cmpsb
aas
adc
std
repz
and
mov
mov
sti
mov
sbb
bound
ficomps
add
inc
rorb
fwait
insl
js
ja
inc
out
pop
pop
es
mov
fsts
xchg
mov
mov
into
or
push
in
ret
sti
pop
adc
sarl
cmp
into
lahf
add
adc
add
out
fsub
xchg
imul
out
and
sti
shl
flds
int
and
pop
mov
ret
and
nop
aas
xchg
adc
dec
jle
xchg
inc
dec
add
add
addr16
mov
jg
mov
add
loop
inc
fimull
pop
add
fidivl
fsubrp
or
inc
cmp
incl
xor
aaa
lea
pushf
or
ret
or
mov
and
jmp
adc
popa
popf
insl
adc
shll
sub
aas
mov
or
in
ror
xor
insb
push
repnz
mov
inc
ljmp
loopne
lock
push
test
jnp
xlat
mov
stos
lock
addr16
dec
mov
insl
scas
sub
lret
xchg
sub
mov
xor
sub
sub
fsts
adc
xor
daa
mov
int3
pop
adcb
xor
aam
fimuls
ljmp
sbb
xchg
cmp
or
rcl
push
rcrl
rolb
inc
sub
in
stos
rcrb
adcl
mov
out
push
insb
pop
and
lods
les
lock
or
mov
pop
inc
and
hlt
push
testb
out
fisubrs
fmuls
inc
mov
fcomi
sahf
or
fimull
and
psubusb
mov
xchg
cld
into
lahf
add
inc
ret
pop
pop
gs
outsb
out
mov
lahf
and
xor
rcrl
pop
or
test
test
lahf
and
sbb
loopne
sub
sub
inc
repnz
faddl
mov
mov
xchg
aas
inc
and
jle
testl
repnz
sub
out
adc
shl
xor
add
cmp
es
jmp
enter
push
push
mov
inc
cmp
cmp
and
sbb
pop
loop
sbb
dec
pop
sbb
push
mov
and
pop
movzbl
cmp
out
or
push
js
adc
dec
js
decb
and
je
loop
movsb
sbb
push
push
push
or
sbb
dec
pop
rcrb
push
push
addb
dec
out
in
inc
lods
mov
and
imul
push
pop
push
jl
ret
push
lock
push
inc
adc
imul
mov
mov
data16
sub
adc
push
adc
and
mov
jb
adc
pop
dec
sub
es
dec
ret
aas
jne
test
or
sbb
xchg
int
out
ret
ds
popa
add
xchg
add
jl
repz
and
test
test
xchg
pop
inc
push
out
xor
sub
lods
ja
push
push
fwait
cmpsl
xor
rol
push
sahf
or
and
push
push
and
inc
out
jle
pop
cmp
aam
cld
xchg
orl
cwtl
adc
int
ja
pushf
push
movsb
push
jl
fcmovnbe
int3
sbb
sub
push
push
call
cmp
jp
imul
add
das
inc
insl
mov
push
ret
fwait
loope
rolb
push
test
lock
in
ds
cli
push
push
add
and
adc
repnz
shrb
mov
pop
ret
mov
push
cmp
and
cmp
data16
insb
lods
cmp
push
les
add
and
ja
xchg
shlb
pop
cmp
and
mov
sbb
or
sbb
andl
cmp
inc
andl
dec
rclb
inc
bnd
insl
stos
mov
push
dec
lods
lret
and
repnz
xor
inc
mov
test
mov
xor
adc
je
orl
push
xor
sub
xchg
or
sbb
cmp
sbb
push
call
xor
and
addr16
insl
out
stos
xchg
jo
or
adc
jmp
jo
push
add
imul
test
fcoms
inc
adc
push
dec
test
xchg
sar
xor
cwtl
and
jg
push
in
mov
fs
ja
popa
or
sbb
or
add
lods
jmp
sbb
int
xchg
repnz
inc
mov
stos
pop
push
mov
jecxz
sbb
sub
lods
outsb
jg
shl
push
das
stos
lea
add
popa
xchg
sbb
mov
lock
and
ds
jge
mov
test
inc
fsubr
dec
imul
mov
aas
outsl
rolb
push
test
fwait
movb
cmp
dec
jl
mov
imul
jae
arpl
clc
pop
pop
lahf
mov
cmc
lods
movsb
mov
lcall
sbb
cmp
insb
pop
or
dec
fimuls
outsl
inc
pop
adc
insb
mov
add
lods
mov
daa
sbb
dec
test
mov
or
or
sbb
mov
flds
sub
dec
pop
pushf
int
lock
add
mov
testb
test
xchg
pop
mov
and
pop
sub
mov
mov
push
repz
ret
flds
jns
aas
pusha
nop
aas
ret
scas
inc
enter
inc
and
push
or
aam
xchg
inc
inc
das
pop
jns
mov
add
dec
movsl
push
movsb
mov
scas
jl
lods
mov
add
sub
xchg
sbb
mov
add
mov
rolb
lock
sarb
sub
outsb
jg
sbb
push
ret
fs
add
dec
xchg
dec
stc
pop
dec
push
add
test
lret
or
popf
pop
mov
pusha
jbe
jle
gs
bound
test
scas
inc
dec
je
push
rclb
inc
or
or
fwait
jg
lcall
sub
adc
in
icebp
xchg
hlt
or
movl
icebp
clc
dec
cltd
push
pop
or
xchg
and
pusha
mov
and
or
or
cmpsb
add
test
add
stc
int3
fcmove
xorb
repnz
adc
test
xor
popa
fildll
lcall
push
fisubrl
add
out
push
xor
mov
notb
xor
mov
add
push
dec
shll
sbb
push
pop
ds
mov
xor
push
or
mov
movsb
mov
mov
or
mov
rcrl
sbb
dec
shll
pop
pop
pop
lcall
orb
xlat
pusha
fisubrl
test
push
rcll
daa
cmp
push
sub
and
mov
and
or
popa
mov
sbb
or
jb
and
push
sbb
sbb
or
fcmovb
pop
repz
xchg
jo
movsb
pop
mov
mov
imul
add
les
test
mov
inc
and
jmp
imul
add
inc
sub
add
or
out
aad
sarb
adc
xchg
pop
hlt
dec
jmp
push
cmpsb
out
scas
inc
addl
enter
xor
fucomip
fcompl
addb
fcmovnu
add
cmp
addl
dec
movsl
sarb
or
fdivrs
lahf
dec
fsub
mov
or
es
add
mov
push
sahf
test
or
and
or
addb
ret
or
dec
imul
mov
push
mov
enter
cmc
in
xchg
push
mov
sbb
push
push
insb
and
mov
jno
xor
push
pop
arpl
and
xor
int3
hlt
push
sub
clc
fs
lock
ss
push
add
ss
sbb
je
sub
pop
mov
mov
aad
mov
inc
cmp
push
inc
push
mov
sbb
inc
mov
nop
sbb
js
fmull
insl
add
and
mov
test
pop
cltd
test
sub
push
mov
and
or
mov
xor
daa
mov
xor
or
dec
pop
rolb
in
xchg
sbb
hlt
pusha
push
dec
or
stc
add
xchg
fisttpll
imul
add
add
orb
or
add
fiadds
add
jmp
popf
call
clc
mov
dec
imul
outsb
pop
movsl
std
or
int3
mov
push
and
push
and
je
aam
ljmp
rcrb
pop
jp
pop
frstor
sub
daa
pop
push
lods
sbb
sbb
jmp
dec
mov
cmp
je
mov
lahf
pop
lock
adc
out
jne
add
popa
mov
add
adc
jbe
mov
push
cld
psubb
add
lea
dec
jecxz
or
push
jl
or
mov
push
inc
add
add
or
insl
or
and
fisttpl
dec
test
jmp
jb
pop
cs
enter
lret
in
test
in
in
mov
mov
cs
lret
lods
shlb
mov
cs
xchg
xchg
xor
and
and
cld
jb
push
pop
dec
and
push
push
dec
pop
mov
or
jo
jle
jmp
mov
inc
rorb
jge
pop
aam
gs
add
cmp
jbe
jp
decl
add
jb
cmpl
xchg
push
jo
and
and
dec
sub
ja
pop
pop
jne
push
push
enter
inc
mov
or
push
or
mov
rep
jmp
mov
cmp
jb
loopne
insb
out
cwtl
enter
hlt
push
dec
jnp
js
or
pop
and
mov
mov
mov
scas
imul
add
mov
int3
lea
dec
add
sub
push
movl
or
add
out
or
push
rorb
mov
mov
cwtl
mov
mov
call
repz
in
lock
test
clc
clc
cld
xchg
lea
decb
clc
fsqrt
shrl
push
jmp
sbb
pusha
int
pop
mov
ret
nop
inc
pop
or
shll
outsb
sbb
lea
jl
cld
or
push
jo
and
std
cld
out
adcb
mov
fcomi
fsts
fisubrs
sbb
test
pop
nop
xchg
push
mov
push
loopne
add
out
add
sub
add
dec
inc
push
out
push
add
nop
dec
dec
addr16
add
jecxz
add
push
cmp
jns
bound
inc
dec
jns
jns
push
pop
fs
aaa
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
nop
xchg
mov
jnp
cwtl
push
test
adc
adc
dec
push
push
add
pop
sysenter
sub
dec
daa
ja
dec
clc
mul
push
mov
inc
inc
and
sub
add
mov
pop
ret
adc
cmpsl
in
xorl
jns
in
or
fildll
enter
mov
pop
pop
lock
fisubrl
addb
inc
fldenv
sbb
xorb
jecxz
fcoml
fistpl
ds
jae
mov
out
adc
cmp
jb
push
pushl
pusha
inc
jle
ficomps
sub
ja
mov
sti
add
xor
repz
mov
scas
or
mov
jp
xor
add
jmp
add
mov
les
inc
pop
mul
cmp
sbbl
mov
sbb
cmp
cli
data16
or
or
test
arpl
pushl
andl
add
pop
mov
movl
sbb
outsb
data16
sti
mov
ret
push
and
add
neg
sbb
push
aaa
ret
pop
xchg
lds
inc
or
out
pop
loopne
inc
pop
outsb
and
dec
push
sti
dec
insb
mov
or
push
cmp
jl
fistpl
test
jne
ret
testl
shrb
int
aas
shll
mov
js
fildll
testb
jne
addl
add
jp
inc
pop
xor
lods
lods
orl
ss
dec
lock
or
idivb
fidivs
outsl
pop
push
jge
mov
push
subl
mov
andl
mov
jg
xor
cmp
insl
and
cmp
aas
add
movzwl
mov
es
aad
shlb
lock
imul
inc
inc
inc
inc
push
fcoml
sbb
inc
lock
jmp
jb
fldenv
jbe
add
dec
imul
cwtl
add
sbb
xor
fcompl
sbb
add
sub
and
push
jmp
pop
push
cmp
dec
shrb
sbb
test
mulb
je
pop
roll
sub
inc
inc
pop
cmp
enter
mov
shrl
jmp
push
or
and
ret
adc
push
testb
cmp
clc
mov
inc
jbe
push
or
inc
inc
mov
icebp
pop
dec
or
icebp
mov
call
pusha
mov
add
add
icebp
cmpsl
push
mov
jnp
add
add
jmp
test
dec
loop
inc
incb
mov
shlb
bound
xchg
test
mov
jmp
lahf
inc
in
aad
clc
imul
ficomps
or
jp
add
sbb
sbb
or
lods
push
mov
hlt
daa
stc
push
hlt
je
out
push
xlat
jo
int3
leave
push
mov
in
sahf
and
mov
jle
int
sub
jmp
ja
ficomps
fnstsw
cmp
dec
test
jp
add
incl
push
outsl
push
push
scas
fwait
mov
sub
add
idivl
popf
pop
aam
jmp
int3
push
hlt
or
ret
adc
lods
lock
fwait
ljmp
mov
lock
adc
mov
test
sbb
repnz
inc
inc
rorl
in
cmpl
xor
jne
xor
repz
mov
je
lret
jo
nop
or
push
pop
jno
movsl
mov
inc
out
dec
adc
pop
je
push
shrl
jg
out
cmp
sbb
push
push
inc
or
and
popa
pushf
scas
push
sbb
jp
xor
adc
jl
call
sub
pop
cwtl
pop
push
fcoms
js
or
mov
cs
loopne
out
add
stos
xor
mov
push
je
add
dec
pushl
push
jp
pushf
pop
lods
fstps
test
neg
mov
cmp
je
cmpsb
fmull
out
popa
js
jmp
push
pop
pop
push
rclb
loop
movsl
add
push
test
mov
mov
xlat
pop
popa
je
mov
out
mov
sub
xchg
sbb
or
mov
jns
pop
sub
fbld
add
mov
mov
loop
jbe
push
and
xor
fistpl
mov
dec
pop
and
cltd
and
cmp
lods
es
jne
push
fidivl
sbb
mov
imul
push
inc
push
movsb
add
or
add
and
loope
xorl
pusha
dec
outsb
dec
and
xor
ljmp
dec
or
adc
and
cwtl
dec
mov
fsubl
pop
jle
test
cwtl
adc
mov
je
movzbl
cmpsl
mov
sub
mov
add
lea
ret
lea
mov
mov
add
sbb
ja
pop
add
add
enter
daa
add
xlat
test
dec
jns
mov
xchg
jno
je
lcall
flds
add
jb
mov
and
xchg
pop
push
pop
out
push
push
jb
or
or
push
nop
or
or
or
or
push
pop
or
jns
cmpsb
repnz
or
or
or
out
repnz
add
mov
push
push
inc
enter
nopl
push
fcomps
adc
pop
adc
fwait
add
push
sub
adc
enter
adc
adc
jns
cmp
add
adc
add
adc
lcall
adc
inc
push
inc
push
push
push
push
xchg
and
sbb
pop
xor
pop
enter
sbb
jns
sbb
call
out
sbb
sbb
sbb
iret
mov
sbb
push
nop
out
mov
cmp
in
push
push
inc
push
mov
jne
add
add
sub
cmp
jae
xchg
jmp
fimull
lods
and
dec
arpl
inc
pop
sti
jg
sub
mov
cmp
je
lcall
sub
sub
rol
lea
aad
push
nop
mul
cmp
mov
in
fwait
out
mov
or
push
jbe
in
fcoml
call
nop
adc
dec
dec
cwtl
jmp
and
sub
xorl
jmp
sbb
in
in
cltd
inc
fsubp
add
add
sbb
sahf
out
out
mov
sbb
pop
orb
lock
enter
icebp
icebp
vmwrite
out
std
xchg
inc
enter
leave
std
hlt
rcrb
pusha
hlt
fwait
push
fdivs
jb
cmc
cmc
inc
jg
add
div
pop
lret
popa
idivl
cmp
sbb
inc
lcall
add
stc
inc
stc
lock
sbb
inc
sahf
cli
cli
iret
sti
cmpsb
repnz
sbb
stos
cld
cld
sti
and
outsl
cld
push
jne
sahf
addr16
fdivrp
xor
sbb
fadd
add
je
stc
jns
mov
decl
sub
leave
test
mov
rorl
shlb
jp
pop
cmpsb
and
jecxz
pop
push
adc
mov
xchg
add
inc
in
icebp
loope
jb
inc
mov
mov
xchg
sti
out
out
enter
cltd
outsb
call
adc
sub
int
mov
pop
jmp
psubusb
jmp
in
pop
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
push
xchg
cmp
sbb
add
cli
push
adc
push
cli
sbb
rclb
repz
pop
enter
stc
push
stc
mov
fnsave
sub
imull
fwait
xor
add
stc
out
clc
dec
in
ret
cmp
inc
push
fsubs
sti
cltd
mov
repnz
cld
orl
xlat
ja
sbb
inc
jo
pop
add
sub
mov
cs
mul
pop
dec
pop
and
shl
scas
testl
out
push
fsubs
out
out
and
mov
notl
sti
imul
xchg
shl
dec
push
jno
pop
mov
xchg
xchg
mov
loop
rcrb
jno
les
and
and
and
negb
repnz
les
cmc
pop
mov
inc
repnz
cmc
jae
dec
push
cmp
pop
dec
cmc
div
jmp
xor
and
in
mov
clc
xor
push
jecxz
stc
popa
cmp
mov
mov
loop
xchg
hlt
pop
pop
repnz
hlt
push
hlt
mov
sbb
sbb
cmpsw
xlat
push
and
hlt
idivl
rolb
sti
lahf
xchg
mov
adc
ds
repnz
cmc
pop
lcall
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
in
repz
xchg
cmpsb
jb
sbb
mov
adc
cmc
mov
mov
inc
xlat
xchg
repnz
out
inc
sbb
in
aaa
cmc
and
mov
inc
xlat
add
and
rclb
inc
sbb
icebp
repnz
divb
icebp
repnz
test
test
sub
cmc
cmp
lea
pop
pop
jb
jecxz
fstl
add
dec
ret
popf
mov
stc
stc
cmc
mov
lock
lock
and
and
pop
xlat
push
lock
test
ss
add
insb
jne
adc
sub
cmp
rol
in
cmp
inc
cmovno
push
add
xchg
add
sbb
add
add
jp
add
adc
inc
adc
or
ds
dec
add
jmp
dec
sti
cmp
and
ljmp
add
loopne
or
add
shll
fwait
in
add
daa
push
add
xor
fwait
int
jae
xchg
das
clc
and
es
jl
out
add
cs
mov
fldenv
mov
sub
cmp
ss
mov
cmpsl
stc
cmpsl
sub
cmp
or
pusha
and
cmp
outsb
clc
cmp
push
push
test
movsb
cmpsl
mov
cmp
add
idivb
sub
jg
xor
flds
sub
mov
xchg
jmp
test
sar
enter
add
or
jnp
adc
mov
dec
ljmp
ret
mov
lock
xor
pop
inc
inc
add
fists
add
out
xor
dec
repnz
outsl
jo
enter
or
shr
scas
adc
data16
add
or
insb
nop
fisubrl
neg
ljmp
adc
rcl
testl
add
jmp
testb
add
cmp
mov
in
imul
and
dec
dec
mov
lods
add
adc
xor
inc
inc
cmp
cs
pop
mov
jne
bound
aam
adc
repnz
mov
mov
adc
mov
insl
push
out
or
pop
pushf
cmp
fstpt
adc
sub
sbb
sbb
pop
sbb
jnp
xor
dec
fisttpl
inc
inc
rcrl
rorl
inc
jb
adc
lcall
push
and
lock
cmp
cmp
dec
pusha
xchg
add
fisttpll
fdivrl
or
cmp
jg
jl
or
inc
push
adc
adc
and
sbb
fmuls
sub
ljmp
ret
clc
add
add
in
cs
ljmp
es
jle
pop
testl
jge
andl
pushf
in
inc
sbbb
pop
and
mov
dec
mov
and
mov
leave
fstl
and
pop
pop
pop
and
inc
xor
mov
add
xchg
push
and
sub
pushl
cmp
sub
push
or
push
jmp
loop
pop
in
and
or
iret
and
orl
mov
push
adc
call
push
popl
aas
adc
movl
push
push
inc
in
ds
inc
sbb
js
loopne
sbb
or
fisubs
jl
push
lds
js
xor
das
jp
incl
sbb
ss
push
call
aam
je
ret
and
in
sub
je
es
push
jle
ret
aas
push
cmp
jg
test
cmp
mov
xchg
pop
or
or
push
call
rcll
lret
fistpl
lret
pusha
or
sbb
pop
test
lock
mull
sbb
mov
dec
pop
push
aas
mov
cmpl
je
orb
mov
shrl
ret
fcompl
mov
je
adc
sub
push
shrb
fidivl
or
jne
jo
cmp
int3
test
pop
test
sbb
lret
pop
mov
les
sub
add
test
hlt
je
mov
mov
je
and
add
cli
xlat
or
incb
rolb
sti
jge
test
test
call
xor
push
test
push
je
int
or
adc
lret
inc
ret
adc
mov
and
and
or
movl
or
or
push
sub
enter
sbb
pop
and
mov
icebp
mov
pop
and
or
push
fcoms
sub
push
push
mov
rorl
xor
push
mov
lret
mov
jmp
and
push
out
add
ljmp
insl
add
mov
adc
inc
add
lock
lock
out
xor
jne
push
js
pop
lcall
js
cmpl
xrelease
xchg
fisttpll
or
push
dec
daa
xchg
cmp
push
inc
sbb
icebp
and
or
outsb
sbb
pop
adcl
cmp
outsb
outsb
add
or
jmp
std
jmp
mov
or
sbb
sub
ljmp
jmp
mov
mov
in
mov
bound
fsub
mov
ret
paddusw
jo
mov
das
or
adc
arpl
sbb
mov
cmp
loop
adc
inc
inc
test
inc
cmp
mov
jns
cltd
cmpsl
inc
mov
jge
jne
push
sub
icebp
sub
or
jge
cmp
adc
mov
arpl
mov
outsb
fisttpll
inc
pop
xchg
andl
mov
jno
pop
aam
sub
mov
or
loopne
inc
shrl
mov
cmp
inc
cld
push
or
aaa
enter
out
sub
push
cwtl
pop
dec
cmp
push
pop
sbb
iret
incl
sub
jne
cmp
jne
lret
adc
or
outsb
or
sbb
in
lret
sbb
and
and
and
cmp
sub
mov
cmpb
jmp
hlt
ja
or
int
xor
push
movsb
je
addl
pop
push
add
add
out
pop
lods
sbbb
mov
sbb
mov
adc
add
pop
addb
hlt
daa
mov
pop
sbb
sbb
lock
pop
add
test
xor
cwtl
add
clc
cmp
jbe
lock
gs
inc
hlt
hlt
iret
jmp
or
cmp
mov
rcrb
mov
inc
es
fnstenv
jl
pop
ret
xor
lods
jge
jbe
jne
je
and
js
inc
mov
sar
cmp
jbe
push
push
mov
push
movsl
xchg
dec
nop
icebp
and
js
shll
leave
or
inc
push
bound
sbb
inc
push
sbb
sbb
and
out
aas
push
dec
push
sbb
push
pop
push
add
lret
add
jmp
xor
pop
cld
jne
push
mov
loopne
sbb
out
leave
iret
pop
dec
xor
testl
leave
mov
sbb
fadds
dec
adc
adc
sub
daa
les
push
cmp
dec
out
das
sub
adc
mov
inc
cld
mov
push
je
inc
inc
mov
fdivrl
je
xor
mov
dec
call
cmp
fdivp
jns
shrb
pop
cmpsl
js
xchg
jl
pop
and
fidivrs
xchg
sarb
push
and
or
cmp
sbb
push
repz
and
pop
add
lcall
and
cld
sub
dec
push
cltd
or
jp
mov
adc
das
je
pop
push
pop
push
fstl
test
lea
hlt
into
push
js
dec
cmpsb
lds
sbb
pop
gs
decb
sarb
jl
mov
mov
mov
ret
daa
fldz
jmp
lods
push
push
push
jae
out
sub
in
sub
mov
and
pop
push
sbb
push
xchg
fmull
inc
adc
out
sub
pop
fbstp
xor
imul
cmp
loope
sbb
shrl
movsb
leave
xchg
mov
push
pusha
xchg
pop
cmc
out
icebp
or
pop
mov
sub
inc
push
sbb
pop
outsb
and
lods
sti
jo
call
push
xor
nop
repnz
and
cmp
xchg
lret
inc
loop
gs
mov
xor
jbe
push
loope
orb
imul
sub
cmp
cs
and
shrl
testl
fwait
cmpsb
fstps
push
push
mov
or
add
adc
xor
sbb
mov
pushf
sub
xor
sbb
mulb
lock
lea
insb
jl
icebp
xchg
and
sub
xchg
add
je
add
insb
inc
push
clc
cmpxchg
sbb
inc
pop
or
jle
mov
add
sbb
push
sbb
xlat
xchg
loopne
and
and
or
cmp
clc
js
test
loop
pop
outsl
inc
pop
je
movb
pop
jno
push
jecxz
mov
cmp
je
inc
inc
aaa
jne
sbb
pop
jo
je
inc
dec
xor
mov
or
xchg
mov
cmp
adc
jne
call
mov
dec
cmp
add
imul
dec
dec
pmovmskb
inc
add
or
push
add
or
sarb
cmp
xor
cwtl
xchg
shl
je
inc
inc
popf
sub
xor
testb
lahf
mov
inc
inc
mov
mov
cmp
adc
xlat
shlb
push
push
jbe
add
leave
mov
addr16
sub
sbb
sbb
sub
ss
add
imul
arpl
and
add
push
lea
decl
mov
add
push
movzbl
movsbl
and
sti
add
out
mov
push
je
addb
call
sub
push
add
cmp
mov
int
decl
mov
and
or
mov
jmp
sub
jmp
andb
jmp
xor
in
push
push
divl
mov
add
adc
addb
cmc
and
lods
inc
jae
push
pop
js
adc
or
leave
adc
mov
clc
loopne
cmp
xor
cmpsb
push
loopne
sub
sub
dec
aad
ret
test
push
dec
rorb
mov
jnp
cmpb
mov
mov
pop
adc
cmp
lock
push
add
loope
je
roll
fidivrl
add
pop
testb
adc
notb
pop
xor
sahf
jmp
mov
call
sub
and
sahf
gs
xlat
pop
pop
mov
fadd
sbb
push
pop
aam
cmp
and
rcrb
adc
notl
and
das
dec
xor
pop
cmp
je
pushf
lret
insl
loopne
push
scas
test
inc
or
cld
cs
hlt
mov
je
mov
lods
pop
or
out
jns
fistps
or
das
inc
ja
adc
jl
fdivs
cmp
dec
insb
sbb
subl
cld
mov
jb
filds
jge
jmp
cmp
jb
sti
repz
das
add
cmp
cmpl
out
xor
xchg
xchg
jne
sub
loopne
mov
ss
fnsave
cld
pusha
mov
iret
mov
ss
inc
sub
push
push
outsb
hlt
jmp
loopne
push
pushf
cmpb
push
pop
mov
xchg
push
sub
es
js
subb
jg
add
push
adc
cmp
insb
ret
mov
das
dec
cmp
cmpsb
jmp
fcomp
das
sbb
movsb
and
xor
add
test
and
mov
push
ret
std
dec
popa
out
stos
rclb
cmpsl
xor
repz
aaa
inc
jmp
addr16
lret
add
clc
test
lods
cmp
mov
cmp
sarb
aam
outsb
push
adc
pushf
ds
inc
or
jne
push
mov
sbb
insb
jb
sar
mov
push
jge
das
loopne
push
add
add
je
into
jg
sub
adc
and
gs
add
mov
test
adc
loope
pop
es
and
out
adc
icebp
mov
or
mov
sbb
in
pushf
cmpsb
sbb
cmp
aam
xchg
push
ror
enter
nop
int3
mov
add
test
mov
aam
sub
jbe
push
push
xchg
clc
stos
xor
dec
movd
push
sub
or
test
data16
sarb
mov
cmp
pop
jmp
jne
shrb
push
adc
add
iret
shl
mov
mov
push
xchg
xchg
push
pushf
sti
push
pop
movsl
outsl
mov
cmp
mov
call
pop
lea
cmp
je
lods
cli
je
mov
sbbb
jge
cltd
outsb
inc
mov
cmp
cmp
jne
scas
das
jbe
cmp
stos
push
lcall
imul
add
jne
or
ljmp
inc
jmp
inc
cli
popf
pushl
push
stos
push
mov
xchg
cmp
inc
int3
or
mov
sub
mov
enter
pop
or
decb
icebp
and
or
jmp
mov
lds
push
hlt
mov
scas
cs
xchg
cmp
cmp
mov
xor
adc
lock
lea
rolb
cmc
popa
push
jo
adc
push
mov
push
fld
jnp
insl
mov
mov
sub
lahf
push
jmp
jno
mov
push
outsb
push
cmp
testl
push
or
push
adc
cld
cmp
pop
int3
fistpll
dec
sbb
faddl
int
call
das
fstl
jae
jp
cmpl
dec
dec
call
push
xor
lock
pop
add
add
sbb
cmp
cmpsl
pop
hlt
sbb
jo
lea
daa
daa
sbb
sbb
rcll
mov
and
enter
mov
push
mov
mov
movb
jb
test
fmull
push
and
inc
mov
jb
sub
clc
push
push
push
cmp
sbb
mov
pop
popa
adc
ret
adc
mov
push
xchg
mov
dec
stc
shl
or
dec
lock
mov
adc
adc
cmp
inc
push
mov
std
mov
cmp
jne
frstor
push
sbb
divl
dec
decb
or
xor
or
icebp
add
dec
push
adc
mov
sbb
inc
adc
std
xchg
in
test
push
scas
add
sub
xor
fldz
fcoml
inc
fcompl
push
jp
loopne
mov
rorl
add
and
or
aam
mov
pusha
or
xchg
mov
adc
je
iret
insb
cmp
jl
jg
cmp
ljmp
xchg
jbe
adc
movsl
fwait
adc
xor
test
jo
or
jnp
shlb
scas
cmp
pop
lret
dec
jge
rorb
insl
cmc
or
leave
and
xor
rolb
jb
fucomp
mov
mov
shl
or
loopne
sub
push
push
iret
aam
clc
or
rorb
cmp
xor
rorb
sbb
pop
or
jmp
testb
shl
sbb
mov
fmuls
jl
aad
mov
pusha
push
enter
mov
push
sbb
clc
cmpsb
stos
jle
andl
orb
loope
push
or
inc
sbb
in
adc
add
cmp
cwtl
int
mov
jo
popf
jge
ds
shlb
add
pop
sbb
lret
ds
decb
outsb
test
and
pop
incb
add
cmp
je
xchg
cmc
incl
cmp
jbe
cmp
je
push
push
push
jnp
call
ja
dec
inc
mov
xchg
lcall
iret
pushf
cmp
ljmp
inc
cmp
cmp
pop
mov
pushl
decl
cs
clc
sub
adc
inc
loopne
movsl
lods
pop
call
hlt
jb
adc
mov
es
fnstenv
xchg
xor
or
sub
ret
ret
cmpsb
cmp
insl
ja
cmp
or
xchg
daa
mov
cmpsl
rolb
dec
mov
fistl
outsb
inc
add
fsubrs
fs
push
add
fstl
lods
pop
xor
adc
mov
cli
pushl
ljmp
fnstcw
xor
push
ljmp
dec
imul
push
inc
push
pop
arpl
add
cmp
pushf
leave
mov
pop
popf
inc
scas
jle
adc
and
jmp
mov
jo
sti
les
xor
jne
or
and
mov
xchg
sbb
cmp
dec
mov
loopne
int
loope
push
jo
xchg
add
xchg
jg,pt
loopne
out
test
cmp
jne
idiv
in
mov
inc
cmp
and
shr
cmp
jne
sub
arpl
lcall
xor
or
rol
sbb
sarl
js
iret
mov
xchg
je
mov
cmp
mov
mov
push
mov
rclb
mov
or
loope
add
cmp
pop
sub
dec
dec
sub
jecxz
cmp
mov
mov
imul
cmc
or
and
and
adc
lods
or
cmpsl
adc
pop
cld
jge
mov
shlb
in
push
jp
rol
dec
jg
lods
and
push
or
or
or
inc
add
adc
js
orb
push
lock
hlt
testb
cwtl
stos
inc
push
aam
push
adc
pop
leave
sbb
testb
cmpsb
outsl
pop
add
sarl
shlb
pop
cmpb
jne
push
cs
clc
xor
inc
cmp
jb
push
lods
jecxz
hlt
movsl
jnp
sarb
mov
cmp
inc
pop
push
xchg
jb
jb
push
lock
mov
or
jae
or
sub
add
sar
aam
sbb
jmp
pushf
mov
in
xor
pusha
add
and
pop
andb
jmp
addb
fildl
bound
shll
rorb
imul
inc
jmp
arpl
imul
arpl
pushf
push
ja
scas
or
inc
stos
cld
shll
sbb
add
je
es
mov
dec
or
push
ljmp
enter
test
inc
in
popf
inc
or
test
cli
movl
and
int3
movsl
lock
inc
jne
push
test
inc
js
adc
pop
mov
pop
or
or
shl
and
push
test
test
xor
lock
loop
pop
jbe
sbb
arpl
js,pn
xor
and
pop
add
or
or
dec
or
add
jbe
out
fcompl
pusha
and
sub
aas
jae
sub
pop
ror
push
popa
sub
enter
add
pop
or
je
std
pop
addb
add
sub
xchg
dec
pop
push
inc
inc
inc
or
mov
or
add
and
push
push
push
push
jo
and
add
je
push
nop
cmp
add
dec
cmp
and
xchg
push
push
lds
imul
ss
shlb
push
sbb
inc
push
and
es
aas
ds
or
jmp
add
lods
push
lea
mov
adc
mov
les
xchg
outsl
mov
nop
mov
adc
jmp
pop
mov
push
sub
test
xor
rol
sbb
dec
push
ret
xor
sbb
or
mov
add
and
cmp
rolb
sub
pop
inc
pusha
push
ret
mov
mov
and
shl
sbb
mov
sbb
add
pop
ljmp
mov
inc
cmpb
sbb
lods
pushl
std
movswl
lock
cmp
mov
sub
rcll
scas
orl
pushf
mov
dec
and
adc
das
pop
push
pop
mov
sbb
gs
in
cli
pop
orl
call
rclb
mov
pop
jge
addr16
pop
cmp
les
jle
loope
adc
push
sbb
xchg
adc
push
fprem
jmp
adcl
fnstsw
fwait
sahf
jp
fstp
and
or
push
imul
arpl
jle
dec
outsb
push
lcall
mov
pop
adc
pusha
cmc
dec
mov
pop
or
jmp
push
pop
and
insb
test
mov
adc
dec
je
negl
cmpl
dec
add
and
shlb
push
inc
mov
adc
or
les
or
and
add
xlat
fcoml
pop
mov
jb
adc
mov
or
fstpl
int3
mov
pop
add
addr16
adc
jb
xchg
push
hlt
jle
sub
adc
add
cmp
aam
adc
lods
mov
sub
mov
fimuls
jg
jl
cmp
jb
jl
sbb
imul
or
call
insl
bound
cmp
cli
outsl
cwtl
push
shlb
popf
add
out
xor
jnp
xchg
xchg
lret
cld
mov
jnp
stos
decb
incl
fs
or
aam
clc
sahf
sbb
fidivrl
mov
mov
pushf
sbb
mov
mov
imul
xor
in
popf
in
fcomps
push
lock
imul
dec
sub
mov
in
mov
movsl
stc
add
adc
pushf
jp
daa
bound
add
loope
mov
ret
adc
sub
mov
outsl
pop
add
sbb
xchg
jmp
sub
sub
fs
cs
pop
std
xor
or
cmp
mov
lret
aaa
or
inc
add
popa
add
sub
fisubl
inc
cmpsb
xchg
or
imul
sbb
sbb
sbb
in
rdmsr
sbb
test
jl
jg
leave
jbe
lods
xchg
in
push
cltd
pop
idiv
add
adc
lea
cmc
jl
cltd
stc
stc
jae
lea
dec
push
rolb
jbe
jb
data16
jmp
adc
adc
mov
lods
pop
sub
cmp
fldl
xchg
dec
movsl
in
mov
js
lds
cs
popw
rcll
adcl
push
cmp
mov
jbe
xor
cmp
je
je
pop
test
pop
inc
pop
or
orb
sarb
or
ja
mov
mov
adc
push
adc
out
push
test
ljmp
and
std
push
adc
mov
je
lea
nop
aaa
mov
xchg
push
hlt
mov
jno
add
lea
test
es
push
jmp
or
pop
js
popf
mov
inc
incb
js
jno
repnz
mov
jp
js
add
inc
stos
jnp
dec
sbb
lock
repnz
movaps
pop
sahf
cwtl
mov
mov
sbb
jne
push
dec
cmp
xor
jbe
clc
imul
xor
pop
rcll
pop
cmpsl
xor
or
ss
lea
push
test
int
mov
leave
ja
ret
xor
aad
js
pusha
or
push
push
dec
jecxz
jb
mov
sbb
cmpsb
dec
fnstsw
adc
pop
dec
mov
dec
push
and
loop
enter
sarb
dec
je
dec
sub
and
add
test
in
dec
push
pop
or
inc
add
sbbl
fldenv
cs
loop
mov
push
fchs
jmp
sbb
sbb
and
cmp
test
push
loope
in
clc
call
adc
addr16
add
xchg
or
pop
push
jl
mov
sub
pop
and
mov
mov
scas
mov
jp
cmp
sbb
inc
mov
cmp
mov
jle
push
jbe
pop
cmp
or
pop
lahf
aad
dec
mov
xchg
mov
pop
pop
and
lcall
gs
jg
cld
repz
stos
add
mov
in
adc
adc
inc
mov
dec
or
jle
or
mov
and
sbb
mov
inc
cmp
mov
enter
pop
push
hlt
sbb
add
in
pop
ja
mov
or
or
or
xor
and
fisubs
inc
xchg
fisttpl
jae
cmp
jmp
ficoml
push
rolb
mov
mov
sub
nop
pop
xchg
fs
movsb
jmp
xchg
out
push
sub
fs
jb
push
xchg
imull
in
xchg
out
sahf
jo
pusha
pop
push
dec
fs
push
pop
pop
xchg
fs
mov
mov
scas
mov
data16
divl
and
push
nop
gs
xor
inc
enter
mov
int
jns
push
in
push
hlt
cld
add
or
cmp
daa
pop
iret
jnp
sub
inc
or
pop
insb
jmp
pop
push
xchg
test
js
out
jne
mov
sbb
xlat
cli
out
xchg
jb
lea
test
jbe
mov
loop
jno
push
cmp
jne
mov
rcr
mov
jne
es
push
ds
and
adc
lret
mov
inc
mov
ret
sbb
iret
iret
jnp
inc
adc
jmp
std
std
jmp
addr16
cmp
dec
fucomi
pavgw
jmp
mov
adc
inc
inc
jmp
cld
mov
shrl
shr
int
test
loope
rorb
pop
scas
push
pop
jo
lahf
out
sti
lds
push
dec
adc
push
and
lahf
iret
divl
jg
push
dec
and
push
jg
outsl
data16
jl
inc
or
jbe
jle
xor
jg
and
jg
jo
mov
xor
scas
mov
mov
repnz
cmpsl
jns
cli
or
ffree
mov
xor
das
xchg
lret
and
or
fmuls
loopne
mov
or
dec
test
mov
jg
dec
call
sub
push
inc
nop
flds
rcll
test
call
inc
cld
fildll
shrl
rorl
sub
xor
or
stos
lock
rep
pop
push
sbb
enter
mov
cmp
lods
and
out
scas
push
and
sub
push
push
push
ret
enter
ret
jmp
insl
and
sbb
out
mov
test
sbb
hlt
enter
jge
pop
mov
shrl
sarb
shr
and
add
imul
adcl
pop
bswap
add
push
jo
cmp
push
push
insb
push
push
enter
inc
das
fidivl
popf
sbb
out
xor
repnz
clc
pop
idivl
add
sbb
test
stos
dec
enter
dec
lods
roll
and
icebp
inc
loopne
loope
xor
inc
pop
mov
pop
and
rorb
sub
aas
or
daa
mov
movsl
gs
dec
push
pop
ja
pop
stos
sbb
stos
loope
nop
xor
xor
mov
add
and
cmc
nop
sbb
add
loopne
fnstcw
sub
fcompp
cli
outsb
mov
stc
outsl
add
fisubl
mov
jne
and
and
jbe
cmp
or
jnp
mov
or
cmpsl
push
push
cmp
jnp
and
or
aas
push
jecxz
mov
js
cs
inc
adc
les
pop
rclb
lods
cld
push
movl
loope
xor
pop
mov
mov
jne
dec
add
in
dec
mov
cs
or
add
mov
push
sub
mov
push
adc
lock
jecxz
icebp
add
cmp
mov
inc
mov
mov
imul
and
cmp
mov
repz
push
xlat
xor
sub
mov
clc
pusha
inc
std
dec
mov
enter
cmp
fisttps
add
lea
fimuls
addb
test
not
push
add
test
add
xor
popa
js
or
repz
pop
sub
or
pop
shlb
sbb
jb
pop
jb
inc
inc
mov
and
dec
pop
cmp
mov
push
test
test
jae
cmp
bound
dec
pop
mov
jbe
and
cmp
clc
insb
xor
cmp
or
mov
jne
push
jo
fdivs
scas
insl
jg
fcompl
or
stos
jle
mov
daa
shrl
mov
pop
add
sbb
pop
mov
pop
loopne
xor
sbb
xchg
sub
loopne
adc
jbe
mov
adc
push
push
les
clc
pop
and
lret
daa
test
shll
cltd
outsb
es
adc
add
and
stos
test
outsb
movl
test
int3
aas
add
gs
mov
clc
sbb
or
sbb
xor
mov
and
cmp
and
fxch
ret
aas
pop
mov
insb
inc
lcall
or
nop
inc
xchg
lods
ds
pop
inc
shll
add
loop
xor
add
push
daa
cmp
in
flds
lea
mov
lret
testb
mov
test
dec
xchg
and
shll
ret
xchg
adc
inc
subl
add
fwait
loopne
rcll
pop
xchg
add
mov
adcl
jns
pushf
pop
fists
or
and
cmp
call
add
pop
loopne
data16
es
cli
jae
sub
lcall
popa
jge
jge
jle
push
or
cmp
pop
mov
or
pusha
add
or
xor
test
les
lea
loopne
loopnew
mov
xor
push
mov
inc
insb
ret
insl
dec
adc
fcoms
xchg
mov
stos
inc
loope
cld
scas
add
xor
movb
and
jnp
mov
or
or
lods
pop
stos
movsl
mov
call
xorb
inc
add
xchg
push
xor
lea
mov
insb
pusha
aaa
pop
stos
mov
sti
sbbb
add
test
mov
dec
xchg
mov
fsub
movsb
rclb
mov
movb
jg
push
fadds
cmpb
and
cmp
cmpl
cmp
ret
ja
inc
rolb
lock
push
daa
push
fsubl
and
jmp
test
fisttpll
cmpsl
jo
adc
and
fidivrl
and
mov
cmp
xor
adc
rorl
pop
add
inc
push
and
lock
leave
mov
push
loope
mov
test
fiadds
call
mov
rorl
or
test
or
push
or
je
pop
inc
add
push
js
push
cld
sub
mov
jg
ret
dec
shl
or
xor
sti
rorl
dec
pop
sub
mov
mov
inc
dec
jne
pop
sbb
mov
dec
mov
in
sbb
mov
test
test
adc
jbe
mov
pusha
mov
mov
cltd
mov
mov
jne
test
push
movb
popf
out
lods
mov
add
cmp
ja
sub
data16
xor
or
jno
push
sub
inc
mov
inc
adc
push
jbe
pop
out
fisubrs
cld
ficoml
push
pop
movb
lods
rcrb
pop
icebp
mov
push
cmp
in
and
jbe
testb
dec
and
mov
jg
in
ss
orb
mov
mov
adc
adc
sbb
nop
mov
adc
pop
fbstp
mov
test
mov
cmp
xchg
or
rorb
mov
push
sbb
lret
add
jmp
cmp
push
jmp
jl
and
and
jl
push
add
add
iret
jb
lcall
and
lahf
scas
fmuls
clc
mov
mov
mov
xchg
xchg
and
mov
inc
cmp
mov
add
push
mov
lret
push
mov
mov
push
les
mov
jmp
jbe
jbe
and
pop
add
push
addr16
push
jge
movsb
push
movl
fiaddl
and
inc
std
jne
pusha
out
xor
jmp
sub
lahf
lret
add
jmp
push
rol
mov
and
pop
push
test
push
inc
fdivp
mov
test
xchg
sbb
mov
arpl
mov
mov
data16
repz
in
add
lock
out
into
std
add
jo
imul
pop
loop
movsl
inc
loop
and
pushf
mov
xchg
push
and
xor
lea
push
inc
rolb
les
mov
jae
push
call
push
repz
out
movsb
iret
jp
in
aas
fidivs
mov
test
sbb
cmp
sahf
pop
leave
inc
aas
loop
loope
xchg
mov
xor
lea
popf
aaa
jmp
xchg
into
sub
add
std
std
popa
shr
loopne
andb
cmp
clc
jbe
mov
inc
inc
adcb
sub
stos
xchg
loopne
loopne
xorb
xor
popa
in
nop
stos
inc
js
mov
insb
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
or
mov
jl
sbb
add
jbe
mov
incl
ds
clc
or
inc
or
inc
dec
jne
cmp
movsb
mov
out
or
push
add
loop
jnp
test
xor
jo
jp
pop
or
hlt
adc
clc
out
dec
loopne
adc
sub
mov
in
dec
pop
sub
rclb
or
cld
cmpsl
lods
movsb
in
mov
push
cmp
mov
sti
rep
andl
pop
aam
mov
les
or
or
cmpsb
vcvtps2pd
inc
fsubrs
push
xlat
in
test
cli
jo
insb
ljmp
add
repz
pop
and
cmp
push
or
sbb
xchg
pop
jge
pop
xchg
cmp
cmp
sub
jmp
xor
dec
sbb
mov
push
inc
mov
bound
pop
lods
insb
pop
ret
ss
push
out
arpl
rcl
insl
adc
jne
es
xor
adc
and
loopne
and
add
loopne
mov
sahf
jmp
leave
cmpl
stos
push
push
and
pop
movl
mov
fstl
outsl
cmp
es
movsb
std
cmp
pop
cmp
jne
sbb
adcb
pushl
fsubs
or
mov
sbb
das
adc
xor
inc
sbb
sub
insl
fmul
cmp
sbb
rcrb
mov
popa
test
adc
cwtl
sub
push
filds
lods
mov
js
push
push
cmpl
pusha
or
fs
pop
dec
inc
add
cmp
adc
loopne
loop
sub
jne
ds
test
popa
xchg
xor
in
mov
push
push
mov
mov
lea
jnp
or
aaa
cmpl
test
sbb
push
pop
ret
or
cmp
add
mov
inc
or
dec
xorl
shrl
xor
call
xor
je
push
mov
je
jmp
xor
inc
test
lods
or
sub
jbe
enter
sbb
lock
mov
cmpl
jo
dec
aas
fs
lea
mov
test
into
fucomip
int3
je
roll
mov
insb
push
sub
xchg
les
insl
mov
lea
les
sub
xor
lods
mov
sbb
sbb
or
fsubrl
popf
aam
sarb
data16
popf
enter
mov
mov
and
inc
dec
rolb
rclb
mov
call
adc
insl
stc
push
jbe
pop
pop
add
rol
add
mov
cmp
sahf
push
or
fcoms
jo
jno
lea
mov
aas
mov
pop
push
mov
and
leave
aam
daa
jge
jl
ret
pop
jmp
jge
insl
jne
mov
mov
add
pop
adc
stc
sub
in
push
adc
repnz
inc
pop
out
push
adc
sbb
push
pop
cmp
test
jl
aas
xchg
fs
jne
mov
mov
pop
es
pop
and
dec
xor
push
mov
sub
loopne
mov
cmp
mov
cmp
add
sub
test
lcall
fiadds
movsl
push
mov
push
adc
mov
mov
push
je
pop
ret
cli
in
fmull
in
gs
pop
sub
pushl
std
push
pop
test
je
cli
or
mov
mov
into
ficoms
xchg
movl
shrb
add
mov
cmpsl
dec
xor
pop
push
test
or
shlb
pop
popa
jo
jge
loope
xor
int3
aam
xchg
js
jge
rep
or
jo
pop
inc
testb
jbe
xchg
pop
test
add
sbb
cmpsl
mov
cmp
aas
push
cs
std
sbb
or
sbb
pop
sbb
mov
ja
add
popf
pop
rcrl
xor
fsubp
cltd
leave
test
sbb
sub
fsubrl
nop
jl
mov
push
mov
jl
push
movsl
inc
rcll
pcmpgtw
bound
lahf
mov
add
add
push
xchg
js
push
xchg
outsb
orl
mov
push
cltd
inc
inc
cmp
cmp
loopne
sbb
push
mov
je
sub
push
pop
add
or
dec
push
push
add
push
sbb
dec
pushl
push
push
dec
push
dec
add
push
mov
xor
cmp
pop
jne
push
cmp
je
jl
pusha
testl
ss
dec
inc
sti
imul
pop
ret
imul
divl
pop
adc
push
push
pop
mov
mov
sub
aas
clc
cmpl
cwtl
int3
testl
xor
loop
sbb
and
rclb
mov
andl
pusha
xchg
sbb
daa
loop
cmp
stos
adc
push
jno
int
xor
pop
or
mov
dec
xchg
fcoml
lahf
adc
push
jne
push
aas
out
and
and
mov
insl
add
xor
sbb
cwtl
pop
call
nop
cs
cmp
adc
jmp
push
push
clc
inc
orl
jmp
push
clc
lock
mov
push
jne
sbb
inc
shlb
pop
adc
mov
in
or
cli
push
xor
or
dec
dec
rclb
mov
ret
mov
mov
sti
adc
daa
push
mov
or
lock
push
xor
jae
mov
leave
adc
sub
dec
in
outsb
dec
mov
mov
loope
cmp
push
fiaddl
mov
adc
or
xor
es
jmp
cmp
roll
adc
dec
add
sete
mov
inc
sub
dec
sub
dec
bound
inc
adc
push
or
data16
insb
add
sbb
mov
mov
add
sub
inc
add
sub
clc
shlb
xchg
jns
lahf
push
push
cmc
add
sarl
push
add
imul
inc
mov
jns
mov
adc
xor
mov
jo
cs
and
in
sarl
mov
shr
not
push
imul
mov
lods
or
add
pop
push
adcb
jbe
fiadds
fldl
ficoml
pop
jo
push
or
je
mov
dec
xchg
icebp
outsl
push
ss
cmp
movsb
addb
mov
sub
push
pop
mov
or
lret
cmp
pop
fisttpl
ja
fstl
fcmovb
out
imul
add
enter
jne
and
shrb
je
adc
mov
or
fadds
daa
pop
and
sbb
sbbb
test
jbe
dec
adc
insb
notl
test
or
pop
roll
stc
cmp
jge
imul
jle
andl
cmp
sbb
cmp
jl
pushl
lock
push
jne
movl
mov
pop
cmp
cmp
and
sub
sbbb
movsl
cmpsl
jb
xchg
cmp
test
cli
out
jbe
jbe
fdiv
and
sbb
and
scas
out
inc
dec
in
jns
mov
cmp
loope
loopne
fsts
push
add
icebp
imul
inc
or
fbstp
in
hlt
add
cmp
jae
cmp
or
add
call
and
lret
aam
jle
cmp
or
aam
or
and
or
fnstcw
jecxz
add
mov
inc
mov
ja
mov
dec
ja
fbstp
adc
jb
jmp
xchg
sub
je
and
outsl
or
je
dec
in
mov
sbb
push
scas
je
push
mov
mov
push
xor
xchg
adc
pusha
imul
fdivs
les
add
in
jecxz
out
addb
aad
data16
or
add
call
in
sti
aam
inc
pusha
jne,pn
sbb
inc
mov
cs
rclb
xchg
out
jle
adc
and
mov
mov
aam
mov
push
push
scas
aam
jmp
lods
adc
mov
mov
sbb
push
push
popa
pop
add
dec
jmp
imulb
adcl
xor
mov
pop
push
roll
fs
jns
cmp
cld
sbb
lret
insb
cld
lret
shrb
insl
cmp
mov
add
das
jne
cmc
xchg
rorl
xor
xchg
pop
ret
dec
arpl
add
cmc
or
push
inc
imul
push
test
adc
and
inc
mov
jo
or
mov
xchg
test
cmp
mov
cmp
mov
ficoml
sub
pushf
lcall
pop
popf
ret
sub
push
xchg
adc
fmuls
repz
inc
mul
mov
sub
xor
mov
add
sub
insb
loope
rclb
jp
sbb
cmp
add
sub
mov
dec
icebp
out
jbe
ss
push
test
mull
out
push
ss
lsl
jmp
push
pop
push
fcos
out
int3
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
ret
out
dec
adc
inc
mul
pop
jb
cmp
divl
push
jbe
dec
sub
sbb
adc
or
insb
fcmovbe
adc
ds
pop
repnz
imul
and
repnz
mov
mov
data16
push
cmp
test
bndldx
pop
fistpll
xor
adc
jl
or
les
shlb
jmp
adc
inc
pusha
add
push
lds
sub
clc
mov
inc
push
push
sub
xchg
jne
adc
shrb
or
adc
lcall
js
addps
jns
clc
das
or
adc
adc
xor
mov
jno
push
pop
push
mov
or
xor
lods
in
dec
sbb
pop
test
push
pop
data16
mov
pop
xchg
lea
or
insb
sti
insb
sbb
adc
add
and
ror
fidivs
insb
or
or
clc
jbe
add
xchg
stos
jp
and
sbb
test
and
pop
test
jmp
sbb
scas
dec
adc
pusha
mov
jmp
mov
add
cmp
jl
xchg
test
aam
ja
subb
jne
movsb
mul
cld
jbe
or
cmpsb
add
punpcklbw
jmp
and
test
mov
es
xchg
adc
cmp
jb
ljmp
pop
inc
pop
popa
adc
jo
and
or
cmp
pushf
sbb
add
jnp
dec
dec
cmp
push
rcrb
test
add
aam
ds
adc
stc
dec
or
cmovae
dec
adcb
inc
mov
push
xor
je
rorb
jmp
out
mov
add
xor
mov
das
xchg
inc
stos
jecxz
je
bound
mov
or
lock
push
pushf
add
xchg
in
pop
fldl
ret
loope
add
sti
mov
lea
cmp
stos
push
mov
mov
mov
movsb
jb
test
or
xor
adc
jb
ja
jb
cmp
pop
call
add
addb
cwtl
or
inc
mov
jge
rcll
add
adc
hlt
call
and
and
mov
or
daa
push
or
cmc
ja
jb
mov
cmp
cltd
mov
ja
pushl
dec
or
hlt
call
pop
or
arpl
mov
lock
rcll
push
ss
push
rol
and
aas
push
jp
insl
call
mov
cmpb
mov
jmp
inc
mov
pusha
jmp
or
inc
xchg
adc
push
and
jne
mov
sbb
inc
shlb
ds
faddl
dec
out
sahf
pusha
jb
mul
enter
sbb
add
xchg
add
in
pusha
xor
dec
or
rcrl
cmovb
or
orl
inc
cmpsl
popf
pop
mov
jl
clc
adc
mov
add
cmpsl
xor
xlat
cmpsl
jmp
shrb
push
mov
add
pop
xchg
jbe
test
jne
scas
outsl
mov
mov
push
andl
inc
push
xchg
sbb
andl
adc
das
int3
decb
xor
add
cmc
pop
mov
add
push
or
or
lret
out
jne
inc
ljmp
pop
jge
cld
pop
insb
or
push
ds
out
mov
sbb
clc
dec
cmp
mov
jle
push
push
jne
pop
or
and
jns
cmpsb
push
dec
fdivrp
cli
stc
jbe
ljmp
xorb
xchg
add
je
push
push
jns
mov
jecxz
ret
dec
hlt
scas
jb
ljmp
push
push
in
push
cmp
popf
popa
mov
pop
pop
call
mov
push
outsl
lock
mov
je
je
leave
test
rclb
cmp
xchg
orl
mov
or
push
pop
pop
mov
add
sahf
nop
push
subl
subb
pop
addb
out
stos
inc
out
addl
aaa
out
xor
add
int3
and
push
jmp
pusha
outsb
pop
in
jle
mov
jne
inc
jns
adc
cmpl
fstpl
xor
jo
cmpsb
shrb
add
cld
push
mov
adc
lea
sti
sub
popf
in
mov
pop
aam
fadd
push
mov
cmp
jo
xor
cmpb
pushf
out
test
aaa
add
pop
push
ss
ret
xchg
out
shrb
xchg
call
xchg
outsl
xlat
jnp
add
orl
rorb
imul
jnp
loopne
ja
mov
movsbl
push
sbb
sbbb
rcll
rol
clc
pop
sar
pop
mov
mov
xchg
add
jbe
orl
into
in
mov
outsb
sub
pusha
mov
lret
dec
or
je
sub
and
add
push
pushf
jb
in
jne
or
add
push
mov
or
mov
nop
cli
xchg
sub
imul
cld
adc
jl
mov
lea
mov
mov
sbbb
imul
cs
dec
imul
ja
movsl
mov
mov
pusha
ret
hlt
out
jo
int
or
stos
inc
stc
cmp
push
or
inc
insb
je
xor
mov
test
add
loope
insb
loopne
sub
mov
sti
or
mov
pop
and
or
enter
add
orb
enter
movsl
cltd
sbb
fs
or
lret
out
imul
data16
sbb
js
pop
jg
xor
xlat
je
mov
xchg
lret
outsb
dec
xchg
das
add
shlb
sahf
pusha
fidivs
je
cmp
adc
or
in
jmp
dec
add
mov
ret
add
hlt
push
inc
shrb
cld
fsub
lock
popf
and
je
xchg
iret
roll
jae
pushf
testl
xchg
mov
dec
jne
das
mov
adcl
lods
jecxz
jo
sbb
dec
and
aam
test
in
shlb
outsb
ljmp
iret
mulb
es
sub
and
imul
cs
aaa
loopne
into
mov
rol
loopne
lock
push
xor
negl
push
xchg
add
testb
lret
ss
addb
testb
fdivs
lahf
pushf
je
mov
jmp
mov
push
push
inc
pushl
daa
jne
or
ljmp
in
setp
stos
mov
inc
mov
hlt
mov
pop
nop
cmp
pop
xor
add
lea
jae
cs
sbb
loope
test
sub
push
jo
inc
ret
repz
in
jl
jmp
jl
je
cmp
je
test
xchg
lock
aas
xor
mov
pushf
mov
test
or
ss
dec
sub
xchg
dec
loopne
or
or
mov
sbb
push
orl
or
adcb
push
lret
mov
dec
ficompl
ret
mov
jne
mov
jne
mov
jmp
lahf
out
pop
mov
insl
cmpl
incl
adc
add
int
xorb
or
insl
xlat
out
jl,pn
call
cld
adc
sti
pushl
adc
xor
mov
xchg
test
jl
jecxz
lea
stc
lcall
pop
fcompl
adc
sub
fdivs
ds
inc
push
cmp
push
adcl
popa
push
xor
mov
shrb
push
out
addr16
decb
mov
xchg
inc
daa
add
fimull
in
push
push
push
sbb
xor
sbb
push
xor
adc
inc
cmp
push
jne
push
sbb
inc
sbb
inc
push
fdivrl
cmpsb
jmp
or
imul
int3
je
cltd
nop
rorb
lea
sbb
shlb
push
rclb
rolb
jecxz
nop
mov
mov
pop
fimull
mov
or
cmp
mov
lret
out
test
pop
mov
or
jne
and
lea
adc
emms
sbb
sub
sub
push
push
push
inc
addb
cmp
xchg
clc
sahf
add
sub
push
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
pop
lea
jb
add
jnp
mov
movb
inc
jmp
cmove
or
jmp
dec
mov
aaa
adc
repz
sar
roll
fmuls
push
je
push
jl
jecxz
jmp
rorb
sub
push
test
dec
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
xor
mov
push
jp
imul
sub
fdivrl
mov
lea
lods
push
cmp
add
push
jbe
dec
sarb
jne
jnp
jne
jno
aaa
cmp
or
pushf
push
jl
mov
rcll
push
jbe
adc
pushf
test
add
add
cmpsb
ljmp
xor
sti
push
and
jg
icebp
jl
testl
push
xchg
negl
jo
mov
daa
dec
cmp
loop
mov
mov
sbb
cmp
mov
test
je
push
mov
inc
mov
sbb
push
sub
test
fisubs
es
out
mov
cmc
or
jp
push
or
push
or
push
or
push
data16
cmpsb
mov
sub
ficomps
dec
mov
jae
sub
fldl
cld
shr
mov
imul
dec
xor
push
dec
adc
test
mov
cli
xor
sbb
mov
js
push
cld
das
xor
cmp
add
ret
ja
clc
pushl
add
cmp
jbe
push
pop
into
cmp
jg
shlb
inc
sub
jae
mov
shr
lea
not
and
push
cld
mov
and
and
push
lea
xor
pop
loop
mov
add
insb
call
add
addr16
sti
sub
dec
rcrb
push
or
imul
push
in
sub
jmp
adcl
add
jl
sti
std
adc
clc
and
sti
add
mov
dec
pop
cmp
jbe
xor
clc
imul
fistpll
and
cmp
je
xor
clc
outsl
cs
jno
mov
shr
not
and
adc
pop
dec
add
lea
stc
push
mov
xor
es
mov
xor
mov
mov
or
sbb
test
mov
adc
fcoms
negl
or
adc
mov
cmp
jg
mov
inc
mov
mov
push
out
xor
xchg
lods
push
or
pop
ret
testl
dec
adc
push
mov
mov
adc
push
xor
lock
jecxz
sbb
fldcw
push
mov
shl
add
scas
jp
push
call
aas
adc
mov
push
or
cmp
sub
dec
inc
push
or
cmpb
pop
add
cmpsb
add
gs
rcrb
mov
adc
dec
fisubl
jle
inc
sbb
mov
adc
push
lea
loopne
mov
mov
push
cmp
or
inc
loopne
cmp
mov
inc
pop
mov
jo
fsubrl
subb
imul
cmpsl
fisubrl
js
je
aam
jmp
addl
addr16
negb
les
and
mulb
xorb
add
mov
push
fstps
xor
push
and
clc
push
or
adc
jbe
push
fucomi
fwait
orl
xchg
xchg
lds
adc
pusha
aaa
fs
xchg
sub
je
adc
push
cmp
inc
movsb
jl
lds
mov
imul
sub
clc
pop
mov
add
rorb
hlt
mov
mov
mov
push
sbb
jno
xlat
jmp
add
push
push
cli
ja
inc
sbb
sub
shr
inc
orl
sub
nop
cld
or
adc
ja
fldl
lock
call
pop
add
bound
orb
aam
sub
sub
jnp
or
fs
inc
jmp
sahf
pop
mov
jl
call
test
push
mov
jecxz
pop
mov
add
and
not
and
pop
sub
adc
repz
adc
repz
xlat
sub
pop
shr
xor
cld
clc
push
in
xchg
je
cmp
jle
pop
and
ret
mov
cmp
ret
int3
inc
adc
repz
stc
add
cmpsb
stos
lret
push
mov
int3
push
pop
and
ds
mov
add
xor
add
and
shl
jae
test
nop
dec
or
pop
push
inc
jg
jns
sub
add
pop
adc
movsl
adc
fcmove
adcb
incl
mov
enter
sub
pop
mov
lea
jmp
pop
jg
or
mov
imul
xor
adc
lcall
fwait
rclb
jmp
orl
jp
js
test
dec
mov
push
pusha
scas
jbe
insb
xor
pop
xchg
into
mulb
jbe
and
ret
cmp
clc
jl
inc
inc
or
mov
sub
pop
xor
adc
add
dec
jp
movsb
and
mov
clc
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
fld
add
insb
dec
ficoms
loope
int3
fiaddl
fimull
cmp
mov
loopne
adc
dec
add
lods
push
push
cs
decb
into
mov
out
cmp
or
push
xor
jns
dec
push
ss
pop
inc
mov
sbbb
dec
add
inc
jp
inc
jmp
ret
inc
sub
inc
cmp
push
frstor
pushf
aam
push
push
xchg
out
sub
or
mov
dec
or
loope
cs
dec
fisubl
and
dec
or
je
or
call
sbb
mov
jne
jmp
leave
jae
or
jae
xor
aaa
arpl
cmp
mov
and
lcall
xchg
pop
pop
lcall
cld
add
sbb
ss
jo
in
cli
and
mov
dec
or
or
cmc
jno
or
ret
dec
mov
je
cs
xchg
je
gs
aad
jmp
dec
mov
lock
enter
adc
outsb
leave
inc
inc
fdiv
int3
test
inc
push
pushf
mov
sub
xchg
aad
icebp
sbb
shr
mov
add
aad
push
pop
xchg
sbb
iret
push
add
fstl
push
test
and
jne
addb
or
sub
jae
in
jp
mov
cltd
pusha
dec
bound
dec
push
and
push
clc
into
xor
popf
and
jbe
repz
xor
push
or
int3
inc
pop
das
pop
xor
sub
mov
sbb
jge
inc
or
ret
clc
mov
out
or
dec
cld
or
cmpsb
call
inc
or
loopne
inc
sbb
mov
out
or
stos
pop
or
nop
mov
call
ja
jl
add
scas
and
jl
sbb
hlt
mov
lea
dec
jne
cmp
into
push
pop
add
test
jo
ret
roll
leave
sbb
sete
xor
lods
adc
sarb
adc
push
inc
pop
in
or
and
les
mov
mov
inc
mov
add
add
clc
mov
movb
sbb
cli
push
aam
loop
and
inc
stc
ja
push
daa
xor
or
or
inc
add
shrb
jmp
je
and
loopne
aad
or
inc
shl
lcall
adc
add
push
pop
dec
cmp
xor
jmp
ja
xor
lret
ret
lcall
xlat
sbb
pop
pop
xor
pusha
inc
jne
or
pusha
and
push
or
scas
and
jne
jmp
daa
xlat
stos
sub
dec
mov
cltd
sub
push
sub
jp
je
or
lods
mov
imul
in
push
cs
dec
pop
push
add
lsl
fistpl
outsb
repz
out
mov
ja
ja
jae
xchg
popf
and
or
pop
push
loopne
xchg
add
or
sbb
inc
dec
xchg
std
push
add
pop
push
or
cmp
data16
addb
sarb
call
iret
outsb
sub
into
xor
sub
fdivrs
das
data16
push
jae
push
xchg
mov
sbb
jmp
sub
into
and
cmp
adcb
stc
daa
sub
sub
cs
and
pop
enter
sub
fsubs
sub
cmp
pushf
mov
ja
sbb
xor
test
jl
inc
dec
mov
movsl
psubusw
add
pusha
fdivrp
add
lahf
jno
hlt
jne
push
aas
add
and
jne
push
rorl
xor
inc
cmp
sti
popa
cmpsb
push
pop
or
pop
pop
inc
popf
add
cmpb
pop
aam
lret
lea
les
add
sbb
inc
pop
pop
inc
xchg
ss
cli
daa
pop
add
fstl
aam
je
das
andl
out
ds
es
dec
pop
jne
addr16
and
sbb
xchg
test
mov
push
jmp
lahf
loop
faddl
mov
lcall
pop
push
in
test
je
mov
pop
push
call
sub
ja
and
mov
inc
add
cmpb
xchg
add
pop
or
adc
aam
mov
mov
inc
loopne
xor
or
call
add
shlb
mov
or
divl
inc
inc
adc
push
fsubp
repnz
les
int3
xchg
cmpsl
repnz
rolb
aam
fcoms
out
jl
jbe
faddl
call
sahf
xchg
aas
inc
mov
sub
ds
loop
andl
adc
fimuls
les
inc
adc
pushf
cmpsb
imul
pop
adc
lcall
mov
inc
stos
cmpsb
es
or
clc
push
lods
pop
into
adc
xchg
or
or
or
lret
jmp
inc
pop
inc
xor
push
or
loopne
lcall
mov
aam
push
adc
pop
sub
enter
push
mov
in
push
movsbl
jg
insb
add
rcrb
add
sub
sahf
je
sub
cwtl
aad
insb
test
lds
iret
jp
movl
pushf
jmp
andl
xchg
test
shll
movsb
scas
jbe
mov
pop
pop
lods
cmp
and
loopne
pop
mov
mov
add
jle
pushf
mov
pusha
sub
rolb
xorb
pop
lock
fistps
dec
dec
rolb
mov
lahf
xor
xor
pop
inc
lock
outsb
mov
push
cmp
outsb
bound
dec
test
inc
mov
ret
push
test
or
pushf
or
jae
scas
dec
push
lcall
gs
out
ds
mov
xchg
jne
jmp
sti
xor
jmp
in
and
in
adc
repnz
dec
bnd
jl
jmp
in
rolb
xor
dec
jmp
lea
test
fcompl
sub
and
inc
ja
adc
arpl
dec
orl
sbb
outsb
pop
pop
pop
mov
jmp
das
pop
push
cmp
not
lcall
push
lock
jmp
push
and
jge
hlt
je
enter
or
mov
subb
sbb
mov
testl
mov
lcall
xor
mov
in
sbb
fldt
sbb
cmp
cmp
or
and
or
fdivp
push
and
imul
pop
adc
aas
sbb
mov
mov
cwtl
mov
dec
orb
add
insl
movsl
stos
movsb
mov
loopne
insb
push
cwtl
xor
jnp
lock
push
pushf
js
dec
pop
cmpsb
imul
push
sbb
cmpl
jb
add
mov
pusha
test
mov
test
ds
add
out
in
jbe
jle
adcb
xor
mov
invd
inc
adc
adc
inc
mov
rorb
lods
fldt
and
push
pop
mov
lock
mov
pusha
pushl
jge
cmp
jb
mov
lea
movsl
add
or
mov
dec
or
std
xor
fcoml
jg
xor
and
and
insl
scas
mov
and
shlb
xor
ds
andl
adc
sbb
jle
sbb
ja
ja
mov
or
jl
pop
xchg
out
jb
movb
int3
movsb
jne
cmp
enter
jne
test
dec
les
jne
inc
or
cmp
push
add
call
stos
mov
jne
push
pushf
mov
aaa
mov
mov
movsb
add
add
lods
sbb
pop
test
ds
sub
or
imul
in
scas
shl
or
lea
mov
lock
mov
mov
mov
ss
ja
push
data16
xor
subl
lcall
cld
inc
cmpsb
sub
lcall
jg
add
or
mov
faddl
jne
sbb
test
adc
aam
aaa
leave
clc
add
lock
aas
or
push
andb
lds
jge
jg
or
adc
inc
mov
les
lcall
pushl
pop
push
push
cld
lods
sub
shrl
and
inc
loopne
shr
or
mov
sahf
dec
imul
pop
add
leave
out
push
outsb
fstpt
push
ja
insb
aam
loope
mov
dec
into
sub
lret
cmp
mov
add
ficompl
rorb
jo
sti
pop
fidivs
in
fiadds
push
call
or
inc
fidivl
cs
das
jle
jb
into
out
ret
mov
shr
push
add
jmp
mov
sbb
pusha
or
sub
ficomps
xchg
lret
into
jmp
scas
test
push
jae
fwait
loop
enter
jae
jno
les
and
pop
inc
int3
cmpsb
xorb
lret
aad
jmp
sub
add
mov
negb
pop
in
add
adc
and
inc
bound
add
or
dec
pop
rcrl
push
push
pop
sub
rcr
inc
nop
mov
push
push
add
dec
pusha
shll
xor
iret
push
push
push
add
pushf
mov
adc
xchg
push
push
pop
push
add
subl
mov
mov
test
mov
jmp
xchg
loopne
movb
or
or
fidivl
or
cmp
xor
jo
adc
or
ss
lcall
and
mov
pusha
adc
dec
mov
enter
cld
xlat
add
mov
sub
add
and
cld
push
inc
push
js,pt
lea
lret
loopne
lea
push
cld
jl
pusha
and
and
mov
dec
add
movsb
sar
cmp
xor
pop
mov
mov
ljmp
mov
add
push
mov
dec
dec
adc
mov
leave
insl
inc
popa
loopne
in
dec
std
push
loopne
mov
es
dec
incb
push
outsl
jecxz
inc
add
lea
aas
push
xchg
jge
or
inc
or
inc
adcl
lea
loopne
xchg
repz
push
cmp
jo
ret
dec
add
jmp
xchg
orl
or
rolb
shl
push
sub
and
add
inc
lods
aas
push
aaa
aas
dec
pop
call
add
sub
adc
jne
or
je
adc
mov
movl
icebp
stos
inc
enter
loope
mov
adc
xor
pop
sarb
pusha
push
jl
add
pop
sub
sarl
and
and
cmpl
xor
sub
push
sbb
fcoml
or
adc
hlt
data16
jmp
imul
pop
stos
or
adc
jno
jmp
jg
cmp
fdivrs
xchg
rcrb
adcl
jl
cmp
or
mov
pop
pop
sub
xor
aaa
inc
sbb
dec
dec
addb
incl
adc
xchg
or
arpl
inc
pop
fadds
sbb
dec
dec
jl
pop
adc
dec
sbb
dec
inc
and
push
mov
jne
mov
insl
dec
and
dec
add
xchg
xor
clc
mov
in
sbb
or
push
sbb
mov
shrb
sbb
cmp
insb
sub
inc
add
add
cmc
push
or
pop
mov
inc
out
inc
jo
rol
inc
push
sub
inc
cmpsl
aad
add
sub
push
and
lret
rol
jne
dec
shlb
int3
or
ret
push
jl
out
lods
mov
add
pop
mov
inc
bsf
push
xor
add
mov
cmpsl
lock
xor
icebp
mov
sbb
pop
and
pop
inc
jae
pop
add
and
stos
xchg
push
pop
lea
out
loopne
or
icebp
test
sbbl
and
int3
jmp
fiaddl
add
popa
out
dec
sub
aam
pop
sahf
push
sar
lcall
mov
inc
jp
push
stos
xor
sub
add
adc
xor
add
test
xor
jmp
inc
insb
cmpsb
adc
iret
sub
lock
xor
mov
loopne
mov
sub
mov
or
jne
or
cmp
jle
xor
cmp
xor
add
inc
imul
cmp
xchg
push
mov
push
push
jge
sbb
fwait
push
aad
mov
add
sar
mov
jle
popf
daa
or
or
sbb
not
fidivl
rcrl
aad
stos
xchg
mov
ret
es
dec
clc
jno
pop
fs
push
sar
testb
sbb
das
insb
pop
pop
push
pop
jl
adc
test
jl
inc
pushl
pop
mov
inc
lea
sbb
xchg
jns
scas
ja
pusha
dec
sub
out
mov
popf
pop
cmpl
push
cmp
jbe
inc
in
sbb
mov
fbstp
addr16
mov
mov
adcb
lods
cld
scas
movb
adc
push
hlt
mov
mov
test
jmp
movsbl
inc
insb
lods
rcrl
jnp
out
pushf
sub
jp
in
pop
enter
push
mov
cmp
sbbl
dec
loopne
test
call
jmp
dec
cmp
lea
push
dec
hlt
lea
add
lods
jnp
inc
xor
or
lcall
inc
mov
test
sbb
add
jecxz
clc
cmpsl
xor
sarl
cmp
test
adc
add
mov
push
test
or
jno
add
loope
xlat
mov
add
push
dec
push
jmp
add
xor
mov
mov
js
add
inc
int
hlt
lock
daa
sub
cmp
cmp
cmpsl
push
cmp
test
test
je
mov
sbbb
sub
cmp
sbb
cmp
jb
loopne
jge
mov
mov
inc
mov
sbb
dec
rcll
sbbb
mov
inc
test
dec
and
jbe
ret
xchg
aad
sub
sbb
aaa
mov
cmp
mov
scas
pushl
adc
cli
or
js
lds
adc
addr16
mov
fsubrs
push
cmp
xchg
sub
and
dec
pop
ffree
inc
pop
inc
add
aam
cmp
jmp
push
cltd
sbb
pushl
in
jl
or
addr16
nop
lret
inc
cmp
cmp
jae
mov
lods
movsl
std
pop
lret
push
orl
pop
mov
inc
inc
sbb
sahf
add
ss
decb
adcl
jb
add
sub
xchg
dec
inc
movsb
inc
mov
stc
pop
xchg
cmp
lahf
loopne
out
add
push
xchg
movb
addl
adc
jmp
insb
push
fdiv
pop
lock
scas
sub
jae
adc
cmp
jno
pusha
shl
fmul
xchg
frstor
push
lea
jae
je
add
jmp
push
lock
sbb
pop
sti
mov
pop
or
aas
rcrl
repnz
lea
mov
xchg
inc
pushl
lods
adc
lret
xchg
inc
ja
fdivrs
add
jne
ljmp
aad
cmp
adc
xor
fcomps
jmp
iret
je
in
mov
inc
je
xchg
cmpb
xor
jp
shll
mov
mov
pop
call
pop
mov
inc
cltd
and
das
push
enter
xchg
shll
js
mov
mov
cmp
jmp
in
test
lret
sbb
loopne
xchg
inc
mov
push
xchg
adcl
and
push
xchg
cmp
loope
popf
testb
dec
inc
icebp
jns
decl
js
mov
mov
in
and
xchg
push
inc
and
imul
adc
orb
je
movsl
popa
mov
out
pop
sub
sub
mov
inc
jecxz
decb
adc
or
mov
add
aas
mov
not
js
add
stos
push
sbb
call
pop
adc
lock
lret
in
int3
call
push
sbb
inc
and
and
or
lods
std
shlb
push
nop
pop
push
mov
and
hlt
nop
jo
nop
add
incb
push
jecxz
lret
nop
lock
in
xchg
dec
ret
in
push
fldln2
inc
std
cltd
push
adc
or
xorb
mov
cld
adc
or
jb
icebp
jg
clc
mov
or
mov
sub
cmp
ja
push
xchg
dec
inc
stos
mov
or
mov
xchg
std
lods
leave
rolb
shl
shlb
mov
mov
sbb
lret
in
shl
cwtl
daa
dec
jecxz
daa
ja
mov
sub
push
pop
or
add
xchg
lret
and
mov
cmpb
add
mov
cmp
stc
out
testb
stc
or
xchg
mov
std
adc
xor
jge
cs
call
in
imul
mov
push
or
lods
xor
je
scas
cmp
js
outsb
mov
std
dec
cmp
inc
sub
add
ficoml
pop
and
in
jmp
sbb
jne
inc
jne
jecxz
mov
xor
cltd
inc
fs
aad
cmpsb
rclb
imul
cmpsl
test
mov
lods
cmp
push
or
push
jae
adc
xor
push
leave
and
cmpsb
aam
mov
mov
jne
rorl
repz
ret
xor
scas
movsb
rcr
xor
loop
stc
icebp
call
jge
sbb
stc
js
sbb
dec
out
or
clc
adcb
into
push
inc
cmp
test
in
mov
pop
lds
test
std
cwtl
add
cwtl
and
mov
cmp
xchg
stc
mov
cltd
push
adc
notl
sbb
arpl
mov
enter
dec
sahf
mov
mov
daa
mov
sahf
add
push
inc
push
je
inc
cld
lods
mov
hlt
std
loopne
sti
movsb
lods
mov
enter
mov
rcrb
push
sub
jno
popa
xor
pop
aas
or
dec
mov
jo
je
inc
imul
fisttpll
mov
std
dec
sub
jecxz
mov
and
xor
mov
push
mov
std
lock
aaa
addr16
and
lea
arpl
std
icebp
push
jb
std
xor
pop
mov
lds
and
roll
sbb
pop
lea
jae
shlb
mov
sub
mov
stc
mov
call
call
std
push
mov
ret
cmp
push
mov
sbb
xchg
daa
mov
imul
sub
fidivs
lds
mov
lea
test
std
out
imul
mov
rcrb
push
mov
cltd
sub
push
ds
je
icebp
push
push
mov
scas
xor
std
mov
mov
test
rcrb
out
imul
add
movb
mov
add
push
pop
dec
xor
roll
shrb
xor
dec
inc
dec
jecxz
dec
inc
adc
sbb
dec
cmp
cmp
pop
enter
std
lock
call
inc
call
xor
std
clc
fidivl
test
scas
shlb
pop
sbb
std
inc
repz
lock
xchg
daa
loopne
in
popa
push
sub
decl
das
ds
shrb
cs
shl
sub
test
sub
out
sbb
inc
jmp
dec
lods
add
xchg
cmc
sarl
sar
dec
movsl
pop
lock
xor
push
mov
ret
jle
jmp
test
sbb
jmp
test
je
and
mov
int3
cmp
fsubrl
or
push
sahf
jl
std
mov
sar
cmp
mov
aam
xchg
xchg
jl
dec
lock
dec
xorl
push
adc
fbstp
push
lcall
aam
mov
movsb
adc
push
js
jp
add
push
inc
lret
jne
cmp
inc
gs
pusha
xchg
sbb
mov
pop
or
gs
mov
das
push
sbb
jno
push
je
xor
push
and
std
std
loope
push
adc
sub
lea
sbb
sub
and
nop
aam
inc
add
movb
repz
add
add
cs
xor
or
mov
shll
sbb
mov
loope
inc
int
push
movb
and
shlb
loopne
pcmpgtw
add
repnz
and
or
test
mov
pop
inc
and
enter
fcmovnb
jecxz
or
cmp
jp
clc
cmp
out
and
dec
sbb
sbb
ret
add
xor
les
sbb
cwtl
inc
or
in
adc
pop
les
pop
icebp
cmp
jl
or
mov
and
push
pop
cmpsl
push
xchg
in
aam
inc
jmp
lret
dec
push
jo
loopne
or
add
or
xor
dec
cmp
pop
jle
loope
dec
lret
jne
or
sub
dec
cmp
lods
imul
jge
inc
mov
or
lods
cmp
test
popa
and
nop
shll
push
cs
and
xchg
and
jge
xor
add
leave
push
dec
dec
jecxz
sar
fcmovb
mov
xor
pop
div
mov
fidivl
inc
mov
add
sub
cmp
add
xchg
addb
xor
popf
mov
xor
dec
imul
sbb
mov
dec
adc
jno
fidivl
adc
les
jle
jge
cmp
pop
cmp
push
hlt
cmp
je
movl
imul
sbb
je
push
inc
xor
imul
testb
jne
or
push
adc
loope
lss
pop
add
inc
nop
mov
and
loope
mov
cmp
or
imul
inc
add
mov
jae
cmp
frstpm(287
adc
sub
cmp
out
aam
loope
imul
xor
mov
lea
test
ja
cs
xor
sub
cmp
je
movl
inc
clc
call
fdivrs
add
push
mov
mov
jmp
cmpsl
cmovle
cmp
ds
push
scas
loopne
mov
popa
push
lock
neg
sbb
and
xchg
int3
and
cmpsb
repz
pop
sub
add
inc
jne
lret
dec
dec
xor
inc
dec
mov
lea
insl
xor
add
or
bound
sbb
pop
test
sub
ret
push
push
test
add
fucom
push
notl
incb
aas
and
adc
or
xor
cmp
lea
push
ficoml
test
ret
aad
jg
mov
stc
enter
and
pop
pop
or
lahf
xchg
mov
add
or
sbb
pop
icebp
insb
dec
lods
pop
add
mov
into
repz
jp
rol
inc
mov
xor
mull
jnp
imul
pop
in
xchg
fmuls
mov
jne
adc
shll
cs
push
cwtl
cmpb
dec
testb
jge
cld
adc
mov
push
mov
add
call
and
gs
pop
daa
add
sub
dec
push
shr
loop
cmp
push
dec
sbb
sti
sbb
inc
pop
mov
jns
add
pop
cmpb
inc
or
lret
lcall
add
data16
dec
add
push
es
add
cs
fsub
and
test
and
add
mov
mov
adc
leave
sarb
and
aam
shll
dec
xor
adc
or
jb
and
shr
add
cs
inc
mov
xchg
dec
add
outsl
push
pop
mov
inc
dec
or
test
adc
or
add
sbb
sbb
jp
pop
push
or
xor
rorl
or
sub
inc
jmp
pop
clc
push
add
and
adc
std
or
jmp
inc
and
mov
and
xor
and
jecxz
jge
into
xor
push
mov
xchg
jmp
sbb
sub
rorl
loopne
xor
sub
or
push
test
fcos
sti
out
sti
out
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
dec
and
add
fstp
jmp
pusha
pusha
mov
stos
subl
push
loope
addb
lods
lret
cli
inc
testb
andl
adc
stos
repnz
sahf
sti
add
add
xchg
add
lahf
loopne
fisttps
loop
push
ret
mov
dec
je
add
dec
addb
scas
jmp
push
and
or
xlat
outsb
adc
testl
shr
imul
and
pop
sbb
fwait
xor
push
and
or
jnp
jmp
inc
push
fstps
jmp
fisttpll
and
test
mov
xor
xchg
push
out
dec
aas
pushf
push
inc
xor
cmp
mov
push
inc
rcpps
xchg
pop
sub
test
int3
or
dec
aad
adc
xor
lret
xchg
add
dec
popf
js
inc
and
jno
cmpsb
xchg
push
aaa
shlb
sbb
incl
mov
fcompl
or
add
jnp
jmp
into
mov
sub
jmp
sub
in
jp
push
or
or
dec
psubusw
xchg
push
sbb
adc
mov
xorb
add
xor
scas
mov
xchg
xchg
add
or
inc
in
cmc
bound
xchg
into
jbe
or
lock
fmull
or
addb
fiadds
add
enter
pushf
push
adc
push
shlb
dec
into
and
pop
sarl
shrl
sbb
jp
dec
in
out
push
shl
adc
mov
sub
push
jp
push
sahf
jmp
pop
pusha
shlb
je
clc
adc
gs
std
pop
sbb
adc
xchg
and
and
je
add
xor
xchg
xchg
sub
movb
or
push
push
add
mov
sbb
mov
sbb
pop
jg
sub
add
add
lds
jae
mov
add
and
pop
adcl
cmp
imul
pop
test
je
sbb
testb
inc
icebp
pop
fiaddl
or
xchg
imul
dec
ret
and
mov
shll
push
or
insb
jo
daa
popa
sbb
test
xor
pop
loop
mov
fwait
jno
int3
push
mov
and
xor
adc
shrl
or
or
sbb
inc
jmp
repz
or
push
jno
push
sub
scas
adc
mov
mov
push
mov
cmp
adc
testb
jle
mov
lea
push
sub
fadd
or
lret
and
decb
adc
and
je,pn
dec
adcb
cld
popa
int3
pop
sgdtl
mov
adc
inc
adc
push
jns
add
push
sbb
jg
or
jae
sbb
or
ret
mov
pop
mov
and
mov
insl
sbb
fldcw
adc
mov
or
dec
or
fldcw
push
push
pop
jle
inc
push
inc
or
sub
jae
cmp
or
push
ficoml
inc
adc
sahf
mov
pop
or
fstp
sbb
fldpi
xor
add
add
xor
push
lock
je
sbb
je
add
push
dec
dec
stc
out
mov
andl
or
and
push
xchg
movsb
lahf
inc
lcall
adc
insl
push
cltd
or
inc
popa
mov
es
fisttpl
cltd
sbb
pop
cmp
sub
divb
dec
cwtl
in
and
jno
adc
sahf
and
lea
xchg
pop
or
inc
inc
jnp
inc
sbbl
and
push
mov
or
sub
mov
add
aam
test
mov
add
or
push
ds
inc
cmp
rcr
fisubl
jmp
iret
sbb
xchg
dec
daa
pusha
mov
mov
testl
push
sbb
inc
xchg
and
je
push
jne
xor
sarl
pushf
adc
loop
or
pushf
rcl
js
lret
xor
stos
aaa
cmpsb
mov
lock
jb
stos
add
adc
insl
push
push
fcmovnb
mov
jne
mov
jmp
lock
je
and
pop
push
push
je
das
cs
icebp
mov
ljmp
dec
test
inc
hlt
jne
andl
mov
and
add
popa
and
arpl
pop
adcb
test
lea
andl
adc
mov
xor
mov
push
cmp
push
movb
dec
dec
jnp
xor
stc
pop
cmp
mov
and
les
es
or
or
add
add
adc
and
xchg
pushw
adc
std
inc
push
add
imul
into
ficoms
stos
dec
sbb
rolb
pushf
icebp
dec
lods
jbe
pop
hlt
add
push
aas
xchg
data16
aad
out
or
mov
sub
jo
gs
add
xor
xor
stos
mov
dec
test
shll
lea
adc
lcall
inc
insb
or
imul
adc
gs
dec
and
aaa
adcb
xchg
inc
jmp
dec
sar
mov
jmp
shl
push
mov
mov
mov
imul
push
enter
sbb
push
jne
jne
lret
mov
xor
push
call
cmc
cmp
lock
push
andl
sbb
xor
adc
orl
shll
sbb
cmc
aaa
dec
sub
pop
push
sbb
into
push
outsl
out
jg
mov
or
lahf
inc
shlb
pop
sub
test
adc
fldt
cmp
add
bnd
lea
lea
or
cmpl
push
mov
mov
add
sbb
add
inc
aaa
jecxz
dec
shlb
mov
xor
xor
xchg
push
rolb
xor
add
or
jb
adc
hlt
loopne
imul
in
scas
jne
ret
dec
dec
and
pushl
add
sub
push
loop
fs
or
dec
inc
pop
push
pusha
xor
sbb
ljmp
sahf
mov
out
push
mov
or
cmpsl
and
jp
pop
pop
inc
or
and
pop
stos
adc
jp
clc
push
mov
jno
add
or
cmpb
sbb
jne
popa
outsl
mov
push
push
cld
pop
pop
sbb
jo
mov
pop
pop
sub
and
jl
cmp
sub
and
push
icebp
dec
movsl
lock
lahf
mov
sub
adc
insb
push
mov
aad
mov
jb
jp
daa
push
je
inc
sbb
jbe
outsl
ljmp
mov
push
sti
add
xlat
rorb
sub
push
sbb
and
test
and
lar
ltr
or
inc
add
dec
push
bound
test
or
adc
addl
or
pop
add
mov
inc
in
cmpsb
xorb
cs
ret
mov
and
push
adc
test
std
or
jl
pop
pop
arpl
cmp
dec
dec
test
pop
repnz
xchg
jne
mov
dec
adc
dec
cmp
xor
add
push
jmp
sub
push
jecxz
or
push
add
or
xor
lock
adc
pop
pop
mov
add
xchg
icebp
fstl
outsb
add
adc
xchg
mov
loope
dec
add
mov
addr16
adc
fucomp
push
cli
gs
and
ja
dec
cmp
ret
idiv
push
pop
call
inc
ret
int3
je
and
cmpsb
aaa
fists
mov
dec
push
pop
pushf
dec
or
lea
insb
ret
outsb
sbb
push
sub
out
flds
movsb
mov
push
mov
xor
shr
xchg
mov
add
adc
bound
mov
xor
cmp
xchg
and
xchg
jns
dec
mov
push
sub
clc
add
div
dec
je
mov
fstpt
cmpsb
mov
je
sub
or
inc
fidivs
dec
or
add
pop
xor
movsb
sarb
and
jge
sti
enter
add
movsl
loopne
and
or
sbb
cltd
jae
pop
lret
jnp
mov
mov
dec
in
pushf
nop
lcall
inc
inc
stos
testb
dec
out
lds
push
out
pop
inc
dec
cs
or
hlt
cmpb
nop
or
andb
dec
icebp
sbbb
pop
ret
adcb
xchg
and
inc
pop
or
cwtl
insb
scas
sbb
mov
inc
add
mov
dec
test
push
stos
mov
testl
movb
jmp
out
jmp
lcall
mov
rorb
popl
icebp
inc
cmpl
xchg
or
adc
push
mov
mov
outsb
add
sub
xor
imul
push
jo
or
mov
testb
sti
inc
sbb
add
pop
mov
or
mov
sbb
jecxz
ds
mov
test
js
inc
mov
mov
sbb
clc
add
decb
jb
dec
push
or
mov
mov
adc
push
ficomps
movsbl
pop
loopne
sub
or
fsubr
inc
in
stos
add
and
xchg
jo
fcom
shrl
mov
sbb
inc
sub
adc
adc
cltd
outsb
push
daa
mov
lods
mov
sub
cwtl
mov
xchg
dec
cmp
int3
je
js
xchg
clc
add
rorl
xor
mov
add
rolb
xchg
fs
push
mov
mov
jg
sub
rclb
sub
mov
push
subw
int3
mov
xor
in
repz
adc
mov
or
inc
inc
clc
int
fisubl
add
es
aam
sub
jl
or
aas
mov
frstor
add
xchg
and
nop
fisubrl
movsb
jge
mov
sub
pop
clc
adc
jp
lcall
jns
dec
jle
pop
test
mov
jle
cmp
test
sbb
xor
push
imul
add
dec
sub
push
out
shlb
or
sub
lea
and
and
xchg
fs
dec
add
loopne
or
or
loopne
xchg
inc
test
jo
and
aad
fs
clc
mov
xchg
cmp
sbb
inc
jmp
jo
xorl
mov
popa
or
fdivs
xor
fimuls
icebp
dec
and
xor
adc
fldt
adc
bound
ss
adc
hlt
sbb
sti
jmp
ds
xchg
or
push
mov
push
mov
jmp
scas
pop
lock
jg
mov
adc
shld
shl
aaa
or
cmpsb
ds
push
aas
lods
rcl
ljmp
shr
pop
dec
adc
les
sbb
dec
push
jns
inc
ss
mov
and
lret
dec
and
bndstx
inc
and
xor
add
or
pushf
mov
pop
loopne
inc
nop
adcl
pop
inc
push
pop
ljmp
cmp
divl
adc
and
push
dec
or
add
es
mov
sub
sbb
roll
inc
jmp
aas
loope
xchg
adc
mov
fstcw
jge
cltd
loope
and
orb
divb
movsb
push
in
leave
fstl
sub
jnp
jl
lea
jecxz
add
je
std
cmpl
jmp
or
fcoms
add
fldl2t
push
fiadds
lahf
bsr
popa
mov
hlt
sbb
sub
ja
test
rcrb
cmp
sbb
jge
cmp
je
push
xor
mov
jg
loop
insb
mov
and
jne
icebp
sbb
inc
inc
jl
sbb
sub
push
ss
xchg
sbb
adc
mov
pop
and
xchg
outsl
adc
fldl
std
fstp
fld
fabs
fcompl
out
push
aam
jae
fmull
pop
add
cmp
nop
loopne
jbe
lock
insb
pop
jbe
or
clc
or
test
jne
icebp
sbb
scas
movsl
movsl
cmpb
insl
mov
jge
sbb
pop
mov
rorl
mov
push
jo
inc
pmaxsw
out
fldl
pop
adc
btc
lods
xchg
mov
inc
mov
inc
push
mov
jne
or
push
inc
xchg
adc
jb
pop
ror
data16
fmuls
nop
cli
push
neg
insl
imul
add
jns
push
add
mov
iret
add
jmp
mov
jb
pop
aad
or
and
lods
setp
mov
pusha
push
pusha
mov
shlb
ja
cli
shl
sar
shl
and
xlat
ret
inc
push
loope
inc
fiaddl
fmuls
and
sub
jnp
gs
cmp
and
rol
mov
add
or
in
or
fbld
in
sbb
adc
sti
mov
out
ret
or
bound
and
decl
pop
mov
jl
pop
ret
stgi
add
fcomp
xchg
add
jmp
pop
faddp
test
and
fldt
jge
cmpb
sub
je
fchs
add
add
push
dec
incb
add
add
sbb
push
sub
test
sub
pop
loopne
sbb
ret
shr
cmpb
cmp
inc
ljmp
fstps
sbb
add
or
loope
shl
fldcw
ret
pop
pop
fmuls
inc
sbb
shrl
into
sub
les
jmp
push
inc
or
adc
stos
adc
sub
or
jb
push
scas
sbb
fwait
out
in
inc
mov
mov
fcompl
adc
pop
fcmovu
inc
push
push
fdivr
adc
aaa
jnp
sub
ret
and
insb
in
scas
and
out
jno
xor
enter
jnp
fcomp
dec
scas
insl
iret
fsubrs
lea
push
nop
push
xchg
pop
lret
mov
pop
cmp
insl
mov
jge
xor
das
inc
lret
in
lret
xor
fwait
cmp
mov
dec
jge
xor
pusha
imul
jb
lret
int3
lret
cwtl
sub
adc
dec
pop
in
movsl
jge
xor
or
pop
jb
nop
int3
int3
int
int3
xchg
fsubl
cmp
sub
out
adc
fidivl
movsl
das
inc
add
into
dec
outsb
xchg
int
or
mov
push
jnp
jge
or
insb
in
xor
cs
into
iret
mov
mov
into
cmp
mov
loopne
mov
xor
call
sti
outsb
mov
and
fldl
fnstsw
sbb
ljmp
dec
jmp
push
or
outsl
pop
pop
mov
sub
enter
in
cmp
je
seta
and
or
dec
leave
fisttpll
add
or
and
enter
fildl
cmp
sbb
xchg
fs
nop
add
inc
gs
sbb
gs
addr16
pop
ljmp
push
sbb
push
xor
dec
xchg
jno
jb
shr
mov
cmpb
cmp
or
or
pop
jb
mov
cs
push
mov
stos
test
pop
adc
inc
ret
das
sarb
xor
jb
fldl
ja
xor
bswap
cmp
sub
push
in
jg
mov
ss
or
sub
mov
es
lret
sub
adc
jb
loopne
fstp
jmp
pop
js
outsl
mov
or
es
xor
jl
xor
mov
cmp
aas
jbe
add
filds
add
add
out
fabs
or
fcom
popa
xor
or
add
or
cmpl
and
or
adc
clc
sbb
xor
rol
cld
je
fchs
jmp
das
clc
int3
pusha
mov
fnsave
jae
sahf
insl
leave
adc
cld
mov
cmp
int
sbb
fs
insl
fs
xor
andl
push
mov
fstps
sbb
pop
xor
xor
xor
fwait
pop
pop
jl
push
test
in
mov
jo
ret
mov
or
jns
ret
cmp
lcall
sub
and
testb
sbb
inc
hlt
sti
sbb
pusha
leave
mov
fsubrp
and
inc
or
cwtl
je
sbb
adc
add
cmp
and
add
cmc
jp
push
xchg
inc
add
add
jne
pop
lock
nop
pop
dec
or
and
add
xchg
fisubl
or
in
or
repz
dec
xchg
push
push
shll
fsub
push
xor
test
insl
jmp
popf
dec
xor
in
mov
cmp
gs
xchg
xor
dec
leave
jnp
ret
or
jnp
addb
fcoml
adc
test
xor
and
xor
insb
add
mov
les
jl
push
je
mov
sub
pop
adc
clc
mov
xor
dec
sub
lea
mov
mov
or
cmp
pushl
cmp
aas
add
les
lods
mov
pop
rclb
and
lahf
test
loopne
test
leave
inc
mov
mov
cmp
outsb
sbb
jl
sarb
ret
pop
cltd
sub
mov
push
mov
add
and
rclb
dec
push
mov
xor
sub
mov
iret
test
int3
mov
mov
std
cmp
jne
mov
mov
jmp
adc
outsl
repnz
data16
add
push
jae
adc
outsb
movsl
or
imul
inc
sub
fscale
push
imul
fsubl
fdivrs
aad
jno
dec
aad
and
mov
es
fcoml
fimull
adc
mov
mov
add
or
enter
mov
pop
shrl
adc
sbb
mov
cmp
test
cmp
jl
cmp
jg
inc
jmp
push
hlt
mov
xchg
jne
imul
pop
rolb
xor
aas
sbb
lock
movsbl
roll
popa
pushl
xchg
xor
daa
and
jne
popa
sub
mov
adc
in
leave
adc
dec
in
stos
and
sub
jp
loop
loopne
and
lods
cmpb
or
mov
stos
add
fwait
add
push
cltd
pop
idiv
aam
xor
and
cltd
mov
add
mov
pop
and
adc
insb
pop
sub
lea
mov
inc
jg
lahf
test
pushf
ret
cltd
sbb
rorb
adc
mov
xabort
xlat
imul
cmp
rol
sbb
pushf
fs
in
subb
jo
sub
pop
cmp
jg
stos
add
stc
jmp
add
pop
add
outsl
les
sbb
insb
inc
subb
or
jle
cmp
clc
sub
jmp
icebp
xchg
sbb
push
insb
and
mov
pop
adc
mov
jne
imul
dec
and
and
leave
call
mov
add
xlat
xor
push
jmp
xlat
mov
xor
mov
mov
mov
cwtl
aam
popf
add
psubq
out
incb
pop
es
sbb
or
movhps
idiv
add
outsl
loopne
push
lock
hlt
jne
stc
fcoms
and
xor
cli
and
push
dec
lret
lock
cmp
cmc
dec
inc
add
ret
push
negb
add
fidivs
sbb
bswap
push
out
jns
push
sarb
jne
in
xchg
push
push
jmp
pop
push
push
push
push
addr16
in
cltd
mulb
movsb
xor
je
js
lret
in
pop
jo
out
outsb
imul
mov
sbb
mov
push
cmp
or
sbb
inc
mov
jge
jl
fiadds
bound
add
rcll
push
push
jnp
mov
xchg
rcll
stos
dec
mov
pop
fbstp
jge
cmp
push
sarb
andl
push
jge
clc
sbb
insl
mov
jl
jg
push
jle
jge
push
sbb
push
call
movsl
call
jmp
jne
addr16
ja
popf
rol
je
in
dec
xor
rorl
imul
fsubrl
push
add
daa
adc
cmp
cmp
pop
sub
adc
or
push
sbbb
push
cmpsb
push
enter
clc
xchg
cli
negb
or
inc
fstl
mov
push
jno
xor
scas
inc
or
mov
pop
inc
sub
jg
jl
cld
adc
pushl
jmp
notb
jg
xor
es
xchg
ja
push
push
test
add
xor
add
lea
mov
adc
push
push
or
push
es
call
flds
jb
fimuls
lea
dec
lea
inc
push
push
add
aaa
daa
sub
sbb
push
xor
push
xchg
push
and
push
mov
jg
mov
pop
andl
cmpb
mov
mov
inc
mov
jne
pushf
stc
mov
mov
outsb
daa
inc
add
outsl
jmp
ss
cmp
jae
pop
adc
add
push
pushf
xor
adc
xorb
ret
cmp
adc
cltd
xor
add
mov
pop
in
add
or
mov
aas
js
jl
inc
add
or
jl
dec
dec
pop
sar
sub
push
add
xor
cld
ja
adc
push
push
sbb
push
mov
or
icebp
call
mov
jle
push
dec
inc
inc
fldcw
or
cmpsb
push
sbb
mov
push
cmp
and
ja
adc
leave
inc
insb
jno
mov
mov
mov
call
pop
sbbb
jge
inc
fnsave
fdiv
fiaddl
sbb
es
ss
sbb
or
xchg
lods
sbb
mov
adc
xor
sub
jecxz
rcr
lods
fcomi
sbb
and
dec
add
sbb
stc
push
inc
sub
out
and
loopne
and
js
mov
icebp
xor
movsb
lret
add
orb
jmp
popa
arpl
sbb
gs
adc
push
out
or
adc
push
or
mov
mov
lcall
arpl
jecxz
add
stos
movsb
lahf
ss
add
or
push
inc
add
push
and
or
add
jno
jnp
adc
cmp
jne
movsb
jbe
xor
ljmp
add
mov
jo
icebp
daa
lcall
pop
jmp
or
dec
sbb
js
cs
ss
xorb
and
pusha
fnsave
pop
mov
je
pop
enter
inc
jnp
dec
xchg
aam
daa
mov
push
mov
adc
bound
ret
add
or
test
sub
jp
pop
push
jne
mov
rorl
int
jmp
push
push
push
xchg
push
dec
pop
sarl
insb
sbb
lea
or
pop
adc
dec
test
inc
or
in
sub
cmp
jmp
or
add
mov
jns
mov
mov
test
jbe
jnp
sub
sub
jmp
inc
loope
push
xchg
cwtl
mov
jl
push
jne
xor
out
xchg
push
adc
add
jmp
inc
cmp
movsb
shl
mov
pushl
aaa
and
jl
test
sbbl
leave
dec
inc
pop
adc
push
movl
mov
aaa
call
test
mov
add
or
jne
fs
in
mov
push
mov
lods
mov
jbe
push
and
pop
dec
mov
pusha
or
cli
add
push
mov
or
mov
xor
or
bnd
cmp
jae
dec
lea
pop
pop
mov
mov
jbe
mov
ds
jmp
loopne
adc
call
rorb
pop
sub
push
imul
push
test
fldcw
cmp
add
test
push
or
je
mov
mov
add
add
xchg
das
sub
jne
xchg
insb
adc
mov
jbe
xor
pop
decb
push
popa
xor
lds
push
xchg
sbb
movsb
mov
sbb
test
adc
and
rolb
and
dec
or
cltd
push
outsb
fadds
aaa
push
pop
jle
sub
add
mov
dec
jge
call
push
out
pop
cmp
adc
fcmovu
pop
imulb
lea
shll
sub
popf
sbb
cld
jmp
cmp
test
cmpsb
sub
cmp
aaa
sbb
jne
xorb
pop
pop
mull
xor
inc
xor
xchg
inc
mov
cmp
add
nop
add
jmp
ret
aaa
out
pop
cmp
add
imul
cmp
push
adc
fs
jmp
xchg
dec
test
call
pop
adc
or
sub
insb
sub
push
loope
repnz
cs
jae
inc
inc
add
sbb
aam
inc
jns
je
dec
cli
adc
jg
cmc
fcmovnb
add
sti
call
cmp
sub
icebp
mov
in
inc
clc
add
jge
xor
cmpsb
mov
shrb
fcomps
daa
adc
push
xchg
out
pop
xor
xor
push
jmp
add
je
sbb
add
fs
sub
jno
mov
mov
ja
int3
dec
jo
mov
je
mov
add
dec
jne
pop
lock
xchg
rorl
push
lretw
rclb
loope
icebp
adc
lahf
pop
je
shl
inc
or
mov
cmp
and
push
push
push
or
inc
mov
push
aaa
adcl
pop
cmp
pop
jl
xchg
stc
pop
push
adc
lcall
stos
xchg
inc
jmp
push
pushf
xchg
inc
cmp
push
add
sbb
fwait
loopne
and
adc
pop
ljmp
mov
arpl
xchg
add
out
add
or
push
lods
mov
and
add
push
into
loopne
sahf
ja
sbb
inc
adc
or
out
dec
cmp
or
add
inc
in
push
xchg
mov
cmp
or
pushl
ljmp
push
ret
xchg
shl
inc
jle
jg
push
pop
pop
andb
sub
pop
nop
in
mov
hlt
dec
push
sub
jge
mov
popa
mov
push
mov
aam
sub
std
rcr
lock
decl
inc
jg
mov
je
gs
es
mov
jne
jg
aaa
cmp
je
clc
mov
inc
inc
cmp
je
cmp
mov
cli
orb
imul
add
or
lods
fidivrl
dec
je
and
mov
push
cltd
sbb
test
mov
pop
aam
mov
incl
fdivr
mov
imul
sbb
jae
jecxz
pop
sub
pop
out
mov
mov
or
out
popf
or
inc
mov
sbb
lret
mov
add
dec
push
jl
test
test
movl
inc
clc
insl
push
mov
addr16
and
jle
and
ret
clc
arpl
cmp
mov
mov
mov
dec
mov
mov
jne
int3
or
or
shlb
push
pop
es
shlb
mov
nop
push
pop
or
rcr
frstor
sub
dec
movsb
jb
test
dec
pop
jns
inc
in
fnstenv
lret
mov
add
fiaddl
daa
dec
mov
into
adc
iret
add
shl
lea
popa
bound
shlb
jne
jmp
dec
or
mov
stc
sub
inc
push
jmp
das
dec
jmp
icebp
cmp
adcb
add
mov
loop
and
pop
fcoms
sbb
xlat
push
stos
lea
mov
or
xchg
jno
xrelease
es
sbb
gs
icebp
or
mov
out
add
pop
adc
push
in
push
sahf
xor
ret
mov
mov
and
je
cmp
xchg
push
and
loopne
call
fmuls
rorb
idiv
mov
je
sbb
inc
sti
sahf
add
jmp
cmp
das
xor
ja
scas
and
inc
inc
out
inc
and
lcall
mov
mov
subl
sbb
pop
sub
xor
les
push
stos
xor
daa
test
nop
test
pop
sbb
sbb
pop
es
inc
jmp
aas
nop
jecxz
or
or
cmp
xlat
sbbl
sub
aam
lock
adc
sub
push
and
sub
or
jecxz
pushl
cmp
jne
mov
call
cmp
ja
mov
cmp
daa
inc
sub
inc
xor
inc
fcmovbe
jb
jno
loope
mov
mov
sub
dec
sub
data16
jbe
ret
nop
adc
data16
sbb
sar
pop
jnp
mov
adc
jbe
insl
xchg
mov
jne
mov
push
pop
inc
xchg
mov
dec
xor
adc
popa
sbb
push
or
or
adc
xor
lahf
pop
inc
js
das
iret
inc
add
js
inc
aam
lods
shr
add
mov
cli
ja
lea
cli
ja
and
fldt
jle
mov
fmuls
mov
cmp
jl
addl
cmp
mov
jmp
sbb
movsl
orl
xchg
pop
mov
push
lods
int
mov
cmp
adc
cmp
push
push
mov
std
mov
imul
call
push
scas
jle
add
or
popf
std
jbe
call
xchg
cmpsl
shrb
cmp
addr16
cmp
mov
inc
jmp
pop
es
inc
inc
arpl
pshufw
xor
rcrb
mov
or
mov
pop
cmp
push
cmp
ret
nop
push
aas
lahf
add
adc
lock
outsb
lsl
sbb
or
daa
inc
or
pop
push
in
push
inc
addr16
cmpl
inc
sub
aad
and
cmp
je
cmp
xor
pop
xchg
cltd
xor
push
jne
xchg
out
lods
push
adc
push
jo
mov
repnz
dec
jns
mov
ljmp
daa
or
rcrb
sbb
xchg
mov
add
fildl
xchg
or
sub
adc
cli
mul
push
test
enter
push
clc
cmp
call
je
add
push
int3
jnp
add
push
fwait
mov
pop
mov
jle
or
push
sahf
mov
mov
je
jmp
outsl
push
loop
jg
cmp
xor
gs
cmp
loopne
mov
push
or
push
and
push
inc
test
xor
divl
lods
mov
jmp
dec
or
and
insb
fstpl
and
pop
push
ret
dec
call
xchg
loop
or
sub
and
sub
cmpsb
loope
and
add
xor
xor
adc
push
pop
pop
jmp
push
inc
in
loopne
enter
cs
dec
inc
sbb
shrb
fbstp
or
dec
push
mov
sub
jbe
ret
pop
icebp
lods
popf
fs
jl
in
push
jmp
aas
push
mov
pop
xchg
sbbl
jp
add
pushf
je
xor
push
ret
and
icebp
add
or
or
sbb
bound
pop
push
or
dec
in
cmp
mov
mov
sar
ljmp
je
mov
cmp
xor
sbb
cmpsb
and
js
cmc
and
sub
add
push
outsb
and
insb
enter
push
mov
adc
or
cmp
lcall
push
lea
lret
inc
cmp
mov
pop
inc
cmp
test
mov
cmp
add
mov
leave
inc
xor
daa
sbb
dec
jo
daa
xor
popa
ja
sahf
push
xchg
aam
pop
loopne
popa
add
fsubrl
adc
push
and
mov
icebp
xor
push
push
or
fimuls
jne
repnz
inc
push
inc
imul
sub
fwait
leave
add
or
aam
inc
sub
xchg
out
xor
add
xor
arpl
and
loop
adcl
out
mov
aaa
pop
or
mov
push
lods
cli
sub
icebp
jne
xor
xchg
aam
add
enter
pusha
and
and
enter
jno
adc
adc
and
pop
mov
sub
jmp
sbb
xchg
lock
not
push
roll
sti
dec
je
incb
push
pop
int3
insl
jl
out
sbb
inc
jne
mov
test
imul
scas
roll
add
pop
sbb
shr
push
stos
int3
ja
sbb
dec
sub
add
mov
inc
mov
lea
dec
popa
mov
mov
sbbb
mov
cmp
adc
mov
popa
push
call
push
imul
dec
cmp
xchg
lcall
inc
bswap
test
jno
call
push
or
jnp
ss
jl
dec
repnz
dec
xor
mov
js
int
jge
movsb
push
mov
mov
les
push
jmp
sbb
rclb
or
sub
sahf
out
xor
mov
rclb
xor
inc
lret
inc
daa
lcall
inc
ja
pop
push
rcrl
adc
cltd
xchg
adc
sbb
loope
es
hlt
pop
and
cmpsl
and
cltd
adc
push
mov
sub
pusha
insl
sbb
in
pop
lods
js
adc
int3
rcrb
push
push
add
pop
jb
sarb
push
insb
shr
je
movsb
mov
dec
add
push
add
stc
mov
add
push
test
mov
mov
nop
push
in
sub
in
mov
sbb
push
daa
push
mov
jae
cmp
pop
mov
jp
cmpsb
icebp
shlb
rcr
out
pusha
jecxz
fcoms
push
adc
jp
adc
inc
aam
push
rclb
dec
ss
sub
mov
in
xchg
stos
inc
das
add
stc
or
pusha
add
ret
push
int
adc
ret
xor
sub
in
sub
mov
add
add
add
pop
sbb
jns
and
or
les
cmp
mov
push
add
mov
pop
loopne
sarl
and
rcr
xor
cmp
mov
fnstsw
add
pop
xor
jmp
inc
xor
sbb
adc
xchg
add
daa
push
pop
mov
xchg
lock
inc
cmp
add
adc
cmp
mov
cltd
cmp
popf
sub
fisubs
and
cmp
push
cltd
stos
in
repz
lea
and
push
insl
in
add
add
and
push
filds
aam
fisttps
or
xchg
xchg
xchg
adc
ss
outsb
sub
dec
dec
dec
dec
xor
cmp
fimull
inc
and
inc
pushf
pushf
pushf
fmull
dec
dec
push
push
daa
daa
pop
pushf
pop
add
daa
daa
daa
push
and
daa
js
dec
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
sub
jne
add
mov
mov
ss
pop
add
mov
rol
and
imul
test
and
mov
or
cwtl
nop
mov
sbb
and
mov
enter
pop
in
jnp
daa
adc
add
js
or
jne
pop
mov
inc
ret
xchg
aam
push
clflush
inc
xchg
out
and
cmp
je
inc
dec
jne
jmp
popf
shr
or
scas
add
sub
and
sbb
ret
arpl
add
xor
or
xchg
es
stos
add
jmp
mov
dec
cs
push
pop
lods
dec
repz
pusha
les
loopne
test
dec
cmp
movsb
stc
xchg
js
pop
repz
mov
mov
jmp
push
ret
jb
adc
sahf
insl
jp
push
aas
and
sbb
dec
cmp
je
add
lock
jnp
call
mov
cwtl
sbb
sub
lret
xor
in
xchg
movb
add
pop
rcr
rorl
push
ss
icebp
sbb
mov
and
loopne
pop
xchg
inc
push
js
sub
mov
or
rorb
and
mov
insl
icebp
inc
mov
pop
or
or
lds
hlt
dec
adc
cmp
pop
xchg
js
or
sub
lods
cmp
stc
inc
sub
cmp
test
rcrb
mov
mov
add
xchg
lret
andl
push
out
das
or
sbb
dec
je
push
jecxz
stos
sarb
cmp
sahf
clc
jle
je
push
sub
sub
push
push
movsb
push
test
and
push
idivb
clc
dec
adc
cmp
and
xor
out
push
enter
mov
fsubrs
inc
mov
aas
repnz
dec
adc
xor
dec
sbb
loopne
push
into
jle
or
jne
mov
adc
sub
push
movsl
adc
shrl
add
pop
es
xchg
push
loopne
testb
inc
out
enter
or
sti
jns
adc
push
js
pop
inc
les
sahf
lret
mov
push
cwtl
lea
mov
push
mov
call
fwait
mov
popa
fwait
adc
je
xchg
cmp
sub
les
pop
aam
insb
out
insb
add
ljmp
pop
mov
jle
sbb
jae
inc
and
movsl
xor
mov
jmp
xchg
ret
sbb
cmp
or
js
nop
imul
cmp
or
and
das
pop
leave
mov
imul
cltd
or
andl
cmp
dec
xchg
imul
or
aaa
cmpsl
adc
cmpl
mov
shlb
lahf
shlb
push
sub
stc
pop
mov
inc
adc
sub
push
inc
lods
loopne
jl
xor
sub
sbb
lods
or
popf
jbe
xor
sbb
xor
or
or
mov
lods
pop
mov
loope
or
and
xchg
lea
js
add
mov
add
adc
mov
push
jo
mov
lods
add
pop
add
adc
loopne
dec
push
sub
fst
jne
sbb
xlat
jmp
daa
cld
js
sbbl
adc
and
jmp
push
xor
sbb
lret
mov
int
add
dec
into
pusha
loop
leave
or
loopne
sbb
bound
dec
and
dec
push
enter
rclb
mov
stos
bound
sbb
es
test
push
push
or
sbb
fdivr
dec
mov
dec
sti
and
leave
lcall
dec
ret
xchg
lea
pop
or
sbb
mov
inc
rcrb
mov
cwtl
sbb
sbb
sub
and
dec
adc
mov
add
mov
push
inc
ljmp
push
fcoml
mov
rcll
inc
push
pop
mov
pop
popa
test
mov
lods
cltd
lods
nop
mov
mov
adc
xor
xchg
pop
xchg
xor
add
aam
pop
testl
fmuls
pop
addl
xchg
cmc
lock
sub
sub
lods
push
jmp
cmp
pusha
xor
xchg
xchg
aad
pop
pusha
jnp
inc
cmp
rcr
jmp
addl
js
pop
pop
or
push
add
or
dec
popa
add
mov
and
adc
in
test
add
inc
push
push
cmp
rclb
adc
push
js
lods
rcll
cmpsl
movsb
adc
stos
add
pop
dec
pop
push
shrb
pop
push
dec
iret
or
loopne
xchg
lret
push
test
adc
jge
mov
add
xchg
jl
xor
mov
xchg
ret
jmp
divps
dec
addb
pop
inc
loope
push
js
sbbb
adcl
sub
pop
rcrl
dec
lock
mov
add
mov
stos
or
mov
sbb
push
fwait
sub
dec
nop
xchg
dec
or
add
or
rcll
or
push
or
in
mov
incl
aas
adc
add
in
adc
in
cmp
inc
mov
daa
rorb
pop
test
jne
inc
int3
add
popa
pusha
jl
sbb
js,pn
sti
lea
shrb
pop
pop
adcb
sbb
inc
push
mov
es
aam
add
push
inc
loope
adc
or
push
rcrb
add
roll
cs
clc
aad
jnp
inc
lea
or
sub
inc
shl
and
test
mov
fstpt
addb
not
test
add
adcl
outsb
mov
cltd
insb
pop
and
lahf
icebp
int
mov
out
mov
inc
push
sub
jmp
jbe
dec
mov
add
inc
pusha
sti
and
xor
or
sbb
lahf
stos
jmp
pop
sub
adc
push
loopne
push
adc
jb
cmp
dec
daa
jecxz
orl
push
and
push
fsubs
add
sub
ss
enter
add
pusha
xlat
loopne
mov
or
xchg
cmc
loope
dec
stos
inc
sub
sub
push
rclb
xor
cmp
sub
push
imul
and
test
lahf
and
and
push
cld
not
mov
pop
popf
je
mov
and
adc
jecxz
ds
push
or
out
or
or
jo
push
xchg
add
mov
dec
je
sub
loope
mov
xchg
mov
xchg
lcall
lds
mov
dec
sub
hlt
test
pop
addb
jno
data16
cmpb
loope
dec
push
cmp
aam
sbb
and
push
add
pop
or
adc
and
adc
iret
dec
jns
inc
lock
push
add
ret
lods
and
mov
inc
mov
ja
sbb
push
imul
add
sahf
push
inc
sbb
sbb
sbb
arpl
out
andl
stos
lret
adc
loop
out
pop
jl
add
or
push
iret
and
push
out
and
jo
enter
clc
cld
add
inc
mov
jge
aas
sbb
nop
or
scas
shl
push
sbb
mov
add
add
mov
or
loop
icebp
sub
or
mov
add
and
jne
adc
sahf
ret
xchg
repnz
push
xor
mov
adc
or
nop
xor
adc
jns
and
adc
stc
cld
test
or
adc
stc
and
sbb
mov
mov
adc
sbb
dec
add
adc
rclb
addb
js
mov
or
cmc
sub
shlb
pop
out
mov
fwait
in
mov
mov
mov
inc
cli
adc
data16
int
mov
dec
and
push
add
push
xchg
pusha
pop
out
xchg
xchg
adc
pop
jnp
insb
inc
cs
or
ss
cmp
je
imul
incl
jl
je
mov
cmp
pop
jne
push
imull
cmp
inc
inc
mov
sub
shlb
fldz
call
and
lds
andb
shlb
push
jl
sbb
outsb
sbb
dec
mov
outsl
add
or
add
adc
or
sub
inc
jmp
xor
rolb
outsl
push
add
adc
push
sbb
pop
lar
inc
xchg
xlat
xchg
jmp
fistpl
inc
inc
push
jne
rclb
ret
dec
test
aaa
sbb
loopne
add
rorb
or
add
pmulhuw
movsl
ss
sub
pop
js
jmp
push
xlat
inc
pop
mov
lret
adc
push
inc
add
sub
adc
push
movb
lea
mov
sbb
push
cmp
cmp
fisubrl
pop
pop
dec
xorb
mov
es
cmp
add
loop
push
out
add
sub
add
cmp
push
insl
mov
outsl
or
call
dec
add
inc
sub
mov
pop
push
jle,pn
push
neg
es
cmp
jl
push
repnz
add
mov
push
or
pop
leave
mov
add
ljmp
jne
push
lea
push
push
or
dec
loop
sbb
movsb
mov
sub
aam
mov
aam
lds
pop
sbb
add
icebp
or
adc
or
jbe
or
cmp
dec
adc
jge
mov
rol
xor
or
adc
pusha
push
push
xor
shlb
enter
xchg
jne
add
xchg
je
mov
jmp
add
pop
cwtl
stos
and
push
cmp
ret
sbb
mov
aaa
and
je
cmp
faddl
add
sbb
mov
fs
dec
sub
fdivrs
push
shlb
pop
sub
call
in
cmp
jge
cmp
push
push
add
pusha
add
adc
sbb
pop
add
imul
mov
push
and
sahf
lret
and
and
mov
dec
clc
push
sarl
fcmovb
popf
ss
add
ja
test
nop
lock
pushf
sbb
enter
loope
xor
in
jle
mov
jno
add
push
xor
push
adc
xchg
dec
and
add
inc
jo
sbb
push
sbb
dec
je
addr16
mov
loope
add
cmpsb
movb
icebp
insb
popa
outsl
and
popf
dec
sbb
mov
rorb
fistpl
sub
loopne
sti
pop
mov
ret
daa
xor
or
jne
pop
cmp
arpl
es
xchg
inc
and
push
push
mov
out
mov
lahf
stos
jmp
xor
inc
cmp
into
adc
and
or
jg
ja
push
mov
mov
mov
dec
push
sub
adc
arpl
jo
add
and
and
and
insb
jecxz
data16
sbb
mov
cmp
add
adc
cld
add
dec
outsb
inc
mov
add
jle
jle
loop
cmp
ss
jl
push
or
shlb
jge
or
cmp
je
or
add
dec
jmp
out
jb
add
adc
mov
test
push
or
test
inc
call
sub
push
xor
fdivrs
ret
mov
adc
xor
jo
sbb
out
insl
fsubl
shrl
inc
pop
sbb
js
loop
xchg
lea
jb
push
sub
or
ret
mov
shl
fidivrl
rorl
mov
pop
inc
shll
pop
fsubrl
jns
add
jbe
sbb
shll
sbb
jg
lods
jb
sub
jbe
dec
inc
dec
pop
or
dec
sahf
sbb
and
nop
push
rorl
nop
add
daa
push
mov
jmp
mov
pop
xchg
lods
stc
mov
sub
or
les
rcrl
popa
jae
cmp
je
int
adc
mov
push
sbb
jne
loop
mov
inc
or
mov
mov
and
sub
mov
add
addb
push
cmp
push
pop
xchg
inc
sub
add
inc
sarb
mov
jo
pusha
scas
and
mov
push
mov
pop
xor
imul
into
mov
lahf
sbb
test
iret
cmp
orl
xor
jl
and
je
push
shl
jne
js
and
dec
test
ficoms
or
or
xchg
aam
add
mov
add
pop
fmull
push
insl
push
jmp
add
cmp
cld
cld
loope,pn
ret
test
and
js
icebp
or
mov
inc
leave
nop
or
je
jmp
xor
push
sbb
and
mov
gs
or
pop
data16
jne
cmp
and
cmp
enter
xor
push
inc
je
pusha
mov
xor
adc
pop
adc
popa
and
add
inc
je
aaa
mov
or
fldenv
pusha
or
pop
mov
adc
repz
inc
add
add
pop
sti
mov
fldl
fdivl
fmull
insl
push
pop
clc
cmpsb
repnz
add
outsb
push
push
and
cmp
enter
shrb
aas
add
mov
push
push
int3
inc
jg
pushf
pop
les
dec
jo
aad
dec
ret
roll
ficomps
lock
ljmp
cmp
lea
or
shl
shr
add
or
or
pop
lock
in
pop
fcmovb
jmp
shr
or
mov
or
jmp
xlat
bound
scas
push
mov
cmpb
sti
in
xor
or
lret
mov
cmp
in
inc
or
mov
dec
add
int3
cld
push
jl
fucomip
inc
adc
inc
mov
mulb
jb
dec
mov
lea
mov
shr
cmp
mov
fsubl
or
mov
fdivl
jp
adc
jb
add
cmp
adc
sub
add
orb
add
adc
rolb
dec
test
inc
jbe
shrb
pop
dec
push
xchg
push
int
les
test
mov
call
cli
je
mov
or
jo
adc
jle
mov
mov
cmp
pop
daa
sbb
xor
lret
rorb
imulb
or
test
data16
jo
test
adc
add
call
xor
mov
cmp
or
mov
sbb
push
add
sub
inc
jmp
push
adc
push
andl
dec
xor
add
mov
lea
push
out
sub
add
sahf
js
mov
and
push
mov
push
push
data16
mov
cs
int3
sub
movl
lahf
add
or
pop
xor
xor
and
lock
rol
arpl
ret
sub
mov
stc
mov
add
fxch
or
pop
inc
imul
push
add
inc
sbb
adc
pushf
inc
sbb
cwtl
in
or
add
loopne
shlb
dec
mov
je
or
imull
and
inc
mov
xor
sub
push
mov
or
dec
ja
fsub
mov
pop
inc
or
es
pop
pop
or
es
insw
mov
adc
xor
adc
adc
scas
lea
lcall
adc
out
mov
psubq
xchg
jne
cmp
pop
cwtl
xor
clc
pop
inc
xchg
or
push
mov
push
push
push
int3
mov
outsl
sub
or
sbbl
inc
inc
adc
shlb
sbb
faddl
sahf
jp
push
sbb
mov
lock
mov
push
add
sub
jne
jl
sub
jne
and
inc
rorb
pop
cltd
or
test
ret
sub
inc
cmp
jle
cmp
ret
push
lea
je
mov
dec
jnp
push
push
je
aas
jecxz
xor
jo
ret
sub
inc
cli
out
inc
stos
leave
mov
cwtl
je
xor
in
jecxz
sbb
push
popf
pop
jg
pop
int3
lds
cs
inc
adc
cmp
mov
pop
fidivl
cmpsb
aam
add
je
xor
in
sbb
inc
push
dec
and
loopne
jge
test
or
into
push
inc
rcrb
movsl
mov
mov
gs
push
inc
push
adc
andb
cmp
dec
mov
dec
sbb
int3
adc
cmp
aam
sub
jecxz
jmp
xor
add
out
cmpb
inc
mov
inc
pop
add
add
dec
lcall
mov
shlb
inc
dec
je
and
das
xchg
xchg
bound
sub
loop
imul
out
icebp
mov
sub
cmp
sti
mov
aaa
push
sub
dec
inc
jne
cmp
sbb
add
sub
out
push
add
add
ror
push
popa
push
in
clc
or
pop
xchg
cmp
sub
dec
xchg
cmpsl
ljmp
cwtl
in
in
cmp
es
sbb
shrl
clts
pusha
cmp
pusha
cmovbe
xorl
mov
xor
mov
orb
and
add
jo
ja
dec
pop
pop
xor
inc
je
orl
add
faddl
enter
bound
addl
jge
test
aas
xchg
test
jnp
jmp
in
add
xor
mov
dec
dec
mov
test
sarl
mov
cwtl
adc
and
adc
add
sbb
int3
stos
clc
xor
cmp
fst
add
insl
xor
aas
lcall
sub
je
into
popf
in
and
jge
jbe
pop
xor
pop
xor
ss
sub
mov
or
mov
imul
test
inc
and
test
orb
je
mov
or
leave
das
adc
dec
call
pop
ret
pop
sbb
mov
lret
jmp
call
mov
rorl
add
and
mov
andb
or
loope
mov
and
add
loope
inc
add
add
push
int
lcall
xor
mov
je
fldcw
mov
cmp
adc
and
dec
inc
and
sub
stos
adc
sbb
ret
cli
ret
popf
ret
das
int
mov
add
add
imul
adc
mov
push
push
mov
hlt
add
adc
or
sbb
fiaddl
push
lds
int
enter
add
add
frstor
cmp
pop
in
std
xor
add
adc
add
jle
sahf
inc
test
inc
jle
loope
and
sbb
mov
lcall
ja
lea
add
in
out
jns
jae
jno
push
jbe
or
xor
cmpsl
mov
sub
pushf
push
push
xchg
add
push
call
add
or
enter
jecxz
ret
push
shrb
arpl
cmpsl
add
add
stc
ret
ss
xor
imul
add
inc
xchg
cmpl
xchg
cmpb
roll
add
stos
sub
lcall
clc
push
cmpl
pop
pop
push
daa
gs
push
mov
fldenv
adc
sbb
jmp
cmp
cwtl
add
mov
out
std
pop
inc
adc
cltd
pusha
add
cmp
daa
inc
xchg
push
shrb
cmp
jnp
lret
jg
add
cmp
jg
lret
or
enter
std
call
and
or
dec
incb
inc
add
rolb
jo
lock
pop
and
or
mov
std
jne
push
les
push
test
jge
mov
scas
push
pop
jle
jl
mov
pop
lods
and
ds
cwtl
mov
outsb
lock
cmp
sarb
dec
popf
das
sbb
dec
icebp
sub
mov
and
inc
mov
sbb
adc
push
sub
orl
xchg
lret
out
or
add
icebp
rcrl
out
and
dec
cmc
call
mov
inc
mov
xchg
add
dec
jle
mov
stos
paddsw
cwtl
pop
testb
in
sub
loopne
pop
pop
nop
or
xchg
les
pop
rolb
dec
loopne
push
inc
jo
rcll
loopne,pn
aad
pop
inc
insl
jg
pop
sub
pop
add
aaa
mov
adc
dec
cld
mov
or
and
stos
dec
xor
hlt
leave
mov
push
push
daa
test
add
lock
lea
es
mov
iret
sub
pushl
lods
roll
sub
push
cmp
add
test
test
xor
les
pop
cmp
pop
inc
mov
and
adc
mov
xchg
outsl
lds
cs
cmpl
pop
push
push
or
push
or
mov
add
mov
push
add
adc
inc
jne
xorb
or
push
out
pop
pop
xor
mov
sar
ror
sbb
sbb
fsubrs
mov
push
push
lea
je
dec
movsl
mov
push
jle
mov
rolb
adc
movsl
movl
cmp
imul
jecxz
dec
cld
sub
sub
xchg
adc
add
or
jle
push
subb
es
addr16
or
je
sbb
hlt
or
rcr
sub
jecxz
pop
mov
leave
and
sbb
push
add
rolb
or
ret
into
insl
cmpl
es
and
push
pop
or
and
jecxz
dec
adc
adc
stos
xchg
jmp
pushf
movsb
dec
push
add
cmp
fs
loopne
rolb
push
sarb
jnp
dec
popa
je
pop
pusha
pop
mov
and
cmp
test
jg
push
cmc
xchg
jbe
hlt
cmpb
jne
push
inc
in
je
xchg
jnp
pop
mov
push
xchg
sarl
scas
push
cmp
jmp
int
adc
or
add
inc
sbb
lea
inc
cmp
fs
shll
cmp
pop
dec
imul
orb
popf
mov
push
mov
adc
ss
imul
adc
xor
or
lods
mov
add
cmp
sahf
lock
bound
nop
push
xchg
mov
je
sub
pop
int
add
dec
sub
mov
dec
sbb
fsubl
jmp
lcall
or
and
xchg
xchg
xchg
popf
or
adc
or
mov
sbb
fwait
das
das
and
pushf
popl
or
lods
and
add
sub
and
cli
mov
cld
into
jo
frstor
cmp
xor
mov
js
sbb
push
and
hlt
adc
jmp
push
xor
jne
mov
mov
inc
add
js
enter
scas
pusha
mov
mov
nop
mov
xor
lods
mov
add
aam
lret
mov
pop
mov
or
push
xor
mov
cmp
mov
add
and
and
cltd
inc
dec
shll
dec
push
mov
lahf
lret
mov
add
jge
pusha
mov
sbb
call
inc
cmp
xchg
xorb
clc
add
or
dec
adc
rcrl
js
lods
shll
adc
loope
pop
in
movb
rorb
push
or
pop
or
sbb
push
mov
addl
adc
sub
mov
call
dec
cwtl
mov
dec
sub
adc
int
fistpl
adc
adc
aaa
sub
out
adc
jmp
push
fisttpll
insl
sub
fisttps
sbb
push
arpl
sub
fadd
jp
aas
inc
test
and
xchg
test
repnz
loop
out
push
rcrb
add
add
pop
and
and
pop
inc
adc
sub
fcompl
mov
xor
xor
mov
or
push
mov
sub
mov
sbb
adc
call
mov
jmp
negb
add
call
imul
ss
inc
sub
push
add
lods
push
and
dec
test
test
mov
push
push
fidivl
pop
sub
xchg
jne
push
jle
add
sbb
rol
scas
adc
cmpb
dec
jle
mov
mov
adc
leave
inc
xor
jae
daa
mov
and
xchg
jl
ljmp
add
cmpb
jl
xor
cmpb
je
incb
cmpb
clc
addb
pop
inc
xchg
adc
test
pop
xchg
push
sub
pop
leave
inc
shll
or
push
push
mov
push
xchg
and
pop
cmp
test
inc
adc
fldcw
add
js
jp
push
or
ljmp
loop
mov
jg
and
xchg
jp
jne
push
push
jbe
add
inc
push
mov
sbb
inc
adc
dec
or
enter
shl
cmp
test
jne
pop
mov
std
inc
loopne
add
inc
or
add
add
or
test
je
mov
xor
pop
mov
adc
add
sbb
and
and
pop
pop
pop
pop
imul
push
adc
dec
pusha
jnp
js
movsl
movsl
movsw
xor
test
or
and
add
mov
ret
notb
mov
jmp
jae
pop
sbbb
add
push
xor
xor
test
cmp
inc
adc
mov
mov
es
sbb
je
inc
imul
sbb
and
adc
jp
mov
pop
jnp
inc
or
leave
enter
add
cmp
sbb
jmp
push
add
xor
push
pusha
xchg
jb
xchg
pop
inc
sub
or
lods
daa
or
adc
out
pusha
stos
xchg
pop
or
add
and
ret
sbbb
stos
pusha
ljmp
adcb
pop
decl
cli
sub
pop
and
jge
fwait
sub
sbb
mov
ja
cmp
nop
dec
pop
pop
dec
ljmp
stc
lret
aam
inc
lcall
sbb
xor
inc
and
call
mov
movl
sub
sub
jae
xor
cmp
add
xor
push
xor
cmpsb
inc
sar
xor
pop
cmp
je
cmp
and
sbb
adc
pop
inc
ja
cltd
stos
dec
add
add
lds
cmpb
je
mov
xor
or
mov
cmpsl
test
jmp
fisubs
inc
imull
jmp
cs
dec
lret
and
adc
sbb
daa
movsb
cmp
jbe
or
mov
pop
repnz
and
pop
pop
and
shr
add
cwtl
cmc
mov
add
mov
or
mov
xor
or
add
iret
jp
dec
inc
add
cmp
sahf
clc
les
jne
sbb
cmp
sbb
push
data16
sbb
mov
pusha
xor
ret
and
scas
fucomi
xchg
hlt
rorl
jns
clc
in
arpl
push
ret
cmp
nop
inc
sarl
xor
js
push
jg
mov
sbbb
cmp
scas
sub
jl
xchg
xor
dec
inc
lods
movsl
or
popa
mov
adc
pop
jns
mov
movsb
jb
and
mov
dec
cld
mov
xor
push
jg
lea
push
and
mov
lds
add
das
mov
cmp
add
xchg
or
test
jmp
cmp
jg
dec
mov
jno
in
jae
push
sub
adc
repz
and
add
xchg
push
pop
repz
dec
pop
mov
aam
insb
push
and
sbbb
dec
repz
call
fs
pop
sub
adc
cmpsb
adc
push
aam
lods
jge
pusha
ds
mov
sarl
push
inc
cmp
jbe
jns
dec
pusha
je
aas
mov
test
lock
inc
jns
aas
daa
adc
in
ss
daa
push
or
rorb
or
jns
mov
ficoms
fldcw
cmpsl
cmp
pop
push
inc
and
test
imul
or
outsb
out
jno
loopne
mov
push
xchg
adc
push
push
cld
outsb
jae
mull
inc
or
aaa
dec
jbe
sbb
ss
lret
dec
or
adc
cmp
mov
jne
fadds
testb
cmpsl
hlt
jmp
jmp
shrb
in
or
je
pushl
inc
mov
mov
push
es
mov
je
pop
ret
je
repnz
cmp
jb
std
mov
ja
add
cmp
adc
cmp
xor
add
sbb
cmpsb
sarb
fbstp
negl
test
mov
inc
imul
lods
mov
push
adc
push
cmpsb
mov
mov
test
mov
adc
xchg
pushf
mov
cmp
sbb
and
das
or
or
stos
or
or
jmp
mov
cmp
inc
subl
incl
mov
sub
cmp
ja
push
pop
dec
jmp
cmp
xchg
sbbb
jb
mov
dec
dec
mov
xor
into
jmp
or
fidivs
jge
push
jmp
cmpsl
mov
lods
jbe
mov
mov
xchg
sub
cmp
sti
dec
cmpsl
outsb
cmp
inc
jle
cmp
push
xor
xchg
icebp
gs
sub
lahf
je
bound
push
mov
push
lods
out
push
lock
shrl
push
data16
gs
js
jmp
sbb
sbb
pop
inc
fidivl
xchg
pop
push
pop
jge
jne
sarl
cmp
test
jns
gs
jbe
nop
add
jne
push
or
lahf
jae
imul
sbb
jne
or
fs
sub
xchg
add
pop
jo
sbb
adc
push
adc
add
orl
or
and
sbb
sub
cmp
mov
stos
notl
inc
movsbl
in
sahf
jg
dec
dec
je
test
fld
push
push
cmp
dec
mov
sub
jns
cmp
pop
cld
hlt
xchg
rcll
dec
adc
jno
sbb
and
lock
adcb
push
fadd
pop
pushf
jmp
push
cwtl
pop
mov
xor
xor
inc
push
nop
aas
pushf
cwtl
and
and
and
test
add
jecxz
test
dec
jns
imul
dec
test
leave
leave
dec
push
movsb
mov
inc
es
pushf
orl
clc
orb
nop
pop
mov
and
or
xchg
leave
sbbl
mov
sti
jno
add
push
movsl
fcomps
iret
repz
xor
out
rclb
out
je
push
js
or
push
mov
lock
lret
and
cld
and
and
ror
push
sahf
out
sahf
rcl
rcl
aad
ss
out
xlat
fcomp
fstpt
add
jne
xchg
mov
nop
and
out
dec
push
movb
jmp
or
mov
into
jb
adc
sub
mov
jg
jb
add
ficoml
mov
add
push
xor
add
fnsave
test
mov
icebp
sub
mov
lock
testl
jmp
icebp
adc
or
sbb
cmp
das
movsb
in
stc
mov
sub
enter
push
xor
and
in
cmovb
add
push
gs
adcb
jo
imul
mov
call
add
je
sahf
or
mov
jle
push
bound
movswl
callw
pusha
sbb
neg
push
mov
push
or
out
loop
js
mov
cmp
outsl
jecxz
out
cmpb
popf
add
add
mov
mov
sar
fisubs
addr16
enter
mov
mov
mov
or
mov
add
push
or
or
lock
inc
add
pop
ljmp
add
pop
xlat
and
mov
pop
sbb
xor
subb
decb
xchg
ja
mov
push
repnz
cld
iret
insb
mov
testl
mov
jne
inc
inc
or
cmp
sarl
mov
jne
inc
xchg
add
hlt
stos
rolb
add
dec
mov
jle
jg
push
lea
orb
cwtl
xchg
add
push
adc
push
adc
insb
enter
lea
inc
sbb
cmp
sbb
movsb
movsb
add
int
add
mov
jge
jl
inc
inc
sbbb
rorb
aas
jle
jle
jne
mov
lock
mov
add
xor
push
or
addr16
rorb
mov
push
lret
xor
push
inc
inc
rolb
testb
sbb
push
hlt
shrl
rcr
testl
mov
or
dec
push
ss
popa
lods
dec
inc
inc
lods
lock
xchg
lock
idiv
cli
inc
mov
div
sar
subb
mov
add
stos
aam
dec
test
or
jae
mov
test
mov
or
xlat
xlat
dec
add
js
or
and
icebp
mov
mov
scas
xor
stc
dec
mov
rolb
lock
or
lock
mov
pop
fcoml
outsl
bound
or
pushw
sub
mov
clc
out
jge
inc
add
push
dec
movsl
push
arpl
ret
mov
enter
adc
inc
push
cmp
mov
outsl
gs
shlb
fsubr
push
sbb
cmp
ss
inc
test
dec
xor
push
sub
lea
adc
mov
sub
int
adc
lret
cld
lea
cmp
fsincos
and
mov
mov
mov
jg
pusha
and
clc
cltd
add
ret
sbb
sbb
sbb
mulb
sbb
sahf
xchg
test
add
and
or
jge
add
and
add
in
or
pusha
add
movsb
repnz
in
push
loopne
inc
into
or
mov
sbb
xor
jg
shl
pop
movb
pop
data16
mov
push
add
push
nop
cmp
adc
mov
jge
jle
out
adc
mov
mov
adc
ret
shr
sahf
add
or
scas
xchg
mov
mov
negb
jne
sbb
neg
and
pushf
jle
inc
imul
lds
loopne
loopnew
daa
mov
lea
push
and
sti
and
mov
mov
push
loope
inc
jmp
out
mov
dec
or
sti
and
xchg
jge
inc
rorb
mov
shll
mov
and
xchg
jmp
mov
testl
push
clc
xabort
neg
ja
fildl
inc
dec
enter
mov
cmp
push
shlb
add
sbb
mov
jne
cmp
fdivr
xlat
pusha
and
into
or
mov
inc
fsubl
in
inc
jmp
dec
nop
adc
dec
decl
add
xor
inc
cmpb
in
bound
add
dec
cmp
add
add
icebp
cmp
incb
sub
orb
pop
mov
mov
adc
les
jp
jne
dec
mov
jb
dec
rcrl
int
mov
mov
lret
or
add
inc
jbe
mov
xor
mov
rcrb
enter
or
adc
lods
xor
and
adc
inc
fcomps
lret
mov
lret
and
dec
jmp
add
jecxz
push
ljmp
push
dec
sbb
or
outsl
fs
and
xchg
push
xchg
mov
push
or
test
cltd
outsb
ret
add
hlt
ret
inc
xorb
mov
cmpl
movsl
shlb
xchg
adc
or
jae
pop
cmp
mov
mov
mov
inc
and
cmp
xor
into
test
sub
and
call
and
pop
pop
clc
mov
push
or
movsl
sbb
je
ret
or
les
ret
push
pop
inc
push
pop
xchg
cmpsb
ror
jae
or
or
add
ja
xor
add
or
add
outsb
inc
or
adc
jl
mov
jmp
pop
lret
pop
ljmp
popf
dec
pop
dec
insl
add
test
and
and
and
xchg
sbb
inc
jge
aam
xchg
in
rolb
cmp
add
or
scas
xor
mov
mov
xor
jmp
fldcw
mov
cld
and
sub
xorb
or
add
push
inc
stos
jg
add
mov
and
inc
ret
and
jge
cmpsb
push
mov
ss
clflush
dec
add
test
lcall
or
adc
pop
addr16
add
cmp
mov
mov
daa
iret
xor
sbb
inc
jg
into
into
mov
pop
and
loopne
mov
sarb
push
pop
loopne
ficoms
mov
stos
or
or
pop
ret
pop
cmp
add
push
ret
and
out
pop
lcall
add
leave
lahf
pop
test
pop
or
add
mov
add
mov
and
je
and
ret
jne
or
push
in
push
jmp
cmc
cmp
mov
lret
inc
and
ret
sub
mov
push
scas
rorl
add
pop
rclb
leave
push
inc
test
add
arpl
dec
pop
mov
xor
loop
adc
adc
cmp
jl
subb
lods
xchg
or
insl
mov
push
push
push
adc
mov
js
add
das
push
jl
jge
jle
outsl
out
daa
retw
stos
jne
pop
adc
sbb
xlat
xor
jmp
jle
and
daa
or
and
call
into
jge
addr16
mov
jl
or
sbb
stc
add
mov
jne
mov
mov
push
mov
mov
dec
sbb
xor
ds
push
adc
ficoms
dec
pop
cltd
orb
jae
inc
mov
js
movsl
lahf
iret
sbb
je
test
sub
lock
cmc
in
fs
out
je
mov
imul
or
xchg
cmp
jbe
inc
sub
call
jle
sbb
mov
inc
lds
fidivrl
or
jbe
or
jmp
push
pushl
test
push
push
or
les
popl
mov
mov
fwait
js
fstpt
jno
or
sub
sbbb
mov
test
and
mov
lds
add
push
subb
jmp
xchg
or
and
pusha
in
mov
jle
fwait
dec
dec
scas
pushl
aas
pop
xchg
inc
repnz
je
test
push
sub
in
xor
mov
aam
dec
jl
adcb
fcoms
fisubs
mov
nop
xlat
insl
inc
jge
sbb
add
and
mov
int3
or
mov
push
hlt
cmp
fcomp
jns
cmpsl
dec
xchg
inc
sbb
clc
hlt
lcall
add
adc
pop
jge
lea
xor
lock
push
pop
push
imul
fiaddl
int
add
and
lods
sbb
mov
aam
sbb
or
dec
xchg
cmp
daa
gs
rcrl
in
jge
jge
xor
xor
add
orl
call
push
mov
pushl
cs
adc
addr16
inc
mulb
test
add
push
xlat
pop
push
sub
add
inc
sub
pop
cmp
je
test
in
fsts
clc
push
xorl
lock
je
iret
dec
aad
dec
hlt
inc
cmp
jl
inc
popf
cmpsb
mov
inc
test
pop
inc
sbb
push
cmp
push
xchg
jge
mov
addb
mov
fisubrl
or
mov
adc
mov
addl
rolb
adc
or
and
push
inc
cwtl
jo
and
xchg
sbb
cmp
pop
add
push
sbb
clc
mov
inc
jnp
addr16
or
shlb
cltd
jo
subb
cmp
imul
fisubrl
out
clc
in
add
test
cwtl
and
je
mov
jg
xor
retw
call
mov
inc
andl
test
add
out
jl
dec
dec
lea
mov
or
int3
pop
jbe
sub
js
jl
cmp
lock
dec
mov
xor
fsubs
outsl
icebp
cmp
stos
loopne
jmp
dec
mov
add
add
ss
push
inc
sub
ja
jle
adc
adc
lea
mov
ret
rcll
movsb
out
sbb
inc
cltd
push
xchg
sti
pusha
scas
mov
fcompl
mov
scas
and
mov
mov
movb
sub
sbb
xchg
enter
inc
inc
out
ret
je
pop
xor
fistl
popa
aaa
loopne
push
leave
sti
loopne
lds
les
dec
xor
sub
sub
aaa
icebp
dec
mov
sbb
adc
inc
push
xorb
out
outsl
and
push
popa
and
add
add
jne
add
loope
je
inc
inc
cmp
cli
jle
call
ret
jp
movzbl
sbb
sbb
adc
shll
jmp
rol
loope
or
adc
jne
dec
jmp
and
cmp
or
dec
je
cmc
ds
push
aas
push
and
repnz
pop
push
jmp
lea
jge
cmp
dec
pop
lea
pop
ret
pop
add
sub
pop
shl
pop
mov
mov
adc
aam
mov
lret
je
fs
sub
cli
cs
scas
and
shl
push
rorb
aaa
add
divl
lret
add
mov
icebp
ljmp
iret
xor
xor
or
add
je
add
or
int3
cmp
xchg
ss
out
cmp
je
shl
cmp
xor
cli
and
faddl
mov
jmp
pop
addr16
outsb
or
test
mov
movhps
movsb
fstpl
fmulp
fld1
fld
fprem
flds
or
f2xm1
fimuls
std
mov
in
dec
mov
sbb
icebp
inc
repz
fisttpl
inc
lcall
loope
or
fdivrp
fsqrt
push
jmp
out
pop
fadd
pop
jge
jg
add
adc
popa
shr
negb
fsubrp
jmp
ficomps
enter
nop
popa
push
xor
or
subl
or
clc
adc
adc
nop
cli
in
push
xchg
and
fstp
push
sub
add
adc
mov
jbe
xchg
dec
add
loopne
mov
in
sub
push
sub
push
pusha
sub
xchg
mov
add
pop
popa
dec
sub
add
mov
cvttsd2si
cmp
inc
inc
xchg
mov
jg
out
add
cmp
inc
sbb
mov
bound
insb
push
sti
testb
test
jns
fstps
jb
icebp
outsl
lcall
stos
sbb
jmp
cmp
cltd
das
fcomp
adc
inc
dec
cmp
pop
cmpsb
pop
cmp
loopne
jb
fisttps
jge
nop
pop
enter
push
js
jle
aas
mov
int3
push
cld
mov
push
mov
leave
inc
add
cmp
mov
push
ljmp
nop
cmp
pop
pop
sbb
ret
rolb
and
and
jnp
cmp
dec
dec
or
mov
cmp
xor
lds
cli
xor
idivl
ret
inc
pop
and
dec
sbb
mov
or
lods
mov
or
add
loopne
add
mov
shr
pop
cli
pushf
outsl
fdivrl
cmp
cld
outsb
cmp
jge
mov
lea
mov
xorl
cmpl
ds
mov
push
xchg
les
mov
or
and
enter
jno
in
clc
int3
fsubrl
lcall
inc
enter
out
rclb
inc
rcr
repnz
inc
cli
clc
push
add
push
or
nop
adc
popa
mov
out
jmp
pshufw
dec
adc
push
push
adc
cmpsb
sti
out
inc
shlb
notb
sbb
add
or
push
push
scas
dec
xor
and
add
in
es
dec
push
pusha
or
mov
add
pushf
pusha
ljmp
dec
sub
je
movzwl
dec
data16
add
push
je
fwait
cmp
sbb
les
add
lret
push
aaa
sub
and
add
add
fdivrs
nop
fdivl
pop
cwtl
test
sbb
lahf
shlb
mov
mov
mov
ljmp
push
xchg
aam
loope
push
fcmovnb
push
inc
dec
xor
icebp
in
add
jnp
inc
ret
jp
call
jo
fldcw
sar
push
test
je
sbb
and
adc
ret
jge
mov
rorl
shll
cmp
xor
lret
pop
mov
dec
movsl
and
out
add
lock
add
ja
mov
pop
adc
mov
xor
jbe
jb
or
jmp
sahf
pop
pop
and
mov
adc
cli
imul
jecxz
jbe
stos
lock
push
shrl
adc
and
loope
test
push
sub
mov
sub
sbb
ljmp
pop
lret
mov
cmp
pop
mov
or
and
add
loopne
add
je
inc
into
loopne
push
dec
sub
jnp
adc
sbb
shl
fs
push
jmp
add
sarb
mov
cwtl
or
xor
dec
aas
push
mov
jb
pop
xor
adc
adc
rcrb
aas
cwtl
iret
sub
xchg
mov
sbb
data16
push
jp
cs
cmp
pushl
out
and
jl
add
hlt
pop
add
mov
fbld
pusha
inc
add
mov
pop
mov
mov
mov
add
xor
jb
test
dec
in
jo
cmpsb
push
fcoml
and
jo
popf
test
ficomps
push
jno
push
and
ss
mov
push
add
repz
jbe
icebp
notb
lock
mov
pop
lret
push
leave
je
cmpl
cmpsl
dec
fidivs
test
dec
into
adc
adc
cmpsb
hlt
enter
mov
add
or
out
mov
rcl
cmc
jnp
cwtl
or
push
in
insb
jecxz
push
add
bnd
ret
mov
add
sbb
ja
test
mov
add
inc
add
push
xor
pop
in
ss
aaa
roll
cs
or
imul
pop
sub
pop
test
mov
cmp
mov
adc
data16
pop
cmp
ja
je
pop
pop
fmuls
or
xchg
addb
or
popl
and
ljmp
jne
push
add
js
jne
les
ja
in
push
add
add
sub
popl
or
push
mov
sbb
add
dec
cmp
int3
pushf
inc
or
add
sbb
and
out
push
movsl
dec
repnz
inc
mov
subl
xor
jmp
cwtl
pop
cs
push
in
add
dec
push
jae
insb
andb
das
xchg
fildll
dec
fildl
mov
je
cmp
and
das
add
int
mov
lcall
and
sbb
sbb
mov
pop
and
and
mov
inc
and
dec
or
icebp
or
push
orb
andb
cld
out
mov
test
push
push
add
or
pop
loopne
cltd
cwtl
push
fdivrl
fs
mov
or
dec
cmp
jl
lahf
mov
push
or
ret
leave
clc
or
loop
push
adc
sbb
mov
dec
adc
loopne
push
sahf
out
pop
sti
mov
push
je
xor
mov
add
add
call
cmp
movsl
std
or
dec
or
push
or
aaa
xchg
push
push
xchg
and
inc
sub
or
sub
jb
out
ret
test
aas
jo
add
aaa
add
xor
sub
addr16
cmp
push
cmp
rcll
out
or
mov
inc
nop
dec
sahf
aas
add
jp
mov
jp
xchg
inc
cmp
inc
lcall
mov
subb
mov
mov
mov
bound
loopne
jo
or
addl
fimull
add
or
pop
ret
mov
or
cmp
xor
lret
xchg
sub
les
add
push
dec
mov
fsts
and
out
inc
jb
push
push
push
pop
or
pop
mov
sbb
in
inc
cmp
jo
and
sti
sbb
std
daa
add
call
sub
aad
fisttpll
cs
pop
js
or
adcw
icebp
daa
mov
je
inc
sub
add
adc
fwait
jo
int
adc
iret
popf
add
gs
xor
push
and
add
mov
pop
je
outsb
out
push
push
adc
inc
jns
andb
push
pop
out
and
call
xlat
push
pop
xor
mov
gs
repz
mov
into
outsb
and
adc
mov
or
cmp
out
in
mov
nop
orl
add
fdivrl
lret
push
ds
ficomps
add
inc
call
cmp
aas
in
ss
mov
inc
dec
push
out
gs
shlb
out
cs
mov
ret
inc
xor
adc
dec
jns
cmp
pop
frstor
sub
jmp
cmp
cmc
es
inc
cwtl
in
dec
sub
aaa
mov
dec
mov
add
push
push
cs
imul
hlt
lock
popa
cmp
or
or
and
je
imul
mov
sub
xchg
or
jo
or
mov
sbb
ret
cmp
sub
push
jg
negb
mulb
ja
add
hlt
add
push
or
inc
or
jnp
incb
push
push
cmp
mov
and
jae
jnp
mov
faddl
mov
fmull
push
push
or
fldcw
inc
sub
mov
stos
or
dec
dec
xchg
dec
push
pop
andl
cmp
fs
mov
sub
scas
subl
gs
test
test
cmp
cmp
mov
lods
cmp
inc
mull
xor
add
cmp
negl
mov
cmpsl
xor
adc
testb
cmp
mov
leave
rclb
loop
sbb
jbe
and
inc
pop
push
inc
loop
mov
add
dec
and
jno
in
lcall
xchg
cmp
roll
add
out
movsb
add
add
repnz
cwtl
inc
add
es
or
push
mov
andl
lock
jge
mov
loopne
ret
inc
setae
cmp
pop
push
jb
inc
fcoms
pop
popa
add
notb
adc
lods
add
add
push
test
sub
mov
test
jne
push
inc
pusha
jbe
or
sbb
mov
jp
push
andb
orl
and
and
out
jne
fs
jmp
or
pusha
push
push
sub
inc
jne
mov
pop
jb
hlt
xchg
jl
rolb
in
adc
imul
insl
dec
adc
jo
cli
push
aaa
mov
ja
ss
xlat
icebp
adc
xchg
cmp
sbb
imul
imul
ja
push
inc
jb
add
mov
int
xlat
cmpl
outsl
mov
popa
mov
mull
scas
sub
dec
scas
shll
inc
insb
pop
cld
sbb
jb
mov
push
add
cmp
mov
jge
cmp
insb
or
or
and
and
push
pop
setns
insl
popa
popa
dec
outsl
in
add
xorl
inc
or
jb
hlt
or
movsb
xlat
push
mov
push
rclb
pop
xor
or
test
pusha
scas
lods
sbb
pop
insb
mov
push
or
pop
cmp
or
or
daa
jl
and
push
xlat
xor
test
int3
push
push
faddl
imul
mov
xor
sub
add
int3
inc
add
daa
mov
inc
loopne
fists
ljmp
loopne
fs
jl
ja
pop
push
fldl
and
push
or
pop
lea
mov
xchg
mov
mov
or
andb
jmp
mov
adc
scas
mov
dec
or
mov
push
and
dec
roll
pop
jbe
sub
mov
push
push
xchg
sub
sub
insb
adc
imul
lea
push
or
push
jg
mov
mov
in
jl
ret
push
repnz
adc
test
sbb
inc
out
aad
bound
ret
inc
push
sbb
mov
and
push
inc
xor
dec
mov
add
pop
aas
lods
mov
push
adc
xorb
adc
mov
cmp
jl
mov
insl
inc
ja
or
dec
sbb
icebp
mov
xor
xlat
fcmovbe
jg
test
and
sbb
repz
or
loopne
roll
and
test
sub
sub
jp
lcall
les
adc
adc
lret
xor
add
or
out
lods
or
xchg
and
and
mov
inc
loope
xor
int
jge
leave
pmaxub
mov
cmp
push
filds
pop
pop
insb
pop
ret
dec
jl
sub
xchg
adc
dec
xchg
add
adc
jbe
or
pop
rorb
mov
aas
or
mov
stc
and
xchg
int
div
cmp
mov
fneni(8087
cld
lcall
jne
pop
xor
mov
push
sub
add
enter
add
ljmp
dec
xor
or
add
cmp
jl
jb
gs
sbb
sub
jb
xor
dec
fbstp
insb
push
mov
test
or
std
mov
push
sub
rolb
inc
mov
push
pop
fldl
mov
and
cmp
test
jp
push
cmp
mov
xor
add
xor
movsb
pusha
or
pop
movsl
add
jnp
movsb
mov
jle
mov
clc
hlt
xor
out
lods
into
or
mov
loopne
ret
jnp
cwtl
psubq
daa
stc
xor
cmc
xor
add
or
cmpsb
mov
loop
inc
jl
add
outsb
clc
rcll
cltd
dec
loopne
mov
inc
lcall
xchg
mov
or
cmp
xchg
sbb
ffreep
pop
cltd
jle
inc
fiadds
mov
adc
adc
rclb
cmp
sarb
gs
mov
int3
and
pop
push
rorb
dec
les
and
icebp
aad
jbe
pop
orb
push
sub
je
jo
dec
inc
aaa
cmpsb
cmpb
push
dec
clc
jmp
dec
cmp
rcrb
dec
cmp
push
jbe
dec
push
push
push
push
arpl
push
rol
jb
pop
popa
ljmp
push
push
subb
iret
jge
into
pop
adc
daa
nop
fcomps
adc
les
stos
mov
repnz
mov
push
cmpb
gs
mov
pusha
xchg
mov
and
add
push
or
data16
pushf
out
adcb
fiaddl
xchg
loop
enter
sbb
dec
sbb
dec
xchg
mov
idivb
jb
lea
push
popa
rcr
add
push
and
sbb
mov
packuswb
lds
test
shll
mov
adc
nop
pop
icebp
bnd
shlb
aam
fstl
icebp
add
daa
cs
pop
icebp
mov
and
stc
add
xor
outsb
mov
inc
pushf
jl
mov
and
and
das
sbb
pusha
stc
or
mov
pop
and
dec
jne
jbe
fstpl
cli
ret
shll
rcrb
movsl
xor
jne
adc
pop
dec
int3
pop
jmp
inc
adc
je
mov
xchg
das
aad
js
xor
inc
aad
and
or
sub
jns
mov
sub
adc
xor
jne
es
ret
mov
add
and
adc
push
jmp
xchg
and
xlat
jne
pusha
push
jno
mov
test
cltd
dec
xor
popf
dec
push
scas
outsb
cs
sub
jo
mov
lea
mov
fildll
out
push
push
add
pop
lret
sarb
ja
fs
cmpsb
fcoms
xor
mov
jae
sbb
inc
test
test
xchg
pop
cmp
push
outsl
lock
sub
dec
mov
je
cmp
cmp
cld
call
mov
adc
gs
cltd
add
movzwl
dec
cld
loope
add
jae
jb
ret
inc
push
sub
and
adc
fimuls
ss
mov
jl
xchg
or
sub
test
add
loope
leave
push
sbb
dec
sub
fsubrs
cmpsb
dec
rorl
pop
lods
push
int
lcall
cmp
inc
sbb
inc
mov
mov
test
dec
mov
dec
cmp
movd
divb
cmp
outsb
dec
or
and
sti
inc
adc
je
cmp
cmpsl
je
pushf
test
add
push
inc
adc
inc
cld
cmp
call
mov
xchg
mov
pusha
mov
iret
mov
push
or
sbb
adc
cmp
iret
and
and
xchg
js
ret
jb
in
add
push
push
and
and
jb
subl
fimull
sub
das
enter
push
adc
pop
sbb
jne
xchg
push
mov
cmp
push
adc
mov
mov
sub
stos
add
add
mov
dec
or
sub
inc
nop
stos
aas
call
outsl
push
push
dec
scas
inc
xchg
addl
xorb
fcomi
sub
aaa
mov
fs
jbe
inc
and
xchg
add
in
aaa
dec
lret
push
je
faddl
sub
iret
clc
push
jl
imul
or
jo
adc
dec
or
mov
movsl
add
xchg
je
xchg
daa
outsl
and
sub
jp
sub
xor
lret
or
mov
jmp
or
inc
outsb
loope
cmp
and
dec
add
mov
sbb
dec
clc
xor
add
dec
or
xchg
mov
and
mov
and
lret
fdiv
pop
sbb
ret
pop
push
ja
push
sbb
clc
mov
adc
mov
pusha
add
adc
xchg
jns
aas
jnp
repnz
sub
data16
lahf
fdivs
call
xchg
lods
cs
dec
jb
loopne
cmpb
mov
enter
je
cmpl
js
fsubr
fadds
add
dec
daa
and
shll
dec
clc
inc
popa
pop
add
sahf
xchg
push
add
je,pn
test
or
mov
ret
add
mov
sbb
inc
lock
data16
jl
movsl
mull
mov
daa
rcrl
pop
inc
adc
pop
test
lahf
inc
pop
push
mov
mov
jp
xor
test
xor
scas
adc
xchg
inc
inc
lcall
popf
iret
lcall
sub
mov
mov
mov
test
dec
mov
movsb
xor
cmp
jle
and
dec
pop
xor
arpl
in
push
xor
cmpsb
pop
and
push
push
and
and
into
or
xlat
push
arpl
lret
xlat
mov
mov
mov
lea
adc
jo
inc
test
lcall
jns
push
ja
adc
mov
cmp
or
fmulp
and
inc
dec
dec
lret
lds
mov
push
andb
mov
movsb
dec
mov
mov
bound
mov
pop
sub
mov
jbe
add
lret
shrl
mov
jg
das
mov
mov
xorl
popa
stc
imul
or
rolb
mov
das
adc
pusha
stos
xchg
add
frstor
push
sbb
cmc
in
add
mov
aaa
subb
call
popa
fwait
test
adc
pop
dec
jp
dec
inc
or
jb
and
inc
adc
add
push
adc
xlat
into
push
push
push
adc
stos
insl
push
inc
cmpsb
mov
lahf
rorl
int
adcl
inc
mov
testb
imul
mov
jne
lock
and
fmuls
sbb
sbb
sbb
adc
cltd
add
adc
pop
mov
out
cmp
dec
and
inc
loope
bound
xchg
or
lcall
fdivl
mov
or
mov
mov
movl
mov
fcomps
mov
or
sub
es
test
push
xor
inc
mov
jo
or
andl
mov
shlb
outsb
add
jl
sbb
inc
test
out
xor
int
xchg
pop
push
adc
fadds
xchg
fwait
push
push
push
push
dec
mov
xor
jne
inc
or
ret
and
cmp
pop
sti
pop
push
mov
add
inc
add
mov
mov
jne
adc
lea
push
loopne
mov
cmp
sub
mov
loopne
mov
jns
xchg
xchg
js
les
je
or
sbb
es
push
in
push
sbb
mov
mov
cmpsl
mov
test
cmpsl
jo
mov
cmp
mov
mov
push
push
push
push
fwait
sub
pop
sbb
repnz
adc
test
mov
jmp
mov
incb
adcl
sub
mov
pop
or
dec
adc
or
mov
add
xorb
pop
stos
dec
and
or
jo,pn
or
push
movb
in
bswap
xchg
add
push
add
xor
cli
inc
mov
inc
or
cmc
and
repnz
push
jmp
push
das
add
inc
lret
mov
call
fadds
xchg
sub
in
or
mov
jbe
int
dec
sbb
lds
push
test
sub
mov
pop
pop
sub
shl
pop
dec
inc
sahf
sarb
add
jl
inc
adc
jne
cmpsl
lea
pop
addl
push
push
dec
ret
addl
add
push
push
sti
sbb
sar
daa
adc
mov
test
ret
icebp
xchg
mov
push
push
clc
sub
xorb
and
mov
mov
mov
mov
ret
int
js
pushf
push
aad
jae
pop
loope
pop
in
popa
lods
scas
dec
call
aaa
stos
call
adc
test
jg
orl
pop
lods
mov
adc
sbb
les
adc
mov
sbb
push
ss
test
add
mov
mov
mov
xlat
mov
repz
cmpsl
dec
jmp
sbb
loop
pop
push
lds
push
mov
xor
add
pop
sub
xchg
dec
outsl
cs
sbb
and
orl
movb
arpl
fwait
mov
ret
add
aas
and
scas
push
fnstenv
push
push
sahf
xor
mov
push
aad
adc
mov
lea
jae
addb
fsts
push
or
mov
mov
inc
and
adc
movsl
in
pop
mov
mov
movsl
lock
mov
or
jne
mov
push
xor
outsb
mov
js
pushf
cmp
test
adc
es
je
pop
adc
sub
xchg
mov
jno
pop
adc
ret
sbb
test
or
mov
sbb
push
in
ss
lea
repnz
aaa
cmp
cmpl
push
lahf
xchg
cld
add
mov
push
push
sub
adc
xchg
nop
daa
add
jns
cs
push
push
cmp
and
shl
pcmpeqw
xchg
and
add
push
and
jae
in
loope
jno
mov
out
loop
clc
add
sbbb
push
and
scas
and
int3
mov
xor
rcll
or
cmpb
jp
push
push
mov
and
sub
mov
push
jg
add
or
xor
sarb
push
mov
push
mov
inc
lahf
pop
adc
incl
add
inc
and
les
sub
push
or
iret
cs
js
cmp
orl
dec
adc
jl
add
sub
xchg
lock
xor
add
jmp
adc
or
mov
sub
jl
ficompl
pop
xchg
mov
fistpl
and
sbb
mov
or
inc
sbb
sahf
mov
add
test
add
adc
lcall
mov
lock
mov
mov
and
test
lea
je
push
repz
dec
jl
xor
add
addb
pop
sbb
adc
xor
push
xor
or
sbb
cmp
push
pushf
fcmovbe
in
jbe
scas
into
jp
jmp
aam
test
push
push
push
push
adc
dec
xchg
sub
nop
sbbl
test
fisubrs
loop,pn
inc
or
shll
jmp
push
sub
mov
jg
mov
lock
dec
ja
je
mov
aaa
and
fisubrl
dec
ljmp
loope
inc
imul
fidivrl
inc
fucompp
push
mov
mov
sti
arpl
test
push
mov
packssdw
fdivr
pop
rorb
or
dec
fisubrs
in
and
cli
aas
test
adc
xchg
mov
test
or
cmp
mov
inc
mov
jp
fdiv
inc
push
and
repz
or
loopne
mov
repz
fsubs
dec
or
fwait
cmp
adc
iret
or
out
fs
inc
push
or
in
mov
lock
mov
xor
push
int3
or
cmp
mull
dec
cs
arpl
mov
stos
mov
pop
ss
adc
mov
add
ret
adc
and
sub
aaa
clc
sbb
mov
popa
sbbl
pop
push
jb
clc
lods
jne
cmp
mov
cld
jbe
sub
out
jge
stos
inc
xchg
xchg
lock
jp
inc
mov
dec
jno
cmp
jb
cmc
loopne
push
inc
lds
dec
test
mov
pop
sbb
aaa
dec
mov
jmp
push
aaa
outsl
cmpsb
rolb
in
and
outsl
xor
cmpsb
test
xor
sahf
add
push
fcom
leave
sbb
cmp
pop
cmp
push
popa
fsubrp
or
mov
cmp
and
mov
add
nop
lcall
mov
in
sbb
pop
add
pop
inc
inc
cmp
cmp
sub
pusha
mov
or
call
test
scas
cmpsb
jns
clc
add
push
insl
add
adc
add
add
mov
mov
or
test
and
add
loopne
sub
lea
mov
mov
cmp
mov
add
je
js
pop
fs
add
add
lods
aaa
fcom
lods
or
add
ret
std
adc
cmpsl
add
sbb
aaa
jmp
jmp
xchg
xrelease
mov
or
dec
jb
test
sbb
inc
shl
cli
rcrl
xor
push
pop
sub
ss
outsb
adc
dec
jnp
cmp
adc
shlb
or
adc
cmpsb
mov
fstp
sub
mov
cld
push
mov
or
or
add
fsubl
and
movsl
add
jl
pop
inc
xor
lods
test
and
jl
and
cmp
jecxz
insb
cmpsl
icebp
in
popf
fbstp
pop
xchg
inc
add
dec
push
push
jg
dec
outsb
dec
lret
jnp
cmc
dec
mov
int
inc
insb
js
push
leave
fwait
out
push
and
push
and
insl
jl
push
dec
push
push
mov
into
mov
popa
cwtl
add
mov
and
js
cwtl
jo
mov
nop
insb
add
cmp
loop
push
inc
xor
lahf
ja
test
sub
out
lds
lock
sti
sbb
mov
in
inc
loope
lock
mov
push
out
ret
shrb
mov
add
inc
mov
daa
sbb
out
clc
push
or
rolb
xchg
sbb
popa
loope
push
inc
pop
sbb
call
scas
rcr
pop
xor
or
jecxz
pop
arpl
cltd
inc
sahf
inc
push
dec
sbb
js
or
pop
inc
dec
lea
test
das
push
inc
and
xor
js
add
push
inc
push
xor
push
jo
mov
ss
sub
jmp
leave
pop
mov
xor
aas
out
addr16
push
pop
cmpsl
out
outsb
insb
aaa
jne
leave
mov
mov
add
inc
adc
mov
dec
movsl
add
cmp
sti
jl
dec
push
clc
xchg
mov
add
push
fldenv
push
pushf
pop
inc
dec
add
jnp
cmp
mov
out
xchg
adcb
testl
cmp
loopne
xchg
and
bound
or
mov
icebp
push
rol
and
sarl
dec
mov
fildll
ss
add
inc
and
shll
das
aas
cs
add
dec
enter
movsb
fadd
push
cmp
jecxz
dec
cmp
pusha
jecxz
and
bound
mul
mov
mov
icebp
mov
adc
inc
push
push
sub
shlb
add
or
fcoml
push
jns
pop
jle
cmp
push
loop
leave
lret
cmc
sbb
mov
adc
push
fmul
mov
push
push
push
xor
repz
xor
cwtl
adc
pop
je
xchg
or
jge
in
push
push
sbb
sub
jecxz
add
push
cmp
cmp
imul
test
mov
ret
push
loop
stos
push
mov
faddl
inc
inc
mov
mov
pusha
cmp
or
rolb
xor
sub
or
jl
sbb
add
sbb
mov
and
mov
mov
add
scas
aad
mov
bound
scas
add
ror
lds
jl
ret
ret
orb
xor
movsl
push
add
lods
sahf
push
pop
sub
add
mov
andl
dec
call
je
cmp
jle
cld
xor
inc
adc
adc
fldl
rorl
lcall
fwait
push
jg
jb
pop
mov
mov
mov
jmp
lock
lock
dec
nop
cld
xor
jne
jecxz
movsb
push
dec
in
mov
inc
or
and
sarb
pusha
adc
pop
add
cs
rorb
mov
push
push
mov
cmpsl
push
in
push
lods
sub
outsl
mov
mov
fcompl
pop
jb
jns
dec
loop
xor
jmp
out
jne
mull
insb
push
cmp
sub
push
lcall
cmpb
or
push
mov
imul
push
adc
add
push
ret
dec
cs
lea
nop
fs
mov
std
push
loope
or
push
xor
xor
lea
mov
out
inc
inc
scas
sub
repz
call
out
fdivrl
clc
loop
add
mov
outsb
mov
adc
std
push
rolb
inc
mov
sbb
mov
fstl
mov
lods
and
ret
orb
pop
cmpb
test
mov
rclb
lods
and
adc
mov
lea
cmp
iret
fisubrl
fbld
fstp
sbb
adc
pop
aad
mov
sahf
movsb
ret
cmp
mov
push
inc
sbb
lea
je
ja
repz
jp
adc
jb
add
push
popf
mov
fisttpl
sbb
sbb
add
xchg
adc
sbb
jo
cmp
inc
mov
subl
pusha
inc
push
lea
or
ret
inc
jmp
xchg
scas
fidivl
cmp
xchg
inc
lcall
in
add
cmp
ret
ja
xchg
mov
push
mov
mov
dec
or
inc
mov
lods
xadd
rorl
jge
out
sub
movsb
les
adc
mov
cwtl
sbb
xor
dec
dec
loope
mov
mov
push
adc
fiaddl
inc
sub
es
mov
mov
push
jae
iret
mov
fcoms
pusha
pop
push
or
push
and
icebp
fidivs
or
subl
fbld
push
icebp
mov
out
mov
clc
adc
adc
into
mov
push
mov
push
mov
mov
cmp
adc
add
sbbl
pop
sub
int3
dec
ss
shl
shl
adcb
imul
sub
inc
stc
adcb
cli
addb
ficoms
clc
int
pop
xchg
inc
lea
addr16
clc
jmp
xorl
ret
dec
jbe
add
dec
lock
push
into
pop
dec
inc
sbb
outsl
add
and
push
aaa
mov
mov
orl
push
xor
push
sbb
sub
inc
fistl
dec
add
mov
sbb
dec
xchg
rcl
pusha
movsl
daa
cmc
push
or
cmpsl
and
lds
icebp
repz
dec
pop
data16
aam
push
clc
sub
jmp
repz
and
leave
filds
pop
or
nop
and
aas
nop
sub
fisttpl
out
xor
ret
add
mov
sbb
cs
mov
sub
cwtl
cmp
sahf
or
and
popf
mov
add
ds
inc
add
outsl
or
mov
out
fnstsw
mov
enter
add
sbb
int3
inc
push
jmp
xchg
or
dec
add
test
inc
push
add
jae
mov
in
roll
xchg
or
ljmp
push
add
sahf
rolb
cmp
add
mov
pop
dec
jo
pop
pop
inc
xor
lock
ret
mov
cltd
adc
ret
fdivl
adc
mov
sub
dec
sbb
xor
xor
jo
enter
add
sbb
leave
mov
lar
or
adc
lret
push
push
inc
dec
lcall
js
xchg
push
xchg
lds
adc
xchg
shrl
jo
sub
sahf
push
mov
push
ss
dec
repnz
cmp
push
xchg
lds
jns
push
push
push
adc
jl
orb
fxch
out
adc
iret
or
xchg
out
cmp
adcb
xchg
enter
faddp
dec
lock
add
sbb
stos
pusha
daa
cld
insb
enter
mov
push
xor
ficompl
adc
adc
cmp
pusha
cmp
andl
cltd
bound
inc
adc
mov
sbb
push
push
sbb
xor
sbb
lds
mov
in
decb
cmp
mov
or
add
push
inc
adc
daa
cwtl
inc
or
out
adc
movsl
sbb
test
orl
dec
fcompl
sub
les
xchg
xchg
mov
sarl
add
xor
add
les
jno
mov
syscall
mov
sarb
les
push
xor
rcll
xchg
inc
mov
cmp
jb
sbb
inc
cmp
rcr
adc
adc
or
fs
xchg
fnsave
and
enter
pop
sbb
lds
ror
or
ret
loop
test
add
icebp
push
movsb
jge
enter
out
jb
or
out
outsb
adc
cmpsb
mov
pop
ja
clc
sub
andl
jp
mov
ss
pop
leave
jmp
int3
out
or
or
xor
jecxz
mov
dec
sub
mov
lock
sub
inc
and
cmp
or
cli
es
fimuls
scas
inc
adc
sbb
inc
and
idivl
or
fwait
inc
call
mov
pushf
sub
cmp
fidivrl
lcall
add
lcall
sbb
test
das
nop
and
xchg
add
xchg
and
xchg
add
dec
xchg
add
sbb
pop
adc
and
imul
dec
repnz
xor
sub
push
js
dec
pop
or
ror
add
fsubr
push
and
dec
cmp
mov
ds
push
pop
adc
mov
out
push
inc
or
sbb
xchg
pop
sbb
xchg
push
adc
push
mov
test
xchg
and
lret
pop
xchg
cmpsl
push
jge
xchg
test
push
xchg
inc
jo
scas
test
lahf
sbb
push
popf
mov
mov
int3
adcl
or
adc
scas
or
roll
and
mov
pop
popa
jnp
xor
xchg
inc
popa
repnz
sbb
dec
adc
mov
xchg
pushf
out
xchg
sub
adc
adc
ljmp
inc
or
cmp
mov
push
dec
lods
in
popa
sub
scas
mov
sub
scas
pop
xchg
inc
mov
lea
add
sbbl
jge
addr16
mov
or
lea
mov
mov
sub
xchg
insl
or
inc
dec
pop
add
test
test
mov
into
loope
lds
cmp
cwtl
push
dec
lds
in
push
jge
shlb
mov
sub
mov
rorb
mov
jns
lea
les
jbe
popf
mov
xchg
loopne
inc
jo
aas
shlb
leave
das
cld
lock
xchg
lea
sti
cmp
fs
les
push
push
push
cmp
and
cmp
mov
inc
jo
xor
movsl
add
insl
sbb
xchg
adc
cltd
aas
jne
lods
adc
rcl
shrl
xchg
xor
fcom
lret
gs
pushf
jnp
push
pop
gs
pop
dec
xor
xchg
pop
sbb
divl
pop
jns
and
inc
cltd
rorl
lcall
push
enter
jge
jo
insb
add
sub
das
inc
and
add
or
fbld
sub
add
inc
add
sbb
mov
sbb
es
ds
repz
test
movsl
cmp
aaa
fisttpl
fsubl
mov
pop
imul
cmpsl
inc
gs
push
sarl
mov
mov
loopne
into
and
push
jne
out
ds
subl
sbb
jecxz
adc
push
push
icebp
pushf
cmp
call
inc
jns
add
dec
or
mov
sub
shlb
icebp
add
dec
dec
loopne
insl
dec
xor
mov
inc
inc
mov
and
aas
xchg
pop
fadds
jnp
jo
pop
adc
mov
mov
mov
loop
sub
mov
sti
fs
add
mov
pop
xchg
add
dec
add
popf
pop
adc
pop
dec
pushf
lea
sub
mov
repz
xchg
mov
sub
xorl
dec
pop
dec
push
nopl
push
sbb
jo
or
or
pusha
popa
fwait
stos
lahf
add
push
clc
and
cmp
movsl
push
inc
test
xchg
shlb
int3
ja
ret
push
push
incl
aam
mov
imul
add
and
push
fwait
or
imul
pop
sbb
addr16
imul
or
popf
pop
outsl
in
popf
adcb
out
aas
divl
fidivs
sub
xchg
rolb
loop
or
xor
or
jne
push
jp
mov
mov
lahf
jmp
mov
mov
adc
test
rcrb
or
fdivrl
push
jbe
mov
decl
push
adc
popf
add
loope
es
or
mov
das
loopne
ljmp
sbb
mov
and
or
hlt
orb
std
sbb
add
lret
ja
daa
ja
fpatan
xchg
or
mov
or
lock
adc
ss
js
ffreep
dec
stos
dec
and
mov
xchg
js
sub
jp
rcll
cmp
or
rclb
test
out
add
inc
lahf
xchg
loope
clc
push
or
xchg
neg
cmp
inc
fwait
push
cld
fwait
ret
xor
xchg
xor
jp
pop
mov
sub
inc
insb
test
mov
mov
jnp
push
xchg
stos
and
xchg
mov
sbb
fs
or
shll
insb
cmp
sub
fcoml
jmp
adc
pop
inc
push
dec
into
pop
stos
rcll
mov
stc
cmp
popf
clc
movsl
pop
ret
xchg
xchg
push
sahf
sub
daa
nop
dec
dec
sahf
sub
cmp
xchg
sbb
jns
aad
sahf
sub
ret
pop
test
adc
push
push
jecxz
add
imul
xchg
cwtl
loope
mov
mov
outsl
mov
sbb
fdivl
push
xchg
pop
xor
icebp
mov
xlat
mov
outsl
shr
jb
xchg
cmpl
sbb
cltd
dec
inc
and
sub
lods
sbb
pop
lea
jmp
pop
fistl
mov
jno
cs
adc
imul
cs
xor
jb,pt
dec
aam
xor
xor
lock
push
mov
push
add
pop
add
nop
jl
pop
mov
add
subb
dec
mov
xor
mov
jne
pop
loop
outsl
pushf
cmpsl
adc
pop
dec
pushf
xlat
mov
or
xlat
jge
mov
outsl
pushf
xlat
scas
mov
push
movsl
enter
add
add
dec
popf
add
sbb
add
daa
cmp
push
cmpl
cmpsb
mov
popf
add
lods
out
adc
cmpsl
nop
adc
xchg
pop
xor
inc
add
repnz
scas
insl
inc
popf
xor
xor
dec
mov
xor
add
hlt
mov
add
or
mov
shrb
push
xchg
setbe
push
ja
mov
popf
sbb
test
outsl
inc
mov
das
mov
inc
pop
or
jp
push
add
jg
sahf
out
pop
pop
loopne
subl
and
adc
test
and
sub
sub
inc
add
jge
mov
jo
mov
push
lret
mov
imul
jecxz
jbe
in
push
out
popa
gs
push
mov
mov
addr16
sbb
push
insb
or
push
dec
outsb
loope
cmp
sbb
sub
push
sub
insl
imul
inc
scas
shrb
movsb
xor
ds
xchg
ja
jmp
ds
xor
or
ljmp
add
add
scas
push
sub
out
in
ds
dec
cmpsb
lea
repnz
in
push
test
jns
inc
mov
out
jbe
sbb
xor
out
shrb
lock
icebp
mov
add
jno
and
lret
or
dec
call
rcll
imul
mov
sbb
inc
or
pushf
jb
pop
jnp
dec
loope
jle
cmpb
mov
pushf
nop
je
test
cmp
cmp
ja
add
jnp
push
test
mov
sub
mov
sti
bound
mov
adc
xor
or
jns
int3
jo
pop
nop
cmp
popa
dec
fimull
dec
xchg
test
mov
mov
mov
lcall
imulb
cmp
imulb
out
ljmp
shll
push
xchg
or
adc
les
adc
fisubs
adc
leave
inc
sbb
pop
xor
xor
in
push
call
inc
fsts
pop
dec
imul
mov
push
sub
pop
sbb
xor
jl
popa
dec
xchg
pusha
mov
mov
and
mov
sbb
pusha
push
sub
jo
inc
outsb
fwait
dec
call
cmp
shlb
push
je
scas
sbb
inc
mov
adc
adc
dec
cmp
fdivr
sub
gs
test
xchg
mov
adc
mov
ficomps
sbb
loop
push
adc
jl
or
mov
in
xchg
test
ret
mov
test
call
dec
cmp
mov
andl
test
mov
or
mov
xchg
mov
scas
ret
sub
iret
loop
fucomi
inc
mov
insb
adc
mov
xchg
xchg
jo
mov
cmpsl
pop
sub
js
fs
mov
push
out
and
dec
scas
push
xchg
rorb
sub
pop
out
dec
fstl
jno
jmp
fcmovu
jg
lea
dec
gs
inc
lock
shrb
push
pop
int
adc
mov
inc
adc
shr
xor
add
out
sbb
dec
xchg
fstl
dec
in
dec
lcall
lret
aas
cmp
hlt
jge
push
test
ret
addb
cmpsb
and
das
mov
lea
mov
and
xor
popf
add
dec
out
fisttps
push
enter
lock
pop
push
jl
sahf
dec
sbb
movb
aaa
loop
outsb
sti
push
sarb
cmp
xchg
adc
cli
orl
sbb
pop
xlat
dec
sbb
fdivr
jne
insb
je
pop
divl
fldl
cmp
sbb
sarl
decl
insb
inc
cs
cli
jbe
lods
lds
adcb
gs
push
sbb
je
dec
mov
hlt
sub
push
mov
fwait
jnp
dec
jge
or
cwtl
and
adc
imul
mov
xchg
out
ja
sub
or
push
dec
adc
dec
add
mulb
adc
rorb
mov
addl
adc
aad
push
xlat
dec
test
aam
pop
push
adc
push
inc
pop
sub
xor
cmpsb
inc
or
bound
testb
add
push
inc
push
inc
mov
or
scas
jb
adc
dec
rcrl
adc
sahf
sbb
dec
mov
push
loopne
jno
jno
repz
imul
sbb
pop
fdivl
jbe
jno
push
inc
jno
cltd
loop
push
popa
jo
jl
mov
pop
mov
ljmp
jae
lcall
out
push
pshufw
in
and
push
out
jb
inc
pop
pusha
sub
daa
xchg
test
mov
pop
addps
xor
xor
mov
cmp
or
sbb
mov
xchg
pop
pop
mov
lret
xlat
mov
and
or
sti
call
cmp
sahf
addb
cmp
inc
inc
push
dec
jbe
dec
hlt
push
dec
push
andps
sub
push
inc
or
push
mov
arpl
lods
repnz
or
or
xor
sarl
or
lods
sarb
mov
sub
rorl
jle
cmp
in
dec
mov
insb
lods
movsb
push
or
mov
push
cmpsb
rorl
add
pop
mov
adc
sub
inc
sub
pusha
fcmovu
push
add
push
mov
add
jl
add
lcall
push
fcoml
push
pop
mov
add
add
nopl
lods
incl
cmp
and
adc
pop
shlb
testb
lds
rclb
jmp
ret
movb
add
nop
mov
mov
mov
lcall
rclb
cltd
lock
jl
test
mov
or
mov
xchg
mov
jne
cmpl
jmp
xorb
mov
ljmp
jne
pop
add
sub
cwtl
jecxz
cmp
jp
mov
incl
or
jl
mov
loope
xchg
add
push
movb
and
in
and
dec
pop
jne
add
xchg
jbe,pt
dec
shlb
outsl
or
sbb
addr16
add
jmp
adc
lock
insl
jmp
or
inc
sub
inc
xorl
lds
loopne
testl
mov
mov
pop
cltd
test
ss
pop
xor
pop
icebp
loopne
dec
pusha
pcmpgtb
sub
mov
data16
cmp
sub
daa
jmp
fmuls
pop
je
cltd
mov
push
jmp
push
push
pop
in
sbb
loop
pop
or
push
daa
loopw
push
sub
xor
mov
xor
ja
rcrb
stos
mov
inc
test
pcmpgtw
mov
sub
xor
shlb
cmpsb
ds
cmpl
lret
sbb
outsl
lret
sbb
pop
push
in
add
sarl
loop
adc
je
decb
adc
mov
je
mov
enter
fcomp
add
movsb
sbb
adc
addr16
mov
iret
mov
pop
les
mov
enter
xchg
push
rclb
jne
jne
int3
or
jl
add
mov
sti
inc
lock
add
sarb
xlat
or
sarb
mov
mov
in
mov
loopne
movsl
das
and
inc
jge
mov
or
xor
push
cs
push
sub
fsubrs
inc
mov
bound
sbb
or
shrl
loope
or
adc
lea
or
dec
test
push
icebp
in
jnp
arpl
jge
and
js
xor
hlt
cmp
adc
sub
cmp
mov
stos
push
adc
mov
popf
cltd
or
dec
andl
dec
or
cmp
lahf
push
shll
dec
mov
sbb
mov
sub
sbb
lods
rcll
sub
cmp
int3
dec
sub
add
shl
leave
add
mov
leave
xor
jl
shl
bound
dec
rorb
repnz
ljmp
push
or
cmc
sub
jae
test
pop
dec
fnstsw
adc
pop
xchg
rolb
bnd
divb
adc
jb
push
mov
sub
iret
movb
shlb
pusha
push
aaa
pop
and
je
or
faddl
loopne
xor
mov
add
xorb
xchg
push
mov
adc
in
mov
sti
push
in
pushf
dec
hlt
or
xchg
lcall
orb
cs
adc
add
ljmp
fld1
or
fnop
mov
scas
pop
cmp
inc
push
push
testl
rolb
in
cltd
mov
dec
dec
add
cli
lds
and
sbb
inc
xchg
sahf
sub
jns
pop
ja
out
lcall
push
sub
lds
repnz
ds
test
scas
jb
fwait
fs
into
popf
and
in
cmpsb
dec
std
push
pop
add
mov
pop
push
test
ljmp
pop
push
es
sbb
xchg
js
sahf
jp
sbb
sahf
loopne
xor
mov
add
add
cmpl
int3
sbb
out
jecxz
pop
pop
or
lcall
inc
imul
add
nop
dec
sbb
xor
push
jae
push
sbb
cltd
cli
adc
adc
or
cli
inc
jne
insb
xlat
mov
enter
mov
sbb
or
xor
das
das
jnp
dec
push
jmp
jno
push
pop
fiadds
or
push
inc
dec
sti
orl
bswap
push
and
fistpl
cmpsl
sub
out
inc
lret
or
and
xlat
es
int
push
out
movsb
imul
xlat
mov
lock
insl
and
shrl
out
testl
pop
addb
inc
scas
jno
xchg
push
jns
sahf
gs
outsl
leave
xchg
jecxz
cltd
fiadds
inc
fldt
int3
je
cmp
cmp
and
addr16
in
inc
out
and
dec
sub
push
add
movsb
imul
push
movsb
add
sbb
push
pop
add
or
cmp
xchg
mov
lods
mov
cmp
jbe
push
mov
pop
ffree
stos
jge
cmp
adc
dec
ja
movsb
dec
cmp
and
jp
push
xor
xlat
sub
pop
ficoms
fldcw
inc
fstpl
pop
das
mov
sti
in
loopne
and
leave
test
push
add
jg
adc
test
xlat
or
xor
jae
jnp,pt
repz
test
add
xchg
mov
pop
or
insl
xchg
inc
shlb
or
push
xchg
xor
nop
jno
xlat
xor
insl
sbb
repz
xor
add
ja
out
pop
movsb
pushf
jne
cmp
xchg
cmp
fxch
or
pop
adc
int
jecxz
ficompl
leave
aas
xchg
into
cmpsl
leave
xlat
inc
pop
jae
dec
movsl
or
and
or
add
dec
leave
lea
bound
imul
sbb
out
rolb
add
push
sbb
mov
outsb
sti
pop
sub
push
fs
in
push
testb
out
push
ret
inc
movnti
stos
xlat
push
pop
and
mov
sub
pop
aaa
push
inc
lods
iret
rorl
pop
push
sti
daa
sti
mov
cmp
dec
data16
mov
push
orb
or
outsl
mov
mov
stc
mov
or
je
out
adc
add
add
and
xchg
push
adc
scas
push
mov
add
ss
mov
ret
and
mov
adc
jmp
xchg
cmp
push
pusha
sub
ret
sub
js
adc
xor
and
cs
sbb
dec
xchg
mov
out
push
ficoml
jne
mov
add
add
out
in
inc
ret
inc
into
addr16
mov
nop
or
xchg
insl
adc
push
push
pop
setne
lds
add
add
add
xchg
lcall
add
mov
xchg
sbb
test
test
movb
cmp
xchg
dec
test
jp
and
cmp
add
mov
pop
mov
mov
add
testb
lods
push
call
adc
mov
cmp
push
inc
in
out
nop
pop
mov
jb
or
mov
or
inc
lret
xor
jge
rclb
fistl
lock
or
pop
push
js
inc
xchg
shll
pop
jl
out
nop
jle
les
push
adc
out
mov
js
test
into
inc
and
repnz
mov
xor
xchg
dec
pop
inc
mov
add
sbb
mov
mov
add
fsubs
sub
pop
loop,pn
aam
dec
add
push
jbe
or
adc
sbb
push
in
push
stc
fstl
push
jb
ret
adc
in
pop
xchg
pop
xchg
aam
add
ficompl
jae
rcll
lods
ss
jecxz
shll
pop
movb
inc
adc
test
adc
mov
inc
xchg
sub
sbb
add
repnz
js
push
add
aaa
push
shl
adc
cmpb
popf
lret
mov
mov
sbbb
pop
jmp
mov
mov
cmpb
mov
and
adc
out
shl
jbe
outsb
push
mov
mov
jbe
or
mov
sub
loopne
pusha
push
jb
lock
cmp
call
pop
loopne,pt
cwtl
inc
or
push
adc
xor
or
push
sub
cmp
ja
add
ds
cmp
mov
xchg
jbe
mov
xchg
adc
jo
int3
or
insb
cmp
sbb
nop
bound
in
sti
lea
xorl
mov
and
test
mov
or
call
movb
out
rol
add
push
in
mov
dec
imul
neg
lret
sbb
or
dec
mov
mov
sub
scas
add
test
loopne
sub
in
pusha
outsl
dec
sbb
jp
and
adc
aaa
mov
add
xchg
xchg
sub
in
add
add
int3
stos
scas
repz
mov
clc
and
xchg
lcall
imul
push
inc
or
pop
ret
adc
rol
mov
xchg
xchg
sbb
mov
nop
mov
addl
mov
lret
fcmovbe
push
lahf
dec
and
xlat
or
push
pop
jne
add
ss
mov
negb
push
lods
fndisi(8087
mov
push
addb
push
inc
ret
outsb
or
lods
lahf
sub
add
pop
or
inc
dec
inc
clc
add
inc
into
rorb
in
xor
dec
aad
sub
or
lock
ret
adc
or
xlat
rolb
repnz
cmp
negl
add
jg
jo
push
pop
push
inc
push
mov
or
xor
ret
inc
xor
lea
fbstp
pop
add
ret
sbb
add
enter
add
push
push
lret
xor
andl
popa
push
rol
cltd
js
push
outsl
push
mov
je
outsb
adc
xor
fdivrp
push
xchg
jg
outsl
sbb
imul
xlat
cli
adc
adcl
or
sub
int
lea
fnstcw
jae
jo
and
sbb
sub
icebp
pop
jle
push
mov
test
xchg
xor
test
orb
sahf
int
rcll
mov
fcomp
sbb
or
mov
push
push
add
in
loop
stos
movsl
fwait
add
pop
ja
dec
sbb
fiadds
fisttps
push
add
addr16
push
outsb
imul
mov
aam
push
or
sub
jmp
pop
sbb
push
icebp
test
lea
loope
rep
dec
outsb
xor
push
jne
adc
mov
add
sbb
fisubl
adc
mov
addr16
add
test
dec
add
or
or
adc
aaa
xchg
lods
and
pop
jb
jge
or
adc
mov
idivl
dec
mov
cmpsl
sub
jl
and
movsl
incl
sub
xchg
xchg
sbb
adc
mov
mov
mov
notb
mov
push
rclb
jo
popa
cmpsl
fisttpl
test
pushf
adcb
outsb
loopne
pusha
push
or
aas
cmc
mov
es
fsubrs
movl
rorb
or
je
outsl
pop
push
clc
ljmp
mov
dec
dec
mov
dec
imul
or
and
push
push
jle
mov
push
inc
pop
jo
inc
dec
pushf
add
rcl
shrl
cmp
pop
mov
aaa
mov
sahf
call
cmp
mov
sub
pop
cmp
pop
imul
nop
cmp
inc
andl
fistps
mov
push
cmpb
dec
aaa
enter
loope
mov
push
mov
outsl
add
and
addl
jge
jb
or
ja
xor
pop
shrl
sub
push
push
mov
add
mov
test
je
call
in
pop
in
and
inc
test
pusha
fsubs
adc
and
jmp
lods
jmp
outsl
and
inc
cmp
test
pop
mov
inc
pop
jl
test
or
add
jp,pn
fiaddl
leave
shrl
sbb
jle
pop
dec
adc
hlt
xor
ds
ja
inc
or
in
cmp
je
add
imul
cmp
repnz
xor
adcb
sub
stc
loop
cli
adc
add
cli
aaa
xor
and
cmp
daa
cmp
mov
or
cmp
sub
aaa
push
push
add
mov
push
xchg
movsb
cmp
or
add
movsb
pop
jne
cmp
shr
fs
imul
ret
or
sbb
xor
jne
ret
xor
or
push
fdivrs
inc
ret
mov
rcrb
and
dec
std
je
inc
scas
cltd
mov
sub
enter
mov
jns
dec
cmp
les
inc
inc
mov
decl
xor
mov
inc
mov
add
incb
inc
sbb
je
or
es
cmpsl
jge
inc
jp
xchg
push
lock
xor
sub
hlt
jg
jne
sti
cmpsb
sar
cmp
ja
jmp
dec
loopne
and
or
dec
in
add
dec
xor
or
jbe
mov
and
les
lcall
and
jmp
test
je
inc
dec
xor
pusha
pushf
popl
loope
je
fs
or
int
movb
jle
jge
mov
icebp
add
sbb
adc
lret
orb
in
sub
lock
test
mov
fistl
pop
adc
inc
pop
ret
push
sbb
add
lahf
sbb
dec
push
test
sub
mov
or
dec
decl
je
push
shl
adc
arpl
adc
push
xchg
xor
xchg
and
lea
out
pop
jbe
pop
inc
rorb
aaa
sub
lds
in
in
add
sbb
loop
jbe
sub
orl
pop
fcoms
jae
call
test
pop
je
je
repz
or
test
cmp
mov
sbb
lret
bnd
push
sub
or
cmp
add
sbb
daa
add
mov
adc
adc
or
int
js
jne
call
pop
je
cmp
mov
addr16
in
lret
inc
out
mov
ds
sbb
pushl
ret
mov
out
or
jg
or
sbb
push
lods
dec
je
pop
or
or
fdivl
push
dec
cmp
sub
insb
popf
xchg
fs
mov
pop
xchg
rcl
dec
sbb
shlb
cmp
jge
lret
inc
insb
pop
add
add
push
add
add
clc
sub
push
inc
cli
sbb
add
shlb
add
add
ret
mov
dec
ror
push
lock
mov
cmp
loop
add
int
adc
xlat
scas
add
inc
ret
testb
je
or
bound
and
sub
or
inc
cmp
jne
es
aas
jnp
push
mov
cmp
lret
ss
add
inc
pop
lods
pop
and
das
sub
mov
ljmp
xor
fdivs
xor
mov
or
xchg
xlat
adc
cmpb
subl
int
loope
pop
add
push
call
orb
cmpb
jne
pop
js
loopne
jmp
xor
cmp
adc
test
addr16
xor
or
push
cmp
imul
xor
add
jmp
lea
cmp
ja
rolb
ja
loopne
and
pop
or
test
or
adc
inc
popf
xor
add
cmpb
sub
and
ret
add
mov
emms
and
jbe
jl
loopne
dec
shlb
mov
rol
xor
xor
jbe
cmp
pop
add
in
xchg
out
or
and
add
mov
mov
xlat
inc
cs
cli
adc
adc
mov
adcb
cmpsb
inc
rolb
pop
push
enter
pop
jne
add
scas
loope
dec
test
jmp
and
outsb
and
and
and
and
sub
and
scas
fstps
and
dec
and
and
add
sub
add
imul
push
movb
push
rorb
ja
or
inc
jnp
dec
shlb
lret
push
push
push
dec
or
aam
cmpsb
add
push
adc
imul
jecxz
add
mov
incl
loope
lock
je
jmp
sarl
or
inc
jge
fidivrs
or
fsubrl
imul
push
adc
adc
jmp
cmc
xor
ret
stc
cmpsb
jns
enter
loop
add
cmpb
hlt
and
cmp
jbe
jp
sbb
sbb
shll
fwait
push
push
fnsave
push
notb
inc
lds
scas
dec
mov
test
inc
mov
loopne
inc
js
inc
or
add
fstpt
add
fildl
cmp
adc
pop
fiadds
push
rclb
push
imul
dec
cs
xchg
xchg
rolb
mov
rclb
add
cmp
add
idivb
xchg
dec
adc
inc
xlat
negb
popa
movsl
jb
jbe
cmp
cs
add
mov
lcall
or
bound
lcall
rcl
cmp
jne
xor
add
loope
mov
or
test
cmp
adc
adc
push
addr16
cmp
jnp
rcrl
add
es
inc
jbe
scas
push
fisubl
loopne
or
mov
add
add
or
or
pop
sbb
or
or
add
into
mov
pushf
push
out
add
stc
push
or
stos
dec
sahf
dec
lods
xchg
cld
fs
dec
cmpl
aaa
jmp
and
cmp
mov
mov
jmp
cwtl
xor
bound
cmp
sahf
int
mov
mov
jmp
pop
call
lahf
ja
mov
ljmp
adc
add
dec
in
add
and
je
loopne
xchg
iret
sub
repnz
rsqrtps
sbb
sub
mov
inc
ss
mov
aas
push
out
cmpb
jae
adc
push
popf
jle
nop
push
add
fnstsw
sub
hlt
adc
cld
fwait
jns
aas
sbb
inc
mov
je
inc
ds
jne
enter
cmp
je
inc
shr
fisubs
add
add
jl
jne
mov
sti
and
aas
jecxz
cmp
mov
adc
mov
jp
and
cs
ljmp
loope
mov
fdivs
lods
or
das
sbb
push
mov
push
push
push
cmp
mov
xor
add
ret
xchg
fsincos
pop
inc
mov
cmp
jne
lods
inc
scas
cltd
or
push
push
sub
ja
in
pop
add
inc
lods
notb
sub
sbb
bound
cmc
mov
dec
das
cld
cmp
sbb
or
dec
jmp
inc
int3
les
les
lock
add
cmp
jne
ds
or
pop
xchg
or
add
pop
gs
add
adc
cmp
repnz
incb
cld
pop
inc
cmpsl
jne
jmp
popa
in
xor
push
scas
sub
add
call
cmp
xor
or
ss
aas
adc
aam
sbb
cld
mov
iret
std
sbb
adc
inc
loope
xchg
xor
jle
shll
test
mov
mov
pop
jge
in
mov
or
cmp
jbe
lret
adc
das
lcall
scas
adc
mov
jno
jge
cmp
xor
cltd
sbb
lcall
xor
add
lea
inc
and
bound
ficomps
jge
sti
inc
call
mov
or
xchg
sbb
jge
out
shlb
pop
xchg
pop
mov
xchg
and
les
sub
adc
mov
hlt
cmpsl
lods
mov
out
xchg
mov
pop
mov
and
add
addr16
add
test
je
addl
repz
outsb
aas
push
sub
jns
push
sub
shlb
pop
movsb
mov
mov
pop
cmp
xor
orl
jno
xor
cmpsl
mov
inc
add
sbb
shr
and
inc
push
add
cmp
in
inc
mov
fmuls
inc
imul
sbb
jg
push
shr
dec
adc
in
adc
hlt
outsb
bound
shlb
ja
dec
call
pop
sub
or
aas
lock
cmpsb
inc
dec
std
imul
roll
sbb
mov
scas
xor
dec
cmp
add
jnp
dec
xchg
add
sub
lea
mov
xor
sbbb
sbb
inc
cmp
stos
add
in
inc
jmp
mov
mov
cltd
es
mov
lret
mov
shll
jp
in
push
rcr
sbb
add
xor
aaa
and
pop
inc
rclb
xor
xchg
jmp
mov
sbb
cmp
and
push
sbb
xor
pop
in
lds
call
mov
pop
dec
sub
pop
mov
xor
pusha
sbb
pop
jne
inc
add
dec
orl
in
inc
shlb
sti
loopne
add
pusha
dec
mov
or
dec
mov
mov
mov
inc
outsl
outsb
aaa
xchg
xor
or
ja
int
sti
add
sarb
xor
incl
and
ret
int3
mov
aad
in
lock
in
push
mov
jbe
add
push
ljmp
xor
je
inc
or
jl
xchg
inc
setge
shl
stc
add
sub
jge
movsb
es
jnp
ret
daa
mov
add
push
je
push
aas
test
and
sbb
je
adc
add
out
mov
pop
mov
mov
jb
dec
in
popa
loop
incb
cmp
lret
aad
lea
sbb
sti
notb
xor
xor
and
or
add
jge
sbb
push
shrl
mov
push
shlb
add
mov
add
add
push
add
scas
cmc
lods
sub
lock
cmpxchg
pop
lods
lahf
add
stc
dec
fs
ret
ror
adcb
mov
dec
loopne
test
jns
ja
mov
or
je
cs
pop
adc
xchg
mov
mull
push
and
mov
xorb
movl
mov
les
enter
pop
cmp
xchg
sub
add
push
add
ljmp
data16
pushf
sbb
cmp
or
adc
iret
sub
clc
ret
push
push
insl
clc
add
pop
push
cmp
pushf
ret
lcall
sbb
test
adcb
inc
dec
outsb
mov
xchg
sub
mov
les
inc
xor
imul
rorb
mov
sub
nop
rorb
jge
mov
stos
dec
and
in
scas
xor
or
lods
add
aas
dec
or
push
jb
cmp
adc
outsl
movl
dec
or
neg
mov
push
dec
dec
and
pop
fdivl
or
push
icebp
jae
xchg
sti
pop
pop
shll
push
push
cmp
jp
inc
int3
xlat
faddl
aas
push
rcrl
mov
addl
push
sub
mov
adc
mov
dec
jl
negb
cmp
inc
xchg
incl
add
mov
jbe
and
insb
lock
rorl
out
fnstenv
sub
js
pusha
jae
pop
jne
mov
pop
add
mov
nop
or
jne
mov
sahf
xchg
and
lods
add
daa
out
mov
cmp
jb
push
mov
mov
cs
mov
lea
cmpb
pushf
rcl
sub
push
push
mov
loope
jecxz
xchg
nop
sub
cmp
pusha
inc
loopne
in
dec
cmp
test
mov
iret
and
push
outsb
add
bswap
or
and
icebp
insb
lea
fadds
xchg
out
adc
lock
lods
dec
sbb
push
push
inc
mov
out
mov
inc
and
daa
lock
cltd
jmp
push
mov
inc
adc
cmp
cmp
jo
mov
sahf
push
je
ja
dec
sar
mov
push
es
cmp
ret
andb
xchg
sbb
sbb
sub
cmpsl
comiss
nop
int3
lret
sbb
imul
mov
mov
inc
out
sahf
dec
popa
inc
pusha
rcll
inc
inc
inc
mov
push
popf
push
mov
jle
or
add
xor
push
or
loope,pn
mov
pop
mov
jne
and
cmp
lock
cmp
hlt
in
int
add
int
mov
cmp
push
inc
das
jl
rcrl
pop
cmpl
sbb
mov
inc
pop
dec
sbb
xor
add
inc
cmpb
fldt
aam
data16
mov
jl
push
dec
pop
imul
call
repz
push
pusha
xchg
test
xchg
sbb
call
call
cmpsl
insl
dec
or
xchg
push
xchg
jno
add
cmp
jne
loopne
frstor
xor
mov
gs
sbb
adc
scas
sti
dec
or
push
test
jbe
xor
jle
push
xor
pop
sub
mov
sbb
sub
sub
mov
in
add
xchg
xchg
in
and
lcall
lock
cmp
sbb
nop
push
out
sar
lea
push
cmpsb
and
fdivs
dec
rclb
xor
push
jns
cmpsl
sti
mov
jno
movsl
sub
into
and
or
push
mov
add
sub
mov
xchg
es
cmp
negl
or
cli
sub
pop
in
call
add
imul
sub
and
push
enter
push
std
ss
xchg
scas
dec
js
jp
push
jne
pop
aas
adc
pop
pop
or
movsb
mov
ljmp
pop
cmp
jle
hlt
shrl
add
sti
arpl
out
push
sbb
lds
sbb
adcb
data16
pop
xchg
lds
int3
int3
leave
arpl
xlat
add
ds
sub
pop
rol
mov
jns
pop
sub
rclb
xor
daa
testb
in
add
or
or
imul
sub
or
add
inc
mov
mov
sbb
sub
aaa
sub
and
shrl
fwait
inc
leave
je
mov
cmp
inc
mov
xchg
xchg
add
mov
es
pop
add
orb
or
aaa
lea
mov
add
cld
dec
push
mov
jmp
and
sub
icebp
add
push
dec
add
in
lret
inc
adc
add
mov
sbb
js
cmp
or
repz
jg
inc
inc
xor
mov
sub
cmc
and
not
jmp
xor
push
or
mov
jne
mov
inc
lea
add
pop
mov
setne
adc
pop
adc
inc
leave
fsub
cmp
out
dec
xor
xor
jae
mov
in
and
adc
outsb
cmp
jne
cmc
leave
sub
repnz
dec
mov
sbbb
jl
cmp
jg
cmp
js
jg
mov
pushf
jl
mov
adc
out
sbb
and
inc
pop
mov
cwtl
fbld
aaa
jbe
sbb
lods
sub
or
sbb
sub
das
mov
add
jg
test
lock
and
or
add
es
or
cltd
test
test
and
in
add
add
mov
mov
cmp
ja
jge
out
add
cmovp
sahf
out
sahf
popa
js
cmpsb
mov
jns
mov
stos
dec
aad
js
xchg
pop
cli
in
dec
xchg
cmp
add
pushw
hlt
and
fcomp
xor
xor
ret
sbb
mov
or
dec
cmp
inc
jo
inc
sahf
lods
xchg
push
dec
adc
xor
mov
pop
mov
aas
jo
inc
xor
pushf
jecxz
test
mov
rcrb
mov
cmp
sub
pop
test
cmp
dec
and
dec
pusha
sub
add
sbb
sbb
jmp
pop
cs
je
and
test
pop
pop
jnp
push
add
push
fs
sub
push
mov
lock
and
andb
ljmp
daa
pop
add
or
inc
popa
sbb
loop
and
bound
xor
je
xor
pop
xlat
aaa
xor
cmp
inc
jo
push
pop
xor
push
sub
and
jl
mov
push
jp
and
jle
loop
adc
or
or
or
es
and
icebp
jo
xor
sbbb
push
call
hlt
push
sub
sbb
push
xchg
cltd
xor
jmp
and
popa
lea
push
ficompl
sbb
xchg
ds
and
and
jge
or
mov
xor
jns
add
xor
loopne
arpl
dec
cmpsl
sbb
ss
clc
ljmp
jle
cmpsb
jne
push
adc
rolb
aaa
push
push
daa
cmp
cwtl
pmaxsw
jp
or
mov
aad
pop
inc
push
jbe
and
inc
js
pop
jae,pt
push
dec
pop
mov
push
das
loop
lea
pushf
push
push
lret
sub
and
and
mov
cld
inc
jp
dec
push
or
inc
fs
add
or
add
xchg
loopne
bound
xor
js
jne
into
jg
loopne
in
xor
push
pusha
sbb
xchg
or
ret
or
lret
pushf
nop
jae
xchg
and
xor
inc
or
xlat
jle
xor
jl
es
sub
sbb
xor
mov
xchg
adc
mov
outsb
pop
mov
hlt
lds
cmp
inc
mov
jo
jmp
mov
xor
push
xor
jbe
dec
lods
or
popa
mov
pop
jnp
les
icebp
push
movl
popa
mov
arpl
sub
adc
jp
xor
inc
or
inc
xchg
sub
cmc
mov
or
add
sub
loop
sub
cli
rorl
pop
loope
test
mov
and
push
inc
push
rorl
popa
and
inc
sbb
lcall
icebp
sub
add
addb
ficoml
add
jo
mov
mov
sbb
fistl
enter
popf
test
pop
lock
test
mov
xor
outsl
inc
push
in
js
arpl
bound
pop
js
mov
je
ja
nop
bound
lahf
pop
push
sbb
subb
adc
lds
inc
inc
test
xor
and
cmp
lret
ret
jns
sub
adc
ljmp
mov
and
add
fisttps
les
dec
add
adc
fimull
or
push
in
xor
pop
xor
outsb
mov
std
setl
cmp
or
mov
stos
nop
jno
sbb
add
in
push
or
inc
lods
add
outsb
or
add
arpl
xor
or
adc
je
add
or
pop
xor
cli
inc
sub
pop
mov
inc
lods
mov
aad
call
lods
rolb
sub
sub
dec
or
je
and
adc
int
scas
ret
jne
enter
pop
sbb
cmp
ljmp
lock
ret
loope
xchg
dec
and
inc
sahf
ss
add
std
pusha
push
mov
push
mov
push
jb
clc
or
or
mov
inc
xor
lods
adcb
mov
adc
push
ss
sub
imul
dec
popl
and
push
dec
xchg
ret
mov
jle
les
adc
call
xor
fs
bound
sbb
in
or
inc
mov
dec
mov
xorl
add
je
push
cld
sub
scas
add
add
pop
or
in
sbb
push
inc
and
add
and
fs
lret
and
xor
std
and
xor
mov
shrb
lret
add
mov
mov
mov
imul
sub
push
pop
mov
or
aad
mov
pop
push
in
add
lret
add
add
push
push
mov
mov
rcrl
insb
sub
nop
jbe
sbb
and
cmp
push
movsb
add
ljmp
add
add
or
sbb
adc
xor
mov
subl
pop
and
into
fbstp
mov
fadd
and
push
and
jmp
sub
fimuls
push
pop
inc
and
cmc
pop
mov
icebp
out
jae
divl
sub
ljmp
pop
jl
xor
xchg
mov
dec
fmul
adc
xchg
leave
push
dec
mov
sbb
nopl
mov
dec
and
sub
xor
jle
mov
lock
inc
cmp
jb
and
cmp
or
xchg
mov
dec
aas
insl
add
dec
add
insb
repnz
jbe
jns
add
adc
mov
mov
xor
pop
add
dec
add
sbb
and
lds
je
mov
lock
call
nop
daa
or
addr16
ja
sub
ficomps
call
and
push
mov
xchg
es
push
rorb
sbb
adc
xor
scas
movsb
or
xor
lock
adc
push
pop
push
ds
mov
setne
pop
pop
mov
pop
es
mov
or
inc
and
cmp
pushf
push
in
push
push
pop
pusha
jo
xor
add
sbb
add
test
mov
xchg
lret
call
dec
fadds
cltd
loopne
cmpsl
adc
cmp
ds
jnp
jo
jno
mov
mov
pop
mov
push
pop
cmpl
adc
sbb
ja
rorl
cmp
mov
adc
bound
add
add
add
outsl
adc
mov
popa
or
mov
mov
pushf
data16
ret
pusha
push
cmp
add
outsl
fsubrl
mov
shlb
fadds
sbb
int3
pop
mov
or
or
das
mov
push
lret
cmp
push
dec
dec
jno
loop
add
lahf
in
inc
inc
cmp
jb
orb
push
pop
push
sbb
lret
and
push
add
adc
ret
xor
sbb
pop
data16
pop
jb
mov
dec
jb
push
lcall
sub
out
daa
lea
mov
pop
jb
pop
dec
xor
ret
mov
xchg
lret
sub
add
insb
xlat
and
shlb
jne
mov
enter
xor
sbb
or
xor
push
movsb
and
push
loopne
dec
add
ucomiss
adc
dec
jo
in
jb
pop
push
pop
fadds
sub
roll
inc
ficoms
mov
les
ljmp
repnz
xchg
adc
jle
add
mov
mov
mov
pop
inc
inc
pushf
ret
shlb
imul
push
inc
sbb
push
sub
xor
sbbb
jo
inc
and
imul
sub
and
sbb
decb
dec
sub
sub
pop
rcrl
adc
fistl
roll
xor
xchg
adc
or
sub
divl
sub
repz
or
pushf
ja
es
mov
les
xlat
xor
rol
mov
xor
mov
nop
mov
inc
pop
dec
adc
add
sbb
mov
dec
inc
cmp
and
and
sub
sbb
add
sbb
and
xor
imulb
adc
jns
addl
popf
inc
sbb
push
and
orb
add
rcrl
in
or
sbb
xchg
cli
aam
fwait
and
adc
mov
push
or
xor
inc
or
push
mov
ret
xor
adc
sub
addl
and
sbb
or
cmp
inc
adc
lock
jp
xor
les
jo
push
addl
icebp
scas
lds
nop
loopne
xchg
pop
dec
cmp
jb
rorl
std
xor
push
and
add
mov
dec
jl
add
adc
mov
push
repz
inc
mov
insb
sbb
jg
jle
push
dec
jne
mov
inc
lea
aad
sbb
or
jne
fldz
mov
xor
shr
in
add
adc
iret
pop
lock
int3
scas
insl
aam
xchg
pop
pop
fcompl
mov
test
or
or
and
mov
sub
pop
dec
fmul
call
push
out
lcall
xor
sub
inc
jp
cmp
scas
daa
push
jne
cmp
das
pop
xorb
je
nop
inc
shrl
pop
jbe
add
and
push
xlat
xchg
ret
cmp
adc
hlt
push
and
mov
dec
lsl
jmp
or
jecxz
jne
jb
mov
jae
popa
test
inc
cmp
je
adc
mov
sbb
and
and
cmpsl
or
sbb
cmp
mov
push
or
mov
decl
aaa
mov
movsl
or
arpl
cmp
xchg
inc
rolb
and
mov
neg
or
negl
rclb
xor
fisttpll
mov
pop
test
cmp
lahf
jb
sub
sbb
adc
fiaddl
shrl
cmpsl
pop
inc
sub
pop
push
dec
cmpl
sbb
inc
aam
dec
test
dec
jne
mov
push
xchg
movsb
dec
test
decb
int
mov
or
push
and
xor
xorl
pop
out
dec
and
daa
sbb
pusha
and
cmpsb
xchg
daa
push
adc
jecxz
clc
jno
lds
repz
add
pop
fcmovnb
dec
add
sbb
fstpt
mov
inc
xor
icebp
iret
call
push
repnz
movsl
mov
sbb
icebp
cmp
mov
jl
mov
inc
mov
into
mov
mov
mov
adc
stc
dec
push
xor
imul
push
mov
insb
add
mov
inc
cmp
inc
bound
pop
sbb
mov
dec
add
jle
rclb
push
fucom
add
inc
rclb
fstps
mov
cmp
pop
dec
outsb
andl
jne
and
sub
inc
cmp
pop
int
leave
je
fidivl
pusha
movsl
jp
jp
daa
xchg
and
dec
sub
sbb
sub
das
aam
pushf
fsubrs
es
cld
cmp
xor
jb
add
adc
or
sub
add
jnp
push
xor
add
repnz
adc
or
inc
sbb
and
mov
subb
mov
xchg
fmuls
or
push
jne
sbb
add
or
xor
pop
adc
inc
mov
out
xor
pop
xlat
add
inc
mov
adc
inc
or
xor
cmp
sbb
ret
aam
gs
lahf
cmp
xchg
xchg
or
fcompl
outsl
insl
rcll
addr16
cmpsb
and
cltd
inc
jmp
or
or
push
sub
push
xor
insl
cld
or
xor
or
adc
adc
lar
movsl
push
add
add
sub
mov
sarb
add
int3
pop
sub
push
jne
pop
les
enter
jmp
xor
jge
pop
and
in
imul
jl
or
jg
push
dec
popa
sbbb
pop
xchg
popa
and
arpl
or
ret
xor
sbb
inc
pop
mov
cwtl
pop
and
call
xor
test
je
rorb
sbb
aad
jb
jecxz
dec
fisttpl
add
push
add
xchg
mov
adc
add
xchg
jb
push
ss
lea
cmp
ret
sti
xchg
push
fwait
test
push
add
aam
popl
add
mov
lock
pop
es
xorb
sbb
insb
dec
add
loop
cmpb
sbb
lea
das
ret
push
lea
push
or
push
and
jnp
xchg
js
shrb
push
stc
into
push
xchg
test
jmp
xlat
outsl
rcrb
pop
movb
add
add
jecxz
pop
sbb
adc
outsl
insb
add
cld
pop
pop
push
cmp
sub
cmp
insb
pop
and
sub
add
mov
push
add
inc
xchg
adc
jl
push
adcb
orb
cmc
or
mov
cmp
mov
add
sahf
xor
jle
pusha
cmp
les
out
or
pop
mov
jbe
mov
nop
mov
sub
push
scas
xchg
das
adc
or
or
add
dec
push
popf
sbb
popa
xsha256
test
icebp
pop
cs
jo
ficompl
push
jmp
mov
test
adc
mov
xor
pop
stc
lods
cmp
push
call
test
call
shrl
mov
inc
inc
sbb
pop
sub
xor
mov
adc
xor
xchg
mov
or
pushf
daa
fsubrl
popf
mov
mov
add
aam
push
lea
adc
pusha
jl
rorl
in
or
ret
pop
cmpsl
dec
xchg
loopne
nop
es
bound
inc
adc
push
xor
adc
add
sub
int
fs
pushf
dec
out
inc
fidivs
mov
push
cli
push
push
push
imul
pop
adcl
dec
xor
imul
leave
sarb
add
xor
inc
mov
jbe
lea
int
xchg
push
jno
adcb
pop
sbb
repz
or
enter
or
and
xchg
adc
jge
dec
mov
push
pop
orl
mov
sub
mov
adc
pop
imul
mov
mov
cld
and
push
stc
pop
ja
and
scas
xor
lds
add
cs
pop
loop
cmp
push
cltd
jno
ret
add
repnz
push
push
inc
daa
cmp
fmuls
sub
inc
dec
mov
cltd
xor
cmp
dec
stos
sbbb
dec
out
es
mov
mov
jb
or
xchg
mov
ret
pop
fisubs
es
inc
aaa
jmp
popa
jb
xchg
and
aas
data16
push
add
fisttps
cli
cmp
jl
fadd
imul
add
test
xor
in
sbb
jae
jns
xor
je
popa
push
mov
out
ja
and
push
loopne
inc
loop
jo
subb
pop
xchg
jle
mov
stc
jl
aaa
mov
jns
lret
clc
rolb
pop
repz
arpl
inc
es
push
sub
dec
or
push
movsl
dec
mov
pop
cmp
pop
sub
jl
arpl
js
or
adc
dec
sbb
mov
pop
inc
mov
icebp
imul
add
mov
pop
pop
xchg
cli
cmp
mov
jae
xor
jae
scas
or
sbb
inc
imul
inc
mov
sar
and
lods
mov
out
movb
jl
pop
pop
in
imul
pop
lret
sbb
rclb
xchg
mov
fdivl
jle
movsl
mov
pop
cmp
mov
add
and
jo
mov
cmp
sub
adc
adc
shll
sub
or
icebp
addr16
pop
and
dec
sub
call
pop
pushf
stos
add
dec
imul
sbb
push
adc
insb
lods
add
or
sarb
adc
xor
out
add
mov
js
inc
dec
mov
jns
xchg
add
loopne
faddl
cmp
sbbl
shrl
mov
movb
ret
dec
fdivrl
mov
push
mov
sub
in
mov
shrb
ffree
xorb
into
add
mov
inc
decl
mov
and
cmpsl
jnp
arpl
fldcw
inc
inc
mov
push
pop
mov
jne
xor
adc
jb
imul
jns
mov
sbb
stc
adc
mov
mov
lret
add
loop
mov
bound
mov
rolb
lock
ret
outsb
test
shl
movsb
sbb
lcall
adc
cli
adc
cmp
negb
xor
sub
push
fs
sub
cmpsb
shlb
imul
adc
popa
and
inc
inc
xor
out
mov
es
jae
or
lahf
cmpsl
inc
orl
add
test
mov
push
push
rolb
cmp
sarl
andb
or
rcll
ret
and
and
fadds
or
scas
sub
xchg
and
test
add
add
mov
ret
sub
or
repz
pop
mov
arpl
cwtl
adc
sbb
mov
or
aam
fcomps
push
push
fwait
sub
xor
int3
movsl
out
and
or
and
scas
sbb
mov
ljmp
push
push
cs
stos
push
out
scas
add
imul
push
cld
mov
xor
loop
mov
pusha
dec
jo
inc
loope
sbb
add
adc
push
xor
shrb
shl
sub
xor
push
pop
dec
mov
pop
aam
mov
add
push
repz
dec
pop
and
movsl
popa
in
xor
inc
sub
push
pop
cmc
pop
and
jne
or
aaa
sbb
sub
and
push
sbb
outsb
or
add
imul
es
adc
das
cmp
mov
test
les
jecxz
sub
adc
add
or
sub
jbe
jp
or
fstpt
mov
jb
cmovp
pusha
push
sub
adc
push
add
adc
adc
dec
mov
incb
pop
adc
in
xor
pop
sbb
inc
sub
adc
adc
mulb
push
dec
dec
xchg
cmp
imul
lods
cmp
jle
mov
leave
pop
cmp
daa
call
hlt
sub
push
sub
xchg
pop
or
cmp
jge
addr16
cmp
sub
pop
leave
sti
addl
mov
rclb
rorb
xchg
jbe
sbb
test
js
mov
push
cmp
in
pusha
notb
jl
push
ljmp
sbb
adc
adc
cmp
into
pop
mov
mov
sbb
push
insl
test
mov
cmpsl
push
pop
subl
or
pusha
test
add
adc
or
hlt
push
push
fwait
sbb
sti
and
je
test
sti
cltd
arpl
out
cmp
leave
sub
fistpll
je
mov
cs
icebp
push
aam
leave
xchg
loope
xor
cmp
test
sti
clc
pop
add
sbb
into
in
jle
add
jne
imul
xchg
and
andb
imul
scas
xchg
add
sub
add
sub
call
cmp
mov
sub
xor
scas
in
inc
loope
outsb
dec
push
adc
frstor
insl
lcall
int3
mov
addr16
push
fwait
xor
push
popa
ficoml
push
sbb
push
inc
dec
shrb
int3
push
or
pop
loopne
mov
sbb
sbb
jae
mov
das
pop
or
psubb
mov
jmp
mov
adc
ret
add
loopne
xor
ja
int
inc
or
mov
mov
sbb
daa
push
or
push
outsl
popa
and
xchg
test
sub
jno
pop
dec
call
sub
pop
jle
les
orb
bnd
sbb
lret
xor
insb
lea
sbb
mov
repnz
push
mov
shrl
iret
std
out
push
mov
adc
out
cmpsb
xchg
push
push
push
pop
add
call
clc
movsb
scas
add
testl
icebp
dec
dec
sub
nop
jl
pop
sub
inc
pop
jno
jnp
das
jne
push
clc
and
mov
cmpsl
sbb
inc
out
inc
inc
jb
mov
jbe
jl
bound
je
ret
sahf
pop
lcall
sbb
add
mov
sahf
xor
cmp
rol
push
pop
xor
insb
sub
push
loope
and
mov
inc
inc
push
pop
mov
dec
add
and
jl
mov
or
mov
jnp
ret
and
jbe
push
mov
xor
fwait
jl
or
push
cmp
outsl
icebp
sub
push
jae
or
push
push
mov
pop
lret
mov
in
add
jne
mov
daa
out
adc
mov
test
repz
pop
sbb
pop
mov
xorl
add
dec
or
mov
xor
push
pop
add
adc
or
nop
inc
xor
cmp
sbb
sbb
inc
cmp
and
repz
out
std
mov
inc
jmp
data16
push
jnp
daa
inc
mov
sub
xchg
and
cmp
in
lcall
imul
add
sub
and
je
insb
clc
sub
cmp
xor
jb
mov
icebp
add
aas
jne
xchg
andl
call
and
add
setl
and
das
and
lcall
mov
loope
mov
arpl
adc
dec
jne
mov
dec
fisubs
les
or
ss
push
pop
mov
pop
fiaddl
push
dec
repz
addr16
sub
movsl
cmp
dec
push
xchg
or
movsl
jp
out
sub
push
adc
dec
and
rcrb
les
not
xchg
push
fwait
adc
in
rcrb
test
loopne
jmp
push
push
add
sbb
adc
aad
fistps
push
add
dec
jmp
xchg
test
ret
push
faddp
pop
mov
sarl
inc
nop
push
inc
add
xchg
and
mov
mov
and
sbb
jne
das
adc
lea
inc
pop
sbb
add
jns
or
inc
inc
shlb
adc
push
adc
shl
outsb
nop
mov
push
jb
xchg
data16
adc
rcrl
xor
jae
pop
sbb
test
clc
mov
dec
jb
sbb
xor
push
sub
and
mov
push
outsb
push
add
push
jmp
test
add
adc
xor
int
sub
dec
sub
jo
jl
inc
lods
decb
jne
inc
xor
xchg
sahf
jl
mov
in
add
out
pop
jmp
es
xor
mov
cmp
xor
xor
ret
adc
cmpb
inc
addr16
inc
sub
jne
scas
pop
sahf
lret
or
dec
and
fistps
jmp
and
or
pop
add
daa
add
xor
mov
mov
sub
cmpb
mov
scas
xorb
popl
or
and
pop
inc
ret
or
ja
jne
fwait
pusha
cltd
popa
and
push
insb
arpl
les
iret
aad
pop
mov
inc
out
add
popa
ret
ds
test
mov
or
push
mov
fcmovnu
pop
inc
bound
orb
pop
xor
mov
adc
and
and
cwtl
inc
lahf
xor
data16
sbb
out
jmp
adc
sub
cmp
test
stos
test
into
jae
and
add
fbstp
dec
add
xchg
fdiv
and
mov
push
icebp
and
out
inc
lock
roll
dec
jns
mov
cmp
jb
dec
or
int3
cmp
fiaddl
addl
fwait
or
repz
je
mov
push
cmpsl
dec
or
pop
or
sbb
mov
or
in
dec
push
movb
add
and
scas
mov
mov
push
jp
jno
cmp
sbb
in
cmp
dec
or
sbb
pusha
sbb
pop
cld
inc
dec
jecxz
or
jmp
inc
or
mov
js
shlb
pop
or
add
mov
and
nop
loop
sbb
or
shl
or
lods
mov
popf
fisubrs
mov
inc
adc
ret
xchg
push
jne
pop
push
and
jg
cmp
pop
test
shrl
orb
scas
leave
xor
push
jl
push
mov
cmp
fdivrp
das
mov
adc
mov
xchg
jl
add
daa
add
or
add
pop
addr16
dec
jle
fldt
outsb
xorb
or
jo
xor
push
inc
sub
nop
cld
sbbl
sbb
aas
add
dec
dec
inc
xor
mov
and
lds
pop
idivb
add
and
push
mov
xor
adc
ret
pop
and
or
add
arpl
stos
dec
mov
sub
mov
fwait
add
adc
or
cmp
sub
dec
call
add
mov
jbe
movnti
xor
nop
lock
push
inc
or
pop
mov
push
movl
add
popa
sbb
mov
std
cmp
pusha
shrb
pop
outsl
pop
jl
inc
imull
andb
push
dec
inc
adcb
xchg
jb
xor
movsl
in
inc
push
add
jb
inc
pusha
add
xor
xchg
dec
shll
int3
or
push
adc
inc
xchg
mov
lea
cmp
je
jl
inc
pop
enter
or
and
or
fcomps
fs
jns
adc
filds
inc
add
mov
pop
mov
mov
out
sub
neg
push
outsb
mov
notl
lea
je
sbb
inc
adc
jnp
cltd
pop
popa
lods
or
repnz
xor
mov
pusha
movsb
pop
dec
dec
mov
xchg
and
lcall
push
mov
pop
test
mov
and
adc
or
mov
insb
mov
push
push
push
sub
bound
or
test
lcall
fcoml
push
sbb
lods
outsl
popf
es
int3
jo
inc
sub
sub
sti
test
sbb
and
lods
cmp
pop
fsubr
push
pusha
push
pop
adc
daa
insb
pop
or
outsb
mov
add
mov
sti
adc
je
push
fadd
xor
sbb
popf
pop
push
xor
xor
or
movsl
js
mov
aas
mov
cmp
subb
es
add
sldt
mov
je
add
sub
arpl
push
test
or
idivb
jnp
imul
sub
popa
push
sbb
sub
mulb
adc
dec
mov
fdiv
adc
push
rolb
or
lret
mov
loope
lods
and
mov
push
or
xor
loop
cld
cmp
out
sbb
cmp
ret
pop
xchg
bound
call
loopne
adc
pop
mov
fldl
das
mov
jo
into
rsqrtps
inc
outsb
jnp
sbb
and
sbb
add
pop
scas
movsl
cmp
pop
adc
sbb
mov
add
sarl
pop
pop
movl
cwtl
pop
sti
xchg
add
dec
out
push
sahf
xlat
out
add
cmp
push
xorb
popa
adc
or
add
je
push
imul
out
sbb
sbb
daa
je
mov
pop
jo
push
dec
cmp
push
cmp
into
sbb
sub
cmpsb
mov
jnp
jne
inc
or
xor
mov
and
ret
and
call
inc
jge
push
add
mov
push
or
push
lahf
dec
jmp
push
xchg
jle
and
fadds
je
lock
cmp
sbb
pushf
shrl
or
or
dec
xor
lcall
pop
pop
inc
mov
daa
jns
inc
insb
lret
rclb
push
add
mov
add
add
jno
or
sti
lahf
jb
mov
subb
adc
cmp
sbb
dec
inc
push
jno
mov
in
and
insl
movsb
cs
sub
mov
mov
mov
sub
sub
mov
or
ds
int
or
mov
cmpsb
sub
sub
dec
movb
xchg
nop
or
nop
pop
cli
sbb
shr
push
lahf
ss
or
pop
loopne
or
dec
test
fistl
fiaddl
jp
lea
mov
gs
ret
out
dec
adc
sub
test
in
inc
or
icebp
gs
dec
mov
lahf
xstore-rng
cmpsl
xchg
push
mov
sbbl
cmp
les
add
mov
jb
dec
add
cmp
ja
in
add
mov
cmp
into
add
cmpsb
flds
mov
adc
inc
call
idivb
adc
aas
cmp
cmp
add
call
adc
ret
inc
push
adc
add
adc
dec
inc
punpckhdq
fsubrl
test
enter
pop
and
xchg
inc
xor
ret
js
nop
testb
cmp
dec
push
push
jmp
jo
or
fcompp
aam
jmp
adc
mov
daa
inc
fmull
sub
add
adc
xchg
mov
mov
enter
push
mov
mov
orl
je
mov
inc
les
push
push
stos
mov
lea
sub
xor
mov
mov
int3
test
fiaddl
mov
sub
ret
pop
push
icebp
push
rcll
loopne
je
xlat
xor
or
push
test
mov
xchg
cmp
mov
mov
lea
loop
xchg
cmp
jle
in
dec
lcall
dec
push
sub
inc
rorl
push
shrb
je
sbb
fidivs
or
inc
testl
push
add
cmp
xlat
jmp
daa
sbb
or
push
and
rclb
shll
push
push
stos
xchg
dec
enter
jno,pn
or
mov
pop
mov
push
sbb
sbb
sub
push
adc
add
out
mov
paddw
rcll
or
push
xor
inc
dec
sarl
loope
jns
out
dec
inc
enter
repz
xlat
and
das
jmp
sti
mov
add
push
push
inc
sahf
out
aad
dec
ljmp
call
ret
in
push
dec
dec
xor
imul
mov
adc
test
push
or
xchg
test
push
or
jno
mov
or
or
sbb
mov
push
punpcklwd
xor
push
ret
or
stos
sbb
sbb
js
aad
clc
pop
mov
test
add
or
inc
daa
bound
xorl
xor
cmp
inc
or
adc
mov
jae
jne
addl
movsb
les
jno
dec
iret
aad
sbb
xor
mov
mov
sub
filds
cs
xor
push
jb
out
cmp
adc
inc
rcrb
leave
mov
jnp
dec
or
push
and
inc
add
js
cmp
pushf
add
xchg
adc
loope
jl
fucomip
sbb
addb
jb
test
stos
ljmp
mov
cmp
jne
cmpb
pop
cmpl
inc
xchg
mov
sub
aam
mov
jne
or
dec
xchg
dec
pop
nop
out
daa
fsubs
mov
or
es
cmp
dec
cmp
hlt
mov
insb
leave
sub
mov
fs
lea
adc
leave
add
push
or
adc
aam
sub
dec
xor
pop
clc
je
push
push
xchg
jo
test
imul
push
push
ds
pop
and
push
adc
xchg
adc
jge
pop
add
cmp
jno
mov
xchg
adc
xchg
jbe
adc
lea
inc
add
jmp
stos
jmp
xchg
inc
outsl
lock
rclb
inc
ja
add
orl
push
mov
ss
aas
addb
jbe
push
sbb
add
add
es
mov
mov
cmp
mov
sub
mov
mov
mov
mov
xchg
test
or
push
dec
xchg
or
cmp
out
xor
pop
test
movsl
rcrl
cld
mov
xor
push
nop
xchg
dec
imul
ret
fdivs
xchg
rorb
add
es
sbb
xchg
sbb
sarb
cmpsl
shll
push
cld
jle
sbb
push
jp
in
dec
shlb
stos
hlt
jbe
adc
xorb
insb
addb
or
add
loop
lods
xor
je
leave
sbb
das
inc
cmp
repz
pop
mov
cmp
push
push
call
int3
xor
pop
add
rolb
lods
mov
je
cmp
and
rcrb
adc
or
test
not
orb
and
cmp
aaa
sahf
mov
pusha
stos
mov
lcall
adc
jle
dec
sub
aaa
mov
sbb
sub
or
sbb
rdtsc
cmpsl
fst
arpl
int3
nop
sbbb
mov
push
adc
or
test
lret
into
jnp
dec
sbb
sbb
orb
xchg
cmpsb
call
and
xlat
push
loope
shl
mov
xchg
inc
or
enter
and
sbb
push
sbb
sbb
loopne
lcall
inc
addl
adc
cmp
sub
jl
jns
jno
cmp
jl
mov
ljmp
and
add
cs
out
and
xor
mov
or
out
pop
cmp
add
or
lea
lea
inc
adc
movsl
add
jno
fwait
mov
mov
push
inc
or
jae
lods
push
enter
add
pop
add
fistpll
sbb
mov
sbb
or
mulb
mov
mov
push
push
les
add
xchg
push
rorb
addb
pop
imul
adc
pop
push
pop
push
add
xorl
mov
adc
mov
adc
lock
inc
out
mov
sub
push
sbb
rorl
ja
adc
jmp
aaa
dec
sub
inc
sbb
int
imul
aad
and
push
pop
push
jo
sbb
ret
mov
sti
cmp
dec
cmp
sarb
insl
cli
fstps
push
in
stos
ffree
mov
inc
fimuls
lea
push
inc
adcb
dec
cltd
inc
mov
jno
adc
and
push
fwait
popf
xchg
xchg
add
cmp
pushf
lret
rclb
jl
mov
pop
iret
push
stos
add
and
dec
mov
dec
clc
mov
sbb
mov
xorb
div
push
dec
outsb
dec
and
mov
into
cmp
or
les
rorl
sub
sbbl
push
lods
xor
xlat
inc
push
out
lret
repz
dec
in
adc
sbb
pop
ds
inc
in
jo
inc
add
pop
xchg
loopne
jle
les
dec
je
pushf
xor
stc
xchg
jae
test
cmp
enter
fldenv
sbb
dec
jae
push
inc
push
rcr
and
je
xchg
xchg
or
pushf
movq
ret
or
mov
xorb
pop
fldl
int
test
test
push
sahf
push
push
or
adc
or
in
aas
pop
xchg
lock
mov
mov
addl
sub
jg
icebp
dec
sbb
mov
mov
or
fcoms
shll
sub
arpl
call
sbb
std
jg
nop
mov
jbe
fisubrl
lds
jle
push
test
enter
in
inc
das
push
lea
push
cmpsb
mov
jae
mov
insb
push
loop
outsb
movsb
mov
sbb
jle
xor
push
movsb
mov
jl
jge
ret
or
push
pusha
sbb
shll
dec
pop
cmp
rolb
sub
pop
jnp
jge
or
es
inc
pop
mov
sub
jge
mov
ret
inc
mov
inc
cmpl
inc
lock
or
andb
or
pop
sbb
cmp
fimull
xor
in
xorb
adc
push
outsb
lea
lahf
pop
jmp
inc
or
push
or
xor
add
add
cmp
xor
xor
mov
mov
lock
daa
adc
push
xor
rorl
cltd
cmp
jp
push
ljmp
std
jmp
sub
add
sbb
or
mov
mov
lcall
adc
push
cmp
mov
push
je
call
loopne,pn
cltd
dec
mov
and
push
xor
xchg
ds
aad
adc
mov
sub
orb
adc
inc
xchg
ss
jb
test
and
shr
enter
cld
jl
mov
xchg
inc
int3
mov
inc
xchg
push
sub
jg
pop
fwait
sbb
je
psubd
mov
or
and
cs
mov
dec
test
insb
sub
mov
mov
insb
mov
mov
movsl
sub
and
dec
cmp
push
xlat
push
test
test
outsb
sbb
int3
mov
in
lea
cmp
roll
push
ret
aas
inc
add
ret
and
add
pop
mov
or
inc
insl
mov
adc
jo
mov
adc
pop
push
mov
cs
imul
mov
repnz
mov
cli
fimull
mov
and
jno
dec
or
xor
insl
shr
pushf
sub
rolb
rolb
push
dec
jb
arpl
push
dec
sbb
loop
lret
and
je
aas
adc
lds
sbb
jno
and
sbb
ljmp
add
pop
pop
cmpb
pusha
inc
or
inc
or
and
enter
or
or
pop
or
and
pop
lds
xchg
outsb
loopne
adc
ret
add
popa
cmp
enter
adc
out
dec
jecxz
stc
dec
popa
add
add
jb
test
or
or
inc
jecxz
fistpl
push
inc
pop
xor
pop
and
inc
in
lods
push
or
movsb
or
sub
sbb
adc
push
outsb
lods
das
inc
mov
movsl
out
call
mov
push
sub
outsl
loop
sbb
push
mov
dec
js
or
cmp
add
aad
or
mov
popa
add
cmp
in
add
add
push
and
mov
or
outsb
adc
xchg
inc
pop
pop
add
aad
aad
and
add
inc
adc
js
mov
sbbb
mov
pop
out
push
rorl
subl
inc
js
imull
dec
sub
jno
sbb
aaa
jbe
lea
imul
pop
jle
sub
mov
and
faddp
or
push
dec
or
jne
mov
or
aaa
jb
mov
test
or
mov
jmp
jmp
dec
push
pop
ret
loope
lock
xchg
mov
test
cmc
jns
sahf
ss
in
in
mov
or
sub
pop
adc
or
int3
idivl
out
xchg
adc
push
inc
add
cmc
sub
inc
fs
fsubl
and
jae
add
push
and
imul
mov
dec
or
repz
or
add
push
clc
pushf
mov
popa
dec
sbb
fwait
imul
xchg
or
adc
xorl
push
adc
pop
repnz
adc
adc
cmc
pop
repnz
push
sbb
sbb
iret
xor
sbb
add
xchg
into
sub
inc
pop
add
cmp
adc
xchg
insb
adc
dec
sbb
xor
sub
and
inc
test
or
add
and
cmp
mov
repnz
fimull
xchg
inc
inc
push
lret
add
dec
add
mov
test
sbb
jb
sub
mov
cmp
cld
imul
or
test
inc
cld
dec
sti
add
je
add
fwait
mov
shll
cmc
xchg
addb
xchg
add
shlb
cmc
test
adc
shl
or
cmpb
jne
push
mov
cmpsb
pop
jnp
mov
push
add
or
or
lcall
mov
inc
sbb
in
push
cmovno
mov
jbe
js
push
or
or
cmp
in
mov
mov
add
ret
mov
fstl
xchg
jl
xchg
inc
or
adc
decl
ljmp
pop
inc
cmpsb
mov
sbb
add
dec
xchg
xor
sbb
mov
fadd
fstp
mov
gs
push
jle
lret
jbe
jmp
loopne
popf
idivl
pop
mov
dec
pusha
loopne
inc
add
push
aam
and
push
jne
xchg
ret
fcmovb
pop
push
push
or
adc
fistl
les
dec
lock
add
jge
jecxz
pop
xor
cmp
lea
and
xor
fsub
mov
sti
pop
jle
cmp
inc
insl
jae
jl
jle
mov
mov
out
sbb
or
pop
and
cmp
inc
loop
cmp
cwtl
mov
cmp
jbe
fldl
push
imul
inc
push
sub
rcll
xor
leave
and
shrb
or
pop
inc
cmp
adc
pop
movsb
inc
add
sbb
lods
push
lcall
lret
add
mul
cmp
ret
roll
sarl
enter
je
add
les
jb
test
push
add
xchg
xchg
stos
or
addb
mov
ljmp
sbb
xor
test
loope
lock
icebp
in
or
dec
repz
or
jle
fsubr
inc
jl
and
push
jb
inc
dec
faddl
dec
pop
stc
sub
mov
cmp
imul
mov
insb
lret
out
cmovle
or
ucomiss
add
mov
mov
cmp
pop
cmp
pop
lcall
adc
pushf
xchg
push
sbb
inc
cmp
pop
adc
fcoms
pop
cld
ljmp
cmp
testb
fwait
adc
fucomip
push
stc
inc
cmp
dec
jmp
test
adc
mov
sbb
xchg
add
fiaddl
rolb
push
lahf
clc
add
jnp
inc
mov
negl
fdivs
movl
cmp
js
repnz
pushf
scas
inc
xchg
fbstp
cmpb
test
pop
jns
aaa
mov
inc
ret
je
mov
shl
jae
je
or
or
mov
scas
mov
push
inc
in
fwait
popa
addb
dec
jl
lea
rorl
and
inc
xchg
push
movsb
loop
dec
test
mov
rclb
xor
jg
cmpb
dec
dec
cmp
jb
jg
mov
and
cmp
jne
mov
push
decl
imul
or
ja
int3
add
imul
ror
jg
xchg
cmp
je
lahf
adc
xchg
mov
call
into
fildl
mov
or
add
push
cmp
mov
add
in
mov
cmpl
int
das
cltd
add
mov
and
push
cmc
add
cli
sub
jns
mov
xchg
shlb
sub
sub
out
or
int
push
lea
mov
fwait
test
mov
cmp
inc
push
sub
inc
pop
pop
and
bound
fnstenv
mov
mov
ds
mul
cmp
les
aas
aas
add
or
push
insb
mov
je
push
push
mov
adcb
sbb
test
rorl
inc
adc
stos
lea
push
adc
push
sub
and
shrl
and
and
push
movsl
lods
xchg
bound
lods
cmp
xchg
sub
mov
popa
jb
ret
inc
pop
mov
sbb
add
out
jo
xorb
mov
push
pop
movsb
pop
movsl
test
xchg
pop
mov
mov
bound
jmp
stc
dec
add
sarl
add
or
xor
mov
push
adc
sub
inc
loopne
jo
mov
rorl
mov
add
inc
pop
ret
add
mov
or
inc
adc
pop
sbb
movsb
add
imul
jmp
jns
mov
cmp
or
test
je
inc
mov
add
xor
dec
push
xlat
test
jmp
jo
pop
sbb
ljmp
mov
divl
cmp
mov
sbb
pop
pop
jp
out
sub
inc
adc
push
jo
sub
sbb
or
inc
add
inc
sub
test
loopne
cli
cmp
mov
inc
pop
icebp
sub
mov
add
outsb
push
leave
mov
aas
adc
pushf
cmp
loopne
mov
mov
adc
mov
jns
jle
sbb
popf
or
dec
inc
sbb
dec
into
aaa
repnz
divl
test
xor
cs
pop
pop
sbb
sbb
sub
and
fdivr
ss
pop
sbb
or
cmp
adc
repnz
push
and
push
fnstsw
xor
mov
adc
movsb
and
push
or
sub
sub
sub
fadds
mov
inc
lock
and
inc
mov
fucom
cmpsl
and
lea
mov
lock
xchg
jl
pop
rcrb
mov
sbb
mov
rcl
and
sti
push
inc
cmp
pop
jle
outsb
pop
outsl
clc
shll
pop
xor
add
mov
mov
jl
mov
js
rclb
or
imul
ds
js
xor
sbb
in
nop
or
loope
aaa
loope
and
xor
jmp
ja
lea
loope
jl
dec
xor
cli
xor
or
cmp
add
cmp
lds
sbb
adc
sbb
ficoml
clc
push
hlt
cwtl
pushf
xor
mov
movsl
mov
jno
call
loopne
mov
repnz
mov
or
jle
adc
sub
inc
lahf
and
pop
adc
pop
sbb
sbb
dec
enter
mov
ss
cmpsl
push
rcl
xchg
jle
cmp
mov
push
lahf
cwtl
mov
inc
add
fabs
mov
xor
adc
aam
jo
push
inc
lock
rcl
mov
sbb
sarb
sbb
or
dec
push
and
or
shll
adc
push
adc
aaa
jg
aaa
pop
fisttpl
cmp
dec
add
and
test
adc
push
jmp
xchg
fcmove
je
pop
test
xchg
add
cmp
and
add
mov
cmp
aaa
cmp
add
jns
and
add
es
adc
cmp
popf
popa
dec
sti
dec
pop
xchg
lret
gs
xchg
xchg
push
popa
jnp
sbb
or
dec
xor
dec
inc
push
mov
cmpsb
mov
and
je
pop
dec
jbe
fcmovnbe
xor
cs
jae
or
xor
inc
sbb
ss
cmp
push
inc
addl
push
xorb
dec
popa
aas
sub
sub
addr16
or
aas
add
push
xor
push
sbb
xor
adc
cltd
pop
pushf
out
and
push
iret
out
movsb
and
pop
and
mov
daa
cmp
das
and
xor
sbb
add
and
xor
sub
and
mov
pushf
gs
je
test
enter
push
mov
ds
stc
push
dec
and
andb
inc
dec
lock
cltd
test
push
enter
add
aaa
dec
adc
inc
leave
inc
pop
in
ljmp
add
sub
scas
or
loop
test
sbb
mov
or
adc
shrb
sbb
xor
xchg
xor
loop
mov
xlat
aaa
repz
adc
sub
add
jge
push
inc
pop
sbb
sub
dec
ljmp
pop
sub
jmp
cmp
je
les
cmpb
push
lea
pop
pusha
xor
fidivl
sub
idivb
lods
andl
mov
int
sbb
and
jge
shrb
rcrb
and
cwtl
stc
dec
inc
iret
inc
push
sub
fldt
pop
add
jne
jae
pop
sub
jbe
mov
jmp
push
ja
adc
cs
dec
push
add
inc
cmp
lcall
push
sub
repz
sar
jle
cmpl
mov
out
cmp
adc
push
jmp
add
or
insl
push
push
xor
push
sbb
push
push
pop
fldl
add
lock
cmp
lods
dec
fbld
pop
sub
add
in
sbb
in
je
cmp
inc
push
push
cli
xor
cmp
je
mov
jb
inc
addl
and
enter
xor
ja
int3
push
dec
sarl
and
aam
in
pop
sbb
leave
jne
inc
mov
cmp
add
xchg
shll
inc
cmpsb
aas
sbb
xor
or
cwtl
ficoms
pop
data16
mov
xor
xchg
xor
dec
cltd
inc
movb
mov
iret
gs
lret
shl
rcrl
pop
xor
in
mov
ret
pop
inc
pop
pop
inc
jg
test
das
add
dec
clc
subb
inc
mov
jle
pop
movsl
sub
mov
ljmp
shrb
cmpsb
mov
sub
orl
movsb
jmp
je
push
rorb
in
xor
inc
sbb
jle
inc
ret
mov
dec
ss
out
sbb
xor
sbb
add
mov
dec
add
sbb
xor
push
rcr
lret
inc
cmp
mov
popl
xchg
adc
sbb
and
xor
push
sarl
mov
jmp
ds
pop
scas
pop
addr16
nop
cwtl
xchg
popf
or
xchg
xor
mov
int
pop
shl
sub
js
sarl
icebp
dec
mov
sahf
xchg
or
xor
inc
outsb
and
pop
jmp
loop
scas
lea
jbe
xlat
and
push
sub
or
or
dec
pop
nop
and
inc
dec
mov
mov
or
and
jns
int
push
fs
jns
fdivr
in
lods
add
push
jno
or
aas
cmp
daa
sahf
insb
in
sub
das
jne
or
das
inc
cmp
bound
sbb
or
or
push
aad
sub
enter
mov
or
jg
inc
ljmp
dec
clc
add
cmc
aad
imul
pop
daa
inc
inc
or
cmp
lret
mov
cltd
jecxz
mov
dec
inc
inc
cmp
push
jge
das
xchg
jmp
or
jl
popa
incb
clc
cs
mov
pop
pop
add
xchg
pop
fildl
dec
leave
xchg
int3
and
dec
xchg
pop
imul
sub
sub
jl
cmp
and
inc
xor
add
cmp
iret
loop
xor
dec
movsl
xchg
push
sub
out
sbb
rclb
push
fcoml
xor
shll
lret
cld
mov
lea
push
imul
sbb
or
notb
mov
pusha
nop
scas
sub
mov
add
mov
cmpsb
or
sub
pop
jmp
bnd
fimull
movsl
aad
xor
sub
fcomp
push
add
mov
push
std
jmp
pop
sub
call
stos
inc
out
jmp
aaa
aaa
jnp
enter
sub
mov
mov
or
jg
out
lcall
sbb
add
push
and
mov
shl
pop
jo
cmpb
movsl
adc
lcall
cmpsl
jnp
gs
and
add
sbbl
iret
jne
inc
add
sub
std
push
jo
push
stos
ret
jns
stos
sarl
ret
lret
jo
xor
repnz
popf
repnz
scas
adc
or
xor
loopne
adc
lea
dec
sub
pop
pop
cmp
fcmovne
mov
mov
or
out
imul
fimull
add
mov
sub
out
sbb
into
push
inc
push
xchg
adc
push
lret
push
add
lea
adc
test
daa
pop
pusha
or
cmp
rolb
pop
je
inc
outsl
sbb
ljmp
or
mov
xchg
sbb
cltd
mov
add
sub
mov
insb
push
inc
cld
in
addr16
mov
loopne
sub
jge
out
mov
mov
ja
sub
add
in
ja
jmp
insl
leave
sarb
sub
fsubrp
pop
nop
sbb
or
cmp
rclb
cmpsb
pusha
or
dec
mov
sbb
jae
mov
fnstcw
mov
loopne
ret
es
cmp
jle
inc
fiadds
xchg
leave
into
xorl
mov
jae
shrl
daa
or
jb
mov
mov
in
fnsave
test
hlt
repnz
stos
add
inc
xchg
dec
pushf
push
dec
cs
and
or
mov
dec
test
aam
jge
das
cmp
es
addl
add
or
inc
clc
test
fldl
push
add
shl
fdivrl
and
fisttpll
add
xchg
xor
push
xor
lcall
mov
cwtl
pusha
jmp
jge
fmul
andb
aaa
imul
fld
scas
mov
lea
movsbl
inc
or
adc
cmp
mov
insb
jns
sbb
testl
cmp
jns
sahf
loopne
cli
shll
and
jb
xchg
popa
mov
sar
adc
cs
add
inc
in
insb
cmp
aaa
sbb
loop
pop
mov
sub
sbb
les
les
mov
or
push
push
jg
shlb
pop
mov
inc
sub
dec
xor
cmp
xor
jl
mov
mov
int
es
imul
and
stos
sub
cmp
shrb
or
xor
fildl
popf
adc
lea
jne
add
fistpl
sbb
adc
test
cmp
sbb
xor
loop
pushf
jl
nop
clc
xor
mov
mov
ja
stos
rol
sbb
fists
shl
add
inc
lds
cmp
add
clc
mov
ljmp
orb
mov
scas
and
clc
add
into
dec
cmp
add
xchg
test
decl
loop
and
cmp
repz
jge
test
jle
mov
jg
je
inc
inc
xor
in
nop
pop
or
fldenv
popf
ss
dec
push
push
aas
in
push
xor
or
sub
in
sub
shrl
and
in
and
xor
and
inc
push
mov
ficomps
fcomps
in
mov
mov
xchg
cltd
jno
iret
arpl
dec
addr16
ret
xor
xchg
mov
sub
imul
mov
jns
push
inc
inc
rcrb
out
call
add
dec
mov
cmpsb
adc
xlat
nop
dec
push
xchg
mov
inc
scas
push
jb
mov
xchg
cmp
inc
lds
push
and
dec
dec
mov
icebp
cmp
jnp
lret
icebp
inc
mov
jns
jge
jmp
adc
in
xor
pop
loopne
jae
mov
jne
xchg
and
pop
lcall
fmull
add
cmpsl
insb
pop
fwait
lea
mov
adc
mov
pop
repz
scas
push
lock
mov
addb
sbb
or
and
ja
or
adc
test
cmp
jle
mov
out
xor
ds
lea
test
xor
push
enter
and
icebp
stos
sub
adc
aaa
iret
jl
xlat
jne
cmp
loope
popf
mov
inc
int
xlat
or
push
rcr
dec
sub
pop
or
test
andl
and
dec
lods
sti
or
push
sti
imul
rcll
xchg
or
sub
sub
in
cmovle
sbbl
or
mov
push
test
xor
test
cld
leave
sbb
je
and
jmp
out
sbb
enter
fbld
and
sbb
jp
outsl
push
or
or
sbb
push
in
or
int
rolb
sub
rolb
je
xor
adc
out
mov
inc
stc
xor
sbb
sub
adc
test
push
leave
test
push
or
dec
js
push
fistps
ja
je
sbb
and
pushf
shrl
test
leave
inc
jns
inc
or
cmp
daa
fstps
push
movsb
add
adc
dec
or
sbb
jg
lret
cld
pop
and
roll
xchg
pop
cmp
add
dec
scas
or
pusha
xchg
sbb
lahf
sbb
push
xor
inc
xor
or
movsb
pusha
add
inc
xchg
inc
insl
leave
xchg
add
jmp
pop
lock
sarb
adc
insb
mov
mov
loop
inc
mov
push
ror
xchg
add
js
push
xor
push
sub
shlb
xchg
sub
push
jae
sahf
push
fiaddl
push
movsb
mov
sub
in
mov
aas
mov
or
mov
mov
cmp
pop
in
das
cmp
clc
add
lock
dec
adc
xor
mov
add
sbb
gs
push
rcll
gs
add
or
cmp
leave
and
push
in
jb
shrl
push
adc
inc
adc
enter
pop
and
pop
rcl
es
cmp
dec
rep
add
push
repnz
sbb
add
nop
jnp
adc
cmp
in
pop
cmp
sahf
in
dec
jae
cwtl
and
or
fisubs
inc
mov
movsl
push
mov
out
xchg
add
jns
xor
and
sbb
je
jbe
or
inc
fisubl
sub
loopne
lahf
jns
pop
jge
pop
or
mov
icebp
test
adc
dec
sahf
jg
ss
adc
inc
sahf
std
ja
or
adc
dec
xor
and
mov
ljmp
push
scas
mov
fdivrs
or
movsl
rcll
add
and
in
push
mov
loope
in
xor
or
sbbl
dec
pop
enter
jns
push
sbb
xchg
arpl
ss
xchg
cmp
jmp
push
fstps
xchg
cmpl
fbld
lods
or
stos
and
leave
sbb
and
cmp
icebp
jl
jns
inc
lds
test
gs
jge
stos
cmp
dec
or
nop
xchg
xor
inc
add
pop
mov
and
mov
or
clc
pop
in
and
cmp
push
inc
adc
insb
pop
cltd
repnz
idivb
lds
vsqrtps
jbe
inc
add
cmpl
xchg
rorb
jge
dec
cmp
sarl
push
cmp
inc
iret
and
jl
sbb
scas
xchg
mov
shr
mov
aaa
add
ret
mov
mov
jne
inc
in
push
mov
stos
rcrb
shl
jg
lock
mov
lea
loopne
loop
sarb
les
in
cmp
jecxz
repnz
sbb
ret
or
pop
pop
imul
xor
xor
jo
rcr
jle
inc
or
adc
cmp
mov
xor
xchg
add
ja
lods
or
sbb
sti
je
add
shl
or
jo
sbb
mov
jb
iret
sbb
pop
or
mov
pop
jae
stc
xor
inc
jmp
scas
bnd
je
or
pop
movsb
dec
movsl
stos
dec
adc
cmp
adc
fistl
cmp
enter
enter
push
lods
leave
add
je
loope
icebp
mov
sbb
lods
inc
cmpsb
cmpsl
pushf
andb
sti
mov
mov
push
add
mov
lds
dec
cmp
or
mov
jecxz
or
xchg
daa
and
shufps
lret
ja
mov
popf
in
int
cld
incl
dec
movsl
pusha
sbb
add
fs
jno
filds
dec
pop
repnz
or
fs
imul
andb
cmp
adc
ss
inc
push
mov
addl
push
repnz
rolb
enter
cwtl
add
or
xor
addl
sub
jbe
add
cmc
add
cmp
adc
mov
dec
test
pop
xor
jge
xor
push
and
pop
pusha
xor
aam
add
lods
adc
jle
push
lds
aaa
xlat
cmpl
pop
or
inc
mov
jp
push
sarl
mov
push
mov
add
add
adc
add
add
push
cmpsb
mov
sbb
push
loopw
nop
xchg
add
sbb
cmpsl
inc
dec
adc
add
cmc
jle
or
loope
push
in
lret
add
pop
shrb
cmpb
push
adcb
lret
mov
or
add
into
in
pushf
pop
add
lahf
testb
inc
cs
sbbl
mov
mov
sbb
jb
add
lret
inc
xchg
outsb
jns
rolb
nop
fisttpl
jae
daa
sbb
cmp
mov
mov
sub
xor
lcall
pop
jb
repnz
shlb
fsubs
cmpsl
je
daa
adc
xor
push
mov
add
mov
fidivl
add
or
jl
repnz
cmp
test
add
in
xor
lcall
xorl
bound
and
inc
pop
jge
or
cld
adc
sub
jns
test
or
add
lea
dec
pusha
add
push
add
push
add
fxch
sbb
add
lea
nop
lret
ret
xor
arpl
call
ret
int3
pop
push
mov
dec
sbb
cmp
mov
test
pop
testb
jnp
or
aad
stos
mov
sub
add
outsb
leave
jne
pop
sub
jnp
mov
lea
mov
insb
mov
push
xchg
adc
int3
shlb
adc
inc
mov
jmp
out
subb
mov
dec
mov
pushf
mov
sub
addr16
xabort
frstor
jne
and
movsb
jmp
push
jne
jmp
lcall
inc
sbb
sbb
xor
jle
pop
aaa
hlt
or
repz
leave
add
cmp
jb
mov
jns
sbb
sbb
cmp
mov
shrb
sbb
shrb
dec
mov
push
push
mov
xchg
cmp
fadds
addr16
push
cmpsb
inc
fcoms
cmpsl
push
neg
cmp
lods
add
and
addl
clc
mov
or
mov
ficoms
pop
xchg
scas
push
shll
sbb
shlb
mov
rorl
or
rcll
push
lcall
add
push
mov
push
cmp
fmuls
push
sbb
ror
mov
int3
mov
push
add
push
xor
push
sbb
insb
mov
cmp
push
mov
lods
pop
inc
or
push
cwtl
add
and
adc
dec
cld
xchg
lea
mov
dec
mov
jmp
add
xchg
adc
rcrl
inc
xlat
test
xor
pusha
add
sbb
movb
push
sbb
les
xlat
adc
mov
sub
mov
and
push
add
push
dec
or
add
push
out
cmp
add
test
icebp
pop
cmp
xor
push
push
or
clc
push
testl
rorb
inc
insb
insl
rorl
fsts
push
inc
pusha
jnp
fsubs
xchg
out
push
subl
mov
lock
sub
push
dec
adc
add
cmp
inc
cs
mov
adc
jg
jge
fs
bound
add
add
add
ja
dec
es
mov
adc
out
dec
adc
sbb
dec
gs
fists
mov
cmp
sbb
orl
push
lods
lahf
xchg
pop
shrb
dec
cmp
push
add
or
and
mov
sub
addr16
inc
sahf
or
xchg
cmp
xchg
insb
mov
fldenv
dec
ret
and
dec
fdivs
lcall
jmp
adc
adc
push
es
pop
loop
xlat
dec
out
push
mov
fcompl
lcall
lret
rorl
push
pusha
xchg
pop
inc
mov
in
enter
adc
mov
andl
mov
sbb
in
nop
adc
mov
das
movsb
inc
sti
mov
int3
hlt
mov
add
pop
add
sahf
mov
test
je
push
je
out
repz
xor
and
jb
jle
jb
stc
or
mov
pop
icebp
hlt
dec
subl
mov
andl
lea
mov
jmp
xchg
into
mov
dec
test
cltd
xchg
les
rclb
jg
jo
push
cmp
decl
fisubrl
movsb
mov
call
test
ds
jns
add
aaa
stos
loop
cmp
push
test
or
insl
cli
cli
repz
pop
mov
mov
pop
lds
adc
repnz
loop
cmpsl
cmpsl
movsl
mov
mov
jl
or
stos
dec
dec
fwait
mov
pop
jno
xchg
cmpsl
cmpsl
and
jno
popa
add
fnstenv
and
nop
pop
subl
inc
rol
fwait
das
xchg
lret
add
loopne
mov
in
sbb
loope
push
push
lcall
mov
loopne
enter
xor
or
int
rorl
dec
aam
xchg
push
incl
nop
push
jmp
add
add
inc
pop
jns
loop
or
and
inc
in
hlt
xor
sarb
mov
mov
repnz
and
or
lahf
jle
xchg
jne
mov
loope
fistl
sub
ret
lahf
dec
jno
roll
loop
add
sub
inc
movsb
repnz
sbb
cli
jno
or
or
or
notb
sbb
pop
les
jae
andb
outsb
mulb
cs
sahf
cmpsb
adc
dec
dec
sbb
pop
fs
cmp
dec
xor
push
bound
lods
arpl
rcrl
loopne
lahf
xchg
adcb
adc
daa
inc
or
or
rorb
repnz
xchg
mov
jecxz
xchg
push
push
jl
inc
push
xor
pop
jle
cmc
jge
nop
sbbb
inc
or
mov
negl
adc
xchg
sub
dec
mov
dec
movsl
insb
test
imul
sub
sbb
xor
jns
mov
lret
mov
xchg
pushf
sub
sbb
je
repz
pop
push
mov
insl
test
sub
xor
cmp
push
test
repz
mov
test
fldl2t
push
pop
cmpsl
sub
jns
sbb
loope
repz
negb
sub
sti
adcb
stos
cld
jae
cmp
ret
pop
dec
sahf
pushf
lahf
and
dec
cmc
xor
mov
sbbb
lods
icebp
mov
fwait
mov
jmp
adc
sbb
inc
and
mov
pop
mov
hlt
jno
icebp
inc
aaa
scas
dec
movsl
or
lock
sbb
loopne
mov
repnz
loop
loop
shrl
aad
fisttpll
cmp
das
test
test
xorb
pop
and
test
push
add
adc
lcall
out
ja
aas
xor
jecxz
addl
add
fs
or
test
push
adc
or
push
cmc
es
inc
add
jmp
js
adc
xor
sbb
data16
enter
stc
rorl
out
jmp
adc
ja
and
push
dec
scas
fstpt
loopne
adc
push
rorl
adc
and
out
popa
dec
sbb
sub
pop
dec
dec
pushf
les
mov
xchg
mov
dec
popf
xchg
out
pop
pop
ja
inc
popw
test
pop
jb
push
mov
bound
inc
das
pop
xor
sub
pop
jnp
in
test
test
std
in
and
xchg
cmp
xchg
in
inc
in
xchg
jae
inc
jmp
xchg
in
jge
jnp
or
jl
lods
xor
in
cs
push
jge
xchg
dec
and
test
add
je
fs
bound
call
cmp
dec
insl
subb
nop
sub
dec
movsl
cltd
jge
daa
pop
adc
sbb
in
adc
in
dec
sbb
pop
mov
enter
cld
mov
in
add
push
in
add
and
aaa
leave
and
or
scas
push
stos
cmp
jmp
and
es
mov
sti
cmp
sbb
ret
jne
sbb
dec
xchg
scas
scas
mov
mov
jns
sbb
add
add
dec
loope
pop
sbb
lods
cwtl
jmp
jmp
fidivrs
imul
into
inc
dec
inc
test
xchg
sbbl
add
test
and
inc
push
jecxz
mov
or
jmp
mov
ljmp
xchg
out
sbb
mov
fistps
or
pop
shr
sbb
inc
cmpl
sti
dec
fcomi
adcl
addr16
jl
dec
mov
mov
jns
jnp
cmpsl
cmpsl
test
and
movsb
dec
mov
out
mov
outsl
test
stos
lods
lret
idivb
cmp
mov
int
roll
sahf
jbe
addr16
repnz
jns
rorl
cmp
push
or
dec
ds
pop
insl
jp
sahf
out
mov
bound
andb
mov
lods
mov
insb
ss
fistps
mov
sbb
push
sub
jge
xchg
inc
push
mov
lahf
fsubl
cmpsl
jge
rol
add
dec
fwait
jle
sbb
fstpl
jg
push
fmulp
inc
inc
std
out
sub
int
adc
sbb
xchg
jmp
incl
sbb
sbb
and
and
sub
cld
dec
sub
sub
cs
inc
xor
xor
xor
cmpsb
icebp
fistpll
cmp
cmp
add
ds
inc
inc
inc
movsl
lea
scas
ss
inc
nop
movsb
xchg
lods
popf
ss
fstps
mov
mov
mov
jl
dec
cmp
fldl
and
jae
xor
iret
mov
jae
jno
faddp
mov
imul
pop
lret
xchg
cmpsl
stc
cmp
push
int3
push
test
in
sahf
jbe
clc
leave
jg
lret
lahf
push
xlat
js
sahf
out
lret
push
dec
push
aas
lret
inc
in
xor
add
insb
sarl
int
sbb
push
sar
movsb
aam
insb
or
push
into
lcall
iret
pop
popf
rolb
jb
xor
out
rolb
fldcw
adc
movsl
mov
push
sub
push
insb
repz
out
decb
imul
repnz
dec
jnp
jg
out
mov
icebp
dec
repz
jge
repz
hlt
push
sbb
aaa
fidivs
jg
push
jae
mov
repz
xchg
mov
repz
fs
dec
repz
cmp
mov
shlb
sub
push
pop
or
and
and
addl
inc
insb
pop
jle
sbb
jle
mov
xchg
and
sub
sub
andl
daa
and
mov
sahf
adc
pop
fiaddl
inc
ja
or
pop
cli
xchg
pop
or
rcl
push
mov
push
push
jmp
add
mov
inc
lock
dec
cmp
sub
cs
push
add
out
cmp
testb
jo
lea
add
inc
daa
mov
inc
add
ret
mov
aad
push
push
xchg
mov
mov
mov
push
call
add
add
enter
adc
sbb
push
add
pop
pop
jb
cmpsb
add
ret
aam
clc
pusha
jne
jns
jecxz
inc
push
jle
enter
fs
cmp
jbe
imul
pop
loope
and
stc
add
sbb
jge
divl
jne
mov
and
movsl
or
ret
pop
jne
dec
inc
push
ljmp
pop
xchg
xchg
shl
push
or
dec
or
mov
shll
dec
aaa
mov
subb
cmp
aaa
aaa
aaa
cmp
je
sbb
jmp
cmpb
jne
xorl
jne
jmp
push
mov
inc
cmp
dec
clc
cmpb
repz
mov
adc
sbb
or
or
imul
and
int3
dec
mov
mov
jg
fwait
stc
cmp
outsb
int
stc
adc
xor
je
cmp
outsl
outsb
outsb
inc
je
add
je
testb
jne
cltd
lahf
incl
ret
sbb
js
or
adc
adcb
les
sbb
test
roll
sbb
xchg
xor
outsl
jecxz
or
adc
mov
rclb
add
push
jmp
cmc
js
and
sub
pop
pop
sbb
fimuls
add
mov
sbb
ficoml
shrb
bound
mov
push
pop
add
mov
pop
pop
jmp
push
pop
imul
das
cmpsb
sub
cmp
ja
cmp
or
les
sbb
fldcw
xchg
mov
inc
add
adc
and
aaa
cmp
sarl
xor
lahf
cmp
lea
mov
cltd
push
jmp
inc
or
cmp
fisubrl
test
xor
jb
xor
mov
orb
paddusw
jle
mov
mov
push
in
sub
lock
sub
xor
shlb
fdivl
xor
stos
dec
inc
ja
test
sub
rcrl
add
cmp
add
aas
test
ss
sub
les
push
inc
xchg
lret
pusha
and
fcompl
inc
cli
js
ja
out
mov
add
arpl
and
fisttpl
jle
shrl
int
cmp
cmp
push
pop
addl
fcmovbe
inc
fwait
lods
inc
std
push
adc
es
inc
or
mov
in
cwtl
negl
gs
adc
clc
movsb
jb
mov
mov
jns
adc
arpl
pop
sub
into
sub
sub
or
lret
add
lds
sbbb
call
xor
mov
mov
push
jmp
daa
or
loopne
jo
mov
imulb
insl
push
bound
daa
push
in
fs
jg
sub
mov
inc
jg
gs
jg
pop
ss
pop
in
sub
jne
repz
out
mov
pmulhw
mov
mov
pop
sub
jnp
mov
adc
cs
adc
and
xchg
js
jg
jg
je
adc
lahf
cmp
and
mov
nop
adc
pop
dec
inc
mov
jge
cmpsl
std
test
je
adc
jl
push
or
rorb
mov
das
and
push
sahf
das
test
sub
jl
dec
data16
or
sub
call
ljmp
push
sub
inc
pop
xor
pop
inc
inc
je
cs
insb
fiadds
add
call
test
lods
sbbb
ljmp
incb
sbb
decb
add
add
leave
int
flds
push
add
std
inc
lds
xor
movsb
jge
add
leave
in
cmpsb
pop
lds
add
and
fdivrs
call
push
inc
nop
jmp
pop
pop
in
in
arpl
push
lret
xchg
pop
das
pop
add
dec
in
incb
shll
aas
xchg
dec
fidivl
adc
lcall
in
push
pop
inc
ss
jmp
dec
cld
int
out
mov
push
xchg
xor
and
pop
dec
add
repnz
repnz
jmp
test
in
in
jmp
sub
fisttps
pop
fs
shrl
cltd
and
scas
pop
sub
dec
sub
sbb
fidivs
sbbb
cld
pop
xor
sbb
or
push
dec
clc
pop
nop
sub
repz
adc
gs
mov
repz
push
add
cmp
shrb
push
imulb
or
push
push
pop
pop
adc
mov
add
movl
jns
out
js
xor
dec
movsl
shr
mov
xchg
xor
out
pop
sti
or
dec
add
sub
lea
mov
repz
or
lea
or
or
pop
movsl
mov
inc
in
and
push
imul
and
dec
mov
push
xchg
adc
pop
lret
mov
scas
dec
xor
push
or
ja
test
mov
adc
lea
sar
mov
mov
add
fsubrl
loopne
mov
and
sub
push
je
enter
mov
adc
add
add
cld
sub
cmc
mov
sbb
in
call
shrb
push
adc
lods
add
inc
inc
or
pop
repz
repz
push
sbb
pop
jne
mov
jl
push
or
pop
adcb
pop
lcall
int
fstp
pop
adc
pop
mov
push
inc
mov
stc
push
and
dec
mov
into
mov
dec
rclb
add
idivb
jnp
xchg
rcrl
pop
jmp
rorl
mov
xor
push
adc
sbb
test
divps
add
and
add
in
in
sbb
jbe
mov
cltd
add
jb
mov
xor
inc
or
pushf
mov
cmpb
sbb
inc
pop
nop
xchg
and
push
push
aam
inc
add
arpl
rcll
push
andb
mov
repnz
fbld
das
mov
sbb
ja
rorl
hlt
mov
dec
jno
iret
repz
push
outsl
inc
pop
push
mov
insb
ds
push
xor
adc
dec
sub
or
ficomps
inc
out
or
and
or
mov
psllq
push
imull
imul
add
mov
scas
enter
decl
sub
fcom
mov
push
dec
loopne
add
push
push
mov
xor
dec
daa
or
scas
imul
pushf
or
or
sbb
jns
ss
add
mov
jle
jge
push
push
cwtl
add
icebp
xor
scas
mov
ret
xor
fsts
arpl
adc
subb
mov
cmc
das
mov
xchg
push
mov
xor
or
mov
popa
add
scas
sbb
scas
push
jp
jo
dec
dec
out
xchg
add
cmp
das
jle
sub
cmpl
cwtl
in
data16
in
jecxz
aam
xor
mov
mov
mov
and
aam
je
fists
add
inc
cmp
jne
adc
aad
loope
add
fsub
in
scas
sub
sub
push
add
push
ret
cmp
sbb
ds
popf
add
ja
fadds
sub
mov
enter
and
jo
xchg
insl
cwtl
add
rcll
push
std
ds
or
inc
andb
and
lods
mov
mov
adc
adc
push
pop
or
test
push
std
ja
and
sbb
push
push
sbb
or
cmp
lcall
dec
fstpt
cmp
gs
pop
sub
xchg
fdivl
fadds
sub
rolb
sub
dec
lret
movsl
adc
xor
gs
inc
out
mov
dec
aaa
je
repz
mov
jmp
pop
stos
dec
adc
into
dec
out
add
lahf
adc
inc
out
lcall
fld
add
mov
insl
and
sub
mov
inc
jle
inc
or
leave
xorb
rcrl
aaa
lea
mov
js
sbb
mov
mov
mov
lret
sar
xor
sub
cmp
mov
xchg
imul
sub
xchg
push
bound
out
sti
xor
sub
sub
mov
data16
push
mov
outsb
add
rcl
jns
call
ljmp
jle
push
and
lds
rcll
sbb
insb
mov
fstpt
jp
sahf
or
sub
cs
mov
add
cmp
xor
mov
xlat
jmp
daa
mov
pop
push
mov
addb
add
xchg
std
sub
add
dec
xor
or
sub
mov
xlat
inc
dec
or
cli
or
push
push
sbb
pop
cwtl
cmp
dec
mov
lods
xchg
mov
push
sbb
cmp
aam
roll
xchg
pop
pop
movb
lret
adc
cmp
es
push
test
jne
mov
mov
frstor
mov
stos
lds
xchg
cmpb
sahf
outsl
sbb
push
push
xchg
inc
pop
outsb
adc
mov
add
les
and
dec
fcmovnbe
andb
rcrb
test
sbb
addr16
das
mov
push
idivl
xor
mov
add
adc
js
lret
xchg
mov
sub
push
xor
push
mov
mov
or
sub
jne
xchg
out
or
pop
sbb
push
mov
cmpb
dec
cld
sbb
pop
rorb
aad
js
fs
add
sbb
test
or
sbb
data16
sub
mov
cmp
xor
xor
mov
or
pop
mov
cmp
test
sti
sbb
es
jbe
push
adc
pop
jg
inc
sub
jmp
sbb
ret
xor
sarb
lahf
sub
pop
mov
adc
sbb
and
inc
inc
adc
mov
or
dec
and
and
lods
jno
and
xor
cs
sub
adc
mov
adc
lea
clc
sbbb
xor
and
mov
jl
mov
pcmpeqb
loop
mov
dec
mov
mov
pop
jno
mov
pop
cmpb
cmp
shll
or
cs
gs
fisttpl
adc
mov
testb
inc
popa
jns
jne
sub
sbb
lcall
sub
pop
sub
es
xorb
pop
popf
rol
push
stos
xor
mov
jmp
or
frstor
add
sbb
xor
xor
add
push
mov
jl
push
clc
nop
jno
pop
jo
sahf
xor
adc
aas
add
xchg
mov
cmpb
int3
fs
je
xchg
mov
sub
pop
xor
lcall
or
mov
inc
hlt
xor
fcomps
cmp
divb
xchg
in
shrl
adc
rorl
out
imul
push
lcall
push
ret
ret
and
and
xchg
inc
test
jge
in
cmp
xor
or
lret
js
inc
push
dec
jo
icebp
lods
push
cmc
gs
sbb
dec
sub
add
cmp
mov
xor
fmull
call
test
cmp
adc
add
cs
daa
sub
ja
aad
mov
pop
pop
xor
out
and
cld
popf
cmp
cmpsb
arpl
clc
les
sbb
xor
notb
pop
add
pusha
xchg
fs
into
mov
cmp
or
and
or
inc
or
push
stos
sbb
daa
sbb
or
cmp
aam
mov
test
std
add
mov
jl
add
or
movsl
add
add
sbb
test
lock
pop
and
pop
inc
stos
sub
jge
inc
lea
cmp
out
cmp
aad
and
orl
dec
cmp
mov
daa
inc
rol
jg
jg
or
call
loope
add
fistpll
rclb
and
scas
test
inc
in
xchg
adc
adc
push
sub
add
insl
sub
xchg
mov
aas
in
das
mov
dec
pusha
aaa
movb
push
push
jne
jge
popa
in
adc
or
or
ss
cld
xchg
decl
call
mov
int
scas
jl
mov
insb
adc
rcll
mov
cmc
or
or
outsb
and
add
std
call
mov
imul
sub
sar
xchg
push
fsubrl
ret
mov
mov
js
testb
ds
cmpb
push
push
loop
clc
lea
or
test
push
jge
and
or
mov
add
or
in
mov
adc
add
pop
jne
jo
inc
sbb
dec
mov
inc
dec
add
cmp
addb
sub
fcmovne
mov
adc
mov
mov
lds
popa
lea
sahf
or
cmp
lea
pop
test
mov
lea
ja
jne
leave
pop
rolb
or
cmp
mov
mov
popa
mov
and
sbb
fwait
sti
call
jnp
inc
and
mov
add
rol
push
xlat
mov
popf
repz
jmp
adc
sub
jbe
test
adc
fsubl
imull
iret
adc
stos
inc
push
adc
add
or
add
or
cmp
je
cmp
fisttpl
sahf
fidivs
ljmp
add
or
adc
lea
mov
cmp
mov
je
push
push
mov
push
in
lods
aaa
lock
repnz
pop
test
in
or
push
mov
imul
pop
push
dec
pop
mov
iret
inc
popf
pop
dec
int
testl
std
jnp
cmp
sub
cmp
sub
pop
mov
cmp
or
add
inc
std
pop
ret
fwait
jns
in
xchg
or
sahf
jns
out
cmp
pop
imul
sbb
sbb
pop
or
fiaddl
or
test
mov
jns
add
add
les
sub
jo
rcrb
pusha
cmp
inc
sub
insb
add
or
hlt
dec
test
sub
add
inc
rorb
dec
notl
adc
and
mov
or
or
cmpl
inc
sahf
xchg
mov
or
xchg
and
add
dec
punpcklwd
inc
jmp
sbb
and
loopne
and
mov
cmp
pop
hlt
mov
jmp
push
inc
stos
add
dec
iret
xchg
add
and
sbb
inc
mov
ljmp
dec
lea
imul
sub
push
cmp
and
rolb
mov
jno
aad
adc
cmp
inc
cmp
jbe
mov
add
mov
add
push
leave
and
adc
or
addl
pop
stos
cmpl
ja
push
and
add
pop
or
mov
cmpsl
test
pop
and
jg
xor
mov
cmp
pop
mov
mov
lea
push
sbb
mov
sti
jnp
lock
add
add
mov
add
inc
call
xor
pop
ja
cmpl
push
mov
mov
or
cmpb
sub
xchg
mov
cmpsb
mov
inc
lods
mov
mov
push
cmp
pop
ja
push
and
add
push
push
mov
push
test
jnp
jae
adc
or
dec
test
sbb
jne
sbb
clc
add
jg
mov
sub
test
push
stos
int
loop
rclb
mov
jb
imul
jno
push
clc
mov
jmp
dec
or
jmp
rorl
in
andl
mov
adc
cmpl
sbb
pop
js
mov
js
inc
push
mov
adc
cmp
dec
adc
add
xor
xor
or
mov
inc
sarl
sub
aam
nop
inc
fidivl
jmp
jmp
loop
and
add
sbb
sbb
xor
jle
lret
hlt
enter
lcall
mov
or
push
jmp
or
push
cs
adc
rcll
jp
mov
xchg
sub
xchg
inc
xchg
inc
inc
jnp
add
adc
sub
dec
out
fimull
into
inc
cwtl
dec
dec
ret
mov
and
inc
push
rorb
push
inc
je
jb
cmp
and
ror
sarl
mov
loop
pop
sub
push
jmp
add
test
cmp
cmp
push
addl
jle
dec
dec
mov
or
add
movsl
stc
inc
push
push
jno
add
sbb
lods
push
mov
or
out
sub
xchg
popa
add
pop
bound
dec
mov
sbb
or
jmp
xchg
and
inc
inc
jecxz
push
outsl
inc
inc
add
fsubs
mov
and
push
mov
add
push
dec
shll
inc
adc
and
mov
mov
adc
and
mov
xchg
sbb
xor
push
mov
inc
cltd
popf
jge
js
inc
nop
or
push
inc
xor
pop
jle
lahf
push
and
push
push
push
insb
mov
stos
cmpsl
mov
and
push
lock
movsb
push
aaa
sub
ss
push
mov
ds
adc
xchg
cwtl
jmp
dec
adcl
mov
js
cmp
in
and
in
dec
pusha
aaa
sub
ret
sub
add
and
pop
pop
sbb
mov
pop
or
cwtl
gs
lret
xchg
mov
mov
xor
lret
fstps
adc
or
cmp
xor
cmp
push
jl
test
cmp
mov
ds
xor
adc
cmp
call
inc
enter
adc
xorl
es
fwait
les
lret
mov
jnp
hlt
rorb
inc
adcb
push
mov
outsl
roll
pop
inc
inc
add
push
jbe
and
sub
xor
or
mov
pop
dec
xor
aad
add
xor
mov
or
cmpsl
lock
sbb
orl
out
lods
inc
mov
jcxz
mov
pop
xor
cmpsl
inc
cmp
repz
sbb
clc
adc
les
sahf
fstpl
xlat
adcl
aad
loop
or
inc
or
fwait
xchg
xor
loope
add
and
mov
xor
cmp
arpl
ret
in
add
jmp
das
sub
mov
add
shll
xchg
test
push
jl
std
popa
ds
fbstp
inc
inc
inc
out
js
dec
jne
out
add
jno
cmp
inc
ds
cmp
sbb
inc
sti
cmp
je
flds
pop
jmp
and
inc
je
adc
dec
sbb
xchg
movsb
aaa
push
arpl
lret
daa
mov
inc
push
enter
xor
iret
mov
dec
hlt
pop
pop
arpl
inc
scas
and
push
dec
mov
aad
pop
shll
push
enter
inc
cmp
pop
fs
test
xchg
fcmovnbe
xchg
hlt
lea
cmp
mov
stc
sub
or
jge
jne
daa
ret
dec
ljmp
mov
cmp
xlat
sub
sbb
dec
or
movsb
sbb
jno
cwtl
add
xor
sbb
es
add
arpl
loopne
dec
add
icebp
cmp
sub
jmp
mov
daa
outsl
pop
jbe
sti
or
xchg
daa
loopne
pop
test
imul
mov
adc
mov
ss
xor
sbb
mov
dec
push
push
push
sti
push
dec
pop
or
in
push
lea
push
jo
sub
rolb
xorb
jg
push
jl
rolb
daa
es
js
sbb
mov
dec
push
movsb
or
sbb
sbb
push
test
and
outsl
mov
push
and
sub
ja
push
sbb
xorb
add
cmpsb
shlb
add
dec
cmp
pop
and
jl
or
popf
sub
mov
popf
add
orb
insl
or
inc
loopne
hlt
xorb
jns
js
push
decb
xor
adcb
test
jl
test
mov
add
test
aaa
insb
push
cltd
mov
sbb
testl
scas
ljmp
push
sbb
das
push
push
adc
cmpl
lods
fidivrs
jne
mov
mov
add
cmp
mov
adc
cmc
outsl
inc
or
cmpsl
pop
push
xchg
js
iret
push
mov
pop
pop
test
push
rolb
inc
scas
into
fildl
push
mov
stos
inc
loop
mov
mov
push
dec
pop
cmp
movsl
pop
inc
push
or
mov
push
and
in
push
or
sub
pop
xchg
xor
aam
push
push
shll
sbb
in
leave
add
insl
sub
mov
movsb
lods
pusha
je
add
mov
ret
cmp
push
sbb
add
ret
loop
mov
sbb
lea
mov
lea
cmpb
fadd
shlb
adc
mov
jno
fsubl
and
or
sbb
cmp
movsb
pop
jns
pop
mov
cmc
or
mov
or
fsts
inc
ds
shrl
cmp
xchg
push
jmp
aad
and
ret
push
test
sbb
je
mov
ret
roll
sbb
inc
jo
iret
icebp
push
push
sub
mov
xor
lea
mov
jmp
jo
inc
addb
or
js
loopne
mov
clc
adc
sbb
lea
lock
jmp
pop
mov
sbb
mov
rorb
mov
les
xchg
insl
mov
addl
jle
push
add
out
enter
sbb
fiadds
jmp
cmpb
mov
dec
lds
dec
and
push
inc
sub
into
lds
pop
sub
js
js
mov
fcmovne
pusha
push
cmovo
gs
pushf
xchg
and
xchg
sub
les
or
dec
push
sbb
sub
popf
xor
sub
mov
mov
ret
sbb
add
shr
inc
inc
add
dec
lods
test
fisubrl
xor
subb
adc
and
movsl
rcrl
xchg
jo
adc
pop
pop
push
and
dec
into
mov
push
jecxz
push
xchg
pushf
fldt
mov
fmuls
sahf
sub
sub
sbb
push
cmc
in
or
pop
adc
xchg
mov
shlb
pusha
mov
mov
mov
inc
jmp
cli
xchg
je
pop
out
lea
cs
call
xlat
shl
xchg
lds
imul
cmp
jl
xor
jle
sbb
inc
xor
xor
fldcw
iret
add
inc
push
or
mov
dec
cli
add
jmp
xchg
push
ficompl
jge
rorl
push
mov
notb
dec
jo
das
cmovae
clc
je
sub
dec
mov
dec
in
insl
jge
jge
fbstp
nop
jp
test
jge
push
cmpsl
adc
inc
sub
mov
fnstenv
lret
mov
cmpsl
push
mov
sbb
fldenv
push
cmpsl
mov
call
insl
insb
mov
mov
pop
sub
mov
mov
and
out
imul
or
jns
dec
and
cmp
cmp
push
les
cmp
sub
push
adc
test
xchg
pop
and
stc
sbb
sbbb
mov
push
test
test
pop
or
cmp
jne
sub
lcall
xor
les
mov
popa
sbb
adc
jnp
or
insl
push
test
adc
or
dec
lcall
insb
cmp
pop
mov
jmp
mov
xchg
sbb
orw
cmp
jne
testl
mov
clc
neg
pop
sbb
loopne
sub
leave
sbb
jnp
mov
adc
add
xchg
cs
push
cli
sub
dec
lret
adc
imul
xchg
ret
mov
call
es
push
fisubrl
xor
test
or
sub
sub
hlt
sbb
sbb
mov
cli
pop
mov
pop
sub
lds
and
pop
jl
sbbb
pop
inc
xchg
sub
fisubrs
add
fwait
ss
add
rorb
add
adc
xchg
cmp
inc
bound
xor
or
jae
sbb
jb
or
mov
rorl
pop
test
mov
and
inc
bound
xchg
dec
cmp
inc
xchg
sbb
subl
inc
dec
sbb
shl
xchg
sbb
je
add
movb
decl
test
push
nop
cmp
inc
out
fistps
jle
jne
cmp
pop
add
push
mov
pop
pop
mov
pop
lock
add
popf
or
and
or
add
fsubrp
mov
aas
or
xchg
mov
pop
pop
sbb
sub
or
jae
lahf
andl
or
mov
cltd
stos
dec
sahf
mov
cmpl
sbb
lods
jne
xchg
mov
mov
xchg
ja
movsb
xlat
fsub
inc
pop
cwtl
fwait
les
adc
js
sub
and
ds
shr
jg
xor
sub
xor
add
jle
jne
stc
push
jnp
mov
je
dec
test
add
sti
adc
mov
outsl
roll
scas
cmp
xor
lret
pop
inc
cmp
mov
push
pop
and
rolb
inc
in
push
xchg
add
or
leave
fxch
roll
call
or
push
test
inc
xchg
xor
xor
or
inc
mov
cmp
js
jbe
xchg
and
or
je
pop
sarb
or
sub
pop
inc
mov
add
xor
nop
in
scas
add
je,pn
mov
xor
daa
xchg
lods
adc
pop
mov
cmpsl
out
push
adc
adc
rcll
push
ss
js
dec
pop
jle
repz
adc
cltd
or
jge
loope
mov
and
dec
cltd
and
xor
cmpb
add
or
xchg
mov
and
fildl
xor
or
clc
and
lea
inc
mov
repnz
rorl
nop
mov
ficoml
ss
jno
jle
add
sbb
into
shll
xor
mov
or
out
lds
add
mov
or
lret
dec
sahf
fstpt
call
mov
fmull
lcall
pusha
sbb
or
mov
gs
mov
data16
jbe
movsl
add
in
jae
rcl
inc
jl
jne
sub
adc
dec
inc
cltd
mov
add
xor
adc
inc
jns
add
ret
loopne
add
sarl
in
adc
fistl
dec
dec
add
outsb
or
pusha
inc
negl
sub
gs
dec
sub
push
xor
arpl
cmc
cltd
push
xchg
hlt
movsb
mov
push
xor
or
or
push
adc
test
rorl
add
xor
int
dec
aaa
adc
jl
fucomip
arpl
je
push
aas
leave
push
or
inc
aam
cltd
fs
push
push
call
and
dec
adc
xchg
js
add
loopne
mov
add
imul
push
ds
les
pop
mov
inc
or
roll
pop
push
in
mov
add
pop
enter
cmpb
cmpsl
inc
scas
xor
ret
pushf
adc
popa
lret
lret
pop
pusha
pop
pop
xchg
lock
int
xchg
pop
xchg
outsb
or
sbb
loope
or
mov
dec
lds
loopne
inc
fs
insl
imul
or
and
xor
push
stc
adc
leave
and
and
push
inc
pop
xor
inc
push
imull
sub
xchg
les
sbb
push
cltd
loopne
add
call
sbb
imul
inc
testb
add
sbb
dec
js
pop
pop
xor
dec
shlb
mov
sub
xor
sbb
jno
mov
push
push
cmpsb
movsb
lret
lods
or
in
or
daa
mov
add
sbb
dec
notb
push
sti
mov
ficoml
or
xlat
fldenv
push
pop
adc
aas
adc
adc
add
sub
sahf
out
mov
or
mov
or
push
cmp
xor
sub
insl
push
inc
and
sbb
daa
mov
sti
jecxz
loopne
insl
js
or
test
dec
lret
fs
pop
adc
movsb
jb
in
sbb
call
dec
lret
mov
loope
sbb
leave
fs
pop
fstpl
mov
inc
stos
jl
rolb
das
dec
push
xor
cmp
lods
hlt
cmpsb
pop
ret
ss
inc
dec
and
xchg
subb
movsl
push
pop
scas
xor
es
xor
jns
and
xchg
pop
xchg
fstps
jecxz
mov
xor
cli
cmp
sbb
or
sahf
out
inc
pop
sbb
std
lods
out
jns
and
and
loope
push
divl
and
movsl
sub
stos
or
iret
sub
xchg
xor
lock
xor
xchg
insb
add
sub
push
jae
and
jo
dec
or
push
popf
inc
cmp
xor
push
and
mov
mov
loop
aaa
add
xchg
xorb
fildll
jle
cld
push
and
orb
or
xor
sub
or
or
sub
jecxz
bound
push
pushl
adc
push
sti
or
add
lcall
popa
jp
and
enter
sbb
mov
or
cmp
mov
jb
sub
add
enter
jg
mov
dec
popa
inc
dec
out
sbb
add
fadds
aam
shlb
adc
pop
imul
dec
push
pop
out
xchg
cld
xor
add
shlb
idivb
inc
push
dec
ret
dec
adc
adc
dec
mov
push
and
inc
lds
fadds
cltd
je
cwtl
ss
rolb
fildll
jae
push
and
testl
les
pusha
push
push
mov
sub
inc
sbb
pop
sbb
xchg
mov
xchg
adc
xor
mov
mov
push
xchg
mov
mov
adcb
imul
imul
mov
push
mov
mov
mov
sbb
cmp
scas
mov
jb
mov
push
jnp
andb
jle
in
mov
cmpsl
cld
mov
sub
lods
dec
pop
adc
xchg
je
sub
push
push
xor
adc
jb
jo
daa
jo
ljmp
sti
mov
movb
aaa
push
insb
and
cmp
add
sbb
daa
lret
hlt
sbb
cmp
in
imull
call
or
mov
dec
push
mov
sub
jnp
add
mov
ja
pop
ss
push
subl
or
test
pusha
insb
add
fimull
insl
xor
or
mov
js
mov
pop
aas
nop
add
and
call
sbb
pop
daa
ret
push
xchg
cmp
and
sbb
lods
mov
jns
cmp
in
push
push
cmpsl
add
jmp
xchg
or
mov
pop
dec
or
lar
nop
in
js
inc
push
je
imul
xorps
pop
les
sub
imul
mov
adc
aam
add
and
pop
inc
dec
pop
xchg
push
outsb
and
jno
ret
dec
sub
es
sub
mov
sbb
xchg
add
dec
loop
and
pop
jbe
dec
inc
movsl
push
int
or
add
adc
dec
and
add
or
xor
inc
xor
add
mov
sbb
roll
pushf
movsb
add
or
pop
sub
movsl
test
je
mov
sub
sbb
jns
lods
sbb
mov
or
lret
pop
stc
jmp
arpl
and
rcll
sub
pop
xchg
inc
or
xorb
sbb
push
add
push
cmp
addr16
add
sbb
and
adc
mov
xchg
mov
fsubrl
and
dec
jb
pop
mov
loopne
push
cmp
aas
enter
movsb
fsubr
cmp
pop
or
cltd
jnp
and
arpl
pop
imul
or
dec
adc
sbb
inc
or
mov
inc
or
les
push
mov
sub
add
test
int3
and
inc
mov
mov
add
rorb
popf
xchg
add
dec
and
cmp
mov
and
pop
shlb
adc
pop
mov
dec
stc
or
mov
add
push
jns
add
int3
push
cltd
xacquire
ret
add
mov
jae
xchg
jle
mov
loope
cmpl
add
jp
sbb
push
enter
or
xor
cltd
inc
sbb
lcall
rclb
mov
mov
mov
xor
cs
shl
mov
inc
imul
sbb
and
popf
clc
jmp
push
push
pop
pop
push
dec
pusha
psubusb
dec
inc
push
bound
and
mov
fdivrl
sbb
adc
push
xor
rclb
sub
xor
imul
sub
jg
push
iret
cs
div
jne
mov
ffreep
rolb
mov
orl
test
adcb
and
inc
jo
dec
lods
add
jns
mov
pop
pop
imul
nop
mov
pop
mov
or
pop
jmp
mov
or
sub
mov
xchg
ret
cmp
and
pop
dec
cmp
pop
sub
sbb
addl
pushf
xchg
or
cmp
or
or
sub
push
jne
icebp
sbb
push
sbb
imul
push
dec
lea
push
and
adc
xor
verw
arpl
xor
cmpsl
or
bound
mov
cmp
roll
mov
and
push
ja
sub
or
sarb
jle
sbb
adc
addr16
inc
call
jl
cmovae
dec
pop
pushf
cli
popa
and
in
inc
call
jl
jb
push
jp
imul
dec
call
rolb
roll
push
jmp
out
push
imul
aaa
mov
and
sbb
repz
xchg
mov
dec
pop
push
cmp
fwait
pop
or
or
dec
sub
dec
movsb
sbb
add
mov
push
scas
adc
xchg
mov
or
dec
push
add
add
and
mov
mov
incb
mov
push
push
push
daa
dec
or
mov
pop
cs
fdivl
add
jge
imul
andl
jge
jne
mov
sbb
or
jnp
test
jo
cwtl
adc
sbb
and
scas
xor
mov
leave
push
push
push
repz
dec
fisttpll
and
int
sbb
and
lcall
push
jmp
and
inc
sub
loopne
mov
or
or
xchg
mov
add
call
lods
test
pop
cs
dec
sub
mov
imul
sub
or
pushf
ja
and
es
subb
sub
xchg
pop
inc
xchg
icebp
stos
sub
add
and
or
in
mov
and
or
or
imul
inc
pop
cwtl
dec
and
cs
sub
add
bound
ja
and
mov
add
add
pop
enter
and
xor
lcall
or
dec
adc
repz
incb
add
add
cmpsb
jge
push
dec
cs
sbb
test
xlat
test
push
mov
add
cmpsl
xor
test
dec
in
mov
sbb
sbb
add
test
sti
insl
imul
push
add
pop
lock
cltd
dec
roll
test
or
inc
push
scas
lahf
test
and
and
xlat
push
mov
xor
test
pop
jg
adc
in
fiaddl
sub
lret
mov
jne
pop
pop
cmp
movsl
popf
sub
roll
sub
aad
cs
mov
subb
jl
int
lock
je
loopne
icebp
filds
and
and
insb
cmp
je
cmp
je
cmp
je
clc
out
xor
cmp
je
cmp
je
cmp
je
outsl
call
cltd
jo
cmp
je
cmp
je
cmp
insb
cmp
je
andl
cmp
je
cmp
je
cmp
je
cmp
adc
mov
inc
scas
or
add
jg
cmp
push
cmp
je
cmp
je
cmp
cmp
mov
jne
aas
adc
add
add
xor
xor
leave
mov
repnz
sbb
add
xlat
xor
roll
add
push
or
jo
or
push
adc
inc
test
fldl
jl
aam
fildl
je
jmp
ret
outsb
push
sub
xchg
dec
push
or
outsb
add
dec
mov
or
pop
mov
sub
push
jg
ret
and
pop
movb
mov
inc
orb
dec
mov
xor
mov
mov
ja
addr16
inc
jmp
inc
pop
and
cs
inc
mov
stc
inc
xor
pop
sub
ss
jns
jecxz
popf
pop
adc
cmp
adc
mov
fldl
sbb
orl
repz
pop
pop
insl
sub
mov
xchg
or
and
repz
add
and
daa
adc
mov
mov
cmp
jb
inc
xor
cltd
rclb
pop
ja
aaa
inc
push
jne
cmp
repnz
xor
hlt
add
incb
inc
cmpsl
cmp
outsl
sub
xchg
popf
pop
dec
sbb
ficompl
xchg
add
imul
xchg
add
jle
dec
cmp
push
cmc
or
pop
imul
sub
jns
jmp
pop
sub
add
cmpsb
jbe
mov
or
push
xchg
jg
inc
adc
cmp
jb
or
mov
push
es
push
decl
push
pop
jb
jno
in
adc
cltd
movsl
jae
push
pushf
mov
loope
mov
mov
imul
pop
and
xor
adc
and
dec
jmp
inc
andl
sbb
push
jae
add
in
int3
mov
lds
push
inc
push
xchg
and
mov
cmp
jno
cmp
adc
push
mov
pop
mov
xor
stc
mov
cmp
jge
pop
jle
iret
dec
lahf
fidivs
pop
ret
popa
jp
insb
pop
lock
xchg
aam
roll
lock
push
test
cmp
movsb
leave
adc
mov
and
test
test
test
pop
push
push
aam
addb
pop
adcl
cmp
add
movsb
xorl
mov
jl
add
cmp
push
push
aaa
xor
pop
scas
or
cmp
dec
xor
push
dec
je
cmp
mov
adc
int
sub
hlt
or
adc
jo
and
dec
push
mov
push
jno
cmp
fidivrs
push
inc
jno
lcall
xchg
fsubrl
dec
cmc
jecxz
fcmovnbe
pop
fdivs
or
insl
repz
and
cmpsb
in
add
sub
inc
push
nop
jbe
and
sub
pop
adc
outsb
iret
sub
fists
push
add
imul
insb
ljmp
inc
or
xor
js
xor
xchg
cmpsb
imul
xor
xchg
jmp
or
lcall
arpl
xor
add
xchg
roll
leave
push
dec
rolb
pop
clc
adc
sub
sbbb
sub
gs
aaa
addb
inc
ficoms
mov
imul
xchg
cld
lea
mov
loopne
pop
daa
inc
adc
out
popf
dec
insl
je
mov
hlt
push
xchg
pop
insl
je
pop
cmpb
push
shl
data16
sar
dec
cs
mov
inc
ja
js
jno
insl
jmp
push
scas
or
sbb
xor
bnd
push
sbb
nop
jecxz
or
adc
or
je
jb
pop
mov
ljmp
push
cmp
fdivl
arpl
mov
ljmp
inc
push
push
sbb
xchg
icebp
inc
lods
loop
add
les
sbb
pop
fnstenv
adc
jnp
add
inc
xor
aaa
xchg
adc
in
lcall
push
or
popf
push
dec
imul
jmp
cld
adc
push
adc
jne
cmp
or
sub
push
cs
and
arpl
xchg
pusha
xchg
adc
inc
mov
sub
jecxz
mov
xchg
arpl
stos
inc
push
jnp
rcr
mov
xlat
push
and
sbb
and
dec
pusha
add
lret
sbb
sbb
xchg
outsl
fisttpl
mov
les
dec
mov
fwait
inc
enter
cmpl
adc
daa
add
push
cmp
jo
pop
ss
mov
inc
adc
dec
adcl
ss
fwait
dec
sahf
bound
adc
jo
cmpsl
sbb
jnp
fnstsw
add
add
test
push
rorb
jl
sub
stc
push
arpl
mov
jle
dec
dec
test
rorb
imul
and
es
and
fs
add
xchg
push
push
fs
aam
icebp
xor
push
lahf
push
push
push
push
arpl
out
sub
mov
ror
mov
sub
stos
push
pop
inc
movsl
jl
or
xchg
xchg
or
or
pop
addr16
mov
imul
or
xchg
shlb
test
adc
ret
das
sbb
ja
daa
xchg
popa
adcb
push
cmp
mov
fcomp
pop
loop
sbb
sub
mov
ret
aad
test
jle
push
or
test
and
lock
fbld
and
xor
cmp
lea
cmp
sbb
or
sub
xchg
sbb
adc
xor
jmp
or
loope
mov
pop
push
mov
dec
xlat
dec
insl
lods
adc
das
dec
daa
popa
sub
push
daa
cmp
fsubrl
add
and
outsl
push
or
aas
cmp
mov
test
mov
ret
imul
inc
ljmp
push
lods
add
pop
pop
push
mov
lods
add
push
and
or
sbb
arpl
mov
mov
xchg
sub
dec
jl
sub
rclb
and
dec
ret
add
das
loopne
inc
xchg
xor
cmpsb
ss
sbb
loopne
lret
fisubl
jbe
outsb
js
sbb
loopne
enter
pushf
test
cmc
in
sbb
sbb
push
scas
idivl
jbe
lret
sbb
test
dec
mov
jb
cmpsb
mov
xchg
mov
mov
fimull
sub
add
sbb
push
cmp
jno
xor
std
movb
call
fwait
push
lock
mov
faddp
push
sub
jle
dec
adc
and
add
dec
pusha
jns
hlt
cld
mov
in
push
fmuls
push
push
rcpps
or
inc
cmp
or
jb
dec
dec
cmp
or
cmp
loope
call
ss
cmp
pusha
mov
push
sbb
js
push
inc
adc
push
mov
sbb
mov
push
mov
pop
cmp
push
mov
and
mov
or
ret
jl
and
or
mov
add
cli
add
call
or
shll
inc
incl
adc
fisubs
inc
je
dec
sbb
fstpt
lea
mov
test
pop
sahf
mov
das
test
fiadds
adc
xchg
stc
insb
xchg
test
sub
xchg
in
add
es
idivl
jnp
jo
notb
fadds
out
sub
imul
sub
xor
push
add
div
and
stc
ror
inc
inc
add
inc
jg
dec
fsubr
or
push
and
push
in
jb
incl
push
dec
iret
sti
or
xchg
xor
lock
orb
in
iret
mov
xchg
inc
xor
rorb
jp
jl
sbb
lods
xor
jmp
jno
movq
inc
push
fisubrs
inc
addl
add
push
adc
lea
call
pop
cmp
idivb
jb
xchg
or
lods
pop
push
lret
push
aaa
sbb
push
and
jle
jns
xor
pusha
cmp
pop
add
loop
clc
nop
push
pop
jmp
out
hlt
sub
out
xchg
in
testb
cld
shrl
push
cmp
out
inc
aaa
lret
sarb
add
subl
mov
cmp
js
mov
ljmp
xor
sti
and
xor
dec
sub
lret
popf
jae
or
pop
xor
cmp
and
in
inc
inc
inc
lcall
add
pop
jl
jge
test
addb
ds
sub
xor
fnstsw
adc
push
and
cmp
or
cld
test
add
std
popa
lar
xor
dec
rorb
push
js
add
enter
dec
adc
jmp
orb
jge
jge
mov
insl
mov
loopne
push
dec
sbb
mov
mov
push
adc
push
pusha
mov
and
push
ja
pop
les
adc
inc
jbe
popa
imul
js
popa
ret
mov
push
adc
pop
jbe
test
jne
cld
or
mov
loope
xor
sbb
nop
imull
lods
cmp
mov
ret
stc
or
sbb
pop
test
dec
ret
adc
cmp
inc
push
sahf
push
lea
loopne
sbb
pop
orl
faddl
jge
pop
or
aas
sbb
or
add
out
jnp
orb
adcl
or
sarb
popf
in
inc
arpl
bound
mov
or
push
rcll
sbb
fisttpll
cmp
shrb
pop
sti
push
js
inc
add
mov
xchg
fstps
je
cmp
dec
or
fidivs
mov
movsb
xor
sbb
test
pop
imul
cwtl
movsb
and
sub
scas
xor
ja
je
cmp
lret
xor
dec
xchg
push
popa
cmp
inc
add
sub
sarb
push
add
jne
inc
mov
dec
cmp
sti
push
jmp
mov
push
jge
xorl
pop
pop
pusha
or
ret
rclb
add
add
sbb
mov
adc
and
repz
push
addr16
add
iret
add
inc
add
adc
xor
dec
mov
insl
jge
inc
mov
push
and
cmc
push
dec
ret
dec
jle
in
inc
fdivrs
pushf
push
push
add
lods
test
adc
ret
jecxz
js
adc
outsl
xor
dec
ljmp
cli
jl
lea
test
xchg
add
and
adc
dec
push
jmp
or
and
jmp
pop
mov
and
or
sbbb
gs
and
out
enter
mov
ljmp
jle
fimuls
and
mov
mov
nop
rolb
xor
or
push
pop
add
xor
insb
loopne
fidivs
adc
xchg
sbb
push
cltd
js
out
push
dec
jno
pop
add
and
push
pushf
testl
fistpl
test
jns
aaa
add
push
xor
dec
add
jl
sbb
insl
repnz
dec
shrb
cmp
jae
sub
dec
nop
add
scas
dec
insb
mov
dec
sbb
movsl
xor
push
jle
std
je
push
rolb
dec
jmp
pop
call
add
loope
sbb
and
fcmovne
jns
push
xchg
jmp
push
inc
mov
lock
cli
or
mov
cmp
jne
cmpsb
test
aas
xchg
jl
push
add
jne
jae
addl
mov
or
jb
fimull
push
or
add
push
std
mov
insb
fdivs
cmc
push
fcmovnbe
cmp
fisttpl
add
scas
jge
jne
loop
mov
cmp
cmp
enter
sbb
push
add
addb
or
mov
dec
out
inc
cmp
movsb
pop
jb
mov
pushfw
pop
mov
dec
inc
or
mov
mov
pop
pop
cmpsl
test
adc
call
xchg
pop
fstl
push
fucomp
lods
in
or
daa
adc
dec
sti
cmp
xor
push
popf
test
push
sahf
stos
jb
xor
add
nop
fsts
repz
cmp
loopne
jns
jae
js
outsb
lock
aad
bnd
or
lock
mov
and
mov
cmp
xlat
mov
movsb
and
in
push
cmp
int3
or
or
push
add
and
stos
sub
adc
inc
pop
mov
add
cwtl
shlb
add
mov
cmp
jl
int
push
jno
popf
rolb
cmp
mov
cmp
add
add
inc
add
sbb
jb
add
mov
push
mov
movsl
out
ret
fs
mov
adc
les
cmp
xchg
das
mov
mov
jmp
dec
and
fiadds
add
in
mov
xor
push
je
adc
push
push
mov
xchg
dec
insb
pop
mov
jne
je
lock
andl
adc
adc
out
ss
add
aas
sarl
add
call
stos
mov
shrl
ficoml
mov
psubq
jb
hlt
or
bound
add
push
mov
sbb
xchg
addr16
lea
mov
xor
popa
inc
sub
ja
aad
dec
adc
stos
push
into
lock
fimuls
scas
pop
pop
inc
mov
pop
roll
adcl
ss
or
xorl
aas
or
cmp
and
test
cmpsl
adc
xchg
adc
loopne
jnp
out
cmp
sbb
mov
lds
xor
fmuls
dec
dec
or
and
sbb
lcall
add
cmp
jle
sbb
aad
push
xor
xchg
or
pop
cltd
inc
repz
add
je
pop
testl
ja
adc
adc
add
or
and
insl
add
mov
jnp
jne
mov
push
inc
add
fnstsw
aaa
jns
sbb
mov
mov
mov
fisubrs
lods
insb
mov
push
test
pusha
push
xchg
test
aad
xorb
xchg
jb
out
cmpsb
xchg
andb
arpl
popf
mov
pop
mov
and
inc
cli
pushf
test
leave
cli
mov
cwtl
invd
cmp
xchg
cmc
pop
cmp
sti
adc
push
push
mov
pop
adc
sbb
add
or
fstl
push
aam
push
mov
jne
xchg
mov
cmc
adc
adc
mov
pop
adc
jge
push
and
or
jae
movsl
daa
enter
add
pusha
push
sub
sub
sub
add
lea
jbe
out
imul
add
sub
fistpl
stc
add
push
push
xor
ret
push
dec
sub
fiadds
rcrb
xchg
je
loopne
mov
outsb
iret
cmp
outsb
and
mov
mov
ret
pop
xor
rcrl
mov
lret
mov
xchg
add
adc
push
jmp
mov
sbb
sbb
mov
lret
add
dec
mov
xchg
mov
jne
xchg
iret
jg
pop
bound
mov
mov
pusha
sub
adc
lea
subl
inc
or
fsubr
add
sub
iret
fs
je
shlb
adc
cmp
xchg
cmp
aaa
adc
and
movsb
sub
ds
mov
sbb
pusha
imul
mov
insl
sub
push
add
fwait
aad
or
dec
pop
out
push
adc
movsl
mov
out
add
push
xchg
or
jg
and
fnstenv
push
inc
push
push
push
dec
add
add
jbe
mov
or
dec
pop
jmp
pushf
fildl
dec
or
cmp
cld
and
ret
or
mov
inc
into
ficomps
and
inc
sbb
dec
call
jb
je
fimull
sub
add
mov
or
push
sub
sarb
cmp
xor
sub
add
call
sbb
shll
add
rolb
cmp
xchg
loopne
cmpsb
jle
lret
in
jo
mov
dec
call
sub
testl
stos
clc
fistl
and
jg
repz
jp
mov
push
add
add
add
add
add
add
add
add
pop
xor
jno
dec
sub
lods
in
push
push
adc
and
add
pop
pop
adc
mov
push
adc
add
decb
ljmp
push
adc
jbe
or
scas
jge
mov
dec
add
push
push
push
push
push
call
out
mov
add
jb
adc
ss
leave
push
push
push
xor
and
inc
or
xchg
out
sbb
push
push
xor
push
adc
and
lods
dec
fadds
pop
dec
dec
inc
daa
cwtl
jae
jge
jmp
adc
sarb
daa
sti
into
xlat
mov
fmull
jns
dec
sub
jns
or
sub
or
aad
in
insb
sbb
push
cli
pusha
xorb
adc
js
push
inc
xchg
sub
add
mov
ret
xchg
cmp
lret
fsub
xchg
neg
lea
cmp
ret
xor
lock
xor
sbb
ds
aad
shlb
mov
mov
mov
adc
inc
aad
jmp
cmp
in
lret
test
cmp
divl
and
pop
fwait
pop
cwtl
adc
dec
mov
and
mov
push
cmp
pop
sbb
inc
jb
subl
inc
lock
inc
das
inc
mov
jb
sub
or
movsb
mov
jbe
orb
lock
and
imul
dec
inc
cli
mov
pop
inc
push
mov
xchg
push
xchg
mov
and
imul
mov
push
push
adc
or
adc
xor
mov
je
xor
and
roll
push
sub
stos
or
push
or
js
inc
jnp
outsl
fistpll
roll
out
add
mov
jno
pop
mov
lret
mov
testl
je
cmp
je
mov
test
test
add
pop
push
jge
jle
or
and
lock
push
and
sahf
inc
rolb
imul
add
pop
cld
fcomps
jl
or
push
sbb
jns
rol
rclb
pop
xchg
xor
cmp
out
xchg
adc
sbb
jge
sub
ja
mov
jl
push
dec
jge
add
cmp
or
and
jnp
cmp
mov
jl
sub
movswl
sbb
inc
scas
sub
or
iret
icebp
push
ret
cmpl
fs
fdivs
adc
leave
repz
push
adc
and
add
jo
xchg
and
sub
rcpps
pop
loopne
adc
add
rorl
dec
mov
icebp
inc
jmp
or
fwait
test
outsl
add
add
sbb
subb
and
push
dec
add
push
mov
jle
push
or
mov
push
xchg
lds
pop
xchg
jbe
outsl
dec
or
cmp
pop
mov
xorb
add
mov
clc
clc
dec
sbb
add
or
flds
cmp
push
mov
ljmp
pushl
test
rorb
and
and
mov
imul
inc
add
or
xor
pushf
add
adc
imul
add
adc
nop
stos
and
jmp
and
pop
inc
mov
or
lret
icebp
mov
xor
inc
mov
push
test
fnstenv
or
test
test
push
push
sti
push
push
les
mov
cmp
pop
daa
gs
ret
nop
and
lcall
leave
or
sub
bound
js
addr16
sbb
or
dec
sub
dec
mov
incl
lds
mov
fdivl
and
adc
push
insb
clc
mov
arpl
add
and
xchg
insl
jne
cwtl
push
dec
and
jns
jns
insl
aaa
add
aaa
cmp
xor
das
sub
or
aaa
mov
rcrb
sbb
pop
xchg
icebp
mov
les
shll
xorb
pushl
adc
rclb
dec
cld
jg
or
add
mov
mov
pop
sub
add
dec
js
imul
mov
inc
or
les
mov
push
fisubl
cmp
mov
jns
ffreep
es
add
push
stos
and
or
pop
push
pop
add
jbe
or
jg
inc
sbb
out
int
and
jle
adc
xchg
push
rcr
jp
jo
std
add
cmp
push
add
shlb
xchg
cmpl
mov
or
add
or
es
mov
dec
mov
cmp
xchg
or
dec
lar
je
into
jne
mov
movsb
mov
stos
xor
mov
sbb
outsl
mov
add
lock
fwait
mov
add
and
cmpl
push
movsb
roll
push
inc
sbb
sbb
scas
imul
push
mov
or
push
cmpsl
mov
xor
adc
jge
dec
addl
and
adc
xor
in
push
sub
mov
add
or
mov
push
cltd
xor
test
add
xor
lahf
add
lods
sub
lcall
fwait
sbb
mov
mov
dec
pop
aaa
inc
sub
jle
testb
sub
mov
jle
and
negb
adc
push
cmp
inc
sub
enter
popa
int3
dec
xchg
or
ret
stos
inc
jl
cli
lods
mov
jnp
pop
adc
lds
add
outsl
int3
jns
adc
add
ficoms
in
ss
mov
bndldx
jnp
or
sbb
add
jg
dec
int
nop
and
incl
lods
sar
jb
in
adc
insl
orl
lret
mov
test
sub
mov
and
add
shlb
dec
pop
or
sub
insl
xlat
js
stos
pop
and
subl
ret
jge
add
xchg
scas
xor
or
inc
jl
mov
divl
lock
push
andl
sub
xchg
xchg
inc
rep
pop
movsb
xor
sbb
mov
sub
inc
notl
add
into
stc
mov
xor
or
add
jmp
and
or
ret
test
mov
xor
or
pop
test
sbb
xor
dec
jp
push
cmp
insb
mov
xchg
dec
sbb
mov
cli
jl
cmpl
push
rclb
clc
xorb
jbe
jae
sub
mov
add
sbb
mov
adc
movsb
sbb
sbb
cmp
scas
or
ss
xorb
sbb
fs
mov
sub
fnstsw
out
pop
add
popf
in
inc
adc
adc
addr16
jge
push
xlat
sub
rorb
push
and
xchg
data16
sub
test
nop
add
scas
sbb
scas
cmpsb
in
ljmp
scas
lods
sbb
pop
dec
movsl
inc
in
cmp
dec
jo
or
testb
out
in
mov
xor
push
cmp
out
sarb
and
std
add
idivl
adc
lock
jno
cmp
dec
and
and
and
push
leave
push
je
filds
push
mov
inc
jp
mov
mov
bound
mov
out
lods
push
popa
sub
in
shll
fidivs
jg
pop
inc
pusha
pop
lds
sbbb
cltd
out
xor
rolb
ret
and
inc
outsb
and
mov
mov
scas
sbb
dec
pop
test
jmp
xchg
fildl
stos
je
add
dec
add
and
jb
push
mov
push
clc
add
dec
add
add
clc
push
cwtl
xor
ja
sub
mov
push
cmp
mov
in
lds
in
aam
jae
and
flds
push
cmp
jnp
mov
push
mov
sbb
nop
shrl
pop
addr16
mov
add
cmp
jmp
mov
fisttpll
dec
xor
jle
xchg
jnp
mov
test
cmp
leave
cli
and
rorl
and
pushf
fadd
mov
add
sahf
out
and
adc
insb
xchg
sbb
ret
iret
test
dec
test
dec
xchg
xchg
mov
aad
push
xchg
notb
roll
rcrb
stc
movb
faddl
fistl
mov
mov
mov
cmpb
or
mov
lock
pusha
jl
js
jae
fcoms
sbb
dec
rorb
aas
cmp
dec
lret
sahf
add
fcmovu
add
xor
jle
xor
mov
xchg
sbb
mov
jmp
ss
and
mov
test
inc
cmp
enter
add
pusha
sbb
pusha
shlb
test
add
mov
jns
sub
or
test
sub
adc
mov
ds
mov
adc
and
rcrb
add
out
add
lcall
mov
and
xchg
mov
dec
add
shlb
jle
pop
adc
orl
popf
xchg
mov
mov
cmp
addr16
punpcklbw
push
nop
repnz
fsub
popa
sbb
dec
mov
lds
adc
lock
xchg
ds
mov
and
mov
dec
ret
xor
add
adc
ljmp
jbe
mov
aaa
sbb
shll
sahf
jno
fsubs
pop
adc
sbb
insb
sub
mov
or
test
inc
arpl
in
and
in
call
jnp
outsl
sahf
fptan
push
adcb
jne
add
mov
or
add
out
mov
or
inc
shrl
xor
add
addr16
push
ret
push
cmp
loop
nop
mov
inc
inc
xchg
mov
jb
dec
out
xor
cmp
or
mov
int
into
cmp
add
sub
leave
add
clc
mov
push
push
roll
shl
and
push
cltd
loope
xor
addr16
push
and
test
mov
jmp
adcb
pop
sbbl
and
push
sub
insb
lahf
mov
mov
je
mov
ja
call
aaa
push
jg
add
or
add
add
or
push
or
add
push
adc
bound
and
outsl
sbb
dec
inc
cmp
dec
mov
jnp
fld
enter
test
inc
or
hlt
mov
loopne
add
addb
pop
fisubs
adc
arpl
cld
sbb
notb
outsb
inc
pop
dec
jp
or
xchg
out
jno
add
pop
adc
inc
jno
push
pop
fmul
addb
push
mov
sbb
lahf
and
push
sbb
aas
aad
jbe
jns
adc
dec
or
dec
push
jmp
test
inc
insl
dec
xchg
lock
jg
or
pop
cmp
jb
lods
sub
mov
jl
scas
cmp
pusha
cmp
inc
in
dec
jecxz
add
rol
jmp
cld
push
or
xor
inc
pop
sbb
cmp
xchg
mov
push
scas
iret
jnp
jnp
into
push
out
push
dec
aas
push
adc
je
add
add
jp
xor
add
sub
mov
aam
lods
mov
pop
fwait
or
push
lret
in
adc
or
adc
mov
cmpsb
jmp
add
test
pop
pop
push
lods
lds
jae
iret
push
mov
sbb
push
push
push
and
call
jecxz
pusha
push
inc
sahf
addr16
push
ret
push
xor
stos
insb
cmp
cltd
fcoml
pop
ds
mov
adc
stc
sub
add
mov
dec
xchg
jl
push
adc
mov
es
push
dec
sub
rcrl
popa
cmp
pop
cmp
int
int
or
or
je
sbb
mov
lds
pop
mov
scas
out
popf
adc
xchg
jbe
nop
push
adc
repz
xchg
push
add
pop
push
add
xchg
arpl
inc
test
xor
cmp
adcl
jg
add
aam
inc
outsb
or
and
adc
movsb
adc
or
sbb
inc
cmp
add
add
dec
adc
add
orb
in
xor
add
mov
mov
push
cmpb
or
cwtl
cwtl
push
and
add
xchg
mov
nopl
dec
add
pushf
pushf
pushf
je
andb
scas
adc
and
aaa
add
pop
mov
jne
push
loopne
test
mov
mov
ret
pop
dec
sub
sar
sti
or
mov
dec
jae
pop
adc
sub
pusha
jns
xchg
sbb
dec
lcall
loopne
sbb
gs
and
mov
xor
in
shlb
inc
or
push
cli
and
sbb
push
push
stos
mov
cmpsl
inc
or
mov
movsl
push
mov
outsl
shrl
cmpsl
sbb
mov
adc
mov
inc
push
out
sub
jl
sahf
sarl
or
aas
and
sbb
xchg
xchg
outsb
int3
cmp
add
testb
dec
inc
mov
fcom
and
cmc
push
in
out
xor
push
imul
dec
scas
xchg
dec
sbb
or
fs
dec
xchg
scas
xor
add
add
data16
dec
aaa
and
les
sub
imul
in
minps
or
sbb
mov
lret
dec
mov
insb
add
aas
pop
cmpb
push
push
push
scas
aad
jg
inc
jmp
push
push
call
sbb
inc
and
or
nop
adc
mov
adc
test
mov
jg
cld
sub
sbb
inc
and
les
mov
mov
int3
out
rcrl
xchg
mov
jecxz
xor
aas
xor
inc
imul
mov
inc
call
jo
icebp
xchg
inc
jmp
xchg
jb
push
adc
and
sbb
fsts
sti
mov
push
outsb
jmp
cld
mov
cld
dec
lret
adc
mov
push
addr16
mov
jmp
xorl
mov
in
test
mov
xchg
pop
xchg
sbb
adc
mov
mull
sahf
xchg
xchg
in
mov
push
push
ficoml
xor
adc
add
mov
cmp
rcl
test
add
ror
outsb
pop
cwtl
sub
rorl
adc
push
xor
cmp
mov
push
xchg
bound
insl
mov
lahf
xchg
jecxz
xchg
data16
xchg
cmp
repz
in
dec
xchg
push
push
xchg
arpl
popa
cwtl
and
icebp
or
or
push
push
add
push
or
aas
add
jl
or
xor
in
sbb
das
sarl
das
add
add
add
or
inc
enter
cli
push
pop
mov
adc
pop
xor
lcall
pop
pop
mov
or
jmp
loopne
sub
adc
adc
iret
jmp
pop
mov
add
lret
add
adc
pop
adc
call
cwtl
mov
sub
imul
rorl
pushf
rolb
adc
leave
ss
mov
shl
adc
andl
movsl
lea
outsl
push
push
add
cltd
jb
push
or
push
clc
dec
or
inc
fdivrl
pop
nop
test
jns
jp
mov
mov
enter
cmp
xor
add
cwtl
sub
cwtl
sub
and
cwtl
jge
lret
xor
and
inc
and
icebp
cmp
scas
and
adc
bnd
cmp
movsl
sbbb
inc
xor
into
rclb
pop
push
aaa
movsl
push
xor
sub
ret
or
popa
movsb
push
std
test
clc
or
dec
pusha
nop
lock
and
movsb
mov
push
movswl
cwtl
dec
fdivl
cmp
jne
xor
xchg
pop
mov
mov
je
outsb
out
push
adc
fisttpl
push
shll
cmp
jne
pop
dec
ja
jo
pop
les
xlat
stos
lock
adc
add
pop
inc
or
add
jne
cmp
es
pop
inc
add
push
lods
sub
pop
push
xchg
or
xchg
push
xchg
mov
jmp
mov
or
jle
js
arpl
jge
loopne
and
jbe
incl
and
xorb
jle
loop
fisubl
js
adc
mov
push
mov
out
lea
adc
jmp
push
repnz
push
dec
mov
xchg
add
test
test
xchg
push
shll
pop
sub
mov
mov
sarl
push
push
lds
dec
sbb
add
dec
cmp
mov
push
inc
push
sub
push
dec
push
lods
iret
cmp
inc
pushw
dec
cmp
dec
clc
cmp
movsb
popf
movl
lds
adc
mov
mov
popf
inc
pop
cmp
cmp
mov
mov
rclb
ja
xor
push
inc
cmovo
mov
mov
leave
inc
cmp
sub
sbb
add
cltd
sbb
or
mov
mov
dec
pop
jnp
or
and
push
and
loopne
shlb
pusha
add
inc
push
ljmp
pusha
int
xchg
add
dec
imul
ss
xlat
sub
pop
ficoml
mov
jns
scas
ljmp
test
add
add
lds
push
daa
cmpsl
sbb
inc
outsb
std
push
in
cmp
mov
movsb
inc
and
cmp
fildll
loope
xor
sub
je
clc
je
or
add
dec
push
ja
xor
and
fiadds
pop
cmp
mov
dec
xchg
cmpsw
or
pop
adc
xor
aam
outsb
in
das
push
push
daa
dec
rorl
adc
inc
adc
add
jecxz
idiv
and
lcall
jmp
mov
cmp
imul
pop
cli
adc
sbb
or
scas
sti
in
xor
or
xor
movsl
nop
test
pushf
test
ffree
ud2
imul
addl
mov
rolb
adc
int3
sub
mov
sbb
clc
or
mov
movsb
addl
aad
push
loop
adc
or
test
mov
testb
sbb
cmp
push
stc
sbb
mov
xor
or
jmp
lds
jl
adc
xchg
and
adc
pop
push
pop
push
and
push
sbb
fcoms
fmulp
push
inc
dec
cmovae
in
and
xor
sti
adc
mulb
pop
les
add
xor
mov
or
dec
pop
punpcklbw
xchg
push
and
jmp
sete
push
inc
jo
jge
lds
ljmp
inc
jo
xor
test
flds
inc
roll
js
cmp
push
xchg
inc
push
mov
jge
sbb
xlat
arpl
aas
sub
push
sub
mov
mov
pop
andl
push
mov
sub
pop
aas
jge
jg
test
push
lcall
adc
and
inc
and
daa
sub
repz
mov
fistps
mov
aad
imulb
add
jb
add
cmp
clc
or
sarb
or
push
and
adc
inc
xor
sub
xor
add
adc
inc
lock
enter
ret
cmp
nop
sar
jbe
rcr
addr16
adc
cmp
les
fistpl
cmp
scas
adc
xor
insl
mov
mov
faddl
leave
and
jmp
mov
mov
ja
lret
adc
pop
xchg
stos
adc
xchg
pushf
dec
fldcw
sub
xchg
and
push
xchg
movsb
add
sbb
adc
dec
push
test
xchg
push
adc
inc
jno
sti
test
lea
or
sbb
pop
lods
sub
movsb
mov
dec
mov
shl
cmp
cmp
cli
adc
xor
push
dec
sbb
jmp
sbb
fcoml
sbb
movsb
lret
movsb
inc
call
mov
pop
adc
shrl
in
clc
add
or
add
and
insb
or
lods
les
xchg
dec
aaa
mov
movsb
cmp
out
mov
pop
lods
xlat
in
mov
in
adc
and
cltd
rorb
fcompl
stc
dec
lock
repz
xor
dec
pop
or
pusha
mov
ds
adc
xor
insl
adc
daa
mov
scas
adc
imul
cmp
dec
inc
mov
push
pop
inc
cmp
jo
mov
add
and
adc
sub
lcall
adc
push
inc
sbb
movsl
lret
jmp
cmp
enter
arpl
test
shll
sbb
push
and
or
push
xchg
and
adcl
mov
daa
scas
push
cmp
inc
add
xchg
dec
adc
es
push
or
sbb
or
mov
fsubrs
shl
or
cmp
fs
enter
pusha
outsl
push
add
push
js
push
jo
xorb
mov
cmp
test
adc
push
xchg
mov
sub
lock
add
mov
push
push
ja
jmp
dec
sub
jne
or
dec
jp
or
and
out
xor
sub
pop
dec
sbb
loop
or
or
ret
adc
mov
fwait
inc
dec
inc
test
imul
inc
xorb
sbb
out
rclb
out
add
inc
xchg
shr
sbb
xor
sub
jno
sbb
and
add
repnz
insb
xorb
or
pop
xor
inc
pop
movsb
mov
je
sbb
lea
fsubp
shlb
push
int
je
dec
bound
ret
mov
ds
dec
xchg
dec
xor
inc
sahf
xchg
push
test
mov
dec
xor
sahf
push
pop
pop
dec
push
sub
dec
dec
inc
push
dec
push
mov
adc
push
movsl
inc
xchg
sub
in
mov
adc
adc
pop
add
dec
adc
adcb
push
lock
nop
pop
cltd
pusha
lcall
fimuls
pop
imul
xchg
iret
add
dec
and
xor
pop
inc
mov
adc
incl
or
cmpsb
imul
and
and
or
sub
sub
mov
mov
xchg
icebp
push
incb
lea
push
adc
push
add
movsl
fdivrs
insb
roll
add
jo
dec
jb
je
cmpsb
and
popa
incl
rcll
push
inc
jne
dec
shll
or
adc
adc
xor
sbb
push
loope
imul
inc
push
sbb
scas
std
xchg
add
push
pop
push
dec
push
jmp
mov
mov
push
xchg
add
mov
repz
inc
popf
aam
mov
and
cmp
jmp
mov
cwtl
ret
add
repnz
and
lcall
add
test
jne
or
inc
ret
xor
mov
popf
xchg
rcrb
das
sbb
lret
xlat
xor
xor
sbb
push
cmpl
jne
into
pop
or
pop
imulb
std
es
and
pop
push
adc
jno
shlb
aaa
lods
push
mov
mov
xchg
les
aam
pop
loop
push
mov
notl
ret
hlt
aam
pop
sbb
mov
pusha
fsts
sbb
test
xchg
inc
push
fmull
loop
gs
into
jbe
ljmp
call
rclb
pop
stc
or
pusha
and
test
scas
or
sub
push
add
sub
adc
mov
jp
in
lock
aam
mov
fmull
addr16
repz
sarl
sbb
push
scas
ss
lock
inc
dec
out
mov
mov
xor
imul
and
loope
xor
shrb
lock
jne
xchg
out
push
mov
pop
jne
push
or
stc
mulb
sub
add
scas
mov
push
jo
add
and
dec
js
mov
jne
int3
fnstcw
nop
pop
mov
nop
sub
or
sub
inc
jmp
push
push
mov
and
mov
cmp
add
add
notl
and
sub
pushf
int
int3
ret
ffreep
mov
cmpb
xor
sbb
cmp
fildl
rcrl
xor
fwait
push
rclb
aad
adc
mov
inc
push
inc
pop
dec
shrb
or
ss
mov
or
inc
rorl
inc
inc
pop
mov
push
mov
and
js
sbb
cmc
repz
add
mov
ds
or
dec
sti
jbe
cmp
push
push
sub
push
push
imul
sub
mov
fcmovnb
imul
mov
adc
add
xor
decl
sbb
rcrb
push
and
pop
sbb
lea
mov
cmp
and
enter
test
stos
test
xor
and
pop
cmp
shl
xor
xor
cmp
xchg
xor
pop
dec
mov
adc
fildl
jnp
add
sub
adc
mov
outsb
mov
mov
lret
dec
js
sti
mov
wrmsr
ds
shr
ret
rclb
xor
mov
jle,pn
push
or
js
out
mulb
nop
sti
sub
and
mov
lret
dec
adc
cmc
dec
inc
daa
imul
mov
dec
add
ret
int
xor
xor
add
add
mov
adc
js
sub
adc
rcll
pop
sbb
mov
sahf
ret
sbb
inc
and
cmovb
push
js
adc
adc
rcr
push
adc
inc
stc
mov
sti
pop
sbb
and
push
jno
push
push
lock
adc
ret
sub
push
or
arpl
push
js
mov
fistl
mov
dec
push
test
sub
insb
adc
dec
jbe
js
pop
push
lds
mov
imul
mov
andb
mov
and
sbb
adc
aam
mov
mov
icebp
pushl
mov
sub
pop
push
push
xchg
mov
or
jge
or
ret
bound
adc
dec
dec
xor
outsb
mov
push
push
push
cmp
dec
lock
test
push
xor
pop
and
mov
and
cmpb
jg
inc
pop
pop
add
decl
pop
xor
aad
je
add
fiaddl
push
sbb
push
push
inc
push
adc
outsl
inc
jp
fucomi
ret
sbb
adcl
stc
clc
out
inc
repz
and
sbb
mov
sub
inc
scas
movsl
cld
mov
pushf
fiadds
rorb
cwtl
cmp
mov
sbb
or
jmp
xchg
addb
jmp
scas
and
inc
pop
mov
sbb
adc
add
nop
and
mov
sbb
push
jecxz
add
cmpsl
inc
ffree
push
inc
push
xchg
cmpsb
push
and
sub
iret
jp
mov
and
and
xor
mov
pop
add
loope
jnp
mov
and
mov
sub
ficoml
mov
mov
fdivrl
xchg
lea
and
mov
add
ret
xchg
xchg
add
fildl
add
pop
aam
adc
out
movsl
test
mov
adc
xchg
sbb
or
lea
mov
or
outsl
add
movl
jo
push
sbb
nop
fidivl
mov
rorb
pusha
sub
adc
addr16
lea
push
ret
out
jo
test
and
popf
or
jo
es
cs
jo
shlb
adc
pop
dec
add
rclb
jge
push
rolb
xor
sub
jne
jl
mov
ss
je
push
das
in
push
or
inc
and
and
mov
xchg
mov
sahf
and
jo
les
inc
sub
out
sub
test
ret
pop
loopne
loope
xor
test
cmp
pop
xchg
push
andb
icebp
out
add
data16
adc
and
add
mov
adc
dec
xor
rol
or
inc
or
in
mov
xor
push
mov
xor
imul
add
and
jo
adc
sub
das
mov
cmp
repz
mov
push
and
je
jmp
les
andb
insl
je
js
xchg
push
into
sub
dec
push
mov
push
jmp
xchg
mov
xor
jns
dec
loop
xchg
xor
add
aam
ret
or
xor
mov
xchg
mov
push
inc
fsubs
imul
pusha
adc
and
mov
jbe
repnz
in
pop
ret
mov
jb
repnz
inc
test
xor
rolb
inc
inc
dec
icebp
scas
loope
lods
ss
inc
addr16
xchg
in
sub
sahf
ja
push
stc
and
mov
cmp
inc
add
sbb
adc
xchg
in
push
in
cmp
fcmovne
dec
or
xor
push
pop
iret
sbb
roll
mov
jmp
sub
xlat
xchg
insl
stos
pop
dec
stos
insl
enter
daa
push
push
aam
sar
into
xchg
or
push
lret
mov
mov
sub
insb
insl
jae
enter
sbb
xchg
popa
pusha
insl
push
push
add
lcall
faddl
jo
divl
adc
and
xchg
or
add
fmul
leave
mov
add
lock
cmpb
jo
in
push
push
cmp
cmpsb
inc
sbb
push
lock
push
cli
sbb
call
jle
xlat
cmp
xchg
ja
sub
int3
push
nop
inc
addl
arpl
jmp
push
inc
test
das
iret
sub
sti
xchg
and
int3
adc
push
lock
jne
xor
ds
ret
fsubrs
add
nop
fnstenv
cs
sbb
hlt
push
out
mov
stos
scas
sbb
js
cmp
pop
mov
mov
sub
lahf
ficomps
cwtl
outsb
sbb
adc
cmp
sbb
mov
addb
or
sub
pop
int3
add
mov
mov
jne
jne
mov
jge
add
aam
push
add
arpl
sbb
arpl
mov
jmp
test
xor
push
mov
mov
and
inc
and
sub
lock
cmp
add
xchg
mov
and
adc
dec
jae
sbb
adc
adc
xor
jae
pop
sahf
mov
push
jmp
inc
xor
fnstcw
aaa
in
inc
ja
push
imul
push
jecxz
pop
inc
pusha
push
pop
push
inc
sub
or
cmp
or
fwait
jmp
inc
push
pop
outsl
daa
movsl
mov
inc
and
push
pop
xchg
jbe
movb
push
sbb
mov
push
es
int3
xor
scas
bound
mov
mov
sbb
shlb
in
push
je
test
rolb
fisttpl
xchg
test
push
mov
xchg
inc
adc
pop
lods
inc
fimull
cmpl
xchg
cmp
adc
or
mov
adc
lods
loope
xchg
adc
xchg
fidivs
mov
jmp
inc
mov
in
mov
mov
sub
mov
icebp
ret
fidivrs
sub
mov
lret
push
popa
add
mov
gs
xchg
je
cmpsb
test
and
lods
fisttpll
and
jbe
and
pop
dec
ja
ficoms
mov
daa
sbb
shlb
adc
pop
lcall
outsb
add
add
dec
std
xlat
push
cli
pop
lahf
movzbl
mov
xor
sub
push
mov
mov
out
push
shrb
ljmp
add
sbb
cmp
adc
sbb
add
sti
in
xchg
pop
jge
inc
and
push
push
push
and
xor
sti
test
add
addb
or
cltd
test
add
out
loopne
push
xchg
lcall
sbb
sarl
lods
cmc
sub
or
or
xor
xor
push
or
push
sub
pop
sub
and
inc
dec
or
mov
and
insb
rcrl
pop
xor
in
cmpsb
sbb
mov
dec
sbb
subb
adc
push
adc
xor
add
es
sub
bnd
push
inc
add
xorb
and
bound
stos
mov
pop
into
fcoml
jno
adc
sub
les
outsb
lods
and
mov
sub
sarb
push
push
mov
add
sbb
xchg
cmp
aaa
push
mov
or
xchg
test
inc
add
push
ljmp
jae
rcl
push
push
push
or
lock
icebp
push
and
mov
mov
enter
push
mov
test
scas
in
mov
sti
or
ret
fdivs
or
push
add
pop
mov
pop
lock
pop
mov
inc
jl
mov
imul
add
mov
add
push
push
push
or
outsl
divl
mov
inc
push
inc
imul
aad
loope
icebp
movsb
dec
rcll
mov
mov
scas
cmp
dec
mov
cltd
add
sub
mov
nop
xor
inc
addl
sbb
shrl
repz
lret
inc
sub
mov
sub
dec
jnp
subb
nop
sbb
jbe
cld
jns
pop
ret
push
sub
inc
or
mov
sbb
push
roll
inc
pop
xchg
and
sub
sahf
xchg
ud1
pop
mov
movb
mov
jmp
dec
or
or
jno
inc
sbb
movsl
mov
cld
cmp
jae
cmp
cmp
mov
fnsave
and
sub
add
orb
repnz
and
add
and
add
add
ss
loopne
add
push
addr16
mov
je
jmp
xchg
and
decl
movsb
adc
mov
and
lds
das
sbb
push
adc
dec
add
cmpsl
push
scas
push
sub
inc
shll
jg
insl
jle
fldl
pop
xor
push
or
inc
or
add
xor
je
add
in
mov
add
or
jg
cwtl
decl
jp
out
cmp
aad
lea
sub
fs
jbe
loope
adc
in
test
std
push
mov
add
cmp
loop
jo
fists
repnz
inc
pop
outsl
nop
sbb
and
jno
sub
clc
xor
fldl
jge
cmp
imul
dec
push
xchg
aad
mov
loope
scas
mov
cmp
je
jle
push
mov
push
inc
mov
push
bnd
fdivl
pop
or
inc
dec
add
lea
inc
cmp
adc
bound
loope
mov
add
add
sub
mov
xchg
xchg
push
xor
cmp
call
outsl
int3
jb
fadds
fnsave
or
call
xchg
add
sti
push
push
pop
mov
sbb
push
mov
int3
jge
or
or
mov
add
or
dec
loope
mov
iret
dec
aas
adc
add
xor
nop
aad
or
mov
or
lea
pop
roll
movsb
cs
je
xorb
pop
dec
rolb
mov
stos
mov
cmpsb
or
stc
int
sbb
fisubl
popa
mov
or
shlb
and
fsubrs
sbb
push
pop
lock
lock
sub
test
xchg
fwait
andb
jb
cmp
mov
add
sbb
push
xchg
pop
ds
xor
fdivs
inc
sub
xor
adc
xor
cli
movl
cli
sbb
popa
sbb
inc
repz
shr
mov
lock
xor
inc
jl
clc
xchg
add
and
lock
and
or
pop
add
adc
and
xchg
jno
mov
gs
push
outsw
imulb
call
fwait
cwtl
mov
fmulp
fwait
jne
mov
sbb
pusha
dec
or
movsl
push
rolb
adc
push
dec
movsb
inc
seto
mov
int
cs
cmc
pop
xchg
ljmp
xchg
shrl
sarb
sub
xor
scas
inc
jp
inc
sub
sbb
outsl
mov
mov
adc
ljmp
int
mov
hlt
insb
ljmp
dec
loopne
sub
inc
mov
xor
mov
aam
daa
push
std
pusha
sub
loopne
xchg
f2xm1
cmp
ret
xor
mov
daa
das
in
cwtl
dec
sbb
in
test
pop
and
sub
push
inc
push
fchs
outsb
mov
inc
arpl
sub
outsb
cmp
xchg
inc
mov
inc
jb
inc
sqrtps
mov
xor
jge
dec
js
std
sbbl
inc
add
or
addl
test
movb
mov
pusha
mov
rcl
movl
push
sbb
adc
in
sub
xor
cmp
add
ret
rol
sahf
stc
sub
sti
push
bound
aas
je
jnp
adc
pop
flds
sbb
hlt
adc
jae
hlt
je
outsb
xchg
jo
pop
nop
adc
dec
or
push
cwtl
push
lods
pop
xor
js
push
ljmp
adc
mov
and
xchg
jmp
std
xor
jp
inc
es
sub
cmp
repnz
pusha
mov
pusha
sub
inc
pop
ret
rcll
es
jmp
sbb
aas
fstpt
mov
push
push
in
mov
ud0
decl
stos
andb
pop
dec
in
mov
adc
sub
jne
cmpsl
fmulp
fcoms
mov
xchg
add
mov
or
mov
pushf
xor
inc
jo
adc
shlb
popa
push
fs
jp
or
inc
test
enter
jo
mov
cmpsl
xchg
sub
mov
mov
cmp
inc
mov
sbb
das
push
mov
lods
mov
push
push
dec
testb
inc
xor
cmp
mov
or
testl
push
mov
mov
cltd
cmp
add
lock
gs
inc
mov
push
mov
xor
dec
test
subb
mov
sbb
lock
and
push
icebp
mov
or
fimuls
shrl
in
dec
pop
or
ss
and
subl
push
ret
dec
add
mov
inc
cmp
add
outsb
icebp
shl
nop
out
adc
pop
ret
adc
cmp
adc
jnp
lea
adc
repnz
mov
pop
clc
fsubp
and
and
mov
jmp
xchg
and
gs
pop
add
lods
cmp
outsl
ljmp
jne
test
aas
mov
je
std
sahf
add
mov
jno
loop
loopne
inc
dec
mov
test
xchg
xor
push
lret
xchg
fistl
adc
inc
sbb
sub
loopne
ja
jae
xor
mov
pop
inc
stos
sub
add
cmp
es
pop
sbb
jae
in
push
sbbb
adc
fs
sub
sbb
inc
dec
sub
daa
xchg
cmpsb
add
mov
inc
dec
cmp
push
out
lock
or
jb
adc
clc
lret
fdivl
jne
mov
in
subb
or
je
jbe,pn
jne
outsb
out
ficoms
lods
mov
leave
mov
int3
jae
cmp
add
test
cmpb
xchg
mov
movl
and
push
pushf
movsl
pop
push
mov
aad
stc
movsl
adc
mov
jg
lea
push
add
dec
sub
sarb
fsub
sahf
sbb
mov
jl
test
mov
popa
jo
lret
and
mov
or
fiadds
lock
and
xchg
push
in
fcmovbe
and
out
push
sub
lret
inc
or
fdivrl
jmp
sbb
jne
fldt
push
jo
mov
xor
popa
pop
sti
xor
adc
xor
outsb
mov
enter
aas
mov
push
pop
test
add
in
inc
push
outsl
adcl
add
aad
push
push
jle
push
mov
adc
push
lret
add
addb
mov
leave
xor
sbb
lds
jne
pop
sub
sbb
mov
cmp
cld
push
inc
fimuls
sub
xchg
pop
or
push
in
js
xor
int3
iret
adc
xchg
jbe
shll
adc
mov
push
push
sbb
pop
jne
ds
pop
cmp
add
popa
movl
push
lea
dec
js
push
rcrb
or
inc
in
cmp
push
cli
je
mov
dec
jo
add
or
mov
cmp
dec
cmp
cmp
inc
cmp
ret
mov
ljmp
ds
lret
xor
sbb
inc
in
xor
lds
test
or
in
jmp
pop
xchg
movsl
ljmp
sub
aas
loop
sti
call
adc
out
pop
xor
push
xchg
leave
ret
jb
jl
or
cmp
pop
inc
dec
data16
orb
stc
imul
cli
into
cmc
lds
jae
mov
sarb
add
mov
mov
mov
add
test
xchg
push
lcall
mov
std
out
sbb
cmc
add
dec
lahf
imul
push
imul
xor
sbb
add
and
lds
pop
das
and
add
jmp
xchg
mov
jnp
fadds
pop
ja
cmp
insb
mov
adc
mov
dec
popa
jbe
lock
push
jecxz
and
or
jmp
fsubrs
hlt
push
xlat
js
icebp
jne
mov
add
insb
xor
xlat
shlb
push
xor
mov
add
js
rcrb
stos
xchg
rorb
push
sub
sub
lods
lret
xor
and
lods
add
push
dec
lds
pop
hlt
jle
sub
adc
push
and
add
lods
adc
mov
mov
mov
fdivl
mov
xor
add
mov
push
dec
inc
jg
cmpl
jl
prefetchnta
pop
mov
enter
inc
xor
push
xor
pop
cmp
mov
add
xor
or
inc
cmp
cmp
inc
pop
cmp
in
sbb
std
sub
xor
xchg
sub
xchg
adc
nop
ljmp
fmull
ffreep
adc
and
push
daa
out
pop
add
mov
mov
xor
mov
repnz
add
pusha
aad
mov
popl
aaa
jl
jne
add
sub
xchg
push
sub
pop
pop
or
in
lahf
aaa
jne
cmp
sbb
or
popf
push
and
pop
adc
sub
in
bound
loop
test
bound
xchg
insb
mov
sarb
add
or
adc
xor
sub
sub
lahf
fs
mov
rcrl
imul
pop
push
add
fs
push
push
push
lea
push
sbb
cmp
test
sarb
or
iret
sbb
mov
or
push
lods
test
and
or
or
stos
xor
enter
sbb
mov
jbe
xor
jg
sub
cmpsl
sbb
loop
xor
mov
test
sbb
call
cltd
sbb
sub
popf
hlt
in
mov
pop
loope
mov
push
cmp
scas
cmp
into
and
mov
testb
push
sbb
inc
daa
cmp
sarl
mov
in
lret
rcl
data16
mov
jl
or
lea
jnp
jo
dec
push
in
xchg
in
push
push
pop
pop
adcl
aaa
add
popa
pop
ss
daa
imul
mov
sub
sub
stos
pusha
mov
sub
loope
rcr
incl
sbb
dec
dec
push
mov
orl
dec
outsl
test
outsl
sbb
outsb
jl
negb
inc
mov
or
aad
sbb
xlat
add
movl
mov
mov
call
ficomps
mov
rol
stc
enter
and
repnz
or
and
fidivrs
clc
cmp
push
cmp
add
mov
pop
inc
mov
cmp
lea
xor
jmp
fimuls
not
cld
pop
and
addl
rcr
ret
and
ja
adc
pop
jo
test
and
jle
cmp
pop
push
inc
sub
jmp
mov
cmp
pop
incl
rcl
cmpsl
pop
xor
sbb
and
repnz
dec
xor
aaa
lcall
push
jne
dec
mov
and
mov
fsqrt
dec
sub
sbb
ds
fs
hlt
jnp
push
ret
xor
cli
imulb
cmc
sub
inc
pop
adcl
aas
push
adc
pop
lret
mov
fs
in
repnz
adc
xor
or
and
or
addb
fsubrs
adc
inc
push
push
adc
add
repnz
imul
jb
loop
sbb
push
sti
fsubs
pop
jae
and
dec
ja
mov
jns
lret
inc
push
inc
push
jnp
push
jmp
jp
dec
cs
imul
push
mov
pop
je
or
ss
je
inc
mov
sub
outsl
lods
xchg
aad
orl
cmpb
push
add
jp
aam
pop
loopne
xchg
xor
xorb
lret
ret
in
add
add
fiadds
sbb
popa
mov
mov
pop
jo
mov
jne
mov
sub
in
dec
loope
jge
mov
mov
jg
xor
inc
xchg
cmpb
test
cmpsb
and
jl
inc
adc
push
xor
add
rorb
aas
dec
jne
pop
movb
scas
fistl
js
dec
add
sub
xchg
dec
int3
xor
mov
aad
mov
pop
push
push
push
inc
in
fdivs
push
jbe
fiadds
add
idivl
shrl
inc
loop
negb
add
fs
out
sbb
and
out
jmp
fimuls
cmp
cli
add
jle
pop
lahf
add
insb
inc
push
js
sub
sbb
pop
enter
shrb
pop
add
mov
mov
cld
xor
adc
push
add
adc
ficoms
cmp
push
orl
push
cltd
sbb
cmp
jae
inc
es
bound
test
push
and
enter
cmp
sahf
sbb
enter
addl
push
jl
cs
jb
mov
add
aam
ljmp
xor
xlat
add
les
sub
push
mov
shlb
out
inc
add
push
cs
mov
data16
rolb
movb
in
mov
sbb
jg
add
sbb
pop
add
js
jp
add
sub
int3
dec
inc
adc
xchg
xor
and
add
loopne
add
shr
or
jge
mov
pop
xor
negb
mov
cmp
cli
jae
lock
orl
adc
fiaddl
add
in
insl
ret
add
loop
rcrl
adc
inc
inc
add
outsb
mov
out
push
push
mov
push
push
rcrl
lcall
mov
mov
and
xor
inc
sub
sub
inc
ja
mov
shrb
mov
or
pop
adc
pushf
test
jge
fidivrl
lods
flds
sbb
mov
cmpsb
arpl
or
pop
pusha
add
dec
lods
add
fwait
adc
mov
xchg
or
dec
mov
jne
and
dec
fidivs
addb
add
inc
fiaddl
pop
xor
push
out
or
xor
add
call
decb
dec
jo
add
mov
sub
cwtl
pop
mov
add
fcomps
jnp
add
sbb
push
inc
gs
mov
in
popa
sbb
add
adc
lret
sub
testb
add
xor
adc
dec
cmp
sub
sbb
inc
adcl
mov
mov
add
jne
mov
loopne
stos
inc
clc
enter
xor
add
mov
inc
dec
cmpsl
inc
das
mov
leave
mov
stc
push
andb
je
cltd
nop
addl
and
cld
lds
pop
and
push
push
or
inc
add
mov
adc
add
adc
xchg
push
cli
inc
xorl
push
sarl
mov
or
or
inc
sbb
xchg
push
cmp
and
popf
imul
cmp
outsl
push
addl
pop
cmpsb
jp
jno
cmpsb
roll
jbe
jo
mov
xchg
dec
push
movsb
enter
inc
jae
shll
test
dec
icebp
loope
push
jae
pop
inc
xor
or
jl
xchg
out
inc
mov
sub
roll
js
pop
add
out
adc
out
add
inc
js
cmp
inc
cmp
or
xchg
mov
jmp
mov
rep
sarb
xchg
or
loope
sub
adc
mov
hlt
mov
repz
pop
in
enter
jmp
ret
push
mov
mov
ds
xorl
push
jl
outsb
add
add
popa
inc
sbb
stos
cmpb
mov
adc
xor
inc
push
xchg
adc
lret
je
call
fnstcw
inc
sbb
leave
aaa
or
rolb
sub
pushf
fnsave
adc
sub
popa
add
jae
xlat
aaa
sub
jmp
or
jmp
sub
jo
jae
jae
jmp
inc
jmp
inc
jmp
inc
jmp
jae
jae
inc
jmp
xor
dec
aaa
jmp
or
add
jmp
xchg
xchg
sub
mov
cmp
add
push
ja,pn
shlb
mov
fadds
pop
cmp
dec
add
or
mov
push
sbb
adc
mov
dec
sub
jne
imul
mov
adc
cmp
push
xor
mov
push
sahf
add
xor
mov
mov
mov
popa
jnp
aad
or
jne
mov
jbe
adcl
test
call
bound
add
test
jmp
push
push
push
and
jo
addb
cmc
aas
aam
fdiv
xchg
mov
jns
add
push
loop
xchg
test
call
lods
outsb
jo
xchg
xchg
inc
call
sbb
add
push
add
dec
stos
ja
pop
cmp
mov
movsb
or
adc
mov
pop
cmpsl
cli
and
imul
das
rcrb
ja
pop
rcll
and
into
lea
dec
fisttpl
je
pop
jne
and
dec
add
fadd
and
fcomps
push
fs
cmp
enter
pop
aam
adc
loope
mov
shll
pusha
cmp
imul
cmp
test
push
shll
pop
lods
jno
jnp
cwtl
mov
add
cmp
xchg
in
lea
lock
lcall
mov
jmp
mov
mov
cmc
push
stos
cs
adc
or
cmp
add
add
out
xor
iret
or
and
and
add
test
adc
and
sbb
leave
int3
mov
call
adc
xorl
jae
mov
jge
jne
imul
dec
jo
sub
stos
fists
movsb
sbb
dec
pop
and
cli
sub
fdivp
adc
push
xchg
adc
add
or
sub
jle
mov
inc
xor
pop
jbe
inc
cmp
dec
adc
fstl
inc
add
jg
push
sub
jge
dec
jle
push
sub
loopne
mov
push
push
mov
jecxz
fistl
push
add
inc
cwtl
sub
fcom
addr16
fld
je
adc
inc
call
pop
leave
pushf
pop
shlb
in
mov
dec
wbinvd
push
clc
lds
inc
fmul
add
imul
mov
test
mov
sub
dec
dec
dec
add
jnp
pop
lods
and
cmp
add
cmp
clc
xchg
sarb
cmp
test
sbb
xorl
mov
dec
pop
pop
enter
jmp
adc
insl
add
pop
call
in
loopne
or
sub
daa
outsl
add
cmp
pop
add
push
inc
push
lcall
xor
cmp
jne
leave
stc
push
adc
cltd
cmp
mov
sub
test
ret
iret
leave
inc
sbb
aaa
jo
jo
hlt
ret
rolb
adc
mov
lahf
cmpsb
mov
mov
in
js
push
mov
stos
mov
je
mov
mov
add
xorl
ret
xor
push
push
mov
jge
les
nop
sub
xchg
add
and
pop
fcoms
or
popa
inc
add
shrb
inc
sub
or
cmp
je
dec
cmp
cltd
into
jp
testl
ds
ljmp
or
add
xlat
lret
fs
cli
push
push
movb
push
iret
aaa
push
repnz
adc
cmp
out
jno
shll
cmc
push
inc
out
push
push
sub
daa
out
lea
mov
jecxz
dec
xor
inc
adc
mov
add
xor
mov
adc
jge
clc
in
and
push
lea
jne
hlt
mov
push
add
lea
or
push
cmpsl
xor
rcrb
mov
aaa
cmp
inc
push
pop
mov
jmp
jl
inc
jne
xchg
cmpb
lock
xchg
test
subl
cmp
sbb
addb
jne
pop
inc
add
push
cmp
push
xlat
xchg
mov
aaa
rorb
flds
dec
add
rclb
ss
outsl
push
sbbb
mov
push
cmpsl
inc
push
mov
add
movb
gs
ljmp
dec
stos
xchg
std
mov
roll
mov
dec
mov
push
in
in
sub
mov
jno
mov
add
in
cmpsb
and
lret
inc
test
xchg
clc
xchg
or
adc
or
fnstenv
inc
lods
lret
mov
pusha
mov
adc
sub
xor
cmp
add
xchg
jge
and
jae
cmp
dec
xor
inc
fcoms
stc
sbb
xlat
add
xor
inc
pushf
dec
cmp
adc
lods
in
fdivr
push
jo
push
and
add
sti
nop
mov
adc
sbb
push
sub
aam
push
jmp
or
xor
je
push
daa
inc
pop
daa
mov
inc
aam
push
lods
je
or
pop
mov
es
cmc
mov
and
repz
mov
pop
hlt
inc
add
and
dec
aad
movsb
cmp
scas
mov
push
dec
arpl
test
movsl
adc
mov
cwtl
jno
inc
and
or
inc
cwtl
adc
or
dec
int
sub
xorb
pmullw
daa
pushf
push
js
push
test
push
pushf
mov
aad
outsl
incb
push
jp
je
rorb
cmp
cmp
nop
xor
pop
repnz
ja
inc
add
stos
jg
into
jmp
orl
or
sbb
add
int
adc
jmp
ds
jl
pop
fmull
inc
repnz
push
js
dec
push
fbld
add
loop
ret
mov
lds
cmpsl
mov
fidivl
lock
push
jne
dec
rorb
pop
hlt
add
jg
pop
lcall
pop
jo
mov
sbb
pop
test
cmp
sub
test
xor
bound
fmull
push
mov
pushf
cwtl
fadds
js
inc
cltd
and
adc
sbbl
push
lods
xor
pusha
mov
xorl
popf
sub
xor
xchg
inc
pop
lea
ljmp
add
adc
push
or
out
push
or
stc
add
clc
add
jmp
jnp
sbb
mov
test
insb
mov
insb
mov
lods
cmp
aaa
cmp
lods
jae
mov
mov
aaa
push
ljmp
movsl
rorb
mov
or
lret
imul
push
inc
pop
test
add
push
pusha
push
mov
inc
xchg
and
sub
cld
cmp
lcall
mov
inc
push
call
push
out
push
add
xchg
faddl
pop
and
out
loope
push
cmp
leave
add
dec
cmp
pop
mov
cmpl
xor
mov
and
out
adc
or
dec
popa
rcl
and
add
pop
shlb
imul
stc
jbe
add
inc
les
mov
in
faddl
and
sbb
cmp
mov
das
rol
pop
xchg
clc
or
ljmp
sub
int
mov
dec
mov
push
push
movsb
sub
mov
mov
insl
pusha
rcrl
add
push
je
jnp
add
test
push
mov
mov
stos
or
stos
insb
jge
push
popa
movsb
je
insl
push
into
iret
icebp
lahf
inc
push
divl
leave
sub
cmp
and
mov
mov
aam
or
mov
mov
loopne
stos
push
sahf
add
sub
xor
push
movsb
sbb
add
dec
js
add
rcrl
adc
mov
and
dec
data16
and
push
rcll
mov
dec
out
add
and
inc
pop
sbb
xlat
xor
or
or
fdivrs
sbb
dec
adc
adc
movb
insb
sub
inc
js
or
push
mov
test
lock
enter
inc
shrl
movsb
mov
add
cmp
add
sbb
xor
jne
icebp
mov
sbb
and
push
pusha
lret
push
into
ret
test
enter
add
movb
loopne
or
pushf
mov
xor
sub
lock
cld
inc
std
push
pop
incl
mov
insb
or
push
into
popa
jp
pop
pop
xor
sbb
cwtl
or
pop
push
add
js
xchg
mov
or
dec
cmp
rorb
inc
cmp
ss
mov
add
movsl
adc
loop
test
fnstcw
loopw
mov
lcall
sbb
add
pop
push
or
nop
test
jns
fsubs
cmp
je
push
insb
or
mov
ret
mov
mov
stc
jne
inc
jecxz
push
and
mov
adc
adc
push
mov
cmc
add
push
je
add
gs
or
stc
sbb
sbb
inc
mov
repz
pop
icebp
sub
cmp
jge
or
faddl
adc
test
cmp
xchg
push
push
mov
ja
pop
pop
and
cmpsl
or
dec
push
cmc
or
pusha
mov
and
mov
dec
sbb
sbb
push
xchg
fdiv
setnp
and
arpl
mov
in
nop
outsb
mov
inc
icebp
sbb
dec
daa
and
insb
and
mov
mov
and
sub
and
testl
mov
sbb
lcall
push
xor
cs
leave
add
sub
jb
sbb
movsl
sub
movsb
ret
mov
add
jne
pop
out
sahf
roll
mov
and
sub
push
rcrl
pushf
idivb
mov
in
push
int
push
xor
add
xor
add
add
add
ss
insl
push
sbb
arpl
lods
or
data16
jns
out
roll
fcomps
add
adc
cmp
inc
inc
dec
sub
xor
shl
cmp
push
add
cltd
lahf
cmp
add
or
out
outsl
repz
and
push
hlt
rcll
xchg
imul
push
inc
icebp
pop
cli
sti
mov
jp
idivb
mov
xor
or
fcmovbe
loopne
push
or
fisubs
fadds
lret
iret
repz
ljmp
ror
in
add
add
fidivl
add
add
push
or
out
or
movsb
rol
push
push
adc
and
cmc
or
adc
inc
cmp
push
and
push
inc
or
cmpsl
adcb
and
dec
add
lods
icebp
mov
stos
js
xchg
aaa
push
push
push
or
dec
pop
data16
cltd
fisttpll
hlt
adc
push
call
xor
sti
dec
mov
pop
xor
dec
xchg
test
sub
in
add
or
mov
push
lea
pop
test
mov
mov
cmpsl
xchg
pop
mov
repnz
stos
sub
shlb
cs
sub
sbb
leave
test
in
sub
gs
hlt
outsb
insl
xor
or
mov
ds
sub
mov
sub
adc
ret
xchg
rcr
mov
lret
hlt
aam
pop
daa
xor
inc
inc
loope
sub
test
mov
add
jge
push
jle
lcall
add
push
cli
or
mov
jmp
sub
adc
xor
dec
push
cmp
add
sub
xchg
mov
and
mov
adc
mov
dec
and
add
push
and
or
cmp
mov
inc
add
jne
jae
test
pop
sub
sub
mov
arpl
adc
je
sbb
pop
rol
mov
cmpl
int3
addr16
push
rolb
loopne
cmpl
test
jecxz
dec
sub
xchg
add
dec
sbb
push
adcl
pop
imul
mov
or
add
pop
dec
in
xorl
into
subl
andb
and
stos
ljmp
popa
inc
or
ds
imul
pushf
add
xchg
add
fldcw
mov
xchg
lea
add
push
xchg
cmp
shrl
xor
sub
cmpsl
pushf
aaa
add
xor
adcl
icebp
or
cmp
stos
sub
push
addr16
mov
xchg
ret
adc
inc
test
pop
push
test
pop
adc
adc
setb
and
mov
add
mov
and
or
call
fcomps
je
sahf
dec
or
pop
sbb
sub
or
dec
cmp
imul
or
fisttpl
sbb
test
xor
xchg
xchg
rol
pusha
bound
andb
dec
jne
push
pop
add
add
movsl
loope
pusha
sbb
fbstp
and
add
fists
push
jg
loope
jae
push
inc
add
out
and
push
push
jnp
or
lods
adc
jl
orb
and
movsl
or
inc
dec
or
mov
adc
popa
lea
loop
add
or
mov
nop
mov
not
or
jnp
clc
ss
movsl
push
sti
pop
pop
and
stos
dec
pop
adc
scas
cmpsb
nop
cs
dec
dec
mov
cmpl
add
mov
clc
dec
mov
cltd
mov
add
js
mov
int
inc
cmp
js
hlt
pusha
add
adc
inc
mov
mov
push
mov
pop
add
es
pop
cs
push
notb
nop
or
sub
sub
rclb
push
add
or
je
mov
add
mov
fs
jle
dec
push
add
push
inc
add
sub
ja
sbb
jns
add
call
sub
or
pop
into
pop
imul
pop
fdivrl
and
xchg
call
and
add
popf
add
push
push
and
imul
push
subb
xchg
xchg
adcb
sahf
or
xor
enter
sub
mov
jno
out
fcmovb
cmp
add
push
sbb
pop
push
subb
mov
cmpsl
inc
sahf
sub
xor
cmpsb
xor
mov
imul
dec
pop
mov
push
leave
prefetcht1
subl
pop
inc
jae
add
cltd
inc
lock
xchg
jo
xchg
xor
cmp
ret
xor
dec
xor
nop
ss
push
testl
push
pop
cmp
sub
ret
dec
dec
pop
add
add
add
aaa
repnz
js
in
xor
inc
jle
mov
push
dec
xor
sub
push
inc
mov
mov
clc
test
inc
je
in
xchg
push
push
push
xor
sub
mov
push
mov
mov
pusha
pop
and
int3
adc
sub
xchg
icebp
inc
shrb
repnz
adc
adc
pop
xchg
push
add
sub
rcl
lret
dec
add
das
adc
cs
inc
enter
xor
std
add
push
jo,pt
out
push
sub
les
push
jecxz
push
dec
test
cltd
sarb
push
jns
insb
mov
outsb
or
nop
push
xlat
xor
add
in
loope
mov
adc
pusha
mov
sub
dec
sbb
push
push
pop
push
jb
sub
ret
jp
jae
and
add
adcb
dec
xchg
xchg
orl
aad
and
and
addb
mov
mov
mov
and
in
push
push
or
inc
add
or
in
inc
mov
dec
sbb
sub
jb
dec
jle
or
scas
enter
mov
jae
clc
cmpl
imul
adc
jb
sbb
xor
pop
pop
jae
adc
ret
pop
ds
push
jg
out
test
jo
push
ja
xor
sub
adc
pop
ds
xor
mov
adc
mov
sbb
add
lds
push
push
dec
pop
push
add
pop
lds
sarb
sbb
dec
pop
pop
and
mov
xor
imul
push
in
insb
adc
push
icebp
adc
sti
jmp
subb
aad
jne
and
fs
push
xlat
in
mov
rorb
lock
push
aaa
pop
jmp
hlt
xchg
jp
bound
js
jge
jmp
xchg
push
addl
adc
mov
mov
dec
adc
push
and
sub
add
xchg
add
xor
xor
adc
lock
mov
lret
enter
push
and
rclb
mov
add
and
xor
aam
pop
or
and
sahf
jno
cmp
pushf
xchg
outsl
dec
pop
fildl
adc
push
inc
std
sbb
dec
or
fwait
sub
ja
sub
arpl
repz
mov
or
inc
insl
adc
xchg
cs
out
or
andb
sub
jo
adc
sbbl
repnz
cmp
sbb
les
mov
jae
je
or
fcomps
and
and
bound
lret
bound
in
ret
push
mov
scas
aam
or
out
roll
mov
stos
xor
and
mov
cmpsl
rorb
xor
pop
ja
rolb
adc
xchg
cmp
nop
and
andb
js
dec
orb
or
orl
dec
addr16
and
adc
test
xchg
inc
ja
insb
pop
sbb
imul
sbb
add
sub
mov
outsl
sbb
and
cmpsb
xchg
dec
test
or
rcll
insl
mov
inc
sbb
sbb
and
push
mov
sarb
js
jecxz
outsl
inc
inc
outsb
cmpsb
adc
cmpsl
and
xor
lock
fs
les
push
hlt
push
sub
imul
cmpb
aaa
fcmovnb
adc
sbb
jge
pop
dec
add
incl
addr16
push
sbb
push
cmpsb
mov
cltd
jnp
add
rcrl
pop
daa
mov
shl
mov
jmp
ret
sbb
jns
pop
jmp
cmp
xor
pop
add
sub
add
cli
cmp
ja
xchg
add
sbb
daa
pop
loopne
jecxz
inc
sub
aas
pop
xchg
popf
xor
or
or
mov
sub
dec
mov
jnp
je
sub
or
je
or
pop
rcr
fidivrl
add
movsl
jo
dec
jbe
add
adc
xchg
sbb
xchg
loopne
sub
push
jge
stos
lods
rcll
adc
jmp
mov
mov
cmpsl
lret
popf
add
xor
popf
push
add
gs
xchg
arpl
mov
decl
insl
pop
and
jl
je
mov
adc
or
and
sub
pop
decl
lret
cmpl
jbe
lea
and
push
pop
rorb
shll
and
cmp
adc
pop
gs
fcomp
sub
push
or
xchg
lcall
lcall
mov
dec
or
add
push
hlt
jo
jle
add
leave
fcompl
int
inc
dec
adc
pushf
and
ljmp
lea
nop
in
add
mov
mov
fmul
add
xorl
inc
mov
insb
jns
clc
test
push
hlt
bound
nop
push
push
rorb
mov
shlb
enter
je
sub
xchg
xor
inc
adc
and
xchg
pop
inc
or
mov
adc
pop
xchg
inc
popa
clc
push
sahf
popf
xor
ja
and
pop
movsl
pop
fs
push
mov
push
mov
mov
adc
cmp
enter
sub
sbb
lcall
adc
test
lcall
rcrl
sub
push
sub
mulb
sub
dec
xor
xor
lcall
inc
inc
cmpsl
rol
dec
inc
lea
lods
inc
push
in
rcr
pop
pop
xor
push
pop
pop
push
inc
testl
xchg
adc
push
and
aam
sahf
stos
in
pop
fmuls
popf
and
into
dec
or
inc
dec
add
cmpsl
mov
lcall
push
mov
pusha
or
fisubs
pop
xchg
cmp
pmaxub
inc
add
pop
add
xorl
pop
xchg
push
test
add
add
nop
adc
push
dec
sbb
xor
or
aam
mov
mov
xor
ljmp
adc
xor
test
push
outsb
and
and
out
fwait
pushf
add
and
hlt
es
insl
or
sub
ficoms
sub
pop
fs
mov
mov
aas
mov
mov
int
ds
sub
and
je
lods
mov
insl
xor
mov
push
repnz
mov
outsl
mov
mov
xchg
lea
mov
adc
rcll
xor
add
scas
dec
lahf
notl
xchg
or
mov
dec
add
or
daa
cs
jo
jge
or
inc
push
loopne
fidivs
push
aam
fidivl
mov
and
fcoml
add
inc
dec
dec
sub
add
icebp
adc
inc
inc
pop
adc
adc
add
or
push
adc
dec
insl
adc
push
adc
adc
adc
ja
adc
or
jne
pop
and
js
xchg
mov
cmp
dec
jbe
cli
xor
fsubl
test
cltd
sbb
dec
cmpsl
or
shlb
pop
cmp
je
lods
sub
rcrl
add
lea
xchg
pusha
aas
daa
sub
daa
push
push
ja
stos
test
mov
xchg
mov
idivl
ret
adc
aas
mov
push
les
clc
sbb
sbb
rcr
jns
xchg
mov
xchg
push
and
int
sub
sub
mov
xchg
hlt
dec
push
or
fimull
test
mov
imul
rolb
mov
fnsave
je
cmpsl
sub
inc
js
add
lcall
cmpsb
test
xor
push
data16
loop
fs
aam
push
or
jbe
fldl
xor
push
and
cmpnleps
xor
clc
lods
push
movsb
fnsave
jp
data16
xor
les
mov
cmp
inc
sarb
push
pop
mov
bound
push
mov
aad
add
popa
daa
xor
mov
nop
add
pop
rorb
inc
push
push
adc
shll
in
adc
sub
or
mov
cli
and
ret
ret
mov
jnp
jns
xor
inc
cmpsb
xchg
test
mov
push
xor
cmp
into
adc
dec
cmp
loope
mov
movl
push
test
sti
gs
jbe
push
out
cmc
add
repnz
add
pop
push
cmp
add
pop
add
test
popa
loope
cmp
xor
jne
leave
mov
or
fnstsw
cmc
test
push
push
mul
xchg
and
push
dec
cmp
and
mov
mov
push
cmp
ds
mov
mov
xor
sub
push
inc
jno
cmp
incl
pop
mov
pusha
fs
add
jb
cwtl
mov
push
push
inc
sub
mov
mov
xlat
add
test
popa
sbb
adc
mov
mov
inc
pusha
repnz
imul
pop
xchg
pop
push
xor
das
xchg
enter
xchg
setl
mov
int3
out
xor
fsub
bound
sbb
sbb
cmpsl
and
dec
lods
pop
icebp
mov
mov
pop
mov
pop
inc
xchg
lods
xchg
sbb
inc
and
xor
add
sub
adc
dec
fadds
sub
xchg
subl
dec
sbb
push
cmp
cs
les
scas
pusha
cltd
cwtl
frstor
jl
jo
lcall
xchg
xor
test
sbb
push
cmp
jecxz
je
or
add
pcmpgtw
mov
mov
loope
sub
sahf
lea
std
cmp
jle
sub
sbb
add
cmp
lret
xchg
push
jle
mov
cmpb
mov
stos
push
scas
lret
enter
or
cli
sbb
fists
leave
bound
fmul
adc
in
xchg
cmpsl
push
add
cmp
sbb
add
dec
fdivs
nop
cmp
je
adc
push
in
mov
insl
or
mov
aad
fwait
push
mov
xchg
stos
or
jbe
cwtl
into
dec
jne
mov
nop
mov
add
repz
fisubs
sub
cmp
push
mov
negb
gs
loop
inc
inc
lret
cmpb
or
adc
movsb
mov
and
or
pop
sub
add
push
inc
lcall
sub
sbb
enter
sub
dec
sub
cld
add
jne
iret
stc
movsb
dec
or
icebp
leave
xchg
and
mov
and
fldl
inc
xchg
sahf
sbb
mov
mov
or
mov
and
inc
les
pop
sbb
xor
dec
adc
fisubrl
xlat
iret
shrl
push
sbb
repnz
xchg
sbb
mov
lret
inc
ja
aam
loope
icebp
xor
es
int
mov
ret
repz
hlt
and
sbb
add
loope
jg
sbb
js
in
test
ja
ljmp
push
mov
and
mov
or
jb
sbb
je
xchg
shr
push
cmp
or
fnstcw
or
cmpsb
or
pop
in
push
dec
add
push
and
pusha
pushf
and
pop
mov
push
push
outsl
push
popf
add
jl
sbb
adc
pop
cmpsb
or
aaa
mov
ss
mov
int
mov
insb
sbbl
push
mov
lcall
xor
lods
xorb
inc
clc
pop
outsb
sbb
xorb
sub
and
push
repnz
xchg
insb
divb
xlat
cmp
into
mov
add
and
adcl
jl
mov
loopne
push
fidivs
cmc
jmp
jmp
dec
push
mov
adc
data16
int3
xchg
push
and
movsb
leave
test
add
add
pop
sbb
sbb
pusha
addr16
pop
lea
scas
loopne
push
jo,pn
push
mov
mov
pop
push
cli
push
es
mov
add
or
and
sub
jl
imul
inc
dec
inc
ss
insl
imul
es
movsl
verr
popa
mov
inc
cmp
popa
loopne
push
shll
mov
cld
dec
add
adc
mov
insb
inc
jl
mov
xchg
sbb
mov
or
aas
mov
mov
sbb
fwait
out
sub
xor
push
or
add
icebp
xchg
fldl
push
xchg
xchg
sbb
xor
dec
adc
test
or
push
dec
cltd
scas
insl
call
pop
sbb
dec
dec
arpl
addl
push
cmp
jl
nop
and
sub
dec
xor
inc
and
push
fsubl
xchg
push
je
or
movsl
pop
movsl
shrb
push
dec
inc
xor
xor
sbb
xchg
push
mov
jns
or
sbb
popa
xchg
mov
or
in
sub
loop
xor
insl
popa
sbb
addl
add
inc
cmpl
jle
mov
push
sahf
or
inc
sbb
add
pop
and
fsubr
xor
xchg
test
push
cltd
push
cwtl
lret
mov
lods
cmp
jge
or
mov
sub
cmpsb
cwtl
out
push
scas
jl
adc
dec
ret
mov
mov
fs
inc
lock
ja
inc
or
pop
movsl
test
pop
aas
mov
lds
or
dec
call
jno
cmpb
repnz
add
or
shlb
mov
nop
nop
aas
in
add
scas
xchg
sub
push
andl
sub
cmpl
test
adc
sbb
or
popa
or
sub
ds
inc
int3
jmp
pop
push
shrb
dec
sub
mov
data16
xchg
jo
sub
push
fadd
inc
out
xchg
xor
hlt
and
push
or
jae
add
dec
out
jg
pop
dec
or
push
and
inc
push
jmp
dec
dec
test
pop
cld
or
cmp
or
and
and
xor
and
popa
jnp
sub
aaa
in
xchg
push
push
push
xor
add
or
sub
ljmp
ret
sub
dec
or
test
jnp
xchg
sub
jge
xor
fsubr
mov
adc
sarb
jns
aas
pop
push
or
dec
das
dec
mov
adc
fs
xor
fistpl
pushf
popf
xor
adc
cmp
and
jno
mov
iret
cmp
shrb
adc
adc
sbb
xchg
pop
imul
xor
insl
nop
cmc
dec
adc
and
dec
or
pop
popf
outsb
popa
pop
inc
mov
xchg
or
adc
xchg
fwait
arpl
adc
add
and
push
or
mov
sbb
mov
add
lods
inc
inc
test
inc
mov
mov
pop
pop
adc
dec
mov
cmc
outsb
daa
loope
ljmp
push
sbb
mov
inc
cltd
dec
cld
mov
jge
push
lock
mov
mov
inc
push
adc
adc
je
or
sbb
fldl
push
jmp
bound
or
mov
or
and
push
sbb
lret
shrb
and
in
mov
mov
xor
std
or
ret
cmp
adc
movsb
push
jns
cmp
and
jmp
addr16
xchg
xchg
pop
cmp
add
cmp
ja
sub
xor
sub
cmp
scas
in
sub
arpl
jmp
fcmovb
lcall
sbb
cmp
mov
inc
adc
jp
test
xchg
xor
push
jecxz
rcll
mov
inc
or
dec
push
xchg
negl
popf
outsl
call
mov
ret
xor
lahf
add
nop
pop
jge
inc
das
and
jo
mov
test
mov
enter
js
adc
inc
addr16
mov
jmp
dec
ret
inc
or
cld
sub
add
frstor
daa
mov
add
aaa
test
loopne
xchg
rorl
inc
or
insl
adc
adc
dec
sub
rolb
push
mov
repnz
scas
scas
inc
jp
xor
je
and
jne
adc
jns
sub
adc
sarl
and
imul
sub
pop
or
inc
dec
repz
ret
sub
cmpsl
add
lock
mov
and
jecxz
test
adc
xor
icebp
lods
fsubrl
xor
push
lea
adc
adcb
aas
pop
mov
test
push
xchg
das
adc
int
into
aam
dec
add
pop
inc
popa
sub
in
fs
aam
pop
pusha
dec
insb
inc
sbb
in
push
outsl
sbb
mov
out
mov
add
add
jl
push
lcall
je
or
sbb
sub
rclb
dec
movsl
rclb
sbb
push
sub
sbb
pop
and
loopne
push
add
mov
cmp
jne
mov
pop
ficomps
ret
mov
or
mov
add
mov
or
neg
and
movq
adc
fimuls
std
sbb
add
mov
stc
cmp
xlat
mov
pusha
pop
mov
add
pushf
sub
jl
xor
xchg
xlat
cmpb
mov
push
push
pop
xorl
lods
rcrl
and
push
jmp
ficomps
outsb
adc
outsb
sbb
enter
sbb
and
push
pop
pop
pop
popf
inc
les
loope
ljmp
inc
ss
test
xor
lock
repz
sbb
sbb
dec
nop
cmp
jmp
cmp
jmp
adc
add
out
lock
cmp
push
or
jmp
dec
iret
mov
in
or
adc
cmc
push
inc
adc
or
scas
or
jbe
out
fcompl
push
loope
pop
or
popa
addr16
out
in
or
and
adc
lods
add
rolb
xor
or
or
mov
sbb
loopne
shr
les
push
add
into
push
dec
push
lret
sti
aam
inc
movsl
aas
mov
push
cmp
add
test
mov
or
cmp
jne
dec
mov
or
adcb
or
loope
inc
andb
xor
and
sub
dec
mov
and
inc
ljmp
fiaddl
pop
out
int3
das
or
add
jae
push
inc
sbbl
rolb
push
je
stos
xor
sbbb
arpl
rolb
dec
inc
push
mov
subl
pop
push
dec
and
adc
sarl
xchg
push
pop
xor
pop
jb
inc
test
enter
or
je
jmp
mov
mov
xor
adc
mov
aaa
adc
xchg
popa
adc
cs
xor
add
xchg
push
or
pop
jns
xor
push
fs
movsb
mov
sti
inc
test
and
xchg
or
icebp
adc
decb
xchg
pop
or
xor
outsl
inc
int3
mov
cmp
cmp
loop
lock
pop
push
jae
dec
dec
cmpl
sub
mov
das
mov
sub
pop
and
call
adc
cmp
mov
das
shlb
cmp
mov
mov
push
push
andl
stos
push
jbe
lea
push
or
sbb
inc
xchg
dec
outsl
mov
jns
sbb
mov
out
inc
mov
inc
and
pusha
testl
cmp
jl
dec
push
or
sbb
adc
or
add
dec
sbb
fidivrl
mov
ss
mov
add
push
lret
adc
rclb
push
sub
pop
add
lock
icebp
enter
shlb
das
mov
jmp
dec
add
adc
shll
or
and
inc
cmp
jl
rcrb
or
jmp
add
push
cmp
jg
mov
xor
into
mov
or
add
adc
inc
mov
push
rorb
ror
sub
adc
sbb
imul
mov
mov
sbbl
pop
push
dec
enter
and
shrb
inc
fs
xor
adc
test
add
pop
xchg
lods
lea
add
rol
inc
inc
and
popa
dec
sbb
mov
loop
pop
ret
push
add
sub
cmp
push
mov
rclb
test
aas
mov
push
ds
push
cmpsl
push
pop
inc
push
xchg
mov
out
mov
xchg
divb
adc
lods
test
and
insl
dec
imul
mov
pop
or
inc
fwait
dec
insl
loopne
push
push
adc
push
sahf
loopne
add
sarb
and
fisubrs
mov
outsb
add
popa
fldl
sbb
push
and
sbb
pop
out
and
repz
aam
inc
adc
cwtl
pop
mov
pusha
dec
mov
add
pop
xchg
insl
xor
sub
add
push
mov
lock
pop
ds
in
or
test
cmp
xchg
inc
or
out
xchg
sbb
and
andl
sbb
out
clc
repz
inc
pushf
xor
in
inc
jne
popf
out
fisubs
push
sbb
push
andb
push
arpl
arpl
inc
push
dec
addb
das
dec
adc
clc
cmp
add
add
out
sub
and
jbe
push
roll
dec
pop
inc
aas
test
inc
jmp
aas
dec
xor
loopne
out
or
outsb
and
push
inc
test
stos
xor
adc
xchg
push
push
mov
push
xor
loope
mov
out
pop
adc
and
fmul
add
lock
cmc
push
mov
sub
ret
ret
sbb
add
jl
icebp
adc
jb
dec
add
inc
pop
lock
push
ja
in
call
in
xchg
cmpsb
jno
push
and
adc
lcall
mov
sar
sahf
lahf
fbld
mov
and
sbb
add
sar
mov
push
fdivr
push
lret
push
scas
outsb
xchg
and
mov
adc
add
push
sbb
scas
sub
sbb
adcb
dec
inc
fldl
nop
in
mov
sub
je
mov
or
push
fildll
inc
mov
fldl2e
inc
jecxz
fsubl
mov
aas
push
adc
and
ja
outsl
mov
test
test
mov
inc
in
jo
aam
jp
push
inc
or
adc
aaa
insb
dec
dec
cmp
cmp
push
cwtl
in
dec
or
jbe
mov
lea
mov
inc
mov
add
adc
add
mov
add
mov
sbb
pop
and
push
xor
cmovge
push
icebp
iret
xorb
enter
lea
adc
mov
in
sbb
je
dec
push
sbb
jne
xor
push
xorl
outsb
repnz
adc
arpl
pusha
cmpsl
mov
lea
in
test
adc
sub
mov
cmp
mov
int3
adc
inc
inc
and
dec
sub
or
shrb
lret
sbb
pop
pop
and
scas
mov
inc
add
xlat
add
xchg
xchg
insl
xchg
lcall
dec
sbb
xor
rcr
sub
inc
fs
popa
mov
testb
and
lods
clc
and
mov
xor
jg
adc
push
add
inc
and
jle
mov
xchg
push
dec
xchg
and
jns
jge
rcll
arpl
nop
adc
outsb
shll
test
xor
or
or
xchg
shll
push
loopne
popa
mov
mov
xchg
and
sbb
mov
xchg
or
lahf
add
push
int
mov
inc
mov
cmp
pushf
sbb
jp
adc
jne
mov
cmp
cmp
add
adc
add
movsl
mov
mov
or
sarl
lods
sub
inc
rolb
dec
daa
aad
adc
sbb
mov
clc
cmc
add
int3
inc
adc
ret
xor
and
and
xchg
push
repnz
sub
mov
push
jg
pop
orb
sub
jle
bound
loopne
test
outsb
sub
xor
xor
sub
sbbl
loopne
sub
lock
sub
or
xlat
sbb
add
pusha
cwtl
mov
mov
or
adc
xchg
pop
or
cmp
sub
cs
jp
loopw
mov
inc
jne
and
and
sub
ret
lds
insb
add
js
push
test
adc
hlt
movsb
andl
or
push
push
pop
lret
lods
adc
mov
popl
push
jo
rorb
out
cmp
add
mov
xor
push
lock
sub
xchg
jbe
add
cmp
and
inc
add
pop
fldcw
lcall
ds
fisttpl
cmp
dec
mov
push
sbb
in
xchg
xor
mov
pop
notl
adc
das
and
cmpl
and
sti
mov
sub
add
shll
mov
jne
cmc
mov
pop
xchg
movsb
inc
mov
push
shll
jmp
sub
inc
mov
stos
jmp
sbb
jbe
push
fsubrl
outsb
inc
clc
sub
push
xlat
and
and
push
pop
and
push
stos
sub
inc
lds
adc
repnz
xchg
mov
inc
push
clc
push
xor
xchg
movsl
sti
out
jge
mov
mov
cmp
lock
mov
imul
xchg
std
push
sbb
mov
push
bound
jno
push
imul
hlt
aad
jmp
aam
pop
adc
and
xchg
jmp
push
rep
sarl
das
je
movhlps
dec
out
or
cmp
sbb
data16
out
test
fwait
cmpsb
cmpb
adc
sbb
pop
sub
movsl
xor
mov
dec
imul
cmc
js
mov
mov
mov
pop
push
outsb
shll
mov
rcrb
adcb
or
mov
test
lcall
icebp
push
jne
jno
loop
in
push
in
inc
and
add
insb
or
push
pusha
scas
cmp
ficoml
sbb
xchg
jae
cmp
shlb
push
lret
add
mov
mov
and
jl
stc
mov
xorb
loopne
dec
jbe
jne
mov
add
sbb
je
mov
sbb
pop
add
es
mov
cltd
jle
lea
mov
stos
add
mov
add
inc
inc
push
sub
add
das
pop
mov
mov
cmp
cmp
xchg
inc
push
ret
jecxz
aam
push
aas
mov
inc
pop
mov
mov
push
dec
mov
dec
cmp
fdivs
dec
jo
or
jl
loop
sbb
ljmp
jle
stos
addb
mov
mov
sbb
pushf
sub
sti
push
je
push
dec
xchg
and
mov
xor
sbb
mov
mov
andb
dec
sub
xor
test
sbb
jne
push
icebp
or
gs
inc
aam
test
xchg
inc
jge
xchg
xchg
xor
sub
mov
or
mov
stc
push
jl
or
jp
xor
xchg
and
cmp
mov
mov
testb
cmpl
shr
mov
call
mov
les
mov
rorl
mov
sub
lcall
adcb
fs
aad
jbe
fildl
call
lods
adc
js
jo
fs
orb
sub
pop
pushw
mov
lods
jb
arpl
mov
sahf
mov
xor
mov
jno
jo
aaa
adc
pop
cli
cmp
orl
aad
shr
loopne
inc
inc
and
cmp
cmp
lods
xchg
out
add
inc
jp
xchg
mov
adc
nop
enter
shlb
mov
adc
adc
sbb
adc
xor
xchg
shrl
xlat
xor
sub
and
pop
test
rorl
cwtl
pop
mov
xchg
mov
xor
xor
fcomp
enter
sti
pop
fidivrl
arpl
nopl
insb
dec
ja
add
add
xor
adc
and
fistpl
sbb
jo
or
divb
cld
ret
in
lea
xchg
push
push
adc
loopne
inc
subb
jb
gs
mov
dec
xlat
inc
mov
xchg
cli
xchg
les
cwtl
mov
jmp
xlat
add
adc
inc
pop
and
dec
sbb
mov
adc
add
adc
mov
mov
sbb
pop
fisttpl
loopne
dec
pop
pop
push
outsl
mov
inc
add
sbb
sbb
fcoms
jg
movsb
adc
push
inc
add
push
push
xchg
lahf
data16
adcb
loopne
add
stc
xor
cs
pop
cmp
xor
inc
or
pusha
cmp
mov
or
ljmp
std
dec
icebp
rcll
or
xchg
test
fadds
popa
mov
adc
mov
cmp
rorb
push
imul
inc
or
push
lcall
test
xchg
cmpsb
sbb
push
imul
shlb
xor
repnz
fisttpll
loop
sub
push
sub
sahf
pop
nop
add
push
into
add
dec
and
pusha
nop/reserved
mov
test
and
or
lahf
mov
js
mov
fwait
sarb
les
sbb
fistpl
or
mov
jle
out
and
sub
or
loop
mov
ret
xchg
xchg
inc
dec
adc
sub
pop
mov
ljmp
jbe
adc
daa
add
rolb
push
dec
pop
sub
dec
jo
rclb
inc
mov
notl
jle
xchg
pop
insl
std
icebp
adc
mov
mov
push
cmp
cmpsb
adc
nop
movb
pop
add
push
pop
add
sbb
sub
dec
or
scas
rolb
or
or
sbb
sbb
outsb
add
imul
push
sub
adc
and
mov
mov
or
push
mov
andb
add
push
jo
fmulp
fwait
loop
ss
sub
add
mov
in
dec
mov
cmp
inc
insb
add
add
dec
dec
ret
loope
cmp
mov
mov
lds
push
sarb
adc
repz
xor
xchg
push
push
addb
stos
ret
xchg
shl
popa
lods
cmc
push
in
jge
xchg
add
or
inc
add
sbb
cmp
push
mov
pop
dec
xchg
cmpb
movb
sbb
mov
xchg
dec
pop
mov
pop
adc
pop
or
xor
fmulp
out
dec
add
mov
xchg
outsb
sbb
mov
inc
mov
nop
mov
mov
inc
sub
sub
rolb
ss
gs
sub
pusha
roll
jecxz
ljmp
push
ret
inc
mov
cli
dec
fimuls
test
adc
push
xchg
insl
push
mov
into
cmpsl
sbb
pop
pusha
or
sbb
sub
mov
mov
out
pop
mov
clc
xchg
sub
inc
cmpl
test
fs
lahf
sbb
testb
push
out
sub
fwait
jae
lds
dec
or
popa
sub
outsl
inc
mov
loopne
addr16
decb
stc
shlb
dec
add
push
xor
xor
dec
push
jns
push
je
adc
and
xor
add
cmp
or
pop
test
data16
add
cmp
mov
or
jle
and
adc
into
movzwl
push
mov
and
mov
adc
xchg
adc
push
or
adc
outsb
jo
pop
fdiv
add
pop
ret
sbb
jnp
add
push
cmp
push
inc
and
pushl
inc
add
insl
pop
loope
mov
jns
mov
fdivs
outsl
lods
jmp
push
cs
sti
push
add
cli
jecxz
mov
and
mov
cmp
xor
call
mov
jae
popa
push
xchg
cmp
dec
mov
adc
mov
mov
jge
ret
scas
sub
mov
and
jge
sub
cwtl
cwtl
dec
jecxz
lods
cwtl
mov
fnstsw
enter
inc
jle
ret
rclb
add
lock
lea
jl
and
adc
mov
fldenv
push
mov
aas
packuswb
imul
pmullw
inc
inc
push
stc
mov
sub
inc
call
outsb
push
push
sbb
ds
push
pop
and
ljmp
add
sbbl
jo
imul
sti
push
pop
jle
inc
add
push
pop
pop
mov
repz
pop
jg
pop
ret
ja
push
jne
push
aad
push
add
clc
mov
add
push
add
add
add
jg
or
push
or
ret
cmp
movmskps
iret
add
imul
fnstenv
inc
sub
xor
adc
xor
jnp,pn
out
or
add
sbbl
jo
push
fdivs
dec
lods
xchg
push
sahf
sbb
add
sbb
and
jge
mov
ficoms
and
and
lret
lret
lret
leave
xlat
roll
jle
adc
mov
dec
test
imul
es
xchg
jne
jo
aaa
jne
jmp
pop
or
sbb
lea
mov
dec
mov
pushf
mov
push
sub
xchg
imul
rorl
inc
push
xor
adc
push
cmp
bound
fcomps
mov
add
daa
imul
and
cmp
xor
xchg
push
lock
insb
cwtl
push
xor
mov
sub
test
adcb
sbb
sbb
add
sbb
sar
inc
jg
pushw
adc
shr
cmp
jae
mov
add
rclb
jmp
or
dec
stc
push
mov
ret
sub
fimull
js
ficoml
lret
clc
cli
jmp
and
enter
test
mov
loopne
adc
scas
je
jbe
rcrl
jl
test
or
mov
testb
jp
mov
mov
mov
push
cmp
cmp
mov
adc
loope
adc
mov
lret
adc
push
add
inc
pop
push
sbb
test
jbe
inc
mov
lock
jecxz
jle
fbstp
and
jl
mov
test
inc
mov
cmp
inc
das
pop
or
add
aam
outsb
lock
insb
cmp
and
adc
jo
sbb
je
and
push
sbbb
jg
outsl
into
add
and
xorb
cmpsl
test
shrl
cwtl
push
jb
adc
xor
sbb
std
scas
sbb
shr
fistps
shr
aas
adc
xchg
outsl
inc
push
sub
subl
xor
adc
lea
jg
fstl
rclb
inc
sub
pop
push
cld
es
xor
dec
pop
add
sarb
push
sbb
fwait
rolb
inc
inc
add
loopne
or
jb
xchg
jno
push
outsb
pop
xchg
mov
push
or
sbb
repz
sbb
and
push
inc
loope
and
mov
xchg
addr16
jecxz
mov
add
or
movsl
inc
rolb
call
cmpsl
negb
cmc
inc
xor
push
imul
pop
push
push
push
cmp
inc
cmpsb
add
test
iret
or
sub
movsb
xor
shl
pop
sbb
add
adc
dec
jle
test
sbb
and
and
xor
and
sbb
fs
test
adc
inc
jle
sub
push
testl
mov
xor
sbb
mov
mov
xor
enter
sub
adc
push
dec
jbe
mov
sbb
fsubs
mov
sarl
adc
jmp
cmp
orb
mov
adc
das
mov
or
pop
or
xchg
push
inc
push
mov
or
or
stos
test
cmp
iret
aaa
mov
mov
dec
xchg
adc
call
fs
jp
push
add
cmpsl
mov
push
cmpsl
and
adc
outsb
mov
pop
mov
ja
push
fcmovu
cmp
insl
sub
fadds
push
sub
jge
rcrb
jp
ss
pop
jl
pop
push
adc
or
push
lret
les
imul
push
fcmovnb
imul
movsb
xor
add
push
cmp
adc
push
aaa
adc
push
inc
cmp
in
pushf
fwait
push
or
or
shrl
mov
xor
test
shufps
jp
jns
xchg
sbb
add
adcb
scas
add
cmp
loope
push
rorl
dec
outsl
arpl
cwtl
pop
mov
daa
and
push
sbb
push
hlt
lret
cmp
sub
push
loope
sbb
shrb
jl
sbb
cmpsl
push
sub
sbb
out
stc
xor
cmpsb
lds
imul
pop
or
push
in
mov
pop
jmp
push
shrd
add
mov
or
sub
cmp
jg
and
push
mov
sbb
push
push
dec
subb
lcall
push
push
imul
and
or
leave
push
rcrb
and
cmp
jne
pop
mov
push
std
add
nop
push
out
and
daa
push
cmp
movsl
add
pop
lahf
xor
fsubl
mov
popa
repz
pop
movl
inc
mov
movsl
push
sub
add
ja
int3
test
or
imul
out
and
dec
jmp
outsb
push
push
jne
xchg
cs
cmp
or
lock
pop
jno
adcl
pusha
push
xchg
add
or
jns,pn
out
push
dec
push
and
daa
or
mov
addl
add
pop
xchg
insl
xor
add
inc
adc
pusha
xchg
clc
push
push
out
dec
inc
es
push
sbb
sbb
dec
test
bound
out
pop
jns
push
cwtl
sbb
adc
pop
mov
or
or
je
imul
popa
cmp
scas
xchg
repz
stos
cmp
shlb
pop
adc
and
subb
daa
sbb
mov
notb
inc
adc
mov
sbb
xor
fstl
mov
add
fisttpl
fldenv
test
hlt
or
push
test
xor
pop
xchg
mov
divb
outsl
loope
pop
or
jmp
bound
sub
push
inc
sub
xchg
xchg
add
sub
inc
mov
dec
or
jl
pushf
add
push
adc
cmp
push
push
pop
mov
adc
push
aaa
or
push
dec
mov
push
pop
mov
js
dec
dec
rcl
movsl
idiv
xor
cmp
xor
andl
fidivrs
outsl
fmul
pushf
cmpsb
sub
repz
cld
jb
in
mov
imul
adc
addb
in
dec
shrb
out
jb
push
adc
imul
push
andb
rclb
xlat
in
hlt
mov
mull
pop
mov
js
int
pusha
leave
mov
repz
in
push
mov
into
mov
push
push
xchg
aaa
das
imul
mov
fs
dec
mov
adc
cmp
dec
lods
fidivl
inc
and
xor
sub
xor
mov
ss
call
and
or
push
fists
sub
add
cli
loopne
sbb
or
pop
cmp
jmp
mov
cmc
pushf
push
jae
mov
sti
mov
jo
sbb
repnz
adc
mov
or
fmull
shrl
mov
add
std
jle
cmp
aad
xchg
fcmovu
imul
xchg
mov
jmp
mov
xchg
pop
ret
aaa
out
gs
xchg
sub
out
fsubp
js
cmp
xchg
mov
repz
mov
or
pop
sbb
ss
frstor
mov
mov
imul
cmpsb
rcrb
xor
bound
or
pop
aam
lods
add
add
in
add
or
mov
mov
addr16
jbe
xchg
stc
dec
addb
mov
cld
out
inc
add
icebp
pop
or
and
mov
mov
mov
nop
sbb
mov
cmp
or
mov
push
sbb
inc
or
dec
xor
sbb
pop
and
sub
aam
add
ljmp
in
ljmp
seto
xchg
push
pop
jp
pop
test
dec
adc
cs
xor
xor
je
jne
inc
and
sarb
add
or
sbb
push
xchg
mov
add
adc
pop
mov
test
push
xlat
cmp
fst
nop
testb
fcomp
pop
xor
xor
cmpsl
sub
cmp
and
push
imul
imulb
and
dec
push
cmp
in
mov
insl
lcall
jmp
gs
push
enter
mov
sub
rclb
adc
test
push
shr
xor
push
pop
out
pop
test
test
adc
adc
in
jp
push
mov
inc
inc
push
inc
test
ret
cli
sub
dec
lea
lahf
push
addr16
mov
cmpb
ss
repz
push
add
jne
or
stc
and
inc
xchg
and
dec
dec
arpl
arpl
cmp
je
add
pop
out
out
add
jp
ret
add
loope
mov
push
dec
pop
cmp
shl
jmp
cmp
mov
cmpsb
repnz
insb
popf
sub
ss
leave
push
and
push
cmp
movsb
pop
pop
cmpsl
jmp
into
pushf
out
fisubs
push
cs
sbb
cwtl
or
adc
dec
or
test
push
cmpsb
dec
push
mov
add
ljmp
cmp
ror
xor
fs
adc
imulb
cs
push
xchg
jl
push
js
add
les
cmp
jb
add
cmp
mov
mov
pop
add
fildl
sbb
aaa
xchg
add
add
ss
or
out
test
jp
push
jg
xlat
add
sub
sub
dec
xor
shlb
mov
mov
adcb
les
cmp
sbb
xor
push
add
addr16
mov
shll
jns
jmp
sub
and
movsb
test
xlat
lds
xorl
inc
jno
sub
roll
xor
add
and
cmpsb
lret
push
into
mov
push
add
mov
or
aaa
mov
dec
inc
repz
or
or
push
stc
push
cmc
adc
add
sub
test
dec
jp
mov
adc
fmulp
cmp
add
xchg
add
or
xor
sub
movsb
cmp
add
test
adc
aaa
sbb
adc
add
fnstsw
fadds
mov
clc
cmp
insl
movsb
je
and
roll
jnp
sub
fisubrl
and
pop
sbb
out
jo
xor
cmp
push
xchg
fwait
dec
ljmp
xor
pusha
cltd
xchg
dec
rorl
and
nop
inc
inc
adc
pop
and
dec
mov
inc
and
mov
add
add
lods
dec
loope
roll
cmp
and
mov
xor
push
fldt
cld
outsb
add
outsb
xchg
in
nop
add
or
mov
inc
adc
aas
push
inc
cmp
adc
and
xor
jl
data16
pop
jmp
mov
pop
jae
call
cmp
sub
jmp
out
adc
test
or
xchg
inc
sbb
sub
fisubl
in
sbb
mov
xor
loope
mov
mov
or
int3
sbb
js,pn
je
nop
mov
inc
xlat
ret
cmpsb
dec
aaa
leave
popa
sbb
cmp
mov
pop
sub
push
dec
pop
mov
aam
or
idivb
sbb
movsb
or
es
fmulp
in
ss
xchg
sbb
outsb
sbb
inc
pop
add
and
xchg
xchg
movsb
mov
or
dec
push
in
mov
sbb
jle
pop
cmp
cli
mov
insb
or
sub
or
mov
pop
adc
jae
andb
cmp
arpl
sub
or
mov
mov
cmp
pop
cmp
scas
es
insb
test
mov
notl
pop
popa
or
ret
xorl
loopne
jne
push
or
insl
jl
mov
sub
data16
iret
mov
pushf
aad
sti
inc
sbb
xchg
popa
adc
jp
xchg
lds
add
mov
icebp
xor
call
and
ret
and
lcall
je
xor
insl
cltd
bound
scas
mov
push
dec
jbe
dec
ror
inc
sahf
pop
imul
or
xchg
insl
ss
add
jo
in
xlat
test
xor
xchg
int
add
xor
push
sub
push
sahf
xchg
adc
adc
pop
add
mov
cmpsl
xchg
in
sbb
pop
movsb
mov
jecxz
adcb
divb
push
enter
mov
mov
jp
dec
add
andb
enter
popf
dec
dec
leave
aaa
and
loop
fcompl
add
pop
push
mov
sub
out
mov
dec
jb
bound
pop
push
push
addr16
addr16
and
jno
jecxz
cmp
and
and
and
and
push
push
scas
cmpsl
mov
out
pop
insb
push
inc
sub
sbb
es
enter
pop
sub
adc
pop
inc
test
and
sbb
adc
inc
pop
mov
dec
pop
push
sbb
pop
sbbl
and
cmp
scas
fld
test
dec
and
shlb
stc
cmp
pslld
mov
cmp
and
out
jno
in
jne
mov
rcrl
adc
xchg
inc
mov
inc
inc
xlat
inc
pushf
push
les
inc
xor
pop
shrb
test
sub
add
movsb
mov
xchg
mov
jne
lahf
mov
test
lret
decl
dec
push
push
lret
add
nop
cmc
inc
fwait
popa
js
es
push
loopne
mov
or
fildll
jo
add
add
mov
mov
add
call
hlt
add
jns
daa
mov
push
jp
jns
out
movsb
into
jecxz
push
idivl
mov
cmp
inc
push
pop
out
call
push
loope
or
imul
outsb
lcall
cwtl
cmpsb
idiv
pushf
dec
cmp
cmc
lahf
orb
dec
ja
dec
or
ret
mov
arpl
ret
dec
push
xchg
les
addl
and
shlb
cmpsb
loope
inc
jb
test
xor
push
xchg
js
das
push
paddb
xlat
push
adc
xchg
and
mov
imul
insb
nop
push
push
movsl
cmp
or
and
mov
sbb
bound
jb
lods
cmp
xchg
jb
add
lods
outsb
add
loop
stc
clc
inc
test
shrl
iret
aam
mov
outsl
sarl
push
mov
scas
mov
pusha
xchg
imul
xchg
jg
or
add
and
flds
popf
dec
push
mov
jno
ucomiss
dec
cmp
repnz
ja
sbb
dec
sub
push
xchg
add
inc
pop
pushf
xor
out
call
inc
icebp
pop
movsb
and
sub
push
or
push
insb
push
test
lock
dec
clc
loop
rorb
push
xor
hlt
and
popa
subl
enter
mov
call
repnz
jb
loope
adc
inc
adc
jnp
add
imul
jb
jne
inc
or
movsl
add
movups
xor
dec
sbb
aaa
popa
lret
add
or
inc
leave
fadds
sahf
sub
sub
adc
inc
cmp
aas
push
or
mov
sub
stos
fwait
test
rolb
imull
rolb
shrb
add
xchg
ss
push
loope
div
lret
adc
add
data16
or
or
or
out
test
or
xor
lods
inc
addr16
movsl
sub
pop
add
in
jbe
out
std
mov
lods
jmp
adc
xor
sbb
adc
insl
mov
inc
test
mov
fs
mov
xchg
mov
loope
xchg
mov
cwtl
or
icebp
xchg
inc
loopne
mov
daa
dec
adc
sub
pop
rcll
outsb
add
pusha
xor
push
mov
in
lock
and
in
in
sub
sub
in
in
xor
in
cmp
in
inc
test
sbb
sbb
dec
add
sbb
sbb
push
mov
push
pushf
sbb
ret
add
cs
or
adc
jns
add
pop
cmp
cld
pop
xor
ret
push
test
xchg
mov
push
mov
jle
push
sub
insl
dec
jg
stos
adc
xchg
inc
cmp
xor
add
lcall
js
adc
fsubl
ja
ret
xchg
jle
push
xchg
pslld
movsb
add
add
lds
cmp
pop
pop
imul
xchg
orl
xor
xchg
mov
inc
out
ds
shl
pop
or
std
movsb
test
lea
mov
pop
sub
es
mov
and
adcl
pop
jns
adc
mov
sbb
mov
or
add
mov
dec
sbb
add
or
jb
out
mov
push
and
mov
add
in
jno
ret
xor
test
mov
adc
dec
aas
sub
sub
add
cmp
adc
test
cs
xor
adc
cmp
rolb
add
xlat
add
repz
sub
and
lods
xchg
dec
or
xor
outsb
xor
pusha
push
aaa
or
cmp
aad
lret
cmc
push
mov
mov
sti
test
and
fisubrs
push
rolb
add
jo
sbb
loope
mov
cmp
stos
inc
and
and
push
aam
idivl
adc
int
inc
sbb
dec
movsl
push
inc
pop
in
fdivrs
or
decb
std
lods
add
lock
add
lret
or
mov
movsb
xchg
sahf
add
pusha
xor
mov
or
dec
flds
fcmovbe
cmp
sbb
cmpl
fwait
js
adc
imul
add
test
cmp
push
mov
push
stos
and
mov
test
clc
mov
inc
or
daa
inc
push
lods
xor
imul
lods
cmpsl
aad
maxps
mov
ljmp
pop
or
cmp
or
xchg
add
and
lock
gs
ljmp
xor
in
rcl
in
dec
pop
jae
es
and
flds
pop
jbe
mov
adc
shrb
lret
das
sub
xchg
subb
cmp
add
sbb
popa
inc
push
fcoml
nop
ficomps
mov
les
mov
leave
jge
je
mov
add
mov
leave
adc
shll
movsb
enter
rolb
fsubrl
pusha
add
push
lcall
sbb
cmp
pop
mov
push
ret
mov
push
jno
push
sbb
mov
push
add
pop
or
bound
pop
jb
xchg
sbb
push
jg
lea
ss
jne
pop
ja
cmp
movsbl
loope
push
loopne
fldl
out
cmp
xchg
sbb
movb
imul
subb
push
pop
cld
sbb
xor
or
rcll
sub
add
push
push
push
ret
mov
xchg
adc
das
mov
je
cmc
jp
sbbb
push
ljmp
push
xchg
pop
push
jge
pop
lods
mov
add
mov
xchg
mov
popa
add
aas
inc
or
xchg
and
push
xchg
lret
call
or
mov
cs
xchg
push
and
push
lcall
adc
in
dec
sbb
in
in
jo
testb
outsb
jnp
sbb
ja
dec
xchg
add
mov
xchg
cmc
bound
gs
mov
je
shr
mov
xchg
lock
in
mov
fists
push
push
sub
cli
gs
mov
dec
jb
inc
jns
cmp
aad
push
rorb
movl
leave
ror
push
push
das
cld
mov
cmp
or
rcrl
in
pusha
mov
mov
push
inc
add
test
arpl
repnz
or
test
mov
stc
and
xchg
gs
inc
divb
test
imul
jns
adc
movsl
scas
mov
mov
dec
push
add
jmp
sahf
push
aad
out
push
or
lock
jnp
fisubs
je
push
lock
sbb
lods
loope
call
sub
lods
daa
sub
adc
dec
fcomps
push
cwtl
inc
insb
cmpsl
fsub
sub
pusha
mov
movsl
rolb
mov
push
into
push
cmp
or
or
jno
dec
or
sub
add
or
jb
push
cmp
sub
adc
arpl
mov
in
add
stc
add
push
jno
sarb
lods
sub
add
fwait
mov
jb
sbb
xorb
jle
mov
add
xchg
or
outsl
dec
leave
sub
mov
add
xchg
mov
cmp
pop
mov
jl
sub
sbb
inc
push
arpl
sub
repz
pop
mov
push
pusha
dec
orb
movsl
and
aaa
xchg
frstor
out
dec
lea
rorb
push
mov
adc
loope
shlb
push
xlat
and
adc
jge
stos
pop
xchg
sbb
pop
add
mov
lcall
cmc
and
mov
repnz
dec
inc
adc
pop
inc
jle
cmp
push
mov
mov
jns
pop
and
or
xor
repz
stc
add
xorb
sub
pop
sbb
sub
je
inc
inc
test
cltd
sbb
xchg
test
push
mov
and
push
mov
add
mov
jmp
leave
and
cmpsl
push
fstl
adcl
fstps
outsw
mov
cs
jb
mov
into
rcrl
push
loopne
add
fists
ficoml
adc
xchg
test
adc
adcb
dec
lds
mov
jb
add
and
cmpsl
test
push
inc
jp
add
sub
mov
adc
ret
xlat
jmp
push
add
push
movups
xorl
mov
push
push
adc
pop
das
in
mov
and
roll
push
or
jp
add
jmp
lret
movsl
or
mov
negl
xchg
xchg
lahf
mov
cmp
pop
adcl
mov
stc
call
cmp
jb
imul
lock
dec
int
dec
push
sbb
xor
push
add
dec
scas
xchg
push
cmc
fisttpll
adc
jge
or
neg
adc
cmp
push
sbb
movsl
xor
fnstcw
pop
sbb
and
xor
cmp
in
mov
xor
int3
jmp
cmp
into
and
and
push
sarl
enter
sbb
push
cmp
mov
mov
adc
push
adc
fidivrl
mov
mov
jae
jg
xchg
or
push
adc
test
or
mov
je
or
fwait
push
loop
ds
mov
mov
add
sbb
call
push
lahf
push
push
adcb
pop
add
loope
clc
movsb
pop
sub
call
lahf
sbb
xor
cmp
push
loope
adc
pop
stos
rcll
pop
add
in
mov
outsl
xor
js
push
jmp
xchg
pop
test
sub
push
push
sub
cmp
add
clc
push
ss
push
sbb
mov
gs
test
add
jecxz
lds
pop
outsl
xchg
xor
add
pop
and
das
jns
or
or
sub
add
mov
mov
adc
and
mov
mov
sbb
add
or
inc
dec
or
bound
jle
movsl
mov
aaa
mov
lock
inc
clc
ror
in
scas
pop
mov
and
sub
mov
ja
dec
movsl
dec
sbb
inc
jne
mov
sub
jmp
cmp
mov
cld
cmc
xchg
outsb
call
or
pop
pop
push
push
push
or
popa
pop
loopne
pop
mov
add
dec
add
mov
rorl
sbb
mov
stc
aad
jecxz
lret
mov
xchg
xor
add
nop
scas
mov
push
mov
leave
pop
mov
dec
push
add
mov
add
dec
frstor
insl
rorb
jle
fcmovnbe
add
push
pop
push
push
xchg
hlt
push
or
jmp
lea
shl
ds
sbb
and
mov
push
mov
cli
inc
push
int3
jo
aas
addr16
nop
and
dec
insb
pusha
fimull
xor
adc
mov
xchg
push
mov
pusha
mov
mov
mov
xor
and
and
and
mov
mov
dec
mov
nop
adcb
mov
xor
les
cmp
outsl
arpl
xchg
es
inc
stos
jg
aaa
jp
xchg
stos
inc
sti
fcom
and
in
sbb
jl
incb
cmp
push
and
fldz
ficoms
cmpb
mov
cmpsb
rclb
add
mov
negb
push
and
lret
cmp
je
adc
loopne
pop
mov
mov
sub
lcall
andl
add
inc
movsb
and
cli
add
adc
cmp
push
movsb
das
or
test
out
fsubl
jno
dec
mov
jmp
stc
out
ds
fxch
fmulp
faddp
sbb
and
imul
pop
mov
cmp
imul
test
faddl
add
push
popa
mov
mov
push
into
sbb
orl
sbb
mov
cmp
neg
xor
out
push
adc
and
mov
xor
lea
cmp
sbb
inc
xor
xor
adc
and
inc
sub
ss
push
pushf
dec
or
icebp
add
mov
or
lods
add
enter
into
add
push
je
pop
mov
cmp
push
and
adc
loopne
fwait
mov
in
clc
pop
pusha
jecxz
push
iret
andb
shl
faddp
sbb
pop
jge
inc
mov
negl
shrb
clc
dec
jmp
not
les
cmp
notb
and
movsb
pop
cwtl
ret
adc
or
sub
mov
add
in
xchg
mov
test
addr16
cli
pop
add
rolb
js
dec
push
mov
decb
jge
push
loop
sub
jmp
cli
cmp
loope
push
in
xchg
stos
and
add
add
leave
cmpsl
hlt
popa
stos
mov
stos
mov
aad
lcall
daa
push
add
xor
repz
sub
icebp
daa
push
pop
not
xchg
adc
repz
nop
orl
pop
or
jl
xor
fisttpl
fldt
xor
pop
xchg
mov
jae
outsb
and
jg
adc
push
js
popl
xor
in
add
fs
jbe
dec
mov
mov
shll
and
lock
mov
sbb
jle
mov
pusha
dec
out
cmp
mov
sub
dec
or
test
sbb
rorb
popa
cmp
add
je
xor
cmp
dec
or
enter
cmp
in
xorb
jp
pop
or
int
jmp
nop
jne
xor
subb
je
xchg
push
test
xor
rcrl
mov
sbb
adc
fdivl
adc
mov
adc
fidivs
nop
or
dec
or
repnz
sbb
xor
adc
and
mov
shlb
pusha
in
mov
pop
or
and
sbb
cmp
jle
cmp
cmp
jge
pop
rcl
adc
adc
mov
dec
clc
dec
sub
jge
or
pop
adc
inc
aaa
fs
popf
add
popa
stos
call
adc
iret
cmp
fistps
movzbl
push
inc
lods
xor
jno
xor
jo
push
adc
fildll
adc
mov
cs
call
ret
aas
or
inc
fsubrl
jae
loope
inc
mov
sub
add
xor
in
loopne
and
push
xor
jmp
push
push
add
scas
sbb
xor
sub
cltd
mov
push
xlat
lea
adc
aam
xchg
pop
add
loopne
cmpsb
mov
adc
aad
cltd
and
mov
push
jb
stos
xlat
mov
cmp
cmp
cmpsl
lods
aaa
stc
psubb
push
pop
sbb
lcall
add
test
add
inc
iret
es
sub
pop
repnz
cltd
sbbl
movsb
add
je
dec
mov
jbe
xchg
add
test
mov
jne
adc
repz
inc
xor
mov
inc
mov
push
jbe
cmpsb
test
dec
jg
or
or
mov
mov
adc
inc
les
insl
cmp
adc
mov
jmp
movsb
xchg
dec
and
jl
jns
sarb
imul
add
aad
cmp
add
add
lds
jno
dec
pop
push
inc
pop
fdivrs
xchg
call
js
cwtl
cmp
jns
iret
lret
add
cli
cmpsb
xor
mov
add
jmp
xchg
mov
addr16
or
int
jl
inc
inc
sbb
pop
cs
imul
ljmp
test
or
pusha
imul
adc
lods
adc
fucomip
mov
add
inc
and
sahf
sub
push
movsl
pop
xor
push
clc
rcll
sbb
repz
xchg
or
sbbl
inc
push
xchg
push
pop
adc
mov
leave
test
jo
pop
push
loopne
xor
pop
mov
lea
dec
dec
inc
lahf
nop
or
or
adcb
pop
or
cwtl
cmc
mov
push
adc
inc
test
cld
fldt
push
enter
mov
and
sahf
dec
or
add
sti
lock
or
sub
inc
push
adc
mov
and
movsl
gs
sbb
shr
sbb
out
sbb
lods
in
push
sub
fisubs
scas
rcl
inc
pop
add
push
adc
call
outsb
movsb
stos
push
mov
pop
cmp
add
test
mov
ja
mov
jg
pop
or
adc
mov
pop
cmpsl
add
and
popf
or
mov
push
or
jmp
in
repz
add
sub
es
xchg
sub
mov
pushf
push
push
mov
mov
mov
mov
or
sbb
aam
adc
pop
cwtl
das
or
vmwrite
insb
sub
into
xor
add
lods
stc
and
inc
xor
jecxz
and
cmp
or
mov
push
push
arpl
and
outsb
push
into
push
daa
jnp,pt
adc
inc
iret
push
or
adc
pop
in
js
or
in
add
push
in
or
mov
cmpsb
pop
sbb
push
fildl
or
or
lock
mov
sbb
dec
push
dec
pop
and
pop
inc
and
add
push
jnp
idivl
push
mov
push
mov
aaa
int3
dec
lret
popf
jnp
lahf
or
inc
daa
sbb
add
divl
xchg
lods
pop
sbb
sub
jbe
mov
mov
pop
or
sbb
push
sub
sbb
sbb
repnz
inc
or
sahf
fiadds
add
pop
or
add
inc
inc
out
or
js
sub
mov
or
fsubrs
dec
rorb
mov
cmc
pop
push
add
in
mov
add
mov
ret
xor
ret
push
inc
cmp
jmp
cltd
cwtl
mov
clc
pop
and
dec
test
xor
int
cmpsb
es
sbb
imul
in
sbb
sbb
aas
adc
add
lcall
pop
jno
xchg
mov
push
movsb
repnz
aas
xchg
ss
les
cmp
push
test
insl
cltd
and
adc
add
adc
mov
aaa
jle
jbe
mov
rcrl
daa
jo
sbb
enter
xor
ja
or
test
sbb
and
dec
sbb
mov
and
inc
add
sbb
aas
lret
jne
pop
xor
add
and
add
cld
or
addb
outsb
push
cltd
xchg
jb
addl
jecxz
jecxz
xorl
into
dec
pop
push
lock
adc
test
movsl
ja
mov
pop
mov
add
mov
push
rcrl
inc
jecxz
sti
mov
add
or
mov
jmp
push
push
lods
or
or
pop
icebp
fwait
push
test
cmpsl
dec
movsb
nop
inc
push
add
mov
dec
leave
push
adc
and
mov
inc
dec
negb
xchg
fldl2e
pop
mov
or
push
cmp
je
adc
mov
add
jbe
sub
shlb
ret
jmp
dec
inc
lods
jne
or
pop
lock
cmp
rcrl
movsl
enter
popa
shrb
loope
mov
xor
pop
xchg
or
sar
loope
adc
add
fcoms
fiaddl
adc
addl
add
jg
pusha
xor
push
jo
rorb
xor
dec
ljmp
clc
xorb
xchg
test
mov
adc
pop
mov
sub
es
add
fwait
xor
and
sbbl
movsb
dec
loop
add
jmp
aas
test
inc
or
and
addb
lret
sub
pop
test
adc
xchg
leave
push
sbb
daa
scas
loopne
add
push
lret
xor
dec
cmp
sbb
cmp
inc
lock
or
or
push
sti
imul
inc
je
ret
xor
mov
aad
cs
mov
and
and
dec
xchg
les
adc
add
push
ret
test
xor
push
mov
dec
xchg
test
adc
jecxz
mov
mov
sub
lods
and
fdiv
mull
push
adc
cltd
inc
and
jmp
inc
add
add
insb
pushf
and
mov
sub
lods
movsl
mulb
and
sbb
mov
sar
push
test
lcall
lret
insl
adc
add
pop
ret
push
arpl
sbb
mov
xchg
mov
lods
outsl
sti
jbe
shlb
mov
push
pop
stos
and
adc
fimuls
aaa
adc
fists
loope
arpl
jns
or
cmp
inc
ret
or
jmp
mov
gs
cmp
outsl
sub
sub
fisubs
mov
add
cli
push
pushf
data16
shll
push
sbb
in
ds
shr
inc
push
das
lret
dec
inc
es
xchg
or
or
repz
adc
call
or
lock
stos
cmpsl
test
sbb
cmpsl
ljmp
add
fld
pop
mov
fs
xchg
les
mov
add
mov
mov
and
xchg
push
and
xor
shlb
mov
je
push
shlb
xor
inc
push
and
movsl
movsl
or
out
xor
xlat
adc
scas
mov
mov
add
sub
adc
jne
xor
int
js
or
push
adc
xchg
jge
js
fidivrl
sbb
and
sub
jmp
pop
fsubrs
mov
add
cwtl
inc
mov
xchg
mov
inc
sub
rolb
sbb
cmpb
jmp
jmp
loop
dec
and
push
push
pop
into
mov
mov
or
loopne,pn
mov
int
xchg
dec
push
inc
adc
ds
out
ss
mov
mov
mov
xchg
int3
xchg
fs
mov
fstps
les
sbb
xchg
movsl
jo
jmp
xchg
rorb
add
ret
mov
adc
cltd
movb
popa
xor
and
mov
stc
push
sub
cmp
jl
out
out
jb
jbe
je
popa
je
push
je
out
out
jae
push
dec
je
push
xor
je
dec
je
outsl
je
push
push
je
test
gs
stos
in
test
std
addb
xchg
lret
add
and
inc
jmp
add
dec
or
insl
clc
pop
adc
mov
dec
jno
and
push
add
sub
xchg
pop
add
add
or
addl
ret
push
jo
arpl
add
mov
xor
dec
adc
and
mov
sahf
repz
push
or
push
pop
add
lret
cmp
aam
sub
push
sub
ror
shrl
xchg
xchg
leave
loope
daa
pop
add
sub
jmp
sbbb
outsl
xlat
dec
mov
lds
push
outsl
pop
es
dec
xor
sbb
sbb
or
popa
and
popa
xorb
inc
les
cmpl
jecxz
fcmovu
sub
mov
cmp
mov
lahf
or
add
dec
add
dec
in
nop
callw
adc
xor
sbb
mov
and
movsb
add
jno
jle
mov
push
mov
jne
adc
adc
mov
mov
cmp
les
jne
push
mov
jl
mov
mov
dec
cltd
and
mov
ljmp
cmp
adc
add
and
out
stos
add
orl
popa
sbb
jo
and
leave
adc
icebp
jg
and
dec
add
mov
lds
cmp
fs
inc
push
dec
cmp
cmp
test
add
stos
mov
sub
or
xchg
pop
ja
pop
push
and
sbbl
cmp
jnp
inc
dec
add
adc
jg
mov
mov
xchg
pop
and
cmpsl
push
push
cli
push
push
or
dec
and
or
arpl
cmpsb
imul
add
test
inc
nop
cli
push
cmp
stos
pop
je
adc
add
inc
mov
mov
sbb
nop
bound
or
push
xor
inc
lcall
push
ret
loopne
loopne
add
pushf
cmp
ja
test
sbb
adc
push
aam
fsubl
mov
pop
clc
or
and
aas
rolb
or
hlt
jmp
pop
and
movsl
add
xlat
pusha
inc
adc
psubsb
aam
push
and
fdivs
or
and
aad
sbb
adcl
inc
push
xchg
sub
sahf
loope
and
pusha
mov
adc
mov
xor
call
jmp
inc
lds
in
in
sub
adc
test
gs
sub
and
ret
movb
mov
mov
test
or
sub
adc
aaa
and
or
mul
push
cmp
adc
push
pop
and
in
xor
and
mov
in
inc
adc
adc
mov
aad
enter
repz
call
ret
inc
test
add
lcall
repz
loopne
or
and
pop
ret
lret
xor
cmp
push
and
xor
xchg
test
inc
insl
cltd
sbb
dec
inc
movsb
pop
lods
jl
adc
repz
ficompl
jns
xchg
js
sub
imul
stos
orb
pop
adc
xor
adc
sub
and
insl
dec
or
cmpsl
mov
pusha
outsl
stc
in
aas
jae
push
or
mov
push
outsl
pop
int3
pop
fsubrs
xchg
pop
call
xchg
inc
das
add
pop
enter
dec
cmp
inc
dec
nop
mov
out
push
fucomp
std
xchg
popa
leave
inc
das
xor
and
cmp
daa
or
mov
orl
adc
jl
sub
loope
lret
mov
add
jno
and
xchg
mov
dec
push
sub
push
sbb
sub
lds
sbb
mov
mov
mov
cmp
lea
sbb
dec
scas
push
jbe
fsubrs
jo
je
adc
gs
add
imul
fdivl
adc
rcr
or
xor
add
xchg
aas
mov
sbbl
pop
push
add
out
or
add
daa
or
js
push
push
push
pop
pushf
leave
cmpsb
into
pop
push
or
gs
add
cli
xor
repnz
clc
daa
mov
lods
xchg
adc
jb
jo
sbb
call
roll
pop
mov
out
jb
mov
js
sar
inc
clc
or
and
ljmp
lock
adc
cmp
sbb
and
dec
loope
jo
dec
xchg
inc
or
fs
inc
mov
mov
sub
or
push
dec
insb
push
add
test
push
test
sbb
jmp
push
hlt
nop
and
dec
or
scas
popa
leave
push
add
aam
rorl
es
mov
ret
inc
add
mov
cltd
sub
ss
das
cmpsb
jo
dec
ss
pop
add
jl
inc
shlb
push
add
dec
and
sbb
scas
insb
and
ret
sub
jo
or
adc
gs
stc
jl
lea
push
xor
push
out
inc
rorb
push
inc
aas
sbb
stc
or
andb
xor
lods
cmc
fwait
movsb
sbb
out
in
mov
push
mov
adc
jg
mov
lahf
add
adc
add
xor
je
imul
sbb
xor
push
xchg
mov
shll
jb
mov
lahf
sub
xor
push
xor
cmp
xor
xchg
push
shrb
xor
js
jb
xor
adc
xchg
sbb
in
xor
mov
xor
in
and
in
jne
lods
jp
into
stos
mov
push
addr16
add
stos
xor
xor
dec
jp
push
pop
aam
arpl
sub
jbe
add
mov
xchg
sahf
pop
adc
inc
and
orl
movsl
add
adc
push
dec
loopne
sbb
xchg
dec
inc
or
sbb
movaps
push
adc
pop
loope
and
loope
mov
outsl
pop
push
push
andb
pushf
std
pop
sti
and
and
test
sub
sub
inc
stos
pop
dec
add
and
lcall
push
mov
ret
test
push
xchg
dec
sbb
mov
sub
adc
gs
cmp
xchg
push
xor
loopne
cmp
cwtl
jg
inc
jnp
enter
sub
xor
push
stos
sbb
popl
cmp
mov
sbb
pop
sbb
xchg
or
call
es
push
rorb
sub
xchg
and
or
mov
sub
popl
xchg
adc
xor
inc
js
adcb
and
xor
push
dec
jmp
lock
insb
inc
aam
mov
mov
adc
movsb
xchg
iret
or
or
xlat
lods
push
adc
push
or
sub
aas
and
sahf
test
out
inc
pusha
fdivl
fistps
cmp
xor
sbb
cmp
enter
roll
hlt
pop
leave
push
aaa
or
inc
cmp
ds
and
lea
sbb
push
add
xor
int
mov
add
mov
loop
lret
cmp
push
data16
xchg
jl
cmp
fsubl
jb
xor
popa
arpl
cmp
or
lcall
push
push
or
and
popa
inc
mov
dec
mov
push
and
dec
push
mov
mov
js
inc
cmpsb
push
pop
push
cs
adc
arpl
sub
adc
cmpsb
jns
push
lock
sub
sbb
or
lea
popa
and
test
insb
pop
push
cwtl
nop
push
dec
cmp
aas
inc
mov
push
push
movsb
sahf
xchg
push
jp
and
pusha
push
mov
xchg
lea
ret
mov
mov
jo
mov
nop
cmp
popf
push
dec
popa
mov
les
pusha
lock
and
jg
or
or
sbb
adc
sub
xor
dec
dec
jp
dec
and
icebp
addb
push
sub
pop
adc
xor
jecxz
je
sub
movl
mov
xor
mov
adc
in
stos
std
sbb
inc
and
mov
ret
adc
adc
and
mov
cmp
cmp
pop
daa
adc
sub
push
push
xor
cmp
dec
push
icebp
add
repz
inc
mov
xchg
push
cmp
xor
and
mov
jmp
jno
xor
movhps
shlb
jne
xchg
inc
dec
dec
pop
sbb
ss
icebp
mov
and
sbb
aas
pop
adc
daa
leave
pop
inc
ja
lods
jae
inc
pop
cmp
jecxz
int
jmp
movl
jnp
pop
jo
movsl
test
mov
leave
lahf
ss
mov
add
mov
or
lds
popf
mov
pop
push
scas
pusha
inc
or
xor
push
pop
adc
loopne
lcall
ljmp
jo
aaa
xchg
testb
inc
add
repz
fxch
xor
jl
xor
sbb
rorb
push
cmp
movsbl
out
punpckldq
cmp
mov
imul
fimuls
mov
rorb
sub
dec
add
pop
xchg
push
ja
inc
xchg
or
orb
fstp
xchg
mov
xchg
in
xor
and
insl
pop
pop
jle
ret
push
loope
xor
push
test
imul
js
or
inc
fisubrs
xor
das
inc
movups
insb
shlb
mov
insb
lea
ja
sub
orb
and
rorb
loopne
fstl
sub
push
and
repnz
pop
push
loope
cmp
mov
movsl
push
punpckhbw
cmp
into
data16
or
xchg
sbb
sbb
and
sbb
and
mov
sbb
popf
or
imull
aad
jb
aas
xchg
fsts
adc
push
out
dec
add
je
sbb
mov
scas
sub
outsl
mov
mov
pop
insl
jmp
sbb
in
mov
mov
rcrl
jae
cltd
subl
repz
and
pop
cld
movsb
into
inc
dec
ffree
jne
fists
daa
lods
or
xchg
adc
push
data16
dec
out
cwtl
push
pop
xor
jmp
int
imul
push
ljmp
push
push
jmp
fidivs
sti
sub
xchg
mov
mov
jg
pop
push
in
jp
in
dec
dec
fsubrp
mov
fdivl
lock
out
jbe
sbb
sub
mov
xchg
cltd
call
or
xchg
pop
and
xor
loop
xor
iret
loop
or
dec
push
jp
or
xchg
xlat
rcl
xchg
and
cmpl
call
cmp
xor
popf
xor
and
inc
lock
adcb
push
xor
adc
inc
or
adc
adc
fsubs
push
sub
mov
mov
out
je
es
fimull
push
sbb
sub
fnstsw
adc
test
push
fcmovbe
dec
popa
ret
lods
pop
cmpsb
add
outsl
push
popf
outsb
mov
sti
mov
pop
sub
xor
xor
mov
lret
notrack
sbb
add
xor
inc
mov
pmullw
cmp
cmp
je
push
shlb
sbb
fprem
and
adc
addl
cltd
cmp
push
stos
and
ja
shlb
icebp
inc
addr16
ja
xor
push
adc
fnsave
mov
loope,pn
movsl
fidivs
jmp
pop
push
adc
jne
or
out
and
mov
test
inc
hlt
sub
ret
mov
jmp
enter
cmp
jbe
sbb
lods
inc
je
and
lock
push
jb
mov
popa
dec
scas
enter
mov
sub
dec
or
or
and
sub
jge
jl
sub
dec
lret
push
cmpsb
mov
jnp
sub
xor
cltd
add
xor
xchg
sub
fmuls
popa
scas
in
sbb
aaa
lods
xor
out
adc
inc
or
pop
aam
push
cmp
out
out
mov
mov
cs
nop
adc
xchg
pop
push
cmpb
push
push
loope
int3
push
dec
jecxz
mov
enter
cmp
and
mov
and
cmp
ret
pushf
aaa
cmpsl
iret
lret
pusha
xor
int
fistpl
idivl
ss
ret
push
andb
jae
iret
in
adc
inc
sbb
fwait
adc
insb
adc
mov
popf
mov
add
xor
sbb
cmp
adc
cmp
call
mov
push
mov
or
addl
add
xchg
or
xchg
cmp
dec
out
jmp
sbbl
mov
sbb
xor
push
lahf
xchg
out
nop
and
mov
lea
lahf
inc
xchg
adcl
es
adc
std
mov
call
mov
and
sbb
rclb
xchg
sub
or
ret
jne
add
mov
sub
aaa
fwait
xor
dec
lret
inc
psubd
fcomps
and
fbld
subb
or
add
insb
pop
xor
push
jne
or
sub
sub
adc
dec
cwtl
cmp
stos
cmp
roll
jp
push
cld
inc
rol
or
shrb
sbb
xchg
pop
pop
push
push
js
inc
repnz
adc
xchg
das
push
push
cmpsl
repnz
cmp
sbb
jge
xchg
inc
es
push
dec
and
push
and
jo
adc
adc
jbe
filds
sub
add
add
add
dec
jne
cmp
and
lret
ret
lret
repz
push
sub
xchg
cltd
sbb
arpl
or
ret
test
outsb
sbb
test
jnp
or
sbb
mov
cwtl
adc
dec
adc
push
in
mov
outsl
cltd
stc
icebp
push
xchg
insb
adc
popa
sbb
movsl
data16
sub
cwtl
ret
mov
into
and
inc
push
fmuls
sub
sub
jl
jp
cmp
arpl
pop
mov
add
cmpsb
and
cld
mov
movsb
pop
pop
int
bound
cmpl
jp
stc
je
push
mov
rolb
sbb
jg
into
push
outsl
or
or
push
dec
push
push
xorb
push
js
sbb
sub
sub
es
sahf
or
push
bound
mov
pushf
push
in
or
jle
add
sbb
mov
flds
push
or
pop
mov
faddl
out
add
rclb
jne
xchg
lret
roll
std
into
pop
push
dec
call
dec
adc
je
push
pushf
in
jecxz
mov
and
add
push
loop
les
lret
mov
clc
add
dec
push
push
xor
xchg
mov
and
mov
and
js
insb
jmp
sub
xchg
push
mov
or
sarl
xor
push
je
dec
scas
in
adc
adc
push
adc
xchg
xchg
pop
testl
and
pop
jne
xor
dec
movsl
imul
lret
sbb
jp
jo
xchg
fsubl
xor
lods
xlat
pop
jge
out
mov
mov
in
sub
test
sbb
pop
add
lock
repz
cmc
imul
sub
sbb
inc
leave
push
roll
loope
jne
dec
cmp
arpl
push
mov
and
ret
repz
cmp
adc
or
cmp
pushl
cmpb
add
insl
jne
xchg
pushf
out
add
adc
out
arpl
insb
stc
cltd
sub
mov
add
shlb
sub
pusha
push
xchg
daa
xor
adc
popf
je
push
clc
sbb
ss
xchg
push
movb
movsl
jmp
jo
loope
test
add
mov
inc
add
lock
adc
jl
mulps
mov
mov
xor
mov
movsl
xchg
push
and
std
out
nop
xor
leave
addr16
scas
mov
rcll
xor
dec
adc
and
add
in
inc
jmp
lret
lods
call
jns
sbb
push
test
pop
dec
leave
rorl
cmpsl
add
adc
sub
jge
inc
in
xchg
sbb
fists
push
test
mov
dec
add
push
adc
pop
push
add
jb
xchg
iret
fwait
push
test
add
out
mov
fwait
pop
ret
ss
mov
jecxz
pop
add
fwait
shlb
cwtl
out
sub
jnp
mov
push
pop
ud0
shl
dec
scas
jmp
add
mov
rcrb
pop
dec
aas
xchg
nop
in
adc
dec
dec
push
ds
sub
push
flds
lret
cmpsl
mov
cld
xorb
cmp
pop
sbb
insl
cmp
cld
sub
repz
mov
loope
cld
stc
cmp
sarl
loop
cli
add
add
pusha
pop
add
rol
sub
xor
and
sub
and
lea
or
dec
shrl
and
dec
sbb
inc
clc
inc
push
pop
jnp
push
or
push
mov
test
lea
ret
mov
and
addb
inc
test
sub
sahf
dec
pushl
dec
shll
add
mov
lods
and
xor
cmpsb
mov
loope
push
jae
push
movsl
jne
jecxz
inc
sub
das
pop
sub
or
insb
adc
xor
icebp
mov
es
leave
sbb
out
xor
push
icebp
mov
pop
aas
das
jne
idivl
enter
inc
and
push
dec
and
add
mov
int3
xchg
nop
cmp
push
ja
cmp
jge
fiaddl
add
add
add
add
or
and
pop
add
add
sub
aas
rorl
jl
sbbl
sub
nop
sbb
rorl
mov
push
inc
jle
xlat
push
lock
mov
fs
pop
adc
push
or
lea
and
xlat
iret
stos
adc
orl
pusha
and
leave
fmuls
jne
push
inc
inc
imul
cmp
jge
fcoml
stos
add
inc
lea
push
rcll
sub
dec
sbb
push
pop
ds
bound
sub
out
dec
pop
xchg
push
mov
add
add
pop
push
shrl
ja
mov
call
cmp
pop
push
push
jae
fists
jne
inc
mov
adc
outsb
jmp
adc
aad
or
in
sbbb
or
jnp
pop
out
inc
mov
push
mov
push
aas
xchg
js
ret
or
and
cli
orb
adc
rorl
and
inc
mov
or
push
sbb
mov
pop
push
jmp
shlb
jl
adc
lea
xor
push
push
mov
out
ret
adc
movaps
popa
fsubs
gs
and
and
adc
mov
sbb
dec
testb
jb
jne
add
imul
xor
test
inc
adc
leave
sbb
add
add
addl
jae
sbb
scas
inc
add
jge
adc
xchg
iret
sub
int
add
inc
iret
cmp
push
add
test
frstor
lcall
add
bound
ret
test
outsl
xor
pop
inc
and
mov
mov
pop
lods
or
pushf
add
cmp
movsl
jge
xor
dec
mov
sub
cmpl
mov
inc
sbb
fnstenv
inc
idivb
inc
jbe
lahf
ja
push
xor
int3
mov
jp
nop
or
movhps
adc
idivb
dec
sub
mov
aaa
push
ss
jmp
sub
fcmovnb
xchg
outsb
jmp
pushf
dec
popa
adcb
push
cmpl
push
lock
jne
cmpsl
fwait
lods
scas
cltd
xchg
or
pop
sti
or
xor
sub
jae
add
test
repnz
or
push
int3
mov
and
data16
mov
push
icebp
ja
cmc
out
je
loopne
imul
je
lcall
inc
push
mov
or
cmpsl
into
xor
pop
rclb
into
dec
add
ljmp
pop
mov
out
mov
pop
sub
dec
jns
cmp
andl
fsubs
lock
add
cmp
xchg
cmp
fdivl
add
add
adc
xchg
loopne
and
fs
and
cmp
mov
inc
fwait
pop
pop
mov
add
les
inc
mov
mov
add
jl
shrl
cmc
movsl
shll
inc
dec
sti
sub
cmp
or
and
mov
lret
sbb
scas
lds
daa
dec
xchg
or
rcr
sub
addl
and
fcmovnbe
mov
bound
les
jecxz
mov
insl
mov
push
das
inc
push
mov
and
in
push
in
add
add
lcall
xchg
xchg
add
add
adc
cmp
leave
cli
int
jno
sub
xchg
lods
and
inc
outsb
pushf
sub
mov
xchg
movb
imul
sbb
xchg
xchg
add
xor
out
add
pop
sub
popf
ret
sbb
adc
sub
lock
push
adc
enter
adc
pop
adc
aam
inc
clc
jge
movsb
nop
ret
add
xorb
xor
adc
stc
xchg
jns
add
adc
mov
sbb
out
out
iret
test
sarl
push
pop
mov
loopne
mov
out
mov
in
jl
ds
mov
xchg
push
pop
shlb
ret
mov
pop
mov
mov
or
sbb
dec
inc
test
xchg
and
js
sbb
addl
mov
les
xor
enter
or
and
xor
andb
clc
add
inc
sub
imul
jnp
mov
movsb
jbe
lock
stos
inc
mov
and
incl
lcall
cltd
dec
adc
dec
add
or
aam
adcl
mov
test
mov
sbb
add
jne
cli
push
negl
push
or
push
sub
mov
push
push
add
sarb
push
inc
xchg
mov
ja
je
int3
inc
xor
test
rcll
xchg
sahf
xchg
test
mov
dec
fildll
cmp
lret
add
imul
push
mov
jno
insl
inc
xor
cmpsl
inc
pop
jmp
mov
cmp
mov
cs
fbstp
jge
mov
dec
andl
sbb
xchg
xchg
insb
jg
dec
ret
pop
add
mov
popa
call
push
sbb
push
adc
mov
push
add
jmp
mov
inc
add
push
mov
push
and
sbb
movl
js
xorl
sbb
dec
mov
add
xchg
std
add
inc
or
es
or
fdivl
jmp
add
pop
dec
cmp
add
jo
sub
jo
clc
push
mov
sub
cmp
jo
add
cmp
adc
and
lds
int
lret
outsl
flds
add
and
add
adc
es
push
cmp
inc
xor
mov
test
cli
mov
mov
addr16
xchg
add
add
and
mov
push
int3
mov
aas
enter
add
ret
adc
pusha
rorb
sbb
daa
jmp
aaa
push
push
pop
iret
iret
add
sub
cmp
ss
pusha
inc
jbe
ja
mov
dec
add
pcmpeqw
rclb
cmp
xchg
push
imul
adc
xor
xchg
lret
sbb
or
adc
lcall
sbb
pop
ja
mov
pop
xchg
cmpsb
push
add
lods
std
cmp
in
test
push
xchg
jle
aam
dec
xchg
push
mov
mov
jbe
inc
mov
add
nop
and
je
or
jb
and
test
and
or
outsl
jmp
xchg
adc
adc
rorb
push
pusha
mov
add
xor
addr16
push
mov
decb
dec
mov
sahf
jg
add
xchg
cmpsl
aas
aaa
data16
loope
cld
and
pushf
cmpsl
orb
or
mov
test
xchg
dec
push
sbb
or
or
cmp
xor
xchg
inc
rcrb
xchg
mov
and
dec
xchg
adc
sub
shlb
jae
in
je
mov
cmc
add
xchg
mov
inc
fnsave
dec
les
mov
sub
fstpt
pusha
add
and
xchg
and
dec
mov
imul
or
push
adc
lods
imul
insl
arpl
or
imul
mov
push
ds
mov
jg
loope,pn
add
sbb
jo
mov
adc
push
incl
xlat
sub
es
mov
inc
or
adc
adcl
or
pop
add
add
xchg
adc
dec
bnd
je
jg
mov
push
push
mov
jl
push
fcoml
daa
push
pop
jnp
jbe
aam
in
sub
inc
xchg
sub
jle
imul
mov
or
int3
or
insb
pop
mov
ret
push
push
adc
pusha
sti
lea
xchg
mov
mov
or
xchg
das
fbld
cmp
sub
fs
xchg
nop
push
arpl
outsl
rcll
daa
jne
inc
push
jne
mov
ds
hlt
mov
sbb
ds
push
je
jp
das
or
ret
stos
imul
pop
sbb
sub
jmp
add
add
add
pop
push
std
xchg
pop
pusha
imul
sbb
les
rorl
stos
inc
mov
or
inc
or
add
cmc
sbbb
mov
jne
xlat
inc
fidivs
ret
push
les
rclb
push
push
js
test
push
jmp
push
push
scas
xchg
bound
sbb
insl
pusha
inc
sbb
cmpsb
xor
inc
or
adc
arpl
ja
add
jo
add
leave
cs
sbb
mov
out
xor
sub
add
add
scas
jmp
popa
and
scas
inc
xchg
mov
rclb
fisubl
adc
xor
addr16
jbe
sub
aam
cmp
cltd
or
adc
cmp
xlat
jns
jno
outsl
daa
pop
jb
or
insl
push
pop
rorb
pop
add
xor
xchg
cmp
pop
ret
add
lods
pop
add
adc
and
dec
dec
stos
and
mov
and
jl
adc
cwtl
adc
pushf
adc
mov
adc
pop
sbb
lahf
mov
std
fs
sub
lods
fs
stos
sahf
push
sub
aad
adc
push
or
xor
cmp
xor
popa
cmp
test
test
je
adc
xchg
enter
push
xor
and
repnz
sub
add
lock
add
les
pop
in
pop
or
push
dec
in
or
adc
and
fimull
nop
or
call
cs
adc
dec
xlat
jmp
testb
push
jb
nop
inc
dec
push
cld
or
lret
cmpl
push
or
dec
rorl
cmpb
clc
cmpb
xor
xchg
inc
aas
popa
sub
jne
add
add
int
jp
leave
in
adc
cmp
add
sub
sbb
bound
and
es
adc
xchg
add
nop
cmp
mov
lcall
dec
fidivl
leave
in
das
ss
lods
xlat
cmpsb
jbe
pop
jle
inc
and
outsl
mov
int3
jmp
out
ds
mov
andl
push
icebp
add
adc
cltd
mov
mov
push
je
push
cmp
pop
shlb
push
loopne
adc
fiaddl
jecxz
ret
call
rorl
in
add
fs
push
add
and
push
and
and
push
add
push
enter
pusha
sarl
ljmp
aaa
pop
adc
into
sub
cmp
call
inc
lret
xlat
add
jle
cmpsb
ficoml
xchg
sbb
push
popa
inc
enter
sub
lock
sti
and
adc
mov
repnz
push
and
lret
push
or
push
out
or
mov
mov
mov
cmp
mov
sbb
insb
mov
and
gs
nop
add
sbb
jne
fiaddl
adc
pop
sbb
inc
lret
cmp
xor
xor
loope
lret
popa
pop
pusha
call
cmp
inc
insb
in
sbbb
pushf
mov
mov
daa
test
mov
lea
push
and
rcl
push
xor
loopne
pop
sub
pusha
adc
data16
lods
add
or
imul
or
shll
xor
adc
adc
add
ret
decb
mov
cmc
pop
or
addr16
jge
sbb
mov
lea
imul
xor
jne
xor
adc
pop
push
dec
pop
repz
sbb
xchg
sub
xor
or
insl
adc
lret
stos
fnstsw
jnp
inc
or
mov
je
jmp
loope
sub
inc
cltd
adcb
stos
jbe
out
cmp
js
sub
mov
lods
std
xor
adc
add
mov
fisttps
incl
call
std
pop
push
dec
dec
ret
lret
xchg
lcall
scas
cmpsl
lea
push
or
pop
mov
jl
testb
add
xchg
ror
jne
popa
loope
mov
and
pushf
lahf
mov
cmp
imul
and
orl
insl
sbb
ret
mov
rol
mov
xor
adc
sbb
add
fbld
dec
jo
andl
dec
ret
adc
in
jmp
and
sub
lret
imul
push
xchg
xor
mov
insb
subb
js
lock
jmp
jo
push
push
ja
aaa
lds
cmp
and
jnp
add
negb
pop
and
and
sub
and
and
cs
push
push
pop
ret
and
mov
mov
cmp
dec
and
push
cmp
aad
add
xor
push
jb
mov
dec
jg
pushf
inc
xor
lret
insb
inc
inc
jmp
cs
pop
push
dec
or
ret
ds
pop
rorb
pop
andb
pusha
sbb
inc
call
mov
dec
bound
or
adc
mov
loopne
cmp
jo
sbb
cmp
add
add
int
das
add
push
pop
pop
ret
aas
jne
pop
adc
inc
out
add
sub
xor
sbb
xchg
andl
dec
insl
add
jb
xchg
lea
xor
cmp
adc
ret
loop
inc
repnz
add
scas
and
xor
mov
pop
sub
loopne
arpl
loop
inc
adc
xchg
ds
pop
roll
sub
jle
or
sub
and
push
nop
and
push
adc
shl
addb
and
ss
sarl
mov
xchg
inc
daa
push
ret
or
lret
push
xchg
cmp
sbbb
lods
cmpb
pop
lea
cmpsl
mov
mov
mov
out
mov
and
lods
stos
mov
scas
dec
adc
enter
push
push
add
add
xor
jmp
lds
inc
jo
add
push
rorl
and
adc
xchg
sahf
icebp
inc
dec
sub
add
inc
ja
push
cmp
inc
lret
dec
and
iret
stos
sbb
push
imul
jno
out
sbb
and
add
jb
sub
add
mov
push
inc
in
sbb
push
sbb
into
xchg
cmpsl
sub
or
xchg
dec
inc
adc
and
icebp
mov
or
push
mov
jle
xchg
stos
push
sahf
push
gs
orb
inc
add
cmp
cmp
inc
adc
jbe
test
dec
pusha
outsb
mov
jo
pop
push
sbbb
into
fldl
lahf
cmp
or
frstor
xchg
adc
movsb
cmp
movsl
lock
mov
mov
scas
mov
mov
adc
aas
adc
add
jbe
pop
xchg
rorl
stc
repz
hlt
mov
pop
push
stos
iret
cmp
movsl
loopne
sbb
xor
sub
push
jp
lea
xchg
mov
test
mov
add
hlt
test
jno
mov
addl
mov
js
jb
faddl
and
xchg
fsts
sub
test
int
pop
or
les
test
addl
adc
loopne
jo
mov
fdivr
cli
xor
pop
mov
adc
dec
cmp
inc
jmp
call
jno
xor
in
sbb
pop
das
pop
dec
or
mov
rorl
xchg
push
mov
push
push
add
or
xchg
dec
add
cmp
sub
push
js
and
adc
add
xor
imul
repnz
or
daa
bound
das
sbb
scas
mov
sarl
js
xor
pop
add
faddl
fistpll
or
sti
jb
pop
lock
in
and
out
xchg
jl
push
push
jo
lea
or
add
sbb
push
push
out
stos
insb
lret
loopne
das
xchg
cmp
addl
and
push
test
test
jnp
insb
and
gs
adc
je
dec
inc
jne
fsts
lods
aam
and
push
push
add
jo
test
pop
xorb
jle
int
push
out
xchg
cltd
and
and
int3
add
inc
bound
mov
sbb
inc
push
cmp
add
mov
pusha
cmp
in
inc
imull
adc
js
mov
xchg
xor
jb
jecxz
and
arpl
fldl
dec
loope
popf
push
mov
adc
jb
in
mov
cmp
xor
xchg
cmp
lds
xchg
push
arpl
dec
sub
loopne
lock
aaa
fucomip
push
add
xor
inc
cmp
loopne
daa
cmpsb
jae
into
ret
imulb
flds
add
or
and
outsb
add
fstps
and
and
inc
xor
or
lock
js
pushl
xor
sub
div
push
jmp
sahf
mov
push
and
jnp,pn
test
push
push
nop
mov
sbbb
push
push
imul
add
jbe
int3
add
inc
add
movsb
in
mov
test
dec
lea
mov
js
dec
add
lcall
jne
test
jg
mov
test
mov
cmpsl
aas
and
or
inc
sub
push
push
jmp
or
test
add
lea
gs
movsl
gs
popa
adc
test
or
or
adc
sbb
push
sbb
popa
push
add
mov
hlt
jecxz
inc
adc
clc
mov
xchg
mul
imull
decb
sbb
in
push
push
in
and
pop
dec
mov
push
outsb
add
int
fadds
orl
out
dec
or
add
call
repz
xor
test
pop
mov
jmp
add
add
jl
jge
sub
or
test
repz
jno
xchg
aas
jge
add
ret
push
adc
in
pop
xchg
adcl
lret
add
dec
push
lret
pop
cmp
mov
ret
add
aad
rcrl
stc
mov
pushf
inc
jae
mov
fiaddl
outsb
xchg
popa
enter
sbb
shll
dec
xor
jae
inc
jno
lods
mov
xchg
leave
and
loopne
mov
cmp
mov
dec
adc
mov
mov
sub
dec
inc
inc
je
xor
frstor
xor
pop
xor
repnz
push
inc
push
ret
push
in
call
inc
sahf
mov
sbb
mov
add
stc
dec
enter
xchg
jo
cmp
fbstp
mov
adcl
fwait
xor
mov
sbb
mov
testl
mov
inc
nop
add
dec
add
ja
adc
pop
cmpb
nop
add
stc
aaa
mov
iret
test
outsb
loopne
push
je,pt
int
jb
sub
jp
add
add
push
fstpt
adc
push
mov
gs
pop
jg
je
popl
popa
fsts
dec
dec
push
inc
push
call
lret
mov
ljmp
adc
or
or
jne
pop
dec
popa
out
mov
inc
mov
xor
sub
xor
popa
ss
call
test
cmp
sub
in
lock
cmpsl
xchg
add
add
mov
sti
mov
or
adc
imul
sahf
ja
cmp
push
push
push
pop
gs
jns
bound
mov
mov
xor
repnz
mov
sub
adc
adc
adc
mov
mov
shlb
iret
loop
and
inc
inc
and
jb
pop
ja
mov
xor
add
add
lcall
mov
in
lret
cmp
les
or
test
mov
mov
push
push
dec
add
and
addr16
push
lret
and
and
fcmovu
jno
flds
loopne
in
call
jae
cmp
adc
xchg
xchg
ja
test
idiv
das
movsb
enter
add
jmp
jno
pop
dec
mov
add
aaa
xor
mov
sub
xchg
xchg
dec
push
cmp
ss
mov
dec
dec
push
sub
mov
adc
push
xchg
mov
xchg
pusha
sub
pop
xchg
insb
inc
inc
inc
inc
jo
js
cmp
lea
imul
mov
sbb
out
add
and
mov
xchg
xchg
cmc
nop
push
js
fs
jge
insb
movsl
xchg
in
or
popa
mov
mov
outsl
ss
notl
mov
mov
iret
sub
or
xor
add
cmpsl
jns
movl
test
lods
xlat
cmp
roll
mov
dec
ret
jno
xor
lret
test
push
sbb
loop
ljmp
repnz
sub
and
or
xor
xchg
rorb
jmp
loopne
xchg
cmp
pop
mov
and
clc
inc
and
pushf
insl
and
cmp
sub
and
mov
add
mov
sub
fidivs
mov
xor
sub
fs
insb
rclb
fld
lret
push
mov
sbb
dec
test
repz
and
aaa
sarb
or
fs
and
xchg
dec
jno
add
jns
or
add
xchg
and
lods
scas
lret
enter
mov
aam
int3
movsb
mov
sbb
daa
fcmovu
addr16
mov
pop
enter
xchg
inc
inc
fdiv
xor
jmp
enter
shl
hlt
popa
xchg
out
insb
fs
or
add
push
add
mov
add
sahf
sbb
pushf
cld
lock
sbb
fs
sub
sub
outsl
subb
cld
jno
pop
add
xor
inc
add
xor
mov
or
adc
push
jns
pop
jo
lods
pushf
pop
or
test
pop
les
call
inc
adc
adc
mov
sbb
inc
add
xchg
add
jns
mov
pop
lret
jo
jbe
jle
je
and
enter
pop
and
xor
mov
sub
aas
mov
mov
jns
sbb
cmp
sbb
lret
cmp
popa
movsb
cmp
lea
out
lea
pop
or
loopne
int
cs
lock
outsl
movsb
sbb
xchg
dec
call
inc
fimuls
xor
mov
mov
dec
adc
pop
sub
iret
enter
mov
pop
mov
dec
dec
je
or
cmpsb
sbb
xor
mov
push
mov
add
mov
or
pop
mov
add
or
enter
out
loope
cmp
int3
push
aad
add
pop
inc
gs
dec
dec
je
pop
outsl
in
dec
jl
push
jo
xchg
pop
js
gs
enter
jns
pusha
dec
or
and
xorb
push
jb
test
int
mov
js
xchg
loopne
sbb
mov
jbe
jns
mov
inc
addr16
fldcw
fxch
ret
mov
aad
fldcw
mov
pop
push
lcall
xchg
fldlg2
xchg
mov
xchg
xchg
xchg
xchg
fcmovu
loop
cltd
mov
mov
jno
mov
incb
das
jnp
mov
shlb
insb
add
or
and
out
sbbl
popa
sbb
sahf
loopne
sub
pop
push
mov
push
je
push
dec
test
inc
xor
js
add
mov
mov
inc
pop
and
inc
pop
jmp
loope
out
idiv
adc
and
jns
stc
and
sub
and
and
test
lea
mov
les
aam
mov
push
cmp
add
mov
and
jp
das
movsl
add
movsb
mov
out
pop
sub
std
insl
sub
into
lret
add
jp
and
add
ds
adc
fstpl
je
xor
shrb
pop
sub
dec
push
lea
add
sbb
fcomp
mov
ja
test
or
das
inc
mov
mov
subl
call
push
adc
sbb
inc
lea
push
dec
loop
or
push
add
popa
xor
mov
fisubrs
lock
and
push
mov
push
jb
push
xchg
mov
mov
jbe
jl
mov
pop
sarb
leave
adc
loop
es
xor
arpl
rcll
cmp
push
inc
fmuls
jmp
lea
adc
jle
mov
lock
adc
cmp
jg
sarl
movsb
dec
test
loop
push
and
and
aam
and
jo
ja
or
roll
cmp
push
xor
ficoml
fmuls
add
add
adc
adc
push
jo
loopne
out
cmp
outsb
xor
push
mov
push
jecxz
mov
repnz
or
sub
inc
xorl
add
orb
or
out
or
or
cltd
movsl
jo
fisttpll
and
sub
mov
dec
add
cmp
sub
sahf
shrb
mov
enter
pop
sbb
imul
xor
xor
testl
add
push
test
adc
pop
sbb
and
inc
or
xchg
pop
adc
pop
sub
push
jnp
aas
test
mov
mov
rorl
shlb
xchg
inc
sti
lcall
add
add
or
mov
mov
adc
je
mov
dec
in
int3
jbe
add
rcrl
adc
fstps
xchg
adc
mov
push
push
lcall
push
ds
dec
push
loope
push
push
sub
xchg
adc
leave
das
lret
loope
jg
or
xor
lock
jl
sti
test
jmp
sbb
sub
jmp
repz
add
cmp
sbb
sahf
das
sti
xlat
mov
inc
push
push
incb
mov
sbb
orl
nop
ss
std
mov
dec
jbe
push
pop
push
test
out
and
push
fcoms
jne
mov
and
je
sbb
notl
xor
das
iret
fs
jmp
push
arpl
inc
pop
cmp
aas
cmovb
movsl
arpl
shl
ja
dec
push
sbb
rcrb
ret
push
push
xor
xchg
jb
je
adc
js
iret
loopne
adc
fsubs
mov
dec
push
and
jno
adc
leave
sub
pop
add
nop
xchg
xor
inc
pop
or
xchg
cmp
pop
sub
insl
idivl
inc
mov
add
adc
cmpsl
pop
loop
xchg
outsb
cmp
aam
idivb
loop
or
and
fisubrl
fldl
push
add
lcall
dec
push
xor
mov
push
push
jmp
bound
in
xlat
lea
xor
sub
xchg
fdivrl
andl
movsb
ja
xchg
push
sahf
jmp
adc
and
filds
stc
pop
xor
out
pop
mov
push
adc
push
mov
inc
inc
fmuls
hlt
sbb
push
cli
jp
test
sub
fadd
adc
shlb
aam
push
inc
mov
and
add
dec
add
mov
push
inc
push
sbb
loopne
and
in
sbb
daa
lods
sub
or
xor
test
in
shlb
mov
ret
jmp
mov
mov
xchg
clc
rcll
xorl
fistpl
pop
jae
lret
add
and
push
push
pop
mov
movl
add
push
test
jecxz
mov
mov
xor
mov
into
movsl
inc
test
loop
and
jmp
enter
mov
loope
push
add
dec
fadds
xchg
pop
fiaddl
sbbl
add
jb
xor
shll
sbb
mov
test
xchg
add
mov
xchg
xor
gs
nop
push
mov
cmp
adc
mov
fadd
dec
aas
int
add
push
rcl
or
mov
pop
lods
push
sub
and
aam
addl
sub
jmp
pop
add
add
mov
or
xchg
push
mov
inc
test
inc
add
icebp
es
mov
mov
es
inc
mov
hlt
fisubrs
adc
leave
push
cmp
xchg
mov
add
add
sbb
pop
sub
and
cli
adc
fstpl
add
sbb
cltd
lahf
push
aaa
sahf
push
pop
pop
pop
cmpsb
xor
xchg
stos
push
push
mov
les
push
xlat
or
pop
mov
aam
std
jle
in
call
xor
faddl
repnz
xchg
dec
adc
fsub
mov
rol
outsl
shlb
push
sub
pop
push
jecxz
lds
push
cmc
adc
sbb
aam
test
add
cmp
push
pop
jnp
in
mov
insl
mov
xor
pop
ret
sub
jno
mov
xchg
jmp
loopne
xchg
xchg
bound
lcall
pop
push
je
dec
add
mov
push
mov
xor
jns
jl
mov
jmp
repnz
and
or
adc
add
mov
pop
out
fnstenv
rolb
sbb
add
dec
pushf
dec
adc
jo
add
fiaddl
dec
je
cmp
insb
xor
xor
js
fimull
jmp
push
decb
add
rolb
mov
xor
mov
ljmp
adc
push
mov
cwtl
add
ja
and
pop
push
and
data16
inc
add
push
rol
test
dec
add
mov
sarb
sahf
mov
adc
mov
sub
sub
int
add
es
stos
push
shlb
loope
xor
rcr
xorb
cmp
insb
dec
add
mov
insb
add
insl
outsl
and
xor
ret
sub
dec
adc
fwait
dec
xrelease
test
mov
mov
jmp
add
mov
fsubrs
pop
inc
or
loopne
and
int
inc
js
jbe
jmp
sbb
loopne
out
mov
and
js
and
lds
lcall
xor
rolb
call
adc
stos
outsl
xor
and
rcl
inc
nop
mov
mov
and
jns
add
test
pop
test
sub
or
xor
loope
pop
mov
jbe
fdivrp
test
mov
aaa
xor
addb
es
cmp
mov
add
pusha
jo
scas
cmc
repz
inc
add
mov
inc
outsb
popa
mov
jno
lea
push
and
or
pop
into
and
or
add
inc
push
adc
adc
mov
nop
arpl
and
inc
aad
pop
mov
fmull
pop
cmp
dec
adc
mov
es
or
and
xchg
xlat
mov
sub
enter
xor
mov
sbb
or
mov
cmp
inc
scas
inc
js
dec
xor
popa
xor
mov
xor
mov
jo
or
adc
cmp
or
mov
xor
outsl
ss
add
mov
cmc
cmp
push
pop
or
repnz
jo
and
adc
ret
mov
fists
push
ss
xchg
aam
cs
cmp
call
cmc
es
cwtl
bound
mov
mov
jl
mov
xchg
jmp
lods
adc
mov
jo
push
dec
je
push
pop
mov
pusha
ds
aaa
shr
jo
je
out
mov
add
shr
and
sub
cltd
jns
inc
mov
nop
sub
jns
xchg
adc
cwtl
in
mov
push
jae
mov
aaa
repnz
sub
xor
mov
outsl
xchg
rol
adc
repnz
dec
fsubrl
xchg
aaa
repnz
in
and
mov
fdiv
mull
in
xor
nop
ffree
mov
cltd
pop
jle
adc
or
addr16
sbb
movsl
fdivl
sti
push
or
jne
xor
ret
lds
loope
and
out
and
andb
xor
adc
insb
sub
jo
rcrb
cmp
jo
popa
jb
pop
mov
mov
or
mov
sub
xor
stc
mov
sbb
cmpsb
cltd
jge
jae
cmp
push
sub
xchg
addr16
inc
js
mov
xchg
dec
dec
xchg
push
addr16
das
call
jns
sahf
xchg
int3
fsubrs
out
sbb
cmpsl
je
test
lea
dec
xchg
jns
sahf
xchg
insb
pushf
nop
mov
sbb
push
adc
mov
pop
sbbl
daa
movsb
pop
and
adcb
mov
sahf
sub
add
xchg
les
or
mov
push
xor
mov
cmpsl
movsb
dec
dec
sbb
cmpsl
lcall
sub
cmc
xor
inc
sarl
mull
jle
out
cmp
xchg
orl
push
pop
push
and
ds
into
jbe
testb
int3
xchg
xor
xor
push
or
pop
fsubl
into
clc
fs
or
add
xor
stos
sbb
dec
xor
movsl
mov
add
cli
cmp
imul
jle
jne
push
sub
fidivrs
lods
dec
dec
cwtl
inc
pop
rclb
cmpb
daa
sbb
jo
or
repnz
add
xor
dec
xchg
nop
loop
daa
cmp
sarb
loopne
or
hlt
movsl
push
xor
xchg
rolb
and
add
lret
push
mov
fsub
or
or
ss
add
adc
mov
iret
adc
sbb
inc
data16
mov
vpaddd
adc
and
fcomps
cltd
mov
xor
rorb
imul
cmp
cmpsl
dec
mov
pusha
mov
stc
push
dec
adc
sbb
sti
push
xchg
pop
shll
mov
adc
and
push
nop
push
sub
add
inc
sbbb
push
cmovb
push
incl
pop
add
andb
jae
pop
int3
mov
adcb
dec
sub
dec
enter
and
or
jmp
outsl
cld
incl
push
test
mov
add
sbb
xor
xor
jae
xchg
fstp
and
pop
inc
outsl
cs
mov
and
orb
in
add
push
dec
pop
adc
adc
mov
aaa
cmpl
xchg
inc
mov
dec
mov
pop
push
or
mov
add
or
movsl
aaa
cwtl
mov
sti
ljmp
push
jmp
pop
js
lods
mov
shlb
rcrb
lahf
jbe
fwait
je
jb
mov
and
js
jbe
jno
or
cltd
or
ret
sub
dec
mov
test
iret
add
pop
dec
loope
popa
or
mov
adc
ret
cmpb
testb
inc
pop
ret
push
stc
bound
add
mov
fwait
or
jne
outsb
ret
mov
push
add
xchg
gs
int
shrl
cmp
mov
ret
jb
mov
xor
dec
lock
rcrl
pushf
mov
mov
jo
mov
popl
test
jg
mov
mov
incl
jl
xchg
out
pop
aam
in
sarl
push
inc
call
push
adc
sub
jns
int3
push
or
add
mov
sbb
popa
push
movsl
leave
xor
jo
js
jnp
dec
xor
mov
mov
jne
pop
cli
cmp
push
loope
hlt
mov
pop
sub
push
sub
adc
push
and
test
and
add
jmp
xchg
cli
loope
push
in
push
lea
cmpsb
xchg
lahf
and
push
and
mov
push
xor
sbb
mov
sbbl
pushf
push
out
unpcklps
mov
les
xlat
cmp
mov
sbb
sbb
mov
jg
and
loopne
jnp
loope
or
fwait
or
lods
push
ficompl
loop
lods
dec
pusha
xchg
push
dec
xchg
add
bnd
sahf
adc
in
or
push
aaa
and
mov
mov
push
mov
xor
add
mov
or
inc
lcall
or
xor
fsubrs
ret
and
pop
sbb
mov
and
xchg
les
and
outsb
dec
dec
popa
and
inc
cmp
sbb
jne
sbb
sub
int
push
loope
pop
inc
sbb
pusha
popf
or
add
add
or
jmp
test
mov
inc
jo
xchg
orb
mov
jnp
add
add
mov
inc
sbb
testb
sub
mov
fwait
out
sub
dec
loopne
adc
dec
cmp
stc
add
add
movsb
or
dec
popf
sbb
ret
je
ret
jb
or
add
sbb
aas
pusha
pusha
mov
fmuls
fs
ret
cli
dec
or
je
jmp
loopne
out
mov
pop
and
fstps
inc
cmp
test
sbb
add
dec
int
shl
in
loopne
cmp
adc
mov
test
push
dec
sub
cmpb
jecxz
sub
loopne
xchg
scas
add
pop
sub
add
pop
mov
les
mov
inc
add
insb
sub
cmp
mov
jno
sbb
xchg
addr16
or
sbb
mov
add
sub
add
mov
inc
pop
pop
dec
out
jne
and
mov
add
mov
test
insl
adc
or
sub
sub
pop
lret
in
loopne
mov
fldenv
xlat
pushf
or
add
xlat
testl
xchg
test
iret
adc
push
jmp
dec
and
neg
push
jge
les
aas
jmp
inc
sbbb
and
add
adc
sub
arpl
cmpsl
mov
js
cwtl
push
xchg
call
pop
loop
ret
pushf
and
sub
je
insl
imulb
js
jl
lock
push
mov
mov
xchg
push
push
xor
xchg
add
jno
rolb
and
jbe
lods
addb
cmp
aaa
xor
roll
aaa
adc
mov
sbb
loope
fisubrs
mov
lea
popf
nop
xchg
movsl
push
add
xor
and
mov
inc
and
mov
lea
cmp
mov
sti
push
addl
adc
test
push
dec
add
add
mov
sub
sub
or
popa
pop
fwait
lret
jmp
testb
dec
or
push
push
arpl
xorl
mov
pop
dec
and
leave
in
mov
pop
shll
and
mov
jns,pn
push
shr
testb
pop
adc
inc
rorl
pusha
add
or
popf
subb
in
cld
add
in
add
into
and
cmp
cmp
and
lretw
push
in
shll
or
imul
add
repz
inc
mov
push
pop
adc
aam
cmp
pop
movsb
xchg
mov
xor
add
fsts
shrl
sbb
add
push
les
mov
or
les
pusha
loop
rclb
ss
scas
shl
outsb
and
mov
mov
js
dec
pop
bound
pop
xchg
icebp
pop
subl
inc
addb
adc
sub
or
nop
subl
xchg
pusha
ljmp
mov
push
jmp
pop
cmp
adcl
inc
pop
pushf
insb
daa
lock
adc
movsb
ja
movsl
sbb
pop
pusha
pop
iret
dec
add
or
mov
sbb
push
adc
in
push
rolb
mov
dec
and
arpl
rcll
mov
or
add
aas
fnsave
adc
add
jne
push
jmp
subl
jp
adc
jmp
ss
loop
add
add
add
sbb
mov
pusha
inc
jne
sub
je
push
xchg
push
push
and
dec
jg
sbb
mov
mov
adc
adc
fnstsw
adc
inc
xchg
jmp
sbb
mov
or
pusha
adc
sbb
sub
jg
mov
add
cmp
ret
jnp
inc
rolb
push
into
sub
adc
push
jo
dec
sbb
and
add
pop
push
sbb
repnz
xor
lods
and
push
test
and
popa
sub
sbb
inc
push
push
mov
cmp
out
dec
and
loope
push
push
bound
xchg
push
push
or
insl
jecxz
out
inc
inc
lcall
push
xor
adc
add
ja
inc
bound
sub
jbe
nop
mov
pop
sbb
inc
loopnew
cmp
aas
jne
push
sub
push
incl
jb
fwait
mov
test
fdivr
sub
inc
gs
fxch
add
pop
scas
xor
dec
pop
mov
fildl
sbb
dec
cmp
cwtl
push
aam
sub
aam
or
js
test
rcrb
jbe
mov
aaa
pusha
pop
mov
shlb
loope
dec
out
mov
mov
add
inc
lcall
or
jns
jg
call
or
mov
mov
ja
adc
pop
jns
xor
repnz
test
add
xchg
sbb
jge
adc
xchg
add
leave
jmp
test
xor
mov
pop
scas
mov
dec
add
pop
add
cmp
adcb
push
add
jno
mov
icebp
and
sbb
push
pop
dec
fimull
jo
inc
adc
stos
notl
jne
cmp
sub
cmp
mov
jmp
ds
ja
mov
cmp
push
inc
lods
lea
and
rclb
or
xchg
nop
out
xchg
mov
pop
xchg
push
adc
xchg
adc
aas
sbb
lret
add
sti
pop
shrb
scas
dec
cmpsl
jge
add
sbb
sbb
jl
call
mov
sub
xor
in
repnz
and
push
inc
and
push
outsl
add
repnz
fcmovnu
push
push
or
or
sub
inc
aad
int
pop
or
cmp
mov
inc
add
test
fidivrs
movsb
adc
xor
add
in
xchg
mov
adc
adc
xor
mov
push
xchg
xchg
xorb
sbb
adc
mov
rclb
mov
clc
sub
or
rcrl
dec
and
adc
loope
add
or
mov
jecxz
test
wrmsr
jne
mov
stc
cwtl
int3
sbb
push
pop
jne
popa
call
sar
push
mov
and
loopne
outsb
movb
mov
or
pop
daa
ss
stc
push
call
or
imul
in
sbb
and
add
std
mov
push
insl
mov
adc
or
xorps
jbe
mov
insb
or
pop
pop
cmp
outsl
xchg
je
sub
jmp
fmull
and
fwait
mov
iret
or
inc
mov
jmp
mov
int3
adc
jge
or
push
sub
fadd
inc
out
mov
pop
or
xchg
out
jl
outsb
jo
mov
call
push
imull
fs
insb
pop
pop
or
jno
xor
and
pop
cmp
js
lods
lods
mov
pop
or
or
cmp
or
arpl
into
adc
xor
push
xchg
lock
aad
mov
mov
mov
push
mov
cmp
push
shrb
sub
xor
pop
out
popa
pop
adc
push
call
xlat
fsubr
imul
mov
mov
push
add
andb
dec
shlb
dec
cmp
push
pusha
and
arpl
add
shrl
add
or
xor
in
jo
stos
in
xlat
push
pop
lret
dec
jnp
imul
mov
sub
add
sbbl
leave
xchg
sbb
or
jo
test
inc
push
sbb
pop
sbb
into
push
mov
adc
or
pop
inc
pop
cmp
push
mov
test
mov
in
add
inc
sbb
or
cmp
xchg
fs
push
fs
push
test
sbb
mov
add
hlt
ss
pop
je
add
sub
add
mov
mov
jo
or
add
push
dec
cmp
rcrb
push
gs
dec
push
cwtl
jnp
dec
adc
adc
sbb
cld
into
cmp
and
dec
jo
xchg
mov
jle
add
clc
push
daa
cmp
sbb
outsl
lds
xor
nop
repnz
test
xor
adc
movsl
int3
adc
push
jb
je
iret
jae
sbb
sarb
addb
inc
js
and
fs
testl
inc
add
and
xchg
pop
xchg
push
pop
js
mov
adc
leave
enter
inc
push
push
inc
sbb
xor
xor
mov
cltd
fcomp
mov
je
int
sub
pusha
pusha
inc
loope
rolb
pop
pop
mov
xchg
sbbb
and
test
and
push
push
sbb
cmp
lahf
aaa
add
sub
jnp
je
rorl
push
leave
adcl
ja
mov
xchg
test
mov
mov
fidivl
push
rclb
xchg
popa
push
je
pop
mov
fcomp
cmp
adc
das
lea
cli
push
bound
push
mov
dec
sub
sbb
shlb
shr
and
sub
rcl
push
lods
lock
push
fistps
leave
jp
jno
lock
fists
jmp
or
inc
sbb
lods
add
ret
pop
inc
into
js
mov
cmova
push
test
stos
adc
addr16
test
mov
jecxz
jge
cltd
push
or
cmp
xlat
inc
inc
fwait
lods
movsb
push
les
shrb
jecxz
push
clc
adc
dec
xor
adc
or
push
push
push
in
inc
jecxz
add
sbb
rcll
or
sbb
pushl
sahf
push
loope
out
out
adc
lahf
add
scas
dec
ret
negl
lahf
add
and
loope
pop
mov
inc
jle
mov
xor
xor
stos
jmp
mov
push
in
mov
jo
dec
stos
inc
cmpsb
test
xchg
sbb
sbb
punpckhwd
mov
out
mov
mov
adc
or
mov
outsl
mov
and
and
sub
or
loope
xor
sbb
and
stos
or
cmp
push
push
xor
cmpsb
sti
inc
jmp
subb
rclb
mov
inc
inc
push
rcrb
out
adc
imul
add
add
imul
nop
insw
int
and
pop
addb
jns
push
jbe
dec
cmp
inc
add
mov
push
mov
pusha
sub
lods
bound
adc
adc
push
xchg
jne
sbb
add
imul
les
rorl
push
push
inc
and
jb
push
jns
int3
stos
mov
xchg
ljmp
rorb
fisubl
or
shlb
push
add
adc
sub
imul
mov
pop
fnstenv
mov
fs
jl
mov
add
push
es
xchg
mov
cld
sbb
xorl
cmp
push
scas
jb
or
mov
inc
xor
int3
fcompl
fcmovnb
test
and
sbb
mov
mov
inc
shlb
cmp
lock
sub
jg
imul
outsl
push
mov
int3
jl
in
cmp
out
imul
lds
inc
xchg
xorb
jmp
lcall
dec
mov
sbb
cmp
mov
sbb
mov
sbb
dec
sbb
adc
cwtl
movntps
pop
mov
outsl
je
pusha
push
xor
or
xor
push
ss
jmp
sbbb
and
dec
stos
jno
push
pop
xor
in
mov
sahf
push
dec
add
inc
mov
xchg
jne
sbb
repnz
dec
mov
inc
inc
pop
mov
pop
or
or
sbb
xlat
icebp
pop
mov
in
sub
xor
or
ss
mov
inc
mov
jl
or
or
or
shll
adc
jbe
sub
xchg
pop
insb
daa
mov
sbb
dec
movb
push
aas
je
pop
add
sbb
outsl
cmp
aaa
jne
arpl
loope
ss
push
and
pop
clc
push
mov
jns
and
cmp
adc
push
pop
or
stc
ljmp
cmp
push
dec
sbb
cmc
cmovb
lock
jmp
stos
add
adc
sub
sbb
and
stos
mov
dec
xchg
clc
cmpsb
mov
pop
add
pop
add
pop
inc
xchg
mov
mov
test
popa
push
test
ljmp
hlt
xor
jns
jne
je
sub
cmp
pop
lds
or
lea
xchg
fildl
ficoml
stos
aam
add
sahf
add
lret
xchg
push
imull
mov
push
fdivrs
push
je
outsl
jo
dec
jl
inc
cmp
repz
push
in
ja
xchg
adc
mov
out
outsb
adc
imul
adc
scas
bnd
mov
test
hlt
cmpsb
push
ds
fistl
dec
loope
sub
add
or
pushf
in
push
lret
xor
jle
cmp
push
cmp
aad
xchg
or
xor
out
dec
jl
and
data16
push
aaa
add
xchg
xchg
mov
xor
add
xor
push
xor
cmp
and
out
adc
push
push
push
push
xor
sbb
pop
push
jne
ss
add
push
or
popa
adc
inc
dec
jns
xor
add
imul
adc
fs
rol
xchg
xchg
pusha
adc
test
pop
es
mov
xor
jl
out
sahf
out
cmp
int3
aad
sub
add
pop
push
lret
xchg
insb
and
sub
jmp
sbb
xchg
dec
sbbb
je
rol
pop
out
mov
adc
cwtl
sub
mov
and
jae
inc
pop
push
push
inc
push
xchg
into
cmp
mov
fbstp
pushf
push
scas
imul
push
mov
rclb
xor
jnp
mov
inc
gs
push
js
and
mov
push
jns
jl
lock
adc
fmul
xchg
inc
cmp
jne
pop
movsb
popa
and
mov
or
mov
or
pop
adc
mov
add
or
or
and
cltd
ret
mov
sbb
iret
mov
shrb
mov
add
cmp
cmp
in
movsb
jb
add
fucom
cmp
xor
les
mov
pop
or
xor
pop
leave
fisubl
sarl
jl
je
nop
outsb
jns
adc
pop
xlat
mov
push
adc
sub
adc
xor
mov
push
push
and
inc
rclb
xchg
push
adc
test
lea
aas
inc
push
je
cmp
clc
xorb
mov
cmp
in
sbb
rorb
mov
mov
sub
insb
sbb
or
jl
adc
rclb
ret
fstl
ficomps
jle
aad
xchg
cmp
add
andl
add
loope
xchg
cmpsl
adc
mov
imul
test
sbb
sub
test
push
sbb
inc
mov
jecxz
in
adc
inc
and
mov
scas
pop
cmpsl
xor
ds
xor
jmp
cltd
push
mov
mov
add
xchg
ds
sahf
dec
imul
or
test
xchg
pop
and
imul
jp
je,pt
add
xor
pop
movl
adc
sbb
jmp
scas
dec
cmp
fisttpll
daa
xor
add
xchg
jmp
imul
add
imul
mov
dec
mov
inc
add
sbb
outsl
mov
pop
shrb
insl
lods
std
ja
pusha
xor
sbb
leave
pop
test
ja
addr16
aad
dec
js
mov
mov
add
out
add
jae
and
fisubrs
inc
dec
sti
jo
xlat
xchg
adc
test
add
or
add
test
outsb
add
jb
dec
and
and
fs
jns
cmp
jle
or
push
xchg
and
inc
jmp
push
dec
aas
inc
jb
pop
sub
push
and
mov
enter
iret
cs
jb
inc
or
and
sub
pushf
das
push
clc
dec
mov
mov
pop
lea
ret
orb
in
xchg
mov
cltd
xchg
les
xchg
mov
testl
jge
aaa
dec
fists
lods
popf
dec
in
stc
repz
inc
or
movups
mov
test
popa
sbb
or
shrl
cmc
lahf
aam
mov
jne
add
mov
enter
or
call
pop
mov
add
pop
shrb
sbb
mov
inc
jecxz
cmp
subl
push
pop
dec
sbb
add
mov
dec
ror
arpl
scas
pop
push
push
cmp
xchg
js
pushw
dec
adc
inc
add
aam
imul
aam
add
push
fwait
movsl
fnsave
mov
test
inc
ret
and
shlb
sub
in
jp
loope
pop
subl
lods
imul
or
push
fdivrl
and
fnsetpm(287
sbbl
movsb
cmp
mov
dec
add
push
test
in
mov
pusha
outsb
lret
add
xor
jo
mov
add
jb
push
dec
ror
sbb
xchg
sbb
add
mov
add
cmp
pop
out
jne
push
jne
test
mov
sbb
test
test
jno
or
mov
and
imul
daa
jne
ds
or
icebp
in
or
test
sbbl
ljmp
push
mov
cmp
xlat
push
fdivrs
fldt
lea
mov
xor
jbe
mov
faddl
lods
inc
sbb
pushf
or
mov
test
mov
sbb
test
punpckhbw
loop
push
mov
cltd
test
lods
xchg
sub
outsl
mov
sbb
test
pop
xchg
les
sbb
xor
dec
push
dec
push
stos
cmpsb
mov
ret
outsl
mov
mov
scas
add
sub
push
shlb
mov
sahf
in
or
mov
jnp
jg
xchg
add
aad
movsb
mov
and
xchg
add
and
popa
jmp
sub
ficoml
dec
out
pop
add
sbbl
inc
and
push
sub
mov
push
les
test
das
adc
nop
shr
daa
jg
jo
and
push
push
jns
mov
cmp
mov
sahf
repnz
add
sbb
add
popf
mov
push
add
sbb
jg
dec
mov
push
cmp
andb
pusha
fstps
add
push
sbb
sbb
push
fs
add
inc
sub
stc
or
lods
test
add
imul
jne
pop
cmp
imul
pop
mov
pop
and
arpl
pusha
or
mov
std
pop
repnz
jne
lret
sahf
push
push
pushf
sub
roll
mov
pop
sbb
push
lea
inc
pop
xor
mov
mov
js
ja
mov
je
add
inc
test
mov
and
mov
dec
dec
mov
lahf
ljmp
or
mov
aas
add
outsl
or
dec
and
jmp
cmp
sbb
dec
into
or
das
mov
enter
push
cld
rolb
jmp
ja
cwtl
mov
push
inc
bound
push
inc
loopne
pop
inc
xchg
adc
mov
adc
test
add
lret
push
lcall
sub
push
add
andl
ja
pop
or
add
leave
add
push
or
xor
inc
loopne
fidivrs
arpl
jne
sub
pop
push
mov
mov
xor
sbb
idivb
mov
stc
repz
fistpl
mov
sub
mov
test
lahf
adc
xchg
xor
push
lods
inc
daa
xor
or
cmc
and
daa
es
push
rorl
add
sub
stos
inc
xor
sub
cld
insl
jecxz
or
mov
sti
add
cmpb
push
shlb
xchg
xchg
add
adc
push
test
dec
sbb
outsb
or
cmp
sub
pop
or
dec
mov
decl
mov
into
xor
or
imull
adc
pop
out
rcll
xlat
xchg
and
cmpb
push
and
les
and
ja
dec
loop
inc
xor
fdivs
and
adc
add
lock
xlat
push
inc
dec
or
gs
movsl
push
cmp
adc
cmpsl
lods
adcl
andb
or
pop
movsb
movsl
je
sub
mov
push
test
data16
mov
orb
or
int
dec
shl
or
push
test
sub
movsl
aaa
mov
adc
ds
sub
inc
xlat
rdmsr
mov
cmp
mov
push
outsb
adc
jle
inc
xchg
xchg
sub
adc
aaa
repnz
repz
jne
jle
movsb
dec
push
push
and
mov
mov
add
or
fmull
mov
rcrl
inc
push
adc
call
sbb
cld
rcrb
push
push
push
mov
or
sbb
add
push
pop
ds
push
pop
jp
int
or
loopne
test
mov
inc
add
sbb
sti
mov
or
mov
insb
or
xchg
jecxz
popa
adc
cmp
mov
cmp
jne
push
mov
push
push
pusha
adc
jmp
adcb
push
push
push
and
push
je
push
push
je
iret
push
adc
inc
and
jge
xor
mov
and
and
add
or
mov
pcmpeqd
inc
sti
inc
adc
repz
xchg
mov
js
es
popf
xlat
adc
sub
es
imul
dec
push
xchg
aad
push
mov
jns
push
dec
push
lods
adc
mov
add
sub
lock
and
push
ja
loope
aad
xchg
rcll
lea
sub
es
enter
adc
sub
inc
cmc
shlb
jbe
push
mov
lods
cmp
bound
jns
cmpsl
cmp
fsubrs
adc
xor
shrb
push
jecxz
xor
fbstp
aaa
push
inc
aas
cmc
sub
out
ret
push
push
test
mov
xor
fidivrl
mov
gs
sbb
dec
and
shll
ss
xchg
stc
sahf
in
enter
dec
subl
or
sarb
cmp
loopne
es
sub
test
in
dec
pop
jp
push
mov
mov
lahf
inc
cltd
movsl
mov
xor
cmpl
cmpsb
mov
mov
pop
rclb
mov
adc
lret
and
xchg
pop
jp
sub
jmp
xchg
shlb
cmp
repz
icebp
sahf
mov
sbbb
lcall
sbb
js
push
xor
imul
shlb
inc
loopne
or
pop
or
mov
sbb
xchg
roll
pop
inc
jp
sbb
or
sarb
es
inc
pop
iret
repz
pop
imul
add
pop
loope
out
pop
testl
sbb
and
add
fldt
mov
insl
push
je
xor
inc
push
xor
inc
sub
insl
xor
jnp
jb
loop
inc
or
aas
inc
test
and
scas
and
dec
clc
sub
xor
mov
testl
xchg
xor
movsb
cmpsb
jns
fadds
push
popa
or
and
out
push
imul
pop
dec
sti
enter
sub
mov
add
or
orb
or
ret
adc
or
rclb
fisubl
jb
mov
loope
rol
aas
jns
popa
mov
adc
ret
xlat
sbb
push
inc
or
lds
fwait
ret
push
mov
fadds
inc
flds
cmp
adc
into
loopne
cmp
pusha
loope
loopne
stos
xlat
and
in
rorl
fsubrl
xchg
imul
aam
movsb
cmp
rcll
incb
dec
add
mov
dec
add
insb
inc
or
sbb
scas
movsl
iret
mov
push
cmpsb
pop
adc
repz
sbb
xor
cwtl
pop
or
push
pop
push
mov
sub
inc
adc
orl
aas
shll
jl
add
sar
mov
xor
gs
inc
sub
adc
mov
test
push
icebp
dec
and
pop
xchg
xor
aas
pop
ja
push
adc
mov
call
pop
test
cmc
test
in
dec
rol
fsubr
mov
cli
sbb
sbb
mov
mov
sarb
insl
add
or
aam
xchg
mov
call
jbe
push
jg
pop
fildl
lea
or
mov
push
mov
fwait
push
push
fwait
pushl
shll
test
adc
add
sbb
xor
sarl
sub
push
daa
js
imul
je
clc
push
gs
imul
or
xchg
add
jno
sub
add
shlb
jmp
arpl
jb
hlt
jmp
push
add
lods
and
mov
sbb
sbb
mov
into
add
cmpsl
lea
bound
sub
add
lea
jns
add
gs
fisttpl
push
rdpmc
and
dec
scas
or
enter
xor
test
adc
in
xor
and
mov
je
push
dec
notb
push
ret
xor
jecxz
jmp
rolb
stos
add
jmp
jne
std
sbb
mov
xor
in
add
xchg
adcl
jns
sbb
jne
pop
xchg
add
push
outsl
in
push
outsb
dec
call
xchg
jmp
cld
out
sbb
insl
add
sbb
cltd
and
or
mov
sahf
lret
xchg
cmpsl
xor
add
xchg
dec
fildll
mov
mov
lea
lea
mov
bound
loop
lea
lcall
mov
fsubl
or
das
enter
mov
jne
adc
enter
lds
sub
ret
sub
mov
shlb
cltd
dec
shll
jg
fisttpl
sbb
dec
sahf
jecxz
addb
push
lcall
mov
dec
adc
sbb
fwait
adc
xor
mov
sub
or
dec
sbb
inc
lods
out
dec
ljmp
inc
xchg
lahf
or
xchg
cmpsl
fisubl
sbb
popa
and
mov
xor
out
arpl
xor
leave
jg
push
leave
cmp
insl
pop
jbe
inc
ljmp
inc
push
add
pusha
shrb
cmc
les
push
or
or
lea
mov
test
inc
or
push
negl
cmpsl
dec
out
addl
mov
inc
or
add
lret
xor
xor
jae
fstpt
dec
ja
test
outsl
enter
add
cwtl
sbb
jne
pop
add
add
sbb
and
inc
sbb
pop
push
or
enter
adc
incl
and
mov
xor
mov
dec
xor
dec
push
cwtl
pop
push
adc
xlat
mov
addb
orl
sbb
push
adc
inc
cmp
xchg
and
sbb
adc
sahf
out
mov
xor
pop
xchg
push
xor
fs
add
pop
mov
xor
add
adc
jb
and
sbb
mov
push
dec
mov
sub
adcb
dec
jns
dec
outsl
or
mov
xchg
push
sub
or
xor
add
push
inc
push
in
dec
dec
in
xor
sub
xor
and
push
xchg
adc
repz
sahf
jl
push
lock
cmp
push
sbb
mov
jb
out
jecxz
mov
inc
or
sub
or
or
or
xor
decl
or
les
dec
roll
arpl
jb
mov
jo
shll
movsb
in
jbe
stos
dec
test
sub
addb
add
sti
push
jbe
arpl
adc
scas
push
jb
jo
sub
ror
call
shl
sahf
push
into
and
fcoms
push
sbb
or
mov
jmp
adc
incl
cmpsb
sub
cmp
push
xor
sub
push
xchg
mov
dec
inc
xor
int
sbb
sub
inc
sahf
cmpsl
and
jge
bnd
sbb
insb
sbb
xchg
popa
add
adc
pop
inc
lahf
ret
push
mov
ficompl
dec
adc
fidivs
frstor
cmp
push
add
and
fdivl
push
sub
pusha
adc
lret
add
dec
aas
mov
aam
sbb
ret
fadd
push
jmp
das
pop
popa
imul
in
sbb
mov
movsb
dec
popa
inc
dec
mov
outsb
dec
and
popl
mov
lods
imul
add
adc
add
pusha
repnz
sbb
cmp
popl
adc
and
or
adcl
adc
push
pop
mov
pop
pop
dec
or
cmp
or
mov
js
and
aaa
mov
jne
dec
jnp
sub
cmp
pusha
ficomps
push
imul
in
pop
rcrb
enter
popa
cmp
aad
sub
add
call
or
dec
add
add
mov
nop
pop
fdivs
rclb
ja
add
sbb
cmp
or
inc
add
and
int3
out
orl
loop
cmp
pop
clc
lea
push
jp
adc
jae
and
mov
jne
cmp
pop
mov
add
push
addr16
movl
andb
push
shl
sub
push
mov
sub
mov
xchg
dec
dec
push
mov
leave
inc
dec
sub
cmp
ret
sub
jnp
xchg
jo
sub
movsb
adc
adc
in
add
sbb
loopne,pn
and
movsb
sbb
jns
pusha
cmp
add
push
push
cmp
add
sbbb
insl
sbbb
dec
and
sub
and
and
pop
push
push
and
push
or
or
pop
mov
jb
js
ja
mov
sbb
xchg
pop
pop
push
jb
fdivrl
sbb
xchg
stos
loopne
mov
jns
adc
cmc
sbb
cs
mov
mov
cmpsb
scas
in
insl
cmc
dec
add
inc
push
inc
cmp
stc
aas
push
cmc
and
test
xor
test
adc
adc
fsubs
pop
cmpsb
jge
push
rorl
xchg
mov
popa
test
push
inc
xchg
loop
dec
repz
andl
or
add
rcrl
inc
jl
jo
out
inc
push
adc
je
mov
pop
fcompl
fucomp
add
pushf
aad
or
cld
cld
movsl
pusha
adc
cmp
jb
inc
decb
test
adc
sbb
ret
bound
inc
and
xor
push
jae
mov
fwait
xlat
inc
push
je
xor
icebp
cmp
dec
arpl
sub
das
leave
adc
jmp
stc
mov
fwait
xchg
lea
inc
addr16
sub
sbb
jmp
mov
sub
push
data16
push
jbe
xchg
dec
nop
stos
mov
pop
mov
xor
dec
mov
add
mov
xor
inc
mov
adc
xor
ret
loop
jecxz
jge
cld
out
sub
or
js
int3
mov
lea
dec
adc
mov
outsl
inc
or
and
sarb
sub
test
test
pop
imull
loopne
dec
mov
ror
push
loop
and
jl
mov
adc
mov
mov
mov
mov
cltd
mov
sbbb
stos
js
jge
sbb
cltd
sub
cs
xor
mov
arpl
mov
mov
cmpsb
fadds
sbb
xor
push
fnsave
cmp
pop
call
test
mov
sbb
and
insl
adc
fiaddl
stos
or
inc
mov
sbb
cli
mov
sahf
out
jecxz
mov
mov
mov
push
sub
mov
rcrb
pop
repz
adc
sbb
add
fcomps
xchg
xor
movsb
mov
das
or
add
jge
jnp
cmc
add
repnz
xor
push
inc
rolb
mov
call
orb
mov
add
or
pop
or
xchg
lods
cmp
fwait
adc
addb
xchg
dec
pop
nop
inc
out
jmp
add
pop
and
and
mov
loope
mov
push
jp
push
rcrb
outsb
push
insb
add
outsb
adc
das
push
mov
addr16
sub
cmpb
mov
sub
sbb
adc
xor
outsl
push
xor
mov
push
adc
jno
popa
test
jmp
sbbl
add
outsb
push
fisubs
and
mov
fsubl
test
mov
and
or
inc
mov
cwtl
in
adc
fcmovnb
movsb
ret
inc
mov
ret
scas
xor
mov
test
push
les
lahf
mov
xor
xchg
stc
and
mov
add
adc
divb
nop
bound
ret
enter
or
inc
test
mov
aad
outsb
pop
sbbb
shl
int
outsl
push
stos
in
ret
lods
push
push
cmp
jmp
adc
ret
adc
in
sahf
adc
sub
mov
xchg
add
call
ret
subl
inc
adc
xor
jnp
push
jae
sbb
xchg
add
dec
in
test
sbb
add
mov
inc
dec
pop
js
inc
add
test
xchg
dec
sbb
xor
and
out
push
pop
add
or
or
popa
shll
pop
test
iret
mov
mov
inc
pop
pop
cmp
push
dec
add
cs
inc
fst
push
mov
lock
xlat
pop
ljmp
xor
out
mov
lcall
lahf
fbld
pop
and
mov
and
xchg
pop
lods
xor
or
in
push
push
shlb
aad
push
push
jb
imul
inc
xor
inc
out
popf
dec
mov
sbb
inc
push
test
and
inc
gs
xchg
inc
leave
inc
jmp
pop
or
cli
xchg
lods
push
sub
in
mov
sbb
inc
movsb
and
xchg
or
add
lea
add
shlb
dec
xor
push
nop
sbb
pop
stos
mov
sbb
or
addr16
fldcw
or
jecxz
inc
icebp
dec
push
ss
pop
ja
xchg
lds
add
and
cltd
and
lcall
ret
dec
or
push
fldz
fcomp
and
cs
in
fstp
push
rorl
sbb
popa
adc
int
cmpsb
push
cmp
or
aad
sbb
addl
out
push
add
stos
jnp
cmp
add
mov
xchg
add
jns
popa
sbb
movsl
or
pop
jecxz
pop
cs
enter
adc
adc
push
or
inc
mov
mov
pushaw
shll
sbb
jmp
xorl
pop
add
test
lea
rolb
cmp
movb
dec
xchg
shll
mov
push
jo
out
xor
das
sub
add
subl
and
push
das
pop
ds
adc
mov
inc
inc
mov
inc
shr
mov
xor
inc
mov
sbb
mov
pop
jb
xchg
push
popa
jae
popa
cmp
test
in
xor
pusha
mov
xor
mov
mov
cmp
push
jl
shlb
outsb
pop
outsl
jo
mov
dec
add
xor
inc
push
lock
xor
leavew
jo
xchg
jbe
add
jbe
imul
or
sbb
lret
cmp
test
adc
or
inc
test
repz
scas
cmpsl
and
push
icebp
ret
test
js
xor
shr
in
cmp
ja
outsl
filds
add
es
push
add
add
aaa
inc
cmpsl
scas
insl
pop
and
sub
adc
imul
push
loopne
push
sub
and
add
dec
movsl
and
adc
imul
sub
lds
push
sbb
xor
popa
lret
je
arpl
inc
mov
sbb
mov
push
sub
movhps
aad
sub
cmp
jmp
and
push
jmp
add
mov
imul
fwait
and
fnstcw
inc
dec
push
push
cmp
or
adc
cmp
pusha
jl
mov
ror
popa
inc
push
adc
sub
push
adc
popf
add
imul
lock
push
shrd
sbb
jmp
dec
and
mov
sub
in
or
and
mov
sbb
in
js
mov
xchg
mov
push
mov
movb
pushf
les
pop
ret
add
xchg
shll
lods
sub
add
sbb
xor
pop
mov
adc
js
push
js
outsb
add
aad
sub
and
and
push
mov
dec
daa
mov
test
adc
add
add
or
or
lret
dec
movsl
mov
aam
push
cltd
pop
inc
or
or
sub
popa
xchg
push
and
pusha
mov
pop
add
adc
pop
movb
popf
sub
sbbb
pop
mov
cwtl
inc
inc
jge
mov
xor
movsb
xchg
or
pop
sbb
sub
pop
shll
pop
jne
adc
and
lcall
dec
or
add
push
xchg
and
adc
mov
clc
mov
sub
sub
inc
push
pop
faddl
xor
bound
push
inc
mov
xchg
push
and
ficoml
jb
imul
pop
ret
mov
sub
dec
sbb
inc
and
mov
mov
mov
lahf
lea
into
ret
inc
inc
add
and
cltd
xchg
cmp
loopne
pop
pop
loop
rcrl
bound
pushf
cmpl
inc
jae
mov
inc
adcb
xor
adc
and
or
jo
add
out
or
xchg
fnstcw
push
stc
push
xlat
push
lea
popa
mov
and
nop
mov
add
and
ja
add
inc
pop
dec
out
loopne
mov
mov
or
mov
add
sbb
popf
dec
movsl
sbb
cmp
je
jmp
and
jp
adc
fidivl
sub
sub
into
in
lds
dec
mov
jmp
sbb
lcall
fcmovne
popa
push
call
and
lds
imul
add
pop
adc
or
jo
nop
into
push
dec
lahf
xchg
xor
add
or
inc
adcb
imul
das
dec
xchg
push
mov
pop
sub
mov
negl
xor
mov
and
sub
add
mov
rcl
adcb
pop
sub
lock
call
dec
push
push
je
jmp
sbb
adc
sub
pop
inc
inc
adc
add
push
sub
scas
in
add
sbb
jbe
jb
inc
cs
mov
aam
sbb
xchg
mov
sub
and
mov
out
xchg
jb
inc
adc
sbb
pop
push
nop
hlt
jo
cmp
inc
sbb
pop
addr16
mov
mov
dec
dec
push
sbb
insb
adc
fisubrs
jne
inc
adc
fstpl
fimuls
mov
sub
pop
jbe
inc
cmovle
cltd
dec
and
add
jge
sbb
insb
inc
push
add
xor
jmp
and
movsb
or
popa
nop
mov
mov
and
pop
int3
add
test
add
or
adc
inc
adc
and
inc
sbb
imul
add
pop
cmp
dec
inc
or
dec
add
dec
pop
fbstp
adc
lret
das
push
inc
test
and
test
dec
and
out
lock
into
mov
xchg
xchg
orl
testb
je
fistpll
push
test
lea
jne
pop
push
rclb
je
jl
mov
push
inc
mov
orl
in
or
mov
outsl
lret
xor
test
or
or
xchg
lods
adc
shlb
xchg
je
push
cmp
pop
xchg
pop
inc
stos
or
add
jg
mov
dec
or
push
stos
aas
xchg
mov
push
mov
mov
sub
inc
xor
movsb
rclb
add
push
loope
insl
and
addr16
add
lds
xchg
xchg
fisttpl
and
fnstcw
test
rorl
mov
push
scas
sbb
xor
mov
pop
xchg
jne
xchg
rol
fcmovnb
pop
xor
dec
push
pop
mov
push
cmpsb
stos
lods
pop
lods
sbb
and
pop
dec
scas
push
adc
push
test
push
or
or
daa
lahf
add
ret
push
add
push
adc
xor
dec
sub
push
arpl
push
push
cmp
inc
out
shrb
and
loope
dec
call
pop
cmp
sub
cmp
lret
and
dec
jae
mov
test
pop
mov
cmp
sub
push
scas
dec
add
sbb
adc
ret
lret
stc
aad
cli
dec
inc
ret
mov
imul
ss
add
jp
xlat
xchg
cli
push
mov
push
push
push
xchg
lods
ja
dec
xor
popl
roll
add
mov
adc
daa
push
lret
cli
ret
dec
dec
jl
paddd
push
aas
stc
push
aaa
mov
add
xchg
and
es
sub
cmp
rolb
inc
sbb
cmpl
rcll
fdivl
pop
insl
xor
fdiv
test
dec
mov
xor
mov
enter
sbbl
or
and
adc
dec
subl
push
xor
push
test
das
aaa
cmpsb
push
jl
sub
loopne
arpl
lcall
push
inc
in
pop
cmpl
mov
adc
or
pop
cltd
daa
pushf
xor
cltd
mov
push
lret
xchg
mov
negb
pusha
out
mov
xchg
in
add
les
xlat
xchg
inc
sub
mov
adc
sbb
jnp
testl
cwtl
pop
int
lock
lea
sbb
jno
sbb
fmuls
movl
and
push
lea
xor
xchg
enter
xchg
xor
mov
or
js
adc
jl
jbe
sub
and
std
push
push
adc
xor
sbb
or
ret
adc
push
adc
mov
dec
sub
lea
sub
xchg
hlt
scas
jae
in
push
xorb
fistpl
lea
cmpsb
mov
or
and
add
dec
sbb
sahf
cmp
mov
cltd
insl
cs
out
push
cmovno
and
loopne
pop
mov
stc
sbb
lret
pop
cmc
push
xor
ss
push
push
mov
or
sbb
dec
in
ret
mov
ss
add
pushf
lret
ret
ret
push
out
add
pop
dec
gs
or
dec
push
cmp
jo
ds
test
dec
or
mov
leave
jnp
mov
js
push
cmpsl
orl
outsl
pop
dec
out
shll
add
push
inc
xor
pop
iret
int3
mov
test
inc
cs
imul
inc
lods
push
fcoml
jb
or
or
add
push
in
loopne
jb
dec
in
andl
int3
sarl
loop
xorb
pop
xchg
fmull
cmpsb
movl
sbb
mov
dec
dec
mov
ret
push
leave
mov
xor
lcall
xor
ret
scas
sbb
inc
inc
add
cltd
out
mov
xchg
jo
inc
test
cmp
mov
or
dec
xchg
xchg
inc
stos
push
or
into
das
loopne
les
inc
dec
pop
pop
orb
and
mov
orl
push
cld
and
mov
inc
ss
repnz
mov
pop
xor
mov
or
mov
cmp
xor
adc
mov
push
dec
dec
and
pop
enter
enter
insb
inc
pop
insb
adc
cmpl
add
add
fwait
sub
aam
andb
loopne
lea
insb
add
cmp
xor
push
test
in
push
nop
jp
loope
fadd
jecxz
add
fwait
xchg
jns
or
incl
arpl
xchg
adc
mov
xchg
enter
enter
mov
dec
popf
or
cmp
inc
mov
mov
data16
pop
sbb
cwtl
aam
jae
sarb
jecxz
xor
xlat
mov
cmp
sbb
popl
je
xchg
lds
out
or
add
es
push
movsb
push
dec
mov
dec
pop
subl
pop
inc
add
mov
mov
xchg
test
push
or
add
pop
test
gs
adc
fcmovnu
shll
mov
sti
inc
cmpsl
fnsave
mov
adcl
add
ja
ja
movsb
adc
push
push
adc
push
and
lea
loop
cmpsl
dec
add
jno
dec
push
dec
adc
xor
add
mov
sub
push
popa
daa
cmpsl
adc
xchg
jbe
adc
jo
lock
loopne
jbe
pop
and
pop
adc
sbb
jp
or
inc
bound
dec
push
jne
fidivs
or
cwtl
fisttpl
jae
loop
push
inc
orb
mov
rcl
pop
stc
add
pop
rclb
leave
testb
lods
jo
ds
jno
insb
ret
cmpb
push
xor
adc
mov
js
ss
jbe
daa
jbe
dec
push
cmp
pop
push
fbld
cmp
adc
wbinvd
xor
or
lea
lea
xorl
inc
xorb
sidtl
mov
jae
push
mov
addr16
out
es
loopne
fcmovb
in
and
mov
pushf
fistl
inc
mov
sub
mov
movl
std
jle
inc
mov
add
add
xor
add
stos
insl
and
add
movb
movsl
add
and
sbb
test
xor
xor
imul
sbb
pop
loop
adc
or
mov
mov
sbb
scas
mov
or
xchg
mov
inc
jns,pn
add
fs
jno
or
out
xor
pop
scas
arpl
or
inc
mov
or
mov
negb
ja
in
sahf
jl
je
adc
sbb
cmpsl
mov
xor
and
mov
int
dec
sbb
popf
shl
push
jmp
stos
dec
leave
sbb
push
xlat
pusha
or
jge
mov
jmp
lea
add
leave
jnp
ret
mov
sbb
pop
cmp
push
and
dec
inc
test
sbbb
test
test
sub
test
loope
dec
pop
mov
ret
xor
dec
movsl
mov
in
and
jb
sub
test
popa
cmp
adc
jl
in
jecxz
orl
cmp
sbb
lea
or
inc
sub
sbb
pushf
lcall
sarl
push
cmc
adc
dec
and
or
xlat
je
xchg
decl
add
movl
mov
adc
push
dec
push
pop
inc
xor
add
stos
add
cmp
movsb
outsl
push
push
adc
add
add
int
imul
mov
scas
inc
and
or
sbb
lds
sbb
shl
clc
je
popa
inc
negb
jge
bound
pusha
and
into
call
test
sbb
sbb
cmovno
sub
ss
jle
pop
insb
and
inc
pusha
dec
out
mov
mov
adc
movsb
dec
xchg
fsubl
aas
push
xchg
cld
cmp
adcb
pop
sub
pop
sarb
nop
add
in
mov
fdivr
or
push
pop
sbb
addr16
xor
cmp
add
lea
loope
rcl
into
dec
mov
sub
jne
cmp
out
mov
sub
jae
xor
lods
xchg
inc
pop
ja
adc
sbb
inc
pop
lret
sub
adc
or
xor
es
test
pop
bound
push
sbb
pop
jae
xchg
mov
jnp
ja
mov
sub
pop
xchg
sahf
adc
and
inc
and
loope
or
dec
adc
push
out
cltd
or
jle
lea
lods
sub
insl
ljmp
cs
stos
mov
rol
mov
mov
adc
inc
adc
jno
subb
and
mov
push
cmp
sbb
dec
add
push
lock
pusha
fs
mov
pop
push
ss
inc
mov
add
lea
mov
sarl
int3
nop
add
mov
andl
or
xchg
lahf
dec
pop
push
mov
mov
pop
mov
insb
jo
pop
mov
and
or
mov
nop
or
mov
maxps
cmp
pop
xor
add
mov
je
in
jno
add
sub
push
sbb
repz
sub
push
add
inc
or
mov
jmp
movsl
mov
mov
dec
movsb
cmp
mov
xchg
js
popa
jbe
nop
adc
sub
ljmp
xlat
mov
rcrl
js
inc
iret
cwtl
jl
inc
pop
ds
shlb
cmp
jl
xor
movsl
inc
lds
int
xor
or
and
cmp
ja
mov
pop
xor
add
mov
nop
test
imul
shll
es
sub
mul
ja
mov
xchg
stos
in
jns
or
inc
xor
bound
mov
cmp
push
cmp
sbb
xchg
dec
insl
mov
addb
fmuls
inc
and
pop
sub
dec
mov
insb
mov
aad
xchg
mov
mov
or
ret
pop
cmp
pop
scas
mov
cmp
test
cmp
push
xlat
data16
fdivs
xchg
mov
mov
out
sti
dec
cmp
sbb
adc
stc
push
pop
das
icebp
add
loope
jle
insb
mov
add
jl
das
push
insl
mov
or
mov
sahf
lods
add
cmp
jg
mov
mov
adc
mov
jne
ss
cmp
jge
insl
cld
ljmp
mov
sbbb
jp
add
push
rcll
nop
xlat
sbb
cmp
add
sub
sbb
inc
inc
jmp
sbb
sub
cs
pop
push
push
push
xor
movsb
sarl
adc
in
and
jecxz
add
add
and
test
sti
push
mov
dec
inc
ljmp
ror
pop
movb
add
push
inc
cmp
pop
rolb
xor
dec
pop
push
or
push
mov
xchg
push
stc
sub
data16
test
sub
clc
inc
push
add
mov
push
push
sub
dec
in
mov
rcr
push
add
adc
cmp
or
inc
cmp
jb
out
add
loop
push
add
dec
dec
xchg
jl
jne
mov
scas
inc
leave
imul
inc
loop
dec
je
pop
add
fcoml
movsl
shll
sbb
push
aaa
lea
fisubs
mov
nop
imul
subb
add
inc
ret
xor
mov
push
pop
or
test
dec
mov
push
pop
jne
xchg
pop
xlat
insl
cmp
pusha
outsl
adc
je
dec
leave
sub
jle
sbb
cmpsb
and
fsubs
jne
decl
outsb
fistl
out
fildll
pop
sbb
inc
mov
andl
je
loop
arpl
mov
inc
pop
cmp
or
call
cli
push
adcb
daa
dec
pop
xchg
mov
sub
mov
fs
pop
test
ret
rcll
dec
insb
push
stos
add
cli
test
pop
hlt
mov
cmp
and
add
sub
jl
mov
sub
jne
mov
push
push
and
repnz
jge
mov
add
inc
int
push
pop
sub
xchg
sub
loope
cmc
and
jo
or
unpckhps
aam
cmc
add
dec
enter
pop
pop
int3
stc
add
inc
int3
cmp
xchg
sub
fiadds
sbb
dec
mov
push
adc
sbb
or
mov
adc
mov
rolb
ret
sbb
mov
enter
mov
repz
sbb
push
jno
daa
adc
mov
mov
test
and
scas
add
xlat
je
push
scas
mov
jb
push
xchg
shrb
icebp
xorl
and
xor
or
add
xchg
sub
xor
insl
out
dec
push
add
cltd
inc
fadds
ss
or
dec
lods
ficompl
es
inc
sbb
ret
mov
pop
xchg
push
lret
push
and
dec
pusha
push
sub
dec
mov
or
int3
or
loopne
jns
fsts
fiaddl
sub
xchg
push
mov
movsl
fnsave
or
or
insl
xlat
in
icebp
imul
cmp
xlat
aaa
inc
sub
dec
lock
mov
push
push
sub
stc
sub
mulb
push
subb
adc
int
adc
mov
adc
jecxz
or
and
sbb
or
pop
and
inc
adc
xor
stos
push
mov
sbb
mov
cmp
add
xchg
mov
lea
adc
pop
add
sub
cwtl
les
jb
sbb
aam
adc
sbb
xchg
mov
mov
sub
fimuls
fnstcw
pop
inc
sar
mov
dec
pusha
and
xchg
push
push
adc
inc
scas
dec
out
push
adcb
arpl
mov
mov
or
sub
mov
mov
mov
inc
add
mov
and
dec
pushf
cli
or
push
push
les
push
and
pop
xchg
je
out
call
stc
sbb
add
mov
mov
dec
xchg
outsb
dec
repz
mov
outsb
mov
insl
adc
push
and
and
mov
mov
push
or
iret
mov
pop
enter
push
add
jo
jbe
enter
cmp
dec
sub
mov
rcll
inc
es
sub
mov
jp
add
nop
mov
jmp
test
pop
xor
cmpb
idivl
add
sub
jbe
fidivrl
add
in
inc
sahf
bound
sbb
or
loope
in
add
leave
fiaddl
pop
add
inc
mov
pop
test
push
push
push
xchg
mov
push
data16
push
inc
ret
and
xchg
or
cwtl
inc
in
and
insb
push
sahf
subb
sarl
push
adcl
push
push
xor
sarl
cmp
insb
inc
test
or
mov
adc
ret
icebp
adc
add
push
add
sbb
sbb
mov
or
mov
sbb
pop
inc
sbb
cli
mov
aas
add
add
and
xorb
insb
fdivrs
xorl
add
loop
xchg
mov
push
js
add
mov
and
outsb
inc
pop
xor
mov
xorl
test
cmp
in
mov
je
js
sbb
inc
cs
jb
sbb
push
pusha
or
lret
xchg
push
and
scas
inc
loopne
push
addr16
add
fimull
stos
aam
xor
xor
push
jmp
iret
pop
adc
xor
or
sub
xchg
push
sub
jl
fs
cld
cmp
inc
sbb
ja
and
in
dec
or
dec
xor
dec
inc
and
adc
andl
jmp
xchg
enter
ss
mov
xchg
mov
ret
inc
jg
mov
pushl
xchg
lock
adc
or
pop
sar
adc
test
mov
mov
test
jle,pn
in
or
pop
inc
and
pop
ficomps
cmp
loope
push
gs
jo
aam
sti
cmp
dec
clc
dec
subl
or
add
mov
fcoml
sub
sub
sub
push
mov
xor
mov
dec
push
and
in
fcomps
pop
pop
scas
add
cmp
neg
dec
dec
lea
shlb
mov
adcl
sbb
or
cmp
push
push
pop
mov
jmp
and
mov
int3
and
ja
in
div
gs
mov
out
add
lods
pushf
or
hlt
decb
dec
inc
pop
inc
mov
mov
fiadds
sti
pop
dec
jbe
jle
jmp
xlat
fs
sbb
js
inc
cmp
jo
and
mov
mov
cmpsb
xor
fstps
or
sub
dec
ret
jne
cli
pop
testl
loope,pn
and
adc
sbb
dec
pop
cmp
add
adc
xor
fcoms
test
xchg
dec
and
bound
aam
xchg
adc
push
xchg
icebp
mov
add
add
xor
movsb
repz
mov
shrl
je
aaa
add
jne
lods
sar
dec
inc
adc
cmp
out
or
xchg
add
sbb
inc
popa
pop
repz
out
out
inc
mov
or
dec
xor
push
push
sub
ljmp
jae
cmp
inc
pop
mov
mov
loope
xorl
jecxz
cmp
and
and
jl
add
aad
xor
clc
inc
outsl
mov
imul
ud0
add
pop
fiaddl
inc
push
pop
rolb
xchg
fs
xchg
jb
jle
add
loopne
mov
pop
jnp
dec
je
fucom
cmp
or
jnp
jmp
fisubl
adc
jg
push
push
push
stc
push
lock
cmpl
xor
add
add
outsb
cmpl
and
bnd
push
inc
nop
sbb
je
icebp
push
mov
push
jg
into
cli
mov
cvtpi2ps
rclb
lahf
xchg
into
inc
mov
push
lret
mov
bound
push
les
stos
push
fadds
mov
lea
or
or
inc
sbb
icebp
into
xor
dec
sbb
push
cmp
cmp
test
loope
pusha
loopne
loope
and
xor
inc
or
inc
jae
lret
int
add
lds
gs
push
sbb
add
dec
and
mov
push
and
cmpsb
push
cmp
mov
add
sbb
or
or
inc
add
add
loopne
cmpsl
or
pop
xchg
fldl
lock
xchg
cmpb
cmpsb
sysret
push
and
push
dec
cmp
daa
ficomps
mov
cli
lds
add
cmp
or
arpl
clc
scas
nop
add
mov
xchg
adc
fnstenv
add
lea
rcll
jge
mov
sbb
testb
leave
mov
cli
pusha
dec
pop
imul
xchg
sub
roll
mov
xchg
and
jne,pt
fdivrs
mov
stos
fisttps
or
shlb
jo
cmp
and
dec
addr16
jecxz
les
je
inc
inc
pusha
lcall
inc
add
mov
je
lret
and
test
or
inc
ds
fsubs
popf
pusha
dec
or
lds
clc
mov
inc
add
cli
xchg
sub
inc
inc
enter
cmpb
mov
mov
mov
sbb
scas
cmpl
sub
push
inc
xor
scas
dec
fadd
fidivrl
add
lods
or
movsb
sahf
and
pop
mov
pop
sbb
inc
adc
fidivl
cmp
push
jecxz
lahf
sahf
mov
cltd
push
or
gs
jb
les
imul
lea
jns
mov
adc
add
or
rcrb
push
mov
stc
jmp
ja
gs
push
add
add
mov
cmp
xchg
inc
mov
add
out
dec
push
inc
cld
ljmp
push
lock
xchg
xor
sub
es
or
and
xor
sbb
sbb
rclb
jbe
dec
cmp
aas
and
inc
jge
or
insl
test
sbb
or
or
aam
and
lret
add
xchg
dec
push
lock
movsb
xchg
aam
inc
testb
jp
jb
add
clc
pop
in
inc
fs
mov
lea
or
push
dec
addr16
sbb
stos
push
xor
or
insl
stos
hlt
jbe
in
pop
lea
inc
adc
mov
xor
sub
pop
and
fidivrs
xchg
mov
popf
insl
pop
xchg
rorl
pop
mov
loop
ljmp
jge
ja
incl
mov
add
bound
dec
iret
jg
sub
aam
pop
jb
jae
gs
adc
adc
xor
inc
sub
dec
jge
push
mov
out
xor
jnp
pop
sub
xchg
adc
fs
lea
jo
faddl
push
or
rcll
inc
push
xchg
or
cmp
add
pop
add
in
cltd
and
jae
notl
cmp
jo
cs
push
in
fcompl
test
pop
nop
and
mov
daa
and
push
test
shlb
sub
movsb
add
cld
add
add
add
push
mull
js
push
lods
xor
xor
fdivl
cs
lahf
daa
adcb
inc
sub
rcrb
push
push
add
shll
sbb
dec
cs
dec
cmpsb
xchg
test
sub
cmpsb
xchg
adc
add
pop
loopne
add
push
insb
cli
sbb
and
rcrb
pop
insb
push
ds
fisttpll
add
jecxz
ret
mov
xchg
mov
fbstp
lods
call
leave
push
rclb
dec
mov
add
jb
cltd
movsb
cmp
and
cltd
xchg
or
cltd
add
or
xchg
sub
pusha
jo
incl
sub
iret
shll
mov
push
xor
and
cmpsb
inc
mov
jge
mov
and
cmc
mov
push
popa
ljmp
cmp
cmp
jle
clc
mov
enter
xchg
test
nop
mov
push
mov
mov
test
stc
sub
fisubrl
inc
addr16
in
cmpsl
cmpsb
add
sub
mov
dec
pop
sub
enter
sbb
aam
call
cmp
push
sub
or
js
sahf
adc
outsl
inc
sti
and
movswl
sub
cmp
mov
das
adc
cwtl
test
mov
add
mov
pusha
push
std
dec
movsl
jb
pop
loopne
dec
js
or
nop
xchg
or
bound
mov
xlat
sub
and
lods
mov
addl
push
cmp
dec
inc
test
into
jmp
inc
fiaddl
add
mov
pop
je
fisttpl
xor
or
test
rep
push
add
test
rcrl
leave
add
pop
mov
push
mov
lret
xorl
shr
xor
enter
les
push
mov
push
push
mov
rclb
adc
xor
lods
fisttps
inc
xor
test
inc
js
add
lock
or
mov
push
sbb
inc
or
repnz
ret
xchg
dec
repz
push
push
aad
loope
imul
mov
and
sbb
mov
or
push
mov
fnsave
and
adc
cmc
add
or
rclb
fbld
xor
add
mov
test
fs
push
dec
fldl
nop
stos
in
mov
adc
leave
inc
mov
or
outsb
dec
cmp
dec
inc
inc
pusha
xchg
adc
rolb
add
int
sahf
movl
adc
rclb
repz
pop
sbb
repz
sub
dec
xor
out
jge
icebp
sub
imul
cld
xor
push
repz
out
pushf
mov
repz
sub
xchg
mov
sahf
cmpsl
stc
cmp
sbb
sahf
data16
jo
pop
or
sub
inc
push
call
jl
out
jns
lahf
or
ds
and
inc
sarl
pop
push
or
sbb
add
cmpsl
or
stc
jo
xchg
sbb
cmp
repz
enter
jnp
dec
repz
inc
cli
push
out
lcall
push
sbb
sahf
out
sahf
inc
mov
mov
sbb
cmp
fwait
xchg
xor
dec
pop
add
in
es
push
jnp
xor
sub
and
dec
les
and
pop
add
cmpb
add
and
test
add
xchg
shrl
sub
sbb
fbstp
pop
push
xor
outsl
je
mov
inc
add
xlat
xor
dec
mov
jne
mov
pop
ljmp
push
sbb
popa
mov
movsl
aaa
sbb
sbb
pop
or
movswl
movsl
inc
neg
and
adcl
mov
out
xchg
and
iret
inc
push
inc
or
push
push
xchg
and
mov
mov
push
fs
pusha
jne
mov
mov
movsb
clc
sbb
jge
xorb
rorl
inc
mov
or
add
and
mov
adc
xor
aam
insb
addr16
sahf
lods
rcll
and
dec
or
add
add
inc
push
mov
cmpsl
dec
xor
mov
fistps
xchg
or
cld
ret
adc
or
or
mov
nop
lock
stc
push
aad
and
dec
lock
imul
or
push
sbb
pop
loopne
push
test
inc
sbb
cli
and
pop
add
clc
dec
aaa
add
fdivr
push
or
sbb
pop
add
inc
sub
pop
je
out
movsl
rcrl
jmp
hlt
clc
mov
pushf
and
add
pop
subb
cmp
test
adc
stos
aas
les
clc
add
add
pop
popw
sub
lcall
jbe
inc
jmp
ja
inc
inc
adc
cmp
sbb
and
test
inc
push
mov
fs
push
add
push
rorb
add
or
push
in
ja
push
gs
scas
sbb
inc
jmp
shll
dec
jmp
or
ret
jnp
test
nop
sbbl
xchg
lods
push
or
add
push
aad
dec
shll
insl
les
and
std
mov
test
dec
cmp
add
adcl
and
insl
jmp
mov
stos
imul
add
cmp
lret
sbb
xchg
xor
sbb
sub
jne
add
in
or
gs
cmc
inc
adc
jmp
jmp
test
popa
mov
push
mov
push
cmp
mov
mov
outsl
stos
insl
ljmp
dec
sbb
in
mov
cmp
xchg
push
mov
adc
sub
xor
sbb
popa
loop
jb
or
jo
pop
mov
ret
scas
mov
xor
sbb
mov
push
adc
and
jo
outsb
mov
nop
and
push
xor
pop
mov
push
dec
mull
cs
fidivrl
fcompl
mov
aas
fnstcw
cmp
mov
push
repnz
and
dec
push
inc
jmp
sbb
or
inc
gs
push
in
out
inc
clc
cmp
adc
add
add
popf
int3
insl
lea
push
adc
je
fnsave
mov
es
add
imul
shlb
ficoms
mov
sub
jle
popa
xor
pusha
mov
test
add
sbb
fdivl
or
push
mov
add
pop
and
mov
push
iret
xchg
cltd
or
mov
mov
xor
pushl
cmp
add
cmp
insl
imul
xchg
movsl
adc
xchg
sbb
xchg
mov
xchg
adc
dec
les
add
mov
dec
loope
pop
pop
inc
mov
mov
pop
mov
sub
push
dec
repnz
jg
jmp
adc
sbb
and
lds
fdivl
in
inc
and
sbb
loopne
jne
dec
mov
ret
lea
push
and
inc
loopne
and
in
pop
nop
sbb
pop
inc
pop
roll
sbb
add
fadds
enter
scas
popl
mov
insb
cmpsb
jo
add
lock
pop
dec
adc
test
mov
dec
clc
and
sub
sbb
jmp
push
rol
pop
add
dec
or
rcrb
inc
jo
cmp
inc
inc
and
pop
call
inc
out
push
adc
fstl
adc
sub
pop
or
hlt
test
cwtl
mov
and
sbb
add
and
jo
inc
sbb
xorb
jmp
imul
push
xor
aas
adc
add
movsb
or
add
inc
les
push
or
fwait
jns
shll
jp
sub
add
mov
or
mov
lods
shll
cmp
jmp
mov
xorl
xchg
dec
movsl
push
sub
sbb
sbb
sub
or
dec
xor
jns
shrl
outsl
mov
mov
cld
pushf
outsb
push
dec
or
mov
mov
test
icebp
rcrb
mov
call
mov
loop
das
test
push
sbb
push
xor
push
shrb
cmp
xchg
mov
mov
orb
cmpsb
mov
add
dec
adc
mov
fidivl
push
clc
pop
push
pop
into
and
mov
mov
pop
add
adc
aam
sbb
pop
lea
rcrl
or
mov
imul
xor
lret
insb
bound
add
cmp
dec
add
mov
fwait
dec
dec
add
xchg
push
push
push
sahf
imul
clc
push
out
clc
iret
outsl
loopne
mov
pop
sub
ljmp
popa
adc
pop
cmp
add
inc
push
repz
ret
and
mov
add
dec
pop
add
sbb
sbb
sbb
mov
lret
in
ss
subl
push
cmp
cmp
ffree
xchg
cmpsl
lods
cmpsl
cmp
ja
mov
frstor
push
mov
add
inc
leave
sahf
aas
xor
bound
pop
add
insl
mov
xlat
mov
jne
xor
sbbl
fildl
mov
shll
inc
dec
mov
sub
xchg
out
or
mov
adc
jmp
jns
js
mov
into
push
pop
test
pop
push
pop
inc
in
mov
mov
inc
jge
sbb
push
pop
mov
add
inc
or
mov
int3
mov
xchg
inc
jge
push
dec
sub
int
int3
xchg
jno
inc
mov
sub
cmpsb
mov
mov
ja
enter
addr16
and
in
add
sub
sarl
xor
dec
push
das
lods
and
dec
pop
mov
inc
sub
shlb
imulb
xchg
cmp
add
jge
mov
lret
push
xchg
pop
adc
insl
or
adc
enter
data16
sbb
jbe
sbb
push
cmp
dec
push
cwtl
lret
xor
inc
push
inc
inc
adc
inc
outsb
add
inc
push
xchg
pop
insb
xchg
adc
sbb
xor
roll
sti
loope
dec
xchg
sub
dec
inc
test
add
imul
sbb
and
and
jne
shrl
inc
insl
lea
fsubrs
add
and
ja
pop
testb
sbb
dec
add
push
push
xchg
es
insl
sub
add
sub
out
sahf
cmpsl
push
cmp
jns
into
repnz
sbb
movsl
rcll
sbb
dec
adc
pop
call
or
rorl
and
sub
scas
stos
test
pop
sbb
push
mov
test
stos
popa
push
push
movsb
dec
mov
mov
es
sub
sub
add
add
sub
mov
add
fstpl
mov
shlw
inc
mov
inc
lock
xor
cmp
xchg
push
or
dec
xchg
loope
jb
cmp
hlt
mov
sub
adc
xchg
mov
add
ror
mov
and
or
add
insl
mov
push
adc
xchg
in
jne
cmp
dec
out
or
daa
or
shr
jns
jge
cltd
scas
es
int
pop
aaa
adcl
jo
sbb
repz
push
fildl
std
jbe
cmp
inc
call
jp
int3
adc
jae
dec
or
shr
lock
push
scas
cmpsl
enter
sub
jb
into
test
movlps
fst
imul
sub
sub
rcrl
std
mov
inc
inc
mov
sbb
movb
or
popa
jmp
adc
pusha
dec
clc
icebp
cmp
jmp
mov
push
rcll
scas
add
aaa
xlat
push
enter
mov
andb
movsl
fsubrs
adc
or
xchg
push
mov
bound
sub
mov
add
jbe
fisttpl
dec
popa
mov
cmp
repz
cli
and
push
xor
movsl
push
aad
push
xor
aam
jbe
pop
xchg
lcall
adc
daa
shll
call
jns
inc
and
xchg
lock
lea
popa
jnp
add
movsb
adc
inc
aas
adc
push
test
sub
cs
cmp
add
or
sub
pop
adc
out
push
sub
cwtl
xor
xor
mov
jbe
add
adc
push
inc
cld
xchg
push
scas
lock
adc
mov
lret
inc
or
pusha
loop
cmp
add
dec
popa
pop
add
movsl
or
test
mov
ret
cmp
xor
loopne
or
sti
ljmp
mov
fildll
andl
add
add
xchg
adcl
sbb
jle
dec
cli
lea
test
push
lea
sbb
xorb
aam
rcrb
popa
mov
icebp
jl
add
fcomps
adc
inc
imul
mov
lods
fiadds
push
scas
cmp
inc
xchg
ret
mov
add
add
inc
push
daa
sbbl
push
fs
insb
fldenv
lcall
add
mov
xchg
adc
xor
push
push
sbb
adc
add
stc
add
fnstcw
push
pop
aam
cmpsb
mov
mov
or
mov
mov
sub
jbe
pop
lods
fdiv
nop
inc
jg
mov
cmp
push
and
push
jle
popa
and
stc
push
xor
es
inc
adc
cld
sub
dec
std
sbb
rcr
rcll
or
mov
lret
nop
jl
dec
sti
shll
push
jecxz
loope
push
mov
addr16
jmp
mov
aaa
daa
add
push
cmp
inc
aas
mov
or
xor
loop
or
adc
jecxz
mov
push
mov
pusha
mov
stos
and
je
dec
push
insl
shlb
cmp
jecxz
cmp
pop
pop
enter
or
cmp
jae
mov
into
sub
xor
out
mov
xchg
rolb
sub
movsl
fs
lock
jno
lcall
sub
pop
sub
or
sub
js
push
insl
push
pop
lahf
push
lea
faddp
sub
add
mov
jmp
insl
js
adc
adc
pop
add
pop
cmp
cmc
movsb
mov
pop
xor
std
lock
dec
or
push
push
xor
sbb
popf
or
push
cmp
add
mov
or
jne
clc
add
jns
push
inc
mov
mov
popf
rorl
nop
dec
add
sbb
xor
jg
scas
push
adc
add
pusha
mov
cmp
xor
xor
push
jns
insb
es
pop
or
inc
movsb
inc
xchg
mov
cmp
pop
ret
push
mov
adc
das
cmp
adc
add
cmpsl
mov
arpl
dec
mulb
shufps
push
outsb
cmp
push
fsts
jb
or
pop
push
add
add
add
loope
sbb
push
dec
mov
and
push
leave
adcb
add
sbb
in
movsb
imul
xchg
cmp
mov
shr
fstl
adc
rolb
sub
pop
jmp
clc
and
and
cmpsb
jo
push
add
pop
or
cmp
add
or
cmp
jnp
mov
aaa
inc
cmp
je
test
mov
addl
add
inc
ficoml
sahf
insb
jne
push
stos
ret
bound
xor
adc
sub
mov
lock
adc
jge
cmp
mov
fwait
xor
add
inc
mov
or
pop
ret
rolb
inc
cwtl
jmp
adc
cmp
sub
and
adc
add
cmp
popa
sbb
xor
sbbl
xor
cmpb
adc
or
ja,pn
xor
js
inc
push
roll
inc
xchg
push
cmp
lahf
mov
es
shll
cs
in
ja
divl
push
push
push
push
dec
add
push
jl
data16
iret
inc
jnp
push
stos
mov
and
clc
mov
adc
daa
movsb
lds
mov
lods
das
add
and
rcll
cmp
ja
push
lock
xor
dec
cmp
jle
shlb
pop
pushf
and
insb
xor
or
fs
add
sub
push
out
repz
out
sub
dec
hlt
js
daa
rcrb
shlb
dec
xor
pusha
or
sub
ret
mov
adc
adc
fldl
cmpsb
aaa
push
enter
and
mov
and
push
lcall
outsb
and
dec
gs
sbb
in
xchg
add
xchg
push
mov
ret
jmp
mov
or
lea
jns
cmp
add
adc
xchg
sbb
add
fildl
adc
dec
push
and
xchg
lods
insl
and
rclb
adc
js
xchg
and
je
sub
dec
pop
mov
pop
adc
xor
aad
scas
or
inc
rclb
shl
or
inc
and
adc
mov
add
test
testl
mov
or
mov
bound
and
bound
xchg
mov
sub
rclb
add
cltd
test
out
ror
pop
and
mov
aam
push
xor
lock
dec
jmp
mov
dec
subl
into
push
jl
lods
mov
jne
je
adc
mov
push
mov
adc
xor
fists
xchg
mov
jns
dec
push
add
aaa
in
add
sub
or
imul
jnp
xor
push
inc
inc
les
xchg
jp
out
xchg
push
push
mov
sbb
dec
inc
lock
sbbb
sarl
orb
inc
adc
cltd
stos
xor
sbb
or
ds
mov
push
pop
sarb
xchg
data16
cmp
adc
stos
jbe
or
dec
sub
push
mov
or
adc
sbb
xor
flds
push
adc
push
inc
mov
in
mov
mov
inc
lcall
xchg
imul
lods
pop
xchg
xchg
push
or
dec
xor
sbb
jl
or
data16
cmp
push
hlt
into
test
push
add
push
sti
fbstp
inc
je
sub
je
adc
or
adc
push
int
test
dec
push
mov
les
jl
jmp
add
test
push
cmc
incl
pmovmskb
addl
jg
fwait
mov
push
dec
lds
inc
addr16
pop
and
or
pusha
push
scas
or
sub
inc
adc
lcall
push
mov
xor
xor
mov
mov
add
xor
test
inc
movsl
std
ds
dec
cmp
cmp
dec
filds
cmp
push
rep
or
jo
mov
adc
into
mov
sbb
adc
push
inc
mov
cs
fs
stos
fwait
pusha
cli
mov
dec
aaa
xchg
mov
mov
sub
orl
jbe
test
xor
mov
cmp
jbe
mov
mov
rclb
shlb
push
inc
jmp
add
jmp
sub
roll
push
sbb
sbb
lret
mov
jecxz
popa
sub
add
sub
push
push
and
or
mov
fwait
push
test
loopne
insl
mov
cmp
je
push
fwait
adc
incb
mov
mov
in
jno
pop
push
sub
cmp
mov
push
and
push
sub
inc
je
scas
sub
outsl
mov
add
fldt
pop
and
incb
dec
sbb
inc
dec
push
pop
or
repz
add
inc
jae
addr16
add
inc
dec
nop
adc
pop
jecxz
push
or
jo
inc
push
rolb
adc
xlat
xchg
sbb
dec
and
and
inc
orb
mov
lea
data16
push
push
jne
or
mov
xchg
ret
xchg
jns
int3
mov
and
push
bound
nop
int
iret
push
test
inc
outsb
movsb
push
jno
push
sbb
aaa
lods
and
mov
test
dec
or
push
push
push
jns
add
inc
pop
add
ljmp
and
jge
dec
add
les
divl
mov
mov
adc
push
outsl
mov
add
pop
vmovups
jp
aaa
mov
mov
sub
sub
adc
or
xor
adc
adc
test
sbb
and
test
loopne
inc
pop
je
es
mov
sahf
add
je
jns
mov
movsb
adc
jno
inc
movsb
push
arpl
cwtl
xor
and
push
xor
sbb
inc
sub
inc
hlt
nop
or
lods
test
fstpl
fistpl
dec
mov
add
pop
mov
mov
and
imul
jae
push
add
inc
test
cmp
repnz
mov
cmp
push
inc
lock
mov
xchg
mov
loop
mov
xor
add
push
xchg
mov
pop
sub
mov
je
loope
movsb
sbb
xor
push
shrl
push
ret
add
adc
lods
xchg
add
ret
sbb
and
sbb
add
add
das
sbb
add
xor
sbb
and
lret
or
jmp
dec
push
test
or
and
or
subl
filds
les
adc
xchg
mov
in
sbb
and
mov
pushf
push
sub
adc
xchg
push
cltd
xor
pop
sub
sub
ja
push
sub
fadd
inc
lcall
or
pop
inc
add
jecxz
call
ljmp
pusha
shll
pushl
add
add
jmp
mov
sbb
lock
loop
sub
push
dec
push
lods
add
sub
push
cmp
pop
lock
in
mov
rclb
adc
cwtl
jp
jae
jp
das
sub
sub
jp
or
sbb
add
add
and
jb
add
jb
xchg
xor
cmp
pop
xchg
dec
xor
lret
into
pop
sub
cmc
addr16
test
ja
push
mov
hlt
sub
jo
test
mov
mov
inc
adcb
sbb
nop
mov
mov
cmp
and
jl
and
into
sbb
loope
adc
mov
add
test
cmp
movl
add
dec
je
add
femms
or
fcomps
es
sbb
and
push
add
inc
sbb
xchg
push
jo
loope
sbb
jmp
test
jb
lahf
sarb
mov
adc
sbb
inc
or
adc
in
jb
insb
jnp
sbb
enter
mov
add
push
in
sti
setl
cmp
pop
xchg
shrb
sub
push
pop
call
in
sti
push
inc
adc
ret
dec
inc
and
adc
xlat
jg
addl
xor
mull
mov
rclb
cltd
lret
ss
aas
sbb
fmuls
scas
mov
mov
es
add
inc
or
adc
int3
xchg
ss
jmp
jecxz
mov
sub
mov
test
pop
test
dec
and
in
sub
imul
sarl
sub
ret
pop
mov
or
enter
nop
cld
inc
test
rclb
nop
push
push
push
sbb
cmp
or
or
sub
push
roll
addl
pop
repz
test
repnz
test
loope
test
cs
andl
xadd
jmp
sub
stc
out
adc
and
add
inc
dec
movl
pop
adc
and
ret
sub
adcb
and
xor
dec
pop
je
sbb
pop
or
bound
add
out
dec
mov
loope
jno
inc
and
lea
aaa
test
mov
mov
cmp
adc
dec
adc
or
ja
dec
inc
sub
mov
adc
loopne
pusha
push
inc
adc
loop
xchg
insl
xchg
sbb
lea
push
mov
adc
loop
arpl
aad
fcomp
gs
and
adcl
jbe
cmp
es
dec
insl
sarb
add
sbb
ja
lods
out
mov
jns
inc
lea
lahf
xchg
or
call
push
int
mov
xchg
adc
or
jg
inc
sbb
xchg
mov
adc
push
xorl
push
xchg
pop
push
adc
pop
or
test
dec
in
adc
mov
and
loopne
fistl
or
and
ja
cmp
fs
sahf
out
lea
inc
outsb
mov
jo
xchg
mov
sbb
repz
mov
push
push
and
and
addb
shlb
cwtl
mov
ja
jnp
aam
arpl
rorb
imul
add
push
pop
inc
pop
push
dec
ret
or
les
sbb
add
pop
rcpps
mov
pop
inc
push
pusha
lock
and
push
mov
lea
mov
fmuls
mov
adc
shlb
enter
pop
arpl
pop
cmp
repz
xchg
das
rolb
lds
push
adc
lods
sub
sbb
out
inc
pop
push
mov
pusha
xchg
dec
outsl
mov
or
int
sahf
sub
cmp
and
or
inc
inc
push
jle
adc
aas
arpl
scas
sub
enter
adc
lret
jae
push
or
adc
add
or
shlb
push
push
imul
add
test
mov
aam
jecxz
sub
adcb
sub
popl
bound
push
jb
je
pop
xor
sbb
inc
rorl
int
rorl
stos
jmp
pop
loopne
sub
adc
mov
ret
push
dec
sbb
xor
sti
mov
add
inc
adc
sbb
ret
cmp
sub
rclb
push
andl
push
mov
push
mov
pop
test
mov
notl
hlt
pusha
jecxz
or
js
adc
push
mov
sbb
mov
pop
add
xor
insb
cwtl
dec
hlt
out
and
jg
sti
add
aaa
dec
mov
add
js
popa
jns
popf
xor
cltd
adc
fistpll
mov
push
inc
ss
into
pop
push
hlt
sub
add
int
and
stos
mov
add
push
adc
inc
test
push
dec
jb
pop
add
xor
ljmp
and
arpl
inc
sub
inc
inc
loopne
adc
mov
das
push
push
mov
inc
insl
or
sbb
fs
das
adc
iret
cmp
outsl
je
sbb
cmp
or
sub
xchg
dec
sub
dec
or
and
or
and
imul
fimull
mov
jo
jne
movsb
xchg
dec
add
mov
sub
mov
std
and
pushf
jne
or
in
test
inc
sub
add
outsl
xor
adc
aam
push
les
xor
mov
or
popl
sub
insb
push
push
das
adc
jne
jne
add
lret
pop
push
outsb
stc
sub
sub
ret
sub
add
adc
or
mov
cmpsb
adc
push
dec
rolb
xchg
test
or
imul
xchg
nop
xchg
inc
pop
adc
cltd
xchg
out
or
pop
sub
adc
imul
adc
cwtl
adc
test
nop
dec
sbb
movsl
sbb
dec
inc
xor
adc
jo
out
dec
sbb
loope
push
xor
inc
or
ret
inc
dec
mov
or
jne
sub
push
pop
test
pop
jmp
std
pop
dec
cmpsl
dec
add
push
adc
bnd
add
and
cmpsb
rol
adc
xor
loop
sbb
and
jmp
adc
adc
xchg
fisubrl
pushf
push
orb
mov
push
xchg
cltd
add
ss
mov
dec
push
ja
mov
mov
push
fdivrs
push
pop
mov
cmc
inc
movsl
add
inc
push
es
sub
sti
jno
dec
cwtl
jl
pop
jmp
test
movsb
cmpsl
and
stos
sub
push
or
les
or
push
mull
push
fcompl
adc
mov
addl
push
pop
or
lret
mov
enter
lret
les
pusha
cmp
stos
repz
sbb
test
mov
and
push
jl
and
or
sub
adc
sub
aad
fnsave
jmp
hlt
dec
rolb
fistl
gs
push
lods
mov
cmp
outsb
cwtl
sub
movb
add
jns
mov
pop
lret
sub
in
mov
push
add
sbb
sbb
push
add
cwtl
mov
jne
or
leave
xor
jo
outsb
sub
inc
in
push
data16
mov
dec
aaa
sub
mov
fwait
push
sub
mov
mov
popa
jnp
shll
inc
sbb
shll
cmp
and
iret
inc
or
add
sbb
sbb
test
test
or
pop
stos
dec
mov
ds
repnz
sbb
inc
mov
pop
pop
inc
jmp
mov
push
cmp
push
mov
xchg
jl
mov
add
lods
in
and
xchg
lret
cld
or
xor
push
cmp
pop
cli
popa
inc
push
add
and
add
or
repnz
and
lret
ljmp
xor
mov
out
pop
int
adcb
ja
add
push
shrb
sub
inc
push
outsb
mov
xchg
mov
jno
sbb
push
dec
rcll
cmpsl
aas
leave
push
push
jl
jne
mov
mov
je
dec
dec
rorb
jle
orl
cmp
bound
adc
retw
mov
icebp
adc
sub
push
xchg
push
pushf
aad
push
push
daa
or
cmp
sahf
out
xor
push
idivl
jo
and
enter
je
mov
fdivl
movsl
add
xor
xchg
rorb
xchg
mov
das
pop
jmp
sub
push
adc
jno
inc
pop
jge
outsl
mov
inc
mov
int3
in
pop
push
sub
and
or
cmpsl
mov
cwtl
xor
cmp
lds
and
mov
mov
push
pop
xchg
mov
aaa
jnp
mov
and
jl
push
push
dec
dec
add
dec
in
in
push
dec
add
and
fwait
pusha
fwait
add
sub
enter
sub
pop
rcrb
lahf
and
call
pop
xchg
mov
adc
add
inc
mov
xchg
in
pop
jp
xchg
xor
mov
lea
mov
lods
flds
and
or
lods
xlat
sub
sbb
outsl
push
sbb
mov
shlb
push
out
pop
sbb
sbbb
mov
jne
mov
mov
pop
cmp
push
lret
test
ds
add
add
inc
mov
mov
pop
inc
cmp
jmp
xchg
es
add
dec
dec
pop
dec
and
and
push
addb
push
enter
adc
push
pop
inc
add
adc
rcll
jo
jp
je
push
inc
push
push
mov
mov
loopne
add
xchg
scas
orl
inc
adc
adc
flds
lods
sbb
jne
les
js
cmp
mov
add
pop
jmp
arpl
push
push
pop
xor
std
outsb
loop
add
pop
pushl
jnp
push
jne
xor
jge
stos
add
or
arpl
outsl
xchg
cmp
jge
stos
xor
xor
nop
push
sub
sub
pop
bound
and
mov
cmp
cs
add
js
xchg
xor
push
jge
and
jnp
in
nop
mov
movsl
stos
and
push
pop
mov
in
mov
xor
push
jae,pn
nop
jne
loope
pusha
cmp
sbb
push
cmc
push
fdivs
or
sti
loopne
out
inc
pop
cs
sub
mov
fs
lods
imul
pop
mov
cli
out
add
jg
mov
jne
mov
je
add
fcmovnb
ret
shrl
mov
mov
ret
adc
cmpsl
out
shll
jp
jo
mov
push
pusha
dec
popa
inc
arpl
sbb
adc
scas
cmp
adc
cmp
cmpsb
test
sub
mov
inc
inc
pop
test
adc
scas
xchg
push
sti
shrb
pop
pop
and
int3
xchg
and
and
sahf
push
out
or
fdiv
ss
cmp
jle
insl
sub
outsl
mov
rcrb
jne
mov
sti
push
cmp
out
lret
add
flds
js
or
nop
mov
lock
enter
xchg
sbb
dec
dec
push
or
clc
adc
inc
cmp
dec
je
cmp
or
inc
lods
push
add
shrb
pop
popa
call
xor
xor
push
mov
aam
mov
jo
or
adc
xchg
xchg
xor
ret
inc
inc
in
jo
jge
push
push
addl
adc
add
mov
cmp
sub
repnz
or
cld
les
outsb
add
in
lret
dec
movsb
push
pusha
lret
or
andps
jmp
add
mov
vmread
adc
notl
sbb
add
sbb
imul
push
adc
mov
loopne
sub
repz
xor
xchg
xorb
shlb
push
arpl
cmp
adc
dec
popa
mov
pop
dec
mull
dec
push
loope
sar
into
enter
aaa
cmp
sbb
push
or
adc
adc
dec
loopne
lea
loope
or
js
scas
jl
add
cmpsl
xor
and
mov
cmc
or
pop
negb
jnp
inc
mov
mov
notb
and
pop
mov
das
bound
or
pop
lcall
cwtl
mov
sbb
adc
inc
mov
cmp
nop
rolb
les
mov
dec
repnz
sarb
inc
sub
add
mov
movl
jae
pop
adc
sbb
add
fdivrl
mov
inc
sub
lret
sbbb
and
cli
repnz
outsb
inc
aam
lds
andb
mov
enter
addr16
or
mov
int3
pushf
jns
dec
pop
pop
aaa
sti
imul
je
pop
outsl
sbb
fcmove
mov
jae
js
in
scas
sti
xor
jae
movsb
ds
mov
test
push
loop
mov
sub
and
shrb
push
jnp
sarb
jmp
ss
fdivr
push
jl
adc
pop
add
sti
loope
mov
roll
mov
imul
or
mov
or
mov
cs
sarb
inc
lea
pop
sub
fstpt
jle
xor
jle
sub
cmp
lods
icebp
pop
add
mov
jb
sbb
pop
xchg
cmp
or
rcll
clc
inc
add
cmp
jl
sub
dec
pusha
loopne
mov
sahf
inc
sub
jecxz
xchg
and
sbb
cmp
sbb
dec
mov
or
sub
mov
jmp
xor
push
jb
mov
andb
mov
das
lea
and
insl
fisubrs
xor
mov
mov
je
insb
and
push
sub
cltd
xor
arpl
jg
xchg
mov
loopne
pop
in
pop
adc
xor
shll
addb
inc
push
inc
loopne
mov
sti
pop
dec
jl
xor
dec
jnp
and
and
adcl
fstps
cli
mov
mov
wbinvd
cmp
loope
fadds
xchg
push
cmpsl
jne
mov
fwait
iret
sarl
mov
fldt
insl
add
jecxz
push
push
test
sbb
out
movl
push
clc
inc
shll
cmp
lock
xor
xor
cmpsb
push
xchg
std
lds
push
and
in
sbb
rcrl
fldcw
push
and
fdivs
xchg
push
mov
and
aam
pop
or
fwait
add
mov
adc
popa
and
mov
adc
idiv
push
data16
and
push
fcoml
push
andl
jne
mov
xorl
xchg
cwtl
fs
sub
leave
dec
fcomi
or
xor
jmp
mov
mov
insl
add
sub
cli
and
pop
jle
jmp
shrl
add
lock
call
cmpl
cmpsl
push
mov
jle
andb
push
mov
push
mov
idivl
inc
lcall
mov
lods
lods
lea
in
mov
xchg
arpl
push
dec
fidivl
mov
add
mov
mov
xchg
xchg
push
loopne
js
cld
mov
pop
mov
inc
into
xlat
cmp
icebp
push
pop
mov
sbb
mov
sbb
or
cmpl
jb
dec
sbb
or
lock
popa
add
pusha
dec
sbbl
and
xor
mov
test
fcmovb
mov
lea
xor
inc
cmpsb
enter
mov
dec
xchg
popl
add
xor
xor
xlat
or
adc
xchg
pop
sahf
cmp
lret
adcb
pop
jge
jno
and
dec
das
outsl
ud2
sbb
push
mov
adc
add
loopne,pn
and
sbb
xor
in
in
and
and
jns
test
add
dec
xchg
inc
xchg
sbb
jb
cmpsb
scas
sbb
aaa
inc
or
test
adc
xor
mov
add
dec
sbb
xchg
daa
adc
icebp
mov
stc
mov
or
test
xchg
cmc
inc
in
sub
shrb
sub
cmp
lea
sub
mov
pop
cmc
lock
add
fsts
in
shlb
inc
loopne
mov
sub
inc
or
les
insl
popa
pushl
and
arpl
push
movsb
fdivrp
fs
add
les
mov
mov
adc
mov
or
lds
fimull
mov
mov
and
ret
inc
rclb
xchg
push
adc
add
push
mov
ret
pop
aam
es
sbb
cmp
add
jo
pop
movsb
sub
rorl
fdiv
sbb
test
ret
or
imul
popa
mov
ds
add
in
xchg
or
daa
add
xchg
test
pop
pop
mov
push
jmp
test
inc
clc
test
icebp
insb
xchg
cld
push
scas
dec
or
xor
sub
je
jno
jbe
loopne
lock
test
mov
or
add
adc
pusha
inc
push
inc
mov
lret
push
js
insb
call
xchg
mov
lea
popa
pop
adc
sbb
fdivl
inc
lcall
rcr
pop
cmp
ss
mov
dec
rol
mov
xchg
fwait
imul
mov
jg
push
push
sbb
adc
push
or
cmpsb
push
pop
push
outsl
push
mov
arpl
imul
enter
inc
and
jecxz
in
jo
and
ds
movsl
nop
inc
aad
mov
mov
jne
push
bound
sub
dec
lods
dec
and
shll
add
or
and
push
push
pushf
and
imul
pop
cmp
popa
or
cmpsl
imul
outsb
xchg
lret
jmp
mov
mov
and
add
add
pop
cmp
mov
aas
push
xchg
inc
inc
insl
and
les
adc
xor
add
push
adc
sbb
pop
outsl
inc
jg
push
push
roll
pusha
fwait
cmp
push
jmp
add
sti
jecxz
sbb
xchg
sar
jne
pop
adc
fidivl
push
jns
pop
data16
or
cmpb
das
jo
or
inc
add
mov
ucomiss
rol
mov
cwtl
adcl
xor
mov
daa
mov
mov
loop
mov
fidivl
arpl
mov
in
setp
shrl
jge
leave
cmp
cmpsb
out
xchg
inc
mov
xchg
adc
sub
cmpsl
lcall
add
shl
sub
push
pop
insb
lret
sub
and
rolb
push
xor
jge
js
popf
and
inc
xchg
mov
xor
es
push
imul
pop
aas
bound
loopne
add
jb
out
repz
nop
fwait
and
push
jb
mov
adc
push
cmp
push
mov
push
sbb
sbb
jo
mov
dec
cmp
push
or
sub
clc
adc
pop
jb
xchg
mov
lahf
xor
lock
call
or
imul
and
test
or
mov
pop
pushf
push
cmp
cmpsb
sub
and
repnz
xchg
push
js
pushf
nop
xor
xchg
mov
testl
mov
and
push
or
xor
jmp
xlat
loop
shrb
and
shll
std
mov
mov
inc
gs
sbb
xchg
xor
popf
loopne
cmp
sbb
std
push
cs
loop
jnp
dec
push
jno
aam
mov
arpl
xchg
cmc
xor
sub
xchg
faddl
dec
jecxz
sbb
pushf
sub
in
inc
pusha
daa
jmp
popl
jns
jb
test
shlb
adc
xor
enter
xchg
xchg
cmp
push
das
push
jo
test
jl
sbb
shlb
xchg
or
adc
js
sbb
sbb
imul
mov
jecxz
dec
dec
mov
pusha
mov
in
inc
imul
push
xadd
xor
xchg
stos
lea
int3
popa
sbb
sbb
lods
sbb
test
push
repz
dec
add
enter
or
mov
cmc
mov
pop
mov
xchg
je
push
icebp
shrb
mov
mov
add
add
ja
add
pop
movsl
adc
xchg
je
andb
loope
dec
lods
jecxz
mov
daa
xor
outsl
inc
adc
cs
add
mov
jge
movsb
pop
jns
ret
jo
call
add
outsb
and
push
je
push
gs
insl
fwait
pop
pushf
movsl
test
sub
adc
aaa
int3
and
cmp
pop
sub
jno
jns
and
add
add
xor
and
nop
or
xor
test
jecxz
insb
adc
and
adc
or
imul
movsb
popf
ss
push
adcb
xchg
cmp
pop
jmp
je
dec
mov
aas
mov
mov
add
rolb
sbb
in
and
fisttpl
in
movsb
push
or
mov
fwait
sbb
nop
inc
mov
xchg
mov
outsl
pop
cmp
push
adc
sub
popa
insl
inc
xor
enter
adc
dec
pop
jge
inc
adc
sub
inc
cmpsb
jno
pop
lret
push
inc
push
sbb
dec
jne
test
inc
pop
or
xchg
aam
add
iret
jno
mov
inc
add
mov
sub
add
es
dec
nop
in
xor
xor
loope
add
and
xchg
dec
rcrb
or
insb
pop
int
sbb
mov
adc
sub
or
pop
out
jp
shr
mov
mov
jne
adc
sbb
adc
or
popf
inc
mov
lret
fildl
mov
add
jae
out
xchg
dec
dec
adc
or
insl
pusha
mov
insb
and
aam
std
adc
add
insl
repnz
mov
test
sbb
rcll
xchg
lea
rolb
cmp
mov
add
jo
pop
xor
jb
popa
mov
mov
add
test
push
adc
in
test
enter
xor
dec
add
cs
mov
xchg
repnz
loopne
jno
mov
mov
inc
push
xor
icebp
and
sbb
push
mov
scas
jl
push
add
repnz
loop
mov
inc
movsb
adc
shlb
mov
cmp
adc
jle
jne
out
and
lret
adc
test
jo
out
xchg
cs
aaa
inc
pop
not
jp
lcall
jo
jnp
pop
ret
adc
pop
adc
adcl
pusha
js
xchg
push
call
sbb
shll
add
or
shrb
sub
sub
repnz
bound
cmpsl
mov
addr16
jecxz
push
sub
or
jb
das
push
push
cmp
das
xchg
andl
jne
push
push
and
aam
xchg
or
cmpsb
outsb
inc
cmc
xor
loope
and
sbb
or
lock
xor
push
pop
add
push
xor
imul
or
inc
mov
push
add
lret
in
and
nop
jle
fs
sarl
push
mov
and
push
push
adc
pop
push
mov
faddl
int
sti
mov
adc
lods
inc
repnz
lcall
in
and
cmp
pusha
sub
sbb
je
insb
aaa
adc
push
shl
int3
and
xchg
add
dec
arpl
rcrl
ja
mov
xor
in
subb
mov
test
cli
xor
cmc
push
jmp
nop
xchg
sub
fdivl
cld
xor
iret
testl
sbb
push
iret
adc
movsb
icebp
inc
xor
and
xor
push
mov
inc
mov
xor
pop
sbb
sbb
xchg
loop
xor
ficomps
adc
pop
addl
stos
lret
pop
and
fadds
loope
fstpt
mov
jbe
stos
inc
in
xchg
inc
adc
pop
repnz
jp
sbb
push
dec
xchg
xchg
lock
and
js
shrl
add
imul
mov
std
imul
mov
and
repnz
sub
mov
pop
dec
sub
jle
popa
inc
add
inc
mov
lds
cmp
int
cmp
mov
adc
inc
xor
test
inc
push
or
ficoml
push
fistps
mov
and
ja
sub
mov
repz
ficomps
mov
and
jns
popf
lret
outsl
into
xchg
mov
xor
adc
mov
fiaddl
aaa
lock
popf
cmp
daa
dec
loope
dec
sub
sti
mov
sbb
test
and
and
and
scas
xchg
rolb
or
rcrb
and
cmpsl
pusha
adc
int
dec
shl
xor
or
mov
push
pop
repnz
pop
or
push
add
sbb
fsts
add
in
xor
sub
jmp
inc
enter
pushf
jge
jmp
mov
and
push
jno
push
xor
pop
fcomps
in
inc
or
mov
bound
in
xor
cmpsl
sbb
and
lods
add
cltd
cld
push
pop
sub
add
jp
cmp
test
insl
imul
mov
jl
push
mov
andl
xchg
sbb
pop
loope
mov
dec
add
mov
or
call
adc
mov
or
mov
insb
enter
or
inc
inc
dec
and
in
jno
orb
and
int
xor
or
and
adc
pop
sub
xchg
fisubs
pusha
arpl
inc
dec
es
sub
dec
mov
xchg
test
rclb
and
jmp
test
cltd
xchg
mov
push
jl
iret
cmp
rolb
xchg
or
adc
push
insb
push
dec
loope
lret
cmp
fisubl
sbb
test
popa
test
test
mov
pop
cmp
or
and
mov
pop
mov
call
shrb
xchg
sub
sbb
ret
sub
je
rcr
mov
and
je
xor
mov
or
cltd
orl
xchg
push
adc
in
push
pop
jmp
xor
or
test
cmp
lcall
adc
pop
jb
sbb
and
imul
or
add
leave
pusha
lods
lret
stos
rcrb
push
cmp
sub
add
pop
das
pop
inc
jge
jmp
test
sub
push
push
push
outsb
push
arpl
or
iret
lcall
je
lret
push
mov
dec
mov
add
subb
rorl
add
mov
es
cmp
sbb
sub
dec
push
xor
insb
cmp
aam
add
mov
sub
imul
adc
ror
mov
les
or
mov
test
mov
mov
or
jns
stos
add
or
sub
pop
enter
and
push
sbb
adc
xchg
mov
sub
jmp
inc
rcr
sub
sub
push
xchg
int
xor
insb
cmc
ds
push
mov
push
xchg
jns
add
pusha
or
push
xchg
shl
xor
mov
and
aad
movl
sbb
iret
xchg
and
call
sub
sti
mov
dec
jbe
mov
and
add
loopne
ret
mov
shlb
xchg
jne
mov
popa
mov
and
int3
sub
mov
aas
sahf
push
cmpl
xchg
aaa
lock
jne
mul
adc
mov
sbb
mov
xchg
not
xor
jnp
and
pop
sti
and
and
inc
test
cmp
jp
addr16
xchg
dec
dec
daa
lds
bound
dec
aaa
orl
sbbb
add
imul
dec
xor
inc
shl
xor
stc
or
mov
push
jne
xchg
pop
test
push
jae
pop
mov
int
les
sbb
mov
mov
or
xchg
sbb
mov
shl
test
xor
xchg
mov
sarl
xor
stos
push
xchg
add
outsb
adc
push
xchg
or
sbb
cs
add
les
adc
addb
push
inc
inc
lock
sbb
loop
adc
das
loopne
loope
inc
push
push
xor
repz
imul
cmp
cmp
inc
jae
or
push
adc
test
sub
lcall
push
movsl
sub
ds
lret
dec
rorb
pusha
mov
or
sahf
and
dec
lea
test
adc
pop
int
rolb
rorl
clc
jno
popf
pop
pop
xchg
cmpsb
push
loope
scas
dec
push
push
push
and
jns
adc
insb
add
stc
pop
cmc
iret
daa
pop
jo
xchg
mov
mulb
push
cmp
dec
pop
aaa
js
xchg
push
sub
movsb
pop
adcb
mov
mov
pop
inc
pop
test
js
incl
pop
pop
add
sub
sarb
adc
cmp
test
or
inc
cmp
js
test
push
or
into
or
insb
ds
ss
cmp
push
mov
xor
jbe
ljmp
loop
xchg
or
jo
push
mov
mov
xchg
cmpsl
shrb
push
dec
cmp
scas
or
dec
adc
and
lea
push
push
loopne
mov
jmp
mov
inc
sub
cmp
sbb
adc
shrb
bound
je
sbb
loope
xchg
adc
jb
inc
out
sub
pop
lcall
jl
mov
push
cli
jecxz
shlb
push
je
and
inc
flds
add
pop
push
pop
sar
cli
jno
sbb
aas
adc
in
inc
xchg
and
mov
adc
sub
and
stos
jne
xchg
xor
cwtl
adc
jb
arpl
ds
js
fcoml
imul
dec
add
es
in
sbb
xchg
inc
push
and
pop
cmp
nop
popa
cmp
and
bound
aam
pop
inc
add
movsl
mov
mov
cwtl
movsb
mov
jno
fldl
jl
cltd
push
dec
xchg
pop
add
enter
movsb
xorl
pop
adc
sbb
jbe
and
adc
and
inc
push
and
rorb
inc
dec
push
mov
inc
xor
dec
roll
scas
inc
xor
outsb
jo
push
add
popa
push
rolb
je
fucomp
mov
repnz
mov
fimuls
adc
add
bound
lcall
pusha
sbb
push
ljmp
mov
sub
enter
loope
jae
push
test
cmpsb
xchg
mov
das
sub
fs
iret
lea
cmp
rorl
sub
sbb
jl
movsb
dec
add
pusha
std
fnstenv
or
xor
push
ret
shrb
mov
pop
fldt
sbb
mov
pop
add
sahf
push
ds
adc
or
das
xor
pop
sbb
adc
mov
and
sbb
dec
mov
out
pushl
pushf
fldl
test
pop
cmp
fidivl
sub
das
push
jns
call
jnp
pop
push
mov
pop
scas
cmp
jb
jmp
pop
mov
or
and
dec
push
cmp
or
loop
jae
adc
and
and
mov
add
add
xorb
cmp
push
cli
and
test
inc
mov
push
or
xor
mov
pop
cwtl
je
dec
cmpsl
mov
xor
add
adc
or
jp
andb
mov
cmp
sub
dec
push
push
xchg
push
mov
mov
ds
lods
sbb
pusha
daa
xorb
sti
dec
repz
mov
jnp
xchg
je
xor
movsb
push
ja
cmpsl
push
loop
xor
test
or
iret
xor
push
dec
leave
add
add
test
add
outsb
and
popa
adc
push
push
lret
js
cmc
cmp
aam
push
add
je
xchg
int
pop
out
outsb
ret
mov
adcb
sbb
mov
pop
xchg
mov
out
sub
repz
ret
mov
pushf
rcll
inc
mov
stos
int3
lea
mov
mov
jne
sbb
int3
mov
xchg
rcll
lretw
ret
jno
in
leave
fisubl
cmpsl
leave
jl
cmp
ss
push
in
leave
pop
push
lcall
jno
pop
call
iret
test
adc
dec
jg
insb
movsb
loopne
and
popa
xor
das
popf
pop
rol
in
sahf
cmp
jo
adc
jbe
aam
ss
or
push
xchg
sbb
das
mov
enter
sub
pushf
popa
sbb
push
dec
xchg
dec
mov
js
cmp
push
sbb
push
or
inc
add
sti
jmp
push
loopne
adc
repnz
fs
scas
inc
lret
cmovge
imul
pop
fbld
or
ja
fsubrl
cmc
mov
and
push
testl
or
mov
in
es
mov
inc
es
push
in
inc
cmp
and
loop
mov
push
shlb
adc
push
movsl
fisubrs
cld
pushf
jne
adc
repnz
jge
lds
push
js
call
insl
add
mov
aam
imul
test
cmp
dec
dec
cmp
and
inc
jmp
mov
sub
pop
jp
xor
mov
mov
mov
lret
popa
leave
test
rolb
mov
or
icebp
xchg
add
mov
leave
scas
add
out
stos
mov
push
or
loopne
and
popa
inc
mov
nop
orl
dec
sub
jne
iret
add
add
or
sub
addb
rcll
sbb
add
add
cmp
jecxz
nop
push
fs
mov
mov
pop
daa
jmp
movb
mov
add
cs
sbb
adc
jp
push
push
and
push
add
enter
add
pop
rol
xorb
or
into
lock
fmuls
nop
adc
ljmp
dec
jle
enter
mov
lods
rcrl
add
mov
std
push
push
mov
cld
je
nop
fldenv
jl
jno
fiaddl
aas
incl
lock
mov
jbe
mov
lahf
mov
add
push
inc
xor
xor
push
mov
movsl
sub
test
pusha
sbb
push
test
lods
push
mov
mov
push
dec
or
cmp
cs
or
mov
adc
jae
sub
push
orb
rcl
inc
xchg
andb
ffree
dec
xor
mov
test
and
mov
and
icebp
or
dec
or
subb
and
and
sti
jge
and
ds
sbb
adc
subb
rorb
ss
addr16
lret
cmp
and
outsl
cmp
dec
subb
inc
push
push
push
push
mov
add
out
dec
adc
inc
push
lea
sbb
add
lock
add
push
fwait
push
push
stos
adc
xchg
sub
fsub
inc
dec
jmp
xor
cltd
mov
push
maskmovq
mov
mov
xor
xchg
mov
cmpsb
pop
lods
push
xor
push
ja
push
mov
testl
arpl
imul
add
pop
movb
add
add
adc
dec
aas
cmp
push
push
pcmpeqb
push
cli
daa
and
sbb
or
leave
loope
push
mulb
jmp
daa
xchg
xorl
mov
pusha
mov
pusha
gs
jne
dec
push
push
test
push
inc
addl
xor
lods
jnp
call
jmp
nop
movsb
dec
jo
sbb
inc
push
xlat
sub
xchg
xor
pop
fistpl
or
addb
push
xor
arpl
add
cmpsb
mov
leave
add
cmp
scas
fistl
sub
or
push
xchg
pop
jns
cmp
test
pusha
dec
jmp
out
dec
push
jle
xchg
mov
cmp
adc
out
xorl
mov
xchg
inc
lret
cld
cld
inc
andl
aas
inc
mov
fldl
stos
push
push
popl
cmp
and
fisubs
rolb
scas
or
cmp
bnd
es
mov
pop
leave
cltd
sbb
std
je
stc
jl
outsb
nop
int
ja
push
pop
xchg
cmp
in
stos
sbb
jmp
fsubl
ds
pop
cmc
add
jmp
inc
test
jmp
icebp
mul
jmp
ffree
popa
mov
inc
sub
push
int
movb
mov
xor
movsb
adc
and
cmp
insl
scas
inc
add
mov
pop
rep
pop
dec
adcb
mov
pop
loopne
les
mov
dec
mov
jo
sub
std
cmp
cmpl
adc
mov
jne
cmpl
adc
clc
nop
icebp
and
dec
mov
pop
push
jl
mov
add
movsl
insl
xor
sbb
cmp
ficompl
push
push
f2xm1
add
mov
lock
push
dec
in
adc
fnstenv
fisubl
mov
push
cwtl
dec
outsl
cmpsl
xchg
into
inc
inc
mov
sbb
add
and
cmc
shr
subl
test
shl
add
clc
add
nop
jb
jo
add
inc
and
loopne
hlt
sub
dec
push
into
lea
jg
rorl
inc
push
add
push
jg
adc
mov
jb
daa
mov
cmp
je
repnz
cmp
sbb
sub
aas
adc
push
daa
pusha
and
enter
jo
xchg
lea
mov
cmpb
and
adc
loop
pushl
xchg
push
mov
sbb
sub
xor
and
push
push
and
jge
ja
lds
aas
cmp
mov
fs
mov
lret
iret
imul
sub
dec
jo
out
repz
mov
data16
iret
movsb
in
or
fwait
iret
repz
sbb
test
xor
out
push
lret
cs
push
dec
repz
mov
in
cmpb
mov
push
repz
imul
sub
sbb
inc
cmovge
push
xchg
add
cmp
mov
leave
lds
adc
gs
xchg
movsb
xchg
or
lea
sbb
push
orl
lret
sarb
or
mov
scas
lods
inc
add
mov
or
xchg
lods
sarl
lret
popf
shlb
add
push
add
sldt
inc
js
xor
sti
push
jmp
and
xchg
fsubrs
jmp
rolb
pop
xor
inc
push
jmp
jp
dec
inc
xorb
push
cltd
push
bound
mov
xchg
push
jg
cltd
xchg
inc
into
repz
mov
aam
add
xor
mov
push
push
or
popa
add
jo
xor
pushf
out
push
and
imul
adc
mov
pop
fcom
add
or
popa
dec
inc
dec
adc
stc
xor
cmova
insb
sbb
jmp
mov
pop
movsbl
int
mov
test
notb
cmp
lods
sarb
imull
inc
loopne
or
push
jae
cwtl
or
lahf
lea
xor
or
xchg
movups
ret
fisubl
jno
clc
jmp
lret
cwtl
add
mov
mov
mov
gs
xchg
addl
mov
add
push
mov
and
push
inc
dec
inc
sbb
cmp
add
xorb
add
add
add
and
sub
xchg
add
dec
mov
xor
cmp
and
and
dec
add
sbb
or
icebp
stc
push
push
push
mov
mov
mov
jge
sbb
and
mov
or
xchg
sub
insl
jnp
out
jb
mov
gs
iret
jnp
push
lods
mov
mov
add
pop
push
inc
test
aam
jbe
andl
fmull
sbb
inc
push
fcoms
add
or
sbb
or
push
nop
add
push
add
inc
femms
inc
push
nop
add
add
add
sbb
nop
pop
add
nop
add
sbb
sbb
add
add
sbb
inc
pop
or
xchg
add
push
fidivrl
pop
sarb
sbb
cmp
adc
nop
mov
and
insb
add
ss
leave
jp
out
adc
lret
cmpb
jb
xchg
mov
adc
rcrl
inc
xor
cmp
inc
cmp
and
mov
clc
inc
push
pop
adc
mov
data16
add
hlt
adcl
add
test
ja
inc
mov
lea
jno
cmp
mov
mov
mov
ficompl
add
push
jmp
inc
push
xchg
test
push
pop
popaw
xchg
adc
xchg
push
mov
or
mov
repz
push
push
push
gs
pop
bound
arpl
cmovne
in
je
jecxz
and
sub
pop
cmpl
jecxz
dec
add
xchg
or
lock
xchg
dec
push
or
in
push
mov
movsl
or
inc
jo
or
outsb
mov
adc
rcrb
mov
push
pop
dec
push
add
cs
push
sahf
popa
jge
movl
sbbb
ljmp
call
mov
inc
push
mov
mov
lea
xor
pop
push
push
mov
lods
sub
cmp
pop
dec
ljmp
icebp
adc
inc
pusha
ljmp
iret
aam
dec
xchg
mov
lret
and
inc
sub
add
inc
hlt
adc
stos
popa
jecxz
call
je
adcb
and
js
push
sub
mov
mov
gs
sbb
lock
mov
mov
mov
push
inc
fldl
out
sub
inc
inc
cwtl
insb
xor
cmc
loope
insb
xor
add
xchg
nop
cs
enter
mov
xchg
mov
mov
test
jge
cli
mov
mov
test
mov
mov
fsubl
test
scas
lea
imulb
int
imul
push
push
sahf
cmp
lods
push
push
lods
ss
dec
xor
xchg
add
pop
gs
cld
cli
pop
faddp
sbb
pop
or
xchg
or
xor
cltd
push
sbb
ljmp
mov
jmp
imul
aaa
xor
jbe
cmp
shrb
lret
lret
std
jno
mov
adc
in
loope
sti
sti
push
inc
push
js,pn
add
jo
adc
in
push
mov
inc
push
adc
leave
inc
shrb
ja
push
adc
ret
sbb
adc
cmp
cmpsl
popl
push
pcmpeqw
xchg
add
push
icebp
push
or
imul
inc
pop
pop
test
int
sbb
cmp
fisttpl
push
and
mov
loop
lods
arpl
or
mov
mov
mov
xchg
push
cmp
ret
mov
push
addb
dec
jbe
mov
mov
jle
push
adc
add
xchg
sbb
movsb
and
bound
or
fs
fs
ficoml
add
push
sub
inc
push
sbb
insl
lods
mov
aam
mov
xchg
test
mov
xchg
sub
adc
gs
xchg
dec
add
lea
je
js
shr
jnp
adc
sbb
inc
dec
cmpsb
sbb
or
xchg
test
into
ret
push
mov
push
xchg
lea
dec
or
mov
jmp
sub
mov
incb
out
or
dec
sub
cmp
mov
push
popa
insb
add
pushf
andb
xor
dec
out
push
sub
or
adc
cmp
into
cmp
mov
add
push
imul
push
adc
xor
test
inc
xor
repz
and
je
data16
roll
rolb
roll
nop
xor
lds
notb
es
ret
xchg
ficompl
xchg
leave
or
lock
ret
ss
and
add
add
or
push
and
and
add
jb
insl
ljmp
add
push
call
xchg
hlt
add
aad
lcall
push
inc
push
iret
adc
hlt
movsb
pop
cmp
inc
adc
fcoms
mov
xor
sub
jmp
into
ret
add
sub
mov
test
movsb
out
notl
jb
mov
adc
ret
pushf
sub
jle
dec
pusha
adc
inc
jne
xchg
and
adc
jmp
xchg
data16
jno
jno
or
fmul
jb
mov
cmpsl
add
js
mov
jp
push
push
sub
xchg
cmp
adcl
adc
mov
sub
loope
shr
aam
push
xchg
fs
je
push
xor
push
in
or
mov
sub
push
sbb
or
pop
jge
clc
add
sub
inc
jge
outsb
cltd
add
push
lea
aad
and
push
and
sub
dec
or
cltd
xor
inc
cmp
ljmp
mov
inc
add
push
mov
aas
and
addl
xchg
xor
push
jae
fs
nop
sub
or
lret
rolb
push
insl
mov
adc
bound
mov
outsl
xchg
xchg
insb
out
xchg
or
jle
inc
cmpsl
mov
adc
inc
jae
pop
mov
or
leave
pop
add
movb
push
add
inc
in
pop
inc
rcll
js
mov
lds
mov
dec
inc
clc
add
mov
push
push
sub
adc
mov
andl
jmp
pushf
out
mov
mov
dec
fisttpl
push
mov
jbe
cli
pusha
mov
push
iret
cmp
inc
leave
mov
push
push
fsts
or
add
add
pop
add
inc
xor
push
dec
loope
sbb
dec
or
and
mov
loope
push
rolb
ds
mov
mov
xor
mov
adc
loope
jl
pop
adc
and
or
inc
or
int
sub
js
sub
mov
cmpsl
loope
adc
push
and
imul
xor
shl
lds
jecxz
fstpt
shrl
hlt
xor
pusha
out
sub
sbb
ds
sbb
mov
pop
or
inc
rclb
pop
cmpsl
fwait
nop
test
fidivl
inc
mov
data16
push
mov
xor
push
xor
and
icebp
lods
inc
lods
sbb
adc
leave
test
cmp
rcrl
test
xor
push
mov
enter
sbb
rcrb
lret
or
jo
push
adc
inc
mov
or
dec
sub
cmpsb
in
std
test
outsb
add
push
mov
and
addb
insb
xor
fidivs
xor
xchg
and
adc
xchg
add
dec
pop
ds
add
popa
les
sbb
test
push
and
mov
jae
mov
sahf
cmp
lret
dec
xor
aam
mov
xchg
addb
pop
mov
push
add
bound
enter
and
push
je
push
xchg
sub
inc
cwtl
shlb
dec
jo
push
jg
iret
sarb
jne
ds
jmp
add
mov
cmpsl
pop
cmp
pop
dec
pop
mov
movsb
fistl
sbb
push
push
sub
adc
xorb
lods
leave
les
mov
addb
add
not
or
insb
sbb
fmul
punpcklwd
cwtl
mov
test
or
mov
mov
sub
inc
gs
lcall
push
mov
out
sbb
sbb
cmpl
inc
shlb
mov
and
push
pop
popa
aam
movsl
sub
xor
dec
or
pop
push
xchg
pop
stc
sub
rolb
xchg
das
xor
dec
push
dec
sti
js
or
cmc
xor
sbb
push
popa
mov
cmpsl
or
test
inc
pusha
pop
sbb
pusha
dec
in
cmpsb
mov
inc
adc
cmp
and
sahf
add
mov
pop
mov
xorl
lock
sbb
xchg
jl
mov
pop
push
inc
cmc
clc
dec
and
iret
ja
jb
ret
push
and
and
outsb
scas
add
lds
adc
sbb
data16
jne
sub
push
dec
push
xor
pop
push
xor
cmp
jo
inc
pop
andnps
add
add
sub
xchg
sub
push
jbe
aas
mov
mov
push
lods
dec
jmp
mov
cmp
shll
lods
out
cmp
or
leave
and
test
adc
fidivs
shld
imul
orb
pop
adc
mov
jne
ret
sbbb
das
or
mov
stos
adc
into
mov
popa
cmp
daa
ret
pop
movsb
mov
insb
cs
pop
sarb
and
sbb
or
mov
and
cmp
xor
add
sbb
test
cmc
push
mov
xor
cmp
xor
dec
adc
je
sbb
into
adc
pop
enter
insl
pop
test
inc
adc
push
inc
imul
mov
aam
dec
decl
mov
pop
or
lock
push
mov
repnz
sbb
inc
sbb
pop
inc
mov
mov
sub
or
add
in
sbb
inc
stos
sub
in
and
add
aaa
cmp
mov
and
pop
enter
and
adc
mov
adc
movsl
or
adc
daa
lds
sbb
mov
or
push
inc
add
pminsw
pop
push
inc
dec
lods
test
dec
dec
test
dec
add
mov
gs
cmpsb
mov
cltd
sub
or
inc
dec
leave
rorb
testl
in
loope
incb
lret
jp
push
ss
std
sbb
xlat
xor
iret
xor
jb
and
xlat
adc
or
dec
int
lock
ret
loopne
add
push
rclb
jo
movl
sbb
or
es
rolb
dec
cmp
xchg
pusha
cmpsb
xor
add
fildl
pop
sub
xorb
aam
inc
jne
call
pop
fisttpll
mov
je
iret
test
mov
jns
push
jo
pop
adc
in
popl
lret
gs
jl
add
inc
mov
jne
aaa
cmp
push
addr16
cmp
je
xor
mov
push
or
lea
sbbb
lahf
incl
or
addr16
jne
pop
push
adc
cs
lock
nop
or
or
lea
push
inc
mov
jo
out
pop
push
cmp
lods
jo
push
or
or
popf
or
add
push
je
imul
test
push
xor
mov
movsl
mov
push
dec
push
push
shr
aam
add
ret
jecxz
movsl
inc
pop
mov
in
jmp
loope
inc
leave
adc
or
mov
add
cmp
rclb
push
push
adcb
jle
repnz
jbe
push
adc
test
inc
popf
inc
int3
and
sbb
and
push
ds
pop
and
repnz
mov
mov
sbb
lods
or
mov
ja
lret
addr16
pop
jae
mov
push
jo
mov
push
std
mov
add
mov
loope
pop
cmp
push
dec
push
push
add
pop
in
push
loopne
pop
add
je
add
inc
xchg
jbe
dec
loopne
inc
fadd
filds
test
cltd
cld
sub
data16
mov
divl
and
arpl
and
dec
xchg
sbb
inc
pop
lret
mov
adcl
cmp
push
dec
add
pop
and
inc
adc
clc
jns
pop
sub
xor
pop
mov
in
cmp
add
sbb
mov
rcll
or
xor
cs
push
or
push
xchg
dec
mov
shl
cltd
imul
icebp
das
dec
call
fisubrl
ret
leave
and
in
and
shr
push
sub
loopne
sarl
jg
lds
add
jbe
popf
lds
inc
scas
sarl
mov
iret
pop
in
test
xor
cmp
dec
adc
testb
xor
sbb
adc
mov
xor
add
xchg
cmpsl
outsb
sub
jp
mov
lea
lods
fmuls
dec
andb
jg
mull
xor
or
xlat
cltd
dec
pop
sub
pop
or
jp
push
sub
sub
subl
in
shll
adc
sub
jne
add
xor
daa
adc
mov
jge
sub
push
sub
movsl
mov
into
xor
mov
or
xor
lret
jg
jo
push
pop
inc
je
push
push
sub
pop
mov
jno
cmpl
push
insl
fucomp
xor
or
sbb
stos
mov
mov
and
sub
das
movsb
or
cmp
je
fimuls
xchg
sub
iret
in
sub
adc
xor
and
int
add
loopne
nop
test
push
ret
ljmp
dec
js
sti
adc
ret
cs
or
out
or
pop
or
out
mov
xor
out
addr16
fimull
pop
sbb
push
inc
sti
movswl
push
push
into
mov
sti
xor
jae
adc
push
push
xor
cli
fistpl
stc
add
push
and
ror
shr
add
roll
push
fwait
and
ret
pusha
mov
jge
adc
out
or
addr16
pop
mov
fsubrs
loopne
insb
and
and
inc
push
jl
cwtl
push
xchg
movsl
repnz
movsb
add
in
ret
sub
repz
out
mov
out
inc
dec
jg
bnd
fs
mov
push
addr16
add
mov
push
push
movsl
nop
and
push
mov
xlat
mov
cmp
daa
scas
ss
inc
or
push
lods
rcll
leave
and
push
icebp
add
aad
add
add
ror
mov
xlat
out
jmp
rolb
pop
out
cwtl
dec
in
cmp
test
cmp
test
loop
outsl
std
inc
daa
and
cs
repz
testb
push
imul
lcall
pop
in
movb
jnp
push
sub
lcall
and
fisubrl
fs
or
sub
dec
or
or
cmp
loopne
mov
test
jbe
xchg
in
sbb
add
outsl
or
or
andb
add
or
pop
dec
and
or
or
lock
jnp
shl
xchg
sbb
sbb
test
lock
and
push
pop
decl
sahf
add
inc
test
jo
add
fisubrl
sub
push
daa
pop
mov
sub
es
aas
fldcw
lods
fwait
and
mov
add
scas
lods
lock
jg
mov
push
mov
adc
gs
inc
pop
cmp
sbb
cmpl
fs
pop
xchg
dec
add
and
je
or
movsb
aas
clc
pop
fistl
pop
arpl
inc
dec
shll
js
adc
insl
cld
jmp
int
sbb
pushf
dec
fbld
xor
clc
jg
and
sbb
adc
mov
xchg
push
push
dec
sub
orl
xor
adc
cmpsb
cmp
mov
and
inc
mov
mov
into
mov
negl
mov
scas
sbb
and
clc
test
out
sti
pop
sbb
dec
inc
and
fdivrs
std
and
sub
je
push
jne
pop
adc
bound
insb
jmp
jae
addr16
ficompl
lods
and
fnstcw
or
dec
xor
hlt
cmp
mov
das
fists
movsb
dec
jmp
mov
mov
inc
outsb
adc
jae
inc
jne
stc
xor
inc
xchg
popa
and
loope
loope
pop
sbb
int
jmp
cli
outsb
push
xor
sub
xchg
sti
jg
jbe
dec
add
mov
mov
fsubs
adcb
jo
push
fisttps
jmp
mov
add
mov
adc
test
push
or
nop
jp
out
scas
mov
ret
lcall
mov
imul
fs
push
sbb
test
outsb
nop
ficoms
push
pop
mov
in
pusha
jecxz
andl
add
push
add
xchg
fsts
aad
add
xchg
les
dec
add
mov
rcr
xchg
push
fcoms
int
sbb
imul
add
scas
cmp
jne
cmp
jne
jecxz
les
jecxz
insb
cmp
jne
cmp
out
loop
lahf
mov
adc
add
pop
push
and
push
lods
fadd
push
adc
jmp
adc
cmpsl
repz
into
loopne
pop
cmpsb
mov
fnstcw
jne
ljmp
dec
shlb
xlat
insl
pop
aaa
lea
cmp
dec
dec
sub
and
daa
inc
xor
pop
pop
dec
cmp
mov
addl
sub
inc
push
sbb
adc
pop
and
push
xor
dec
shr
mov
pop
js
pop
stc
icebp
jne
dec
pusha
cmp
pop
pop
bound
sahf
int
add
fsubrp
rcrb
jmp
data16
aad
push
shrl
ss
xchg
cs
loop
lods
popa
int
imul
adc
adc
push
push
sbbb
push
adc
mov
mov
add
jge
add
and
inc
xchg
jmp
rolb
outsb
mov
out
cmpsb
pop
xchg
sub
mov
mov
lock
fs
add
lss
orl
sub
addl
or
or
xor
test
xor
sahf
adc
or
loopne
fwait
jg
fdiv
in
sbb
and
push
das
xor
lods
adc
fucom
jl
bound
mov
je
mov
je
popl
add
push
add
sbb
je
lea
test
insb
and
les
je
push
addb
add
push
or
fistpll
out
test
cmp
dec
push
jge
sub
or
fwait
xchg
and
mov
sub
je
movsb
out
cld
xchg
mov
push
stos
sbbb
inc
sub
push
add
push
xchg
push
or
inc
sbb
leave
add
jne
and
push
mov
fs
repnz
or
jne
pusha
xchg
popa
xor
mov
push
nop
lods
mov
dec
repz
in
insb
movsb
add
mov
sbb
add
mov
pop
cltd
add
in
jle
lea
dec
adc
dec
inc
sbb
cmc
jl
adc
mov
xor
add
inc
pusha
push
sbb
jp
and
adc
xor
out
sahf
xlat
jne
push
inc
adc
inc
out
sub
add
cli
add
inc
out
add
dec
je
inc
or
sbb
dec
ret
cltd
test
shll
jbe
jg
dec
addb
jne
push
xchg
jne
push
cmp
bound
dec
lret
sub
pop
mov
fadds
xchg
or
testl
aad
sub
inc
mov
outsl
fdivl
push
daa
pushf
mov
insb
sub
inc
or
sbb
sub
fistps
das
add
scas
shld
jno
stos
xchg
test
lods
push
mulb
adc
pop
or
mov
and
xor
sub
inc
sbb
sbb
push
int3
nop
cmc
je
scas
jmp
movsl
sbb
dec
and
xchg
mov
mov
jecxz
add
sbb
or
and
jnp
outsb
sarl
xor
inc
xchg
pop
loopne
roll
or
cli
ljmp
xchg
push
dec
dec
and
adc
aad
sbb
dec
inc
sub
add
mov
inc
mov
add
frstpm(287
and
pushf
aad
out
dec
mov
pop
xchg
cld
leave
sbb
or
jecxz
aad
leave
xor
sti
push
xchg
lods
in
xor
xor
inc
cmp
jl
mov
push
mov
orl
push
xchg
cld
inc
movsl
xchg
lods
adcl
xor
mov
popa
xchg
lds
jmp
jg
jle
shll
xor
inc
pushl
mov
adcb
mov
adc
leave
cmpsl
jae
push
push
in
aad
mov
add
pop
movsb
addl
loope
add
lret
cmp
cs
add
mov
daa
xor
pop
push
jp
sbb
cmp
je
dec
pop
js
add
popa
adc
fwait
jb
sbb
adc
pop
push
stos
sbb
movsl
add
push
outsb
xor
repnz
ja
push
inc
xor
xor
fldcw
mov
test
sub
pop
popf
push
nop
mov
je
mov
test
xchg
loop
outsb
adc
inc
dec
dec
imul
je
add
pusha
cmp
testb
sub
or
jnp
adc
push
frstor
add
dec
or
ret
rorl
add
adc
adc
imul
mov
repz
faddl
and
clc
loopne
mov
lods
test
jns
aad
faddl
sbb
push
xchg
pop
cmp
adc
aas
cmp
and
sub
xchg
bound
cmpsb
ror
stc
sbbl
inc
jge
loope
in
mov
push
movsb
das
dec
cmp
pop
and
repnz
jmp
nop
and
dec
mov
ror
push
roll
or
add
dec
xor
js
loopne
cld
mov
pop
js
jo
test
mov
das
push
pop
and
mov
sahf
imul
fsubr
xor
mov
xchg
js
or
xchg
in
xlat
jl
inc
ljmp
jne
loop
inc
inc
mov
jo
outsb
test
in
jecxz
cltd
xchg
xor
mov
stc
mov
mov
pop
js
inc
push
mov
push
dec
push
xor
mov
and
xor
imul
push
xor
andl
test
jne
pop
pop
sbb
mov
mov
mov
jbe
dec
add
mov
push
inc
push
mov
lcall
mov
sti
push
add
xchg
dec
adc
cmp
cmpsb
inc
jmp
mov
mov
push
jge
loopne
loop
push
icebp
mov
mov
mov
std
cmp
mov
test
popa
sti
ret
pop
push
dec
test
xor
xor
repz
frstor
mov
je
or
xor
hlt
repz
je
dec
je
inc
jne
dec
dec
mov
jg
cmp
adc
sub
adc
jne
loopne
roll
and
cmp
jge
mov
add
jo
mov
js
stos
xor
loop
cltd
inc
in
jecxz
pop
inc
push
jl
stc
sub
add
test
add
sbb
dec
mov
loopne
mov
je
mov
push
jo
adcl
dec
clc
dec
or
dec
sbb
xor
mov
jo
or
cmpsl
pop
cltd
lds
add
inc
sbb
popf
fcoml
mov
faddl
jns
std
loopne
fidivl
mov
xor
add
enter
lea
icebp
adc
andl
cmpl
add
mov
rolb
shrb
data16
dec
mov
mov
jns
adc
in
int3
jle
push
push
daa
push
dec
jnp
pop
addr16
out
push
jb
jge
jmp
popa
push
pop
lods
bound
push
jmp
pop
inc
jmp
inc
ret
jl
rorb
cmc
sub
movsl
jp
and
pusha
and
rolb
dec
lcall
fwait
aam
cltd
dec
ret
adc
in
bound
sub
mov
call
pop
lock
adc
pop
add
and
add
push
pusha
add
adc
pop
dec
adc
and
data16
push
sbb
and
rcl
pop
add
iret
add
rclb
pop
repz
xchg
in
jnp
push
xor
jg
movsb
add
mov
push
jo
jg
ss
sbb
jne
dec
dec
mov
dec
leave
xchg
arpl
fs
inc
cmp
repz
loopne
inc
and
cmp
push
mov
inc
sub
in
pop
add
add
add
adc
sbb
insb
mov
adc
adc
sub
pop
cmp
into
jge
fcomps
adc
mov
arpl
int3
and
jne
jns
push
or
in
lock
cmp
addb
add
xor
jle
jb
xchg
jbe
or
or
mov
mov
dec
gs
pop
sbb
movsl
add
adc
fdivl
ss
aaa
adcl
or
adc
pop
and
xlat
pop
mov
add
pop
mov
cmp
sbb
mov
test
jae
cmp
cmpb
aam
inc
test
sub
ja,pt
cmpsb
push
xor
cmp
sbb
and
jmp
roll
or
adc
rolb
pop
cmp
or
out
lret
sti
add
or
enter
iret
push
fs
ljmp
test
addb
andb
movsl
sub
push
outsb
mov
stc
sbb
addl
pusha
nop
scas
lea
sarb
inc
pop
insb
lods
ficoml
mov
imul
push
loop
sbb
nop
push
inc
jbe
sbb
add
sbb
inc
sub
movsb
add
xlat
or
push
mov
sti
lds
inc
ret
mull
fs
movsl
insb
js
ret
std
push
adc
mov
add
cmp
lret
push
add
lret
or
inc
dec
fs
push
pop
xor
mov
sbb
notl
fs
xor
push
sub
cmp
fwait
dec
lahf
xchg
cmpl
and
les
or
add
add
inc
sbb
add
jmp
movsb
inc
cs
test
arpl
push
xor
pop
adcl
dec
adc
sub
cmp
push
push
shrb
push
push
mov
addb
sub
into
adc
add
inc
mov
mov
jl
rol
rol
scas
repz
roll
push
xor
add
stos
adc
clc
fsubr
xchg
roll
je
mov
inc
dec
pop
popf
lret
cwtl
adc
insb
adc
jne
ret
xor
xor
pop
enter
insb
add
sbb
dec
imul
adc
fiaddl
ds
adc
rcrl
xor
shlb
xchg
mov
lea
aad
pop
or
popa
pop
rorl
or
add
dec
and
dec
add
cld
add
and
xor
pusha
pop
sub
sbb
jnp
cmp
cmpb
shll
sbb
jg
cwtl
imul
mov
sbb
aaa
adc
out
cwtl
pusha
loop
xor
push
sbb
push
mov
sti
xor
dec
mov
adc
dec
shlb
adc
push
outsl
iret
sub
mov
sbb
pop
pop
aaa
fcoml
and
orb
test
mov
or
pusha
cmpsl
adc
sub
dec
arpl
and
pop
dec
add
dec
push
stc
push
xor
sbb
je
xor
sbb
call
fdivrp
add
loopne
imul
scas
add
jecxz
xchg
mov
rol
or
outsl
cs
lock
andl
pusha
add
stc
jno
and
inc
add
push
xor
add
add
sub
dec
js
jb
test
dec
inc
addb
js
movl
imul
mov
aaa
jns
fldcw
xor
add
adc
push
out
test
pop
jp
push
lods
push
pop
push
mov
mov
adc
jbe
inc
or
push
lods
push
xor
rorb
push
push
add
jl
jmp
roll
popf
inc
fwait
sub
dec
xorl
mov
fcoml
ja
ret
pop
mov
xor
fs
inc
or
mov
cmp
je
jb
in
xor
sbb
jle
push
push
cmp
or
dec
aaa
push
mov
mov
mov
mov
adc
mov
stos
or
aam
add
nop
push
mov
push
fcomps
ret
outsb
mov
xchg
loopne
aam
inc
adc
inc
add
or
lods
sub
movsl
ss
imull
adc
in
cmpsl
push
dec
xchg
enter
add
movl
lcall
xchg
lret
pop
cmp
dec
insl
insb
xchg
sbb
ja
int3
popa
lret
dec
loope
divl
xchg
fsts
pop
mov
orl
push
or
xor
jb
or
fwait
sbb
push
cmp
xchg
sub
pop
adc
adc
ficompl
daa
mov
stc
push
sbb
js
mov
xchg
add
enter
ror
sbb
and
mov
loope
xor
mov
into
jno
imul
mov
mov
cmpsb
in
mov
dec
xorl
xorb
dec
sub
sbb
adc
mov
mov
push
mov
nop
pop
xor
mov
adc
push
push
add
add
push
pop
add
iret
repz
add
lods
mov
cmp
lock
fdivrs
add
push
popa
imul
jp
and
je
inc
add
ds
add
rolb
add
in
sbb
in
cs
adc
adc
or
lds
adc
inc
inc
jo
pop
pop
add
add
pop
pop
sbb
add
pmulhuw
add
xchg
mov
mov
xor
pop
sbbl
cmp
repnz
dec
mov
clc
jnp
mov
mov
stos
ret
ljmp
pop
scas
or
inc
xchg
xchg
adc
add
inc
lds
and
insb
outsl
arpl
je
outsl
outsb
fidivrs
push
cld
jg
inc
outsl
jb
insl
mov
je
jb
gs
ss
add
arpl
outsl
add
gs
out
js
add
add
add
outsb
arpl
gs
outsl
imul
mov
push
add
dec
add
add
push
inc
adc
filds
inc
insb
jae
jb
rcpps
and
adc
pop
inc
inc
cmp
pop
or
imul
dec
sbb
push
push
pop
lret
add
sbb
gs
iret
add
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jg
mov
push
lret
pop
pop
pop
pop
pop
ljmp
clc
pop
pusha
popa
bound
addr16
imul
jo
jb
je
jbe
js
loope
xor
jp
jl
jle
outsb
cmp
mov
or
outsl
ja
and
jo
loopne
in
test
dec
cmp
pop
ret
xor
cmp
pop
jb
outsb
fildl
jbe
ret
and
dec
dec
push
push
xchg
push
dec
dec
inc
jle
rcl
dec
dec
inc
and
push
ss
adc
aas
lds
add
jo
imul
inc
ret
imul
and
sub
fidivl
inc
and
fs
decl
pop
cld
jb
jb
and
cmpsb
cmp
or
gs
outsb
data16
outsb
je
arpl
daa
mov
jne
pop
xor
and
mov
push
xchg
ror
aas
xor
or
scas
loopne
dec
mov
rolb
jnp
data16
stos
out
insl
bound
and
xchg
xor
ja
and
jbe
dec
mov
sbb
scas
sarl
es
adc
out
bound
push
and
je
mov
dec
in
mov
imul
pop
test
xchg
insl
and
mov
inc
cmpl
dec
subl
insb
jb
cmp
arpl
xor
outsb
mov
fisttps
xchg
dec
popa
imul
out
xor
int3
or
push
pop
shlb
cmp
insb
popa
pop
mov
pop
enter
jns
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
sbb
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
pop
mov
into
mov
mov
pop
out
add
add
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
push
inc
aaa
insl
in
fcmovb
dec
shr
push
pop
shrl
outsb
ss
cs
popa
pop
or
std
cmp
jno
rclb
leave
roll
or
fisubrl
jbe
inc
gs
push
cmp
pop
sub
in
xor
and
inc
dec
ja
and
pop
push
cmp
mov
add
addr16
jae
xor
jne
pushw
pusha
jo
inc
pop
mov
subl
add
shrb
sub
add
xchg
lret
inc
sub
pop
dec
jmp
dec
or
add
cmp
pop
sub
jnp
mov
inc
jne
ds
gs
rcrl
push
dec
cmp
jns
iret
in
dec
xor
or
sbb
iret
and
pop
jb
nop
xchg
xchg
fidivrl
and
or
sub
sub
outsb
add
sub
dec
jnp
lds
mov
adc
aaa
mov
push
adc
add
add
add
add
sub
push
pop
pop
lods
aaa
std
sub
or
inc
and
or
pusha
cltd
notl
js
or
sub
xor
fcompl
add
jbe
out
shll
mov
daa
jns
and
mov
push
xor
data16
pop
lds
pop
push
jne
sti
jbe
bound
insb
fs
cmp
aas
lretw
out
sub
arpl
insb
dec
roll
cmpsb
cmp
call
dec
mov
xor
pop
inc
jnp
outsb
testl
sub
sub
int3
push
mov
ltr
ja
sbb
or
push
add
add
xorb
inc
or
test
es
fwait
jbe
sbb
dec
cmpsb
and
push
push
std
scas
ljmp
dec
push
push
dec
dec
inc
dec
inc
pushf
sub
add
jg
or
cwtl
shrb
aas
pop
stos
push
cmp
push
dec
dec
push
nop
push
push
sbbl
lret
jb
push
popa
loope
push
inc
bound
jb
jo
dec
dec
dec
add
inc
popf
adc
push
gs
dec
outsl
jbe
xchg
mov
call
bound
fs
imul
sahf
dec
and
jns
add
das
das
adc
dec
push
inc
je
xchg
pop
scas
or
mov
adc
jb
insb
out
push
and
xchg
outsb
gs
bound
inc
arpl
mov
jb
iret
jbe
into
mov
scas
cmpsl
xchg
popl
pushf
jae
jg
addr16
jne
xchg
add
xchg
adc
xchg
push
daa
inc
clc
sbb
xchg
adc
mov
jae
mov
pop
dec
inc
ds
xor
jo
or
jb
or
and
sub
dec
add
jb
push
jb
adc
add
xorb
leave
add
and
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
out
popa
mov
addl
mov
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
ljmp
mov
mov
mov
mov
mov
ret
enter
dec
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
hlt
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
rorb
adc
inc
lea
xchg
rol
nop
bound
lods
add
out
push
mov
outsl
ja
je
cs
jae
sbb
bound
dec
sti
movsl
sbb
dec
popa
mov
addr16
icebp
inc
push
movsb
jne
daa
pop
lea
dec
cmc
out
aam
mov
outsl
js
push
inc
push
xor
cs
dec
neg
mov
xor
sub
add
add
mov
mov
inc
dec
jae
rolb
sbb
sbb
pop
ret
outsb
addr16
jl
inc
dec
or
sub
mov
xchg
adc
add
add
fiadds
inc
mov
push
orb
sub
cmp
inc
pop
fcoms
mov
into
in
fsubrs
xor
fsubrl
or
js
jo
add
addb
rolb
push
and
insb
xchg
and
daa
xchg
inc
insb
das
popa
mov
imul
addb
imul
les
inc
jns
daa
pop
fcomps
ss
jns
mov
insl
inc
loop
daa
outsb
shlb
lods
cmp
sbbl
rorb
arpl
jns
imul
pop
pusha
inc
jbe
cmp
fisubs
jns
cs
scas
mov
movsb
xor
popl
pop
dec
mov
push
pop
or
mov
pusha
xor
es
dec
and
lock
pop
dec
xor
xchg
pop
pop
pop
push
mov
lea
push
jae
cmp
cmp
loopne
pusha
insb
call
negl
mov
outsb
gs
add
scas
mov
popw
or
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
inc
outsb
cmp
push
jnp
cmp
mov
dec
jge
jno
add
lock
imul
mov
pandn
push
inc
test
outsl
jae
imul
xchg
inc
lods
es
popa
es
fildl
loop
jbe
sub
or
pop
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
aas
dec
jnp
popw
pop
cmp
cmp
sahf
out
out
ds
sub
mov
jl
push
addr16
jle
sub
int3
popf
out
imul
add
mov
sarl
add
sub
sub
jnp
jne
sub
mov
into
or
add
push
cmp
and
add
xchg
pop
andb
push
ret
fs
jb
imul
jo
ss
mov
sarb
sbb
data16
dec
or
push
inc
dec
mov
cmp
insb
jl
aad
loope
out
sub
inc
dec
cmp
out
push
adc
cld
inc
lock
ds
repz
inc
ds
push
out
cmp
in
fdivrs
out
imul
movsb
iret
repz
push
pushf
nop
mov
cmp
jl
je
repz
rep
push
repz
pop
push
push
dec
dec
inc
cmp
repz
cmp
xor
repz
repz
and
sbb
stc
cmp
sbb
cld
inc
hlt
sahf
out
sahf
call
jo
ds
jns
xor
in
inc
push
sahf
out
sahf
lods
mov
xor
int
jns
sbb
inc
lock
cmp
repz
cwtl
jo
out
lcall
nop
pushl
jl
cmp
cmpsl
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
andl
repz
ljmp
inc
es
push
scas
fisttpll
sub
out
inc
loopnew
js
mov
add
xlat
lret
cmpsb
push
mov
sbb
das
inc
mov
ja
mov
push
outsb
inc
pop
ljmp
xchg
les
mov
jge
add
ret
inc
sbb
or
outsb
inc
dec
out
add
adc
xchg
sub
roll
cmp
in
adc
and
jp
push
jo
gs
mov
push
iret
inc
popa
push
mov
rorl
cmp
scas
and
pop
dec
sbb
mov
inc
push
mov
outsl
es
jbe
adcb
push
jb
or
add
das
xchg
dec
adc
stos
dec
pop
fstpt
inc
aas
push
cmp
add
mov
adcl
xorl
or
push
out
mov
loopne
mov
imull
cmp
xor
in
sbb
bound
addr16
mov
js
arpl
xchg
dec
outsb
push
loope
outsl
test
push
adc
jo
push
imul
idivl
imul
sub
popa
dec
fsubl
rorb
testl
dec
outsl
sahf
loop
fidivs
sti
sub
insl
inc
jns
mov
rclb
jne
fisubrs
fs
sti
add
pop
add
add
sub
rorb
ficoms
mov
push
inc
mov
sbb
push
sahf
imul
push
xchg
gs
neg
push
xchg
arpl
js
fnsave
sbb
ja
cmp
inc
fisubs
push
inc
xor
inc
push
mov
bound
inc
push
js
imul
jl
add
fstl
pop
push
xchg
push
push
push
loope
loopne
dec
mov
fnstsw
daa
scas
out
das
out
divb
jb
jae
out
insb
pop
in
hlt
fsubr
out
push
movb
fisubrs
adc
mov
inc
push
pop
ds
popa
mov
pop
pop
inc
fistl
mov
inc
mov
pop
out
push
loopne
into
inc
dec
aas
inc
push
jnp
or
push
popa
adc
fidivl
fs
lret
and
repnz
in
neg
push
xchg
pop
and
js
pop
fisubrs
imulb
lahf
inc
and
xor
lret
cmp
shlb
dec
inc
xchg
pop
mov
jo
scas
pop
pop
divl
fcom
roll
pop
push
call
pop
adc
rorb
es
push
add
mov
mov
mov
xlat
mov
jge
cmp
outsb
push
push
adc
fcmovne
out
jp
xchg
sub
js
fstp
jae
inc
mov
filds
iret
jnp
push
xchg
mov
out
dec
sahf
xchg
mov
std
fsubr
jge
pop
ds
push
jle
push
pop
cmp
adc
out
mov
mov
add
dec
pop
push
mov
jnp
outsl
pop
addr16
dec
xchg
incl
iret
aas
and
gs
gs
xor
dec
xchg
mov
push
outsl
ja
xor
xor
xchg
push
jns
insl
std
das
pop
mov
push
push
xor
insb
jne
imul
adc
das
push
pop
orb
movsb
jne
pop
cmp
data16
dec
sub
mov
add
addr16
outsl
sub
cmp
cmp
and
add
and
dec
invd
sbb
out
mov
sub
repnz
lock
inc
dec
jle
mov
shlb
call
sbb
jne
add
aaa
xlat
and
fimull
sub
xchg
pop
stos
and
ret
mov
aad
mov
mov
jae
sbb
adc
pusha
xor
xchg
pop
loope
sbb
js
aaa
rclb
mov
xor
fdivl
outsl
adc
jnp
fisubrs
scas
and
pop
push
jnp
sub
sbb
imul
sub
pop
gs
popa
cmovg
mov
outsl
or
arpl
jbe
or
jnp
out
jg
add
jae
jmp
pop
shrl
mov
daa
ja
enter
mov
inc
js
jns
das
das
jno
fistl
cmp
dec
pop
mov
les
inc
dec
push
js
inc
lods
inc
jnp
or
loopne
push
lahf
testl
sub
cmpl
mov
dec
sbb
subl
xchg
lcall
sbb
int3
aas
jae
addr16
jne
inc
jnp
into
and
and
pop
mov
fs
gs
pop
mov
and
adc
inc
lea
inc
push
cmp
push
and
js
push
iret
mov
jp
dec
pop
inc
dec
jnp
or
dec
pop
mov
popa
pop
dec
daa
aas
pop
sbb
fidivl
inc
pop
dec
mov
dec
daa
addl
inc
xlat
ficompl
inc
jnp
xor
xor
xor
cmp
enter
xchg
jb
pop
mov
add
das
xor
ret
add
or
cmp
add
adc
mov
ja
sbb
or
push
das
dec
lcall
sahf
cwtl
push
push
fimull
push
mov
cmpl
inc
into
inc
aaa
test
xor
pop
aaa
jns
jl
inc
inc
push
loop
push
jbe
mov
xchg
adc
xor
or
push
cmc
aad
push
mov
dec
sub
out
mov
push
xlat
dec
inc
mov
adc
cmpsl
pop
call
repz
pop
push
xor
fimull
push
push
mov
jg
test
daa
dec
add
inc
push
mov
sbbl
pop
das
cmp
cmp
ss
xor
test
xor
cmp
repz
aas
jmp
mov
and
ss
push
ja
dec
add
sub
push
pop
push
jae
scas
adcl
inc
scas
pop
filds
inc
repnz
jno
mov
jg
push
pop
inc
movl
mov
jnp
cwtl
ja
adc
rdtsc
dec
mov
dec
dec
dec
dec
ss
dec
xor
pop
mov
xlat
pop
loopne
or
sbb
out
xchg
inc
pop
pop
push
pop
lea
popa
xchg
repz
dec
or
icebp
ret
jecxz
cmpsl
ficoms
jle
push
xchg
pop
pop
jae
notl
sub
ret
ja
sub
daa
pushf
ja
bound
imul
or
test
add
fiadds
xor
sbb
div
sbb
rorb
lds
add
mov
cltd
popa
pop
add
add
sbb
add
add
cmpb
fiadds
add
idiv
incl
push
lcall
incl
jg
out
shll
loopne
lock
lcall
pop
mov
pop
mov
inc
popf
add
cmp
add
add
pop
add
adc
add
push
inc
outsb
jns
popa
bound
or
inc
xor
inc
imul
adc
addr16
push
insl
shlb
insl
outsl
cli
inc
jb
inc
decl
mov
jne
imul
lcall
jb
cmp
mov
es
inc
arpl
push
jb
mov
mov
sub
add
stos
adc
repz
xchg
mov
mov
add
fstpl
outsl
je
jb
cmp
popf
and
mov
imul
inc
gs
mov
mov
insb
xor
fwait
inc
outsl
cmp
and
cmp
or
pusha
xchg
adc
ja
pop
push
addr16
or
in
outsl
outsl
push
push
mov
imul
ja
pop
adcb
push
ret
out
je
imul
popa
push
scas
cmpxchg
enter
pop
or
inc
imul
dec
pop
or
arpl
fcompl
bound
mov
insb
lock
cmpsb
imul
outsl
js
fs
add
xor
arpl
mov
mov
xor
mov
fldt
push
and
dec
dec
imul
mov
or
xlat
dec
insb
pop
fsubrl
push
sbb
imul
mov
add
xchg
dec
mov
or
test
or
push
xor
addr16
imul
xor
add
outsl
and
push
imul
dec
push
gs
inc
mov
inc
popa
cmpsb
popa
add
adc
adc
push
jb
pop
push
in
mov
imul
aas
gs
jns
ss
mov
sbb
push
in
pop
jnp
sub
bound
outsb
stos
lods
dec
dec
icebp
or
cld
or
jne
in
and
shll
sub
mov
data16
loopne
push
out
mov
cmp
pop
add
add
or
cld
cld
cld
or
add
and
mov
aas
or
fidivrl
xchg
shrl
test
or
or
insl
or
push
jns
loopne
in
or
jl
or
orl
mov
stc
std
ficompl
push
lea
add
or
test
stc
stc
stc
or
mov
add
stc
stc
stc
stc
adc
fcoms
add
adc
in
add
fdivr
stc
stc
adc
sti
pop
add
add
add
cld
cld
cld
cld
sbb
adc
add
sbb
and
add
cld
cld
cld
sbb
ds
add
stos
cld
adc
adc
out
out
and
pop
or
add
add
add
test
lods
and
push
ja
xor
repz
add
add
add
lcall
add
mull
popf
cmp
mov
add
cmpsb
stc
cmpsb
add
imul
mov
mov
int
jle
out
push
rolb
add
and
add
or
loop
jle
jle
add
sub
stc
sub
ljmp
sub
add
movl
add
or
adc
add
mov
jp
jp
add
das
add
addr16
fsubrp
xor
dec
add
or
push
xlat
jno
cmpsb
dec
cmp
add
push
and
iret
or
ret
add
add
cld
cld
jle
dec
add
xor
jg
add
cld
cld
cld
xor
xchg
xor
sahf
xor
stos
cld
cld
cld
cld
aaa
add
add
aas
pop
cld
cmp
rcll
dec
add
cmp
fsub
out
imul
lret
add
loopne
add
push
adc
roll
lcall
and
test
adc
incl
jle
jle
or
mov
rclb
inc
test
mov
mov
push
insb
fsubrs
add
aas
pusha
out
loope
or
push
clc
push
js
dec
insl
mov
and
loop
loop
movl
add
sbb
jge
add
dec
mov
and
add
add
jmp
cmp
stos
add
cmp
cmp
decb
adc
push
cli
jmp
push
out
out
aas
xchg
mov
out
out
clc
pop
jno
lock
in
push
ljmp
add
pop
pop
mov
es
lcall
fdivp
jne
addr16
push
in
or
lock
push
idiv
xchg
push
mov
call
inc
push
test
dec
dec
push
call
inc
dec
mov
dec
sbb
ss
dec
ljmp
arpl
movd
push
add
jbe
dec
add
adc
jo
ss
inc
or
or
fistpl
fsubrs
xor
imul
push
outsb
outsb
arpl
fidivl
fs
add
or
push
or
cmp
add
ja
jb
or
and
mov
mov
mov
jno
in
pusha
pop
mov
adc
and
lahf
add
ja
repnz
imul
das
jmp
and
mov
inc
add
call
outsb
fs
inc
xchg
fidivl
arpl
or
inc
pop
dec
outsl
outsb
pop
and
inc
sub
jl
jae
add
subb
push
cmp
sbb
and
mov
push
add
clc
aam
mov
insl
imul
fidivs
pop
in
nop
mov
je
xor
or
popa
rorb
sub
jae
xor
in
xchg
sub
or
adc
dec
outsb
retw
jo
xor
mov
add
or
lcall
insb
nop
adc
mov
mov
ss
pusha
shrb
fcoms
mov
popa
data16
sub
and
add
push
dec
pop
cmp
fs
lret
lea
xor
arpl
int3
pusha
ja
jne
inc
mov
loopne
fisubrl
add
sub
mov
int3
add
ss
andl
adcl
data16
jo
nop
cltd
fmuls
dec
push
cmp
inc
mov
pop
mov
and
pusha
je
jae
and
arpl
jbe
adc
cmp
loopne
dec
outsb
and
loop
dec
sbb
adc
loop
sbb
cmpsb
mov
insb
lock
dec
mov
mov
jns
leave
cs
sbb
roll
enter
data16
pop
shrl
imul
mov
inc
push
fnstenv
and
clc
mov
rol
and
call
sbb
inc
and
add
scas
outsb
sub
popf
push
xor
test
jae
loopne
movsb
or
cwtl
nop
js
push
mov
jno
popf
push
push
sti
pop
cltd
push
jmp
rorl
xchg
cli
fistpl
sub
dec
cmc
aaa
add
xor
cltd
outsb
pop
orl
jne
jge
sbb
movsb
add
insb
sbb
push
inc
push
inc
adc
mov
pop
cmp
and
shrb
jne
pop
js
lods
bound
les
xlat
insb
xor
xor
faddl
popa
rorl
push
add
outsl
int3
out
fisttpl
lahf
in
sub
insb
dec
push
icebp
mov
push
sub
pop
jne
sti
inc
inc
es
push
adc
and
xor
inc
mov
and
rolb
fsub
loopne
aad
fstl
and
movsb
aaa
loope
sahf
stos
jl
or
rcll
jns
js
lods
jmp
mov
xchg
pusha
in
lret
pop
data16
xchg
fs
loope
test
mov
sti
sahf
push
orl
js
or
test
lea
xchg
and
mov
addr16
leave
push
cmp
bound
les
pop
add
shrl
pusha
sbb
cld
imul
das
ffree
inc
cli
shll
add
push
xor
add
nop
sbb
outsl
lock
insb
sti
dec
or
icebp
pop
xor
aaa
mov
fisttpll
push
pop
jns
scas
sub
pop
insb
sub
fsubrs
add
or
scas
cmp
sub
pop
mov
rorl
push
enter
inc
add
dec
dec
inc
outsl
mov
or
fnstsw
fdivs
aaa
dec
xorl
dec
mov
add
dec
push
push
pop
addr16
xor
xlat
imul
call
sbb
lock
sahf
push
in
adc
das
pusha
xor
add
adc
jle
jbe
in
jmp
pop
or
and
cli
add
push
inc
push
inc
sub
pusha
inc
cmp
adc
sbb
pop
pop
iret
rolb
sbb
fwait
into
jge
fwait
sub
pop
jge
push
fistl
dec
dec
imul
dec
xor
mov
fiadds
in
lock
adc
je
jae
push
jbe
ljmp
add
dec
incb
add
xor
or
or
or
xchg
inc
mov
or
sahf
out
mov
push
sub
jb
add
test
sub
ret
int
dec
out
pop
stos
mov
mov
pusha
inc
sbb
ret
data16
add
das
mov
icebp
or
cmp
iret
add
dec
jae
ret
or
xchg
push
mov
or
lea
and
jbe
xlat
outsb
xlat
cs
add
mov
imul
into
dec
jbe
js
mov
push
jne
xchg
pusha
dec
mov
sub
ror
cmp
xchg
jae
loop
out
mov
dec
lods
pop
and
inc
test
jo
pop
push
fs
ja
fwait
jo
aaa
daa
lock
dec
inc
addr16
and
js
ds
sarl
adc
dec
mov
imul
lods
sbb
push
pop
jno
inc
js
push
inc
inc
cmpb
and
inc
aas
or
and
inc
mov
jne
xor
dec
pop
adc
lret
ret
out
jbe
fwait
dec
pop
sub
xor
adcl
pop
push
and
xorl
adc
pop
xor
mov
negl
dec
imul
xlat
xchg
add
mov
push
sbb
xchg
pop
ret
rol
inc
in
orl
inc
xor
sbb
addl
pop
fwait
filds
inc
push
push
sti
adc
sbb
jg
sbb
rclb
inc
cmp
mov
fistps
mov
pop
insl
or
fisubl
dec
out
daa
scas
push
js
sub
cmpsl
inc
in
es
push
mov
arpl
dec
add
lds
xchg
sbb
imul
dec
push
add
test
mov
dec
pop
mov
ffreep
jmp
inc
cmp
add
jo
push
jmp
insl
out
push
mov
xor
push
cs
push
inc
inc
pop
out
lea
adc
push
xor
or
aaa
js
jo
cs
scas
pop
push
outsl
inc
das
jae
xor
sub
ficoml
clts
sarl
sub
inc
inc
xor
push
ds
xor
pop
filds
add
jmp
addr16
dec
xchg
push
push
cmpsl
aaa
push
mov
stos
mov
lahf
pusha
mov
addr16
sub
add
inc
negl
mov
xlat
fisubl
or
dec
das
push
or
les
pinsrw
outsl
outsl
inc
fdivrp
push
fiadds
push
mov
or
testb
pop
pop
or
xor
or
push
inc
cmpl
push
push
ss
xorb
aaa
pop
inc
mov
dec
sbb
pop
mov
mov
push
das
jae
das
mov
decl
dec
lods
cs
cvtps2pd
das
daa
pusha
insl
shrl
sarl
xor
ss
pop
dec
sub
movl
ja
mull
push
sti
inc
pop
sbb
aaa
dec
daa
xchg
ja
pop
or
stos
dec
aaa
push
and
or
mov
or
mov
sti
jg
jae
daa
jo
loopne
das
mov
ret
or
xchg
push
pop
adc
push
xchg
and
push
or
dec
adc
fcoml
pop
das
cmp
push
dec
jnp
pop
fists
dec
mov
sub
scas
push
jecxz
pop
xlat
iret
inc
imul
out
sti
aas
pop
fwait
push
pop
fstpt
rcrl
jmp
cmp
fisubrl
sub
mov
sbb
sub
inc
xchg
fidivrl
jae
lock
das
pop
iret
addr16
inc
mov
push
fwait
aas
mov
or
inc
inc
xor
xlat
inc
mov
push
leave
inc
cmp
dec
inc
mov
xchg
push
jnp
ja
inc
das
and
jae
jae
loop
aas
jecxz
jle
testb
mov
inc
iret
das
sub
das
iret
fmul
push
mov
iret
pop
stos
mov
mov
sub
das
jmp
out
cmp
push
dec
scas
jp
cmpsb
dec
cs
aas
mov
inc
mov
or
jno
mov
in
rcr
push
das
adc
aad
adc
aas
lods
mov
dec
xor
arpl
pop
insl
mov
inc
dec
jbe
pop
inc
in
dec
or
jle
add
aaa
xchg
outsl
adc
sbb
cmp
or
jbe
dec
sub
daa
ja
push
jno
or
push
and
and
movl
aaa
xchg
les
sbb
imul
push
aaa
divb
push
xchg
xchg
or
inc
or
sub
scas
jge
add
test
push
scas
jmp
hlt
dec
mov
push
daa
xchg
mov
out
jae
das
movsl
and
xlat
push
mov
mov
inc
and
pop
cmp
push
push
cmp
adc
pop
xchg
push
lahf
xor
imul
pop
imul
push
pop
hlt
fisttps
sbb
xor
sti
jecxz
cmp
arpl
mov
mov
mov
inc
or
mov
cs
sub
inc
xor
jg
push
fidivrl
cmpsl
push
daa
arpl
daa
pop
lds
jno
imul
daa
lret
inc
inc
mov
fldt
cwtl
mov
xor
xchg
add
arpl
fstpt
stos
in
pop
in
daa
das
daa
das
inc
mov
pop
das
jg
push
bound
ret
jmp
das
pop
jg
mov
lods
outsl
jg
mov
dec
push
aas
push
sub
mov
pop
rcll
jecxz
imul
mov
push
and
fst
ficompl
fldt
pop
mov
imul
inc
in
ficoml
sub
sahf
aaa
popl
xlat
inc
push
cmp
imul
outsb
pop
fwait
mov
xchg
adc
mov
addr16
xchg
add
jno
xlat
dec
xorl
addr16
insb
jo
push
fisubrl
mov
imul
pop
das
pop
mov
push
mov
shll
and
sbb
aas
das
inc
push
stos
arpl
dec
mov
lock
xchg
push
pop
pop
pop
xchg
or
es
xchg
dec
notl
inc
adc
dec
ss
faddp
xchg
in
sti
or
das
stos
jg
xchg
fdivs
jecxz
inc
pop
xchg
test
arpl
inc
je
pusha
sub
add
into
push
shlb
mov
lret
push
dec
movaps
mov
aas
addr16
paddsb
mov
inc
adc
mov
dec
dec
imul
subb
mov
xchg
inc
mov
das
inc
loopne
sbb
ja
add
adc
imul
inc
outsb
sysret
pop
mov
pop
aaa
dec
dec
sub
jno
lahf
out
adc
jecxz
jp
push
fwait
into
pop
mov
es
out
dec
inc
fldt
imul
jecxz
shll
push
imul
das
push
lods
cmp
out
push
repnz
insb
aaa
dec
das
inc
push
pop
add
aaa
xor
jo
orl
movsb
lds
nop
sbb
push
inc
push
mov
and
xchg
mov
pop
test
pop
iret
pop
sub
push
aaa
inc
adcl
addl
das
aaa
cmova
aas
mov
ss
xlat
aas
inc
pop
mov
out
lea
inc
xchg
lods
aas
sti
sbb
lea
push
mov
insl
adc
xlat
mov
mov
cmc
rorb
mov
push
mov
aas
sub
mov
call
push
stos
loop
inc
cli
jg
add
aas
popf
pop
and
inc
roll
inc
pop
inc
ja
or
inc
addr16
dec
add
or
out
les
movsl
sub
addr16
stos
push
inc
dec
dec
xor
push
ficoml
pop
mov
aad
jnp
sbb
imul
push
pop
add
mov
xor
inc
scas
mov
sbb
addr16
inc
adc
dec
scas
push
sbb
pop
push
inc
iret
add
adcb
mov
lcall
push
test
test
sbb
push
adc
roll
inc
arpl
add
scas
inc
cmpsl
inc
out
xorl
pop
pop
pop
insl
aaa
daa
mov
sub
bound
adc
xlat
inc
aaa
jmp
aad
mov
pop
in
sti
jg
ja
ss
cmpsl
and
pop
iret
fildll
sub
sbbb
inc
lods
lods
mov
and
daa
mov
shrl
pop
aas
pop
pop
movsb
shll
daa
sbb
test
call
push
aaa
push
mov
testl
dec
sbb
loop
das
dec
fistl
movsl
dec
pop
inc
xchg
sub
pop
aas
scas
das
push
mov
daa
scas
test
sbb
and
arpl
das
dec
imul
push
daa
daa
xchg
xor
ja
push
outsb
mov
jb
rolb
ja
dec
dec
push
sti
das
mov
add
or
push
call
dec
dec
dec
movsb
lods
inc
mov
mov
shrb
pop
inc
imull
sbb
sbbb
inc
jo
cs
sti
push
inc
push
push
pop
inc
xchg
movb
lock
aas
insb
sbb
subl
jecxz
pop
sti
sbbl
inc
ret
fimull
jnp
test
push
pop
das
in
or
inc
pop
iret
das
mov
aaa
pop
in
ljmp
pop
and
aaa
pop
mov
adc
pop
fisttpll
mov
stos
push
sbb
inc
push
in
push
sub
ror
mov
add
pop
jae
push
dec
pop
pop
scas
or
rcll
dec
insl
push
aas
lods
add
sbb
outsl
xor
jg
mov
or
cmp
sahf
daa
testb
movsl
outsl
mov
scas
les
jae
adc
and
aas
mov
das
cmpsl
das
arpl
adc
adc
ret
cmova
divl
jg
inc
pop
pop
insl
push
xor
or
bound
ja
push
pop
inc
dec
aaa
aas
bound
lods
add
adc
add
mov
jg
pusha
fisttpl
jbe
adcl
mov
pop
fisttps
inc
mov
xor
xchg
mov
stos
rorl
push
cmp
xchg
sbb
daa
imul
mov
pop
lahf
shrb
pop
or
aas
push
mov
mov
lret
add
addr16
jbe
nop
dec
inc
fistpl
lea
jnp
mov
ss
sub
pop
dec
pop
loopne
lods
mov
push
or
aas
aaa
repz
fwait
add
nop
inc
loop
pop
inc
mov
inc
dec
and
jnp
scas
rclb
push
sub
push
or
dec
rdtsc
je
out
arpl
mov
fwait
or
jb
jbe
bound
cmpsb
js
jmp
movsb
addr16
cli
sub
stc
lcall
ret
jge
jne
outsb
sbb
aaa
xchg
lret
push
pop
mov
pop
dec
pop
mov
jae
mov
mov
jne
ret
mov
xor
fwait
je
mov
dec
add
push
pop
pop
testl
pop
test
rcl
pop
dec
mov
popa
xor
push
xchg
lock
imul
mov
dec
inc
iret
imul
push
pop
jecxz
daa
jae
pop
mov
and
ret
cwtl
js
pop
jmp
xchg
icebp
fisubrs
xor
shll
dec
ja
outsl
push
sbbb
or
add
mov
cmp
add
stc
loope
ds
xchg
jno
cmpsl
inc
lret
jmp
outsb
ffreep
dec
js
xchg
outsl
push
js
and
pop
je
clc
faddp
bnd
addr16
mov
data16
xor
cs
je
xchg
add
iret
inc
sub
xor
jb
pop
mov
jo
fs
movsl
mov
pop
mov
arpl
pop
cmp
sub
fidivl
mull
fwait
addb
aas
iret
ficoms
out
jb
stos
and
pop
push
pop
xchg
xor
aaa
mov
arpl
jbe
dec
outsb
cmp
cmpsl
fbstp
xor
iret
push
mov
pop
cmp
mov
mov
jp
sbb
fwait
xchg
xchg
xor
xor
mov
push
insl
add
jecxz
pop
lods
inc
mov
addr16
pop
sbb
push
xor
push
out
mov
scas
arpl
leave
aad
mov
jg
std
pop
sub
pop
inc
xchg
out
cmpb
jo
xorb
sbb
dec
push
jns
stos
sbb
xchg
dec
xorl
jnp
les
pop
vmread
cmp
or
es
sub
or
push
add
fstpt
dec
mov
aaa
aaa
dec
rcrb
sub
add
dec
dec
mov
push
xchg
jne
dec
xor
push
mov
bound
jecxz
push
push
es
mov
in
dec
push
mov
dec
push
push
jb
lret
mov
push
je
jo
fwait
dec
xor
add
sub
jl
fidivrl
push
dec
addr16
bound
orl
lds
sub
pop
add
push
in
popf
scas
sbb
add
sgdtl
aas
pop
in
push
pop
mov
or
cmp
inc
ret
or
pop
pushw
mov
arpl
push
shll
push
arpl
stos
insb
pop
icebp
outsb
roll
lret
ss
add
inc
dec
push
dec
inc
popf
mov
jo
lods
inc
lods
push
imul
movsl
out
sbb
pop
push
bound
lock
mov
pushf
rsm
inc
es
clc
mov
data16
add
jbe
jecxz
jge
inc
aaa
lods
adcb
pop
icebp
sub
dec
test
sub
xorb
scas
loopne
daa
mov
ja
dec
add
push
pop
add
push
outsl
dec
fsubrs
pusha
mov
dec
ja
sbb
mov
inc
arpl
jbe
test
add
hlt
push
rorb
sbb
xchg
outsl
mov
arpl
pop
add
mov
icebp
daa
adc
or
mov
dec
fdiv
push
push
out
addr16
xor
inc
pop
sbb
outsb
jbe
jecxz
pop
mov
ja
jecxz
nop
out
mov
mov
xchg
imul
sbb
cs
xchg
sbb
div
cs
pop
es
repz
insb
mov
push
dec
testl
push
jne
sbb
mov
daa
mov
loopne
andl
aas
fcomp
xchg
inc
cmp
jbe
sbb
stos
bound
mov
mov
xchg
or
stos
and
xchg
ss
jmp
rcll
pop
xor
sub
pop
fildll
addr16
aaa
dec
cmpsb
lds
int3
les
push
and
xchg
jp
out
dec
insb
test
jo
or
stos
lods
pop
fwait
sbb
inc
sub
mov
mov
scas
jbe
jmp
mov
mov
data16
inc
outsb
dec
push
imul
jo
or
xchg
loopne
outsb
and
dec
shlb
outsb
repz
dec
jmp
add
test
dec
popf
and
inc
sbb
lcall
adc
pop
lahf
daa
pop
adc
arpl
xor
push
cmpsl
inc
inc
mov
push
fisubrl
aaa
sub
sbb
sahf
arpl
pop
outsb
push
xlat
mov
mov
aas
xor
add
and
mov
jae
and
add
and
lods
stos
xchg
arpl
and
adc
out
and
mov
pop
add
aaa
add
xor
jecxz
or
xchg
aas
sbb
add
jp
dec
mov
mov
mov
adc
sub
call
or
sbbb
sub
xor
adc
movsb
test
rcll
dec
xor
add
enter
cmp
pop
frstor
in
imul
dec
sub
outsb
mov
pop
aas
adc
add
daa
mov
xor
inc
pop
dec
bound
in
test
mov
das
push
stos
adcb
ljmp
inc
cmp
mov
add
cli
and
pop
push
sub
fidivl
add
icebp
xchg
inc
dec
aaa
or
inc
inc
mov
jnp
inc
or
dec
cmpsl
sub
psubusb
add
mov
or
and
mov
mov
pop
pop
mov
mov
adc
imul
sarb
mov
arpl
sub
push
in
or
das
mov
pop
xor
add
pop
shll
xor
and
das
pop
insl
xor
sub
cmpl
mov
dec
pop
rcll
dec
ja
mov
and
inc
imul
dec
shrl
filds
mov
push
inc
inc
lock
inc
push
mov
push
and
pop
testl
push
pop
fisubrl
je
inc
xchg
lods
sarl
cmp
sbbl
add
sub
and
out
adc
outsl
adc
lods
out
jo
cltd
dec
jl
jbe
or
dec
mov
aaa
push
push
cmp
cmp
pop
add
cmp
cmp
dec
das
ret
daa
loop
ficoms
pop
dec
popf
daa
pop
lcall
adc
aaa
inc
push
push
rorl
sub
xor
gs
pop
mov
ljmp
shl
sbb
ja
lahf
pop
jne
mov
dec
pop
in
mov
mov
sub
jnp
ljmp
ja
mov
cmp
mov
push
adc
inc
mov
sbb
mov
mov
ss
imul
dec
insb
mov
les
out
loopne
sbb
pop
adc
adc
jns
xor
outsb
in
xlat
pop
loopne
cmp
cmp
aaa
push
test
jo
jge
dec
add
fs
jnp
scas
hlt
aas
outsb
sub
jb
adc
push
push
outsb
bound
aam
jne
xchg
dec
jge
jne
jne
fs
scas
push
pop
arpl
add
fcom
ficoms
call
in
inc
outsb
into
dec
add
dec
int3
ja
jae
adcl
addr16
push
subl
lods
add
pop
imul
out
rcl
fidivl
inc
daa
rcl
mov
jne
addr16
imul
jo
push
xor
fadds
testl
push
sti
xlat
push
notb
mov
testl
sub
lods
test
push
push
daa
jo,pt
rcrb
push
aaa
leave
mov
lock
pop
inc
addr16
nop
arpl
or
das
push
adc
adc
pop
inc
jnp
xchg
aas
negb
sbb
push
adc
dec
aaa
in
push
call
incb
lods
outsl
popa
fs
jo
adc
push
pop
push
gs
cmpsb
push
sti
movb
gs
js
sub
fmuls
mov
and
or
pop
add
and
push
and
cs
add
and
cmp
sub
imul
mov
das
adc
aaa
cs
xor
pop
pop
cmp
jg
outsb
aaa
js
pop
inc
push
lea
cmp
bndstx
jge
pop
xchg
mov
fwait
add
mov
and
jnp
dec
xchg
mov
add
mov
cmp
aaa
lahf
pop
inc
loop
fistl
push
daa
push
and
sub
pop
add
daa
inc
mov
addr16
jnp
ficompl
pop
pop
out
mov
insl
mov
sbb
imul
aas
xorl
sbb
fldt
movsb
rcrl
sbb
ret
das
pop
add
test
xor
and
inc
adc
aad
dec
sahf
cmp
pop
insb
xor
xor
xchg
movsb
daa
pop
push
mov
test
push
and
adc
lret
inc
bound
sbbl
dec
adc
das
xor
adc
xchg
scas
or
jo
dec
inc
ljmp
inc
dec
jo
or
push
jnp
inc
adc
mov
cmpsl
xor
xchg
cmc
test
arpl
and
sbb
xlat
bound
loopne
insb
and
sbb
add
loopne
mov
and
repz
ljmp
das
lahf
adc
and
popa
and
push
andl
jg
add
pop
roll
cmovno
adc
arpl
jg
mov
mov
mov
mov
mov
xor
gs
fadd
ss
aaa
sub
fildl
mov
inc
pop
mov
lods
add
push
push
das
pop
add
push
push
pop
or
sub
bound
aas
cmp
scas
push
or
inc
sub
or
pop
or
inc
push
push
push
pop
pop
mov
xchg
shll
inc
jle
daa
aas
aaa
adc
inc
jo
xchg
int
add
push
sar
enter
fisttps
sarb
loopne
out
leave
loopne
ds
mov
push
aas
call
adc
int3
vpmaxub
cmp
push
call
dec
dec
add
mov
repnz
and
cmpsl
jnp
imul
pop
repz
daa
enter
jo
aad
in
aas
out
shrb
aam
into
jo
pop
sbb
mov
cmp
jle
push
loopne
test
or
std
xor
mov
sub
inc
mov
enter
pop
inc
jb
cmp
cmp
stc
push
in
clc
ds
iret
inc
cmp
inc
inc
inc
aas
inc
es
bound
mov
pop
mov
jb
dec
cld
dec
aas
add
dec
cmpsb
push
call
dec
notl
push
inc
add
das
cltd
nop
push
mov
sti
push
mov
fldl
pop
mov
dec
repz
push
ja
pop
in
pop
fmuls
insl
push
sbb
mov
jno
mov
jbe
jp
dec
enter
jge
incb
xchg
lret
test
filds
dec
insb
and
cltd
fdivs
incl
mov
push
mov
mov
mov
das
cmpsb
mov
mov
enter
cmp
iret
mov
insl
dec
xor
cmp
leave
mov
jg
jecxz
jbe
and
xchg
adc
cltd
or
icebp
mov
in
push
inc
aas
mov
fs
dec
and
xsave
inc
inc
jnp
jl
das
inc
divb
icebp
jge
inc
xor
and
test
add
mov
add
iret
push
push
bnd
dec
enter
aas
inc
mov
mov
add
insb
aaa
ds
inc
aaa
ds
mov
pop
aaa
xor
je
lret
xchg
push
add
scas
adc
adc
sbb
add
pop
insb
dec
inc
rolb
pop
hlt
pop
stos
icebp
adcl
jbe
push
mov
cmc
paddq
pop
or
shrl
pop
test
xchg
incl
add
add
or
in
add
aas
push
xor
push
jns
test
and
je
je
lods
orl
sbb
jns
and
mov
lahf
loopne
inc
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
sti
sub
neg
pop
fidivrl
xor
fcomp
loopne
jb
sbb
xor
cmp
inc
fcoms
test
mov
pop
fisubrl
pushf
adc
jmp
jno
ss
mov
cs
push
jno
push
xlat
push
push
sahf
out
sub
or
push
or
or
pop
jb
cmp
or
or
or
daa
adc
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
loope
xlat
sbb
data16
sub
mov
xor
push
cmpsl
stc
push
cmp
xor
in
xor
int
jns
rorb
adc
das
adc
repz
adc
iret
repz
sbb
jns
out
sbb
sahf
push
fs
add
enter
stc
xor
shrb
xor
pushf
out
and
mov
push
mov
sub
sbb
ja
aam
push
bound
pop
lahf
and
push
dec
pop
in
xor
rorl
add
mov
jne
ss
lahf
andb
inc
xor
inc
inc
cmpsl
mov
scas
clc
cmp
adc
stc
xor
sahf
je
sbb
jns
out
fs
pop
pop
adc
sahf
out
dec
push
xlat
push
or
jns
xor
sub
out
sahf
out
push
and
sbb
out
sahf
and
or
lahf
popf
enter
adc
sahf
out
adc
sbb
dec
mov
pop
xor
push
and
and
and
mov
call
outsl
inc
xor
push
mov
mov
or
subb
incl
and
aas
xlat
in
insl
adc
je
je
sub
imull
aaa
add
lahf
inc
mov
xor
jg
testb
push
iret
repz
repz
loopne
in
out
lcall
cs
out
sahf
dec
pop
outsb
jle
mov
mov
clc
repz
shll
inc
inc
popa
iretw
repz
xchg
sahf
out
ds
push
jns
out
push
vphaddubq
into
loop
push
cli
cs
repz
xor
jb
sahf
cmp
repz
rcl
icebp
testb
sti
push
sti
movb
popf
call
jo
lock
imul
inc
jg
cwtl
sub
mov
insb
xor
jns
push
push
jns
out
dec
inc
cmp
and
jns
out
adc
add
repz
add
xor
hlt
lock
cmp
repz
in
fmul
repz
repz
cmp
movsb
cwtl
nop
test
ds
repz
fs
inc
or
jno
mov
sbb
mov
lock
outsb
mov
pop
jg
dec
sahf
subl
cli
ja
lahf
leave
les
out
mov
lcall
adc
sbb
or
and
jns
mov
add
pop
repnz
pushf
or
ret
mov
adc
xchg
cwtl
push
and
jg
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
in
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
jmp
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
ljmp
adc
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
adc
cmp
sahf
xchg
pop
lcall
lock
mov
popa
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
int3
cmp
and
and
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
mov
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
daa
mov
repz
cmp
pop
js
repz
xchg
mov
repz
repz
jge
xor
add
push
pop
iret
repz
ja
mov
repnz
das
dec
insb
add
mov
sbb
pop
ss
int
mov
int3
inc
inc
cmp
jmp
rorb
mov
add
test
add
iret
push
dec
pop
cmpsb
xor
mov
cld
inc
in
push
or
push
inc
ror
iret
aam
repz
imul
mov
movsb
cwtl
iret
repz
mov
out
cmp
add
mov
nop
xor
out
push
loopne
cmp
repz
pusha
out
cmp
inc
sub
or
mov
out
sahf
fadd
mov
jl
out
out
inc
sbb
mov
push
mov
mov
sbb
jns
jns
in
mov
push
mov
sahf
out
sahf
mov
xor
cmp
out
adc
in
sarb
mov
out
cmp
push
cmp
loopne
mov
mov
cwtl
push
js
cmp
repz
cmp
or
jns
out
scas
enter
pushf
out
sahf
push
dec
daa
adc
lea
sbb
insb
mov
or
jg
add
push
or
pop
aad
and
push
adc
mov
filds
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
call
test
arpl
psubd
or
outsb
cmp
imul
addr16
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
ljmp
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
push
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
jl
das
adc
stos
sbb
pushw
jg
jbe
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
push
clc
leave
pop
js
stc
jle
or
mov
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
incl
mov
dec
xlat
xchg
fadd
shll
jmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
jecxz
cmp
push
or
or
push
in
decl
xchg
daa
scas
pushf
mov
lcall
shlb
add
inc
push
imul
xorb
sbb
incl
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
decl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
pushl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
mov
popa
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
jmp
add
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
jmp
mov
loop
sub
or
mov
xchg
or
pushl
or
rcl
xchg
aam
clc
mov
push
int
mov
testb
jmp
ja
outsl
ja
mov
out
cli
jo
call
lret
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
mov
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
and
mov
mov
sbb
add
sub
push
inc
mov
pop
clc
lcall
or
dec
dec
mov
subb
add
in
sbb
add
add
pop
add
xor
mov
add
or
mov
fiaddl
or
decl
mov
push
dec
mov
or
lahf
add
repz
jnp
sub
and
adc
jns
out
jne
les
mov
pushf
xchg
mov
out
subb
repz
out
adc
je
fmul
repz
int3
shlb
repz
push
cmp
repz
sbb
add
push
adc
xlat
add
mov
adc
stos
lods
aaa
scas
inc
or
pop
inc
ret
cmp
add
addb
mov
pcmpeqw
fmuls
or
xchg
pop
aaa
nop
xchg
add
outsl
insl
imul
sbb
stos
cmp
pop
outsl
das
cmpsl
dec
pusha
les
test
cmp
outsl
xchg
inc
push
dec
or
aaa
pusha
insl
or
lds
inc
outsl
or
add
ret
or
push
lahf
not
push
add
aaa
lds
out
xchg
sbb
addr16
and
or
ja
xor
adc
cmp
jno
clc
decl
sub
and
xor
xor
xor
fldt
ds
xor
xor
xor
push
outsb
bound
outsb
gs
jnp
inc
cld
and
jo
and
mov
repz
mov
push
pusha
push
dec
inc
cmp
cmp
repz
and
adc
imul
push
lock
out
sahf
fmul
shlb
nop
mov
sahf
out
cmp
sbb
iret
repz
cld
push
in
fmul
mov
cmp
mov
stc
cmp
repz
xor
hlt
push
out
sahf
cmpsl
in
int3
shlb
mov
xor
jns
jnp
pop
clc
push
push
mov
sahf
out
sahf
subb
and
cmp
sarl
shlb
repz
push
out
sahf
cmpsl
fmul
mov
jns
mov
push
inc
cmp
inc
xchg
jo
fldcw
sub
or
cs
or
sub
sub
and
es
pop
xchg
nop
add
adc
cwtl
inc
adc
imul
or
add
daa
add
add
adc
ja
ret
inc
pop
adc
add
and
sbb
and
cmp
incl
inc
add
push
and
add
addl
orb
push
add
nop
out
subb
adc
and
add
adc
mov
add
ljmp
pavgb
sub
filds
cs
fadds
sub
ljmp
xlat
add
sbb
add
push
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
in
push
and
incl
mov
xchg
iret
iret
mov
add
data16
push
pushl
or
and
insl
lcall
iret
out
push
jp
sub
into
gs
imul
mov
cmp
or
fistpll
aam
in
or
mov
cmpsb
in
xor
push
xchg
and
cmpsl
fnstcw
int
loope
pop
push
clc
aas
cld
lock
mov
jecxz
out
lahf
stos
cmp
dec
lahf
in
leave
enter
push
fcomip
aaa
pop
insb
lret
mov
dec
inc
adc
add
pop
add
add
mov
nop
dec
insl
adc
inc
subl
jno
es
outsb
inc
dec
pop
test
inc
ss
xchg
mov
add
lret
jnp
add
addb
pop
fistps
out
and
jbe
imul
dec
xchg
bound
sarl
inc
or
add
push
pop
add
mov
add
ljmp
insl
pop
add
adcl
aas
jae
shll
push
adc
xor
push
push
aas
bound
jns
jbe
add
add
sbb
cmp
insb
xchg
es
or
arpl
mov
adc
push
xlat
mov
int3
or
xor
mov
jae
popa
imul
pandn
mov
popa
adc
push
imul
adc
adc
outsl
cmpsl
inc
faddl
les
fwait
js
arpl
pop
mov
imul
add
fldt
aas
mov
xor
xchg
in
jg
imul
mov
inc
loop
mov
mov
lret
jnp
sub
or
bound
mov
outsl
fwait
jg
das
jae
dec
adc
pop
daa
jae
jo
ja
push
cmp
pop
add
inc
sub
lds
cli
pop
inc
sub
cmpsl
mov
and
loop
es
sbb
movl
negb
outsb
sbbl
mov
inc
pop
push
roll
inc
push
inc
arpl
js
sub
mov
andb
adc
and
arpl
inc
xchg
dec
sbb
add
test
sbb
cmc
fwait
inc
lret
ret
mov
pop
add
pop
loopne
je
out
pop
mov
inc
rorl
je
cmp
push
fdivs
pop
daa
ljmp
jae
pop
inc
sbb
or
pop
mov
xorl
or
push
bound
inc
pop
mov
pusha
fs
jae
adc
mov
push
sub
jo
ja
or
lods
dec
aas
jb
mov
sub
and
mov
fidivrs
daa
sbb
inc
ss
push
shll
outsl
xlat
mov
icebp
jecxz
iret
shlb
jbe
sub
out
bound
xlat
hlt
insl
ret
and
je
adcl
fistpll
cmpb
cmp
push
sub
xor
sbb
xchg
and
cmp
pop
outsb
inc
sub
movl
mov
xor
lret
aaa
pop
mov
mov
jae
mov
mov
out
icebp
ficoms
xor
ds
mov
iret
lods
sbb
xor
ja
inc
pop
adc
mov
jne
jg
mov
arpl
xchg
cmpsb
popa
vaddps
inc
mov
imul
push
out
mov
aaa
jnp
aaa
scas
or
lods
and
jae
add
sbb
jb
gs
adc
jo
sub
adc
rolb
mov
pop
push
imul
push
sub
movsb
es
nop
or
inc
dec
cmp
xor
pop
and
add
cmp
mov
adc
popa
test
fbstp
ficompl
push
bound
xadd
xorl
adc
adc
xor
negl
jecxz
ja
push
push
inc
les
adc
push
dec
rclb
outsl
add
inc
arpl
xor
pop
and
cmpsl
xchg
js
imul
jp
sub
movsl
test
shrb
scas
sbb
inc
arpl
push
outsb
cmpsl
dec
push
adc
bound
arpl
sbb
inc
push
cs
sub
adc
mov
pop
fbstp
jnp
scas
jb
outsb
stos
and
add
out
scas
icebp
adc
gs
stos
and
in
bound
dec
shrb
inc
cmp
lock
mov
pop
fwait
out
sub
jg
cs
and
or
rcrl
mov
es
push
cmp
add
fisttpll
aaa
outsb
mov
ds
lcall
pop
scas
xchg
mov
and
mov
inc
fsubrs
sub
mov
adc
xchg
cwtl
xor
mov
xchg
adc
jnp
push
lods
scas
mov
jbe
aaa
xchg
jb
pop
dec
adc
xor
sti
mov
mov
or
add
push
test
push
mov
mov
and
test
xchg
testl
adc
add
sbb
pop
and
das
jbe
data16
mov
xor
pop
xchg
lahf
ds
mov
gs
das
das
xchg
das
movsl
dec
and
mov
jecxz
jg
rorl
sub
xlat
popa
lret
mov
fstpt
mov
push
jne
add
ja
fmuls
or
jmp
push
insl
xchg
xchg
push
and
jbe
xchg
repz
add
movsl
jno
push
out
inc
pop
imul
loop
outsl
das
ds
ja
and
cltd
mov
int
imul
xor
pop
jecxz
push
outsl
sbb
mov
xchg
lret
push
mov
notb
mov
push
pop
rcrb
dec
arpl
sub
push
pusha
push
and
arpl
mov
andl
jl
jb
scas
and
pop
ds
xchg
cwtl
xor
jmp
cmpsl
lods
mov
ljmp
xor
inc
mov
jmp
pusha
push
aas
xor
add
pop
sbb
sub
rol
mov
xchg
jnp
cs
mov
jle
mov
and
xchg
push
mov
cmp
lods
ja
mov
sbb
adc
xor
repnz
fwait
mov
je
mov
pop
andl
lods
movsl
shl
stos
cmp
out
jmp
pop
jmp
ja
add
push
roll
inc
sub
sub
test
daa
mov
xchg
test
rorl
and
mov
arpl
xor
add
inc
adc
xchg
dec
and
or
fbstp
jnp
out
test
outsl
lahf
mov
adc
add
xchg
sub
jl
cmp
push
sub
add
xorb
pusha
pop
sbb
stos
xchg
sbb
cs
stos
mov
imul
push
fldt
sub
inc
daa
jecxz
push
or
mov
stos
jg
out
movsb
movsl
scas
or
les
mov
enter
mov
mov
pop
add
mov
mov
es
scas
xorps
test
aaa
sub
stos
sbb
push
and
shlb
data16
push
push
lock
popa
jae
scas
pop
daa
push
rcll
outsl
adc
ljmp
aad
jae
cmovs
jne
aad
pop
push
mov
push
mov
out
and
jmp
jae
es
das
mov
xor
xor
mov
mov
pusha
testb
adc
inc
jnp
jbe
testl
adc
mov
jnp
xchg
arpl
mov
add
pop
cmc
pop
sbb
outsl
clc
push
shrd
xor
xchg
stos
adc
orb
mov
xchg
mov
lods
mov
lahf
add
pop
add
add
jge
xchg
or
add
movsl
add
add
push
sub
or
pop
adc
dec
aas
and
push
insb
and
inc
sbb
das
sarl
add
ss
push
cmc
dec
fs
popa
imul
inc
testl
imul
push
xchg
cmp
mov
add
jle
pop
inc
jns
push
outsl
push
imul
jb
adc
cmp
in
dec
outsl
fs
mov
fistl
scas
jns
push
repz
inc
test
jle
sbb
push
roll
out
dec
jo
push
ret
xorl
outsb
add
call
dec
and
movsb
stos
dec
bound
adc
adc
fsubrp
jne
arpl
pop
stc
inc
insb
jne
push
inc
sarl
push
cmc
mov
scas
clc
outsl
insb
push
xor
jo
outsl
mov
insb
mov
xor
xorb
sub
mov
dec
into
or
xchg
loope
imul
bound
jae
testl
xor
inc
fcoml
mov
das
cmpsl
sbb
push
cmp
insl
jo
push
outsl
jbe
mov
jo
adc
push
adc
insl
push
and
test
adc
push
mov
mov
rcll
je
mov
in
out
dec
xor
dec
outsl
popa
sbb
sub
xchg
push
adc
pop
xor
rorb
or
jo
ret
xor
or
push
stc
sbb
adc
jmp
in
pop
mov
insl
js
idivb
pop
and
lcall
mov
ror
cmp
data16
inc
gs
pop
int3
xor
push
xor
inc
pop
sub
xchg
xor
push
shll
mov
inc
es
push
outsb
adc
into
je
jae
fs
or
imul
xlat
mov
jnp
inc
jg
rclb
push
sbb
imul
mov
push
inc
je
sbb
inc
pop
pop
movsb
test
add
ja
adc
arpl
pop
sub
or
xchg
sub
mov
lods
mov
lds
imul
cmc
insl
cmp
push
or
addl
mov
aas
sub
das
push
popf
xchg
fcomps
xor
inc
cmp
mov
jns
cmp
jae
jae
stos
mov
call
inc
ret
stos
shlb
pop
xchg
jecxz
push
push
sub
sarl
sbb
jb
dec
dec
imul
rcr
dec
outsl
inc
pop
jo
mov
into
push
fnstsw
insb
test
movsl
xchg
movsb
js
call
adc
imul
sbb
xor
fcmovb
lods
or
adc
push
outsb
insb
sbb
add
sarb
inc
add
pop
fwait
pop
push
mov
sbb
insb
inc
fwait
mov
shrb
jb
and
jp
sbb
cmpsl
and
fs
sub
das
push
aas
addl
pop
sbb
dec
sti
xor
outsl
lock
xor
rclb
push
sbb
inc
push
jns
mov
mov
je
xchg
adcb
scas
ljmp
jne
jo
sbb
add
mov
xchg
xchg
mov
sbbb
lcall
jno
mov
push
xlat
dec
and
push
rcrl
sbb
cmp
cmp
pusha
push
sub
dec
jae
sbb
repz
fstpt
adcl
lock
sbb
lret
sub
jo
xor
repz
insl
jo
out
push
xchg
bound
sti
fcompl
repnz
mov
dec
inc
cmp
aaa
mov
imul
bound
jnp
inc
mov
push
mov
movsb
mov
pop
and
addr16
xchg
jmp
adcl
mov
push
in
dec
jecxz
fwait
push
pop
insb
or
dec
int3
cmc
lods
test
scas
sbb
loop
pop
ja
ja
or
push
popf
pop
xchg
sub
dec
sbbb
cmovno
ss
lds
stos
adc
or
orb
test
xchg
ret
push
adc
inc
pop
sbbl
icebp
dec
inc
sbb
flds
movsb
adc
inc
xchg
adc
pop
xchg
cmc
fs
data16
in
ja
cmp
fsubrs
jne
cmc
xchg
imul
mov
or
in
or
push
sbb
push
xchg
cmp
cltd
shlb
cmp
mov
out
xchg
sub
les
adcb
dec
xchg
js
in
arpl
jb
mov
add
outsl
push
sub
push
popa
sub
hlt
rcrl
push
push
jbe
and
loope
addb
mov
sub
pop
shrl
outsl
imul
fs
addl
sbbl
pop
push
pop
outsl
filds
xchg
pop
nop
dec
mov
and
jne
mov
orl
fwait
push
sub
call
push
inc
addr16
in
inc
xor
call
jecxz
cmp
insb
std
cltd
pop
movb
inc
push
mov
push
outsb
sarl
pop
jp
inc
push
lcall
dec
subl
add
shrb
push
imulb
jae
sub
push
inc
mov
sub
mov
sub
in
xor
jbe
pop
jns
and
aaa
sub
mov
shrb
iret
das
cmp
lods
mov
out
sub
dec
sarl
mov
xor
insl
and
sahf
ss
sbb
fnsave
jecxz
push
add
jbe
cltd
sbb
xor
push
cmp
sub
arpl
sahf
jo
lds
inc
mov
jbe
ret
add
or
xchg
lods
sbb
js
add
in
popa
or
dec
inc
test
jo
adc
mov
das
outsl
inc
jae
inc
inc
test
arpl
outsl
movsb
arpl
insb
imul
das
cmp
orb
sbbl
inc
ss
and
sub
xchg
insb
jns
ja
ret
inc
push
call
popa
imul
jo
ja
imul
sub
sub
fs
cmp
and
inc
pop
les
mov
xor
push
inc
xchg
lds
mov
out
mov
adc
xor
ja
sub
imul
sbb
jb
js
es
or
mov
insb
jnp
push
push
pop
js
das
xchg
test
daa
pushf
push
out
push
xor
mov
push
call
outsb
jne
movsb
xchg
jb
movsb
push
jns
push
outsl
popa
xchg
scas
and
jns
pop
add
push
pop
icebp
inc
push
arpl
adc
mov
outsb
dec
push
push
push
popa
jae
and
mov
out
add
inc
dec
push
dec
inc
adc
dec
and
out
mov
mov
pusha
add
dec
lea
inc
je
mov
lret
pop
outsb
xchg
or
dec
es
hlt
sbb
jp
imul
stc
xor
xchg
fdivrs
or
fidivs
or
mov
add
xor
pop
fdivrl
dec
imul
es
sbb
dec
xchg
add
inc
test
or
mov
mov
jno
cmp
mov
jae
dec
pusha
cmp
insb
popa
and
push
add
sub
je
xchg
adc
fs
jecxz
dec
jnp
cmp
lods
lea
in
mov
jecxz
inc
or
pop
cwtl
jp
add
gs
popa
outsb
jle
or
push
push
mov
inc
inc
sub
or
std
sub
imul
or
jecxz
daa
dec
popa
das
loopne
mov
jb
inc
mov
loopne
addr16
dec
outsl
stos
data16
push
lea
loopne
push
hlt
pop
pushf
push
out
add
add
lahf
imul
mov
dec
stos
movsl
cmp
scas
inc
mov
sbb
adc
bound
cmp
ret
outsl
int3
add
mov
test
test
dec
aad
jl
dec
sbb
jo
out
jmp
pop
push
jne
and
mov
or
pop
outsl
data16
push
add
int3
int3
aaa
mov
jno
xchg
mov
cmp
stos
push
push
loopne
sub
xchg
enter
outsl
push
mov
push
je
bound
pop
inc
adc
les
int3
push
and
push
pop
test
rolb
or
dec
cmp
lods
inc
test
jae
bound
adc
dec
sbb
std
sbb
push
je
dec
scas
adc
pop
adc
test
add
mov
loope
mov
shl
jecxz
adc
mov
add
add
adc
fs
mov
push
inc
push
gs
mov
cmp
mov
lods
in
jmp
inc
arpl
insb
addr16
push
je
orb
stos
xchg
mov
sub
push
cmp
mov
mov
stos
jno
fnstenv
insl
testb
insl
adc
jb
movsb
cld
pushl
push
rorl
push
loope
cmp
lock
inc
mov
loop
icebp
sbb
ds
sbb
dec
dec
pop
loop
nop
cmp
push
and
testl
mov
jbe
js
mov
mov
scas
push
and
inc
stos
push
dec
shll
xor
jb
pusha
mov
xchg
dec
add
inc
cld
fstl
sbb
pop
mov
ljmp
xor
jne
scas
cmp
push
push
outsl
or
xchg
and
push
imul
fdivs
dec
sbb
or
inc
sbbb
jecxz
ds
pop
fiaddl
xchg
shll
xchg
and
mov
inc
mov
loop
jmp
and
sub
jno
enter
push
dec
pop
sbb
mov
adc
pop
and
ljmp
mov
mov
xchg
push
mov
xor
fisubrs
dec
sbb
push
mov
insl
adc
cmp
add
push
outsl
mov
xchg
movsb
rorb
cmp
adc
and
add
es
cmp
orl
inc
mov
or
insb
lret
aam
mov
shr
pop
sbb
fbld
inc
movsb
rcrl
lea
dec
arpl
adc
mov
lods
or
leave
jg
inc
subl
in
in
cmp
jg
ss
fldenv
mov
aas
push
sub
or
fmuls
pop
jb
jecxz
mov
negl
in
fiaddl
dec
inc
xchg
cmp
out
enter
scas
and
mov
mov
inc
adcb
xchg
jno
push
fadds
inc
xchg
mov
xchg
inc
and
mov
jno
jne
xor
add
xor
xchg
lea
dec
fistps
inc
inc
sub
out
adc
push
and
mov
sub
cmova
xor
jb
and
and
mov
xchg
out
imul
adc
inc
fs
xor
push
xchg
push
lods
adc
rorl
or
imul
cmp
lret
mov
and
or
or
cltd
sub
jnp
pushf
out
jle
jge
dec
add
add
and
mov
adc
sahf
fcoml
mov
add
push
movsb
sub
or
repz
notl
cmpsl
push
popa
ss
adc
inc
inc
adc
sbb
or
repz
aaa
or
lret
sbb
and
add
mov
sarb
xor
push
arpl
pop
imul
nop
call
jmp
cmpsb
adc
adc
inc
mov
adc
cmpsb
jne
je
add
or
add
push
pop
mov
mov
enter
mov
loopne
and
or
divb
sbb
mov
mov
arpl
addr16
mov
or
jnp
jbe
add
aaa
cmp
adcb
add
sahf
push
lds
cmp
push
inc
je,pn
push
dec
in
sub
push
add
and
inc
orb
cs
push
add
pusha
filds
or
add
jns
andl
sbb
loopne
dec
mov
rcrb
repnz
roll
rcl
jg
pop
or
push
dec
xchg
and
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
pop
add
add
add
add
cwtl
add
addb
add
sbb
add
js
add
dec
add
add
mov
add
add
add
add
add
add
or
add
add
mov
add
add
add
addb
add
or
add
xor
add
pop
add
addb
add
addb
addb
add
test
add
rolb
add
clc
add
orb
add
and
add
dec
add
orb
add
add
add
add
add
add
add
add
or
add
rolb
add
enter
sub
add
in
add
add
add
add
add
or
add
clc
add
add
mov
add
add
add
add
add
add
add
add
or
add
and
add
sbb
add
in
add
add
add
add
add
or
add
dec
add
add
xchg
or
push
add
add
add
add
add
or
add
jo
add
cmp
add
add
add
add
add
add
or
add
cwtl
add
add
or
sub
add
in
add
add
add
add
add
or
add
rolb
add
or
test
add
in
add
add
add
add
add
or
add
call
scas
or
test
add
in
add
add
add
add
add
or
add
adc
add
test
or
push
add
add
add
add
add
or
add
cmp
add
adc
or
test
add
in
add
add
add
add
add
or
add
pusha
add
add
loop
add
add
add
add
add
add
or
add
mov
add
insb
repz
push
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
or
add
enter
sub
or
push
add
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
or
add
or
add
js
or
cld
add
add
add
add
add
add
pop
add
add
add
add
mov
add
mov
add
fadds
add
add
orb
add
add
cmpb
add
push
add
addb
add
add
add
add
add
add
add
or
add
js
add
js
or
xor
add
add
add
add
add
or
add
mov
and
add
add
add
add
add
add
or
add
enter
cmp
or
cmp
add
add
add
add
add
add
or
add
lock
add
or
cld
add
add
add
add
add
add
or
add
sbb
add
or
pop
push
add
in
add
add
add
add
add
or
add
inc
add
add
cmp
add
add
add
add
add
add
or
add
add
pusha
cmp
add
add
in
add
add
add
add
add
arpl
add
test
add
rolb
andb
subb
add
add
add
add
add
add
add
or
add
rolb
fdiv
or
test
add
in
add
add
add
add
add
or
add
call
or
adc
add
in
add
add
add
add
add
or
add
adc
or
adc
add
in
add
add
add
add
add
or
add
cmp
or
adc
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
or
add
js
add
pusha
clc
or
pushf
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
cli
or
insb
add
add
add
add
add
add
or
sub
add
xor
add
pusha
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
jo
jo
ja
ja
ja
jo
add
add
xchg
js
js
pop
add
js
js
xchg
add
add
ja
ja
mov
ja
jo
add
ja
ja
fs
ja
xchg
jo
add
add
add
add
and
jbe
inc
inc
mov
ja
add
add
add
add
js
gs
jbe
pusha
or
add
add
add
ja
testl
addr16
inc
js
ja
add
add
add
ja
mov
fs
out
jbe
fs
mov
add
add
add
ja
xchg
inc
push
jbe
out
ja
jbe
add
ja
add
add
pop
ja
jo
data16
mov
fs
mov
add
add
ja
xchg
je
jbe
ja
jl
jbe
and
ja
add
add
andb
inc
jbe
js
out
fs
inc
or
add
add
ja
jo
inc
add
inc
inc
fs
pusha
inc
add
push
pop
ja
jo
add
ja
add
pop
pop
add
and
adc
pop
add
push
add
mov
add
ja
add
xchg
xchg
xchg
jo
add
xchg
mov
mov
mov
js
add
jo
push
mov
js
mov
pop
js
add
ja
jbe
pusha
js
mov
clc
clc
clc
mov
pop
xchg
je
jbe
mov
add
fs
ja
add
ja
jo
inc
inc
js
gs
popl
je
ja
add
js
jbe
sub
test
js
testl
xchg
add
je
inc
addr16
mov
mov
pop
ja
add
js
jo
addr16
xchg
js
popl
jl
je
ja
add
ja
ja
ja
or
mov
ja
xchg
pop
js
add
mov
push
ja
ja
enter
js
add
pop
xchg
test
clc
pop
mov
jo
add
mov
enter
or
mov
enter
js
add
or
jbe
out
mov
xchg
xchg
js
addb
add
enter
mov
or
xchg
js
cmpb
mov
mov
jne
mov
or
mov
clc
mov
js
add
add
mov
mov
mov
ja
add
add
js
xchg
mov
mov
mov
add
mov
mov
clc
clc
mov
mov
add
mov
mov
push
js
mov
add
add
mov
vpmacssdql
jno
aaa
incl
add
addr16
pusha
ja
clc
clc
ja
je
testl
or
push
inc
pop
js
jo
testl
add
mov
mov
testl
add
js
mov
mov
js
mov
add
add
add
add
clc
mov
pop
clc
clc
jo
or
add
add
add
add
clc
jo
add
add
incl
add
incl
add
jmp
pop
incl
add
incl
add
incl
add
cld
add
aas
incl
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
inc
add
add
add
jmp
add
add
add
push
add
add
add
cld
add
and
add
incl
add
add
add
jmp
pop
lock
add
clc
pop
add
cld
sldt
test
or
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
xchg
js
add
ja
jo
ja
add
ja
ja
jo
add
add
add
add
ja
ja
add
add
add
ja
mov
ja
mov
add
add
mov
js
ja
add
add
ja
divl
addr16
js
ja
add
pop
ja
je
jbe
ja
je
mov
js
inc
push
push
xchg
fs
xchg
jb
addr16
inc
push
mov
pop
xchg
jle
jbe
je
xchg
add
add
add
and
add
js
jo
js
or
js
js
js
js
js
inc
mov
mov
js
jno
js
add
testl
jbe
pop
mov
jo
inc
js
js
je
je
xchg
je
mov
pop
xchg
ja
mov
inc
js
jbe
addr16
js
jne
enter
pop
mov
gs
xchg
test
mov
jg
pop
mov
js
das
mov
ja
jo
mov
mov
xchg
jbe
mov
jl
js
add
js
ja
mov
xchg
xchg
add
mov
mov
jo
add
popl
clc
clc
xchg
clc
addb
add
mov
xchg
add
add
ja
ja
mov
jo
add
add
js
clc
xchg
js
js
add
add
add
js
clc
mov
ja
clc
clc
ja
add
xchg
js
add
add
add
lock
rolb
incl
add
cld
add
aas
clc
add
pop
lock
pavgb
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
psubb
add
cld
add
aas
incl
add
inc
add
push
ud0
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
jo
add
add
push
inc
add
add
inc
ja
inc
add
add
inc
push
pop
add
inc
inc
adc
jo
jne
and
inc
popa
add
xchg
mov
inc
inc
pop
mov
jo
jo
mov
clc
push
inc
je
ja
push
push
jo
je
add
xchg
ja
jo
ja
pop
jo
je
add
js
js
inc
add
add
ja
add
add
add
add
add
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
lock
cld
aas
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
adc
push
add
adc
add
sbb
add
adc
or
add
push
add
push
verr
sbb
adc
and
sbb
xor
adc
cmp
adc
cmp
verr
and
add
and
add
sub
add
and
sbb
cmp
sbb
and
and
sub
sub
xor
and
cmp
and
xor
add
xor
add
xor
cmp
aaa
add
cmp
add
adc
inc
sub
add
add
push
add
push
add
add
adc
push
xor
add
sbb
pop
cmp
bound
sbb
push
sbb
inc
xor
add
and
inc
cmp
add
add
sub
dec
cmp
push
cmp
pop
cmp
sub
inc
aaa
xor
inc
cmp
dec
ds
inc
ds
add
sbb
js
pop
add
pop
add
daa
add
add
add
cmp
add
xor
push
inc
cmp
push
dec
aas
add
cmp
fs
and
imul
outsb
dec
das
add
and
je
and
jnp
and
jne
sub
jl
sub
jle
sub
inc
inc
inc
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
dec
add
dec
add
add
push
add
push
add
pop
add
inc
add
dec
add
inc
add
add
pop
add
dec
add
add
pop
add
add
pop
add
pop
add
add
bound
insb
imul
jb
pusha
add
insb
add
add
insb
add
outsb
add
add
jae
jnp
jnp
orb
adcl
add
push
sub
mov
add
sub
cwtl
pop
sub
mov
sbbb
xchg
pop
xor
xchg
pusha
add
arpl
xchg
bound
add
imul
add
imul
add
jae
add
jnp
add
jge
add
arpl
subl
xchg
add
jbe
add
outsb
inc
add
jne
add
jnp
add
ja
add
jle
add
jle
add
addb
addl
mov
lods
adcl
mov
push
add
pop
add
cmpb
cmpb
xorl
test
xchg
lods
mov
mov
popa
add
mov
mov
xchg
arpl
mov
cwtl
imul
mov
stos
nop
jp
mov
pushf
jo
mov
cwtl
jg
mov
xchg
sahf
outsb
add
addb
mov
add
mov
add
cwtl
xchg
add
xchg
xchg
mov
popl
scas
sahf
xchg
add
mov
xchg
add
cmpsl
cmpsl
add
stos
stos
add
scas
add
mov
add
sahf
addl
movsl
mov
enter
lret
add
mov
add
mov
add
mov
add
mov
add
mov
stos
add
shrl
rol
mov
fld
mov
fcmovne
mov
lds
add
into
mov
add
lret
lret
lret
add
rcl
add
fcmovnu
add
iret
ret
rol
add
aad
add
fmul
add
fst
add
loop
add
in
add
out
add
ljmp
incl
add
add
push
pop
pop
pop
pop
pop
push
add
add
push
pop
insl
mov
les
push
pop
jne
add
push
lret
int3
int3
int3
lret
int3
int3
int3
lret
gs
push
add
lret
lret
int3
lret
lret
int3
rcl
aad
int3
lret
lret
jne
je
add
pop
insl
mov
f2xm1
repz
fcmovnbe
xlat
fcomi
repnz
int3
mov
add
int3
lret
shr
repz
inc
xor
aaa
inc
aaa
xor
repnz
lret
lret
int3
les
add
pop
jne
int3
int3
fdiv
les
sub
nop
nop
lea
jne
fcmove
lret
int3
lret
push
lret
repz
cmp
js,pn
mov
movsb
mov
jmp
add
add
lret
repz
sub
nop
movsb
cmpsb
cmpsb
movsb
nop
mov
pop
pop
lock
int3
lret
push
insl
je
lret
aad
push
movntps
mov
movsl
mov
and
push
fcmovnbe
lret
int
insl
add
add
jne
int3
shl
push
adc
cmp
lea
mov
jns
dec
cmp
pop
cmp
aam
int
les
add
int3
int3
repz
cvtps2pi
dec
jp
mov
ret
mov
jl
dec
cmp
fcmovnbe
int
jne
jne
lret
adc
js
orl
stos
lcall
sub
int3
int3
lret
jne
add
add
add
add
sbb
sub
jl
mov
mov
mov
dec
sub
or
mov
add
add
mov
or
add
adc
inc
or
das
das
das
xor
xor
pop
pop
adc
or
pop
pop
or
add
lret
int3
int3
les
add
add
add
lret
sbb
pop
and
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
int3
int3
aad
add
add
add
jmp
repz
ror
mov
int3
int3
int3
int
int
int
rcl
rcl
int3
sti
aam
add
int3
aam
add
add
add
lret
lock
sub
add
insb
or
fcmovnu
fcmovu
xlat
fcmovnu
lock
lock
int
int
add
add
int3
lret
fnstcw
dec
dec
and
lock
push
or
repnz
fcmovnu
fcmovnu
fdiv
repnz
sbb
dec
es
leave
lret
int3
fldenv
jne
lret
xor
adc
repnz
add
sti
sti
sti
repz
repnz
insl
adc
dec
sub
mov
add
add
lret
xor
jp
or
repz
jae
add
add
fcmovu
lock
fimull
push
jp
inc
adc
int3
fsubl
int3
fldt
jnp
orl
fcmovbe
pop
sbb
cmp
fcmovu
lock
add
dec
pop
push
int3
jmp
add
int3
lret
fisubrl
jp
addl
lret
sbb
rol
sbb
sti
pop
pop
mov
imul
fadd
add
add
int3
fldcw
jnp
xchg
repnz
rol
add
xchg
add
fcmovu
hlt
int3
sbb
push
pop
insl
int3
jmp
add
int3
lret
shlb
cltd
fwait
test
shrb
sbb
fcmovu
repz
add
xchg
jb
int3
lock
add
add
ror
int3
movl
mov
addr16
fxch
sbb
aam
fdiv
std
and
mov
fwait
cltd
mov
int
movl
rcl
int3
fsts
mov
roll
repnz
ror
int3
fdiv
repnz
mov
mov
fwait
mov
int3
aad
rolb
add
add
rcr
int3
fldenv
fwait
fwait
mov
mov
fucom
cmp
hlt
repnz
fcmovnu
lock
lock
fwait
test
pop
int
aad
add
add
add
fcmovnbe
aad
inc
fwait
popf
mov
mov
add
repz
fcmovu
fdiv
repz
sbb
loopne
shll
rcl
repnz
add
fcmovu
aam
pop
xchg
test
loope
out
push
repz
fcmovu
lock
gs
out
loope
sarl
repz
add
add
add
add
aad
inc
test
loop
out
pop
outsl
repnz
and
call
mov
lock
add
add
add
add
jmp
popa
mov
fucom
out
jmp
ljmp
lock
in
jmp
jecxz
fidivrs
repnz
int3
add
lock
push
xchg
mov
jmp
neg
pop
cmp
lock
mov
out
fidivs
repz
rolb
int
lock
mov
out
jmp
idiv
cli
int
push
stc
clc
div
in
call
inc
lock
repnz
insl
pop
add
bnd
mov
in
div
stc
cld
cld
cld
cli
stc
clc
imul
in
jmp
shll
fdiv
repz
lock
fcomi
lock
jne
xchg
in
out
in
div
clc
stc
stc
stc
stc
clc
clc
imul
in
out
pusha
push
jne
sti
repz
xlat
jne
jmp
les
out
cmc
div
clc
clc
clc
clc
clc
imul
in
fsubs
sti
repz
fdiv
sti
repz
movb
add
add
add
add
repz
mov
in
cmc
div
div
in
ljmp
hlt
sti
hlt
jmp
push
jne
repz
add
add
add
jmp
fcmovne
pop
push
cmp
mov
push
inc
inc
pop
int
std
std
sti
repz
int3
jne
je
inc
add
add
hlt
repz
and
and
inc
pop
std
std
sti
sti
hlt
rep
cmp
and
inc
aam
sti
repz
lock
hlt
sti
sti
std
repnz
repz
int3
rol
and
inc
add
shl
sti
sti
repz
sti
std
repnz
repz
fstpt
push
push
push
push
fcmovnbe
aam
repz
std
sti
sti
sti
sti
sti
sti
sti
std
repnz
add
add
hlt
hlt
repz
sti
std
rolb
add
add
aam
xlat
fcmovnu
xlat
aam
add
add
add
add
std
std
std
std
int3
add
add
repnz
lock
aam
aam
add
add
incl
add
incl
add
jmp
pop
incl
add
incl
add
incl
add
cld
add
aas
incl
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
inc
add
add
add
jmp
add
add
add
push
add
add
add
cld
add
and
add
incl
add
add
add
jmp
pop
lock
add
clc
pop
add
cld
sldt
pusha
rorb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
push
add
or
add
or
add
or
push
or
add
or
or
adc
adc
adc
adc
pop
adc
add
pop
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sub
add
daa
add
sub
add
sub
add
xor
add
xor
add
xor
ss
adc
add
pop
add
sbb
dec
xor
add
sbb
pop
cmp
popa
cmp
add
daa
add
add
and
add
sub
dec
cmp
push
cmp
pop
ds
sub
push
cmp
das
add
add
add
xor
add
and
imul
add
cmp
dec
inc
add
aaa
add
xor
push
inc
cmp
push
inc
cmp
push
inc
cmp
push
inc
add
cmp
pop
dec
cmp
imul
add
add
sub
je
and
jo
add
and
ja
add
and
js
add
sub
pusha
push
cmp
add
xor
je
cmp
jo
cmp
add
inc
add
inc
add
dec
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
dec
add
add
inc
add
push
add
pop
add
push
add
push
add
pop
add
bound
gs
add
data16
imul
outsl
outsb
outsb
add
outsl
add
add
insl
add
jno
jbe
jbe
jns
jns
jl
jp
jge
jge
orb
adcb
xchg
add
push
sub
add
pop
das
add
pop
xor
xchg
popa
das
add
arpl
add
bound
add
arpl
add
outsb
cmp
add
jne
add
jnp
add
insb
inc
add
outsb
inc
add
jo
add
outsl
push
add
jnp
add
js
add
je
add
js
add
pusha
add
test
lods
orb
test
mov
inc
add
mov
stos
adcb
adcl
sbbl
pop
add
xorb
cmpb
andl
test
mov
mov
bound
mov
fwait
insl
add
xchg
je
mov
xchg
js
mov
cltd
jge
rcrb
add
mov
add
xchg
xchg
add
lcall
test
cwtl
add
mov
popf
add
movsb
xchg
add
mov
movsl
add
lods
lods
add
stos
mov
add
mov
add
mov
addl
movsl
mov
enter
lds
xchg
add
mov
add
mov
scas
add
mov
test
add
ret
mov
mov
add
rol
les
leave
leave
leave
add
int
add
ror
add
rcl
add
aad
add
fcmovu
add
fstp
add
iret
rolb
rol
add
xlat
lret
add
fxch
add
add
add
loope
add
loope
add
out
add
ljmp
lock
incl
rol
mov
roll
add
jno
pop
push
push
pop
imul
add
ja
imul
mov
mov
add
ja
jne
jmp
icebp
out
out
jmp
rol
mov
add
mov
cli
out
xlat
mov
xlat
out
out
jmp
jne
movb
add
add
add
add
mov
fnstcw
xchg
dec
dec
bound
ret
add
add
add
add
les
jmp
ret
xchg
nop
jge
cmp
ret
add
add
add
ret
out
out
ja
inc
jns
stos
popl
out
rcl
ret
add
add
ja
ja
out
ja
xor
jle
cmpsb
mov
mov
dec
xor
jne
rcl
ret
add
add
mov
and
xchg
mov
mov
mov
add
add
mov
and
xchg
fwait
xchg
test
inc
and
aaa
xlat
rcl
ja
add
ret
ja
push
add
add
add
push
add
push
add
add
add
push
or
rolb
sarl
rcl
jne
push
xlat
rol
mov
ror
rcl
fmuls
rol
fnstcw
adc
out
xlat
push
adc
icebp
out
out
out
fldpi
jmp
out
out
adc
xor
rol
mov
and
out
rcll
jno
jno
out
sti
pop
sbb
das
rcl
mov
mov
jne
add
jmp
ret
inc
das
ret
shlb
rol
xlat
mov
push
fldpi
shll
mov
in
lock
mov
rol
xlat
ja
xlat
lret
sub
adc
xor
jmp
push
cltd
mov
ret
mov
ret
mov
out
or
mov
mov
lahf
dec
dec
mov
xlat
lret
mov
ret
xlat
rcl
out
sbb
mov
ret
roll
xlat
xlat
shll
scas
mov
out
in
xlat
fldz
cli
sbb
fstp
mov
cli
les
add
les
mov
push
out
xlat
fdiv
jno
in
fnstsw
jmp
ja
add
xlat
jmp
mov
out
gs
out
les
out
fbstp
repnz
add
add
ja
out
rol
jbe
loopne
out
mulb
push
div
out
int
jne
out
cli
ja
add
add
shr
out
sarl
hlt
cmc
stc
std
clc
stc
div
out
jae
ret
cld
roll
add
add
add
jmp
out
ja
jne
out
div
div
hlt
in
insb
ja
in
sti
jmp
add
add
add
add
out
repnz
ja
ret
shl
aad
mov
ja
ja
out
cld
out
movb
add
add
add
add
jmp
icebp
in
les
jbe
ja
ja
jne
fyl2x
in
movb
add
sar
sti
repnz
rol
jne
outsb
je
shr
icebp
cld
cld
rol
add
ja
cld
cld
cld
cli
icebp
icebp
icebp
icebp
cli
cli
cld
fnstcw
add
ja
jmp
cld
cld
cli
out
lret
add
lds
roll
add
add
lock
rolb
incl
add
cld
add
aas
clc
add
pop
lock
pavgb
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
psubb
add
cld
add
aas
incl
add
inc
add
push
ud0
fisttpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
or
adc
adc
push
push
push
add
sbb
add
adc
or
and
pop
adc
xor
adc
xor
adc
xor
push
add
and
cmp
adc
and
add
and
adc
add
and
add
and
sbb
ds
add
and
add
sub
add
das
das
add
das
and
xor
xor
cmp
cmp
inc
sub
add
sbb
dec
xor
add
add
sbb
push
xor
add
sbb
add
xor
dec
xor
popa
and
fs
push
add
and
push
inc
xor
push
inc
xor
push
inc
xor
add
cmp
pusha
dec
daa
add
daa
add
add
add
xor
push
xor
insl
push
cmp
insb
push
cmp
add
inc
add
inc
add
dec
add
inc
add
add
dec
add
push
add
pop
add
inc
add
dec
add
dec
add
dec
add
dec
add
add
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
add
add
push
add
pop
add
arpl
gs
insl
add
arpl
jns
data16
push
jg
data16
insb
add
jbe
jle
jle
mov
add
pusha
cmp
add
js
add
jle
add
jne
add
jnp
add
jge
add
mov
mov
push
add
jp
mov
mov
cltd
imul
popl
nop
mov
xchg
xchg
xchg
add
cwtl
xchg
add
xchg
mov
stos
pushf
xchg
add
cmpsb
xchg
add
test
add
mov
add
scas
cwtl
add
mov
add
les
add
leave
leave
add
int
add
rcl
add
add
fcmovnu
add
add
loop
add
in
add
call
repz
hlt
hlt
add
incl
add
add
add
dec
aaa
aaa
dec
jl
dec
adc
xor
or
add
add
pop
adc
popa
outsb
insl
cmp
pop
add
add
add
and
pop
gs
fs
or
add
add
add
sbb
add
add
cmp
push
push
push
push
cmp
add
dec
adc
lea
mov
dec
das
and
push
sbb
push
or
sub
and
orb
addl
adc
push
daa
pusha
dec
pop
mov
or
ss
add
vprotd
arpl
sbb
add
jno
inc
pop
mov
das
pop
add
add
jge
add
add
push
sub
add
add
push
imul
push
xor
add
add
add
jo
jne
jns
inc
imul
jo
pop
insb
add
add
add
cld
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
lock
cld
aas
add
jo
or
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
aaa
aaa
push
cmp
cmp
cmp
cmp
aaa
aaa
aaa
push
aaa
aaa
aaa
adc
inc
bound
ds
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
inc
inc
data16
aaa
aaa
adc
add
add
ds
xor
xor
xor
push
push
push
imulb
push
jle
jle
mov
decl
mov
insl
insl
insl
cli
dec
dec
dec
divb
ss
xor
cmp
aas
aas
add
add
ds
cmp
ss
pop
pop
testb
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
lcall
mov
divl
cmp
lret
aas
aas
aas
aas
aaa
aaa
aaa
adc
aas
aas
mov
cmp
loop
outsb
outsb
cli
mov
xchg
call
xchg
xchg
call
xchg
xchg
lcall
mov
cmpsl
jmp
mov
cltd
call
nop
nop
decl
call
xchg
xchg
pushl
jne
cmp
cmp
cmp
aaa
aaa
adc
add
add
cmp
shlb
testl
xchg
xchg
call
cltd
cltd
ljmp
sti
aad
sar
enter
mov
lods
test
std
mov
ret
int
int3
sti
stos
stos
stos
lcall
decl
xchg
xchg
call
insb
insb
clc
cmp
cmp
ds
add
add
inc
jns
inc
inc
fbstp
jne
xchg
xchg
call
mov
mov
repnz
jno
std
push
dec
aas
decl
lcall
sub
pop
inc
sub
pop
inc
daa
call
daa
decl
and
push
inc
cmp
std
mov
enter
mov
mov
call
xchg
xchg
incl
cmp
xorb
add
inc
inc
inc
orb
in
jns
decb
xchg
xchg
lcall
mov
leave
lock
decl
pushl
and
mov
lcall
jne
ljmp
jnp
jmp
data16
jle
sub
pop
cmp
inc
sub
incl
sarb
popf
popf
popf
call
cwtl
cwtl
call
inc
inc
out
inc
inc
mov
ss
add
add
inc
outsb
push
push
push
in
jbe
call
xchg
xchg
jmp
iret
iret
clc
xchg
mov
cmp
sub
dec
sub
ljmp
incl
popa
das
ljmp
jge
mov
xchg
xchg
test
mov
cmp
call
dec
and
pop
xor
ud0
and
clc
mov
mov
xchg
lcall
xchg
xchg
decl
dec
out
inc
inc
jge
add
add
ds
push
fidivl
jno
xchg
xchg
xchg
call
movsl
movsl
call
rcl
hlt
bound
cmp
adc
pop
xor
je
sbb
mov
lcall
push
xor
pushl
addl
addl
cmpl
ljmp
xor
xchg
pop
sub
test
ljmp
sbb
inc
and
or
std
mov
mov
xchg
call
xchg
xchg
decb
dec
fnstsw
aas
aas
inc
aaa
aaa
aaa
adc
dec
int3
jb
jb
nop
nop
nop
call
cmpsl
cmpsl
inc
dec
dec
inc
std
ds
sbb
jb
sbb
decl
pop
sub
popf
push
cmp
mov
inc
mov
push
mov
mov
mov
inc
ljmp
push
sub
mov
jge
and
insb
cmp
adc
cs
incl
aas
std
mov
mov
movsb
movsb
movsb
call
cltd
cltd
decl
dec
dec
int
cmp
pop
dec
dec
dec
movsb
jo
jo
xchg
xchg
jmp
int
repnz
inc
inc
std
inc
sub
jmp
sbb
outsl
inc
push
js
pop
jg
and
mov
xchg
fs
mov
adcl
pop
mov
lahf
outsb
inc
lahf
outsb
mov
xchg
pusha
pushl
jne
call
pop
daa
incl
inc
pop
ljmp
call
push
ljmp
sbb
incl
cmp
mov
mov
mov
xchg
xchg
lcall
addb
inc
inc
inc
inc
arpl
ja
xchg
xchg
xchg
lcall
rcl
negl
push
cld
cmp
cmp
ljmp
pushl
jl
and
adcl
lea
lcall
jne
ljmp
pop
mov
popf
outsl
inc
popf
outsl
mov
pusha
ljmp
jne
lcall
pop
das
incl
and
je
and
push
push
decl
push
ljmp
sbb
call
dec
std
mov
mov
mov
lcall
arpl
loopne
inc
inc
dec
dec
dec
dec
mov
mov
inc
rol
ja
jae
xor
adc
push
xor
push
ljmp
and
ja
and
adcb
xchg
decl
addr16
mov
adcb
pusha
mov
pushf
jo
mov
cwtl
insb
pushl
adcb
inc
lcall
pop
xor
xchg
incl
dec
and
jo
and
gs
incl
adc
pushl
imul
movsl
movsl
sti
xchg
xchg
xchg
lcall
xchg
xchg
clc
dec
dec
dec
mov
aas
aas
aas
inc
imul
js
js
xchg
xchg
xchg
jmp
mov
call
dec
xor
jmp
pop
ljmp
pushl
and
jl
and
decl
bound
lcall
jne
ljmp
mov
mov
cwtl
outsb
mov
xchg
push
ljmp
ja
lcall
bound
decl
push
sub
jl
pushl
ljmp
lcall
sbb
cmp
adc
daa
and
jmp
sahf
sahf
lcall
fwait
fwait
ljmp
imul
dec
dec
dec
fwait
ja
ja
decl
enter
pop
push
imull
push
adc
and
lcall
adc
ljmp
sbb
ljmp
push
ud0
sbb
push
aaa
sbb
xchg
arpl
lcall
and
and
push
incl
incl
and
inc
ss
incl
daa
incl
and
incl
sbb
cmp
push
cmp
adc
xor
adc
xor
ud0
sbb
jmp
adc
lcall
or
sbb
or
pop
push
push
stc
mov
xchg
xchg
lcall
xchg
xchg
icebp
dec
dec
dec
test
aaa
aaa
aaa
or
push
push
jbe
jbe
xchg
xchg
xchg
lcall
stos
stos
in
sub
jmp
and
push
push
push
cmp
cmp
sub
sub
sub
sub
sub
sub
xor
xor
and
cs
cmp
cmp
dec
dec
dec
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
cmp
cmp
dec
dec
dec
lcall
sbb
daa
and
call
lcall
cmpsb
cmpsb
cmpsb
call
push
aaa
aaa
aaa
adc
add
add
inc
inc
jno
jno
addl
mov
imul
and
and
mov
rcl
jmp
cwtl
xchg
lcall
xchg
xchg
jl
jnp
pop
add
inc
dec
enter
mov
lcall
cwtl
cwtl
lcall
cwtl
cwtl
lcall
cltd
cwtl
lcall
cwtl
xchg
lcall
fwait
fwait
lcall
pushf
lcall
cwtl
jmp
loope
jmp
and
jmp
adc
pop
lock
fwait
fwait
call
mov
je
inc
inc
inc
dec
dec
dec
dec
xchg
jle
jle
mov
nop
inc
vpsubb
dec
sti
push
xor
call
sbb
adc
pop
pushl
mov
mov
mov
mov
mov
ljmp
adc
jo
jo
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
scas
scas
pushl
mov
mov
mov
sar
sarb
mov
lret
call
or
cmp
adc
dec
dec
inc
sti
xchg
xchg
xchg
notb
cwtl
cwtl
decl
dec
dec
nop
push
push
push
mov
xchg
xchg
xchg
call
test
cld
inc
and
je
and
jmp
and
dec
lret
lret
dec
enter
rol
rol
mov
sahf
sahf
incl
ljmp
sbb
ljmp
enter
mov
pushl
mov
pushl
mov
pushl
mov
mov
mov
dec
leave
enter
leave
dec
lret
lret
jmp
jecxz
ljmp
sub
inc
sub
decl
sbb
cmp
sub
cmc
xchg
xchg
xchg
call
stos
stos
cmc
push
push
push
mov
push
push
push
ret
xchg
xchg
xchg
xchg
jmp
test
pushl
and
jp
incl
and
jmp
pusha
call
aam
dec
lret
inc
rol
mov
mov
mov
sbb
add
jmp
out
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
out
dec
iret
iret
inc
ret
mov
rol
mov
int
rcl
sar
in
in
outsb
outsb
outsb
pushl
and
incl
dec
daa
lcall
push
pushl
es
jnp
ja
xchg
xchg
xchg
call
mov
cld
push
push
push
roll
add
aaa
aaa
aaa
adc
pop
les
xchg
ljmp
jo
clc
dec
ss
js
es
jg
sub
xchg
lea
pushl
push
adc
fwait
fwait
fwait
call
rcl
inc
mov
mov
cmpsb
pushl
je
add
add
push
add
call
adc
call
adc
call
adc
call
adc
incl
add
incl
push
add
pushl
mov
dec
lret
lret
pushl
or
adcl
xchg
adcl
pushl
imul
call
mov
pop
les
ss
add
add
add
add
cmp
sbb
lds
nop
nop
pushl
stc
push
cmp
jg
sub
xchg
lea
call
incl
pop
pop
inc
int3
int3
int3
mov
mov
pushl
lahf
lahf
call
push
xor
ljmp
push
decl
sub
push
push
push
incl
scas
lods
mov
ret
ret
rcl
jmp
in
lcall
sbb
jmp
call
incl
inc
and
cmp
sbb
bound
mov
mov
pop
pop
ret
aaa
aaa
aaa
adc
add
add
add
add
cmp
sbb
les
call
mov
ljmp
popa
stc
pop
cmp
incl
call
popa
xor
popf
push
and
cmp
cmp
rcl
sar
mov
mov
mov
scas
ljmp
xchg
xchg
ljmp
sub
dec
ds
mov
cltd
jge
push
inc
ljmp
sub
jle
jle
xchg
xchg
xchg
ljmp
mov
jmp
out
call
push
incl
lcall
bound
xchg
pop
xor
mov
pushl
es
cmp
sbb
fs
pop
stc
xchg
xchg
mov
pop
pop
ret
aaa
adc
add
add
add
add
aaa
aaa
adc
popa
ret
xchg
call
stos
stos
ljmp
imul
mov
call
popa
xor
popf
push
inc
jmp
xor
jp
jp
into
into
int
mov
mov
ljmp
lahf
sahf
incl
adc
pushl
incl
or
incl
xchg
pushl
mov
cltd
cltd
cwtl
cmp
push
jmp
outsl
inc
lcall
popa
xor
xchg
pop
xor
jns
sub
cmp
sbb
cli
xchg
xchg
inc
rol
pop
pop
pop
shll
or
add
add
pop
rcrb
xchg
lcall
jns
notb
sub
pop
xor
xchg
popa
xor
popf
addr16
mov
jbe
ljmp
jbe
jmp
sbb
mov
int
int3
mov
mov
ljmp
mov
imul
pop
sbb
xor
ljmp
outsb
jle
jge
test
cmpsl
pushl
mov
sar
fcomp
fdivr
or
or
xchg
stos
jle
jmp
outsl
inc
lcall
xor
jp
sub
cmp
and
jne
outsl
testl
vpaddb
pop
rolb
add
pop
pop
pop
mov
fwait
fwait
hlt
xchg
xchg
xchg
call
mov
cld
nop
pop
xor
fwait
gs
jmp
jne
ljmp
pusha
pushl
dec
lcall
sbb
aad
aam
int
int
mov
mov
ljmp
pushf
pushf
ljmp
sub
jmp
and
addl
pushl
mov
ljmp
lcall
cmp
mov
imul
test
stos
jge
jmp
insl
inc
lcall
dec
sub
inc
aaa
xor
jle
jl
lcall
vpmuludq
pop
mov
add
add
nop
lcall
lcall
stos
stos
clc
dec
dec
inc
cli
mov
lcall
jb
ljmp
sbbl
mov
mov
lcall
pop
pop
push
fcmovu
fcos
lret
lret
lret
mov
mov
ljmp
fwait
fwait
call
xchg
xchg
mov
rol
lret
lret
lret
jmp
out
incl
inc
ss
mov
xchg
jae
mov
push
mov
popa
ljmp
jae
lcall
inc
decl
inc
sti
addl
jmp
mov
jmp
aas
aas
aas
inc
lea
lods
lcall
lods
lods
lcall
push
out
outsb
dec
das
jmp
push
ljmp
mov
mov
cltd
jnp
rcrl
decl
call
fcomp
dec
leave
leave
mov
mov
mov
mov
mov
mov
rol
leave
leave
leave
fdivrp
jmp
push
sbb
stos
nop
jp
ret
mov
xchg
jno
mov
ljmp
ljmp
arpl
dec
xor
call
push
repnz
mov
xchg
xchg
aam
inc
inc
inc
aaa
aaa
aaa
or
imul
mov
movsl
movsl
jl
jl
push
inc
xor
mov
jle
pushl
insl
mov
popf
cmp
lret
jmp
add
inc
mov
inc
rol
mov
mov
pushl
mov
ret
call
rcl
jmp
jmp
daa
daa
daa
jns
pop
dec
lods
xchg
inc
movsl
mov
rcrl
mov
xchg
stos
jl
incl
xor
jns
js
sahf
popf
popf
jmp
rcl
ljmp
imul
aaa
aaa
adc
add
add
push
xchg
stos
stos
stos
in
lods
lods
lods
jmp
lahf
cld
dec
dec
inc
testl
mov
mov
lcall
lret
call
mov
call
mov
pop
pushl
xor
call
aam
inc
mov
ljmp
mov
mov
in
in
fs
inc
call
mov
lahf
dec
lods
xchg
inc
mov
jl
mov
mov
mov
inc
decl
inc
cli
xchg
xchg
xchg
cld
mov
mov
stos
stos
stos
dec
iret
iret
out
pop
pop
pop
movsl
aas
aas
aas
inc
xchg
xchg
xchg
aam
mov
test
pushl
jno
push
inc
cmp
test
pop
pushl
xchg
je
mov
test
pushf
call
mov
lods
fld
mov
pop
push
dec
pushl
jo
int3
int3
lret
pushl
test
ljmp
mov
call
aad
ljmp
xor
aam
scas
call
mov
movsl
call
mov
dec
test
jg
mov
mov
test
incl
sub
jmp
mov
pushl
movsl
movsl
movsl
fadds
inc
inc
gs
mov
mov
lods
lods
lods
lcall
dec
dec
bnd
inc
pushl
xchg
jne
rcrl
call
mov
call
mov
mov
fmul
mov
lcall
push
decl
iret
iret
mov
mov
aad
mov
add
fmul
mov
call
mov
mov
inc
lahf
cmp
xchg
jne
popf
jp
call
decl
dec
hlt
mov
int
mov
mov
pop
test
add
add
aas
aas
inc
sahf
sahf
sahf
xlat
ret
ret
ret
pushl
mov
decl
inc
inc
sti
xchg
jae
mov
mov
pushf
call
mov
lods
fld
mov
fmulp
mov
mov
pop
push
incl
inc
pushl
mov
jmp
and
ja
jecxz
fmulp
mov
call
mov
movsb
dec
mov
inc
movsb
mov
lods
mov
push
inc
decl
inc
cld
xchg
xchg
xchg
test
int
iret
iret
iret
mov
addb
aaa
aaa
aaa
push
pusha
pusha
pusha
lahf
ret
ret
ret
icebp
rol
pushl
test
jbe
dec
inc
inc
std
fwait
jl
inc
mov
mov
call
shrb
mov
jmp
fmul
jmp
fdivr
mov
aas
pushl
xor
decl
fst
jmp
fxch
jmp
rol
mov
fadd
scas
call
mov
mov
js
dec
incl
cmp
jle
jle
ret
ret
ret
fcmovnu
lret
lret
lret
mov
test
cmp
cmp
cmp
cmp
aaa
aaa
aaa
adc
enter
sti
mov
mov
cmpsl
jmp
pop
in
dec
inc
inc
std
xchg
jnp
dec
mov
call
mov
mov
fcmovnb
mov
fmulp
mov
jmp
xlat
lret
jmp
jecxz
out
out
out
out
out
in
jmp
xlat
lret
jmp
rol
fmulp
mov
fadd
mov
sarl
xchg
pushl
dec
incl
cmp
fs
mov
call
rcl
inc
mov
leave
leave
dec
leave
leave
lcall
dec
dec
sarl
cmp
and
add
add
movsl
movsl
into
into
into
cld
rol
mov
test
jae
inc
inc
inc
cld
xchg
dec
mov
fadd
scas
fcmovnb
mov
mov
jmp
aad
jmp
fxch
jmp
ljmp
jmp
fxch
jmp
aad
jmp
rol
mov
call
mov
ljmp
dec
incl
ds
jns
jns
mov
call
rcl
dec
enter
rol
mov
into
into
fdivrp
fdivr
cmpsb
cmpsb
cmpsb
sti
dec
dec
dec
lds
ss
dec
dec
dec
data16
mov
rcl
sar
ret
ret
ret
mov
mov
incl
cmp
dec
stos
xchg
xchg
sarb
mov
jmp
rol
jmp
aad
jmp
xlat
int3
jmp
fxch
jmp
fxch
jmp
fmul
jmp
aad
jmp
rol
jmp
iret
mov
inc
mov
decl
inc
aas
incl
cmp
stc
lret
lret
lret
jmp
loope
call
rcl
dec
leave
leave
mov
mov
mov
iret
iret
out
out
out
call
aad
jns
jns
dec
dec
dec
mov
push
push
push
jbe
mov
aad
lret
inc
ret
ret
mov
lahf
lahf
decl
dec
icebp
aas
cmp
dec
xchg
xorl
scas
mov
jmp
iret
ret
aam
jmp
aam
jmp
aam
jmp
aam
fmul
mov
ljmp
jb
decl
inc
aas
cmp
dec
icebp
stos
stos
stos
fcmovu
out
out
fcos
rol
lcall
pop
incl
inc
incl
inc
incl
inc
decl
dec
jle
jle
icebp
icebp
icebp
push
hlt
hlt
call
aad
call
movb
add
dec
dec
dec
insl
mov
mov
fcomp
fdivr
into
into
into
inc
mov
mov
xchg
xchg
decb
dec
icebp
cmp
aaa
repz
inc
ds
push
dec
dec
cld
jb
pusha
decl
test
popl
outsb
ljmp
pop
decl
inc
std
inc
inc
cmp
cmc
dec
dec
dec
lock
fwait
fwait
rcl
sar
in
in
in
ljmp
call
aad
pushl
xchg
xchg
lcall
jp
jge
jge
jbe
jbe
cmp
cmp
mov
mov
stc
stc
stc
in
in
in
jmp
lds
add
add
cmp
cltd
cltd
cltd
rcr
fcmovnu
cmc
xlat
xlat
xlat
dec
int3
int3
dec
lret
leave
leave
leave
inc
rol
scas
scas
scas
incl
push
push
cli
cmp
aaa
ss
cmp
xor
cld
cmp
xor
sti
push
push
push
sti
cmpb
mov
mov
iret
iret
iret
jmp
in
jmp
call
jecxz
fstp
aam
aam
into
into
into
dec
lret
jno
jno
inc
inc
inc
decl
dec
decl
dec
cmp
cmp
fdivr
cli
cli
cli
push
cmc
cmc
ljmp
push
aaa
aaa
aaa
adc
jae
rol
loope
stc
xlat
xlat
xlat
call
rcl
dec
int
dec
int
dec
int
dec
int3
int3
dec
leave
leave
inc
ret
ret
mov
mov
ret
lret
rcl
sar
xlat
xlat
xlat
fcmovu
fdivr
loope
loope
call
jmp
lret
call
aad
aad
rcl
sar
mov
xchg
xchg
call
sahf
sahf
incl
cmp
mov
cli
cli
push
repz
gs
cmp
addl
loop
loop
loop
loop
fcos
aam
aam
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
aam
aam
fcmovnu
in
in
call
vpsrad
push
push
jbe
iret
iret
in
fcmovu
mov
mov
inc
inc
inc
aas
aas
aas
incl
inc
incl
decl
dec
incl
sti
sti
stc
stc
stc
ljmp
push
push
addb
add
cmp
je
stos
mov
enter
in
cmc
out
out
in
in
in
in
in
in
in
in
in
in
in
in
out
out
out
out
lret
jecxz
movsb
movsb
aad
jne
lods
cmp
add
add
aaa
aaa
adc
jbe
fstp
fdivr
rcl
sar
xlat
xlat
xlat
fstp
loop
loop
cmc
cmc
cmc
cli
cli
cli
cli
cli
cli
jmp
out
icebp
arpl
sahf
ss
cmp
popa
popa
mov
jg
nop
nop
nop
lret
pushf
aam
movsb
movsb
aad
movsb
movsb
aad
pushf
pushf
aam
xchg
xchg
int3
jg
jg
bound
mov
ds
ss
add
add
cmp
adc
out
cli
jmp
ljmp
hlt
hlt
hlt
clc
clc
clc
stc
stc
stc
out
out
out
idivb
jnp
aaa
aaa
aaa
adc
add
add
ss
ss
add
add
cmp
adc
repnz
cmc
cmc
cmc
push
div
push
hlt
hlt
sti
mov
outsb
outsb
cmpsb
aaa
aaa
aaa
adc
add
add
push
xchg
xchg
xchg
shrb
lods
lods
xlat
mov
pop
addb
add
incl
add
cld
aas
incl
add
incl
add
incb
add
add
clc
add
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
jg
add
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
lock
add
sldt
lock
add
pop
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
inc
add
add
add
jmp
add
add
add
clc
add
add
add
incb
add
add
incl
add
jg
add
add
cld
sldt
sbb
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
dec
dec
inc
push
push
push
test
bound
jno
in
jno
jno
imul
bound
mov
push
push
test
dec
inc
push
push
push
pop
incl
jne
jne
push
push
push
jno
ja
pushl
ja
outsl
outsl
outsl
jmp
call
push
decl
dec
decl
dec
call
push
jmp
ljmp
imul
ja
js
js
push
push
push
jno
push
push
push
incl
push
push
push
jo
js
pushl
jbe
bound
jmp
data16
jge
jge
mov
xchg
call
cwtl
cwtl
lcall
xchg
xchg
incl
gs
pop
pushl
jno
jns
jns
push
push
push
outsb
incl
incl
push
push
pop
pop
pop
popf
jl
jl
push
push
jbe
jbe
mov
pushl
ret
rcl
sar
xlat
xlat
xlat
call
aad
dec
into
into
inc
ret
mov
mov
mov
sahf
sahf
incl
arpl
jp
jp
pop
pop
pop
lcall
add
incl
push
push
push
sub
popa
popa
mov
jae
jae
xchg
lahf
inc
ret
ret
jmp
loop
call
aad
pushl
cltd
cltd
decl
mov
pushl
rcl
call
xlat
xlat
mov
test
fwait
pushl
jbe
js
js
pop
pop
pop
fwait
inc
inc
inc
sub
incl
jno
jno
arpl
mov
jns
jns
mov
jmp
loop
mov
test
gs
cmp
incl
push
pushl
cmp
lcall
dec
incl
mov
sar
mov
mov
movsb
movsb
movsb
decl
jp
pop
pop
pop
fwait
dec
dec
dec
sbb
add
add
incl
mov
jp
xchg
xchg
xchg
dec
enter
fcmovnu
decl
inc
cmp
insb
inc
daa
call
jnp
pushl
inc
pushl
test
mov
pop
xor
bound
push
inc
decl
rcl
pushl
cmpsl
decl
addl
incl
incl
pop
pop
pop
jne
mov
decl
lret
rcl
sar
js
js
push
cmp
pushl
incl
popa
das
ljmp
mov
mov
xchg
pop
pushl
jbe
call
push
daa
ljmp
and
push
cmp
ja
int3
int3
int3
pushl
movsb
movsb
decl
test
jae
add
add
add
add
incl
lcall
lcall
jge
mov
js
js
dec
cmp
jnp
and
mov
lcall
orb
xchg
popa
mov
fwait
insl
mov
adcl
insl
cmp
js
and
arpl
and
dec
cmp
js
js
into
into
into
ljmp
mov
jnp
jnp
push
push
push
push
add
add
incl
pop
pop
pop
jne
xchg
xchg
jg
jg
mov
fcmovu
incl
cmp
lcall
sbb
ja
and
adcl
pusha
xor
fwait
outsb
cmp
pushl
fwait
outsb
mov
xchg
arpl
stos
adcb
outsl
notrack
push
sub
outsl
inc
and
pop
cmp
incl
mov
cmpsl
jmp
lea
jno
add
add
js
ljmp
addl
call
cmp
inc
sub
push
ljmp
and
adcb
arpl
lcall
outsb
inc
lcall
pop
jmp
jnp
call
arpl
incl
dec
ljmp
and
pop
cmp
inc
xor
dec
inc
pushl
cmpsb
cmpsb
jmp
popf
popf
jp
jp
push
push
push
pop
popa
popa
popa
inc
mov
mov
lahf
lahf
lahf
call
rcl
jg
jg
adc
adc
or
or
or
pop
decl
or
incl
add
inc
das
sbb
add
add
or
or
or
or
or
or
or
or
or
or
or
pop
decl
or
decl
or
decl
or
decl
or
decl
pop
push
decl
or
sbb
jg
jg
mov
mov
mov
cmpsb
cmpsb
decl
dec
dec
inc
pop
pop
pop
xchg
addb
rol
call
inc
jmp
sbb
jmp
mov
lcall
je
call
push
or
push
or
mov
scas
scas
lcall
popf
lcall
lcall
mov
mov
pushl
mov
jmp
sbb
call
inc
inc
mov
mov
lcall
push
push
test
data16
mov
xchg
iret
iret
iret
lcall
cmp
popa
cmp
ljmp
daa
es
int3
int3
int3
pushl
dec
cmp
pushl
xor
aad
aad
int
int
int
int
lret
lret
lret
inc
rol
ret
dec
enter
rcl
call
rcl
call
aad
jmp
xor
decl
ljmp
xchg
xchg
pushl
test
jmp
bound
mov
mov
mov
sar
mov
and
js
ljmp
and
dec
dec
dec
fcos
lret
lret
lret
ljmp
sub
incl
daa
lcall
pop
jl
jp
jl
jp
outsl
outsb
insl
call
push
pushl
outsl
dec
leave
leave
call
aad
jmp
in
call
push
incl
adc
call
call
xchg
xchg
ljmp
mov
ljmp
imul
jae
lock
movsb
movsb
call
mov
test
push
cmp
xchg
call
pop
jns
js
rcl
sar
mov
movsb
movsb
decl
pop
pop
jmp
js
lcall
ja
incl
add
call
push
inc
decl
sub
das
pushl
call
incl
xchg
xchg
jmp
mov
pushl
jb
jae
jae
mov
xchg
xchg
pushl
test
pop
ds
fs
sub
mov
leave
enter
scas
jns
js
pop
adc
mov
lcall
data16
int
call
xlat
xlat
ljmp
sub
lcall
dec
sub
push
cmp
xchg
xchg
xchg
xchg
jmp
mov
pushl
jb
insl
insl
insl
fnstcw
popf
popf
pushl
xchg
call
insl
inc
ljmp
js
ljmp
ror
mov
cmpsb
cmpsb
pushl
ss
xor
pushl
xor
decl
rol
jecxz
jecxz
inc
inc
inc
call
push
lcall
dec
sub
pop
inc
xor
lea
mov
mov
mov
rol
ljmp
fisubl
addr16
leave
leave
jmp
mov
lcall
xor
xchg
arpl
ljmp
sbbl
mov
pop
inc
cmp
arpl
call
mov
movsl
movsb
lcall
pop
pop
call
adc
test
mov
jnp
jp
push
inc
aaa
pushl
andl
je
pushl
xor
pop
dec
cmp
sahf
sahf
sahf
incl
inc
jmp
bound
rol
ljmp
mov
mov
push
dec
call
jg
pushl
xchg
js
ret
incl
cmp
mov
sar
mov
mov
ljmp
mov
call
aad
lcall
xor
inc
mov
js
mov
push
mov
push
cmp
pop
push
dec
pushl
mov
pushl
pop
pop
test
inc
lcall
pushl
test
jge
jge
jg
inc
ljmp
xchg
jb
rcrl
inc
stos
xchg
ljmp
sub
dec
iret
iret
dec
lret
mov
mov
mov
int3
int3
jmp
loope
ljmp
movsb
xchg
dec
test
cmp
xchg
jb
fwait
ja
pushl
jge
jge
movsl
movsl
movsl
jmp
call
dec
dec
inc
fsts
js
js
int
int
mov
test
xchg
jmp
jmp
jns
lds
call
mov
xchg
decl
dec
dec
into
into
pushl
mov
fcos
insb
insb
imul
pop
push
call
mov
popf
inc
cmpsb
mov
mov
je
mov
popa
pop
dec
lcall
mov
jp
jp
addl
gs
mov
inc
mov
cwtl
cwtl
incl
pusha
push
pushl
scas
xchg
call
mov
mov
fmulp
mov
pushl
ja
into
into
int
call
inc
fmulp
mov
call
mov
xchg
jmp
pusha
push
incl
lcall
loopne
loopne
mov
mov
push
push
push
jb
add
add
incl
mov
jl
call
dec
lret
lret
ljmp
js
js
xchg
dec
mov
call
mov
mov
loopne
mov
jmp
pop
decl
dec
lcall
call
push
jmp
fxch
jmp
into
mov
call
mov
js
pop
pushl
ja
cwtl
cwtl
cwtl
call
rcl
jmp
loope
jle
jle
jns
jns
incl
fs
mov
dec
int3
int3
jmp
test
mov
cmpsb
fcmovb
mov
loope
sar
xlat
lret
jmp
fdivr
lock
fdivr
jmp
fcos
out
int3
jmp
iret
mov
mov
je
js
js
mov
inc
ljmp
call
push
jne
incl
incl
decl
data16
ret
fcmovu
iret
iret
iret
lcall
jl
jge
jge
ja
outsl
mov
lret
loop
jmp
fxch
jmp
jmp
fxch
jmp
rol
call
shll
imul
jge
jge
addb
dec
enter
call
ret
pusha
pusha
sahf
incl
incl
lods
lods
lods
sbb
imul
aad
aad
test
jp
js
js
jnp
jnp
jb
insl
call
test
inc
mov
mov
mov
jg
imul
jp
jp
jl
jl
jl
jl
popf
popf
popf
call
rcl
ljmp
jmp
popa
mov
incl
imul
in
in
fdivr
enter
xchg
xchg
xchg
pushl
jo
jo
jo
js
js
jnp
jnp
jp
jp
jp
jp
jnp
jnp
jns
jns
jb
jb
jo
jo
xchg
xchg
xchg
mov
fcmovnu
push
lock
enter
arpl
push
push
push
sub
incl
incl
test
push
jmp
out
jmp
out
fdivrp
rcl
sar
scas
scas
scas
decl
jb
push
push
jb
mov
test
fdivr
jmp
jmp
jmp
jmp
cmpsl
cmpsl
cmpsl
jmp
pusha
sahf
jno
jno
incl
incl
decl
jge
mov
out
in
in
in
jmp
out
jmp
loope
fdivr
fcmovnu
fcos
fdivr
loope
loope
out
out
lock
jmp
jmp
mov
jge
lcall
pop
jno
incl
incl
incl
incl
mov
push
js
mov
leave
leave
fdivrp
jmp
jmp
lock
icebp
icebp
in
in
in
jmp
loopne
dec
leave
leave
jmp
js
lcall
pop
je
lcall
incl
incl
in
in
imul
fs
addr16
insl
insl
xlat
jb
jb
jb
jb
insl
insl
insl
fsubs
data16
pop
pop
xchg
pusha
inc
enter
incl
incl
inc
add
incb
add
cld
add
aas
lock
pop
loopne
add
rolb
pop
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
psubb
add
cld
add
jg
add
inc
push
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sub
inc
sub
pop
dec
sub
pop
dec
sub
pop
inc
daa
fstpl
sub
add
add
inc
sub
xor
adc
dec
xor
daa
lcall
and
cmp
adc
cs
adc
inc
xor
enter
add
add
add
and
sub
and
jmp
call
xchg
push
jmp
pop
xor
push
xor
or
das
sbb
sub
add
add
daa
sbb
repz
sub
ljmp
sbb
ljmp
lcall
movsl
jge
jg
call
sbb
daa
pop
or
sub
cmc
dec
xor
add
add
add
xor
adc
lcall
adc
pushl
pop
adc
outsb
dec
daa
pushl
sub
cmp
and
cmp
and
xor
pop
adc
and
or
push
or
movl
xor
bound
wbinvd
cld
inc
inc
inc
decl
dec
pushl
xor
call
push
push
incl
inc
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
inc
inc
inc
ljmp
sub
call
or
std
push
inc
xor
xor
lret
adc
das
das
das
fcmovnu
mov
jbe
decl
jecxz
jmp
jecxz
call
rcl
inc
mov
jmp
in
ljmp
sub
lcall
or
inc
xor
lret
inc
sub
sbb
xor
adc
arpl
jmp
loop
call
rcl
lcall
pop
jmp
and
jmp
and
pushl
ja
rcl
sar
hlt
repz
jmp
and
cmp
sbb
inc
das
push
loope
xor
decl
and
ljmp
call
or
or
or
xchg
xchg
xchg
jmp
out
pushl
add
jmp
and
sub
cmp
inc
das
leave
pop
ds
mov
jle
inc
call
adc
call
xlat
xlat
call
xlat
xlat
jmp
jmpw
dec
int3
int3
call
sbb
ljmp
cmp
imul
sub
decl
es
bound
sti
jp
inc
pushl
push
inc
incl
inc
jmp
in
dec
leave
leave
dec
into
into
push
hlt
hlt
call
push
lcall
lcall
push
cmp
sti
outsb
pop
dec
outsl
add
add
pop
dec
cmp
mov
scas
cwtl
lcall
dec
jle
jle
rcl
sar
jmp
xchg
xchg
call
inc
mov
outsl
pop
call
xor
push
inc
xor
add
aas
xacquire
mov
mov
incl
add
ljmp
insl
pushl
ja
or
or
mov
xchg
xchg
insb
popa
push
incl
sub
add
add
push
dec
sbb
xacquire
mov
les
pushl
push
mov
xchg
ljmp
decl
xor
insl
pop
push
sbb
add
add
shll
cli
nop
mov
lahf
cwtl
xchg
js
insb
lcall
dec
sti
gs
dec
movl
add
add
pop
insl
jae
pop
shlb
pusha
ljmp
pop
sarl
pop
insb
clc
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
sldt
clc
pop
add
mov
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
xor
add
add
and
test
add
or
and
add
add
and
test
add
or
adc
add
add
and
push
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
add
and
xor
add
add
pop
add
add
insl
add
imul
add
arpl
jb
imul
add
inc
add
je
outsl
add
je
and
jbe
xor
and
push
add
jb
imul
cmp
and
xor
sub
and
xor
sub
and
add
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
mov
sub
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
addr16
addr16
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
ds
popa
jae
gs
bound
fs
je
je
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
push
decb
add
std
or
popa
decb
add
std
or
outsb
decb
add
std
or
jnp
or
in
std
or
mov
or
hlt
std
or
xchg
decb
add
std
or
lcall
add
or
mov
or
adc
or
mov
decb
add
decb
add
or
sar
or
sub
or
fdivrp
or
xor
or
ljmp
add
decb
add
add
decl
add
add
or
sbb
or
sub
or
cmp
or
dec
decl
add
or
add
add
decl
add
add
add
add
add
add
or
add
add
nop
decl
add
add
add
add
add
add
sbb
add
mov
add
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
add
add
add
push
add
add
add
adc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
add
dec
inc
dec
inc
xor
cs
insb
add
dec
xor
cs
insb
add
push
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
inc
push
dec
cs
dec
dec
add
inc
dec
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
inc
push
inc
dec
push
cs
insb
add
push
push
dec
dec
dec
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
dec
dec
dec
cs
insb
add
dec
inc
dec
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
arpl
add
popa
addr16
imul
outsl
jbe
add
inc
gs
popa
jbe
inc
imul
add
dec
imul
push
dec
gs
gs
outsl
outsb
outsb
arpl
outsb
push
add
inc
outsl
dec
outsb
imul
add
inc
outsb
jne
push
jb
arpl
jae
jae
add
inc
jb
addr16
imul
inc
gs
inc
add
add
fs
jae
jb
jb
imul
push
gs
jne
jb
push
popa
insb
jne
push
add
inc
je
dec
jo
outsb
inc
imul
insl
gs
gs
imul
add
insb
dec
test
xchg
dec
jge
inc
push
dec
inc
inc
xor
ret
mov
cli
sub
xlat
xchg
dec
pop
or
lret
lods
add
out
and
stc
jge
in
fnsave
mov
sub
adc
in
adc
jo
mov
add
jecxz
rcl
mov
inc
hlt
jns
and
fnstcw
sbb
mov
in
test
repnz
cs
jae
in
push
int
in
xchg
out
or
adc
cmp
aaa
mov
dec
mov
xor
setbe
or
jmp
js
ss
xlat
add
add
dec
adc
add
add
scas
aaa
outsl
jo
lret
add
pop
cmp
sti
cli
add
ja
mov
sar
mov
sahf
push
aas
push
cmc
stos
mov
and
or
mov
lods
jge
imul
cmpsl
adc
repnz
and
adc
popf
in
cli
jg
sub
stos
dec
jo
mov
test
fidivrs
sub
loope
pushf
pusha
lahf
sub
mov
xchg
loopne
push
out
xor
sub
pop
sbb
cmp
pop
push
adc
ljmp
cmp
xchg
imul
push
enter
les
and
jg
mov
mov
lea
pop
push
das
outsl
stos
sbb
pop
into
mov
sub
or
aad
enter
sub
popf
shll
xor
gs
jp
in
dec
pop
pop
push
in
mov
pusha
sbb
int3
and
iret
outsb
xor
lret
dec
or
in
jl
outsl
mov
sarb
or
sub
pop
les
sub
testb
jmp
adc
call
inc
inc
mov
and
jg
imul
pop
imul
inc
jmp
add
mov
pop
push
cmpb
sbb
icebp
mov
gs
cltd
ret
or
outsb
mov
cmp
jl
lahf
mov
jo,pn
sahf
inc
shll
jl
mov
stos
dec
gs
pop
aad
lret
and
push
lcall
jecxz,pn
sbb
mov
cmpsl
in
xor
push
push
sub
mov
insb
popf
inc
xchg
inc
out
and
stos
mov
rclb
mov
lods
lea
push
pop
loop
xchg
out
sub
inc
jge
cmp
into
add
adc
lods
inc
mov
test
push
popa
and
cmp
mov
jg
push
cmp
sar
cmp
test
incb
mov
xchg
jbe
ficoms
jne
cs
add
gs
jecxz
sbb
mov
mov
repz
jbe
cmpsb
orb
out
mov
and
roll
dec
mov
sahf
xchg
fwait
adc
imul
leave
scas
adc
in
lock
xchg
shl
aam
es
hlt
sub
icebp
jnp
int
add
mov
push
icebp
pop
out
int3
inc
push
pop
fsubl
pushl
repz
sar
push
and
imul
out
and
movb
aam
mov
cmpb
dec
cmpb
mov
les
push
add
push
hlt
pusha
lds
adc
jae
loopne
mov
xchg
fs
xor
les
ljmp
fstps
add
sahf
mov
and
pop
and
sbb
fcoms
and
pop
lea
data16
jne
scas
push
test
popf
pop
gs
shlb
cmpsb
jb
mov
xchg
mov
orl
sub
adc
in
lods
cwtl
add
mov
mov
scas
cltd
jmp
jl
and
rolb
push
or
jge
mov
int
and
test
shrb
sub
jg
mov
mov
mov
js
adc
lret
fcoml
mov
lods
or
mov
cmp
mov
dec
sub
aad
mov
jnp
aaa
test
and
inc
xchg
daa
mov
divl
mov
inc
and
jge
push
inc
rolb
cmpsl
mov
push
sbb
insb
les
mov
and
push
cmp
es
xchg
inc
sti
das
dec
push
cmp
push
sbb
mov
sub
add
test
jns
and
repz
and
iret
mov
or
jp
fists
mov
cltd
pop
jmp
je
movsl
out
mov
popa
xchg
lcall
sbb
jge
int3
sbbb
sbb
fcmovbe
add
nop
gs
xchg
int3
in
mov
cmc
lahf
bound
lcall
cmpsb
or
xchg
jnp
jmp
sarb
insb
xor
inc
mov
movsb
mov
stc
or
or
scas
inc
mov
imul
sbb
aad
push
mov
lods
xor
sub
add
adc
mov
ljmp
sub
aas
push
loop
clc
sbb
push
or
lock
mov
jle
and
fdivp
dec
jge
leave
push
xchg
sbb
add
insb
sub
imul
fnstcw
stc
test
pop
out
lcall
les
fnstsw
in
lcall
addb
cld
mov
add
es
lods
mov
xchg
cmp
xor
mov
mov
inc
test
idiv
sbb
xor
imul
shlb
add
fsubs
outsl
mov
testb
or
lods
bound
jno
push
adc
lahf
xchg
imull
or
movsb
inc
outsb
inc
and
filds
iret
mov
dec
or
dec
or
push
shrd
mov
or
xor
mov
mov
js
insb
int
pop
cmp
in
test
sbb
push
aaa
popf
sub
cltd
xchg
xchg
cmpsb
jnp
mov
jae
xchg
mov
pop
fwait
xchg
notb
out
sub
repz
mov
add
mov
cmp
adc
popf
fcmovu
std
std
jne
cmp
xchg
pop
shrb
mov
pop
mov
ja
sub
out
insl
mov
xchg
cmp
xor
incl
lret
std
push
roll
fs
aaa
and
enter
jo
xchg
lock
mov
and
repnz
mov
aam
lret
pop
sub
pop
shlb
xchg
scas
cmpxchg
fistpl
pop
nop
and
out
or
pop
push
xchg
lods
xchg
adc
sbb
scas
cmp
mov
stos
mov
pop
outsl
inc
mov
mov
mov
mov
mov
fcmovb
xchg
mov
xchg
aam
inc
inc
ljmp
push
imull
mov
sarb
or
lds
popf
roll
das
cmpsl
adc
dec
xchg
dec
dec
das
adc
int3
jne
adc
inc
inc
mov
lock
jo
cmp
jge
shrl
daa
or
cmp
fisubrs
push
mov
push
js
xor
and
xchg
inc
dec
in
cltd
in
cmpsb
ja
mov
sub
dec
loop
cmp
fs
scas
shrb
xchg
xchg
mov
dec
fdivrl
test
ds
cld
mov
mov
cwtl
ds
push
push
xor
lea
inc
and
ljmp
mov
bound
sbb
xchg
fcoml
mov
dec
sbbb
cld
xchg
sbb
push
lea
jle
iret
mov
mov
cltd
orb
or
or
mov
dec
repz
mov
push
xchg
adc
lods
mov
mov
sub
push
cmp
icebp
cmp
or
pusha
pop
jp
mov
xchg
sti
jmp
or
mov
cmp
subb
out
and
mov
pop
gs
imul
lods
push
test
push
cmp
cltd
repnz
inc
jns
dec
hlt
mov
out
out
fcompl
add
lea
xor
push
les
cld
lods
ljmp
jg
loop
jmp
jg
ja
dec
and
bswap
lret
imul
add
sbb
cltd
ret
and
clc
shl
cmpsl
mov
xor
adc
ss
loop
cli
inc
add
push
jle
in
xor
adc
insl
in
sbb
cmp
nop
test
xchg
sbb
inc
lods
fisttpl
push
add
out
in
xor
and
mov
and
loope
pop
pushf
jns
icebp
pop
je
and
cmp
clc
fs
mov
xor
call
icebp
mov
push
cmp
in
insb
jl
jae
mov
pop
sbb
imul
jmp
mov
push
add
lcall
sti
lahf
and
ss
jp
mov
dec
or
lods
xchg
cmp
add
add
or
call
jl
push
sub
mov
movl
mov
ljmp
or
jb
adc
xlat
push
and
sub
outsl
pop
inc
dec
testb
testb
cmp
bound
sbb
fildll
cmpsl
jp
pop
stos
cld
pop
mov
jg
or
push
out
lea
or
stos
push
add
shlb
cwtl
xchg
push
pushf
mov
cld
push
mov
ja
sub
stc
push
leave
adc
mov
fs
dec
lock
xor
int
iret
mov
out
pop
sub
test
cltd
lea
divb
rorb
jb
sbb
and
inc
dec
cli
repnz
pop
in
or
nop
addr16
xor
scas
push
clc
jne
leave
pop
mov
mov
mov
lock
push
or
jl
popl
add
jge
lcall
outsl
pushf
movsb
jg
das
cmp
push
addr16
xor
sub
lahf
dec
jns
scas
push
jecxz
xchg
sub
push
sub
lahf
in
lahf
cmp
mov
mov
pushf
jb
cld
jmp
mov
shrl
and
dec
mov
pop
stos
mov
mov
ss
inc
test
daa
cmpsl
add
pop
or
movsb
pop
and
xor
cmp
shld
sub
xor
stos
jmp
ds
add
test
push
xor
mov
lcall
mov
in
inc
mov
rclb
sub
push
pop
jmp
pop
sub
adc
sti
jle
loopne
les
lds
mov
stos
mov
int
mov
rolb
mov
mov
in
inc
in
xchg
aam
into
jmp
xor
fidivs
adc
xchg
inc
jns
jne
aam
mov
jae
fbstp
sub
pop
sub
imul
imul
inc
mov
mov
push
pop
bound
fstl
outsb
ds
insl
enter
andl
mov
enter
hlt
out
adc
sarl
push
jo
xchg
ljmp
mov
aas
jmp
imul
inc
dec
mov
in
icebp
cmpl
movsb
test
add
lea
and
imull
adc
ffree
mov
mov
pop
xlat
jmp
push
adc
jne
jb
xchg
sub
inc
cmp
scas
mov
sub
jp
fcomps
mov
arpl
sbb
push
mov
cld
aam
sbb
push
cmc
leave
out
mov
dec
inc
mov
sti
or
in
cmp
shl
mov
ret
pop
mov
movsb
adc
inc
scas
cmp
push
dec
cmp
cwtl
adc
imul
in
jns
adc
mov
std
lret
cmp
cmp
push
int
enter
out
lahf
bound
sbb
pop
or
inc
mov
inc
pop
lret
and
imul
sbb
mov
out
dec
inc
outsl
mov
cs
xchg
add
sub
ja
push
add
lods
lret
lock
inc
cmp
xor
sub
sub
fstl
sub
mov
jg
xchg
and
fdivp
loopne
iret
xlat
mov
push
nop
pushf
cmp
outsb
push
sbb
loopne
jb
pop
sub
std
xchg
imul
or
cltd
fcmove
xor
rorb
outsb
sbb
repz
ret
cwtl
shrb
sub
arpl
mov
imul
fsubr
test
mov
and
movsb
popa
inc
aaa
push
imul
leave
loope
mov
or
dec
fiaddl
cmp
aam
inc
jle
push
stc
mov
stos
nop
shlb
and
int3
mov
add
shlb
idiv
jb
aaa
mov
lods
or
pop
mov
push
mov
ret
cmc
jo
jl
test
sti
and
or
fcmovne
xchg
in
add
je
dec
test
test
in
mov
flds
sahf
adc
call
pop
incb
xor
roll
faddl
pop
iret
mov
mov
shr
xchg
mov
rcrb
mov
loop
mov
dec
adc
filds
and
push
cmp
inc
lods
imul
test
arpl
lock
xchg
xchg
push
jnp
mov
addr16
jge
out
out
std
dec
stos
or
std
leave
test
sub
sub
fsubrl
or
dec
mov
aaa
sti
sub
leave
fs
push
stos
cmp
das
push
mov
jmp
into
and
shrb
jns
popa
pop
js
mov
xchg
js
cmc
mov
inc
cltd
push
lea
repnz
fs
push
fcmovnu
and
cmpsl
sub
jle
adc
jle
pop
jp
clc
test
shrl
cmp
lods
scas
dec
jl
jge
data16
sub
nop
mov
ds
xchg
sbb
push
push
in
loope
xchg
rcrb
enter
jb
xor
out
xor
xor
iret
jl
or
ret
pushf
aad
xchg
movsb
sub
popf
cmp
out
fs
pusha
adc
test
jne
mov
and
sbb
test
les
pop
add
out
ret
xchg
jns
inc
add
clc
push
add
shl
lret
jbe
sbb
mov
xchg
imul
jg
cltd
adc
inc
sub
and
loop
sbb
pusha
jnp
icebp
xor
lret
stos
dec
fwait
lds
daa
jae
mov
sbb
adc
push
out
xchg
lahf
icebp
ret
push
jp
pop
xchg
or
mov
xchg
int
xchg
push
loop
jae
out
push
push
cmpsb
jmp
nop
mov
lahf
xor
data16
movzbl
pusha
mov
pop
ds
mov
pop
out
fwait
or
push
mov
int3
mov
dec
cld
mov
add
sub
jae
imul
shlb
adc
xor
dec
xor
cmp
xor
push
adc
mov
xchg
mov
movsl
test
mov
cmpsl
popa
enter
sbb
popf
nop
xchg
or
aas
xor
mov
cwtl
ss
ljmp
xor
adc
jecxz
call
push
fidivs
pop
mov
stc
mov
sbb
push
pop
fst
sti
movsb
push
push
or
loop
scas
stos
dec
jnp
outsb
int
xchg
les
sub
fsubr
pusha
aam
sti
mov
test
pop
xchg
push
shrl
jae
stos
pop
adc
mov
mov
daa
je
push
testl
gs
fisubrl
sahf
in
ret
jno
scas
xchg
xchg
jb
mov
cmp
loop
pop
sahf
or
leave
mov
daa
inc
pop
jmp
rcll
pusha
cli
mov
mov
pop
stos
out
xchg
pop
pop
andb
test
stos
test
arpl
pop
pushf
insl
jb
std
leave
imul
add
pusha
adc
inc
sbb
mov
lods
imulb
xor
and
fcomps
jbe
sbb
pusha
ljmp
stos
adc
add
sarb
xor
cmp
jne
jecxz
sbb
jae
dec
test
loopne
scas
repz
repnz
rorb
xchg
hlt
push
clc
or
add
int
hlt
ljmp
xor
imul
sbb
adc
mov
and
cmc
add
dec
insl
pop
insl
pop
fmuls
xor
outsb
xchg
inc
jb
fistpl
mov
mov
mov
cli
add
mov
push
sub
cs
ljmp
cmp
sarb
or
jge
adc
out
add
out
insl
loop
cld
inc
pop
cld
aam
jnp
xor
fyl2x
mov
test
fildll
mov
jmp
aad
sbb
add
pop
xchg
xchg
aas
xor
xchg
or
rcrb
test
in
in
fcmove
jb
ret
frstor
ja
insb
cli
les
mov
shlb
lcall
loope
lahf
fmuls
mov
inc
pop
rorl
dec
pop
jbe
lds
mov
add
xor
pop
jbe
and
push
add
add
rcr
imul
xor
js
and
xor
pop
sub
sbb
js
cmp
xor
mov
testb
add
mov
mov
dec
inc
lods
lret
call
push
pop
or
adc
lret
push
pushf
and
jmp
or
jp
pop
and
push
lahf
xchg
adc
inc
in
xor
ret
sahf
or
scas
pop
cmp
ret
xor
outsb
push
push
adc
aas
in
sbb
out
fs
cmp
jne
or
ljmp
rclb
sub
dec
fs
jp
jge
dec
sub
pop
dec
pop
push
pop
mov
and
inc
dec
mov
fnstsw
pop
mov
test
xchg
pop
imul
inc
push
adc
mov
lods
in
fucomip
outsl
fmull
std
pop
mov
jg
stc
test
or
push
inc
xor
test
mov
mov
pop
jg
mov
arpl
in
jmp
cmp
js
in
fs
dec
xchg
push
incl
or
inc
hlt
addl
and
in
jb
out
xchg
jne
mov
dec
xchg
mov
test
and
xchg
in
shlb
xchg
mov
jns
mov
lods
xchg
test
leave
cmp
jl
dec
adc
js
sbb
or
lds
add
sarb
jae
leave
push
cmp
xchg
pop
mov
mov
dec
mov
sbb
push
cli
xchg
fistpl
loopne
es
aam
ss
in
js
int3
outsl
xor
cli
pop
jmp
and
enter
pop
out
lods
subl
ja
add
jmp
xor
subb
clc
cmc
shrb
and
dec
dec
sbb
push
inc
mov
call
mov
out
jmp
pop
lcall
call
aas
and
daa
jp
out
ja
cmp
push
add
push
je
daa
xor
out
negb
mov
cltd
jle
pop
push
sbb
int
std
mov
mov
sbb
sub
push
lret
movsb
xchg
popa
js
ficoms
cli
mov
aaa
cmp
inc
dec
in
adc
jo
out
in
or
fsubrp
adc
mov
repnz
divb
test
mov
mov
mov
sbb
and
inc
addr16
lahf
and
fsubl
pop
sbb
xchg
lahf
enter
sbb
adc
mov
push
xchg
jns
mov
jae
dec
faddl
cld
aam
inc
or
mov
out
sub
jno
lret
ja
jmp
adc
or
andl
pop
sbb
imul
cmp
std
ljmp
imul
push
inc
ror
add
shrl
push
mov
fwait
repnz
repnz
pop
ljmp
or
repnz
test
and
test
ficoms
mov
ret
out
cltd
hlt
cmc
mov
cmp
shll
or
mov
mov
bound
add
xor
mov
div
hlt
in
pushf
pop
jae
xlat
mov
lods
call
aas
sahf
push
jp
push
xchg
repz
cmpsl
movl
sbb
and
subb
sbb
sub
cmp
jle
cmp
push
imul
aas
mov
jl
push
out
pop
jmp
je
and
orb
nop
test
insl
sbb
int
push
fucom
lahf
push
jmp
xchg
daa
jecxz
lods
mov
es
push
aad
xchg
roll
popa
daa
mov
stc
hlt
jno
push
lahf
sub
je
outsl
bound
ret
add
cmp
mov
pushf
mov
aaa
pop
data16
scas
cmc
idivb
cltd
jle
cmp
ss
fistpl
lock
jp
lret
rcrb
pop
sbb
hlt
subb
cmp
mov
mov
or
xchg
cwtl
sub
jl
fwait
out
lret
fst
xlat
mov
in
xchg
pop
scas
rorl
cmp
jecxz
popa
and
out
pop
fidivs
sbb
stc
movsb
push
dec
mov
sbb
mov
and
daa
xchg
pop
mov
add
jno
or
loopne
inc
pop
xor
and
test
cmp
data16
sub
cs
loope
sbb
gs
inc
mov
or
push
notl
inc
roll
push
js
inc
xor
pop
test
stos
pusha
cmc
test
jns
mov
inc
jne
pop
inc
mov
dec
scas
fldl
and
add
lods
lahf
outsl
push
sbb
shll
mov
and
jp
nop
sbb
scas
dec
jle
stos
sbb
xor
xor
cs
dec
stc
popa
sub
rol
jo
sub
sahf
pop
adc
mov
cltd
push
movsl
ret
negl
mov
push
inc
repz
mov
jbe
aad
and
mov
fistl
mov
popa
dec
add
push
mov
test
rcrl
imul
divl
xchg
movsb
fsubs
xchg
sbb
mov
xor
sub
lahf
jae
push
ss
cmp
mov
pop
hlt
mov
dec
call
fcomps
in
es
dec
sub
stos
mov
imul
mov
addb
xchg
outsl
lods
rcl
roll
ret
lret
sbb
repnz
movsb
dec
iret
mov
test
testl
or
jae
dec
gs
mov
shlb
cmp
or
gs
jmp
stos
jne
test
sbb
mov
cld
mov
mov
fisttps
out
mov
and
ja
add
rclb
pop
cmpsl
mov
cltd
cmp
dec
pop
adc
into
mov
in
aaa
into
jnp
or
cmp
pinsrw
out
ljmp
mov
and
das
aas
loopne
push
adc
or
pop
push
insb
mov
xor
inc
jns
xor
push
pop
lock
cmp
stos
pop
sub
pushl
andb
addr16
xchg
addr16
push
xor
scas
pop
lret
fists
mov
adc
lock
adc
lret
dec
repnz
ljmp
lahf
sti
fistl
aad
repz
cmp
int
fldenv
lret
pusha
out
adc
add
jmp
push
scas
out
xchg
lock
shrl
imul
movsb
repz
cld
lcall
jne
sbb
pop
dec
cmpsb
xchg
push
out
xchg
into
movsl
repnz
add
jno
pop
insl
lods
std
cmp
sbb
cltd
sub
dec
pop
xor
cmp
mov
inc
cwtl
mov
data16
jns
jmp
rclb
idiv
scas
adc
mov
and
fstl
pop
mov
repz
fsubrs
xchg
fisubs
leave
fdivrs
xchg
inc
sbb
aas
xor
xor
adc
mov
jl
lcall
pop
cwtl
pop
xor
jb
jbe
dec
inc
aad
sahf
mov
mov
jnp
add
pop
adc
mov
pop
jmp
cmpsb
fiaddl
sub
dec
and
or
icebp
add
jl
xor
rclb
insb
sbb
push
and
push
and
inc
sbb
test
outsl
out
popa
jns
jne
out
outsl
pop
cmp
in
fsubl
sbb
and
add
pop
mov
cmp
inc
xor
fsubrs
or
xor
lcall
jecxz
aas
out
fiadds
xchg
dec
mov
mov
test
mov
xchg
lock
fs
mov
into
mov
xchg
movsl
in
jbe
cmp
mov
stos
cs
xchg
repz
loopne
mov
outsl
les
dec
testl
jmp
cltd
xor
rcrl
mov
mov
out
inc
sbb
adc
inc
or
movsl
add
pop
lds
test
cmc
and
aad
xor
test
outsl
push
inc
or
nop
xchg
imul
in
fwait
sub
xor
loopne
shll
loope
and
imul
data16
mov
cmpsl
xor
lods
incb
repnz
mov
mov
cld
cltd
adc
js
cli
cwtl
outsl
rcrl
pop
lods
rcll
out
jne
sti
pop
fdivs
mov
test
outsl
add
cmc
pop
scas
push
nop
cwtl
out
push
dec
xchg
mov
int3
push
roll
xor
dec
xchg
fnstsw
bound
push
push
out
and
in
out
ja
adc
stos
mov
mov
mov
mov
mov
pop
inc
cmpsl
clc
mov
loop
cmpsb
fisubrl
lock
and
ret
mov
in
cmp
sbb
push
cs
in
ret
test
test
clc
adc
jns
dec
mov
xor
mov
sub
ss
xchg
fistps
sub
mov
daa
es
test
sub
lock
scas
rorb
mov
mov
and
sarl
ret
push
test
push
sub
and
jb
add
push
jmp
xor
xor
decl
xchg
xchg
jecxz
dec
mov
das
aad
mov
stos
lcall
jl
push
movsl
mov
xlat
loopne
rorb
loop
in
push
outsl
les
jno
mov
stos
cltd
bound
jnp
fisttps
push
mov
cmpsl
xlat
fiadds
lods
data16
jl
into
add
aad
clc
gs
mov
jp
fs
fyl2xp1
or
cwtl
xor
mov
sahf
sahf
mov
testb
sbb
pop
add
xchg
aaa
fistpl
xchg
jmp
adc
inc
loope
aas
mov
push
cwtl
push
mov
xchg
gs
sub
push
ret
out
mov
xchg
inc
popf
sub
mov
or
mov
das
push
cmpsl
rcll
mov
ret
push
xchg
call
mov
jl
mov
iret
xor
xlat
add
nop
mov
xor
cmpb
jge
xor
xor
out
int
call
fs
scas
in
cmpsb
int
or
ss
push
rcr
movsb
xor
push
scas
lods
mov
sbb
gs
push
mov
push
mov
jl
fildll
mov
adc
cmpsb
insl
adc
pop
add
mov
push
jg
mov
inc
xor
push
push
shrb
bsr
sbb
add
jp
ret
xor
xor
ja
adc
and
outsb
fnstcw
aam
xchg
fildll
sbb
xchg
sbb
jne
loope
pusha
mov
dec
xchg
push
cmpsb
push
stc
add
das
mov
in
xor
repnz
cmp
xchg
mov
push
inc
movsb
fistl
jns
push
ljmp
or
cmc
and
inc
and
sbb
mov
sti
in
cltd
mov
aaa
sahf
in
jge
mov
inc
dec
adc
dec
mov
stc
or
jb
fidivrl
inc
or
mov
dec
add
insl
rcrl
imul
inc
adc
mov
jne
cmpsl
cltd
push
outsl
push
xchg
mov
jnp
divl
jg
sbb
push
jecxz
addr16
fcom
jl
xlat
popa
and
fimuls
pop
in
mov
mov
and
dec
push
xor
add
lods
xlat
int
and
sarb
stc
fcoms
enter
bound
cs
inc
std
jmp
push
mov
jecxz
pop
dec
xor
mov
mov
sbb
or
sub
sub
push
cld
addr16
sub
js
dec
into
mov
rol
xchg
aad
pop
mov
inc
daa
sub
mov
mov
lret
sub
clc
xchg
jg
dec
pop
mov
insb
or
xchg
lods
mov
inc
xor
or
cmp
mov
push
mov
push
sub
cmp
repz
pushl
dec
dec
xchg
aas
mov
push
lea
add
ja
lcall
mov
andnps
dec
in
mov
nop
aam
sub
hlt
push
lock
pop
pusha
je
fnstcw
shl
outsl
dec
jge
jmp
je
adc
pop
xchg
scas
push
adc
popa
outsb
inc
jae
dec
fstps
xor
sub
jnp
push
xor
cmp
lcall
xchg
int
shll
ljmp
int
cwtl
mov
xchg
addr16
xor
rcl
push
and
mov
push
scas
inc
popl
in
insb
jg
mov
jb
lcall
push
roll
cmc
mov
sbb
push
aam
das
jnp
je
xchg
or
push
mov
xchg
mov
into
out
add
jbe
mov
or
imul
gs
faddp
xchg
mov
cltd
addl
shll
hlt
jecxz
outsb
xorl
inc
inc
sbb
adc
lods
imul
not
enter
sub
or
fwait
jae
lret
fs
mov
lcall
insb
ss
cmpsb
lret
call
mov
fadds
lcall
sub
adc
enter
out
test
or
cmp
pop
mov
sub
out
sbb
jmp
xor
adc
negb
daa
es
pop
mov
mov
insl
ja
pop
cltd
je
aas
xchg
into
push
jmp
xor
jp
xor
inc
jno
cmpsl
incl
and
sub
mov
mov
pop
jns
lret
adc
jb
or
cmp
mov
inc
cmp
call
jne
xor
dec
mov
mov
insl
gs
xlat
xor
hlt
pop
cmp
push
lret
lret
repz
jecxz
fimuls
pop
lahf
jle
push
clc
lds
add
fwait
xor
ja
mov
aaa
inc
imul
xchg
xchg
lods
mov
xchg
lock
es
cltd
mov
shrl
mov
ss
add
pop
inc
dec
cmp
not
andb
inc
pop
call
mov
sti
les
push
fisttpl
stos
loop
es
les
rorl
inc
push
push
dec
jl
pop
xchg
ds
ss
and
loope
jecxz
orb
jnp
into
mov
xchg
sahf
xor
and
data16
cmp
push
popf
loope
sbb
andb
sub
dec
add
adc
or
rcrb
movsl
and
mov
sbb
pop
and
pushf
mov
jl
out
xlat
sub
enter
xor
xchg
cmp
mov
inc
roll
imul
shrl
lret
and
ss
cmp
fucomi
adc
dec
arpl
dec
test
mov
imul
push
dec
test
push
or
jecxz
iret
aam
add
mov
xchg
and
inc
out
xchg
xor
lret
cmp
pop
jl
or
cmpsb
out
les
push
ret
insl
into
out
int
mov
es
cmp
stos
cmpsb
cmp
cmp
imul
test
mov
mov
xchg
xor
ja
pushf
or
add
pop
jmp
scas
pop
mov
xlat
movsb
aaa
cld
sbb
mov
push
or
xchg
sahf
sbb
push
imul
xchg
dec
jg
loope
jno
xorl
rorl
xchg
mov
push
mov
inc
lret
mov
aam
aas
sub
sbb
jp
sarl
test
lcall
pop
mov
sbb
into
jg
ss
or
rolw
jo
mov
in
dec
inc
xchg
lock
loop
and
loopne
frstor
sti
add
push
fdivl
mov
int
push
jno
aas
push
loop
xchg
out
mov
jg
js
mov
test
adc
and
push
sbb
add
dec
and
aam
mov
dec
idivb
ret
mov
jge
sbb
clc
bound
xor
pop
bound
movsl
cs
sbb
cld
sbb
loopne
sbb
fnstenv
fists
sahf
dec
test
lods
aad
push
les
in
inc
in
inc
arpl
jne
sahf
rolb
movsl
lods
adc
sbb
popa
insl
mov
mov
test
push
popa
lods
inc
insl
xor
mov
lods
dec
sub
dec
mov
xchg
cmp
stc
fistpll
data16
jp
ds
stos
add
xchg
cmp
adc
sbb
adc
dec
lret
add
pop
repnz
sub
lods
cwtl
jmp
inc
sub
jno
or
scas
sub
loopne
lret
add
ss
cltd
sti
fsubrp
cmp
leave
mov
cld
dec
out
iret
xchg
adc
dec
and
mov
fstpl
addr16
es
pop
and
lcall
js
adcl
rorb
jecxz
popa
mov
dec
pop
nop
jmp
in
jp
jo
sub
sbb
jg
std
mov
or
sbb
mov
ss
es
fucomip
adc
iret
test
inc
inc
adc
dec
mov
mov
xchg
and
bnd
sar
pop
dec
sbb
lds
sub
gs
cmp
fmuls
xchg
call
push
arpl
in
jns
adc
xchg
jbe
cs
cld
ja
or
xchg
pop
rorw
into
sub
or
sub
fsts
mov
mov
fs
daa
fs
fs
shrl
xchg
cmp
imul
mov
and
psrlw
cmp
push
enter
arpl
push
xchg
xor
push
xchg
push
xchg
jns
jmp
cmp
pop
mov
or
gs
shlb
cmp
lret
jg
xchg
mov
dec
mov
shll
cmpl
mov
in
test
cltd
or
rcrb
aas
mov
jb
push
or
repnz
inc
cmpsb
imul
push
testb
or
cmp
push
push
and
clc
das
lock
mov
inc
push
les
sub
sub
adc
jge
and
or
pop
or
jle
mov
addr16
push
add
pop
and
jecxz
sub
sub
push
pop
cmc
push
pop
lods
jns
mov
adc
lods
ljmp
loop
notb
xor
cmp
mov
xacquire
iret
jg
or
aad
and
inc
push
dec
inc
inc
xor
and
inc
and
push
dec
push
dec
pop
pop
cmp
sub
aaa
xor
cmp
xor
push
imul
dec
inc
push
dec
push
inc
inc
and
mov
les
sub
stos
mov
fcomps
mov
adc
cmp
pop
lret
pop
and
xor
mov
mov
loop
lods
unpckhps
outsl
mov
adc
mov
je
jmp
cmp
ja
cmc
sahf
push
xchg
fcoml
dec
mov
loope
mov
sar
lahf
sub
into
sbb
and
xor
outsl
lock
pushf
or
stc
adc
sbbb
dec
stos
dec
cmc
mov
enter
mov
inc
aad
roll
fadds
icebp
push
push
cmpl
adc
push
por
mulb
cmpsb
pop
push
scas
div
xchg
ja
jmp
repz
mov
gs
sub
xchg
adc
cld
sbb
adc
test
pop
lahf
jge
cs
shlb
mov
and
inc
jmp
mov
popa
xlat
daa
stos
jp
adc
lea
sub
jnp
mov
in
jns
out
ficomps
mov
mov
push
shrb
pop
mov
pavgw
sbb
pop
cmpsb
imul
inc
stc
int
inc
outsb
repz
pop
call
sub
repnz
sbb
jecxz
fwait
or
push
scas
in
cmpb
mov
mov
pop
ret
adc
mov
and
shlb
fildll
in
inc
leave
mov
cwtl
push
enter
std
and
adc
xchg
xchg
iret
fsubr
dec
repz
in
mov
sbb
jp
inc
xor
insl
push
ret
add
daa
jns
aad
ja
daa
fldenv
pop
lahf
adcb
loope
jge
dec
daa
es
xor
shll
or
ror
pop
sub
push
or
stos
jae
repnz
xor
adc
inc
or
sub
aam
sub
in
or
cmp
test
add
cli
or
jne
lods
push
fisubrs
cmpb
xor
jmp
and
aad
push
or
jb
mov
lret
sbb
mov
enter
jno
stos
xchg
aaa
lds
sub
xchg
stc
fadd
std
and
mov
mov
iret
cmpsl
les
jl
push
dec
gs
jp
cmp
in
dec
jnp
stos
icebp
or
insb
fucom
stc
pop
pop
fsubl
sbbb
insl
sbb
cld
repnz
cmp
cs
les
xchg
add
push
or
mov
sahf
push
ds
icebp
jp
add
mov
push
mov
bound
arpl
daa
pop
pop
inc
test
xchg
jno
mov
out
rolb
sub
hlt
repz
mov
loopne
out
imul
pop
rcr
xor
imul
cmp
inc
sub
nop
inc
inc
js
jo
dec
sahf
cmp
xchg
out
mov
inc
ret
xchg
test
mov
pop
stc
lcall
sub
les
sahf
sti
out
out
sbb
in
xchg
push
mov
jl
xchg
xchg
es
dec
dec
out
cld
pop
ja
dec
mov
mov
xchg
mov
pop
dec
push
sub
std
dec
mov
in
sbb
sar
addr16
test
lahf
sahf
jl
mov
jne
jnp
inc
mov
shlb
loope
ret
mov
adc
push
jnp
enter
or
and
push
fcompl
movl
shll
inc
pop
jge
cmc
subl
sub
loope
mov
jge
aam
xlat
bound
into
sbb
arpl
pop
test
int
cmp
mov
jb
mov
pop
mov
or
sbb
cmp
dec
sub
inc
pushf
xchg
dec
clc
mov
cwtl
lods
pusha
dec
rcll
lahf
mov
inc
fisttpl
lret
jle
lods
std
ja
in
xor
fdivp
lret
mov
ffree
inc
push
xor
mov
imul
fcoml
mov
outsl
add
rorl
lahf
jl
xor
fneni(8087
out
icebp
or
and
sbb
call
mov
and
push
cmp
jno
jne
leave
stos
inc
addw
lds
jecxz
hlt
cmp
sub
div
jae
bound
sbb
mov
es
sub
and
insb
rolb
shlb
jmp
hlt
test
rcr
or
mov
jo
pop
out
or
mov
sbb
mov
rorb
enter
add
push
rcr
fisttpll
add
shrb
xchg
fdivrl
iret
pushf
outsl
ss
scas
outsb
or
ds
mov
add
imul
add
xchg
jno
xchg
mull
popa
cmp
iret
sub
sub
pushf
out
xchg
dec
je
insb
fistps
stc
sub
daa
and
mov
sub
cmp
inc
and
out
out
pop
dec
mov
push
inc
rcrb
cld
adc
std
push
std
xchg
lret
shl
scas
pushf
out
dec
xor
pop
add
jae
and
mov
aas
cld
negb
sahf
xchg
sub
fucomip
mov
jle
fnstsw
push
test
xchg
enter
idivl
loop
push
mov
mov
jl
call
xchg
sub
jae
adc
cltd
frstor
mov
mov
popf
mov
dec
adc
subl
sub
pop
or
mov
push
inc
pop
imul
outsb
push
cmp
cmp
or
lock
cmp
mov
xor
lods
and
imul
xor
adc
cmp
enter
inc
xor
xlat
lods
xlat
testl
bound
fdivrs
and
test
fwait
jb
in
movq
xchg
sub
sbb
pop
rolb
sub
mov
and
cwtl
lea
es
inc
pop
sub
xor
inc
pop
push
andb
dec
jecxz
pop
mov
inc
fdivrs
and
rep
xchg
addr16
insl
pop
xlat
int
test
sub
add
sub
incb
scas
outsb
sbb
dec
mov
popf
in
mov
test
push
jmp
mov
insb
pushf
aaa
mov
mov
pop
loop
mov
int
cwtl
pop
rcrb
jbe
push
das
mov
movsb
dec
mov
push
add
and
xchg
std
sbb
fdivrp
dec
fsubrl
mov
call
mov
pop
cmc
add
push
pop
popf
lret
inc
stos
jg
pop
outsb
aaa
add
jne
ret
repnz
pop
and
out
add
loopne
jae
add
jmp
loopne
mov
cmpsl
repnz
pop
stos
mov
fcomp
xchg
ss
leave
pop
push
lretw
jnp
pop
popl
pop
push
mov
int3
js
out
movsl
mov
mov
stc
pop
mov
idivl
pop
fists
sub
cltd
pop
cmp
lret
test
popa
movsl
and
js
cltd
xchg
pop
inc
loope
jmp
jge
ss
lret
mov
movsb
and
mov
push
int3
jge
mov
test
insb
outsb
pop
lds
sub
push
push
loope
adc
movsb
pop
lea
push
mov
mov
mov
mov
loope
xchg
xchg
push
dec
xchg
fdivl
push
push
mov
in
lds
gs
jns
or
movsl
jnp
inc
lcall
mov
int
sti
or
imul
stos
mov
sahf
sbb
or
xchg
adc
add
fdivrs
inc
dec
sbb
in
inc
lods
pop
scas
call
jecxz
ljmp
dec
dec
mov
pop
ds
lods
lret
and
and
test
lock
sbb
fsubl
push
call
mov
sub
inc
push
sub
cld
sbb
das
bound
icebp
aad
int3
andb
mov
add
add
jae
ljmp
jb
lcall
ss
cmp
pop
jle
bound
mov
adc
pop
sbb
rcr
dec
add
pop
xchg
adc
xorb
fucomp
cmpsl
je
cltd
into
int
inc
ljmp
mov
push
lcall
mov
and
repnz
or
jmp
div
mov
repz
jbe
ficompl
inc
jae
inc
das
mov
mov
xchg
stos
int
xor
outsl
repz
stc
xchg
mov
push
mov
cld
xchg
fistpll
leave
or
pop
add
xor
data16
inc
rcr
sub
mov
inc
sub
push
add
inc
adc
in
mov
je
pop
dec
mov
in
xor
inc
fidivl
fisttps
dec
das
xchg
xchg
mov
and
xchg
lahf
dec
xchg
dec
daa
mov
pop
inc
ds
in
jg
mov
push
dec
rclb
inc
imul
ficoms
and
lock
and
inc
shll
pop
mull
dec
jae
xchg
test
popa
stc
rclb
rclb
loopne
rcl
dec
ljmp
xor
push
pop
ffreep
repz
sub
lods
pop
adc
out
inc
std
test
repnz
or
ds
mov
lods
sbb
pop
mov
mov
jb
adc
je
loop
bound
jmp
scas
push
data16
push
jne
insb
test
imul
ret
cmpsl
das
int3
pop
mov
xchg
or
sbb
dec
fistl
sub
pushf
jbe
add
frstor
jae
jge
sub
cltd
or
push
jp
cs
inc
hlt
or
movsb
inc
fdivl
adc
out
call
popa
gs
test
lods
stos
pushf
ret
inc
imul
stc
mov
dec
cmp
adc
xlat
mov
shll
xchg
add
rolb
pop
lahf
or
mov
xchg
lret
in
addr16
xor
xor
jnp
in
mov
in
in
insb
ss
push
adc
insb
repnz
daa
push
inc
aas
pusha
cmp
enter
and
loope
jnp
in
lcall
push
or
inc
callw
and
mov
stos
cmp
sti
xchg
cwtl
push
imul
add
cwtl
cli
or
in
pop
xchg
cmc
pop
adc
xlat
sub
lock
xor
mov
roll
sub
jno
mov
sub
das
fists
insb
dec
sbb
push
fiaddl
lret
mov
mov
xchg
idivl
add
jae
and
jb
xorl
mov
dec
and
dec
test
and
fwait
cwtl
push
sub
ret
fs
xchg
push
inc
lret
imul
sbb
dec
mov
insl
push
hlt
jp
fisttpl
jnp
lret
jp
subb
inc
xchg
test
push
rcrb
and
push
adc
in
pop
rorl
sbb
pop
jnp
insb
push
xlat
out
dec
das
stos
push
add
dec
fistpll
out
addr16
mov
mov
fisttpll
sub
sub
sbb
jle
sub
movsl
cs
xchg
inc
shll
or
dec
aaa
pop
aaa
or
repnz
jnp
sbb
cli
xchg
lods
fcomps
fimuls
imul
jbe
xchg
icebp
int
sub
or
call
cmpsl
shrb
lods
push
and
cmpsb
mov
sub
and
call
out
push
jle
shrb
insb
imul
jmp
inc
jg
pop
adc
xchg
out
ret
jmp
faddl
lret
lahf
mov
clc
ret
mov
push
shrb
mov
or
mov
fsubrl
lret
xor
jle
pop
jb
rorb
push
jmp
dec
lods
test
sbb
fmul
lods
mov
dec
and
xor
sbb
ljmp
imul
test
mov
mov
ret
pop
in
xor
and
scas
sbb
sahf
cmp
cmp
test
or
shll
fistl
pop
enter
sub
push
xchg
or
mov
xchg
pop
subl
mov
push
in
scas
fcmovnu
inc
xchg
insl
icebp
nop
jne
sub
ja
add
scas
xchg
cmp
lret
inc
mov
cmpb
cmc
pop
mov
mov
cli
dec
in
cmpl
xchg
or
mov
mov
stc
dec
jmp
les
cmc
fisubs
cwtl
pop
sbb
xchg
push
dec
pop
jl
outsl
pop
mov
repnz
pop
or
xor
leave
adc
nop
sahf
inc
repz
add
call
fwait
es
jo
subb
push
mov
cmp
inc
leave
das
sti
cmp
push
add
mov
push
and
mov
push
clc
lret
xor
sub
cmp
mov
cltd
add
xor
xchg
jns
push
mov
nop
repz
fstps
test
and
or
inc
jg
inc
or
iret
mov
inc
push
in
out
fistpll
aaa
and
jecxz
mov
pop
aas
aam
dec
xlat
mov
xor
scas
adc
push
js
nop
dec
pusha
in
test
or
mov
push
lods
xor
and
pusha
add
cld
dec
out
xchg
mov
iret
sbb
in
inc
jl
lods
sub
mov
shll
xor
inc
mov
daa
pop
addl
je
or
imul
xor
push
and
push
mov
and
jg
dec
xor
je
xor
sub
mull
and
push
es
pop
pop
push
xchg
adc
roll
mov
mov
sbb
inc
jne
add
cmp
push
out
in
jae
adc
icebp
shll
xchg
inc
pop
push
pop
xor
pushf
mov
mov
sbb
xchg
shl
fsubrl
dec
dec
outsl
jb
adc
dec
lret
test
outsl
sbb
mov
ds
jnp
fiaddl
adc
sahf
xchg
pop
pop
lock
inc
push
pushf
lret
insb
mov
lret
hlt
jp
aas
inc
or
ret
pop
lods
insl
ret
cmp
pop
push
pop
push
je
mov
cmp
or
or
mov
add
out
mov
add
cmp
add
cltd
xchg
addr16
xlat
test
xlat
pusha
mov
or
mov
imul
loop
pop
pop
cmc
inc
push
movntq
mov
add
or
in
mov
dec
push
jge
idiv
inc
mov
stos
pusha
cmp
ja
sbb
inc
fisttpll
int
and
dec
pop
mov
mov
jne
mov
jns
xor
adc
pop
and
lret
rol
add
mov
imul
dec
into
cmp
add
pop
sub
add
cs
test
or
test
stos
xchg
push
push
pop
inc
ret
daa
cmpsl
fs
add
push
sarl
sbb
imul
and
out
cld
dec
xchg
dec
call
sbb
xlat
ret
xchg
das
jae
lods
pop
add
push
mov
xor
inc
test
xchg
sub
mov
addb
mov
add
andb
cwtl
stc
pop
xchg
mov
fwait
mov
fmuls
adc
pop
inc
or
sbb
lret
hlt
add
aaa
in
jb
fsqrt
mov
jl
lahf
cltd
rcrl
iret
add
movsl
push
cmpsl
mov
aas
mov
add
cmp
arpl
adc
into
ljmp
movsb
div
xor
out
cmpsl
cmpsb
jmp
sbb
dec
clc
js
rcll
mov
or
clc
sti
inc
in
pop
jnp
mov
jecxz
fcmovbe
enter
and
and
fsubr
dec
dec
inc
inc
cld
cltd
and
xchg
push
push
in
jb
loopne
loopne
dec
mov
xchg
push
or
aaa
push
or
imul
adc
xor
push
cmc
rcr
int3
and
mov
and
sbbb
adc
das
add
mov
ficomps
cmpsl
sub
mov
mov
pop
cmp
push
sbb
pop
jo
nop
pop
push
test
sbb
addr16
adc
add
jp
cmp
cmpsl
ret
or
lds
ficomps
test
adc
sub
xchg
fsubr
mov
xchg
fs
hlt
pop
mov
adc
stos
sbb
movsb
cmpb
and
pusha
jb
aas
mov
ja
or
and
inc
jne
mov
xchg
mov
mov
mov
or
mov
push
jb
arpl
xor
stos
scas
movsl
sub
and
into
jae
xchg
hlt
sbb
cmp
outsb
test
lahf
inc
xchg
stc
or
iret
push
rolb
push
call
mov
mov
insb
pushf
jno
push
mov
or
mov
dec
push
push
test
xor
loop
rcr
outsl
mov
sarl
push
push
xchg
mov
incb
scas
mov
adc
push
mov
xchg
push
mov
rcll
xchg
call
xlat
pusha
dec
jb
aam
xor
pop
mov
mov
iret
push
sbb
into
adc
orl
pop
sbb
icebp
pusha
stos
test
mov
in
mov
gs
mov
mov
inc
jecxz
push
dec
add
push
jmp
mov
or
aam
xchg
sbb
inc
cmp
xor
push
push
mov
pop
leave
pop
pushf
fwait
cmp
sub
mov
in
add
call
mov
test
xlat
xor
xchg
jmp
sbb
pusha
hlt
mov
mov
pusha
add
fidivrs
jo
mov
in
mov
cs
adc
inc
add
outsl
jp
or
movq
cmp
mov
fnstenv
add
decb
add
call
fadd
pop
iret
scas
rcrl
push
loopne
push
sub
das
add
pop
xchg
test
fs
stos
cmp
cmpsb
std
test
dec
mov
cmp
jmp
negl
fstp
dec
adc
fisubrl
js
mov
test
lcall
adc
and
pop
mov
mov
test
ret
jae
and
jb
sbb
inc
mov
pop
cmp
and
jbe
icebp
push
or
popf
sbbl
stos
xchg
mov
dec
jp
or
das
mov
jp
outsl
call
lds
int
add
inc
xchg
jle
sub
mov
std
mov
aas
add
frstor
fwait
xchg
jmp
sbb
xchg
cmp
jp
dec
inc
dec
push
cmpsb
mov
push
xor
loopne
and
jbe
mov
push
inc
popf
dec
sub
int
mov
scas
or
jp
xchg
in
mov
xchg
jle
cmpb
sub
incl
test
inc
pop
jge
mov
out
andb
aam
jbe
fmuls
and
js
dec
int
fs
jno
and
or
decl
fmull
and
mov
push
push
stc
jmp
mov
add
mov
lcall
jno
push
add
enter
pop
sahf
or
jmp
fcomip
xorl
movsb
dec
aaa
pop
push
xchg
das
out
icebp
out
sbb
and
into
push
imul
cmp
cmp
test
jmp
int
js
sti
bound
cmpsb
mov
sahf
adc
sbb
test
movsl
dec
sub
mov
pop
mov
xchg
shll
addr16
push
gs
add
inc
mov
push
daa
rorl
and
dec
les
cmp
mov
into
add
cltd
mov
xchg
je
lock
mov
testb
fidivrl
pop
icebp
push
int3
mov
pop
sbb
nop
xor
sbb
push
daa
sub
imul
cmpsl
mov
test
sarl
scas
lock
rolb
shrl
orb
jmp
fistl
mov
negl
test
xor
sub
mov
aas
lea
sbb
adc
gs
jae
ds
cwtl
jecxz
ss
out
dec
fisttps
adc
sub
pushf
xchg
mov
push
cs
fwait
push
lahf
outsl
cmp
xchg
adc
out
jo
mov
jge
fldt
decl
jns
adc
aaa
xchg
std
push
inc
in
int
out
stos
out
xor
ljmp
leave
sbb
popf
inc
xchg
xor
mov
and
mov
or
ss
lock
popa
insb
loop
and
rol
sbb
dec
add
dec
test
mov
cmp
ja
pop
xchg
cmp
mov
enter
add
shlb
push
sbb
xchg
cmp
outsb
or
sti
cmp
xchg
fs
lcall
mov
out
sbb
pop
int
sbb
or
insb
sub
fldenv
xchg
add
xchg
mov
les
test
push
jge
mov
mov
cld
mov
fdivs
shr
in
push
cmp
int3
ds
shlb
stos
jle
test
or
lock
scas
lock
xchg
cld
inc
es
lret
dec
pop
and
pushf
jmp
lds
out
xchg
xchg
jno
in
xchg
pop
outsl
out
mov
out
adc
movsl
rcr
cmp
adc
or
test
popa
xor
mov
cmp
mov
or
movsl
xchg
mov
cmp
add
inc
dec
mov
es
andb
mov
imul
out
popf
data16
cmpsb
lret
dec
test
wbinvd
sbbl
loope
les
push
out
lret
fwait
mov
sub
scas
adc
sbb
xlat
icebp
sub
jo
mov
push
ret
dec
and
hlt
xchg
popf
and
ret
cli
or
dec
int3
loope
inc
adc
ret
sbb
in
jo
ds
sti
ss
xchg
cmc
jmp
jg
mov
das
iret
or
cmp
or
push
inc
cmp
cmp
lcall
test
in
stc
imul
xorl
mov
mov
inc
aam
and
dec
xchg
jecxz
ss
out
cmp
cmp
xchg
lock
in
mov
lods
dec
les
sbb
popf
fnstenv
in
or
dec
mov
xor
pop
stc
push
pop
push
jae
call
inc
adc
inc
xor
popf
leave
in
mov
jmp
inc
sub
enter
xchg
jge
sbb
push
jg
enter
iret
dec
fcmovnbe
scas
sbb
push
or
sbb
sub
xor
mov
fistps
mov
pushf
imul
jg
fstpt
les
hlt
xchg
inc
ja
mov
push
sub
popa
push
adcb
enter
add
or
hlt
pop
inc
or
out
jne
mov
jne
fstpt
divl
cmpsl
sbb
dec
data16
jo
push
cmp
pop
pushf
sbb
test
pop
arpl
out
xchg
or
mov
push
test
ret
mov
pop
gs
aad
and
mov
jb
in
ret
push
stos
je
lods
lret
push
and
and
popf
mov
pop
mov
test
movsl
outsl
sti
mov
xor
andl
xchg
or
outsl
imul
aaa
jl
xchg
out
cmpsl
add
pop
out
in
data16
jg
leave
cld
test
arpl
mov
int
adc
ret
jnp
sub
jbe
dec
popa
divb
and
mov
daa
cmpsl
mov
shll
adcb
xchg
cmpsb
incb
mov
iret
push
cmpsb
dec
stos
test
xorb
xor
pop
popa
sub
ja
add
xchg
sahf
push
lock
std
sar
scas
movsl
adc
or
aaa
pop
jbe
dec
sub
adc
xor
jbe
daa
and
mov
ret
js
bound
int
pop
and
push
push
addr16
sub
jnp
or
or
push
setb
rcr
push
cs
or
adc
inc
sbb
mov
test
out
out
lcall
movsb
mov
adc
mov
repz
into
outsl
cmp
shl
add
stos
or
sbb
adc
jne
std
sub
dec
stc
sub
scas
stos
sub
dec
lret
add
pop
xchg
xor
rolb
cli
ret
int
cs
fisttps
imulb
repnz
imul
mov
mov
orb
das
nop
jnp
and
mov
push
jae
lds
inc
or
icebp
popf
arpl
inc
mov
cmp
pop
ficoms
lahf
inc
std
sbb
cmpsb
adcb
xchg
sbb
dec
nop
adc
or
cmpsb
jg
push
xchg
lock
jns
imulb
pushl
mov
test
mov
inc
nop
popa
sbb
mov
incl
popa
push
add
jno
hlt
adc
adc
sahf
fdivp
or
push
mov
fsubl
jne
xlat
lds
cmp
lds
cwtl
push
jle
loopne
inc
and
mov
in
daa
or
mov
push
adc
nop
xchg
adc
and
cld
dec
xor
popf
cmp
xor
outsb
jne
filds
inc
stos
adc
shrb
and
aaa
xor
sub
mov
and
repnz
mov
int
lsl
push
or
or
or
inc
or
lds
pop
or
scas
pop
sub
sbb
in
dec
cmp
or
dec
jns
push
dec
xchg
popf
mov
pcmpeqd
xor
imul
cmpl
sub
push
inc
repz
lret
roll
push
inc
fstpl
cmp
mov
xchg
aas
sub
imul
adc
mov
xor
sbbl
pusha
loopne
or
loope
jp
aam
call
fdivl
cld
adc
out
xor
fcoms
push
mov
or
push
daa
and
in
lock
ds
repz
insl
push
sbb
enter
pop
sbb
es
xchg
call
ljmp
int
sub
jge
jmp
cmpsb
mov
jae
pop
push
inc
sbb
call
sahf
cltd
call
push
and
push
out
orb
and
adc
sahf
push
push
jns
pop
mov
lcall
mov
or
decb
sub
movsb
push
cli
fists
into
cmpb
jecxz
and
xchg
addb
xor
mov
dec
lcall
cmp
inc
pop
fwait
mov
stos
add
push
test
inc
and
mov
or
lret
add
pop
outsb
arpl
fs
jecxz
pop
xor
adc
adc
aad
mov
or
jns
shrb
mov
test
xor
inc
pusha
lret
xor
xlat
ds
adc
push
inc
mov
aad
xchg
je
push
pop
inc
adc
gs
cmpsl
mov
mov
mov
je
fwait
movsl
iret
sbb
xchg
dec
std
adc
aam
aad
cwtl
adc
push
jmp
gs
cmp
pusha
push
rol
ja
add
or
iret
dec
jmp
xor
lret
fs
adcl
lods
adc
in
frstor
lods
mov
pop
xchg
icebp
in
and
cmp
aaa
lret
cmc
xchg
cmp
pop
jge
pusha
pusha
mov
outsb
icebp
mov
adcb
sub
xchg
stos
sub
push
mov
ret
repz
adc
mov
test
fucom
jnp
cltd
lret
mov
call
fstpt
aam
mov
push
insl
sarl
inc
push
xchg
loop
dec
movsb
std
lock
in
xor
mov
pop
lock
movsb
add
cmp
push
mov
lods
es
aas
inc
inc
ss
or
mov
mov
push
xchg
or
cli
out
push
scas
loop
test
pusha
mov
adc
and
out
scas
push
mov
pop
inc
inc
dec
and
fs
pmaxsw
push
es
scas
aas
das
mov
in
jnp
loope
xor
rorl
mov
adc
repnz
daa
adc
stc
rcll
pushf
lds
xchg
push
mov
dec
fs
cmp
cli
daa
sub
bound
dec
into
mov
dec
pop
loop
enter
cmp
mov
bound
jge
ss
fwait
lock
xchg
add
xor
in
xchg
mov
sbb
jl
push
or
mov
mov
xchg
mov
in
daa
mov
test
ret
adc
adc
sti
ret
arpl
pop
add
xchg
dec
xor
pop
sbb
adc
pop
icebp
aam
stos
lds
add
and
leave
scas
mov
repz
aad
test
inc
fldenv
scas
adc
add
icebp
stos
test
stc
sub
mov
sarl
jmp
aaa
lock
adc
push
pusha
xchg
test
fldl
add
lock
hlt
pop
loope
cld
xor
cwtl
sub
ds
out
xor
aad
addr16
mov
popf
repz
rcrl
jno
add
scas
scas
addl
andb
cmpsb
rorb
xor
xchg
jae
mov
xor
push
mov
sbb
fcom
fildl
movsl
in
pop
hlt
js
les
nop
mov
fucomi
sbb
loopne
mov
sbb
sbb
scas
dec
mov
sbb
push
shlb
stc
dec
mov
test
stc
fcompl
fstpt
dec
leave
xor
and
dec
ds
mov
xchg
imul
sbb
sbb
push
cmovl
xor
add
mov
cmp
mov
sub
daa
out
xchg
scas
fdivs
sbb
xor
mov
fistpl
std
in
sub
sub
sub
lcall
pop
cmp
stos
leave
lcall
sar
pop
mov
imul
mov
lahf
inc
fsubl
fisttpl
xor
lahf
dec
test
repnz
mov
jno
cltd
clc
push
mov
pushf
dec
jb
push
add
push
ret
enter
cmpsb
sub
sbb
mov
cmp
cmp
jns
push
call
ja
cs
or
enter
inc
mov
sahf
cmp
cmp
fistps
lret
es
adc
or
std
sti
test
ror
jg
dec
popa
data16
sbb
cmp
adc
mov
test
adc
adc
cwtl
ds
cmp
push
mov
jae
cmp
clc
sti
test
ror
iret
imul
xchg
sbb
pop
ret
sbbb
cmp
inc
push
stos
mov
nop
or
mov
in
sub
loopne
pushl
in
imul
sub
adc
fidivrl
arpl
xor
in
xchg
xor
sbbl
pop
stos
lods
pop
mov
icebp
repz
mov
and
ret
inc
xchg
je
cmp
and
or
mov
test
push
sub
int
cmpsb
pop
xchg
jl
addr16
shlb
mov
mov
jmp
sbb
decb
xorb
popf
out
push
pushf
stc
add
lock
das
lds
xchg
push
es
ror
push
aad
daa
xchg
sti
arpl
hlt
sarb
stos
inc
pusha
hlt
rclb
jmp
push
clc
ja
xor
call
mov
xor
mov
dec
sub
sbb
ss
mov
jo
in
or
cmp
jae
add
out
cmp
mov
cmp
mov
movsl
pop
movsl
stc
inc
stos
mov
std
cmp
mov
inc
add
inc
cmp
xor
and
push
mov
mov
xchg
cmc
int3
xchg
dec
jge
int
adc
stc
cli
lods
test
add
push
pushf
outsl
jl
sarl
xchg
xchg
in
ja
jmp
push
jb
pop
pop
iret
inc
fs
mov
push
arpl
in
arpl
aam
mov
fadd
adc
test
mov
fcomps
adc
ret
sub
cmpsb
ret
mov
xchg
push
mov
xchg
ss
cmc
insl
or
pop
mov
aad
cmp
push
ret
ss
mov
xor
add
in
cs
pop
jbe
or
push
nop
sbb
cmp
jmp
xor
push
sub
xchg
dec
cmpl
rolb
and
cld
icebp
mov
dec
adcl
cmc
pop
lahf
inc
rcrl
xchg
push
jo
adc
sub
push
jno
idivl
insb
dec
hlt
sbb
loop
loopne
mov
popf
scas
add
imul
and
insl
int
in
cwtl
lods
xchg
mov
in
test
lret
mov
imul
call
test
add
jae
pop
cwtl
push
pop
sbb
mov
cmp
test
add
fldt
in
cmp
nop
lods
mov
mov
cmc
and
mov
and
dec
jl
mov
test
es
lods
mov
mov
ret
mov
xor
mov
mov
pusha
fdivr
add
nop
aas
insl
dec
inc
cld
pop
pusha
mov
inc
xor
clc
inc
test
testb
fildll
fsts
popf
in
cmpsb
mov
dec
jl
stc
mov
pushf
outsb
sahf
std
fimuls
lcall
dec
push
sarb
arpl
movsb
js
stc
aas
or
scas
popa
mov
enter
inc
aad
inc
loopne
lods
jne
push
hlt
mov
push
imul
pop
jl
and
xchg
inc
es
sub
lahf
fwait
and
xchg
dec
mov
adc
or
push
das
push
inc
cmp
scas
sub
imul
push
in
lea
movsb
mov
jecxz
dec
cs
stos
lcall
push
fistl
push
repz
jmp
aaa
mov
outsl
pop
out
xlat
dec
lahf
push
nop
push
dec
dec
in
fsts
loopne
das
or
push
adc
lods
jno
loopne
xor
adc
scas
repnz
in
jo
mov
mov
sub
into
cs
or
jbe
push
mov
enter
or
sbb
push
sbb
jp
pop
mov
mov
dec
lcall
mov
push
iret
dec
sub
push
or
push
xor
xor
push
mov
aaa
mov
je
shrb
sbb
adc
cwtl
outsl
xchg
shrl
cs
movsb
pop
adc
cmc
sbb
and
fstpt
in
lahf
loope
xchg
dec
jno
std
fcomps
mov
mov
and
std
je
xor
sti
pop
mov
sahf
adc
aas
sub
mov
out
int
push
mov
sti
jne
mov
push
and
sbb
shll
aam
lret
lods
xor
xchg
sbb
jmp
inc
shll
push
shlb
mov
sub
ss
cmpsl
jno
xor
stc
inc
mov
cmc
inc
adc
pusha
or
test
pop
lret
bound
stc
fdivr
sub
and
mov
sbb
out
dec
mov
sahf
ja
es
mov
int
daa
inc
and
or
inc
jb
lea
enter
push
gs
cld
inc
jmp
cltd
cltd
and
or
pop
cld
test
lock
jg
mov
sbb
inc
lret
into
cmpsl
mov
fsubrs
sbb
pop
adc
les
mov
xchg
or
adc
jbe
movsl
mov
movsl
incb
xor
lock
fwait
cmp
add
subl
sub
mov
cmp
sar
in
cmc
bnd
shll
pop
cmpsb
mov
shrb
ss
mov
xchg
add
sub
gs
arpl
xchg
fsubl
pop
mov
inc
inc
jno
jo
out
sub
sbb
mov
daa
test
bound
pop
arpl
pop
cmp
or
jecxz
lods
sbb
addr16
repz
push
movsb
inc
xchg
dec
into
loope
cmp
xchg
test
outsb
and
adc
mov
ds
jbe
out
loopne
add
jbe
nop
cs
jb
rcrl
mov
cmc
inc
rorb
in
fiadds
fistl
sti
fucomi
aad
adc
dec
xor
int3
push
adcb
lds
or
bound
sub
shrl
lds
push
push
xchg
cmp
inc
ss
adc
mov
sbb
sti
xor
cmp
sbbb
cmpb
aaa
aas
rcr
jmp
scas
int3
daa
into
adc
xchg
sub
and
insl
clc
and
add
scas
loopne
orl
jle
sbb
xchg
and
dec
mov
dec
or
add
or
and
ficomps
cmp
insl
pop
mov
out
cmp
add
cmpsb
fs
mov
jns
stos
lret
jg
mov
xchg
mov
push
xchg
js
jbe
test
es
mov
xor
push
ficoml
fildll
int
inc
push
mov
cmp
sbb
lret
jmp
xchg
xor
arpl
jb
cwtl
popf
pusha
aam
mov
in
cmc
aad
cmpsl
mov
add
or
mov
lret
enter
loopne
cs
arpl
in
mull
in
rolb
xchg
mov
roll
or
iret
mov
mov
lret
cmpsl
push
mov
mov
mov
in
cmp
push
mov
fwait
leave
mov
mov
in
icebp
roll
add
decl
arpl
paddsw
add
insl
cmpsb
cmc
push
adc
cs
add
mov
xchg
push
rorl
gs
lcall
mov
cmp
aad
imul
dec
rcrl
add
xor
pop
rcll
push
ljmp
gs
dec
pop
insl
lods
into
mov
pusha
out
pop
stos
sbb
fidivrl
mov
imul
mov
lock
jle
push
les
push
mov
negl
adc
mov
in
xor
gs
jno
and
out
loopne
fldz
push
xchg
sub
mov
sbb
lret
add
adc
xor
or
sbb
lods
add
fldcw
daa
imul
pop
faddl
jbe
ret
lods
lahf
or
xchg
inc
lods
clc
xor
xchg
mov
xchg
in
jo
roll
mov
push
sarl
push
jnp
clc
roll
pop
pop
jecxz
out
add
out
inc
push
push
stc
sub
pop
popa
imul
loope
mov
jle
mov
fsubs
insb
lret
add
mov
cmp
add
mov
negb
or
bound
xchg
jge
jmp
add
xchg
inc
or
hlt
sub
out
gs
loopew
cs
int3
mov
lret
outsl
fs
xor
in
push
femms
sub
add
mov
jg
push
push
dec
mov
dec
lock
sub
fisubrs
mov
pop
std
and
out
mov
clc
jo
mov
in
push
fcomp
inc
xchg
icebp
cmp
cmp
mov
inc
sbb
cmpl
mov
movl
jno
add
sub
cmp
cmp
or
lods
lret
mov
xchg
mov
in
add
ret
inc
mov
dec
push
push
cltd
in
xchg
int3
int
mov
pushf
lret
sub
in
mov
pop
jne
scas
sub
and
mov
fbld
jne
dec
mov
fisttpl
roll
popl
or
cli
icebp
ds
xor
cmp
cs
out
cmp
std
mov
or
test
minps
add
push
mov
std
sub
imull
mov
shrb
cmp
gs
sti
push
jge
dec
push
jl
push
pushf
daa
and
nop
dec
imul
cli
lcall
jb
xchg
leave
bound
pop
int3
mov
out
incl
popf
dec
fstl
flds
cmc
or
and
jae
es
or
sbb
or
loope
test
pop
sub
dec
or
fldenv
inc
subb
add
out
out
sub
fwait
pop
pop
jmp
mov
shll
inc
shll
std
fabs
fidivrl
in
xchg
icebp
sub
fisubrl
inc
or
mov
je
or
ja
xchg
addl
cmp
jecxz
testl
mov
mov
je
enter
arpl
cltd
cmp
dec
xor
dec
mov
add
fwait
xlat
in
dec
dec
xchg
mov
rcrb
xor
imul
pusha
lea
pop
loopne
inc
dec
jnp
xchg
jge
mov
mov
decb
xor
js
jge
repz
push
dec
repz
bound
xchg
iret
mov
clc
ficomps
lods
cmp
inc
ja
mov
leave
mov
adc
inc
cmp
push
push
jecxz
push
shl
and
test
push
jnp
jle
sub
mov
pop
pop
push
jne
je
and
jcxz
in
mov
inc
mov
jb
or
test
sahf
sub
push
or
mov
adc
clc
adc
test
out
insb
xlat
sub
repz
in
mov
test
cmp
and
sub
or
stc
int
out
data16
arpl
cli
pushf
dec
stos
push
push
add
adc
sbb
mov
cmc
lcall
add
out
rcl
insb
mov
xchg
mov
cwtl
push
rclb
or
dec
jnp
iret
jle
xor
cli
mov
sub
cwtl
mov
sbb
stos
stos
rol
dec
jbe
scas
lds
dec
adc
sub
test
lds
dec
xor
add
xor
add
out
pop
mov
es
pop
pop
push
out
jg
sub
jmp
push
jg
add
rcrl
lea
dec
and
cmp
jb
push
rcrl
or
and
rolb
ret
int
pop
shll
push
das
jnp
jg
sahf
shlb
in
test
jo
pop
gs
jo
pop
inc
mov
jne
addr16
test
outsl
and
sbb
jo
mov
mov
shr
xchg
fs
and
out
dec
fwait
sbb
push
adc
mov
outsb
leave
adc
out
aad
or
adc
outsb
or
data16
gs
pusha
mov
push
mov
outsb
mov
mov
out
adc
xor
pop
pushf
or
aas
mov
cmp
cmp
addl
das
fwait
and
ss
clc
or
mov
pop
and
pop
add
pop
ret
test
cmp
enter
or
aas
mov
or
pop
roll
ficompl
xchg
adc
cltd
repz
add
test
or
jo
mov
jle
mov
call
ljmp
lods
mov
mov
std
aam
popl
adc
insb
fdivr
xor
in
ds
add
adc
add
or
or
arpl
dec
test
adc
frstor
mov
shlb
stc
push
sar
fsubrl
sub
dec
jl
jbe
sub
scas
jae
decb
enter
shrl
ret
inc
xor
push
inc
mov
xchg
cli
loope
inc
jmp
or
call
icebp
xlat
xor
orb
repnz
rol
jae
mov
lcall
or
push
gs
jno
outsb
dec
fcoms
cld
add
shl
cmp
mov
sahf
out
add
movsb
lret
xor
push
imul
sbb
jno
in
loopne
mov
sub
insl
aas
lock
xchg
xchg
lcall
aad
jle
ud1
daa
test
and
pushf
stos
jns
cmp
rorb
jl
dec
int
and
sbb
in
push
cmp
fs
inc
add
fisttps
scas
cmp
jb
shrl
les
xchg
lods
je
loopne
push
inc
cmp
notb
fcoms
adc
clc
rorl
lret
aam
lret
jb
xlat
ffree
leave
or
out
ret
mov
cli
inc
mov
outsb
dec
mov
pop
cmc
pop
rolb
out
xchg
add
mov
pop
cmp
into
fbld
bound
call
jle
cmp
lahf
sbb
push
arpl
xor
dec
lahf
rcrb
inc
roll
jl
aaa
xchg
mov
pop
jnp
popa
push
dec
ds
jae
fstl
nop
rcll
adc
sub
jne
push
jns
adc
sub
int
sahf
loopne
add
lds
lods
in
cli
dec
iret
inc
aad
stos
xor
cld
ret
cmp
jbe
test
jb
and
hlt
or
rorl
jae
push
sbb
cmp
dec
div
orl
ret
in
cmp
iret
xor
fidivl
mov
jno
popf
outsl
cld
cmc
dec
outsb
xchg
pop
push
shlb
mov
inc
pop
mov
das
push
jp
jle
xchg
xor
out
lret
pop
ljmp
jnp
fildl
inc
leave
mov
enter
call
adc
mov
sbbb
movsl
or
cmpsb
push
cli
lcall
movsl
xchg
jmp
fstl
fwait
lret
jns
fsubrs
push
and
cmp
jae
add
fcoml
mov
xlat
stos
dec
mov
jl
out
sbb
aas
jge
fildll
adc
pusha
fnstsw
sbb
mov
mov
push
enter
and
imul
lret
xlat
pushl
adc
stos
ret
pop
mov
pop
and
mov
out
xchg
jno
jg
xchg
mov
repz
mov
jae
inc
stos
push
notl
push
lahf
jne
push
ja
cmp
out
sbbl
mov
arpl
imul
xchg
add
dec
xor
cltd
mov
and
jmp
jmp
push
lret
call
add
dec
cmpl
push
shlb
in
sub
leave
addb
mov
jl
xchg
jp
imul
gs
out
jmp
or
inc
call
jno
fsubs
sub
lods
jg
fcomp
pop
out
imul
js
sub
xchg
sti
mov
add
jl
sub
pop
mov
xchg
pop
rcr
jecxz
in
adc
mov
pop
pop
sub
push
dec
lea
call
lods
stos
cmp
mov
test
sub
inc
stc
clc
orl
add
push
or
dec
push
aaa
int
pushf
mov
xlat
add
inc
mov
test
pushf
inc
mov
in
sti
dec
push
mov
push
outsb
movlps
sbb
pop
leave
sahf
cmp
pop
mov
rol
popf
shll
andb
out
aas
jns
xlat
jns
push
filds
stc
cld
mov
aam
cmp
in
mov
fldenv
jg
mov
add
iret
mov
shr
in
xor
aam
xor
jae
mov
cli
cmp
data16
dec
shl
lret
add
and
call
ret
sti
push
cmp
jmp
jle
es
arpl
mov
push
xor
js
rclb
mov
orb
xchg
dec
pusha
and
in
pop
push
dec
int3
movsb
lret
jb
mov
xchg
mov
inc
dec
or
mov
out
jmp
das
cmp
icebp
add
pop
int3
jo
and
fs
cltd
mov
jb
call
pop
xchg
push
adc
clc
lcall
cltd
pop
cmc
lcall
add
outsb
cwtl
inc
ds
fnsave
fcmovne
add
mov
sub
mov
notb
bound
lds
mov
test
xor
lahf
rcrl
jmp
xor
add
bound
enter
inc
jp
lds
push
xchg
and
orb
fxch
je
and
xchg
xchg
xchg
xchg
inc
mov
fs
pop
push
rcr
and
fs
shrb
mov
adc
mov
fcompl
popf
and
push
push
std
pop
aad
lods
lds
fisubl
jb
push
cmp
cmp
les
cmp
push
nop
jo
in
and
sarl
fidivrl
fdivrp
repnz
in
fists
add
jmp
lock
sub
cmp
cltd
jnp
adc
popa
or
pop
xchg
push
push
sbb
xlat
jge
stc
pushf
imul
jecxz
sbb
mov
inc
pop
jl
scas
icebp
mov
aas
cmp
mov
mov
lret
cmp
stos
movsb
aam
lock
int3
bound
and
sub
insw
outsl
pusha
sub
pusha
or
out
dec
bnd
sub
das
mov
clc
inc
inc
sbb
mov
enter
mov
lret
incb
mov
adc
mov
shl
or
out
decl
ljmp
and
and
xchg
xor
xlat
lahf
insb
xchg
test
sbb
adc
popa
xchg
and
int
gs
clc
lret
mov
shlb
xchg
ret
jnp
xchg
or
push
inc
enter
hlt
dec
js
repnz
push
xchg
mov
pop
mov
or
in
sbb
ret
lods
cmp
nop
pop
movsb
rolb
scas
out
jmp
nop
fbstp
jle
lods
mov
mov
xchg
inc
pop
cmpsb
push
enter
into
mov
mov
in
gs
sahf
scas
lods
xchg
sub
cmpsl
lods
cmp
add
out
sbb
inc
stc
fdivl
lods
adc
inc
push
cmp
pop
scas
pop
sub
jno
ret
lock
les
loopne
jl
and
xchg
loopne
sub
jbe
sti
fstpt
cmp
add
ret
mov
mov
mov
lahf
lods
push
std
cmp
pop
fdiv
push
js
out
jg
bound
pushf
lds
inc
cwtl
fcompl
mov
and
push
mov
mov
cmc
daa
xchg
testl
leave
pop
mov
mov
hlt
xchg
cmp
jle
cltd
and
mov
out
dec
leave
push
jmp
mov
jmp
mov
xor
inc
pop
cmc
ret
push
test
fs
dec
xlat
jecxz
sub
xchg
out
cmp
xchg
out
int3
mov
test
and
sbb
mov
pop
cmpsb
rorl
outsl
cmp
jne
fincstp
icebp
loop
push
sub
add
cmpsl
ret
das
xor
popa
lods
addr16
lcall
js
pop
les
shlb
cmp
bound
xchg
daa
mull
add
daa
xchg
fdivrs
xchg
fistpll
cwtl
mov
sti
subb
mov
fsts
call
gs
sub
add
mov
loopne
push
or
movsl
xchg
mov
pop
add
rolb
les
fstpt
adc
jg
sbb
and
inc
push
lret
push
aas
dec
and
adc
pop
enter
inc
mov
ficoml
scas
xor
mov
mov
add
xor
cmpsl
mov
das
cmpsl
ret
ds
into
pop
push
lcall
ljmp
test
cmpsl
icebp
push
mov
daa
mov
lret
add
insl
mov
jge
and
mov
icebp
lock
dec
sub
lahf
shlb
dec
dec
jecxz
xchg
js
push
lea
and
mov
daa
es
jle
mov
addb
lahf
shl
movsl
jg
sbb
les
add
ss
jne
sbb
outsb
cwtl
push
sbb
and
scas
loop
or
insl
xchg
ss
call
scas
icebp
rclb
mov
rolb
les
faddl
xlat
imul
fcomps
cmp
mov
and
loope
int
xor
hlt
jbe
xchg
mov
mov
xchg
adc
fs
xor
xor
std
lock
pop
xor
mov
xchg
xchg
ror
push
jns
pop
or
cmp
cmpsl
imul
push
fwait
lods
mov
in
nop
xor
mov
repnz
dec
dec
out
sbb
adc
aad
scas
aas
fwait
addr16
out
push
mov
test
test
repnz
mov
mov
jle
dec
in
mov
jo
arpl
popf
repnz
cmpb
pop
insl
push
fldl
js
in
lods
nop
push
xchg
xchg
sub
adc
push
lods
mov
dec
sbb
fmull
cmp
imul
out
adc
fsts
or
xor
mov
aad
iret
test
pop
push
cmpsl
int
jge
cmp
adc
in
inc
jb
jbe
inc
adc
outsb
xchg
lret
es
jnp
loopne
lock
lret
mov
xchg
or
inc
sbb
stos
aad
mov
mov
push
push
int3
add
js
xor
fistpll
imul
repz
andb
inc
jge
movsb
jge
movsb
mov
adc
mov
daa
sbb
icebp
daa
or
xor
pop
mov
cmp
loopne
xlat
xor
loope
mov
imul
lods
cmpsb
xor
or
pop
jae
xor
loopne
pop
mov
xchg
rorl
popa
xchg
pusha
adc
call
js
outsl
jp
inc
sbb
fcomip
mov
aam
and
add
add
repz
jmp
or
xchg
push
aad
fbld
xor
mov
mov
sub
fcom
push
aam
mov
or
ret
mov
add
nop
outsl
lcall
xor
mov
shr
mov
mov
ljmp
leave
out
movsb
add
dec
movsb
test
xor
jecxz
or
xchg
ret
mov
push
push
testl
xor
push
adc
mov
fdivr
or
clc
testl
or
or
fucom
mov
int3
push
fcoml
aad
std
int
push
xchg
pop
hlt
sbb
je
sbb
loop
pop
loopne
rcll
push
ljmp
in
adc
xor
js,pn
mov
sbb
push
call
add
addr16
into
pop
add
std
push
std
mov
faddp
pop
nop
in
mov
and
scas
inc
leave
xor
mov
leave
les
lods
pop
shll
fwait
dec
mov
lds
lods
xchg
fwait
sub
mov
inc
add
int3
je
movb
mov
sbb
mov
sbb
jo
lods
cmc
movl
cmp
adc
mov
sbb
add
fs
pop
jno
cmp
mov
pop
sub
or
xor
mulb
lahf
sbb
mov
adc
imul
jo
add
lret
aas
cwtl
push
mov
sbb
dec
out
iret
scas
jge
in
jl
ljmp
jmp
sbb
ret
and
jne
xchg
pop
dec
push
roll
cmp
adc
sub
outsl
cmp
das
pop
and
xchg
xor
rcr
std
fisttpll
cmp
js
jmp
addr16
nop
test
dec
xchg
jg
bound
iret
push
and
out
pop
into
inc
lods
xchg
mov
pushf
sti
sbb
and
fwait
data16
push
cmp
stos
aas
add
xor
repz
cltd
and
out
xchg
ds
inc
add
push
sub
lcall
fmull
std
sahf
sbb
dec
aas
in
hlt
and
jnp
loope
xor
aam
xor
push
pop
jo
xchg
bound
std
hlt
pop
lret
jl
push
mov
repnz
adc
nop
lea
insb
ljmp
aam
add
clc
shrl
mov
cwtl
ds
push
lds
jl
cmpsb
fstpt
mov
sub
cld
dec
std
insl
push
lret
leave
lea
inc
setge
mov
fcmovnu
int
mov
subl
sbb
push
inc
icebp
repz
hlt
or
mov
mov
mov
pop
or
and
mov
xor
pop
cs
out
and
js
popf
lock
and
divb
movsl
rol
push
sub
clc
arpl
jmp
jb
sub
mov
loopne
mov
orl
push
ret
in
scas
aaa
rcrl
scas
adc
cmc
xchg
sbb
mov
adc
cs
movsb
rcrl
jge
lcall
add
into
dec
xchg
sti
mov
iret
cli
daa
fisttps
gs
push
andl
aam
lods
loopne
cld
test
and
pop
js
push
mov
cmc
lret
mov
mov
sub
push
xchg
fisttpl
out
in
mov
jl
or
sub
pop
rcrl
leave
mov
je
sbb
imul
pop
jle
enter
jns
push
mov
out
lahf
sub
lea
in
repnz
xor
pop
ret
dec
scas
into
and
scas
les
cwtl
or
sub
or
add
stos
lods
dec
stos
cmpsb
push
shrl
pushf
cmpsb
and
cmc
xchg
repz
scas
rclb
scas
mov
ja
data16
fxrstor
push
iret
cmp
sub
or
leave
hlt
mov
mov
js,pn
and
dec
lahf
dec
out
sub
add
pop
and
or
pop
out
xor
outsb
lret
push
lods
adc
subb
in
ja
inc
sub
mov
std
loopne
loopne
ja
test
mov
and
daa
mov
bound
test
adc
xchg
jge
push
test
xor
je
add
stc
shlb
jbe
scas
call
cmp
pop
sbb
mov
add
cltd
test
fsub
dec
jle
add
mov
mov
and
cmp
sbb
mov
in
movsl
fstps
sbb
es
ljmp
idiv
push
das
or
mov
gs
data16
call
or
stos
cli
out
lea
lds
inc
sbb
ds
fdivrl
pop
movsb
aaa
repnz
lds
push
pop
pop
loop
xchg
jp
repnz
inc
rcll
xor
loope
sahf
add
repz
cmp
sbb
das
mov
jle
in
rol
xchg
pop
xor
xchg
sbb
nop
push
and
sub
jno
pop
mov
adc
sub
test
mov
mov
add
xchg
popa
bound
cmc
push
cmpsb
lahf
insb
sbb
test
mov
jl
stos
xor
orl
loop
pop
ret
jge
sbb
xchg
addr16
sub
imul
sub
in
and
movb
mov
jecxz
cltd
icebp
cmp
sbb
sbb
or
cmp
mov
xor
in
rcr
fldl
push
repnz
sbb
imul
popf
fwait
push
add
mov
dec
push
mov
icebp
pop
xlat
and
cmpsb
in
repnz
aas
add
xchg
int3
outsl
repz
jmp
sbb
out
xchg
add
fistl
mov
mov
test
push
mov
bound
push
in
inc
cmc
fldcw
mov
test
pusha
ds
add
subb
push
test
add
mov
jecxz
push
push
and
jg
mov
jmp
push
cmp
sbb
pop
mov
add
in
dec
pop
cmp
dec
cwtl
cltd
mov
mov
ret
sti
adc
mov
add
rcr
add
cwtl
or
divl
pop
mov
add
and
in
arpl
aam
mov
std
hlt
sub
mov
scas
pop
inc
into
dec
test
bound
xchg
mov
addr16
mov
pop
sbb
out
test
xchg
es
push
icebp
fsubs
rcl
data16
sbb
sbb
hlt
push
pop
add
jge
jne
or
bound
adc
or
loop
cmp
movsl
pusha
fs
pop
sbb
shll
mov
into
or
xor
inc
jo
jne
addl
and
fildll
mov
movsb
insb
fisubl
push
jo
jo
pop
xchg
pop
fs
jns
sbb
cmpsl
mov
push
popa
pop
dec
dec
mov
dec
rcl
mov
ret
arpl
int
notl
out
clc
dec
sub
push
jmp
xor
fsts
lock
arpl
mov
mov
leave
inc
dec
adc
repz
in
ss
fimull
imul
in
cmpsl
add
fwait
ret
cmpl
ret
mov
in
add
xorb
imul
call
insb
jae
push
xchg
xor
stc
add
out
js
cmp
in
xchg
into
inc
mov
movsb
into
fidivs
sub
ja
popa
out
or
jnp
sub
fwait
imul
ja
mov
out
icebp
rorl
cmp
add
fwait
orb
sbb
and
movsb
lods
mov
inc
cmpsb
mov
mov
out
xchg
repnz
mov
mov
gs
adcb
ljmp
mov
scas
dec
jle
cmpsl
je
mov
push
add
xchg
stos
pop
xor
icebp
cmp
loope
clc
mov
fsubrl
inc
ds
jmp
repz
xlat
cli
push
mov
adc
and
pop
subl
or
push
or
loop
repz
scas
outsl
lcall
push
adc
cmp
mov
test
sub
lock
outsb
jle
dec
sahf
cmp
mov
fstpt
iret
cmp
jecxz
fildl
or
push
add
orl
push
inc
xchg
or
pop
sub
ret
int
pop
sbb
mov
and
outsl
and
pop
outsb
xor
jbe
test
add
lea
add
int
mov
in
jo
leave
rcrl
and
ret
fcoml
add
bound
inc
xchg
xor
and
add
mov
xor
xor
inc
inc
push
sahf
fwait
xor
std
mov
scas
rorl
idiv
jb
mov
pop
xchg
mov
push
jns
aas
aad
repz
pop
movsb
repnz
imul
stc
lret
and
stc
xchg
inc
mov
pop
rclb
es
dec
mov
clc
or
jg
out
repnz
cmpl
sub
jae
cmpsb
popa
fwait
push
dec
sub
cmp
outsl
stc
sbb
cwtl
pushf
add
int
pop
fstpl
sub
sbb
sub
jp
inc
movsb
fprem1
dec
imul
mov
jl
jp
mov
inc
adc
jae
jno
pop
dec
or
insl
and
cld
cmp
decb
pop
or
rcrb
icebp
jno
imul
jmp
cmp
frstor
orb
and
or
enter
imul
out
dec
imul
notb
mov
pushf
fcmovnu
dec
insl
arpl
aad
xchg
mov
jge
and
mov
in
cwtl
in
mov
pop
jb
inc
call
vmwrite
add
jmp
lods
and
loopne
add
fwait
mov
mov
sahf
sbb
adc
pop
insb
mov
idivb
dec
leave
xor
push
call
adc
test
add
push
xchg
mov
pop
push
push
aam
xchg
adc
in
stos
icebp
daa
fisubs
mov
mov
add
iret
sarl
xchg
dec
mov
dec
mov
lds
xor
mov
xchg
mov
pop
xchg
cmpsl
lret
inc
jbe
mov
loope
out
xchg
mov
pushf
out
outsl
int
das
mov
aam
xchg
sbb
test
jp
xchg
mov
loop
scas
rolb
jbe
xor
vmulpd
sbb
in
mov
lret
pop
mov
push
mov
adc
repz
pop
mov
add
jecxz
adc
adc
lea
shrb
xor
idivb
mov
addr16
dec
les
mov
ss
cs
jne
add
enter
aaa
aaa
mov
cmp
jae
mov
mov
insb
dec
mov
loope
xchg
mov
adc
rorb
xchg
stos
cmp
xchg
insl
inc
inc
shld
push
fcmovb
test
scas
cmpsb
aaa
adc
cltd
enter
xor
jb
js
lahf
sub
mov
call
inc
pop
in
xor
inc
xor
adc
fisttpll
outsb
in
mov
add
es
shrb
pop
test
test
lods
bound
pop
cmp
loopne
add
jmp
ja
mov
push
mov
and
pop
mov
jge
test
arpl
outsl
jnp
pusha
popl
shll
test
fsubl
ja
nop
mov
out
jg
ja
insb
addr16
cmp
aad
jo
and
dec
movsb
mov
lods
xor
push
sub
scas
mov
call
pop
pushf
mov
dec
rcrb
stos
mov
xchg
mov
ficoms
add
lods
lods
mov
push
adc
sub
mov
sub
inc
out
mov
mov
push
xchg
sbb
and
insb
jo
mov
sbb
inc
in
stos
jge
cli
in
pop
mov
stc
aas
mov
jb
xor
jnp
and
adc
mov
cmpsl
loope
popf
sbb
leave
sub
xchg
mov
andb
mov
shll
addr16
sub
inc
xchg
movsl
and
testb
pop
sbb
fiadds
ss
iret
lds
imul
add
repz
inc
dec
add
rcrl
mov
xchg
pop
push
mov
push
inc
shll
jb
in
loop
xlat
dec
inc
and
gs
add
add
sub
fwait
xchg
xor
lahf
mov
pop
push
out
ss
inc
jmp
decb
cmpl
xor
loope
imul
sub
xor
cmp
jae
fimuls
xchg
stos
lahf
or
add
and
loope
test
inc
jb
rclb
in
ljmp
cmp
mov
xchg
mov
push
add
out
adc
or
adc
rcr
ret
jecxz
cwtl
cs
stc
out
mov
jb
stos
xchg
and
pop
out
inc
enter
push
stos
pushf
xlat
ds
loope
cmp
adc
mov
mov
mov
sub
addb
mov
data16
sub
cmp
popa
sbb
loope
xor
mov
add
sub
push
stc
lahf
sbb
nop
mov
subb
cli
sbb
push
pop
les
sub
pusha
outsl
je
mov
cmovns
mov
push
in
leave
aaa
js
adc
xor
push
mov
pusha
rclb
xchg
xchg
test
pop
movsl
jbe
dec
outsb
inc
adc
mov
fnstcw
insl
inc
push
lds
loope
cmp
pop
xchg
or
outsb
jecxz
cmp
mov
lret
je
add
adc
or
lds
test
xorl
cltd
andb
pop
lods
shl
mov
movsb
lock
xor
in
mov
insl
jne
add
push
imul
dec
dec
jae
add
addb
push
mov
pop
cs
mov
push
and
and
mov
sbbl
xchg
bound
pop
jl
sbb
inc
add
mov
scas
movsl
cmpsl
lods
push
sbb
push
pop
xor
dec
rcr
pop
sub
push
or
nop
ret
les
loop
adc
addr16
xchg
xorl
pushf
mov
aad
fdivrs
jae
outsl
add
imulb
int3
push
cmp
xor
iret
jo
mov
lods
cmp
push
negb
sahf
into
mov
cmp
scas
or
pop
xchg
in
bound
cmp
fsubrl
inc
cmpsl
inc
in
nop
fcoml
pop
sti
ss
repz
pop
mov
cmp
popf
mov
ss
adc
cli
ror
out
sub
xchg
xorl
in
mov
es
cld
xchg
mov
ds
rcrl
sbb
insb
lea
sub
movsb
stc
xchg
push
es
imul
addl
imul
dec
jge
ja
mov
jge
fstl
arpl
gs
jns
cwtl
push
std
lods
dec
mov
lret
fdivrl
rcll
fbld
outsl
sub
mov
out
out
add
jb
fsubrl
insl
jo
les
test
dec
stc
xchg
pop
or
push
repnz
sarb
mov
add
adc
leave
std
mov
inc
xchg
add
xchg
add
scas
jae
rcrb
adc
xchg
leave
cmp
jmp
lds
jnp
jmp
cmpsb
stos
pop
das
incl
fnstenv
pop
add
add
lcall
jg
bsf
mov
mov
out
or
test
cmpsl
and
and
mov
aas
lods
jl
call
cmp
das
fidivs
sahf
imul
aad
out
inc
cmp
jl
ljmp
stos
es
sub
loopne
call
add
rcll
inc
in
sub
divb
out
mov
in
pop
je
sub
add
inc
out
mov
sahf
jbe
lock
movsb
jp
mov
fidivrl
mov
aas
fcomp
int
stos
and
sub
dec
std
cmpl
daa
lret
faddl
fcmovne
jmp
pusha
test
mov
mov
shlb
mov
xchg
jbe
fcomps
add
lcall
loope
add
pop
jl
repz
xorb
aaa
xchg
int3
call
jecxz
loop
mov
mov
xorl
and
push
mov
movsl
mov
mov
push
cmpsl
sub
mov
test
xor
arpl
push
stos
sarb
mov
aad
scas
mov
sub
mov
cltd
pop
push
mov
jg
add
dec
jae
into
mov
jnp
bound
outsl
clc
sub
jmp
push
jg
call
ds
mov
jg
repz
pusha
xor
notb
adc
das
sbb
adcb
fldl2e
daa
mov
mov
mov
dec
mov
mov
cli
pop
mov
sub
xor
adc
xor
out
push
jno
mov
popf
mov
push
fstpl
imul
push
and
mov
sbb
xchg
dec
pop
bound
add
mov
iret
dec
test
lcall
adc
sub
inc
sahf
jnp
cmp
test
jg
out
lret
xchg
mov
or
lea
mov
insb
repz
inc
pop
pop
pushf
lea
subl
add
lods
cmp
and
ret
rorb
mov
fcmovnb
mov
push
mov
insl
push
sub
test
add
mov
add
fisttps
mov
in
dec
mov
cmp
call
xlat
add
dec
xchg
aam
dec
jg
mov
cmc
pop
stc
daa
mov
or
bound
add
aaa
pusha
int
ret
lock
dec
lcall
test
ljmp
xor
xor
rcr
insb
sbb
or
dec
fsts
mov
push
out
pusha
notl
aas
sub
cmp
jae
fidivrl
jge
cli
jg
mov
jns
jne
insl
repnz
add
bound
les
push
push
int
mov
sub
pop
negb
inc
out
xchg
stos
jl
iret
movsl
mov
adc
sbb
inc
inc
loope
sbb
stos
push
fcoms
or
adc
xor
sbb
ret
lahf
imul
mov
addb
punpckhwd
mov
bound
xchg
push
faddl
test
jmp
lea
sbb
fdivr
mov
xor
mov
stc
imul
pop
dec
pop
and
movsl
lret
fcompl
add
insl
popa
mov
das
mov
rolb
cltd
stos
pop
mov
sbb
leave
mov
mov
movsl
xchg
repnz
mov
cmp
mov
or
daa
xchg
in
aam
mov
adc
movsl
lods
shrl
enter
push
roll
cmp
sub
fsubs
lods
loopne
movsb
cmp
jg
sub
or
mov
jo
xor
cmp
push
jg
jge
div
stos
les
or
lods
cmpsl
les
pop
adcl
repz
mov
stos
sub
lret
jo
insb
lret
arpl
push
jo
push
lahf
fdivrl
out
pop
add
fwait
insb
sbb
mov
cmc
xor
cs
cmp
repnz
or
xlat
aaa
lods
call
fstps
and
cmp
and
xor
sub
cmp
jg
and
dec
aaa
xlat
push
mov
mov
push
or
movsb
sub
jge
ljmp
loop
hlt
bound
fs
stos
pop
adc
xor
in
loopne
jo
ret
jbe
js
test
push
sahf
cltd
jbe
dec
leave
cmp
lret
testl
loop
jne
pop
lods
icebp
inc
mov
cmp
lods
pusha
adc
sbb
jne
les
aam
pop
pop
mov
cwtl
sbb
popa
push
add
pop
push
out
jg
sahf
sar
movsb
cs
pop
xchg
push
out
xor
int
nop
adcb
mov
adc
fucomi
ljmp
into
cmp
scas
lret
sub
aad
bnd
or
push
dec
jecxz
mov
cld
mov
cmp
xchg
pop
sbb
mov
dec
stos
mov
xchg
push
rclb
dec
ds
xchg
repnz
out
adc
shll
in
inc
movsb
push
mov
repnz
xor
pop
ljmp
and
and
idivb
cmp
add
movsb
add
push
pop
xchg
dec
fs
mov
rcr
jbe
outsl
mov
sub
inc
xchg
test
nop
ds
pop
loop
outsb
mov
pop
sbb
mov
sbb
lods
test
adc
push
lea
dec
stos
jns
mov
dec
mov
scas
sub
ljmp
push
les
dec
adc
sbb
inc
shlb
add
jecxz
sarb
rcrl
test
push
stc
mov
in
jmp
push
stc
lea
and
fwait
sahf
fwait
and
enter
add
jmp
shll
lahf
movsl
mov
aam
es
xchg
mov
repz
pop
fdivrs
fildll
fnstenv
out
or
or
dec
mov
push
sti
sub
repz
jbe
adc
add
xchg
push
mov
mov
pop
jae
outsb
roll
jno
add
jbe
ja
mov
push
rorl
insl
testb
int3
jno
add
mov
xor
outsl
pop
mov
xchg
jecxz
stos
std
ss
xchg
cli
data16
add
or
stos
enter
subl
icebp
mov
aas
sbb
xor
dec
aam
pushf
push
loope
mov
out
jmp
xlat
popa
xchg
imul
mov
lahf
xchg
push
lcall
popf
cmp
shr
cmp
jecxz
mov
fistpl
pushf
testb
std
insl
cmc
inc
in
pop
adc
testl
jae
add
shlb
jl
mov
ljmp
fwait
stos
nop
or
sub
pop
mov
push
push
sahf
or
lds
jno
mov
inc
dec
lock
push
mov
or
xor
sub
cltd
jbe
cli
or
sub
testl
fldt
mov
lock
adc
sahf
dec
arpl
add
sub
das
jp
popf
inc
pop
xchg
int3
inc
pushf
movl
lcall
fidivs
jecxz
xchg
or
xchg
xchg
mov
imul
pop
into
xlat
xor
stos
arpl
dec
or
jmp
push
int3
aam
push
sub
insb
mov
jo
jg
hlt
and
add
mov
mov
daa
addr16
outsb
sbb
mov
lds
pop
sti
movsl
adc
in
data16
in
jb
clc
lods
pop
push
fcomp
lret
jecxz
movsb
push
inc
fistpl
fbld
mov
popw
ret
push
bound
cmp
or
mov
mov
popa
or
xor
adcl
jne
xor
ret
jae
mov
ljmp
jns
and
sbb
cld
nop
imul
rcll
adc
pop
xchg
in
daa
jmp
xchg
mov
push
dec
xchg
jae
subb
or
pop
mov
pop
add
mov
in
mov
jno
orb
dec
inc
mov
xor
addl
fs
xor
loop
pop
add
icebp
fwait
stos
testb
cwtl
ljmp
sti
sahf
nop
pop
cmpsl
mov
outsb
insb
mov
int3
stos
sbb
sarb
and
adc
mov
popl
lret
push
add
mov
cld
pop
sti
push
pop
push
ds
pop
sbb
push
sub
in
fmull
sbb
jbe
idiv
xchg
scas
inc
aaa
cmpsl
outsb
data16
xchg
popf
mov
pop
jno
nop
sahf
cltd
mov
mov
mov
or
test
mov
xchg
xchg
sahf
fcomps
mov
std
aas
pop
inc
imul
xchg
pop
jg
outsb
mov
add
imul
push
imul
fistl
leave
loope
xor
sahf
or
pop
push
shlb
cmpsb
jle
or
stc
jnp
cmpsb
out
push
repz
push
fisubl
sub
dec
outsl
mov
in
pop
cmp
fnstenv
push
setne
jne
sbb
fnstsw
dec
iret
arpl
xchg
jge
lahf
push
cli
fcompl
mov
dec
pop
arpl
push
fcompl
clc
mov
fidivrl
fadds
jo
dec
sbb
in
lret
pop
xchg
mov
shll
dec
jle
mov
xlat
call
sub
jle
ret
pop
jp
dec
jo
jecxz
mov
sbb
movsl
ss
push
aaa
mov
and
xchg
test
push
fwait
das
adc
xchg
or
xlat
std
pop
jo
lret
pop
mov
es
cmpsl
fdivrp
stos
sarb
stos
mov
clc
add
jg
mov
fsts
ret
iret
into
push
jle
sub
ret
jle
mov
in
imul
sub
sub
movsl
xor
push
aam
roll
lods
call
inc
fadd
mov
jg
jmp
lock
outsl
jl
stos
adcb
sub
hlt
push
mov
pop
aas
out
ret
ds
pop
cmp
adc
mov
loopne
and
xor
mov
lock
add
mov
adc
push
dec
cmp
mov
ja
data16
xchg
sbbb
notl
or
ja
sub
mov
fsubp
rclb
hlt
inc
insb
add
loopne
or
xor
jnp
push
dec
xchg
push
push
add
shrl
fsub
imul
pop
dec
leave
rcll
repnz
ret
xor
pop
ja
shlb
jg
xchg
sub
test
imul
jle
jecxz
cmpsl
sub
jno
orb
iret
mov
loop
jno
cmp
push
lds
subb
pusha
js
or
or
xchg
sahf
and
pushf
sbb
cmpsb
aad
loope
jecxz
mov
stos
jnp
sub
jge
lock
pop
out
in
pop
pop
push
fnstenv
icebp
pop
jb
xchg
repz
inc
mov
push
cmpsl
ret
rcrl
popa
mov
pop
or
mov
cmp
aas
mov
and
rorb
jmp
adc
test
out
jg,pn
call
push
aad
dec
notb
push
enter
jo
xchg
or
cmp
call
xor
nop
inc
cmp
int
in
xor
sbb
dec
inc
pop
sbb
push
stos
and
jge
inc
pop
arpl
outsb
xor
mov
sbb
or
mov
or
jno
pop
dec
jnp
jno
sub
scas
ret
adc
jb
and
jecxz
into
jmp
loopne
arpl
lods
jmp
push
mov
dec
popa
out
into
in
bound
pushf
mov
jnp
jbe
xor
fsubrl
outsl
mov
rclb
add
add
test
mov
pop
mov
les
xchg
cmp
ljmp
jo
xchg
das
and
sub
int
add
inc
pop
inc
xchg
sbb
stos
xchg
pop
lcall
hlt
push
dec
dec
jno
cmp
push
cmp
xchg
btr
or
ss
cli
cmpsb
mov
in
repnz
and
sub
je
jl
fwait
or
in
mov
add
jmp
hlt
lret
xorb
cmp
cltd
add
jle
and
mov
repz
fs
test
mov
xchg
push
and
push
sub
dec
movsb
or
pop
pop
jbe
lds
lcall
iret
gs
fsubr
mov
push
sbb
call
cs
pop
addr16
sub
jle
jge
clc
inc
xchg
cmp
jb
inc
and
loopne
fnstsw
or
inc
ror
je
cmp
push
sbbl
js
jg
popf
push
pop
lret
scas
push
shll
xor
les
inc
mov
imul
xchg
jmp
sbb
fcomps
jecxz
xchg
std
adc
aam
push
cmpsl
sbb
loop
sbb
int
adc
dec
sub
orb
lods
lock
xchg
inc
push
sbb
imul
lret
sbb
shrb
xorb
in
les
into
sub
sub
test
jno
cltd
and
jp
sahf
mov
add
es
push
movsl
pop
addr16
xlat
clc
rep
ds
pop
into
sub
cmp
adc
adc
fisubl
icebp
xchg
daa
jbe
test
mov
lea
pop
mov
xchg
jmp
mov
pop
xor
sbb
or
pop
lret
and
repnz
adc
lods
repz
pop
jns
cmp
loop
mov
jne
mov
dec
and
cmp
mov
pop
mov
fmul
sets
and
cmp
jle
repnz
pushf
loope
lea
repz
pop
lret
mov
or
int
inc
inc
pop
pop
jp
sub
hlt
sarl
scas
shr
mov
es
rcll
loopne
mov
mov
pop
std
fmuls
fistps
out
jle
das
jo
js
lds
mov
sub
or
dec
xchg
xor
sbb
adc
mov
popa
xchg
shlb
out
add
mov
xor
les
mov
add
inc
mov
ds
test
jge
cmp
mov
sbb
jecxz
ja
insl
test
mov
pushf
inc
shlb
in
jmp
ja
sar
cli
lods
push
xchg
mov
test
add
jno
dec
pop
jb
push
jae
sti
popa
fisttpl
sub
loope
xor
inc
in
mov
popf
jne
movsl
sti
mov
test
iret
out
sbb
xor
pop
scas
sub
push
loop
dec
cli
imul
dec
push
jo
lret
movsl
xor
js
movsl
imul
lods
or
push
arpl
jmp
push
fnstcw
inc
cwtl
into
lock
jl
or
int
mov
ret
movsb
sti
std
sub
adc
bound
jle
cltd
bswap
and
push
inc
or
fcompl
add
push
mov
call
inc
mov
enter
dec
pop
adc
sarl
add
in
arpl
lea
loope
and
sbb
jmp
js
cmp
push
sub
mov
daa
call
int
lahf
test
xor
jp
pop
pop
and
push
arpl
lret
dec
stc
dec
and
fisubl
sub
scas
add
mov
push
pop
pop
xor
pop
sbb
pop
aam
mov
jmp
mov
cmp
ss
inc
jb
xchg
mov
mov
insl
fwait
movsl
loopne
sub
inc
or
jp,pt
mov
pop
inc
mov
xor
pop
ss
xor
out
and
pop
push
xor
cli
xor
ja
fisubrl
xchg
outsb
or
testl
insl
mov
nop
inc
ret
add
pop
int
push
into
scas
mov
cmp
daa
fdivrs
pushf
jge
jns
roll
orb
xor
push
and
add
mov
inc
movsl
test
fwait
mov
sub
test
mov
sbb
and
adc
je
or
and
das
lea
stos
addr16
fs
xchg
mov
mov
arpl
cmc
nop
aaa
and
stc
fcompl
bound
cmp
mov
mov
pusha
push
adc
lcall
jno
adc
mov
aam
or
bound
jb
cmp
mov
cwtl
sub
jle
ud1
popa
gs
rcrl
cli
mov
sub
scas
popf
iret
push
mov
int
popf
push
adc
ret
jle
or
cmp
shll
inc
xor
mov
les
lret
mov
sbb
fimull
ficoml
mov
scas
sti
xchg
dec
jecxz
dec
shl
sub
inc
lcall
out
gs
cltd
jnp
jge
mov
dec
popa
inc
lock
lods
mov
scas
pop
test
xor
mov
jge
inc
inc
pop
xchg
mov
pusha
and
inc
leave
leave
jb
movsl
inc
out
jae
mov
in
dec
fmuls
sbb
out
push
adc
push
idivl
and
test
iret
dec
xchg
sub
sub
es
fs
ss
cli
add
xor
sahf
or
cmp
loopne
ljmp
in
out
aam
loop
adc
add
scas
cmpsl
fldenv
mov
ss
xchg
adc
test
mov
loope
cltd
mov
fstl
pushf
jb
les
push
in
movl
sub
xchg
sbb
insb
jns
dec
bound
push
cmp
mov
jmp
cmp
push
stc
xchg
sbb
mov
jmp
movsb
das
jge
jle
stc
mov
push
aas
and
idiv
rcl
mov
add
outsb
hlt
scas
jecxz
leave
addr16
sub
jmp
jp
mov
add
popf
aas
pop
jne
out
cli
fcmovnbe
fcmovnu
push
shll
shll
fcompl
test
idiv
cld
out
iret
jge
sar
out
jle
lods
xchg
lods
outsl
mov
out
push
push
xor
sub
xor
fwait
pop
sub
push
pop
push
decb
sub
in
xor
inc
subl
mov
inc
push
inc
mov
ret
xchg
lods
add
sbb
xor
rcrl
add
dec
test
clc
add
mov
ja
dec
push
dec
cmp
pop
add
das
push
rcr
sbb
or
lods
mulb
shlb
or
dec
sti
daa
loop
mov
fcmove
arpl
sub
adc
sub
out
in
add
pop
dec
out
sbb
std
les
jno
lret
xchg
xor
dec
sbb
dec
cwtl
add
and
adc
adc
push
pop
pop
add
mov
popaw
mov
xchg
xor
icebp
mov
scas
and
aas
out
mov
retw
dec
pop
sarb
lods
bound
jb
into
repnz
rcl
pop
lret
ss
xchg
mov
ficoms
rol
loop
and
pop
clc
push
xchg
jl
scas
adc
push
fs
test
popf
sub
mov
pop
daa
rol
inc
fstl
stos
push
arpl
mov
cmp
lods
dec
jbe
mov
cli
or
gs
xchg
loop
rorb
and
sub
test
insl
dec
in
lock
xlat
cmpsl
mov
adc
adc
icebp
push
sub
xchg
fstpl
cli
jecxz
xchg
sub
lock
and
push
sbb
pop
cmp
out
xchg
loopne
out
sbb
jmp
cmp
fwait
scas
std
roll
outsb
leave
inc
jge
sahf
fistps
jbe
cld
addb
popf
dec
mov
sub
cmp
adc
int3
jb
lret
popa
pop
pushf
ret
cmp
add
out
cmp
ljmp
int
mov
cmpsl
imul
pop
loopne
mov
clc
stc
and
jp
pop
adc
mov
cmpsb
pop
push
or
mov
test
out
xchg
fnstsw
faddp
sbb
out
lahf
pusha
jbe
or
ret
mov
push
lcall
mov
and
adc
dec
repnz
into
arpl
shrl
push
into
iret
and
xor
pop
sbb
mov
add
fwait
push
test
mov
ret
adc
jmp
inc
push
cmp
lods
push
andl
mov
xchg
mov
fnstsw
sbb
dec
aas
flds
sahf
in
jecxz
movsl
xor
cmp
cmp
bnd
dec
mov
jae
cltd
mov
dec
xchg
adc
add
sahf
hlt
inc
cmp
cmp
aad
in
in
cmc
sbb
push
insl
sub
pop
push
or
pop
add
popf
pop
inc
int
les
inc
mov
sbb
pop
or
mov
into
jle
push
jecxz
mov
hlt
mov
out
adc
adc
cmc
mov
ljmp
pusha
cmpsl
cmp
add
inc
popa
out
incl
or
lea
push
and
xchg
cmc
dec
and
js
outsb
mov
mov
sbb
aas
mov
call
mov
call
out
mov
push
sahf
insb
cmpsl
stos
outsb
push
mov
aad
dec
jl
adc
pusha
xchg
add
add
in
sub
imul
or
enter
and
inc
mov
imul
mov
jne
sub
movd
jg
je
inc
pop
je
sbb
xor
pop
int
sbb
loop
pop
xor
fcompl
push
dec
out
push
out
jp
pop
adc
in
lahf
fsubl
adc
ljmp
adc
sbb
add
arpl
ss
movsl
jns
pushf
push
mov
add
dec
add
fisubrl
data16
dec
mov
push
xchg
nop
ss
sbb
cmp
mov
mov
xor
xor
mov
fsubrs
cmpsb
lock
push
movsb
xchg
scas
rcpps
add
in
mov
sbb
bound
dec
rcrl
and
mov
add
lret
shlb
jge
xchg
pop
sbb
mov
xchg
aaa
clc
mov
pop
aam
aam
int3
fidivrs
dec
shl
je
sti
les
xor
in
jmp
das
call
out
dec
dec
ljmp
mov
dec
xchg
pop
outsb
sbb
or
lods
pop
movsb
push
insb
aas
data16
repz
cmp
mov
mov
hlt
inc
xchg
loop
mov
push
lods
mov
xor
dec
xor
cli
addl
stos
daa
sahf
inc
and
rcrb
sbb
push
shl
pop
insb
mov
mov
out
sub
dec
inc
xor
cmp
cwtl
jae
lds
and
loop
push
add
xchg
ret
jae
pushf
call
jb
movsl
mov
pop
lock
out
mov
rcll
xor
xlat
dec
pop
add
mov
insl
es
add
xchg
dec
inc
imul
xchg
test
enter
insl
movl
add
lods
cld
push
xchg
cmp
or
pushf
push
xlat
inc
out
push
scas
push
mov
inc
fcom
lock
pop
insl
xchg
test
fdivrs
out
fiaddl
push
add
or
sbb
sahf
sub
dec
lret
push
fnstenv
lods
pop
ficomps
xchg
stc
push
js
mov
push
ss
cmp
jnp
cltd
jecxz
sahf
pop
mov
cli
sbb
jb
lea
push
ds
in
nop
test
fnstcw
in
mov
in
imul
std
ret
lret
popa
inc
cwtl
or
dec
dec
popf
and
jb
push
push
xor
dec
imul
imul
push
dec
mov
ljmp
scas
and
sub
stos
sbb
xchg
movsl
add
mov
cs
loop
jo
add
in
push
rsm
in
jb
or
movsb
push
adc
mov
cmp
pop
sbb
xor
mov
out
mov
dec
and
jge
xor
dec
xor
mov
pop
push
inc
mov
mov
pop
addr16
lods
cmp
out
das
daa
xor
or
xchg
pop
pop
xchg
ljmp
mov
out
mov
mov
jne
inc
xor
sbb
jle
jnp
and
and
lods
out
add
packssdw
popf
mov
data16
inc
pop
mov
in
cmp
xchg
mull
or
cmp
xchg
outsl
pop
imul
pop
ja
in
loopne
mov
shl
mov
test
sub
push
jbe
mov
or
xlat
push
lods
inc
mov
push
jecxz
add
pop
xchg
loop
and
fldl
aam
mov
xchg
jl
jae
icebp
mov
add
lods
je
xchg
scas
mov
cmp
test
mov
or
push
stc
jmp
inc
bound
xor
cwtl
mov
fisttps
ljmp
dec
std
int3
push
cmp
mov
jl
rolb
lret
icebp
mov
xchg
dec
jae
sub
sarl
push
or
rol
out
scas
imul
sbb
repz
loop
data16
jno
sub
jo
jnp
rclb
dec
sub
movsl
loop
or
sub
insl
push
or
mul
imul
rcll
jmp
leave
pop
imul
pop
mov
sbb
cli
jae
movsl
lock
jno
pop
ja
out
jl
ret
daa
cmp
sub
dec
sub
jae
inc
les
hlt
test
repz
in
enter
jnp
push
notl
mov
pop
or
ja
push
out
aad
adc
mov
push
jbe
pop
ljmp
cld
mov
les
pop
pop
out
add
fsubl
jne
dec
scas
pop
in
popf
fsts
clc
je
pop
dec
clc
lds
sbb
in
xchg
pop
pop
das
ds
pop
pop
xlat
push
ljmp
pop
stos
shrl
adc
andl
shr
xchg
mov
mov
pushf
cmpsl
push
inc
lods
sub
out
sub
test
push
cmp
dec
scas
jmp
xor
outsl
inc
pusha
arpl
mov
cmpsl
mov
aaa
fsub
or
mov
jl
pop
fisttpll
pop
cmpsl
clc
jmp
lcall
fcomp
mov
xchg
jbe
xor
sub
add
jb
outsl
fsubrl
testl
inc
or
shlb
mov
popf
lock
jbe
insb
or
mov
pop
shlb
adcl
and
sub
mov
mov
mov
adc
sbb
and
inc
dec
test
mov
lcall
je
mov
mov
sub
sub
dec
nop
xchg
testl
mov
sahf
int3
sub
hlt
xor
ja
dec
sbbl
mov
pop
arpl
sbb
ja,pt
fisubrs
pop
cwtl
in
mov
mov
pop
cs
adc
cmp
pop
add
cmp
stc
xor
mov
jb
mov
mov
fbstp
repnz
push
inc
inc
rcr
aam
jne
mov
xchg
mov
mov
mov
pop
out
outsl
lcall
mov
je
adc
mov
or
or
and
push
jmp
add
mov
je
and
push
mov
pop
add
sub
movsl
xchg
cmp
lock
outsl
data16
sbb
sub
or
and
imul
jno
js
mov
daa
fwait
call
leave
iret
inc
hlt
sbb
xor
inc
mov
mov
xchg
xlat
lea
sbb
movsb
mov
enter
out
xchg
pop
mov
add
dec
adc
and
sahf
pop
repnz
fnstcw
vshufps
int
jge
xchg
inc
and
push
jmp
outsl
xchg
pop
or
scas
jp
popf
loop
mov
jnp
inc
imul
in
js
dec
cmp
dec
in
iret
pop
int
inc
xchg
lods
inc
mov
mov
sub
fmuls
mov
mov
enter
js
shll
gs
or
cli
xchg
sbb
cmp
xchg
in
adc
dec
push
xchg
in
sahf
addl
inc
and
adc
stos
ficoms
and
cld
lds
aaa
sub
fsubrs
stos
sbb
inc
add
jl
mov
pusha
dec
scas
imul
mov
pop
mov
cmp
pop
sbb
test
ds
jecxz
or
out
rorl
pop
mov
aam
xchg
pop
inc
jle
scas
sbb
insb
jnp
notl
insl
outsb
and
fucomi
sti
lret
faddl
push
push
int3
out
mov
xlat
mov
insl
shll
and
fcoml
and
jns
cli
sbb
aad
mov
ret
mov
lods
inc
lods
jle
aad
fstl
pop
sub
pop
leave
dec
mov
lods
fmull
clc
lods
jae
movb
mov
jb
mov
xchg
sbb
sarl
and
add
mul
outsl
xor
stos
lcall
pusha
movups
mov
mov
xchg
xchg
sub
jo
lret
pop
cmp
lds
or
jle
xchg
cmp
incl
cltd
mov
or
in
xlat
outsl
imul
jb
jnp
loop
push
and
sbb
push
dec
pop
popf
xor
xor
cwtl
insl
or
and
push
hlt
push
push
movsb
arpl
or
mov
push
pop
inc
lcall
jg
fwait
jbe
cltd
inc
scas
sbb
cmp
stc
dec
test
or
shl
lret
xlat
hlt
enter
lcall
inc
test
sbb
sub
mov
sbb
mov
xor
out
pushf
dec
lds
popa
push
dec
sbb
std
sbb
test
push
xlat
addr16
dec
xlat
jle
xchg
pop
jl
sbb
push
dec
push
es
mov
rclb
js
rcr
pusha
pusha
mov
xchg
rolb
jmp
negb
mov
pop
js
cmp
jge
pop
dec
mov
fisttps
in
sbbl
les
cmp
xchg
pop
inc
mov
movsb
fists
mov
dec
lea
xchg
es
sahf
aas
call
out
imul
cs
cmp
lods
cmp
fincstp
xor
mov
push
stos
shr
mov
leave
fldcw
sbb
jge
enter
and
lea
push
sbb
in
mov
xor
dec
ja
das
inc
fisttpll
pop
or
popa
nop
cmpsl
sti
mov
xor
fwait
add
je
out
xchg
push
push
ds
out
mov
pop
dec
sub
xor
pop
mov
pop
mov
xchg
adc
movsb
mov
dec
jg
icebp
stc
inc
jo
dec
jl
adc
sahf
call
jecxz
not
xor
pop
shrl
loop
dec
outsl
mov
cmc
pop
sub
mov
pop
xor
add
mov
into
push
inc
out
clc
or
lock
push
in
gs
aam
imul
frstor
push
stos
jnp
xchg
mov
pop
shr
mov
mov
ds
jecxz
mov
adc
xchg
mov
jg
repz
xor
jle
add
pop
fwait
mov
fldl
push
ljmp
dec
and
dec
out
jmp
insb
fimuls
ss
js
sbb
das
and
adc
aas
test
rcrb
sti
mov
clc
js
scas
jge
mov
push
jmp
rolb
in
bound
xchg
daa
test
sub
jno
sbbb
inc
dec
movaps
fwait
ljmp
in
loop
push
in
loopne
pop
scas
out
xor
mov
push
jns
mov
das
jmp
movsl
xchg
imul
cwtl
pop
cmp
pushf
xor
jae
dec
nop
sbb
aad
mov
loopne
or
sbb
ja
ss
fnsave
rcrb
pop
xchg
out
xchg
mov
fisubrs
adc
adcb
pushf
test
sbb
push
fiadds
int
and
push
xor
dec
sahf
clc
mov
add
outsb
out
mov
xor
sbb
inc
sub
pop
movsl
lock
push
imul
or
inc
outsl
stos
jo
addr16
hlt
in
cmp
sbb
add
push
xchg
pop
sbb
sti
adc
negb
jp
push
dec
mov
push
popf
ss
sub
stc
in
jns
inc
popf
push
add
push
loop
push
adc
lcall
cmp
popw
sbb
int3
shr
mov
inc
pop
aad
sbb
jp
push
or
ja
fucomi
shrl
or
jnp
cmp
dec
jmp
lea
int
loope
sub
imulb
xor
cmp
mov
push
pop
loopne
sub
jge
jb
or
dec
les
outsb
or
daa
pop
lcall
cmpsl
sti
push
push
mov
adc
test
inc
test
ret
push
adc
xor
jmp
lcall
jb
push
push
xchg
xor
xor
lea
mov
push
mov
cltd
stos
mov
cmp
insb
dec
stc
or
scas
and
scas
nop
push
insb
mov
jae
idivl
or
adc
add
call
jne
frstor
fcomp
fs
aad
xchg
pop
mov
call
icebp
push
sbb
jo
jecxz
ss
adc
jge
in
sub
mov
push
mov
inc
pop
mov
sbb
or
jne
int3
mov
std
xchg
add
stc
mov
clc
bound
xor
call
inc
das
adc
gs
leave
or
cmp
inc
mov
int
adc
fmuls
ss
shlb
or
aad
int
int
mov
imull
sub
movsl
pop
and
mov
lret
es
mov
push
add
test
ret
adc
xor
mov
test
aad
pop
push
cmp
jae
stos
outsb
sub
jbe
sbb
fistl
rolb
push
sbb
mov
loopne
ficoml
test
mov
adc
and
adc
pop
pop
rcl
nop
xchg
cmp
fistpl
out
repz
lds
mov
lahf
xchg
outsl
push
stos
cmp
and
andl
adc
repnz
xor
xchg
addr16
inc
loopne
pop
inc
leave
xor
insl
call
out
outsl
mov
push
cmp
xor
test
xlat
push
test
and
or
in
test
repz
loopne
mov
stos
sti
pop
lret
push
add
pop
mov
imul
loope
xchg
xor
mov
xor
jmp
in
add
int
arpl
cmp
or
add
mov
stc
sahf
lcall
test
mov
mov
sub
pop
scas
lret
movsb
mov
jno
xchg
and
jecxz
push
imulb
pop
xchg
pop
adc
incb
xor
aam
nop
sub
aam
cmp
stc
ret
dec
mov
cld
stos
mov
movsl
adc
or
dec
data16
shr
push
xor
in
mov
jg
inc
arpl
aas
test
call
nop
jg
xorb
shll
inc
je
imul
in
xchg
push
insb
xchg
das
sahf
and
pop
call
mov
cmp
orps
inc
inc
clc
lahf
ret
dec
pop
fistpl
pop
outsl
imul
cwtl
into
orb
push
cmp
mov
imul
pushf
sbb
mov
loope
movsb
movsb
sub
sbb
rorb
push
scas
cmc
movsl
jb
inc
adc
push
inc
aas
lds
push
add
dec
ret
pop
mov
cmp
adc
pop
jae
cmpsl
xchg
push
clc
test
out
aad
add
popf
into
adc
idivb
jb
mov
int3
and
neg
in
insb
out
or
lea
pop
enter
push
push
out
or
pop
and
xlat
lcall
dec
and
and
xor
movsl
icebp
pop
fisttpl
push
loopne
pop
fcoms
jp
popa
add
pushf
fsubrs
cli
data16
mov
inc
cmp
pop
ja
inc
adcl
dec
rcrl
adc
mov
lcall
ja
adc
cs
push
nop
cld
rorb
mov
dec
shrb
push
push
jmp
loop
mov
scas
sub
lret
repz
imul
jne
lahf
inc
mov
movsb
or
push
push
mov
pop
int3
out
js
dec
mov
mov
mov
cmpsl
inc
ret
push
xor
inc
pop
js
xchg
ds
sbb
mov
ret
xor
aad
arpl
push
shrl
js
rcr
inc
adc
scas
cld
shrl
cmpsb
dec
fstpt
std
xchg
push
fwait
xor
enter
jp
xchg
mov
cmp
cmpsw
mov
cli
add
pop
test
dec
xor
dec
xchg
imul
fs
adc
jbe
das
popf
cmp
incl
lock
ja
inc
bound
std
jle
mov
add
scas
inc
inc
xchg
cmp
adc
repz
adc
mov
in
fldl
inc
ret
xor
stos
sbb
nop
sar
outsl
mov
je
cmp
cmpsl
push
add
xor
xchg
push
movl
dec
adc
sahf
sub
int3
popf
jae
cmpsb
xor
stos
xor
xchg
jo
aaa
jp
call
mov
ljmp
pop
inc
daa
inc
ljmp
jle
sbb
cwtl
stos
int
add
rcr
shr
insl
pop
sub
ss
jb
cmp
or
xorb
ds
aam
loopne
in
add
lds
ret
and
fld
rolb
idiv
add
das
or
int3
call
and
push
mov
call
add
sti
aad
add
out
int
jmp
xor
out
ret
or
and
jmp
sbb
and
adc
jb
cs
mov
dec
stos
cmp
out
divb
mov
enter
mov
inc
bound
add
mov
es
and
push
shlb
imul
sub
dec
imul
mov
test
sub
insl
imul
in
movsb
ljmp
and
fadds
pop
inc
or
dec
jo
fs
cmp
aas
xchg
in
pop
gs
push
jg
subb
cmp
jge
push
pop
cld
or
xchg
ret
cmpsl
in
dec
mov
fwait
das
test
inc
shrl
loopne
in
sub
stc
cs
pop
push
cld
shlb
ja
aaa
dec
pop
lock
mov
lods
in
and
rcrl
ljmp
outsb
cmp
adc
inc
pushf
addr16
lret
cmc
stos
add
fxtract
stc
dec
cmp
sbb
dec
mov
into
lock
fsubrl
adc
cmp
fldt
in
lock
pop
stos
aad
pop
mov
lock
out
and
loopne
loopne
shl
insb
mov
xchg
xlat
jmp
adc
dec
push
inc
inc
ja
inc
inc
div
push
cmp
out
xor
in
cmp
insb
aad
cli
lcall
mov
rorb
test
repz
xor
inc
add
int3
jmp
mov
fdivrl
pop
pop
aas
add
and
orb
testb
enter
or
into
add
out
pop
pusha
sbb
mov
dec
adc
dec
inc
in
popa
xor
aam
cs
add
jbe
mov
hlt
jo
sbb
lods
gs
repz
test
cmp
ret
sbb
and
icebp
mov
mov
sbb
jmp
nop
fnstenv
jg
dec
xchg
leave
pop
loope
add
add
inc
in
jge
xchg
aaa
gs
sbb
inc
push
fidivrl
push
stc
gs
sub
sub
mov
sbb
xchg
pushl
ja
cmc
fs
sbb
arpl
adc
outsb
xchg
das
xchg
cli
mov
sbb
dec
mov
cmp
inc
jle
cltd
enter
fstl
lea
xchg
cli
subl
sbb
xchg
fildll
shl
inc
out
cld
jle
add
sub
shll
stc
movsl
divb
ss
ficomps
jge
push
rol
lcall
fidivrl
out
nop
xchg
pushl
insl
hlt
jne
rcrl
mov
cmp
imul
lods
mov
adc
ret
loop
fiadds
movsb
mov
clc
mov
mov
jge
xor
jmp
sti
mov
or
mov
stos
hlt
mov
hlt
add
jecxz
push
aaa
lahf
sbb
cli
mov
stc
outsb
cmp
mov
lock
pop
sbb
sti
shll
xchg
popf
lret
sar
inc
int
pop
hlt
test
ret
aam
dec
imulb
dec
pusha
lcall
int3
and
mov
addl
and
sub
mov
ret
mov
mov
loope
out
xorb
pushf
shrb
sbb
rclb
hlt
mov
mov
lret
push
push
sub
cmp
adc
pop
lods
cwtl
mov
loope
addr16
lret
mov
in
mov
mov
pop
sub
stos
xchg
mov
iretw
sbb
repnz
test
jge
sub
data16
test
xchg
cmpsl
and
cmpsb
pop
push
repz
lds
cmp
cmp
cmpsb
mov
xor
ja
and
sbb
leave
and
sarb
mov
mov
mov
outsl
movsb
es
filds
pop
pop
xchg
cmp
cltd
jbe
in
mov
jb
pop
int3
imul
mov
faddl
int3
cmp
addl
in
jmp
test
in
xchg
push
xchg
push
std
xchg
xchg
ret
js
jg
sub
lods
inc
adc
fidivl
fisttps
sub
stos
icebp
dec
sub
sub
jns
je
sarb
mov
jmp
dec
aad
pop
cmp
adc
and
mov
fsubrs
adc
stos
pushf
jg
adcb
sbb
nop
dec
es
imul
sarb
xchg
fimuls
lea
xor
push
xchg
adc
sbb
xchg
lcall
sub
add
mov
jno
cmp
lret
lods
cmp
push
or
repz
mov
jle
into
xchg
dec
dec
dec
mov
daa
sbb
xlat
cmpsl
popf
into
push
mov
cwtl
popf
push
dec
mov
out
fistl
imul
div
sub
mov
out
scas
cwtl
mov
xchg
or
xchg
xor
pop
xchg
adc
or
mov
insl
into
stc
dec
pop
jns
xchg
repnz
dec
lahf
xor
push
xchg
fsubr
cwtl
dec
sub
mov
xor
dec
out
shr
rorb
add
mov
cltd
pop
aas
arpl
add
sbb
test
sbb
push
fucomip
imul
loop
sarb
push
jae
cmp
mov
and
popa
xorl
inc
mov
mov
push
repz
mov
in
ljmp
imul
call
sub
mov
add
mov
insl
lods
fcomp
lock
mov
dec
call
jecxz
incl
xchg
xchg
stos
cltd
adc
push
push
xchg
xor
sti
cmp
rol
lret
adc
mov
mov
ficomps
test
pop
mov
mov
rcl
add
mov
loope
scas
scas
in
dec
sti
sbb
in
ljmp
andl
in
and
ja
jge
aaa
out
movsl
jnp
sub
mov
push
sub
push
sub
scas
adc
jp
outsl
lret
jle
or
sub
xchg
pop
std
xchg
ret
rol
fstp
loopne
aad
pop
push
jle
insb
pop
dec
test
add
ljmp
scas
and
das
jne
rcl
jle
jb
cltd
cli
addb
clc
add
imul
inc
sub
pusha
xor
sub
push
cmp
or
xor
xor
mov
sbb
adc
dec
in
cwtl
cld
mov
fistps
out
lea
test
cltd
jb
sub
xchg
mov
xor
fidivrs
xchg
out
push
mov
rorb
xchg
lods
fstpl
lods
mov
mov
test
rclb
test
push
loope
pop
fstps
test
mov
bound
outsb
push
js
test
popa
adc
mov
aam
shrb
leave
movsl
iret
out
negl
shrd
dec
movsl
jae
inc
jecxz
sbb
cld
out
pushf
fwait
daa
adc
adc
out
aad
push
sbb
popf
mov
lret
ss
popa
sahf
adc
incl
push
mov
jbe
fistl
adc
addr16
jbe
call
dec
mov
dec
dec
fldcw
test
push
enter
adc
pop
insl
add
inc
jp
pop
mov
jo
fadds
cld
or
dec
scas
std
push
fcompp
jno
notl
mov
add
adc
xchg
data16
adc
dec
imul
aam
addr16
mov
ret
or
xor
lcall
fisubrs
xchg
iret
mov
lock
xchg
mov
vmwrite
insb
mov
testl
and
dec
push
lock
push
sbb
repnz
ljmp
in
inc
mov
into
neg
dec
mov
push
push
pop
aaa
xor
add
mov
pop
cmp
fiaddl
movsl
mov
cmp
mov
sub
mov
outsb
call
jecxz
jnp
xchg
or
dec
jb
in
jmp
int3
mov
inc
ljmp
dec
jp
ds
mov
xchg
mov
gs
mov
out
xchg
sbb
je
pop
xchg
mov
jecxz
into
pop
mov
push
pusha
sti
les
gs
cli
push
mov
mov
xchg
cmp
inc
mov
xchg
pop
mov
xchg
sarb
arpl
push
inc
adc
or
cmp
cmc
cmp
mov
xor
jno
xor
leave
mov
push
adc
iret
sub
xor
mov
xlat
xchg
fadds
icebp
icebp
inc
push
sbb
cltd
imul
pop
sub
fs
jno
lods
cmp
xor
out
aaa
push
cmp
cld
das
mov
repnz
xchg
sbb
mov
leave
outsb
xor
mov
jg
or
leave
cmp
into
sbb
jle
push
icebp
mov
adc
cmp
cs
mov
mov
mov
ret
xchg
gs
add
push
mov
jo
mov
test
push
in
lds
das
adc
lods
popl
popf
cld
push
pop
or
sbb
stos
sub
mov
mov
xor
es
jmp
inc
lret
pop
dec
mov
sbb
call
pop
pop
cmp
mov
xor
or
inc
lret
jl
jmp
idivl
adc
push
cmp
pop
in
xor
sbbl
aas
xor
sub
call
add
mov
xor
ja
inc
ds
xchg
jbe
mov
push
dec
fst
push
loope
push
mov
jg
xor
cmp
orb
clc
pop
jbe
xlat
fs
mov
inc
push
push
push
jmp
sub
push
jle
stos
je
ds
nop
popa
jge
stc
in
divb
popa
dec
negl
mov
push
mov
push
mov
inc
xchg
xlat
iret
lods
jp
and
pop
popa
xchg
mov
inc
loopne
movsb
testb
mov
inc
sbb
mov
adc
mov
clc
xor
outsb
add
xor
les
push
ss
inc
cld
in
mov
jl
lea
sbb
divl
movsl
inc
cmpsb
f2xm1
into
push
cmpl
repz
sti
repz
addb
fists
xchg
sahf
xchg
mov
test
jb
push
inc
bound
fs
inc
aad
and
mov
scas
adc
je
xor
mov
faddp
fs
xchg
or
js
and
jp
mov
scas
out
dec
and
test
pop
or
jecxz
lods
xlat
stc
shrl
imul
sub
fildl
movsl
mull
jle
rcll
sbb
mov
sahf
scas
cmpsl
or
mov
js
adc
jge
mov
stc
je
adc
mov
mov
push
outsl
jne
popa
xchg
lcall
out
shlb
sbb
mov
sahf
pop
cmpsb
push
cs
xor
cs
insb
mov
xor
inc
imul
pusha
out
cmp
and
mov
mov
adc
in
ja
cmpsb
add
xor
js
xor
sbb
xor
xor
ret
sbb
sub
xor
pop
enter
push
push
fdivs
cli
dec
mov
ds
gs
sbb
pop
jle
lahf
xor
and
lret
popf
sbb
lds
xor
clc
sbb
cmc
sub
lcall
cmp
xchg
add
adc
fadd
mov
xchg
sbb
movsl
shr
sbb
testb
adc
mov
cmp
pushf
je
jmp
cmp
push
leave
dec
lods
push
aaa
popf
call
mov
jb
ja
out
sub
mov
push
xor
xor
xlat
push
imul
outsb
sbb
dec
js
shlb
cmpsb
clc
sbb
test
xchg
loopne
in
roll
out
jmp
and
roll
inc
cmp
fcmovu
pop
adc
cmpsl
daa
popf
icebp
adc
jp
mov
js
or
mov
mov
cmp
pop
insl
sub
iret
lret
fisubs
fnstenv
pop
fwait
test
pushf
outsb
sub
cmp
lret
cmpsl
int3
and
jo
jl
roll
fs
scas
and
in
cwtl
scas
mov
inc
jnp
and
jae
lock
std
cld
inc
int3
pop
repz
inc
jno
sahf
and
mov
das
jbe
nop
mov
bound
stc
push
cmp
jno
sub
push
and
mov
sti
dec
dec
cld
and
cs
dec
mov
cmpsl
push
mov
scas
test
pop
insl
or
aad
stc
mov
push
adc
jp
lods
push
in
out
push
mov
shrb
mov
inc
jmp
cmp
mov
mov
leave
cs
push
xor
xchg
sbb
xchg
push
call
add
aas
and
ret
sti
fdivrs
frstor
pusha
lock
adc
icebp
sbb
sar
mov
xchg
sahf
inc
stos
aam
loope
cwtl
cmp
push
jns
dec
sbb
jmp
xchg
je
xorb
lea
mov
mov
ds
inc
popa
cwtl
imul
and
test
mov
insb
iret
dec
dec
mov
jle
int
xor
jg
mov
xchg
dec
cmpsl
mov
aaa
or
sbb
popa
outsb
loope
mov
dec
xchg
dec
enter
xchg
push
adc
dec
das
pusha
dec
cwtl
cltd
xchg
ret
popl
mov
cld
test
data16
loope
sbbl
pop
cmp
popf
inc
shl
repnz
push
lods
pop
loop
cmpsl
and
xchg
sub
or
jb
mov
mov
cmpsb
andl
add
call
aam
cmp
rcrb
aaa
xchg
int3
pop
imul
testb
adcb
aam
mov
andb
cltd
lds
or
sub
sti
fcoms
dec
and
mov
pop
js
xor
gs
sub
xchg
int
cmp
inc
and
lods
and
mov
in
imul
xchg
sub
adc
mov
pop
xchg
shl
daa
add
add
dec
xchg
and
adc
dec
test
sbb
or
es
lcall
icebp
add
mov
addl
clc
add
cwtl
adc
xor
dec
xor
fimull
push
stos
dec
scas
sub
mov
stos
ljmp
push
mov
roll
sbb
or
cli
push
inc
scas
roll
jmp
mov
xchg
testb
mov
fcomps
push
or
cmc
insl
das
inc
orl
jnp
nop
iret
in
xor
mov
cmp
inc
lods
xchg
dec
sbb
adc
jecxz
out
jno
push
push
es
in
outsl
inc
pop
icebp
mov
inc
loope
hlt
inc
sub
test
je
push
pop
mul
or
mov
sub
jb
hlt
repz
jne
sahf
mov
lret
mov
js
sbb
fwait
call
test
xor
in
mov
push
add
fsubrp
fadd
dec
lock
out
ret
rcl
or
sub
sti
stos
mov
andb
in
jae
aas
mov
out
dec
cmc
mov
aas
ret
clc
add
lock
jne
popa
xor
push
mov
cltd
mov
jmp
xchg
sub
ret
jp
jecxz
fadds
ret
jp
mov
pop
xor
cmpsb
add
into
cmpsl
out
xor
adc
fbld
je
sti
js
addr16
loopne
mov
mov
push
adc
cwtl
dec
mov
addr16
dec
cmp
pop
fs
aam
add
pop
sub
mov
or
xchg
cmc
lcall
div
mov
xorl
or
lea
sub
out
xchg
lds
mov
rol
lret
xchg
push
and
and
gs
arpl
sbb
mov
mov
push
hlt
pop
pop
pop
pop
fucomp
xchg
call
pop
dec
lahf
xor
scas
sub
push
fwait
pop
push
cwtl
sub
cmp
adc
jmp
mov
pop
inc
push
mov
and
cmp
sub
in
pop
outsb
mov
jbe
cwtl
inc
leave
and
ss
add
mov
mov
jl
out
call
mov
repz
addr16
mov
dec
push
jle
mov
cmp
dec
movsb
mov
adc
fwait
add
adc
orl
mov
cld
in
adc
mull
mov
popa
mov
movsl
adc
cmpsb
xchg
xchg
lcall
pop
cmc
jecxz
dec
rolb
inc
jb
jg
imull
or
cs
xorb
and
xchg
arpl
nop
repz
cld
adc
shlb
adc
mov
push
pop
fwait
jnp
imul
mov
rorb
push
andb
xorl
popf
mov
jno
push
mov
lahf
mov
and
pop
shll
jecxz
xchg
lahf
xor
bound
xchg
push
bound
out
lret
lods
push
push
and
fadd
cmp
jp
aas
movsb
sbb
call
aam
jbe
sbb
add
in
xchg
push
pop
xchg
test
icebp
inc
xor
fcomps
ljmp
jg
sub
push
sbb
fisubl
mov
mov
bound
add
popf
sahf
adc
inc
xchg
cmpl
inc
icebp
stos
pop
add
jo
cmc
sbb
shll
and
cltd
hlt
or
out
add
push
jae
std
sbb
mov
push
rorl
mov
or
lcall
nop
enter
and
insb
mov
int
loope
jbe
outsl
enter
lea
inc
cmp
imul
dec
pop
sti
mov
dec
push
inc
movsb
xchg
mov
mov
add
xchg
fxch
adc
add
push
xor
inc
push
mov
test
rcr
xchg
call
or
or
xor
fcoms
leave
add
sub
outsl
scas
xlat
out
scas
hlt
fcoml
rcrb
pop
outsb
dec
in
xor
cld
jbe
fldenv
fcom
into
lahf
pop
adcb
std
movb
rcrb
out
cld
sbbb
xchg
aas
pop
adc
dec
push
dec
mov
mov
cmp
dec
add
fisubl
lcall
rcll
data16
out
dec
jo
outsb
clc
xlat
inc
cli
aaa
xor
mov
jmp
add
mov
loop
mov
and
push
lds
add
jecxz
nop
push
test
jno
mov
add
inc
pop
pusha
imul
mov
int
mov
lahf
je
loopne
adc
inc
sbb
test
mov
inc
shrl
in
divl
aam
sub
int3
push
pop
int
jbe
dec
add
cmp
push
std
add
scas
cmp
or
dec
xchg
jl
adc
insl
push
cmp
xchg
popa
mov
jg
jp
rcrl
mov
lcall
jae
dec
aas
lea
cmpsb
mov
pop
push
cmp
push
fdivrl
popf
leave
or
adc
andl
inc
int
sub
out
les
cmp
xlat
enter
push
pop
lcall
daa
adc
mov
sbb
out
in
inc
ja
jne
scas
cltd
mov
repnz
or
hlt
fistps
out
lahf
push
int
mov
lcall
addb
repnz
lret
and
cs
cmpsl
cmp
ljmp
add
xor
ret
shrl
push
mov
mov
xor
pop
ret
push
sbb
arpl
aam
les
pop
mov
push
jo
or
mov
test
hlt
rorl
test
push
fcoms
inc
push
stos
adc
cmpsl
les
gs
lret
ret
push
mov
push
loop
imul
shlb
adc
nop
rcll
add
lret
sub
mov
mov
ret
subb
mov
std
xor
lods
daa
mov
enter
xchg
fcompl
iret
jo
push
mov
in
sbb
rcl
dec
lods
popa
inc
add
mov
fwait
or
test
leave
dec
push
hlt
jae
test
or
cld
lahf
or
or
xchg
sbb
sub
or
ret
ljmp
inc
popa
popf
out
fcom
aad
dec
sub
test
fbstp
push
pop
cmp
cmp
mov
xchg
pop
cld
hlt
fsts
rcrb
data16
test
adc
mov
fisubrl
repnz
sbb
in
cmpsb
nopl
pushl
loop
mov
add
adc
shll
cld
dec
xchg
or
sbb
or
pop
sub
in
std
mov
movsl
or
mov
cwtl
xchg
addr16
add
shlb
loopne
mov
nop
cwtl
lds
mov
mov
sbb
and
jne
xor
push
ljmp
cmp
dec
and
rclb
int3
pop
enter
icebp
mov
inc
loop
fdiv
shlb
adcl
dec
push
mov
pushf
xchg
imul
push
lcall
jge
out
pop
sbb
sub
repnz
dec
lret
mov
shlb
add
xor
je
lret
pop
call
mov
or
jno
inc
sbb
sub
or
mov
dec
stos
aad
adc
in
decl
adc
cld
in
sub
dec
cmp
xchg
js
ret
repnz
dec
imul
inc
dec
ja
out
ja
and
dec
or
mov
pop
test
xchg
mov
mov
xchg
xchg
jg
pop
add
or
pushf
arpl
xor
ds
call
sbb
and
rolb
and
xchg
in
aaa
mulb
xorl
rcll
bnd
mov
pop
xchg
outsb
mov
mov
popa
rorb
shll
fadd
ljmp
jo
adc
pop
push
or
aam
in
push
lret
mov
and
cs
xor
jge
movsl
loope
pop
mov
xchg
jecxz
mov
add
xor
scas
push
je
movsl
pop
movsl
or
rcrb
adc
movsb
adc
adc
icebp
cmc
das
mov
je
int
sub
mov
lcall
push
dec
or
fs
je
nop
lcall
cmpsb
add
std
jg
test
pause
inc
mov
push
dec
jg
cmp
pop
sarb
mov
in
es
mov
dec
popf
es
out
daa
xor
sbb
cmp
divl
insb
xchg
add
outsl
leave
loopne
ficoms
fstpt
bound
pop
jne
lret
dec
cmpsl
push
leave
lock
jae
fsubp
push
push
lret
xchg
and
mov
mov
mov
outsl
mov
push
dec
bound
add
imul
aaa
lret
and
sub
xchg
les
ret
mov
sub
or
mov
iret
push
fcomps
and
addl
sub
fsubrl
cmp
dec
and
aas
mov
aam
adc
xor
scas
popa
xchg
stos
jae
mov
push
add
cmp
into
call
push
mov
neg
pop
xor
data16
fsubrl
add
mov
cmp
push
icebp
int
bound
movsl
sbb
cmc
movsl
lcall
mov
cmp
enter
jne
mov
mov
or
sarb
xor
sbb
xchg
mov
sub
in
int3
add
lods
mov
mov
inc
mov
pop
das
nop
dec
jnp
push
sub
sbbl
mov
push
das
test
push
in
pop
fwait
mov
jae
lcall
fnstsw
rcr
stos
rcll
sahf
clc
push
stos
mov
nop
data16
xchg
ss
imul
adc
pop
push
mov
push
mov
mov
rcrl
and
xchg
pop
sub
decb
xchg
in
and
fs
mov
cmpsl
jb
jge
mov
loopne
mov
ljmp
fwait
sbb
jb
popf
pop
cltd
xor
dec
fwait
nop
shll
in
mov
adc
push
test
push
cwtl
pop
cmp
adc
pop
sbb
push
orb
aas
fcomps
jmp
fmull
push
mov
dec
imul
sbb
dec
bound
sub
int
xchg
xor
dec
icebp
xchg
xorb
in
shll
insl
add
in
ja
pop
mov
rcr
pop
aam
sub
aad
std
shll
sub
fsubr
inc
jmp
fisubs
movsb
inc
inc
fstl
mov
adc
pop
mov
sti
ljmp
stos
fstpt
aas
ljmp
idivl
jge
cmp
xchg
inc
sti
mov
arpl
push
out
pop
mov
cmp
mov
mov
pop
add
sbb
and
icebp
push
test
rclb
xchg
jae
inc
mov
adc
xor
repnz
rcll
arpl
xchg
test
jecxz
out
sub
sti
pushf
adc
mov
push
xchg
dec
std
inc
jbe
lods
test
cmp
arpl
sbb
pop
ja
bound
pusha
mov
sahf
sub
mov
lock
dec
or
pop
jmp
ret
lds
pop
adc
jnp
aas
and
push
push
push
test
in
sbb
test
adc
rep
or
sub
ja
pop
dec
pop
lods
xchg
sub
or
and
and
mov
push
fnstcw
dec
inc
inc
jns
icebp
iret
jae
xchg
dec
and
ret
push
aas
add
cmp
mov
and
dec
out
or
arpl
xlat
insb
inc
adc
sub
mov
test
sub
lcall
aad
pop
mov
mov
lods
icebp
mov
sub
daa
dec
cmp
sbb
popa
in
imul
xlat
pop
jg
loopne
inc
jnp
mov
add
lods
in
testl
dec
mov
adc
cmc
mov
mov
dec
out
js
mov
push
xchg
xchg
add
lock
mov
out
sub
adc
or
ds
mov
inc
sti
cmpsb
fistpll
sti
mov
ljmp
mov
inc
jae
mov
sti
mov
aam
sbb
repnz
mov
fisttps
dec
clc
pop
add
aam
xor
push
mov
jmp
xlat
xchg
add
cmp
ret
xor
xor
int
and
insb
ja
xchg
jg
lds
or
push
jp
lock
test
jbe
lcall
rcrb
xorb
insl
cmp
sub
xor
adc
mov
ret
daa
mov
pop
fnstsw
jle
and
sub
lods
or
lods
inc
repz
fidivs
xchg
insl
jmp
sub
iret
pop
cmp
daa
outsb
jle
mov
fcmovnbe
pop
mov
sub
push
in
push
adc
cmp
pop
aad
cmp
cmp
sub
jnp
xchg
sub
xor
fdivp
lret
mov
jg
or
hlt
adc
mov
das
out
cmp
pop
jo
rcll
jmp
sbb
xchg
jbe
adc
fnstenv
xchg
and
add
mov
fs
push
cmp
pushf
xlat
fiadds
jae
aam
mov
adc
or
lahf
mov
sub
xor
movsl
xor
std
jbe
pcmpeqd
mull
cmp
leave
subb
dec
ss
addl
adc
mov
push
pop
mov
mov
out
adc
push
push
jo
je
or
jnp
leave
sbb
jmp
xor
mov
leave
popa
mov
ja
ret
fbstp
cltd
xchg
lods
xchg
dec
jo
popa
xor
inc
inc
insl
push
or
dec
das
ljmp
mov
loop
add
inc
push
loope
add
fdivr
sbb
pop
or
es
pop
push
pushl
push
cwtl
xor
insb
mov
sbb
mov
adc
cmpsb
push
sti
int3
test
ds
ret
xchg
xchg
iret
ss
lds
popa
push
cwtl
xchg
xor
or
push
js
cmc
frstor
jo
or
mov
sbb
jae
dec
dec
cmp
push
pop
push
pop
into
cmp
inc
dec
cmp
mov
inc
stos
out
adc
push
popa
stos
jge
pop
xchg
cmp
loop
pop
xchg
or
imul
fwait
les
dec
xor
addr16
out
aas
sarl
js
mov
in
xchg
das
sti
sbb
add
dec
imul
sbb
addl
arpl
inc
ja
dec
mov
outsb
pcmpeqw
inc
nop
sbb
test
sub
mov
add
fwait
imul
pop
cmpsb
in
lret
dec
xor
dec
cltd
xchg
sub
movsb
sub
jmp
std
jl
push
insl
in
stos
add
outsl
fwait
xchg
push
jns
fs
gs
mov
int3
push
ljmp
adc
pop
fisubl
sbb
lret
add
fnstcw
adc
aam
push
and
pop
or
sbb
jb
xor
and
push
shl
rcrb
shlb
stos
jne
push
jp
imul
sarl
xchg
sub
mov
pop
imul
push
loopne
ret
xchg
cld
outsb
push
aad
or
pushl
cwtl
into
ja
aas
inc
xchg
in
lret
ud1
or
add
iret
or
cmp
dec
mov
xor
sbb
pop
add
xchg
sbb
jne
fisubrs
inc
jno
dec
pop
mov
sub
je
mov
inc
std
cmp
jl
shl
out
adc
push
push
sub
popa
rorl
lods
pushf
js
mov
dec
jmp
repnz
divl
pop
sub
jg
sub
xchg
repnz
sbb
cmp
daa
mov
cmp
cmpsb
ffreep
inc
xchg
jne
mov
or
ja
dec
int
xor
add
mov
das
les
nop
dec
rcll
rcr
inc
pop
push
out
loopne
mov
sbb
cmp
outsb
out
scas
mov
fidivl
es
int
dec
cld
sbb
add
jl
cld
js,pn
fisubrl
mov
setno
jmp
sbb
les
jmp
adc
pop
dec
lcall
fs
add
adc
inc
sub
roll
add
sub
push
scas
movsb
dec
cmp
bound
mov
fs
sub
das
adc
gs
arpl
jle
dec
stos
out
sub
getsec
repnz
sbb
out
mov
and
mov
jle
sbb
push
lcall
stos
pop
insb
iret
xchg
xor
xor
fwait
dec
mov
bound
adc
dec
xchg
ss
mov
jns
cmc
jl
fmul
inc
adc
and
xchg
xchg
push
js
xchg
jo
add
mov
dec
es
jg
jnp
add
test
test
mov
lods
sbb
in
mov
std
rcrl
sarl
fwait
mov
lret
mov
push
xorl
das
hlt
and
sbb
cli
test
xor
pop
push
insl
jae
out
mov
dec
cmp
and
push
push
or
arpl
mov
push
in
jno
outsb
fiadds
sub
add
or
gs
mov
rorb
in
pcmpgtw
add
push
scas
lods
out
mov
fisubl
add
add
arpl
cld
sbb
mov
inc
fsubl
arpl
clc
addr16
arpl
xchg
iret
int
and
out
sub
inc
pushf
push
push
pushf
sub
mov
movsb
lret
rcrl
shrb
xor
stos
push
test
scas
jno
jns,pn
fwait
test
jmp
aaa
hlt
jmp
ds
sbb
dec
sahf
jp
jg
and
rcrl
imul
sub
dec
sahf
shll
sub
and
xor
lods
push
push
lock
xorb
mov
pop
pop
pop
jle
cmpsb
pop
scas
cld
mov
pop
fwait
loop
xor
stos
fs
sbb
cld
mov
aad
mov
in
arpl
cmp
dec
sbb
imul
pushf
xchg
xlat
inc
sbb
pop
lret
int
jecxz
mov
mov
inc
js
ret
cmp
ds
pop
imul
sub
mov
jle
shll
pop
ret
lcall
loope
ffreep
xchg
push
fistpll
xchg
lds
scas
clc
jg
jge
pop
fcomps
push
fs
inc
js
dec
pop
xor
or
push
call
dec
insb
lahf
pop
push
test
mov
and
into
insb
icebp
push
mov
aam
xchg
dec
fsubrs
xchg
hlt
mov
fcmovne
mov
pop
dec
das
out
or
in
aas
repnz
ljmp
inc
leave
bound
movsb
les
jg
ds
lcall
fcoml
scas
or
jge
add
add
and
out
jnp
out
lods
sbb
push
movsl
sub
push
xor
mov
xchg
jge
and
sub
nop
inc
xchg
sahf
cmp
outsb
dec
xor
daa
mov
out
addl
and
lock
add
data16
ss
xchg
jp
or
aam
pop
out
inc
stos
cld
or
jmp
adcl
ljmp
add
inc
je
mov
sbb
mov
pusha
sub
scas
hlt
pop
dec
adc
mov
push
inc
sub
outsl
sbb
shll
mov
push
mov
inc
lret
cmp
in
pop
xlat
mov
out
and
out
mov
cld
fcomps
mov
xchg
inc
pop
jecxz,pn
ret
loop
add
add
lret
xor
aad
ret
jnp
lcall
mov
fcoml
call
ret
inc
jmp
and
lcall
and
shll
outsb
dec
mov
or
in
mov
cmp
int
xchg
dec
dec
popf
icebp
and
mov
ja
cld
cmp
xorb
test
adc
sbb
sub
xor
cli
divl
notl
jae
jg
es
adc
call
push
adc
push
dec
cmp
mov
adc
jg
in
aas
pop
lret
dec
xchg
and
shl
stc
inc
loop
sub
push
sbb
mov
arpl
sub
lock
cmpb
jecxz
fcmovnbe
jl
out
push
aad
cmp
push
fwait
out
mov
sbb
add
outsl
sub
aas
cmp
mov
mov
shrb
ret
insb
mov
dec
add
inc
mov
push
or
sbb
xor
push
and
cld
mov
cmpsb
jmp
sbb
jno
mov
xor
out
xlat
push
sub
lods
xor
out
das
loopne
popf
adc
mov
ret
imul
or
fwait
xchg
or
call
adc
jecxz
push
or
aas
sarb
push
aaa
inc
loope
pop
ret
cmc
lahf
cwtl
xchg
add
int3
mov
jl
mov
shrl
mov
into
xor
add
inc
flds
dec
aad
push
xor
lods
pop
test
lcall
push
addr16
in
dec
rcll
jns
insl
dec
pop
sarb
lods
push
adc
dec
mov
push
jns
mov
movsb
pop
pop
insl
loope
lahf
mov
lahf
movsl
js
js
movsb
js
and
mov
or
add
insb
sbb
repz
arpl
cwtl
add
mov
mov
dec
mov
push
push
loopne
add
repz
mov
jo
fmulp
js
mov
xor
jns
das
jl
in
daa
pop
arpl
xor
xchg
rcr
mov
into
es
sti
aad
jg,pn
std
jl
cmpsl
jbe
into
jmp
sbb
pop
repz
or
push
shlb
je,pt
adc
fst
and
mov
lea
aad
enter
adc
sub
jns
fwait
cli
sbb
mov
cmpsl
repnz
arpl
ss
sti
jnp
lea
mov
mull
add
inc
icebp
mov
ja
jo
test
fstpt
ja
jmp
aaa
lea
hlt
mov
inc
fcoms
loope
insl
out
jle
int
test
fisubs
lret
add
cltd
aam
add
das
mov
mov
sub
sahf
rolb
sub
and
jg
clc
jmp
mov
mov
fistpll
movsl
xor
mov
sbb
incb
rclb
ret
inc
dec
adc
sbb
adc
icebp
jle
andl
scas
sub
pop
dec
ds
es
or
jle,pt
push
jo
mov
sub
adc
jecxz
sbb
imul
ss
add
lret
cmp
inc
jge
adc
xlat
test
loope
mov
in
inc
mov
xor
enter
cmpsl
cmp
pop
mov
adc
sub
mov
sub
pop
dec
in
or
jae
xor
pushf
jg
in
mov
adc
dec
pop
shrb
bswap
es
mov
push
iret
in
cmc
fsubs
cmp
mov
cltd
dec
popf
fmull
pop
pop
les
mov
popf
outsl
lret
jmp
sub
orb
xchg
jmp
sub
mov
int
sbb
fldt
lods
enter
daa
push
pusha
push
lret
imul
jge
pop
hlt
add
dec
jb
movsb
pop
pushf
jnp
cmc
and
fucomp
lea
add
stos
scas
mov
rcrl
mov
cmp
inc
stos
scas
push
orl
jmp
push
and
in
mov
xchg
iret
push
inc
push
shrb
adc
jo
out
dec
dec
xchg
and
pop
stos
push
push
cmp
aas
mov
pushl
test
pushw
push
scas
sub
stos
jnp
in
and
in
out
or
movsl
jbe
imul
mov
adc
loope
mov
aaa
lock
mov
js
add
adc
push
mov
mov
les
fdivp
icebp
mov
nop
lahf
mov
cwtl
dec
imul
lret
and
icebp
jo
lret
pop
fidivs
repnz
cli
shll
mov
cmp
pop
jge
add
cmpsb
out
std
dec
sbb
repz
iret
sbb
testb
fldt
jmp
jo
mov
loop
test
arpl
mov
inc
jmp
jae
daa
inc
shll
and
std
js
mov
push
mov
sbb
sub
mov
push
rcl
lret
fwait
outsl
dec
xchg
sub
imul
shl
in
mov
pop
cmpsl
adc
insl
enter
mov
inc
fistpll
xorb
jns
and
cmp
push
jmp
bound
inc
inc
pop
push
sbb
fwait
scas
xchg
push
es
add
pop
inc
jnp
jb
repnz
test
int
xchg
stc
mov
mov
jecxz
sar
bound
and
or
mov
xchg
or
sbb
push
xor
mov
scas
pop
stc
fldt
int3
adc
cmpsl
jl
mov
daa
and
inc
scas
cli
cmp
add
jo
lahf
jae
or
pop
cmpsb
data16
repz
pop
mov
ficoml
push
push
mov
psrad
inc
or
or
jo
into
dec
aad
xchg
gs
adc
push
test
adc
mov
bound
mov
lahf
ret
cmp
fdecstp
or
popa
sbb
out
inc
repz
jmp
pusha
xchg
cmp
sub
inc
cmp
mov
pushf
mov
mov
stos
lods
xor
shlb
push
ss
jo
in
into
lahf
dec
jne
inc
das
lcall
roll
add
sub
je
inc
fldenv
test
movsb
and
jne
dec
sub
mov
mov
fistl
aaa
sub
add
lods
inc
jbe
hlt
cmp
imul
xchg
roll
shll
mov
dec
stc
fwait
mov
add
mov
dec
xchg
mov
aas
add
nop
sub
adc
xor
addr16
pop
in
loope
pop
fdivp
icebp
in
lret
mov
mov
repz
fsubs
pop
lea
inc
mov
jge
or
sbb
ftst
cltd
or
mov
scas
xor
mov
dec
ljmp
mov
out
pop
test
mov
pop
mov
mov
jmp
mov
jbe
adc
fucom
sbb
lret
push
xorl
jl
jno,pt
test
es
push
or
leave
sbb
adc
mov
cmp
dec
pop
sarb
jns
lcall
xor
pop
jp
xor
dec
adc
jp
xor
mov
inc
adc
push
add
push
add
dec
outsl
test
subl
pop
xchg
pop
mov
jmp
dec
repnz
inc
ljmp
push
jp
fwait
ss
cs
add
rorb
imul
jmp
lock
sbb
or
xorb
pusha
jno
mov
arpl
lods
sub
jo
arpl
shrl
ds
scas
cltd
into
fnstcw
jnp
sub
dec
scas
cmp
ds
das
stos
xchg
cmpsl
jno
push
enter
pop
sbb
mov
clc
aam
inc
cmp
fs
repz
iret
dec
sbb
pop
test
mov
or
push
pop
mov
je
mov
push
mov
fcoms
jmp
int
xor
fbstp
out
aad
adc
mov
mov
sub
xchg
sbb
pop
repnz
cli
ret
cli
jae
pop
xchg
imul
mov
aas
into
frstor
or
lods
xchg
mov
cltd
stos
pop
enter
outsb
stc
or
xchg
lahf
jbe
idivb
jecxz
fimuls
and
push
mov
cmp
sbb
mov
push
cmp
in
jmp
mov
ficoml
sbb
out
fs
movsl
inc
pop
or
int3
pop
popa
mov
fisubs
pop
lods
mov
or
mov
in
mull
and
mov
dec
lock
fadds
stos
ljmp
adc
roll
stos
or
addb
pop
rol
sub
bound
leave
dec
xchg
inc
pop
push
pop
dec
adc
or
and
mov
popf
ja
fiaddl
cli
addr16
dec
sbb
push
jb
ss
movsl
pop
and
fldl2e
ret
shl
enter
pop
fwait
or
pushf
push
sub
mov
push
mov
xorl
insl
pop
inc
out
rorl
dec
xchg
dec
repnz
pop
jne
and
push
sahf
insl
mov
push
sbb
imul
test
loopne
pop
repnz
repnz
sbb
push
and
test
inc
movb
push
push
inc
dec
jle
repnz
inc
mov
mov
adc
dec
sti
ret
cmc
xor
leave
jmp
mov
xor
cmp
add
jp
jns
add
out
movsb
sub
ret
sub
dec
stos
mov
push
scas
sbb
jne
movsb
mov
stos
fstps
xchg
pop
fidivrl
pushf
sbb
in
flds
test
cmc
mov
test
and
xchg
xchg
mov
add
mov
arpl
push
fdivp
ja
cltd
int3
in
cs
push
sar
mov
xor
hlt
shrl
cli
stos
mov
mov
lock
inc
data16
push
inc
pop
icebp
adc
leave
mov
in
repz
sbb
enter
test
mov
dec
lods
fistl
mov
stos
repz
push
dec
cmc
push
jae
hlt
sub
outsl
jae
mov
mov
sub
jl
fists
pusha
xchg
mov
mov
push
or
xor
mov
aas
mulb
mov
dec
gs
fcomps
adc
nop
es
push
pop
or
sti
loopne
pop
int3
pop
insb
je
rcrl
jp
mov
and
movsl
xchg
cmp
mov
cmp
aas
push
adc
pop
orb
in
dec
stos
shll
xor
leave
mov
xor
out
push
dec
mov
daa
lahf
adc
loop
adc
add
or
add
mov
das
fcoml
jo
into
add
xor
test
xor
and
repz
std
cld
adc
leave
or
lds
pop
or
jp
test
orb
js
scas
push
pop
inc
gs
mov
cltd
ret
sti
rcl
shlb
outsb
jno
inc
sbb
iret
xlat
mov
push
ret
std
xor
vpunpckhqdq
imul
lahf
ds
repnz
gs
mov
sti
mov
call
pusha
insl
rcrb
xor
jl
or
pop
inc
fs
out
sbb
dec
add
ja
mov
mov
int3
or
out
adcb
leave
xlat
push
or
cmp
jp
fiadds
sbb
cmpsl
data16
adc
out
adc
aaa
lock
mov
cs
test
and
sahf
fcomps
jno
pusha
adc
and
sbb
or
sbb
int
sub
mov
sub
int3
pop
gs
adc
xor
fs
addr16
push
loop
stos
push
adc
dec
hlt
enter
pop
int
jl
push
xchg
jnp
adc
ds
decl
rorb
cwtl
out
cmpb
in
xor
call
and
push
or
jmp
in
sub
jmp
pusha
cmp
test
into
frstor
repnz
add
or
test
dec
xchg
enter
cmp
sub
jns
or
inc
fiadds
jl
jb
push
sub
push
xor
lock
push
repz
mov
mov
sub
stc
scas
inc
pop
fistpl
mov
popf
jns
pusha
out
xor
cmpsb
aaa
push
lods
inc
pop
iret
sbb
push
jmp
and
sub
filds
jg
xor
mov
mov
adcb
data16
ss
pop
cmpsb
lret
scas
inc
scas
push
test
mov
movsl
sbb
pop
xor
call
and
and
loope
sub
negb
mov
jmp
xchg
fadds
xchg
into
ficomps
cmp
enter
scas
cmpsb
addr16
int
enter
sbb
in
mov
adc
leave
pop
dec
mov
shrl
aas
test
cmp
inc
push
adc
adc
in
mov
jge
mov
fisttps
jb
mov
push
int3
lock
sub
out
mov
in
cmp
cmp
sbb
dec
push
roll
cs
out
push
xchg
mov
mov
inc
dec
aad
test
mov
ror
movsl
mov
int3
addr16
cmpsl
xor
in
in
ret
mov
mov
rcll
push
ljmp
mov
cmpsb
data16
insb
dec
imul
shll
xorb
fprem
or
mov
sub
or
cmc
mov
push
fdivs
loope
dec
mov
imul
sbb
mov
push
jecxz
xor
popf
mov
inc
push
cmp
frstor
adc
jae
xor
fcomi
jbe
sti
inc
and
push
mov
loopne
jmp
and
jle
or
jp
mov
movsb
xchg
jg
ljmp
xchg
mov
cmp
sub
es
add
inc
movsl
xchg
mov
enter
lcall
ficompl
sub
sub
mov
iret
sahf
mov
aad
jl,pn
jl
mov
and
fcomps
pop
mov
test
inc
jge
adc
movsl
push
cmpsb
ja
xor
test
push
mulb
lea
add
add
pop
pop
push
jecxz
out
incb
insl
sbb
inc
lret
ror
mov
inc
sub
maskmovq
testl
cld
and
das
mov
fdivr
pop
push
push
mov
in
fisttpl
mov
inc
push
outsb
jl
or
or
lods
cli
jnp
cltd
cld
ret
add
push
clc
scas
xlat
dec
fcomps
add
dec
adc
outsl
pusha
cmp
lds
push
hlt
xor
mov
jo
xchg
and
push
lds
fstpt
mov
loope
mov
ljmp
pop
andl
sbbl
jbe
mov
push
xchg
lds
pop
mov
cmc
sbb
enter
xor
pop
push
xor
lcall
mov
mov
xor
iret
cmpsb
add
je
int3
xor
dec
inc
clc
insb
testl
lods
outsb
mov
or
imul
and
mov
xor
adc
jae
sbb
add
add
mov
xchg
mov
fisubrl
dec
or
insl
sub
int
fildll
jg
jmp
jnp
hlt
jle
xchg
add
aas
jno
mov
push
and
cmp
loopne
rcr
sub
xchg
loope
mov
outsb
cmc
sub
jp
and
cmpsl
rclb
jne
lock
adc
lret
mov
faddp
mov
int3
cli
mov
inc
mov
shll
imul
das
repz
or
inc
xlat
outsb
movsb
fcomi
lea
fwait
inc
and
imul
xchg
inc
jnp
lea
sbb
fwait
xlat
je
xchg
hlt
sub
sub
bound
cltd
js
jl
mov
or
insb
lret
push
mov
lcall
adc
mov
mov
stc
mov
lahf
insb
xor
mov
outsl
or
rcll
rorl
push
lock
sub
cmpsl
mov
cwtl
cmpsb
sbb
dec
mov
dec
test
mov
xlat
pop
xor
mov
push
push
jo
adc
and
shrl
xor
bound
popf
addb
cmc
inc
push
jno
adcb
lods
jg
or
mov
pop
jg
cld
and
mov
sbb
into
mov
ds
dec
insl
rorb
lods
js
push
lret
and
fldcw
out
lea
mov
hlt
jnp
inc
pop
fcmovnb
lahf
popa
lret
or
jmp
jns
mov
pop
push
out
pop
pop
mulb
and
xor
jge
mov
and
jns
aaa
lcall
cmc
ret
adc
push
ffreep
ret
cmpsl
push
test
cmpsl
cmpl
sub
cwtl
in
xchg
mov
iret
adc
mov
mov
push
mov
icebp
cmpsb
mov
mov
jmp
mov
lret
mov
pop
js
mov
out
int
inc
hlt
dec
hlt
add
pusha
xchg
mov
xor
movsl
xchg
sbb
dec
dec
push
fiadds
sub
inc
fcomps
scas
cmp
dec
idivl
fbstp
sub
xor
xchg
push
fsubs
xchg
test
cmpsb
or
insb
ds
in
push
add
dec
fnstsw
pop
dec
orb
inc
mov
out
mov
mov
ds
sub
jle
icebp
pusha
xor
sbb
inc
cmpsl
and
loop
imul
loopne
fcomp
shlb
fwait
shrb
push
cmp
shlb
test
adc
lods
jecxz
in
xor
fnstenv
mov
cwtl
sti
ret
lret
outsl
mov
push
xchg
adc
xchg
pop
in
aas
cmp
std
out
cli
into
mov
pop
push
test
lret
pop
mov
adc
test
xor
lds
jbe
dec
jp
push
inc
nop
add
loope
cmp
cwtl
fbstp
aad
mov
xchg
loope
sbb
imul
shrl
mov
arpl
cltd
jg
sbb
xor
pop
pusha
mov
add
bnd
lcall
inc
fcmovb
test
jle
repz
lods
imul
in
jp
cmp
xor
cmp
ds
pop
std
jmp
or
cltd
adc
imul
inc
cmp
aaa
or
sti
xlat
rolb
jno
ret
cmp
and
jmp
int3
push
or
cmpsl
inc
inc
mov
sub
xchg
jg
mov
jmp
mov
adc
into
ja
aas
lock
push
xchg
cmp
pop
or
jle
cmp
xchg
das
scas
roll
les
sti
pop
pop
stc
xchg
ljmp
sbb
fs
lods
mov
arpl
into
sbb
pop
pop
dec
push
and
and
mov
movsb
adc
lods
loope
pusha
mov
enter
adc
sub
jg
mov
inc
sbbl
sub
inc
incb
pop
fs
cld
fwait
int
aaa
xchg
rclb
lods
and
popa
ficoms
jmp
xor
inc
leave
in
inc
rolb
push
add
jmp
shrb
fiaddl
les
push
dec
xor
ret
mov
fdivs
hlt
xchg
into
loopne
aad
fldenv
jo
sbb
insb
push
add
mov
movsl
stos
push
shrl
inc
xorl
or
fistl
add
fwait
sti
cwtl
loope
sbb
adc
sar
lds
inc
xchg
cli
lds
sahf
mov
xchg
ret
push
add
fcomps
cmc
jmp
sbb
sti
sbb
add
mov
jb
arpl
lea
or
sub
test
cwtl
add
sbb
xor
bnd
jl
repz
outsb
pop
in
out
imul
or
jbe
add
insl
mov
jg
push
mov
inc
xchg
stos
fildl
mov
pop
mov
add
lea
rclb
aas
ret
or
jle
xor
daa
xor
add
push
adc
xor
sub
je
mov
sub
test
sub
pop
xchg
rcrb
cmp
mov
cmp
or
cmp
sarl
push
or
jle
adc
repnz
sub
dec
jo
jmp
dec
loop
call
out
xor
les
pop
cli
sbb
push
gs
idivl
pop
mov
mov
shlb
sbb
dec
or
jl
movsb
mov
mov
sbb
les
aaa
or
insb
dec
rep
add
ret
adcl
pop
mov
push
sbb
jno
push
xchg
loope
jne
aad
scas
mov
out
imul
sub
insl
stos
sub
int3
push
loopne
jle
adc
push
mov
pop
add
in
call
cmp
mov
push
outsl
in
and
out
enter
pop
dec
jb
xchg
lret
ss
jle
jbe
imulb
xchg
dec
mov
sub
rorb
gs
inc
sar
add
mov
test
movsb
push
xor
jge
and
das
push
cmp
dec
lret
mov
sub
and
xchg
loope
gs
xlat
xor
xchg
cmp
mov
negl
inc
adc
aas
ror
loop
dec
or
inc
mov
aam
jb
xor
dec
mov
add
dec
xchg
inc
jp
ficoms
fnstcw
sbb
xchg
cmp
or
mov
aas
pop
in
sbb
cmp
stos
jae
fwait
cmp
imul
rcr
mov
jnp
mov
lcall
and
push
mov
arpl
adc
popf
sbb
or
nop
imulb
jecxz
es
ljmp
mov
leave
lret
ljmp
cltd
out
or
jp
inc
icebp
movsl
das
xor
mov
movsl
sub
fisubl
xchg
mov
fsub
cld
cmp
insb
call
jp
inc
mov
rolb
and
xchg
cmp
in
rcll
movsb
and
ljmp
jge
lods
in
pop
dec
les
addr16
fidivrs
stc
inc
scas
jnp
sbb
fcomi
fs
xchg
or
jmp
in
mov
xor
jp
ljmp
add
addb
movsb
dec
and
lret
in
inc
ljmp
xlat
jge
lock
mov
pop
mov
shll
pop
dec
or
out
cld
aad
loop
pop
int3
stos
cmp
outsl
xchg
or
adc
fiaddl
not
jg
pop
xlat
dec
fcompl
mov
and
cmp
cmp
or
lods
popa
lods
mov
lds
mov
sub
jb
in
scas
mov
adc
adc
xchg
xor
cmc
cwtl
mov
xor
mov
push
les
das
xchg
mov
cmpsb
movsb
inc
jbe
mov
xor
jnp
scas
mov
div
xchg
shrl
lret
jne
test
inc
xor
imul
repnz
mov
ljmp
pop
xchg
pop
test
bound
in
xor
cmp
adc
into
fwait
out
sbb
nop
leave
mov
lea
andb
or
sub
mov
decb
mulb
push
dec
mov
inc
adc
inc
mov
test
dec
gs
jl
shlb
push
adc
cmp
and
pop
cli
fld
fisubl
dec
mov
inc
pop
idivl
cmp
push
sbb
xchg
or
push
int
stos
jnp
xor
sahf
xchg
clts
xchg
imul
and
mov
aad
rorl
cwtl
add
mov
aas
pop
movsl
and
mov
cmp
lahf
cltd
and
faddl
xor
sub
orb
mov
loop
add
out
jbe
and
pop
cmp
adc
cmpsl
addl
divl
adc
lcall
lret
cmp
xchg
xchg
fldl
lahf
pusha
inc
loopne
movsb
fnstcw
cmp
jl
and
icebp
xor
dec
add
ja
nop
or
das
xor
lcall
ds
popa
test
leave
shlb
adc
mov
roll
fildl
insb
mov
gs
scas
inc
push
pusha
sti
js
test
sbb
add
mov
cmp
arpl
das
xor
inc
cli
mov
movsb
jb
sbb
loope
gs
mov
adc
and
mov
in
xchg
stc
or
xchg
xchg
fcmovnb
inc
int
pop
mov
pop
dec
mov
mov
lods
add
jne
xchg
dec
or
cmp
mov
jno
shrl
xchg
mov
sub
inc
lods
iret
or
jo
imul
xor
hlt
jne
add
push
mov
out
mov
loop
or
in
sub
outsb
add
add
fbstp
es
loop
sub
push
pop
sbb
sub
dec
sub
pop
cmp
pushf
popl
pushf
add
push
sub
ljmp
loop
mov
inc
mov
sub
xchg
data16
inc
adc
xor
rorb
xchg
into
aas
mov
cmp
icebp
jbe
aaa
icebp
lods
push
sahf
jg
push
add
je
movsb
jb
lods
aas
xor
jns
pop
mov
jno
pop
shll
cld
inc
daa
sbb
cld
inc
jb
cwtl
js
ss
or
fcoms
call
call
push
push
cmc
jmp
and
mov
ret
dec
adc
push
pop
je
loopne
mov
pushf
sub
sbb
out
adc
js
pop
cmp
imul
in
mov
xchg
ja
stos
xor
jl
sbb
stos
mov
cmp
icebp
daa
jns
push
adcl
jbe
mov
lds
test
xor
adc
in
add
and
mov
sub
xchg
jle
loop
and
test
addr16
sub
aam
cli
out
sahf
mov
sbb
popa
insl
xchg
lret
int3
bound
inc
lock
jns
mov
fs
xchg
adc
popa
sub
mov
xchg
xor
lret
in
mov
scas
add
dec
shrl
int3
jbe
dec
cwtl
in
xchg
fs
rorb
stc
push
dec
jmp
sbb
add
imul
sub
cltd
das
into
adc
lea
jo
xchg
outsb
pop
sbb
xor
test
insb
insl
cli
cmp
sbb
mov
mov
ljmp
mov
and
inc
xchg
mov
dec
inc
pop
dec
in
ret
mov
pop
push
adc
inc
stos
pop
jecxz
mov
cmpsb
mov
lret
sbb
push
fcmovb
inc
in
ljmp
popa
lds
mov
insl
or
push
or
xchg
cmpsl
adc
pop
mov
arpl
pcmpeqw
in
mov
jl
sbb
lds
cmpsl
jmp
fildl
sbb
mov
fcmovb
iret
add
js
or
out
dec
fstpt
mov
andl
insl
cmp
popf
push
addr16
push
out
pop
lret
pushf
mov
jbe
and
iretw
repz
cld
js
cmp
jecxz
fs
int3
lods
jle
sub
push
fildl
jb
sub
xchg
sbbl
loope
out
mov
divl
mov
push
pushf
mov
js
cmp
mov
sbb
inc
and
addr16
cli
or
xor
cmp
js
es
outsl
dec
dec
dec
jae
push
and
stc
jle
pop
ret
sub
adc
pop
in
call
enter
add
and
adc
cwtl
sbb
aas
shll
aad
iret
pop
xor
or
mov
repnz
into
ss
popa
loop
sub
xor
movsl
scas
xchg
rcrb
cmc
inc
mov
jmp
adc
mov
repnz
jmp
ficoml
popf
xchg
and
mov
add
and
add
es
inc
jns
jge
shrb
out
movsl
sbb
lods
lcall
jecxz
ret
push
push
cmpsl
or
test
mov
mov
jecxz
inc
test
fcmovnbe
fs
fnstenv
jg
in
adc
mov
adc
mov
mov
imul
das
lods
adc
fs
sbb
imul
push
jmp
push
stc
and
scas
xchg
mov
fistl
loop
mov
aas
loope
imul
xchg
out
stos
adc
xchg
pusha
mov
arpl
xchg
js
int3
jns
ffreep
out
stos
ret
xor
adc
div
cld
lret
add
data16
sbbb
lret
popf
cmp
dec
repz
test
add
inc
int3
lret
lods
or
cmpsb
jno
stos
call
std
repz
push
into
inc
xchg
push
shll
jecxz
movd
hlt
jg
ja
sub
pop
cmp
out
and
mov
sbb
rclb
sub
xchg
push
mov
mov
ljmp
pushf
popa
add
shl
xor
ja
aaa
std
repz
cmpsl
das
ret
xor
std
hlt
out
xchg
dec
inc
dec
js
push
jnp
lcall
mov
jnp
mov
sbb
loop
pop
push
cmp
fldcw
sbb
push
jl
mov
test
clc
jno
add
mov
mov
xchg
stos
sbb
mov
data16
lret
jne
xlat
out
clc
outsb
scas
lret
repnz
xchg
pop
pop
xchg
cmpsb
test
imul
dec
ljmp
test
add
sub
add
ss
sub
movsb
or
push
nop
inc
ret
pop
hlt
mov
mov
scas
sbb
call
cmp
pop
sbb
cmp
enter
mov
pop
dec
jne
lods
xor
sub
xchg
add
pushf
sub
mov
dec
or
cwtl
mov
mov
cld
mov
push
adc
adc
loop
dec
jmp
jg
paddb
and
fistl
fwait
aad
frstor
subl
nop
lock
scas
pop
or
popa
jae
xchg
push
sub
gs
mov
mov
xlat
mov
out
mov
jecxz,pn
mov
sub
loope
inc
dec
cmp
movsb
imul
jns
mov
mov
arpl
lcall
pop
ficompl
dec
add
ffree
clc
mov
bound
test
aas
sub
push
mov
jae
ret
adc
jg
sub
int3
sbb
xchg
jge
xchg
inc
idivl
xchg
mov
aaa
fld
daa
push
hlt
int3
dec
jne
add
fdivrs
cmp
cs
out
ja
das
inc
sbb
cmp
test
xchg
cwtl
jg
jl
mov
pop
sarl
data16
add
and
cmp
aas
hlt
mov
lret
inc
xlat
ret
cmp
enter
sbb
in
arpl
sub
xor
push
mov
lea
daa
ficomps
mov
jge
mov
lcall
repnz
or
mov
mov
add
in
and
inc
sub
mov
pop
mov
and
or
ds
pop
test
insl
pushf
cli
add
out
loop
jne
iret
fwait
sar
mov
mov
mov
or
stos
into
mov
ret
sbbb
mov
pop
ret
pop
pop
leave
jle
push
fimull
xchg
push
inc
push
or
mov
jne
push
add
icebp
push
inc
mov
mov
jle
movsb
xchg
fisubrs
adc
mov
mov
cmpsb
shll
xor
hlt
aam
dec
mov
add
ljmp
mov
push
jns
hlt
add
es
popl
popf
mov
mov
lret
dec
sub
loope
cmp
xor
std
mov
mov
test
inc
sahf
sbb
ret
xlat
xchg
mov
mov
mov
xor
adc
insl
test
sti
clc
mov
push
inc
adc
cmp
jne
adc
movsl
jno
fs
clc
and
dec
push
lahf
jnp
in
jae
sbb
push
mov
lea
pop
out
dec
push
add
imul
shlb
push
and
add
faddl
out
and
shrl
or
addb
pop
scas
iret
in
enter
insl
inc
aam
sqrtps
sub
and
push
fidivs
push
jl
inc
mov
inc
xchg
pop
sub
addb
int
adc
pop
or
fnstcw
std
and
mov
in
inc
icebp
lea
stc
lret
arpl
adc
push
lahf
dec
addl
addr16
dec
adc
aad
pushf
xor
mov
mov
rcrb
push
push
cwtl
enter
dec
popf
incl
jmp
pop
test
dec
int3
cmp
jo
mov
aaa
iret
and
pop
push
add
pop
and
lcall
xchg
loope
mov
pop
mov
cld
js
scas
mov
xchg
ljmp
test
insl
fmull
mov
test
add
or
scas
push
mov
add
lock
mov
nop
ljmp
add
and
in
std
test
xor
mov
xchg
jg
ret
pusha
int
cltd
adc
cli
jne
mov
xchg
cmp
rolb
pop
adc
popa
and
sbb
inc
sub
repz
lods
inc
pop
pop
repnz
push
add
and
xor
pusha
ret
pop
mov
add
push
iret
sbb
test
push
rcrb
cmp
mov
addr16
repz
adc
push
scas
adc
adc
jno
xorb
pushl
xor
ljmp
xor
cwtl
adc
inc
adcl
fsubr
pop
std
popf
add
push
out
cmpl
jbe
xchg
pop
xor
inc
jge
dec
add
test
decl
imul
push
fstpl
fmull
mov
inc
adc
popa
xor
in
mov
xchg
imul
ret
xor
jp
pop
frstor
pop
outsb
lahf
mov
cwtl
adc
insl
daa
inc
mov
mov
fs
push
add
fsubr
nop
cltd
insb
fbstp
add
call
xor
mov
xrelease
jno
sub
js
jp
aam
mov
pop
scas
out
add
pop
mov
pop
pushl
inc
bound
pop
add
jno
sbb
or
mov
insl
in
into
lock
mov
fcomi
jge
stos
push
mov
lret
jl
push
leave
or
ficompl
add
mov
scas
fcmovnbe
mov
cmp
lea
and
xchg
adc
mov
inc
inc
loop
pusha
stos
sub
clc
outsl
cld
orl
push
xchg
jge
pop
push
std
out
mov
xor
bound
mov
movsb
pop
pop
mov
adc
cmp
xor
out
dec
aas
test
dec
hlt
mov
pop
dec
xor
stos
xchg
es
mov
out
lock
sub
js
insb
pop
mov
leave
popf
add
mov
xchg
popf
stos
mov
clc
and
ficoms
in
fildll
jl
inc
test
mov
das
rorl
mov
test
mov
jnp
sbb
movsl
adc
pop
xchg
inc
push
push
jle
insb
jg
cmp
xor
jo
dec
popa
sysret
call
aas
out
dec
aad
sub
xchg
daa
adc
adc
xchg
sbbb
xor
jmp
fistpl
jecxz
fsubrs
movsb
dec
mov
adc
pushf
jl
push
mov
bswap
xchg
mov
or
aad
push
stos
shrl
xchg
lock
into
jle
mov
xorb
lahf
mov
jp
xor
mov
and
mov
aad
or
push
mov
mov
pop
mov
pop
xchg
fsub
int
bound
into
jle
mov
sbbl
xor
loopne
jno
ficoml
inc
push
xor
sub
mov
pop
addr16
mov
adc
pop
jo
lea
push
orl
insb
add
and
sbb
xor
cmp
popa
dec
data16
mov
dec
xchg
cltd
xor
cld
arpl
mov
jnp
pop
cld
xor
into
inc
xlat
jge
pop
inc
pop
and
push
mov
rclb
jbe
scas
js
and
int3
adc
xor
cld
repz
mov
out
sub
push
adc
and
bswap
loopne
arpl
jo
sbb
loope
in
jge
inc
lcall
out
mov
and
insb
leave
je
imul
clc
or
jbe
ret
mov
lods
popa
out
push
add
push
ljmp
rolb
push
lods
adc
xchg
iret
pop
scas
dec
jne
cli
xchg
and
in
outsl
filds
xchg
ljmp
out
xorl
in
mov
insl
imul
xor
arpl
inc
sti
loop
mov
jmp
xchg
xor
bound
cwtl
pop
mov
loop
call
xor
movsl
dec
and
fimuls
cmp
rorl
xorb
cld
loope
mov
cmp
jbe
int
test
outsb
data16
dec
addr16
cltd
or
mov
push
int3
cli
imul
nop
pop
mov
stc
pop
imul
xor
out
filds
lods
adc
pop
out
scas
dec
pushf
fcoms
push
int
rorl
push
mov
mov
mov
test
mov
imul
sbb
cltd
pop
js
out
js
push
in
mov
xchg
repz
xor
xor
push
idivl
jne
mov
imul
xor
push
mov
cltd
or
in
dec
je
push
inc
inc
rcrb
ds
sahf
xchg
push
mov
test
int3
pop
inc
and
inc
pop
pop
hlt
push
outsb
sahf
scas
iret
bound
ljmp
insb
in
add
mov
out
jnp
and
lcall
mov
push
imul
xor
clc
insb
mov
clc
dec
push
aas
inc
and
out
rorl
outsb
lcall
push
popf
sbb
push
xchg
fisubrs
jne
jl
inc
sub
arpl
ds
lods
out
cmp
adc
std
jmp
enter
xor
dec
pushf
in
std
sub
fildl
in
fldcw
mov
stos
les
out
addb
int
inc
sub
inc
or
dec
sbb
mov
mov
ret
xchg
arpl
jns
loopne
je
adc
and
cmp
pop
xor
mov
shll
push
cmp
jle
xchg
adc
jl
push
push
inc
movsb
fcoms
push
mov
sub
xchg
sub
test
jo
mov
cld
sbb
jno
xor
arpl
dec
pushf
sbb
lods
push
in
dec
sbb
jg
les
sarb
lock
mov
push
jnp
rclb
push
cltd
inc
lods
and
fadd
das
add
gs
jle
or
jmp
nop
xchg
add
and
adc
jp
inc
lahf
loopne
jle
mov
push
mov
clc
inc
dec
repnz
xchg
not
xor
mov
push
jmp
fisubrl
ja
jno
iret
sbbl
jo
dec
idiv
cmp
aam
insb
inc
inc
sti
mov
sub
xchg
add
sub
icebp
jnp
add
jae
mov
repz
fwait
insb
orb
push
pusha
dec
mov
es
loop
ret
adc
movsl
sbb
pop
cmp
or
jg
push
pop
lret
mov
adc
call
iret
xor
das
arpl
sarb
inc
xchg
dec
das
push
addr16
js
shl
adc
into
mov
pop
inc
fistpl
sub
push
push
adc
ret
and
pop
jnp
loope
jl
mov
adc
stc
sahf
pop
aas
and
aaa
aam
dec
dec
stos
roll
mov
adcl
std
sti
inc
and
bound
fidivl
clc
push
test
outsl
in
test
out
cmp
dec
movsl
push
inc
xor
insb
mov
shr
push
iret
xor
pop
cmp
push
adc
std
sub
incl
faddl
adc
loopne
aaa
or
test
mov
mov
test
mov
mov
lcall
push
in
adc
xchg
mov
cmp
ss
and
icebp
push
faddp
jg
into
test
jns
sbb
xchg
mov
aad
out
fs
push
mov
mov
inc
xor
hlt
test
and
dec
fsts
or
cmp
push
push
es
inc
imul
mov
loope
ret
jecxz
cmp
xorl
mov
mov
jne
sub
push
push
loop
addr16
inc
ljmp
pushf
bound
xchg
subl
dec
cmp
cmc
jp
in
testb
mov
arpl
repz
rolb
add
inc
mov
inc
arpl
ss
clc
add
jmp
ja
jne
inc
inc
pop
subb
mov
mul
dec
cmp
es
or
shll
sub
xor
testb
fisttpl
dec
hlt
and
dec
xlat
popf
xor
mov
icebp
sub
sbb
in
pop
push
dec
dec
adc
in
aad
insl
out
add
mov
js
fwait
es
mov
bound
xor
hlt
sbb
sbb
xorl
and
data16
out
lret
lea
jne
loop
lds
ja
call
push
shlb
movsl
popf
clc
and
adc
jmp
je
test
out
lret
imul
mov
inc
test
dec
adc
cmp
nop
pop
xorl
aam
jnp
adc
inc
or
fiaddl
add
cwtl
mov
or
loopne
mov
add
mov
cmp
sub
inc
std
adc
ja
dec
imul
ja
into
mov
xchg
dec
push
test
cmp
and
mov
push
add
add
pop
pop
in
xor
push
into
shlb
mov
mov
xor
movsb
push
decb
fwait
pop
inc
push
orb
sti
push
and
jl
test
mov
scas
orb
insb
outsl
clc
arpl
int
in
stc
pop
mov
xor
push
loopne
fdivrs
xor
push
push
fs
outsb
ds
loopne
iret
sbb
enter
pop
addl
int3
xor
jl
out
mov
scas
add
or
sahf
xor
shlb
lret
sbb
xor
daa
jl
mov
mov
lcall
xchg
add
cmp
movsb
hlt
dec
push
in
test
cmp
adcl
fldt
mov
lcall
in
inc
gs
jle
add
pshufw
in
push
lcall
add
test
repnz
cmp
adc
jno
xor
xchg
rcll
pusha
loop
xor
shrl
dec
cmpl
xchg
icebp
imul
or
adc
lds
xchg
sbb
scas
outsl
ja
mov
rcll
ror
stos
mov
int
add
inc
adc
fmuls
dec
cmc
adc
sbb
gs
das
xchg
mov
xchg
mov
imul
push
lcall
insb
aas
pop
mov
jmp
and
mov
xchg
mov
in
xchg
mov
pop
cmp
sub
es
scas
in
sub
add
add
aad
jmp
inc
fcmovnbe
cli
repz
pop
out
pusha
in
add
xchg
mov
pop
bound
pop
movsl
push
mov
push
fisubs
rcll
inc
outsl
push
sar
adc
cli
js
or
mov
icebp
sbb
int
adc
push
ret
aas
rcrb
movsb
xor
in
cmp
mov
lock
sbb
mov
add
pop
mov
int3
xor
ret
repnz
adc
test
std
mov
cltd
pushf
and
fldenv
dec
rdtsc
sbbl
sahf
dec
xor
lret
sbbl
sahf
cmpb
xor
xor
in
sub
lret
pop
xchg
pop
jbe
push
inc
sbbb
aam
sub
add
mov
cmp
lret
mov
rorb
push
lea
clc
mov
mov
xchg
rol
into
or
inc
std
mov
pop
add
mov
inc
sti
mov
movsb
sahf
pop
jae
fisttpll
mov
mov
cmp
int3
push
repnz
cmp
add
mov
lahf
fwait
ds
iret
cmp
inc
cltd
jne
push
lcall
gs
or
lods
mov
addr16
jmp
or
fldl
aad
jb
scas
in
daa
test
adc
pop
std
cmp
sbb
xchg
jb
fst
pop
rolb
scas
popf
xor
enter
ds
ret
out
or
xlat
jne
or
test
mov
imul
push
lods
pop
dec
leave
lret
dec
adc
cmp
pop
sbb
fisttpll
cltd
cld
ret
pop
jp
dec
lods
adc
fistps
mov
dec
inc
in
cmp
sub
movsl
adc
mov
cli
dec
xor
addr16
or
aam
xlat
push
xor
scas
adc
aaa
add
mov
mov
test
xchg
out
inc
push
movsb
mov
cli
cld
pop
cmp
pushl
lock
mov
cmp
jo
incb
dec
mov
xchg
aam
popf
dec
scas
in
out
xor
popl
push
test
add
loopne
loopne
mov
inc
pop
cmpsl
pushf
xor
push
fidivrl
add
mov
daa
js
mov
xchg
addb
xchg
or
fadds
lock
orb
xor
mov
xchg
insl
sahf
cwtl
xor
in
rcl
mov
fisubrs
xchg
std
or
xor
fs
pusha
aad
sbb
aaa
lock
xorl
rcrl
or
pop
out
jo
je
fcompl
repz
pop
mov
movsl
pop
imul
mov
hlt
out
jo
or
aam
mov
clc
movsb
mov
mov
dec
push
ss
xchg
outsb
add
jb
and
lods
icebp
daa
mov
jle
les
fwait
sub
xor
or
test
sub
sub
or
mov
adc
push
inc
pop
push
aas
std
mov
nop
push
pop
pop
xorl
pop
add
dec
dec
rol
dec
xchg
loope
mov
push
sub
jge
fnstsw
ja
gs
cmp
cld
aas
in
push
jg
sti
mov
push
js
cmp
pop
cmpsl
test
inc
sub
into
std
mov
pushf
xor
aad
dec
jmp
jb
adc
sub
scas
adc
dec
imul
or
scas
test
push
out
mov
jb
movl
xchg
pusha
arpl
cmp
call
into
ss
xchg
adc
xchg
xor
or
bound
das
push
mov
mov
inc
pop
popf
mov
cmpl
insb
scas
enter
mov
das
sbbb
jbe
and
dec
mov
lret
inc
jg
out
mov
dec
fnstsw
out
mov
fsts
out
adc
lcall
arpl
das
cli
pop
pop
lods
fists
into
push
call
add
add
or
push
jl
outsl
inc
push
shr
fimull
hlt
mov
cltd
and
lret
jns
mov
test
inc
pop
es
sti
sarl
bound
pop
dec
inc
andb
mov
std
jns
mov
adc
insb
cli
xor
fwait
push
enter
ds
jecxz
cmp
pop
mov
jo
jnp
inc
jne
das
push
push
pop
mov
and
push
pop
xor
js
inc
scas
mov
or
pusha
stc
loop
mov
les
into
sbb
pop
mov
int
inc
jmp
ficomps
subl
call
cmc
in
imul
pop
xor
dec
dec
cmp
xorb
xchg
lods
push
pop
roll
and
fdiv
add
or
fldenv
jbe
ja
or
das
stc
jb
outsl
stc
idivb
mov
gs
in
inc
fmuls
nop
shll
sahf
cmpsb
fldenv
outsb
xor
add
jns
scas
cli
xchg
daa
jnp
lret
pop
cli
gs
cmpsl
in
loop
sbb
negb
add
scas
pushf
jg
cmpl
into
in
mov
js
lds
movsl
sbb
mov
mov
dec
jle
repnz
mov
jno
add
cmp
ljmp
mov
xchg
inc
into
sbb
adc
mov
push
xchg
ret
bound
cmp
push
pop
mov
inc
push
mov
scas
inc
mov
xor
mov
sbb
mov
add
stos
icebp
jecxz
sarb
mov
and
and
jmp
mov
mov
jge
or
lret
push
lock
mov
jl
mov
push
pop
jns
pop
lahf
add
arpl
test
mov
pusha
push
ret
cmc
data16
std
fistpl
cs
cmp
mov
adc
mov
fbld
jno
test
pop
repz
jg
insb
push
stos
and
push
sbb
xor
out
or
loope
jbe
adc
sub
mov
scas
adc
leave
cli
ror
loop
jb
mov
mov
mov
movl
sarb
mov
in
jbe
push
loopne
sub
bound
xchg
inc
jg
cwtl
and
loopne
push
fisubrs
rolb
sbb
jmp
lahf
push
jnp
loope
pop
pop
mov
in
xlat
inc
ja
aad
adc
int
cld
jle
jne
outsl
inc
adc
xor
or
mov
out
sbb
lcall
loop
add
add
call
add
lahf
jle
jp
fwait
icebp
inc
punpcklbw
mov
test
call
adc
mov
aaa
fldl
ja
push
jae
test
mov
xchg
xchg
jns
mov
sahf
rcll
or
jmp
dec
dec
lds
lock
aas
aad
xchg
or
pop
push
sbb
pop
jno
iret
outsl
loopne
jbe
loopne
mov
stos
lock
push
gs
jmp
aas
lcall
cmp
cmpsb
addr16
dec
pop
push
mov
cwtl
adc
jp
lods
push
mov
cmp
xchg
repz
xor
inc
loop
test
xlat
cmpsb
xchg
decl
mov
lds
aad
pushf
jmp
xor
push
mov
and
cmpsl
sub
test
imul
pop
or
ret
dec
jo
sub
iret
mov
or
cmpsb
cmpsl
faddl
testl
dec
inc
xchg
jne
fcomip
out
dec
into
xor
sbb
pop
and
repz
xlat
pop
repz
jns
ljmp
jnp
mov
mov
or
pop
in
stos
xor
mov
jb
jne
xchg
push
clc
mov
cmp
rclb
stos
mov
shrl
jno
or
pushf
lock
aaa
mov
shrl
sbb
popf
subl
add
push
ljmp
mov
movsl
loopne
ficoms
ret
xlat
call
ret
movsl
lahf
lret
push
stos
adc
sbb
loopne
and
out
xor
arpl
push
inc
mov
fwait
add
jo
dec
xor
and
push
je
jno
cli
pop
push
and
push
outsl
pop
jg
pop
jg
inc
loope
in
sahf
inc
mov
mov
cmp
cmp
pop
push
xor
stos
mov
insl
and
leave
test
clc
out
test
mov
or
xchg
cs
test
ficompl
jmp
cmpsl
jbe
xchg
jno
add
sub
jmp
gs
leave
push
out
imul
inc
daa
int
jno
out
std
and
insl
icebp
out
pushf
call
fwait
hlt
je
loop
test
insb
cld
adc
mov
les
inc
sbb
dec
mov
std
dec
das
out
lods
xor
mov
fisttps
cmp
add
cmp
xor
mov
sbb
dec
mov
push
dec
jle
mov
outsb
jmp
fmuls
pusha
adcb
leave
loop
fidivl
or
inc
test
and
pop
pop
mov
clc
dec
repz
mov
lds
inc
jmp
inc
mov
jb
movsl
aad
dec
loope
icebp
sarl
mov
js
add
push
dec
mov
push
dec
out
sbb
add
or
test
clc
dec
pop
jae
dec
pop
pop
inc
sub
cmp
movsl
or
movsl
scas
adc
mov
jb
cmp
push
push
icebp
sbb
aas
mov
outsb
adc
and
pop
and
repz
cmc
into
scas
add
mov
int3
scas
in
push
out
jecxz
sub
sub
mov
inc
bound
jno
mov
mov
push
lret
dec
add
call
leave
mov
call
and
ss
sbb
mov
adc
daa
sbb
inc
mov
jb
fdivl
adc
mov
mov
fcom
push
sub
std
pop
mov
cmp
cmc
mov
repnz
out
sub
adc
pop
mov
sbb
jae
mov
stos
mov
movsl
jno
lret
mov
insb
inc
testl
rol
rcrb
test
or
test
lea
jecxz
lret
jecxz
dec
lds
out
mov
cmp
push
and
mov
pushf
pop
jo
pop
inc
jl
mov
subb
mov
add
push
pop
shll
lahf
lahf
test
xchg
dec
ficoml
xchg
xchg
rorl
loope
ret
or
add
ja
cmpsl
mov
and
lret
rcrb
mov
pop
negl
xor
mov
or
pop
pusha
sti
mov
dec
and
movsl
sub
jecxz
or
jne
lock
jbe
arpl
mov
gs
test
xor
frstor
jl
popa
fcmovbe
cmp
cmp
xor
cmp
popa
cld
lods
popf
jno
jnp
push
add
push
mov
hlt
shr
push
and
cmc
rcll
sub
pop
clc
aaa
fistpl
sub
ljmp
or
sub
xchg
testl
pop
popf
cmpsb
jo
sub
pop
lods
fnstcw
cs
cmp
inc
xchg
icebp
call
jl
hlt
sub
cmp
xorl
sbb
cmpl
cli
or
cmp
aas
daa
scas
dec
repz
xchg
mov
fcompl
mov
rorl
inc
adc
gs
rolb
leave
mov
in
jp
test
das
into
pop
data16
shlb
dec
inc
xorb
and
in
shll
notb
cmp
cmp
lret
mov
mov
xor
popf
rcll
mov
ret
pop
sahf
jae
jl
xchg
mov
lahf
inc
mov
and
ficomps
in
rorb
imul
in
xchg
pop
inc
jmp
jp
adc
pop
push
nop
jb
jnp
fucomp
dec
lret
enter
and
mov
aaa
outsl
mov
popf
push
fsubs
jecxz
cmp
push
xor
push
lret
jge
arpl
push
jg
or
adc
mov
mov
pop
sahf
scas
es
in
or
js
sbb
inc
push
adc
mov
hlt
adc
dec
test
push
add
mov
popa
jbe
mov
mov
sub
out
mov
int
loop
mov
fiaddl
in
repz
adc
push
xchg
cwtl
popf
out
jae
jo
cmp
add
data16
jno
dec
inc
jp
imul
adc
or
mov
mov
outsl
aaa
loope
popf
adc
mov
mov
shld
cmc
add
gs
jns
cmp
pop
or
rcr
dec
nop
pop
negl
fwait
jnp
cld
or
call
movsl
in
dec
cmp
cmp
mov
sbb
jb
mov
popa
outsl
mov
jno
ja
sbb
pop
inc
into
inc
test
cmp
imul
inc
mov
cmp
push
pop
push
xor
lret
sarb
xchg
cmp
or
mov
fisubs
mov
rol
sub
lea
or
rorb
xor
nop
in
shll
mov
enter
push
sbb
sub
into
mov
in
lcall
adc
sub
pop
jle
das
es
mov
sarl
add
popa
or
jno
lahf
xchg
push
cmpl
ljmp
or
sarb
sbb
data16
loope
jns
fnstsw
push
xchg
popf
mov
stos
mov
lock
shll
sbb
mov
cs
mov
movl
movsb
in
sbb
popf
mov
testl
fadds
cmp
or
out
fildll
add
sub
fcomps
ja
pop
xor
sub
cmpsb
insl
sbb
daa
mov
jae
mov
and
lock
ljmp
jg
fs
adc
out
mov
test
scas
fiaddl
ljmp
jne
or
lcall
test
sub
int3
clc
jns
fildll
into
decb
cmp
and
jecxz
fs
mov
insb
add
adc
outsb
rcrl
xor
out
xor
sub
or
push
ret
into
lret
cmp
jle
xchg
push
adc
mov
lea
insb
mov
stos
testl
jmp
jns
test
xchg
adc
push
sbb
xor
mov
mov
pop
add
lock
out
movsb
ret
ds
test
sub
mov
mov
mov
sbb
jne
lock
inc
fcmove
mov
inc
mov
jp
jecxz
xor
mov
jecxz
cmp
or
pop
and
lret
inc
ss
xchg
add
xchg
jg
push
sahf
mov
jae
insl
repnz
cmp
ret
out
insl
pop
sbb
pop
add
and
or
rol
cmp
mov
cmpsl
rcr
leave
mov
pop
rorl
pop
mov
xchg
test
and
sub
fwait
mov
fsubs
scas
mov
inc
popa
inc
fcmovnu
es
fadds
test
rorl
in
adc
push
cmp
xchg
sbb
xor
xchg
xchg
mov
shlb
push
movsb
stc
sbb
jo
or
repnz
sub
jnp
pop
jnp
add
subb
dec
les
lret
faddp
push
sbb
movsl
leave
push
out
xor
inc
jae
cmp
das
xor
adc
pop
push
orl
insl
push
mov
pop
pushf
mov
shl
mov
mov
cmp
outsl
pop
push
jl
pop
cld
and
xlat
mov
dec
loopne
xor
mov
incl
and
notl
inc
imul
mulb
ja
sti
jnp
pusha
mov
pop
sti
xchg
mov
dec
lahf
pusha
lahf
mov
mov
ss
dec
movups
jl
jo
jb
aas
ds
insb
bound
mov
push
sbb
imul
into
lods
js
jnp
scas
sub
mov
add
cmpsb
icebp
rcll
add
lret
ss
mov
jo
leave
out
xchg
mov
xor
ror
mov
and
popf
fiaddl
data16
jle
xchg
dec
jmp
hlt
js
cs
mov
push
push
data16
and
push
xor
data16
jo
es
dec
or
ja
mov
lea
jns
movsl
inc
lret
test
xor
push
mov
mov
mov
fadd
mov
sbb
sbb
dec
rol
sub
or
mov
push
cmp
call
xor
push
xchg
les
push
and
lea
inc
jecxz
mov
adc
ret
insl
arpl
insl
inc
mov
sbb
aaa
mov
pushf
jns
shll
pop
mov
adcl
movb
das
ret
cwtl
es
fwait
das
xor
mov
icebp
mov
repz
fst
cmp
adc
xor
mov
das
lock
dec
adc
nop
add
push
in
lods
mov
mov
test
sub
pop
in
inc
lcall
dec
jp
push
orl
lret
jge
push
adc
test
jmp
jo
imul
ljmp
in
xor
and
lcall
xor
ret
std
xchg
popf
xchg
xchg
xor
stc
xchg
mov
cld
dec
add
test
pop
mov
in
jno
pop
mov
out
clc
mov
test
add
clc
cmp
adc
lahf
or
lahf
mov
js
fucom
nop
repz
and
jmp
lea
aas
sar
test
js
and
imul
jo
xlat
sbb
mov
outsl
push
push
in
jmp
mov
addb
mov
xchg
notb
mov
inc
xchg
jns
add
popf
fs
test
std
dec
xchg
insl
popf
pop
or
out
or
sbbl
stc
pop
mov
test
lcall
aam
xlat
mov
cmp
pusha
sbb
push
ret
outsl
xor
inc
mov
adc
fistpll
cmp
out
dec
lcall
in
pop
test
ret
repz
mov
xor
in
cmp
sub
jnp
sub
cmp
mov
pop
sbb
cli
xor
push
insb
test
sbb
inc
insl
pop
sarl
or
pop
dec
add
dec
dec
jb
xor
dec
xchg
push
sbb
lods
int
bound
setno
shlb
inc
xchg
dec
loope
ret
push
or
cmpb
mov
fsubs
dec
sbb
fstl
mov
arpl
bound
push
inc
mov
push
movsb
sbb
push
or
lahf
and
xchg
inc
out
clc
es
mov
add
rclb
sub
xchg
inc
sti
aaa
sbb
push
push
jb
call
mov
jmp
or
xor
test
mov
cmp
mov
sub
int
pop
sahf
xor
jae
out
pop
jbe
cmpsl
mov
imulb
mov
cvtps2pd
cmp
int3
dec
ret
dec
stc
add
inc
inc
jge
push
dec
xchg
xor
jbe
mov
scas
pop
mov
inc
fidivs
or
scas
scas
out
lock
or
sahf
in
push
push
js
and
cmp
andl
jbe
andl
lock
inc
pop
fucomip
aas
test
gs
adcl
add
or
cmp
ja
sub
pop
scas
scas
mov
push
clc
jl
or
aad
cmc
in
adc
cmp
jge
int
jl
je
add
pop
mov
mov
cmovo
inc
loop
dec
ja
lock
dec
sub
iret
in
cmp
repz
push
inc
js
mov
aaa
push
outsb
jge
sub
xchg
insl
pushf
jbe
cwtl
cmp
pop
cwtl
mov
scas
bound
pop
push
or
outsb
repnz
xchg
stc
jo
stos
sahf
mov
and
push
mov
or
mov
cmc
or
rclb
cmc
jns
mov
xchg
ss
imul
pop
pop
shll
sbb
jne
mov
inc
add
aad
xor
leave
and
xchg
adc
repnz
mov
sub
jmp
scas
scas
aaa
mov
sub
jbe
out
xchg
add
adc
repnz
rcrb
movq
dec
out
sub
sub
out
mov
shrl
or
pop
dec
sub
out
or
xor
jae
xor
lret
movsb
scas
hlt
daa
sbb
push
xchg
pop
cld
push
cmp
iret
cmp
push
sbb
jnp
ja
adcb
add
or
rorl
out
stos
test
push
ljmp
cli
add
mov
and
stos
xchg
ss
add
push
xchg
mov
cmpsb
inc
pop
das
push
lret
mov
mov
sbb
xor
push
std
cmpsb
ja
xchg
mov
dec
adc
out
fldl
and
bound
mov
imul
push
outsb
mov
sarb
lods
ret
test
pushf
add
push
push
inc
add
pop
cmp
subb
pop
pop
lcall
jbe
mov
movsb
jne
out
aas
xor
push
xor
mov
xchg
call
mov
inc
std
bound
clc
xchg
xor
imul
dec
xor
fdivr
out
ss
dec
pop
fisubl
stos
mov
xchg
pop
fdivs
cmp
daa
andb
cmp
mov
mov
leave
push
mov
jb
dec
adc
mov
pop
std
adc
dec
jecxz
mov
fcmovu
popf
test
lcall
sahf
mov
shll
mov
xchg
mov
les
loopne
loopne
out
push
pop
push
sbb
or
sub
into
add
push
scas
sub
popa
or
mov
sub
jne
outsb
mov
and
addr16
or
bound
cwtl
dec
out
insb
mov
mov
sub
int
sahf
dec
in
mov
out
out
lret
hlt
dec
std
or
gs
es
aam
imul
and
sbb
inc
add
jnp
lcall
xor
test
or
xlat
and
and
repnz
jecxz
inc
ss
push
cmpsb
mov
rorl
xor
aam
loope
aaa
in
pop
dec
dec
clc
sbb
inc
adc
push
push
movsl
subl
inc
ret
push
lret
in
xchg
pop
dec
imul
adc
adc
insl
push
movsl
push
xor
lahf
or
inc
inc
ss
push
pop
push
or
add
negl
out
push
loop
rclb
xchg
mov
jno
bound
imul
sub
adc
call
mov
in
mov
xor
pop
push
push
sbb
outsl
leave
stos
repnz
mov
xchg
lret
pusha
and
insb
cli
dec
sub
cs
push
or
mov
push
push
push
mov
pop
aaa
clc
lea
add
and
xor
daa
lock
aad
std
push
jmp
in
sbb
and
push
xchg
mov
cli
fisubrl
mov
or
pop
jecxz
xor
pop
mov
xchg
and
movsb
imul
xor
lods
jg
jge
les
mov
shll
push
adc
and
leave
cmp
mov
fwait
and
cmp
repnz
sti
jp
enter
rcrb
out
ljmp
loopne
push
mov
rcrl
gs
in
inc
pushf
jge
and
leave
mov
mov
arpl
xor
fs
bound
add
movsb
add
dec
out
test
sub
mov
cmp
sahf
pop
cmc
xor
push
sbb
xlat
ljmp
js
int3
cmp
adcl
aas
sub
dec
test
fcmovbe
xor
mov
push
mov
call
cmp
jl,pn
xchg
mov
mov
sub
test
pop
testb
sub
data16
jl
jg
cmp
jge
mov
jle
cmp
pop
dec
xchg
imul
test
jo
leave
ds
or
mov
stos
ror
popf
push
push
jns
and
push
pop
inc
out
movhps
jecxz
lock
out
and
push
sub
lods
cmpb
xchg
shrl
sub
cmp
push
jg
fwait
mov
mov
dec
push
fwait
mov
mov
pop
dec
stc
mov
jecxz
rol
jbe
sub
sbb
inc
imul
push
test
out
loop
movsl
fcompl
into
popf
cwtl
int3
data16
cmc
xchg
or
call
test
cmp
dec
mov
ss
or
pop
hlt
mulb
fistpl
int3
add
adc
test
cwtl
sbb
sub
xor
jo
cmpsl
decl
xor
or
ret
loop
sbb
xchg
repz
fbstp
jle
sub
sbb
dec
pop
inc
rcr
incb
sub
push
jno
add
data16
or
dec
push
stos
ljmp
loope
sar
aam
ljmp
hlt
in
inc
pop
jnp
mov
mov
inc
gs
lods
in
test
add
popa
pop
mov
enter
push
dec
bound
orb
mov
fiadds
or
xchg
cmpsb
mov
aad
xchg
xchg
sub
bound
dec
adc
and
inc
js
hlt
mov
aam
mov
push
popa
mov
pop
movsl
or
inc
mov
ljmp
jns
insb
fs
mov
in
cwtl
mov
cmovae
mov
jmp
sti
xor
cwtl
sub
mov
and
add
orb
inc
jno
dec
xchg
add
or
mov
pop
xchg
mov
jmp
jmp
mov
jge
push
stos
mov
es
pop
xchg
arpl
repnz
ss
mov
mov
jmp
in
pop
xchg
bound
mov
push
push
movsb
sub
sub
ljmp
add
insb
fdivp
jne
nop
mov
ficompl
ss
pop
in
ret
cmp
dec
int3
test
mov
lds
fcmovbe
fidivrs
sub
movsl
test
inc
mov
stos
mov
cs
pop
leave
filds
dec
and
out
push
aam
add
imul
and
push
movsl
ret
or
cmpsl
pop
sub
dec
inc
insb
sbb
popa
cli
inc
insb
sub
jnp
push
sbb
mov
outsl
xchg
mov
outsb
je
pop
mov
iret
dec
add
outsb
arpl
movsb
or
jo
and
mov
add
mov
lcall
lds
or
cmpsb
dec
push
push
test
jmp
lcall
lahf
mov
xchg
mov
sti
inc
sub
mov
mov
mov
sub
xor
push
jo
daa
daa
xchg
push
idivb
push
dec
pop
mov
mov
inc
pop
mov
jno
pop
mov
cmpsl
arpl
and
arpl
push
cmp
ja
jo
out
and
nop
adc
je
pop
mov
adc
outsl
shll
dec
in
in
cwtl
jo
adc
ror
lods
cmpsl
add
arpl
pop
adc
cmp
mul
mov
pop
dec
fcmovne
sub
cmpsl
aaa
or
stc
or
pop
adc
call
mov
inc
dec
aaa
arpl
jns
push
sub
jecxz
mov
pop
outsb
pop
add
in
cmp
cmp
pop
ljmp
add
inc
fidivl
mov
push
push
push
inc
lds
mov
int
mov
push
rclb
leave
mov
mov
out
popaw
mulb
pop
and
imul
sbb
lods
push
repnz
cmp
pusha
or
sarl
sbb
jbe
inc
sbb
fidivl
iret
mov
cld
and
sar
or
mov
xchg
iret
xchg
dec
nop
aam
or
and
and
push
cmp
ljmp
mov
loop
pop
fs
enter
or
adc
std
jl
pop
sbb
test
jno
ret
adc
push
cltd
mov
push
scas
sbb
aaa
mov
cli
pusha
xor
mov
mov
push
xchg
adc
mov
outsb
lds
lea
xchg
adcl
stos
lods
xor
lods
pop
inc
cmp
jl
and
andb
sbb
push
imul
lds
xchg
lcall
xchg
xor
pop
mov
fucom
insl
xchg
jge
clc
push
aam
rol
mov
or
add
lods
cmpsb
sub
mov
lcall
sub
cld
adc
cmp
push
sub
bound
pop
in
sbb
adc
pop
adc
mov
iret
xchg
mov
adc
mov
std
push
cli
or
adc
inc
inc
int
sti
movsb
adc
mov
out
in
xchg
pop
movsb
cmp
outsl
into
and
imul
movsl
or
adc
outsb
and
push
shlb
sbb
mov
or
cwtl
xor
xor
rol
pop
pop
cmpb
imul
mov
daa
cwtl
sbb
cmp
jmp
fdivr
jle
movsb
fwait
push
sub
sub
fldenv
in
cli
out
imul
test
lea
pop
pop
scas
push
lds
js
data16
fstp
outsb
jnp
int
cmp
inc
testl
add
fs
jge
out
roll
push
aaa
or
fs
xchg
in
lods
xchg
jns
cli
in
lods
adc
fcoms
mov
xor
aad
leave
fwait
add
push
xchg
fdivs
mov
in
es
xchg
lret
and
popf
and
lahf
dec
jmp
hlt
inc
jns
push
sahf
jl
mov
pop
cs
inc
jmp
cmp
ja
inc
ja
mov
push
fs
rol
pop
loope
xchg
push
int3
sbb
xchg
mov
je
scas
and
push
call
mov
daa
test
pop
add
test
lock
mov
sbb
inc
daa
xor
sbb
push
adc
dec
mov
sub
mov
adc
lds
lcall
adc
push
fs
call
test
mov
or
sub
sbb
sahf
cwtl
adc
and
pop
lock
pop
sub
adc
movsb
xchg
daa
hlt
adc
jecxz
push
push
imul
mov
rorl
inc
loop
or
scas
xor
adc
push
iret
cmp
mov
inc
scas
pop
cmp
adc
daa
icebp
sub
sbbb
push
in
out
add
cmp
popf
subb
leave
outsl
testb
sbb
sub
ds
inc
xlat
adc
std
cmpsb
jne
daa
js
xor
sub
pop
pop
xchg
xchg
insl
mov
mov
pop
ret
and
fwait
mov
imul
dec
jle
pop
mov
push
jnp
mov
push
xlat
outsb
pmaxub
push
rep
sahf
xor
jl
mov
sbb
int
xchg
sahf
add
mov
cmc
cmp
scas
mov
pop
cmpsb
and
adc
pop
frstor
jo
xor
loop
or
ficompl
inc
xlat
jnp
or
call
les
dec
jo
push
call
cmpsb
sbb
mov
dec
sub
dec
rcll
adc
imul
ja,pt
nop
mov
and
call
mov
xorl
stc
dec
mov
inc
lods
mov
iret
xchg
jl
pop
repz
push
push
inc
push
leave
mov
cmp
js
cld
test
mov
xor
test
cmp
and
jmp
xor
cmp
mov
or
call
cmpl
mov
pop
jmp
sub
push
inc
jns
arpl
pushf
mov
add
ret
mov
mov
mov
cmpsl
aas
sbb
and
and
jecxz
adc
cwtl
test
adc
jg
jp
gs
xchg
ja
jns
mov
pop
into
lock
xor
cmp
inc
lret
bound
aaa
dec
dec
dec
sbb
adc
sbb
inc
hlt
and
mov
mov
cmp
cmp
outsb
stos
jl
adc
call
mov
mov
sub
std
scas
and
sub
and
insb
setnp
mov
push
movsb
xor
ret
into
push
adcl
enter
loop
or
repz
test
neg
and
dec
stos
aas
adc
ffreep
jl
mov
xchg
test
pop
in
insb
jns
pop
push
sbb
stos
nop/reserved
inc
popf
mov
cmp
jnp
sbb
mov
int3
scas
aas
jge
insb
pop
pop
jns
mov
inc
enter
mov
push
dec
mov
lahf
mov
mov
pop
adc
push
test
in
dec
push
or
inc
add
orb
jne
nop
add
pusha
mov
adc
xor
ja
mov
mov
mov
gs
mov
shlb
lock
xor
sbb
aaa
xor
mov
movsb
and
sub
sub
mov
inc
int3
daa
mov
xchg
mov
or
xchg
outsb
ja
int
xchg
fst
add
xchg
inc
das
mov
dec
idivb
out
dec
push
ret
jbe
fwait
into
out
test
inc
dec
dec
xchg
mov
cs
xor
xor
ret
xlat
pop
mov
imul
pushf
aad
fucom
and
shll
adc
push
bound
stc
and
les
fidivrs
dec
aas
aam
or
lret
pop
lahf
or
loope
insb
xchg
incl
push
scas
pop
outsb
pushf
scas
rorb
fnstcw
inc
push
xlat
and
mov
mov
loopne
lds
jmp
cli
addr16
mov
js
push
jp
adc
mov
pushf
xor
mov
mov
inc
dec
movsl
fsubp
dec
sub
loop
cld
add
xchg
xchg
test
jle
ficoml
in
and
cmp
andb
in
fistpll
add
lods
int
jle
adc
je
sub
lcall
adc
cwtl
mov
adc
in
es
fdivl
push
cmp
rolb
adc
fiaddl
loopne
outsb
cmp
pop
lea
mov
cmpb
stc
jbe
mov
jmp
fistpl
adc
lret
push
lock
and
xor
ret
pusha
mov
inc
adc
das
insb
ss
mov
mov
inc
mov
dec
fwait
negb
inc
insb
pop
and
pop
push
js
inc
mov
add
rclb
jle
adc
mov
lret
push
add
jns
sbb
push
shll
add
pop
push
xchg
add
sub
hlt
jmp
enter
jbe
mov
jne
stos
add
add
mov
xchg
mov
pushf
mov
outsl
cli
popf
lcall
popf
test
jg
lock
xor
mov
in
stc
sbb
add
dec
ljmp
push
mov
jl
shrd
stos
xchg
lods
stos
rcrb
jo
xchg
xor
enter
dec
out
sub
adc
cltd
jo
insb
subb
test
inc
sbb
pop
mov
mov
fisubrl
in
vprotd
int3
sbb
xor
lret
push
inc
pop
or
push
loope
add
das
mov
es
sbb
out
or
scas
sub
ret
dec
mov
stc
push
dec
imul
icebp
in
iret
add
popa
push
test
es
repz
bound
decb
or
cmp
push
push
add
xchg
xchg
mov
imul
mov
sbb
or
loop
dec
out
mov
jge
insl
mov
adc
and
push
ret
inc
nop
bound
xchg
push
subb
fimuls
xor
in
dec
imul
xchg
aas
adc
fiaddl
lods
jmp
mov
push
jp
call
fists
ficoml
mov
pop
cmp
or
aam
aam
sub
push
in
sub
bound
mov
mov
and
test
mov
mov
mov
and
add
fistl
hlt
je
insb
notl
cmp
jbe
test
out
sbb
mov
sbb
pusha
adc
xchg
add
pop
inc
out
in
orl
cmp
mov
mov
hlt
push
or
mov
into
mov
cmp
ljmp
lcall
pop
imul
inc
push
pop
ljmp
fstl
mov
dec
std
scas
cmp
xchg
jl
jecxz
push
jecxz
xchg
sub
jbe
aaa
js
sub
inc
rclb
stos
push
mov
or
ss
push
mov
dec
mov
and
test
or
cmp
pop
mov
test
and
cmp
pop
mov
fdivrl
push
mov
inc
hlt
push
out
xchg
cmp
lods
pop
popf
and
add
pop
mov
xchg
mov
xchg
loop
ficompl
ret
lea
xor
or
cwtl
jge
mov
popl
jg
aaa
rcrl
pop
je
xchg
aaa
std
dec
arpl
mov
lcall
inc
lea
xor
sbb
jp
cmc
jecxz
pop
mov
lret
push
dec
add
fistps
xlat
daa
int3
inc
push
pop
sbb
cltd
xchg
dec
sbb
scas
cmp
arpl
lods
fbstp
in
mov
mov
dec
fwait
cmp
nop
or
stos
and
lock
mov
pop
mov
inc
out
pop
out
int3
fisttpl
and
mov
jge
mov
cmpsl
int
and
mov
sub
sub
popf
fidivrl
jmp
call
in
xchg
add
add
jmp
xor
shlb
popf
dec
daa
sub
xor
outsb
in
stos
pop
pop
dec
mov
mov
jo
jmp
inc
and
mov
push
data16
cmp
mov
enter
jae
add
or
xorb
scas
cmp
clts
icebp
xor
inc
sti
popf
push
mov
inc
dec
scas
rcrl
add
mov
or
sbb
jl
addb
jne
xchg
pop
pop
rclb
mov
jae
and
xor
int3
xlat
out
iret
sti
add
in
inc
lcall
in
out
enter
mov
out
pop
inc
dec
jl
mov
lods
jge
or
jge
jmp
mov
mov
lret
sahf
mov
mov
dec
lods
int3
sbb
movsl
or
into
jmp
fcos
sub
jp
lret
cmp
dec
movsb
leave
inc
sti
inc
push
subb
push
cmpl
cmp
ljmp
push
cmpsl
xor
into
psubusb
dec
jmp
pop
cltd
mov
or
xchg
ret
shll
sbb
add
sbb
pop
mov
mov
call
pop
int3
inc
mov
adcb
xchg
or
out
aam
insl
jg,pn
dec
xchg
dec
xlat
cmp
mov
aaa
inc
pop
pop
mov
adc
sub
and
lret
cmp
adc
fcmove
mov
cmp
in
insb
mov
mov
adc
outsl
inc
xor
dec
lahf
sub
cmp
loop
dec
das
lea
xchg
ficoml
ljmp
push
aaa
mov
gs
pop
in
jo
nop
lods
pop
loop
sub
xchg
cmc
jo
push
int
pop
das
ret
jecxz
sbb
out
cmp
js
idivl
inc
pusha
imul
cmpsl
stos
jl
fdivrl
push
jno
sub
in
push
dec
cmp
ret
inc
xor
adc
in
sbb
aad
or
out
imul
movsl
xor
push
or
jp
jnp
mov
jnp
push
out
add
ret
xchg
icebp
and
ret
dec
dec
shlb
int
stc
mov
popl
sbbl
mov
xlat
adc
and
mov
ret
imul
in
jg
and
mov
popa
je
pusha
adc
mov
mov
add
in
mov
lret
aaa
mov
cs
shlb
repz
fmull
imull
cmp
je
popf
xchg
out
lds
out
mov
sub
andb
pop
daa
addb
fwait
push
and
push
insl
pop
sub
loop
les
mov
add
pop
fmuls
cs
mov
js
push
mov
and
stos
push
xchg
or
nop
pop
adc
sbb
mov
imul
mov
andl
iret
fisttpll
add
and
movsb
sub
enter
inc
es
cmp
xchg
sbb
ret
mov
cmc
add
jecxz
lods
sti
sub
mov
adc
push
in
or
sub
mov
lahf
test
adc
in
call
mov
mov
and
mov
sbb
adc
addr16
mov
lahf
push
popf
ffreep
mov
int
xchg
fbld
movsl
sub
xchg
lds
dec
adc
push
and
cltd
inc
call
push
into
dec
mov
jge
ret
pop
xor
sub
xchg
les
idivl
cmp
xor
jo
je
sbb
xchg
adc
xor
pop
cmpsl
cmp
mov
into
je
divb
mov
lret
mov
loopne
movsb
and
mov
mov
xchg
jecxz
stc
cld
mov
int3
xor
pop
ja
aad
pop
es
cmc
out
enter
gs
jge
push
iret
test
iret
pusha
cmp
dec
lods
and
xor
dec
out
addr16
push
dec
sbb
xor
dec
js
lahf
xchg
nop
ljmp
repnz
sti
pop
xor
dec
dec
daa
jno
add
subl
jb
loop
shrl
cmp
mov
pop
or
out
mov
inc
xchg
xlat
cwtl
or
inc
cmpsb
and
add
daa
stos
push
sbb
dec
sbb
jl
mov
mov
xor
mov
in
xchg
or
pop
push
and
lods
in
ret
adc
and
mov
rcll
fldt
arpl
mov
mov
adc
jmp
sti
inc
fisubrl
loop
lds
inc
dec
pop
dec
loop
mov
jo
jle
mov
vpmaxsw
xor
shrb
adc
mov
test
push
or
dec
xor
repnz
and
loopne
popa
sti
push
pop
adc
push
cmp
das
into
notl
dec
pop
es
sbb
or
push
cmp
cmc
clc
nop
or
inc
sub
mov
out
lret
mov
xchg
xor
jge,pn
add
push
pop
cs
fcoml
jp
jge
xchg
loop
jmp
pop
sbb
fdiv
jmp
jne
cmp
jge
pop
rolb
adc
dec
andb
cmpsb
addr16
enter
std
loope
loope
mov
sahf
mov
inc
xchg
fs
or
sub
xchg
rclb
loop
mov
je
dec
xchg
xor
adc
or
leave
les
lahf
cmpsb
popa
or
jbe
into
sub
mov
lret
dec
cmp
loope
jmp
mov
in
pop
pop
push
mov
lahf
pop
sub
call
xchg
das
loope
ret
sbb
fiaddl
or
push
aas
mov
mov
mov
mov
ret
ljmp
pop
dec
repz
xor
mov
xchg
mov
mov
adc
xchg
mov
fdivrs
pusha
mov
xlat
sahf
jl
mov
ds
xchg
add
imul
ficomps
lcall
cmp
xchg
roll
scas
adc
out
push
jmp
sbb
arpl
push
inc
xchg
je
cmpsb
dec
andl
push
repz
in
xchg
orb
in
and
cmp
sub
sub
lea
outsb
ret
inc
jo
fsts
ss
sbb
fsubrs
stos
daa
fists
daa
sub
mov
idivl
stc
inc
xor
pop
xor
cmpsb
es
mov
jge
pop
scas
sbb
stos
push
jnp
pop
jb
sub
mov
dec
fldl
fld
adc
in
hlt
fwait
cs
loope
and
jle
std
sub
dec
movsl
and
pop
xchg
jmp
std
fnstcw
mov
fldcw
pop
popf
daa
mov
dec
fwait
lret
push
mov
mov
xchg
cmp
movups
std
or
sahf
mov
les
sub
push
lds
dec
ficompl
jae
mov
stc
and
mov
shll
stos
xchg
jnp
roll
push
xlat
mov
and
cmp
jp
rcr
fcomps
fstps
jb
fidivl
lcall
inc
call
data16
ja
scas
test
fists
imull
std
enter
ficoml
mov
jge
or
stc
inc
xor
or
push
jbe
mov
test
cmp
dec
push
jmp
in
pop
ficomps
dec
gs
or
dec
fildl
jmp
insl
xchg
sbb
jae
mov
mov
int
dec
es
bound
inc
insb
sub
pop
and
ljmp
inc
jb
xchg
jecxz
cmp
mov
xor
push
fsubs
movsb
stos
in
push
nop
mov
push
daa
adc
jmp
mov
sub
std
lret
cwtl
adc
jne
pop
xchg
push
mov
dec
repnz
sarl
mov
mov
sarl
cmp
mov
insb
mov
or
cmp
xor
inc
or
cmp
sahf
bound
adc
add
xchg
jne
add
sahf
adc
jae
xchg
fs
fnstcw
push
inc
fstp
jno
jge
shll
aad
xor
push
jns
adc
mov
test
mov
cli
xchg
test
ret
xchg
adc
lds
dec
les
aam
xchg
mov
repz
hlt
xor
mov
enter
fsubrl
and
inc
cs
add
in
imul
sbb
jl
mov
insb
sbb
pusha
rorl
test
mov
roll
ja
leave
jg
outsl
sbb
out
xor
push
ja
pusha
call
and
cmp
outsb
add
sarb
in
scas
fidivrl
fs
sti
sub
add
test
inc
imul
jp
adc
out
pop
cmp
lds
xchg
test
mov
lcall
mov
loope
and
mov
xchg
inc
lret
inc
stos
pop
lret
imul
test
mov
mov
inc
lahf
jno
mov
pop
mov
mov
clc
push
xchg
cmpsl
rcl
pop
jns
das
mov
cli
shll
push
stc
rcr
cld
popa
sub
xor
ljmp
jge
loopne
insb
repz
dec
sub
ljmp
add
mov
or
xchg
jl
jnp
cmc
adc
das
je
loopne
lods
iret
test
inc
fstps
inc
jno
pop
enter
mov
push
dec
pop
mov
dec
std
cmp
cltd
jne
stc
pusha
imul
jo
fcmove
xchg
push
sbb
call
lret
mov
jns
sub
js
sarl
icebp
pushf
cmpsb
aam
mov
jbe
test
cs
in
and
aaa
lods
ljmp
ss
das
dec
fwait
jne
iret
fimuls
add
add
clc
dec
sahf
pop
fs
adc
jmp
adc
dec
outsb
out
inc
cmp
cmpsb
sbb
data16
sahf
cmp
cld
adc
aad
lcall
inc
jb
inc
bound
ret
shlb
cmpsl
in
cmpsl
popa
cmpsl
or
loop
sub
adc
mov
icebp
stos
push
sbb
mov
mov
ja
push
push
shlb
mov
add
cmc
push
insb
fistpl
pop
leave
nop
lret
incb
test
xchg
pop
scas
cs
cs
jl
testb
and
loopne
xor
add
scas
or
sahf
pop
fbstp
xchg
lock
hlt
xchg
push
mov
push
dec
arpl
cltd
dec
mov
out
cli
xchg
mov
jb
mov
aaa
punpcklbw
lods
mov
shl
movsb
stos
add
cli
notl
jnp
push
sbb
out
jbe
je
jno
mov
xchg
out
xlat
push
xor
pop
sub
leave
pop
fdiv
sti
out
in
aas
outsb
fwait
test
in
cmp
iret
mov
outsl
pop
fld
push
mov
out
loopne
mov
inc
inc
dec
xchg
xor
dec
jmp
jmp
and
sbbb
or
jp
lea
ss
in
mov
pop
imul
int3
sub
inc
fmul
pop
cltd
pushf
bound
push
mov
daa
push
cmc
lea
add
mov
dec
ds
cmpxchg
pop
in
int
add
mov
shrl
lret
mov
cmp
jg
adc
dec
call
lahf
mov
jmp
pop
fildl
aam
cmpsb
enter
imul
arpl
xchg
mov
cmc
cmp
std
xor
adc
pop
test
add
mov
mov
add
jmp
clc
movsl
and
les
mov
enter
jp
cmp
popa
fsubrs
out
and
enter
aam
xor
cmp
daa
dec
repz
mov
or
cmpsl
loope
sbb
jge
mov
roll
lret
negb
mov
push
mov
pop
pop
jo
rcr
cwtl
dec
cltd
sbb
dec
in
test
mov
rorb
hlt
pushf
cld
shll
aas
mov
bound
and
ja
xor
lahf
push
hlt
into
inc
cmp
dec
pop
pop
lahf
fs
dec
xchg
addr16
std
xor
aad
sahf
dec
cmp
mov
dec
call
sbb
out
das
imul
xchg
sbb
notl
jns
and
jp
jns
pushf
stos
divb
lea
sbb
push
pop
mov
scas
xor
int3
rolb
and
in
mov
into
inc
jne
push
mov
sub
rclb
mov
out
jbe
mov
adc
mov
ja
mov
jl
lods
xchg
pop
xchg
stos
std
out
jp
out
shlb
ljmp
outsl
popa
mov
pushf
fidivrs
push
jne
mov
add
mov
aam
inc
jae
sbb
mov
add
sahf
fsubr
and
or
aad
fisttpl
jmp
nop
inc
sbb
aam
push
mov
jg
daa
dec
jp
dec
fisubs
push
es
adc
addr16
pop
ja
push
adc
leave
fucomi
cmp
jbe
jns
jl
mov
and
xlat
mov
push
sbb
xor
xor
and
sub
mov
jl
lcall
imul
adcl
lret
pop
fcoms
cmp
cli
dec
in
xchg
mov
jne
cmp
movsl
and
and
xchg
clc
out
jbe
dec
adcl
cld
rol
jmp
mov
int3
mov
enter
jbe
pop
je
lfs
pop
xchg
cltd
pop
cli
mov
xor
cmpsb
ljmp
shlb
pop
sub
test
in
jle
loopne
sub
mov
lods
jmp
dec
pop
push
cltd
mov
pop
cmp
or
int3
test
push
add
jno
mov
jg
pop
add
aam
lods
pop
nop
fsts
push
lods
or
and
ja
mov
pop
stos
inc
test
jns
hlt
cmp
jl
cmp
add
lret
xchg
pop
mov
mov
jae
insl
icebp
mov
jle
arpl
ja
xchg
push
aaa
loop
stc
sub
xor
lret
add
mov
push
lea
inc
stos
inc
adc
mov
test
mov
scas
mov
outsl
mov
sahf
movsl
andb
push
mov
xor
mov
lds
ret
pop
add
mov
sub
inc
dec
out
rclb
insl
mov
dec
repz
jbe
cltd
cltd
xor
sbb
dec
ds
push
lea
cltd
ds
mov
cmp
cld
loop
cli
mov
orb
push
add
out
xor
adc
xor
jmp
ror
mov
loop
mov
fs
xchg
push
ja
push
adc
fs
mov
adc
jp
pop
or
cmp
pop
fnstenv
jecxz
pop
cld
add
jnp
lods
sahf
xor
sub
push
xchg
andl
std
lds
and
add
mov
sbb
pop
hlt
mov
out
mov
lahf
arpl
pop
sbb
mov
sbb
inc
fwait
sub
push
push
les
mov
ljmp
dec
testl
inc
and
push
inc
push
xchg
lret
mov
fstl
jo
jo
sub
push
insb
cmp
or
je
mov
cltd
sahf
dec
fs
repnz
mov
xor
pop
sbb
push
xor
jle
pop
fnstsw
jae
stc
negl
sbb
xor
adc
and
in
push
test
std
das
mov
mov
movsb
mov
lahf
rcl
cltd
cld
add
repz
dec
lds
lcall
sbb
dec
add
fistpll
mov
shl
insb
mov
push
divl
sub
mov
add
gs
enter
pop
jg
test
sbb
lods
lcall
adc
cs
push
fdivrl
nop
jle
cwtl
cli
outsb
fnstsw
fistps
jge
mov
scas
out
out
or
mov
push
fnsave
fcmovbe
stc
or
iret
and
xchg
add
and
jl
sbb
lock
ficomps
jne
dec
adc
clc
lock
lods
mov
movsb
cmc
mov
mov
les
fsub
or
dec
pop
add
lock
fcoml
inc
mov
sbbl
pop
mov
push
sbb
xchg
pop
cwtl
mov
sbb
inc
adcl
xchg
pop
jg
aaa
in
insl
dec
clc
inc
divl
and
leave
imul
jmp
push
outsl
adc
aam
pushf
jnp
mov
mov
cld
ret
lcall
stc
inc
pushf
dec
cwtl
inc
idivl
mov
adc
imulb
jg
les
push
daa
ljmp
repnz
ffree
xor
inc
mov
inc
mov
pop
mov
cmp
push
sub
mov
adc
mov
mov
and
cmp
dec
mov
shl
xchg
sbb
pop
pop
aas
sbb
in
rclb
fistps
jge
fwait
test
dec
sub
lods
xchg
vphsubdq
data16
insl
stos
sbb
outsb
shrb
faddl
adc
pop
es
scas
insb
mov
fnsave
push
pop
fwait
cli
lret
push
sar
vaddsd
adc
aam
cmp
lret
adc
shll
hlt
or
int3
pop
jmp
test
popf
lret
mov
jle
and
rclb
orb
in
lock
jg
dec
sub
mov
out
push
jl
add
ljmp
xor
out
js
push
or
testb
jmp
push
inc
faddp
sub
gs
dec
mov
shl
stc
xchg
jo
incb
cmp
jbe
pop
ss
xor
pop
test
mov
arpl
mov
test
jne
cli
push
ret
imul
adc
mov
xor
adc
mov
xchg
movsb
push
cli
fwait
mov
pusha
mov
lods
adc
push
daa
sti
mov
pop
xor
xchg
dec
out
cmp
mov
push
xchg
test
mov
shll
add
insl
cld
cmp
inc
jbe
mulb
out
xor
mov
mov
test
adc
out
in
or
jg
aas
xorl
rolb
mov
or
loope
aam
sub
jl
inc
push
and
les
inc
sub
cmpsl
out
mov
cmp
sarl
arpl
mov
jae
mov
pop
cmpsb
push
into
mov
sub
and
xor
call
sbb
mov
xchg
mov
outsl
push
or
fimuls
lods
addr16
xor
xchg
dec
adc
mov
push
insl
pop
ljmp
cmc
out
xor
aaa
shl
sbb
outsb
lock
imulb
popf
testb
mov
mov
in
into
xchg
stc
xor
add
ss
add
jl
pop
mov
add
adc
test
rcl
test
or
adc
fldcw
daa
and
into
xchg
or
xor
scas
jns
add
in
fldl
xor
xor
cmp
cmc
mov
cmp
pop
fnstcw
jl
and
add
cmp
dec
jmp
mov
mov
push
and
cwtl
pop
pop
fwait
or
imul
fisttpll
lods
pusha
add
in
push
test
out
push
pop
mov
sbb
sbb
sbb
je
pop
aas
xchg
xor
lock
les
insl
mov
mov
pop
mov
jbe
fcomip
into
cmp
adc
jbe
jl
dec
dec
fists
inc
es
ljmp
jmp
cmp
lea
mov
cmpsb
sub
mov
test
mov
js
lods
ret
lcall
jae
cmpsb
mov
div
cli
pusha
dec
test
gs
cmp
mov
sub
inc
jne
mov
dec
mov
dec
mov
xor
push
shll
xor
enter
sub
ficomps
int
xor
push
ja
or
test
jb
push
and
dec
repz
les
add
test
iret
movsb
push
jl
leave
roll
mov
adc
dec
jbe
fs
movsb
stc
pop
cmpsb
insl
subl
xchg
out
cmp
shlb
mov
dec
popf
mov
sbb
jne
divl
jno
jnp
cmp
imul
adc
insb
sarl
mov
cmp
fwait
lock
ja
adc
rclb
cwtl
sbb
repz
fimull
arpl
in
call
mov
ja
scas
imul
push
dec
and
add
imul
push
dec
xor
lahf
xor
push
aas
gs
mov
cwtl
out
ljmp
fisttpl
mov
lea
out
xchg
sbb
pop
xor
dec
int3
test
push
or
xchg
out
mov
xchg
mov
and
mov
mov
and
in
push
je
sub
les
lcall
add
nop
fidivrs
mov
daa
xor
adc
mov
mov
add
dec
test
inc
lock
test
push
pop
and
jae
in
jge
arpl
call
jno
arpl
jmp
insb
pusha
inc
cmp
cmp
mov
fnstsw
lret
and
lret
and
mov
adc
scas
iret
or
imul
sbb
cld
sub
jge
add
pop
js
pop
pop
std
loope
pop
roll
sub
stos
jno
loop
pop
or
sbb
jno
lahf
pop
mov
popf
stc
insb
sub
adc
push
fcmovnb
xchg
hlt
mov
push
cmp
jne
sbb
sti
sahf
xor
std
and
jb
push
sub
jbe
and
shrl
lock
pusha
les
dec
pop
sbb
orps
ja
fistpll
mull
icebp
adc
movsb
cmpsb
xchg
sahf
movsb
and
incl
in
mov
int3
inc
ds
scas
popa
mov
enter
mov
loope
repnz
push
push
jge
add
pop
inc
and
adc
ret
xlat
out
mov
push
xor
adc
lret
push
adc
inc
loopne
mov
cmp
pop
pop
sub
in
inc
inc
push
lock
jb
lock
addl
add
xlat
cmpsb
pushf
jp
imul
and
xchg
pop
aam
xor
mov
add
fidivrl
int
popa
push
and
jmp
adc
jecxz
pop
add
jmp
and
arpl
sti
mov
mov
ret
mov
cmovbe
ret
pop
adc
inc
xor
sub
repnz
lcall
pop
mov
xchg
out
fs
pop
or
push
in
dec
mov
testl
sahf
mov
mov
push
jg
jg
fidivrs
aam
xchg
dec
mov
mov
and
mov
fstps
loopne
lahf
lret
xchg
pop
add
sub
in
cmpl
sub
adc
popl
jle
out
push
sub
stc
cmp
mov
cmp
xchg
push
sub
std
add
loop
out
jns
adc
adc
cld
ja
shrb
repnz
xchg
jg
int
xor
mov
dec
jae
lods
sbb
out
push
vunpckhpd
daa
fidivs
aas
mov
push
out
push
cmp
enter
ds
push
std
adc
mov
cmpsb
jg
stos
push
out
scas
repz
mov
mov
xor
popa
fwait
popa
xchg
sbb
inc
clc
xor
push
jmp
test
pop
cmp
add
sub
sbb
loop
lahf
mov
fwait
pop
rol
dec
or
pop
loopne
xor
cli
data16
pop
dec
sar
clc
adc
fs
or
bound
cmc
adc
notb
xchg
sbb
or
mov
jl
and
push
enter
icebp
jns
pop
popf
adcb
mov
push
adc
test
repz
je
add
mov
mov
ljmp
inc
nop
loope
sub
inc
popf
push
push
xchg
into
aad
pop
add
out
ficompl
imul
scas
dec
repnz
mov
sbb
lds
stc
jle
popf
loopne
mov
and
lods
dec
cmc
jge
out
mov
mov
ret
adc
cld
push
rorb
aad
outsb
rcrb
cwtl
xor
pop
sub
mov
mov
dec
mov
adc
mov
iret
shl
jne
xchg
shl
or
aam
jbe
mov
das
or
sbb
push
jo
pop
jo
pop
sbb
aam
mov
sahf
cs
xchg
outsl
push
scas
ja
inc
push
mov
negb
popa
rcrl
rorl
lods
into
or
mov
jecxz
std
inc
and
std
cmp
aad
in
inc
lret
push
hlt
jmp
insl
pop
sahf
dec
rorl
mov
and
fadds
inc
inc
push
adcb
cs
inc
les
arpl
test
xchg
adc
pop
enter
jmp
das
jno
imul
in
inc
dec
dec
ds
arpl
clc
cltd
lea
cmp
xor
mov
pop
push
repnz
sbb
dec
out
xchg
cs
scas
inc
lcall
sahf
push
stc
and
lret
test
out
push
cmpsl
mov
mov
sahf
inc
in
mov
stos
jge
xor
sahf
sub
adc
dec
movsl
or
cmpb
pop
lcall
jecxz
leave
xchg
out
push
in
sub
mov
aam
jmp
fistl
push
andb
ja
mov
sbb
adc
cld
stos
mov
shll
mov
mov
leave
push
and
insb
addl
stc
int3
out
push
sbbb
cmpsb
sbb
lea
aam
xlat
pop
sbb
pushf
xlat
mov
fimull
out
jl
jo
mov
js
xchg
mov
and
sub
push
scas
lret
mov
mov
push
cmp
shlb
les
or
fnsave
mov
out
leave
out
add
push
jmp
rcl
outsl
outsl
adc
sub
call
cmpsl
icebp
cmpsl
mov
ljmp
xor
scas
mov
push
rorb
jne
aad
hlt
faddl
das
daa
dec
sbb
aad
pusha
jno
sbb
and
adc
mov
loope
cld
xchg
sub
jle
stos
mov
pop
sti
iret
rorl
push
shrl
call
or
fwait
stc
push
ss
sub
xor
mov
inc
test
mov
cmc
lea
add
and
jae
cmp
jne
or
adcl
jo
mov
jg
push
jae
dec
test
mov
aad
mov
push
push
psadbw
or
and
sahf
rcrb
arpl
push
aam
int
ljmp
lahf
inc
jo
xor
sub
mov
andl
mov
mov
rorl
xor
mov
adc
sarb
addr16
add
and
repnz
in
xchg
pop
inc
or
es
stos
testb
popf
add
and
mov
fists
mov
out
sbb
int
push
push
out
jmp
dec
mov
mov
adcb
pop
sbb
and
mov
fwait
test
sbb
ja
iret
pushaw
bound
fdivr
scas
pop
scas
fildll
roll
iret
jne
out
js
sub
jae
je
inc
xchg
fdiv
add
mov
ret
dec
xchg
or
xor
imul
aaa
mov
pop
aaa
adc
repz
popa
negl
fstp
jecxz
in
cltd
sub
insb
xor
jl
dec
addb
xor
dec
mov
daa
mov
data16
mov
xchg
lods
cwtl
cmpsl
ja
pop
jbe
imul
dec
pop
fadd
imul
je
jl
and
popf
imul
push
popf
imul
xor
scas
call
jo
cmp
jle
dec
pusha
adc
push
sar
mov
test
into
in
sbb
adc
jecxz
jo
mov
outsl
mov
in
add
andb
ljmp
insl
pop
mov
push
outsl
push
adc
add
iret
outsb
cmc
shl
mov
sbb
mov
imul
call
push
adc
js
aaa
sahf
out
cltd
ret
xchg
fs
insb
scas
loop
movsl
outsl
pusha
jne
mov
add
fcmovu
xor
lds
add
dec
test
mov
and
mov
pop
cli
mul
pusha
xchg
dec
add
sbb
push
pop
pusha
out
test
cmp
cmp
adc
push
dec
and
dec
inc
jp
inc
cli
insl
popa
mov
fnsave
adc
sub
and
notl
mov
clc
imul
mov
pop
sti
or
out
adc
jae
mov
pop
aam
push
xor
push
subb
movsl
mov
ljmp
inc
stos
jns
imull
xor
aam
jae
fwait
dec
push
inc
push
out
adc
in
xchg
pop
mov
call
ds
xchg
xchg
pusha
pop
xchg
in
sbb
xor
mov
mov
rol
shrb
mov
mov
push
mov
push
popf
sbb
jle
out
mov
sbb
cmpsl
iret
scas
sti
mov
jmp
pop
xor
xor
roll
sbb
out
add
sti
mov
sbb
cmpsb
pop
mov
and
daa
jno
xchg
mov
ss
stc
lods
jp
push
aam
insl
pusha
into
lods
sbb
shl
mov
cmp
and
loope
leave
imul
rolb
shlb
add
inc
pop
mov
sub
push
movups
rorb
mov
loope
and
push
test
or
cmpsb
xchg
xor
testl
popf
and
test
ret
inc
je
stos
xchg
repnz
jnp
scas
hlt
lods
pushf
jno
jle
push
jle
jo
fucomp
jns
sbb
inc
das
insb
xchg
jmp
cmp
test
fcoml
mov
xchg
pop
movsl
jns
mov
push
mov
add
gs
jmp
xorb
push
mov
lcall
pop
or
add
rcrb
push
in
mov
loope
nop
pop
xor
add
adc
enter
fmull
out
jae
sub
test
aas
mov
inc
inc
outsb
sub
cltd
push
xor
xor
popf
mov
mov
jg
sbb
xlat
inc
or
mov
push
outsb
hlt
test
jne
pop
sti
cmp
mov
ja
outsb
cmp
mov
fisubs
jne
aad
wrmsr
lock
add
cmp
stc
and
add
push
rorb
movsl
int3
xchg
cmp
mov
lea
fcoms
jae
addr16
xchg
xor
in
pop
fiadds
ret
lock
insb
movsl
cld
in
inc
and
ds
fmuls
mov
inc
fisubl
adc
aam
push
and
xor
test
in
std
mov
cmp
insl
pop
fnsave
sbb
incl
mov
cs
and
das
aas
push
lea
push
push
push
repnz
sub
dec
sub
js
int
daa
push
sbb
imul
push
outsb
movsb
shll
adc
imul
add
aaa
sbb
fbld
cmp
push
fisubl
daa
adc
and
stos
pop
jbe
repz
dec
pop
repnz
jns
mov
adc
in
flds
std
test
in
inc
mov
xchg
dec
pop
faddl
sbb
in
outsb
in
inc
jle
add
ljmp
sbb
jg
mov
or
enter
cld
stc
push
and
pmaddwd
jge
jecxz
ja
inc
fidivs
sub
clc
icebp
repnz
and
test
sbb
cli
adc
mov
in
repnz
in
or
xor
and
test
cld
push
or
pop
xchg
xchg
movsb
jns
lret
xor
mov
or
or
and
fimull
lcall
xor
push
inc
scas
ss
jae
es
push
adc
popf
test
sbb
std
pop
push
mov
rorb
adc
sbb
sbb
or
stc
pop
or
mov
pop
add
imul
nop
cmp
add
sub
in
aam
or
inc
fstl
mov
repnz
mov
adc
sbb
adc
and
jno
sub
addr16
pop
addr16
insl
movsl
mov
mov
mov
xlat
jne
mov
sub
ds
out
push
sub
out
aam
add
jno
call
adc
out
push
in
dec
fdivl
jle
push
nop
jbe
incb
movsl
out
jno
jnp
mov
ljmp
shll
xchg
inc
and
xchg
xor
dec
or
add
xor
cmc
daa
mov
aad
lods
xchg
mov
mov
sbb
cmp
out
leave
pop
mov
or
mov
fildl
out
mov
orl
inc
mov
adc
fwait
js
ret
aaa
stos
or
fnstcw
sub
fwait
jae
sbb
jbe
jecxz
xor
in
repnz
data16
iret
jne
push
repz
push
xchg
shlb
dec
lcall
xchg
xor
stos
add
jp
inc
xor
mov
addb
cld
cli
imul
sub
push
stos
in
lods
jns
stc
das
mov
and
fisubl
push
aaa
adc
call
mov
aad
pop
lock
dec
adc
dec
mov
push
loopne
gs
int3
sbb
int3
sbb
iret
ds
jne
jo
aad
xchg
mov
scas
stos
sub
add
imul
mov
sti
mov
mov
push
xor
lret
outsb
mov
iret
test
dec
mov
arpl
mov
sbb
cmp
movsb
stc
xor
push
iret
xchg
stc
sti
pop
adc
xor
jp
loope
inc
xchg
sbb
iret
mov
addr16
testb
mov
fiadds
cmp
orl
rorl
cwtl
js
inc
inc
js
fwait
push
or
test
stc
ljmp
xchg
arpl
dec
xchg
add
int3
mov
rcll
ljmp
xchg
xor
test
shrb
iret
ror
jg
jmp
dec
stos
fdivr
xor
test
inc
scas
adc
mov
dec
xchg
lret
xchg
int3
hlt
andl
ret
loope
adc
int
movsl
les
add
push
ja
pop
subl
notl
cs
and
cwtl
cltd
cmpsl
mov
pop
jb
icebp
pop
mov
dec
or
adc
int
mov
xlat
scas
xlat
or
jle
popf
shlb
int
jnp
inc
int
out
frstor
mov
jb
aad
jnp
xchg
sar
aad
cli
imul
add
leave
mov
or
sub
cmp
punpckhdq
data16
mov
popa
aam
lret
lds
fsubs
gs
popa
add
push
jge
fst
iret
sub
dec
dec
cmp
dec
pop
imul
ret
cs
add
pop
inc
fnstcw
jb
xchg
arpl
mov
sub
xchg
xchg
add
fisubl
mov
aas
lcall
hlt
in
mov
xchg
les
add
outsb
sub
popa
pusha
xchg
mov
mov
lea
push
pop
or
mov
xchg
sbb
push
inc
pop
in
jbe
int3
pop
ljmp
pop
jmp
lods
dec
adc
fcoms
dec
es
dec
mov
inc
aam
insb
push
sarl
cmp
dec
mov
test
iret
cmp
repz
fwait
lds
pop
ja
cwtl
aad
jp
add
jg
and
sbb
lahf
xor
inc
mov
test
xor
jae
shr
adc
clc
cmp
shrl
nop
push
xchg
cmp
fsubl
aam
cli
cld
mov
mov
clc
mov
aas
ret
jns
jbe
in
pusha
add
pop
jg
jb
daa
int3
popf
pop
cltd
in
cli
sbbb
aam
pop
pop
fidivl
int
clc
fnsave
push
jle
mov
and
push
and
jl
leave
mov
out
insb
testb
dec
shlb
shrl
mov
or
repz
repnz
popf
dec
mov
push
cmp
mov
nop
mov
xor
sbb
cmpsb
ljmp
lcall
pop
sbb
add
mov
int
mov
cmpsb
or
adc
mov
sbb
shrb
cld
outsb
ja
jne
cmp
in
push
and
divl
sub
ss
lds
es
test
movsb
sbb
jnp
imul
and
stos
dec
xchg
mov
outsl
push
fldl
push
mov
add
mov
rol
xor
sub
mov
gs
out
mov
jo
jb
pop
mov
aam
loopne
inc
mov
sub
push
xor
xchg
xchg
push
add
push
repz
cmp
and
sbb
jg
imul
inc
loope
mov
adc
inc
dec
sbb
popa
into
iret
dec
aas
movsl
cwtl
mov
xadd
ljmp
inc
xchg
dec
rcr
arpl
outsl
pop
inc
shll
ret
and
dec
push
stos
dec
fnstcw
inc
dec
bound
ror
nop
xchg
push
call
mull
sub
xchg
adc
mov
testl
movsl
lret
mov
mov
xchg
fnsave
mov
mov
mov
xchg
subl
stos
insb
dec
push
push
mov
je
test
mov
aam
ja
xor
jnp
push
repz
loopne
sub
or
adc
xchg
ret
mov
and
jnp
inc
jmp
jae
aam
repz
add
out
add
out
mov
shrl
xor
sbbl
mov
rolb
add
cmp
pop
icebp
lea
popa
or
loopne
shll
fmull
gs
adc
loop
aad
ljmp
aam
add
insl
cwtl
jp
pop
lret
push
fcoml
fcomps
loope
push
fwait
push
sub
test
push
mov
jns
adc
pop
repz
dec
add
push
pop
cli
stos
testb
xor
cmp
xor
enter
pshufw
lods
or
dec
xchg
dec
das
mov
mov
movsl
mov
inc
mov
adc
sar
cmpsb
mov
in
dec
pop
out
mov
mov
mov
fsts
enter
and
push
call
mov
sub
rol
leave
add
sub
mov
mov
lret
pop
xchg
pop
insb
pusha
dec
jecxz
mov
cltd
mov
cmp
jmp
out
sbb
int
sbb
cld
mov
sub
les
pop
leave
cmp
xlat
inc
mov
push
sti
ljmp
mov
cltd
mov
mov
push
sub
and
cmp
test
jbe
in
and
movsl
test
fbstp
inc
sbb
xchg
movsb
std
call
xchg
gs
xchg
adc
xchg
mov
fisttpl
cmp
mov
sub
stos
cld
mov
xchg
les
cli
sub
cwtl
daa
inc
dec
movsb
enter
mov
orl
push
lret
mull
and
mov
in
xchg
insl
fldl2e
xor
sbb
rcrl
in
jge
pop
mov
in
add
jb
out
fsubrs
mov
inc
or
push
imul
mov
out
xor
insb
mov
repnz
outsb
jbe
test
mov
insb
mov
stos
jle
lcall
fbstp
sub
imul
mov
bswap
adc
aad
rorb
xchg
outsb
mov
push
jg
cmpsl
add
gs
xchg
and
andb
leave
sahf
sub
adcb
fisttpl
push
mov
ss
mov
outsb
shrb
jle
xor
jo
test
xlat
pop
xchg
mov
push
dec
xchg
shl
in
adc
or
dec
pop
mov
setle
movl
faddl
popa
mov
push
jne
dec
cld
sbb
sbb
aam
mov
out
das
repz
out
fsincos
fimuls
int
and
arpl
fisubrs
nop
cmpsl
xchg
jle
test
cmp
hlt
pusha
scas
mov
dec
jne
push
sbb
repz
dec
into
and
mov
imul
add
sbb
or
mov
out
int
addr16
enter
jo
stos
push
or
jg
lds
mov
lds
push
xchg
pop
jnp
clc
les
mov
sub
je
push
clts
inc
mov
pop
call
add
xchg
jo
negl
daa
adc
sbb
fildll
mov
sbb
mov
cmp
push
pop
push
sbbb
outsl
and
lahf
mov
mov
cltd
fcmovne
inc
test
dec
cltd
mov
adcb
lds
xchg
xlat
jp
icebp
xchg
daa
dec
adc
cmpsl
hlt
or
xor
mov
mov
and
xchg
xchg
push
xchg
inc
cmc
pop
push
pop
cmpsb
movb
sbb
pop
lods
lods
xor
jns
or
xchg
sub
cli
adc
pop
popf
dec
inc
aad
inc
or
outsl
icebp
pop
and
or
xchg
dec
adc
xor
out
push
mov
inc
popa
mov
pop
orb
push
roll
jne
fsubrs
in
ja
push
pop
adc
lret
mov
inc
sbbb
adc
loop
testl
adc
xchg
testb
adc
jo
inc
int3
sub
jmp
jnp
jne
iret
pop
rorb
cmp
aas
fld
cld
aam
aaa
aas
mov
sbb
jnp
sub
mov
xor
mov
mov
outsb
xchg
sub
jae
push
dec
lds
ret
lcall
sub
test
cmp
push
inc
mov
push
repnz
and
lret
in
dec
lahf
mov
fists
addr16
insb
rcll
sub
jp
outsl
mov
daa
mov
sub
ret
rolb
sbb
mov
sahf
out
ljmp
paddsb
add
int3
dec
push
adc
adc
int3
inc
repnz
lea
in
leave
pop
inc
les
jo
xchg
cmpsb
sub
cmp
pusha
cld
lock
lea
imul
add
bound
mov
jne
pop
or
xchg
sub
sbb
and
outsb
sbb
jne
mov
cmp
int3
jg
in
xchg
push
add
add
inc
add
arpl
mov
sar
mov
mov
inc
rcrb
cwtl
push
or
pop
adc
sbb
xlat
shrb
sbb
mov
cmp
mov
ljmp
scas
lds
push
into
lret
fwait
das
and
loop
js
mov
pop
dec
sub
xchg
dec
adc
nop
pop
ds
sub
iret
jo
repz
ret
repnz
outsb
or
lods
loop
inc
jnp
sub
scas
or
mov
xchg
pop
push
push
mov
orl
and
movsb
sub
cmp
lea
push
fdivp
cmc
and
jno
mov
das
push
mov
sub
push
sti
sub
pop
mov
xor
jge
call
stos
pop
daa
add
push
aaa
mov
push
push
jns
or
inc
jl
xor
ret
adc
les
dec
gs
or
mov
in
nop
mov
pop
dec
sub
fmuls
lods
and
mov
and
push
ficompl
pop
sahf
push
inc
divb
insl
lock
fisubrs
dec
add
rorb
cmpsl
xor
pop
mov
lcall
scas
popa
cmp
add
cli
pop
lret
fwait
repnz
nop
fisubrl
pop
fisubrs
out
xchg
sarb
je
mov
xchg
sti
in
faddl
xchg
mov
rcrl
sub
adc
inc
dec
adc
push
mov
pop
add
sub
nop/reserved
fmull
pop
jg
inc
je
xchg
add
imul
inc
push
jo
cmpsl
insl
bound
mov
mov
mov
xchg
pusha
mov
adc
jns
adc
add
lret
xchg
std
aam
xchg
mov
lcall
inc
iret
mov
jne
jecxz
sbb
sbb
insb
adc
loopne
sub
sbb
fadd
pusha
int
add
outsl
push
dec
mov
ss
add
fs
addr16
add
jb
gs
cmp
xchg
stc
xchg
jmp
scas
fchs
dec
negb
rorl
inc
in
mov
rcrl
sbb
loop
and
das
push
jns
sub
cmpsb
jge
cwtl
cli
mov
mov
jmp
dec
jnp
pop
pop
aad
imul
shlb
rcr
jl
imul
stos
pop
cmc
mov
sbb
mov
inc
scas
inc
test
icebp
fwait
nop
lods
fstps
cmp
or
cmp
lret
jne
cmpsl
dec
pop
add
in
cs
in
fwait
iret
xchg
int3
mov
out
jl
out
fldt
xor
cmp
mov
mov
movsb
out
stos
jae
ret
or
mov
rorb
sub
mov
or
mov
inc
mov
pop
sub
jno
mov
lahf
add
lar
inc
pop
jno
and
mov
je
mov
adc
xchg
lret
movsb
mov
shl
push
jo
and
aaa
jl
repnz
xor
mov
and
pop
mov
jo
jg
push
insb
sbb
mov
lods
repz
push
pop
xlat
or
je
ja
sub
inc
push
je
cmp
push
adc
mov
outsl
shrl
pop
pushf
out
pop
dec
je
or
mov
data16
inc
aam
lcall
jg
into
out
xor
cmpsl
inc
rcl
mov
das
jg
pushf
lods
nop
mov
test
cmc
outsb
xor
dec
call
sahf
push
subl
ja
xchg
ja
into
pop
and
xchg
shlb
test
les
cmpsb
jge
cltd
andb
push
popf
mov
addr16
inc
ds
std
xor
aaa
frstor
aad
aam
int3
clc
std
rolb
mov
int
jecxz
and
shlb
dec
jl
xchg
add
mov
daa
and
pop
add
sti
sub
lcall
sbb
enter
stos
mov
dec
mov
aas
sub
clc
shl
iret
push
imul
xchg
xor
ja
jmp
jbe
rcll
push
mov
mov
jb
call
push
stc
mov
fbld
mov
pop
jmp
subl
xchg
or
sub
push
jmp
les
sahf
out
add
xor
loope
mov
mov
inc
sbbl
mov
sub
inc
xchg
fs
fcomps
sub
and
lahf
inc
jle
or
dec
adc
mov
cli
das
mov
mov
add
sub
outsl
inc
popa
dec
mov
imul
loope
or
popf
or
and
push
push
xchg
fsubs
xchg
sbb
sub
push
aam
sbb
dec
leave
in
pop
and
push
in
adc
cmp
popa
sahf
test
cld
scas
jns
sbb
js
and
xor
jmp
jbe
mov
xlat
sahf
rclb
popf
and
dec
mov
mov
daa
push
adc
jmp
push
subb
fs
lock
call
lret
sub
cmpsl
lret
mov
ficoms
loopne
mov
bound
fcoml
dec
mov
xor
pushf
popf
popf
loop
outsl
pop
cwtl
or
mov
jg
sbb
dec
cld
sub
xchg
xchg
xacquire
cmp
and
jge
mov
adc
dec
or
push
add
pop
fldt
dec
mov
iret
test
mov
ffreep
outsb
ljmp
sub
ljmp
arpl
mov
pop
js
outsl
and
add
mov
lahf
dec
jnp
test
cmpsb
sahf
cmp
and
jge
dec
jno
daa
sub
jge
into
push
inc
cld
js
mov
mov
jne
test
xor
cmp
push
mov
insb
jecxz
xchg
repz
mov
dec
aam
test
into
repz
leave
enter
and
adc
add
jae
push
mov
fisttpl
movb
dec
push
push
insl
outsb
xor
cmp
adc
mov
xorl
mov
cmp
mov
in
pop
mov
into
outsb
mov
ret
adcb
or
xchg
ds
jns
cli
mov
cltd
rcll
imul
out
das
jmp
in
xchg
xchg
mov
push
or
xor
sub
arpl
and
pop
push
sub
pop
es
mov
orb
gs
pushf
popf
mov
dec
popa
test
or
push
aas
dec
stos
push
rclb
add
notb
cmp
xor
mov
andb
mov
clc
mov
jmp
mul
or
fwait
test
cmp
and
lcall
test
lcall
jnp
fcomi
jnp
dec
sub
lods
imul
shl
rcrb
stos
sbb
rcr
cmp
cmc
inc
test
loop
cltd
dec
and
andb
and
mov
jne
cmp
xorb
push
popfw
ljmp
or
test
jle
arpl
imul
sahf
xor
pop
insl
les
fcmovnbe
dec
dec
and
ljmp
jns
fldcw
xor
sahf
in
sub
xchg
in
movsl
jl
pop
insb
aaa
repz
loop
inc
xor
aam
mov
stc
arpl
mov
mov
jp
sub
mov
cmpsb
mull
pop
pop
cmp
lock
cmp
pop
out
or
movsl
outsb
fsts
add
clc
push
jnp
cmpsb
sub
clc
adc
into
dec
shll
cmp
mov
cmc
loopne
pop
test
xchg
pop
jmp
fcoms
pop
fbld
call
inc
push
cmp
mov
adc
repz
pop
jb
repz
jl
lods
add
repz
lods
inc
es
pop
push
stc
loop
notb
mov
xchg
imul
sahf
mov
cwtl
nop
cmp
call
and
cmp
shrl
mov
inc
cwtl
lret
out
sub
decb
bound
into
les
data16
rolb
adc
negl
mov
cli
jmp
add
dec
cmpsl
sub
call
fst
inc
mov
or
das
leave
cmpsb
outsb
and
fcmovnu
xchg
hlt
sarb
pop
ret
pop
pusha
test
mov
mov
adc
cmp
jnp
or
stos
js
test
mov
pop
lret
add
es
sub
pop
push
dec
pop
fildl
cli
arpl
mov
push
nop
push
or
or
inc
into
js
mov
arpl
call
adc
pop
cmc
ftst
and
vrsqrtss
xor
es
fsubl
cmp
sub
add
and
jle
clc
cwtl
shrb
push
imul
pop
mov
in
adc
inc
hlt
mov
xchg
sti
xor
xchg
pushf
cld
out
jns
pusha
nop
ret
mov
loope
ss
outsl
and
popa
xor
test
mov
imul
xor
in
xchg
outsl
lods
sbb
or
inc
adc
out
dec
push
repz
cmp
orb
and
mov
bound
daa
into
mov
idiv
stos
add
cmc
lods
sbb
fcomps
cltd
jo
xor
inc
cmpsb
lret
repz
mov
aas
and
pop
mov
push
aad
xchg
test
insl
sti
or
dec
lods
das
push
adc
into
bound
in
lock
cmpsb
arpl
rorb
mov
fldl
sbb
push
jmp
adc
add
icebp
cwtl
sbb
adc
shrb
xor
xor
mov
add
rolb
stos
adc
xor
mov
jle
outsb
outsb
xchg
int3
mov
jo
fstpl
out
pop
and
push
cmpsl
je
fcoml
jle
cld
ficoml
jb
jmp
xor
lds
sar
xor
add
xchg
push
cld
ficoms
arpl
mov
je
out
mov
fwait
push
sub
addr16
xlat
xchg
dec
sbb
aam
xchg
pop
shlb
cmp
xchg
sub
xchg
adc
add
rorl
or
sbbb
push
push
out
xor
jb
adc
clc
in
fmull
popf
lcall
mov
sbb
pop
hlt
push
adc
sub
inc
into
movsb
ds
sti
outsb
inc
ljmp
insb
fldl
ret
faddp
fcoms
sti
loope
cmp
add
and
jae
or
out
pop
call
int3
rcrl
xor
jno
aas
in
jo
fldcw
cwtl
test
faddl
cmpsl
insl
imul
mov
lahf
mov
ficompl
xor
sub
mov
mov
icebp
inc
jmp
push
jns
mov
dec
xchg
fwait
xor
mov
jns
add
insb
int
fstl
dec
xchg
dec
dec
sbb
scas
inc
pop
aaa
fistpll
ret
addr16
sub
and
jmp
pop
mov
mov
insb
pop
ja
bound
push
loop
jl
push
dec
fadd
in
scas
dec
ret
mov
cli
shlb
push
xchg
in
mov
test
push
test
lea
sbb
fdivrs
loop
movsl
js
mov
pop
test
insb
ljmp
ja
mov
stc
dec
ds
repnz
cmp
xor
adc
ds
sbb
jle
addr16
mov
mov
and
mov
jmp
nop
pop
pop
mov
push
or
mov
int
jl
xchg
test
pop
in
inc
add
fistps
icebp
jno
mov
rorb
adc
dec
pop
enter
cmp
pop
mov
cmp
inc
test
xchg
mull
test
dec
imul
loope
loop
or
pop
pop
rcr
push
xchg
mov
popf
jno
pop
call
test
stc
cwtl
or
int
bound
je
mov
aam
mov
inc
aas
ficoms
dec
aad
push
hlt
decl
pop
clc
loope
pop
and
cmc
xchg
imul
stos
in
mov
sub
cs
cwtl
popa
loopne
les
sub
ds
and
or
sub
mov
push
fisubrl
leave
int3
xor
mov
jp
xor
loopne
testl
cltd
test
cmp
jecxz
test
imul
add
and
lcall
scas
pop
push
cli
add
lods
vmwrite
mov
sahf
mov
pusha
fsubrl
enter
push
or
mov
ljmp
ret
mov
push
mul
mov
xchg
popa
ret
xchg
andb
rorl
and
mov
add
mov
test
sub
jle
cltd
loope
push
jo
ja
lcall
jle
and
pop
shll
mov
ficompl
push
pop
pop
les
mov
and
std
inc
or
sbb
pop
sub
clc
popa
pop
add
add
add
cli
jge
shll
push
xchg
pop
enter
mov
rcrb
sub
jmp
je
dec
xchg
das
shlb
cld
sbb
jns
jge
pop
add
and
mov
lret
and
stos
mov
mov
jge
push
arpl
fdivrl
call
sbb
mov
es
sbb
loope
sub
xor
inc
sbb
xor
sub
pop
lods
inc
cmp
adc
push
add
sbb
push
xor
cmp
into
mov
insl
psubb
jnp
leave
mov
and
decl
sub
scas
scas
cmpsl
xchg
fstps
dec
xchg
sbb
mov
adcl
sbb
adc
popa
xlat
aam
sbb
les
cld
lcall
pop
popf
je
out
sub
and
pop
or
icebp
mov
aad
dec
es
out
sbb
loope
pop
pusha
es
int
in
pop
xchg
mov
frstor
sti
idivb
adc
mov
sub
clc
pop
es
inc
fs
idivl
push
in
into
outsl
in
aas
add
sub
lcall
jle
pop
jb
arpl
add
scas
xor
test
sbb
and
mov
mov
inc
aaa
lcall
cmp
pop
leave
mov
add
scas
and
daa
xor
lds
out
scas
xchg
mov
sbbb
mov
adc
push
test
data16
out
jns
sub
sar
int
in
and
out
mov
inc
xor
fisttpll
icebp
sub
push
jp
pusha
ss
fldcw
out
data16
out
jns
push
or
dec
ret
cwtl
sbb
xor
mov
addr16
mov
lret
stc
out
mov
and
inc
lock
dec
stos
inc
movb
xor
out
mov
dec
ljmp
cltd
jae
mov
jo
stos
ret
pop
lahf
dec
ret
rorl
mov
push
push
imul
fwait
jns
mov
inc
xchg
and
cmovbe
adc
incb
dec
dec
mov
stos
push
inc
inc
cmp
cmpsl
mov
rorb
and
out
push
clc
adc
pop
into
sbb
data16
cwtl
gs
sbb
dec
mov
mov
mov
sub
int3
lahf
xor
pop
divb
andb
adc
jns
gs
push
imul
push
data16
jno
push
sub
sbb
mov
arpl
movsl
lds
xchg
sbb
cmp
push
push
mov
enter
push
jge
cmp
mov
outsb
rorb
jecxz
imul
aas
push
dec
inc
cwtl
pop
or
xchg
pop
dec
pop
movl
inc
gs
cld
or
mov
scas
inc
mov
out
jl
sub
orl
sbb
xor
stos
and
loop
cltd
out
jb
daa
decb
sub
cmp
mov
adc
or
into
xor
rcr
sbb
imul
test
xchg
sbb
or
lods
cmc
mov
or
and
push
pushl
adc
cmp
dec
das
call
push
lahf
loopne
and
cmp
into
leave
mov
add
ret
repz
ja
inc
pop
outsl
mov
push
mov
xchg
stc
faddl
jge
xor
xor
in
inc
data16
in
fsubl
shll
mov
mov
mov
sbb
adc
jecxz
cmp
das
xchg
mov
xchg
jne
mov
cmpsl
jmp
stos
aaa
imul
nop
in
addr16
jns
jbe
dec
in
out
js
mov
adc
clc
inc
pushf
pop
inc
enter
cmp
sti
mov
pop
scas
insl
out
aas
mov
enter
pushf
add
xor
or
push
in
mov
sbb
jo
sub
aam
add
sbb
imul
cli
xorl
inc
sub
or
push
pop
movl
aad
leave
jle
add
xlat
or
xor
fsubs
imul
stos
inc
mov
dec
mov
and
sbbl
mov
das
and
mov
bound
imul
xchg
xor
cs
lcall
stc
push
sbb
lds
mov
icebp
mov
mov
inc
sbb
sub
push
sbb
stc
mov
pop
or
mov
push
add
mov
inc
imul
mov
sbb
rorb
sbb
clc
mov
xchg
int
adc
add
jnp
push
fmuls
clc
sarl
mov
aaa
mov
popf
jl
pop
stos
es
aad
or
push
testb
rolb
xor
jnp
cmp
sbb
mov
or
xlat
bound
and
movsb
adc
push
lahf
int
or
lcall
pop
sub
les
imul
jp
data16
cltd
ja
mov
add
ret
imul
test
xlat
add
mov
ja
jg
mov
out
sub
lock
mov
xchg
xchg
dec
adc
push
xor
push
es
pop
idivb
or
aas
xchg
sbbl
nop
xchg
mov
and
mov
ljmp
push
push
cmp
jle
push
jne
cmp
gs
fdivp
lcall
xchg
dec
enter
or
push
sub
jle
push
adc
cmp
xor
jns
gs
sbb
repz
sub
addl
test
jle
int3
mov
mov
fstl
add
pop
jb
pop
push
out
std
pop
xorb
roll
push
jg
loope
jmp
dec
stc
push
or
or
xor
sub
out
hlt
lock
dec
xchg
popa
sub
mov
ficompl
shll
cwtl
mov
inc
daa
mov
stos
in
push
inc
pop
add
inc
xor
push
xchg
mov
mov
lcall
sub
jecxz
lea
and
into
mov
dec
pop
scas
dec
dec
sbb
jb
out
cwtl
stc
push
mov
popa
stos
lea
fnsave
stos
repz
push
pop
or
pop
sbb
call
nop
imul
push
int3
jecxz
dec
cld
mov
inc
push
mov
push
loop
shl
mov
out
jmp
call
movsl
sahf
aas
mov
mov
and
enter
dec
sbb
push
and
std
ss
cmpsl
enter
cmp
add
jle
mov
dec
nop
xlat
sbb
fwait
push
pop
jbe
sbb
loope
and
or
add
test
or
add
jmp
pop
rcr
mov
jg
jne
insb
imul
push
and
jmp
jb
jae
xlat
lret
loop
andl
ucomiss
mov
xchg
sub
std
jmp
ljmp
lcall
mov
aas
mov
outsl
aas
mov
mov
sub
fdivr
cmp
loopne
mov
dec
mov
sbb
sbb
xchg
cmp
fbld
enter
sub
dec
cmp
push
jg
mov
mov
add
inc
jne
jo
ja
sub
test
mov
mov
dec
and
and
ret
loope
mov
imul
dec
out
adc
pop
arpl
cld
mov
xor
mov
repnz
jne
popf
popa
adc
pop
mov
fwait
mov
xor
xchg
jl
add
sub
mov
push
sub
add
cltd
sub
out
loop
xor
add
mov
iret
ror
ret
or
xor
lods
jne
add
xchg
fstl
mov
mov
jb
jecxz
cmp
aas
into
xor
lahf
lds
or
cmpsb
in
bound
add
xchg
mov
incb
rclb
or
sbbl
les
inc
scas
andb
pop
ljmp
int3
mov
cmp
inc
sbb
mov
sarb
jl
leave
in
ret
pop
and
jb
pusha
popf
or
push
js
sbb
cmpsb
adc
out
jmp
ret
adc
xor
add
xchg
add
cmc
mov
xor
lcall
jge
jno
std
jbe
aam
mov
cwtl
jnp
gs
test
xchg
cmp
mov
sbb
adc
outsb
xchg
inc
cltd
lret
pop
repnz
sbb
testb
cmp
lods
daa
adc
imul
jb
mov
movsl
xchg
jle
fs
cmp
cs
insl
aam
mov
iret
ret
and
mov
loopne
ja
rcr
scas
xabort
jle
out
push
xchg
mov
add
fbld
cmp
dec
sbb
pop
ja
lods
fwait
cmc
jo
xchg
jp
lods
int3
xorl
popa
mov
sub
pop
mov
inc
cmpsb
nop
aad
mov
adc
jge
aas
dec
pop
jecxz
and
mov
mov
arpl
stos
sub
xor
push
inc
push
clc
or
mov
js
in
popf
adc
mov
adc
jno
imul
push
jo
lcall
xchg
mov
sbb
lahf
ljmp
lret
cltd
roll
into
stos
stc
aad
cs
adcl
mov
aaa
loopne
test
lods
pop
imul
fwait
popf
stos
jge
jp
xorl
or
adc
inc
repnz
sbb
pusha
pop
jp
xchg
mov
xor
xchg
movsb
into
jl
dec
sahf
dec
js
enter
sub
push
mov
popf
jbe
sbb
cmp
mov
mov
sbb
mov
insl
addb
jg
movsl
frstor
and
imul
pop
mov
mov
sub
scas
cld
mov
ficomps
xor
cmp
mov
inc
test
fucom
lods
stc
and
orb
ja
pop
addb
push
clc
mov
insb
xchg
mov
jo
fsubrs
sbb
loop
movsb
loop
sahf
cmpsb
ret
sub
js
imull
dec
fidivl
inc
imul
call
sub
push
mov
cwtl
out
cmp
pop
sbb
imul
fidivs
test
push
cs
les
ret
mov
ljmp
dec
mov
loope
or
push
daa
cmp
jno
sbb
pop
ficoml
jge
sub
test
mov
call
repz
rclb
push
adc
ja
cmp
dec
mov
mov
cwtl
sub
mov
cld
pop
stos
cs
sarb
pop
inc
and
push
cld
sbb
js
add
into
mov
popf
stc
imul
jne
lcall
jns
iret
popf
shrb
jg
cmp
mull
pop
stos
insb
push
mov
mov
and
jns
and
dec
sbb
push
or
or
aas
add
lcall
add
dec
push
out
scas
sbb
icebp
mov
aam
xchg
mov
add
insl
dec
sbb
mov
mov
mov
int
mov
loop
push
push
scas
popf
sarl
arpl
jae
icebp
scas
mov
fs
mov
mov
xor
push
call
pop
mov
or
ds
aad
arpl
or
lods
mov
clc
xchg
pop
test
mov
out
lock
lds
sub
push
clc
pop
aas
mov
daa
lods
ret
inc
jbe
popa
add
lods
cs
jge
mov
adc
pop
imul
pop
push
iret
mov
in
or
inc
cmc
outsl
add
int3
adc
mov
lea
mov
js
pushf
insl
jle
int3
mull
mov
pop
jno
adc
cmp
inc
or
lods
xchg
test
jp
fimull
add
dec
xchg
pop
es
add
mov
rep
mov
lea
hlt
dec
daa
sbb
inc
mov
jmp
sbb
adcb
fisubl
cmp
je
push
xchg
arpl
xorl
test
lahf
pop
shll
inc
mov
idivb
mov
int
scas
mov
pushf
cwtl
testb
cld
fldl
and
imul
cmpsl
mov
xlat
mov
mov
pusha
enter
or
inc
push
sbb
lea
xor
cmp
pop
int
or
or
scas
sub
adc
inc
lret
imul
mov
lret
js
inc
add
loop
pushf
and
sub
mov
cwtl
and
push
int
xor
sahf
mov
arpl
push
clc
daa
test
ss
jge
mov
push
dec
sub
xchg
cmp
insb
or
xchg
cmc
or
push
out
mov
inc
mov
push
sarl
pop
insl
inc
jle
dec
xchg
shll
iret
das
inc
sub
in
out
popa
lds
dec
adc
int
mov
loopne
fisttpl
nop
mov
jns
jbe
add
cmpsl
push
jb
loopne
fnstenv
xor
adc
sub
jne
gs
mov
mov
lret
xor
mov
js
stc
jp
shl
inc
sahf
cmp
insb
loopne
xchg
cs
mov
mov
lock
xor
fisttpl
insb
mov
stc
idivb
ret
mov
jecxz
jns
ds
stos
pop
scas
jle
out
sub
lret
repz
cmp
mov
pushf
mov
inc
or
lock
and
sub
cmp
xchg
xor
lods
dec
inc
and
rol
push
mov
push
mov
adc
in
xchg
sub
das
icebp
mov
adc
jle
jne
cld
divl
dec
mov
and
in
jae
ret
cmc
int
aam
sbb
mov
clc
pop
dec
push
les
add
cmp
pop
pop
imul
cmc
push
push
lds
mov
jbe
jg
ret
inc
mov
xor
mov
aam
ds
ljmp
leave
lret
mov
das
imul
xchg
fists
jno
out
pop
xchg
lahf
insl
xchg
xchg
push
movsl
scas
mov
xor
dec
jns
xlat
gs
add
and
insb
aas
xchg
mov
inc
in
and
mov
out
enter
into
pushl
jle
inc
bound
xchg
dec
arpl
adc
pop
mov
mov
js
mov
sbb
ja
sub
aaa
dec
pusha
pop
in
bound
mov
mov
das
fisubl
movsb
inc
mov
movsb
gs
out
sbb
shlb
in
mov
jne
imul
jne
scas
in
pandn
lods
adc
inc
out
mov
jg
or
add
rcl
loop
mov
cmp
add
je
out
cmp
and
xchg
ret
in
fcoml
cmp
repz
fsubrl
pop
loope
jg
or
scas
mov
mov
idiv
cmpsl
jae
push
lds
xlat
popf
xchg
aam
sbb
or
pop
ret
xchg
xor
mov
daa
xor
cmpsb
lahf
fsubrl
xor
pop
aad
jns
test
loopne
dec
icebp
fdivrs
jecxz
jmp
mov
push
add
mov
ret
leave
int3
subb
lcall
cmp
aam
mov
int3
les
push
mov
iret
les
dec
pop
aaa
xchg
popf
gs
das
mov
inc
lret
inc
jbe
push
lret
mov
loopne
inc
cmc
mov
repz
and
fstp
mov
lods
pop
xor
addr16
push
ret
vmovdqu
test
or
test
jne
add
les
mov
repz
jle
xchg
hlt
or
add
popa
pop
xor
and
stos
push
sbb
imul
jge
cmp
dec
dec
xor
cli
bnd
add
cwtl
scas
cmp
or
sbb
lea
fs
sub
addr16
and
mov
mov
inc
xorl
dec
inc
std
push
in
cmp
adcb
lods
mov
inc
cmp
ret
fadds
jnp
out
mov
dec
jne
fnstenv
les
mov
mov
push
fs
fidivrs
pop
out
ss
ss
fldenv
cmp
xchg
test
sbb
sahf
hlt
cld
xchg
or
push
outsl
cmp
clc
loope
mov
out
mov
add
imul
xor
in
aaa
pop
rol
sbb
sti
lock
hlt
js
pop
enter
arpl
push
movsl
out
shl
inc
fwait
ljmp
into
pop
cld
test
jg
js
icebp
lds
xchg
sti
leave
jne
fldt
push
or
sbb
add
sbb
fiaddl
out
sarb
sub
adc
out
and
das
insb
outsl
push
out
xchg
loopne
stos
xor
imull
push
test
cmp
sub
jle
pop
nop
movsl
test
rclb
cmp
push
loope
js
enter
sub
ljmp
sbb
stos
lret
enter
popa
loopne
pop
cmp
mov
imul
mov
jecxz
ret
dec
das
pop
js
movsb
push
inc
stos
mov
icebp
cmp
jg
xor
inc
loop
mov
fildll
adc
pop
in
daa
mov
xchg
mov
add
jge
sub
mov
fnstenv
pop
js
clc
adc
jmp
icebp
stos
lret
movsl
cmc
jnp
dec
mov
pop
pop
out
xor
jbe
enter
push
icebp
push
jno
mov
sti
inc
mov
jne
xchg
xchg
xor
movsl
jbe
in
sub
push
and
in
pop
jg
inc
sbb
scas
jns
outsl
imul
sub
mov
push
sub
mov
adc
pop
into
sbb
inc
fmull
lods
clc
or
mov
mov
fidivl
jmp
andl
in
xchg
scas
xchg
sbb
shll
scas
cmp
mov
ret
aad
and
sbb
sub
cwtl
jnp
xor
pop
mov
mov
mov
add
loopne
mulb
dec
int3
out
sbbb
mov
jmp
pop
pop
outsl
outsl
rolb
push
mov
pop
fs
jmp
mov
notb
fldenv
jae
ret
xchg
sbb
mov
mov
in
ficoms
das
cmpl
scas
jb
add
push
inc
sbb
dec
cmp
leave
jge
xchg
sub
push
aad
inc
dec
add
sbb
sbb
enter
sarb
ja
adc
cmp
shr
jle
push
outsb
push
mov
jle
cmpsb
cwtl
mov
stos
ds
imul
xlat
leave
outsb
cmp
mov
popa
pushf
out
sarl
sub
mov
popf
sub
xchg
add
mov
ret
mov
dec
lcall
adc
xchg
aas
jb
daa
sub
clc
add
push
mov
and
ss
mov
or
xchg
cwtl
or
push
icebp
mov
icebp
add
sti
jl
cld
fdivr
jg
rclb
movsb
jg
aad
sbb
test
jnp
fs
dec
mov
cmp
jno
leave
mov
inc
bound
or
mov
pop
iret
sbb
inc
aaa
mov
das
in
jl
push
cwtl
mov
loopne
lock
inc
mov
cmp
mov
lcall
in
push
xchg
lods
xchg
lret
pushf
in
mov
add
lahf
cld
mov
inc
andl
mov
hlt
inc
enter
mov
fmul
incb
jl
sbb
xchg
stos
push
popa
std
pop
aas
cltd
icebp
mov
outsb
inc
scas
popf
clc
out
xchg
dec
cmpsb
xchg
push
inc
lret
orb
cs
inc
ret
push
pop
adc
and
mov
std
mov
xor
stos
or
or
idivl
out
push
lcall
icebp
add
xor
cli
and
fdivrl
cwtl
shlb
xchg
shlb
cmp
and
fs
sub
jnp
popf
sub
leave
sub
sub
mov
mov
push
int3
inc
lret
lods
ja
or
loopne
testl
fstps
pop
mov
dec
imul
add
lret
adc
cmp
or
inc
je
sub
sub
xchg
push
outsl
inc
mov
mov
incb
xchg
adc
nop
xchg
lds
push
outsl
shr
loopne
test
sbb
sbb
xchg
cmp
mov
pop
inc
pavgw
xchg
fcmove
pop
cmp
lcall
and
ret
mov
fildl
out
enter
lea
lock
jle
cmpsl
xor
fidivl
aam
pop
in
push
nop
das
out
pop
xchg
out
out
lret
in
popf
lock
aas
jnp
xor
divl
sarl
sub
shlb
add
pop
and
cmc
push
jp
xchg
and
mov
adc
xchg
fdivrs
jb
loope
push
cmp
out
jecxz
pop
outsl
sbb
and
pop
pusha
es
xor
pop
cmp
ds
mov
cmpb
clc
dec
inc
xchg
xor
hlt
adcb
and
ds
call
fstps
clc
lahf
dec
rolb
sbb
in
into
xchg
stos
sbb
stos
pop
aad
sub
mov
adc
pop
inc
mov
mov
mov
pop
popa
mov
bnd
call
addl
xchg
aam
sbb
inc
mov
imul
and
test
cmc
jbe
aam
xchg
cmpsl
mov
fs
push
jbe
in
and
in
cs
fs
rcrl
imul
add
mov
inc
arpl
xchg
xchg
xchg
jl
stos
out
dec
in
mov
xchg
aaa
sar
aas
sbb
fisubl
inc
shlb
out
ss
test
push
and
ss
push
fnstcw
sti
loope
lcall
push
cmc
int3
pop
pop
shll
sbb
mov
cmp
cld
cmp
lock
aad
loope
adc
add
repnz
orb
ret
loope
pop
call
movsb
cmpsl
fcoml
inc
rol
lock
mov
and
inc
sub
jl
and
rclb
clc
mov
push
jl
inc
fucomi
outsb
fisubs
jmp
pop
mov
lods
movsb
xchg
mov
jle
inc
std
rclb
arpl
ret
jmp
xor
jecxz
lods
lahf
cltd
shlb
gs
outsb
call
loopne
adc
lcall
sub
sub
mov
cmp
or
test
in
into
jae
imul
fbstp
xor
inc
add
mov
cmp
push
insb
insb
sub
mov
pop
rol
push
mov
call
daa
and
dec
cmp
ja
cmp
iret
sahf
call
sub
loopne
dec
or
fwait
sbbl
ljmp
adc
xor
xchg
sub
cmp
lods
sbb
data16
mov
xor
in
aad
aam
clc
adc
outsl
fiaddl
fdivs
push
mov
and
push
enter
loope
add
arpl
rcl
lret
pop
jg
sub
inc
xchg
in
out
outsl
dec
push
jno
out
mov
daa
adc
inc
xor
and
jge
xchg
xor
pop
mov
dec
mov
sbb
push
jp
push
xor
jge
pop
les
idiv
push
les
mov
xchg
or
push
add
mov
push
xor
push
addr16
popf
fs
push
pop
mov
xchg
and
mov
jae
cmp
cmp
mov
rcrl
and
mov
test
lcall
test
test
pop
in
xchg
lds
outsl
fisubl
cmp
dec
mov
decb
mov
xor
jns
dec
and
jge
das
mov
jmp
in
inc
mov
call
sbb
push
or
adc
aad
test
in
mov
jg
add
jl
push
xorl
add
clc
mov
jl
cmpsb
mov
outsb
mov
push
ss
int
dec
arpl
or
out
xor
mov
cmp
out
je
mov
test
mov
cmp
hlt
cmp
jne
mov
and
ljmp
ds
pop
cs
std
ljmp
mov
loope
imul
sub
adc
cli
mov
mov
out
ret
pop
xchg
das
inc
pop
dec
stos
push
in
shrb
lretw
pop
popf
ret
dec
xchg
jp
stos
sub
xor
xchg
shlb
rdpmc
dec
inc
or
add
ret
out
fcoms
mov
push
mov
pop
orl
lds
dec
or
jecxz
mov
push
pop
lahf
loop
xor
adc
or
adc
dec
push
stos
sub
xchg
jbe
and
mov
xchg
jno
out
aad
popf
into
dec
push
mov
push
ds
movsl
fdivrl
pusha
aaa
cmp
and
das
jb
orb
ret
cmp
add
adc
insl
clc
ret
cmp
icebp
sub
inc
xchg
mov
loop
mov
xor
push
sarb
add
scas
gs
ror
xchg
cmp
scas
xlat
dec
xchg
pop
sub
push
loope
dec
xchg
mov
insb
cmp
std
imul
arpl
adc
cli
sahf
xchg
jno
jecxz
xchg
test
add
testb
fimull
outsl
pop
and
pop
and
sahf
and
lret
cmpsl
pop
enter
sbb
xchg
inc
mov
aas
clc
or
cmpsl
pusha
xchg
pop
adc
inc
popf
aam
roll
int
mov
pop
ljmp
push
xorb
push
scas
repz
cmp
jmp
insb
adc
lods
inc
or
vmovdqa
cmp
popf
inc
push
xor
xor
test
xchg
mov
pop
dec
add
iret
push
mov
xor
scas
or
loopne
mov
imul
or
mov
fucomp
mov
clc
cmp
xchg
fadd
cld
imul
push
push
lds
ljmp
push
sbb
in
cmpsb
outsb
sbb
jg
mov
cmpsb
dec
stc
f2xm1
sbb
or
ret
cltd
sub
mov
movl
pop
lds
ret
bound
clc
jge
test
mov
pusha
push
mov
cwtl
mov
fdivrl
add
mov
int3
insl
roll
pushf
lea
call
adc
xchg
adc
lret
clc
stos
sbb
or
out
fwait
jmp
inc
sbb
in
dec
mov
mov
and
notl
or
pushf
aam
push
jo
mov
mov
xchg
fstpl
jmp
les
fistpl
mov
adc
call
fstpt
and
test
movsb
mov
into
rclb
in
adc
cmp
mov
clc
xchg
pop
pop
pop
pop
dec
test
fmull
cmpsb
inc
mov
out
pop
xor
out
sbb
xchg
test
jecxz
mov
or
cmp
and
rorl
inc
dec
movsl
push
push
ja
add
pop
mov
pop
nop
clc
setp
or
push
shrb
dec
sub
test
jle
repnz
fadd
hlt
and
mov
mov
pop
mov
pushf
xchg
xchg
cmp
xor
push
cs
insl
lret
mov
insl
push
inc
dec
and
inc
mov
subb
inc
roll
inc
out
in
aaa
sbb
jle
cs
repnz
outsl
cs
aad
outsl
rcrb
add
dec
inc
cmp
mov
push
sahf
loope
loop
or
mov
imul
stc
jmp
or
pusha
lahf
je
insl
jmp
jle
and
mov
jae
lods
inc
mov
mov
popa
fidivrs
in
mov
pop
dec
push
enter
imul
cmp
inc
dec
dec
out
enter
int3
mov
adc
popf
pop
fdivrs
sbb
js
verr
addr16
stos
jle
pop
rcr
repnz
add
cmp
fucom
shll
lods
aaa
ja
jle
xchg
scas
mov
cmc
fwait
sub
lds
aam
push
dec
push
sahf
push
fcmovnu
mov
jle
adc
jae
or
xor
fwait
mov
jg
cs
mov
lahf
and
movsl
xchg
push
jnp
mov
out
es
lods
leave
lret
sbb
into
pop
out
ss
das
hlt
dec
xlat
in
sbb
xchg
pop
jo
enter
repnz
rcr
and
inc
dec
test
adc
mov
xchg
outsl
fcompl
push
jns
jne
rorl
adc
je
fisubrs
mov
cmp
cmp
inc
jle
call
jo
int
inc
aad
mov
iret
pop
lods
mov
add
popf
and
shrb
add
daa
xchg
popf
push
jmp
xchg
push
or
ret
shlb
add
cltd
lret
in
out
sbb
xor
sbb
or
mov
sbb
fcmovbe
imul
std
aad
addr16
data16
adc
rorb
enter
fdivl
rclb
aam
mov
xchg
push
jle
movl
xor
mov
mov
mov
jmp
push
cs
jbe
ficoml
clc
in
out
lds
ret
daa
jne
aam
fldcw
js
lods
add
aaa
sub
mov
mov
rorb
cli
mov
rcll
mov
xor
es
mov
push
test
insb
fsub
sub
test
es
ucomiss
fmul
xchg
call
fisubrs
orl
ret
bound
mov
call
rolb
push
je
xchg
push
iret
or
xchg
out
mov
shr
mov
subl
es
lret
push
jno
jmp
fidivl
sbb
sub
test
or
xadd
adc
add
adc
cmp
dec
xchg
sub
shlb
rorl
test
loop
pop
sub
lods
jecxz
inc
dec
ss
scas
pop
aam
stc
xor
push
xor
fdivs
pop
pop
xchg
pop
imul
cli
outsb
and
or
sbb
pushf
pop
fcomp
jnp
fdivs
push
xchg
pop
je
adcb
fimuls
sub
ret
adc
pusha
bound
ret
test
test
mov
fbstp
inc
ja
sub
xor
inc
fwait
in
test
icebp
push
shll
dec
and
mov
adc
jnp
push
ret
into
pop
not
lret
adc
mov
push
or
jae
mov
lods
mov
push
xchg
add
mov
push
mov
cld
in
push
push
out
cmpsb
xchg
xor
dec
inc
std
xor
push
adc
fnstenv
dec
dec
stos
insl
xor
pop
dec
cmpsl
ja
xchg
xchg
pusha
push
mull
or
inc
pop
jp
mov
daa
popf
xchg
cmp
xor
mov
mov
and
in
push
es
jo
ss
js
mov
in
mov
js
xchg
in
cmp
push
pop
loop
daa
lahf
xor
shlb
cmpsl
xchg
repz
push
sbb
pop
jecxz
pop
js
sub
push
xor
push
mov
loop
out
aam
mov
sbb
ret
cmpsb
fisttpll
nop
cld
mov
push
push
sbbb
int
fisttpl
popa
lret
dec
pop
cmp
sbb
lahf
fldl
out
or
xchg
sbb
or
mov
mov
dec
nop
sahf
lretw
mov
inc
and
pop
and
fsubl
test
movsl
mov
rorb
inc
inc
shl
dec
adc
pop
mov
xchg
xchg
push
push
xlat
dec
pop
subb
sub
inc
jae
pop
jl
test
and
lds
mov
inc
sbbl
and
sub
pop
fs
enter
rorl
xor
outsl
xchg
clc
jp
mov
jmp
mov
or
xor
hlt
je
adc
sub
ret
xor
jmp
pop
outsb
cmpsb
mov
lret
add
xor
jmp
ss
xchg
nop
nop
add
push
inc
popa
jle
push
and
lret
pop
xor
fldt
push
dec
jmp
cltd
and
jge
je
push
sub
divb
pop
jl
inc
idiv
outsb
jp
mov
lret
add
cld
insb
add
shll
stos
int3
and
adc
mov
mov
rorb
sbb
dec
ret
mov
and
push
cmpsl
cmp
sbbl
fldl
mov
sbb
popa
ret
jl
or
mov
repnz
pop
es
jmp
xchg
cmp
fbld
test
xor
bound
js,pt
adc
dec
push
ds
mov
dec
jnp
push
push
xor
je
jnp
bound
sub
mov
icebp
pop
jle
xchg
outsl
and
arpl
cli
std
dec
aam
add
aas
cmp
lock
les
jns
icebp
pop
pop
inc
pushf
and
popa
inc
jb
xchg
push
pop
xor
sub
cmc
sahf
subl
and
xor
pushf
mov
pop
ficoml
es
push
test
test
lcall
xchg
movsl
and
mov
push
dec
lret
pop
sbb
rorl
pop
mov
cmp
xchg
push
adc
int
push
jg
mov
ljmp
out
adc
insl
fldenv
mov
lret
call
mov
xor
pop
and
or
mov
push
add
in
dec
imul
inc
icebp
bound
insb
lods
or
ljmp
in
mov
shrb
dec
sbb
jmp
xchg
lahf
mov
inc
shrl
jo
cmpsl
sbb
xor
jo
int3
idivl
out
flds
scas
add
jge
in
je
dec
push
mov
sub
sub
inc
flds
sbb
adc
mov
or
adc
sbb
gs
ljmp
jbe
push
enter
mov
or
adc
mov
movsl
repnz
andb
sti
and
adc
cmp
repz
movsl
std
mov
inc
xor
mov
xchg
stc
mov
jne
mov
fcomps
test
dec
lock
inc
jbe
lea
je
push
out
push
cld
aam
ljmp
xor
jge
push
cld
lods
pushf
lret
outsb
sub
fisttpll
pop
icebp
add
loopne
test
mov
mov
and
cmc
les
ja
push
sahf
jo
ficoml
add
inc
cltd
mov
mov
call
pop
daa
mov
mov
sbb
out
sbb
fildll
push
pop
imul
stc
ljmp
ficomps
inc
test
pushf
fisubrs
push
jne
sub
popa
das
lock
xlat
xchg
or
adc
lret
es
push
dec
mov
add
mov
or
pop
pop
je
jecxz
in
stos
js
mov
jns
clc
outsl
in
jbe
fisttpll
lods
pop
mov
mov
xor
jp
iret
mov
cmp
lock
pop
mov
scas
pop
pop
xchg
mov
dec
hlt
arpl
jle
add
jnp
fadds
inc
adc
jp
cwtl
mov
fbstp
adc
fidivrs
push
adc
inc
adc
sub
imul
push
scas
stos
dec
loopne
imull
fimull
stos
cmp
data16
pusha
fdivrs
adc
sbb
pop
and
test
movq
mov
push
mov
ret
test
sub
jns
jns
push
xor
test
jns
adc
xchg
in
mov
add
loopne
or
es
add
pop
and
je
push
lret
repnz
push
jl
mov
aas
mov
dec
fsubp
ret
xchg
jne
repz
or
dec
jns
out
addr16
je
mov
and
test
lods
and
inc
jg
fcoml
mov
pop
pop
cmpsb
add
ret
out
test
xor
adc
or
pusha
ljmp
inc
jns
push
push
mov
das
push
push
or
add
ret
aaa
repnz
sysenter
mov
fcoms
and
loop
jmp
xchg
fldt
jbe
enter
fcomps
lret
dec
cwtl
mov
cmpb
adc
push
xchg
add
mov
out
pushf
ficompl
mov
cmpsl
xorl
dec
or
out
jbe
sub
imul
shlb
jle
cltd
fldt
xchg
je
hlt
xor
repz
mov
negb
out
jle
xchg
and
test
sub
push
enter
or
xchg
and
incb
movsl
ss
pop
std
mov
lahf
frstor
rcll
sar
inc
adcb
fidivrl
sub
pop
arpl
ja
popf
cs
pusha
call
mov
mov
lret
lahf
shlb
xor
in
test
lds
and
and
cld
or
push
xchg
vcmpss
xchg
push
sub
pop
sub
push
cwtl
mov
stos
adc
sub
dec
cmp
js
negb
or
dec
sahf
cmp
pop
stos
jecxz
push
enter
xchg
xchg
xor
out
int
sub
sti
push
dec
sub
ja
xchg
mov
mov
andb
incl
les
jp
movsl
and
add
rcrb
stc
pop
stc
mov
fisubl
add
mov
fs
adcl
popa
lods
fsts
adc
jmp
aad
sub
adc
outsl
dec
addl
inc
pop
ds
dec
lock
dec
jge
push
xorl
add
int3
rorb
add
shlb
jns
adc
aas
ss
popa
clc
dec
xor
pop
inc
inc
inc
loope
popf
jne
pop
in
xchg
aad
lods
test
push
xor
pop
data16
sub
add
sarl
dec
add
mov
cld
je
or
addl
push
stc
or
std
pop
mov
and
dec
cmp
fcmovbe
pop
ret
cmp
sarl
iret
jmp
add
rorl
or
es
jmp
std
xchg
rorl
dec
into
lret
xor
repnz
flds
dec
jne
shll
in
cltd
mov
rorb
mov
mov
mov
lea
dec
fmull
push
lret
cmc
push
inc
add
push
icebp
popa
sub
daa
jl
xor
push
lods
mov
adc
sbbl
mov
sbb
mov
mov
or
add
cltd
dec
pusha
pop
int3
xchg
je
add
pop
adc
jmp
sbb
mov
pop
adc
or
dec
xlat
imul
stos
jns
or
inc
adc
addb
gs
aas
add
pop
cwtl
inc
and
pop
cli
out
dec
aad
mov
cmp
xchg
aaa
test
or
jmp
iret
push
push
gs
aaa
mov
sub
jb
inc
pop
or
test
stos
ss
lret
test
dec
push
and
lcall
xor
mov
cmp
in
fiaddl
repz
loope
pop
adc
pusha
and
xchg
loope
push
out
fcomi
jbe
xchg
add
adc
mov
push
in
fadds
stos
push
or
mov
fldt
mov
jmp
movsb
pop
popa
lock
add
std
pusha
mov
inc
adc
fbld
cmp
mov
aaa
mov
adc
xchg
sbb
vmovaps
jo
rclb
adc
sub
mov
jo
rclb
lahf
iret
loopne
cmpl
lahf
cmpl
fistpl
fidivl
shl
cmp
mov
mov
inc
out
push
push
push
push
adc
cmp
pop
cwtl
cmp
scas
dec
mov
popa
mov
adc
repz
stos
shrl
mov
and
test
out
arpl
ret
fildl
filds
inc
inc
mov
test
lods
mov
xchg
inc
pusha
sub
pop
lock
push
test
cwtl
xlat
leave
int
pushf
xchg
mov
sbb
jbe
addl
xchg
or
repnz
into
ljmp
push
fs
mov
cmc
sub
shll
lds
popa
xor
push
arpl
cmp
ret
dec
mov
into
jno
test
sbb
push
or
arpl
ret
xor
test
fdivrl
pushf
add
jb
xor
ss
jo
mov
add
sahf
das
cmp
sahf
dec
push
cmp
cld
das
sarl
inc
enter
aad
jnp
std
cmp
mov
pushf
aad
incl
push
movsl
mov
push
mov
xor
lret
sub
xchg
xchg
jns
inc
inc
and
xchg
and
adc
or
ss
notw
sub
dec
xor
cli
aas
add
outsb
pop
xchg
call
xor
adc
nop
and
or
push
cld
push
addr16
pop
out
xlat
mov
push
repnz
out
repz
mov
mov
stos
push
mov
dec
mov
insb
movb
fcoms
adc
rcr
adc
test
mov
outsl
push
fldcw
adc
popf
jno
jno
sbb
sbb
lret
stc
in
nop
and
and
lock
addr16
lret
pop
mov
inc
inc
mov
fadds
mov
mov
jmp
jo
addr16
dec
pop
popa
call
repz
ja
addl
insb
aas
lea
push
xchg
cmp
cmp
or
js
fisubrl
adc
in
jecxz
insl
add
xchg
repz
cmp
stos
or
xor
imul
xor
movsl
dec
jp
xor
mov
in
xchg
cmpsl
jno
fcoms
test
pop
orb
mov
int3
loop,pt
sbb
mov
into
inc
xchg
or
repz
loopne
fucomp
mov
test
into
movsl
and
mov
out
cmp
jbe
shlb
loopne
ja
out
or
rolb
pop
subb
loope
bound
and
lcall
lret
sub
rorb
push
pop
int3
jecxz
cmp
xor
jne
sbb
jae
cmp
fstpt
sbb
cmpsb
sub
in
test
bound
adc
mov
jno
xor
sub
mov
cmp
xchg
inc
xor
mov
sbb
insl
and
dec
jl
movl
pop
leave
lds
dec
jnp
insl
sbb
mov
sbb
mov
xchg
fiadds
enter
adc
shlb
std
pop
clc
or
push
je
sahf
xchg
mov
mov
icebp
inc
push
cld
jno
inc
pusha
lret
push
in
xor
jle
jecxz
enter
fiaddl
mov
loope
mov
rolb
hlt
mov
int3
or
mov
dec
push
pop
daa
rolb
pop
sbb
mov
jmp
mov
lret
xor
mov
fsubp
jno
inc
stos
lock
icebp
push
jbe
and
dec
push
into
mov
dec
push
mov
inc
sahf
mov
sub
xchg
or
repnz
xor
and
sub
fisttpl
stc
push
call
ss
shlb
jge
jnp
add
add
outsl
pusha
sbb
add
mov
iret
ror
or
and
fwait
decl
cmp
adc
mov
cmp
adc
mov
jo
xchg
cmp
xor
lahf
or
jle
jl
sbb
push
ret
pop
std
ljmp
sbb
fcomp
mov
cld
arpl
dec
js
sub
imul
adc
test
cs
sar
lock
mov
cmpl
cmp
sub
fs
mov
xchg
jmp
push
stos
ficoml
les
lcall
sub
add
push
test
jae
fdivrl
rol
mov
lds
add
mov
ss
sub
adc
jmp
jns
loopne
pop
mov
sarb
repnz
inc
ja
jne
mov
aam
pop
lret
into
shl
lock
sbb
sub
and
sub
jp
mov
cmp
adc
xchg
xchg
inc
add
loopne
cwtl
xchg
or
loopne
loop
pusha
repz
hlt
lds
jae
sub
push
jae
mov
sub
xor
pop
cmp
jo
mov
or
or
mov
ficoml
scas
out
xlat
std
or
sbb
push
cmc
mov
pop
je
mov
imul
testb
xlat
dec
sub
xor
out
xchg
mov
adc
mov
mov
mov
push
daa
adc
adcl
inc
pop
sbb
les
mov
pop
xor
xor
cmp
sbb
jg
adc
jecxz
pop
lds
insl
shlb
imul
stc
leave
xor
int
test
mov
shl
sbb
sub
jl
out
mov
xor
sahf
es
cltd
test
cmpsl
bts
js
cmp
and
cli
div
hlt
cmp
aaa
mov
push
mov
cmpsl
stc
fcom
lods
adc
arpl
push
cwtl
stos
mov
std
clc
bound
mov
mov
movsl
in
pusha
fsub
xchg
mov
and
xor
aam
cmp
aas
dec
shlb
icebp
xchg
push
dec
pusha
daa
loope
or
adc
imul
out
mov
hlt
pop
arpl
enter
mov
stos
sbb
shll
fisubrs
in
mov
out
in
pop
push
aam
and
lods
mov
jns
adc
jne
fnsave
and
lods
inc
aas
int
outsl
icebp
push
loopne
or
pop
inc
mov
pop
jno
dec
incb
mov
cmpsb
sbb
mov
ja
outsb
mov
dec
cmc
xor
push
cli
bsf
je
gs
sbb
fs
insl
mov
dec
shrl
xchg
repz
push
pushf
jnp
dec
mov
sub
push
pop
imul
stos
in
int3
jge
imul
push
sbb
inc
movsb
xchg
xlat
imulb
dec
sbb
xchg
ret
mull
cmp
mov
cli
mov
call
sti
lods
std
mov
sbb
sbb
mov
xchg
cmp
push
divl
jmp
sbb
mov
jns
xchg
insl
stc
adc
fwait
jns
fildl
xor
aas
lods
fs
mov
push
repnz
pushf
jge
fstpt
push
leave
cmp
jmp
jl
cwtl
mov
jb
xor
cmp
cs
or
or
pop
das
insl
in
or
cli
lock
in
cmc
pusha
pusha
icebp
jmp
dec
sbb
cmp
test
dec
idiv
sbb
mov
mov
xchg
stos
aam
std
add
sbbl
dec
subl
mov
sahf
inc
lea
sahf
xchg
ds
shll
push
push
scas
pop
loope
ror
lret
mov
sub
stc
add
mov
cmp
cli
enter
sar
cwtl
or
mov
andl
mov
and
add
lods
pop
adc
jnp
rcl
out
mov
mov
cmp
mov
sbb
fnstcw
sbb
and
mov
push
xchg
or
mov
pop
rol
pop
jge
mov
jmp
pop
mov
cmpsl
jnp
jp
aam
pop
shr
sub
or
dec
test
lahf
xchg
shrb
add
pop
in
lods
ret
jmp
mov
cmp
filds
pusha
pushf
cwtl
push
adcl
ss
ror
mov
out
sti
pop
or
bound
mov
adc
dec
stos
mov
jecxz
lds
orb
popf
mov
sbb
movsb
ficoml
mov
mov
cmp
lds
ss
call
lcall
incl
jnp
jne
stos
push
inc
mov
sub
inc
cmp
mov
sub
sbbl
data16
or
js
testl
enter
adc
dec
sbb
fstpt
inc
aas
inc
ss
mov
sub
jbe
jns
shrb
xor
mov
inc
inc
mov
mov
push
loop
popf
sub
pop
push
xchg
xor
push
add
icebp
out
cmp
sub
adc
cltd
mov
pop
in
or
sbb
push
xchg
or
lahf
fstl
push
idivb
sub
or
adc
lcall
dec
jp
jne
xor
roll
pop
pop
cmp
adc
arpl
mov
jp
out
test
push
lods
lods
cmc
enter
ljmp
push
inc
and
clc
rcr
mov
or
sbb
dec
out
fst
mov
orl
push
cld
pop
aaa
in
cmp
call
mov
mov
mov
add
in
xchg
jle
pushl
test
fcoms
pop
push
clc
sub
pop
mov
rclb
xchg
lret
icebp
cmp
jnp
mov
aam
add
pop
fbstp
inc
call
add
rcr
xlat
jle
pop
pop
jle
cltd
cmp
xchg
add
jae
nop
outsb
imul
and
mov
xor
les
daa
dec
fldcw
sub
jl
mov
outsl
adc
in
cmp
jb
repz
add
ret
or
cld
sahf
sarb
ja
lods
pop
xchg
push
xchg
mov
leave
dec
dec
mov
dec
dec
sbb
cmp
xchg
sub
adc
push
cmp
cmc
dec
gs
inc
sub
fnstsw
es
ret
or
fidivs
in
popf
push
or
sbb
or
mov
sub
aas
repz
and
push
pop
aaa
add
add
jne
pushf
dec
ret
test
pop
fsub
lods
sarb
xchg
loope
sahf
divb
in
push
les
push
pushf
cmp
clc
jecxz
pop
add
lea
imul
cmpl
idivl
dec
ds
test
xchg
mov
shlb
cltd
xchg
adc
mov
loop
push
mov
insb
inc
ret
push
lods
jp
rorb
popf
daa
sub
cmpsb
gs
cwtl
inc
or
xchg
repnz
or
and
int3
arpl
jae
push
cli
addr16
mov
push
pop
scas
jl
jmp
jns
or
lea
or
std
push
inc
adc
xchg
pop
sub
mov
test
orl
jbe
ljmp
cmp
int
insb
mov
cmpsb
and
mov
mov
sti
rolb
cs
cld
cmp
test
push
xor
inc
sub
enter
dec
push
out
ret
xor
and
xchg
xchg
mov
cmp
in
imul
mov
jp
or
xchg
in
push
jno
lock
loope
adc
in
xchg
xor
cs
lock
mov
js
jl
fisubl
pop
add
mov
adc
jnp
insl
mov
sti
push
mov
popf
call
cmp
mov
mov
push
int
mov
xchg
xor
enter
mov
jb
push
inc
mov
ljmp
fwait
lods
test
mov
into
fisttpll
sahf
mov
cwtl
push
inc
push
push
or
add
sub
or
sub
jmp
sarb
clc
lcall
pop
pop
test
push
lock
jno
sarl
push
test
xor
xchg
and
sub
repnz
add
lret
test
push
mov
and
mov
int3
xchg
lret
inc
sbb
sbb
push
mov
in
cmp
loop
vcmpss
jnp
shlb
cwtl
xchg
push
mov
aam
shrl
outsl
imul
pop
xchg
fwait
icebp
dec
popa
and
pushf
insb
ja
xor
popf
xor
mov
dec
fs
dec
insb
dec
std
cmp
push
fwait
mov
es
push
les
and
pop
ror
lcall
mov
push
bound
jg
test
das
xlat
or
xchg
xchg
dec
mov
les
mov
out
mov
ja
mov
scas
add
stc
jle
cmp
into
fcmove
add
adc
pop
popa
fwait
mov
mov
sub
aas
mov
inc
scas
xor
in
push
aaa
jge
lds
out
sub
cmp
leave
inc
and
add
outsb
ret
loope
pop
push
data16
pop
sarb
mov
mov
cmc
jmp
and
insb
loopne
push
out
outsl
or
fimuls
les
punpcklbw
sub
dec
and
push
stc
mov
clc
ret
icebp
jmp
push
mov
cwtl
and
nop
jg
push
push
mov
and
xchg
mov
inc
or
jmp
rolb
xlat
int3
jb
mov
rolb
mov
jmp
aas
xchg
in
fsubrl
fwait
aad
pop
les
mov
ret
mov
jb
outsb
movsb
mov
sbb
mov
incl
mov
push
cmp
cmp
pop
xor
inc
sbb
cwtl
jae
jo
and
fidivrs
data16
bound
push
pop
sahf
mov
inc
std
repz
jl
cli
jb
insl
js
and
push
lods
cmpsb
cld
and
mov
xchg
fldt
aad
sub
dec
jge
ja
pushf
shlb
or
cmpsl
adc
pushf
scas
mov
out
movb
and
mov
shll
icebp
cmpsl
jmp
mov
je
cmpsb
and
sahf
inc
test
loope
fs
jae
mov
es
mov
std
xchg
mov
ljmp
push
jp
jne
stos
mov
xchg
rcr
jae
int3
add
popa
dec
pop
and
lock
popf
addr16
fxch
sahf
fistl
xchg
imul
pusha
cmp
jae
ret
sbb
ljmp
xor
aas
lret
add
add
imul
cmp
in
xchg
jg
shlb
aas
leave
sub
hlt
fldl
inc
mov
in
jmp
jmp
aaa
xchg
push
sub
outsl
pop
dec
ret
xchg
add
inc
or
jbe
ljmp
cltd
cmp
mov
cltd
mov
int3
testl
sub
mov
sub
out
and
push
push
cmp
mov
pop
pushf
into
mov
mov
enterw
fs
mov
mov
and
adc
sarl
sub
shl
inc
xchg
addl
pop
mov
idivl
cmpb
popw
jb
dec
push
sbb
cmp
xchg
and
dec
add
lahf
dec
cltd
lods
xchg
icebp
fucompp
or
lds
in
data16
cmc
aaa
jle
repz
jl
int
fbld
inc
negl
sbb
mov
jno
xlat
sub
jecxz
nop
dec
ss
fwait
out
add
cmp
push
in
mov
jno
and
mov
push
pop
not
xlat
and
push
jg
mov
mov
mov
inc
insl
push
push
mov
outsb
sbb
sbb
dec
fwait
cmp
outsb
push
pushl
cltd
xchg
sub
push
adc
je
pop
enter
xor
pop
sub
cmp
out
cs
lret
mov
pop
mov
popa
outsl
and
dec
into
int3
mov
pop
popa
cs
mov
inc
or
lods
rorb
nop
xchg
inc
jns
ja
or
add
outsl
pop
popa
dec
inc
or
sbb
shll
adc
and
mov
and
out
push
push
in
bound
cwtl
mov
push
repz
mov
push
cmp
add
std
cmp
pop
popf
fildll
pop
xchg
pop
inc
mov
jg
sub
xor
ja
enter
subl
sub
fisttpll
mov
roll
mov
mov
aad
test
and
mov
call
lods
insl
ja
adc
stos
or
sar
movl
and
loope
add
push
movsb
jmp
pop
cmp
lods
jo
lods
or
fcomps
xchg
out
fcoms
sub
push
dec
test
adc
fsubrl
stc
sbb
or
fisttpll
add
out
mov
mov
mov
sahf
xor
clc
and
mov
inc
fiadds
sbb
iret
mov
imul
adc
xorb
int
aad
xchg
pop
iret
cltd
int3
fs
xchg
sbb
xchg
loop
aas
cmpsl
or
jle
mov
jmp
data16
lcall
sub
jge
js
pop
stos
fs
lods
cwtl
adc
test
lahf
ret
int3
icebp
test
jmp
dec
or
dec
shll
fnstsw
lahf
ret
push
mov
jl
in
or
cmp
pop
loopne
cmp
jecxz
cmp
dec
inc
imul
nop
cwtl
dec
add
mov
and
mov
lcall
std
inc
add
jp
or
push
or
lock
mov
fistpll
inc
push
jns
inc
jo
adc
xlat
xchg
pop
flds
out
ret
cld
push
add
pop
dec
jbe
inc
scas
das
imul
push
mov
cmpsb
jae
xchg
mov
cltd
pushf
push
test
fsubrp
mov
xor
out
push
xchg
xor
or
orl
cmp
bound
das
jne
dec
sti
push
test
or
dec
fistpll
or
ret
aas
adc
push
movsb
fs
pslld
mov
mov
fmul
mov
cmpsl
add
cltd
and
notb
pop
scas
xchg
jl
retw
rcrl
fwait
xchg
test
in
sbb
mov
ret
xorl
xchg
inc
sbb
popf
sahf
push
in
xor
dec
repz
sub
pop
pushf
jbe
sbb
popa
add
test
push
lods
mov
cltd
mov
sbb
adcb
and
inc
push
add
cmp
dec
mov
outsb
mov
repz
mov
xor
ss
push
cmp
xchg
dec
jp
jecxz
mov
mov
call
data16
cmpsb
or
test
xor
cmpb
adc
test
int
jnp
scas
sarb
mov
mov
xor
sbb
lret
mov
vmread
mov
call
xor
stc
sbb
push
xchg
lock
cs
mov
punpckhwd
in
ss
jae
push
in
out
sub
cmp
mov
pusha
xor
pop
ljmp
int3
movsb
js
in
dec
adc
xchg
stc
and
test
iret
push
mov
ljmp
int3
or
add
movsb
aam
sub
lcall
fsubrp
cli
xor
loop
sbb
mov
ljmp
lret
xlat
aam
imul
mov
mov
sub
cmp
mov
mov
fmulp
push
aad
fisttpl
push
gs
fwait
inc
jmp
xchg
mov
fcomps
cmpsb
jecxz
imul
out
push
push
cld
outsl
sub
mov
int3
rcr
out
pop
mov
cmp
out
and
xor
lods
loopne
shr
sub
ds
idiv
dec
idivl
mov
aaa
adc
mov
cmp
lret
and
jp
mov
lock
dec
pop
xchg
popw
mov
mov
mov
cmp
orb
xchg
cmp
xlat
jo
mov
filds
adc
jns
inc
imul
jb
jb
sub
add
iret
scas
dec
cmp
mov
inc
or
mov
fst
xchg
lret
dec
add
jb
insl
into
push
outsb
sub
in
or
call
add
std
pop
mov
rcl
out
push
xor
push
dec
in
mov
xchg
imul
sub
jl
xchg
fcoms
cmpsl
push
popa
and
mov
stos
xor
adc
lret
out
out
test
mov
iret
inc
cltd
hlt
int
cmpl
cmpsl
xchg
jns
lods
add
cmpsb
xchg
test
sub
dec
and
lock
popa
idivl
adc
xchg
dec
sbb
push
fadd
cmpsl
enter
cmpsl
pop
adc
sub
into
and
js
mov
cmp
xchg
lcall
push
or
pop
xor
mov
mov
hlt
mov
sbb
pop
ss
xor
jmp
jb
push
pop
out
dec
sub
vpmacssdqh
jmp
les
js
pop
jle
mov
sbb
xchg
add
adcb
and
mov
lret
or
push
xchg
push
test
jecxz
jne
stc
mov
cmp
sbb
jae
aam
pop
std
push
call
jb
fimuls
sub
or
aam
imul
or
lcall
add
push
and
sub
pop
and
mov
insb
xchg
icebp
fistps
jp
int
lahf
ss
xchg
push
int
mov
fsts
mov
and
imul
or
pushf
mov
inc
movsb
pop
pop
xor
adc
or
push
mov
fldt
ss
xchg
imul
jo
dec
stos
sbb
or
push
cmp
inc
push
loopne
pop
jns
adc
and
jae
ret
inc
js
xlat
mov
test
dec
cmp
sub
jp
int3
gs
or
test
out
inc
cmc
sub
mov
mov
sub
rcrb
push
add
into
and
aas
pop
dec
fidivl
neg
js
lods
clc
cmp
cmpsb
mov
jns
add
jecxz
nop
dec
adc
push
inc
inc
andl
push
stos
out
ja
shll
addr16
inc
rcrl
stos
pop
add
or
mov
cmpsb
xchg
pop
sub
pop
add
push
ret
daa
mov
das
rorl
or
jbe
ja
and
in
adc
mov
orl
daa
xchg
mov
and
stos
out
mov
cmpb
add
pushf
adc
mov
imul
push
or
xlat
das
je
je
mov
xor
daa
scas
pop
test
or
push
mov
xor
cmp
lea
jae
push
imulb
test
pop
enter
dec
adc
push
iret
lcall
mov
std
aaa
gs
adc
popa
jae
ss
data16
mov
scas
push
adc
and
mov
fwait
je
mov
orl
mov
xor
push
enter
jecxz
std
pop
inc
mov
xor
testl
mov
nop
sbbb
scas
iret
mov
test
mov
inc
pop
cmp
fstpl
adc
and
movsl
xor
push
mov
mov
and
arpl
push
daa
dec
dec
mov
je
xchg
shrb
popa
sub
pop
aad
mov
push
out
fisubrl
sahf
and
rcll
push
lret
pop
in
sub
aam
adc
ret
sbb
mov
mov
push
je
xchg
sub
rcrb
dec
lods
and
test
aad
ret
insl
test
test
sbb
enter
inc
addl
mov
cmp
roll
fxam
in
pop
das
add
mov
jmp
xchg
push
nop
sub
arpl
xor
test
sbb
mov
sbb
mov
orl
pop
in
adcl
push
inc
adc
xchg
negl
fdivr
cmp
out
aaa
cmpl
icebp
or
nop
lea
dec
adcl
add
sahf
jno
mov
xor
xchg
or
jecxz
push
hlt
popf
mov
xlat
jg
outsl
push
out
mov
pop
dec
dec
push
mov
adc
jns
outsl
sar
sbbb
fldcw
pop
lods
xor
mov
sbb
jo
lcall
push
jo
ret
jne
jg
insl
es
cwtl
lahf
add
or
mov
push
in
adc
stc
lret
insb
cmp
decl
inc
jns
sub
push
sti
lds
lds
xor
inc
js
hlt
sbb
imul
repnz
cmpsl
loopne
je
pusha
xor
les
sbb
cmp
adc
push
dec
aaa
cmp
jo
mov
jp
rcll
test
test
mov
inc
add
mov
mov
inc
fxam
jg
jbe
loop
ljmp
lahf
xchg
imul
nop
cmpsb
pop
lods
mov
out
xor
movsl
cmpsb
dec
and
cli
leave
in
mov
js
in
push
cmp
mov
mov
xor
hlt
mov
jno
add
movhps
sub
test
ss
or
mov
jno
mov
fwait
cltd
idiv
cmpsl
jno
cmpb
pop
setae
adc
mov
scas
lds
addl
lods
sbb
in
rcll
lret
ljmp
cmp
in
adc
dec
rcll
pusha
je
outsb
subb
sub
ret
inc
gs
add
sub
roll
dec
les
dec
jnp
stos
in
ja
xchg
les
xchg
pop
insb
dec
sahf
or
ret
lods
xlat
rcl
in
mov
lea
nop
adc
inc
jno
sbb
or
jg
jns
cmp
mov
testb
lods
adc
mov
xor
stc
movsl
idivb
mov
sub
imul
pop
push
ret
cmp
aas
shlb
aam
in
inc
subl
mov
leave
sub
xor
shlb
clc
fimull
out
mov
in
add
cmp
sbb
xor
es
mov
pop
test
mov
cmc
lcall
lret
jmp
data16
push
test
and
and
and
out
movlps
test
sbbb
and
cmp
cs
and
add
or
and
jae
subb
push
sub
in
ja
add
cmpsl
jg
dec
stc
into
mov
adc
mov
xchg
jbe
ss
repz
lds
jp
mov
pop
lcall
add
xchg
jecxz
cwtl
pop
fwait
cmp
lret
push
pop
lret
int3
mov
push
sub
fcompl
scas
fadd
mov
dec
sbb
mov
cmp
cmpsl
sbb
je
sub
loop
fisttpll
lcall
dec
loope
andb
sti
test
out
mov
les
pop
test
stos
pop
int
adc
lods
in
dec
lods
or
out
sub
test
and
clc
ret
sub
sti
orb
jle
ljmp
repz
call
jmp
ljmp
or
and
inc
out
out
ret
fwait
fs
inc
cs
lea
stc
mov
mov
add
inc
scas
mov
icebp
xor
in
imul
sub
xchg
lock
and
push
dec
adc
in
int
int3
push
or
pop
aaa
ds
ret
sbbl
adc
aas
push
mov
aam
cmp
rep
inc
adc
adc
xchg
xor
jnp
jle
es
mov
imul
mov
sbb
mov
mov
adc
clc
mov
adc
mov
ljmp
fdivr
test
inc
adc
les
jle
mov
add
mov
push
lods
jns
jae
aad
in
mov
es
int
in
xor
and
mov
jmp
adc
ljmp
xchg
sbb
adcl
subl
pop
lret
xchg
jmp
fld
lret
stos
iret
cmp
and
mov
jbe
mov
and
inc
or
pop
int3
push
je
shr
push
or
jg
loop
dec
out
sbb
data16
cli
dec
dec
push
xchg
fbstp
mov
loop
fwait
jp
mov
call
aad
inc
push
shr
popa
jle
mov
aam
xchg
mov
mov
lods
mov
mov
mov
add
jo
xchg
pop
int
jne
sahf
scas
ret
jno
iret
pop
scas
mov
dec
outsb
inc
pushf
ljmp
cli
mov
inc
pop
test
mov
mov
into
cmpsb
aad
mov
inc
fwait
cmp
in
sbb
jmp
mov
inc
mov
sub
pushf
jle,pt
loopne
std
dec
dec
add
addr16
lods
or
dec
in
or
loope
xchg
inc
lcall
lods
insb
inc
dec
mov
popa
mov
fldl
pusha
jp
divb
out
add
cltd
arpl
cltd
fidivs
and
inc
mov
jmp
mov
je
push
push
mov
inc
nop
xchg
mov
ss
das
adc
xor
cmp
or
or
mov
imul
bound
nop
mov
pop
mov
push
jno
push
xchg
or
inc
jnp
imul
pop
arpl
sti
lods
inc
dec
mov
and
xor
ljmp
pop
pop
lock
scas
data16
mov
mov
sarb
into
iret
dec
mov
xor
sub
and
add
fmuls
xor
sub
addb
xchg
hlt
sub
add
add
mov
addr16
xchg
sub
hlt
push
jge,pt
out
add
in
sub
or
std
cwtl
in
sarb
sub
insb
repnz
movsl
mov
jge
and
into
in
in
pop
test
ja
dec
adc
adc
inc
sahf
jnp
repnz
ljmp
or
in
xchg
mov
fldt
mov
sbb
insl
out
loopne
and
outsb
imul
mov
pop
and
xor
and
popf
lcall
test
push
ds
fistl
mov
hlt
mov
mov
jo
pop
push
add
push
das
jnp
bound
aas
sub
bound
aas
outsb
xlat
xor
xlat
test
jp
aad
or
push
fucomip
movsb
leave
mov
ss
pushf
std
push
sub
loope
mov
mov
hlt
push
roll
add
pop
bsf
push
jmp
stc
xor
jmp
ja
mov
pop
popf
inc
sub
dec
push
test
pop
push
fsubl
movsl
dec
mov
xor
push
clc
xchg
sub
pop
or
sbb
xor
cli
push
rolb
sub
mov
inc
das
std
in
push
aad
inc
dec
xchg
push
mov
mov
js
xchg
nop
addr16
pop
mov
mov
push
mov
mov
imul
xchg
je
dec
in
nop
cmp
mov
pop
xor
loop
pop
jp
xchg
out
inc
mov
push
icebp
jb
lret
insl
iret
hlt
fxam
mov
lds
es
sbb
add
in
jns
sub
scas
mov
jo
adcl
mov
daa
inc
push
mov
and
dec
popf
add
jno
push
jl
cs
ss
test
xor
fsubrl
push
fwait
cmpsl
loop
mov
sub
mov
out
jmp
push
mov
jmp
lahf
mov
mov
sub
push
dec
insl
stc
je
xor
sbb
cmp
mov
or
sahf
push
enter
lret
leave
and
xchg
popf
insb
cmp
mov
fwait
or
xchg
push
fistpll
xchg
xchg
nop
data16
mov
pop
mov
xchg
xchg
call
into
sbbb
lahf
cmp
push
add
sub
mov
aam
adc
mov
mov
push
call
cmpsl
mov
jnp
leave
in
mov
out
cli
fs
xor
lods
add
lret
loope
enter
xor
ljmp
pusha
and
add
dec
or
mov
sub
and
clc
test
aaa
mov
idivb
pop
fbstp
sarl
sbb
jmp
dec
mov
jno
arpl
inc
jle
add
dec
push
mov
pop
icebp
push
lods
inc
sub
data16
lds
and
jl
mov
lcall
sub
lcall
in
add
pop
push
ljmp
or
pop
outsb
jb
cmpsb
mulb
mov
out
push
xchg
add
outsl
scas
pop
dec
out
jle
dec
loope
inc
inc
adc
jb
xchg
enter
mov
dec
aaa
js
sbb
repz
mov
hlt
fcmovnb
or
xchg
shlb
lods
fidivl
aad
pop
into
stc
dec
inc
fimuls
andl
orl
mov
popa
and
in
std
cwtl
push
pop
cltd
daa
jbe
dec
mov
xor
mov
xchg
xchg
or
xor
adc
cli
inc
inc
stc
adc
push
int3
push
pop
cmp
cmp
mov
xlat
inc
push
mull
stos
test
cmpb
mov
cmc
mov
pop
call
push
int
rorl
sub
outsl
in
stc
dec
inc
jb
lret
pop
in
das
lods
data16
pop
mov
cwtl
pop
cltd
push
sbb
dec
lods
mov
call
dec
push
pusha
xchg
shl
es
cmp
inc
cmp
cmpsb
shl
nop
xor
xlat
es
sti
insl
in
aaa
das
stos
sbb
jb
aad
insl
fst
cwtl
pushf
cwtl
enter
xor
jno
xchg
call
sub
movsl
dec
cmp
stos
adc
call
mov
arpl
mov
or
push
xchg
cwtl
insb
inc
jp
xor
icebp
mov
mov
and
fsubrs
sbb
daa
xchg
ss
adc
push
sub
xchg
lods
movsb
mov
fsubrp
stos
or
faddl
dec
stos
sub
mov
test
pop
mov
push
jp
call
mov
clc
push
call
jmp
call
test
lods
lds
stc
int3
adc
mov
idivl
inc
jnp
push
addr16
xchg
loope
adc
andl
adc
jno
jle
mov
mov
outsb
aas
sbb
in
pop
jge
and
adc
sbb
clc
cli
mov
dec
sub
jb
pusha
xchg
imul
aas
dec
aas
test
sub
sbb
nop
fs
mov
ja
push
mov
mov
mov
sbb
pop
mov
or
cmp
movsb
adc
mov
and
cmp
jns
stos
test
rolb
adc
das
xor
or
mov
fldenv
fcomp
repz
in
cmpsl
enter
ss
or
sub
movsl
pop
mov
jo
dec
mov
push
arpl
jp
scas
addb
inc
arpl
inc
mov
sub
in
mov
mov
push
jl
into
xchg
mov
adc
test
rorl
lock
sbb
fnstsw
and
mov
push
jmp
add
dec
pop
mov
movb
fwait
pop
sub
loope
adc
pop
fcoml
scas
cltd
dec
jae
mov
jp
mov
inc
addb
push
cmc
ljmp
sbb
enter
push
fnstenv
insl
enter
subl
pop
mov
xor
jne
mov
sbb
jne
push
testl
popa
ret
repnz
std
push
pop
or
std
pop
scas
cmpsb
call
mov
test
or
inc
sub
les
pop
jecxz
arpl
arpl
ss
fs
adc
jo,pt
mov
dec
stos
mov
adc
jb
repz
xor
jne
bound
rcll
jns
leave
sbb
and
popa
jbe
mov
mov
push
dec
push
sub
insb
stos
mov
dec
add
mov
shll
and
dec
xor
sub
push
clc
fnstcw
inc
pop
dec
loopne
cwtl
mov
xchg
pop
repz
inc
jne
mov
jae
cs
xor
push
sub
mov
cmp
add
xchg
test
sbb
sahf
jmp
aas
pop
lahf
and
pop
jbe
add
sbb
aad
fldcw
jbe
out
mov
adc
sbb
xchg
test
jbe
loope
and
jge
jae
lock
and
sti
jb
hlt
mov
jmp
dec
pop
mov
and
fwait
mov
stos
loop
mov
and
xlat
push
test
xor
sbb
pop
sbb
lret
jbe
rolb
scas
ficompl
mov
mov
les
or
pop
cmp
aam
movsl
dec
and
ret
adc
push
sbb
fnstcw
out
aam
idiv
scas
pop
lcall
insl
xchg
mov
cmpsl
jo
jmp
insb
push
push
or
sbb
mov
cmp
jae
fmuls
and
mov
into
loop
movsb
xchg
int
jo
js
repz
jge
leave
or
jmp
xlat
push
jge
pop
mov
js
pop
lea
jns
inc
es
sub
idivb
lahf
adc
testb
sub
or
ja
fsubr
stos
xlat
sub
jge
xor
fldt
pusha
insl
sub
sub
sub
mov
dec
icebp
insb
xor
rep
pop
test
adc
ret
sti
add
mov
ss
or
push
fcoml
mov
shll
pop
in
mov
and
jl
jne
bound
fsts
inc
aas
push
cmp
repz
filds
and
iret
push
mov
cwtl
imul
out
push
popf
dec
mov
lock
lds
inc
xor
pop
xchg
and
mov
call
jmp
or
test
push
inc
enter
mov
leave
mov
lahf
lock
jb
mov
pop
inc
je
cmp
mov
xchg
in
inc
leave
mov
ret
jle
leave
leave
add
aas
std
and
pop
push
ret
fisttpl
out
adcb
lret
adc
push
loop
jle
pop
push
loope
js
jl
push
in
mov
das
mov
ljmp
aad
jg
mov
and
xchg
mov
aaa
mov
adc
sbb
aas
pop
sbb
arpl
rclb
mov
popa
jo
or
lods
or
test
mov
ret
shl
mov
arpl
push
and
adc
stos
mov
pop
xlat
inc
orb
cwtl
sub
pop
jnp
sbb
jmp
jge
add
push
mov
out
mov
dec
push
std
outsl
sarb
and
sub
pop
in
sub
stos
addr16
push
adc
push
and
xor
dec
mov
xchg
mov
sub
das
mov
sbb
sbb
clc
fcomps
jb
jbe
cmp
cmp
scas
dec
adc
xchg
adc
in
mov
jge
fsubrp
and
into
fwait
add
inc
lret
mov
daa
mov
pushf
lds
jp
and
jl
js
ljmp
mov
sub
push
imul
sbb
push
mov
xor
popa
xor
lds
arpl
push
xor
shr
arpl
push
cmpsl
or
out
push
gs
or
rclb
add
stos
pop
mov
bound
in
xchg
shl
cmpsl
fidivrs
es
std
mov
mov
loop
jle
adc
bound
pop
enter
adc
lock
push
bound
lcall
leave
jg
fs
stc
fwait
jg
or
in
jg
pop
mov
jp
push
cmc
mov
test
xchg
stc
popa
iret
xor
cmove
cmc
add
xorb
in
sbb
movsl
ret
cmpsb
inc
mov
xchg
pop
mov
adc
xor
cmp
inc
loop
or
push
popf
push
push
adc
fistpl
popl
mov
je
xor
or
mov
dec
ror
xor
into
mov
dec
iret
xchg
fadds
daa
jbe
pop
aas
mov
shll
roll
test
adcl
xor
and
lahf
fsts
cld
aad
dec
dec
shll
push
int
fldcw
push
or
push
pop
gs
fmull
imul
mov
aaa
std
jne
xchg
push
cmpsb
sub
sbb
rorl
pop
xor
mov
fwait
push
jne
push
sub
nop
loopne
add
cmp
fisttps
icebp
out
jge
push
mov
or
shrb
cmp
sti
imul
test
sbb
in
add
stos
cmpl
jge
add
pop
adc
in
sub
adc
lret
xchg
jb
lea
push
inc
sti
mov
mov
loop
push
cs
sub
lcall
push
add
add
fldenv
xchg
mov
gs
iret
cld
das
int3
cs
aaa
aas
std
lret
pop
xchg
xor
jnp
dec
push
sub
and
cmp
ret
cmp
aam
mov
aam
inc
loope
pushf
leave
inc
lock
sti
pop
jno
cs
inc
jne
js
lret
adc
dec
jno
push
std
add
push
mov
sbb
or
jno
pop
nop
sub
pop
fmuls
jae
xor
inc
mov
ds
jnp
imul
pop
bound
pop
mov
test
push
xchg
lret
popf
pop
mov
mov
icebp
mov
jns
mov
jbe
xor
push
push
push
loopne
mov
xlat
stos
jne
lea
mov
es
cmp
dec
pop
inc
in
mov
adc
shlb
scas
jne
out
loop
inc
or
xchg
stos
imul
xorb
std
sbb
popa
mov
in
jae
in
mov
add
push
add
xor
push
arpl
push
in
push
add
mov
imul
scas
test
pop
xor
outsl
dec
jg
clc
xchg
loope
je
es
dec
xchg
aas
stos
ficomps
daa
insl
add
cmpsl
push
ror
mov
mov
fwait
sbb
pusha
lahf
cmp
push
pop
push
inc
sub
push
sbb
scas
sti
jae
and
pusha
xchg
sbb
arpl
imul
jne
mov
orb
test
dec
or
sub
adc
push
inc
icebp
popf
push
mov
jl
or
mov
outsl
jecxz
daa
and
pusha
popl
or
sbb
adc
sti
mov
sub
call
lret
pop
icebp
pop
sbb
lock
int3
pop
jns
xchg
ret
adc
xchg
jge
cs
fs
add
push
cmp
or
lahf
xorb
fisttpl
repz
rcrb
mov
adc
mov
mov
jp
mov
nop
jbe
push
fwait
cmp
ret
mov
dec
add
sub
repz
xchg
push
sarb
or
pop
notl
imul
loope
daa
or
mov
stos
shrl
adc
std
xchg
sub
loopne
mov
push
in
std
sbb
out
and
fiadds
jae
and
add
add
inc
xchg
mov
nop
dec
ja
das
dec
add
pop
mov
cmp
js
icebp
sbb
fdivrl
test
divl
and
and
into
or
or
cmp
fcmove
sub
mov
fcomps
icebp
ret
sbb
fisubrs
outsb
out
pop
clc
sub
scas
cmp
decl
lods
popa
and
jnp
dec
jecxz
xchg
cmc
decb
push
dec
inc
sub
mov
shlb
cltd
xor
add
aad
add
ret
in
jo
pop
xchg
inc
xchg
add
mov
sub
mov
jae
jb
jmp
cmp
inc
pop
mov
stos
incl
xchg
cmc
push
cmc
pop
and
les
mov
aam
or
jle
std
into
sbb
lahf
int3
jge
std
xchg
mov
sub
mov
xor
push
pop
repnz
jmp
loopne
test
mov
jne
jb
push
xor
jle
mov
push
jb
cmp
cmp
push
dec
push
testl
in
and
pop
cli
shll
rcrl
stc
mov
sbb
stos
xchg
out
nop
ret
and
and
fisttpll
outsb
arpl
add
mov
push
fs
mov
mov
mov
cmp
pusha
mov
sbb
popa
cmp
in
popa
cld
xor
repz
outsb
mov
das
mov
push
cmp
jle
or
mov
test
mov
hlt
cmp
pop
fildll
or
mov
lods
add
inc
xlat
sub
sbb
jmp
js
sub
popa
in
sub
ret
xchg
dec
pop
add
and
sahf
mov
addr16
out
aam
push
stos
dec
pop
mov
or
ret
jo
cmp
fildll
push
jmp
bound
leave
daa
and
or
dec
pop
outsb
imul
sbb
ror
test
or
push
out
scas
popf
cs
adc
mov
cmp
pop
add
sub
aam
push
stos
sub
inc
lea
xchg
jne
fistl
ret
fsubrl
dec
es
or
and
push
or
aaa
pusha
and
sub
sub
xchg
jle
fwait
jb
xchg
pop
sub
lcall
add
mov
neg
ja
js
cli
cmc
je
icebp
mov
das
inc
in
mov
stos
mov
mov
imul
mov
xchg
in
cmp
rorb
ss
rorl
fnstenv
xchg
cmp
cwtl
jle
push
aas
mov
cmpsb
pop
fs
xchg
mov
xor
lahf
mov
in
aad
pop
movsl
cltd
std
into
je
fisubrs
cmp
push
inc
pop
cmp
shlb
inc
repnz
mov
mov
adc
das
fsubrl
xor
ja
inc
js
jge
and
lret
adc
cmp
ss
xchg
repnz
adc
adc
gs
xchg
ds
fwait
std
into
and
mov
js
jp
pop
loopne
add
sub
out
fbstp
mov
fs
mov
xchg
xor
ds
cmpsb
loope
mov
adc
mov
mov
add
ja
push
pop
sbb
adc
popa
je
inc
mov
bound
push
inc
xchg
jb
fcmove
and
mov
jge
and
fcompl
mov
push
jg
fndisi(8087
mov
shr
xlat
add
fmulp
insb
cltd
data16
sti
call
fnsave
pop
or
add
sbb
es
xchg
lret
sbb
pushf
ds
sbbb
and
mov
sti
fwait
divl
ret
imul
popf
and
mov
dec
or
arpl
std
xor
sub
test
lahf
bound
and
enter
jo
add
mov
xor
sbb
lahf
xchg
push
xor
xchg
xorb
ret
pop
push
adc
mov
add
inc
repz
add
sahf
inc
push
stos
sbb
lret
jne
mov
xor
ret
imul
mov
inc
fsts
rolb
mov
xchg
loope
pop
pop
dec
pop
pop
sub
paddusb
jbe
sbb
bound
push
bswap
push
ret
jbe
pop
xor
xlat
and
push
cs
in
mov
pop
sbb
aad
add
xlat
out
loop
sbb
xchg
in
lretw
out
or
xchg
into
in
stos
icebp
in
icebp
push
fwait
jecxz
std
push
imul
push
xor
lods
add
pop
loopne
inc
push
aad
add
iret
jbe
inc
pop
int3
fldcw
add
lods
xchg
stc
gs
pop
popf
imul
fimuls
inc
jmp
imul
pop
loopne
cltd
cmp
rcrl
psraw
imul
stos
test
adc
xchg
ficomps
stc
adc
sbb
std
inc
stos
ret
in
inc
mov
idiv
push
xchg
push
pop
clc
in
popf
ds
sarl
inc
xchg
xchg
jmp
fdivrl
mov
addr16
mov
mov
stos
cmp
out
cmp
dec
xchg
movsl
mov
adc
mov
push
repz
decl
dec
cltd
pop
dec
inc
jne
fwait
mov
mov
loope
shlb
sbb
pop
and
xchg
add
aad
xor
xchg
repz
sub
out
lcall
mov
pop
xor
cmp
push
lcall
or
sub
ja
jmp
pop
mov
leave
es
lock
xchg
shll
aaa
stos
shl
dec
fwait
std
jno
mov
jne
dec
into
popa
push
lret
push
ja
sub
in
loopne
hlt
dec
cmp
mov
xor
mov
xor
lret
inc
rclb
in
aad
ljmp
mov
sub
pop
std
in
jae
or
into
push
pushf
notl
cmp
jbe
fsts
cmp
cmp
or
jge
popf
aam
jecxz
add
xor
adc
push
inc
arpl
lea
daa
ror
cmpsl
and
sub
add
pop
lahf
push
pop
iret
or
or
push
std
adc
push
xchg
cmp
mov
outsl
push
push
lret
ud0
addr16
pusha
movsl
jb
pop
or
leave
cs
cld
test
push
setbe
mov
jle
and
test
jmp
ja
sbb
xchg
xchg
fcompl
aam
iret
cltd
jge
repz
pop
insb
enter
mov
dec
jecxz
cmpsb
shl
inc
add
xor
cmp
xchg
or
das
sub
and
add
or
in
in
loope
inc
dec
pop
cmp
mov
or
xchg
push
test
out
cli
bound
out
sub
xchg
or
mov
repz
lret
call
jle
outsl
mov
push
pop
sub
and
mov
popf
aam
loopne
sysret
jecxz
rcrl
dec
push
lods
scas
mov
pop
ljmp
pop
in
js
idiv
int
pop
sahf
dec
mov
test
xchg
mov
arpl
idiv
inc
aaa
mov
jne
sub
jmp
adc
and
ds
das
sahf
loope
mov
xor
mov
add
mov
es
in
jecxz
mov
jbe
mov
push
lcall
fiadds
lea
sbb
mov
cmp
jmp
push
insl
loopne
sbb
cwtl
push
jle
xchg
push
test
sbb
push
lret
ja
sub
aas
pop
rolb
inc
into
gs
mov
repnz
push
and
jo
xchg
sbb
mov
sbb
or
jge
divb
lret
test
mov
adc
push
fnstenv
add
mov
push
adc
pop
sbb
jns
add
pop
loop
add
jnp
loopne
ss
aad
xchg
mov
insl
mov
bound
xor
sub
mov
shll
subb
adcl
mov
push
lcall
xchg
pop
or
push
sbb
add
add
xchg
leave
and
add
and
arpl
pop
cbtw
decb
pop
repnz
idivb
clc
out
push
push
mov
or
xor
jge
push
pop
int
sahf
pop
out
xchg
xor
std
ja
mov
nop
mov
dec
xchg
gs
xchg
lret
cmpb
mov
mov
cmp
mov
xor
mov
jmp
ljmp
fldenv
scas
and
mov
lods
add
or
and
push
inc
in
or
push
jecxz
gs
push
xor
popf
mov
mov
subl
mov
push
arpl
lret
pop
xor
sub
enter
scas
loop
pop
mov
inc
jo
shrl
je
mov
cmp
outsb
test
out
sbbb
cmc
dec
jl
lahf
loope
push
jle
int
ja
out
jmp
int3
xchg
std
adc
add
dec
imul
lahf
sub
mov
scas
cld
or
imul
mov
inc
or
cwtl
out
out
jle
add
sub
push
dec
clc
outsb
flds
push
ret
lret
pop
test
fldl
adc
mov
adc
shlb
cmp
std
cmpsb
dec
push
inc
les
jl
nop
and
out
push
cs
mov
mov
fnstcw
stos
out
ljmp
scas
xchg
dec
adc
hlt
jl
leave
jb
jmp
sbb
out
mov
xor
adc
mov
aas
sahf
mov
xor
push
or
nop
fcmovb
mov
fwait
adc
and
jnp
adc
or
aaa
add
push
fadds
pop
jae
xchg
and
lds
lds
mov
dec
and
into
inc
and
cmp
shl
cmpsb
sub
dec
xor
jg
push
inc
jp
mov
sti
xor
addr16
xor
nop
cwtl
add
lcall
push
test
orl
repnz
xor
out
push
inc
add
sbb
loopne
mov
jnp
adc
xor
in
aaa
mov
push
rolb
lods
pop
int3
fidivl
sbb
mov
mov
jg
nop
cmpsl
sbb
test
jl
sbb
mov
fwait
push
out
push
push
inc
mov
sbb
inc
dec
push
inc
repz
cmp
sbb
pop
pop
xchg
enter
addr16
cmpsb
aaa
push
sub
lods
push
out
loopne
gs
push
push
int
mov
call
dec
into
inc
jmp
adc
js
sbb
jae
xor
mov
test
mov
push
call
or
mov
xor
jle
icebp
ret
mov
mov
cs
call
nop
mov
pusha
add
adc
repnz
outsl
in
in
pop
dec
cmc
jb
mov
lcall
shll
cmp
and
mov
pop
xlat
cli
test
cmp
out
fmull
push
mov
mov
sahf
repnz
stc
lock
inc
xorb
lock
dec
mov
scas
fsubr
mov
push
mov
adc
push
aaa
mov
and
push
inc
cmp
std
xchg
inc
out
subl
cmp
adc
and
xlat
stos
lret
jo
fsubrl
mov
inc
fistpll
pop
lret
mov
and
xor
sub
push
cmp
loop
int3
inc
dec
cmp
jmp
push
or
hlt
ret
mov
push
outsb
xchg
push
cmpsb
icebp
add
inc
mov
cmpl
pop
xchg
insl
sbb
mov
sbb
sub
sbb
ja
mov
dec
xchg
sub
cmp
jnp
insl
jmp
jae
jp
cmp
arpl
ljmp
iret
cwtl
push
add
imul
dec
xchg
adc
ljmp
inc
in
jns
push
dec
dec
into
push
sbb
pop
push
out
mov
mov
ljmp
test
lea
in
lret
dec
fs
in
cmc
cmp
ds
popl
inc
cmp
inc
jns
das
dec
adcb
cmp
shlb
out
jns
out
lods
cmc
imul
cmp
xor
jo
push
sub
shr
shl
aas
repnz
xchg
adc
add
dec
lods
sub
test
aaa
mov
mov
daa
jnp,pn
mov
adc
mov
xor
out
mov
add
adc
lret
push
cld
jns
xchg
arpl
jecxz
sti
rol
and
test
pop
mov
les
mov
notl
insl
das
icebp
jmp
out
orl
sub
movsl
jb
mov
nop
into
jp
jns
jns
adc
cmpl
xor
aas
test
push
sub
dec
nop
mov
dec
adc
loop
mov
mov
cwtl
mov
movsb
mov
test
imul
pop
stos
lods
pop
mov
push
pusha
cltd
outsl
pop
push
addl
je
push
xchg
jmp
add
xor
mov
mov
out
pop
ss
adc
daa
push
dec
addl
or
mov
out
subb
fs
cs
pushl
push
sbb
mov
cs
imul
les
sub
mov
jno
inc
jb
orl
jbe
pop
or
faddl
les
imul
inc
rorb
movsb
or
ljmp
ss
punpckhbw
fcmovne
xlat
insb
sbb
mov
subb
or
ss
scas
pop
add
movsl
xchg
cmc
add
push
jg
inc
and
sub
add
adc
cmp
cmp
addr16
xor
ss
cmpsl
stos
pusha
js
xchg
hlt
jb
xor
stos
and
pop
fwait
ds
shll
adc
cwtl
jle
mov
mov
add
pop
inc
loopne
and
jecxz
or
xor
adc
lods
mov
fiadds
imul
or
ds
jns
mov
bound
aam
and
inc
mov
mov
out
aad
fmuls
push
cmp
or
cmp
cmp
xor
push
pusha
int
bound
mov
pop
out
jp
pushf
sar
xchg
mov
sub
dec
dec
cmp
mov
or
mov
iret
out
sub
sub
xchg
pop
xor
push
dec
or
lcall
or
es
xor
rclb
ja
scas
sub
pop
mov
insl
jae
mov
dec
cli
adc
dec
xor
push
xor
pop
and
add
dec
data16
sub
orb
xorb
ret
shlb
xor
mov
cmp
enter
sub
movsb
jl
hlt
mov
push
and
jo
mov
sbb
mov
adc
ror
out
push
jns
jg
aaa
pop
repnz
jns
cmpl
aas
or
ja
stos
or
in
and
repnz
xchg
lock
sbb
adc
xchg
fwait
scas
add
sub
movsb
lret
pop
jne
cli
ds
cmp
inc
scas
jmp
xchg
pop
sahf
cmp
inc
mov
aaa
js
das
nop
mov
incl
dec
repz
pop
sub
out
das
insl
add
bound
sti
sub
jne
jo
cwtl
les
pop
xor
jnp
and
testb
jge
xchg
out
dec
pusha
ja
shrl
mov
xor
cltd
shll
or
cmp
dec
imul
xchg
or
dec
mov
push
daa
js
jecxz
mov
and
in
mov
stos
jns
pop
xchg
mov
xchg
dec
ror
leave
sbb
sbb
push
xchg
bound
xchg
xchg
cmc
dec
add
add
ljmp
cmp
and
mov
sbb
and
popf
icebp
mov
aaa
cmp
mov
and
ds
mov
mov
and
or
insb
mov
sbb
fisttpl
ror
in
enter
sbb
mov
pop
xor
inc
jb
cmp
lahf
scas
aad
movsb
pop
jmp
sbb
out
mov
cmp
outsl
mov
stos
push
js
iret
push
xchg
xchg
mov
lahf
arpl
jno
inc
pop
and
xlat
inc
mov
push
or
xchg
ljmp
mov
insb
cmp
and
popa
dec
xor
and
cmp
fwait
mov
daa
mov
lods
mov
aas
push
pusha
jmp
pop
pop
je
jecxz
or
divl
clc
sbb
mov
scas
cmc
pop
push
adc
or
iret
int
out
lea
add
stos
push
mov
aad
test
outsb
cli
jb
out
pop
fsubs
test
rolb
nop
addb
xor
sbb
loope
push
add
ss
add
nop
outsl
mov
aaa
cmc
lock
add
xchg
or
out
xor
push
sbb
lds
adcl
js
fxch
cli
sahf
movsl
push
add
ret
out
xchg
cmp
arpl
mov
insb
cmp
mov
jecxz
inc
sub
mov
enter
out
mov
test
mov
xchg
repz
cwtl
pusha
sbb
sub
push
int
push
loope
jnp
sub
xchg
xor
dec
je
inc
pop
in
aaa
sub
jnp
aas
dec
sbb
dec
movsb
icebp
adc
xchg
dec
add
xor
test
mov
in
and
or
inc
sbb
and
nop
cmc
rol
lods
push
jnp
dec
jge
es
arpl
dec
int
jle
adc
aam
movsl
dec
cmp
lea
push
mov
pop
dec
cmp
add
mov
loope
dec
dec
jle
into
cmp
sub
adc
lret
ljmp
and
negb
shlb
pop
pushl
add
addr16
fimuls
daa
cmp
mov
iret
sub
mov
cmpsl
jbe
not
xchg
gs
mov
xchg
sub
xor
mov
push
iret
data16
popa
inc
scas
int3
fisubrl
cmp
test
sbb
mov
pop
ljmp
lea
fimuls
es
add
xchg
inc
in
and
or
sahf
mov
dec
das
jp
jg
xchg
cmp
xchg
das
pop
jl
mov
add
mov
fistpll
cmc
and
std
pop
aam
daa
mov
and
hlt
ja
xchg
sahf
jge
leave
push
lods
dec
shl
test
outsl
in
mov
xor
and
hlt
cmp
push
pusha
lcall
inc
leave
rclb
sarl
mov
aam
mov
dec
int
lock
std
push
in
mov
or
push
mov
hlt
mov
mov
bound
lcall
loop
test
pop
iret
aaa
and
mov
push
roll
int3
push
test
int
adc
fs
gs
push
dec
loopne
imul
out
gs
scas
andl
into
stos
ret
ret
xchg
es
or
xchg
add
pop
push
in
mov
push
xlat
adc
insl
jo
loopne
addr16
or
mov
pop
xchg
lret
mov
jae
or
push
insb
adc
mov
adc
test
insb
dec
pop
int
aam
sbb
xlat
push
xor
sbb
pop
dec
lret
pop
insb
int
cmc
std
pop
push
xor
scas
loop
push
ljmp
fwait
imul
or
and
jnp
leave
adc
test
pop
inc
ja
call
jae
push
in
ljmp
lcall
jo
and
in
fistps
out
or
mov
inc
mov
cld
lods
pop
add
jle
scas
sub
sbb
push
jge
int
adc
sbb
push
icebp
and
nop
mov
out
dec
dec
js
fcomps
and
mov
sub
rcrl
or
dec
cltd
clc
mov
lods
cmp
xor
pop
add
out
movsb
inc
ret
in
push
dec
negb
or
cmpsb
mov
push
pop
lods
std
pushf
mov
das
loop
in
movsl
loopne
sbb
mov
push
mov
cmc
jae
stc
mov
xchg
sub
xchg
out
push
cmp
and
gs
add
push
add
aas
loop
sub
dec
outsl
xor
pop
lahf
mov
pop
jl
inc
movsb
dec
stc
in
mov
fs
sbb
fs
push
push
call
inc
popf
decb
sahf
fisttps
test
push
lahf
push
mov
dec
push
mov
test
add
dec
cmc
loope
out
jo
icebp
cmp
jmp
inc
imul
repnz
add
pop
cmp
inc
outsl
or
test
in
in
xchg
cmc
cmp
mov
lcall
xchg
test
cmp
mov
outsl
leave
pop
stc
xchg
mov
jbe
lods
ds
jns
and
sbb
faddl
pop
mov
mov
clc
es
imul
sub
loope
jbe
fidivrs
shrb
jno
mov
adc
xchg
jle
test
adc
inc
les
xor
nop
call
std
push
ja
pop
xor
pop
lds
inc
pop
pop
xchg
insb
js
xor
pusha
bound
stos
out
mov
test
mov
in
lret
push
mov
daa
inc
cmc
pushl
cmp
lret
pop
pop
sar
pop
push
and
sti
dec
imul
test
psrad
std
jbe
cli
data16
push
cwtl
lcall
sub
and
and
pop
fisttps
inc
add
cmp
js
cmpsl
outsl
jnp
push
jne
cmp
inc
iret
pusha
cmp
cmp
xor
jo
dec
loope
in
cmp
js
push
mov
je
mov
xor
mov
addb
fldt
fs
or
sub
sti
jbe
pop
add
cmp
cs
inc
pop
inc
and
ja
es
pop
in
insl
mov
xchg
mov
sub
mov
dec
jl
jne
push
lret
mov
clc
repz
aam
add
inc
and
mov
addr16
add
sarb
xchg
jbe
push
loopne
or
add
dec
xor
test
aas
popf
popf
add
test
xchg
or
add
dec
or
mov
and
mov
cmp
xchg
mov
arpl
xchg
ja
push
xchg
mov
add
ja
nop
xor
dec
xor
jnp
dec
mov
outsb
sbb
mov
test
xchg
stos
mov
cmpl
xlat
dec
sub
fdivrl
loop
cmpsb
in
in
fldenv
sahf
and
xchg
add
scas
xchg
ds
dec
mov
sbb
cmp
je
mov
jl
imul
sbb
les
flds
inc
lods
sbb
pop
sbb
jl
add
xchg
stos
in
xorb
xlat
popf
out
gs
mov
cmp
adc
loopne
pop
pop
push
adc
sbb
sti
push
or
sub
lods
add
pop
push
push
jbe
mov
arpl
mov
sbb
daa
insl
adc
cmp
cmp
pop
adc
inc
pop
data16
push
mov
pop
push
pop
jbe
mov
cmovs
inc
outsl
stc
and
xchg
into
jmp
insl
jbe
addr16
lods
cld
pop
iret
cmp
sbb
inc
repz
cmp
out
out
ret
loopne
adc
test
in
lret
adc
sub
jg
out
mov
movsl
out
addr16
movsl
movsb
add
jae
insl
sub
mov
sbb
out
sbb
mov
and
fdivrs
adc
jmp
repz
fwait
cltd
xchg
pop
sahf
sbb
xchg
ret
cmp
xor
test
push
inc
addl
push
fs
xchg
rclb
pop
cmc
lret
sbb
and
mov
xchg
pop
cmp
adc
imul
mov
or
and
xchg
mov
outsl
movsl
sarl
jae
test
dec
or
outsb
in
or
imul
stc
hlt
aaa
push
mov
xchg
ret
hlt
mov
sub
jecxz
aaa
push
jne
mov
sub
idivl
daa
pop
jl
dec
mov
mov
dec
lret
sbbl
xchg
lock
pop
cmp
jecxz
inc
adc
bnd
inc
mov
into
xor
andl
mov
mov
lcall
inc
cmp
sbb
add
repz
aam
lret
mov
push
das
mov
outsl
ljmp
mov
adc
fldt
dec
mov
imul
iret
mov
sbb
push
repz
gs
lea
jno
sub
testl
sbb
lock
outsb
clc
push
shlb
and
test
iret
in
data16
mov
es
jno
fimull
dec
push
adc
std
dec
fldenv
addr16
fdivl
int
fiadds
movl
xchg
mull
sub
sub
push
inc
xor
pop
in
pop
mov
pop
cmpsl
ret
insb
and
jl
mov
mov
pop
in
xor
rolb
and
xchg
pop
xchg
jns
xor
setp
jno
or
stc
into
aad
repz
pop
jb
push
lea
xor
mov
adc
inc
pop
xchg
sub
mov
bound
push
push
push
push
pop
xchg
stos
setge
push
dec
out
mov
xchg
scas
add
ror
mov
ss
addl
add
mov
mov
scas
dec
loopw
dec
pop
sub
push
out
loop
sub
pop
std
stc
dec
xchg
inc
mov
dec
push
sub
imul
xor
shl
jp
cltd
testl
fsts
sbb
call
xor
push
inc
or
cmpsb
dec
pop
imul
add
sbbl
cmp
xchg
movsl
mov
mov
push
cmp
stc
mov
imul
pop
add
imul
test
mov
and
jl
es
test
mov
xchg
jbe
out
pop
push
mov
add
std
aam
sbb
sahf
cld
clc
scas
adc
mov
mov
mov
rol
xor
jo
outsl
movsl
inc
inc
mov
add
add
sub
andl
lcall
xor
mov
xor
movsl
cld
sub
das
pop
mov
push
imulb
orb
and
dec
in
mov
repz
mov
iret
insl
xchg
pushf
jge
xor
mov
sbb
mov
jmp
inc
idivb
and
xchg
loopne
punpckhbw
mov
leave
inc
scas
xlat
dec
aad
mov
movsl
stos
ret
ds
pop
std
mov
pop
mov
or
mov
push
push
jnp
sbb
jmp
mov
pop
jno
xchg
jbe
test
clc
dec
sbbl
sar
sbb
out
push
pop
mov
fs
dec
cli
xor
in
inc
pop
mov
dec
rcr
mov
pop
cmpsl
test
int3
or
mov
out
idiv
in
stos
pop
xor
in
jb
xorl
out
scas
xor
insl
adc
clc
adc
mov
inc
sub
dec
pop
in
mov
adc
dec
cmpsb
add
pop
or
jmp
adc
mov
cs
das
inc
iret
jg
add
incb
cmpsl
cmp
add
mov
push
xlat
mov
lahf
orl
int3
pusha
dec
sub
jge
loopne
cli
insb
adc
scas
jmp
inc
xchg
ffreep
mov
hlt
cmpsb
and
add
idivb
and
cmpsl
xlat
adc
mov
iret
jge
scas
add
pushf
call
mov
dec
add
sub
repnz
pop
mov
and
shrb
aaa
sbbl
stc
leave
cmc
aaa
pop
addr16
fadds
cmp
fistpl
arpl
das
xchg
repz
mov
mov
call
pop
xchg
jle
push
sar
jns
rolb
outsb
and
cmp
ljmp
push
jp
icebp
adc
sbb
jecxz
mov
jb
in
add
ja
xlat
pushf
and
test
movsl
sbb
rcr
sbb
mov
or
mov
pop
jp
cmp
subl
jbe
xor
cltd
push
jne
and
jg
es
or
aad
mov
mov
add
mull
mov
mov
adc
fcmovnb
inc
adc
push
lods
cltd
cmc
jb
fnstcw
rorl
ret
int3
mov
pop
jbe
or
add
cld
jecxz
ret
ret
pop
xchg
mov
fsubrs
jge
jo
sub
lret
push
xor
fldt
repz
aam
add
mov
mov
bound
insb
in
test
call
insb
cwtl
or
sbb
and
inc
rcll
jne
mov
and
and
xor
xor
je
gs
inc
ja
in
insb
int
adc
dec
test
out
pop
aas
decl
jb
aas
and
inc
ds
in
xchg
jecxz
andl
fld
push
fsubrp
fistps
mov
and
loop
cmp
int
adc
loope
pop
cwtl
cmp
arpl
hlt
sub
out
cmp
cli
and
lret
pop
loope
sub
adc
jp
mov
xchg
imul
xor
rclb
inc
movsb
ret
insb
cs
dec
pop
pop
pop
push
cmp
bound
push
test
xchg
cmp
mov
fdiv
arpl
insb
iret
mov
xorl
mov
rorl
inc
push
sub
cwtl
mov
xchg
mov
idiv
mulb
mov
stos
jp
push
addr16
inc
adc
call
jno
call
mov
sub
inc
lahf
inc
add
jb
mov
cld
outsl
hlt
enter
into
or
lret
xchg
pushf
vmwrite
dec
out
jmp
cmpsl
mov
hlt
push
gs
sub
es
sub
movsb
lret
call
xor
mov
cmp
int3
and
out
inc
lea
mov
and
and
in
pop
jmp
xor
add
xchg
ss
or
pop
sbb
aam
and
call
and
xchg
push
cmp
addr16
cmp
xchg
sub
aaa
cld
xchg
test
jb
jp
sarb
lret
fwait
mov
ljmp
negb
shlb
xchg
xor
insl
aaa
adc
cli
mov
cmp
fbld
and
cs
pop
mov
cwtl
ficomps
dec
fdivrl
pop
inc
rcrb
and
nop
out
cli
dec
mov
mov
mov
mov
insl
dec
hlt
lds
enter
cltd
fdivrp
nop
lahf
out
stos
adc
xchg
mov
sbb
mov
xor
push
inc
xchg
loop
push
ljmp
popa
adc
loope
shll
cmp
pusha
adc
adc
fcomi
push
dec
jle
jno
or
sub
mov
mov
or
ss
cmc
popf
xchg
ret
in
sbb
and
sbb
add
ja
mov
movsl
mov
or
das
jne
aas
mov
jns
scas
ss
mov
pop
daa
jnp
dec
inc
mov
insb
mov
mov
adc
cmp
cltd
scas
jnp
rclb
imul
cli
cmp
sub
jo
ret
mov
pop
lods
cmpsl
sbb
arpl
sub
mov
and
mov
cmp
out
ret
add
sti
sbb
stc
stc
dec
test
xor
dec
sub
stos
gs
inc
out
loop
mov
int3
jns
xchg
dec
test
loope
ficoml
das
mov
fbld
les
adc
insl
loope
loop
jne
leave
mov
inc
and
push
ljmp
add
mov
fs
subb
push
xor
mov
insb
mov
sbb
xchg
push
add
icebp
push
ret
pop
dec
mov
mov
mov
mov
fsub
cmp
inc
int3
mov
mov
ror
repz
test
add
sti
std
jp
clc
cli
cld
pop
xchg
inc
adc
pop
rcl
loop
mov
lea
push
sub
lods
cwtl
and
rcrl
xchg
sub
fwait
pop
jp
push
xchg
dec
idiv
ficompl
jl
repz
cmp
aam
insl
mov
cltd
mov
lret
and
pop
and
mov
insl
jp
jnp
add
shlb
int3
mov
out
mov
or
lcall
mov
stc
or
imul
dec
movsb
fildll
pop
mov
je
bound
dec
jnp
and
insb
jge
dec
inc
add
push
push
xchg
pop
or
gs
mov
fisubrl
sub
xor
jo
adc
mov
adc
xchg
es
adc
pop
inc
ja
mov
loop
dec
dec
sahf
test
stos
in
fwait
mov
call
mov
sbb
or
dec
pop
mov
sbb
mov
inc
lea
jbe
shlb
clc
inc
aaa
shlb
xor
fidivrl
std
ss
aam
or
sub
outsl
std
dec
cmc
inc
outsb
mov
mov
dec
push
or
and
xor
inc
mov
iret
jle
dec
sti
div
add
sub
dec
stos
test
sub
xor
inc
ficoml
push
out
mov
adc
xchg
rclb
xor
aaa
adc
ficompl
mov
es
jbe
loop
jbe
mov
in
mov
jmp
add
push
mov
sbbb
cli
cmc
sbb
mov
pop
testb
and
mov
pusha
inc
incl
stos
out
test
xchg
jl
xor
add
dec
pop
pop
adc
lcall
int3
jmp
jbe
outsl
sbb
mov
inc
stos
xchg
fs
and
aam
addb
test
imull
dec
mov
das
cli
les
mov
jecxz
test
push
and
inc
outsb
push
adc
or
sarb
in
sbb
add
adc
scas
inc
fwait
pop
in
push
push
mov
xlat
jmp
icebp
cmp
fcomp
mov
sbb
fcmovu
pop
xchg
fs
das
push
ret
xlat
lock
pop
mov
xor
cmp
mov
movsb
push
xlat
sub
lcall
jnp
mov
cmp
jmp
test
push
mov
mov
jnp
vorps
cld
insb
xchg
stc
inc
loopne
iret
mov
insl
mov
sub
xchg
xlat
repz
jb
xor
inc
pcmpeqw
pusha
mov
pop
pop
loope
mov
xchg
cs
and
push
adc
pop
int3
nop
sti
mov
pop
mov
push
sbb
inc
jb
adc
push
and
cmpsb
sbb
push
clc
movntps
mov
add
fs
sti
dec
lret
in
out
les
rcll
in
shll
push
data16
mov
mov
stos
test
adc
dec
jb
inc
sub
push
je
cwtl
lcall
addr16
push
mov
adc
mov
lret
mov
pop
orl
sbb
pop
pop
mov
pop
movsb
sbb
inc
xor
push
push
cmp
int
add
push
jmp
fsub
stos
mov
jmp
mov
cmpsl
xchg
and
sbb
pop
dec
mov
pop
lahf
fimull
cmc
pop
xchg
add
push
or
sbb
pop
inc
mov
jmp
mov
jns
test
add
mov
mov
xchg
lcall
popa
test
xchg
xchg
es
adc
mov
lcall
dec
shll
fucomi
inc
dec
das
cs
imul
xchg
cli
fmuls
shrl
mov
aas
add
fistps
lock
sub
test
cmpsl
ret
js
test
and
rclb
fsub
mov
and
add
mov
movsb
cmp
ror
sbb
fwait
lahf
or
sbb
xchg
jl
sub
xchg
cmpsb
es
lret
adc
clc
dec
je
scas
imul
fld
or
ss
xlat
dec
inc
fwait
imul
xchg
ret
xchg
and
hlt
and
dec
or
jno
push
cs
cmpsb
test
xchg
jge
adc
pop
fnstsw
ret
pop
cmp
inc
cwtl
dec
xchg
sbb
inc
mov
lods
and
push
stos
jae
mov
jg
rorl
inc
mov
cld
inc
out
mov
push
arpl
cmp
jnp
hlt
mov
add
dec
mov
popf
inc
cmp
hlt
jp
sbb
out
xor
inc
repnz
repnz
push
inc
adc
sub
fwait
sbb
into
push
xchg
xchg
cmpsb
outsb
and
push
fistpll
inc
lods
jo
xchg
cli
push
mov
pop
outsl
jp
push
push
mov
outsl
push
cli
hlt
mov
in
sbb
push
push
adc
and
cmp
lret
or
and
lds
dec
jb
mov
mov
loopne
js
adc
xlat
mov
xor
js
lret
mov
jecxz
inc
repz
push
jnp
mov
jle
xlat
and
push
mov
jmp
xchg
xchg
push
mov
adcl
inc
push
dec
cmc
aad
icebp
jp
or
imul
push
cmp
stos
adc
mov
adc
or
xor
xchg
ficompl
repnz
mov
std
insl
scas
add
movsb
mov
pop
jns
xor
xchg
pusha
loopne
and
sub
fwait
add
sub
xchg
mov
dec
cmp
xor
testl
cs
sub
pop
push
es
pop
dec
movsl
shlb
adc
dec
adc
orl
icebp
jg
sub
ds
lret
dec
sub
fimuls
jge
out
sahf
adc
add
or
std
hlt
insl
sahf
test
clc
test
mov
xchg
sbb
adc
cmp
lcall
inc
xor
adc
dec
mov
sbb
and
jno
and
xchg
pop
je
fidivrl
sub
mov
adc
push
imul
adc
jmp
jmp
inc
push
andl
sbb
mov
add
into
push
stos
pop
cmp
sub
ret
arpl
aam
jle
or
fs
lods
enter
pop
mov
loop
les
dec
cli
mov
inc
adc
pop
in
ret
cmp
fsubrp
mov
bnd
lret
pop
cli
lds
and
cltd
lods
adc
popf
dec
push
pop
inc
mov
adc
dec
lea
dec
dec
rcrl
xor
cli
cli
test
jne
sahf
fld1
popa
movsb
pop
addr16
sbb
or
mov
pop
int
pushf
xchg
das
xchg
mov
push
mov
mov
rcll
pop
pop
cmp
mov
cli
in
adc
add
les
fistpll
fs
subl
out
shl
xchg
jg
pusha
nop
subb
dec
dec
adc
mov
lods
or
or
pushf
cmp
adc
pop
inc
cld
gs
mov
loopne
stos
pop
or
gs
jge
sub
ret
and
mov
fbstp
call
sbb
jb
push
js
cltd
test
lea
xchg
repz
ret
inc
inc
inc
je
mov
daa
mov
sub
xlat
pop
pop
sahf
clc
or
push
bswap
push
adc
inc
sbb
inc
in
xor
xchg
out
or
daa
jle
add
mov
fcompl
mov
outsb
push
rorl
xchg
sbb
and
sbb
cmp
arpl
add
or
std
adc
sub
int
lods
xor
xchg
pusha
int3
mov
or
es
and
sub
cltd
cltd
fwait
nop
pop
mov
sub
xor
xor
les
and
icebp
lds
andl
pusha
sbb
cmp
arpl
in
mov
movsl
mov
push
or
and
jnp
jb
dec
adc
cmc
xor
xchg
ret
jecxz
push
jb
out
addl
outsl
push
mov
cli
sub
stos
stos
sbb
lds
and
addr16
jecxz
mov
pusha
repnz
xlat
jl
xor
xor
jmp
and
xchg
ja
cmp
sub
mov
dec
pop
sub
adc
pop
outsb
frstor
pop
mov
popa
aaa
jle
adc
addr16
cmp
rcl
mov
cli
sub
mov
add
adc
int
pop
or
mov
lods
sbb
push
cmp
cmp
xchg
jne
mov
insb
lret
lods
add
pop
or
dec
mov
cmp
add
dec
pushf
inc
mov
and
pop
push
div
xor
hlt
mov
push
mov
iret
jne
cmc
imul
roll
pop
lds
and
sbb
jbe
sub
push
scas
inc
dec
lcall
sbb
bound
add
in
pop
mov
mov
mov
adc
lods
cmp
mov
ds
pop
sbb
cltd
orl
bound
and
dec
fcompl
and
pushf
jae
push
and
sti
mov
popf
cld
mov
rorb
jnp
fistl
add
xor
pop
pop
test
mov
jg
cmpsb
pop
lds
jge
dec
test
mov
fucomi
or
mov
xor
ficoml
xchg
inc
fbstp
push
mov
lods
adc
sahf
pop
push
icebp
or
jle
xchg
scas
int
pop
je
loope
subl
sub
push
vprotw
mov
mov
push
into
pop
dec
call
je
mov
xchg
jg
sub
mov
jp
pop
sub
faddl
movsl
fisttpll
out
jecxz
sti
stos
xchg
sub
pop
ja
repz
fiaddl
and
sub
sti
push
cltd
dec
movsw
hlt
and
stos
adc
push
sti
adcl
cmp
sbb
sbb
test
mov
idivl
inc
je
imul
xor
sysret
in
lods
ljmp
mov
mov
push
cmp
xchg
sbb
int3
and
xor
xchg
das
xchg
aaa
in
fsts
cmp
loopne
or
inc
pop
sti
or
mov
jb
test
mov
xlat
dec
pop
push
outsl
add
sub
mov
imulb
jbe
dec
push
out
orb
lock
cmp
mov
xchg
pop
mov
lock
rolb
sub
lds
hlt
shrb
dec
sub
xchg
cmc
std
inc
add
pop
push
jmp
popa
mov
sub
rclb
cli
into
stos
jb
pop
in
jle
in
dec
xchg
arpl
lds
xchg
push
adc
stos
lods
std
leave
nop
dec
mov
repz
xor
xchg
jno
shrb
sub
or
mov
out
mov
ret
ret
les
jnp
inc
cmp
pushf
adc
push
mov
add
hlt
xor
and
jb
outsb
jl
imull
push
sub
ljmp
jbe
adc
jle
cmp
lods
and
jne,pn
xor
mov
fisubrl
mov
nop
fsub
orl
jb
andb
or
add
lds
push
cmp
pop
push
adc
jp
sbb
icebp
jmp
jnp
push
sub
and
sahf
xchg
xor
je
sar
sbbl
sbb
sbb
aad
out
sbb
cli
cmp
jns
mov
mov
int3
cld
out
movsb
inc
data16
adc
fld
add
stos
push
gs
sbb
and
adcb
pop
out
mov
add
int
popf
jno
mov
es
enter
push
xor
mov
push
push
shrl
and
shll
ret
fs
loop
sbb
jmp
xchg
mov
dec
call
js
jbe
cmp
jle
inc
out
mov
add
xor
test
fisttpl
or
loop
sbb
sub
mov
cld
jnp
pushf
push
mov
enter
xchg
call
inc
adc
xlat
jbe
daa
mov
orl
movsl
mov
add
mov
shll
mov
out
jnp
es
add
ret
out
jmp
xchg
add
add
out
mov
mov
adc
xchg
cmc
sbb
push
fisubl
leave
adc
mov
cmpsl
mov
or
stos
jmp
je
data16
xchg
pop
add
push
jo
ficomps
cmpsl
mov
xlat
lock
jo
fistl
mov
xchg
sub
fsubr
jl
mov
insb
mov
js
out
sub
sub
xchg
hlt
ljmp
cli
movsl
sub
and
or
sbb
sbb
arpl
int3
xchg
cltd
notl
push
lea
in
pop
push
cmpsl
mov
mov
stos
xchg
and
and
insl
js
out
shrb
in
mov
xchg
shrl
or
out
dec
lods
add
and
movsl
jmp
loopne
push
jo
test
pop
stc
jecxz
sbb
je
push
aas
mov
shlb
int
and
ljmp
mov
mov
mov
pop
mov
outsl
das
inc
inc
loop
inc
nop
das
pusha
and
mov
adc
sbb
add
add
fnstcw
and
add
adc
mov
inc
fsubrl
pop
push
add
addl
shrb
mov
ds
or
add
cmc
fbstp
add
std
pop
mov
sub
and
xchg
mov
inc
sub
add
dec
or
add
add
jecxz
sbb
int3
shl
cmp
push
sub
fs
rcr
push
loopne
mov
adc
cwtl
fcomi
xchg
cmc
cmp
xor
flds
xchg
mov
cmp
fcmovnbe
imul
jne
cwtl
fwait
cld
xlat
les
fsts
pop
xor
dec
xchg
decl
jno
aad
fwait
sbb
lock
repnz
cmp
xchg
idiv
mov
adc
out
dec
add
out
jb
adc
jbe
inc
insb
insb
pop
sahf
insb
jno
mov
nop
jle
adc
sti
jecxz
add
cmp
mov
jnp
push
pop
out
cwtl
test
daa
cld
adc
loop
xchg
rcrb
or
mov
mov
xor
sti
mov
stos
pop
xor
xchg
test
mov
loope
mov
loop
add
add
in
sbb
jno
jne
jmp
xor
add
cmpsl
fbld
daa
rorl
daa
roll
cltd
bound
xor
addr16
mov
xor
inc
sbb
and
test
lock
xor
in
push
icebp
dec
inc
shlb
mov
dec
lcall
ficoms
test
lds
rorb
cld
out
sbb
mov
call
push
sbb
pop
or
xchg
add
xor
jno
mov
lds
sbb
jle
mov
test
cmp
gs
ds
int
fwait
or
push
imul
aad
xchg
out
aaa
inc
lcall
jb
mov
scas
iret
lcall
inc
xlat
test
pop
loopne
dec
aas
and
hlt
push
mov
jecxz
sbb
mov
cmp
in
sub
fcoml
xchg
lahf
or
cmp
pop
pop
xor
fucomp
cmp
out
and
adc
ret
mov
fs
lods
and
movsl
xor
testb
and
pop
xchg
pop
sbb
loopne
std
int
lret
dec
jb
mov
adc
out
into
sarb
xchg
mov
pusha
cmc
ja
cmpb
push
sbb
dec
data16
mov
jle
cmpsb
sbb
popf
xor
ljmp
repz
test
pop
movsb
push
jge
mov
jns
cmp
fcoml
lods
test
popf
mull
jnp
mov
xlat
cld
filds
mov
aam
inc
xor
lcall
pop
roll
adc
lds
xchg
mov
push
cli
sbb
divl
aad
cmp
mov
cmc
out
cs
out
push
mulw
adc
jbe
push
arpl
xchg
mov
rclb
call
xor
or
push
mov
mov
int
dec
repz
js
stc
popf
pop
fmulp
xchg
lods
mov
ja
dec
les
bound
cli
lret
lahf
out
dec
and
gs
insb
pop
xchg
jbe
mov
cmp
pop
add
call
push
addr16
jle
add
cli
mov
inc
or
bound
xor
adc
faddl
xchg
push
subb
xchg
negb
fnstsw
push
fimuls
mov
imul
and
es
repnz
inc
out
inc
sub
mov
imul
icebp
stc
pop
dec
cmp
fldl
loop
cli
test
arpl
inc
ljmp
enter
lret
adc
and
imul
out
movsb
push
cmp
lods
out
jne
mov
push
xchg
jno
mov
fdivrs
mov
add
sti
loope
loope
ret
xchg
insb
and
loop
or
and
push
imul
loope
in
xchg
push
and
mov
pop
cmp
fcoms
adc
sbb
paddusb
jns
inc
subb
and
es
mov
in
repnz
addr16
sbb
dec
ja
iret
fs
sub
lock
push
sahf
or
jl
mov
push
test
push
mov
dec
cmp
loop
out
and
ja
xlat
dec
and
inc
cmp
test
les
pop
mov
movsb
je
test
adc
aam
jae
cmp
out
add
push
sub
push
push
arpl
out
es
sub
in
into
mov
fstl
mov
adc
push
add
xchg
add
ljmp
xchg
out
mov
adc
push
sti
add
push
push
sbb
int
rolb
jbe
pusha
and
ret
mov
mov
pop
out
xor
xlat
cld
or
cli
repz
jo
inc
dec
movsl
iret
ja
xchg
shrl
xchg
enter
mov
xor
adc
je
icebp
sub
loop
xor
jg
jb
fldt
clc
pop
xor
data16
jp
test
int3
in
arpl
adc
fists
or
jae
mov
repz
in
cmp
push
cmp
pop
stos
loopne
in
jg
fmull
mov
adc
mov
aam
inc
fisubl
jns
je
jno
scas
push
icebp
cs
icebp
scas
sbb
xchg
mov
and
sub
out
jecxz
jnp
or
in
push
sbb
cld
aam
adcb
in
and
cltd
or
jns
sbb
imul
mov
xchg
pop
push
pushf
jmp
jb
jae
movsb
test
shll
lret
or
rcrl
sbb
movsb
aaa
rcll
out
push
mov
cwtl
push
loopne
scas
cmp
mov
aaa
fistpll
loop
lea
clc
out
adc
daa
lret
ja
sti
and
jbe
xor
push
mov
xor
cld
shr
out
cmp
pop
add
insb
and
mov
pushf
mov
adc
adcl
scas
mov
pop
and
push
dec
in
and
insb
lahf
adc
ljmp
mov
cmp
xor
int
push
xchg
or
test
insl
pop
test
push
out
sub
ja
jmp
das
xchg
out
pop
xor
mov
or
and
fisubrl
dec
dec
push
repnz
lods
imul
xchg
pop
mov
ljmp
mov
fwait
mov
mov
dec
xor
adc
insb
ja
shll
ss
arpl
xorb
in
or
cmp
inc
js
sahf
mov
xor
in
pop
cmpsl
aad
inc
and
out
loop
push
lock
clc
aas
jge
les
bound
dec
into
out
add
mov
add
sbb
loop
jecxz
jecxz
and
push
push
inc
out
dec
popa
test
shr
jmp
fwait
mov
jo
int
les
xorl
mov
outsl
pop
andl
pop
rol
sub
ljmp
aaa
jno
mov
sub
sbb
lock
notl
xchg
cvttps2pi
or
aaa
stc
or
mov
daa
pop
lock
push
stos
mov
jecxz
push
cmp
lock
decl
out
add
dec
das
sub
and
mov
mov
leave
sub
rorl
push
or
jo
inc
shll
mov
cmp
dec
add
insl
int
in
mov
adcl
mov
sub
dec
jne
pop
mov
addb
das
das
mov
add
dec
inc
fldl
cmp
cmc
cmp
out
test
xchg
out
data16
mov
adcb
scas
ret
adc
push
add
and
push
icebp
sbb
dec
xor
inc
pop
popa
inc
mov
ja
ljmp
into
and
and
popa
jns
dec
pop
movsb
mov
rcll
not
stos
push
jle
dec
pushf
push
ret
hlt
les
cmp
sbb
push
lds
hlt
jnp
jp
repz
cmp
sub
and
jne
ljmp
adc
movsl
mov
push
es
pop
clc
inc
jbe
push
adc
inc
dec
pop
xor
sub
push
shrl
add
test
adc
adc
cmpsl
mov
insb
rolb
inc
adc
dec
adc
adc
inc
orl
adcb
fwait
add
sbb
cmp
jo
dec
pop
sub
lods
test
inc
pop
sbb
add
adc
or
dec
dec
lcall
pop
jb
nop
mov
fistl
imul
lahf
add
lret
dec
push
fimull
or
nop
loope
mov
pop
repnz
jnp
sbb
jmp
mov
hlt
call
mov
adc
cld
ret
jge
xor
test
mov
fs
popa
ror
ret
xchg
inc
sbb
cmp
mov
jl
sbb
lods
sbb
mov
roll
push
fidivrl
xor
pop
outsl
adc
pop
ficoms
imul
mov
pop
test
and
sarb
lret
nop
inc
dec
pop
frstor
and
dec
xlat
mov
or
int3
mov
push
mov
inc
mov
mov
cwtl
adc
mov
scas
stos
shrb
enter
adc
maxps
push
dec
push
mov
fbld
sub
cmp
pop
xchg
movsb
mov
xorb
mov
dec
outsb
fnstenv
test
jne
jne
test
imul
pop
push
pop
repz
cltd
pop
aas
scas
loopne
jno
jp
jae
pop
dec
jo
mov
jo
mov
stc
jle
ja
int3
lahf
push
xlat
movsb
or
dec
popf
pop
fldt
or
and
sbb
aaa
out
ds
jb
lret
fcomi
nop
fsubrs
dec
outsl
cmp
xchg
movsb
xor
push
mov
rcll
pop
jnp
dec
movsb
push
cs
sub
adc
imul
xor
sbb
inc
cwtl
mov
mov
dec
out
sub
push
test
inc
or
pushf
inc
sub
stos
enter
cmc
je
sbb
subb
je
fwait
int
int
and
fsts
xor
mov
xorl
xor
fwait
bound
or
lock
jmp
pop
fstps
testl
xchg
ja
arpl
sub
daa
inc
jle
dec
fnstenv
sub
xchg
aam
out
imulb
jb
pop
sub
in
mov
adc
sgdtl
das
ljmp
xor
dec
rolb
jmp
xchg
adc
les
mov
rcrb
leave
dec
xchg
cs
and
push
mov
ja
les
gs
rcrl
addl
enter
dec
add
cld
jmp
ljmp
popa
jne
stos
mov
shl
lcall
dec
or
icebp
push
adc
hlt
jnp
rol
mov
popa
cmp
repnz
into
mov
or
add
and
xor
icebp
scas
sti
and
mov
ret
mov
mov
movsl
ss
sbbl
inc
pop
imul
xlat
xor
lds
ret
test
pop
incl
pop
jg
bound
decb
mov
insl
out
stos
lods
pop
push
push
sarb
or
ret
dec
in
lcall
into
loope
dec
sahf
sbb
push
jb
mov
sub
sbb
sub
insl
test
xchg
ret
fwait
in
loope
ss
mov
cmp
shr
test
xchg
mov
and
mov
jp
cmp
out
ror
add
sub
test
bound
xchg
adc
pushf
fwait
mov
dec
or
jnp
icebp
clc
or
mov
adc
adc
out
sbb
mov
fs
ror
xor
fnstenv
bound
sarb
push
mov
test
push
ficoml
adc
fwait
add
adc
sub
sbb
and
clc
mov
pop
mov
and
repnz
pushf
clc
mov
pop
roll
sbb
jg
add
daa
movsb
mov
push
in
mov
inc
stos
push
xchg
into
movsb
nop
sub
dec
xchg
xor
aas
mov
mov
xchg
stos
fisubl
test
lret
cld
mov
pop
push
xchg
cmp
cmc
scas
in
lods
dec
inc
imul
outsl
jmp
stos
insl
insl
out
insl
call
jbe
dec
mov
fidivrs
stos
fwait
popa
fsubl
inc
push
nop
adc
or
out
hlt
cwtl
inc
dec
sub
aam
pop
cli
jne
lahf
cwtl
ja
inc
adc
scas
cmp
jle
in
test
xchg
lcall
lahf
lahf
mov
dec
nop
int3
cmp
mov
push
jp
and
bound
adc
ficoml
cwtl
fwait
out
fwait
rcll
push
loop
lds
inc
cwtl
jmp
dec
rcr
loopne
imul
loope
adc
inc
and
ja
inc
adc
adc
xchg
js
lock
js
xor
fidivrs
xor
sbb
aaa
push
lret
xchg
sub
inc
pop
mov
sub
jae
insb
cmpsl
xor
lcall
xchg
in
or
adc
icebp
adc
or
sahf
pop
arpl
add
jmp
jnp
lea
pop
test
out
nop
into
fdiv
xchg
lods
repz
pushf
dec
xor
jg
sbb
loop
adc
nop
shrb
andl
std
adc
aad
lret
cmpsb
push
jb
rorl
jmp
inc
mov
mov
int
jb
fisttps
stc
mov
dec
sahf
push
or
push
xchg
movsb
movsb
mov
or
stc
cmc
imul
enter
mov
xor
mov
cld
lods
out
adc
cmpsb
push
cmp
arpl
xlat
das
roll
xor
mov
xor
sub
mov
fisttpl
jge
in
mov
lahf
je
cld
mov
add
outsl
sti
jno
add
mov
mov
jne
cli
dec
sar
fwait
xlat
lods
jo
cmpsl
icebp
movaps
insb
adc
gs
mov
sarb
cmpsl
inc
stc
lcall
pop
dec
adc
jmp
les
sbb
adc
and
decb
dec
add
fdivl
in
fcompl
mov
mov
clc
xchg
xor
mov
pop
stc
dec
daa
ret
cmp
gs
test
cmp
sub
pusha
in
push
fstp
mov
sbb
inc
sbb
out
imul
dec
mov
stos
and
mov
cmc
ljmp
bound
xchg
mov
addr16
sub
les
fsubrs
cmc
cmp
subl
cmc
adc
js
fwait
jns
clc
or
mov
icebp
add
push
test
adc
int
mov
add
lcall
inc
mov
je
mov
rcll
mov
add
int3
imul
repz
loopne
dec
dec
outsb
lods
lret
adc
push
mov
lods
inc
fisubl
xchg
mov
fmull
lods
je
and
stc
cltd
lods
push
loop
push
mov
pop
mov
mov
jns
cli
ljmp
push
jo
movsl
xchg
inc
xchg
mov
dec
or
xor
hlt
cmp
jmp
push
fdivp
mov
arpl
stos
add
jbe
or
mov
push
mov
rcrl
mov
cld
mov
xorb
xor
sbb
sub
sbb
sti
ds
nop
sub
cmp
add
fldenv
add
std
scas
sti
adc
outsb
xchg
jl
pop
adc
daa
or
and
int
cmpl
mov
sbb
push
nop
repz
sbb
mov
or
xlat
dec
insl
adc
xor
cld
in
lods
dec
push
or
dec
mov
bound
sarb
movsl
dec
jmp
xchg
xorps
lods
and
popa
icebp
rol
fbld
mov
fimull
addb
rcr
out
divl
shlb
orl
xchg
fildl
mov
lahf
adc
cmp
nop
lret
or
dec
arpl
hlt
sub
aam
jg
neg
push
sbb
sbb
pop
sarb
mov
or
xchg
mov
cmpsl
loop
xchg
xor
test
mov
mov
ss
inc
pop
mov
dec
push
fyl2xp1
mov
rorl
lret
pop
cmc
cmp
fistl
arpl
popa
adc
xorb
repz
jmp
jbe
cwtl
popa
sub
scas
outsb
xor
mov
pop
mov
je
jo
aaa
jb
cmp
adc
int3
popa
xchg
xor
jle
jae
adc
std
sbb
mov
ret
stos
sti
xchg
add
dec
xchg
aad
stos
mov
ret
jno
dec
or
pop
imulb
and
mov
rclb
mov
mov
pop
popa
fmuls
pop
clc
xor
dec
dec
jmp
push
mov
add
pop
out
xor
mov
or
dec
pop
addl
into
insb
scas
add
into
add
inc
mov
outsb
rcrb
in
and
cmc
mov
cli
cs
sahf
test
hlt
push
das
data16
fsubrl
mov
scas
ret
xor
sub
push
jge
add
out
test
mov
cmp
or
aas
mov
inc
adc
popa
xor
pusha
fstl
gs
jnp
push
mov
dec
push
inc
sub
xor
out
not
jg
dec
mov
pusha
pop
adc
add
inc
sbb
outsb
pop
lea
mov
dec
or
xchg
sbb
pusha
in
insl
xor
icebp
imul
repnz
test
jl
mov
pop
add
mov
pushf
inc
inc
jmp
add
rcrl
cmp
aad
pop
lret
fwait
fwait
insb
cmpsb
outsl
jno
dec
push
icebp
add
iret
adc
fisubl
or
cmp
inc
stc
test
je
sub
jo
testl
mov
push
mov
iret
call
out
rorl
leave
es
jne
sti
idiv
fdivrl
les
cmp
ret
test
jne
cmpsl
push
mov
getsec
add
clc
insb
jo
int3
sub
cmp
adc
fld
inc
cmp
pop
push
imul
fwait
mov
lods
fwait
xchg
cmc
mov
sub
cmp
mov
push
or
add
and
lahf
cmp
jl
sbb
or
dec
inc
mov
sub
inc
cmp
cwtl
cltd
xlat
sti
or
or
dec
xchg
sub
pop
mov
sbb
and
fidivs
vcvtps2pd
rolb
push
cmp
xchg
imul
cmp
xor
mov
lahf
mov
das
xchg
movsb
aaa
pop
push
lahf
bound
or
fs
fucomp
loope
mov
out
test
ja
aam
aad
jp
mov
adc
loope
and
and
sbb
mov
sbb
pop
jnp
mov
xor
rorl
aam
stos
adc
mov
stos
ja
mov
xchg
pusha
inc
sub
xchg
pop
sbb
push
sub
stos
out
xchg
sub
rol
add
test
outsb
xchg
xchg
repnz
jnp
mov
pop
fisubrl
sub
enter
mov
scas
repz
xchg
mov
dec
pop
out
mov
or
dec
pop
lahf
xchg
pusha
fs
js
jbe
dec
frstor
jge
mov
jae
mov
popf
jge
inc
and
dec
xlat
sahf
mov
mov
adc
aad
cmova
adc
pop
or
mov
test
and
or
flds
dec
insl
fdivrs
pop
shlb
aaa
mov
push
neg
iret
jo
pushf
cltd
dec
mov
std
les
call
insb
loopne
lcall
stos
jmp
ficoml
pop
sub
lea
push
dec
xor
mov
and
xchg
push
adc
movsb
cmpsb
aaa
xor
and
pop
ss
jnp
mov
fs
add
xchg
jl
pop
outsl
sbb
lods
daa
dec
call
stos
test
xor
ljmp
cmp
mov
ljmp
fsub
push
fidivrs
repnz
mov
cli
jmp
in
popa
sti
push
xchg
xchg
aaa
inc
push
popa
xor
ja
or
dec
repnz
add
and
xchg
adc
push
fs
adc
add
inc
cmp
dec
shr
sbb
into
int
lret
add
jo
or
pop
and
mov
push
mov
divb
pop
mov
xchg
inc
dec
sbb
push
aam
adc
inc
inc
bound
scas
jnp
out
mov
jg
sbb
pop
sub
hlt
out
add
movsl
mov
push
leave
dec
lds
ss
inc
cmpb
add
std
mov
inc
push
adc
add
out
push
jge
fsubl
add
cmpsl
js
lea
in
inc
pop
imul
pusha
test
jle
movsl
outsl
ds
cwtl
and
pop
and
push
stos
jl
inc
pop
and
pop
pop
and
jge
mov
outsb
push
iret
rclb
je
or
xlat
movsl
out
adc
pop
xorb
push
push
jge
xchg
or
push
push
dec
notl
lret
push
jno
dec
fisubrl
dec
or
xchg
jecxz
dec
sbb
jmp
and
mov
add
cmp
cmp
loopne
mov
loope
jae
xchg
ja
fmul
inc
mov
mov
cmpsl
cmp
testb
push
scas
sahf
out
test
push
inc
push
or
ror
mov
lea
pop
jnp
lahf
dec
out
das
jmp
cmp
roll
xor
insb
sub
sbb
test
push
mov
inc
popf
aam
pop
xlat
fs
xchg
idivl
and
sub
hlt
add
dec
insb
mov
into
enter
sbb
test
lret
sbb
and
popf
mov
cs
loopne
popf
into
aad
xchg
add
cmp
hlt
ret
xchg
arpl
inc
aam
rolb
mov
mov
mov
in
aam
push
xchg
mov
fidivrl
int
pop
test
cmpsb
sbb
mov
mov
adc
pop
xchg
adc
insb
cmp
mov
mov
mov
fcom
mov
pusha
sbb
insb
sub
fcmovbe
dec
cmp
int
test
jp
xchg
jne
lods
fs
icebp
adc
enter
xchg
int
sahf
in
push
push
gs
jmp
in
and
sub
dec
mov
fdivs
xchg
shll
mov
adc
mov
fidivrl
and
call
scas
ja
add
push
sub
push
out
add
jg
sbb
xchg
cmpsb
mov
jne
shll
sbbb
cmpsl
dec
iret
sbb
loope
xchg
mov
xrelease
cmpb
and
jb
mov
mov
test
out
cld
inc
std
sbb
mov
pop
pop
ds
jb
pop
mov
mov
sbb
notl
xchg
lret
scas
fs
loop
call
push
lret
cmp
or
xorl
pop
dec
inc
arpl
aaa
sub
push
ja
xchg
in
int3
rolb
adc
mov
or
adc
push
cmp
lret
sub
jmp
insb
mov
inc
fstl
popl
mov
mov
push
popf
std
sbb
shlb
fwait
hlt
mov
loope
cmpsl
sbb
sti
pop
cmpsl
push
xor
es
add
push
outsl
mov
sbb
sub
jl
pop
and
stos
sbb
aas
into
sahf
cmp
out
sbb
cltd
loope
jp
xchg
data16
std
ljmp
jg
push
outsb
lret
ret
loope
sbb
test
pop
nop
js
xor
outsl
lret
pop
mov
cmp
cmp
mov
push
outsb
xchg
cmp
enter
jno
xlat
xchg
mov
add
or
in
xor
rcrl
ljmp
mov
or
in
inc
mov
mov
repnz
scas
addr16
fildl
lret
lcall
xlat
test
les
sub
clc
cmc
data16
push
aam
add
adc
loop
je
stc
jmp
iret
shrb
sbb
jo
mov
je
mov
adc
mov
fnstcw
das
ret
sbb
mov
outsl
sbb
aam
in
jmp
aam
xchg
add
insb
push
adcl
out
ret
dec
lahf
push
and
aaa
lcall
jge
or
daa
das
scas
lods
aas
out
gs
push
repz
lds
jns
bound
cmp
aas
and
addl
ljmp
pop
gs
push
xchg
sti
mov
das
test
and
jae
xchg
js
pop
orl
js
xor
and
daa
orb
cmc
sub
adc
mov
add
negl
jmp
add
jmp
int3
out
movsl
stc
dec
mov
xchg
loop
xor
xchg
das
fisttpll
popf
push
mov
in
inc
loopne
mov
dec
adc
mov
lcall
cmpsl
mov
dec
fmuls
jb
in
inc
bound
cwtl
jg
jl
add
test
push
xchg
insb
cmc
dec
out
and
lret
mov
aas
add
dec
adcb
lahf
loop
and
mov
xchg
inc
in
icebp
test
cmp
ja
mov
adcl
movsl
cmp
std
adc
inc
in
leave
cmpsl
fwait
idivl
mov
push
dec
outsb
mov
decl
test
fldt
cs
jmp
leave
and
adcl
fisttpl
clc
xchg
jns
and
xlat
push
xchg
xchg
adc
ficoml
add
int
out
inc
cmpsl
push
dec
leave
arpl
adc
popf
mov
imul
sub
cmpsb
rep
les
dec
cmpl
mov
popa
test
xor
jae
or
sbb
mov
int3
xor
pushf
fsubs
push
dec
stc
mov
xor
rcll
add
and
pop
push
into
loop
sbb
mov
jne
sbb
xor
or
cld
rolb
add
inc
cmp
and
mov
sub
popl
or
shll
jb
mov
pop
sub
sbb
subl
pop
or
dec
mov
add
xor
cmpsl
or
rcr
inc
out
mov
jecxz
inc
or
leave
dec
test
dec
ds
int3
mov
into
in
lods
in
imul
repnz
call
adc
pusha
adc
movsl
mov
jno
cwtl
mov
ret
pop
xchg
mov
je
ret
add
sub
pop
out
and
sub
call
out
pushf
xchg
movsl
aas
and
jns
ja
push
mov
mov
ret
push
pop
out
movsb
ret
pop
mov
pop
into
dec
cmc
sbb
push
sub
xchg
inc
xlat
sub
push
mov
fists
and
jnp
adcb
push
fs
and
outsl
test
inc
mov
data16
xorl
mov
jb
fsubrs
dec
arpl
cwtl
shrl
xor
mov
pushf
nop
stos
shrl
sbb
adc
clc
mov
inc
lret
sbb
dec
popa
stc
push
xchg
cmp
xchg
es
ret
scas
push
ret
outsl
jle
push
sub
js
cmc
addr16
xor
mov
cltd
push
pop
xor
cmpsl
xor
adc
xchg
mov
test
shl
cmp
incb
pop
mov
shll
and
inc
sbb
xchg
xor
shrl
mov
or
pop
pop
inc
jno
adc
and
adc
bound
xor
and
mov
decb
add
xor
daa
aam
cmc
xchg
cli
fwait
sahf
cmpsb
aam
xor
sbb
aas
ljmp
xor
push
jle
push
lods
inc
stc
or
out
dec
xchg
add
jg
sub
pop
xchg
xor
pop
aam
xlat
cwtl
ljmp
or
loop
cmp
shlb
scas
sub
mov
or
out
inc
and
or
shl
mov
loope
imul
lret
jle
sahf
ja
sbb
sbbb
adc
mov
cmp
cmp
sub
scas
insb
xchg
stos
cmp
jns
adc
jl
mov
outsb
dec
mov
dec
dec
ret
lods
unpckhps
cmpsl
inc
xchg
repz
and
movsl
test
xchg
xchg
push
test
xlat
pop
pop
xor
roll
hlt
addb
sub
out
add
mov
push
pushf
les
dec
add
adc
fstl
cmp
enter
cmp
add
pop
inc
pop
pop
sbb
notb
push
add
add
jns
cmpsl
xchg
lcall
jbe
je
idivl
imul
test
stc
adc
push
sub
mov
pop
roll
jp
std
outsb
jge
test
icebp
xchg
fsubp
inc
adc
outsb
push
cltd
inc
cmp
lods
cld
sub
lods
xchg
mov
xchg
sbb
add
jo
cwtl
jnp
cs
aam
out
out
mov
jae
cmpsl
jo
mov
sbb
push
dec
xchg
scas
mov
shll
les
adcb
in
xlat
jge
and
sub
repnz
inc
add
imul
fwait
dec
insl
push
mov
inc
sbb
test
sub
xchg
jb
clc
out
pmullw
ficoms
jae
lds
scas
sbb
mov
mov
sar
insl
mov
sub
push
xor
fisttpll
shll
loop
fwait
add
jae
pop
sub
adc
sub
dec
imul
fiaddl
add
dec
nop
sbb
test
in
jmp
cmp
push
rclb
imul
out
les
icebp
xor
mov
int3
jle
xor
ljmp
loopne
shll
ja
mov
ja
push
inc
ljmp
dec
sub
and
push
dec
dec
daa
jns
mov
adc
mov
and
mov
xor
testb
add
test
inc
ss
ret
sub
add
pop
fsubrs
sub
cs
xor
into
pop
in
mov
or
sbb
xor
mov
adc
in
pop
mov
shl
std
fldl
or
shrb
imul
lret
mov
inc
mov
iret
mov
lds
fstpl
or
xchg
mov
xor
and
and
jg
push
mov
xchg
inc
subl
int
or
out
roll
lcall
lods
sti
xchg
test
mov
dec
outsl
jne
xchg
fists
xchg
adc
into
adc
call
outsb
xor
push
cmp
push
mov
mov
fmuls
mov
pop
in
sbb
ds
xor
sbb
repnz
scas
mov
xor
aas
inc
out
xchg
movsb
push
inc
cmp
stos
mov
xchg
cmp
stc
bound
push
outsb
test
mov
fcoms
sub
outsb
int
mov
jg
jge
mov
adc
gs
xor
leave
dec
scas
mov
push
leave
push
xchg
cltd
xchg
mov
rcr
rcrl
dec
hlt
mulb
mov
lret
or
mov
insb
jmp
sarl
in
lods
jo
pop
mov
enter
sbb
int
xchg
out
sbb
cltd
mov
insl
pop
fldt
cwtl
scas
push
xor
pop
sarl
xchg
mov
add
repz
std
incl
xchg
insb
mov
divl
cvtpi2ps
insl
or
es
inc
sti
lahf
pop
movsl
mov
sub
jg
inc
or
sahf
add
idivb
daa
add
clc
sbb
xchg
xchg
mov
ds
xor
iret
xor
jle
jg
aam
fs
imul
popf
enter
xchg
sub
outsl
fwait
imul
cmpsb
aaa
pop
bound
ffreep
sub
sbb
and
sub
sbb
fdivs
test
jbe
dec
or
jb
popa
inc
pop
pop
sbb
or
push
push
push
aad
inc
mov
ret
stc
adc
adc
cmp
popf
nop
fcomps
mov
cmp
mov
insb
stos
mov
enter
lret
aam
js
mov
fmul
add
jbe
cltd
push
mov
cmpsb
fidivs
ds
dec
out
mov
jle
aam
std
or
int3
cld
dec
push
dec
jb
sbb
mov
mov
mov
push
cmpsb
or
daa
mov
mov
push
insl
cmp
or
cmp
mov
lcall
cwtl
mov
mov
dec
mov
mov
sbb
mov
shlb
mov
cmp
inc
mov
ss
inc
fs
pusha
inc
mov
lds
cmp
jae
lods
cmp
xor
push
jo
lret
cmp
test
xor
mov
fisttpll
jo
inc
les
add
jle
or
pop
and
or
pusha
xchg
sbb
lods
xchg
rorl
popl
xor
lods
sarb
insb
jle
lret
cli
cmc
daa
add
movsl
adc
mov
pop
xor
cmp
inc
mov
sbb
lret
in
in
dec
mov
fstpl
fimull
jecxz
or
lret
add
aas
movsb
ds
adc
repnz
or
pop
xorb
sbb
xchg
addr16
xchg
psllw
repnz
fiaddl
inc
jns
movsb
xchg
push
sbb
loopne
xchg
mov
xor
lret
mov
pop
cmpsl
sbb
mov
mov
sti
repnz
sbb
js
push
and
movsb
fcoms
into
mov
xor
jne
aaa
jae
dec
xlat
mov
inc
lret
and
cmp
or
mov
xchg
jns,pt
ficompl
fnstsw
movsl
and
sbb
sbb
or
cmpsl
aas
pop
bound
popa
js
ljmp
je
test
cwtl
rol
xchg
mov
call
notl
lret
mov
in
rcl
repz
inc
dec
nop
jb
aad
push
mov
daa
scas
subb
das
push
sbbl
and
jle
push
dec
rcll
into
add
cmp
and
sbb
cwtl
cmp
fldl
lcall
fdiv
lret
fdivr
repz
mov
xor
jge
adc
mov
shll
dec
shl
sub
inc
sbb
dec
aaa
testl
jae
lahf
xchg
mov
in
xor
mov
pushf
push
iret
cltd
or
mov
mov
mov
repnz
in
daa
inc
repz
xchg
xchg
sbb
lods
cmpsb
cltd
or
xchg
or
in
iret
xchg
sbb
xchg
int
push
xor
ret
mov
sti
icebp
adcb
dec
or
cs
mov
jb
hlt
lret
inc
in
and
pop
dec
gs
mov
cmp
pop
inc
pop
mov
stos
add
repnz
pop
fs
and
loope
push
sbb
daa
sbb
and
add
test
loope
inc
push
sbb
cmp
ret
xor
cli
sub
sub
scas
ss
push
push
xchg
mov
push
xor
pushf
mov
mov
ret
cmp
mov
cwtl
jo
xor
call
nop
icebp
cltd
mov
mov
adc
inc
cld
js
cmp
loopne
adc
imul
sub
cmc
mov
sarb
movsb
xchg
rorl
scas
jmp
cmpsb
push
mov
movsl
fimull
xor
inc
jnp
add
dec
push
adcb
jg
dec
testl
imul
jb
cs
stc
add
pop
adc
stos
test
jne
cmp
mov
ljmp
ds
inc
mov
movsl
and
loop
and
in
fcomip
jmp
ret
jae
pushl
ret
das
xchg
pop
dec
jl
xchg
mov
jg
xchg
mov
jp
lret
push
push
ja
mov
and
jl
pop
addr16
gs
into
mov
sub
pop
mov
shlb
test
or
scas
aam
sar
or
imul
mov
cltd
mov
testb
dec
xchg
jl
xchg
nop
lock
xlat
jp
out
mov
mov
stc
test
adc
roll
mov
hlt
js
push
add
pop
cli
dec
lret
xlat
scas
sbb
lcall
std
inc
pop
movsb
mov
fiadds
or
repnz
aad
xor
ret
loope
push
jns
ds
stc
out
leave
orl
ret
cmp
repz
int3
or
out
stos
sbb
dec
dec
mov
data16
sbb
inc
dec
cwtl
mov
fistps
ljmp
push
iret
jmp
shll
dec
pop
lret
mov
add
sarb
lret
push
adc
push
mov
sub
mov
adcb
mov
xchg
pusha
dec
xorb
sahf
add
mov
movsl
mov
shlb
xchg
push
fucomip
pop
rol
ss
sbb
into
les
sub
nop
divb
xlat
mov
xor
sbbl
xor
int3
cmc
ss
jnp
test
out
xchg
rclb
and
imul
ret
inc
rorl
lock
dec
test
sbb
ret
dec
cmp
jbe
cs
pop
and
mov
pop
in
outsb
jg
mov
push
push
sub
adc
ds
call
mov
push
xchg
jno
fwait
sub
add
push
idivl
andb
test
int
ja
js
adc
cmp
lds
pop
fisubrl
push
cmp
or
sbb
insb
mov
outsb
lret
mov
stos
push
rcrl
jp
jg
xor
test
rcr
daa
xlat
mov
call
pop
jge
mov
xorl
leave
sub
aas
pop
cmp
imul
js
sti
sub
mov
inc
popf
stos
mov
sub
fwait
adc
mov
data16
xchg
and
sub
dec
push
insl
test
jl
mov
dec
out
xchg
mov
dec
pop
mov
popa
push
jle
mov
rcrb
pop
pmaxsw
inc
iret
shlb
sbb
dec
mov
ret
push
cmp
cmp
stos
enter
dec
sub
push
or
jae
ret
clc
jge
dec
pop
adc
inc
cmpsb
cmp
call
fsubrl
mov
into
cmp
jl
lahf
or
mov
lcall
xor
add
std
aad
out
push
sub
movsb
and
and
mov
ret
cmc
sbb
fimuls
sbb
clc
lahf
std
sbb
push
jne
mov
inc
jg
add
imul
adc
pop
lahf
sbb
push
js
dec
cli
in
fstp
add
mov
bound
mov
test
shl
mov
dec
popf
das
fsub
ffreep
cmp
clc
loopne
sti
scas
into
xor
push
insb
mov
jns
jb
mov
push
xchg
push
push
cli
imul
xchg
pop
mov
sti
lods
scas
les
jnp
loop
add
test
sbb
mov
call
sti
sbb
fimull
pop
mov
ds
cmc
mov
dec
xchg
call
and
xchg
js
sub
mov
aam
mov
pop
jmp
mov
xchg
dec
push
incl
dec
push
add
das
xor
je
dec
adc
or
outsb
dec
rcll
std
xchg
popa
lods
jmp
into
inc
pop
xlat
or
and
sub
dec
aad
int3
je
cli
cmp
push
std
imulb
loopne
and
out
cli
test
mov
xor
bound
hlt
cmpsb
cmc
pop
mov
out
cwtl
stos
adc
cli
fsub
jl
push
add
lcall
jle
sub
scas
xchg
mov
stos
inc
insl
adc
pop
dec
jns
sar
jmp
jge
mov
shr
addb
mov
xor
movsb
mov
adc
jl
and
mov
cmp
scas
add
dec
jns
mov
int
xchg
adc
push
add
cmc
push
push
jae
push
push
je
mov
jge
cld
xchg
fwait
pusha
xchg
decl
test
mov
pop
pop
pop
jl
adc
push
jp
add
mov
add
sub
mov
lods
xchg
ja
imul
lret
rcll
inc
xchg
lcall
insl
hlt
out
sbb
pop
out
pop
das
or
mov
shr
out
xor
fmuls
call
mov
lret
mov
xor
jp
jmp
xchg
push
roll
outsb
shrb
mov
add
pop
push
notl
rorl
test
cmpsl
mov
push
popa
add
push
xchg
fnstsw
xor
push
imul
adc
xchg
push
jb
sub
push
xchg
enter
test
pop
ficompl
pop
inc
inc
xchg
fs
xchg
mov
cmc
push
shll
mov
sbb
cmp
mov
push
or
int
aas
xor
and
les
les
sbb
scas
adc
aaa
or
sarl
loop
sbb
xlat
jns
ficoml
xor
ja
cmc
and
add
push
outsb
add
cltd
mov
loopne
lock
int
cwtl
imull
and
clc
mov
aaa
xor
cmp
loop
shll
xor
mov
cmp
rcrb
add
enter
mov
or
fcomps
loopne
dec
dec
sbb
sahf
enter
add
mov
cmc
andb
int3
push
call
lock
cmpsb
jmp
clc
fwait
add
mov
xchg
fisttpl
inc
push
push
push
inc
add
mov
or
movsl
push
jecxz
and
cmpsl
or
or
lret
mov
mov
in
lret
pop
add
xchg
mov
lcall
mov
xor
cmp
push
cmp
pop
inc
push
sub
jbe
in
inc
testl
inc
leave
data16
lods
xchg
pop
pop
das
out
fildll
mov
mov
or
jb
inc
lret
sti
aaa
call
jae
jmp
inc
xchg
aam
jnp
jg
inc
imul
and
and
daa
mov
fcompl
mov
pop
sub
push
loop
adc
jae
scas
lods
aas
mov
addr16
clc
jmp
cmpl
in
pop
sbb
pop
xchg
das
sbb
pop
pop
inc
repnz
addr16
insl
mov
inc
sbb
add
xchg
xchg
adc
jb
orl
sub
push
lods
ficoms
fnsave
sub
and
push
fsubrs
xchg
sub
daa
mov
adc
movsl
imul
dec
int3
xchg
mov
sub
jbe
sti
sbb
xchg
in
cmp
fucomp
jne
add
lcall
fst
lods
push
adc
xor
in
pop
mov
xor
mov
ds
xlat
and
fwait
test
xorl
mov
into
pop
stc
xchg
es
aam
scas
xchg
loope
mov
bound
cli
adc
cmp
inc
jmp
push
fiaddl
ret
sbb
lea
fldl
test
mov
jbe
or
xchg
fwait
mov
idivl
loop
push
orl
mov
sbb
clc
js
lcall
ror
orl
insl
mov
xor
test
mov
dec
aaa
jns
test
mov
shl
int
lods
sbbl
mov
mov
push
dec
cli
xor
mov
xchg
out
daa
es
xchg
mov
stos
push
lds
ljmp
add
iret
movsl
xchg
js
mov
addr16
popf
lea
add
add
dec
push
add
sti
cwtl
pop
pop
sub
xchg
and
negb
inc
mov
scas
call
pop
jnp
mov
mov
data16
fnstenv
or
sbb
inc
test
pop
or
mov
leave
fadd
out
or
xchg
repz
out
mov
lret
jp
push
jno
pop
push
loop
sbb
mov
mov
shrb
push
test
push
ss
sbb
and
jbe
lods
stc
mov
pop
jb
jb
cmp
or
cmp
dec
mov
jge
outsl
fdiv
rcll
add
mov
push
iret
sbb
std
sub
aaa
fisubs
outsl
pop
sbb
pop
cmp
dec
daa
in
push
ja
xchg
out
xchg
jno
pushf
xchg
push
cmova
fistpl
jno
adc
aas
inc
rcll
jp
dec
cmp
pop
mov
pop
push
jae
cmpsl
fucomi
leave
cmp
mov
sub
cmc
dec
mov
add
jns
loop
scas
imul
sbb
arpl
mov
sahf
insb
inc
lahf
cmp
cs
sbb
mov
dec
stos
cmc
addb
orb
inc
xchg
xlat
and
out
pop
dec
data16
xchg
pop
sarl
cltd
jno
adc
repnz
lcall
xor
inc
repnz
mov
and
cmp
adc
in
ret
mov
shll
pop
shrl
repnz
mov
sub
test
lods
push
push
adc
add
mov
enter
jae
sahf
out
mov
lret
mov
cmp
xor
sbb
push
xor
push
shl
fwait
add
js
jnp
movsb
mov
popw
movsl
mov
in
jo
loop
shl
xchg
or
xor
lods
dec
mov
add
es
imul
cmc
jb
add
lods
push
sub
aam
jmp
add
loop
add
fcoms
adc
sti
sbb
out
insb
pop
loope
aaa
rorb
adc
sbb
popf
sbb
cld
xchg
push
dec
push
in
jae
shll
push
clc
mov
mov
lods
inc
cmp
dec
mov
scas
xchg
out
adc
dec
insl
imul
push
scas
orb
xchg
es
or
push
inc
add
test
lds
mul
cmp
cmp
cmpb
xchg
cmpb
popa
xor
mov
pop
inc
repz
mov
test
lods
out
in
jnp
lock
cmp
mov
aad
push
ja
repz
push
shr
orb
out
pop
sbb
lcall
mov
xchg
ret
dec
pop
pop
xor
cltd
lods
into
pop
sub
faddp
adc
mov
xlat
in
sbb
cmp
cli
add
lea
pop
adc
loopne
incl
das
movsl
test
pop
pop
dec
int3
mov
loope
cwtl
adc
sub
insl
test
test
xor
test
aam
in
pusha
rcrb
jmp
mov
out
pop
adc
mov
testl
mov
clc
das
lds
sub
fildll
test
push
adc
dec
insl
movsl
loope
add
sbb
xor
dec
fstps
clc
xchg
stos
inc
or
lock
das
call
popa
cmpsl
notb
scas
dec
mov
call
inc
xchg
add
and
push
xchg
fwait
nop
bound
sbb
outsb
ljmp
cld
inc
dec
shl
cmc
test
mov
push
out
add
cmpsl
pop
or
mov
xchg
mov
xchg
ljmp
push
adc
mov
xor
outsb
fmull
fldl
cs
loopne
orb
lahf
push
shrl
fs
or
push
jbe
push
adc
inc
out
mov
xor
dec
loopne
out
pop
pop
je
mov
mov
jle
ficoml
sbb
fistpll
mov
sub
call
jg
inc
add
fists
mov
out
pop
ret
push
in
dec
ret
pop
sbb
and
mov
push
shll
int3
cmpsl
fbld
and
rclb
pop
xchg
or
sub
call
push
mov
dec
lret
ljmp
xlat
dec
mov
test
daa
pop
das
popa
push
xchg
sub
push
xchg
outsb
pop
mov
cmpxchg8b
push
mov
arpl
or
push
je
adc
adc
jg
out
out
sbb
lods
jg
in
lret
lcall
cmc
iret
adc
sbb
cli
scas
inc
push
test
lods
mov
sub
or
sbb
mov
gs
dec
scas
sbb
roll
pop
xor
jp,pt
movl
stos
lcall
gs
test
cltd
mov
xor
insl
cmp
xchg
das
test
inc
mov
rep
inc
movb
or
decl
and
jmp
arpl
pop
imul
push
out
into
inc
fldl
inc
sbb
adc
push
int3
mov
pop
inc
into
jno
aaa
insb
push
add
mov
add
mov
ja
jge
jl
es
ljmp
mov
inc
jne
inc
popa
push
stc
idivl
sbb
roll
aaa
push
xor
arpl
mov
rol
fcmovbe
xor
aas
sbb
cwtl
cs
xchg
aad
cmp
inc
and
jp
ret
in
xchg
add
inc
mov
fists
test
pop
into
push
jmp
mov
add
push
cmpsl
fisttpl
inc
add
fisubs
add
push
flds
and
cmp
fsts
icebp
test
jne
roll
jp
jge
dec
gs
adc
or
mov
hlt
lods
std
test
das
or
sbb
iret
dec
and
pop
jmp
mov
mov
mov
or
inc
lds
int
fadds
inc
xor
popa
and
mov
xor
adc
das
rcrl
fcomps
hlt
add
inc
out
faddl
flds
pop
movsb
addb
mov
pop
orb
sbb
subb
lods
in
aas
outsl
in
std
das
jne
in
inc
ret
xor
outsl
inc
pop
jl
std
fwait
dec
or
fistpll
ljmp
mov
fistl
pop
out
pop
fcmovne
jp
arpl
or
addr16
js
fidivl
les
xor
pop
dec
jne
test
sbb
sbb
ljmp
test
push
inc
fadds
fildll
sbb
or
psubusb
subl
xchg
pop
and
or
pop
aas
sub
test
movsb
andb
pop
ficompl
jnp
es
rolb
add
mov
sarb
mov
ljmp
mov
jge
and
jmp
mov
push
lds
ss
adc
pop
orl
fisttpll
or
and
push
adc
in
inc
leave
lret
jge
cld
addr16
dec
test
call
jle
pop
inc
push
aas
in
xor
lds
test
fsubl
gs
clc
jbe
in
dec
xchg
dec
push
sub
add
cs
sahf
decb
jbe
and
mov
or
mov
or
mov
bound
jnp
dec
ljmp
inc
scas
or
mov
test
xchg
test
inc
jbe
push
pop
mov
fs
cmp
notl
jae
pop
movsl
mov
outsl
dec
and
cmp
push
lcall
test
rcl
lods
cmp
add
sbb
pop
mov
in
sar
in
mov
mov
mov
mov
jcxz
adc
jle
les
loop
sub
scas
fistpll
inc
push
jecxz
mov
jae
sbb
mov
jecxz
xor
shl
sub
jle
cs
inc
xor
pop
lcall
or
cmp
push
dec
cli
ss
add
and
pop
sti
sbb
rolb
iret
pushf
sbb
and
jnp
jl
cmpsb
mov
test
aad
fstl
mov
out
inc
cli
xchg
sahf
stos
cltd
push
xor
outsb
pop
lret
ds
jo
sbb
fildl
faddl
dec
negb
fnsave
popf
sbb
xchg
mov
and
mov
hlt
push
loopne
aad
sbb
jnp
pop
push
fdivr
xor
scas
inc
sahf
push
jb
xorb
scas
jmp
push
fnstenv
dec
stc
sub
inc
xor
frstor
or
jns
data16
or
sub
xchg
movzwl
jmp
sbb
lods
leave
dec
inc
in
and
cwtl
fndisi(8087
sbb
loop
add
mov
stos
nop
mov
sbb
pop
insb
outsl
pop
mov
ret
xor
imul
cwtl
andl
cmc
dec
add
sub
sbb
mov
adc
negl
lret
jae
jnp
xor
mov
ret
mov
mov
dec
setno
popf
cmp
inc
mov
jns
or
and
stc
stc
or
repz
mov
and
das
sub
and
arpl
insl
cmp
std
jbe
int
add
iret
sbb
mov
imul
lods
ret
faddp
add
lahf
jge
xchg
xor
test
or
cmp
ds
jecxz
jmpw
and
lret
push
jg
xor
and
dec
adc
add
mov
jle
outsl
pop
mov
push
imul
mov
cmp
ss
xchg
jb
mov
mov
jle
pop
jg
das
stos
scas
repnz
push
mov
mov
xlat
nop
loop
push
push
cld
rcll
dec
xchg
lock
dec
nop
or
add
leave
movsb
test
pop
test
dec
fcomip
dec
bound
shrl
xchg
xchg
adc
xchg
or
mov
pusha
enter
sub
mov
push
movsl
xchg
roll
push
jle
in
inc
push
jge
popa
mov
mov
pushf
popf
jae
jg
aas
pop
bound
rcll
pop
pop
push
pop
push
push
xchg
cli
mov
shlb
inc
pop
aaa
and
aas
mov
cmpsl
jne
daa
push
shrb
or
xor
mov
popf
mov
rcll
jg
rclb
or
fwait
hlt
xchg
adc
and
loope
pcmpeqb
shlb
ss
xchg
add
or
jmp
les
fmul
mov
xlat
dec
into
dec
and
imul
push
jmp
adc
popf
inc
dec
mov
xlat
and
cmp
aam
inc
outsl
cli
ficompl
mov
xchg
or
cli
sbb
aam
or
pop
out
test
ljmp
outsl
addr16
xor
sub
outsl
fs
or
cmpsb
je
test
lret
mov
jne
push
pop
push
shl
xchg
out
cmp
adc
dec
fmul
nop
arpl
sbb
inc
ss
inc
enter
mov
sbb
xchg
or
adc
push
or
jb
addr16
pop
sbb
ljmp
lret
sbb
inc
aaa
xchg
subl
fiadds
sti
mov
insl
and
cmpb
dec
mov
push
pusha
scas
ljmp
sbb
xchg
and
xor
xchg
rcrl
jg
sbb
mov
addb
cmp
sar
gs
and
lea
push
sbb
cwtl
inc
lcall
cmp
daa
push
fwait
inc
dec
mov
sti
cltd
dec
loop
incl
or
adc
sbb
mov
sub
or
outsb
inc
jge
scas
pop
mov
subl
dec
out
xlat
jl
stc
ljmp
xor
xor
push
ss
filds
arpl
aas
bound
in
cli
dec
js
xchg
push
xor
jnp
mov
in
daa
cwtl
xchg
and
out
aam
fwait
in
iret
imul
insb
das
aas
mov
pop
lds
push
mov
mov
jae
in
push
stc
mov
out
pop
cli
mov
sbb
lods
mov
mov
pushf
cltd
insl
inc
popa
or
ds
sbb
gs
cmp
sbb
add
or
sbb
sub
mov
inc
nop
sbb
mov
in
inc
mov
clc
inc
aas
xchg
cwtl
fld
dec
xor
lods
pop
add
jae
jo
or
mov
test
clc
iret
push
sbbb
xchg
out
inc
lea
aas
sbb
sbb
jbe
adc
mov
sahf
addr16
gs
inc
shll
es
cmp
xchg
add
jge
or
sub
jecxz
cmc
push
cmp
out
fstl
adc
or
xchg
jns
add
push
lods
cmp
cmp
fwait
and
pop
ja
dec
jp
adc
movsb
jno
es
cmpsb
movsl
inc
rcrb
sbb
das
lds
mov
pop
loope
fs
jle
out
cmpl
jecxz
mov
xor
xchg
dec
lea
cmp
rol
xchg
dec
cmpsb
fsts
mov
mov
cmp
sub
and
adc
das
negb
rorb
sti
mov
xchg
and
pop
pop
push
daa
lahf
xor
push
pushf
jbe
inc
enter
add
mov
jmp
cmp
daa
mov
add
imul
int
in
cmp
or
inc
out
pop
aam
push
fidivrl
into
sahf
xchg
push
mov
mov
mov
in
movl
xor
lret
bound
xor
xor
sub
cmp
cmp
xlat
in
mov
pop
xchg
gs
xchg
cmp
xor
add
sti
test
mov
in
or
push
xchg
pop
or
je
sub
aam
cld
orl
orl
gs
enter
dec
adc
scas
clc
mov
inc
flds
ljmp
dec
inc
push
lods
cs
mov
pusha
or
out
mov
hlt
data16
and
insb
add
xchg
mov
jmp
mov
arpl
and
ja
ret
mov
pop
lahf
pop
fucomp
mov
cmp
mov
pop
test
dec
clc
into
cwtl
jg
adc
adc
stc
or
mov
mov
push
mov
out
arpl
cmc
push
or
pop
stos
repz
or
popf
stc
daa
xchg
jb
ja
mov
xor
pop
movsl
shlb
loop
ret
aad
popa
mov
mull
test
aad
mov
mov
jo
mov
shll
das
jb
adc
and
loopne
cmp
xor
cmp
pop
xchg
call
mov
add
lcall
push
cmpsl
aam
lcall
test
adc
call
jmp
dec
sbb
enter
adc
cs
sbb
dec
loop
sbb
add
data16
xor
lret
lods
sub
out
cmpb
rol
sub
loop
cmp
adc
cltd
loop
and
push
and
or
jo
inc
dec
fstps
in
xor
sub
ljmp
sahf
out
inc
fsubrl
cmp
bndstx
mov
add
icebp
mov
xor
cs
or
cmp
sbb
inc
gs
int3
pop
and
lea
stos
mov
push
hlt
pop
jnp
lret
mov
scas
test
inc
pusha
add
dec
mov
mov
mov
arpl
inc
and
sbb
inc
notl
inc
inc
jmp
mov
fidivl
cwtl
mov
jge
jo
dec
dec
call
pop
pop
mov
adc
dec
int
inc
test
outsb
popf
pop
aaa
jae
test
xchg
leave
outsb
push
fcmovne
jg
and
inc
pop
loope
es
inc
push
fistps
mov
add
sub
cmp
rol
jae
ret
and
mov
stc
test
cs
sbb
push
rcll
adc
fstp
pop
sub
mov
test
sub
mov
push
mov
push
xchg
pop
cmpl
jg
push
dec
and
lods
mov
xchg
add
ret
rol
shlb
cmp
rcl
pop
jo
fisubs
dec
dec
jg
adc
sahf
adc
sti
aam
xchg
and
push
out
sti
pop
outsb
mov
test
sbb
outsl
arpl
xchg
fsubrl
or
sub
fisubrl
out
inc
push
movsb
mov
out
test
push
dec
lret
push
and
addb
in
adcb
or
jp
cmp
call
xchg
sbb
lock
pop
jne
lahf
movsl
vmovapd
cli
stc
jae
push
divl
jns
fnstenv
sbb
insb
pop
xor
jno
sahf
ficomps
mov
push
icebp
addr16
scas
addb
js
mov
or
mov
imul
sbb
xor
xor
push
adc
daa
jecxz
mov
mov
jmp
lret
push
out
sub
rcrl
pextrw
mov
cmp
mov
inc
jmp
cld
cmp
and
popf
cmp
mov
cmpsb
cmp
inc
mov
in
fistpll
iret
mov
or
and
jmp
bound
les
stos
out
sar
sub
ret
mov
inc
cmpl
jge
jge
jge
sub
pop
je
mov
inc
nop
mov
sbb
data16
cmc
insl
inc
add
push
cmp
addr16
test
imul
int
dec
mov
scas
iret
inc
insl
orl
ds
jmp
push
lahf
imul
xor
pop
mov
add
fcoms
iret
jae
into
adc
pop
lds
jbe
mov
jmp
push
sub
adc
jnp
pop
inc
mov
int
scas
and
test
pushf
mov
lahf
xchg
test
stos
lret
sub
inc
dec
fdivrl
or
fdivl
sti
ljmp
pop
jb
inc
push
movsl
cli
jl
call
jb
out
cmp
and
cltd
push
stos
xor
pop
aam
in
push
inc
pop
push
pop
je
push
mov
adc
mov
bound
pop
mov
xchg
mov
in
xor
cmp
cmp
roll
cmp
dec
push
lahf
add
repnz
sub
out
xor
fisttps
int
gs
inc
pop
jge
sub
stos
or
adc
ficoms
cmovns
test
inc
int
jae
dec
jg
pop
mov
test
jmp
popf
cld
mov
rorl
dec
out
dec
xchg
fnstsw
jne
mov
pop
adc
cmp
filds
rcrb
aaa
jnp
or
int3
dec
xchg
movsl
or
mov
xchg
push
push
inc
test
jno
out
jns
aas
sub
movsb
sarb
sub
jg
adc
xor
jp
clc
inc
adc
pop
push
ja
push
pop
dec
sti
lock
inc
lods
dec
sbb
jmp
mov
sub
xor
gs
pop
pop
ja
mov
mov
ljmp
sbb
dec
pop
jbe
mov
decb
ja
adc
mov
test
mov
push
fs
push
push
movsl
out
fadds
and
aad
pop
pop
pop
scas
aad
lret
in
fbstp
dec
jecxz
out
movsl
icebp
cmp
movsb
push
xchg
lahf
jg
push
imul
cmp
fisttpll
fs
push
cli
push
cmp
inc
pop
add
mov
push
xlat
lock
xchg
pop
mov
rcrb
cmp
cmp
push
push
mov
add
push
push
xchg
pusha
sbb
jo
repnz
lret
lret
add
lds
add
sti
pop
cmp
in
jae
notl
lds
dec
push
xchg
shrl
pop
pop
call
test
outsb
adc
js
insb
cmc
mov
or
std
pop
cltd
adc
jne
cmpsb
out
xchg
adc
out
fneni(8087
adc
add
mov
mov
pop
in
xor
dec
les
subb
add
mov
leave
pop
aad
rcrb
dec
xor
movsl
mov
ret
into
lods
ficoml
aas
lahf
inc
fisttpl
in
xorb
mov
dec
dec
or
or
call
pop
adc
cmpsl
mov
push
fld
loope
sub
je
xor
mov
inc
sbb
je
push
popf
add
dec
cli
movl
cmp
arpl
cld
adc
fs
cld
cld
add
jmp
sbb
movsl
ret
mov
dec
fistpll
sbb
out
and
jge
jae
cmp
stc
pop
sbb
aam
mov
faddl
nop
gs
mov
mov
std
pop
cwtl
repnz
jl
add
xlat
add
xchg
inc
push
stos
insl
mov
mov
mov
ret
xchg
orl
jl
inc
leave
ss
push
or
push
mov
pushf
push
dec
popa
insl
mov
stos
push
ss
in
lea
and
daa
sub
push
mov
xchg
inc
and
xor
push
lahf
push
push
inc
shlb
cmp
inc
repz
pop
xor
aad
or
test
cld
add
fs
aad
adc
and
outsb
enter
adc
pop
xor
pusha
into
hlt
xchg
xchg
loope
ret
inc
daa
lock
xchg
mov
pusha
ljmp
push
jle
adc
jne
jg
lcall
cmp
mov
jmp
outsl
sti
or
jno
data16
mov
inc
xchg
or
repz
jns
es
lea
pop
mov
addr16
cli
jnp
arpl
clc
or
aaa
in
jmp
aaa
cli
and
es
pop
rclb
inc
xor
sbb
sbb
insl
mov
dec
xchg
push
into
fwait
test
in
or
inc
mov
ret
test
dec
hlt
int
xchg
adc
ja
imul
and
sbb
push
and
or
scas
aaa
loopne
mov
data16
cmp
call
addr16
mov
xor
lahf
sub
add
enter
call
outsb
xlat
scas
pop
cmp
pop
inc
mov
pop
arpl
pop
scas
incb
mov
pop
outsl
and
call
add
cmp
rcll
fisttpll
gs
jns
pushf
sub
lret
sahf
rorb
xchg
inc
stos
xchg
shlb
lea
divl
std
dec
mov
cmp
and
sub
mov
scas
ret
cs
xrelease
incl
mov
loop
pop
out
testl
adcl
lds
cmpsb
jns
enter
jb
push
jl
push
mov
mov
fbstp
or
mov
mov
pop
pusha
pop
mov
mov
jg
push
arpl
leave
shlb
movsb
nop
xor
imul
sbb
idivb
daa
xchg
push
loopne
cmp
or
push
sbb
pop
orl
push
mov
mov
add
out
insl
cmc
jmp
push
jp
cwtl
jo
inc
dec
xor
ss
in
and
and
xor
insl
scas
sbb
ds
test
jnp
outsb
es
and
sub
rcrl
adc
xchg
jmp
stos
leave
pusha
jns
jb
fcomip
imul
or
push
push
push
xchg
cmp
fdivp
push
movsb
sbb
or
mov
push
mov
idivb
sub
mov
inc
dec
mov
jecxz
std
daa
pop
push
lret
fistl
dec
outsb
xor
inc
pop
enter
pop
push
push
stos
loopne
sub
ret
xor
out
mov
jp
jne
loop
mov
imul
add
sbbb
insl
sbbl
fistpll
mov
sahf
insb
btrl
and
push
in
daa
push
pop
fwait
dec
xchg
sbb
out
mov
mov
bnd
pusha
pop
je
push
loopne
cs
popa
daa
repnz
ss
inc
aam
scas
mov
mov
adc
int
and
aaa
fwait
outsb
sarb
ljmp
dec
cwtl
mov
jle
sarl
mov
out
fstps
pushf
pop
sahf
lds
arpl
imul
and
sub
cwtl
or
ljmp
dec
inc
lahf
sbb
outsl
xlat
sub
xchg
mov
repz
shl
cmpsl
xor
or
jo
outsb
cmpsb
shlb
sbb
lret
xor
mov
divb
mov
repz
js
and
xchg
xchg
stos
icebp
out
mov
add
push
mov
add
aas
mov
fldt
inc
leave
js
fistl
sub
mov
popw
or
push
add
sbb
fbstp
jbe
cld
xor
or
and
shll
addb
pop
in
dec
pop
in
pop
adc
push
push
fdivrs
fstpt
mov
inc
nop
ljmp
mov
xor
jbe
fldenv
rorb
xor
pusha
aaa
pop
mov
jns
mov
mov
push
call
xchg
mov
lock
jl
mov
add
sar
repnz
or
push
pop
xchg
jle
fwait
lock
loopne
shll
in
stos
xor
jl
pushf
jo
sub
mov
mov
push
mov
xchg
rcrl
adc
stos
xchg
xchg
lods
sarl
mov
out
mov
or
dec
or
dec
repnz
dec
enter
xchg
xor
push
jmp
es
push
and
int3
lods
push
mov
add
push
mov
sbb
test
inc
push
dec
mov
ss
xor
mov
and
pop
test
add
nop
popa
xor
xchg
push
xchg
cs
push
push
dec
dec
mov
push
and
mov
xchg
repz
in
cmpsb
xchg
sbb
in
rcrb
mov
inc
idiv
inc
or
push
mov
pop
or
orb
stos
mov
fiaddl
mov
xchg
push
jge
mov
jb
ss
test
call
pop
scas
loop
pop
jnp
and
lret
sbb
lock
or
ds
cmc
stos
cmp
push
in
rcrl
call
or
mov
andl
sbb
scas
lcall
xchg
inc
pop
cmc
sub
cwtl
aas
sbb
fstpt
pop
cltd
bound
call
inc
out
cltd
lea
cmpsl
cmpsl
mov
push
in
xchg
xchg
mov
in
xchg
pop
cli
dec
push
mov
or
sahf
or
int
mov
ja
loopne
lcall
fwait
dec
xor
iret
pop
xchg
movsb
pop
out
in
ja
sub
adcl
popl
jge
shrl
lcall
cmpsl
sbb
in
pushf
incb
leave
push
fstpt
shll
scas
sub
int3
pop
and
enter
js
test
dec
pop
je
enter
mov
mov
inc
daa
lret
loop
cltd
js
ret
dec
rcll
pushf
dec
or
sahf
dec
mov
lea
and
mov
push
loop
add
push
mov
xchg
mov
movl
aad
out
js
loop
or
scas
add
popf
pop
inc
pusha
loop
add
pop
inc
dec
std
jne
push
ret
fdivrl
test
mov
repz
push
xor
shlb
fidivs
cld
mov
and
hlt
sbb
dec
mov
into
pusha
fucom
arpl
xor
dec
pop
and
es
lods
xor
mov
and
repz
adc
or
xor
lock
xchg
lock
push
popf
loope
sbb
arpl
jg
cmp
sbb
sbb
mov
mov
cmpsl
inc
adc
pop
and
jb
sbb
outsb
pop
nop
dec
test
xchg
int3
push
jge
stos
pushf
addr16
sbb
test
popf
push
inc
mov
xor
enter
ljmp
ds
mov
movsl
fildll
sub
test
fldcw
fcmovu
shl
push
pop
jg
sbb
pop
mov
mov
mov
mov
inc
xor
dec
xchg
xlat
js
xchg
repz
push
inc
sbbl
les
jmp
jl
lods
fldt
add
and
sbbl
pop
mov
xchg
cmp
xor
das
mov
ja
inc
pop
fwait
jge
xchg
into
xor
jle
fbld
insb
test
sbb
pop
ret
lahf
add
cmpsb
sub
aam
cmp
repnz
mov
nop
ss
push
push
sbb
add
adcl
in
xchg
out
arpl
pop
lods
jno
addr16
pop
divl
pop
pop
pushf
dec
xor
jecxz
adc
insl
mov
or
push
or
mov
rorl
jo
xor
adc
sbb
out
bound
arpl
sub
pusha
jle
mov
and
pop
idivb
sti
scas
inc
mov
pushf
inc
in
add
sbb
pusha
sbb
loop
incl
mov
loope
mov
and
push
repz
xchg
stc
int
mov
mov
addr16
pop
xchg
pop
adc
sbb
add
es
pop
fsubs
cmpsb
push
lret
shll
adc
jecxz
jo
repnz
cmp
mov
jns
mov
push
pop
repnz
test
jne
mov
inc
dec
mov
gs
dec
lret
mov
add
xchg
cltd
ds
outsb
pop
mov
add
clc
sbb
aam
inc
cmc
out
aas
cltd
sarl
sar
pushf
leave
sbb
ljmp
xchg
inc
inc
movb
faddl
pop
shrb
inc
cli
jne
jg
mov
mov
fstps
imull
das
int3
mov
arpl
or
mov
test
ss
movsb
jae
xchg
cmp
das
dec
fbld
sbb
pop
sub
dec
into
or
dec
mov
add
fbld
xchg
imul
add
loop
and
adc
in
in
jmp
jecxz
push
jge
dec
loop
test
inc
push
rcll
xchg
fbstp
jns
jecxz
xchg
xlat
fstpl
cmpsl
push
jbe
in
data16
mov
cld
bound
repnz
roll
mov
sub
int
ret
fildl
iret
aam
sbb
test
push
pop
mov
pop
adc
ljmp
xchg
and
push
leavew
cmc
inc
scas
jmp
daa
notl
cmp
push
aad
sub
int3
inc
mov
rcr
iret
je
or
mov
adc
fwait
jecxz
in
pop
pop
das
xchg
mov
rorb
sarl
xor
dec
jge
mov
jle
mov
pop
jecxz
sbb
xor
xor
cmpsl
out
loopne
xchg
cmp
out
inc
add
loope
in
mov
mov
popf
pusha
aaa
imul
pop
mov
test
in
pushf
std
cltd
or
mov
xchg
add
mov
add
test
jl
xor
push
jecxz
mov
aaa
and
adc
lret
jecxz
jbe
mov
jb
cmp
rcrl
js
shrl
jle
and
lods
mov
dec
jnp
repz
cmpsl
and
cmp
insb
xor
sub
repnz
inc
dec
sub
jge
stos
int
repnz
mov
xor
rclb
push
add
xor
add
cmpsb
fucom
inc
adc
inc
sub
addr16
mov
shll
lret
xchg
clc
fsubs
add
xchg
xor
jl
addb
arpl
pop
sbb
mov
movsb
cld
mov
fmull
int
popa
daa
ljmp
stos
jmp
jmp
aas
xorb
dec
lret
sub
mov
inc
jns
ss
fwait
popa
out
jl
rcrb
xor
cmp
rcpps
ret
or
xchg
xchg
outsb
repnz
in
aaa
inc
aas
or
push
adcl
jl
adc
or
jo
inc
leave
mov
mov
aaa
shrb
and
jp
push
ja
push
popa
jle
icebp
iret
add
cli
stos
aaa
add
sbb
rcl
sbb
adc
xlat
jb
jb
push
int3
xchg
lea
jmp
cmp
mov
mov
mov
mov
xor
xlat
lods
sub
loope
xchg
mov
jb
dec
add
or
push
adc
xor
clc
ret
cs
jge
pop
ficoms
mov
into
pop
loope
push
push
adc
mov
mov
cwtl
sbb
dec
mov
mov
ret
jl
pop
inc
cmovp
mov
testb
xchg
mov
xchg
rolb
movsl
dec
dec
gs
inc
cmpsb
pushf
pop
mov
fisubrs
ljmp
rol
mov
mov
std
test
jb
outsl
jp
pushf
loope
jno
push
imul
xchg
adc
out
and
sub
cmpsl
lcall
add
sbb
insl
dec
sbb
out
inc
dec
sub
fisttpl
sbb
loopne
cs
je
xchg
lods
xor
aaa
icebp
sahf
lea
fdivl
cmc
or
jne
insl
inc
int
arpl
in
lods
hlt
stos
stc
xchg
cmp
in
divb
fisubs
mov
cwtl
stos
mov
mov
movsl
jne
je
fnstsw
pop
hlt
aaa
pop
insl
daa
mov
adc
dec
cvtpi2ps
xchg
repnz
movsb
mov
in
repnz
bswap
xchg
sub
lods
jecxz
scas
js,pt
mov
or
cmpsl
out
rcll
and
push
sub
mov
cmp
dec
xchg
in
cmp
out
in
in
cld
insl
or
repnz
cld
faddl
popf
dec
pop
or
mov
insb
mov
ret
insl
scas
cmpsb
cmp
test
popf
std
add
xchg
repz
ds
or
inc
scas
xchg
fidivs
push
test
jo
xchg
int
call
and
cmp
mov
mov
cmpsb
xor
push
or
filds
mov
mov
and
dec
mov
jg
test
aas
mov
dec
stos
out
ficoms
xlat
jno
fistpl
mov
cmc
add
int3
adc
adc
cmpsl
ret
dec
aas
mov
ja
ja
mov
xchg
dec
into
add
in
pop
fdivrl
scas
adc
imul
push
or
clc
sbb
stos
cmp
mov
pop
sub
add
push
push
test
xor
pop
adc
fiaddl
lods
mov
xchg
mov
jg
pushf
push
xchg
and
xor
ror
enter
dec
shll
ja
les
pop
data16
and
xor
jne
out
sub
lds
addr16
lret
xor
xor
dec
jl
mov
lods
ret
jl
pop
and
enter
xor
mov
mov
dec
imull
aaa
cmp
mov
push
cwtl
pop
call
mov
pop
movsl
or
jno
inc
xchg
xor
jl
jle
sbb
mov
lea
adc
orb
sbb
scas
mov
out
mov
sub
push
mov
jecxz
lret
mov
add
popa
data16
cmc
inc
xchg
insb
movsl
mov
push
mov
daa
sahf
into
push
test
mov
xchg
or
out
push
outsb
das
gs
popf
fdivl
xchg
dec
icebp
jecxz
call
add
add
rorb
cmp
sbb
mov
dec
push
xlat
cmp
adc
cwtl
fsubrl
sti
sub
push
jae
dec
lea
add
push
arpl
add
push
inc
pextrw
inc
adc
fsubrs
popa
xlat
push
shr
mov
cli
pusha
jo
adc
aas
std
cwtl
test
stos
in
or
adcl
mov
cmp
mov
push
arpl
lret
adc
repz
pop
and
and
jne
xchg
and
ror
inc
call
lods
push
nop
jmp
inc
or
sbb
inc
jb
mov
add
dec
mov
std
repnz
test
outsl
int
dec
sub
fmull
and
aam
pop
push
in
xor
jge
jmp
sub
mov
push
add
outsl
mov
jno
jmp
jo
subb
hlt
dec
std
ljmp
sub
mov
push
repz
cmp
mov
xchg
xor
push
stc
shrl
cltd
hlt
cwtl
xchg
cmp
incb
inc
cmp
cmp
inc
dec
iret
xchg
sbb
andl
lds
movsl
jae
add
clc
mov
fistpll
jae
flds
mov
mov
push
pop
orb
jbe
cmc
mov
data16
mov
and
mov
or
test
dec
and
shrl
xor
fistpl
lahf
js
xlat
movsl
mov
enter
divl
aas
fstp
mov
jl
dec
cmpsl
cltd
and
addr16
scas
inc
xchg
mov
push
sub
rorb
cmp
sarl
inc
sub
cmp
cmp
lret
xor
cld
arpl
jo
lods
call
lock
cmp
xchg
test
lods
pushl
stc
lods
out
inc
repz
dec
pusha
ja
mov
ret
pop
js
sbb
jo
inc
pop
pop
loope
adc
in
sarb
mov
mov
scas
inc
jno
mov
jecxz
jns
out
cmp
movntq
out
cmpsl
mov
test
clc
xor
jne
repnz
fsubl
or
sbb
popf
fisubrl
in
inc
or
mov
jno
data16
sub
insb
arpl
nop
and
int
loope
sub
or
repz
outsb
fistps
jg
lods
mov
test
inc
pop
and
cmpsl
pop
and
mov
lret
imul
shlb
fildl
ficoml
inc
out
test
cmp
mov
aad
xor
stc
fidivl
mov
push
mov
adc
jne
ja
and
jp
cmp
in
lods
dec
in
pushf
and
mov
pop
mov
sbb
sub
fisubrl
xchg
shlb
enter
jle
fmuls
mov
add
dec
push
xchg
repz
lret
daa
js
mov
xor
push
or
mov
inc
mov
or
nop
inc
or
sbb
jg
fistps
sbb
lcall
jb
test
into
leave
add
pop
sbb
enter
dec
sub
iret
pop
ret
xlat
adc
xchg
dec
cwtl
mov
in
adc
jg
sti
fstpt
ret
dec
inc
cs
sub
and
or
xchg
std
leave
shr
mov
and
pushl
ret
fisubrl
jae,pt
pop
cmp
ds
mov
pop
fisubl
addr16
ljmp
adc
push
mov
mov
adc
popa
or
mov
ss
xor
shl
clc
cmpsb
sar
jp
mov
fldl
loope
shrd
xor
mov
push
sti
mov
lods
push
out
pusha
jne
shlb
add
sarb
pop
loop
rcrb
mov
and
xchg
inc
add
clc
push
mov
mov
mov
dec
dec
call
push
push
sub
inc
xor
addr16
jns
stos
rorl
stc
mov
mov
push
shrb
push
sub
sub
push
divb
adc
pop
push
ds
cmpsl
add
mov
aaa
in
pop
xor
cmpsb
mov
test
sub
push
mov
xchg
scas
pop
jns
out
jp
out
pop
xor
test
pop
pop
enter
icebp
inc
and
cli
dec
cwtl
sahf
test
mov
inc
cmp
fldenv
iret
mov
sub
cld
test
je
fcmovu
pusha
add
jge
mov
fbstp
jnp
sbb
into
xor
sub
in
cli
sub
mov
fwait
mov
mov
xlat
sbb
pop
lods
xchg
push
shrl
mov
scas
dec
stos
mov
pushf
ret
add
int
jl
clc
cmpsb
xchg
test
nop
cs
push
inc
rorb
fwait
dec
adc
ljmp
pop
inc
aad
and
xchg
jae
into
push
sbb
ja
pop
rorb
and
cltd
call
pop
cwtl
mov
pop
and
mov
lock
inc
jnp
jb
dec
push
pop
lret
loopne
call
xorw
adc
adc
mov
dec
arpl
mov
inc
jae
and
sbb
pop
jbe
adcb
enter
iret
out
push
mov
adc
cmp
roll
in
sbb
jbe
popa
lea
pop
dec
xor
es
icebp
test
dec
jp
xor
roll
sti
sahf
call
pop
pop
in
or
lds
aad
test
push
push
imul
mov
popa
bsf
scas
popf
mov
dec
mov
mov
aaa
loop
loop
ljmp
sub
cs
inc
fdivr
jge
and
in
dec
jmp
add
add
fstl
rcll
mov
cli
mov
test
cmp
lds
dec
lds
lret
dec
xchg
loope
icebp
js
cmp
inc
pushf
xor
fs
mov
sbb
xchg
jecxz
and
xor
mov
or
jae
shr
push
and
leave
cli
and
stc
inc
test
popf
loopne
cmpsb
lods
mov
std
aad
bound
pop
jb
mov
outsl
add
out
sahf
in
mov
pop
loop
mov
daa
fwait
or
ja
xchg
jmp
mov
mov
inc
pop
in
and
in
cwtl
arpl
jno
xchg
mov
fistl
sub
test
gs
sub
dec
jmp
out
xor
cmpsl
mov
dec
inc
out
arpl
xorl
aas
lahf
mov
mov
stc
xor
fcoms
dec
int
loop
hlt
mov
loop
push
movsl
les
je
mov
sahf
loope
lea
stos
pop
sbb
and
out
lods
mov
outsb
aaa
inc
push
xchg
xchg
cwtl
ds
nop
sbb
xchg
imul
mov
roll
and
enter
mov
jnp
nop
addr16
xor
jb
jle
dec
add
pop
cmpsb
mov
mov
cwtl
mov
das
jae
pop
mov
sub
mov
outsl
dec
mov
and
dec
scas
scas
cmp
cmp
data16
mov
dec
or
fcmovb
pop
push
mov
dec
sarl
jo
push
icebp
xchg
repz
xor
shr
and
nop
and
pop
psrlw
lock
stc
dec
arpl
cmp
ja
cmp
mov
ss
jne
jp
jns
inc
xchg
xor
add
pop
dec
mov
fwait
in
lea
rcll
lods
repnz
testl
sbb
jg
mov
jmp
add
gs
into
cli
outsb
mov
subl
adcl
sbb
sub
mov
jecxz
dec
mov
pusha
xchg
sub
aam
and
sub
mov
cmp
jecxz
xor
mov
jecxz
aad
mov
cmpsl
xlat
sub
jmp
js
sbb
sub
adc
inc
mov
movsl
lea
add
cli
mov
sti
fimull
cmp
fildl
cmp
lods
jnp
mov
mov
pop
popf
popa
jns
xchg
mov
push
rorl
xchg
push
lahf
inc
add
mov
loopne
xor
ret
inc
xchg
xor
rcr
push
push
imul
ja
add
gs
nop
cld
repnz
jmp
daa
inc
mov
sub
aam
in
jg
push
push
sbb
xchg
repz
pop
or
cli
test
lock
adc
fwait
cmp
aad
fimuls
sub
cmpsb
in
cmpsb
mov
jecxz
inc
lds
icebp
xorb
popf
sub
xor
add
add
sbb
jne
lock
dec
mov
xchg
notl
repz
test
arpl
push
movsb
jg
push
sub
in
imul
mov
mov
or
gs
sub
cmp
lahf
dec
mov
mov
pop
mov
or
aad
scas
fbld
pop
xor
lahf
xchg
cltd
mov
mov
lea
mov
add
xor
out
rolb
push
repz
cmp
std
push
push
pop
dec
into
ret
mov
push
push
repz
cwtl
mov
incl
dec
inc
adc
shlb
arpl
sbb
push
test
fidivrl
push
cs
icebp
fbld
mov
dec
cmp
repnz
je
pop
xor
mov
nop
jne
mov
or
test
rclb
lods
cltd
out
xorl
add
insl
mov
or
sbb
mov
imul
mov
xor
test
outsl
adc
cmpb
pop
mov
nop
sbb
cmp
dec
jl
mov
sarl
jecxz
cltd
stos
dec
ljmp
jne
aas
push
fwait
cmp
inc
clc
dec
or
push
fiaddl
or
add
ret
add
xchg
loop
mov
lret
incb
lcall
cmp
xlat
adc
or
jge
adc
xchg
mov
sbb
jg
xchg
pop
ret
stc
movsb
inc
jmp
insb
cwtl
pop
test
mov
sub
pop
xchg
ss
pop
mov
mov
mov
scas
inc
dec
cmp
movsb
mov
adcb
insl
loopne
mov
add
shlb
mov
and
incb
push
ja
or
scas
addr16
cld
mov
adc
ffree
insl
cmpsb
lret
js
fcmovne
dec
ljmp
or
xchg
fistpll
pop
movsl
cltd
ss
in
das
mov
or
add
mov
lods
jmp
push
clc
loope
hlt
pop
pop
inc
adc
out
jbe
adc
data16
call
jne
and
adc
sbb
stos
or
xchg
mov
sar
hlt
mov
icebp
movsb
pop
inc
movsb
sbb
and
popf
je
dec
lcall
cmp
pop
notb
push
sbb
push
imul
insb
adc
cs
and
xchg
lret
mov
inc
inc
mov
jae
cmpb
imul
gs
inc
dec
cmpsl
jae
push
and
inc
nop
adc
pusha
xlat
mov
scas
outsl
mov
cld
mov
ss
mov
rcrl
xchg
je
cmp
shr
lods
dec
outsb
pusha
mov
stc
dec
push
mov
test
mov
test
ds
ret
cmpsl
mov
or
aam
lahf
adc
xchg
add
movsl
jg
aad
push
outsl
insb
fwait
cmp
and
dec
add
push
out
loope
push
dec
lods
mov
cmp
and
lahf
or
pop
rclb
scas
les
fwait
loop
sarb
cwtl
and
mov
dec
popf
jmp
cmpl
mov
pop
lds
mov
sbbl
sub
roll
pop
add
sbb
jmp
test
cld
sbb
fnstcw
xchg
mov
pop
lds
cmp
xor
sub
aas
fcmove
popa
cmc
rorl
xchg
sahf
int3
push
les
xchg
out
dec
nop
jmp
cmp
flds
fadds
mov
movsb
lea
mov
iret
pop
push
in
jo
cmp
arpl
mov
lcall
xchg
mov
mov
xor
bound
ds
sub
inc
xor
mov
cmpsb
hlt
pop
imul
mov
popa
fwait
or
or
or
jmp
jae
ja
or
sub
aam
pop
xchg
inc
xor
les
mov
cli
push
clc
sbb
pop
shrl
imul
imul
arpl
mov
inc
pop
xchg
enter
lret
mov
xchg
xchg
sti
pop
sub
jae
mov
rcrb
jmp
icebp
dec
inc
jbe
push
xchg
dec
andl
pop
jecxz
mov
jecxz
lock
aam
stc
roll
iret
sub
les
mov
sub
mov
loope
push
insb
dec
addr16
popa
push
push
or
bound
rcr
test
sahf
adc
call
push
adc
aam
jp
and
sbb
pop
xchg
cli
xchg
imul
cmp
fcom
pop
and
push
push
adc
dec
ljmp
loopne
push
je
clc
sub
cmc
mov
mov
dec
and
cld
and
dec
mov
fstpt
pop
dec
fnstenv
cli
int3
andb
aam
lods
mov
push
test
xchg
out
jl
dec
adc
shl
adc
cmp
or
dec
sti
lods
daa
mov
int
rcrl
jae
pop
pop
addr16
cmp
sti
sub
sbb
daa
enter
leave
subl
insb
inc
dec
es
jmp
cmp
pop
cmp
inc
test
and
sbb
call
neg
or
fsubp
outsb
inc
mov
inc
push
jle
mov
pop
mov
jbe
sbb
sub
sbb
loop
sub
jmp
mov
sub
jle
dec
jge
mov
sti
stos
adc
sbb
test
pop
pusha
in
stos
xchg
push
mov
or
mov
inc
push
mov
jne
cmp
out
rcrb
inc
adc
add
inc
call
add
scas
pmaxub
das
lret
movsl
xchg
dec
or
dec
sahf
daa
mov
sahf
jl
test
pushf
mov
mov
clc
out
adc
or
push
iret
insl
xorl
addr16
sub
push
nop
jge
repz
into
fs
push
xchg
cwtl
xor
add
xor
lahf
rcll
mov
das
pop
adc
iret
push
adc
mov
xor
jl
movsb
push
inc
lds
stos
std
mov
in
and
sbb
sub
or
mov
mov
mov
mov
scas
dec
call
mov
pop
data16
pop
jne
pop
insl
ds
mov
outsb
xor
jnp
xlat
or
add
enter
cli
test
jecxz
mov
pop
out
mov
jecxz
jns
sub
sub
fldenv
mov
inc
dec
scas
jno
and
fldenv
inc
test
dec
iret
rcrl
jb
cwtl
mov
in
jg
or
lret
pop
and
pop
mov
fs
loop
movb
iret
cmp
and
and
ljmp
movsl
and
mov
stos
mov
test
rorb
or
jl
dec
cmp
cwtl
jbe
lods
add
pushf
push
subl
ljmp
sub
sub
js
cmp
xchg
shrb
push
rclb
pop
pop
mov
mov
mov
frstor
mov
sbb
mov
mov
add
inc
test
xchg
mov
dec
popa
shll
xor
lea
out
inc
ds
xor
addr16
and
fwait
lea
jne
mov
fs
cs
mulb
enter
push
inc
jnp
xor
or
sar
dec
in
scas
xchg
mov
mov
cmp
sub
xchg
sbb
movb
xor
insl
jle
fbld
sbb
mov
lods
insb
xchg
mov
or
aad
sub
ss
jmp
je
sub
movsl
xor
mov
mov
mov
add
and
orb
cmpsl
xor
sub
imul
sahf
fidivrl
xor
cwtl
loopne
shrl
mov
sbb
push
and
repnz
pop
cmp
mov
push
leave
cmc
sub
jno
sti
pop
ds
jg
push
pop
or
loopne
or
ret
fnsave
loope
pop
jae
mov
inc
cs
lea
icebp
dec
daa
icebp
cld
clc
push
cmpsl
imul
pop
fnstcw
jne
cld
or
push
sbb
mov
push
fcomps
sti
cmp
rcll
add
stc
jmp
dec
jae
std
push
and
mov
xchg
rclb
cmpsb
add
out
xor
rorl
push
sbb
scas
and
add
lahf
outsb
pop
pop
jbe
pusha
iret
cmp
out
pop
jle
jl
xor
xor
cwtl
cmp
fidivl
pop
in
add
cmp
jmp
mov
lds
outsl
sbb
idivl
pop
dec
es
push
pop
dec
imul
xchg
cmp
mov
in
push
dec
je
das
sbb
sbb
push
sbb
mov
xlat
dec
ss
xchg
mov
mov
adc
scas
sbb
fisubrl
arpl
das
mov
xchg
out
test
mov
mov
imul
js
xchg
shl
outsb
inc
mov
je
add
xchg
out
xor
sub
shlb
or
push
rcrb
and
call
imul
in
sbb
jp
mulb
xchg
jge
lock
cmp
les
push
dec
insl
shrb
sub
inc
in
mov
jmp
push
stos
lods
xchg
and
mov
ret
sub
addl
mov
outsl
sbb
ret
fwait
testb
lea
sbb
xchg
jno
int
out
sbb
out
inc
stc
std
jl
xchg
repnz
sub
xor
xchg
in
gs
push
aas
inc
mov
hlt
mov
ss
stc
sub
pop
cmp
add
cwtl
stos
mov
mov
sti
mov
int3
lock
and
popa
pop
lods
das
pusha
mov
faddl
push
pop
mov
mov
pop
loopne
adc
cmpb
jl
cmp
inc
xor
mov
enter
inc
arpl
xor
fldenv
cli
out
add
push
xor
nop
xchg
xchg
gs
fwait
dec
sbb
dec
mov
test
mov
lea
xor
mov
jne
xor
sub
mov
fs
add
inc
mov
and
out
mov
sarb
xchg
rol
inc
imul
xchg
jb
ret
pop
lahf
cltd
rcr
jbe
xchg
cli
sub
ss
lcall
mov
in
push
push
jo
stos
or
loope
xor
je
adc
pushf
imul
adc
push
leave
je
out
push
cmc
ds
or
mulb
sbb
pop
iret
mov
enter
js
cmp
loopne
jo
popa
xchg
xor
loope
out
fcomp
stos
es
push
lds
nopl
pop
stc
rcrl
and
sbb
cs
push
fcoms
xchg
pop
cmp
fsubrs
adc
out
fiadds
ret
das
xchg
pop
lahf
mov
adc
and
inc
add
xor
pop
push
push
sub
pop
fdivrp
aad
add
sbb
jbe
inc
and
test
sbb
cmp
push
inc
lahf
jmp
lcall
movsl
sub
lea
addl
xchg
lahf
pusha
jne
mov
iretw
in
dec
es
aam
sub
push
loopne
enter
lret
lds
ficomps
outsb
and
dec
jae
in
filds
pop
sub
mov
mov
and
std
insb
or
pop
into
jg
sub
jp
ret
add
dec
sbb
addb
dec
pop
xchg
xchg
lds
jp
insl
out
rcr
push
dec
movb
clc
sbb
iret
xor
xor
aas
sbb
testl
push
shll
ret
cs
shll
or
mov
mov
or
mov
std
mov
jbe
jne
movsb
mov
int
mov
push
add
sub
inc
sarl
addr16
aam
in
xchg
mov
dec
sti
mov
add
mulb
push
inc
lea
mov
stos
cmp
mov
test
cmpsl
add
aas
fldcw
int
push
adc
mov
leave
aam
iret
jg
xchg
mov
fnsave
ljmp
aam
test
imul
ss
pop
imul
cmp
movl
mov
out
outsl
adcl
mov
mov
sbb
jne
push
js
jg
cld
mov
inc
std
fcoms
mov
jecxz
repnz
adcl
insb
jl
mov
lahf
sbb
popa
hlt
out
or
enter
dec
jo
sub
mov
mov
sub
popa
mov
loopne
push
jg
push
frstor
mov
sbb
lea
xchg
cli
and
and
daa
movsl
jo
cli
cmp
ljmp
dec
push
mov
mov
mov
ljmp
lds
push
or
sti
push
inc
std
lods
sbbb
xchg
addr16
mov
popf
jecxz
pop
and
hlt
fimuls
mov
dec
mov
loopne
insb
ljmp
and
sub
inc
pop
lods
jns
test
lret
xchg
lret
dec
and
push
js
cmc
inc
jb
gs
inc
inc
jecxz
push
jnp
je
adc
mov
jge
lahf
imulb
and
push
xor
cwtl
sub
sbb
sbb
cld
jbe
adc
fadds
jmp
leave
cmp
test
loop
cmpsb
rorl
xchg
and
fwait
std
add
mov
aad
sbb
or
dec
sub
xlat
aas
pop
push
jle
jg
sub
add
mov
add
jne
pop
sub
ret
push
push
jae
loope
sar
pop
push
and
mov
mov
negb
xlat
jmp
mov
jmp
testb
aaa
mov
adc
loopne
pop
mov
call
lods
jle
mov
mov
add
jp
sbb
int
aaa
out
dec
xor
inc
aaa
insl
movsl
xchg
lock
rcrl
cltd
inc
mull
pop
es
cmp
xor
stc
push
gs
xchg
cmp
leave
insl
cmpsb
xchg
dec
cli
sub
lcall
popf
cmp
test
adc
fldenv
inc
mov
nop
pop
jnp
iret
popf
push
scas
adc
add
into
pop
dec
mov
adc
test
jmp
insl
lods
add
push
mov
adc
outsl
sti
push
cmp
inc
loopne
push
mov
pop
inc
ljmp
call
xor
cmp
adc
rclb
movq
inc
dec
sbb
and
fsts
stc
xor
sub
aam
xchg
sub
jecxz
rcr
int
ficoms
jbe
and
jns
stos
push
daa
mov
xor
std
setno
cmp
xchg
in
daa
xor
xchg
in
shll
xor
add
mov
fiadds
daa
lret
cmp
push
ljmp
sbb
mov
sub
sub
ret
mul
jmp
xchg
outsl
mov
jae
xlat
xchg
push
daa
stos
jg
fs
dec
or
dec
jo
fists
pushf
xchg
inc
fwait
ja
test
xchg
iret
pop
cli
xor
into
sbb
popa
lahf
pop
cli
cs
mov
in
fistl
xchg
sahf
fcoml
sahf
mov
loopne
and
call
pop
jno
and
cmp
iret
cmc
es
cld
mov
pop
popa
jg
pop
lret
mov
clc
jnp
sbb
dec
inc
add
mov
cmp
dec
jno
pop
adc
data16
stc
cs
fistpl
add
aas
mov
jns
adc
push
add
repnz
daa
popf
cld
push
inc
icebp
out
and
pop
int
add
xor
cmp
push
adc
xor
or
or
iret
pop
fwait
cmp
fs
add
mov
or
jae
es
and
int3
scas
xlat
jmp
mov
hlt
inc
jle
push
and
bound
loopne
mov
lock
ljmp
inc
pop
sahf
xchg
dec
jp
hlt
fwait
jle
out
sub
movb
sub
in
pop
and
mov
mov
cmp
out
adc
inc
pusha
call
jae
and
lret
sub
lret
das
push
adc
adc
mov
xchg
sbb
loop
mov
mov
mov
pop
xchg
jne
insb
cmp
mov
pop
push
scas
xchg
test
xchg
or
lret
inc
add
mov
repz
pop
mov
jge
sbb
arpl
loop
adc
xor
in
mov
outsl
sti
mov
cmpsb
les
xchg
sub
notl
outsl
inc
enter
xchg
xchg
out
fcmove
sub
xchg
pop
or
repz
mov
dec
sbb
into
mov
xor
inc
and
ds
std
jae
js
or
aaa
sub
adc
adc
jle
fs
outsb
pusha
push
and
xchg
xchg
out
pop
in
pop
aad
mov
movsl
or
add
ffreep
fcomps
adc
sbb
dec
vminsd
ljmp
jb
aas
dec
jecxz
xor
outsb
ret
push
pop
and
add
push
xor
pop
dec
and
or
jl
in
xchg
or
mov
mov
shrb
scas
hlt
cltd
cmp
sbb
test
pop
jnp
cs
mov
nop
leave
fwait
or
mov
adc
push
insl
cmpl
je
dec
or
mov
mov
test
stc
cld
insl
cmp
sbb
repz
add
lret
das
insb
aas
or
cmp
sbb
inc
dec
pop
test
js
lahf
xor
lock
in
mov
aad
ret
ret
sbbl
add
push
shlb
mov
jno
lret
fistps
sbb
hlt
enter
popa
out
outsb
sbb
pop
shrl
test
push
jns
mov
push
xchg
fsubrs
mov
mov
in
dec
xor
pop
outsb
adc
cmp
xorl
testb
je,pn
pop
push
mov
adc
adcb
cltd
lret
pop
adc
addr16
add
mov
sbb
inc
xor
push
jo
xchg
mov
jecxz
fwait
out
pushf
add
push
sbbl
add
lret
adc
fwait
stos
cmp
dec
dec
testb
push
cmp
xor
pop
fcmovu
jl
mov
and
and
loop
sub
inc
cmp
xor
mov
jo
popf
dec
iret
xchg
enter
sbb
cwtl
ljmp
leave
dec
add
roll
jge
add
sbb
cmp
and
popf
cmp
lea
test
pop
shlb
dec
adc
push
out
js
ret
jne
stc
cmpsl
scas
jg
mov
lahf
fnsave
mov
pop
fimull
mov
jmp
push
mov
test
test
mov
lods
or
repz
dec
fscale
and
add
xor
mov
rcrb
fistpl
mov
or
jb
flds
jbe
in
dec
adc
mov
sub
dec
dec
pop
push
push
adc
push
lret
xchg
cli
jp
xor
cmp
enter
xor
mov
daa
fs
add
popf
sbb
dec
push
mov
dec
push
outsb
add
sbb
mov
cmpsl
mov
pop
mov
out
sti
sbb
mov
cmp
lea
cmc
lock
fs
inc
push
pop
mov
xor
enter
insl
dec
icebp
push
fistps
mov
cwtl
fnstenv
out
test
mov
cmp
scas
cmp
mov
sbb
mov
cmpsb
jmp
cs
aad
adc
hlt
in
xor
ss
sub
stos
adc
sub
fstps
shlb
cmp
cmc
insl
repnz
push
jno
lods
loopne
decb
lock
loope
fwait
repnz
popf
cmp
ret
shll
sub
into
push
aad
dec
and
push
sub
xchg
popl
jecxz
and
pop
cld
xchg
jo
mov
push
aaa
dec
and
sub
jmp
out
pop
shrb
addb
push
dec
imul
jb
xchg
pusha
add
inc
movsl
adc
cld
test
fmull
pop
mov
inc
push
push
in
sbb
outsl
sub
rorl
sub
xor
imul
bound
imul
out
mov
ss
lods
into
cmpsl
daa
xor
test
test
cmp
insl
mov
arpl
lret
scas
cld
loop
rorl
push
idivl
mov
aaa
mov
lcall
jge
mov
pop
lds
and
movsb
pop
push
mov
mov
mov
pop
xlat
fadds
add
pop
push
and
daa
invd
mov
out
imul
xor
sbbl
or
mov
mov
addr16
loopne
in
fisubrs
mov
pmuludq
adcl
imul
and
int3
push
out
mov
in
cpuid
stos
hlt
jo
dec
push
mov
lahf
sbb
hlt
or
sub
and
jo
in
pop
arpl
movsb
pop
aaa
push
cwtl
add
pushf
xor
js
cmp
mov
test
jl
mov
and
and
mov
je
mul
je
sti
sti
dec
fwait
cmc
or
xchg
pop
ds
xchg
push
jo
pushw
shll
loopne
mov
xor
and
sbb
jo
lahf
mov
cmp
pushf
adc
fucomip
jns
jmp
sub
xor
popf
add
pop
jne
mov
mov
ss
testb
addb
js
ljmp
rol
inc
fmulp
call
stos
out
call
pushf
fimuls
int3
cmp
lds
bnd
pop
add
loop
pop
loopne
sbb
divb
popa
popa
dec
outsl
hlt
mov
fwait
popa
dec
popa
sub
mov
fwait
xchg
leave
in
scas
pop
cmp
das
test
or
loope
cs
adc
xor
pop
and
inc
adc
jne
fstps
adc
imul
lahf
mov
mov
xchg
dec
loopne
xor
mov
fdivrs
xchg
adc
mov
xchg
enter
pop
mov
call
inc
lea
daa
jnp
xchg
adcb
xchg
xchg
push
dec
lahf
test
testb
mov
pusha
lds
cmpsl
dec
dec
cli
mov
ljmp
xor
mov
sahf
ljmp
jae
mov
dec
pushf
sbb
lods
xor
dec
jge
push
js
mov
or
repnz
dec
mov
xchg
scas
test
push
cli
pushf
xchg
into
and
cmp
xchg
scas
fcmovnbe
pop
inc
jge
add
loop
mov
cmp
out
jnp
test
ror
sub
sub
pop
es
mov
cmp
push
xchg
jmp
xor
cmpsl
lahf
repnz
jns
daa
pop
xchg
fs
mov
xchg
jle
mov
aam
add
mov
inc
cmp
rorb
jns
and
or
subb
or
and
xor
inc
mov
fisubrl
test
cmc
xchg
loop
mov
xchg
mov
out
xchg
mov
jge
lods
fisttpl
pop
divb
pop
push
jno
fstps
dec
rcll
pop
jmp
push
mov
dec
push
mov
insl
cld
push
int
mov
mov
lea
repz
scas
jecxz
movsl
aad
popf
cmp
add
pop
push
xchg
adc
je
ljmp
fisttps
lea
cwtl
mov
arpl
fisttpl
fcomi
bnd
leave
outsb
push
in
lahf
out
in
cmp
stos
stc
mov
cmpsl
out
nop
ret
sub
js
mov
adc
pop
push
xchg
cli
add
bnd
add
aam
and
xchg
arpl
jb
insl
jl
xor
mov
inc
cmp
cmc
mov
xchg
lret
adcl
sub
jge
pop
adc
or
stos
push
mov
mov
mov
in
popa
xchg
ret
rcr
jns
insl
lret
in
loop
inc
aam
lea
aad
lahf
popa
jle
and
outsl
adc
cmc
push
out
jae
ret
loopne
pop
cld
mov
mov
dec
xorb
ret
js
lret
pop
ja
std
les
rcrl
idiv
jae
bnd
pop
cmpsb
mov
leave
cmc
mov
push
sahf
lret
adc
fcoms
xor
mov
fstp
rclb
pop
adc
icebp
into
shrb
shl
aaa
add
ljmp
popa
icebp
xchg
loop
push
cmpsb
int
and
mov
fldcw
inc
insb
sbb
loopne
rcrl
loope
sahf
push
int3
enter
dec
jle
xlat
daa
xor
sub
push
out
push
sbb
mov
sbb
pop
imul
mov
dec
add
mov
mov
cld
mov
sti
pop
and
add
es
mov
sbb
mov
aas
xlat
fbld
movsb
cmp
jmp
lcall
jp
mov
hlt
stc
call
sub
sbb
cli
lds
loope
std
dec
call
mov
add
jp
sbb
shll
cmpsb
mov
cld
shrl
loope
cmpsb
jl
add
and
and
push
iret
mov
push
test
cmpsl
pop
in
jbe
sub
adc
mov
xor
hlt
xchg
int3
fimull
ror
ret
fisubs
and
pusha
lock
cmp
fnstsw
cmp
sbb
daa
mov
push
pop
sbb
jb
lret
push
adc
xorb
sub
xor
xchg
ja
loopne
fcmove
mov
ss
cmp
push
fdivs
cmpsl
frstor
jp
hlt
xchg
push
sbb
add
test
and
outsb
lcall
aam
push
sbb
sbb
and
sbb
into
or
mov
add
in
loopne
inc
repnz
lods
test
ret
adc
stc
mov
andb
push
xchg
rclb
push
movsb
mov
imul
xor
test
data16
stc
pop
push
mov
mov
xchg
jae
pop
sbb
cmpsb
out
aam
xor
inc
jge
data16
insb
iret
sbb
jo
cmpl
and
push
int
out
xchg
ds
rcrb
test
ror
sub
rorl
mov
dec
sub
xchg
outsb
scas
stc
int3
cld
cmc
ficoml
adc
pop
out
lods
rorb
cmp
int
inc
lods
test
xchg
xor
push
insl
cmp
mov
mov
test
lcall
clc
xchg
and
add
bound
fs
gs
jne
push
xchg
divl
xchg
xchg
je
aad
push
out
dec
mov
imul
jbe
icebp
les
dec
sbb
rolb
mov
xchg
jbe
mov
movsb
data16
or
testl
mov
mov
lods
jge
cld
scas
sub
pop
in
sub
cmp
imul
adcb
vmovaps
push
lahf
outsb
push
in
mov
hlt
jno
lahf
xor
dec
inc
jo
dec
setge
mov
inc
jg
fbld
dec
dec
push
es
sub
arpl
cld
xchg
bound
xlat
lods
notl
add
fimuls
lcall
dec
cmc
mov
fmull
push
leave
lret
xchg
iret
mov
add
xchg
cmpsb
xor
nop
push
inc
mov
mov
adc
aas
cltd
fwait
cmpsl
fiadds
or
jno
movsb
sbb
and
xlat
addr16
mov
adcb
sub
jnp
aaa
movsl
jns
cmp
fidivrs
sarb
fwait
push
arpl
cltd
push
jle
gs
add
sub
in
sti
xchg
bound
push
aas
and
jecxz
fwait
iret
jo
repnz
sbb
pop
and
mov
sbb
cmc
es
sbb
fsubrp
addr16
dec
cltd
mov
push
mov
sbb
adc
aad
ret
fstp
ja
pop
pop
jns
pop
pop
add
dec
ret
out
jb
dec
enter
ja
mov
xor
xchg
pop
mov
push
or
xchg
xor
xchg
test
mov
xchg
sarl
push
push
adc
popa
adc
cmp
sub
daa
pop
rclb
setnp
sub
bound
xchg
mov
mov
jmp
mov
jno
sub
sbb
in
adc
scas
inc
daa
add
ljmp
cli
clc
loop
inc
dec
cmpsb
sub
sub
test
sbb
inc
pop
inc
xorb
xor
icebp
or
cmpsl
ds
inc
jno
cld
cmp
add
movsb
sub
jb
lea
pop
insl
mov
dec
pop
push
xchg
call
icebp
popa
xor
push
ds
add
scas
lea
lock
mov
scas
stos
imul
push
out
jbe
adc
xchg
sub
jne
push
cwtl
popw
pop
lea
sub
outsb
and
lods
push
jle
sub
inc
aad
push
call
mov
mov
xor
mov
es
pop
xor
xor
incl
jae
js
cli
cmp
loopne
or
jp
mov
out
pushl
in
cltd
dec
sub
mov
mov
je
jle
shrl
add
cmp
xchg
shll
leave
lods
shrl
out
pushf
adc
cmp
jbe
lock
mov
pop
push
int3
jno
les
bound
cmpsb
sub
jl
jg
mov
popf
ds
sub
in
repnz
push
and
cmpsb
dec
test
jecxz
into
loop
push
adc
call
xor
in
xchg
aas
fcoms
das
rorl
rorb
pusha
ja
sahf
lret
sbb
call
test
sbb
lds
rcrl
in
mov
movsl
pushl
lock
add
dec
pop
int3
movsl
adc
mov
std
ret
gs
inc
or
je
in
xor
cmp
in
adcb
xor
jne
scas
dec
inc
add
sub
cmp
daa
aaa
mov
xchg
mov
scas
test
ljmp
pop
push
pop
stos
and
test
insl
mov
xor
hlt
dec
xorb
mov
cmp
rcl
cmp
ret
fiaddl
mov
cmp
jge
fwait
jae
sub
mov
cmp
inc
cmpsl
mov
mov
sti
sub
lahf
jb
cli
mov
inc
in
bound
negb
jle
and
mov
and
pop
cmp
call
shl
pop
mov
ss
inc
mov
in
pop
mov
jns
cmp
sbb
fmul
test
and
outsb
mov
and
mov
cli
or
decl
stos
movsl
into
xor
mov
test
mov
cmp
std
dec
imul
dec
adc
shlb
or
es
lods
stc
iret
add
sbb
adc
push
sub
imull
insl
roll
sbb
jb
cmp
adc
fiadds
test
or
and
adc
cmpsl
push
test
rorb
mov
mov
jge
add
cmp
aas
pop
test
shrl
jns
popf
jmp
mov
enter
inc
jae
lock
fsubs
sbb
stos
xor
dec
repz
sub
cmp
mov
dec
mov
scas
xchg
sbb
daa
push
out
hlt
loopne
jmp
pop
sub
in
and
push
xchg
xor
ds
xlat
loope
faddl
mov
inc
out
test
inc
inc
out
fwait
xchg
cmp
mov
orl
enter
mov
jne
test
int3
and
cltd
lods
lret
das
and
mov
dec
dec
mov
pop
adc
repnz
adc
xorb
dec
movsb
or
dec
jp
outsb
xchg
ret
inc
xchg
jge
insb
pop
inc
jl
sub
mov
movsl
mov
fcomi
iret
or
xchg
insl
fwait
inc
mov
aam
mov
jns
sub
mov
psrlw
push
xor
xor
cmp
xorb
mov
ja
pop
sub
orl
idivb
xchg
dec
scas
in
cmp
xchg
or
add
mov
fsts
out
xor
mov
inc
jp
inc
push
sub
jg
cmp
jp
push
fstps
outsb
mov
pop
cmp
sbb
ss
fdivs
jbe
lret
dec
loopne
test
out
jl
jne
subb
xchg
mov
and
inc
aaa
sbb
push
mov
dec
bound
sub
xchg
pop
pop
stos
adc
bound
out
repnz
in
gs
push
xchg
jmp
les
cmp
gs
int3
stos
pop
dec
adc
aaa
fsubrs
dec
mov
mov
dec
jle
sarb
ret
lea
sub
loope
xchg
pop
lcall
or
loopne
mov
pop
sbb
nop
lret
test
pop
dec
add
loope
insb
int
fdivrl
push
imul
lods
in
cmp
mov
xor
shll
inc
and
cmpsl
jl
mov
inc
movsl
sub
insl
and
out
insb
mov
js
addr16
or
mov
aam
jl
cmc
adc
sub
adc
xor
pop
jne
outsb
sub
arpl
icebp
and
mov
xchg
sbb
enter
pop
xchg
inc
mov
cmp
pusha
or
xor
sub
jg
jno
imul
iret
test
sti
push
xchg
lret
sub
leave
scas
into
cmp
cmp
lea
aaa
mov
inc
push
lret
xor
lahf
mov
js
int3
mov
cmp
jge
popf
xor
cmpsb
or
jae
lret
test
cld
scas
add
sarb
push
mov
adc
cltd
rolb
add
cmc
addr16
movsb
jno
iret
mov
jno
cmp
add
mov
lcall
fstp
loope
loope
xor
idivb
in
das
int3
sbb
das
rolb
jge
movsl
into
and
das
aam
lods
mov
dec
jmp
and
sbb
clc
testl
loopne
inc
jg
lret
mov
lret
jno
or
xchg
dec
test
sub
sarl
cmp
push
inc
jg
sub
pop
mov
sbb
ficomps
lret
cmp
pop
sahf
push
fimull
and
pop
and
inc
popf
loopne
mov
push
or
ss
mov
mov
add
cmpsl
test
push
clc
repnz
lea
jne
popa
repnz
lcall
fmull
icebp
pusha
pop
inc
stos
push
xchg
hlt
sbb
pushf
lods
fs
add
fsub
lock
out
and
neg
or
and
push
push
int
mov
les
mov
cmp
dec
mov
dec
sub
scas
daa
int
arpl
outsb
xchg
pop
dec
cmp
aam
mov
sub
repnz
in
movlps
dec
jo
les
inc
pop
mov
lcall
xchg
lock
inc
movsl
outsb
scas
xchg
sbb
add
mov
jno
mov
stos
in
loopne
jge
in
pop
xchg
sbbb
add
out
jno
ficoml
ret
jae
sbb
stos
int
loop
sti
pusha
or
push
rolb
jo
popa
lds
ret
xlat
adc
xchg
xchg
sub
pop
xchg
inc
ret
pop
aad
push
shl
scas
call
cltd
add
mov
gs
movsl
pop
rcr
mov
mov
outsb
xlat
lahf
test
sub
into
dec
dec
f2xm1
push
pop
xchg
aas
dec
cwtl
out
add
ja
rclb
mov
mov
icebp
clc
in
seta
cwtl
and
mov
rcrb
pop
jg
imul
sub
add
or
repnz
into
in
jecxz
rorl
jns
fisubs
aad
clc
call
add
cmpsb
inc
xor
mov
ljmp
fwait
sub
lock
std
mov
mov
in
dec
xchg
push
mov
setp
mov
repz
mov
mov
mov
int
out
dec
repz
jno
lods
mov
mov
or
pop
mov
push
add
cs
mov
scas
xor
lock
lret
ficomps
test
daa
push
pop
ds
jb
mov
push
in
and
mov
fcmovu
cmp
push
dec
iret
jns
pop
pop
insl
stos
loopne
and
push
out
rorl
cmpsb
sahf
lds
jbe
daa
leave
fisubs
xchg
pushf
bound
sahf
icebp
and
push
push
push
sub
push
movsb
cltd
xor
push
sub
pushw
inc
xchg
mov
or
call
xchg
mov
repnz
les
int3
mulb
std
ret
sbb
xchg
in
cltd
in
or
inc
mov
xor
push
loop
mov
inc
out
stos
cmpsl
fdivl
inc
dec
cmp
enter
mov
xchg
inc
nop
movups
mov
sub
lds
lcall
xchg
cltd
inc
shrb
rorb
or
or
push
or
or
mov
fidivs
sub
mov
popa
dec
jnp
addb
shlb
loopne
xchg
pop
mov
aad
xor
insl
rclb
fcompl
insb
sbb
jo
mov
dec
xor
pop
cmp
lods
lcall
pop
aam
push
in
in
or
sub
xchg
adc
imul
cmp
icebp
cmp
push
sahf
jae
jp
aad
cmpl
cmp
insb
push
fstps
dec
push
andb
push
sahf
aaa
fdivrl
cmp
jbe
cmp
icebp
loope
cli
es
cld
sub
hlt
in
incb
dec
imul
dec
cmp
pop
pop
mov
fs
add
add
adc
sub
inc
push
inc
fucom
pop
inc
pop
call
or
sbb
mov
push
pop
das
add
xor
pop
cld
xor
fisttps
adcl
out
fsubrs
repz
push
les
sbb
sbb
stos
xchg
pop
jmp
mov
adc
fidivs
arpl
imul
imul
push
cwtl
adc
jp
test
dec
dec
shrl
scas
sbb
fwait
mov
pop
xchg
pop
gs
or
xchg
jge
loopne
ret
pop
fiaddl
lods
add
popa
mov
lcall
xor
push
xor
dec
mov
inc
sbb
mov
adc
stc
stos
roll
and
lahf
pop
lret
or
sbb
lahf
fstps
jecxz
adc
and
sub
dec
cmp
and
add
lds
and
xchg
jno
jl
sbb
dec
adc
out
mov
jo
stc
ss
lock
inc
jmp
int
notb
lcall
popf
jle
push
cmc
push
int3
sbb
lahf
and
ret
and
pop
mov
test
adc
jp
cltd
inc
cmp
inc
lods
fsubs
clc
cmovns
shrb
xchg
repnz
add
push
xchg
sub
stos
dec
mov
lret
pop
pop
sbb
loopne
xchg
iret
pushf
fistpl
sub
adc
scas
popf
xchg
add
mov
repnz
pop
fistl
fstpl
mov
xchg
add
mov
push
in
rorb
xor
mov
adc
and
mov
imul
push
cmp
cmp
in
xor
mov
push
incb
bound
adcb
lahf
pusha
mov
mov
xlat
mov
jb
sti
dec
lea
out
xlat
mov
into
cmp
cltd
adc
sub
dec
scas
rolb
mov
cltd
push
mov
and
popf
push
jle
mov
ficomps
dec
test
pushl
sbb
rcll
push
jns
dec
lahf
aas
call
sub
sbb
mov
ficomps
sahf
jns
push
scas
xchg
gs
xchg
pop
arpl
dec
jbe
fcom
int
les
int3
mov
xor
pop
push
cmp
sbb
icebp
cltd
xchg
aas
scas
in
mov
xor
or
sbb
shlb
out
mov
sub
jb
or
ljmp
js
sbb
repnz
mov
test
ret
inc
jns
test
mov
or
arpl
push
xchg
xor
pusha
mov
sbb
test
arpl
cmp
pop
mov
imul
adc
fnstenv
das
jae
ret
lds
popf
push
push
icebp
fldl
inc
dec
adc
loope
push
insb
mov
and
adc
lcall
nop
mov
inc
cltd
xchg
xor
ss
int
xchg
push
dec
sbb
cld
cmp
cmpsl
add
mov
mov
cmp
xorb
leave
cmp
xor
sub
dec
push
shll
out
xchg
mov
sub
mov
xor
cmp
aas
dec
xor
arpl
dec
lret
mov
jl
cmp
popa
inc
push
xchg
in
lret
pop
loope
cmova
popl
mov
cmp
add
repnz
js
cltd
std
or
adc
sub
cmp
inc
mov
jno
das
jnp
jb
call
and
dec
dec
push
sub
mov
push
push
xchg
cmpsl
rorb
add
dec
jge
mov
adc
movsl
aaa
xchg
lods
test
push
arpl
movsl
adc
insb
adc
stos
add
inc
jb
cmp
mov
mov
mov
sbb
add
out
out
dec
jae
cli
dec
movsl
in
sahf
sbb
jecxz
clc
imul
es
or
sub
sub
cmpsl
adc
mov
mov
inc
movsb
sub
add
jmp
dec
negb
scas
iret
or
test
xchg
pushf
bound
pop
push
push
adc
gs
add
cmp
mov
sti
or
adc
push
push
add
add
adc
mov
pop
test
cltd
adc
jg
xchg
lds
mov
push
dec
arpl
xchg
jl
mov
cmp
stc
mov
imulb
mov
inc
push
xchg
xchg
mov
movsb
fsubs
pop
loop
or
sub
inc
clc
out
push
mov
sub
inc
cmpsb
mov
xchg
sub
sbb
pop
std
aaa
cmp
inc
mov
pop
xor
js
cmp
cmpsb
out
lods
add
xchg
enter
push
test
out
jge
call
push
out
and
inc
or
jnp
lods
fidivrl
popa
test
stos
jno
mov
jno
push
xchg
xchg
pop
lds
inc
adc
nop
dec
add
adc
xchg
subl
testl
jns
add
adc
lock
aam
mov
or
mov
cmp
insb
cmp
pop
mov
xchg
jge
xsavec
les
dec
in
adc
mov
call
lock
pop
ret
lea
jno
inc
push
test
pop
out
xlat
pusha
sbb
jb
adc
push
lds
dec
push
outsb
mov
cmp
out
cmp
repnz
je
mov
bnd
dec
sti
outsb
mov
or
cmp
aad
jnp
test
mov
xchg
adc
test
cmp
sub
inc
stc
jno
sbb
negl
xchg
inc
call
loope
mov
shl
mov
fstps
xlat
push
aaa
aaa
cmpsl
shll
dec
aaa
loop
adc
loope
test
sub
test
lea
int3
xchg
mov
jl
and
shl
mov
jmp
pushf
push
rorl
inc
or
movsl
sbb
fcoms
mov
in
and
test
sbb
movsl
rcll
rolb
fcomi
xor
add
push
add
add
cmp
es
loope
test
lds
popf
xchg
inc
imul
arpl
pushf
ret
push
std
add
or
and
sti
sub
push
pop
fnstenv
dec
int
aaa
movsb
dec
mov
jp
xchg
in
iret
cltd
add
icebp
mov
fwait
data16
fs
mov
push
push
insb
push
fistpll
push
loop
imul
dec
bnd
arpl
notb
ret
je
inc
adc
dec
adc
fucom
push
cltd
mov
data16
push
or
rcr
pop
or
jne
ds
sbb
ja
fwait
idiv
mov
pusha
jge
adc
js
loopne
and
out
call
aas
scas
out
rcll
lods
es
js
or
mov
sub
loop
add
addr16
loop
xchg
xchg
push
lret
sub
mov
xchg
ret
sbb
nop
pop
cmp
es
and
lret
ficompl
and
leave
dec
jns
sbb
sti
cmp
in
sbb
sbb
repnz
test
loope
mov
mov
push
loope
sub
mov
adc
test
shll
add
stos
sbb
jp
push
nop
xor
fistl
xor
add
pop
mov
lcall
mov
mov
mov
rorb
rorl
sti
mov
fcmovu
mov
test
add
or
cmp
sub
add
cmp
and
push
xor
add
mov
jno
push
adc
sub
loopne
repnz
mov
aad
adc
xchg
cmp
and
incb
xchg
push
push
and
and
js
jno,pn
cs
in
and
loope
mull
sahf
mov
lods
ss
mov
mov
sub
mov
xchg
clc
mov
leave
mov
rorl
mov
mulb
imul
add
or
sbb
xchg
fs
imul
aaa
das
ret
in
pop
pop
mov
rcr
inc
sbb
adc
xor
mov
icebp
pop
imull
mov
rorb
cmpl
dec
lret
int3
push
adc
push
fisubl
mov
and
fs
int3
or
andb
sbb
lea
or
and
inc
dec
sti
mov
movsb
arpl
push
mov
or
sbb
aad
aad
inc
adc
aaa
fildl
shrb
addb
jmp
dec
gs
push
sbbb
add
popa
call
or
push
ret
mov
mov
jo
aad
fsqrt
fnstenv
in
jne
adc
xor
cmc
sti
pusha
inc
je
mov
and
loope
mov
insl
pop
add
dec
mov
adc
jmp
shr
mov
push
cmp
mov
pop
dec
cmp
mov
call
dec
adc
pop
cmp
add
mov
fsts
sbb
mov
xchg
not
jbe
insb
mov
ja
mov
xlat
mov
jle
test
in
push
cmp
insl
cmp
xor
jmp
hlt
movsl
xchg
push
aaa
cwtl
mov
adcb
cltd
xor
aam
fcomps
je
sbb
mov
add
mov
sar
jl
negl
scas
mov
xchg
pop
xchg
lret
fcoms
inc
jg
and
jo
imull
dec
sti
push
and
ds
sbb
mov
loope
mov
push
cmpsl
pop
xchg
call
cmp
inc
and
pop
ja
aam
dec
sub
shrl
mov
in
xchg
sbb
sub
orb
fwait
and
push
xchg
mov
sbb
lret
push
aas
or
xchg
outsl
add
outsl
ret
stos
cmc
scas
xchg
in
pop
or
cmp
adc
iret
repnz
xchg
add
mov
mov
pop
adc
push
cli
xor
push
dec
test
adc
push
mov
xor
mov
lds
imul
repz
mov
mov
mov
dec
cmp
aas
cld
push
imul
in
fdivs
sti
addl
add
lock
std
jecxz
test
sub
outsb
sahf
pop
fidivrs
mov
xchg
in
lods
dec
cmc
inc
and
imul
incb
out
out
push
orb
inc
cmp
jmp
sub
pop
lret
inc
dec
xchg
aad
and
dec
in
js
sti
loop
jl
and
inc
loopne
scas
pop
add
xor
nop
jl
leave
jl
int3
lret
mov
data16
add
cli
movb
xlat
xor
mov
mov
mov
jg
xchg
mov
cmp
test
push
insl
mov
test
clc
cmp
adc
stos
sti
fst
and
or
sbb
add
sbb
iret
xor
jg
jmp
in
cmp
and
xchg
lcall
stos
nop
mov
aad
stos
xor
or
in
inc
mov
rcr
cmp
cmpl
dec
scas
or
arpl
adc
or
aad
mov
sahf
pop
loop
lock
ds
idivl
shrl
sub
xchg
imul
inc
pop
mov
roll
mov
mov
popf
inc
xor
sbb
clc
das
jno
add
inc
mov
lock
es
aam
sub
adc
iret
inc
dec
lds
movsl
add
mov
lock
test
out
and
mov
add
sub
mov
imul
es
jmp
scas
repz
imul
add
movsl
xor
jmp
cmp
imul
loopne
fwait
lods
mov
mov
movsb
shrb
mov
insb
out
and
in
mov
movsl
or
mov
xlat
add
in
sub
dec
mov
mov
mov
fdivp
leave
in
cmpsb
jnp
xchg
or
sbb
pop
cmpsl
int3
cmpsl
push
jns
and
cmp
out
inc
push
int3
pop
push
lods
icebp
orb
mov
mov
mov
lret
stc
inc
fnstsw
cmp
lea
in
imul
sar
inc
jle
xor
push
outsl
push
cmp
stos
clc
cmc
xchg
sti
add
das
adc
mov
mov
xchg
cwtl
mov
cld
je
pop
fs
aaa
testb
push
add
ds
aad
out
inc
sarb
xor
in
nop
mov
dec
dec
xchg
push
mov
pushl
sub
int3
and
out
fwait
pop
jmp
dec
dec
mov
xchg
and
and
sahf
call
mov
push
aas
or
rol
xchg
fldt
mov
aas
rol
es
rcl
bound
xor
in
add
outsb
test
int
ja
mov
ret
dec
inc
ljmp
iret
mov
bound
mov
push
jae,pt
cmp
jmp
movsb
vdivpd
sub
mov
rorb
adc
nop
xlat
and
sahf
inc
pop
pop
push
mov
jmp
inc
or
sbb
shrl
lods
insl
dec
out
dec
cmp
aas
dec
adc
shll
repz
out
cmp
repnz
pushf
cs
jbe
cwtl
sub
ror
test
jge
add
jno
mov
popf
lds
mov
fisttpl
popa
out
cld
and
pop
ss
xchg
ret
bnd
leave
rcrb
leave
cli
push
cmp
adc
stc
bound
arpl
mov
shrl
clc
es
movsl
xorl
ret
in
adc
imull
push
xor
repz
and
rcll
xchg
dec
jno
insl
lock
mov
sub
xchg
loop
sbb
mov
in
lret
pop
add
jo
or
xchg
es
cmp
xor
jle
lahf
pusha
xchg
call
add
mov
mov
dec
adc
jg
fsincos
dec
scas
sub
adcb
dec
imul
xor
adc
adc
nop
cs
negl
call
or
cmc
imul
sbb
sub
stos
pop
push
adc
insl
bound
into
mov
dec
std
mov
not
mov
or
adc
pusha
adc
xchg
jl
inc
sbb
cmp
add
ljmp
mov
push
jb
dec
into
std
enter
adcb
cwtl
xor
inc
sub
jno
mulb
jg
inc
inc
arpl
sub
stos
add
ds
addr16
xor
xchg
cmpsb
int
hlt
lret
cmp
adc
mov
in
lret
push
sbbl
mov
addb
call
lea
lods
repnz
xor
mov
push
cld
adc
lock
jmp
adc
std
pop
inc
outsb
push
rolb
out
jne
jno
aad
mov
push
unpckhps
fimuls
in
pop
jb
sub
and
bound
inc
dec
and
inc
pop
pop
imul
sbb
pop
cwtl
std
pop
push
rol
xchg
fldt
push
push
mov
cs
test
jns
insb
in
cmp
les
mov
push
lock
xor
lods
or
rorb
mov
xchg
jmp
jns
shr
sub
rorl
push
sti
mov
jbe
cmp
sub
paddq
sbb
xor
mov
adc
pop
les
jnp
inc
xor
xor
sbb
add
sub
lahf
inc
push
jmpw
jnp
mov
adc
mov
lcall
push
pop
idivl
cmpsb
out
in
inc
stc
cmpsl
push
into
out
scas
cmp
inc
aad
test
jns
cli
lods
lods
sbb
jecxz
push
insl
push
adc
pop
popw
adc
push
or
out
insl
mov
ficoms
cmp
rcrl
stc
les
call
jp
mov
pop
into
pop
fsubrs
push
lahf
push
mov
test
mov
add
das
out
jnp
push
mov
jmp
mov
mov
or
stos
stc
and
and
push
dec
mov
es
imul
xchg
rclb
nop
adc
mov
inc
mov
mov
xchg
fnsave
test
hlt
addl
xchg
mov
inc
fistpll
sub
stos
data16
mov
sub
inc
lea
adc
lds
pop
icebp
mov
rcll
ds
int3
stos
sub
or
movsl
jecxz
outsb
addb
push
mov
cmp
inc
shlb
ret
scas
sti
movb
addr16
test
jmp
mov
outsb
mov
pop
cwtl
mov
cltd
dec
js
add
cli
pop
out
outsb
xchg
loop
aaa
into
rclb
out
push
sub
xchg
push
mov
mov
repnz
dec
or
aam
adc
pop
ljmp
lret
fadds
fs
std
repz
mov
lret
adc
fiaddl
mov
scas
xor
pop
cltd
push
shll
xor
mov
xchg
dec
cmp
push
mov
pop
adc
subb
or
jmp
lods
stos
or
stc
and
leave
scas
mov
das
es
loopne
push
rclb
mov
pop
dec
stc
psllw
cmp
cmpsl
jo
sbb
pop
outsb
enter
stos
cwtl
lods
andl
imul
xorb
mov
xor
adc
mov
pop
add
push
mov
shlb
and
xchg
mov
aad
shll
jle
mov
xchg
add
inc
mov
in
lods
int
mov
sarb
fstp
inc
inc
repnz
xchg
aam
push
popa
test
sub
cltd
es
or
xchg
or
in
xlat
pop
pop
mov
jle
lret
repnz
ljmp
jno
inc
pop
ds
and
and
jg
cmp
loopne
or
es
mov
xor
popf
or
xor
xchg
test
pop
dec
sub
and
push
repz
int3
arpl
mov
xchg
js
xor
jle
inc
aad
pop
je
idivb
outsl
jmp
clc
xchg
sub
iret
dec
mov
and
push
sub
adc
std
cwtl
xchg
and
leave
nop
sub
sub
cmpb
stos
xor
into
mov
ud2
cmp
xlat
dec
xor
cltd
add
in
push
fadd
lcall
xor
push
or
mov
adc
jae
inc
push
ret
orl
in
insl
xchg
adcb
pop
aad
jl
out
loope
pop
decl
imul
lds
arpl
in
int3
push
fstpl
push
mov
imull
xor
fcoml
xchg
das
adc
push
mov
enter
xor
pusha
out
inc
cmp
cmpsb
dec
sub
or
ficompl
js
jno
fwait
push
test
aas
add
pusha
pop
jns
inc
sti
lcall
imul
cs
ljmp
jne
push
ja
sub
bnd
ja
mov
jecxz
xchg
dec
les
pop
shl
inc
mov
jnp
ret
incb
stc
inc
data16
inc
push
mov
or
jle
daa
sbb
inc
test
setl
or
rorl
fwait
inc
adc
inc
imul
fwait
xlat
test
mov
dec
pop
int
fs
pop
outsb
cmpl
imul
aad
pop
push
mov
loope
cwtl
mov
lcall
mov
xor
rcrb
ss
jmp
adc
mov
sbb
popf
cmpb
mov
add
add
repnz
jns
pushf
lret
push
in
fnstcw
pop
jg
dec
push
hlt
test
cmc
sarb
inc
xor
adc
lahf
push
cmp
pop
push
fnsave
dec
testl
dec
les
jne
mov
fisttpll
lahf
or
icebp
insb
orl
push
mov
mov
les
loope
loopne
stc
movsl
call
movsl
enter
sbb
or
and
and
mov
inc
insl
or
lret
inc
inc
cltd
hlt
insb
jl
sub
push
je
mov
sub
sub
push
mov
xchg
roll
cmp
addb
mov
test
test
mov
mov
sbb
cltd
xor
xchg
testl
add
xchg
xchg
cmp
dec
push
loope
adc
xchg
lock
push
xchg
pop
adc
les
subl
cs
mov
xchg
inc
inc
cmpsl
mov
repz
cmpb
ret
sti
xchg
mov
add
adc
mov
push
and
and
cmpsb
xor
std
nop
rcrb
out
cli
sbb
ljmp
or
das
adc
out
inc
lds
outsl
and
cld
in
mov
cmpsl
fmul
fucomp
cs
into
pop
sbb
insb
or
sarl
dec
inc
fldl2e
or
jno
std
push
push
sbb
outsl
pop
pop
sub
dec
loop
out
xchg
push
in
mov
in
sahf
and
out
les
cwtl
xor
cld
pop
xlat
lahf
adc
dec
ja
add
jle
nop
dec
mov
das
fdivl
pop
pop
cmp
inc
inc
cmp
and
jecxz
cltd
bound
sub
or
test
cltd
icebp
xlat
dec
push
sti
cli
fiadds
test
sub
or
movsl
dec
xchg
aam
dec
fnsave
daa
jl
pop
sbb
inc
or
and
push
out
stos
imul
shl
stc
jle
stos
cmp
or
mov
jno
ret
scas
mov
invd
enter
outsb
in
adc
orb
outsb
push
pushl
ffreep
add
cmp
lahf
jbe
pop
or
ljmp
cmpsl
fs
test
jo
push
push
pushaw
mov
lds
lea
loopne
sbb
mov
cmp
sbb
out
pop
add
jp
int3
push
jno
js
into
xchg
jmp
jae
jno
popa
std
and
push
jnp
push
mov
jne
push
push
dec
pop
and
add
iret
outsl
mov
clc
mov
ret
push
pop
stc
cmp
loopne
sub
adc
repz
shll
lods
into
cmpsb
ret
shrb
enter
pop
daa
out
adc
xchg
in
xor
lahf
lcall
xchg
ja
add
ja
inc
movsl
or
pop
bound
inc
jl
xor
cmovne
push
call
sbb
xchg
xchg
dec
ret
sbb
fwait
rorl
ficomps
sbb
xor
xor
jb
stos
leave
jle
add
pop
test
pop
push
xchg
test
dec
jecxz
leave
add
outsb
mov
gs
in
mov
push
jb
loop
lcall
mov
jb
enter
cmp
cmp
cs
pop
dec
aaa
call
xchg
pop
js
and
shll
nop
add
in
enter
xor
subl
xchg
pop
sahf
mov
outsb
jne
pop
lea
daa
push
adc
pop
or
addr16
stos
and
or
push
mov
loop
jle
mov
into
xlat
cmp
add
mov
xchg
lock
xchg
push
pushf
ljmp
scas
inc
and
mov
dec
pop
or
out
imul
in
ret
or
fnstenv
xor
push
and
push
and
cmpsb
mov
mov
jg
push
pop
cmpsl
loope
stos
cmp
cmpsb
push
in
sub
add
jnp
imul
lock
push
cmp
inc
add
xchg
jnp
bswap
scas
mov
roll
mov
cmp
icebp
cmp
mov
and
fnstenv
nop
cwtl
pop
lcall
icebp
xorb
lcall
jns
ja
js
hlt
mov
lds
in
push
jb
int
jae
addr16
dec
pop
adc
push
mov
mov
cmp
bound
inc
jbe
dec
ja
pop
adc
jbe
imul
sub
int
xor
movb
inc
mov
xchg
mov
data16
mov
in
and
pop
imul
mov
add
popa
adc
sbb
cvtdq2ps
popa
add
mov
jnp
arpl
cltd
push
add
jge
or
lds
mov
push
roll
lds
inc
and
fdivs
mov
jl
inc
jmp
icebp
push
int
sbb
jp
mov
and
data16
dec
sahf
fnstenv
pop
popf
dec
inc
and
sbb
adc
dec
xor
enter
mov
jnp
dec
test
outsl
add
in
lret
ja
and
add
add
inc
mov
sbb
jmp
es
call
pushf
je
mov
mov
xorl
popa
cmp
adc
cmp
dec
rcrb
adc
mov
dec
les
mov
dec
mov
pop
push
jnp
out
clc
xchg
jb
icebp
and
out
addr16
iret
notb
pop
aad
iret
fs
xor
adcl
mov
mov
adc
xor
add
mov
dec
scas
cltd
or
and
gs
leave
mov
dec
ss
cld
xor
xchg
or
push
xchg
fdivrl
mov
dec
mov
les
call
incl
rclb
mov
call
test
insb
pop
adc
push
arpl
aas
je
jp
ds
fxch
fildl
pusha
mov
cli
cld
mov
stos
ss
push
add
dec
jmp
pop
ds
insl
pushf
lahf
repz
jnp
push
jp
mov
sbb
popa
jecxz
xor
outsb
aas
pop
adc
decb
data16
in
or
mov
adcb
jp
dec
stc
int3
dec
adc
push
mov
arpl
scas
rcrl
push
lds
add
imul
js
xlat
lret
or
push
out
mov
insl
outsl
inc
cmp
push
inc
mov
cmp
xor
mov
rcrl
imul
add
popa
mov
jbe
dec
mov
adc
push
xor
mov
cmp
test
pop
fnstcw
xchg
ds
fnstsw
insl
inc
test
adc
cmp
cmpsb
mov
in
js
push
pop
jg
out
ret
add
add
ljmp
shrl
shlb
repnz
sbb
push
outsb
das
das
test
mov
std
lret
add
sbb
ret
in
adc
sbb
sub
cmpsl
sbb
rorl
dec
test
test
mov
or
ja
std
xor
adcb
jle
adc
jmp
aas
pop
or
xlat
outsb
and
int3
sbb
mov
test
sarl
loope
push
xor
mov
jmp
mov
loop
outsl
shll
ds
clc
push
fwait
or
mov
data16
mov
push
push
push
xchg
cmpsl
inc
lret
xlat
push
sub
repnz
fsubrp
aas
mov
add
loope
shlb
addr16
arpl
aad
xlat
inc
inc
jbe
sbb
movsb
test
xor
cmp
inc
or
mov
cmp
mov
dec
and
fisttpl
mov
lcall
cld
xchg
repnz
rol
jl
incl
lock
add
jb
mov
xchg
cmp
or
out
adc
sub
xchg
je
xorl
outsb
mov
mov
and
ds
sub
gs
rcrb
mov
xchg
push
popa
addr16
sbb
jecxz
sahf
jns
xchg
sub
mov
inc
inc
and
addb
cmp
js
jbe
jo
pop
sub
icebp
pop
pop
ljmp
popf
sahf
leave
cmp
mul
or
mov
inc
xchg
or
aad
adc
insl
dec
cltd
loopne
repnz
sub
test
jle
scas
push
shlb
jns
movsb
inc
inc
pop
ja
sub
pop
sbb
sub
aam
fidivl
jecxz
lds
fwait
scas
xchg
mov
vcmpps
inc
sub
xchg
mov
mov
repz
movsl
or
clc
jp
aam
pop
or
insl
dec
data16
lock
inc
mov
mov
xchg
aaa
sbb
cltd
scas
out
sahf
ffree
xor
mov
push
xchg
nop
andb
outsb
scas
pop
aam
pop
and
ret
inc
dec
push
ret
fimuls
jmp
repnz
pop
jmp
sbb
loopne
push
movsb
in
call
mov
mov
mov
test
dec
aam
xchg
bound
cmpl
mov
push
ds
jb
daa
or
dec
sbb
sbb
jae
ds
add
dec
ljmp
fisubrl
out
inc
lea
sub
stc
bound
jb
pop
cmp
sarl
jae
and
jo
xor
pop
xor
cmpb
clc
cmp
mov
inc
shl
pop
lahf
or
pop
pop
clc
das
mov
push
mulb
and
push
sbb
outsb
ret
and
rorl
dec
jns
insl
ret
sbb
mov
dec
inc
add
push
cmp
shll
jo
sbb
dec
jbe
outsb
sub
and
mov
cmp
dec
sub
ds
or
jb
adc
add
jle
enter
push
in
arpl
cmpsl
cmpsl
shl
push
add
and
mov
sub
out
out
call
out
and
xchg
shl
sti
stc
dec
int
stc
cmc
cmpsb
dec
add
scas
push
sbb
dec
lods
clc
push
adc
inc
or
mov
cmp
pusha
xchg
pop
pop
in
and
out
popf
add
xor
testb
mov
ljmp
or
jecxz
into
popf
out
mov
xor
pusha
jmp
xor
mov
in
inc
xchg
and
scas
mov
nop
sbb
cltd
mov
test
sbb
push
inc
adc
icebp
clc
movsl
insl
fadd
push
sar
cmpsl
xor
aas
arpl
mov
int3
mov
repnz
in
inc
adc
jl
or
cld
pop
rclb
pop
xor
mov
mov
cmp
aaa
mov
mov
pop
pop
notb
jno
push
cwtl
mov
push
das
jnp
and
and
stos
jnp
lock
push
ret
mov
sbb
pop
scas
shrb
aas
adc
mov
mov
lods
mov
stos
pop
movsb
jle
in
and
fidivl
and
jns
push
and
popa
pop
pop
bound
add
jge
pop
iret
cmpsb
notb
test
repnz
popf
adc
jb
lds
fadds
xor
enter
aam
popa
pop
mov
shrl
es
jb
xor
je
call
mov
mov
popf
add
outsb
leave
call
out
std
in
xchg
lea
mov
cwtl
push
aam
mov
addr16
pop
mov
flds
cs
mov
sub
sub
pop
cltd
icebp
adc
jecxz
pop
xchg
and
inc
add
xchg
or
lds
loop
dec
fs
data16
insb
int
pop
insb
scas
clc
mov
pushf
pop
cli
rol
pop
or
or
sbb
jno
ds
jbe
sbb
stc
or
mov
mov
and
add
add
xchg
push
push
mov
in
imul
adc
int3
xchg
xor
dec
xchg
lret
adc
les
lcall
popf
jae
sub
push
repz
mov
scas
stos
aad
fs
xchg
and
sub
sub
xor
stc
xor
fmul
mov
or
and
push
dec
popa
js
jnp
push
jp
xchg
icebp
bnd
lret
add
xor
sbb
cmp
mov
icebp
jp
cmp
test
pop
pmullw
mov
pop
jl
jbe
aad
or
lods
sar
movsl
push
clc
inc
stc
in
add
xor
fistpll
dec
ffreep
mov
leave
inc
sbb
incl
pop
in
mov
dec
aam
mov
mov
fwait
mov
in
dec
faddl
movb
insb
xor
and
sub
hlt
mov
addb
cmp
fnsave
enter
movsb
imul
xlat
jp
fadds
not
adc
inc
xchg
pop
sbb
out
sarl
or
gs
xor
mov
sub
imul
imul
popf
xchg
dec
sub
flds
cmp
js
pusha
or
jo
pop
out
mov
push
mov
xor
fdivp
push
cmpsb
push
movl
jmp
out
or
cmp
cld
dec
daa
add
imul
or
ficoml
dec
dec
push
push
add
add
test
inc
sbb
out
into
jle
fdiv
iret
dec
add
cld
jecxz
mov
sbbb
data16
push
fidivrs
mov
fidivrs
inc
insl
add
addl
sub
jo
mov
push
and
mov
mov
mov
and
dec
out
inc
dec
js
outsl
rolb
cs
push
inc
pop
add
or
shrl
lods
out
call
xor
dec
gs
cmp
inc
cmp
mov
xchg
hlt
xchg
jns
repz
out
lret
mov
add
inc
lods
xchg
jne
sbb
sarb
hlt
icebp
bound
xchg
jb
clc
scas
out
sbb
repnz
mov
incb
loopne
rcll
cmp
movsb
pop
or
or
pop
jp
cmp
loopne
xor
cltd
gs
int
push
shll
ret
sub
std
test
push
xlat
loop
fsts
dec
scas
adc
fstl
mov
adc
mov
inc
pop
xchg
cmp
fadd
pop
int
adc
mov
iret
xor
jb
sbb
lret
pusha
loope
nop
adc
pop
add
inc
inc
cmpsb
pop
repnz
popa
dec
push
mov
jnp
dec
movswl
subb
lods
push
add
ss
mov
aas
loopne
xchg
push
inc
int
pushf
sahf
and
out
or
call
adc
in
fdivrs
or
push
shl
sub
scas
clc
int
push
test
jg
mov
add
dec
push
int3
xchg
and
cmp
outsb
call
aam
sbb
jecxz
mov
pop
out
mov
into
pop
fs
cmpsb
dec
sti
sbbb
xchg
push
fdivrs
mov
lock
mov
sbb
cltd
movsb
repz
movl
pop
cld
loopne
in
fildl
js
imul
xor
cmp
sbbb
or
decl
fisubs
ds
dec
sub
xchg
jge
xchg
int3
xor
fcmove
ss
inc
jecxz
dec
rolb
popa
and
add
les
gs
sub
pop
adc
ljmp
sbb
dec
or
mov
js
insl
mov
lret
mov
loopne
push
lock
mov
mov
sbb
fwait
inc
adc
jg
xchg
aaa
hlt
arpl
cltd
jns
bound
cmp
ss
cmp
mov
push
rcrl
mov
pop
shlb
ror
mov
pop
lods
inc
rolb
inc
out
rcr
mov
scas
pop
sbb
jo
mov
inc
mov
cs
mov
add
lock
mov
es
mov
jae
add
rcr
pop
out
lea
in
push
dec
mov
data16
lret
mov
add
loope
dec
lret
aam
push
jns
xchg
dec
lods
push
out
loop
test
or
mov
sti
lea
out
adc
stos
cmpsl
cwtl
pop
sahf
push
scas
insb
lret
push
pushf
test
xor
movsb
push
lods
testb
cmp
xchg
aad
cmp
fpatan
sub
mov
rolb
in
inc
fsubs
push
push
jmp
outsl
fnstsw
aaa
dec
inc
xor
pusha
pop
jbe
ljmp
pop
mov
movsl
jmp
mov
inc
cld
jge
inc
out
mov
movsl
sti
rcll
push
push
std
pop
and
pusha
xlat
pop
js
addr16
out
mov
inc
repnz
pushf
cmp
cs
aas
test
inc
sti
test
movsb
mov
xor
push
mov
and
jne
mov
or
fcomps
pop
dec
dec
pop
mov
add
cmp
jno
testb
sahf
sub
stos
mov
push
adc
or
js
test
lahf
fsubr
rol
lods
or
scas
cmp
out
popa
in
ret
cmp
xor
in
xchg
sbb
stos
push
fdivp
push
mov
pop
add
in
repnz
shrl
xchg
mov
push
cmp
cwtl
sub
add
and
push
pop
mov
add
loopne
imul
mov
mov
adcl
clc
shlb
repz
push
ss
sti
aam
push
mov
movsl
out
push
sub
rcrb
mov
hlt
and
pop
or
xlat
or
push
sti
inc
int3
jnp
lea
cli
jmp
jmp
mov
dec
pushf
mov
bnd
cmpsb
imul
sub
jae
inc
mov
fwait
xor
jl
pop
jl
int
pop
cmp
lret
pop
sahf
mov
pop
mov
dec
jmp
movsl
subb
dec
arpl
cwtl
movb
popw
cmpsl
mov
leave
call
gs
mov
inc
outsb
mov
lods
or
push
lea
sub
repz
mov
jmp
pusha
sub
les
push
push
adc
jae
das
sub
mov
repnz
loope
pop
xchg
dec
push
popf
into
jnp
cli
or
in
idivl
or
std
mov
inc
movsl
inc
int3
and
idiv
or
leave
mov
adc
mov
and
mov
fstpl
adc
int
adc
scas
out
sub
and
imul
stc
pop
cli
jg
fbstp
sbb
imul
mov
outsl
xchg
stc
dec
popf
sbb
dec
out
cld
sub
fdivl
rol
pop
sbb
insb
adc
pop
ja
into
aas
cli
int
in
mov
gs
data16
stos
or
pop
mov
mov
leave
add
mov
in
lods
xchg
fcmovnb
sbbl
aam
imul
mov
imul
filds
cltd
repz
into
pop
in
testb
xchg
inc
mov
mov
adc
adc
lahf
inc
xchg
shll
mov
addr16
out
int3
pushf
mov
lock
imul
or
ss
push
jne
add
cmp
movsb
ljmp
repnz
lret
ljmp
dec
jmp
inc
stos
or
sub
int
sub
dec
test
xchg
mov
cmpsl
sub
lcall
add
scas
sti
xlat
in
jg
jp
pop
mov
sti
getsec
mov
sub
int
mov
sbb
ja
xor
cmpsl
push
push
xchg
jbe
aad
xor
leave
push
daa
cmpsl
pusha
ret
clc
repnz
push
lahf
ljmp
aam
icebp
dec
inc
inc
stos
movl
rclb
jnp
cmpsl
repnz
cmp
adc
and
int3
arpl
cmp
cmp
mov
in
xor
shlb
adc
enter
test
int
adc
xchg
fisttps
mov
pop
xor
add
or
int
shrl
js
sbb
inc
insl
xor
jmp
adc
sbb
out
cmp
testl
mov
push
pop
mov
aad
and
inc
xor
fcomps
mov
bound
jmp
aad
and
lea
mov
popf
push
cmp
mov
adc
push
cmp
sbb
mov
or
xchg
les
inc
cmp
stc
jnp
xchg
scas
cmp
hlt
mov
xor
scas
enter
xor
in
test
sti
xlat
pop
outsl
push
or
xchg
hlt
test
imul
leave
cmp
jge
xchg
xor
mov
cmp
mov
hlt
inc
pop
cs
clc
lods
in
mov
fiadds
mov
mov
lcall
and
mov
es
mov
lods
idivl
idivb
and
sbb
std
push
add
push
xchg
lods
inc
pop
sti
aas
iret
jne
adc
js
jl
mov
outsb
jae
mov
adc
mull
pop
push
sbb
inc
cli
int
or
ds
xor
jge
hlt
cs
push
pushf
leave
mov
or
in
mov
mov
loope
int
push
cmpsb
sbb
in
div
inc
lods
jno
and
roll
test
and
push
outsl
mov
movl
fisubrs
shrl
mov
mov
jge
lds
ss
or
loop
ror
out
sarl
test
pop
dec
pop
fidivs
testb
dec
push
lret
mov
push
sbbl
dec
jno
mov
mov
xor
push
clc
mov
pop
jecxz
cwtl
xchg
dec
adc
jns
mov
cmp
pop
inc
or
leave
mov
and
xchg
outsb
loopne
movb
rcl
dec
xchg
psubd
es
cmp
inc
popf
sub
dec
pushf
mov
xchg
sub
mov
int3
call
push
arpl
jbe
cmc
fs
mov
imul
push
jne
pxor
ror
icebp
cmpsl
js
into
bound
and
sub
and
jae
mov
cld
jb
pushf
xorb
aas
into
push
inc
adc
push
adc
enter
xor
pop
xchg
int3
jnp
lods
push
cli
adc
aad
mov
sbb
arpl
sbb
out
add
cmp
andb
lods
fmull
stc
sbb
ret
pop
addr16
fstps
inc
mov
mov
sub
jmp
and
out
mov
pop
fwait
std
insl
mov
lcall
push
sbb
adcb
jg
adc
out
xor
fcmovb
bound
imul
inc
jp
push
insb
mov
adc
lds
jnp
push
cmp
jle
pop
cld
cmp
idivl
es
and
movsb
aas
pushf
jle
cli
add
popa
and
fs
repnz
lods
in
subb
cli
or
cmpsb
movsl
or
adc
test
ret
sbb
scas
xchg
cmp
mov
xor
jmp
cmp
mov
push
mov
jg
or
or
jbe
adc
imul
inc
adc
leave
call
xchg
pop
int
mov
or
mov
fwait
jle
push
mov
cmp
loop
push
mov
fs
test
loope
roll
add
push
cltd
and
xor
aaa
inc
sub
cmpsl
ret
push
in
add
add
outsb
push
fwait
inc
movsb
sub
sbb
mov
pop
inc
sbb
stos
dec
jb
in
sub
inc
fcmove
addb
pop
adc
xor
dec
or
pop
lds
cmpsb
aas
jle
xchg
ret
rcl
pop
jne
rorl
or
or
sub
mov
xchg
fcmovbe
and
mov
imul
sbb
sbb
mov
pop
divb
mov
mov
push
xor
cld
xchg
xchg
jb
test
mov
test
xchg
mov
into
jl
jno
cmp
inc
sub
pop
or
iret
popf
stc
add
std
loop
fs
cmp
mov
out
mov
add
xchg
push
jb
pusha
jmp
aam
mov
sti
and
mov
psrlw
fwait
push
insb
mov
lods
lret
cmpsl
adc
movsb
xchg
shl
push
stc
rcr
inc
in
flds
adc
nop
sub
into
repz
xor
ds
stos
mov
add
xchg
pop
jl
rol
cmpsb
sub
aaa
addr16
ss
std
sbb
punpckhdq
sub
shll
xor
sub
outsb
ljmp
inc
subl
lock
les
jecxz
mov
cmp
or
push
mov
ret
sbb
inc
sbb
push
out
jge
std
sbb
push
dec
jg
mov
frstor
imul
pop
jno
addr16
mov
add
mov
fmulp
out
mov
xchg
sbb
test
subb
mov
adc
xor
shlb
std
mov
popa
mov
sbb
rol
enter
sbb
xor
push
dec
xchg
jl
mov
sbb
jbe
jo
cmpsb
sarb
aas
imul
sub
bswap
jbe
push
jno
inc
adc
sar
dec
data16
stos
cmp
sub
or
aam
ficoms
insb
adc
sub
mov
es
mov
shlb
inc
or
sbb
lock
outsb
inc
push
inc
inc
sar
lds
cmp
pop
repnz
cli
fstps
cmp
clc
xchg
push
inc
rorl
pop
fwait
test
test
loope
or
outsb
mov
inc
mov
stos
pop
mov
pushf
call
dec
scas
arpl
int3
imul
sahf
fiadds
shll
test
pop
pop
xchg
jmp
xchg
and
sbb
outsb
addr16
push
xchg
cs
and
pop
aas
les
fsubl
and
mov
pop
fstpt
dec
add
push
imul
ret
stos
xor
int3
sbb
test
movsl
sub
inc
dec
pop
xlat
mov
mov
push
adc
jbe
call
sbb
push
sub
pxor
or
add
fwait
jae
out
shl
xor
dec
lods
push
or
or
iret
jg
push
mov
push
sbb
shrb
inc
xchg
loop
push
idivl
cmp
dec
push
adc
icebp
push
dec
add
popa
outsl
lds
add
shll
lea
dec
cmp
call
xor
xchg
repnz
inc
inc
pop
imul
inc
jecxz
ljmp
loopne
cwtl
mov
adc
mov
neg
sub
lea
stc
mov
and
adc
mov
xchg
fcoml
sti
cmp
mov
movsb
es
xchg
in
or
hlt
mov
push
cmp
clc
inc
xchg
jns
daa
cltd
call
mov
subb
cltd
add
roll
cmpsb
out
inc
mov
aad
rclb
xor
mov
aam
xor
dec
lcall
in
aaa
dec
mov
or
mov
push
sbb
mov
mov
mov
jns
cmp
sbb
xchg
popf
nop
jg
leave
.byte
.byte
sti
pushl
rolb
cmp
je
push
push
and
push
mov
mov
and
adc
and
mov
or
or
push
push
movl
test
mov
or
adc
call
add
mov
inc
and
xor
cmp
jne
sbb
pop
outsl
fidivl
and
pop
xor
cmp
fstpt
or
cmp
pop
push
loopne
pushl
je
mov
mov
dec
add
dec
add
push
mov
ret
push
push
mov
xlat
fists
dec
mov
orb
push
mov
mov
push
mov
fldt
sbb
pop
pop
ret
ds
mov
and
push
push
cmp
divb
cmp
cmp
jb
cmp
test
aaa
or
andps
mov
push
push
push
push
stos
test
pop
mov
fstpt
negb
or
pop
adc
ss
repz
add
aas
dec
pusha
cmpsl
ljmp
fucomi
mov
cwtl
movsl
aad
inc
incl
jmp
rcll
mov
test
mov
ljmp
mov
int3
xchg
rcll
add
pop
cmpsl
mov
or
adc
nop
pop
data16
inc
push
fs
jmp
jo
out
sub
jbe
mull
push
fadds
out
imul
cs
sub
roll
add
lods
nop
rcll
out
xchg
push
inc
jne
or
sub
sti
je
test
call
out
ja
ja
pop
add
or
lock
and
push
fs
push
insb
cmpb
cmp
xchg
mov
jp
je
pop
adc
rcrl
adcl
xchg
push
cmpb
cwtl
loop
xorl
push
push
outsl
inc
jno
add
aas
ds
out
ret
add
or
add
sbb
mov
in
cmpsb
push
movl
clc
daa
cmp
push
stos
pop
cmp
imul
add
and
inc
out
imulb
pop
adc
jmp
or
int
jnp
cmpl
adc
push
push
xchg
mov
movsl
int
pop
rorl
pop
add
imull
xchg
adc
sbb
push
xor
lea
rolb
adc
pushf
mov
or
hlt
pushf
pop
std
int3
push
aad
inc
lcall
push
insb
lahf
pusha
xchg
push
ret
aas
icebp
inc
xor
sbb
mov
div
loop
cli
movl
in
mov
ds
andb
add
mov
pop
lret
mov
imul
outsb
scas
add
inc
ss
add
test
push
cmp
mov
and
inc
or
cmp
mov
and
jl
rorl
cs
adc
mov
fcmovnu
mov
sar
push
cmp
sbb
dec
adc
push
mov
jmp
sbb
mov
jg
adc
fldcw
add
inc
add
mov
imul
push
push
push
mov
sub
iret
repz
and
sbb
xor
out
pusha
mov
mov
cmpsl
stc
pop
mov
dec
dec
mov
push
mov
mov
imul
push
inc
mov
lcall
je
jne
divps
adc
sub
aam
test
jle
and
ffree
jecxz
add
loopne
inc
lea
daa
mov
add
add
mov
or
push
xor
cmp
je
mov
nop
mov
add
inc
push
jg
jg
repnz
add
test
jne
mov
shlb
in
pop
mov
or
push
jmp
push
or
pop
call
xchg
test
push
movzbl
int3
orb
add
jns
adc
jo
insb
pop
add
lock
add
sbb
push
push
push
call
add
cmp
cs
popf
add
cmp
sbb
cmp
callw
mov
clc
fisttps
mov
jne
inc
mov
jne
scas
insl
subb
cmp
adc
loop
mov
pop
cmp
ret
sbb
mov
test
inc
sub
push
sahf
add
or
int
js
negb
dec
cltd
cmp
and
adc
lcall
ja
adc
jbe
adc
inc
mov
cmp
mov
xchg
fsubp
dec
and
test
mov
and
and
addr16
scas
adc
jo
xorb
or
xlat
sbb
xchg
jp
rcrl
mov
push
jo
push
dec
sbb
cmp
push
jns
pop
pop
dec
xor
push
sbb
pop
lock
cmp
add
std
sbb
dec
lds
dec
clc
sub
sub
add
xchg
jge
pop
sbb
jle
insb
orl
dec
fcoml
cmp
dec
lds
enter
outsb
ret
lock
jp
pop
pop
pop
adc
xor
cmp
mov
add
or
adc
push
dec
sbb
push
sbb
fs
outsb
or
js
xorl
insl
sbb
test
or
das
hlt
cli
insb
scas
mov
loope
pop
insl
insb
sbb
cwtl
shll
cld
sbb
inc
sub
jl
cltd
fs
and
xchg
cmpsl
std
lahf
mov
adc
add
sahf
out
lea
inc
add
pop
mov
adc
dec
orb
push
out
ss
ja
mov
push
test
add
push
sgdtl
pop
or
push
stc
or
or
or
dec
jns
mov
adc
jmp
xor
jp
fdivrl
divl
mov
mov
pop
xor
pop
ret
xchg
imul
push
es
imul
scas
add
shlb
add
push
push
xor
mov
sbb
or
sub
dec
inc
lret
add
mov
jb
pop
pop
pop
cmp
jg
cmp
jge
push
lea
mov
mov
add
pop
cmp
je
int3
add
jl
push
movsl
out
ret
xor
ret
pop
cmp
mov
in
cmpsb
mov
xchg
mov
cmp
jns
add
bound
jbe
iret
xor
insb
push
mov
push
outsb
out
pop
pop
sbb
jns
into
sub
fdiv
xlat
divl
sbb
mov
xchg
lea
nop
pop
test
sub
loopne
jl
mov
mov
xor
test
xchg
push
or
xchg
enter
pop
jbe
dec
xchg
shrl
add
inc
adc
push
pop
call
add
rolb
incb
xor
call
push
push
mov
in
push
clc
mov
inc
addl
adc
cmp
jae
lea
addl
mov
scas
fs
pop
in
mov
movl
mov
inc
mov
sub
test
aam
jns
rorb
push
out
out
daa
mov
ffreep
js
ja
in
sbb
mov
xchg
add
scas
fnstenv
mov
xor
movsl
jns
clc
lea
mov
cmp
add
mov
pop
out
aaa
shlb
cmp
add
cmpsl
loopne
lock
in
xchg
out
lret
cld
mov
jne
fs
insb
inc
inc
fdivrs
out
lea
push
imul
mov
pushf
and
imul
add
push
adc
add
fs
sarl
or
popf
fsts
xor
cld
xchg
push
add
in
rcll
lods
sub
dec
jnp
test
cld
clc
mov
dec
fisubl
sub
and
adcb
and
sbb
leave
insb
xchg
sti
or
iret
or
dec
cld
inc
incl
mov
je
jns
sub
daa
push
insb
xor
std
dec
add
clc
mov
mov
adc
push
or
fmulp
mov
inc
xchg
lcall
fcmovu
stos
ljmp
ret
sub
inc
testl
and
jbe
xor
push
push
sbb
dec
hlt
arpl
add
fidivrs
add
cmp
sti
mov
data16
push
movsb
dec
bound
rolb
ss
mov
arpl
into
mov
mov
movsl
push
arpl
cli
sarl
xor
push
rcrl
lahf
in
loopne
insb
xchg
sbb
ret
pop
sarl
lcall
lock
mov
mov
movl
mov
mov
add
sub
push
dec
adc
jnp
or
sub
sti
jae
jnp
lods
scas
lods
adc
cmp
push
and
adc
mov
pop
jnp
mov
pop
adc
or
dec
repz
push
push
int3
or
pop
ror
in
mov
dec
pmulhuw
and
cmp
inc
cmp
repnz
or
push
ds
push
in
jb
test
mov
inc
or
data16
paddusw
xchg
adc
push
mov
push
xchg
mov
push
mov
sbb
add
push
push
shrb
mov
jg
push
movl
das
xor
pop
or
fildl
dec
adc
cmp
iret
or
cmp
les
mov
daa
pop
push
inc
sub
les
push
in
jmp
push
push
mov
sahf
mov
jle
push
add
repz
cmpsl
adcl
call
pop
cmp
jg
mov
pop
sarb
jb
sbb
push
sahf
dec
push
push
push
mov
jb
mov
ret
addr16
xchg
orb
movl
ret
push
pop
jnp
addl
and
les
fadds
int3
mov
xchg
sub
and
or
sbb
mov
add
jb
push
jno
icebp
or
mov
repnz
sahf
add
adc
add
mov
dec
xor
lods
inc
and
adc
add
fldz
testl
inc
push
lea
into
push
movsl
xchg
and
bound
xchg
cs
lea
jge
cs
gs
arpl
and
sbb
fcoml
dec
add
cmpl
mov
add
test
jge
in
in
mov
xor
mov
and
fwait
dec
and
sbb
aam
xchg
add
or
pusha
inc
sbb
out
cmp
fstpt
cmp
adc
aad
cmc
aam
add
pop
test
pushf
cli
add
mov
jne
push
ja
insb
adc
lea
sti
sbb
rcr
ljmp
xor
xor
jmp
fistps
or
arpl
dec
add
hlt
pop
jl
jg
jle,pn
shl
add
push
test
test
jne
xchg
cmpsl
pusha
test
icebp
lds
test
cmpsb
lds
dec
mov
mov
scas
mov
xchg
fcompl
push
sti
add
loope
test
fisttpll
js
jg
lea
addl
iret
jl
ret
insb
adc
fmull
mov
inc
nop
lcall
adc
inc
push
js
sahf
push
fimull
and
aas
scas
aam
das
xchg
mov
or
negb
add
mov
inc
fstpt
mov
mov
cmp
add
test
mov
negl
aam
int
jb
repnz
inc
inc
sbb
inc
pop
vdivpd
movzwl
cld
les
adc
aas
jg
mov
push
out
jns
mov
adc
fbstp
push
mov
push
cmpsb
push
inc
sbb
mov
adc
or
nop
pop
mov
ret
sbb
or
mov
fucom
fldt
xchg
sbb
xlat
jge
adc
jae
repnz
dec
addb
add
and
sub
sar
outsb
jne
je
mov
movsb
and
mov
stos
shlb
lock
into
lock
data16
inc
or
sbb
ret
xor
adc
rcll
jns
rclb
inc
cmp
movsl
pop
mov
pop
push
loop
leave
pop
je
mov
jb
mov
dec
jg
pusha
add
mov
sarb
rcrl
movsl
mov
hlt
add
lock
dec
add
insb
push
ja
sub
in
adc
push
xor
insb
cmp
repz
inc
mov
jnp
ja
pusha
divl
adc
add
aad
xchg
adc
dec
jmp
jbe
add
in
mov
mov
inc
inc
cmp
jl
lea
and
push
mov
adc
push
mov
add
xchg
shl
or
push
jg
inc
or
sub
cwtl
sbb
cmp
mov
clc
jl
mov
jmp
sbb
lret
push
rclb
push
mov
ljmp
xor
pop
inc
jg
sahf
je
cmp
jle
ds
cmp
je
add
lea
push
push
or
jb
mov
lea
push
and
pushf
inc
add
jmp
or
jns
push
xor
rcrl
add
adc
out
cmc
rol
sub
pop
add
mov
fsts
jnp
loopne
jecxz
out
push
sbb
sbb
ret
imul
in
lea
lret
or
imul
or
js
test
jno
inc
pop
call
iret
mov
add
pop
in
push
in
out
xchg
stc
add
jge
cmp
pop
hlt
fildl
je
inc
dec
xor
mov
jge
jmp
jecxz
cmp
jp
jnp
js,pt
out
and
push
jmp
sbb
je
xor
push
push
mov
adc
pop
and
mov
mov
sbb
leave
int3
adc
jb
pop
invd
cltd
je
xchg
test
frstor
jmp
mov
jb
xchg
sbb
ret
mov
loopne
or
pop
repnz
pusha
xchg
addb
add
add
sub
push
subb
jne
inc
cs
and
inc
rclb
sub
push
xchg
sbb
lret
sbb
inc
es
jb
jnp
adc
aas
repz
jnp
push
jle
adc
inc
repz
adc
int3
dec
cmc
dec
ret
xor
jmp
loopne
jns
and
cmc
mov
pop
or
jae
daa
pop
or
sbbb
out
pop
jbe
or
sbb
adc
lds
and
cmp
mov
and
out
jmp
push
xor
adc
faddl
dec
subl
call
or
test
lock
insb
xchg
popf
jo
dec
push
bound
loopne
ds
xorl
jl
mov
rclb
jg
dec
mov
push
leave
adc
call
dec
jl
xchg
xchg
mov
int
mov
shr
mov
add
and
inc
mov
cmp
push
xor
jbe
stos
pop
lods
sbb
xor
vpmuludq
insl
dec
pop
pop
out
out
dec
mov
sub
mov
je
sub
and
out
je
pop
je
xchg
jl
insb
sub
or
xchg
push
loope
inc
rcrb
push
ss
data16
orl
sbb
or
popf
jl
sub
jae
adc
mov
xor
mov
call
adc
xchg
add
or
popa
cmp
pop
add
adc
push
jb
or
xchg
xor
push
fmull
dec
adc
inc
fs
jb
dec
inc
addr16
pop
push
loop
jo
sbb
arpl
dec
push
add
pop
xchg
or
lahf
sub
enter
push
sarb
inc
mov
sbb
and
push
push
sub
addr16
les
roll
pop
sfence
cmp
jbe
fimuls
mov
sti
dec
cmpl
mov
push
push
dec
outsb
mov
inc
cmp
jb
outsl
mov
sub
mov
test
or
lea
in
mov
add
out
add
in
adc
insl
lock
pop
mov
sbb
adc
outsb
out
rcrl
add
pop
adc
fnstenv
sub
popa
mov
imul
iret
adc
inc
add
jbe
dec
imulb
mov
push
inc
ja
push
add
xor
xor
imul
mov
pop
movlps
mov
loopne
cmp
dec
test
adc
sbb
push
push
dec
mov
test
enter
sbb
inc
cmp
repz
and
push
jl
xchg
lea
imul
push
push
jbe
and
stos
add
mov
lret
shl
cmp
push
lcall
adc
dec
lds
inc
mov
mov
push
je
test
or
iret
es
jb
cmpb
pop
int3
push
pop
or
pop
mov
mov
les
inc
orl
sbb
pushf
cmp
jle
or
imul
xor
or
jmp
jg
push
data16
jg
scas
lds
push
inc
push
test
and
adcl
je
cmp
xor
pop
ja
or
push
cmp
jae
adc
ja
jne
and
inc
jmp
test
sub
std
jo
insb
add
call
sbb
or
sub
push
fninit
inc
pop
xor
nop
push
inc
xlat
cmp
cmpsl
dec
dec
mov
cmp
mov
mov
loopne
or
cmp
or
ja
xlat
sti
sub
adc
lea
imul
xchg
push
add
inc
dec
in
loop
pop
clc
jge
push
aas
inc
mov
add
test
movsl
and
popf
add
lcall
jmp
mov
pop
pusha
test
ljmp
inc
imul
or
jb
leave
movsl
mov
loop
and
or
cmp
pop
jb
xor
sub
repnz
xchg
mov
je
addl
sbb
cmp
push
inc
push
push
mov
push
or
jmp
pop
lods
lcall
push
shrl
inc
popa
xlat
push
sub
add
inc
imul
sbb
sahf
orl
fiaddl
sar
sbb
addl
and
xor
xchg
lahf
outsl
lahf
testb
xor
sti
addr16
push
int
inc
add
xor
int3
lahf
mov
mull
mov
push
add
enter
ds
pop
push
add
push
or
or
js
loop
or
or
pop
xchg
jo
cmp
pop
and
mulb
push
in
out
sub
dec
adc
lcall
and
rolb
loopne
inc
and
mov
in
or
inc
or
ss
cmp
andb
data16
mov
push
adcl
mov
add
push
jge
sbb
dec
xorl
std
adc
adc
hlt
jno
adc
pop
dec
xor
mov
mov
fs
mov
mov
dec
mov
test
pop
ret
mov
sarb
or
xor
cmp
je
push
call
adc
cmpsb
mov
ljmp
lods
mov
lock
push
add
and
aam
jge
mov
pop
ds
test
sbb
or
cltd
mov
sub
push
pop
loop
push
clc
inc
add
add
pop
or
sub
push
push
outsb
lret
jbe
mov
in
jl
or
je
int3
sub
cmp
out
adc
ja
movzbl
sbb
and
or
test
movsb
push
cmp
je
dec
mov
div
jl
jg
fucomip
mov
loope
cmp
jge
lods
sub
push
push
mov
inc
jne
notb
mov
and
int
fcomp
incl
cli
or
lret
orl
ja
cs
imul
fstpt
ret
push
mov
mov
push
pop
and
xchg
sub
push
pop
aam
sbb
in
or
mov
data16
je
xchg
cmp
enter
cmp
popa
movsb
adc
sub
mov
sub
mov
lret
push
push
push
add
add
xchg
xchg
sbb
add
int3
adc
push
sub
jg
mov
push
shr
ret
decl
inc
or
cmp
xchg
imul
mov
cmp
jo
es
sbb
inc
cli
and
mov
rclb
aas
push
faddl
lret
mov
cmpb
lahf
or
subb
adc
mov
push
fsubl
adc
shlb
lcall
out
iret
pushf
dec
xchg
lea
pop
mov
mov
cmp
hlt
cwtl
inc
lcall
cmp
sub
dec
outsl
loope
ret
pop
push
flds
jl
test
jle
sub
jo
xor
adc
sub
jl
add
or
add
mov
pop
insl
mov
push
lock
enter
add
scas
push
sub
mov
adc
les
shll
fildl
test
cmp
jg
add
scas
push
or
cmc
xor
push
pop
dec
fstpl
mov
sbb
sbb
inc
sbb
ret
fcompl
push
scas
mov
jnp
cmpsl
clc
adc
fwait
inc
push
sub
fmuls
xchg
das
cmp
and
adc
add
roll
cmp
inc
cmp
xor
movsb
push
les
mov
divb
inc
jle
mov
mov
adc
ret
aaa
insb
stos
pop
mov
pop
mov
jl
inc
push
jne
sbb
dec
jae
sub
les
push
cmpsl
lds
pop
cmp
call
or
out
inc
lea
test
jl
and
mov
xor
jle
push
fcom
or
stos
rcll
fldt
je
jle
movsb
mov
loop
shll
test
negb
movsl
sbb
push
sbb
sub
js
mov
pop
fsubrs
dec
pushf
fidivs
dec
adc
imul
sahf
cmp
cmp
sarl
sub
aaa
loope
mov
lods
sub
inc
or
into
jge
jo
dec
cmpsb
loopne
test
aaa
pop
add
sarb
sbb
cmpsl
ror
cld
dec
push
movsb
pop
push
pop
add
and
ficoms
sub
sub
push
sbb
cmp
decl
mov
jle
pop
inc
pop
aas
adc
jle
pop
xchg
mov
cmp
mov
fiadds
shl
in
cmp
call
test
mov
mov
inc
idiv
add
adc
std
add
add
adc
cmp
dec
outsb
aaa
sbb
in
out
or
or
je
or
or
popa
xchg
cmp
jb
xor
dec
mov
or
push
add
movb
mov
in
adcb
insl
jl,pt
cmpl
mov
or
arpl
stos
mov
pop
outsb
or
scas
lea
push
rorb
clc
repz
call
add
cld
or
cltd
call
pop
loope
addb
push
xchg
pop
push
sbb
cli
sub
aad
outsl
push
mov
dec
lock
pop
jns
mov
pop
mov
xchg
xchg
xor
int3
fistpll
pop
fidivs
push
je
testb
inc
sti
dec
and
je
xchg
lcall
jmp
mov
cmp
jb
add
and
add
lock
cwtl
adc
mov
push
addl
inc
adc
or
ficompl
jb
jmp
push
adc
add
pusha
push
and
sbb
ficoml
inc
cmpsl
sub
push
xor
and
cmp
icebp
pop
jne
aam
mov
or
out
push
pusha
cmp
movb
jne
test
loope
pop
out
ret
push
and
daa
lods
dec
negl
aas
pop
testl
dec
incl
jne
mov
mov
add
jo
xor
pop
add
shrb
les
push
movsb
or
jns
and
or
lahf
or
andb
mov
js
idivl
mov
or
data16
into
aam
jmp
leave
inc
outsl
les
loopne
clc
push
push
dec
lcall
cmp
dec
rolb
adc
mov
ud0
jmp
jmp
fisttpll
loop
mov
adc
fidivrl
inc
push
push
push
mov
sub
push
sub
mov
sub
push
push
push
subl
dec
push
inc
inc
mov
pusha
pop
sub
push
insb
hlt
je
push
or
test
je
adc
mov
add
pusha
xor
jo
jecxz
call
inc
cmp
lcall
lret
pop
jg
jno
fnstenv
add
stc
mov
faddl
ret
mov
pusha
inc
and
push
and
fldl
push
ds
pop
xor
sub
mov
add
or
or
sbb
les
push
shlb
pop
pop
ret
xor
add
dec
cmp
and
out
adc
pop
or
add
mov
adc
pop
aam
or
lea
sub
jo
sbb
xor
push
sbb
cmpb
push
scas
std
data16
or
xchg
fldl
pop
loope
cwtl
and
inc
pop
sub
mov
nop
pop
mov
mov
ss
push
or
inc
pushf
add
jl
mov
xor
mov
mov
xor
cmp
xchg
xor
mov
push
or
adc
push
pop
or
add
add
call
jb,pn
je
jb
and
add
repnz
daa
push
clc
roll
je
push
or
test
mov
or
mov
lods
out
sbb
mov
jle
jle
out
pop
mov
test
mov
add
fisubrs
mov
sbb
call
push
pop
or
adc
ret
rol
inc
add
and
mov
insl
jmp
jbe
sub
rep
mov
sbb
jl
jo
inc
cli
outsb
or
in
arpl
sub
adc
mov
add
int3
scas
in
sbb
add
mov
jmp
shll
mov
sbb
mov
jne
pop
testb
inc
add
xchg
pushf
jbe
pop
sub
xor
xor
sub
adc
or
jge
clc
out
je
ljmp
jb
xchg
je
test
jbe
push
add
add
divl
sbb
sbb
dec
add
ljmp
addl
rolb
incb
pop
jle
xchg
sbb
push
add
ja
int
sbb
mov
sbb
jbe
enter
int3
sbb
or
lret
jb
rorb
xor
test
call
dec
jmp
repnz
mov
testl
mov
lahf
xchg
xchg
jmp
jb
jmp
pop
mov
dec
sub
sbb
cmp
sti
sbb
adc
xchg
jo
les
adc
sbb
push
fsubr
icebp
inc
jae
mov
out
push
mov
xchg
cmpb
je
das
push
dec
push
cmp
mov
movsl
mov
ja
sbb
sbb
test
pusha
jbe
xorb
adc
sbb
jl
pop
scas
xchg
pop
mov
dec
rcrl
fiadds
add
bound
sarb
xchg
jmp
dec
push
ja
xchg
mov
andl
xorb
pop
xor
xchg
orl
repnz
xchg
push
enter
jo
mov
mov
push
or
lea
lea
cltd
sub
adc
shld
push
push
jmp
push
push
jmp
aas
dec
jnp
pop
jle
lea
fidivrs
cmp
jle
jbe
addb
mov
sbb
aad
repnz
pop
sbb
push
inc
roll
mov
jp,pn
dec
push
rolb
sbb
bound
or
mov
mov
adc
adc
cmpsl
cmp
jne
ret
pop
cmc
mov
adcb
mov
movsb
xor
push
test
lods
je
mov
and
jb
cs
mov
or
xor
inc
add
sahf
in
add
cmp
paddd
and
idiv
jmp
sub
push
mov
in
pop
sub
xor
jae
mov
insb
xor
out
mov
mov
xchg
out
mov
mov
mov
test
loopne
lahf
xor
xchg
dec
lock
cld
add
in
dec
ja
mov
or
loopne
sti
in
cmp
cmp
inc
aas
xchg
jbe
sahf
dec
shlb
icebp
stc
sub
mov
lret
rclb
inc
les
dec
inc
call
xor
sub
jnp
push
adc
cmpl
adc
sub
lods
jg
mov
jns
dec
sbb
fiadds
adc
inc
js
push
push
pop
movsb
mov
lock
cs
mov
shrb
xchg
out
int
inc
fcompl
das
int
jmp
hlt
or
aas
add
dec
adc
test
xor
xor
and
mov
cmp
sub
in
jl
dec
adc
pop
jns
xchg
lret
repz
test
cmp
push
test
jl
in
mov
aas
mov
xchg
out
bnd
rclb
fcom
call
sub
push
jbe
or
dec
sub
pop
mov
scas
daa
cmpsl
inc
inc
je
call
pop
gs
mov
push
mov
push
sub
mov
inc
jo
mov
sub
jo
movsb
inc
loopne
push
jns
or
adc
sub
fbld
mov
inc
xor
in
pop
push
sbb
repnz
mov
or
push
lret
jl
test
jge
out
repnz
jbe
lret
repz
mov
rol
sub
pop
int3
test
insb
in
xchg
out
sub
or
aas
clc
or
lahf
xchg
xor
adc
adc
sbb
dec
in
imul
cmp
cmp
push
push
or
pop
pop
inc
cmp
pop
ja
jns
or
mov
imul
sub
cld
mov
dec
xor
fisttpl
dec
cmp
sbb
jo
movsb
mov
je
cwtl
nop
xchg
xchg
xchg
lret
lcall
lret
or
mov
fsubrs
adc
fdivrl
mov
sub
movsl
xchg
mov
mul
dec
cld
cmp
or
mov
cmp
add
mov
jbe
add
je
push
xchg
add
dec
les
enter
dec
movsl
push
stc
loopne
loopne
in
mov
les
or
xor
xchg
xchg
dec
mov
xor
sub
cmp
outsl
or
pop
cs
pusha
push
xchg
lret
in
pushf
mov
out
mov
pop
int3
jb
or
call
jnp
or
or
or
sub
enter
ret
xor
insb
out
xor
movsb
mov
dec
jl
push
lret
xchg
mov
sub
in
shrb
fcomp
ds
mov
hlt
clc
xor
add
inc
xchg
inc
push
sbb
and
and
cmpsb
inc
pop
mov
dec
bound
fs
bswap
in
sub
cmp
push
sub
jns
popf
outsl
ficomps
js
pop
or
gs
cmp
fs
in
cs
inc
jns
mov
in
sub
ss
pop
pop
or
adc
or
ss
sbb
xor
add
dec
ss
idivl
cld
fwait
jo
xchg
xor
jl
lock
nop
push
xor
mov
pop
inc
rcl
lret
lods
mov
hlt
xchg
clc
lret
xchg
cld
test
pop
outsb
xchg
iret
and
mov
cmp
inc
inc
jb
jns
cmpsb
jbe
pusha
fs
inc
test
mov
sahf
inc
test
mov
ja
in
stos
int3
xor
aam
ret
ret
mov
lock
cmp
pop
stc
sub
mov
pop
in
fcompl
testl
or
cmp
sti
mov
sub
bnd
push
dec
xor
fs
mov
pop
cmp
dec
cs
push
test
and
mov
lret
xchg
cld
lcall
xchg
clc
in
xor
dec
xor
cmp
dec
sub
cmp
jb
test
pusha
fs
lret
leave
mov
addb
xor
mov
shrb
aam
lret
in
xor
hlt
xor
enter
cmp
cmp
shrl
sub
cmp
sbb
add
sub
cmp
xchg
iret
fcompl
sub
mov
es
cmp
push
ja
movsl
repnz
push
jb
xchg
je
cmp
es
mov
mov
xor
xor
iret
push
test
or
repz
cltd
sbb
push
sub
and
sub
inc
inc
cs
push
pop
pusha
repnz
cmp
cmpsl
addr16
jl
xor
mov
cs
xchg
data16
enter
inc
inc
mov
lock
push
cs
push
hlt
clc
gs
or
test
cmp
adc
push
xlat
xor
jb
xor
pop
aad
push
daa
iret
xchg
lret
pop
pop
jae
inc
js
mov
push
mov
movsl
mov
movsb
mov
mov
out
cmp
xchg
mov
movsl
bnd
cmp
lods
movsl
stos
cmp
mov
mov
sbb
cs
fcoml
mov
xchg
cmpsl
nop
cmp
adc
cmp
dec
inc
dec
clc
cwtl
pusha
fs
call
pop
mov
or
pop
enter
or
mov
enter
lods
mov
mov
in
jae
inc
or
or
adc
xchg
lret
leave
repz
or
and
daa
iret
test
push
push
pop
push
les
pushf
push
je
jl
loopne
in
push
cwtl
pushf
mov
lret
dec
mov
loopne
push
cs
in
mov
push
sub
cmp
cmp
sub
popf
mov
sarb
fadd
xlat
into
in
movsb
lock
aas
cld
js
stos
mov
cmp
and
jns
xchg
dec
mov
cmp
subb
movsl
push
pop
pusha
push
mov
movsb
nop
mov
cmp
sbb
sahf
outsl
int3
xor
adc
lock
jl
clc
in
xchg
adc
mov
or
xchg
aaa
cmp
sub
daa
into
xor
dec
cmp
fcoml
stc
xor
jo
je
in
push
mov
cwtl
pop
outsb
xchg
xchg
pushf
into
fs
jb
lods
imul
xor
in
jb
gs
cmp
dec
in
enter
dec
push
inc
stos
jno
fidivrs
dec
fxch
pop
xchg
jo
xor
inc
pop
cs
mov
mov
mov
fs
dec
in
jl
mov
push
test
les
rolb
push
sahf
dec
in
hlt
and
cld
sub
enter
add
xor
jns
xchg
xchg
push
cmp
dec
in
pusha
es
js
test
cmpb
pushf
cmp
cmp
cmpsl
xor
pop
inc
fcomp
push
fisubrs
mov
cld
xor
ds
mov
lret
ds
lret
push
push
pop
inc
xor
dec
push
cs
sub
xor
mov
cmp
loop
lret
in
mov
mov
lods
pop
dec
fcomp
iret
clc
jns
movsb
popa
je
test
nop
push
fisubs
es
cmp
fldcw
lock
or
push
or
adc
es
sbb
sub
pop
push
mov
cltd
ret
dec
je
cmp
jl
out
push
cwtl
xor
lret
repnz
cmp
and
in
push
sub
lret
ret
or
mov
and
mov
inc
aas
aas
sub
xchg
dec
aas
fstpt
aas
in
push
fsts
nop
sub
lods
arpl
pop
dec
sub
aam
das
shrb
xor
cld
aas
test
add
inc
sbb
inc
push
mov
and
and
movsb
sbb
andl
pop
xor
pusha
jbe
shlb
int3
mov
lods
jl
sahf
leave
or
aas
push
aas
leave
sub
adc
pop
jo
bound
fbstp
xor
fidivrl
mov
shlb
xchg
fsubrl
iret
addr16
xor
call
dec
mov
jae
shlb
aaa
into
shll
push
test
inc
enter
xor
and
pushf
push
jbe
inc
xor
test
in
push
mov
cs
xchg
lret
lock
clc
push
mov
inc
sbb
in
jb
adc
cmp
sub
arpl
inc
mov
addb
movsb
xor
pcmpgtd
ja
jle
xchg
nop
sbb
xor
shlb
sarb
cmp
or
aas
in
lret
sub
add
inc
hlt
jns
xchg
xchg
xchg
and
sub
jns
lds
inc
cmp
pushf
cs
in
push
xchg
lret
repz
sub
mov
rorb
and
inc
je
mov
fdivrs
cmpsl
dec
ja
mov
xchg
xchg
addr16
adc
inc
sbb
xor
push
cs
cmp
shlb
movsl
jb
pop
pusha
push
sub
movsb
in
push
mov
push
stc
mov
int3
inc
inc
rclb
sub
xchg
out
in
in
xor
adc
inc
pop
sahf
xchg
and
inc
adc
out
dec
in
mov
loopne
xchg
clc
sub
xchg
cld
add
fcoms
inc
stos
cld
fisubs
sub
mov
inc
inc
inc
aas
mov
sub
xchg
lret
in
mov
mov
xchg
xchg
pop
jbe
fists
loopne
add
cmp
out
and
stos
shlb
xor
jno
and
in
or
jns
mov
cmp
inc
inc
xor
cld
inc
inc
xor
js
push
cs
jl
ljmp
movsb
rol
cs
lret
enter
sbb
test
inc
or
in
repnz
adc
xor
daa
xchg
lret
push
push
pop
js
mov
jl
mov
adcb
cwtl
rclb
or
xchg
pop
scas
inc
sub
es
xchg
mov
mov
push
mov
in
nop
int3
dec
in
mov
lock
sbb
mov
mov
and
dec
jns
mov
dec
arpl
and
mov
in
dec
inc
test
jno
stos
mov
repnz
in
xor
and
xchg
lret
in
mov
inc
or
lahf
xchg
inc
or
out
mov
sub
jns
pop
xor
inc
dec
push
in
mov
inc
jo
pop
stc
mov
js
popa
jl
subb
gs
push
xchg
cwtl
pushf
xchg
xchg
xchg
lret
dec
mov
fdivrl
in
push
in
mov
hlt
out
inc
jns
or
rorb
pop
int3
inc
daa
aam
in
lock
sbb
pop
clc
mov
sub
lret
sbb
je
sbb
fists
inc
adc
pop
inc
cld
pop
fidivs
pop
inc
xor
cld
mov
repz
mov
aam
jbe
and
mov
sbbl
or
cmpb
adc
mov
xchg
lret
in
push
xor
mov
daa
dec
xor
shrb
cmp
aam
mov
jmp
mov
mov
js
test
loopne
test
int3
insb
jns
sub
or
xor
repnz
mov
inc
dec
lods
jl
lock
inc
mov
test
pop
fisubrs
push
cmp
lea
adc
test
push
roll
and
jl
cmp
mov
xor
fidivrl
test
es
mov
int3
mov
pop
sahf
lret
jae
or
xchg
or
shrl
xor
push
adc
xor
iret
in
or
sub
in
jo
dec
cs
pop
mov
nop
xchg
pushf
push
push
mov
mov
es
mov
aam
xor
xorb
cld
add
mov
iret
xchg
lret
and
inc
push
inc
inc
push
push
cs
inc
dec
stos
push
fs
mov
mov
scas
lret
nop
jmp
cmp
jg
test
push
or
push
stc
cs
orb
in
mov
ja
xchg
int3
loopne
in
xor
fisttpll
push
or
push
adc
dec
imul
dec
sub
xchg
lret
dec
push
pop
fs
out
mov
xchg
fdivp
pop
sub
adc
dec
pop
jo
dec
dec
jb
sub
clc
cld
pop
cmp
dec
sbb
and
in
repnz
cs
fldl
arpl
push
mov
sbb
push
xchg
lret
dec
test
mov
aaa
push
push
cs
xor
aam
pop
lock
pop
mov
loopne
adc
mov
sbb
dec
cmp
insl
mov
stc
xchg
subl
add
dec
or
and
adc
mov
dec
sub
cmpsl
sar
jns
mov
adc
mov
xchg
insb
jo
push
mov
ret
nop
xchg
pushf
jns
scas
repnz
mov
pop
push
jb
or
cmp
out
cld
xchg
add
dec
and
and
sub
call
cmp
inc
dec
int
test
dec
dec
lds
dec
movsb
dec
dec
dec
cmpl
and
xor
lret
rolb
arpl
mov
adc
dec
test
dec
ret
in
dec
enter
dec
dec
inc
leave
inc
dec
mov
dec
ss
arpl
test
xchg
dec
and
mov
adcb
dec
xor
lret
movsl
mov
and
aam
repnz
cmp
out
lods
xor
cld
daa
add
mov
and
xchg
lret
je
inc
dec
sahf
scas
mov
mov
jo
popa
aas
mov
lock
mov
test
xor
dec
dec
sub
mov
push
dec
xor
push
loop
xor
inc
mov
dec
ss
xchg
out
jecxz
dec
dec
dec
nop
cmp
jb
xor
std
mov
lret
cmp
push
decl
in
xor
inc
js
xchg
xchg
lret
jl
add
pushf
mov
movsb
repnz
dec
and
dec
gs
dec
scas
roll
add
push
dec
push
push
stc
rcrb
lods
inc
mov
movsb
and
sbb
push
shlb
aam
or
or
push
dec
dec
je
dec
and
sbb
sub
clc
mov
fcoml
dec
mov
gs
out
dec
cmp
or
lret
mov
push
jae
cs
mov
int3
sub
fdivrs
pop
jecxz
mov
dec
adc
sub
jns
lds
inc
mov
push
dec
mov
xor
pushf
push
push
xor
jb
pop
shrb
lret
dec
gs
xchg
cs
xchg
mov
mov
call
sbb
add
or
dec
mov
push
sub
inc
scas
xchg
xchg
lret
dec
dec
push
push
mov
das
mov
or
mov
ret
xor
adc
inc
and
ja
orl
sub
test
test
in
sub
int3
in
lock
repnz
clc
mov
pop
sub
xor
inc
sahf
dec
movsl
repnz
in
fnstenv
je
js
xchg
sub
xchg
cwtl
xor
pop
dec
mov
mov
jb
loopne
add
pop
cmp
or
cmpsl
and
jecxz
in
sub
dec
inc
dec
dec
fwait
mov
mov
and
xchg
jo
dec
repz
jl
inc
pop
arpl
pushf
outsl
dec
xor
fstps
push
das
xchg
sbb
mov
iret
movsl
stos
cmp
mov
in
push
sub
enter
cmp
dec
call
dec
dec
movsl
pop
stc
adc
dec
inc
xor
ds
xor
sub
dec
dec
cmp
addr16
jnp
pusha
and
repz
sub
or
cmp
dec
xor
cmp
or
das
xor
hlt
dec
jbe
xchg
dec
dec
sbb
dec
push
xor
mov
dec
inc
and
sub
jb
pop
pusha
cmpsl
inc
inc
dec
dec
xchg
lret
in
push
jecxz
push
push
cs
xchg
lcall
mov
mov
in
repnz
fsubl
xchg
iret
lret
dec
clc
cld
add
lahf
sbb
xchg
lret
and
xchg
lods
inc
ds
push
das
mov
mov
push
or
push
sub
mov
sub
sub
mov
notl
pop
jl
out
mov
andb
mov
sbb
push
or
jno
test
movsb
inc
loopne
lret
in
inc
add
sub
push
sub
push
sub
or
cs
cmpsl
inc
in
dec
gs
jle
dec
push
mov
cmp
lret
std
dec
inc
mov
lods
mov
xchg
lret
or
aam
pop
dec
sub
push
dec
hlt
clc
cld
push
mov
sahf
inc
sbb
push
and
cmp
inc
inc
gs
mov
push
push
sub
xchg
dec
push
dec
jne
push
push
enter
in
cs
push
push
mulb
or
inc
je
jl
repz
xchg
push
fcoms
sub
mov
repnz
and
and
sub
push
add
or
fcmovnb
inc
pushf
adcb
cmp
xor
fs
dec
stc
push
sahf
shr
push
pop
dec
cmp
test
in
js
xchg
push
fnstsw
dec
jns
es
push
jbe
xlat
sub
in
inc
mov
mov
push
adc
sub
pop
cmp
push
sub
sbb
pop
aaa
cmp
pop
dec
cmp
cwtl
jp
pop
aaa
or
cmp
push
ret
push
lret
or
lret
dec
gs
ja
movsb
test
daa
iret
xchg
lods
pop
xchg
inc
enter
cmp
hlt
ret
adc
mov
xchg
and
fs
cs
lret
fsub
es
mov
push
cld
add
or
test
movsb
mov
and
push
xor
pushfw
lods
repnz
push
sub
ror
test
je
test
push
pop
in
test
mov
and
jns
fsubs
cld
adc
add
cmp
les
out
push
or
push
fimull
push
push
push
xor
xchg
lret
dec
pop
pop
pusha
jo
inc
mov
push
push
xchg
test
pop
dec
movsb
test
fwait
lods
push
cs
xchg
xchg
mov
cmpsl
enter
xchg
dec
rcl
lcall
in
lock
and
xor
adcb
adc
dec
sahf
lahf
push
loopne
inc
xor
jb
cmp
xor
lahf
xchg
subb
test
xchg
out
inc
push
push
or
test
sti
ds
fs
push
repz
push
inc
push
xor
mov
sub
insl
sbb
push
aaa
enter
je
cmp
inc
push
dec
pop
out
cs
insb
pusha
fs
sub
dec
movsl
sbb
dec
push
push
pop
stc
and
movsb
sbb
in
enter
push
push
fsts
push
push
outsb
push
xor
mov
or
adc
sbb
dec
cs
lret
xor
scas
pop
pop
clc
jge
je
imul
pop
cli
push
aaa
gs
sbb
pushf
jnp
rorb
cmpsb
loopne
test
inc
cmp
adc
dec
loope
dec
cmp
test
mov
xchg
dec
in
cmp
rcr
xor
sbb
cld
xor
loopne
fs
sbb
adc
cmp
subl
inc
sub
pop
pop
pusha
push
push
cmpb
bnd
movsb
test
mov
enter
enter
mov
stc
loop
xchg
push
push
notb
inc
aad
out
cmp
add
or
push
jg
movsb
sbb
push
push
push
cmpsb
pop
mov
push
push
jns
dec
in
push
jo
js
pop
sub
mov
mov
mov
in
fwait
lret
cmp
pop
pop
je
fsts
inc
pop
pop
pop
stc
fimuls
pop
adc
xor
clc
sbb
pop
jo
push
or
push
or
lcall
repnz
dec
adcl
xor
jl
sub
cmpl
add
mov
add
in
mov
or
hlt
jl
jae
andb
arpl
in
fstl
imul
pop
or
daa
xor
cmp
push
mov
test
pop
cmpsl
je
pop
pop
push
inc
pop
das
sub
inc
insb
jo
movsl
je
xor
sbb
pop
pop
arpl
scas
pop
outsb
xchg
fbstp
inc
mov
cmp
fsub
out
outsb
sub
lods
gs
pop
pop
les
jae
sbb
pop
pop
in
fwait
inc
sahf
fwait
lret
pop
pop
inc
sub
dec
fsts
pop
xor
xor
loope
mov
or
xor
pusha
nop
sbbb
das
dec
pop
xor
inc
mov
cmp
les
iret
push
test
in
daa
lock
pop
or
rcll
cmp
hlt
add
pop
xor
cmp
pop
push
sbb
out
into
repz
xorl
cmpb
xor
mov
sbb
mov
daa
xchg
or
inc
outsb
aam
cmp
push
fcoml
cmp
jle
sbb
and
movsb
mov
and
jo
inc
cs
xchg
fisttpll
pop
outsl
fs
pop
insb
mov
imulb
mov
lods
pop
outsb
xchg
pop
shlb
aam
sbb
jb
test
sub
das
scas
sahf
sbb
pop
and
mov
pop
lret
int
mov
pop
or
pop
dec
sub
mov
dec
push
test
sbb
pop
sub
out
cld
adcb
loopne
mov
test
movsb
je
xchg
iret
add
pop
or
mov
cmp
repnz
xor
ss
lret
and
or
push
mov
cmp
jno
fs
mov
adc
call
dec
sub
mov
mov
xchg
jbe
fs
and
lock
inc
test
pop
fisubrs
mov
cmp
pop
repnz
jmp
int3
fldl
in
repnz
jno
pop
rcl
sub
int
pusha
adc
mov
or
addb
pop
sub
pusha
pop
insb
fldl2t
jae
daa
jo
dec
adc
pop
enter
xchg
xor
cmp
fdivrs
mov
jg
gs
hlt
clc
aaa
or
cmp
xchg
aam
sbb
pop
sub
inc
mov
pop
aas
push
mov
mov
je
sti
jo
test
ja
je
sub
pop
lahf
inc
test
int3
fldt
in
mov
pop
popa
clc
cld
inc
push
and
adc
pop
sbb
jbe
pop
pop
and
test
xor
cmp
pushf
push
pop
pop
mov
jl
in
cmp
xchg
xchg
outsb
push
dec
ffreep
enter
xchg
fst
inc
cmp
call
loope
pop
lods
aaa
mov
test
sahf
shl
pop
xor
rcl
cs
fwait
jl
fdivrs
sbb
sahf
lret
xor
cld
jle
sbb
in
xor
pop
cmp
pop
xor
pop
sahf
dec
fsubl
push
jo
test
mov
mov
ja
cs
jl
ret
cmp
cmp
pop
adc
pop
mov
xor
mov
ret
pop
pop
jge
pop
fs
roll
js
and
iret
xchg
mov
rcrl
mov
jge
or
in
stc
cmp
fcomps
add
pop
mov
add
adc
xchg
out
out
mov
and
cmp
jl
jle
cmp
jae
aas
dec
inc
in
pop
sahf
out
pop
pop
insb
sub
or
aaa
nop
adc
ja
cs
test
mov
enter
jl
int3
or
xor
in
jge
stc
mov
or
aaa
cld
fdivrl
jo
cmpsl
pop
pop
or
pop
adc
into
sti
sbb
cmp
inc
xor
push
popf
cmp
fsubrs
adc
inc
je
gs
fsubl
pushf
dec
les
cs
pop
mov
in
mov
pusha
mov
pop
sub
adc
xchg
xchg
out
cmp
imul
gs
pop
mov
dec
xchg
lret
and
cmp
mov
jb
cld
xchg
cwtl
mov
mov
repnz
test
adcb
mov
mov
xor
dec
in
enter
iret
movsl
push
mov
cld
push
ds
xchg
jl
pusha
adc
pusha
sbb
cs
ja
aam
pop
inc
mov
iret
in
pop
fs
js
je
jb
cs
cmp
lods
out
shl
cmp
jmp
mov
cmp
loopne
in
in
jns
sbb
popa
add
insb
out
daa
xchg
xchg
dec
push
dec
sahf
sub
mov
jo
mov
pushf
push
nop
xchg
mov
fstl
cmp
popa
add
xchg
fisttpll
pop
aas
fcomp
and
sbbl
inc
call
or
sub
in
xchg
cmp
xor
push
sbb
int
add
in
adc
rorb
cld
jnp
sub
popa
mulb
lret
in
xor
push
push
pop
mov
jns
pusha
int3
je
js
xlat
pop
sahf
outsl
xor
cwtl
popa
pushf
loope
xchg
ja
mov
pop
int3
jl
in
mov
in
call
cmc
bnd
jmp
or
insb
cmp
bound
dec
ficoms
and
dec
bound
push
bound
inc
insb
pop
cmp
nop
xor
mov
mov
adc
sub
xchg
xchg
fadds
clc
cld
jl
sub
sbb
mov
and
inc
lret
push
clc
daa
inc
fsubrl
sub
pop
jns
bswap
cmp
pop
pop
inc
out
mov
jo
je
aaa
cmpb
cwtl
pushf
movsb
out
jl
in
mov
mov
cld
jp
add
nop
dec
bound
call
lods
jl
arpl
arpl
arpl
sbb
test
xor
dec
in
rorb
je
xchg
out
lods
insb
jo
repz
mov
mov
pushf
push
push
enter
pop
mov
jb
hlt
clc
out
ja
fs
repnz
test
lret
fidivs
fs
jp
xchg
xchg
xchg
test
push
dec
sub
xchg
jl
rolb
pop
cmpsl
loopne
lock
push
push
sub
mov
sbb
les
iret
and
call
cs
add
mov
sbb
fs
push
test
jns
dec
lret
in
push
in
cs
and
mov
mov
mov
enter
mov
rolb
lret
movsb
aam
faddl
in
jo
in
mov
fs
sub
gs
mov
repnz
jns
movsb
bound
inc
cmp
pop
imul
ja
mov
pop
inc
xor
cmovs
jnp
and
xor
push
imul
push
lahf
addr16
push
jae
cmpsl
imul
add
gs
dec
ja
sbb
or
or
mov
jns
inc
or
mov
sub
sub
sbb
jnp
jns
cwtl
add
jl
out
mov
mov
mov
lret
in
rcl
fsub
shl
jb
pop
lock
clc
cld
xchg
xchg
xchg
out
mov
sbb
mov
and
test
jae
js
bound
dec
pop
sub
fs
jo
sarb
idivb
test
pop
mov
or
jne
pop
fldcw
iret
xchg
cwtl
jp
lret
dec
test
lods
pop
andb
or
add
daa
cmc
dec
dec
leave
add
movsb
fmull
sub
jg
mov
jge
pop
imul
xchg
mov
mov
push
and
movswl
or
dec
or
mov
aad
pusha
push
push
adc
inc
data16
or
inc
lea
dec
sub
repz
int
mov
daa
dec
dec
sbb
popl
inc
sub
mov
lret
mov
pop
in
pop
clc
cmp
adc
clc
bnd
cs
leave
cli
sbb
cmc
je
jecxz
fcmovnb
add
inc
cmp
loopne
mov
fwait
cltd
lcall
add
xchg
inc
or
in
dec
jp
adc
call
sbb
cmp
in
das
sbb
sub
or
xor
mov
dec
pop
cmp
adc
jmp
jne
jae
mov
and
cmc
mov
in
jo
mov
pop
or
gs
lods
cld
repnz
jbe
pusha
inc
adcl
mov
in
dec
test
mov
loopne
decl
sub
ret
je
hlt
adc
add
cmp
or
sti
push
pushf
cmp
je
push
adc
jb
neg
jnp
mov
or
xor
int3
cmp
pop
xchg
loop
je
or
repz
inc
inc
sub
add
push
insb
mov
ret
fisttps
and
ja
xor
sbbl
adc
xor
inc
stos
xor
dec
push
nop
push
cmpsb
pop
xchg
pop
jns,pn
jnp
lcall
push
push
xchg
jg
mov
cmp
out
push
mov
jmp
adcb
pushl
lock
mov
test
rorl
out
adc
int
mov
or
dec
lret
insb
cs
or
inc
icebp
adc
or
mov
es
push
jmp
icebp
ficompl
inc
xchg
xor
mov
xchg
mov
push
pop
sbb
dec
xor
jbe
xor
sbb
repz
inc
fadds
cmp
add
out
lea
test
lock
sub
xchg
jne
jo
shl
mov
jns
push
das
fst
jle
adc
loopne
loopne
ja
scas
xor
mov
inc
repnz
adc
movzwl
xchg
push
je
sub
lds
cmp
gs
mov
sbb
out
cmp
push
push
mov
inc
xor
sub
imul
fcoml
loopne
push
adc
stc
push
sbb
xchg
inc
ss
pop
mov
orb
add
add
imul
dec
or
ljmp
fdivrl
cwtl
hlt
xor
xchg
push
cvtps2pi
fcompl
fstpl
in
dec
movsl
xor
sahf
cwtl
add
js
sub
lods
js
ficomps
lret
in
adc
and
and
inc
cmp
test
push
and
push
into
repz
cmpsl
mov
cmpsl
shl
cmpb
nop
adc
push
jnp
add
stc
mov
mov
sbb
mov
push
sahf
jl
mov
cmpb
jge
es
sbb
inc
fwait
xor
fcomp
jne,pt
adc
test
out
cmp
or
mov
dec
dec
add
pop
and
push
call
dec
shlb
sarb
cmpl
into
daa
clc
or
cwtl
xchg
dec
xchg
lret
cmp
xchg
jnp
mov
mov
dec
sarl
test
dec
scas
inc
or
orb
test
jle
clc
mov
pop
xchg
aaa
mov
or
lock
add
cs
mov
push
popf
jbe
mov
movl
or
jmp
cmpsl
addl
xor
loope
sub
imul
push
push
mov
int3
jne
ret
push
clc
sbb
mov
in
add
xchg
outsl
add
pop
fs
push
jae
sbb
xchg
repnz
push
push
xor
popf
mov
ret
push
ja
ljmp
pop
inc
add
sbb
test
xlat
xor
daa
pop
loopne
inc
popa
aaa
orb
test
leave
pop
andb
cmpl
inc
add
xor
popa
movsl
test
sarl
lea
shr
adc
xchg
pusha
mov
pop
imul
subl
or
and
ja
cmp
xchg
inc
loope
loopne
and
aad
or
out
add
mov
pop
aad
rolb
adc
dec
out
lock
std
mov
or
adc
mov
mov
sbb
andb
clc
add
data16
cmp
jb
cmp
and
mov
inc
shrb
add
mov
add
js
loopne
xor
pop
push
mov
jl
stc
sbb
and
mov
xor
ljmp
es
test
test
cld
fsubr
mov
dec
xchg
div
test
or
mov
mov
mov
push
loopne
lods
dec
cmpsl
fstps
sbbl
pushf
scas
lret
fimull
jecxz
sbb
in
or
mov
dec
mov
xor
mov
mov
push
push
sbb
sti
xchg
jno
add
xchg
stc
push
add
add
int3
cmp
es
or
mov
mov
sbb
sub
rorl
mov
push
xor
cmp
inc
or
add
mov
sub
cmp
sub
or
or
xor
movsl
fstpl
shrl
lock
out
xor
movsb
xor
fstpt
push
addb
jb
mov
and
outsb
fwait
and
push
add
pop
mov
es
xor
rcr
or
orb
adc
cmp
cmp
push
cmpsl
lock
push
jmp
push
in
cmp
sbb
call
pushf
dec
add
ds
test
push
mov
sbb
mov
adc
jl
add
sub
or
js
or
add
sbb
mov
push
xchg
inc
add
sahf
scas
adc
sub
stos
popa
mov
dec
xor
pop
cmp
cld
sahf
notl
push
cmp
fs
push
add
insb
jo
xor
ljmp
sbb
negl
dec
cli
sbbl
add
in
sub
out
jmp
cmp
jo
push
into
and
sbbl
push
loopne
shr
les
push
mov
mov
je
pop
xor
jae
popl
movsb
add
movsb
adc
stos
xchg
adc
scas
add
stos
das
or
push
ljmp
add
mov
xor
xor
sub
cmp
outsl
movsl
inc
pop
sti
sub
je
ss
adc
lahf
insb
jo
lock
jnp
cs
cmp
data16
test
push
cld
add
inc
mov
inc
jmp
sub
bound
inc
test
xchg
push
pop
fmul
xchg
xor
xor
adc
cmp
stc
inc
mov
or
and
cmpsl
push
call
jae
ss
insl
andl
int3
insb
js
loopne
sub
mov
cmp
or
mov
push
push
cmp
inc
mov
jo
cld
push
sbb
sbb
adc
outsb
sbb
insb
pop
dec
add
addl
outsl
mov
xor
je
ds
xchg
lock
cmp
mov
sbb
dec
or
lea
cmp
outsb
sub
jnp
pushf
data16
or
jne
dec
adc
nop
cmpb
loope,pt
orb
mov
inc
mov
je
enter
lahf
test
aaa
mov
js
mov
cmp
in
adc
popa
cmp
outsb
mov
mov
rol
sbb
loopne
inc
clc
mov
cwtl
sbb
cmp
cmpsl
fnstenv
inc
movsl
cmp
loopne
xlat
add
orb
cmp
add
out
mov
sarb
repnz
push
lahf
out
add
xor
or
rcll
data16
out
jns
push
or
cmp
cmp
lea
or
and
sub
mov
push
xchg
ret
hlt
ss
mov
and
adc
repnz
mov
jg
mov
mov
add
pop
push
add
cmp
dec
mov
shlb
loop
sbb
in
xor
cmp
adc
xor
int
orb
dec
mov
mov
jo
push
fidivs
fisttpll
dec
mov
in
cmp
jb
lret
or
inc
or
lahf
test
inc
xchg
adc
adc
imul
nop
loopne
popf
iret
lds
cltd
out
cs
test
aam
sbb
fcoms
xorb
push
push
cmp
repz
js
sbb
sbb
adc
adc
outsb
and
orl
push
lret
push
dec
sar
push
pusha
and
jnp
addl
adc
add
test
cmp
je
hlt
sbb
xlat
lea
mov
cmp
pop
pop
or
shrl
inc
mov
adc
xorl
sub
xchg
shll
rcl
mov
sub
jp
dec
or
cltd
mov
stos
cmp
xchg
test
movsb
push
dec
xchg
adc
cmc
inc
push
xchg
dec
rdpmc
push
nop
arpl
mov
mov
add
xor
idiv
adc
ss
jecxz
mov
out
cmp
ds
pushf
sub
out
sti
cmp
psubd
rdseed
cmpsb
ret
mov
push
add
cmp
xchg
cmp
in
testl
xchg
jle
outsb
inc
gs
mov
test
push
dec
mov
inc
jl
dec
jmp
push
push
inc
push
mov
or
dec
xor
xor
enter
cld
sub
lret
push
push
jo
inc
sub
aad
inc
jae
adc
adc
pusha
jnp
xor
inc
dec
adc
add
stos
cmpsl
cmp
add
jle
jmp
push
fstpt
mov
jmp
mov
dec
clc
ret
xchg
scas
add
inc
mov
loope
and
or
lods
mov
cwtl
cltd
lea
mov
cmpsb
rcrl
mov
xor
test
pop
cmpl
mov
mov
jo
inc
push
cmp
adc
shrb
or
adc
adc
cmpsb
xor
sub
and
push
cmp
xchg
add
sahf
insb
lea
add
dec
jge
adc
dec
adc
cmp
fdivrs
aas
inc
and
mov
cmp
movb
out
dec
adc
cmp
das
jo
pop
pop
outsl
jne
adc
fimuls
lea
and
jb
dec
test
aas
aaa
imul
inc
cli
inc
popa
fildl
sahf
adc
jns
pop
daa
cmp
scas
cltd
inc
inc
wrmsr
push
cmp
or
or
push
sbb
lods
mov
adc
inc
into
repz
mov
sbb
lret
outsb
les
inc
fidivl
arpl
dec
cmp
leave
dec
ss
sub
pop
and
ret
cmp
cmp
repnz
cmp
cmp
cmp
nop
pop
or
and
mov
loopne
sub
call
xor
das
in
cmc
or
dec
sbb
sbb
xor
lock
loopne
dec
adc
or
fwait
mov
cmp
add
lock
mov
daa
inc
ljmp
movb
or
cmpsb
mov
jmp
lea
lea
jb
ja
cmp
je
and
aaa
loopne
xchg
orl
cmp
jg
xchg
aaa
andb
xor
pusha
js
call
pop
loopne
decl
ja
sub
xor
and
and
out
addr16
lret
or
or
add
fnstcw
push
cmpsl
cld
es
popf
pusha
sbb
cmp
dec
lds
jne
cmp
outsb
mov
lcall
dec
scas
cmp
add
scas
cmp
cmp
cmp
cmp
sub
and
push
pop
mov
pop
jmp
pop
or
mov
xor
out
and
jno
jo
mov
push
xlat
ret
in
pop
or
das
xor
or
and
rcrb
pop
repnz
or
pop
cmp
cmpl
orl
lods
rolb
push
mov
add
or
xchg
pop
sti
xor
into
and
xchg
out
add
adc
ljmp
cmp
adc
out
sbb
inc
pop
sub
jns
in
push
cmp
xchg
nop
cmp
inc
out
scas
pusha
mov
stc
jbe
rorb
push
and
jb
aam
push
inc
test
lcall
movl
jle
rcrb
push
cmp
repnz
cmp
cmp
fisttps
stos
cmp
mov
xor
adc
out
mov
lds
add
fiadds
clc
sbb
lock
mov
lods
and
add
ds
leave
mov
or
notl
and
into
sub
pop
call
xor
and
push
jb
and
call
xchg
clc
sarb
add
push
push
sub
cltd
cli
cld
jg
clc
movsb
lea
adc
pop
mov
cmp
repz
add
push
imul
scas
cld
push
add
mov
jne
xchg
movsbl
fidivrs
xchg
adc
sbb
dec
adc
or
cmp
push
adc
or
fcomp
sbb
adc
or
or
cs
cmp
or
sbb
stos
fisubrl
pop
jmp
ljmp
stos
pop
stos
pop
cmp
add
je
mov
in
push
ss
adc
jl
lds
inc
jge
or
push
dec
shrb
test
test
jbe
mov
mov
imul
movzbl
jnp
dec
lds
xor
inc
add
out
add
pop
inc
xchg
cmp
stos
ret
push
jmp
movsl
and
jbe
push
out
scas
lods
cmp
les
js
ja
sbb
inc
and
pushf
ret
cmp
inc
dec
inc
pop
and
mov
push
or
sub
or
inc
dec
pop
addr16
push
clc
xchg
add
inc
mov
xor
sbb
inc
adc
inc
inc
xor
in
inc
pop
inc
bound
fcoml
mov
sbbb
jne
xchg
jno
adc
shrb
lahf
jne
mov
andb
cmpb
add
inc
sbb
jge
clc
or
adc
adc
pop
push
sbb
repnz
add
cmp
lcall
cmp
cmp
jo
mov
fimuls
scas
jp
enter
cmpsb
aas
mov
int3
aas
sbbl
fdivrl
jecxz
cld
aas
mov
and
aam
addl
xor
fiadds
pop
or
test
push
xchg
inc
jo
dec
sub
dec
cmp
sbb
or
push
push
push
adc
iret
stos
sti
push
ja
sub
icebp
jne
fwait
mov
popf
int3
inc
mov
pushf
adc
ucomiss
xor
sbb
mov
add
dec
cwtl
mov
bound
stos
pop
mov
repnz
int3
xchg
sahf
push
jb
or
pop
mov
outsb
insl
mov
xor
mov
add
jecxz
mov
inc
xor
pop
ja
pop
push
and
lods
fisubl
dec
push
mov
mov
add
pop
push
inc
lock
test
ds
dec
mov
test
inc
nop
movsb
loopne
clc
jecxz
push
push
insb
or
out
and
add
ljmp
pop
or
and
push
xchg
je
cmp
ficomps
sub
push
popa
adc
inc
push
lock
roll
sub
or
les
xchg
add
sbb
or
movsl
or
pop
subl
push
sahf
mov
cmp
scas
cld
insl
push
push
aam
push
and
mov
imul
jl
lock
add
in
xor
iret
pop
inc
jo
stos
ret
adc
fsubr
lock
add
pop
and
mov
testl
repz
jl
aam
jl
loop
jle
inc
lea
pop
add
imul
or
ljmp
ds
mov
sahf
inc
ret
mov
out
lods
mov
jmp
fidivs
adc
xchg
xchg
inc
rclb
or
shll
fwait
jb
fildl
add
add
scas
push
lcall
imul
pop
repz
je
dec
shlb
xlat
insb
dec
out
add
call
sahf
push
iret
ljmp
mov
ss
out
jns
lods
mov
push
sbb
fidivrs
push
movsb
ds
push
adc
pop
add
pop
pop
add
add
push
pop
or
mov
movups
adc
adc
adc
jbe
orb
mov
mov
xor
orb
and
lods
pop
cmp
jmp
inc
push
mov
nop
cmp
shrb
cmpsl
inc
mov
sub
add
jbe
push
mov
xor
lock
fiadds
or
scas
sub
mov
inc
scas
push
inc
mov
in
xchg
push
iret
push
fcoml
push
repz
add
dec
dec
das
sub
add
int3
or
sub
xchg
or
test
gs
pop
or
inc
adc
sbb
lods
and
mov
jo
jp
adc
dec
pop
cmp
nop
gs
testl
je
jns
xchg
sbb
fiaddl
mov
nop
xor
movb
mov
jmp
sub
es
pop
mov
push
inc
jne
xchg
sbb
or
xor
xchg
xchg
dec
mov
push
sub
out
push
sbb
add
and
das
repz
mov
xchg
push
lock
dec
add
fnsave
in
dec
mov
adc
out
sti
add
aas
fld
fnsave
shl
mov
pop
test
aam
push
add
pop
ss
dec
fstp
fildl
fcompp
fnstsw
test
mov
in
sbb
and
outsb
add
mov
enter
dec
pop
push
dec
ss
add
inc
out
js
mov
mov
push
pop
mov
dec
push
in
xchg
inc
loop
push
je
adcb
xor
push
xchg
dec
stc
ret
add
aas
scas
inc
push
push
dec
mov
scas
dec
mov
jl
dec
mov
jmp
loope
leave
testl
testw
inc
inc
sub
mov
loop
adc
mov
bound
mov
sbb
add
add
fcomps
sub
push
sbb
mov
mov
push
mov
pop
xchg
in
sarl
add
push
or
or
jge
ds
repz
adc
xor
fldenv
mov
jp
inc
mov
or
or
xchg
repnz
pop
cmc
lods
add
pop
jle
add
aam
add
mov
jne
dec
sahf
jl
jp
mov
inc
dec
pop
das
roll
in
push
jp
stc
movsl
inc
mov
pop
jne
inc
imul
inc
or
cmp
aaa
je
daa
sbb
push
test
push
mov
jg
dec
inc
fcompl
and
or
enter
fisttps
push
and
icebp
mov
xor
jl
cmp
jne
imul
lea
cltd
mov
mov
cltd
add
adc
jg
xchg
add
jg
fcmovb
int
rcrl
js
outsl
or
add
scas
mov
pop
jbe
push
adc
fisttpll
sub
mov
push
xor
or
and
mov
call
mov
mov
mov
add
mov
test
es
xor
push
jo
sbb
out
inc
or
out
out
or
push
xchg
rcl
mov
pop
jmp
mov
or
jl
movsb
dec
add
push
cmp
orl
mov
pop
lcall
sbb
or
emms
inc
ss
cmc
mov
test
mov
adc
sbb
sub
imul
icebp
scas
insb
mov
adc
cwtl
test
push
add
stc
mov
repnz
xor
mov
sub
stos
add
es
adc
push
adc
test
aas
add
cmp
cmpl
adc
dec
fcmovnb
cmp
or
sub
add
enter
mov
xor
jb
jge
or
xchg
test
xlat
pop
cmpl
mov
movsl
into
pcmpeqw
xchg
nop
fwait
rol
push
testl
xorb
inc
insb
das
in
push
sbb
movb
cmpsl
inc
shrl
fs
push
movsl
mov
cmpsb
and
std
cmpsl
or
or
notl
mov
xchg
jne
popl
add
test
mov
ds
test
cmpsl
insl
incl
in
inc
add
push
push
ds
repz
test
dec
xor
xlat
push
dec
push
ljmp
mov
cmp
je
cmpb
jne
or
insl
cli
jg
adc
mov
pop
decl
pop
ret
mov
xchg
aas
jno
push
test
inc
or
push
outsb
push
jmp
fisttps
sub
inc
and
js
pushf
pop
ret
idivb
les
mov
mov
adc
xor
cmp
test
adc
out
xorl
mov
mov
push
mov
xlat
dec
mov
lcall
idivl
das
push
mov
jns
pop
addl
push
inc
pop
cmp
push
test
inc
xor
push
push
or
or
pop
add
fmuls
jno
mov
push
jo
and
arpl
xchg
push
push
jle
mov
push
filds
loope
jmp
xchg
adc
xchg
std
or
fs
fsubl
fldz
or
call
scas
xchg
lods
sub
push
mov
mull
inc
subl
leave
inc
sub
or
stos
leave
or
ds
cmp
lahf
es
pushf
or
cmp
jmp
add
mov
mov
mov
or
hlt
notb
adc
push
scas
shrl
jecxz
push
jae
test
mov
lfs
sbb
stos
imul
imul
inc
rorl
cltd
ss
jecxz
rorl
test
jecxz
imul
lret
cmpb
call
loopne
inc
jae
jg
int
mov
cs
push
lods
daa
add
add
mov
fistps
push
push
call
mov
lods
xchg
movsb
fs
or
movb
ds
pop
cmp
cmp
test
lret
cwtl
cmp
or
push
or
and
or
mov
mov
faddl
aam
daa
adc
pop
add
dec
fadds
dec
add
jg
mov
cmp
jb
lock
and
loope
mov
bndstx
adc
xchg
jp
loope
fildl
push
cmp
lods
ret
hlt
negb
or
sbb
rclb
ret
dec
or
and
clc
dec
or
mov
test
xchg
test
rorb
xchg
lock
shll
push
inc
test
xor
xchg
jmp
cmpsb
jae
int3
test
inc
or
jp
lds
sbb
aam
mov
test
and
inc
jmp
mov
lea
sub
inc
loope
ret
add
das
cmp
jo
push
loope
jno
cmp
popf
arpl
mov
inc
cmp
pop
mov
mov
mov
push
ds
add
mov
inc
xchg
test
cwtl
cwtl
jg
adc
push
incl
lret
decl
lcall
inc
es
imul
orb
inc
xchg
mov
jnp
mov
jbe
cli
inc
jge
inc
fs
movsb
inc
je
scas
pop
or
adc
sbb
inc
orb
pusha
xor
das
dec
cld
and
aaa
jne
xor
dec
pop
mov
call
das
pop
adc
ret
xor
mov
push
inc
scas
inc
cmp
sbb
je
test
mov
push
inc
or
dec
pop
or
pop
icebp
ja
ja
adcb
add
cmp
nop
shlb
pop
loopne
mov
decb
movl
push
mov
dec
loop
lret
xor
inc
andnps
fisttpl
push
das
stos
cmp
inc
jg
mov
jne
cmp
pop
mov
imul
pop
les
inc
bound
loope
mov
rolb
rcll
and
ss
push
xor
ds
jmp
sbb
and
adc
mov
das
adc
lods
inc
lods
push
jle
adc
pop
dec
add
add
or
mov
mov
mov
rol
fdiv
cs
adc
adc
movsb
rolb
xorl
fwait
inc
mov
cmp
or
mov
or
fsubl
adc
mov
mov
adc
pop
call
dec
xor
test
cmp
inc
xchg
jbe
ljmp
and
sbb
lea
popa
and
adc
divl
int
cmp
xchg
xchg
or
cs
lret
dec
dec
push
push
pop
push
and
mov
jl
mov
add
addl
jne
sbb
dec
ret
xlat
mov
orb
rcll
aas
cmp
inc
lods
mov
movsl
and
push
test
mov
sbb
addb
cld
push
pop
xor
mov
adc
dec
out
cmpb
push
fs
cmpsb
xor
or
shrb
mov
xor
ret
push
es
std
sti
es
dec
dec
jnp
pop
and
jno
or
dec
inc
sbb
jbe
roll
push
dec
mov
or
inc
inc
dec
je
pop
js
lret
pop
data16
imul
clc
fisttps
inc
mov
lods
movsb
mov
in
sub
sbb
clc
es
insl
shrb
lahf
or
push
sub
or
fisttps
xor
orb
add
test
mov
sarb
or
xor
les
or
jl
test
dec
add
mov
pop
xlat
mov
sub
into
ds
sbb
sarb
lods
pushf
rorl
fsubrp
ljmp
aam
adc
daa
jo
add
hlt
push
arpl
in
clc
jge
sbb
sbb
push
addr16
inc
mov
outsb
fildl
sahf
add
cli
and
fstpl
repnz
fmull
push
js
cmp
popf
xlat
scas
cltd
lea
mov
fmulp
xor
add
leave
lea
cmp
adc
or
adcb
mov
rorb
mov
jge
push
int3
and
adc
test
in
je
movsb
jo
out
lea
stos
push
adc
rol
jge
pop
call
dec
test
fisttps
mov
cmp
ljmp
jg
mov
stc
inc
mov
adc
in
or
mov
pop
adc
int3
insb
mov
pop
push
adc
and
sbb
test
scas
clc
cld
mov
cmp
call
aad
xchg
lret
in
or
dec
dec
push
jnp
pop
cs
pop
pop
pusha
orb
mov
xchg
mov
stc
mov
mov
jb
ja
addr16
pushf
mov
movsb
aaa
test
mov
cs
inc
cs
pop
xchg
mov
aam
pop
push
fdivrs
divl
mov
addb
aas
xlat
stos
or
push
dec
ret
dec
mov
aas
xchg
mov
jl
push
fxam
repnz
pop
push
fidivl
cmp
sub
add
sub
and
inc
aam
xor
lock
fldt
je
jge
or
xchg
lret
in
adc
adc
repz
mov
or
add
sub
mov
push
pusha
insb
and
cmp
cmp
std
push
sbb
sub
xchg
pop
cmp
cmp
pop
mov
push
lds
jbe
adc
sahf
or
or
lahf
xchg
rolb
cmpb
std
dec
cmp
ja
dec
push
fisubs
repnz
mov
loopne
mov
mov
shll
data16
add
ja
add
shrb
clc
sbb
mov
call
push
push
push
dec
sarb
jbe
je
mov
mov
rclb
ret
inc
jp
bound
jae
imul
lods
jne
mov
xchg
ffree
fists
outsb
mov
stc
ret
or
sbb
xor
or
stc
dec
lea
insb
adc
int
fdivrl
cmp
xor
inc
push
mov
ret
adc
inc
adc
in
inc
adc
xor
mov
add
cltd
cwtl
adc
les
aam
sub
push
je
mov
ret
cmp
add
or
inc
and
hlt
rorl
xchg
shlb
mov
xchg
mov
cmp
cwtl
jp
pusha
push
dec
mov
push
push
mov
mov
pusha
movsl
out
add
jo
adc
mov
pop
jle
jp
mov
movb
cmp
dec
insb
test
sbb
mov
jp
push
mov
arpl
xchg
inc
inc
jnp
mov
push
call
mov
pop
aaa
pop
mov
pop
ljmp
loopne
mov
je
lcall
xchg
jo
jp
mov
push
inc
inc
cmp
dec
jecxz
push
mov
pushf
jbe
clc
js
jne
out
mov
mov
stos
sti
adc
sub
pushl
sbb
inc
call
popf
rorb
dec
jl
add
adc
fcomp
ret
sub
xor
mov
xchg
lahf
mov
sarb
arpl
jno
movsl
and
jecxz
sbb
mov
push
push
test
filds
mov
adc
cs
pop
and
or
cs
ret
jns
or
pop
dec
pusha
pop
dec
pop
imul
popf
jb
sahf
mov
sub
je
pop
sbb
xchg
js
push
jnp
cmpb
test
repnz
push
adc
lcall
or
xor
add
insl
sbb
negb
pop
xchg
lock
pop
or
mov
stc
lock
sub
loop
sub
das
xchg
xorb
ljmp
pop
loop
cmp
cli
inc
jo
mov
lods
shl
popa
mov
out
clc
jno
movl
mov
stos
or
or
insb
jp
aad
sbb
mov
add
push
jge
fdivrs
mov
xchg
rcl
fisttpll
add
insl
hlt
pop
ror
inc
jge
mov
and
jecxz
or
shr
mov
fs
mov
insb
or
xchg
or
jecxz
icebp
fadds
add
jecxz
push
cltd
idivl
aas
and
scas
rolb
repnz
lock
xchg
push
xchg
or
cmpl
adc
and
rolb
or
pop
xor
pop
cmp
mov
sarb
popa
xorl
inc
sub
push
lret
dec
jae
push
adc
mov
xor
sbb
repnz
pop
inc
mov
mov
inc
or
ret
jne
into
inc
dec
mov
loop
fs
mov
sysexit
mov
stos
sahf
inc
dec
in
jmp
ljmp
popf
inc
or
jns
adcb
cmp
add
add
jmp
sub
push
rolb
adc
mov
or
les
sbb
xchg
sbb
adc
xor
rolb
clc
inc
inc
fsts
test
jne
xchg
scas
push
dec
push
push
sbb
push
lea
mov
mov
ret
push
xchg
int3
das
push
lea
arpl
leave
and
xor
adc
lods
push
inc
push
xor
out
mov
push
mov
add
dec
jo
jecxz
jbe
mov
add
and
mov
mov
cmp
pop
sub
mov
inc
adc
insb
inc
popa
out
je
mov
adc
mov
xor
or
mov
sub
push
sbb
js
adcb
out
pop
fidivrl
fstps
clc
add
lods
jmp
cmpsb
lret
mov
pop
cli
lea
gs
push
pop
mull
pop
dec
rcll
mov
and
sub
xor
shr
aaa
cmp
inc
cmp
sub
movsb
cmp
mov
adc
mov
mov
mov
sahf
movsl
push
nop
icebp
mov
push
pop
and
mov
jno
mov
xchg
or
push
adc
data16
clc
sbb
or
pop
imul
push
cwtl
shll
call
sarl
jg
call
or
push
sar
mov
out
inc
or
sarl
into
jo
push
scas
xchg
enter
enter
and
mov
es
shlb
mov
fs
loop
jne
mov
inc
fwait
and
dec
sbb
dec
cmpl
hlt
daa
mov
test
loope
push
pushf
inc
scas
hlt
cmpl
sub
jl
mov
dec
dec
divl
or
xchg
loopne
mov
ds
clc
mov
cmp
pop
cmp
dec
mov
mov
pop
and
push
xor
sbb
xchg
sahf
inc
pop
xchg
loop
sbb
orb
cmp
stos
ds
dec
xor
jecxz
movsl
cltd
in
mov
push
or
in
insl
popa
test
in
pop
mov
add
mov
or
xchg
icebp
das
sub
andb
out
mov
icebp
in
scas
pop
ja
dec
rep
cmp
mov
incl
fsubrl
mov
sbb
in
cmp
mov
jl
push
jno
test
sbb
cmp
cmpsl
loopne
jp
in
sub
cmp
add
ljmp
test
cmp
mov
pop
mov
jnp
mov
ret
cmp
loopne
testl
sbb
adc
out
lcall
adc
cld
jo
dec
xchg
inc
add
xor
mov
jp
and
ret
lret
stos
fsubrs
mov
pop
mov
push
iret
and
add
cmpsl
lods
and
inc
mov
push
pop
mov
sbb
adc
es
loop
jle
das
outsb
jg
push
add
push
dec
rcll
xchg
add
adc
out
or
pushl
or
add
dec
int
dec
loope
enter
gs
sub
xor
cmpsb
data16
aaa
inc
imul
rorb
mov
xor
xchg
ret
icebp
xor
sbbl
test
leave
je
push
mov
mov
icebp
or
mov
jbe
dec
and
inc
sub
or
mov
xchg
pop
xorb
ds
cmp
ljmp
clc
push
adc
pop
adc
mov
lods
xlat
inc
call
xor
call
rorl
lret
addr16
push
cmpsl
mov
int3
cld
fisttpll
adc
cmp
or
mov
orb
dec
insb
lcall
jl
or
shrb
sub
popf
sub
jl
fs
mov
or
mov
xor
lds
jbe
insb
mov
adc
xchg
push
pop
or
push
push
clc
jge
or
pop
test
in
mov
aam
xlat
push
insl
sub
test
sbb
cmpsl
leave
xlat
xchg
or
xlat
and
pop
insl
imul
jp
and
in
insb
sbb
pushf
loop
jne
and
mov
mov
flds
and
in
sub
cli
sbb
cs
mov
jle
xor
mov
sti
dec
xor
xchg
or
xor
mov
adc
ffreep
hlt
ja
cmovg
insb
mov
dec
push
xchg
and
sbb
adc
xor
sarl
sbb
mov
sub
clc
jno
ret
dec
push
push
mov
or
jle
insb
push
sar
or
add
sti
test
mov
or
or
and
mov
addr16
fadds
adc
shl
xchg
sbb
lea
push
fsubl
lds
push
sar
out
fldl
pop
push
mov
sbb
mov
xchg
adc
mov
add
mov
xchg
mov
cmpsb
lock
lods
and
mov
and
orl
push
or
and
call
or
clc
or
loopne
push
out
pop
xor
or
lea
add
jns
jl
lods
jmp
mov
into
lret
cmp
inc
xor
xchg
dec
in
les
aaa
pop
lahf
sarb
add
pusha
fbstp
jl
fs
movsb
out
mov
das
mov
mov
es
mov
int3
test
mov
xor
jg
jo
jp
int
sub
jne
dec
jp
inc
xchg
mov
mov
lea
xor
out
fsubrp
fisttps
cmp
jle
sub
sub
mov
pop
add
inc
cs
jge
bound
mov
jg
adc
mov
js
add
popa
add
sahf
inc
aas
stos
mov
outsb
mov
pop
sub
ret
add
or
jge
mov
loop
jl
mov
iret
cmpb
mov
xchg
and
pop
or
add
fsubr
jecxz
inc
sub
dec
ret
test
insb
inc
dec
mov
or
stos
test
and
mov
push
test
popa
adc
mov
xchg
add
sbb
mov
mov
jb
cmp
mov
aas
gs
cmpsb
adc
ja
fdecstp
and
jg
pushf
xchg
sti
sub
jne
cmp
xor
lods
mov
inc
andl
add
xorl
stos
push
or
jb
fwait
lret
inc
mov
and
lods
jle
stos
outsl
mov
mov
push
je
out
cli
jg
adc
sub
sbb
cmp
jl
jg
jmp
add
adc
or
push
adc
sbb
cmp
jg
jl
ljmp
sub
cmp
call
adc
dec
cs
add
fwait
push
mov
adc
push
push
mov
push
mov
arpl
sti
jne
cwtl
mov
or
test
push
jns
cmp
ljmp
sbb
sbb
fmul
sbb
push
mov
push
das
orl
inc
sub
xchg
adc
inc
cltd
sub
sub
pop
iret
xor
adc
push
dec
push
sub
cmpl
fiaddl
in
orb
xlat
jge
mov
or
lods
fnsave
hlt
sbb
lret
test
mov
cwtl
xor
fiadds
xor
add
inc
add
pusha
push
test
inc
movsl
mov
push
cmpb
iret
ret
mov
sbb
adc
rcrl
mov
loope
dec
xchg
clc
push
insb
pop
loopne
jl
test
xor
fstl
mov
ja
pop
dec
orb
xchg
cmp
and
push
in
push
cld
sub
or
test
je
ss
fscale
cmp
jl
pop
push
cld
cmpsl
fadds
pop
aaa
mov
mov
fnsave
adc
movl
sahf
add
mov
sbb
mov
dec
push
jmp
or
sbb
enter
or
int3
and
int3
add
inc
fdivrp
dec
jmp
stc
movzbl
mov
adc
dec
adc
push
sbb
popa
aas
add
mov
cmp
mov
pop
jg
fmull
nop
cmp
rcr
cmp
lahf
pop
mov
lea
lret
push
lods
xor
dec
mov
pop
les
dec
cwtl
and
insb
mov
pop
or
shlb
rclb
shlb
push
bswap
aad
mov
jo
push
xchg
sbb
call
sbb
dec
shll
shll
and
dec
daa
sub
mov
fisubrl
mov
inc
sbb
mov
in
aaa
clc
sbb
mov
add
daa
cmp
add
xor
pop
in
push
lds
add
out
xchg
fisubrs
je
add
xchg
or
push
xor
mov
lcall
movsb
rolb
dec
sub
push
cmp
add
out
inc
dec
cmp
sahf
out
sbb
and
and
lret
jl
pushf
pop
push
int
xorb
imul
jecxz
imul
data16
adc
icebp
fs
subb
adc
lock
je
mov
ljmp
xchg
sbbl
adc
rcrl
lods
fucomp
dec
pusha
dec
cmp
adc
dec
enter
dec
inc
lea
je
test
inc
xchg
sbb
mov
adc
adc
sub
and
movsb
sarb
popa
pop
insl
sbb
mov
sub
fisttps
and
mov
xor
sbb
dec
xor
movsl
dec
mov
cmp
xor
lea
mov
mov
cmp
ret
mov
or
lahf
xlat
shl
jg
cs
push
push
push
dec
dec
into
sbb
jl
push
pop
lds
mov
cli
pop
add
pop
sbb
cli
sub
jne
cli
fldenv
test
cmpsb
adc
sbb
cli
mov
push
push
or
xchg
or
xchg
jg
aad
sbb
xor
mov
or
pusha
add
iret
fdivrs
inc
push
adc
mov
and
fsubr
adc
and
xor
jle
push
lea
out
sti
xlat
in
clc
or
push
jns
mov
rolb
mov
push
push
out
jnp
mov
xor
mov
jp
mov
js
bound
insl
push
imul
add
cmpl
pop
fcmovne
int
adc
clc
jbe
jl
dec
inc
or
test
and
push
sub
xchg
scas
cmc
je
and
lods
add
adc
add
jbe
orb
out
jmp
or
or
pop
test
fsubs
cmp
adc
in
mov
sarl
insl
push
push
dec
adc
sbb
xchg
xchg
xchg
les
dec
and
xchg
les
or
ret
push
rolb
push
imul
daa
add
xchg
pop
pop
pop
mov
js
mov
lods
jg
push
xchg
imul
adc
mov
mov
mov
xchg
jecxz
subl
or
add
jne
dec
mov
and
sarb
fadds
jecxz
pop
popf
rorl
adc
shlb
cwtl
cmp
push
xchg
push
push
out
nop
dec
or
xor
jle
pop
mov
xor
push
mov
loop,pt
addr16
je
in
jo
dec
mov
lds
jecxz
and
mov
inc
xor
sbb
dec
jb
cmp
cmp
pop
mov
push
jne
push
push
icebp
mov
orb
in
mov
arpl
add
pop
or
or
sbb
incl
adc
push
pop
mov
mov
sbb
fisubrs
push
imull
punpckhbw
and
adc
lcall
aad
cmp
andb
fiadds
push
filds
dec
aas
test
mov
idivl
std
jne
pop
mov
cmp
je
sbb
in
cmp
lcall
subb
dec
adc
shll
or
adc
int
test
cmp
jbe
cld
push
sbb
movsb
or
adc
gs
jb
lea
pusha
add
in
fmull
push
shrl
mov
fwait
xor
mov
jae
inc
jb
pop
pop
add
inc
jne,pt
cmp
jle
add
loop
mov
xor
cmp
mov
test
sbb
ret
or
lods
lret
and
add
mov
or
push
nop
cwtl
mov
mov
dec
add
ret
fisubl
aaa
shlb
popa
js
imul
mov
adc
out
add
add
pop
xor
mov
adc
ds
imul
fxam
movl
jno
add
adc
test
and
sbb
nop
push
pop
aaa
xor
ret
shll
int
inc
and
adc
fsubrl
jp
mov
imul
les
or
adcl
lods
cmp
inc
pop
push
mov
mov
dec
aas
pushl
mov
fidivrs
fdivrl
push
popa
lods
or
je
xchg
jnp
jle
aam
pop
mov
popl
out
aas
adcb
orl
push
and
pop
lea
mov
shlb
xchg
mov
mov
and
jg
lret
jno
or
jbe
mov
int3
pop
adc
scas
ss
cmp
pop
into
movsb
mov
test
sub
jb
dec
test
movsl
pop
shr
add
repnz
jle
shrl
dec
cmc
cmpsb
mov
adc
push
in
cwtl
and
sahf
mov
pop
xchg
fwait
aas
pop
pop
inc
sub
sbb
cmp
inc
mov
aas
sbb
jmp
shrb
xchg
push
repnz
fiadds
pop
xor
xor
push
mov
test
pop
jmp
decb
and
push
push
push
jb
adc
test
inc
cmp
adc
ss
lds
jl
xor
mov
mov
lea
clc
push
addb
push
push
in
rolb
push
in
inc
dec
je
and
push
dec
adc
addr16
stos
cmp
js
inc
loopne
dec
cmp
mov
stos
fisttps
rcll
add
xor
fdivl
inc
je
jbe
pop
add
js
push
jne
fsubs
scas
add
shrl
insb
mov
or
dec
rcl
scas
sbb
adc
add
and
call
add
sub
lret
and
insl
loopne
dec
mov
add
roll
mov
push
pop
sbb
jmp
sbb
adc
fiaddl
mov
inc
mov
mov
push
inc
imul
jmp
sub
les
add
clc
xlat
mov
fbstp
push
les
push
inc
sbb
pushw
jle
pop
cmp
or
pushf
testb
adc
or
cmp
add
or
inc
clc
and
dec
mov
xor
movzwl
retw
jmp
inc
sbb
and
jno
cmpsb
fdiv
pusha
shll
or
and
xor
jo
cmp
adc
add
cmp
add
les
mov
cs
pop
sbb
adc
nop
mov
inc
add
add
sub
mov
out
lods
stc
icebp
sub
mov
push
sub
stc
lock
in
sbb
pop
ret
xchg
mov
sbb
mov
sbb
rcrb
sbb
sbb
aad
jo
jecxz
push
push
push
movl
add
mov
adc
andb
or
decl
push
add
out
jl
push
fisttpll
add
data16
lods
cmpsl
inc
and
jae
and
push
adc
aas
enter
adcb
lea
mov
test
mov
mov
imul
test
lods
mov
jbe
jg
adc
mov
cmp
je
cmp
sbbb
cmp
jl
scas
mov
jne
in
test
push
push
sub
scas
or
movl
pop
or
push
adc
pop
push
je
inc
jmp
adc
push
jns
xchg
inc
push
xor
inc
in
mov
pushf
or
cmpsb
xchg
ja
and
xor
ljmp
lret
ds
mov
push
pop
lock
add
push
push
or
das
mov
sub
cmp
jl
push
xor
out
jbe
push
push
mov
push
pop
das
loopne
enter
xlat
and
inc
mov
es
dec
xchg
in
sarb
push
cltd
cmpl
pushf
aas
aad
int3
je
adc
ret
movzbl
add
or
mov
sbb
push
ljmp
aam
lea
ds
pop
cmp
jnp
je
dec
ljmp
cmovp
dec
nop
pop
rorl
sub
das
add
inc
inc
pop
dec
movl
add
inc
addr16
mov
fdivrl
mov
or
xor
jbe
stc
test
daa
cltd
and
pusha
add
cld
sub
mov
pushf
inc
sub
stc
or
cmpb
sbb
in
xchg
rclb
sub
lret
dec
lock
jmp
mov
cmp
jae
add
inc
fildll
repz
add
jbe
dec
push
push
test
shlb
cmp
push
push
lea
adc
mov
adc
mov
mov
pusha
test
inc
push
mov
xchg
dec
mov
add
and
mov
add
stos
rorl
shrl
pushl
les
jno
ja
in
cmp
xor
adc
movsb
mov
adc
push
inc
lea
frstor
cmp
xchg
les
adc
xor
mov
ds
movsl
push
dec
jecxz
push
xor
inc
sbb
cmp
fsubrs
pop
repz
xor
jb
shr
inc
inc
jle
fcmovbe
mov
or
mov
or
push
add
or
push
sbb
sarl
add
sub
jne
aas
pop
inc
xchg
xor
mov
jae
add
repnz
inc
lods
lock
clc
xor
shll
add
shll
int
lret
dec
test
mov
movsb
push
rol
add
and
cmp
shrb
mov
dec
cli
out
push
sahf
or
shl
shlb
and
or
add
in
lods
loop
adc
and
mov
push
mov
divl
lock
add
lea
into
or
repnz
mov
fldenv
out
loop
scas
cmc
jl
cmp
lcall
sub
xchg
jne
fldcw
aaa
sub
adc
inc
xor
xlat
ss
xchg
cld
xor
imul
cmp
in
xchg
jl
mov
incl
mov
xchg
pop
cmpsb
inc
and
nop
imul
xchg
xchg
jno
std
mov
dec
mov
cmpsb
aas
adc
std
repz
and
mov
mov
sti
mov
sbb
bound
ficomps
add
inc
rorb
fwait
insl
js
ja
inc
out
pop
pop
es
mov
fsts
xchg
mov
mov
into
or
push
in
ret
sti
pop
adc
sarl
cmp
into
lahf
add
adc
add
out
fsub
xchg
imul
out
and
sti
shl
flds
int
and
pop
mov
ret
and
nop
aas
xchg
adc
dec
jle
xchg
inc
dec
add
add
addr16
mov
jg
mov
add
loop
inc
fimull
pop
add
fidivl
fsubrp
or
inc
cmp
incl
xor
aaa
lea
pushf
or
ret
or
mov
and
jmp
adc
popa
popf
insl
adc
shll
sub
aas
mov
or
in
ror
xor
insb
push
repnz
mov
inc
ljmp
loopne
lock
push
test
jnp
xlat
mov
stos
lock
addr16
dec
mov
insl
scas
sub
lret
xchg
sub
mov
xor
sub
sub
fsts
adc
xor
daa
mov
int3
pop
adcb
xor
aam
fimuls
ljmp
sbb
xchg
cmp
or
rcl
push
rcrl
rolb
inc
sub
in
stos
rcrb
adcl
mov
out
push
insb
pop
and
lods
les
lock
or
mov
pop
inc
and
hlt
push
testb
out
fisubrs
fmuls
inc
mov
fcomi
sahf
or
fimull
and
psubusb
mov
xchg
cld
into
lahf
add
inc
ret
pop
pop
gs
outsb
out
mov
lahf
and
xor
rcrl
pop
or
test
test
lahf
and
sbb
loopne
sub
sub
inc
repnz
faddl
mov
mov
xchg
aas
inc
and
jle
testl
repnz
sub
out
adc
shl
xor
add
cmp
es
jmp
enter
push
push
mov
inc
cmp
cmp
and
sbb
pop
loop
sbb
dec
pop
sbb
push
mov
and
pop
movzbl
cmp
out
or
push
js
adc
dec
js
decb
and
je
loop
movsb
sbb
push
push
push
or
sbb
dec
pop
rcrb
push
push
addb
dec
out
in
inc
lods
mov
and
imul
push
pop
push
jl
ret
push
lock
push
inc
adc
imul
mov
mov
data16
sub
adc
push
adc
and
mov
jb
adc
pop
dec
sub
es
dec
ret
aas
jne
test
or
sbb
xchg
int
out
ret
ds
popa
add
xchg
add
jl
repz
and
test
test
xchg
pop
inc
push
out
xor
sub
lods
ja
push
push
fwait
cmpsl
xor
rol
push
sahf
or
and
push
push
and
inc
out
jle
pop
cmp
aam
cld
xchg
orl
cwtl
adc
int
ja
pushf
push
movsb
push
jl
fcmovnbe
int3
sbb
sub
push
push
call
cmp
jp
imul
add
das
inc
insl
mov
push
ret
fwait
loope
rolb
push
test
lock
in
ds
cli
push
push
add
and
adc
repnz
shrb
mov
pop
ret
mov
push
cmp
and
cmp
data16
insb
lods
cmp
push
les
add
and
ja
xchg
shlb
pop
cmp
and
mov
sbb
or
sbb
andl
cmp
inc
andl
dec
rclb
inc
bnd
insl
stos
mov
push
dec
lods
lret
and
repnz
xor
inc
mov
test
mov
xor
adc
je
orl
push
xor
sub
xchg
or
sbb
cmp
sbb
push
call
xor
and
addr16
insl
out
stos
xchg
jo
or
adc
jmp
jo
push
add
imul
test
fcoms
inc
adc
push
dec
test
xchg
sar
xor
cwtl
and
jg
push
in
mov
fs
ja
popa
or
sbb
or
add
lods
jmp
sbb
int
xchg
repnz
inc
mov
stos
pop
push
mov
jecxz
sbb
sub
lods
outsb
jg
shl
push
das
stos
lea
add
popa
xchg
sbb
mov
lock
and
ds
jge
mov
test
inc
fsubr
dec
imul
mov
aas
outsl
rolb
push
test
fwait
movb
cmp
dec
jl
mov
imul
jae
arpl
clc
pop
pop
lahf
mov
cmc
lods
movsb
mov
lcall
sbb
cmp
insb
pop
or
dec
fimuls
outsl
inc
pop
adc
insb
mov
add
lods
mov
daa
sbb
dec
test
mov
or
or
sbb
mov
flds
sub
dec
pop
pushf
int
lock
add
mov
testb
test
xchg
pop
mov
and
pop
sub
mov
mov
push
repz
ret
flds
jns
aas
pusha
nop
aas
ret
scas
inc
enter
inc
and
push
or
aam
xchg
inc
inc
das
pop
jns
mov
add
dec
movsl
push
movsb
mov
scas
jl
lods
mov
add
sub
xchg
sbb
mov
add
mov
rolb
lock
sarb
sub
outsb
jg
sbb
push
ret
fs
add
dec
xchg
dec
stc
pop
dec
push
add
test
lret
or
popf
pop
mov
pusha
jbe
jle
gs
bound
test
scas
inc
dec
je
push
rclb
inc
or
or
fwait
jg
lcall
sub
adc
in
icebp
xchg
hlt
or
movl
icebp
clc
dec
cltd
push
pop
or
xchg
and
pusha
mov
and
or
or
cmpsb
add
test
add
stc
int3
fcmove
xorb
repnz
adc
test
xor
popa
fildll
lcall
push
fisubrl
add
out
push
xor
mov
notb
xor
mov
add
push
dec
shll
sbb
push
pop
ds
mov
xor
push
or
mov
movsb
mov
mov
or
mov
rcrl
sbb
dec
shll
pop
pop
pop
lcall
orb
xlat
pusha
fisubrl
test
push
rcll
daa
cmp
push
sub
and
mov
and
or
popa
mov
sbb
or
jb
and
push
sbb
sbb
or
fcmovb
pop
repz
xchg
jo
movsb
pop
mov
mov
imul
add
les
test
mov
inc
and
jmp
imul
add
inc
sub
add
or
out
aad
sarb
adc
xchg
pop
hlt
dec
jmp
push
cmpsb
out
scas
inc
addl
enter
xor
fucomip
fcompl
addb
fcmovnu
add
cmp
addl
dec
movsl
sarb
or
fdivrs
lahf
dec
fsub
mov
or
es
add
mov
push
sahf
test
or
and
or
addb
ret
or
dec
imul
mov
push
mov
enter
cmc
in
xchg
push
mov
sbb
push
push
insb
and
mov
jno
xor
push
pop
arpl
and
xor
int3
hlt
push
sub
clc
fs
lock
ss
push
add
ss
sbb
je
sub
pop
mov
mov
aad
mov
inc
cmp
push
inc
push
mov
sbb
inc
mov
nop
sbb
js
fmull
insl
add
and
mov
test
pop
cltd
test
sub
push
mov
and
or
mov
xor
daa
mov
xor
or
dec
pop
rolb
in
xchg
sbb
hlt
pusha
push
dec
or
stc
add
xchg
fisttpll
imul
add
add
orb
or
add
fiadds
add
jmp
popf
call
clc
mov
dec
imul
outsb
pop
movsl
std
or
int3
mov
push
and
push
and
je
aam
ljmp
rcrb
pop
jp
pop
frstor
sub
daa
pop
push
lods
sbb
sbb
jmp
dec
mov
cmp
je
mov
lahf
pop
lock
adc
out
jne
add
popa
mov
add
adc
jbe
mov
push
cld
psubb
add
lea
dec
jecxz
or
push
jl
or
mov
push
inc
add
add
or
insl
or
and
fisttpl
dec
test
jmp
jb
pop
cs
enter
lret
in
test
in
in
mov
mov
cs
lret
lods
shlb
mov
cs
xchg
xchg
xor
and
and
cld
jb
push
pop
dec
and
push
push
dec
pop
mov
or
jo
jle
jmp
mov
inc
rorb
jge
pop
aam
gs
add
cmp
jbe
jp
decl
add
jb
cmpl
xchg
push
jo
and
and
dec
sub
ja
pop
pop
jne
push
push
enter
inc
mov
or
push
or
mov
rep
jmp
mov
cmp
jb
loopne
insb
out
cwtl
enter
hlt
push
dec
jnp
js
or
pop
and
mov
mov
mov
scas
imul
add
mov
int3
lea
dec
add
sub
push
movl
or
add
out
or
push
rorb
mov
mov
cwtl
mov
mov
call
repz
in
lock
test
clc
clc
cld
xchg
lea
decb
clc
fsqrt
shrl
push
jmp
sbb
pusha
int
pop
mov
ret
nop
inc
pop
or
shll
outsb
sbb
lea
jl
cld
or
push
jo
and
std
cld
out
adcb
mov
fcomi
fsts
fisubrs
sbb
test
pop
nop
xchg
push
mov
push
loopne
add
out
add
sub
add
dec
inc
push
out
push
add
nop
dec
dec
addr16
add
jecxz
add
push
cmp
jns
bound
inc
dec
jns
jns
push
pop
fs
aaa
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
nop
xchg
mov
jnp
cwtl
push
test
adc
adc
dec
push
push
add
pop
sysenter
sub
dec
daa
ja
dec
clc
mul
push
mov
inc
inc
and
sub
add
mov
pop
ret
adc
cmpsl
in
xorl
jns
in
or
fildll
enter
mov
pop
pop
lock
fisubrl
addb
inc
fldenv
sbb
xorb
jecxz
fcoml
fistpl
ds
jae
mov
out
adc
cmp
jb
push
pushl
pusha
inc
jle
ficomps
sub
ja
mov
sti
add
xor
repz
mov
scas
or
mov
jp
xor
add
jmp
add
mov
les
inc
pop
mul
cmp
sbbl
mov
sbb
cmp
cli
data16
or
or
test
arpl
pushl
andl
add
pop
mov
movl
sbb
outsb
data16
sti
mov
ret
push
and
add
neg
sbb
push
aaa
ret
pop
xchg
lds
inc
or
out
pop
loopne
inc
pop
outsb
and
dec
push
sti
dec
insb
mov
or
push
cmp
jl
fistpl
test
jne
ret
testl
shrb
int
aas
shll
mov
js
fildll
testb
jne
addl
add
jp
inc
pop
xor
lods
lods
orl
ss
dec
lock
or
idivb
fidivs
outsl
pop
push
jge
mov
push
subl
mov
andl
mov
jg
xor
cmp
insl
and
cmp
aas
add
movzwl
mov
es
aad
shlb
lock
imul
inc
inc
inc
inc
push
fcoml
sbb
inc
lock
jmp
jb
fldenv
jbe
add
dec
imul
cwtl
add
sbb
xor
fcompl
sbb
add
sub
and
push
jmp
pop
push
cmp
dec
shrb
sbb
test
mulb
je
pop
roll
sub
inc
inc
pop
cmp
enter
mov
shrl
jmp
push
or
and
ret
adc
push
testb
cmp
clc
mov
inc
jbe
push
or
inc
inc
mov
icebp
pop
dec
or
icebp
mov
call
pusha
mov
add
add
icebp
cmpsl
push
mov
jnp
add
add
jmp
test
dec
loop
inc
incb
mov
shlb
bound
xchg
test
mov
jmp
lahf
inc
in
aad
clc
imul
ficomps
or
jp
add
sbb
sbb
or
lods
push
mov
hlt
daa
stc
push
hlt
je
out
push
xlat
jo
int3
leave
push
mov
in
sahf
and
mov
jle
int
sub
jmp
ja
ficomps
fnstsw
cmp
dec
test
jp
add
incl
push
outsl
push
push
scas
fwait
mov
sub
add
idivl
popf
pop
aam
jmp
int3
push
hlt
or
ret
adc
lods
lock
fwait
ljmp
mov
lock
adc
mov
test
sbb
repnz
inc
inc
rorl
in
cmpl
xor
jne
xor
repz
mov
je
lret
jo
nop
or
push
pop
jno
movsl
mov
inc
out
dec
adc
pop
je
push
shrl
jg
out
cmp
sbb
push
push
inc
or
and
popa
pushf
scas
push
sbb
jp
xor
adc
jl
call
sub
pop
cwtl
pop
push
fcoms
js
or
mov
cs
loopne
out
add
stos
xor
mov
push
je
add
dec
pushl
push
jp
pushf
pop
lods
fstps
test
neg
mov
cmp
je
cmpsb
fmull
out
popa
js
jmp
push
pop
pop
push
rclb
loop
movsl
add
push
test
mov
mov
xlat
pop
popa
je
mov
out
mov
sub
xchg
sbb
or
mov
jns
pop
sub
fbld
add
mov
mov
loop
jbe
push
and
xor
fistpl
mov
dec
pop
and
cltd
and
cmp
lods
es
jne
push
fidivl
sbb
mov
imul
push
inc
push
movsb
add
or
add
and
loope
xorl
pusha
dec
outsb
dec
and
xor
ljmp
dec
or
adc
and
cwtl
dec
mov
fsubl
pop
jle
test
cwtl
adc
mov
je
movzbl
cmpsl
mov
sub
mov
add
lea
ret
lea
mov
mov
add
sbb
ja
pop
add
add
enter
daa
add
xlat
test
dec
jns
mov
xchg
jno
je
lcall
flds
add
jb
mov
and
xchg
pop
push
pop
out
push
push
jb
or
or
push
nop
or
or
or
or
push
pop
or
jns
cmpsb
repnz
or
or
or
out
repnz
add
mov
push
push
inc
enter
nopl
push
fcomps
adc
pop
adc
fwait
add
push
sub
adc
enter
adc
adc
jns
cmp
add
adc
add
adc
lcall
adc
inc
push
inc
push
push
push
push
xchg
and
sbb
pop
xor
pop
enter
sbb
jns
sbb
call
out
sbb
sbb
sbb
iret
mov
sbb
push
nop
out
mov
cmp
in
push
push
inc
push
mov
jne
add
add
sub
cmp
jae
xchg
jmp
fimull
lods
and
dec
arpl
inc
pop
sti
jg
sub
mov
cmp
je
lcall
sub
sub
rol
lea
aad
push
nop
mul
cmp
mov
in
fwait
out
mov
or
push
jbe
in
fcoml
call
nop
adc
dec
dec
cwtl
jmp
and
sub
xorl
jmp
sbb
in
in
cltd
inc
fsubp
add
add
sbb
sahf
out
out
mov
sbb
pop
orb
lock
enter
icebp
icebp
vmwrite
out
std
xchg
inc
enter
leave
std
hlt
rcrb
pusha
hlt
fwait
push
fdivs
jb
cmc
cmc
inc
jg
add
div
pop
lret
popa
idivl
cmp
sbb
inc
lcall
add
stc
inc
stc
lock
sbb
inc
sahf
cli
cli
iret
sti
cmpsb
repnz
sbb
stos
cld
cld
sti
and
outsl
cld
push
jne
sahf
addr16
fdivrp
xor
sbb
fadd
add
je
stc
jns
mov
decl
sub
leave
test
mov
rorl
shlb
jp
pop
cmpsb
and
jecxz
pop
push
adc
mov
xchg
add
inc
in
icebp
loope
jb
inc
mov
mov
xchg
sti
out
out
enter
cltd
outsb
call
adc
sub
int
mov
pop
jmp
psubusb
jmp
in
pop
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
push
xchg
cmp
sbb
add
cli
push
adc
push
cli
sbb
rclb
repz
pop
enter
stc
push
stc
mov
fnsave
sub
imull
fwait
xor
add
stc
out
clc
dec
in
ret
cmp
inc
push
fsubs
sti
cltd
mov
repnz
cld
orl
xlat
ja
sbb
inc
jo
pop
add
sub
mov
cs
mul
pop
dec
pop
and
shl
scas
testl
out
push
fsubs
out
out
and
mov
notl
sti
imul
xchg
shl
dec
push
jno
pop
mov
xchg
xchg
mov
loop
rcrb
jno
les
and
and
and
negb
repnz
les
cmc
pop
mov
inc
repnz
cmc
jae
dec
push
cmp
pop
dec
cmc
div
jmp
xor
and
in
mov
clc
xor
push
jecxz
stc
popa
cmp
mov
mov
loop
xchg
hlt
pop
pop
repnz
hlt
push
hlt
mov
sbb
sbb
cmpsw
xlat
push
and
hlt
idivl
rolb
sti
lahf
xchg
mov
adc
ds
repnz
cmc
pop
lcall
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
in
repz
xchg
cmpsb
jb
sbb
mov
adc
cmc
mov
mov
inc
xlat
xchg
repnz
out
inc
sbb
in
aaa
cmc
and
mov
inc
xlat
add
and
rclb
inc
sbb
icebp
repnz
divb
icebp
repnz
test
test
sub
cmc
cmp
lea
pop
pop
jb
jecxz
fstl
add
dec
ret
popf
mov
stc
stc
cmc
mov
lock
lock
and
and
pop
xlat
push
lock
test
ss
add
insb
jne
adc
sub
cmp
rol
in
cmp
inc
cmovno
push
add
xchg
add
sbb
add
add
jp
add
adc
inc
adc
or
ds
dec
add
jmp
dec
sti
cmp
and
ljmp
add
loopne
or
add
shll
fwait
in
add
daa
push
add
xor
fwait
int
jae
xchg
das
clc
and
es
jl
out
add
cs
mov
fldenv
mov
sub
cmp
ss
mov
cmpsl
stc
cmpsl
sub
cmp
or
pusha
and
cmp
outsb
clc
cmp
push
push
test
movsb
cmpsl
mov
cmp
add
idivb
sub
jg
xor
flds
sub
mov
xchg
jmp
test
sar
enter
add
or
jnp
adc
mov
dec
ljmp
ret
mov
lock
xor
pop
inc
inc
add
fists
add
out
xor
dec
repnz
outsl
jo
enter
or
shr
scas
adc
data16
add
or
insb
nop
fisubrl
neg
ljmp
adc
rcl
testl
add
jmp
testb
add
cmp
mov
in
imul
and
dec
dec
mov
lods
add
adc
xor
inc
inc
cmp
cs
pop
mov
jne
bound
aam
adc
repnz
mov
mov
adc
mov
insl
push
out
or
pop
pushf
cmp
fstpt
adc
sub
sbb
sbb
pop
sbb
jnp
xor
dec
fisttpl
inc
inc
rcrl
rorl
inc
jb
adc
lcall
push
and
lock
cmp
cmp
dec
pusha
xchg
add
fisttpll
fdivrl
or
cmp
jg
jl
or
inc
push
adc
adc
and
sbb
fmuls
sub
ljmp
ret
clc
add
add
in
cs
ljmp
es
jle
pop
testl
jge
andl
pushf
in
inc
sbbb
pop
and
mov
dec
mov
and
mov
leave
fstl
and
pop
pop
pop
and
inc
xor
mov
add
xchg
push
and
sub
pushl
cmp
sub
push
or
push
jmp
loop
pop
in
and
or
iret
and
orl
mov
push
adc
call
push
popl
aas
adc
movl
push
push
inc
in
ds
inc
sbb
js
loopne
sbb
or
fisubs
jl
push
lds
js
xor
das
jp
incl
sbb
ss
push
call
aam
je
ret
and
in
sub
je
es
push
jle
ret
aas
push
cmp
jg
test
cmp
mov
xchg
pop
or
or
push
call
rcll
lret
fistpl
lret
pusha
or
sbb
pop
test
lock
mull
sbb
mov
dec
pop
push
aas
mov
cmpl
je
orb
mov
shrl
ret
fcompl
mov
je
adc
sub
push
shrb
fidivl
or
jne
jo
cmp
int3
test
pop
test
sbb
lret
pop
mov
les
sub
add
test
hlt
je
mov
mov
je
and
add
cli
xlat
or
incb
rolb
sti
jge
test
test
call
xor
push
test
push
je
int
or
adc
lret
inc
ret
adc
mov
and
and
or
movl
or
or
push
sub
enter
sbb
pop
and
mov
icebp
mov
pop
and
or
push
fcoms
sub
push
push
mov
rorl
xor
push
mov
lret
mov
jmp
and
push
out
add
ljmp
insl
add
mov
adc
inc
add
lock
lock
out
xor
jne
push
js
pop
lcall
js
cmpl
xrelease
xchg
fisttpll
or
push
dec
daa
xchg
cmp
push
inc
sbb
icebp
and
or
outsb
sbb
pop
adcl
cmp
outsb
outsb
add
or
jmp
std
jmp
mov
or
sbb
sub
ljmp
jmp
mov
mov
in
mov
bound
fsub
mov
ret
paddusw
jo
mov
das
or
adc
arpl
sbb
mov
cmp
loop
adc
inc
inc
test
inc
cmp
mov
jns
cltd
cmpsl
inc
mov
jge
jne
push
sub
icebp
sub
or
jge
cmp
adc
mov
arpl
mov
outsb
fisttpll
inc
pop
xchg
andl
mov
jno
pop
aam
sub
mov
or
loopne
inc
shrl
mov
cmp
inc
cld
push
or
aaa
enter
out
sub
push
cwtl
pop
dec
cmp
push
pop
sbb
iret
incl
sub
jne
cmp
jne
lret
adc
or
outsb
or
sbb
in
lret
sbb
and
and
and
cmp
sub
mov
cmpb
jmp
hlt
ja
or
int
xor
push
movsb
je
addl
pop
push
add
add
out
pop
lods
sbbb
mov
sbb
mov
adc
add
pop
addb
hlt
daa
mov
pop
sbb
sbb
lock
pop
add
test
xor
cwtl
add
clc
cmp
jbe
lock
gs
inc
hlt
hlt
iret
jmp
or
cmp
mov
rcrb
mov
inc
es
fnstenv
jl
pop
ret
xor
lods
jge
jbe
jne
je
and
js
inc
mov
sar
cmp
jbe
push
push
mov
push
movsl
xchg
dec
nop
icebp
and
js
shll
leave
or
inc
push
bound
sbb
inc
push
sbb
sbb
and
out
aas
push
dec
push
sbb
push
pop
push
add
lret
add
jmp
xor
pop
cld
jne
push
mov
loopne
sbb
out
leave
iret
pop
dec
xor
testl
leave
mov
sbb
fadds
dec
adc
adc
sub
daa
les
push
cmp
dec
out
das
sub
adc
mov
inc
cld
mov
push
je
inc
inc
mov
fdivrl
je
xor
mov
dec
call
cmp
fdivp
jns
shrb
pop
cmpsl
js
xchg
jl
pop
and
fidivrs
xchg
sarb
push
and
or
cmp
sbb
push
repz
and
pop
add
lcall
and
cld
sub
dec
push
cltd
or
jp
mov
adc
das
je
pop
push
pop
push
fstl
test
lea
hlt
into
push
js
dec
cmpsb
lds
sbb
pop
gs
decb
sarb
jl
mov
mov
mov
ret
daa
fldz
jmp
lods
push
push
push
jae
out
sub
in
sub
mov
and
pop
push
sbb
push
xchg
fmull
inc
adc
out
sub
pop
fbstp
xor
imul
cmp
loope
sbb
shrl
movsb
leave
xchg
mov
push
pusha
xchg
pop
cmc
out
icebp
or
pop
mov
sub
inc
push
sbb
pop
outsb
and
lods
sti
jo
call
push
xor
nop
repnz
and
cmp
xchg
lret
inc
loop
gs
mov
xor
jbe
push
loope
orb
imul
sub
cmp
cs
and
shrl
testl
fwait
cmpsb
fstps
push
push
mov
or
add
adc
xor
sbb
mov
pushf
sub
xor
sbb
mulb
lock
lea
insb
jl
icebp
xchg
and
sub
xchg
add
je
add
insb
inc
push
clc
cmpxchg
sbb
inc
pop
or
jle
mov
add
sbb
push
sbb
xlat
xchg
loopne
and
and
or
cmp
clc
js
test
loop
pop
outsl
inc
pop
je
movb
pop
jno
push
jecxz
mov
cmp
je
inc
inc
aaa
jne
sbb
pop
jo
je
inc
dec
xor
mov
or
xchg
mov
cmp
adc
jne
call
mov
dec
cmp
add
imul
dec
dec
pmovmskb
inc
add
or
push
add
or
sarb
cmp
xor
cwtl
xchg
shl
je
inc
inc
popf
sub
xor
testb
lahf
mov
inc
inc
mov
mov
cmp
adc
xlat
shlb
push
push
jbe
add
leave
mov
addr16
sub
sbb
sbb
sub
ss
add
imul
arpl
and
add
push
lea
decl
mov
add
push
movzbl
movsbl
and
sti
add
out
mov
push
je
addb
call
sub
push
add
cmp
mov
int
decl
mov
and
or
mov
jmp
sub
jmp
andb
jmp
xor
in
push
push
divl
mov
add
adc
addb
cmc
and
lods
inc
jae
push
pop
js
adc
or
leave
adc
mov
clc
loopne
cmp
xor
cmpsb
push
loopne
sub
sub
dec
aad
ret
test
push
dec
rorb
mov
jnp
cmpb
mov
mov
pop
adc
cmp
lock
push
add
loope
je
roll
fidivrl
add
pop
testb
adc
notb
pop
xor
sahf
jmp
mov
call
sub
and
sahf
gs
xlat
pop
pop
mov
fadd
sbb
push
pop
aam
cmp
and
rcrb
adc
notl
and
das
dec
xor
pop
cmp
je
pushf
lret
insl
loopne
push
scas
test
inc
or
cld
cs
hlt
mov
je
mov
lods
pop
or
out
jns
fistps
or
das
inc
ja
adc
jl
fdivs
cmp
dec
insb
sbb
subl
cld
mov
jb
filds
jge
jmp
cmp
jb
sti
repz
das
add
cmp
cmpl
out
xor
xchg
xchg
jne
sub
loopne
mov
ss
fnsave
cld
pusha
mov
iret
mov
ss
inc
sub
push
push
outsb
hlt
jmp
loopne
push
pushf
cmpb
push
pop
mov
xchg
push
sub
es
js
subb
jg
add
push
adc
cmp
insb
ret
mov
das
dec
cmp
cmpsb
jmp
fcomp
das
sbb
movsb
and
xor
add
test
and
mov
push
ret
std
dec
popa
out
stos
rclb
cmpsl
xor
repz
aaa
inc
jmp
addr16
lret
add
clc
test
lods
cmp
mov
cmp
sarb
aam
outsb
push
adc
pushf
ds
inc
or
jne
push
mov
sbb
insb
jb
sar
mov
push
jge
das
loopne
push
add
add
je
into
jg
sub
adc
and
gs
add
mov
test
adc
loope
pop
es
and
out
adc
icebp
mov
or
mov
sbb
in
pushf
cmpsb
sbb
cmp
aam
xchg
push
ror
enter
nop
int3
mov
add
test
mov
aam
sub
jbe
push
push
xchg
clc
stos
xor
dec
movd
push
sub
or
test
data16
sarb
mov
cmp
pop
jmp
jne
shrb
push
adc
add
iret
shl
mov
mov
push
xchg
xchg
push
pushf
sti
push
pop
movsl
outsl
mov
cmp
mov
call
pop
lea
cmp
je
lods
cli
je
mov
sbbb
jge
cltd
outsb
inc
mov
cmp
cmp
jne
scas
das
jbe
cmp
stos
push
lcall
imul
add
jne
or
ljmp
inc
jmp
inc
cli
popf
pushl
push
stos
push
mov
xchg
cmp
inc
int3
or
mov
sub
mov
enter
pop
or
decb
icebp
and
or
jmp
mov
lds
push
hlt
mov
scas
cs
xchg
cmp
cmp
mov
xor
adc
lock
lea
rolb
cmc
popa
push
jo
adc
push
mov
push
fld
jnp
insl
mov
mov
sub
lahf
push
jmp
jno
mov
push
outsb
push
cmp
testl
push
or
push
adc
cld
cmp
pop
int3
fistpll
dec
sbb
faddl
int
call
das
fstl
jae
jp
cmpl
dec
dec
call
push
xor
lock
pop
add
add
sbb
cmp
cmpsl
pop
hlt
sbb
jo
lea
daa
daa
sbb
sbb
rcll
mov
and
enter
mov
push
mov
mov
movb
jb
test
fmull
push
and
inc
mov
jb
sub
clc
push
push
push
cmp
sbb
mov
pop
popa
adc
ret
adc
mov
push
xchg
mov
dec
stc
shl
or
dec
lock
mov
adc
adc
cmp
inc
push
mov
std
mov
cmp
jne
frstor
push
sbb
divl
dec
decb
or
xor
or
icebp
add
dec
push
adc
mov
sbb
inc
adc
std
xchg
in
test
push
scas
add
sub
xor
fldz
fcoml
inc
fcompl
push
jp
loopne
mov
rorl
add
and
or
aam
mov
pusha
or
xchg
mov
adc
je
iret
insb
cmp
jl
jg
cmp
ljmp
xchg
jbe
adc
movsl
fwait
adc
xor
test
jo
or
jnp
shlb
scas
cmp
pop
lret
dec
jge
rorb
insl
cmc
or
leave
and
xor
rolb
jb
fucomp
mov
mov
shl
or
loopne
sub
push
push
iret
aam
clc
or
rorb
cmp
xor
rorb
sbb
pop
or
jmp
testb
shl
sbb
mov
fmuls
jl
aad
mov
pusha
push
enter
mov
push
sbb
clc
cmpsb
stos
jle
andl
orb
loope
push
or
inc
sbb
in
adc
add
cmp
cwtl
int
mov
jo
popf
jge
ds
shlb
add
pop
sbb
lret
ds
decb
outsb
test
and
pop
incb
add
cmp
je
xchg
cmc
incl
cmp
jbe
cmp
je
push
push
push
jnp
call
ja
dec
inc
mov
xchg
lcall
iret
pushf
cmp
ljmp
inc
cmp
cmp
pop
mov
pushl
decl
cs
clc
sub
adc
inc
loopne
movsl
lods
pop
call
hlt
jb
adc
mov
es
fnstenv
xchg
xor
or
sub
ret
ret
cmpsb
cmp
insl
ja
cmp
or
xchg
daa
mov
cmpsl
rolb
dec
mov
fistl
outsb
inc
add
fsubrs
fs
push
add
fstl
lods
pop
xor
adc
mov
cli
pushl
ljmp
fnstcw
xor
push
ljmp
dec
imul
push
inc
push
pop
arpl
add
cmp
pushf
leave
mov
pop
popf
inc
scas
jle
adc
and
jmp
mov
jo
sti
les
xor
jne
or
and
mov
xchg
sbb
cmp
dec
mov
loopne
int
loope
push
jo
xchg
add
xchg
jg,pt
loopne
out
test
cmp
jne
idiv
in
mov
inc
cmp
and
shr
cmp
jne
sub
arpl
lcall
xor
or
rol
sbb
sarl
js
iret
mov
xchg
je
mov
cmp
mov
mov
push
mov
rclb
mov
or
loope
add
cmp
pop
sub
dec
dec
sub
jecxz
cmp
mov
mov
imul
cmc
or
and
and
adc
lods
or
cmpsl
adc
pop
cld
jge
mov
shlb
in
push
jp
rol
dec
jg
lods
and
push
or
or
or
inc
add
adc
js
orb
push
lock
hlt
testb
cwtl
stos
inc
push
aam
push
adc
pop
leave
sbb
testb
cmpsb
outsl
pop
add
sarl
shlb
pop
cmpb
jne
push
cs
clc
xor
inc
cmp
jb
push
lods
jecxz
hlt
movsl
jnp
sarb
mov
cmp
inc
pop
push
xchg
jb
jb
push
lock
mov
or
jae
or
sub
add
sar
aam
sbb
jmp
pushf
mov
in
xor
pusha
add
and
pop
andb
jmp
addb
fildl
bound
shll
rorb
imul
inc
jmp
arpl
imul
arpl
pushf
push
ja
scas
or
inc
stos
cld
shll
sbb
add
je
es
mov
dec
or
push
ljmp
enter
test
inc
in
popf
inc
or
test
cli
movl
and
int3
movsl
lock
inc
jne
push
test
inc
js
adc
pop
mov
pop
or
or
shl
and
push
test
test
xor
lock
loop
pop
jbe
sbb
arpl
js,pn
xor
and
pop
add
or
or
dec
or
add
jbe
out
fcompl
pusha
and
sub
aas
jae
sub
pop
ror
push
popa
sub
enter
add
pop
or
je
std
pop
addb
add
sub
xchg
dec
pop
push
inc
inc
inc
or
mov
or
add
and
push
push
push
push
jo
and
add
je
push
nop
cmp
add
dec
cmp
and
xchg
push
push
lds
imul
ss
shlb
push
sbb
inc
push
and
es
aas
ds
or
jmp
add
lods
push
lea
mov
adc
mov
les
xchg
outsl
mov
nop
mov
adc
jmp
pop
mov
push
sub
test
xor
rol
sbb
dec
push
ret
xor
sbb
or
mov
add
and
cmp
rolb
sub
pop
inc
pusha
push
ret
mov
mov
and
shl
sbb
mov
sbb
add
pop
ljmp
mov
inc
cmpb
sbb
lods
pushl
std
movswl
lock
cmp
mov
sub
rcll
scas
orl
pushf
mov
dec
and
adc
das
pop
push
pop
mov
sbb
gs
in
cli
pop
orl
call
rclb
mov
pop
jge
addr16
pop
cmp
les
jle
loope
adc
push
sbb
xchg
adc
push
fprem
jmp
adcl
fnstsw
fwait
sahf
jp
fstp
and
or
push
imul
arpl
jle
dec
outsb
push
lcall
mov
pop
adc
pusha
cmc
dec
mov
pop
or
jmp
push
pop
and
insb
test
mov
adc
dec
je
negl
cmpl
dec
add
and
shlb
push
inc
mov
adc
or
les
or
and
add
xlat
fcoml
pop
mov
jb
adc
mov
or
fstpl
int3
mov
pop
add
addr16
adc
jb
xchg
push
hlt
jle
sub
adc
add
cmp
aam
adc
lods
mov
sub
mov
fimuls
jg
jl
cmp
jb
jl
sbb
imul
or
call
insl
bound
cmp
cli
outsl
cwtl
push
shlb
popf
add
out
xor
jnp
xchg
xchg
lret
cld
mov
jnp
stos
decb
incl
fs
or
aam
clc
sahf
sbb
fidivrl
mov
mov
pushf
sbb
mov
mov
imul
xor
in
popf
in
fcomps
push
lock
imul
dec
sub
mov
in
mov
movsl
stc
add
adc
pushf
jp
daa
bound
add
loope
mov
ret
adc
sub
mov
outsl
pop
add
sbb
xchg
jmp
sub
sub
fs
cs
pop
std
xor
or
cmp
mov
lret
aaa
or
inc
add
popa
add
sub
fisubl
inc
cmpsb
xchg
or
imul
sbb
sbb
sbb
in
rdmsr
sbb
test
jl
jg
leave
jbe
lods
xchg
in
push
cltd
pop
idiv
add
adc
lea
cmc
jl
cltd
stc
stc
jae
lea
dec
push
rolb
jbe
jb
data16
jmp
adc
adc
mov
lods
pop
sub
cmp
fldl
xchg
dec
movsl
in
mov
js
lds
cs
popw
rcll
adcl
push
cmp
mov
jbe
xor
cmp
je
je
pop
test
pop
inc
pop
or
orb
sarb
or
ja
mov
mov
adc
push
adc
out
push
test
ljmp
and
std
push
adc
mov
je
lea
nop
aaa
mov
xchg
push
hlt
mov
jno
add
lea
test
es
push
jmp
or
pop
js
popf
mov
inc
incb
js
jno
repnz
mov
jp
js
add
inc
stos
jnp
dec
sbb
lock
repnz
movaps
pop
sahf
cwtl
mov
mov
sbb
jne
push
dec
cmp
xor
jbe
clc
imul
xor
pop
rcll
pop
cmpsl
xor
or
ss
lea
push
test
int
mov
leave
ja
ret
xor
aad
js
pusha
or
push
push
dec
jecxz
jb
mov
sbb
cmpsb
dec
fnstsw
adc
pop
dec
mov
dec
push
and
loop
enter
sarb
dec
je
dec
sub
and
add
test
in
dec
push
pop
or
inc
add
sbbl
fldenv
cs
loop
mov
push
fchs
jmp
sbb
sbb
and
cmp
test
push
loope
in
clc
call
adc
addr16
add
xchg
or
pop
push
jl
mov
sub
pop
and
mov
mov
scas
mov
jp
cmp
sbb
inc
mov
cmp
mov
jle
push
jbe
pop
cmp
or
pop
lahf
aad
dec
mov
xchg
mov
pop
pop
and
lcall
gs
jg
cld
repz
stos
add
mov
in
adc
adc
inc
mov
dec
or
jle
or
mov
and
sbb
mov
inc
cmp
mov
enter
pop
push
hlt
sbb
add
in
pop
ja
mov
or
or
or
xor
and
fisubs
inc
xchg
fisttpl
jae
cmp
jmp
ficoml
push
rolb
mov
mov
sub
nop
pop
xchg
fs
movsb
jmp
xchg
out
push
sub
fs
jb
push
xchg
imull
in
xchg
out
sahf
jo
pusha
pop
push
dec
fs
push
pop
pop
xchg
fs
mov
mov
scas
mov
data16
divl
and
push
nop
gs
xor
inc
enter
mov
int
jns
push
in
push
hlt
cld
add
or
cmp
daa
pop
iret
jnp
sub
inc
or
pop
insb
jmp
pop
push
xchg
test
js
out
jne
mov
sbb
xlat
cli
out
xchg
jb
lea
test
jbe
mov
loop
jno
push
cmp
jne
mov
rcr
mov
jne
es
push
ds
and
adc
lret
mov
inc
mov
ret
sbb
iret
iret
jnp
inc
adc
jmp
std
std
jmp
addr16
cmp
dec
fucomi
pavgw
jmp
mov
adc
inc
inc
jmp
cld
mov
shrl
shr
int
test
loope
rorb
pop
scas
push
pop
jo
lahf
out
sti
lds
push
dec
adc
push
and
lahf
iret
divl
jg
push
dec
and
push
jg
outsl
data16
jl
inc
or
jbe
jle
xor
jg
and
jg
jo
mov
xor
scas
mov
mov
repnz
cmpsl
jns
cli
or
ffree
mov
xor
das
xchg
lret
and
or
fmuls
loopne
mov
or
dec
test
mov
jg
dec
call
sub
push
inc
nop
flds
rcll
test
call
inc
cld
fildll
shrl
rorl
sub
xor
or
stos
lock
rep
pop
push
sbb
enter
mov
cmp
lods
and
out
scas
push
and
sub
push
push
push
ret
enter
ret
jmp
insl
and
sbb
out
mov
test
sbb
hlt
enter
jge
pop
mov
shrl
sarb
shr
and
add
imul
adcl
pop
bswap
add
push
jo
cmp
push
push
insb
push
push
enter
inc
das
fidivl
popf
sbb
out
xor
repnz
clc
pop
idivl
add
sbb
test
stos
dec
enter
dec
lods
roll
and
icebp
inc
loopne
loope
xor
inc
pop
mov
pop
and
rorb
sub
aas
or
daa
mov
movsl
gs
dec
push
pop
ja
pop
stos
sbb
stos
loope
nop
xor
xor
mov
add
and
cmc
nop
sbb
add
loopne
fnstcw
sub
fcompp
cli
outsb
mov
stc
outsl
add
fisubl
mov
jne
and
and
jbe
cmp
or
jnp
mov
or
cmpsl
push
push
cmp
jnp
and
or
aas
push
jecxz
mov
js
cs
inc
adc
les
pop
rclb
lods
cld
push
movl
loope
xor
pop
mov
mov
jne
dec
add
in
dec
mov
cs
or
add
mov
push
sub
mov
push
adc
lock
jecxz
icebp
add
cmp
mov
inc
mov
mov
imul
and
cmp
mov
repz
push
xlat
xor
sub
mov
clc
pusha
inc
std
dec
mov
enter
cmp
fisttps
add
lea
fimuls
addb
test
not
push
add
test
add
xor
popa
js
or
repz
pop
sub
or
pop
shlb
sbb
jb
pop
jb
inc
inc
mov
and
dec
pop
cmp
mov
push
test
test
jae
cmp
bound
dec
pop
mov
jbe
and
cmp
clc
insb
xor
cmp
or
mov
jne
push
jo
fdivs
scas
insl
jg
fcompl
or
stos
jle
mov
daa
shrl
mov
pop
add
sbb
pop
mov
pop
loopne
xor
sbb
xchg
sub
loopne
adc
jbe
mov
adc
push
push
les
clc
pop
and
lret
daa
test
shll
cltd
outsb
es
adc
add
and
stos
test
outsb
movl
test
int3
aas
add
gs
mov
clc
sbb
or
sbb
xor
mov
and
cmp
and
fxch
ret
aas
pop
mov
insb
inc
lcall
or
nop
inc
xchg
lods
ds
pop
inc
shll
add
loop
xor
add
push
daa
cmp
in
flds
lea
mov
lret
testb
mov
test
dec
xchg
and
shll
ret
xchg
adc
inc
subl
add
fwait
loopne
rcll
pop
xchg
add
mov
adcl
jns
pushf
pop
fists
or
and
cmp
call
add
pop
loopne
data16
es
cli
jae
sub
lcall
popa
jge
jge
jle
push
or
cmp
pop
mov
or
pusha
add
or
xor
test
les
lea
loopne
loopnew
mov
xor
push
mov
inc
insb
ret
insl
dec
adc
fcoms
xchg
mov
stos
inc
loope
cld
scas
add
xor
movb
and
jnp
mov
or
or
lods
pop
stos
movsl
mov
call
xorb
inc
add
xchg
push
xor
lea
mov
insb
pusha
aaa
pop
stos
mov
sti
sbbb
add
test
mov
dec
xchg
mov
fsub
movsb
rclb
mov
movb
jg
push
fadds
cmpb
and
cmp
cmpl
cmp
ret
ja
inc
rolb
lock
push
daa
push
fsubl
and
jmp
test
fisttpll
cmpsl
jo
adc
and
fidivrl
and
mov
cmp
xor
adc
rorl
pop
add
inc
push
and
lock
leave
mov
push
loope
mov
test
fiadds
call
mov
rorl
or
test
or
push
or
je
pop
inc
add
push
js
push
cld
sub
mov
jg
ret
dec
shl
or
xor
sti
rorl
dec
pop
sub
mov
mov
inc
dec
jne
pop
sbb
mov
dec
mov
in
sbb
mov
test
test
adc
jbe
mov
pusha
mov
mov
cltd
mov
mov
jne
test
push
movb
popf
out
lods
mov
add
cmp
ja
sub
data16
xor
or
jno
push
sub
inc
mov
inc
adc
push
jbe
pop
out
fisubrs
cld
ficoml
push
pop
movb
lods
rcrb
pop
icebp
mov
push
cmp
in
and
jbe
testb
dec
and
mov
jg
in
ss
orb
mov
mov
adc
adc
sbb
nop
mov
adc
pop
fbstp
mov
test
mov
cmp
xchg
or
rorb
mov
push
sbb
lret
add
jmp
cmp
push
jmp
jl
and
and
jl
push
add
add
iret
jb
lcall
and
lahf
scas
fmuls
clc
mov
mov
mov
xchg
xchg
and
mov
inc
cmp
mov
add
push
mov
lret
push
mov
mov
push
les
mov
jmp
jbe
jbe
and
pop
add
push
addr16
push
jge
movsb
push
movl
fiaddl
and
inc
std
jne
pusha
out
xor
jmp
sub
lahf
lret
add
jmp
push
rol
mov
and
pop
push
test
push
inc
fdivp
mov
test
xchg
sbb
mov
arpl
mov
mov
data16
repz
in
add
lock
out
into
std
add
jo
imul
pop
loop
movsl
inc
loop
and
pushf
mov
xchg
push
and
xor
lea
push
inc
rolb
les
mov
jae
push
call
push
repz
out
movsb
iret
jp
in
aas
fidivs
mov
test
sbb
cmp
sahf
pop
leave
inc
aas
loop
loope
xchg
mov
xor
lea
popf
aaa
jmp
xchg
into
sub
add
std
std
popa
shr
loopne
andb
cmp
clc
jbe
mov
inc
inc
adcb
sub
stos
xchg
loopne
loopne
xorb
xor
popa
in
nop
stos
inc
js
mov
insb
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
or
mov
jl
sbb
add
jbe
mov
incl
ds
clc
or
inc
or
inc
dec
jne
cmp
movsb
mov
out
or
push
add
loop
jnp
test
xor
jo
jp
pop
or
hlt
adc
clc
out
dec
loopne
adc
sub
mov
in
dec
pop
sub
rclb
or
cld
cmpsl
lods
movsb
in
mov
push
cmp
mov
sti
rep
andl
pop
aam
mov
les
or
or
cmpsb
vcvtps2pd
inc
fsubrs
push
xlat
in
test
cli
jo
insb
ljmp
add
repz
pop
and
cmp
push
or
sbb
xchg
pop
jge
pop
xchg
cmp
cmp
sub
jmp
xor
dec
sbb
mov
push
inc
mov
bound
pop
lods
insb
pop
ret
ss
push
out
arpl
rcl
insl
adc
jne
es
xor
adc
and
loopne
and
add
loopne
mov
sahf
jmp
leave
cmpl
stos
push
push
and
pop
movl
mov
fstl
outsl
cmp
es
movsb
std
cmp
pop
cmp
jne
sbb
adcb
pushl
fsubs
or
mov
sbb
das
adc
xor
inc
sbb
sub
insl
fmul
cmp
sbb
rcrb
mov
popa
test
adc
cwtl
sub
push
filds
lods
mov
js
push
push
cmpl
pusha
or
fs
pop
dec
inc
add
cmp
adc
loopne
loop
sub
jne
ds
test
popa
xchg
xor
in
mov
push
push
mov
mov
lea
jnp
or
aaa
cmpl
test
sbb
push
pop
ret
or
cmp
add
mov
inc
or
dec
xorl
shrl
xor
call
xor
je
push
mov
je
jmp
xor
inc
test
lods
or
sub
jbe
enter
sbb
lock
mov
cmpl
jo
dec
aas
fs
lea
mov
test
into
fucomip
int3
je
roll
mov
insb
push
sub
xchg
les
insl
mov
lea
les
sub
xor
lods
mov
sbb
sbb
or
fsubrl
popf
aam
sarb
data16
popf
enter
mov
mov
and
inc
dec
rolb
rclb
mov
call
adc
insl
stc
push
jbe
pop
pop
add
rol
add
mov
cmp
sahf
push
or
fcoms
jo
jno
lea
mov
aas
mov
pop
push
mov
and
leave
aam
daa
jge
jl
ret
pop
jmp
jge
insl
jne
mov
mov
add
pop
adc
stc
sub
in
push
adc
repnz
inc
pop
out
push
adc
sbb
push
pop
cmp
test
jl
aas
xchg
fs
jne
mov
mov
pop
es
pop
and
dec
xor
push
mov
sub
loopne
mov
cmp
mov
cmp
add
sub
test
lcall
fiadds
movsl
push
mov
push
adc
mov
mov
push
je
pop
ret
cli
in
fmull
in
gs
pop
sub
pushl
std
push
pop
test
je
cli
or
mov
mov
into
ficoms
xchg
movl
shrb
add
mov
cmpsl
dec
xor
pop
push
test
or
shlb
pop
popa
jo
jge
loope
xor
int3
aam
xchg
js
jge
rep
or
jo
pop
inc
testb
jbe
xchg
pop
test
add
sbb
cmpsl
mov
cmp
aas
push
cs
std
sbb
or
sbb
pop
sbb
mov
ja
add
popf
pop
rcrl
xor
fsubp
cltd
leave
test
sbb
sub
fsubrl
nop
jl
mov
push
mov
jl
push
movsl
inc
rcll
pcmpgtw
bound
lahf
mov
add
add
push
xchg
js
push
xchg
outsb
orl
mov
push
cltd
inc
inc
cmp
cmp
loopne
sbb
push
mov
je
sub
push
pop
add
or
dec
push
push
add
push
sbb
dec
pushl
push
push
dec
push
dec
add
push
mov
xor
cmp
pop
jne
push
cmp
je
jl
pusha
testl
ss
dec
inc
sti
imul
pop
ret
imul
divl
pop
adc
push
push
pop
mov
mov
sub
aas
clc
cmpl
cwtl
int3
testl
xor
loop
sbb
and
rclb
mov
andl
pusha
xchg
sbb
daa
loop
cmp
stos
adc
push
jno
int
xor
pop
or
mov
dec
xchg
fcoml
lahf
adc
push
jne
push
aas
out
and
and
mov
insl
add
xor
sbb
cwtl
pop
call
nop
cs
cmp
adc
jmp
push
push
clc
inc
orl
jmp
push
clc
lock
mov
push
jne
sbb
inc
shlb
pop
adc
mov
in
or
cli
push
xor
or
dec
dec
rclb
mov
ret
mov
mov
sti
adc
daa
push
mov
or
lock
push
xor
jae
mov
leave
adc
sub
dec
in
outsb
dec
mov
mov
loope
cmp
push
fiaddl
mov
adc
or
xor
es
jmp
cmp
roll
adc
dec
add
sete
mov
inc
sub
dec
sub
dec
bound
inc
adc
push
or
data16
insb
add
sbb
mov
mov
add
sub
inc
add
sub
clc
shlb
xchg
jns
lahf
push
push
cmc
add
sarl
push
add
imul
inc
mov
jns
mov
adc
xor
mov
jo
cs
and
in
sarl
mov
shr
not
push
imul
mov
lods
or
add
pop
push
adcb
jbe
fiadds
fldl
ficoml
pop
jo
push
or
je
mov
dec
xchg
icebp
outsl
push
ss
cmp
movsb
addb
mov
sub
push
pop
mov
or
lret
cmp
pop
fisttpl
ja
fstl
fcmovb
out
imul
add
enter
jne
and
shrb
je
adc
mov
or
fadds
daa
pop
and
sbb
sbbb
test
jbe
dec
adc
insb
notl
test
or
pop
roll
stc
cmp
jge
imul
jle
andl
cmp
sbb
cmp
jl
pushl
lock
push
jne
movl
mov
pop
cmp
cmp
and
sub
sbbb
movsl
cmpsl
jb
xchg
cmp
test
cli
out
jbe
jbe
fdiv
and
sbb
and
scas
out
inc
dec
in
jns
mov
cmp
loope
loopne
fsts
push
add
icebp
imul
inc
or
fbstp
in
hlt
add
cmp
jae
cmp
or
add
call
and
lret
aam
jle
cmp
or
aam
or
and
or
fnstcw
jecxz
add
mov
inc
mov
ja
mov
dec
ja
fbstp
adc
jb
jmp
xchg
sub
je
and
outsl
or
je
dec
in
mov
sbb
push
scas
je
push
mov
mov
push
xor
xchg
adc
pusha
imul
fdivs
les
add
in
jecxz
out
addb
aad
data16
or
add
call
in
sti
aam
inc
pusha
jne,pn
sbb
inc
mov
cs
rclb
xchg
out
jle
adc
and
mov
mov
aam
mov
push
push
scas
aam
jmp
lods
adc
mov
mov
sbb
push
push
popa
pop
add
dec
jmp
imulb
adcl
xor
mov
pop
push
roll
fs
jns
cmp
cld
sbb
lret
insb
cld
lret
shrb
insl
cmp
mov
add
das
jne
cmc
xchg
rorl
xor
xchg
pop
ret
dec
arpl
add
cmc
or
push
inc
imul
push
test
adc
and
inc
mov
jo
or
mov
xchg
test
cmp
mov
cmp
mov
ficoml
sub
pushf
lcall
pop
popf
ret
sub
push
xchg
adc
fmuls
repz
inc
mul
mov
sub
xor
mov
add
sub
insb
loope
rclb
jp
sbb
cmp
add
sub
mov
dec
icebp
out
jbe
ss
push
test
mull
out
push
ss
lsl
jmp
push
pop
push
fcos
out
int3
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
ret
out
dec
adc
inc
mul
pop
jb
cmp
divl
push
jbe
dec
sub
sbb
adc
or
insb
fcmovbe
adc
ds
pop
repnz
imul
and
repnz
mov
mov
data16
push
cmp
test
bndldx
pop
fistpll
xor
adc
jl
or
les
shlb
jmp
adc
inc
pusha
add
push
lds
sub
clc
mov
inc
push
push
sub
xchg
jne
adc
shrb
or
adc
lcall
js
addps
jns
clc
das
or
adc
adc
xor
mov
jno
push
pop
push
mov
or
xor
lods
in
dec
sbb
pop
test
push
pop
data16
mov
pop
xchg
lea
or
insb
sti
insb
sbb
adc
add
and
ror
fidivs
insb
or
or
clc
jbe
add
xchg
stos
jp
and
sbb
test
and
pop
test
jmp
sbb
scas
dec
adc
pusha
mov
jmp
mov
add
cmp
jl
xchg
test
aam
ja
subb
jne
movsb
mul
cld
jbe
or
cmpsb
add
punpcklbw
jmp
and
test
mov
es
xchg
adc
cmp
jb
ljmp
pop
inc
pop
popa
adc
jo
and
or
cmp
pushf
sbb
add
jnp
dec
dec
cmp
push
rcrb
test
add
aam
ds
adc
stc
dec
or
cmovae
dec
adcb
inc
mov
push
xor
je
rorb
jmp
out
mov
add
xor
mov
das
xchg
inc
stos
jecxz
je
bound
mov
or
lock
push
pushf
add
xchg
in
pop
fldl
ret
loope
add
sti
mov
lea
cmp
stos
push
mov
mov
mov
movsb
jb
test
or
xor
adc
jb
ja
jb
cmp
pop
call
add
addb
cwtl
or
inc
mov
jge
rcll
add
adc
hlt
call
and
and
mov
or
daa
push
or
cmc
ja
jb
mov
cmp
cltd
mov
ja
pushl
dec
or
hlt
call
pop
or
arpl
mov
lock
rcll
push
ss
push
rol
and
aas
push
jp
insl
call
mov
cmpb
mov
jmp
inc
mov
pusha
jmp
or
inc
xchg
adc
push
and
jne
mov
sbb
inc
shlb
ds
faddl
dec
out
sahf
pusha
jb
mul
enter
sbb
add
xchg
add
in
pusha
xor
dec
or
rcrl
cmovb
or
orl
inc
cmpsl
popf
pop
mov
jl
clc
adc
mov
add
cmpsl
xor
xlat
cmpsl
jmp
shrb
push
mov
add
pop
xchg
jbe
test
jne
scas
outsl
mov
mov
push
andl
inc
push
xchg
sbb
andl
adc
das
int3
decb
xor
add
cmc
pop
mov
add
push
or
or
lret
out
jne
inc
ljmp
pop
jge
cld
pop
insb
or
push
ds
out
mov
sbb
clc
dec
cmp
mov
jle
push
push
jne
pop
or
and
jns
cmpsb
push
dec
fdivrp
cli
stc
jbe
ljmp
xorb
xchg
add
je
push
push
jns
mov
jecxz
ret
dec
hlt
scas
jb
ljmp
push
push
in
push
cmp
popf
popa
mov
pop
pop
call
mov
push
outsl
lock
mov
je
je
leave
test
rclb
cmp
xchg
orl
mov
or
push
pop
pop
mov
add
sahf
nop
push
subl
subb
pop
addb
out
stos
inc
out
addl
aaa
out
xor
add
int3
and
push
jmp
pusha
outsb
pop
in
jle
mov
jne
inc
jns
adc
cmpl
fstpl
xor
jo
cmpsb
shrb
add
cld
push
mov
adc
lea
sti
sub
popf
in
mov
pop
aam
fadd
push
mov
cmp
jo
xor
cmpb
pushf
out
test
aaa
add
pop
push
ss
ret
xchg
out
shrb
xchg
call
xchg
outsl
xlat
jnp
add
orl
rorb
imul
jnp
loopne
ja
mov
movsbl
push
sbb
sbbb
rcll
rol
clc
pop
sar
pop
mov
mov
xchg
add
jbe
orl
into
in
mov
outsb
sub
pusha
mov
lret
dec
or
je
sub
and
add
push
pushf
jb
in
jne
or
add
push
mov
or
mov
nop
cli
xchg
sub
imul
cld
adc
jl
mov
lea
mov
mov
sbbb
imul
cs
dec
imul
ja
movsl
mov
mov
pusha
ret
hlt
out
jo
int
or
stos
inc
stc
cmp
push
or
inc
insb
je
xor
mov
test
add
loope
insb
loopne
sub
mov
sti
or
mov
pop
and
or
enter
add
orb
enter
movsl
cltd
sbb
fs
or
lret
out
imul
data16
sbb
js
pop
jg
xor
xlat
je
mov
xchg
lret
outsb
dec
xchg
das
add
shlb
sahf
pusha
fidivs
je
cmp
adc
or
in
jmp
dec
add
mov
ret
add
hlt
push
inc
shrb
cld
fsub
lock
popf
and
je
xchg
iret
roll
jae
pushf
testl
xchg
mov
dec
jne
das
mov
adcl
lods
jecxz
jo
sbb
dec
and
aam
test
in
shlb
outsb
ljmp
iret
mulb
es
sub
and
imul
cs
aaa
loopne
into
mov
rol
loopne
lock
push
xor
negl
push
xchg
add
testb
lret
ss
addb
testb
fdivs
lahf
pushf
je
mov
jmp
mov
push
push
inc
pushl
daa
jne
or
ljmp
in
setp
stos
mov
inc
mov
hlt
mov
pop
nop
cmp
pop
xor
add
lea
jae
cs
sbb
loope
test
sub
push
jo
inc
ret
repz
in
jl
jmp
jl
je
cmp
je
test
xchg
lock
aas
xor
mov
pushf
mov
test
or
ss
dec
sub
xchg
dec
loopne
or
or
mov
sbb
push
orl
or
adcb
push
lret
mov
dec
ficompl
ret
mov
jne
mov
jne
mov
jmp
lahf
out
pop
mov
insl
cmpl
incl
adc
add
int
xorb
or
insl
xlat
out
jl,pn
call
cld
adc
sti
pushl
adc
xor
mov
xchg
test
jl
jecxz
lea
stc
lcall
pop
fcompl
adc
sub
fdivs
ds
inc
push
cmp
push
adcl
popa
push
xor
mov
shrb
push
out
addr16
decb
mov
xchg
inc
daa
add
fimull
in
push
push
push
sbb
xor
sbb
push
xor
adc
inc
cmp
push
jne
push
sbb
inc
sbb
inc
push
fdivrl
cmpsb
jmp
or
imul
int3
je
cltd
nop
rorb
lea
sbb
shlb
push
rclb
rolb
jecxz
nop
mov
mov
pop
fimull
mov
or
cmp
mov
lret
out
test
pop
mov
or
jne
and
lea
adc
emms
sbb
sub
sub
push
push
push
inc
addb
cmp
xchg
clc
sahf
add
sub
push
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
pop
lea
jb
add
jnp
mov
movb
inc
jmp
cmove
or
jmp
dec
mov
aaa
adc
repz
sar
roll
fmuls
push
je
push
jl
jecxz
jmp
rorb
sub
push
test
dec
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
xor
mov
push
jp
imul
sub
fdivrl
mov
lea
lods
push
cmp
add
push
jbe
dec
sarb
jne
jnp
jne
jno
aaa
cmp
or
pushf
push
jl
mov
rcll
push
jbe
adc
pushf
test
add
add
cmpsb
ljmp
xor
sti
push
and
jg
icebp
jl
testl
push
xchg
negl
jo
mov
daa
dec
cmp
loop
mov
mov
sbb
cmp
mov
test
je
push
mov
inc
mov
sbb
push
sub
test
fisubs
es
out
mov
cmc
or
jp
push
or
push
or
push
or
push
data16
cmpsb
mov
sub
ficomps
dec
mov
jae
sub
fldl
cld
shr
mov
imul
dec
xor
push
dec
adc
test
mov
cli
xor
sbb
mov
js
push
cld
das
xor
cmp
add
ret
ja
clc
pushl
add
cmp
jbe
push
pop
into
cmp
jg
shlb
inc
sub
jae
mov
shr
lea
not
and
push
cld
mov
and
and
push
lea
xor
pop
loop
mov
add
insb
call
add
addr16
sti
sub
dec
rcrb
push
or
imul
push
in
sub
jmp
adcl
add
jl
sti
std
adc
clc
and
sti
add
mov
dec
pop
cmp
jbe
xor
clc
imul
fistpll
and
cmp
je
xor
clc
outsl
cs
jno
mov
shr
not
and
adc
pop
dec
add
lea
stc
push
mov
xor
es
mov
xor
mov
mov
or
sbb
test
mov
adc
fcoms
negl
or
adc
mov
cmp
jg
mov
inc
mov
mov
push
out
xor
xchg
lods
push
or
pop
ret
testl
dec
adc
push
mov
mov
adc
push
xor
lock
jecxz
sbb
fldcw
push
mov
shl
add
scas
jp
push
call
aas
adc
mov
push
or
cmp
sub
dec
inc
push
or
cmpb
pop
add
cmpsb
add
gs
rcrb
mov
adc
dec
fisubl
jle
inc
sbb
mov
adc
push
lea
loopne
mov
mov
push
cmp
or
inc
loopne
cmp
mov
inc
pop
mov
jo
fsubrl
subb
imul
cmpsl
fisubrl
js
je
aam
jmp
addl
addr16
negb
les
and
mulb
xorb
add
mov
push
fstps
xor
push
and
clc
push
or
adc
jbe
push
fucomi
fwait
orl
xchg
xchg
lds
adc
pusha
aaa
fs
xchg
sub
je
adc
push
cmp
inc
movsb
jl
lds
mov
imul
sub
clc
pop
mov
add
rorb
hlt
mov
mov
mov
push
sbb
jno
xlat
jmp
add
push
push
cli
ja
inc
sbb
sub
shr
inc
orl
sub
nop
cld
or
adc
ja
fldl
lock
call
pop
add
bound
orb
aam
sub
sub
jnp
or
fs
inc
jmp
sahf
pop
mov
jl
call
test
push
mov
jecxz
pop
mov
add
and
not
and
pop
sub
adc
repz
adc
repz
xlat
sub
pop
shr
xor
cld
clc
push
in
xchg
je
cmp
jle
pop
and
ret
mov
cmp
ret
int3
inc
adc
repz
stc
add
cmpsb
stos
lret
push
mov
int3
push
pop
and
ds
mov
add
xor
add
and
shl
jae
test
nop
dec
or
pop
push
inc
jg
jns
sub
add
pop
adc
movsl
adc
fcmove
adcb
incl
mov
enter
sub
pop
mov
lea
jmp
pop
jg
or
mov
imul
xor
adc
lcall
fwait
rclb
jmp
orl
jp
js
test
dec
mov
push
pusha
scas
jbe
insb
xor
pop
xchg
into
mulb
jbe
and
ret
cmp
clc
jl
inc
inc
or
mov
sub
pop
xor
adc
add
dec
jp
movsb
and
mov
clc
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
fld
add
insb
dec
ficoms
loope
int3
fiaddl
fimull
cmp
mov
loopne
adc
dec
add
lods
push
push
cs
decb
into
mov
out
cmp
or
push
xor
jns
dec
push
ss
pop
inc
mov
sbbb
dec
add
inc
jp
inc
jmp
ret
inc
sub
inc
cmp
push
frstor
pushf
aam
push
push
xchg
out
sub
or
mov
dec
or
loope
cs
dec
fisubl
and
dec
or
je
or
call
sbb
mov
jne
jmp
leave
jae
or
jae
xor
aaa
arpl
cmp
mov
and
lcall
xchg
pop
pop
lcall
cld
add
sbb
ss
jo
in
cli
and
mov
dec
or
or
cmc
jno
or
ret
dec
mov
je
cs
xchg
je
gs
aad
jmp
dec
mov
lock
enter
adc
outsb
leave
inc
inc
fdiv
int3
test
inc
push
pushf
mov
sub
xchg
aad
icebp
sbb
shr
mov
add
aad
push
pop
xchg
sbb
iret
push
add
fstl
push
test
and
jne
addb
or
sub
jae
in
jp
mov
cltd
pusha
dec
bound
dec
push
and
push
clc
into
xor
popf
and
jbe
repz
xor
push
or
int3
inc
pop
das
pop
xor
sub
mov
sbb
jge
inc
or
ret
clc
mov
out
or
dec
cld
or
cmpsb
call
inc
or
loopne
inc
sbb
mov
out
or
stos
pop
or
nop
mov
call
ja
jl
add
scas
and
jl
sbb
hlt
mov
lea
dec
jne
cmp
into
push
pop
add
test
jo
ret
roll
leave
sbb
sete
xor
lods
adc
sarb
adc
push
inc
pop
in
or
and
les
mov
mov
inc
mov
add
add
clc
mov
movb
sbb
cli
push
aam
loop
and
inc
stc
ja
push
daa
xor
or
or
inc
add
shrb
jmp
je
and
loopne
aad
or
inc
shl
lcall
adc
add
push
pop
dec
cmp
xor
jmp
ja
xor
lret
ret
lcall
xlat
sbb
pop
pop
xor
pusha
inc
jne
or
pusha
and
push
or
scas
and
jne
jmp
daa
xlat
stos
sub
dec
mov
cltd
sub
push
sub
jp
je
or
lods
mov
imul
in
push
cs
dec
pop
push
add
lsl
fistpl
outsb
repz
out
mov
ja
ja
jae
xchg
popf
and
or
pop
push
loopne
xchg
add
or
sbb
inc
dec
xchg
std
push
add
pop
push
or
cmp
data16
addb
sarb
call
iret
outsb
sub
into
xor
sub
fdivrs
das
data16
push
jae
push
xchg
mov
sbb
jmp
sub
into
and
cmp
adcb
stc
daa
sub
sub
cs
and
pop
enter
sub
fsubs
sub
cmp
pushf
mov
ja
sbb
xor
test
jl
inc
dec
mov
movsl
psubusw
add
pusha
fdivrp
add
lahf
jno
hlt
jne
push
aas
add
and
jne
push
rorl
xor
inc
cmp
sti
popa
cmpsb
push
pop
or
pop
pop
inc
popf
add
cmpb
pop
aam
lret
lea
les
add
sbb
inc
pop
pop
inc
xchg
ss
cli
daa
pop
add
fstl
aam
je
das
andl
out
ds
es
dec
pop
jne
addr16
and
sbb
xchg
test
mov
push
jmp
lahf
loop
faddl
mov
lcall
pop
push
in
test
je
mov
pop
push
call
sub
ja
and
mov
inc
add
cmpb
xchg
add
pop
or
adc
aam
mov
mov
inc
loopne
xor
or
call
add
shlb
mov
or
divl
inc
inc
adc
push
fsubp
repnz
les
int3
xchg
cmpsl
repnz
rolb
aam
fcoms
out
jl
jbe
faddl
call
sahf
xchg
aas
inc
mov
sub
ds
loop
andl
adc
fimuls
les
inc
adc
pushf
cmpsb
imul
pop
adc
lcall
mov
inc
stos
cmpsb
es
or
clc
push
lods
pop
into
adc
xchg
or
or
or
lret
jmp
inc
pop
inc
xor
push
or
loopne
lcall
mov
aam
push
adc
pop
sub
enter
push
mov
in
push
movsbl
jg
insb
add
rcrb
add
sub
sahf
je
sub
cwtl
aad
insb
test
lds
iret
jp
movl
pushf
jmp
andl
xchg
test
shll
movsb
scas
jbe
mov
pop
pop
lods
cmp
and
loopne
pop
mov
mov
add
jle
pushf
mov
pusha
sub
rolb
xorb
pop
lock
fistps
dec
dec
rolb
mov
lahf
xor
xor
pop
inc
lock
outsb
mov
push
cmp
outsb
bound
dec
test
inc
mov
ret
push
test
or
pushf
or
jae
scas
dec
push
lcall
gs
out
ds
mov
xchg
jne
jmp
sti
xor
jmp
in
and
in
adc
repnz
dec
bnd
jl
jmp
in
rolb
xor
dec
jmp
lea
test
fcompl
sub
and
inc
ja
adc
arpl
dec
orl
sbb
outsb
pop
pop
pop
mov
jmp
das
pop
push
cmp
not
lcall
push
lock
jmp
push
and
jge
hlt
je
enter
or
mov
subb
sbb
mov
testl
mov
lcall
xor
mov
in
sbb
fldt
sbb
cmp
cmp
or
and
or
fdivp
push
and
imul
pop
adc
aas
sbb
mov
mov
cwtl
mov
dec
orb
add
insl
movsl
stos
movsb
mov
loopne
insb
push
cwtl
xor
jnp
lock
push
pushf
js
dec
pop
cmpsb
imul
push
sbb
cmpl
jb
add
mov
pusha
test
mov
test
ds
add
out
in
jbe
jle
adcb
xor
mov
invd
inc
adc
adc
inc
mov
rorb
lods
fldt
and
push
pop
mov
lock
mov
pusha
pushl
jge
cmp
jb
mov
lea
movsl
add
or
mov
dec
or
std
xor
fcoml
jg
xor
and
and
insl
scas
mov
and
shlb
xor
ds
andl
adc
sbb
jle
sbb
ja
ja
mov
or
jl
pop
xchg
out
jb
movb
int3
movsb
jne
cmp
enter
jne
test
dec
les
jne
inc
or
cmp
push
add
call
stos
mov
jne
push
pushf
mov
aaa
mov
mov
movsb
add
add
lods
sbb
pop
test
ds
sub
or
imul
in
scas
shl
or
lea
mov
lock
mov
mov
mov
ss
ja
push
data16
xor
subl
lcall
cld
inc
cmpsb
sub
lcall
jg
add
or
mov
faddl
jne
sbb
test
adc
aam
aaa
leave
clc
add
lock
aas
or
push
andb
lds
jge
jg
or
adc
inc
mov
les
lcall
pushl
pop
push
push
cld
lods
sub
shrl
and
inc
loopne
shr
or
mov
sahf
dec
imul
pop
add
leave
out
push
outsb
fstpt
push
ja
insb
aam
loope
mov
dec
into
sub
lret
cmp
mov
add
ficompl
rorb
jo
sti
pop
fidivs
in
fiadds
push
call
or
inc
fidivl
cs
das
jle
jb
into
out
ret
mov
shr
push
add
jmp
mov
sbb
pusha
or
sub
ficomps
xchg
lret
into
jmp
scas
test
push
jae
fwait
loop
enter
jae
jno
les
and
pop
inc
int3
cmpsb
xorb
lret
aad
jmp
sub
add
mov
negb
pop
in
add
adc
and
inc
bound
add
or
dec
pop
rcrl
push
push
pop
sub
rcr
inc
nop
mov
push
push
add
dec
pusha
shll
xor
iret
push
push
push
add
pushf
mov
adc
xchg
push
push
pop
push
add
subl
mov
mov
test
mov
jmp
xchg
loopne
movb
or
or
fidivl
or
cmp
xor
jo
adc
or
ss
lcall
and
mov
pusha
adc
dec
mov
enter
cld
xlat
add
mov
sub
add
and
cld
push
inc
push
js,pt
lea
lret
loopne
lea
push
cld
jl
pusha
and
and
mov
dec
add
movsb
sar
cmp
xor
pop
mov
mov
ljmp
mov
add
push
mov
dec
dec
adc
mov
leave
insl
inc
popa
loopne
in
dec
std
push
loopne
mov
es
dec
incb
push
outsl
jecxz
inc
add
lea
aas
push
xchg
jge
or
inc
or
inc
adcl
lea
loopne
xchg
repz
push
cmp
jo
ret
dec
add
jmp
xchg
orl
or
rolb
shl
push
sub
and
add
inc
lods
aas
push
aaa
aas
dec
pop
call
add
sub
adc
jne
or
je
adc
mov
movl
icebp
stos
inc
enter
loope
mov
adc
xor
pop
sarb
pusha
push
jl
add
pop
sub
sarl
and
and
cmpl
xor
sub
push
sbb
fcoml
or
adc
hlt
data16
jmp
imul
pop
stos
or
adc
jno
jmp
jg
cmp
fdivrs
xchg
rcrb
adcl
jl
cmp
or
mov
pop
pop
sub
xor
aaa
inc
sbb
dec
dec
addb
incl
adc
xchg
or
arpl
inc
pop
fadds
sbb
dec
dec
jl
pop
adc
dec
sbb
dec
inc
and
push
mov
jne
mov
insl
dec
and
dec
add
xchg
xor
clc
mov
in
sbb
or
push
sbb
mov
shrb
sbb
cmp
insb
sub
inc
add
add
cmc
push
or
pop
mov
inc
out
inc
jo
rol
inc
push
sub
inc
cmpsl
aad
add
sub
push
and
lret
rol
jne
dec
shlb
int3
or
ret
push
jl
out
lods
mov
add
pop
mov
inc
bsf
push
xor
add
mov
cmpsl
lock
xor
icebp
mov
sbb
pop
and
pop
inc
jae
pop
add
and
stos
xchg
push
pop
lea
out
loopne
or
icebp
test
sbbl
and
int3
jmp
fiaddl
add
popa
out
dec
sub
aam
pop
sahf
push
sar
lcall
mov
inc
jp
push
stos
xor
sub
add
adc
xor
add
test
xor
jmp
inc
insb
cmpsb
adc
iret
sub
lock
xor
mov
loopne
mov
sub
mov
or
jne
or
cmp
jle
xor
cmp
xor
add
inc
imul
cmp
xchg
push
mov
push
push
jge
sbb
fwait
push
aad
mov
add
sar
mov
jle
popf
daa
or
or
sbb
not
fidivl
rcrl
aad
stos
xchg
mov
ret
es
dec
clc
jno
pop
fs
push
sar
testb
sbb
das
insb
pop
pop
push
pop
jl
adc
test
jl
inc
pushl
pop
mov
inc
lea
sbb
xchg
jns
scas
ja
pusha
dec
sub
out
mov
popf
pop
cmpl
push
cmp
jbe
inc
in
sbb
mov
fbstp
addr16
mov
mov
adcb
lods
cld
scas
movb
adc
push
hlt
mov
mov
test
jmp
movsbl
inc
insb
lods
rcrl
jnp
out
pushf
sub
jp
in
pop
enter
push
mov
cmp
sbbl
dec
loopne
test
call
jmp
dec
cmp
lea
push
dec
hlt
lea
add
lods
jnp
inc
xor
or
lcall
inc
mov
test
sbb
add
jecxz
clc
cmpsl
xor
sarl
cmp
test
adc
add
mov
push
test
or
jno
add
loope
xlat
mov
add
push
dec
push
jmp
add
xor
mov
mov
js
add
inc
int
hlt
lock
daa
sub
cmp
cmp
cmpsl
push
cmp
test
test
je
mov
sbbb
sub
cmp
sbb
cmp
jb
loopne
jge
mov
mov
inc
mov
sbb
dec
rcll
sbbb
mov
inc
test
dec
and
jbe
ret
xchg
aad
sub
sbb
aaa
mov
cmp
mov
scas
pushl
adc
cli
or
js
lds
adc
addr16
mov
fsubrs
push
cmp
xchg
sub
and
dec
pop
ffree
inc
pop
inc
add
aam
cmp
jmp
push
cltd
sbb
pushl
in
jl
or
addr16
nop
lret
inc
cmp
cmp
jae
mov
lods
movsl
std
pop
lret
push
orl
pop
mov
inc
inc
sbb
sahf
add
ss
decb
adcl
jb
add
sub
xchg
dec
inc
movsb
inc
mov
stc
pop
xchg
cmp
lahf
loopne
out
add
push
xchg
movb
addl
adc
jmp
insb
push
fdiv
pop
lock
scas
sub
jae
adc
cmp
jno
pusha
shl
fmul
xchg
frstor
push
lea
jae
je
add
jmp
push
lock
sbb
pop
sti
mov
pop
or
aas
rcrl
repnz
lea
mov
xchg
inc
pushl
lods
adc
lret
xchg
inc
ja
fdivrs
add
jne
ljmp
aad
cmp
adc
xor
fcomps
jmp
iret
je
in
mov
inc
je
xchg
cmpb
xor
jp
shll
mov
mov
pop
call
pop
mov
inc
cltd
and
das
push
enter
xchg
shll
js
mov
mov
cmp
jmp
in
test
lret
sbb
loopne
xchg
inc
mov
push
xchg
adcl
and
push
xchg
cmp
loope
popf
testb
dec
inc
icebp
jns
decl
js
mov
mov
in
and
xchg
push
inc
and
imul
adc
orb
je
movsl
popa
mov
out
pop
sub
sub
mov
inc
jecxz
decb
adc
or
mov
add
aas
mov
not
js
add
stos
push
sbb
call
pop
adc
lock
lret
in
int3
call
push
sbb
inc
and
and
or
lods
std
shlb
push
nop
pop
push
mov
and
hlt
nop
jo
nop
add
incb
push
jecxz
lret
nop
lock
in
xchg
dec
ret
in
push
fldln2
inc
std
cltd
push
adc
or
xorb
mov
cld
adc
or
jb
icebp
jg
clc
mov
or
mov
sub
cmp
ja
push
xchg
dec
inc
stos
mov
or
mov
xchg
std
lods
leave
rolb
shl
shlb
mov
mov
sbb
lret
in
shl
cwtl
daa
dec
jecxz
daa
ja
mov
sub
push
pop
or
add
xchg
lret
and
mov
cmpb
add
mov
cmp
stc
out
testb
stc
or
xchg
mov
std
adc
xor
jge
cs
call
in
imul
mov
push
or
lods
xor
je
scas
cmp
js
outsb
mov
std
dec
cmp
inc
sub
add
ficoml
pop
and
in
jmp
sbb
jne
inc
jne
jecxz
mov
xor
cltd
inc
fs
aad
cmpsb
rclb
imul
cmpsl
test
mov
lods
cmp
push
or
push
jae
adc
xor
push
leave
and
cmpsb
aam
mov
mov
jne
rorl
repz
ret
xor
scas
movsb
rcr
xor
loop
stc
icebp
call
jge
sbb
stc
js
sbb
dec
out
or
clc
adcb
into
push
inc
cmp
test
in
mov
pop
lds
test
std
cwtl
add
cwtl
and
mov
cmp
xchg
stc
mov
cltd
push
adc
notl
sbb
arpl
mov
enter
dec
sahf
mov
mov
daa
mov
sahf
add
push
inc
push
je
inc
cld
lods
mov
hlt
std
loopne
sti
movsb
lods
mov
enter
mov
rcrb
push
sub
jno
popa
xor
pop
aas
or
dec
mov
jo
je
inc
imul
fisttpll
mov
std
dec
sub
jecxz
mov
and
xor
mov
push
mov
std
lock
aaa
addr16
and
lea
arpl
std
icebp
push
jb
std
xor
pop
mov
lds
and
roll
sbb
pop
lea
jae
shlb
mov
sub
mov
stc
mov
call
call
std
push
mov
ret
cmp
push
mov
sbb
xchg
daa
mov
imul
sub
fidivs
lds
mov
lea
test
std
out
imul
mov
rcrb
push
mov
cltd
sub
push
ds
je
icebp
push
push
mov
scas
xor
std
mov
mov
test
rcrb
out
imul
add
movb
mov
add
push
pop
dec
xor
roll
shrb
xor
dec
inc
dec
jecxz
dec
inc
adc
sbb
dec
cmp
cmp
pop
enter
std
lock
call
inc
call
xor
std
clc
fidivl
test
scas
shlb
pop
sbb
std
inc
repz
lock
xchg
daa
loopne
in
popa
push
sub
decl
das
ds
shrb
cs
shl
sub
test
sub
out
sbb
inc
jmp
dec
lods
add
xchg
cmc
sarl
sar
dec
movsl
pop
lock
xor
push
mov
ret
jle
jmp
test
sbb
jmp
test
je
and
mov
int3
cmp
fsubrl
or
push
sahf
jl
std
mov
sar
cmp
mov
aam
xchg
xchg
jl
dec
lock
dec
xorl
push
adc
fbstp
push
lcall
aam
mov
movsb
adc
push
js
jp
add
push
inc
lret
jne
cmp
inc
gs
pusha
xchg
sbb
mov
pop
or
gs
mov
das
push
sbb
jno
push
je
xor
push
and
std
std
loope
push
adc
sub
lea
sbb
sub
and
nop
aam
inc
add
movb
repz
add
add
cs
xor
or
mov
shll
sbb
mov
loope
inc
int
push
movb
and
shlb
loopne
pcmpgtw
add
repnz
and
or
test
mov
pop
inc
and
enter
fcmovnb
jecxz
or
cmp
jp
clc
cmp
out
and
dec
sbb
sbb
ret
add
xor
les
sbb
cwtl
inc
or
in
adc
pop
les
pop
icebp
cmp
jl
or
mov
and
push
pop
cmpsl
push
xchg
in
aam
inc
jmp
lret
dec
push
jo
loopne
or
add
or
xor
dec
cmp
pop
jle
loope
dec
lret
jne
or
sub
dec
cmp
lods
imul
jge
inc
mov
or
lods
cmp
test
popa
and
nop
shll
push
cs
and
xchg
and
jge
xor
add
leave
push
dec
dec
jecxz
sar
fcmovb
mov
xor
pop
div
mov
fidivl
inc
mov
add
sub
cmp
add
xchg
addb
xor
popf
mov
xor
dec
imul
sbb
mov
dec
adc
jno
fidivl
adc
les
jle
jge
cmp
pop
cmp
push
hlt
cmp
je
movl
imul
sbb
je
push
inc
xor
imul
testb
jne
or
push
adc
loope
lss
pop
add
inc
nop
mov
and
loope
mov
cmp
or
imul
inc
add
mov
jae
cmp
frstpm(287
adc
sub
cmp
out
aam
loope
imul
xor
mov
lea
test
ja
cs
xor
sub
cmp
je
movl
inc
clc
call
fdivrs
add
push
mov
mov
jmp
cmpsl
cmovle
cmp
ds
push
scas
loopne
mov
popa
push
lock
neg
sbb
and
xchg
int3
and
cmpsb
repz
pop
sub
add
inc
jne
lret
dec
dec
xor
inc
dec
mov
lea
insl
xor
add
or
bound
sbb
pop
test
sub
ret
push
push
test
add
fucom
push
notl
incb
aas
and
adc
or
xor
cmp
lea
push
ficoml
test
ret
aad
jg
mov
stc
enter
and
pop
pop
or
lahf
xchg
mov
add
or
sbb
pop
icebp
insb
dec
lods
pop
add
mov
into
repz
jp
rol
inc
mov
xor
mull
jnp
imul
pop
in
xchg
fmuls
mov
jne
adc
shll
cs
push
cwtl
cmpb
dec
testb
jge
cld
adc
mov
push
mov
add
call
and
gs
pop
daa
add
sub
dec
push
shr
loop
cmp
push
dec
sbb
sti
sbb
inc
pop
mov
jns
add
pop
cmpb
inc
or
lret
lcall
add
data16
dec
add
push
es
add
cs
fsub
and
test
and
add
mov
mov
adc
leave
sarb
and
aam
shll
dec
xor
adc
or
jb
and
shr
add
cs
inc
mov
xchg
dec
add
outsl
push
pop
mov
inc
dec
or
test
adc
or
add
sbb
sbb
jp
pop
push
or
xor
rorl
or
sub
inc
jmp
pop
clc
push
add
and
adc
std
or
jmp
inc
and
mov
and
xor
and
jecxz
jge
into
xor
push
mov
xchg
jmp
sbb
sub
rorl
loopne
xor
sub
or
push
test
fcos
sti
out
sti
out
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
dec
and
add
fstp
jmp
pusha
pusha
mov
stos
subl
push
loope
addb
lods
lret
cli
inc
testb
andl
adc
stos
repnz
sahf
sti
add
add
xchg
add
lahf
loopne
fisttps
loop
push
ret
mov
dec
je
add
dec
addb
scas
jmp
push
and
or
xlat
outsb
adc
testl
shr
imul
and
pop
sbb
fwait
xor
push
and
or
jnp
jmp
inc
push
fstps
jmp
fisttpll
and
test
mov
xor
xchg
push
out
dec
aas
pushf
push
inc
xor
cmp
mov
push
inc
rcpps
xchg
pop
sub
test
int3
or
dec
aad
adc
xor
lret
xchg
add
dec
popf
js
inc
and
jno
cmpsb
xchg
push
aaa
shlb
sbb
incl
mov
fcompl
or
add
jnp
jmp
into
mov
sub
jmp
sub
in
jp
push
or
or
dec
psubusw
xchg
push
sbb
adc
mov
xorb
add
xor
scas
mov
xchg
xchg
add
or
inc
in
cmc
bound
xchg
into
jbe
or
lock
fmull
or
addb
fiadds
add
enter
pushf
push
adc
push
shlb
dec
into
and
pop
sarl
shrl
sbb
jp
dec
in
out
push
shl
adc
mov
sub
push
jp
push
sahf
jmp
pop
pusha
shlb
je
clc
adc
gs
std
pop
sbb
adc
xchg
and
and
je
add
xor
xchg
xchg
sub
movb
or
push
push
add
mov
sbb
mov
sbb
pop
jg
sub
add
add
lds
jae
mov
add
and
pop
adcl
cmp
imul
pop
test
je
sbb
testb
inc
icebp
pop
fiaddl
or
xchg
imul
dec
ret
and
mov
shll
push
or
insb
jo
daa
popa
sbb
test
xor
pop
loop
mov
fwait
jno
int3
push
mov
and
xor
adc
shrl
or
or
sbb
inc
jmp
repz
or
push
jno
push
sub
scas
adc
mov
mov
push
mov
cmp
adc
testb
jle
mov
lea
push
sub
fadd
or
lret
and
decb
adc
and
je,pn
dec
adcb
cld
popa
int3
pop
sgdtl
mov
adc
inc
adc
push
jns
add
push
sbb
jg
or
jae
sbb
or
ret
mov
pop
mov
and
mov
insl
sbb
fldcw
adc
mov
or
dec
or
fldcw
push
push
pop
jle
inc
push
inc
or
sub
jae
cmp
or
push
ficoml
inc
adc
sahf
mov
pop
or
fstp
sbb
fldpi
xor
add
add
xor
push
lock
je
sbb
je
add
push
dec
dec
stc
out
mov
andl
or
and
push
xchg
movsb
lahf
inc
lcall
adc
insl
push
cltd
or
inc
popa
mov
es
fisttpl
cltd
sbb
pop
cmp
sub
divb
dec
cwtl
in
and
jno
adc
sahf
and
lea
xchg
pop
or
inc
inc
jnp
inc
sbbl
and
push
mov
or
sub
mov
add
aam
test
mov
add
or
push
ds
inc
cmp
rcr
fisubl
jmp
iret
sbb
xchg
dec
daa
pusha
mov
mov
testl
push
sbb
inc
xchg
and
je
push
jne
xor
sarl
pushf
adc
loop
or
pushf
rcl
js
lret
xor
stos
aaa
cmpsb
mov
lock
jb
stos
add
adc
insl
push
push
fcmovnb
mov
jne
mov
jmp
lock
je
and
pop
push
push
je
das
cs
icebp
mov
ljmp
dec
test
inc
hlt
jne
andl
mov
and
add
popa
and
arpl
pop
adcb
test
lea
andl
adc
mov
xor
mov
push
cmp
push
movb
dec
dec
jnp
xor
stc
pop
cmp
mov
and
les
es
or
or
add
add
adc
and
xchg
pushw
adc
std
inc
push
add
imul
into
ficoms
stos
dec
sbb
rolb
pushf
icebp
dec
lods
jbe
pop
hlt
add
push
aas
xchg
data16
aad
out
or
mov
sub
jo
gs
add
xor
xor
stos
mov
dec
test
shll
lea
adc
lcall
inc
insb
or
imul
adc
gs
dec
and
aaa
adcb
xchg
inc
jmp
dec
sar
mov
jmp
shl
push
mov
mov
mov
imul
push
enter
sbb
push
jne
jne
lret
mov
xor
push
call
cmc
cmp
lock
push
andl
sbb
xor
adc
orl
shll
sbb
cmc
aaa
dec
sub
pop
push
sbb
into
push
outsl
out
jg
mov
or
lahf
inc
shlb
pop
sub
test
adc
fldt
cmp
add
bnd
lea
lea
or
cmpl
push
mov
mov
add
sbb
add
inc
aaa
jecxz
dec
shlb
mov
xor
xor
xchg
push
rolb
xor
add
or
jb
adc
hlt
loopne
imul
in
scas
jne
ret
dec
dec
and
pushl
add
sub
push
loop
fs
or
dec
inc
pop
push
pusha
xor
sbb
ljmp
sahf
mov
out
push
mov
or
cmpsl
and
jp
pop
pop
inc
or
and
pop
stos
adc
jp
clc
push
mov
jno
add
or
cmpb
sbb
jne
popa
outsl
mov
push
push
cld
pop
pop
sbb
jo
mov
pop
pop
sub
and
jl
cmp
sub
and
push
icebp
dec
movsl
lock
lahf
mov
sub
adc
insb
push
mov
aad
mov
jb
jp
daa
push
je
inc
sbb
jbe
outsl
ljmp
mov
push
sti
add
xlat
rorb
sub
push
sbb
and
test
and
lar
ltr
or
inc
add
dec
push
bound
test
or
adc
addl
or
pop
add
mov
inc
in
cmpsb
xorb
cs
ret
mov
and
push
adc
test
std
or
jl
pop
pop
arpl
cmp
dec
dec
test
pop
repnz
xchg
jne
mov
dec
adc
dec
cmp
xor
add
push
jmp
sub
push
jecxz
or
push
add
or
xor
lock
adc
pop
pop
mov
add
xchg
icebp
fstl
outsb
add
adc
xchg
mov
loope
dec
add
mov
addr16
adc
fucomp
push
cli
gs
and
ja
dec
cmp
ret
idiv
push
pop
call
inc
ret
int3
je
and
cmpsb
aaa
fists
mov
dec
push
pop
pushf
dec
or
lea
insb
ret
outsb
sbb
push
sub
out
flds
movsb
mov
push
mov
xor
shr
xchg
mov
add
adc
bound
mov
xor
cmp
xchg
and
xchg
jns
dec
mov
push
sub
clc
add
div
dec
je
mov
fstpt
cmpsb
mov
je
sub
or
inc
fidivs
dec
or
add
pop
xor
movsb
sarb
and
jge
sti
enter
add
movsl
loopne
and
or
sbb
cltd
jae
pop
lret
jnp
mov
mov
dec
in
pushf
nop
lcall
inc
inc
stos
testb
dec
out
lds
push
out
pop
inc
dec
cs
or
hlt
cmpb
nop
or
andb
dec
icebp
sbbb
pop
ret
adcb
xchg
and
inc
pop
or
cwtl
insb
scas
sbb
mov
inc
add
mov
dec
test
push
stos
mov
testl
movb
jmp
out
jmp
lcall
mov
rorb
popl
icebp
inc
cmpl
xchg
or
adc
push
mov
mov
outsb
add
sub
xor
imul
push
jo
or
mov
testb
sti
inc
sbb
add
pop
mov
or
mov
sbb
jecxz
ds
mov
test
js
inc
mov
mov
sbb
clc
add
decb
jb
dec
push
or
mov
mov
adc
push
ficomps
movsbl
pop
loopne
sub
or
fsubr
inc
in
stos
add
and
xchg
jo
fcom
shrl
mov
sbb
inc
sub
adc
adc
cltd
outsb
push
daa
mov
lods
mov
sub
cwtl
mov
xchg
dec
cmp
int3
je
js
xchg
clc
add
rorl
xor
mov
add
rolb
xchg
fs
push
mov
mov
jg
sub
rclb
sub
mov
push
subw
int3
mov
xor
in
repz
adc
mov
or
inc
inc
clc
int
fisubl
add
es
aam
sub
jl
or
aas
mov
frstor
add
xchg
and
nop
fisubrl
movsb
jge
mov
sub
pop
clc
adc
jp
lcall
jns
dec
jle
pop
test
mov
jle
cmp
test
sbb
xor
push
imul
add
dec
sub
push
out
shlb
or
sub
lea
and
and
xchg
fs
dec
add
loopne
or
or
loopne
xchg
inc
test
jo
and
aad
fs
clc
mov
xchg
cmp
sbb
inc
jmp
jo
xorl
mov
popa
or
fdivs
xor
fimuls
icebp
dec
and
xor
adc
fldt
adc
bound
ss
adc
hlt
sbb
sti
jmp
ds
xchg
or
push
mov
push
mov
jmp
scas
pop
lock
jg
mov
adc
shld
shl
aaa
or
cmpsb
ds
push
aas
lods
rcl
ljmp
shr
pop
dec
adc
les
sbb
dec
push
jns
inc
ss
mov
and
lret
dec
and
bndstx
inc
and
xor
add
or
pushf
mov
pop
loopne
inc
nop
adcl
pop
inc
push
pop
ljmp
cmp
divl
adc
and
push
dec
or
add
es
mov
sub
sbb
roll
inc
jmp
aas
loope
xchg
adc
mov
fstcw
jge
cltd
loope
and
orb
divb
movsb
push
in
leave
fstl
sub
jnp
jl
lea
jecxz
add
je
std
cmpl
jmp
or
fcoms
add
fldl2t
push
fiadds
lahf
bsr
popa
mov
hlt
sbb
sub
ja
test
rcrb
cmp
sbb
jge
cmp
je
push
xor
mov
jg
loop
insb
mov
and
jne
icebp
sbb
inc
inc
jl
sbb
sub
push
ss
xchg
sbb
adc
mov
pop
and
xchg
outsl
adc
fldl
std
fstp
fld
fabs
fcompl
out
push
aam
jae
fmull
pop
add
cmp
nop
loopne
jbe
lock
insb
pop
jbe
or
clc
or
test
jne
icebp
sbb
scas
movsl
movsl
cmpb
insl
mov
jge
sbb
pop
mov
rorl
mov
push
jo
inc
pmaxsw
out
fldl
pop
adc
btc
lods
xchg
mov
inc
mov
inc
push
mov
jne
or
push
inc
xchg
adc
jb
pop
ror
data16
fmuls
nop
cli
push
neg
insl
imul
add
jns
push
add
mov
iret
add
jmp
mov
jb
pop
aad
or
and
lods
setp
mov
pusha
push
pusha
mov
shlb
ja
cli
shl
sar
shl
and
xlat
ret
inc
push
loope
inc
fiaddl
fmuls
and
sub
jnp
gs
cmp
and
rol
mov
add
or
in
or
fbld
in
sbb
adc
sti
mov
out
ret
or
bound
and
decl
pop
mov
jl
pop
ret
stgi
add
fcomp
xchg
add
jmp
pop
faddp
test
and
fldt
jge
cmpb
sub
je
fchs
add
add
push
dec
incb
add
add
sbb
push
sub
test
sub
pop
loopne
sbb
ret
shr
cmpb
cmp
inc
ljmp
fstps
sbb
add
or
loope
shl
fldcw
ret
pop
pop
fmuls
inc
sbb
shrl
into
sub
les
jmp
push
inc
or
adc
stos
adc
sub
or
jb
push
scas
sbb
fwait
out
in
inc
mov
mov
fcompl
adc
pop
fcmovu
inc
push
push
fdivr
adc
aaa
jnp
sub
ret
and
insb
in
scas
and
out
jno
xor
enter
jnp
fcomp
dec
scas
insl
iret
fsubrs
lea
push
nop
push
xchg
pop
lret
mov
pop
cmp
insl
mov
jge
xor
das
inc
lret
in
lret
xor
fwait
cmp
mov
dec
jge
xor
pusha
imul
jb
lret
int3
lret
cwtl
sub
adc
dec
pop
in
movsl
jge
xor
or
pop
jb
nop
int3
int3
int
int3
xchg
fsubl
cmp
sub
out
adc
fidivl
movsl
das
inc
add
into
dec
outsb
xchg
int
or
mov
push
jnp
jge
or
insb
in
xor
cs
into
iret
mov
mov
into
cmp
mov
loopne
mov
xor
call
sti
outsb
mov
and
fldl
fnstsw
sbb
ljmp
dec
jmp
push
or
outsl
pop
pop
mov
sub
enter
in
cmp
je
seta
and
or
dec
leave
fisttpll
add
or
and
enter
fildl
cmp
sbb
xchg
fs
nop
add
inc
gs
sbb
gs
addr16
pop
ljmp
push
sbb
push
xor
dec
xchg
jno
jb
shr
mov
cmpb
cmp
or
or
pop
jb
mov
cs
push
mov
stos
test
pop
adc
inc
ret
das
sarb
xor
jb
fldl
ja
xor
bswap
cmp
sub
push
in
jg
mov
ss
or
sub
mov
es
lret
sub
adc
jb
loopne
fstp
jmp
pop
js
outsl
mov
or
es
xor
jl
xor
mov
cmp
aas
jbe
add
filds
add
add
out
fabs
or
fcom
popa
xor
or
add
or
cmpl
and
or
adc
clc
sbb
xor
rol
cld
je
fchs
jmp
das
clc
int3
pusha
mov
fnsave
jae
sahf
insl
leave
adc
cld
mov
cmp
int
sbb
fs
insl
fs
xor
andl
push
mov
fstps
sbb
pop
xor
xor
xor
fwait
pop
pop
jl
push
test
in
mov
jo
ret
mov
or
jns
ret
cmp
lcall
sub
and
testb
sbb
inc
hlt
sti
sbb
pusha
leave
mov
fsubrp
and
inc
or
cwtl
je
sbb
adc
add
cmp
and
add
cmc
jp
push
xchg
inc
add
add
jne
pop
lock
nop
pop
dec
or
and
add
xchg
fisubl
or
in
or
repz
dec
xchg
push
push
shll
fsub
push
xor
test
insl
jmp
popf
dec
xor
in
mov
cmp
gs
xchg
xor
dec
leave
jnp
ret
or
jnp
addb
fcoml
adc
test
xor
and
xor
insb
add
mov
les
jl
push
je
mov
sub
pop
adc
clc
mov
xor
dec
sub
lea
mov
mov
or
cmp
pushl
cmp
aas
add
les
lods
mov
pop
rclb
and
lahf
test
loopne
test
leave
inc
mov
mov
cmp
outsb
sbb
jl
sarb
ret
pop
cltd
sub
mov
push
mov
add
and
rclb
dec
push
mov
xor
sub
mov
iret
test
int3
mov
mov
std
cmp
jne
mov
mov
jmp
adc
outsl
repnz
data16
add
push
jae
adc
outsb
movsl
or
imul
inc
sub
fscale
push
imul
fsubl
fdivrs
aad
jno
dec
aad
and
mov
es
fcoml
fimull
adc
mov
mov
add
or
enter
mov
pop
shrl
adc
sbb
mov
cmp
test
cmp
jl
cmp
jg
inc
jmp
push
hlt
mov
xchg
jne
imul
pop
rolb
xor
aas
sbb
lock
movsbl
roll
popa
pushl
xchg
xor
daa
and
jne
popa
sub
mov
adc
in
leave
adc
dec
in
stos
and
sub
jp
loop
loopne
and
lods
cmpb
or
mov
stos
add
fwait
add
push
cltd
pop
idiv
aam
xor
and
cltd
mov
add
mov
pop
and
adc
insb
pop
sub
lea
mov
inc
jg
lahf
test
pushf
ret
cltd
sbb
rorb
adc
mov
xabort
xlat
imul
cmp
rol
sbb
pushf
fs
in
subb
jo
sub
pop
cmp
jg
stos
add
stc
jmp
add
pop
add
outsl
les
sbb
insb
inc
subb
or
jle
cmp
clc
sub
jmp
icebp
xchg
sbb
push
insb
and
mov
pop
adc
mov
jne
imul
dec
and
and
leave
call
mov
add
xlat
xor
push
jmp
xlat
mov
xor
mov
mov
mov
cwtl
aam
popf
add
psubq
out
incb
pop
es
sbb
or
movhps
idiv
add
outsl
loopne
push
lock
hlt
jne
stc
fcoms
and
xor
cli
and
push
dec
lret
lock
cmp
cmc
dec
inc
add
ret
push
negb
add
fidivs
sbb
bswap
push
out
jns
push
sarb
jne
in
xchg
push
push
jmp
pop
push
push
push
push
addr16
in
cltd
mulb
movsb
xor
je
js
lret
in
pop
jo
out
outsb
imul
mov
sbb
mov
push
cmp
or
sbb
inc
mov
jge
jl
fiadds
bound
add
rcll
push
push
jnp
mov
xchg
rcll
stos
dec
mov
pop
fbstp
jge
cmp
push
sarb
andl
push
jge
clc
sbb
insl
mov
jl
jg
push
jle
jge
push
sbb
push
call
movsl
call
jmp
jne
addr16
ja
popf
rol
je
in
dec
xor
rorl
imul
fsubrl
push
add
daa
adc
cmp
cmp
pop
sub
adc
or
push
sbbb
push
cmpsb
push
enter
clc
xchg
cli
negb
or
inc
fstl
mov
push
jno
xor
scas
inc
or
mov
pop
inc
sub
jg
jl
cld
adc
pushl
jmp
notb
jg
xor
es
xchg
ja
push
push
test
add
xor
add
lea
mov
adc
push
push
or
push
es
call
flds
jb
fimuls
lea
dec
lea
inc
push
push
add
aaa
daa
sub
sbb
push
xor
push
xchg
push
and
push
mov
jg
mov
pop
andl
cmpb
mov
mov
inc
mov
jne
pushf
stc
mov
mov
outsb
daa
inc
add
outsl
jmp
ss
cmp
jae
pop
adc
add
push
pushf
xor
adc
xorb
ret
cmp
adc
cltd
xor
add
mov
pop
in
add
or
mov
aas
js
jl
inc
add
or
jl
dec
dec
pop
sar
sub
push
add
xor
cld
ja
adc
push
push
sbb
push
mov
or
icebp
call
mov
jle
push
dec
inc
inc
fldcw
or
cmpsb
push
sbb
mov
push
cmp
and
ja
adc
leave
inc
insb
jno
mov
mov
mov
call
pop
sbbb
jge
inc
fnsave
fdiv
fiaddl
sbb
es
ss
sbb
or
xchg
lods
sbb
mov
adc
xor
sub
jecxz
rcr
lods
fcomi
sbb
and
dec
add
sbb
stc
push
inc
sub
out
and
loopne
and
js
mov
icebp
xor
movsb
lret
add
orb
jmp
popa
arpl
sbb
gs
adc
push
out
or
adc
push
or
mov
mov
lcall
arpl
jecxz
add
stos
movsb
lahf
ss
add
or
push
inc
add
push
and
or
add
jno
jnp
adc
cmp
jne
movsb
jbe
xor
ljmp
add
mov
jo
icebp
daa
lcall
pop
jmp
or
dec
sbb
js
cs
ss
xorb
and
pusha
fnsave
pop
mov
je
pop
enter
inc
jnp
dec
xchg
aam
daa
mov
push
mov
adc
bound
ret
add
or
test
sub
jp
pop
push
jne
mov
rorl
int
jmp
push
push
push
xchg
push
dec
pop
sarl
insb
sbb
lea
or
pop
adc
dec
test
inc
or
in
sub
cmp
jmp
or
add
mov
jns
mov
mov
test
jbe
jnp
sub
sub
jmp
inc
loope
push
xchg
cwtl
mov
jl
push
jne
xor
out
xchg
push
adc
add
jmp
inc
cmp
movsb
shl
mov
pushl
aaa
and
jl
test
sbbl
leave
dec
inc
pop
adc
push
movl
mov
aaa
call
test
mov
add
or
jne
fs
in
mov
push
mov
lods
mov
jbe
push
and
pop
dec
mov
pusha
or
cli
add
push
mov
or
mov
xor
or
bnd
cmp
jae
dec
lea
pop
pop
mov
mov
jbe
mov
ds
jmp
loopne
adc
call
rorb
pop
sub
push
imul
push
test
fldcw
cmp
add
test
push
or
je
mov
mov
add
add
xchg
das
sub
jne
xchg
insb
adc
mov
jbe
xor
pop
decb
push
popa
xor
lds
push
xchg
sbb
movsb
mov
sbb
test
adc
and
rolb
and
dec
or
cltd
push
outsb
fadds
aaa
push
pop
jle
sub
add
mov
dec
jge
call
push
out
pop
cmp
adc
fcmovu
pop
imulb
lea
shll
sub
popf
sbb
cld
jmp
cmp
test
cmpsb
sub
cmp
aaa
sbb
jne
xorb
pop
pop
mull
xor
inc
xor
xchg
inc
mov
cmp
add
nop
add
jmp
ret
aaa
out
pop
cmp
add
imul
cmp
push
adc
fs
jmp
xchg
dec
test
call
pop
adc
or
sub
insb
sub
push
loope
repnz
cs
jae
inc
inc
add
sbb
aam
inc
jns
je
dec
cli
adc
jg
cmc
fcmovnb
add
sti
call
cmp
sub
icebp
mov
in
inc
clc
add
jge
xor
cmpsb
mov
shrb
fcomps
daa
adc
push
xchg
out
pop
xor
xor
push
jmp
add
je
sbb
add
fs
sub
jno
mov
mov
ja
int3
dec
jo
mov
je
mov
add
dec
jne
pop
lock
xchg
rorl
push
lretw
rclb
loope
icebp
adc
lahf
pop
je
shl
inc
or
mov
cmp
and
push
push
push
or
inc
mov
push
aaa
adcl
pop
cmp
pop
jl
xchg
stc
pop
push
adc
lcall
stos
xchg
inc
jmp
push
pushf
xchg
inc
cmp
push
add
sbb
fwait
loopne
and
adc
pop
ljmp
mov
arpl
xchg
add
out
add
or
push
lods
mov
and
add
push
into
loopne
sahf
ja
sbb
inc
adc
or
out
dec
cmp
or
add
inc
in
push
xchg
mov
cmp
or
pushl
ljmp
push
ret
xchg
shl
inc
jle
jg
push
pop
pop
andb
sub
pop
nop
in
mov
hlt
dec
push
sub
jge
mov
popa
mov
push
mov
aam
sub
std
rcr
lock
decl
inc
jg
mov
je
gs
es
mov
jne
jg
aaa
cmp
je
clc
mov
inc
inc
cmp
je
cmp
mov
cli
orb
imul
add
or
lods
fidivrl
dec
je
and
mov
push
cltd
sbb
test
mov
pop
aam
mov
incl
fdivr
mov
imul
sbb
jae
jecxz
pop
sub
pop
out
mov
mov
or
out
popf
or
inc
mov
sbb
lret
mov
add
dec
push
jl
test
test
movl
inc
clc
insl
push
mov
addr16
and
jle
and
ret
clc
arpl
cmp
mov
mov
mov
dec
mov
mov
jne
int3
or
or
shlb
push
pop
es
shlb
mov
nop
push
pop
or
rcr
frstor
sub
dec
movsb
jb
test
dec
pop
jns
inc
in
fnstenv
lret
mov
add
fiaddl
daa
dec
mov
into
adc
iret
add
shl
lea
popa
bound
shlb
jne
jmp
dec
or
mov
stc
sub
inc
push
jmp
das
dec
jmp
icebp
cmp
adcb
add
mov
loop
and
pop
fcoms
sbb
xlat
push
stos
lea
mov
or
xchg
jno
xrelease
es
sbb
gs
icebp
or
mov
out
add
pop
adc
push
in
push
sahf
xor
ret
mov
mov
and
je
cmp
xchg
push
and
loopne
call
fmuls
rorb
idiv
mov
je
sbb
inc
sti
sahf
add
jmp
cmp
das
xor
ja
scas
and
inc
inc
out
inc
and
lcall
mov
mov
subl
sbb
pop
sub
xor
les
push
stos
xor
daa
test
nop
test
pop
sbb
sbb
pop
es
inc
jmp
aas
nop
jecxz
or
or
cmp
xlat
sbbl
sub
aam
lock
adc
sub
push
and
sub
or
jecxz
pushl
cmp
jne
mov
call
cmp
ja
mov
cmp
daa
inc
sub
inc
xor
inc
fcmovbe
jb
jno
loope
mov
mov
sub
dec
sub
data16
jbe
ret
nop
adc
data16
sbb
sar
pop
jnp
mov
adc
jbe
insl
xchg
mov
jne
mov
push
pop
inc
xchg
mov
dec
xor
adc
popa
sbb
push
or
or
adc
xor
lahf
pop
inc
js
das
iret
inc
add
js
inc
aam
lods
shr
add
mov
cli
ja
lea
cli
ja
and
fldt
jle
mov
fmuls
mov
cmp
jl
addl
cmp
mov
jmp
sbb
movsl
orl
xchg
pop
mov
push
lods
int
mov
cmp
adc
cmp
push
push
mov
std
mov
imul
call
push
scas
jle
add
or
popf
std
jbe
call
xchg
cmpsl
shrb
cmp
addr16
cmp
mov
inc
jmp
pop
es
inc
inc
arpl
pshufw
xor
rcrb
mov
or
mov
pop
cmp
push
cmp
ret
nop
push
aas
lahf
add
adc
lock
outsb
lsl
sbb
or
daa
inc
or
pop
push
in
push
inc
addr16
cmpl
inc
sub
aad
and
cmp
je
cmp
xor
pop
xchg
cltd
xor
push
jne
xchg
out
lods
push
adc
push
jo
mov
repnz
dec
jns
mov
ljmp
daa
or
rcrb
sbb
xchg
mov
add
fildl
xchg
or
sub
adc
cli
mul
push
test
enter
push
clc
cmp
call
je
add
push
int3
jnp
add
push
fwait
mov
pop
mov
jle
or
push
sahf
mov
mov
je
jmp
outsl
push
loop
jg
cmp
xor
gs
cmp
loopne
mov
push
or
push
and
push
inc
test
xor
divl
lods
mov
jmp
dec
or
and
insb
fstpl
and
pop
push
ret
dec
call
xchg
loop
or
sub
and
sub
cmpsb
loope
and
add
xor
xor
adc
push
pop
pop
jmp
push
inc
in
loopne
enter
cs
dec
inc
sbb
shrb
fbstp
or
dec
push
mov
sub
jbe
ret
pop
icebp
lods
popf
fs
jl
in
push
jmp
aas
push
mov
pop
xchg
sbbl
jp
add
pushf
je
xor
push
ret
and
icebp
add
or
or
sbb
bound
pop
push
or
dec
in
cmp
mov
mov
sar
ljmp
je
mov
cmp
xor
sbb
cmpsb
and
js
cmc
and
sub
add
push
outsb
and
insb
enter
push
mov
adc
or
cmp
lcall
push
lea
lret
inc
cmp
mov
pop
inc
cmp
test
mov
cmp
add
mov
leave
inc
xor
daa
sbb
dec
jo
daa
xor
popa
ja
sahf
push
xchg
aam
pop
loopne
popa
add
fsubrl
adc
push
and
mov
icebp
xor
push
push
or
fimuls
jne
repnz
inc
push
inc
imul
sub
fwait
leave
add
or
aam
inc
sub
xchg
out
xor
add
xor
arpl
and
loop
adcl
out
mov
aaa
pop
or
mov
push
lods
cli
sub
icebp
jne
xor
xchg
aam
add
enter
pusha
and
and
enter
jno
adc
adc
and
pop
mov
sub
jmp
sbb
xchg
lock
not
push
roll
sti
dec
je
incb
push
pop
int3
insl
jl
out
sbb
inc
jne
mov
test
imul
scas
roll
add
pop
sbb
shr
push
stos
int3
ja
sbb
dec
sub
add
mov
inc
mov
lea
dec
popa
mov
mov
sbbb
mov
cmp
adc
mov
popa
push
call
push
imul
dec
cmp
xchg
lcall
inc
bswap
test
jno
call
push
or
jnp
ss
jl
dec
repnz
dec
xor
mov
js
int
jge
movsb
push
mov
mov
les
push
jmp
sbb
rclb
or
sub
sahf
out
xor
mov
rclb
xor
inc
lret
inc
daa
lcall
inc
ja
pop
push
rcrl
adc
cltd
xchg
adc
sbb
loope
es
hlt
pop
and
cmpsl
and
cltd
adc
push
mov
sub
pusha
insl
sbb
in
pop
lods
js
adc
int3
rcrb
push
push
add
pop
jb
sarb
push
insb
shr
je
movsb
mov
dec
add
push
add
stc
mov
add
push
test
mov
mov
nop
push
in
sub
in
mov
sbb
push
daa
push
mov
jae
cmp
pop
mov
jp
cmpsb
icebp
shlb
rcr
out
pusha
jecxz
fcoms
push
adc
jp
adc
inc
aam
push
rclb
dec
ss
sub
mov
in
xchg
stos
inc
das
add
stc
or
pusha
add
ret
push
int
adc
ret
xor
sub
in
sub
mov
add
add
add
pop
sbb
jns
and
or
les
cmp
mov
push
add
mov
pop
loopne
sarl
and
rcr
xor
cmp
mov
fnstsw
add
pop
xor
jmp
inc
xor
sbb
adc
xchg
add
daa
push
pop
mov
xchg
lock
inc
cmp
add
adc
cmp
mov
cltd
cmp
popf
sub
fisubs
and
cmp
push
cltd
stos
in
repz
lea
and
push
insl
in
add
add
and
push
filds
aam
fisttps
or
xchg
xchg
xchg
adc
ss
outsb
sub
dec
dec
dec
dec
xor
cmp
fimull
inc
and
inc
pushf
pushf
pushf
fmull
dec
dec
push
push
daa
daa
pop
pushf
pop
add
daa
daa
daa
push
and
daa
js
dec
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
sub
jne
add
mov
mov
ss
pop
add
mov
rol
and
imul
test
and
mov
or
cwtl
nop
mov
sbb
and
mov
enter
pop
in
jnp
daa
adc
add
js
or
jne
pop
mov
inc
ret
xchg
aam
push
clflush
inc
xchg
out
and
cmp
je
inc
dec
jne
jmp
popf
shr
or
scas
add
sub
and
sbb
ret
arpl
add
xor
or
xchg
es
stos
add
jmp
mov
dec
cs
push
pop
lods
dec
repz
pusha
les
loopne
test
dec
cmp
movsb
stc
xchg
js
pop
repz
mov
mov
jmp
push
ret
jb
adc
sahf
insl
jp
push
aas
and
sbb
dec
cmp
je
add
lock
jnp
call
mov
cwtl
sbb
sub
lret
xor
in
xchg
movb
add
pop
rcr
rorl
push
ss
icebp
sbb
mov
and
loopne
pop
xchg
inc
push
js
sub
mov
or
rorb
and
mov
insl
icebp
inc
mov
pop
or
or
lds
hlt
dec
adc
cmp
pop
xchg
js
or
sub
lods
cmp
stc
inc
sub
cmp
test
rcrb
mov
mov
add
xchg
lret
andl
push
out
das
or
sbb
dec
je
push
jecxz
stos
sarb
cmp
sahf
clc
jle
je
push
sub
sub
push
push
movsb
push
test
and
push
idivb
clc
dec
adc
cmp
and
xor
out
push
enter
mov
fsubrs
inc
mov
aas
repnz
dec
adc
xor
dec
sbb
loopne
push
into
jle
or
jne
mov
adc
sub
push
movsl
adc
shrl
add
pop
es
xchg
push
loopne
testb
inc
out
enter
or
sti
jns
adc
push
js
pop
inc
les
sahf
lret
mov
push
cwtl
lea
mov
push
mov
call
fwait
mov
popa
fwait
adc
je
xchg
cmp
sub
les
pop
aam
insb
out
insb
add
ljmp
pop
mov
jle
sbb
jae
inc
and
movsl
xor
mov
jmp
xchg
ret
sbb
cmp
or
js
nop
imul
cmp
or
and
das
pop
leave
mov
imul
cltd
or
andl
cmp
dec
xchg
imul
or
aaa
cmpsl
adc
cmpl
mov
shlb
lahf
shlb
push
sub
stc
pop
mov
inc
adc
sub
push
inc
lods
loopne
jl
xor
sub
sbb
lods
or
popf
jbe
xor
sbb
xor
or
or
mov
lods
pop
mov
loope
or
and
xchg
lea
js
add
mov
add
adc
mov
push
jo
mov
lods
add
pop
add
adc
loopne
dec
push
sub
fst
jne
sbb
xlat
jmp
daa
cld
js
sbbl
adc
and
jmp
push
xor
sbb
lret
mov
int
add
dec
into
pusha
loop
leave
or
loopne
sbb
bound
dec
and
dec
push
enter
rclb
mov
stos
bound
sbb
es
test
push
push
or
sbb
fdivr
dec
mov
dec
sti
and
leave
lcall
dec
ret
xchg
lea
pop
or
sbb
mov
inc
rcrb
mov
cwtl
sbb
sbb
sub
and
dec
adc
mov
add
mov
push
inc
ljmp
push
fcoml
mov
rcll
inc
push
pop
mov
pop
popa
test
mov
lods
cltd
lods
nop
mov
mov
adc
xor
xchg
pop
xchg
xor
add
aam
pop
testl
fmuls
pop
addl
xchg
cmc
lock
sub
sub
lods
push
jmp
cmp
pusha
xor
xchg
xchg
aad
pop
pusha
jnp
inc
cmp
rcr
jmp
addl
js
pop
pop
or
push
add
or
dec
popa
add
mov
and
adc
in
test
add
inc
push
push
cmp
rclb
adc
push
js
lods
rcll
cmpsl
movsb
adc
stos
add
pop
dec
pop
push
shrb
pop
push
dec
iret
or
loopne
xchg
lret
push
test
adc
jge
mov
add
xchg
jl
xor
mov
xchg
ret
jmp
divps
dec
addb
pop
inc
loope
push
js
sbbb
adcl
sub
pop
rcrl
dec
lock
mov
add
mov
stos
or
mov
sbb
push
fwait
sub
dec
nop
xchg
dec
or
add
or
rcll
or
push
or
in
mov
incl
aas
adc
add
in
adc
in
cmp
inc
mov
daa
rorb
pop
test
jne
inc
int3
add
popa
pusha
jl
sbb
js,pn
sti
lea
shrb
pop
pop
adcb
sbb
inc
push
mov
es
aam
add
push
inc
loope
adc
or
push
rcrb
add
roll
cs
clc
aad
jnp
inc
lea
or
sub
inc
shl
and
test
mov
fstpt
addb
not
test
add
adcl
outsb
mov
cltd
insb
pop
and
lahf
icebp
int
mov
out
mov
inc
push
sub
jmp
jbe
dec
mov
add
inc
pusha
sti
and
xor
or
sbb
lahf
stos
jmp
pop
sub
adc
push
loopne
push
adc
jb
cmp
dec
daa
jecxz
orl
push
and
push
fsubs
add
sub
ss
enter
add
pusha
xlat
loopne
mov
or
xchg
cmc
loope
dec
stos
inc
sub
sub
push
rclb
xor
cmp
sub
push
imul
and
test
lahf
and
and
push
cld
not
mov
pop
popf
je
mov
and
adc
jecxz
ds
push
or
out
or
or
jo
push
xchg
add
mov
dec
je
sub
loope
mov
xchg
mov
xchg
lcall
lds
mov
dec
sub
hlt
test
pop
addb
jno
data16
cmpb
loope
dec
push
cmp
aam
sbb
and
push
add
pop
or
adc
and
adc
iret
dec
jns
inc
lock
push
add
ret
lods
and
mov
inc
mov
ja
sbb
push
imul
add
sahf
push
inc
sbb
sbb
sbb
arpl
out
andl
stos
lret
adc
loop
out
pop
jl
add
or
push
iret
and
push
out
and
jo
enter
clc
cld
add
inc
mov
jge
aas
sbb
nop
or
scas
shl
push
sbb
mov
add
add
mov
or
loop
icebp
sub
or
mov
add
and
jne
adc
sahf
ret
xchg
repnz
push
xor
mov
adc
or
nop
xor
adc
jns
and
adc
stc
cld
test
or
adc
stc
and
sbb
mov
mov
adc
sbb
dec
add
adc
rclb
addb
js
mov
or
cmc
sub
shlb
pop
out
mov
fwait
in
mov
mov
mov
inc
cli
adc
data16
int
mov
dec
and
push
add
push
xchg
pusha
pop
out
xchg
xchg
adc
pop
jnp
insb
inc
cs
or
ss
cmp
je
imul
incl
jl
je
mov
cmp
pop
jne
push
imull
cmp
inc
inc
mov
sub
shlb
fldz
call
and
lds
andb
shlb
push
jl
sbb
outsb
sbb
dec
mov
outsl
add
or
add
adc
or
sub
inc
jmp
xor
rolb
outsl
push
add
adc
push
sbb
pop
lar
inc
xchg
xlat
xchg
jmp
fistpl
inc
inc
push
jne
rclb
ret
dec
test
aaa
sbb
loopne
add
rorb
or
add
pmulhuw
movsl
ss
sub
pop
js
jmp
push
xlat
inc
pop
mov
lret
adc
push
inc
add
sub
adc
push
movb
lea
mov
sbb
push
cmp
cmp
fisubrl
pop
pop
dec
xorb
mov
es
cmp
add
loop
push
out
add
sub
add
cmp
push
insl
mov
outsl
or
call
dec
add
inc
sub
mov
pop
push
jle,pn
push
neg
es
cmp
jl
push
repnz
add
mov
push
or
pop
leave
mov
add
ljmp
jne
push
lea
push
push
or
dec
loop
sbb
movsb
mov
sub
aam
mov
aam
lds
pop
sbb
add
icebp
or
adc
or
jbe
or
cmp
dec
adc
jge
mov
rol
xor
or
adc
pusha
push
push
xor
shlb
enter
xchg
jne
add
xchg
je
mov
jmp
add
pop
cwtl
stos
and
push
cmp
ret
sbb
mov
aaa
and
je
cmp
faddl
add
sbb
mov
fs
dec
sub
fdivrs
push
shlb
pop
sub
call
in
cmp
jge
cmp
push
push
add
pusha
add
adc
sbb
pop
add
imul
mov
push
and
sahf
lret
and
and
mov
dec
clc
push
sarl
fcmovb
popf
ss
add
ja
test
nop
lock
pushf
sbb
enter
loope
xor
in
jle
mov
jno
add
push
xor
push
adc
xchg
dec
and
add
inc
jo
sbb
push
sbb
dec
je
addr16
mov
loope
add
cmpsb
movb
icebp
insb
popa
outsl
and
popf
dec
sbb
mov
rorb
fistpl
sub
loopne
sti
pop
mov
ret
daa
xor
or
jne
pop
cmp
arpl
es
xchg
inc
and
push
push
mov
out
mov
lahf
stos
jmp
xor
inc
cmp
into
adc
and
or
jg
ja
push
mov
mov
mov
dec
push
sub
adc
arpl
jo
add
and
and
and
insb
jecxz
data16
sbb
mov
cmp
add
adc
cld
add
dec
outsb
inc
mov
add
jle
jle
loop
cmp
ss
jl
push
or
shlb
jge
or
cmp
je
or
add
dec
jmp
out
jb
add
adc
mov
test
push
or
test
inc
call
sub
push
xor
fdivrs
ret
mov
adc
xor
jo
sbb
out
insl
fsubl
shrl
inc
pop
sbb
js
loop
xchg
lea
jb
push
sub
or
ret
mov
shl
fidivrl
rorl
mov
pop
inc
shll
pop
fsubrl
jns
add
jbe
sbb
shll
sbb
jg
lods
jb
sub
jbe
dec
inc
dec
pop
or
dec
sahf
sbb
and
nop
push
rorl
nop
add
daa
push
mov
jmp
mov
pop
xchg
lods
stc
mov
sub
or
les
rcrl
popa
jae
cmp
je
int
adc
mov
push
sbb
jne
loop
mov
inc
or
mov
mov
and
sub
mov
add
addb
push
cmp
push
pop
xchg
inc
sub
add
inc
sarb
mov
jo
pusha
scas
and
mov
push
mov
pop
xor
imul
into
mov
lahf
sbb
test
iret
cmp
orl
xor
jl
and
je
push
shl
jne
js
and
dec
test
ficoms
or
or
xchg
aam
add
mov
add
pop
fmull
push
insl
push
jmp
add
cmp
cld
cld
loope,pn
ret
test
and
js
icebp
or
mov
inc
leave
nop
or
je
jmp
xor
push
sbb
and
mov
gs
or
pop
data16
jne
cmp
and
cmp
enter
xor
push
inc
je
pusha
mov
xor
adc
pop
adc
popa
and
add
inc
je
aaa
mov
or
fldenv
pusha
or
pop
mov
adc
repz
inc
add
add
pop
sti
mov
fldl
fdivl
fmull
insl
push
pop
clc
cmpsb
repnz
add
outsb
push
push
and
cmp
enter
shrb
aas
add
mov
push
push
int3
inc
jg
pushf
pop
les
dec
jo
aad
dec
ret
roll
ficomps
lock
ljmp
cmp
lea
or
shl
shr
add
or
or
pop
lock
in
pop
fcmovb
jmp
shr
or
mov
or
jmp
xlat
bound
scas
push
mov
cmpb
sti
in
xor
or
lret
mov
cmp
in
inc
or
mov
dec
add
int3
cld
push
jl
fucomip
inc
adc
inc
mov
mulb
jb
dec
mov
lea
mov
shr
cmp
mov
fsubl
or
mov
fdivl
jp
adc
jb
add
cmp
adc
sub
add
orb
add
adc
rolb
dec
test
inc
jbe
shrb
pop
dec
push
xchg
push
int
les
test
mov
call
cli
je
mov
or
jo
adc
jle
mov
mov
cmp
pop
daa
sbb
xor
lret
rorb
imulb
or
test
data16
jo
test
adc
add
call
xor
mov
cmp
or
mov
sbb
push
add
sub
inc
jmp
push
adc
push
andl
dec
xor
add
mov
lea
push
out
sub
add
sahf
js
mov
and
push
mov
push
push
data16
mov
cs
int3
sub
movl
lahf
add
or
pop
xor
xor
and
lock
rol
arpl
ret
sub
mov
stc
mov
add
fxch
or
pop
inc
imul
push
add
inc
sbb
adc
pushf
inc
sbb
cwtl
in
or
add
loopne
shlb
dec
mov
je
or
imull
and
inc
mov
xor
sub
push
mov
or
dec
ja
fsub
mov
pop
inc
or
es
pop
pop
or
es
insw
mov
adc
xor
adc
adc
scas
lea
lcall
adc
out
mov
psubq
xchg
jne
cmp
pop
cwtl
xor
clc
pop
inc
xchg
or
push
mov
push
push
push
int3
mov
outsl
sub
or
sbbl
inc
inc
adc
shlb
sbb
faddl
sahf
jp
push
sbb
mov
lock
mov
push
add
sub
jne
jl
sub
jne
and
inc
rorb
pop
cltd
or
test
ret
sub
inc
cmp
jle
cmp
ret
push
lea
je
mov
dec
jnp
push
push
je
aas
jecxz
xor
jo
ret
sub
inc
cli
out
inc
stos
leave
mov
cwtl
je
xor
in
jecxz
sbb
push
popf
pop
jg
pop
int3
lds
cs
inc
adc
cmp
mov
pop
fidivl
cmpsb
aam
add
je
xor
in
sbb
inc
push
dec
and
loopne
jge
test
or
into
push
inc
rcrb
movsl
mov
mov
gs
push
inc
push
adc
andb
cmp
dec
mov
dec
sbb
int3
adc
cmp
aam
sub
jecxz
jmp
xor
add
out
cmpb
inc
mov
inc
pop
add
add
dec
lcall
mov
shlb
inc
dec
je
and
das
xchg
xchg
bound
sub
loop
imul
out
icebp
mov
sub
cmp
sti
mov
aaa
push
sub
dec
inc
jne
cmp
sbb
add
sub
out
push
add
add
ror
push
popa
push
in
clc
or
pop
xchg
cmp
sub
dec
xchg
cmpsl
ljmp
cwtl
in
in
cmp
es
sbb
shrl
clts
pusha
cmp
pusha
cmovbe
xorl
mov
xor
mov
orb
and
add
jo
ja
dec
pop
pop
xor
inc
je
orl
add
faddl
enter
bound
addl
jge
test
aas
xchg
test
jnp
jmp
in
add
xor
mov
dec
dec
mov
test
sarl
mov
cwtl
adc
and
adc
add
sbb
int3
stos
clc
xor
cmp
fst
add
insl
xor
aas
lcall
sub
je
into
popf
in
and
jge
jbe
pop
xor
pop
xor
ss
sub
mov
or
mov
imul
test
inc
and
test
orb
je
mov
or
leave
das
adc
dec
call
pop
ret
pop
sbb
mov
lret
jmp
call
mov
rorl
add
and
mov
andb
or
loope
mov
and
add
loope
inc
add
add
push
int
lcall
xor
mov
je
fldcw
mov
cmp
adc
and
dec
inc
and
sub
stos
adc
sbb
ret
cli
ret
popf
ret
das
int
mov
add
add
imul
adc
mov
push
push
mov
hlt
add
adc
or
sbb
fiaddl
push
lds
int
enter
add
add
frstor
cmp
pop
in
std
xor
add
adc
add
jle
sahf
inc
test
inc
jle
loope
and
sbb
mov
lcall
ja
lea
add
in
out
jns
jae
jno
push
jbe
or
xor
cmpsl
mov
sub
pushf
push
push
xchg
add
push
call
add
or
enter
jecxz
ret
push
shrb
arpl
cmpsl
add
add
stc
ret
ss
xor
imul
add
inc
xchg
cmpl
xchg
cmpb
roll
add
stos
sub
lcall
clc
push
cmpl
pop
pop
push
daa
gs
push
mov
fldenv
adc
sbb
jmp
cmp
cwtl
add
mov
out
std
pop
inc
adc
cltd
pusha
add
cmp
daa
inc
xchg
push
shrb
cmp
jnp
lret
jg
add
cmp
jg
lret
or
enter
std
call
and
or
dec
incb
inc
add
rolb
jo
lock
pop
and
or
mov
std
jne
push
les
push
test
jge
mov
scas
push
pop
jle
jl
mov
pop
lods
and
ds
cwtl
mov
outsb
lock
cmp
sarb
dec
popf
das
sbb
dec
icebp
sub
mov
and
inc
mov
sbb
adc
push
sub
orl
xchg
lret
out
or
add
icebp
rcrl
out
and
dec
cmc
call
mov
inc
mov
xchg
add
dec
jle
mov
stos
paddsw
cwtl
pop
testb
in
sub
loopne
pop
pop
nop
or
xchg
les
pop
rolb
dec
loopne
push
inc
jo
rcll
loopne,pn
aad
pop
inc
insl
jg
pop
sub
pop
add
aaa
mov
adc
dec
cld
mov
or
and
stos
dec
xor
hlt
leave
mov
push
push
daa
test
add
lock
lea
es
mov
iret
sub
pushl
lods
roll
sub
push
cmp
add
test
test
xor
les
pop
cmp
pop
inc
mov
and
adc
mov
xchg
outsl
lds
cs
cmpl
pop
push
push
or
push
or
mov
add
mov
push
add
adc
inc
jne
xorb
or
push
out
pop
pop
xor
mov
sar
ror
sbb
sbb
fsubrs
mov
push
push
lea
je
dec
movsl
mov
push
jle
mov
rolb
adc
movsl
movl
cmp
imul
jecxz
dec
cld
sub
sub
xchg
adc
add
or
jle
push
subb
es
addr16
or
je
sbb
hlt
or
rcr
sub
jecxz
pop
mov
leave
and
sbb
push
add
rolb
or
ret
into
insl
cmpl
es
and
push
pop
or
and
jecxz
dec
adc
adc
stos
xchg
jmp
pushf
movsb
dec
push
add
cmp
fs
loopne
rolb
push
sarb
jnp
dec
popa
je
pop
pusha
pop
mov
and
cmp
test
jg
push
cmc
xchg
jbe
hlt
cmpb
jne
push
inc
in
je
xchg
jnp
pop
mov
push
xchg
sarl
scas
push
cmp
jmp
int
adc
or
add
inc
sbb
lea
inc
cmp
fs
shll
cmp
pop
dec
imul
orb
popf
mov
push
mov
adc
ss
imul
adc
xor
or
lods
mov
add
cmp
sahf
lock
bound
nop
push
xchg
mov
je
sub
pop
int
add
dec
sub
mov
dec
sbb
fsubl
jmp
lcall
or
and
xchg
xchg
xchg
popf
or
adc
or
mov
sbb
fwait
das
das
and
pushf
popl
or
lods
and
add
sub
and
cli
mov
cld
into
jo
frstor
cmp
xor
mov
js
sbb
push
and
hlt
adc
jmp
push
xor
jne
mov
mov
inc
add
js
enter
scas
pusha
mov
mov
nop
mov
xor
lods
mov
add
aam
lret
mov
pop
mov
or
push
xor
mov
cmp
mov
add
and
and
cltd
inc
dec
shll
dec
push
mov
lahf
lret
mov
add
jge
pusha
mov
sbb
call
inc
cmp
xchg
xorb
clc
add
or
dec
adc
rcrl
js
lods
shll
adc
loope
pop
in
movb
rorb
push
or
pop
or
sbb
push
mov
addl
adc
sub
mov
call
dec
cwtl
mov
dec
sub
adc
int
fistpl
adc
adc
aaa
sub
out
adc
jmp
push
fisttpll
insl
sub
fisttps
sbb
push
arpl
sub
fadd
jp
aas
inc
test
and
xchg
test
repnz
loop
out
push
rcrb
add
add
pop
and
and
pop
inc
adc
sub
fcompl
mov
xor
xor
mov
or
push
mov
sub
mov
sbb
adc
call
mov
jmp
negb
add
call
imul
ss
inc
sub
push
add
lods
push
and
dec
test
test
mov
push
push
fidivl
pop
sub
xchg
jne
push
jle
add
sbb
rol
scas
adc
cmpb
dec
jle
mov
mov
adc
leave
inc
xor
jae
daa
mov
and
xchg
jl
ljmp
add
cmpb
jl
xor
cmpb
je
incb
cmpb
clc
addb
pop
inc
xchg
adc
test
pop
xchg
push
sub
pop
leave
inc
shll
or
push
push
mov
push
xchg
and
pop
cmp
test
inc
adc
fldcw
add
js
jp
push
or
ljmp
loop
mov
jg
and
xchg
jp
jne
push
push
jbe
add
inc
push
mov
sbb
inc
adc
dec
or
enter
shl
cmp
test
jne
pop
mov
std
inc
loopne
add
inc
or
add
add
or
test
je
mov
xor
pop
mov
adc
add
sbb
and
and
pop
pop
pop
pop
imul
push
adc
dec
pusha
jnp
js
movsl
movsl
movsw
xor
test
or
and
add
mov
ret
notb
mov
jmp
jae
pop
sbbb
add
push
xor
xor
test
cmp
inc
adc
mov
mov
es
sbb
je
inc
imul
sbb
and
adc
jp
mov
pop
jnp
inc
or
leave
enter
add
cmp
sbb
jmp
push
add
xor
push
pusha
xchg
jb
xchg
pop
inc
sub
or
lods
daa
or
adc
out
pusha
stos
xchg
pop
or
add
and
ret
sbbb
stos
pusha
ljmp
adcb
pop
decl
cli
sub
pop
and
jge
fwait
sub
sbb
mov
ja
cmp
nop
dec
pop
pop
dec
ljmp
stc
lret
aam
inc
lcall
sbb
xor
inc
and
call
mov
movl
sub
sub
jae
xor
cmp
add
xor
push
xor
cmpsb
inc
sar
xor
pop
cmp
je
cmp
and
sbb
adc
pop
inc
ja
cltd
stos
dec
add
add
lds
cmpb
je
mov
xor
or
mov
cmpsl
test
jmp
fisubs
inc
imull
jmp
cs
dec
lret
and
adc
sbb
daa
movsb
cmp
jbe
or
mov
pop
repnz
and
pop
pop
and
shr
add
cwtl
cmc
mov
add
mov
or
mov
xor
or
add
iret
jp
dec
inc
add
cmp
sahf
clc
les
jne
sbb
cmp
sbb
push
data16
sbb
mov
pusha
xor
ret
and
scas
fucomi
xchg
hlt
rorl
jns
clc
in
arpl
push
ret
cmp
nop
inc
sarl
xor
js
push
jg
mov
sbbb
cmp
scas
sub
jl
xchg
xor
dec
inc
lods
movsl
or
popa
mov
adc
pop
jns
mov
movsb
jb
and
mov
dec
cld
mov
xor
push
jg
lea
push
and
mov
lds
add
das
mov
cmp
add
xchg
or
test
jmp
cmp
jg
dec
mov
jno
in
jae
push
sub
adc
repz
and
add
xchg
push
pop
repz
dec
pop
mov
aam
insb
push
and
sbbb
dec
repz
call
fs
pop
sub
adc
cmpsb
adc
push
aam
lods
jge
pusha
ds
mov
sarl
push
inc
cmp
jbe
jns
dec
pusha
je
aas
mov
test
lock
inc
jns
aas
daa
adc
in
ss
daa
push
or
rorb
or
jns
mov
ficoms
fldcw
cmpsl
cmp
pop
push
inc
and
test
imul
or
outsb
out
jno
loopne
mov
push
xchg
adc
push
push
cld
outsb
jae
mull
inc
or
aaa
dec
jbe
sbb
ss
lret
dec
or
adc
cmp
mov
jne
fadds
testb
cmpsl
hlt
jmp
jmp
shrb
in
or
je
pushl
inc
mov
mov
push
es
mov
je
pop
ret
je
repnz
cmp
jb
std
mov
ja
add
cmp
adc
cmp
xor
add
sbb
cmpsb
sarb
fbstp
negl
test
mov
inc
imul
lods
mov
push
adc
push
cmpsb
mov
mov
test
mov
adc
xchg
pushf
mov
cmp
sbb
and
das
or
or
stos
or
or
jmp
mov
cmp
inc
subl
incl
mov
sub
cmp
ja
push
pop
dec
jmp
cmp
xchg
sbbb
jb
mov
dec
dec
mov
xor
into
jmp
or
fidivs
jge
push
jmp
cmpsl
mov
lods
jbe
mov
mov
xchg
sub
cmp
sti
dec
cmpsl
outsb
cmp
inc
jle
cmp
push
xor
xchg
icebp
gs
sub
lahf
je
bound
push
mov
push
lods
out
push
lock
shrl
push
data16
gs
js
jmp
sbb
sbb
pop
inc
fidivl
xchg
pop
push
pop
jge
jne
sarl
cmp
test
jns
gs
jbe
nop
add
jne
push
or
lahf
jae
imul
sbb
jne
or
fs
sub
xchg
add
pop
jo
sbb
adc
push
adc
add
orl
or
and
sbb
sub
cmp
mov
stos
notl
inc
movsbl
in
sahf
jg
dec
dec
je
test
fld
push
push
cmp
dec
mov
sub
jns
cmp
pop
cld
hlt
xchg
rcll
dec
adc
jno
sbb
and
lock
adcb
push
fadd
pop
pushf
jmp
push
cwtl
pop
mov
xor
xor
inc
push
nop
aas
pushf
cwtl
and
and
and
test
add
jecxz
test
dec
jns
imul
dec
test
leave
leave
dec
push
movsb
mov
inc
es
pushf
orl
clc
orb
nop
pop
mov
and
or
xchg
leave
sbbl
mov
sti
jno
add
push
movsl
fcomps
iret
repz
xor
out
rclb
out
je
push
js
or
push
mov
lock
lret
and
cld
and
and
ror
push
sahf
out
sahf
rcl
rcl
aad
ss
out
xlat
fcomp
fstpt
add
jne
xchg
mov
nop
and
out
dec
push
movb
jmp
or
mov
into
jb
adc
sub
mov
jg
jb
add
ficoml
mov
add
push
xor
add
fnsave
test
mov
icebp
sub
mov
lock
testl
jmp
icebp
adc
or
sbb
cmp
das
movsb
in
stc
mov
sub
enter
push
xor
and
in
cmovb
add
push
gs
adcb
jo
imul
mov
call
add
je
sahf
or
mov
jle
push
bound
movswl
callw
pusha
sbb
neg
push
mov
push
or
out
loop
js
mov
cmp
outsl
jecxz
out
cmpb
popf
add
add
mov
mov
sar
fisubs
addr16
enter
mov
mov
mov
or
mov
add
push
or
or
lock
inc
add
pop
ljmp
add
pop
xlat
and
mov
pop
sbb
xor
subb
decb
xchg
ja
mov
push
repnz
cld
iret
insb
mov
testl
mov
jne
inc
inc
or
cmp
sarl
mov
jne
inc
xchg
add
hlt
stos
rolb
add
dec
mov
jle
jg
push
lea
orb
cwtl
xchg
add
push
adc
push
adc
insb
enter
lea
inc
sbb
cmp
sbb
movsb
movsb
add
int
add
mov
jge
jl
inc
inc
sbbb
rorb
aas
jle
jle
jne
mov
lock
mov
add
xor
push
or
addr16
rorb
mov
push
lret
xor
push
inc
inc
rolb
testb
sbb
push
hlt
shrl
rcr
testl
mov
or
dec
push
ss
popa
lods
dec
inc
inc
lods
lock
xchg
lock
idiv
cli
inc
mov
div
sar
subb
mov
add
stos
aam
dec
test
or
jae
mov
test
mov
or
xlat
xlat
dec
add
js
or
and
icebp
mov
mov
scas
xor
stc
dec
mov
rolb
lock
or
lock
mov
pop
fcoml
outsl
bound
or
pushw
sub
mov
clc
out
jge
inc
add
push
dec
movsl
push
arpl
ret
mov
enter
adc
inc
push
cmp
mov
outsl
gs
shlb
fsubr
push
sbb
cmp
ss
inc
test
dec
xor
push
sub
lea
adc
mov
sub
int
adc
lret
cld
lea
cmp
fsincos
and
mov
mov
mov
jg
pusha
and
clc
cltd
add
ret
sbb
sbb
sbb
mulb
sbb
sahf
xchg
test
add
and
or
jge
add
and
add
in
or
pusha
add
movsb
repnz
in
push
loopne
inc
into
or
mov
sbb
xor
jg
shl
pop
movb
pop
data16
mov
push
add
push
nop
cmp
adc
mov
jge
jle
out
adc
mov
mov
adc
ret
shr
sahf
add
or
scas
xchg
mov
mov
negb
jne
sbb
neg
and
pushf
jle
inc
imul
lds
loopne
loopnew
daa
mov
lea
push
and
sti
and
mov
mov
push
loope
inc
jmp
out
mov
dec
or
sti
and
xchg
jge
inc
rorb
mov
shll
mov
and
xchg
jmp
mov
testl
push
clc
xabort
neg
ja
fildl
inc
dec
enter
mov
cmp
push
shlb
add
sbb
mov
jne
cmp
fdivr
xlat
pusha
and
into
or
mov
inc
fsubl
in
inc
jmp
dec
nop
adc
dec
decl
add
xor
inc
cmpb
in
bound
add
dec
cmp
add
add
icebp
cmp
incb
sub
orb
pop
mov
mov
adc
les
jp
jne
dec
mov
jb
dec
rcrl
int
mov
mov
lret
or
add
inc
jbe
mov
xor
mov
rcrb
enter
or
adc
lods
xor
and
adc
inc
fcomps
lret
mov
lret
and
dec
jmp
add
jecxz
push
ljmp
push
dec
sbb
or
outsl
fs
and
xchg
push
xchg
mov
push
or
test
cltd
outsb
ret
add
hlt
ret
inc
xorb
mov
cmpl
movsl
shlb
xchg
adc
or
jae
pop
cmp
mov
mov
mov
inc
and
cmp
xor
into
test
sub
and
call
and
pop
pop
clc
mov
push
or
movsl
sbb
je
ret
or
les
ret
push
pop
inc
push
pop
xchg
cmpsb
ror
jae
or
or
add
ja
xor
add
or
add
outsb
inc
or
adc
jl
mov
jmp
pop
lret
pop
ljmp
popf
dec
pop
dec
insl
add
test
and
and
and
xchg
sbb
inc
jge
aam
xchg
in
rolb
cmp
add
or
scas
xor
mov
mov
xor
jmp
fldcw
mov
cld
and
sub
xorb
or
add
push
inc
stos
jg
add
mov
and
inc
ret
and
jge
cmpsb
push
mov
ss
clflush
dec
add
test
lcall
or
adc
pop
addr16
add
cmp
mov
mov
daa
iret
xor
sbb
inc
jg
into
into
mov
pop
and
loopne
mov
sarb
push
pop
loopne
ficoms
mov
stos
or
or
pop
ret
pop
cmp
add
push
ret
and
out
pop
lcall
add
leave
lahf
pop
test
pop
or
add
mov
add
mov
and
je
and
ret
jne
or
push
in
push
jmp
cmc
cmp
mov
lret
inc
and
ret
sub
mov
push
scas
rorl
add
pop
rclb
leave
push
inc
test
add
arpl
dec
pop
mov
xor
loop
adc
adc
cmp
jl
subb
lods
xchg
or
insl
mov
push
push
push
adc
mov
js
add
das
push
jl
jge
jle
outsl
out
daa
retw
stos
jne
pop
adc
sbb
xlat
xor
jmp
jle
and
daa
or
and
call
into
jge
addr16
mov
jl
or
sbb
stc
add
mov
jne
mov
mov
push
mov
mov
dec
sbb
xor
ds
push
adc
ficoms
dec
pop
cltd
orb
jae
inc
mov
js
movsl
lahf
iret
sbb
je
test
sub
lock
cmc
in
fs
out
je
mov
imul
or
xchg
cmp
jbe
inc
sub
call
jle
sbb
mov
inc
lds
fidivrl
or
jbe
or
jmp
push
pushl
test
push
push
or
les
popl
mov
mov
fwait
js
fstpt
jno
or
sub
sbbb
mov
test
and
mov
lds
add
push
subb
jmp
xchg
or
and
pusha
in
mov
jle
fwait
dec
dec
scas
pushl
aas
pop
xchg
inc
repnz
je
test
push
sub
in
xor
mov
aam
dec
jl
adcb
fcoms
fisubs
mov
nop
xlat
insl
inc
jge
sbb
add
and
mov
int3
or
mov
push
hlt
cmp
fcomp
jns
cmpsl
dec
xchg
inc
sbb
clc
hlt
lcall
add
adc
pop
jge
lea
xor
lock
push
pop
push
imul
fiaddl
int
add
and
lods
sbb
mov
aam
sbb
or
dec
xchg
cmp
daa
gs
rcrl
in
jge
jge
xor
xor
add
orl
call
push
mov
pushl
cs
adc
addr16
inc
mulb
test
add
push
xlat
pop
push
sub
add
inc
sub
pop
cmp
je
test
in
fsts
clc
push
xorl
lock
je
iret
dec
aad
dec
hlt
inc
cmp
jl
inc
popf
cmpsb
mov
inc
test
pop
inc
sbb
push
cmp
push
xchg
jge
mov
addb
mov
fisubrl
or
mov
adc
mov
addl
rolb
adc
or
and
push
inc
cwtl
jo
and
xchg
sbb
cmp
pop
add
push
sbb
clc
mov
inc
jnp
addr16
or
shlb
cltd
jo
subb
cmp
imul
fisubrl
out
clc
in
add
test
cwtl
and
je
mov
jg
xor
retw
call
mov
inc
andl
test
add
out
jl
dec
dec
lea
mov
or
int3
pop
jbe
sub
js
jl
cmp
lock
dec
mov
xor
fsubs
outsl
icebp
cmp
stos
loopne
jmp
dec
mov
add
add
ss
push
inc
sub
ja
jle
adc
adc
lea
mov
ret
rcll
movsb
out
sbb
inc
cltd
push
xchg
sti
pusha
scas
mov
fcompl
mov
scas
and
mov
mov
movb
sub
sbb
xchg
enter
inc
inc
out
ret
je
pop
xor
fistl
popa
aaa
loopne
push
leave
sti
loopne
lds
les
dec
xor
sub
sub
aaa
icebp
dec
mov
sbb
adc
inc
push
xorb
out
outsl
and
push
popa
and
add
add
jne
add
loope
je
inc
inc
cmp
cli
jle
call
ret
jp
movzbl
sbb
sbb
adc
shll
jmp
rol
loope
or
adc
jne
dec
jmp
and
cmp
or
dec
je
cmc
ds
push
aas
push
and
repnz
pop
push
jmp
lea
jge
cmp
dec
pop
lea
pop
ret
pop
add
sub
pop
shl
pop
mov
mov
adc
aam
mov
lret
je
fs
sub
cli
cs
scas
and
shl
push
rorb
aaa
add
divl
lret
add
mov
icebp
ljmp
iret
xor
xor
or
add
je
add
or
int3
cmp
xchg
ss
out
cmp
je
shl
cmp
xor
cli
and
faddl
mov
jmp
pop
addr16
outsb
or
test
mov
movhps
movsb
fstpl
fmulp
fld1
fld
fprem
flds
or
f2xm1
fimuls
std
mov
in
dec
mov
sbb
icebp
inc
repz
fisttpl
inc
lcall
loope
or
fdivrp
fsqrt
push
jmp
out
pop
fadd
pop
jge
jg
add
adc
popa
shr
negb
fsubrp
jmp
ficomps
enter
nop
popa
push
xor
or
subl
or
clc
adc
adc
nop
cli
in
push
xchg
and
fstp
push
sub
add
adc
mov
jbe
xchg
dec
add
loopne
mov
in
sub
push
sub
push
pusha
sub
xchg
mov
add
pop
popa
dec
sub
add
mov
cvttsd2si
cmp
inc
inc
xchg
mov
jg
out
add
cmp
inc
sbb
mov
bound
insb
push
sti
testb
test
jns
fstps
jb
icebp
outsl
lcall
stos
sbb
jmp
cmp
cltd
das
fcomp
adc
inc
dec
cmp
pop
cmpsb
pop
cmp
loopne
jb
fisttps
jge
nop
pop
enter
push
js
jle
aas
mov
int3
push
cld
mov
push
mov
leave
inc
add
cmp
mov
push
ljmp
nop
cmp
pop
pop
sbb
ret
rolb
and
and
jnp
cmp
dec
dec
or
mov
cmp
xor
lds
cli
xor
idivl
ret
inc
pop
and
dec
sbb
mov
or
lods
mov
or
add
loopne
add
mov
shr
pop
cli
pushf
outsl
fdivrl
cmp
cld
outsb
cmp
jge
mov
lea
mov
xorl
cmpl
ds
mov
push
xchg
les
mov
or
and
enter
jno
in
clc
int3
fsubrl
lcall
inc
enter
out
rclb
inc
rcr
repnz
inc
cli
clc
push
add
push
or
nop
adc
popa
mov
out
jmp
pshufw
dec
adc
push
push
adc
cmpsb
sti
out
inc
shlb
notb
sbb
add
or
push
push
scas
dec
xor
and
add
in
es
dec
push
pusha
or
mov
add
pushf
pusha
ljmp
dec
sub
je
movzwl
dec
data16
add
push
je
fwait
cmp
sbb
les
add
lret
push
aaa
sub
and
add
add
fdivrs
nop
fdivl
pop
cwtl
test
sbb
lahf
shlb
mov
mov
mov
ljmp
push
xchg
aam
loope
push
fcmovnb
push
inc
dec
xor
icebp
in
add
jnp
inc
ret
jp
call
jo
fldcw
sar
push
test
je
sbb
and
adc
ret
jge
mov
rorl
shll
cmp
xor
lret
pop
mov
dec
movsl
and
out
add
lock
add
ja
mov
pop
adc
mov
xor
jbe
jb
or
jmp
sahf
pop
pop
and
mov
adc
cli
imul
jecxz
jbe
stos
lock
push
shrl
adc
and
loope
test
push
sub
mov
sub
sbb
ljmp
pop
lret
mov
cmp
pop
mov
or
and
add
loopne
add
je
inc
into
loopne
push
dec
sub
jnp
adc
sbb
shl
fs
push
jmp
add
sarb
mov
cwtl
or
xor
dec
aas
push
mov
jb
pop
xor
adc
adc
rcrb
aas
cwtl
iret
sub
xchg
mov
sbb
data16
push
jp
cs
cmp
pushl
out
and
jl
add
hlt
pop
add
mov
fbld
pusha
inc
add
mov
pop
mov
mov
mov
add
xor
jb
test
dec
in
jo
cmpsb
push
fcoml
and
jo
popf
test
ficomps
push
jno
push
and
ss
mov
push
add
repz
jbe
icebp
notb
lock
mov
pop
lret
push
leave
je
cmpl
cmpsl
dec
fidivs
test
dec
into
adc
adc
cmpsb
hlt
enter
mov
add
or
out
mov
rcl
cmc
jnp
cwtl
or
push
in
insb
jecxz
push
add
bnd
ret
mov
add
sbb
ja
test
mov
add
inc
add
push
xor
pop
in
ss
aaa
roll
cs
or
imul
pop
sub
pop
test
mov
cmp
mov
adc
data16
pop
cmp
ja
je
pop
pop
fmuls
or
xchg
addb
or
popl
and
ljmp
jne
push
add
js
jne
les
ja
in
push
add
add
sub
popl
or
push
mov
sbb
add
dec
cmp
int3
pushf
inc
or
add
sbb
and
out
push
movsl
dec
repnz
inc
mov
subl
xor
jmp
cwtl
pop
cs
push
in
add
dec
push
jae
insb
andb
das
xchg
fildll
dec
fildl
mov
je
cmp
and
das
add
int
mov
lcall
and
sbb
sbb
mov
pop
and
and
mov
inc
and
dec
or
icebp
or
push
orb
andb
cld
out
mov
test
push
push
add
or
pop
loopne
cltd
cwtl
push
fdivrl
fs
mov
or
dec
cmp
jl
lahf
mov
push
or
ret
leave
clc
or
loop
push
adc
sbb
mov
dec
adc
loopne
push
sahf
out
pop
sti
mov
push
je
xor
mov
add
add
call
cmp
movsl
std
or
dec
or
push
or
aaa
xchg
push
push
xchg
and
inc
sub
or
sub
jb
out
ret
test
aas
jo
add
aaa
add
xor
sub
addr16
cmp
push
cmp
rcll
out
or
mov
inc
nop
dec
sahf
aas
add
jp
mov
jp
xchg
inc
cmp
inc
lcall
mov
subb
mov
mov
mov
bound
loopne
jo
or
addl
fimull
add
or
pop
ret
mov
or
cmp
xor
lret
xchg
sub
les
add
push
dec
mov
fsts
and
out
inc
jb
push
push
push
pop
or
pop
mov
sbb
in
inc
cmp
jo
and
sti
sbb
std
daa
add
call
sub
aad
fisttpll
cs
pop
js
or
adcw
icebp
daa
mov
je
inc
sub
add
adc
fwait
jo
int
adc
iret
popf
add
gs
xor
push
and
add
mov
pop
je
outsb
out
push
push
adc
inc
jns
andb
push
pop
out
and
call
xlat
push
pop
xor
mov
gs
repz
mov
into
outsb
and
adc
mov
or
cmp
out
in
mov
nop
orl
add
fdivrl
lret
push
ds
ficomps
add
inc
call
cmp
aas
in
ss
mov
inc
dec
push
out
gs
shlb
out
cs
mov
ret
inc
xor
adc
dec
jns
cmp
pop
frstor
sub
jmp
cmp
cmc
es
inc
cwtl
in
dec
sub
aaa
mov
dec
mov
add
push
push
cs
imul
hlt
lock
popa
cmp
or
or
and
je
imul
mov
sub
xchg
or
jo
or
mov
sbb
ret
cmp
sub
push
jg
negb
mulb
ja
add
hlt
add
push
or
inc
or
jnp
incb
push
push
cmp
mov
and
jae
jnp
mov
faddl
mov
fmull
push
push
or
fldcw
inc
sub
mov
stos
or
dec
dec
xchg
dec
push
pop
andl
cmp
fs
mov
sub
scas
subl
gs
test
test
cmp
cmp
mov
lods
cmp
inc
mull
xor
add
cmp
negl
mov
cmpsl
xor
adc
testb
cmp
mov
leave
rclb
loop
sbb
jbe
and
inc
pop
push
inc
loop
mov
add
dec
and
jno
in
lcall
xchg
cmp
roll
add
out
movsb
add
add
repnz
cwtl
inc
add
es
or
push
mov
andl
lock
jge
mov
loopne
ret
inc
setae
cmp
pop
push
jb
inc
fcoms
pop
popa
add
notb
adc
lods
add
add
push
test
sub
mov
test
jne
push
inc
pusha
jbe
or
sbb
mov
jp
push
andb
orl
and
and
out
jne
fs
jmp
or
pusha
push
push
sub
inc
jne
mov
pop
jb
hlt
xchg
jl
rolb
in
adc
imul
insl
dec
adc
jo
cli
push
aaa
mov
ja
ss
xlat
icebp
adc
xchg
cmp
sbb
imul
imul
ja
push
inc
jb
add
mov
int
xlat
cmpl
outsl
mov
popa
mov
mull
scas
sub
dec
scas
shll
inc
insb
pop
cld
sbb
jb
mov
push
add
cmp
mov
jge
cmp
insb
or
or
and
and
push
pop
setns
insl
popa
popa
dec
outsl
in
add
xorl
inc
or
jb
hlt
or
movsb
xlat
push
mov
push
rclb
pop
xor
or
test
pusha
scas
lods
sbb
pop
insb
mov
push
or
pop
cmp
or
or
daa
jl
and
push
xlat
xor
test
int3
push
push
faddl
imul
mov
xor
sub
add
int3
inc
add
daa
mov
inc
loopne
fists
ljmp
loopne
fs
jl
ja
pop
push
fldl
and
push
or
pop
lea
mov
xchg
mov
mov
or
andb
jmp
mov
adc
scas
mov
dec
or
mov
push
and
dec
roll
pop
jbe
sub
mov
push
push
xchg
sub
sub
insb
adc
imul
lea
push
or
push
jg
mov
mov
in
jl
ret
push
repnz
adc
test
sbb
inc
out
aad
bound
ret
inc
push
sbb
mov
and
push
inc
xor
dec
mov
add
pop
aas
lods
mov
push
adc
xorb
adc
mov
cmp
jl
mov
insl
inc
ja
or
dec
sbb
icebp
mov
xor
xlat
fcmovbe
jg
test
and
sbb
repz
or
loopne
roll
and
test
sub
sub
jp
lcall
les
adc
adc
lret
xor
add
or
out
lods
or
xchg
and
and
mov
inc
loope
xor
int
jge
leave
pmaxub
mov
cmp
push
filds
pop
pop
insb
pop
ret
dec
jl
sub
xchg
adc
dec
xchg
add
adc
jbe
or
pop
rorb
mov
aas
or
mov
stc
and
xchg
int
div
cmp
mov
fneni(8087
cld
lcall
jne
pop
xor
mov
push
sub
add
enter
add
ljmp
dec
xor
or
add
cmp
jl
jb
gs
sbb
sub
jb
xor
dec
fbstp
insb
push
mov
test
or
std
mov
push
sub
rolb
inc
mov
push
pop
fldl
mov
and
cmp
test
jp
push
cmp
mov
xor
add
xor
movsb
pusha
or
pop
movsl
add
jnp
movsb
mov
jle
mov
clc
hlt
xor
out
lods
into
or
mov
loopne
ret
jnp
cwtl
psubq
daa
stc
xor
cmc
xor
add
or
cmpsb
mov
loop
inc
jl
add
outsb
clc
rcll
cltd
dec
loopne
mov
inc
lcall
xchg
mov
or
cmp
xchg
sbb
ffreep
pop
cltd
jle
inc
fiadds
mov
adc
adc
rclb
cmp
sarb
gs
mov
int3
and
pop
push
rorb
dec
les
and
icebp
aad
jbe
pop
orb
push
sub
je
jo
dec
inc
aaa
cmpsb
cmpb
push
dec
clc
jmp
dec
cmp
rcrb
dec
cmp
push
jbe
dec
push
push
push
push
arpl
push
rol
jb
pop
popa
ljmp
push
push
subb
iret
jge
into
pop
adc
daa
nop
fcomps
adc
les
stos
mov
repnz
mov
push
cmpb
gs
mov
pusha
xchg
mov
and
add
push
or
data16
pushf
out
adcb
fiaddl
xchg
loop
enter
sbb
dec
sbb
dec
xchg
mov
idivb
jb
lea
push
popa
rcr
add
push
and
sbb
mov
packuswb
lds
test
shll
mov
adc
nop
pop
icebp
bnd
shlb
aam
fstl
icebp
add
daa
cs
pop
icebp
mov
and
stc
add
xor
outsb
mov
inc
pushf
jl
mov
and
and
das
sbb
pusha
stc
or
mov
pop
and
dec
jne
jbe
fstpl
cli
ret
shll
rcrb
movsl
xor
jne
adc
pop
dec
int3
pop
jmp
inc
adc
je
mov
xchg
das
aad
js
xor
inc
aad
and
or
sub
jns
mov
sub
adc
xor
jne
es
ret
mov
add
and
adc
push
jmp
xchg
and
xlat
jne
pusha
push
jno
mov
test
cltd
dec
xor
popf
dec
push
scas
outsb
cs
sub
jo
mov
lea
mov
fildll
out
push
push
add
pop
lret
sarb
ja
fs
cmpsb
fcoms
xor
mov
jae
sbb
inc
test
test
xchg
pop
cmp
push
outsl
lock
sub
dec
mov
je
cmp
cmp
cld
call
mov
adc
gs
cltd
add
movzwl
dec
cld
loope
add
jae
jb
ret
inc
push
sub
and
adc
fimuls
ss
mov
jl
xchg
or
sub
test
add
loope
leave
push
sbb
dec
sub
fsubrs
cmpsb
dec
rorl
pop
lods
push
int
lcall
cmp
inc
sbb
inc
mov
mov
test
dec
mov
dec
cmp
movd
divb
cmp
outsb
dec
or
and
sti
inc
adc
je
cmp
cmpsl
je
pushf
test
add
push
inc
adc
inc
cld
cmp
call
mov
xchg
mov
pusha
mov
iret
mov
push
or
sbb
adc
cmp
iret
and
and
xchg
js
ret
jb
in
add
push
push
and
and
jb
subl
fimull
sub
das
enter
push
adc
pop
sbb
jne
xchg
push
mov
cmp
push
adc
mov
mov
sub
stos
add
add
mov
dec
or
sub
inc
nop
stos
aas
call
outsl
push
push
dec
scas
inc
xchg
addl
xorb
fcomi
sub
aaa
mov
fs
jbe
inc
and
xchg
add
in
aaa
dec
lret
push
je
faddl
sub
iret
clc
push
jl
imul
or
jo
adc
dec
or
mov
movsl
add
xchg
je
xchg
daa
outsl
and
sub
jp
sub
xor
lret
or
mov
jmp
or
inc
outsb
loope
cmp
and
dec
add
mov
sbb
dec
clc
xor
add
dec
or
xchg
mov
and
mov
and
lret
fdiv
pop
sbb
ret
pop
push
ja
push
sbb
clc
mov
adc
mov
pusha
add
adc
xchg
jns
aas
jnp
repnz
sub
data16
lahf
fdivs
call
xchg
lods
cs
dec
jb
loopne
cmpb
mov
enter
je
cmpl
js
fsubr
fadds
add
dec
daa
and
shll
dec
clc
inc
popa
pop
add
sahf
xchg
push
add
je,pn
test
or
mov
ret
add
mov
sbb
inc
lock
data16
jl
movsl
mull
mov
daa
rcrl
pop
inc
adc
pop
test
lahf
inc
pop
push
mov
mov
jp
xor
test
xor
scas
adc
xchg
inc
inc
lcall
popf
iret
lcall
sub
mov
mov
mov
test
dec
mov
movsb
xor
cmp
jle
and
dec
pop
xor
arpl
in
push
xor
cmpsb
pop
and
push
push
and
and
into
or
xlat
push
arpl
lret
xlat
mov
mov
mov
lea
adc
jo
inc
test
lcall
jns
push
ja
adc
mov
cmp
or
fmulp
and
inc
dec
dec
lret
lds
mov
push
andb
mov
movsb
dec
mov
mov
bound
mov
pop
sub
mov
jbe
add
lret
shrl
mov
jg
das
mov
mov
xorl
popa
stc
imul
or
rolb
mov
das
adc
pusha
stos
xchg
add
frstor
push
sbb
cmc
in
add
mov
aaa
subb
call
popa
fwait
test
adc
pop
dec
jp
dec
inc
or
jb
and
inc
adc
add
push
adc
xlat
into
push
push
push
adc
stos
insl
push
inc
cmpsb
mov
lahf
rorl
int
adcl
inc
mov
testb
imul
mov
jne
lock
and
fmuls
sbb
sbb
sbb
adc
cltd
add
adc
pop
mov
out
cmp
dec
and
inc
loope
bound
xchg
or
lcall
fdivl
mov
or
mov
mov
movl
mov
fcomps
mov
or
sub
es
test
push
xor
inc
mov
jo
or
andl
mov
shlb
outsb
add
jl
sbb
inc
test
out
xor
int
xchg
pop
push
adc
fadds
xchg
fwait
push
push
push
push
dec
mov
xor
jne
inc
or
ret
and
cmp
pop
sti
pop
push
mov
add
inc
add
mov
mov
jne
adc
lea
push
loopne
mov
cmp
sub
mov
loopne
mov
jns
xchg
xchg
js
les
je
or
sbb
es
push
in
push
sbb
mov
mov
cmpsl
mov
test
cmpsl
jo
mov
cmp
mov
mov
push
push
push
push
fwait
sub
pop
sbb
repnz
adc
test
mov
jmp
mov
incb
adcl
sub
mov
pop
or
dec
adc
or
mov
add
xorb
pop
stos
dec
and
or
jo,pn
or
push
movb
in
bswap
xchg
add
push
add
xor
cli
inc
mov
inc
or
cmc
and
repnz
push
jmp
push
das
add
inc
lret
mov
call
fadds
xchg
sub
in
or
mov
jbe
int
dec
sbb
lds
push
test
sub
mov
pop
pop
sub
shl
pop
dec
inc
sahf
sarb
add
jl
inc
adc
jne
cmpsl
lea
pop
addl
push
push
dec
ret
addl
add
push
push
sti
sbb
sar
daa
adc
mov
test
ret
icebp
xchg
mov
push
push
clc
sub
xorb
and
mov
mov
mov
mov
ret
int
js
pushf
push
aad
jae
pop
loope
pop
in
popa
lods
scas
dec
call
aaa
stos
call
adc
test
jg
orl
pop
lods
mov
adc
sbb
les
adc
mov
sbb
push
ss
test
add
mov
mov
mov
xlat
mov
repz
cmpsl
dec
jmp
sbb
loop
pop
push
lds
push
mov
xor
add
pop
sub
xchg
dec
outsl
cs
sbb
and
orl
movb
arpl
fwait
mov
ret
add
aas
and
scas
push
fnstenv
push
push
sahf
xor
mov
push
aad
adc
mov
lea
jae
addb
fsts
push
or
mov
mov
inc
and
adc
movsl
in
pop
mov
mov
movsl
lock
mov
or
jne
mov
push
xor
outsb
mov
js
pushf
cmp
test
adc
es
je
pop
adc
sub
xchg
mov
jno
pop
adc
ret
sbb
test
or
mov
sbb
push
in
ss
lea
repnz
aaa
cmp
cmpl
push
lahf
xchg
cld
add
mov
push
push
sub
adc
xchg
nop
daa
add
jns
cs
push
push
cmp
and
shl
pcmpeqw
xchg
and
add
push
and
jae
in
loope
jno
mov
out
loop
clc
add
sbbb
push
and
scas
and
int3
mov
xor
rcll
or
cmpb
jp
push
push
mov
and
sub
mov
push
jg
add
or
xor
sarb
push
mov
push
mov
inc
lahf
pop
adc
incl
add
inc
and
les
sub
push
or
iret
cs
js
cmp
orl
dec
adc
jl
add
sub
xchg
lock
xor
add
jmp
adc
or
mov
sub
jl
ficompl
pop
xchg
mov
fistpl
and
sbb
mov
or
inc
sbb
sahf
mov
add
test
add
adc
lcall
mov
lock
mov
mov
and
test
lea
je
push
repz
dec
jl
xor
add
addb
pop
sbb
adc
xor
push
xor
or
sbb
cmp
push
pushf
fcmovbe
in
jbe
scas
into
jp
jmp
aam
test
push
push
push
push
adc
dec
xchg
sub
nop
sbbl
test
fisubrs
loop,pn
inc
or
shll
jmp
push
sub
mov
jg
mov
lock
dec
ja
je
mov
aaa
and
fisubrl
dec
ljmp
loope
inc
imul
fidivrl
inc
fucompp
push
mov
mov
sti
arpl
test
push
mov
packssdw
fdivr
pop
rorb
or
dec
fisubrs
in
and
cli
aas
test
adc
xchg
mov
test
or
cmp
mov
inc
mov
jp
fdiv
inc
push
and
repz
or
loopne
mov
repz
fsubs
dec
or
fwait
cmp
adc
iret
or
out
fs
inc
push
or
in
mov
lock
mov
xor
push
int3
or
cmp
mull
dec
cs
arpl
mov
stos
mov
pop
ss
adc
mov
add
ret
adc
and
sub
aaa
clc
sbb
mov
popa
sbbl
pop
push
jb
clc
lods
jne
cmp
mov
cld
jbe
sub
out
jge
stos
inc
xchg
xchg
lock
jp
inc
mov
dec
jno
cmp
jb
cmc
loopne
push
inc
lds
dec
test
mov
pop
sbb
aaa
dec
mov
jmp
push
aaa
outsl
cmpsb
rolb
in
and
outsl
xor
cmpsb
test
xor
sahf
add
push
fcom
leave
sbb
cmp
pop
cmp
push
popa
fsubrp
or
mov
cmp
and
mov
add
nop
lcall
mov
in
sbb
pop
add
pop
inc
inc
cmp
cmp
sub
pusha
mov
or
call
test
scas
cmpsb
jns
clc
add
push
insl
add
adc
add
add
mov
mov
or
test
and
add
loopne
sub
lea
mov
mov
cmp
mov
add
je
js
pop
fs
add
add
lods
aaa
fcom
lods
or
add
ret
std
adc
cmpsl
add
sbb
aaa
jmp
jmp
xchg
xrelease
mov
or
dec
jb
test
sbb
inc
shl
cli
rcrl
xor
push
pop
sub
ss
outsb
adc
dec
jnp
cmp
adc
shlb
or
adc
cmpsb
mov
fstp
sub
mov
cld
push
mov
or
or
add
fsubl
and
movsl
add
jl
pop
inc
xor
lods
test
and
jl
and
cmp
jecxz
insb
cmpsl
icebp
in
popf
fbstp
pop
xchg
inc
add
dec
push
push
jg
dec
outsb
dec
lret
jnp
cmc
dec
mov
int
inc
insb
js
push
leave
fwait
out
push
and
push
and
insl
jl
push
dec
push
push
mov
into
mov
popa
cwtl
add
mov
and
js
cwtl
jo
mov
nop
insb
add
cmp
loop
push
inc
xor
lahf
ja
test
sub
out
lds
lock
sti
sbb
mov
in
inc
loope
lock
mov
push
out
ret
shrb
mov
add
inc
mov
daa
sbb
out
clc
push
or
rolb
xchg
sbb
popa
loope
push
inc
pop
sbb
call
scas
rcr
pop
xor
or
jecxz
pop
arpl
cltd
inc
sahf
inc
push
dec
sbb
js
or
pop
inc
dec
lea
test
das
push
inc
and
xor
js
add
push
inc
push
xor
push
jo
mov
ss
sub
jmp
leave
pop
mov
xor
aas
out
addr16
push
pop
cmpsl
out
outsb
insb
aaa
jne
leave
mov
mov
add
inc
adc
mov
dec
movsl
add
cmp
sti
jl
dec
push
clc
xchg
mov
add
push
fldenv
push
pushf
pop
inc
dec
add
jnp
cmp
mov
out
xchg
adcb
testl
cmp
loopne
xchg
and
bound
or
mov
icebp
push
rol
and
sarl
dec
mov
fildll
ss
add
inc
and
shll
das
aas
cs
add
dec
enter
movsb
fadd
push
cmp
jecxz
dec
cmp
pusha
jecxz
and
bound
mul
mov
mov
icebp
mov
adc
inc
push
push
sub
shlb
add
or
fcoml
push
jns
pop
jle
cmp
push
loop
leave
lret
cmc
sbb
mov
adc
push
fmul
mov
push
push
push
xor
repz
xor
cwtl
adc
pop
je
xchg
or
jge
in
push
push
sbb
sub
jecxz
add
push
cmp
cmp
imul
test
mov
ret
push
loop
stos
push
mov
faddl
inc
inc
mov
mov
pusha
cmp
or
rolb
xor
sub
or
jl
sbb
add
sbb
mov
and
mov
mov
add
scas
aad
mov
bound
scas
add
ror
lds
jl
ret
ret
orb
xor
movsl
push
add
lods
sahf
push
pop
sub
add
mov
andl
dec
call
je
cmp
jle
cld
xor
inc
adc
adc
fldl
rorl
lcall
fwait
push
jg
jb
pop
mov
mov
mov
jmp
lock
lock
dec
nop
cld
xor
jne
jecxz
movsb
push
dec
in
mov
inc
or
and
sarb
pusha
adc
pop
add
cs
rorb
mov
push
push
mov
cmpsl
push
in
push
lods
sub
outsl
mov
mov
fcompl
pop
jb
jns
dec
loop
xor
jmp
out
jne
mull
insb
push
cmp
sub
push
lcall
cmpb
or
push
mov
imul
push
adc
add
push
ret
dec
cs
lea
nop
fs
mov
std
push
loope
or
push
xor
xor
lea
mov
out
inc
inc
scas
sub
repz
call
out
fdivrl
clc
loop
add
mov
outsb
mov
adc
std
push
rolb
inc
mov
sbb
mov
fstl
mov
lods
and
ret
orb
pop
cmpb
test
mov
rclb
lods
and
adc
mov
lea
cmp
iret
fisubrl
fbld
fstp
sbb
adc
pop
aad
mov
sahf
movsb
ret
cmp
mov
push
inc
sbb
lea
je
ja
repz
jp
adc
jb
add
push
popf
mov
fisttpl
sbb
sbb
add
xchg
adc
sbb
jo
cmp
inc
mov
subl
pusha
inc
push
lea
or
ret
inc
jmp
xchg
scas
fidivl
cmp
xchg
inc
lcall
in
add
cmp
ret
ja
xchg
mov
push
mov
mov
dec
or
inc
mov
lods
xadd
rorl
jge
out
sub
movsb
les
adc
mov
cwtl
sbb
xor
dec
dec
loope
mov
mov
push
adc
fiaddl
inc
sub
es
mov
mov
push
jae
iret
mov
fcoms
pusha
pop
push
or
push
and
icebp
fidivs
or
subl
fbld
push
icebp
mov
out
mov
clc
adc
adc
into
mov
push
mov
push
mov
mov
cmp
adc
add
sbbl
pop
sub
int3
dec
ss
shl
shl
adcb
imul
sub
inc
stc
adcb
cli
addb
ficoms
clc
int
pop
xchg
inc
lea
addr16
clc
jmp
xorl
ret
dec
jbe
add
dec
lock
push
into
pop
dec
inc
sbb
outsl
add
and
push
aaa
mov
mov
orl
push
xor
push
sbb
sub
inc
fistl
dec
add
mov
sbb
dec
xchg
rcl
pusha
movsl
daa
cmc
push
or
cmpsl
and
lds
icebp
repz
dec
pop
data16
aam
push
clc
sub
jmp
repz
and
leave
filds
pop
or
nop
and
aas
nop
sub
fisttpl
out
xor
ret
add
mov
sbb
cs
mov
sub
cwtl
cmp
sahf
or
and
popf
mov
add
ds
inc
add
outsl
or
mov
out
fnstsw
mov
enter
add
sbb
int3
inc
push
jmp
xchg
or
dec
add
test
inc
push
add
jae
mov
in
roll
xchg
or
ljmp
push
add
sahf
rolb
cmp
add
mov
pop
dec
jo
pop
pop
inc
xor
lock
ret
mov
cltd
adc
ret
fdivl
adc
mov
sub
dec
sbb
xor
xor
jo
enter
add
sbb
leave
mov
lar
or
adc
lret
push
push
inc
dec
lcall
js
xchg
push
xchg
lds
adc
xchg
shrl
jo
sub
sahf
push
mov
push
ss
dec
repnz
cmp
push
xchg
lds
jns
push
push
push
adc
jl
orb
fxch
out
adc
iret
or
xchg
out
cmp
adcb
xchg
enter
faddp
dec
lock
add
sbb
stos
pusha
daa
cld
insb
enter
mov
push
xor
ficompl
adc
adc
cmp
pusha
cmp
andl
cltd
bound
inc
adc
mov
sbb
push
push
sbb
xor
sbb
lds
mov
in
decb
cmp
mov
or
add
push
inc
adc
daa
cwtl
inc
or
out
adc
movsl
sbb
test
orl
dec
fcompl
sub
les
xchg
xchg
mov
sarl
add
xor
add
les
jno
mov
syscall
mov
sarb
les
push
xor
rcll
xchg
inc
mov
cmp
jb
sbb
inc
cmp
rcr
adc
adc
or
fs
xchg
fnsave
and
enter
pop
sbb
lds
ror
or
ret
loop
test
add
icebp
push
movsb
jge
enter
out
jb
or
out
outsb
adc
cmpsb
mov
pop
ja
clc
sub
andl
jp
mov
ss
pop
leave
jmp
int3
out
or
or
xor
jecxz
mov
dec
sub
mov
lock
sub
inc
and
cmp
or
cli
es
fimuls
scas
inc
adc
sbb
inc
and
idivl
or
fwait
inc
call
mov
pushf
sub
cmp
fidivrl
lcall
add
lcall
sbb
test
das
nop
and
xchg
add
xchg
and
xchg
add
dec
xchg
add
sbb
pop
adc
and
imul
dec
repnz
xor
sub
push
js
dec
pop
or
ror
add
fsubr
push
and
dec
cmp
mov
ds
push
pop
adc
mov
out
push
inc
or
sbb
xchg
pop
sbb
xchg
push
adc
push
mov
test
xchg
and
lret
pop
xchg
cmpsl
push
jge
xchg
test
push
xchg
inc
jo
scas
test
lahf
sbb
push
popf
mov
mov
int3
adcl
or
adc
scas
or
roll
and
mov
pop
popa
jnp
xor
xchg
inc
popa
repnz
sbb
dec
adc
mov
xchg
pushf
out
xchg
sub
adc
adc
ljmp
inc
or
cmp
mov
push
dec
lods
in
popa
sub
scas
mov
sub
scas
pop
xchg
inc
mov
lea
add
sbbl
jge
addr16
mov
or
lea
mov
mov
sub
xchg
insl
or
inc
dec
pop
add
test
test
mov
into
loope
lds
cmp
cwtl
push
dec
lds
in
push
jge
shlb
mov
sub
mov
rorb
mov
jns
lea
les
jbe
popf
mov
xchg
loopne
inc
jo
aas
shlb
leave
das
cld
lock
xchg
lea
sti
cmp
fs
les
push
push
push
cmp
and
cmp
mov
inc
jo
xor
movsl
add
insl
sbb
xchg
adc
cltd
aas
jne
lods
adc
rcl
shrl
xchg
xor
fcom
lret
gs
pushf
jnp
push
pop
gs
pop
dec
xor
xchg
pop
sbb
divl
pop
jns
and
inc
cltd
rorl
lcall
push
enter
jge
jo
insb
add
sub
das
inc
and
add
or
fbld
sub
add
inc
add
sbb
mov
sbb
es
ds
repz
test
movsl
cmp
aaa
fisttpl
fsubl
mov
pop
imul
cmpsl
inc
gs
push
sarl
mov
mov
loopne
into
and
push
jne
out
ds
subl
sbb
jecxz
adc
push
push
icebp
pushf
cmp
call
inc
jns
add
dec
or
mov
sub
shlb
icebp
add
dec
dec
loopne
insl
dec
xor
mov
inc
inc
mov
and
aas
xchg
pop
fadds
jnp
jo
pop
adc
mov
mov
mov
loop
sub
mov
sti
fs
add
mov
pop
xchg
add
dec
add
popf
pop
adc
pop
dec
pushf
lea
sub
mov
repz
xchg
mov
sub
xorl
dec
pop
dec
push
nopl
push
sbb
jo
or
or
pusha
popa
fwait
stos
lahf
add
push
clc
and
cmp
movsl
push
inc
test
xchg
shlb
int3
ja
ret
push
push
incl
aam
mov
imul
add
and
push
fwait
or
imul
pop
sbb
addr16
imul
or
popf
pop
outsl
in
popf
adcb
out
aas
divl
fidivs
sub
xchg
rolb
loop
or
xor
or
jne
push
jp
mov
mov
lahf
jmp
mov
mov
adc
test
rcrb
or
fdivrl
push
jbe
mov
decl
push
adc
popf
add
loope
es
or
mov
das
loopne
ljmp
sbb
mov
and
or
hlt
orb
std
sbb
add
lret
ja
daa
ja
fpatan
xchg
or
mov
or
lock
adc
ss
js
ffreep
dec
stos
dec
and
mov
xchg
js
sub
jp
rcll
cmp
or
rclb
test
out
add
inc
lahf
xchg
loope
clc
push
or
xchg
neg
cmp
inc
fwait
push
cld
fwait
ret
xor
xchg
xor
jp
pop
mov
sub
inc
insb
test
mov
mov
jnp
push
xchg
stos
and
xchg
mov
sbb
fs
or
shll
insb
cmp
sub
fcoml
jmp
adc
pop
inc
push
dec
into
pop
stos
rcll
mov
stc
cmp
popf
clc
movsl
pop
ret
xchg
xchg
push
sahf
sub
daa
nop
dec
dec
sahf
sub
cmp
xchg
sbb
jns
aad
sahf
sub
ret
pop
test
adc
push
push
jecxz
add
imul
xchg
cwtl
loope
mov
mov
outsl
mov
sbb
fdivl
push
xchg
pop
xor
icebp
mov
xlat
mov
outsl
shr
jb
xchg
cmpl
sbb
cltd
dec
inc
and
sub
lods
sbb
pop
lea
jmp
pop
fistl
mov
jno
cs
adc
imul
cs
xor
jb,pt
dec
aam
xor
xor
lock
push
mov
push
add
pop
add
nop
jl
pop
mov
add
subb
dec
mov
xor
mov
jne
pop
loop
outsl
pushf
cmpsl
adc
pop
dec
pushf
xlat
mov
or
xlat
jge
mov
outsl
pushf
xlat
scas
mov
push
movsl
enter
add
add
dec
popf
add
sbb
add
daa
cmp
push
cmpl
cmpsb
mov
popf
add
lods
out
adc
cmpsl
nop
adc
xchg
pop
xor
inc
add
repnz
scas
insl
inc
popf
xor
xor
dec
mov
xor
add
hlt
mov
add
or
mov
shrb
push
xchg
setbe
push
ja
mov
popf
sbb
test
outsl
inc
mov
das
mov
inc
pop
or
jp
push
add
jg
sahf
out
pop
pop
loopne
subl
and
adc
test
and
sub
sub
inc
add
jge
mov
jo
mov
push
lret
mov
imul
jecxz
jbe
in
push
out
popa
gs
push
mov
mov
addr16
sbb
push
insb
or
push
dec
outsb
loope
cmp
sbb
sub
push
sub
insl
imul
inc
scas
shrb
movsb
xor
ds
xchg
ja
jmp
ds
xor
or
ljmp
add
add
scas
push
sub
out
in
ds
dec
cmpsb
lea
repnz
in
push
test
jns
inc
mov
out
jbe
sbb
xor
out
shrb
lock
icebp
mov
add
jno
and
lret
or
dec
call
rcll
imul
mov
sbb
inc
or
pushf
jb
pop
jnp
dec
loope
jle
cmpb
mov
pushf
nop
je
test
cmp
cmp
ja
add
jnp
push
test
mov
sub
mov
sti
bound
mov
adc
xor
or
jns
int3
jo
pop
nop
cmp
popa
dec
fimull
dec
xchg
test
mov
mov
mov
lcall
imulb
cmp
imulb
out
ljmp
shll
push
xchg
or
adc
les
adc
fisubs
adc
leave
inc
sbb
pop
xor
xor
in
push
call
inc
fsts
pop
dec
imul
mov
push
sub
pop
sbb
xor
jl
popa
dec
xchg
pusha
mov
mov
and
mov
sbb
pusha
push
sub
jo
inc
outsb
fwait
dec
call
cmp
shlb
push
je
scas
sbb
inc
mov
adc
adc
dec
cmp
fdivr
sub
gs
test
xchg
mov
adc
mov
ficomps
sbb
loop
push
adc
jl
or
mov
in
xchg
test
ret
mov
test
call
dec
cmp
mov
andl
test
mov
or
mov
xchg
mov
scas
ret
sub
iret
loop
fucomi
inc
mov
insb
adc
mov
xchg
xchg
jo
mov
cmpsl
pop
sub
js
fs
mov
push
out
and
dec
scas
push
xchg
rorb
sub
pop
out
dec
fstl
jno
jmp
fcmovu
jg
lea
dec
gs
inc
lock
shrb
push
pop
int
adc
mov
inc
adc
shr
xor
add
out
sbb
dec
xchg
fstl
dec
in
dec
lcall
lret
aas
cmp
hlt
jge
push
test
ret
addb
cmpsb
and
das
mov
lea
mov
and
xor
popf
add
dec
out
fisttps
push
enter
lock
pop
push
jl
sahf
dec
sbb
movb
aaa
loop
outsb
sti
push
sarb
cmp
xchg
adc
cli
orl
sbb
pop
xlat
dec
sbb
fdivr
jne
insb
je
pop
divl
fldl
cmp
sbb
sarl
decl
insb
inc
cs
cli
jbe
lods
lds
adcb
gs
push
sbb
je
dec
mov
hlt
sub
push
mov
fwait
jnp
dec
jge
or
cwtl
and
adc
imul
mov
xchg
out
ja
sub
or
push
dec
adc
dec
add
mulb
adc
rorb
mov
addl
adc
aad
push
xlat
dec
test
aam
pop
push
adc
push
inc
pop
sub
xor
cmpsb
inc
or
bound
testb
add
push
inc
push
inc
mov
or
scas
jb
adc
dec
rcrl
adc
sahf
sbb
dec
mov
push
loopne
jno
jno
repz
imul
sbb
pop
fdivl
jbe
jno
push
inc
jno
cltd
loop
push
popa
jo
jl
mov
pop
mov
ljmp
jae
lcall
out
push
pshufw
in
and
push
out
jb
inc
pop
pusha
sub
daa
xchg
test
mov
pop
addps
xor
xor
mov
cmp
or
sbb
mov
xchg
pop
pop
mov
lret
xlat
mov
and
or
sti
call
cmp
sahf
addb
cmp
inc
inc
push
dec
jbe
dec
hlt
push
dec
push
andps
sub
push
inc
or
push
mov
arpl
lods
repnz
or
or
xor
sarl
or
lods
sarb
mov
sub
rorl
jle
cmp
in
dec
mov
insb
lods
movsb
push
or
mov
push
cmpsb
rorl
add
pop
mov
adc
sub
inc
sub
pusha
fcmovu
push
add
push
mov
add
jl
add
lcall
push
fcoml
push
pop
mov
add
add
nopl
lods
incl
cmp
and
adc
pop
shlb
testb
lds
rclb
jmp
ret
movb
add
nop
mov
mov
mov
lcall
rclb
cltd
lock
jl
test
mov
or
mov
xchg
mov
jne
cmpl
jmp
xorb
mov
ljmp
jne
pop
add
sub
cwtl
jecxz
cmp
jp
mov
incl
or
jl
mov
loope
xchg
add
push
movb
and
in
and
dec
pop
jne
add
xchg
jbe,pt
dec
shlb
outsl
or
sbb
addr16
add
jmp
adc
lock
insl
jmp
or
inc
sub
inc
xorl
lds
loopne
testl
mov
mov
pop
cltd
test
ss
pop
xor
pop
icebp
loopne
dec
pusha
pcmpgtb
sub
mov
data16
cmp
sub
daa
jmp
fmuls
pop
je
cltd
mov
push
jmp
push
push
pop
in
sbb
loop
pop
or
push
daa
loopw
push
sub
xor
mov
xor
ja
rcrb
stos
mov
inc
test
pcmpgtw
mov
sub
xor
shlb
cmpsb
ds
cmpl
lret
sbb
outsl
lret
sbb
pop
push
in
add
sarl
loop
adc
je
decb
adc
mov
je
mov
enter
fcomp
add
movsb
sbb
adc
addr16
mov
iret
mov
pop
les
mov
enter
xchg
push
rclb
jne
jne
int3
or
jl
add
mov
sti
inc
lock
add
sarb
xlat
or
sarb
mov
mov
in
mov
loopne
movsl
das
and
inc
jge
mov
or
xor
push
cs
push
sub
fsubrs
inc
mov
bound
sbb
or
shrl
loope
or
adc
lea
or
dec
test
push
icebp
in
jnp
arpl
jge
and
js
xor
hlt
cmp
adc
sub
cmp
mov
stos
push
adc
mov
popf
cltd
or
dec
andl
dec
or
cmp
lahf
push
shll
dec
mov
sbb
mov
sub
sbb
lods
rcll
sub
cmp
int3
dec
sub
add
shl
leave
add
mov
leave
xor
jl
shl
bound
dec
rorb
repnz
ljmp
push
or
cmc
sub
jae
test
pop
dec
fnstsw
adc
pop
xchg
rolb
bnd
divb
adc
jb
push
mov
sub
iret
movb
shlb
pusha
push
aaa
pop
and
je
or
faddl
loopne
xor
mov
add
xorb
xchg
push
mov
adc
in
mov
sti
push
in
pushf
dec
hlt
or
xchg
lcall
orb
cs
adc
add
ljmp
fld1
or
fnop
mov
scas
pop
cmp
inc
push
push
testl
rolb
in
cltd
mov
dec
dec
add
cli
lds
and
sbb
inc
xchg
sahf
sub
jns
pop
ja
out
lcall
push
sub
lds
repnz
ds
test
scas
jb
fwait
fs
into
popf
and
in
cmpsb
dec
std
push
pop
add
mov
pop
push
test
ljmp
pop
push
es
sbb
xchg
js
sahf
jp
sbb
sahf
loopne
xor
mov
add
add
cmpl
int3
sbb
out
jecxz
pop
pop
or
lcall
inc
imul
add
nop
dec
sbb
xor
push
jae
push
sbb
cltd
cli
adc
adc
or
cli
inc
jne
insb
xlat
mov
enter
mov
sbb
or
xor
das
das
jnp
dec
push
jmp
jno
push
pop
fiadds
or
push
inc
dec
sti
orl
bswap
push
and
fistpl
cmpsl
sub
out
inc
lret
or
and
xlat
es
int
push
out
movsb
imul
xlat
mov
lock
insl
and
shrl
out
testl
pop
addb
inc
scas
jno
xchg
push
jns
sahf
gs
outsl
leave
xchg
jecxz
cltd
fiadds
inc
fldt
int3
je
cmp
cmp
and
addr16
in
inc
out
and
dec
sub
push
add
movsb
imul
push
movsb
add
sbb
push
pop
add
or
cmp
xchg
mov
lods
mov
cmp
jbe
push
mov
pop
ffree
stos
jge
cmp
adc
dec
ja
movsb
dec
cmp
and
jp
push
xor
xlat
sub
pop
ficoms
fldcw
inc
fstpl
pop
das
mov
sti
in
loopne
and
leave
test
push
add
jg
adc
test
xlat
or
xor
jae
jnp,pt
repz
test
add
xchg
mov
pop
or
insl
xchg
inc
shlb
or
push
xchg
xor
nop
jno
xlat
xor
insl
sbb
repz
xor
add
ja
out
pop
movsb
pushf
jne
cmp
xchg
cmp
fxch
or
pop
adc
int
jecxz
ficompl
leave
aas
xchg
into
cmpsl
leave
xlat
inc
pop
jae
dec
movsl
or
and
or
add
dec
leave
lea
bound
imul
sbb
out
rolb
add
push
sbb
mov
outsb
sti
pop
sub
push
fs
in
push
testb
out
push
ret
inc
movnti
stos
xlat
push
pop
and
mov
sub
pop
aaa
push
inc
lods
iret
rorl
pop
push
sti
daa
sti
mov
cmp
dec
data16
mov
push
orb
or
outsl
mov
mov
stc
mov
or
je
out
adc
add
add
and
xchg
push
adc
scas
push
mov
add
ss
mov
ret
and
mov
adc
jmp
xchg
cmp
push
pusha
sub
ret
sub
js
adc
xor
and
cs
sbb
dec
xchg
mov
out
push
ficoml
jne
mov
add
add
out
in
inc
ret
inc
into
addr16
mov
nop
or
xchg
insl
adc
push
push
pop
setne
lds
add
add
add
xchg
lcall
add
mov
xchg
sbb
test
test
movb
cmp
xchg
dec
test
jp
and
cmp
add
mov
pop
mov
mov
add
testb
lods
push
call
adc
mov
cmp
push
inc
in
out
nop
pop
mov
jb
or
mov
or
inc
lret
xor
jge
rclb
fistl
lock
or
pop
push
js
inc
xchg
shll
pop
jl
out
nop
jle
les
push
adc
out
mov
js
test
into
inc
and
repnz
mov
xor
xchg
dec
pop
inc
mov
add
sbb
mov
mov
add
fsubs
sub
pop
loop,pn
aam
dec
add
push
jbe
or
adc
sbb
push
in
push
stc
fstl
push
jb
ret
adc
in
pop
xchg
pop
xchg
aam
add
ficompl
jae
rcll
lods
ss
jecxz
shll
pop
movb
inc
adc
test
adc
mov
inc
xchg
sub
sbb
add
repnz
js
push
add
aaa
push
shl
adc
cmpb
popf
lret
mov
mov
sbbb
pop
jmp
mov
mov
cmpb
mov
and
adc
out
shl
jbe
outsb
push
mov
mov
jbe
or
mov
sub
loopne
pusha
push
jb
lock
cmp
call
pop
loopne,pt
cwtl
inc
or
push
adc
xor
or
push
sub
cmp
ja
add
ds
cmp
mov
xchg
jbe
mov
xchg
adc
jo
int3
or
insb
cmp
sbb
nop
bound
in
sti
lea
xorl
mov
and
test
mov
or
call
movb
out
rol
add
push
in
mov
dec
imul
neg
lret
sbb
or
dec
mov
mov
sub
scas
add
test
loopne
sub
in
pusha
outsl
dec
sbb
jp
and
adc
aaa
mov
add
xchg
xchg
sub
in
add
add
int3
stos
scas
repz
mov
clc
and
xchg
lcall
imul
push
inc
or
pop
ret
adc
rol
mov
xchg
xchg
sbb
mov
nop
mov
addl
mov
lret
fcmovbe
push
lahf
dec
and
xlat
or
push
pop
jne
add
ss
mov
negb
push
lods
fndisi(8087
mov
push
addb
push
inc
ret
outsb
or
lods
lahf
sub
add
pop
or
inc
dec
inc
clc
add
inc
into
rorb
in
xor
dec
aad
sub
or
lock
ret
adc
or
xlat
rolb
repnz
cmp
negl
add
jg
jo
push
pop
push
inc
push
mov
or
xor
ret
inc
xor
lea
fbstp
pop
add
ret
sbb
add
enter
add
push
push
lret
xor
andl
popa
push
rol
cltd
js
push
outsl
push
mov
je
outsb
adc
xor
fdivrp
push
xchg
jg
outsl
sbb
imul
xlat
cli
adc
adcl
or
sub
int
lea
fnstcw
jae
jo
and
sbb
sub
icebp
pop
jle
push
mov
test
xchg
xor
test
orb
sahf
int
rcll
mov
fcomp
sbb
or
mov
push
push
add
in
loop
stos
movsl
fwait
add
pop
ja
dec
sbb
fiadds
fisttps
push
add
addr16
push
outsb
imul
mov
aam
push
or
sub
jmp
pop
sbb
push
icebp
test
lea
loope
rep
dec
outsb
xor
push
jne
adc
mov
add
sbb
fisubl
adc
mov
addr16
add
test
dec
add
or
or
adc
aaa
xchg
lods
and
pop
jb
jge
or
adc
mov
idivl
dec
mov
cmpsl
sub
jl
and
movsl
incl
sub
xchg
xchg
sbb
adc
mov
mov
mov
notb
mov
push
rclb
jo
popa
cmpsl
fisttpl
test
pushf
adcb
outsb
loopne
pusha
push
or
aas
cmc
mov
es
fsubrs
movl
rorb
or
je
outsl
pop
push
clc
ljmp
mov
dec
dec
mov
dec
imul
or
and
push
push
jle
mov
push
inc
pop
jo
inc
dec
pushf
add
rcl
shrl
cmp
pop
mov
aaa
mov
sahf
call
cmp
mov
sub
pop
cmp
pop
imul
nop
cmp
inc
andl
fistps
mov
push
cmpb
dec
aaa
enter
loope
mov
push
mov
outsl
add
and
addl
jge
jb
or
ja
xor
pop
shrl
sub
push
push
mov
add
mov
test
je
call
in
pop
in
and
inc
test
pusha
fsubs
adc
and
jmp
lods
jmp
outsl
and
inc
cmp
test
pop
mov
inc
pop
jl
test
or
add
jp,pn
fiaddl
leave
shrl
sbb
jle
pop
dec
adc
hlt
xor
ds
ja
inc
or
in
cmp
je
add
imul
cmp
repnz
xor
adcb
sub
stc
loop
cli
adc
add
cli
aaa
xor
and
cmp
daa
cmp
mov
or
cmp
sub
aaa
push
push
add
mov
push
xchg
movsb
cmp
or
add
movsb
pop
jne
cmp
shr
fs
imul
ret
or
sbb
xor
jne
ret
xor
or
push
fdivrs
inc
ret
mov
rcrb
and
dec
std
je
inc
scas
cltd
mov
sub
enter
mov
jns
dec
cmp
les
inc
inc
mov
decl
xor
mov
inc
mov
add
incb
inc
sbb
je
or
es
cmpsl
jge
inc
jp
xchg
push
lock
xor
sub
hlt
jg
jne
sti
cmpsb
sar
cmp
ja
jmp
dec
loopne
and
or
dec
in
add
dec
xor
or
jbe
mov
and
les
lcall
and
jmp
test
je
inc
dec
xor
pusha
pushf
popl
loope
je
fs
or
int
movb
jle
jge
mov
icebp
add
sbb
adc
lret
orb
in
sub
lock
test
mov
fistl
pop
adc
inc
pop
ret
push
sbb
add
lahf
sbb
dec
push
test
sub
mov
or
dec
decl
je
push
shl
adc
arpl
adc
push
xchg
xor
xchg
and
lea
out
pop
jbe
pop
inc
rorb
aaa
sub
lds
in
in
add
sbb
loop
jbe
sub
orl
pop
fcoms
jae
call
test
pop
je
je
repz
or
test
cmp
mov
sbb
lret
bnd
push
sub
or
cmp
add
sbb
daa
add
mov
adc
adc
or
int
js
jne
call
pop
je
cmp
mov
addr16
in
lret
inc
out
mov
ds
sbb
pushl
ret
mov
out
or
jg
or
sbb
push
lods
dec
je
pop
or
or
fdivl
push
dec
cmp
sub
insb
popf
xchg
fs
mov
pop
xchg
rcl
dec
sbb
shlb
cmp
jge
lret
inc
insb
pop
add
add
push
add
add
clc
sub
push
inc
cli
sbb
add
shlb
add
add
ret
mov
dec
ror
push
lock
mov
cmp
loop
add
int
adc
xlat
scas
add
inc
ret
testb
je
or
bound
and
sub
or
inc
cmp
jne
es
aas
jnp
push
mov
cmp
lret
ss
add
inc
pop
lods
pop
and
das
sub
mov
ljmp
xor
fdivs
xor
mov
or
xchg
xlat
adc
cmpb
subl
int
loope
pop
add
push
call
orb
cmpb
jne
pop
js
loopne
jmp
xor
cmp
adc
test
addr16
xor
or
push
cmp
imul
xor
add
jmp
lea
cmp
ja
rolb
ja
loopne
and
pop
or
test
or
adc
inc
popf
xor
add
cmpb
sub
and
ret
add
mov
emms
and
jbe
jl
loopne
dec
shlb
mov
rol
xor
xor
jbe
cmp
pop
add
in
xchg
out
or
and
add
mov
mov
xlat
inc
cs
cli
adc
adc
mov
adcb
cmpsb
inc
rolb
pop
push
enter
pop
jne
add
scas
loope
dec
test
jmp
and
outsb
and
and
and
and
sub
and
scas
fstps
and
dec
and
and
add
sub
add
imul
push
movb
push
rorb
ja
or
inc
jnp
dec
shlb
lret
push
push
push
dec
or
aam
cmpsb
add
push
adc
imul
jecxz
add
mov
incl
loope
lock
je
jmp
sarl
or
inc
jge
fidivrs
or
fsubrl
imul
push
adc
adc
jmp
cmc
xor
ret
stc
cmpsb
jns
enter
loop
add
cmpb
hlt
and
cmp
jbe
jp
sbb
sbb
shll
fwait
push
push
fnsave
push
notb
inc
lds
scas
dec
mov
test
inc
mov
loopne
inc
js
inc
or
add
fstpt
add
fildl
cmp
adc
pop
fiadds
push
rclb
push
imul
dec
cs
xchg
xchg
rolb
mov
rclb
add
cmp
add
idivb
xchg
dec
adc
inc
xlat
negb
popa
movsl
jb
jbe
cmp
cs
add
mov
lcall
or
bound
lcall
rcl
cmp
jne
xor
add
loope
mov
or
test
cmp
adc
adc
push
addr16
cmp
jnp
rcrl
add
es
inc
jbe
scas
push
fisubl
loopne
or
mov
add
add
or
or
pop
sbb
or
or
add
into
mov
pushf
push
out
add
stc
push
or
stos
dec
sahf
dec
lods
xchg
cld
fs
dec
cmpl
aaa
jmp
and
cmp
mov
mov
jmp
cwtl
xor
bound
cmp
sahf
int
mov
mov
jmp
pop
call
lahf
ja
mov
ljmp
adc
add
dec
in
add
and
je
loopne
xchg
iret
sub
repnz
rsqrtps
sbb
sub
mov
inc
ss
mov
aas
push
out
cmpb
jae
adc
push
popf
jle
nop
push
add
fnstsw
sub
hlt
adc
cld
fwait
jns
aas
sbb
inc
mov
je
inc
ds
jne
enter
cmp
je
inc
shr
fisubs
add
add
jl
jne
mov
sti
and
aas
jecxz
cmp
mov
adc
mov
jp
and
cs
ljmp
loope
mov
fdivs
lods
or
das
sbb
push
mov
push
push
push
cmp
mov
xor
add
ret
xchg
fsincos
pop
inc
mov
cmp
jne
lods
inc
scas
cltd
or
push
push
sub
ja
in
pop
add
inc
lods
notb
sub
sbb
bound
cmc
mov
dec
das
cld
cmp
sbb
or
dec
jmp
inc
int3
les
les
lock
add
cmp
jne
ds
or
pop
xchg
or
add
pop
gs
add
adc
cmp
repnz
incb
cld
pop
inc
cmpsl
jne
jmp
popa
in
xor
push
scas
sub
add
call
cmp
xor
or
ss
aas
adc
aam
sbb
cld
mov
iret
std
sbb
adc
inc
loope
xchg
xor
jle
shll
test
mov
mov
pop
jge
in
mov
or
cmp
jbe
lret
adc
das
lcall
scas
adc
mov
jno
jge
cmp
xor
cltd
sbb
lcall
xor
add
lea
inc
and
bound
ficomps
jge
sti
inc
call
mov
or
xchg
sbb
jge
out
shlb
pop
xchg
pop
mov
xchg
and
les
sub
adc
mov
hlt
cmpsl
lods
mov
out
xchg
mov
pop
mov
and
add
addr16
add
test
je
addl
repz
outsb
aas
push
sub
jns
push
sub
shlb
pop
movsb
mov
mov
pop
cmp
xor
orl
jno
xor
cmpsl
mov
inc
add
sbb
shr
and
inc
push
add
cmp
in
inc
mov
fmuls
inc
imul
sbb
jg
push
shr
dec
adc
in
adc
hlt
outsb
bound
shlb
ja
dec
call
pop
sub
or
aas
lock
cmpsb
inc
dec
std
imul
roll
sbb
mov
scas
xor
dec
cmp
add
jnp
dec
xchg
add
sub
lea
mov
xor
sbbb
sbb
inc
cmp
stos
add
in
inc
jmp
mov
mov
cltd
es
mov
lret
mov
shll
jp
in
push
rcr
sbb
add
xor
aaa
and
pop
inc
rclb
xor
xchg
jmp
mov
sbb
cmp
and
push
sbb
xor
pop
in
lds
call
mov
pop
dec
sub
pop
mov
xor
pusha
sbb
pop
jne
inc
add
dec
orl
in
inc
shlb
sti
loopne
add
pusha
dec
mov
or
dec
mov
mov
mov
inc
outsl
outsb
aaa
xchg
xor
or
ja
int
sti
add
sarb
xor
incl
and
ret
int3
mov
aad
in
lock
in
push
mov
jbe
add
push
ljmp
xor
je
inc
or
jl
xchg
inc
setge
shl
stc
add
sub
jge
movsb
es
jnp
ret
daa
mov
add
push
je
push
aas
test
and
sbb
je
adc
add
out
mov
pop
mov
mov
jb
dec
in
popa
loop
incb
cmp
lret
aad
lea
sbb
sti
notb
xor
xor
and
or
add
jge
sbb
push
shrl
mov
push
shlb
add
mov
add
add
push
add
scas
cmc
lods
sub
lock
cmpxchg
pop
lods
lahf
add
stc
dec
fs
ret
ror
adcb
mov
dec
loopne
test
jns
ja
mov
or
je
cs
pop
adc
xchg
mov
mull
push
and
mov
xorb
movl
mov
les
enter
pop
cmp
xchg
sub
add
push
add
ljmp
data16
pushf
sbb
cmp
or
adc
iret
sub
clc
ret
push
push
insl
clc
add
pop
push
cmp
pushf
ret
lcall
sbb
test
adcb
inc
dec
outsb
mov
xchg
sub
mov
les
inc
xor
imul
rorb
mov
sub
nop
rorb
jge
mov
stos
dec
and
in
scas
xor
or
lods
add
aas
dec
or
push
jb
cmp
adc
outsl
movl
dec
or
neg
mov
push
dec
dec
and
pop
fdivl
or
push
icebp
jae
xchg
sti
pop
pop
shll
push
push
cmp
jp
inc
int3
xlat
faddl
aas
push
rcrl
mov
addl
push
sub
mov
adc
mov
dec
jl
negb
cmp
inc
xchg
incl
add
mov
jbe
and
insb
lock
rorl
out
fnstenv
sub
js
pusha
jae
pop
jne
mov
pop
add
mov
nop
or
jne
mov
sahf
xchg
and
lods
add
daa
out
mov
cmp
jb
push
mov
mov
cs
mov
lea
cmpb
pushf
rcl
sub
push
push
mov
loope
jecxz
xchg
nop
sub
cmp
pusha
inc
loopne
in
dec
cmp
test
mov
iret
and
push
outsb
add
bswap
or
and
icebp
insb
lea
fadds
xchg
out
adc
lock
lods
dec
sbb
push
push
inc
mov
out
mov
inc
and
daa
lock
cltd
jmp
push
mov
inc
adc
cmp
cmp
jo
mov
sahf
push
je
ja
dec
sar
mov
push
es
cmp
ret
andb
xchg
sbb
sbb
sub
cmpsl
comiss
nop
int3
lret
sbb
imul
mov
mov
inc
out
sahf
dec
popa
inc
pusha
rcll
inc
inc
inc
mov
push
popf
push
mov
jle
or
add
xor
push
or
loope,pn
mov
pop
mov
jne
and
cmp
lock
cmp
hlt
in
int
add
int
mov
cmp
push
inc
das
jl
rcrl
pop
cmpl
sbb
mov
inc
pop
dec
sbb
xor
add
inc
cmpb
fldt
aam
data16
mov
jl
push
dec
pop
imul
call
repz
push
pusha
xchg
test
xchg
sbb
call
call
cmpsl
insl
dec
or
xchg
push
xchg
jno
add
cmp
jne
loopne
frstor
xor
mov
gs
sbb
adc
scas
sti
dec
or
push
test
jbe
xor
jle
push
xor
pop
sub
mov
sbb
sub
sub
mov
in
add
xchg
xchg
in
and
lcall
lock
cmp
sbb
nop
push
out
sar
lea
push
cmpsb
and
fdivs
dec
rclb
xor
push
jns
cmpsl
sti
mov
jno
movsl
sub
into
and
or
push
mov
add
sub
mov
xchg
es
cmp
negl
or
cli
sub
pop
in
call
add
imul
sub
and
push
enter
push
std
ss
xchg
scas
dec
js
jp
push
jne
pop
aas
adc
pop
pop
or
movsb
mov
ljmp
pop
cmp
jle
hlt
shrl
add
sti
arpl
out
push
sbb
lds
sbb
adcb
data16
pop
xchg
lds
int3
int3
leave
arpl
xlat
add
ds
sub
pop
rol
mov
jns
pop
sub
rclb
xor
daa
testb
in
add
or
or
imul
sub
or
add
inc
mov
mov
sbb
sub
aaa
sub
and
shrl
fwait
inc
leave
je
mov
cmp
inc
mov
xchg
xchg
add
mov
es
pop
add
orb
or
aaa
lea
mov
add
cld
dec
push
mov
jmp
and
sub
icebp
add
push
dec
add
in
lret
inc
adc
add
mov
sbb
js
cmp
or
repz
jg
inc
inc
xor
mov
sub
cmc
and
not
jmp
xor
push
or
mov
jne
mov
inc
lea
add
pop
mov
setne
adc
pop
adc
inc
leave
fsub
cmp
out
dec
xor
xor
jae
mov
in
and
adc
outsb
cmp
jne
cmc
leave
sub
repnz
dec
mov
sbbb
jl
cmp
jg
cmp
js
jg
mov
pushf
jl
mov
adc
out
sbb
and
inc
pop
mov
cwtl
fbld
aaa
jbe
sbb
lods
sub
or
sbb
sub
das
mov
add
jg
test
lock
and
or
add
es
or
cltd
test
test
and
in
add
add
mov
mov
cmp
ja
jge
out
add
cmovp
sahf
out
sahf
popa
js
cmpsb
mov
jns
mov
stos
dec
aad
js
xchg
pop
cli
in
dec
xchg
cmp
add
pushw
hlt
and
fcomp
xor
xor
ret
sbb
mov
or
dec
cmp
inc
jo
inc
sahf
lods
xchg
push
dec
adc
xor
mov
pop
mov
aas
jo
inc
xor
pushf
jecxz
test
mov
rcrb
mov
cmp
sub
pop
test
cmp
dec
and
dec
pusha
sub
add
sbb
sbb
jmp
pop
cs
je
and
test
pop
pop
jnp
push
add
push
fs
sub
push
mov
lock
and
andb
ljmp
daa
pop
add
or
inc
popa
sbb
loop
and
bound
xor
je
xor
pop
xlat
aaa
xor
cmp
inc
jo
push
pop
xor
push
sub
and
jl
mov
push
jp
and
jle
loop
adc
or
or
or
es
and
icebp
jo
xor
sbbb
push
call
hlt
push
sub
sbb
push
xchg
cltd
xor
jmp
and
popa
lea
push
ficompl
sbb
xchg
ds
and
and
jge
or
mov
xor
jns
add
xor
loopne
arpl
dec
cmpsl
sbb
ss
clc
ljmp
jle
cmpsb
jne
push
adc
rolb
aaa
push
push
daa
cmp
cwtl
pmaxsw
jp
or
mov
aad
pop
inc
push
jbe
and
inc
js
pop
jae,pt
push
dec
pop
mov
push
das
loop
lea
pushf
push
push
lret
sub
and
and
mov
cld
inc
jp
dec
push
or
inc
fs
add
or
add
xchg
loopne
bound
xor
js
jne
into
jg
loopne
in
xor
push
pusha
sbb
xchg
or
ret
or
lret
pushf
nop
jae
xchg
and
xor
inc
or
xlat
jle
xor
jl
es
sub
sbb
xor
mov
xchg
adc
mov
outsb
pop
mov
hlt
lds
cmp
inc
mov
jo
jmp
mov
xor
push
xor
jbe
dec
lods
or
popa
mov
pop
jnp
les
icebp
push
movl
popa
mov
arpl
sub
adc
jp
xor
inc
or
inc
xchg
sub
cmc
mov
or
add
sub
loop
sub
cli
rorl
pop
loope
test
mov
and
push
inc
push
rorl
popa
and
inc
sbb
lcall
icebp
sub
add
addb
ficoml
add
jo
mov
mov
sbb
fistl
enter
popf
test
pop
lock
test
mov
xor
outsl
inc
push
in
js
arpl
bound
pop
js
mov
je
ja
nop
bound
lahf
pop
push
sbb
subb
adc
lds
inc
inc
test
xor
and
cmp
lret
ret
jns
sub
adc
ljmp
mov
and
add
fisttps
les
dec
add
adc
fimull
or
push
in
xor
pop
xor
outsb
mov
std
setl
cmp
or
mov
stos
nop
jno
sbb
add
in
push
or
inc
lods
add
outsb
or
add
arpl
xor
or
adc
je
add
or
pop
xor
cli
inc
sub
pop
mov
inc
lods
mov
aad
call
lods
rolb
sub
sub
dec
or
je
and
adc
int
scas
ret
jne
enter
pop
sbb
cmp
ljmp
lock
ret
loope
xchg
dec
and
inc
sahf
ss
add
std
pusha
push
mov
push
mov
push
jb
clc
or
or
mov
inc
xor
lods
adcb
mov
adc
push
ss
sub
imul
dec
popl
and
push
dec
xchg
ret
mov
jle
les
adc
call
xor
fs
bound
sbb
in
or
inc
mov
dec
mov
xorl
add
je
push
cld
sub
scas
add
add
pop
or
in
sbb
push
inc
and
add
and
fs
lret
and
xor
std
and
xor
mov
shrb
lret
add
mov
mov
mov
imul
sub
push
pop
mov
or
aad
mov
pop
push
in
add
lret
add
add
push
push
mov
mov
rcrl
insb
sub
nop
jbe
sbb
and
cmp
push
movsb
add
ljmp
add
add
or
sbb
adc
xor
mov
subl
pop
and
into
fbstp
mov
fadd
and
push
and
jmp
sub
fimuls
push
pop
inc
and
cmc
pop
mov
icebp
out
jae
divl
sub
ljmp
pop
jl
xor
xchg
mov
dec
fmul
adc
xchg
leave
push
dec
mov
sbb
nopl
mov
dec
and
sub
xor
jle
mov
lock
inc
cmp
jb
and
cmp
or
xchg
mov
dec
aas
insl
add
dec
add
insb
repnz
jbe
jns
add
adc
mov
mov
xor
pop
add
dec
add
sbb
and
lds
je
mov
lock
call
nop
daa
or
addr16
ja
sub
ficomps
call
and
push
mov
xchg
es
push
rorb
sbb
adc
xor
scas
movsb
or
xor
lock
adc
push
pop
push
ds
mov
setne
pop
pop
mov
pop
es
mov
or
inc
and
cmp
pushf
push
in
push
push
pop
pusha
jo
xor
add
sbb
add
test
mov
xchg
lret
call
dec
fadds
cltd
loopne
cmpsl
adc
cmp
ds
jnp
jo
jno
mov
mov
pop
mov
push
pop
cmpl
adc
sbb
ja
rorl
cmp
mov
adc
bound
add
add
add
outsl
adc
mov
popa
or
mov
mov
pushf
data16
ret
pusha
push
cmp
add
outsl
fsubrl
mov
shlb
fadds
sbb
int3
pop
mov
or
or
das
mov
push
lret
cmp
push
dec
dec
jno
loop
add
lahf
in
inc
inc
cmp
jb
orb
push
pop
push
sbb
lret
and
push
add
adc
ret
xor
sbb
pop
data16
pop
jb
mov
dec
jb
push
lcall
sub
out
daa
lea
mov
pop
jb
pop
dec
xor
ret
mov
xchg
lret
sub
add
insb
xlat
and
shlb
jne
mov
enter
xor
sbb
or
xor
push
movsb
and
push
loopne
dec
add
ucomiss
adc
dec
jo
in
jb
pop
push
pop
fadds
sub
roll
inc
ficoms
mov
les
ljmp
repnz
xchg
adc
jle
add
mov
mov
mov
pop
inc
inc
pushf
ret
shlb
imul
push
inc
sbb
push
sub
xor
sbbb
jo
inc
and
imul
sub
and
sbb
decb
dec
sub
sub
pop
rcrl
adc
fistl
roll
xor
xchg
adc
or
sub
divl
sub
repz
or
pushf
ja
es
mov
les
xlat
xor
rol
mov
xor
mov
nop
mov
inc
pop
dec
adc
add
sbb
mov
dec
inc
cmp
and
and
sub
sbb
add
sbb
and
xor
imulb
adc
jns
addl
popf
inc
sbb
push
and
orb
add
rcrl
in
or
sbb
xchg
cli
aam
fwait
and
adc
mov
push
or
xor
inc
or
push
mov
ret
xor
adc
sub
addl
and
sbb
or
cmp
inc
adc
lock
jp
xor
les
jo
push
addl
icebp
scas
lds
nop
loopne
xchg
pop
dec
cmp
jb
rorl
std
xor
push
and
add
mov
dec
jl
add
adc
mov
push
repz
inc
mov
insb
sbb
jg
jle
push
dec
jne
mov
inc
lea
aad
sbb
or
jne
fldz
mov
xor
shr
in
add
adc
iret
pop
lock
int3
scas
insl
aam
xchg
pop
pop
fcompl
mov
test
or
or
and
mov
sub
pop
dec
fmul
call
push
out
lcall
xor
sub
inc
jp
cmp
scas
daa
push
jne
cmp
das
pop
xorb
je
nop
inc
shrl
pop
jbe
add
and
push
xlat
xchg
ret
cmp
adc
hlt
push
and
mov
dec
lsl
jmp
or
jecxz
jne
jb
mov
jae
popa
test
inc
cmp
je
adc
mov
sbb
and
and
cmpsl
or
sbb
cmp
mov
push
or
mov
decl
aaa
mov
movsl
or
arpl
cmp
xchg
inc
rolb
and
mov
neg
or
negl
rclb
xor
fisttpll
mov
pop
test
cmp
lahf
jb
sub
sbb
adc
fiaddl
shrl
cmpsl
pop
inc
sub
pop
push
dec
cmpl
sbb
inc
aam
dec
test
dec
jne
mov
push
xchg
movsb
dec
test
decb
int
mov
or
push
and
xor
xorl
pop
out
dec
and
daa
sbb
pusha
and
cmpsb
xchg
daa
push
adc
jecxz
clc
jno
lds
repz
add
pop
fcmovnb
dec
add
sbb
fstpt
mov
inc
xor
icebp
iret
call
push
repnz
movsl
mov
sbb
icebp
cmp
mov
jl
mov
inc
mov
into
mov
mov
mov
adc
stc
dec
push
xor
imul
push
mov
insb
add
mov
inc
cmp
inc
bound
pop
sbb
mov
dec
add
jle
rclb
push
fucom
add
inc
rclb
fstps
mov
cmp
pop
dec
outsb
andl
jne
and
sub
inc
cmp
pop
int
leave
je
fidivl
pusha
movsl
jp
jp
daa
xchg
and
dec
sub
sbb
sub
das
aam
pushf
fsubrs
es
cld
cmp
xor
jb
add
adc
or
sub
add
jnp
push
xor
add
repnz
adc
or
inc
sbb
and
mov
subb
mov
xchg
fmuls
or
push
jne
sbb
add
or
xor
pop
adc
inc
mov
out
xor
pop
xlat
add
inc
mov
adc
inc
or
xor
cmp
sbb
ret
aam
gs
lahf
cmp
xchg
xchg
or
fcompl
outsl
insl
rcll
addr16
cmpsb
and
cltd
inc
jmp
or
or
push
sub
push
xor
insl
cld
or
xor
or
adc
adc
lar
movsl
push
add
add
sub
mov
sarb
add
int3
pop
sub
push
jne
pop
les
enter
jmp
xor
jge
pop
and
in
imul
jl
or
jg
push
dec
popa
sbbb
pop
xchg
popa
and
arpl
or
ret
xor
sbb
inc
pop
mov
cwtl
pop
and
call
xor
test
je
rorb
sbb
aad
jb
jecxz
dec
fisttpl
add
push
add
xchg
mov
adc
add
xchg
jb
push
ss
lea
cmp
ret
sti
xchg
push
fwait
test
push
add
aam
popl
add
mov
lock
pop
es
xorb
sbb
insb
dec
add
loop
cmpb
sbb
lea
das
ret
push
lea
push
or
push
and
jnp
xchg
js
shrb
push
stc
into
push
xchg
test
jmp
xlat
outsl
rcrb
pop
movb
add
add
jecxz
pop
sbb
adc
outsl
insb
add
cld
pop
pop
push
cmp
sub
cmp
insb
pop
and
sub
add
mov
push
add
inc
xchg
adc
jl
push
adcb
orb
cmc
or
mov
cmp
mov
add
sahf
xor
jle
pusha
cmp
les
out
or
pop
mov
jbe
mov
nop
mov
sub
push
scas
xchg
das
adc
or
or
add
dec
push
popf
sbb
popa
xsha256
test
icebp
pop
cs
jo
ficompl
push
jmp
mov
test
adc
mov
xor
pop
stc
lods
cmp
push
call
test
call
shrl
mov
inc
inc
sbb
pop
sub
xor
mov
adc
xor
xchg
mov
or
pushf
daa
fsubrl
popf
mov
mov
add
aam
push
lea
adc
pusha
jl
rorl
in
or
ret
pop
cmpsl
dec
xchg
loopne
nop
es
bound
inc
adc
push
xor
adc
add
sub
int
fs
pushf
dec
out
inc
fidivs
mov
push
cli
push
push
push
imul
pop
adcl
dec
xor
imul
leave
sarb
add
xor
inc
mov
jbe
lea
int
xchg
push
jno
adcb
pop
sbb
repz
or
enter
or
and
xchg
adc
jge
dec
mov
push
pop
orl
mov
sub
mov
adc
pop
imul
mov
mov
cld
and
push
stc
pop
ja
and
scas
xor
lds
add
cs
pop
loop
cmp
push
cltd
jno
ret
add
repnz
push
push
inc
daa
cmp
fmuls
sub
inc
dec
mov
cltd
xor
cmp
dec
stos
sbbb
dec
out
es
mov
mov
jb
or
xchg
mov
ret
pop
fisubs
es
inc
aaa
jmp
popa
jb
xchg
and
aas
data16
push
add
fisttps
cli
cmp
jl
fadd
imul
add
test
xor
in
sbb
jae
jns
xor
je
popa
push
mov
out
ja
and
push
loopne
inc
loop
jo
subb
pop
xchg
jle
mov
stc
jl
aaa
mov
jns
lret
clc
rolb
pop
repz
arpl
inc
es
push
sub
dec
or
push
movsl
dec
mov
pop
cmp
pop
sub
jl
arpl
js
or
adc
dec
sbb
mov
pop
inc
mov
icebp
imul
add
mov
pop
pop
xchg
cli
cmp
mov
jae
xor
jae
scas
or
sbb
inc
imul
inc
mov
sar
and
lods
mov
out
movb
jl
pop
pop
in
imul
pop
lret
sbb
rclb
xchg
mov
fdivl
jle
movsl
mov
pop
cmp
mov
add
and
jo
mov
cmp
sub
adc
adc
shll
sub
or
icebp
addr16
pop
and
dec
sub
call
pop
pushf
stos
add
dec
imul
sbb
push
adc
insb
lods
add
or
sarb
adc
xor
out
add
mov
js
inc
dec
mov
jns
xchg
add
loopne
faddl
cmp
sbbl
shrl
mov
movb
ret
dec
fdivrl
mov
push
mov
sub
in
mov
shrb
ffree
xorb
into
add
mov
inc
decl
mov
and
cmpsl
jnp
arpl
fldcw
inc
inc
mov
push
pop
mov
jne
xor
adc
jb
imul
jns
mov
sbb
stc
adc
mov
mov
lret
add
loop
mov
bound
mov
rolb
lock
ret
outsb
test
shl
movsb
sbb
lcall
adc
cli
adc
cmp
negb
xor
sub
push
fs
sub
cmpsb
shlb
imul
adc
popa
and
inc
inc
xor
out
mov
es
jae
or
lahf
cmpsl
inc
orl
add
test
mov
push
push
rolb
cmp
sarl
andb
or
rcll
ret
and
and
fadds
or
scas
sub
xchg
and
test
add
add
mov
ret
sub
or
repz
pop
mov
arpl
cwtl
adc
sbb
mov
or
aam
fcomps
push
push
fwait
sub
xor
int3
movsl
out
and
or
and
scas
sbb
mov
ljmp
push
push
cs
stos
push
out
scas
add
imul
push
cld
mov
xor
loop
mov
pusha
dec
jo
inc
loope
sbb
add
adc
push
xor
shrb
shl
sub
xor
push
pop
dec
mov
pop
aam
mov
add
push
repz
dec
pop
and
movsl
popa
in
xor
inc
sub
push
pop
cmc
pop
and
jne
or
aaa
sbb
sub
and
push
sbb
outsb
or
add
imul
es
adc
das
cmp
mov
test
les
jecxz
sub
adc
add
or
sub
jbe
jp
or
fstpt
mov
jb
cmovp
pusha
push
sub
adc
push
add
adc
adc
dec
mov
incb
pop
adc
in
xor
pop
sbb
inc
sub
adc
adc
mulb
push
dec
dec
xchg
cmp
imul
lods
cmp
jle
mov
leave
pop
cmp
daa
call
hlt
sub
push
sub
xchg
pop
or
cmp
jge
addr16
cmp
sub
pop
leave
sti
addl
mov
rclb
rorb
xchg
jbe
sbb
test
js
mov
push
cmp
in
pusha
notb
jl
push
ljmp
sbb
adc
adc
cmp
into
pop
mov
mov
sbb
push
insl
test
mov
cmpsl
push
pop
subl
or
pusha
test
add
adc
or
hlt
push
push
fwait
sbb
sti
and
je
test
sti
cltd
arpl
out
cmp
leave
sub
fistpll
je
mov
cs
icebp
push
aam
leave
xchg
loope
xor
cmp
test
sti
clc
pop
add
sbb
into
in
jle
add
jne
imul
xchg
and
andb
imul
scas
xchg
add
sub
add
sub
call
cmp
mov
sub
xor
scas
in
inc
loope
outsb
dec
push
adc
frstor
insl
lcall
int3
mov
addr16
push
fwait
xor
push
popa
ficoml
push
sbb
push
inc
dec
shrb
int3
push
or
pop
loopne
mov
sbb
sbb
jae
mov
das
pop
or
psubb
mov
jmp
mov
adc
ret
add
loopne
xor
ja
int
inc
or
mov
mov
sbb
daa
push
or
push
outsl
popa
and
xchg
test
sub
jno
pop
dec
call
sub
pop
jle
les
orb
bnd
sbb
lret
xor
insb
lea
sbb
mov
repnz
push
mov
shrl
iret
std
out
push
mov
adc
out
cmpsb
xchg
push
push
push
pop
add
call
clc
movsb
scas
add
testl
icebp
dec
dec
sub
nop
jl
pop
sub
inc
pop
jno
jnp
das
jne
push
clc
and
mov
cmpsl
sbb
inc
out
inc
inc
jb
mov
jbe
jl
bound
je
ret
sahf
pop
lcall
sbb
add
mov
sahf
xor
cmp
rol
push
pop
xor
insb
sub
push
loope
and
mov
inc
inc
push
pop
mov
dec
add
and
jl
mov
or
mov
jnp
ret
and
jbe
push
mov
xor
fwait
jl
or
push
cmp
outsl
icebp
sub
push
jae
or
push
push
mov
pop
lret
mov
in
add
jne
mov
daa
out
adc
mov
test
repz
pop
sbb
pop
mov
xorl
add
dec
or
mov
xor
push
pop
add
adc
or
nop
inc
xor
cmp
sbb
sbb
inc
cmp
and
repz
out
std
mov
inc
jmp
data16
push
jnp
daa
inc
mov
sub
xchg
and
cmp
in
lcall
imul
add
sub
and
je
insb
clc
sub
cmp
xor
jb
mov
icebp
add
aas
jne
xchg
andl
call
and
add
setl
and
das
and
lcall
mov
loope
mov
arpl
adc
dec
jne
mov
dec
fisubs
les
or
ss
push
pop
mov
pop
fiaddl
push
dec
repz
addr16
sub
movsl
cmp
dec
push
xchg
or
movsl
jp
out
sub
push
adc
dec
and
rcrb
les
not
xchg
push
fwait
adc
in
rcrb
test
loopne
jmp
push
push
add
sbb
adc
aad
fistps
push
add
dec
jmp
xchg
test
ret
push
faddp
pop
mov
sarl
inc
nop
push
inc
add
xchg
and
mov
mov
and
sbb
jne
das
adc
lea
inc
pop
sbb
add
jns
or
inc
inc
shlb
adc
push
adc
shl
outsb
nop
mov
push
jb
xchg
data16
adc
rcrl
xor
jae
pop
sbb
test
clc
mov
dec
jb
sbb
xor
push
sub
and
mov
push
outsb
push
add
push
jmp
test
add
adc
xor
int
sub
dec
sub
jo
jl
inc
lods
decb
jne
inc
xor
xchg
sahf
jl
mov
in
add
out
pop
jmp
es
xor
mov
cmp
xor
xor
ret
adc
cmpb
inc
addr16
inc
sub
jne
scas
pop
sahf
lret
or
dec
and
fistps
jmp
and
or
pop
add
daa
add
xor
mov
mov
sub
cmpb
mov
scas
xorb
popl
or
and
pop
inc
ret
or
ja
jne
fwait
pusha
cltd
popa
and
push
insb
arpl
les
iret
aad
pop
mov
inc
out
add
popa
ret
ds
test
mov
or
push
mov
fcmovnu
pop
inc
bound
orb
pop
xor
mov
adc
and
and
cwtl
inc
lahf
xor
data16
sbb
out
jmp
adc
sub
cmp
test
stos
test
into
jae
and
add
fbstp
dec
add
xchg
fdiv
and
mov
push
icebp
and
out
inc
lock
roll
dec
jns
mov
cmp
jb
dec
or
int3
cmp
fiaddl
addl
fwait
or
repz
je
mov
push
cmpsl
dec
or
pop
or
sbb
mov
or
in
dec
push
movb
add
and
scas
mov
mov
push
jp
jno
cmp
sbb
in
cmp
dec
or
sbb
pusha
sbb
pop
cld
inc
dec
jecxz
or
jmp
inc
or
mov
js
shlb
pop
or
add
mov
and
nop
loop
sbb
or
shl
or
lods
mov
popf
fisubrs
mov
inc
adc
ret
xchg
push
jne
pop
push
and
jg
cmp
pop
test
shrl
orb
scas
leave
xor
push
jl
push
mov
cmp
fdivrp
das
mov
adc
mov
xchg
jl
add
daa
add
or
add
pop
addr16
dec
jle
fldt
outsb
xorb
or
jo
xor
push
inc
sub
nop
cld
sbbl
sbb
aas
add
dec
dec
inc
xor
mov
and
lds
pop
idivb
add
and
push
mov
xor
adc
ret
pop
and
or
add
arpl
stos
dec
mov
sub
mov
fwait
add
adc
or
cmp
sub
dec
call
add
mov
jbe
movnti
xor
nop
lock
push
inc
or
pop
mov
push
movl
add
popa
sbb
mov
std
cmp
pusha
shrb
pop
outsl
pop
jl
inc
imull
andb
push
dec
inc
adcb
xchg
jb
xor
movsl
in
inc
push
add
jb
inc
pusha
add
xor
xchg
dec
shll
int3
or
push
adc
inc
xchg
mov
lea
cmp
je
jl
inc
pop
enter
or
and
or
fcomps
fs
jns
adc
filds
inc
add
mov
pop
mov
mov
out
sub
neg
push
outsb
mov
notl
lea
je
sbb
inc
adc
jnp
cltd
pop
popa
lods
or
repnz
xor
mov
pusha
movsb
pop
dec
dec
mov
xchg
and
lcall
push
mov
pop
test
mov
and
adc
or
mov
insb
mov
push
push
push
sub
bound
or
test
lcall
fcoml
push
sbb
lods
outsl
popf
es
int3
jo
inc
sub
sub
sti
test
sbb
and
lods
cmp
pop
fsubr
push
pusha
push
pop
adc
daa
insb
pop
or
outsb
mov
add
mov
sti
adc
je
push
fadd
xor
sbb
popf
pop
push
xor
xor
or
movsl
js
mov
aas
mov
cmp
subb
es
add
sldt
mov
je
add
sub
arpl
push
test
or
idivb
jnp
imul
sub
popa
push
sbb
sub
mulb
adc
dec
mov
fdiv
adc
push
rolb
or
lret
mov
loope
lods
and
mov
push
or
xor
loop
cld
cmp
out
sbb
cmp
ret
pop
xchg
bound
call
loopne
adc
pop
mov
fldl
das
mov
jo
into
rsqrtps
inc
outsb
jnp
sbb
and
sbb
add
pop
scas
movsl
cmp
pop
adc
sbb
mov
add
sarl
pop
pop
movl
cwtl
pop
sti
xchg
add
dec
out
push
sahf
xlat
out
add
cmp
push
xorb
popa
adc
or
add
je
push
imul
out
sbb
sbb
daa
je
mov
pop
jo
push
dec
cmp
push
cmp
into
sbb
sub
cmpsb
mov
jnp
jne
inc
or
xor
mov
and
ret
and
call
inc
jge
push
add
mov
push
or
push
lahf
dec
jmp
push
xchg
jle
and
fadds
je
lock
cmp
sbb
pushf
shrl
or
or
dec
xor
lcall
pop
pop
inc
mov
daa
jns
inc
insb
lret
rclb
push
add
mov
add
add
jno
or
sti
lahf
jb
mov
subb
adc
cmp
sbb
dec
inc
push
jno
mov
in
and
insl
movsb
cs
sub
mov
mov
mov
sub
sub
mov
or
ds
int
or
mov
cmpsb
sub
sub
dec
movb
xchg
nop
or
nop
pop
cli
sbb
shr
push
lahf
ss
or
pop
loopne
or
dec
test
fistl
fiaddl
jp
lea
mov
gs
ret
out
dec
adc
sub
test
in
inc
or
icebp
gs
dec
mov
lahf
xstore-rng
cmpsl
xchg
push
mov
sbbl
cmp
les
add
mov
jb
dec
add
cmp
ja
in
add
mov
cmp
into
add
cmpsb
flds
mov
adc
inc
call
idivb
adc
aas
cmp
cmp
add
call
adc
ret
inc
push
adc
add
adc
dec
inc
punpckhdq
fsubrl
test
enter
pop
and
xchg
inc
xor
ret
js
nop
testb
cmp
dec
push
push
jmp
jo
or
fcompp
aam
jmp
adc
mov
daa
inc
fmull
sub
add
adc
xchg
mov
mov
enter
push
mov
mov
orl
je
mov
inc
les
push
push
stos
mov
lea
sub
xor
mov
mov
int3
test
fiaddl
mov
sub
ret
pop
push
icebp
push
rcll
loopne
je
xlat
xor
or
push
test
mov
xchg
cmp
mov
mov
lea
loop
xchg
cmp
jle
in
dec
lcall
dec
push
sub
inc
rorl
push
shrb
je
sbb
fidivs
or
inc
testl
push
add
cmp
xlat
jmp
daa
sbb
or
push
and
rclb
shll
push
push
stos
xchg
dec
enter
jno,pn
or
mov
pop
mov
push
sbb
sbb
sub
push
adc
add
out
mov
paddw
rcll
or
push
xor
inc
dec
sarl
loope
jns
out
dec
inc
enter
repz
xlat
and
das
jmp
sti
mov
add
push
push
inc
sahf
out
aad
dec
ljmp
call
ret
in
push
dec
dec
xor
imul
mov
adc
test
push
or
xchg
test
push
or
jno
mov
or
or
sbb
mov
push
punpcklwd
xor
push
ret
or
stos
sbb
sbb
js
aad
clc
pop
mov
test
add
or
inc
daa
bound
xorl
xor
cmp
inc
or
adc
mov
jae
jne
addl
movsb
les
jno
dec
iret
aad
sbb
xor
mov
mov
sub
filds
cs
xor
push
jb
out
cmp
adc
inc
rcrb
leave
mov
jnp
dec
or
push
and
inc
add
js
cmp
pushf
add
xchg
adc
loope
jl
fucomip
sbb
addb
jb
test
stos
ljmp
mov
cmp
jne
cmpb
pop
cmpl
inc
xchg
mov
sub
aam
mov
jne
or
dec
xchg
dec
pop
nop
out
daa
fsubs
mov
or
es
cmp
dec
cmp
hlt
mov
insb
leave
sub
mov
fs
lea
adc
leave
add
push
or
adc
aam
sub
dec
xor
pop
clc
je
push
push
xchg
jo
test
imul
push
push
ds
pop
and
push
adc
xchg
adc
jge
pop
add
cmp
jno
mov
xchg
adc
xchg
jbe
adc
lea
inc
add
jmp
stos
jmp
xchg
inc
outsl
lock
rclb
inc
ja
add
orl
push
mov
ss
aas
addb
jbe
push
sbb
add
add
es
mov
mov
cmp
mov
sub
mov
mov
mov
mov
xchg
test
or
push
dec
xchg
or
cmp
out
xor
pop
test
movsl
rcrl
cld
mov
xor
push
nop
xchg
dec
imul
ret
fdivs
xchg
rorb
add
es
sbb
xchg
sbb
sarb
cmpsl
shll
push
cld
jle
sbb
push
jp
in
dec
shlb
stos
hlt
jbe
adc
xorb
insb
addb
or
add
loop
lods
xor
je
leave
sbb
das
inc
cmp
repz
pop
mov
cmp
push
push
call
int3
xor
pop
add
rolb
lods
mov
je
cmp
and
rcrb
adc
or
test
not
orb
and
cmp
aaa
sahf
mov
pusha
stos
mov
lcall
adc
jle
dec
sub
aaa
mov
sbb
sub
or
sbb
rdtsc
cmpsl
fst
arpl
int3
nop
sbbb
mov
push
adc
or
test
lret
into
jnp
dec
sbb
sbb
orb
xchg
cmpsb
call
and
xlat
push
loope
shl
mov
xchg
inc
or
enter
and
sbb
push
sbb
sbb
loopne
lcall
inc
addl
adc
cmp
sub
jl
jns
jno
cmp
jl
mov
ljmp
and
add
cs
out
and
xor
mov
or
out
pop
cmp
add
or
lea
lea
inc
adc
movsl
add
jno
fwait
mov
mov
push
inc
or
jae
lods
push
enter
add
pop
add
fistpll
sbb
mov
sbb
or
mulb
mov
mov
push
push
les
add
xchg
push
rorb
addb
pop
imul
adc
pop
push
pop
push
add
xorl
mov
adc
mov
adc
lock
inc
out
mov
sub
push
sbb
rorl
ja
adc
jmp
aaa
dec
sub
inc
sbb
int
imul
aad
and
push
pop
push
jo
sbb
ret
mov
sti
cmp
dec
cmp
sarb
insl
cli
fstps
push
in
stos
ffree
mov
inc
fimuls
lea
push
inc
adcb
dec
cltd
inc
mov
jno
adc
and
push
fwait
popf
xchg
xchg
add
cmp
pushf
lret
rclb
jl
mov
pop
iret
push
stos
add
and
dec
mov
dec
clc
mov
sbb
mov
xorb
div
push
dec
outsb
dec
and
mov
into
cmp
or
les
rorl
sub
sbbl
push
lods
xor
xlat
inc
push
out
lret
repz
dec
in
adc
sbb
pop
ds
inc
in
jo
inc
add
pop
xchg
loopne
jle
les
dec
je
pushf
xor
stc
xchg
jae
test
cmp
enter
fldenv
sbb
dec
jae
push
inc
push
rcr
and
je
xchg
xchg
or
pushf
movq
ret
or
mov
xorb
pop
fldl
int
test
test
push
sahf
push
push
or
adc
or
in
aas
pop
xchg
lock
mov
mov
addl
sub
jg
icebp
dec
sbb
mov
mov
or
fcoms
shll
sub
arpl
call
sbb
std
jg
nop
mov
jbe
fisubrl
lds
jle
push
test
enter
in
inc
das
push
lea
push
cmpsb
mov
jae
mov
insb
push
loop
outsb
movsb
mov
sbb
jle
xor
push
movsb
mov
jl
jge
ret
or
push
pusha
sbb
shll
dec
pop
cmp
rolb
sub
pop
jnp
jge
or
es
inc
pop
mov
sub
jge
mov
ret
inc
mov
inc
cmpl
inc
lock
or
andb
or
pop
sbb
cmp
fimull
xor
in
xorb
adc
push
outsb
lea
lahf
pop
jmp
inc
or
push
or
xor
add
add
cmp
xor
xor
mov
mov
lock
daa
adc
push
xor
rorl
cltd
cmp
jp
push
ljmp
std
jmp
sub
add
sbb
or
mov
mov
lcall
adc
push
cmp
mov
push
je
call
loopne,pn
cltd
dec
mov
and
push
xor
xchg
ds
aad
adc
mov
sub
orb
adc
inc
xchg
ss
jb
test
and
shr
enter
cld
jl
mov
xchg
inc
int3
mov
inc
xchg
push
sub
jg
pop
fwait
sbb
je
psubd
mov
or
and
cs
mov
dec
test
insb
sub
mov
mov
insb
mov
mov
movsl
sub
and
dec
cmp
push
xlat
push
test
test
outsb
sbb
int3
mov
in
lea
cmp
roll
push
ret
aas
inc
add
ret
and
add
pop
mov
or
inc
insl
mov
adc
jo
mov
adc
pop
push
mov
cs
imul
mov
repnz
mov
cli
fimull
mov
and
jno
dec
or
xor
insl
shr
pushf
sub
rolb
rolb
push
dec
jb
arpl
push
dec
sbb
loop
lret
and
je
aas
adc
lds
sbb
jno
and
sbb
ljmp
add
pop
pop
cmpb
pusha
inc
or
inc
or
and
enter
or
or
pop
or
and
pop
lds
xchg
outsb
loopne
adc
ret
add
popa
cmp
enter
adc
out
dec
jecxz
stc
dec
popa
add
add
jb
test
or
or
inc
jecxz
fistpl
push
inc
pop
xor
pop
and
inc
in
lods
push
or
movsb
or
sub
sbb
adc
push
outsb
lods
das
inc
mov
movsl
out
call
mov
push
sub
outsl
loop
sbb
push
mov
dec
js
or
cmp
add
aad
or
mov
popa
add
cmp
in
add
add
push
and
mov
or
outsb
adc
xchg
inc
pop
pop
add
aad
aad
and
add
inc
adc
js
mov
sbbb
mov
pop
out
push
rorl
subl
inc
js
imull
dec
sub
jno
sbb
aaa
jbe
lea
imul
pop
jle
sub
mov
and
faddp
or
push
dec
or
jne
mov
or
aaa
jb
mov
test
or
mov
jmp
jmp
dec
push
pop
ret
loope
lock
xchg
mov
test
cmc
jns
sahf
ss
in
in
mov
or
sub
pop
adc
or
int3
idivl
out
xchg
adc
push
inc
add
cmc
sub
inc
fs
fsubl
and
jae
add
push
and
imul
mov
dec
or
repz
or
add
push
clc
pushf
mov
popa
dec
sbb
fwait
imul
xchg
or
adc
xorl
push
adc
pop
repnz
adc
adc
cmc
pop
repnz
push
sbb
sbb
iret
xor
sbb
add
xchg
into
sub
inc
pop
add
cmp
adc
xchg
insb
adc
dec
sbb
xor
sub
and
inc
test
or
add
and
cmp
mov
repnz
fimull
xchg
inc
inc
push
lret
add
dec
add
mov
test
sbb
jb
sub
mov
cmp
cld
imul
or
test
inc
cld
dec
sti
add
je
add
fwait
mov
shll
cmc
xchg
addb
xchg
add
shlb
cmc
test
adc
shl
or
cmpb
jne
push
mov
cmpsb
pop
jnp
mov
push
add
or
or
lcall
mov
inc
sbb
in
push
cmovno
mov
jbe
js
push
or
or
cmp
in
mov
mov
add
ret
mov
fstl
xchg
jl
xchg
inc
or
adc
decl
ljmp
pop
inc
cmpsb
mov
sbb
add
dec
xchg
xor
sbb
mov
fadd
fstp
mov
gs
push
jle
lret
jbe
jmp
loopne
popf
idivl
pop
mov
dec
pusha
loopne
inc
add
push
aam
and
push
jne
xchg
ret
fcmovb
pop
push
push
or
adc
fistl
les
dec
lock
add
jge
jecxz
pop
xor
cmp
lea
and
xor
fsub
mov
sti
pop
jle
cmp
inc
insl
jae
jl
jle
mov
mov
out
sbb
or
pop
and
cmp
inc
loop
cmp
cwtl
mov
cmp
jbe
fldl
push
imul
inc
push
sub
rcll
xor
leave
and
shrb
or
pop
inc
cmp
adc
pop
movsb
inc
add
sbb
lods
push
lcall
lret
add
mul
cmp
ret
roll
sarl
enter
je
add
les
jb
test
push
add
xchg
xchg
stos
or
addb
mov
ljmp
sbb
xor
test
loope
lock
icebp
in
or
dec
repz
or
jle
fsubr
inc
jl
and
push
jb
inc
dec
faddl
dec
pop
stc
sub
mov
cmp
imul
mov
insb
lret
out
cmovle
or
ucomiss
add
mov
mov
cmp
pop
cmp
pop
lcall
adc
pushf
xchg
push
sbb
inc
cmp
pop
adc
fcoms
pop
cld
ljmp
cmp
testb
fwait
adc
fucomip
push
stc
inc
cmp
dec
jmp
test
adc
mov
sbb
xchg
add
fiaddl
rolb
push
lahf
clc
add
jnp
inc
mov
negl
fdivs
movl
cmp
js
repnz
pushf
scas
inc
xchg
fbstp
cmpb
test
pop
jns
aaa
mov
inc
ret
je
mov
shl
jae
je
or
or
mov
scas
mov
push
inc
in
fwait
popa
addb
dec
jl
lea
rorl
and
inc
xchg
push
movsb
loop
dec
test
mov
rclb
xor
jg
cmpb
dec
dec
cmp
jb
jg
mov
and
cmp
jne
mov
push
decl
imul
or
ja
int3
add
imul
ror
jg
xchg
cmp
je
lahf
adc
xchg
mov
call
into
fildl
mov
or
add
push
cmp
mov
add
in
mov
cmpl
int
das
cltd
add
mov
and
push
cmc
add
cli
sub
jns
mov
xchg
shlb
sub
sub
out
or
int
push
lea
mov
fwait
test
mov
cmp
inc
push
sub
inc
pop
pop
and
bound
fnstenv
mov
mov
ds
mul
cmp
les
aas
aas
add
or
push
insb
mov
je
push
push
mov
adcb
sbb
test
rorl
inc
adc
stos
lea
push
adc
push
sub
and
shrl
and
and
push
movsl
lods
xchg
bound
lods
cmp
xchg
sub
mov
popa
jb
ret
inc
pop
mov
sbb
add
out
jo
xorb
mov
push
pop
movsb
pop
movsl
test
xchg
pop
mov
mov
bound
jmp
stc
dec
add
sarl
add
or
xor
mov
push
adc
sub
inc
loopne
jo
mov
rorl
mov
add
inc
pop
ret
add
mov
or
inc
adc
pop
sbb
movsb
add
imul
jmp
jns
mov
cmp
or
test
je
inc
mov
add
xor
dec
push
xlat
test
jmp
jo
pop
sbb
ljmp
mov
divl
cmp
mov
sbb
pop
pop
jp
out
sub
inc
adc
push
jo
sub
sbb
or
inc
add
inc
sub
test
loopne
cli
cmp
mov
inc
pop
icebp
sub
mov
add
outsb
push
leave
mov
aas
adc
pushf
cmp
loopne
mov
mov
adc
mov
jns
jle
sbb
popf
or
dec
inc
sbb
dec
into
aaa
repnz
divl
test
xor
cs
pop
pop
sbb
sbb
sub
and
fdivr
ss
pop
sbb
or
cmp
adc
repnz
push
and
push
fnstsw
xor
mov
adc
movsb
and
push
or
sub
sub
sub
fadds
mov
inc
lock
and
inc
mov
fucom
cmpsl
and
lea
mov
lock
xchg
jl
pop
rcrb
mov
sbb
mov
rcl
and
sti
push
inc
cmp
pop
jle
outsb
pop
outsl
clc
shll
pop
xor
add
mov
mov
jl
mov
js
rclb
or
imul
ds
js
xor
sbb
in
nop
or
loope
aaa
loope
and
xor
jmp
ja
lea
loope
jl
dec
xor
cli
xor
or
cmp
add
cmp
lds
sbb
adc
sbb
ficoml
clc
push
hlt
cwtl
pushf
xor
mov
movsl
mov
jno
call
loopne
mov
repnz
mov
or
jle
adc
sub
inc
lahf
and
pop
adc
pop
sbb
sbb
dec
enter
mov
ss
cmpsl
push
rcl
xchg
jle
cmp
mov
push
lahf
cwtl
mov
inc
add
fabs
mov
xor
adc
aam
jo
push
inc
lock
rcl
mov
sbb
sarb
sbb
or
dec
push
and
or
shll
adc
push
adc
aaa
jg
aaa
pop
fisttpl
cmp
dec
add
and
test
adc
push
jmp
xchg
fcmove
je
pop
test
xchg
add
cmp
and
add
mov
cmp
aaa
cmp
add
jns
and
add
es
adc
cmp
popf
popa
dec
sti
dec
pop
xchg
lret
gs
xchg
xchg
push
popa
jnp
sbb
or
dec
xor
dec
inc
push
mov
cmpsb
mov
and
je
pop
dec
jbe
fcmovnbe
xor
cs
jae
or
xor
inc
sbb
ss
cmp
push
inc
addl
push
xorb
dec
popa
aas
sub
sub
addr16
or
aas
add
push
xor
push
sbb
xor
adc
cltd
pop
pushf
out
and
push
iret
out
movsb
and
pop
and
mov
daa
cmp
das
and
xor
sbb
add
and
xor
sub
and
mov
pushf
gs
je
test
enter
push
mov
ds
stc
push
dec
and
andb
inc
dec
lock
cltd
test
push
enter
add
aaa
dec
adc
inc
leave
inc
pop
in
ljmp
add
sub
scas
or
loop
test
sbb
mov
or
adc
shrb
sbb
xor
xchg
xor
loop
mov
xlat
aaa
repz
adc
sub
add
jge
push
inc
pop
sbb
sub
dec
ljmp
pop
sub
jmp
cmp
je
les
cmpb
push
lea
pop
pusha
xor
fidivl
sub
idivb
lods
andl
mov
int
sbb
and
jge
shrb
rcrb
and
cwtl
stc
dec
inc
iret
inc
push
sub
fldt
pop
add
jne
jae
pop
sub
jbe
mov
jmp
push
ja
adc
cs
dec
push
add
inc
cmp
lcall
push
sub
repz
sar
jle
cmpl
mov
out
cmp
adc
push
jmp
add
or
insl
push
push
xor
push
sbb
push
push
pop
fldl
add
lock
cmp
lods
dec
fbld
pop
sub
add
in
sbb
in
je
cmp
inc
push
push
cli
xor
cmp
je
mov
jb
inc
addl
and
enter
xor
ja
int3
push
dec
sarl
and
aam
in
pop
sbb
leave
jne
inc
mov
cmp
add
xchg
shll
inc
cmpsb
aas
sbb
xor
or
cwtl
ficoms
pop
data16
mov
xor
xchg
xor
dec
cltd
inc
movb
mov
iret
gs
lret
shl
rcrl
pop
xor
in
mov
ret
pop
inc
pop
pop
inc
jg
test
das
add
dec
clc
subb
inc
mov
jle
pop
movsl
sub
mov
ljmp
shrb
cmpsb
mov
sub
orl
movsb
jmp
je
push
rorb
in
xor
inc
sbb
jle
inc
ret
mov
dec
ss
out
sbb
xor
sbb
add
mov
dec
add
sbb
xor
push
rcr
lret
inc
cmp
mov
popl
xchg
adc
sbb
and
xor
push
sarl
mov
jmp
ds
pop
scas
pop
addr16
nop
cwtl
xchg
popf
or
xchg
xor
mov
int
pop
shl
sub
js
sarl
icebp
dec
mov
sahf
xchg
or
xor
inc
outsb
and
pop
jmp
loop
scas
lea
jbe
xlat
and
push
sub
or
or
dec
pop
nop
and
inc
dec
mov
mov
or
and
jns
int
push
fs
jns
fdivr
in
lods
add
push
jno
or
aas
cmp
daa
sahf
insb
in
sub
das
jne
or
das
inc
cmp
bound
sbb
or
or
push
aad
sub
enter
mov
or
jg
inc
ljmp
dec
clc
add
cmc
aad
imul
pop
daa
inc
inc
or
cmp
lret
mov
cltd
jecxz
mov
dec
inc
inc
cmp
push
jge
das
xchg
jmp
or
jl
popa
incb
clc
cs
mov
pop
pop
add
xchg
pop
fildl
dec
leave
xchg
int3
and
dec
xchg
pop
imul
sub
sub
jl
cmp
and
inc
xor
add
cmp
iret
loop
xor
dec
movsl
xchg
push
sub
out
sbb
rclb
push
fcoml
xor
shll
lret
cld
mov
lea
push
imul
sbb
or
notb
mov
pusha
nop
scas
sub
mov
add
mov
cmpsb
or
sub
pop
jmp
bnd
fimull
movsl
aad
xor
sub
fcomp
push
add
mov
push
std
jmp
pop
sub
call
stos
inc
out
jmp
aaa
aaa
jnp
enter
sub
mov
mov
or
jg
out
lcall
sbb
add
push
and
mov
shl
pop
jo
cmpb
movsl
adc
lcall
cmpsl
jnp
gs
and
add
sbbl
iret
jne
inc
add
sub
std
push
jo
push
stos
ret
jns
stos
sarl
ret
lret
jo
xor
repnz
popf
repnz
scas
adc
or
xor
loopne
adc
lea
dec
sub
pop
pop
cmp
fcmovne
mov
mov
or
out
imul
fimull
add
mov
sub
out
sbb
into
push
inc
push
xchg
adc
push
lret
push
add
lea
adc
test
daa
pop
pusha
or
cmp
rolb
pop
je
inc
outsl
sbb
ljmp
or
mov
xchg
sbb
cltd
mov
add
sub
mov
insb
push
inc
cld
in
addr16
mov
loopne
sub
jge
out
mov
mov
ja
sub
add
in
ja
jmp
insl
leave
sarb
sub
fsubrp
pop
nop
sbb
or
cmp
rclb
cmpsb
pusha
or
dec
mov
sbb
jae
mov
fnstcw
mov
loopne
ret
es
cmp
jle
inc
fiadds
xchg
leave
into
xorl
mov
jae
shrl
daa
or
jb
mov
mov
in
fnsave
test
hlt
repnz
stos
add
inc
xchg
dec
pushf
push
dec
cs
and
or
mov
dec
test
aam
jge
das
cmp
es
addl
add
or
inc
clc
test
fldl
push
add
shl
fdivrl
and
fisttpll
add
xchg
xor
push
xor
lcall
mov
cwtl
pusha
jmp
jge
fmul
andb
aaa
imul
fld
scas
mov
lea
movsbl
inc
or
adc
cmp
mov
insb
jns
sbb
testl
cmp
jns
sahf
loopne
cli
shll
and
jb
xchg
popa
mov
sar
adc
cs
add
inc
in
insb
cmp
aaa
sbb
loop
pop
mov
sub
sbb
les
les
mov
or
push
push
jg
shlb
pop
mov
inc
sub
dec
xor
cmp
xor
jl
mov
mov
int
es
imul
and
stos
sub
cmp
shrb
or
xor
fildl
popf
adc
lea
jne
add
fistpl
sbb
adc
test
cmp
sbb
xor
loop
pushf
jl
nop
clc
xor
mov
mov
ja
stos
rol
sbb
fists
shl
add
inc
lds
cmp
add
clc
mov
ljmp
orb
mov
scas
and
clc
add
into
dec
cmp
add
xchg
test
decl
loop
and
cmp
repz
jge
test
jle
mov
jg
je
inc
inc
xor
in
nop
pop
or
fldenv
popf
ss
dec
push
push
aas
in
push
xor
or
sub
in
sub
shrl
and
in
and
xor
and
inc
push
mov
ficomps
fcomps
in
mov
mov
xchg
cltd
jno
iret
arpl
dec
addr16
ret
xor
xchg
mov
sub
imul
mov
jns
push
inc
inc
rcrb
out
call
add
dec
mov
cmpsb
adc
xlat
nop
dec
push
xchg
mov
inc
scas
push
jb
mov
xchg
cmp
inc
lds
push
and
dec
dec
mov
icebp
cmp
jnp
lret
icebp
inc
mov
jns
jge
jmp
adc
in
xor
pop
loopne
jae
mov
jne
xchg
and
pop
lcall
fmull
add
cmpsl
insb
pop
fwait
lea
mov
adc
mov
pop
repz
scas
push
lock
mov
addb
sbb
or
and
ja
or
adc
test
cmp
jle
mov
out
xor
ds
lea
test
xor
push
enter
and
icebp
stos
sub
adc
aaa
iret
jl
xlat
jne
cmp
loope
popf
mov
inc
int
xlat
or
push
rcr
dec
sub
pop
or
test
andl
and
dec
lods
sti
or
push
sti
imul
rcll
xchg
or
sub
sub
in
cmovle
sbbl
or
mov
push
test
xor
test
cld
leave
sbb
je
and
jmp
out
sbb
enter
fbld
and
sbb
jp
outsl
push
or
or
sbb
push
in
or
int
rolb
sub
rolb
je
xor
adc
out
mov
inc
stc
xor
sbb
sub
adc
test
push
leave
test
push
or
dec
js
push
fistps
ja
je
sbb
and
pushf
shrl
test
leave
inc
jns
inc
or
cmp
daa
fstps
push
movsb
add
adc
dec
or
sbb
jg
lret
cld
pop
and
roll
xchg
pop
cmp
add
dec
scas
or
pusha
xchg
sbb
lahf
sbb
push
xor
inc
xor
or
movsb
pusha
add
inc
xchg
inc
insl
leave
xchg
add
jmp
pop
lock
sarb
adc
insb
mov
mov
loop
inc
mov
push
ror
xchg
add
js
push
xor
push
sub
shlb
xchg
sub
push
jae
sahf
push
fiaddl
push
movsb
mov
sub
in
mov
aas
mov
or
mov
mov
cmp
pop
in
das
cmp
clc
add
lock
dec
adc
xor
mov
add
sbb
gs
push
rcll
gs
add
or
cmp
leave
and
push
in
jb
shrl
push
adc
inc
adc
enter
pop
and
pop
rcl
es
cmp
dec
rep
add
push
repnz
sbb
add
nop
jnp
adc
cmp
in
pop
cmp
sahf
in
dec
jae
cwtl
and
or
fisubs
inc
mov
movsl
push
mov
out
xchg
add
jns
xor
and
sbb
je
jbe
or
inc
fisubl
sub
loopne
lahf
jns
pop
jge
pop
or
mov
icebp
test
adc
dec
sahf
jg
ss
adc
inc
sahf
std
ja
or
adc
dec
xor
and
mov
ljmp
push
scas
mov
fdivrs
or
movsl
rcll
add
and
in
push
mov
loope
in
xor
or
sbbl
dec
pop
enter
jns
push
sbb
xchg
arpl
ss
xchg
cmp
jmp
push
fstps
xchg
cmpl
fbld
lods
or
stos
and
leave
sbb
and
cmp
icebp
jl
jns
inc
lds
test
gs
jge
stos
cmp
dec
or
nop
xchg
xor
inc
add
pop
mov
and
mov
or
clc
pop
in
and
cmp
push
inc
adc
insb
pop
cltd
repnz
idivb
lds
vsqrtps
jbe
inc
add
cmpl
xchg
rorb
jge
dec
cmp
sarl
push
cmp
inc
iret
and
jl
sbb
scas
xchg
mov
shr
mov
aaa
add
ret
mov
mov
jne
inc
in
push
mov
stos
rcrb
shl
jg
lock
mov
lea
loopne
loop
sarb
les
in
cmp
jecxz
repnz
sbb
ret
or
pop
pop
imul
xor
xor
jo
rcr
jle
inc
or
adc
cmp
mov
xor
xchg
add
ja
lods
or
sbb
sti
je
add
shl
or
jo
sbb
mov
jb
iret
sbb
pop
or
mov
pop
jae
stc
xor
inc
jmp
scas
bnd
je
or
pop
movsb
dec
movsl
stos
dec
adc
cmp
adc
fistl
cmp
enter
enter
push
lods
leave
add
je
loope
icebp
mov
sbb
lods
inc
cmpsb
cmpsl
pushf
andb
sti
mov
mov
push
add
mov
lds
dec
cmp
or
mov
jecxz
or
xchg
daa
and
shufps
lret
ja
mov
popf
in
int
cld
incl
dec
movsl
pusha
sbb
add
fs
jno
filds
dec
pop
repnz
or
fs
imul
andb
cmp
adc
ss
inc
push
mov
addl
push
repnz
rolb
enter
cwtl
add
or
xor
addl
sub
jbe
add
cmc
add
cmp
adc
mov
dec
test
pop
xor
jge
xor
push
and
pop
pusha
xor
aam
add
lods
adc
jle
push
lds
aaa
xlat
cmpl
pop
or
inc
mov
jp
push
sarl
mov
push
mov
add
add
adc
add
add
push
cmpsb
mov
sbb
push
loopw
nop
xchg
add
sbb
cmpsl
inc
dec
adc
add
cmc
jle
or
loope
push
in
lret
add
pop
shrb
cmpb
push
adcb
lret
mov
or
add
into
in
pushf
pop
add
lahf
testb
inc
cs
sbbl
mov
mov
sbb
jb
add
lret
inc
xchg
outsb
jns
rolb
nop
fisttpl
jae
daa
sbb
cmp
mov
mov
sub
xor
lcall
pop
jb
repnz
shlb
fsubs
cmpsl
je
daa
adc
xor
push
mov
add
mov
fidivl
add
or
jl
repnz
cmp
test
add
in
xor
lcall
xorl
bound
and
inc
pop
jge
or
cld
adc
sub
jns
test
or
add
lea
dec
pusha
add
push
add
push
add
fxch
sbb
add
lea
nop
lret
ret
xor
arpl
call
ret
int3
pop
push
mov
dec
sbb
cmp
mov
test
pop
testb
jnp
or
aad
stos
mov
sub
add
outsb
leave
jne
pop
sub
jnp
mov
lea
mov
insb
mov
push
xchg
adc
int3
shlb
adc
inc
mov
jmp
out
subb
mov
dec
mov
pushf
mov
sub
addr16
xabort
frstor
jne
and
movsb
jmp
push
jne
jmp
lcall
inc
sbb
sbb
xor
jle
pop
aaa
hlt
or
repz
leave
add
cmp
jb
mov
jns
sbb
sbb
cmp
mov
shrb
sbb
shrb
dec
mov
push
push
mov
xchg
cmp
fadds
addr16
push
cmpsb
inc
fcoms
cmpsl
push
neg
cmp
lods
add
and
addl
clc
mov
or
mov
ficoms
pop
xchg
scas
push
shll
sbb
shlb
mov
rorl
or
rcll
push
lcall
add
push
mov
push
cmp
fmuls
push
sbb
ror
mov
int3
mov
push
add
push
xor
push
sbb
insb
mov
cmp
push
mov
lods
pop
inc
or
push
cwtl
add
and
adc
dec
cld
xchg
lea
mov
dec
mov
jmp
add
xchg
adc
rcrl
inc
xlat
test
xor
pusha
add
sbb
movb
push
sbb
les
xlat
adc
mov
sub
mov
and
push
add
push
dec
or
add
push
out
cmp
add
test
icebp
pop
cmp
xor
push
push
or
clc
push
testl
rorb
inc
insb
insl
rorl
fsts
push
inc
pusha
jnp
fsubs
xchg
out
push
subl
mov
lock
sub
push
dec
adc
add
cmp
inc
cs
mov
adc
jg
jge
fs
bound
add
add
add
ja
dec
es
mov
adc
out
dec
adc
sbb
dec
gs
fists
mov
cmp
sbb
orl
push
lods
lahf
xchg
pop
shrb
dec
cmp
push
add
or
and
mov
sub
addr16
inc
sahf
or
xchg
cmp
xchg
insb
mov
fldenv
dec
ret
and
dec
fdivs
lcall
jmp
adc
adc
push
es
pop
loop
xlat
dec
out
push
mov
fcompl
lcall
lret
rorl
push
pusha
xchg
pop
inc
mov
in
enter
adc
mov
andl
mov
sbb
in
nop
adc
mov
das
movsb
inc
sti
mov
int3
hlt
mov
add
pop
add
sahf
mov
test
je
push
je
out
repz
xor
and
jb
jle
jb
stc
or
mov
pop
icebp
hlt
dec
subl
mov
andl
lea
mov
jmp
xchg
into
mov
dec
test
cltd
xchg
les
rclb
jg
jo
push
cmp
decl
fisubrl
movsb
mov
call
test
ds
jns
add
aaa
stos
loop
cmp
push
test
or
insl
cli
cli
repz
pop
mov
mov
pop
lds
adc
repnz
loop
cmpsl
cmpsl
movsl
mov
mov
jl
or
stos
dec
dec
fwait
mov
pop
jno
xchg
cmpsl
cmpsl
and
jno
popa
add
fnstenv
and
nop
pop
subl
inc
rol
fwait
das
xchg
lret
add
loopne
mov
in
sbb
loope
push
push
lcall
mov
loopne
enter
xor
or
int
rorl
dec
aam
xchg
push
incl
nop
push
jmp
add
add
inc
pop
jns
loop
or
and
inc
in
hlt
xor
sarb
mov
mov
repnz
and
or
lahf
jle
xchg
jne
mov
loope
fistl
sub
ret
lahf
dec
jno
roll
loop
add
sub
inc
movsb
repnz
sbb
cli
jno
or
or
or
notb
sbb
pop
les
jae
andb
outsb
mulb
cs
sahf
cmpsb
adc
dec
dec
sbb
pop
fs
cmp
dec
xor
push
bound
lods
arpl
rcrl
loopne
lahf
xchg
adcb
adc
daa
inc
or
or
rorb
repnz
xchg
mov
jecxz
xchg
push
push
jl
inc
push
xor
pop
jle
cmc
jge
nop
sbbb
inc
or
mov
negl
adc
xchg
sub
dec
mov
dec
movsl
insb
test
imul
sub
sbb
xor
jns
mov
lret
mov
xchg
pushf
sub
sbb
je
repz
pop
push
mov
insl
test
sub
xor
cmp
push
test
repz
mov
test
fldl2t
push
pop
cmpsl
sub
jns
sbb
loope
repz
negb
sub
sti
adcb
stos
cld
jae
cmp
ret
pop
dec
sahf
pushf
lahf
and
dec
cmc
xor
mov
sbbb
lods
icebp
mov
fwait
mov
jmp
adc
sbb
inc
and
mov
pop
mov
hlt
jno
icebp
inc
aaa
scas
dec
movsl
or
lock
sbb
loopne
mov
repnz
loop
loop
shrl
aad
fisttpll
cmp
das
test
test
xorb
pop
and
test
push
add
adc
lcall
out
ja
aas
xor
jecxz
addl
add
fs
or
test
push
adc
or
push
cmc
es
inc
add
jmp
js
adc
xor
sbb
data16
enter
stc
rorl
out
jmp
adc
ja
and
push
dec
scas
fstpt
loopne
adc
push
rorl
adc
and
out
popa
dec
sbb
sub
pop
dec
dec
pushf
les
mov
xchg
mov
dec
popf
xchg
out
pop
pop
ja
inc
popw
test
pop
jb
push
mov
bound
inc
das
pop
xor
sub
pop
jnp
in
test
test
std
in
and
xchg
cmp
xchg
in
inc
in
xchg
jae
inc
jmp
xchg
in
jge
jnp
or
jl
lods
xor
in
cs
push
jge
xchg
dec
and
test
add
je
fs
bound
call
cmp
dec
insl
subb
nop
sub
dec
movsl
cltd
jge
daa
pop
adc
sbb
in
adc
in
dec
sbb
pop
mov
enter
cld
mov
in
add
push
in
add
and
aaa
leave
and
or
scas
push
stos
cmp
jmp
and
es
mov
sti
cmp
sbb
ret
jne
sbb
dec
xchg
scas
scas
mov
mov
jns
sbb
add
add
dec
loope
pop
sbb
lods
cwtl
jmp
jmp
fidivrs
imul
into
inc
dec
inc
test
xchg
sbbl
add
test
and
inc
push
jecxz
mov
or
jmp
mov
ljmp
xchg
out
sbb
mov
fistps
or
pop
shr
sbb
inc
cmpl
sti
dec
fcomi
adcl
addr16
jl
dec
mov
mov
jns
jnp
cmpsl
cmpsl
test
and
movsb
dec
mov
out
mov
outsl
test
stos
lods
lret
idivb
cmp
mov
int
roll
sahf
jbe
addr16
repnz
jns
rorl
cmp
push
or
dec
ds
pop
insl
jp
sahf
out
mov
bound
andb
mov
lods
mov
insb
ss
fistps
mov
sbb
push
sub
jge
xchg
inc
push
mov
lahf
fsubl
cmpsl
jge
rol
add
dec
fwait
jle
sbb
fstpl
jg
push
fmulp
inc
inc
std
out
sub
int
adc
sbb
xchg
jmp
incl
sbb
sbb
and
and
sub
cld
dec
sub
sub
cs
inc
xor
xor
xor
cmpsb
icebp
fistpll
cmp
cmp
add
ds
inc
inc
inc
movsl
lea
scas
ss
inc
nop
movsb
xchg
lods
popf
ss
fstps
mov
mov
mov
jl
dec
cmp
fldl
and
jae
xor
iret
mov
jae
jno
faddp
mov
imul
pop
lret
xchg
cmpsl
stc
cmp
push
int3
push
test
in
sahf
jbe
clc
leave
jg
lret
lahf
push
xlat
js
sahf
out
lret
push
dec
push
aas
lret
inc
in
xor
add
insb
sarl
int
sbb
push
sar
movsb
aam
insb
or
push
into
lcall
iret
pop
popf
rolb
jb
xor
out
rolb
fldcw
adc
movsl
mov
push
sub
push
insb
repz
out
decb
imul
repnz
dec
jnp
jg
out
mov
icebp
dec
repz
jge
repz
hlt
push
sbb
aaa
fidivs
jg
push
jae
mov
repz
xchg
mov
repz
fs
dec
repz
cmp
mov
shlb
sub
push
pop
or
and
and
addl
inc
insb
pop
jle
sbb
jle
mov
xchg
and
sub
sub
andl
daa
and
mov
sahf
adc
pop
fiaddl
inc
ja
or
pop
cli
xchg
pop
or
rcl
push
mov
push
push
jmp
add
mov
inc
lock
dec
cmp
sub
cs
push
add
out
cmp
testb
jo
lea
add
inc
daa
mov
inc
add
ret
mov
aad
push
push
xchg
mov
mov
mov
push
call
add
add
enter
adc
sbb
push
add
pop
pop
jb
cmpsb
add
ret
aam
clc
pusha
jne
jns
jecxz
inc
push
jle
enter
fs
cmp
jbe
imul
pop
loope
and
stc
add
sbb
jge
divl
jne
mov
and
movsl
or
ret
pop
jne
dec
inc
push
ljmp
pop
xchg
xchg
shl
push
or
dec
or
mov
shll
dec
aaa
mov
subb
cmp
aaa
aaa
aaa
cmp
je
sbb
jmp
cmpb
jne
xorl
jne
jmp
push
mov
inc
cmp
dec
clc
cmpb
repz
mov
adc
sbb
or
or
imul
and
int3
dec
mov
mov
jg
fwait
stc
cmp
outsb
int
stc
adc
xor
je
cmp
outsl
outsb
outsb
inc
je
add
je
testb
jne
cltd
lahf
incl
ret
sbb
js
or
adc
adcb
les
sbb
test
roll
sbb
xchg
xor
outsl
jecxz
or
adc
mov
rclb
add
push
jmp
cmc
js
and
sub
pop
pop
sbb
fimuls
add
mov
sbb
ficoml
shrb
bound
mov
push
pop
add
mov
pop
pop
jmp
push
pop
imul
das
cmpsb
sub
cmp
ja
cmp
or
les
sbb
fldcw
xchg
mov
inc
add
adc
and
aaa
cmp
sarl
xor
lahf
cmp
lea
mov
cltd
push
jmp
inc
or
cmp
fisubrl
test
xor
jb
xor
mov
orb
paddusw
jle
mov
mov
push
in
sub
lock
sub
xor
shlb
fdivl
xor
stos
dec
inc
ja
test
sub
rcrl
add
cmp
add
aas
test
ss
sub
les
push
inc
xchg
lret
pusha
and
fcompl
inc
cli
js
ja
out
mov
add
arpl
and
fisttpl
jle
shrl
int
cmp
cmp
push
pop
addl
fcmovbe
inc
fwait
lods
inc
std
push
adc
es
inc
or
mov
in
cwtl
negl
gs
adc
clc
movsb
jb
mov
mov
jns
adc
arpl
pop
sub
into
sub
sub
or
lret
add
lds
sbbb
call
xor
mov
mov
push
jmp
daa
or
loopne
jo
mov
imulb
insl
push
bound
daa
push
in
fs
jg
sub
mov
inc
jg
gs
jg
pop
ss
pop
in
sub
jne
repz
out
mov
pmulhw
mov
mov
pop
sub
jnp
mov
adc
cs
adc
and
xchg
js
jg
jg
je
adc
lahf
cmp
and
mov
nop
adc
pop
dec
inc
mov
jge
cmpsl
std
test
je
adc
jl
push
or
rorb
mov
das
and
push
sahf
das
test
sub
jl
dec
data16
or
sub
call
ljmp
push
sub
inc
pop
xor
pop
inc
inc
je
cs
insb
fiadds
add
call
test
lods
sbbb
ljmp
incb
sbb
decb
add
add
leave
int
flds
push
add
std
inc
lds
xor
movsb
jge
add
leave
in
cmpsb
pop
lds
add
and
fdivrs
call
push
inc
nop
jmp
pop
pop
in
in
arpl
push
lret
xchg
pop
das
pop
add
dec
in
incb
shll
aas
xchg
dec
fidivl
adc
lcall
in
push
pop
inc
ss
jmp
dec
cld
int
out
mov
push
xchg
xor
and
pop
dec
add
repnz
repnz
jmp
test
in
in
jmp
sub
fisttps
pop
fs
shrl
cltd
and
scas
pop
sub
dec
sub
sbb
fidivs
sbbb
cld
pop
xor
sbb
or
push
dec
clc
pop
nop
sub
repz
adc
gs
mov
repz
push
add
cmp
shrb
push
imulb
or
push
push
pop
pop
adc
mov
add
movl
jns
out
js
xor
dec
movsl
shr
mov
xchg
xor
out
pop
sti
or
dec
add
sub
lea
mov
repz
or
lea
or
or
pop
movsl
mov
inc
in
and
push
imul
and
dec
mov
push
xchg
adc
pop
lret
mov
scas
dec
xor
push
or
ja
test
mov
adc
lea
sar
mov
mov
add
fsubrl
loopne
mov
and
sub
push
je
enter
mov
adc
add
add
cld
sub
cmc
mov
sbb
in
call
shrb
push
adc
lods
add
inc
inc
or
pop
repz
repz
push
sbb
pop
jne
mov
jl
push
or
pop
adcb
pop
lcall
int
fstp
pop
adc
pop
mov
push
inc
mov
stc
push
and
dec
mov
into
mov
dec
rclb
add
idivb
jnp
xchg
rcrl
pop
jmp
rorl
mov
xor
push
adc
sbb
test
divps
add
and
add
in
in
sbb
jbe
mov
cltd
add
jb
mov
xor
inc
or
pushf
mov
cmpb
sbb
inc
pop
nop
xchg
and
push
push
aam
inc
add
arpl
rcll
push
andb
mov
repnz
fbld
das
mov
sbb
ja
rorl
hlt
mov
dec
jno
iret
repz
push
outsl
inc
pop
push
mov
insb
ds
push
xor
adc
dec
sub
or
ficomps
inc
out
or
and
or
mov
psllq
push
imull
imul
add
mov
scas
enter
decl
sub
fcom
mov
push
dec
loopne
add
push
push
mov
xor
dec
daa
or
scas
imul
pushf
or
or
sbb
jns
ss
add
mov
jle
jge
push
push
cwtl
add
icebp
xor
scas
mov
ret
xor
fsts
arpl
adc
subb
mov
cmc
das
mov
xchg
push
mov
xor
or
mov
popa
add
scas
sbb
scas
push
jp
jo
dec
dec
out
xchg
add
cmp
das
jle
sub
cmpl
cwtl
in
data16
in
jecxz
aam
xor
mov
mov
mov
and
aam
je
fists
add
inc
cmp
jne
adc
aad
loope
add
fsub
in
scas
sub
sub
push
add
push
ret
cmp
sbb
ds
popf
add
ja
fadds
sub
mov
enter
and
jo
xchg
insl
cwtl
add
rcll
push
std
ds
or
inc
andb
and
lods
mov
mov
adc
adc
push
pop
or
test
push
std
ja
and
sbb
push
push
sbb
or
cmp
lcall
dec
fstpt
cmp
gs
pop
sub
xchg
fdivl
fadds
sub
rolb
sub
dec
lret
movsl
adc
xor
gs
inc
out
mov
dec
aaa
je
repz
mov
jmp
pop
stos
dec
adc
into
dec
out
add
lahf
adc
inc
out
lcall
fld
add
mov
insl
and
sub
mov
inc
jle
inc
or
leave
xorb
rcrl
aaa
lea
mov
js
sbb
mov
mov
mov
lret
sar
xor
sub
cmp
mov
xchg
imul
sub
xchg
push
bound
out
sti
xor
sub
sub
mov
data16
push
mov
outsb
add
rcl
jns
call
ljmp
jle
push
and
lds
rcll
sbb
insb
mov
fstpt
jp
sahf
or
sub
cs
mov
add
cmp
xor
mov
xlat
jmp
daa
mov
pop
push
mov
addb
add
xchg
std
sub
add
dec
xor
or
sub
mov
xlat
inc
dec
or
cli
or
push
push
sbb
pop
cwtl
cmp
dec
mov
lods
xchg
mov
push
sbb
cmp
aam
roll
xchg
pop
pop
movb
lret
adc
cmp
es
push
test
jne
mov
mov
frstor
mov
stos
lds
xchg
cmpb
sahf
outsl
sbb
push
push
xchg
inc
pop
outsb
adc
mov
add
les
and
dec
fcmovnbe
andb
rcrb
test
sbb
addr16
das
mov
push
idivl
xor
mov
add
adc
js
lret
xchg
mov
sub
push
xor
push
mov
mov
or
sub
jne
xchg
out
or
pop
sbb
push
mov
cmpb
dec
cld
sbb
pop
rorb
aad
js
fs
add
sbb
test
or
sbb
data16
sub
mov
cmp
xor
xor
mov
or
pop
mov
cmp
test
sti
sbb
es
jbe
push
adc
pop
jg
inc
sub
jmp
sbb
ret
xor
sarb
lahf
sub
pop
mov
adc
sbb
and
inc
inc
adc
mov
or
dec
and
and
lods
jno
and
xor
cs
sub
adc
mov
adc
lea
clc
sbbb
xor
and
mov
jl
mov
pcmpeqb
loop
mov
dec
mov
mov
pop
jno
mov
pop
cmpb
cmp
shll
or
cs
gs
fisttpl
adc
mov
testb
inc
popa
jns
jne
sub
sbb
lcall
sub
pop
sub
es
xorb
pop
popf
rol
push
stos
xor
mov
jmp
or
frstor
add
sbb
xor
xor
add
push
mov
jl
push
clc
nop
jno
pop
jo
sahf
xor
adc
aas
add
xchg
mov
cmpb
int3
fs
je
xchg
mov
sub
pop
xor
lcall
or
mov
inc
hlt
xor
fcomps
cmp
divb
xchg
in
shrl
adc
rorl
out
imul
push
lcall
push
ret
ret
and
and
xchg
inc
test
jge
in
cmp
xor
or
lret
js
inc
push
dec
jo
icebp
lods
push
cmc
gs
sbb
dec
sub
add
cmp
mov
xor
fmull
call
test
cmp
adc
add
cs
daa
sub
ja
aad
mov
pop
pop
xor
out
and
cld
popf
cmp
cmpsb
arpl
clc
les
sbb
xor
notb
pop
add
pusha
xchg
fs
into
mov
cmp
or
and
or
inc
or
push
stos
sbb
daa
sbb
or
cmp
aam
mov
test
std
add
mov
jl
add
or
movsl
add
add
sbb
test
lock
pop
and
pop
inc
stos
sub
jge
inc
lea
cmp
out
cmp
aad
and
orl
dec
cmp
mov
daa
inc
rol
jg
jg
or
call
loope
add
fistpll
rclb
and
scas
test
inc
in
xchg
adc
adc
push
sub
add
insl
sub
xchg
mov
aas
in
das
mov
dec
pusha
aaa
movb
push
push
jne
jge
popa
in
adc
or
or
ss
cld
xchg
decl
call
mov
int
scas
jl
mov
insb
adc
rcll
mov
cmc
or
or
outsb
and
add
std
call
mov
imul
sub
sar
xchg
push
fsubrl
ret
mov
mov
js
testb
ds
cmpb
push
push
loop
clc
lea
or
test
push
jge
and
or
mov
add
or
in
mov
adc
add
pop
jne
jo
inc
sbb
dec
mov
inc
dec
add
cmp
addb
sub
fcmovne
mov
adc
mov
mov
lds
popa
lea
sahf
or
cmp
lea
pop
test
mov
lea
ja
jne
leave
pop
rolb
or
cmp
mov
mov
popa
mov
and
sbb
fwait
sti
call
jnp
inc
and
mov
add
rol
push
xlat
mov
popf
repz
jmp
adc
sub
jbe
test
adc
fsubl
imull
iret
adc
stos
inc
push
adc
add
or
add
or
cmp
je
cmp
fisttpl
sahf
fidivs
ljmp
add
or
adc
lea
mov
cmp
mov
je
push
push
mov
push
in
lods
aaa
lock
repnz
pop
test
in
or
push
mov
imul
pop
push
dec
pop
mov
iret
inc
popf
pop
dec
int
testl
std
jnp
cmp
sub
cmp
sub
pop
mov
cmp
or
add
inc
std
pop
ret
fwait
jns
in
xchg
or
sahf
jns
out
cmp
pop
imul
sbb
sbb
pop
or
fiaddl
or
test
mov
jns
add
add
les
sub
jo
rcrb
pusha
cmp
inc
sub
insb
add
or
hlt
dec
test
sub
add
inc
rorb
dec
notl
adc
and
mov
or
or
cmpl
inc
sahf
xchg
mov
or
xchg
and
add
dec
punpcklwd
inc
jmp
sbb
and
loopne
and
mov
cmp
pop
hlt
mov
jmp
push
inc
stos
add
dec
iret
xchg
add
and
sbb
inc
mov
ljmp
dec
lea
imul
sub
push
cmp
and
rolb
mov
jno
aad
adc
cmp
inc
cmp
jbe
mov
add
mov
add
push
leave
and
adc
or
addl
pop
stos
cmpl
ja
push
and
add
pop
or
mov
cmpsl
test
pop
and
jg
xor
mov
cmp
pop
mov
mov
lea
push
sbb
mov
sti
jnp
lock
add
add
mov
add
inc
call
xor
pop
ja
cmpl
push
mov
mov
or
cmpb
sub
xchg
mov
cmpsb
mov
inc
lods
mov
mov
push
cmp
pop
ja
push
and
add
push
push
mov
push
test
jnp
jae
adc
or
dec
test
sbb
jne
sbb
clc
add
jg
mov
sub
test
push
stos
int
loop
rclb
mov
jb
imul
jno
push
clc
mov
jmp
dec
or
jmp
rorl
in
andl
mov
adc
cmpl
sbb
pop
js
mov
js
inc
push
mov
adc
cmp
dec
adc
add
xor
xor
or
mov
inc
sarl
sub
aam
nop
inc
fidivl
jmp
jmp
loop
and
add
sbb
sbb
xor
jle
lret
hlt
enter
lcall
mov
or
push
jmp
or
push
cs
adc
rcll
jp
mov
xchg
sub
xchg
inc
xchg
inc
inc
jnp
add
adc
sub
dec
out
fimull
into
inc
cwtl
dec
dec
ret
mov
and
inc
push
rorb
push
inc
je
jb
cmp
and
ror
sarl
mov
loop
pop
sub
push
jmp
add
test
cmp
cmp
push
addl
jle
dec
dec
mov
or
add
movsl
stc
inc
push
push
jno
add
sbb
lods
push
mov
or
out
sub
xchg
popa
add
pop
bound
dec
mov
sbb
or
jmp
xchg
and
inc
inc
jecxz
push
outsl
inc
inc
add
fsubs
mov
and
push
mov
add
push
dec
shll
inc
adc
and
mov
mov
adc
and
mov
xchg
sbb
xor
push
mov
inc
cltd
popf
jge
js
inc
nop
or
push
inc
xor
pop
jle
lahf
push
and
push
push
push
insb
mov
stos
cmpsl
mov
and
push
lock
movsb
push
aaa
sub
ss
push
mov
ds
adc
xchg
cwtl
jmp
dec
adcl
mov
js
cmp
in
and
in
dec
pusha
aaa
sub
ret
sub
add
and
pop
pop
sbb
mov
pop
or
cwtl
gs
lret
xchg
mov
mov
xor
lret
fstps
adc
or
cmp
xor
cmp
push
jl
test
cmp
mov
ds
xor
adc
cmp
call
inc
enter
adc
xorl
es
fwait
les
lret
mov
jnp
hlt
rorb
inc
adcb
push
mov
outsl
roll
pop
inc
inc
add
push
jbe
and
sub
xor
or
mov
pop
dec
xor
aad
add
xor
mov
or
cmpsl
lock
sbb
orl
out
lods
inc
mov
jcxz
mov
pop
xor
cmpsl
inc
cmp
repz
sbb
clc
adc
les
sahf
fstpl
xlat
adcl
aad
loop
or
inc
or
fwait
xchg
xor
loope
add
and
mov
xor
cmp
arpl
ret
in
add
jmp
das
sub
mov
add
shll
xchg
test
push
jl
std
popa
ds
fbstp
inc
inc
inc
out
js
dec
jne
out
add
jno
cmp
inc
ds
cmp
sbb
inc
sti
cmp
je
flds
pop
jmp
and
inc
je
adc
dec
sbb
xchg
movsb
aaa
push
arpl
lret
daa
mov
inc
push
enter
xor
iret
mov
dec
hlt
pop
pop
arpl
inc
scas
and
push
dec
mov
aad
pop
shll
push
enter
inc
cmp
pop
fs
test
xchg
fcmovnbe
xchg
hlt
lea
cmp
mov
stc
sub
or
jge
jne
daa
ret
dec
ljmp
mov
cmp
xlat
sub
sbb
dec
or
movsb
sbb
jno
cwtl
add
xor
sbb
es
add
arpl
loopne
dec
add
icebp
cmp
sub
jmp
mov
daa
outsl
pop
jbe
sti
or
xchg
daa
loopne
pop
test
imul
mov
adc
mov
ss
xor
sbb
mov
dec
push
push
push
sti
push
dec
pop
or
in
push
lea
push
jo
sub
rolb
xorb
jg
push
jl
rolb
daa
es
js
sbb
mov
dec
push
movsb
or
sbb
sbb
push
test
and
outsl
mov
push
and
sub
ja
push
sbb
xorb
add
cmpsb
shlb
add
dec
cmp
pop
and
jl
or
popf
sub
mov
popf
add
orb
insl
or
inc
loopne
hlt
xorb
jns
js
push
decb
xor
adcb
test
jl
test
mov
add
test
aaa
insb
push
cltd
mov
sbb
testl
scas
ljmp
push
sbb
das
push
push
adc
cmpl
lods
fidivrs
jne
mov
mov
add
cmp
mov
adc
cmc
outsl
inc
or
cmpsl
pop
push
xchg
js
iret
push
mov
pop
pop
test
push
rolb
inc
scas
into
fildl
push
mov
stos
inc
loop
mov
mov
push
dec
pop
cmp
movsl
pop
inc
push
or
mov
push
and
in
push
or
sub
pop
xchg
xor
aam
push
push
shll
sbb
in
leave
add
insl
sub
mov
movsb
lods
pusha
je
add
mov
ret
cmp
push
sbb
add
ret
loop
mov
sbb
lea
mov
lea
cmpb
fadd
shlb
adc
mov
jno
fsubl
and
or
sbb
cmp
movsb
pop
jns
pop
mov
cmc
or
mov
or
fsts
inc
ds
shrl
cmp
xchg
push
jmp
aad
and
ret
push
test
sbb
je
mov
ret
roll
sbb
inc
jo
iret
icebp
push
push
sub
mov
xor
lea
mov
jmp
jo
inc
addb
or
js
loopne
mov
clc
adc
sbb
lea
lock
jmp
pop
mov
sbb
mov
rorb
mov
les
xchg
insl
mov
addl
jle
push
add
out
enter
sbb
fiadds
jmp
cmpb
mov
dec
lds
dec
and
push
inc
sub
into
lds
pop
sub
js
js
mov
fcmovne
pusha
push
cmovo
gs
pushf
xchg
and
xchg
sub
les
or
dec
push
sbb
sub
popf
xor
sub
mov
mov
ret
sbb
add
shr
inc
inc
add
dec
lods
test
fisubrl
xor
subb
adc
and
movsl
rcrl
xchg
jo
adc
pop
pop
push
and
dec
into
mov
push
jecxz
push
xchg
pushf
fldt
mov
fmuls
sahf
sub
sub
sbb
push
cmc
in
or
pop
adc
xchg
mov
shlb
pusha
mov
mov
mov
inc
jmp
cli
xchg
je
pop
out
lea
cs
call
xlat
shl
xchg
lds
imul
cmp
jl
xor
jle
sbb
inc
xor
xor
fldcw
iret
add
inc
push
or
mov
dec
cli
add
jmp
xchg
push
ficompl
jge
rorl
push
mov
notb
dec
jo
das
cmovae
clc
je
sub
dec
mov
dec
in
insl
jge
jge
fbstp
nop
jp
test
jge
push
cmpsl
adc
inc
sub
mov
fnstenv
lret
mov
cmpsl
push
mov
sbb
fldenv
push
cmpsl
mov
call
insl
insb
mov
mov
pop
sub
mov
mov
and
out
imul
or
jns
dec
and
cmp
cmp
push
les
cmp
sub
push
adc
test
xchg
pop
and
stc
sbb
sbbb
mov
push
test
test
pop
or
cmp
jne
sub
lcall
xor
les
mov
popa
sbb
adc
jnp
or
insl
push
test
adc
or
dec
lcall
insb
cmp
pop
mov
jmp
mov
xchg
sbb
orw
cmp
jne
testl
mov
clc
neg
pop
sbb
loopne
sub
leave
sbb
jnp
mov
adc
add
xchg
cs
push
cli
sub
dec
lret
adc
imul
xchg
ret
mov
call
es
push
fisubrl
xor
test
or
sub
sub
hlt
sbb
sbb
mov
cli
pop
mov
pop
sub
lds
and
pop
jl
sbbb
pop
inc
xchg
sub
fisubrs
add
fwait
ss
add
rorb
add
adc
xchg
cmp
inc
bound
xor
or
jae
sbb
jb
or
mov
rorl
pop
test
mov
and
inc
bound
xchg
dec
cmp
inc
xchg
sbb
subl
inc
dec
sbb
shl
xchg
sbb
je
add
movb
decl
test
push
nop
cmp
inc
out
fistps
jle
jne
cmp
pop
add
push
mov
pop
pop
mov
pop
lock
add
popf
or
and
or
add
fsubrp
mov
aas
or
xchg
mov
pop
pop
sbb
sub
or
jae
lahf
andl
or
mov
cltd
stos
dec
sahf
mov
cmpl
sbb
lods
jne
xchg
mov
mov
xchg
ja
movsb
xlat
fsub
inc
pop
cwtl
fwait
les
adc
js
sub
and
ds
shr
jg
xor
sub
xor
add
jle
jne
stc
push
jnp
mov
je
dec
test
add
sti
adc
mov
outsl
roll
scas
cmp
xor
lret
pop
inc
cmp
mov
push
pop
and
rolb
inc
in
push
xchg
add
or
leave
fxch
roll
call
or
push
test
inc
xchg
xor
xor
or
inc
mov
cmp
js
jbe
xchg
and
or
je
pop
sarb
or
sub
pop
inc
mov
add
xor
nop
in
scas
add
je,pn
mov
xor
daa
xchg
lods
adc
pop
mov
cmpsl
out
push
adc
adc
rcll
push
ss
js
dec
pop
jle
repz
adc
cltd
or
jge
loope
mov
and
dec
cltd
and
xor
cmpb
add
or
xchg
mov
and
fildl
xor
or
clc
and
lea
inc
mov
repnz
rorl
nop
mov
ficoml
ss
jno
jle
add
sbb
into
shll
xor
mov
or
out
lds
add
mov
or
lret
dec
sahf
fstpt
call
mov
fmull
lcall
pusha
sbb
or
mov
gs
mov
data16
jbe
movsl
add
in
jae
rcl
inc
jl
jne
sub
adc
dec
inc
cltd
mov
add
xor
adc
inc
jns
add
ret
loopne
add
sarl
in
adc
fistl
dec
dec
add
outsb
or
pusha
inc
negl
sub
gs
dec
sub
push
xor
arpl
cmc
cltd
push
xchg
hlt
movsb
mov
push
xor
or
or
push
adc
test
rorl
add
xor
int
dec
aaa
adc
jl
fucomip
arpl
je
push
aas
leave
push
or
inc
aam
cltd
fs
push
push
call
and
dec
adc
xchg
js
add
loopne
mov
add
imul
push
ds
les
pop
mov
inc
or
roll
pop
push
in
mov
add
pop
enter
cmpb
cmpsl
inc
scas
xor
ret
pushf
adc
popa
lret
lret
pop
pusha
pop
pop
xchg
lock
int
xchg
pop
xchg
outsb
or
sbb
loope
or
mov
dec
lds
loopne
inc
fs
insl
imul
or
and
xor
push
stc
adc
leave
and
and
push
inc
pop
xor
inc
push
imull
sub
xchg
les
sbb
push
cltd
loopne
add
call
sbb
imul
inc
testb
add
sbb
dec
js
pop
pop
xor
dec
shlb
mov
sub
xor
sbb
jno
mov
push
push
cmpsb
movsb
lret
lods
or
in
or
daa
mov
add
sbb
dec
notb
push
sti
mov
ficoml
or
xlat
fldenv
push
pop
adc
aas
adc
adc
add
sub
sahf
out
mov
or
mov
or
push
cmp
xor
sub
insl
push
inc
and
sbb
daa
mov
sti
jecxz
loopne
insl
js
or
test
dec
lret
fs
pop
adc
movsb
jb
in
sbb
call
dec
lret
mov
loope
sbb
leave
fs
pop
fstpl
mov
inc
stos
jl
rolb
das
dec
push
xor
cmp
lods
hlt
cmpsb
pop
ret
ss
inc
dec
and
xchg
subb
movsl
push
pop
scas
xor
es
xor
jns
and
xchg
pop
xchg
fstps
jecxz
mov
xor
cli
cmp
sbb
or
sahf
out
inc
pop
sbb
std
lods
out
jns
and
and
loope
push
divl
and
movsl
sub
stos
or
iret
sub
xchg
xor
lock
xor
xchg
insb
add
sub
push
jae
and
jo
dec
or
push
popf
inc
cmp
xor
push
and
mov
mov
loop
aaa
add
xchg
xorb
fildll
jle
cld
push
and
orb
or
xor
sub
or
or
sub
jecxz
bound
push
pushl
adc
push
sti
or
add
lcall
popa
jp
and
enter
sbb
mov
or
cmp
mov
jb
sub
add
enter
jg
mov
dec
popa
inc
dec
out
sbb
add
fadds
aam
shlb
adc
pop
imul
dec
push
pop
out
xchg
cld
xor
add
shlb
idivb
inc
push
dec
ret
dec
adc
adc
dec
mov
push
and
inc
lds
fadds
cltd
je
cwtl
ss
rolb
fildll
jae
push
and
testl
les
pusha
push
push
mov
sub
inc
sbb
pop
sbb
xchg
mov
xchg
adc
xor
mov
mov
push
xchg
mov
mov
adcb
imul
imul
mov
push
mov
mov
mov
sbb
cmp
scas
mov
jb
mov
push
jnp
andb
jle
in
mov
cmpsl
cld
mov
sub
lods
dec
pop
adc
xchg
je
sub
push
push
xor
adc
jb
jo
daa
jo
ljmp
sti
mov
movb
aaa
push
insb
and
cmp
add
sbb
daa
lret
hlt
sbb
cmp
in
imull
call
or
mov
dec
push
mov
sub
jnp
add
mov
ja
pop
ss
push
subl
or
test
pusha
insb
add
fimull
insl
xor
or
mov
js
mov
pop
aas
nop
add
and
call
sbb
pop
daa
ret
push
xchg
cmp
and
sbb
lods
mov
jns
cmp
in
push
push
cmpsl
add
jmp
xchg
or
mov
pop
dec
or
lar
nop
in
js
inc
push
je
imul
xorps
pop
les
sub
imul
mov
adc
aam
add
and
pop
inc
dec
pop
xchg
push
outsb
and
jno
ret
dec
sub
es
sub
mov
sbb
xchg
add
dec
loop
and
pop
jbe
dec
inc
movsl
push
int
or
add
adc
dec
and
add
or
xor
inc
xor
add
mov
sbb
roll
pushf
movsb
add
or
pop
sub
movsl
test
je
mov
sub
sbb
jns
lods
sbb
mov
or
lret
pop
stc
jmp
arpl
and
rcll
sub
pop
xchg
inc
or
xorb
sbb
push
add
push
cmp
addr16
add
sbb
and
adc
mov
xchg
mov
fsubrl
and
dec
jb
pop
mov
loopne
push
cmp
aas
enter
movsb
fsubr
cmp
pop
or
cltd
jnp
and
arpl
pop
imul
or
dec
adc
sbb
inc
or
mov
inc
or
les
push
mov
sub
add
test
int3
and
inc
mov
mov
add
rorb
popf
xchg
add
dec
and
cmp
mov
and
pop
shlb
adc
pop
mov
dec
stc
or
mov
add
push
jns
add
int3
push
cltd
xacquire
ret
add
mov
jae
xchg
jle
mov
loope
cmpl
add
jp
sbb
push
enter
or
xor
cltd
inc
sbb
lcall
rclb
mov
mov
mov
xor
cs
shl
mov
inc
imul
sbb
and
popf
clc
jmp
push
push
pop
pop
push
dec
pusha
psubusb
dec
inc
push
bound
and
mov
fdivrl
sbb
adc
push
xor
rclb
sub
xor
imul
sub
jg
push
iret
cs
div
jne
mov
ffreep
rolb
mov
orl
test
adcb
and
inc
jo
dec
lods
add
jns
mov
pop
pop
imul
nop
mov
pop
mov
or
pop
jmp
mov
or
sub
mov
xchg
ret
cmp
and
pop
dec
cmp
pop
sub
sbb
addl
pushf
xchg
or
cmp
or
or
sub
push
jne
icebp
sbb
push
sbb
imul
push
dec
lea
push
and
adc
xor
verw
arpl
xor
cmpsl
or
bound
mov
cmp
roll
mov
and
push
ja
sub
or
sarb
jle
sbb
adc
addr16
inc
call
jl
cmovae
dec
pop
pushf
cli
popa
and
in
inc
call
jl
jb
push
jp
imul
dec
call
rolb
roll
push
jmp
out
push
imul
aaa
mov
and
sbb
repz
xchg
mov
dec
pop
push
cmp
fwait
pop
or
or
dec
sub
dec
movsb
sbb
add
mov
push
scas
adc
xchg
mov
or
dec
push
add
add
and
mov
mov
incb
mov
push
push
push
daa
dec
or
mov
pop
cs
fdivl
add
jge
imul
andl
jge
jne
mov
sbb
or
jnp
test
jo
cwtl
adc
sbb
and
scas
xor
mov
leave
push
push
push
repz
dec
fisttpll
and
int
sbb
and
lcall
push
jmp
and
inc
sub
loopne
mov
or
or
xchg
mov
add
call
lods
test
pop
cs
dec
sub
mov
imul
sub
or
pushf
ja
and
es
subb
sub
xchg
pop
inc
xchg
icebp
stos
sub
add
and
or
in
mov
and
or
or
imul
inc
pop
cwtl
dec
and
cs
sub
add
bound
ja
and
mov
add
add
pop
enter
and
xor
lcall
or
dec
adc
repz
incb
add
add
cmpsb
jge
push
dec
cs
sbb
test
xlat
test
push
mov
add
cmpsl
xor
test
dec
in
mov
sbb
sbb
add
test
sti
insl
imul
push
add
pop
lock
cltd
dec
roll
test
or
inc
push
scas
lahf
test
and
and
xlat
push
mov
xor
test
pop
jg
adc
in
fiaddl
sub
lret
mov
jne
pop
pop
cmp
movsl
popf
sub
roll
sub
aad
cs
mov
subb
jl
int
lock
je
loopne
icebp
filds
and
and
insb
cmp
je
cmp
je
cmp
je
clc
out
xor
cmp
je
cmp
je
cmp
je
outsl
call
cltd
jo
cmp
je
cmp
je
cmp
insb
cmp
je
andl
cmp
je
cmp
je
cmp
je
cmp
adc
mov
inc
scas
or
add
jg
cmp
push
cmp
je
cmp
je
cmp
cmp
mov
jne
aas
adc
add
add
xor
xor
leave
mov
repnz
sbb
add
xlat
xor
roll
add
push
or
jo
or
push
adc
inc
test
fldl
jl
aam
fildl
je
jmp
ret
outsb
push
sub
xchg
dec
push
or
outsb
add
dec
mov
or
pop
mov
sub
push
jg
ret
and
pop
movb
mov
inc
orb
dec
mov
xor
mov
mov
ja
addr16
inc
jmp
inc
pop
and
cs
inc
mov
stc
inc
xor
pop
sub
ss
jns
jecxz
popf
pop
adc
cmp
adc
mov
fldl
sbb
orl
repz
pop
pop
insl
sub
mov
xchg
or
and
repz
add
and
daa
adc
mov
mov
cmp
jb
inc
xor
cltd
rclb
pop
ja
aaa
inc
push
jne
cmp
repnz
xor
hlt
add
incb
inc
cmpsl
cmp
outsl
sub
xchg
popf
pop
dec
sbb
ficompl
xchg
add
imul
xchg
add
jle
dec
cmp
push
cmc
or
pop
imul
sub
jns
jmp
pop
sub
add
cmpsb
jbe
mov
or
push
xchg
jg
inc
adc
cmp
jb
or
mov
push
es
push
decl
push
pop
jb
jno
in
adc
cltd
movsl
jae
push
pushf
mov
loope
mov
mov
imul
pop
and
xor
adc
and
dec
jmp
inc
andl
sbb
push
jae
add
in
int3
mov
lds
push
inc
push
xchg
and
mov
cmp
jno
cmp
adc
push
mov
pop
mov
xor
stc
mov
cmp
jge
pop
jle
iret
dec
lahf
fidivs
pop
ret
popa
jp
insb
pop
lock
xchg
aam
roll
lock
push
test
cmp
movsb
leave
adc
mov
and
test
test
test
pop
push
push
aam
addb
pop
adcl
cmp
add
movsb
xorl
mov
jl
add
cmp
push
push
aaa
xor
pop
scas
or
cmp
dec
xor
push
dec
je
cmp
mov
adc
int
sub
hlt
or
adc
jo
and
dec
push
mov
push
jno
cmp
fidivrs
push
inc
jno
lcall
xchg
fsubrl
dec
cmc
jecxz
fcmovnbe
pop
fdivs
or
insl
repz
and
cmpsb
in
add
sub
inc
push
nop
jbe
and
sub
pop
adc
outsb
iret
sub
fists
push
add
imul
insb
ljmp
inc
or
xor
js
xor
xchg
cmpsb
imul
xor
xchg
jmp
or
lcall
arpl
xor
add
xchg
roll
leave
push
dec
rolb
pop
clc
adc
sub
sbbb
sub
gs
aaa
addb
inc
ficoms
mov
imul
xchg
cld
lea
mov
loopne
pop
daa
inc
adc
out
popf
dec
insl
je
mov
hlt
push
xchg
pop
insl
je
pop
cmpb
push
shl
data16
sar
dec
cs
mov
inc
ja
js
jno
insl
jmp
push
scas
or
sbb
xor
bnd
push
sbb
nop
jecxz
or
adc
or
je
jb
pop
mov
ljmp
push
cmp
fdivl
arpl
mov
ljmp
inc
push
push
sbb
xchg
icebp
inc
lods
loop
add
les
sbb
pop
fnstenv
adc
jnp
add
inc
xor
aaa
xchg
adc
in
lcall
push
or
popf
push
dec
imul
jmp
cld
adc
push
adc
jne
cmp
or
sub
push
cs
and
arpl
xchg
pusha
xchg
adc
inc
mov
sub
jecxz
mov
xchg
arpl
stos
inc
push
jnp
rcr
mov
xlat
push
and
sbb
and
dec
pusha
add
lret
sbb
sbb
xchg
outsl
fisttpl
mov
les
dec
mov
fwait
inc
enter
cmpl
adc
daa
add
push
cmp
jo
pop
ss
mov
inc
adc
dec
adcl
ss
fwait
dec
sahf
bound
adc
jo
cmpsl
sbb
jnp
fnstsw
add
add
test
push
rorb
jl
sub
stc
push
arpl
mov
jle
dec
dec
test
rorb
imul
and
es
and
fs
add
xchg
push
push
fs
aam
icebp
xor
push
lahf
push
push
push
push
arpl
out
sub
mov
ror
mov
sub
stos
push
pop
inc
movsl
jl
or
xchg
xchg
or
or
pop
addr16
mov
imul
or
xchg
shlb
test
adc
ret
das
sbb
ja
daa
xchg
popa
adcb
push
cmp
mov
fcomp
pop
loop
sbb
sub
mov
ret
aad
test
jle
push
or
test
and
lock
fbld
and
xor
cmp
lea
cmp
sbb
or
sub
xchg
sbb
adc
xor
jmp
or
loope
mov
pop
push
mov
dec
xlat
dec
insl
lods
adc
das
dec
daa
popa
sub
push
daa
cmp
fsubrl
add
and
outsl
push
or
aas
cmp
mov
test
mov
ret
imul
inc
ljmp
push
lods
add
pop
pop
push
mov
lods
add
push
and
or
sbb
arpl
mov
mov
xchg
sub
dec
jl
sub
rclb
and
dec
ret
add
das
loopne
inc
xchg
xor
cmpsb
ss
sbb
loopne
lret
fisubl
jbe
outsb
js
sbb
loopne
enter
pushf
test
cmc
in
sbb
sbb
push
scas
idivl
jbe
lret
sbb
test
dec
mov
jb
cmpsb
mov
xchg
mov
mov
fimull
sub
add
sbb
push
cmp
jno
xor
std
movb
call
fwait
push
lock
mov
faddp
push
sub
jle
dec
adc
and
add
dec
pusha
jns
hlt
cld
mov
in
push
fmuls
push
push
rcpps
or
inc
cmp
or
jb
dec
dec
cmp
or
cmp
loope
call
ss
cmp
pusha
mov
push
sbb
js
push
inc
adc
push
mov
sbb
mov
push
mov
pop
cmp
push
mov
and
mov
or
ret
jl
and
or
mov
add
cli
add
call
or
shll
inc
incl
adc
fisubs
inc
je
dec
sbb
fstpt
lea
mov
test
pop
sahf
mov
das
test
fiadds
adc
xchg
stc
insb
xchg
test
sub
xchg
in
add
es
idivl
jnp
jo
notb
fadds
out
sub
imul
sub
xor
push
add
div
and
stc
ror
inc
inc
add
inc
jg
dec
fsubr
or
push
and
push
in
jb
incl
push
dec
iret
sti
or
xchg
xor
lock
orb
in
iret
mov
xchg
inc
xor
rorb
jp
jl
sbb
lods
xor
jmp
jno
movq
inc
push
fisubrs
inc
addl
add
push
adc
lea
call
pop
cmp
idivb
jb
xchg
or
lods
pop
push
lret
push
aaa
sbb
push
and
jle
jns
xor
pusha
cmp
pop
add
loop
clc
nop
push
pop
jmp
out
hlt
sub
out
xchg
in
testb
cld
shrl
push
cmp
out
inc
aaa
lret
sarb
add
subl
mov
cmp
js
mov
ljmp
xor
sti
and
xor
dec
sub
lret
popf
jae
or
pop
xor
cmp
and
in
inc
inc
inc
lcall
add
pop
jl
jge
test
addb
ds
sub
xor
fnstsw
adc
push
and
cmp
or
cld
test
add
std
popa
lar
xor
dec
rorb
push
js
add
enter
dec
adc
jmp
orb
jge
jge
mov
insl
mov
loopne
push
dec
sbb
mov
mov
push
adc
push
pusha
mov
and
push
ja
pop
les
adc
inc
jbe
popa
imul
js
popa
ret
mov
push
adc
pop
jbe
test
jne
cld
or
mov
loope
xor
sbb
nop
imull
lods
cmp
mov
ret
stc
or
sbb
pop
test
dec
ret
adc
cmp
inc
push
sahf
push
lea
loopne
sbb
pop
orl
faddl
jge
pop
or
aas
sbb
or
add
out
jnp
orb
adcl
or
sarb
popf
in
inc
arpl
bound
mov
or
push
rcll
sbb
fisttpll
cmp
shrb
pop
sti
push
js
inc
add
mov
xchg
fstps
je
cmp
dec
or
fidivs
mov
movsb
xor
sbb
test
pop
imul
cwtl
movsb
and
sub
scas
xor
ja
je
cmp
lret
xor
dec
xchg
push
popa
cmp
inc
add
sub
sarb
push
add
jne
inc
mov
dec
cmp
sti
push
jmp
mov
push
jge
xorl
pop
pop
pusha
or
ret
rclb
add
add
sbb
mov
adc
and
repz
push
addr16
add
iret
add
inc
add
adc
xor
dec
mov
insl
jge
inc
mov
push
and
cmc
push
dec
ret
dec
jle
in
inc
fdivrs
pushf
push
push
add
lods
test
adc
ret
jecxz
js
adc
outsl
xor
dec
ljmp
cli
jl
lea
test
xchg
add
and
adc
dec
push
jmp
or
and
jmp
pop
mov
and
or
sbbb
gs
and
out
enter
mov
ljmp
jle
fimuls
and
mov
mov
nop
rolb
xor
or
push
pop
add
xor
insb
loopne
fidivs
adc
xchg
sbb
push
cltd
js
out
push
dec
jno
pop
add
and
push
pushf
testl
fistpl
test
jns
aaa
add
push
xor
dec
add
jl
sbb
insl
repnz
dec
shrb
cmp
jae
sub
dec
nop
add
scas
dec
insb
mov
dec
sbb
movsl
xor
push
jle
std
je
push
rolb
dec
jmp
pop
call
add
loope
sbb
and
fcmovne
jns
push
xchg
jmp
push
inc
mov
lock
cli
or
mov
cmp
jne
cmpsb
test
aas
xchg
jl
push
add
jne
jae
addl
mov
or
jb
fimull
push
or
add
push
std
mov
insb
fdivs
cmc
push
fcmovnbe
cmp
fisttpl
add
scas
jge
jne
loop
mov
cmp
cmp
enter
sbb
push
add
addb
or
mov
dec
out
inc
cmp
movsb
pop
jb
mov
pushfw
pop
mov
dec
inc
or
mov
mov
pop
pop
cmpsl
test
adc
call
xchg
pop
fstl
push
fucomp
lods
in
or
daa
adc
dec
sti
cmp
xor
push
popf
test
push
sahf
stos
jb
xor
add
nop
fsts
repz
cmp
loopne
jns
jae
js
outsb
lock
aad
bnd
or
lock
mov
and
mov
cmp
xlat
mov
movsb
and
in
push
cmp
int3
or
or
push
add
and
stos
sub
adc
inc
pop
mov
add
cwtl
shlb
add
mov
cmp
jl
int
push
jno
popf
rolb
cmp
mov
cmp
add
add
inc
add
sbb
jb
add
mov
push
mov
movsl
out
ret
fs
mov
adc
les
cmp
xchg
das
mov
mov
jmp
dec
and
fiadds
add
in
mov
xor
push
je
adc
push
push
mov
xchg
dec
insb
pop
mov
jne
je
lock
andl
adc
adc
out
ss
add
aas
sarl
add
call
stos
mov
shrl
ficoml
mov
psubq
jb
hlt
or
bound
add
push
mov
sbb
xchg
addr16
lea
mov
xor
popa
inc
sub
ja
aad
dec
adc
stos
push
into
lock
fimuls
scas
pop
pop
inc
mov
pop
roll
adcl
ss
or
xorl
aas
or
cmp
and
test
cmpsl
adc
xchg
adc
loopne
jnp
out
cmp
sbb
mov
lds
xor
fmuls
dec
dec
or
and
sbb
lcall
add
cmp
jle
sbb
aad
push
xor
xchg
or
pop
cltd
inc
repz
add
je
pop
testl
ja
adc
adc
add
or
and
insl
add
mov
jnp
jne
mov
push
inc
add
fnstsw
aaa
jns
sbb
mov
mov
mov
fisubrs
lods
insb
mov
push
test
pusha
push
xchg
test
aad
xorb
xchg
jb
out
cmpsb
xchg
andb
arpl
popf
mov
pop
mov
and
inc
cli
pushf
test
leave
cli
mov
cwtl
invd
cmp
xchg
cmc
pop
cmp
sti
adc
push
push
mov
pop
adc
sbb
add
or
fstl
push
aam
push
mov
jne
xchg
mov
cmc
adc
adc
mov
pop
adc
jge
push
and
or
jae
movsl
daa
enter
add
pusha
push
sub
sub
sub
add
lea
jbe
out
imul
add
sub
fistpl
stc
add
push
push
xor
ret
push
dec
sub
fiadds
rcrb
xchg
je
loopne
mov
outsb
iret
cmp
outsb
and
mov
mov
ret
pop
xor
rcrl
mov
lret
mov
xchg
add
adc
push
jmp
mov
sbb
sbb
mov
lret
add
dec
mov
xchg
mov
jne
xchg
iret
jg
pop
bound
mov
mov
pusha
sub
adc
lea
subl
inc
or
fsubr
add
sub
iret
fs
je
shlb
adc
cmp
xchg
cmp
aaa
adc
and
movsb
sub
ds
mov
sbb
pusha
imul
mov
insl
sub
push
add
fwait
aad
or
dec
pop
out
push
adc
movsl
mov
out
add
push
xchg
or
jg
and
fnstenv
push
inc
push
push
push
dec
add
add
jbe
mov
or
dec
pop
jmp
pushf
fildl
dec
or
cmp
cld
and
ret
or
mov
inc
into
ficomps
and
inc
sbb
dec
call
jb
je
fimull
sub
add
mov
or
push
sub
sarb
cmp
xor
sub
add
call
sbb
shll
add
rolb
cmp
xchg
loopne
cmpsb
jle
lret
in
jo
mov
dec
call
sub
testl
stos
clc
fistl
and
jg
repz
jp
mov
push
add
add
add
add
add
add
add
add
pop
xor
jno
dec
sub
lods
in
push
push
adc
and
add
pop
pop
adc
mov
push
adc
add
decb
ljmp
push
adc
jbe
or
scas
jge
mov
dec
add
push
push
push
push
push
call
out
mov
add
jb
adc
ss
leave
push
push
push
xor
and
inc
or
xchg
out
sbb
push
push
xor
push
adc
and
lods
dec
fadds
pop
dec
dec
inc
daa
cwtl
jae
jge
jmp
adc
sarb
daa
sti
into
xlat
mov
fmull
jns
dec
sub
jns
or
sub
or
aad
in
insb
sbb
push
cli
pusha
xorb
adc
js
push
inc
xchg
sub
add
mov
ret
xchg
cmp
lret
fsub
xchg
neg
lea
cmp
ret
xor
lock
xor
sbb
ds
aad
shlb
mov
mov
mov
adc
inc
aad
jmp
cmp
in
lret
test
cmp
divl
and
pop
fwait
pop
cwtl
adc
dec
mov
and
mov
push
cmp
pop
sbb
inc
jb
subl
inc
lock
inc
das
inc
mov
jb
sub
or
movsb
mov
jbe
orb
lock
and
imul
dec
inc
cli
mov
pop
inc
push
mov
xchg
push
xchg
mov
and
imul
mov
push
push
adc
or
adc
xor
mov
je
xor
and
roll
push
sub
stos
or
push
or
js
inc
jnp
outsl
fistpll
roll
out
add
mov
jno
pop
mov
lret
mov
testl
je
cmp
je
mov
test
test
add
pop
push
jge
jle
or
and
lock
push
and
sahf
inc
rolb
imul
add
pop
cld
fcomps
jl
or
push
sbb
jns
rol
rclb
pop
xchg
xor
cmp
out
xchg
adc
sbb
jge
sub
ja
mov
jl
push
dec
jge
add
cmp
or
and
jnp
cmp
mov
jl
sub
movswl
sbb
inc
scas
sub
or
iret
icebp
push
ret
cmpl
fs
fdivs
adc
leave
repz
push
adc
and
add
jo
xchg
and
sub
rcpps
pop
loopne
adc
add
rorl
dec
mov
icebp
inc
jmp
or
fwait
test
outsl
add
add
sbb
subb
and
push
dec
add
push
mov
jle
push
or
mov
push
xchg
lds
pop
xchg
jbe
outsl
dec
or
cmp
pop
mov
xorb
add
mov
clc
clc
dec
sbb
add
or
flds
cmp
push
mov
ljmp
pushl
test
rorb
and
and
mov
imul
inc
add
or
xor
pushf
add
adc
imul
add
adc
nop
stos
and
jmp
and
pop
inc
mov
or
lret
icebp
mov
xor
inc
mov
push
test
fnstenv
or
test
test
push
push
sti
push
push
les
mov
cmp
pop
daa
gs
ret
nop
and
lcall
leave
or
sub
bound
js
addr16
sbb
or
dec
sub
dec
mov
incl
lds
mov
fdivl
and
adc
push
insb
clc
mov
arpl
add
and
xchg
insl
jne
cwtl
push
dec
and
jns
jns
insl
aaa
add
aaa
cmp
xor
das
sub
or
aaa
mov
rcrb
sbb
pop
xchg
icebp
mov
les
shll
xorb
pushl
adc
rclb
dec
cld
jg
or
add
mov
mov
pop
sub
add
dec
js
imul
mov
inc
or
les
mov
push
fisubl
cmp
mov
jns
ffreep
es
add
push
stos
and
or
pop
push
pop
add
jbe
or
jg
inc
sbb
out
int
and
jle
adc
xchg
push
rcr
jp
jo
std
add
cmp
push
add
shlb
xchg
cmpl
mov
or
add
or
es
mov
dec
mov
cmp
xchg
or
dec
lar
je
into
jne
mov
movsb
mov
stos
xor
mov
sbb
outsl
mov
add
lock
fwait
mov
add
and
cmpl
push
movsb
roll
push
inc
sbb
sbb
scas
imul
push
mov
or
push
cmpsl
mov
xor
adc
jge
dec
addl
and
adc
xor
in
push
sub
mov
add
or
mov
push
cltd
xor
test
add
xor
lahf
add
lods
sub
lcall
fwait
sbb
mov
mov
dec
pop
aaa
inc
sub
jle
testb
sub
mov
jle
and
negb
adc
push
cmp
inc
sub
enter
popa
int3
dec
xchg
or
ret
stos
inc
jl
cli
lods
mov
jnp
pop
adc
lds
add
outsl
int3
jns
adc
add
ficoms
in
ss
mov
bndldx
jnp
or
sbb
add
jg
dec
int
nop
and
incl
lods
sar
jb
in
adc
insl
orl
lret
mov
test
sub
mov
and
add
shlb
dec
pop
or
sub
insl
xlat
js
stos
pop
and
subl
ret
jge
add
xchg
scas
xor
or
inc
jl
mov
divl
lock
push
andl
sub
xchg
xchg
inc
rep
pop
movsb
xor
sbb
mov
sub
inc
notl
add
into
stc
mov
xor
or
add
jmp
and
or
ret
test
mov
xor
or
pop
test
sbb
xor
dec
jp
push
cmp
insb
mov
xchg
dec
sbb
mov
cli
jl
cmpl
push
rclb
clc
xorb
jbe
jae
sub
mov
add
sbb
mov
adc
movsb
sbb
sbb
cmp
scas
or
ss
xorb
sbb
fs
mov
sub
fnstsw
out
pop
add
popf
in
inc
adc
adc
addr16
jge
push
xlat
sub
rorb
push
and
xchg
data16
sub
test
nop
add
scas
sbb
scas
cmpsb
in
ljmp
scas
lods
sbb
pop
dec
movsl
inc
in
cmp
dec
jo
or
testb
out
in
mov
xor
push
cmp
out
sarb
and
std
add
idivl
adc
lock
jno
cmp
dec
and
and
and
push
leave
push
je
filds
push
mov
inc
jp
mov
mov
bound
mov
out
lods
push
popa
sub
in
shll
fidivs
jg
pop
inc
pusha
pop
lds
sbbb
cltd
out
xor
rolb
ret
and
inc
outsb
and
mov
mov
scas
sbb
dec
pop
test
jmp
xchg
fildl
stos
je
add
dec
add
and
jb
push
mov
push
clc
add
dec
add
add
clc
push
cwtl
xor
ja
sub
mov
push
cmp
mov
in
lds
in
aam
jae
and
flds
push
cmp
jnp
mov
push
mov
sbb
nop
shrl
pop
addr16
mov
add
cmp
jmp
mov
fisttpll
dec
xor
jle
xchg
jnp
mov
test
cmp
leave
cli
and
rorl
and
pushf
fadd
mov
add
sahf
out
and
adc
insb
xchg
sbb
ret
iret
test
dec
test
dec
xchg
xchg
mov
aad
push
xchg
notb
roll
rcrb
stc
movb
faddl
fistl
mov
mov
mov
cmpb
or
mov
lock
pusha
jl
js
jae
fcoms
sbb
dec
rorb
aas
cmp
dec
lret
sahf
add
fcmovu
add
xor
jle
xor
mov
xchg
sbb
mov
jmp
ss
and
mov
test
inc
cmp
enter
add
pusha
sbb
pusha
shlb
test
add
mov
jns
sub
or
test
sub
adc
mov
ds
mov
adc
and
rcrb
add
out
add
lcall
mov
and
xchg
mov
dec
add
shlb
jle
pop
adc
orl
popf
xchg
mov
mov
cmp
addr16
punpcklbw
push
nop
repnz
fsub
popa
sbb
dec
mov
lds
adc
lock
xchg
ds
mov
and
mov
dec
ret
xor
add
adc
ljmp
jbe
mov
aaa
sbb
shll
sahf
jno
fsubs
pop
adc
sbb
insb
sub
mov
or
test
inc
arpl
in
and
in
call
jnp
outsl
sahf
fptan
push
adcb
jne
add
mov
or
add
out
mov
or
inc
shrl
xor
add
addr16
push
ret
push
cmp
loop
nop
mov
inc
inc
xchg
mov
jb
dec
out
xor
cmp
or
mov
int
into
cmp
add
sub
leave
add
clc
mov
push
push
roll
shl
and
push
cltd
loope
xor
addr16
push
and
test
mov
jmp
adcb
pop
sbbl
and
push
sub
insb
lahf
mov
mov
je
mov
ja
call
aaa
push
jg
add
or
add
add
or
push
or
add
push
adc
bound
and
outsl
sbb
dec
inc
cmp
dec
mov
jnp
fld
enter
test
inc
or
hlt
mov
loopne
add
addb
pop
fisubs
adc
arpl
cld
sbb
notb
outsb
inc
pop
dec
jp
or
xchg
out
jno
add
pop
adc
inc
jno
push
pop
fmul
addb
push
mov
sbb
lahf
and
push
sbb
aas
aad
jbe
jns
adc
dec
or
dec
push
jmp
test
inc
insl
dec
xchg
lock
jg
or
pop
cmp
jb
lods
sub
mov
jl
scas
cmp
pusha
cmp
inc
in
dec
jecxz
add
rol
jmp
cld
push
or
xor
inc
pop
sbb
cmp
xchg
mov
push
scas
iret
jnp
jnp
into
push
out
push
dec
aas
push
adc
je
add
add
jp
xor
add
sub
mov
aam
lods
mov
pop
fwait
or
push
lret
in
adc
or
adc
mov
cmpsb
jmp
add
test
pop
pop
push
lods
lds
jae
iret
push
mov
sbb
push
push
push
and
call
jecxz
pusha
push
inc
sahf
addr16
push
ret
push
xor
stos
insb
cmp
cltd
fcoml
pop
ds
mov
adc
stc
sub
add
mov
dec
xchg
jl
push
adc
mov
es
push
dec
sub
rcrl
popa
cmp
pop
cmp
int
int
or
or
je
sbb
mov
lds
pop
mov
scas
out
popf
adc
xchg
jbe
nop
push
adc
repz
xchg
push
add
pop
push
add
xchg
arpl
inc
test
xor
cmp
adcl
jg
add
aam
inc
outsb
or
and
adc
movsb
adc
or
sbb
inc
cmp
add
add
dec
adc
add
orb
in
xor
add
mov
mov
push
cmpb
or
cwtl
cwtl
push
and
add
xchg
mov
nopl
dec
add
pushf
pushf
pushf
je
andb
scas
adc
and
aaa
add
pop
mov
jne
push
loopne
test
mov
mov
ret
pop
dec
sub
sar
sti
or
mov
dec
jae
pop
adc
sub
pusha
jns
xchg
sbb
dec
lcall
loopne
sbb
gs
and
mov
xor
in
shlb
inc
or
push
cli
and
sbb
push
push
stos
mov
cmpsl
inc
or
mov
movsl
push
mov
outsl
shrl
cmpsl
sbb
mov
adc
mov
inc
push
out
sub
jl
sahf
sarl
or
aas
and
sbb
xchg
xchg
outsb
int3
cmp
add
testb
dec
inc
mov
fcom
and
cmc
push
in
out
xor
push
imul
dec
scas
xchg
dec
sbb
or
fs
dec
xchg
scas
xor
add
add
data16
dec
aaa
and
les
sub
imul
in
minps
or
sbb
mov
lret
dec
mov
insb
add
aas
pop
cmpb
push
push
push
scas
aad
jg
inc
jmp
push
push
call
sbb
inc
and
or
nop
adc
mov
adc
test
mov
jg
cld
sub
sbb
inc
and
les
mov
mov
int3
out
rcrl
xchg
mov
jecxz
xor
aas
xor
inc
imul
mov
inc
call
jo
icebp
xchg
inc
jmp
xchg
jb
push
adc
and
sbb
fsts
sti
mov
push
outsb
jmp
cld
mov
cld
dec
lret
adc
mov
push
addr16
mov
jmp
xorl
mov
in
test
mov
xchg
pop
xchg
sbb
adc
mov
mull
sahf
xchg
xchg
in
mov
push
push
ficoml
xor
adc
add
mov
cmp
rcl
test
add
ror
outsb
pop
cwtl
sub
rorl
adc
push
xor
cmp
mov
push
xchg
bound
insl
mov
lahf
xchg
jecxz
xchg
data16
xchg
cmp
repz
in
dec
xchg
push
push
xchg
arpl
popa
cwtl
and
icebp
or
or
push
push
add
push
or
aas
add
jl
or
xor
in
sbb
das
sarl
das
add
add
add
or
inc
enter
cli
push
pop
mov
adc
pop
xor
lcall
pop
pop
mov
or
jmp
loopne
sub
adc
adc
iret
jmp
pop
mov
add
lret
add
adc
pop
adc
call
cwtl
mov
sub
imul
rorl
pushf
rolb
adc
leave
ss
mov
shl
adc
andl
movsl
lea
outsl
push
push
add
cltd
jb
push
or
push
clc
dec
or
inc
fdivrl
pop
nop
test
jns
jp
mov
mov
enter
cmp
xor
add
cwtl
sub
cwtl
sub
and
cwtl
jge
lret
xor
and
inc
and
icebp
cmp
scas
and
adc
bnd
cmp
movsl
sbbb
inc
xor
into
rclb
pop
push
aaa
movsl
push
xor
sub
ret
or
popa
movsb
push
std
test
clc
or
dec
pusha
nop
lock
and
movsb
mov
push
movswl
cwtl
dec
fdivl
cmp
jne
xor
xchg
pop
mov
mov
je
outsb
out
push
adc
fisttpl
push
shll
cmp
jne
pop
dec
ja
jo
pop
les
xlat
stos
lock
adc
add
pop
inc
or
add
jne
cmp
es
pop
inc
add
push
lods
sub
pop
push
xchg
or
xchg
push
xchg
mov
jmp
mov
or
jle
js
arpl
jge
loopne
and
jbe
incl
and
xorb
jle
loop
fisubl
js
adc
mov
push
mov
out
lea
adc
jmp
push
repnz
push
dec
mov
xchg
add
test
test
xchg
push
shll
pop
sub
mov
mov
sarl
push
push
lds
dec
sbb
add
dec
cmp
mov
push
inc
push
sub
push
dec
push
lods
iret
cmp
inc
pushw
dec
cmp
dec
clc
cmp
movsb
popf
movl
lds
adc
mov
mov
popf
inc
pop
cmp
cmp
mov
mov
rclb
ja
xor
push
inc
cmovo
mov
mov
leave
inc
cmp
sub
sbb
add
cltd
sbb
or
mov
mov
dec
pop
jnp
or
and
push
and
loopne
shlb
pusha
add
inc
push
ljmp
pusha
int
xchg
add
dec
imul
ss
xlat
sub
pop
ficoml
mov
jns
scas
ljmp
test
add
add
lds
push
daa
cmpsl
sbb
inc
outsb
std
push
in
cmp
mov
movsb
inc
and
cmp
fildll
loope
xor
sub
je
clc
je
or
add
dec
push
ja
xor
and
fiadds
pop
cmp
mov
dec
xchg
cmpsw
or
pop
adc
xor
aam
outsb
in
das
push
push
daa
dec
rorl
adc
inc
adc
add
jecxz
idiv
and
lcall
jmp
mov
cmp
imul
pop
cli
adc
sbb
or
scas
sti
in
xor
or
xor
movsl
nop
test
pushf
test
ffree
ud2
imul
addl
mov
rolb
adc
int3
sub
mov
sbb
clc
or
mov
movsb
addl
aad
push
loop
adc
or
test
mov
testb
sbb
cmp
push
stc
sbb
mov
xor
or
jmp
lds
jl
adc
xchg
and
adc
pop
push
pop
push
and
push
sbb
fcoms
fmulp
push
inc
dec
cmovae
in
and
xor
sti
adc
mulb
pop
les
add
xor
mov
or
dec
pop
punpcklbw
xchg
push
and
jmp
sete
push
inc
jo
jge
lds
ljmp
inc
jo
xor
test
flds
inc
roll
js
cmp
push
xchg
inc
push
mov
jge
sbb
xlat
arpl
aas
sub
push
sub
mov
mov
pop
andl
push
mov
sub
pop
aas
jge
jg
test
push
lcall
adc
and
inc
and
daa
sub
repz
mov
fistps
mov
aad
imulb
add
jb
add
cmp
clc
or
sarb
or
push
and
adc
inc
xor
sub
xor
add
adc
inc
lock
enter
ret
cmp
nop
sar
jbe
rcr
addr16
adc
cmp
les
fistpl
cmp
scas
adc
xor
insl
mov
mov
faddl
leave
and
jmp
mov
mov
ja
lret
adc
pop
xchg
stos
adc
xchg
pushf
dec
fldcw
sub
xchg
and
push
xchg
movsb
add
sbb
adc
dec
push
test
xchg
push
adc
inc
jno
sti
test
lea
or
sbb
pop
lods
sub
movsb
mov
dec
mov
shl
cmp
cmp
cli
adc
xor
push
dec
sbb
jmp
sbb
fcoml
sbb
movsb
lret
movsb
inc
call
mov
pop
adc
shrl
in
clc
add
or
add
and
insb
or
lods
les
xchg
dec
aaa
mov
movsb
cmp
out
mov
pop
lods
xlat
in
mov
in
adc
and
cltd
rorb
fcompl
stc
dec
lock
repz
xor
dec
pop
or
pusha
mov
ds
adc
xor
insl
adc
daa
mov
scas
adc
imul
cmp
dec
inc
mov
push
pop
inc
cmp
jo
mov
add
and
adc
sub
lcall
adc
push
inc
sbb
movsl
lret
jmp
cmp
enter
arpl
test
shll
sbb
push
and
or
push
xchg
and
adcl
mov
daa
scas
push
cmp
inc
add
xchg
dec
adc
es
push
or
sbb
or
mov
fsubrs
shl
or
cmp
fs
enter
pusha
outsl
push
add
push
js
push
jo
xorb
mov
cmp
test
adc
push
xchg
mov
sub
lock
add
mov
push
push
ja
jmp
dec
sub
jne
or
dec
jp
or
and
out
xor
sub
pop
dec
sbb
loop
or
or
ret
adc
mov
fwait
inc
dec
inc
test
imul
inc
xorb
sbb
out
rclb
out
add
inc
xchg
shr
sbb
xor
sub
jno
sbb
and
add
repnz
insb
xorb
or
pop
xor
inc
pop
movsb
mov
je
sbb
lea
fsubp
shlb
push
int
je
dec
bound
ret
mov
ds
dec
xchg
dec
xor
inc
sahf
xchg
push
test
mov
dec
xor
sahf
push
pop
pop
dec
push
sub
dec
dec
inc
push
dec
push
mov
adc
push
movsl
inc
xchg
sub
in
mov
adc
adc
pop
add
dec
adc
adcb
push
lock
nop
pop
cltd
pusha
lcall
fimuls
pop
imul
xchg
iret
add
dec
and
xor
pop
inc
mov
adc
incl
or
cmpsb
imul
and
and
or
sub
sub
mov
mov
xchg
icebp
push
incb
lea
push
adc
push
add
movsl
fdivrs
insb
roll
add
jo
dec
jb
je
cmpsb
and
popa
incl
rcll
push
inc
jne
dec
shll
or
adc
adc
xor
sbb
push
loope
imul
inc
push
sbb
scas
std
xchg
add
push
pop
push
dec
push
jmp
mov
mov
push
xchg
add
mov
repz
inc
popf
aam
mov
and
cmp
jmp
mov
cwtl
ret
add
repnz
and
lcall
add
test
jne
or
inc
ret
xor
mov
popf
xchg
rcrb
das
sbb
lret
xlat
xor
xor
sbb
push
cmpl
jne
into
pop
or
pop
imulb
std
es
and
pop
push
adc
jno
shlb
aaa
lods
push
mov
mov
xchg
les
aam
pop
loop
push
mov
notl
ret
hlt
aam
pop
sbb
mov
pusha
fsts
sbb
test
xchg
inc
push
fmull
loop
gs
into
jbe
ljmp
call
rclb
pop
stc
or
pusha
and
test
scas
or
sub
push
add
sub
adc
mov
jp
in
lock
aam
mov
fmull
addr16
repz
sarl
sbb
push
scas
ss
lock
inc
dec
out
mov
mov
xor
imul
and
loope
xor
shrb
lock
jne
xchg
out
push
mov
pop
jne
push
or
stc
mulb
sub
add
scas
mov
push
jo
add
and
dec
js
mov
jne
int3
fnstcw
nop
pop
mov
nop
sub
or
sub
inc
jmp
push
push
mov
and
mov
cmp
add
add
notl
and
sub
pushf
int
int3
ret
ffreep
mov
cmpb
xor
sbb
cmp
fildl
rcrl
xor
fwait
push
rclb
aad
adc
mov
inc
push
inc
pop
dec
shrb
or
ss
mov
or
inc
rorl
inc
inc
pop
mov
push
mov
and
js
sbb
cmc
repz
add
mov
ds
or
dec
sti
jbe
cmp
push
push
sub
push
push
imul
sub
mov
fcmovnb
imul
mov
adc
add
xor
decl
sbb
rcrb
push
and
pop
sbb
lea
mov
cmp
and
enter
test
stos
test
xor
and
pop
cmp
shl
xor
xor
cmp
xchg
xor
pop
dec
mov
adc
fildl
jnp
add
sub
adc
mov
outsb
mov
mov
lret
dec
js
sti
mov
wrmsr
ds
shr
ret
rclb
xor
mov
jle,pn
push
or
js
out
mulb
nop
sti
sub
and
mov
lret
dec
adc
cmc
dec
inc
daa
imul
mov
dec
add
ret
int
xor
xor
add
add
mov
adc
js
sub
adc
rcll
pop
sbb
mov
sahf
ret
sbb
inc
and
cmovb
push
js
adc
adc
rcr
push
adc
inc
stc
mov
sti
pop
sbb
and
push
jno
push
push
lock
adc
ret
sub
push
or
arpl
push
js
mov
fistl
mov
dec
push
test
sub
insb
adc
dec
jbe
js
pop
push
lds
mov
imul
mov
andb
mov
and
sbb
adc
aam
mov
mov
icebp
pushl
mov
sub
pop
push
push
xchg
mov
or
jge
or
ret
bound
adc
dec
dec
xor
outsb
mov
push
push
push
cmp
dec
lock
test
push
xor
pop
and
mov
and
cmpb
jg
inc
pop
pop
add
decl
pop
xor
aad
je
add
fiaddl
push
sbb
push
push
inc
push
adc
outsl
inc
jp
fucomi
ret
sbb
adcl
stc
clc
out
inc
repz
and
sbb
mov
sub
inc
scas
movsl
cld
mov
pushf
fiadds
rorb
cwtl
cmp
mov
sbb
or
jmp
xchg
addb
jmp
scas
and
inc
pop
mov
sbb
adc
add
nop
and
mov
sbb
push
jecxz
add
cmpsl
inc
ffree
push
inc
push
xchg
cmpsb
push
and
sub
iret
jp
mov
and
and
xor
mov
pop
add
loope
jnp
mov
and
mov
sub
ficoml
mov
mov
fdivrl
xchg
lea
and
mov
add
ret
xchg
xchg
add
fildl
add
pop
aam
adc
out
movsl
test
mov
adc
xchg
sbb
or
lea
mov
or
outsl
add
movl
jo
push
sbb
nop
fidivl
mov
rorb
pusha
sub
adc
addr16
lea
push
ret
out
jo
test
and
popf
or
jo
es
cs
jo
shlb
adc
pop
dec
add
rclb
jge
push
rolb
xor
sub
jne
jl
mov
ss
je
push
das
in
push
or
inc
and
and
mov
xchg
mov
sahf
and
jo
les
inc
sub
out
sub
test
ret
pop
loopne
loope
xor
test
cmp
pop
xchg
push
andb
icebp
out
add
data16
adc
and
add
mov
adc
dec
xor
rol
or
inc
or
in
mov
xor
push
mov
xor
imul
add
and
jo
adc
sub
das
mov
cmp
repz
mov
push
and
je
jmp
les
andb
insl
je
js
xchg
push
into
sub
dec
push
mov
push
jmp
xchg
mov
xor
jns
dec
loop
xchg
xor
add
aam
ret
or
xor
mov
xchg
mov
push
inc
fsubs
imul
pusha
adc
and
mov
jbe
repnz
in
pop
ret
mov
jb
repnz
inc
test
xor
rolb
inc
inc
dec
icebp
scas
loope
lods
ss
inc
addr16
xchg
in
sub
sahf
ja
push
stc
and
mov
cmp
inc
add
sbb
adc
xchg
in
push
in
cmp
fcmovne
dec
or
xor
push
pop
iret
sbb
roll
mov
jmp
sub
xlat
xchg
insl
stos
pop
dec
stos
insl
enter
daa
push
push
aam
sar
into
xchg
or
push
lret
mov
mov
sub
insb
insl
jae
enter
sbb
xchg
popa
pusha
insl
push
push
add
lcall
faddl
jo
divl
adc
and
xchg
or
add
fmul
leave
mov
add
lock
cmpb
jo
in
push
push
cmp
cmpsb
inc
sbb
push
lock
push
cli
sbb
call
jle
xlat
cmp
xchg
ja
sub
int3
push
nop
inc
addl
arpl
jmp
push
inc
test
das
iret
sub
sti
xchg
and
int3
adc
push
lock
jne
xor
ds
ret
fsubrs
add
nop
fnstenv
cs
sbb
hlt
push
out
mov
stos
scas
sbb
js
cmp
pop
mov
mov
sub
lahf
ficomps
cwtl
outsb
sbb
adc
cmp
sbb
mov
addb
or
sub
pop
int3
add
mov
mov
jne
jne
mov
jge
add
aam
push
add
arpl
sbb
arpl
mov
jmp
test
xor
push
mov
mov
and
inc
and
sub
lock
cmp
add
xchg
mov
and
adc
dec
jae
sbb
adc
adc
xor
jae
pop
sahf
mov
push
jmp
inc
xor
fnstcw
aaa
in
inc
ja
push
imul
push
jecxz
pop
inc
pusha
push
pop
push
inc
sub
or
cmp
or
fwait
jmp
inc
push
pop
outsl
daa
movsl
mov
inc
and
push
pop
xchg
jbe
movb
push
sbb
mov
push
es
int3
xor
scas
bound
mov
mov
sbb
shlb
in
push
je
test
rolb
fisttpl
xchg
test
push
mov
xchg
inc
adc
pop
lods
inc
fimull
cmpl
xchg
cmp
adc
or
mov
adc
lods
loope
xchg
adc
xchg
fidivs
mov
jmp
inc
mov
in
mov
mov
sub
mov
icebp
ret
fidivrs
sub
mov
lret
push
popa
add
mov
gs
xchg
je
cmpsb
test
and
lods
fisttpll
and
jbe
and
pop
dec
ja
ficoms
mov
daa
sbb
shlb
adc
pop
lcall
outsb
add
add
dec
std
xlat
push
cli
pop
lahf
movzbl
mov
xor
sub
push
mov
mov
out
push
shrb
ljmp
add
sbb
cmp
adc
sbb
add
sti
in
xchg
pop
jge
inc
and
push
push
push
and
xor
sti
test
add
addb
or
cltd
test
add
out
loopne
push
xchg
lcall
sbb
sarl
lods
cmc
sub
or
or
xor
xor
push
or
push
sub
pop
sub
and
inc
dec
or
mov
and
insb
rcrl
pop
xor
in
cmpsb
sbb
mov
dec
sbb
subb
adc
push
adc
xor
add
es
sub
bnd
push
inc
add
xorb
and
bound
stos
mov
pop
into
fcoml
jno
adc
sub
les
outsb
lods
and
mov
sub
sarb
push
push
mov
add
sbb
xchg
cmp
aaa
push
mov
or
xchg
test
inc
add
push
ljmp
jae
rcl
push
push
push
or
lock
icebp
push
and
mov
mov
enter
push
mov
test
scas
in
mov
sti
or
ret
fdivs
or
push
add
pop
mov
pop
lock
pop
mov
inc
jl
mov
imul
add
mov
add
push
push
push
or
outsl
divl
mov
inc
push
inc
imul
aad
loope
icebp
movsb
dec
rcll
mov
mov
scas
cmp
dec
mov
cltd
add
sub
mov
nop
xor
inc
addl
sbb
shrl
repz
lret
inc
sub
mov
sub
dec
jnp
subb
nop
sbb
jbe
cld
jns
pop
ret
push
sub
inc
or
mov
sbb
push
roll
inc
pop
xchg
and
sub
sahf
xchg
ud1
pop
mov
movb
mov
jmp
dec
or
or
jno
inc
sbb
movsl
mov
cld
cmp
jae
cmp
cmp
mov
fnsave
and
sub
add
orb
repnz
and
add
and
add
add
ss
loopne
add
push
addr16
mov
je
jmp
xchg
and
decl
movsb
adc
mov
and
lds
das
sbb
push
adc
dec
add
cmpsl
push
scas
push
sub
inc
shll
jg
insl
jle
fldl
pop
xor
push
or
inc
or
add
xor
je
add
in
mov
add
or
jg
cwtl
decl
jp
out
cmp
aad
lea
sub
fs
jbe
loope
adc
in
test
std
push
mov
add
cmp
loop
jo
fists
repnz
inc
pop
outsl
nop
sbb
and
jno
sub
clc
xor
fldl
jge
cmp
imul
dec
push
xchg
aad
mov
loope
scas
mov
cmp
je
jle
push
mov
push
inc
mov
push
bnd
fdivl
pop
or
inc
dec
add
lea
inc
cmp
adc
bound
loope
mov
add
add
sub
mov
xchg
xchg
push
xor
cmp
call
outsl
int3
jb
fadds
fnsave
or
call
xchg
add
sti
push
push
pop
mov
sbb
push
mov
int3
jge
or
or
mov
add
or
dec
loope
mov
iret
dec
aas
adc
add
xor
nop
aad
or
mov
or
lea
pop
roll
movsb
cs
je
xorb
pop
dec
rolb
mov
stos
mov
cmpsb
or
stc
int
sbb
fisubl
popa
mov
or
shlb
and
fsubrs
sbb
push
pop
lock
lock
sub
test
xchg
fwait
andb
jb
cmp
mov
add
sbb
push
xchg
pop
ds
xor
fdivs
inc
sub
xor
adc
xor
cli
movl
cli
sbb
popa
sbb
inc
repz
shr
mov
lock
xor
inc
jl
clc
xchg
add
and
lock
and
or
pop
add
adc
and
xchg
jno
mov
gs
push
outsw
imulb
call
fwait
cwtl
mov
fmulp
fwait
jne
mov
sbb
pusha
dec
or
movsl
push
rolb
adc
push
dec
movsb
inc
seto
mov
int
cs
cmc
pop
xchg
ljmp
xchg
shrl
sarb
sub
xor
scas
inc
jp
inc
sub
sbb
outsl
mov
mov
adc
ljmp
int
mov
hlt
insb
ljmp
dec
loopne
sub
inc
mov
xor
mov
aam
daa
push
std
pusha
sub
loopne
xchg
f2xm1
cmp
ret
xor
mov
daa
das
in
cwtl
dec
sbb
in
test
pop
and
sub
push
inc
push
fchs
outsb
mov
inc
arpl
sub
outsb
cmp
xchg
inc
mov
inc
jb
inc
sqrtps
mov
xor
jge
dec
js
std
sbbl
inc
add
or
addl
test
movb
mov
pusha
mov
rcl
movl
push
sbb
adc
in
sub
xor
cmp
add
ret
rol
sahf
stc
sub
sti
push
bound
aas
je
jnp
adc
pop
flds
sbb
hlt
adc
jae
hlt
je
outsb
xchg
jo
pop
nop
adc
dec
or
push
cwtl
push
lods
pop
xor
js
push
ljmp
adc
mov
and
xchg
jmp
std
xor
jp
inc
es
sub
cmp
repnz
pusha
mov
pusha
sub
inc
pop
ret
rcll
es
jmp
sbb
aas
fstpt
mov
push
push
in
mov
ud0
decl
stos
andb
pop
dec
in
mov
adc
sub
jne
cmpsl
fmulp
fcoms
mov
xchg
add
mov
or
mov
pushf
xor
inc
jo
adc
shlb
popa
push
fs
jp
or
inc
test
enter
jo
mov
cmpsl
xchg
sub
mov
mov
cmp
inc
mov
sbb
das
push
mov
lods
mov
push
push
dec
testb
inc
xor
cmp
mov
or
testl
push
mov
mov
cltd
cmp
add
lock
gs
inc
mov
push
mov
xor
dec
test
subb
mov
sbb
lock
and
push
icebp
mov
or
fimuls
shrl
in
dec
pop
or
ss
and
subl
push
ret
dec
add
mov
inc
cmp
add
outsb
icebp
shl
nop
out
adc
pop
ret
adc
cmp
adc
jnp
lea
adc
repnz
mov
pop
clc
fsubp
and
and
mov
jmp
xchg
and
gs
pop
add
lods
cmp
outsl
ljmp
jne
test
aas
mov
je
std
sahf
add
mov
jno
loop
loopne
inc
dec
mov
test
xchg
xor
push
lret
xchg
fistl
adc
inc
sbb
sub
loopne
ja
jae
xor
mov
pop
inc
stos
sub
add
cmp
es
pop
sbb
jae
in
push
sbbb
adc
fs
sub
sbb
inc
dec
sub
daa
xchg
cmpsb
add
mov
inc
dec
cmp
push
out
lock
or
jb
adc
clc
lret
fdivl
jne
mov
in
subb
or
je
jbe,pn
jne
outsb
out
ficoms
lods
mov
leave
mov
int3
jae
cmp
add
test
cmpb
xchg
mov
movl
and
push
pushf
movsl
pop
push
mov
aad
stc
movsl
adc
mov
jg
lea
push
add
dec
sub
sarb
fsub
sahf
sbb
mov
jl
test
mov
popa
jo
lret
and
mov
or
fiadds
lock
and
xchg
push
in
fcmovbe
and
out
push
sub
lret
inc
or
fdivrl
jmp
sbb
jne
fldt
push
jo
mov
xor
popa
pop
sti
xor
adc
xor
outsb
mov
enter
aas
mov
push
pop
test
add
in
inc
push
outsl
adcl
add
aad
push
push
jle
push
mov
adc
push
lret
add
addb
mov
leave
xor
sbb
lds
jne
pop
sub
sbb
mov
cmp
cld
push
inc
fimuls
sub
xchg
pop
or
push
in
js
xor
int3
iret
adc
xchg
jbe
shll
adc
mov
push
push
sbb
pop
jne
ds
pop
cmp
add
popa
movl
push
lea
dec
js
push
rcrb
or
inc
in
cmp
push
cli
je
mov
dec
jo
add
or
mov
cmp
dec
cmp
cmp
inc
cmp
ret
mov
ljmp
ds
lret
xor
sbb
inc
in
xor
lds
test
or
in
jmp
pop
xchg
movsl
ljmp
sub
aas
loop
sti
call
adc
out
pop
xor
push
xchg
leave
ret
jb
jl
or
cmp
pop
inc
dec
data16
orb
stc
imul
cli
into
cmc
lds
jae
mov
sarb
add
mov
mov
mov
add
test
xchg
push
lcall
mov
std
out
sbb
cmc
add
dec
lahf
imul
push
imul
xor
sbb
add
and
lds
pop
das
and
add
jmp
xchg
mov
jnp
fadds
pop
ja
cmp
insb
mov
adc
mov
dec
popa
jbe
lock
push
jecxz
and
or
jmp
fsubrs
hlt
push
xlat
js
icebp
jne
mov
add
insb
xor
xlat
shlb
push
xor
mov
add
js
rcrb
stos
xchg
rorb
push
sub
sub
lods
lret
xor
and
lods
add
push
dec
lds
pop
hlt
jle
sub
adc
push
and
add
lods
adc
mov
mov
mov
fdivl
mov
xor
add
mov
push
dec
inc
jg
cmpl
jl
prefetchnta
pop
mov
enter
inc
xor
push
xor
pop
cmp
mov
add
xor
or
inc
cmp
cmp
inc
pop
cmp
in
sbb
std
sub
xor
xchg
sub
xchg
adc
nop
ljmp
fmull
ffreep
adc
and
push
daa
out
pop
add
mov
mov
xor
mov
repnz
add
pusha
aad
mov
popl
aaa
jl
jne
add
sub
xchg
push
sub
pop
pop
or
in
lahf
aaa
jne
cmp
sbb
or
popf
push
and
pop
adc
sub
in
bound
loop
test
bound
xchg
insb
mov
sarb
add
or
adc
xor
sub
sub
lahf
fs
mov
rcrl
imul
pop
push
add
fs
push
push
push
lea
push
sbb
cmp
test
sarb
or
iret
sbb
mov
or
push
lods
test
and
or
or
stos
xor
enter
sbb
mov
jbe
xor
jg
sub
cmpsl
sbb
loop
xor
mov
test
sbb
call
cltd
sbb
sub
popf
hlt
in
mov
pop
loope
mov
push
cmp
scas
cmp
into
and
mov
testb
push
sbb
inc
daa
cmp
sarl
mov
in
lret
rcl
data16
mov
jl
or
lea
jnp
jo
dec
push
in
xchg
in
push
push
pop
pop
adcl
aaa
add
popa
pop
ss
daa
imul
mov
sub
sub
stos
pusha
mov
sub
loope
rcr
incl
sbb
dec
dec
push
mov
orl
dec
outsl
test
outsl
sbb
outsb
jl
negb
inc
mov
or
aad
sbb
xlat
add
movl
mov
mov
call
ficomps
mov
rol
stc
enter
and
repnz
or
and
fidivrs
clc
cmp
push
cmp
add
mov
pop
inc
mov
cmp
lea
xor
jmp
fimuls
not
cld
pop
and
addl
rcr
ret
and
ja
adc
pop
jo
test
and
jle
cmp
pop
push
inc
sub
jmp
mov
cmp
pop
incl
rcl
cmpsl
pop
xor
sbb
and
repnz
dec
xor
aaa
lcall
push
jne
dec
mov
and
mov
fsqrt
dec
sub
sbb
ds
fs
hlt
jnp
push
ret
xor
cli
imulb
cmc
sub
inc
pop
adcl
aas
push
adc
pop
lret
mov
fs
in
repnz
adc
xor
or
and
or
addb
fsubrs
adc
inc
push
push
adc
add
repnz
imul
jb
loop
sbb
push
sti
fsubs
pop
jae
and
dec
ja
mov
jns
lret
inc
push
inc
push
jnp
push
jmp
jp
dec
cs
imul
push
mov
pop
je
or
ss
je
inc
mov
sub
outsl
lods
xchg
aad
orl
cmpb
push
add
jp
aam
pop
loopne
xchg
xor
xorb
lret
ret
in
add
add
fiadds
sbb
popa
mov
mov
pop
jo
mov
jne
mov
sub
in
dec
loope
jge
mov
mov
jg
xor
inc
xchg
cmpb
test
cmpsb
and
jl
inc
adc
push
xor
add
rorb
aas
dec
jne
pop
movb
scas
fistl
js
dec
add
sub
xchg
dec
int3
xor
mov
aad
mov
pop
push
push
push
inc
in
fdivs
push
jbe
fiadds
add
idivl
shrl
inc
loop
negb
add
fs
out
sbb
and
out
jmp
fimuls
cmp
cli
add
jle
pop
lahf
add
insb
inc
push
js
sub
sbb
pop
enter
shrb
pop
add
mov
mov
cld
xor
adc
push
add
adc
ficoms
cmp
push
orl
push
cltd
sbb
cmp
jae
inc
es
bound
test
push
and
enter
cmp
sahf
sbb
enter
addl
push
jl
cs
jb
mov
add
aam
ljmp
xor
xlat
add
les
sub
push
mov
shlb
out
inc
add
push
cs
mov
data16
rolb
movb
in
mov
sbb
jg
add
sbb
pop
add
js
jp
add
sub
int3
dec
inc
adc
xchg
xor
and
add
loopne
add
shr
or
jge
mov
pop
xor
negb
mov
cmp
cli
jae
lock
orl
adc
fiaddl
add
in
insl
ret
add
loop
rcrl
adc
inc
inc
add
outsb
mov
out
push
push
mov
push
push
rcrl
lcall
mov
mov
and
xor
inc
sub
sub
inc
ja
mov
shrb
mov
or
pop
adc
pushf
test
jge
fidivrl
lods
flds
sbb
mov
cmpsb
arpl
or
pop
pusha
add
dec
lods
add
fwait
adc
mov
xchg
or
dec
mov
jne
and
dec
fidivs
addb
add
inc
fiaddl
pop
xor
push
out
or
xor
add
call
decb
dec
jo
add
mov
sub
cwtl
pop
mov
add
fcomps
jnp
add
sbb
push
inc
gs
mov
in
popa
sbb
add
adc
lret
sub
testb
add
xor
adc
dec
cmp
sub
sbb
inc
adcl
mov
mov
add
jne
mov
loopne
stos
inc
clc
enter
xor
add
mov
inc
dec
cmpsl
inc
das
mov
leave
mov
stc
push
andb
je
cltd
nop
addl
and
cld
lds
pop
and
push
push
or
inc
add
mov
adc
add
adc
xchg
push
cli
inc
xorl
push
sarl
mov
or
or
inc
sbb
xchg
push
cmp
and
popf
imul
cmp
outsl
push
addl
pop
cmpsb
jp
jno
cmpsb
roll
jbe
jo
mov
xchg
dec
push
movsb
enter
inc
jae
shll
test
dec
icebp
loope
push
jae
pop
inc
xor
or
jl
xchg
out
inc
mov
sub
roll
js
pop
add
out
adc
out
add
inc
js
cmp
inc
cmp
or
xchg
mov
jmp
mov
rep
sarb
xchg
or
loope
sub
adc
mov
hlt
mov
repz
pop
in
enter
jmp
ret
push
mov
mov
ds
xorl
push
jl
outsb
add
add
popa
inc
sbb
stos
cmpb
mov
adc
xor
inc
push
xchg
adc
lret
je
call
fnstcw
inc
sbb
leave
aaa
or
rolb
sub
pushf
fnsave
adc
sub
popa
add
jae
xlat
aaa
sub
jmp
or
jmp
sub
jo
jae
jae
jmp
inc
jmp
inc
jmp
inc
jmp
jae
jae
inc
jmp
xor
dec
aaa
jmp
or
add
jmp
xchg
xchg
sub
mov
cmp
add
push
ja,pn
shlb
mov
fadds
pop
cmp
dec
add
or
mov
push
sbb
adc
mov
dec
sub
jne
imul
mov
adc
cmp
push
xor
mov
push
sahf
add
xor
mov
mov
mov
popa
jnp
aad
or
jne
mov
jbe
adcl
test
call
bound
add
test
jmp
push
push
push
and
jo
addb
cmc
aas
aam
fdiv
xchg
mov
jns
add
push
loop
xchg
test
call
lods
outsb
jo
xchg
xchg
inc
call
sbb
add
push
add
dec
stos
ja
pop
cmp
mov
movsb
or
adc
mov
pop
cmpsl
cli
and
imul
das
rcrb
ja
pop
rcll
and
into
lea
dec
fisttpl
je
pop
jne
and
dec
add
fadd
and
fcomps
push
fs
cmp
enter
pop
aam
adc
loope
mov
shll
pusha
cmp
imul
cmp
test
push
shll
pop
lods
jno
jnp
cwtl
mov
add
cmp
xchg
in
lea
lock
lcall
mov
jmp
mov
mov
cmc
push
stos
cs
adc
or
cmp
add
add
out
xor
iret
or
and
and
add
test
adc
and
sbb
leave
int3
mov
call
adc
xorl
jae
mov
jge
jne
imul
dec
jo
sub
stos
fists
movsb
sbb
dec
pop
and
cli
sub
fdivp
adc
push
xchg
adc
add
or
sub
jle
mov
inc
xor
pop
jbe
inc
cmp
dec
adc
fstl
inc
add
jg
push
sub
jge
dec
jle
push
sub
loopne
mov
push
push
mov
jecxz
fistl
push
add
inc
cwtl
sub
fcom
addr16
fld
je
adc
inc
call
pop
leave
pushf
pop
shlb
in
mov
dec
wbinvd
push
clc
lds
inc
fmul
add
imul
mov
test
mov
sub
dec
dec
dec
add
jnp
pop
lods
and
cmp
add
cmp
clc
xchg
sarb
cmp
test
sbb
xorl
mov
dec
pop
pop
enter
jmp
adc
insl
add
pop
call
in
loopne
or
sub
daa
outsl
add
cmp
pop
add
push
inc
push
lcall
xor
cmp
jne
leave
stc
push
adc
cltd
cmp
mov
sub
test
ret
iret
leave
inc
sbb
aaa
jo
jo
hlt
ret
rolb
adc
mov
lahf
cmpsb
mov
mov
in
js
push
mov
stos
mov
je
mov
mov
add
xorl
ret
xor
push
push
mov
jge
les
nop
sub
xchg
add
and
pop
fcoms
or
popa
inc
add
shrb
inc
sub
or
cmp
je
dec
cmp
cltd
into
jp
testl
ds
ljmp
or
add
xlat
lret
fs
cli
push
push
movb
push
iret
aaa
push
repnz
adc
cmp
out
jno
shll
cmc
push
inc
out
push
push
sub
daa
out
lea
mov
jecxz
dec
xor
inc
adc
mov
add
xor
mov
adc
jge
clc
in
and
push
lea
jne
hlt
mov
push
add
lea
or
push
cmpsl
xor
rcrb
mov
aaa
cmp
inc
push
pop
mov
jmp
jl
inc
jne
xchg
cmpb
lock
xchg
test
subl
cmp
sbb
addb
jne
pop
inc
add
push
cmp
push
xlat
xchg
mov
aaa
rorb
flds
dec
add
rclb
ss
outsl
push
sbbb
mov
push
cmpsl
inc
push
mov
add
movb
gs
ljmp
dec
stos
xchg
std
mov
roll
mov
dec
mov
push
in
in
sub
mov
jno
mov
add
in
cmpsb
and
lret
inc
test
xchg
clc
xchg
or
adc
or
fnstenv
inc
lods
lret
mov
pusha
mov
adc
sub
xor
cmp
add
xchg
jge
and
jae
cmp
dec
xor
inc
fcoms
stc
sbb
xlat
add
xor
inc
pushf
dec
cmp
adc
lods
in
fdivr
push
jo
push
and
add
sti
nop
mov
adc
sbb
push
sub
aam
push
jmp
or
xor
je
push
daa
inc
pop
daa
mov
inc
aam
push
lods
je
or
pop
mov
es
cmc
mov
and
repz
mov
pop
hlt
inc
add
and
dec
aad
movsb
cmp
scas
mov
push
dec
arpl
test
movsl
adc
mov
cwtl
jno
inc
and
or
inc
cwtl
adc
or
dec
int
sub
xorb
pmullw
daa
pushf
push
js
push
test
push
pushf
mov
aad
outsl
incb
push
jp
je
rorb
cmp
cmp
nop
xor
pop
repnz
ja
inc
add
stos
jg
into
jmp
orl
or
sbb
add
int
adc
jmp
ds
jl
pop
fmull
inc
repnz
push
js
dec
push
fbld
add
loop
ret
mov
lds
cmpsl
mov
fidivl
lock
push
jne
dec
rorb
pop
hlt
add
jg
pop
lcall
pop
jo
mov
sbb
pop
test
cmp
sub
test
xor
bound
fmull
push
mov
pushf
cwtl
fadds
js
inc
cltd
and
adc
sbbl
push
lods
xor
pusha
mov
xorl
popf
sub
xor
xchg
inc
pop
lea
ljmp
add
adc
push
or
out
push
or
stc
add
clc
add
jmp
jnp
sbb
mov
test
insb
mov
insb
mov
lods
cmp
aaa
cmp
lods
jae
mov
mov
aaa
push
ljmp
movsl
rorb
mov
or
lret
imul
push
inc
pop
test
add
push
pusha
push
mov
inc
xchg
and
sub
cld
cmp
lcall
mov
inc
push
call
push
out
push
add
xchg
faddl
pop
and
out
loope
push
cmp
leave
add
dec
cmp
pop
mov
cmpl
xor
mov
and
out
adc
or
dec
popa
rcl
and
add
pop
shlb
imul
stc
jbe
add
inc
les
mov
in
faddl
and
sbb
cmp
mov
das
rol
pop
xchg
clc
or
ljmp
sub
int
mov
dec
mov
push
push
movsb
sub
mov
mov
insl
pusha
rcrl
add
push
je
jnp
add
test
push
mov
mov
stos
or
stos
insb
jge
push
popa
movsb
je
insl
push
into
iret
icebp
lahf
inc
push
divl
leave
sub
cmp
and
mov
mov
aam
or
mov
mov
loopne
stos
push
sahf
add
sub
xor
push
movsb
sbb
add
dec
js
add
rcrl
adc
mov
and
dec
data16
and
push
rcll
mov
dec
out
add
and
inc
pop
sbb
xlat
xor
or
or
fdivrs
sbb
dec
adc
adc
movb
insb
sub
inc
js
or
push
mov
test
lock
enter
inc
shrl
movsb
mov
add
cmp
add
sbb
xor
jne
icebp
mov
sbb
and
push
pusha
lret
push
into
ret
test
enter
add
movb
loopne
or
pushf
mov
xor
sub
lock
cld
inc
std
push
pop
incl
mov
insb
or
push
into
popa
jp
pop
pop
xor
sbb
cwtl
or
pop
push
add
js
xchg
mov
or
dec
cmp
rorb
inc
cmp
ss
mov
add
movsl
adc
loop
test
fnstcw
loopw
mov
lcall
sbb
add
pop
push
or
nop
test
jns
fsubs
cmp
je
push
insb
or
mov
ret
mov
mov
stc
jne
inc
jecxz
push
and
mov
adc
adc
push
mov
cmc
add
push
je
add
gs
or
stc
sbb
sbb
inc
mov
repz
pop
icebp
sub
cmp
jge
or
faddl
adc
test
cmp
xchg
push
push
mov
ja
pop
pop
and
cmpsl
or
dec
push
cmc
or
pusha
mov
and
mov
dec
sbb
sbb
push
xchg
fdiv
setnp
and
arpl
mov
in
nop
outsb
mov
inc
icebp
sbb
dec
daa
and
insb
and
mov
mov
and
sub
and
testl
mov
sbb
lcall
push
xor
cs
leave
add
sub
jb
sbb
movsl
sub
movsb
ret
mov
add
jne
pop
out
sahf
roll
mov
and
sub
push
rcrl
pushf
idivb
mov
in
push
int
push
xor
add
xor
add
add
add
ss
insl
push
sbb
arpl
lods
or
data16
jns
out
roll
fcomps
add
adc
cmp
inc
inc
dec
sub
xor
shl
cmp
push
add
cltd
lahf
cmp
add
or
out
outsl
repz
and
push
hlt
rcll
xchg
imul
push
inc
icebp
pop
cli
sti
mov
jp
idivb
mov
xor
or
fcmovbe
loopne
push
or
fisubs
fadds
lret
iret
repz
ljmp
ror
in
add
add
fidivl
add
add
push
or
out
or
movsb
rol
push
push
adc
and
cmc
or
adc
inc
cmp
push
and
push
inc
or
cmpsl
adcb
and
dec
add
lods
icebp
mov
stos
js
xchg
aaa
push
push
push
or
dec
pop
data16
cltd
fisttpll
hlt
adc
push
call
xor
sti
dec
mov
pop
xor
dec
xchg
test
sub
in
add
or
mov
push
lea
pop
test
mov
mov
cmpsl
xchg
pop
mov
repnz
stos
sub
shlb
cs
sub
sbb
leave
test
in
sub
gs
hlt
outsb
insl
xor
or
mov
ds
sub
mov
sub
adc
ret
xchg
rcr
mov
lret
hlt
aam
pop
daa
xor
inc
inc
loope
sub
test
mov
add
jge
push
jle
lcall
add
push
cli
or
mov
jmp
sub
adc
xor
dec
push
cmp
add
sub
xchg
mov
and
mov
adc
mov
dec
and
add
push
and
or
cmp
mov
inc
add
jne
jae
test
pop
sub
sub
mov
arpl
adc
je
sbb
pop
rol
mov
cmpl
int3
addr16
push
rolb
loopne
cmpl
test
jecxz
dec
sub
xchg
add
dec
sbb
push
adcl
pop
imul
mov
or
add
pop
dec
in
xorl
into
subl
andb
and
stos
ljmp
popa
inc
or
ds
imul
pushf
add
xchg
add
fldcw
mov
xchg
lea
add
push
xchg
cmp
shrl
xor
sub
cmpsl
pushf
aaa
add
xor
adcl
icebp
or
cmp
stos
sub
push
addr16
mov
xchg
ret
adc
inc
test
pop
push
test
pop
adc
adc
setb
and
mov
add
mov
and
or
call
fcomps
je
sahf
dec
or
pop
sbb
sub
or
dec
cmp
imul
or
fisttpl
sbb
test
xor
xchg
xchg
rol
pusha
bound
andb
dec
jne
push
pop
add
add
movsl
loope
pusha
sbb
fbstp
and
add
fists
push
jg
loope
jae
push
inc
add
out
and
push
push
jnp
or
lods
adc
jl
orb
and
movsl
or
inc
dec
or
mov
adc
popa
lea
loop
add
or
mov
nop
mov
not
or
jnp
clc
ss
movsl
push
sti
pop
pop
and
stos
dec
pop
adc
scas
cmpsb
nop
cs
dec
dec
mov
cmpl
add
mov
clc
dec
mov
cltd
mov
add
js
mov
int
inc
cmp
js
hlt
pusha
add
adc
inc
mov
mov
push
mov
pop
add
es
pop
cs
push
notb
nop
or
sub
sub
rclb
push
add
or
je
mov
add
mov
fs
jle
dec
push
add
push
inc
add
sub
ja
sbb
jns
add
call
sub
or
pop
into
pop
imul
pop
fdivrl
and
xchg
call
and
add
popf
add
push
push
and
imul
push
subb
xchg
xchg
adcb
sahf
or
xor
enter
sub
mov
jno
out
fcmovb
cmp
add
push
sbb
pop
push
subb
mov
cmpsl
inc
sahf
sub
xor
cmpsb
xor
mov
imul
dec
pop
mov
push
leave
prefetcht1
subl
pop
inc
jae
add
cltd
inc
lock
xchg
jo
xchg
xor
cmp
ret
xor
dec
xor
nop
ss
push
testl
push
pop
cmp
sub
ret
dec
dec
pop
add
add
add
aaa
repnz
js
in
xor
inc
jle
mov
push
dec
xor
sub
push
inc
mov
mov
clc
test
inc
je
in
xchg
push
push
push
xor
sub
mov
push
mov
mov
pusha
pop
and
int3
adc
sub
xchg
icebp
inc
shrb
repnz
adc
adc
pop
xchg
push
add
sub
rcl
lret
dec
add
das
adc
cs
inc
enter
xor
std
add
push
jo,pt
out
push
sub
les
push
jecxz
push
dec
test
cltd
sarb
push
jns
insb
mov
outsb
or
nop
push
xlat
xor
add
in
loope
mov
adc
pusha
mov
sub
dec
sbb
push
push
pop
push
jb
sub
ret
jp
jae
and
add
adcb
dec
xchg
xchg
orl
aad
and
and
addb
mov
mov
mov
and
in
push
push
or
inc
add
or
in
inc
mov
dec
sbb
sub
jb
dec
jle
or
scas
enter
mov
jae
clc
cmpl
imul
adc
jb
sbb
xor
pop
pop
jae
adc
ret
pop
ds
push
jg
out
test
jo
push
ja
xor
sub
adc
pop
ds
xor
mov
adc
mov
sbb
add
lds
push
push
dec
pop
push
add
pop
lds
sarb
sbb
dec
pop
pop
and
mov
xor
imul
push
in
insb
adc
push
icebp
adc
sti
jmp
subb
aad
jne
and
fs
push
xlat
in
mov
rorb
lock
push
aaa
pop
jmp
hlt
xchg
jp
bound
js
jge
jmp
xchg
push
addl
adc
mov
mov
dec
adc
push
and
sub
add
xchg
add
xor
xor
adc
lock
mov
lret
enter
push
and
rclb
mov
add
and
xor
aam
pop
or
and
sahf
jno
cmp
pushf
xchg
outsl
dec
pop
fildl
adc
push
inc
std
sbb
dec
or
fwait
sub
ja
sub
arpl
repz
mov
or
inc
insl
adc
xchg
cs
out
or
andb
sub
jo
adc
sbbl
repnz
cmp
sbb
les
mov
jae
je
or
fcomps
and
and
bound
lret
bound
in
ret
push
mov
scas
aam
or
out
roll
mov
stos
xor
and
mov
cmpsl
rorb
xor
pop
ja
rolb
adc
xchg
cmp
nop
and
andb
js
dec
orb
or
orl
dec
addr16
and
adc
test
xchg
inc
ja
insb
pop
sbb
imul
sbb
add
sub
mov
outsl
sbb
and
cmpsb
xchg
dec
test
or
rcll
insl
mov
inc
sbb
sbb
and
push
mov
sarb
js
jecxz
outsl
inc
inc
outsb
cmpsb
adc
cmpsl
and
xor
lock
fs
les
push
hlt
push
sub
imul
cmpb
aaa
fcmovnb
adc
sbb
jge
pop
dec
add
incl
addr16
push
sbb
push
cmpsb
mov
cltd
jnp
add
rcrl
pop
daa
mov
shl
mov
jmp
ret
sbb
jns
pop
jmp
cmp
xor
pop
add
sub
add
cli
cmp
ja
xchg
add
sbb
daa
pop
loopne
jecxz
inc
sub
aas
pop
xchg
popf
xor
or
or
mov
sub
dec
mov
jnp
je
sub
or
je
or
pop
rcr
fidivrl
add
movsl
jo
dec
jbe
add
adc
xchg
sbb
xchg
loopne
sub
push
jge
stos
lods
rcll
adc
jmp
mov
mov
cmpsl
lret
popf
add
xor
popf
push
add
gs
xchg
arpl
mov
decl
insl
pop
and
jl
je
mov
adc
or
and
sub
pop
decl
lret
cmpl
jbe
lea
and
push
pop
rorb
shll
and
cmp
adc
pop
gs
fcomp
sub
push
or
xchg
lcall
lcall
mov
dec
or
add
push
hlt
jo
jle
add
leave
fcompl
int
inc
dec
adc
pushf
and
ljmp
lea
nop
in
add
mov
mov
fmul
add
xorl
inc
mov
insb
jns
clc
test
push
hlt
bound
nop
push
push
rorb
mov
shlb
enter
je
sub
xchg
xor
inc
adc
and
xchg
pop
inc
or
mov
adc
pop
xchg
inc
popa
clc
push
sahf
popf
xor
ja
and
pop
movsl
pop
fs
push
mov
push
mov
mov
adc
cmp
enter
sub
sbb
lcall
adc
test
lcall
rcrl
sub
push
sub
mulb
sub
dec
xor
xor
lcall
inc
inc
cmpsl
rol
dec
inc
lea
lods
inc
push
in
rcr
pop
pop
xor
push
pop
pop
push
inc
testl
xchg
adc
push
and
aam
sahf
stos
in
pop
fmuls
popf
and
into
dec
or
inc
dec
add
cmpsl
mov
lcall
push
mov
pusha
or
fisubs
pop
xchg
cmp
pmaxub
inc
add
pop
add
xorl
pop
xchg
push
test
add
add
nop
adc
push
dec
sbb
xor
or
aam
mov
mov
xor
ljmp
adc
xor
test
push
outsb
and
and
out
fwait
pushf
add
and
hlt
es
insl
or
sub
ficoms
sub
pop
fs
mov
mov
aas
mov
mov
int
ds
sub
and
je
lods
mov
insl
xor
mov
push
repnz
mov
outsl
mov
mov
xchg
lea
mov
adc
rcll
xor
add
scas
dec
lahf
notl
xchg
or
mov
dec
add
or
daa
cs
jo
jge
or
inc
push
loopne
fidivs
push
aam
fidivl
mov
and
fcoml
add
inc
dec
dec
sub
add
icebp
adc
inc
inc
pop
adc
adc
add
or
push
adc
dec
insl
adc
push
adc
adc
adc
ja
adc
or
jne
pop
and
js
xchg
mov
cmp
dec
jbe
cli
xor
fsubl
test
cltd
sbb
dec
cmpsl
or
shlb
pop
cmp
je
lods
sub
rcrl
add
lea
xchg
pusha
aas
daa
sub
daa
push
push
ja
stos
test
mov
xchg
mov
idivl
ret
adc
aas
mov
push
les
clc
sbb
sbb
rcr
jns
xchg
mov
xchg
push
and
int
sub
sub
mov
xchg
hlt
dec
push
or
fimull
test
mov
imul
rolb
mov
fnsave
je
cmpsl
sub
inc
js
add
lcall
cmpsb
test
xor
push
data16
loop
fs
aam
push
or
jbe
fldl
xor
push
and
cmpnleps
xor
clc
lods
push
movsb
fnsave
jp
data16
xor
les
mov
cmp
inc
sarb
push
pop
mov
bound
push
mov
aad
add
popa
daa
xor
mov
nop
add
pop
rorb
inc
push
push
adc
shll
in
adc
sub
or
mov
cli
and
ret
ret
mov
jnp
jns
xor
inc
cmpsb
xchg
test
mov
push
xor
cmp
into
adc
dec
cmp
loope
mov
movl
push
test
sti
gs
jbe
push
out
cmc
add
repnz
add
pop
push
cmp
add
pop
add
test
popa
loope
cmp
xor
jne
leave
mov
or
fnstsw
cmc
test
push
push
mul
xchg
and
push
dec
cmp
and
mov
mov
push
cmp
ds
mov
mov
xor
sub
push
inc
jno
cmp
incl
pop
mov
pusha
fs
add
jb
cwtl
mov
push
push
inc
sub
mov
mov
xlat
add
test
popa
sbb
adc
mov
mov
inc
pusha
repnz
imul
pop
xchg
pop
push
xor
das
xchg
enter
xchg
setl
mov
int3
out
xor
fsub
bound
sbb
sbb
cmpsl
and
dec
lods
pop
icebp
mov
mov
pop
mov
pop
inc
xchg
lods
xchg
sbb
inc
and
xor
add
sub
adc
dec
fadds
sub
xchg
subl
dec
sbb
push
cmp
cs
les
scas
pusha
cltd
cwtl
frstor
jl
jo
lcall
xchg
xor
test
sbb
push
cmp
jecxz
je
or
add
pcmpgtw
mov
mov
loope
sub
sahf
lea
std
cmp
jle
sub
sbb
add
cmp
lret
xchg
push
jle
mov
cmpb
mov
stos
push
scas
lret
enter
or
cli
sbb
fists
leave
bound
fmul
adc
in
xchg
cmpsl
push
add
cmp
sbb
add
dec
fdivs
nop
cmp
je
adc
push
in
mov
insl
or
mov
aad
fwait
push
mov
xchg
stos
or
jbe
cwtl
into
dec
jne
mov
nop
mov
add
repz
fisubs
sub
cmp
push
mov
negb
gs
loop
inc
inc
lret
cmpb
or
adc
movsb
mov
and
or
pop
sub
add
push
inc
lcall
sub
sbb
enter
sub
dec
sub
cld
add
jne
iret
stc
movsb
dec
or
icebp
leave
xchg
and
mov
and
fldl
inc
xchg
sahf
sbb
mov
mov
or
mov
and
inc
les
pop
sbb
xor
dec
adc
fisubrl
xlat
iret
shrl
push
sbb
repnz
xchg
sbb
mov
lret
inc
ja
aam
loope
icebp
xor
es
int
mov
ret
repz
hlt
and
sbb
add
loope
jg
sbb
js
in
test
ja
ljmp
push
mov
and
mov
or
jb
sbb
je
xchg
shr
push
cmp
or
fnstcw
or
cmpsb
or
pop
in
push
dec
add
push
and
pusha
pushf
and
pop
mov
push
push
outsl
push
popf
add
jl
sbb
adc
pop
cmpsb
or
aaa
mov
ss
mov
int
mov
insb
sbbl
push
mov
lcall
xor
lods
xorb
inc
clc
pop
outsb
sbb
xorb
sub
and
push
repnz
xchg
insb
divb
xlat
cmp
into
mov
add
and
adcl
jl
mov
loopne
push
fidivs
cmc
jmp
jmp
dec
push
mov
adc
data16
int3
xchg
push
and
movsb
leave
test
add
add
pop
sbb
sbb
pusha
addr16
pop
lea
scas
loopne
push
jo,pn
push
mov
mov
pop
push
cli
push
es
mov
add
or
and
sub
jl
imul
inc
dec
inc
ss
insl
imul
es
movsl
verr
popa
mov
inc
cmp
popa
loopne
push
shll
mov
cld
dec
add
adc
mov
insb
inc
jl
mov
xchg
sbb
mov
or
aas
mov
mov
sbb
fwait
out
sub
xor
push
or
add
icebp
xchg
fldl
push
xchg
xchg
sbb
xor
dec
adc
test
or
push
dec
cltd
scas
insl
call
pop
sbb
dec
dec
arpl
addl
push
cmp
jl
nop
and
sub
dec
xor
inc
and
push
fsubl
xchg
push
je
or
movsl
pop
movsl
shrb
push
dec
inc
xor
xor
sbb
xchg
push
mov
jns
or
sbb
popa
xchg
mov
or
in
sub
loop
xor
insl
popa
sbb
addl
add
inc
cmpl
jle
mov
push
sahf
or
inc
sbb
add
pop
and
fsubr
xor
xchg
test
push
cltd
push
cwtl
lret
mov
lods
cmp
jge
or
mov
sub
cmpsb
cwtl
out
push
scas
jl
adc
dec
ret
mov
mov
fs
inc
lock
ja
inc
or
pop
movsl
test
pop
aas
mov
lds
or
dec
call
jno
cmpb
repnz
add
or
shlb
mov
nop
nop
aas
in
add
scas
xchg
sub
push
andl
sub
cmpl
test
adc
sbb
or
popa
or
sub
ds
inc
int3
jmp
pop
push
shrb
dec
sub
mov
data16
xchg
jo
sub
push
fadd
inc
out
xchg
xor
hlt
and
push
or
jae
add
dec
out
jg
pop
dec
or
push
and
inc
push
jmp
dec
dec
test
pop
cld
or
cmp
or
and
and
xor
and
popa
jnp
sub
aaa
in
xchg
push
push
push
xor
add
or
sub
ljmp
ret
sub
dec
or
test
jnp
xchg
sub
jge
xor
fsubr
mov
adc
sarb
jns
aas
pop
push
or
dec
das
dec
mov
adc
fs
xor
fistpl
pushf
popf
xor
adc
cmp
and
jno
mov
iret
cmp
shrb
adc
adc
sbb
xchg
pop
imul
xor
insl
nop
cmc
dec
adc
and
dec
or
pop
popf
outsb
popa
pop
inc
mov
xchg
or
adc
xchg
fwait
arpl
adc
add
and
push
or
mov
sbb
mov
add
lods
inc
inc
test
inc
mov
mov
pop
pop
adc
dec
mov
cmc
outsb
daa
loope
ljmp
push
sbb
mov
inc
cltd
dec
cld
mov
jge
push
lock
mov
mov
inc
push
adc
adc
je
or
sbb
fldl
push
jmp
bound
or
mov
or
and
push
sbb
lret
shrb
and
in
mov
mov
xor
std
or
ret
cmp
adc
movsb
push
jns
cmp
and
jmp
addr16
xchg
xchg
pop
cmp
add
cmp
ja
sub
xor
sub
cmp
scas
in
sub
arpl
jmp
fcmovb
lcall
sbb
cmp
mov
inc
adc
jp
test
xchg
xor
push
jecxz
rcll
mov
inc
or
dec
push
xchg
negl
popf
outsl
call
mov
ret
xor
lahf
add
nop
pop
jge
inc
das
and
jo
mov
test
mov
enter
js
adc
inc
addr16
mov
jmp
dec
ret
inc
or
cld
sub
add
frstor
daa
mov
add
aaa
test
loopne
xchg
rorl
inc
or
insl
adc
adc
dec
sub
rolb
push
mov
repnz
scas
scas
inc
jp
xor
je
and
jne
adc
jns
sub
adc
sarl
and
imul
sub
pop
or
inc
dec
repz
ret
sub
cmpsl
add
lock
mov
and
jecxz
test
adc
xor
icebp
lods
fsubrl
xor
push
lea
adc
adcb
aas
pop
mov
test
push
xchg
das
adc
int
into
aam
dec
add
pop
inc
popa
sub
in
fs
aam
pop
pusha
dec
insb
inc
sbb
in
push
outsl
sbb
mov
out
mov
add
add
jl
push
lcall
je
or
sbb
sub
rclb
dec
movsl
rclb
sbb
push
sub
sbb
pop
and
loopne
push
add
mov
cmp
jne
mov
pop
ficomps
ret
mov
or
mov
add
mov
or
neg
and
movq
adc
fimuls
std
sbb
add
mov
stc
cmp
xlat
mov
pusha
pop
mov
add
pushf
sub
jl
xor
xchg
xlat
cmpb
mov
push
push
pop
xorl
lods
rcrl
and
push
jmp
ficomps
outsb
adc
outsb
sbb
enter
sbb
and
push
pop
pop
pop
popf
inc
les
loope
ljmp
inc
ss
test
xor
lock
repz
sbb
sbb
dec
nop
cmp
jmp
cmp
jmp
adc
add
out
lock
cmp
push
or
jmp
dec
iret
mov
in
or
adc
cmc
push
inc
adc
or
scas
or
jbe
out
fcompl
push
loope
pop
or
popa
addr16
out
in
or
and
adc
lods
add
rolb
xor
or
or
mov
sbb
loopne
shr
les
push
add
into
push
dec
push
lret
sti
aam
inc
movsl
aas
mov
push
cmp
add
test
mov
or
cmp
jne
dec
mov
or
adcb
or
loope
inc
andb
xor
and
sub
dec
mov
and
inc
ljmp
fiaddl
pop
out
int3
das
or
add
jae
push
inc
sbbl
rolb
push
je
stos
xor
sbbb
arpl
rolb
dec
inc
push
mov
subl
pop
push
dec
and
adc
sarl
xchg
push
pop
xor
pop
jb
inc
test
enter
or
je
jmp
mov
mov
xor
adc
mov
aaa
adc
xchg
popa
adc
cs
xor
add
xchg
push
or
pop
jns
xor
push
fs
movsb
mov
sti
inc
test
and
xchg
or
icebp
adc
decb
xchg
pop
or
xor
outsl
inc
int3
mov
cmp
cmp
loop
lock
pop
push
jae
dec
dec
cmpl
sub
mov
das
mov
sub
pop
and
call
adc
cmp
mov
das
shlb
cmp
mov
mov
push
push
andl
stos
push
jbe
lea
push
or
sbb
inc
xchg
dec
outsl
mov
jns
sbb
mov
out
inc
mov
inc
and
pusha
testl
cmp
jl
dec
push
or
sbb
adc
or
add
dec
sbb
fidivrl
mov
ss
mov
add
push
lret
adc
rclb
push
sub
pop
add
lock
icebp
enter
shlb
das
mov
jmp
dec
add
adc
shll
or
and
inc
cmp
jl
rcrb
or
jmp
add
push
cmp
jg
mov
xor
into
mov
or
add
adc
inc
mov
push
rorb
ror
sub
adc
sbb
imul
mov
mov
sbbl
pop
push
dec
enter
and
shrb
inc
fs
xor
adc
test
add
pop
xchg
lods
lea
add
rol
inc
inc
and
popa
dec
sbb
mov
loop
pop
ret
push
add
sub
cmp
push
mov
rclb
test
aas
mov
push
ds
push
cmpsl
push
pop
inc
push
xchg
mov
out
mov
xchg
divb
adc
lods
test
and
insl
dec
imul
mov
pop
or
inc
fwait
dec
insl
loopne
push
push
adc
push
sahf
loopne
add
sarb
and
fisubrs
mov
outsb
add
popa
fldl
sbb
push
and
sbb
pop
out
and
repz
aam
inc
adc
cwtl
pop
mov
pusha
dec
mov
add
pop
xchg
insl
xor
sub
add
push
mov
lock
pop
ds
in
or
test
cmp
xchg
inc
or
out
xchg
sbb
and
andl
sbb
out
clc
repz
inc
pushf
xor
in
inc
jne
popf
out
fisubs
push
sbb
push
andb
push
arpl
arpl
inc
push
dec
addb
das
dec
adc
clc
cmp
add
add
out
sub
and
jbe
push
roll
dec
pop
inc
aas
test
inc
jmp
aas
dec
xor
loopne
out
or
outsb
and
push
inc
test
stos
xor
adc
xchg
push
push
mov
push
xor
loope
mov
out
pop
adc
and
fmul
add
lock
cmc
push
mov
sub
ret
ret
sbb
add
jl
icebp
adc
jb
dec
add
inc
pop
lock
push
ja
in
call
in
xchg
cmpsb
jno
push
and
adc
lcall
mov
sar
sahf
lahf
fbld
mov
and
sbb
add
sar
mov
push
fdivr
push
lret
push
scas
outsb
xchg
and
mov
adc
add
push
sbb
scas
sub
sbb
adcb
dec
inc
fldl
nop
in
mov
sub
je
mov
or
push
fildll
inc
mov
fldl2e
inc
jecxz
fsubl
mov
aas
push
adc
and
ja
outsl
mov
test
test
mov
inc
in
jo
aam
jp
push
inc
or
adc
aaa
insb
dec
dec
cmp
cmp
push
cwtl
in
dec
or
jbe
mov
lea
mov
inc
mov
add
adc
add
mov
add
mov
sbb
pop
and
push
xor
cmovge
push
icebp
iret
xorb
enter
lea
adc
mov
in
sbb
je
dec
push
sbb
jne
xor
push
xorl
outsb
repnz
adc
arpl
pusha
cmpsl
mov
lea
in
test
adc
sub
mov
cmp
mov
int3
adc
inc
inc
and
dec
sub
or
shrb
lret
sbb
pop
pop
and
scas
mov
inc
add
xlat
add
xchg
xchg
insl
xchg
lcall
dec
sbb
xor
rcr
sub
inc
fs
popa
mov
testb
and
lods
clc
and
mov
xor
jg
adc
push
add
inc
and
jle
mov
xchg
push
dec
xchg
and
jns
jge
rcll
arpl
nop
adc
outsb
shll
test
xor
or
or
xchg
shll
push
loopne
popa
mov
mov
xchg
and
sbb
mov
xchg
or
lahf
add
push
int
mov
inc
mov
cmp
pushf
sbb
jp
adc
jne
mov
cmp
cmp
add
adc
add
movsl
mov
mov
or
sarl
lods
sub
inc
rolb
dec
daa
aad
adc
sbb
mov
clc
cmc
add
int3
inc
adc
ret
xor
and
and
xchg
push
repnz
sub
mov
push
jg
pop
orb
sub
jle
bound
loopne
test
outsb
sub
xor
xor
sub
sbbl
loopne
sub
lock
sub
or
xlat
sbb
add
pusha
cwtl
mov
mov
or
adc
xchg
pop
or
cmp
sub
cs
jp
loopw
mov
inc
jne
and
and
sub
ret
lds
insb
add
js
push
test
adc
hlt
movsb
andl
or
push
push
pop
lret
lods
adc
mov
popl
push
jo
rorb
out
cmp
add
mov
xor
push
lock
sub
xchg
jbe
add
cmp
and
inc
add
pop
fldcw
lcall
ds
fisttpl
cmp
dec
mov
push
sbb
in
xchg
xor
mov
pop
notl
adc
das
and
cmpl
and
sti
mov
sub
add
shll
mov
jne
cmc
mov
pop
xchg
movsb
inc
mov
push
shll
jmp
sub
inc
mov
stos
jmp
sbb
jbe
push
fsubrl
outsb
inc
clc
sub
push
xlat
and
and
push
pop
and
push
stos
sub
inc
lds
adc
repnz
xchg
mov
inc
push
clc
push
xor
xchg
movsl
sti
out
jge
mov
mov
cmp
lock
mov
imul
xchg
std
push
sbb
mov
push
bound
jno
push
imul
hlt
aad
jmp
aam
pop
adc
and
xchg
jmp
push
rep
sarl
das
je
movhlps
dec
out
or
cmp
sbb
data16
out
test
fwait
cmpsb
cmpb
adc
sbb
pop
sub
movsl
xor
mov
dec
imul
cmc
js
mov
mov
mov
pop
push
outsb
shll
mov
rcrb
adcb
or
mov
test
lcall
icebp
push
jne
jno
loop
in
push
in
inc
and
add
insb
or
push
pusha
scas
cmp
ficoml
sbb
xchg
jae
cmp
shlb
push
lret
add
mov
mov
and
jl
stc
mov
xorb
loopne
dec
jbe
jne
mov
add
sbb
je
mov
sbb
pop
add
es
mov
cltd
jle
lea
mov
stos
add
mov
add
inc
inc
push
sub
add
das
pop
mov
mov
cmp
cmp
xchg
inc
push
ret
jecxz
aam
push
aas
mov
inc
pop
mov
mov
push
dec
mov
dec
cmp
fdivs
dec
jo
or
jl
loop
sbb
ljmp
jle
stos
addb
mov
mov
sbb
pushf
sub
sti
push
je
push
dec
xchg
and
mov
xor
sbb
mov
mov
andb
dec
sub
xor
test
sbb
jne
push
icebp
or
gs
inc
aam
test
xchg
inc
jge
xchg
xchg
xor
sub
mov
or
mov
stc
push
jl
or
jp
xor
xchg
and
cmp
mov
mov
testb
cmpl
shr
mov
call
mov
les
mov
rorl
mov
sub
lcall
adcb
fs
aad
jbe
fildl
call
lods
adc
js
jo
fs
orb
sub
pop
pushw
mov
lods
jb
arpl
mov
sahf
mov
xor
mov
jno
jo
aaa
adc
pop
cli
cmp
orl
aad
shr
loopne
inc
inc
and
cmp
cmp
lods
xchg
out
add
inc
jp
xchg
mov
adc
nop
enter
shlb
mov
adc
adc
sbb
adc
xor
xchg
shrl
xlat
xor
sub
and
pop
test
rorl
cwtl
pop
mov
xchg
mov
xor
xor
fcomp
enter
sti
pop
fidivrl
arpl
nopl
insb
dec
ja
add
add
xor
adc
and
fistpl
sbb
jo
or
divb
cld
ret
in
lea
xchg
push
push
adc
loopne
inc
subb
jb
gs
mov
dec
xlat
inc
mov
xchg
cli
xchg
les
cwtl
mov
jmp
xlat
add
adc
inc
pop
and
dec
sbb
mov
adc
add
adc
mov
mov
sbb
pop
fisttpl
loopne
dec
pop
pop
push
outsl
mov
inc
add
sbb
sbb
fcoms
jg
movsb
adc
push
inc
add
push
push
xchg
lahf
data16
adcb
loopne
add
stc
xor
cs
pop
cmp
xor
inc
or
pusha
cmp
mov
or
ljmp
std
dec
icebp
rcll
or
xchg
test
fadds
popa
mov
adc
mov
cmp
rorb
push
imul
inc
or
push
lcall
test
xchg
cmpsb
sbb
push
imul
shlb
xor
repnz
fisttpll
loop
sub
push
sub
sahf
pop
nop
add
push
into
add
dec
and
pusha
nop/reserved
mov
test
and
or
lahf
mov
js
mov
fwait
sarb
les
sbb
fistpl
or
mov
jle
out
and
sub
or
loop
mov
ret
xchg
xchg
inc
dec
adc
sub
pop
mov
ljmp
jbe
adc
daa
add
rolb
push
dec
pop
sub
dec
jo
rclb
inc
mov
notl
jle
xchg
pop
insl
std
icebp
adc
mov
mov
push
cmp
cmpsb
adc
nop
movb
pop
add
push
pop
add
sbb
sub
dec
or
scas
rolb
or
or
sbb
sbb
outsb
add
imul
push
sub
adc
and
mov
mov
or
push
mov
andb
add
push
jo
fmulp
fwait
loop
ss
sub
add
mov
in
dec
mov
cmp
inc
insb
add
add
dec
dec
ret
loope
cmp
mov
mov
lds
push
sarb
adc
repz
xor
xchg
push
push
addb
stos
ret
xchg
shl
popa
lods
cmc
push
in
jge
xchg
add
or
inc
add
sbb
cmp
push
mov
pop
dec
xchg
cmpb
movb
sbb
mov
xchg
dec
pop
mov
pop
adc
pop
or
xor
fmulp
out
dec
add
mov
xchg
outsb
sbb
mov
inc
mov
nop
mov
mov
inc
sub
sub
rolb
ss
gs
sub
pusha
roll
jecxz
ljmp
push
ret
inc
mov
cli
dec
fimuls
test
adc
push
xchg
insl
push
mov
into
cmpsl
sbb
pop
pusha
or
sbb
sub
mov
mov
out
pop
mov
clc
xchg
sub
inc
cmpl
test
fs
lahf
sbb
testb
push
out
sub
fwait
jae
lds
dec
or
popa
sub
outsl
inc
mov
loopne
addr16
decb
stc
shlb
dec
add
push
xor
xor
dec
push
jns
push
je
adc
and
xor
add
cmp
or
pop
test
data16
add
cmp
mov
or
jle
and
adc
into
movzwl
push
mov
and
mov
adc
xchg
adc
push
or
adc
outsb
jo
pop
fdiv
add
pop
ret
sbb
jnp
add
push
cmp
push
inc
and
pushl
inc
add
insl
pop
loope
mov
jns
mov
fdivs
outsl
lods
jmp
push
cs
sti
push
add
cli
jecxz
mov
and
mov
cmp
xor
call
mov
jae
popa
push
xchg
cmp
dec
mov
adc
mov
mov
jge
ret
scas
sub
mov
and
jge
sub
cwtl
cwtl
dec
jecxz
lods
cwtl
mov
fnstsw
enter
inc
jle
ret
rclb
add
lock
lea
jl
and
adc
mov
fldenv
push
mov
aas
packuswb
imul
pmullw
inc
inc
push
stc
mov
sub
inc
call
outsb
push
push
sbb
ds
push
pop
and
ljmp
add
sbbl
jo
imul
sti
push
pop
jle
inc
add
push
pop
pop
mov
repz
pop
jg
pop
ret
ja
push
jne
push
aad
push
add
clc
mov
add
push
add
add
add
jg
or
push
or
ret
cmp
movmskps
iret
add
imul
fnstenv
inc
sub
xor
adc
xor
jnp,pn
out
or
add
sbbl
jo
push
fdivs
dec
lods
xchg
push
sahf
sbb
add
sbb
and
jge
mov
ficoms
and
and
lret
lret
lret
leave
xlat
roll
jle
adc
mov
dec
test
imul
es
xchg
jne
jo
aaa
jne
jmp
pop
or
sbb
lea
mov
dec
mov
pushf
mov
push
sub
xchg
imul
rorl
inc
push
xor
adc
push
cmp
bound
fcomps
mov
add
daa
imul
and
cmp
xor
xchg
push
lock
insb
cwtl
push
xor
mov
sub
test
adcb
sbb
sbb
add
sbb
sar
inc
jg
pushw
adc
shr
cmp
jae
mov
add
rclb
jmp
or
dec
stc
push
mov
ret
sub
fimull
js
ficoml
lret
clc
cli
jmp
and
enter
test
mov
loopne
adc
scas
je
jbe
rcrl
jl
test
or
mov
testb
jp
mov
mov
mov
push
cmp
cmp
mov
adc
loope
adc
mov
lret
adc
push
add
inc
pop
push
sbb
test
jbe
inc
mov
lock
jecxz
jle
fbstp
and
jl
mov
test
inc
mov
cmp
inc
das
pop
or
add
aam
outsb
lock
insb
cmp
and
adc
jo
sbb
je
and
push
sbbb
jg
outsl
into
add
and
xorb
cmpsl
test
shrl
cwtl
push
jb
adc
xor
sbb
std
scas
sbb
shr
fistps
shr
aas
adc
xchg
outsl
inc
push
sub
subl
xor
adc
lea
jg
fstl
rclb
inc
sub
pop
push
cld
es
xor
dec
pop
add
sarb
push
sbb
fwait
rolb
inc
inc
add
loopne
or
jb
xchg
jno
push
outsb
pop
xchg
mov
push
or
sbb
repz
sbb
and
push
inc
loope
and
mov
xchg
addr16
jecxz
mov
add
or
movsl
inc
rolb
call
cmpsl
negb
cmc
inc
xor
push
imul
pop
push
push
push
cmp
inc
cmpsb
add
test
iret
or
sub
movsb
xor
shl
pop
sbb
add
adc
dec
jle
test
sbb
and
and
xor
and
sbb
fs
test
adc
inc
jle
sub
push
testl
mov
xor
sbb
mov
mov
xor
enter
sub
adc
push
dec
jbe
mov
sbb
fsubs
mov
sarl
adc
jmp
cmp
orb
mov
adc
das
mov
or
pop
or
xchg
push
inc
push
mov
or
or
stos
test
cmp
iret
aaa
mov
mov
dec
xchg
adc
call
fs
jp
push
add
cmpsl
mov
push
cmpsl
and
adc
outsb
mov
pop
mov
ja
push
fcmovu
cmp
insl
sub
fadds
push
sub
jge
rcrb
jp
ss
pop
jl
pop
push
adc
or
push
lret
les
imul
push
fcmovnb
imul
movsb
xor
add
push
cmp
adc
push
aaa
adc
push
inc
cmp
in
pushf
fwait
push
or
or
shrl
mov
xor
test
shufps
jp
jns
xchg
sbb
add
adcb
scas
add
cmp
loope
push
rorl
dec
outsl
arpl
cwtl
pop
mov
daa
and
push
sbb
push
hlt
lret
cmp
sub
push
loope
sbb
shrb
jl
sbb
cmpsl
push
sub
sbb
out
stc
xor
cmpsb
lds
imul
pop
or
push
in
mov
pop
jmp
push
shrd
add
mov
or
sub
cmp
jg
and
push
mov
sbb
push
push
dec
subb
lcall
push
push
imul
and
or
leave
push
rcrb
and
cmp
jne
pop
mov
push
std
add
nop
push
out
and
daa
push
cmp
movsl
add
pop
lahf
xor
fsubl
mov
popa
repz
pop
movl
inc
mov
movsl
push
sub
add
ja
int3
test
or
imul
out
and
dec
jmp
outsb
push
push
jne
xchg
cs
cmp
or
lock
pop
jno
adcl
pusha
push
xchg
add
or
jns,pn
out
push
dec
push
and
daa
or
mov
addl
add
pop
xchg
insl
xor
add
inc
adc
pusha
xchg
clc
push
push
out
dec
inc
es
push
sbb
sbb
dec
test
bound
out
pop
jns
push
cwtl
sbb
adc
pop
mov
or
or
je
imul
popa
cmp
scas
xchg
repz
stos
cmp
shlb
pop
adc
and
subb
daa
sbb
mov
notb
inc
adc
mov
sbb
xor
fstl
mov
add
fisttpl
fldenv
test
hlt
or
push
test
xor
pop
xchg
mov
divb
outsl
loope
pop
or
jmp
bound
sub
push
inc
sub
xchg
xchg
add
sub
inc
mov
dec
or
jl
pushf
add
push
adc
cmp
push
push
pop
mov
adc
push
aaa
or
push
dec
mov
push
pop
mov
js
dec
dec
rcl
movsl
idiv
xor
cmp
xor
andl
fidivrs
outsl
fmul
pushf
cmpsb
sub
repz
cld
jb
in
mov
imul
adc
addb
in
dec
shrb
out
jb
push
adc
imul
push
andb
rclb
xlat
in
hlt
mov
mull
pop
mov
js
int
pusha
leave
mov
repz
in
push
mov
into
mov
push
push
xchg
aaa
das
imul
mov
fs
dec
mov
adc
cmp
dec
lods
fidivl
inc
and
xor
sub
xor
mov
ss
call
and
or
push
fists
sub
add
cli
loopne
sbb
or
pop
cmp
jmp
mov
cmc
pushf
push
jae
mov
sti
mov
jo
sbb
repnz
adc
mov
or
fmull
shrl
mov
add
std
jle
cmp
aad
xchg
fcmovu
imul
xchg
mov
jmp
mov
xchg
pop
ret
aaa
out
gs
xchg
sub
out
fsubp
js
cmp
xchg
mov
repz
mov
or
pop
sbb
ss
frstor
mov
mov
imul
cmpsb
rcrb
xor
bound
or
pop
aam
lods
add
add
in
add
or
mov
mov
addr16
jbe
xchg
stc
dec
addb
mov
cld
out
inc
add
icebp
pop
or
and
mov
mov
mov
nop
sbb
mov
cmp
or
mov
push
sbb
inc
or
dec
xor
sbb
pop
and
sub
aam
add
ljmp
in
ljmp
seto
xchg
push
pop
jp
pop
test
dec
adc
cs
xor
xor
je
jne
inc
and
sarb
add
or
sbb
push
xchg
mov
add
adc
pop
mov
test
push
xlat
cmp
fst
nop
testb
fcomp
pop
xor
xor
cmpsl
sub
cmp
and
push
imul
imulb
and
dec
push
cmp
in
mov
insl
lcall
jmp
gs
push
enter
mov
sub
rclb
adc
test
push
shr
xor
push
pop
out
pop
test
test
adc
adc
in
jp
push
mov
inc
inc
push
inc
test
ret
cli
sub
dec
lea
lahf
push
addr16
mov
cmpb
ss
repz
push
add
jne
or
stc
and
inc
xchg
and
dec
dec
arpl
arpl
cmp
je
add
pop
out
out
add
jp
ret
add
loope
mov
push
dec
pop
cmp
shl
jmp
cmp
mov
cmpsb
repnz
insb
popf
sub
ss
leave
push
and
push
cmp
movsb
pop
pop
cmpsl
jmp
into
pushf
out
fisubs
push
cs
sbb
cwtl
or
adc
dec
or
test
push
cmpsb
dec
push
mov
add
ljmp
cmp
ror
xor
fs
adc
imulb
cs
push
xchg
jl
push
js
add
les
cmp
jb
add
cmp
mov
mov
pop
add
fildl
sbb
aaa
xchg
add
add
ss
or
out
test
jp
push
jg
xlat
add
sub
sub
dec
xor
shlb
mov
mov
adcb
les
cmp
sbb
xor
push
add
addr16
mov
shll
jns
jmp
sub
and
movsb
test
xlat
lds
xorl
inc
jno
sub
roll
xor
add
and
cmpsb
lret
push
into
mov
push
add
mov
or
aaa
mov
dec
inc
repz
or
or
push
stc
push
cmc
adc
add
sub
test
dec
jp
mov
adc
fmulp
cmp
add
xchg
add
or
xor
sub
movsb
cmp
add
test
adc
aaa
sbb
adc
add
fnstsw
fadds
mov
clc
cmp
insl
movsb
je
and
roll
jnp
sub
fisubrl
and
pop
sbb
out
jo
xor
cmp
push
xchg
fwait
dec
ljmp
xor
pusha
cltd
xchg
dec
rorl
and
nop
inc
inc
adc
pop
and
dec
mov
inc
and
mov
add
add
lods
dec
loope
roll
cmp
and
mov
xor
push
fldt
cld
outsb
add
outsb
xchg
in
nop
add
or
mov
inc
adc
aas
push
inc
cmp
adc
and
xor
jl
data16
pop
jmp
mov
pop
jae
call
cmp
sub
jmp
out
adc
test
or
xchg
inc
sbb
sub
fisubl
in
sbb
mov
xor
loope
mov
mov
or
int3
sbb
js,pn
je
nop
mov
inc
xlat
ret
cmpsb
dec
aaa
leave
popa
sbb
cmp
mov
pop
sub
push
dec
pop
mov
aam
or
idivb
sbb
movsb
or
es
fmulp
in
ss
xchg
sbb
outsb
sbb
inc
pop
add
and
xchg
xchg
movsb
mov
or
dec
push
in
mov
sbb
jle
pop
cmp
cli
mov
insb
or
sub
or
mov
pop
adc
jae
andb
cmp
arpl
sub
or
mov
mov
cmp
pop
cmp
scas
es
insb
test
mov
notl
pop
popa
or
ret
xorl
loopne
jne
push
or
insl
jl
mov
sub
data16
iret
mov
pushf
aad
sti
inc
sbb
xchg
popa
adc
jp
xchg
lds
add
mov
icebp
xor
call
and
ret
and
lcall
je
xor
insl
cltd
bound
scas
mov
push
dec
jbe
dec
ror
inc
sahf
pop
imul
or
xchg
insl
ss
add
jo
in
xlat
test
xor
xchg
int
add
xor
push
sub
push
sahf
xchg
adc
adc
pop
add
mov
cmpsl
xchg
in
sbb
pop
movsb
mov
jecxz
adcb
divb
push
enter
mov
mov
jp
dec
add
andb
enter
popf
dec
dec
leave
aaa
and
loop
fcompl
add
pop
push
mov
sub
out
mov
dec
jb
bound
pop
push
push
addr16
addr16
and
jno
jecxz
cmp
and
and
and
and
push
push
scas
cmpsl
mov
out
pop
insb
push
inc
sub
sbb
es
enter
pop
sub
adc
pop
inc
test
and
sbb
adc
inc
pop
mov
dec
pop
push
sbb
pop
sbbl
and
cmp
scas
fld
test
dec
and
shlb
stc
cmp
pslld
mov
cmp
and
out
jno
in
jne
mov
rcrl
adc
xchg
inc
mov
inc
inc
xlat
inc
pushf
push
les
inc
xor
pop
shrb
test
sub
add
movsb
mov
xchg
mov
jne
lahf
mov
test
lret
decl
dec
push
push
lret
add
nop
cmc
inc
fwait
popa
js
es
push
loopne
mov
or
fildll
jo
add
add
mov
mov
add
call
hlt
add
jns
daa
mov
push
jp
jns
out
movsb
into
jecxz
push
idivl
mov
cmp
inc
push
pop
out
call
push
loope
or
imul
outsb
lcall
cwtl
cmpsb
idiv
pushf
dec
cmp
cmc
lahf
orb
dec
ja
dec
or
ret
mov
arpl
ret
dec
push
xchg
les
addl
and
shlb
cmpsb
loope
inc
jb
test
xor
push
xchg
js
das
push
paddb
xlat
push
adc
xchg
and
mov
imul
insb
nop
push
push
movsl
cmp
or
and
mov
sbb
bound
jb
lods
cmp
xchg
jb
add
lods
outsb
add
loop
stc
clc
inc
test
shrl
iret
aam
mov
outsl
sarl
push
mov
scas
mov
pusha
xchg
imul
xchg
jg
or
add
and
flds
popf
dec
push
mov
jno
ucomiss
dec
cmp
repnz
ja
sbb
dec
sub
push
xchg
add
inc
pop
pushf
xor
out
call
inc
icebp
pop
movsb
and
sub
push
or
push
insb
push
test
lock
dec
clc
loop
rorb
push
xor
hlt
and
popa
subl
enter
mov
call
repnz
jb
loope
adc
inc
adc
jnp
add
imul
jb
jne
inc
or
movsl
add
movups
xor
dec
sbb
aaa
popa
lret
add
or
inc
leave
fadds
sahf
sub
sub
adc
inc
cmp
aas
push
or
mov
sub
stos
fwait
test
rolb
imull
rolb
shrb
add
xchg
ss
push
loope
div
lret
adc
add
data16
or
or
or
out
test
or
xor
lods
inc
addr16
movsl
sub
pop
add
in
jbe
out
std
mov
lods
jmp
adc
xor
sbb
adc
insl
mov
inc
test
mov
fs
mov
xchg
mov
loope
xchg
mov
cwtl
or
icebp
xchg
inc
loopne
mov
daa
dec
adc
sub
pop
rcll
outsb
add
pusha
xor
push
mov
in
lock
and
in
in
sub
sub
in
in
xor
in
cmp
in
inc
test
sbb
sbb
dec
add
sbb
sbb
push
mov
push
pushf
sbb
ret
add
cs
or
adc
jns
add
pop
cmp
cld
pop
xor
ret
push
test
xchg
mov
push
mov
jle
push
sub
insl
dec
jg
stos
adc
xchg
inc
cmp
xor
add
lcall
js
adc
fsubl
ja
ret
xchg
jle
push
xchg
pslld
movsb
add
add
lds
cmp
pop
pop
imul
xchg
orl
xor
xchg
mov
inc
out
ds
shl
pop
or
std
movsb
test
lea
mov
pop
sub
es
mov
and
adcl
pop
jns
adc
mov
sbb
mov
or
add
mov
dec
sbb
add
or
jb
out
mov
push
and
mov
add
in
jno
ret
xor
test
mov
adc
dec
aas
sub
sub
add
cmp
adc
test
cs
xor
adc
cmp
rolb
add
xlat
add
repz
sub
and
lods
xchg
dec
or
xor
outsb
xor
pusha
push
aaa
or
cmp
aad
lret
cmc
push
mov
mov
sti
test
and
fisubrs
push
rolb
add
jo
sbb
loope
mov
cmp
stos
inc
and
and
push
aam
idivl
adc
int
inc
sbb
dec
movsl
push
inc
pop
in
fdivrs
or
decb
std
lods
add
lock
add
lret
or
mov
movsb
xchg
sahf
add
pusha
xor
mov
or
dec
flds
fcmovbe
cmp
sbb
cmpl
fwait
js
adc
imul
add
test
cmp
push
mov
push
stos
and
mov
test
clc
mov
inc
or
daa
inc
push
lods
xor
imul
lods
cmpsl
aad
maxps
mov
ljmp
pop
or
cmp
or
xchg
add
and
lock
gs
ljmp
xor
in
rcl
in
dec
pop
jae
es
and
flds
pop
jbe
mov
adc
shrb
lret
das
sub
xchg
subb
cmp
add
sbb
popa
inc
push
fcoml
nop
ficomps
mov
les
mov
leave
jge
je
mov
add
mov
leave
adc
shll
movsb
enter
rolb
fsubrl
pusha
add
push
lcall
sbb
cmp
pop
mov
push
ret
mov
push
jno
push
sbb
mov
push
add
pop
or
bound
pop
jb
xchg
sbb
push
jg
lea
ss
jne
pop
ja
cmp
movsbl
loope
push
loopne
fldl
out
cmp
xchg
sbb
movb
imul
subb
push
pop
cld
sbb
xor
or
rcll
sub
add
push
push
push
ret
mov
xchg
adc
das
mov
je
cmc
jp
sbbb
push
ljmp
push
xchg
pop
push
jge
pop
lods
mov
add
mov
xchg
mov
popa
add
aas
inc
or
xchg
and
push
xchg
lret
call
or
mov
cs
xchg
push
and
push
lcall
adc
in
dec
sbb
in
in
jo
testb
outsb
jnp
sbb
ja
dec
xchg
add
mov
xchg
cmc
bound
gs
mov
je
shr
mov
xchg
lock
in
mov
fists
push
push
sub
cli
gs
mov
dec
jb
inc
jns
cmp
aad
push
rorb
movl
leave
ror
push
push
das
cld
mov
cmp
or
rcrl
in
pusha
mov
mov
push
inc
add
test
arpl
repnz
or
test
mov
stc
and
xchg
gs
inc
divb
test
imul
jns
adc
movsl
scas
mov
mov
dec
push
add
jmp
sahf
push
aad
out
push
or
lock
jnp
fisubs
je
push
lock
sbb
lods
loope
call
sub
lods
daa
sub
adc
dec
fcomps
push
cwtl
inc
insb
cmpsl
fsub
sub
pusha
mov
movsl
rolb
mov
push
into
push
cmp
or
or
jno
dec
or
sub
add
or
jb
push
cmp
sub
adc
arpl
mov
in
add
stc
add
push
jno
sarb
lods
sub
add
fwait
mov
jb
sbb
xorb
jle
mov
add
xchg
or
outsl
dec
leave
sub
mov
add
xchg
mov
cmp
pop
mov
jl
sub
sbb
inc
push
arpl
sub
repz
pop
mov
push
pusha
dec
orb
movsl
and
aaa
xchg
frstor
out
dec
lea
rorb
push
mov
adc
loope
shlb
push
xlat
and
adc
jge
stos
pop
xchg
sbb
pop
add
mov
lcall
cmc
and
mov
repnz
dec
inc
adc
pop
inc
jle
cmp
push
mov
mov
jns
pop
and
or
xor
repz
stc
add
xorb
sub
pop
sbb
sub
je
inc
inc
test
cltd
sbb
xchg
test
push
mov
and
push
mov
add
mov
jmp
leave
and
cmpsl
push
fstl
adcl
fstps
outsw
mov
cs
jb
mov
into
rcrl
push
loopne
add
fists
ficoml
adc
xchg
test
adc
adcb
dec
lds
mov
jb
add
and
cmpsl
test
push
inc
jp
add
sub
mov
adc
ret
xlat
jmp
push
add
push
movups
xorl
mov
push
push
adc
pop
das
in
mov
and
roll
push
or
jp
add
jmp
lret
movsl
or
mov
negl
xchg
xchg
lahf
mov
cmp
pop
adcl
mov
stc
call
cmp
jb
imul
lock
dec
int
dec
push
sbb
xor
push
add
dec
scas
xchg
push
cmc
fisttpll
adc
jge
or
neg
adc
cmp
push
sbb
movsl
xor
fnstcw
pop
sbb
and
xor
cmp
in
mov
xor
int3
jmp
cmp
into
and
and
push
sarl
enter
sbb
push
cmp
mov
mov
adc
push
adc
fidivrl
mov
mov
jae
jg
xchg
or
push
adc
test
or
mov
je
or
fwait
push
loop
ds
mov
mov
add
sbb
call
push
lahf
push
push
adcb
pop
add
loope
clc
movsb
pop
sub
call
lahf
sbb
xor
cmp
push
loope
adc
pop
stos
rcll
pop
add
in
mov
outsl
xor
js
push
jmp
xchg
pop
test
sub
push
push
sub
cmp
add
clc
push
ss
push
sbb
mov
gs
test
add
jecxz
lds
pop
outsl
xchg
xor
add
pop
and
das
jns
or
or
sub
add
mov
mov
adc
and
mov
mov
sbb
add
or
inc
dec
or
bound
jle
movsl
mov
aaa
mov
lock
inc
clc
ror
in
scas
pop
mov
and
sub
mov
ja
dec
movsl
dec
sbb
inc
jne
mov
sub
jmp
cmp
mov
cld
cmc
xchg
outsb
call
or
pop
pop
push
push
push
or
popa
pop
loopne
pop
mov
add
dec
add
mov
rorl
sbb
mov
stc
aad
jecxz
lret
mov
xchg
xor
add
nop
scas
mov
push
mov
leave
pop
mov
dec
push
add
mov
add
dec
frstor
insl
rorb
jle
fcmovnbe
add
push
pop
push
push
xchg
hlt
push
or
jmp
lea
shl
ds
sbb
and
mov
push
mov
cli
inc
push
int3
jo
aas
addr16
nop
and
dec
insb
pusha
fimull
xor
adc
mov
xchg
push
mov
pusha
mov
mov
mov
xor
and
and
and
mov
mov
dec
mov
nop
adcb
mov
xor
les
cmp
outsl
arpl
xchg
es
inc
stos
jg
aaa
jp
xchg
stos
inc
sti
fcom
and
in
sbb
jl
incb
cmp
push
and
fldz
ficoms
cmpb
mov
cmpsb
rclb
add
mov
negb
push
and
lret
cmp
je
adc
loopne
pop
mov
mov
sub
lcall
andl
add
inc
movsb
and
cli
add
adc
cmp
push
movsb
das
or
test
out
fsubl
jno
dec
mov
jmp
stc
out
ds
fxch
fmulp
faddp
sbb
and
imul
pop
mov
cmp
imul
test
faddl
add
push
popa
mov
mov
push
into
sbb
orl
sbb
mov
cmp
neg
xor
out
push
adc
and
mov
xor
lea
cmp
sbb
inc
xor
xor
adc
and
inc
sub
ss
push
pushf
dec
or
icebp
add
mov
or
lods
add
enter
into
add
push
je
pop
mov
cmp
push
and
adc
loopne
fwait
mov
in
clc
pop
pusha
jecxz
push
iret
andb
shl
faddp
sbb
pop
jge
inc
mov
negl
shrb
clc
dec
jmp
not
les
cmp
notb
and
movsb
pop
cwtl
ret
adc
or
sub
mov
add
in
xchg
mov
test
addr16
cli
pop
add
rolb
js
dec
push
mov
decb
jge
push
loop
sub
jmp
cli
cmp
loope
push
in
xchg
stos
and
add
add
leave
cmpsl
hlt
popa
stos
mov
stos
mov
aad
lcall
daa
push
add
xor
repz
sub
icebp
daa
push
pop
not
xchg
adc
repz
nop
orl
pop
or
jl
xor
fisttpl
fldt
xor
pop
xchg
mov
jae
outsb
and
jg
adc
push
js
popl
xor
in
add
fs
jbe
dec
mov
mov
shll
and
lock
mov
sbb
jle
mov
pusha
dec
out
cmp
mov
sub
dec
or
test
sbb
rorb
popa
cmp
add
je
xor
cmp
dec
or
enter
cmp
in
xorb
jp
pop
or
int
jmp
nop
jne
xor
subb
je
xchg
push
test
xor
rcrl
mov
sbb
adc
fdivl
adc
mov
adc
fidivs
nop
or
dec
or
repnz
sbb
xor
adc
and
mov
shlb
pusha
in
mov
pop
or
and
sbb
cmp
jle
cmp
cmp
jge
pop
rcl
adc
adc
mov
dec
clc
dec
sub
jge
or
pop
adc
inc
aaa
fs
popf
add
popa
stos
call
adc
iret
cmp
fistps
movzbl
push
inc
lods
xor
jno
xor
jo
push
adc
fildll
adc
mov
cs
call
ret
aas
or
inc
fsubrl
jae
loope
inc
mov
sub
add
xor
in
loopne
and
push
xor
jmp
push
push
add
scas
sbb
xor
sub
cltd
mov
push
xlat
lea
adc
aam
xchg
pop
add
loopne
cmpsb
mov
adc
aad
cltd
and
mov
push
jb
stos
xlat
mov
cmp
cmp
cmpsl
lods
aaa
stc
psubb
push
pop
sbb
lcall
add
test
add
inc
iret
es
sub
pop
repnz
cltd
sbbl
movsb
add
je
dec
mov
jbe
xchg
add
test
mov
jne
adc
repz
inc
xor
mov
inc
mov
push
jbe
cmpsb
test
dec
jg
or
or
mov
mov
adc
inc
les
insl
cmp
adc
mov
jmp
movsb
xchg
dec
and
jl
jns
sarb
imul
add
aad
cmp
add
add
lds
jno
dec
pop
push
inc
pop
fdivrs
xchg
call
js
cwtl
cmp
jns
iret
lret
add
cli
cmpsb
xor
mov
add
jmp
xchg
mov
addr16
or
int
jl
inc
inc
sbb
pop
cs
imul
ljmp
test
or
pusha
imul
adc
lods
adc
fucomip
mov
add
inc
and
sahf
sub
push
movsl
pop
xor
push
clc
rcll
sbb
repz
xchg
or
sbbl
inc
push
xchg
push
pop
adc
mov
leave
test
jo
pop
push
loopne
xor
pop
mov
lea
dec
dec
inc
lahf
nop
or
or
adcb
pop
or
cwtl
cmc
mov
push
adc
inc
test
cld
fldt
push
enter
mov
and
sahf
dec
or
add
sti
lock
or
sub
inc
push
adc
mov
and
movsl
gs
sbb
shr
sbb
out
sbb
lods
in
push
sub
fisubs
scas
rcl
inc
pop
add
push
adc
call
outsb
movsb
stos
push
mov
pop
cmp
add
test
mov
ja
mov
jg
pop
or
adc
mov
pop
cmpsl
add
and
popf
or
mov
push
or
jmp
in
repz
add
sub
es
xchg
sub
mov
pushf
push
push
mov
mov
mov
mov
or
sbb
aam
adc
pop
cwtl
das
or
vmwrite
insb
sub
into
xor
add
lods
stc
and
inc
xor
jecxz
and
cmp
or
mov
push
push
arpl
and
outsb
push
into
push
daa
jnp,pt
adc
inc
iret
push
or
adc
pop
in
js
or
in
add
push
in
or
mov
cmpsb
pop
sbb
push
fildl
or
or
lock
mov
sbb
dec
push
dec
pop
and
pop
inc
and
add
push
jnp
idivl
push
mov
push
mov
aaa
int3
dec
lret
popf
jnp
lahf
or
inc
daa
sbb
add
divl
xchg
lods
pop
sbb
sub
jbe
mov
mov
pop
or
sbb
push
sub
sbb
sbb
repnz
inc
or
sahf
fiadds
add
pop
or
add
inc
inc
out
or
js
sub
mov
or
fsubrs
dec
rorb
mov
cmc
pop
push
add
in
mov
add
mov
ret
xor
ret
push
inc
cmp
jmp
cltd
cwtl
mov
clc
pop
and
dec
test
xor
int
cmpsb
es
sbb
imul
in
sbb
sbb
aas
adc
add
lcall
pop
jno
xchg
mov
push
movsb
repnz
aas
xchg
ss
les
cmp
push
test
insl
cltd
and
adc
add
adc
mov
aaa
jle
jbe
mov
rcrl
daa
jo
sbb
enter
xor
ja
or
test
sbb
and
dec
sbb
mov
and
inc
add
sbb
aas
lret
jne
pop
xor
add
and
add
cld
or
addb
outsb
push
cltd
xchg
jb
addl
jecxz
jecxz
xorl
into
dec
pop
push
lock
adc
test
movsl
ja
mov
pop
mov
add
mov
push
rcrl
inc
jecxz
sti
mov
add
or
mov
jmp
push
push
lods
or
or
pop
icebp
fwait
push
test
cmpsl
dec
movsb
nop
inc
push
add
mov
dec
leave
push
adc
and
mov
inc
dec
negb
xchg
fldl2e
pop
mov
or
push
cmp
je
adc
mov
add
jbe
sub
shlb
ret
jmp
dec
inc
lods
jne
or
pop
lock
cmp
rcrl
movsl
enter
popa
shrb
loope
mov
xor
pop
xchg
or
sar
loope
adc
add
fcoms
fiaddl
adc
addl
add
jg
pusha
xor
push
jo
rorb
xor
dec
ljmp
clc
xorb
xchg
test
mov
adc
pop
mov
sub
es
add
fwait
xor
and
sbbl
movsb
dec
loop
add
jmp
aas
test
inc
or
and
addb
lret
sub
pop
test
adc
xchg
leave
push
sbb
daa
scas
loopne
add
push
lret
xor
dec
cmp
sbb
cmp
inc
lock
or
or
push
sti
imul
inc
je
ret
xor
mov
aad
cs
mov
and
and
dec
xchg
les
adc
add
push
ret
test
xor
push
mov
dec
xchg
test
adc
jecxz
mov
mov
sub
lods
and
fdiv
mull
push
adc
cltd
inc
and
jmp
inc
add
add
insb
pushf
and
mov
sub
lods
movsl
mulb
and
sbb
mov
sar
push
test
lcall
lret
insl
adc
add
pop
ret
push
arpl
sbb
mov
xchg
mov
lods
outsl
sti
jbe
shlb
mov
push
pop
stos
and
adc
fimuls
aaa
adc
fists
loope
arpl
jns
or
cmp
inc
ret
or
jmp
mov
gs
cmp
outsl
sub
sub
fisubs
mov
add
cli
push
pushf
data16
shll
push
sbb
in
ds
shr
inc
push
das
lret
dec
inc
es
xchg
or
or
repz
adc
call
or
lock
stos
cmpsl
test
sbb
cmpsl
ljmp
add
fld
pop
mov
fs
xchg
les
mov
add
mov
mov
and
xchg
push
and
xor
shlb
mov
je
push
shlb
xor
inc
push
and
movsl
movsl
or
out
xor
xlat
adc
scas
mov
mov
add
sub
adc
jne
xor
int
js
or
push
adc
xchg
jge
js
fidivrl
sbb
and
sub
jmp
pop
fsubrs
mov
add
cwtl
inc
mov
xchg
mov
inc
sub
rolb
sbb
cmpb
jmp
jmp
loop
dec
and
push
push
pop
into
mov
mov
or
loopne,pn
mov
int
xchg
dec
push
inc
adc
ds
out
ss
mov
mov
mov
xchg
int3
xchg
fs
mov
fstps
les
sbb
xchg
movsl
jo
jmp
xchg
rorb
add
ret
mov
adc
cltd
movb
popa
xor
and
mov
stc
push
sub
cmp
jl
out
out
jb
jbe
je
popa
je
push
je
out
out
jae
push
dec
je
push
xor
je
dec
je
outsl
je
push
push
je
test
gs
stos
in
test
std
addb
xchg
lret
add
and
inc
jmp
add
dec
or
insl
clc
pop
adc
mov
dec
jno
and
push
add
sub
xchg
pop
add
add
or
addl
ret
push
jo
arpl
add
mov
xor
dec
adc
and
mov
sahf
repz
push
or
push
pop
add
lret
cmp
aam
sub
push
sub
ror
shrl
xchg
xchg
leave
loope
daa
pop
add
sub
jmp
sbbb
outsl
xlat
dec
mov
lds
push
outsl
pop
es
dec
xor
sbb
sbb
or
popa
and
popa
xorb
inc
les
cmpl
jecxz
fcmovu
sub
mov
cmp
mov
lahf
or
add
dec
add
dec
in
nop
callw
adc
xor
sbb
mov
and
movsb
add
jno
jle
mov
push
mov
jne
adc
adc
mov
mov
cmp
les
jne
push
mov
jl
mov
mov
dec
cltd
and
mov
ljmp
cmp
adc
add
and
out
stos
add
orl
popa
sbb
jo
and
leave
adc
icebp
jg
and
dec
add
mov
lds
cmp
fs
inc
push
dec
cmp
cmp
test
add
stos
mov
sub
or
xchg
pop
ja
pop
push
and
sbbl
cmp
jnp
inc
dec
add
adc
jg
mov
mov
xchg
pop
and
cmpsl
push
push
cli
push
push
or
dec
and
or
arpl
cmpsb
imul
add
test
inc
nop
cli
push
cmp
stos
pop
je
adc
add
inc
mov
mov
sbb
nop
bound
or
push
xor
inc
lcall
push
ret
loopne
loopne
add
pushf
cmp
ja
test
sbb
adc
push
aam
fsubl
mov
pop
clc
or
and
aas
rolb
or
hlt
jmp
pop
and
movsl
add
xlat
pusha
inc
adc
psubsb
aam
push
and
fdivs
or
and
aad
sbb
adcl
inc
push
xchg
sub
sahf
loope
and
pusha
mov
adc
mov
xor
call
jmp
inc
lds
in
in
sub
adc
test
gs
sub
and
ret
movb
mov
mov
test
or
sub
adc
aaa
and
or
mul
push
cmp
adc
push
pop
and
in
xor
and
mov
in
inc
adc
adc
mov
aad
enter
repz
call
ret
inc
test
add
lcall
repz
loopne
or
and
pop
ret
lret
xor
cmp
push
and
xor
xchg
test
inc
insl
cltd
sbb
dec
inc
movsb
pop
lods
jl
adc
repz
ficompl
jns
xchg
js
sub
imul
stos
orb
pop
adc
xor
adc
sub
and
insl
dec
or
cmpsl
mov
pusha
outsl
stc
in
aas
jae
push
or
mov
push
outsl
pop
int3
pop
fsubrs
xchg
pop
call
xchg
inc
das
add
pop
enter
dec
cmp
inc
dec
nop
mov
out
push
fucomp
std
xchg
popa
leave
inc
das
xor
and
cmp
daa
or
mov
orl
adc
jl
sub
loope
lret
mov
add
jno
and
xchg
mov
dec
push
sub
push
sbb
sub
lds
sbb
mov
mov
mov
cmp
lea
sbb
dec
scas
push
jbe
fsubrs
jo
je
adc
gs
add
imul
fdivl
adc
rcr
or
xor
add
xchg
aas
mov
sbbl
pop
push
add
out
or
add
daa
or
js
push
push
push
pop
pushf
leave
cmpsb
into
pop
push
or
gs
add
cli
xor
repnz
clc
daa
mov
lods
xchg
adc
jb
jo
sbb
call
roll
pop
mov
out
jb
mov
js
sar
inc
clc
or
and
ljmp
lock
adc
cmp
sbb
and
dec
loope
jo
dec
xchg
inc
or
fs
inc
mov
mov
sub
or
push
dec
insb
push
add
test
push
test
sbb
jmp
push
hlt
nop
and
dec
or
scas
popa
leave
push
add
aam
rorl
es
mov
ret
inc
add
mov
cltd
sub
ss
das
cmpsb
jo
dec
ss
pop
add
jl
inc
shlb
push
add
dec
and
sbb
scas
insb
and
ret
sub
jo
or
adc
gs
stc
jl
lea
push
xor
push
out
inc
rorb
push
inc
aas
sbb
stc
or
andb
xor
lods
cmc
fwait
movsb
sbb
out
in
mov
push
mov
adc
jg
mov
lahf
add
adc
add
xor
je
imul
sbb
xor
push
xchg
mov
shll
jb
mov
lahf
sub
xor
push
xor
cmp
xor
xchg
push
shrb
xor
js
jb
xor
adc
xchg
sbb
in
xor
mov
xor
in
and
in
jne
lods
jp
into
stos
mov
push
addr16
add
stos
xor
xor
dec
jp
push
pop
aam
arpl
sub
jbe
add
mov
xchg
sahf
pop
adc
inc
and
orl
movsl
add
adc
push
dec
loopne
sbb
xchg
dec
inc
or
sbb
movaps
push
adc
pop
loope
and
loope
mov
outsl
pop
push
push
andb
pushf
std
pop
sti
and
and
test
sub
sub
inc
stos
pop
dec
add
and
lcall
push
mov
ret
test
push
xchg
dec
sbb
mov
sub
adc
gs
cmp
xchg
push
xor
loopne
cmp
cwtl
jg
inc
jnp
enter
sub
xor
push
stos
sbb
popl
cmp
mov
sbb
pop
sbb
xchg
or
call
es
push
rorb
sub
xchg
and
or
mov
sub
popl
xchg
adc
xor
inc
js
adcb
and
xor
push
dec
jmp
lock
insb
inc
aam
mov
mov
adc
movsb
xchg
iret
or
or
xlat
lods
push
adc
push
or
sub
aas
and
sahf
test
out
inc
pusha
fdivl
fistps
cmp
xor
sbb
cmp
enter
roll
hlt
pop
leave
push
aaa
or
inc
cmp
ds
and
lea
sbb
push
add
xor
int
mov
add
mov
loop
lret
cmp
push
data16
xchg
jl
cmp
fsubl
jb
xor
popa
arpl
cmp
or
lcall
push
push
or
and
popa
inc
mov
dec
mov
push
and
dec
push
mov
mov
js
inc
cmpsb
push
pop
push
cs
adc
arpl
sub
adc
cmpsb
jns
push
lock
sub
sbb
or
lea
popa
and
test
insb
pop
push
cwtl
nop
push
dec
cmp
aas
inc
mov
push
push
movsb
sahf
xchg
push
jp
and
pusha
push
mov
xchg
lea
ret
mov
mov
jo
mov
nop
cmp
popf
push
dec
popa
mov
les
pusha
lock
and
jg
or
or
sbb
adc
sub
xor
dec
dec
jp
dec
and
icebp
addb
push
sub
pop
adc
xor
jecxz
je
sub
movl
mov
xor
mov
adc
in
stos
std
sbb
inc
and
mov
ret
adc
adc
and
mov
cmp
cmp
pop
daa
adc
sub
push
push
xor
cmp
dec
push
icebp
add
repz
inc
mov
xchg
push
cmp
xor
and
mov
jmp
jno
xor
movhps
shlb
jne
xchg
inc
dec
dec
pop
sbb
ss
icebp
mov
and
sbb
aas
pop
adc
daa
leave
pop
inc
ja
lods
jae
inc
pop
cmp
jecxz
int
jmp
movl
jnp
pop
jo
movsl
test
mov
leave
lahf
ss
mov
add
mov
or
lds
popf
mov
pop
push
scas
pusha
inc
or
xor
push
pop
adc
loopne
lcall
ljmp
jo
aaa
xchg
testb
inc
add
repz
fxch
xor
jl
xor
sbb
rorb
push
cmp
movsbl
out
punpckldq
cmp
mov
imul
fimuls
mov
rorb
sub
dec
add
pop
xchg
push
ja
inc
xchg
or
orb
fstp
xchg
mov
xchg
in
xor
and
insl
pop
pop
jle
ret
push
loope
xor
push
test
imul
js
or
inc
fisubrs
xor
das
inc
movups
insb
shlb
mov
insb
lea
ja
sub
orb
and
rorb
loopne
fstl
sub
push
and
repnz
pop
push
loope
cmp
mov
movsl
push
punpckhbw
cmp
into
data16
or
xchg
sbb
sbb
and
sbb
and
mov
sbb
popf
or
imull
aad
jb
aas
xchg
fsts
adc
push
out
dec
add
je
sbb
mov
scas
sub
outsl
mov
mov
pop
insl
jmp
sbb
in
mov
mov
rcrl
jae
cltd
subl
repz
and
pop
cld
movsb
into
inc
dec
ffree
jne
fists
daa
lods
or
xchg
adc
push
data16
dec
out
cwtl
push
pop
xor
jmp
int
imul
push
ljmp
push
push
jmp
fidivs
sti
sub
xchg
mov
mov
jg
pop
push
in
jp
in
dec
dec
fsubrp
mov
fdivl
lock
out
jbe
sbb
sub
mov
xchg
cltd
call
or
xchg
pop
and
xor
loop
xor
iret
loop
or
dec
push
jp
or
xchg
xlat
rcl
xchg
and
cmpl
call
cmp
xor
popf
xor
and
inc
lock
adcb
push
xor
adc
inc
or
adc
adc
fsubs
push
sub
mov
mov
out
je
es
fimull
push
sbb
sub
fnstsw
adc
test
push
fcmovbe
dec
popa
ret
lods
pop
cmpsb
add
outsl
push
popf
outsb
mov
sti
mov
pop
sub
xor
xor
mov
lret
notrack
sbb
add
xor
inc
mov
pmullw
cmp
cmp
je
push
shlb
sbb
fprem
and
adc
addl
cltd
cmp
push
stos
and
ja
shlb
icebp
inc
addr16
ja
xor
push
adc
fnsave
mov
loope,pn
movsl
fidivs
jmp
pop
push
adc
jne
or
out
and
mov
test
inc
hlt
sub
ret
mov
jmp
enter
cmp
jbe
sbb
lods
inc
je
and
lock
push
jb
mov
popa
dec
scas
enter
mov
sub
dec
or
or
and
sub
jge
jl
sub
dec
lret
push
cmpsb
mov
jnp
sub
xor
cltd
add
xor
xchg
sub
fmuls
popa
scas
in
sbb
aaa
lods
xor
out
adc
inc
or
pop
aam
push
cmp
out
out
mov
mov
cs
nop
adc
xchg
pop
push
cmpb
push
push
loope
int3
push
dec
jecxz
mov
enter
cmp
and
mov
and
cmp
ret
pushf
aaa
cmpsl
iret
lret
pusha
xor
int
fistpl
idivl
ss
ret
push
andb
jae
iret
in
adc
inc
sbb
fwait
adc
insb
adc
mov
popf
mov
add
xor
sbb
cmp
adc
cmp
call
mov
push
mov
or
addl
add
xchg
or
xchg
cmp
dec
out
jmp
sbbl
mov
sbb
xor
push
lahf
xchg
out
nop
and
mov
lea
lahf
inc
xchg
adcl
es
adc
std
mov
call
mov
and
sbb
rclb
xchg
sub
or
ret
jne
add
mov
sub
aaa
fwait
xor
dec
lret
inc
psubd
fcomps
and
fbld
subb
or
add
insb
pop
xor
push
jne
or
sub
sub
adc
dec
cwtl
cmp
stos
cmp
roll
jp
push
cld
inc
rol
or
shrb
sbb
xchg
pop
pop
push
push
js
inc
repnz
adc
xchg
das
push
push
cmpsl
repnz
cmp
sbb
jge
xchg
inc
es
push
dec
and
push
and
jo
adc
adc
jbe
filds
sub
add
add
add
dec
jne
cmp
and
lret
ret
lret
repz
push
sub
xchg
cltd
sbb
arpl
or
ret
test
outsb
sbb
test
jnp
or
sbb
mov
cwtl
adc
dec
adc
push
in
mov
outsl
cltd
stc
icebp
push
xchg
insb
adc
popa
sbb
movsl
data16
sub
cwtl
ret
mov
into
and
inc
push
fmuls
sub
sub
jl
jp
cmp
arpl
pop
mov
add
cmpsb
and
cld
mov
movsb
pop
pop
int
bound
cmpl
jp
stc
je
push
mov
rolb
sbb
jg
into
push
outsl
or
or
push
dec
push
push
xorb
push
js
sbb
sub
sub
es
sahf
or
push
bound
mov
pushf
push
in
or
jle
add
sbb
mov
flds
push
or
pop
mov
faddl
out
add
rclb
jne
xchg
lret
roll
std
into
pop
push
dec
call
dec
adc
je
push
pushf
in
jecxz
mov
and
add
push
loop
les
lret
mov
clc
add
dec
push
push
xor
xchg
mov
and
mov
and
js
insb
jmp
sub
xchg
push
mov
or
sarl
xor
push
je
dec
scas
in
adc
adc
push
adc
xchg
xchg
pop
testl
and
pop
jne
xor
dec
movsl
imul
lret
sbb
jp
jo
xchg
fsubl
xor
lods
xlat
pop
jge
out
mov
mov
in
sub
test
sbb
pop
add
lock
repz
cmc
imul
sub
sbb
inc
leave
push
roll
loope
jne
dec
cmp
arpl
push
mov
and
ret
repz
cmp
adc
or
cmp
pushl
cmpb
add
insl
jne
xchg
pushf
out
add
adc
out
arpl
insb
stc
cltd
sub
mov
add
shlb
sub
pusha
push
xchg
daa
xor
adc
popf
je
push
clc
sbb
ss
xchg
push
movb
movsl
jmp
jo
loope
test
add
mov
inc
add
lock
adc
jl
mulps
mov
mov
xor
mov
movsl
xchg
push
and
std
out
nop
xor
leave
addr16
scas
mov
rcll
xor
dec
adc
and
add
in
inc
jmp
lret
lods
call
jns
sbb
push
test
pop
dec
leave
rorl
cmpsl
add
adc
sub
jge
inc
in
xchg
sbb
fists
push
test
mov
dec
add
push
adc
pop
push
add
jb
xchg
iret
fwait
push
test
add
out
mov
fwait
pop
ret
ss
mov
jecxz
pop
add
fwait
shlb
cwtl
out
sub
jnp
mov
push
pop
ud0
shl
dec
scas
jmp
add
mov
rcrb
pop
dec
aas
xchg
nop
in
adc
dec
dec
push
ds
sub
push
flds
lret
cmpsl
mov
cld
xorb
cmp
pop
sbb
insl
cmp
cld
sub
repz
mov
loope
cld
stc
cmp
sarl
loop
cli
add
add
pusha
pop
add
rol
sub
xor
and
sub
and
lea
or
dec
shrl
and
dec
sbb
inc
clc
inc
push
pop
jnp
push
or
push
mov
test
lea
ret
mov
and
addb
inc
test
sub
sahf
dec
pushl
dec
shll
add
mov
lods
and
xor
cmpsb
mov
loope
push
jae
push
movsl
jne
jecxz
inc
sub
das
pop
sub
or
insb
adc
xor
icebp
mov
es
leave
sbb
out
xor
push
icebp
mov
pop
aas
das
jne
idivl
enter
inc
and
push
dec
and
add
mov
int3
xchg
nop
cmp
push
ja
cmp
jge
fiaddl
add
add
add
add
or
and
pop
add
add
sub
aas
rorl
jl
sbbl
sub
nop
sbb
rorl
mov
push
inc
jle
xlat
push
lock
mov
fs
pop
adc
push
or
lea
and
xlat
iret
stos
adc
orl
pusha
and
leave
fmuls
jne
push
inc
inc
imul
cmp
jge
fcoml
stos
add
inc
lea
push
rcll
sub
dec
sbb
push
pop
ds
bound
sub
out
dec
pop
xchg
push
mov
add
add
pop
push
shrl
ja
mov
call
cmp
pop
push
push
jae
fists
jne
inc
mov
adc
outsb
jmp
adc
aad
or
in
sbbb
or
jnp
pop
out
inc
mov
push
mov
push
aas
xchg
js
ret
or
and
cli
orb
adc
rorl
and
inc
mov
or
push
sbb
mov
pop
push
jmp
shlb
jl
adc
lea
xor
push
push
mov
out
ret
adc
movaps
popa
fsubs
gs
and
and
adc
mov
sbb
dec
testb
jb
jne
add
imul
xor
test
inc
adc
leave
sbb
add
add
addl
jae
sbb
scas
inc
add
jge
adc
xchg
iret
sub
int
add
inc
iret
cmp
push
add
test
frstor
lcall
add
bound
ret
test
outsl
xor
pop
inc
and
mov
mov
pop
lods
or
pushf
add
cmp
movsl
jge
xor
dec
mov
sub
cmpl
mov
inc
sbb
fnstenv
inc
idivb
inc
jbe
lahf
ja
push
xor
int3
mov
jp
nop
or
movhps
adc
idivb
dec
sub
mov
aaa
push
ss
jmp
sub
fcmovnb
xchg
outsb
jmp
pushf
dec
popa
adcb
push
cmpl
push
lock
jne
cmpsl
fwait
lods
scas
cltd
xchg
or
pop
sti
or
xor
sub
jae
add
test
repnz
or
push
int3
mov
and
data16
mov
push
icebp
ja
cmc
out
je
loopne
imul
je
lcall
inc
push
mov
or
cmpsl
into
xor
pop
rclb
into
dec
add
ljmp
pop
mov
out
mov
pop
sub
dec
jns
cmp
andl
fsubs
lock
add
cmp
xchg
cmp
fdivl
add
add
adc
xchg
loopne
and
fs
and
cmp
mov
inc
fwait
pop
pop
mov
add
les
inc
mov
mov
add
jl
shrl
cmc
movsl
shll
inc
dec
sti
sub
cmp
or
and
mov
lret
sbb
scas
lds
daa
dec
xchg
or
rcr
sub
addl
and
fcmovnbe
mov
bound
les
jecxz
mov
insl
mov
push
das
inc
push
mov
and
in
push
in
add
add
lcall
xchg
xchg
add
add
adc
cmp
leave
cli
int
jno
sub
xchg
lods
and
inc
outsb
pushf
sub
mov
xchg
movb
imul
sbb
xchg
xchg
add
xor
out
add
pop
sub
popf
ret
sbb
adc
sub
lock
push
adc
enter
adc
pop
adc
aam
inc
clc
jge
movsb
nop
ret
add
xorb
xor
adc
stc
xchg
jns
add
adc
mov
sbb
out
out
iret
test
sarl
push
pop
mov
loopne
mov
out
mov
in
jl
ds
mov
xchg
push
pop
shlb
ret
mov
pop
mov
mov
or
sbb
dec
inc
test
xchg
and
js
sbb
addl
mov
les
xor
enter
or
and
xor
andb
clc
add
inc
sub
imul
jnp
mov
movsb
jbe
lock
stos
inc
mov
and
incl
lcall
cltd
dec
adc
dec
add
or
aam
adcl
mov
test
mov
sbb
add
jne
cli
push
negl
push
or
push
sub
mov
push
push
add
sarb
push
inc
xchg
mov
ja
je
int3
inc
xor
test
rcll
xchg
sahf
xchg
test
mov
dec
fildll
cmp
lret
add
imul
push
mov
jno
insl
inc
xor
cmpsl
inc
pop
jmp
mov
cmp
mov
cs
fbstp
jge
mov
dec
andl
sbb
xchg
xchg
insb
jg
dec
ret
pop
add
mov
popa
call
push
sbb
push
adc
mov
push
add
jmp
mov
inc
add
push
mov
push
and
sbb
movl
js
xorl
sbb
dec
mov
add
xchg
std
add
inc
or
es
or
fdivl
jmp
add
pop
dec
cmp
add
jo
sub
jo
clc
push
mov
sub
cmp
jo
add
cmp
adc
and
lds
int
lret
outsl
flds
add
and
add
adc
es
push
cmp
inc
xor
mov
test
cli
mov
mov
addr16
xchg
add
add
and
mov
push
int3
mov
aas
enter
add
ret
adc
pusha
rorb
sbb
daa
jmp
aaa
push
push
pop
iret
iret
add
sub
cmp
ss
pusha
inc
jbe
ja
mov
dec
add
pcmpeqw
rclb
cmp
xchg
push
imul
adc
xor
xchg
lret
sbb
or
adc
lcall
sbb
pop
ja
mov
pop
xchg
cmpsb
push
add
lods
std
cmp
in
test
push
xchg
jle
aam
dec
xchg
push
mov
mov
jbe
inc
mov
add
nop
and
je
or
jb
and
test
and
or
outsl
jmp
xchg
adc
adc
rorb
push
pusha
mov
add
xor
addr16
push
mov
decb
dec
mov
sahf
jg
add
xchg
cmpsl
aas
aaa
data16
loope
cld
and
pushf
cmpsl
orb
or
mov
test
xchg
dec
push
sbb
or
or
cmp
xor
xchg
inc
rcrb
xchg
mov
and
dec
xchg
adc
sub
shlb
jae
in
je
mov
cmc
add
xchg
mov
inc
fnsave
dec
les
mov
sub
fstpt
pusha
add
and
xchg
and
dec
mov
imul
or
push
adc
lods
imul
insl
arpl
or
imul
mov
push
ds
mov
jg
loope,pn
add
sbb
jo
mov
adc
push
incl
xlat
sub
es
mov
inc
or
adc
adcl
or
pop
add
add
xchg
adc
dec
bnd
je
jg
mov
push
push
mov
jl
push
fcoml
daa
push
pop
jnp
jbe
aam
in
sub
inc
xchg
sub
jle
imul
mov
or
int3
or
insb
pop
mov
ret
push
push
adc
pusha
sti
lea
xchg
mov
mov
or
xchg
das
fbld
cmp
sub
fs
xchg
nop
push
arpl
outsl
rcll
daa
jne
inc
push
jne
mov
ds
hlt
mov
sbb
ds
push
je
jp
das
or
ret
stos
imul
pop
sbb
sub
jmp
add
add
add
pop
push
std
xchg
pop
pusha
imul
sbb
les
rorl
stos
inc
mov
or
inc
or
add
cmc
sbbb
mov
jne
xlat
inc
fidivs
ret
push
les
rclb
push
push
js
test
push
jmp
push
push
scas
xchg
bound
sbb
insl
pusha
inc
sbb
cmpsb
xor
inc
or
adc
arpl
ja
add
jo
add
leave
cs
sbb
mov
out
xor
sub
add
add
scas
jmp
popa
and
scas
inc
xchg
mov
rclb
fisubl
adc
xor
addr16
jbe
sub
aam
cmp
cltd
or
adc
cmp
xlat
jns
jno
outsl
daa
pop
jb
or
insl
push
pop
rorb
pop
add
xor
xchg
cmp
pop
ret
add
lods
pop
add
adc
and
dec
dec
stos
and
mov
and
jl
adc
cwtl
adc
pushf
adc
mov
adc
pop
sbb
lahf
mov
std
fs
sub
lods
fs
stos
sahf
push
sub
aad
adc
push
or
xor
cmp
xor
popa
cmp
test
test
je
adc
xchg
enter
push
xor
and
repnz
sub
add
lock
add
les
pop
in
pop
or
push
dec
in
or
adc
and
fimull
nop
or
call
cs
adc
dec
xlat
jmp
testb
push
jb
nop
inc
dec
push
cld
or
lret
cmpl
push
or
dec
rorl
cmpb
clc
cmpb
xor
xchg
inc
aas
popa
sub
jne
add
add
int
jp
leave
in
adc
cmp
add
sub
sbb
bound
and
es
adc
xchg
add
nop
cmp
mov
lcall
dec
fidivl
leave
in
das
ss
lods
xlat
cmpsb
jbe
pop
jle
inc
and
outsl
mov
int3
jmp
out
ds
mov
andl
push
icebp
add
adc
cltd
mov
mov
push
je
push
cmp
pop
shlb
push
loopne
adc
fiaddl
jecxz
ret
call
rorl
in
add
fs
push
add
and
push
and
and
push
add
push
enter
pusha
sarl
ljmp
aaa
pop
adc
into
sub
cmp
call
inc
lret
xlat
add
jle
cmpsb
ficoml
xchg
sbb
push
popa
inc
enter
sub
lock
sti
and
adc
mov
repnz
push
and
lret
push
or
push
out
or
mov
mov
mov
cmp
mov
sbb
insb
mov
and
gs
nop
add
sbb
jne
fiaddl
adc
pop
sbb
inc
lret
cmp
xor
xor
loope
lret
popa
pop
pusha
call
cmp
inc
insb
in
sbbb
pushf
mov
mov
daa
test
mov
lea
push
and
rcl
push
xor
loopne
pop
sub
pusha
adc
data16
lods
add
or
imul
or
shll
xor
adc
adc
add
ret
decb
mov
cmc
pop
or
addr16
jge
sbb
mov
lea
imul
xor
jne
xor
adc
pop
push
dec
pop
repz
sbb
xchg
sub
xor
or
insl
adc
lret
stos
fnstsw
jnp
inc
or
mov
je
jmp
loope
sub
inc
cltd
adcb
stos
jbe
out
cmp
js
sub
mov
lods
std
xor
adc
add
mov
fisttps
incl
call
std
pop
push
dec
dec
ret
lret
xchg
lcall
scas
cmpsl
lea
push
or
pop
mov
jl
testb
add
xchg
ror
jne
popa
loope
mov
and
pushf
lahf
mov
cmp
imul
and
orl
insl
sbb
ret
mov
rol
mov
xor
adc
sbb
add
fbld
dec
jo
andl
dec
ret
adc
in
jmp
and
sub
lret
imul
push
xchg
xor
mov
insb
subb
js
lock
jmp
jo
push
push
ja
aaa
lds
cmp
and
jnp
add
negb
pop
and
and
sub
and
and
cs
push
push
pop
ret
and
mov
mov
cmp
dec
and
push
cmp
aad
add
xor
push
jb
mov
dec
jg
pushf
inc
xor
lret
insb
inc
inc
jmp
cs
pop
push
dec
or
ret
ds
pop
rorb
pop
andb
pusha
sbb
inc
call
mov
dec
bound
or
adc
mov
loopne
cmp
jo
sbb
cmp
add
add
int
das
add
push
pop
pop
ret
aas
jne
pop
adc
inc
out
add
sub
xor
sbb
xchg
andl
dec
insl
add
jb
xchg
lea
xor
cmp
adc
ret
loop
inc
repnz
add
scas
and
xor
mov
pop
sub
loopne
arpl
loop
inc
adc
xchg
ds
pop
roll
sub
jle
or
sub
and
push
nop
and
push
adc
shl
addb
and
ss
sarl
mov
xchg
inc
daa
push
ret
or
lret
push
xchg
cmp
sbbb
lods
cmpb
pop
lea
cmpsl
mov
mov
mov
out
mov
and
lods
stos
mov
scas
dec
adc
enter
push
push
add
add
xor
jmp
lds
inc
jo
add
push
rorl
and
adc
xchg
sahf
icebp
inc
dec
sub
add
inc
ja
push
cmp
inc
lret
dec
and
iret
stos
sbb
push
imul
jno
out
sbb
and
add
jb
sub
add
mov
push
inc
in
sbb
push
sbb
into
xchg
cmpsl
sub
or
xchg
dec
inc
adc
and
icebp
mov
or
push
mov
jle
xchg
stos
push
sahf
push
gs
orb
inc
add
cmp
cmp
inc
adc
jbe
test
dec
pusha
outsb
mov
jo
pop
push
sbbb
into
fldl
lahf
cmp
or
frstor
xchg
adc
movsb
cmp
movsl
lock
mov
mov
scas
mov
mov
adc
aas
adc
add
jbe
pop
xchg
rorl
stc
repz
hlt
mov
pop
push
stos
iret
cmp
movsl
loopne
sbb
xor
sub
push
jp
lea
xchg
mov
test
mov
add
hlt
test
jno
mov
addl
mov
js
jb
faddl
and
xchg
fsts
sub
test
int
pop
or
les
test
addl
adc
loopne
jo
mov
fdivr
cli
xor
pop
mov
adc
dec
cmp
inc
jmp
call
jno
xor
in
sbb
pop
das
pop
dec
or
mov
rorl
xchg
push
mov
push
push
add
or
xchg
dec
add
cmp
sub
push
js
and
adc
add
xor
imul
repnz
or
daa
bound
das
sbb
scas
mov
sarl
js
xor
pop
add
faddl
fistpll
or
sti
jb
pop
lock
in
and
out
xchg
jl
push
push
jo
lea
or
add
sbb
push
push
out
stos
insb
lret
loopne
das
xchg
cmp
addl
and
push
test
test
jnp
insb
and
gs
adc
je
dec
inc
jne
fsts
lods
aam
and
push
push
add
jo
test
pop
xorb
jle
int
push
out
xchg
cltd
and
and
int3
add
inc
bound
mov
sbb
inc
push
cmp
add
mov
pusha
cmp
in
inc
imull
adc
js
mov
xchg
xor
jb
jecxz
and
arpl
fldl
dec
loope
popf
push
mov
adc
jb
in
mov
cmp
xor
xchg
cmp
lds
xchg
push
arpl
dec
sub
loopne
lock
aaa
fucomip
push
add
xor
inc
cmp
loopne
daa
cmpsb
jae
into
ret
imulb
flds
add
or
and
outsb
add
fstps
and
and
inc
xor
or
lock
js
pushl
xor
sub
div
push
jmp
sahf
mov
push
and
jnp,pn
test
push
push
nop
mov
sbbb
push
push
imul
add
jbe
int3
add
inc
add
movsb
in
mov
test
dec
lea
mov
js
dec
add
lcall
jne
test
jg
mov
test
mov
cmpsl
aas
and
or
inc
sub
push
push
jmp
or
test
add
lea
gs
movsl
gs
popa
adc
test
or
or
adc
sbb
push
sbb
popa
push
add
mov
hlt
jecxz
inc
adc
clc
mov
xchg
mul
imull
decb
sbb
in
push
push
in
and
pop
dec
mov
push
outsb
add
int
fadds
orl
out
dec
or
add
call
repz
xor
test
pop
mov
jmp
add
add
jl
jge
sub
or
test
repz
jno
xchg
aas
jge
add
ret
push
adc
in
pop
xchg
adcl
lret
add
dec
push
lret
pop
cmp
mov
ret
add
aad
rcrl
stc
mov
pushf
inc
jae
mov
fiaddl
outsb
xchg
popa
enter
sbb
shll
dec
xor
jae
inc
jno
lods
mov
xchg
leave
and
loopne
mov
cmp
mov
dec
adc
mov
mov
sub
dec
inc
inc
je
xor
frstor
xor
pop
xor
repnz
push
inc
push
ret
push
in
call
inc
sahf
mov
sbb
mov
add
stc
dec
enter
xchg
jo
cmp
fbstp
mov
adcl
fwait
xor
mov
sbb
mov
testl
mov
inc
nop
add
dec
add
ja
adc
pop
cmpb
nop
add
stc
aaa
mov
iret
test
outsb
loopne
push
je,pt
int
jb
sub
jp
add
add
push
fstpt
adc
push
mov
gs
pop
jg
je
popl
popa
fsts
dec
dec
push
inc
push
call
lret
mov
ljmp
adc
or
or
jne
pop
dec
popa
out
mov
inc
mov
xor
sub
xor
popa
ss
call
test
cmp
sub
in
lock
cmpsl
xchg
add
add
mov
sti
mov
or
adc
imul
sahf
ja
cmp
push
push
push
pop
gs
jns
bound
mov
mov
xor
repnz
mov
sub
adc
adc
adc
mov
mov
shlb
iret
loop
and
inc
inc
and
jb
pop
ja
mov
xor
add
add
lcall
mov
in
lret
cmp
les
or
test
mov
mov
push
push
dec
add
and
addr16
push
lret
and
and
fcmovu
jno
flds
loopne
in
call
jae
cmp
adc
xchg
xchg
ja
test
idiv
das
movsb
enter
add
jmp
jno
pop
dec
mov
add
aaa
xor
mov
sub
xchg
xchg
dec
push
cmp
ss
mov
dec
dec
push
sub
mov
adc
push
xchg
mov
xchg
pusha
sub
pop
xchg
insb
inc
inc
inc
inc
jo
js
cmp
lea
imul
mov
sbb
out
add
and
mov
xchg
xchg
cmc
nop
push
js
fs
jge
insb
movsl
xchg
in
or
popa
mov
mov
outsl
ss
notl
mov
mov
iret
sub
or
xor
add
cmpsl
jns
movl
test
lods
xlat
cmp
roll
mov
dec
ret
jno
xor
lret
test
push
sbb
loop
ljmp
repnz
sub
and
or
xor
xchg
rorb
jmp
loopne
xchg
cmp
pop
mov
and
clc
inc
and
pushf
insl
and
cmp
sub
and
mov
add
mov
sub
fidivs
mov
xor
sub
fs
insb
rclb
fld
lret
push
mov
sbb
dec
test
repz
and
aaa
sarb
or
fs
and
xchg
dec
jno
add
jns
or
add
xchg
and
lods
scas
lret
enter
mov
aam
int3
movsb
mov
sbb
daa
fcmovu
addr16
mov
pop
enter
xchg
inc
inc
fdiv
xor
jmp
enter
shl
hlt
popa
xchg
out
insb
fs
or
add
push
add
mov
add
sahf
sbb
pushf
cld
lock
sbb
fs
sub
sub
outsl
subb
cld
jno
pop
add
xor
inc
add
xor
mov
or
adc
push
jns
pop
jo
lods
pushf
pop
or
test
pop
les
call
inc
adc
adc
mov
sbb
inc
add
xchg
add
jns
mov
pop
lret
jo
jbe
jle
je
and
enter
pop
and
xor
mov
sub
aas
mov
mov
jns
sbb
cmp
sbb
lret
cmp
popa
movsb
cmp
lea
out
lea
pop
or
loopne
int
cs
lock
outsl
movsb
sbb
xchg
dec
call
inc
fimuls
xor
mov
mov
dec
adc
pop
sub
iret
enter
mov
pop
mov
dec
dec
je
or
cmpsb
sbb
xor
mov
push
mov
add
mov
or
pop
mov
add
or
enter
out
loope
cmp
int3
push
aad
add
pop
inc
gs
dec
dec
je
pop
outsl
in
dec
jl
push
jo
xchg
pop
js
gs
enter
jns
pusha
dec
or
and
xorb
push
jb
test
int
mov
js
xchg
loopne
sbb
mov
jbe
jns
mov
inc
addr16
fldcw
fxch
ret
mov
aad
fldcw
mov
pop
push
lcall
xchg
fldlg2
xchg
mov
xchg
xchg
xchg
xchg
fcmovu
loop
cltd
mov
mov
jno
mov
incb
das
jnp
mov
shlb
insb
add
or
and
out
sbbl
popa
sbb
sahf
loopne
sub
pop
push
mov
push
je
push
dec
test
inc
xor
js
add
mov
mov
inc
pop
and
inc
pop
jmp
loope
out
idiv
adc
and
jns
stc
and
sub
and
and
test
lea
mov
les
aam
mov
push
cmp
add
mov
and
jp
das
movsl
add
movsb
mov
out
pop
sub
std
insl
sub
into
lret
add
jp
and
add
ds
adc
fstpl
je
xor
shrb
pop
sub
dec
push
lea
add
sbb
fcomp
mov
ja
test
or
das
inc
mov
mov
subl
call
push
adc
sbb
inc
lea
push
dec
loop
or
push
add
popa
xor
mov
fisubrs
lock
and
push
mov
push
jb
push
xchg
mov
mov
jbe
jl
mov
pop
sarb
leave
adc
loop
es
xor
arpl
rcll
cmp
push
inc
fmuls
jmp
lea
adc
jle
mov
lock
adc
cmp
jg
sarl
movsb
dec
test
loop
push
and
and
aam
and
jo
ja
or
roll
cmp
push
xor
ficoml
fmuls
add
add
adc
adc
push
jo
loopne
out
cmp
outsb
xor
push
mov
push
jecxz
mov
repnz
or
sub
inc
xorl
add
orb
or
out
or
or
cltd
movsl
jo
fisttpll
and
sub
mov
dec
add
cmp
sub
sahf
shrb
mov
enter
pop
sbb
imul
xor
xor
testl
add
push
test
adc
pop
sbb
and
inc
or
xchg
pop
adc
pop
sub
push
jnp
aas
test
mov
mov
rorl
shlb
xchg
inc
sti
lcall
add
add
or
mov
mov
adc
je
mov
dec
in
int3
jbe
add
rcrl
adc
fstps
xchg
adc
mov
push
push
lcall
push
ds
dec
push
loope
push
push
sub
xchg
adc
leave
das
lret
loope
jg
or
xor
lock
jl
sti
test
jmp
sbb
sub
jmp
repz
add
cmp
sbb
sahf
das
sti
xlat
mov
inc
push
push
incb
mov
sbb
orl
nop
ss
std
mov
dec
jbe
push
pop
push
test
out
and
push
fcoms
jne
mov
and
je
sbb
notl
xor
das
iret
fs
jmp
push
arpl
inc
pop
cmp
aas
cmovb
movsl
arpl
shl
ja
dec
push
sbb
rcrb
ret
push
push
xor
xchg
jb
je
adc
js
iret
loopne
adc
fsubs
mov
dec
push
and
jno
adc
leave
sub
pop
add
nop
xchg
xor
inc
pop
or
xchg
cmp
pop
sub
insl
idivl
inc
mov
add
adc
cmpsl
pop
loop
xchg
outsb
cmp
aam
idivb
loop
or
and
fisubrl
fldl
push
add
lcall
dec
push
xor
mov
push
push
jmp
bound
in
xlat
lea
xor
sub
xchg
fdivrl
andl
movsb
ja
xchg
push
sahf
jmp
adc
and
filds
stc
pop
xor
out
pop
mov
push
adc
push
mov
inc
inc
fmuls
hlt
sbb
push
cli
jp
test
sub
fadd
adc
shlb
aam
push
inc
mov
and
add
dec
add
mov
push
inc
push
sbb
loopne
and
in
sbb
daa
lods
sub
or
xor
test
in
shlb
mov
ret
jmp
mov
mov
xchg
clc
rcll
xorl
fistpl
pop
jae
lret
add
and
push
push
pop
mov
movl
add
push
test
jecxz
mov
mov
xor
mov
into
movsl
inc
test
loop
and
jmp
enter
mov
loope
push
add
dec
fadds
xchg
pop
fiaddl
sbbl
add
jb
xor
shll
sbb
mov
test
xchg
add
mov
xchg
xor
gs
nop
push
mov
cmp
adc
mov
fadd
dec
aas
int
add
push
rcl
or
mov
pop
lods
push
sub
and
aam
addl
sub
jmp
pop
add
add
mov
or
xchg
push
mov
inc
test
inc
add
icebp
es
mov
mov
es
inc
mov
hlt
fisubrs
adc
leave
push
cmp
xchg
mov
add
add
sbb
pop
sub
and
cli
adc
fstpl
add
sbb
cltd
lahf
push
aaa
sahf
push
pop
pop
pop
cmpsb
xor
xchg
stos
push
push
mov
les
push
xlat
or
pop
mov
aam
std
jle
in
call
xor
faddl
repnz
xchg
dec
adc
fsub
mov
rol
outsl
shlb
push
sub
pop
push
jecxz
lds
push
cmc
adc
sbb
aam
test
add
cmp
push
pop
jnp
in
mov
insl
mov
xor
pop
ret
sub
jno
mov
xchg
jmp
loopne
xchg
xchg
bound
lcall
pop
push
je
dec
add
mov
push
mov
xor
jns
jl
mov
jmp
repnz
and
or
adc
add
mov
pop
out
fnstenv
rolb
sbb
add
dec
pushf
dec
adc
jo
add
fiaddl
dec
je
cmp
insb
xor
xor
js
fimull
jmp
push
decb
add
rolb
mov
xor
mov
ljmp
adc
push
mov
cwtl
add
ja
and
pop
push
and
data16
inc
add
push
rol
test
dec
add
mov
sarb
sahf
mov
adc
mov
sub
sub
int
add
es
stos
push
shlb
loope
xor
rcr
xorb
cmp
insb
dec
add
mov
insb
add
insl
outsl
and
xor
ret
sub
dec
adc
fwait
dec
xrelease
test
mov
mov
jmp
add
mov
fsubrs
pop
inc
or
loopne
and
int
inc
js
jbe
jmp
sbb
loopne
out
mov
and
js
and
lds
lcall
xor
rolb
call
adc
stos
outsl
xor
and
rcl
inc
nop
mov
mov
and
jns
add
test
pop
test
sub
or
xor
loope
pop
mov
jbe
fdivrp
test
mov
aaa
xor
addb
es
cmp
mov
add
pusha
jo
scas
cmc
repz
inc
add
mov
inc
outsb
popa
mov
jno
lea
push
and
or
pop
into
and
or
add
inc
push
adc
adc
mov
nop
arpl
and
inc
aad
pop
mov
fmull
pop
cmp
dec
adc
mov
es
or
and
xchg
xlat
mov
sub
enter
xor
mov
sbb
or
mov
cmp
inc
scas
inc
js
dec
xor
popa
xor
mov
xor
mov
jo
or
adc
cmp
or
mov
xor
outsl
ss
add
mov
cmc
cmp
push
pop
or
repnz
jo
and
adc
ret
mov
fists
push
ss
xchg
aam
cs
cmp
call
cmc
es
cwtl
bound
mov
mov
jl
mov
xchg
jmp
lods
adc
mov
jo
push
dec
je
push
pop
mov
pusha
ds
aaa
shr
jo
je
out
mov
add
shr
and
sub
cltd
jns
inc
mov
nop
sub
jns
xchg
adc
cwtl
in
mov
push
jae
mov
aaa
repnz
sub
xor
mov
outsl
xchg
rol
adc
repnz
dec
fsubrl
xchg
aaa
repnz
in
and
mov
fdiv
mull
in
xor
nop
ffree
mov
cltd
pop
jle
adc
or
addr16
sbb
movsl
fdivl
sti
push
or
jne
xor
ret
lds
loope
and
out
and
andb
xor
adc
insb
sub
jo
rcrb
cmp
jo
popa
jb
pop
mov
mov
or
mov
sub
xor
stc
mov
sbb
cmpsb
cltd
jge
jae
cmp
push
sub
xchg
addr16
inc
js
mov
xchg
dec
dec
xchg
push
addr16
das
call
jns
sahf
xchg
int3
fsubrs
out
sbb
cmpsl
je
test
lea
dec
xchg
jns
sahf
xchg
insb
pushf
nop
mov
sbb
push
adc
mov
pop
sbbl
daa
movsb
pop
and
adcb
mov
sahf
sub
add
xchg
les
or
mov
push
xor
mov
cmpsl
movsb
dec
dec
sbb
cmpsl
lcall
sub
cmc
xor
inc
sarl
mull
jle
out
cmp
xchg
orl
push
pop
push
and
ds
into
jbe
testb
int3
xchg
xor
xor
push
or
pop
fsubl
into
clc
fs
or
add
xor
stos
sbb
dec
xor
movsl
mov
add
cli
cmp
imul
jle
jne
push
sub
fidivrs
lods
dec
dec
cwtl
inc
pop
rclb
cmpb
daa
sbb
jo
or
repnz
add
xor
dec
xchg
nop
loop
daa
cmp
sarb
loopne
or
hlt
movsl
push
xor
xchg
rolb
and
add
lret
push
mov
fsub
or
or
ss
add
adc
mov
iret
adc
sbb
inc
data16
mov
vpaddd
adc
and
fcomps
cltd
mov
xor
rorb
imul
cmp
cmpsl
dec
mov
pusha
mov
stc
push
dec
adc
sbb
sti
push
xchg
pop
shll
mov
adc
and
push
nop
push
sub
add
inc
sbbb
push
cmovb
push
incl
pop
add
andb
jae
pop
int3
mov
adcb
dec
sub
dec
enter
and
or
jmp
outsl
cld
incl
push
test
mov
add
sbb
xor
xor
jae
xchg
fstp
and
pop
inc
outsl
cs
mov
and
orb
in
add
push
dec
pop
adc
adc
mov
aaa
cmpl
xchg
inc
mov
dec
mov
pop
push
or
mov
add
or
movsl
aaa
cwtl
mov
sti
ljmp
push
jmp
pop
js
lods
mov
shlb
rcrb
lahf
jbe
fwait
je
jb
mov
and
js
jbe
jno
or
cltd
or
ret
sub
dec
mov
test
iret
add
pop
dec
loope
popa
or
mov
adc
ret
cmpb
testb
inc
pop
ret
push
stc
bound
add
mov
fwait
or
jne
outsb
ret
mov
push
add
xchg
gs
int
shrl
cmp
mov
ret
jb
mov
xor
dec
lock
rcrl
pushf
mov
mov
jo
mov
popl
test
jg
mov
mov
incl
jl
xchg
out
pop
aam
in
sarl
push
inc
call
push
adc
sub
jns
int3
push
or
add
mov
sbb
popa
push
movsl
leave
xor
jo
js
jnp
dec
xor
mov
mov
jne
pop
cli
cmp
push
loope
hlt
mov
pop
sub
push
sub
adc
push
and
test
and
add
jmp
xchg
cli
loope
push
in
push
lea
cmpsb
xchg
lahf
and
push
and
mov
push
xor
sbb
mov
sbbl
pushf
push
out
unpcklps
mov
les
xlat
cmp
mov
sbb
sbb
mov
jg
and
loopne
jnp
loope
or
fwait
or
lods
push
ficompl
loop
lods
dec
pusha
xchg
push
dec
xchg
add
bnd
sahf
adc
in
or
push
aaa
and
mov
mov
push
mov
xor
add
mov
or
inc
lcall
or
xor
fsubrs
ret
and
pop
sbb
mov
and
xchg
les
and
outsb
dec
dec
popa
and
inc
cmp
sbb
jne
sbb
sub
int
push
loope
pop
inc
sbb
pusha
popf
or
add
add
or
jmp
test
mov
inc
jo
xchg
orb
mov
jnp
add
add
mov
inc
sbb
testb
sub
mov
fwait
out
sub
dec
loopne
adc
dec
cmp
stc
add
add
movsb
or
dec
popf
sbb
ret
je
ret
jb
or
add
sbb
aas
pusha
pusha
mov
fmuls
fs
ret
cli
dec
or
je
jmp
loopne
out
mov
pop
and
fstps
inc
cmp
test
sbb
add
dec
int
shl
in
loopne
cmp
adc
mov
test
push
dec
sub
cmpb
jecxz
sub
loopne
xchg
scas
add
pop
sub
add
pop
mov
les
mov
inc
add
insb
sub
cmp
mov
jno
sbb
xchg
addr16
or
sbb
mov
add
sub
add
mov
inc
pop
pop
dec
out
jne
and
mov
add
mov
test
insl
adc
or
sub
sub
pop
lret
in
loopne
mov
fldenv
xlat
pushf
or
add
xlat
testl
xchg
test
iret
adc
push
jmp
dec
and
neg
push
jge
les
aas
jmp
inc
sbbb
and
add
adc
sub
arpl
cmpsl
mov
js
cwtl
push
xchg
call
pop
loop
ret
pushf
and
sub
je
insl
imulb
js
jl
lock
push
mov
mov
xchg
push
push
xor
xchg
add
jno
rolb
and
jbe
lods
addb
cmp
aaa
xor
roll
aaa
adc
mov
sbb
loope
fisubrs
mov
lea
popf
nop
xchg
movsl
push
add
xor
and
mov
inc
and
mov
lea
cmp
mov
sti
push
addl
adc
test
push
dec
add
add
mov
sub
sub
or
popa
pop
fwait
lret
jmp
testb
dec
or
push
push
arpl
xorl
mov
pop
dec
and
leave
in
mov
pop
shll
and
mov
jns,pn
push
shr
testb
pop
adc
inc
rorl
pusha
add
or
popf
subb
in
cld
add
in
add
into
and
cmp
cmp
and
lretw
push
in
shll
or
imul
add
repz
inc
mov
push
pop
adc
aam
cmp
pop
movsb
xchg
mov
xor
add
fsts
shrl
sbb
add
push
les
mov
or
les
pusha
loop
rclb
ss
scas
shl
outsb
and
mov
mov
js
dec
pop
bound
pop
xchg
icebp
pop
subl
inc
addb
adc
sub
or
nop
subl
xchg
pusha
ljmp
mov
push
jmp
pop
cmp
adcl
inc
pop
pushf
insb
daa
lock
adc
movsb
ja
movsl
sbb
pop
pusha
pop
iret
dec
add
or
mov
sbb
push
adc
in
push
rolb
mov
dec
and
arpl
rcll
mov
or
add
aas
fnsave
adc
add
jne
push
jmp
subl
jp
adc
jmp
ss
loop
add
add
add
sbb
mov
pusha
inc
jne
sub
je
push
xchg
push
push
and
dec
jg
sbb
mov
mov
adc
adc
fnstsw
adc
inc
xchg
jmp
sbb
mov
or
pusha
adc
sbb
sub
jg
mov
add
cmp
ret
jnp
inc
rolb
push
into
sub
adc
push
jo
dec
sbb
and
add
pop
push
sbb
repnz
xor
lods
and
push
test
and
popa
sub
sbb
inc
push
push
mov
cmp
out
dec
and
loope
push
push
bound
xchg
push
push
or
insl
jecxz
out
inc
inc
lcall
push
xor
adc
add
ja
inc
bound
sub
jbe
nop
mov
pop
sbb
inc
loopnew
cmp
aas
jne
push
sub
push
incl
jb
fwait
mov
test
fdivr
sub
inc
gs
fxch
add
pop
scas
xor
dec
pop
mov
fildl
sbb
dec
cmp
cwtl
push
aam
sub
aam
or
js
test
rcrb
jbe
mov
aaa
pusha
pop
mov
shlb
loope
dec
out
mov
mov
add
inc
lcall
or
jns
jg
call
or
mov
mov
ja
adc
pop
jns
xor
repnz
test
add
xchg
sbb
jge
adc
xchg
add
leave
jmp
test
xor
mov
pop
scas
mov
dec
add
pop
add
cmp
adcb
push
add
jno
mov
icebp
and
sbb
push
pop
dec
fimull
jo
inc
adc
stos
notl
jne
cmp
sub
cmp
mov
jmp
ds
ja
mov
cmp
push
inc
lods
lea
and
rclb
or
xchg
nop
out
xchg
mov
pop
xchg
push
adc
xchg
adc
aas
sbb
lret
add
sti
pop
shrb
scas
dec
cmpsl
jge
add
sbb
sbb
jl
call
mov
sub
xor
in
repnz
and
push
inc
and
push
outsl
add
repnz
fcmovnu
push
push
or
or
sub
inc
aad
int
pop
or
cmp
mov
inc
add
test
fidivrs
movsb
adc
xor
add
in
xchg
mov
adc
adc
xor
mov
push
xchg
xchg
xorb
sbb
adc
mov
rclb
mov
clc
sub
or
rcrl
dec
and
adc
loope
add
or
mov
jecxz
test
wrmsr
jne
mov
stc
cwtl
int3
sbb
push
pop
jne
popa
call
sar
push
mov
and
loopne
outsb
movb
mov
or
pop
daa
ss
stc
push
call
or
imul
in
sbb
and
add
std
mov
push
insl
mov
adc
or
xorps
jbe
mov
insb
or
pop
pop
cmp
outsl
xchg
je
sub
jmp
fmull
and
fwait
mov
iret
or
inc
mov
jmp
mov
int3
adc
jge
or
push
sub
fadd
inc
out
mov
pop
or
xchg
out
jl
outsb
jo
mov
call
push
imull
fs
insb
pop
pop
or
jno
xor
and
pop
cmp
js
lods
lods
mov
pop
or
or
cmp
or
arpl
into
adc
xor
push
xchg
lock
aad
mov
mov
mov
push
mov
cmp
push
shrb
sub
xor
pop
out
popa
pop
adc
push
call
xlat
fsubr
imul
mov
mov
push
add
andb
dec
shlb
dec
cmp
push
pusha
and
arpl
add
shrl
add
or
xor
in
jo
stos
in
xlat
push
pop
lret
dec
jnp
imul
mov
sub
add
sbbl
leave
xchg
sbb
or
jo
test
inc
push
sbb
pop
sbb
into
push
mov
adc
or
pop
inc
pop
cmp
push
mov
test
mov
in
add
inc
sbb
or
cmp
xchg
fs
push
fs
push
test
sbb
mov
add
hlt
ss
pop
je
add
sub
add
mov
mov
jo
or
add
push
dec
cmp
rcrb
push
gs
dec
push
cwtl
jnp
dec
adc
adc
sbb
cld
into
cmp
and
dec
jo
xchg
mov
jle
add
clc
push
daa
cmp
sbb
outsl
lds
xor
nop
repnz
test
xor
adc
movsl
int3
adc
push
jb
je
iret
jae
sbb
sarb
addb
inc
js
and
fs
testl
inc
add
and
xchg
pop
xchg
push
pop
js
mov
adc
leave
enter
inc
push
push
inc
sbb
xor
xor
mov
cltd
fcomp
mov
je
int
sub
pusha
pusha
inc
loope
rolb
pop
pop
mov
xchg
sbbb
and
test
and
push
push
sbb
cmp
lahf
aaa
add
sub
jnp
je
rorl
push
leave
adcl
ja
mov
xchg
test
mov
mov
fidivl
push
rclb
xchg
popa
push
je
pop
mov
fcomp
cmp
adc
das
lea
cli
push
bound
push
mov
dec
sub
sbb
shlb
shr
and
sub
rcl
push
lods
lock
push
fistps
leave
jp
jno
lock
fists
jmp
or
inc
sbb
lods
add
ret
pop
inc
into
js
mov
cmova
push
test
stos
adc
addr16
test
mov
jecxz
jge
cltd
push
or
cmp
xlat
inc
inc
fwait
lods
movsb
push
les
shrb
jecxz
push
clc
adc
dec
xor
adc
or
push
push
push
in
inc
jecxz
add
sbb
rcll
or
sbb
pushl
sahf
push
loope
out
out
adc
lahf
add
scas
dec
ret
negl
lahf
add
and
loope
pop
mov
inc
jle
mov
xor
xor
stos
jmp
mov
push
in
mov
jo
dec
stos
inc
cmpsb
test
xchg
sbb
sbb
punpckhwd
mov
out
mov
mov
adc
or
mov
outsl
mov
and
and
sub
or
loope
xor
sbb
and
stos
or
cmp
push
push
xor
cmpsb
sti
inc
jmp
subb
rclb
mov
inc
inc
push
rcrb
out
adc
imul
add
add
imul
nop
insw
int
and
pop
addb
jns
push
jbe
dec
cmp
inc
add
mov
push
mov
pusha
sub
lods
bound
adc
adc
push
xchg
jne
sbb
add
imul
les
rorl
push
push
inc
and
jb
push
jns
int3
stos
mov
xchg
ljmp
rorb
fisubl
or
shlb
push
add
adc
sub
imul
mov
pop
fnstenv
mov
fs
jl
mov
add
push
es
xchg
mov
cld
sbb
xorl
cmp
push
scas
jb
or
mov
inc
xor
int3
fcompl
fcmovnb
test
and
sbb
mov
mov
inc
shlb
cmp
lock
sub
jg
imul
outsl
push
mov
int3
jl
in
cmp
out
imul
lds
inc
xchg
xorb
jmp
lcall
dec
mov
sbb
cmp
mov
sbb
mov
sbb
dec
sbb
adc
cwtl
movntps
pop
mov
outsl
je
pusha
push
xor
or
xor
push
ss
jmp
sbbb
and
dec
stos
jno
push
pop
xor
in
mov
sahf
push
dec
add
inc
mov
xchg
jne
sbb
repnz
dec
mov
inc
inc
pop
mov
pop
or
or
sbb
xlat
icebp
pop
mov
in
sub
xor
or
ss
mov
inc
mov
jl
or
or
or
shll
adc
jbe
sub
xchg
pop
insb
daa
mov
sbb
dec
movb
push
aas
je
pop
add
sbb
outsl
cmp
aaa
jne
arpl
loope
ss
push
and
pop
clc
push
mov
jns
and
cmp
adc
push
pop
or
stc
ljmp
cmp
push
dec
sbb
cmc
cmovb
lock
jmp
stos
add
adc
sub
sbb
and
stos
mov
dec
xchg
clc
cmpsb
mov
pop
add
pop
add
pop
inc
xchg
mov
mov
test
popa
push
test
ljmp
hlt
xor
jns
jne
je
sub
cmp
pop
lds
or
lea
xchg
fildl
ficoml
stos
aam
add
sahf
add
lret
xchg
push
imull
mov
push
fdivrs
push
je
outsl
jo
dec
jl
inc
cmp
repz
push
in
ja
xchg
adc
mov
out
outsb
adc
imul
adc
scas
bnd
mov
test
hlt
cmpsb
push
ds
fistl
dec
loope
sub
add
or
pushf
in
push
lret
xor
jle
cmp
push
cmp
aad
xchg
or
xor
out
dec
jl
and
data16
push
aaa
add
xchg
xchg
mov
xor
add
xor
push
xor
cmp
and
out
adc
push
push
push
push
xor
sbb
pop
push
jne
ss
add
push
or
popa
adc
inc
dec
jns
xor
add
imul
adc
fs
rol
xchg
xchg
pusha
adc
test
pop
es
mov
xor
jl
out
sahf
out
cmp
int3
aad
sub
add
pop
push
lret
xchg
insb
and
sub
jmp
sbb
xchg
dec
sbbb
je
rol
pop
out
mov
adc
cwtl
sub
mov
and
jae
inc
pop
push
push
inc
push
xchg
into
cmp
mov
fbstp
pushf
push
scas
imul
push
mov
rclb
xor
jnp
mov
inc
gs
push
js
and
mov
push
jns
jl
lock
adc
fmul
xchg
inc
cmp
jne
pop
movsb
popa
and
mov
or
mov
or
pop
adc
mov
add
or
or
and
cltd
ret
mov
sbb
iret
mov
shrb
mov
add
cmp
cmp
in
movsb
jb
add
fucom
cmp
xor
les
mov
pop
or
xor
pop
leave
fisubl
sarl
jl
je
nop
outsb
jns
adc
pop
xlat
mov
push
adc
sub
adc
xor
mov
push
push
and
inc
rclb
xchg
push
adc
test
lea
aas
inc
push
je
cmp
clc
xorb
mov
cmp
in
sbb
rorb
mov
mov
sub
insb
sbb
or
jl
adc
rclb
ret
fstl
ficomps
jle
aad
xchg
cmp
add
andl
add
loope
xchg
cmpsl
adc
mov
imul
test
sbb
sub
test
push
sbb
inc
mov
jecxz
in
adc
inc
and
mov
scas
pop
cmpsl
xor
ds
xor
jmp
cltd
push
mov
mov
add
xchg
ds
sahf
dec
imul
or
test
xchg
pop
and
imul
jp
je,pt
add
xor
pop
movl
adc
sbb
jmp
scas
dec
cmp
fisttpll
daa
xor
add
xchg
jmp
imul
add
imul
mov
dec
mov
inc
add
sbb
outsl
mov
pop
shrb
insl
lods
std
ja
pusha
xor
sbb
leave
pop
test
ja
addr16
aad
dec
js
mov
mov
add
out
add
jae
and
fisubrs
inc
dec
sti
jo
xlat
xchg
adc
test
add
or
add
test
outsb
add
jb
dec
and
and
fs
jns
cmp
jle
or
push
xchg
and
inc
jmp
push
dec
aas
inc
jb
pop
sub
push
and
mov
enter
iret
cs
jb
inc
or
and
sub
pushf
das
push
clc
dec
mov
mov
pop
lea
ret
orb
in
xchg
mov
cltd
xchg
les
xchg
mov
testl
jge
aaa
dec
fists
lods
popf
dec
in
stc
repz
inc
or
movups
mov
test
popa
sbb
or
shrl
cmc
lahf
aam
mov
jne
add
mov
enter
or
call
pop
mov
add
pop
shrb
sbb
mov
inc
jecxz
cmp
subl
push
pop
dec
sbb
add
mov
dec
ror
arpl
scas
pop
push
push
cmp
xchg
js
pushw
dec
adc
inc
add
aam
imul
aam
add
push
fwait
movsl
fnsave
mov
test
inc
ret
and
shlb
sub
in
jp
loope
pop
subl
lods
imul
or
push
fdivrl
and
fnsetpm(287
sbbl
movsb
cmp
mov
dec
add
push
test
in
mov
pusha
outsb
lret
add
xor
jo
mov
add
jb
push
dec
ror
sbb
xchg
sbb
add
mov
add
cmp
pop
out
jne
push
jne
test
mov
sbb
test
test
jno
or
mov
and
imul
daa
jne
ds
or
icebp
in
or
test
sbbl
ljmp
push
mov
cmp
xlat
push
fdivrs
fldt
lea
mov
xor
jbe
mov
faddl
lods
inc
sbb
pushf
or
mov
test
mov
sbb
test
punpckhbw
loop
push
mov
cltd
test
lods
xchg
sub
outsl
mov
sbb
test
pop
xchg
les
sbb
xor
dec
push
dec
push
stos
cmpsb
mov
ret
outsl
mov
mov
scas
add
sub
push
shlb
mov
sahf
in
or
mov
jnp
jg
xchg
add
aad
movsb
mov
and
xchg
add
and
popa
jmp
sub
ficoml
dec
out
pop
add
sbbl
inc
and
push
sub
mov
push
les
test
das
adc
nop
shr
daa
jg
jo
and
push
push
jns
mov
cmp
mov
sahf
repnz
add
sbb
add
popf
mov
push
add
sbb
jg
dec
mov
push
cmp
andb
pusha
fstps
add
push
sbb
sbb
push
fs
add
inc
sub
stc
or
lods
test
add
imul
jne
pop
cmp
imul
pop
mov
pop
and
arpl
pusha
or
mov
std
pop
repnz
jne
lret
sahf
push
push
pushf
sub
roll
mov
pop
sbb
push
lea
inc
pop
xor
mov
mov
js
ja
mov
je
add
inc
test
mov
and
mov
dec
dec
mov
lahf
ljmp
or
mov
aas
add
outsl
or
dec
and
jmp
cmp
sbb
dec
into
or
das
mov
enter
push
cld
rolb
jmp
ja
cwtl
mov
push
inc
bound
push
inc
loopne
pop
inc
xchg
adc
mov
adc
test
add
lret
push
lcall
sub
push
add
andl
ja
pop
or
add
leave
add
push
or
xor
inc
loopne
fidivrs
arpl
jne
sub
pop
push
mov
mov
xor
sbb
idivb
mov
stc
repz
fistpl
mov
sub
mov
test
lahf
adc
xchg
xor
push
lods
inc
daa
xor
or
cmc
and
daa
es
push
rorl
add
sub
stos
inc
xor
sub
cld
insl
jecxz
or
mov
sti
add
cmpb
push
shlb
xchg
xchg
add
adc
push
test
dec
sbb
outsb
or
cmp
sub
pop
or
dec
mov
decl
mov
into
xor
or
imull
adc
pop
out
rcll
xlat
xchg
and
cmpb
push
and
les
and
ja
dec
loop
inc
xor
fdivs
and
adc
add
lock
xlat
push
inc
dec
or
gs
movsl
push
cmp
adc
cmpsl
lods
adcl
andb
or
pop
movsb
movsl
je
sub
mov
push
test
data16
mov
orb
or
int
dec
shl
or
push
test
sub
movsl
aaa
mov
adc
ds
sub
inc
xlat
rdmsr
mov
cmp
mov
push
outsb
adc
jle
inc
xchg
xchg
sub
adc
aaa
repnz
repz
jne
jle
movsb
dec
push
push
and
mov
mov
add
or
fmull
mov
rcrl
inc
push
adc
call
sbb
cld
rcrb
push
push
push
mov
or
sbb
add
push
pop
ds
push
pop
jp
int
or
loopne
test
mov
inc
add
sbb
sti
mov
or
mov
insb
or
xchg
jecxz
popa
adc
cmp
mov
cmp
jne
push
mov
push
push
pusha
adc
jmp
adcb
push
push
push
and
push
je
push
push
je
iret
push
adc
inc
and
jge
xor
mov
and
and
add
or
mov
pcmpeqd
inc
sti
inc
adc
repz
xchg
mov
js
es
popf
xlat
adc
sub
es
imul
dec
push
xchg
aad
push
mov
jns
push
dec
push
lods
adc
mov
add
sub
lock
and
push
ja
loope
aad
xchg
rcll
lea
sub
es
enter
adc
sub
inc
cmc
shlb
jbe
push
mov
lods
cmp
bound
jns
cmpsl
cmp
fsubrs
adc
xor
shrb
push
jecxz
xor
fbstp
aaa
push
inc
aas
cmc
sub
out
ret
push
push
test
mov
xor
fidivrl
mov
gs
sbb
dec
and
shll
ss
xchg
stc
sahf
in
enter
dec
subl
or
sarb
cmp
loopne
es
sub
test
in
dec
pop
jp
push
mov
mov
lahf
inc
cltd
movsl
mov
xor
cmpl
cmpsb
mov
mov
pop
rclb
mov
adc
lret
and
xchg
pop
jp
sub
jmp
xchg
shlb
cmp
repz
icebp
sahf
mov
sbbb
lcall
sbb
js
push
xor
imul
shlb
inc
loopne
or
pop
or
mov
sbb
xchg
roll
pop
inc
jp
sbb
or
sarb
es
inc
pop
iret
repz
pop
imul
add
pop
loope
out
pop
testl
sbb
and
add
fldt
mov
insl
push
je
xor
inc
push
xor
inc
sub
insl
xor
jnp
jb
loop
inc
or
aas
inc
test
and
scas
and
dec
clc
sub
xor
mov
testl
xchg
xor
movsb
cmpsb
jns
fadds
push
popa
or
and
out
push
imul
pop
dec
sti
enter
sub
mov
add
or
orb
or
ret
adc
or
rclb
fisubl
jb
mov
loope
rol
aas
jns
popa
mov
adc
ret
xlat
sbb
push
inc
or
lds
fwait
ret
push
mov
fadds
inc
flds
cmp
adc
into
loopne
cmp
pusha
loope
loopne
stos
xlat
and
in
rorl
fsubrl
xchg
imul
aam
movsb
cmp
rcll
incb
dec
add
mov
dec
add
insb
inc
or
sbb
scas
movsl
iret
mov
push
cmpsb
pop
adc
repz
sbb
xor
cwtl
pop
or
push
pop
push
mov
sub
inc
adc
orl
aas
shll
jl
add
sar
mov
xor
gs
inc
sub
adc
mov
test
push
icebp
dec
and
pop
xchg
xor
aas
pop
ja
push
adc
mov
call
pop
test
cmc
test
in
dec
rol
fsubr
mov
cli
sbb
sbb
mov
mov
sarb
insl
add
or
aam
xchg
mov
call
jbe
push
jg
pop
fildl
lea
or
mov
push
mov
fwait
push
push
fwait
pushl
shll
test
adc
add
sbb
xor
sarl
sub
push
daa
js
imul
je
clc
push
gs
imul
or
xchg
add
jno
sub
add
shlb
jmp
arpl
jb
hlt
jmp
push
add
lods
and
mov
sbb
sbb
mov
into
add
cmpsl
lea
bound
sub
add
lea
jns
add
gs
fisttpl
push
rdpmc
and
dec
scas
or
enter
xor
test
adc
in
xor
and
mov
je
push
dec
notb
push
ret
xor
jecxz
jmp
rolb
stos
add
jmp
jne
std
sbb
mov
xor
in
add
xchg
adcl
jns
sbb
jne
pop
xchg
add
push
outsl
in
push
outsb
dec
call
xchg
jmp
cld
out
sbb
insl
add
sbb
cltd
and
or
mov
sahf
lret
xchg
cmpsl
xor
add
xchg
dec
fildll
mov
mov
lea
lea
mov
bound
loop
lea
lcall
mov
fsubl
or
das
enter
mov
jne
adc
enter
lds
sub
ret
sub
mov
shlb
cltd
dec
shll
jg
fisttpl
sbb
dec
sahf
jecxz
addb
push
lcall
mov
dec
adc
sbb
fwait
adc
xor
mov
sub
or
dec
sbb
inc
lods
out
dec
ljmp
inc
xchg
lahf
or
xchg
cmpsl
fisubl
sbb
popa
and
mov
xor
out
arpl
xor
leave
jg
push
leave
cmp
insl
pop
jbe
inc
ljmp
inc
push
add
pusha
shrb
cmc
les
push
or
or
lea
mov
test
inc
or
push
negl
cmpsl
dec
out
addl
mov
inc
or
add
lret
xor
xor
jae
fstpt
dec
ja
test
outsl
enter
add
cwtl
sbb
jne
pop
add
add
sbb
and
inc
sbb
pop
push
or
enter
adc
incl
and
mov
xor
mov
dec
xor
dec
push
cwtl
pop
push
adc
xlat
mov
addb
orl
sbb
push
adc
inc
cmp
xchg
and
sbb
adc
sahf
out
mov
xor
pop
xchg
push
xor
fs
add
pop
mov
xor
add
adc
jb
and
sbb
mov
push
dec
mov
sub
adcb
dec
jns
dec
outsl
or
mov
xchg
push
sub
or
xor
add
push
inc
push
in
dec
dec
in
xor
sub
xor
and
push
xchg
adc
repz
sahf
jl
push
lock
cmp
push
sbb
mov
jb
out
jecxz
mov
inc
or
sub
or
or
or
xor
decl
or
les
dec
roll
arpl
jb
mov
jo
shll
movsb
in
jbe
stos
dec
test
sub
addb
add
sti
push
jbe
arpl
adc
scas
push
jb
jo
sub
ror
call
shl
sahf
push
into
and
fcoms
push
sbb
or
mov
jmp
adc
incl
cmpsb
sub
cmp
push
xor
sub
push
xchg
mov
dec
inc
xor
int
sbb
sub
inc
sahf
cmpsl
and
jge
bnd
sbb
insb
sbb
xchg
popa
add
adc
pop
inc
lahf
ret
push
mov
ficompl
dec
adc
fidivs
frstor
cmp
push
add
and
fdivl
push
sub
pusha
adc
lret
add
dec
aas
mov
aam
sbb
ret
fadd
push
jmp
das
pop
popa
imul
in
sbb
mov
movsb
dec
popa
inc
dec
mov
outsb
dec
and
popl
mov
lods
imul
add
adc
add
pusha
repnz
sbb
cmp
popl
adc
and
or
adcl
adc
push
pop
mov
pop
pop
dec
or
cmp
or
mov
js
and
aaa
mov
jne
dec
jnp
sub
cmp
pusha
ficomps
push
imul
in
pop
rcrb
enter
popa
cmp
aad
sub
add
call
or
dec
add
add
mov
nop
pop
fdivs
rclb
ja
add
sbb
cmp
or
inc
add
and
int3
out
orl
loop
cmp
pop
clc
lea
push
jp
adc
jae
and
mov
jne
cmp
pop
mov
add
push
addr16
movl
andb
push
shl
sub
push
mov
sub
mov
xchg
dec
dec
push
mov
leave
inc
dec
sub
cmp
ret
sub
jnp
xchg
jo
sub
movsb
adc
adc
in
add
sbb
loopne,pn
and
movsb
sbb
jns
pusha
cmp
add
push
push
cmp
add
sbbb
insl
sbbb
dec
and
sub
and
and
pop
push
push
and
push
or
or
pop
mov
jb
js
ja
mov
sbb
xchg
pop
pop
push
jb
fdivrl
sbb
xchg
stos
loopne
mov
jns
adc
cmc
sbb
cs
mov
mov
cmpsb
scas
in
insl
cmc
dec
add
inc
push
inc
cmp
stc
aas
push
cmc
and
test
xor
test
adc
adc
fsubs
pop
cmpsb
jge
push
rorl
xchg
mov
popa
test
push
inc
xchg
loop
dec
repz
andl
or
add
rcrl
inc
jl
jo
out
inc
push
adc
je
mov
pop
fcompl
fucomp
add
pushf
aad
or
cld
cld
movsl
pusha
adc
cmp
jb
inc
decb
test
adc
sbb
ret
bound
inc
and
xor
push
jae
mov
fwait
xlat
inc
push
je
xor
icebp
cmp
dec
arpl
sub
das
leave
adc
jmp
stc
mov
fwait
xchg
lea
inc
addr16
sub
sbb
jmp
mov
sub
push
data16
push
jbe
xchg
dec
nop
stos
mov
pop
mov
xor
dec
mov
add
mov
xor
inc
mov
adc
xor
ret
loop
jecxz
jge
cld
out
sub
or
js
int3
mov
lea
dec
adc
mov
outsl
inc
or
and
sarb
sub
test
test
pop
imull
loopne
dec
mov
ror
push
loop
and
jl
mov
adc
mov
mov
mov
mov
cltd
mov
sbbb
stos
js
jge
sbb
cltd
sub
cs
xor
mov
arpl
mov
mov
cmpsb
fadds
sbb
xor
push
fnsave
cmp
pop
call
test
mov
sbb
and
insl
adc
fiaddl
stos
or
inc
mov
sbb
cli
mov
sahf
out
jecxz
mov
mov
mov
push
sub
mov
rcrb
pop
repz
adc
sbb
add
fcomps
xchg
xor
movsb
mov
das
or
add
jge
jnp
cmc
add
repnz
xor
push
inc
rolb
mov
call
orb
mov
add
or
pop
or
xchg
lods
cmp
fwait
adc
addb
xchg
dec
pop
nop
inc
out
jmp
add
pop
and
and
mov
loope
mov
push
jp
push
rcrb
outsb
push
insb
add
outsb
adc
das
push
mov
addr16
sub
cmpb
mov
sub
sbb
adc
xor
outsl
push
xor
mov
push
adc
jno
popa
test
jmp
sbbl
add
outsb
push
fisubs
and
mov
fsubl
test
mov
and
or
inc
mov
cwtl
in
adc
fcmovnb
movsb
ret
inc
mov
ret
scas
xor
mov
test
push
les
lahf
mov
xor
xchg
stc
and
mov
add
adc
divb
nop
bound
ret
enter
or
inc
test
mov
aad
outsb
pop
sbbb
shl
int
outsl
push
stos
in
ret
lods
push
push
cmp
jmp
adc
ret
adc
in
sahf
adc
sub
mov
xchg
add
call
ret
subl
inc
adc
xor
jnp
push
jae
sbb
xchg
add
dec
in
test
sbb
add
mov
inc
dec
pop
js
inc
add
test
xchg
dec
sbb
xor
and
out
push
pop
add
or
or
popa
shll
pop
test
iret
mov
mov
inc
pop
pop
cmp
push
dec
add
cs
inc
fst
push
mov
lock
xlat
pop
ljmp
xor
out
mov
lcall
lahf
fbld
pop
and
mov
and
xchg
pop
lods
xor
or
in
push
push
shlb
aad
push
push
jb
imul
inc
xor
inc
out
popf
dec
mov
sbb
inc
push
test
and
inc
gs
xchg
inc
leave
inc
jmp
pop
or
cli
xchg
lods
push
sub
in
mov
sbb
inc
movsb
and
xchg
or
add
lea
add
shlb
dec
xor
push
nop
sbb
pop
stos
mov
sbb
or
addr16
fldcw
or
jecxz
inc
icebp
dec
push
ss
pop
ja
xchg
lds
add
and
cltd
and
lcall
ret
dec
or
push
fldz
fcomp
and
cs
in
fstp
push
rorl
sbb
popa
adc
int
cmpsb
push
cmp
or
aad
sbb
addl
out
push
add
stos
jnp
cmp
add
mov
xchg
add
jns
popa
sbb
movsl
or
pop
jecxz
pop
cs
enter
adc
adc
push
or
inc
mov
mov
pushaw
shll
sbb
jmp
xorl
pop
add
test
lea
rolb
cmp
movb
dec
xchg
shll
mov
push
jo
out
xor
das
sub
add
subl
and
push
das
pop
ds
adc
mov
inc
inc
mov
inc
shr
mov
xor
inc
mov
sbb
mov
pop
jb
xchg
push
popa
jae
popa
cmp
test
in
xor
pusha
mov
xor
mov
mov
cmp
push
jl
shlb
outsb
pop
outsl
jo
mov
dec
add
xor
inc
push
lock
xor
leavew
jo
xchg
jbe
add
jbe
imul
or
sbb
lret
cmp
test
adc
or
inc
test
repz
scas
cmpsl
and
push
icebp
ret
test
js
xor
shr
in
cmp
ja
outsl
filds
add
es
push
add
add
aaa
inc
cmpsl
scas
insl
pop
and
sub
adc
imul
push
loopne
push
sub
and
add
dec
movsl
and
adc
imul
sub
lds
push
sbb
xor
popa
lret
je
arpl
inc
mov
sbb
mov
push
sub
movhps
aad
sub
cmp
jmp
and
push
jmp
add
mov
imul
fwait
and
fnstcw
inc
dec
push
push
cmp
or
adc
cmp
pusha
jl
mov
ror
popa
inc
push
adc
sub
push
adc
popf
add
imul
lock
push
shrd
sbb
jmp
dec
and
mov
sub
in
or
and
mov
sbb
in
js
mov
xchg
mov
push
mov
movb
pushf
les
pop
ret
add
xchg
shll
lods
sub
add
sbb
xor
pop
mov
adc
js
push
js
outsb
add
aad
sub
and
and
push
mov
dec
daa
mov
test
adc
add
add
or
or
lret
dec
movsl
mov
aam
push
cltd
pop
inc
or
or
sub
popa
xchg
push
and
pusha
mov
pop
add
adc
pop
movb
popf
sub
sbbb
pop
mov
cwtl
inc
inc
jge
mov
xor
movsb
xchg
or
pop
sbb
sub
pop
shll
pop
jne
adc
and
lcall
dec
or
add
push
xchg
and
adc
mov
clc
mov
sub
sub
inc
push
pop
faddl
xor
bound
push
inc
mov
xchg
push
and
ficoml
jb
imul
pop
ret
mov
sub
dec
sbb
inc
and
mov
mov
mov
lahf
lea
into
ret
inc
inc
add
and
cltd
xchg
cmp
loopne
pop
pop
loop
rcrl
bound
pushf
cmpl
inc
jae
mov
inc
adcb
xor
adc
and
or
jo
add
out
or
xchg
fnstcw
push
stc
push
xlat
push
lea
popa
mov
and
nop
mov
add
and
ja
add
inc
pop
dec
out
loopne
mov
mov
or
mov
add
sbb
popf
dec
movsl
sbb
cmp
je
jmp
and
jp
adc
fidivl
sub
sub
into
in
lds
dec
mov
jmp
sbb
lcall
fcmovne
popa
push
call
and
lds
imul
add
pop
adc
or
jo
nop
into
push
dec
lahf
xchg
xor
add
or
inc
adcb
imul
das
dec
xchg
push
mov
pop
sub
mov
negl
xor
mov
and
sub
add
mov
rcl
adcb
pop
sub
lock
call
dec
push
push
je
jmp
sbb
adc
sub
pop
inc
inc
adc
add
push
sub
scas
in
add
sbb
jbe
jb
inc
cs
mov
aam
sbb
xchg
mov
sub
and
mov
out
xchg
jb
inc
adc
sbb
pop
push
nop
hlt
jo
cmp
inc
sbb
pop
addr16
mov
mov
dec
dec
push
sbb
insb
adc
fisubrs
jne
inc
adc
fstpl
fimuls
mov
sub
pop
jbe
inc
cmovle
cltd
dec
and
add
jge
sbb
insb
inc
push
add
xor
jmp
and
movsb
or
popa
nop
mov
mov
and
pop
int3
add
test
add
or
adc
inc
adc
and
inc
sbb
imul
add
pop
cmp
dec
inc
or
dec
add
dec
pop
fbstp
adc
lret
das
push
inc
test
and
test
dec
and
out
lock
into
mov
xchg
xchg
orl
testb
je
fistpll
push
test
lea
jne
pop
push
rclb
je
jl
mov
push
inc
mov
orl
in
or
mov
outsl
lret
xor
test
or
or
xchg
lods
adc
shlb
xchg
je
push
cmp
pop
xchg
pop
inc
stos
or
add
jg
mov
dec
or
push
stos
aas
xchg
mov
push
mov
mov
sub
inc
xor
movsb
rclb
add
push
loope
insl
and
addr16
add
lds
xchg
xchg
fisttpl
and
fnstcw
test
rorl
mov
push
scas
sbb
xor
mov
pop
xchg
jne
xchg
rol
fcmovnb
pop
xor
dec
push
pop
mov
push
cmpsb
stos
lods
pop
lods
sbb
and
pop
dec
scas
push
adc
push
test
push
or
or
daa
lahf
add
ret
push
add
push
adc
xor
dec
sub
push
arpl
push
push
cmp
inc
out
shrb
and
loope
dec
call
pop
cmp
sub
cmp
lret
and
dec
jae
mov
test
pop
mov
cmp
sub
push
scas
dec
add
sbb
adc
ret
lret
stc
aad
cli
dec
inc
ret
mov
imul
ss
add
jp
xlat
xchg
cli
push
mov
push
push
push
xchg
lods
ja
dec
xor
popl
roll
add
mov
adc
daa
push
lret
cli
ret
dec
dec
jl
paddd
push
aas
stc
push
aaa
mov
add
xchg
and
es
sub
cmp
rolb
inc
sbb
cmpl
rcll
fdivl
pop
insl
xor
fdiv
test
dec
mov
xor
mov
enter
sbbl
or
and
adc
dec
subl
push
xor
push
test
das
aaa
cmpsb
push
jl
sub
loopne
arpl
lcall
push
inc
in
pop
cmpl
mov
adc
or
pop
cltd
daa
pushf
xor
cltd
mov
push
lret
xchg
mov
negb
pusha
out
mov
xchg
in
add
les
xlat
xchg
inc
sub
mov
adc
sbb
jnp
testl
cwtl
pop
int
lock
lea
sbb
jno
sbb
fmuls
movl
and
push
lea
xor
xchg
enter
xchg
xor
mov
or
js
adc
jl
jbe
sub
and
std
push
push
adc
xor
sbb
or
ret
adc
push
adc
mov
dec
sub
lea
sub
xchg
hlt
scas
jae
in
push
xorb
fistpl
lea
cmpsb
mov
or
and
add
dec
sbb
sahf
cmp
mov
cltd
insl
cs
out
push
cmovno
and
loopne
pop
mov
stc
sbb
lret
pop
cmc
push
xor
ss
push
push
mov
or
sbb
dec
in
ret
mov
ss
add
pushf
lret
ret
ret
push
out
add
pop
dec
gs
or
dec
push
cmp
jo
ds
test
dec
or
mov
leave
jnp
mov
js
push
cmpsl
orl
outsl
pop
dec
out
shll
add
push
inc
xor
pop
iret
int3
mov
test
inc
cs
imul
inc
lods
push
fcoml
jb
or
or
add
push
in
loopne
jb
dec
in
andl
int3
sarl
loop
xorb
pop
xchg
fmull
cmpsb
movl
sbb
mov
dec
dec
mov
ret
push
leave
mov
xor
lcall
xor
ret
scas
sbb
inc
inc
add
cltd
out
mov
xchg
jo
inc
test
cmp
mov
or
dec
xchg
xchg
inc
stos
push
or
into
das
loopne
les
inc
dec
pop
pop
orb
and
mov
orl
push
cld
and
mov
inc
ss
repnz
mov
pop
xor
mov
or
mov
cmp
xor
adc
mov
push
dec
dec
and
pop
enter
enter
insb
inc
pop
insb
adc
cmpl
add
add
fwait
sub
aam
andb
loopne
lea
insb
add
cmp
xor
push
test
in
push
nop
jp
loope
fadd
jecxz
add
fwait
xchg
jns
or
incl
arpl
xchg
adc
mov
xchg
enter
enter
mov
dec
popf
or
cmp
inc
mov
mov
data16
pop
sbb
cwtl
aam
jae
sarb
jecxz
xor
xlat
mov
cmp
sbb
popl
je
xchg
lds
out
or
add
es
push
movsb
push
dec
mov
dec
pop
subl
pop
inc
add
mov
mov
xchg
test
push
or
add
pop
test
gs
adc
fcmovnu
shll
mov
sti
inc
cmpsl
fnsave
mov
adcl
add
ja
ja
movsb
adc
push
push
adc
push
and
lea
loop
cmpsl
dec
add
jno
dec
push
dec
adc
xor
add
mov
sub
push
popa
daa
cmpsl
adc
xchg
jbe
adc
jo
lock
loopne
jbe
pop
and
pop
adc
sbb
jp
or
inc
bound
dec
push
jne
fidivs
or
cwtl
fisttpl
jae
loop
push
inc
orb
mov
rcl
pop
stc
add
pop
rclb
leave
testb
lods
jo
ds
jno
insb
ret
cmpb
push
xor
adc
mov
js
ss
jbe
daa
jbe
dec
push
cmp
pop
push
fbld
cmp
adc
wbinvd
xor
or
lea
lea
xorl
inc
xorb
sidtl
mov
jae
push
mov
addr16
out
es
loopne
fcmovb
in
and
mov
pushf
fistl
inc
mov
sub
mov
movl
std
jle
inc
mov
add
add
xor
add
stos
insl
and
add
movb
movsl
add
and
sbb
test
xor
xor
imul
sbb
pop
loop
adc
or
mov
mov
sbb
scas
mov
or
xchg
mov
inc
jns,pn
add
fs
jno
or
out
xor
pop
scas
arpl
or
inc
mov
or
mov
negb
ja
in
sahf
jl
je
adc
sbb
cmpsl
mov
xor
and
mov
int
dec
sbb
popf
shl
push
jmp
stos
dec
leave
sbb
push
xlat
pusha
or
jge
mov
jmp
lea
add
leave
jnp
ret
mov
sbb
pop
cmp
push
and
dec
inc
test
sbbb
test
test
sub
test
loope
dec
pop
mov
ret
xor
dec
movsl
mov
in
and
jb
sub
test
popa
cmp
adc
jl
in
jecxz
orl
cmp
sbb
lea
or
inc
sub
sbb
pushf
lcall
sarl
push
cmc
adc
dec
and
or
xlat
je
xchg
decl
add
movl
mov
adc
push
dec
push
pop
inc
xor
add
stos
add
cmp
movsb
outsl
push
push
adc
add
add
int
imul
mov
scas
inc
and
or
sbb
lds
sbb
shl
clc
je
popa
inc
negb
jge
bound
pusha
and
into
call
test
sbb
sbb
cmovno
sub
ss
jle
pop
insb
and
inc
pusha
dec
out
mov
mov
adc
movsb
dec
xchg
fsubl
aas
push
xchg
cld
cmp
adcb
pop
sub
pop
sarb
nop
add
in
mov
fdivr
or
push
pop
sbb
addr16
xor
cmp
add
lea
loope
rcl
into
dec
mov
sub
jne
cmp
out
mov
sub
jae
xor
lods
xchg
inc
pop
ja
adc
sbb
inc
pop
lret
sub
adc
or
xor
es
test
pop
bound
push
sbb
pop
jae
xchg
mov
jnp
ja
mov
sub
pop
xchg
sahf
adc
and
inc
and
loope
or
dec
adc
push
out
cltd
or
jle
lea
lods
sub
insl
ljmp
cs
stos
mov
rol
mov
mov
adc
inc
adc
jno
subb
and
mov
push
cmp
sbb
dec
add
push
lock
pusha
fs
mov
pop
push
ss
inc
mov
add
lea
mov
sarl
int3
nop
add
mov
andl
or
xchg
lahf
dec
pop
push
mov
mov
pop
mov
insb
jo
pop
mov
and
or
mov
nop
or
mov
maxps
cmp
pop
xor
add
mov
je
in
jno
add
sub
push
sbb
repz
sub
push
add
inc
or
mov
jmp
movsl
mov
mov
dec
movsb
cmp
mov
xchg
js
popa
jbe
nop
adc
sub
ljmp
xlat
mov
rcrl
js
inc
iret
cwtl
jl
inc
pop
ds
shlb
cmp
jl
xor
movsl
inc
lds
int
xor
or
and
cmp
ja
mov
pop
xor
add
mov
nop
test
imul
shll
es
sub
mul
ja
mov
xchg
stos
in
jns
or
inc
xor
bound
mov
cmp
push
cmp
sbb
xchg
dec
insl
mov
addb
fmuls
inc
and
pop
sub
dec
mov
insb
mov
aad
xchg
mov
mov
or
ret
pop
cmp
pop
scas
mov
cmp
test
cmp
push
xlat
data16
fdivs
xchg
mov
mov
out
sti
dec
cmp
sbb
adc
stc
push
pop
das
icebp
add
loope
jle
insb
mov
add
jl
das
push
insl
mov
or
mov
sahf
lods
add
cmp
jg
mov
mov
adc
mov
jne
ss
cmp
jge
insl
cld
ljmp
mov
sbbb
jp
add
push
rcll
nop
xlat
sbb
cmp
add
sub
sbb
inc
inc
jmp
sbb
sub
cs
pop
push
push
push
xor
movsb
sarl
adc
in
and
jecxz
add
add
and
test
sti
push
mov
dec
inc
ljmp
ror
pop
movb
add
push
inc
cmp
pop
rolb
xor
dec
pop
push
or
push
mov
xchg
push
stc
sub
data16
test
sub
clc
inc
push
add
mov
push
push
sub
dec
in
mov
rcr
push
add
adc
cmp
or
inc
cmp
jb
out
add
loop
push
add
dec
dec
xchg
jl
jne
mov
scas
inc
leave
imul
inc
loop
dec
je
pop
add
fcoml
movsl
shll
sbb
push
aaa
lea
fisubs
mov
nop
imul
subb
add
inc
ret
xor
mov
push
pop
or
test
dec
mov
push
pop
jne
xchg
pop
xlat
insl
cmp
pusha
outsl
adc
je
dec
leave
sub
jle
sbb
cmpsb
and
fsubs
jne
decl
outsb
fistl
out
fildll
pop
sbb
inc
mov
andl
je
loop
arpl
mov
inc
pop
cmp
or
call
cli
push
adcb
daa
dec
pop
xchg
mov
sub
mov
fs
pop
test
ret
rcll
dec
insb
push
stos
add
cli
test
pop
hlt
mov
cmp
and
add
sub
jl
mov
sub
jne
mov
push
push
and
repnz
jge
mov
add
inc
int
push
pop
sub
xchg
sub
loope
cmc
and
jo
or
unpckhps
aam
cmc
add
dec
enter
pop
pop
int3
stc
add
inc
int3
cmp
xchg
sub
fiadds
sbb
dec
mov
push
adc
sbb
or
mov
adc
mov
rolb
ret
sbb
mov
enter
mov
repz
sbb
push
jno
daa
adc
mov
mov
test
and
scas
add
xlat
je
push
scas
mov
jb
push
xchg
shrb
icebp
xorl
and
xor
or
add
xchg
sub
xor
insl
out
dec
push
add
cltd
inc
fadds
ss
or
dec
lods
ficompl
es
inc
sbb
ret
mov
pop
xchg
push
lret
push
and
dec
pusha
push
sub
dec
mov
or
int3
or
loopne
jns
fsts
fiaddl
sub
xchg
push
mov
movsl
fnsave
or
or
insl
xlat
in
icebp
imul
cmp
xlat
aaa
inc
sub
dec
lock
mov
push
push
sub
stc
sub
mulb
push
subb
adc
int
adc
mov
adc
jecxz
or
and
sbb
or
pop
and
inc
adc
xor
stos
push
mov
sbb
mov
cmp
add
xchg
mov
lea
adc
pop
add
sub
cwtl
les
jb
sbb
aam
adc
sbb
xchg
mov
mov
sub
fimuls
fnstcw
pop
inc
sar
mov
dec
pusha
and
xchg
push
push
adc
inc
scas
dec
out
push
adcb
arpl
mov
mov
or
sub
mov
mov
mov
inc
add
mov
and
dec
pushf
cli
or
push
push
les
push
and
pop
xchg
je
out
call
stc
sbb
add
mov
mov
dec
xchg
outsb
dec
repz
mov
outsb
mov
insl
adc
push
and
and
mov
mov
push
or
iret
mov
pop
enter
push
add
jo
jbe
enter
cmp
dec
sub
mov
rcll
inc
es
sub
mov
jp
add
nop
mov
jmp
test
pop
xor
cmpb
idivl
add
sub
jbe
fidivrl
add
in
inc
sahf
bound
sbb
or
loope
in
add
leave
fiaddl
pop
add
inc
mov
pop
test
push
push
push
xchg
mov
push
data16
push
inc
ret
and
xchg
or
cwtl
inc
in
and
insb
push
sahf
subb
sarl
push
adcl
push
push
xor
sarl
cmp
insb
inc
test
or
mov
adc
ret
icebp
adc
add
push
add
sbb
sbb
mov
or
mov
sbb
pop
inc
sbb
cli
mov
aas
add
add
and
xorb
insb
fdivrs
xorl
add
loop
xchg
mov
push
js
add
mov
and
outsb
inc
pop
xor
mov
xorl
test
cmp
in
mov
je
js
sbb
inc
cs
jb
sbb
push
pusha
or
lret
xchg
push
and
scas
inc
loopne
push
addr16
add
fimull
stos
aam
xor
xor
push
jmp
iret
pop
adc
xor
or
sub
xchg
push
sub
jl
fs
cld
cmp
inc
sbb
ja
and
in
dec
or
dec
xor
dec
inc
and
adc
andl
jmp
xchg
enter
ss
mov
xchg
mov
ret
inc
jg
mov
pushl
xchg
lock
adc
or
pop
sar
adc
test
mov
mov
test
jle,pn
in
or
pop
inc
and
pop
ficomps
cmp
loope
push
gs
jo
aam
sti
cmp
dec
clc
dec
subl
or
add
mov
fcoml
sub
sub
sub
push
mov
xor
mov
dec
push
and
in
fcomps
pop
pop
scas
add
cmp
neg
dec
dec
lea
shlb
mov
adcl
sbb
or
cmp
push
push
pop
mov
jmp
and
mov
int3
and
ja
in
div
gs
mov
out
add
lods
pushf
or
hlt
decb
dec
inc
pop
inc
mov
mov
fiadds
sti
pop
dec
jbe
jle
jmp
xlat
fs
sbb
js
inc
cmp
jo
and
mov
mov
cmpsb
xor
fstps
or
sub
dec
ret
jne
cli
pop
testl
loope,pn
and
adc
sbb
dec
pop
cmp
add
adc
xor
fcoms
test
xchg
dec
and
bound
aam
xchg
adc
push
xchg
icebp
mov
add
add
xor
movsb
repz
mov
shrl
je
aaa
add
jne
lods
sar
dec
inc
adc
cmp
out
or
xchg
add
sbb
inc
popa
pop
repz
out
out
inc
mov
or
dec
xor
push
push
sub
ljmp
jae
cmp
inc
pop
mov
mov
loope
xorl
jecxz
cmp
and
and
jl
add
aad
xor
clc
inc
outsl
mov
imul
ud0
add
pop
fiaddl
inc
push
pop
rolb
xchg
fs
xchg
jb
jle
add
loopne
mov
pop
jnp
dec
je
fucom
cmp
or
jnp
jmp
fisubl
adc
jg
push
push
push
stc
push
lock
cmpl
xor
add
add
outsb
cmpl
and
bnd
push
inc
nop
sbb
je
icebp
push
mov
push
jg
into
cli
mov
cvtpi2ps
rclb
lahf
xchg
into
inc
mov
push
lret
mov
bound
push
les
stos
push
fadds
mov
lea
or
or
inc
sbb
icebp
into
xor
dec
sbb
push
cmp
cmp
test
loope
pusha
loopne
loope
and
xor
inc
or
inc
jae
lret
int
add
lds
gs
push
sbb
add
dec
and
mov
push
and
cmpsb
push
cmp
mov
add
sbb
or
or
inc
add
add
loopne
cmpsl
or
pop
xchg
fldl
lock
xchg
cmpb
cmpsb
sysret
push
and
push
dec
cmp
daa
ficomps
mov
cli
lds
add
cmp
or
arpl
clc
scas
nop
add
mov
xchg
adc
fnstenv
add
lea
rcll
jge
mov
sbb
testb
leave
mov
cli
pusha
dec
pop
imul
xchg
sub
roll
mov
xchg
and
jne,pt
fdivrs
mov
stos
fisttps
or
shlb
jo
cmp
and
dec
addr16
jecxz
les
je
inc
inc
pusha
lcall
inc
add
mov
je
lret
and
test
or
inc
ds
fsubs
popf
pusha
dec
or
lds
clc
mov
inc
add
cli
xchg
sub
inc
inc
enter
cmpb
mov
mov
mov
sbb
scas
cmpl
sub
push
inc
xor
scas
dec
fadd
fidivrl
add
lods
or
movsb
sahf
and
pop
mov
pop
sbb
inc
adc
fidivl
cmp
push
jecxz
lahf
sahf
mov
cltd
push
or
gs
jb
les
imul
lea
jns
mov
adc
add
or
rcrb
push
mov
stc
jmp
ja
gs
push
add
add
mov
cmp
xchg
inc
mov
add
out
dec
push
inc
cld
ljmp
push
lock
xchg
xor
sub
es
or
and
xor
sbb
sbb
rclb
jbe
dec
cmp
aas
and
inc
jge
or
insl
test
sbb
or
or
aam
and
lret
add
xchg
dec
push
lock
movsb
xchg
aam
inc
testb
jp
jb
add
clc
pop
in
inc
fs
mov
lea
or
push
dec
addr16
sbb
stos
push
xor
or
insl
stos
hlt
jbe
in
pop
lea
inc
adc
mov
xor
sub
pop
and
fidivrs
xchg
mov
popf
insl
pop
xchg
rorl
pop
mov
loop
ljmp
jge
ja
incl
mov
add
bound
dec
iret
jg
sub
aam
pop
jb
jae
gs
adc
adc
xor
inc
sub
dec
jge
push
mov
out
xor
jnp
pop
sub
xchg
adc
fs
lea
jo
faddl
push
or
rcll
inc
push
xchg
or
cmp
add
pop
add
in
cltd
and
jae
notl
cmp
jo
cs
push
in
fcompl
test
pop
nop
and
mov
daa
and
push
test
shlb
sub
movsb
add
cld
add
add
add
push
mull
js
push
lods
xor
xor
fdivl
cs
lahf
daa
adcb
inc
sub
rcrb
push
push
add
shll
sbb
dec
cs
dec
cmpsb
xchg
test
sub
cmpsb
xchg
adc
add
pop
loopne
add
push
insb
cli
sbb
and
rcrb
pop
insb
push
ds
fisttpll
add
jecxz
ret
mov
xchg
mov
fbstp
lods
call
leave
push
rclb
dec
mov
add
jb
cltd
movsb
cmp
and
cltd
xchg
or
cltd
add
or
xchg
sub
pusha
jo
incl
sub
iret
shll
mov
push
xor
and
cmpsb
inc
mov
jge
mov
and
cmc
mov
push
popa
ljmp
cmp
cmp
jle
clc
mov
enter
xchg
test
nop
mov
push
mov
mov
test
stc
sub
fisubrl
inc
addr16
in
cmpsl
cmpsb
add
sub
mov
dec
pop
sub
enter
sbb
aam
call
cmp
push
sub
or
js
sahf
adc
outsl
inc
sti
and
movswl
sub
cmp
mov
das
adc
cwtl
test
mov
add
mov
pusha
push
std
dec
movsl
jb
pop
loopne
dec
js
or
nop
xchg
or
bound
mov
xlat
sub
and
lods
mov
addl
push
cmp
dec
inc
test
into
jmp
inc
fiaddl
add
mov
pop
je
fisttpl
xor
or
test
rep
push
add
test
rcrl
leave
add
pop
mov
push
mov
lret
xorl
shr
xor
enter
les
push
mov
push
push
mov
rclb
adc
xor
lods
fisttps
inc
xor
test
inc
js
add
lock
or
mov
push
sbb
inc
or
repnz
ret
xchg
dec
repz
push
push
aad
loope
imul
mov
and
sbb
mov
or
push
mov
fnsave
and
adc
cmc
add
or
rclb
fbld
xor
add
mov
test
fs
push
dec
fldl
nop
stos
in
mov
adc
leave
inc
mov
or
outsb
dec
cmp
dec
inc
inc
pusha
xchg
adc
rolb
add
int
sahf
movl
adc
rclb
repz
pop
sbb
repz
sub
dec
xor
out
jge
icebp
sub
imul
cld
xor
push
repz
out
pushf
mov
repz
sub
xchg
mov
sahf
cmpsl
stc
cmp
sbb
sahf
data16
jo
pop
or
sub
inc
push
call
jl
out
jns
lahf
or
ds
and
inc
sarl
pop
push
or
sbb
add
cmpsl
or
stc
jo
xchg
sbb
cmp
repz
enter
jnp
dec
repz
inc
cli
push
out
lcall
push
sbb
sahf
out
sahf
inc
mov
mov
sbb
cmp
fwait
xchg
xor
dec
pop
add
in
es
push
jnp
xor
sub
and
dec
les
and
pop
add
cmpb
add
and
test
add
xchg
shrl
sub
sbb
fbstp
pop
push
xor
outsl
je
mov
inc
add
xlat
xor
dec
mov
jne
mov
pop
ljmp
push
sbb
popa
mov
movsl
aaa
sbb
sbb
pop
or
movswl
movsl
inc
neg
and
adcl
mov
out
xchg
and
iret
inc
push
inc
or
push
push
xchg
and
mov
mov
push
fs
pusha
jne
mov
mov
movsb
clc
sbb
jge
xorb
rorl
inc
mov
or
add
and
mov
adc
xor
aam
insb
addr16
sahf
lods
rcll
and
dec
or
add
add
inc
push
mov
cmpsl
dec
xor
mov
fistps
xchg
or
cld
ret
adc
or
or
mov
nop
lock
stc
push
aad
and
dec
lock
imul
or
push
sbb
pop
loopne
push
test
inc
sbb
cli
and
pop
add
clc
dec
aaa
add
fdivr
push
or
sbb
pop
add
inc
sub
pop
je
out
movsl
rcrl
jmp
hlt
clc
mov
pushf
and
add
pop
subb
cmp
test
adc
stos
aas
les
clc
add
add
pop
popw
sub
lcall
jbe
inc
jmp
ja
inc
inc
adc
cmp
sbb
and
test
inc
push
mov
fs
push
add
push
rorb
add
or
push
in
ja
push
gs
scas
sbb
inc
jmp
shll
dec
jmp
or
ret
jnp
test
nop
sbbl
xchg
lods
push
or
add
push
aad
dec
shll
insl
les
and
std
mov
test
dec
cmp
add
adcl
and
insl
jmp
mov
stos
imul
add
cmp
lret
sbb
xchg
xor
sbb
sub
jne
add
in
or
gs
cmc
inc
adc
jmp
jmp
test
popa
mov
push
mov
push
cmp
mov
mov
outsl
stos
insl
ljmp
dec
sbb
in
mov
cmp
xchg
push
mov
adc
sub
xor
sbb
popa
loop
jb
or
jo
pop
mov
ret
scas
mov
xor
sbb
mov
push
adc
and
jo
outsb
mov
nop
and
push
xor
pop
mov
push
dec
mull
cs
fidivrl
fcompl
mov
aas
fnstcw
cmp
mov
push
repnz
and
dec
push
inc
jmp
sbb
or
inc
gs
push
in
out
inc
clc
cmp
adc
add
add
popf
int3
insl
lea
push
adc
je
fnsave
mov
es
add
imul
shlb
ficoms
mov
sub
jle
popa
xor
pusha
mov
test
add
sbb
fdivl
or
push
mov
add
pop
and
mov
push
iret
xchg
cltd
or
mov
mov
xor
pushl
cmp
add
cmp
insl
imul
xchg
movsl
adc
xchg
sbb
xchg
mov
xchg
adc
dec
les
add
mov
dec
loope
pop
pop
inc
mov
mov
pop
mov
sub
push
dec
repnz
jg
jmp
adc
sbb
and
lds
fdivl
in
inc
and
sbb
loopne
jne
dec
mov
ret
lea
push
and
inc
loopne
and
in
pop
nop
sbb
pop
inc
pop
roll
sbb
add
fadds
enter
scas
popl
mov
insb
cmpsb
jo
add
lock
pop
dec
adc
test
mov
dec
clc
and
sub
sbb
jmp
push
rol
pop
add
dec
or
rcrb
inc
jo
cmp
inc
inc
and
pop
call
inc
out
push
adc
fstl
adc
sub
pop
or
hlt
test
cwtl
mov
and
sbb
add
and
jo
inc
sbb
xorb
jmp
imul
push
xor
aas
adc
add
movsb
or
add
inc
les
push
or
fwait
jns
shll
jp
sub
add
mov
or
mov
lods
shll
cmp
jmp
mov
xorl
xchg
dec
movsl
push
sub
sbb
sbb
sub
or
dec
xor
jns
shrl
outsl
mov
mov
cld
pushf
outsb
push
dec
or
mov
mov
test
icebp
rcrb
mov
call
mov
loop
das
test
push
sbb
push
xor
push
shrb
cmp
xchg
mov
mov
orb
cmpsb
mov
add
dec
adc
mov
fidivl
push
clc
pop
push
pop
into
and
mov
mov
pop
add
adc
aam
sbb
pop
lea
rcrl
or
mov
imul
xor
lret
insb
bound
add
cmp
dec
add
mov
fwait
dec
dec
add
xchg
push
push
push
sahf
imul
clc
push
out
clc
iret
outsl
loopne
mov
pop
sub
ljmp
popa
adc
pop
cmp
add
inc
push
repz
ret
and
mov
add
dec
pop
add
sbb
sbb
sbb
mov
lret
in
ss
subl
push
cmp
cmp
ffree
xchg
cmpsl
lods
cmpsl
cmp
ja
mov
frstor
push
mov
add
inc
leave
sahf
aas
xor
bound
pop
add
insl
mov
xlat
mov
jne
xor
sbbl
fildl
mov
shll
inc
dec
mov
sub
xchg
out
or
mov
adc
jmp
jns
js
mov
into
push
pop
test
pop
push
pop
inc
in
mov
mov
inc
jge
sbb
push
pop
mov
add
inc
or
mov
int3
mov
xchg
inc
jge
push
dec
sub
int
int3
xchg
jno
inc
mov
sub
cmpsb
mov
mov
ja
enter
addr16
and
in
add
sub
sarl
xor
dec
push
das
lods
and
dec
pop
mov
inc
sub
shlb
imulb
xchg
cmp
add
jge
mov
lret
push
xchg
pop
adc
insl
or
adc
enter
data16
sbb
jbe
sbb
push
cmp
dec
push
cwtl
lret
xor
inc
push
inc
inc
adc
inc
outsb
add
inc
push
xchg
pop
insb
xchg
adc
sbb
xor
roll
sti
loope
dec
xchg
sub
dec
inc
test
add
imul
sbb
and
and
jne
shrl
inc
insl
lea
fsubrs
add
and
ja
pop
testb
sbb
dec
add
push
push
xchg
es
insl
sub
add
sub
out
sahf
cmpsl
push
cmp
jns
into
repnz
sbb
movsl
rcll
sbb
dec
adc
pop
call
or
rorl
and
sub
scas
stos
test
pop
sbb
push
mov
test
stos
popa
push
push
movsb
dec
mov
mov
es
sub
sub
add
add
sub
mov
add
fstpl
mov
shlw
inc
mov
inc
lock
xor
cmp
xchg
push
or
dec
xchg
loope
jb
cmp
hlt
mov
sub
adc
xchg
mov
add
ror
mov
and
or
add
insl
mov
push
adc
xchg
in
jne
cmp
dec
out
or
daa
or
shr
jns
jge
cltd
scas
es
int
pop
aaa
adcl
jo
sbb
repz
push
fildl
std
jbe
cmp
inc
call
jp
int3
adc
jae
dec
or
shr
lock
push
scas
cmpsl
enter
sub
jb
into
test
movlps
fst
imul
sub
sub
rcrl
std
mov
inc
inc
mov
sbb
movb
or
popa
jmp
adc
pusha
dec
clc
icebp
cmp
jmp
mov
push
rcll
scas
add
aaa
xlat
push
enter
mov
andb
movsl
fsubrs
adc
or
xchg
push
mov
bound
sub
mov
add
jbe
fisttpl
dec
popa
mov
cmp
repz
cli
and
push
xor
movsl
push
aad
push
xor
aam
jbe
pop
xchg
lcall
adc
daa
shll
call
jns
inc
and
xchg
lock
lea
popa
jnp
add
movsb
adc
inc
aas
adc
push
test
sub
cs
cmp
add
or
sub
pop
adc
out
push
sub
cwtl
xor
xor
mov
jbe
add
adc
push
inc
cld
xchg
push
scas
lock
adc
mov
lret
inc
or
pusha
loop
cmp
add
dec
popa
pop
add
movsl
or
test
mov
ret
cmp
xor
loopne
or
sti
ljmp
mov
fildll
andl
add
add
xchg
adcl
sbb
jle
dec
cli
lea
test
push
lea
sbb
xorb
aam
rcrb
popa
mov
icebp
jl
add
fcomps
adc
inc
imul
mov
lods
fiadds
push
scas
cmp
inc
xchg
ret
mov
add
add
inc
push
daa
sbbl
push
fs
insb
fldenv
lcall
add
mov
xchg
adc
xor
push
push
sbb
adc
add
stc
add
fnstcw
push
pop
aam
cmpsb
mov
mov
or
mov
mov
sub
jbe
pop
lods
fdiv
nop
inc
jg
mov
cmp
push
and
push
jle
popa
and
stc
push
xor
es
inc
adc
cld
sub
dec
std
sbb
rcr
rcll
or
mov
lret
nop
jl
dec
sti
shll
push
jecxz
loope
push
mov
addr16
jmp
mov
aaa
daa
add
push
cmp
inc
aas
mov
or
xor
loop
or
adc
jecxz
mov
push
mov
pusha
mov
stos
and
je
dec
push
insl
shlb
cmp
jecxz
cmp
pop
pop
enter
or
cmp
jae
mov
into
sub
xor
out
mov
xchg
rolb
sub
movsl
fs
lock
jno
lcall
sub
pop
sub
or
sub
js
push
insl
push
pop
lahf
push
lea
faddp
sub
add
mov
jmp
insl
js
adc
adc
pop
add
pop
cmp
cmc
movsb
mov
pop
xor
std
lock
dec
or
push
push
xor
sbb
popf
or
push
cmp
add
mov
or
jne
clc
add
jns
push
inc
mov
mov
popf
rorl
nop
dec
add
sbb
xor
jg
scas
push
adc
add
pusha
mov
cmp
xor
xor
push
jns
insb
es
pop
or
inc
movsb
inc
xchg
mov
cmp
pop
ret
push
mov
adc
das
cmp
adc
add
cmpsl
mov
arpl
dec
mulb
shufps
push
outsb
cmp
push
fsts
jb
or
pop
push
add
add
add
loope
sbb
push
dec
mov
and
push
leave
adcb
add
sbb
in
movsb
imul
xchg
cmp
mov
shr
fstl
adc
rolb
sub
pop
jmp
clc
and
and
cmpsb
jo
push
add
pop
or
cmp
add
or
cmp
jnp
mov
aaa
inc
cmp
je
test
mov
addl
add
inc
ficoml
sahf
insb
jne
push
stos
ret
bound
xor
adc
sub
mov
lock
adc
jge
cmp
mov
fwait
xor
add
inc
mov
or
pop
ret
rolb
inc
cwtl
jmp
adc
cmp
sub
and
adc
add
cmp
popa
sbb
xor
sbbl
xor
cmpb
adc
or
ja,pn
xor
js
inc
push
roll
inc
xchg
push
cmp
lahf
mov
es
shll
cs
in
ja
divl
push
push
push
push
dec
add
push
jl
data16
iret
inc
jnp
push
stos
mov
and
clc
mov
adc
daa
movsb
lds
mov
lods
das
add
and
rcll
cmp
ja
push
lock
xor
dec
cmp
jle
shlb
pop
pushf
and
insb
xor
or
fs
add
sub
push
out
repz
out
sub
dec
hlt
js
daa
rcrb
shlb
dec
xor
pusha
or
sub
ret
mov
adc
adc
fldl
cmpsb
aaa
push
enter
and
mov
and
push
lcall
outsb
and
dec
gs
sbb
in
xchg
add
xchg
push
mov
ret
jmp
mov
or
lea
jns
cmp
add
adc
xchg
sbb
add
fildl
adc
dec
push
and
xchg
lods
insl
and
rclb
adc
js
xchg
and
je
sub
dec
pop
mov
pop
adc
xor
aad
scas
or
inc
rclb
shl
or
inc
and
adc
mov
add
test
testl
mov
or
mov
bound
and
bound
xchg
mov
sub
rclb
add
cltd
test
out
ror
pop
and
mov
aam
push
xor
lock
dec
jmp
mov
dec
subl
into
push
jl
lods
mov
jne
je
adc
mov
push
mov
adc
xor
fists
xchg
mov
jns
dec
push
add
aaa
in
add
sub
or
imul
jnp
xor
push
inc
inc
les
xchg
jp
out
xchg
push
push
mov
sbb
dec
inc
lock
sbbb
sarl
orb
inc
adc
cltd
stos
xor
sbb
or
ds
mov
push
pop
sarb
xchg
data16
cmp
adc
stos
jbe
or
dec
sub
push
mov
or
adc
sbb
xor
flds
push
adc
push
inc
mov
in
mov
mov
inc
lcall
xchg
imul
lods
pop
xchg
xchg
push
or
dec
xor
sbb
jl
or
data16
cmp
push
hlt
into
test
push
add
push
sti
fbstp
inc
je
sub
je
adc
or
adc
push
int
test
dec
push
mov
les
jl
jmp
add
test
push
cmc
incl
pmovmskb
addl
jg
fwait
mov
push
dec
lds
inc
addr16
pop
and
or
pusha
push
scas
or
sub
inc
adc
lcall
push
mov
xor
xor
mov
mov
add
xor
test
inc
movsl
std
ds
dec
cmp
cmp
dec
filds
cmp
push
rep
or
jo
mov
adc
into
mov
sbb
adc
push
inc
mov
cs
fs
stos
fwait
pusha
cli
mov
dec
aaa
xchg
mov
mov
sub
orl
jbe
test
xor
mov
cmp
jbe
mov
mov
rclb
shlb
push
inc
jmp
add
jmp
sub
roll
push
sbb
sbb
lret
mov
jecxz
popa
sub
add
sub
push
push
and
or
mov
fwait
push
test
loopne
insl
mov
cmp
je
push
fwait
adc
incb
mov
mov
in
jno
pop
push
sub
cmp
mov
push
and
push
sub
inc
je
scas
sub
outsl
mov
add
fldt
pop
and
incb
dec
sbb
inc
dec
push
pop
or
repz
add
inc
jae
addr16
add
inc
dec
nop
adc
pop
jecxz
push
or
jo
inc
push
rolb
adc
xlat
xchg
sbb
dec
and
and
inc
orb
mov
lea
data16
push
push
jne
or
mov
xchg
ret
xchg
jns
int3
mov
and
push
bound
nop
int
iret
push
test
inc
outsb
movsb
push
jno
push
sbb
aaa
lods
and
mov
test
dec
or
push
push
push
jns
add
inc
pop
add
ljmp
and
jge
dec
add
les
divl
mov
mov
adc
push
outsl
mov
add
pop
vmovups
jp
aaa
mov
mov
sub
sub
adc
or
xor
adc
adc
test
sbb
and
test
loopne
inc
pop
je
es
mov
sahf
add
je
jns
mov
movsb
adc
jno
inc
movsb
push
arpl
cwtl
xor
and
push
xor
sbb
inc
sub
inc
hlt
nop
or
lods
test
fstpl
fistpl
dec
mov
add
pop
mov
mov
and
imul
jae
push
add
inc
test
cmp
repnz
mov
cmp
push
inc
lock
mov
xchg
mov
loop
mov
xor
add
push
xchg
mov
pop
sub
mov
je
loope
movsb
sbb
xor
push
shrl
push
ret
add
adc
lods
xchg
add
ret
sbb
and
sbb
add
add
das
sbb
add
xor
sbb
and
lret
or
jmp
dec
push
test
or
and
or
subl
filds
les
adc
xchg
mov
in
sbb
and
mov
pushf
push
sub
adc
xchg
push
cltd
xor
pop
sub
sub
ja
push
sub
fadd
inc
lcall
or
pop
inc
add
jecxz
call
ljmp
pusha
shll
pushl
add
add
jmp
mov
sbb
lock
loop
sub
push
dec
push
lods
add
sub
push
cmp
pop
lock
in
mov
rclb
adc
cwtl
jp
jae
jp
das
sub
sub
jp
or
sbb
add
add
and
jb
add
jb
xchg
xor
cmp
pop
xchg
dec
xor
lret
into
pop
sub
cmc
addr16
test
ja
push
mov
hlt
sub
jo
test
mov
mov
inc
adcb
sbb
nop
mov
mov
cmp
and
jl
and
into
sbb
loope
adc
mov
add
test
cmp
movl
add
dec
je
add
femms
or
fcomps
es
sbb
and
push
add
inc
sbb
xchg
push
jo
loope
sbb
jmp
test
jb
lahf
sarb
mov
adc
sbb
inc
or
adc
in
jb
insb
jnp
sbb
enter
mov
add
push
in
sti
setl
cmp
pop
xchg
shrb
sub
push
pop
call
in
sti
push
inc
adc
ret
dec
inc
and
adc
xlat
jg
addl
xor
mull
mov
rclb
cltd
lret
ss
aas
sbb
fmuls
scas
mov
mov
es
add
inc
or
adc
int3
xchg
ss
jmp
jecxz
mov
sub
mov
test
pop
test
dec
and
in
sub
imul
sarl
sub
ret
pop
mov
or
enter
nop
cld
inc
test
rclb
nop
push
push
push
sbb
cmp
or
or
sub
push
roll
addl
pop
repz
test
repnz
test
loope
test
cs
andl
xadd
jmp
sub
stc
out
adc
and
add
inc
dec
movl
pop
adc
and
ret
sub
adcb
and
xor
dec
pop
je
sbb
pop
or
bound
add
out
dec
mov
loope
jno
inc
and
lea
aaa
test
mov
mov
cmp
adc
dec
adc
or
ja
dec
inc
sub
mov
adc
loopne
pusha
push
inc
adc
loop
xchg
insl
xchg
sbb
lea
push
mov
adc
loop
arpl
aad
fcomp
gs
and
adcl
jbe
cmp
es
dec
insl
sarb
add
sbb
ja
lods
out
mov
jns
inc
lea
lahf
xchg
or
call
push
int
mov
xchg
adc
or
jg
inc
sbb
xchg
mov
adc
push
xorl
push
xchg
pop
push
adc
pop
or
test
dec
in
adc
mov
and
loopne
fistl
or
and
ja
cmp
fs
sahf
out
lea
inc
outsb
mov
jo
xchg
mov
sbb
repz
mov
push
push
and
and
addb
shlb
cwtl
mov
ja
jnp
aam
arpl
rorb
imul
add
push
pop
inc
pop
push
dec
ret
or
les
sbb
add
pop
rcpps
mov
pop
inc
push
pusha
lock
and
push
mov
lea
mov
fmuls
mov
adc
shlb
enter
pop
arpl
pop
cmp
repz
xchg
das
rolb
lds
push
adc
lods
sub
sbb
out
inc
pop
push
mov
pusha
xchg
dec
outsl
mov
or
int
sahf
sub
cmp
and
or
inc
inc
push
jle
adc
aas
arpl
scas
sub
enter
adc
lret
jae
push
or
adc
add
or
shlb
push
push
imul
add
test
mov
aam
jecxz
sub
adcb
sub
popl
bound
push
jb
je
pop
xor
sbb
inc
rorl
int
rorl
stos
jmp
pop
loopne
sub
adc
mov
ret
push
dec
sbb
xor
sti
mov
add
inc
adc
sbb
ret
cmp
sub
rclb
push
andl
push
mov
push
mov
pop
test
mov
notl
hlt
pusha
jecxz
or
js
adc
push
mov
sbb
mov
pop
add
xor
insb
cwtl
dec
hlt
out
and
jg
sti
add
aaa
dec
mov
add
js
popa
jns
popf
xor
cltd
adc
fistpll
mov
push
inc
ss
into
pop
push
hlt
sub
add
int
and
stos
mov
add
push
adc
inc
test
push
dec
jb
pop
add
xor
ljmp
and
arpl
inc
sub
inc
inc
loopne
adc
mov
das
push
push
mov
inc
insl
or
sbb
fs
das
adc
iret
cmp
outsl
je
sbb
cmp
or
sub
xchg
dec
sub
dec
or
and
or
and
imul
fimull
mov
jo
jne
movsb
xchg
dec
add
mov
sub
mov
std
and
pushf
jne
or
in
test
inc
sub
add
outsl
xor
adc
aam
push
les
xor
mov
or
popl
sub
insb
push
push
das
adc
jne
jne
add
lret
pop
push
outsb
stc
sub
sub
ret
sub
add
adc
or
mov
cmpsb
adc
push
dec
rolb
xchg
test
or
imul
xchg
nop
xchg
inc
pop
adc
cltd
xchg
out
or
pop
sub
adc
imul
adc
cwtl
adc
test
nop
dec
sbb
movsl
sbb
dec
inc
xor
adc
jo
out
dec
sbb
loope
push
xor
inc
or
ret
inc
dec
mov
or
jne
sub
push
pop
test
pop
jmp
std
pop
dec
cmpsl
dec
add
push
adc
bnd
add
and
cmpsb
rol
adc
xor
loop
sbb
and
jmp
adc
adc
xchg
fisubrl
pushf
push
orb
mov
push
xchg
cltd
add
ss
mov
dec
push
ja
mov
mov
push
fdivrs
push
pop
mov
cmc
inc
movsl
add
inc
push
es
sub
sti
jno
dec
cwtl
jl
pop
jmp
test
movsb
cmpsl
and
stos
sub
push
or
les
or
push
mull
push
fcompl
adc
mov
addl
push
pop
or
lret
mov
enter
lret
les
pusha
cmp
stos
repz
sbb
test
mov
and
push
jl
and
or
sub
adc
sub
aad
fnsave
jmp
hlt
dec
rolb
fistl
gs
push
lods
mov
cmp
outsb
cwtl
sub
movb
add
jns
mov
pop
lret
sub
in
mov
push
add
sbb
sbb
push
add
cwtl
mov
jne
or
leave
xor
jo
outsb
sub
inc
in
push
data16
mov
dec
aaa
sub
mov
fwait
push
sub
mov
mov
popa
jnp
shll
inc
sbb
shll
cmp
and
iret
inc
or
add
sbb
sbb
test
test
or
pop
stos
dec
mov
ds
repnz
sbb
inc
mov
pop
pop
inc
jmp
mov
push
cmp
push
mov
xchg
jl
mov
add
lods
in
and
xchg
lret
cld
or
xor
push
cmp
pop
cli
popa
inc
push
add
and
add
or
repnz
and
lret
ljmp
xor
mov
out
pop
int
adcb
ja
add
push
shrb
sub
inc
push
outsb
mov
xchg
mov
jno
sbb
push
dec
rcll
cmpsl
aas
leave
push
push
jl
jne
mov
mov
je
dec
dec
rorb
jle
orl
cmp
bound
adc
retw
mov
icebp
adc
sub
push
xchg
push
pushf
aad
push
push
daa
or
cmp
sahf
out
xor
push
idivl
jo
and
enter
je
mov
fdivl
movsl
add
xor
xchg
rorb
xchg
mov
das
pop
jmp
sub
push
adc
jno
inc
pop
jge
outsl
mov
inc
mov
int3
in
pop
push
sub
and
or
cmpsl
mov
cwtl
xor
cmp
lds
and
mov
mov
push
pop
xchg
mov
aaa
jnp
mov
and
jl
push
push
dec
dec
add
dec
in
in
push
dec
add
and
fwait
pusha
fwait
add
sub
enter
sub
pop
rcrb
lahf
and
call
pop
xchg
mov
adc
add
inc
mov
xchg
in
pop
jp
xchg
xor
mov
lea
mov
lods
flds
and
or
lods
xlat
sub
sbb
outsl
push
sbb
mov
shlb
push
out
pop
sbb
sbbb
mov
jne
mov
mov
pop
cmp
push
lret
test
ds
add
add
inc
mov
mov
pop
inc
cmp
jmp
xchg
es
add
dec
dec
pop
dec
and
and
push
addb
push
enter
adc
push
pop
inc
add
adc
rcll
jo
jp
je
push
inc
push
push
mov
mov
loopne
add
xchg
scas
orl
inc
adc
adc
flds
lods
sbb
jne
les
js
cmp
mov
add
pop
jmp
arpl
push
push
pop
xor
std
outsb
loop
add
pop
pushl
jnp
push
jne
xor
jge
stos
add
or
arpl
outsl
xchg
cmp
jge
stos
xor
xor
nop
push
sub
sub
pop
bound
and
mov
cmp
cs
add
js
xchg
xor
push
jge
and
jnp
in
nop
mov
movsl
stos
and
push
pop
mov
in
mov
xor
push
jae,pn
nop
jne
loope
pusha
cmp
sbb
push
cmc
push
fdivs
or
sti
loopne
out
inc
pop
cs
sub
mov
fs
lods
imul
pop
mov
cli
out
add
jg
mov
jne
mov
je
add
fcmovnb
ret
shrl
mov
mov
ret
adc
cmpsl
out
shll
jp
jo
mov
push
pusha
dec
popa
inc
arpl
sbb
adc
scas
cmp
adc
cmp
cmpsb
test
sub
mov
inc
inc
pop
test
adc
scas
xchg
push
sti
shrb
pop
pop
and
int3
xchg
and
and
sahf
push
out
or
fdiv
ss
cmp
jle
insl
sub
outsl
mov
rcrb
jne
mov
sti
push
cmp
out
lret
add
flds
js
or
nop
mov
lock
enter
xchg
sbb
dec
dec
push
or
clc
adc
inc
cmp
dec
je
cmp
or
inc
lods
push
add
shrb
pop
popa
call
xor
xor
push
mov
aam
mov
jo
or
adc
xchg
xchg
xor
ret
inc
inc
in
jo
jge
push
push
addl
adc
add
mov
cmp
sub
repnz
or
cld
les
outsb
add
in
lret
dec
movsb
push
pusha
lret
or
andps
jmp
add
mov
vmread
adc
notl
sbb
add
sbb
imul
push
adc
mov
loopne
sub
repz
xor
xchg
xorb
shlb
push
arpl
cmp
adc
dec
popa
mov
pop
dec
mull
dec
push
loope
sar
into
enter
aaa
cmp
sbb
push
or
adc
adc
dec
loopne
lea
loope
or
js
scas
jl
add
cmpsl
xor
and
mov
cmc
or
pop
negb
jnp
inc
mov
mov
notb
and
pop
mov
das
bound
or
pop
lcall
cwtl
mov
sbb
adc
inc
mov
cmp
nop
rolb
les
mov
dec
repnz
sarb
inc
sub
add
mov
movl
jae
pop
adc
sbb
add
fdivrl
mov
inc
sub
lret
sbbb
and
cli
repnz
outsb
inc
aam
lds
andb
mov
enter
addr16
or
mov
int3
pushf
jns
dec
pop
pop
aaa
sti
imul
je
pop
outsl
sbb
fcmove
mov
jae
js
in
scas
sti
xor
jae
movsb
ds
mov
test
push
loop
mov
sub
and
shrb
push
jnp
sarb
jmp
ss
fdivr
push
jl
adc
pop
add
sti
loope
mov
roll
mov
imul
or
mov
or
mov
cs
sarb
inc
lea
pop
sub
fstpt
jle
xor
jle
sub
cmp
lods
icebp
pop
add
mov
jb
sbb
pop
xchg
cmp
or
rcll
clc
inc
add
cmp
jl
sub
dec
pusha
loopne
mov
sahf
inc
sub
jecxz
xchg
and
sbb
cmp
sbb
dec
mov
or
sub
mov
jmp
xor
push
jb
mov
andb
mov
das
lea
and
insl
fisubrs
xor
mov
mov
je
insb
and
push
sub
cltd
xor
arpl
jg
xchg
mov
loopne
pop
in
pop
adc
xor
shll
addb
inc
push
inc
loopne
mov
sti
pop
dec
jl
xor
dec
jnp
and
and
adcl
fstps
cli
mov
mov
wbinvd
cmp
loope
fadds
xchg
push
cmpsl
jne
mov
fwait
iret
sarl
mov
fldt
insl
add
jecxz
push
push
test
sbb
out
movl
push
clc
inc
shll
cmp
lock
xor
xor
cmpsb
push
xchg
std
lds
push
and
in
sbb
rcrl
fldcw
push
and
fdivs
xchg
push
mov
and
aam
pop
or
fwait
add
mov
adc
popa
and
mov
adc
idiv
push
data16
and
push
fcoml
push
andl
jne
mov
xorl
xchg
cwtl
fs
sub
leave
dec
fcomi
or
xor
jmp
mov
mov
insl
add
sub
cli
and
pop
jle
jmp
shrl
add
lock
call
cmpl
cmpsl
push
mov
jle
andb
push
mov
push
mov
idivl
inc
lcall
mov
lods
lods
lea
in
mov
xchg
arpl
push
dec
fidivl
mov
add
mov
mov
xchg
xchg
push
loopne
js
cld
mov
pop
mov
inc
into
xlat
cmp
icebp
push
pop
mov
sbb
mov
sbb
or
cmpl
jb
dec
sbb
or
lock
popa
add
pusha
dec
sbbl
and
xor
mov
test
fcmovb
mov
lea
xor
inc
cmpsb
enter
mov
dec
xchg
popl
add
xor
xor
xlat
or
adc
xchg
pop
sahf
cmp
lret
adcb
pop
jge
jno
and
dec
das
outsl
ud2
sbb
push
mov
adc
add
loopne,pn
and
sbb
xor
in
in
and
and
jns
test
add
dec
xchg
inc
xchg
sbb
jb
cmpsb
scas
sbb
aaa
inc
or
test
adc
xor
mov
add
dec
sbb
xchg
daa
adc
icebp
mov
stc
mov
or
test
xchg
cmc
inc
in
sub
shrb
sub
cmp
lea
sub
mov
pop
cmc
lock
add
fsts
in
shlb
inc
loopne
mov
sub
inc
or
les
insl
popa
pushl
and
arpl
push
movsb
fdivrp
fs
add
les
mov
mov
adc
mov
or
lds
fimull
mov
mov
and
ret
inc
rclb
xchg
push
adc
add
push
mov
ret
pop
aam
es
sbb
cmp
add
jo
pop
movsb
sub
rorl
fdiv
sbb
test
ret
or
imul
popa
mov
ds
add
in
xchg
or
daa
add
xchg
test
pop
pop
mov
push
jmp
test
inc
clc
test
icebp
insb
xchg
cld
push
scas
dec
or
xor
sub
je
jno
jbe
loopne
lock
test
mov
or
add
adc
pusha
inc
push
inc
mov
lret
push
js
insb
call
xchg
mov
lea
popa
pop
adc
sbb
fdivl
inc
lcall
rcr
pop
cmp
ss
mov
dec
rol
mov
xchg
fwait
imul
mov
jg
push
push
sbb
adc
push
or
cmpsb
push
pop
push
outsl
push
mov
arpl
imul
enter
inc
and
jecxz
in
jo
and
ds
movsl
nop
inc
aad
mov
mov
jne
push
bound
sub
dec
lods
dec
and
shll
add
or
and
push
push
pushf
and
imul
pop
cmp
popa
or
cmpsl
imul
outsb
xchg
lret
jmp
mov
mov
and
add
add
pop
cmp
mov
aas
push
xchg
inc
inc
insl
and
les
adc
xor
add
push
adc
sbb
pop
outsl
inc
jg
push
push
roll
pusha
fwait
cmp
push
jmp
add
sti
jecxz
sbb
xchg
sar
jne
pop
adc
fidivl
push
jns
pop
data16
or
cmpb
das
jo
or
inc
add
mov
ucomiss
rol
mov
cwtl
adcl
xor
mov
daa
mov
mov
loop
mov
fidivl
arpl
mov
in
setp
shrl
jge
leave
cmp
cmpsb
out
xchg
inc
mov
xchg
adc
sub
cmpsl
lcall
add
shl
sub
push
pop
insb
lret
sub
and
rolb
push
xor
jge
js
popf
and
inc
xchg
mov
xor
es
push
imul
pop
aas
bound
loopne
add
jb
out
repz
nop
fwait
and
push
jb
mov
adc
push
cmp
push
mov
push
sbb
sbb
jo
mov
dec
cmp
push
or
sub
clc
adc
pop
jb
xchg
mov
lahf
xor
lock
call
or
imul
and
test
or
mov
pop
pushf
push
cmp
cmpsb
sub
and
repnz
xchg
push
js
pushf
nop
xor
xchg
mov
testl
mov
and
push
or
xor
jmp
xlat
loop
shrb
and
shll
std
mov
mov
inc
gs
sbb
xchg
xor
popf
loopne
cmp
sbb
std
push
cs
loop
jnp
dec
push
jno
aam
mov
arpl
xchg
cmc
xor
sub
xchg
faddl
dec
jecxz
sbb
pushf
sub
in
inc
pusha
daa
jmp
popl
jns
jb
test
shlb
adc
xor
enter
xchg
xchg
cmp
push
das
push
jo
test
jl
sbb
shlb
xchg
or
adc
js
sbb
sbb
imul
mov
jecxz
dec
dec
mov
pusha
mov
in
inc
imul
push
xadd
xor
xchg
stos
lea
int3
popa
sbb
sbb
lods
sbb
test
push
repz
dec
add
enter
or
mov
cmc
mov
pop
mov
xchg
je
push
icebp
shrb
mov
mov
add
add
ja
add
pop
movsl
adc
xchg
je
andb
loope
dec
lods
jecxz
mov
daa
xor
outsl
inc
adc
cs
add
mov
jge
movsb
pop
jns
ret
jo
call
add
outsb
and
push
je
push
gs
insl
fwait
pop
pushf
movsl
test
sub
adc
aaa
int3
and
cmp
pop
sub
jno
jns
and
add
add
xor
and
nop
or
xor
test
jecxz
insb
adc
and
adc
or
imul
movsb
popf
ss
push
adcb
xchg
cmp
pop
jmp
je
dec
mov
aas
mov
mov
add
rolb
sbb
in
and
fisttpl
in
movsb
push
or
mov
fwait
sbb
nop
inc
mov
xchg
mov
outsl
pop
cmp
push
adc
sub
popa
insl
inc
xor
enter
adc
dec
pop
jge
inc
adc
sub
inc
cmpsb
jno
pop
lret
push
inc
push
sbb
dec
jne
test
inc
pop
or
xchg
aam
add
iret
jno
mov
inc
add
mov
sub
add
es
dec
nop
in
xor
xor
loope
add
and
xchg
dec
rcrb
or
insb
pop
int
sbb
mov
adc
sub
or
pop
out
jp
shr
mov
mov
jne
adc
sbb
adc
or
popf
inc
mov
lret
fildl
mov
add
jae
out
xchg
dec
dec
adc
or
insl
pusha
mov
insb
and
aam
std
adc
add
insl
repnz
mov
test
sbb
rcll
xchg
lea
rolb
cmp
mov
add
jo
pop
xor
jb
popa
mov
mov
add
test
push
adc
in
test
enter
xor
dec
add
cs
mov
xchg
repnz
loopne
jno
mov
mov
inc
push
xor
icebp
and
sbb
push
mov
scas
jl
push
add
repnz
loop
mov
inc
movsb
adc
shlb
mov
cmp
adc
jle
jne
out
and
lret
adc
test
jo
out
xchg
cs
aaa
inc
pop
not
jp
lcall
jo
jnp
pop
ret
adc
pop
adc
adcl
pusha
js
xchg
push
call
sbb
shll
add
or
shrb
sub
sub
repnz
bound
cmpsl
mov
addr16
jecxz
push
sub
or
jb
das
push
push
cmp
das
xchg
andl
jne
push
push
and
aam
xchg
or
cmpsb
outsb
inc
cmc
xor
loope
and
sbb
or
lock
xor
push
pop
add
push
xor
imul
or
inc
mov
push
add
lret
in
and
nop
jle
fs
sarl
push
mov
and
push
push
adc
pop
push
mov
faddl
int
sti
mov
adc
lods
inc
repnz
lcall
in
and
cmp
pusha
sub
sbb
je
insb
aaa
adc
push
shl
int3
and
xchg
add
dec
arpl
rcrl
ja
mov
xor
in
subb
mov
test
cli
xor
cmc
push
jmp
nop
xchg
sub
fdivl
cld
xor
iret
testl
sbb
push
iret
adc
movsb
icebp
inc
xor
and
xor
push
mov
inc
mov
xor
pop
sbb
sbb
xchg
loop
xor
ficomps
adc
pop
addl
stos
lret
pop
and
fadds
loope
fstpt
mov
jbe
stos
inc
in
xchg
inc
adc
pop
repnz
jp
sbb
push
dec
xchg
xchg
lock
and
js
shrl
add
imul
mov
std
imul
mov
and
repnz
sub
mov
pop
dec
sub
jle
popa
inc
add
inc
mov
lds
cmp
int
cmp
mov
adc
inc
xor
test
inc
push
or
ficoml
push
fistps
mov
and
ja
sub
mov
repz
ficomps
mov
and
jns
popf
lret
outsl
into
xchg
mov
xor
adc
mov
fiaddl
aaa
lock
popf
cmp
daa
dec
loope
dec
sub
sti
mov
sbb
test
and
and
and
scas
xchg
rolb
or
rcrb
and
cmpsl
pusha
adc
int
dec
shl
xor
or
mov
push
pop
repnz
pop
or
push
add
sbb
fsts
add
in
xor
sub
jmp
inc
enter
pushf
jge
jmp
mov
and
push
jno
push
xor
pop
fcomps
in
inc
or
mov
bound
in
xor
cmpsl
sbb
and
lods
add
cltd
cld
push
pop
sub
add
jp
cmp
test
insl
imul
mov
jl
push
mov
andl
xchg
sbb
pop
loope
mov
dec
add
mov
or
call
adc
mov
or
mov
insb
enter
or
inc
inc
dec
and
in
jno
orb
and
int
xor
or
and
adc
pop
sub
xchg
fisubs
pusha
arpl
inc
dec
es
sub
dec
mov
xchg
test
rclb
and
jmp
test
cltd
xchg
mov
push
jl
iret
cmp
rolb
xchg
or
adc
push
insb
push
dec
loope
lret
cmp
fisubl
sbb
test
popa
test
test
mov
pop
cmp
or
and
mov
pop
mov
call
shrb
xchg
sub
sbb
ret
sub
je
rcr
mov
and
je
xor
mov
or
cltd
orl
xchg
push
adc
in
push
pop
jmp
xor
or
test
cmp
lcall
adc
pop
jb
sbb
and
imul
or
add
leave
pusha
lods
lret
stos
rcrb
push
cmp
sub
add
pop
das
pop
inc
jge
jmp
test
sub
push
push
push
outsb
push
arpl
or
iret
lcall
je
lret
push
mov
dec
mov
add
subb
rorl
add
mov
es
cmp
sbb
sub
dec
push
xor
insb
cmp
aam
add
mov
sub
imul
adc
ror
mov
les
or
mov
test
mov
mov
or
jns
stos
add
or
sub
pop
enter
and
push
sbb
adc
xchg
mov
sub
jmp
inc
rcr
sub
sub
push
xchg
int
xor
insb
cmc
ds
push
mov
push
xchg
jns
add
pusha
or
push
xchg
shl
xor
mov
and
aad
movl
sbb
iret
xchg
and
call
sub
sti
mov
dec
jbe
mov
and
add
loopne
ret
mov
shlb
xchg
jne
mov
popa
mov
and
int3
sub
mov
aas
sahf
push
cmpl
xchg
aaa
lock
jne
mul
adc
mov
sbb
mov
xchg
not
xor
jnp
and
pop
sti
and
and
inc
test
cmp
jp
addr16
xchg
dec
dec
daa
lds
bound
dec
aaa
orl
sbbb
add
imul
dec
xor
inc
shl
xor
stc
or
mov
push
jne
xchg
pop
test
push
jae
pop
mov
int
les
sbb
mov
mov
or
xchg
sbb
mov
shl
test
xor
xchg
mov
sarl
xor
stos
push
xchg
add
outsb
adc
push
xchg
or
sbb
cs
add
les
adc
addb
push
inc
inc
lock
sbb
loop
adc
das
loopne
loope
inc
push
push
xor
repz
imul
cmp
cmp
inc
jae
or
push
adc
test
sub
lcall
push
movsl
sub
ds
lret
dec
rorb
pusha
mov
or
sahf
and
dec
lea
test
adc
pop
int
rolb
rorl
clc
jno
popf
pop
pop
xchg
cmpsb
push
loope
scas
dec
push
push
push
and
jns
adc
insb
add
stc
pop
cmc
iret
daa
pop
jo
xchg
mov
mulb
push
cmp
dec
pop
aaa
js
xchg
push
sub
movsb
pop
adcb
mov
mov
pop
inc
pop
test
js
incl
pop
pop
add
sub
sarb
adc
cmp
test
or
inc
cmp
js
test
push
or
into
or
insb
ds
ss
cmp
push
mov
xor
jbe
ljmp
loop
xchg
or
jo
push
mov
mov
xchg
cmpsl
shrb
push
dec
cmp
scas
or
dec
adc
and
lea
push
push
loopne
mov
jmp
mov
inc
sub
cmp
sbb
adc
shrb
bound
je
sbb
loope
xchg
adc
jb
inc
out
sub
pop
lcall
jl
mov
push
cli
jecxz
shlb
push
je
and
inc
flds
add
pop
push
pop
sar
cli
jno
sbb
aas
adc
in
inc
xchg
and
mov
adc
sub
and
stos
jne
xchg
xor
cwtl
adc
jb
arpl
ds
js
fcoml
imul
dec
add
es
in
sbb
xchg
inc
push
and
pop
cmp
nop
popa
cmp
and
bound
aam
pop
inc
add
movsl
mov
mov
cwtl
movsb
mov
jno
fldl
jl
cltd
push
dec
xchg
pop
add
enter
movsb
xorl
pop
adc
sbb
jbe
and
adc
and
inc
push
and
rorb
inc
dec
push
mov
inc
xor
dec
roll
scas
inc
xor
outsb
jo
push
add
popa
push
rolb
je
fucomp
mov
repnz
mov
fimuls
adc
add
bound
lcall
pusha
sbb
push
ljmp
mov
sub
enter
loope
jae
push
test
cmpsb
xchg
mov
das
sub
fs
iret
lea
cmp
rorl
sub
sbb
jl
movsb
dec
add
pusha
std
fnstenv
or
xor
push
ret
shrb
mov
pop
fldt
sbb
mov
pop
add
sahf
push
ds
adc
or
das
xor
pop
sbb
adc
mov
and
sbb
dec
mov
out
pushl
pushf
fldl
test
pop
cmp
fidivl
sub
das
push
jns
call
jnp
pop
push
mov
pop
scas
cmp
jb
jmp
pop
mov
or
and
dec
push
cmp
or
loop
jae
adc
and
and
mov
add
add
xorb
cmp
push
cli
and
test
inc
mov
push
or
xor
mov
pop
cwtl
je
dec
cmpsl
mov
xor
add
adc
or
jp
andb
mov
cmp
sub
dec
push
push
xchg
push
mov
mov
ds
lods
sbb
pusha
daa
xorb
sti
dec
repz
mov
jnp
xchg
je
xor
movsb
push
ja
cmpsl
push
loop
xor
test
or
iret
xor
push
dec
leave
add
add
test
add
outsb
and
popa
adc
push
push
lret
js
cmc
cmp
aam
push
add
je
xchg
int
pop
out
outsb
ret
mov
adcb
sbb
mov
pop
xchg
mov
out
sub
repz
ret
mov
pushf
rcll
inc
mov
stos
int3
lea
mov
mov
jne
sbb
int3
mov
xchg
rcll
lretw
ret
jno
in
leave
fisubl
cmpsl
leave
jl
cmp
ss
push
in
leave
pop
push
lcall
jno
pop
call
iret
test
adc
dec
jg
insb
movsb
loopne
and
popa
xor
das
popf
pop
rol
in
sahf
cmp
jo
adc
jbe
aam
ss
or
push
xchg
sbb
das
mov
enter
sub
pushf
popa
sbb
push
dec
xchg
dec
mov
js
cmp
push
sbb
push
or
inc
add
sti
jmp
push
loopne
adc
repnz
fs
scas
inc
lret
cmovge
imul
pop
fbld
or
ja
fsubrl
cmc
mov
and
push
testl
or
mov
in
es
mov
inc
es
push
in
inc
cmp
and
loop
mov
push
shlb
adc
push
movsl
fisubrs
cld
pushf
jne
adc
repnz
jge
lds
push
js
call
insl
add
mov
aam
imul
test
cmp
dec
dec
cmp
and
inc
jmp
mov
sub
pop
jp
xor
mov
mov
mov
lret
popa
leave
test
rolb
mov
or
icebp
xchg
add
mov
leave
scas
add
out
stos
mov
push
or
loopne
and
popa
inc
mov
nop
orl
dec
sub
jne
iret
add
add
or
sub
addb
rcll
sbb
add
add
cmp
jecxz
nop
push
fs
mov
mov
pop
daa
jmp
movb
mov
add
cs
sbb
adc
jp
push
push
and
push
add
enter
add
pop
rol
xorb
or
into
lock
fmuls
nop
adc
ljmp
dec
jle
enter
mov
lods
rcrl
add
mov
std
push
push
mov
cld
je
nop
fldenv
jl
jno
fiaddl
aas
incl
lock
mov
jbe
mov
lahf
mov
add
push
inc
xor
xor
push
mov
movsl
sub
test
pusha
sbb
push
test
lods
push
mov
mov
push
dec
or
cmp
cs
or
mov
adc
jae
sub
push
orb
rcl
inc
xchg
andb
ffree
dec
xor
mov
test
and
mov
and
icebp
or
dec
or
subb
and
and
sti
jge
and
ds
sbb
adc
subb
rorb
ss
addr16
lret
cmp
and
outsl
cmp
dec
subb
inc
push
push
push
push
mov
add
out
dec
adc
inc
push
lea
sbb
add
lock
add
push
fwait
push
push
stos
adc
xchg
sub
fsub
inc
dec
jmp
xor
cltd
mov
push
maskmovq
mov
mov
xor
xchg
mov
cmpsb
pop
lods
push
xor
push
ja
push
mov
testl
arpl
imul
add
pop
movb
add
add
adc
dec
aas
cmp
push
push
pcmpeqb
push
cli
daa
and
sbb
or
leave
loope
push
mulb
jmp
daa
xchg
xorl
mov
pusha
mov
pusha
gs
jne
dec
push
push
test
push
inc
addl
xor
lods
jnp
call
jmp
nop
movsb
dec
jo
sbb
inc
push
xlat
sub
xchg
xor
pop
fistpl
or
addb
push
xor
arpl
add
cmpsb
mov
leave
add
cmp
scas
fistl
sub
or
push
xchg
pop
jns
cmp
test
pusha
dec
jmp
out
dec
push
jle
xchg
mov
cmp
adc
out
xorl
mov
xchg
inc
lret
cld
cld
inc
andl
aas
inc
mov
fldl
stos
push
push
popl
cmp
and
fisubs
rolb
scas
or
cmp
bnd
es
mov
pop
leave
cltd
sbb
std
je
stc
jl
outsb
nop
int
ja
push
pop
xchg
cmp
in
stos
sbb
jmp
fsubl
ds
pop
cmc
add
jmp
inc
test
jmp
icebp
mul
jmp
ffree
popa
mov
inc
sub
push
int
movb
mov
xor
movsb
adc
and
cmp
insl
scas
inc
add
mov
pop
rep
pop
dec
adcb
mov
pop
loopne
les
mov
dec
mov
jo
sub
std
cmp
cmpl
adc
mov
jne
cmpl
adc
clc
nop
icebp
and
dec
mov
pop
push
jl
mov
add
movsl
insl
xor
sbb
cmp
ficompl
push
push
f2xm1
add
mov
lock
push
dec
in
adc
fnstenv
fisubl
mov
push
cwtl
dec
outsl
cmpsl
xchg
into
inc
inc
mov
sbb
add
and
cmc
shr
subl
test
shl
add
clc
add
nop
jb
jo
add
inc
and
loopne
hlt
sub
dec
push
into
lea
jg
rorl
inc
push
add
push
jg
adc
mov
jb
daa
mov
cmp
je
repnz
cmp
sbb
sub
aas
adc
push
daa
pusha
and
enter
jo
xchg
lea
mov
cmpb
and
adc
loop
pushl
xchg
push
mov
sbb
sub
xor
and
push
push
and
jge
ja
lds
aas
cmp
mov
fs
mov
lret
iret
imul
sub
dec
jo
out
repz
mov
data16
iret
movsb
in
or
fwait
iret
repz
sbb
test
xor
out
push
lret
cs
push
dec
repz
mov
in
cmpb
mov
push
repz
imul
sub
sbb
inc
cmovge
push
xchg
add
cmp
mov
leave
lds
adc
gs
xchg
movsb
xchg
or
lea
sbb
push
orl
lret
sarb
or
mov
scas
lods
inc
add
mov
or
xchg
lods
sarl
lret
popf
shlb
add
push
add
sldt
inc
js
xor
sti
push
jmp
and
xchg
fsubrs
jmp
rolb
pop
xor
inc
push
jmp
jp
dec
inc
xorb
push
cltd
push
bound
mov
xchg
push
jg
cltd
xchg
inc
into
repz
mov
aam
add
xor
mov
push
push
or
popa
add
jo
xor
pushf
out
push
and
imul
adc
mov
pop
fcom
add
or
popa
dec
inc
dec
adc
stc
xor
cmova
insb
sbb
jmp
mov
pop
movsbl
int
mov
test
notb
cmp
lods
sarb
imull
inc
loopne
or
push
jae
cwtl
or
lahf
lea
xor
or
xchg
movups
ret
fisubl
jno
clc
jmp
lret
cwtl
add
mov
mov
mov
gs
xchg
addl
mov
add
push
mov
and
push
inc
dec
inc
sbb
cmp
add
xorb
add
add
add
and
sub
xchg
add
dec
mov
xor
cmp
and
and
dec
add
sbb
or
icebp
stc
push
push
push
mov
mov
mov
jge
sbb
and
mov
or
xchg
sub
insl
jnp
out
jb
mov
gs
iret
jnp
push
lods
mov
mov
add
pop
push
inc
test
aam
jbe
andl
fmull
sbb
inc
push
fcoms
add
or
sbb
or
push
nop
add
push
add
inc
femms
inc
push
nop
add
add
add
sbb
nop
pop
add
nop
add
sbb
sbb
add
add
sbb
inc
pop
or
xchg
add
push
fidivrl
pop
sarb
sbb
cmp
adc
nop
mov
and
insb
add
ss
leave
jp
out
adc
lret
cmpb
jb
xchg
mov
adc
rcrl
inc
xor
cmp
inc
cmp
and
mov
clc
inc
push
pop
adc
mov
data16
add
hlt
adcl
add
test
ja
inc
mov
lea
jno
cmp
mov
mov
mov
ficompl
add
push
jmp
inc
push
xchg
test
push
pop
popaw
xchg
adc
xchg
push
mov
or
mov
repz
push
push
push
gs
pop
bound
arpl
cmovne
in
je
jecxz
and
sub
pop
cmpl
jecxz
dec
add
xchg
or
lock
xchg
dec
push
or
in
push
mov
movsl
or
inc
jo
or
outsb
mov
adc
rcrb
mov
push
pop
dec
push
add
cs
push
sahf
popa
jge
movl
sbbb
ljmp
call
mov
inc
push
mov
mov
lea
xor
pop
push
push
mov
lods
sub
cmp
pop
dec
ljmp
icebp
adc
inc
pusha
ljmp
iret
aam
dec
xchg
mov
lret
and
inc
sub
add
inc
hlt
adc
stos
popa
jecxz
call
je
adcb
and
js
push
sub
mov
mov
gs
sbb
lock
mov
mov
mov
push
inc
fldl
out
sub
inc
inc
cwtl
insb
xor
cmc
loope
insb
xor
add
xchg
nop
cs
enter
mov
xchg
mov
mov
test
jge
cli
mov
mov
test
mov
mov
fsubl
test
scas
lea
imulb
int
imul
push
push
sahf
cmp
lods
push
push
lods
ss
dec
xor
xchg
add
pop
gs
cld
cli
pop
faddp
sbb
pop
or
xchg
or
xor
cltd
push
sbb
ljmp
mov
jmp
imul
aaa
xor
jbe
cmp
shrb
lret
lret
std
jno
mov
adc
in
loope
sti
sti
push
inc
push
js,pn
add
jo
adc
in
push
mov
inc
push
adc
leave
inc
shrb
ja
push
adc
ret
sbb
adc
cmp
cmpsl
popl
push
pcmpeqw
xchg
add
push
icebp
push
or
imul
inc
pop
pop
test
int
sbb
cmp
fisttpl
push
and
mov
loop
lods
arpl
or
mov
mov
mov
xchg
push
cmp
ret
mov
push
addb
dec
jbe
mov
mov
jle
push
adc
add
xchg
sbb
movsb
and
bound
or
fs
fs
ficoml
add
push
sub
inc
push
sbb
insl
lods
mov
aam
mov
xchg
test
mov
xchg
sub
adc
gs
xchg
dec
add
lea
je
js
shr
jnp
adc
sbb
inc
dec
cmpsb
sbb
or
xchg
test
into
ret
push
mov
push
xchg
lea
dec
or
mov
jmp
sub
mov
incb
out
or
dec
sub
cmp
mov
push
popa
insb
add
pushf
andb
xor
dec
out
push
sub
or
adc
cmp
into
cmp
mov
add
push
imul
push
adc
xor
test
inc
xor
repz
and
je
data16
roll
rolb
roll
nop
xor
lds
notb
es
ret
xchg
ficompl
xchg
leave
or
lock
ret
ss
and
add
add
or
push
and
and
add
jb
insl
ljmp
add
push
call
xchg
hlt
add
aad
lcall
push
inc
push
iret
adc
hlt
movsb
pop
cmp
inc
adc
fcoms
mov
xor
sub
jmp
into
ret
add
sub
mov
test
movsb
out
notl
jb
mov
adc
ret
pushf
sub
jle
dec
pusha
adc
inc
jne
xchg
and
adc
jmp
xchg
data16
jno
jno
or
fmul
jb
mov
cmpsl
add
js
mov
jp
push
push
sub
xchg
cmp
adcl
adc
mov
sub
loope
shr
aam
push
xchg
fs
je
push
xor
push
in
or
mov
sub
push
sbb
or
pop
jge
clc
add
sub
inc
jge
outsb
cltd
add
push
lea
aad
and
push
and
sub
dec
or
cltd
xor
inc
cmp
ljmp
mov
inc
add
push
mov
aas
and
addl
xchg
xor
push
jae
fs
nop
sub
or
lret
rolb
push
insl
mov
adc
bound
mov
outsl
xchg
xchg
insb
out
xchg
or
jle
inc
cmpsl
mov
adc
inc
jae
pop
mov
or
leave
pop
add
movb
push
add
inc
in
pop
inc
rcll
js
mov
lds
mov
dec
inc
clc
add
mov
push
push
sub
adc
mov
andl
jmp
pushf
out
mov
mov
dec
fisttpl
push
mov
jbe
cli
pusha
mov
push
iret
cmp
inc
leave
mov
push
push
fsts
or
add
add
pop
add
inc
xor
push
dec
loope
sbb
dec
or
and
mov
loope
push
rolb
ds
mov
mov
xor
mov
adc
loope
jl
pop
adc
and
or
inc
or
int
sub
js
sub
mov
cmpsl
loope
adc
push
and
imul
xor
shl
lds
jecxz
fstpt
shrl
hlt
xor
pusha
out
sub
sbb
ds
sbb
mov
pop
or
inc
rclb
pop
cmpsl
fwait
nop
test
fidivl
inc
mov
data16
push
mov
xor
push
xor
and
icebp
lods
inc
lods
sbb
adc
leave
test
cmp
rcrl
test
xor
push
mov
enter
sbb
rcrb
lret
or
jo
push
adc
inc
mov
or
dec
sub
cmpsb
in
std
test
outsb
add
push
mov
and
addb
insb
xor
fidivs
xor
xchg
and
adc
xchg
add
dec
pop
ds
add
popa
les
sbb
test
push
and
mov
jae
mov
sahf
cmp
lret
dec
xor
aam
mov
xchg
addb
pop
mov
push
add
bound
enter
and
push
je
push
xchg
sub
inc
cwtl
shlb
dec
jo
push
jg
iret
sarb
jne
ds
jmp
add
mov
cmpsl
pop
cmp
pop
dec
pop
mov
movsb
fistl
sbb
push
push
sub
adc
xorb
lods
leave
les
mov
addb
add
not
or
insb
sbb
fmul
punpcklwd
cwtl
mov
test
or
mov
mov
sub
inc
gs
lcall
push
mov
out
sbb
sbb
cmpl
inc
shlb
mov
and
push
pop
popa
aam
movsl
sub
xor
dec
or
pop
push
xchg
pop
stc
sub
rolb
xchg
das
xor
dec
push
dec
sti
js
or
cmc
xor
sbb
push
popa
mov
cmpsl
or
test
inc
pusha
pop
sbb
pusha
dec
in
cmpsb
mov
inc
adc
cmp
and
sahf
add
mov
pop
mov
xorl
lock
sbb
xchg
jl
mov
pop
push
inc
cmc
clc
dec
and
iret
ja
jb
ret
push
and
and
outsb
scas
add
lds
adc
sbb
data16
jne
sub
push
dec
push
xor
pop
push
xor
cmp
jo
inc
pop
andnps
add
add
sub
xchg
sub
push
jbe
aas
mov
mov
push
lods
dec
jmp
mov
cmp
shll
lods
out
cmp
or
leave
and
test
adc
fidivs
shld
imul
orb
pop
adc
mov
jne
ret
sbbb
das
or
mov
stos
adc
into
mov
popa
cmp
daa
ret
pop
movsb
mov
insb
cs
pop
sarb
and
sbb
or
mov
and
cmp
xor
add
sbb
test
cmc
push
mov
xor
cmp
xor
dec
adc
je
sbb
into
adc
pop
enter
insl
pop
test
inc
adc
push
inc
imul
mov
aam
dec
decl
mov
pop
or
lock
push
mov
repnz
sbb
inc
sbb
pop
inc
mov
mov
sub
or
add
in
sbb
inc
stos
sub
in
and
add
aaa
cmp
mov
and
pop
enter
and
adc
mov
adc
movsl
or
adc
daa
lds
sbb
mov
or
push
inc
add
pminsw
pop
push
inc
dec
lods
test
dec
dec
test
dec
add
mov
gs
cmpsb
mov
cltd
sub
or
inc
dec
leave
rorb
testl
in
loope
incb
lret
jp
push
ss
std
sbb
xlat
xor
iret
xor
jb
and
xlat
adc
or
dec
int
lock
ret
loopne
add
push
rclb
jo
movl
sbb
or
es
rolb
dec
cmp
xchg
pusha
cmpsb
xor
add
fildl
pop
sub
xorb
aam
inc
jne
call
pop
fisttpll
mov
je
iret
test
mov
jns
push
jo
pop
adc
in
popl
lret
gs
jl
add
inc
mov
jne
aaa
cmp
push
addr16
cmp
je
xor
mov
push
or
lea
sbbb
lahf
incl
or
addr16
jne
pop
push
adc
cs
lock
nop
or
or
lea
push
inc
mov
jo
out
pop
push
cmp
lods
jo
push
or
or
popf
or
add
push
je
imul
test
push
xor
mov
movsl
mov
push
dec
push
push
shr
aam
add
ret
jecxz
movsl
inc
pop
mov
in
jmp
loope
inc
leave
adc
or
mov
add
cmp
rclb
push
push
adcb
jle
repnz
jbe
push
adc
test
inc
popf
inc
int3
and
sbb
and
push
ds
pop
and
repnz
mov
mov
sbb
lods
or
mov
ja
lret
addr16
pop
jae
mov
push
jo
mov
push
std
mov
add
mov
loope
pop
cmp
push
dec
push
push
add
pop
in
push
loopne
pop
add
je
add
inc
xchg
jbe
dec
loopne
inc
fadd
filds
test
cltd
cld
sub
data16
mov
divl
and
arpl
and
dec
xchg
sbb
inc
pop
lret
mov
adcl
cmp
push
dec
add
pop
and
inc
adc
clc
jns
pop
sub
xor
pop
mov
in
cmp
add
sbb
mov
rcll
or
xor
cs
push
or
push
xchg
dec
mov
shl
cltd
imul
icebp
das
dec
call
fisubrl
ret
leave
and
in
and
shr
push
sub
loopne
sarl
jg
lds
add
jbe
popf
lds
inc
scas
sarl
mov
iret
pop
in
test
xor
cmp
dec
adc
testb
xor
sbb
adc
mov
xor
add
xchg
cmpsl
outsb
sub
jp
mov
lea
lods
fmuls
dec
andb
jg
mull
xor
or
xlat
cltd
dec
pop
sub
pop
or
jp
push
sub
sub
subl
in
shll
adc
sub
jne
add
xor
daa
adc
mov
jge
sub
push
sub
movsl
mov
into
xor
mov
or
xor
lret
jg
jo
push
pop
inc
je
push
push
sub
pop
mov
jno
cmpl
push
insl
fucomp
xor
or
sbb
stos
mov
mov
and
sub
das
movsb
or
cmp
je
fimuls
xchg
sub
iret
in
sub
adc
xor
and
int
add
loopne
nop
test
push
ret
ljmp
dec
js
sti
adc
ret
cs
or
out
or
pop
or
out
mov
xor
out
addr16
fimull
pop
sbb
push
inc
sti
movswl
push
push
into
mov
sti
xor
jae
adc
push
push
xor
cli
fistpl
stc
add
push
and
ror
shr
add
roll
push
fwait
and
ret
pusha
mov
jge
adc
out
or
addr16
pop
mov
fsubrs
loopne
insb
and
and
inc
push
jl
cwtl
push
xchg
movsl
repnz
movsb
add
in
ret
sub
repz
out
mov
out
inc
dec
jg
bnd
fs
mov
push
addr16
add
mov
push
push
movsl
nop
and
push
mov
xlat
mov
cmp
daa
scas
ss
inc
or
push
lods
rcll
leave
and
push
icebp
add
aad
add
add
ror
mov
xlat
out
jmp
rolb
pop
out
cwtl
dec
in
cmp
test
cmp
test
loop
outsl
std
inc
daa
and
cs
repz
testb
push
imul
lcall
pop
in
movb
jnp
push
sub
lcall
and
fisubrl
fs
or
sub
dec
or
or
cmp
loopne
mov
test
jbe
xchg
in
sbb
add
outsl
or
or
andb
add
or
pop
dec
and
or
or
lock
jnp
shl
xchg
sbb
sbb
test
lock
and
push
pop
decl
sahf
add
inc
test
jo
add
fisubrl
sub
push
daa
pop
mov
sub
es
aas
fldcw
lods
fwait
and
mov
add
scas
lods
lock
jg
mov
push
mov
adc
gs
inc
pop
cmp
sbb
cmpl
fs
pop
xchg
dec
add
and
je
or
movsb
aas
clc
pop
fistl
pop
arpl
inc
dec
shll
js
adc
insl
cld
jmp
int
sbb
pushf
dec
fbld
xor
clc
jg
and
sbb
adc
mov
xchg
push
push
dec
sub
orl
xor
adc
cmpsb
cmp
mov
and
inc
mov
mov
into
mov
negl
mov
scas
sbb
and
clc
test
out
sti
pop
sbb
dec
inc
and
fdivrs
std
and
sub
je
push
jne
pop
adc
bound
insb
jmp
jae
addr16
ficompl
lods
and
fnstcw
or
dec
xor
hlt
cmp
mov
das
fists
movsb
dec
jmp
mov
mov
inc
outsb
adc
jae
inc
jne
stc
xor
inc
xchg
popa
and
loope
loope
pop
sbb
int
jmp
cli
outsb
push
xor
sub
xchg
sti
jg
jbe
dec
add
mov
mov
fsubs
adcb
jo
push
fisttps
jmp
mov
add
mov
adc
test
push
or
nop
jp
out
scas
mov
ret
lcall
mov
imul
fs
push
sbb
test
outsb
nop
ficoms
push
pop
mov
in
pusha
jecxz
andl
add
push
add
xchg
fsts
aad
add
xchg
les
dec
add
mov
rcr
xchg
push
fcoms
int
sbb
imul
add
scas
cmp
jne
cmp
jne
jecxz
les
jecxz
insb
cmp
jne
cmp
out
loop
lahf
mov
adc
add
pop
push
and
push
lods
fadd
push
adc
jmp
adc
cmpsl
repz
into
loopne
pop
cmpsb
mov
fnstcw
jne
ljmp
dec
shlb
xlat
insl
pop
aaa
lea
cmp
dec
dec
sub
and
daa
inc
xor
pop
pop
dec
cmp
mov
addl
sub
inc
push
sbb
adc
pop
and
push
xor
dec
shr
mov
pop
js
pop
stc
icebp
jne
dec
pusha
cmp
pop
pop
bound
sahf
int
add
fsubrp
rcrb
jmp
data16
aad
push
shrl
ss
xchg
cs
loop
lods
popa
int
imul
adc
adc
push
push
sbbb
push
adc
mov
mov
add
jge
add
and
inc
xchg
jmp
rolb
outsb
mov
out
cmpsb
pop
xchg
sub
mov
mov
lock
fs
add
lss
orl
sub
addl
or
or
xor
test
xor
sahf
adc
or
loopne
fwait
jg
fdiv
in
sbb
and
push
das
xor
lods
adc
fucom
jl
bound
mov
je
mov
je
popl
add
push
add
sbb
je
lea
test
insb
and
les
je
push
addb
add
push
or
fistpll
out
test
cmp
dec
push
jge
sub
or
fwait
xchg
and
mov
sub
je
movsb
out
cld
xchg
mov
push
stos
sbbb
inc
sub
push
add
push
xchg
push
or
inc
sbb
leave
add
jne
and
push
mov
fs
repnz
or
jne
pusha
xchg
popa
xor
mov
push
nop
lods
mov
dec
repz
in
insb
movsb
add
mov
sbb
add
mov
pop
cltd
add
in
jle
lea
dec
adc
dec
inc
sbb
cmc
jl
adc
mov
xor
add
inc
pusha
push
sbb
jp
and
adc
xor
out
sahf
xlat
jne
push
inc
adc
inc
out
sub
add
cli
add
inc
out
add
dec
je
inc
or
sbb
dec
ret
cltd
test
shll
jbe
jg
dec
addb
jne
push
xchg
jne
push
cmp
bound
dec
lret
sub
pop
mov
fadds
xchg
or
testl
aad
sub
inc
mov
outsl
fdivl
push
daa
pushf
mov
insb
sub
inc
or
sbb
sub
fistps
das
add
scas
shld
jno
stos
xchg
test
lods
push
mulb
adc
pop
or
mov
and
xor
sub
inc
sbb
sbb
push
int3
nop
cmc
je
scas
jmp
movsl
sbb
dec
and
xchg
mov
mov
jecxz
add
sbb
or
and
jnp
outsb
sarl
xor
inc
xchg
pop
loopne
roll
or
cli
ljmp
xchg
push
dec
dec
and
adc
aad
sbb
dec
inc
sub
add
mov
inc
mov
add
frstpm(287
and
pushf
aad
out
dec
mov
pop
xchg
cld
leave
sbb
or
jecxz
aad
leave
xor
sti
push
xchg
lods
in
xor
xor
inc
cmp
jl
mov
push
mov
orl
push
xchg
cld
inc
movsl
xchg
lods
adcl
xor
mov
popa
xchg
lds
jmp
jg
jle
shll
xor
inc
pushl
mov
adcb
mov
adc
leave
cmpsl
jae
push
push
in
aad
mov
add
pop
movsb
addl
loope
add
lret
cmp
cs
add
mov
daa
xor
pop
push
jp
sbb
cmp
je
dec
pop
js
add
popa
adc
fwait
jb
sbb
adc
pop
push
stos
sbb
movsl
add
push
outsb
xor
repnz
ja
push
inc
xor
xor
fldcw
mov
test
sub
pop
popf
push
nop
mov
je
mov
test
xchg
loop
outsb
adc
inc
dec
dec
imul
je
add
pusha
cmp
testb
sub
or
jnp
adc
push
frstor
add
dec
or
ret
rorl
add
adc
adc
imul
mov
repz
faddl
and
clc
loopne
mov
lods
test
jns
aad
faddl
sbb
push
xchg
pop
cmp
adc
aas
cmp
and
sub
xchg
bound
cmpsb
ror
stc
sbbl
inc
jge
loope
in
mov
push
movsb
das
dec
cmp
pop
and
repnz
jmp
nop
and
dec
mov
ror
push
roll
or
add
dec
xor
js
loopne
cld
mov
pop
js
jo
test
mov
das
push
pop
and
mov
sahf
imul
fsubr
xor
mov
xchg
js
or
xchg
in
xlat
jl
inc
ljmp
jne
loop
inc
inc
mov
jo
outsb
test
in
jecxz
cltd
xchg
xor
mov
stc
mov
mov
pop
js
inc
push
mov
push
dec
push
xor
mov
and
xor
imul
push
xor
andl
test
jne
pop
pop
sbb
mov
mov
mov
jbe
dec
add
mov
push
inc
push
mov
lcall
mov
sti
push
add
xchg
dec
adc
cmp
cmpsb
inc
jmp
mov
mov
push
jge
loopne
loop
push
icebp
mov
mov
mov
std
cmp
mov
test
popa
sti
ret
pop
push
dec
test
xor
xor
repz
frstor
mov
je
or
xor
hlt
repz
je
dec
je
inc
jne
dec
dec
mov
jg
cmp
adc
sub
adc
jne
loopne
roll
and
cmp
jge
mov
add
jo
mov
js
stos
xor
loop
cltd
inc
in
jecxz
pop
inc
push
jl
stc
sub
add
test
add
sbb
dec
mov
loopne
mov
je
mov
push
jo
adcl
dec
clc
dec
or
dec
sbb
xor
mov
jo
or
cmpsl
pop
cltd
lds
add
inc
sbb
popf
fcoml
mov
faddl
jns
std
loopne
fidivl
mov
xor
add
enter
lea
icebp
adc
andl
cmpl
add
mov
rolb
shrb
data16
dec
mov
mov
jns
adc
in
int3
jle
push
push
daa
push
dec
jnp
pop
addr16
out
push
jb
jge
jmp
popa
push
pop
lods
bound
push
jmp
pop
inc
jmp
inc
ret
jl
rorb
cmc
sub
movsl
jp
and
pusha
and
rolb
dec
lcall
fwait
aam
cltd
dec
ret
adc
in
bound
sub
mov
call
pop
lock
adc
pop
add
and
add
push
pusha
add
adc
pop
dec
adc
and
data16
push
sbb
and
rcl
pop
add
iret
add
rclb
pop
repz
xchg
in
jnp
push
xor
jg
movsb
add
mov
push
jo
jg
ss
sbb
jne
dec
dec
mov
dec
leave
xchg
arpl
fs
inc
cmp
repz
loopne
inc
and
cmp
push
mov
inc
sub
in
pop
add
add
add
adc
sbb
insb
mov
adc
adc
sub
pop
cmp
into
jge
fcomps
adc
mov
arpl
int3
and
jne
jns
push
or
in
lock
cmp
addb
add
xor
jle
jb
xchg
jbe
or
or
mov
mov
dec
gs
pop
sbb
movsl
add
adc
fdivl
ss
aaa
adcl
or
adc
pop
and
xlat
pop
mov
add
pop
mov
cmp
sbb
mov
test
jae
cmp
cmpb
aam
inc
test
sub
ja,pt
cmpsb
push
xor
cmp
sbb
and
jmp
roll
or
adc
rolb
pop
cmp
or
out
lret
sti
add
or
enter
iret
push
fs
ljmp
test
addb
andb
movsl
sub
push
outsb
mov
stc
sbb
addl
pusha
nop
scas
lea
sarb
inc
pop
insb
lods
ficoml
mov
imul
push
loop
sbb
nop
push
inc
jbe
sbb
add
sbb
inc
sub
movsb
add
xlat
or
push
mov
sti
lds
inc
ret
mull
fs
movsl
insb
js
ret
std
push
adc
mov
add
cmp
lret
push
add
lret
or
inc
dec
fs
push
pop
xor
mov
sbb
notl
fs
xor
push
sub
cmp
fwait
dec
lahf
xchg
cmpl
and
les
or
add
add
inc
sbb
add
jmp
movsb
inc
cs
test
arpl
push
xor
pop
adcl
dec
adc
sub
cmp
push
push
shrb
push
push
mov
addb
sub
into
adc
add
inc
mov
mov
jl
rol
rol
scas
repz
roll
push
xor
add
stos
adc
clc
fsubr
xchg
roll
je
mov
inc
dec
pop
popf
lret
cwtl
adc
insb
adc
jne
ret
xor
xor
pop
enter
insb
add
sbb
dec
imul
adc
fiaddl
ds
adc
rcrl
xor
shlb
xchg
mov
lea
aad
pop
or
popa
pop
rorl
or
add
dec
and
dec
add
cld
add
and
xor
pusha
pop
sub
sbb
jnp
cmp
cmpb
shll
sbb
jg
cwtl
imul
mov
sbb
aaa
adc
out
cwtl
pusha
loop
xor
push
sbb
push
mov
sti
xor
dec
mov
adc
dec
shlb
adc
push
outsl
iret
sub
mov
sbb
pop
pop
aaa
fcoml
and
orb
test
mov
or
pusha
cmpsl
adc
sub
dec
arpl
and
pop
dec
add
dec
push
stc
push
xor
sbb
je
xor
sbb
call
fdivrp
add
loopne
imul
scas
add
jecxz
xchg
mov
rol
or
outsl
cs
lock
andl
pusha
add
stc
jno
and
inc
add
push
xor
add
add
sub
dec
js
jb
test
dec
inc
addb
js
movl
imul
mov
aaa
jns
fldcw
xor
add
adc
push
out
test
pop
jp
push
lods
push
pop
push
mov
mov
adc
jbe
inc
or
push
lods
push
xor
rorb
push
push
add
jl
jmp
roll
popf
inc
fwait
sub
dec
xorl
mov
fcoml
ja
ret
pop
mov
xor
fs
inc
or
mov
cmp
je
jb
in
xor
sbb
jle
push
push
cmp
or
dec
aaa
push
mov
mov
mov
mov
adc
mov
stos
or
aam
add
nop
push
mov
push
fcomps
ret
outsb
mov
xchg
loopne
aam
inc
adc
inc
add
or
lods
sub
movsl
ss
imull
adc
in
cmpsl
push
dec
xchg
enter
add
movl
lcall
xchg
lret
pop
cmp
dec
insl
insb
xchg
sbb
ja
int3
popa
lret
dec
loope
divl
xchg
fsts
pop
mov
orl
push
or
xor
jb
or
fwait
sbb
push
cmp
xchg
sub
pop
adc
adc
ficompl
daa
mov
stc
push
sbb
js
mov
xchg
add
enter
ror
sbb
and
mov
loope
xor
mov
into
jno
imul
mov
mov
cmpsb
in
mov
dec
xorl
xorb
dec
sub
sbb
adc
mov
mov
push
mov
nop
pop
xor
mov
adc
push
push
add
add
push
pop
add
iret
repz
add
lods
mov
cmp
lock
fdivrs
add
push
popa
imul
jp
and
je
inc
add
ds
add
rolb
add
in
sbb
in
cs
adc
adc
or
lds
adc
inc
inc
jo
pop
pop
add
add
pop
pop
sbb
add
pmulhuw
add
xchg
mov
mov
xor
pop
sbbl
cmp
repnz
dec
mov
clc
jnp
mov
mov
stos
ret
ljmp
pop
scas
or
inc
xchg
xchg
adc
add
inc
lds
and
insb
outsl
arpl
je
outsl
outsb
fidivrs
push
cld
jg
inc
outsl
jb
insl
mov
je
jb
gs
ss
add
arpl
outsl
add
gs
out
js
add
add
add
outsb
arpl
gs
outsl
imul
mov
push
add
dec
add
add
push
inc
adc
filds
inc
insb
jae
jb
rcpps
and
adc
pop
inc
inc
cmp
pop
or
imul
dec
sbb
push
push
pop
lret
add
sbb
gs
iret
add
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jg
mov
push
lret
pop
pop
pop
pop
pop
ljmp
clc
pop
pusha
popa
bound
addr16
imul
jo
jb
je
jbe
js
loope
xor
jp
jl
jle
outsb
cmp
mov
or
outsl
ja
and
jo
loopne
in
test
dec
cmp
pop
ret
xor
cmp
pop
jb
outsb
fildl
jbe
ret
and
dec
dec
push
push
xchg
push
dec
dec
inc
jle
rcl
dec
dec
inc
and
push
ss
adc
aas
lds
add
jo
imul
inc
ret
imul
and
sub
fidivl
inc
and
fs
decl
pop
cld
jb
jb
and
cmpsb
cmp
or
gs
outsb
data16
outsb
je
arpl
daa
mov
jne
pop
xor
and
mov
push
xchg
ror
aas
xor
or
scas
loopne
dec
mov
rolb
jnp
data16
stos
out
insl
bound
and
xchg
xor
ja
and
jbe
dec
mov
sbb
scas
sarl
es
adc
out
bound
push
and
je
mov
dec
in
mov
imul
pop
test
xchg
insl
and
mov
inc
cmpl
dec
subl
insb
jb
cmp
arpl
xor
outsb
mov
fisttps
xchg
dec
popa
imul
out
xor
int3
or
push
pop
shlb
cmp
insb
popa
pop
mov
pop
enter
jns
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
sbb
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
pop
mov
into
mov
mov
pop
out
add
add
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
push
inc
aaa
insl
in
fcmovb
dec
shr
push
pop
shrl
outsb
ss
cs
popa
pop
or
std
cmp
jno
rclb
leave
roll
or
fisubrl
jbe
inc
gs
push
cmp
pop
sub
in
xor
and
inc
dec
ja
and
pop
push
cmp
mov
add
addr16
jae
xor
jne
pushw
pusha
jo
inc
pop
mov
subl
add
shrb
sub
add
xchg
lret
inc
sub
pop
dec
jmp
dec
or
add
cmp
pop
sub
jnp
mov
inc
jne
ds
gs
rcrl
push
dec
cmp
jns
iret
in
dec
xor
or
sbb
iret
and
pop
jb
nop
xchg
xchg
fidivrl
and
or
sub
sub
outsb
add
sub
dec
jnp
lds
mov
adc
aaa
mov
push
adc
add
add
add
add
sub
push
pop
pop
lods
aaa
std
sub
or
inc
and
or
pusha
cltd
notl
js
or
sub
xor
fcompl
add
jbe
out
shll
mov
daa
jns
and
mov
push
xor
data16
pop
lds
pop
push
jne
sti
jbe
bound
insb
fs
cmp
aas
lretw
out
sub
arpl
insb
dec
roll
cmpsb
cmp
call
dec
mov
xor
pop
inc
jnp
outsb
testl
sub
sub
int3
push
mov
ltr
ja
sbb
or
push
add
add
xorb
inc
or
test
es
fwait
jbe
sbb
dec
cmpsb
and
push
push
std
scas
ljmp
dec
push
push
dec
dec
inc
dec
inc
pushf
sub
add
jg
or
cwtl
shrb
aas
pop
stos
push
cmp
push
dec
dec
push
nop
push
push
sbbl
lret
jb
push
popa
loope
push
inc
bound
jb
jo
dec
dec
dec
add
inc
popf
adc
push
gs
dec
outsl
jbe
xchg
mov
call
bound
fs
imul
sahf
dec
and
jns
add
das
das
adc
dec
push
inc
je
xchg
pop
scas
or
mov
adc
jb
insb
out
push
and
xchg
outsb
gs
bound
inc
arpl
mov
jb
iret
jbe
into
mov
scas
cmpsl
xchg
popl
pushf
jae
jg
addr16
jne
xchg
add
xchg
adc
xchg
push
daa
inc
clc
sbb
xchg
adc
mov
jae
mov
pop
dec
inc
ds
xor
jo
or
jb
or
and
sub
dec
add
jb
push
jb
adc
add
xorb
leave
add
and
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
out
popa
mov
addl
mov
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
ljmp
mov
mov
mov
mov
mov
ret
enter
dec
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
hlt
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
rorb
adc
inc
lea
xchg
rol
nop
bound
lods
add
out
push
mov
outsl
ja
je
cs
jae
sbb
bound
dec
sti
movsl
sbb
dec
popa
mov
addr16
icebp
inc
push
movsb
jne
daa
pop
lea
dec
cmc
out
aam
mov
outsl
js
push
inc
push
xor
cs
dec
neg
mov
xor
sub
add
add
mov
mov
inc
dec
jae
rolb
sbb
sbb
pop
ret
outsb
addr16
jl
inc
dec
or
sub
mov
xchg
adc
add
add
fiadds
inc
mov
push
orb
sub
cmp
inc
pop
fcoms
mov
into
in
fsubrs
xor
fsubrl
or
js
jo
add
addb
rolb
push
and
insb
xchg
and
daa
xchg
inc
insb
das
popa
mov
imul
addb
imul
les
inc
jns
daa
pop
fcomps
ss
jns
mov
insl
inc
loop
daa
outsb
shlb
lods
cmp
sbbl
rorb
arpl
jns
imul
pop
pusha
inc
jbe
cmp
fisubs
jns
cs
scas
mov
movsb
xor
popl
pop
dec
mov
push
pop
or
mov
pusha
xor
es
dec
and
lock
pop
dec
xor
xchg
pop
pop
pop
push
mov
lea
push
jae
cmp
cmp
loopne
pusha
insb
call
negl
mov
outsb
gs
add
scas
mov
popw
or
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
inc
outsb
cmp
push
jnp
cmp
mov
dec
jge
jno
add
lock
imul
mov
pandn
push
inc
test
outsl
jae
imul
xchg
inc
lods
es
popa
es
fildl
loop
jbe
sub
or
pop
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
aas
dec
jnp
popw
pop
cmp
cmp
sahf
out
out
ds
sub
mov
jl
push
addr16
jle
sub
int3
popf
out
imul
add
mov
sarl
add
sub
sub
jnp
jne
sub
mov
into
or
add
push
cmp
and
add
xchg
pop
andb
push
ret
fs
jb
imul
jo
ss
mov
sarb
sbb
data16
dec
or
push
inc
dec
mov
cmp
insb
jl
aad
loope
out
sub
inc
dec
cmp
out
push
adc
cld
inc
lock
ds
repz
inc
ds
push
out
cmp
in
fdivrs
out
imul
movsb
iret
repz
push
pushf
nop
mov
cmp
jl
je
repz
rep
push
repz
pop
push
push
dec
dec
inc
cmp
repz
cmp
xor
repz
repz
and
sbb
stc
cmp
sbb
cld
inc
hlt
sahf
out
sahf
call
jo
ds
jns
xor
in
inc
push
sahf
out
sahf
lods
mov
xor
int
jns
sbb
inc
lock
cmp
repz
cwtl
jo
out
lcall
nop
pushl
jl
cmp
cmpsl
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
andl
repz
ljmp
inc
es
push
scas
fisttpll
sub
out
inc
loopnew
js
mov
add
xlat
lret
cmpsb
push
mov
sbb
das
inc
mov
ja
mov
push
outsb
inc
pop
ljmp
xchg
les
mov
jge
add
ret
inc
sbb
or
outsb
inc
dec
out
add
adc
xchg
sub
roll
cmp
in
adc
and
jp
push
jo
gs
mov
push
iret
inc
popa
push
mov
rorl
cmp
scas
and
pop
dec
sbb
mov
inc
push
mov
outsl
es
jbe
adcb
push
jb
or
add
das
xchg
dec
adc
stos
dec
pop
fstpt
inc
aas
push
cmp
add
mov
adcl
xorl
or
push
out
mov
loopne
mov
imull
cmp
xor
in
sbb
bound
addr16
mov
js
arpl
xchg
dec
outsb
push
loope
outsl
test
push
adc
jo
push
imul
idivl
imul
sub
popa
dec
fsubl
rorb
testl
dec
outsl
sahf
loop
fidivs
sti
sub
insl
inc
jns
mov
rclb
jne
fisubrs
fs
sti
add
pop
add
add
sub
rorb
ficoms
mov
push
inc
mov
sbb
push
sahf
imul
push
xchg
gs
neg
push
xchg
arpl
js
fnsave
sbb
ja
cmp
inc
fisubs
push
inc
xor
inc
push
mov
bound
inc
push
js
imul
jl
add
fstl
pop
push
xchg
push
push
push
loope
loopne
dec
mov
fnstsw
daa
scas
out
das
out
divb
jb
jae
out
insb
pop
in
hlt
fsubr
out
push
movb
fisubrs
adc
mov
inc
push
pop
ds
popa
mov
pop
pop
inc
fistl
mov
inc
mov
pop
out
push
loopne
into
inc
dec
aas
inc
push
jnp
or
push
popa
adc
fidivl
fs
lret
and
repnz
in
neg
push
xchg
pop
and
js
pop
fisubrs
imulb
lahf
inc
and
xor
lret
cmp
shlb
dec
inc
xchg
pop
mov
jo
scas
pop
pop
divl
fcom
roll
pop
push
call
pop
adc
rorb
es
push
add
mov
mov
mov
xlat
mov
jge
cmp
outsb
push
push
adc
fcmovne
out
jp
xchg
sub
js
fstp
jae
inc
mov
filds
iret
jnp
push
xchg
mov
out
dec
sahf
xchg
mov
std
fsubr
jge
pop
ds
push
jle
push
pop
cmp
adc
out
mov
mov
add
dec
pop
push
mov
jnp
outsl
pop
addr16
dec
xchg
incl
iret
aas
and
gs
gs
xor
dec
xchg
mov
push
outsl
ja
xor
xor
xchg
push
jns
insl
std
das
pop
mov
push
push
xor
insb
jne
imul
adc
das
push
pop
orb
movsb
jne
pop
cmp
data16
dec
sub
mov
add
addr16
outsl
sub
cmp
cmp
and
add
and
dec
invd
sbb
out
mov
sub
repnz
lock
inc
dec
jle
mov
shlb
call
sbb
jne
add
aaa
xlat
and
fimull
sub
xchg
pop
stos
and
ret
mov
aad
mov
mov
jae
sbb
adc
pusha
xor
xchg
pop
loope
sbb
js
aaa
rclb
mov
xor
fdivl
outsl
adc
jnp
fisubrs
scas
and
pop
push
jnp
sub
sbb
imul
sub
pop
gs
popa
cmovg
mov
outsl
or
arpl
jbe
or
jnp
out
jg
add
jae
jmp
pop
shrl
mov
daa
ja
enter
mov
inc
js
jns
das
das
jno
fistl
cmp
dec
pop
mov
les
inc
dec
push
js
inc
lods
inc
jnp
or
loopne
push
lahf
testl
sub
cmpl
mov
dec
sbb
subl
xchg
lcall
sbb
int3
aas
jae
addr16
jne
inc
jnp
into
and
and
pop
mov
fs
gs
pop
mov
and
adc
inc
lea
inc
push
cmp
push
and
js
push
iret
mov
jp
dec
pop
inc
dec
jnp
or
dec
pop
mov
popa
pop
dec
daa
aas
pop
sbb
fidivl
inc
pop
dec
mov
dec
daa
addl
inc
xlat
ficompl
inc
jnp
xor
xor
xor
cmp
enter
xchg
jb
pop
mov
add
das
xor
ret
add
or
cmp
add
adc
mov
ja
sbb
or
push
das
dec
lcall
sahf
cwtl
push
push
fimull
push
mov
cmpl
inc
into
inc
aaa
test
xor
pop
aaa
jns
jl
inc
inc
push
loop
push
jbe
mov
xchg
adc
xor
or
push
cmc
aad
push
mov
dec
sub
out
mov
push
xlat
dec
inc
mov
adc
cmpsl
pop
call
repz
pop
push
xor
fimull
push
push
mov
jg
test
daa
dec
add
inc
push
mov
sbbl
pop
das
cmp
cmp
ss
xor
test
xor
cmp
repz
aas
jmp
mov
and
ss
push
ja
dec
add
sub
push
pop
push
jae
scas
adcl
inc
scas
pop
filds
inc
repnz
jno
mov
jg
push
pop
inc
movl
mov
jnp
cwtl
ja
adc
rdtsc
dec
mov
dec
dec
dec
dec
ss
dec
xor
pop
mov
xlat
pop
loopne
or
sbb
out
xchg
inc
pop
pop
push
pop
lea
popa
xchg
repz
dec
or
icebp
ret
jecxz
cmpsl
ficoms
jle
push
xchg
pop
pop
jae
notl
sub
ret
ja
sub
daa
pushf
ja
bound
imul
or
test
add
fiadds
xor
sbb
div
sbb
rorb
lds
add
mov
cltd
popa
pop
add
add
sbb
add
add
cmpb
fiadds
add
idiv
incl
push
lcall
incl
jg
out
shll
loopne
lock
lcall
pop
mov
pop
mov
inc
popf
add
cmp
add
add
pop
add
adc
add
push
inc
outsb
jns
popa
bound
or
inc
xor
inc
imul
adc
addr16
push
insl
shlb
insl
outsl
cli
inc
jb
inc
decl
mov
jne
imul
lcall
jb
cmp
mov
es
inc
arpl
push
jb
mov
mov
sub
add
stos
adc
repz
xchg
mov
mov
add
fstpl
outsl
je
jb
cmp
popf
and
mov
imul
inc
gs
mov
mov
insb
xor
fwait
inc
outsl
cmp
and
cmp
or
pusha
xchg
adc
ja
pop
push
addr16
or
in
outsl
outsl
push
push
mov
imul
ja
pop
adcb
push
ret
out
je
imul
popa
push
scas
cmpxchg
enter
pop
or
inc
imul
dec
pop
or
arpl
fcompl
bound
mov
insb
lock
cmpsb
imul
outsl
js
fs
add
xor
arpl
mov
mov
xor
mov
fldt
push
and
dec
dec
imul
mov
or
xlat
dec
insb
pop
fsubrl
push
sbb
imul
mov
add
xchg
dec
mov
or
test
or
push
xor
addr16
imul
xor
add
outsl
and
push
imul
dec
push
gs
inc
mov
inc
popa
cmpsb
popa
add
adc
adc
push
jb
pop
push
in
mov
imul
aas
gs
jns
ss
mov
sbb
push
in
pop
jnp
sub
bound
outsb
stos
lods
dec
dec
icebp
or
cld
or
jne
in
and
shll
sub
mov
data16
loopne
push
out
mov
cmp
pop
add
add
or
cld
cld
cld
or
add
and
mov
aas
or
fidivrl
xchg
shrl
test
or
or
insl
or
push
jns
loopne
in
or
jl
or
orl
mov
stc
std
ficompl
push
lea
add
or
test
stc
stc
stc
or
mov
add
stc
stc
stc
stc
adc
fcoms
add
adc
in
add
fdivr
stc
stc
adc
sti
pop
add
add
add
cld
cld
cld
cld
sbb
adc
add
sbb
and
add
cld
cld
cld
sbb
ds
add
stos
cld
adc
adc
out
out
and
pop
or
add
add
add
test
lods
and
push
ja
xor
repz
add
add
add
lcall
add
mull
popf
cmp
mov
add
cmpsb
stc
cmpsb
add
imul
mov
mov
int
jle
out
push
rolb
add
and
add
or
loop
jle
jle
add
sub
stc
sub
ljmp
sub
add
movl
add
or
adc
add
mov
jp
jp
add
das
add
addr16
fsubrp
xor
dec
add
or
push
xlat
jno
cmpsb
dec
cmp
add
push
and
iret
or
ret
add
add
cld
cld
jle
dec
add
xor
jg
add
cld
cld
cld
xor
xchg
xor
sahf
xor
stos
cld
cld
cld
cld
aaa
add
add
aas
pop
cld
cmp
rcll
dec
add
cmp
fsub
out
imul
lret
add
loopne
add
push
adc
roll
lcall
and
test
adc
incl
jle
jle
or
mov
rclb
inc
test
mov
mov
push
insb
fsubrs
add
aas
pusha
out
loope
or
push
clc
push
js
dec
insl
mov
and
loop
loop
movl
add
sbb
jge
add
dec
mov
and
add
add
jmp
cmp
stos
add
cmp
cmp
decb
adc
push
cli
jmp
push
out
out
aas
xchg
mov
out
out
clc
pop
jno
lock
in
push
ljmp
add
pop
pop
mov
es
lcall
fdivp
jne
addr16
push
in
or
lock
push
idiv
xchg
push
mov
call
inc
push
test
dec
dec
push
call
inc
dec
mov
dec
sbb
ss
dec
ljmp
arpl
movd
push
add
jbe
dec
add
adc
jo
ss
inc
or
or
fistpl
fsubrs
xor
imul
push
outsb
outsb
arpl
fidivl
fs
add
or
push
or
cmp
add
ja
jb
or
and
mov
mov
mov
jno
in
pusha
pop
mov
adc
and
lahf
add
ja
repnz
imul
das
jmp
and
mov
inc
add
call
outsb
fs
inc
xchg
fidivl
arpl
or
inc
pop
dec
outsl
outsb
pop
and
inc
sub
jl
jae
add
subb
push
cmp
sbb
and
mov
push
add
clc
aam
mov
insl
imul
fidivs
pop
in
nop
mov
je
xor
or
popa
rorb
sub
jae
xor
in
xchg
sub
or
adc
dec
outsb
retw
jo
xor
mov
add
or
lcall
insb
nop
adc
mov
mov
ss
pusha
shrb
fcoms
mov
popa
data16
sub
and
add
push
dec
pop
cmp
fs
lret
lea
xor
arpl
int3
pusha
ja
jne
inc
mov
loopne
fisubrl
add
sub
mov
int3
add
ss
andl
adcl
data16
jo
nop
cltd
fmuls
dec
push
cmp
inc
mov
pop
mov
and
pusha
je
jae
and
arpl
jbe
adc
cmp
loopne
dec
outsb
and
loop
dec
sbb
adc
loop
sbb
cmpsb
mov
insb
lock
dec
mov
mov
jns
leave
cs
sbb
roll
enter
data16
pop
shrl
imul
mov
inc
push
fnstenv
and
clc
mov
rol
and
call
sbb
inc
and
add
scas
outsb
sub
popf
push
xor
test
jae
loopne
movsb
or
cwtl
nop
js
push
mov
jno
popf
push
push
sti
pop
cltd
push
jmp
rorl
xchg
cli
fistpl
sub
dec
cmc
aaa
add
xor
cltd
outsb
pop
orl
jne
jge
sbb
movsb
add
insb
sbb
push
inc
push
inc
adc
mov
pop
cmp
and
shrb
jne
pop
js
lods
bound
les
xlat
insb
xor
xor
faddl
popa
rorl
push
add
outsl
int3
out
fisttpl
lahf
in
sub
insb
dec
push
icebp
mov
push
sub
pop
jne
sti
inc
inc
es
push
adc
and
xor
inc
mov
and
rolb
fsub
loopne
aad
fstl
and
movsb
aaa
loope
sahf
stos
jl
or
rcll
jns
js
lods
jmp
mov
xchg
pusha
in
lret
pop
data16
xchg
fs
loope
test
mov
sti
sahf
push
orl
js
or
test
lea
xchg
and
mov
addr16
leave
push
cmp
bound
les
pop
add
shrl
pusha
sbb
cld
imul
das
ffree
inc
cli
shll
add
push
xor
add
nop
sbb
outsl
lock
insb
sti
dec
or
icebp
pop
xor
aaa
mov
fisttpll
push
pop
jns
scas
sub
pop
insb
sub
fsubrs
add
or
scas
cmp
sub
pop
mov
rorl
push
enter
inc
add
dec
dec
inc
outsl
mov
or
fnstsw
fdivs
aaa
dec
xorl
dec
mov
add
dec
push
push
pop
addr16
xor
xlat
imul
call
sbb
lock
sahf
push
in
adc
das
pusha
xor
add
adc
jle
jbe
in
jmp
pop
or
and
cli
add
push
inc
push
inc
sub
pusha
inc
cmp
adc
sbb
pop
pop
iret
rolb
sbb
fwait
into
jge
fwait
sub
pop
jge
push
fistl
dec
dec
imul
dec
xor
mov
fiadds
in
lock
adc
je
jae
push
jbe
ljmp
add
dec
incb
add
xor
or
or
or
xchg
inc
mov
or
sahf
out
mov
push
sub
jb
add
test
sub
ret
int
dec
out
pop
stos
mov
mov
pusha
inc
sbb
ret
data16
add
das
mov
icebp
or
cmp
iret
add
dec
jae
ret
or
xchg
push
mov
or
lea
and
jbe
xlat
outsb
xlat
cs
add
mov
imul
into
dec
jbe
js
mov
push
jne
xchg
pusha
dec
mov
sub
ror
cmp
xchg
jae
loop
out
mov
dec
lods
pop
and
inc
test
jo
pop
push
fs
ja
fwait
jo
aaa
daa
lock
dec
inc
addr16
and
js
ds
sarl
adc
dec
mov
imul
lods
sbb
push
pop
jno
inc
js
push
inc
inc
cmpb
and
inc
aas
or
and
inc
mov
jne
xor
dec
pop
adc
lret
ret
out
jbe
fwait
dec
pop
sub
xor
adcl
pop
push
and
xorl
adc
pop
xor
mov
negl
dec
imul
xlat
xchg
add
mov
push
sbb
xchg
pop
ret
rol
inc
in
orl
inc
xor
sbb
addl
pop
fwait
filds
inc
push
push
sti
adc
sbb
jg
sbb
rclb
inc
cmp
mov
fistps
mov
pop
insl
or
fisubl
dec
out
daa
scas
push
js
sub
cmpsl
inc
in
es
push
mov
arpl
dec
add
lds
xchg
sbb
imul
dec
push
add
test
mov
dec
pop
mov
ffreep
jmp
inc
cmp
add
jo
push
jmp
insl
out
push
mov
xor
push
cs
push
inc
inc
pop
out
lea
adc
push
xor
or
aaa
js
jo
cs
scas
pop
push
outsl
inc
das
jae
xor
sub
ficoml
clts
sarl
sub
inc
inc
xor
push
ds
xor
pop
filds
add
jmp
addr16
dec
xchg
push
push
cmpsl
aaa
push
mov
stos
mov
lahf
pusha
mov
addr16
sub
add
inc
negl
mov
xlat
fisubl
or
dec
das
push
or
les
pinsrw
outsl
outsl
inc
fdivrp
push
fiadds
push
mov
or
testb
pop
pop
or
xor
or
push
inc
cmpl
push
push
ss
xorb
aaa
pop
inc
mov
dec
sbb
pop
mov
mov
push
das
jae
das
mov
decl
dec
lods
cs
cvtps2pd
das
daa
pusha
insl
shrl
sarl
xor
ss
pop
dec
sub
movl
ja
mull
push
sti
inc
pop
sbb
aaa
dec
daa
xchg
ja
pop
or
stos
dec
aaa
push
and
or
mov
or
mov
sti
jg
jae
daa
jo
loopne
das
mov
ret
or
xchg
push
pop
adc
push
xchg
and
push
or
dec
adc
fcoml
pop
das
cmp
push
dec
jnp
pop
fists
dec
mov
sub
scas
push
jecxz
pop
xlat
iret
inc
imul
out
sti
aas
pop
fwait
push
pop
fstpt
rcrl
jmp
cmp
fisubrl
sub
mov
sbb
sub
inc
xchg
fidivrl
jae
lock
das
pop
iret
addr16
inc
mov
push
fwait
aas
mov
or
inc
inc
xor
xlat
inc
mov
push
leave
inc
cmp
dec
inc
mov
xchg
push
jnp
ja
inc
das
and
jae
jae
loop
aas
jecxz
jle
testb
mov
inc
iret
das
sub
das
iret
fmul
push
mov
iret
pop
stos
mov
mov
sub
das
jmp
out
cmp
push
dec
scas
jp
cmpsb
dec
cs
aas
mov
inc
mov
or
jno
mov
in
rcr
push
das
adc
aad
adc
aas
lods
mov
dec
xor
arpl
pop
insl
mov
inc
dec
jbe
pop
inc
in
dec
or
jle
add
aaa
xchg
outsl
adc
sbb
cmp
or
jbe
dec
sub
daa
ja
push
jno
or
push
and
and
movl
aaa
xchg
les
sbb
imul
push
aaa
divb
push
xchg
xchg
or
inc
or
sub
scas
jge
add
test
push
scas
jmp
hlt
dec
mov
push
daa
xchg
mov
out
jae
das
movsl
and
xlat
push
mov
mov
inc
and
pop
cmp
push
push
cmp
adc
pop
xchg
push
lahf
xor
imul
pop
imul
push
pop
hlt
fisttps
sbb
xor
sti
jecxz
cmp
arpl
mov
mov
mov
inc
or
mov
cs
sub
inc
xor
jg
push
fidivrl
cmpsl
push
daa
arpl
daa
pop
lds
jno
imul
daa
lret
inc
inc
mov
fldt
cwtl
mov
xor
xchg
add
arpl
fstpt
stos
in
pop
in
daa
das
daa
das
inc
mov
pop
das
jg
push
bound
ret
jmp
das
pop
jg
mov
lods
outsl
jg
mov
dec
push
aas
push
sub
mov
pop
rcll
jecxz
imul
mov
push
and
fst
ficompl
fldt
pop
mov
imul
inc
in
ficoml
sub
sahf
aaa
popl
xlat
inc
push
cmp
imul
outsb
pop
fwait
mov
xchg
adc
mov
addr16
xchg
add
jno
xlat
dec
xorl
addr16
insb
jo
push
fisubrl
mov
imul
pop
das
pop
mov
push
mov
shll
and
sbb
aas
das
inc
push
stos
arpl
dec
mov
lock
xchg
push
pop
pop
pop
xchg
or
es
xchg
dec
notl
inc
adc
dec
ss
faddp
xchg
in
sti
or
das
stos
jg
xchg
fdivs
jecxz
inc
pop
xchg
test
arpl
inc
je
pusha
sub
add
into
push
shlb
mov
lret
push
dec
movaps
mov
aas
addr16
paddsb
mov
inc
adc
mov
dec
dec
imul
subb
mov
xchg
inc
mov
das
inc
loopne
sbb
ja
add
adc
imul
inc
outsb
sysret
pop
mov
pop
aaa
dec
dec
sub
jno
lahf
out
adc
jecxz
jp
push
fwait
into
pop
mov
es
out
dec
inc
fldt
imul
jecxz
shll
push
imul
das
push
lods
cmp
out
push
repnz
insb
aaa
dec
das
inc
push
pop
add
aaa
xor
jo
orl
movsb
lds
nop
sbb
push
inc
push
mov
and
xchg
mov
pop
test
pop
iret
pop
sub
push
aaa
inc
adcl
addl
das
aaa
cmova
aas
mov
ss
xlat
aas
inc
pop
mov
out
lea
inc
xchg
lods
aas
sti
sbb
lea
push
mov
insl
adc
xlat
mov
mov
cmc
rorb
mov
push
mov
aas
sub
mov
call
push
stos
loop
inc
cli
jg
add
aas
popf
pop
and
inc
roll
inc
pop
inc
ja
or
inc
addr16
dec
add
or
out
les
movsl
sub
addr16
stos
push
inc
dec
dec
xor
push
ficoml
pop
mov
aad
jnp
sbb
imul
push
pop
add
mov
xor
inc
scas
mov
sbb
addr16
inc
adc
dec
scas
push
sbb
pop
push
inc
iret
add
adcb
mov
lcall
push
test
test
sbb
push
adc
roll
inc
arpl
add
scas
inc
cmpsl
inc
out
xorl
pop
pop
pop
insl
aaa
daa
mov
sub
bound
adc
xlat
inc
aaa
jmp
aad
mov
pop
in
sti
jg
ja
ss
cmpsl
and
pop
iret
fildll
sub
sbbb
inc
lods
lods
mov
and
daa
mov
shrl
pop
aas
pop
pop
movsb
shll
daa
sbb
test
call
push
aaa
push
mov
testl
dec
sbb
loop
das
dec
fistl
movsl
dec
pop
inc
xchg
sub
pop
aas
scas
das
push
mov
daa
scas
test
sbb
and
arpl
das
dec
imul
push
daa
daa
xchg
xor
ja
push
outsb
mov
jb
rolb
ja
dec
dec
push
sti
das
mov
add
or
push
call
dec
dec
dec
movsb
lods
inc
mov
mov
shrb
pop
inc
imull
sbb
sbbb
inc
jo
cs
sti
push
inc
push
push
pop
inc
xchg
movb
lock
aas
insb
sbb
subl
jecxz
pop
sti
sbbl
inc
ret
fimull
jnp
test
push
pop
das
in
or
inc
pop
iret
das
mov
aaa
pop
in
ljmp
pop
and
aaa
pop
mov
adc
pop
fisttpll
mov
stos
push
sbb
inc
push
in
push
sub
ror
mov
add
pop
jae
push
dec
pop
pop
scas
or
rcll
dec
insl
push
aas
lods
add
sbb
outsl
xor
jg
mov
or
cmp
sahf
daa
testb
movsl
outsl
mov
scas
les
jae
adc
and
aas
mov
das
cmpsl
das
arpl
adc
adc
ret
cmova
divl
jg
inc
pop
pop
insl
push
xor
or
bound
ja
push
pop
inc
dec
aaa
aas
bound
lods
add
adc
add
mov
jg
pusha
fisttpl
jbe
adcl
mov
pop
fisttps
inc
mov
xor
xchg
mov
stos
rorl
push
cmp
xchg
sbb
daa
imul
mov
pop
lahf
shrb
pop
or
aas
push
mov
mov
lret
add
addr16
jbe
nop
dec
inc
fistpl
lea
jnp
mov
ss
sub
pop
dec
pop
loopne
lods
mov
push
or
aas
aaa
repz
fwait
add
nop
inc
loop
pop
inc
mov
inc
dec
and
jnp
scas
rclb
push
sub
push
or
dec
rdtsc
je
out
arpl
mov
fwait
or
jb
jbe
bound
cmpsb
js
jmp
movsb
addr16
cli
sub
stc
lcall
ret
jge
jne
outsb
sbb
aaa
xchg
lret
push
pop
mov
pop
dec
pop
mov
jae
mov
mov
jne
ret
mov
xor
fwait
je
mov
dec
add
push
pop
pop
testl
pop
test
rcl
pop
dec
mov
popa
xor
push
xchg
lock
imul
mov
dec
inc
iret
imul
push
pop
jecxz
daa
jae
pop
mov
and
ret
cwtl
js
pop
jmp
xchg
icebp
fisubrs
xor
shll
dec
ja
outsl
push
sbbb
or
add
mov
cmp
add
stc
loope
ds
xchg
jno
cmpsl
inc
lret
jmp
outsb
ffreep
dec
js
xchg
outsl
push
js
and
pop
je
clc
faddp
bnd
addr16
mov
data16
xor
cs
je
xchg
add
iret
inc
sub
xor
jb
pop
mov
jo
fs
movsl
mov
pop
mov
arpl
pop
cmp
sub
fidivl
mull
fwait
addb
aas
iret
ficoms
out
jb
stos
and
pop
push
pop
xchg
xor
aaa
mov
arpl
jbe
dec
outsb
cmp
cmpsl
fbstp
xor
iret
push
mov
pop
cmp
mov
mov
jp
sbb
fwait
xchg
xchg
xor
xor
mov
push
insl
add
jecxz
pop
lods
inc
mov
addr16
pop
sbb
push
xor
push
out
mov
scas
arpl
leave
aad
mov
jg
std
pop
sub
pop
inc
xchg
out
cmpb
jo
xorb
sbb
dec
push
jns
stos
sbb
xchg
dec
xorl
jnp
les
pop
vmread
cmp
or
es
sub
or
push
add
fstpt
dec
mov
aaa
aaa
dec
rcrb
sub
add
dec
dec
mov
push
xchg
jne
dec
xor
push
mov
bound
jecxz
push
push
es
mov
in
dec
push
mov
dec
push
push
jb
lret
mov
push
je
jo
fwait
dec
xor
add
sub
jl
fidivrl
push
dec
addr16
bound
orl
lds
sub
pop
add
push
in
popf
scas
sbb
add
sgdtl
aas
pop
in
push
pop
mov
or
cmp
inc
ret
or
pop
pushw
mov
arpl
push
shll
push
arpl
stos
insb
pop
icebp
outsb
roll
lret
ss
add
inc
dec
push
dec
inc
popf
mov
jo
lods
inc
lods
push
imul
movsl
out
sbb
pop
push
bound
lock
mov
pushf
rsm
inc
es
clc
mov
data16
add
jbe
jecxz
jge
inc
aaa
lods
adcb
pop
icebp
sub
dec
test
sub
xorb
scas
loopne
daa
mov
ja
dec
add
push
pop
add
push
outsl
dec
fsubrs
pusha
mov
dec
ja
sbb
mov
inc
arpl
jbe
test
add
hlt
push
rorb
sbb
xchg
outsl
mov
arpl
pop
add
mov
icebp
daa
adc
or
mov
dec
fdiv
push
push
out
addr16
xor
inc
pop
sbb
outsb
jbe
jecxz
pop
mov
ja
jecxz
nop
out
mov
mov
xchg
imul
sbb
cs
xchg
sbb
div
cs
pop
es
repz
insb
mov
push
dec
testl
push
jne
sbb
mov
daa
mov
loopne
andl
aas
fcomp
xchg
inc
cmp
jbe
sbb
stos
bound
mov
mov
xchg
or
stos
and
xchg
ss
jmp
rcll
pop
xor
sub
pop
fildll
addr16
aaa
dec
cmpsb
lds
int3
les
push
and
xchg
jp
out
dec
insb
test
jo
or
stos
lods
pop
fwait
sbb
inc
sub
mov
mov
scas
jbe
jmp
mov
mov
data16
inc
outsb
dec
push
imul
jo
or
xchg
loopne
outsb
and
dec
shlb
outsb
repz
dec
jmp
add
test
dec
popf
and
inc
sbb
lcall
adc
pop
lahf
daa
pop
adc
arpl
xor
push
cmpsl
inc
inc
mov
push
fisubrl
aaa
sub
sbb
sahf
arpl
pop
outsb
push
xlat
mov
mov
aas
xor
add
and
mov
jae
and
add
and
lods
stos
xchg
arpl
and
adc
out
and
mov
pop
add
aaa
add
xor
jecxz
or
xchg
aas
sbb
add
jp
dec
mov
mov
mov
adc
sub
call
or
sbbb
sub
xor
adc
movsb
test
rcll
dec
xor
add
enter
cmp
pop
frstor
in
imul
dec
sub
outsb
mov
pop
aas
adc
add
daa
mov
xor
inc
pop
dec
bound
in
test
mov
das
push
stos
adcb
ljmp
inc
cmp
mov
add
cli
and
pop
push
sub
fidivl
add
icebp
xchg
inc
dec
aaa
or
inc
inc
mov
jnp
inc
or
dec
cmpsl
sub
psubusb
add
mov
or
and
mov
mov
pop
pop
mov
mov
adc
imul
sarb
mov
arpl
sub
push
in
or
das
mov
pop
xor
add
pop
shll
xor
and
das
pop
insl
xor
sub
cmpl
mov
dec
pop
rcll
dec
ja
mov
and
inc
imul
dec
shrl
filds
mov
push
inc
inc
lock
inc
push
mov
push
and
pop
testl
push
pop
fisubrl
je
inc
xchg
lods
sarl
cmp
sbbl
add
sub
and
out
adc
outsl
adc
lods
out
jo
cltd
dec
jl
jbe
or
dec
mov
aaa
push
push
cmp
cmp
pop
add
cmp
cmp
dec
das
ret
daa
loop
ficoms
pop
dec
popf
daa
pop
lcall
adc
aaa
inc
push
push
rorl
sub
xor
gs
pop
mov
ljmp
shl
sbb
ja
lahf
pop
jne
mov
dec
pop
in
mov
mov
sub
jnp
ljmp
ja
mov
cmp
mov
push
adc
inc
mov
sbb
mov
mov
ss
imul
dec
insb
mov
les
out
loopne
sbb
pop
adc
adc
jns
xor
outsb
in
xlat
pop
loopne
cmp
cmp
aaa
push
test
jo
jge
dec
add
fs
jnp
scas
hlt
aas
outsb
sub
jb
adc
push
push
outsb
bound
aam
jne
xchg
dec
jge
jne
jne
fs
scas
push
pop
arpl
add
fcom
ficoms
call
in
inc
outsb
into
dec
add
dec
int3
ja
jae
adcl
addr16
push
subl
lods
add
pop
imul
out
rcl
fidivl
inc
daa
rcl
mov
jne
addr16
imul
jo
push
xor
fadds
testl
push
sti
xlat
push
notb
mov
testl
sub
lods
test
push
push
daa
jo,pt
rcrb
push
aaa
leave
mov
lock
pop
inc
addr16
nop
arpl
or
das
push
adc
adc
pop
inc
jnp
xchg
aas
negb
sbb
push
adc
dec
aaa
in
push
call
incb
lods
outsl
popa
fs
jo
adc
push
pop
push
gs
cmpsb
push
sti
movb
gs
js
sub
fmuls
mov
and
or
pop
add
and
push
and
cs
add
and
cmp
sub
imul
mov
das
adc
aaa
cs
xor
pop
pop
cmp
jg
outsb
aaa
js
pop
inc
push
lea
cmp
bndstx
jge
pop
xchg
mov
fwait
add
mov
and
jnp
dec
xchg
mov
add
mov
cmp
aaa
lahf
pop
inc
loop
fistl
push
daa
push
and
sub
pop
add
daa
inc
mov
addr16
jnp
ficompl
pop
pop
out
mov
insl
mov
sbb
imul
aas
xorl
sbb
fldt
movsb
rcrl
sbb
ret
das
pop
add
test
xor
and
inc
adc
aad
dec
sahf
cmp
pop
insb
xor
xor
xchg
movsb
daa
pop
push
mov
test
push
and
adc
lret
inc
bound
sbbl
dec
adc
das
xor
adc
xchg
scas
or
jo
dec
inc
ljmp
inc
dec
jo
or
push
jnp
inc
adc
mov
cmpsl
xor
xchg
cmc
test
arpl
and
sbb
xlat
bound
loopne
insb
and
sbb
add
loopne
mov
and
repz
ljmp
das
lahf
adc
and
popa
and
push
andl
jg
add
pop
roll
cmovno
adc
arpl
jg
mov
mov
mov
mov
mov
xor
gs
fadd
ss
aaa
sub
fildl
mov
inc
pop
mov
lods
add
push
push
das
pop
add
push
push
pop
or
sub
bound
aas
cmp
scas
push
or
inc
sub
or
pop
or
inc
push
push
push
pop
pop
mov
xchg
shll
inc
jle
daa
aas
aaa
adc
inc
jo
xchg
int
add
push
sar
enter
fisttps
sarb
loopne
out
leave
loopne
ds
mov
push
aas
call
adc
int3
vpmaxub
cmp
push
call
dec
dec
add
mov
repnz
and
cmpsl
jnp
imul
pop
repz
daa
enter
jo
aad
in
aas
out
shrb
aam
into
jo
pop
sbb
mov
cmp
jle
push
loopne
test
or
std
xor
mov
sub
inc
mov
enter
pop
inc
jb
cmp
cmp
stc
push
in
clc
ds
iret
inc
cmp
inc
inc
inc
aas
inc
es
bound
mov
pop
mov
jb
dec
cld
dec
aas
add
dec
cmpsb
push
call
dec
notl
push
inc
add
das
cltd
nop
push
mov
sti
push
mov
fldl
pop
mov
dec
repz
push
ja
pop
in
pop
fmuls
insl
push
sbb
mov
jno
mov
jbe
jp
dec
enter
jge
incb
xchg
lret
test
filds
dec
insb
and
cltd
fdivs
incl
mov
push
mov
mov
mov
das
cmpsb
mov
mov
enter
cmp
iret
mov
insl
dec
xor
cmp
leave
mov
jg
jecxz
jbe
and
xchg
adc
cltd
or
icebp
mov
in
push
inc
aas
mov
fs
dec
and
xsave
inc
inc
jnp
jl
das
inc
divb
icebp
jge
inc
xor
and
test
add
mov
add
iret
push
push
bnd
dec
enter
aas
inc
mov
mov
add
insb
aaa
ds
inc
aaa
ds
mov
pop
aaa
xor
je
lret
xchg
push
add
scas
adc
adc
sbb
add
pop
insb
dec
inc
rolb
pop
hlt
pop
stos
icebp
adcl
jbe
push
mov
cmc
paddq
pop
or
shrl
pop
test
xchg
incl
add
add
or
in
add
aas
push
xor
push
jns
test
and
je
je
lods
orl
sbb
jns
and
mov
lahf
loopne
inc
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
sti
sub
neg
pop
fidivrl
xor
fcomp
loopne
jb
sbb
xor
cmp
inc
fcoms
test
mov
pop
fisubrl
pushf
adc
jmp
jno
ss
mov
cs
push
jno
push
xlat
push
push
sahf
out
sub
or
push
or
or
pop
jb
cmp
or
or
or
daa
adc
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
loope
xlat
sbb
data16
sub
mov
xor
push
cmpsl
stc
push
cmp
xor
in
xor
int
jns
rorb
adc
das
adc
repz
adc
iret
repz
sbb
jns
out
sbb
sahf
push
fs
add
enter
stc
xor
shrb
xor
pushf
out
and
mov
push
mov
sub
sbb
ja
aam
push
bound
pop
lahf
and
push
dec
pop
in
xor
rorl
add
mov
jne
ss
lahf
andb
inc
xor
inc
inc
cmpsl
mov
scas
clc
cmp
adc
stc
xor
sahf
je
sbb
jns
out
fs
pop
pop
adc
sahf
out
dec
push
xlat
push
or
jns
xor
sub
out
sahf
out
push
and
sbb
out
sahf
and
or
lahf
popf
enter
adc
sahf
out
adc
sbb
dec
mov
pop
xor
push
and
and
and
mov
call
outsl
inc
xor
push
mov
mov
or
subb
incl
and
aas
xlat
in
insl
adc
je
je
sub
imull
aaa
add
lahf
inc
mov
xor
jg
testb
push
iret
repz
repz
loopne
in
out
lcall
cs
out
sahf
dec
pop
outsb
jle
mov
mov
clc
repz
shll
inc
inc
popa
iretw
repz
xchg
sahf
out
ds
push
jns
out
push
vphaddubq
into
loop
push
cli
cs
repz
xor
jb
sahf
cmp
repz
rcl
icebp
testb
sti
push
sti
movb
popf
call
jo
lock
imul
inc
jg
cwtl
sub
mov
insb
xor
jns
push
push
jns
out
dec
inc
cmp
and
jns
out
adc
add
repz
add
xor
hlt
lock
cmp
repz
in
fmul
repz
repz
cmp
movsb
cwtl
nop
test
ds
repz
fs
inc
or
jno
mov
sbb
mov
lock
outsb
mov
pop
jg
dec
sahf
subl
cli
ja
lahf
leave
les
out
mov
lcall
adc
sbb
or
and
jns
mov
add
pop
repnz
pushf
or
ret
mov
adc
xchg
cwtl
push
and
jg
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
in
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
jmp
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
ljmp
adc
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
adc
cmp
sahf
xchg
pop
lcall
lock
mov
popa
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
int3
cmp
and
and
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
mov
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
daa
mov
repz
cmp
pop
js
repz
xchg
mov
repz
repz
jge
xor
add
push
pop
iret
repz
ja
mov
repnz
das
dec
insb
add
mov
sbb
pop
ss
int
mov
int3
inc
inc
cmp
jmp
rorb
mov
add
test
add
iret
push
dec
pop
cmpsb
xor
mov
cld
inc
in
push
or
push
inc
ror
iret
aam
repz
imul
mov
movsb
cwtl
iret
repz
mov
out
cmp
add
mov
nop
xor
out
push
loopne
cmp
repz
pusha
out
cmp
inc
sub
or
mov
out
sahf
fadd
mov
jl
out
out
inc
sbb
mov
push
mov
mov
sbb
jns
jns
in
mov
push
mov
sahf
out
sahf
mov
xor
cmp
out
adc
in
sarb
mov
out
cmp
push
cmp
loopne
mov
mov
cwtl
push
js
cmp
repz
cmp
or
jns
out
scas
enter
pushf
out
sahf
push
dec
daa
adc
lea
sbb
insb
mov
or
jg
add
push
or
pop
aad
and
push
adc
mov
filds
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
call
test
arpl
psubd
or
outsb
cmp
imul
addr16
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
ljmp
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
push
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
jl
das
adc
stos
sbb
pushw
jg
jbe
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
push
clc
leave
pop
js
stc
jle
or
mov
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
incl
mov
dec
xlat
xchg
fadd
shll
jmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
jecxz
cmp
push
or
or
push
in
decl
xchg
daa
scas
pushf
mov
lcall
shlb
add
inc
push
imul
xorb
sbb
incl
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
decl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
pushl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
mov
popa
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
jmp
add
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
jmp
mov
loop
sub
or
mov
xchg
or
pushl
or
rcl
xchg
aam
clc
mov
push
int
mov
testb
jmp
ja
outsl
ja
mov
out
cli
jo
call
lret
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
mov
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
and
mov
mov
sbb
add
sub
push
inc
mov
pop
clc
lcall
or
dec
dec
mov
subb
add
in
sbb
add
add
pop
add
xor
mov
add
or
mov
fiaddl
or
decl
mov
push
dec
mov
or
lahf
add
repz
jnp
sub
and
adc
jns
out
jne
les
mov
pushf
xchg
mov
out
subb
repz
out
adc
je
fmul
repz
int3
shlb
repz
push
cmp
repz
sbb
add
push
adc
xlat
add
mov
adc
stos
lods
aaa
scas
inc
or
pop
inc
ret
cmp
add
addb
mov
pcmpeqw
fmuls
or
xchg
pop
aaa
nop
xchg
add
outsl
insl
imul
sbb
stos
cmp
pop
outsl
das
cmpsl
dec
pusha
les
test
cmp
outsl
xchg
inc
push
dec
or
aaa
pusha
insl
or
lds
inc
outsl
or
add
ret
or
push
lahf
not
push
add
aaa
lds
out
xchg
sbb
addr16
and
or
ja
xor
adc
cmp
jno
clc
decl
sub
and
xor
xor
xor
fldt
ds
xor
xor
xor
push
outsb
bound
outsb
gs
jnp
inc
cld
and
jo
and
mov
repz
mov
push
pusha
push
dec
inc
cmp
cmp
repz
and
adc
imul
push
lock
out
sahf
fmul
shlb
nop
mov
sahf
out
cmp
sbb
iret
repz
cld
push
in
fmul
mov
cmp
mov
stc
cmp
repz
xor
hlt
push
out
sahf
cmpsl
in
int3
shlb
mov
xor
jns
jnp
pop
clc
push
push
mov
sahf
out
sahf
subb
and
cmp
sarl
shlb
repz
push
out
sahf
cmpsl
fmul
mov
jns
mov
push
inc
cmp
inc
xchg
jo
fldcw
sub
or
cs
or
sub
sub
and
es
pop
xchg
nop
add
adc
cwtl
inc
adc
imul
or
add
daa
add
add
adc
ja
ret
inc
pop
adc
add
and
sbb
and
cmp
incl
inc
add
push
and
add
addl
orb
push
add
nop
out
subb
adc
and
add
adc
mov
add
ljmp
pavgb
sub
filds
cs
fadds
sub
ljmp
xlat
add
sbb
add
push
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
in
push
and
incl
mov
xchg
iret
iret
mov
add
data16
push
pushl
or
and
insl
lcall
iret
out
push
jp
sub
into
gs
imul
mov
cmp
or
fistpll
aam
in
or
mov
cmpsb
in
xor
push
xchg
and
cmpsl
fnstcw
int
loope
pop
push
clc
aas
cld
lock
mov
jecxz
out
lahf
stos
cmp
dec
lahf
in
leave
enter
push
fcomip
aaa
pop
insb
lret
mov
dec
inc
adc
add
pop
add
add
mov
nop
dec
insl
adc
inc
subl
jno
es
outsb
inc
dec
pop
test
inc
ss
xchg
mov
add
lret
jnp
add
addb
pop
fistps
out
and
jbe
imul
dec
xchg
bound
sarl
inc
or
add
push
pop
add
mov
add
ljmp
insl
pop
add
adcl
aas
jae
shll
push
adc
xor
push
push
aas
bound
jns
jbe
add
add
sbb
cmp
insb
xchg
es
or
arpl
mov
adc
push
xlat
mov
int3
or
xor
mov
jae
popa
imul
pandn
mov
popa
adc
push
imul
adc
adc
outsl
cmpsl
inc
faddl
les
fwait
js
arpl
pop
mov
imul
add
fldt
aas
mov
xor
xchg
in
jg
imul
mov
inc
loop
mov
mov
lret
jnp
sub
or
bound
mov
outsl
fwait
jg
das
jae
dec
adc
pop
daa
jae
jo
ja
push
cmp
pop
add
inc
sub
lds
cli
pop
inc
sub
cmpsl
mov
and
loop
es
sbb
movl
negb
outsb
sbbl
mov
inc
pop
push
roll
inc
push
inc
arpl
js
sub
mov
andb
adc
and
arpl
inc
xchg
dec
sbb
add
test
sbb
cmc
fwait
inc
lret
ret
mov
pop
add
pop
loopne
je
out
pop
mov
inc
rorl
je
cmp
push
fdivs
pop
daa
ljmp
jae
pop
inc
sbb
or
pop
mov
xorl
or
push
bound
inc
pop
mov
pusha
fs
jae
adc
mov
push
sub
jo
ja
or
lods
dec
aas
jb
mov
sub
and
mov
fidivrs
daa
sbb
inc
ss
push
shll
outsl
xlat
mov
icebp
jecxz
iret
shlb
jbe
sub
out
bound
xlat
hlt
insl
ret
and
je
adcl
fistpll
cmpb
cmp
push
sub
xor
sbb
xchg
and
cmp
pop
outsb
inc
sub
movl
mov
xor
lret
aaa
pop
mov
mov
jae
mov
mov
out
icebp
ficoms
xor
ds
mov
iret
lods
sbb
xor
ja
inc
pop
adc
mov
jne
jg
mov
arpl
xchg
cmpsb
popa
vaddps
inc
mov
imul
push
out
mov
aaa
jnp
aaa
scas
or
lods
and
jae
add
sbb
jb
gs
adc
jo
sub
adc
rolb
mov
pop
push
imul
push
sub
movsb
es
nop
or
inc
dec
cmp
xor
pop
and
add
cmp
mov
adc
popa
test
fbstp
ficompl
push
bound
xadd
xorl
adc
adc
xor
negl
jecxz
ja
push
push
inc
les
adc
push
dec
rclb
outsl
add
inc
arpl
xor
pop
and
cmpsl
xchg
js
imul
jp
sub
movsl
test
shrb
scas
sbb
inc
arpl
push
outsb
cmpsl
dec
push
adc
bound
arpl
sbb
inc
push
cs
sub
adc
mov
pop
fbstp
jnp
scas
jb
outsb
stos
and
add
out
scas
icebp
adc
gs
stos
and
in
bound
dec
shrb
inc
cmp
lock
mov
pop
fwait
out
sub
jg
cs
and
or
rcrl
mov
es
push
cmp
add
fisttpll
aaa
outsb
mov
ds
lcall
pop
scas
xchg
mov
and
mov
inc
fsubrs
sub
mov
adc
xchg
cwtl
xor
mov
xchg
adc
jnp
push
lods
scas
mov
jbe
aaa
xchg
jb
pop
dec
adc
xor
sti
mov
mov
or
add
push
test
push
mov
mov
and
test
xchg
testl
adc
add
sbb
pop
and
das
jbe
data16
mov
xor
pop
xchg
lahf
ds
mov
gs
das
das
xchg
das
movsl
dec
and
mov
jecxz
jg
rorl
sub
xlat
popa
lret
mov
fstpt
mov
push
jne
add
ja
fmuls
or
jmp
push
insl
xchg
xchg
push
and
jbe
xchg
repz
add
movsl
jno
push
out
inc
pop
imul
loop
outsl
das
ds
ja
and
cltd
mov
int
imul
xor
pop
jecxz
push
outsl
sbb
mov
xchg
lret
push
mov
notb
mov
push
pop
rcrb
dec
arpl
sub
push
pusha
push
and
arpl
mov
andl
jl
jb
scas
and
pop
ds
xchg
cwtl
xor
jmp
cmpsl
lods
mov
ljmp
xor
inc
mov
jmp
pusha
push
aas
xor
add
pop
sbb
sub
rol
mov
xchg
jnp
cs
mov
jle
mov
and
xchg
push
mov
cmp
lods
ja
mov
sbb
adc
xor
repnz
fwait
mov
je
mov
pop
andl
lods
movsl
shl
stos
cmp
out
jmp
pop
jmp
ja
add
push
roll
inc
sub
sub
test
daa
mov
xchg
test
rorl
and
mov
arpl
xor
add
inc
adc
xchg
dec
and
or
fbstp
jnp
out
test
outsl
lahf
mov
adc
add
xchg
sub
jl
cmp
push
sub
add
xorb
pusha
pop
sbb
stos
xchg
sbb
cs
stos
mov
imul
push
fldt
sub
inc
daa
jecxz
push
or
mov
stos
jg
out
movsb
movsl
scas
or
les
mov
enter
mov
mov
pop
add
mov
mov
es
scas
xorps
test
aaa
sub
stos
sbb
push
and
shlb
data16
push
push
lock
popa
jae
scas
pop
daa
push
rcll
outsl
adc
ljmp
aad
jae
cmovs
jne
aad
pop
push
mov
push
mov
out
and
jmp
jae
es
das
mov
xor
xor
mov
mov
pusha
testb
adc
inc
jnp
jbe
testl
adc
mov
jnp
xchg
arpl
mov
add
pop
cmc
pop
sbb
outsl
clc
push
shrd
xor
xchg
stos
adc
orb
mov
xchg
mov
lods
mov
lahf
add
pop
add
add
jge
xchg
or
add
movsl
add
add
push
sub
or
pop
adc
dec
aas
and
push
insb
and
inc
sbb
das
sarl
add
ss
push
cmc
dec
fs
popa
imul
inc
testl
imul
push
xchg
cmp
mov
add
jle
pop
inc
jns
push
outsl
push
imul
jb
adc
cmp
in
dec
outsl
fs
mov
fistl
scas
jns
push
repz
inc
test
jle
sbb
push
roll
out
dec
jo
push
ret
xorl
outsb
add
call
dec
and
movsb
stos
dec
bound
adc
adc
fsubrp
jne
arpl
pop
stc
inc
insb
jne
push
inc
sarl
push
cmc
mov
scas
clc
outsl
insb
push
xor
jo
outsl
mov
insb
mov
xor
xorb
sub
mov
dec
into
or
xchg
loope
imul
bound
jae
testl
xor
inc
fcoml
mov
das
cmpsl
sbb
push
cmp
insl
jo
push
outsl
jbe
mov
jo
adc
push
adc
insl
push
and
test
adc
push
mov
mov
rcll
je
mov
in
out
dec
xor
dec
outsl
popa
sbb
sub
xchg
push
adc
pop
xor
rorb
or
jo
ret
xor
or
push
stc
sbb
adc
jmp
in
pop
mov
insl
js
idivb
pop
and
lcall
mov
ror
cmp
data16
inc
gs
pop
int3
xor
push
xor
inc
pop
sub
xchg
xor
push
shll
mov
inc
es
push
outsb
adc
into
je
jae
fs
or
imul
xlat
mov
jnp
inc
jg
rclb
push
sbb
imul
mov
push
inc
je
sbb
inc
pop
pop
movsb
test
add
ja
adc
arpl
pop
sub
or
xchg
sub
mov
lods
mov
lds
imul
cmc
insl
cmp
push
or
addl
mov
aas
sub
das
push
popf
xchg
fcomps
xor
inc
cmp
mov
jns
cmp
jae
jae
stos
mov
call
inc
ret
stos
shlb
pop
xchg
jecxz
push
push
sub
sarl
sbb
jb
dec
dec
imul
rcr
dec
outsl
inc
pop
jo
mov
into
push
fnstsw
insb
test
movsl
xchg
movsb
js
call
adc
imul
sbb
xor
fcmovb
lods
or
adc
push
outsb
insb
sbb
add
sarb
inc
add
pop
fwait
pop
push
mov
sbb
insb
inc
fwait
mov
shrb
jb
and
jp
sbb
cmpsl
and
fs
sub
das
push
aas
addl
pop
sbb
dec
sti
xor
outsl
lock
xor
rclb
push
sbb
inc
push
jns
mov
mov
je
xchg
adcb
scas
ljmp
jne
jo
sbb
add
mov
xchg
xchg
mov
sbbb
lcall
jno
mov
push
xlat
dec
and
push
rcrl
sbb
cmp
cmp
pusha
push
sub
dec
jae
sbb
repz
fstpt
adcl
lock
sbb
lret
sub
jo
xor
repz
insl
jo
out
push
xchg
bound
sti
fcompl
repnz
mov
dec
inc
cmp
aaa
mov
imul
bound
jnp
inc
mov
push
mov
movsb
mov
pop
and
addr16
xchg
jmp
adcl
mov
push
in
dec
jecxz
fwait
push
pop
insb
or
dec
int3
cmc
lods
test
scas
sbb
loop
pop
ja
ja
or
push
popf
pop
xchg
sub
dec
sbbb
cmovno
ss
lds
stos
adc
or
orb
test
xchg
ret
push
adc
inc
pop
sbbl
icebp
dec
inc
sbb
flds
movsb
adc
inc
xchg
adc
pop
xchg
cmc
fs
data16
in
ja
cmp
fsubrs
jne
cmc
xchg
imul
mov
or
in
or
push
sbb
push
xchg
cmp
cltd
shlb
cmp
mov
out
xchg
sub
les
adcb
dec
xchg
js
in
arpl
jb
mov
add
outsl
push
sub
push
popa
sub
hlt
rcrl
push
push
jbe
and
loope
addb
mov
sub
pop
shrl
outsl
imul
fs
addl
sbbl
pop
push
pop
outsl
filds
xchg
pop
nop
dec
mov
and
jne
mov
orl
fwait
push
sub
call
push
inc
addr16
in
inc
xor
call
jecxz
cmp
insb
std
cltd
pop
movb
inc
push
mov
push
outsb
sarl
pop
jp
inc
push
lcall
dec
subl
add
shrb
push
imulb
jae
sub
push
inc
mov
sub
mov
sub
in
xor
jbe
pop
jns
and
aaa
sub
mov
shrb
iret
das
cmp
lods
mov
out
sub
dec
sarl
mov
xor
insl
and
sahf
ss
sbb
fnsave
jecxz
push
add
jbe
cltd
sbb
xor
push
cmp
sub
arpl
sahf
jo
lds
inc
mov
jbe
ret
add
or
xchg
lods
sbb
js
add
in
popa
or
dec
inc
test
jo
adc
mov
das
outsl
inc
jae
inc
inc
test
arpl
outsl
movsb
arpl
insb
imul
das
cmp
orb
sbbl
inc
ss
and
sub
xchg
insb
jns
ja
ret
inc
push
call
popa
imul
jo
ja
imul
sub
sub
fs
cmp
and
inc
pop
les
mov
xor
push
inc
xchg
lds
mov
out
mov
adc
xor
ja
sub
imul
sbb
jb
js
es
or
mov
insb
jnp
push
push
pop
js
das
xchg
test
daa
pushf
push
out
push
xor
mov
push
call
outsb
jne
movsb
xchg
jb
movsb
push
jns
push
outsl
popa
xchg
scas
and
jns
pop
add
push
pop
icebp
inc
push
arpl
adc
mov
outsb
dec
push
push
push
popa
jae
and
mov
out
add
inc
dec
push
dec
inc
adc
dec
and
out
mov
mov
pusha
add
dec
lea
inc
je
mov
lret
pop
outsb
xchg
or
dec
es
hlt
sbb
jp
imul
stc
xor
xchg
fdivrs
or
fidivs
or
mov
add
xor
pop
fdivrl
dec
imul
es
sbb
dec
xchg
add
inc
test
or
mov
mov
jno
cmp
mov
jae
dec
pusha
cmp
insb
popa
and
push
add
sub
je
xchg
adc
fs
jecxz
dec
jnp
cmp
lods
lea
in
mov
jecxz
inc
or
pop
cwtl
jp
add
gs
popa
outsb
jle
or
push
push
mov
inc
inc
sub
or
std
sub
imul
or
jecxz
daa
dec
popa
das
loopne
mov
jb
inc
mov
loopne
addr16
dec
outsl
stos
data16
push
lea
loopne
push
hlt
pop
pushf
push
out
add
add
lahf
imul
mov
dec
stos
movsl
cmp
scas
inc
mov
sbb
adc
bound
cmp
ret
outsl
int3
add
mov
test
test
dec
aad
jl
dec
sbb
jo
out
jmp
pop
push
jne
and
mov
or
pop
outsl
data16
push
add
int3
int3
aaa
mov
jno
xchg
mov
cmp
stos
push
push
loopne
sub
xchg
enter
outsl
push
mov
push
je
bound
pop
inc
adc
les
int3
push
and
push
pop
test
rolb
or
dec
cmp
lods
inc
test
jae
bound
adc
dec
sbb
std
sbb
push
je
dec
scas
adc
pop
adc
test
add
mov
loope
mov
shl
jecxz
adc
mov
add
add
adc
fs
mov
push
inc
push
gs
mov
cmp
mov
lods
in
jmp
inc
arpl
insb
addr16
push
je
orb
stos
xchg
mov
sub
push
cmp
mov
mov
stos
jno
fnstenv
insl
testb
insl
adc
jb
movsb
cld
pushl
push
rorl
push
loope
cmp
lock
inc
mov
loop
icebp
sbb
ds
sbb
dec
dec
pop
loop
nop
cmp
push
and
testl
mov
jbe
js
mov
mov
scas
push
and
inc
stos
push
dec
shll
xor
jb
pusha
mov
xchg
dec
add
inc
cld
fstl
sbb
pop
mov
ljmp
xor
jne
scas
cmp
push
push
outsl
or
xchg
and
push
imul
fdivs
dec
sbb
or
inc
sbbb
jecxz
ds
pop
fiaddl
xchg
shll
xchg
and
mov
inc
mov
loop
jmp
and
sub
jno
enter
push
dec
pop
sbb
mov
adc
pop
and
ljmp
mov
mov
xchg
push
mov
xor
fisubrs
dec
sbb
push
mov
insl
adc
cmp
add
push
outsl
mov
xchg
movsb
rorb
cmp
adc
and
add
es
cmp
orl
inc
mov
or
insb
lret
aam
mov
shr
pop
sbb
fbld
inc
movsb
rcrl
lea
dec
arpl
adc
mov
lods
or
leave
jg
inc
subl
in
in
cmp
jg
ss
fldenv
mov
aas
push
sub
or
fmuls
pop
jb
jecxz
mov
negl
in
fiaddl
dec
inc
xchg
cmp
out
enter
scas
and
mov
mov
inc
adcb
xchg
jno
push
fadds
inc
xchg
mov
xchg
inc
and
mov
jno
jne
xor
add
xor
xchg
lea
dec
fistps
inc
inc
sub
out
adc
push
and
mov
sub
cmova
xor
jb
and
and
mov
xchg
out
imul
adc
inc
fs
xor
push
xchg
push
lods
adc
rorl
or
imul
cmp
lret
mov
and
or
or
cltd
sub
jnp
pushf
out
jle
jge
dec
add
add
and
mov
adc
sahf
fcoml
mov
add
push
movsb
sub
or
repz
notl
cmpsl
push
popa
ss
adc
inc
inc
adc
sbb
or
repz
aaa
or
lret
sbb
and
add
mov
sarb
xor
push
arpl
pop
imul
nop
call
jmp
cmpsb
adc
adc
inc
mov
adc
cmpsb
jne
je
add
or
add
push
pop
mov
mov
enter
mov
loopne
and
or
divb
sbb
mov
mov
arpl
addr16
mov
or
jnp
jbe
add
aaa
cmp
adcb
add
sahf
push
lds
cmp
push
inc
je,pn
push
dec
in
sub
push
add
and
inc
orb
cs
push
add
pusha
filds
or
add
jns
andl
sbb
loopne
dec
mov
rcrb
repnz
roll
rcl
jg
pop
or
push
dec
xchg
and
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
