mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
jnp
add
mov
add
adc
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
ja
icebp
pop
xchg
stc
std
mov
sbb
bound
cmpl
xchg
push
in
outsl
push
xor
fbstp
test
pop
fwait
pop
fcomi
fwait
xchg
push
lea
sbb
dec
ljmp
mov
aad
sbb
jns
push
push
push
dec
aad
jo
insb
insb
loop
loopne
mov
lods
fmuls
je
aas
mov
ds
daa
dec
sbb
jecxz
dec
dec
xlat
popa
xor
sahf
adc
cs
sahf
mov
cmpsl
jle
rclb
cmp
out
lock
pop
notb
sahf
pop
negb
shrl
inc
ret
dec
sub
pop
and
pop
xor
adc
adc
aam
inc
xor
clc
lcall
aas
mov
gs
addl
nop
aas
mov
nop
lcall
test
pop
sub
js
loopne
roll
pop
mov
inc
push
in
lahf
lods
pop
mov
sahf
xlat
jp
dec
mov
repnz
jl
dec
or
movd
push
or
aad
in
in
out
scas
push
adc
sbb
dec
xorb
clc
or
xor
cmc
jb
cmpl
and
stc
js
xor
adc
push
xchg
test
and
or
adc
lods
int3
jl
mov
add
enter
adc
in
cltd
mov
bnd
addl
push
ds
sbb
bound
cmpsl
xchg
pop
adc
aas
jmp
mov
dec
ret
sub
je
lods
cmc
mov
aaa
and
nop
dec
out
das
push
mov
or
sbb
jno
push
je
lret
stos
sbb
push
out
aam
dec
mov
cmc
add
lea
stc
push
sbb
ret
cmp
pop
jb
or
dec
cmp
add
jg
or
mov
xchg
cmpb
popf
in
xlat
icebp
push
push
icebp
push
inc
inc
sub
xchg
mov
inc
fisttps
cmp
rcr
xor
push
lret
dec
xchg
inc
xor
and
jle
mov
bound
enter
jno
out
adc
fidivs
repz
lock
lahf
insl
lock
pop
or
fimuls
xchg
or
popf
pusha
adc
fwait
test
push
jb
test
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
ja
icebp
pop
xchg
stc
std
mov
sbb
bound
cmpl
xchg
push
in
outsl
push
xor
fbstp
test
pop
fwait
pop
fcomi
fwait
xchg
push
lea
sbb
dec
ljmp
mov
aad
sbb
jns
push
push
push
dec
aad
jo
insb
insb
loop
loopne
mov
lods
fmuls
je
aas
mov
ds
daa
dec
sbb
jecxz
dec
dec
xlat
popa
xor
sahf
adc
cs
sahf
mov
cmpsl
jle
rclb
cmp
out
lock
pop
notb
sahf
pop
negb
shrl
inc
ret
dec
sub
pop
and
pop
xor
adc
adc
aam
inc
xor
clc
lcall
aas
mov
gs
addl
nop
aas
mov
nop
lcall
test
pop
sub
js
loopne
roll
pop
mov
inc
push
in
lahf
lods
pop
mov
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
ja
icebp
pop
xchg
stc
std
mov
sbb
bound
cmpl
xchg
push
in
outsl
push
xor
fbstp
test
pop
fwait
pop
fcomi
fwait
xchg
push
lea
sbb
dec
ljmp
mov
aad
sbb
jns
push
push
push
dec
aad
jo
insb
insb
loop
loopne
mov
lods
fmuls
je
aas
mov
ds
daa
dec
sbb
jecxz
dec
dec
xlat
popa
xor
sahf
adc
cs
sahf
mov
cmpsl
jle
rclb
cmp
out
lock
pop
notb
sahf
pop
negb
shrl
inc
ret
dec
sub
pop
and
pop
xor
adc
adc
aam
inc
xor
clc
lcall
aas
mov
gs
addl
nop
aas
mov
nop
lcall
test
pop
sub
js
loopne
roll
pop
mov
inc
push
in
lahf
lods
pop
mov
sahf
xlat
jp
dec
mov
repnz
jl
dec
or
movd
push
or
aad
in
in
out
scas
push
adc
sbb
dec
xorb
clc
or
xor
cmc
jb
cmpl
and
stc
js
xor
adc
push
xchg
test
and
or
adc
lods
int3
jl
mov
add
enter
adc
in
cltd
mov
bnd
addl
push
ds
sbb
bound
cmpsl
xchg
pop
adc
aas
jmp
mov
dec
ret
sub
je
lods
cmc
mov
aaa
and
nop
dec
out
das
push
mov
or
sbb
jno
push
je
lret
stos
sbb
push
out
aam
dec
mov
cmc
add
lea
stc
push
sbb
ret
cmp
pop
jb
or
dec
cmp
add
jg
or
mov
xchg
cmpb
popf
in
xlat
icebp
push
push
icebp
push
inc
inc
sub
xchg
mov
inc
fisttps
cmp
rcr
xor
push
lret
dec
xchg
inc
xor
and
jle
mov
bound
enter
jno
out
adc
fidivs
repz
lock
lahf
insl
lock
pop
or
fimuls
xchg
or
popf
pusha
adc
fwait
test
push
jb
test
out
movsb
test
mov
loope
daa
lea
fidivrs
sub
and
icebp
or
cli
dec
inc
mov
cli
out
lea
aad
xor
inc
sub
lcall
dec
ffree
ja
ljmp
inc
mov
test
mov
enter
xchg
fwait
subl
inc
mov
sti
adc
pushf
sub
shrb
imul
nop
adc
jmp
jbe
dec
aam
pop
xor
or
mov
mov
cmp
jmp
pop
test
dec
adc
sbb
and
sub
sbb
in
fisttpll
add
out
push
mov
push
movsb
hlt
into
or
inc
or
sbb
addb
pop
ss
icebp
lret
dec
xchg
pop
mov
stos
xor
iret
cli
jb
xchg
pop
jo
enter
mov
fcomip
notl
ljmp
cmp
inc
in
xchg
subl
call
je
jnp
xchg
push
sti
mov
pop
cmp
sub
and
shl
fwait
push
inc
or
push
jmp
ds
sahf
adc
fistpl
out
cli
and
aaa
sbb
shll
mov
aad
std
das
adc
adcl
xor
imul
mov
jno
xchg
push
mov
lcall
mov
test
shlb
dec
jmp
loop
les
xor
lods
cli
ret
fimuls
mov
js
fidivl
adc
sub
and
repnz
and
push
pop
out
and
add
jg
jmp
repz
or
push
leave
sbb
push
push
daa
std
and
pop
jg
movsl
cmp
xor
xor
addr16
mov
lret
ret
iret
sub
filds
fcompl
in
cmp
add
jle
cmc
sbb
in
pop
fldcw
mov
push
pop
jp
jmp
mov
sub
mov
orps
mov
out
rcrl
andb
cmp
jae
inc
ss
mov
cmp
iret
adc
int
or
xchg
push
mov
push
adc
xor
test
sbb
pop
add
jno
dec
test
ljmp
inc
add
mov
rolb
test
arpl
push
push
push
adc
xor
mov
mov
push
data16
or
cmp
stos
push
rcr
push
adc
out
jle
fnsetpm(287
in
rorl
enter
lret
mov
decl
mov
sbb
pop
or
mov
mov
fwait
adc
xchg
and
leave
sbb
out
push
xchg
loope
cmp
push
addl
cmp
in
xchg
pusha
fdivrl
call
fcompl
lret
aam
cmp
cwtl
repz
mov
icebp
sbb
add
popa
hlt
ljmp
imul
faddl
cmp
xor
ret
out
cmc
dec
xor
jnp
push
shrl
fwait
movsb
sbb
xchg
leave
or
sbb
lods
sub
inc
and
mov
cmp
add
pushf
mov
jl
popa
inc
sub
addr16
fildl
mov
ret
es
arpl
inc
push
mov
pop
pushf
mov
lret
lods
mov
cltd
or
and
cwtl
ljmp
ljmp
mov
cmc
mov
ss
or
add
mov
loop
outsb
sahf
xor
and
xor
roll
daa
aas
xchg
xor
out
dec
jno
xchg
outsb
inc
inc
xor
movsl
push
inc
xor
mov
pop
mov
out
insb
scas
std
shll
xchg
nop
sbb
dec
rcl
stos
jne
jb
mov
daa
data16
into
scas
adc
fcomps
cmp
mov
aas
mov
jge
cwtl
and
cmp
add
iret
mov
dec
rep
jae
ljmp
jne
adc
mov
pop
and
dec
fistpl
daa
jae
in
icebp
mov
sbb
mov
data16
arpl
pop
mov
push
inc
pushf
int
out
scas
mov
xor
imul
imul
mov
pusha
test
pop
cltd
jecxz
ret
ret
or
leave
shlb
sbbl
fcmovnu
jnp
cmp
pop
xchg
cli
lret
mov
adc
xchg
mov
cmc
push
ljmp
in
popl
leave
xor
pushf
jb
mov
es
xchg
inc
loope
into
sub
push
leave
sub
ja
cmp
dec
sbb
aaa
popf
call
daa
dec
jne
out
mov
mov
or
cmpsl
pop
orl
in
adc
fmul
push
adc
fsts
stos
test
mov
cmpsl
sub
hlt
data16
adc
outsl
gs
test
shll
mov
dec
pop
clc
jecxz
dec
nop
push
and
dec
pop
push
out
inc
sbb
dec
pop
inc
fsubs
sahf
shlb
rclb
jge
pop
cmp
jnp
jecxz
add
orb
and
push
and
inc
or
in
fsubr
aam
mov
aad
pop
add
and
mov
pop
lret
popa
dec
mov
rolb
or
pslld
adc
mov
push
into
pop
push
dec
les
mov
stos
nop
shrl
out
or
lea
mov
or
sub
fwait
xlat
inc
fists
xchg
and
add
pop
daa
fdiv
test
xchg
jo
xor
lods
cmpsb
dec
sbb
jne
push
and
sub
mov
ror
inc
mov
mov
aam
hlt
test
pop
mov
add
ret
xorb
out
loopne
clc
stos
sbb
xchg
add
jle
outsl
jge
cwtl
adc
mov
cmp
push
test
orb
dec
retw
out
push
sbb
fwait
cmp
stos
mov
ret
pop
sbb
push
test
mov
and
jmp
dec
mov
cmc
ja
adcl
pop
add
mov
lds
cld
mov
xor
adc
jo
call
xchg
fwait
mov
scas
bound
js
scas
cltd
jp
not
iret
std
xchg
push
stos
xchg
test
mov
ret
ret
stos
push
aaa
out
movsl
mov
sbb
or
jb
push
lods
divb
adc
fistpll
imul
sbb
insl
mov
les
gs
scas
int
icebp
das
adc
and
mov
mov
aam
lcall
enter
adc
test
sahf
jle
rorb
cltd
arpl
jbe
sub
scas
cwtl
aaa
cmp
sub
xor
daa
dec
pop
fimull
mov
lcall
stos
sub
jg
loope
pop
adc
sarl
inc
clc
test
or
sahf
test
xchg
ljmp
incb
xor
mov
inc
mov
mov
mov
xchg
inc
push
stc
adc
pop
inc
sub
lahf
pop
sarb
out
and
add
nop
pushf
jge
push
xor
push
mov
sub
xchg
pushf
xor
inc
adc
mov
cmp
pushf
stc
push
lret
sub
das
test
gs
mov
hlt
das
lods
push
dec
and
pop
add
dec
lcall
push
mov
shll
xor
sbb
pop
jecxz
dec
pop
cmp
negb
sbb
jo
jb
stos
or
mov
or
iret
lcall
icebp
jbe
and
scas
cmpl
push
mov
adc
lea
adc
jb
mov
iret
or
shlb
or
jo
mov
bound
jmp
scas
cwtl
fisttps
ret
push
jl
mov
jle
out
bound
cmp
aad
frstor
scas
das
or
jne
dec
pop
popa
sbb
mov
sbbb
movsb
pop
in
aas
and
jmp
xchg
or
xchg
cmp
popa
and
daa
inc
insb
mov
jmp
mov
repnz
test
sub
pop
dec
shll
pop
xor
push
aam
int3
or
shll
xor
mov
in
dec
cmp
repz
out
test
mov
ret
repnz
jmp
and
add
and
sbb
aas
jecxz
xchg
add
addr16
addl
addr16
subl
ret
push
std
adc
sub
jmp
js
cmpsl
or
add
lea
sub
xchg
inc
movb
repz
icebp
push
nop
jl
cmp
in
push
and
fldt
shl
mov
mov
dec
push
jnp
lock
xor
loope
imul
xchg
pop
inc
das
adc
fwait
pushf
mov
stos
sub
outsb
jo
ja
push
mov
mov
mov
push
push
int3
xchg
dec
int3
icebp
or
out
jecxz
push
pcmpgtw
push
inc
xor
add
gs
idivl
lcall
out
cmp
popa
push
xchg
mov
pop
mov
movsl
pop
mov
jae
xor
add
pusha
lcall
loope
xchg
cltd
mov
imul
int3
cwtl
in
push
xor
sysenter
adc
or
dec
int
push
push
or
lahf
push
xchg
jp
lahf
jb
fistps
fildll
cmp
sbb
mov
xor
stos
inc
bnd
push
cmpsl
dec
or
add
ljmp
icebp
push
adc
push
das
orb
imul
fiaddl
mov
dec
aad
lea
rorl
cmp
cmc
stos
inc
daa
mov
inc
insl
sbb
cmp
push
xchg
xor
xchg
stos
pop
adc
sub
pop
mov
fstl
push
icebp
mov
aad
pop
jmp
pop
repz
cmc
lods
lcall
dec
push
pop
ret
add
inc
aas
xlat
xchg
xor
das
xchg
pop
jl
hlt
mov
sbb
imul
sarl
mov
into
add
fnstenv
or
and
and
in
sub
push
inc
roll
arpl
and
in
call
ret
imul
addr16
outsb
and
ret
add
jnp
push
sub
dec
jp
cmpsb
mov
mov
xchg
sbbb
lods
stc
mov
pushf
dec
push
arpl
call
in
int3
mov
mov
jl
push
and
sahf
cmpsb
fcoms
out
rclb
mov
repnz
lods
push
mov
sti
mov
mov
push
lock
or
idivl
push
push
lods
leave
lods
stos
fldt
and
inc
add
cmp
lds
mov
jno
addl
jno
jns
cmp
in
aam
jb
dec
test
insb
xchg
push
scas
sbb
xchg
cmc
daa
cmp
pop
lea
inc
jg
out
xor
adc
stc
pop
dec
addl
sub
pop
mov
adcb
xor
pcmpeqb
push
shll
cmp
xor
scas
sub
xchg
jmp
xlat
loope
rep
aad
lret
jge
and
mov
popa
stos
dec
add
leave
mov
jle
movsl
sbb
push
ret
jns
mov
jecxz
sbb
inc
jo
cmpsl
repnz
addr16
adc
loope
push
enter
adc
out
inc
iret
out
test
mov
lret
aad
push
enter
cmpb
insb
cld
lods
out
lret
inc
mov
sub
rcrl
movsl
dec
or
fdivr
loope
ja
or
imulb
sbb
jg
xchg
out
adc
xchg
mov
sbb
ja
and
std
jg
add
xchg
sbb
and
push
and
xor
dec
pop
out
xchg
xchg
movb
mov
mov
scas
jne
loope
mov
xchg
adc
mov
dec
repz
icebp
aam
nop
mov
jg
loop
or
in
jae
inc
xchg
sti
fwait
lret
aad
lds
jne
addr16
hlt
cmpsl
cmpsb
test
iret
pop
addr16
and
mov
arpl
movsb
repz
cmpsl
daa
pusha
outsl
inc
jbe
repnz
cmpsl
popa
add
mov
push
je
lods
cmc
es
cli
add
jmp
sbb
sbb
jnp
aad
fldcw
push
outsb
cli
outsb
div
jb
arpl
or
mov
cmc
leave
sbb
ficomps
js
shrb
dec
or
adc
pop
pusha
outsl
push
cmp
jp
inc
outsl
dec
push
sbb
lea
push
aas
mov
xchg
lret
or
cltd
andl
or
pop
inc
daa
xchg
enter
mov
dec
push
or
lahf
push
loope
and
mov
cmpsl
scas
cmp
xchg
inc
push
pushf
lcall
lods
xchg
sbb
adc
xchg
mov
notb
xchg
and
dec
aas
iret
das
cmpsl
sbb
xchg
rclb
xchg
cmp
fists
push
add
xchg
inc
sub
call
push
mov
dec
adc
push
mov
add
js
dec
insb
jmp
pop
clc
push
inc
pavgb
bnd
add
cmp
mov
ja
and
fs
test
stos
sti
and
mov
lock
adc
sub
push
ret
pop
push
lods
ret
inc
cmp
jnp
xchg
fimuls
movb
daa
fmuls
daa
sub
sbb
and
sbb
fisubl
inc
out
fs
sub
mov
lods
aas
orl
xchg
inc
fsubl
dec
filds
push
stos
xor
xlat
std
or
cmpsb
out
orl
push
lea
lods
or
mov
mov
xlat
adc
xor
loope
mov
leave
sub
pop
mov
xor
ret
mov
std
jl
push
push
andl
push
mov
and
inc
sub
int
fildl
jg
xlat
cs
mov
aam
filds
negb
mov
out
jns
loopne
lods
stos
dec
and
fsubp
adc
mov
and
push
sbbl
push
stos
shll
rcrl
int3
hlt
cmpsb
lods
mov
mov
js
test
outsb
aaa
cmp
mov
imul
mov
jae
fsub
jmp
js
and
pop
cmp
mov
dec
roll
sbb
pop
enter
dec
insb
leave
gs
pop
mov
les
add
lods
dec
add
mov
ljmp
cmp
or
xor
push
fdivrl
cld
dec
adc
jb
adc
cmc
test
xchg
push
insb
mov
dec
and
jnp
adc
push
push
enter
cmc
andl
xchg
inc
mov
pop
and
mov
xor
add
xchg
jbe
repnz
stos
xchg
xor
test
xchg
mov
adc
push
jb
shl
sarb
pop
fists
add
jp
test
arpl
jp
fcoms
aas
rorb
cmp
dec
mov
enter
jmp
push
shlb
outsl
adc
push
lock
cltd
pop
xchg
add
aad
mov
sarb
icebp
cld
sbbb
icebp
out
pusha
fcom
ss
push
cmpsl
xor
nop
rolb
or
out
shl
int
xchg
fsubrl
xchg
xchg
push
jnp
cli
ret
push
test
xchg
dec
sub
adc
and
fsubr
sub
loop
orps
ja
nop
jp
dec
cs
jg
icebp
mov
lods
cs
loope
add
cwtl
push
xor
outsb
add
sub
outsl
pop
push
and
adc
int
mov
cmp
ret
adc
stos
int3
adc
movsl
pop
fucom
jmp
mov
scas
ja
mov
lahf
rcl
shrd
mov
adc
add
ss
orb
mov
mov
rcrl
sub
cmc
cmpb
pop
and
pop
or
dec
xchg
sub
popf
cmc
test
cmp
lods
mov
lods
push
jg
icebp
jp
dec
or
lods
cmp
out
cmp
xor
push
out
fstp
aam
test
push
pop
sub
xchg
mov
jmp
lea
es
sbb
aad
sub
stos
push
out
rcrb
iret
sbb
cmp
fwait
in
fdivrs
ljmp
mov
int3
imul
cmp
add
cmpsl
or
jge
sub
cld
test
push
and
cld
cltd
jne
mov
pop
jo
sub
mov
out
cmp
pop
fisttpll
ret
shrl
out
or
stos
or
inc
dec
cmp
cmp
repnz
xor
shl
pusha
sbb
pop
jle
jecxz
loope
xor
rolb
jle
out
sbb
popf
cmpsb
mov
mov
sub
enter
outsl
add
mov
std
std
js
adc
mov
sbb
in
mov
fdivs
fisubrs
cmp
sahf
imul
pop
jp
inc
call
push
out
push
loopne
push
xchg
shrl
addl
adc
cmp
dec
mov
jae
jno
dec
adc
outsl
lcall
popf
fisttpll
sbb
orb
icebp
mov
and
dec
sahf
std
aas
loop
fnstenv
xor
sbb
jne
or
cld
flds
loopne
jmp
mov
mov
arpl
psubusw
pop
orl
std
jg
icebp
dec
xchg
dec
icebp
out
cld
push
lret
pushf
push
testl
lods
jb
sbb
pop
cmp
pushf
lods
data16
adc
sahf
repz
enter
lret
rclb
mov
std
fildll
loop
xor
sub
xor
js
or
lods
subl
sub
sub
sbb
aam
out
pop
xchg
push
lret
mov
mov
and
xchg
stc
pushf
scas
addr16
add
add
mov
xchg
addb
sahf
fmul
cmp
rolb
mov
mov
insl
push
pop
jns
cmpsl
cmp
xchg
es
sub
push
sbb
cmpsb
or
negl
adc
ret
and
dec
popf
sbb
call
ret
inc
cmp
not
fisubs
lea
push
std
adc
in
add
std
sbb
out
jo
push
mov
cmc
hlt
adc
inc
imul
iret
jmp
sub
out
and
fcompl
xchg
pop
lds
mov
dec
mov
xlat
jbe
mov
repnz
and
jle
fs
pop
dec
notb
adc
sub
pushf
cmp
ljmp
push
ljmp
into
test
add
add
add
pop
cli
movl
mov
xchg
xor
dec
stos
sbb
aaa
mov
pop
test
push
insb
jae
ret
lea
inc
repnz
add
push
jnp
addr16
sar
rclb
loop
fwait
inc
and
xchg
test
cmp
aad
sbb
stos
and
shlb
enter
fwait
stc
mov
jne
inc
subl
cmp
mov
add
push
dec
lcall
out
loop
cmpsl
pop
sub
sahf
sbb
mov
jge
push
ret
inc
lahf
icebp
dec
fsubrs
into
push
jb,pt
enter
adc
mov
loop
fdivrs
fmul
cmp
cld
daa
cmpsl
inc
aaa
loope
lcall
jae
jmp
test
scas
mov
popa
mov
jp
sbb
cvtps2pd
andl
inc
inc
push
xchg
test
sahf
aam
call
jae
je
test
mov
xor
mov
sub
dec
jno
pop
push
outsb
aam
adc
push
and
fdivrs
insb
lret
inc
push
fimull
dec
xlat
lcall
mov
lock
mov
arpl
and
ja
or
jbe
inc
sub
stc
xchg
or
test
aas
inc
push
sti
push
stos
mov
dec
nop
imul
popa
rcrl
cmp
sbb
jo
dec
mov
in
pop
push
cmpl
les
pop
lea
repnz
mov
int
add
sbb
fcompl
or
ficoml
jle
imul
push
jmp
aad
pushf
aam
xor
push
cmpsb
xchg
add
xor
movsb
push
ja
int3
sbb
or
add
aad
pop
add
adc
mov
inc
jns
inc
in
push
std
lea
add
bound
pop
inc
jp
stos
aam
mov
lods
fisubrs
mov
inc
fwait
in
push
aam
fmul
jns
rcrl
inc
jae
sub
xchg
cmpsb
lret
xchg
push
out
loope
fiadds
jae
jno
cmp
bts
mov
xor
mov
or
lock
lret
mov
addr16
imul
sbb
push
sti
and
pop
loopne
xchg
push
pop
cmpsl
pusha
fwait
pop
outsl
fdivs
and
adc
add
push
mov
outsl
mov
es
mov
pop
add
pop
mov
push
push
push
and
xchg
fwait
cmp
add
mov
add
dec
add
cmc
mov
dec
scas
mov
insl
mov
xchg
jg
stos
jae
xchg
pop
pushf
and
out
sbb
jbe
dec
movsl
outsb
mov
dec
pop
pop
cli
inc
or
add
lea
stos
sub
sti
sbb
int3
in
adc
mov
test
push
lock
add
fstpt
icebp
inc
outsb
movsl
and
dec
dec
sub
in
call
xchg
aad
cmp
fldt
cmp
xor
adc
add
sub
imul
lods
add
scas
shl
lods
xlat
in
mov
or
or
and
lds
push
and
or
push
stc
push
shll
leave
push
push
imul
lock
jo
cmp
mov
loopne
sub
fimull
in
jg
push
xchg
aam
stos
cld
dec
lcall
idivl
dec
fcom
mov
mov
pop
loopne
insl
mov
pop
jo
inc
inc
xor
roll
push
cli
pop
fdivs
inc
stos
mov
out
pop
imull
mov
mov
sahf
dec
jle
sbb
pop
xor
rclb
adc
pop
sub
icebp
cmp
aaa
or
add
pop
iret
repnz
shlb
mov
jmp
cwtl
mov
std
loop
cli
ficomps
mov
out
hlt
push
lahf
or
or
xchg
into
adc
and
aad
add
mov
addr16
pop
fwait
mov
push
dec
imul
movsb
idivl
out
int
fndisi(8087
es
xor
ja
fwait
xabort
les
push
sub
aas
ret
pop
adc
aas
cld
mov
pop
mov
test
mov
cmp
lods
lret
mov
mov
xor
inc
jb
xchg
shrd
in
enter
sbb
add
ficoml
and
jns
mov
jno
sahf
lahf
fwait
ds
movsl
movb
pop
or
jg
mull
mov
sbb
adc
loope
shlb
lds
xchg
pop
sub
shlb
outsb
movsl
dec
ret
cltd
popf
insb
ret
popa
mov
dec
sbb
xchg
dec
sarl
frstor
lret
jp
pop
pop
lcall
and
repz
cmpsl
cmp
push
sub
in
mov
lret
jb
jl
js
cltd
push
or
arpl
mov
jmp
bound
cli
push
and
inc
sub
cmpsb
mov
out
push
andl
and
add
lods
rolb
mov
cmp
and
fs
cli
or
or
adc
les
shl
aad
mov
mov
sbb
mov
jo
insl
leave
push
adc
gs
push
push
fsubrl
sub
lret
pop
rep
test
adc
push
pop
push
jb
orb
imul
out
stos
jle
shrb
or
ja
out
stos
sub
int
xchg
mov
xchg
mov
scas
cmp
mov
outsb
pop
in
cltd
mov
notl
out
jne
jge
bound
cmpsb
scas
dec
mov
inc
lock
push
lods
cmpsl
or
aad
mov
ret
and
lret
sub
clc
gs
adc
popf
mov
ret
mov
sub
inc
jno
hlt
sub
xor
stos
pop
std
mov
jecxz
xor
lcall
movsl
dec
movsl
imul
and
ljmp
in
dec
sub
aad
stos
in
xchg
mov
mov
cld
jecxz
loope
scas
xchg
rcrl
rep
cmp
out
sub
adcl
jae
cmp
sbb
mov
xchg
mov
mov
jno
jno
arpl
mov
xor
mov
inc
decb
mov
pop
and
push
cmp
popa
cwtl
mov
in
shrb
xchg
mov
sub
loop
sbb
pop
xlat
ljmp
imul
jo
cli
ret
add
inc
jo
push
imul
jnp
aaa
inc
push
pusha
scas
cmpsb
jo
not
shll
cmp
mov
pop
dec
stos
in
inc
sarb
mov
xor
mov
mov
mov
arpl
push
aaa
imul
js
cld
inc
mov
push
or
or
xchg
les
movsb
in
add
xchg
in
subl
mov
jbe
cmp
push
pop
data16
movsb
mov
hlt
pop
fcmovnbe
add
jg
pop
adcl
mov
loopne
into
clc
pop
gs
cmpsb
cs
in
jbe
adc
sub
int3
and
xor
popa
adc
adc
mov
xchg
adc
dec
inc
roll
gs
scas
adc
out
sub
pop
fdivr
adc
xlat
in
jp
das
incl
imul
mov
adc
adc
jne
xchg
adc
mov
imul
repnz
outsb
inc
in
addr16
push
jbe
insl
inc
jle
or
dec
rclb
xor
in
ja
in
sarb
movsl
mov
lea
lret
or
add
cld
jmp
icebp
push
cmp
pop
mov
fs
and
mov
cld
inc
loopne
sbb
bound
cmp
pop
fdivrl
adc
push
cs
repz
pop
push
or
repnz
gs
ret
shrd
in
fwait
and
dec
jb
mov
cld
out
push
lret
pop
jg
loope
pop
xchg
inc
imul
insb
fldcw
xchg
jp
lea
inc
popa
pop
sub
jmp
in
add
mov
out
jns
aad
xlat
js
xchg
push
jecxz
pop
aam
mov
xchg
mov
aam
xchg
sub
xor
shrb
push
xchg
addr16
push
arpl
or
add
cmpsb
lret
sbb
cmp
repnz
nop
sarl
mov
dec
pop
push
test
test
jns
lret
lret
inc
xchg
inc
movsl
mov
cmc
mov
addr16
insl
xor
cmc
ret
loop
cmp
outsb
mov
mov
cli
sub
pop
or
imul
fwait
mov
mov
pop
adc
add
test
fsubs
sub
sarl
loopnew
xor
adc
xchg
aam
pop
or
push
dec
jb
adc
cmpsl
pushf
enter
and
add
xchg
mov
push
hlt
sti
lods
mov
push
mov
cmp
jae
dec
fists
and
ret
mov
or
pop
bound
js
shl
stos
sbb
cmovbe
mov
jbe
xchg
pop
loop
imul
inc
fldt
test
pop
in
cmp
mov
repnz
adc
cmp
jo
ret
dec
mov
divl
in
sbb
daa
push
mov
xor
je
jno
pop
insl
push
mov
lret
in
ret
pop
xchg
addr16
sarb
negb
std
leavew
push
psraw
icebp
imul
pop
cli
not
or
cli
insb
cmpsb
popa
daa
shlb
addr16
adc
aaa
ret
mov
add
sub
divb
ds
mov
fcmovne
in
xchg
adc
out
mov
pop
xor
addr16
mov
fcomi
mov
lret
fmull
sahf
inc
mov
mov
cmp
outsl
lods
stos
fs
scas
and
imul
or
sub
push
inc
cltd
mov
imul
mov
sbb
push
sti
daa
dec
inc
imul
aaa
lret
xchg
mov
xor
xchg
popa
sub
lods
mov
sbb
cmpsl
lods
ret
pop
pop
pop
jae
push
jg
add
push
jnp
mov
dec
mov
mov
and
dec
rorb
stos
xor
pop
xor
inc
xor
xbegin
rorl
sbb
adc
xchg
and
sub
adc
mov
jns
push
dec
sbb
rcrb
outsb
push
movsb
das
push
mov
outsl
mov
and
and
cmp
add
inc
inc
aas
lret
icebp
ljmp
pushf
icebp
inc
cmc
jmp
mov
fdivs
in
inc
lock
ss
xchg
jecxz
xchg
add
clc
lds
mov
inc
inc
cmpsl
lds
jmp
repnz
or
push
or
idivl
stc
add
push
jbe
push
shlb
add
testl
pop
fwait
push
sbb
inc
pop
loopne
pop
jl
xor
and
mov
shll
sbb
imul
fwait
out
dec
inc
mov
out
pop
inc
addl
aas
faddl
xlat
sbb
jg
cmp
int
fwait
ss
test
fwait
mov
xchg
dec
sub
loopne
adc
xchg
enter
dec
lcall
fs
xchg
in
add
sbb
aam
cmp
push
sbbb
mov
jae
pop
repz
sub
pop
arpl
and
stos
adc
lret
andl
push
dec
sub
jp
hlt
aam
jmp
adc
or
and
out
inc
or
sub
xorb
xchg
xchg
mov
pop
sub
sub
ds
cmpsl
je
leave
dec
mov
out
cmp
adc
mov
cli
sbb
in
cmp
mov
rolb
adc
xlat
setae
adc
xchg
xchg
xchg
inc
cli
mov
fcomps
cmp
sbb
das
rorb
inc
pushf
push
jb
loopne
inc
pop
lds
cmp
cltd
push
loope
add
inc
in
xor
je
ret
imul
pushf
sbb
push
mov
ret
out
scas
mov
dec
cmp
packsswb
jnp
mov
shr
addl
cld
and
lea
cmp
mov
imul
and
or
adcb
adc
int3
repz
adc
mov
repnz
cld
sahf
filds
sti
imulb
int3
mov
in
adc
enter
xchg
jo
neg
adc
pop
addb
or
fmuls
xchg
sbb
sarl
cltd
shrb
scas
cmpb
aaa
dec
push
push
mov
je
pop
cmp
imul
sub
xor
gs
jg
sahf
aaa
pushf
sarl
mov
pop
sub
mov
loop
test
xor
mov
mov
xchg
mov
mov
ja
push
mov
xlat
push
cmpb
loopne
fcmovu
int3
and
dec
dec
aaa
clc
cmp
dec
adc
xchg
roll
or
in
sahf
sbb
es
inc
jge
sti
out
push
inc
lahf
insl
adcb
fwait
int
and
fcoml
sbb
es
and
sbb
fidivs
pusha
add
rcrb
jle
incb
fstpt
push
pop
sahf
and
in
mov
sti
add
xor
mov
add
sti
xor
rcll
lret
lret
pop
shrw
mov
dec
inc
xor
sti
push
fisttpl
inc
outsb
lds
adc
lea
xchg
icebp
or
fstpl
jnp
daa
cmp
sarl
cmp
aad
out
adc
mov
adcb
insb
cwtl
pop
dec
dec
mov
and
clc
inc
mov
sub
cli
hlt
cmpsb
lock
ja
xchg
pop
push
rolb
push
pop
mov
xchg
stos
pop
hlt
lcall
and
clc
cmpb
dec
pushf
in
jp
pop
and
aam
add
ja
mov
and
scas
xor
fldenv
test
int3
mov
adc
fs
xor
jns
leave
sub
aas
cmpsl
jp
mov
pusha
adc
outsb
inc
jmp
shufps
lret
hlt
push
xlat
xchg
mov
imul
idivb
adc
aas
pop
popf
cs
xchg
aad
arpl
push
adc
lods
jb
pop
es
mov
notb
cmp
rol
cmpsb
cltd
js
xchg
inc
xor
adc
fildl
cmpsb
lods
xor
jecxz
shlb
push
pop
jb
fdivl
xor
sub
push
xor
and
icebp
lret
shlb
jl
adc
das
jmp
mov
test
lret
cld
mov
jecxz
xchg
sti
dec
push
cwtl
pop
lahf
repnz
xchg
leave
lret
jp
xchg
out
scas
or
andb
popa
inc
sub
cmc
mov
popa
mov
pop
call
mov
test
mov
sbb
sbb
mov
push
lock
mov
jl
pushf
jmp
gs
lods
cmc
xchg
mov
jmp
jl
adc
or
cmp
pop
pop
jbe
imul
xor
in
aaa
add
lock
iret
jg
and
cmpsl
fnstenv
mov
pop
push
push
rorb
inc
cmp
ss
sub
ss
leave
jns
shlb
mov
mov
dec
mov
push
shlb
cli
mov
popw
ss
xor
add
loope
mov
inc
sbb
mov
out
cmp
ljmp
mov
das
dec
push
or
rolb
dec
inc
pusha
fmuls
adc
pusha
fimuls
test
mov
mov
cmp
scas
push
add
dec
xchg
pop
ss
add
pop
add
stc
adc
push
test
mov
mov
notb
mov
xchg
sub
mov
jl
hlt
bound
mov
or
pop
loop
or
mov
cs
or
fucomp
fnstsw
insl
jae
add
imul
xor
pop
int3
test
mov
das
fcmovb
mov
sbb
push
imul
fisubs
mov
xor
aad
or
sahf
or
push
mov
out
dec
sti
lock
mov
sbb
ficoml
mov
mov
data16
ss
mov
lcall
push
pop
add
mov
sub
shr
or
mov
subl
jecxz
out
cli
xchg
loope
mov
fisttpll
fucomi
mov
push
sub
xchg
dec
dec
movsl
sbb
inc
lret
jl
daa
push
cld
out
mov
fbstp
xor
add
aad
xchg
inc
jne
mov
mull
mov
loop
arpl
mov
inc
subb
sub
xor
adc
mov
out
inc
ja
sbbb
sahf
mov
xchg
dec
sub
in
sbb
cmc
push
test
push
inc
int
pop
xchg
mov
xor
jg
cmpsl
mov
mov
cmpsb
pop
mov
shll
popf
pop
sub
and
cmpsl
cwtl
or
mov
mov
xchg
nopl
fmulp
test
sub
push
jl
pop
lret
and
shrl
xchg
shrb
xor
je
cmp
cmpb
movb
fidivrl
in
and
and
cli
lahf
sub
lret
dec
sbb
das
push
outsl
dec
mov
inc
adc
cmp
repz
pop
ret
mov
sbb
lds
imul
stc
addr16
aad
and
sti
xchg
mov
jecxz
in
movsl
mov
and
adc
inc
insb
into
push
fcmove
xor
loop
xor
xor
scas
xlat
cmpsl
mov
lret
cmp
push
lahf
nop
xchg
or
ja
xor
pop
pop
push
lock
icebp
sub
dec
jge
punpcklwd
nop
lahf
das
daa
dec
push
or
cli
pushf
mov
adc
sahf
sub
sbb
cmp
sub
fs
int3
imul
call
mov
stos
xor
aaa
ret
or
les
rcrl
test
jl
xchg
push
xchg
jne
in
adc
mov
xchg
sub
xchg
icebp
lods
shrl
push
add
cmc
cli
jns
dec
divb
in
add
imul
gs
int
sbbb
sub
adc
aam
enter
mov
pop
jle
fisubl
jo
out
xorl
and
xor
hlt
xchg
subb
dec
inc
ret
gs
jecxz
mov
xchg
int3
movhps
pop
daa
mov
push
aam
dec
cmp
rep
in
ret
cmp
jns
xor
xchg
pop
scas
xchg
popf
inc
mov
test
imul
cmp
call
fmul
pop
cmc
rclb
xchg
idivl
inc
rcll
sbb
xlat
loope
aad
xor
pop
pop
sub
adc
dec
popa
push
mov
divb
cmp
aam
xchg
sub
call
cltd
les
inc
mov
cmpsl
push
fsubs
jno
and
les
mov
scas
pop
repz
mov
loope
fucomip
cs
sub
jo
mov
leave
dec
int3
js
lods
cmp
cltd
leave
xor
or
outsl
jns
dec
cli
hlt
test
pop
add
jle
mov
jo
testl
mov
mov
cli
dec
ret
in
mov
jnp
fsubrp
xchg
imull
mov
cmp
int
ljmp
jns
inc
stos
xchg
and
pop
mov
push
data16
fwait
mov
repz
cli
mov
in
xchg
or
dec
push
out
stos
xor
sbb
push
or
scas
cmpl
and
fisubrl
jle
aaa
lods
or
aad
loope
ljmp
test
outsl
xor
inc
cli
xor
jp
scas
mov
mov
ror
add
jge
pop
cmp
and
jnp
std
cwtl
cmc
pop
push
jecxz
mov
arpl
int
leave
aas
and
mov
mov
mov
fwait
lret
push
cmp
xchg
imul
out
rcll
cmpsl
jnp
jle
add
int
xor
dec
jl
sbb
push
and
xor
inc
inc
outsl
test
es
std
sub
sub
adc
outsl
sub
jns
shl
pop
mov
pop
insl
cmpsl
pusha
and
xor
loopne
sub
out
mov
enter
dec
das
jp
adc
test
push
jne
and
jns
rcrl
out
pop
repnz
mov
or
mov
mov
sub
mov
inc
cmc
adc
jno
mov
test
sbb
loope
into
cld
icebp
addr16
dec
inc
cwtl
cmpsl
movb
cld
mov
jecxz
imul
xchg
dec
xor
out
gs
test
add
jns
xchg
fcomps
xor
and
sub
sub
mov
iret
push
popf
in
test
mov
data16
xchg
add
outsl
cwtl
sub
xchg
stc
sub
stc
sbb
pop
xchg
fldenv
test
mov
std
fmulp
dec
mov
inc
push
cmp
in
push
popf
filds
in
clc
jb
or
mov
jg
repnz
jbe
mov
sub
loopne
stos
clc
jge
enter
inc
fwait
sahf
mov
xchg
lcall
es
xchg
push
into
dec
inc
cmpsb
outsb
xor
add
popf
cmc
mov
nop
or
js
jbe
das
mov
xchg
cmp
out
or
aaa
cmpsl
add
mov
jns
jno
js
xchg
jne
xchg
mov
lret
or
in
scas
or
leave
es
dec
rcll
cmp
pushf
lcall
arpl
lret
mov
mov
cmpsb
pop
adcl
dec
push
movsb
test
ret
add
add
and
or
dec
notb
xor
imul
outsl
push
adc
cmp
ja
jae
arpl
repnz
nop
cmp
nop
stos
dec
xchg
jle
call
adc
xor
std
jge
mov
and
dec
push
xor
stos
push
les
sub
lods
fisttpl
push
sub
popf
popf
push
and
in
sarl
es
xchg
dec
mov
inc
xchg
jg
push
xchg
push
add
ds
xchg
push
imulb
ljmp
jecxz
insb
sub
pop
xor
or
rcrb
xchg
adc
fildl
sub
sbb
push
jnp
enter
add
popf
cs
mov
lret
sbb
mov
add
push
xchg
or
int
clc
sub
mov
pop
or
cmp
adc
mov
pusha
cmp
neg
inc
fiadds
or
jnp
out
lea
addr16
jns
repz
outsb
int
mov
inc
dec
outsb
jmp
into
imul
and
outsl
sbb
push
shll
mov
adc
adc
fisttpl
jecxz
add
or
adc
or
mov
inc
loopne
mov
pop
jb
xor
pop
inc
pop
or
and
scas
pop
outsb
popa
pop
add
imul
cmp
dec
mov
push
mov
add
jecxz
lea
divb
mov
add
fwait
cmc
imul
int
pop
in
repz
inc
add
loopne
pushf
pop
test
mov
or
aad
mov
mov
inc
loopne
cmp
pop
and
mov
ja
pop
nop
popa
dec
push
xchg
push
inc
stc
dec
enter
sub
sbb
jno
jl
in
jae
dec
shrb
rclb
xchg
icebp
scas
mov
pop
xchg
dec
and
nop
push
in
lret
xor
sti
mov
mov
inc
push
lods
xor
xchg
ret
or
shrl
test
jmp
mov
cmpb
scas
ret
inc
sbb
sbb
daa
imul
test
scas
ljmp
mov
movsb
movsb
das
xchg
jg
hlt
int
jg
rclb
sub
out
out
push
mov
mov
sub
sar
loop
shll
push
subb
stc
jecxz
add
sub
fiadds
mov
das
xor
adc
push
dec
movsb
enter
mov
xchg
push
push
rcrl
gs
js
aas
ja
mov
ds
pop
aam
cmp
test
add
cld
gs
ljmp
mov
addl
addr16
sub
aam
pop
jnp
jae
dec
movsb
fldlg2
push
lock
cli
xchg
mov
shlb
lods
add
or
push
push
pop
xchg
into
and
mov
mov
out
ds
dec
fiadds
lds
decl
hlt
mov
adc
adc
pop
xchg
popf
in
mov
cmp
rcll
movsb
aaa
pop
mov
push
or
xor
jo
lcall
push
jae
cmp
shll
insl
or
jecxz
add
enter
sbb
cli
repz
out
or
pop
cmp
or
sbb
lock
mov
add
mov
inc
and
fs
push
pop
xor
mov
int
into
stos
mov
fcompl
test
in
pop
sub
push
mov
mov
cwtl
adc
lods
sub
hlt
xor
lret
stc
dec
sahf
ljmp
fcmovbe
mov
mov
jp
and
inc
push
lods
push
pop
pop
shlb
sbb
xor
cltd
sub
shl
pushf
sbb
dec
lods
xor
xchg
mov
fsubrl
repz
push
jg
add
int
sti
lods
or
pop
lea
or
push
pushf
shll
inc
cmpsl
data16
dec
jg
fcomps
nop
lea
fwait
aad
push
adc
mov
insb
pop
nop
mov
lcall
push
push
pop
lods
inc
shl
jno
ficoms
mov
pushf
cltd
lods
mov
jb
sbb
and
lds
movsl
test
adc
xchg
mov
ss
and
pop
lock
inc
pushf
ds
popf
push
bound
and
orb
cmc
stc
sub
pop
mov
nop
addl
jecxz
cmp
fs
movsb
mov
sbb
jg
mov
push
in
inc
cmc
movsb
push
xor
orl
sub
jl
test
lret
orb
push
adc
ds
dec
adcb
test
lea
orb
cmp
xor
sti
adc
sbb
jbe
adc
out
pop
shrl
push
repnz
xchg
cmp
mov
stos
divb
movsb
mov
and
cmp
stos
jne
adc
pop
setno
sub
rorl
jbe
xchg
jg
mov
bound
test
mov
lret
add
js
add
adc
ds
mov
xor
out
dec
xchg
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
ja
icebp
pop
xchg
stc
std
mov
sbb
bound
cmpl
xchg
push
in
outsl
push
xor
fbstp
test
pop
fwait
pop
fcomi
fwait
xchg
push
lea
sbb
dec
ljmp
mov
aad
sbb
jns
push
push
push
dec
aad
jo
insb
insb
loop
loopne
mov
lods
fmuls
je
aas
mov
ds
daa
dec
sbb
jecxz
dec
dec
xlat
popa
xor
sahf
adc
cs
sahf
mov
cmpsl
jle
rclb
cmp
out
lock
pop
notb
sahf
pop
negb
shrl
inc
ret
dec
sub
pop
and
pop
xor
adc
adc
aam
inc
xor
clc
lcall
aas
mov
gs
addl
nop
aas
mov
nop
lcall
test
pop
sub
js
loopne
roll
pop
mov
inc
push
in
lahf
lods
pop
mov
sahf
xlat
jp
dec
mov
repnz
jl
dec
or
movd
push
or
aad
in
in
out
scas
push
adc
sbb
dec
xorb
clc
or
xor
cmc
jb
cmpl
and
stc
js
xor
adc
push
xchg
test
and
or
adc
lods
int3
jl
mov
add
enter
adc
in
cltd
mov
bnd
addl
push
ds
sbb
bound
cmpsl
xchg
pop
adc
aas
jmp
mov
dec
ret
sub
je
lods
cmc
mov
aaa
and
nop
dec
out
das
push
mov
or
sbb
jno
push
je
lret
stos
sbb
push
out
aam
dec
mov
cmc
add
lea
stc
push
sbb
ret
cmp
pop
jb
or
dec
cmp
add
jg
or
mov
xchg
cmpb
popf
in
xlat
icebp
push
push
icebp
push
inc
inc
sub
xchg
mov
inc
fisttps
cmp
rcr
xor
push
lret
dec
xchg
inc
xor
and
jle
mov
bound
enter
jno
out
adc
fidivs
repz
lock
lahf
insl
lock
pop
or
fimuls
xchg
or
popf
pusha
adc
fwait
test
push
jb
test
out
movsb
test
mov
loope
daa
lea
fidivrs
sub
and
icebp
or
cli
dec
inc
mov
cli
out
lea
aad
xor
inc
sub
lcall
dec
ffree
ja
ljmp
inc
mov
test
mov
enter
xchg
fwait
subl
inc
mov
sti
adc
pushf
sub
shrb
imul
nop
adc
jmp
jbe
dec
aam
pop
xor
or
mov
mov
cmp
jmp
pop
test
dec
adc
sbb
and
sub
sbb
in
fisttpll
add
out
push
mov
push
movsb
hlt
into
or
inc
or
sbb
addb
pop
ss
icebp
lret
dec
xchg
pop
mov
stos
xor
iret
cli
jb
xchg
pop
jo
enter
mov
fcomip
notl
ljmp
cmp
inc
in
xchg
subl
call
je
jnp
xchg
push
sti
mov
pop
cmp
sub
and
shl
fwait
push
inc
or
push
jmp
ds
sahf
adc
fistpl
out
cli
and
aaa
sbb
shll
mov
aad
std
das
adc
adcl
xor
imul
mov
jno
xchg
push
mov
lcall
mov
test
shlb
dec
jmp
loop
les
xor
lods
cli
ret
fimuls
mov
js
fidivl
adc
sub
and
repnz
and
push
pop
out
and
add
jg
jmp
repz
or
push
leave
sbb
push
push
daa
std
and
pop
jg
movsl
cmp
xor
xor
addr16
mov
lret
ret
iret
sub
filds
fcompl
in
cmp
add
jle
cmc
sbb
in
pop
fldcw
mov
push
pop
jp
jmp
mov
sub
mov
orps
mov
out
rcrl
andb
cmp
jae
inc
ss
mov
cmp
iret
adc
int
or
xchg
push
mov
push
adc
xor
test
sbb
pop
add
jno
dec
test
ljmp
inc
add
mov
rolb
test
arpl
push
push
push
adc
xor
mov
mov
push
data16
or
cmp
stos
push
rcr
push
adc
out
jle
fnsetpm(287
in
rorl
enter
lret
mov
decl
mov
sbb
pop
or
mov
mov
fwait
adc
xchg
and
leave
sbb
out
push
xchg
loope
cmp
push
addl
cmp
in
xchg
pusha
fdivrl
call
fcompl
lret
aam
cmp
cwtl
repz
mov
icebp
sbb
add
popa
hlt
ljmp
imul
faddl
cmp
xor
ret
out
cmc
dec
xor
jnp
push
shrl
fwait
movsb
sbb
xchg
leave
or
sbb
lods
sub
inc
and
mov
cmp
add
pushf
mov
jl
popa
inc
sub
addr16
fildl
mov
ret
es
arpl
inc
push
mov
pop
pushf
mov
lret
lods
mov
cltd
or
and
cwtl
ljmp
ljmp
mov
cmc
mov
ss
or
add
mov
loop
outsb
sahf
xor
and
xor
roll
daa
aas
xchg
xor
out
dec
jno
xchg
outsb
inc
inc
xor
movsl
push
inc
xor
mov
pop
mov
out
insb
scas
std
shll
xchg
nop
sbb
dec
rcl
stos
jne
jb
mov
daa
data16
into
scas
adc
fcomps
cmp
mov
aas
mov
jge
cwtl
and
cmp
add
iret
mov
dec
rep
jae
ljmp
jne
adc
mov
pop
and
dec
fistpl
daa
jae
in
icebp
mov
sbb
mov
data16
arpl
pop
mov
push
inc
pushf
int
out
scas
mov
xor
imul
imul
mov
pusha
test
pop
cltd
jecxz
ret
ret
or
leave
shlb
sbbl
fcmovnu
jnp
cmp
pop
xchg
cli
lret
mov
adc
xchg
mov
cmc
push
ljmp
in
popl
leave
xor
pushf
jb
mov
es
xchg
inc
loope
into
sub
push
leave
sub
ja
cmp
dec
sbb
aaa
popf
call
daa
dec
jne
out
mov
mov
or
cmpsl
pop
orl
in
adc
fmul
push
adc
fsts
stos
test
mov
cmpsl
sub
hlt
data16
adc
outsl
gs
test
shll
mov
dec
pop
clc
jecxz
dec
nop
push
and
dec
pop
push
out
inc
sbb
dec
pop
inc
fsubs
sahf
shlb
rclb
jge
pop
cmp
jnp
jecxz
add
orb
and
push
and
inc
or
in
fsubr
aam
mov
aad
pop
add
and
mov
pop
lret
popa
dec
mov
rolb
or
pslld
adc
mov
push
into
pop
push
dec
les
mov
stos
nop
shrl
out
or
lea
mov
or
sub
fwait
xlat
inc
fists
xchg
and
add
pop
daa
fdiv
test
xchg
jo
xor
lods
cmpsb
dec
sbb
jne
push
and
sub
mov
ror
inc
mov
mov
aam
hlt
test
pop
mov
add
ret
xorb
out
loopne
clc
stos
sbb
xchg
add
jle
outsl
jge
cwtl
adc
mov
cmp
push
test
orb
dec
retw
out
push
sbb
fwait
cmp
stos
mov
ret
pop
sbb
push
test
mov
and
jmp
dec
mov
cmc
ja
adcl
pop
add
mov
lds
cld
mov
xor
adc
jo
call
xchg
fwait
mov
scas
bound
js
scas
cltd
jp
not
iret
std
xchg
push
stos
xchg
test
mov
ret
ret
stos
push
aaa
out
movsl
mov
sbb
or
jb
push
lods
divb
adc
fistpll
imul
sbb
insl
mov
les
gs
scas
int
icebp
das
adc
and
mov
mov
aam
lcall
enter
adc
test
sahf
jle
rorb
cltd
arpl
jbe
sub
scas
cwtl
aaa
cmp
sub
xor
daa
dec
pop
fimull
mov
lcall
stos
sub
jg
loope
pop
adc
sarl
inc
clc
test
or
sahf
test
xchg
ljmp
incb
xor
mov
inc
mov
mov
mov
xchg
inc
push
stc
adc
pop
inc
sub
lahf
pop
sarb
out
and
add
nop
pushf
jge
push
xor
push
mov
sub
xchg
pushf
xor
inc
adc
mov
cmp
pushf
stc
push
lret
sub
das
test
gs
mov
hlt
das
lods
push
dec
and
pop
add
dec
lcall
push
mov
shll
xor
sbb
pop
jecxz
dec
pop
cmp
negb
sbb
jo
jb
stos
or
mov
or
iret
lcall
icebp
jbe
and
scas
cmpl
push
mov
adc
lea
adc
jb
mov
iret
or
shlb
or
jo
mov
bound
jmp
scas
cwtl
fisttps
ret
push
jl
mov
jle
out
bound
cmp
aad
frstor
scas
das
or
jne
dec
pop
popa
sbb
mov
sbbb
movsb
pop
in
aas
and
jmp
xchg
or
xchg
cmp
popa
and
daa
inc
insb
mov
jmp
mov
repnz
test
sub
pop
dec
shll
pop
xor
push
aam
int3
or
shll
xor
mov
in
dec
cmp
repz
out
test
mov
ret
repnz
jmp
and
add
and
sbb
aas
jecxz
xchg
add
addr16
addl
addr16
subl
ret
push
std
adc
sub
jmp
js
cmpsl
or
add
lea
sub
xchg
inc
movb
repz
icebp
push
nop
jl
cmp
in
push
and
fldt
shl
mov
mov
dec
push
jnp
lock
xor
loope
imul
xchg
pop
inc
das
adc
fwait
pushf
mov
stos
sub
outsb
jo
ja
push
mov
mov
mov
push
push
int3
xchg
dec
int3
icebp
or
out
jecxz
push
pcmpgtw
push
inc
xor
add
gs
idivl
lcall
out
cmp
popa
push
xchg
mov
pop
mov
movsl
pop
mov
jae
xor
add
pusha
lcall
loope
xchg
cltd
mov
imul
int3
cwtl
in
push
xor
sysenter
adc
or
dec
int
push
push
or
lahf
push
xchg
jp
lahf
jb
fistps
fildll
cmp
sbb
mov
xor
stos
inc
bnd
push
cmpsl
dec
or
add
ljmp
icebp
push
adc
push
das
orb
imul
fiaddl
mov
dec
aad
lea
rorl
cmp
cmc
stos
inc
daa
mov
inc
insl
sbb
cmp
push
xchg
xor
xchg
stos
pop
adc
sub
pop
mov
fstl
push
icebp
mov
aad
pop
jmp
pop
repz
cmc
lods
lcall
dec
push
pop
ret
add
inc
aas
xlat
xchg
xor
das
xchg
pop
jl
hlt
mov
sbb
imul
sarl
mov
into
add
fnstenv
or
and
and
in
sub
push
inc
roll
arpl
and
in
call
ret
imul
addr16
outsb
and
ret
add
jnp
push
sub
dec
jp
cmpsb
mov
mov
xchg
sbbb
lods
stc
mov
pushf
dec
push
arpl
call
in
int3
mov
mov
jl
push
and
sahf
cmpsb
fcoms
out
rclb
mov
repnz
lods
push
mov
sti
mov
mov
push
lock
or
idivl
push
push
lods
leave
lods
stos
fldt
and
inc
add
cmp
lds
mov
jno
addl
jno
jns
cmp
in
aam
jb
dec
test
insb
xchg
push
scas
sbb
xchg
cmc
daa
cmp
pop
lea
inc
jg
out
xor
adc
stc
pop
dec
addl
sub
pop
mov
adcb
xor
pcmpeqb
push
shll
cmp
xor
scas
sub
xchg
jmp
xlat
loope
rep
aad
lret
jge
and
mov
popa
stos
dec
add
leave
mov
jle
movsl
sbb
push
ret
jns
mov
jecxz
sbb
inc
jo
cmpsl
repnz
addr16
adc
loope
push
enter
adc
out
inc
iret
out
test
mov
lret
aad
push
enter
cmpb
insb
cld
lods
out
lret
inc
mov
sub
rcrl
movsl
dec
or
fdivr
loope
ja
or
imulb
sbb
jg
xchg
out
adc
xchg
mov
sbb
ja
and
std
jg
add
xchg
sbb
and
push
and
xor
dec
pop
out
xchg
xchg
movb
mov
mov
scas
jne
loope
mov
xchg
adc
mov
dec
repz
icebp
aam
nop
mov
jg
loop
or
in
jae
inc
xchg
sti
fwait
lret
aad
lds
jne
addr16
hlt
cmpsl
cmpsb
test
iret
pop
addr16
and
mov
arpl
movsb
repz
cmpsl
daa
pusha
outsl
inc
jbe
repnz
cmpsl
popa
add
mov
push
je
lods
cmc
es
cli
add
jmp
sbb
sbb
jnp
aad
fldcw
push
outsb
cli
outsb
div
jb
arpl
or
mov
cmc
leave
sbb
ficomps
js
shrb
dec
or
adc
pop
pusha
outsl
push
cmp
jp
inc
outsl
dec
push
sbb
lea
push
aas
mov
xchg
lret
or
cltd
andl
or
pop
inc
daa
xchg
enter
mov
dec
push
or
lahf
push
loope
and
mov
cmpsl
scas
cmp
xchg
inc
push
pushf
lcall
lods
xchg
sbb
adc
xchg
mov
notb
xchg
and
dec
aas
iret
das
cmpsl
sbb
xchg
rclb
xchg
cmp
fists
push
add
xchg
inc
sub
call
push
mov
dec
adc
push
mov
add
js
dec
insb
jmp
pop
clc
push
inc
pavgb
bnd
add
cmp
mov
ja
and
fs
test
stos
sti
and
mov
lock
adc
sub
push
ret
pop
push
lods
ret
inc
cmp
jnp
xchg
fimuls
movb
daa
fmuls
daa
sub
sbb
and
sbb
fisubl
inc
out
fs
sub
mov
lods
aas
orl
xchg
inc
fsubl
dec
filds
push
stos
xor
xlat
std
or
cmpsb
out
orl
push
lea
lods
or
mov
mov
xlat
adc
xor
loope
mov
leave
sub
pop
mov
xor
ret
mov
std
jl
push
push
andl
push
mov
and
inc
sub
int
fildl
jg
xlat
cs
mov
aam
filds
negb
mov
out
jns
loopne
lods
stos
dec
and
fsubp
adc
mov
and
push
sbbl
push
stos
shll
rcrl
int3
hlt
cmpsb
lods
mov
mov
js
test
outsb
aaa
cmp
mov
imul
mov
jae
fsub
jmp
js
and
pop
cmp
mov
dec
roll
sbb
pop
enter
dec
insb
leave
gs
pop
mov
les
add
lods
dec
add
mov
ljmp
cmp
or
xor
push
fdivrl
cld
dec
adc
jb
adc
cmc
test
xchg
push
insb
mov
dec
and
jnp
adc
push
push
enter
cmc
andl
xchg
inc
mov
pop
and
mov
xor
add
xchg
jbe
repnz
stos
xchg
xor
test
xchg
mov
adc
push
jb
shl
sarb
pop
fists
add
jp
test
arpl
jp
fcoms
aas
rorb
cmp
dec
mov
enter
jmp
push
shlb
outsl
adc
push
lock
cltd
pop
xchg
add
aad
mov
sarb
icebp
cld
sbbb
icebp
out
pusha
fcom
ss
push
cmpsl
xor
nop
rolb
or
out
shl
int
xchg
fsubrl
xchg
xchg
push
jnp
cli
ret
push
test
xchg
dec
sub
adc
and
fsubr
sub
loop
orps
ja
nop
jp
dec
cs
jg
icebp
mov
lods
cs
loope
add
cwtl
push
xor
outsb
add
sub
outsl
pop
push
and
adc
int
mov
cmp
ret
adc
stos
int3
adc
movsl
pop
fucom
jmp
mov
scas
ja
mov
lahf
rcl
shrd
mov
adc
add
ss
orb
mov
mov
rcrl
sub
cmc
cmpb
pop
and
pop
or
dec
xchg
sub
popf
cmc
test
cmp
lods
mov
lods
push
jg
icebp
jp
dec
or
lods
cmp
out
cmp
xor
push
out
fstp
aam
test
push
pop
sub
xchg
mov
jmp
lea
es
sbb
aad
sub
stos
push
out
rcrb
iret
sbb
cmp
fwait
in
fdivrs
ljmp
mov
int3
imul
cmp
add
cmpsl
or
jge
sub
cld
test
push
and
cld
cltd
jne
mov
pop
jo
sub
mov
out
cmp
pop
fisttpll
ret
shrl
out
or
stos
or
inc
dec
cmp
cmp
repnz
xor
shl
pusha
sbb
pop
jle
jecxz
loope
xor
rolb
jle
out
sbb
popf
cmpsb
mov
mov
sub
enter
outsl
add
mov
std
std
js
adc
mov
sbb
in
mov
fdivs
fisubrs
cmp
sahf
imul
pop
jp
inc
call
push
out
push
loopne
push
xchg
shrl
addl
adc
cmp
dec
mov
jae
jno
dec
adc
outsl
lcall
popf
fisttpll
sbb
orb
icebp
mov
and
dec
sahf
std
aas
loop
fnstenv
xor
sbb
jne
or
cld
flds
loopne
jmp
mov
mov
arpl
psubusw
pop
orl
std
jg
icebp
dec
xchg
dec
icebp
out
cld
push
lret
pushf
push
testl
lods
jb
sbb
pop
cmp
pushf
lods
data16
adc
sahf
repz
enter
lret
rclb
mov
std
fildll
loop
xor
sub
xor
js
or
lods
subl
sub
sub
sbb
aam
out
pop
xchg
push
lret
mov
mov
and
xchg
stc
pushf
scas
addr16
add
add
mov
xchg
addb
sahf
fmul
cmp
rolb
mov
mov
insl
push
pop
jns
cmpsl
cmp
xchg
es
sub
push
sbb
cmpsb
or
negl
adc
ret
and
dec
popf
sbb
call
ret
inc
cmp
not
fisubs
lea
push
std
adc
in
add
std
sbb
out
jo
push
mov
cmc
hlt
adc
inc
imul
iret
jmp
sub
out
and
fcompl
xchg
pop
lds
mov
dec
mov
xlat
jbe
mov
repnz
and
jle
fs
pop
dec
notb
adc
sub
pushf
cmp
ljmp
push
ljmp
into
test
add
add
add
pop
cli
movl
mov
xchg
xor
dec
stos
sbb
aaa
mov
pop
test
push
insb
jae
ret
lea
inc
repnz
add
push
jnp
addr16
sar
rclb
loop
fwait
inc
and
xchg
test
cmp
aad
sbb
stos
and
shlb
enter
fwait
stc
mov
jne
inc
subl
cmp
mov
add
push
dec
lcall
out
loop
cmpsl
pop
sub
sahf
sbb
mov
jge
push
ret
inc
lahf
icebp
dec
fsubrs
into
push
jb,pt
enter
adc
mov
loop
fdivrs
fmul
cmp
cld
daa
cmpsl
inc
aaa
loope
lcall
jae
jmp
test
scas
mov
popa
mov
jp
sbb
cvtps2pd
andl
inc
inc
push
xchg
test
sahf
aam
call
jae
je
test
mov
xor
mov
sub
dec
jno
pop
push
outsb
aam
adc
push
and
fdivrs
insb
lret
inc
push
fimull
dec
xlat
lcall
mov
lock
mov
arpl
and
ja
or
jbe
inc
sub
stc
xchg
or
test
aas
inc
push
sti
push
stos
mov
dec
nop
imul
popa
rcrl
cmp
sbb
jo
dec
mov
in
pop
push
cmpl
les
pop
lea
repnz
mov
int
add
sbb
fcompl
or
ficoml
jle
imul
push
jmp
aad
pushf
aam
xor
push
cmpsb
xchg
add
xor
movsb
push
ja
int3
sbb
or
add
aad
pop
add
adc
mov
inc
jns
inc
in
push
std
lea
add
bound
pop
inc
jp
stos
aam
mov
lods
fisubrs
mov
inc
fwait
in
push
aam
fmul
jns
rcrl
inc
jae
sub
xchg
cmpsb
lret
xchg
push
out
loope
fiadds
jae
jno
cmp
bts
mov
xor
mov
or
lock
lret
mov
addr16
imul
sbb
push
sti
and
pop
loopne
xchg
push
pop
cmpsl
pusha
fwait
pop
outsl
fdivs
and
adc
add
push
mov
outsl
mov
es
mov
pop
add
pop
mov
push
push
push
and
xchg
fwait
cmp
add
mov
add
dec
add
cmc
mov
dec
scas
mov
insl
mov
xchg
jg
stos
jae
xchg
pop
pushf
and
out
sbb
jbe
dec
movsl
outsb
mov
dec
pop
pop
cli
inc
or
add
lea
stos
sub
sti
sbb
int3
in
adc
mov
test
push
lock
add
fstpt
icebp
inc
outsb
movsl
and
dec
dec
sub
in
call
xchg
aad
cmp
fldt
cmp
xor
adc
add
sub
imul
lods
add
scas
shl
lods
xlat
in
mov
or
or
and
lds
push
and
or
push
stc
push
shll
leave
push
push
imul
lock
jo
cmp
mov
loopne
sub
fimull
in
jg
push
xchg
aam
stos
cld
dec
lcall
idivl
dec
fcom
mov
mov
pop
loopne
insl
mov
pop
jo
inc
inc
xor
roll
push
cli
pop
fdivs
inc
stos
mov
out
pop
imull
mov
mov
sahf
dec
jle
sbb
pop
xor
rclb
adc
pop
sub
icebp
cmp
aaa
or
add
pop
iret
repnz
shlb
mov
jmp
cwtl
mov
std
loop
cli
ficomps
mov
out
hlt
push
lahf
or
or
xchg
into
adc
and
aad
add
mov
addr16
pop
fwait
mov
push
dec
imul
movsb
idivl
out
int
fndisi(8087
es
xor
ja
fwait
xabort
les
push
sub
aas
ret
pop
adc
aas
cld
mov
pop
mov
test
mov
cmp
lods
lret
mov
mov
xor
inc
jb
xchg
shrd
in
enter
sbb
add
ficoml
and
jns
mov
jno
sahf
lahf
fwait
ds
movsl
movb
pop
or
jg
mull
mov
sbb
adc
loope
shlb
lds
xchg
pop
sub
shlb
outsb
movsl
dec
ret
cltd
popf
insb
ret
popa
mov
dec
sbb
xchg
dec
sarl
frstor
lret
jp
pop
pop
lcall
and
repz
cmpsl
cmp
push
sub
in
mov
lret
jb
jl
js
cltd
push
or
arpl
mov
jmp
bound
cli
push
and
inc
sub
cmpsb
mov
out
push
andl
and
add
lods
rolb
mov
cmp
and
fs
cli
or
or
adc
les
shl
aad
mov
mov
sbb
mov
jo
insl
leave
push
adc
gs
push
push
fsubrl
sub
lret
pop
rep
test
adc
push
pop
push
jb
orb
imul
out
stos
jle
shrb
or
ja
out
stos
sub
int
xchg
mov
xchg
mov
scas
cmp
mov
outsb
pop
in
cltd
mov
notl
out
jne
jge
bound
cmpsb
scas
dec
mov
inc
lock
push
lods
cmpsl
or
aad
mov
ret
and
lret
sub
clc
gs
adc
popf
mov
ret
mov
sub
inc
jno
hlt
sub
xor
stos
pop
std
mov
jecxz
xor
lcall
movsl
dec
movsl
imul
and
ljmp
in
dec
sub
aad
stos
in
xchg
mov
mov
cld
jecxz
loope
scas
xchg
rcrl
rep
cmp
out
sub
adcl
jae
cmp
sbb
mov
xchg
mov
mov
jno
jno
arpl
mov
xor
mov
inc
decb
mov
pop
and
push
cmp
popa
cwtl
mov
in
shrb
xchg
mov
sub
loop
sbb
pop
xlat
ljmp
imul
jo
cli
ret
add
inc
jo
push
imul
jnp
aaa
inc
push
pusha
scas
cmpsb
jo
not
shll
cmp
mov
pop
dec
stos
in
inc
sarb
mov
xor
mov
mov
mov
arpl
push
aaa
imul
js
cld
inc
mov
push
or
or
xchg
les
movsb
in
add
xchg
in
subl
mov
jbe
cmp
push
pop
data16
movsb
mov
hlt
pop
fcmovnbe
add
jg
pop
adcl
mov
loopne
into
clc
pop
gs
cmpsb
cs
in
jbe
adc
sub
int3
and
xor
popa
adc
adc
mov
xchg
adc
dec
inc
roll
gs
scas
adc
out
sub
pop
fdivr
adc
xlat
in
jp
das
incl
imul
mov
adc
adc
jne
xchg
adc
mov
imul
repnz
outsb
inc
in
addr16
push
jbe
insl
inc
jle
or
dec
rclb
xor
in
ja
in
sarb
movsl
mov
lea
lret
or
add
cld
jmp
icebp
push
cmp
pop
mov
fs
and
mov
cld
inc
loopne
sbb
bound
cmp
pop
fdivrl
adc
push
cs
repz
pop
push
or
repnz
gs
ret
shrd
in
fwait
and
dec
jb
mov
cld
out
push
lret
pop
jg
loope
pop
xchg
inc
imul
insb
fldcw
xchg
jp
lea
inc
popa
pop
sub
jmp
in
add
mov
out
jns
aad
xlat
js
xchg
push
jecxz
pop
aam
mov
xchg
mov
aam
xchg
sub
xor
shrb
push
xchg
addr16
push
arpl
or
add
cmpsb
lret
sbb
cmp
repnz
nop
sarl
mov
dec
pop
push
test
test
jns
lret
lret
inc
xchg
inc
movsl
mov
cmc
mov
addr16
insl
xor
cmc
ret
loop
cmp
outsb
mov
mov
cli
sub
pop
or
imul
fwait
mov
mov
pop
adc
add
test
fsubs
sub
sarl
loopnew
xor
adc
xchg
aam
pop
or
push
dec
jb
adc
cmpsl
pushf
enter
and
add
xchg
mov
push
hlt
sti
lods
mov
push
mov
cmp
jae
dec
fists
and
ret
mov
or
pop
bound
js
shl
stos
sbb
cmovbe
mov
jbe
xchg
pop
loop
imul
inc
fldt
test
pop
in
cmp
mov
repnz
adc
cmp
jo
ret
dec
mov
divl
in
sbb
daa
push
mov
xor
je
jno
pop
insl
push
mov
lret
in
ret
pop
xchg
addr16
sarb
negb
std
leavew
push
psraw
icebp
imul
pop
cli
not
or
cli
insb
cmpsb
popa
daa
shlb
addr16
adc
aaa
ret
mov
add
sub
divb
ds
mov
fcmovne
in
xchg
adc
out
mov
pop
xor
addr16
mov
fcomi
mov
lret
fmull
sahf
inc
mov
mov
cmp
outsl
lods
stos
fs
scas
and
imul
or
sub
push
inc
cltd
mov
imul
mov
sbb
push
sti
daa
dec
inc
imul
aaa
lret
xchg
mov
xor
xchg
popa
sub
lods
mov
sbb
cmpsl
lods
ret
pop
pop
pop
jae
push
jg
add
push
jnp
mov
dec
mov
mov
and
dec
rorb
stos
xor
pop
xor
inc
xor
xbegin
rorl
sbb
adc
xchg
and
sub
adc
mov
jns
push
dec
sbb
rcrb
outsb
push
movsb
das
push
mov
outsl
mov
and
and
cmp
add
inc
inc
aas
lret
icebp
ljmp
pushf
icebp
inc
cmc
jmp
mov
fdivs
in
inc
lock
ss
xchg
jecxz
xchg
add
clc
lds
mov
inc
inc
cmpsl
lds
jmp
repnz
or
push
or
idivl
stc
add
push
jbe
push
shlb
add
testl
pop
fwait
push
sbb
inc
pop
loopne
pop
jl
xor
and
mov
shll
sbb
imul
fwait
out
dec
inc
mov
out
pop
inc
addl
aas
faddl
xlat
sbb
jg
cmp
int
fwait
ss
test
fwait
mov
xchg
dec
sub
loopne
adc
xchg
enter
dec
lcall
fs
xchg
in
add
sbb
aam
cmp
push
sbbb
mov
jae
pop
repz
sub
pop
arpl
and
stos
adc
lret
andl
push
dec
sub
jp
hlt
aam
jmp
adc
or
and
out
inc
or
sub
xorb
xchg
xchg
mov
pop
sub
sub
ds
cmpsl
je
leave
dec
mov
out
cmp
adc
mov
cli
sbb
in
cmp
mov
rolb
adc
xlat
setae
adc
xchg
xchg
xchg
inc
cli
mov
fcomps
cmp
sbb
das
rorb
inc
pushf
push
jb
loopne
inc
pop
lds
cmp
cltd
push
loope
add
inc
in
xor
je
ret
imul
pushf
sbb
push
mov
ret
out
scas
mov
dec
cmp
packsswb
jnp
mov
shr
addl
cld
and
lea
cmp
mov
imul
and
or
adcb
adc
int3
repz
adc
mov
repnz
cld
sahf
filds
sti
imulb
int3
mov
in
adc
enter
xchg
jo
neg
adc
pop
addb
or
fmuls
xchg
sbb
sarl
cltd
shrb
scas
cmpb
aaa
dec
push
push
mov
je
pop
cmp
imul
sub
xor
gs
jg
sahf
aaa
pushf
sarl
mov
pop
sub
mov
loop
test
xor
mov
mov
xchg
mov
mov
ja
push
mov
xlat
push
cmpb
loopne
fcmovu
int3
and
dec
dec
aaa
clc
cmp
dec
adc
xchg
roll
or
in
sahf
sbb
es
inc
jge
sti
out
push
inc
lahf
insl
adcb
fwait
int
and
fcoml
sbb
es
and
sbb
fidivs
pusha
add
rcrb
jle
incb
fstpt
push
pop
sahf
and
in
mov
sti
add
xor
mov
add
sti
xor
rcll
lret
lret
pop
shrw
mov
dec
inc
xor
sti
push
fisttpl
inc
outsb
lds
adc
lea
xchg
icebp
or
fstpl
jnp
daa
cmp
sarl
cmp
aad
out
adc
mov
adcb
insb
cwtl
pop
dec
dec
mov
and
clc
inc
mov
sub
cli
hlt
cmpsb
lock
ja
xchg
pop
push
rolb
push
pop
mov
xchg
stos
pop
hlt
lcall
and
clc
cmpb
dec
pushf
in
jp
pop
and
aam
add
ja
mov
and
scas
xor
fldenv
test
int3
mov
adc
fs
xor
jns
leave
sub
aas
cmpsl
jp
mov
pusha
adc
outsb
inc
jmp
shufps
lret
hlt
push
xlat
xchg
mov
imul
idivb
adc
aas
pop
popf
cs
xchg
aad
arpl
push
adc
lods
jb
pop
es
mov
notb
cmp
rol
cmpsb
cltd
js
xchg
inc
xor
adc
fildl
cmpsb
lods
xor
jecxz
shlb
push
pop
jb
fdivl
xor
sub
push
xor
and
icebp
lret
shlb
jl
adc
das
jmp
mov
test
lret
cld
mov
jecxz
xchg
sti
dec
push
cwtl
pop
lahf
repnz
xchg
leave
lret
jp
xchg
out
scas
or
andb
popa
inc
sub
cmc
mov
popa
mov
pop
call
mov
test
mov
sbb
sbb
mov
push
lock
mov
jl
pushf
jmp
gs
lods
cmc
xchg
mov
jmp
jl
adc
or
cmp
pop
pop
jbe
imul
xor
in
aaa
add
lock
iret
jg
and
cmpsl
fnstenv
mov
pop
push
push
rorb
inc
cmp
ss
sub
ss
leave
jns
shlb
mov
mov
dec
mov
push
shlb
cli
mov
popw
ss
xor
add
loope
mov
inc
sbb
mov
out
cmp
ljmp
mov
das
dec
push
or
rolb
dec
inc
pusha
fmuls
adc
pusha
fimuls
test
mov
mov
cmp
scas
push
add
dec
xchg
pop
ss
add
pop
add
stc
adc
push
test
mov
mov
notb
mov
xchg
sub
mov
jl
hlt
bound
mov
or
pop
loop
or
mov
cs
or
fucomp
fnstsw
insl
jae
add
imul
xor
pop
int3
test
mov
das
fcmovb
mov
sbb
push
imul
fisubs
mov
xor
aad
or
sahf
or
push
mov
out
dec
sti
lock
mov
sbb
ficoml
mov
mov
data16
ss
mov
lcall
push
pop
add
mov
sub
shr
or
mov
subl
jecxz
out
cli
xchg
loope
mov
fisttpll
fucomi
mov
push
sub
xchg
dec
dec
movsl
sbb
inc
lret
jl
daa
push
cld
out
mov
fbstp
xor
add
aad
xchg
inc
jne
mov
mull
mov
loop
arpl
mov
inc
subb
sub
xor
adc
mov
out
inc
ja
sbbb
sahf
mov
xchg
dec
sub
in
sbb
cmc
push
test
push
inc
int
pop
xchg
mov
xor
jg
cmpsl
mov
mov
cmpsb
pop
mov
shll
popf
pop
sub
and
cmpsl
cwtl
or
mov
mov
xchg
nopl
fmulp
test
sub
push
jl
pop
lret
and
shrl
xchg
shrb
xor
je
cmp
cmpb
movb
fidivrl
in
and
and
cli
lahf
sub
lret
dec
sbb
das
push
outsl
dec
mov
inc
adc
cmp
repz
pop
ret
mov
sbb
lds
imul
stc
addr16
aad
and
sti
xchg
mov
jecxz
in
movsl
mov
and
adc
inc
insb
into
push
fcmove
xor
loop
xor
xor
scas
xlat
cmpsl
mov
lret
cmp
push
lahf
nop
xchg
or
ja
xor
pop
pop
push
lock
icebp
sub
dec
jge
punpcklwd
nop
lahf
das
daa
dec
push
or
cli
pushf
mov
adc
sahf
sub
sbb
cmp
sub
fs
int3
imul
call
mov
stos
xor
aaa
ret
or
les
rcrl
test
jl
xchg
push
xchg
jne
in
adc
mov
xchg
sub
xchg
icebp
lods
shrl
push
add
cmc
cli
jns
dec
divb
in
add
imul
gs
int
sbbb
sub
adc
aam
enter
mov
pop
jle
fisubl
jo
out
xorl
and
xor
hlt
xchg
subb
dec
inc
ret
gs
jecxz
mov
xchg
int3
movhps
pop
daa
mov
push
aam
dec
cmp
rep
in
ret
cmp
jns
xor
xchg
pop
scas
xchg
popf
inc
mov
test
imul
cmp
call
fmul
pop
cmc
rclb
xchg
idivl
inc
rcll
sbb
xlat
loope
aad
xor
pop
pop
sub
adc
dec
popa
push
mov
divb
cmp
aam
xchg
sub
call
cltd
les
inc
mov
cmpsl
push
fsubs
jno
and
les
mov
scas
pop
repz
mov
loope
fucomip
cs
sub
jo
mov
leave
dec
int3
js
lods
cmp
cltd
leave
xor
or
outsl
jns
dec
cli
hlt
test
pop
add
jle
mov
jo
testl
mov
mov
cli
dec
ret
in
mov
jnp
fsubrp
xchg
imull
mov
cmp
int
ljmp
jns
inc
stos
xchg
and
pop
mov
push
data16
fwait
mov
repz
cli
mov
in
xchg
or
dec
push
out
stos
xor
sbb
push
or
scas
cmpl
and
fisubrl
jle
aaa
lods
or
aad
loope
ljmp
test
outsl
xor
inc
cli
xor
jp
scas
mov
mov
ror
add
jge
pop
cmp
and
jnp
std
cwtl
cmc
pop
push
jecxz
mov
arpl
int
leave
aas
and
mov
mov
mov
fwait
lret
push
cmp
xchg
imul
out
rcll
cmpsl
jnp
jle
add
int
xor
dec
jl
sbb
push
and
xor
inc
inc
outsl
test
es
std
sub
sub
adc
outsl
sub
jns
shl
pop
mov
pop
insl
cmpsl
pusha
and
xor
loopne
sub
out
mov
enter
dec
das
jp
adc
test
push
jne
and
jns
rcrl
out
pop
repnz
mov
or
mov
mov
sub
mov
inc
cmc
adc
jno
mov
test
sbb
loope
into
cld
icebp
addr16
dec
inc
cwtl
cmpsl
movb
cld
mov
jecxz
imul
xchg
dec
xor
out
gs
test
add
jns
xchg
fcomps
xor
and
sub
sub
mov
iret
push
popf
in
test
mov
data16
xchg
add
outsl
cwtl
sub
xchg
stc
sub
stc
sbb
pop
xchg
fldenv
test
mov
std
fmulp
dec
mov
inc
push
cmp
in
push
popf
filds
in
clc
jb
or
mov
jg
repnz
jbe
mov
sub
loopne
stos
clc
jge
enter
inc
fwait
sahf
mov
xchg
lcall
es
xchg
push
into
dec
inc
cmpsb
outsb
xor
add
popf
cmc
mov
nop
or
js
jbe
das
mov
xchg
cmp
out
or
aaa
cmpsl
add
mov
jns
jno
js
xchg
jne
xchg
mov
lret
or
in
scas
or
leave
es
dec
rcll
cmp
pushf
lcall
arpl
lret
mov
mov
cmpsb
pop
adcl
dec
push
movsb
test
ret
add
add
and
or
dec
notb
xor
imul
outsl
push
adc
cmp
ja
jae
arpl
repnz
nop
cmp
nop
stos
dec
xchg
jle
call
adc
xor
std
jge
mov
and
dec
push
xor
stos
push
les
sub
lods
fisttpl
push
sub
popf
popf
push
and
in
sarl
es
xchg
dec
mov
inc
xchg
jg
push
xchg
push
add
ds
xchg
push
imulb
ljmp
jecxz
insb
sub
pop
xor
or
rcrb
xchg
adc
fildl
sub
sbb
push
jnp
enter
add
popf
cs
mov
lret
sbb
mov
add
push
xchg
or
int
clc
sub
mov
pop
or
cmp
adc
mov
pusha
cmp
neg
inc
fiadds
or
jnp
out
lea
addr16
jns
repz
outsb
int
mov
inc
dec
outsb
jmp
into
imul
and
outsl
sbb
push
shll
mov
adc
adc
fisttpl
jecxz
add
or
adc
or
mov
inc
loopne
mov
pop
jb
xor
pop
inc
pop
or
and
scas
pop
outsb
popa
pop
add
imul
cmp
dec
mov
push
mov
add
jecxz
lea
divb
mov
add
fwait
cmc
imul
int
pop
in
repz
inc
add
loopne
pushf
pop
test
mov
or
aad
mov
mov
inc
loopne
cmp
pop
and
mov
ja
pop
nop
popa
dec
push
xchg
push
inc
stc
dec
enter
sub
sbb
jno
jl
in
jae
dec
shrb
rclb
xchg
icebp
scas
mov
pop
xchg
dec
and
nop
push
in
lret
xor
sti
mov
mov
inc
push
lods
xor
xchg
ret
or
shrl
test
jmp
mov
cmpb
scas
ret
inc
sbb
sbb
daa
imul
test
scas
ljmp
mov
movsb
movsb
das
xchg
jg
hlt
int
jg
rclb
sub
out
out
push
mov
mov
sub
sar
loop
shll
push
subb
stc
jecxz
add
sub
fiadds
mov
das
xor
adc
push
dec
movsb
enter
mov
xchg
push
push
rcrl
gs
js
aas
ja
mov
ds
pop
aam
cmp
test
add
cld
gs
ljmp
mov
addl
addr16
sub
aam
pop
jnp
jae
dec
movsb
fldlg2
push
lock
cli
xchg
mov
shlb
lods
add
or
push
push
pop
xchg
into
and
mov
mov
out
ds
dec
fiadds
lds
decl
hlt
mov
adc
adc
pop
xchg
popf
in
mov
cmp
rcll
movsb
aaa
pop
mov
push
or
xor
jo
lcall
push
jae
cmp
shll
insl
or
jecxz
add
enter
sbb
cli
repz
out
or
pop
cmp
or
sbb
lock
mov
add
mov
inc
and
fs
push
pop
xor
mov
int
into
stos
mov
fcompl
test
in
pop
sub
push
mov
mov
cwtl
adc
lods
sub
hlt
xor
lret
stc
dec
sahf
ljmp
fcmovbe
mov
mov
jp
and
inc
push
lods
push
pop
pop
shlb
sbb
xor
cltd
sub
shl
pushf
sbb
dec
lods
xor
xchg
mov
fsubrl
repz
push
jg
add
int
sti
lods
or
pop
lea
or
push
pushf
shll
inc
cmpsl
data16
dec
jg
fcomps
nop
lea
fwait
aad
push
adc
mov
insb
pop
nop
mov
lcall
push
push
pop
lods
inc
shl
jno
ficoms
mov
pushf
cltd
lods
mov
jb
sbb
and
lds
movsl
test
adc
xchg
mov
ss
and
pop
lock
inc
pushf
ds
popf
push
bound
and
orb
cmc
stc
sub
pop
mov
nop
addl
jecxz
cmp
fs
movsb
mov
sbb
jg
mov
push
in
inc
cmc
movsb
push
xor
orl
sub
jl
test
lret
orb
push
adc
ds
dec
adcb
test
lea
orb
cmp
xor
sti
adc
sbb
jbe
adc
out
pop
shrl
push
repnz
xchg
cmp
mov
stos
divb
movsb
mov
and
cmp
stos
jne
adc
pop
setno
sub
rorl
jbe
xchg
jg
mov
bound
test
mov
lret
add
js
add
adc
ds
mov
xor
out
dec
xchg
xchg
imul
out
addl
gs
jecxz
outsb
repnz
add
mov
test
pop
jg
mov
cmp
addr16
mov
xchg
jne
adc
ja
xor
enter
mov
gs
ficomps
fdivrs
arpl
xchg
adc
mov
or
fisubrs
xchg
push
jns
fldenv
in
cmp
out
mov
mov
fadds
rcrb
xchg
add
sbb
loope
cmc
push
loop
mov
jmp
and
lret
cmpsl
ret
mulb
fsubrp
push
outsl
jg
loopne
aam
pop
or
int
popf
inc
cld
jmp
mov
imul
dec
loope
inc
shr
into
sti
cwtl
cmp
icebp
stos
repz
daa
or
fidivrs
aad
int3
xor
pop
mov
pusha
aad
push
stos
movsb
fldenv
xchg
hlt
lahf
out
cld
aaa
mov
rclb
jge
movsl
fcmovnbe
sbb
adcb
loop
or
int3
test
xlat
push
mov
cmp
and
fcmovnu
lahf
adc
pushl
stos
adc
xor
mov
movsb
inc
fidivrs
and
dec
call
repnz
sahf
and
pop
inc
stc
out
lcall
pushl
cmp
mov
mov
loopne
pop
or
movl
cmpsb
leave
and
dec
out
add
in
or
loopne
adc
out
repnz
jle
nop
clc
cmp
push
adc
repz
xor
std
movsb
adc
jb
cmpsw
ljmp
test
mov
add
lret
adc
dec
fwait
in
subl
ss
adc
ljmp
loopne
xor
xchg
dec
lret
and
ret
pop
les
ret
jmp
imul
shlb
call
xchg
xchg
adc
cmp
jl
adc
and
mov
fnsave
icebp
add
sub
jecxz
and
push
aad
mov
mov
mov
mov
call
mov
or
and
jle
in
cmp
faddl
pop
mov
pop
jae
sbb
sahf
sbb
lock
push
jmp
popf
ss
mov
pusha
inc
mov
dec
add
outsl
shll
add
idivb
loop
adc
lock
fwait
popf
jnp,pn
les
lahf
cmpsl
ds
cmc
sub
mov
or
js
test
in
push
clc
ret
push
adc
push
xchg
shll
and
in
xor
pop
aas
inc
add
add
aaa
inc
sub
jne
xor
fwait
xor
fldenv
andl
js
push
movsl
pop
sub
sbb
mov
sbb
out
push
mov
cli
rcll
inc
iret
lcall
stos
sbb
jle
xlat
adc
int3
push
cwtl
rorl
int3
jne
rep
push
push
push
push
inc
stc
out
scas
xchg
je
mov
adc
adc
mov
movl
lret
fs
pop
sbb
scas
mov
sbbl
mov
sbb
xor
cmpsl
pop
adc
popl
data16
jns
adc
pop
xlat
imul
sarl
mov
or
add
shr
xor
bound
mov
dec
lods
daa
scas
aaa
inc
stos
aad
and
test
mov
jnp
pushf
addl
cmovle
push
adc
xor
dec
sbb
out
mov
pusha
hlt
addb
add
cmc
and
popa
jbe
stos
add
cli
clc
lret
push
lea
mov
xchg
roll
dec
outsb
pop
shrb
mov
shll
sub
cld
test
push
fdivrp
pop
outsb
mov
int
xchg
sub
fdivrl
jmp
sti
filds
inc
cmpsb
pop
mov
mov
daa
std
push
call
bound
sub
leave
mov
lcall
outsb
out
push
orl
jmp
repnz
mov
int
cwtl
and
int
fistpll
loopne
jge
fldt
mov
xchg
adc
add
mov
or
mov
mov
mov
push
dec
outsb
testl
lret
lods
mov
dec
in
pop
mov
sbb
push
jo
rep
push
ret
pusha
sub
or
aaa
sti
bound
dec
lds
mov
xchg
cltd
aaa
adc
push
cmp
idivl
sub
jmp
push
adc
bound
push
mov
lods
and
mov
xlat
lds
js
rcl
push
dec
in
push
lahf
mov
sub
and
mov
cld
pop
mov
mov
in
dec
xchg
inc
mov
imul
add
mov
sarb
inc
fdivrl
add
imul
xor
sbb
rcrl
mov
fistpl
mov
jbe
cld
dec
mov
sub
dec
daa
jns
stos
cmp
mov
push
test
pop
or
mov
clc
add
arpl
push
mov
sarb
rcrl
sub
dec
int
fcoms
popf
loop
mov
add
loope
pop
gs
pop
clc
aad
jno
cmp
lcall
mov
jb
push
ljmp
pop
shr
ljmp
pusha
call
add
scas
adc
mov
adc
pushf
inc
stc
test
fmuls
sbb
pop
sahf
nop
jb
aaa
jle
lds
xor
notb
lahf
jecxz
pusha
fwait
inc
cli
dec
and
push
adc
movsl
and
jb
sbb
dec
out
add
int3
lds
lahf
repz
mov
push
fildll
xor
jnp
dec
xchg
pop
mov
lods
ljmp
xchg
sub
sub
dec
inc
push
stos
cmpsl
pop
jecxz
and
pop
xchg
sarb
dec
jo
dec
sub
sub
or
push
lahf
aas
xchg
nop
popa
cld
dec
dec
lea
cmp
je
pop
push
repnz
fstp
test
ret
mov
pop
leave
push
sbb
add
ds
inc
jo
outsb
inc
imul
jnp
into
cmpsb
in
fwait
jno
pop
loopne
push
imul
stos
cwtl
mov
js
in
notl
jne
dec
mov
lods
and
cltd
lcall
enter
jecxz
icebp
inc
and
adc
inc
jno
dec
insb
insl
jmp
ja
xchg
test
test
ret
faddl
jecxz
xchg
fs
dec
jne
lcall
and
jb
iret
xchg
sub
pushl
mov
fidivrs
cmc
xor
insl
adc
movsb
lods
cwtl
push
scas
sub
push
push
xor
pop
cmp
sbb
data16
xor
push
out
mov
inc
pop
add
sti
mov
inc
mov
push
vsqrtsd
dec
inc
std
clc
repz
mov
ss
fstl
push
xchg
shll
push
into
cmp
xchg
inc
stc
mov
imul
ss
inc
sbb
loop
push
jl
inc
xchg
ret
cmp
es
and
lds
mov
sub
push
test
jmp
aaa
xor
cld
inc
popf
push
xchg
mov
in
cmpsl
out
jbe
and
inc
jecxz
stos
jbe
xchg
sbb
sub
lds
mov
dec
sti
push
dec
cli
divb
lods
in
ffree
jae
cmp
bnd
stos
test
ja
inc
rcll
jb
sub
sbb
leave
mov
pop
sahf
mov
pop
fs
and
cmp
push
sub
pmulhuw
ss
inc
inc
pop
push
movsl
mov
lcall
jg
jmp
mov
pusha
bound
repz
xor
cltd
fwait
daa
in
insb
xor
dec
jbe
xor
xchg
mov
xor
je
pop
pop
sub
xchg
nop
mov
xchg
scas
mov
cmp
rcl
mov
js
and
push
jl
mov
outsb
dec
push
iret
subl
test
nop
ds
andb
pop
xor
dec
xor
jl
loop
adc
mull
mov
fdivrs
mov
dec
pop
paddusw
sar
xchg
ret
rorb
push
outsb
iret
movsb
int3
or
mov
jb
aas
dec
xchg
xchg
jge
jbe
sub
int
movsl
xchg
sub
dec
mov
ja
mov
jl
xchg
js
mov
ret
or
mov
mov
sub
movsb
in
dec
repnz
or
lret
push
sbbl
inc
fsubr
lds
jmp
cltd
mov
push
adc
xchg
loopne
pop
xchg
push
test
movb
fildll
adc
lods
jp
adc
ds
jae
scas
mov
mov
or
sub
jb
cmp
xchg
lret
pop
icebp
xlat
es
xor
loope
mov
fincstp
cpuid
lcall
fadds
xor
xor
movsb
add
jl
add
sbb
cmpsl
cmpsb
sbbb
aas
sbb
xchg
out
sub
and
dec
lret
jecxz
rclb
or
xor
jno
addb
nop
dec
jnp
insb
pop
push
ret
pop
sbb
hlt
sbb
mov
cmp
adc
jle
pop
jne
mov
dec
out
dec
testl
push
cmp
mov
insb
repnz
and
test
fists
dec
mov
bswap
push
mov
sarb
or
xlat
adc
jnp
stc
jmp
orl
loopne
dec
ss
ss
outsb
dec
mov
ret
and
movsb
or
sbb
lret
jbe
aam
rcrl
xchg
and
mov
andb
cwtl
repz
lea
pop
test
movsl
lods
call
fldl
aaa
subb
pop
lds
pushf
push
cmp
sub
sbb
outsb
or
xchg
dec
dec
mov
adc
jae
test
and
sub
scas
testb
cld
bound
hlt
cli
push
pop
pop
pop
jmp
lcall
sbb
test
scas
push
xchg
mov
out
mov
mov
push
cltd
ljmp
ja
es
lock
lods
inc
mov
dec
aas
fldl
int3
jp
xlat
lock
in
in
out
jle
scas
pop
jg
cmp
dec
and
in
and
jnp
or
dec
fcomps
inc
jl
lret
mov
imul
fldl
scas
xchg
repnz
jle
pusha
add
sbb
jle
pop
inc
dec
insl
mov
push
jne
lcall
test
pop
mov
xchg
stos
cld
cld
imul
adc
inc
cli
adc
cmpsl
test
dec
or
dec
test
jns
imul
out
movsb
or
pop
add
lret
pop
std
cmp
xchg
add
daa
fildll
jb
out
loope
call
xchg
mov
xchg
inc
rcrb
and
lock
dec
jns
mov
nop
pop
cmp
pop
fiadds
and
in
mov
test
out
dec
push
sub
popa
add
repnz
mov
mov
roll
lahf
lds
push
jns
sub
add
cmp
pop
fstpt
pop
and
enter
and
jne
nop
add
and
sbb
fcompl
jg
sub
mov
repnz
inc
mov
mov
lea
filds
subb
sahf
pop
push
fldt
mov
cmp
mov
inc
popf
mov
insb
push
pop
mov
jmp
int
jle
mov
jb
push
out
leave
in
ja
adc
rcrl
cs
stc
fsubrl
add
lahf
lcall
pop
mov
lret
das
cmp
mov
inc
test
mov
mov
js
mov
pop
dec
xchg
jbe
jecxz
dec
dec
jle
push
outsl
push
xor
cltd
lock
lds
sti
mov
mov
pop
jae
aaa
popa
or
aaa
outsb
mov
aas
lods
push
pusha
and
push
mov
xchg
jno
mov
inc
lock
sub
aas
xchg
add
in
das
pop
movsl
ss
and
xchg
loopne
call
and
inc
xchg
addr16
sub
or
clc
push
inc
pop
adc
xor
bound
xlat
jmp
sbb
mov
leave
mov
fistpll
bound
stos
cmpsl
fcomps
sbb
adc
pop
imul
pushf
test
mov
pop
dec
xchg
out
pop
cs
lds
mov
add
cmc
ja
lahf
sbbb
add
push
push
add
test
cli
pop
popa
aaa
pop
or
and
fidivl
and
xchg
inc
mov
sub
in
stos
push
fldcw
test
mov
fisttpll
lahf
jb
bound
jo
rclb
or
add
jp
andl
pop
cmpl
add
popa
adc
xorb
fiaddl
dec
nop
mov
add
mov
lahf
mov
loope
mov
mov
jmp
ljmp
std
cmc
clc
insl
in
cmp
pushl
xlat
push
xchg
divb
or
cmpsl
dec
bound
inc
repz
mov
in
cltd
mov
in
test
cltd
inc
xchg
and
scas
outsl
pusha
ret
sbb
fsubp
int
mov
jmp
ficoml
mov
cmp
push
stos
out
str
xchg
decl
add
adc
arpl
inc
pop
aad
fs
incl
call
add
cmp
mov
sub
and
jle
imul
or
mov
psubw
call
aas
xor
cmpsl
inc
push
loopne
dec
dec
aad
sub
cmp
out
push
insb
clc
paddsw
mov
or
data16
jmp
xchg
mov
push
jmp
leave
jle
mull
inc
mov
subb
jnp
std
inc
mov
test
scas
jl
cmp
pushf
adc
push
frstor
and
hlt
or
sbb
icebp
push
incb
stos
es
pusha
sti
loope
outsb
sbb
xchg
insb
sbb
shll
out
adc
inc
sbb
sarb
ficomps
sbb
iret
or
jge
imul
mov
xchg
insl
nop
cwtl
add
out
inc
jg
and
mov
shll
jnp
cs
inc
sbb
dec
xchg
push
xchg
pop
stos
xchg
push
adc
dec
or
mov
test
aas
orl
mov
out
sbb
mov
dec
fidivrs
mov
int3
fwait
in
mov
jae
xchg
pop
mov
mov
sub
jno
mov
adc
xor
inc
jns
ja
imul
sbb
es
mov
mov
ja
adc
ret
out
or
pop
icebp
sub
xchg
sbb
out
fsubs
test
std
lds
mov
pusha
std
xchg
jle
in
les
jae
sub
enter
jle
xor
ret
jno
adc
inc
insb
jmp
cli
xchg
fstps
cmpsb
sub
sub
mov
jbe
ja
seto
xchg
mov
sub
aaa
lock
movsl
insl
sub
push
pusha
orl
push
fdivrs
mov
adc
sub
cmp
popa
int3
xchg
inc
sbb
js
stos
jnp
jp
and
xchg
sub
pop
fs
fidivrl
lock
inc
or
push
jno
or
std
inc
sbb
mov
inc
mov
stc
sbb
in
or
popa
iret
xchg
jno
cltd
imul
and
push
mov
xchg
je
pop
pop
sub
pop
adc
mov
outsb
out
push
dec
popl
inc
scas
push
pop
lock
and
dec
adc
ja
std
popf
dec
cli
sbb
popf
push
das
mov
je
fisubs
dec
push
loopne
test
sub
xchg
push
cmc
test
sbb
mov
ficompl
popf
pushf
sarl
lret
lds
pusha
adc
mov
cli
pop
in
in
and
cmp
pop
xchg
add
aam
push
mov
xchg
and
bound
add
mov
hlt
fwait
pushf
insl
inc
adc
flds
fimuls
icebp
mov
inc
loopne
fldenv
dec
pop
mov
adc
jne
push
or
xchg
cld
cltd
jge
sub
add
ret
imul
fdivs
sub
jno
xor
xlat
xor
push
jecxz
mov
in
xchg
out
call
cmp
inc
mov
cmp
push
jmp
movsb
test
bound
addr16
inc
xchg
outsb
mov
push
mov
fs
lcall
cmpsl
mov
das
fisubrl
ja
imul
and
push
fldt
jne
add
xchg
loope
mov
cmp
and
cmp
testl
jg
test
push
xchg
xchg
icebp
shlb
inc
lods
mov
fistpll
jne
cmp
movsl
push
fildll
aad
daa
mov
js
push
movsb
lock
or
rol
dec
mov
or
mov
cmc
mov
lock
jge
ret
movsl
cmp
and
test
push
pop
jns
sbb
or
xchg
mov
adcb
add
hlt
sahf
add
push
and
xchg
sbb
inc
pop
les
push
fdivs
out
ret
mov
out
dec
dec
dec
fdivrs
imul
push
cmp
xchg
enter
adc
sub
add
and
stc
or
loop
lret
lahf
adc
inc
add
cwtl
sbb
lret
aad
lock
pop
lock
call
add
inc
cmc
dec
mov
icebp
xor
std
add
out
xchg
divl
das
push
fisubrl
xor
call
stc
xchg
ja
push
push
push
push
adc
ret
jge
mov
dec
je
nop
repz
ljmp
and
sahf
dec
mov
xor
fwait
jb
js
jg
and
in
shld
jle
or
adc
lock
xchg
out
jg
sub
push
xchg
dec
xchg
rcll
mov
mov
sbb
adc
mov
sarl
and
arpl
push
and
cmpsb
push
cmpsb
and
fadd
pop
popa
cmp
xchg
rol
sub
jge
adc
pop
add
inc
pop
add
repnz
test
cmc
dec
insl
sub
ret
jbe
dec
cmpsl
aaa
je
push
je
lret
std
ret
xchg
jb
scas
jg
in
hlt
in
repnz
ljmp
pop
outsb
push
addr16
cltd
or
imul
pop
fdivs
std
sbb
xchg
push
cli
aaa
pusha
pop
jecxz
popf
add
enter
std
inc
add
jbe
push
mov
loopne
shl
shlb
push
orl
push
das
xchg
dec
leave
shll
daa
in
int3
negl
or
xor
into
fisubl
imul
push
imul
sbb
mov
xchg
aam
lock
jns
xchg
push
ret
inc
aaa
repz
mov
mov
cmp
lahf
or
movb
scas
xchg
sbb
sub
xchg
xchg
stos
repnz
xchg
in
jo
push
xchg
outsb
lods
cs
dec
clc
sbb
dec
insb
fldcw
std
mov
and
inc
ret
movsb
and
adc
pop
icebp
insb
xchg
fmuls
xchg
js
imul
push
outsb
ljmp
or
daa
ret
cmpsb
adc
sub
inc
and
xchg
pop
sub
xchg
test
mov
push
or
or
nop
mov
mov
ret
cmc
vpcomq
orl
out
dec
jg
loope
sbb
into
xchg
test
je
lea
mov
pop
push
pop
sub
or
mov
icebp
adc
mov
push
ljmp
dec
inc
pop
imul
mov
push
mov
mov
cmp
xor
icebp
test
xor
or
int
hlt
in
jmp
arpl
adc
ds
rolb
and
mov
loope
pushf
lahf
push
sbb
sbb
mov
mov
add
mov
pop
sbb
sbb
cld
mov
mov
sub
xor
jnp
xor
jmp
ss
inc
mov
cltd
sub
stc
in
inc
cld
pop
in
fstpt
sub
jb
pop
push
pushf
mov
in
jne
dec
pop
popa
dec
mov
add
sbb
push
sahf
shr
dec
mov
out
sbb
or
mov
adc
fwait
push
mov
lret
enter
and
xor
pop
stos
notl
dec
sahf
lret
shlb
lock
or
loopne
je
fiadds
rorb
bound
push
jne
adc
add
outsb
push
inc
mov
or
in
not
mov
and
in
rcrb
fsubrl
fwait
addr16
xor
stos
mov
stc
lock
mov
enter
int3
mov
dec
shrl
push
mov
adc
and
daa
and
cmp
jmp
jge
add
sahf
dec
daa
ret
aas
insl
out
cmpsb
xlat
rcrl
sbb
sti
mov
sbb
adc
outsl
out
mov
cmp
ret
mov
lret
inc
pop
xor
xchg
sbb
adc
push
mov
outsb
mov
mov
mov
cmp
and
stos
jl
lds
mov
cmc
inc
adc
loope
dec
mov
mov
add
dec
mov
aad
fldt
sub
cmp
mov
stos
jecxz
adc
or
add
push
inc
int
sub
in
aam
in
mov
xor
mov
lcall
int3
sbb
jne
leave
jae
cmp
ds
push
negb
inc
lret
shll
cmp
mov
pop
jbe
or
lret
lea
outsb
cmp
jl
push
bound
dec
fldl2e
int
out
cmp
ljmp
cld
pop
push
mov
xlat
das
sti
mov
push
xchg
cmp
aas
lret
test
mov
jne
mov
sti
stos
dec
adc
ljmp
sahf
xor
inc
lods
out
test
lea
iret
pop
mov
dec
pop
mov
mov
sub
xchg
out
dec
cmp
jno
test
jns
mov
scas
adc
inc
or
in
bnd
dec
jo
and
adc
cmp
fcomi
inc
pop
mov
sbb
lret
inc
sbb
cwtl
adc
lcall
cmp
push
push
mov
cmpsb
push
and
in
dec
repz
scas
mov
inc
xchg
dec
imul
mov
out
fwait
push
popf
test
in
sbb
imul
mov
cli
adcb
lea
mov
scas
push
and
popa
xchg
test
dec
mov
insl
mov
in
repz
pop
jp
or
mov
or
sbb
xchg
movsl
inc
sbb
dec
dec
and
out
gs
pop
pop
aaa
fcmovnb
push
hlt
pop
mov
mov
rol
lcall
popf
xor
aam
or
add
mov
test
bound
scas
or
in
in
jns
jb
rcrl
cmp
in
mov
and
add
into
cmc
rcrl
sbbl
out
pop
inc
inc
mov
rcrb
jbe
sbb
mov
or
sbb
sbb
xor
mov
fistl
push
outsl
pop
pmaxsw
arpl
negw
ret
mov
inc
sti
loopne
inc
call
push
push
mov
mov
add
jnp
or
inc
or
sbb
jecxz
mov
cs
jae
mov
popf
fnsave
inc
jbe
aaa
sbb
add
mov
pop
pop
mov
jecxz
sar
aaa
mov
pop
iret
push
sti
xchg
fs
adc
mov
mov
out
pop
pop
ret
cmpsb
int3
iret
js
mov
cmp
jns
imul
