pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fdivrp
mov
add
push
insl
dec
insb
imul
add
imul
shrl
pop
pop
dec
and
add
xor
mov
jns
test
push
outsl
jb
out
lea
add
lods
fldt
mov
das
add
ss
mov
nop
int3
ss
inc
outsl
jne
insb
mov
pop
fcompl
xchg
jb
outsb
arpl
nop
in
push
or
push
je
mov
mov
push
or
push
imul
pop
push
fdivrs
imul
dec
xchg
and
jo
add
add
cmpsb
cltd
out
cld
cmp
cmp
adc
cmp
jg
sub
movsb
pop
push
dec
bound
arpl
pop
sbb
inc
jns
cmp
sub
dec
mov
popa
arpl
add
pop
inc
add
xor
dec
addl
jmp
adc
call
cmpsb
mov
mov
xchg
jmp
or
fs
add
push
out
ds
and
out
repnz
lret
test
mov
mov
or
jle
pop
cld
jecxz
or
outsb
fs
dec
popa
jns
sbb
push
inc
mov
dec
fnstsw
push
inc
popa
pop
push
imul
dec
add
push
sbb
psubsb
loopne
sbb
fcom
rcrb
fs
inc
int3
enter
inc
push
ror
mov
mov
inc
push
sbb
sbb
pushf
push
sbb
xchg
nop
mov
fs
inc
mov
cmpb
pushf
sbb
add
sbb
insb
fdivs
mov
sbb
mov
orl
aas
push
enter
add
mov
in
call
sub
je
movzwl
mov
aaa
inc
enter
pop
ret
pop
pop
andps
or
dec
jmp
inc
push
mov
cmpl
jne
push
fistpll
add
mov
test
jne
xor
pop
leave
mov
push
mov
mov
ret
lea
mov
mov
mov
inc
cmp
jne
mov
mov
adc
push
inc
add
scas
mov
mov
xchg
js
sarb
popa
xchg
mov
mov
mov
or
adc
out
sub
mov
push
mov
push
or
adc
ret
push
push
push
mov
mov
mov
fcmovnbe
out
rorl
pop
mov
or
lock
push
rol
jne
and
lea
or
inc
add
adc
or
mov
jmp
loope
mov
cmp
test
dec
lock
pop
pop
push
fidivs
pcmpeqw
cmp
jb
mov
add
call
out
loopne
int
bound
jne
mov
aaa
or
mov
cmpl
dec
ret
jmp
pop
mov
add
mov
sbb
cmp
orb
ja
pop
pop
sub
mov
lock
dec
sarl
or
jmp
js,pn
scas
sbb
sti
jne
sbb
nop
es
lock
lock
cmp
mov
negl
out
xchg
add
add
and
lock
mov
pop
clc
mov
test
je
mov
mov
int3
mov
adc
mov
push
and
lahf
loop
add
mov
sub
push
in
int
push
shrb
push
pop
sti
insl
mov
icebp
push
push
dec
popf
cmpl
in
aaa
movsb
and
mov
in
mov
sub
and
mov
loope
lret
mov
call
sub
mov
jae
out
ja
mov
ret
movb
cmp
ja
cmp
jnp
sbb
mov
sbb
cmpb
add
sbb
sti
mov
cmpsl
mov
adc
sbb
jg
sbb
push
mov
repz
popa
sbb
pop
push
adc
adc
dec
hlt
outsl
mov
mov
and
xor
add
add
sbb
add
lahf
xchg
sub
mov
cli
jnp
mov
jle
add
and
mov
cmp
or
comiss
aaa
or
jbe
scas
adc
sti
push
ficoms
pushf
adcl
dec
jmp
cmp
adc
andl
adc
ror
xor
jmp
or
ror
sahf
xchg
out
sub
or
mov
and
add
sbb
sbb
pop
add
adcl
rcrl
add
dec
std
xor
clc
mov
mov
aas
or
add
repnz
shll
cmp
jg
inc
xlat
mov
pop
mov
and
mov
inc
ds
push
jne
xor
push
pop
push
sbb
xchg
mov
je
sbb
and
sbb
lods
pop
push
inc
clc
nop
insl
pop
adc
jge
loopne
clc
dec
add
je
cmp
sbb
jle
sub
push
stos
mov
inc
mov
xor
lea
jle
jne
sub
sub
fcoms
or
pop
enter
lea
pop
sbb
cld
xchg
jmp
imul
jne
nop
cmp
ret
js
inc
cmpl
sub
inc
and
jo
popf
adc
fadds
xchg
and
sub
inc
mov
mov
mov
out
cmp
jae
mov
out
jo
fldcw
rorl
pushf
rcll
jno
pop
pop
test
je
imul
push
or
adc
add
loop
mov
jo
andl
and
push
push
xor
push
xchg
cmpb
and
add
sub
mov
and
clc
seta
or
das
mov
xor
jg
hlt
inc
cmp
add
jnp
add
loopne
movb
pop
pop
adc
scas
js
or
add
in
fcompl
xchg
push
xchg
test
and
repnz
mov
lock
iret
add
adc
shl
out
sub
mov
gs
or
je
arpl
push
mov
test
inc
jo
jl
loopne
pop
mov
jne
add
loopne
mov
or
dec
lock
jns
add
sar
test
cwtl
mov
jmp
sub
out
sti
sub
mov
and
imul
shll
dec
or
push
mov
cmp
mov
sbb
add
push
cmp
lcall
cmp
jl
movl
jb
adc
daa
add
or
or
mov
and
xorl
loop
ja
add
add
insl
or
push
or
pop
xor
push
rolb
insb
xchg
or
ret
push
test
decb
xor
push
sarb
or
ficompl
sub
ret
aas
aas
mov
add
je
mov
or
aas
pop
in
cmp
cmp
ficoms
add
mov
xor
add
jg
fildll
mov
clc
add
and
repz
push
test
bound
and
mov
pop
mov
movb
das
xchg
cmp
dec
xorb
into
jge
cld
jg
ljmp
sub
cmp
jge
mov
test
fucom
or
adc
xlat
add
flds
and
in
mov
mov
sub
lds
stc
add
dec
jae
lea
jnp
outsb
inc
scas
ret
or
xchg
xlat
aas
mov
iret
mov
mov
sbb
clc
jp
movb
aaa
imul
mov
call
nop
hlt
cmpsb
adc
mov
cmp
sub
cmp
inc
adc
push
pop
filds
jl
jl
mov
mov
jle
pop
mov
xchg
shll
inc
adc
fbld
mov
es
sbb
or
cmp
dec
xor
cmpsb
mov
mov
lock
mov
inc
cwtl
adcb
test
cwtl
or
push
push
mov
cmp
popa
outsl
cmpsl
lds
add
adc
and
push
push
setae
sub
pop
loop
sub
xorl
rorl
out
subl
add
ret
cmp
leave
ret
jl
loopne
loope
or
jl
icebp
fwait
mov
sbb
in
popa
pop
pop
or
or
inc
stos
pop
int3
lea
ret
pusha
or
dec
lds
sbb
cmp
aad
adcl
aad
jmp
xor
mov
add
imul
pop
push
jle
adc
ds
sbb
mov
pop
je
push
jmp
sub
push
jo
jne
sbb
pop
xchg
loop
pop
jle
jmp
jne
movsb
sub
cmpl
jo
pop
mov
add
dec
loope
sub
shl
repz
out
xor
cmpsb
roll
xchg
rol
aad
leave
jmp
repnz
jne
in
pop
mov
xor
push
pop
xlat
test
sarl
fwait
pop
jne
pusha
or
pusha
aad
je
sti
clc
stos
jle
inc
cld
and
adc
leave
push
push
mov
movsl
pop
mov
or
sti
mov
mov
test
jg
push
lods
pop
or
movb
xor
scas
shlb
push
or
js
mov
jmp
mov
jge
les
popf
or
clc
sbb
lcall
andb
jbe
jmp
test
fidivrs
sbb
jl
or
push
push
xor
jns
mov
inc
adc
arpl
call
push
adc
lods
sub
lds
push
sbb
mov
sub
jne
out
iret
mov
or
adc
add
mov
test
lock
add
test
ja
jmp
and
add
add
add
mov
or
loopne
push
or
test
jge
push
lcall
das
add
xchg
add
clc
cmp
or
in
andl
add
jb
dec
mov
adc
ret
sbb
or
es
cli
add
or
test
pushl
orl
jmp
mov
cmpl
clc
push
adc
or
adc
fnsave
and
cmp
pop
and
sbb
out
jle
add
out
js
sarl
jge
aad
push
jecxz
cmp
icebp
pop
mov
sbbb
addl
iret
notl
cmp
add
jge
jle
add
dec
das
negl
and
add
mov
sbb
mov
push
pop
test
testl
punpcklbw
mov
ja
sub
cmpb
jl
mov
iret
adc
xor
dec
js
jmp
inc
sahf
add
fwait
add
or
pusha
mov
test
sub
pusha
dec
add
push
hlt
sbb
sbb
cmp
fadds
mov
loop
sub
xchg
popa
sbbb
and
call
cmp
xchg
xchg
mov
add
push
mov
jno
fdivs
add
das
inc
mov
push
hlt
rcrb
movl
lcall
pusha
push
lret
push
add
ss
cmpsb
dec
pop
cmp
lock
ret
mov
fildl
lock
aaa
inc
adc
lret
xchg
dec
sbb
jbe
mov
dec
pop
cmpb
or
sarb
adc
or
stos
and
add
jg
xchg
inc
je
mov
test
je
std
add
sbb
enter
or
mov
outsb
jo
add
push
jmp
jne
dec
mov
shl
add
add
out
mov
lock
mov
dec
sbb
ret
pop
pushf
xorl
inc
pop
cmp
adc
mov
adc
xor
jg
push
fsubrs
mov
add
popf
jecxz
lds
dec
cmp
jp
js
test
push
jo
sti
mov
mov
mov
inc
sbb
lock
call
jg
jmp
push
push
clc
xor
inc
xor
pop
jne
and
cmp
xor
pop
mov
mov
ds
decl
jg
mov
sub
sbb
ret
sub
inc
pop
decl
fnstsw
sarl
mov
inc
rep
jmp
mov
fst
pushl
leave
jmp
mov
jmp
mov
cmp
xchg
pop
adc
das
ds
jo
mov
cmp
divl
je
mov
js
rep
xchg
inc
je
cld
aaa
inc
fdiv
lea
xor
std
xor
mov
ds
xor
add
mov
test
and
cmp
test
jnp
or
out
in
mov
jmp
cmp
in
pop
imul
shrb
roll
ljmp
call
mov
jl
ja
imul
fisttps
push
aas
cltd
outsb
cmp
cmp
jbe
mov
mov
inc
inc
test
ja
shl
pop
jp
jne
into
test
clc
iret
and
push
or
test
push
divb
push
push
jo
ljmp
aas
aaa
nop
jmp
and
pop
mov
add
outsl
neg
fiaddl
dec
jmp
mov
adc
nop
cmp
jb
cmp
fnstsw
sub
pop
mov
fldcw
sbb
pop
jae
fwait
pop
pop
loopne
mov
sub
dec
add
in
pmaddwd
loope
insb
or
fldcw
and
inc
jl
xchg
mov
adc
es
adc
data16
jg
dec
add
testl
mov
testl
data16
jge
loop
cltd
dec
add
cmpl
pop
movl
sub
xor
sub
push
sbb
mov
rol
push
fiadds
or
lea
push
cmp
adc
lahf
add
mov
push
push
push
cmp
jne
push
addl
push
rorb
jae
pop
es
push
push
inc
lcall
sarb
push
push
or
notl
lods
dec
sete
xchg
fdivs
scas
rcr
nop
sbb
test
nop
push
sbb
xor
or
adc
sub
js
jo
dec
je
add
test
ss
xchg
movl
enter
cs
add
push
ror
iret
dec
push
fs
jns
jle
fnsave
cld
cmp
inc
dec
sub
jno
mov
cmpl
mov
jge
dec
decw
dec
pushl
inc
les
out
sub
fmuls
jae
ja
xchg
push
aaa
hlt
lret
int3
into
mov
loop
rorl
repz
mov
jae
cmpb
push
xor
out
push
gs
pop
idivl
dec
jne
jmp
lea
xchg
xor
loope
sahf
push
cmc
push
push
cmp
out
jnp
pop
hlt
jmp
cmc
movsb
int3
je
pop
mov
dec
pop
mov
repz
xor
adc
pop
fcompl
xor
imul
dec
loopne
fnsave
leave
mov
lea
jl
adc
cmpsl
mov
roll
push
insl
cltd
lock
mov
cmp
push
dec
pop
xchg
fisubl
outsl
das
movb
out
pop
jo
cmp
cmovns
jmp
ud0
call
enter
jmp
cmp
jbe
jo
cmp
shlb
mov
pushf
dec
aas
push
sbb
push
in
and
andb
testb
xchg
lret
mov
ja
and
pop
adc
sbb
cld
adc
and
sbb
jmp
cmp
mov
ljmp
jo
xchg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
xchg
pop
clc
mov
inc
add
ret
sub
jbe
mov
jmp
mov
or
addb
dec
ret
lret
mov
inc
inc
and
cmp
imul
cmp
popa
add
push
shr
je
mov
mov
cmp
jne
pop
mov
adc
add
aaa
add
sti
jmp
std
or
loop
push
adc
loop
je
mov
cmp
jne
push
inc
pop
fdivrp
adc
add
adc
sti
ljmp
ja
cmp
jne
shr
shr
sbb
pop
push
mov
shr
or
ss
dec
dec
pop
cmp
in
or
ret
and
mov
cmp
jne
mov
dec
dec
and
pop
xchg
dec
sbb
ficompl
jnp
push
pop
ficoms
loopne
or
or
stos
adc
lock
pop
daa
push
sub
mov
xor
sahf
and
div
sti
xor
push
addb
outsl
jge
lcall
ud0
inc
mov
cmp
or
fnstcw
add
mov
adc
sub
mov
inc
dec
jne
add
ficomps
insb
sbb
mov
test
ljmp
data16
add
mov
push
inc
or
sti
std
sti
and
add
sub
js
lret
je
pop
je
xor
dec
and
div
roll
inc
and
add
sub
or
cmp
ja
std
and
ret
add
testl
dec
je
push
jmp
inc
xchg
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
filds
mov
cltd
jbe
movups
or
leave
jne
stos
aad
xchg
adc
testb
shrb
nop
mov
push
ja
sbb
mov
jb
pop
rclb
xor
std
js
test
and
sbb
pop
jmp
js
add
sub
cmp
jg
add
sub
push
test
pop
ljmp
jmp
add
pop
jmp
xchg
adc
add
aad
cmc
fwait
cmp
popf
stc
inc
jle
repz
mov
xchg
aas
push
sti
data16
pop
ret
and
test
jg
or
es
idiv
pop
loopne
stos
add
rorl
dec
lock
rolb
jmp
xor
add
mov
pop
jbe
xor
mov
push
out
imul
pop
jno
inc
je
inc
mov
dec
jne
pop
insl
mov
pop
cmp
stos
push
mov
inc
test
sar
push
sub
sub
leave
and
jmp
xchg
push
stc
jae
dec
je
adc
push
outsl
lea
ret
lea
fldt
mov
jne
cmc
call
pcmpeqb
iret
iret
icebp
leave
jmp
fisubs
inc
jg
jmp
push
xchg
jge
mov
pop
in
xchg
xor
sbb
jmp
mov
fcomp
stos
test
out
mov
jecxz
adc
in
pop
jns
add
add
inc
push
inc
pushf
or
ret
mov
adc
stc
leave
dec
adcb
sbb
imul
in
mov
adc
inc
mov
js
movsl
aam
gs
daa
sub
test
out
repz
test
mov
lds
mov
int
aaa
inc
jbe
imul
cmp
mov
mov
jmp
mov
js
inc
cmpb
xlat
fadds
outsb
xor
xchg
jg
das
mov
or
push
push
int3
into
sbb
rorl
mov
lcall
call
test
enter
movsl
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
incl
outsl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
call
stos
mov
cmp
or
mov
pop
out
sub
imul
idiv
das
pushl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
lcall
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
mov
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
call
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
cld
lret
jmp
mov
es
clc
pop
jne
push
pop
and
add
add
add
aaa
xchg
movzwl
je
inc
clc
lea
push
imul
mov
mov
repnz
iret
push
push
mov
int
mov
pop
hlt
push
addr16
add
sbb
andb
jg
lods
subl
mov
lcall
mov
pop
aas
or
xchg
mov
pushl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
aas
clc
push
lret
inc
push
push
dec
popa
jae
push
popa
insb
jne
pusha
aaa
data16
fwait
cmc
pushl
mov
add
ret
sbb
jo
xor
mov
inc
bound
lcall
cs
daa
mov
or
dec
cld
jne
dec
mov
xor
mov
out
jne
shl
inc
mov
cmpsb
inc
add
pop
out
je
xchg
dec
imul
js
pop
les
aaa
sub
xor
push
pop
in
add
outsl
test
mov
lock
cmp
aam
or
fs
lock
pop
sub
xor
and
loopne
push
clc
bound
mov
or
push
orl
jge
mov
xor
push
shr
dec
rep
pop
mov
mov
mov
sub
pop
fsubl
add
sbb
in
cmp
je
pop
mov
add
jae
pop
les
js
push
mov
mov
pop
sbb
cmp
push
imull
aaa
lods
mov
mov
mov
sub
js
ret
mov
sub
xchg
cmp
cwtl
jae
paddd
movntq
mov
jmp
jmp
les
clc
sbb
out
mov
sbb
jecxz
test
push
cmp
cli
lods
dec
jle
sub
sub
sbb
sub
cmp
mov
add
js
add
push
mov
push
dec
pop
lea
pop
xor
insb
cmp
xchg
xlat
dec
setne
mov
jecxz
add
add
add
mov
adc
xor
xor
jb
cmp
lret
repnz
fisttpll
or
jne
or
scas
mov
inc
fcoml
and
jg
inc
jle
mov
test
cmp
mov
rorl
pop
hlt
out
push
mov
leave
jne
mov
add
add
aas
cmp
or
movl
or
call
ret
pop
add
sub
mov
pop
cs
filds
xchg
add
jl
pop
jmp
out
mov
fimull
fildl
xor
das
mov
add
sarb
repnz
out
les
push
fiadds
push
in
dec
loopne
or
inc
pop
mov
pop
mov
mull
lock
xor
decl
sbb
adc
mov
jg
neg
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
add
mov
shll
sbb
jecxz
dec
cmp
fbstp
sarb
adc
jle
jne,pn
mov
repnz
sbb
xor
call
add
mov
push
push
push
arpl
hlt
xor
mov
adc
mov
mov
movl
or
jge
jl
or
pop
sub
push
mov
mov
push
inc
and
aam
pop
xor
adc
push
clc
sbb
pop
push
fistps
leave
jg
sub
call
cli
scas
cmpb
call
in
in
push
call
aaa
sarb
pop
push
popa
push
aaa
cmp
dec
repz
push
cmp
pop
into
das
add
sbb
mov
scas
or
jae
sti
fiaddl
mov
xlat
pop
push
push
and
incb
loop
leave
addl
or
jmp
or
mov
rolb
jnp
and
iret
mov
sbb
jecxz
cmp
adc
or
mov
cmp
add
mov
jecxz
pop
dec
fsubl
mov
inc
add
jne
cmpsl
in
cmpl
mov
adc
outsb
lret
in
push
daa
xchg
adc
test
mov
adc
cmpsb
cld
lahf
add
clc
inc
cmpl
je
popa
clc
cmp
dec
push
test
popf
int3
ret
adc
mov
cld
cmp
pop
ja
push
xor
loopne
adc
adc
repz
push
jns
lods
add
dec
add
out
push
stos
shl
sbb
push
sub
push
and
mov
cmp
mov
sbb
inc
movl
rolb
popf
cmp
dec
adc
cmp
les
rclb
push
jb
daa
je
dec
or
add
mov
cld
pop
cltd
inc
bound
cmp
or
push
pop
popf
pop
add
lds
mov
out
sub
lock
push
push
repnz
addl
jne
rorb
xchg
mov
jg
inc
inc
dec
mov
xchg
aam
je
jg
pushw
cmp
fdivr
mov
shll
adc
jno
outsl
inc
jmp
sbb
dec
adc
lahf
pop
push
cmp
adc
adc
push
or
es
mov
pop
adc
push
test
loopne
faddl
lds
lds
setl
cld
loop
or
cmpsl
test
lock
subb
loop
jg
rolb
adc
push
push
push
push
mov
sbb
stc
es
js
push
jnp
mov
sub
or
cmp
andl
testl
dec
xor
inc
and
aas
and
pop
mov
mov
cmc
lea
jae
mov
pop
ret
scas
lods
pop
and
xor
mov
lock
mov
xor
xchg
ret
imul
or
mov
add
std
jg
je
cmp
push
sub
and
cmp
pusha
add
sub
jb
je
jmp
cmp
neg
sub
adc
std
sbb
dec
cmp
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
or
lahf
xorb
mov
jmp
mov
or
sbb
or
cmpsb
pop
jo
pop
pop
inc
mov
mov
or
jbe
loope
jno
outsl
jp
mov
pop
test
mov
push
pop
inc
sbb
cli
into
shlb
mov
or
push
inc
and
lock
sub
leave
je
xor
push
cmp
mov
xchg
jecxz
ret
xor
loop
mov
movsb
fnsave
cmpsl
lock
enter
push
aas
mov
adc
sbb
cmp
cmpsl
add
incl
repz
cmp
jne
adc
mov
mov
jg
or
or
jo
lock
fdivr
and
mov
inc
fiadds
xor
and
jecxz
adc
cmp
or
mov
push
sahf
mov
fldenv
lock
mov
jne
mov
jl,pt
repz
add
sbbl
lahf
mov
movl
sbb
mov
andl
adc
mov
fsubl
movb
loopne
lahf
push
jnp
cmp
sbb
ret
sbb
add
pop
les
dec
jne
pop
pop
pop
inc
int3
jo
jbe
sbb
out
outsb
enter
inc
or
inc
cmp
cmpl
sbb
lock
mov
outsb
sbb
std
add
ret
mov
sbb
repz
mov
daa
mov
sti
mov
dec
out
mov
mov
mov
xchg
nop
adc
mov
push
and
inc
push
out
scas
clc
mull
imul
rolb
sbb
out
aad
jge
ja
add
or
pop
leave
aas
push
fisttps
jg
clc
push
cmpw
mov
cld
or
loop
cmp
test
push
push
pop
cs
add
inc
inc
adc
ret
mov
ss
push
sub
or
cmc
clc
pop
or
addl
dec
cmpb
subl
aas
adc
pop
mov
call
and
dec
and
xchg
xor
or
jne
call
add
xchg
arpl
add
roll
cli
pop
lods
push
or
push
nop
sbb
jns
mov
jno
or
push
insl
inc
pusha
pusha
fiadds
lahf
or
jo
xor
sub
cli
in
test
mov
mov
push
mov
sbb
xor
ret
pop
push
xor
loopne
mov
dec
popl
push
rolb
push
xor
push
scas
adcl
or
je
push
adc
cwtl
pop
pop
ja
add
lods
lret
decb
pop
pop
arpl
bound
stc
cmp
inc
and
cmp
andb
in
js
jmp
pop
mov
push
mov
push
xchg
rolb
test
sbb
sbb
adc
jo
mov
dec
jl
lock
clc
std
in
test
adc
movl
push
or
dec
sbb
sahf
dec
and
inc
jg
repz
xor
jns
push
pop
dec
fidivrs
jmp
ja
xchg
adc
iret
insb
rclb
loop
xor
jle
push
add
loopne
push
add
addr16
add
lret
pop
and
movl
aaa
mov
sysret
cmp
stc
mov
and
aas
mov
xorl
outsb
mov
cmp
lea
icebp
adc
shl
or
sbb
aaa
mov
sahf
add
mov
cmp
cld
fdivrs
filds
jmp
lea
cmp
sbb
jb
mov
ss
jne
mov
pop
sub
test
push
fistpl
mov
mov
sub
pop
jge
xor
adc
push
mov
loope
sbb
mov
nop
in
pop
add
or
xchg
jg
mov
add
sbb
call
jg
mov
pop
sub
jmp
push
cmp
xchg
mov
popa
and
pop
pop
or
or
out
mov
std
data16
in
add
add
inc
xchg
nop
push
push
in
pop
add
xor
scas
rcl
add
pop
pop
xor
pop
mov
add
mov
mov
add
cmp
jl
pusha
sbb
lret
shr
stos
lds
inc
pop
push
aas
inc
icebp
jo
into
je
mov
xchg
push
cld
add
cmp
pop
and
negl
mov
adc
mov
sub
jae
out
popa
cmpb
clc
int
cmp
je
cmp
mov
jle
inc
sub
push
mov
cld
add
je
mov
outsb
addr16
mov
cli
lds
push
sbb
std
cmp
xchg
mov
mov
jmp
in
or
jg
xor
jp
pop
pop
xchg
adc
or
sub
cmp
pop
sub
add
cmp
gs
dec
jne
mov
mov
adc
jge
and
aaa
add
dec
jmp
sbb
push
adc
push
mov
pushf
sbb
lock
out
into
pop
dec
jne
mov
adc
add
scas
lds
lea
jmp
xchg
outsl
pop
xchg
jecxz
cmp
add
imul
mov
xchg
adc
orb
cmp
andl
adc
and
jbe
or
and
jmp
aam
jp
inc
xor
rcrb
cmc
lods
pop
add
add
push
xchg
cmp
jno
pop
xlat
push
mov
cmp
fstpl
loope
inc
int3
push
cmp
daa
pop
mov
out
cmp
call
mov
es
jl
cmp
loope
cmpsl
lock
sub
mov
rcll
pop
sbb
jmp
inc
cmp
and
push
mov
cmp
js
dec
jl
sub
mov
mov
mov
mov
add
lea
inc
dec
movsb
addb
push
pop
cli
mov
outsl
scas
push
sahf
cltd
mov
push
mov
addr16
fidivs
cmp
adc
imul
add
gs
cmp
incb
mov
lea
lock
push
add
mov
shr
add
xchg
dec
cld
push
insb
dec
js
mov
inc
and
scas
cli
jae
adc
adc
push
mov
in
pop
aaa
fisttpll
arpl
add
mov
ret
cmp
adc
push
out
and
sbb
insb
rorl
das
loopne
add
sub
mov
jo
in
jmp
out
pop
lock
arpl
cli
pop
cmp
add
icebp
pop
jg
fisubrs
dec
enter
jmp
and
mov
fxch
push
pop
push
mov
xor
sbb
rcrb
stos
test
loopne
mov
sbb
mov
ret
push
jecxz
loope
inc
fcompl
mov
dec
push
push
cs
push
jns
push
pushw
push
sub
mov
or
sahf
nop
int
push
cmp
call
ja
scas
mov
sahf
imull
add
in
adc
daa
cmp
aam
pop
pop
call
jle
rolb
inc
push
sbb
shrb
loopne
dec
ficomps
or
dec
push
loope
xor
das
int3
mov
xor
mov
push
sbb
add
xor
pop
mov
add
xchg
sub
sub
push
push
ret
nop
inc
xor
lock
pop
data16
loopne
cmp
push
cvtps2pd
or
enter
idivl
add
xor
sub
inc
jo
mov
jge
pop
dec
cmp
xchg
sbb
dec
pushf
lcall
sub
cmp
push
lods
add
or
dec
or
lea
daa
adc
mov
cltd
cmp
fnstsw
loop
adc
xchg
xchg
cmp
les
adc
popf
inc
pop
inc
sub
pop
mov
dec
add
dec
add
or
xor
adc
inc
mov
jg
nop
es
fcoms
fimuls
out
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
cmpb
je
cmp
adc
rcrb
cli
cltd
clc
jmp
outsl
jns
inc
adc
or
adc
jmp
subl
push
or
data16
rorl
cmp
pop
jmp
cmp
or
xor
or
into
add
jmp
leave
inc
pushf
cltd
xlat
or
push
divl
push
pop
call
or
ret
mov
dec
push
xor
and
sarb
fcomip
mov
and
test
int
or
and
mov
outsb
cmp
addr16
cmp
cld
push
or
push
loop
sub
jmp
xor
pusha
orl
jmp
test
fsubrp
fdivp
test
icebp
jmp
je
or
sbb
shll
daa
xchg
in
fdivrl
adc
xor
mov
sub
roll
outsl
jp
push
shl
add
inc
pusha
in
or
sub
les
sbb
or
xor
xchg
sbb
push
je
nop
and
sbb
or
test
adc
pop
loop
jg
inc
add
cld
adc
rolb
pop
add
sarl
add
xor
subl
dec
pop
sbb
jo
ja
xor
in
cmp
mov
pop
icebp
push
or
jo
wrmsr
lret
jno
cmp
jb
mov
imul
adc
adc
jge
adc
pop
jns
lea
mov
jbe
test
mov
sub
or
rcrb
cmp
cs
dec
pop
or
mov
and
push
sbb
aas
and
fiadds
dec
dec
jne
pop
jecxz
shrb
inc
push
das
pop
pop
out
cmpb
in
inc
push
nop
inc
inc
sahf
popa
jge
pushf
sub
or
xchg
in
or
dec
jne
sub
mov
shrl
daa
adc
shll
cmp
cmp
shrl
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
mov
cmp
add
in
lret
mov
es
adc
inc
sub
cmp
pop
test
nop
test
inc
cli
cmc
les
js
xchg
xchg
outsl
push
push
xor
sbb
or
xor
mov
test
ss
call
into
outsb
dec
call
pushf
mov
js
les
inc
mov
xor
push
inc
das
rcl
jg
cld
mull
mov
pop
fs
add
dec
adc
push
jle
pop
pop
ret
push
xor
pop
daa
mov
or
jne
std
sarl
jns
neg
negl
add
in
xor
fincstp
fildl
loope
mov
pop
jb
not
loopne
rcl
rcl
cmp
jb
or
cmp
jb
sub
sbb
inc
loop
pop
test
and
jecxz
cltd
pusha
xor
negl
daa
pusha
inc
cmpsb
pop
icebp
mov
xchg
shlb
xchg
cli
repnz
xchg
cmpl
cli
fisttpll
or
xchg
shr
setl
mov
orl
test
adc
test
jge
xchg
sarb
outsl
jg
fiaddl
inc
sbb
mov
mov
jge
data16
in
in
push
sub
mov
mov
sarb
std
adc
and
jge
add
pop
or
scas
mov
pop
dec
mov
sbb
in
lahf
mov
add
dec
or
iret
inc
jmp
mov
pop
sbb
inc
jne
cmp
push
dec
pop
inc
cmpb
mov
pop
add
stos
loopne
sbb
inc
jmp
cmp
jne
mov
inc
and
sub
add
sbb
pop
je
es
data16
add
sub
mul
pop
jo
pusha
test
jb
cmpxchg
xchg
stc
push
jb
out
dec
repnz
clc
sti
and
jmp
sbb
jmp
or
or
cltd
or
cld
jb
jmp
jl
and
push
std
mov
jmp
jg
mov
cltd
out
inc
lods
jle
adc
movsb
or
add
mov
adc
push
call
and
leave
inc
fcmovb
rcll
or
arpl
push
xor
push
loopne
lock
inc
xorl
sub
dec
inc
push
sub
or
adc
cs
jg
inc
sub
addb
jmp
pop
mov
add
je
and
xchg
add
pop
fsubl
add
dec
dec
jno
in
rorb
pop
roll
lea
cli
imul
aaa
test
push
xchg
mov
dec
push
ja
stos
and
loopne
repnz
jmp
add
jg
xlat
inc
xor
pop
mov
dec
ss
lods
fsubrs
dec
pop
outsb
lock
pop
mov
push
cmp
inc
add
pop
push
add
jecxz
jae
or
xor
nop
in
fcomip
dec
imull
dec
in
sti
adc
in
cmp
je
add
push
call
cmp
jne
mov
cmp
jge
iret
nop
add
bts
mov
mov
sub
add
div
mov
jmp
decl
stos
jl
jo
inc
jne
lret
in
xchg
jge
out
mov
sub
mov
push
in
test
sbb
pop
inc
push
adc
movsl
pop
jecxz
jl
dec
push
dec
push
loope
lods
rcll
add
setl
and
push
lock
enter
flds
ret
cmpsl
loope
cmpl
add
cltd
or
xchg
dec
lods
aad
clc
jno
and
inc
cmp
iret
xor
hlt
lea
das
test
enter
mov
cs
cmp
add
outsl
addr16
sbb
out
fdivrs
dec
push
ja
xchg
mov
rol
mov
sar
outsb
push
mov
jmp
mov
mov
add
mull
pushl
icebp
ds
cltd
clc
inc
xlat
cmp
jle
lds
xor
jle
fs
inc
orl
adc
xchg
loop
daa
ljmp
loope
rcll
cwtl
imul
jge
add
add
xor
sub
dec
push
xchg
repnz
cmp
ret
jmp
mov
inc
fldl
clc
jp
and
adc
sub
xchg
out
decl
jne
pop
daa
les
xchg
aad
adc
push
imul
pop
jnp
mov
js
jge
scas
jecxz
pop
sbb
adc
dec
dec
addr16
das
push
push
push
mov
incl
movsl
pop
pop
fwait
inc
push
fwait
jg
data16
in
sbb
cmpsl
xchg
dec
test
aam
lcall
push
add
bound
xchg
mov
fdiv
insl
jnp
jne
and
test
rorl
les
dec
pusha
imul
sbb
add
cmp
rcrl
and
or
or
aas
dec
dec
mov
lret
jecxz
jmp
les
jmp
add
cmp
jne
cs
mov
or
add
mov
pop
insb
xor
adc
push
and
and
or
and
pop
test
xor
call
adc
mov
mov
pushf
cld
dec
negb
cmpb
cmp
js
pop
mov
test
lret
cmpb
xchg
mov
adc
dec
daa
and
in
in
jne
ficoml
sub
lea
mov
sub
fnstenv
sub
sbb
dec
jg
gs
fistl
imul
jns
ja
out
and
xor
fistpll
lea
cmpsl
inc
cmp
test
arpl
sbb
ret
dec
push
push
mov
shlb
sahf
test
inc
test
jmp
jne
imul
gs
xor
cs
insb
jbe
gs
std
pushl
outsb
addr16
popa
je
dec
popa
insl
gs
outsl
loopne
mov
sbb
fadd
fucomi
sbb
inc
out
and
push
dec
xchg
popl
bound
movsl
orl
ja
xchg
adc
leave
inc
sub
ja
mov
insb
call
out
inc
clc
cwtl
imul
xchg
cmp
cmp
pop
repnz
xchg
pop
jnp
popa
inc
aas
fidivs
adc
and
popf
push
add
fdivp
lods
repz
test
je
cmpb
repz
test
or
adc
sarl
imul
dec
cmpb
stos
xor
cmp
jne
adc
inc
jo
dec
aam
sub
sbb
dec
lahf
push
or
push
mov
push
je
das
outsl
bound
push
xchg
repz
cmc
add
test
mov
ja
arpl
les
inc
mov
jae
cwtl
pop
in
xor
jg
dec
inc
pop
or
push
jle
les
rolb
lea
cmp
mov
fcomps
and
pop
mov
add
jbe
add
faddl
jp
jp
loopne
mov
sbb
mov
fadds
scas
sar
icebp
mov
mov
dec
or
fldenv
adc
mov
mov
scas
cmp
arpl
mov
sbb
or
mov
jne
or
sahf
ljmp
int3
xor
mov
test
push
xor
inc
cli
push
clc
ss
mov
cmp
jno
pop
and
jmp
mov
or
adc
push
cld
jne
lcall
ljmp
add
add
mov
sbb
push
sahf
ret
loope
or
xchg
dec
push
inc
push
and
jnp
lahf
je
sbb
xchg
mov
xchg
push
push
mov
pop
pop
test
sub
pop
xchg
xor
out
inc
jo
mov
pop
pop
ret
sbb
and
push
xchg
push
movsb
pop
cmp
sahf
ret
sub
cmp
mov
mov
or
mov
sbb
lret
js
cltd
add
sub
push
ja
cmp
hlt
mov
js
inc
jl
adc
ret
push
fsubr
dec
cwtl
jp
xlat
pusha
mov
push
or
add
mov
inc
adc
movzwl
inc
cmpl
cli
jg
push
mov
inc
jmp
cmp
pop
add
pop
out
out
inc
cld
ja
fcmovb
jmp
or
mov
adc
and
sbb
mov
and
lret
add
jmp
popa
add
dec
popa
rolb
scas
dec
add
dec
or
cmp
jb
or
out
loopne
cmp
or
xor
or
dec
jbe
pop
add
adc
push
fidivrs
jb
lea
ret
jp
or
lock
std
mov
cltd
dec
lret
lock
push
packssdw
sahf
or
xlat
pop
test
sub
mov
pop
cld
inc
test
je
or
scas
loope
and
sbb
mulb
je
cmp
adc
add
adcl
mov
cmpsb
notb
push
loope
or
mov
pop
lea
dec
dec
cld
mov
cltd
push
shl
fstl
or
inc
fwait
xlat
or
xorb
mov
or
movl
pusha
jnp
inc
mov
ret
xor
scas
sbb
sbb
out
xorb
sbb
or
jb
inc
mov
out
in
add
fchs
addr16
les
cwtl
mov
rol
inc
fisttpll
adc
insl
xorl
xor
lret
adc
xor
cmpsb
notb
jbe
pop
or
bound
xorb
or
mov
aad
sbb
into
add
stos
add
sbb
test
push
imul
jnp
dec
cmp
test
and
adc
and
adc
mov
and
inc
in
jns
mov
outsl
inc
lods
inc
adc
hlt
cmp
fs
xor
push
mov
mov
mov
sbb
fwait
pusha
jge
push
add
dec
repz
adcb
cmp
xor
pop
aas
enter
push
lock
push
cmc
and
push
fnsave
push
in
xor
and
rorl
daa
xchg
jae
mov
cmpl
popf
jo
enter
mov
in
out
fisubrs
add
insl
out
mov
sbb
call
cltd
push
sub
enter
fwait
stos
mov
clc
subl
add
or
add
gs
xor
loopne
and
inc
mov
push
mov
enter
push
cmp
adc
loop
dec
sarb
in
jecxz
mov
xchg
add
mov
insb
cli
stos
in
pop
insb
sub
clc
add
icebp
push
jmp
imul
jmp
nop
cmp
sbb
mov
jg
mov
sahf
jmp
and
rcrb
push
push
pop
pop
xchg
pop
inc
xor
nop
arpl
or
and
out
fadds
sub
mov
mov
sub
pushl
and
leave
jne
mov
jns
inc
mov
lret
add
mov
inc
push
and
ret
mov
xchg
test
subb
in
mov
mov
lods
sub
mov
loopne
imul
mov
pop
jo
jl
xor
stc
adc
pop
jmp
cmpsl
ret
jle
lock
sarl
inc
cmp
dec
iret
push
or
pop
addr16
or
add
push
add
inc
add
xchg
into
mov
add
push
or
popa
insb
jb
pmulhuw
je
mov
ss
add
cs
aas
add
inc
je
or
push
gs
aaa
gs
inc
and
es
imul
popa
bound
inc
push
outsl
arpl
mov
gs
jne
je
dec
outsl
je
imul
mov
fistpll
imul
arpl
or
fistpll
or
xor
cld
pushl
push
outsl
insl
bound
outsl
js
imul
ja
nop
sub
out
popl
sbb
outsb
dec
inc
xor
loopne
rclb
add
push
sbb
enter
inc
inc
daa
xchg
movsb
add
pushf
cwtl
xchg
loopne
and
mov
cmc
or
add
rolb
and
mov
nop
pop
mov
enter
je
or
js
and
or
jo
push
fs
pop
orl
pop
push
push
dec
or
enter
inc
xor
and
and
and
sbb
or
enter
or
or
and
add
sbb
in
cld
add
hlt
fs
inc
push
lock
call
in
faddl
sbb
rolb
sbb
enter
fs
inc
mov
inc
push
mov
test
nop
inc
push
movsb
mov
sbb
sbb
test
sbb
jl
je
fs
inc
jo
push
fs
pop
leave
inc
push
sbb
mov
dec
push
xor
mov
les
sbb
mov
inc
push
mov
test
inc
push
sbb
fs
xchg
nop
push
sbb
mov
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
sbb
cmp
xor
nop
inc
push
xor
nop
inc
push
sbb
sbb
push
sbb
adc
sbb
or
xor
leave
inc
cld
add
hlt
enter
lock
call
in
faddl
aam
int3
or
enter
shl
and
nop
inc
push
sbb
sub
inc
push
sbb
xor
sbb
sbb
sbb
adc
fs
inc
adc
jb
inc
push
add
cld
push
and
lock
in
call
enter
aam
fsubs
adc
mov
sbb
sarb
mov
sbb
test
mov
pushf
cwtl
xchg
fs
inc
push
nop
mov
test
fs
jo
sbb
push
nop
inc
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
enter
or
and
add
clc
hlt
lock
inc
push
sbb
call
fs
fadds
sbb
ror
enter
inc
sarb
mov
inc
push
sbb
mov
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
fs
inc
cmp
fs
inc
push
sub
and
inc
push
sbb
sbb
inc
push
sbb
or
sbb
add
cld
add
enter
hlt
lock
in
call
xor
jle
xor
aam
movzwl
shl
or
cltd
cmp
repnz
adc
sbb
pop
cmp
pop
nop
aaa
jnp
push
and
je
insb
inc
fisttps
nop
xor
or
sar
scas
push
aad
mov
jg
or
push
pop
daa
fstpl
cmc
mov
or
stc
mov
subb
das
movsb
ret
or
loopne
ds
and
pop
dec
cld
int3
cmpsb
int
pop
cmp
mov
mov
push
adc
sbb
and
jns
cmp
out
cmp
pop
movsl
aas
sbb
pop
stos
ret
nop
scas
add
mov
and
push
inc
mov
pusha
and
or
frstpm(287
sbb
push
mov
sti
xor
mov
push
aad
pop
push
sbb
iret
xchg
pushf
push
mov
imul
cmp
xchg
fdivrl
inc
pop
or
inc
repnz
sub
gs
mov
and
push
dec
inc
inc
mov
outsl
jbe
pop
push
and
dec
pop
inc
push
dec
pop
mov
pop
pushf
and
mov
push
push
pop
sub
push
inc
pop
mov
dec
dec
dec
inc
push
das
addr16
dec
js
jp
push
xchg
into
js
lock
push
sbb
repnz
sbb
cmc
div
fs
inc
push
clc
stc
cli
nop
inc
push
sbb
cld
std
inc
push
sbb
loopne
sbb
loop
in
fs
inc
in
out
nop
inc
push
call
push
sbb
in
in
inc
push
sbb
rolb
sbb
rcl
aam
fs
inc
aad
xlat
fs
inc
push
fcomp
ficoml
inc
push
sbb
rolb
fs
rol
les
fs
inc
fs
inc
push
enter
inc
push
sbb
int3
int
push
sbb
mov
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
push
sbb
sbb
mov
mov
fs
inc
movsl
cmpsb
cmpsl
fs
inc
push
test
stos
nop
inc
push
sbb
sbb
nop
push
sbb
xchg
xchg
xchg
sbb
xchg
xchg
xchg
dec
aad
push
cwtl
cltd
decl
popf
jge
cmp
dec
jl
jge
clc
fcmovne
jl
or
push
inc
imul
nop
or
inc
pop
xor
push
dec
jbe
pusha
pusha
aaa
push
arpl
push
inc
loop
mov
cld
fisttps
gs
imul
jge
add
js
fmull
dec
push
and
push
ds
rcl
scas
xchg
jge
inc
inc
bound
je
in
cmpsl
lahf
sbb
das
adc
dec
pop
mov
loopne
popa
jo
nop
dec
jg
ds
mov
jle
inc
dec
jne
dec
dec
gs
loopne
int
imul
mov
xchg
shrb
test
fisttpl
mov
cld
scas
cld
add
pop
daa
add
das
mov
mov
scas
ds
mov
fidivl
mov
sbb
inc
xchg
sbb
cmpl
outsb
push
imul
fs
mov
fs
fs
cld
inc
jg
popa
outsb
addr16
fs
and
jle
mov
outsl
ja
sbb
aas
xchg
fimull
xchg
ret
gs
jo
add
inc
xchg
subl
dec
jo
enter
and
insb
fsubl
and
push
adc
roll
js
fidivrs
mov
nop
shrb
aas
sbb
mov
sub
add
aas
daa
int
ds
inc
popa
jae
mov
or
push
mov
xor
lock
inc
add
jo
or
push
adc
mov
jbe
test
mov
xchg
push
jb
cmp
fstl
and
inc
rcrl
push
call
clc
mov
jl
sbb
or
je
insb
inc
adc
dec
xlat
push
xchg
sbb
xchg
adc
adc
lods
mov
jo
adc
mov
lods
addb
mov
cltd
orb
aas
out
add
jns
mov
push
push
data16
les
aas
or
push
stos
push
sbb
jno
ret
sub
popa
inc
cld
jmp
gs
mov
icebp
adc
cs
xor
dec
dec
mov
pop
inc
cmp
cmp
jecxz
or
addr16
loop
pop
adc
adc
jb
popa
fs
lds
int3
add
in
leave
pminub
das
leave
xorb
dec
adc
mov
int3
add
sbb
shll
in
in
cmc
std
xchg
mov
call
adc
sbb
push
loopne
sbb
mov
push
inc
push
add
xor
stc
add
sbb
fs
loope
push
dec
xlat
imul
loope
jne
push
fld
push
das
push
pop
lods
outsb
arpl
cmp
fsin
outsb
sub
ljmp
mov
add
sub
cmp
mov
adc
cmp
ret
pop
andb
mov
aas
push
scas
mov
les
xor
pop
mov
outsl
cli
xor
fadd
sbbb
gs
add
aam
xchg
xor
dec
imul
mov
inc
pop
xor
xor
add
or
xchg
mov
out
sarl
jbe
pop
dec
lret
cmp
repz
je
movzbl
pop
push
incl
aaa
adcb
frstor
jge
or
repz
jne
jb
add
ds
inc
aas
push
mov
or
lea
cltd
out
aas
iret
fistpl
jg
out
and
sti
je
loope
testb
pop
out
sbb
pop
lcall
test
pop
sbb
out
pop
cwtl
movsl
mov
adc
inc
mov
push
xlat
popa
or
ret
clc
addr16
adc
out
ret
push
push
sbb
push
les
sbb
jo
add
and
mov
sub
sub
adcl
xchg
push
daa
fldenv
push
push
adc
inc
nop
xor
or
sar
lock
test
inc
cmp
jl
cmpb
jbe
adc
cld
xor
dec
sub
clc
imul
lret
inc
mov
cmp
insl
adc
push
mov
insb
bound
mov
sbb
outsl
mov
add
push
push
adc
pop
or
add
cmp
fisubl
cmp
push
cmp
jne
ja
neg
lahf
jmp
mov
jmp
sub
adc
mov
das
mov
or
fistps
mov
cmp
aad
jg
popl
mov
dec
and
cmp
jo
aad
ja
aad
inc
cs
call
mov
sub
mov
mov
aad
sbb
mov
call
lods
test
dec
imul
repnz
xor
mov
sti
mov
mov
sub
je
jae
cmp
cmc
mov
jl
inc
mov
out
fidivrs
or
add
push
inc
dec
jne
jb
hlt
inc
or
jne
sarb
inc
rcl
je
ljmp
test
push
dec
popl
ud0
and
pop
mov
ljmp
jbe
add
mov
sub
jmp
neg
incb
mov
dec
jne
push
mov
sub
xor
push
outsl
cwtl
aam
repnz
adcb
xchg
mov
push
xor
mov
and
jo
pushl
mov
negl
xor
icebp
xchg
cmp
je
fisubrs
dec
inc
or
aam
loop
mov
popl
xchg
mull
rorb
faddl
or
fildll
fistps
mov
faddp
add
add
sub
add
rorl
fdivr
addl
lea
add
push
sub
loopne
jae
mov
xchg
ffree
ffree
ffree
ffree
pop
aad
add
int
fst
lods
adcb
and
loop
inc
and
ja
outsb
aas
cmp
add
push
mov
push
aaa
push
adc
fsubs
mov
xchg
adc
jecxz
fs
sbb
int
loope
jle
mov
and
mov
jp
add
popa
or
jp
in
jno
imul
and
jbe
idivb
mov
jb
outsl
aas
dec
cmp
pop
inc
sub
mov
mov
fldl
stc
sub
sahf
jmp
mov
out
loopne
cltd
loope
sub
mov
hlt
inc
cs
dec
insl
mov
nop
out
jl
inc
or
mov
add
test
std
inc
rorb
movb
jle
or
and
testl
cmp
jmp
dec
jecxz
pop
loopne
inc
loop
aas
push
add
push
popf
or
addr16
cltd
in
fldt
fcomps
cmp
adc
xchg
add
dec
ss
cmp
dec
pop
addl
out
int
inc
mov
dec
ret
pusha
or
mulb
push
sub
xchg
cmp
sub
test
ja
out
adc
jmp
and
mov
mov
out
xchg
cmp
xlat
jg
loopne
enter
add
cmc
add
lock
jmp
push
mov
stos
sub
testb
jmp
push
lgs
test
inc
loopne
push
pop
xchg
cmpsl
jno
adc
add
test
orl
cmp
push
dec
sbb
lods
fwait
xlat
jo
push
adc
int3
out
and
pusha
idivb
push
loope
add
pusha
inc
fists
das
inc
jno
out
inc
cwtl
mov
aad
fcmovne
jp
or
add
cld
pop
dec
mov
je
jae
out
aaa
mov
adc
add
test
into
lcall
adc
out
fidivrs
ss
enter
pop
decb
sarl
sub
xor
or
rolb
insl
xchg
fstps
iret
xchg
add
xchg
add
mov
inc
test
cmp
dec
cmp
pop
pop
inc
add
repnz
or
cmp
incl
gs
or
push
mov
jb
inc
push
sub
incl
pop
add
cmpsb
mov
xlat
popf
jne
dec
mov
or
andl
test
out
cmp
sub
mov
mov
rcll
mov
out
mov
dec
lea
mov
int
es
inc
lods
mov
dec
arpl
lds
pop
mov
pop
cmp
test
in
orl
movsb
out
lock
int3
push
ret
xchg
fs
adc
aad
insl
mov
outsl
adc
fs
and
jle
adc
jne,pn
jmp
out
pop
shlb
mov
stos
test
ss
pushf
push
push
jmp
insl
xor
push
xchg
push
mov
lcall
pop
hlt
clc
or
lcall
cld
imull
jmp
mov
addr16
call
adc
outsb
call
jl
mov
sub
lock
adc
adc
inc
mov
cmp
roll
in
rcr
or
pushl
mov
mov
popl
cmp
jmp
jl
pop
lea
dec
jmp
not
mov
rcll
clc
and
lret
cmc
rep
sti
xchg
jae
movsb
pop
pop
ret
fmul
lret
dec
aas
cmpsb
mov
add
lret
add
mov
pop
lret
fstps
pusha
push
and
xor
pop
jecxz
data16
push
daa
lods
stos
xchg
jne
iret
push
ds
loopne
outsb
and
jmp
sub
jo
fdivrs
jbe
ja
add
std
lahf
xlat
xor
repz
mov
mov
adc
inc
je
dec
jns
push
mov
fdivr
ljmp
sbb
out
sub
adcb
call
daa
cwtl
pop
pop
jmp
lods
add
inc
push
shll
add
add
jge
inc
pop
or
sub
stos
inc
inc
dec
pop
fbld
into
mov
pop
sub
jbe
sbb
outsl
push
xchg
add
or
shll
filds
xchg
popa
xchg
test
cwtl
and
lret
inc
mov
subl
xor
addr16
test
ret
xchg
cmpsl
sbb
sbb
sarl
pcmpeqd
pop
cmp
sti
pop
loopne
xlat
pop
jbe
pop
loopne
dec
jg
scas
js
loopne
add
fldt
shl
pop
add
cmp
fstps
mov
and
push
add
pusha
aas
lock
mov
mov
call
add
adc
sbb
rcrl
sbb
push
push
scas
sub
mov
xchg
push
and
lret
jb
push
cmp
hlt
insl
cli
shlb
add
mov
lods
xchg
or
and
jne
int
inc
mov
lea
bnd
mov
neg
jbe
popl
mov
cmp
jne
das
push
pushf
movsb
mov
and
lods
jmp
imul
sub
sub
mov
cmp
push
and
aas
xor
push
sti
fildl
sub
jae
fcomps
movsb
xchg
pop
and
lcall
sarl
or
mov
pop
pop
mov
scas
mov
mov
mov
cmp
imul
cmp
movzbl
add
and
in
dec
cmc
dec
sub
cmp
jg
clc
pusha
icebp
sbb
std
or
jl
adc
je
rorb
or
shll
pop
ficomps
pop
pop
jne
lea
mov
fwait
push
add
data16
div
and
inc
fwait
mov
pushf
push
push
in
fisubrl
aas
mov
pushf
cs
push
ss
or
push
push
mov
in
xchg
mov
xchg
jle
dec
fsubrs
ror
cmpsb
push
dec
fwait
icebp
and
jmp
repz
add
cmp
enter
or
jmp
into
into
cmp
imul
repnz
pop
repnz
fdiv
into
sbb
adc
fbld
mov
test
scas
xor
fld
sbb
add
mov
aad
mov
lock
xor
inc
inc
in
or
ret
lods
and
jmp
mov
popf
fldcw
jecxz
sub
jne
aas
and
xchg
cld
call
pop
jns
adc
ja
add
mov
cmp
ja
je
out
rorl
jmp
add
jecxz
dec
mov
rcrl
and
pusha
lods
pop
sub
add
std
adc
inc
je
mov
or
add
imul
add
hlt
dec
jge
mov
loope
in
add
adc
cmp
jbe
mov
lock
jne
xchg
adc
mov
mov
pop
mov
mov
loopne
mov
inc
iret
dec
rorl
out
jnp
sar
ret
xor
and
add
mov
pop
int
ds
jo
or
xlat
ljmp
hlt
test
bound
push
add
push
push
test
mov
jg
cli
jg
imul
jg
sbb
into
les
shll
cld
test
inc
stos
in
inc
inc
loopne
clc
pop
mov
push
ret
jge
sbb
out
lahf
dec
cld
lea
shrb
stos
or
fimuls
pop
jmp
jl
jmp
add
rolb
add
lea
cmpl
stc
xchg
femms
lea
call
push
xor
stos
sahf
test
test
rorl
ljmp
sub
or
leave
mov
stos
xchg
push
mov
xlat
mov
gs
call
mov
inc
dec
shr
or
jg
dec
mov
stos
cmp
jne
pop
pop
pop
and
aam
sub
xchg
fwait
sti
mov
cmpb
enter
mov
repnz
inc
add
mov
mov
add
bound
adc
loopne
jb
rorb
xchg
enter
fadd
add
movzwl
sub
andl
hlt
lahf
jp
movl
sub
xlat
fstpl
push
add
ja
movswl
out
inc
fistpll
mov
add
lea
sbb
or
rorl
in
mov
mov
or
dec
dec
inc
dec
inc
dec
lods
or
xor
jge
xchg
jge
inc
jno
ret
std
mov
ljmp
adc
stc
std
jl
pop
sbb
dec
jp
stos
xchg
je
mov
stos
neg
fbstp
stos
jmp
inc
inc
mov
loop
push
adc
les
stos
push
pop
inc
clc
dec
test
mov
pop
or
mov
adc
and
mov
sub
testb
mov
mov
mov
push
call
mov
jb
mov
or
es
ljmp
dec
mov
repz
inc
test
ds
sbb
jne
stos
xor
adc
lcall
js
or
jle
je
inc
jne
pop
dec
jne
ret
xchg
repz
shrb
and
sbb
mov
mov
lret
adc
mov
iret
mov
pop
sbb
je
push
push
cmp
xlat
sbb
lods
add
nop
mov
cmp
inc
loop
push
mov
test
add
inc
add
and
and
mov
sub
sub
sub
xor
out
into
into
es
es
sbb
and
sub
or
sub
fcmovbe
sub
xor
fldenv
dec
or
clc
push
js
and
add
std
xchg
adc
add
sbb
inc
add
jnp
jmp
or
and
pop
adc
xchg
xchg
call
or
add
lea
sub
xchg
sbb
dec
in
rcrl
xchg
pop
or
je
into
jne
shr
mov
sbb
push
testb
outsb
mov
dec
mov
xor
int3
mov
xchg
xchg
repz
xchg
pushf
mov
jecxz
lods
cmp
pushl
imul
adc
push
mov
lods
imul
add
mov
lods
cmp
je
out
jmp
sub
cmp
xor
ficoms
add
es
mov
je
mull
je
mov
sti
cmp
je
xchg
jle
lock
xlat
jmp
inc
jmp
roll
mov
mov
jmp
cmpl
jne
outsl
in
ljmp
lret
add
mov
scas
adc
sub
and
jne
aaa
out
add
and
jnp
imul
stc
sbb
fdivrs
mov
pushf
lea
flds
stos
rclb
shlb
jg
push
cmp
ss
shrb
jae
mov
andl
jne
xchg
adc
mov
cmpsb
imul
mov
jns
push
jmp
std
test
sub
andl
jecxz,pt
std
or
les
adc
stc
pop
pop
mov
cmpsl
or
in
sbb
jmp
sti
dec
sbb
mov
addl
js
dec
mov
incl
mov
cli
sarb
inc
test
or
les
pop
pavgb
mov
fstps
cs
jmp
loopne
ljmp
repnz
aad
imulb
or
sbb
push
sub
stc
ja
pop
movsl
rolb
aaa
add
push
xchg
jmp
xchg
cmc
cmp
imul
inc
decl
push
pop
adc
cmpsl
add
inc
add
mov
fldt
sub
dec
sub
xchg
sub
das
fabs
push
sti
incl
scas
clc
and
pop
frndint
push
fldt
fstsw
fwait
push
test
mov
add
or
mov
lcall
subl
jne
lea
mov
inc
sub
jmp
call
add
add
xor
and
xor
stos
mov
add
jns
add
pop
sbb
and
jge
test
cmp
sti
idiv
adc
cmpb
jb
movb
js
decb
and
ja
pop
testl
add
enter
jno
push
cmp
inc
jns
icebp
fisttps
notl
out
shr
mov
mov
ret
pop
pushf
cmp
mov
pop
lea
test
adc
adc
fs
sub
or
je
jl
pop
shrl
fildl
add
pop
mov
cmpsl
cmpl
mov
loopne
jae
dec
add
xchg
insl
or
test
or
fidivl
setnp
ja
sbb
sub
mov
lcall
mov
and
jne
dec
jne
jmp
mov
add
stos
aas
and
or
ljmp
movb
aas
divl
or
add
ljmp
or
mov
jae
hlt
dec
push
test
lret
fyl2x
fwait
mov
js
fldz
cmpsb
xchg
stos
mov
cmp
je
pop
add
mov
es
sbb
popa
and
sti
shll
cmp
and
shll
push
sub
fdivl
sti
rcrb
ret
test
mov
xchg
lods
push
mov
add
loopne
add
aas
jmp
fstpt
gs
loopne
cmc
test
mov
lock
cld
test
insl
and
push
lods
inc
orl
and
sub
add
jae
add
fimull
into
shr
sub
negl
loope
lahf
or
imul
pop
cmp
pop
jns
ljmp
push
push
das
add
movb
rorb
js
add
push
jbe
ss
mov
pop
enter
or
ret
adc
or
sub
jnp
or
adc
add
outsl
aad
xlat
outsl
imul
lea
sbb
fwait
loopne
add
push
aad
jns
daa
mov
test
aam
cs
xor
fsubs
sbb
push
sub
sbb
out
aam
xchg
hlt
rorb
pushf
or
pop
or
ds
adc
movsb
rcr
sub
nop
xchg
sub
out
jbe
pusha
push
or
repnz
adc
fstpl
fwait
out
push
adc
int
or
mov
iret
cmpl
and
xor
jp
scas
fcomi
fstl
inc
jl
movsb
add
pop
push
adc
mov
push
divl
push
adc
call
sbb
push
push
xor
mov
jg
mov
jo
rcrl
and
dec
jo
and
xchg
inc
outsb
popf
and
inc
aam
aam
cmc
sub
out
imull
jmp
into
add
add
adc
ja
jg
add
xor
outsb
add
clc
addr16
push
jb
adc
sbb
or
cmp
inc
stc
inc
and
call
imul
ficoms
cmpb
shlb
daa
ret
sbb
adc
add
inc
std
add
inc
or
sbb
jle
pop
je
shl
adc
scas
test
jb
cmpb
xchg
loop
ret
fwait
mov
enter
pop
xchg
or
push
das
hlt
lods
subl
add
sbb
dec
mov
shlb
add
push
cmp
rcr
xlat
and
xor
xchg
cld
ja
pop
lret
push
testl
roll
cmc
leave
ret
and
test
adc
mov
cmp
std
adc
jnp
mov
negl
add
ja
add
aaa
inc
clc
inc
lea
incb
jb
mov
ja
and
in
jb
or
jb
sti
insb
sti
cmp
ja
je
mov
adc
push
mulb
daa
clc
loopne
pop
dec
incb
jne
sub
dec
mov
aas
cltd
test
imul
sbb
cmpsl
dec
add
sub
aas
pusha
ds
add
popa
adc
mov
arpl
inc
fisttps
jae
std
lds
inc
dec
lds
sarb
add
pop
mov
mov
cmc
ljmp
in
test
jg
ffree
push
pop
daa
popa
or
hlt
jle
lock
add
dec
or
data16
ljmp
sbb
add
jl
addl
pop
jecxz
and
je
pop
sbb
lods
mov
dec
cmp
fdivrp
dec
sub
cmp
cs
repnz
pop
in
xor
fistps
lea
sub
lock
jne
ret
loop
cmpsl
xchg
jns
dec
xor
mov
jecxz
cmp
jb
adc
sub
das
inc
jmp
scas
sbb
push
xlat
cs
and
mov
ret
dec
add
add
sbbb
pop
popf
enter
jbe
xchg
cmp
outsb
cmp
mov
shll
jo
and
in
mov
and
or
or
sub
cwtl
fstpl
sbb
push
cmp
push
push
lock
fcoml
sbb
gs
shl
sub
movsl
jecxz
rorb
lods
push
xchg
and
pop
jmp
loop
cmpl
sahf
lods
push
pop
rorl
enter
xchg
and
lea
out
lret
popl
cwtl
xor
rolb
addr16
push
popa
xor
lahf
shlb
xchg
imul
rcl
push
jae
popa
in
stc
shr
js
in
repz
add
and
adc
fsubrs
mov
test
inc
ret
or
sti
je
insl
orb
hlt
cmp
mov
js
add
es
cmp
or
lea
or
xchg
repnz
arpl
test
adc
inc
in
add
jecxz
inc
pop
dec
push
in
jge
call
ljmp
into
mov
in
aaa
jo
js
data16
sub
xor
jp
repnz
adc
add
out
repnz
sarl
jl
add
jno
js
fst
sbb
sahf
or
jl
mov
and
or
and
push
jle
je,pn
or
xor
inc
leave
sbb
enter
adc
sti
pop
cmpl
sub
imul
mov
ret
xor
adc
out
cmp
sbb
add
dec
jo
ret
insl
ret
les
cmp
jbe
aas
addr16
mov
in
ret
pop
mov
dec
sbb
sysret
stc
int3
je
jmp
ljmp
je
jecxz
push
imul
xor
push
or
fdivs
add
flds
lock
add
add
mov
add
dec
rcr
add
xlat
adc
nop
mov
sub
ja
jge
pop
incl
pop
sbb
lcall
push
jg
jmp
adc
jae
loope
sub
leave
jl
adc
sbb
xchg
jns
inc
xor
or
push
or
call
mov
xlat
decl
pop
cmp
jne
mov
xor
xchg
fiadds
pop
call
xchg
push
subb
fisubl
in
and
movsb
or
or
or
or
or
or
or
sti
or
mov
or
or
or
mov
fnsetpm(287
xorb
pop
pusha
repnz
mov
cmpsb
pop
cs
mov
sti
xor
ss
xor
push
ja
into
out
adc
mov
pop
je
lock
push
and
lret
mov
mov
cltd
mov
mov
add
popf
mov
push
fisttps
lea
and
imul
add
mov
jl
hlt
dec
xor
mov
lock
lods
adcb
loope
ret
ja
xor
xchg
fidivrl
aam
mov
mov
dec
add
sbb
cltd
aad
push
mov
fistpl
pop
bound
mov
pop
mov
and
and
nop
and
pop
lods
loope
repz
inc
mov
cmpsl
dec
cmpsl
or
mov
xchg
jl
push
repnz
loopne
add
adc
and
add
sti
std
sbb
pop
or
pop
je
jmp
cmpb
dec
mov
dec
ret
daa
in
jl
dec
sub
mov
and
jne
rolb
jmp
add
aas
cmp
xor
mov
int
out
or
scas
ljmp
outsl
dec
push
mov
jmp
movsl
sbb
das
adc
jle
loopne
sub
or
or
pop
mov
pop
inc
call
cmp
mov
lahf
dec
push
nop
mov
mov
ss
in
les
sbb
adc
jne
mov
fstp
or
cmp
addl
daa
nop
xchg
subl
sub
add
cmp
pushf
jns
adc
cwtl
inc
jmp
and
dec
xor
dec
push
xor
and
mov
add
add
dec
popa
sti
out
jmp
or
pop
adc
xor
or
adc
push
mov
es
add
nop
data16
push
pop
test
outsl
dec
xchg
je
inc
xchg
rolb
popa
sbb
push
test
fucomi
add
mov
fbld
lret
lock
xor
aad
sbb
adc
imul
inc
mov
mov
popa
fadds
push
jmp
rorb
jg
dec
das
push
dec
stos
and
in
in
or
psraw
ret
ja
popf
sbb
jno
mov
dec
shrb
inc
ret
jne
mov
loope
or
or
sbb
imul
or
mov
arpl
and
xor
xchg
and
cmp
push
xchg
cmp
jg
je
mov
xor
mov
mov
sbb
or
scas
add
xchg
mov
xorb
mov
ljmp
mov
adc
sub
jae
and
pop
or
jb
push
sbb
xlat
pushf
das
add
lock
ret
add
dec
mov
ret
fidivs
and
and
jecxz
mov
xor
andb
xor
sub
notl
sub
jno
mov
inc
dec
push
adc
add
clc
mov
or
push
mov
loopne
fmull
jl
incl
addr16
in
cmp
jne
incl
mov
mov
inc
notrack
sub
je
dec
je
sub
ljmp
das
sub
je
jmp
mov
jmp
push
push
divb
ja
push
inc
mov
jle
faddl
cwtl
ret
mov
xor
xor
cmp
mov
pop
add
jl
mov
mov
pop
pop
mov
mov
insb
mov
fsubrs
or
insb
mov
cvtps2pd
lret
hlt
sbb
push
add
or
cmp
mov
aas
jp
ja
sub
fcoml
jne
cmp
jg
lret
daa
xor
dec
cltd
xor
sub
add
inc
aas
mov
imul
add
insl
mov
add
adc
pop
dec
push
push
dec
cld
jo
xchg
gs
scas
fmuls
subl
fadds
push
cli
sub
and
out
loopne
adc
xor
adcl
pop
push
loop
insb
scas
mov
ds
adc
test
or
das
push
popf
and
lea
int3
push
sbb
js
int
adc
sub
movsb
icebp
or
nop
cmp
add
rolb
xor
mov
sub
pop
ljmp
adc
adc
cmp
jmp
ds
out
sub
jb
and
cmp
cli
ret
push
mov
and
hlt
les
leave
sbb
push
push
jmp
aaa
sub
enter
hlt
sbb
jmp
aaa
into
test
enter
insl
lods
push
int
scas
and
jmp
cmpb
ja
movsb
xor
adc
mov
fstps
fsubr
ja
mov
add
cmpb
mov
xor
das
jne
testb
arpl
js
or
aas
xchg
xor
ja
or
jl
cmp
push
xchg
mov
sarb
or
das
fwait
test
imul
jne
imul
and
sarl
movb
fstpt
fsubrl
fimuls
fs
push
push
fcomps
das
xor
or
push
out
dec
adc
pop
xchg
adc
inc
dec
inc
push
mov
mov
ret
iret
and
add
je
mov
lock
iret
test
or
or
sti
arpl
and
and
jmp
push
pushf
mov
pop
sub
test
push
inc
adcl
mov
jle
inc
inc
add
aaa
xor
or
dec
cmpsl
xchg
lret
into
je
add
mov
daa
daa
in
inc
or
add
sbb
or
shrl
fwait
mov
and
lds
or
rcll
jne
add
push
jnp
or
add
add
call
cs
pop
test
scas
lea
dec
rorb
aad
rcrb
stos
loopne
insb
ss
sti
pop
ret
popa
adc
into
jnp
jl
or
mov
les
cli
cmp
daa
divb
cmpl
shrb
add
rolb
call
push
xchg
pop
and
in
mov
or
rol
adc
rcrl
adc
jne
scas
mov
andl
fisubs
inc
je
sbb
or
data16
or
fs
sbb
mov
fs
roll
adc
adc
out
mov
pop
and
add
mov
sub
jb
or
mov
arpl
cmp
add
mov
push
pop
ja
and
push
mov
arpl
pushf
lea
bound
addr16
sbb
pop
addl
iret
cltd
add
iret
call
inc
adc
movsl
mov
mov
inc
mov
or
les
lea
add
inc
sahf
popa
push
dec
jge
lcall
les
push
push
sarb
sti
adc
dec
push
mov
pop
jns
gs
adc
jbe
in
aas
movl
dec
pusha
sti
or
push
add
lcall
xchg
in
adcl
jb
or
shlb
in
in
xchg
dec
dec
dec
call
xchg
movb
or
cmc
sub
cltd
and
je
mov
or
testb
outsl
dec
test
pop
xchg
cmp
xchg
out
add
lds
adc
and
add
mov
add
xchg
mov
sub
mov
test
inc
pop
inc
xchg
std
sbb
mov
add
adc
ljmp
in
mov
push
test
enter
es
add
cmp
ja
adcl
aas
adc
push
push
cmpsl
push
push
xor
xchg
cmpsl
rcll
hlt
push
push
movsb
push
mov
orb
sub
ret
test
xor
or
mov
sub
sbb
xor
clc
xchg
dec
lcall
add
test
addb
add
or
repz
aas
sbb
xor
sub
je
sub
je
sbb
dec
scas
ret
sbb
cmpsb
inc
pop
and
jle
or
insl
mov
sbb
jmp
or
aas
cmp
ret
mov
cld
jle
mov
test
adc
sub
cmovnp
sbbb
jle
rorb
sarb
jmp
add
jmp
mov
in
cs
pop
je
jne
xor
sbb
in
in
test
shrb
mov
cmc
popf
lret
pop
jo
out
xor
adc
push
notl
addr16
cmp
push
sub
xor
ret
ja
adcl
jns
loopne
pop
test
call
cmpsl
test
in
xor
icebp
in
xor
mov
adc
pop
jne
out
out
imul
addr16
test
dec
cmp
and
fcoms
push
jle
jle
sbb
cmp
and
or
popf
inc
js
jmp
pop
enter
xchg
inc
pop
repz
pop
sbb
mov
and
je
ds
xchg
mov
sub
and
pusha
cmpsl
xor
inc
xchg
mov
shlb
cmp
popf
sbb
and
mov
icebp
gs
xchg
out
sub
in
jbe
pop
sbb
lods
or
cmp
xor
and
mov
xor
mov
mov
cmp
mov
cltd
sbb
sahf
clc
push
lea
loopne
and
test
ret
shlb
add
push
push
pop
dec
out
mov
aam
pcmpgtd
mov
pop
mov
bound
leave
xchg
sbb
xchg
inc
push
or
int3
pop
ss
ret
or
push
fnstcw
pop
in
inc
clc
les
daa
dec
int
xor
or
addl
add
sub
push
movsl
es
shlb
insb
inc
pop
fucomip
bound
push
or
mov
mov
or
jle
adc
shrl
add
in
xlat
scas
mov
inc
add
bound
or
adc
orl
into
inc
dec
or
test
xor
sbb
adc
add
pop
and
sti
fdivs
ret
push
ljmp
jnp
arpl
add
mov
repz
xchg
inc
inc
dec
stos
pushf
clc
fwait
lea
inc
mov
test
or
inc
cmpb
sub
pusha
inc
std
fisttps
or
mov
test
cmpsl
xor
xchg
mov
fnsave
sti
push
jg
cmp
pushf
jecxz
icebp
sbb
mov
jo
pop
arpl
loop
mov
push
imul
sarb
or
and
decb
push
imul
push
loopne
dec
insl
push
test
adc
ljmp
cld
or
jnp
jmp
sets
sbb
push
push
adc
aam
or
jmp
adc
jne
jne
mov
cmp
pop
and
insl
lods
in
test
cmp
and
or
push
inc
cmp
mov
sbb
cs
xchg
stos
or
jge
clc
push
repnz
stos
scas
in
push
loopne
enter
ret
jno
sbb
pusha
xchg
sub
loopne
and
lahf
mov
insl
add
inc
jecxz
sub
rolb
adc
jns
lock
iret
leave
aad
scas
inc
sub
rorb
add
xchg
xchg
xchg
push
push
cmp
je
jmp
xor
mov
je
jmp
xor
sub
fisttps
add
mov
add
lret
mov
or
or
or
das
sub
push
mov
mov
mov
push
jo
inc
ficoms
or
add
rdtsc
jns
icebp
aad
pop
cld
cmpl
movaps
and
add
pop
jae
gs
cmp
jne,pn
add
or
in
sub
aaa
stc
xchg
fimuls
mov
jg
or
pop
mov
jo
sub
xchg
ss
jae
aas
and
rorl
push
pop
enter
rcl
rorb
aam
outsb
cmp
fcoml
xchg
mov
fwait
loopne
cmp
test
pop
sub
cwtl
mov
mov
and
dec
es
adc
daa
sub
xor
jae
sub
adc
dec
les
sub
inc
aad
xchg
inc
xchg
cmp
gs
aam
incb
add
sub
aaa
addl
out
sbb
and
jnp
push
int3
pop
adc
pop
lods
repnz
mov
push
dec
lock
or
mov
push
push
and
pop
aam
dec
pushf
sbb
int3
daa
jl
dec
aas
scas
adc
cmp
fildll
cld
mov
test
rclb
pop
insb
iret
aaa
inc
hlt
mov
inc
aam
fisubl
pop
add
roll
sbb
rcrl
out
mov
jae
mov
mov
mov
jge
mov
mov
push
movb
adc
nop
ja
pusha
lods
pop
inc
cld
inc
cwtl
cmpl
add
xor
in
mov
xor
xor
adc
push
insb
sub
push
das
jae
xchg
aaa
test
cltd
test
outsb
pop
loopne
enter
mov
xor
add
pop
leave
push
sub
hlt
mov
rcrb
adc
adc
adcb
test
bswap
mov
hlt
jle
cwtl
jl
pcmpeqw
cmp
inc
mov
add
call
add
adc
add
jae
ds
pop
je
pop
pusha
and
inc
cmp
push
lcall
xchg
movsb
xor
sub
push
pusha
fimuls
fs
mov
jae
inc
xorl
push
repnz
jmp
sub
ret
add
mov
cmpb
sbb
adc
add
sbb
add
jae
pop
sub
mov
and
mov
sub
rcrb
and
or
inc
testb
aas
add
add
add
xchg
fwait
inc
pop
add
and
in
cmpb
jecxz
syscall
dec
sub
out
xor
cmp
daa
ds
shll
jle
cmp
popa
adc
or
lea
enter
lahf
jbe
inc
pop
jg
mov
scas
das
adc
jl
mov
and
leave
adc
outsb
pusha
mov
inc
inc
inc
jge
rorb
mov
and
daa
mov
add
mov
lock
mov
aad
and
addr16
es
or
imul
and
ds
or
xrelease
sub
dec
add
and
jae
aaa
fildll
push
mov
ror
sub
sahf
popf
outsb
std
std
jg
and
or
inc
fs
rorb
add
lcall
xchg
or
jb
add
iret
es
ret
pop
or
mov
jns
fisubs
sub
sub
or
daa
lds
pop
and
jecxz
leave
xor
cmpsl
or
inc
lea
push
jb
push
and
jae
test
out
pop
ljmp
sbb
adc
sbb
pop
push
add
add
and
lret
movsb
fiaddl
and
and
das
test
testl
lds
out
add
inc
inc
adc
jne
adc
insl
addr16
es
sbb
mov
pop
cmp
cmp
adc
pop
out
push
jmp
xor
mov
pusha
cmp
jge
sarl
add
sbb
pop
lahf
sbb
scas
in
mov
and
and
ljmp
test
push
inc
inc
jl
js
jge
jb
inc
mov
mov
lds
push
adc
push
loop
out
movsb
nop
jl
jo
lcall
std
push
and
pop
add
push
push
movsl
jnp
xchg
ja
sub
ss
add
mov
cld
or
aas
push
sarb
cli
jbe
rolb
and
out
dec
int
cmp
mov
in
adc
lock
daa
shll
cmp
mov
dec
sbb
inc
imul
punpcklwd
inc
inc
fcmovb
and
jne
xchg
or
cmpsb
mov
pop
aam
insb
test
lcall
pop
dec
and
out
fstpl
hlt
ret
pop
fistpll
or
ret
pop
ficoms
mov
mov
adc
out
adc
aaa
pop
sub
jb
inc
sbb
mov
adc
cmp
lret
jne
in
in
jle
push
or
pop
pop
jne
sub
mov
pop
ja
jb
mov
sub
repz
sti
push
movl
mov
jne
pop
mov
mov
leave
data16
cmpsl
shll
out
adc
aas
popa
shr
mov
pop
xor
les
les
inc
xlat
fildl
inc
adc
movsb
mov
adc
iret
xor
xor
cmp
mov
pusha
and
push
faddl
adc
or
movsb
shll
xchg
xchg
loopne
outsb
mov
inc
inc
cmp
test
xchg
roll
push
ret
lods
inc
scas
jae
imul
cmpl
xchg
rorl
loop
ss
dec
jne
jmp
push
out
cwtl
sub
cmp
mov
sbb
arpl
add
out
jg
push
sub
jne
push
sub
loop
xor
add
test
shlb
out
add
xor
ds
lock
out
cs
adc
sub
xchg
scas
add
mov
fs
call
pop
dec
pushf
mov
mov
xchg
int3
push
in
mov
sbb
sbb
insb
das
mov
add
pusha
movsl
add
mov
out
repnz
mov
pop
pop
and
fs
fcomp
mov
divb
xchg
sarb
ja
pop
ret
sub
mov
stc
inc
sahf
subb
mov
dec
jno
out
enter
push
and
or
ljmp
cwtl
sbb
in
jb
aas
inc
shl
or
mov
movsb
sbb
pop
clc
mov
sti
fmuls
cld
push
mov
add
test
lock
pop
mov
xor
mov
and
sarb
xchg
out
insl
das
fs
xchg
insl
add
and
in
push
popa
insl
pop
jo
cmpsb
sarl
mov
inc
push
mov
and
pop
sbb
lahf
int3
out
sbb
cmp
pop
push
cmp
or
addl
rclb
mov
and
mov
and
inc
or
je
ret
inc
fists
js
lea
jmp
test
xlat
adc
daa
popa
insl
pop
inc
mov
jno
lock
scas
lret
push
iret
or
ss
and
addl
or
mov
xchg
xor
adc
sub
daa
sbb
and
jb
pop
clc
leave
adcl
leave
add
xor
push
push
sahf
xor
out
es
add
std
adc
pop
lods
jb
mov
pusha
out
cli
sar
addr16
icebp
inc
jg
mov
insb
push
mov
adc
js
jne
xor
fists
mov
sub
pop
xchg
sub
jmp
ret
stos
push
pop
orl
pop
inc
jbe
cld
xor
adc
test
scas
mov
sbb
mov
push
ds
repz
pop
mul
mov
adc
push
jp
push
pop
frstor
bound
lea
sub
in
or
rorb
ror
lods
fistpl
xor
insb
shlb
jge
cs
mov
add
add
or
push
push
dec
in
mov
sbb
or
mov
sbb
jmp
mov
frstor
mov
mov
xor
push
push
pusha
inc
pop
cld
pop
ret
mov
inc
xor
pop
xchg
mov
mov
jae
cmp
negl
ljmp
and
cmp
jne
cmp
je
cmp
rol
jb
pop
cmp
jle
lock
add
push
out
dec
subb
adc
and
adc
sub
sub
fildl
prefetchnta
jl
push
int3
and
push
lahf
flds
mov
cli
sub
and
sahf
fbstp
imul
gs
jo
out
decb
js
pop
xchg
lock
inc
push
icebp
fldenv
and
pop
dec
ret
xchg
mov
ret
xor
xor
mov
mov
mov
into
sub
or
test
repnz
cmp
jne
loopne
mov
and
sub
or
sub
pop
scas
adc
mov
pop
je
mov
icebp
inc
jmp
cmpsl
mull
int3
xchg
popa
xlat
cmp
mov
push
xor
add
ljmp
hlt
loopne
push
mov
test
pop
call
jp
jl
cmc
pop
mov
inc
or
gs
inc
mov
push
test
lods
in
add
rcrb
add
mov
inc
daa
push
imul
popf
aam
mov
inc
or
dec
lock
cmp
pushf
jno
jl
jmp
fsubrl
push
movsb
rorl
mov
mov
add
sub
sbb
incl
js
js
ss
mov
adc
sbb
inc
call
jb
and
mov
or
mov
or
xchg
adc
popf
inc
inc
cs
mov
and
pop
pusha
add
xchg
dec
cmp
push
sbb
cmp
adc
mov
aas
clc
mov
jnp
ja
je
pop
jl
jl
fsubrs
inc
clc
clc
adc
cmpsl
seta
sbb
and
jmp
adc
loop
mov
jns
lods
dec
xchg
frstor
das
add
aam
repnz
and
fists
aas
dec
cmp
sete
incl
push
pusha
mov
add
cltd
mov
cmpl
cs
outsb
out
add
in
popa
scas
rorb
push
lret
pop
xchg
adc
and
lock
jae
inc
or
add
cmp
mov
adc
xor
jmp
push
sub
roll
xchg
or
cmp
call
or
mov
mov
out
adc
aam
or
dec
iret
add
insl
out
xor
int
enter
add
stc
rorl
stos
jmp
mov
outsl
loop
adc
ret
movsb
fildl
xor
icebp
cmpsb
pusha
push
rolb
fs
pop
fcmovb
add
popf
mov
out
and
or
ret
add
and
jle
push
add
insb
xor
dec
roll
adc
cmp
mov
jne
lcall
jmp
and
push
dec
and
outsl
xchg
jg
stos
dec
push
or
or
out
inc
test
out
fnstcw
and
cmc
cmpsb
popf
lock
xchg
xlat
xor
mov
jmp
ret
outsb
and
ret
push
and
das
pop
add
jnp
or
aad
add
push
mov
in
dec
fcomp
inc
rorl
cmpsb
xor
add
push
enter
mov
push
pop
mov
aam
shlb
sub
pushf
mov
mov
adc
mov
test
pushf
imul
insb
loopne
cmpsb
xor
pop
push
dec
push
jle
shll
rolb
shrl
pop
int3
xor
rcll
xor
fsubs
sbb
cld
fidivs
add
out
rcll
adc
xlat
daa
or
enter
ja
xor
add
inc
add
int
in
aam
cld
mov
insb
xorl
push
xor
pushf
in
sbb
adc
leave
lods
cmp
mov
roll
and
fmuls
or
nop
int3
mov
aad
inc
les
divb
mov
shlb
xorl
mov
insl
nop
out
pop
fnstenv
rolb
out
movsb
mov
sbb
inc
push
out
in
push
add
adc
sbb
das
fs
in
aam
jb
and
loopne
dec
nop
pop
test
mov
add
clc
mov
sub
push
cmpsb
aam
xchg
out
mov
and
push
cmp
dec
jae
mov
lock
xchg
mul
adc
dec
dec
mov
sbb
popf
push
out
jge
sub
pop
enter
or
inc
add
and
mov
cltd
fs
nop
mov
leave
and
cmp
and
adc
dec
dec
lock
cmp
xor
mov
inc
mov
pop
inc
xor
cmp
dec
gs
mov
push
push
or
je
js
cmp
es
iret
pop
mov
xor
mov
enter
jl
lods
push
add
cmpl
fcmovne
mov
pop
data16
imulb
push
adc
out
loopne
pop
ret
in
inc
pop
or
in
add
icebp
sbb
jns
leave
or
and
mov
sub
jp
lea
movsb
pushl
icebp
cmp
or
and
xlat
adc
add
cmpb
sbb
sbbb
jb
xor
cmp
lock
xrelease
sub
pop
repz
inc
pop
xchg
cmpsb
clc
loop
sub
clc
clc
lea
cmpl
je
mov
inc
dec
inc
cmpsb
std
fdivr
pop
or
push
ret
xchg
cmp
add
dec
hlt
adc
or
jne
mov
cwtl
cmp
adc
add
imul
in
popa
nop
fistpll
nop
xchg
mov
inc
sub
leave
pop
mov
shlb
or
addl
out
xor
stos
nop
cmpsl
js
or
insb
je
jo
pop
nop
inc
push
sbb
pusha
inc
add
rcl
xchg
push
arpl
movsl
dec
xor
repz
mov
add
ret
push
or
clc
mov
mov
pop
mov
icebp
xchg
dec
cs
addr16
xor
lods
xchg
dec
cs
cs
cs
cld
rcrb
add
les
leave
and
xor
xor
rorb
jb
and
mov
jb
and
inc
fcompl
mov
loopne
rcrb
in
in
repz
repnz
test
inc
imul
jns
hlt
imul
push
add
sbb
decb
jo
es
add
outsl
je
in
inc
inc
fs
jne
pop
or
ret
jno
inc
xchg
cmovns
outsl
fs
outsb
jg
in
fisttpl
pop
outsl
jb
inc
insl
jo
inc
jb
insl
inc
mov
fstl
cmp
push
cmp
adc
and
lds
loopne
xchg
fdivrs
push
dec
add
mov
outsb
ja
dec
dec
jb
clc
clc
out
clc
cmpsl
xchg
clc
add
mov
xchg
sbb
inc
push
fidivl
adc
ds
and
arpl
jbe
cmc
addb
pop
or
pop
testb
mov
adc
stc
jns
dec
inc
pop
jo
add
jae
add
lcall
movsb
outsb
pop
inc
pop
ss
cwtl
push
dec
jno,pt
mov
push
adc
dec
dec
add
ret
nop
in
pop
xor
subl
test
adc
pop
adc
mov
popa
xor
orl
pop
or
lea
gs
xchg
ret
sbb
jns
pop
dec
div
push
lock
xchg
hlt
adc
push
lcall
push
add
lcall
mov
lret
mov
jg
push
mov
in
mov
sti
add
pop
mov
add
subb
push
inc
stc
repnz
or
pop
in
and
xor
lock
fcoms
adc
or
jbe
imul
mov
add
or
and
xchg
inc
pusha
mov
ret
xchg
dec
into
insl
fbstp
aas
or
pusha
adc
adc
sets
inc
sbb
mov
sti
cld
cld
or
mov
addr16
pusha
std
aas
mov
popa
adc
xchg
fldenv
lock
inc
push
adc
fsubrs
aas
cmp
nop
sub
and
push
pop
adc
cmpsl
dec
xchg
nop
iret
nop
inc
jb
jo
andl
xor
xor
adc
jns
dec
arpl
jo
pop
call
add
aas
addr16
jb
pop
xor
inc
enter
outsb
sahf
popf
sub
int
add
cmp
ds
das
andl
jne
ss
mov
ds
sub
test
sbb
ret
shrb
enter
ljmp
jecxz
pop
cld
outsb
pusha
repnz
call
xor
mov
out
cs
icebp
in
add
shl
mov
lret
add
add
call
jo
out
call
jmp
sarl
lods
xchg
ret
and
mov
adc
loop
enter
add
inc
push
in
xchg
add
fisubs
enter
iret
add
pushf
inc
dec
dec
cld
add
in
pop
add
xor
and
mov
pop
jne
xchg
jmp
cmp
jg
mov
add
dec
aaa
iret
out
daa
clc
sub
mov
outsl
inc
xchg
scas
hlt
stc
sub
dec
je
sbb
xor
in
popf
divl
lahf
push
xchg
daa
loopne
inc
nop
outsl
dec
ja
add
movsb
adc
inc
dec
enter
inc
fsts
dec
pop
icebp
xchg
clc
mov
dec
cmpsb
lret
clc
pop
dec
hlt
sub
fsubrs
insl
xchg
jo
fimull
fdivl
mov
insb
es
add
mov
inc
mov
xchg
into
inc
dec
in
in
ss
dec
mov
jae
cmp
mov
loopne
jmp
aad
lods
sarl
or
inc
loope
int3
or
mov
ljmp
xlat
jno
push
shlb
xchg
and
jl
mov
rcl
mov
dec
fiadds
push
ret
push
xor
sub
sub
sbb
je
loop
push
pcmpeqb
jmp
cmpsb
lock
jmp
adc
dec
insb
fistps
sbb
sbb
sub
test
push
mov
popf
jnp
xchg
jl
aam
adc
xor
jb
or
inc
add
call
cmpsl
leave
mov
xchg
push
add
nop
adc
or
lcall
and
stc
xor
add
xchg
test
subl
add
add
xchg
lock
cmp
dec
mov
das
jge
outsl
test
jbe
cmp
addl
insl
jp
sbb
pushf
mov
out
xchg
jne
pushf
xchg
std
fisttps
shlb
mov
sub
xor
stc
or
in
pop
mov
call
sbb
testb
fsubl
push
out
add
pop
subb
add
bswap
or
test
aam
pop
les
jns
xor
adc
dec
xchg
clc
fidivl
mov
and
lock
negl
inc
xor
lea
push
call
mov
lea
push
jno
in
rcl
or
lea
pop
pop
fcmovnu
insl
adcl
out
mov
sbb
sahf
jmp
inc
lea
pop
sub
mov
mov
leave
cmp
push
scas
jecxz
ret
imulb
inc
push
jbe
test
jo
mov
push
insl
fdivl
lea
pop
push
loopne
xrelease
xor
adc
or
jb
add
adc
cwtl
cmpsb
xchg
das
testl
add
push
adc
inc
js
mov
xor
div
and
dec
lahf
jmp
cmp
and
add
mov
or
dec
sarl
inc
pusha
ja
and
or
mov
push
fs
clc
mov
je
ret
xchg
push
adc
pop
je
inc
lea
cltd
nop
mov
mov
or
jmp
sbb
sbb
sbb
in
loopne
leave
test
jb
loopne
rclb
xchg
or
pop
fmuls
cmp
jbe
repnz
adc
pop
or
adc
mov
cmpb
loop
rcll
outsb
cmp
lds
aad
aam
enter
jmp
push
fcmovnu
cwtl
cmp
lock
cld
pop
cmpsl
push
mov
pop
add
cs
rorl
push
push
imul
cmpsb
dec
loope
mov
sbb
push
and
hlt
xor
dec
jmp
adc
cmp
xor
inc
xor
test
inc
roll
nop
out
jmp
aas
cs
mov
sub
dec
xchg
jno
or
pop
xchg
cmp
sbb
cmp
je
pop
jne
imul
adc
pop
xchg
in
mov
or
sarl
xchg
loope
xchg
sti
lods
outsb
mov
aad
int
insb
mov
inc
inc
xchg
and
fsubrs
mov
cwtl
or
add
push
mov
mov
or
or
fcoml
movzwl
imul
adc
xchg
jnp
cmp
lea
mov
xor
clc
inc
mov
mov
orb
push
sub
inc
ret
dec
pop
insl
lods
loopne
pop
add
movswl
mov
je
cmp
cmpsb
mov
or
mov
and
push
fstp
sub
sbb
and
mov
cld
mov
fbld
jnp
vxorpd
sbb
pop
bound
xor
mov
adc
jmp
and
cmp
add
jge
mov
pop
dec
lcall
push
push
jecxz
push
jmp
and
sbb
out
jmp
das
jmp
std
add
or
scas
bound
outsl
int3
jne
nop
pop
sbb
add
dec
pcmpeqd
testb
push
jae
add
mov
std
add
dec
inc
sbb
mov
hlt
or
ret
sbb
nop
callw
notl
stos
sub
je
sahf
sub
inc
xor
push
jnp
cmpsl
in
jo
dec
mov
mov
inc
jnp
push
fcmovu
xchg
stos
adc
dec
sbb
stos
mov
and
fldcw
addl
inc
pop
enter
sarb
xorl
xchg
xchg
xchg
pop
cmp
inc
insb
xor
add
cmp
inc
lods
cmp
lds
sub
lea
and
jb
ret
or
cmp
push
or
push
mov
push
adc
lret
test
ja
enter
jae
push
push
pop
aam
into
sub
jg
mov
mov
lea
sbb
pop
call
inc
push
psubsw
enter
clc
xlat
sbb
cs
test
rorl
ss
mov
jmp
mov
mov
pop
pusha
pusha
adc
lret
xor
fisttpll
cmp
outsl
cmp
and
add
mov
mov
pop
dec
shll
mov
mov
fnstenv
add
sbbb
orl
xor
dec
pop
jo
subb
outsl
sbb
cmpb
shrb
push
mov
dec
or
pop
negb
in
adc
xor
add
sub
mov
push
lcall
xor
xor
xchg
dec
jb
frstor
repnz
arpl
and
mov
cmp
imul
push
adc
mov
jp
nop
xchg
or
aam
push
stc
hlt
jmp
adc
inc
mov
std
cmp
add
je
dec
mov
dec
int3
jmp
data16
mov
sbb
sub
adc
mov
fwait
clc
insb
test
inc
mov
rorb
fcomp
fildl
or
psubq
std
jg
sub
xor
add
or
hlt
arpl
ret
and
push
push
sbb
add
push
sub
xlat
imul
mov
int
pop
jbe
xchg
mov
cmp
pop
call
sub
mov
aad
push
or
adc
gs
rolb
mov
xchg
clc
fisttps
cmp
cmp
adc
loopne
cmp
and
xchg
pop
adc
dec
in
inc
into
pop
sbb
cli
movsl
push
mov
je
mov
outsl
addr16
adc
cmpsl
xor
push
sbb
pop
push
mov
cs
dec
repnz
es
xor
rcll
push
jmp
cmc
adc
shll
push
pop
out
fstps
pop
fistl
mov
push
stc
or
pop
push
pop
je
ja
or
aad
outsl
aas
sub
mov
in
sbb
dec
cld
mov
sbb
clc
pop
cmp
pop
aaa
push
xor
push
pop
adc
add
mov
sbb
orb
movl
xor
lods
in
mov
mov
mov
add
mov
pop
cwtl
je
dec
je
jmp
outsb
daa
mov
mulb
jecxz
xor
push
push
shll
add
inc
mov
sbb
sub
pop
nop/reserved
xor
movsb
pop
ret
rclb
inc
lods
mov
fisubl
jecxz
push
add
adc
adc
xor
sub
outsl
add
stos
movsb
inc
fstp
sub
mov
jae
insl
adc
inc
xor
in
jmp
sbb
fidivrl
adc
push
jbe
dec
add
cmp
jmp
add
movsb
cltd
mov
add
sbb
mov
and
sbb
rcr
ret
mov
push
in
icebp
aaa
or
addr16
jb
mov
or
or
or
fistpll
insl
leave
inc
rcll
xor
or
or
mov
jmp
rcpps
mov
enter
mov
mov
hlt
add
pop
lock
andl
test
fldt
sub
push
es
push
je
pop
nop
addr16
inc
push
dec
out
pusha
adc
dec
ret
sbb
adc
scas
xor
pop
and
adc
mov
and
lea
sbb
or
add
test
push
movsl
dec
shll
orl
or
mov
add
sub
arpl
push
cmp
ds
add
jmp
aas
dec
adc
sbb
out
adc
fdivs
sbb
or
jae
xor
jge
stc
add
mov
push
push
outsl
or
dec
sarl
cmpsb
jg
loopne
or
adc
enter
mov
and
and
xchg
stos
and
inc
into
mov
sbb
mov
push
jbe
xor
cmp
gs
jo
outsb
sbb
adc
dec
enter
mov
jns
push
adc
loopne
mov
adc
test
mov
xchg
adc
sbb
rclb
mov
dec
mov
lds
push
push
adc
icebp
sbb
mov
pop
aaa
cwtl
jne
xchg
cmp
stc
xor
aaa
sbb
mov
or
xor
je
mov
sbb
ffreep
cmp
in
in
or
pop
pop
hlt
cmp
in
xchg
es
pop
adc
push
shlb
or
hlt
test
ljmp
inc
dec
jb
fsubrp
popa
dec
call
mov
mov
nop
or
xor
fs
xchg
addr16
xor
sbb
gs
in
dec
lods
mov
cmp
call
enter
call
and
into
push
and
dec
mov
sub
sbb
mov
xchg
sbb
mov
jnp
es
and
pop
and
xor
ret
adc
es
imul
jnp
imul
cmpsl
push
mov
iret
loop
lock
leave
subb
daa
add
dec
in
cwtl
mov
mov
in
sub
cwtl
loope
or
dec
jle
mov
push
insb
sub
pop
leave
pop
and
mov
and
push
or
xchg
dec
jmp
fldenv
xchg
rcll
xchg
mov
mov
std
and
rcll
call
pop
imul
push
dec
bound
inc
jne
repz
push
ljmp
fdivs
or
xchg
mov
xor
cwtl
inc
push
imul
and
sub
push
movsl
jmp
and
mov
mov
enter
add
inc
adcb
test
jmp
push
mov
dec
push
nop
and
cmp
sbb
sub
fists
rcrb
and
outsb
repnz
lods
lahf
sub
push
enter
cltd
sub
in
cmp
inc
inc
jmp
loopne
jae
push
adc
lock
pop
jle
add
or
out
sub
inc
pop
or
and
dec
or
ret
push
fidivl
push
in
out
enter
leave
sub
out
jns
adc
rclb
movsb
out
dec
nop
inc
cmp
sub
rcll
jns
pusha
xchg
lea
add
jp
xchg
ds
shll
enter
imul
mov
xchg
push
dec
push
inc
leave
xor
bound
xchg
dec
pop
rolb
or
movb
pop
jnp
adc
out
adc
inc
ss
movsl
jg
sub
sub
testb
fstp
imul
std
ret
push
xchg
and
orb
jae
dec
pusha
in
addb
add
rclb
aad
adc
imul
das
pop
jo
addl
push
arpl
inc
subl
jns
add
aas
sub
push
push
fs
jae
imul
inc
fisubrs
xor
in
stc
push
add
push
adc
push
addb
mov
movsb
lods
mov
adc
sub
fildll
pop
sbb
dec
jmp
adc
push
imul
jae
pop
inc
jge
sub
in
jne
and
mov
aas
jmp
fildl
aam
xor
xor
push
sub
cwtl
icebp
add
neg
ret
cvtps2pi
lods
bound
clc
sbbl
jmp
outsl
ds
sbb
and
andb
xor
xchg
add
push
rclb
aaa
push
fwait
rcr
js
mov
or
mov
sbb
or
das
nop
cmpsb
add
in
sbb
mov
pop
pop
add
push
xor
pop
add
xchg
push
sub
pop
mov
out
dec
shrl
adc
xor
loopne
add
mov
imul
cld
stc
push
mov
add
nop
fsts
aad
fcmovnu
imul
add
add
sub
inc
sbb
sbb
mov
add
add
push
xlat
push
mov
add
mov
or
out
fildll
inc
dec
mov
jnp
push
and
push
sbb
add
ja
dec
jb
pop
test
dec
cmp
and
xor
cs
test
xchg
push
mov
xor
jmp
sti
push
jb
dec
xor
adc
cmp
popa
add
addr16
loope
adc
mov
sbb
test
adc
push
sbb
pop
push
lods
push
xor
sub
sahf
or
jmp
es
mov
outsl
loope
push
pop
insl
sub
pop
jmp
inc
adc
push
cmp
and
add
xor
adc
push
rcr
add
fildl
unpcklps
rorl
or
inc
test
imul
inc
inc
das
pop
push
jo
and
xor
mov
enter
mov
xor
into
fs
out
xor
lret
sbb
pop
inc
push
nop
mov
das
lahf
hlt
fildl
movb
push
and
mov
inc
sbb
pop
lods
sub
dec
xchg
adc
xor
xor
inc
rcrb
add
and
pxor
mov
loopne
aad
pushf
dec
push
cmp
cmp
movsb
dec
sub
mov
jo
push
or
inc
aad
loope
lcall
pop
sbb
cld
pop
xor
inc
or
mov
xchg
loopne
inc
nop
mov
jno
data16
adc
push
mov
adc
pop
inc
inc
rcr
jo
dec
stc
push
dec
fcmove
enter
sub
push
inc
leave
add
pop
xchg
pushf
nop
push
push
xor
mov
pop
nop
add
push
movsb
imul
imul
repz
es
xchg
pushf
cwtl
mov
xor
and
dec
and
cmp
add
pop
fisttpl
test
push
pop
dec
pop
lahf
inc
and
or
sub
lahf
push
mov
cwtl
adc
pusha
mov
sub
push
dec
push
lcall
pop
insb
xchg
pop
hlt
mov
pop
inc
in
leave
xor
pop
jecxz
icebp
push
decl
cs
and
fisubl
xor
push
dec
test
xor
jne
mov
les
lds
lods
outsl
sub
dec
jne
lds
inc
scas
gs
inc
ret
push
xchg
cmp
push
imul
xor
mov
movsb
adc
sub
lock
insl
pusha
lcall
and
and
cmp
fildll
xchg
xchg
andl
sub
addb
push
push
and
nop
push
fildll
dec
popf
jle
fistpll
aaa
or
or
arpl
jno
and
mov
cmpsb
lea
mov
imul
shl
out
xor
mov
mov
lcall
dec
and
inc
or
incb
cmp
cmp
and
in
adc
add
pop
out
lods
add
push
and
jns
mov
and
mov
adc
fmuls
loop
add
xor
sub
lds
into
pop
pop
ror
nop
sbb
pushf
jle
xorl
push
cltd
push
lods
mov
shl
inc
icebp
push
lcall
sub
scas
xchg
daa
fildl
pushf
add
adc
jb
mov
sarl
mov
dec
leave
inc
mov
imul
and
mov
mov
pop
cmpl
xor
rolb
lods
dec
testb
mov
inc
or
mov
rolb
pushf
fmuls
aas
outsl
and
pop
and
add
popf
adc
fsubrs
push
mov
ds
mov
dec
je
test
lds
movsb
clc
mov
add
clc
jp
cmp
dec
fisubrs
push
jmp
inc
lock
adc
fs
hlt
add
in
or
fs
arpl
or
outsb
push
adc
iret
xchg
adc
lods
sub
add
les
inc
mov
dec
xchg
shll
or
loope
sarb
or
and
xchg
jno
rcll
mov
cmp
mov
push
repnz
jle
cmp
mov
popf
rorb
or
leave
sub
pop
or
ds
lock
pop
pop
in
xor
test
inc
sub
add
cwtl
add
add
cmp
fsubl
mov
arpl
hlt
test
sbb
inc
mov
ret
pop
push
or
mov
sbb
es
ret
sti
sti
inc
enter
insl
iret
inc
add
mov
test
mov
ss
mov
fstps
inc
cmp
push
inc
shll
push
mov
aaa
add
adc
dec
leave
popf
inc
sahf
push
sbb
xor
adc
enter
xor
mov
cmpl
orl
lock
loop
pushl
add
xchg
int
stc
cmp
sub
call
xchg
into
push
or
loopne
xchg
insl
lock
in
push
fsubl
xchg
dec
rolb
cmp
inc
xchg
fcom
mov
or
shlb
enter
subb
jmp
xor
jbe
cmp
jne
mov
int
adc
push
dec
push
les
mov
cmp
shrb
xor
lahf
mov
imul
inc
pop
in
add
push
inc
mov
fwait
cmpsb
andl
mov
dec
fwait
daa
shr
push
or
daa
nop
or
cmpsb
push
inc
sbb
xchg
mov
mov
jb
clc
mov
rolb
cltd
mov
inc
fisttpll
mov
nop
mov
shrl
cmp
pop
nop
fisttpl
pusha
cmp
jo
gs
movsb
negl
movsb
mov
nop
ja
pushf
cmp
cs
mov
xor
cmp
stos
xchg
jno
fcoms
nop
aaa
nop
repnz
loopne
dec
mov
pop
mov
sub
and
cs
push
mov
sbb
inc
mov
and
loop
or
popf
xor
mov
xlat
xorl
mov
xchg
inc
pop
push
popa
add
mov
dec
adc
in
dec
mov
in
iret
pushf
inc
mov
rolb
jns
cmp
push
inc
xor
nopl
push
xor
dec
repnz
adc
aam
loope
pop
inc
in
fs
lods
jne
mov
out
mov
adc
inc
cmp
xor
push
dec
adc
imul
push
ja
dec
dec
ds
xor
dec
shll
jecxz
inc
sub
cmpsb
pop
and
push
xor
push
sub
popf
mov
push
aam
or
pop
sbb
xor
dec
popa
insl
xor
and
xor
dec
or
push
in
add
ret
adc
mov
cmp
pusha
and
test
dec
in
pop
adc
jnp
imul
insl
aaa
imul
fdivs
shrl
xor
aaa
rcl
iret
pop
pop
adc
jno
inc
fsubrs
xchg
imul
roll
insb
xor
enter
xor
cmp
les
les
mov
add
xor
mov
cmp
lahf
imul
daa
test
lcall
dec
pop
or
shlb
rol
mov
aaa
mov
les
mov
inc
dec
jge
ja
or
jno
mov
sbb
lods
cmp
aaa
mov
push
es
test
movsb
loope
push
cmp
mov
jbe
aaa
mov
ret
pushf
cmp
es
mov
mov
mov
ss
mov
ss
popf
nop
es
add
dec
aaa
add
ss
and
cmp
add
mov
dec
cwtl
xchg
add
in
or
mov
les
out
inc
push
int3
loopne
test
pop
mov
and
or
push
mov
or
and
sbb
aas
mov
mov
cmp
adc
cmp
je
push
sahf
or
bound
add
or
loopne
sub
dec
pop
add
js
or
xor
insl
sbb
pop
ja
data16
aas
es
dec
jmp
or
push
sbb
orb
push
sbb
pop
xor
lret
cs
fnstenv
daa
ss
pop
data16
sub
leave
sbbb
inc
insl
or
sbbb
sbbb
xchg
push
into
mov
testl
xchg
xor
rol
loopne
jg
mov
pop
jmp
movw
ja
test
mov
add
adc
xchg
and
push
adc
mov
or
adc
sarl
adc
adc
adc
sub
sbb
fdivl
push
dec
bound
jbe
jo
ret
mov
insl
xchg
push
popa
lahf
push
xchg
dec
push
pop
push
xchg
daa
or
and
inc
dec
imul
push
pop
xor
lock
fwait
push
daa
pop
xor
sbb
rcrb
je
mov
ret
dec
es
xchg
dec
jmp
dec
cmp
pop
mov
push
inc
outsl
sbb
add
mov
outsl
fcmovnbe
push
cmpsl
add
sbb
inc
jb
mov
in
aas
and
mov
xchg
pop
out
and
cmpsl
sub
inc
push
popl
mov
fwait
and
dec
push
inc
sub
push
push
dec
aas
inc
dec
pop
cmpl
cmp
lahf
mov
rol
mov
or
xchg
cmp
shl
leave
lods
out
add
ds
and
and
xchg
cmpb
xlat
mov
iret
cmpsl
testb
je
xor
add
or
xor
ja
jmp
and
sti
outsb
xchg
call
jb
and
xchg
or
mov
mov
gs
test
pop
clc
jbe
push
rcll
mov
cmp
push
jnp
sub
mov
and
jae
inc
push
movsl
inc
jmp
pop
ljmp
movsb
sub
and
dec
sbb
sti
sub
mov
push
roll
movsb
sbb
fdiv
jb
add
push
sbb
jae
xchg
xlat
mov
push
outsl
fistps
push
mov
xor
push
fistpll
iret
xor
popl
jns
inc
fistpll
popa
cmp
push
xchg
push
lea
popaw
test
fwait
sti
daa
or
cli
or
and
xchg
adc
mov
ja
std
das
iret
ljmp
dec
adc
orb
lock
add
sbb
sbb
xchg
dec
call
cmp
adc
add
add
testl
cmp
jnp
mov
je
nop
push
mov
pop
js
jne
ds
in
jns
inc
adc
sub
sbb
insb
adc
push
sub
dec
rorb
cltd
inc
adc
into
cmp
outsb
adc
or
pop
mov
adc
push
mov
jns
or
mov
bound
xchg
sbb
jbe
outsl
clc
dec
mov
fcompl
insb
fidivl
shlb
adc
mov
adc
fcmovb
fiadds
and
xor
xor
jp
adc
xor
shlb
or
adc
push
fisubs
jp
dec
add
lret
les
aad
sbb
jecxz
lahf
fucomp
mul
loop
push
repz
movsb
mov
es
pop
add
sarb
lret
imul
rcll
cli
mov
or
or
xchg
dec
and
xor
shrl
mov
sbb
data16
push
xchg
push
inc
push
cmpl
inc
pushf
mov
int
mov
add
nop
push
pop
shll
pop
mov
lods
fcoms
stc
sbb
xchg
aaa
dec
call
fisttpll
pop
inc
test
pusha
xlat
push
sbb
cmp
gs
fs
jmp
aas
jnp
mov
sub
gs
dec
or
jae
pop
add
xor
adc
rorb
lret
add
jae
int
mov
pop
insl
pop
mov
sub
and
jo
xor
inc
sahf
jbe
xor
mov
nop
mov
lods
pushl
popa
lret
push
adc
aaa
daa
mov
aam
rol
lds
add
scas
add
cmpsb
cmp
sbb
xchg
fsubrs
sub
cmpsb
cmp
rcll
fs
loopne
jp
pop
dec
cld
sti
mov
xor
or
lea
orl
je
fisubrl
imul
cmp
push
or
dec
stc
stos
pusha
test
or
dec
ret
addb
cmp
push
jb
sbb
or
inc
sahf
pop
pop
std
lret
mov
ret
push
stos
fdivrs
add
sti
addr16
add
push
jo
in
in
lret
sahf
or
je
push
xor
daa
jmp
loope
mov
fdivs
add
cmp
mov
push
ss
cmp
cmp
inc
xor
imul
mov
or
adc
inc
pop
mov
mov
adc
mov
loopne
push
pop
xor
int
les
or
jge
test
or
int3
jle
outsb
insl
jmp
and
mov
arpl
pop
out
stc
sub
addb
xchg
inc
pop
nop
dec
inc
loop
mov
inc
cmp
xchg
and
loop
adc
outsb
adc
mov
jns
adc
add
add
mov
daa
pop
dec
dec
or
inc
lods
mov
xor
aas
insb
add
dec
imul
pusha
inc
xor
iret
push
sarl
fadds
addr16
insb
inc
lea
pop
cmc
fiadds
add
xchg
sub
xchg
imul
cld
push
outsb
imul
inc
arpl
mov
and
inc
iret
push
shll
pop
orl
pop
jb
dec
sbb
jo
or
inc
arpl
push
idiv
sbb
adc
xchg
pop
dec
imul
popf
sti
lahf
xor
or
pushf
push
loope
movsl
pop
dec
dec
std
sub
mov
adc
mov
push
lods
mov
sarb
push
jno
mov
cmpsl
movsb
sti
mov
test
imul
ja
sbb
fwait
xchg
jmp
sbb
shrl
popa
dec
add
pop
cmp
xor
xchg
mov
push
lods
test
fs
aaa
and
aam
addr16
mov
in
lcall
push
adc
in
out
outsb
jns
inc
scas
cmp
inc
push
push
gs
xchg
daa
roll
js
cmp
mov
xchg
lock
dec
fmull
movsl
add
int
cmp
sti
sub
and
push
sbb
xor
push
mov
push
or
loope
iret
push
and
sbb
shlb
fldl
add
inc
push
jbe
or
dec
dec
daa
loopne
mov
or
cmp
or
push
sbb
pop
movl
sbb
add
into
outsl
popa
pushf
add
dec
sub
mov
test
or
lea
push
xlat
lea
mov
das
and
popf
fldl
scas
sub
adc
nop
pusha
pop
xor
dec
adc
aam
lea
add
jmp
lea
rorl
push
xchg
inc
aam
mov
aas
sbb
inc
notl
mov
stos
or
xchg
repz
xchg
jb
and
push
dec
or
xchg
and
or
outsl
push
sub
daa
outsl
dec
fbld
lret
mov
cmp
jg
xorl
movsb
ss
sbb
test
or
test
or
mov
or
inc
dec
jle
lret
cmc
sti
jecxz
mov
jo
sub
inc
mov
pop
mov
out
or
push
add
in
and
push
adcb
or
arpl
sub
inc
or
pop
or
lret
add
inc
inc
leave
pop
cltd
jecxz
jo
dec
inc
xorb
mov
mov
jge
pop
jo
imul
and
mov
add
xchg
pop
pop
inc
sbb
xchg
inc
aas
push
insl
pop
xor
out
cmp
mov
xor
mov
mov
ret
sub
push
and
popa
xchg
sub
pop
cld
jl
lar
dec
dec
dec
and
pop
ss
jg
sub
jae
jno
mov
xlat
mov
jmp
scas
aaa
repz
mov
adc
test
addb
adc
das
and
aas
xchg
hlt
call
mov
hlt
fidivrs
adc
add
xchg
test
les
pop
out
clc
sub
or
jne
sbb
push
mov
jno
jecxz
cmp
test
pusha
pop
push
rorb
or
dec
leave
mov
lret
arpl
cmp
inc
jle
pushl
dec
jns
push
lods
jmp
fs
ficoms
paddusb
or
xorb
out
sub
jbe
xor
push
les
or
push
add
mov
inc
sbb
outsl
jne
cltd
sbb
inc
xorl
out
in
lock
gs
inc
lods
aaa
stos
adc
or
call
jmp
and
clc
sbbl
add
inc
push
lea
mov
push
shll
gs
push
or
js
cltd
dec
push
xchg
sbb
inc
push
push
cmp
push
in
jge
pop
dec
pop
movsl
jge
sub
push
ljmp
cmc
sahf
mull
jg
je
popa
jae
aas
add
inc
cmp
jle
mov
cmpb
je
dec
adc
pop
enter
xchg
jmp
mov
mov
add
dec
add
icebp
mov
sub
and
adc
push
mov
or
inc
jb
push
inc
cmpsb
xor
dec
push
add
sub
adc
fstpt
fldenv
inc
test
mov
push
addb
scas
insb
icebp
inc
dec
popa
add
jne
sbb
pop
jne
mov
pop
ja
loop
daa
jmp
rol
gs
cmpsl
vpunpckhwd
xchg
mov
jl
inc
xor
cld
adc
jle
add
add
call
xchg
inc
inc
arpl
mov
inc
mov
mov
cmp
pop
dec
jne
mov
or
cmp
jae
add
jl
mov
xorl
pop
cmp
inc
adc
arpl
orl
out
push
dec
pop
pushl
test
mov
dec
popa
orl
stos
add
xor
jge
sbb
xor
vmovaps
or
push
mov
pop
adcl
ss
jb
fdivrs
scas
mov
lds
push
mov
mov
push
xor
cmp
or
push
push
pop
or
call
shlb
or
pusha
cmpl
mov
push
jns
dec
cld
rcpps
push
clc
or
cmp
hlt
or
add
jle
das
call
in
fidivl
or
in
and
pop
sbb
or
out
inc
call
je
adc
push
and
int3
dec
push
daa
push
add
hlt
add
mov
push
inc
lock
dec
xor
loop
mov
fistps
mov
xchg
sbb
scas
cmp
scas
push
outsl
lock
or
mov
das
dec
cmp
imul
mov
arpl
mov
gs
outsl
iret
sarb
push
push
imul
xor
mov
rorl
add
iret
push
call
jecxz
or
leave
repnz
add
out
mov
pop
arpl
adc
push
push
xchg
lret
movswl
adc
lods
push
mov
imul
inc
ss
cld
flds
and
aas
push
fldl
sbb
inc
fildll
cmp
sbb
fstps
sbb
add
push
add
ret
fwait
icebp
insl
jg
stos
or
adc
push
out
popf
cmp
sbb
pop
add
mov
add
fsubrl
xor
add
and
pop
push
adc
aam
dec
add
adc
aas
mov
or
jne
loope
movsl
push
cmp
cs
add
stos
cmp
jne
jno
cwtl
ret
bound
inc
fcoms
or
fcomip
cmp
adc
jo
out
adc
aaa
mov
or
dec
out
nop
add
xor
pop
pop
loop
add
jg
aam
test
je
arpl
hlt
xor
add
add
jmp
sahf
or
sub
lahf
jbe
lcall
hlt
pop
sub
add
ret
rolb
mov
aad
lcall
pushf
adc
imul
dec
data16
shr
call
in
fsubs
sub
sub
push
sub
cmpsl
in
push
subb
sahf
sbb
shrl
adc
insb
outsb
lahf
add
insl
pop
mov
cmpsb
imul
and
mov
sbb
jns
jb
aam
fcompl
xchg
xor
out
popf
lock
aas
mov
xchg
fadds
fstps
fwait
pop
push
lea
shll
aas
cmpsl
push
ljmp
imul
in
inc
pop
add
outsl
pop
sbb
sbb
xor
lret
or
sbb
inc
ds
xor
fsubrs
adc
ret
pop
mov
xchg
cmpsl
test
mov
sub
xor
add
shrb
add
rcrl
sbb
inc
fstl
rclb
xor
add
loopne
add
inc
xchg
inc
mov
push
icebp
push
fsubr
lea
mov
dec
dec
cmp
jl
adc
sarb
mov
cmp
fsubl
mov
pushl
dec
xchg
xor
pop
mov
out
and
ds
arpl
sqrtps
ja
or
mov
xor
test
std
adc
idiv
cmp
mov
pop
mov
push
xchg
push
inc
bound
dec
xchg
adc
and
stos
cmpsl
outsb
inc
xor
repnz
sbb
jno
adc
add
pop
xor
subb
int3
movsl
loopne
add
push
or
adc
mov
leave
add
ret
pushl
addr16
add
negb
incl
inc
pop
into
push
mov
mov
xor
adc
mov
or
mov
pop
inc
jb
pop
roll
pop
mov
sbb
inc
sbb
push
xchg
pop
clc
mov
clc
sub
cli
out
clc
xchg
inc
mov
xchg
xor
or
and
adc
popa
cwtl
aam
in
js
leave
in
fisubrs
xchg
jg
icebp
fnstsw
and
mov
shl
sub
xor
fildll
jle
xchg
loopne
sub
loopne
mov
mov
or
or
mov
sti
xlat
int
pop
sub
jl
mov
mov
inc
dec
jne
sub
and
aas
lcall
stos
jne
mov
xor
add
fsubr
sbb
push
dec
les
jbe
add
aaa
lea
out
push
adc
aam
add
and
inc
sbb
ret
sbb
ror
lea
xchg
push
rolb
into
leave
inc
push
lods
dec
cltd
push
adc
pop
jb
dec
or
mov
fmull
loopne
in
add
adc
cmp
push
inc
cmp
xchg
dec
jmp
pop
shll
sbb
dec
dec
out
shlb
cmp
jne
lcall
sub
add
mov
pop
imul
aam
dec
jg
or
not
mov
mov
add
add
mov
push
sbb
push
inc
scas
sbb
lea
push
pop
fsubrs
adc
or
cmp
cmp
cmp
fildll
and
outsb
pushw
push
push
ljmp
bound
arpl
mov
cmpsl
adc
int
daa
xchg
inc
daa
add
mov
and
in
mov
loopne
push
std
inc
gs
adc
dec
xchg
dec
push
fdivr
xorl
jbe
nop
cmp
ja
adc
mov
or
dec
inc
ljmp
fwait
gs
repnz
xor
fs
add
mov
stc
adc
ret
mov
jmp
sti
mov
ret
mov
shll
push
add
lock
cmc
cmp
jnp
adc
dec
inc
push
leave
neg
testl
mov
mov
push
fsubrp
dec
lahf
clc
fwait
mov
and
mov
sti
add
push
in
mov
icebp
mov
mov
mov
cmp
add
hlt
adcl
or
jnp
jne
mov
outsl
or
sbb
or
jo
sbb
dec
push
inc
or
mov
sbb
mov
mov
push
nop
int
idivl
lock
arpl
jb
pop
ret
inc
or
hlt
inc
sub
add
testl
jnp
jmp
cmp
mov
mov
push
mov
cltd
mov
je
test
cmp
jmp
daa
xlat
dec
insb
and
and
fsts
and
daa
dec
dec
repz
sbb
pop
mov
inc
dec
cmpsl
les
pop
pop
adc
mov
divl
cltd
call
jnp
mov
jp
inc
das
loopne
test
adc
sbb
push
enter
jne
repnz
adc
pop
loope
pop
sarb
mov
loopne
adc
lock
jns
add
sbb
pop
je
and
enter
imul
enter
sbb
xor
push
int3
and
dec
xchg
in
rorb
js
jmp
or
pop
jge
push
popa
sbbl
inc
scas
lds
sbb
push
fldt
loopne
mov
mov
mov
int3
test
cmp
cmp
data16
int
ds
and
sbb
push
int3
push
cmp
pusha
in
sbb
push
push
repz
rorb
xor
dec
sbb
into
add
push
adc
xor
push
dec
pop
xchg
fadds
adc
xor
or
inc
and
les
rclb
aad
sbb
jns
jns
push
or
clc
in
xchg
rclb
cld
inc
sbb
inc
sbb
mov
pop
or
rolb
mov
outsl
loopne
push
mov
pop
or
pop
jbe
sbb
sub
jl
jle
pop
cld
xor
dec
jp
movzwl
mov
sbb
mov
jae
ret
jno
adc
pop
testl
test
mov
stos
jp
test
sbb
lock
xchg
in
mov
in
loopne
pop
insl
jnp
add
mov
addb
jbe
sbb
bound
add
sbb
movsl
mov
lret
jl
sub
dec
jnp
add
add
xchg
mov
xorl
cmp
cs
and
push
push
stc
ret
js
fstpt
mov
rcrb
adc
sbb
push
pushf
xor
pop
sub
aam
lock
and
movsl
add
stc
cmpsb
stos
adc
pop
push
cld
out
fcoms
scas
xchg
push
les
cmc
subl
jae
jne
mov
mov
mov
sub
cwtl
add
adc
and
repz
inc
jbe
sti
mov
pop
sbb
jae
jae
xlat
les
call
cwtl
xchg
movsb
cmc
jl
ds
nop
cld
cs
and
dec
cmp
mov
xchg
cmp
sub
dec
pop
lcall
pushf
popf
sahf
orl
lahf
addb
addl
xchg
mov
xor
enter
jb
xor
and
jne
enter
ja
enter
jns
jnp
rorl
jge
jge
dec
push
enter
jle
add
inc
int3
sti
push
fs
outsl
pop
push
lock
mov
inc
lock
nop
stos
push
mov
pop
push
cwtl
xchg
fdiv
pop
pop
mov
lea
push
lahf
pop
mov
and
inc
jg
bound
xchg
ds
repnz
inc
adc
sar
adc
or
xchg
xchg
lock
pop
push
push
pop
imul
push
clc
add
adcb
mov
inc
outsl
movsl
jb
mov
mov
and
mov
movsb
and
adc
adc
dec
or
sbb
add
and
mov
lret
inc
nop
xor
mov
lcall
jno
int3
jo
repnz
inc
pop
mov
cmp
inc
push
in
or
hlt
mov
sub
nop
inc
dec
insl
xchg
pop
xorl
mov
jnp
inc
rolb
push
jae
add
fs
and
add
nop
mov
ss
pop
outsb
mov
andb
andb
mov
jbe
popw
jecxz
clc
xor
jns
add
push
add
repz
sbb
inc
xchg
push
lods
push
mov
ja
inc
or
cltd
loopne
sbb
push
sub
pop
sbb
xchg
pop
dec
dec
jnp
push
push
jl
jge
cmpl
out
or
mov
jg
nop
ja
in
jmp
xor
orb
je
nop
xor
in
push
mov
jmp
pop
test
mov
sbb
movsb
sbb
mov
lea
add
out
dec
or
enter
cmpb
sarb
sub
xchg
sub
sarl
xlat
add
hlt
adc
negl
cmp
mov
insl
or
sbb
sub
adcb
sbb
sbb
adc
mov
pop
test
pop
inc
push
push
sbb
sub
cmpsl
push
sbb
or
sahf
mov
or
test
sub
out
and
adc
mov
inc
dec
mov
inc
orb
out
movsb
test
bound
imul
add
mov
inc
add
jge
aaa
cmp
test
jae
pop
loopne
ret
or
or
xchg
sub
inc
or
xchg
dec
cli
adc
cmp
mov
dec
xor
shlb
mov
mov
inc
icebp
dec
cmp
add
inc
pop
mov
pusha
mov
les
xchg
xor
xchg
popa
aaa
jge
or
fsubrs
jno
aam
in
popa
xchg
in
aaa
jg
jns
fs
call
sbb
add
pop
test
jmp
movsl
data16
fdivrp
or
shlb
push
shr
cmp
cmp
xbegin
daa
cli
push
inc
popa
xchg
xchg
test
cmp
mov
les
js
jnp
js
xchg
lods
dec
icebp
push
mov
xor
add
test
add
mov
inc
bound
stos
push
aas
das
imul
stos
mov
xlat
xor
movsb
push
icebp
sub
push
xor
xor
push
loop
in
mov
or
out
or
or
loopne
addr16
adc
or
cmp
xchg
sbbb
mov
inc
mov
add
jmp
xor
mov
lods
out
scas
and
sbb
icebp
sub
jo
lret
movsb
cmp
inc
add
dec
pop
shrb
push
inc
sub
mov
xchg
movsb
inc
mov
xor
dec
in
loopne
or
inc
shlb
pop
jnp
pop
mov
mov
adc
xor
test
jne
add
sbb
mov
xor
cmp
jle
inc
scas
xchg
jo
and
jp
add
sbbb
adc
add
and
push
sub
addb
add
jmp
xorb
jg
sbb
adc
mov
xlat
or
aaa
mov
popa
jg
sub
mov
movzwl
mov
mov
pop
pop
sbb
mov
dec
push
mov
and
sbb
inc
mov
xlat
jmp
jg
sti
std
jg
in
jne
jmp
cmp
sbb
test
pop
pop
pop
int
dec
adc
pop
pop
mov
cld
enter
cld
pop
mov
and
adc
loop
add
mov
bt
mov
mov
aas
jo
xor
or
mov
dec
inc
push
dec
inc
push
or
lea
sbb
mov
cmpl
mov
mov
mov
daa
bndstx
push
mov
stc
add
ss
test
sti
cmp
aas
pop
je
std
testl
jp
decb
sahf
dec
pop
or
call
jmp
call
jmp
dec
mov
sti
fists
fcmovnu
dec
or
adc
add
mov
inc
rcrb
jg
mov
stos
add
pushf
ss
jo
add
jg
hlt
movsl
in
push
push
adc
mov
mov
dec
repz
incl
or
testb
call
out
in
and
mov
mov
or
ficomps
lods
dec
iret
adc
xchg
insl
loop
mov
xor
popa
jge
mov
adc
or
push
add
and
cmp
jbe
lret
cmc
lret
push
leave
dec
pop
jne
xor
mov
lock
jle
aam
mov
daa
sbb
pusha
lods
rorb
cwtl
js
dec
add
jae
enter
sub
add
add
fwait
push
popa
or
and
pop
and
lock
pop
pushl
push
adc
cmp
mov
mov
sub
pop
pop
xchg
mov
push
inc
dec
js
or
sbb
xor
or
orb
mov
imul
imulb
cmc
movsl
bnd
add
xchg
clc
add
ljmp
and
clc
cmp
mov
lock
or
jge
test
gs
jno
sbb
dec
add
notb
mov
adc
leave
sub
xchg
imulb
dec
push
xor
dec
inc
stos
addl
mov
adc
shlb
lahf
dec
and
and
add
adc
cmp
mov
adc
xlat
or
movsl
popf
lcall
incl
cmp
pop
inc
mov
xor
call
or
mov
into
jb
dec
or
lods
cmp
movsb
xchg
ljmp
shrl
pop
fldcw
cld
icebp
rclb
ficomps
push
fadds
movsb
sbb
push
loope
cmpsl
dec
and
dec
cmp
fstpl
xchg
jo
pop
pop
insb
test
pop
sbb
insb
sbb
mov
or
enter
mov
jg
clc
jge
lods
sbb
xorl
loopne
and
mov
fwait
lock
jecxz
adc
pusha
scas
mov
or
ret
call
cmp
or
std
iret
imul
or
paddd
je
jmp
push
stc
or
movsb
jge
cmpsb
adc
in
lods
andb
mov
mov
fucomip
sbb
dec
je
jmp
push
sbb
movsb
fcmovbe
xchg
movsb
jg
push
scas
inc
push
add
adc
xchg
lahf
sub
push
sbb
push
jmp
xor
inc
xor
mov
xor
subl
and
adc
push
push
mov
ljmp
rorb
jl
or
mov
lock
sub
adc
xchg
sbb
add
jecxz
pop
orl
dec
pop
mov
iret
or
jno
add
sbb
jp
fidivs
mull
data16
in
aam
or
ret
les
clc
outsb
sub
aas
jne
xchg
cmp
jnp
push
cmpsl
cld
xor
iret
lods
pop
sub
add
add
push
add
cltd
shrb
stc
jne
sbb
xchg
and
add
js
ja
shll
pop
sub
lea
flds
int3
ret
fstl
movsl
test
mov
pusha
enter
or
ror
lahf
cs
psubusb
sbb
pusha
cs
jnp
adc
jmp
or
adc
inc
ljmp
clc
sub
in
sbb
pop
lea
adc
or
jecxz
mov
xor
loope
clc
orl
jno
imul
sub
push
dec
xlat
cmp
ja
mov
cmpsb
imul
bound
insl
inc
nop
mul
or
sbb
test
sbb
sahf
add
out
rcrl
jnp
or
cmp
or
gs
and
pop
lret
add
outsb
mov
add
xor
mov
xchg
xchg
rcrl
mov
xor
cli
adc
arpl
arpl
sbb
sub
inc
jnp
aad
push
fistpll
mov
push
outsl
xor
lcall
xchg
and
jmp
pop
adcb
jmp
adc
push
add
jmp
or
dec
or
fs
idiv
pop
lea
int3
jge
adc
cmpb
adc
jno
call
lock
sbb
adc
pop
mov
mov
mov
adc
lods
xor
je
add
scas
aaa
stc
ja
jb
popa
rol
ja
aaa
add
adc
jle
sbb
ja
ret
daa
and
fstl
adc
dec
inc
fisttpl
dec
add
dec
add
test
cmpsb
fwait
push
sub
inc
js
cmp
mov
push
inc
pop
add
rorl
xchg
aaa
push
xor
adc
xor
sub
das
mov
adc
mov
push
test
adc
pop
push
subl
xor
std
jl
ret
shrb
or
popa
addr16
pop
inc
inc
push
jbe
sub
lret
dec
and
add
mov
sbb
pusha
and
dec
sets
movsb
test
or
jg
xchg
mov
sahf
and
and
dec
jo
and
fildll
add
push
inc
insb
imul
mov
sub
push
insb
xor
dec
gs
mov
imul
push
sbb
jb
inc
insb
popa
adc
fisttps
xchg
or
inc
imul
bound
les
push
sbb
adc
xchg
adc
sbb
arpl
dec
outsb
insb
jns
fstps
cwtl
inc
rcr
scas
adc
pop
aaa
push
push
mov
out
jg
je
insb
or
cmpsl
fcoml
dec
imul
jb
addb
mov
add
push
dec
mov
gs
mov
add
xor
aaa
and
cmp
in
or
gs
sti
adc
fnsave
cmpsb
outsl
jno
rcl
inc
jne
fprem
jo
out
add
xlat
or
int3
inc
jbe
out
addr16
push
fldenv
pop
inc
cmp
stos
out
js
add
push
les
sbb
inc
movsl
xchg
jbe
push
shrl
mov
cmpb
fsubl
inc
cmp
mov
lds
inc
xchg
add
les
push
inc
xchg
and
int3
aaa
daa
and
pop
call
push
add
pop
ds
repnz
pushf
lcall
int3
xchg
sbb
mov
adcl
rorl
inc
and
inc
mov
nop
dec
pushf
mov
cmpsl
mov
or
jbe
inc
jge
dec
imul
jbe
aas
scas
inc
sbb
bswap
jae
pop
pop
inc
bound
fwait
dec
inc
imul
aam
enter
cmp
jo
push
mov
adc
mov
and
adc
cld
movhps
test
jo
aas
adc
adc
inc
push
test
or
jl
shlb
sub
add
ret
and
pop
mov
adc
nop
add
filds
xor
ds
cmp
add
mov
mov
scas
ds
addl
pushl
push
push
mov
loopne
mov
add
cli
push
add
lret
and
cmp
push
add
orb
sbb
mov
jae
shll
test
movb
or
and
mov
cwtl
dec
sbb
jbe
jbe
dec
cmp
or
mov
imul
aas
push
dec
push
pusha
add
sbb
sbb
loopne
mov
jo
mov
xchg
lahf
sbb
or
jp
push
lock
test
pop
add
add
xchg
sbb
out
xor
cmp
adc
test
pop
movsb
mov
mov
xchg
jo
into
addr16
iret
pop
sub
pop
imul
push
test
outsl
sub
je
leave
add
push
push
rep
push
rcr
loop
jbe
aas
insl
ja
pop
sub
inc
imul
mov
dec
fs
mov
add
xor
outsl
fcom
shll
testl
push
mov
rolb
sarl
test
adc
std
cld
sti
stos
add
rcrl
ds
lea
cmp
ss
and
sub
adc
pop
fs
imul
push
inc
push
sbb
lock
addps
adc
dec
mov
fs
push
incb
xor
mov
inc
dec
pushf
mov
aas
pop
outsb
sub
cmovns
inc
fs
jo
decl
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
push
lock
movl
push
adc
int3
aad
fdivs
xchg
lods
mov
les
in
loopne
loope
xchg
xlat
cs
push
jecxz
hlt
xchg
out
or
jbe
inc
outsl
data16
fwait
jo
frstor
or
insb
lcall
sahf
aam
in
or
jp
aas
andb
nop
jbe
nop
scas
pop
sbb
mov
movsl
push
sbb
xor
push
aam
movsl
sbb
int3
xor
mov
xor
fsubr
pop
ficomps
ss
or
adc
pop
mov
pop
in
mov
insb
mov
in
mov
out
popa
cwtl
out
xor
pop
je
call
jns
ljmp
pop
mov
adc
pusha
and
cs
jbe
mov
ds
mov
loopne
mov
jg
cmpsb
xlat
push
mov
insb
xchg
cld
pop
sbb
mov
push
jo
insl
add
je
pop
sbb
sbb
mov
cld
cmpsb
dec
push
jecxz
jge
aas
mov
xor
push
repnz
push
hlt
xchg
jne
rorb
or
dec
push
sbb
cmpsl
out
sub
cmpsl
xchg
push
repz
sub
aas
int3
out
adc
xor
xlat
decl
inc
jbe
cmp
inc
hlt
adc
or
dec
test
xchg
sub
mov
cmpsl
xchg
jl
push
les
idivl
cmp
cmc
repz
imull
add
loopne
repnz
daa
pop
and
sub
pop
testb
push
dec
push
shl
mull
or
cmp
sbb
js
inc
pop
repnz
incl
mov
andps
or
popf
out
mov
es
inc
es
adc
fs
es
and
fadds
sub
jb
and
xchg
in
lods
or
ret
push
divl
jns
push
xchg
mov
mov
int
jmp
pushf
adc
jbe
or
push
push
pop
lea
push
fnstenv
inc
push
cld
fs
call
fs
xor
jo
clc
push
sbb
sti
nop
pusha
into
add
or
sbb
adcb
rorb
int3
sub
stc
cmp
pop
xchg
sub
sbb
lods
dec
rcrl
pop
jl
jo
jo
xor
sar
cs
outsl
xor
js
andps
andb
inc
ror
fistl
pop
cmp
xor
xor
jo
adc
mov
aas
jg
into
mov
add
cmpsl
nop
pop
xchg
ds
sbb
inc
jns
jnp
mov
das
int3
ss
push
arpl
mov
shll
dec
sbb
and
pop
test
pop
dec
pop
call
rcll
stos
mov
mov
aas
lods
dec
mov
mov
sbb
fcom
mov
and
sub
adc
and
aam
dec
shll
andl
xor
add
xchg
pop
inc
int
dec
sbbb
stc
inc
push
in
scas
lods
add
mov
ss
push
scas
lret
jbe
fildl
push
clc
push
xor
pop
clc
dec
lahf
mov
inc
push
loopne
inc
clc
pop
and
sahf
xchg
xor
insb
xor
inc
push
jl
je
movsb
jbe
push
test
lods
push
sbb
ja
lods
mov
pushl
adc
add
stc
clc
push
push
push
push
insl
cmpb
addr16
push
imul
push
sub
js
push
mov
mov
push
pusha
fimuls
push
cmp
dec
scas
mov
push
sbb
push
or
push
pop
and
inc
mov
or
xchg
xor
jecxz
or
sub
outsl
loopne,pn
push
mov
leave
or
add
addr16
aad
ds
js
imul
loopne
pop
fdivl
adc
imul
in
dec
repz
pop
sbb
test
push
push
xchg
or
sub
mov
in
cmp
mov
pop
sub
insb
rcrb
push
lock
les
cmp
addb
push
loop
bound
ss
sub
scas
pop
mov
mov
push
pop
lcall
mov
mov
call
add
cltd
jne
outsl
and
mov
push
cmp
push
dec
loop
pop
mov
fs
mov
push
sbb
sbb
lods
push
dec
sub
push
sub
mov
mov
je
mov
aas
pusha
xlat
mov
jne
xlat
adc
pop
aas
mov
mov
add
repnz
or
or
fwait
lods
adc
fcompl
dec
adc
mov
jns
fimuls
cmp
jo
dec
cmpl
and
enter
xor
pop
je
das
or
cmc
and
jmp
fwait
cli
or
mov
orl
mov
xorb
popa
pop
aas
mov
movsl
add
push
clc
lcall
sti
jne
mov
and
jmp
sbb
pop
dec
loope
adc
add
add
fimuls
push
stos
icebp
stc
mov
sbb
pusha
jecxz
sub
outsl
repz
lea
orl
call
mov
add
in
pop
sbb
or
dec
and
ret
std
pop
jns
xor
xor
or
and
outsb
imul
and
sbb
clc
mov
jl
shll
je
imul
sarb
lahf
push
imul
rcrl
sbb
lcall
push
push
mov
mov
mov
inc
jae
or
notb
mov
push
inc
or
pop
or
jns
std
dec
jne
fadd
jb
inc
and
push
scas
hlt
add
add
repz
les
mov
cltd
js
add
mov
call
sub
lea
push
mov
xlat
mov
inc
ds
lcall
adc
cli
ljmp
dec
xchg
pop
gs
mov
add
cmp
lds
mov
and
xor
fisubl
insb
ret
adc
mov
xor
out
mov
add
dec
enter
sub
fsubrs
imul
fldenv
sub
jno
insb
lods
packuswb
popf
ret
inc
subl
mov
sbb
in
sbb
imul
movsb
adc
or
shlb
clc
push
movl
inc
or
jo,pt
inc
jnp
cmp
hlt
adc
adc
pusha
fcmovbe
cmp
inc
adc
dec
and
pop
iret
push
mov
inc
stos
pop
aam
push
push
fisubl
inc
push
dec
push
pusha
dec
shll
mov
push
xchg
lds
inc
and
xchg
push
jl
sbb
inc
rcr
xchg
sub
xchg
mov
dec
cmpb
dec
jmp
repnz
xchg
xor
leave
shrb
cmpsl
dec
add
pushf
xchg
push
pop
cmp
add
add
sbb
jl
push
sub
mov
sub
insb
or
add
pop
fsts
das
rcrb
push
push
in
shl
cmpsb
sbb
in
movsl
mov
sbb
jl
and
xor
inc
pop
add
dec
mov
push
fadds
xor
xor
xorl
outsb
inc
push
imul
orb
es
cmp
insl
xchg
cmp
push
xor
cmpsb
les
mov
call
cmp
aaa
add
fmull
lret
add
pop
adc
push
iret
add
sbb
sbb
aaa
movsb
cld
inc
dec
xchg
lret
out
popa
and
outsb
test
cmpsb
fldt
jge
and
int
orb
rorb
sbbb
adc
pop
xor
mov
outsb
xchg
sbb
add
repz
inc
sub
mov
xchg
inc
aad
xchg
pop
push
lods
movsb
ffree
cmp
cli
mov
std
and
jmp
jno
cmp
shll
out
ret
insl
adc
mov
enter
cs
enter
rcr
cmpl
jge
je
xchg
int
add
sub
xor
dec
push
repnz
lea
add
sti
js
push
dec
dec
inc
mov
dec
push
inc
lahf
dec
shl
out
xor
imul
add
jne
jae
pop
or
mov
mov
and
cmpsl
mov
inc
adc
enter
adc
dec
mov
pop
mov
pop
orb
mov
or
and
movsb
fwait
inc
mov
adc
leave
push
mov
ja
adc
notl
mov
xchg
mov
lods
inc
shlb
and
scas
cmp
mov
loopne
dec
sub
cmp
cmp
or
lods
sarb
shll
sub
pusha
lds
test
rcrl
pop
enter
jns
and
mov
xlat
es
mov
adc
dec
mov
mov
mov
fsubrs
mov
sarb
aas
pop
nop
orb
mov
xlat
jae
mov
add
addr16
add
xchg
in
aad
or
or
push
stos
xorl
divl
mov
enter
mov
pop
aas
pop
repnz
sbb
dec
pop
popa
and
dec
push
js
ret
add
and
lock
dec
mov
addr16
add
stc
sar
sub
xor
push
pop
inc
ds
mov
addl
or
adc
jnp
pop
add
call
and
push
lret
inc
daa
cmp
pop
loop
add
sbb
sbb
xchg
or
sub
mov
adc
inc
pop
add
jo
mov
sti
add
or
and
ss
mov
cmpsb
xor
loope
aam
sbb
or
out
mov
lods
mov
xor
and
inc
popa
ja
out
subb
adc
mov
bound
push
loop
mov
sahf
push
mov
pop
push
sub
push
add
sub
push
add
movsb
dec
ds
rcll
loope
mov
add
mov
addr16
mov
bound
push
inc
sub
pop
xchg
roll
mov
cmp
rorl
jl
ds
xor
sbb
xchg
stc
mov
icebp
subl
sub
outsb
pop
adcb
fisttpll
outsb
loope
mov
push
or
cmpl
test
lea
add
arpl
arpl
inc
cmpsl
inc
xchg
popf
ss
inc
pop
fucomip
ret
xor
inc
std
xor
dec
mov
cmp
mov
inc
or
sarb
push
pop
rcrb
popa
ret
scas
add
icebp
in
cmp
hlt
cmp
jns
dec
pop
pop
dec
pop
ret
or
and
neg
add
mov
inc
idivb
pusha
sub
scas
add
in
mov
adc
mov
cltd
mov
dec
sbb
pop
das
xor
inc
hlt
mov
sbb
testl
imul
mov
or
outsl
jae
jae
outsl
adc
loop
inc
adc
cmp
incl
fstpt
leave
cmc
add
inc
jmp
mov
test
hlt
cs
xchg
cwtl
add
push
sub
insb
lret
popf
cmc
icebp
cld
sub
test
mov
dec
or
sbb
fsubrp
push
mov
loop
adc
or
fwait
xchg
stos
shl
add
sub
roll
movsl
inc
outsb
push
jg
mov
je
jno
push
xorb
movsl
or
jmp
outsb
push
jb
adc
mov
pop
sbb
add
test
cs
lds
inc
inc
mov
add
ret
mov
int
sbb
pop
add
nop
icebp
adc
out
adc
ror
jmp
and
push
push
test
fs
xor
std
pop
outsl
scas
sub
dec
or
mov
cmp
jne
sbb
leave
daa
shll
jle
adc
push
mov
pop
inc
sbb
adc
and
cmc
jecxz
add
daa
mov
divl
adc
je
adc
mov
add
jp
hlt
or
ljmp
adc
movsl
cmp
mov
popl
push
mov
js
mov
sarb
dec
lret
xchg
call
push
js
adc
cmovle
sub
lret
pop
stc
shl
and
mov
arpl
and
or
aad
in
je
xorb
jle
test
addb
pusha
mov
nop
jne
xchg
jl
push
cli
pushl
dec
mov
sub
jg
dec
movsl
dec
xchg
rcl
inc
fstpt
aaa
dec
rorb
inc
push
sbb
mov
fiadds
lahf
push
dec
cmovbe
and
pusha
sub
and
test
cltd
mov
in
enter
add
mov
inc
notl
outsb
adc
xchg
push
imull
in
nop
mov
jmp
cmpb
mov
xchg
inc
jne
fucomp
mov
dec
add
cld
nop
ret
dec
cmp
add
sti
shlb
rcrb
in
push
sbb
aaa
bound
and
inc
dec
sbb
pop
leave
xchg
and
pop
cmpsl
fbld
pop
shlb
in
call
mov
enter
add
add
sub
fidivrs
lret
jge
ret
mov
or
add
daa
jbe
and
sub
shll
cmp
je
lcallw
and
les
gs
jmp
dec
push
mov
pop
push
xlat
je
push
lds
andl
aad
pop
in
andb
xchg
push
add
psubq
leave
je
stos
adc
leave
clc
out
ret
btr
cmp
jl
inc
fistl
jo
into
jmp
ret
push
jae
add
pop
bt
scas
and
push
test
dec
stos
jnp
sub
loop
inc
sub
cld
out
popl
adc
je
sbb
add
cltd
stos
cli
pop
ja
cli
popf
movsl
push
test
cmpsb
add
outsl
pop
ret
jg
cmpsb
inc
adc
jmp
inc
cmp
jne
inc
decl
jne
sbb
mov
push
enter
out
loopne
mov
add
xchg
mov
and
add
pusha
notb
dec
inc
dec
leave
in
sbb
lods
in
pop
xchg
sbb
cmp
movsl
xor
or
and
lock
sarb
jae
test
push
testb
pop
push
lret
and
dec
mov
test
ret
arpl
push
xchg
add
nop
xlat
push
mov
cli
aad
add
ret
mov
pop
js
sub
xchg
mov
pop
lock
movsl
fisttpl
pushl
jns
and
pusha
jo
mov
inc
or
aaa
add
add
push
jmp
icebp
and
inc
out
rcrb
sub
sbb
dec
popl
add
xor
add
dec
add
push
or
dec
fsubrs
mov
add
or
addb
cmp
lret
or
pop
sub
lretw
testb
dec
cmp
adc
push
push
fisubrs
push
sub
daa
push
push
pop
and
enter
test
inc
and
mov
and
pop
fprem
inc
mov
jo
or
or
xor
pop
adc
mov
sub
ljmp
add
cmpsl
mov
sub
adc
add
inc
filds
sbb
fisubl
mov
stos
jle
xor
cmpl
sbb
shl
or
sbb
mov
int3
or
sub
xchg
xlat
push
pop
xchg
inc
stc
loope
sbb
push
mov
jns
in
in
or
xchg
fidivl
mov
pop
cmp
mov
cmpsb
xchg
mov
add
add
add
inc
dec
pop
and
dec
jmp
jmp
imul
dec
and
adc
in
inc
hlt
xchg
mov
and
rorb
fbld
cmp
je
xchg
aaa
nop
popa
js
clc
pop
adc
pusha
in
add
mov
cs
dec
sbb
mov
jno,pt
into
je
sub
adc
cs
mov
out
mov
sarb
inc
out
jp
mov
scas
cmp
faddl
lea
mov
sub
and
arpl
adc
movsb
lcall
mov
shr
xchg
dec
xchg
lock
pop
mov
rorl
jmp
ret
cli
pop
sarb
lods
xlat
and
pop
rorb
ss
sahf
out
icebp
rorl
scas
and
lahf
or
xchg
scas
fcmovnb
add
hlt
or
dec
lea
mov
pop
rorb
push
dec
inc
shlb
add
dec
sarb
push
fidivl
in
or
bnd
xchg
pushf
sub
push
shl
push
cmp
dec
jbe
out
mov
push
xorb
push
rcr
inc
sbb
mov
dec
xor
xor
mov
js
aam
fbld
jns
in
clc
sbb
dec
xchg
push
shlb
ret
je
pop
js
psubb
rcll
adc
daa
lods
mov
sbb
cmc
or
cmp
sub
cmp
outsb
push
adc
decb
test
sub
xor
and
mov
dec
push
movsl
xor
mov
rcll
and
mov
xor
hlt
sub
addl
jns
pop
jae
xchg
mov
push
aaa
inc
mov
shlb
nop
cmpb
jne
sbb
cwtl
xlat
js
dec
inc
cmp
push
notb
push
sbb
inc
dec
jne
mov
enter
and
shr
lcall
test
mov
push
pop
sub
in
les
fstp
xor
pop
xchg
adc
push
pop
xlat
cmp
or
push
push
je
adc
or
fwait
xchg
jmp
add
push
cwtl
insb
test
pop
lock
or
fisttpl
push
arpl
mov
xchg
fimull
and
aas
pop
inc
jge
xor
sub
jb
sub
jge
or
adc
pop
ret
addb
pop
adc
mov
outsl
inc
rorb
lahf
ret
lahf
popa
sbb
mov
lods
push
adc
xlat
mov
jno
sbb
fimull
mov
ret
pop
iret
fsubs
adc
pop
and
test
int
and
fsubr
nop
sub
icebp
lock
clc
sbb
xchg
movsb
or
sbb
pop
xor
rcrb
pushf
mov
mov
jno
mov
xchg
insb
rolb
mov
adc
push
jl
enter
insl
repz
jbe
inc
add
pop
mov
lret
pop
push
push
add
or
inc
pop
xlat
and
add
adc
fbld
movsl
cmpsb
fdivs
xor
push
jno
lods
sbb
xor
adc
sbb
ja
es
xchg
je
dec
clc
sarb
repz
adc
mov
bound
cmp
cmp
lods
add
and
in
imul
adc
pop
cmovs
jnp
lcall
adc
ss
test
xor
or
in
sub
xchg
push
pop
stc
fdivs
xlat
xor
xor
fnstcw
pop
and
xchg
lock
pop
in
lods
jecxz
cmp
dec
cmp
add
add
in
popa
xor
add
call
popf
loopne
push
and
nop
fldcw
iret
popa
inc
push
movsl
jne
or
xchg
fldcw
iret
push
xchg
inc
dec
insb
ss
cmp
sub
and
sub
mov
and
stos
and
loope
aad
xor
leave
repnz
clc
and
pop
movsb
or
xchg
fidivrl
xor
lods
xor
xchg
sbb
cli
mov
shlb
sti
rolb
movsb
ficomps
mov
cmp
pusha
or
cmp
fisubrl
stos
rorb
and
mov
mov
fcoml
inc
cwtl
lret
add
sarb
xlat
dec
arpl
lgs
dec
inc
jbe
cmp
or
and
mov
shl
js
xchg
arpl
sub
or
fcmovnb
movsl
popf
xor
fsubl
add
inc
jg
xor
mov
adc
adc
testl
or
ret
rorl
clc
lret
aad
nop
pop
xor
inc
mov
pop
lods
negb
subl
and
add
in
in
push
adc
fsubrl
aaa
sub
cmp
inc
sub
adc
mov
add
pop
push
or
out
inc
dec
mov
scas
mov
add
in
cmp
push
sub
icebp
mov
xchg
xor
adc
adc
ret
aaa
js
xor
sub
clc
hlt
out
jmp
add
sbb
mov
mov
fcoml
or
push
or
push
lods
push
les
adc
and
fisubs
addr16
test
orl
ret
inc
in
in
adc
test
dec
and
xchg
shr
fxch
rcrl
adc
xchg
cmp
loop
lock
xchg
into
fimuls
outsb
fildll
lret
aaa
or
mov
add
mov
test
into
lret
popa
stos
adc
pop
pop
or
inc
pop
sbb
pop
or
mov
inc
push
pushf
mov
or
loopne
dec
loop
out
test
test
jl
inc
mov
mov
xor
inc
adcl
push
adc
leave
test
fldl
into
orb
push
inc
push
add
pop
loopne
sub
mov
adcb
pop
fstl
scas
insl
and
cmp
fs
add
loopne
rolb
push
shll
dec
shll
adc
mov
xor
out
pushf
push
push
outsb
loope
adc
mov
push
fbstp
xor
mov
pop
test
cmp
mov
mov
add
pop
push
or
ss
dec
inc
and
loope
cmpsl
push
int
scas
iret
loope
inc
xor
imulb
push
mov
add
leave
js
loop
or
lods
inc
sub
mov
mov
or
sub
and
inc
adcl
mov
sub
call
mov
adc
aad
inc
or
push
push
inc
jp
pop
pop
mov
lea
sbb
cs
ret
and
mov
push
mov
lds
push
repnz
sarb
faddp
jns
lret
and
add
ds
jmp
flds
add
cli
pop
mov
jmp
jnp
je
or
adc
jo
ljmp
or
mov
ret
jecxz
push
jb
out
jecxz
inc
mov
arpl
and
mov
loopne
sbb
or
adc
hlt
cmp
sub
mov
shrb
xor
test
and
or
cmp
aaa
fwait
in
mov
sbb
add
sbb
adcl
js
add
xchg
adc
adc
pop
add
jne
ss
xlat
add
pop
out
jge
xchg
nop
jns
push
cltd
push
pushl
sub
dec
sub
jb
jmp
xchg
xor
pushf
cmp
jne
pop
lret
inc
push
int3
mov
jo
mov
sbb
or
add
mov
pop
nop
sar
arpl
push
out
jae
push
cmp
jne
mov
push
inc
cmpb
shl
insl
rol
outsl
hlt
test
jne
test
popa
out
jmp
out
testb
cmc
dec
inc
or
mov
outsl
pop
data16
das
add
das
push
in
aas
inc
adc
cmp
jne
testb
inc
push
neg
orb
sbb
fcmovb
pop
inc
add
and
lods
mov
add
xlat
enter
adc
jg
add
lea
lret
add
movl
add
aad
dec
pop
cwtl
into
insl
jl
jg
or
dec
or
movaps
js
js
mov
imul
subb
jo
adc
jbe
jnp
push
mov
imul
push
xchg
add
punpcklbw
adc
inc
leave
inc
mov
bound
bound
sbb
add
and
inc
dec
jb
mov
sub
ds
xor
clc
lods
sti
in
xchg
test
cmp
push
andb
adc
mov
dec
gs
into
pop
xchg
inc
ret
les
xchg
add
lock
pop
nop
mov
rol
and
sub
fldl
mov
loope
iret
add
cmp
daa
pop
cld
rorl
test
sbb
out
inc
xchg
pusha
lret
pop
add
jb
add
clc
es
sbb
cwtl
ljmp
cmp
aas
mov
jmp
adc
jno
mov
xor
jae
adc
add
loope
dec
dec
hlt
inc
call
add
adc
xor
cli
loopne
xor
insb
fucomip
mov
xchg
lcall
push
test
ds
adc
aas
aam
and
jnp
add
dec
push
sbb
loop
mov
add
mov
mov
xor
push
cmpsl
push
scas
mov
je
sbb
imul
and
add
pop
int
je
xor
dec
xchg
and
push
imul
sbb
pop
ljmp
sbb
sbb
or
xchg
pop
mov
adc
sub
sti
dec
push
fisubs
cmp
test
jge
repnz
cmpsb
add
xchg
push
aad
adc
dec
nop
pop
mov
subl
jl
addl
lock
xchg
add
shr
or
mov
rcrl
cmp
inc
and
enter
jg
jl
std
xor
adc
xchg
cmp
jne
mov
out
mov
nop
pop
adc
mov
frstor
pop
mov
adc
mov
hlt
jl
sub
xor
inc
jne
xor
add
cmp
inc
out
sbb
adc
loopne
loopne
fistps
bound
ljmp
pop
push
fstl
stos
inc
imul
cmp
or
js
pop
dec
shll
sub
add
cwtl
in
jle
push
add
shl
xchg
cmpb
cmp
or
sti
jnp
ret
lfs
dec
add
adc
or
movsl
push
add
imul
push
ss
pop
inc
add
fsubrs
jno
into
insb
mov
sub
fwait
decl
fucomi
pop
push
push
subb
adc
or
pusha
mov
xchg
movsl
cmpl
fbld
sub
adc
and
add
sub
loop
aam
fiaddl
jg
add
mov
mov
sub
lds
cmp
das
loopne
lock
clc
lea
mov
pop
fwait
mov
inc
dec
pmullw
add
cmp
pop
cmc
int
or
cmp
xor
insb
pop
dec
inc
sub
mov
cwtl
shlb
or
mov
and
mov
dec
push
ret
mov
push
pop
inc
or
mov
sbb
jecxz
push
mov
fadds
sbb
ljmp
punpckldq
fsts
lcall
adc
jno
sub
dec
fwait
pop
add
ret
sbb
test
lock
enter
add
movl
imul
test
test
add
and
cli
cld
lock
ja
leave
or
add
push
pop
lea
imul
adc
aam
add
idivl
sub
mov
add
addl
pop
orl
movsl
or
xor
stos
call
or
push
fs
mov
sub
imul
dec
ja
mov
mov
test
add
imul
sub
subl
mov
je
fstpl
push
inc
add
pop
das
shll
loope
shll
mov
sub
ficomps
add
xlat
pop
lea
sub
popa
pop
test
pop
js
lods
xchg
push
sub
sub
mov
adc
scas
movsb
and
icebp
mov
mov
out
pop
xchg
repz
pushf
mov
enter
mov
loope
jbe
lea
dec
dec
add
ret
pop
in
xchg
test
ret
in
or
in
add
call
jmp
or
andb
leave
loopne
jmp
fcoml
roll
inc
sub
repz
subl
je
xchg
adc
in
mov
inc
dec
inc
aad
or
add
ret
jae
sub
sbb
cmp
sub
jecxz
aad
or
xchg
shrb
pusha
cmp
jae
es
or
adc
je
mul
mov
or
adc
add
sbb
cmp
outsl
mov
inc
xchg
nop
notl
jno
jmp
loopne
or
and
rclb
fisubl
fists
cmp
movsb
add
pop
dec
and
rorb
add
out
test
std
add
cmp
jge
adc
pushf
add
xor
cmp
pop
pop
sbb
or
adc
add
loopne
mov
jno
or
fidivrl
push
push
jne
scas
lea
jecxz
call
mov
test
lods
sbb
mov
pop
mov
adc
jo,pn
aas
mov
pop
xorl
subb
cmp
das
jle
out
xor
add
xchg
jle
cmp
jle
or
inc
adc
add
mov
sbb
mov
aad
popf
and
pop
adc
or
adc
dec
aam
stc
add
sub
xchg
divl
adc
aad
adc
cmp
inc
popa
cmp
jno
adc
xor
nop
cmp
loopne
and
mov
int3
icebp
or
sbb
lods
sbb
mov
ja
adc
enter
cld
jge
dec
lock
xchg
xor
adc
add
inc
mov
movsl
inc
pop
test
scas
mov
test
cmp
enter
push
daa
test
push
mov
lock
add
pop
insl
mov
mov
push
add
push
sub
inc
adc
add
pushf
mov
adc
mov
cmp
mov
dec
push
pop
fistpll
xor
and
fdivrs
jl
pop
dec
pop
lock
mov
pop
fisubrl
sbb
adc
dec
icebp
movl
or
mov
das
outsl
lahf
mov
pop
clc
popf
or
adc
scas
sbb
mov
mov
and
sbb
cli
push
imul
xor
adc
mov
mov
jo
push
add
setp
add
out
cmp
add
dec
xor
les
lahf
cmp
xchg
adc
sbb
or
sub
mov
ficoml
push
mov
popf
add
and
jge
ja
fiadds
add
push
jne,pn
lods
scas
mov
jmp
out
mov
mov
pop
lods
pop
inc
sbb
repnz
les
add
lret
pop
adc
stos
xchg
dec
adc
rorb
sti
outsl
and
icebp
pop
add
subb
add
push
stos
sbb
add
push
aaa
push
fidivl
movsl
sub
pusha
cld
mov
cld
pop
nop
xchg
inc
inc
inc
sti
daa
xchg
push
pusha
mov
out
pop
movsb
or
and
addr16
jmp
sti
lock
ljmp
adc
and
mov
xchg
jne
popf
jo
sbb
lret
pop
lock
movsb
sbb
and
cltd
ds
shrb
sti
or
and
inc
sub
sub
rorl
movsb
add
jl
inc
mov
push
mov
sbb
mov
mov
cmp
jge
shrb
rclb
push
sbb
jg
aaa
loope
leave
mov
add
pop
jmp
cmp
cltd
cmp
rorb
xchg
push
adc
xor
sub
ss
push
sbb
dec
jmp
push
dec
in
or
fwait
arpl
push
cli
inc
jmp
aaa
and
inc
cmp
jl
imul
cmp
fdivrs
aaa
inc
cmp
inc
andw
mov
sub
std
inc
mov
push
fists
push
std
xor
or
daa
aam
jp
ja
mov
xor
xchg
inc
push
dec
xchg
sar
pop
lahf
add
les
ja
or
test
ror
push
adc
push
push
shlb
adc
and
pop
mov
dec
mov
dec
je
inc
pop
lcall
add
xchg
pop
adc
xlat
ljmp
int
lea
add
dec
ret
cmpsl
out
mov
push
jecxz
sub
fldl
add
sbb
mov
sub
js
cmp
xor
mov
push
arpl
sub
add
loopne
fmuls
dec
adc
ret
clc
test
and
cmp
jo
mov
dec
adc
icebp
jge
add
call
or
mov
cmpsl
in
es
ret
pop
mov
ret
adc
data16
aas
jg
in
sbb
adc
movhlps
inc
js
arpl
stos
add
xchg
cmpsl
xchg
add
push
fidivs
hlt
movsb
jmp
aas
jo
cmp
jne
hlt
aaa
adc
outsl
insl
test
sub
out
pushf
pop
add
add
add
sub
bound
decl
pop
inc
aam
loopne
jne
cmp
push
call
push
add
mov
jo
nop
cmp
push
xchg
add
and
lock
cmp
sbb
lds
or
pusha
stc
pop
in
nop
movsl
cmp
addb
or
push
add
and
xchg
clc
flds
xchg
add
add
fbstp
in
cmp
push
add
push
pop
aam
js
jne
add
popf
and
nop
loope
xor
or
add
add
push
mov
add
xor
xor
negb
and
xor
fcomps
lea
fwait
add
clc
arpl
inc
push
ljmp
movsl
rolb
lock
insl
je
xor
xor
add
js
movsb
inc
ljmp
or
fcoml
repz
outsb
cmp
clc
sbb
nop/reserved
push
arpl
xor
ret
adc
inc
imul
add
scas
shlb
dec
jne
inc
mov
jbe
inc
sub
dec
inc
pusha
ret
xor
call
test
das
mov
sbb
movswl
jg
or
inc
xchg
jp
scas
add
es
dec
jne
jp
xchg
es
in
je
mov
mov
jmp
adcl
lods
adc
sub
sbb
sub
mov
add
ret
xchg
cltd
jge
push
jecxz
add
add
out
mov
pop
inc
mov
test
dec
ja
ja
mov
jle
sbb
inc
clc
daa
test
outsl
fsts
lret
mov
lods
cmp
lret
roll
cld
adc
jle
and
pop
pop
push
cmp
pusha
jl
dec
xchg
inc
movsl
jne
jp
adc
adc
jo
test
dec
scas
and
push
cmp
jge
inc
jp
mov
add
and
fisubrs
dec
jle
push
mov
push
ret
bound
adc
inc
mov
mov
mov
adc
cmp
lds
je
dec
mov
jmp
lods
add
or
lea
jae
push
cmp
mov
in
jbe
ja
adc
or
je
cmp
jb
incl
aad
mul
mov
popa
xor
or
or
fs
xchg
and
adc
jbe
loope
dec
lods
loop
js
outsl
adc
and
inc
xchg
jp
lods
inc
mov
sub
daa
add
icebp
lods
sub
adc
inc
add
inc
mov
sub
leave
jns
inc
cmp
or
push
pop
clc
xor
add
gs
nop
call
xor
push
std
and
mov
cmpb
jmp
js
test
mov
or
mov
and
divl
aam
out
shlb
sub
int3
ret
pusha
imul
and
mov
sub
call
dec
dec
push
cmp
and
outsb
daa
cmp
jecxz
sar
testl
popf
push
add
aam
jp
std
sub
jo
xor
in
sub
out
or
pop
adcb
pop
mov
in
sub
icebp
je
int
push
aad
addr16
jo
imul
cmc
xor
dec
jno
adc
iret
popa
das
mov
push
pop
mov
dec
sbb
adc
addl
aad
mov
dec
sub
lret
sub
xor
inc
sbb
das
add
mov
push
and
in
data16
and
movsb
subb
inc
shll
sub
sbb
clc
sub
jo
xor
dec
aad
pop
pop
shll
cmp
in
adc
pop
and
sub
es
lds
xor
inc
fdivs
test
cmp
nop/reserved
ror
gs
xor
fsubrs
and
popa
jge
sbb
pop
mov
testl
inc
fiadds
jns
in
jne
adc
fmuls
jecxz
insl
xchg
fnstsw
push
imulb
or
mov
jmp
out
jge
clc
add
ss
push
ds
push
pop
adc
adc
ret
sbb
push
mov
mov
pop
pushf
sbb
xchg
mov
mov
adc
sbb
pop
adc
pop
add
mov
sbb
in
call
fwait
add
in
dec
insb
mov
addr16
pusha
sbb
push
jne
fiadds
pop
lock
adc
shll
inc
or
mov
mov
push
xor
enter
and
mov
xlat
dec
or
aaa
or
add
pop
rorl
cwtl
adc
mov
loop
and
mov
test
or
in
adc
ret
scas
fadds
movsl
int
add
pop
xor
adc
repz
adc
mov
add
repnz
push
add
ss
sub
in
sub
pop
out
or
or
test
ds
sbb
push
xor
adc
inc
nop
sub
enter
ret
fwait
sti
and
lret
cld
fldlg2
sbb
and
jge
popa
div
js
or
popa
xor
jns
out
clc
adc
stc
sub
ds
add
cs
cmp
xor
push
xor
dec
insb
xor
push
xchg
paddusb
enter
add
sbb
in
mov
adc
and
mov
jle
iret
lods
push
call
cmpsl
adc
rcll
lahf
adc
orl
xchg
pop
mov
arpl
orb
imul
sbb
inc
sub
filds
and
je
xchg
xor
xor
sahf
incb
mov
or
pop
mov
or
sub
dec
fwait
leave
shrl
sbb
and
dec
xor
adc
test
xor
adc
xchg
pop
or
xchg
pop
xlat
and
or
outsb
push
ss
mov
movsbl
xor
mov
inc
mov
aam
adc
dec
addr16
cmp
ret
mov
push
insb
in
insl
sqrtps
sti
out
add
js
or
inc
lahf
mov
aas
in
mov
mov
jne
mov
or
dec
addl
mov
xchg
fmul
mov
xchg
in
pop
mov
sbb
test
dec
lds
imul
push
or
test
lods
fwait
pop
aam
mov
xchg
fidivrl
mov
adc
or
add
mov
add
fdivrl
mov
push
sbb
jns
adc
mov
hlt
lret
fadds
mov
push
cmp
adc
pop
xchg
sbb
outsl
test
add
inc
xor
test
mov
jp
pop
or
cs
insl
or
js
sti
dec
or
adcb
icebp
xor
jmp
or
push
cltd
lea
iret
add
push
jmp
jae
sahf
enter
cld
std
test
sahf
pop
and
or
xchg
fisubrl
add
pop
lea
ds
lcall
add
add
jno
or
cmp
add
mov
repnz
test
mov
inc
xor
sbb
jg
mov
add
dec
xor
cmpb
push
push
push
push
fidivrl
jecxz
and
out
add
dec
fadds
popf
mov
incl
fwait
or
stc
xor
mov
adc
movsl
push
in
xchg
add
pop
rclb
aad
daa
nop
test
adc
cmp
faddl
lods
push
push
xchg
adc
pop
cs
dec
xor
je
and
dec
push
pop
mov
xchg
add
adc
add
push
test
inc
or
aad
test
mov
adc
movsl
mov
loopne
insl
dec
cs
and
ret
lds
sub
call
dec
aaa
add
xor
pop
sbb
sbb
sbb
jge
add
sub
addl
dec
pop
jne
jge
sarb
aam
subl
test
aad
lcall
lods
push
enter
divb
aam
inc
es
cmp
mov
pop
inc
mov
idivl
push
ret
mov
or
xchg
xor
enter
rcrb
cmc
inc
fwait
aaa
inc
dec
repnz
cmpsl
in
ret
pop
js
dec
cmp
std
aam
nop
shll
xchg
mov
pop
subb
sub
fdivr
fsubl
cmpsl
mov
call
pop
shr
sti
sub
test
clc
subl
mov
sbb
int3
xchg
shl
cwtl
inc
push
sbb
fadds
pop
or
mov
mull
test
gs
adc
es
add
cld
xchg
je
sbbl
pop
mov
pop
pop
add
push
push
aas
jecxz
ja
shr
rcrb
add
and
xchg
sbb
fadd
push
or
movsl
test
mov
push
push
imul
movsb
push
mov
dec
jmp
fxtract
int3
add
jecxz
xchg
mov
or
xchg
addr16
mov
out
in
rcl
add
pop
roll
sbb
xchg
ret
loopne
repnz
dec
sbb
cmc
sbb
mov
push
add
test
out
movsb
outsl
or
mov
jb
cld
sub
jg
call
lods
cmp
adc
cltd
loope
aam
jmp
mov
fdivl
enter
mov
daa
fsubr
xor
xchg
aaa
fldt
mov
xchg
loop
out
or
aaa
sbbl
mov
loop
test
leave
shll
sbb
adc
add
mov
or
call
in
adc
jbe
mov
jmp
xchg
sub
xchg
imul
inc
push
les
scas
sbb
das
xchg
and
adc
adc
rorl
cmp
xchg
mov
fstl
sub
ficoml
jne
xor
fistps
pusha
loopne
dec
je
in
inc
test
mov
movsb
mov
shrl
ret
cld
mov
mov
and
icebp
out
xor
pop
hlt
dec
adc
xchg
cmp
push
ret
jecxz
mov
and
push
sub
aaa
rclb
sahf
xchg
push
movsl
push
xchg
mov
sbb
in
mov
clc
loopne
rol
cmp
mov
bts
jmp
lds
or
mov
pop
mov
loope
lock
mov
push
adc
mov
or
sbb
add
div
sbb
xor
add
flds
cmp
mov
or
dec
mov
mov
and
adc
mov
cld
sbb
push
and
sbb
xchg
rcl
adc
les
jae
cmp
add
xchg
push
cmpsl
cmp
arpl
int
call
ja
movl
mov
inc
andl
leave
dec
orl
push
dec
xchg
sbb
cwtl
adcb
sub
out
fidivs
and
or
pop
xor
ja
add
out
addr16
mov
add
xchg
and
inc
dec
mov
testl
mov
dec
ja
adc
pop
hlt
les
sbb
scas
rcrl
adc
sub
mov
imul
pusha
repz
sub
adc
adc
rclb
ljmp
in
sti
dec
sub
inc
insl
dec
test
xor
push
nop
push
mov
lcall
testb
dec
shll
inc
push
mulb
shll
insb
imul
xchg
xchg
sub
ja
shlb
mov
addr16
jmp
das
in
adc
pop
push
adc
or
cmp
xchg
add
mov
cmp
popa
inc
stos
xchg
pushf
mov
push
das
mov
and
cmpl
mov
pop
imull
add
sar
out
and
add
rclb
in
lock
cwtl
cmp
outsb
and
jmp
push
sahf
sarb
adcl
out
pusha
loop
push
div
sub
mov
sub
and
inc
ret
jae
jae
test
es
inc
pop
cwtl
pop
push
inc
push
push
out
or
push
mov
push
cmp
lea
and
movsb
add
popa
insl
andb
pop
testl
lret
rorl
dec
insb
push
clc
cmp
or
inc
inc
incl
inc
call
test
mov
repz
mov
xchg
pop
cmpsl
sbb
andb
lret
lock
push
add
mov
adc
add
adc
mov
dec
pop
jnp
imul
leave
jle
cmp
adc
test
and
je
inc
add
pop
aaa
pop
jg
orl
imul
mov
pop
push
or
adc
inc
xchg
aaa
cld
pop
mov
pop
cli
inc
loop
inc
popa
arpl
fiadds
add
inc
idivl
lock
aam
pop
push
hlt
rclb
in
push
inc
enter
shrl
ret
clc
faddp
mov
dec
lock
xor
lret
sbb
xor
mov
dec
jg
mov
dec
fadds
push
xor
sbb
or
bound
lcall
mov
cmp
stc
dec
push
xchg
call
or
inc
or
mov
sub
aas
sbb
xor
adc
xchg
daa
xchg
cmp
pop
jnp
ds
xchg
push
mov
push
or
cld
cs
daa
jp
nop
cmpsb
mov
mov
adc
cmp
cmpsb
jne
psubw
aam
imul
lea
rorb
mov
or
mov
or
push
nop
add
push
daa
sbb
inc
dec
js
fs
jmp
leave
orb
dec
insl
mov
loop
jo
enter
jbe
push
daa
pop
pop
xor
dec
icebp
sub
inc
push
mov
adc
pop
lea
sub
ret
sbb
and
int3
cmp
or
inc
xchg
mov
add
mov
in
pop
xor
or
dec
xor
mov
mov
lret
push
cmp
add
add
dec
mov
mov
nop
pop
mov
xlat
pop
cmp
addr16
dec
or
ret
mov
lods
ss
comiss
shr
cmpb
jg
outsb
cmp
loopne
aad
str
cmpl
in
stos
and
add
test
xor
pop
sarb
sub
push
dec
push
sar
adc
das
or
adc
add
mov
xchg
push
xchg
lods
popa
sub
dec
mov
sbb
dec
add
xchg
or
ss
cmc
push
dec
jecxz
ja
sub
adc
cltd
je
inc
fnstcw
push
rolb
insb
cwtl
fdivs
push
xor
xor
jne
sarb
mov
cmpl
ss
addr16
mov
mov
aam
imul
pop
popf
lock
dec
pusha
cmp
xchg
add
inc
cltd
neg
scas
das
add
push
ret
nop
pop
xor
imul
iret
adc
je
sbb
iret
movsb
sbbb
push
dec
lods
je
pusha
test
cli
jmp
pusha
test
jnp
loopne
insb
add
movsl
xor
push
cmp
lcall
jg
imul
dec
push
ficoml
sbb
sub
xor
ss
sbb
fisttps
shll
incl
stc
ficomps
adc
jl
xor
pusha
ret
add
leave
imul
mov
push
sub
sub
sub
sbb
cmpsl
pop
rclb
sbb
jns
xor
adc
pop
test
jno
ss
pop
jo
jg
pop
sub
bound
test
shrl
test
push
out
mov
lock
sub
cmpsl
ret
pop
push
orb
push
ret
and
xor
shrb
aam
into
xor
lock
sbb
fnstenv
lock
add
mov
pop
add
mov
arpl
jecxz,pt
sbb
and
add
outsb
mov
sbb
mov
push
dec
filds
cmp
ljmp
mov
cmp
aaa
and
lret
lcall
sbb
popa
nop
rol
lret
gs
leave
in
add
cltd
pushf
and
mov
sbb
pop
sub
push
and
xor
sbb
cmp
or
or
xchg
xchg
xchg
jno,pn
mov
cltd
shr
push
push
push
scas
and
and
xor
xor
daa
cmp
adc
add
adc
inc
lahf
aaa
rorl
je
mov
das
mov
mov
xorl
and
cmp
jmp
cmpl
je
jne
rcrb
adc
cmp
sub
iret
mov
inc
or
add
jl
pop
inc
dec
iret
jmp
jno
icebp
in
lea
push
fcoml
adc
out
es
dec
in
setge
pop
pop
lods
mov
add
inc
push
pop
jge
jnp
sub
xchg
xor
mov
adc
dec
icebp
jb,pn
pop
adc
mul
outsl
push
sbb
data16
inc
test
add
pop
add
jno
not
sbb
xchg
out
sbb
stos
add
push
mov
outsb
xor
jmp
xchg
movsb
xchg
push
adc
orl
sub
das
loope
dec
test
jmp
and
xlat
imul
sub
push
dec
mov
fbstp
cmp
and
jl
out
push
or
jno
jge
scas
shrl
mov
push
sub
fisttps
ss
push
pusha
into
add
mov
sti
sbb
mov
pusha
mov
inc
insl
adc
fsubrl
mov
movsb
adc
mov
adc
fidivs
insl
sub
adc
sbb
loopne
call
test
scas
xor
data16
out
or
sbb
call
xchg
ljmp
nop
sbb
adc
adc
adc
or
sarb
in
insl
sbb
or
inc
enter
sub
arpl
adc
inc
or
or
bsf
adc
mov
lock
jmp
push
add
sub
shrb
test
cmp
pusha
arpl
pop
xchg
and
xchg
pop
lock
mov
mov
lea
jg
inc
int
adc
imul
test
jmp
test
adc
pop
adc
or
sbb
scas
add
mov
dec
or
sbb
inc
adc
pop
adc
leave
xor
sbb
adc
or
sub
adc
imul
mov
sbb
or
scas
adc
in
out
mov
mov
fcoms
dec
and
sub
xchg
push
add
jge
ret
sub
in
and
cld
andl
push
ja
sbb
push
mov
sarl
inc
push
outsl
push
mov
sbb
push
push
es
mov
mov
cld
cmp
add
daa
adc
add
aad
push
je
popf
add
das
inc
inc
push
inc
notl
arpl
mov
cld
mov
ficoml
sbb
jg
push
or
pop
jne
cmp
pop
xchg
add
xor
es
jne
loope,pt
in
aam
popf
inc
loopne
inc
sahf
adc
sbb
clc
stos
push
push
mov
sbb
mov
ss
paddb
addr16
pop
dec
jp
push
mov
jg
or
pop
mov
sbb
jo
sbb
pop
rolb
push
inc
dec
jne
push
add
addl
test
dec
shrb
push
jo
pop
xor
aad
pusha
add
out
enter
jmp
sbb
push
push
xchg
sbb
lods
dec
movsb
fucomip
incl
adc
mov
push
add
jae
mov
cmpsl
in
xchg
push
or
cltd
addr16
sbb
leave
xor
por
xor
ret
jp
push
or
xor
push
dec
cmp
xlat
mov
inc
insl
fs
fidivl
xlat
test
loopne
push
mov
pop
jg
fwait
jmp
or
and
outsb
ss
push
sbb
push
mov
cmp
xchg
lock
xor
pop
mov
mov
loopne
or
repz
pop
dec
and
imul
xchg
or
scas
out
mov
jmp
xchg
and
fmulp
sub
cmp
xor
sbb
xor
cmp
jno
and
and
or
lock
push
out
jge
scas
adc
inc
jne
ss
jne
xlat
insl
add
adcl
lea
fcomps
dec
add
mov
insb
mov
mov
rcl
ss
and
pop
mov
xchg
shll
and
mov
push
sub
das
movb
movsb
stc
mov
loope
out
rcr
nop
ret
jns
xor
mov
push
jl
push
jg
testb
xchg
sub
sbb
pop
add
sarl
or
or
mov
or
addl
and
dec
add
and
adc
inc
scas
mov
add
pop
sbb
jmp
and
dec
movsl
sbb
ja
push
out
inc
push
nop
or
insb
das
cmp
in
es
js
and
nop
lock
or
ja
or
out
push
ret
push
push
fcompl
xchg
aaa
mov
cmpsb
ss
cmp
push
inc
stos
aaa
pushl
cmp
loopne
push
outsb
ret
inc
je
dec
push
out
jno
jbe
xlat
sub
adc
out
inc
pusha
dec
jmp
push
and
nop
add
sahf
cmp
pop
jmp
adc
cmp
add
pop
xlat
es
lods
or
cmp
jne
pop
adc
cwtl
popa
mov
dec
cmpsl
wrmsr
insb
paddq
push
adc
pop
push
adc
mov
push
cmp
lea
xor
xchg
cltd
push
js
movsb
dec
inc
inc
je
adc
dec
test
xchg
rcrl
cmp
cmpsb
pop
aam
and
mov
xor
int
rorb
sarb
pop
jmp
jno
dec
cmp
jnp
dec
xchg
test
sbb
cmpb
push
iret
dec
cmp
adc
add
iret
adc
pop
adc
inc
daa
fldenv
js
in
leave
jle
add
xchg
sbb
push
or
adc
jo
add
inc
inc
fsts
sub
and
pop
sti
mov
ds
xchg
lock
mov
mov
jne
cmp
add
lret
roll
lret
or
ret
test
xlat
push
mov
nop
fildll
inc
xchg
sbb
add
jae
fsubrp
pushf
mov
pop
adc
aaa
jno
lret
xorl
cmp
jns
pop
dec
cmp
jns
je
push
fisubrl
and
por
xchg
pop
mov
adc
jmp
invlpg
hlt
jle
mov
mov
or
jle
xchg
fwait
imul
inc
in
ret
insl
add
scas
xor
popa
add
push
in
jns
fsub
and
insl
loop
pop
or
adc
pop
push
lret
mov
in
push
cltd
add
xchg
and
orb
mov
repz
adc
push
subl
outsb
popf
std
test
push
testb
and
or
sbb
or
push
cwtl
addr16
push
sbb
loopne
cwtd
ja
jnp
sub
or
push
adc
adc
adc
ret
inc
lea
add
ret
cltd
push
sbb
push
push
adc
pop
daa
or
test
scas
filds
rclb
cs
pop
test
inc
sub
sub
sbb
xor
dec
xchg
mov
icebp
arpl
nop
pop
mov
daa
or
push
mov
or
test
scas
adc
inc
test
pop
dec
mov
add
push
xchg
mov
insb
pop
mov
and
push
insb
cmp
xor
and
adc
dec
psubb
insl
inc
add
adc
jb
pop
sub
pop
sbb
ret
aaa
mov
aaa
mov
lock
or
mov
jb
sub
and
pop
mov
shll
test
lea
xor
mov
movb
test
and
add
pop
add
std
jge
cmp
fisttpl
cmp
mov
push
cmp
or
or
mov
or
adc
sub
add
push
sbb
inc
or
adcl
add
mov
xor
clc
adc
add
daa
inc
arpl
cs
mov
cmp
sbb
inc
pop
popf
mov
test
adc
inc
insl
pop
dec
mov
mov
mov
mov
mov
push
or
jge
adc
xchg
sarb
test
cld
push
test
add
scas
insb
mov
gs
arpl
mov
xor
dec
fmuls
add
inc
andb
pop
jge
lret
adcb
xchg
push
inc
cmp
jb
out
in
inc
mov
addr16
pusha
xor
jne
fstl
adc
mov
sbb
pop
pusha
inc
nop
ucomiss
aaa
pop
jge
pop
xor
repz
lret
jp
or
xlat
in
push
dec
js
rorb
sub
ret
push
cmp
cmpsb
and
dec
ds
pop
and
sahf
mov
mov
jecxz
clc
add
aad
adc
lahf
cmpsl
cmc
pop
repnz
mov
inc
nop
adc
xor
mov
insb
add
cmp
xor
xor
mov
xchg
mull
fs
mov
jns
xor
push
mov
push
sbb
fs
sub
enter
lods
ljmp
or
loop
mov
cmpb
add
dec
xor
test
bound
adc
add
jmp
loope
or
jl
rolb
invlpg
cmp
mov
add
dec
movsl
xchg
mov
inc
movsl
cmc
inc
outsl
mov
add
movsb
ja
add
or
dec
cmp
jge
mov
fmulp
lds
adc
scas
or
or
fs
adc
movb
subb
daa
test
ret
cmp
dec
popa
sahf
mov
enter
inc
out
add
mov
xor
jle
cwtl
add
dec
hlt
loope
adc
ret
pop
rorl
mov
test
xchg
dec
sub
xchg
or
or
mov
dec
lock
or
push
jp
mov
dec
inc
mov
sbb
in
popf
pop
add
inc
ss
aaa
iret
xor
hlt
inc
adc
fdivs
jbe
inc
push
push
add
add
dec
je
sub
shlb
xor
mov
popf
aas
sub
wbinvd
daa
loop
xor
or
xor
outsb
push
insb
pop
inc
add
cmp
addr16
push
jl
inc
add
out
ja
jnp
sarb
call
xor
sub
sbb
dec
xchg
fdivrl
xlat
cmpsb
adc
add
mov
push
cmp
add
cmp
sbb
inc
into
cli
push
ds
push
mov
lds
push
mov
add
pop
arpl
or
mov
adc
push
cli
rol
push
sub
and
sbb
mov
sbb
and
sbbl
mov
dec
pop
add
add
pop
aaa
xchg
push
pop
dec
insb
daa
pusha
sbb
data16
aas
inc
lock
add
addr16
ficompl
cmp
mov
fimull
push
dec
add
mov
outsb
je
sbb
add
outsb
sarl
lock
xor
inc
cmpsl
outsb
inc
insb
outsl
jae
in
xor
inc
and
test
mov
xchg
lods
jmp
mov
insb
ljmp
js
mov
push
movq
pop
mov
data16
dec
mov
mov
mov
push
push
push
sti
dec
pop
xor
je
cwtl
mov
enter
push
dec
outsb
dec
popa
js
lds
adc
je
pop
mov
pusha
rclb
xlat
aas
cltd
xor
xlat
adc
sub
imul
movsb
aaa
movl
hlt
das
sahf
lods
mov
je
outsl
insb
das
orl
iret
rclb
sbb
push
sti
hlt
lods
sbb
push
dec
aad
adc
decl
int3
adc
push
cmp
inc
add
leave
inc
enter
xor
cmpsb
sar
cld
sbb
daa
xor
dec
sub
outsb
xchg
ds
dec
add
xor
adc
jae
inc
leave
dec
dec
popa
mov
and
frstor
shll
iret
aas
adc
mov
push
daa
loopne
nop
mov
mov
push
jo
stos
dec
addr16
mov
inc
xor
pop
mov
mov
sub
inc
adc
push
call
enter
pop
inc
aam
out
jmp
gs
outsl
leave
mov
xor
xchg
aas
pop
pushf
add
push
inc
jmp
enter
popa
insb
push
test
test
fs
add
ljmp
xlat
cs
dec
sbb
sub
fsincos
arpl
leave
popa
addr16
fbld
pop
enter
fbld
dec
outsl
jae
mov
rcr
rcrb
mov
andl
lds
push
aas
jg
xchg
push
dec
inc
js
imul
xlat
popl
mov
cmp
popa
jg
push
aas
and
sub
loopne
lahf
daa
iret
orb
aas
notl
xchg
mov
pop
push
xor
or
cmp
pop
mov
rcrb
lcall
xor
and
adc
jle
push
xor
cwtl
push
mov
leave
add
lahf
cwtl
dec
or
xorb
aas
dec
mov
push
mov
xor
fadd
push
push
cltd
xor
in
adc
nop
insb
je
jnp
leave
das
daa
mov
pop
icebp
sbb
int
adc
imul
push
les
incb
sub
add
xlat
lds
aam
outsb
push
and
add
dec
loop
xor
mov
and
push
xor
inc
dec
pushf
xor
mov
jle
punpcklbw
and
and
orl
enter
imul
and
xor
and
and
and
push
orl
pop
pop
pop
pop
or
enter
pop
xor
and
and
and
inc
orl
dec
dec
dec
dec
or
enter
dec
xor
and
and
and
aaa
orl
cmp
cmp
or
enter
ds
and
and
and
daa
orl
sub
sub
or
enter
cs
and
and
and
pop
orl
sbb
sbb
or
enter
push
xor
and
xchg
sbb
scas
movsl
pop
mov
lods
pop
mov
pusha
sub
pop
daa
push
or
movsb
sbb
cld
pop
dec
jno
jp
push
xor
jne
mov
pcmpeqb
test
jns
add
enter
jl
or
rorl
lods
lahf
ret
jmp
call
jb
scas
hlt
push
push
push
add
adc
orb
xlat
into
sbb
add
mov
or
mov
jbe
cmpsb
not
aaa
loope
mov
jbe
cvtdq2ps
pop
adc
mov
loopne
and
mov
add
and
add
push
and
xor
or
and
xor
or
inc
xor
or
push
and
xor
adc
and
xor
adc
inc
xor
adc
push
and
xor
sbb
and
xor
sbb
inc
xor
sbb
push
and
xor
and
and
xor
and
inc
xor
and
es
xor
sub
and
xor
sub
inc
xor
sub
cs
xor
xor
and
xor
xor
inc
xor
xor
ss
xor
cmp
and
xor
cmp
inc
xor
cmp
ds
xor
inc
xor
xor
inc
inc
xor
inc
inc
inc
and
xor
dec
xor
xor
dec
inc
xor
dec
dec
dec
and
xor
push
xor
xor
push
inc
xor
push
push
push
and
xor
pop
xor
xor
pop
inc
xor
pop
pop
pop
and
xor
pusha
xor
xor
arpl
and
fs
xor
push
imul
insb
insl
outsb
jmp
push
push
inc
inc
or
fildl
jo
popa
arpl
push
bound
test
mov
mov
into
flds
imul
mov
gs
sub
int3
sbb
ja
xchg
push
jae
in
movsb
out
mov
pop
popa
jecxz
outsb
xor
sbb
in
push
nopl
idivb
pop
jb
jbe
pcmpgtd
outsl
add
jae
pop
jo
xchg
push
dec
push
pop
push
outsl
std
mov
jae
jne
fs
aas
in
movsl
push
push
pop
cs
add
push
xchg
sbb
or
jo
jb
pop
mov
jo
and
bound
js
mov
add
dec
mov
and
add
add
dec
jae
insb
cmp
mov
add
daa
dec
push
add
sub
rcr
aaa
jbe
insb
sub
inc
jae
mov
ss
rorb
sbb
das
push
scas
das
and
testb
popa
das
dec
lods
lds
iret
addr16
or
faddl
das
inc
iret
push
shlb
cmp
pop
jo
push
lds
pop
pop
and
daa
shll
and
test
add
pop
push
cmp
mov
inc
lahf
mov
sahf
add
inc
daa
push
inc
jp
bndstx
scas
imul
mov
loopne
or
inc
daa
push
push
jg
popf
nop
jo
test
popa
jo
clc
jne
xchg
mov
das
push
jnp
push
dec
jmp
pop
out
dec
ja
jno
mov
dec
lods
pushw
cmp
push
cmpsb
dec
sub
cmpsb
adc
cmp
test
dec
roll
aaa
inc
fs
xchg
shlb
or
outsl
es
outsl
pop
scas
loope
imul
pop
push
ret
inc
push
popa
imul
lret
ret
mov
pop
mov
fwait
xchg
unpckhps
aaa
inc
daa
dec
dec
pop
or
xchg
inc
mov
outsb
push
das
push
roll
sub
js
das
jno
add
push
inc
inc
dec
and
xor
add
sub
inc
das
push
xlat
jno
in
lock
outsl
pop
sub
outsl
mov
jge
mov
or
sub
pop
negw
outsb
lock
fs
hlt
aaa
sbb
icebp
and
outsb
mov
jp
push
mov
ss
push
inc
pop
iret
in
mov
pop
xor
imul
jae
and
stos
jnp
orl
cmp
add
sbb
sbb
cmpsl
dec
pushf
adc
add
clc
push
imul
nop
push
jp
test
cmpsb
js
add
add
push
fimuls
dec
xlat
inc
pusha
mov
jg
jp
adc
leave
outsl
call
mov
sub
add
rcrb
dec
cs
pop
clc
aam
add
jge
pop
pop
pop
mov
lahf
ret
cmp
pop
add
mov
or
cltd
pop
outsl
repnz
sub
jmp
test
pusha
or
roll
push
rorl
push
mov
mov
and
pop
fldt
push
xorl
ljmp
mov
pushf
xchg
cli
add
mov
xchg
pop
dec
cli
add
xchg
inc
dec
dec
testl
lahf
popa
jb
mov
das
les
push
mov
sbb
mov
fmull
leave
sbb
je
mov
das
cmp
insl
cmp
xchg
cld
add
clc
lods
popf
add
mov
pop
aaa
jno
cmp
out
data16
mov
and
iret
cmp
cmp
mov
or
popa
jo
or
xchg
nop
mov
outsb
scas
aas
jg
jne
add
sub
ds
outsb
lods
addb
cs
js
cmp
xor
push
test
test
or
xor
jp
gs
orb
leave
push
das
add
mov
xlat
dec
or
das
add
insb
lahf
and
sarb
inc
les
fisttpll
cmp
or
lock
data16
pusha
pop
or
ja
inc
pop
sahf
dec
and
push
push
adc
inc
xchg
aad
dec
add
and
addl
inc
push
jo
test
xor
sub
sbb
xor
fisubrs
into
mov
repnz
mov
mov
outsl
add
pop
stos
mov
hlt
stos
push
mov
or
sub
jno
and
add
nop
stos
sbb
das
adc
pop
mov
dec
inc
inc
dec
dec
mov
rorb
les
xor
aaa
xor
sar
and
dec
jbe
push
inc
rclb
jb
cmc
or
inc
movb
and
ja,pt
pushf
jb
fiaddl
lods
daa
mov
pop
iret
daa
pop
loopne
icebp
lcall
adc
lcall
jns
imul
insb
lcall
xor
dec
shll
shll
mov
dec
idivb
inc
je
movsb
add
xchg
inc
mov
test
rcl
aam
xchg
nop
mov
mov
imulb
xor
inc
inc
xor
js
rclb
and
mov
xchg
rolb
dec
xchg
or
test
jnp
mov
cmp
in
inc
jnp
inc
mov
mov
sbb
fs
clc
xlat
gs
add
jmp
sbb
shll
jae
pop
fsubs
pop
xlat
dec
fwait
movsb
cmp
inc
mov
dec
xor
ss
sub
dec
xor
aam
sbb
leave
popa
les
rorl
sbb
adc
cmp
imul
popa
adcb
lcall
ds
sbbb
sbb
cmp
aam
dec
lahf
outsb
sbb
push
sub
and
fcmovbe
mov
mov
fiadds
cmp
call
dec
push
and
cld
push
imul
mov
lock
push
subb
cmp
ret
repz
in
mov
push
add
add
mov
call
xchg
cmp
adc
xchg
into
xor
jbe
mov
and
ja
adc
je
ja
add
adc
ds
dec
jne
sbb
mov
pushf
push
das
inc
les
sti
ficompl
aas
test
out
pop
xchg
add
mov
les
outsb
and
mov
jnp
mov
push
and
aam
sub
imul
sbb
xor
inc
push
insb
push
shll
jle
xchg
cmp
movsb
hlt
shll
xchg
call
adc
fs
jo
or
cpuid
adcl
rorb
loope
repnz
add
lret
orl
lock
push
inc
jne
movsb
push
adc
faddl
repnz
lret
mov
int
lea
push
rcrb
test
cmpsl
jo
clc
dec
popa
insb
dec
xorb
shrb
pop
add
inc
mov
and
xchg
sbb
xor
inc
add
clc
fs
gs
clc
add
hlt
iret
inc
nop
xchg
jl
fstpt
pop
dec
or
mov
nop
add
and
jle
and
lahf
popa
das
shlb
hlt
sbb
push
pop
fisubl
jmp
mov
dec
adc
jl
push
test
sbb
fisubrs
push
mov
daa
inc
arpl
jae
nop
out
sub
or
dec
inc
call
or
cld
movsb
ret
lahf
shrl
mov
ljmp
jae
pushf
sahf
call
fldl
push
xor
push
mov
or
fstps
nop
ficomps
mov
cmp
hlt
push
lcall
mov
lods
fdivs
cmpsl
add
int
daa
mov
and
sahf
aam
shr
sub
add
filds
aaa
outsl
jno
add
mov
or
add
mov
into
outsb
fadds
push
or
iret
add
push
nop
cmpsl
sbb
push
rorb
or
adc
mov
cli
xchg
lea
test
add
mov
enter
cmpb
push
push
mov
in
and
mov
mov
add
xlat
iret
dec
inc
or
jge
fs
je
cld
out
push
enter
sbb
ds
push
lahf
fldcw
ret
sbb
popf
or
adc
push
shlb
je
adc
fsubrs
pop
add
subl
mov
adc
cmc
stos
pop
jae
add
hlt
mov
push
mov
cmp
lods
and
sbb
mov
orb
outsb
cmpsl
loop
pushl
neg
cmpb
loopne
sub
inc
sti
add
mov
loope
push
sbb
stc
sbbb
and
std
jecxz
jbe
and
popf
mov
sbb
sbb
sub
cmp
jne
xchg
inc
arpl
adcl
lea
inc
jbe
jns
fucomp
add
sbb
jno
mov
and
xor
stos
dec
lcall
xchg
pop
push
pop
loopne
in
xor
add
adc
cli
into
xor
data16
pop
add
inc
rcl
add
or
psrld
adc
dec
push
in
leave
xor
movsb
inc
xchg
scas
xor
fdivrs
dec
add
push
and
mov
add
fisubrs
js
jns
push
inc
bound
lock
inc
imul
sbb
adc
jmp
or
movsl
je
fiadds
subb
push
push
outsl
dec
jne
pop
fiadds
arpl
add
pusha
push
dec
movsl
push
dec
push
adc
leave
or
xlat
fldenv
leave
lret
lock
push
repnz
mov
pop
loop
data16
adc
cs
icebp
add
jne
push
dec
and
xchg
das
and
sbb
mov
xor
xorb
daa
addl
rcll
rcll
inc
pop
adc
dec
xchg
push
mov
ja
fisttpl
mov
test
adc
cmpsl
push
lock
xor
in
or
xor
mov
or
mov
and
neg
and
les
shrb
sub
out
inc
loopne
adc
sub
and
icebp
add
xchg
and
nop
inc
rorb
aam
scas
jl
mov
fiadds
cmpl
ret
add
outsb
lods
movsl
mov
mov
movb
clc
addr16
in
push
add
jns
je
imul
aas
imul
xor
roll
jbe
aam
inc
insl
jge
clc
dec
mov
hlt
enter
mov
add
scas
in
call
insb
jb
jns
test
fisubrs
hlt
hlt
push
mov
lock
sub
in
add
or
jno
mov
sub
into
leave
cmpsl
cmpb
rcrb
test
adc
adc
inc
cs
rcl
or
mov
mov
or
test
lods
movsb
mov
dec
aas
inc
pop
and
enter
xchg
xor
xchg
and
das
loopne
popl
xchg
nop
inc
cmp
inc
jl
cld
cld
rclb
test
dec
and
iret
add
addl
andb
loop
or
jge
mov
jmp
or
shlb
push
push
jo
add
fnstcw
jne,pt
call
ss
pop
adc
in
dec
mov
fwait
or
adc
jmp
lds
sub
addr16
jmp
shrl
jmp
aad
fwait
inc
dec
jns
int3
out
rolb
nop
ja
test
js
pop
je
mov
in
fists
cmp
add
push
repnz
inc
pop
dec
mov
add
pop
jo
out
mov
adc
mov
arpl
jbe
xchg
pop
daa
add
or
out
sub
add
out
or
or
nop
mov
dec
push
sbb
inc
push
sbb
and
call
repz
push
dec
xor
data16
add
punpckldq
cmp
movsb
inc
xchg
xor
inc
dec
jle
xor
test
js
mov
mov
ficomps
inc
enter
adc
or
adc
mov
or
pop
jne
out
dec
das
inc
test
mov
sub
outsb
fnstsw
ret
pop
mov
es
popa
sub
pusha
lea
mov
lea
add
cmp
cmp
loopne
cmp
dec
lods
invd
adc
or
enter
and
xor
and
inc
adc
ss
movsb
clc
dec
lock
call
push
add
arpl
dec
add
dec
lcall
sbbl
mov
jge
cld
sarl
jl
lahf
pushf
movsb
fisttpll
iret
pop
sahf
enter
out
test
jg
push
mov
or
xor
inc
jbe
or
fwait
inc
jge
aam
and
mov
or
rcrb
add
push
jae
daa
subb
sub
cwtl
fisubl
insb
and
inc
xor
add
push
push
dec
xchg
sbb
push
mov
jmp
adc
test
mov
call
call
sub
jge
adc
or
and
mov
xchg
dec
xor
sub
sub
fsts
shl
repz
xchg
cmp
and
or
cwtl
ret
pop
inc
push
fs
push
cmp
cmp
sub
pop
repnz
adc
inc
pop
sub
jb
jns
inc
and
xor
lea
sub
mov
sub
sbb
lods
fwait
lock
inc
or
mov
je
dec
mov
jno
sub
jle
testb
inc
cmp
push
shlb
outsb
hlt
jo
jae
in
sbb
and
sbb
nop
lds
adc
cld
rcll
rcrb
adc
pop
inc
push
adc
and
xor
jns
sub
sbb
add
nop
sbb
arpl
inc
xchg
adc
fmuls
push
cmp
fdivrs
cs
in
cmp
cmp
ret
iret
divb
outsb
out
outsl
pop
push
jne
das
ds
dec
sahf
push
gs
add
xchg
rorl
inc
bound
jns
imul
jb
mov
mov
ja
push
insb
pop
dec
dec
jnp
jne
xlat
gs
dec
arpl
ss
in
outsl
jbe
mov
xchg
testl
add
jo
inc
add
popa
or
pop
pop
push
fwait
je
popa
inc
insb
outsl
bound
mov
insb
mov
adc
adc
mov
es
xlat
lock
inc
rorb
ja
adc
push
in
xor
idivl
fistps
adc
and
imul
push
jnp
pop
xchg
inc
and
std
sub
adc
jl
dec
dec
mov
pop
xor
inc
jp
pop
xchg
pop
sub
and
in
shlb
cmp
shlb
sub
adc
mov
and
mov
add
lahf
push
mov
pop
jo
push
hlt
sub
xchg
or
arpl
xor
sub
pop
xchg
cmp
adc
dec
or
add
xchg
and
adc
xchg
jne
addr16
push
jo
adc
das
test
ret
push
add
dec
sbb
cmp
js
sti
and
loope
insl
pop
and
mov
dec
jle
leave
in
test
and
shrb
push
inc
into
rcr
jecxz
sbb
or
shr
sub
andl
or
popf
pop
push
negb
sub
ret
xchg
lahf
jns
insb
ds
js
in
aad
pop
xchg
and
mov
test
rclb
sub
xor
pop
jmp
sbb
push
pop
popa
loopne
iret
mov
pop
call
dec
xor
hlt
mov
rorb
test
sub
loopne
in
mov
mov
enter
jae
adc
pop
inc
jns
shl
ret
clc
fcompl
jg
or
xchg
lods
jno
mov
out
xchg
sarb
das
or
sub
jg
add
pusha
ficoml
inc
push
and
adc
jb
xchg
xchg
xchg
sbb
cmc
bound
incb
cli
or
pop
and
sub
xchg
push
sub
adc
pusha
lods
mov
es
pop
pop
rclb
push
fdivr
mov
xchg
add
fcoms
inc
lret
fadds
xchg
dec
sarl
pop
dec
cmp
movsb
mov
push
push
mov
pushf
xchg
rcrb
push
mov
pop
push
lahf
dec
dec
and
and
or
sbb
xor
sahf
adc
and
testb
add
pop
inc
nop
add
cltd
push
add
push
xchg
add
shll
fs
cmp
stc
xchg
cmp
das
mov
nop
nop
and
xlat
ja
push
loopne
lcall
pusha
or
lock
cmp
inc
mov
pop
out
inc
in
adc
add
adc
inc
in
jl
add
push
pop
inc
stos
in
or
add
shr
add
nop
mov
mov
inc
jmp
mov
out
lcall
es
sbb
call
rcll
in
jmp
lea
pop
xchg
push
out
add
sbb
call
popf
mov
lsl
sbb
jmp
lea
dec
ret
adc
outsl
inc
xchg
mov
in
lea
push
daa
and
stc
negl
push
lret
adcb
sbb
and
testb
jmp
xor
dec
inc
inc
mov
dec
mov
mov
jns
fwait
mov
or
or
xchg
push
add
dec
in
or
and
push
and
loope
pop
mov
mov
push
ret
clc
cmp
xchg
test
xchg
pusha
fcomps
sbb
or
push
pop
test
into
and
and
aam
int
mov
loopne
iret
push
vrcpps
push
or
inc
cwtl
pushf
mov
dec
add
test
and
pop
jb
xlat
jmp
gs
sub
adc
cmp
sub
xbegin
movl
push
jns
mov
xor
in
xchg
pop
fdivrs
popf
xchg
jo
hlt
adc
xor
cmpsl
mov
dec
mov
fidivl
ret
fs
lds
inc
jbe
cmpsb
loope
or
cmp
xchg
ret
jns
sti
and
call
or
sbb
outsb
mov
popf
jne
lcall
fwait
ds
push
mov
mov
sahf
push
in
or
mov
repnz
mov
hlt
mov
adc
shlb
loop
mov
in
daa
jns
push
dec
dec
dec
push
inc
jb
xchg
pushf
inc
inc
dec
push
push
dec
push
enter
push
add
int3
repz
lret
inc
mov
sbb
mov
mov
mov
lahf
das
push
lahf
xchg
daa
dec
sahf
pusha
lahf
insb
lahf
js
and
fmul
test
mov
dec
cli
sahf
dec
inc
in
sahf
testb
das
dec
inc
push
inc
push
push
mov
sbb
pop
cmpsl
dec
push
jb
shll
inc
push
cmp
dec
dec
inc
push
dec
push
inc
inc
push
ss
dec
test
mov
jg
rolb
xor
xor
bound
dec
cli
push
sbb
adc
lret
sbb
and
cltd
cwtl
popl
xchg
stos
and
mov
fadds
or
jp
sub
pop
sub
pushf
inc
dec
fisubs
and
or
jno
pop
push
pushf
xchg
adc
mov
divl
jo
arpl
xorl
dec
pop
addr16
mov
popa
pop
popf
stos
xor
xchg
xor
xchg
add
add
add
scas
std
sub
cmp
add
mov
xchg
test
cmp
cmp
adc
mov
adcl
sub
fchs
pusha
xor
or
ja
mov
fcoms
test
jecxz
loope
adc
pop
adcl
adc
xor
cmp
jge
sbb
push
sub
xchg
mov
sub
js
sbb
movsl
in
fsubl
push
pop
das
fmuls
push
dec
and
es
push
pushl
or
cmpsb
daa
push
adc
out
lock
adc
add
cmp
sbb
push
adc
mov
inc
xor
xor
out
dec
mov
sub
inc
pop
add
dec
sbb
cmp
mov
inc
push
inc
jmp
inc
mov
push
pop
sahf
out
jmp
and
inc
and
cmp
jp
xor
jno
mov
jmp
push
fnsave
fldcw
enter
mov
test
fadds
xchg
add
sbb
mov
xor
jecxz
in
pop
push
mov
add
rorl
mov
fists
je
test
aaa
sub
je
testb
insb
sbb
fstl
imul
call
push
inc
ret
pop
fwait
pop
mov
add
loope
lock
inc
add
ljmp
test
jecxz
mov
ret
scas
cmovno
imul
ret
std
hlt
std
fcmovnu
or
mov
jns
in
or
cmp
xlat
mov
pop
mov
sbb
inc
xchg
mov
xor
xchg
dec
cmp
xorl
scas
aas
xor
cmp
cmp
test
jno
inc
sahf
sub
nop
dec
add
pop
jl
ljmp
or
add
lds
in
push
sbb
das
div
fdivrs
ficoml
pop
ret
cmp
pusha
das
or
sub
rol
and
push
jle
sbb
stos
shrb
in
in
jmp
xor
xchg
idivl
clc
mov
jno
out
push
inc
out
enter
or
sbb
pop
adc
test
rorl
mov
mov
es
add
ret
pushf
inc
imul
pop
add
or
sub
dec
mov
pop
rorb
aad
mov
xchg
test
xor
in
or
mov
and
insb
cmpsl
and
cmpsl
out
movlps
sub
mov
clc
adc
into
pop
mov
and
sbb
movsb
jbe
loope
sbb
add
lret
sti
dec
lock
test
add
and
lods
or
mov
or
enter
js
enter
popa
adc
sbbl
inc
inc
shlb
push
jns
sbb
iret
nop
lcall
xor
cs
adc
inc
imul
pop
incb
xor
push
xor
xchg
adcb
pop
mov
cltd
xchg
shrb
add
sbb
fs
dec
test
xchg
stos
xor
push
or
xchg
adc
inc
test
mov
push
nop
jp
lods
jo
fcmovb
aaa
push
pop
xor
lds
mov
stc
xor
xor
out
fs
inc
mov
xor
add
inc
jo
insb
fst
or
dec
cltd
push
jb
and
dec
sti
aad
push
pusha
xor
xchg
jnp
sahf
xlat
or
insb
js
repz
xchg
in
cmp
ss
cli
or
or
push
push
aas
pop
fisttps
cmp
inc
ret
stos
test
lock
testb
cmpl
lcall
adcl
xchg
push
mov
lock
inc
xor
pop
xor
movl
jg
lea
adc
and
mov
fs
cmp
cmp
mov
data16
or
outsl
fadd
or
adc
pusha
xchg
and
adc
or
sbb
or
outsb
aaa
movsl
lods
cwtl
and
inc
lods
lods
cwtl
mov
add
xchg
je
jae
sub
push
mov
push
fcmovu
insb
jbe
or
sbb
xor
imul
out
movhps
je
pop
cmp
mov
icebp
cmp
cli
or
jo
data16
push
and
int
jns
adc
or
pop
mov
pop
lods
aaa
add
add
pop
inc
cltd
dec
fcoml
dec
lods
jge
lea
or
loopne
imul
nop
mov
out
push
fisubrs
inc
lea
out
or
cs
ja
xor
or
jbe
nop
in
outsb
or
dec
add
hlt
aad
jnp
in
xchg
or
leave
add
and
cmc
mov
adc
mov
adc
mov
and
mov
xchg
cmp
or
xor
fcmovb
subb
pop
xor
mov
int
es
scas
lods
mov
in
mov
sub
xchg
into
dec
push
pop
add
push
mov
push
sub
pop
andl
mov
inc
add
push
add
add
sbb
arpl
sub
mov
mov
sub
and
sub
gs
push
xchg
inc
mov
nop
mov
fsts
sbb
add
stos
push
dec
movsl
inc
mov
adc
lea
fs
and
and
jo
mov
or
pop
mov
ret
pop
mov
or
fwait
mov
cmpw
stos
xchg
or
push
dec
inc
mov
cmp
add
and
mov
mov
repnz
push
add
addr16
xor
xor
push
xor
daa
daa
bound
sub
jns
sbb
xor
and
mov
insw
push
call
cmp
das
out
decl
incl
cmpl
mov
mov
je
push
filds
xorb
push
scas
pandn
movq
addr16
aaa
sbb
bound
out
add
cmp
adc
and
adcb
out
lea
sarl
adc
jns
add
dec
pop
pop
decl
mov
and
fs
popa
lahf
test
sub
cmpsb
sbb
adc
fmuls
test
cwtl
rorb
push
aas
dec
insb
rorl
int3
mov
mov
dec
or
mov
cmp
sar
add
mov
cmp
daa
shll
push
mov
mov
scas
jmp
mov
js
test
leave
dec
dec
in
add
mov
cwtl
mov
enter
in
sub
mov
push
push
mov
inc
push
xor
add
jno
cmp
fcmovb
mov
les
loopne
push
sub
jmp
and
and
or
ficoms
imul
nop
and
popa
js
fidivrl
mov
push
mov
sbb
fbld
add
jl
mov
test
out
aas
out
add
shrl
inc
rcrl
test
and
or
mov
inc
jmp
ret
inc
inc
in
and
inc
filds
je
je
add
and
clc
adc
mov
ret
dec
dec
outsb
push
outsl
push
inc
xchg
fmul
or
or
fcoml
and
mov
arpl
push
mov
xor
pop
ret
mov
std
add
in
pop
inc
adc
mov
pop
cwtl
cmpsl
pop
daa
and
push
lods
pop
ret
push
or
fs
dec
inc
fdivrs
lods
push
mov
or
adc
lret
adc
les
push
repz
mov
repnz
push
push
arpl
mov
adc
sbb
or
push
js
rcll
inc
inc
or
inc
inc
int3
rclb
dec
xor
sbb
jns
bound
dec
and
pop
mov
and
push
or
cmp
and
pop
in
sbb
jae
aam
sarb
mov
adc
xchg
sub
pop
and
inc
sub
push
lea
pop
mov
fwait
dec
pusha
in
xlat
xlat
inc
lret
jno
cmp
pop
mov
or
xor
push
push
call
sub
mov
in
mov
in
mov
xor
dec
dec
pop
xor
jmp
pop
cmp
mov
mov
jb
sbb
sbb
lea
push
or
sbb
push
push
xor
adc
push
or
dec
xor
sbbb
leave
movsb
addb
add
sbb
mov
movb
adc
subb
cmp
addb
movsb
mov
fsubl
sub
out
xchg
inc
rolb
sbb
inc
pop
push
mov
into
dec
pushf
and
cmp
pop
mov
xchg
shlb
int3
jno
push
mov
lds
jne
mov
xor
test
leave
xchg
out
stos
jge
call
xor
and
adc
sbb
jne
dec
jo
movsb
and
ja
cwtl
jo
out
xchg
xor
add
xchg
ret
push
inc
adc
cmpb
mov
dec
leave
imul
mov
jmp
xchg
mov
adc
push
sar
pop
or
insb
and
push
xor
repnz
sub
and
sbb
loope
push
mov
push
pop
sbb
mov
cs
cmpsl
test
xchg
loopne
je
leave
add
mov
sub
and
cmp
je
pop
xor
fildl
sbb
cmpsl
push
pushf
gs
add
adc
jecxz
push
mov
jmp
enter
andl
lcall
mov
mov
sub
jg
add
sbb
pop
shll
add
xor
stos
mov
pop
xor
xchg
add
movsb
dec
cs
or
mov
inc
andb
and
sbb
stc
push
inc
sub
inc
dec
dec
pop
add
xor
test
inc
ds
mov
test
xor
add
dec
stos
push
pop
mov
inc
mov
mov
xor
push
mov
loopne
inc
or
adc
daa
nop
inc
pop
je
adc
sahf
push
push
dec
xor
int
add
dec
xchg
icebp
ret
inc
or
popl
xor
dec
iret
nop
xor
sbb
mov
into
add
in
push
inc
sarb
pop
pop
add
loop
loop
lock
sbb
xor
xorl
mov
jmp
jae
cmp
pushf
addb
jb
lds
pushl
sub
rdtsc
push
rcrl
mov
mov
pop
mov
xor
dec
dec
or
xor
pop
pop
xchg
adc
sub
movb
lahf
xlat
out
jle
inc
xor
jnp
gs
inc
dec
cltd
sub
xor
lds
inc
cmp
inc
dec
daa
xchg
sbb
enter
mov
and
mov
sarl
shl
pop
xchg
rclb
scas
fadd
pop
fimuls
xchg
push
jecxz
inc
jbe
or
or
dec
mov
xor
pop
sub
cmc
and
add
add
shll
imul
rolb
pusha
mov
mov
shrl
lods
xchg
pop
pusha
in
cwtl
add
insl
scas
cmp
push
sbb
inc
lret
inc
pop
int3
ss
aam
lahf
or
inc
jnp
mov
inc
shlb
testb
femms
or
or
mov
imul
imul
les
pop
xchg
lahf
imul
or
pop
sbb
or
cmp
xor
adc
lahf
dec
adc
adc
dec
sti
pop
mov
mov
mov
test
mov
lea
mov
add
mov
xchg
addr16
mov
push
dec
xor
sub
test
lea
dec
jno
out
std
outsb
test
inc
arpl
js
les
and
cmpsl
sbb
pop
pusha
mov
mov
xchg
push
cli
add
and
pop
mov
mov
cmp
pop
push
add
pop
adc
dec
jne
adc
aam
mov
sarl
cs
shrb
push
xor
shr
push
sbb
pop
aas
imul
add
jns
imul
xchg
add
add
adc
stc
xchg
hlt
shll
push
inc
aaa
inc
and
lcall
cmp
aas
inc
jns,pn
scas
or
inc
repnz
mov
inc
and
dec
push
pop
add
jne
push
xchg
push
outsb
imul
bound
or
dec
outsl
cmp
adc
arpl
into
sysenter
or
inc
and
mov
fldcw
sbb
aam
and
jbe
int3
ljmp
dec
add
bound
and
jae
pusha
push
pusha
push
mov
cmp
inc
mov
mov
test
es
aad
ss
inc
add
repnz
cmpsl
fs
popa
cmp
ss
sbb
add
pop
pop
clc
nop
dec
pop
and
andl
and
push
jb
insb
xor
xlat
insb
add
add
dec
pop
or
jb
int
or
push
inc
je
cmp
xor
js
or
pop
pop
jl
andl
jl
mov
sub
adc
jg
xchg
aaa
mov
mov
mov
lea
mov
sbb
adc
mov
pop
pop
fs
js
pop
jl
mov
jbe
or
iret
lahf
enter
pop
xor
pusha
lock
das
add
fcoml
fs
loopne
call
adc
lret
pusha
add
add
icebp
jge
stos
aam
xchg
call
repnz
das
nop
mov
mov
xchg
dec
popa
fnstcw
loopne
std
jle
sub
lea
insb
in
add
xchg
daa
pop
rol
jae
jecxz
push
js
testl
ret
sbb
stc
or
mov
ds
orl
fnsave
inc
fdivr
cwtl
pop
adc
ret
or
lds
lret
mov
sub
and
adc
inc
stc
sub
aas
mov
push
das
push
jmp
jge
or
push
mov
repz
in
pop
or
jns
in
cmp
jo
xchg
jl
push
loopne
xlat
loopne
and
fsubrl
nop
xchg
mov
pusha
add
popa
sub
mov
in
sbb
sbb
dec
xor
nop
nop
add
sub
push
xchg
lds
dec
stc
jne
stc
nop
mov
add
movsb
and
jb
mov
inc
loope
mov
xchg
add
push
fisubl
pop
add
pop
lret
inc
push
sarl
inc
push
adc
sbbl
in
adc
leave
shr
movsb
dec
jae
and
inc
icebp
cmp
leave
mov
jne
mov
testb
inc
call
movsb
in
js
aaa
mov
mov
xchg
inc
xor
fdivrs
add
lea
cmp
jbe
xchg
ret
les
sub
test
outsl
int3
or
xchg
out
int3
in
adc
std
xchg
xchg
sbb
xchg
pop
cmp
or
sbb
inc
outsb
mov
xchg
xor
lret
mov
and
pop
add
push
and
adc
mov
sbb
lods
or
ja
mov
pop
add
xor
pop
fsubr
push
enter
les
push
mov
in
xchg
imul
fwait
iret
pop
sbb
cmpsb
imul
iret
ret
outsl
pop
dec
push
inc
mov
and
fcom
daa
xchg
jl
push
aam
rcl
cmp
rolb
daa
movsb
int3
lods
xlat
or
dec
es
adc
enter
stc
js
enter
or
aad
add
jb
push
rclb
xor
lcall
jb
fnstcw
nop
mov
cmp
adc
nop
fmuls
sbb
mov
sbb
mov
rcll
pop
xor
paddb
sub
sub
dec
in
cmc
nop
dec
sbb
jns
add
mov
push
rolb
nop
cmpsb
mov
push
imul
cld
mov
dec
sub
or
jecxz
loopne
sarb
pop
add
sarb
movsb
sarb
outsl
aad
in
push
mov
repnz
or
mov
adc
shrb
lcall
addr16
leave
mov
in
mov
fwait
test
imul
dec
cwtl
push
enter
lods
mov
xlat
icebp
cmp
imul
movsb
add
aaa
xor
add
fsubrs
cmp
xlat
arpl
add
fwait
fs
xchg
test
mov
add
ret
cmp
inc
rcr
mov
inc
mov
inc
jge
mov
or
inc
mov
mov
cmp
jmp
sbbb
clc
sti
loope
add
push
aam
shlb
dec
pushf
inc
inc
scas
sbb
mov
adc
cmp
dec
or
mov
jo
dec
sub
mov
or
sbb
mov
jecxz,pn
test
mov
add
pop
cmc
and
das
add
lea
leave
fadds
flds
jmp
pop
jl
pop
inc
test
das
adc
inc
insl
push
pusha
inc
jbe
sbb
inc
in
dec
cmp
push
or
and
je
mov
pop
enter
iret
lock
inc
inc
sbb
or
fwait
pop
mov
ss
pop
add
daa
mov
test
sar
mov
xor
inc
jl
or
fistpl
mov
lahf
dec
loopne
pop
pusha
and
cmp
mov
add
adc
add
gs
mov
sbb
sbb
mov
dec
loopne
aam
xor
icebp
insb
or
jno
je
and
cmp
cmpsl
js
lods
ja
mov
xor
lods
nop
sub
repz
pop
ljmp
jbe
pop
pusha
int
lahf
and
cmp
je
cwtl
outsl
jne
ret
loope
nop
aam
add
out
sub
or
test
sbb
mov
andl
lods
in
fistps
mov
ret
jmp
and
lea
daa
and
or
push
fcomps
push
shlb
pushf
xor
xorb
in
cli
xchg
xor
adc
dec
pop
cmp
xchg
ret
mov
pop
sahf
insb
xchg
inc
mov
outsl
xchg
shll
xor
jmp
flds
sub
ficompl
xor
nop
add
mov
xor
test
jae
divl
inc
jo
les
mov
aad
cld
xchg
dec
sbb
cs
mov
les
lret
sub
or
je
push
dec
jno
hlt
jne
xor
add
sub
ret
adc
or
push
adc
jb
sub
dec
lds
xchg
mov
inc
fimuls
jo
fnstcw
outsl
adc
fstl
or
pop
jb
push
and
roll
xor
outsl
punpckhbw
add
push
loopne
fadd
add
sbb
jo
mov
insl
and
mov
and
pop
ret
sbb
outsl
inc
sbb
mov
mov
mov
ret
push
inc
or
and
cmp
mov
out
enter
inc
mov
loopne
add
fidivrl
and
cld
lock
add
hlt
hlt
xchg
mov
daa
imul
inc
jne
int
fiaddl
pop
adc
mov
xchg
push
aaa
test
cli
inc
pusha
clc
push
stc
pop
cmp
sbb
adc
sub
jbe
jl
xor
je
aas
inc
dec
lea
loop
inc
in
fcmovnu
test
pop
enter
jns
in
loopne
outsl
xchg
dec
mov
imul
jecxz
xchg
xor
in
int
xor
in
xor
sbb
push
inc
push
stos
or
cmp
into
scas
pop
xor
arpl
add
dec
adc
inc
dec
mov
sbb
ret
mov
dec
mov
sub
popa
push
or
xor
imul
inc
mov
pushf
xor
cmp
loopne
lcall
xchg
test
push
or
imul
push
inc
or
mov
xor
dec
mov
push
sbbl
fs
test
or
lcall
xchg
imulb
or
adc
test
add
imul
xchg
call
orl
addl
dec
clc
into
dec
scas
xlat
push
cmpsb
aaa
sbb
mov
fst
and
and
push
adc
fidivrs
add
test
and
addr16
dec
xchg
pop
pushf
iret
cltd
adcl
inc
shrl
aas
xchg
icebp
and
js
mov
pop
inc
in
cmp
mov
jle
sub
mov
mov
cmp
outsl
popa
loopne
leave
xchg
xlat
test
xor
aam
lea
jge
dec
daa
jbe
sub
mov
mov
mov
push
or
clc
leave
aam
fldcw
xor
cmpb
adc
icebp
idivl
jl
sub
ss
cs
outsb
pop
pop
dec
outsl
pop
hlt
pop
mov
jbe
loopne
cmp
lea
inc
les
xor
pop
mov
je
cmp
add
inc
pushl
cmp
dec
mull
leave
clc
mov
rorb
pop
aaa
in
test
mov
rclb
mov
push
sbb
dec
pop
es
adc
cmp
jo
jg
mov
mov
and
adc
in
movsb
ds
xchg
push
xchg
in
dec
movsb
sbb
call
popa
add
mov
add
xchg
sbb
push
pop
data16
push
les
inc
test
xor
sbb
out
cmpb
mov
inc
pop
jl
movb
inc
dec
mov
adc
rcrb
jecxz
adc
push
out
jb
pop
or
clc
ret
leave
jnp
lods
or
inc
inc
xor
loope
and
push
jg
xchg
sbbl
mov
push
jns
xchg
nop
push
ror
jp
gs
sbb
outsl
data16
push
sbb
adc
test
outsl
sbb
aaa
roll
sbb
popa
pushf
cmp
jo
mov
cltd
lea
ljmp
test
sub
cmp
or
sbb
ds
xor
add
movsl
clc
push
cmp
sbb
fwait
fwait
push
adc
insb
or
mov
insl
sub
cltd
cmp
std
setnp
ja
jmp
or
cmp
xor
lea
loopne
aas
loope
cwtl
jno
les
aaa
add
clc
pop
cld
out
mov
leave
clc
push
sbbl
xor
mov
mov
or
bswap
mov
sub
cmp
call
cmp
push
jl
sub
dec
mov
jnp
adcl
subl
push
xchg
xchg
and
add
in
mov
loopne
fsubrl
mov
stc
adc
aam
filds
mov
jne
stos
mov
ljmp
adc
cld
movsb
or
outsb
loop
call
inc
xor
mov
mov
or
or
stos
and
pusha
pop
aam
rorb
pop
mov
inc
movsb
mov
mov
jno
push
xchg
push
inc
js
xor
pop
push
and
xchg
mov
rcrb
add
lea
pop
mov
sbb
sbb
bound
cmp
push
add
cmc
orl
dec
ljmp
push
mov
xchg
lret
in
push
insb
cmp
jmp
ljmp
mov
loope
sbb
daa
daa
loopne
xchg
xchg
add
rol
test
je
jg
imul
sub
jecxz
pop
add
hlt
movsl
movsl
push
cmp
adc
data16
sub
in
test
lock
pop
jmp
jne
and
sbbl
jne
ds
pop
mov
xchg
mov
out
outsl
add
cmp
pop
or
rolb
fxch
sub
cmc
xchg
dec
add
mov
ret
dec
testl
out
popa
dec
cmpb
shll
lcall
bound
aas
dec
adcl
xor
sbb
add
mov
dec
inc
and
push
in
xchg
sbb
jmp
mov
push
mov
stos
xchg
sbb
ja
dec
into
das
fisttps
jo
and
inc
ret
insb
sbb
loopne
xor
rorl
dec
push
jbe
ret
push
mov
xchg
mov
inc
sub
cmc
add
push
sbb
jbe
mov
or
je
adc
pop
pop
xchg
insb
loop
popa
je
push
adc
push
jecxz
pop
shlb
dec
lahf
push
and
jmp
add
and
cmp
inc
fcoml
aas
mov
pop
xor
ret
pop
and
inc
add
test
add
cmc
jmp
pop
or
nop
mov
xor
xor
ss
je
icebp
push
dec
dec
stos
aaa
rclb
inc
mov
pushf
jmp
movsl
add
dec
outsl
pop
xor
call
and
and
mov
test
add
and
jle
mov
data16
pop
add
lds
std
sahf
push
add
jmp
adc
fstp
dec
call
sbb
rolb
pop
lods
jge
mov
das
push
sub
inc
daa
mov
add
and
pop
mov
mov
loopne
outsl
aaa
js
test
daa
es
sub
nop
mov
shll
dec
dec
fidivrs
ljmp
xor
fs
mov
jmp
inc
lods
add
outsb
jns
or
mov
mov
pop
inc
mov
scas
scas
sbb
lea
das
or
add
add
addr16
mov
adc
sbb
clc
clc
rorb
fimuls
arpl
pop
and
fimuls
pop
or
cs
out
xor
adc
imul
outsl
stos
or
mov
add
movb
bound
daa
push
ret
test
jl
mov
push
pusha
lea
notl
ja
js
inc
loop
adc
lret
inc
loop
dec
js
or
add
xor
push
ret
sbb
subl
and
push
mov
dec
pushf
jl
sbb
aad
mov
repnz
add
adc
mov
cmp
lock
rcll
lret
mov
pop
mov
inc
pop
and
jno
sbb
addl
and
or
and
stos
jge
mov
xchg
movl
xchg
adc
inc
lret
inc
nop
popl
adc
in
sahf
hlt
mov
std
pop
mov
in
lea
xor
inc
mov
mov
mov
xchg
insb
add
pop
mov
lock
jnp
or
insb
pop
faddp
mov
xor
hlt
sub
or
jnp
jmp
push
in
shl
out
test
xchg
and
addl
sti
add
roll
xor
in
adcl
mov
aaa
adc
pop
loopne
cmp
mov
xor
cmp
movsb
test
call
mov
bound
ja
cmpl
and
xor
jne
and
call
xchg
loope
push
xchg
inc
xchg
push
bound
sbb
test
fiaddl
or
in
mov
icebp
jb
xchg
ret
xchg
pop
or
or
icebp
leave
rolb
movsl
xor
test
and
cmp
adc
icebp
loop
add
inc
xchg
leave
pop
xchg
cmc
enter
fcompl
test
jns
inc
cmp
push
iret
icebp
mov
shrb
test
mov
add
jb
repz
adc
jl
jecxz
or
addb
adc
xchg
sub
cmp
xchg
jo
cmc
mul
dec
dec
enter
ror
repz
and
adc
cmp
xor
sub
push
or
push
pop
or
xchg
cmp
test
hlt
ds
in
les
and
call
xorl
jmp
and
repz
cmp
mov
popf
jmp
sub
push
fbstp
clc
mov
push
sahf
add
dec
push
add
mov
mov
cmp
add
xchg
cld
rcl
repnz
xor
aaa
sub
cmpb
les
pop
pop
jmp
and
or
or
push
jbe
jle
mov
pop
dec
xchg
iret
xor
mov
into
cmp
daa
dec
pop
addb
rcrb
inc
ret
push
push
xor
insb
mov
imul
xchg
test
sarl
mov
aas
jp
lea
leave
daa
and
shr
aaa
and
xchg
cmp
nop
push
and
push
xor
cmc
inc
push
inc
call
aam
add
jo
test
enter
test
xor
adc
cmp
add
stc
outsl
ss
fstpt
pop
pop
sbb
imul
clc
ds
ret
add
inc
and
notl
arpl
sub
mov
pop
adc
nop
or
mov
icebp
jno
scas
inc
inc
or
and
movsl
cmpb
cmpsb
shrl
adc
or
idiv
sub
leave
inc
int3
mov
xchg
lods
jae
push
std
fnstenv
add
js
in
add
sbb
cmp
mov
dec
daa
out
mov
rclb
stos
add
and
movsl
fs
jbe
inc
inc
shlb
adc
ror
xchg
cmp
in
push
inc
mov
fbstp
test
pusha
test
dec
sbb
mov
adc
cmp
sub
shll
inc
xchg
push
shrl
inc
dec
cmpsl
lea
call
lea
add
add
jmp
and
sub
xor
sbb
add
add
stc
mov
pop
xchg
jmp
xchg
inc
and
in
dec
jmp
and
mov
add
sti
stc
push
dec
and
aad
xchg
out
jnp
movsl
cltd
and
xlat
and
fidivl
and
shr
sahf
xlat
pop
pop
popa
gs
ljmp
cli
nop
sbb
dec
enter
push
mov
enter
sti
or
pusha
jbe
push
add
dec
pop
lahf
mov
sub
xor
mov
lret
cmpsb
push
cwtl
fs
fdivr
dec
add
bound
ja
xor
enter
lock
sbb
loop
push
pop
and
bound
or
scas
mov
test
popa
fmull
jg
mov
mov
lret
or
enter
adc
inc
adc
int3
test
rclb
or
rcr
mov
idivl
and
int3
std
or
adc
pop
jl
cs
pop
push
rcll
clc
xor
xor
add
pop
push
loopne
pslld
mov
mov
fstps
dec
xor
xor
js
add
movsl
in
lahf
std
idivb
push
inc
andb
cmp
rclb
or
adc
fdivrl
fwait
mov
inc
add
inc
rclb
push
or
cltd
dec
or
pop
nop
scas
cmpsl
lock
std
movsl
inc
inc
inc
dec
repz
dec
inc
psubusb
sar
push
add
scas
inc
push
xor
decb
mov
mov
sub
xorl
adc
push
inc
push
cwtl
das
or
add
dec
mov
rcl
rolb
nop
loope
inc
lea
pop
iret
mov
pop
or
dec
int3
and
add
int3
add
adc
jbe
push
sbb
inc
aas
push
push
test
add
cmp
call
adc
xor
mov
sbb
loopne
pop
lds
pop
adc
out
and
sub
fs
cmp
xchg
xchg
add
mov
jge
adc
cmpsl
inc
add
inc
fstl
jecxz
dec
dec
adc
out
add
push
xor
adc
call
jg
add
cwtl
xchg
lea
and
adc
inc
decl
insl
je
xor
mov
inc
mov
push
mov
jge
mov
mov
or
out
in
jmp
call
add
and
and
jle
shlb
push
sub
sub
jne
cmp
jne
fstp
addl
jmp
xor
mov
cmp
xchg
sub
pop
loop
xchg
pushf
jmp
mov
syscall
fidivrs
test
jle
and
or
lock
lds
inc
loopne
xor
push
inc
push
cmpsl
cwtl
roll
add
sahf
sub
inc
fwait
loopne
sub
jb
pop
adc
mov
insb
jge
cwtl
cwtl
scas
inc
add
jo
jo
nop
mov
dec
xchg
lods
adc
xchg
addr16
loop
mov
mov
sbb
xor
lock
testb
fcom
test
gs
adc
push
add
sbb
or
sbb
push
cmp
mov
inc
aaa
cs
fidivs
and
clc
xchg
add
clc
cmpb
je
daa
hlt
hlt
or
adc
cmp
sub
aaa
add
dec
inc
sub
repnz
add
dec
cltd
dec
lcall
and
inc
movsl
add
or
xor
and
int3
mov
lods
cmp
sub
and
inc
adc
sbb
in
mov
icebp
dec
int
pushf
xchg
xor
cld
adc
in
and
push
cmc
ss
add
ficoml
dec
push
in
in
in
pusha
jg
inc
sub
add
push
jo
mov
or
mov
add
sahf
ss
cmp
out
imulb
and
add
or
lock
sub
xchg
and
adc
sub
dec
mov
mov
jge
insl
xor
adc
movsl
cwtl
sub
inc
sub
iret
push
cmp
lods
nop
lret
add
adc
fdivrl
popf
add
add
lds
iret
cmp
add
cmp
add
insb
insb
adc
pop
lods
lds
or
adc
push
rcll
fucom
enter
sub
das
add
idiv
mov
enter
mov
fidivrl
pop
loopne
pop
mov
rorb
outsb
adc
sbb
movsb
test
push
pop
fstpl
and
and
cmpsl
mov
pop
inc
fwait
je
pusha
pop
and
xlat
jae
pop
cmp
pop
jne
inc
aaa
inc
outsl
push
dec
or
or
jmp
sahf
sub
or
or
sub
jae
pop
mov
xchg
bound
jne
cmp
and
fwait
sub
clc
pop
inc
scas
jmp
mov
cwtl
cmp
dec
insb
enter
and
pusha
push
loope
pushf
dec
mov
dec
or
xlat
xlat
jecxz
and
punpckldq
sub
cmc
xchg
repnz
jae
or
nop
xchg
aam
xor
jmp
adc
ds
hlt
dec
and
gs
hlt
sbb
lods
or
push
or
je
mov
inc
gs
xor
mov
stos
mov
or
adc
add
addb
movsl
xchg
or
decb
add
cs
inc
outsb
arpl
nop
testb
test
ss
add
jb
cmp
inc
and
nop
or
in
and
les
cmp
fdivp
pop
and
pop
add
int3
les
repnz
mov
inc
pop
or
adc
jg
inc
pushf
pop
add
sub
aam
test
addr16
pop
or
mov
jo
inc
dec
imul
insb
jo
cmp
cld
fidivl
test
cli
lock
mov
xchg
or
jbe
in
pop
jb
or
call
mov
inc
or
push
pushf
dec
mov
xchg
cmp
xlat
xlat
cwtl
mov
cmpsl
decl
in
shl
shll
outsl
xor
es
sub
outsb
and
push
sub
mov
adc
push
add
sbb
sub
xchg
pop
scas
or
leave
js
xchg
insb
mov
jbe
insb
out
pop
or
push
subl
out
rcll
xor
inc
push
add
xor
ret
bound
or
nop
aas
adc
outsb
movb
and
cmp
stc
or
jne
add
rolb
pop
and
rorb
int3
outsl
repz
dec
cld
daa
ret
add
add
and
xor
pop
in
or
mov
cmp
cmpl
mov
mov
imul
mov
inc
in
ret
sub
lock
xchg
cmc
out
jg
jno
mov
xchg
and
pop
cmc
mov
and
sub
cmp
sbb
xchg
out
mov
sbb
fcomps
in
add
cmp
loope
dec
sbb
mov
shlb
cmp
sub
xor
mov
inc
daa
mov
xchg
mov
movzbl
shl
xchg
or
mov
jecxz
or
sbb
push
xor
mov
incl
jb
sbb
lods
or
std
mov
cmpsb
ss
mov
sub
das
movsl
push
pushf
mov
adc
or
orl
mov
ljmp
adcb
stos
das
inc
and
test
je
cmpsb
adc
xchg
test
mov
fsubrp
xrelease
lret
mov
pop
sub
cltd
mov
adc
shl
sbb
cmp
push
jmp
test
xchg
xlat
and
sub
nop
call
mov
cmp
sahf
ss
int3
jmp
cwtl
sbb
or
jp
out
inc
push
mov
and
sub
add
adc
sbb
sbb
cmp
and
sti
movl
add
inc
mov
push
xor
push
cmp
shrl
cmp
or
inc
mov
xchg
mov
mov
das
pop
and
shr
and
fs
aas
mov
mov
mov
inc
imul
loop
pop
adc
xor
mov
shll
scas
shr
shll
dec
fwait
dec
ret
and
xchg
push
pop
lock
xor
push
sti
mov
adc
inc
push
enter
imul
mov
dec
fmul
add
jb
inc
test
paddb
hlt
or
orb
into
push
test
jle
mov
nop
incb
sub
add
push
inc
cwtl
or
sub
int
xor
inc
inc
inc
inc
dec
dec
mov
sub
dec
dec
dec
dec
dec
dec
adcl
lock
pop
pop
pop
popa
bound
addr16
insb
insl
outsb
outsl
jo
jb
je
jbe
adc
pushl
jns
xor
xor
xor
ss
cmp
sub
pop
inc
std
and
lds
cmovns
dec
push
std
adc
jb
mov
pop
andl
incl
add
mov
adc
std
in
mov
pop
add
adcl
add
shlb
sbb
mov
xor
daa
xorl
nop
push
cs
daa
cmpsl
push
sbb
xor
add
adc
pop
xor
pusha
push
nop
pop
xorl
jg
adc
scas
loopne
sbb
cmp
nop
push
je
mov
push
gs
xchg
mov
fwait
sbb
inc
and
push
dec
mov
pop
cmp
jle
out
jbe
push
imul
ds
xchg
and
fwait
lret
frstor
out
dec
dec
inc
mov
or
ds
add
add
cmpsb
andps
rorl
shrb
dec
sbb
addr16
int
push
mov
stos
pop
push
cmp
pop
push
adc
movb
add
inc
movsl
push
test
add
add
inc
arpl
adc
push
insb
sub
rclb
sbb
mov
xchg
out
cmpsb
mov
push
inc
pop
js
mov
test
lret
pushf
lods
loopne
and
mov
lea
fildl
pop
xchg
sbb
dec
push
or
inc
pop
adc
sbb
mov
push
xor
add
test
mov
pusha
jae
push
xchg
nop
dec
gs
je
or
or
rcpps
dec
sbb
test
push
add
fldl
popa
insl
jmp
add
je
imul
scas
inc
xchg
pop
ret
pop
jp
bound
add
dec
iret
shll
clc
push
mov
cmp
bound
mov
mov
xlat
dec
add
adc
jmp
inc
jne
push
aaa
lods
lret
or
test
mov
pop
or
into
mov
outsb
mov
dec
imul
inc
scas
fsts
loopne
cmpsl
mov
out
push
mov
inc
or
jl
inc
insb
movsl
inc
test
and
jl
xor
pop
add
sub
and
inc
or
inc
pop
add
mov
inc
lsl
mov
jns
mov
loopne
and
mov
dec
pushf
pop
sti
push
adc
jno
data16
inc
in
add
jp
push
push
pop
adc
clc
mov
xchg
cs
popa
mov
add
pop
adc
inc
lods
loope
jle
mov
adc
push
and
fwait
and
js
inc
sub
loopne
rcl
pop
rclb
adc
push
jecxz
mov
inc
cmp
popf
push
das
or
ss
pop
sub
add
push
sbb
sub
iret
in
je
pop
and
push
pusha
sub
pushf
push
xor
mov
and
arpl
dec
inc
loop
iret
jo
enter
das
outsb
test
aas
shrl
cwtl
add
out
adc
mov
insb
lret
pusha
xor
sub
pop
push
add
mov
mov
ret
test
adc
sbb
adc
pop
sahf
pusha
push
aad
dec
mov
cmp
lods
cwtl
in
and
add
mov
out
insl
movl
pop
es
es
daa
inc
scas
sub
sub
test
xor
popl
add
cmp
sub
mov
mov
sbb
mov
cmpsl
inc
or
in
pop
pop
xor
ficompl
push
xor
les
inc
pop
and
mov
mov
inc
sarb
inc
and
imul
cmp
les
pop
sbb
shld
imul
jne
addr16
ds
ds
jmp
cmp
arpl
or
fiaddl
repz
rclb
push
sti
or
push
adc
sub
es
add
xchg
cmp
and
push
mov
bound
test
xorb
stos
jmp
sub
xchg
sub
lret
shrb
adc
shl
dec
or
mov
or
sub
pop
orb
in
inc
xor
dec
or
gs
icebp
dec
push
push
jb
xorl
push
in
pop
cmp
push
jnp
into
push
sbb
loopne
jno
pop
jb
cs
jmp
divl
push
js
mov
rolb
stos
xchg
sbb
add
push
xor
aad
dec
ss
or
inc
pop
or
pop
or
test
dec
dec
and
or
adc
pusha
and
in
inc
or
lret
add
push
mov
push
jno
cmp
andps
add
fcomps
add
adc
mov
xor
das
jo
sbb
xor
push
fs
inc
xchg
push
pop
pop
addb
pusha
fs
pop
je
js
xor
scas
bound
push
addr16
scas
pop
or
loop
inc
sub
pop
inc
sbb
push
push
push
and
aam
push
movd
mov
ret
cs
or
sub
fmuls
pop
push
pop
lea
inc
xchg
lahf
and
sbb
jl
adc
add
adc
cmp
push
aaa
mov
adc
call
scas
adc
pop
push
out
inc
sbb
add
or
popa
pop
mov
and
outsb
and
das
leave
test
sbb
mov
push
cmc
dec
adc
xchg
xor
push
insb
pop
add
fs
push
loope
lods
aaa
cmp
cmp
insl
cmp
adc
jmp
mov
in
mov
sub
add
or
fstpl
pop
or
jbe
or
in
xor
push
inc
inc
add
fldenv
icebp
cwtl
pusha
hlt
shlb
adc
push
add
ja
pop
js
push
ja
cmp
in
leave
mov
inc
sub
mov
add
or
sub
or
mov
or
push
dec
subl
cmp
inc
sbb
in
add
sbb
and
dec
and
and
and
sub
xchg
gs
xor
or
cmp
pop
xchg
gs
cmp
inc
inc
inc
push
or
push
or
and
test
pop
dec
test
and
adc
mov
shrl
push
iret
jnp
inc
xor
xor
jp
out
sub
div
mov
add
leave
jg
aaa
pop
shrb
je
mov
dec
inc
add
cwtl
fs
push
push
fdivrs
or
or
dec
and
test
les
ja
addb
xor
mov
in
mov
pop
in
mov
nop
filds
in
xchg
inc
push
fs
and
mov
inc
rcll
std
mov
setge
in
or
dec
arpl
mov
mov
fstpl
fwait
xor
fadds
mov
pop
enter
jo
int3
int3
xor
pop
sub
mov
or
sbb
push
sub
pop
lcall
mov
dec
pop
dec
loope
imul
and
pop
fists
lahf
pop
faddl
adc
ffreep
in
pop
jo
dec
cmp
mov
push
mov
push
mov
inc
add
sbb
or
dec
pop
test
dec
cltd
lds
subps
pop
das
adc
push
and
and
adc
or
inc
mov
sbb
mov
outsl
or
pop
sub
or
inc
movsl
pop
and
sub
mov
adc
aas
lret
and
mov
inc
sbb
jns
push
in
mov
clc
mov
adc
sub
add
xor
xchg
jb
inc
inc
add
jne
add
pusha
fldl
pop
add
jae
or
inc
pushf
pop
jge
mov
cli
dec
xchg
dec
mov
adc
hlt
cmp
mov
dec
dec
mov
xorl
inc
adc
xchg
add
mov
push
out
sbb
add
mulb
inc
sub
xchg
xor
and
aaa
push
test
cli
movsb
sbb
arpl
and
mov
pop
outsl
aas
sub
add
push
test
je
sub
xchg
pop
jmp
push
sub
nop
pop
fwait
in
push
push
and
and
adc
or
or
and
adc
dec
mov
mov
lahf
xchg
inc
or
xchg
daa
push
xchg
jae
cli
in
das
xor
test
push
and
ds
xor
das
cld
cmp
cmpsb
inc
jmp
sbb
push
pop
pop
stos
or
adc
or
cmpl
loop
dec
xchg
push
add
lods
sbb
or
mov
ud0
xchg
andb
adc
sub
xor
lahf
add
add
mov
and
pop
or
orl
sbb
arpl
sub
xchg
dec
enter
push
or
add
or
xor
sbbl
push
cmp
xor
xor
setns
pop
cmp
inc
push
int3
xor
or
test
xor
or
jbe
pop
push
loopne
add
push
xor
fdivl
sub
adc
pop
or
push
jns
daa
cmp
sub
inc
dec
lcall
jns
xchg
inc
rclb
add
rcrb
sbb
add
adc
mov
shlb
fbld
out
xchg
mov
cmp
xchg
popa
das
shrd
push
loopne
push
shll
inc
es
or
add
mov
scas
sub
xlat
jg
and
outsl
inc
cltd
imul
adc
sub
pop
pop
pop
subl
pop
fs
push
xor
je
das
jns
gs
add
add
fists
insl
xor
push
xchg
outsb
out
nop
dec
ja
imul
sub
sub
es
mov
jp
popa
das
adcl
xor
xor
sub
insl
jo
ficoms
mov
jmp
and
sub
das
mov
lahf
test
add
loop
or
jecxz
or
mov
call
ss
js
add
fmuls
nop
pop
in
xor
push
in
cmp
mov
jns
pop
mov
inc
push
fs
invlpg
nop
mov
in
rcrb
inc
fcomps
ss
add
jnp
test
xorl
mov
je
push
es
sub
jge
or
add
inc
nop
fildl
sub
fsubl
cltd
fadds
lods
adc
jmp
xchg
in
sub
sub
jno
jmp
sbb
mov
pop
scas
daa
mov
xchg
push
lods
sbb
iret
pop
or
inc
call
mov
xchg
mov
in
mov
push
adc
xchg
psubq
jmp
or
pop
xlat
stos
jecxz
cmpsl
or
addb
push
add
sbbl
gs
dec
add
and
mov
bound
adc
push
push
jle
add
dec
ret
add
inc
dec
enter
pop
pop
push
add
pusha
mov
and
insb
pusha
outsb
pop
pop
pop
add
xor
and
in
and
sbb
push
pop
cmp
lcall
push
in
fsubs
sub
mov
xchg
or
sbb
aas
mov
jl
je
or
ret
pusha
or
lods
jecxz
js
pop
sbb
fsubrl
insb
or
push
push
pop
xor
pop
dec
push
dec
cltd
inc
xchg
or
scas
negb
push
inc
das
inc
sub
xor
aad
xlat
inc
push
cmp
lods
xchg
std
rcrl
orl
pop
xor
outsb
outsl
sub
jg
mov
ret
dec
ds
jno
fs
lock
js
cmp
ret
xchg
int
fiaddl
fisttpl
cmp
sbb
rcll
inc
gs
lods
sbb
adc
in
jge
cmp
mov
xor
jb
pop
add
add
subb
adc
xor
loope
add
sahf
cmp
add
icebp
arpl
push
jge
cmp
and
es
adc
jge
pop
sub
inc
aaa
sub
addr16
mulb
cmp
xchg
addr16
inc
js
addr16
addr16
pushf
dec
enter
dec
in
add
leave
xor
jae
sub
leave
xor
xor
mov
leave
xor
rcrl
insb
or
sbb
xor
xor
inc
leave
xor
xor
push
test
leave
xor
xor
leave
xor
in
pushf
adc
sub
cltd
in
movsb
dec
test
in
in
lods
xorb
mov
mov
cltd
mov
repnz
repnz
sub
dec
repnz
repnz
int3
rorb
movsb
fadd
ds
cmp
lock
dec
sahf
dec
sahf
inc
in
call
dec
in
jl
mov
sub
hlt
out
mov
mov
sbb
add
jns
sbb
sbb
dec
fisubs
or
push
xchg
ja
or
xchg
mov
sbb
fsubl
add
and
and
sub
and
and
fs
into
and
and
xchg
xor
mov
sbb
cmp
cmp
cmp
inc
cld
inc
dec
sahf
inc
and
shll
push
out
sbb
cmp
pop
rcrb
xchg
cmp
pusha
cmp
repnz
insb
add
sbb
pop
cmp
cmp
cmp
inc
inc
cmp
cmp
inc
cmp
cmp
cmp
dec
push
push
adc
and
sbb
testl
ljmp
insb
shlb
dec
inc
dec
inc
je
js
dec
inc
dec
inc
jl
orb
orb
mov
pop
dec
inc
dec
inc
xchg
dec
cwtl
inc
dec
inc
dec
inc
pushf
xor
daa
dec
inc
dec
inc
movsb
sbb
inc
lods
add
pushf
cmp
out
fstps
sarb
mov
movsl
pushf
mov
pushf
mov
pushf
mov
in
mov
dec
leave
in
fs
cmp
leave
enter
hlt
push
cld
repnz
stos
enter
cld
add
jb
jb
or
adc
jb
jb
sbb
sbb
jb
jb
and
jb
sub
xchg
je
adc
cmp
lea
test
adc
push
xchg
xchg
aaa
xor
xor
dec
sbb
ss
sub
gs
sbb
adc
imul
int3
mov
pop
pusha
sbb
xchg
popa
jns
aaa
lds
jae
insb
pop
jle
push
dec
pop
repz
or
inc
push
pop
pop
jae
arpl
push
cmp
outsb
gs
or
and
xchg
pusha
mov
enter
fs
sbb
adc
inc
aas
pop
imul
ret
jp
ja
out
je
and
sbb
or
and
outsb
mov
push
insb
outsl
popa
fs
gs
inc
add
aad
inc
or
xor
pop
or
sbb
push
shll
adc
inc
jns
aaa
pop
xor
inc
rcrb
adc
bound
pop
mov
pop
inc
leave
mov
dec
es
jb
inc
outsb
and
lahf
pop
sbb
sbb
arpl
mov
js
imul
pop
and
or
decl
mov
adc
mov
mov
imul
and
cmp
ja
pop
mov
sub
or
mov
pop
insl
in
xchg
das
jae
cmp
aaa
arpl
and
enter
xor
orb
xlat
mov
cs
add
bound
and
push
repnz
push
jbe
das
dec
rclb
push
aaa
out
pop
outsb
xor
mov
sub
pop
jno
cmp
push
pop
mov
jno
mov
stc
insb
addr16
mov
inc
testl
pop
cli
mov
sbbl
cmp
push
pop
or
pop
aaa
outsw
pop
pop
bound
push
xor
sbb
std
das
add
pop
xor
push
dec
push
inc
or
lcall
push
addr16
inc
or
dec
push
imul
sbb
or
inc
fistps
and
or
adc
inc
dec
insl
inc
xchg
loope
or
aaa
push
ret
lods
loop
push
and
jne
scas
fadds
adc
aaa
cmp
inc
aas
push
jb
or
or
dec
ret
dec
notl
mov
cltd
cmp
pop
outsb
or
outsl
pop
jg
inc
xchg
aas
inc
add
mov
and
insb
inc
jae
in
add
xor
jge
jo
das
push
inc
dec
inc
shll
push
mov
xchg
jae
fs
sub
fs
push
jns
mov
clts
out
cmp
outsb
jns
adc
cwtl
aas
mov
es
les
addr16
das
roll
mov
sbb
push
enter
test
inc
jae
fwait
inc
cmpsb
push
xchg
testb
dec
push
dec
inc
push
movsb
popa
mov
or
nop
fisttpl
mov
jg
imul
xor
bound
jae
popf
cmp
ficoms
stc
outsb
xor
nop
push
imul
inc
xchg
push
xor
cmp
inc
mov
sub
lods
sub
adc
jne
and
mov
inc
push
and
mov
fcomps
add
insb
push
bound
mov
hlt
jno
cmp
push
into
outsl
and
jns
sub
jo
push
add
pop
enter
or
cmpsl
adc
iret
sbb
add
int3
out
loopne
or
nop
es
xor
sub
add
ret
mov
aaa
xchg
pop
and
inc
dec
cmpsl
enter
je
dec
je
nop
sbbl
js
nop
sub
nop
jl
jl
nop
add
jmp
nop
sub
and
sub
cmp
pusha
gs
sub
cltd
or
or
testb
sbb
or
sbb
sub
mov
iret
sbb
nop
test
mov
jns
or
subl
inc
jae
sarb
shlb
test
outsl
and
daa
ss
mov
push
pop
adc
and
out
data16
jb
push
jae
adc
xor
dec
outsl
and
arpl
mov
xor
sub
leave
jbe
lds
ret
ret
mov
mov
or
sub
icebp
roll
sub
outsl
adc
aas
cs
dec
mov
adc
dec
add
pop
clc
push
scas
mov
dec
pop
pop
or
adc
stc
pop
es
aaa
add
lods
pop
arpl
push
xlat
mov
rclb
mov
and
pop
imul
push
mov
mov
imul
adc
mov
mov
jbe
jns
pop
and
shlb
jo
inc
add
into
insb
loopne
mov
mov
pop
push
or
mov
inc
mov
inc
sbb
adc
adc
bound
sbb
sbb
push
movzwl
mov
add
add
ljmp
call
or
insl
adc
push
fld
dec
imul
sbb
mov
and
push
or
imul
inc
xchg
hlt
adc
aas
hlt
add
pop
cmp
push
xchg
mov
dec
mov
in
bound
push
pop
call
arpl
addr16
inc
fcoml
adc
rorl
pop
push
orb
and
lods
imul
push
cmp
sub
imul
cmp
adc
cld
push
adc
mov
xchg
xchg
pop
cmp
loopne
in
fsubl
sub
test
push
je
mov
mov
adc
push
mov
ret
nop
xchg
and
cmpsb
or
hlt
pushf
cwtl
sub
sbb
mov
loop
sbb
aaa
mov
insb
daa
xchg
fists
cmpsl
cmp
arpl
adcl
xor
jle
push
test
adc
adc
pushf
fmull
add
add
adc
pop
lret
inc
mov
push
add
andl
mov
frstor
push
push
adc
mov
jbe
xchg
pop
or
jle
pop
decl
mov
add
pop
out
movsl
or
dec
or
cwtl
iret
divb
and
outsb
nop
mov
minps
adc
cmp
mov
mov
in
or
mov
cs
or
xchg
add
in
adc
mov
push
add
pop
mov
or
aam
sub
push
push
and
fldenv
sub
or
insl
rorl
mov
mov
iret
aas
das
test
int3
xchg
insb
sub
iret
dec
pop
enter
pushf
xor
xor
push
fwait
sub
scas
lcall
aas
testl
test
mov
dec
popa
or
nop
push
and
ljmp
int3
int3
popa
daa
adc
adc
mov
sub
aas
cmpsl
insb
pop
popa
mov
pop
add
inc
sub
nop
pop
mov
leave
sti
scas
dec
adc
add
push
jae
xchg
les
dec
and
or
nop
ret
data16
fs
push
jo
mov
dec
mov
addl
mov
jno
jno
push
imul
dec
add
xchg
mov
sar
push
push
pusha
pop
cmp
jb
loopne
sub
movsl
add
dec
and
ja
shll
pop
fwait
sub
nop
loopne
xchg
jbe
das
push
cmp
call
pop
and
out
adcb
imul
xchg
jge
cmpsl
add
xor
in
adc
sbb
cmpsl
nop
out
pusha
nop
inc
pusha
and
data16
call
lods
add
dec
mov
mov
les
in
bound
sub
and
pusha
mov
sub
int
mov
enter
cwtl
push
ret
push
faddp
or
jecxz
testb
repz
mov
add
aam
xor
movsl
pop
lds
mov
mov
nop
bound
adc
mov
popa
dec
fs
and
pop
mov
sbb
mov
push
pop
fsubs
loope
orl
mov
cld
add
sbb
inc
fcomps
mov
inc
mov
xchg
sbb
ja
or
cmp
or
jle
cmp
jle
cmpsb
push
sub
jg
mov
daa
mov
push
das
inc
int
cld
int3
insl
cld
sbb
cmp
bound
mov
pop
shrl
xor
das
push
mov
fisttpl
dec
push
inc
adc
pop
adc
or
inc
ljmp
inc
shlb
enter
inc
adc
sbb
and
and
arpl
sbb
out
inc
push
and
xchg
mov
iret
sbb
and
ja
jp
stc
mov
push
jns
fiadds
push
add
or
or
or
loope
inc
inc
adc
mov
xor
or
pop
sbb
and
cmpw
rolb
push
pop
subb
cltd
sbb
add
push
add
adc
jmp
ret
popf
add
sbb
jne
gs
or
adc
aad
orb
mov
or
adc
inc
push
push
test
and
mov
movd
test
cmpsb
lea
inc
aas
push
mov
xchg
fisttpl
sub
pop
add
xor
cld
push
xor
mov
inc
jl
push
xor
lcall
add
pop
jg
sbb
orb
andb
add
mov
xchg
adc
dec
jo
lock
outsl
call
movb
adc
push
dec
aaa
dec
dec
mov
fbstp
enter
adc
js
or
and
enter
jmp
mov
test
lcall
inc
cmpsb
rol
daa
or
in
sti
sbb
cmpb
pop
or
or
or
xor
cs
subl
test
loopne
lock
sarb
xchg
push
in
push
jae
xchg
je
and
cmp
mov
shrl
push
jo
xorb
xchg
sahf
inc
add
cmp
sbb
in
jno
js
and
sbbl
mov
add
cmpb
fs
pop
gs
pop
sub
mov
mov
xchg
push
pop
ret
mov
and
loopne
push
cs
inc
mov
adc
add
jl
dec
lcall
in
jl
pop
xlat
dec
push
lcall
jl
dec
push
lea
int3
dec
mov
popa
dec
pop
scas
push
scas
bound
sbb
inc
gs
xchg
xchg
add
mov
sub
xor
addb
ja
call
xor
cmpsl
outsl
dec
js
add
addr16
ds
lods
sti
test
loop
jno
inc
call
dec
fisttpll
sbb
out
push
push
stc
mov
imul
push
sbb
or
xchg
adc
mov
stc
adc
iret
dec
xchg
cmp
lahf
mov
cmp
push
loop
shll
mov
mov
inc
loop
aam
sbb
insb
mov
and
jno
adc
stc
stos
inc
add
pop
sbb
push
mov
and
mov
mov
xor
leave
cmp
lahf
lods
pushf
sbb
push
pop
test
test
mov
mulb
jmp
sbb
adc
aad
js
sub
mov
test
loopne
lret
push
je
xchg
arpl
test
in
arpl
push
fwait
cmp
sbb
test
arpl
sub
cmp
rcll
pop
sub
cltd
and
inc
and
push
cs
push
dec
mov
inc
add
mov
idivb
rorb
orb
mov
add
mov
mov
sbb
dec
sub
sbb
push
popf
inc
sub
xor
and
jo
or
xor
adc
or
xchg
fsubl
or
jp
cmpsl
jge
insb
ficomps
incl
cmp
inc
inc
dec
cmp
xor
push
push
inc
cmp
dec
dec
inc
or
sub
inc
dec
push
dec
dec
dec
push
or
or
out
mov
test
cmp
xlat
je
mov
hlt
xor
leave
mov
test
pop
int3
rorb
sub
jb
cmpsb
sub
sbb
rol
push
pusha
push
outsl
inc
add
sarl
sbb
rorb
or
enter
push
add
dec
rcr
pop
je
dec
je
loope
popa
imul
cli
cmpsb
or
push
and
xor
push
mov
mov
rolb
pop
and
mov
shrl
mov
sub
fld
test
jbe
xchg
jmp
sbb
pop
dec
sti
mov
sbb
daa
mov
xchg
rcrb
cmp
inc
cmpsb
sbb
pop
and
or
dec
fdivrs
je
and
push
bound
mov
cmp
pop
mov
mov
mov
divb
add
dec
and
mov
inc
adc
xor
adc
and
das
adc
dec
mov
mov
cmpsl
filds
push
fwait
dec
test
inc
adc
ja
rcrb
and
add
jmp
pop
push
adc
sub
dec
test
cli
push
ja
in
sbb
push
add
xor
shll
jecxz
shlb
dec
rcll
sbb
jns
add
add
jb
popa
mov
cmovae
sub
jb
add
sub
mov
mov
push
sahf
enter
cmp
sub
mov
dec
add
insb
in
add
pop
leave
pushf
nop
out
pop
je
popf
lock
inc
cmpsb
gs
daa
sub
je
sub
test
pusha
aaa
or
aaa
call
dec
push
pop
jb
cmp
jns
loopne
addr16
rclb
aaa
loopne
or
or
jne
lahf
adc
outsl
xlat
clc
mov
test
mov
jle
lds
or
nop
and
orl
push
or
les
adcb
arpl
addl
daa
lret
bound
xor
add
and
push
jl
inc
push
jmp
adc
xlat
loopne
je
fs
nop
je
je
sbb
push
mov
je
inc
adc
je
ss
sbb
push
jmp
sub
cmp
xlat
mov
lock
add
rclb
or
adc
dec
xchg
cmpsl
mov
call
or
mov
data16
and
or
or
or
inc
adc
add
or
push
bnd
lods
pop
or
or
and
add
and
cmc
and
subl
xor
xchg
loope
inc
mov
xchg
mov
jno
pop
cmpsb
stos
movsl
pop
out
dec
in
or
arpl
je
insl
push
fs
or
mov
cmpb
in
inc
dec
xchg
in
pop
cltd
mov
jg
jnp
sti
lea
fdivs
add
pop
jo
negl
mov
imul
xor
sub
xorb
xlat
or
push
sub
jno
mov
incl
add
or
mov
and
rcrl
test
inc
lods
pop
aad
mov
je
jg,pn
push
dec
push
test
and
inc
bound
mov
add
adc
sub
dec
test
popa
jo
mov
pop
stos
sub
lock
or
sub
pop
push
add
push
adc
dec
push
and
cmp
insb
test
cmp
rcrl
or
or
jns
aam
mov
xor
cmp
inc
jbe
mov
push
mov
test
and
nop
adcl
aas
jp
test
jb
push
mov
movsb
jns
mov
mov
nop
pop
aam
fiaddl
sub
cmp
xor
roll
dec
or
jl
and
and
les
jo
inc
or
add
xor
and
push
mov
add
aad
adc
and
stos
sbb
jl
push
xor
stos
add
inc
pusha
mov
sub
insl
push
sbb
hlt
pusha
test
imul
lods
cmp
mov
ja
or
xor
push
fnstcw
pop
sub
pop
jge
clc
mov
xor
push
cld
ret
push
cmp
jge
inc
dec
inc
or
aaa
dec
inc
xor
das
sbb
push
lds
jg
adc
jo
xchg
mov
add
into
push
dec
add
sub
mov
xor
fcoml
insb
adc
jle
adc
push
pop
or
inc
jle
dec
popa
or
or
fsts
jo
call
jle
fdivs
rol
adc
mov
cmpsl
push
adc
sub
les
sbb
push
aaa
mov
es
xchg
stos
jbe
cld
adc
inc
push
sbb
and
mov
mov
out
xchg
outsb
lods
or
shlb
cmc
sub
sub
push
sti
ficomps
fadd
cmp
js
fcmovnu
push
or
adc
push
cmp
mov
mov
cmp
pop
hlt
insb
and
xor
cmp
inc
dec
inc
std
cvtps2pd
pop
push
adc
ja
jmp
jo
pushl
or
loope
cmc
push
and
inc
and
pop
aaa
es
pushl
or
add
xchg
call
push
adc
mov
jns
mov
lock
dec
push
adc
pop
clc
jg
nop
in
inc
adc
rolb
sbb
push
mov
sub
in
and
adc
sbbl
and
pop
jb
add
gs
cmpsl
mov
outsl
insl
popa
imul
and
addr16
scas
cwtl
ret
popa
jl
dec
loopne
and
int3
call
push
jno
push
cmpb
jne
fsub
test
loope
jbe
jnp
xchg
adc
rorb
imul
inc
and
lods
mov
hlt
imul
ret
test
sbb
and
mov
popa
decl
stc
pop
repnz
inc
push
dec
pop
push
dec
push
inc
push
inc
dec
jo
and
dec
inc
dec
dec
cmpsl
inc
inc
push
aas
sub
and
daa
stos
and
test
mov
jnp
and
outsb
adc
dec
fiadds
hlt
jl
xor
push
imul
mov
mov
pop
pop
push
sub
xchg
push
sbb
fisubrs
xchg
int3
pop
cwtl
and
jl
cmp
xorb
test
lahf
lret
sub
roll
xor
into
dec
sbb
push
and
insb
subl
js
test
mov
and
sbb
nop
seta
mov
or
or
fiadds
or
dec
aam
pop
pop
dec
les
lret
pop
jo
dec
enter
repnz
jne
push
mov
rolb
loop
xchg
jno,pn
int3
inc
and
pop
adc
and
sbb
fs
jmp
cmp
lds
cmp
fstpl
adc
xlat
insl
mov
inc
xor
xor
out
xor
push
lcall
jno
testl
pushf
xor
test
lock
mov
imul
and
push
xor
repnz
sbb
push
xor
out
rolb
add
jb
loopne
mov
js
jp
fbstp
pop
rcll
xchg
xchg
or
inc
das
jne
sub
dec
jbe
xchg
aaa
adc
lds
loope
sub
std
adc
lock
mov
and
inc
pop
cmp
cmp
adc
cmp
dec
push
add
test
sarb
push
lcall
or
pushf
push
mov
mov
push
fsubl
mov
leave
or
or
push
xor
pop
add
cmp
in
and
js
cmp
cld
shlb
movb
fiadds
add
dec
jl
push
shll
lret
mov
mov
xor
push
mov
insl
call
fildl
xchg
fldt
faddp
or
fistl
addl
incb
dec
inc
pop
sub
es
pop
pop
cmpsl
cwtl
push
incl
dec
dec
inc
dec
push
add
mov
sbb
add
ss
ret
push
icebp
sub
push
mov
ja
push
push
insb
mov
sub
mov
xchg
mov
ret
movsb
sub
adc
ficoml
mov
push
cmp
and
pop
aaa
shlb
aad
push
cwtl
mov
xor
adcl
stos
nop
hlt
push
xor
sub
cmp
pusha
and
mov
sbb
add
jp
jmp
aaa
inc
add
and
mov
pushl
xor
lea
push
xor
xor
in
cmpsb
mov
std
scas
or
inc
push
push
dec
out
dec
push
inc
inc
push
inc
mov
in
mov
adc
add
insl
cld
mov
je
dec
jg
pop
loopne
in
jge
mov
push
daa
jg
jne
adc
sub
adc
insl
scas
pop
scas
pusha
inc
add
push
xlat
mov
jnp
js
outsb
and
pop
fsts
cmc
data16
cs
and
subl
pop
adc
lds
mov
sbb
dec
and
inc
or
sbb
or
dec
jecxz
inc
or
push
sbb
shll
outsb
and
sub
mov
add
out
lea
nop
les
lds
clc
dec
cmp
jne
inc
ss
lea
int
sbb
test
jge
dec
mov
sbb
adc
and
and
mov
add
xor
add
rorl
jo
cwtl
fcomi
imul
or
nop
mov
push
pop
inc
arpl
negb
pop
jp
lcall
loope
add
icebp
je
outsl
mov
fsubr
adc
das
inc
loopne
into
push
cmp
inc
ret
adc
mov
fimuls
cmpsl
jno
pushf
sub
inc
test
sub
js
inc
test
mov
or
push
dec
outsb
dec
gs
xor
lret
and
inc
mov
inc
mov
mov
pop
testl
xlat
in
mov
dec
cwtl
xadd
add
jb
adc
lcall
lods
sbb
add
int
fcomps
rorb
or
nop
iret
cmpsb
jns
inc
je
dec
xchg
pop
pusha
sub
test
adc
cmp
pop
xor
or
xor
mov
dec
cmp
outsl
inc
fimuls
jo
jge
or
xor
mov
test
nop
adc
cmpl
nop
fisttps
into
jl
jnp
cld
mov
add
test
mov
cmpsl
xchg
fdivs
insb
test
and
popf
jl
cmp
mov
fsubs
pop
jae
loope
test
fdivrs
cmp
dec
jnp
pop
in
mov
aad
sbb
push
mov
and
inc
sbb
jp
add
push
jae
mov
out
mov
or
inc
popf
adc
fadd
adc
nop
hlt
fcoml
adc
push
push
sbb
pusha
sbb
rorl
sbb
inc
or
adc
fldl
pop
orl
mov
dec
jne
xor
clc
mov
and
sbb
and
jb
sub
aas
sbb
pop
push
jo
mov
or
or
loopne
test
mov
xor
fisubrs
in
cmp
dec
jmp
nop
pop
pop
inc
lock
in
adc
pop
movsl
pushl
push
cmp
lcall
test
xchg
call
sbb
push
dec
hlt
lock
mov
pop
xchg
andl
lldt
pusha
cli
in
push
ds
mov
add
jge
notb
mov
cmp
sbb
cmp
sub
mov
mov
or
sbb
jl
jmp
out
jmp
mov
inc
xchg
or
popa
or
inc
or
test
daa
clc
push
loope
dec
or
mov
mov
lock
les
bound
daa
test
jbe
roll
xor
xor
sbb
int3
insl
add
outsb
push
je
add
push
rcll
inc
cmpsl
xor
cmp
repnz
xor
xor
addb
and
rcl
xchg
stos
adc
xchg
es
mov
lock
mov
cwtl
enter
mov
js
popa
scas
pop
adcb
out
mov
push
xor
jno
or
dec
cmp
xor
adc
pop
mov
add
add
push
jno
sbb
add
mov
push
pop
lock
pop
jl
dec
and
inc
cltd
xchg
pop
fs
ja
xlat
lds
pop
int3
xchg
cmpsl
mov
mov
pop
pusha
pop
inc
clc
stos
add
pop
insb
cwtl
inc
mov
or
adc
adc
adc
das
out
cmp
mov
test
pop
cmp
sub
xchg
fcoms
sbb
enter
xor
ss
add
inc
jae
jp
or
push
insb
sbb
or
and
push
sub
cmove
push
jmp
mov
xchg
xor
push
inc
mov
fs
xchg
cwtl
movsb
rcrb
movsb
add
test
cltd
test
fcmovb
in
cltd
sbb
lcall
ss
push
sub
cmp
or
jmp
faddl
push
cmp
mov
or
nop
mov
inc
outsl
push
cmp
push
mov
iret
xlat
mov
psllw
outsb
mov
inc
adc
dec
gs
jb
addr16
or
fisttps
arpl
icebp
insl
jae
and
push
jae
mov
nop
ja
dec
cld
notb
fisttpl
xchg
aam
or
dec
add
pop
xchg
xor
xor
sbb
ja
adc
imul
jmp
push
add
xor
mov
popa
xchg
push
xor
or
cltd
into
pop
adc
in
or
push
ret
push
adc
push
lods
adc
xor
pop
xchg
enter
test
fs
mov
cwtl
add
adc
rolb
push
out
sahf
sub
or
sub
dec
nop
cwtl
and
add
aam
int
add
sti
and
adc
push
repnz
test
add
and
dec
pop
add
push
adc
and
cmp
and
mov
xchg
scas
in
or
incb
sub
dec
push
mov
dec
fcoms
inc
push
ljmp
in
and
shrl
fistpl
lods
adc
sub
sub
pop
sub
mov
nop
jo
rolb
dec
add
lcall
pmulhw
inc
sbb
mov
sahf
pop
js
bound
insl
dec
add
cli
mov
js
inc
fdivl
inc
ds
inc
pushf
mov
mov
outsb
dec
push
pop
sub
pop
test
pop
in
movsl
pusha
mov
sub
jo
jnp
clc
mov
inc
out
pop
sub
sti
clc
push
and
mov
lahf
test
cmpb
and
pop
outsl
mov
pop
sbb
mov
and
adc
add
add
enter
popa
pop
mov
pop
adc
adc
mov
pop
inc
out
int
jmp
dec
adc
incl
sub
call
lea
sbb
push
add
add
cmpl
xorb
sbb
int
sbb
push
imul
sbb
adc
add
pop
push
xor
lods
mov
aad
pop
movsl
fcompl
or
adc
xor
nop
xor
xor
dec
and
sbb
or
les
sub
or
adc
negb
xchg
xor
mov
dec
xchg
imul
xchg
pop
inc
mov
push
inc
inc
and
test
mov
push
mov
adc
add
aam
call
je
rcll
ljmp
movq
adc
inc
cmpsb
jge
cmp
xchg
nop
add
mov
adc
add
mov
dec
sbb
movsb
or
adc
scas
jge
inc
ja
xor
pop
xor
xor
mov
fisttpll
or
daa
data16
ds
test
incl
out
sub
cmpsl
add
pop
pop
int3
mov
sbb
movlhps
xchg
cld
mov
shll
in
imul
nop
xchg
or
test
jne
and
in
or
out
repz
cmp
and
mov
mov
fs
and
mov
and
inc
mov
and
jecxz
pushf
iret
lea
mov
leave
adc
jge
and
mov
and
dec
nop
add
inc
rorb
test
pop
push
lret
hlt
adc
lea
mov
lea
cmpsb
sbb
xchg
mov
mov
adc
test
mov
sub
and
shlb
jne
xor
inc
add
xchg
adc
add
adc
in
das
push
pop
pop
mov
mov
and
lahf
mov
inc
es
sahf
sub
adc
or
push
and
inc
pop
mov
jns
xchg
inc
dec
or
jl
outsl
lods
shll
xlat
xor
cmp
adc
jns
mov
mov
rclb
and
mov
es
movb
xchg
jb
stc
sub
test
lock
and
push
adc
xchg
mov
lock
adc
cmp
mov
ss
adc
xchg
cltd
xchg
sbbl
fnstcw
loope
adc
mov
jle
pop
mov
mov
nop
cmp
mov
roll
cmp
cld
pop
cmp
das
push
fiadds
push
insl
pusha
sbb
push
mov
add
sub
push
jne
repnz
pusha
sbb
push
xchg
outsb
daa
scas
imul
aas
jg
cld
cmp
cmp
jne
and
bound
mov
sbb
faddl
ret
das
and
push
fs
clc
jmp
addr16
pop
mov
xor
push
or
and
je
or
pusha
jno
nop
test
sbb
add
dec
repnz
push
fs
xor
xor
movsb
mov
cmp
sbb
push
pop
dec
gs
push
lret
inc
nop
mov
push
pop
pop
insl
mov
mov
jbe
pop
inc
imul
mov
sub
xchg
insb
add
adcb
scas
or
fcompl
push
xchg
and
push
andb
stc
ljmp
leave
fdivs
or
fwait
sub
adc
add
not
sub
dec
inc
adc
sbb
mov
xor
adc
jns
imul
fs
jns
mov
test
push
lret
imul
adc
divb
call
in
cmp
jo
jg
inc
in
cmp
notb
mov
push
cmpb
push
lcall
push
and
je
push
dec
stos
adc
test
imul
iret
push
push
xchg
sub
pushf
push
jns
pop
xchg
scas
xchg
sub
and
jmp
jns
movsl
push
cltd
adc
dec
pop
push
xor
sarb
and
sbb
and
pop
push
sub
or
add
mov
xchg
mov
adc
dec
int3
inc
inc
test
sub
in
mov
and
adc
fdivs
cmp
aas
sbb
js
and
adc
inc
push
push
push
cmp
mov
mov
dec
je
arpl
xor
dec
xchg
jmp
jo
add
rcrb
mov
xorb
and
mov
and
push
mov
add
jo
adc
and
lods
add
pop
mov
mov
out
push
std
ret
push
cmc
push
mov
pop
add
sub
mov
je
push
mov
jecxz
xchg
adc
daa
movb
sub
mov
popa
inc
pop
xor
enter
lock
pop
and
mov
sbb
scas
inc
push
adc
mov
adc
xchg
gs
pop
mov
push
stc
mov
dec
dec
addr16
bound
adc
push
addb
add
push
sub
sub
imul
xchg
and
and
sub
and
jo
sbb
sbb
mov
lods
pop
pop
xchg
scas
hlt
mov
movsb
push
div
pop
lcall
adc
orl
nop
scas
and
sbb
mov
test
xchg
push
arpl
inc
mov
dec
ljmp
clc
mov
cwtl
ret
sub
aam
hlt
or
arpl
inc
and
add
jb
inc
cwtl
addb
je
jg
test
jmp
call
inc
and
or
dec
pop
ljmp
movsl
push
rcr
fnstsw
and
sub
jae
adc
aad
pop
jae
ja
pop
incb
dec
lods
sbb
out
push
jmp
loop
mov
dec
and
daa
js
inc
cltd
adc
push
xor
mov
mov
dec
mov
outsb
iret
or
adc
cld
hlt
mov
add
pop
or
sbbl
subl
arpl
addr16
notb
js
jl
and
lcall
inc
lahf
sbb
add
push
dec
in
xor
or
lock
fistpl
jo
aas
mov
cwtl
jo
cs
sbb
dec
lock
dec
or
mov
cmp
xchg
jl
enter
adc
pusha
xchg
stos
add
test
jmp
mov
mov
push
add
repnz
jne
mov
sbb
dec
dec
add
das
outsb
mov
adcl
and
mov
mov
add
adc
inc
add
insl
test
adc
outsb
outsl
sub
sbb
xor
shrb
adc
xor
pop
dec
dec
pop
and
sub
sbbb
lds
hlt
aaa
pop
or
je
andb
fwait
rcrb
pop
or
fcoml
dec
movsl
nop
nop
adc
outsl
arpl
pop
sub
and
insl
xchg
mov
js
mov
add
mov
andl
push
xor
pop
ss
test
push
mov
lock
test
mov
sbb
or
sbb
sbb
idiv
fs
ja
jns
pop
mov
dec
and
mov
inc
mov
cwtl
into
xorl
or
sbb
shll
fstps
loop
inc
push
pop
fiadds
test
mov
mov
das
mov
pop
andl
test
bound
add
repz
xor
mov
pop
cmpl
imul
daa
sbb
mov
adc
add
xlat
mov
daa
jns
test
daa
cmpb
lar
dec
loope
outsb
cmpsb
sub
in
mov
std
test
movb
test
sbb
sbb
sahf
mov
adc
sub
sbb
push
data16
cmpsl
adc
dec
sbb
mov
test
or
enter
in
clc
in
push
movsl
add
dec
mov
dec
add
add
mov
xor
mov
push
dec
jb
inc
jmp
or
fwait
push
addl
inc
and
cmp
lea
adc
push
js
xchg
pop
adc
xchg
pusha
jo
cltd
rol
bound
mov
push
xchg
mov
pop
add
adc
dec
enter
js
addb
or
sarl
mov
cmpb
mov
inc
dec
add
jp
pop
adc
push
pop
in
adc
add
mov
sti
push
das
aas
jne
and
or
fisubrs
sub
sub
push
mov
jne
ljmp
loope
or
mov
in
or
insl
cmp
xchg
int3
popf
outsb
loop
sbb
cmp
and
push
pop
hlt
pop
ret
loopne
mov
les
jb
fildl
jae
lods
cmp
or
adc
andl
loope
fstp
movsl
fnsave
mov
sbb
xchg
sub
xchg
push
lcall
push
cwtl
cmp
jecxz
sub
fwait
loope
dec
pop
push
sbb
popa
shlb
inc
push
ret
cmc
pop
imul
mov
cmp
in
lds
sub
andb
lea
stos
test
mov
insb
cs
push
pop
dec
outsb
mov
je
in
pop
stc
sbb
sbb
loopne
enter
mov
xor
sbb
cmpl
dec
in
popf
sti
enter
cmp
jl
mov
pop
xorl
or
mov
insl
enter
pop
inc
jl
and
xchg
mov
sbb
movsl
arpl
and
ficompl
sbb
xor
mov
and
adc
pop
sbb
sbb
push
mov
loopne
dec
je
stos
adc
fisubl
imul
dec
add
inc
je
inc
mov
call
rclb
adc
adc
dec
cmp
or
lods
inc
sub
cmp
sbbb
mov
jbe
inc
test
inc
pop
scas
fnstenv
or
add
in
add
mov
jno
xorl
shl
cs
push
nop
aad
xchg
fcom
daa
test
or
fcomps
pop
nop
mov
loopne
std
movb
mov
popa
cmpl
push
stos
add
out
mov
leave
dec
movsl
xchg
testl
jbe
inc
cmp
int3
repz
and
push
daa
movsb
and
inc
push
xchg
aaa
push
push
push
mov
inc
sub
jo
test
pop
cmp
inc
or
testl
xchg
mov
xorb
dec
das
enter
xor
loope
push
xchg
mov
sbb
movsb
aaa
repz
das
lods
xor
mov
dec
xchg
xor
and
cmp
jecxz
fbstp
cmp
lock
lock
int3
mov
je
dec
xchg
in
in
mov
add
call
and
xchg
jb
add
shlb
in
das
adc
dec
aas
dec
cli
jg
dec
inc
inc
push
sub
inc
imul
or
rorl
inc
mov
sbb
stos
sub
dec
cmp
in
push
outsl
adc
inc
push
mov
push
pop
inc
pop
insb
mov
std
sbb
push
sub
lea
out
pusha
mov
sbb
push
mov
mov
testl
push
insb
pushf
mov
dec
add
mov
in
mov
scas
mov
loop
das
mov
add
adc
cmpsl
or
xchg
fcmovb
rcll
es
xchg
pop
dec
nop
mov
cwtl
dec
dec
sub
sub
and
adc
adc
jae
mov
jns
pop
ja
mov
icebp
lcall
stos
out
mov
and
push
lcall
jnp
xchg
dec
pushl
cmp
add
or
jl
mov
enter
xor
test
and
and
xor
pop
in
in
inc
mov
jnp
nop
stos
testb
push
and
cmp
loopne
and
and
mov
aad
jge
inc
ret
lcall
inc
ficoms
mov
jno
jmp
lock
imul
ret
into
pop
lea
xor
les
ffreep
scas
adcl
sbb
add
shrl
ja
hlt
jno
push
jne
aaa
dec
push
push
repnz
fiaddl
push
push
inc
inc
inc
and
jnp
pop
push
push
inc
popa
dec
inc
inc
daa
jns
push
out
clc
dec
mov
xchg
or
inc
movsb
lret
sbb
adc
pusha
dec
add
ret
cli
push
shr
insl
cmpsl
cmp
xor
push
insl
jl
andl
lret
add
lret
lock
rcrl
inc
adc
push
ret
sub
das
ja
fcmovbe
add
and
addb
or
or
pop
and
out
push
pop
movsb
add
cmp
push
js
pop
testb
pop
sub
mov
daa
sub
lods
bound
imul
and
push
test
fsubp
mov
adc
add
ret
xchg
repz
aaa
or
mov
cltd
and
jnp
push
insl
add
mov
inc
xchg
inc
and
enter
or
loope
xlat
insl
sbb
pop
adc
xor
jle
inc
pusha
push
push
mov
adc
loope
push
push
sbb
inc
in
clc
sub
sub
add
mov
jecxz
mov
jle
nop
sbbb
fldl
inc
out
sbb
addl
pop
xor
sbb
ret
dec
adcb
imul
popa
mov
and
fst
jmp
add
shl
mov
jne
jns
mov
push
iret
add
and
add
mov
mov
jl
xchg
leave
cmpsb
mov
pop
and
add
pop
movsl
xchg
push
xlat
ud2
mov
arpl
cmp
inc
jl
movsl
bound
fistl
inc
js
push
lods
adc
adc
push
dec
or
xchg
xorb
and
addb
fs
je
xchg
xchg
dec
jge
pop
dec
jl
or
ret
or
pushf
push
push
mov
sbb
jg
push
testb
inc
insl
push
imul
xchg
out
cmpsb
ss
sbb
nop
xchg
mov
inc
lds
pop
inc
lret
cmpsb
daa
ret
sub
or
popf
test
fld
test
hlt
jmp
pop
lret
cmp
push
jbe
mov
dec
dec
or
loop
lods
jmp
fst
and
sti
lret
mull
dec
add
sbb
imul
in
xchg
or
add
lods
cs
add
push
sbb
fists
mov
or
inc
add
scas
repnz
pop
adc
int3
add
push
or
xor
lahf
pusha
mov
cmpsb
cltd
ficoml
mov
sbb
mov
jno
aaa
or
dec
orl
aaa
mov
or
into
mov
outsl
dec
gs
mov
cmp
insb
add
movsl
lods
dec
loopne
pop
lea
xor
cmpsb
mov
cmp
sbb
xorl
jb
call
rolb
and
clc
and
or
ret
into
or
push
push
sbb
mov
xor
dec
add
mov
and
js
jecxz
sub
pop
sub
fwait
lea
add
sub
mov
sar
roll
adc
dec
imul
cld
ljmp
test
pop
pop
add
add
mov
push
pop
dec
addr16
push
or
fs
or
adc
cmpsb
movsb
and
out
imul
adc
stos
adc
push
pop
mov
sub
cltd
loopne
push
mov
mov
mov
push
push
adc
push
addr16
and
push
and
lods
fadd
or
and
or
dec
popa
add
mov
add
xor
add
sub
fadd
leave
pop
pushf
inc
or
adc
sbb
add
xchg
mov
xor
jae
add
mov
cs
jne
jo
xchg
or
stc
xor
adc
pop
bound
rorl
sbb
mov
shrb
or
jns
cld
and
adc
dec
mov
sbb
push
adc
les
dec
mov
out
and
xchg
cmp
addl
nop
and
sub
inc
adc
mov
mov
or
cld
pop
adc
int3
xchg
cmpl
daa
aad
mov
add
cld
dec
adc
incl
sbb
lock
daa
inc
les
jge
lds
ret
test
mov
movsl
test
in
xor
leave
inc
and
mov
fnsave
and
mov
or
sub
sub
inc
or
test
les
insl
inc
sub
aad
gs
dec
push
fidivl
mov
fistpll
mov
and
inc
add
in
pop
fidivs
inc
in
call
pop
xor
push
pop
add
leave
add
pop
outsl
repnz
fstp
adc
inc
cli
or
and
enter
push
iret
rorb
jmp
or
or
ret
inc
aaa
xor
ds
sbbl
enter
loopne
push
cmp
jmp
fs
mov
dec
push
push
add
or
add
insl
imul
or
dec
or
cs
addb
adc
push
add
mov
pop
jg
dec
add
data16
mov
movsl
pop
jg
push
inc
outsl
roll
outsb
cli
or
mov
mov
popa
bound
sbb
lds
adc
arpl
xor
lock
add
add
pushl
sarb
add
addr16
loopne
or
idivl
imul
das
jmp
ljmp
shlb
push
push
rorl
rorb
or
adc
inc
adc
push
xchg
jo
jns
and
mov
ret
mov
xor
or
add
stc
cmp
jo
adc
push
push
ret
test
dec
out
xchg
test
dec
jbe
pop
pop
inc
push
add
pop
pop
push
xchg
lods
or
clc
adc
cs
and
fdiv
mov
sbb
fmuls
fisttpl
adc
dec
test
inc
sub
orb
shr
pop
lock
or
pop
mov
aam
add
or
pop
pop
pop
mov
adc
dec
fucomi
push
xchg
sub
inc
or
cwtl
sbb
mov
loope
aas
lock
cmp
jne
pop
push
lret
adc
sti
adcb
push
xchg
cmp
stos
in
or
cmp
lds
jmp
add
orl
mov
pop
or
hlt
or
pop
xorl
ret
inc
loope
inc
popl
jne
inc
stos
in
cli
movsl
inc
jbe
arpl
cmp
dec
adc
xor
push
pop
sbb
ja
int3
nopl
cld
dec
pop
xor
inc
xchg
insl
dec
test
or
add
push
add
lds
out
ret
test
adcl
xchg
lock
lods
and
xchg
cmp
enter
or
push
pop
andl
push
clc
repz
movsl
sbb
or
inc
adc
or
lock
aam
sbb
inc
mov
adc
sbb
mov
fadds
mov
int3
cmp
sub
adc
rol
loope
inc
inc
nop
inc
add
and
andl
mov
add
mov
cmc
xor
and
test
sub
insl
loope
das
adc
add
ja
cmp
push
pop
clc
pusha
adc
jmp
add
and
in
jg
adc
and
fistl
imul
mov
movsl
lock
cld
inc
and
push
mov
pop
fstl
sub
stc
lods
push
inc
jae
add
les
mov
or
cmpb
loopne
inc
ret
jle
enter
faddp
fisttpll
sbb
lock
and
sbb
push
or
jp
mov
bound
mov
pop
and
push
shrb
add
cmp
jecxz
xor
les
pavgb
fwait
stos
pop
and
cmpsb
dec
push
dec
push
shrb
ficompl
outsl
sbbl
cld
push
rol
fxch
pop
fisttpll
push
fildll
adc
dec
enter
xor
fmuls
das
jp
inc
xchg
daa
daa
mov
dec
add
or
jo
xchg
xor
adc
out
xor
inc
dec
jmp
mov
andb
pop
mov
ret
jmp
adc
in
dec
jae
cmpsl
les
pop
das
inc
mov
mov
mov
push
mov
loope
cwtl
stc
testb
mov
and
inc
mov
ret
loopne
ja
mov
sahf
fidivl
movb
jnp
gs
shlb
rclb
sub
xlat
cmpb
cli
mov
mov
outsl
push
lret
adc
faddl
data16
std
xlat
jae
lock
mov
scas
mov
iret
mov
and
add
mov
xor
jecxz
mov
lock
fs
pop
or
push
inc
dec
push
cld
pop
clc
hlt
push
sbb
fs
push
push
xor
add
sbb
ss
and
and
enter
enter
mov
mov
orb
loope
enter
in
fcmovne
sbb
outsl
sbb
add
orl
orl
orl
cmp
rcr
cltd
xchg
add
fmul
add
nop
stc
faddl
fnstsw
xor
loopne
lcall
sbb
push
pop
invd
or
fs
inc
or
or
nop
inc
push
or
pushf
sbb
icebp
repnz
repz
cmc
testb
and
clc
stc
xor
and
and
and
loop
or
enter
out
xor
and
call
sub
in
enter
in
out
out
and
rolb
aam
or
enter
fnstenv
enter
fcmovnu
enter
fstp
fbld
orl
rol
or
enter
or
enter
leave
xor
and
and
and
mov
or
enter
mov
mov
and
or
push
pop
fadds
add
fimuls
test
jne
data16
add
and
test
rolb
add
aas
popf
xor
pop
dec
out
int3
mov
push
inc
xor
sbb
loopne
jle
push
inc
inc
sbb
mov
jmp
xchg
sub
loop
insl
inc
xchg
adc
sub
or
adc
loopne
mull
sbb
xchg
or
mov
or
mov
inc
inc
jne
cmp
push
je
fwait
push
outsl
test
data16
leave
add
sub
or
or
xor
push
dec
add
mov
cmc
imul
ljmp
mov
out
fnsave
nop
das
into
daa
push
outsb
int
fisubs
pop
jo
outsl
sbb
jbe
add
cmove
or
je
sbb
dec
ficoml
or
push
outsb
test
or
rcll
or
or
push
int3
sub
insl
inc
insb
popf
std
jge
aaa
push
push
push
je
iret
insl
dec
outsl
jo
je
shll
pop
inc
jns
sbb
mov
pop
in
addr16
and
add
cltd
lea
pop
xor
or
ret
gs
in
adc
pop
outsl
or
adc
jle
pop
call
jne
dec
lcall
bound
add
dec
repnz
or
outsl
ds
inc
xor
addr16
outsl
enter
inc
outsb
jb
jae
add
outsl
lods
jecxz
push
mov
aaa
pop
mov
shrb
fistps
test
mov
std
call
lea
test
sahf
aad
sbb
sub
orl
add
cmovns
and
sub
mull
and
insl
flds
dec
in
nop
subb
inc
inc
pop
push
mov
sahf
gs
nop
imul
and
push
sub
cld
jb
in
and
xor
outsl
add
aam
adc
inc
out
incl
aam
push
aad
cmpsl
pop
aas
or
rcrb
xchg
movsb
cld
inc
pop
add
jmp
test
lock
sub
push
dec
gs
imul
inc
int3
sub
sub
add
cwtl
pushf
add
jb
mov
add
or
xchg
add
jl
test
nop
jo
push
outsl
mov
push
xor
inc
jae
out
or
push
insl
or
push
add
leave
ret
gs
mov
les
jnp
outsb
adc
nop
push
pop
sbb
cmpsl
mov
push
inc
mov
rclb
add
rcr
fcoms
cmp
adc
ds
push
out
add
add
push
inc
je
adc
test
fists
pop
add
xor
or
decl
ficomps
xchg
add
push
push
cmp
in
ret
add
add
dec
push
sbb
add
jo
push
cld
dec
ret
dec
add
or
shlb
inc
sbb
pop
fcomps
testb
test
inc
adc
pop
add
or
adc
xor
pop
gs
arpl
sbb
pop
sbb
push
ja
mov
movsl
adc
push
xor
add
lods
outsb
sbb
int3
push
or
lods
lods
in
or
dec
repz
fldl
rcrl
out
adc
mov
mov
repnz
sbb
inc
fcompl
mov
into
sub
push
movsb
fcmovu
fcoml
pusha
int3
lahf
call
mov
xchg
decl
pop
mov
mov
es
sbb
pusha
lret
add
ffree
ss
testb
and
inc
sbb
inc
imul
dec
xchg
mov
sub
inc
jle
out
mov
in
nop
inc
push
jmp
mov
clts
insb
and
lock
sbb
and
and
push
nop
fcom
ss
aas
pop
adc
addb
or
xorl
sbb
cs
incl
hlt
fs
push
fimuls
sbb
fcomp
mov
aaa
cltd
fadds
icebp
xchg
incl
or
paddsw
lcall
push
sub
ss
push
xchg
fadds
mov
mov
sbb
cmpsl
push
adc
pop
xchg
mov
sub
inc
cld
mov
add
hlt
rcll
ds
push
xor
sbb
imul
sub
daa
or
mov
jmp
movsb
push
and
lods
inc
push
lds
dec
insl
popa
mov
test
inc
clc
ljmp
pushf
push
push
push
sub
popl
popa
jl
nop
add
mov
lods
in
dec
pop
push
xor
shlb
mov
sbb
inc
out
mov
lods
push
jle
das
pop
inc
ds
js
test
jg
xor
xor
xor
mov
xor
push
sub
not
xor
xchg
inc
dec
cmp
push
or
adc
dec
push
pop
and
mov
xchg
mov
in
pusha
push
je,pt
sub
cmp
push
pop
xorl
or
shrb
rcrb
cmp
sahf
mov
or
dec
popa
repz
pop
pop
dec
adc
les
stos
pop
mov
cmp
pop
pop
in
push
insl
fiadds
cwtl
fs
call
ss
fcomps
jl
nop
push
pusha
je
aam
cld
pop
mov
popw
sbb
dec
jl
mov
sub
pusha
push
sbb
add
inc
pushf
sbb
insl
push
xor
dec
push
inc
pop
pushf
arpl
arpl
pop
cmp
fs
push
cwtl
push
xchg
fiaddl
sbb
dec
dec
mov
push
dec
push
xchg
in
gs
pop
repz
mov
mov
cmp
daa
dec
pop
sbb
fisttps
cmp
pushf
daa
jl
in
shll
out
cmp
dec
xorb
adc
clc
decl
addr16
mov
xor
rol
xor
inc
dec
jne
jecxz
sub
aam
add
test
out
and
movsb
jo
xor
inc
xchg
inc
dec
pop
cmpsl
nop
xor
add
xor
test
clc
or
add
cmp
lock
pop
push
xchg
inc
mov
pop
inc
cmp
leave
je
movsb
jo
jne
and
mov
mov
shl
jl
sub
cmp
xor
imul
inc
js
adc
adc
or
sbb
cmp
xchg
sub
or
inc
dec
cmp
rorb
add
fildl
pop
loopne
push
and
icebp
daa
dec
mov
and
add
xchg
lds
enter
jg
into
dec
add
push
or
fnstenv
inc
cs
repz
lods
or
adc
or
sub
xchg
push
xor
icebp
sbb
insb
mov
sbb
push
jmp
or
xor
adcb
jne
mov
dec
xchg
in
jnp
fidivrs
inc
mov
je
xor
movsb
dec
adc
xlat
cmp
xchg
mov
push
and
repnz
sub
fucompp
jl
fidivrl
incl
jle
aad
inc
cmpsb
in
add
imul
int
cmpsl
nop
push
fs
pop
inc
loope
cmpsl
test
adc
jge
mov
or
dec
cmp
ret
test
xchg
push
fwait
lea
lock
push
push
cli
xchg
repz
add
mov
addl
pop
add
sbb
je
xlat
mov
iret
mov
loop
mov
add
push
andb
nop
push
clc
jns
rolb
or
sarb
inc
insb
into
popa
cld
mov
jb
pop
mov
out
inc
inc
div
xchg
mov
dec
mov
and
dec
popa
jbe
add
jo
sub
push
sbb
pop
aaa
jecxz
add
je
mov
fcomp
inc
xchg
pop
pop
test
gs
popa
pop
mov
lahf
jne
or
jl
incb
arpl
imul
dec
data16
movb
mov
sahf
dec
xor
add
push
imul
push
or
imulb
dec
addr16
rcrb
fistpl
or
sbb
cmovae
pop
add
jo
mov
add
inc
push
pop
adcl
das
inc
das
mov
inc
push
xchg
dec
mov
insb
les
or
cmp
and
int3
cmpsb
mov
or
sub
xlat
jno
ret
push
stos
daa
pop
xchg
fcoms
and
lahf
sbb
mov
adc
mov
xchg
in
pop
or
push
or
pop
andl
gs
jg
xchg
fcomip
push
mov
mov
adc
rcll
out
adcb
jbe
imul
push
iret
push
addl
outsb
jne
or
jns
bswap
or
xor
cs
cmp
hlt
js
arpl
add
cld
xor
roll
mov
push
cmp
and
das
or
nop
popa
or
add
sahf
jge
mov
fs
push
mov
or
fmuls
pop
test
sbb
jb
pop
or
pusha
das
test
aas
testb
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
pop
or
inc
push
in
pop
push
fimull
notl
dec
inc
dec
dec
arpl
mov
popa
pop
dec
inc
inc
push
adc
aaa
pusha
decl
inc
push
dec
dec
push
mov
push
xchg
lods
mov
dec
and
xchg
push
repnz
out
inc
inc
xor
xor
fbld
daa
and
inc
dec
inc
xor
xchg
inc
push
inc
inc
dec
notb
push
rol
dec
sub
dec
lea
imull
push
cs
icebp
lea
inc
inc
inc
das
mov
lock
mov
sbb
out
pop
dec
pop
adc
push
push
dec
mov
push
inc
scas
dec
inc
dec
loopne
loopne
push
mov
test
loop
gs
mov
lret
aad
or
es
outsl
xor
add
push
jge
mov
xchg
add
add
or
jge
dec
or
sbbb
add
add
xor
or
adc
inc
or
and
and
int
and
mov
xor
fmuls
cmovae
dec
add
jle
or
or
pop
or
mov
and
or
dec
pusha
pop
xchg
or
rol
je
or
push
jo
push
lea
push
jns
mov
imul
sarb
xchg
inc
add
fistpll
call
cmp
lret
and
mov
in
lahf
faddl
and
and
inc
loope
imul
mov
loop
and
jo
daa
sub
and
cwtl
add
cmp
shr
adc
imul
rorl
xor
cmp
mov
das
cmp
hlt
jo
cli
das
push
mov
ret
jg
leave
adc
in
inc
jae
movsb
jmp
lret
mov
cmp
pop
aaa
dec
fsubl
repnz
pop
ja
mov
mov
les
inc
adc
mov
mov
xor
mov
aaa
adc
mov
out
and
iret
mov
enter
inc
sbb
je
inc
iret
and
shr
adc
stos
xor
dec
inc
aam
test
aad
or
mov
sbb
xlat
adc
incb
mov
add
dec
sbb
inc
int
mov
push
cmp
or
xor
sbb
and
mov
mov
inc
fiaddl
pop
fs
int
flds
jecxz
or
or
or
fisttpl
or
fcmovnbe
push
or
jp
lods
push
or
popa
sub
or
mov
inc
dec
repz
dec
mov
pop
sbb
xlat
repz
mov
sub
dec
xchg
ljmp
push
xor
mov
cmp
inc
cmp
inc
or
pop
arpl
sbb
aaa
push
testl
lea
adc
mov
sub
inc
pop
pop
jecxz
out
cmp
inc
movsb
mov
push
xor
fisttpl
mov
fsubr
loop
inc
push
das
pmaxsw
sub
neg
push
mov
mov
bound
movsl
sbb
sti
and
or
out
cmp
orl
adc
aam
outsb
inc
sbb
xchg
xchg
pop
shll
push
xor
stos
adc
mov
mov
das
jns
cmp
inc
sbb
add
mov
cmp
mov
or
and
addl
inc
nop
mov
cmp
popa
cmp
or
dec
adc
pop
sbb
push
shlb
movsl
add
add
insl
leave
inc
add
cmp
orb
movb
roll
icebp
sbb
lea
jno
xor
aaa
jo
add
push
jne
faddp
push
lock
cmp
iret
imul
adc
ficoml
and
in
js
loopne
inc
mov
shrb
lret
or
lock
cs
cmp
pop
jb
shrl
sbb
sub
push
and
cs
add
and
pop
sbb
or
enter
mov
inc
push
and
imul
mov
inc
xor
stos
add
nop
outsl
sub
ret
xchg
js
mov
cmp
nop
push
enter
pop
mov
fmull
inc
inc
fwait
int3
mov
repz
mov
repz
xchg
add
add
xor
xlat
lock
icebp
adc
cmp
push
jno
inc
fists
mov
fisubrl
pop
fisubrl
stos
push
test
mov
add
add
mov
sbb
or
out
gs
ss
pop
and
imul
gs
cmp
push
test
bound
nop
cmp
aas
jp
push
and
xor
shr
mov
mov
push
aas
and
inc
cmp
int3
lock
fwait
enter
or
inc
rol
push
and
xor
xchg
out
sbb
out
clc
adc
jb
sbb
out
les
adc
dec
movl
pop
mov
daa
mov
xlat
cmpsl
xchg
call
imul
out
or
adc
cld
xor
enter
movups
inc
daa
cmp
xchg
inc
or
cmpsl
jle
sub
jge
iret
loope
pusha
pop
outsb
shl
mov
fs
mov
mov
push
mov
sub
or
sub
or
lea
xor
or
xor
mov
sub
push
pop
xchg
jo
adc
bound
and
add
inc
cs
inc
cmpsb
mov
adc
push
mov
mov
ja
sbb
cs
adc
mov
hlt
fs
dec
mov
mov
adc
test
cmpsl
add
pop
push
xchg
and
xchg
pop
rcl
sbb
bound
inc
scas
lea
push
enter
test
pop
jb
add
mov
pop
dec
adc
push
mov
mov
jbe
or
int3
add
sub
jge
push
lock
imul
rep
or
ss
pop
test
incl
sbb
lea
fsub
dec
adc
mov
int3
scas
popf
push
mov
cmpsl
add
in
scas
dec
dec
gs
sbb
in
sub
or
int3
adc
pop
jb
jne
pop
gs
stos
sbb
mov
pop
shll
into
or
dec
dec
push
push
mov
cltd
push
adc
cmp
jl
dec
jecxz
push
push
incl
stc
shlb
aaa
adc
xchg
or
cmp
daa
mov
sbb
jo
cmp
test
shlb
je
mov
mov
dec
jb
mov
fwait
ret
add
push
fdivrs
jmp
ss
cs
sbb
sbb
adc
mov
ret
adc
cltd
nop
push
add
jle
ret
adc
callw
pushf
mov
scas
insb
or
xor
popa
fs
add
push
or
cmpsl
scas
push
jb
inc
bound
add
out
aam
jb
inc
dec
dec
cli
ffreep
mov
and
mov
cmp
je
mov
xchg
push
bound
clc
push
aad
xlat
adc
sbb
jne
add
mov
pop
pusha
stc
xchg
scas
ret
cmp
jecxz
sbb
incl
arpl
push
sbb
cmp
adc
adc
and
lock
not
and
mov
je
add
lcall
pop
arpl
test
and
push
and
sub
and
add
out
and
push
or
pop
test
lods
and
dec
adc
rolb
mov
sbb
xchg
adc
sbb
shl
adc
sbb
inc
cmpsb
xchg
pushf
pop
inc
das
mov
mov
and
sbb
cmc
cmp
pusha
adc
and
mov
movsl
sbb
imul
push
orl
xchg
imul
std
mov
or
enter
sti
jo
or
jp
negl
in
add
roll
jp
inc
mov
and
in
arpl
enter
adc
pop
std
nop
push
pusha
sbb
cmpb
add
inc
push
push
lea
pop
mov
adc
repz
lods
xchg
mov
movsl
dec
out
xor
adc
inc
daa
lret
xor
ss
or
nop
fnsave
pushf
mov
xor
nop
sbbl
es
add
jge
in
popa
sbb
xchg
jl
push
adc
add
jmp
push
sbb
or
mov
jl
ret
cld
bound
mov
mov
and
imul
imul
or
xorb
inc
arpl
gs
push
fists
pop
imul
lock
mov
insl
arpl
push
je
jbe
lods
inc
or
fimull
push
cwtl
and
adc
adc
adc
jbe
aam
adc
out
mov
inc
cmpsl
add
sub
je
or
and
lods
shl
loope
push
inc
clc
dec
divl
shl
and
mov
mov
pop
sar
mov
enter
addb
pop
fstps
and
popa
movsb
orl
mov
adc
popa
ret
adc
lods
ss
inc
inc
test
push
shl
psubb
adc
lcall
adc
sbb
cmpsb
sub
dec
push
and
lds
and
adc
lahf
shlb
sbb
jns
add
cmp
sbb
adc
inc
add
push
push
jge
fidivrs
dec
push
es
pop
imul
neg
and
fsubl
outsb
pop
push
ljmp
lock
jmp
jns
sbb
sub
popa
aam
add
add
repz
popf
hlt
mov
je
sub
das
andl
inc
fwait
stos
imul
imulb
add
fcomp
push
inc
mov
stos
dec
test
rol
jg
or
mov
outsb
xchg
adc
pop
rorl
add
dec
aam
jno
mov
sti
xchg
lea
add
mov
or
add
mov
testl
fmull
faddp
inc
adc
imul
xchg
and
cmc
sbb
dec
push
std
test
fwait
mov
lret
sti
add
pop
pop
pop
sub
dec
jne
add
rorb
adc
adc
inc
scas
mov
sbb
jno
fildl
sbb
sbb
add
sti
imul
ja
inc
and
enter
mov
dec
jns
jmp
out
in
dec
inc
mov
mov
mov
sub
pop
mov
inc
jecxz
mov
mov
jmp
dec
sbb
movw
adc
mov
dec
jnp
add
repnz
push
jno
mov
xor
adc
mov
xchg
add
out
jle
cmp
cld
daa
rolb
jne
aas
push
cmp
add
xchg
fldenv
inc
movzwl
lea
jnp
out
push
cmp
insl
xlat
dec
mov
addr16
repz
hlt
adc
cld
icebp
pop
mov
ds
xchg
inc
push
add
jl
sbb
mov
push
and
push
addb
loopne
call
fildl
aaa
cs
inc
add
adc
inc
and
or
push
sarb
clc
jecxz
mov
ficompl
shrl
cmp
push
cmp
pop
push
push
dec
push
xchg
mov
data16
adc
or
and
xchg
ja
popa
aas
push
xor
adc
dec
mov
inc
pop
xor
aam
test
mov
fadds
dec
cmp
xchg
xchg
movups
nop
inc
shrd
in
fisubs
add
inc
sbb
add
je
xchg
dec
je
push
push
xor
pop
mov
push
fstps
adc
inc
push
outsl
fcoml
cmp
push
dec
pop
fwait
mov
ret
cmpsl
fsubrp
icebp
mov
shrl
clc
push
push
rolb
and
jmp
add
add
icebp
lock
push
cs
test
andl
fs
rcrb
sbb
aam
pop
xor
rcl
je
mov
push
push
add
pop
test
cld
push
popf
mov
push
push
sub
mov
push
lock
data16
roll
out
imul
repnz
sbb
and
stos
shrl
movl
cmp
push
and
xchg
pop
jo
insb
pop
cld
push
push
sbb
dec
and
mov
and
jae
sbb
lock
add
inc
dec
dec
mov
mov
mov
enter
mov
or
pop
pusha
fcom
mov
lock
cmp
fadd
xchg
xchg
dec
add
adc
dec
adc
cmp
jg
test
jle
cmp
jl
imul
dec
cmp
jg
push
cmp
jle
sub
adc
pop
sbb
or
lret
test
pop
jp
mov
sbb
fs
into
add
pop
add
loope
sbb
or
cmp
and
pop
sti
or
mov
push
pop
das
jp
lret
adc
fcomp
fstps
test
sbb
movsl
es
jp
xchg
sbb
scas
iret
xchg
mov
in
lds
mov
lods
sub
jns
loopne
fdivrs
scas
jp
mov
or
and
jge
test
insb
mov
adc
xchg
ss
ret
imul
sub
loopne
ja
in
jl
push
cmp
dec
mov
pop
call
add
inc
dec
jne
cmp
cs
push
fsubs
adc
sbb
add
mov
in
add
sub
js
adc
or
dec
xchg
or
jo
into
add
jo
cmp
enter
mov
pop
stos
nop
mov
enter
ja
add
shlb
mov
mov
push
mov
or
les
ret
pop
xor
movsb
jge
cmp
cmp
mov
push
mov
mov
mov
push
pop
mov
lret
or
shrl
loope
outsb
or
mov
stos
movsb
lock
repnz
shl
dec
sbb
dec
aas
into
cltd
jbe
out
pop
or
ljmp
pusha
lock
dec
sbb
add
mov
xor
pushf
push
push
ret
xchg
ret
sbb
lods
sub
xchg
push
sbb
test
pop
jo
jmp
sbb
loope
lock
jb
xor
arpl
xor
push
repnz
shrl
movl
adc
mov
idiv
jge
cmovs
push
jg
lock
push
adc
clc
jmp
gs
in
mov
mov
jmp
adc
sbb
cmp
sahf
add
push
orl
ds
mov
inc
and
test
and
and
mov
frstor
jmp
movsl
arpl
rcll
mov
fldt
and
pop
xor
out
adc
movl
mov
adc
test
xchg
mov
sub
mov
xorl
lea
hlt
mov
imul
subb
nop
pop
sbb
std
push
aas
push
jecxz
movsb
and
int
or
clc
push
int3
jno
lods
push
add
mov
push
add
mov
clc
stos
sub
pushl
out
push
jg
push
cmp
push
pop
loop
cmpsb
add
add
cmpsl
lods
test
out
jmp
out
sbb
ds
fs
and
and
sub
ret
mov
xchg
gs
pop
push
pop
in
hlt
int3
adc
jns
inc
call
sbbl
sti
and
call
fistl
hlt
loopne
fcompl
jecxz
or
shlb
adc
int3
add
ret
push
add
popf
sub
lock
xchg
inc
pop
mov
adc
inc
fcomps
jle
or
xor
repnz
in
mov
mov
jp
push
add
ds
mov
lods
cmpsl
mov
push
xchg
bnd
mov
push
xchg
dec
insl
add
or
stos
mov
dec
hlt
test
add
and
sub
test
add
hlt
loopne
ret
cmpsb
mov
fcoml
pop
xor
in
addl
insl
sub
scas
push
dec
sub
lahf
jo
mov
movb
scas
adc
fwait
lcall
outsl
xchg
and
mov
sbb
xchg
mov
sbb
adc
daa
mov
mov
nop
ss
mov
push
mov
inc
push
stos
add
jl
popf
inc
outsb
sbb
inc
or
sub
or
popa
xor
dec
pop
dec
lret
and
adc
xchg
cmp
les
jne
jle
imul
pop
mov
or
push
mov
dec
cmp
inc
pushl
dec
hlt
rorb
ja
lahf
hlt
adc
push
jae
fisubl
jbe
and
fdivrs
aaa
dec
nop
pusha
add
insl
push
inc
inc
bound
clc
mov
push
mov
ret
add
fnsave
pop
inc
or
push
roll
out
outsl
addb
pop
adc
adc
fcoml
and
sbb
push
push
push
mov
cmpsl
pop
ret
leave
push
lock
inc
and
pop
add
add
dec
and
call
push
and
mov
shlb
out
pop
js
sub
push
or
add
mov
lret
adc
in
add
add
jbe
add
jl,pt
andl
sub
push
andb
inc
es
adc
cmpsl
aaa
enter
rorl
and
in
jmp
movsb
pop
xor
cltd
push
xchg
inc
xchg
cld
in
mov
in
add
mov
jb
sahf
in
je
clc
mov
enter
mov
clc
in
rol
inc
lock
sbb
addb
and
push
nop
imul
imul
bound
cmpsl
mov
outsl
sbb
add
dec
leave
push
pop
sub
inc
dec
jne
mov
repnz
add
add
das
subl
in
movl
ficomps
jnp
daa
or
ja
ret
sbb
ret
fstpl
sahf
add
push
pop
sub
mov
add
sub
mov
daa
mov
insl
cmp
mov
dec
add
cmpl
int
leave
add
test
pop
sbb
test
sbb
out
and
xor
ret
xor
inc
push
adcl
outsb
jae
dec
sub
adc
sub
mov
das
xchg
adc
jl
mov
das
mov
xor
adc
mov
ret
out
stos
mov
cmp
sbb
cmp
adc
fstl
xchg
or
bound
stos
mov
xlat
pop
jne
mov
add
test
adc
push
dec
pusha
mov
cwtl
mov
mov
inc
or
fidivrs
and
sbb
add
xor
roll
pop
mov
enter
popa
sub
pop
lock
mov
add
std
and
pop
adc
sti
ret
pop
mov
popl
sbb
aam
leave
fsubrs
inc
jg
adc
inc
cltd
and
and
rcll
mov
sbb
mov
das
xlat
bound
adc
daa
test
cmp
dec
sbb
cmp
sbb
cmp
and
xor
push
aaa
or
mov
js
inc
sbb
cmc
mov
push
or
inc
imul
mov
cmp
enter
ficoms
sub
movsb
cld
inc
cmpl
popa
fldt
cmp
leave
jae
sbb
data16
sbb
stc
and
add
sub
mov
flds
jnp
int
mov
or
push
lahf
inc
fwait
pop
scas
pop
push
jae
mov
repnz
jecxz
inc
aas
test
sub
mov
pop
xor
pop
xorb
xor
shll
push
xchg
add
shl
add
outsb
je
mov
mov
push
outsl
add
adc
mov
cmpsb
test
push
test
push
cs
adc
mov
xchg
inc
divl
add
bound
fdivrp
dec
faddl
movsb
test
sbb
sbb
ss
and
imul
push
pop
cmpb
add
push
and
bound
cmp
daa
sub
mov
sbb
pop
sub
sbb
inc
les
faddl
fists
daa
gs
nop
adc
mov
filds
and
and
mov
mov
fistl
out
sbb
adc
push
inc
push
das
aas
inc
sub
ljmp
fs
insb
sub
sub
inc
sub
adc
pushf
push
mov
ss
daa
add
flds
push
mov
insl
insl
ss
mov
inc
and
sub
dec
pop
add
add
cmpsl
fsubs
je
subl
mov
adc
rcr
call
sub
ja
push
adc
adc
sub
arpl
adcb
jmp
add
imul
pushf
pushf
pop
arpl
add
fwait
cs
data16
sub
test
xor
stos
inc
imul
adc
mov
push
adc
mov
je
or
popa
bound
mov
pop
psubusb
sub
je
or
sbb
mov
or
mov
push
fwait
int3
or
sbb
or
lahf
and
ss
xorl
mov
out
xor
add
fistps
push
dec
or
and
sahf
dec
filds
adc
fs
jmp
jmp
leave
push
jmp
pop
sub
aaa
and
loopne
sbb
xchg
jg
sub
cmp
sbb
xchg
ss
xor
xchg
adc
add
xchg
inc
sub
add
pop
repz
daa
cmp
loopne
dec
mov
dec
push
stos
and
test
in
arpl
add
adc
xchg
sar
jge
and
inc
je
movsb
inc
scas
mov
jo
ja
sub
pop
mov
inc
xor
xchg
cwtl
xor
fs
adc
fs
popf
enter
dec
xchg
ret
pushl
add
fidivl
sub
sub
xorl
loopne
and
mov
push
mov
cwtl
test
jo
jecxz
push
std
lods
fdivrp
loopne
pushf
into
arpl
int
lcall
fiadds
hlt
inc
push
jle
rcll
subl
sar
pop
test
nop
hlt
mov
cmp
jnp
fildl
inc
mov
push
inc
pusha
call
in
push
lret
movswl
mov
ret
arpl
xor
ljmp
into
add
or
fimull
movsb
and
stos
adc
push
fs
data16
aad
mov
xor
xchg
cld
jne
add
pusha
enter
dec
sub
push
into
dec
mov
cmpsl
sbb
inc
inc
sti
mov
and
sub
cmp
xchg
add
test
lret
mov
and
imul
xchg
test
xor
dec
mov
push
sub
jbe
add
cmp
add
adc
es
scas
mov
dec
mov
js
je
int3
daa
je
bound
inc
add
out
pushf
fdivl
xchg
std
inc
js
mov
sar
mov
mov
jmp
push
push
inc
or
aas
jb
jp
jno
dec
sbb
femms
dec
adc
adc
pop
inc
movsl
mov
sub
cmp
scas
addr16
jo
adc
inc
xchg
mov
pop
adc
or
sbb
leave
jae
dec
push
pop
lsl
nop
pop
push
enter
add
stos
cmp
jle
lds
in
add
orl
mov
lds
lock
sub
or
jno
mov
out
ret
cmp
jmp
stos
dec
adc
xchg
fwait
sub
cli
and
inc
aam
sub
push
mov
adc
mov
loopne
gs
daa
sbb
adc
add
rcrb
std
pop
sbb
sub
insl
add
pop
or
mov
and
jbe
xor
jle
jg
inc
or
jg
shrl
mov
inc
bound
sub
pop
inc
adcl
sub
mov
test
cmp
pop
and
hlt
aaa
pop
adc
cmp
or
inc
out
test
clc
inc
les
dec
das
pop
add
je
lret
je
pusha
sub
shlb
mov
jbe
leave
jmp
addb
mov
loope
xchg
sub
fisubrs
xor
adc
jecxz
repnz
and
cmp
mov
cmpsl
jo
cmpsb
sub
ss
mov
mov
sub
jae
push
in
mov
fdivrs
push
es
cmp
and
inc
cmp
scas
inc
adc
inc
pushf
cmpsl
test
mov
bound
cmpb
je
add
adc
or
bound
sub
adc
mov
js
inc
xor
mov
xor
jge
dec
jns
push
lods
xchg
mov
dec
jmp
dec
enter
push
cmp
lcall
out
cmpl
adc
lods
or
in
mov
or
out
add
loope
les
mov
cmp
push
inc
sbb
mov
fisubs
xor
cmp
sbb
ret
mov
fwait
subl
inc
sbb
and
inc
in
rcrl
xchg
add
imul
mov
sub
es
movsl
jo
and
loope
test
movsb
pusha
add
sahf
dec
sti
fcmovb
andl
mov
cli
cmc
mov
xchg
fs
out
dec
dec
enter
adcb
test
xchg
test
les
xlat
dec
sub
daa
pop
inc
inc
add
ljmp
push
xor
add
mov
mov
in
and
cmp
and
push
inc
lcall
daa
nop
mov
add
aam
cmp
loopne
xchg
and
dec
aaa
inc
aam
scas
lea
cmp
divl
pop
jmp
es
dec
and
int
or
shlb
movsb
push
adc
push
daa
cmp
test
aad
je
cmp
xchg
mov
decl
push
pop
inc
or
and
mov
pop
inc
adc
imul
js
popf
daa
fs
sbb
add
test
dec
or
dec
test
and
shrb
xchg
mov
shlb
scas
or
push
lock
xor
pop
mov
jns
je
add
jnp
cmpb
into
mov
stc
test
pop
mov
mov
xor
aas
test
push
leave
inc
femms
stc
adc
ds
pop
lock
adc
xlat
jecxz
sub
not
add
add
andl
es
jl
subb
inc
daa
hlt
stc
lods
adc
pop
mov
cmp
jne
add
or
imul
leave
push
rorb
xchg
movsl
les
data16
mov
and
cmp
sbb
sub
fisubs
jbe
sbb
add
push
hlt
xor
dec
sbb
js
push
insl
inc
jecxz
sbb
repz
mov
addl
in
fiadds
sub
or
pop
and
sbb
icebp
or
mov
sub
test
dec
out
or
popa
pushf
or
jl
sub
jmp
fisttps
mov
add
rcr
call
lret
xor
inc
notl
push
bound
adc
and
call
loope
bswap
dec
mov
out
adc
mov
movsl
adc
mov
add
jl
and
lods
ss
fistpl
int
jp
xchg
cmpsl
push
or
ja
in
sub
inc
add
adcl
sbb
lea
cmpsl
hlt
mov
outsb
cld
or
in
nop
add
pop
bound
je
scas
jmp
mov
sbb
lock
cmp
and
jo
inc
or
in
jbe
mov
jmp
xchg
adc
adc
pusha
adc
daa
sub
push
adc
sbb
inc
mov
sub
stos
mov
inc
jne
neg
xor
mov
test
orb
inc
xorb
add
xchg
test
xor
je
loope
or
ljmp
jl
xchg
loopne
in
pop
mov
and
repnz
jbe
mov
xor
imul
jg
and
inc
pusha
xor
aam
pop
cmp
mov
dec
mov
stos
out
outsb
test
lods
into
sbb
in
jae
aaa
mov
cmp
mov
mov
jbe,pn
push
mov
and
cwtl
push
pop
adc
mov
jnp
lea
sbb
sub
jle
jmp
push
add
dec
or
ss
push
xor
shlb
loopne
movsl
popf
or
repz
das
add
xchg
ss
inc
cmpsb
xorb
loopne
loopne
dec
jecxz
or
inc
jbe
jns
insb
pushl
stc
push
inc
loopne
test
xchg
arpl
sub
in
mov
jmp
test
or
or
lock
test
scas
popfw
in
jle
cmp
jb
call
sub
mov
lahf
je
shl
testl
and
cli
dec
shlb
adc
cs
pop
adc
and
push
mov
mov
xor
sub
jmp
nop
xlat
in
cwtl
enter
push
fcmovnu
push
adc
sub
arpl
or
xorl
inc
xchg
add
aas
or
pop
dec
lods
and
fsubs
sbb
nop
cmp
leave
hlt
popf
mov
mov
dec
movsb
dec
addl
or
mov
out
das
mov
push
idivb
call
fisubs
or
push
fisubs
push
sub
add
lock
imul
dec
pop
testl
adc
sbb
inc
jns
in
sbb
fisubl
rorl
lea
or
dec
adc
dec
fdivs
mov
push
inc
daa
addb
sbb
xchg
in
ja
cmp
jbe
fiadds
add
inc
les
push
inc
sub
shlb
add
test
adc
jp
inc
mov
adc
or
pusha
dec
fisttpl
icebp
sub
sub
sub
cmp
xchg
pop
sbb
push
xchg
add
cwtl
movsb
insl
nop
inc
xor
dec
movsl
or
add
xor
add
jne
les
pop
pop
add
and
pop
or
push
mov
adc
pop
mov
cmp
sub
and
cmp
inc
jp
mov
xor
jge
movsb
icebp
sub
shlb
or
subb
jo
enter
pop
test
mov
ret
test
or
add
adc
test
or
adc
call
push
popa
jl
xlat
xor
enter
add
jo
gs
push
enter
mov
jno
fcom
cmpsb
mov
or
pop
pop
xor
pop
jp
add
shll
lret
int
scas
pusha
sub
xor
test
leave
ja
pop
ljmp
dec
fs
mov
in
lahf
sub
inc
adc
and
sbb
cmp
dec
popa
mov
sbb
inc
sbb
jg
push
sub
andl
test
sub
data16
pop
in
ss
dec
cmp
push
dec
cltd
xchg
es
bound
sbb
arpl
add
in
push
xor
dec
xor
loopne
cwtl
mov
ret
jbe
xor
pop
leave
je
add
sub
xchg
ja
inc
lret
call
pushf
push
fucomp
addb
mov
sbbl
pop
dec
inc
or
inc
leave
roll
inc
test
loopne
jbe
mov
pop
dec
iret
pop
shlb
mov
test
push
jb
testb
or
inc
andl
adcb
ret
adc
ficoms
pop
mov
mov
adc
sub
out
dec
inc
out
mov
cmpsl
lock
push
cmp
adc
add
pop
push
push
jo
jnp
aas
adc
push
push
sbb
inc
add
outsb
ret
pop
imul
or
adc
adc
xor
mov
cltd
sub
les
jo
nop
add
in
cmpsb
testl
xor
pop
push
shrb
mov
add
movsl
cmpb
sub
pop
sub
add
dec
jecxz
dec
sub
pop
or
xor
shl
adc
mov
jo
adc
test
jne
js
ret
push
push
addb
add
fcomps
nop
pop
mov
jo
rolb
das
push
sbb
xchg
sysret
push
in
es
lcall
cli
or
mov
ds
cmp
test
sbb
lods
addr16
lea
xchg
rolb
sbb
sti
mov
daa
dec
je
sub
je
or
sub
pop
inc
or
ret
or
cmp
xor
test
lds
in
std
sub
adc
jp
mov
push
jmp
mov
sbb
mov
jmp
mov
or
add
sub
fdivrs
in
xor
push
loopne
insb
jge
jl
mov
sub
push
hlt
jle
sub
inc
xlat
adc
lahf
call
cmp
out
add
ret
daa
push
push
sub
sub
and
lds
pop
jmp
dec
ljmp
rcrl
jne
loop
inc
add
pop
sbb
clc
xor
dec
jge
mov
pop
mov
js
les
jmp
push
sbb
sbb
add
inc
pop
dec
push
or
push
das
mov
movsl
test
adc
push
ja
mov
adc
test
sub
inc
mov
push
sub
xchg
pop
ja
sbb
outsb
test
jne
or
dec
jecxz
inc
lret
nop
xchg
mov
into
pop
push
mov
lods
push
dec
cmp
ret
jle
popf
mov
test
pop
test
add
mov
stos
daa
add
sub
or
xor
stos
and
mov
je
arpl
pop
sub
sbb
ss
dec
movb
pop
xor
ja
les
jg
mov
mov
xlat
adc
or
pop
insl
jl
call
pop
jne
or
mov
pop
andb
xchg
test
mov
repz
push
push
mov
sbb
loope
push
sub
push
mov
test
mov
sbb
ds
jno
and
call
jmp
arpl
das
lods
fld
pop
and
cmp
fildl
or
inc
lods
arpl
mov
or
push
pop
jbe
pop
jle
xor
add
loope
shl
inc
mov
xchg
dec
movsb
add
sbb
sub
ret
lea
fldl
or
js
adc
mov
fcoml
mov
mov
sbb
xor
gs
or
inc
mov
cwtl
mov
adc
insb
mov
mov
jl
mov
pop
push
ret
pushf
dec
xor
cmp
inc
push
daa
adc
es
leave
call
or
xor
pop
sbb
incb
mov
and
pop
or
cmp
xchg
andb
loopne
aas
ds
filds
mov
popf
loopne
push
jmp
lahf
add
push
or
mov
pop
lds
dec
repnz
dec
mov
inc
paddsb
les
xchg
push
or
jle
stos
mov
popa
jnp
dec
ret
out
or
jp
loopne
mov
push
push
call
push
pusha
xor
xadd
add
mov
or
sub
lock
xor
dec
ds
push
and
insl
jbe
sbb
push
outsb
imul
shll
and
ret
push
daa
adc
push
call
or
sbb
neg
push
inc
adc
je
xchg
push
dec
or
jb
add
inc
in
or
pop
ret
add
push
cmc
jge
pop
sbb
adc
inc
adc
rcrb
and
push
in
sub
fidivs
ret
xorl
cli
and
test
or
clc
mov
mov
fadd
and
mov
xchg
adc
jge
outsb
int3
je
dec
pop
mov
xor
lock
add
jno
imul
in
add
inc
pop
sub
xor
in
lret
pop
cmp
cmpsb
adc
sub
or
popa
sbb
in
jo
sub
adcb
mov
xlat
or
mov
pop
data16
jbe
mov
daa
inc
push
dec
je
hlt
data16
enter
cld
pop
rolb
mov
add
push
sub
adc
es
pop
sub
push
pop
sbb
xchg
xor
mov
adc
and
shll
inc
push
push
loope
dec
sub
cwtl
shl
or
in
xchg
inc
cmp
sbb
adc
or
pop
pop
mov
adc
jbe
mov
pusha
and
jbe
adc
scas
adc
dec
and
pop
fs
fstpt
xchg
and
pop
insb
inc
xchg
adc
enter
and
add
enter
mov
call
out
in
sub
daa
xchg
adc
pushf
mov
test
pop
sbb
mov
lods
adc
sbb
adc
mov
arpl
mov
out
jbe
inc
retw
rorb
mov
les
push
ds
inc
pop
xchg
jecxz
cmp
or
movsl
sub
mov
xchg
dec
jl
ret
jle
push
adc
pusha
pop
push
sbb
shlb
fs
or
rcrl
movsb
adc
nop
lods
arpl
adc
sbb
or
push
lods
inc
popf
sbb
fcom
cmp
pop
fs
sub
and
and
mov
mov
xchg
dec
sub
insl
sub
pshufw
fsubl
cld
cmc
push
cmp
fdivs
push
ret
cmpsb
sbb
add
sub
out
add
outsl
adc
adc
push
jo
add
adc
in
or
mov
lea
dec
adc
and
ja
or
ljmp
pop
or
outsb
inc
popf
pop
pop
sbb
sub
nop
mov
mov
js
inc
adc
add
test
mov
lea
test
insb
aam
inc
xchg
icebp
test
icebp
and
or
mov
sbb
and
dec
dec
mov
push
cmpsl
imul
jmp
or
add
and
cmp
adc
loope
adc
and
es
sahf
adc
inc
xlat
adc
call
inc
js
scas
test
adc
pop
pop
arpl
inc
adc
test
xor
inc
mov
pmulhuw
gs
xchg
lahf
pop
mov
xor
das
or
or
inc
lea
fisttps
bound
test
inc
and
rcll
mov
add
mov
aas
adc
insb
cld
and
loop
push
sub
and
add
mov
insb
testb
les
sbb
xchg
mov
push
pop
fldenv
les
mov
inc
mov
pop
push
cmpsl
sbb
mov
cmpsb
movzbl
mov
or
icebp
cwtl
clc
subb
adc
sbbl
aad
out
clc
jmp
aad
in
fcoms
dec
add
adc
fucomip
sbb
lret
add
jecxz
stc
jl
rolb
inc
jmp
pop
add
in
dec
sbb
jae
test
scas
test
pushf
inc
xor
pop
cli
clc
xlat
push
testl
fldt
orb
add
push
dec
mov
sti
pop
lock
jae
push
stos
and
mov
orl
pop
insb
dec
or
add
pop
addl
push
inc
mov
test
or
and
push
loopne
push
enter
add
sub
jo
or
out
jb
insl
ja,pt
mov
push
cmp
pop
sbb
fwait
imul
and
daa
push
bound
into
jp
in
cmpsl
sub
inc
inc
jnp
xor
rcrl
out
pop
icebp
adc
in
or
and
jae
inc
bound
mov
loop
xor
outsb
adc
cmpsb
sub
adc
xor
sbb
add
leave
adc
jl
mov
nop
cmpsl
adc
enter
shrl
add
sbb
into
or
in
daa
and
and
mov
xchg
aam
sub
mov
sbb
shl
and
xor
mov
adc
and
push
cs
push
mov
jle
dec
lea
jns
push
push
aaa
pop
pusha
in
push
jnp
cmp
xor
out
mov
inc
add
pop
jns
add
mov
cmp
sub
jge
dec
inc
sbb
add
andb
iret
test
pusha
shrl
scas
mov
sbb
adc
lea
data16
or
add
sub
push
xchg
sub
stos
add
movsb
xlat
movsb
mov
push
imul
bound
dec
stos
adc
popf
sbb
lea
sbb
and
mov
push
popl
xor
jno
inc
and
bound
pop
loopne
popf
adc
mov
xor
push
mov
addr16
push
cli
fistl
sti
mov
popf
cmp
add
sbb
enter
mov
mov
iret
adc
call
adcb
push
add
loopne
jmp
fsubrs
pop
xor
mov
inc
adc
mov
dec
mov
adc
rcrb
xchg
sub
ss
sbb
aam
sub
ficoml
dec
or
xor
or
rcrl
shlb
inc
pop
cli
adcl
mov
add
adc
add
in
aas
xchg
bound
addr16
or
pop
fcoms
xchg
xchg
or
inc
scas
inc
jmp
outsl
das
pusha
or
push
cmp
sub
push
imulb
adc
insl
mov
pop
daa
xor
sbb
ja
das
imul
movsl
lds
cmp
mov
add
mov
cmp
or
dec
jp
loope
pop
or
stos
or
xchg
lret
inc
add
jno
adc
pop
cmc
mov
mov
sub
sbb
leave
adc
in
jo
aad
pop
mov
jbe
fwait
sbb
adc
pop
rcl
add
and
addr16
xchg
loop
into
dec
fnstcw
scas
xor
aaa
loop
mov
dec
aaa
xlat
and
mov
or
negb
pop
shrl
push
pop
or
daa
push
cmp
addb
out
out
mov
test
mov
push
pop
and
in
test
mov
bswap
mov
jnp
daa
and
add
or
subb
es
adc
test
pop
and
jo
inc
sub
imul
loopne
add
xchg
pop
mov
pusha
mov
fimull
xorb
pop
cld
pop
loopne
xorb
nop
push
ds
imul
push
decb
rorb
subb
subb
sbb
pop
bound
and
xor
dec
mov
movsl
sub
and
push
mov
andb
out
sbb
test
jg
dec
push
mov
sbb
xchg
or
adc
pop
or
push
sub
adc
in
ss
fsubs
aaa
xchg
xor
cwtl
rcrl
inc
and
loope
adc
sub
add
insl
add
cmp
punpckhbw
lock
sbb
aas
nop
test
in
add
pusha
fsubrl
or
cmpsl
or
sbb
or
push
push
clc
bound
push
cmp
adc
adc
fsubs
push
sbb
clc
jg
xor
les
push
mov
clc
adc
mulb
loope
mov
jg
or
dec
or
inc
xchg
sbb
sbb
jb
call
insb
jne
jne
mov
or
mov
aam
xchg
add
sbb
add
hlt
or
ja
mov
adc
aam
adc
je
aad
jge
sub
insl
sub
xor
jecxz
icebp
mov
insl
setne
pop
mov
and
insb
cltd
push
stc
fwait
ret
movsl
insb
inc
in
mov
pusha
pop
jne
in
xchg
and
dec
fwait
imulb
pushf
mov
xor
cmp
mov
adc
fldl
fidivrs
scas
jecxz
aad
and
sbb
sub
or
push
test
push
push
fldln2
shlb
pop
loopne
adc
mov
push
push
and
in
pop
clc
or
movsb
insl
jg
les
or
sub
sub
inc
pop
enter
add
cwtl
mov
aam
orb
sub
add
xchg
clc
mov
and
sahf
and
add
push
lods
mov
sub
scas
daa
cld
pop
inc
ss
stc
or
cmp
inc
fimuls
rcl
ja
jl
mov
insl
dec
mov
pushf
call
orb
cmpsl
push
ds
sbb
inc
mov
inc
or
pushf
test
mov
aaa
fwait
add
dec
push
fiaddl
or
inc
gs
outsl
iret
sbb
fnstenv
push
push
iret
push
push
addr16
ret
adc
mov
js
inc
into
das
adc
lret
movsl
xchg
lret
add
inc
push
adc
dec
mov
xchg
les
or
scas
loope
ret
pop
jo
inc
stos
daa
sbb
mov
xlat
rcrl
lock
or
test
sbb
orb
and
test
sub
pusha
int3
jne
jno
test
xor
outsl
cltd
jo
mov
jns
jo
add
and
imul
adc
mov
mov
add
dec
xor
ficoml
pop
mov
imul
mov
inc
sbb
scas
xor
mov
xchg
push
sub
into
idiv
lods
je
movb
push
mov
add
lds
out
outsl
insb
pop
sarl
outsl
out
iret
inc
push
inc
pop
pop
js
mov
filds
push
jmp
movsl
or
jmp
mov
adc
fidivrl
inc
stos
dec
adc
adc
jmp
xchg
push
orb
fsubl
leave
rorl
jp
push
adc
data16
push
adc
or
jl
or
jp
and
adc
push
cmp
add
es
jno
mov
jle
or
push
popa
cmp
jle
js
inc
fsubrs
pop
push
jle
mov
inc
pusha
fs
lods
xor
add
test
fwait
mov
sbb
mov
leave
repz
add
dec
jmp
or
sbb
jmp
mov
dec
or
daa
out
cltd
mov
sbb
or
lock
adc
sub
inc
lret
xchg
enter
adc
jnp
add
dec
and
aaa
xchg
int
cmp
xchg
ss
popa
push
and
lock
lret
imul
jl
inc
or
xor
pop
cmp
or
and
adc
inc
imul
sub
jl
je
lret
leave
rorl
daa
std
aaa
mov
dec
pusha
cmpl
jb
pop
xchg
push
sub
xor
loopne
or
pushf
or
mov
sub
insl
or
aad
dec
jecxz
push
lea
lahf
jecxz
dec
mov
push
test
add
xchg
rcll
dec
leave
shll
push
inc
scas
cmpb
dec
inc
pop
cmpsl
jge
fwait
cmp
insb
jne
add
add
add
stos
iret
cmpsl
jle
sahf
out
inc
jbe
push
jns
leave
rcll
push
mov
cmp
sub
jne
jg
mov
xchg
outsb
repnz
push
addl
lods
data16
loopne
clc
shll
cmp
aas
flds
adc
lcall
popa
cli
sbb
lods
add
rcrl
in
fcoms
or
data16
sbb
gs
mov
ss
sub
leave
shlb
dec
xor
xchg
jbe
sub
adc
sub
jbe
nop
xor
inc
popa
or
xor
mov
jns
jae
popa
pop
sbb
addl
xchg
movsb
jns
out
jge
push
lods
jb
sbb
xor
pop
inc
jae
fmull
repz
push
lock
xchg
adc
testl
iret
lcall
and
fs
js
and
cltd
adc
cmp
daa
xor
pop
jg
movsb
cs
pusha
fcoml
prefetchw
mov
adc
imull
or
out
pop
xchg
cld
mov
pop
rcll
mov
adc
jns
cmp
inc
sbb
mov
outsb
or
test
inc
inc
imul
dec
inc
pop
fsubl
dec
fwait
xor
and
in
gs
fbld
call
adc
and
jnp
test
and
rclb
mov
inc
jnp
jns
imull
andb
xlat
dec
xor
inc
sbb
pop
xor
in
jp
popa
or
inc
aad
sbb
push
xchg
cmp
add
ret
scas
push
dec
in
xlat
rol
test
pop
dec
or
and
inc
fisubs
dec
fcoms
aam
dec
aam
insl
mov
jno
setg
jne
dec
cmpl
jbe
js
js
imul
push
shll
add
pop
imul
push
jecxz
inc
inc
cltd
cmpsb
repz
loop
pop
mov
ja
pop
imul
call
sbb
add
mov
pop
and
ja
jl
enter
ret
xchg
insb
and
or
dec
aaa
mov
roll
add
cmp
clc
clc
cmpsb
jl
mov
push
aas
cmp
faddl
into
pushf
jnp
mov
add
mov
imul
inc
sub
adc
and
in
testb
sub
adc
push
jmp
cmp
cld
movsb
sahf
inc
insl
adc
sub
stc
xchg
push
orl
cmp
xchg
dec
filds
loop
subb
insl
pop
and
sbb
adc
sub
pop
aad
xor
or
or
jle
leave
xchg
or
push
rclb
cs
adc
cmp
scas
je
in
sub
fldcw
xchg
adcb
mov
pop
pop
adc
hlt
jb
dec
and
sbb
and
jecxz
jno
push
sbb
imul
sub
xchg
lcall
in
xlat
dec
adc
pop
push
sbb
test
sbbl
add
cmp
dec
and
sbb
test
xchg
sub
adc
sub
xchg
lock
mov
out
add
sbb
sub
sbbl
or
enter
icebp
adc
sbb
jo
mov
aam
pop
push
movsbl
add
or
inc
or
aaa
jo
sbb
pop
fadd
je
push
sbb
mov
mov
sbb
jle
hlt
hlt
jne
xchg
mov
or
xor
mov
inc
jo
push
jno
arpl
inc
adc
sub
arpl
subb
jle
je
and
jmp
mov
inc
cmpb
out
in
mov
nop
dec
mov
xor
pop
roll
add
and
and
xchg
xchg
call
dec
jne
mov
sbb
adc
xchg
sbb
and
in
gs
xorb
and
cmp
enter
xchg
movsl
enter
cmpsb
adc
inc
push
aaa
std
das
add
in
rcl
add
imul
dec
or
test
push
adc
sub
fcomp
into
rcl
sbb
cmp
xor
inc
lods
pop
orb
inc
pop
faddl
imull
push
or
or
push
fs
cmp
test
scas
push
mov
dec
adc
adc
dec
imul
pop
add
leave
cmp
and
cmp
arpl
das
fsubr
fs
inc
adc
pop
jnp
mov
pushf
in
sbb
mov
js
fadd
and
or
fstp
test
push
arpl
jbe
sbb
fmuls
push
outsl
lock
loopne
push
mov
xchg
addb
jmp
mov
cs
sbb
dec
add
lret
std
add
and
nop
dec
pop
mov
popf
sub
test
rclb
and
test
push
push
jge
sbb
inc
shrl
daa
addr16
jl
mov
in
lock
inc
xchg
in
pop
mov
repnz
call
movb
repnz
cmpsb
pop
loope
push
add
leave
adc
jnp
sub
inc
outsl
dec
dec
sarb
pop
fst
imul
lock
and
and
dec
insl
adc
pop
loope
mov
test
jb
xchg
xor
sbb
sbb
and
arpl
add
stos
add
lock
jno
mov
xchg
sub
stc
sbb
dec
test
adc
adc
ds
add
xor
addr16
add
xchg
movsl
adc
loope
mov
loopne
pop
or
dec
je
or
sbb
lea
push
mov
je
and
outsl
sbb
sbb
adc
jmp
jo
or
adc
xchg
test
test
add
cmpsl
lahf
pop
adc
pop
aam
pop
mov
adc
js
jne
sbb
push
loope
adc
dec
enter
sbb
lcall
arpl
enter
inc
arpl
xorl
push
test
adc
xchg
mov
in
rcrb
divl
shl
dec
loop
enter
sub
push
decl
inc
jb
mov
push
decb
or
fs
cmpsb
xchg
xchg
push
rcrb
lahf
dec
add
adc
sbb
mov
cltd
push
push
les
ljmp
mov
adc
mov
jns
jns
add
enter
jns
mov
bound
push
xor
inc
or
out
nop
out
mov
dec
enter
ja
pause
or
mov
and
push
movsb
rolb
test
and
repnz
jl
fs
sahf
out
jbe
nop
mov
in
cmp
mov
test
and
popf
inc
add
add
adc
mov
arpl
jmp
push
mov
es
sub
pop
lods
cmp
or
cmp
push
pop
push
hlt
push
pop
stos
add
sub
ja
jo
and
jnp
outsl
jae
insl
mov
pop
daa
jg
xchg
mov
in
mov
in
mov
jns
mov
mov
shlb
jb
jmp
cmp
pop
repz
sub
sbb
fstpl
int3
in
jb
jb
rcl
fcomp
jb
jb
loopne
call
jb
hlt
clc
cld
leave
leave
in
jbe
ret
add
or
leave
leave
leave
adc
sbb
leave
leave
leave
and
sub
leave
leave
leave
xor
cmp
leave
leave
leave
inc
inc
dec
dec
leave
leave
leave
leave
push
push
pop
pop
leave
leave
leave
leave
pusha
fs
leave
jo
js
mov
in
mov
push
imul
scas
mov
jmp
jae
and
pop
mov
cmp
xor
jl
addl
mov
cmpl
iret
shlb
repnz
aam
stc
sbb
xor
hlt
in
xchg
out
sahf
add
sbb
push
in
nop
xor
dec
hlt
inc
sahf
add
clc
je
xor
and
add
or
or
in
and
adc
adc
xchg
sahf
add
sbb
and
nop
out
and
add
in
sub
inc
sahf
sub
xor
in
xor
cmp
mov
push
in
nop
les
inc
sahf
add
dec
cld
repnz
out
or
push
and
cmpl
sbb
jae
pusha
dec
cmpl
enter
insb
xchg
jo
cmp
repnz
les
jae
iret
cmpl
adc
test
xchg
inc
call
enter
xchg
push
and
js
lock
insl
gs
fsubrs
sbb
mov
mov
sbb
mov
in
or
cs
mov
push
adc
xchg
fiadds
daa
test
je
mov
mov
fcoml
mov
mov
push
aas
addr16
cmp
insl
test
dec
arpl
jae
aaa
mov
mov
cmp
insb
jns
sbb
adc
inc
pusha
addr16
pop
pop
pop
sub
pop
std
shlb
sub
popa
out
movsl
push
rorb
xchg
add
pusha
or
sbb
pop
mov
pop
dec
xor
pusha
bound
dec
or
cmpsl
mov
lret
jb
cmp
add
scas
nop
popa
and
mov
inc
mov
in
fsubs
xor
sbb
pop
xchg
aas
xchg
ss
xchg
popa
adc
movd
adc
jmp
xchg
or
jns
movsl
mov
nop
loop
fstl
outsb
das
pop
fs
inc
or
popa
or
das
pop
push
es
popf
cmp
roll
xor
arpl
loope
andl
outsl
adc
mov
jo
sbb
adc
cmp
cmc
mov
popa
les
jne
xchg
scas
ret
ss
jnp,pn
sbb
shlb
jbe
outsl
push
aas
test
jae
add
nop
or
les
push
ret
call
in
and
pop
push
mov
and
pop
xor
and
xor
mov
inc
pop
sub
pop
nop
das
sub
lods
cwtl
inc
inc
push
mov
push
pop
xchg
bound
or
cltd
pop
test
jl
mul
sbb
subb
cmp
push
push
push
mov
pop
fs
mov
lds
or
pop
call
jo
push
xor
jae
xchg
jle
add
cwtl
inc
imul
dec
jmp
add
and
cmp
dec
and
cmp
dec
outsb
addb
inc
add
inc
and
or
cld
xor
push
push
popa
push
or
xlat
push
mov
add
mov
push
cld
hlt
adc
adc
js
je
ja
inc
cmp
push
or
faddp
enter
push
sarl
js
movaps
jo
jge
cmp
pusha
daa
xorl
push
inc
hlt
sub
push
cltd
or
rcrl
testb
push
outsl
and
inc
lahf
and
popa
or
or
fs
pop
out
fiaddl
and
orl
add
arpl
add
repnz
fmuls
ret
hlt
and
lcall
xor
in
push
adc
push
js
adc
shlb
mov
xchg
xor
flds
pusha
movlps
cmpsb
or
inc
mov
dec
daa
adc
mov
call
les
pusha
hlt
pop
add
aaa
jg
sub
adc
je
xchg
ljmp
sbb
add
dec
dec
or
pop
xchg
scas
jmp
pop
xor
pop
nop
sbb
dec
outsb
outsl
lret
mov
movsl
movl
imul
shlb
shrb
fwait
imul
push
mov
and
fwait
mov
add
faddp
pop
adc
push
cmpsb
sbb
addr16
movsb
ror
shll
push
add
imulb
aam
sub
xor
pop
push
ficompl
pusha
push
adc
dec
push
pop
adc
mov
lret
and
ret
mov
mov
mov
rcl
out
sbb
fnstcw
insl
nop
in
js
and
fsubrs
ss
jo
aam
push
lcall
fadds
cmpsb
fs
imul
shrb
mov
rolb
sub
and
jl
push
ja
pop
ret
loope
ret
cmp
pcmpgtd
cmp
inc
or
mov
test
xor
mov
mov
mov
push
mov
scas
adc
adc
dec
push
outsb
sbbl
inc
dec
gs
cld
not
or
or
or
dec
outsl
ja
not
popa
in
or
push
popa
imul
push
in
jecxz
sbb
popa
jo
dec
insb
push
adc
add
or
xchg
jo
loop
lret
je,pn
mov
or
adc
test
push
ficompl
in
mov
pop
xor
insb
cld
xor
inc
das
inc
addb
aaa
lds
pop
and
fidivrl
mov
or
je
cs
inc
cs
je
addr16
lods
mov
pop
cs
das
lods
push
jl
popa
shrb
fwait
in
dec
jno
pusha
enter
gs
or
pop
or
jo
lods
stc
fcmove
outsb
jle
daa
push
hlt
out
pusha
xor
out
nop
clc
push
test
lock
adc
push
mov
sub
and
dec
rolb
add
cmpsb
push
and
popa
mov
scas
xor
or
sbb
jl
push
addb
push
and
xor
add
xchg
movsb
push
lcall
mov
jp
stc
mov
imul
sarl
nop
cltd
mov
add
push
push
stc
or
or
or
sarb
pop
push
mov
cwtl
test
pop
adc
mov
ficoms
fadd
pop
pusha
pop
dec
push
push
push
inc
icebp
stos
or
decl
clc
rorl
out
mov
mov
jl
nop
testb
test
test
cs
add
bound
xchg
incl
push
and
movsb
imul
add
lea
sub
fnsave
test
stc
divl
mov
daa
cmp
cld
sub
and
pop
leave
cmpsl
add
aaa
mov
aam
sub
push
test
loopne
int3
and
ss
xchg
pop
mov
sar
sahf
mov
dec
aam
add
sahf
int
add
call
scas
jmp
stos
nop
mov
cmpsl
mov
push
xchg
stos
push
or
mov
inc
sub
mov
or
movsb
rolb
scas
imul
mov
mov
int
imul
lret
xchg
push
mov
sbb
push
or
mov
fidivrl
outsb
and
int3
pop
mov
lret
adc
ret
xlat
nop
lods
mov
mov
mov
aas
testl
imul
cmp
inc
iret
cmpsb
mov
dec
scas
popa
in
jbe
add
aaa
gs
addb
or
and
sbb
or
add
or
insb
outsl
xchg
pop
call
add
mov
dec
pop
test
push
movsb
jns
adc
adc
out
push
dec
cltd
dec
shlb
adc
enter
push
adc
adc
pop
aam
scas
pop
and
pop
loopne
pop
adc
and
rcll
int3
and
push
lret
popa
bound
pop
mov
cmpb
mov
cld
and
cwtl
cmp
mov
adc
jbe
cmp
fcoms
and
push
push
xchg
and
lods
icebp
popf
pop
pop
repnz
xlat
iret
js
sbb
insb
fimuls
loope
cmpsl
test
frstor
adc
and
push
push
test
sar
lds
arpl
sbb
repnz
cmp
addl
into
mov
insl
mov
dec
fwait
push
mov
int3
rorl
insb
inc
rcl
inc
pop
cmp
inc
adc
pop
adc
push
cmp
push
dec
xor
xchg
inc
sbb
jo
mov
cmp
add
cmp
sub
cmp
and
jmp
xchg
mov
push
adc
rorl
sub
lret
pusha
push
sbbb
pop
and
add
cmp
hlt
out
push
pop
mov
shll
xor
rol
imul
sub
test
mov
in
inc
and
pop
enter
es
pusha
lret
fs
shll
sub
mov
in
insl
push
notl
jo
jo
pop
jo
movsb
in
sub
or
xor
and
push
ja
mov
movsb
dec
inc
or
or
pop
mov
lock
sub
sub
and
and
shrb
sub
pop
dec
inc
punpckldq
push
fcmovne
xchg
imul
sub
xor
icebp
inc
aad
lahf
loopne
ret
add
cltd
ret
sbb
test
or
and
mov
dec
adc
dec
mov
mov
push
mov
dec
or
flds
xor
mov
dec
mov
movsb
and
xor
popf
into
xor
fcompl
lock
fmull
add
ss
inc
sbb
pop
ss
aaa
xchg
insb
sarb
imul
test
enter
jne
std
fimull
sub
rolb
shlb
cmp
jo
xor
mov
xor
sbb
cmp
pop
inc
aam
ja
xor
fcomp
or
or
into
inc
jo
xchg
loopne
mov
mov
jo
clc
mov
and
dec
or
sbbl
mov
push
fnstcw
fiadds
add
dec
adc
xchg
and
inc
xchg
sbb
dec
inc
mov
inc
push
pop
enter
pop
imul
push
pop
dec
adc
add
add
pop
ret
mov
add
cmp
jae
push
add
push
xor
loopne
in
mov
neg
addr16
or
add
adc
or
shll
ret
imul
adcl
lock
add
hlt
lahf
rclb
add
clc
adc
adc
repnz
gs
jbe
test
or
dec
adc
je
mov
jb
les
aad
jg
push
inc
inc
or
and
cmp
hlt
push
or
movb
sub
movsb
repnz
lock
mov
adc
mov
cmp
push
inc
adc
dec
jl
les
gs
mov
and
xchg
or
pusha
inc
rclb
xor
add
int3
enter
mov
in
fsubs
xor
add
bnd
push
out
pop
xor
and
jl
cwtl
fcoms
andb
insl
mov
or
aad
and
pop
cmp
mov
mov
sarb
inc
mov
scas
aas
sbb
mov
cmp
mov
mov
pop
addb
push
bound
adc
inc
pusha
movb
dec
mov
stos
repnz
cmc
popa
adc
fadds
mov
pop
popa
aaa
mov
mov
cmp
add
xchg
jl
shll
pusha
dec
jmp
add
mov
xchg
adc
xchg
sbb
mov
decl
das
inc
fsubl
imul
ja
mov
inc
inc
jp
movsl
cmpxchg
cmp
xor
test
dec
dec
bound
dec
dec
dec
roll
cmp
ja
lret
jle
clc
addr16
dec
or
popa
aam
xchg
adcb
arpl
movsb
sbb
or
mov
inc
inc
sahf
sub
repnz
mov
sub
hlt
imul
mov
push
xlat
mov
jnp
ffree
adc
outsl
fisubrl
xor
fldcw
sub
pop
add
mov
push
xor
popa
mov
add
or
mov
push
push
sub
shll
rclb
mov
int
mov
sbb
dec
and
xor
jno
dec
push
dec
mov
or
or
jmp
into
or
inc
and
sbb
fcomps
test
pushf
inc
jae
xor
fcmovnbe
iret
push
lods
mov
or
setae
xor
in
gs
inc
cmp
add
jp
loop
push
cmpsl
cmp
inc
sbb
out
or
cmp
dec
xor
mov
sub
cmp
cmp
pop
jno
rcrb
je
or
test
mov
jle
enter
subb
sbbl
not
and
push
push
mov
xlat
subl
xchg
add
mov
pop
cli
popw
xor
sbb
and
cmp
and
js
jno
movsb
jnp
or
or
inc
negl
fisubs
loopne
xchg
aad
xorl
jl
adc
inc
std
insb
aad
add
mov
and
pop
les
dec
mov
sbb
jg
orl
cld
adc
adcl
or
lods
mov
fildll
adc
adc
shr
sub
aaa
movl
xorb
add
adc
icebp
or
push
xchg
pop
xor
sub
mov
or
fnstcw
iret
dec
push
adc
mov
sbb
xor
jle
dec
fbld
xor
dec
dec
inc
fstl
cmp
and
push
clc
sub
cmp
mov
adc
xlat
adc
fs
adc
lock
sbb
sbb
cmpsb
lds
cwtl
mov
inc
dec
aas
lar
cmp
cld
push
dec
push
mov
and
inc
cmp
int3
das
inc
inc
bound
les
or
xchg
jo
stos
mov
ret
bound
or
and
divl
andl
dec
dec
cld
sbb
cmp
xor
cmpsl
pushf
inc
inc
jo
xchg
sbb
xor
adc
cwtl
push
or
xlat
sbb
jo
aam
jp
pop
push
mov
push
cmp
inc
push
push
fwait
loopne
mov
jmp
aas
add
dec
rorb
pop
aam
rclb
aas
lods
mov
add
gs
push
or
mov
xchg
inc
stos
add
fdivl
cmc
arpl
fldl
leave
orl
nop
loop
xchg
pushf
jmp
xor
mov
jns
cltd
sub
adc
and
cmp
xchg
mov
push
movl
push
mov
cmp
cmpsb
adc
sub
clc
push
insl
push
pop
les
insl
xchg
insl
jl
js
popa
sbb
fs
mov
adcb
lods
add
mov
jo
lea
mov
mov
push
aad
in
adc
and
add
test
ret
xorb
mov
sub
popa
pop
lock
jl
jnp
jne
adc
pop
add
or
inc
sbb
movsl
movl
pop
adc
dec
inc
xchg
hlt
fadds
sub
xor
dec
sub
daa
pop
dec
insb
fucomp
test
inc
jecxz
inc
adcl
loope
push
or
movsb
push
and
rep
adc
popa
gs
popa
das
mov
icebp
cmpsl
iret
inc
rcrl
or
std
shlb
not
and
out
or
jo
fwait
sbb
fadds
sahf
clc
outsb
out
jb
nop
movsl
decb
mov
mov
or
mov
xor
movsb
movsl
cmpsb
cmpsl
or
enter
stos
xor
and
and
and
xchg
orl
xchg
xchg
xchg
xchg
or
enter
lcall
popf
enter
sahf
lahf
andb
or
addl
xchg
enter
mov
negb
mov
mov
cmpsb
push
lock
out
rcrl
loopne
lcall
lock
cmpsb
imul
imul
cmpsb
imul
mov
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
jae
lcall
cmp
xor
mov
rcrb
dec
push
or
clc
scas
push
lock
loopne
fcom
xor
sarl
dec
shll
mov
mov
mov
mov
movsb
mov
js
jl
das
mov
mov
mov
push
ret
roll
push
rcrb
cltd
in
mov
fadds
shr
adc
xchg
or
inc
daa
push
jecxz
test
mov
test
ss
sub
lds
jmp
call
enter
add
cmp
mov
mov
push
cwtl
pop
dec
jl
shlb
repnz
mov
div
sbb
inc
push
int
out
push
sarb
sarl
test
xchg
shll
pushf
xor
fnstenv
add
sub
xlat
nop
ss
jae
xchg
and
inc
mov
pop
insb
pop
lods
hlt
pop
ret
mov
int3
negb
mov
mov
or
mov
mov
leave
sbb
cmp
pop
dec
aam
pop
dec
inc
push
dec
popl
xchg
add
push
push
jecxz
and
movsb
lret
mov
xor
mov
jl
idiv
xor
cmpb
popa
mov
shll
mov
add
adc
inc
jb
int3
adc
sbb
adc
add
in
or
iret
cld
push
adc
mov
roll
shlb
adc
lea
outsl
in
orl
jb
iret
ret
nop
cwtl
je
sbb
jne
jnp
icebp
in
shl
or
cmp
inc
cmp
mov
rorl
lds
test
daa
adc
pop
repnz
xchg
rcll
xchg
or
or
sbbb
or
negl
sub
adc
xchg
sar
inc
mov
adc
sub
clc
jo,pt
push
lea
pop
cmp
dec
les
in
ret
sahf
cli
sbb
mov
or
and
and
lods
xor
xor
dec
imul
andl
jnp
add
add
outsb
pop
arpl
insb
push
or
jle
lods
mov
insl
inc
outsl
pop
js
arpl
lods
int
popw
daa
jo
jb
jb
popa
loop
lods
pusha
or
sbb
es
imul
bound
jbe
daa
ja
inc
cwtl
scas
imull
pop
addr16
jb
addr16
pop
fimull
arpl
insb
imul
sahf
or
loop
xchg
ficomps
bound
and
pop
ja
lds
daa
mov
in
push
pop
jb
arpl
lods
dec
pop
daa
jns
outsl
dec
pushw
mov
rorl
push
divb
es
fldt
push
sub
adc
clc
push
push
mov
inc
mov
lock
test
mov
xor
mov
adc
mov
push
and
adc
mov
mov
les
iret
push
mov
int
daa
pop
cmpl
rcrb
out
push
sbb
sbb
jo
lock
fwait
insb
jg
inc
mov
push
and
scas
add
sub
jl
or
push
sub
pop
dec
ja
enter
push
inc
aaa
mov
add
sbb
in
mov
test
dec
mov
adc
push
pusha
dec
aam
icebp
mov
sub
addr16
fwait
ret
mov
xorl
dec
xchg
insb
rclb
shlb
out
add
and
dec
add
ret
adc
mov
add
mov
inc
test
xchg
scas
mov
adc
enter
sbb
adc
outsl
lea
xchg
insl
jge
cld
imul
jo
push
adc
mov
adc
orl
std
orl
ret
jge
add
imul
orl
or
jmp
sbb
icebp
or
and
cmp
add
adc
sbb
pop
xor
punpckhwd
sbb
out
pop
out
or
jle
js
mov
bound
sbb
jmp
int
xchg
addl
cwtl
cmp
lret
mov
jb,pn
movl
lret
mov
add
shll
or
or
or
or
shll
adc
xor
sbb
sbb
fdivp
jg
sbb
push
pop
and
and
and
mov
fsts
pop
imul
mov
int
out
add
adc
xor
and
inc
push
data16
dec
shll
cltd
stos
mov
rcr
out
call
and
xor
pop
push
pusha
xor
xchg
rolb
mov
add
sbb
or
addr16
sahf
add
sbb
inc
sahf
add
or
in
nop
or
or
add
or
or
inc
push
and
add
in
adc
addr16
sahf
adc
adc
push
in
adc
adc
addr16
sahf
add
sbb
inc
sahf
add
sbb
sbb
pop
cmpsl
add
sbb
sbb
sahf
pusha
ja
push
popa
imul
bound
arpl
jae
push
mov
and
jne
jae
data16
addb
sbb
push
pop
mov
add
imul
cmp
and
sub
xor
push
jns
inc
or
pop
in
stc
pop
int3
push
lea
mov
pop
fnstcw
lock
fdivl
and
add
mov
push
adc
push
add
add
mov
mov
mov
roll
inc
ficompl
pop
popf
xor
mov
push
jbe
sub
add
inc
xor
add
loopne
or
add
ret
pusha
icebp
int3
sub
test
popa
mov
cmp
xchg
jl
loope
lock
mov
rorl
push
inc
movsb
outsl
out
jnp
aas
adc
test
mov
xor
jne
pop
xchg
dec
std
rclb
int
adc
int3
mov
push
or
int3
sahf
and
sub
loopne
pop
mov
aam
imul
push
adc
inc
push
jns
icebp
pop
loope
jns
cmp
aam
xor
cld
out
imul
push
imul
add
testb
lods
add
mov
lret
pop
js
pop
data16
popa
mov
sub
outsl
repnz
je
push
push
into
fbstp
iret
scas
mov
bound
and
dec
cwtl
int3
or
popa
or
es
and
fadd
xor
sub
icebp
or
pop
push
add
dec
adc
leave
adc
xor
adc
adc
xor
mov
mov
es
jo
stos
xchg
daa
iret
cmp
add
mov
push
sbb
nop
add
and
sub
les
mov
inc
and
xchg
inc
dec
xchg
and
mov
xchg
inc
inc
push
sub
and
sub
xchg
pop
sub
and
sub
pop
and
xor
xor
inc
push
inc
xor
outsl
inc
dec
aad
pop
sub
jns
je
or
test
insb
test
rorl
or
movsb
subb
popa
scas
cmp
dec
add
push
inc
xlat
push
mov
xchg
fcoms
pop
cmp
nop
daa
inc
push
shl
cli
inc
sbb
rolb
sar
ja
adc
adc
mov
andb
and
in
push
jecxz
ffree
insb
test
movq
push
pop
sub
jl
loop
ss
adc
xchg
xchg
pop
movsb
enter
push
cmpb
or
add
push
stc
nop
scas
xchg
out
xor
cmp
insb
and
insl
insb
xor
cli
push
add
cltd
nop
pop
insl
add
test
unpcklps
or
xchg
pop
adc
test
mov
mov
xor
xor
test
cmp
inc
mov
outsl
dec
sbb
xor
xor
lods
sbb
jo
sbb
mov
movsb
test
es
add
mov
mov
cld
pushf
cmp
stos
sbb
push
mov
outsb
loopne
outsl
and
mov
add
outsl
test
or
jo
leave
adc
inc
and
jo
inc
and
test
add
add
sub
sub
xorb
mov
sub
add
add
dec
incl
lahf
cs
outsl
js
dec
xchg
clc
add
jge
pop
and
pop
fldl
test
faddl
and
inc
js
pop
or
dec
lret
adc
leave
mov
jo
inc
push
les
sub
lods
pop
jnp
sbb
pop
add
pop
fcomp
sub
test
pop
or
and
and
pushf
or
leave
in
fs
or
push
dec
test
pop
pop
jnp
inc
enter
lock
dec
add
in
add
jg
add
sbb
clc
mov
pop
mov
xorb
push
jbe
nop
pop
imul
push
mov
mov
push
pop
call
notl
mov
mov
add
stos
push
fcoms
sub
mov
or
fs
jnp
out
pop
and
or
mov
sub
cs
cmp
fistpll
mov
movsb
mov
sub
sbb
xor
push
inc
sti
add
ds
push
fdivr
push
aas
or
sbb
push
xchg
add
xchg
and
inc
testl
mov
mulb
dec
mov
dec
sub
adc
fcmovb
inc
mov
sub
ficoms
fs
adc
bound
lds
in
and
in
add
cltd
add
adc
andb
mov
and
and
add
xchg
add
sub
xchg
inc
pushf
adc
cmp
inc
in
cmp
mov
mov
test
lds
push
movsl
add
pop
dec
insl
gs
and
mov
mov
xchg
xor
inc
mov
gs
jns
insl
and
push
sbb
mov
and
inc
dec
inc
pushf
enter
and
nop
add
jecxz
cmpsb
pusha
add
into
or
sbb
rorl
and
sub
sub
inc
mov
push
xchg
insb
incl
adc
ja
pushf
test
add
dec
lahf
and
mov
lds
cmp
push
inc
popf
push
adc
push
das
bound
mov
push
inc
xchg
xor
add
and
aaa
adc
sbb
xchg
and
sub
or
fdivrs
cltd
push
and
loopne
cmp
roll
cmp
dec
rcll
push
nop
call
in
or
dec
push
jo
add
xor
notrack
dec
add
adc
sahf
pop
ss
rol
rorl
adc
mov
pop
ret
ficomps
js
mov
cld
push
lods
fstl
aaa
and
je
mov
pop
imul
push
mov
les
push
rcl
dec
rcll
fcomps
pop
aam
cmc
add
push
cwtl
pop
jecxz
inc
jne
adc
scas
arpl
and
jmp
lods
cltd
testb
push
or
inc
repnz
mov
pop
inc
lea
inc
and
aam
rolb
push
pop
les
inc
lahf
mov
push
arpl
int3
cmpsb
rolb
add
movsb
mov
decl
push
inc
test
push
push
xchg
and
sub
mov
ret
push
mov
movl
jmp
imul
pop
cli
push
dec
xor
out
nop
pushf
or
or
call
dec
or
adc
add
out
in
sbb
jmp
enter
call
xor
pusha
pop
test
pop
icebp
packsswb
mov
sarb
stos
push
ret
mov
adc
lcall
cltd
cs
push
xor
test
push
or
adc
or
popa
enter
push
inc
and
or
pop
inc
mov
outsl
pop
push
xor
xor
adc
push
aam
movsb
mov
sbb
pop
icebp
add
popa
insb
mov
jp
lods
in
lret
add
add
sbb
push
xor
sbb
outsb
pusha
sub
inc
lods
mov
leave
inc
sub
and
test
push
and
test
xchg
add
mov
scas
xchg
mov
cmp
inc
sub
add
add
sub
aas
xor
ljmp
imul
add
add
pop
inc
mov
xorb
pop
xor
sub
movsb
mov
sbb
movsl
or
ja
fmull
andl
aaa
add
or
out
or
or
mov
scas
xchg
cld
test
test
shrb
mov
or
adc
lods
icebp
xchg
nop
shrb
xchg
jecxz
test
jge
cmpl
hlt
inc
xor
sub
mov
sub
push
or
scas
mov
jmp
mov
xchg
or
inc
fistl
adc
mov
leave
cmc
ret
and
fimuls
daa
fistps
sar
pop
sti
xchg
shl
push
push
pop
fcmovnbe
andl
in
push
or
aam
push
test
and
or
sbb
add
sbb
lea
mov
push
les
xor
insl
inc
fdivrl
pop
inc
das
cmp
in
sar
movsb
movsb
add
sarb
adc
dec
scas
mov
push
pop
mov
in
mov
inc
push
xor
cmp
push
and
dec
adc
and
mov
inc
add
ss
mov
jecxz
clc
dec
pop
fcomps
out
jbe
xchg
mov
mov
pusha
gs
or
or
mov
or
xchg
xchg
das
mov
test
scas
push
in
adc
sub
jb
bndldx
fwait
mov
dec
cmovs
loope
sbb
add
rcrb
fs
mov
addb
push
sub
dec
push
arpl
jo
push
nop
cmp
jns
js
popf
je
sub
add
dec
xchg
stos
push
lea
sbb
or
ret
dec
sub
mov
mov
adc
xor
mov
xchg
jb
hlt
addl
sub
je
dec
lret
jo
inc
and
mov
mov
add
iret
dec
fisubl
or
xor
stos
cld
add
jne
inc
push
notl
inc
cmpsl
adc
fwait
aam
ds
or
mov
fcompl
or
and
lea
iret
adc
movsb
push
repnz
add
icebp
jecxz
clc
cs
mov
cmp
add
sbb
jle
sbb
jne
or
fadds
pushf
push
into
aas
xor
sbb
cmc
stos
add
orb
and
outsb
push
push
push
lea
inc
or
sub
ficoms
inc
xor
push
xchg
inc
or
fisubrl
adcl
xchg
sbbb
stos
pusha
lea
xor
sub
sub
dec
addb
sub
insl
shlb
adc
test
lods
aam
dec
call
mov
mov
in
sub
or
movzwl
xchg
mov
insl
outsb
pop
or
leave
push
pop
jl
iret
or
adc
adc
inc
dec
ret
mov
pop
ret
sbb
out
or
sub
iret
xchg
jecxz
imul
jns
xlat
adc
mov
sbb
in
or
and
add
outsb
flds
sbb
inc
pop
xchg
cld
xor
xchg
inc
in
inc
sbb
cmp
mov
mov
pop
inc
jns
or
xchg
push
loopne
sbb
push
xor
pop
sub
lcall
add
or
adc
dec
outsl
enter
imul
pushf
pop
jbe
insb
cmp
mov
mov
adc
notb
push
sbb
inc
push
mov
add
aam
outsb
int3
ficompl
lret
scas
sbb
sbb
inc
cmp
or
cmpsb
cmpl
push
mov
pop
xor
mov
outsb
lahf
imul
xchg
outsl
test
nop
jge
sbb
dec
sbb
adc
xchg
add
mov
rolb
cmpsl
push
jmp
int
sub
or
dec
push
xchg
addl
add
mov
push
lret
dec
notl
pop
mov
mov
mov
add
pop
les
cmp
in
jnp
sbb
xor
push
inc
mov
insb
jp
js
inc
aam
pop
cmpl
mov
cmp
dec
jb
jns
pop
mov
xchg
inc
mov
cmc
cmp
daa
scas
and
or
inc
mov
inc
add
test
mov
push
push
popf
xlat
movsl
xor
xorl
inc
cmovl
in
jbe
push
lods
repz
cmp
xchg
mov
xor
sbb
adc
adc
daa
jne
xor
adc
cmp
pop
notb
inc
je
mov
adc
mov
insb
or
mov
adc
pop
lock
add
shll
sub
mov
addr16
insl
mov
cmp
push
roll
es
ja
ljmp
enter
or
lea
subl
int3
leave
mov
and
test
add
dec
and
push
and
jle
sahf
push
out
push
mov
setnp
iret
adc
into
push
xor
mov
test
adc
jg
xor
mov
sub
dec
out
xchg
sub
jb
push
insl
aad
fstpl
cmp
lods
xchg
or
mov
sub
dec
fmul
cmpsl
push
or
shll
cmpsb
mov
mov
iret
insb
out
scas
or
lock
lcall
pop
test
mov
or
dec
sbb
add
and
push
mov
add
mov
adc
sub
ss
jle
inc
sub
scas
ret
aaa
cli
xor
cmp
dec
sbb
pusha
mov
dec
inc
xor
iret
push
dec
cld
loop
push
and
jns
mov
push
aas
jmp
mov
mov
mov
sbb
shl
lahf
jmp
mov
add
sarb
adc
sbb
das
es
inc
jle
lock
dec
push
cmp
adc
adc
xor
or
or
loop
cltd
pop
fcomps
inc
inc
rcr
inc
movsl
je
testb
pop
lock
cld
mov
mov
js
pop
aam
sbb
lock
cwtl
mov
cltd
adc
shll
lret
rorl
adc
dec
cmp
das
es
add
pop
cmp
xor
sbbb
dec
adc
lcall
xchg
test
lret
in
push
xor
inc
mov
sti
sbb
push
add
test
andl
cltd
lods
jg
mov
jns
or
sbb
cmpl
push
mov
outsb
sub
add
daa
inc
aaa
ja
dec
add
xor
scas
rcll
out
cmp
xchg
fsubrs
push
daa
aad
rclb
mov
xorb
adc
push
or
ds
push
imul
mov
popf
dec
jmp
fcomps
xor
icebp
pop
testl
loope
add
cmp
rol
push
xor
xchg
jo
rcrl
cmp
sbb
cmp
stos
mov
sbb
cmpl
cmpsl
pop
xor
and
or
cltd
sub
xorl
or
sub
add
cwtl
xchg
sub
sub
add
imul
ja
decl
jmp
push
nop
mov
sub
jo
or
pop
cmpw
push
pop
sti
insl
mov
pop
and
lods
imul
and
ret
es
add
adc
test
out
jno
lods
popa
test
mov
je
mov
cmp
pusha
repz
xchg
push
xchg
lods
inc
fsubs
clc
loopne
nop
pop
daa
aas
xchg
inc
pop
push
lcall
movsl
sbb
jmp
and
stos
inc
push
and
adc
and
arpl
ret
jmp
dec
add
or
scas
dec
lea
test
or
push
ja
loopne
sarl
jl
xor
lret
shrb
movsl
push
mov
and
aas
test
xchg
mov
sbb
add
out
cmc
jecxz
or
jmp
mov
cwtl
nop
loope
xor
add
jbe
mov
add
mov
and
or
push
xchg
mov
adc
push
mov
outsb
cmp
adc
into
cmp
xor
push
dec
test
lcall
ss
cmp
and
outsl
cmpsl
ret
movsl
sbb
or
orl
pop
wbinvd
or
mull
pop
or
inc
xor
dec
jecxz
fldenv
or
imul
inc
sbb
fs
sbb
add
fimull
cmp
imul
incb
and
cmp
je
jns
add
jmp
hlt
test
les
scas
mov
addr16
sbb
mov
mov
or
inc
pop
mov
outsl
fmull
or
add
mov
mov
sbb
adc
adc
daa
iret
inc
push
push
push
dec
dec
xlat
and
dec
mov
xchg
pusha
push
push
addl
push
jle
sbb
jg
or
mov
jne
mov
xor
mov
or
pop
and
ret
imul
shrb
lds
stc
sub
xlat
pop
or
add
inc
add
gs
sbb
jle
push
hlt
and
lret
test
inc
or
fdivp
xchg
pop
jmp
jnp
cwtl
inc
sbb
shlb
mov
stos
sbb
cmpsl
pop
aas
xchg
xchg
pop
or
sub
push
and
fcom
adc
cmp
cs
or
adcb
mov
xor
aas
test
call
hlt
sub
push
aaa
inc
add
mov
fbld
jge
or
dec
sub
adc
ja
pop
or
sbbl
js
sbb
sub
outsb
jbe
and
aaa
rolb
and
loop
push
and
sbb
shlb
and
xor
or
xor
mov
push
dec
bnd
add
add
syscall
dec
mov
pop
jl
and
sub
jl
sbbb
adc
call
rclb
push
or
sbb
sub
int
imul
test
add
movsb
gs
jo
shlb
pop
xchg
mov
mov
sbb
push
pop
add
mov
clc
sbb
stos
sbb
mov
and
bound
sub
adc
dec
xor
adc
les
ret
adc
pop
xor
inc
sbb
and
and
imul
sbb
ja
adc
and
and
dec
sbb
push
into
mov
aad
push
jmp
fsts
pop
inc
fadds
out
loopne
add
add
adc
sub
pop
rolb
popa
adc
inc
adc
push
pop
lods
dec
lock
adc
or
or
test
lea
adc
mov
orb
loope
and
test
or
pop
test
nop
adc
sarl
push
push
xor
imul
imul
xchg
sbb
cmp
dec
aad
add
dec
lahf
repnz
test
dec
dec
sub
inc
xor
dec
loopne
les
cmp
out
inc
clc
and
and
movsl
adc
dec
add
dec
and
inc
add
xor
nop
ja
sub
sbb
or
push
xor
mov
push
mov
push
adc
xor
inc
and
lds
inc
in
test
push
cltd
sub
fwait
sbbb
mov
mov
in
mov
or
inc
xor
add
sub
clc
sbb
sub
xor
pop
cmp
aaa
dec
inc
sub
idiv
inc
dec
sub
and
sub
push
pop
sbb
cmp
sub
sub
outsl
sub
jl
dec
dec
xor
das
sub
jmp
ret
mov
xchg
push
xor
inc
outsb
xchg
or
daa
or
adc
adc
add
leave
leave
xor
mov
lods
rclb
das
lods
or
outsb
enter
lock
rolb
cs
rorb
dec
dec
inc
leave
inc
lds
mov
mov
pop
xor
dec
imul
jno
adc
xor
inc
repz
mov
mov
pop
stc
or
add
xor
pop
adc
dec
jne
jo
inc
jmp
or
sub
and
pushf
scas
adc
mov
or
test
nop
adc
jbe
mov
mov
xor
push
mov
ret
cwtl
aam
aaa
pop
imul
aam
push
lock
cmp
inc
les
push
ret
outsb
inc
mov
inc
push
mov
pop
inc
sub
jp
push
imul
mull
or
add
xchg
and
add
decl
je
or
jp
lea
xor
imul
imul
movzwl
hlt
and
leave
inc
xor
xchg
in
lock
sub
push
sub
add
repz
mov
fistpl
dec
lds
data16
inc
sbbb
jae
in
test
or
out
sub
fidivs
adc
mov
and
mov
loope
jno
sbb
or
mov
xor
push
popa
mov
das
pop
push
dec
dec
dec
inc
dec
push
add
addl
jp
aas
and
xor
aaa
aaa
adc
inc
push
decl
or
push
in
inc
push
test
inc
sub
or
push
pop
jb
or
xchg
sbb
inc
mov
aaa
jp
xchg
xchg
cmp
jne
sub
aaa
add
sbb
xchg
popf
inc
jecxz
xor
sbb
sbb
cmpsl
stos
popf
sbb
or
inc
aam
sub
lock
mov
outsl
mov
lock
les
push
stos
sub
mov
sarb
mov
cltd
or
dec
arpl
mov
sbb
sub
lods
int3
pop
adc
mov
or
lock
andl
add
push
pusha
dec
and
or
ret
cmp
pop
shll
cmc
or
inc
test
cmp
popf
stos
xchg
pop
mov
test
popa
add
dec
pusha
ret
nop
scas
mov
scas
xchg
sbb
add
out
inc
mov
inc
addb
clc
push
or
and
sub
mov
push
and
ret
out
dec
loope
and
sub
pop
imul
sbb
jns
xor
adcb
aaa
enter
and
adc
inc
or
or
push
or
sbb
ss
push
aas
lods
test
test
adc
mov
test
add
add
fcomps
insb
sub
rcl
sub
lea
jb
adc
out
into
aam
add
add
clc
ds
and
adc
ret
pop
out
jmp
inc
pop
pushf
cmpsb
mov
mov
push
add
fs
push
add
les
push
or
sbb
and
mov
sub
inc
jbe
mov
roll
ds
rcll
jbe
das
in
inc
pop
inc
test
inc
aaa
add
gs
pop
adc
outsb
adc
inc
mov
push
add
test
inc
mov
into
cmp
push
and
xchg
in
dec
inc
xchg
cmp
adc
adc
jg
pop
hlt
sbbl
and
jbe
insb
js
js
pop
push
xchg
test
xchg
mov
mov
sub
inc
cmp
push
dec
push
add
push
xor
fwait
loopne
and
out
push
jno
pop
pop
sub
shrl
scas
movsb
outsl
pop
xchg
push
repnz
daa
or
cmp
inc
dec
mov
roll
xorl
in
rolb
xor
sub
or
insb
pop
enter
cs
push
sbb
movb
roll
aaa
aam
xchg
inc
pop
and
ds
push
repnz
jl
and
in
cld
xor
push
sub
push
stos
addr16
xchg
sbb
pop
adc
inc
shrl
add
mov
shl
xchg
cs
add
insl
bound
or
sub
imul
mov
out
jmp
or
jne
xchg
je
xchg
adc
popa
in
arpl
pop
imul
roll
xor
fadds
pop
cmp
pop
sbb
push
fcoms
sbb
sub
mov
push
imul
push
fisubrl
nop
call
mov
insb
cmpb
das
or
push
jne
push
xchg
sbb
retw
mov
and
and
mov
popa
imul
nop
or
test
mov
or
insb
or
mov
xor
push
not
inc
mov
pop
call
jo
cmpsl
xchg
pop
inc
lods
fst
jno
push
pop
push
adc
imul
xor
out
lods
jmp
push
or
xchg
add
jns
fs
adc
insl
add
or
add
inc
push
mov
add
jb
int3
add
lea
push
sbb
invd
inc
lea
pusha
repnz
or
pop
rcrl
dec
das
xor
fsubr
lret
pop
mov
add
insl
add
shll
xorl
test
rolb
testb
out
testl
lds
cwtl
pop
or
or
pop
xchg
ss
xorl
stos
call
cmp
mov
sub
or
test
and
lret
inc
jb
push
pusha
mov
xchg
pop
popf
add
cmp
push
xlat
sbb
popa
push
adc
imul
movups
add
dec
mov
mov
into
or
cmpsl
push
xor
or
popf
aam
mov
push
mov
sub
je
inc
adc
dec
lods
es
or
and
mov
test
movsb
inc
fiaddl
daa
iret
out
adc
iret
mull
mull
sbb
jbe
lds
jo
jns
xchg
fisubrl
inc
add
ret
jg
fsts
sub
push
shlb
add
sahf
inc
nop
pop
xchg
adc
adcb
or
jp
insl
xchg
insb
jne
arpl
jmp
add
or
add
add
jmp
mov
add
scas
sbb
and
add
add
push
or
jo
add
mov
xchg
dec
fmull
and
sub
push
adc
add
scas
je
out
xchg
pop
push
cmp
adc
gs
imul
popa
inc
add
sub
femms
lods
and
pop
outsl
nop
adcb
jo
push
push
jo
sub
push
jo
test
jmp
sbb
hlt
out
in
or
push
sbb
mov
sbb
rorl
and
xor
adc
test
jns
in
pusha
cmp
fadds
ja
jge
pusha
push
xchg
stc
add
fbstp
add
or
or
pop
add
clc
incl
jmp
mov
fisttps
mov
mov
mov
mov
adc
pop
add
sbb
cmp
inc
mov
incl
jle
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
call
fdivrp
fdivr
fiaddl
inc
cmp
call
call
call
call
call
call
dec
inc
jmp
dec
dec
dec
dec
icebp
dec
xlat
ss
mov
mov
fwait
push
or
pop
sbb
sysenter
test
fadd
xchg
cmp
shrl
push
jl
adc
cs
in
int
cmp
cvttps2pi
out
push
js
pop
push
pop
push
jo
ss
cmpsb
xor
xor
pop
movsb
pop
cs
jnp
mov
push
and
fwait
mov
js
ja
int3
xchg
mov
sub
inc
dec
insb
mov
push
ss
insb
xchg
int
push
cwtl
jne
xor
adc
xlat
outsl
mov
and
test
hlt
lods
xchg
xchg
add
pop
inc
lret
xlat
mov
push
faddl
jno
sbbb
mov
imul
rolb
sbb
pop
sbb
leave
nop
pop
pop
push
pop
sbb
test
mov
sub
jo
jns
xchg
out
adc
cmp
int3
mov
dec
rcrl
xchg
out
dec
hlt
add
inc
repz
fwait
ds
sbb
and
and
add
es
inc
inc
jo
add
movsb
test
cmp
push
mov
pop
push
sbb
push
sbb
movsl
cmp
push
xchg
or
inc
loope
mov
stos
cmp
mov
mov
rcrl
nop
pop
dec
mov
or
cwtl
das
jg
popf
dec
cmp
jg
and
push
out
xchg
jg
test
inc
adc
adc
addr16
xor
lods
xchg
aam
mov
imul
pop
adc
setbe
xor
fbld
or
mov
andl
inc
dec
jb
insb
ja
sbb
dec
popa
je
xchg
inc
push
jbe
jbe
mov
jne
sub
lods
dec
popa
adc
inc
jle
pop
shlb
pop
xor
pop
daa
jge
rcll
cli
cmp
je
call
add
jbe
or
shll
xchg
dec
xchg
into
notb
fisubrl
xor
inc
or
pop
es
cmovne
sarl
add
nop
mov
cmp
imul
into
insl
dec
or
imul
xor
je
nop
ss
add
cwtl
lock
pop
or
bound
cli
std
sbb
mov
mov
fwait
or
xor
pop
jmp
xor
jb
nop
xchg
cmp
inc
xchg
sbb
add
dec
inc
dec
sbb
enter
in
mov
pop
mov
imul
pop
lods
dec
ja
add
popf
mov
aaa
jno
ljmp
add
add
add
adc
das
aaa
mov
daa
andb
add
add
add
push
add
aaa
mov
mov
movsb
mov
das
or
mov
adc
sahf
jo
mov
lock
jmp
mov
mov
mov
add
push
mov
xor
cmp
lahf
cli
sbb
repnz
call
xchg
scas
push
inc
inc
inc
inc
xchg
lock
loope
mov
mov
loope
rcl
sar
mov
mov
pushl
jmp
dec
shll
and
inc
push
mov
lcall
lds
int
lret
gs
dec
hlt
adc
inc
push
push
push
mov
dec
in
leave
pop
jns
imul
fs
js
mov
fwait
cmpsb
jo
hlt
out
lret
nop
int
dec
rcrl
pop
push
jo
shll
lods
sub
insb
fsubrs
mov
js,pt
enter
dec
push
lods
cs
fwait
mov
lfs
ror
mov
int
xchg
and
push
int3
sub
int3
stos
xlat
insl
int
int
aam
addr16
ret
push
nop
sahf
out
lret
in
pop
in
hlt
and
add
dec
rcrl
push
rorb
push
fcoml
sub
sarb
repz
insl
inc
mov
clc
fmul
daa
mov
sub
cmp
into
shll
aad
mov
pop
add
lret
lods
push
mov
and
push
sub
push
dec
ss
sbb
test
pop
fcoms
loopne
pop
and
or
adc
jg
ljmp
adc
into
test
mov
icebp
sbb
mov
adc
or
aaa
push
cmp
add
pop
iret
push
lds
bound
repnz
push
add
mull
inc
sub
rcrb
add
add
push
inc
cmp
or
adc
pop
sub
add
les
mov
lods
pop
repnz
movsb
push
mov
or
test
mov
add
adc
cmp
fsubr
insb
in
pop
push
fcomps
jmp
cmp
outsb
lods
std
adc
pop
push
aam
inc
out
inc
inc
sbb
pop
jmp
push
xchg
and
sub
mov
cmp
xor
enter
mov
adc
push
jl
cmpsl
and
scas
mov
gs
or
in
cmp
cmp
sub
push
mov
or
in
push
sub
inc
push
in
and
xchg
mov
add
sbb
mov
lcall
gs
cltd
cmpsb
mov
inc
outsb
insb
sarb
inc
push
cmp
mov
lret
fwait
push
mov
lock
addr16
out
pop
mov
in
jo
inc
add
cwtl
or
pop
cs
cli
pop
or
pop
mov
push
in
lahf
adc
lahf
mov
push
out
mov
scas
push
cmp
sbb
dec
or
faddp
popf
pop
add
lea
mov
nop
xor
orb
mov
cwtl
push
adc
and
and
sbb
and
pop
lea
add
fs
ret
sub
sbb
fs
add
imul
add
pop
inc
dec
inc
xchg
dec
sarl
xchg
mov
adc
sti
jne
sti
test
cmpsb
xchg
sub
and
leave
mov
cmp
mov
xchg
insb
sbb
sbb
or
jne
subl
inc
lahf
mov
or
sub
or
xor
cmp
test
sbb
adc
inc
subb
mov
rolb
adc
pop
daa
inc
pusha
stos
xchg
jmp
pop
lods
add
lock
dec
inc
xor
pop
int3
mov
add
daa
xchg
and
adc
push
leave
daa
pusha
in
loopne
jo
daa
or
xchg
inc
adc
popa
clts
add
int3
add
dec
outsl
xor
daa
dec
pop
inc
jbe,pn
daa
push
mov
jle
seto
push
popa
push
movb
push
inc
cmpsl
arpl
cmp
stos
add
inc
add
jo
xchg
shll
mov
xchg
mov
outsl
es
adc
orl
je
aam
mov
cmc
push
inc
aam
out
jmp
push
pusha
pop
pushf
and
pop
test
xlat
jl
dec
xchg
jp
push
add
sub
fdivr
sub
inc
sbb
xor
adc
xchg
xorl
mov
sbb
and
test
dec
xorl
rolb
sbb
pop
adc
rcrl
cmp
shlb
adc
rolb
inc
mov
pop
movsb
ficoml
and
sarb
or
add
cmp
jl
dec
xchg
test
dec
iret
hlt
or
fcoms
xchg
cmp
fs
pop
mov
pusha
sbb
pop
xchg
push
pop
fs
dec
add
xor
pop
movsb
sub
add
xchg
and
jne
subb
push
clc
adc
mov
iret
and
jno
sbb
add
xor
arpl
sub
push
adc
clc
pop
adc
or
jmp
mov
and
jl
mov
es
and
mov
xchg
les
or
inc
or
mov
sub
inc
in
inc
inc
in
or
gs
xchg
or
adc
sbb
gs
sbb
and
daa
pop
xchg
sub
sub
scas
push
push
enter
sub
in
pop
push
aaa
mov
or
dec
and
jbe
adc
roll
inc
sub
xchg
push
xchg
es
cmp
in
sbb
add
sbb
std
ret
or
je
out
xor
or
loop
push
dec
je
ja
xchg
mov
fidivrl
jo
nop
movb
sbb
in
bound
push
or
inc
mov
inc
fistl
icebp
adc
mov
outsb
mov
sub
adc
or
cmp
test
xchg
jecxz
sbb
pop
sub
fs
mov
xlat
mov
in
fwait
mov
push
hlt
std
jg
jmp
or
incl
or
cmp
clc
dec
bound
inc
or
dec
shr
adc
or
inc
add
popa
xor
inc
aam
pusha
xchg
xor
xchg
mov
mov
inc
stc
cmp
push
stos
dec
aas
sbb
inc
mov
mov
bound
cmp
dec
fildll
xchg
xor
push
iret
fadd
and
aas
scas
add
xor
or
lea
mov
push
mov
ficompl
stos
fisubl
adc
aas
loope
jb
cmpl
xor
xor
or
mov
test
inc
adc
lock
add
inc
test
stos
cmp
ljmp
aaa
loope
pop
push
push
mov
push
pop
mov
pop
insb
insb
push
jnp
pop
popa
out
jnp
hlt
push
or
pop
mov
test
cld
push
jb
sub
popa
in
dec
mov
push
push
or
adc
insb
and
mov
aaa
mov
jo
xor
lea
bound
jle
fiadds
movntps
mov
pop
pop
push
jbe
in
jnp
or
adc
dec
inc
or
ror
adc
scas
mov
sbb
inc
inc
imul
mov
and
inc
and
daa
fiaddl
mov
outsl
sbb
lock
dec
ja
mov
cmp
jl
cli
mov
inc
andb
jnp
insl
stos
pushl
add
pop
sbb
xor
add
cli
dec
dec
sub
movb
jmp
lea
popf
xchg
adc
test
xlat
les
xor
movsl
dec
sbb
in
xchg
mov
idivl
data16
push
shrl
test
les
mov
repnz
cli
popa
and
dec
mov
sub
mul
lods
xorb
popa
mov
xor
inc
fnstsw
cmp
pushf
ja
inc
pop
mov
fmuls
mov
push
pop
mov
in
sub
nop
shlb
pop
fs
pop
push
in
clc
lods
inc
sub
pop
inc
or
or
dec
gs
ffree
push
je
cmc
jl
js
clc
cmp
sbb
adc
lea
dec
test
jb
sarb
inc
inc
mov
add
jb
leave
and
cmpb
shll
jecxz
xchg
aam
inc
adc
scas
enter
cs
sub
fs
in
dec
in
lea
and
rorl
lea
bound
or
push
and
sub
orb
lods
inc
popa
add
iret
xor
test
nop
pop
inc
jecxz
imul
mov
cmc
inc
jp
jne
insb
sbb
lock
push
cmpb
or
add
je
repnz
pop
cmp
lock
xchg
xor
inc
dec
jle
xchg
cmp
inc
jno
decl
sub
cmp
test
and
add
mull
fmuls
push
clc
pop
mov
or
dec
jne
mov
or
cmp
adc
fwait
arpl
and
ret
out
or
dec
pushf
andl
cmp
test
pop
and
stos
fdivrl
mov
mov
or
subl
cmp
sbb
add
in
sbb
sub
movsb
lods
inc
cmp
sub
or
sub
sub
mov
test
das
mov
push
jecxz
adc
jge
and
push
pop
inc
fwait
xor
pop
dec
jne
lods
dec
test
loopne
movsb
and
dec
push
dec
or
cwtl
jp
rcr
adc
or
inc
cmp
mov
lods
fsubr
data16
leave
sub
rol
rclb
push
adc
mov
out
mov
rcrb
cmp
sub
lods
or
cmp
fdivs
push
ret
lcall
push
fistl
and
add
popa
aam
insl
mov
xchg
inc
jo
jl
mov
pop
mov
adc
mov
out
or
imul
dec
jne
adc
mov
hlt
add
je
out
push
lret
aas
test
inc
outsb
inc
mov
xchg
out
das
rclb
ss
inc
out
cld
cmp
jne
push
insb
jg
mov
mov
mov
das
cmpb
js
inc
add
lcall
add
cmpsb
mov
or
sbb
cmpsl
and
sbb
out
push
ficompl
mov
aam
xor
fsubrl
rorb
inc
mov
add
adc
add
cmp
icebp
pop
add
dec
ljmp
push
enter
mov
sub
fisttpll
ss
and
out
insl
xchg
test
mov
inc
adc
fnsave
add
pop
js
push
dec
imul
or
lods
and
dec
xchg
inc
loope
mov
dec
sub
push
and
adc
std
mov
test
dec
dec
dec
scas
loope
inc
jmp
adc
arpl
loope
jmp
pop
loop
movswl
sbb
xor
or
or
imul
sbb
jb
xchg
cmp
lods
or
cltd
pop
pop
and
xchg
aaa
xchg
fists
pop
fcomps
inc
push
jmp
push
jl
pand
dec
sub
dec
into
jle
popa
out
xor
test
mov
mov
inc
xor
add
or
cmp
xor
dec
push
and
js
sbb
dec
lea
neg
inc
fldcw
push
dec
js
inc
push
lahf
bound
aam
sub
ss
call
imul
cmp
out
lods
femms
mov
test
or
stc
les
mov
js
add
daa
or
mov
push
stc
fstpl
fwait
jmp
bswap
scas
adc
cmp
and
daa
pop
pop
and
rorb
cli
imul
je
jnp
insl
pop
sub
je
xchg
pop
rcll
mov
dec
push
pop
test
cmp
outsl
jmp
sub
aad
xor
or
or
jmp
lret
jo
jp
mov
mov
adc
inc
inc
test
nop
lds
dec
scas
int3
rorl
mov
inc
bound
faddl
dec
out
ret
mov
aas
clc
mov
lcall
ss
scas
and
fcoms
xchg
jecxz
sbb
rcrb
xor
in
push
cmp
movsl
add
inc
push
adcl
addr16
inc
sti
xor
imul
lret
inc
adc
mov
dec
jmp
repnz
cmp
mov
fsts
call
std
jge
push
dec
sub
add
inc
inc
add
pop
jno
fxch
mov
dec
push
sbb
xchg
xchg
cmp
inc
adc
mov
je
mov
nop
add
mov
add
push
inc
pusha
add
pop
mov
push
sbb
sbb
sub
sahf
faddl
mov
xor
mov
outsl
lock
movb
testl
add
sbb
test
sti
test
inc
xor
adc
mov
pavgw
push
stos
jo
mov
xor
add
sbb
dec
add
sub
fisubrl
stc
xor
in
in
dec
hlt
testb
cli
jmp
and
or
loop
dec
pop
addr16
arpl
stc
jae
cmpsb
pop
test
adc
movsl
inc
jge
mov
jns
arpl
cli
push
sub
pop
outsb
je
test
xchg
popa
cmpsb
adc
test
or
lds
leave
repnz
push
jmp
icebp
or
add
push
rorl
inc
push
or
sub
cmp
xchg
or
into
lock
push
sub
or
xor
divb
sub
adc
mov
ret
daa
cmp
xchg
adc
mov
lea
xor
nop
pop
arpl
and
fs
and
inc
or
pusha
and
nop
data16
mov
mov
scas
fidivl
mov
or
adc
add
cmpb
inc
cltd
xchg
fwait
fwait
mov
push
dec
sub
inc
imul
lds
xchg
cmpsb
mov
push
ja
cmp
inc
addr16
sub
cmp
cmc
push
leave
add
sbb
dec
bound
sahf
scas
rorb
daa
fdivrl
mov
jge
cmp
push
dec
imul
add
loop
loopne
sbb
push
fstps
dec
scas
imul
jmp
sub
push
or
mov
daa
push
push
pop
lock
pop
push
andb
mov
adc
repz
add
adc
jp
mov
dec
fmull
and
xor
jne
inc
mov
sub
int3
mov
dec
pop
cmp
pop
nop
sbb
ja
add
or
add
imul
fnstsw
lea
push
lds
sub
dec
daa
pop
rorb
loope
mov
or
sub
xor
incb
cmp
add
popaw
aaa
test
inc
mov
insl
mov
mov
or
jge
insl
or
push
pop
xchg
mov
add
mov
xchg
pop
fisubrs
in
or
ret
cmc
test
imul
ljmp
mov
xchg
test
adc
fcomip
adc
fs
cwtl
or
scas
hlt
sub
arpl
pop
mov
addb
pop
daa
mov
cmp
push
adc
or
or
or
dec
pop
dec
lock
jg
inc
push
pop
sub
ret
jg
outsl
out
pop
jmp
cmp
je
mov
test
jbe
pop
adc
cmp
ja
gs
cmp
xchg
in
je
or
adc
dec
jmp
mov
pop
cmp
jns
pop
repnz
pop
je
cmp
cs
outsb
sbb
add
push
xchg
movsl
sbb
outsb
ljmp
pop
add
mov
add
mov
add
cmp
fs
imul
loopne
mov
add
add
sub
push
pop
lret
push
in
dec
dec
imul
test
out
aam
sub
pop
and
pusha
push
nop
or
mov
xchg
nop
or
mov
sub
sub
pop
dec
outsl
vaddsd
add
push
and
inc
sbb
ljmp
and
fs
sub
mov
lcall
and
rcrb
sbb
xchg
test
pop
jo
inc
inc
and
jl
sbbb
rcll
outsl
cwtl
sbb
aas
into
jp
and
cmp
gs
add
or
cmp
and
push
jns
xlat
add
xorl
or
push
inc
sbbl
sbb
jo
shrb
pop
sbb
jg
add
mov
xchg
xor
push
xor
fstpt
mov
rcll
adc
and
xchg
or
addb
dec
lock
xchg
jne
cmp
mov
xchg
ret
cmp
add
leave
add
sbb
xor
mov
xor
or
mov
add
aas
xlat
hlt
xchg
cmp
sbb
add
or
or
mov
call
or
mov
mov
xchg
call
adcb
sbb
lock
add
pop
adc
cmpsb
pop
pop
sbbl
sub
out
pop
add
jp
jmp
rolb
jo
daa
jp
push
lods
push
jecxz
add
and
mov
or
pop
inc
sbb
or
aas
lods
cmp
inc
add
popa
dec
pop
add
cmpsb
push
sahf
nop
or
sarb
roll
or
insb
xor
in
ficoms
sbb
fs
rcrb
or
pop
ja
pop
and
pop
ret
push
sbb
push
mov
cmp
and
pop
adc
gs
pop
mov
loope
xchg
fisttpl
out
inc
xor
cmp
jbe
add
adc
lds
sub
jmp
adc
jne
or
push
popa
aam
loopne
add
in
sub
sbb
mov
and
daa
ja
xchg
push
adc
push
or
add
and
shl
dec
outsl
adc
sbb
jmp
orl
add
lods
inc
pop
insb
dec
xchg
push
aam
push
and
mov
orl
adc
movsb
fld
add
cmp
sarl
outsb
in
push
xor
inc
pop
adc
sbbl
push
lret
push
xor
jge
jno
mov
pop
mov
call
and
out
xchg
mov
dec
dec
push
sti
sub
or
sub
xlat
cmpsl
lock
outsl
and
idiv
into
je
lods
jns
or
and
and
xchg
and
xor
xchg
or
and
jle
jne
xlat
divb
imul
jne
sub
pushf
scas
sbb
push
movsl
pop
enter
or
xchg
mov
icebp
popa
xchg
jmp
jne
pop
and
in
sbbl
push
je
cmc
mov
push
mov
scas
add
out
ret
ljmp
adc
cs
xchg
jno
xor
jne
xor
inc
dec
push
pop
dec
rorb
and
push
inc
cmp
cmp
inc
or
or
xlat
js
aam
jno
xor
popf
jne
push
adc
pop
inc
ja
jne
lret
sti
nop
xor
dec
jne
invd
dec
mov
xchg
dec
and
bound
in
mov
mov
pop
adcl
mov
xchg
pushf
popa
lret
inc
add
add
xor
xchg
dec
inc
jge
jle
popa
call
sub
mov
mov
jge
popa
pop
jmp
jecxz
lcall
faddp
sti
pop
dec
mov
dec
das
mov
push
adc
inc
adc
jns
xchg
out
arpl
or
dec
mov
mov
inc
adc
test
push
mov
imul
cmp
rcrb
or
pop
xchg
jle
mov
movsl
sbb
fucomi
dec
pusha
inc
xor
or
sbb
inc
dec
das
push
or
cmpsb
mov
xor
das
sub
or
rolb
dec
nop
mov
roll
jne
inc
inc
lret
inc
dec
pop
jnp
add
push
xchg
dec
pop
in
pusha
inc
add
push
inc
or
in
in
cli
sub
outsb
or
cwtl
mov
cld
inc
adc
pop
sub
push
and
loope
inc
mov
insl
lea
mov
imul
rcll
addr16
mov
xchg
js
mov
in
cmp
cli
clc
dec
and
mov
push
bound
xchg
lds
jmp
pop
push
cmp
mov
adc
push
ret
push
sti
push
and
mov
xchg
scas
add
setp
push
dec
jns
loope
sbbb
test
jmp
roll
test
xchg
scas
adc
dec
mov
mov
shrl
dec
lret
or
in
and
add
add
mov
cmc
adc
ret
xchg
pop
inc
sub
ljmp
adc
push
ror
mov
mov
leave
xchg
push
xchg
mov
inc
xchg
dec
mov
aaa
mov
inc
add
xlat
insl
push
pop
mov
add
es
rclb
or
add
push
cmp
xor
or
add
xor
xchg
int3
push
mov
sahf
outsl
mov
lret
fiadds
push
or
daa
or
dec
mov
stos
jp
mov
mov
sub
lret
decl
xchg
testb
enter
push
sub
loop
mov
shlb
pop
and
xchg
cmp
and
mov
xor
aaa
jecxz
adc
mov
dec
push
and
imul
jge
loope
inc
enter
dec
clc
add
lret
mov
cwtl
dec
add
push
nop
dec
test
or
arpl
lock
cmp
push
sub
and
test
dec
mov
jle
push
mov
or
inc
add
cmp
push
aas
mov
ret
sub
inc
xchg
outsb
inc
xor
inc
mov
xchg
es
sbb
mov
cmp
sbb
add
xchg
popa
pop
xchg
mov
xchg
push
mov
add
and
ret
repnz
fwait
dec
in
or
sahf
mov
adc
rcrl
rclb
dec
nop
push
xor
mov
test
add
add
or
gs
or
xchg
pop
push
add
hlt
or
add
jo
addb
cmpsl
popa
xchg
add
cld
fiadds
mov
popf
mov
daa
pop
rorb
js
inc
mov
je
mov
add
dec
jmp
mov
add
icebp
pop
testb
je
mov
hlt
addb
or
jb
inc
aas
ja
addr16
arpl
cmpsl
in
cmp
cmpsb
xchg
outsb
and
loopne
add
leave
pop
mov
call
mov
popf
inc
flds
cmpsl
mov
cli
push
mov
pushf
sbbl
inc
dec
xor
cmpsb
rol
rcll
mov
mov
xlat
mov
and
add
sbb
insl
xchg
mov
cmp
push
or
cmp
je
pushf
int
xor
xor
mov
repnz
aas
cmp
std
loop
adc
or
or
and
xchg
nop
pop
push
add
or
sahf
mov
movsl
repnz
inc
stc
cmpsb
daa
test
xchg
cmp
dec
sub
jl
adc
cwtl
lock
push
cmp
in
inc
clc
idivl
mov
out
nop
or
adc
push
mov
mov
dec
lods
add
inc
sbb
outsl
mov
mov
outsb
aas
movsb
sbb
aaa
outsl
pop
je
mov
xchg
pusha
add
lock
es
arpl
push
add
fcom
mov
mov
mulb
mov
adc
mov
push
or
push
add
loopne
shr
xchg
mov
mov
fisttpll
out
sysenter
es
pop
je
mov
ss
add
rcll
cltd
sbb
mov
mov
mov
dec
and
and
and
xchg
mov
mov
or
pop
xor
rcll
xchg
dec
leave
pop
or
js
dec
leave
pusha
cmp
xor
sti
cltd
data16
pop
and
das
fdivrl
fsubrs
outsl
add
jbe
sbb
sub
out
sub
push
addr16
push
clc
cmpsb
stc
insb
mov
sbb
and
mov
sbb
and
jno
push
mov
shll
dec
xor
lds
mov
mov
shr
mov
xchg
pusha
std
icebp
leave
je
stos
mov
lock
or
pusha
movsb
rclb
cmp
mov
jno
test
xchg
cmovs
cwtl
js
xor
cmpsb
movsb
xor
pop
pop
sbb
inc
inc
dec
mov
jns
inc
jmp
fcoml
dec
mov
push
cmp
cmpl
cltd
test
dec
dec
push
scas
add
cmpb
testb
mov
cwtl
nop
add
rcl
fsubl
dec
out
pop
arpl
dec
sbb
or
jg
push
inc
imul
mov
jbe
out
xchg
popa
push
push
add
jae
xorl
les
dec
push
lods
dec
mov
pcmpeqd
cmpb
pop
aas
cmp
bound
adcb
insl
inc
jbe
sub
inc
fisttpll
out
outsb
or
or
and
aam
xor
adcb
data16
adc
inc
cmp
sbb
sar
movb
add
inc
pop
mov
aaa
jo
push
sub
test
mov
cmpsl
adc
push
pusha
mov
mov
jne
dec
or
pusha
enter
outsb
adcb
out
xorb
dec
je
incb
cmp
add
push
pop
mov
popa
inc
mov
sbb
pop
inc
fwait
arpl
xor
pop
mov
insb
addr16
dec
fstps
mov
or
pusha
mov
dec
jmp
pop
cltd
clc
pusha
pop
jp
xchg
in
xchg
add
jnp
add
xor
flds
mov
and
cmp
rcrb
cmp
push
and
lods
ret
mov
test
imul
lea
inc
push
jns
push
xor
bound
or
js
add
cmc
sbb
sbb
add
dec
mov
mov
imul
sub
pop
sbb
lock
test
sbb
inc
outsl
mov
mov
xor
movb
mov
cltd
js
add
mov
push
or
lock
mov
lock
and
pop
dec
xor
pop
in
call
scas
hlt
push
adc
inc
jp
add
inc
xchg
push
aaa
xchg
lods
popf
pop
leave
sbb
sbb
sbb
xchg
ss
test
sbb
dec
out
fadds
and
jne
clc
add
jp
clc
adc
mov
das
adc
xor
and
inc
or
loope
pop
mov
sub
pop
mov
sbb
jae
fst
cmp
data16
fucomp
adc
or
outsb
add
outsb
xor
cwtl
lret
inc
ljmp
adc
gs
aas
sbb
push
mov
pushf
add
nop
filds
out
shrb
mov
push
repnz
add
add
or
popw
xor
add
add
jne
hlt
sbb
ret
popa
or
divl
cmp
push
test
jo
jp
test
dec
jne
add
in
pushf
sar
jecxz
push
sbb
sub
mov
fistpl
pushf
cmp
push
imul
neg
pop
lea
rcrl
mov
jmp
sub
mov
and
movsl
mov
xchg
mov
js
cmpsb
je
div
and
add
aas
icebp
or
repz
add
or
xor
jl
fwait
push
push
pushf
or
xchg
inc
scas
nop
sub
dec
pop
add
data16
mov
xchg
or
push
subps
loopne
jmp
sbb
imul
filds
or
and
cmc
push
nop
ja
add
cmp
cmpb
push
das
test
mov
ret
cmp
push
fsubl
add
dec
popa
mov
fsubrs
cmp
aaa
call
mov
loopne
in
or
xchg
adcb
lret
ret
lcall
jo
sub
outsl
imul
lcall
nop
insb
es
iret
mov
xchg
test
add
outsl
or
xchg
mov
enter
lock
mov
cmp
inc
jne
mov
inc
mov
pop
je
and
pop
add
or
cwtl
and
dec
ljmp
adc
or
and
inc
jle
push
orl
sbb
and
sbb
popf
xor
ss
xor
push
cmpsl
int3
pop
adcb
push
ret
mov
mov
test
mov
and
enter
aam
pop
ret
test
add
addr16
add
or
in
cmp
test
inc
inc
movsb
adc
adc
sarl
sbb
jne
rcll
aas
ret
mov
test
xor
push
pop
fcomps
movsb
les
incl
fildll
int3
cltd
jle
insl
or
fisubrs
add
mov
inc
sbb
lds
xlat
faddl
mov
repnz
adc
shll
dec
idivl
lret
adc
sub
xor
subl
icebp
mov
ss
js
or
addb
movsb
sub
jne
les
push
lea
jne
pop
pop
jbe
popa
jne
stos
js
pop
xchg
xchg
mov
mov
mov
jl
inc
or
aaa
sti
jb
lods
shll
add
mov
dec
sub
mov
push
or
jnp
mov
xor
pop
jl
adc
sbb
mov
cmp
cli
xor
mov
addr16
and
cmc
movsb
outsb
repnz
pop
adc
lret
mov
mov
insl
push
sbb
and
and
pop
shlb
cmpsb
sti
adc
pop
xorl
clc
dec
adc
or
jmp
jo
cwtl
xor
push
pop
movsl
inc
or
cmp
popl
adc
mov
push
jae
lods
in
or
bound
adc
mov
xlat
cltd
xor
andl
mov
xchg
lret
inc
lcall
rorb
mov
sub
push
insb
jp
sbb
pusha
ja
push
sub
add
xor
addr16
out
add
add
sbb
lods
sub
and
push
xor
daa
adc
cltd
cltd
sbb
push
sub
xchg
inc
push
or
or
popa
ret
fs
pop
adc
push
inc
sbb
cmp
sbb
sbb
push
js
fisubrs
or
or
jge
loop
dec
cmp
push
push
or
or
and
add
jmp
sub
push
lock
nop
movaps
mov
adc
jo
inc
mov
mov
sarb
and
sbb
mov
test
mov
adc
aas
scas
inc
rcll
mov
jb
mov
insb
mov
js
inc
jae
addr16
jmp
imul
add
inc
or
mov
dec
inc
movsb
mov
dec
or
dec
pushfw
cmc
mov
pop
and
lcall
or
popa
and
in
sub
add
xor
addb
adc
cmpsl
and
aas
mov
add
adc
xchg
jb
cmp
inc
ja
mov
js
rorb
dec
jle
xchg
pushf
mov
pop
arpl
jle
mov
adc
cmp
cmpsl
inc
sbb
add
or
add
das
icebp
sub
arpl
repnz
jmp
ret
jbe
ss
push
pop
pop
jl
ret
push
dec
pop
jg
cmpsl
pop
imul
dec
push
add
jle
adc
jmp
xchg
bound
popa
lds
cmp
jne
cmp
push
fs
outsl
xorb
hlt
xor
outsl
insb
push
sub
aaa
add
cmp
cmp
push
popa
cmp
pop
aam
xor
cmp
add
pop
fbld
popa
mov
add
add
add
add
loopne
rcrl
dec
rolb
mov
xor
dec
stos
inc
das
sub
or
cmp
xor
pop
orb
frstor
push
sub
adcb
sbb
mov
out
jecxz
je
add
xlat
pop
sub
ja
push
rcll
and
adc
or
or
xor
rorb
add
enter
leave
mov
in
add
inc
or
inc
push
jmp
scas
xchg
lret
and
mov
xor
scas
or
adcl
ret
lea
adc
aaa
or
sbb
sbb
push
arpl
sub
add
cltd
pop
sub
sub
mov
arpl
lds
fidivrs
push
xchg
std
imul
inc
add
loope
pop
subl
cmpl
out
or
dec
jle
or
test
filds
add
out
sbb
or
fcom
aad
rcr
lcall
dec
lds
or
add
jmp
data16
dec
cs
insb
sbb
pop
add
dec
mov
test
mov
pushf
cltd
and
je
imul
inc
xor
lcall
push
jecxz
mov
jno
dec
cmp
mov
popa
bound
test
popa
adc
call
push
inc
das
cmp
push
sub
sbb
mov
fbld
dec
arpl
out
orl
pop
jl
and
push
push
enter
dec
inc
or
in
mov
jno
pop
ret
push
nop
add
lahf
add
and
and
outsl
and
fimull
push
movb
inc
fcoms
mov
fs
cmpl
sub
xchg
es
xor
rol
pop
aam
push
hlt
inc
pusha
pop
dec
or
inc
adc
sarb
inc
loopne
and
sub
inc
mov
pop
dec
outsl
mov
or
push
sbb
adc
lods
sub
or
adc
aad
mov
adc
cmp
ja
pop
out
jbe
sbb
xor
xchg
and
inc
add
cltd
inc
inc
adc
ficompl
mov
punpckhbw
inc
mov
sbb
and
lea
jge
or
aaa
cld
pop
daa
or
inc
lods
lcall
pop
and
pop
ret
mov
outsl
mov
mov
adc
jle
push
or
jecxz
lock
pop
or
adc
adc
jle
pop
sahf
xchg
aaa
adc
or
xchg
in
dec
es
mov
sub
mov
arpl
inc
mov
sbb
inc
sbb
lods
xchg
adc
imul
push
and
sahf
xorb
push
stos
iret
add
fs
pushf
push
push
inc
loop
xor
pusha
cmp
lcall
cmpsb
pop
insl
and
scas
dec
push
mov
test
sbb
fisubl
xchg
daa
or
inc
imul
xchg
arpl
pop
cld
rcll
push
mov
mov
cmpsb
ss
inc
dec
or
push
js
or
push
mov
cltd
test
inc
xchg
pop
mov
clc
sbb
or
or
test
lcall
mov
test
fsubs
push
jb
pop
sub
jb
leave
inc
out
pop
pop
push
in
or
fwait
adcb
dec
push
push
rcrl
mov
daa
insb
adc
jo
mov
cmp
xchg
mov
inc
pop
xchg
add
cmp
adc
icebp
ret
dec
daa
or
mov
mov
sbb
dec
adc
outsb
imul
les
sbb
imul
dec
pop
xchg
es
jecxz
loopnew
xorb
inc
cld
push
mov
or
test
ljmp
cmp
lea
mov
dec
icebp
jb
jns
pop
and
loopne
scas
icebp
cmc
or
dec
dec
imul
push
inc
add
sub
pusha
add
or
mov
mov
and
adc
outsl
dec
loopne
inc
mov
daa
fcmovnb
xchg
sbb
adc
adc
popf
and
sbb
sbb
movsl
or
dec
pop
inc
or
mov
push
out
cld
stos
out
lea
mov
and
mov
daa
lods
cmp
repz
cld
int3
test
or
pop
clc
fcoml
call
mov
sub
push
filds
faddl
inc
xor
andl
push
sarb
loop
or
push
cmpb
mov
jle
or
sub
ret
data16
mov
icebp
or
inc
popf
cmp
and
enter
inc
repnz
cmc
lea
sbb
test
add
mov
jg
loope
push
and
fldt
add
fmull
push
jmp
push
xor
xor
or
or
rorl
adc
and
shlb
mov
or
bnd
push
ss
push
push
push
cltd
push
and
xchg
popf
sbb
or
jecxz
and
adc
in
pushl
sbb
ljmp
les
test
push
and
cmp
fldl
sub
sbb
out
mov
sub
test
popa
imul
enter
dec
or
js
test
pop
mov
add
add
loope
fildl
scas
jns
mov
add
insl
cmp
push
add
ljmp
lock
jmp
pop
mov
sub
add
sub
nop
xor
xor
fdivs
jl
xor
and
mov
stos
add
mov
dec
je
add
jmp
in
aam
sbb
mov
push
or
inc
pop
push
sbb
arpl
sbb
repz
xor
xchg
mov
cbtw
jmp
icebp
movsl
repnz
dec
fstl
les
sbb
fidivl
mov
or
aas
js
cltd
dec
add
or
aaa
add
clc
inc
lret
or
call
add
or
insb
push
mov
gs
add
fldt
and
mov
pop
movsl
and
sub
in
rorb
rcr
mov
jg
js
mov
repz
pop
inc
cmpb
inc
mov
adc
cmp
test
subl
pop
sbb
or
adc
sbb
aaa
xchg
push
adc
pop
push
imul
mov
insb
mov
sbb
add
popa
pop
push
lock
sbb
movsl
dec
push
and
mov
dec
adc
pop
mov
dec
fstl
inc
movl
xorl
daa
sub
sbb
and
adc
loop
mov
xchg
xchg
sub
je
jmp
fisubs
dec
js
insb
mov
inc
xor
pop
xor
test
sbb
inc
dec
hlt
addr16
cmc
bound
xchg
and
push
arpl
shrb
fwait
fwait
sbbl
mov
int3
jo
es
insb
movb
insb
xor
add
les
mov
pop
notb
orl
ljmp
and
hlt
ja
iret
js,pn
mov
bound
and
jmp
fs
push
adc
aas
xchg
mov
pop
push
and
sub
movl
mov
inc
jbe
xchg
xor
loopne
xchg
and
dec
lea
sub
add
testl
mov
addl
inc
jp
xchg
loopne
fld
mov
insb
jbe
mov
push
jne
shll
shl
adc
sub
or
xchg
adc
mov
and
xor
iret
pushf
insl
cltd
adc
cs
hlt
daa
xor
cmp
add
dec
inc
sbb
sub
insl
fstl
mov
ja
mov
push
fimuls
cmp
jecxz
addr16
cmpsl
or
push
shrl
mov
hlt
cltd
in
add
add
add
xchg
add
inc
movsb
into
and
mov
insb
fcmovu
shrl
push
jo
dec
cmp
and
test
cmp
les
xor
adc
fimuls
popf
add
pop
aam
and
push
xor
in
pop
sar
ja
jmp
pop
mov
push
movb
in
div
push
inc
cmp
out
cmc
pop
lock
jmp
inc
add
sbb
repnz
std
push
dec
cmp
setle
es
sub
inc
dec
inc
dec
adc
cld
mov
adc
and
inc
arpl
rcl
and
sbbb
pop
add
pop
aaa
lods
cmp
jmp
push
or
negb
mov
pushf
xor
adc
aam
lock
push
dec
add
xor
inc
insb
push
xchg
and
add
mov
enter
add
cli
scas
sub
jne
sub
or
add
inc
mov
add
adc
in
sub
shl
jmp
dec
push
jnp
aaa
hlt
jmp
xorl
mov
push
ja
mov
sub
dec
inc
mov
or
cmp
xchg
mov
sbb
out
aaa
lock
add
daa
daa
adcl
call
aaa
xchg
or
stc
mov
aad
loope
ss
adc
stc
enter
icebp
mov
xor
cmp
add
jl
push
xchg
test
add
push
xchg
pop
and
inc
add
sub
mov
popa
or
pop
add
dec
sbb
outsb
pop
add
xchg
sarb
xchg
cmp
ja
mov
xchg
ret
push
ljmp
adc
jns
add
arpl
jg
sbb
push
or
or
rorl
xor
add
jmp
sbb
shll
sub
push
pop
and
add
push
or
xchg
mov
cmpsl
shrb
add
mov
mov
setno
inc
dec
lods
cmpsb
bound
cmpsl
mov
dec
adc
repnz
rolb
add
inc
cmpsb
xor
fisttps
repz
pop
push
push
sbb
shlb
jno
push
inc
sub
add
jnp
adc
xor
cmp
push
add
pop
and
subl
ret
push
cs
push
mov
inc
in
adc
bound
loop
mov
mov
pop
cmp
jne
popf
cltd
adc
sbb
lock
test
mov
in
clc
sub
jecxz
add
mov
ja
loope
cmpb
mov
inc
xchg
adc
icebp
cmp
je
xchg
dec
or
dec
push
cmp
shll
je
out
inc
out
popa
imul
jo
jge
push
sbb
movsb
and
int
mov
xchg
les
test
xor
inc
inc
push
hlt
ds
inc
outsl
mov
int
adc
jle
int3
pop
push
hlt
jbe
or
cmpsl
jne
push
inc
test
xor
push
and
pop
sub
mov
mov
into
sbb
mov
ds
popa
jne
pop
xlat
and
add
xor
sbb
lock
pop
sub
sub
adc
aas
push
cmp
ljmp
and
test
lods
cs
dec
pop
repz
mov
mov
jb
and
in
sbbb
adc
and
sbb
idiv
popf
mov
cmpsb
or
and
testl
jbe
faddl
fs
pusha
or
dec
prefetcht0
jae
push
enter
sahf
push
pusha
adc
sahf
flds
pop
pusha
push
out
jae
pop
pop
lods
call
repz
sbb
js
jp
or
add
rorb
adc
or
adcl
mov
lahf
xchg
pop
cmp
test
mov
pop
cwtl
es
mov
xor
inc
push
and
xor
jp
sub
lret
dec
sub
push
jno
adc
std
shll
icebp
cmp
xor
dec
sub
add
sbb
cmp
les
pop
cmpsb
sub
pop
push
sbb
imul
test
mov
xchg
mov
mov
mov
inc
rcrl
aas
adc
mov
mov
pop
fcoms
dec
mov
mov
loopne
mov
push
dec
jb
inc
imul
pop
mov
adc
mov
push
xor
sti
fucomi
jb
cmp
fsubrp
inc
pop
xor
jne
xor
mov
into
orb
or
mov
adc
add
add
cmc
mov
arpl
jno
sbb
shlb
cmp
mov
leave
jnp
inc
inc
sub
xchg
jmp
sbb
cwtl
ret
insl
mov
sub
push
jbe
test
or
dec
lcall
jne
mov
sub
rorl
jmp
and
aam
lods
dec
sbb
jg
add
sbb
movsb
mov
jns
adc
add
add
push
movsl
push
dec
push
dec
ss
mov
sti
mov
aas
jmp
jmp
lds
dec
pushf
cmp
and
cwtl
mov
sahf
or
test
jne
bound
ljmp
bound
mov
cmc
cmp
jle
cmp
jmp
sub
jl
mov
and
jg
and
add
push
or
pushf
mov
aas
loopne
and
cltd
mov
and
es
fidivs
hlt
scas
call
cmp
jb
adc
or
loop
sbb
mov
adc
or
mov
fisubrs
jg
pop
mull
inc
add
add
push
mov
mov
mov
daa
nopl
leave
aam
and
dec
dec
pop
sbb
push
cli
fisttpll
pop
push
loopne
or
pop
push
sahf
bound
movlps
pushf
inc
imul
sbb
cmp
or
inc
adc
inc
mov
sub
jo
ror
mov
add
out
nop
sub
movl
lea
xchg
xor
ficomps
sub
dec
sub
or
or
jle
sub
jle
imul
or
mov
mov
or
xchg
adc
faddl
jmp
mov
add
inc
or
sbb
xchg
je
add
pusha
cmp
sub
push
out
mov
mov
push
xchg
adc
xor
dec
loopne
adc
dec
and
push
lods
aad
out
nop
push
test
pop
out
inc
call
xor
lea
and
cwtl
xchg
nop
add
aad
testb
add
jmp
sbb
push
stos
insl
nop
jmp
or
and
xchg
jge
mov
mov
imul
pop
clc
test
mov
cmp
dec
sub
test
or
pop
cmp
xchg
push
inc
je
and
in
lret
mov
ds
mov
add
cbtw
push
data16
mov
sub
pushf
mov
popa
inc
dec
xchg
cmpl
hlt
sub
mov
imul
fidivl
adc
xchg
adc
mov
inc
jle
test
sub
push
inc
sub
pop
out
insl
cmp
pop
xchg
cs
cmp
fwait
push
imul
or
cmp
adc
inc
cs
and
adc
pop
add
dec
push
or
cmpsb
andb
cmp
xchg
pop
sbb
mov
and
and
mov
add
mov
push
xchg
addr16
xchg
cli
sbb
adc
hlt
cmp
sbb
shrb
or
lds
movsl
inc
insl
mov
xor
nop
mov
lea
pop
inc
insb
xchg
cwtl
add
or
popf
xor
cmp
aaa
push
add
cmpb
mov
loop
out
inc
popa
jne
loope
lea
or
test
pop
jmp
jbe
ja
les
push
or
out
xchg
cmpsl
adc
cwtl
js
test
jg
or
xchg
out
mov
les
push
daa
loop
loop
adc
mov
adc
pop
fwait
fs
sub
and
ret
inc
insl
xlat
imul
dec
adc
ss
fadds
inc
push
stos
shl
cwtl
push
adc
arpl
leave
arpl
pop
mov
or
adc
xchg
pop
push
les
repnz
insb
or
jecxz
jecxz
xor
in
idivl
pop
add
mov
and
rcrl
lahf
data16
xchg
mull
sub
ret
shrb
push
add
cs
lcall
add
cmp
add
mov
fs
insl
in
ja
lock
cwtl
xor
mov
add
je
or
sbb
scas
mov
mov
mov
rclb
aam
pop
sub
dec
xchg
shlb
adc
dec
push
jecxz
push
aaa
adc
or
push
or
dec
dec
sub
inc
xor
cmc
lcall
add
shl
ficoml
inc
pushf
sahf
out
je
adc
xor
cmp
je
repnz
pop
ret
nop
and
or
sbb
mov
cmpb
test
xorb
bound
push
or
outsb
sub
lds
dec
andl
in
nop
aas
pop
data16
rcrb
xlat
fdivrl
mov
je
in
cmp
aad
arpl
inc
mov
push
adc
mov
das
mov
xchg
or
mov
add
xor
or
popf
adc
adcl
sbb
push
xchg
ret
out
sbbl
ss
pop
push
adc
xchg
add
dec
clc
xchg
mov
inc
mov
sub
or
lods
or
mov
clc
add
loope
int3
add
pop
push
ljmp
pop
sarl
es
xor
sbb
dec
les
enter
mov
cli
loop
jmp
and
jne
les
inc
or
sub
push
pop
mov
lods
pop
add
pop
adc
cmpl
pop
pop
push
imull
shll
dec
enter
sahf
inc
iret
add
sbb
xor
fcoms
add
insl
cwtl
test
add
jmp
add
gs
cli
ss
pop
out
or
push
cmp
test
es
rcrl
cmp
push
inc
add
pop
test
and
lods
push
sbb
or
add
pop
add
mov
pop
shrl
inc
fwait
cmpb
pop
adc
dec
je
movhps
adc
and
fdivs
jmp
enter
popl
lods
or
push
adc
insl
idivb
adc
adc
jmp
sub
test
jno
lea
je
jo
inc
in
or
mov
loope
sub
inc
add
fildl
mov
mov
mov
sbbb
or
push
push
imul
push
lods
ret
adc
jmp
push
gs
jmp
xchg
sbb
push
dec
es
add
and
mov
sbb
incb
jecxz
jle
cli
cmp
xor
in
dec
frstor
dec
xchg
call
in
pop
rcll
into
shl
outsl
jg
jb
add
push
rorb
pop
mov
push
mov
pushf
mov
imul
or
mov
xor
pusha
out
outsl
lock
pop
cmp
int
mov
jno
jecxz,pn
xchg
clc
or
sbb
push
adc
cmp
or
mov
fwait
lds
sbb
shll
sub
ret
inc
inc
test
sbb
xor
mov
or
bound
sbb
andb
neg
rorl
push
lock
sbb
je
mov
cld
mov
popf
pop
test
push
inc
xchg
fldl
insb
xor
popa
and
je
inc
or
adc
or
not
inc
xor
pusha
in
lds
inc
mov
fwait
scas
adc
push
lcall
dec
push
sub
mov
sbb
out
push
sbb
cwtl
movl
test
stos
adc
ss
roll
cmpb
pop
loope
and
push
push
push
xchg
loopne
inc
mov
clc
xor
lcall
mov
push
add
mov
call
jbe
lea
add
add
xchg
add
aaa
inc
pop
push
adc
inc
dec
mov
movsl
inc
jne
mov
add
les
inc
add
les
addb
sub
loope
push
das
sub
inc
jo
jo
mov
inc
pushf
lods
lea
mov
mov
mov
inc
push
addb
fdivr
pop
lret
inc
jns
adc
sub
insb
test
es
add
enter
push
flds
lcall
push
push
int3
cmp
or
in
sbb
dec
or
unpcklps
pop
jbe
int3
pop
js
mov
fadds
cltd
inc
rolb
adc
and
dec
aaa
and
lods
in
push
xchg
inc
movsl
jg
lret
pop
and
adc
les
nop
fcoms
mov
sbb
jp
mov
fisubl
dec
rorl
es
add
in
mov
sbb
xchg
push
rorb
ds
loopne
mov
pop
jbe
incb
push
and
pop
repnz
mov
or
push
cmp
xchg
sub
aas
xor
shrb
sbb
dec
scas
lock
mov
shlb
sub
jmp
xchg
sub
dec
mov
add
pusha
cmp
xchg
mov
fiadds
mov
push
fwait
cltd
frstor
push
sbb
push
push
cmp
and
inc
cmp
cld
cmp
cmpsl
push
hlt
mov
mov
mov
dec
sar
pop
and
jns
sub
das
cmpsl
mov
test
adc
inc
aas
insb
flds
inc
or
push
inc
rcrb
inc
mov
cmp
inc
dec
iret
roll
ret
pusha
mov
add
jp
or
stos
loop
test
repnz
outsb
and
cmc
adc
test
inc
cs
pop
mov
daa
add
daa
orl
inc
add
nop
inc
ret
and
xchg
xchg
cmpsb
dec
inc
pop
or
xchg
and
sub
adc
adc
call
push
cmp
adc
hlt
inc
or
scas
sbb
shlb
add
inc
lods
les
mov
adc
movsl
icebp
xchg
xchg
mov
jg
je
sarl
pop
ror
ss
jecxz
daa
sbb
push
jne
sub
add
add
adc
flds
lods
xor
sbb
push
aam
mulb
loop
inc
jns
push
sbb
roll
gs
fsubs
clc
mov
cmp
adc
rcl
sbb
aaa
adc
mov
pop
orl
call
or
fisttpl
es
adc
push
jmp
sbb
push
or
pop
repz
aas
cmp
bound
xchg
push
sub
xor
add
repnz
xorb
jne
sbb
add
mov
test
pusha
test
mov
pop
mov
inc
or
lcall
je
movswl
imul
jmp
cmpw
cmp
push
inc
add
sbb
inc
pusha
push
sbb
insl
pop
imul
movsb
loope
jmp
push
lahf
push
mov
xchg
daa
lods
xchg
pop
daa
data16
cmp
scas
xor
daa
add
aas
mov
xchg
add
pop
mov
add
mov
add
out
or
cmp
bound
pop
scas
cmp
and
xchg
cltd
jo
roll
xchg
test
jbe
push
dec
insb
jl
cmp
sbb
inc
sbb
test
cmp
xchg
xchg
lret
adc
and
or
and
adc
xchg
jle
je
ret
add
pop
mov
adc
push
and
xor
or
mov
loopne
push
rclb
push
pop
mov
int
nop
addr16
shl
leave
xor
int3
enter
xor
loopne
sub
lods
and
add
jl
mov
mov
aaa
rcrl
inc
mov
daa
xchg
sbb
mov
cs
inc
pop
dec
lret
mov
sub
daa
inc
mov
int
ret
pop
orb
cmp
sbbl
aaa
sbb
iret
push
outsl
lret
xor
rcrb
rcll
sarb
sarl
jbe
ret
arpl
fadd
xchg
sub
xchg
and
shr
fbstp
dec
ret
and
mov
and
jmp
mov
push
xor
xchg
adc
mov
lcall
and
in
scas
aam
push
xchg
dec
ret
xchg
shlb
daa
sbb
sub
dec
fsubp
sbb
out
mov
jl
xor
jo
int
daa
adc
push
and
int
and
mov
adc
mov
fs
push
dec
es
add
shlb
dec
adc
lahf
push
shlb
ficomps
and
lahf
in
je
mov
sub
fs
les
mov
andl
mov
sbb
dec
jp
or
push
mov
dec
outsb
xlat
add
pop
xor
jno
sbb
adc
mov
ret
push
xor
add
xchg
cmp
sbb
call
popaw
pop
push
push
and
jbe
shrb
dec
add
xor
loopne
xchg
and
push
pop
push
lea
add
push
or
cmp
xor
adc
js
or
jno
into
xor
testb
inc
sub
or
test
ds
add
sub
sub
rorb
jmp
subb
inc
les
lea
dec
mov
ss
int3
aaa
pusha
jo
orb
inc
adc
xchg
xchg
out
jl
mov
push
test
dec
and
add
jmp
fcomps
pop
sbb
xor
adcl
mov
sarl
or
mov
pop
fs
lret
inc
movsb
inc
mov
mov
imul
daa
xchg
mov
adc
scas
andb
push
in
xchg
iret
ljmp
mov
sub
iret
add
addr16
mov
adc
loopne
mov
sbb
subb
and
xor
mov
aaa
push
icebp
pop
adc
shll
inc
and
pop
inc
sub
push
cmp
mov
push
xor
mov
std
push
pop
mov
push
roll
pushf
inc
mov
push
loopne,pn
dec
adc
mov
pop
pusha
sub
push
cld
rcrl
sbb
sub
hlt
adcb
shrb
and
subb
icebp
sub
mov
and
mov
jl
shll
adcb
fnstcw
pop
inc
pusha
add
mov
lods
movsl
subb
pop
mov
fcom
or
push
pop
sbb
movsb
mov
mov
jmp
jae
orb
shrb
or
inc
inc
inc
or
mov
xor
cmp
ret
data16
push
mov
fs
jne
mov
and
mov
pop
arpl
xor
scas
or
add
mov
xchg
in
xor
movsb
subl
test
jne
std
jnp
add
js
std
or
inc
inc
add
jne
jne
jle
dec
jae
and
push
or
push
cwtl
push
inc
or
movsl
aad
or
cmp
inc
data16
and
stos
mov
jp
add
fisubrs
imul
das
pop
cmp
dec
sarl
or
aas
lds
and
gs
xor
dec
cmp
cmp
xchg
addl
cmpb
mov
test
mov
jecxz
icebp
sbb
add
daa
pushf
cmovl
add
push
les
or
test
xor
xor
icebp
ss
mov
popl
in
push
and
adc
gs
mov
scas
inc
mov
outsl
ljmp
xchg
popf
and
scas
jns
xchg
vmwrite
lds
dec
add
cmp
dec
lock
sbb
sbb
mov
jle
xchg
test
jmp
insl
push
pushf
or
xchg
mov
lahf
mov
pop
pop
pop
ret
outsl
inc
outsl
mulb
push
xor
dec
outsl
mov
xor
inc
inc
push
dec
aam
scas
pusha
and
push
cld
adc
adc
adc
or
das
add
mov
xchg
jle
or
push
jmp
or
and
jno
pop
idivl
push
add
into
jnp
loopne
xor
add
add
mov
mov
pop
mov
lcall
cmp
sub
sub
icebp
push
js
jo
stos
jne
mov
rcrb
pop
fildl
jnp
adc
add
pop
ljmp
int
imul
jne
aad
dec
and
sahf
cwtl
push
xor
inc
inc
adc
mov
stos
adc
fwait
pop
inc
inc
test
addr16
stos
dec
mov
mov
sbb
rcll
mov
pop
cmp
xor
pop
and
sub
and
push
shlb
pop
push
lods
dec
add
popa
stos
sarb
jmp
dec
fdivr
xor
sahf
inc
shrl
shrb
xchg
test
dec
push
push
push
xor
out
mov
rcr
jb
inc
jmp
add
test
out
and
dec
aad
pop
mov
push
push
xor
add
rorl
arpl
int3
xor
gs
and
mull
rol
inc
lds
pop
jle
out
dec
push
sbb
jmp
add
fwait
inc
add
adc
cmpsl
movsl
cmp
and
addb
inc
mov
sbb
mov
xor
xor
pop
jne
sti
lahf
rcrl
pop
and
and
out
movb
adc
xchg
repz
sbb
jb
adc
or
or
jecxz
jne
mov
mov
add
jmp
loope
or
xchg
cmp
inc
aam
test
inc
inc
mov
cmp
les
fadds
xchg
inc
addr16
jne
pop
dec
mov
popa
dec
xor
xor
push
repz
shrb
pushf
imul
mov
add
jecxz
loopw
sbb
mov
sub
add
loop
fisttps
out
cli
jne
fiadds
xorb
repnz
sbbb
jbe
sbb
sbb
pop
push
mov
xor
gs
add
loopne
add
push
xor
xorb
out
jne
ja
je
sub
mov
test
mov
inc
push
sbbb
mov
inc
or
test
and
std
add
inc
inc
jmp
lret
jne
cmp
imul
sub
out
add
cmovo
sbb
mov
sbb
rclb
xchg
xchg
shrb
rcll
fisttps
mov
sub
nop
cwtl
cmp
add
jb
rcrl
cmp
inc
pop
lock
dec
jg
les
push
shl
lret
ret
inc
inc
cmpsb
push
pushf
xchg
sbbb
pop
add
xor
scas
cmp
test
jo
xchg
lock
fcmovbe
jge
jnp
jge
mov
pushf
jmp
sub
and
daa
imul
sarb
sub
xorb
faddp
jp
arpl
mov
lret
ret
xchg
push
aam
int
loopne
sahf
gs
mov
inc
popa
dec
dec
mov
xor
call
mov
test
mov
push
fs
add
push
clc
enter
nop
popf
xchg
loopne
cs
dec
hlt
lahf
xor
mov
and
sarl
cmp
lods
mov
sbb
dec
inc
pop
mov
dec
jecxz
andl
xor
imul
movsb
jb
and
dec
aaa
shr
jmp
xchg
orl
jo
jne
js
fisttps
or
test
rolb
pop
or
xchg
add
push
adc
cmp
add
push
arpl
or
and
leave
xchg
mov
xor
jne
arpl
not
rorl
jle
push
or
ret
adc
orl
push
les
sbb
js
push
mov
inc
push
mov
adc
or
imul
jno
pop
push
jno
inc
data16
push
mov
cmc
adc
cmpb
sbb
adc
pop
cmpb
sarl
xchg
cltd
xchg
push
testb
sbb
adc
aas
push
or
adc
popf
xchg
popa
daa
or
daa
or
lahf
fadds
bound
bound
push
jge
in
dec
adc
xlat
lds
sbb
jnp
and
sub
pop
sub
cmp
sub
adc
packsswb
adc
cmp
andb
add
lea
mov
frstor
add
add
adc
xor
outsb
arpl
push
cmp
xchg
rolb
bound
and
dec
add
xor
cmp
dec
adc
popa
lcall
push
xlat
scas
pop
lret
add
test
pop
repnz
inc
add
ret
shlb
jnp
push
cmp
cmovge
and
sahf
sbb
fld1
loop
mov
sbb
or
push
sub
outsl
clc
fs
xchg
or
xchg
cmpsl
das
mov
adc
pop
arpl
nop
push
loopne
sbb
ret
orl
mov
adc
add
lcall
cmc
out
or
mov
push
and
add
adc
cmp
flds
ret
sub
cmp
lret
cmc
fisubs
fstl
lea
dec
inc
add
stos
push
sub
mov
push
push
cmp
push
mov
cwtl
push
push
ret
aam
outsl
cmp
movsb
movsb
movsb
mov
test
xchg
push
ja
mov
je
mov
pusha
dec
jne
mov
push
fdivrs
pop
inc
add
scas
cli
les
mov
add
insb
push
xor
adc
jecxz
xchg
sbb
push
xlat
sbb
and
mov
pushl
or
sbbb
sub
sbbb
xor
xor
push
punpcklwd
addr16
mov
fiaddl
xchg
dec
mov
and
adc
punpckldq
cmpb
aam
inc
xor
sub
inc
fistpll
inc
sub
movsb
add
xor
jge
fucomi
hlt
add
fidivl
fidivrl
repnz
lret
add
or
push
iret
test
das
mov
into
insl
fmull
insb
fisubs
adcb
shlb
rorb
leave
xor
bound
and
push
fs
insl
or
call
fldl
test
push
push
out
ret
ret
outsl
pop
cmp
insl
lods
arpl
sbbb
lods
je
jbe
push
sti
push
mov
jo
daa
mov
jl
adc
mov
adc
dec
ret
or
adc
aam
cltd
push
or
sbb
or
enter
jmp
enter
sbb
push
jns
adc
mov
inc
add
add
push
lcall
test
inc
lcall
test
jb
pop
dec
js
inc
and
imul
scas
sub
sub
cs
mov
cmp
sarl
and
sub
pop
clc
clc
lock
repnz
or
or
and
mov
iret
repz
rcr
int3
fmuls
shl
enter
enter
jmp
sbb
mov
xorl
scas
xchg
mov
ficoml
inc
lds
xor
mov
adcb
nop
xchg
movb
fadds
dec
cmp
add
push
push
mov
adc
dec
add
jle
loopne
mov
inc
jne
mov
sub
jecxz
shrb
sbb
adc
cs
jmp
pop
add
sti
push
stc
or
rcll
add
mov
iret
dec
mov
inc
movsb
ret
rcrl
mov
mov
or
pop
sbb
addr16
add
sub
lea
push
mov
mov
jmp
rcll
inc
and
mov
xor
jge
adc
or
loopne
sahf
aaa
sarl
jge
outsl
das
das
or
iret
into
mov
mov
negl
or
add
add
int3
dec
sub
dec
dec
add
mov
add
mov
and
into
adc
fisubrs
das
or
lds
ss
adc
into
inc
dec
add
xor
cs
dec
jns
xchg
add
sbb
and
jle
sbb
fsubl
in
ficompl
and
dec
int3
or
popf
in
pop
dec
fadds
sbb
sbb
add
es
les
sbb
movsb
cwtl
cwtl
setne
nop
or
add
add
faddl
mov
cmp
add
out
insl
enter
aam
outsb
js
nop
pushf
sbb
jl
pop
adc
mov
push
mov
jp
hlt
dec
push
int3
mov
dec
fistpll
test
out
mov
cmpsl
dec
mov
enter
ret
add
rcrl
pop
add
dec
ret
mov
jbe
fsubr
cmp
sbb
or
ss
adc
push
inc
mov
xor
push
jns
push
adc
sbb
fwait
js
push
dec
es
and
add
dec
add
popa
sub
push
and
pop
or
icebp
fmul
mov
sub
incb
sbb
dec
sbb
xlat
in
je
outsb
jmp
pop
xlat
jns
inc
push
xchg
loop
icebp
push
sbb
rclb
jp
mov
jle
std
fisubrs
js
dec
or
mov
ja
ret
xstore-rng
cmpsl
add
outsl
xchg
push
test
clc
xchg
sub
gs
fs
in
dec
aam
sub
int3
hlt
add
mov
and
mov
cmp
mov
out
push
xor
sub
dec
xchg
adc
nop
movsb
jne
inc
mov
push
faddl
add
mov
jmp
sbb
mov
addr16
push
fwait
lcall
sbb
push
adc
push
call
adc
push
dec
mov
lahf
push
jp
sbb
inc
sahf
lret
fs
imul
daa
and
sub
add
adc
mov
shlb
pop
jg
rcll
push
data16
or
les
in
adc
insb
mov
ret
mov
sub
das
add
imul
or
pop
imulb
lret
sbb
xchg
fmul
aam
sbb
int
sbb
aam
jne
lea
push
push
inc
pushf
in
mov
insl
pusha
cmp
aam
xor
popa
and
add
xchg
xchg
jno
shrl
xchg
addr16
jp
pop
aam
add
inc
outsl
jge
into
add
test
push
adc
repz
sbb
sti
add
xor
iret
adc
testl
add
dec
and
or
dec
mov
dec
fs
xchg
and
and
jg
mov
fadds
jbe
loope
push
inc
xor
jne
popa
enter
aam
insb
aad
fidivrl
mov
dec
mov
dec
adc
push
aas
sbb
xchg
cvtps2pi
adc
rclb
mov
sarl
or
dec
pusha
jne
push
adc
dec
or
add
adc
cmp
add
out
or
neg
xor
sub
jae
aam
test
add
sbb
xor
cmpl
add
cmp
dec
inc
cmp
xchg
icebp
icebp
fs
out
jmp
cltd
xchg
ss
dec
mov
pop
xlat
lock
or
or
or
mov
adc
imul
xor
out
add
mov
or
nop
dec
adc
inc
adc
cmp
xchg
cmp
push
and
dec
pop
add
sbbb
adc
insb
jns
jae
add
imul
cld
adc
sahf
xor
lahf
mov
adc
push
cmp
push
enter
xchg
mov
dec
mov
addl
sub
dec
pop
add
xor
addb
dec
inc
sarb
jmp
xchg
les
sub
ret
insl
fists
push
push
pop
mov
cmp
dec
and
mov
xchg
gs
imul
and
ja
lret
fld
shrb
push
sbb
inc
movsl
sar
adc
sub
je
inc
cmp
push
and
ljmp
mov
dec
and
sub
popa
cmpsb
fwait
jp
jnp
jmp
lock
xor
fbstp
hlt
add
fs
cltd
or
or
mov
shrb
inc
imul
inc
lret
pusha
sbb
enter
out
lock
testb
pop
add
imul
push
and
push
out
cmp
xor
sub
push
dec
and
ss
mov
out
add
jbe
or
push
and
test
insl
movsb
mov
pop
mov
pop
in
add
dec
xchg
dec
and
cmpsb
arpl
mov
xorb
or
insb
push
hlt
add
add
add
data16
mov
scas
repnz
add
lods
adc
dec
jle
inc
out
pop
addb
sbb
imul
cmp
popa
adc
insl
movsl
xchg
sub
inc
enter
loopne
call
lret
dec
call
or
pop
xchg
sub
cs
adc
cmp
inc
cwtl
pop
stos
add
sbb
cli
movb
adc
xchg
fs
push
cltd
pop
jl
dec
jno
jp
call
jle
inc
cmpsb
sbb
sbb
mov
push
ret
inc
loopne
cmp
dec
adc
loope
fcomps
in
and
push
push
pop
stos
dec
cmp
sub
mov
and
mov
inc
push
addl
aam
jmp
mov
sbb
loopne
lock
fistps
test
adc
lods
xor
call
mov
sbb
or
lds
xchg
mov
push
pop
or
push
inc
lods
inc
daa
xchg
pop
or
inc
push
dec
dec
mov
subps
jne
push
mov
inc
sub
fnstsw
add
xor
aas
inc
arpl
sub
adc
out
hlt
nop
xchg
push
aam
add
or
xor
bnd
mov
shlb
jb,pn
push
or
inc
dec
paddsb
pop
hlt
stos
push
add
inc
mov
out
or
sbb
lret
push
jl
mov
fsub
ss
xor
push
jp
xorb
cmpb
nop
cmp
add
arpl
sub
inc
adc
addb
sub
ret
adc
mov
pusha
pop
inc
je
xchg
cmp
pusha
test
push
mov
xchg
mov
clc
out
push
icebp
xor
ret
scas
imull
cmp
mov
loope
popf
xor
into
icebp
aad
js
loopne
or
adc
js
jmp
loope
pop
and
inc
and
insl
stos
pop
cmc
pop
ret
lods
ffreep
punpckhwd
cmp
ja
rol
lahf
mov
mov
mov
pop
test
arpl
fs
mov
shll
dec
les
push
xor
adc
popa
gs
xlat
popa
jo
mov
inc
jg
and
ss
push
push
fnstenv
push
outsl
xchg
das
jb
mov
cmp
mov
inc
aad
dec
mov
add
lahf
das
je
out
leave
rorl
inc
das
mov
mov
lcall
shrb
push
call
cmp
sbb
nop
xchg
lret
lahf
push
push
add
xor
dec
call
pop
mov
andb
dec
fdivl
cmp
xchg
and
popf
fldenv
add
call
and
dec
popf
leave
dec
or
sub
mov
int
or
inc
seta
nop
mov
lret
hlt
cmpb
push
sbb
inc
fs
js
lret
sub
sbb
push
cltd
inc
bound
inc
shl
push
mov
ljmp
xor
in
mov
repz
repz
mov
jmp
mov
push
sbb
push
xlat
daa
in
add
inc
out
sahf
push
or
dec
cmp
or
stc
pop
pop
jle
xor
fs
ret
pop
add
fnstsw
xlat
sarb
mov
jmp
inc
xchg
test
xchg
xchg
and
cmp
shr
sbb
and
mov
add
or
ds
dec
lock
xor
xor
sbb
pop
push
imul
addb
inc
cmp
roll
mov
jo,pn
mov
adc
fs
push
mov
dec
js
dec
popf
jne
and
aaa
cmp
inc
outsl
dec
dec
jne
into
inc
pop
mov
jb
cld
jbe
out
push
dec
jmp
ja
loop
xorb
fcoml
jl
adc
mov
stos
cwtl
pop
xchg
sub
jmp
aam
jmp
push
in
rcll
jecxz
add
push
add
imul
lds
and
dec
clc
fmuls
mov
enter
in
push
filds
push
adc
pop
and
mov
lock
mov
loop
aaa
push
xchg
test
add
mov
addr16
daa
or
dec
test
sbb
pop
das
sbb
mov
mov
push
int
aad
push
imul
or
aaa
inc
subl
mov
push
sbb
sbb
sub
hlt
out
mov
cs
mov
iret
inc
cmp
xchg
sub
movsl
mull
stos
mov
sub
lods
dec
and
daa
add
push
cmp
and
xchg
int
inc
adc
adc
push
sbb
outsb
adc
inc
jbe
mov
inc
jno
inc
xor
jg
jns
hlt
adc
sbb
jp
call
test
in
push
adc
cwtl
add
fdiv
sarl
jp
lock
cmp
scas
pop
and
sbb
pop
insb
outsl
sub
adc
imul
push
repz
fcmovne
and
fdiv
jno
in
adc
push
dec
dec
and
push
and
mov
loope
fs
cmp
jge
add
sub
jo
push
nop
ja
mov
mov
sbb
test
push
mov
pop
push
mov
jo
push
mov
push
insb
push
scas
and
push
addl
arpl
mov
mov
jo
xchg
inc
and
mov
jp
jno
mov
insl
ret
push
mov
pop
or
and
jle
xor
pop
loopne
mov
cwtl
loop
loopne
push
fstpt
dec
dec
and
jge
out
jl
daa
loopne
es
jle
adc
leave
pop
push
call
in
push
mov
shlb
loopne
rcr
pop
sbb
sbb
repnz
dec
or
inc
or
jmp
or
or
cltd
jno
shrb
or
cmc
xchg
test
xor
push
sub
dec
mov
mov
mov
lcall
add
enter
fldlg2
cmp
js
sbb
dec
dec
shlb
xchg
inc
mov
push
shl
push
sbb
adc
xchg
mov
mov
pop
push
sub
fisttpll
and
bound
xor
loop
and
sbb
xor
daa
mov
cmp
inc
mov
mov
add
mov
or
cmp
mov
mov
notl
or
inc
insb
pop
dec
add
insb
sahf
jg
push
cs
cli
adc
push
add
pop
lods
and
and
inc
fprem
dec
inc
andl
mov
es
or
jmp
aaa
or
sbb
cmp
fadds
lock
fs
fnstenv
clc
xlat
cmp
lea
js
push
movsl
and
pop
xor
cmpsl
insb
out
or
ret
adc
dec
cmpsl
scas
loope
cmp
and
cmpsb
mov
aad
inc
ja
in
cmc
rolb
es
jle
mov
or
sbb
xor
hlt
add
or
hlt
pushf
das
add
add
pusha
sub
cmp
mov
or
add
stos
daa
testl
nop
xchg
or
inc
mov
mov
jge
sub
sti
xor
push
lock
inc
pop
jnp
cmp
mov
and
jl
mov
ss
add
inc
popa
sub
shlb
xor
ljmp
mov
xchg
mov
inc
call
push
pop
dec
pop
sub
jne
mov
fadds
fdivr
pop
popa
mov
cld
aam
sub
xchg
data16
aam
add
cmp
and
jle
jnp
xor
mov
or
sub
inc
dec
and
insb
rcrb
repnz
mov
fisubrs
mov
add
xchg
test
and
jmp
into
push
and
std
ret
mov
cmp
jns
mov
cmp
xchg
xor
icebp
lods
aam
add
cmp
mov
movsb
cs
xchg
into
mov
fcoms
xchg
cmp
push
xchg
inc
daa
or
inc
inc
dec
and
movl
out
rcrb
xor
or
add
mov
and
inc
sub
pop
fs
xor
push
icebp
enter
in
int
xor
sbb
or
or
cmpb
inc
dec
inc
mov
or
movsb
jne
outsl
push
and
stc
ja
and
inc
jecxz
xor
sbb
pop
shlb
or
or
sbb
cwtl
adc
aas
pop
adc
adc
add
push
mov
inc
lock
shll
js
jmp
mov
sbb
pop
test
sub
and
scas
push
pop
dec
dec
ljmp
xor
imul
ret
in
lock
mov
ja
mov
jmp
sub
xchg
adc
mov
add
cmp
push
pop
adc
and
sbb
mov
or
inc
in
push
pop
pusha
mov
xor
add
idiv
sub
xor
popa
popf
pop
movl
jbe
stos
repz
das
lea
dec
or
xor
or
shlb
xchg
fsubrp
adc
clc
out
roll
mov
mov
clc
sbb
sbb
jo
scas
mov
cmp
testb
clc
aaa
mov
mov
sub
aas
bound
movups
ja
push
mov
lods
jns
add
fistpl
jg
pop
jg
fldt
push
cmp
ss
xorb
loop
add
sbb
rorl
cmc
xor
jne
movsl
repnz
sbb
pop
xchg
or
pop
pop
xor
rolb
lahf
xor
fisubrl
xor
adc
sbb
sbb
push
movsl
adc
pop
pop
or
loope
fiadds
xor
fistps
cwtl
orl
add
lock
xchg
ret
cmp
or
jl
or
cmc
ss
sbb
fsubs
sbb
push
dec
ret
mov
pushf
pushf
nop
jo
or
dec
js
push
and
loopne
add
adc
jne
ds
mov
ret
dec
adc
je
inc
pop
dec
inc
and
inc
dec
divl
aas
jge
sub
insl
inc
mov
mov
and
push
pop
inc
push
dec
xor
rolb
mov
outsb
ss
icebp
inc
mov
loop
popf
rcrl
jge
sub
mov
xchg
ret
cmc
and
xor
pop
sbb
sbb
pop
inc
rorb
ret
lock
sbb
clc
lock
jne
inc
bound
push
push
insl
testb
cmp
jecxz
or
adc
sbb
jae
push
and
shll
cmp
xchg
mov
pop
jo
jo
pop
mov
pmaxsw
es
call
inc
daa
adc
sbb
or
or
cmp
add
mov
xor
cli
in
imul
mov
sub
negl
test
shlb
sbb
fisubl
movsl
cmp
and
outsw
repz
bound
mov
add
push
adcb
add
sub
add
pop
jo
dec
jmp
adc
adc
pop
pushl
mov
or
mov
icebp
mov
cwtl
cmp
sbb
nop
mov
pop
adcb
or
ret
dec
and
mov
jg
pop
loopne
cmp
add
jo
je
sbb
add
lahf
and
out
inc
add
xor
roll
inc
int3
and
push
jmp
push
mov
addl
mov
andl
cmp
cwtl
and
mov
ss
or
inc
mov
inc
add
inc
shlb
repz
dec
repnz
or
adc
sbb
fidivs
insl
inc
and
cs
xchg
or
mov
add
fsubl
ss
add
clc
es
cmp
jne
or
test
ljmp
in
pop
fidivrs
add
sub
adc
and
arpl
mov
add
add
push
in
push
inc
fcoml
jge
lock
stos
and
dec
add
ss
psrld
mov
test
mov
xorl
cmp
rcll
outsl
sub
fstps
mov
icebp
movsb
lock
mov
mov
xor
mov
mov
adc
loope
push
les
xchg
iret
dec
and
xchg
arpl
mull
stos
dec
sbb
and
or
jb
xlat
fmuls
das
add
add
and
das
mov
pop
mov
inc
cmc
jb
dec
push
adc
flds
clc
sar
jns
adc
or
or
or
jo
or
daa
pop
pop
jne
add
addr16
insb
stos
hlt
add
mov
iret
popf
lock
mov
adc
pop
push
out
gs
out
mov
imul
cmp
or
icebp
int3
add
movsb
push
cmp
dec
push
pop
push
outsl
lcall
or
sbb
sbb
fmuls
mov
fs
stos
sub
xchg
mov
cmp
inc
imul
aaa
dec
adc
adc
paddusw
loop
mov
or
xchg
lock
pop
xchg
adc
push
aaa
push
lock
and
test
xor
sbb
nop
push
mov
add
lcall
sub
add
hlt
sbb
or
inc
ljmp
mov
fldt
sarb
or
push
jle
mov
push
pop
jbe
jecxz
push
add
cs
addl
lret
adc
or
mov
mov
sub
testl
add
jl
xchg
enter
inc
cmpsb
adc
pop
cs
in
push
pop
or
out
inc
jbe
out
sbb
mov
inc
pusha
xchg
pop
push
int3
mov
adc
fwait
jmp
pop
xchg
fcompl
or
mov
sub
or
sahf
pop
pusha
inc
and
outsb
roll
mov
mov
das
or
test
fcomps
xchg
js
ja
xchg
jg
adc
push
mov
mov
sbb
mov
pop
and
pop
imul
lea
mov
jg
cmp
sbb
xchg
pop
mov
dec
dec
push
movsb
xchg
xor
ret
and
inc
insb
mov
cmpl
xor
jbe
push
xchg
push
jle
pop
push
add
push
insb
xchg
push
xchg
cmp
or
iret
push
or
mov
inc
dec
sbb
mov
fistps
add
lcall
xor
pop
xlat
adc
sbb
pop
xor
cli
ret
mov
mov
call
mov
fimuls
lcall
out
xchg
adc
sbb
and
ror
inc
push
push
in
cwtl
sbb
daa
adc
add
push
inc
lcall
or
inc
stos
insb
insl
daa
out
push
xchg
pusha
xor
lret
leave
dec
dec
mov
adc
sbbb
adc
lock
mov
mov
xor
push
inc
sbb
xor
push
adc
inc
adc
and
test
and
nop
dec
sub
mov
inc
adc
cmp
jno
mov
in
andb
mov
adc
sub
int3
lea
inc
adc
sahf
inc
add
dec
dec
mov
sub
lods
js
cli
dec
jbe
jne
mov
mov
imulb
mov
dec
jae
cmp
jne
pop
adc
das
loope
adc
xchg
push
cmpsl
in
add
pop
and
pusha
orb
fs
push
sub
insb
jnp
imul
ret
dec
cmp
mov
and
cmp
mov
cmpsl
add
dec
daa
mov
xor
icebp
add
fwait
dec
aas
mov
fs
movl
jmp
push
xor
push
and
pop
lahf
ret
cli
push
push
xor
pop
daa
add
dec
out
cmp
dec
pop
sbbl
mov
cmp
test
andl
jo
in
arpl
sub
adc
test
and
xchg
and
push
pusha
and
cmpl
jno
pop
ret
pop
adc
shrl
adc
or
sub
addb
xchg
mov
pop
ret
mov
sbb
les
push
adc
repnz
mov
jnp
cltd
xor
pop
adc
xchg
and
and
add
xor
enter
xchg
enter
divb
push
arpl
dec
mov
in
clc
pop
cld
je
popa
xor
in
mov
test
int3
dec
or
or
icebp
popa
mov
leave
jno
xchg
add
test
clc
in
sub
cmp
add
popf
pop
iret
clc
push
test
pop
push
or
addb
add
fisubrl
rcr
leave
js
add
push
fld
clc
push
std
dec
adc
mov
xchg
jno
nop
xchg
scas
jg
push
pusha
add
pop
add
not
and
jg
pop
or
jle
imul
add
lock
mov
cmp
ss
ss
es
pop
ret
mov
rorb
xchg
test
and
jp
and
in
jo
xlat
sbb
push
pop
cmp
push
popa
popa
lds
jl
adc
or
pop
and
xor
aas
aam
and
jo
aas
cmp
aad
mov
dec
frstor
hlt
and
jmp
xor
enter
xor
sbb
add
shlb
in
or
ds
cmp
aas
pop
pushf
subb
mov
jge
jbe
mov
pop
sub
add
sub
jo
pop
jmp
sbb
into
ret
aaa
adc
inc
lcall
xchg
fwait
subb
inc
or
cwtl
pop
or
test
out
xor
inc
or
lret
fcom
add
pop
add
inc
aaa
shrb
xchg
addl
sbb
mov
es
inc
or
loopne
or
push
dec
or
shlb
jle
pop
xchg
or
movsl
cmpb
xchg
negl
inc
add
jl
or
movsl
dec
push
pop
mov
sub
jg
jmp
xchg
xchg
or
add
push
jg
enter
xlat
es
cwtl
add
call
inc
rcrb
fstps
ret
add
sub
jo
dec
rcr
addr16
mov
sub
mov
repz
test
adc
test
cmp
add
sbb
popa
add
jp
hlt
jns
mov
or
xor
mov
test
mov
jo
bound
shrb
bound
jl
push
test
adc
cmp
ljmp
jns
mov
lock
orb
inc
inc
xchg
push
fadds
ja
xchg
sbb
outsl
mov
jne
mov
sbbl
dec
mov
ret
sub
mov
dec
cmp
in
mov
ffree
add
sbb
test
mov
lods
cld
push
sub
ficompl
push
cli
inc
cmpb
add
into
mov
mov
push
push
sub
out
inc
or
fimuls
les
push
test
and
dec
xchg
popa
enter
pusha
xacquire
adc
mov
aaa
and
pop
enter
or
or
enter
sub
cwtl
sbb
fcomps
and
add
ja
lock
adc
mov
nop
rol
stos
in
mov
das
and
add
test
add
jecxz
adc
stos
cld
cvtps2pi
popa
iret
cwtl
int
jnp
pop
leave
cmp
push
dec
add
add
sub
scas
movsl
bound
repnz
sahf
push
fdivp
loopne
inc
loopne
in
in
std
xchg
movsb
call
outsl
and
mov
jmp
add
xchg
data16
cmpsb
pop
cld
movl
out
es
inc
lcall
cmpsl
add
das
or
push
pop
push
jge
push
cmp
push
daa
jg
adc
aaa
cmc
fmuls
jge
inc
or
mov
andl
add
sub
aaa
pop
and
pop
mov
sbb
xor
movsl
xor
push
or
inc
sbb
dec
adc
clc
mov
fildl
pop
and
dec
call
push
cmpsl
inc
cmpsb
mov
mov
inc
cmpsb
hlt
push
cmp
lea
cmc
push
add
push
dec
push
add
movsb
out
push
push
mov
enter
adc
jecxz
jp
jmp
js
dec
outsl
mov
addr16
jmp
popa
int3
cmpb
rcl
or
cmp
call
adcb
mov
shrb
sub
sbb
pop
sub
add
pop
imul
mov
and
std
add
pushf
sbb
inc
adc
dec
push
lahf
jmp
dec
dec
test
test
mov
pop
push
mov
mov
fwait
ss
sub
js
nop
cmp
repnz
iret
lods
mov
repnz
call
xchg
out
mov
xchg
sub
iret
cmp
or
lods
mov
test
and
mov
xchg
lret
xchg
push
dec
dec
push
xlat
or
sbb
insl
dec
push
fbstp
dec
pop
inc
gs
pop
fadds
pop
cltd
or
xchg
fsubs
inc
xchg
xchg
es
sub
pop
shrb
push
insl
jo
pop
test
popa
adc
je
mov
inc
in
inc
out
loopne
xchg
xor
xchg
dec
jae
inc
inc
fistl
dec
loope
jno
mov
aas
movsl
cmc
sbb
push
mov
in
mov
sbb
mov
adc
adc
xor
and
shrd
and
cmp
stos
test
jl
outsb
mov
push
sub
cmp
sti
xchg
xor
cmp
adc
xor
or
hlt
sub
dec
mov
inc
or
or
cli
push
add
and
or
rcr
sbb
inc
adc
cmp
sub
sub
inc
add
notb
mov
push
out
xchg
sub
inc
jmp
sub
mov
andb
or
imul
roll
test
jmp
jns
insb
in
or
inc
lcall
iret
mov
inc
mov
add
push
or
dec
push
ficomps
and
lock
and
add
adc
fcomp
sub
sub
fs
int3
sub
jnp
fs
push
or
rcr
inc
into
ds
pop
test
sub
sarl
push
inc
sub
mov
push
aaa
sub
mov
dec
or
mov
mov
xchg
lods
xchg
mov
push
or
nop
ja
sbb
dec
cs
adc
sbb
inc
push
popa
mov
mov
jae
push
ja
outsb
pop
cmpsl
or
add
rol
fwait
popa
out
cmp
cmpsl
adc
outsl
inc
mov
and
cltd
xorb
push
jnp
xchg
push
xchg
iret
subl
jae
dec
pop
and
push
inc
setae
sub
lahf
mov
in
rcrb
es
in
sbbl
insl
movl
pop
ss
and
and
aam
and
sub
das
mov
mov
pushf
ds
daa
movsb
movsb
pop
idiv
out
cli
nop
pop
imul
sub
lock
aam
in
adc
call
lahf
xchg
xor
scas
sub
aam
scas
and
add
add
rcrl
pushl
rcr
les
outsl
mov
divl
mov
xor
push
cmp
push
push
push
push
or
inc
addr16
das
inc
mov
mov
cmp
mov
and
lock
push
test
shrl
int
adc
lret
mov
shll
pop
sub
mov
add
mov
sub
in
pop
je
enter
pop
cmp
test
jne
or
lahf
movb
popa
mov
negb
pop
dec
sub
nop
sub
jb
cmpsb
mov
pusha
adc
ja
push
push
dec
mov
push
aaa
and
xchg
pop
jl
jnp
sahf
data16
outsb
pushf
aaa
lahf
les
or
adc
sahf
pop
sub
cwtl
dec
pop
in
jl
mov
add
sbb
test
mov
dec
inc
leave
call
push
inc
dec
leave
mov
push
pusha
dec
pushf
imul
xchg
imul
cwtl
dec
faddl
or
mov
and
or
jge
pop
xchg
inc
dec
cmpsb
sbb
adc
aam
loope
xor
sbb
and
outsb
push
call
lcall
sbb
pop
pop
dec
and
adc
pop
xchg
sbb
push
sbb
scas
sub
add
je
mov
pop
mov
add
and
xor
nop
mov
mov
jno
lea
push
mov
xor
sub
dec
orl
sub
movsl
fcoms
add
sbb
or
movsl
jnp
loop
jecxz
jnp
cwtl
add
xchg
repz
mov
pop
push
and
enter
dec
shlb
mov
insb
sbb
xchg
xchg
or
sub
or
xchg
leave
fs
inc
push
add
iret
insb
test
xor
sbb
add
add
sbb
inc
call
add
and
mov
inc
mov
sub
pop
sbb
dec
ja
sbb
test
xor
aas
push
ret
inc
sbb
fstps
add
gs
dec
loopne
xor
or
mov
out
aam
fbld
pop
mov
data16
sbb
rorl
inc
cmp
add
cmp
cltd
mov
adc
push
and
and
jne
jle
add
lea
cmp
rcll
mov
cmpl
pop
jl
and
adc
insl
xchg
xor
aas
mov
sbb
sub
loopne
pop
cmp
pop
push
add
mov
nop
loopne
inc
scas
mov
and
sub
push
ret
cmpl
xchg
sub
inc
outsl
sub
inc
in
xor
or
sbbw
les
stc
push
xchg
mov
in
and
sbb
inc
xor
cmp
push
flds
adc
addb
add
cmp
sbb
fiaddl
fs
cmpsl
and
cmpsl
mov
sbb
int3
xchg
gs
imul
mov
jecxz
movb
andb
pusha
adc
pop
pop
dec
and
push
and
and
cmpsb
xor
cmp
loopne
test
scas
adc
icebp
sbb
and
sub
push
sbb
daa
push
adc
push
push
outsb
sub
fs
pop
imul
pop
push
push
je
fisttpl
paddsb
addr16
and
and
loope
test
in
sub
xchg
push
fcomp
push
inc
dec
or
sub
dec
cmp
cmp
fwait
jp
push
push
adc
add
xchg
push
sti
daa
or
add
or
in
outsb
push
dec
scas
push
fs
adc
pop
stos
rcrl
pushf
pop
xor
sbb
out
out
push
xchg
mov
cmp
cmp
mov
insb
shrb
mov
popa
and
adc
xor
fiaddl
xchg
inc
jle
out
inc
adc
fldenv
cwtl
push
pop
andl
pop
jne
sub
and
lds
dec
insb
fwait
or
ret
js
dec
adc
push
inc
loop
push
int
sbb
pop
cmp
pusha
jge
mov
sbb
sub
movsl
aad
sbb
jbe
jb
test
add
jae
test
mov
ljmp
cmp
xor
xchg
scas
push
test
push
lock
aad
pusha
call
adc
sbb
mov
aas
test
es
add
adc
xchg
push
clc
xor
into
je
jne
mov
gs
jns
mov
lret
adc
scas
nop
imul
data16
lcall
cmc
rcl
aas
into
cmp
adc
xor
adc
pop
mov
out
ss
dec
jae
rorl
sbb
and
sub
push
cmp
or
mov
stos
or
arpl
push
aas
jnp
xchg
mov
push
push
sbb
add
dec
out
push
bound
mov
pop
imul
mov
lea
cmpb
sti
add
xchg
jg
sbb
lock
adc
mov
pop
inc
pop
or
cwtl
sbb
ret
ret
andl
filds
push
or
outsb
lods
dec
add
loopne
movsb
enclu
mov
push
push
js
push
daa
add
xlat
adc
mov
or
popa
push
mov
cmp
adc
dec
shlb
cmpsb
icebp
add
xlat
sbb
inc
push
xchg
orb
pop
in
cmp
xchg
sbb
cmp
bound
int3
and
push
push
jo
pusha
fmull
fbstp
js
xchg
jp
mov
or
dec
pop
stos
push
push
decb
mov
sub
xor
test
cmp
xor
cmp
pop
cli
dec
inc
xlat
add
dec
push
inc
testl
inc
inc
das
xchg
in
insl
inc
mov
jo
nop
dec
sbb
push
mov
lds
lods
dec
imul
ss
xor
ja
adcl
shlb
jne
and
enter
ja
push
xchg
test
fstps
fnstenv
fistpll
or
lods
sub
inc
out
mov
xor
adc
or
add
xorl
out
test
dec
mov
cs
hlt
sbb
push
xor
sbb
and
or
adc
pushl
stos
add
pop
cmp
dec
push
push
sbb
sub
xor
jge
js
add
dec
js
insl
inc
cmp
inc
inc
add
js
inc
add
inc
rolb
into
cmp
xchg
aam
subl
inc
xor
imul
jne
lret
xor
add
add
lahf
call
dec
scas
sbb
adc
xor
fisttpl
mov
xor
push
fs
fcmovb
popf
pop
hlt
insb
and
outsb
je
rol
sub
frstor
inc
jns
adcl
popf
movsl
sub
icebp
ds
add
sub
or
sub
fsts
push
lcall
xor
xor
and
push
test
adc
lret
mov
les
les
xchg
sub
mov
dec
add
adc
and
push
test
add
icebp
insl
add
xor
or
out
push
cmp
popa
adc
pop
icebp
jg
sub
into
xor
mov
jno
cmp
push
xor
xchg
jo
data16
clc
inc
push
xor
sbb
mov
jecxz
cmp
or
cmp
xchg
xchg
outsb
xor
mov
and
lock
add
dec
ds
inc
hlt
mov
cmp
add
call
add
sub
jo
mov
dec
movsb
sbb
arpl
cmp
xchg
push
cmp
push
repnz
cmp
and
pop
mov
mov
dec
lock
mov
pop
call
pop
das
push
cwtl
xor
push
lret
push
xchg
notl
inc
js
imul
ficoml
ret
jae
mov
jno
je
popa
adc
mov
xor
jle
dec
movsl
rolb
adc
lods
or
rorb
xor
out
fcomps
xchg
adc
popa
xor
loope
loope
shll
dec
cmpl
loopne
xor
push
dec
push
mov
add
test
inc
adc
fwait
mov
inc
add
bound
fisttpll
lock
imul
sbb
ret
aaa
inc
inc
adc
addb
push
adc
mov
mov
mov
cmp
pusha
and
in
push
outsl
bound
dec
pop
sbb
adc
jp
pop
in
push
inc
pop
loop
and
inc
or
pusha
insb
lcall
xchg
ret
xor
aaa
subl
mov
push
cmpsl
mov
aaa
pop
cs
adc
dec
push
adc
pop
and
push
sbb
sbb
adc
xor
xchg
dec
adc
pop
mov
dec
push
in
pop
andb
in
and
cmp
cmp
jo
repnz
repz
jbe
test
pop
mov
sbb
adc
in
jl
jge
loop
dec
fbstp
int3
mull
inc
and
scas
mov
sbb
xchg
xchg
mov
pop
call
xchg
xchg
call
and
pushf
mov
icebp
inc
add
xor
hlt
movsl
jno
mov
rolb
jp
cli
ror
call
push
jae
sti
xor
insb
aas
jne
mov
cmp
sbb
add
mov
or
jns
icebp
inc
mov
cmc
pop
inc
inc
ret
dec
adc
cmp
test
hlt
sub
jmp
sub
test
sbb
and
or
adc
mov
push
jo
rorl
arpl
mov
inc
mov
cmpsl
outsl
mov
and
mov
out
inc
sti
jo
add
jl
pop
mov
jb
xor
lods
add
inc
test
pop
xor
pop
je
mov
insl
mov
lret
mov
xchg
fcoms
xchg
jg
dec
dec
imul
and
pop
push
pop
outsl
sbb
daa
and
leave
pop
ds
call
in
cmp
dec
xor
ror
xchg
lcall
jbe
push
lahf
add
movsb
xchg
int3
xchg
sahf
jmp
in
cmpsb
lahf
xor
jge
or
sbb
nop
mov
pop
adc
pop
xor
iret
push
or
leave
dec
jb
aam
lahf
mov
or
sahf
or
scas
movl
in
adc
cltd
cmp
test
xchg
push
add
lea
nop
ret
cmp
push
jbe
dec
dec
hlt
mov
movsb
lock
push
mov
dec
or
loope
and
dec
popa
rorl
nop
mov
push
mov
adc
adc
popa
and
sbb
cmp
jl
test
sub
inc
and
and
dec
pop
cmova
cmc
jnp
or
cmp
lods
and
xor
xchg
dec
mov
dec
add
int
push
sbb
mov
movsb
lods
pop
fwait
jge
lock
and
and
inc
mov
in
cmp
mov
mov
push
dec
mov
xchg
sarb
and
push
or
add
in
es
jmp
dec
or
jb
push
push
sub
mov
mov
cmp
shl
rclb
inc
imul
scas
adc
adc
ds
clc
add
or
popa
jno
rcrb
adc
neg
mov
in
mov
arpl
mov
mov
push
shlb
dec
sub
mov
mov
test
nop
xor
fists
sub
mov
adc
mov
mov
add
sub
lea
out
movsb
nop
sub
ret
push
popf
cmpsl
or
xchg
add
das
dec
das
test
pop
daa
add
jns
mov
dec
xchg
jge
lock
pop
cmc
jo
sub
push
sub
out
pop
xchg
lock
mov
dec
xchg
dec
fiaddl
push
add
dec
cmp
xor
lcall
es
or
xchg
adc
inc
daa
cs
repz
inc
add
lock
cmp
dec
dec
jecxz
or
andl
mov
stos
mov
xchg
imul
int
inc
loope
test
sub
rorl
mov
add
mov
and
repnz
adc
pop
mov
xchg
andl
jne
push
xor
mov
push
cmp
adc
sbb
pop
aas
inc
add
rol
cmp
mov
and
imul
and
xor
leave
inc
cmp
push
pop
mov
add
dec
insb
cmc
je
push
sbb
push
dec
dec
push
jb
push
mov
inc
in
push
and
cs
sub
test
jae
pop
cmp
mov
jmp
outsl
xchg
mov
mov
push
repnz
sbb
mov
jg
push
inc
add
insl
ja
incl
ret
push
and
scas
push
add
decl
cmpb
mov
push
out
movb
lods
leave
push
or
add
cmp
hlt
pop
in
rclb
leave
add
pop
mov
push
push
cmpsl
js,pt
pop
and
inc
imul
dec
xchg
int
outsb
cmpsl
and
ljmp
gs
mull
jmp
mov
adc
push
popa
jb
test
inc
movsb
jle
adc
add
popa
enter
sti
add
push
adc
les
movsb
pop
bound
insb
sub
or
scas
cld
adc
out
adc
mov
pop
inc
insl
and
test
inc
sub
imul
into
push
nop
push
mov
fs
arpl
or
cmp
addr16
push
or
icebp
and
push
out
js
pop
adcb
cs
mov
add
es
xlat
fisubrl
dec
pop
test
adc
aam
loop
cmp
dec
ds
shrb
inc
inc
or
add
push
push
and
in
cwtl
mov
and
cmc
insb
ljmp
add
inc
pop
cld
fs
loopne
cld
cld
adc
inc
pop
push
mov
dec
iret
push
test
data16
rcr
pop
les
or
js
lods
mov
dec
loopne
jle
push
jl
addr16
leave
mov
push
cld
push
sbb
sub
lods
mov
pmullw
push
add
pop
loopne
sub
pop
stos
mov
mov
add
ja
pop
adc
adc
test
jl
cmpsb
test
mov
fadds
in
mov
mov
jno
rcrb
cmp
pop
adcl
cmpsb
out
adc
sbb
and
pop
sub
mov
jp
mov
pusha
push
cmp
popf
shl
sbb
xorl
in
test
mov
je
in
lock
and
or
fcmovnb
mov
cmp
mov
and
add
inc
inc
lret
or
mov
fwait
dec
sub
sub
dec
and
rcrl
shlb
mov
inc
movsb
push
repnz
sbb
dec
cwtl
mov
and
add
aaa
outsl
aas
pushf
jo
inc
insb
fisubl
inc
xchg
add
or
push
ss
mov
lods
inc
test
rcll
adc
pop
cwtl
push
lahf
sub
or
mov
jae
cmp
or
add
or
es
repz
cmp
dec
cmp
mov
or
xchg
fmuls
adc
ret
adc
xor
movsb
ds
fiaddl
push
and
test
movzbl
jae
ljmp
adc
movsb
xor
sbb
sbb
jg
popa
fs
cmpsb
adc
pusha
nop
push
add
test
mov
inc
jl
xor
shlb
xchg
fnstenv
adc
adc
rclb
xor
es
pop
mov
test
mov
loopne
and
add
add
sub
pop
test
scas
jmp
das
add
daa
inc
push
jo
mov
pop
pop
rorl
stos
cmp
movsb
mov
pop
inc
dec
inc
nop
dec
inc
mov
aaa
cmp
pusha
imul
daa
je
pushf
push
test
arpl
inc
pop
adc
jl
add
xor
inc
dec
sbb
jo
jae
clc
add
and
xor
xor
out
push
inc
add
dec
cmp
mov
sub
enter
outsb
mov
rorb
push
push
pop
and
or
xchg
push
imul
push
add
add
repz
inc
push
add
inc
cmp
pop
push
add
icebp
cmp
xchg
roll
lret
jb
adc
push
sub
lock
mov
mov
mov
repz
jnp
pop
enter
mov
jno
inc
inc
into
mov
stos
or
pop
add
sub
cmpsb
pop
loope
pop
out
andps
test
cmp
jo
and
dec
pop
dec
or
mov
sub
fnop
jle
push
cli
imul
int3
xor
je
insl
mov
or
xchg
sbb
add
push
sbb
xor
or
cmp
sub
cltd
insl
sbb
fstps
es
mov
adc
sub
sbb
int
pop
enter
into
push
push
add
fmull
xor
push
sbb
xchg
mov
gs
enter
fadd
rorl
pop
and
in
adc
adc
inc
pusha
daa
pusha
and
mov
or
adc
cmp
or
cwtl
and
test
mov
mov
nop
and
xor
cltd
divl
imul
lods
cmp
mov
or
dec
or
mov
mov
and
rorb
adc
sub
paddsb
inc
push
xchg
lcall
mov
aas
ret
jg,pn
jmp
stos
out
cwtl
mov
xlat
clc
les
xchg
mov
push
push
or
cmc
cmpsb
repnz
and
cmpsb
lea
xchg
push
xchg
out
cs
and
xor
xlat
sbb
jnp
push
fwait
inc
cmpsl
push
pusha
xchg
mov
pop
js
push
add
or
sub
sarb
mov
test
inc
std
xor
mov
adc
adc
ret
cmpb
cmpb
js
xlat
mov
faddl
data16
loopne
xchg
add
pop
push
pop
inc
mov
decb
test
aaa
mov
test
fisttpl
mov
add
or
jge
add
sbb
jnp
movsl
and
or
in
sub
cmp
cmc
push
adcl
jge
shrl
ja
in
mov
mov
xchg
sbb
cli
push
sbb
xchg
pop
inc
mov
nop
and
lea
cwtl
and
testb
or
fdivs
xor
mov
repnz
inc
dec
rcrb
es
pusha
sub
les
pop
jbe
jmp
xchg
add
les
pop
mov
add
lds
pop
mull
or
leave
sbbb
mov
insb
enter
adc
or
or
les
mov
add
inc
add
mov
mov
xchg
push
jo
or
cwtl
ljmp
arpl
bound
test
push
pop
sub
push
arpl
outsl
loopne
idivb
push
pusha
pop
pop
mov
pop
jnp
mov
repnz
out
mov
jmp
pusha
fs
xchg
mov
pop
orl
pop
movsb
movsl
jo
and
pop
jae
sub
jmp
inc
arpl
push
add
pop
and
imul
add
movsl
int
insb
aas
pop
mov
and
and
aaa
in
shll
xchg
xor
ds
jo
rclb
popa
jns
push
mov
sbbl
pushl
sbb
xor
popa
sti
push
lock
add
pop
incl
fmull
popa
movb
xor
add
in
sub
adc
hlt
mov
loope
push
cmp
xlat
nop
lock
mov
insl
stc
lock
mov
ljmp
adc
adc
inc
push
jle
arpl
es
sub
push
mov
outsb
sub
icebp
cmp
insl
fs
jmp
loopne
push
je
mov
ljmp
in
test
lcall
pop
pop
enter
pushl
ss
adc
mov
or
in
into
jb
xor
sbb
jl
adc
sub
push
jp
xchg
std
jmp
xchg
mov
test
shrb
movsb
je
sub
shlb
movsb
dec
inc
xchg
add
ja
aad
imul
insb
cmpb
push
lea
fwait
cmp
mov
sub
das
int
inc
loop
js
push
fldenv
sbb
jle
and
movzbl
cmp
fildll
gs
inc
inc
pop
dec
ficoms
imul
movsl
inc
xor
movsl
aad
jmp
pop
pop
inc
js
inc
xchg
xchg
jbe
das
push
sbb
sbb
cmpsl
pop
push
push
cli
push
js
outsl
ds
mov
xor
push
sub
fnstsw
or
add
aas
fiaddl
mov
inc
aas
orl
rorl
jns
daa
in
xchg
rcrb
in
daa
xchg
ja
or
sub
add
sbb
add
jo,pt
lds
inc
inc
mov
sbb
or
cwtl
inc
add
popf
pop
sbb
fmul
mov
or
mov
imul
add
int3
push
mov
dec
jg
cmpl
cmp
pop
imul
inc
pop
xchg
mov
ds
out
repz
push
iretw
mov
xor
xlat
or
xchg
add
outsl
rolb
dec
rolb
js
insb
jne
jnp
mov
xor
inc
cmpsb
and
adc
pop
popf
fucomi
dec
fcomps
loopne
pusha
dec
jae
xchg
jne
adcl
push
and
lods
pop
stc
and
or
mov
mov
inc
sub
daa
shlb
leave
mov
loop
dec
or
sub
or
aas
jns
sbb
jno
in
adc
movsb
insb
and
mov
pop
dec
and
mov
adc
mov
mov
inc
movsl
fsubl
mov
cmp
std
mov
and
adc
clc
in
xchg
bound
push
testl
jmp
ret
xorl
pop
cmp
roll
pop
xlat
test
cmp
or
and
jmp
or
sbb
xchg
push
aaa
add
pop
icebp
jge
int
loopne
test
dec
adc
mov
cmp
loopne
ss
sub
xchg
lock
xlat
xchg
push
adc
in
outsl
sbb
in
push
or
push
in
jmp
inc
fcmovb
adc
adcb
adcl
pop
add
inc
xor
clc
nop
stos
test
xor
ss
loope
xchg
js
mov
dec
call
inc
cmpsl
or
aas
push
fildll
pusha
leave
pop
outsl
push
test
add
fisubl
mov
pop
adc
sub
sbb
subb
push
inc
lods
push
lock
push
add
inc
xchg
insl
inc
or
movb
mov
push
mov
repnz
xor
rolb
lods
testb
ficompl
dec
popa
and
add
sub
mov
inc
call
mov
push
adc
mov
out
mov
adc
out
je
fsubrs
mov
xor
in
mov
adc
je
je
imull
pop
jmp
out
pop
cmpsl
or
sahf
jl
jno
sbb
stc
or
push
popa
decb
inc
xchg
test
ds
jbe
xor
adc
adc
cmpl
and
mov
xchg
fsubs
iret
pop
aas
outsl
cmp
add
es
loopne
push
jl
pop
push
mov
pop
inc
aas
flds
inc
add
mov
pop
inc
cmp
push
aad
lock
aas
jae
mov
insb
mov
xor
sbb
pop
sub
dec
clc
cmp
icebp
pop
or
mov
or
cld
adc
sahf
push
or
mov
xchg
sbb
push
pop
jp
add
inc
xchg
int3
dec
push
ljmp
mov
sub
nop
push
mov
inc
push
or
repz
jo
adc
jmp
mov
add
and
adc
cmp
inc
add
and
add
lret
and
das
nop
inc
mov
and
add
fs
lcall
xchg
imul
xor
into
mov
outsl
jmp
ret
cmp
stos
sub
pop
xchg
nop
cs
test
jmp
cmpb
sbb
icebp
fstpt
js
add
rol
cli
outsb
testb
les
mov
inc
add
or
xchg
fimull
fstl
jo
xor
adc
dec
pop
pop
fldl
or
mov
jbe
and
jb
cwtl
out
daa
sub
mov
push
rol
or
dec
mov
sbb
daa
icebp
cmp
cwtl
jns
stos
xor
fcomi
push
mov
push
dec
sbb
scas
outsl
mov
and
jl
jp
push
xor
stos
add
ss
inc
xchg
push
push
sbb
sbb
leave
mov
and
mov
stos
into
mov
inc
loopne
stos
dec
movsb
dec
outsb
inc
cmpl
inc
iret
dec
cmp
xchg
mov
push
pop
adc
scas
test
dec
sub
cwtl
insl
pop
das
loopne
cmp
in
enter
vmwrite
std
and
adc
xor
int3
mov
inc
addr16
popa
lret
add
rolb
inc
fidivs
les
sbb
shl
insb
outsl
mov
cmp
mov
inc
sbb
dec
aaa
push
sbb
sbb
ret
movsl
mov
inc
je
add
or
push
mov
add
add
adc
lds
push
add
sbb
or
hlt
xor
dec
insb
cld
jmp
push
int3
push
jo
xor
cld
jno
ret
imull
sub
decl
xchg
xor
cld
mov
int3
jns
imul
addr16
xor
les
adc
jmp
jns
mov
push
insb
addr16
jge
push
mov
or
push
roll
imul
dec
es
jge
pop
push
flds
jno
inc
adc
cmp
test
mov
dec
icebp
push
fsubrs
pop
sub
adc
xchg
mov
out
push
loope
xchg
jne
mov
jl
clc
out
jo
ss
push
xor
shlb
push
nop
imul
mov
xchg
xor
sub
hlt
sub
sbb
push
add
inc
push
sub
ret
in
test
pop
lock
roll
pop
movsb
add
fs
pop
or
pop
cmp
ja
inc
loope
inc
daa
and
lea
xchg
mov
movsb
push
test
fadd
pop
sub
add
pusha
xchg
or
rorl
mov
sbb
mov
mov
jnp
pop
into
hlt
daa
pop
pop
mov
iret
hlt
hlt
xor
hlt
sub
inc
add
xchg
repz
pop
dec
fldenv
or
pop
jns
stos
sbb
inc
jne
or
inc
in
jmp
cmp
lock
rolb
or
cmp
inc
jp
ds
pop
movb
int
push
push
in
fs
int3
test
fldt
loopne
arpl
pop
push
cwtl
loopne
mov
jb
jne
repz
outsb
ja
outsb
aaa
push
sub
fistps
imul
sub
jmp
push
ret
inc
dec
sbb
add
jne
test
ja
or
shrl
xchg
dec
xchg
out
iret
push
inc
cmp
or
loopne
loope
popl
fwait
ret
mov
or
pushf
xchg
sbb
fldenv
cmpsb
or
je
fisttpl
lods
pusha
mov
addl
and
pushf
lcall
aaa
sub
fisttpl
xor
pop
push
adc
cltd
call
in
and
lock
fnsave
or
add
inc
add
movsb
adc
cmp
enter
adc
sbb
xor
pop
lods
pop
insb
mov
inc
sbb
and
out
test
dec
cld
in
sbb
xchg
pusha
inc
xorb
pop
inc
repnz
mov
push
sbbl
inc
call
xor
rolb
arpl
insl
stos
xchg
rorl
jo
inc
mov
lods
and
sbb
clc
sub
xor
fiadds
xor
nop
ret
mov
nop
cmp
dec
clc
jo
and
nop
or
jle
cltd
sub
adc
xchg
xor
clc
arpl
rclb
stos
mov
pop
pop
repnz
mov
adc
inc
sbb
dec
add
and
test
pop
aam
or
movsb
leave
mov
test
add
subb
mov
orl
ret
push
and
push
call
cmp
dec
loopne
les
orl
jb
andl
cmp
xchg
or
add
xchg
mul
adc
mov
mov
adc
add
mov
ficompl
and
ret
cmp
push
push
push
xchg
push
je
rolb
push
sbb
pop
or
push
pop
pop
aaa
aas
mov
dec
sbb
sub
mov
je
xchg
push
ret
aam
add
jbe
push
enter
fildl
xchg
mov
in
scas
popa
movsb
push
pop
jp
add
ja
push
repnz
xor
pop
shl
pop
jl
or
daa
ror
insl
lods
pop
sbb
push
pop
imul
push
mov
in
push
dec
lea
sub
sub
mov
and
xchg
sbb
mov
daa
mov
inc
movhlps
test
push
les
sbb
xchg
orl
xor
or
shll
cmp
lret
adc
and
hlt
arpl
sbb
push
cmp
ja
adc
incl
xchg
inc
decl
xlat
add
xlat
inc
push
mov
mov
mov
jo
xchg
mov
xchg
jmp
dec
mov
aam
dec
es
push
or
inc
insw
push
xor
push
or
stc
jo
dec
add
inc
mov
xchg
cmp
or
xchg
loop
rorb
pop
inc
dec
or
mov
in
ja
add
sbb
dec
sbb
and
ja
fdivl
scas
or
aaa
cmp
test
inc
push
and
fdivrs
mov
add
xchg
pop
sub
dec
bound
stos
pop
ss
and
incb
add
sub
push
mov
mov
pop
clc
icebp
cmp
movsb
fcoml
push
xchg
jno
add
dec
push
imul
jne
inc
dec
fsubrs
cmc
cmpb
lret
cmpsl
xor
mov
xor
test
out
or
inc
enter
cmp
or
mov
and
mov
add
mov
jp
insb
ljmp
ret
arpl
pop
xchg
out
jmp
mov
mov
test
cmp
in
add
add
lcall
addl
dec
les
jbe
jle
pop
add
ja
cmpsl
cmp
xchg
and
cmp
jne
rcll
fs
sub
add
arpl
addl
arpl
adc
out
aas
je
pop
lcall
or
jne
mov
imul
jne
inc
pusha
add
andl
pop
xor
or
pop
jmp
clc
aam
pop
cmp
pusha
mov
sbb
or
xchg
inc
inc
jo
dec
and
cmp
inc
push
xor
ss
ds
lcall
adc
jnp
outsl
adc
mov
mov
fmull
add
and
push
adc
sub
xchg
outsl
pop
pop
mov
clc
lds
cmp
repnz
out
cmp
fs
sti
add
mov
pusha
das
xchg
push
pop
movb
ds
fcmovnu
mov
fstl
mov
push
bound
fimull
pop
add
out
adc
adc
cs
add
cmpsb
push
inc
xor
aas
jbe
and
popa
fsubs
mov
popa
jl
inc
or
inc
mov
sbb
shrb
loopne
sub
push
lea
rcl
or
mov
xor
push
inc
andb
jg
mov
jmp
pop
mov
fisubl
in
mov
fucom
or
out
jmp
out
mov
cmp
jmp
daa
shl
add
jb
or
insl
or
je
cmp
xchg
pop
imul
and
xor
orb
dec
jmp
addl
dec
inc
popf
push
arpl
and
or
sbb
push
inc
pop
in
pop
rolb
shll
mov
xor
xor
fcmovb
mov
hlt
fdivs
jnp
loopne
sub
lahf
ret
push
movd
aaa
mov
and
push
outsb
xchg
shl
cwtl
mov
mov
or
mov
loop
push
adc
mov
and
jmp
and
jno
push
mov
lcall
fdivs
dec
sub
in
dec
or
aaa
pop
push
movsb
push
jl
pop
inc
jmp
mov
jae
xlat
cli
out
inc
inc
stos
push
repnz
inc
cmpsl
les
inc
dec
inc
orl
ja
push
inc
mov
dec
or
insl
mov
stos
cs
lods
lods
out
scas
add
subb
cmpl
loop
ret
iret
or
or
lret
mov
inc
popa
sbb
or
adc
push
fnstcw
out
jbe
mov
sbb
ret
inc
shr
ret
lret
fidivrs
push
cmp
cmp
adc
lret
xchg
mov
dec
inc
leave
push
fs
jmp
daa
icebp
or
xchg
xchg
imul
pushf
mov
es
scas
dec
adc
or
cmp
cmpsb
sbb
xchg
push
ja
mov
fcompl
dec
cmp
push
pop
pop
ret
imul
fistl
jbe
movsl
aas
insb
jge
popa
hlt
test
inc
inc
xchg
je
add
mov
xchg
xor
sti
push
push
xor
jecxz
lcall
xchg
mov
adc
push
ss
shlb
sbb
sub
push
shrb
fs
aas
and
sub
dec
xchg
xor
inc
inc
add
sbb
pop
les
es
je
or
out
pop
pop
and
and
loope
push
xchg
shrb
dec
out
inc
mov
dec
mov
adc
cltd
cli
test
sub
mov
jmp
push
add
in
xchg
jl
jl
push
cmpsl
cmpl
push
inc
pop
roll
xor
mov
add
mov
andb
mov
inc
dec
mov
inc
aad
cmp
mov
xchg
mov
sub
aam
arpl
xchg
and
out
xorb
repz
push
lods
test
popa
pop
mov
sarl
jns
sbb
xor
sbb
cltd
test
clc
call
cmp
xchg
pop
pop
xchg
xor
and
push
movsl
jge
mov
fwait
push
xor
dec
push
cwtl
xchg
mov
push
sub
dec
popa
cmp
ret
insb
inc
inc
pop
and
movsb
jae
inc
dec
jne
lea
shrb
xchg
mov
outsb
mov
jne
ljmp
sub
leave
sbb
inc
push
lock
ds
or
jno
fcomps
ja
mov
push
push
popa
pop
xlat
push
divl
pushl
test
inc
add
add
fsubrs
dec
and
inc
daa
dec
pop
and
inc
xchg
orb
push
sbb
es
adc
add
adc
rol
xchg
aaa
faddl
int3
add
out
add
mov
and
icebp
mov
shlb
or
ss
jns
sbb
or
loopne
fwait
mov
scas
mov
mov
mov
repz
ficoml
andb
daa
mov
xorl
lods
cltd
aaa
les
ficompl
movsb
mov
sbb
and
nop
fildl
cmp
dec
push
pop
clc
test
js
xor
push
aas
pop
push
je
push
sbb
test
repz
cmp
sti
shlb
out
rol
test
lock
xlat
push
pop
jl
inc
enter
orl
push
movsl
adc
sbb
cmp
cmpb
int3
push
out
fcoml
mov
dec
add
or
aad
cmp
xchg
scas
aaa
dec
test
ret
inc
out
jmp
es
cwtl
xor
push
or
sbb
aaa
test
outsb
ficomps
nop
jmp
push
mov
push
enter
mov
insl
lret
xor
cmp
pusha
cmp
xor
cltd
pop
mov
sub
clc
pop
ja
repz
orl
arpl
xlat
orb
ficompl
loopne
push
jo
cmp
cmpsl
or
inc
int
sub
jo
iret
sahf
and
pop
movsl
dec
cmpsb
leave
jmp
sbbl
sbb
popa
ret
clc
and
arpl
pop
addr16
add
fiaddl
sub
inc
shll
inc
xchg
nop
call
loope
scas
xlat
test
frstor
and
ret
inc
adc
mov
frstor
sub
xchg
cltd
repnz
or
aaa
mov
fmuls
cmp
popa
lcall
sbb
shl
mov
into
mov
cmp
mov
je
cmp
pop
cmp
add
xchg
sub
push
cmpsl
iret
inc
cmp
dec
pusha
pusha
sti
sbb
dec
sbb
or
add
mov
add
mov
fwait
sbb
sti
jl
inc
dec
jnp
test
sub
cmp
inc
rclb
rolb
jmp
mov
cwtl
fisubrl
pop
inc
sbbl
pop
insl
add
movb
lret
push
fiaddl
daa
cmp
mov
add
pop
jne
adc
aaa
outsl
loopne
movsb
push
add
pop
cs
into
jg
aaa
dec
dec
leave
xchg
pop
and
sub
divl
inc
sahf
cmp
mov
cmp
into
cmp
insl
mov
addb
mov
cmp
imul
or
xchg
ret
roll
pop
test
push
mov
cmp
and
pop
jo
inc
fprem
and
push
mov
in
pusha
mov
std
fnstcw
or
daa
ret
test
and
mov
push
insb
sbb
xor
inc
jae
xchg
adc
add
pop
mov
mov
dec
push
and
sahf
scas
inc
stc
das
xchg
ja
es
mov
push
mov
inc
mov
xchg
pop
push
adc
and
sub
jne
xor
jg
ret
and
lcall
add
xchg
daa
xor
shrl
sbb
xchg
hlt
xchg
mov
inc
sub
push
and
mov
gs
sub
and
jnp
fists
stos
sub
xor
inc
hlt
mov
scas
add
and
sbb
pushl
or
or
lcall
xorb
cmp
out
mov
mov
sbb
add
cmp
jmp
and
js
xchg
out
mov
sbb
push
and
xchg
push
and
mov
cltd
or
jle
sub
lock
sbb
sub
popa
and
test
xchg
sbb
insl
sbb
pop
rcrb
jno
or
mov
mov
roll
das
lcall
add
add
cmp
fimuls
adcl
sub
and
fbstp
push
sub
push
inc
jo
addr16
push
and
and
pop
stos
popa
xor
push
xor
or
push
inc
and
scas
dec
pusha
loope
xorb
bound
das
adc
or
iret
std
xchg
push
sub
adc
arpl
popf
addr16
lar
xchg
jbe
push
push
mov
loope
sbb
jge
adc
mov
in
mov
lods
sub
pop
bound
insl
xchg
add
sbb
add
test
xchg
xor
add
add
pop
lods
adc
ror
jmp
mov
mov
xchg
xchg
add
dec
sbb
push
jb
push
outsb
mov
pop
mov
xchg
or
sub
and
inc
add
jns
add
sbb
ret
inc
mov
movsl
cli
adc
add
cmc
add
idivb
xchg
inc
sub
test
xchg
and
inc
loopne
outsl
aad
sub
pop
in
mov
sub
outsl
xchg
mov
mov
sbb
jae
popa
xchg
or
cld
push
push
dec
inc
xor
inc
mov
je
inc
movsb
push
push
cwtl
or
rcrb
add
mov
or
add
mov
xor
pop
push
lods
or
add
andl
pop
cmpsl
and
stos
and
imul
or
push
sub
pop
mov
sub
push
pop
ficoml
pusha
mov
mov
inc
xor
pop
shl
out
scas
and
ret
ret
scas
inc
pushf
mov
cmp
add
repz
pop
adcl
lea
hlt
adc
xor
jmp
or
xchg
push
test
push
into
addr16
cld
fwait
or
inc
push
lahf
add
pop
push
xchg
test
pop
movb
inc
pop
jns
ficoms
adc
add
mov
je
or
rolb
clc
pop
clc
jb
mov
int3
push
mov
fsts
sbb
adc
lret
arpl
xchg
pusha
pop
cmp
cmp
lea
xor
push
sarb
jmpw
add
ret
daa
and
aam
rclb
test
push
in
or
inc
mov
or
add
movsb
shll
lahf
push
testl
addb
or
mov
into
or
add
dec
loop
add
inc
inc
jae
dec
in
inc
jmp
inc
cmp
addr16
add
push
aam
xor
enter
adc
adc
jo
push
lock
dec
fwait
mov
cmp
xchg
pop
cmp
add
out
sbb
ds
nop
iret
and
dec
inc
cmpsl
cs
and
into
sbb
cmp
shlb
loope
push
nop
dec
inc
push
out
and
xor
test
je
push
sbb
mov
test
lock
xor
add
adc
ret
fcoms
cmp
pop
push
xor
gs
push
sub
push
ficoml
jge
mov
das
call
sbb
or
and
sbbb
mov
jecxz
dec
and
clc
sti
xchg
dec
or
js
int3
shlb
xor
pop
das
insl
mov
adc
inc
xor
xchg
in
jno
fwait
adc
jl
xorb
pop
cmc
nop
push
add
pop
cmpsb
call
mov
jbe
or
add
test
subl
jmp
adcl
jb
test
mov
inc
test
lahf
xor
jge
les
addr16
out
push
imul
pusha
pop
xor
sbb
dec
or
jl
adc
aas
xor
jne
decw
scas
and
adc
xchg
or
pushf
ds
fwait
jmp
and
sarb
or
or
sbb
mov
push
mov
sbb
stos
push
inc
adc
ret
je
test
hlt
lcall
enter
insl
je
bound
push
sbb
test
mov
push
popa
inc
pop
add
sbb
cmp
xchg
mov
pushf
out
nop
les
movb
mov
movsb
inc
inc
adc
add
push
dec
add
dec
aaa
sbb
inc
pop
loopne
in
mov
push
movsb
mov
inc
sbb
push
push
mov
sub
hlt
das
jecxz
aas
xor
cmp
nop
sub
xchg
jl
inc
outsb
dec
xor
cmc
ret
aas
cmp
sbb
ret
lods
sbb
pop
mov
out
pop
pop
inc
pop
dec
and
inc
or
push
add
inc
bound
inc
cmp
adc
loope
rcrb
lret
shlb
cld
push
js
add
test
or
mov
dec
cmpsl
daa
pop
sbb
inc
adc
nop
ss
dec
xor
or
lods
xor
test
cmp
adcb
add
js
pop
iret
sahf
inc
inc
add
cltd
pop
add
adc
jbe
inc
adc
rcrb
cmp
popa
test
inc
jg
xor
sahf
ljmp
or
sti
aad
ss
pop
xchg
pusha
je
mov
pop
add
add
popa
das
sub
daa
and
push
inc
sbb
enter
iret
mov
or
loope
pop
xchg
xchg
fsubrs
pop
loop
jnp
adc
testb
add
add
jl
jl
ficoms
pop
and
adc
mov
push
aam
and
adc
add
rcl
int3
and
and
mov
das
mov
outsb
and
es
add
lcall
mov
insl
adc
xchg
cli
jb
js
mov
addl
mov
pop
test
adc
mov
int
inc
jne
xor
pop
inc
xor
mov
addr16
or
jge
mov
outsl
sub
stos
mov
push
fldenv
js
ja
push
sub
mov
lea
subb
add
inc
pop
mov
sub
loopne
jo
lock
insb
xor
ret
insb
and
sbb
jae
fdivrl
xchg
in
and
fmull
mov
jae
mov
add
xchg
inc
adc
idiv
lods
fcompl
add
mov
in
aam
into
and
popa
imul
cli
aam
movsb
outsb
or
lea
sub
movsb
adc
mov
pop
mov
xchg
mov
shll
inc
push
inc
adc
fadds
xor
test
cli
dec
nop
in
test
in
inc
loope
xor
pop
push
leave
mov
scas
push
in
push
movb
mov
pop
or
bound
scas
in
inc
add
or
loopne
jne
test
push
dec
mov
sbb
push
aam
imul
add
sbb
and
sbb
push
push
scas
lods
std
jecxz
daa
or
mov
add
or
outsb
orb
dec
pop
pusha
and
add
xor
xchg
test
rcll
push
inc
or
push
sbb
iret
cltd
xchg
clc
push
push
mov
pop
pop
add
inc
fwait
mov
int
push
push
popf
jns
and
movb
mov
sbb
fcomps
jl
cmp
push
mov
pop
rorb
and
jo
pop
test
push
ret
cmpsb
addl
xchg
test
xor
sub
dec
xor
std
add
test
jmp
jge
xor
lods
inc
inc
ss
xchg
jns
movsl
imul
enter
jae
jl
popf
or
inc
mov
pop
jae
and
inc
cmp
inc
sbb
pusha
push
pop
jae
mov
insl
std
pop
std
mov
adc
incb
les
jbe
adc
add
mov
add
add
push
stos
std
push
ljmp
or
mov
push
imul
xchg
and
pop
rcrb
lods
cs
stos
lds
and
dec
xchg
jo
or
and
push
adc
cmp
fistps
cmp
inc
push
out
fucom
leave
xchg
xchg
or
call
jmp
jb
mov
xor
add
movsl
sbb
jecxz
pop
testb
imul
or
nop
cmpl
fnstcw
inc
pop
repnz
mov
xorb
inc
jbe,pn
sbb
pop
pop
rcll
repz
mov
dec
push
jp
mov
hlt
jge
add
fs
push
cmp
mov
dec
icebp
ss
aaa
or
sub
repz
leave
sbb
fld
xor
mov
jne
xchg
hlt
sbb
mov
jbe
femms
sbb
ljmp
test
rcll
mov
sti
jl
mov
cs
popa
fnstcw
fldenv
es
jl
inc
sbb
sti
rclb
inc
jns
ret
mov
push
adc
adc
pop
leave
sbb
movsb
mov
push
push
or
push
addl
adc
mov
stos
rorb
xor
lcall
rcrb
imul
mov
fldcw
mov
aam
test
lods
lcall
push
dec
repz
sarl
pushf
pop
fisubrl
cwtl
lods
xchg
pusha
xlat
mov
scas
dec
nop
push
movsb
mov
lret
and
lods
add
iret
data16
fidivl
sub
in
jg
repnz
sbb
lret
sub
scas
clc
mov
and
mov
fs
xchg
nop
push
push
xor
mov
lods
mov
sub
and
fnsave
cmp
fsubs
push
clc
cmp
mov
add
data16
dec
outsb
arpl
mov
xchg
lods
fcmovnb
fs
pop
xorl
add
sti
sub
push
adc
pop
add
adc
add
mulb
adc
dec
add
pop
cld
add
dec
aaa
ret
subl
enter
in
lods
push
cmp
pop
xor
movsl
mov
andps
add
adc
loopne
or
pop
dec
add
jo
dec
cld
sbb
xor
cmp
mov
push
shlb
or
or
orb
rcrb
jo
iret
add
fsubl
jmp
inc
add
jl
cmp
xor
and
test
or
inc
adc
push
add
fstl
pop
xor
pop
push
insl
outsl
mov
imul
or
xor
cmp
sti
or
and
cmp
push
or
cmp
dec
insl
bound
adc
fsts
sbb
add
or
addb
cld
mov
test
xorb
sub
xor
ja
mov
adc
imul
inc
add
dec
or
popf
nop
mov
push
xchg
mov
pop
inc
in
ds
adc
in
or
addl
mov
xor
pushf
cmpsl
nop
add
js
mov
aam
inc
jbe
rorb
cmp
in
mov
lods
jge
fsubs
mov
fadds
insb
in
mov
andb
lret
adc
adc
jp
ret
adc
imul
cmp
stos
adc
sbb
adc
sub
or
inc
jp
dec
or
push
xchg
push
rorb
mov
mov
bound
sbb
bound
jnp
adc
cmp
or
xor
push
push
mov
aam
or
mov
int
inc
and
inc
dec
hlt
test
sub
sub
dec
pop
lods
sbb
or
inc
sub
jg
movsl
sbb
out
mov
das
mov
popa
out
jle
lret
loopne
or
cmpsl
sub
lods
or
and
adc
xor
mov
dec
data16
dec
inc
xchg
cmp
or
sbb
jns
xchg
and
or
sahf
or
mov
lock
or
cmpsb
sbb
sbb
adc
push
adc
repnz
mov
xlat
jge
fs
or
add
ror
inc
orb
ret
jo
addr16
adc
sub
mov
adc
data16
lods
or
adc
inc
and
add
pop
push
mov
loopne
dec
rorl
imul
pop
or
dec
in
and
and
insb
test
imul
ss
pusha
cmp
subl
adc
icebp
stc
jns
ret
or
mov
in
xor
sbb
push
pusha
popa
lahf
mov
push
fcompl
addb
roll
sbb
aas
inc
add
mov
nop
add
sub
nop
mov
or
jbe
or
or
sub
or
iret
or
xchg
insl
dec
mov
or
push
rcr
imul
mov
sbbl
jno
xchg
pusha
xor
fists
out
rol
rolb
push
popl
pop
push
push
push
dec
xchg
enter
push
add
arpl
mov
in
and
xchg
or
mov
shlb
and
add
or
xchg
add
push
dec
cmpb
mov
pop
mov
push
movsb
rclb
ss
jl
lock
cmpl
repnz
aas
inc
test
inc
movsb
lock
inc
loopne
cmpsl
push
repnz
adc
iret
push
lods
repz
push
jl
pop
and
inc
les
outsl
cld
in
inc
rorl
or
inc
clc
push
negl
sti
daa
mov
movsl
lods
int3
push
cmpsb
inc
pop
and
daa
add
cvttps2pi
pop
call
or
pop
out
and
pop
sbb
xor
inc
dec
jae
push
dec
and
mov
add
xor
inc
repz
mov
xor
lahf
add
sti
add
dec
fwait
push
shll
fsubl
pop
inc
loope
adc
aaa
add
mov
add
add
jmp
adc
adc
sbb
ret
adc
adc
push
aas
xchg
sub
lock
loope
pop
lock
add
das
add
push
lahf
push
mov
lock
or
mov
sub
cld
pop
and
mov
mov
pushl
scas
or
rol
scas
lods
ljmp
shl
pop
mov
sti
mov
dec
xchg
lret
sarl
push
adc
mov
sub
test
lret
cmpsb
cltd
and
mov
and
int
push
mov
and
xlat
pop
xchg
daa
data16
pop
dec
mov
int
addb
or
lcall
mov
lcall
mov
imul
push
in
push
movsb
clc
pinsrw
xorl
data16
push
mov
bound
add
dec
xor
ret
dec
inc
push
xor
shrl
pop
and
loopne
jns
addr16
sti
add
nop
mov
add
repnz
ret
pop
fs
add
sbb
push
pop
lret
push
or
paddw
pop
or
pop
pop
sbbl
push
leave
mov
mov
jbe
loopne
and
inc
aas
shrb
push
mov
insb
sub
dec
mov
xor
ret
lods
adc
cmp
aas
out
cmp
out
jo
inc
sub
adc
and
inc
sbb
ss
xchg
adc
xchg
add
test
dec
lcall
repz
dec
shlb
xorb
mov
or
insb
add
in
adc
inc
inc
sbb
and
sub
and
cwtl
subb
sti
std
cmp
sbb
jae
dec
insl
and
dec
cmp
enter
cli
sbb
dec
fstl
sbb
nop
xor
mov
das
pop
xor
movsl
push
xchg
in
mov
and
dec
push
add
shr
push
js
fs
pop
and
sub
or
addb
inc
mov
jo
mov
push
and
inc
inc
mov
xchg
or
xchg
test
and
or
das
sar
daa
mov
std
dec
lods
stos
inc
in
pop
das
int3
mov
test
or
stc
dec
inc
and
cmp
stc
sbb
ja
xlat
incl
push
sub
and
jns
mov
or
jmp
mov
hlt
out
pop
inc
dec
addb
dec
addl
push
pop
rcrl
ds
inc
pop
or
and
add
loopne
fdivrl
xor
and
mov
insb
fs
fisubs
js
pusha
mov
test
push
ret
xor
jg
mull
and
xor
cltd
xchg
in
or
xor
js
add
jge
jae
data16
xor
les
and
push
dec
mov
cmp
test
push
inc
add
imul
xchg
js
xchg
cmp
add
mov
mov
ss
test
jo
sbb
in
rorl
in
cmp
das
jmp
sbb
ficoms
popa
or
inc
int3
test
and
in
cmp
push
inc
ss
push
sub
or
stos
aam
cmp
aad
pop
mov
nop
xor
cmp
sbb
mov
iret
mov
daa
pop
xchg
cmpsl
mov
dec
insb
dec
cmp
adc
in
int3
shl
inc
mov
cmpsb
sbb
mov
test
inc
les
pop
insb
cmp
and
adc
sar
rorb
jmp
ret
or
jo
sub
nop
inc
mov
inc
sarb
and
loope
popa
cmc
stc
enter
inc
dec
mov
inc
or
loope
inc
adc
dec
inc
cmp
dec
seto
and
jne
adc
jbe
or
push
loope
xor
or
pop
cmp
xchg
dec
inc
inc
adc
and
dec
insb
inc
and
adc
sbb
adc
dec
push
adc
inc
push
and
inc
adc
adc
je
adcb
dec
inc
push
inc
sbb
or
insb
sub
jne
pusha
inc
push
rorl
cmpsb
aaa
sbb
push
dec
adc
pop
sbb
cmc
cs
mov
dec
add
inc
pop
pushf
test
outsb
fcmovne
lcall
ja
in
addl
or
xor
pop
mov
pop
push
shr
fimull
pop
dec
push
adcb
mov
inc
add
stc
mov
adc
dec
orl
repz
inc
pop
inc
loopne
fisttps
mov
scas
mov
addb
cwtl
insb
cmp
test
call
xchg
pop
insb
insl
or
out
pop
movsb
inc
mov
sub
rorb
xor
test
mov
or
nop
sub
jg
adc
xchg
pop
inc
fcmovbe
fidivl
iret
push
mov
jmp
aas
inc
pop
push
ret
aaa
mov
inc
mov
nop
xlat
cmp
jbe
dec
imul
hlt
pavgb
add
hlt
and
or
loopne
xor
pop
rorl
fcoms
fcom
scas
push
fwait
pop
test
dec
inc
xchg
fmull
inc
movl
movsb
addr16
add
add
inc
push
pop
xchg
nop
xor
cmp
and
dec
jl
jo
pop
mov
xchg
cmpsl
testb
dec
addr16
add
or
sbbb
divl
or
in
mov
push
je
and
addr16
mov
inc
ja
mov
or
mov
out
pusha
test
lret
sub
adc
adc
jl
push
lahf
cmp
xor
je
adc
pop
jl
inc
push
xorb
mov
pop
movsb
adc
aam
fisttps
sub
hlt
mov
and
sarb
aad
inc
xchg
sbb
mov
adc
aam
adc
jno
cld
mov
popa
push
repz
sahf
aaa
fisubl
cltd
sbb
push
call
and
pop
insb
inc
lcall
or
mov
inc
nop
nop
ja
xchg
mov
inc
mov
sub
pop
adc
or
mov
xor
cmp
sti
push
std
mov
jl
jbe
and
or
cmp
aad
clc
and
jnp
push
mov
sbb
rclb
push
xor
daa
dec
mov
in
paddb
mov
cmp
cmp
fldenv
outsl
ret
mov
aam
add
repz
xchg
shlb
into
pop
xchg
xor
aas
sub
sbb
sbb
lods
fld
mov
cmp
jae
mov
rorl
push
loopne
sub
mov
clc
fmuls
or
adc
int
or
or
call
adc
adc
sbb
cwtl
lcall
pop
out
add
mov
mov
xchg
fidivs
fsub
and
adc
xchg
xchg
gs
add
or
pop
add
add
xchg
repnz
outsb
add
mov
pop
add
roll
test
fmul
inc
or
sub
daa
inc
mov
divl
movl
lret
popf
leave
cmp
add
sbb
shlb
adc
pop
addb
aas
mov
jne
sbb
push
das
sub
dec
or
push
lock
pop
inc
or
test
fstp
mov
sbb
cmp
sub
sub
inc
orl
inc
add
mov
pop
hlt
mov
pop
push
movsb
mov
sub
in
add
pop
rclb
adc
inc
xchg
jl
rcrl
push
or
xor
mov
addl
add
lret
faddl
mov
sub
test
inc
subb
xchg
xchg
sbb
push
jecxz
push
xor
lcall
add
fnstcw
clc
je
mov
inc
popa
mov
cmpsb
scas
rorl
cmp
xor
push
inc
add
mov
cltd
sub
or
add
fsubrs
push
enter
xlat
fwait
sbb
sbb
lret
cmpsb
in
fwait
add
xor
inc
shl
or
dec
mov
sbb
push
xlat
inc
js
popa
dec
pop
add
push
int
ret
mov
add
outsl
pop
test
mov
hlt
jae
xlat
and
out
cmpb
push
cmp
mov
lret
jmp
sub
xchg
xchg
aam
cmpsb
add
xchg
add
mov
sub
adc
shlb
xor
xlat
fadds
or
subb
es
sbb
mov
test
jnp
add
adc
movsl
addl
outsl
fmuls
xchg
daa
test
pop
fistps
xchg
orl
sti
pusha
adc
sub
dec
inc
sbb
push
repz
adc
xor
sbb
add
cmp
aas
mov
neg
jmp
arpl
mov
enter
jmp
movsb
push
jno
cli
push
xor
and
push
push
or
xchg
sub
fisttps
jg
cmc
push
mov
int3
dec
pop
adc
jbe
insl
pop
jl
in
xchg
pop
jmp
scas
movsb
xor
jl
xchg
and
xchg
fstps
push
mov
in
movsb
mov
ds
push
pop
outsl
je
add
mov
jbe
push
shll
rcl
dec
xchg
cmp
mov
pop
cwtl
jb
ror
cmpsb
adc
and
ljmp
cmp
dec
xor
inc
xlat
push
fiadds
clc
pop
fcmovnb
add
popf
popa
add
stos
push
ficompl
jmp
inc
inc
or
rorb
or
dec
ficompl
or
flds
dec
add
mov
pop
jge
rclb
cwtl
fistl
cltd
sti
and
les
push
je
cwtl
sub
or
jmp
xor
aaa
pop
insl
inc
outsb
and
xchg
rorb
sub
test
das
dec
mov
or
je
ss
pusha
inc
mov
shrb
ror
add
and
cmpsl
cli
and
mov
xor
push
int
or
sub
fmuls
mov
push
xor
into
or
xor
cmp
mov
inc
xor
push
adc
xchg
mov
jle
push
aaa
movsl
add
dec
out
adc
jo
sahf
push
push
and
sbb
sbb
pusha
ficoml
xor
sbb
cmp
imul
cmp
push
divb
mov
sbb
daa
lahf
inc
add
or
add
inc
addr16
dec
ret
jle
xlat
movsb
push
sbb
sub
or
es
add
pop
dec
inc
push
cwtl
rcll
nop
lods
sub
cmp
in
jge
clc
mull
mov
fs
ret
sbb
add
mov
rol
xchg
dec
mov
push
add
push
cmp
sub
clc
andb
jge
into
cs
sbb
mov
adc
xor
add
push
andl
imul
push
insb
aaa
sbb
sbb
push
cmp
fnstenv
ja
xchg
sbb
xor
aas
or
cmpsl
or
cmp
or
inc
inc
mov
leave
jge
xor
push
jl
mov
jp
push
add
loop
and
cmp
ss
inc
ficompl
mov
addb
je
cmp
xor
cwtl
mov
dec
mov
andb
xor
jge
pop
add
fcompl
cmpl
testb
push
xor
cwtl
inc
cmp
cmp
fs
xor
loopne
inc
mov
insb
insb
fs
movsb
xchg
loope
inc
add
lea
push
movl
sub
subl
xchg
ljmp
dec
adc
clc
sbb
int3
jle
mov
inc
loop
dec
mov
add
push
movsb
les
ljmp
repnz
notb
jnp
sbb
cmc
mov
mov
mov
and
pop
pop
ret
xchg
int
xlat
stos
push
add
mov
xchg
add
stos
add
mov
mov
dec
xor
mov
je
xchg
outsl
xchg
test
fcmovne
sub
mov
cmp
mov
mov
mov
cmovg
sbb
inc
add
xor
push
sub
xor
lret
jo
mov
inc
mov
xor
nop
sahf
into
sbb
add
push
jne
sbb
adc
xor
inc
jmp
and
and
and
adc
pop
adc
lret
fimuls
dec
mov
lock
fcompl
out
mov
mov
dec
cmpsl
andb
insb
push
pop
cvttps2pi
lods
adc
movsl
xor
inc
lods
xchg
add
add
vucomiss
nopl
xchg
pop
lcall
or
push
icebp
xor
and
and
arpl
inc
cmp
mov
jg
cmpl
adc
mov
xchg
pop
je
mov
mov
inc
push
sbb
rsm
outsl
mov
sbb
rorb
int3
jbe
pop
or
jecxz
adc
test
insb
loopne
push
cltd
lret
push
sarl
das
inc
xchg
call
in
add
sub
int
es
outsb
dec
imul
insl
cmp
inc
push
and
pop
dec
outsl
dec
enter
or
xchg
bound
push
and
push
inc
sub
lods
in
stc
adc
enter
xor
in
mov
arpl
cld
cmpsb
je
push
es
add
cmp
jns
xor
or
pop
cmpl
repz
xchg
fisttpll
xor
sbb
lea
sub
jle
mov
lea
push
mov
push
sbb
pop
adc
and
mov
xor
addl
outsl
or
lds
sbb
and
sub
sbb
pop
mov
les
push
jg
mov
in
inc
outsb
mov
inc
jl
lret
or
sbb
or
xchg
mov
pop
aam
xchg
mov
xlat
inc
sub
jns
nop
icebp
add
jge
adc
insl
sub
ss
adc
jle
or
dec
ja
push
stos
inc
fstpl
adc
rolb
adc
sbb
in
mov
repnz
or
add
and
push
or
add
daa
rcrl
aad
lahf
incl
push
cmp
xor
divl
sbb
movsb
scas
pop
dec
je
mov
dec
jp
mov
flds
mov
pop
xchg
sub
scas
push
sub
push
fisttpl
pop
test
movq
or
gs
or
jns
or
std
jo
inc
mov
inc
or
and
mov
xor
push
dec
inc
popf
dec
push
adc
insl
xchg
mov
shll
inc
inc
out
dec
rorl
sub
fsubs
je
add
lock
add
add
scas
push
inc
insl
cmpsb
adc
pusha
pop
int
xchg
aam
add
mov
imul
jb
xor
leave
inc
subl
push
cmpsb
add
movsl
das
push
or
inc
sti
rolb
sub
pusha
out
mov
inc
add
xor
outsb
lret
dec
cmp
xor
add
fimuls
xlat
test
xchg
jbe
or
inc
jge
mov
dec
adc
cs
xor
mul
leave
and
movsl
push
mov
or
enter
sarb
pmaxsw
xchg
sbb
dec
aam
push
cmpsb
or
inc
addr16
inc
addb
ss
dec
xchg
and
push
jnp
in
sub
add
testb
mov
push
mov
fistpll
loope
cld
push
push
aam
mov
loope
dec
in
ret
adc
mov
push
adc
imul
push
daa
lcall
testb
cmp
cmp
cs
mov
insl
adc
iret
add
cmp
push
les
lcall
inc
add
pop
shl
or
sub
pop
push
xor
push
mov
enter
addb
cmp
adc
cmp
adc
or
mov
sbb
lods
test
pop
rcll
fwait
lea
dec
cmpsb
push
stos
ret
inc
push
jl
sbb
add
out
dec
mov
dec
aaa
adcl
test
dec
inc
pop
and
nop
mov
data16
arpl
dec
or
test
icebp
xchg
xchg
lods
jmp
je
mov
or
dec
xchg
sub
xor
cmp
enter
sbb
lods
pushf
cmpsb
scas
fcoms
jne
sbb
sbbl
ljmp
jne
test
xchg
insb
std
aam
inc
sub
mov
enter
lods
fwait
push
loop
jnp
adc
shll
fldl
add
iret
cmp
and
dec
neg
inc
inc
repnz
fs
pop
and
rorb
ret
adc
sarb
outsb
hlt
inc
outsb
clc
pop
sbb
dec
push
inc
hlt
mov
or
and
aas
sub
jecxz
stos
pop
ja
jecxz
push
sub
xor
sete
mov
cmp
add
dec
jp
jle
jne
dec
dec
add
fs
push
stc
testb
jecxz
testl
in
jmp
cmp
ret
mov
and
and
add
fsubs
faddl
push
iret
xchg
xchg
dec
lea
das
xor
movsb
push
push
or
cltd
add
cmpsl
and
push
and
lds
sub
lock
pop
cmp
mov
adc
pop
jo
sub
jb
dec
fwait
adc
xor
dec
adc
cwtl
pusha
sub
daa
push
pop
nop
test
push
jo
lea
out
out
add
mov
jnp
sbb
or
out
xchg
repnz
inc
cmpsl
adc
shll
ja
mov
sahf
adc
add
and
push
adc
sbb
cmpsb
pop
or
and
inc
and
mov
test
push
xor
outsb
shlb
rclb
xchg
xchg
xchg
dec
adc
fs
nop
cwtl
mov
push
sub
leave
and
shrb
xchg
lock
cmp
cltd
push
loopne
sbb
aam
xchg
mov
xor
mov
fnstenv
xlat
in
or
inc
rcrl
les
fnsave
das
inc
inc
mov
adc
out
mov
test
adc
xor
cltd
xor
dec
sub
xlat
pop
mov
xor
arpl
pop
mov
push
fldcw
ss
aam
jl
dec
xor
je
push
sub
cmp
lahf
dec
or
mov
pop
add
xor
scas
mov
test
imul
ljmp
and
or
imul
adc
fsub
sbb
inc
lahf
ret
stc
ret
fdivrl
cmpb
add
pop
or
and
adc
test
sbb
adc
jge
ret
lock
xchg
cmpb
inc
xlat
cmpl
in
mov
nop
ja
in
add
les
sub
ret
dec
lret
adcl
push
ret
enter
or
idivl
ds
cmp
add
aas
shrl
enter
fnstsw
adc
inc
arpl
adc
sub
mov
add
fbld
push
dec
fucomp
inc
or
mov
dec
or
push
pop
mov
mov
mov
or
sub
inc
sbb
movsb
fbstp
inc
inc
lret
mov
xchg
movsl
xchg
test
jmp
adc
sub
icebp
jge
and
and
lea
pusha
or
xorb
jo
or
push
and
sub
cwtl
adc
rorb
jmp
fldt
test
lock
jmp
and
push
sbb
mov
pop
inc
pop
cmp
xlat
rolb
mov
es
rcr
adc
outsb
xor
adc
adc
jl
sub
jg
sbb
push
fisubs
ljmp
int3
idivb
xchg
inc
pushf
data16
outsb
testb
loop
mov
jmp
andb
mov
push
frndint
inc
pusha
mov
push
push
ja
cmp
sti
sub
xor
or
jecxz
loop
roll
test
shll
and
mov
enter
pop
or
sub
addr16
fiaddl
mov
ret
subl
xchg
pop
cmpsl
test
pop
dec
push
push
rolb
mov
jg
and
adc
insl
in
ret
push
sarb
mov
mov
cmp
fxch
push
pop
negl
lcall
sti
sub
test
jbe
cli
xchg
aam
pop
jne
sbb
or
add
lcall
pop
adc
in
sub
inc
sub
push
pop
pop
xor
mov
adc
xacquire
fs
inc
and
mov
ja
inc
jl
test
and
fwait
xchg
add
or
shlb
jmp
insl
push
fdivs
adc
dec
inc
out
test
mov
add
bound
add
sbb
inc
mov
add
sub
cmc
mov
orb
shll
pushf
mov
adc
mov
fsubr
add
cmp
or
sub
data16
in
xor
clc
cmp
pop
and
ret
cmp
mov
in
test
add
fnstcw
xchg
aaa
sbbl
mov
popa
mov
mov
sbb
hlt
nop
add
sbb
dec
push
or
pop
xacquire
sub
mov
xor
and
imul
dec
or
or
into
call
jbe
push
push
or
inc
cli
addb
lock
add
cwtl
push
leave
xchg
int3
and
xchg
or
or
and
sbbb
sbb
adc
adc
jne
sub
inc
nop
cmc
in
or
imul
aaa
inc
add
lea
inc
push
jge
adc
testb
pusha
and
enter
andb
jle
mov
add
leave
cmovns
lret
imul
fdivl
pusha
ds
add
movsb
shlb
jne
cwtl
pop
push
clc
xchg
insb
dec
and
aad
or
mov
or
push
dec
push
daa
xchg
loopne
sub
dec
xor
popf
ds
or
sub
push
hlt
pop
imul
test
nop
push
fildl
add
add
push
add
in
ss
mov
insl
jmp
ret
cmp
push
lret
sub
or
jo
or
jle,pt
add
xchg
jmp
sbb
cmp
cltd
movsb
jns
fucomi
das
out
inc
or
neg
xchg
movsb
neg
in
add
outsb
xor
push
cmp
mov
dec
mov
xor
sbb
sti
in
cmp
sbb
fsubs
pop
rcl
scas
add
jno
xor
add
iret
push
adc
xor
pop
push
stc
push
push
push
mov
xor
push
xor
insb
fs
dec
jmp
daa
gs
dec
xor
push
cs
lds
in
or
mov
out
enter
sub
pop
addr16
les
sub
jo
pop
push
das
dec
loopne
and
mov
insl
aaa
add
sub
in
jne
pop
das
sbb
push
push
lock
dec
roll
push
movsl
fs
jne
clc
ficoms
cltd
lods
push
xchg
or
pop
rolb
inc
rcrl
insb
sub
cwtl
mov
jmp
sysret
sarb
xor
dec
pop
imul
xchg
mov
add
mov
mov
popf
pop
loop
sub
jnp
dec
testb
shll
add
mov
addr16
xorl
es
jae
cmp
add
sbb
inc
test
or
divb
cli
pop
cmp
addb
jmp
faddp
mov
add
push
and
xchg
movsl
inc
mov
movsl
and
add
jb
sub
jno
adc
pop
aas
fs
aaa
cmp
add
cmp
clc
sbb
add
add
add
sub
xchg
mov
inc
jb
and
xor
or
cli
jno
xor
adc
pop
fcmovnb
in
rcrl
fisttps
or
shll
cmp
rcrl
es
test
fcompl
add
inc
dec
sub
xor
add
pop
adc
adc
pop
shl
fldt
clc
dec
popf
inc
xor
pop
and
inc
mov
mov
in
pop
lock
and
por
insb
pop
test
in
scas
push
jno
mov
pop
inc
loopne,pn
inc
setg
mov
aam
xchg
out
pop
or
hlt
je
pusha
adc
and
sbb
mov
push
mov
add
mov
pop
adc
jne
arpl
adc
xchg
cmp
lods
jne
mov
push
inc
ror
mov
pop
cmpl
das
sbb
mov
frstor
movsl
scas
xor
push
aas
dec
ret
les
stos
push
arpl
mov
ja
inc
adc
add
js
inc
xor
ljmp
test
push
push
clc
cmp
push
sub
pop
dec
lret
jo
mov
popa
add
adcb
popf
cmp
jecxz
daa
fdivs
rclb
ja
push
xor
push
jmp
pop
test
cmpl
dec
inc
jo
into
or
adc
adc
mov
sbb
mov
aaa
dec
or
xchg
cmp
ret
stos
pop
int
xchg
in
or
mov
clc
je
cmp
push
dec
or
test
pusha
jmp
int
imul
js
mov
cs
add
lahf
pushf
data16
data16
gs
inc
rolb
xor
lock
inc
adc
test
cmpsl
cltd
inc
loopne
pop
push
jmp
pop
inc
loope
jl
xchg
loope
mov
or
outsl
xor
mov
or
push
ss
popf
add
pop
xchg
cmp
iret
mov
inc
push
je
orb
and
sub
sbbb
jo
inc
mov
mov
mov
lea
mov
xor
je
inc
jo
daa
std
into
test
or
popl
cmp
push
mov
lea
pop
insb
fildll
mov
orl
cmc
movsl
jmp
sub
dec
scas
mov
and
negl
arpl
xlat
and
dec
adc
lret
es
test
divb
test
mov
repz
and
or
cmpsl
inc
dec
fistps
loopne
mov
movsl
inc
ja
add
fimuls
push
fstps
cmp
add
mov
cmpsl
fbstp
or
sbb
adc
mov
pop
fmuls
cmp
push
outsb
out
mov
sbb
sbbl
mov
jns
jo
sub
cmc
cmp
jne
cld
mov
push
fistpll
test
or
lds
pop
add
push
cmp
and
arpl
call
jle
push
bound
adc
stos
cmp
sti
addl
imul
aaa
loop
sub
push
push
fisubl
add
lds
xchg
mov
xor
aam
ret
pop
sub
in
inc
inc
rcl
into
adc
adc
inc
add
js
or
push
dec
adc
push
mov
shrb
push
cltd
xor
mov
fdivrs
jle
or
daa
adc
adc
subb
testb
mov
aad
adc
sub
sbb
daa
adcb
and
cld
mov
add
adc
pop
ja
mov
iret
cmp
add
or
sub
ds
orb
cwtl
add
mov
xchg
popa
nop
add
add
or
xor
jle
adc
xchg
push
mov
push
fistps
sbb
inc
pop
adc
push
sarb
mov
jns
rclb
movd
add
jne
dec
clc
pushf
sub
sbb
dec
fnstsw
dec
and
hlt
ss
xor
add
sbb
rcrb
inc
fistl
fisubs
cmc
fdivs
sub
lock
add
add
xchg
xchg
test
mov
loope
inc
or
xor
es
add
and
sub
add
jo
inc
insl
ret
data16
and
adc
add
rclb
sbb
mov
out
aas
add
push
or
loop
ficoms
add
sbb
jecxz
mov
sbb
js
movsb
mov
daa
lock
and
or
sbb
mov
test
add
pop
mov
dec
mov
das
pop
aas
outsb
add
adc
xor
test
push
es
int
mov
jmp
lret
test
lahf
push
and
and
rol
imul
xchg
cwtl
add
sbb
popa
cwtl
and
sub
inc
popf
js
xlat
movsb
push
cld
in
adc
je
push
testb
xor
xlat
mov
cmpb
js
pop
pop
addl
mov
dec
dec
push
or
dec
decl
push
push
adc
or
cmovo
jge
insl
nop
roll
sbb
ds
and
stos
subb
xchg
add
xchg
faddl
aaa
sbb
outsb
loopne
in
sub
dec
pop
or
adc
inc
add
adc
and
and
pop
sti
shlb
imulb
add
jmp
sub
clc
or
orb
adc
push
jnp
sub
pop
incl
mov
decl
cmp
out
push
sub
rcll
pop
cld
add
mov
mov
rolb
and
push
rclb
pop
push
or
add
mov
movsb
pop
inc
cmpl
jne
or
es
or
mov
add
mov
xlat
cli
stos
mov
fists
cmp
mov
inc
imul
les
lock
in
jne
dec
addb
test
int3
mov
in
fmuls
or
or
add
push
add
mov
and
lahf
or
xlat
sbb
push
xadd
nop
enter
xlat
xchg
xor
into
ret
out
shlb
sub
add
lods
xchg
sarl
mov
xor
incl
subb
cmp
fcompl
shrb
adc
fs
jbe
mov
aas
pop
sbb
sbb
xor
enter
insb
dec
dec
xor
and
subl
push
leave
aam
push
or
cmc
imul
sbb
shlb
push
mov
adcb
adc
aam
dec
insl
inc
dec
pushf
out
fs
mov
js
add
in
mov
dec
push
bound
push
push
mov
mov
jmp
addr16
and
sbb
nop
xchg
test
mov
and
inc
outsl
lock
ss
pop
fsts
xor
test
mov
mov
xchg
inc
sub
fs
push
pop
cmc
and
inc
mov
mov
jmp
addb
decl
out
xchg
sahf
inc
sub
or
sbb
cmpsl
push
cmp
and
sbb
add
push
mov
mov
dec
mov
and
and
mov
gs
outsb
sub
push
cwtl
push
sbb
lock
sub
fisttpl
mov
xchg
push
outsl
sub
aaa
cmpl
fistpl
hlt
sbb
ror
popa
movsb
mov
or
jp
and
cmc
sbb
dec
inc
xor
mov
add
jbe
dec
rcrl
popa
adc
sbbl
push
adc
dec
or
push
rorb
pop
lea
dec
inc
aad
fucomi
cmpl
inc
inc
je
ja
jnp
test
dec
cmpb
or
gs
stc
shlb
test
push
mov
xchg
add
cltd
aam
pop
mov
lahf
adc
addr16
sub
xor
call
dec
inc
fidivs
out
push
mov
add
ret
push
in
mov
push
xchg
push
mov
sub
pop
or
add
pop
add
pop
xor
mov
repnz
mov
lods
rcrl
cmp
dec
and
inc
push
cmp
cmpb
inc
cmp
sbb
add
hlt
and
sub
pop
sbb
inc
lods
dec
ljmp
xchg
sbb
xchg
or
mov
dec
add
scas
or
sbb
pop
add
mov
ss
mov
dec
pop
and
push
cmp
pop
xchg
push
mul
mov
inc
divb
cmp
int
shl
xchg
int
mov
push
cmp
mov
inc
and
or
pop
shlb
mov
test
jns
push
sub
hlt
xor
xor
xor
push
lock
negb
in
aad
arpl
pushf
loope
hlt
jp
jbe
in
decb
ss
popl
xor
pusha
dec
adc
lods
cltd
add
fidivl
pop
mov
or
stos
add
movl
adc
or
rcll
pop
shlb
sarb
and
int3
ret
sub
rcll
push
or
icebp
add
lds
icebp
es
and
mov
adc
push
sbb
dec
leave
sbb
shrl
add
fwait
jmp
dec
fiaddl
pop
add
sbb
test
add
test
pusha
cmpsb
xlat
sbb
icebp
test
nop
dec
sar
inc
adc
sub
pop
and
fdiv
enter
sub
add
inc
data16
pop
dec
add
push
sbb
push
ret
xor
dec
stos
rcrb
rcr
mov
pop
outsb
and
or
push
adc
je
xor
ret
add
sbb
add
inc
xor
out
lds
test
inc
sahf
xor
mov
loopne
pop
addr16
xor
xchg
dec
roll
or
mov
sbb
jbe
pop
ficoms
leave
adcb
inc
add
fldenv
ds
and
loope
xor
call
mov
outsl
pop
outsb
sub
add
inc
js
add
inc
movsl
dec
or
syscall
xlat
inc
jmp
aam
xchg
push
rorl
sbb
and
inc
mov
rcrb
add
enter
adc
mov
sahf
and
scas
push
push
mov
jbe
sbb
jne
pop
dec
test
mov
mov
lea
mov
divl
add
jo
mov
push
cwtl
call
adc
push
or
cmpb
pop
mov
push
push
mov
adc
mov
xchg
dec
je
cmp
add
daa
inc
fwait
cmpb
fwait
inc
mov
arpl
xor
dec
adc
lods
adc
sarb
add
dec
cmpsl
jmp
popw
adc
je
adcb
dec
pop
loop
stos
outsb
dec
jmp
pop
iret
movb
fsubs
xor
xchg
adc
jmp
cmp
test
adc
lea
adcb
popa
adc
pop
sub
lahf
rcrb
sub
cmp
outsl
popf
into
inc
aaa
sbb
lret
and
mov
roll
dec
sub
and
daa
dec
add
stc
add
leave
lods
jmp
and
inc
xlat
push
shll
scas
inc
stos
or
and
add
and
mov
loopne
and
push
cmp
in
fbstp
outsb
pop
aas
lods
push
add
push
sub
sub
ficoms
ljmp
push
rolb
add
dec
dec
call
movb
mov
mov
sbb
cmp
and
or
dec
popa
enter
and
cmp
arpl
dec
outsl
add
pop
fldl
dec
fucomi
xor
jo
pop
adc
sbb
xor
idivl
dec
mov
sbb
fsubrl
imul
mov
sub
punpckldq
cwtl
dec
mov
sub
mov
pop
mov
stos
inc
jl
cltd
sbb
and
xchg
push
adc
cmpsl
jne
lods
pusha
loopne
in
fs
jle
adc
or
sub
imul
in
in
add
sub
sub
pop
add
pop
rolb
cmp
loop
pop
lock
dec
dec
je
sub
dec
pop
push
adc
dec
mov
adc
jbe
mov
adc
add
nop
in
and
inc
and
cmc
out
repnz
and
sbb
insl
rcl
jno
lods
add
xchg
icebp
stos
jne
add
sub
je
test
or
imul
jge
sub
mov
scas
fmull
subl
push
incl
dec
pushf
push
adc
pop
jns
jne
mov
rcrb
push
push
and
mov
faddl
dec
lret
xor
sahf
cmp
loopne
lock
andl
dec
dec
clc
add
lods
lods
xlat
sub
mov
imul
and
push
inc
dec
es
cmpsl
lret
jmp
jl
push
es
ret
xchg
cli
mov
jbe
xor
addr16
scas
push
gs
jl
sub
hlt
je
setge
mov
enter
rorl
sarl
or
push
cli
daa
mov
sub
popa
xchg
adc
mov
mov
push
cmp
cmp
jge
leave
xchg
dec
mov
movsl
cmp
mov
clc
jg
inc
or
pop
pusha
std
adc
mov
scas
imul
xchg
mov
add
pushf
and
push
mov
or
and
add
mov
pop
push
jl
dec
in
or
mov
jne
aam
or
rcl
sub
ret
cmp
aaa
jl
daa
jo
push
leave
xor
arpl
movsb
arpl
or
subl
arpl
shlb
and
push
mov
xchg
test
enter
push
aam
movsb
ja
push
push
scas
ret
jno
cmp
sti
jo
dec
fwait
test
sbb
or
push
loopne
adc
cmp
pop
dec
add
sbb
rorb
add
add
lds
cmp
inc
popf
adc
adc
aam
cs
adc
adc
ss
nop
cmc
add
cmpsb
mov
push
dec
sub
mov
and
inc
or
dec
and
ja
mov
bound
add
inc
push
or
ss
jmp
sbb
stos
insb
dec
ss
scas
mov
insb
stos
push
inc
fucomp
or
adc
mov
insb
movsb
pop
lods
loope
pop
push
inc
and
ret
inc
push
icebp
arpl
push
adcb
mov
adc
stc
sbb
sub
imul
xorb
sti
add
mov
lea
cs
sub
mov
fdivrs
sub
les
inc
push
inc
sub
xchg
push
xor
fcoms
sub
cmpb
popf
addr16
pop
adc
nop
or
pop
lock
push
add
sbb
bnd
push
repnz
add
jns
xchg
subl
in
pushf
rclb
push
xchg
shrb
repnz
call
insl
jb
xchg
outsb
sub
adc
xchg
cwtl
adc
fsts
push
and
mov
cmp
int
xchg
dec
or
push
jmp
pop
int3
mov
sbb
jne
mov
cld
and
in
lods
rolb
lcall
add
fiadds
or
sbb
jle
adc
mov
subb
int3
add
mov
and
leave
dec
das
add
repnz
and
push
mov
adc
loop
add
dec
aaa
mov
push
push
por
or
inc
and
adc
in
jle
sbb
adc
int
dec
fisubl
xor
test
ja
jo
mov
jg
mov
pushaw
add
jno
nop
dec
loope
pop
sub
or
jmp
mov
xchg
loope
mov
loopne
xchg
loopne
int3
xor
jne
push
sbb
jne
or
cmpb
sbb
arpl
mov
push
pop
loopne
mov
add
xchg
inc
loopne
fwait
jmp
test
pop
sbb
or
mov
call
pop
or
dec
rolb
dec
js
fwait
xorl
mov
out
xor
cmp
xor
rorb
adc
enter
hlt
out
into
xor
sti
sub
in
xor
enter
cmp
push
push
adc
push
push
xchg
outsl
aam
subb
adc
sbb
xchg
push
mov
lcall
dec
mov
cltd
add
mov
fdivs
daa
and
insb
lods
es
es
std
inc
imul
or
lods
xor
sbb
icebp
jbe
out
lds
mov
mov
shlb
mov
mov
inc
pop
scas
inc
sbb
cmp
js
xlat
xorl
xchg
and
arpl
enter
inc
divl
sub
and
inc
mov
jb
call
xor
loopne
fldl
mov
scas
mov
xor
sbb
rol
add
cmp
xchg
adc
mov
shrb
pop
and
pop
insb
rcl
mov
xchg
pop
push
movb
rorl
and
ret
and
push
or
add
insb
inc
shl
push
rorb
ljmp
jp
cmp
addr16
jne
pop
pushf
mov
rclb
rcrb
or
repz
push
movsl
addr16
pop
add
popa
andb
pop
mov
xchg
adc
and
sbb
mov
xor
jg
imul
push
shll
push
rcll
or
insb
dec
pop
adc
push
and
es
and
mov
movsb
xchg
pop
clc
cmp
inc
mov
sub
sbb
jno
add
fstpt
sub
inc
loopne
adcl
das
popf
fs
fwait
test
dec
mov
arpl
lds
push
push
adc
andnps
mov
lods
das
sub
push
push
sbb
imul
sub
mov
mov
call
or
inc
mov
imul
add
xor
cwtl
cli
or
aaa
ffree
xorl
cmp
mov
ljmp
mov
call
je
testl
sub
shll
add
lds
int3
mov
add
sbb
jmp
icebp
adcl
test
adc
nop
jp
test
loope
mov
loopne
jno
dec
outsl
push
in
in
ret
daa
ret
cmp
outsb
mov
dec
call
sub
aas
je
push
dec
sbb
fwait
idivl
loopne
mov
xor
dec
inc
out
scas
cmp
into
push
ret
adc
mov
aam
mov
lea
push
ja
mov
adcl
cmp
push
inc
mov
stc
enter
or
mov
fs
popf
push
mov
loopne
rorb
sbb
out
and
xchg
add
mov
add
fiadds
dec
insb
xor
andb
sbb
xchg
add
push
scas
dec
incl
inc
movb
inc
lea
push
dec
jne
pop
add
clc
ss
stos
es
lcall
push
cmpsl
adcb
rcrl
int3
or
outsb
iret
loop
ljmp
or
mov
inc
sbb
sarb
mov
arpl
arpl
ss
push
and
scas
das
jge
cmp
sahf
je
pop
fnstcw
idivl
mov
xor
aas
push
and
adc
fildll
popf
mov
mov
jl
ss
imul
mov
cmp
mov
inc
adc
popa
sub
add
add
adc
out
test
sub
add
jge
jne
sub
sbb
cld
push
sbb
adc
cld
and
xor
xchg
mov
loop
xchg
adc
mov
jbe
xchg
pop
imul
dec
aas
mov
adc
andl
push
add
push
scas
loopne
test
pop
pop
or
inc
pop
cs
test
das
mov
outsb
xchg
cmp
imull
lahf
into
aaa
fcmovb
and
test
sub
sbb
in
push
sti
fwait
pop
test
jmp
dec
enter
rorb
jmp
push
jo
movl
cmp
inc
and
push
sub
popf
sbb
in
pop
jl
icebp
cwtl
add
pop
adc
add
daa
inc
sub
add
dec
imul
test
insb
je
ss
popa
aaa
enter
inc
inc
mov
mov
mov
jne
mov
filds
sub
inc
push
sbb
dec
xor
inc
push
xor
pop
pop
mov
xlat
fsubrl
enter
lds
mov
dec
pushf
xchg
sbb
mov
mov
inc
jmp
test
add
pop
dec
xchg
add
nop
dec
dec
dec
and
xchg
pop
pop
jne
push
push
push
das
cs
dec
xchg
add
ss
push
mov
inc
push
xchg
sbb
rcrl
inc
inc
fs
xchg
and
xchg
rorl
daa
push
iret
mov
test
dec
mov
inc
outsl
add
adc
sbb
nop
cmp
jo
inc
adc
or
outsb
add
add
leave
sbb
jne
cs
xchg
iret
call
movl
mov
cmp
out
jl
or
push
test
daa
cmp
mov
jae
mov
xor
xchg
mov
adc
cmp
loopne
scas
dec
out
clc
xchg
clc
or
jmp
cmp
xchg
sub
push
xor
mov
or
sub
sub
fs
ret
rolb
lods
inc
stos
push
pop
sbb
mov
mov
stc
imul
mov
iret
inc
push
cltd
mov
sub
sub
sbb
sbbb
xor
scas
pop
push
pop
lock
pop
aam
popa
mov
sub
scas
mov
popa
sarb
add
std
xor
cmp
lea
mov
adc
fcompl
cmp
test
xchg
pushf
mov
sbb
mov
testb
into
sbb
mov
dec
cmp
lea
dec
add
sbb
pop
sbb
cmp
cmp
push
add
jno
jno
cmp
add
incl
loopne
pop
negb
mov
nop
loope
dec
test
xor
cmp
pop
xor
cmp
adc
jae
dec
lds
fsubs
lods
pop
inc
sbb
gs
adc
popa
aam
or
jb
and
jae
mov
js
insb
sbb
mov
xor
jecxz
inc
sbb
or
cmpsl
pop
sarb
jae
fdivrp
je
das
cmpl
std
mov
adc
nop
scas
rol
lahf
cmpsb
push
aas
lods
pop
sbb
cmp
jmp
cmp
outsl
or
cmp
mov
daa
pusha
adc
adc
clc
loopne
xor
jae
cmpsl
mov
inc
in
leave
divb
je
test
mov
clc
add
inc
jmp
xchg
cmp
mov
pop
or
and
and
loopne
insb
scas
into
xor
lds
jnp
and
xor
add
sbb
incl
test
outsb
dec
mov
mov
cmpsl
je
push
fistl
das
ss
and
je
pop
pop
sbb
loopne
push
cmp
inc
fidivrl
popf
loope
sub
rolb
bound
add
inc
adc
sub
push
lret
test
outsl
push
pop
rorb
xacquire
js
iret
and
mov
out
dec
inc
fimuls
xor
pop
nop
bound
inc
in
lahf
popa
pushf
inc
cld
icebp
addl
push
cmp
lcallw
ret
inc
fmull
js
lods
scas
shl
orb
or
push
outsb
lcall
push
adc
inc
cmpsb
roll
das
shrl
out
pushf
and
add
and
sbb
shrb
inc
mov
jbe
push
and
jo
xor
or
in
roll
dec
das
or
sbbl
add
jl
dec
xchg
rolb
ret
add
insl
out
or
sbb
and
loopne
push
add
jbe
pop
andl
loopne
and
mov
xor
movsb
xor
cmp
outsl
xchg
or
or
pop
xorb
fistps
add
jmp
sub
cmp
adc
xor
add
xchg
push
or
jne
and
orl
cli
cmp
cmp
cmp
je
add
sbb
push
xchg
add
icebp
enter
jecxz
push
pushf
lods
mov
lret
sub
nop
jne
or
ja
and
inc
or
xor
lock
sub
pop
pusha
jle
sbb
imul
and
es
lock
clc
add
push
shl
es
rcr
scas
xchg
les
cmp
lods
sbb
enter
insb
pop
xchg
push
cmp
pusha
sbb
mov
adc
insl
lock
mov
inc
ret
mov
push
inc
test
or
cmp
add
mov
rclb
dec
pop
cltd
sarb
ret
pop
hlt
je
mov
xchg
cmp
sbb
sbb
xor
sbb
mov
inc
inc
xlat
cmp
fildl
jne
sub
es
jne
mov
in
movsb
xlat
sub
outsb
inc
sub
outsb
nop
cmp
fisttps
lahf
mov
shll
insl
es
xor
test
xor
int3
cltd
sbb
data16
mov
stc
inc
arpl
fnsave
int
hlt
adc
cmp
xor
sti
sbb
clc
push
dec
inc
pop
cmp
pop
adc
add
jle
or
mov
add
xlat
out
or
fucomip
pop
dec
jb
pusha
sbb
mov
popf
push
xchg
shrb
adcl
xchg
cwtl
mull
repz
movsb
xchg
mov
enter
push
jecxz
pusha
xor
hlt
mov
and
add
cmp
xchg
push
inc
or
add
xor
cltd
imul
mov
ljmp
xchg
push
or
loopne
push
mov
mov
inc
dec
daa
popa
sbb
sbb
xor
mov
jge
sbb
clc
adc
sub
test
dec
xor
nop
sbb
pop
xchg
arpl
cmp
inc
inc
outsb
popa
cwtl
clc
add
or
mov
cmp
xorb
add
icebp
push
jmp
push
mov
jno
dec
iret
out
aam
inc
loopne
rolb
xchg
pop
cld
outsl
mov
aas
movsl
bound
or
adc
rolb
mov
subb
inc
push
sbb
addl
jnp
sbb
mov
xchg
fs
inc
add
mov
je
pop
fcomi
and
addr16
andl
shll
sub
outsb
movsl
jmp
fnsave
fcoms
xchg
pop
in
orl
ror
push
pop
addr16
popa
in
jo
pop
pop
cmp
mov
xor
dec
add
test
push
sbb
cmp
push
cmp
and
and
add
call
push
inc
test
mov
hlt
lea
jne
pop
addr16
jns
push
push
xor
inc
and
xor
and
and
test
jg
popf
data16
movl
inc
enter
mov
shll
jbe
je
or
cmp
or
add
mov
push
inc
xor
les
les
mov
inc
loope
mov
adc
cltd
inc
mov
fcomps
fcomps
daa
or
fiaddl
dec
subl
push
add
cmp
sub
adc
mov
sti
xchg
jecxz
mov
lea
je
sub
push
add
inc
jo
dec
shll
pop
enter
mov
test
or
arpl
aad
dec
mov
enter
adc
and
ss
popf
xor
ret
mov
loope
cltd
or
insl
push
push
dec
insb
or
or
or
lods
enter
flds
dec
sbb
popa
ljmp
ja
test
pop
sub
icebp
or
mov
push
push
push
pusha
pusha
add
js
sarl
cmp
and
cmp
rcll
mov
fcmovnb
push
mov
mov
scas
adc
mov
test
mov
test
nop
lock
jg
adc
aam
inc
xchg
jae
sbb
repnz
xchg
bound
sbb
lcall
lret
cli
shll
add
je
push
fisttpl
fsub
fnstsw
sbb
pusha
push
imul
mov
sbb
sarb
xor
aad
adc
add
jecxz
pusha
pop
nop
xchg
ror
sub
push
sbb
test
sbb
lret
and
inc
loopne
or
aaa
in
je
sbb
inc
fsubs
push
sbb
repnz
adcb
mov
and
pop
add
sub
mov
add
in
add
fidivs
or
mov
lahf
push
add
cltd
inc
adc
pop
dec
cmp
push
fs
sbb
loopne
cmpsb
sbb
cmp
fisubs
out
jbe
or
jne
inc
inc
mov
inc
inc
pop
sahf
pop
mov
xorl
jo
gs
inc
inc
bound
xor
inc
mov
sahf
inc
or
or
jmp
sti
adc
or
sbb
inc
pop
dec
mov
or
mov
pop
xchg
out
push
sub
movsl
and
mov
call
rolb
pop
add
movsb
out
pop
das
adc
lock
sbb
push
pop
lret
jae
mov
cmp
inc
mov
adc
mov
jp
ja
mov
mov
aad
push
inc
mov
jnp
or
mov
test
add
inc
inc
cs
iret
mov
inc
lock
shlb
std
comiss
sbb
xchg
je
and
lea
adc
sbb
inc
test
and
lret
or
pop
enter
add
pop
inc
dec
pop
and
cmp
pop
je
paddq
in
pop
push
pusha
adc
pop
cmp
xor
test
jne
and
nop
dec
cmp
mov
or
call
mov
xor
loope
das
jecxz
mov
inc
xor
inc
cmc
and
xor
adcb
add
sbb
add
in
sbb
inc
adc
and
dec
dec
or
ss
and
insb
popf
fidivl
adc
pushf
and
inc
mov
pop
popa
and
inc
fsubrs
cmp
dec
fdivrs
xor
adc
insl
sarb
or
call
and
mov
adc
and
push
sbb
jmp
scas
cwtl
inc
add
adc
push
jg
adc
mov
or
cwtl
pop
test
popf
rcll
pop
out
daa
push
jle
inc
ss
pop
ds
sbb
out
repz
sbb
inc
add
cmp
inc
push
sbb
xor
in
stos
sub
fsubp
pusha
adc
push
imul
sub
imul
jb
jns
add
sub
xchg
ja
in
add
and
sbb
add
cmp
push
lret
repnz
or
jo
das
mov
adc
loop
dec
inc
into
lods
sbb
dec
sbb
mov
repz
aam
push
cwtl
subb
cmpxchg
movsb
pop
jg
movl
adc
adc
js
adc
pop
sbb
mov
and
test
orl
and
push
xor
and
or
add
in
pop
loop
inc
cltd
xor
dec
xor
lods
cltd
adc
push
adc
mov
inc
addb
cmp
flds
mov
adc
add
push
add
adc
clc
add
push
mov
xor
lsl
insb
aaa
adcb
pop
gs
push
inc
push
fisubs
jecxz,pn
add
adc
mov
adc
add
into
fstpt
inc
mov
push
pop
sbb
mov
mov
push
mov
rorl
lock
push
lods
outsl
fistpl
push
outsl
xor
pop
or
or
inc
sbb
cmp
out
push
mov
cwtl
dec
cmp
and
sti
and
ljmp
sub
or
shlb
pushf
shlb
ljmp
int
and
mov
test
cmp
popa
adc
loopne
rcrl
cmp
lcall
sub
aaa
xor
pusha
pop
fcmovnb
cmp
xor
xor
sti
test
rcrb
xor
xchg
jo
popa
aaa
xchg
cmpsl
pop
xor
adc
int
insb
push
mov
push
js
aam
stc
adc
or
inc
mov
push
je
fildll
arpl
in
mov
mov
int3
in
cld
mov
cmp
orl
imul
cmp
shlb
or
pop
push
enter
imul
mov
insb
je
movsl
dec
or
pop
or
icebp
sbb
rorl
loopne
sbb
pop
sub
and
or
hlt
clc
out
xchg
xchg
and
cmp
xchg
pop
jmp
inc
xchg
dec
adc
je
push
or
cmp
in
jae
cs
fwait
adc
dec
xchg
sbb
movsb
xor
jo
cld
pop
add
cs
mov
pop
fstpl
push
sub
movsb
xlat
stc
pop
in
pop
sbbb
sub
push
icebp
insb
adc
or
add
dec
scas
daa
arpl
iret
adc
or
sbb
add
mov
inc
push
or
and
mov
sub
insb
out
pop
xor
std
dec
pop
inc
push
adc
mov
imul
pop
and
sbb
push
add
adcb
adc
loop
aam
or
js
jmp
cmp
flds
push
cld
inc
adc
in
mov
dec
js
and
jmp
sub
insl
sbb
pop
sub
jno
aad
movsb
xor
pop
xor
push
or
mov
inc
add
sahf
fstpt
sub
xchg
add
mov
xor
mov
lea
xor
fs
fs
roll
push
push
mov
daa
inc
loope
adcb
outsl
add
cmp
pushf
and
and
aas
push
mov
sbb
test
fisttps
mov
jmp
push
nop
lods
mov
dec
outsl
xchg
jne
pusha
pop
push
ret
mov
push
dec
cwtl
movl
inc
push
push
lods
fsubrs
mov
jne
pop
adc
aaa
ljmp
test
and
fcoml
and
or
adc
int3
mov
adc
pop
sbb
out
adc
or
adc
das
aam
iret
dec
sbb
push
add
jne
cmc
cmpb
adc
mov
jecxz
jg
jbe
xchg
fsubs
hlt
movb
push
fwait
daa
cmp
push
cld
das
sbb
sbb
and
fcoms
arpl
cmp
into
ss
jmp
mov
add
lcall
sbb
mov
inc
pop
movsb
shlb
inc
or
jecxz
xor
xlat
mov
xchg
subl
jmp
dec
mov
rolb
in
mov
pop
or
add
sbb
jb
movsl
stc
push
popa
repz
jne
cmp
sbb
frstor
sub
mov
pushaw
ss
or
dec
sub
inc
add
test
pushf
in
mov
jle
inc
sbb
inc
pop
mov
mov
push
jmp
sbb
mov
aad
dec
nop
push
ss
and
pop
or
stos
mov
sub
mov
jns
adc
hlt
in
add
les
mov
je
movl
insb
loop
sub
sub
mov
ljmp
sub
sar
dec
roll
add
push
mov
rol
loop
lds
sar
outsl
addr16
loope
sbb
rcl
adc
xchg
syscall
stos
push
adc
addr16
xor
icebp
in
or
xchg
push
dec
jno
pop
mov
and
xchg
mov
mov
sbb
mov
sbb
insb
or
dec
clc
jo
test
sbb
push
add
movsl
enter
and
or
and
mov
hlt
jbe
fistpll
push
push
in
in
test
pusha
les
cmp
cmp
pop
jbe
push
outsb
cmp
mov
fprem
add
popa
and
add
xchg
cmpsb
xor
inc
adc
std
inc
xchg
inc
xchg
push
push
mov
sub
jae
sbb
xchg
xchg
test
es
mov
sahf
add
add
mov
icebp
test
sbb
lods
data16
inc
nop
mov
ja
push
fstpl
inc
push
pop
movups
adc
push
test
fwait
and
sub
pop
cmp
sub
add
loopne
loopne
adc
jge
dec
loopne
push
das
dec
inc
dec
inc
adc
inc
mov
push
pop
outsb
xor
aam
aam
test
dec
rol
dec
push
jns
out
shl
pop
scas
cltd
orb
or
add
pop
inc
adc
lahf
ss
clc
imul
xchg
sbb
addr16
ljmp
sub
jne
push
mov
addr16
daa
fs
pusha
push
addr16
push
or
int3
rclb
pop
mov
sbb
push
and
xchg
sahf
inc
mov
inc
ss
mov
or
or
mov
or
and
shlb
add
sub
pop
xor
mov
pop
push
xor
test
cwtl
test
inc
loopne
adc
in
test
mov
fwait
cmp
or
push
ja
or
and
push
push
cmp
jne
pop
data16
adc
dec
roll
in
dec
adc
push
adc
or
sbb
leave
test
shlb
sbb
bound
adc
sub
es
ljmp
pop
cmp
xchg
cmp
inc
inc
hlt
rclb
imul
pop
lods
add
sti
cmpsl
and
add
mov
jge
ja
pop
aam
rolb
repz
int3
add
mov
add
inc
lds
je
sbb
add
andl
das
sbb
orl
xor
cmp
and
and
test
mov
rolb
push
adc
push
push
sub
in
jbe
pop
idiv
int3
xchg
jo
xchg
jns
jmp
sbb
inc
jo
pusha
add
aaa
dec
mov
inc
and
add
mov
lahf
sbb
cmp
sti
sbb
push
loopne
inc
dec
scas
xorb
ja
pusha
test
pop
pop
clc
add
scas
mov
inc
xor
push
inc
adc
out
push
test
andl
cmp
push
inc
insb
cs
dec
sub
pop
add
jmp
inc
mov
lods
cwtl
jp
xchg
sbb
scas
sti
xor
xchg
jne
nop
insb
mov
jno
enter
andb
push
push
addl
mov
lahf
mov
mov
inc
pushf
cmpsl
push
inc
jmp
adc
xchg
adc
into
mov
test
push
loopne
sbb
and
cmp
test
fnstcw
test
xchg
push
pusha
in
movsl
mov
cltd
stc
or
jns
adc
pusha
cmpl
pusha
jne
xchg
cmc
xor
cmp
adc
add
sbbl
xchg
jecxz
sub
dec
or
jno
cmp
jbe
js
or
xor
lods
pop
pop
daa
push
jo
jp
mov
or
add
icebp
add
and
sub
mov
jb
adc
pop
xchg
add
loop
cmp
add
or
rcrb
pand
mov
push
adc
inc
sbbl
out
addr16
test
push
sub
sub
shrl
out
add
pop
inc
push
mov
push
pop
repz
mov
push
push
ja
add
push
adc
mov
or
and
orl
cmp
lea
in
push
push
or
push
push
movsl
nop
ss
add
inc
and
add
inc
jne
push
lcall
sbb
je
ja
imul
lcall
push
add
and
mov
pop
sar
pop
out
imul
jge
mov
sub
lods
aaa
dec
sbb
shll
adc
mov
jb
es
or
push
or
push
lods
sbb
idivl
loopne
sub
pop
inc
add
insb
popa
jmp
adc
lea
push
imul
mov
sbb
inc
dec
sub
mov
pop
sub
mov
pop
mov
push
sti
fdivs
pop
or
jo
and
add
nop
clc
mov
mov
out
shlb
aaa
in
jae
cld
mov
mov
adc
addl
nop
ss
sub
mov
scas
mov
lret
sub
sub
and
nop
add
cmp
and
add
jle
push
ss
xchg
lea
aad
pop
ss
neg
add
gs
das
out
jo
or
out
sub
and
adc
mov
loope
jg
pop
and
ja
cmp
pop
pop
popa
out
imul
int
ret
mov
movsb
into
mov
jno
add
adc
sahf
adc
push
gs
pop
fucomi
mov
inc
or
jle
ds
add
pop
fimuls
fildll
mov
pop
mov
inc
and
mov
sub
out
sub
inc
xchg
push
add
push
mov
into
xchg
jmp
lea
fsubrs
jo
lods
push
inc
cmp
add
adcb
mov
xchg
divl
xchg
icebp
xchg
rorb
xchg
lea
iret
int
outsb
dec
add
adc
fndisi(8087
xchg
jl
lea
loope
xor
roll
inc
adc
js
shlb
push
cmovnp
mov
fcoml
mov
or
xorb
test
cmpb
cli
mov
pop
adc
lcall
arpl
push
or
jle
xchg
call
mov
xchg
add
and
loopne
cmpsb
cmp
push
stc
roll
xchg
pop
repnz
add
or
dec
cmp
movsl
popf
mov
inc
xorl
insl
mov
fdiv
pop
lock
add
cwtl
sbb
and
scas
mov
and
inc
ficoms
adc
rorb
sbb
jo
andl
popa
or
xor
in
shrb
push
aas
mov
jmp
add
inc
dec
aam
sbb
push
sbb
daa
push
xor
shrl
movsl
add
add
inc
push
rcr
sbb
mov
popf
emms
xchg
adc
sbb
xchg
adc
mov
test
add
xor
inc
push
dec
sub
sti
pop
push
cmp
je
test
aaa
lds
imul
sbb
ret
adc
mov
rolb
jne
nop
into
add
ret
xchg
and
xor
lret
pop
add
and
js
int
sub
das
push
popf
rcl
mov
jp
jae
pop
js
add
add
adc
inc
je
sub
inc
pop
bound
add
mov
cwtl
and
cmpsb
fld
inc
add
add
jo
cmp
pushf
or
mov
mov
jl
jns
lock
sub
mov
sbb
popf
mov
aam
add
cmp
pop
cld
or
fbstp
aam
add
in
add
jo
shlb
mov
add
movl
nop
sbbb
gs
fcmovnbe
outsl
decb
lea
push
outsl
mov
cltd
adcb
xorl
mov
ret
sbb
das
add
push
mov
jecxz
notl
jge
inc
push
or
inc
inc
xchg
lcall
add
and
and
imul
add
es
add
cltd
data16
xorl
leave
fadds
sbb
jge
inc
pop
adc
fsubrl
push
jnp
inc
dec
or
jbe
jle
sti
cmpsb
mov
repnz
in
cmpsb
cmpsb
subb
jl
mov
xor
int3
das
insl
jmp
cmpsb
pusha
push
sub
inc
fidivs
inc
cs
sbb
pop
inc
insl
mov
mov
dec
imul
xchg
or
sbbl
sbb
xchg
mov
or
mov
imul
mov
pop
in
or
push
adc
xchg
insb
dec
and
push
sti
insl
divl
sub
rolb
imul
aaa
adc
pop
xchg
xchg
dec
mov
adc
jg
push
inc
icebp
fstpl
fstpl
popa
sahf
pusha
jl
dec
es
push
ds
and
push
cmpsl
xchg
loopne
inc
sbb
adc
xor
nop
and
jl
add
jne
dec
and
push
insb
inc
adc
mov
in
jl
hlt
shll
xor
pop
inc
jecxz
ljmp
inc
sub
cmp
or
or
sbb
mov
xor
add
repnz
jg
jl
mov
mov
mov
or
mov
add
add
add
inc
inc
inc
or
cmp
mov
xchg
fisttps
sbb
cmp
shll
push
outsb
adc
push
rcrb
push
insl
das
and
sarb
sbb
jg
pop
ret
xchg
fmull
cs
sub
xor
mov
insl
movsb
sbb
push
sbb
inc
xchg
lahf
cld
jge
mov
repz
mov
push
arpl
test
ret
add
leave
fdivr
xchg
or
adc
out
and
enter
dec
pop
sbb
and
xchg
gs
mov
jo
and
aad
mov
dec
pop
add
hlt
inc
and
sbb
push
jmp
jmp
mov
and
fildl
or
stc
pop
rcr
movsb
sub
xchg
pop
adc
cmp
xor
xchg
into
mov
out
adc
movsb
inc
mov
dec
addl
adc
sti
xorb
xor
mov
sbb
orl
lods
mov
lcall
and
dec
sub
shlb
js
add
ret
mov
mov
movsb
sbb
jmp
mov
mov
imulb
jne
or
fs
push
pop
jnp
pop
orl
in
push
or
lods
cwtl
adc
ja
notb
mov
inc
mov
add
or
xchg
outsl
xchg
add
and
cmp
and
fisttpll
popf
inc
add
and
cltd
test
mov
les
arpl
inc
mov
adc
rorl
push
in
test
inc
inc
push
adc
inc
adc
xchg
sub
mov
push
dec
push
mov
adc
xor
js
pop
pushf
jmp
xchg
sbb
outsl
enter
xor
cmp
mov
pushf
mov
mov
imul
xor
add
imul
xchg
rclb
push
sbbb
and
nop
pop
out
xchg
cltd
daa
pop
sbb
je
sbb
lea
inc
dec
inc
cmp
or
sarl
fadds
jne
mov
lea
test
sub
add
adc
pop
jl
cmp
or
cmc
xchg
inc
xor
mov
cmp
mov
mov
les
mov
sub
call
gs
jne
inc
sub
or
sbb
cmp
enter
js
inc
adc
xchg
roll
xor
xchg
add
or
dec
ja
and
enter
push
adc
or
shll
cmpsl
cmp
sub
and
or
call
or
mov
repnz
cmp
imul
mov
loope
cwtl
mov
add
leave
sub
adc
ret
adcb
mov
xchg
lds
sub
xchg
popa
addl
nop
or
add
and
rcrl
shlb
es
jge
or
and
and
add
sbb
scas
out
jo
pop
loope
mov
add
fsts
push
ja
pop
jp
sbb
pop
add
adc
cmpsb
nop
sbb
add
mov
inc
or
dec
xchg
jmp
xor
or
push
push
mov
filds
adc
test
cmp
pop
pop
aam
sbb
pop
inc
push
mov
jp
das
adc
push
cmp
adc
pop
test
out
test
xchg
add
rorb
add
add
nop
add
fwait
sar
cli
lods
add
movzwl
add
test
leave
lea
scas
shrd
mov
add
rol
inc
mov
push
add
lret
pop
inc
or
add
add
xchg
lret
sub
inc
nop
sbb
push
fmuls
les
jo
test
enter
pop
jmp
loope
pop
push
rorb
jo
nop
mov
inc
test
jge
mov
jnp
lea
sub
mov
dec
adc
dec
add
pusha
mov
xor
mov
sub
and
jecxz
push
jge
or
test
into
mov
ror
push
add
xchg
sbb
nop
or
mov
outsb
dec
insl
daa
lods
imul
inc
addb
inc
push
adc
sbb
mov
cmc
jp
mov
out
jp
shlb
or
add
fistl
shl
movb
pusha
adc
fnstenv
cmp
pop
out
cwtl
jl
pop
mov
xchg
nop
sub
leave
xchg
xor
sub
ret
sub
sub
test
fisubl
sbb
xchg
movsl
xor
dec
fisttps
cmpl
js
js,pn
mov
fwait
lret
ret
arpl
lcall
and
sub
and
sub
insl
jbe
pop
add
lds
add
pop
lds
add
dec
jmp
lock
scas
or
lcall
lods
mov
add
fwait
mov
add
loop
dec
and
adc
popa
adc
mov
mov
jo
in
movl
push
xor
jne
pop
repz
arpl
inc
es
out
orl
jo
lods
jg
sub
pop
shrb
ss
and
lea
ljmp
roll
add
in
pusha
imul
andl
and
dec
daa
jno
nop
adc
orb
movsb
inc
add
mov
add
test
cmp
pop
pop
addr16
aaa
push
inc
cmp
in
popa
hlt
std
in
push
adc
jg
sbb
outsb
sbb
xor
setbe
pop
in
test
pop
or
stos
inc
inc
inc
aam
jmp
test
lcall
pusha
dec
or
and
ss
stos
es
mov
shrl
loopne
repnz
arpl
inc
dec
clc
push
mov
lret
test
bound
dec
into
pop
popa
adc
and
mov
add
inc
xchg
daa
or
stc
sarb
mov
adc
mov
inc
fcmovnb
or
scas
fbld
test
les
movsb
rolb
fs
sub
shl
jmp
shlb
add
mov
xchg
mov
inc
mov
aam
jns
pop
je
sbb
lea
mov
jb
push
dec
push
or
adc
inc
inc
inc
adc
sub
cmpsl
xchg
les
int3
adc
in
inc
fisubl
rorw
jns
inc
pop
adcb
or
push
xchg
das
or
mov
push
mov
jl
jns
lea
les
xor
sbb
es
lods
sub
int
insb
sub
icebp
lea
ja
xchg
pop
cmp
lock
dec
mov
xor
xor
mov
mov
or
dec
test
pop
lahf
or
mov
sti
fisubrs
mov
movb
mov
sub
dec
cmp
or
fmuls
cmp
xlat
and
add
nop
inc
and
pop
or
ss
or
notl
pop
ret
adc
popa
or
sti
xor
jmp
mov
jmp
call
xchg
test
xorl
mov
aaa
pop
daa
pop
push
popa
add
mov
jecxz
inc
adc
inc
sbb
xchg
icebp
cmp
inc
sahf
dec
and
cmc
and
jnp
push
mov
lahf
scas
mov
mov
mov
mov
xor
cs
movsb
mov
inc
mov
jne
repz
push
sub
pop
test
xor
loopne
dec
jno
sbb
adc
outsb
xchg
mov
ret
pcmpgtb
popa
pusha
mov
adc
inc
test
out
xorl
hlt
sub
or
jg
incb
add
mov
sub
xchg
or
in
bound
jmp
inc
loopne
fcoms
loope
ret
ret
inc
jb
test
ljmp
and
dec
imul
mov
leave
inc
pop
or
adc
fsts
add
leave
push
inc
das
push
inc
ret
pop
jns
in
jmp
fists
mov
int
xor
ret
sub
subl
xlat
arpl
xchg
and
insl
xchg
dec
fisubrl
dec
mov
add
aaa
adc
mov
jno
xorb
les
sahf
cmp
fadd
daa
mov
add
xchg
cmp
inc
cmp
lock
inc
add
inc
inc
inc
stos
jnp
cmp
dec
push
push
pop
cmp
jno
pop
pusha
insb
das
push
add
inc
andb
add
bound
bound
cmp
enter
nop
mov
and
sub
sub
pop
push
ret
push
sub
outsl
push
shlb
pop
lock
inc
adc
insb
pop
mov
mov
adc
mov
or
ja
mov
rclb
or
add
push
pop
imul
fildl
or
push
add
sub
pop
fiaddl
pop
xor
jo
push
push
addl
dec
and
popl
imul
pop
aaa
les
popa
mov
mov
insl
addr16
pop
fisubl
push
sbb
movsb
sbb
cld
fisubl
or
inc
shl
or
jae
std
add
jmp
cmpl
xor
sub
test
mov
mov
je
ret
sbb
and
adc
xchg
add
mov
cmp
idivl
icebp
fxtract
and
cmp
mov
jbe
scas
testb
sbb
or
rolb
repnz
loopne
pop
dec
jl
or
jl
pop
dec
push
ss
jo
jge
xlat
mov
xor
xor
xchg
movsl
test
das
lods
call
and
sbb
shll
add
lock
add
push
test
add
sub
lret
jbe
mov
add
sub
bound
call
mov
sti
xor
mov
pop
jg
sub
or
lret
add
test
adc
sbb
or
sub
jbe
add
xor
adc
pop
mov
jo
dec
ret
jmp
test
push
ret
roll
popa
mov
sub
push
add
std
pop
or
lea
push
lds
dec
cwtl
jnp
lret
add
inc
lock
dec
dec
add
add
mov
sub
xchg
adc
jae
sbb
pop
dec
cmp
push
lods
dec
ret
outsl
pop
pop
cmp
lea
jp
jne
mov
fiadds
sub
in
dec
jge
adc
in
dec
dec
or
jmp
adc
push
push
and
test
mov
inc
cmp
pop
out
fnsave
sahf
sub
pop
jbe
dec
js
pop
jo
dec
mov
test
fstps
fidivs
inc
push
out
cwtl
lods
jae
lock
adc
bound
ja
clc
outsb
popa
addr16
jg
stos
adc
inc
cmpsl
pop
adc
mov
push
mov
and
inc
mov
mov
sbb
fstl
jecxz
and
mull
enter
leave
mov
iret
cmp
xchg
mov
movl
adc
idivl
ds
and
xchg
enter
push
mov
repnz
and
inc
xor
inc
jmp
addl
and
iret
dec
rorb
rclb
inc
mov
pop
inc
pop
push
or
push
loope
adc
loop
or
lahf
cmp
shl
pop
dec
cmc
in
add
int
fiaddl
mov
fistl
sub
cmpl
call
imul
pop
sbb
xlat
out
dec
mov
jl
mov
lods
mov
rorb
dec
add
add
cmp
fs
adc
inc
pop
add
imul
cmp
js
xchg
lods
push
inc
out
call
xchg
xor
xchg
xorl
call
dec
adc
xchg
and
dec
mov
add
mov
xchg
pushf
push
push
inc
and
push
mov
fimull
or
pusha
add
mov
rorb
std
ja
scas
jns
or
jle
or
adc
inc
sbb
lret
jl
adc
sbb
outsl
enter
and
adc
sbb
loope
push
xchg
pop
push
or
mov
out
mov
ret
cmc
or
push
xor
sub
cmp
add
aam
adcb
and
subb
push
in
hlt
or
jecxz
inc
loop
cmp
ja
in
mov
xchg
ja
out
push
xorb
xchg
xchg
add
xor
mov
jbe
push
sub
pop
adc
inc
pop
imul
adc
scas
jno
adc
mov
jge
sbb
push
pop
pop
sub
stc
sbb
add
fidivs
cmp
shll
jne
test
jnp
mov
sbb
add
loop
add
div
in
test
pop
pop
sub
sub
jbe
add
jbe
imul
ja
jmp
add
xchg
loopne
jp
add
mov
test
movsl
pusha
sbb
mov
stos
test
xchg
xchg
xchg
lds
imul
ds
or
popa
jl
lea
cs
adc
jl
mov
add
les
dec
test
aas
lret
mov
mov
sbb
dec
cmc
icebp
adc
push
mov
insb
inc
fisubrs
in
push
inc
dec
dec
mov
add
popa
mov
ss
dec
xchg
jg
xlat
xor
pop
and
add
rolb
ret
jp
lret
lahf
xchg
dec
sub
fisubrs
shrl
mov
insl
xchg
xor
push
enter
xor
hlt
mov
xlat
lock
gs
popl
repnz
pop
outsb
mov
dec
cld
das
and
fwait
add
ja
or
cmp
mov
or
mov
cmp
popf
in
adc
sbb
orl
or
push
add
pop
loope
in
inc
or
test
lahf
lahf
cwtl
adc
adc
sbb
sbb
iret
iret
iret
cld
pushf
and
and
lahf
sub
push
cmp
sub
ss
sarl
dec
xchg
add
dec
pop
adc
mov
dec
mov
dec
mov
out
add
addr16
pop
ret
pop
or
daa
mov
xchg
pusha
rorb
pop
inc
int
or
sbb
inc
push
cmc
adc
subb
flds
mov
add
sarb
shll
xor
cmp
bound
pushf
and
xorl
fldt
ret
adc
imul
fsubs
je
xchg
jg
inc
movsb
insl
cmpsl
je
push
or
fistl
sub
fbld
mov
repz
bound
and
mov
psllq
push
or
aaa
dec
or
adc
lock
cmp
cwtl
idivl
jle
mov
outsl
or
mov
loop
or
mov
or
shlb
das
and
fdivs
and
or
sub
imul
rcll
mov
dec
nopl
mov
scas
push
xchg
xchg
out
stc
mov
inc
aas
fcompl
sbb
xchg
into
xchg
mov
in
hlt
pop
outsb
push
pop
jo
orw
out
push
sbb
pop
push
and
inc
in
xor
or
xor
push
inc
inc
sbb
or
testb
sub
rolb
mov
xchg
push
stos
xchg
jno
fsubl
jle
xchg
pop
jno
out
xchg
cs
add
xchg
sbb
inc
fcomps
jl
pop
or
in
idivb
andb
insl
out
xor
rolb
or
imul
fmull
mov
imul
sub
lock
mull
lret
xrelease
cmp
pop
imul
inc
jle
iret
or
lds
incl
mov
fcmovb
out
aaa
bnd
incl
psrad
cmp
add
stos
addb
sbb
jl
psubb
outsb
imul
adc
cmp
jge
movb
cmpl
inc
or
adc
push
or
dec
add
or
mov
dec
cltd
fsubs
push
push
mov
or
jnp
mov
xchg
enter
test
xchg
push
sub
adc
push
mov
add
add
push
jb
add
out
mov
jle
test
xchg
fsubrl
sbb
push
push
test
xor
jo
sbb
and
sbb
jmp
and
test
jne,pt
and
jns
cmpb
jmp
popa
adc
loopne
jno
sbb
mov
cmp
testb
mov
push
mov
add
push
inc
test
and
cmc
adc
mov
xchg
outsl
adc
mov
add
mov
loope
pop
call
mov
addr16
movsl
sbb
mov
xchg
hlt
push
sbb
mov
das
rorl
adc
pop
addr16
loopne
and
xchg
lods
ja
shl
mov
insb
daa
add
popf
sub
sub
mov
xchg
std
push
daa
mov
dec
add
test
aam
inc
scas
test
mov
jle
jmp
sub
into
xchg
jo
jle
and
lock
sub
add
sbb
cld
inc
sbb
push
mov
loopne
sub
fcomps
ja
rcll
push
fbld
pushf
jnp
inc
add
pop
push
push
adc
adc
push
dec
and
test
dec
aaa
xor
iret
jno
out
and
mov
push
sbb
push
cmpsb
insl
adc
lret
push
or
push
enter
dec
imul
dec
aam
inc
adc
jne
sbb
push
dec
jns
dec
dec
xor
mov
jl
popf
in
push
mov
mov
add
push
loopne
inc
pop
cwtl
out
inc
cltd
inc
pop
pop
stc
pop
sub
cmp
mov
jmp
lods
ror
insb
add
mov
lahf
je
jnp
push
mov
arpl
xchg
push
enter
js
rorb
mov
inc
stos
lods
aaa
loope
push
or
dec
inc
mov
addr16
int
mov
ja
stc
test
mov
fnstenv
cmp
in
cmc
dec
pop
aas
fsubrs
sub
jnp
lahf
pop
or
cmp
inc
mov
inc
rorb
xchg
rolb
mov
mov
pop
sbbb
nop
sbb
fdiv
rcl
fidivrl
jmp
dec
into
cli
pop
fwait
fwait
jo
fldl
scas
mov
cmc
pusha
mov
shll
pop
pop
xlat
mov
clc
cmp
mov
mov
add
adcb
or
cmpsl
iret
gs
sub
lock
mov
mov
xor
enter
test
mov
addb
sbb
sti
mov
rcl
dec
shl
jb
jg
rcrl
jb
cmpl
aam
pusha
or
insb
cld
jg
icebp
cmpsb
arpl
je
js
pop
lret
repnz
or
and
sub
sub
inc
js
add
aaa
xor
subb
mov
cmpl
xchg
gs
or
jg
pusha
or
mov
jmp
fnstenv
cmp
jne
xorb
pop
adc
dec
xor
add
lret
loope
xor
das
push
out
ret
into
test
fimuls
les
popf
cwtl
enter
jae
sub
add
insl
cmp
push
je
insb
add
imul
leave
add
pushf
jge
arpl
push
push
mov
cmp
cmpsl
bound
dec
mov
jmp
add
inc
add
fcom
jge
sbb
fldl
rolb
jp
orl
xor
dec
sbb
jle
mov
loope
lods
cmp
cld
addr16
imull
imull
loope
inc
pop
mov
or
cmp
xchg
dec
sub
je
dec
es
add
push
jb
or
inc
rolb
xchg
xor
xor
adc
movnti
add
js
lcall
ret
add
push
inc
add
push
addb
rcrb
inc
mov
adc
lock
inc
arpl
adc
pop
lea
sub
hlt
gs
inc
cmc
popa
stos
mov
out
lea
jnp
pop
jp
hlt
push
push
subl
ret
pop
les
aad
ss
adc
xor
jns
sahf
movsb
cmp
sbb
fstpl
inc
mov
xchg
xor
dec
or
test
adc
daa
and
inc
push
insb
push
cmp
and
mov
push
dec
insb
xchg
inc
out
sub
push
das
add
add
aaa
mov
jle
and
xchg
das
dec
enter
sbb
insb
pop
ja
adc
sub
xchg
ljmp
or
cwtl
int3
cmp
nop
xchg
sbb
icebp
sub
daa
shll
rcrl
lret
or
mov
add
or
mov
filds
dec
pop
repnz
sbb
mov
mov
lds
jbe
cmp
jne
inc
sbb
add
loope
dec
adc
lock
and
lods
test
adc
xchg
or
pop
jg
xlat
jo
xor
mov
in
or
fildl
cmpsl
sub
orb
adcl
fnstcw
mov
std
insl
mov
pop
and
mov
sub
insl
xlat
pop
pop
lcall
push
and
test
mov
cmp
inc
insl
jne
pop
sbb
add
jmp
push
fadd
cmpsl
jns
imul
jmp
cs
adc
leave
cs
sarb
jle
inc
enter
xchg
les
add
inc
outsl
pushf
in
mov
roll
add
loope
adc
push
fnstenv
repz
xor
inc
js
mov
dec
dec
xchg
jne
stos
add
add
inc
popf
push
push
cmp
push
test
xchg
incl
popa
test
xor
shr
mov
adc
mov
lods
or
cwtl
in
insl
hlt
lret
and
int3
jl
movsb
pop
mov
add
mov
adc
and
inc
sbbb
or
dec
jmp
mov
xchg
mov
in
adc
xchg
mov
add
sbb
data16
mov
xchg
inc
or
shll
or
dec
push
pushf
sbb
jle
sub
mov
mov
pop
sbb
and
pushf
lcall
lea
mov
pop
mov
lods
andb
cmp
shl
jge
ror
mov
add
add
das
pop
xchg
imul
pop
sbb
int3
lret
mov
and
or
lea
cmp
inc
xor
jmp
jge
js
fisttpl
xor
mov
cmp
and
cwtl
xor
dec
add
xchg
push
call
mov
ret
cltd
add
mov
xchg
cmpsb
cmp
push
das
cld
mov
hlt
mov
pop
xchg
movsb
add
lea
sub
pop
and
add
into
lea
push
mov
enter
add
fldt
das
pop
mov
inc
orl
stos
add
and
gs
enter
mov
sbb
inc
dec
pop
nop
js
pop
and
jno
divl
push
or
push
xor
sbb
inc
sub
inc
inc
jo
cld
sbb
leave
inc
mov
lock
mov
adc
or
jecxz
add
adc
and
or
aam
ret
mov
inc
std
call
jns
sahf
mov
or
movsl
mov
test
aam
popa
xor
xor
xor
mov
and
xchg
dec
insl
mov
cmp
cmp
or
testl
mov
scas
pop
inc
add
and
mov
stos
sbb
imul
dec
sub
add
push
push
test
and
xor
sub
adc
mov
xor
js
push
mov
xlat
sub
stos
notl
dec
sbb
mov
xchg
xor
adc
sub
sti
jo
ret
negb
mov
nop
add
in
pop
xor
or
rcll
sbb
fnsave
adc
push
jge
jl
or
jle
push
shl
adc
push
loope
dec
rcr
shl
dec
and
cmp
dec
adc
adc
pop
adc
stos
push
mov
sbb
std
test
pop
mov
add
jecxz
mov
scas
out
test
sbb
and
sbb
xchg
fs
dec
hlt
jg
es
inc
mov
mov
jb
xchg
loop
andl
lea
imul
dec
pusha
cmp
sub
shrl
int3
enter
sbb
bound
insb
addl
dec
or
mov
jp
mov
stos
stos
in
cmp
or
inc
adc
int
loop
jl
add
jmp
mov
ja
inc
out
and
sub
cmp
or
in
shl
push
cmp
arpl
adc
dec
ss
xor
xchg
cs
add
scas
xchg
ss
ror
jl
pop
scas
dec
pop
mov
lds
jb
and
jae
lods
les
fisubs
movzbl
rcrb
sub
out
arpl
jge
test
pop
adc
mulps
je
sti
mov
add
sub
test
sar
cmp
xchg
rorb
lock
in
jnp
jle
and
insb
or
mov
dec
jl
jge
inc
jmp
push
nopl
sbb
jmp
mov
xchg
out
add
cmp
jle
orb
adcb
imul
lds
dec
sub
mov
and
jge
js
push
out
inc
adc
adc
sbb
subb
cmp
pop
sub
add
xchg
sbb
shll
decl
pop
xor
sub
ja
or
or
mov
dec
sbbb
test
push
jbe
inc
inc
xchg
adc
mov
popl
clc
cmpsb
push
in
inc
icebp
cmp
imul
jge
xchg
xchg
or
sbb
int3
dec
jge
sar
test
int
js
cmpsb
mov
inc
cmp
popa
xor
dec
imul
aad
sbb
das
or
xor
test
sbb
cmc
jo
iret
mov
push
arpl
sbbb
rolb
pop
aaa
jb
xchg
movsb
imul
adc
sahf
mov
inc
xchg
xchg
cmpsl
push
test
xor
mov
jo
jae
jbe
cmp
and
jb
and
int3
sbb
sub
dec
inc
sbb
push
int
lea
xor
repnz
cmp
inc
push
es
or
push
cmp
inc
mov
pop
sti
lods
addr16
frstor
rcrb
in
sub
push
mov
or
mov
out
shll
push
dec
loop
mov
adcl
and
xchg
add
or
push
and
push
and
out
push
movsb
sbb
pop
or
pop
or
jmp
cmp
addr16
stos
cmp
jne
sbb
jmp
push
movsl
stos
andb
and
mov
insb
jne
scas
notb
pop
add
and
clc
lock
andl
jbe
cmp
add
xchg
movswl
shlb
test
and
push
adc
mov
dec
ja
fistpl
or
add
dec
push
loopne
pop
jmp
sbb
jl
das
mov
add
push
jne
in
adc
push
cmp
sbb
outsl
xchg
test
sbb
loopne
rcrl
and
enter
pop
shll
or
dec
add
add
adc
jns
push
insb
adc
inc
xor
xchg
jo
jmp
addr16
sub
sub
sub
xchg
dec
jle
cwtl
sbb
sar
pusha
sbb
push
dec
cmp
out
cmp
xor
or
inc
jecxz
clc
adc
xchg
pusha
movl
inc
rorb
fdivrs
jecxz
and
loope
addr16
mov
icebp
push
jmp
jge
fs
add
or
movsb
xchg
mov
out
scas
imul
inc
pop
jne
das
aas
xor
int
fucomi
or
and
cmp
sbb
mov
or
adc
mov
movsb
sbbl
sahf
sbb
sub
sub
mov
pop
xor
bound
mov
add
add
jbe
subl
jmp
mov
out
fbld
dec
xchg
jmp
sub
call
push
mov
mov
loope
es
sbb
setg
popa
inc
jmp
js
push
pop
mov
mov
xlat
xchg
pop
add
movsb
push
popf
adc
add
add
call
dec
push
loope
inc
lods
outsl
enter
cwtl
ret
mov
hlt
xchg
pop
inc
mov
leave
daa
adc
and
xor
jo
sbb
aam
or
addr16
sub
lock
xchg
jno
mov
mov
mulb
jne
adc
bound
mov
inc
cwtl
push
ret
iret
add
mov
stos
sub
mov
mov
xor
mov
pop
or
or
and
or
and
in
jne
test
loopne
inc
inc
mov
mov
add
jbe
fdivrs
in
mov
daa
inc
roll
lea
add
mov
cmp
cmp
je
mov
add
ret
jg
adc
adcb
sbb
fildl
ret
cmpb
mov
or
movsb
xor
lea
xchg
ja
das
sti
out
sub
or
or
xor
les
out
dec
fld
iret
hlt
loopne
inc
mov
inc
inc
stos
mov
jecxz
inc
jle
sbb
sbb
pop
adc
shll
mov
movl
push
push
sbbl
add
daa
rorb
add
mov
aas
sbb
cmp
push
fsubrl
lret
mov
js
push
addr16
and
lock
xchg
iret
les
int3
jle
mov
inc
aam
mov
mov
inc
push
jg
insb
fwait
xchg
rolb
adc
mov
xor
ja
jge
inc
pop
loopne
sbb
mov
inc
mov
ss
aas
lods
ucomiss
jge
scas
movzbl
mov
ret
movd
fwait
pop
pusha
sbb
cwtl
pop
test
lock
cmp
cmpsl
mov
mov
xchg
fwait
mov
cmp
mov
or
add
jp
sbb
inc
push
pop
xchg
ret
je
movsb
mov
jg
or
xor
shl
or
adc
or
mov
or
mov
mov
add
fistpll
mov
daa
inc
xor
and
ljmp
mov
xchg
xor
adc
shll
test
orl
jno
lahf
mov
cltd
jge
xor
sub
lret
jae
or
xchg
sbb
dec
inc
mov
jno
jne
aaa
mov
sbb
or
sahf
lea
test
push
divb
add
in
outsl
fwait
loope
cmp
clc
push
or
inc
test
dec
xchg
push
and
xor
pusha
cwtl
cmc
lea
mov
inc
cld
jnp
or
lods
adc
test
jge
cli
sbb
icebp
mov
popl
xor
sbb
adc
adcl
adc
lea
and
imul
and
in
movzwl
mov
jecxz
lods
cmp
enter
xor
js
and
or
fdivp
lea
aam
sbb
dec
frstor
call
jns
and
ss
inc
adc
xor
sub
lahf
lret
mov
fs
test
or
adc
addr16
cltd
jno
mov
sub
mov
ret
test
jge
jo
shl
push
and
nop
inc
jge
jmp
or
dec
sahf
sbb
pushf
mov
repnz
cmp
inc
add
je
jo
in
test
push
les
xor
orl
dec
xchg
rcl
in
and
mov
jmp
jo
adc
sub
push
or
or
xor
mov
fdiv
jecxz
sar
out
push
fs
push
xchg
jp
push
add
ss
sbb
sysexit
xor
jmp
scas
test
cld
adc
cmp
fstp
cmp
outsl
push
sbb
sbb
sub
cmp
mov
mov
xchg
add
loop
or
fistpl
sub
in
popf
data16
lcall
dec
subb
in
xor
xchg
jle
loop
decl
xlat
push
mov
sbb
pusha
ds
mov
daa
ds
push
xor
lock
repnz
scas
es
cli
sub
arpl
cmc
add
lea
in
daa
xor
xor
adc
nop
nop
add
add
or
sbbb
lret
sub
test
sar
or
nop
dec
mov
adc
dec
cmp
xor
pop
out
sbb
inc
and
andl
mov
mov
inc
in
adc
mov
cmp
sub
or
lret
xchg
and
std
es
sub
inc
adc
sub
scas
dec
enter
cmp
call
sbb
ja
sub
pop
jbe
daa
andb
xchg
mov
push
and
adcb
xchg
es
xor
shlb
clc
mov
fists
sub
push
jne
jo
loopne
xchg
ja
cmp
and
cmp
mov
sbb
cmpsl
es
incl
cwtl
push
sbbl
mov
adc
mov
jp
xchg
mov
sub
mov
jmp
pop
mov
pop
add
call
inc
sbb
fwait
in
dec
jo
jmp
shr
pop
push
loopne
cmpsl
and
or
mov
adc
imul
jne
xlat
dec
mov
xchg
loopne
daa
pop
out
add
or
sar
jns
rorl
adc
in
loope
or
jge
lea
mov
mov
cli
add
xor
adc
push
bound
mov
push
incl
mov
enter
jo
je
adc
or
pop
inc
or
roll
add
aas
test
xor
arpl
pause
xchg
inc
mov
sbbb
xchg
push
lret
jnp
rorb
adc
cli
enter
or
divl
mov
push
xchg
xor
and
push
xchg
or
add
adc
mov
out
pop
int
mov
adc
enter
enter
xor
shr
hlt
xor
xchg
enter
sahf
call
in
hlt
lea
aaa
iret
fwait
das
sub
mov
lea
pop
lock
inc
in
jmp
mov
push
add
scas
testw
call
mov
pop
or
or
js
negb
inc
xchg
movsl
flds
repz
push
inc
fdivl
xlat
push
daa
adc
daa
push
stos
mov
clc
mov
sbb
lock
cmp
add
push
add
adc
popa
add
pop
add
sbb
out
movsl
add
xor
mov
pop
icebp
pop
mov
movl
andl
clc
loopew
scas
push
jnp
cmpl
js
or
cmp
jno
xor
sbb
iret
js
sub
pop
jns
jmp
inc
movsb
int
addr16
cmp
or
sub
leave
sub
mov
enter
pop
enter
adc
leave
test
or
addb
mov
dec
jo
jno
push
les
xor
mov
and
ljmp
les
adc
aaa
sbb
dec
xchg
ljmp
ret
cltd
dec
pop
test
addr16
movsb
xchg
mov
jae
mov
shlb
cltd
mov
lea
push
and
fwait
mov
xor
sar
ss
je
jns
add
cmp
divl
lods
fbstp
sub
ret
mov
jns
xor
and
inc
push
or
xchg
dec
sbb
jb
dec
xor
push
adc
jge
ficoms
and
add
incl
sbb
mov
mov
mov
inc
sbb
mov
ja
push
dec
add
mov
mov
repnz
pop
dec
inc
pop
sbb
add
push
jmp
cmp
dec
cmpsl
xchg
cld
jmp
ret
jo
sbb
mov
repz
and
mov
jmp
out
push
fidivs
inc
es
ror
and
fnstcw
enter
in
faddl
nop
int
fcom
vsubsd
add
or
jno
xchg
call
jo
fs
xchg
loop
jae
inc
sbb
icebp
enter
inc
loopne
push
add
sub
push
in
jo
xor
sti
aam
xor
aas
incb
movsb
push
fistps
mov
icebp
mov
les
popl
aaa
or
sub
add
xorb
les
and
push
add
jmp
test
xchg
movl
sub
jmp
fs
sub
or
jmp
nop
sub
push
inc
or
add
sub
sub
je
adc
mov
inc
test
add
mov
pop
mov
jno
adc
dec
or
pop
das
movl
cmp
cmp
add
and
loopne
rolb
mov
and
ret
jl
test
and
daa
pop
pop
and
out
aaa
lahf
adc
shrb
mov
xor
jne
rcrb
push
and
xchg
push
sbb
dec
ss
mov
mov
movsb
aam
xchg
dec
inc
js
aaa
arpl
mov
clc
cmp
jne
sub
add
xchg
andps
sarl
outsl
xchg
pop
imul
jl
mov
call
test
dec
nop
fidivrs
push
mov
fmuls
inc
jl
cmp
js
pop
add
push
jb
adc
mov
add
lret
outsl
call
mov
repz
repnz
inc
add
dec
stos
mov
mov
dec
push
js
or
jp
xchg
pop
sbb
and
aas
push
mov
idiv
and
adc
inc
cltd
ret
sbb
lock
xchg
adc
mov
adcl
test
rorb
loopne
mov
cli
xchg
inc
ret
pop
psubsw
dec
dec
push
dec
inc
add
add
add
mov
shr
mov
orb
mov
and
mov
test
xor
fnsave
push
fdivl
inc
pop
or
in
pushf
push
add
jno
fcoml
and
sub
dec
push
push
xchg
or
mov
bound
adc
cltd
and
pop
dec
pop
js
adc
push
ljmp
sbb
lods
mov
sbb
or
movsl
aam
inc
lret
in
loopne
xchg
icebp
jl
lock
popf
pop
fs
lret
pushf
shlb
mov
push
pushf
mov
test
clc
push
iret
test
pop
shrb
cmp
cmpsl
filds
jle
sbb
flds
fadds
fistps
mov
mov
out
add
fsubr
sub
jl
inc
das
in
cwtl
sbb
xchg
sub
dec
js
xor
push
adc
orl
mov
cs
xor
loopne
call
pop
lahf
out
loope
adc
sub
sub
lcall
ror
push
dec
loop
push
popf
push
sbb
mov
xor
adc
adc
enter
jmp
xchg
popa
mov
sbb
cmp
out
adc
push
jge
add
add
imul
mul
add
into
fcmovbe
add
mov
xor
fldl
ret
jge
mov
dec
push
pop
fidivl
jl
and
in
mov
inc
call
sbb
sti
add
repz
pop
les
testl
adc
mov
mov
fadds
sbb
cmp
jl
or
cmp
ficompl
adc
lods
cmpsb
xchg
cld
cmp
add
shl
add
sub
loopne
sbb
cmp
shll
or
lock
mov
xor
outsb
add
mov
and
inc
jecxz
dec
pop
scas
shl
cmp
dec
inc
fsubs
inc
test
int3
lea
mov
test
mov
xchg
rorb
test
cld
iret
mov
cmp
jle
cmp
dec
loopne
push
dec
mov
push
rolb
roll
outsl
sub
add
mov
inc
insb
pop
js
mov
das
mov
push
jo
inc
js
and
in
inc
clc
adc
jge
and
pop
js
mov
sbb
sub
fcmovnu
orb
cmp
mov
pop
add
sub
js
add
add
adc
shrb
lret
adc
add
jecxz
cmc
shl
add
jg
lahf
mov
aas
in
rorl
clc
xchg
js
and
xchg
addl
in
dec
lock
fisubl
call
add
mov
test
jbe
push
jl
jno
mov
xor
adc
ja
cmp
jg
inc
cmp
adc
arpl
inc
pop
ja
int3
popa
add
pop
adc
int3
lods
xchg
sbb
mov
int3
or
jns
jge
add
movsl
loopne
jae
movsb
xor
inc
xor
add
pop
rolb
outsl
aam
xor
dec
loopne
or
pop
xor
push
outsb
add
or
or
inc
stos
cwtl
dec
cmp
jmp
mov
or
mov
jmp
lock
mov
dec
lea
pop
pop
call
loopne
ret
add
xchg
ja
mov
add
loop
cld
shr
jl
jno
jns
mov
cmpsb
imul
pop
xor
pop
fs
popa
add
mov
test
pop
sub
lock
sbb
cmpb
adc
lock
adc
push
rcrb
xor
mov
cs
cmp
cmp
mov
aam
jp
mov
push
sub
in
mov
lea
or
sbb
loope
sbb
ret
dec
cs
call
lock
outsl
mov
mov
inc
ljmp
sbb
ljmp
cmp
inc
fdivrl
push
shlb
push
cs
mov
lcall
dec
gs
sahf
push
shlb
xchg
shlb
ror
std
enter
inc
push
inc
push
mov
in
lret
inc
rcll
mov
inc
xchg
fcoml
sbb
fisubs
inc
adc
and
daa
add
push
or
sbb
add
add
mov
loope
inc
push
imul
js
jmp
dec
mov
or
xor
xor
sbb
or
in
xor
and
bswap
test
mov
add
test
or
stos
notl
and
adc
das
je
movb
cltd
sbb
xchg
push
insb
mov
dec
add
or
or
cli
pop
rcr
sti
pop
cmp
jne
das
dec
push
lret
xchg
mov
add
mov
repz
add
sbb
cmpsl
or
add
xchg
fmuls
rcl
pop
ja
test
lea
and
sbb
out
jo
adc
sub
ret
cmp
movb
js
in
jbe
xchg
sbb
adc
scas
mov
or
dec
pop
sub
loope,pt
sbb
dec
je
stc
sarl
sarb
scas
and
dec
rcr
dec
push
and
clc
mov
cmp
push
jle
fmulp
inc
mov
sbb
insb
pop
pop
fmulp
movsb
sbb
int3
mov
dec
dec
and
enter
push
push
dec
inc
sarb
mov
enter
addr16
sahf
push
and
lds
jp
cmp
out
jmp
dec
adc
xor
ret
sub
leave
xor
cs
imul
loop
repnz
or
jecxz
test
lods
add
cmp
in
fwait
cmpl
cmp
push
or
enter
pop
add
inc
or
arpl
xor
push
cmpsl
nop
sti
cmp
lret
hlt
push
ret
inc
jbe
or
xchg
nop
cmp
shl
test
lahf
std
pop
add
sub
incb
add
adc
add
or
test
call
outsb
mov
sbb
out
push
popl
xchg
jo
dec
xchg
outsb
in
and
je
jbe
fiadds
sarl
xor
sbb
lods
insb
jb
cmpsl
mov
or
mov
and
and
or
repnz
mov
out
mov
ss
adc
cmp
or
je
sbb
xchg
fs
sbb
test
pop
js
enter
mov
aas
decb
loop
movsl
icebp
shl
push
push
loope
ficompl
mulps
inc
es
cmp
add
test
push
rol
enter
lock
xchg
xchg
jge
inc
jl
roll
xor
mov
sti
dec
jne
xor
icebp
adc
mov
sub
inc
jo
adc
sub
cmp
adc
aaa
mov
mov
add
imul
popa
adc
or
inc
call
addr16
pop
or
xor
add
leave
out
adc
and
inc
and
lret
xor
sarb
repz
lock
dec
fisttpll
dec
les
inc
fmull
imul
xchg
add
mov
pop
fcmovnb
popa
mov
clc
cltd
js
pusha
lock
inc
cmp
movsl
loope
mov
add
cmp
pop
and
enter
sbb
mov
fcoms
sbb
out
cmp
rcr
sub
sub
add
fadds
ss
in
mov
iret
shlb
mov
scas
cs
mov
add
sar
add
mov
mov
stc
push
sbb
inc
sti
rcll
jno
sub
imul
jle
or
out
inc
lods
dec
sahf
or
inc
stos
push
and
ljmp
dec
loope
mov
sbb
divl
and
mov
dec
dec
sti
pop
aam
jmp
pop
test
dec
ficoms
or
xchg
out
lds
dec
dec
or
adc
xchg
ja
sub
or
or
adc
push
fcmovnb
xchg
inc
sub
mov
mov
aaa
cli
dec
sub
sub
xor
out
sbb
test
push
jns
cmpsb
inc
fidivs
add
outsl
leave
test
incb
pop
je
dec
je
jmp
xchg
add
inc
cmp
mov
in
mov
dec
je
sub
out
jmp
jbe
mov
adc
adc
adcl
inc
rcrb
in
mov
xchg
cmpsl
xchg
adcl
mov
enter
or
mov
pop
push
pop
pushf
pop
or
imul
and
inc
ret
movsl
adc
mov
cld
cmc
xchg
fnstsw
and
lret
addr16
js
mov
clc
mov
cli
lock
push
jae
jl
inc
movl
out
add
jmp
lods
dec
pop
xchg
sbb
jecxz
mov
cmp
test
add
daa
js
cltd
inc
pusha
adc
adc
or
mov
xorl
test
rclb
add
cmp
fisubrl
movsl
mov
leave
and
shrb
adc
mov
lds
sub
das
fldcw
mov
add
pop
pop
mov
dec
jo
jge
pop
pop
or
mov
sahf
loop
mov
push
mov
inc
loope
sub
mov
lcall
lret
test
fnstcw
sub
mov
adc
sbb
xchg
pop
adc
es
call
cmp
cmp
adc
jne
lret
jnp
daa
in
imul
in
loopne
or
addr16
adc
sub
fmull
lfs
test
jle
les
dec
enter
pop
mov
in
add
sti
fsubs
cmp
sbb
fcomp
std
popa
cs
mov
pop
cld
imul
mov
ret
sub
rclb
jl
lods
subl
out
jmp
xor
xchg
mov
cld
sbb
cmc
cmp
jb
or
mov
inc
clc
jge
clc
sub
cmpl
fbld
shl
pop
ja
lret
jmp
inc
in
jle
subl
ja
mul
jg
sbbl
xor
jns
enter
lea
sbb
fildl
jb
les
inc
or
add
neg
jg
outsl
push
dec
out
cmc
sbb
dec
aam
iret
or
mov
add
sbb
popf
popa
rorl
clc
aas
lea
mov
aad
push
aam
pop
mov
inc
push
dec
fcoml
shrb
orl
xchg
std
push
out
lahf
fidivs
lea
movl
mov
mov
jge
popf
andb
push
pop
les
loop
ficoms
fldenv
jnp
sub
bound
imul
push
push
dec
icebp
pop
lcall
cli
pop
cmp
xor
and
addl
lea
lahf
inc
fwait
mov
pop
add
push
or
mov
lret
mov
mov
mov
pop
add
pop
or
push
dec
in
enter
test
add
test
rcl
mov
popa
xchg
and
fsubrs
cmp
jge
mov
imul
pop
test
sti
loopne
pop
add
mov
cli
inc
loopne
fdivp
cmp
rolb
orl
test
jp
xor
and
aam
scas
xchg
dec
push
sub
xchg
push
or
adc
dec
lods
rolb
arpl
or
add
rcrb
aam
ljmp
jge
add
jno
dec
fists
or
mov
and
shl
jns
test
ret
js
movb
std
adc
pop
rcll
jle
cwtl
dec
dec
loop
sbb
cmpsb
jge
mov
fstp
shll
aad
mov
gs
mov
cmp
add
call
shll
or
das
push
push
cwtl
sbb
mov
inc
lods
push
ds
add
out
inc
push
out
xor
jl
leave
or
mov
mov
faddl
inc
movsl
add
enter
jae
in
adc
scas
jo
fsubl
sbb
orl
adc
mov
pop
into
pushl
xor
mov
inc
sar
mov
mov
out
or
stc
and
sysenter
xorl
icebp
repz
fs
push
or
test
and
stos
fbstp
mov
xchg
jp
and
loopne
lahf
ja
jl
test
jp
loopne
ja
xchg
gs
cmpl
add
clc
xchg
loope
sbb
cltd
cmp
test
and
add
movsb
inc
add
mov
xchg
dec
mov
jae
xchg
lcall
loopne
inc
mov
dec
insb
sbb
mov
loop
xor
and
push
mov
test
xor
xor
sub
or
mov
cmp
loopne
cmpb
and
and
pop
inc
addl
add
inc
inc
daa
inc
mov
and
rcl
ljmp
mov
bound
add
jbe
neg
in
push
addl
push
inc
add
loop
cmp
repnz
push
add
ficompl
or
call
pop
pop
xchg
not
adc
sti
cmp
sbb
jle
sarl
ljmp
mov
addl
jns
push
adc
cmp
adc
add
or
ss
mov
add
pop
push
jge
sarl
cmpsb
mov
ds
out
adc
fistl
arpl
shl
in
add
in
mov
lods
fwait
mov
pushf
cmc
ds
sub
mov
cwtl
frstor
andb
cltd
clc
mov
jnp
add
dec
sub
cwtl
cmp
fadds
lock
push
add
insl
push
mov
sbb
push
ret
push
clc
pop
push
aam
fdivs
pusha
sahf
rcr
ss
adc
cld
dec
rcrb
inc
jns
sarb
je
sarb
mov
jb
fdivrl
pop
dec
mov
shlb
cmp
mov
ljmp
mov
aam
es
sbb
add
ret
js
in
sub
adc
and
cld
cli
neg
mov
mov
pop
cli
jmp
xor
cmp
cmp
ss
add
push
fildl
or
loope
dec
jl
pop
inc
push
add
loope
mov
test
cmp
testb
pop
sahf
or
sbb
je,pt
push
rclb
pop
pop
push
adc
inc
cld
jecxz
cmpsl
into
jl
hlt
andb
push
not
cmpsl
adc
aas
add
push
gs
int
xor
mov
pusha
xor
xchg
inc
std
cmp
ljmp
enter
cmp
imul
xchg
or
rol
lods
iret
sub
call
mov
push
or
or
and
and
lods
aaa
add
inc
jge
bound
xor
add
adc
out
and
jmp
aaa
mov
call
popa
push
shlb
int3
cmc
or
pushf
push
sub
mov
jnp
sub
inc
andl
and
cs
inc
xor
rcrl
test
out
jnp
sub
jge
cmp
jo
pop
xchg
decl
rol
imul
out
pop
xor
adc
add
lock
leave
pop
mov
inc
xchg
sbb
das
mov
sub
scas
subl
fstl
sbb
jns
and
xchg
jge
xor
movsl
mov
adc
and
repnz
inc
loope
sti
jge
pop
shlb
dec
inc
fdiv
ficoms
lea
mov
or
pop
fsubrs
mov
pushf
mov
push
movsl
inc
ja
or
push
cmp
mov
push
and
dec
rol
clc
int
inc
push
add
inc
sub
cmp
jl
sub
pop
outsl
and
xor
sbb
xchg
cmpsl
scas
pop
ret
cmpsl
adcb
orl
hlt
and
lock
inc
sub
test
loopne
fdivl
adc
xor
inc
cmp
sub
jp
push
mov
jl
bnd
mov
pop
sbb
mov
xchg
fs
pop
out
mov
mov
adc
or
aas
hlt
inc
dec
add
pop
jnp
out
jl
jnp
cli
dec
adc
stc
add
addr16
pop
mov
cmp
pop
popw
lret
sub
push
adc
dec
cmp
pop
roll
adc
mul
repnz
stc
mov
sbb
lods
pop
jmp
xor
js
and
and
pusha
aad
call
lret
ss
jmp
xor
cmp
outsb
pop
xchg
ss
or
jle
mov
inc
lcall
clc
sub
lods
mov
mov
mov
dec
and
inc
push
mov
cmpsl
add
cltd
and
inc
sbb
sbb
xor
sti
xchg
add
and
mov
jno
jg
cwtl
inc
pop
mov
pop
jo
push
stc
out
mov
inc
jmp
sub
repz
mov
loop
lret
les
inc
incl
inc
shr
ror
dec
inc
sbb
push
test
sbb
fwait
dec
cmp
sti
and
lea
sub
push
scas
out
test
dec
xchg
out
dec
add
ds
mov
add
push
sbb
dec
out
mov
jo
adc
pop
or
cmp
subb
mov
and
cld
adc
cmovl
add
add
lock
or
bound
mov
arpl
dec
mov
or
in
push
push
add
mov
adcl
andl
push
add
cs
or
cmc
imul
icebp
mov
push
dec
xchg
cmpl
add
sub
lods
add
cld
xor
decl
push
inc
and
je
dec
jne
aaa
into
pop
fsubp
or
mov
or
dec
jb
bound
inc
and
fisubrs
and
mov
or
pop
cmpb
push
xchg
ljmp
adc
jo
cmpsl
sub
jb
ffree
mov
cmpsl
dec
add
imul
sub
clc
pop
mov
or
das
ret
jbe
lret
mov
mov
inc
and
dec
fiaddl
pop
loopne
push
add
scas
mov
cli
sti
push
test
nop
jo
add
jne
pusha
pop
cmpsl
jns
cmpl
jge
das
outsb
call
dec
xchg
cmp
mov
subb
jnp
ljmp
sub
clc
add
imul
jnp
mov
pop
ret
addl
mov
and
cld
push
xor
sbb
inc
and
mov
out
cmpl
lret
jle
jge
cmp
push
pop
sub
cs
cmp
xchg
sbb
push
sarl
or
cmc
mov
das
lret
inc
dec
clc
dec
adc
push
or
sbb
xor
inc
pop
mov
mov
lods
mov
fsubl
push
push
push
repz
hlt
insb
faddl
or
add
adc
popf
and
outsl
shl
pop
stc
lods
or
dec
xor
and
and
bound
cs
clc
lock
scas
or
jbe
and
xchg
add
mov
fs
inc
and
mov
push
rol
xorb
mov
xor
jmp
enter
js
add
sbb
daa
lock
push
call
jg
cmp
sbb
sub
pop
adc
out
xchg
jno
or
shlb
inc
mov
xchg
add
xor
adc
mov
or
mov
test
jmp
inc
sub
scas
push
stc
lcall
inc
mov
mov
or
adc
or
insb
enter
jl
pop
rcrb
mov
adc
xchg
in
fcomip
loope
push
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
pop
add
add
out
addb
mov
jl
enter
ds
movsb
aam
popl
jns
movsl
jbe
sbb
xorb
imul
adc
pop
push
cmp
push
mov
xchg
or
popa
lahf
pop
cmp
stos
lods
fwait
leave
xchg
adc
push
sub
test
or
out
mov
pop
xchg
and
lcall
or
cwtl
dec
fildll
ljmp
popf
call
add
xor
mov
out
sub
iret
je
orb
cmp
mov
mov
mov
cmpb
or
scas
mov
inc
fdiv
dec
xor
xchg
pop
push
mov
pop
in
ss
jno,pt
mov
xorl
xorl
fnstcw
push
add
mov
stc
pop
mov
push
stos
mov
inc
or
and
mov
les
dec
xor
ljmp
jo
mov
cmp
leave
jge
mov
in
lds
sbb
or
and
mov
popa
fisubrl
sub
cld
dec
sub
scas
and
sub
jo
adc
lret
enter
mov
push
adc
cmp
bound
aam
dec
mov
movl
mov
or
shl
divb
in
repnz
mov
daa
inc
xchg
inc
pop
jne
xchg
push
jbe
or
data16
bound
stos
cltd
insl
and
or
mov
inc
in
aam
sub
jo
cmp
js
sarb
pop
je
lret
enter
adc
mov
inc
cmovp
sti
sub
jae
div
jg
imul
inc
scas
and
adcb
addl
dec
and
xchg
jno
aam
jge
mov
mov
pop
icebp
into
add
jmp
push
scas
add
or
or
hlt
cli
in
sbb
push
or
add
movsb
into
and
adc
adc
xor
stos
push
and
push
dec
xchg
out
sbb
and
mull
and
ret
push
dec
pop
xor
sbb
insl
mov
adc
cltd
dec
add
mov
outsl
sarb
cmc
jne
sbb
mov
adc
dec
sub
jne
or
ficoms
arpl
xor
add
lock
and
pushw
sbb
pop
lcall
and
out
lcall
add
subl
xchg
ret
inc
mov
push
add
cmp
jo
and
sbb
js
test
add
pop
shll
or
xchg
imul
insl
and
out
int
sbb
and
cwtl
dec
sub
pop
mov
inc
lret
jne
outsl
push
or
dec
mov
cmp
xor
shll
imul
and
jl
jmp
ss
sub
jbe
or
loopne
test
cli
jl
xorl
push
test
mov
sub
jae
cmp
loope
sbb
push
popf
add
inc
and
jnp
or
and
adc
lods
dec
sti
cmp
xorb
sbb
imul
dec
mov
cwtl
add
sti
sarb
mov
mov
movsl
fs
shlb
cmp
jmp
popf
push
fistl
adc
mov
push
push
dec
mov
xor
or
jo
add
scas
imul
dec
adc
inc
push
nop
cmpsl
pusha
ss
add
pop
inc
push
ljmp
inc
mov
inc
adc
int3
mov
outsb
pusha
mov
mov
loope
mov
mov
sbbb
gs
lret
lods
mov
or
xor
lods
sbb
adc
or
or
ss
mov
push
dec
dec
xor
xor
mov
lods
dec
mov
push
ja
add
dec
lret
inc
push
pop
rcr
xchg
stos
xor
mov
jo
or
shll
mov
repnz
cmp
mov
int3
lcall
jg
inc
push
adc
mov
call
pop
push
cmc
popa
inc
and
sub
add
jp
xchg
xlat
push
fs
xorl
push
inc
pop
sub
mov
inc
inc
outsb
adc
sub
mov
mov
pop
cmp
leave
pop
sub
mov
jb
pop
push
shrl
jle
out
or
sub
movsl
sbb
mov
mov
jmp
sub
dec
pop
or
fsubs
cmp
adc
lcall
daa
xchg
je
test
or
into
enter
inc
add
and
xor
xor
test
cltd
mov
mov
add
shrb
ret
push
push
pop
dec
shrb
and
cmp
pop
mov
xchg
daa
lea
mov
dec
cmp
or
and
push
mov
inc
das
cmp
nop
andl
shrb
je
mulb
pushaw
pusha
arpl
pushf
cmp
pusha
jnp
in
lea
and
cs
dec
push
pop
push
das
ja
mov
and
loop
add
mov
or
xorb
mov
pop
mov
push
pusha
xor
movsl
cmp
dec
add
push
cmpsl
mov
pop
pop
mov
and
lret
sbb
jg
push
or
add
test
movsl
imul
mov
or
add
je
mov
or
test
lock
or
bound
pop
jns
fcoml
lahf
xor
dec
mov
and
push
or
dec
jp
push
xor
pop
add
loopne
dec
sbb
or
inc
xor
adc
mov
adc
mov
and
addl
jg
test
stos
arpl
add
repz
dec
adc
dec
sbb
add
arpl
add
xor
je
add
out
subb
sub
fdivp
sti
dec
push
xor
or
or
pop
add
lods
inc
adc
pcmpeqw
mov
pop
push
add
sbbb
call
xorb
sbb
xchg
or
shrb
cwtl
cmp
mov
sub
cmp
das
and
loop
or
add
imul
inc
imul
js
dec
mov
cs
outsb
jb
in
imul
lea
mov
popl
ret
or
pusha
add
xor
mov
popa
nop
movsl
lea
cltd
inc
fs
lock
sbb
sub
adc
push
fdivl
or
lret
lock
js
adc
jo
push
iret
cmpsb
sbb
rol
xchg
cwtl
cli
push
push
cmp
shlb
mov
fidivrl
gs
add
movsl
adcl
loop
sarl
aas
sbb
loopne
inc
cmp
jnp
mov
mov
cmp
sub
cmp
inc
add
mov
rcrl
fidivs
test
es
es
pop
sub
in
jae
shll
and
pop
xchg
mov
xor
ja
dec
or
mov
add
cmp
add
inc
std
js
jnp
push
or
cmc
or
outsb
js
ss
into
je
pushf
jbe
or
and
stos
adc
hlt
xor
jmp
adc
mov
in
pop
inc
popf
test
std
push
inc
push
lods
rcrb
jp
cmpb
or
arpl
jmp
call
cvttps2pi
add
and
xor
sub
xchg
push
add
push
daa
int3
mov
and
push
pushf
and
add
mov
dec
dec
je
add
adc
and
push
inc
outsb
jmp
stc
and
add
decl
jne
sbb
push
add
pop
and
lret
es
cmp
xor
sarb
cmp
das
inc
sub
or
pusha
or
int3
xor
mov
cmc
jo
xchg
in
sub
and
mov
dec
loop
adc
mov
add
dec
subl
mov
mov
movswl
inc
fiadds
pop
frstor
sti
and
rcll
jmp
jmp
sbb
sbb
sub
add
lea
mov
jnp
repnz
sub
mov
fsubrs
rolb
fmull
fmull
push
or
mov
fistpll
int3
js
xchg
sub
mov
mov
adc
lret
xchg
cs
lds
lods
test
repz
mov
outsl
push
mov
mov
xchg
add
cmc
adc
lea
adc
push
dec
out
jmp
sbb
insb
inc
cmpsb
inc
inc
add
adc
add
stos
push
es
push
and
sar
popf
jmp
dec
pop
add
or
cmpsb
pusha
in
outsl
imul
adc
loop
fs
movl
in
jno
push
sti
push
dec
je
push
movsb
ss
in
dec
andl
pusha
loope
xor
rolb
sub
pop
lret
mov
push
pop
ret
les
inc
mov
stos
addl
das
mov
adc
dec
cwtl
pop
clc
adc
push
or
jbe
push
mov
add
nop
in
pop
adc
push
fmul
test
push
mov
pusha
sub
mov
mov
sub
rol
test
or
dec
aaa
call
arpl
or
fdivrp
xchg
inc
clc
lds
mov
jne
test
jg
adcb
inc
ret
lea
adc
cmp
and
mov
jo
pop
loopne
inc
clc
jbe
mov
inc
lea
sti
and
dec
movq
ja
imul
mov
les
push
arpl
es
push
cmp
mov
arpl
ds
orl
mov
loopne
and
hlt
jne
mov
or
mov
fxsave
add
jns
cli
cmp
in
out
jbe
mov
inc
add
je
push
adc
mov
mov
mov
shlb
sahf
mov
imul
orb
inc
jo
idivb
or
adc
loopne
lea
fst
hlt
sbb
loopne
cmp
inc
jo
hlt
loopne
cmp
lock
lods
dec
jmp
aad
jg
ja
add
pop
and
cmp
rclb
and
push
jg
inc
sub
add
ljmp
jo
sub
jbe
mov
cmp
mov
push
add
inc
jecxz
push
pusha
out
inc
sbb
gs
idivl
mov
dec
fimuls
ss
inc
xor
ret
adc
pop
vrcpps
jmp
add
dec
loopne
movsb
xor
dec
in
cmp
rorl
fwait
push
pop
add
testl
call
push
mov
dec
enter
lea
adc
in
add
sub
push
sub
and
xor
and
xchg
mov
in
jbe
movl
pop
iret
pop
sub
cmp
sub
pusha
jbe
fidivl
lea
fsubrs
ja
pop
in
jp
pop
adc
aas
add
roll
jno
jl
ja
mov
popf
data16
jecxz
jge
repnz
jl
dec
nop
jae
add
cmpsb
mov
mov
out
mov
movl
or
adc
aaa
cmpl
pop
jnp
or
mov
cmp
mov
mov
add
insb
punpcklbw
mov
rcrb
jo
fists
sbb
mov
cltd
mov
dec
and
jmp
xorb
or
enter
andl
sbb
jg
adc
inc
rorb
or
or
and
cmp
fneni(8087
push
cmp
in
or
and
outsl
adc
pop
add
push
push
mov
and
sbb
repnz
inc
push
jo
sbb
xchg
adc
shll
outsl
push
jle
jmp
mov
std
or
inc
cwtl
sub
xor
test
fmull
dec
adc
out
jo
mov
fwait
push
sub
sbb
jecxz
movsb
rol
xor
ret
xchg
test
jge
xchg
fistpl
cli
push
jns
adc
inc
and
icebp
sbb
and
les
sbb
push
movsl
dec
call
in
pop
xor
or
sub
shrb
xor
shrb
add
and
ffreep
shlb
fstps
mov
or
dec
and
inc
pusha
mov
adc
shl
ja
loop
add
cld
filds
fmuls
lret
sbb
repnz
inc
fdivr
pop
hlt
pusha
popf
mov
fldcw
lcall
clc
lock
mov
nop
jp
mov
ror
sti
out
dec
adc
adc
jnp,pt
mov
aam
adc
mov
out
int
adc
and
in
xor
sub
push
xchg
call
jo
pop
fisubs
call
xlat
cmp
enter
adc
shrl
shlb
mov
gs
dec
enter
repnz
add
gs
sbb
enter
mov
mov
in
call
out
in
cld
sbb
inc
in
mov
or
pop
and
pop
fwait
or
repz
pusha
arpl
pop
inc
adc
testl
in
pop
sbbb
gs
pusha
push
jnp
icebp
inc
dec
outsl
xchg
inc
bound
pop
ret
fcos
jns
cmp
inc
pop
mul
sbb
aas
xor
jne
pop
sbb
test
or
lea
mov
sbb
pop
repz
adc
xchg
pop
sbb
les
lahf
jb
add
xchg
xchg
pop
adc
inc
das
and
stos
dec
add
fadds
pop
in
bound
jns
add
inc
sahf
and
out
lods
cwtl
add
test
gs
lds
dec
dec
cmp
mov
inc
add
jg
cmp
stos
sbb
mov
pop
sub
dec
add
aas
aam
mov
jne
daa
push
or
or
test
clc
je
dec
push
add
mov
add
data16
gs
mov
dec
mov
xor
push
cs
dec
push
dec
pusha
inc
mov
dec
popf
cmpb
xor
push
pop
jg
imul
stos
and
out
pusha
mov
mov
push
shr
dec
rorb
stos
sti
outsb
dec
lock
stos
sbb
and
in
inc
pop
xchg
je
out
call
movsb
mov
sbb
sub
shl
lahf
inc
push
into
mov
testb
fisubs
add
sbb
lock
sub
out
outsb
dec
xor
loopne
mov
cltd
xor
mov
loopne
out
and
lahf
clc
popa
pop
fidivrs
fdivl
sub
add
dec
lock
loopne
jge
repnz
sub
pcmpeqw
jge
daa
mov
fiadds
arpl
sti
shl
sub
or
adc
adcl
add
addr16
adc
inc
faddl
add
xor
lahf
add
sub
sbb
push
dec
sti
lret
mov
push
sub
xchg
lea
sub
and
mov
fldenv
inc
or
or
loopne
ret
or
loopne
push
push
decl
les
push
lock
push
les
shlb
or
ficoms
add
ds
xor
push
scas
scas
dec
ret
gs
fiadds
out
inc
or
sbb
popa
or
hlt
dec
je
and
mov
mov
lret
mov
add
push
add
lock
out
mov
call
add
adc
fmuls
jns
push
inc
mov
fldenv
dec
add
dec
sbb
pop
or
push
or
jne
adc
push
push
mov
shl
mov
movsl
jne
sbb
idivb
fisubrs
sub
enter
insb
popa
mov
outsb
sub
sub
or
xchg
xor
or
pushf
enter
jb
mov
rclb
mov
imul
pop
cltd
cmp
out
pop
faddl
les
repz
xor
fcompl
inc
mov
add
pop
lcall
xor
xchg
pop
lcall
xchg
sahf
add
sbb
cmp
xor
pusha
ljmp
aaa
cmp
push
in
pop
iret
inc
and
sub
hlt
jae
mov
in
icebp
shl
or
push
mov
loop
lea
add
neg
lea
shl
jmp
pop
add
dec
add
shrd
jecxz
shrl
roll
dec
rcrb
xor
mov
lock
xor
dec
xor
sbb
adc
out
lahf
push
add
hlt
xor
fimull
loopne
cmp
stos
imul
mov
mov
mov
data16
call
fstpl
mov
and
jne
ret
mov
push
in
int
xorb
xchg
adcb
add
sub
sti
jmp
icebp
or
or
xor
sti
dec
or
sub
clc
add
add
xor
dec
and
inc
add
shrb
push
in
ds
aad
pushf
in
test
add
stos
xchg
xchg
inc
aas
cmp
xor
jno
sub
xchg
stos
movsl
xor
loop
in
fidivl
add
stos
add
pop
xor
lret
lret
lret
add
pop
ret
sti
neg
and
rcr
arpl
cmpsb
jo
into
out
and
out
nop
mov
adc
xchg
or
add
sub
out
pop
movsl
loop
xchg
fldenv
imul
push
pop
lret
push
sti
adc
or
or
pop
shrl
ljmp
lods
mov
mov
xor
aaa
push
mov
add
dec
push
mov
adc
pop
pop
test
adc
jne
inc
sbb
xor
pop
das
lods
push
push
popa
hlt
sbb
jp
push
cli
push
push
adc
or
lock
push
cltd
movsl
test
pop
push
test
cmc
push
pusha
sub
js
mov
rcrl
lahf
bound
inc
sbb
mov
lahf
cmpsl
cmpsl
sahf
imul
push
jns
lock
mov
push
pusha
and
adc
test
push
dec
inc
add
adc
rolb
in
push
cmp
xchg
xorb
push
sub
push
rcrb
scas
clc
jo
sbb
sub
dec
or
shr
mov
sbb
or
push
cmp
dec
mov
lods
jge
loopne
loopne
pop
repz
movsl
cmc
or
pop
sbb
imul
nop
imul
nop
or
jnp
stc
pop
ror
push
or
lcall
test
inc
sub
sub
jp
ud2
sub
push
mov
and
roll
and
or
cmpsl
jae
mov
jecxz
mov
pop
inc
sahf
inc
movsb
daa
sbb
adc
add
xor
mov
adc
push
or
inc
or
je
out
add
lods
mov
add
xchg
in
xchg
sub
pop
out
in
je
sbb
or
ja
xor
and
and
movsb
popa
xorb
or
sbbb
cmpsb
push
jecxz
dec
jae
leave
cmp
sbb
cs
test
les
test
xchg
fcoml
loopne
insl
dec
mov
je
ret
call
test
cmpl
outsl
dec
movzbl
shl
inc
jns
adc
add
add
pop
add
xor
cmc
fidivrs
nop
push
and
scas
inc
push
sbb
or
add
sub
lock
fdivs
insl
xchg
mov
loopne
into
aam
push
rclb
or
into
xchg
dec
add
cwtl
sbb
or
cmp
mov
pop
movsb
jbe
or
insb
xor
sub
xlat
and
cmp
je
or
cmp
inc
flds
or
cmp
push
aaa
xchg
jecxz
adc
inc
and
push
inc
add
jge
popf
mov
mov
imul
add
cmpsl
insb
pusha
test
jne
sbb
les
pop
in
inc
roll
je
iret
pop
push
adc
adc
test
gs
in
cmp
or
mov
enter
rorb
jg
jo
pop
sar
icebp
jmp
xor
mov
cmp
and
outsb
jne
test
ja
inc
cmpsb
add
and
jbe
jle
cmp
aad
dec
add
iret
inc
pop
jl
stos
adc
add
pop
add
mov
inc
shrb
xchg
test
mov
pusha
cmp
out
ds
add
cmp
rolb
and
xor
stos
sub
or
popa
loopne
or
dec
ret
adc
roll
sti
jge
inc
add
xchg
xchg
push
ret
mov
mov
je
inc
add
add
and
and
adc
cmp
and
ret
jbe
and
nop
repnz
mov
daa
nop
test
add
stc
fsubrs
std
xchg
jnp
adc
adc
sbb
add
xchg
mov
cmp
jmp
insb
leave
jns
lods
cmp
add
fimull
cmp
mov
adc
adc
pop
imul
rcrb
push
inc
iret
mov
dec
dec
and
loope
ja
xchg
popa
pusha
add
sbb
call
and
stc
add
pop
dec
daa
dec
pop
add
cwtl
mov
arpl
mov
inc
subl
cmp
movsb
cltd
sub
jne
push
lea
xchg
ret
mov
push
push
fimull
cmpb
xor
inc
mov
mov
add
dec
pop
roll
adc
bound
icebp
int
inc
push
cmp
cmpsb
adc
dec
sbb
sbb
and
gs
sub
and
sbb
inc
push
and
sbb
dec
jo
pop
sbb
push
xchg
mov
xchg
sbb
rcll
and
cmp
and
andb
nop
daa
sub
es
or
mov
mov
aaa
add
jo
in
fs
xchg
xorl
ret
incb
dec
adc
adc
jae
dec
jno
mov
mulb
imul
cmp
insb
or
pmulhw
out
add
sbb
or
add
mov
iret
push
mov
sub
and
adc
adc
ret
push
sbb
outsl
xor
into
xor
add
adc
in
lea
test
stc
rcrb
inc
fwait
jecxz
adc
push
in
rep
mov
call
and
pop
pop
push
dec
popf
js
popa
es
dec
daa
lea
popf
pusha
shlb
push
inc
lods
sbb
or
loopne
add
inc
xor
enter
inc
cmp
push
xor
lock
cmp
sbb
imul
adc
popf
pop
outsb
sub
and
mov
add
in
add
popf
add
or
jb
adc
dec
dec
and
or
push
sti
xor
fstp
inc
jmp
mov
inc
ss
sbb
adc
sbb
les
loopne
insb
int3
pop
les
icebp
dec
push
inc
int
add
scas
mov
sub
movzwl
pop
or
adc
adc
or
ss
or
adc
sbb
cmpsl
push
cli
mov
lds
or
push
push
test
push
add
inc
cmp
bound
xchg
or
mov
lcall
iret
insl
movsl
subl
add
scas
fld
outsl
daa
sahf
xor
push
add
adcl
push
add
nop
mov
in
mov
jmp
arpl
in
xchg
inc
add
inc
mov
imul
mov
loopne
mov
ja
mov
adc
sub
jge
add
or
jb
mov
test
inc
int
cmp
adc
dec
daa
dec
add
inc
mov
mov
out
les
pusha
push
push
mov
dec
mov
pop
mov
add
add
data16
and
xchg
negb
das
or
loope
enter
mov
into
pop
push
and
addl
aam
pop
not
sbb
fildl
fistpl
inc
and
jno
out
into
in
mov
repnz
and
jno
shll
adc
pop
or
inc
or
cmp
std
pop
aas
dec
pop
and
aad
andl
or
or
stc
dec
lcall
or
adc
add
push
xchg
jecxz
add
fmuls
jecxz
sbb
adcl
adc
ljmp
fimull
mov
insb
jmp
xor
push
outsb
insb
pop
cmpb
add
sub
and
xchg
dec
rclb
and
mov
push
aam
int
cmp
and
xchg
idivl
adc
movnti
bound
test
sbb
stc
inc
add
dec
cltd
fs
push
and
or
sub
mov
jb
xchg
cmpsl
mov
hlt
mov
fs
pop
xor
cmc
mov
push
inc
push
lret
mov
sub
pop
outsl
pop
movsl
imul
or
mov
sub
mov
or
add
mov
jl
popa
inc
mov
aaa
dec
lods
pop
mov
lcall
push
test
sub
bound
leave
lds
mov
pop
xchg
jb
xor
addb
sahf
xchg
test
ljmp
inc
sbb
xor
lea
pop
inc
add
aam
cltd
mov
daa
test
aaa
adc
das
sub
ret
nop
scas
and
add
mov
movsl
xchg
mov
cmp
aaa
and
sub
inc
add
cmp
jle
mov
push
and
popa
adc
xor
jo,pn
daa
jecxz
lods
xor
or
scas
pop
xor
das
cmp
das
dec
dec
pop
pop
add
loop
rorb
push
gs
push
jno
jbe
adc
adc
add
adc
mov
or
push
cmp
and
addb
lcall
push
insb
cmp
inc
fldl
mov
or
dec
add
adc
aaa
test
es
push
fiadds
lock
pop
add
sub
pop
icebp
or
nop
popa
ja
sub
add
nop
hlt
rcr
arpl
lods
cmc
andl
add
sub
mov
in
jmp
arpl
popf
xchg
movsl
xor
imul
ret
xchg
pop
jo
lock
pop
add
mov
fs
fldpi
or
and
dec
inc
test
add
jb
add
or
dec
cmp
push
test
arpl
jmp
mov
pop
and
xlat
clc
or
addb
pop
in
inc
or
adc
cli
mov
lahf
int3
jmp
and
push
aam
aad
inc
mov
xchg
sub
xor
mov
fiadds
add
dec
adc
xor
dec
mov
dec
notb
adc
mov
sbb
push
sub
jns
cmp
sub
dec
sub
cmp
and
jae
cs
cs
inc
push
add
cwtl
xor
push
in
or
and
xchg
pop
test
and
adc
or
cmp
xchg
cmc
cmc
jg
xor
movzbl
inc
dec
cmp
mov
push
incl
or
or
sub
dec
je
dec
hlt
mov
pop
pop
lds
addr16
mov
lods
and
aaa
inc
je
test
je
push
jo
push
dec
pop
popf
adc
loope
mov
mov
mov
cmpsb
adc
dec
sub
sub
xchg
push
addl
lock
xchg
jbe
or
orb
xchg
repnz
rol
jo
sub
imul
movsl
mov
movsb
test
aaa
scas
sub
mov
xor
adc
pop
das
lock
outsl
cmp
int
jge
pextrw
inc
ret
push
cmp
sub
push
sub
or
inc
push
loopne
sub
lock
cmp
test
dec
fcomps
sahf
xchg
das
push
cmp
aas
aaa
fs
inc
inc
dec
inc
dec
add
nop
jbe
inc
pop
cmp
push
aad
xor
jns
fistl
xchg
cmp
lret
or
pop
subl
nop
push
test
leave
enter
add
and
adc
or
cmp
or
mov
dec
sbb
lahf
es
push
add
push
push
sbb
add
pop
adc
imul
pop
bound
out
mov
cmp
sub
shrb
jno
popf
test
lods
mov
enter
andnps
xchg
mov
dec
jmp
test
daa
and
test
pushf
nop
xchg
es
jg
mov
mov
pop
xor
mov
sbb
lret
pop
or
inc
bound
sub
bound
push
jne
movsb
jg
inc
xlat
adc
pmulhw
dec
push
addr16
and
mov
arpl
xorb
cs
xchg
divb
adc
lock
shlb
pop
adc
inc
mov
cwtl
push
pop
ljmp
mov
xchg
jns
rcll
sbb
cmp
jo
inc
sbb
inc
jl
sub
xlat
jle
push
lea
or
leave
pop
add
in
mov
pop
pop
fidivl
or
dec
sub
js
mov
jg
push
inc
mov
sbb
dec
movsl
pop
sub
mov
mov
pusha
clc
les
mov
sub
jo
adc
or
cltd
mov
pop
in
nop
pop
cs
xor
stos
or
sbb
mov
add
adc
rcl
adc
and
cltd
push
movsl
movl
and
aas
mov
inc
adc
pop
aas
cltd
mov
mov
adc
sahf
fisttps
jl
dec
and
cmp
adc
add
pop
dec
cli
sub
jbe
sub
cmp
mov
into
xchg
cmp
push
clc
sub
push
or
in
xlat
clc
push
jae
mov
es
outsl
idiv
or
and
pop
je
inc
cwtl
cli
fldl
or
adc
jno
dec
mov
lock
stc
out
adc
les
mov
xchg
dec
mov
sarb
xchg
push
cmp
adc
adcb
jbe
sbbb
or
pusha
fyl2xp1
push
xchg
xorb
lea
loopne
push
xchg
inc
lcall
adc
incb
inc
add
icebp
pop
pop
lcall
or
add
pusha
xor
push
dec
js
add
lods
push
movsl
sbb
or
jecxz
nop
jl
or
push
push
push
or
inc
pop
and
sub
dec
popa
push
mov
pop
and
aam
adc
pusha
cmp
or
scas
andl
ss
or
xor
mov
adc
mov
test
and
or
cmp
enter
nop
push
mov
arpl
imul
cmp
bound
xor
sub
adc
aam
adc
and
or
adc
and
pop
sbb
mov
movsb
jbe
test
mov
lea
inc
fwait
adc
cmp
mov
inc
cmp
int3
ds
lcall
les
ja
nop
std
add
pop
aaa
lahf
filds
or
dec
adc
adc
push
mov
testl
add
jo
popf
adc
test
xchg
dec
mov
jae
rcr
add
add
cmp
inc
dec
mov
scas
shlb
jne
or
ja
add
or
fwait
mov
add
push
clc
jno
aad
push
dec
mov
mov
mov
push
clc
dec
fdivl
ud1
mov
lret
add
mov
adc
aam
cmc
xor
mov
jle
fs
dec
push
adc
leave
mov
adc
cs
and
cmp
pop
mov
in
aas
jb
and
notb
clc
fcompl
and
push
xor
sub
add
inc
pop
or
jno
repz
or
popa
bound
sti
aad
les
mov
pop
xchg
dec
adc
test
dec
mov
mov
fucomip
or
mov
push
push
fwait
xchg
adc
cmp
mov
push
sbb
fimuls
xor
mov
inc
inc
out
xorb
sbb
dec
movsl
and
mov
inc
je
je
jno
push
cld
fdivl
mov
and
out
adc
jnp
jle
xchg
inc
rorb
and
ds
dec
loop
mov
push
dec
add
les
or
repnz
pop
cmpsb
shlb
rcl
add
mov
sbb
movsb
mov
sbb
sub
das
dec
popa
jle
inc
ret
xor
rcll
push
dec
std
ret
mov
push
dec
cs
push
pop
fmuls
mov
xor
or
adc
dec
lds
sub
paddsb
data16
fcom
push
jns
mov
lock
mov
jae
mov
cmp
add
daa
pop
or
imul
fistps
dec
out
adc
fcomps
insb
jae
and
dec
dec
loopne
adc
push
leave
mov
les
leave
pop
int3
popf
add
jb
or
popl
dec
nop
xchg
fildl
leave
add
mov
and
nop
xchg
and
and
adc
ret
and
inc
std
dec
mov
dec
dec
movsb
pop
and
dec
and
cltd
dec
fadds
bound
nop
pop
or
push
mov
popa
cli
movsb
push
push
adc
cltd
mov
hlt
push
incl
jmp
lea
ja
orb
mov
in
or
sbb
test
lea
adc
std
jmp
add
xchg
loop
or
push
rcll
and
xor
inc
pop
addr16
and
pop
jns
rorb
or
insb
jge
js
push
filds
fstl
mov
lahf
les
jg
mov
add
or
or
push
les
in
sbb
push
jno
cmc
sub
sub
and
or
cmpl
cmc
or
jle
aam
push
mov
incl
jne
inc
cmp
pop
fwait
or
add
loop
sbb
add
cmc
pop
and
add
or
sub
add
jo
add
mov
mov
pop
mov
adc
jge
sbb
popa
test
add
add
scas
mov
dec
inc
aas
mov
or
cmp
insl
popa
push
mov
out
sub
dec
mov
test
mov
mov
adc
aas
add
push
xor
test
in
push
add
fistpl
and
or
sub
fisubrl
xor
mov
shrl
ja
sub
push
sub
add
cmp
adc
or
pusha
loop
enter
int3
pop
inc
sub
dec
test
and
inc
xchg
mov
xor
clc
or
ret
mov
cld
sbb
xchg
stc
fsubl
jb
sbb
leave
and
shr
pop
cmpl
aaa
push
or
sub
ds
add
test
dec
dec
add
bound
mov
pop
mov
roll
pop
inc
sub
shl
adc
mov
pop
push
add
add
inc
lcall
je
je
add
les
xchg
adc
push
sub
push
aam
push
lret
dec
and
and
cwtl
es
push
imul
adc
xchg
inc
sbb
xchg
stc
jmp
inc
mov
xor
mov
rcr
pop
sub
pusha
das
add
daa
xorb
xor
mov
mov
jns
addr16
add
add
std
pop
and
mov
cmp
adc
pop
lds
xchg
in
push
scas
cmpl
push
ret
sbb
mov
dec
and
in
jb
cmc
mov
mov
push
or
jne
pop
inc
and
jne
mov
adc
pop
or
sbb
mov
cmp
mov
hlt
inc
mov
or
xlat
inc
addl
in
pop
pop
and
push
lcall
into
or
enter
xor
push
sbb
mov
sub
mov
cmp
das
push
test
rcll
daa
mov
test
outsl
loopne
mov
sbb
clc
dec
jg
mov
cmp
and
loopne
fstp
addr16
adc
jns
out
jg
lds
enter
loopne
push
and
subl
aas
sbb
dec
pop
dec
add
lock
les
out
sbb
mov
fwait
loope
mov
adc
dec
loopne
pop
sar
cmc
adc
sbb
je
jb
insb
xchg
sub
inc
imul
mov
notl
xor
cmp
jbe
inc
xor
inc
aaa
or
cmp
sbb
enter
or
sub
sub
adc
add
adc
sarb
rol
imul
add
cmp
or
cmp
rorl
xor
dec
push
jno
enter
subl
cmp
idivl
orl
xchg
out
xor
loopne
mov
les
in
mov
std
rolb
add
mov
sub
adc
mov
mov
call
jle
xor
mov
mov
pop
push
sbb
adc
imul
xchg
cmp
movsb
loopne
mov
outsb
movsb
dec
loopne
push
push
xchg
imul
pop
push
cmp
adc
push
stc
test
jecxz
fisttpll
adc
es
out
push
and
jl
ret
jae
xchg
fsubs
popa
mov
pop
adc
or
cmp
dec
or
movsb
fimull
and
push
lret
rcrl
test
shr
lea
aaa
inc
aad
adc
mov
je
jne
adc
sub
inc
lods
out
and
mov
es
push
dec
adc
shlb
movsb
jne
stos
jl
or
sbb
inc
out
cs
xchg
add
ss
out
mov
pop
dec
das
dec
rcrl
mov
mov
fs
das
xor
rcl
mov
dec
inc
mov
sub
xchg
mov
sbb
and
sbb
bound
pusha
add
repnz
es
cli
mov
out
mov
mov
push
sub
addb
inc
ret
cmp
push
jb
mov
inc
xchg
and
jg
xor
mov
mov
jne
nop
ja
sbb
fcoms
cmp
inc
pop
test
sbb
dec
js
sub
stos
ljmp
loopne
movsl
mov
je
stos
inc
ret
stc
fidivrl
jle
aaa
jle
add
xor
shlb
adc
or
adc
lds
and
mov
leave
nop
mov
sbb
sbb
xor
cmpb
mov
rorb
sbb
and
sbb
wrmsr
mov
ret
push
std
dec
in
jmp
loope
int
je
lahf
out
je
ret
pop
mov
xchg
xchg
cmc
imul
sbb
cmp
popf
in
adc
sbb
xchg
pop
adc
fdivl
loopne
mov
push
js
rcrb
fsts
inc
clc
mov
nop
and
ds
push
inc
add
mov
dec
xor
or
sub
test
push
in
mov
lds
push
add
sub
pop
aam
in
enter
add
or
add
adc
inc
xchg
int3
notl
pop
inc
sbb
sbb
or
daa
popa
lea
pop
insl
sbb
dec
mov
insl
mulb
inc
or
sbb
and
mov
aam
and
out
pusha
xor
dec
minps
xor
adc
lret
or
mov
andb
and
fcoml
adc
xchg
sbb
adc
xor
and
xchg
icebp
insl
mov
or
xchg
or
mov
jno
or
sbb
icebp
mov
add
xor
in
lds
pop
pushf
nop
mov
cmc
pop
outsl
mov
mov
ja
sbb
mov
icebp
add
xor
sahf
and
jo
aas
je
movl
cmp
adc
ret
mov
test
loopne
lcall
cmp
loop
mov
cmp
mov
lods
mov
jmp
mov
xchg
mov
push
sti
or
mov
mov
add
push
and
stc
scas
push
pusha
imul
fildll
sub
pop
ret
pop
repnz
or
adc
fsubrs
sub
pop
cld
jg
fstl
adc
test
dec
pop
les
jecxz
push
pop
or
push
adc
xchg
mov
pop
aam
das
or
imul
adc
jg
imul
adc
pop
mov
sbbl
rcrl
and
jne
gs
ret
or
xor
add
rcrb
push
cltd
lods
loopne
sbb
jge
sbb
fadd
mov
add
jle
inc
and
lea
push
jg
xchg
cs
sbb
cmp
and
sbb
lea
loop
je
ss
push
inc
inc
ret
lods
icebp
push
or
cs
mov
insb
sub
jge
sub
jne
cwtl
loope
or
lret
inc
cmp
and
cmp
mov
xchg
and
imul
fidivrs
lea
idivl
ret
xor
pop
push
sub
xor
push
xchg
cmp
fldpi
int
push
add
push
or
movsb
push
ret
adc
add
rolb
xor
cwtl
insl
lods
lea
pop
inc
or
xchg
fld
push
fmull
sbb
cld
fistpll
dec
jnp
jl
add
shl
add
mov
insl
jmp
push
enter
jl
dec
jecxz
ret
cmp
jecxz
popa
sub
or
sub
add
add
pop
mov
outsl
dec
and
pop
loope
xchg
xchg
adc
push
mov
or
movsl
aam
cmpsl
xchg
cmp
addl
inc
and
lods
loopne
mov
test
decb
jne
mov
inc
push
add
addb
pop
cmp
or
or
sahf
jae
stc
mov
add
jmp
lea
add
or
adc
out
and
and
daa
adc
mov
xchg
out
or
jns
inc
arpl
pop
sbb
ds
stos
mov
data16
sarb
inc
jecxz
mov
push
mov
push
xchg
aaa
daa
dec
sbb
ljmp
push
test
mov
test
xlat
pop
sub
pusha
ret
push
adc
sbb
xchg
fs
es
cs
push
cmp
lea
pop
addr16
mov
fldenv
pop
sub
push
call
or
and
pop
fildl
push
ljmp
sbb
bound
test
inc
pusha
fwait
mov
mov
fiaddl
cmc
jne
and
stc
dec
sbb
dec
sbb
lahf
mov
push
or
jbe
les
das
push
insb
rol
rorl
push
xchg
pop
ret
lods
lock
insl
popf
sbb
xor
inc
and
or
cmpl
sbb
and
sub
inc
ret
sbb
sbb
sbb
cli
lea
mov
movl
inc
cwtl
out
add
imul
push
fildll
fdivs
pushf
push
cwtl
or
xor
fcoml
stos
xor
and
in
xor
cmp
push
pop
add
lods
mov
std
cltd
push
sbb
mov
mov
inc
sbb
icebp
mov
sub
mov
or
or
arpl
jle
ljmp
insl
dec
xor
nop
push
cmc
dec
shr
mov
xor
cwtl
lea
addr16
ds
or
push
add
ljmp
repz
jne
inc
inc
decl
xchg
xor
mov
jmp
es
inc
add
push
lret
sbb
pusha
xor
cmp
orl
add
rol
adc
inc
and
or
addr16
add
pop
sbb
adc
or
xor
icebp
mov
and
cmp
sub
xor
loop
add
rcrb
xor
and
xor
sbb
lock
sahf
in
jno
xor
dec
and
xor
cmp
mov
movsb
jo
and
add
add
lea
push
xchg
pusha
int3
ret
inc
xor
sub
mov
xchg
nop
sbb
pusha
adc
cwtl
add
jno
dec
xor
ror
mov
mov
adc
inc
xor
push
mov
dec
les
andb
mov
xchg
add
dec
add
lret
mov
int3
addr16
mov
outsb
cmp
popa
add
mov
lods
sbb
pop
push
add
mov
mov
push
fisttps
jge
jne
cwtl
out
jns
out
stc
or
push
or
pusha
in
mov
push
in
out
lods
or
iret
imul
jecxz
jmp
inc
push
adc
xchg
or
xchg
or
and
fwait
ret
add
push
roll
out
or
popa
adc
push
or
or
pop
shrl
and
adc
cwtl
mov
mov
xor
add
hlt
adc
subl
repnz
dec
lock
lock
add
add
xor
xchg
std
push
xchg
add
ss
add
jne
lea
in
cmp
adc
cs
adc
adc
dec
mov
clc
inc
mov
cmp
jle
add
lahf
cmp
jg
push
cmp
jmp
out
outsl
push
or
inc
xor
inc
xchg
cmp
jb
inc
or
push
icebp
ja
xor
lret
loop
add
mov
cmp
clc
add
adc
cmp
push
xorb
aaa
imul
dec
cmp
jmp
mov
cmp
adc
lea
lcall
sbb
dec
aaa
lods
in
dec
add
pop
push
xchg
push
push
jno
push
nop
fwait
or
pop
outsl
test
inc
notl
adc
ds
scas
xor
scas
aad
mov
sub
mov
rol
test
and
mov
decb
fbstp
les
cwtl
adcb
xor
fwait
and
mov
jle
pop
cmpsl
mov
push
push
lcall
shlb
sar
out
add
cmp
mov
sets
mov
jecxz
inc
mov
push
pop
mov
pop
xchg
scas
jno
mov
cmpsb
pop
or
cmp
jns
mov
adc
or
adc
aaa
add
lds
mov
shrb
sbb
fildll
dec
sbb
push
or
and
jmp
daa
inc
test
or
popa
loopne
dec
push
faddl
add
push
daa
xor
fdivrs
stos
adc
adc
adc
jae
into
dec
and
fs
push
adc
rcrb
mov
dec
cmp
ret
or
add
push
mov
push
les
and
and
decb
push
lods
push
arpl
add
dec
je
dec
ss
les
adc
xlat
inc
pusha
int3
push
xchg
mov
inc
lock
xchg
jbe
sub
push
pushl
push
cmpsb
int3
add
xor
sub
push
inc
gs
sbb
inc
push
push
push
insb
nop
xor
ja
or
push
add
mov
stos
push
xor
or
xor
lods
pop
push
inc
inc
mov
imull
adc
outsb
cmpsb
div
add
dec
push
imul
mov
cmp
dec
dec
jge
rorl
mov
and
sbb
shlb
add
shll
and
sbbl
and
insb
jge
mov
add
dec
xchg
cmpsl
sub
lock
jne
jmp
int3
mov
inc
inc
les
mov
mov
cmp
out
adc
test
sti
mov
push
adc
stc
cmp
enter
fdivp
imul
cmp
cli
add
push
mov
cmpl
push
lcall
pop
sub
daa
idivb
inc
mov
lds
add
adc
and
dec
loopne
ss
fcomps
notb
inc
jbe
mov
addl
in
push
lcall
js
jge
and
mov
icebp
or
lock
dec
jno
je
sbb
bound
arpl
in
addl
push
inc
cmp
pushw
and
or
cmpsb
ss
hlt
popa
dec
cmp
mov
sub
jnp
or
outsb
jae
imul
sub
sub
dec
adc
jae
mov
dec
sbb
stos
adc
add
loopne
repz
or
pop
and
outsb
mov
cmp
push
lret
and
and
xchg
inc
fisttpl
push
and
mov
or
les
jnp
mov
movsl
lcall
jae
lds
jae
and
icebp
add
sbb
lock
push
lret
add
mov
sub
bnd
mov
aaa
and
addr16
add
jp
adc
xor
sub
xchg
push
push
adc
jmp
loopne
push
inc
adc
push
add
sbb
dec
adc
pop
fwait
ret
rclb
cmp
xchg
mov
fadds
mov
lock
aam
or
and
lds
add
cmp
int3
icebp
push
sub
jp
pop
pop
adc
lret
enter
inc
sbb
cmp
cmp
out
or
test
nop
push
and
loopne
push
lods
lds
adc
imul
test
leave
inc
popa
in
ret
mov
add
scas
jmp
lds
mov
or
or
and
sbb
leave
sbb
and
pop
leave
adc
and
enter
mov
incl
sub
and
inc
popf
daa
clc
mov
movsl
subb
lea
enter
jo
adc
lret
xor
vmovupd
mov
roll
mov
add
add
push
cltd
push
cmp
mov
bound
aas
push
mov
add
and
add
and
mov
xor
loope
imul
inc
xchg
mov
pop
das
sbb
mov
and
int
cmp
out
push
or
stos
adc
idivl
jg
cmp
xchg
sbb
inc
cmp
mov
pop
push
lea
les
inc
inc
inc
inc
jb
mov
jb
cmp
sbb
insl
cmp
ljmp
es
xchg
sbb
lea
fisubs
jge
sbb
out
adc
loop
jge
loopne
ret
addr16
lock
call
mov
sbb
imul
sbb
leave
add
fimuls
daa
ret
push
pushl
xchg
into
aas
adc
cld
sahf
cmp
xchg
xchg
sbb
xchg
mov
xor
sbb
sar
adc
fiadds
test
add
or
xchg
call
scas
xchg
or
fcom
and
orl
movsl
inc
int
dec
jo
mov
sbb
es
dec
add
rcrl
add
int
mulb
xchg
inc
jle
shlb
movsb
mov
fsubs
lds
sbb
jl
add
add
xor
sub
scas
mov
or
xlat
ror
lds
adc
inc
push
scas
jecxz
lock
mov
cld
pop
sub
push
sbb
lret
int
fiadds
into
add
sti
xor
and
sbb
sbbb
xchg
push
int3
and
pop
cmpsl
fsubl
mov
les
cmpsb
sbb
lret
sbb
add
mov
sbb
jno
bound
xchg
xchg
push
mov
inc
mov
lds
dec
test
mov
pop
stos
gs
sub
or
mov
xchg
clc
lea
mov
xchg
xor
jae
push
es
and
inc
push
mov
mov
jl
jl
push
dec
add
daa
or
scas
pop
jle
in
testl
add
dec
or
mov
mov
stc
pop
in
jge
xchg
inc
and
xchg
lahf
push
cld
add
mov
push
xor
xchg
xor
je
xchg
inc
fistpl
or
imulb
and
jnp
push
jge
shll
dec
or
xchg
fcom
inc
xor
sub
xor
sub
dec
jl
add
add
insl
fwait
in
inc
paddusb
inc
push
sbb
dec
fsubl
je
mov
or
lods
lock
xchg
mov
adc
movsl
mov
std
cld
inc
add
xlat
pop
mov
test
mov
inc
adc
cmp
mov
jl
sbb
xchg
xchg
adc
jl
rorb
ret
rcrb
nop
lock
sbbl
pop
add
pop
jecxz
sub
or
cwtl
or
cmpsl
pop
xor
outsl
call
dec
or
ret
ror
call
xor
enter
xor
stos
sub
mov
push
adc
push
sub
or
mov
call
or
inc
sub
mov
push
pop
ficoms
leave
loopne
aam
push
adc
sbb
jmp
xor
lret
xor
jmp
lcall
and
xor
out
aam
push
lock
popf
dec
insl
inc
data16
jmp
ret
push
mov
or
mov
add
inc
inc
push
jne
les
hlt
inc
dec
jl
or
add
popf
rclb
mov
aad
les
popa
addr16
cli
sti
add
jb
cmp
add
jge
int3
lock
sbbb
iret
js
push
imul
and
pusha
in
xor
or
mov
jno
mov
mov
sub
ds
leave
or
lss
lret
mov
and
adc
aaa
mov
adc
mov
call
addb
xchg
out
loopne
ret
and
mov
sbb
inc
call
fwait
shlb
icebp
add
sti
pop
cmp
dec
rol
push
loop
ret
clc
jg
or
push
add
daa
in
pop
push
lock
in
xchg
inc
fxch
sub
add
outsb
add
add
cmc
jae
inc
inc
cld
jge
or
cmp
jp
or
testb
inc
sub
and
jb
pop
inc
or
xchg
je
or
jge
dec
icebp
lea
push
lock
mov
ds
adc
into
add
mov
call
mov
add
jae
adc
in
or
jb
adc
adc
fsubs
adc
pop
js
hlt
or
aam
out
out
das
pop
add
xor
or
test
mov
stos
cld
mov
out
jge
jns
jns
and
or
or
or
xor
or
push
adc
test
add
or
inc
pop
notl
xchg
inc
data16
pop
movl
loopne
and
adc
test
outsb
test
add
add
ss
pusha
adc
push
inc
rorl
push
add
xchg
pop
lcall
lcall
or
xchg
fidivrl
and
inc
add
mov
rcrl
pop
rorb
add
inc
mov
dec
repnz
or
add
inc
inc
sub
fmull
ret
ret
cmp
push
pop
aam
fcoml
xchg
jmp
mov
or
outsl
sbb
mov
add
or
orl
adc
fmul
sarb
rcrl
mov
stos
das
xor
in
cmc
and
cld
cmp
mov
les
inc
stc
add
dec
in
add
and
pop
xchg
arpl
repz
dec
mov
mov
mov
and
mov
stc
clc
add
aad
jp
push
ljmp
dec
jbe
aad
mov
roll
push
mov
fwait
sub
hlt
mov
ja
sarb
cmpsl
sub
roll
sbbl
sub
int3
xchg
bound
ficoms
ret
sbb
fwait
and
mov
out
inc
or
test
adcl
pusha
xor
in
mov
jge
jae
fidivrs
js
mov
cmp
and
in
or
jnp
adc
std
pop
mov
sub
test
fdivs
sbbl
push
add
dec
xor
and
ss
shll
adc
test
inc
jns
cmp
mov
leave
sbb
xor
repnz
or
call
movl
cwtl
xchg
xchg
mov
sbb
jo
inc
adc
lods
rcl
adc
inc
cmpsb
rol
pop
popf
add
push
sarb
jl
inc
push
sbb
sti
cmp
cwtl
inc
push
sahf
lods
inc
mov
xchg
std
pop
push
ds
inc
nop
cltd
inc
out
push
or
cmp
or
jp
rcrl
aas
lea
mov
pusha
sti
rorb
inc
lcall
and
push
loope
push
filds
xlat
ficomps
filds
cld
rcl
mov
or
pop
inc
jmp
inc
jl
and
mov
and
or
cwtl
mov
sbb
dec
ret
lods
adc
insl
and
pop
test
sbb
mov
cmp
and
and
pop
loopne
sbb
fmull
fmuls
jo
mov
or
fstps
inc
sbb
inc
addb
inc
or
mov
pop
mov
lds
sti
or
add
sbb
push
fisubrs
in
stc
andb
mov
push
cli
gs
nop
push
add
rclb
add
leave
cmp
push
popa
cmp
adc
scas
dec
and
jl
enter
mov
push
add
inc
dec
push
rcrb
orb
sub
add
xchg
lea
push
push
enter
and
in
adc
enter
jbe
aaa
jbe
or
inc
ds
call
mov
sarl
sti
jg
sarb
sub
cmp
pusha
lahf
cmpsb
sub
roll
add
jecxz
test
data16
jge
sbb
loop
stos
lcall
hlt
pop
fs
test
and
in
sub
or
sahf
or
mov
repz
fstps
sub
mov
in
fsub
in
dec
fcom
aam
dec
dec
mov
ror
or
dec
cs
dec
movsl
scas
adc
das
inc
pop
mov
rcrb
xor
lea
rclb
cmpsb
lock
jg
loopne
push
pop
in
fadds
adc
push
and
xchg
loop
rcrb
fs
adc
sarb
inc
xchg
push
sbb
ror
mov
mov
sbb
stos
or
push
adc
push
xor
fwait
push
int3
iret
testb
mov
popf
das
and
push
movsb
dec
inc
or
dec
inc
sbb
jb
or
fwait
out
sub
adc
inc
arpl
sarb
in
xchg
fs
mov
sbb
sbb
jb
arpl
das
fidivs
add
xchg
fidivrs
adc
pop
repz
xor
add
pop
ret
adc
call
xchg
lldt
lcall
pop
adc
add
rcpps
rorl
lcall
jecxz
fwait
adc
sub
loope
test
orb
jno
lcall
xor
dec
dec
cmpsb
mov
xor
pop
sub
mov
add
inc
xor
dec
popa
jecxz
mov
sbb
push
mov
arpl
ret
stc
and
mov
xchg
push
add
leave
loope
push
dec
jge
ret
mov
and
xor
cmp
les
mov
dec
stc
pop
and
or
mov
adc
push
nop
xchg
push
push
inc
sarb
mov
stc
xlat
imul
pop
sub
jmp
jnp
out
mov
dec
push
sub
shl
or
stos
jl
test
ljmp
inc
adc
addl
dec
pop
dec
adc
fcmove
or
ljmp
les
fadd
add
and
and
add
mov
mov
xlat
lock
mov
pushf
jg
andb
inc
ficoml
test
out
push
sbb
or
rcrb
mov
push
loop
cld
xchg
mov
test
and
inc
dec
dec
mov
or
adc
dec
inc
ja
xchg
nop
imul
jne
pusha
xchg
sbb
push
jle
test
push
loopne
dec
adc
outsl
test
or
inc
or
cmp
xor
push
aaa
sub
rcr
in
inc
decl
fildll
ret
adc
push
and
dec
lcall
sbb
je
adc
pop
xchg
test
push
test
xor
push
inc
inc
scas
or
aaa
test
addb
das
mov
push
adc
repnz
insb
pushf
leave
lea
fidivl
ror
mov
pusha
cmp
adc
mov
scas
mov
rol
sub
pushf
mov
sbb
outsb
es
fdivr
daa
xor
test
jmp
jle
cmp
jle
les
push
adc
mov
fistpl
adc
and
pop
add
nop
dec
mov
test
xor
push
jbe
push
or
mov
adc
pop
mov
mov
aas
incl
dec
pop
decl
inc
add
adc
out
loope
insb
or
cwtl
add
or
or
fdiv
stos
inc
adc
pushf
ljmp
jnp
dec
adc
mov
and
dec
xor
fadds
sysret
xor
mov
cmp
adc
push
inc
add
testl
shl
not
and
sahf
or
pop
mov
outsl
push
add
insl
jb
pop
or
decb
jle
mov
adc
mov
mov
outsl
sti
xchg
in
icebp
xor
push
dec
pushf
std
je
xor
ret
add
jns
int
jo
jo
sbb
sbb
sub
movsl
cmpsl
mov
test
mov
or
or
loopne
and
jno
lret
enter
sbbb
inc
add
shrb
dec
sbb
lds
mov
jmp
adc
pop
adc
lahf
mov
jb
in
fdivr
enter
fldl
stos
pop
pop
lret
aam
push
sar
popl
andb
fdivrl
scas
mov
dec
and
push
addr16
adc
lds
and
repnz
and
dec
add
sbb
arpl
sahf
push
mov
push
fstl
mov
jmp
jns
add
jecxz
jl
or
outsb
daa
adc
mov
pop
into
rcrl
les
rorb
inc
xchg
mov
mov
idivb
add
xor
repz
or
sbb
pop
outsl
or
aam
mov
ret
das
inc
or
jnp
push
flds
je
out
adc
aad
call
roll
jle
pop
cli
mov
and
mov
cmp
fxch
jne
fwait
add
lcall
cmpl
sub
sahf
shrl
cmp
cmp
inc
je
adc
push
xchg
xor
add
xchg
popl
in
cmp
add
jl
dec
xchg
and
xor
aaa
fwait
inc
add
cmp
push
mov
in
in
pop
and
lcall
pop
je
dec
mov
push
add
xchg
inc
in
scas
mov
sbb
sbb
mov
add
xor
pop
sbb
mov
stc
mov
jl
push
jmp
or
enter
data16
pop
outsb
lcall
and
ror
loope
stos
and
test
aaa
insb
enter
jl
mov
add
inc
dec
call
mov
aam
shll
inc
mov
les
call
popf
es
cmpsb
repz
into
rolb
lret
dec
cmp
dec
not
or
add
es
ljmp
out
mov
insl
loope
push
cli
add
sub
mov
stos
sub
stc
cmpb
adc
sub
sub
fnstsw
imul
xchg
pop
mov
cmp
xor
ss
int3
jo
int3
test
fisubrs
hlt
xchg
pop
sub
add
push
xchg
out
mov
std
testl
incl
aad
pushl
mov
nop
add
lea
push
jnp
fbstp
sbb
fcmovnb
sti
daa
sti
mov
lds
pop
cmp
or
sub
ljmp
adc
iret
adcb
idivb
push
xchg
ret
mov
push
adc
xor
pusha
cmp
jo
xchg
add
nop
insl
mov
ret
or
nop
mov
int
sub
pusha
mov
pusha
add
add
mov
xor
xchg
pusha
nop
pusha
and
jns,pn
xchg
in
into
dec
sbb
dec
test
ljmp
flds
fadds
fstps
push
filds
inc
repnz
cmpsl
mov
add
sbb
or
adc
bound
or
rol
cmpsl
adc
pop
cmp
or
es
adc
fs
ss
ficompl
sub
push
and
sub
mov
in
cltd
and
sbb
fs
adc
sub
fisttpl
sub
or
xor
sbb
or
lods
jns
adc
adc
fisubl
int
rcrb
push
sbb
fdecstp
xchg
negl
xchg
rolb
add
icebp
imulb
mov
and
ljmp
mov
sti
cmp
push
inc
in
xor
fs
cs
jg
adc
and
sub
add
or
or
and
or
bound
pushf
in
or
dec
repz
and
rcrb
mov
add
xor
cmp
ja
pusha
xor
loop
sbbb
cwtl
in
lcall
lcall
and
dec
and
je
jg
out
aas
adc
mov
cmpsl
aas
orb
xlat
lock
inc
or
enter
sbb
push
insb
cmpsl
jl
sbb
rorb
add
add
fdivl
cmpsb
or
rolb
js
xchg
or
push
adc
xchg
cs
xor
rorb
and
lret
ja
imul
inc
aaa
outsl
jge
fadds
pop
out
jmp
lea
mov
xchg
sub
iret
jge
cmpsb
rolb
push
inc
sub
mov
add
shlb
mov
cmp
or
loope
and
ret
xchg
add
sar
add
jae
int
inc
mov
inc
adc
sub
fs
xchg
cli
mov
pop
pop
push
sti
jne
lea
mov
stc
dec
mov
sbb
xchg
xlat
inc
popf
xchg
ret
xor
shl
inc
xchg
mov
mov
inc
jp
xchg
xor
push
movsbl
clc
inc
fwait
loopne
inc
lea
jp
aas
xor
inc
or
mov
je
and
ss
xchg
inc
in
mov
imul
cmpb
lret
lock
adc
push
mov
nop
jb
pop
mov
dec
mov
fmuls
xor
daa
xor
cmpl
jns
jge
stc
aaa
adc
jne
jg
enter
or
je
pop
add
repnz
inc
out
fwait
testl
mov
mov
xor
je
jo
xlat
add
xchg
inc
and
hlt
xor
dec
aaa
lcall
pop
lcall
addb
add
leave
jp
inc
xchg
pusha
sbb
popf
sbb
ret
dec
cmpsl
cmpsb
push
shrl
mov
sbb
outsb
repnz
cmpsl
fbstp
cmp
aad
pop
lcall
xchg
clc
push
cmp
cmc
lahf
fiadds
push
dec
inc
inc
or
nop
sbb
aas
pop
push
popa
pusha
int3
push
jmp
cmp
mov
int
cmc
xchg
into
aam
ss
sbb
aaa
cltd
cli
push
mov
jbe
aam
jge
xor
pusha
or
insl
loop
inc
dec
scas
cmp
jle
aaa
pop
icebp
dec
icebp
aad
lock
xchg
shl
mov
mov
sub
pop
jg
sub
mov
adc
roll
or
xlat
dec
sbb
cltd
add
nop
add
adc
sbbb
push
jo
push
xchg
sub
outsl
xor
ret
mov
adc
inc
and
cmp
jb
sbb
out
imul
pop
imul
scas
jns
pop
rcll
adc
mov
sub
movsb
pop
or
aas
stos
adc
or
stc
pop
inc
or
xchg
movsb
dec
sarb
scas
dec
or
cwtl
inc
std
les
or
pop
rolb
rcrb
ret
sub
sbb
sub
mov
hlt
ds
adc
cwtl
insl
jo
mov
mov
cmp
test
sub
cmp
test
mov
adcl
sub
insb
mov
loope
add
add
ss
jge
xor
imul
mov
mov
pop
xchg
call
aaa
xor
xchg
push
fisubs
sbb
add
sbb
pop
lods
mov
push
pop
or
mov
pop
adc
jle
add
test
enter
sbb
cltd
rclb
aas
imull
jae
and
add
punpckldq
cmp
sbb
cmpsl
add
jp
cmpsl
lahf
push
jnp
mov
popa
add
ret
int
dec
dec
mov
insl
or
call
add
iret
mov
jl
xchg
push
rcll
out
fsubl
call
popf
hlt
or
movsb
and
inc
inc
rolb
and
cmp
movl
push
enter
jecxz
mov
xchg
dec
add
pop
sahf
sbbl
adc
push
cmc
pop
out
sahf
pop
inc
inc
cltd
sub
pop
mov
sub
add
sbb
lock
negl
xor
mov
and
mov
jecxz
sbb
daa
fldl
ljmp
push
sti
add
pop
movl
mov
sbb
or
sub
dec
ret
xchg
testb
out
lret
scas
add
jl
ret
je
cmp
mov
shl
xor
dec
popf
movsbl
imul
mov
rorl
mov
repnz
mov
adc
cmp
sarb
test
xchg
cltd
push
dec
xor
in
rcll
adc
daa
jb
xlat
add
incb
adc
push
sarb
lahf
fmul
jmp
mov
add
push
in
dec
xchg
stc
mov
add
incb
addb
decb
jle
aas
inc
ja
dec
dec
ja
rol
sbb
jo
fimuls
dec
cmpb
sbb
adc
xchg
adc
adc
jg
inc
cli
mov
cmp
dec
mov
inc
inc
mov
push
in
inc
movsl
and
test
and
push
es
pop
aam
push
cmp
and
leave
adc
and
mov
imul
mov
sub
mov
pop
inc
push
mov
mov
push
andb
inc
push
and
fs
pop
or
dec
pop
push
popa
jne
add
jns
subl
push
rolb
sub
fstpl
sub
movsb
mov
inc
and
xchg
iret
mov
mov
dec
or
cmp
roll
add
je
push
mov
mov
scas
push
mov
add
loop
dec
cmpsl
or
in
xor
mov
dec
clc
mov
imul
sub
mov
bound
pop
loope
pop
xchg
sbb
fists
add
mov
nop
lcall
nop
popa
add
cltd
xchg
add
adc
pop
jb
add
adc
cmp
inc
add
subb
lahf
dec
sbb
mov
loopne
mov
rcl
adc
push
mov
in
lds
inc
mov
sbbl
and
nop
mov
outsl
rorl
inc
sub
fs
push
fs
sub
jb
mov
xor
in
mov
cmp
xor
inc
fs
push
jo
push
add
xchg
movsl
xor
or
xchg
data16
clc
pop
mov
jb
cld
jb
int
inc
mov
pop
rcrb
dec
adc
or
add
aas
jge
adc
dec
lahf
xor
inc
dec
nop
xchg
adc
sbb
ret
add
push
test
add
test
push
sbb
js
xchg
mov
mov
cmpsl
or
and
jb
and
mov
mov
push
or
jge
pop
jmp
aas
add
subl
add
jmp
andl
pop
push
adc
jb
push
lcall
fiadds
xor
leave
fcmovnb
inc
sbb
call
sub
adc
sbb
jbe
lahf
or
pusha
fstpt
or
add
je
sbb
sbb
dec
add
xchg
pop
add
mov
or
ret
sbb
test
add
cmp
mov
xchg
lea
sub
jbe
repnz
lock
xor
hlt
jo
mov
jae
adc
mov
test
mov
popa
cmp
sub
aas
enter
add
mov
lock
inc
aam
jb
mov
or
fdivs
pop
sub
aam
decb
rcll
cltd
or
dec
sub
or
popf
iret
outsb
jne
jns,pn
push
xlat
decb
sub
xchg
dec
xor
and
in
call
in
jbe
xor
mov
aam
ja
sbb
xchg
mov
repnz
dec
dec
or
mov
sbbl
testb
outsl
inc
enter
or
inc
dec
jle
add
inc
out
xchg
dec
out
orl
push
xchg
add
nop
orl
dec
mov
pop
rclb
movsl
inc
xchg
insb
dec
xor
and
and
xchg
pushf
mov
push
sub
rcll
inc
dec
add
pop
jbe
pop
xchg
andps
lahf
xchg
cmp
push
pop
outsl
js
nop
add
fcomps
test
cmp
nop
add
leave
and
and
and
sub
mov
das
xor
lcall
outsb
mov
or
inc
add
adc
adc
shlb
xchg
notl
push
shrl
addr16
pop
jb
int
insb
pcmpgtb
aam
add
and
inc
push
in
cmp
push
inc
je
dec
push
fs
js
insb
shrb
aam
add
pop
jo
push
aas
jo
push
rcl
mov
imul
out
adc
mov
xor
aaa
add
inc
cmc
fchs
leave
mov
xor
movsb
lods
xor
inc
add
mov
push
xor
sub
jae
lods
cmp
outsb
sbb
mov
mov
pop
int3
inc
ja
sbb
jp
lods
mov
lods
sbb
inc
inc
inc
jp
ja
insl
imul
or
out
cs
dec
aaa
test
imul
sub
jbe
das
push
test
adc
and
inc
add
or
cwtl
dec
xor
fidivs
sbb
cmp
mov
adc
xchg
mov
insb
jo
mov
mov
and
and
ret
add
sbb
mov
xchg
sbb
xor
jae
mov
mov
ret
adcl
in
cs
mov
cmp
cmp
mov
push
jbe
mov
xor
mov
sarb
pop
push
mov
pop
sbbb
enter
ljmp
sbb
xchg
sbb
test
xchg
sbb
orb
mov
mov
in
push
add
sbb
and
sbb
nop
imul
and
mov
jb
ljmp
push
mov
or
shlb
iret
xchg
or
jno
xor
or
inc
xchg
jne
fstl
aad
subl
out
outsb
addl
or
adc
mov
cmpsl
mov
iret
cwtl
adc
and
mov
cwtl
and
dec
sbb
rorl
and
mov
ret
sub
sbb
lcall
pop
adc
dec
dec
out
push
rcrl
mov
aaa
or
sub
mov
or
aaa
or
xlat
pop
fwait
add
sub
sub
jmp
add
in
push
pop
sub
push
pop
or
pushw
push
leave
xchg
imul
jne
out
movsl
jbe
jecxz
gs
insl
pop
pop
mov
xchg
mov
push
test
adc
mov
xor
lds
pop
xchg
in
mov
mov
or
mov
gs
pop
jmp
pop
insl
mov
pop
mov
scas
aas
pop
mov
add
test
pushaw
pop
lods
mov
pop
pop
xchg
mov
add
mov
cmpsl
mov
rcl
inc
es
sub
and
xor
lahf
inc
test
mov
xchg
ret
ss
jbe
cmp
test
movsb
pushf
or
dec
mov
xor
nop
mov
and
imul
test
in
test
mov
pusha
dec
mov
out
in
sub
sub
jle
incl
jl
pop
mov
mov
xor
jle
std
adc
xchg
test
jns
or
sub
jne
fcomi
pop
xor
call
mov
mov
inc
cmp
les
and
fidivrl
stos
push
loop
das
or
sbb
or
and
sbb
imul
add
xor
je
sub
xor
dec
jnp
push
or
adc
xchg
cmp
mov
pop
push
xchg
cmpl
sbb
mov
inc
adc
rcrl
das
cmp
jne
adc
loopne
arpl
leave
jne,pt
popa
pusha
pop
add
and
sti
xor
xchg
pop
das
cmp
sbb
cmp
or
add
and
jecxz
sub
add
jecxz
inc
movsb
sub
add
cmp
mov
rolb
xor
mov
ret
dec
fists
push
fbstp
sub
mov
test
movsb
add
clc
lods
rclb
fdiv
add
sbb
and
and
mov
cltd
ss
pusha
pop
xor
orb
dec
lock
fistpl
adc
subl
fsts
cmp
loopne
inc
and
lret
enter
mov
insl
xor
pop
fwait
rolb
and
cmp
jge
subl
xchg
popf
adc
movsl
push
test
push
push
leave
xchg
inc
fdiv
xor
cmp
mov
or
adc
in
push
push
iret
hlt
add
adc
pop
sbb
add
aam
mov
add
enter
int3
mov
and
dec
mov
pop
mov
lret
por
mov
or
mov
jge
movsl
enter
shll
push
adc
cmp
lds
repnz
test
ss
push
add
lock
pusha
ljmp
incl
loope
cmp
or
or
push
mov
sti
sbb
stos
or
and
inc
ja
seto
or
xchg
je
test
pop
ds
xor
push
bound
mov
sbb
lods
adc
shll
cmpsb
mov
cltd
sahf
inc
shll
sbb
and
lock
xchg
stc
jno
loopne
rolb
push
in
push
inc
xchg
das
mov
add
push
sbb
out
or
dec
je
push
shll
xchg
cmpsl
adc
fst
andb
cmpsb
adc
pop
sub
adc
pop
dec
add
or
shrb
pop
mov
or
mov
add
lds
push
ret
insl
cmp
mov
pusha
test
out
filds
and
les
sub
out
leave
sub
adc
mov
cmp
xor
xor
cmp
cwtl
sahf
orl
and
mov
loopne
sbbl
in
or
cmpsb
and
jne
call
stos
adc
nop
push
mov
push
mov
xlat
pop
adc
ds
dec
mov
adc
fldt
mov
pop
cmpsb
or
jnp
jne
fimull
imul
es
or
mov
test
test
add
xchg
pop
adc
adc
cli
lret
mov
sahf
iret
mov
dec
add
rol
pop
in
cmp
add
cltd
inc
mov
mulb
jge,pn
inc
sbb
and
movsb
ds
push
adc
inc
cmp
into
aam
pop
movsl
je
fistl
ds
hlt
jge
push
jnp
xor
cmpsl
out
hlt
push
ret
test
call
mov
ja
cmp
cwtl
push
add
outsb
rcll
jmp
push
shlb
aad
jp
cltd
sub
ficoml
jnp
sub
mov
or
incl
and
pushf
cmpb
jne
sarb
jo
adc
sarl
inc
sub
jne
pushf
pushf
mov
mov
lret
add
xchg
adc
bound
mov
push
in
mov
xlat
mov
test
mov
jo
dec
dec
and
sub
nop
sbb
lret
cmp
mov
jl
pop
cmp
cmpl
enter
adc
adc
ret
outsl
add
push
out
xor
lods
jbe
imul
nop
inc
push
sbb
jae
push
sbb
jbe
sbb
js
jp
fs
inc
jnp
jge
nop
inc
push
jle
pusha
nop
inc
push
sbb
arpl
sbb
pushw
sbb
push
nop
inc
imul
inc
push
outsb
outsl
push
nop
inc
push
sbb
push
inc
push
sbb
push
push
sbb
pop
pop
pop
sbb
pop
pop
pop
fs
inc
push
pop
pop
inc
nop
inc
push
sbb
inc
inc
push
sbb
inc
push
sbb
dec
dec
dec
sbb
dec
dec
dec
xchg
ret
popa
push
dec
outsl
or
in
adc
mov
cmp
insb
cs
ds
in
sbb
repz
xlat
pop
push
fadds
js
add
mov
or
gs
je
sbb
dec
imul
xchg
pop
adcb
dec
sub
ja
add
xor
bound
les
adc
divb
add
mov
xor
sbb
jno
mov
xor
shll
pop
mov
or
push
test
and
or
rorb
pop
or
scas
xchg
or
cwtl
fsts
jge
add
cwtl
mov
lods
adc
or
dec
orb
pushf
mov
jne
cmp
mov
inc
shlb
dec
pushl
inc
push
lods
out
ljmp
ds
pop
mov
gs
inc
fs
add
or
mov
push
es
adc
jne
jmp
shrb
push
adc
aam
push
int
or
add
rcrb
sbb
lret
in
xlat
pop
mov
add
or
push
pop
adc
lret
loop
mov
or
aam
lahf
lret
or
mov
adc
mov
mov
mov
xchg
jmp
add
gs
ret
shl
mov
add
inc
mov
test
fistl
push
popa
xchg
aaa
push
cltd
test
out
inc
push
xchg
or
adc
sti
inc
call
pop
ja
mov
and
iret
inc
or
pop
xorb
sbb
repnz
mov
adc
xor
imul
fimull
cmp
pusha
mov
mov
inc
cmpsb
mov
xchg
sub
push
push
or
or
or
or
fists
push
push
fldcw
push
es
push
mov
cmp
pusha
fistps
aam
aas
lods
imul
or
or
or
xor
push
mov
insb
js
xchg
movsb
cmpsb
movswl
pop
pop
loopne
cmp
sarl
pop
push
sbb
or
test
or
or
dec
xor
push
push
push
roll
cwtl
push
sub
adc
adc
xchg
xor
cmpsl
into
lea
pop
mov
xchg
sub
sbb
pop
add
fwait
and
push
and
add
in
hlt
lea
add
loope
add
xchg
inc
mov
push
adc
pop
insb
les
mov
addl
mov
icebp
mov
jle
into
movl
mov
mov
adc
xchg
and
fldt
aas
mov
inc
xchg
test
mov
xchg
rolb
test
mov
int3
pushf
cmpsb
cmpsl
lds
data16
movsb
popf
jbe
int
push
or
or
inc
push
sbb
push
add
stos
adc
inc
fisubl
push
xchg
insl
dec
add
xorl
cmp
cmp
dec
xor
mov
xor
pop
adc
pop
dec
dec
aam
hlt
sbb
lods
cmpsl
inc
add
les
xor
outsb
mov
pusha
xchg
add
mov
adc
dec
mov
mov
pop
push
movsb
mov
jmp
push
insb
and
and
ficomps
dec
sbb
call
mov
fdivs
call
xor
mov
add
daa
shlb
sti
andb
xor
mov
pop
arpl
ss
aas
in
jmp
js
mov
inc
adcl
imull
xlat
xor
cmovg
xchg
loopne
jmp
jnp
adc
and
xlat
cmc
in
rorl
sbb
hlt
fwait
jno
in
jne
sahf
shll
push
xor
fcom
sub
pop
pop
add
rcrl
mov
lods
sbbl
jge
sbb
adc
jl
int3
mov
sbb
sbb
mov
enter
repz
ret
pushf
cwtl
push
inc
or
mov
and
daa
or
fiadds
adc
sbb
outsl
test
push
dec
push
jb
loope
adc
cmp
lods
nop
and
ret
mov
mov
fsubs
and
xchg
sbb
enter
adc
lods
lds
rcl
mov
ljmp
mov
mov
leave
icebp
js
stos
daa
test
or
daa
cld
mov
test
aas
pop
and
xor
pop
clc
xchg
popf
adc
clc
xchg
and
cmp
out
pop
jne
add
mov
mov
adc
sub
push
jg
cmp
add
xor
add
add
add
lret
dec
adc
mov
mov
cmp
xchg
and
insl
add
pop
stos
cmp
push
aas
js
jno
add
pop
aas
push
sub
scas
jle
aas
jb
lods
fwait
mov
sub
pop
ja
or
cmp
or
jbe
mov
ss
cmp
mov
into
and
bound
and
push
sti
xor
or
mov
adc
fwait
add
inc
inc
fninit
jno
pushf
and
cwtl
jecxz
aad
and
test
dec
addb
sbb
push
and
sub
mov
and
cmp
hlt
adc
add
sub
mov
xor
dec
xchg
nop
cli
or
xchg
movsl
jmp
xchg
scas
push
loope
ja
mov
add
cld
fcomps
pop
fsts
cmpsb
lods
or
dec
or
out
fwait
clc
faddl
jmp
cmp
test
out
ret
ja
fisttpll
mov
add
dec
adc
insb
rolb
rcr
inc
sbb
or
adc
xor
or
bound
or
adcb
inc
sbb
scas
sub
ja
cwtl
in
ja
mov
jae
or
and
add
and
ss
jecxz
jbe
clc
clc
or
inc
stos
daa
fnsave
sarb
popa
fnsave
xchg
fstl
cmpsl
pop
xchg
out
add
mov
test
inc
loopne
xor
or
in
dec
mov
out
xor
mov
stos
xchg
idivb
or
mov
or
ljmp
dec
fwait
dec
add
out
mov
enter
sub
je
dec
int3
call
enter
inc
dec
push
je
subb
fs
jbe
xchg
in
push
ffreep
aas
or
sbb
mov
and
outsl
cmp
movsl
and
xlat
add
dec
loop
cwtl
jecxz
or
ljmp
enter
mov
pop
insl
es
mov
mov
mov
or
in
inc
push
jae
insb
mov
into
nop
add
imul
mov
enter
add
nop
ret
addb
add
push
mov
popa
jns
fldl
sbb
into
movsl
lahf
loopne
or
ja
xchg
arpl
cmp
cmp
bound
pusha
mov
lods
xchg
jp
andl
add
cmp
jge
rcl
addr16
andb
jns
or
cld
mov
nop
add
xchg
inc
push
jo
add
movsb
test
and
lea
adc
rcr
pop
sub
cmp
rcll
ss
push
adc
adc
adc
or
add
pop
and
sarb
jns
test
and
dec
push
movsb
and
cltd
rcrb
imul
fildll
nop
push
faddl
or
repnz
adc
sbb
jne
fmuls
shll
lea
mov
push
fwait
jl
add
mov
repnz
xorb
xchg
stos
roll
ret
stos
dec
shll
xchg
sbb
inc
add
jp
push
jnp
movsb
xor
and
xchg
sbb
add
in
popf
sbb
mov
add
jl
mov
pop
push
imul
mov
rorb
negl
out
hlt
sbb
mov
cwtl
stos
inc
mov
inc
dec
aaa
adc
loopne
or
inc
or
add
icebp
mov
aaa
or
push
arpl
arpl
dec
or
mov
adc
add
mov
xlat
inc
mov
inc
fbld
out
out
mov
and
out
fmulp
or
stc
aam
movsb
out
mov
mov
or
repz
adc
out
movsl
pop
enter
shl
add
push
call
enter
out
dec
loopne
and
xchg
imull
out
lret
push
add
push
fiaddl
jns
movsl
cwtl
std
repz
or
cmp
stos
dec
aad
push
sub
testl
pop
pop
cmp
std
add
shr
xchg
pop
jae
sbb
xor
pop
cmp
mov
jne
shrl
and
cmpsl
cs
rcll
loope
sub
push
push
movsl
test
xchg
cmp
movsl
call
add
adc
sub
ret
sarl
ss
gs
inc
fldcw
sub
cmp
xor
pop
pop
mov
jmp
nop
movl
inc
add
decl
ljmp
fnsave
xor
adc
xchg
or
mov
xor
adc
xor
test
or
xchg
into
mov
push
or
scas
inc
fcoml
lods
adc
and
ljmp
lods
mov
pop
lock
sbb
adc
sbb
mov
mov
jg
push
adc
stos
sbb
aas
nop
rclb
mov
js
notl
sbbb
int
cmp
ret
add
cmp
inc
mov
stos
cmp
aas
sub
jle
dec
dec
adc
subb
ja
and
adc
inc
push
push
andl
sbb
dec
adc
jb
cmp
dec
dec
jmp
push
mov
sub
loop
mov
in
adc
iret
inc
pop
ret
jmp
sub
popa
and
dec
jle
xchg
and
fmul
loop
add
pop
add
mov
pop
dec
mov
sub
test
scas
push
movsb
in
and
cmp
add
lcall
sub
fildl
aam
jmp
jno
add
add
jecxz
out
xchg
jecxz
pusha
rorl
cmp
popa
sub
popf
xchg
sbb
adc
adc
and
cmp
cmp
and
adc
mov
mov
repnz
xor
in
sbb
mov
clc
xorb
les
and
mov
aas
mov
repnz
jns
stos
mov
imul
cltd
sbb
aam
fcmovnbe
aaa
add
sub
fstl
lds
decl
test
scas
or
loopne
test
movl
or
mov
add
inc
filds
mov
add
fnstenv
jne
dec
fs
outsl
xor
sub
add
add
and
or
xchg
xchg
subb
lods
fucomp
and
pop
xor
leave
mov
push
nop
adc
jmp
sbb
xlat
icebp
jge
mov
scas
scas
fucomp
in
iret
push
out
fcmovu
mov
push
push
imul
or
bswap
or
lock
or
fcomi
aam
xor
popa
add
inc
add
ret
loopne
insl
xor
push
mov
jl
inc
out
push
sbb
andb
div
or
imul
cmp
pop
lds
popa
and
inc
fistl
mov
imul
jae
imulb
sub
out
xchg
aaa
shrl
jg
and
es
jl
xor
sbb
je
popa
in
dec
or
les
add
fisttpl
das
arpl
mov
push
or
mov
test
and
ret
inc
adc
pop
jb
jle
in
scas
adc
test
inc
test
add
jo
sbb
inc
adc
and
adc
outsl
fdiv
xchg
and
test
shll
jne
int3
outsl
inc
sbb
or
popf
mov
lds
push
dec
in
and
in
clc
loop
ja
mov
lret
pop
hlt
int3
and
ss
adc
in
or
or
call
fsubr
in
lret
sarl
loop
call
cmp
loope
cld
jecxz
push
cmp
sub
fbstp
cld
faddl
inc
push
adc
arpl
bnd
xor
push
xor
pop
xchg
aaa
enter
rcl
sbb
mov
lds
mov
jecxz
xchg
ss
shufps
cs
adc
call
xchg
fstpl
mov
mov
xchg
pop
lock
dec
add
daa
pop
jp
jmp
jae
ljmp
add
in
mov
push
sbb
jne
jecxz
add
addl
add
js
rorb
shl
stos
movsb
lock
pop
int3
fstpt
jne
aaa
mov
fildl
xor
stos
jb
sub
or
mov
in
mov
leave
js
and
lret
lret
xor
lods
xor
test
add
enter
mov
push
dec
clc
dec
enter
add
lahf
jge
outsl
les
aam
neg
mov
les
fldenvs
push
ror
xor
stos
mov
bound
xlat
jne
loopne
mov
mov
or
xor
push
cmp
inc
adc
xchg
cmp
fadd
add
aad
or
das
xor
cld
push
and
mov
jge
xchg
inc
shrb
cmc
add
aaa
mov
test
out
add
mulb
shrb
testl
mov
mov
das
mov
imul
xlat
rorl
pop
push
mov
cs
adc
dec
push
in
shll
negl
and
popa
xlat
rclb
or
mov
lods
push
daa
cmpl
loop
adc
movsl
jne
add
mov
dec
mov
or
je
adc
data16
popa
sbb
sub
xchg
dec
jecxz
pop
testl
sbb
sarb
add
inc
int3
sub
shll
popa
ljmp
pop
sbbb
adc
and
test
dec
sahf
cmp
loop
cld
fldl
movsl
icebp
pop
cld
jmp
or
hlt
aas
mov
mov
sbb
les
push
imul
add
inc
inc
enter
sbb
mov
out
mov
mov
mov
dec
inc
out
xor
jg
mov
mov
sub
pusha
sub
test
test
xor
or
fdiv
mov
nop
cmpsl
adc
test
push
cmpl
gs
xor
rcrl
xchg
imul
sbb
push
push
es
adcl
push
add
add
pop
in
add
cli
cmp
cmp
cmp
jmp
push
cmp
in
or
fimuls
or
cmp
ja
les
cmp
ja
rcll
cli
pop
insl
pop
pop
mov
adc
ret
sub
ret
shlb
xchg
icebp
ljmp
add
sarl
mov
pop
sub
ret
call
pop
push
add
sbb
lds
dec
js
xor
divl
push
jp
push
pusha
iret
pop
loop
xor
push
rol
sbb
test
adc
movsb
add
add
mov
insb
and
push
jle
daa
sub
xlat
push
loopne
stc
jno
xor
xlat
add
nop/reserved
pop
enter
sub
out
xchg
addl
sub
sti
hlt
cmpb
sub
and
filds
pop
pusha
or
psubsb
mov
jmp
jbe
mov
dec
mov
lock
hlt
and
test
daa
ret
in
add
mov
cmp
lahf
sub
popa
cmp
jg
pop
sub
mov
popa
sub
jnp
dec
test
fistl
dec
xchg
or
neg
xor
pop
dec
fwait
or
inc
sbb
pop
inc
mov
sti
imul
xor
jns
out
add
mov
arpl
std
jb
scas
repz
xor
jno
add
lock
push
or
test
out
add
jnp
sbb
xor
push
inc
and
sarl
arpl
insl
add
and
jmp
mov
dec
cmp
or
cmpsl
dec
adc
loop
testb
xor
xchg
dec
fcoml
movb
mov
cmp
sbb
dec
dec
repnz
mov
in
mov
mov
hlt
subl
dec
cli
mov
jno
add
jmp
enterw
lret
push
and
aaa
jmp
pushw
mov
jmp
sbb
bound
jmp
add
sub
imul
ret
pop
out
fwait
jne
int3
adc
lea
pop
shrb
pushf
or
or
add
jmp
shlb
mov
sbb
xor
push
das
mov
scas
or
rcll
sub
fs
mov
push
cmp
inc
fstl
push
xlat
push
inc
mov
add
test
movsl
stos
mov
adc
add
push
test
jl
sub
dec
inc
adc
insb
inc
test
mov
fs
xchg
inc
aaa
xor
insl
test
sbb
xor
sub
nop
push
jo
jmp
push
nop
gs
shrb
pushf
mov
or
adc
lock
push
xor
leave
insb
xchg
rcll
loopne
adc
jae
test
movsl
sub
sub
daa
add
cmp
jb
mov
ret
mov
jns
push
mov
adc
lods
push
stos
adc
icebp
ret
cmp
jae
mov
add
adc
test
ret
dec
mov
mov
stos
ss
outsb
add
push
cmp
jmp
das
add
pop
andb
xor
in
decl
or
dec
sbb
or
sbb
gs
pop
add
ja
jnp
add
invd
push
add
std
imul
jbe
jg
add
mov
neg
insl
push
lock
sub
push
icebp
add
push
adc
enter
mov
mov
jmp
sub
fldenv
pop
sbb
inc
pop
jmp
or
mov
or
push
adc
gs
sub
or
add
jbe
mov
scas
and
adc
mov
xchg
fcompl
call
xor
shrl
cld
lods
cmp
je
sub
lret
loopne
sub
pop
fimuls
not
loop
and
adc
mov
ss
outsl
adc
and
inc
cmp
mov
xchg
jo
add
cmp
adc
jecxz
mov
push
in
pop
scas
lock
std
dec
pop
inc
mov
xchg
jne
rorl
sub
roll
xor
lock
adc
mov
addb
inc
lds
add
rcr
jg
mov
fsubrs
xchg
xchg
pop
test
filds
dec
sbb
cmc
push
adc
add
or
cs
xchg
ja
dec
pop
shl
daa
dec
mov
fildl
xchg
xchg
clc
pop
jo
inc
arpl
dec
mov
inc
push
ret
cwtl
mov
clc
adc
jne
mov
testl
dec
mov
and
imul
or
add
cmpsl
add
add
nop
push
xor
in
xor
mov
clc
data16
adc
test
dec
incl
mov
dec
push
mov
sbb
mov
mov
loope
mov
push
data16
mov
jno
out
jl
pusha
rorb
mov
cmp
sub
mov
mov
sub
pop
push
mov
sbb
mov
aad
out
add
jmp
or
push
push
stos
sub
push
popa
xor
data16
sbb
sub
lods
push
dec
add
pop
pop
push
pop
inc
inc
mov
out
add
push
inc
xchg
mov
sub
stc
add
pop
jmp
add
int
out
jne
pop
add
pusha
jnp
xchg
inc
mov
popf
rcl
mov
and
fmull
mov
sbb
shr
das
jge
ret
cmp
loop
loop
pop
test
push
ret
cmp
pop
pop
sub
pop
mov
xchg
outsl
arpl
adc
out
outsl
add
or
test
adc
insb
insb
push
dec
cmp
idivb
add
daa
inc
cmp
jne
filds
cld
fsubr
ljmp
jecxz
mov
aas
rol
sbb
cmp
dec
repnz
or
and
daa
ja
fcoms
nop
lea
adc
inc
imul
and
sbb
sbb
out
stos
and
mov
aas
ret
add
les
lock
adc
add
jo
jge
add
rorl
test
andl
ret
and
push
xchg
adc
ja
repnz
jno
enter
cmp
dec
jne
mov
int
push
or
push
sbb
dec
lock
pop
mov
shll
aaa
dec
adc
sbb
inc
cmc
push
xchg
cmc
filds
insb
sbb
lea
pop
sub
mov
lret
scas
outsb
cmc
jbe
mov
cwtl
hlt
mov
push
or
sbb
cwtl
pop
sub
push
push
movsb
mov
mov
pop
pop
jge
jae
or
push
push
cli
adc
out
cs
xor
cltd
mov
in
loope
or
pop
in
ret
ret
sbb
sbb
adc
call
cmp
jg
testb
shll
adc
mov
adc
jle
adc
repnz
cmc
testb
dec
sarb
cli
jl
dec
xchg
out
sti
leave
pop
mov
cld
mov
pmulhuw
repz
lea
lock
fdivrs
test
inc
or
jnp
adc
jge
ds
in
testb
sahf
adc
ret
fcompl
or
jmp
jbe
push
call
dec
xchg
jae
mov
test
jne
xor
and
test
mov
xchg
inc
cld
loope
jge
inc
mov
jecxz
dec
ficoml
dec
sbb
or
dec
push
in
loope
xor
lods
mov
subb
js
xchg
push
xchg
xchg
stc
test
mov
pop
adc
rcr
sti
fisubl
ja
or
insb
and
rolb
push
pop
dec
pop
mov
fdivs
pop
mov
mov
cmp
push
sahf
sbb
pop
inc
cmp
cmp
ss
mov
dec
scas
cs
insb
fsts
pop
or
data16
movsb
adc
inc
jae
cmp
mov
sti
add
or
xlat
jg
leave
and
ret
mov
out
push
inc
outsb
mov
adc
mov
sbb
or
sbb
xor
cmp
jmp
push
inc
loop
mov
push
mov
aaa
or
js
adc
fs
add
push
cmc
hlt
pop
push
xor
imul
or
pop
adc
in
je
add
jmp
lea
movsb
and
outsl
adc
movsl
add
popw
and
es
push
xor
push
or
lahf
imulb
jge
dec
or
add
rcr
mov
jg
mov
mov
rolb
dec
fists
daa
and
push
arpl
sbb
mov
push
test
mov
inc
out
and
mov
push
adc
adc
jne
cmpsl
clc
sub
and
incb
push
push
shlb
xlat
nop
add
scas
movsb
in
add
pop
sbb
or
or
inc
aad
and
inc
outsl
adc
dec
sbb
push
add
add
enter
adc
and
mov
icebp
scas
jo
mov
aaa
xor
adc
add
std
sbb
and
xor
mov
jecxz
enter
testl
and
leave
adc
in
or
loopne
mov
es
push
mov
pop
enter
dec
cs
enter
inc
jno
loopne
or
jmp
and
popa
lret
inc
sub
push
ja
dec
dec
sbbl
push
inc
lods
cmp
das
insl
pop
js
or
push
pop
adc
or
dec
icebp
push
testb
fmuls
push
ss
push
lea
mov
cmp
pop
out
loopne
push
icebp
mov
iret
aas
jb
andb
push
sbb
push
ret
maskmovq
testl
xor
jl
or
jne
insb
or
loope
cmp
in
mov
add
sub
movzwl
sbb
sarb
imul
das
lock
clc
jmp
jge
push
or
inc
popf
imul
push
std
mov
push
sbb
push
add
stos
icebp
rsqrtps
pop
les
fwait
cltd
dec
pushf
and
or
xchg
and
jl
add
pop
adc
xchg
xor
cs
or
xor
mov
es
sbbl
fmuls
sub
push
xchg
fcompl
mov
and
or
pop
inc
push
div
pop
sbbl
dec
mull
nop
es
mov
push
dec
outsb
mov
pop
inc
inc
push
leave
fstpt
dec
dec
jecxz
push
mov
shr
int3
out
mov
decl
cmp
jle
push
and
adc
mov
sub
jmp
jle
sub
dec
mov
leave
pop
movb
js
or
arpl
dec
pusha
mov
cmp
xchg
pop
cmp
jne
popa
pusha
dec
add
or
loope
lds
aam
ret
ret
jmp
mov
mov
pushf
sub
xor
or
jge
test
fistl
add
incb
adc
adc
fwait
or
sti
inc
jbe
mov
cwtl
aad
nop
add
mov
mulb
pusha
testl
push
shlb
loope
sbb
sti
adc
test
inc
xchg
adc
cwtl
jmp
stos
lock
lock
sub
ret
andb
inc
sbb
and
xor
inc
fdivrs
ret
push
sbb
adcl
add
sub
cmpsl
or
push
outsb
add
das
add
test
add
and
movsb
mov
or
adc
movsl
dec
mov
cmpsb
fwait
aas
outsb
adc
push
ret
aam
and
outsb
jmp
adc
dec
lea
or
aaa
sub
sbb
mov
xchg
mov
popa
ljmp
or
xor
enter
sbb
sarb
inc
sub
imul
xchg
jg
pop
or
fstpt
neg
or
lret
dec
mov
je
fcompl
mov
aaa
lret
xchg
div
lahf
pusha
cld
outsl
add
push
sub
fdivs
aam
ljmp
and
nop
stos
mov
push
add
out
mov
invd
sub
push
push
xor
mov
mov
imul
or
jns
dec
add
lmsw
fsts
sbb
mov
dec
mov
aas
inc
cmp
aas
shll
fldz
jmp
push
mov
test
sbb
mov
mov
in
pop
jns
fchs
and
addl
jg
mov
pop
lcall
stos
int3
sarb
fstsw
not
and
inc
mov
sbb
fwait
pop
pop
xchg
mov
jo
bndldx
push
sbb
pop
pop
sub
sub
push
adc
sub
cmp
out
mov
dec
pop
dec
mov
or
in
adc
and
inc
add
xor
cs
leave
or
push
fcoms
pusha
lea
lods
aas
adc
movsl
or
lock
mov
xor
sbb
sbb
jmp
jmp
ja
mov
xchg
inc
popa
cmpsl
test
or
mulb
xchg
inc
insb
imul
pusha
popa
lock
inc
ret
jge
mov
jle
or
dec
rcrb
jle
dec
mov
jmp
jne
mov
mov
idivl
outsb
les
xchg
jle
push
subb
mov
mov
xor
inc
ss
outsl
dec
pop
aaa
mov
out
mulb
pop
add
sbb
les
add
jno
cmp
sub
dec
sub
xor
call
mov
adc
cmpsl
flds
mov
into
pcmpeqb
dec
je
push
ja
pop
repnz
and
add
and
or
leave
in
in
sbb
dec
pop
jne
sbb
dec
xchg
sbb
xchg
push
dec
dec
add
dec
test
push
and
insl
lea
and
mov
clc
roll
sbb
inc
pushf
addb
lcall
sbb
sub
cmpsb
imul
shrl
fisubrs
jb
cmpsl
adc
nop
or
in
mov
lods
in
inc
mov
inc
push
and
sub
inc
push
xor
sub
inc
inc
push
jmp
adc
or
cmpsb
push
mov
push
je
pop
jns
repnz
cmp
test
cmpsb
cmpsl
mov
mov
sub
shlb
cmpsb
mov
pop
imul
mov
sbb
aas
sub
decb
sub
add
sub
mov
loopne
sahf
mov
and
lock
adcl
sbb
add
ds
xchg
and
cmpsb
or
pusha
bound
add
xor
add
push
icebp
inc
icebp
inc
add
cmpsb
push
call
clc
hlt
dec
or
jns
pop
dec
in
sbb
mov
aaa
sbb
subb
ss
cmpsb
orb
push
adc
rorl
dec
jnp
inc
jo
orl
sbb
sbb
imul
dec
lret
mov
sub
inc
inc
cmp
xchg
and
adc
cmp
adc
into
mov
sub
and
lods
in
jmp
cmp
stos
or
xlat
and
jmp
in
push
and
or
subl
sbb
xor
mov
mov
jle
lock
aam
pop
push
pop
adc
mov
test
jns
and
ud0
push
das
sub
push
add
mov
cmp
dec
fisubl
mov
out
repz
pop
cmp
mov
or
add
mov
rorl
adc
mull
add
mov
mov
inc
dec
push
xchg
icebp
mov
adc
add
fistpl
sub
mov
sub
enter
sbb
adc
sbb
cli
inc
or
cli
sub
inc
mov
xchg
out
or
add
fsubrl
push
addb
test
lock
sbb
mov
jmp
and
push
fs
xor
cltd
add
xchg
lock
xlat
fists
dec
mov
dec
jns
push
jmp
and
xor
daa
mov
cld
push
out
or
xor
lea
xchg
cmp
jns
and
mov
add
daa
jp
popf
and
clc
or
dec
imul
jne
shl
fisubs
int
rcll
inc
add
cltd
add
and
sbb
add
inc
or
call
add
imul
pop
push
int
jle
sbb
dec
adc
lock
sbb
je
or
push
xchg
sub
je
cmc
dec
add
inc
sahf
jne
mov
std
cmp
pop
or
mov
mul
xor
push
dec
and
popa
add
pop
inc
fsubrs
jecxz
hlt
rorb
xor
stos
dec
sub
jp
rolb
push
push
xchg
test
adc
jecxz
add
xlat
or
add
and
adc
and
jb
sbb
lods
pop
xor
pop
mov
lea
and
shll
into
rcll
in
adc
jb
pop
jo
add
dec
in
test
xlat
sbb
inc
clc
sbb
scas
sbb
insb
sbb
sub
or
sbb
and
arpl
or
mov
test
mov
scas
mov
jle
pop
les
add
or
daa
pop
je
cld
pop
fwait
push
mov
pop
in
add
insb
repz
jb
daa
inc
push
inc
jecxz
inc
jbe
inc
add
dec
xchg
addl
lret
repnz
loopne
add
in
sahf
loopne
cmc
in
insl
jge
push
pop
dec
cmp
flds
sbb
jae
sti
mov
sbb
sub
lods
or
mov
add
push
jge
add
loopne
or
xor
push
fwait
lods
mov
cld
lcall
and
js
ja
push
mov
pop
inc
ret
sbb
cmpsb
mov
lea
pushl
sub
mov
out
cmpsb
xchg
test
out
dec
sahf
out
jo
push
pop
test
cmp
test
cmpsb
lds
push
pop
sub
enter
lods
xor
cltd
clc
adcl
and
dec
mov
mov
and
clc
jle
inc
or
push
xor
pop
push
roll
rcll
mov
xor
jmp
add
in
test
inc
and
addr16
fmull
xchg
test
ret
inc
shll
pop
mov
movsb
xchg
je
ja
mov
out
mov
push
pop
scas
iret
das
push
in
or
push
adc
and
cmpsl
in
stos
pop
mov
js
insb
fmuls
push
je
jge
pop
pop
and
sub
inc
or
popa
lods
or
sub
ret
jae
aaa
and
dec
rolb
and
pop
fldt
jp
lret
daa
lahf
add
imul
ret
mov
shr
sahf
xor
cmp
jmp
dec
add
add
sbb
or
jne
jo
ljmp
cld
jge
lds
jne
add
inc
add
daa
mov
sbb
das
add
stos
rorb
fcomp
shll
jb
sub
rcrl
mov
or
nop
sti
xor
scas
fisubl
inc
dec
fs
and
aam
xor
cld
xor
push
sub
enter
xchg
push
fistpll
xchg
pop
dec
fistps
xchg
fisubrs
nop
inc
mov
mov
push
add
xchg
pop
inc
dec
xchg
fldl
sbb
lahf
fsubs
push
inc
sub
xchg
xchg
add
jae
mov
sub
pop
daa
push
inc
xor
sbb
outsl
daa
push
adc
pop
or
ss
inc
push
jo
std
pop
push
pusha
scas
imul
adc
loopne
or
ljmp
fcoms
insb
inc
mov
adc
dec
lret
cmp
adc
cwtl
and
and
or
jecxz
inc
insb
outsl
leave
pop
mov
or
inc
inc
push
inc
testb
daa
add
lret
or
roll
pushf
add
fidivl
sub
arpl
bound
xchg
mov
xor
ss
adc
daa
or
testb
dec
insb
lods
inc
outsl
mov
lcall
inc
pop
cmp
add
aaa
or
movsb
sub
or
je
adc
dec
je
sbb
cld
inc
push
adc
pusha
imul
xchg
gs
jle
gs
push
xchg
fneni(8087
cmp
adc
add
addr16
test
push
inc
push
pusha
mov
mov
in
cmpsb
add
pop
xor
les
cld
sub
or
adc
ss
and
popa
xchg
pop
or
ficompl
imul
fcoms
and
pop
xor
sub
mov
mov
inc
add
or
adc
jbe
adcl
jecxz
cmp
adc
sbb
push
cmp
or
inc
test
add
out
or
out
push
js
aam
sbb
stos
rorb
sub
push
adcb
mov
and
es
lods
mov
outsb
ficoms
mulb
sub
add
jg
jge
in
inc
adc
jle
dec
repz
sbbb
pop
pop
pop
add
imul
jbe
push
dec
inc
or
dec
in
loopne
and
aas
ds
xor
bound
sbb
movsl
dec
cwtl
mov
push
fsubrl
pop
or
and
fstl
insb
orl
push
test
out
nop
movsb
xlat
push
rorl
rcr
sarb
pop
and
les
dec
mov
pushf
add
ja,pn
pop
bound
inc
xor
stos
cmpsl
push
adc
mov
xchg
mov
mulb
out
sub
push
mov
rolb
mov
mov
dec
test
icebp
mov
cmp
mov
jle
sub
adc
cmc
inc
sbbb
push
outsb
popa
pop
adc
les
mov
or
pusha
divb
mov
aas
shlb
dec
sub
mov
mov
fisttps
notb
xchg
pop
and
xchg
or
les
and
and
and
orb
aad
mov
lret
mov
push
pop
push
mov
push
mov
jae
and
add
or
push
fiadds
test
adc
add
popa
sbb
or
imul
adc
mov
ret
mov
or
pop
mov
jb
jmp
inc
push
mov
mov
mov
into
nop
fiadds
and
pushf
jo
or
mov
adc
xchg
jl
and
mov
mov
into
sub
popa
lods
sbb
pop
and
inc
lret
es
pop
or
fisttps
add
ja
sub
and
das
sets
nop
xchg
outsl
xchg
orl
aaa
sbb
popa
mov
sub
push
aas
mov
xor
dec
xor
mov
nop
outsb
int3
inc
in
loopne
dec
jge
nop
into
pop
and
shlb
xor
inc
lcall
loopne
push
imul
and
arpl
cmpsb
or
pop
pop
sbb
pop
loop
jmp
xor
inc
clc
sbb
dec
mov
xor
cmpsl
ds
pusha
xor
cmp
or
pop
xor
xor
push
or
and
xor
push
push
fcoml
cmc
enter
cmp
jo
push
push
in
mov
dec
jae
mov
mov
and
outsl
aaa
add
cmp
adc
xchg
fildl
loopne
or
add
js
fs
out
es
sbb
jp
sbb
ss
push
add
test
jle
jecxz
add
test
pop
adc
xchg
sti
push
add
jb
sbb
fmull
adc
mov
xchg
in
movsl
popa
pop
adc
and
push
xor
push
mov
clc
inc
rclb
out
ds
push
rolb
mov
push
ss
push
cmp
mov
loopne
out
add
push
cwtl
dec
lods
fwait
ljmp
pop
pop
mov
mulb
cwtl
imul
pushf
cld
test
xor
cmpsb
aam
popf
dec
xorb
sahf
sub
int3
les
mov
insl
repz
scas
push
shlb
cmpsb
insl
lcall
fmuls
jae
jl
pop
push
mov
das
shrb
cs
push
mov
mov
and
add
xchg
pop
cwtl
xchg
pop
ret
sub
jl
orb
and
adcl
ja
cwtl
scas
fsubl
mov
dec
pop
sbb
sbb
icebp
xchg
push
or
xor
or
sbb
out
shrb
pusha
or
adc
or
inc
add
in
movsl
dec
and
or
dec
lods
cmpsw
and
mov
xchg
jl
add
mov
and
pop
inc
js
pusha
xchg
pop
pop
push
shlb
adc
or
mov
lahf
add
dec
or
movsb
and
fildll
inc
cmp
or
adc
int
dec
clc
inc
push
and
in
or
sbb
sbb
cwtl
sub
inc
and
push
dec
popa
jae
adc
lcall
add
add
mov
and
or
pop
push
fwait
shlb
sub
mov
sub
dec
and
str
orl
repz
push
jo
mov
adc
sbb
push
fwait
jbe
lahf
add
je
insb
in
xor
lahf
sub
xchg
dec
push
sarb
mov
and
and
xchg
or
faddl
outsb
and
adc
adc
inc
push
inc
push
mov
mov
pop
cmp
pusha
xchg
lods
pop
mov
sarb
sbb
or
xorb
fdivs
jo
sbb
aam
add
lret
xor
sub
das
sbb
pop
or
adc
inc
jg
and
mov
push
subl
inc
mov
pushf
add
mov
mov
fwait
xchg
and
mov
es
cmpsb
add
mov
mov
adcb
push
cmpsl
sub
push
aam
jg
mov
push
cmp
and
mov
pop
push
pop
sub
int3
and
push
lods
test
jp
inc
inc
imul
add
mov
repnz
inc
pop
in
add
push
test
les
sarb
or
mov
adc
mov
inc
pop
mov
mov
ds
or
leave
xchg
mov
cmp
xlat
je
aam
xlat
sub
mov
nop
sub
rclb
sbb
sub
movsb
negb
xor
pusha
push
scas
pop
inc
cwtl
fcmovb
dec
scas
push
add
call
xorb
adc
adc
shrl
loop
fadds
dec
ror
pop
and
int3
fcomps
insb
add
push
jb
add
lods
ret
and
mov
mov
sub
jo
nop
fs
ja
pop
inc
pop
add
mov
in
mov
sarb
testl
je
and
movsb
mov
mov
mov
in
shlb
dec
mov
jne
rclb
mov
test
imul
push
and
aam
push
jns
mov
lock
xchg
xchg
pop
mov
jno
inc
inc
sbb
in
leave
inc
rclb
push
movsl
inc
jl
in
and
sub
sahf
add
nop
push
mov
inc
pushf
xchg
dec
xchg
push
jns
lcall
pop
ret
mov
ret
push
enter
ret
in
ret
test
sbb
mov
push
pop
sub
or
out
inc
shll
cmpsb
mov
decl
jns
pop
dec
inc
xchg
push
and
lds
shlb
adc
ret
mov
pop
and
xchg
mov
mov
dec
dec
mov
scas
sub
bound
push
cmp
rolb
pop
or
shrl
mov
ret
enter
pop
test
test
insb
mov
adc
mov
pop
and
mov
stos
mov
enter
ret
test
sbb
and
mov
xor
loope
and
xlat
dec
fwait
clc
inc
cmp
testl
and
push
inc
in
js
cmp
push
paddw
pop
inc
xor
movsb
inc
sahf
mov
jl
nop
add
inc
jno
or
inc
inc
or
popa
add
pop
sub
enter
mov
fldl
add
in
imul
add
cmp
or
ss
dec
pop
mov
lock
sbb
add
adc
lahf
dec
lret
addb
nop
lret
inc
lret
xor
cmpsl
nop
lret
xchg
lret
mov
and
pushf
inc
pushf
int
add
or
lahf
mov
adc
xchg
aas
xchg
and
int3
sahf
sbb
add
int
inc
mov
pop
int3
dec
and
dec
cmp
dec
icebp
stos
jmp
add
stos
fsubrs
jns
sub
cmp
dec
into
aas
pushf
sbb
mov
pop
repnz
pusha
iret
aas
je
mov
jb
mov
inc
inc
pushf
add
inc
jnp
xchg
iret
jle
sub
fnstcw
xchg
lock
jns
mov
sbb
inc
cs
mov
push
sahf
push
mov
rol
inc
in
jbe
sarb
push
and
jg
rcrl
pop
mov
jo
jg
rcl
lcall
lods
push
xor
repnz
sarb
rol
loopne
jo
mov
sbb
nop
add
aam
pop
in
inc
jno
push
outsl
fs
pop
or
sbb
call
xchg
mov
and
cmpsb
mov
mov
cmp
lock
push
jns
mov
scas
mov
or
push
sbb
cwtl
add
xchg
jnp
pop
and
push
sbb
add
or
xor
scas
and
cmpsb
inc
dec
and
aam
enter
push
pop
ja
aam
cmpsl
xchg
adc
adc
jo
mull
test
jo
in
push
pop
sub
shrb
test
nop
push
pop
add
in
push
fcoms
inc
and
dec
dec
xlat
xchg
jecxz
push
push
test
mov
and
pop
enter
push
scas
in
pop
fcomps
inc
and
push
pop
xlat
je
in
test
xlat
icebp
sub
push
push
notb
push
pop
sub
test
pop
pop
lcall
cmp
cmp
pop
jecxz
daa
cmp
fdivrs
flds
pop
test
int3
push
loopne
sbb
leave
scas
in
mov
fisubs
fidivl
mov
push
and
rcr
mov
mov
dec
leave
adc
ud2
cmc
rcl
dec
pop
and
dec
xchg
push
mov
and
push
or
mov
fidivs
rol
sbb
and
stos
mov
cmp
jbe
dec
adc
pop
out
pop
das
jns
or
xor
sbb
in
in
lods
push
or
pop
fidivrl
dec
loopne
jl
out
loopne
arpl
mov
pop
mov
daa
or
out
pop
pop
in
mov
sbb
call
pop
cmp
xor
sub
mov
mov
push
enter
in
in
lea
flds
out
push
jge
mov
pop
sbb
sbb
add
dec
arpl
push
and
leave
mov
ds
or
les
inc
test
repnz
dec
outsb
inc
out
and
mov
pop
mov
dec
jmp
leave
mov
sub
pushf
mov
daa
nop
out
xor
movb
fidivrs
and
mov
or
push
push
pop
and
adc
xor
mov
mov
jecxz
aam
push
sbb
call
or
rorb
jmp
lds
pop
pusha
dec
pusha
adc
inc
and
jns
out
enter
dec
push
pop
and
and
push
and
out
pusha
in
mov
shlb
or
or
or
rol
mov
sub
test
push
out
aam
xlat
mov
pop
hlt
adc
scas
sbb
lock
sub
rorb
icebp
cmp
pop
sub
cs
xchg
daa
sub
in
mov
es
adc
push
and
repz
or
lods
dec
leave
sub
test
je
je
cwtl
dec
les
pop
shll
or
sbb
loopne
fadds
sub
sub
fstl
or
push
fs
pop
push
leave
mov
clc
pop
add
adc
clc
add
and
clc
clc
and
or
mov
pop
and
in
fs
dec
das
or
data16
daa
je
mov
stc
enter
or
xor
jnp
pop
and
cmp
data16
addr16
mov
in
stc
add
pop
push
cli
out
xchg
mov
mov
or
sbb
outsb
pop
sub
dec
fnsave
mov
dec
xchg
adc
cmp
push
or
push
testb
add
or
enter
jl
mov
dec
js
add
sub
hlt
sti
loopne
pop
leave
sbb
pop
dec
inc
xchg
nop
loopne
notb
mov
mov
add
les
push
jno
addl
les
sbb
movsb
lea
andb
pop
sub
mov
test
jb
popf
sub
lahf
push
pop
mov
sar
adc
push
push
sbb
mov
ss
insb
sar
mov
add
cld
sti
mov
jnp
imul
out
push
adc
hlt
imul
lds
pop
sub
subl
dec
mov
das
xchg
subb
or
or
xchg
faddl
cmova
insl
inc
inc
add
in
push
xchg
push
xor
mov
in
insb
mov
in
int3
insl
inc
imul
pop
nop
add
nop
and
std
xchg
push
pop
sub
lock
mov
test
outsl
popa
cwtl
and
sub
sarb
and
dec
inc
je
rolb
push
in
and
fsubl
xchg
jno
mov
movsb
inc
inc
sbb
pop
push
cld
scas
out
les
xor
dec
call
add
dec
shrb
jp
sub
push
jb
push
cmpsb
add
push
pop
sub
push
and
inc
nop
pushl
insl
add
mov
adc
and
or
adc
adc
imul
in
sahf
or
mov
jecxz
enter
adc
pop
test
cmp
inc
pop
cmp
sbb
add
aas
adc
mov
lea
pop
xor
push
lods
dec
pushf
mov
mov
and
or
ret
adcb
or
lods
test
inc
add
mov
push
add
enter
outsb
loopne
adc
insb
or
das
stos
push
stos
mov
cmovl
jb
adc
and
and
adc
pop
rol
test
pop
nop
xor
or
sahf
sub
and
out
push
jne
or
adc
loop
mov
imul
sti
push
and
mov
enter
add
aam
xchg
lahf
add
push
dec
mov
and
jmp
push
ja
imul
dec
fiaddl
fmuls
adc
jbe
ret
inc
and
xchg
xor
test
xor
pop
enter
inc
inc
test
dec
dec
enter
push
push
pop
pop
enter
pusha
test
push
enter
addl
mov
and
pop
jbe
sbb
sub
xchg
je
out
pusha
fisubl
test
mov
cmpsb
mov
imul
push
sub
inc
push
gs
idiv
jg
push
idiv
jp
push
mov
mov
lods
mov
in
mov
test
push
scas
jmp
xchg
ja
js
cli
jne
inc
rcrl
or
adc
dec
cmovp
cmp
push
push
daa
xchg
inc
pop
dec
mov
lcall
mov
dec
shll
ror
hlt
out
dec
sar
cld
xlat
pop
or
movsl
insl
lcall
je
nop
outsl
xor
or
daa
aam
daa
stc
lcall
sbb
adc
push
pusha
sub
and
push
add
push
inc
pusha
ss
shll
mov
insl
shll
xchg
mov
ds
cmpsb
xor
push
push
push
je
imul
in
clc
push
sub
sahf
inc
mov
inc
fs
sub
cwtl
movsb
push
fldt
nop
es
insb
jo
xorb
push
push
xor
imul
call
les
or
insl
repz
adc
sbb
pop
repnz
jns
loopne
push
mov
rclb
mov
imul
test
sahf
or
shll
pushf
push
xor
cmp
mov
outsl
clc
aas
pop
cld
xor
daa
inc
push
cmp
into
sbb
inc
cmp
xor
and
lret
xlat
and
jbe
mov
dec
inc
mov
lcall
push
insb
aaa
jg
sbb
and
imul
fs
incb
xor
out
test
fcomp
cmp
shlb
push
adc
es
add
pop
push
js
adc
lea
data16
push
and
xchg
pop
and
int
mov
push
or
inc
jb
mov
mov
or
popa
sub
mov
xchg
outsl
mov
aaa
and
stos
outsb
loope
int3
cmpsl
push
inc
mov
jg
daa
xchg
adc
dec
and
push
and
das
xchg
sbb
scas
enter
cwtl
adc
pop
loope
sub
xchg
xlat
shlb
xchg
out
fs
ss
mov
lods
leave
mov
rolb
dec
cltd
mov
xchg
dec
and
add
sbb
jbe
imul
scas
adc
movsl
fldcw
sub
push
ret
daa
inc
mov
mov
push
adc
test
mov
scas
rcrb
or
adcb
enter
fdivrs
or
decl
ss
sti
dec
and
jb
loopne
sar
dec
xchg
divl
in
test
pushf
ja
inc
ret
cmovns
daa
adcb
jnp
jo
push
mov
jne
pop
inc
adc
faddl
sbbl
sbb
and
repnz
cld
adc
add
fldcw
or
mov
nop
sbb
outsb
or
mov
andb
inc
or
mov
imul
in
aad
insb
bound
js
imul
imul
push
sti
or
mov
sub
adc
and
xchg
test
test
out
and
dec
roll
push
nop
rolb
cmp
inc
popa
or
or
xor
inc
cmpsb
rcl
adc
daa
fimuls
stc
pop
in
and
addb
in
add
ret
pop
popa
loope
jne
adc
or
in
outsb
aad
push
mov
pop
or
orl
sbb
xor
mov
cmp
popa
orb
fmull
jge
xor
sbb
pop
xchg
or
pop
jmp
xchg
sbbb
test
adc
dec
push
dec
cmp
lock
lret
je
test
inc
push
arpl
es
adc
sbb
adc
jmp
xchg
test
aam
int3
mov
push
xor
ds
rclb
fisttpll
inc
cmp
xor
cmp
negb
jle
or
push
cmp
cmpsl
add
pushf
pusha
outsl
pop
cmp
nop
div
sub
inc
inc
jmp
pop
pop
mov
dec
pusha
pop
ficoms
xor
jno
cmp
jo
orl
mov
sbb
inc
or
ret
add
push
jns
inc
cmp
loope
inc
nop
xor
add
daa
xorl
mov
cwtl
lret
xor
inc
adc
pop
mov
and
mov
outsb
cmpsl
std
mov
cltd
inc
mov
adc
scas
dec
or
adcb
jg
dec
mov
adc
lds
inc
fisubs
mov
adc
pop
pop
jb
les
xor
jge
or
mov
test
mov
mov
mov
add
add
pushf
and
xor
push
dec
in
adc
push
sbb
cwtl
lcall
inc
fldenv
jnp
pop
add
sbb
xor
lods
sub
mov
sbb
cmp
and
insl
inc
add
out
dec
adc
stc
pop
cmp
dec
mov
pop
andl
push
mov
out
psubq
cs
fimuls
je
sbb
mov
add
or
insl
jae
orb
pop
bound
mov
pusha
add
insb
jl
dec
movsb
or
jecxz
dec
xchg
rcrb
mov
rorl
xchg
push
iret
nop
andb
or
aas
pop
mov
mov
mov
jle
sub
sub
hlt
std
insl
xor
mov
and
int3
jg
sti
imul
sub
fs
pushl
shrl
or
and
clc
fs
daa
sbb
fdivr
ret
add
lock
nop
cmp
xor
fwait
leave
xchg
mov
adc
test
dec
sarb
adcl
or
gs
sbbl
jo
fidivrs
rolb
les
fs
dec
add
add
ficoml
fcoml
mov
loopne
orb
mov
cld
aas
loope
pop
add
dec
push
inc
xor
push
test
or
jl
insb
sbb
dec
xor
ljmp
mov
fbld
push
mov
ret
dec
push
adc
nop
aad
lretw
in
adc
pop
add
mov
adc
iret
daa
mov
or
pop
test
cmp
pushf
mov
out
mov
shr
adc
adc
inc
inc
mov
xchg
jns,pn
xor
mov
sbb
add
or
js
xchg
dec
xlat
mov
les
inc
lahf
inc
sub
adc
mov
sbb
sbb
call
repnz
mov
sbb
outsb
sbb
shll
cmp
or
adc
xchg
pop
cmpl
shlb
daa
nop
loopne
ss
and
pop
pop
dec
rol
pop
inc
adc
cli
sbb
pop
sbb
cld
inc
push
and
jne
mov
sub
cmp
hlt
cmpsb
sbb
push
popa
out
in
push
adc
dec
dec
xor
adc
jo
loope
lret
jp
push
xlat
insb
xchg
sbb
insb
outsb
mov
or
cmp
insl
imul
daa
cmp
das
or
dec
nop
lds
push
fstpt
xor
dec
inc
jae
dec
inc
loopne
push
sub
mov
mov
lods
and
push
adc
insb
dec
and
cmc
and
mov
mov
adc
in
sbb
pop
sbb
pop
ret
sbb
jge
mov
sub
je
sub
dec
loopne
idivb
cs
imul
test
mov
and
inc
sub
imul
cmpsb
test
mov
outsl
lea
xor
les
add
frstor
rcrb
popa
into
pusha
insb
pop
enter
dec
adc
xchg
les
pop
adc
adc
cmp
add
and
pop
and
lahf
clc
inc
sbb
loop
or
ret
xor
dec
pop
cltd
sbb
adc
or
pop
daa
xchg
mov
enter
adc
push
aas
xlat
aas
or
je
je
lock
add
rolb
jmp
aas
insl
cld
and
jle
pop
jne
adc
inc
and
xorb
sarl
inc
and
or
jns
adc
bound
mov
call
rolb
or
cmp
inc
clc
mov
das
shl
fdivrs
mov
mov
test
andb
xor
sbb
inc
sbb
adc
mov
push
fstps
roll
pop
sbb
aad
jb
in
xor
jae
xor
lds
xchg
or
or
add
movsb
mov
ja
jns
mov
xor
xor
call
sub
mov
add
std
sbb
or
je
mov
jns
or
inc
and
push
clc
rolb
cs
mov
push
sub
fcoml
or
jb
fwait
cli
ficoml
push
or
jg
sub
or
or
leave
aaa
mov
inc
outsl
dec
dec
pop
mov
pop
add
jbe
jo
inc
pushl
add
mov
lods
or
pop
xor
sub
dec
adc
sub
jo
mov
xchg
add
dec
aaa
jl
xor
inc
xor
sub
addb
out
les
sub
fimull
inc
pop
push
out
addb
add
push
sub
xor
dec
inc
or
sbbb
inc
xchg
es
ret
mov
mov
add
rolb
popa
push
jbe
aad
mov
cwtl
push
push
ss
test
adc
xchg
movsl
lcall
pop
mov
cwtl
aaa
mov
dec
dec
rol
mov
mov
imul
inc
cmp
jne
and
cmp
lock
inc
cli
mov
mov
leave
inc
sub
movb
lret
dec
lahf
hlt
sub
repnz
inc
dec
pop
mov
mov
cwtl
adc
mov
pop
add
push
jle
and
mov
fs
das
mov
inc
sub
mov
sbb
sbbl
pushf
scas
xorl
dec
rorb
ret
addr16
loope
adcb
fimull
mov
cmp
add
shrb
addl
test
hlt
xlat
add
es
xor
or
lds
into
sbb
mov
imul
cmp
mov
pop
xor
int
int
enter
push
sub
arpl
lcall
test
add
xchg
orl
adc
lcall
mov
ds
add
add
imul
xchg
fsubs
dec
or
jmp
and
and
pop
in
mov
aas
in
and
sub
jne
lock
roll
jne
add
pop
ficomps
or
hlt
fsub
adc
sbb
aam
mov
inc
xchg
xorb
stc
into
and
test
negl
jne
lds
outsb
cmpsl
xchg
fidivrl
sbb
mov
pop
inc
pop
rcrb
hlt
pop
adc
xchg
jmp
testb
mov
fsts
addr16
cs
add
or
lcall
movsl
and
int
and
mov
xchg
or
push
jne
lea
sbb
fisttpl
mov
jbe
sbb
sbb
push
cmp
cmp
popf
push
sbb
sub
stos
leave
mov
or
adc
nop
nop
lea
add
dec
dec
dec
mov
test
test
xchg
js
hlt
inc
rorl
jnp
mov
out
movb
subb
ss
imul
add
push
aad
andl
cmc
push
adc
shlb
adc
pop
adc
mov
xchg
movsb
inc
add
sub
scas
test
test
sbb
ret
jle
mov
mov
or
or
push
sub
inc
sbb
adc
adc
rclb
aam
std
sub
test
cli
pop
ja
cld
and
push
mov
mov
loope
add
dec
movsb
cmp
dec
popf
loop
outsl
mov
inc
andl
cmp
jo
and
pusha
arpl
inc
imul
sbb
popl
test
push
aam
add
test
jmp
fcmovu
insl
scas
dec
push
pop
mov
and
xchg
movsb
mov
add
xchg
xor
rclb
add
lods
xor
mov
dec
rolb
xchg
xchg
add
add
adc
inc
call
pop
sbb
sahf
gs
jns
dec
movsb
push
shlb
or
mov
or
mov
stc
shlb
cmc
xchg
jne
sub
or
xor
jo
jo
dec
or
aad
push
inc
and
cld
xchg
sbb
call
enter
gs
dec
add
fs
pop
adc
mov
push
es
or
xor
insb
jl
adc
adc
xor
xchg
mov
adc
xorb
mov
push
inc
push
mov
push
xor
cld
mov
xchg
push
mov
xchg
arpl
mov
sbb
mov
and
inc
jge
push
addb
sub
and
jg
add
fs
pop
pusha
leave
add
sarl
loope
mov
negl
dec
cmpsl
and
jl
imul
or
jg
popf
and
scas
push
and
mov
or
xor
push
mov
sbbb
add
mov
aam
add
sbb
stos
add
mov
mov
xor
mov
or
js
scas
mov
xor
js
mov
dec
inc
dec
xlat
add
iret
in
nop
loopne
sahf
adc
outsb
sti
pusha
pop
dec
fsubrl
adc
push
dec
repz
cltd
pop
dec
mov
or
sub
sbbb
cmp
add
adc
xor
xchg
adc
or
xchg
push
mov
add
xchg
adc
push
das
jo
xor
xchg
mov
pop
mov
adc
cmp
push
loop
jge
lcall
and
mov
mov
push
addl
jge
dec
inc
mov
aas
jbe
and
xor
jo
rclb
insb
rcll
rol
gs
sbb
fwait
xchg
jo
aas
rolb
cmpsb
mov
in
or
cmc
lea
dec
movsb
mov
xor
lahf
clc
dec
mov
ret
add
adc
sbb
or
rol
adc
sbb
push
jl
jl
inc
sub
cmp
fisttpl
sub
mov
sbb
mov
and
mov
fldenv
ficomps
and
fmuls
push
xchg
dec
pop
xchg
dec
into
dec
adc
int
mov
test
mov
inc
addr16
loopne
pushf
inc
add
movsb
in
enter
and
nop
inc
mov
mov
or
adc
xchg
pop
sub
sub
add
push
pop
pop
or
sbb
sbb
jmp
or
mov
insb
popa
adc
mov
add
out
and
or
adc
shll
pop
inc
add
mov
or
dec
mov
ss
dec
push
fmuls
adc
push
xchg
cmp
jo
dec
inc
je
adc
push
jb
adc
ret
sbb
mov
inc
and
push
add
sub
nop
sahf
cmpsl
loope
add
nop
mov
mov
addb
pop
and
les
test
popf
insb
andl
sbb
or
nop
pop
mov
push
adc
xor
inc
adc
xchg
dec
cmp
or
adc
mov
in
lahf
xchg
mov
sbb
mov
add
icebp
aas
xor
jne
cmpb
adc
or
and
aaa
mov
jl
ja
xor
mov
outsb
or
xchg
mov
in
push
mov
shr
sub
ret
mov
test
fistl
cs
jmp
repz
sbb
leave
or
mov
pop
pop
test
out
loopne
or
lds
imul
cmp
inc
adc
xchg
loop
dec
inc
dec
inc
pusha
mov
imul
dec
lock
cmpb
loopne
insb
xor
repnz
stos
bound
test
ret
cmpb
mov
pusha
fsubs
push
and
or
and
push
pusha
lea
je
adc
lock
adc
enter
mov
addb
sbb
iret
mov
adc
iret
shlb
xchg
dec
or
orb
mov
insl
movsl
push
pop
push
gs
mov
cwtl
cmp
mov
pop
icebp
call
mov
shlb
cmpb
lock
and
dec
and
jle
xchg
imul
addl
xchg
mov
mov
and
inc
daa
xchg
fmull
add
xor
push
mov
push
adc
and
xorb
dec
addr16
mov
push
in
jae
xor
mov
out
test
ja
mov
pop
xor
ficomps
daa
inc
lcall
xor
and
jnp
or
xor
inc
ret
movsb
sub
add
js
add
push
loopne
jl
out
lret
nop
pop
js
js
cmp
mov
sub
scas
xor
inc
dec
xor
mov
call
adc
or
insb
add
test
pop
nop
inc
fadds
cwtl
ret
and
xor
bound
inc
repnz
mov
add
nop
pushf
pop
es
pop
fistps
adcb
fwait
js
sub
nop
pop
popa
xor
lahf
dec
xchg
push
mov
mov
nop
mov
or
shrl
adc
sbb
fisttps
jns
push
push
jl
add
mov
push
sub
inc
dec
das
movsl
sub
add
int
xchg
and
sahf
xchg
mov
lds
outsb
sbb
or
orl
sbbl
push
in
and
and
jno
and
fiaddl
pop
test
and
fistpll
jl
in
mov
sub
pusha
jmp
adc
dec
jp
outsb
lea
mov
adc
fdivrs
or
add
lock
pop
mov
jns
mov
cwtl
mov
wbinvd
xchg
cmp
rep
js
xchg
xor
sbb
fcomps
nop
pushf
add
sbb
pop
jl
aam
imul
rolb
xor
cmpsb
cmp
js
cmp
jecxz
popa
push
pop
add
repnz
mov
mov
and
and
movsb
out
rclb
sub
xchg
inc
mov
push
fs
pop
cmpsl
fldenv
test
std
cmpsl
dec
pop
add
jle
mov
outsb
dec
cltd
nop
mov
sub
dec
je
cmpb
test
inc
and
ret
imul
and
add
sbb
es
push
mov
movsl
in
filds
add
cs
int3
dec
jne
adc
pop
ret
cmp
jne
dec
mov
sbb
inc
or
add
stc
push
repnz
sub
xor
cmpsl
nop
xchg
int
cmp
sbb
stos
mov
inc
cmpsl
inc
inc
adc
sub
repnz
movsl
test
adc
iret
push
mov
ret
iret
adc
and
in
pusha
sahf
adcl
mov
daa
xchg
pop
xchg
sub
adc
test
pop
in
clc
and
sbb
xor
test
or
xor
push
sub
pop
into
adc
test
xchg
fs
sbb
lea
sub
dec
cmp
or
inc
orb
out
jmp
push
sbb
or
sbb
stos
inc
cmpsl
jp
mov
and
push
xchg
data16
push
add
xor
and
push
cmpsl
adc
xor
cmp
dec
add
mov
or
sub
lea
mov
ror
xchg
xchg
loopne
jmp
adc
push
imul
adc
mov
movsb
orb
mov
int3
xchg
jne
ja
lods
xchg
add
pop
rcll
sbb
cmp
push
js
nop
iret
push
pop
or
popa
pusha
shll
out
jmp
jbe
or
pushf
cwtl
pop
rcll
subb
test
iret
add
cmp
dec
pusha
or
or
xor
jnp
inc
sub
popf
push
movsl
daa
mov
icebp
jl
sub
je
arpl
clc
cmp
jno
fcompl
push
xorb
pop
pop
add
or
mov
add
push
dec
js
adc
jge
or
pop
nop
mov
pop
arpl
cmp
or
mov
mov
inc
and
scas
inc
insb
mov
aaa
inc
dec
push
xchg
jo
ds
je
jo
fnstsw
lods
fildll
xchg
pushf
pusha
fdiv
lahf
jl
in
or
in
mov
add
cmovs
dec
fists
inc
dec
movsl
movb
roll
pop
push
scas
or
inc
inc
xchg
ss
lret
or
inc
push
adc
and
add
lcall
fmul
lret
movsb
add
int
pushf
adc
xor
sbbb
scas
jnp
xchg
out
or
mov
dec
insb
or
push
push
lds
pop
jmp
dec
into
fiaddl
mov
pop
fldcw
sub
out
push
lret
xor
js
pshufw
cwtl
rcll
movsb
lock
jl
jl
mov
pop
ds
sbb
mov
inc
dec
cmpsl
outsl
int3
nop
movsl
pop
sbb
fwait
and
es
sub
lcall
stos
mov
xchg
adc
stos
call
mov
jge
fcoms
push
jb
mov
xchg
jo
lret
mov
and
mov
scas
inc
mov
repnz
shlb
ficomps
and
call
add
mov
orb
sbb
leave
shl
sarl
test
adc
scas
in
adc
dec
ljmp
aaa
xor
addb
lea
test
mov
test
mov
js
push
mov
les
push
insl
or
mov
mov
fldpi
jle
dec
push
add
stc
or
sub
pop
adc
out
cmpsl
test
pop
stos
xchg
pop
leave
xchg
inc
push
out
sahf
xor
aam
cli
pusha
inc
pop
cmpsl
push
inc
xorb
fcoms
addb
dec
adc
lock
outsb
xor
dec
jne
pop
and
mov
inc
pop
lea
cmp
inc
les
mov
mov
and
popa
adc
int3
imul
or
xchg
neg
cwtl
fadd
in
repz
push
pop
leave
or
fnsave
xchg
adc
popa
mov
xchg
xor
adc
ret
push
lcall
ret
pop
mov
daa
jo
pop
mov
ss
mov
xchg
push
mov
mov
and
je
int3
and
adc
jae
aam
lcall
xor
cs
mov
cmp
adc
jp
dec
mov
sbb
std
stos
xchg
sub
clc
mov
pop
mov
nop
outsl
xor
or
and
es
push
nop
xorb
dec
mov
mov
push
add
test
iret
cmpsb
inc
xchg
xor
pop
loop
aaa
add
inc
rcll
sub
push
mov
cmp
mov
cmpb
shrb
inc
xor
cmp
xlat
mov
lcall
jb
roll
lea
popf
jg
pushf
daa
and
movsl
xor
mov
push
adc
lds
adc
xchg
mov
add
adc
mov
jg
shlb
xchg
mov
lret
rolb
mov
test
data16
xor
adc
imul
lods
movsl
sbb
movl
arpl
fwait
add
mov
dec
inc
ret
push
xor
data16
mov
mov
inc
cmpsb
daa
mov
adc
or
rolb
push
mov
sub
aaa
enter
movsl
js
rclb
inc
addr16
cld
fnstsw
ret
in
or
mov
and
nop
call
add
mov
shlb
hlt
mov
sbb
mov
sub
mov
add
mov
cmpsl
mov
fstpt
inc
or
add
inc
dec
add
jno
mov
xor
test
dec
cmpsb
and
cmp
xor
rclb
es
mov
into
pop
in
stc
adc
adc
mov
jp
push
lods
pop
adcb
fadd
dec
mov
shrb
push
push
jb
arpl
pop
and
mov
mov
push
inc
dec
jg
cmp
jge
pop
fistpl
push
hlt
hlt
or
andb
in
pop
mov
hlt
pop
mov
lcall
mov
mov
mov
adc
roll
mov
push
insl
xor
inc
mov
push
outsb
pop
sub
and
adcl
adc
mov
push
jge
and
sbb
test
mov
test
or
jmp
test
or
hlt
adc
lock
mov
insb
sbb
mov
les
mov
mov
gs
mov
and
or
cltd
movsb
pushf
sbb
cmp
fadds
push
bound
cwtl
lahf
sbb
push
mov
cmp
inc
add
pop
mov
mov
dec
and
mov
inc
ret
or
out
in
scas
adc
and
push
jmp
movzwl
add
push
or
lahf
jg
jecxz
mov
test
test
add
dec
sbb
mov
cmp
add
adc
adc
or
lret
rcll
push
add
mov
mov
xor
and
pusha
sbb
pop
adc
dec
adc
rorb
cmp
mov
call
ds
in
in
mov
xor
cmc
mov
lcall
mov
inc
das
lret
daa
jmp
mov
inc
xor
imul
dec
std
adc
inc
push
cmpsl
movsl
xlat
jecxz
stc
stos
call
adcb
xchg
adc
sbb
add
adc
pop
test
and
sub
daa
adc
or
mov
fildll
jae
adc
or
or
jno
xchg
dec
fcoml
xor
mov
mov
cmpsb
inc
inc
movsl
sub
rcll
push
add
adc
jne
fisttpll
mov
rol
push
outsl
stos
push
dec
repz
or
iret
test
movsb
mov
or
scas
adc
mov
stos
iret
push
add
sahf
pandn
repnz
xchg
dec
lock
inc
ret
loopne
dec
sbb
xor
hlt
hlt
jbe
shlb
hlt
and
cmp
pusha
add
mov
pop
add
in
setb
hlt
lock
ret
sbb
hlt
nop
inc
adcb
or
cmp
mov
adc
imull
cmp
inc
bnd
dec
fidivs
sahf
jne
and
adc
shlb
lock
mov
mov
or
les
sbb
or
repnz
nop
and
adc
dec
movsb
lock
cmp
add
or
jo
sbb
add
lock
inc
sbb
aas
lahf
les
andl
or
daa
jo
inc
nop
add
andl
and
call
scas
push
push
add
das
iret
or
and
insb
clc
shrl
mov
loopne
gs
adc
mov
add
and
push
sub
lea
add
cmp
popf
push
pop
push
mov
xchg
shlb
dec
and
adc
adc
shrb
popa
push
stc
xchg
or
mov
ss
dec
mov
fstps
push
mov
pop
repnz
lock
xor
movsb
scas
mov
lods
cld
cld
lcall
mov
add
imul
adc
mov
into
adc
cwtl
xchg
pop
xor
add
test
jecxz
shr
adc
jp
and
or
lcall
push
or
inc
add
rol
out
and
js
jo
loopne
sub
loope
inc
mov
fcompl
cmpsl
sahf
int3
sbb
jbe
xor
xlat
xchg
imul
mov
cmp
or
dec
or
out
sbb
adc
adc
in
pop
imul
mov
or
insl
lock
ret
inc
and
pop
repz
ss
pop
pop
decl
dec
enter
mov
scas
xchg
clc
in
jo
cld
popa
mov
test
lock
lret
adc
movd
xchg
mov
in
xlat
lcall
mov
pusha
and
shr
fldl
mov
clc
jo
inc
inc
popa
and
mov
or
lahf
mov
mov
push
inc
test
add
int
push
pushf
out
or
or
push
add
ret
ret
mov
testl
adcl
scas
lds
mov
xchg
inc
adcl
lea
mov
sub
or
and
or
jo
adc
sub
jo
mov
jne
push
xchg
push
mov
adc
popl
dec
fisttpll
stc
loopne
movsb
adc
adc
add
xor
shrl
jne
xor
xchg
xorb
jbe
inc
sbb
aad
call
mov
inc
cmpsl
adc
push
xchg
test
fsubs
mov
arpl
clc
ljmp
jge
ret
sub
push
sbb
xchg
mov
loopne
sbb
push
fistpl
or
mov
push
xchg
cmpsb
mov
inc
rol
mov
add
pop
sub
aas
push
add
inc
cmpb
xchg
inc
fpatan
sub
insl
arpl
test
repnz
sbb
mov
add
inc
add
jo
xchg
cmpsl
mov
loop
nop
inc
out
mov
and
addb
xchg
rcll
es
orb
adc
lea
add
pop
leave
stos
ret
stos
inc
iret
lock
rcrl
sbb
dec
stos
sahf
je
mov
aaa
cmpsl
and
stos
sbb
insb
loop
xor
xor
adc
aam
sub
jo
ret
stos
cmp
adc
leave
ja
mov
sbb
lds
push
js
test
push
adc
mov
jg
sbb
rclb
xor
push
mov
xor
lods
add
sbb
je
sub
shrb
cmp
andb
pop
and
ret
pop
pushf
fstl
mov
xchg
mov
pop
jmp
ljmp
call
in
add
adc
jbe
adc
jecxz
mov
nop
jg
rcll
sub
push
iret
mov
jnp
nop
fs
ret
clc
jb
and
and
adc
aad
inc
or
rcrl
mov
arpl
dec
push
cmp
mov
popa
int3
psubsb
fwait
ret
pop
sub
aas
hlt
fcomps
test
cld
mov
xchg
sbb
pop
xchg
daa
adc
pop
aam
mov
mov
in
jb
adc
inc
dec
lea
pop
xchg
leave
add
mov
lds
cmp
rcll
ds
jo
ret
or
pop
xor
insl
imul
mov
dec
andl
inc
dec
push
adc
inc
pop
aad
fcmovnb
push
jecxz
dec
lods
icebp
test
jmp
sub
fadds
imul
iret
cmp
in
push
test
data16
mov
dec
jno
dec
add
jecxz
les
es
xchg
xor
stos
lds
jp
xchg
dec
sbb
js
push
stos
sub
xor
mov
fmuls
jp
leave
lret
pop
or
push
in
xor
sub
and
push
cld
ds
leave
mov
data16
mov
dec
sub
pop
mov
pop
pop
add
inc
mov
inc
and
cwtl
das
jne
xchg
ret
mov
pop
push
mov
lret
xorb
dec
hlt
add
push
mov
and
dec
mov
xchg
add
and
jmp
mov
clc
mov
shlb
add
cs
lret
cmpsl
fists
pop
push
ror
cmp
pop
movsb
sbb
lock
test
or
rolb
add
cmp
or
mov
lahf
or
xchg
arpl
call
test
or
enter
cli
and
xor
inc
or
adc
sbb
jge
mov
cwtl
inc
imul
aaa
and
outsb
mov
sbb
stos
andb
dec
inc
test
or
rclb
fwait
pop
inc
add
int3
in
aas
pop
xor
pop
dec
and
cmp
dec
enter
and
mov
mov
popa
inc
mov
insb
pop
aad
shll
fisttpl
lret
mov
mov
xchg
xchg
inc
cmpb
lret
adc
and
jp
jmp
in
test
lea
popa
test
negb
dec
ficomps
cmp
pop
and
roll
xchg
inc
push
sub
sbb
jmp
or
out
inc
shlb
lret
in
pop
xor
jnp
push
cmp
adc
mov
jae
loopne
fmull
insl
or
adc
lods
xchg
xor
pop
aas
loop
cmp
or
sub
xchg
lods
cmpb
adc
dec
xchg
mov
pop
frstor
imul
xchg
ficomps
jne
stos
xchg
in
push
xchg
stos
mov
pop
outsb
pushf
popa
fucom
and
and
movb
adc
pop
mov
cmp
mov
jno
stos
adc
dec
mov
pushf
dec
fsubp
enter
fisubs
clc
jmp
iret
push
cmp
les
xchg
jmp
xchg
adc
lock
jne
and
fistps
pop
sbb
sub
add
dec
sahf
mov
push
bswap
fists
aam
es
mov
orl
and
cltd
xorl
mov
data16
pop
dec
ja
loopne
addl
pop
ljmp
cmp
in
fdivs
push
sbb
lret
loope
loope
sbb
dec
inc
rcll
inc
lahf
xchg
add
das
pop
pop
dec
ss
sbb
push
sub
insl
sarb
and
xor
loopne
xchg
loope
roll
movsb
inc
data16
arpl
arpl
mov
inc
pop
popf
loop
xor
mov
xor
lods
adc
and
adc
adc
or
aaa
or
push
daa
loop
les
rcll
sbb
mov
and
aaa
add
jg
push
push
dec
out
pop
adc
add
jecxz
jecxz
mov
cmp
push
push
inc
inc
cmp
outsw
lret
sub
fsubr
inc
rclb
xchg
pop
and
or
addr16
rorb
loopne
jle
jns
dec
pushf
int3
jle
push
push
enter
ss
adc
and
sbb
push
jge
jecxz
enter
pop
shr
jecxz
push
or
pop
xchg
cs
data16
xchg
sbb
jmp
adc
shl
test
xor
adc
test
lods
and
push
cltd
popf
cmp
loopne
das
pushf
pushf
popa
repnz
push
push
lock
cwtl
int3
pop
repnz
cwtl
push
jno
xchg
push
imul
insl
icebp
mov
outsl
add
test
jg
xor
shrb
xchg
xor
nop
adc
orps
bound
xor
and
xlat
out
dec
xchg
mov
test
or
mov
mul
scas
jb
mov
dec
out
push
mov
cmp
inc
xchg
es
inc
cmp
or
xchg
pop
xlat
sub
in
add
sbb
or
or
mov
adc
mov
and
or
int3
out
push
loopne
jo
xor
mov
or
js
inc
push
aaa
int3
jmp
icebp
add
test
sbb
aam
add
jle
outsl
fsubl
jmp
xor
rcr
fwait
mov
xchg
jg
xchg
jo
insb
rolb
stc
adc
adc
dec
or
dec
add
pop
ljmp
sub
or
xchg
mov
test
xchg
cmpsl
push
and
xor
adc
popa
test
repz
mov
dec
push
je
inc
cmpsl
pop
and
jnp
subl
xchg
dec
test
mov
jmp
mov
jmp
or
loope
fwait
insb
sub
shlb
adc
inc
insb
push
ljmp
xchg
insb
or
scas
sahf
aas
mov
iret
lea
jns
add
add
nop
inc
jmp
mov
dec
lea
outsb
ljmp
inc
ret
mov
dec
inc
or
sub
pop
pop
lea
push
dec
fcoms
xchg
jne
mov
add
dec
out
ljmp
push
sbb
add
inc
repnz
ljmp
cvtpi2ps
jo
jmp
xor
movsb
cmpsb
lea
sub
mov
push
push
cmp
sub
dec
imul
jmp
dec
addl
mov
mov
cld
ret
sbb
and
adc
lret
fadds
jl
dec
pop
out
pop
in
dec
addl
call
or
adc
lahf
inc
push
xchg
in
lock
push
jnp
add
xchg
fiaddl
or
push
ds
or
mov
jno
add
jo
test
rorb
lds
sub
in
mov
imul
or
cld
shlb
adc
xor
add
movsb
loopne
pop
or
jns
sub
and
loopne
in
mov
add
leave
mov
subb
test
xor
jo
out
adc
adc
xor
clc
rol
inc
pushf
bound
cmpw
push
dec
ret
sbb
or
or
push
lret
testl
out
clc
xchg
out
or
cmp
shl
sbb
dec
add
pop
adcl
or
xchg
mov
add
sub
jae
cltd
and
scas
in
and
lret
in
add
sbb
add
mov
and
out
mov
pop
adc
and
out
inc
dec
mov
adc
jg
sbb
out
in
int3
xor
in
or
int3
xchg
or
inc
lret
ret
mov
dec
pusha
add
add
mov
cwtl
jae
push
mov
jb
fisttpll
mov
push
adc
sbb
sbb
jne
iret
cmp
cmp
call
jg
ret
orb
dec
lahf
or
add
in
loopne
lea
inc
mov
icebp
jg
hlt
sub
add
cmp
es
test
push
adc
das
mov
xor
fmull
push
or
mov
sub
or
xchg
mov
add
push
pushf
movsb
aaa
add
lock
xchg
enter
sbbb
sbb
pop
push
call
mov
aad
vandpd
loopne
cmpsl
xchg
lods
dec
mov
xchg
xor
or
mov
mov
mov
dec
sub
aam
loope
mov
out
inc
inc
adc
add
sub
adc
push
lds
orl
adc
ljmp
sbb
orl
push
adc
ds
inc
sti
jmp
push
or
scas
sbb
lds
daa
lds
mov
nop
pusha
hlt
xchg
cwtl
and
adc
leave
jge
in
adc
inc
jecxz,pn
mov
lock
add
in
roll
or
pop
idivb
lcall
xchg
add
xor
xchg
inc
imul
dec
ljmp
dec
push
push
fbstp
mov
and
or
lret
adc
cmpsb
xchg
and
ret
mov
xchg
dec
mov
sub
push
dec
push
cmp
dec
adc
and
jmp
add
mov
xor
rcrb
xor
ss
xor
popf
shll
fdiv
mov
mov
add
add
and
aad
adc
enter
cli
sbb
xlat
push
inc
add
movsl
loopne
push
add
enter
xor
cmp
adc
sub
mov
pusha
das
dec
jae
pusha
enter
cmp
jne
loope
mov
out
and
adcl
push
fs
into
dec
pop
xchg
frstor
mov
jnp
shrl
pop
or
sbbl
mov
stos
add
pop
inc
xchg
inc
or
add
mov
in
inc
sbbl
jae
adc
pop
loope
sub
xchg
xchg
sbb
lock
cmp
jmp
push
sub
fwait
mov
jbe
pushf
lock
cmp
idivl
loopne
mov
inc
xchg
js
mov
sbb
sub
jns
and
rorb
mov
inc
jo
push
xchg
adc
call
adcl
and
inc
mov
adc
mov
loopne
pop
push
inc
jo
xchg
mov
dec
fsubrl
sub
mov
or
stc
pop
les
add
push
mov
xchg
push
aas
pop
rclb
add
jne
nop
and
cmp
jbe
mov
mov
rolb
and
je
rcll
aad
adc
pop
dec
adc
add
pop
pop
out
sbb
nop
loope
dec
or
add
addr16
lret
testl
lahf
mov
unpckhps
sub
push
sbb
cmp
rorb
sbb
pusha
ja
mov
and
adc
addr16
rolb
lahf
mov
dec
cmp
or
outsl
imul
inc
sbb
push
jbe
pop
xor
or
sbb
mov
sbb
adc
test
mov
ss
xchg
imull
jno
pop
pop
sbb
stc
lea
xchg
mov
rorl
or
aam
stos
jae
lcall
pop
lods
or
movsl
push
subb
paddsw
inc
cld
mov
mov
push
inc
dec
addb
fwait
dec
jo
push
adc
sar
pop
mov
or
sbbl
dec
or
add
pop
and
add
adc
push
inc
sbb
test
add
adc
in
or
cld
dec
and
cmpsl
mov
fwait
leave
test
mov
add
pop
cmpsl
xchg
or
mov
pop
call
sbb
out
int
push
arpl
test
scas
nop
stos
pusha
std
leave
add
push
sbbb
or
paddd
and
scas
pop
incb
inc
arpl
inc
movsb
nop
cmp
jb
ja
add
xor
adcl
sub
adc
mov
cmp
xor
in
scas
inc
dec
fisubrl
sbb
inc
sbb
ret
scas
xchg
sbb
xchg
pushf
jg
ljmp
or
pop
fists
rdmsr
add
ja
sbb
clc
cmp
mov
mov
mov
pop
xchg
jb
cltd
in
test
mov
adc
add
inc
pop
inc
add
xchg
inc
inc
ret
cmpsl
inc
push
sbb
push
test
adc
add
dec
adc
or
or
push
push
pop
xchg
xor
push
lahf
or
enter
sub
jo
pop
popf
push
inc
mov
call
gs
and
or
pop
lock
sub
adc
mov
pop
and
push
mov
xchg
test
aam
aad
mov
sub
and
jg
add
dec
lahf
sub
ja
add
je
stos
push
in
jo
out
aam
jns
lock
inc
and
push
cmp
or
scas
nop
push
xor
adc
jne
pop
or
insl
add
and
dec
sbb
jp
mov
pop
add
pop
mov
pushf
mov
js
mov
add
mov
or
ret
xchg
es
pop
iret
or
push
push
cs
adc
sti
fs
dec
dec
adc
sub
mov
pop
in
sbb
mov
sarl
shr
jo
aaa
popa
or
shrb
pop
or
add
pop
je
jmp
lret
cs
add
icebp
sbb
sets
push
xchg
fisttps
repnz
xor
fimuls
jmp
inc
adc
mov
pop
dec
insb
adc
popa
lods
and
jns
or
dec
sub
xchg
mov
sub
xor
mov
or
add
nop
mov
dec
or
fs
push
xchg
adc
or
ja
lock
and
mov
add
fiaddl
daa
push
dec
fcoms
dec
negl
mov
push
call
and
cmp
aas
enter
aam
sub
mov
sbb
inc
pusha
shrb
cltd
inc
pop
mov
add
pop
sbb
cwtl
xchg
pop
dec
xchg
lret
hlt
insb
add
iret
in
sbb
test
push
pop
push
mov
add
ja
cmpsb
inc
xor
and
lea
stc
pop
mov
pop
mov
pop
dec
xor
or
push
cli
arpl
je
and
mov
cs
movl
idiv
cmovo
add
pop
push
or
pop
or
or
mov
add
adc
aas
add
add
or
push
push
outsl
xor
shll
orl
shll
add
push
fdivl
sub
inc
inc
xorl
adc
add
ret
mov
test
fmul
push
add
leave
or
push
daa
out
pop
or
call
leave
jmp
in
ja
adc
leave
scas
mov
cs
rolb
add
cmpl
sbb
mov
add
or
fisttps
rolb
xchg
stos
xchg
add
or
or
imul
push
push
add
adc
and
daa
mov
xor
shll
xor
cmp
out
pop
xor
xorl
or
cltd
int
mov
ret
cs
gs
jmp
movsb
mov
xor
inc
ret
popa
fnstenv
int3
aaa
ret
sbb
cmp
mov
pop
sbb
adc
nop
mov
hlt
cmp
jo
sbb
cld
hlt
pop
popa
xor
adc
les
aas
nop
mov
insb
test
movsl
pop
mov
mov
push
push
add
in
cmp
loopne
add
pop
and
test
shrl
push
or
push
scas
fidivrl
mov
adc
lods
xor
pop
popf
jno
hlt
push
jge
test
cmpsb
and
aas
add
xor
test
lods
add
test
adc
ret
or
xor
mov
ret
dec
add
fdivs
dec
cmp
pop
jmp
lods
sarl
sub
mov
ss
rcl
mov
xor
pop
test
mov
push
aaa
mov
test
mov
inc
lcall
ret
out
aaa
cmp
jne
pop
sub
pop
cmp
lock
pop
dec
add
out
mov
add
pop
push
xorb
push
add
sbb
test
xor
orb
fwait
cmp
cmp
xchg
and
cmp
cwtl
in
dec
inc
xor
lock
adc
xchg
ljmp
xor
fs
lds
jbe
dec
add
outsb
mov
sarl
cwtl
test
pop
jb
sbb
adc
inc
adc
adc
xchg
mov
sub
sbb
add
jno
rclb
loope
mov
inc
fcmovne
and
or
wrmsr
xor
orl
cmp
xchg
cmp
push
into
adc
or
scas
test
in
ret
adc
adc
dec
in
push
call
test
xor
insl
jne
sbb
add
inc
xchg
lcall
add
pop
lea
in
sub
ret
push
push
adc
pusha
dec
enter
mov
hlt
mov
xchg
sbb
push
push
push
les
sbb
daa
and
pop
push
cmp
jmp
pop
mov
addr16
xchg
inc
adc
in
dec
mov
jge
push
jb
lahf
in
and
jo
dec
hlt
icebp
cmc
ret
sbb
lea
inc
mov
sbb
sub
and
outsb
sub
xor
pop
jecxz
sbb
dec
xor
cld
push
sub
jmp
mov
add
imul
adc
adcl
xor
pop
mov
adc
mov
mov
or
add
and
xchg
inc
xlat
inc
ljmp
push
mov
movb
xchg
cmpl
xlat
nop
xor
pop
js
scas
cmc
call
mov
push
jl
or
sub
scas
adc
adc
or
insb
lods
add
xchg
arpl
mov
shll
mov
call
mov
xor
pop
sbb
sub
wbinvd
rcrb
xchg
jl
push
nop
les
pop
cmpsl
adc
inc
push
jmp
xor
xlat
es
int3
add
add
xor
xor
mov
mov
cmp
xor
sub
push
pusha
mov
jno
sub
orb
xchg
jne
push
out
add
mov
call
les
imul
movsl
out
shrb
jbe
cmp
dec
xchg
incl
or
inc
mov
nop
arpl
dec
es
imul
pop
arpl
test
add
dec
lds
sub
mov
dec
add
fs
cltd
pop
xorb
sahf
mov
and
adc
mov
adc
cmp
inc
scas
nop
mov
repz
andl
faddl
mov
add
ret
xlat
mov
add
push
sbb
mov
add
ss
aaa
imul
push
je
cwtl
jg
pop
mov
sbb
cmp
sti
dec
punpckldq
je
push
pop
add
sbb
shlb
dec
movsl
mov
xchg
xorb
or
and
sbb
popf
or
rclb
mov
cmp
sbb
adc
xor
shll
mov
cmp
cmp
inc
and
mov
in
sbb
enter
les
dec
inc
stos
fisttpll
mov
add
shlb
mov
movsl
ret
xchg
cmpb
in
pop
mov
pusha
shl
addb
mov
adcl
mov
adc
imul
shlb
or
add
cltd
jo
repnz
and
clc
lea
xor
mov
cmp
clc
lret
add
fwait
xchg
push
sub
and
rcrb
popa
nop
cmpsb
xor
pop
adc
xchg
loopne
xor
and
cmpb
xchg
cs
je
xor
and
dec
cmpsl
jne
sub
mov
das
lods
movsb
fisubrs
push
sbbl
mov
sub
lods
lcall
dec
pop
insb
test
fidivrl
nop
jmp
push
enter
sbb
movsl
mov
cmp
pop
push
or
fcoms
nop
dec
add
ret
sbb
movsb
adc
arpl
dec
rcrl
mov
es
sub
jno
es
cmp
and
aad
cwtl
xor
ficoms
adc
mov
mov
dec
adcl
inc
sub
jno
sbb
pop
lods
and
or
mov
sahf
adc
mov
pop
fwait
jmp
movsb
adc
sarl
fcoms
xor
mov
xor
push
xor
sub
pop
pop
mov
push
push
enter
or
or
rolw
adc
xchg
sbb
test
mov
xchg
or
add
ret
mov
cmp
ds
lahf
fstpt
sbb
jp
xor
cmp
jecxz
loope
adc
inc
adc
gs
jno
in
adc
cmp
cmp
loope
inc
and
outsb
fucomi
imul
cmp
mov
int3
sarb
or
pop
pop
in
lcall
push
xchg
inc
andl
adc
dec
or
adc
adc
add
or
or
fstl
stos
fdivrs
nop
movntps
lahf
push
inc
sbb
add
cmp
lds
jle
push
and
adcb
push
adc
movsl
mov
imul
test
xchg
mov
add
movaps
add
push
jne
pop
adc
or
pop
fsts
in
mov
mov
arpl
stc
leave
sub
pushf
xlat
fcoms
dec
inc
inc
mov
popa
shlb
pop
push
mov
leave
mov
lods
addl
sub
or
cltd
inc
xchg
inc
movsb
jne
inc
test
mov
cmp
mov
sub
jb
add
sbb
push
je
das
add
mov
loopne
test
test
cmpsb
adc
xchg
repz
pop
outsl
mov
popa
ds
add
cmp
jno
testl
in
add
adc
addl
push
mov
cmp
fldl
sub
cmp
pop
dec
popa
and
fadds
rol
fcoms
pop
jne
add
push
push
shlb
jmp
xchg
add
xchg
and
mov
adc
repz
clc
mov
dec
add
or
addl
lods
dec
push
dec
ficoms
outsl
je
dec
decl
adc
sub
lret
sub
cmp
push
lods
pop
sbb
xor
pop
push
xor
and
and
jb
mov
cltd
sub
lahf
dec
cmp
shl
xor
imul
sub
jo
pop
cwtl
out
out
rorb
movsb
sub
inc
cmp
popf
sbbl
incb
sub
dec
adc
inc
imul
fwait
btc
dec
and
mov
adc
add
movb
and
sub
push
adc
jb
das
arpl
ss
xchg
les
and
jns
pusha
aad
imul
test
cwtl
cmp
push
pop
push
cmp
or
cmpsl
jno
arpl
dec
lret
mov
popf
or
inc
push
pusha
or
push
jne
cmp
mov
xor
fildll
loopne
div
jl
add
pusha
fmuls
shlb
pop
imul
lea
insl
repnz
bound
inc
imul
pop
dec
repz
pop
inc
and
hlt
dec
jo
inc
dec
cwtl
sbb
adc
dec
mov
pop
sbbl
adc
cmp
lcall
xchg
xorb
adc
icebp
xchg
jp
hlt
es
in
sub
test
int3
pop
push
sbb
in
cmc
ja
testl
xchg
inc
cmp
inc
fmuls
xlat
sbb
aad
ret
pusha
push
jmp
sub
fs
mov
popa
in
xor
jno
test
ja
inc
sub
ja
jecxz
or
call
sub
mov
out
push
call
cwtl
data16
sub
xchg
add
sbb
add
adc
into
loopne
es
ret
and
shll
sbb
es
or
andb
xchg
test
xor
jne
cmpb
or
adcb
adc
xchg
inc
ret
or
loop
dec
test
dec
xor
ljmp
xor
sub
fs
sub
enter
in
mov
ss
or
test
xlat
in
sub
mov
mov
jns
push
xlat
push
scas
nop
in
daa
jae
insl
rcrl
loope
daa
pusha
pop
addb
cmp
push
add
mov
or
in
jmp
push
and
sidtl
and
cmp
ds
xchg
pop
and
push
and
inc
pushf
in
push
dec
fadds
js
xchg
or
xchg
dec
popa
cmpsl
dec
pusha
adc
fldl
push
mov
daa
pop
jo
test
sub
ficoms
jno
lret
out
sub
or
pop
loope
jb
fwait
pop
inc
subb
adc
scas
add
sub
in
fdivs
cmp
adc
inc
pop
mov
inc
push
insb
fldl
popa
andb
imul
cmp
cmp
cs
lcall
mov
test
pop
sub
mov
fwait
add
sti
push
jp
in
lea
cmpl
inc
add
add
or
leave
add
cmp
jl
jp
call
dec
enter
inc
daa
inc
pop
popf
push
clc
icebp
inc
stos
rolb
sbb
cld
jae
sub
or
jne
push
add
push
lcall
inc
xchg
adc
pop
dec
pop
pop
mov
imul
and
add
enter
insl
or
add
outsl
iret
out
enter
cmp
sqrtps
daa
dec
aam
adc
inc
add
movsl
mov
mov
outsb
push
fldl
xlat
ret
mov
add
shll
hlt
rolb
call
and
insb
cvtps2pi
xchg
adc
daa
cli
int
fs
dec
sti
fisttpll
test
push
pusha
enter
jmp
pop
mov
pusha
cmp
ja
xor
lret
jmp
pop
jo
fcmove
arpl
es
or
fwait
inc
mov
out
dec
or
inc
es
idivb
dec
lahf
movsl
test
push
or
push
jp
mov
sbb
or
inc
cmp
ret
arpl
lock
xor
fisubrs
xchg
xor
addb
pusha
bound
aaa
mov
fcomps
data16
or
into
ficompl
mov
add
pop
add
add
xchg
bswap
in
jbe
sbb
lret
fwait
pop
xchg
jne
subb
loopne
lods
xchg
insl
add
mov
dec
fdivs
xchg
push
sub
mov
and
push
lea
xor
test
mov
pusha
shld
cmpsl
push
lret
adc
sbb
lret
aad
ja
mull
jnp
push
cwtl
movsb
push
pop
cs
pop
cs
cmp
add
lods
ds
push
ljmp
das
push
sbbb
pop
lock
ja
fwait
pop
xchg
addr16
push
cmp
pop
inc
xchg
sub
in
or
cmp
roll
lock
xor
sahf
or
pop
or
sbb
testl
inc
lcall
adc
mov
pop
and
ds
and
hlt
pop
push
xchg
insb
outsl
lea
adc
adc
inc
loopne
sbb
push
jne
mov
gs
sub
test
xlat
inc
je
decl
loopne
clc
adc
mov
push
xor
cmpb
cmp
adc
test
in
pushf
mov
mov
cmp
add
sub
sub
add
sbb
lea
pop
inc
push
pop
xchg
mov
xor
lods
rorb
pop
fdivl
or
pop
gs
sbb
pop
jle
push
arpl
adc
add
dec
cmp
dec
data16
push
cmp
orb
shlb
ret
jl
je
xchg
xorb
pop
add
or
lock
jecxz
and
rclb
sub
and
insb
cmpb
or
sbb
lods
nop
mov
xor
mov
sub
push
dec
add
lock
jg
or
pusha
inc
cld
pusha
jecxz
pusha
dec
mov
test
mov
test
sbb
add
sub
sbb
adc
arpl
sysexit
sub
mov
loope
pusha
cmpsl
xchg
cmp
outsl
sub
pop
lea
mov
xchg
sbb
push
xchg
test
lret
ret
cwtl
lods
movsl
adc
add
rolb
out
jmp
insb
xlat
push
fs
and
nop
push
das
fimuls
sbb
jmp
inc
cmp
stos
orb
out
int3
adc
fimuls
repnz
pushl
pop
sub
test
jge
mov
jns
neg
and
lea
sbb
lock
xchg
xor
sbb
shlb
pop
inc
jae
and
add
loopne
mov
pop
pop
je
mov
inc
inc
adc
dec
cltd
mov
push
inc
arpl
add
ficompl
and
out
or
ficoms
out
push
shrl
push
movl
je
or
stos
dec
add
jne
ror
mov
inc
rcrb
add
cmpsl
fildl
mov
imul
test
adc
ret
rolb
sub
or
cmp
and
add
imul
data16
push
aas
test
mov
xor
cmpsb
push
cmp
add
push
or
or
icebp
mov
out
sbb
push
inc
rorl
mov
mov
mov
outsl
imul
mov
lock
inc
dec
pop
cmp
mov
ret
sub
sub
sub
mov
mov
mov
pop
mov
add
ret
xchg
iret
or
fbstp
xor
cmpsb
sbb
call
fsts
ret
dec
addl
adc
daa
pusha
cmc
es
inc
insl
ja
add
cltd
inc
adc
mov
add
add
xor
add
jo
addr16
shr
sbb
add
add
or
adc
pop
cmp
imul
pop
je
sub
inc
mov
and
xor
dec
test
or
mov
or
push
int
pop
lret
mov
loop
je
inc
push
jb
cmpsl
mov
inc
add
push
jo
pop
rcll
or
xor
stos
add
dec
dec
loopne
lret
adc
jne
jmp
loope
push
imul
sub
xchg
fcoms
adc
pop
sub
pop
add
adc
and
adc
inc
adc
inc
jne
mov
fcomps
dec
jle
dec
cmc
cmp
je
and
ret
rclb
lea
cwtl
adc
rcr
fwait
dec
sbb
mov
dec
or
sub
and
xchg
xor
shrb
popf
sub
subb
xor
sbb
movb
or
gs
or
add
hlt
out
lret
add
ret
fwait
add
xor
pop
mov
ret
pop
lret
roll
inc
push
gs
mov
jmp
xchg
dec
in
sbb
int3
pop
int3
pop
out
pop
lds
sbb
shrl
fsub
xor
lock
ret
jg
sub
fisttpll
ds
and
add
add
or
mov
add
fbstp
cmp
inc
cmp
aam
les
add
pusha
movsb
mov
add
or
pop
or
mov
add
adc
xor
adc
cmp
pop
sub
mov
in
in
inc
mov
int
mov
adc
jg
push
push
fadd
inc
fildl
movsl
sbb
sub
movsl
mov
loope
imul
xor
cmp
and
push
inc
cmp
inc
fs
outsb
cs
outsl
mov
jg
add
xchg
dec
lret
ret
gs
mov
and
inc
mov
inc
fiaddl
pushf
cmp
sub
mov
in
dec
sbb
lea
dec
orb
inc
adc
inc
sub
inc
jecxz
insb
cmp
cld
sub
imul
enter
jge
adc
dec
lcall
adc
sbb
jne
inc
int3
imul
or
adc
ja
adc
or
and
xchg
pop
jge
mov
inc
repz
in
cmp
dec
adc
jae
dec
and
and
mov
les
sbb
ficoml
mov
sbb
gs
mov
add
adc
in
jl
cmp
out
mov
sbb
pop
nop
mov
jle
test
cmpsb
shr
mov
dec
pop
mov
or
daa
mov
dec
and
sub
adc
add
popw
jg
ffree
and
add
adcl
jno
fsubr
push
cmp
out
and
or
cs
lea
mov
add
xchg
shlb
pop
mov
pusha
mov
add
or
bound
stos
fdivr
enter
dec
call
jno
push
scas
dec
stos
hlt
and
mov
pop
mov
adc
fcoml
cmp
push
lods
aam
xor
fildl
sbb
sbb
add
mov
notb
push
jecxz
cmpsl
popa
insl
enter
ds
test
xchg
stc
inc
inc
xchg
and
mov
pusha
call
adc
popa
mov
insl
subl
or
fisttpll
push
mov
dec
cmpsl
in
in
mov
orl
cmp
jl
xlat
push
inc
stos
push
lock
push
stos
dec
xor
loope
nop
push
cmp
sbbb
ret
inc
dec
pop
jo
sbb
and
ret
cmp
push
push
pop
dec
or
mov
inc
adc
ficoml
add
adc
lods
aaa
inc
ja
add
pop
mov
arpl
add
andl
and
daa
lock
xor
mov
test
cwtl
addl
pop
fildl
cmpl
adc
jno
cmp
and
rcll
mov
testl
in
orl
sub
lods
jmp
out
aaa
inc
xor
sbb
fs
jnp
pop
mov
inc
adcb
or
and
push
push
mov
pop
fiaddl
adc
mov
fs
mov
mov
outsb
dec
fidivl
outsb
addr16
bnd
sbbb
or
ss
insb
mov
sub
dec
jno
jmp
fldcw
or
dec
std
call
push
and
arpl
mov
roll
sub
sbb
and
xchg
cmpb
jno
rolb
sub
pop
inc
pop
xor
adc
movl
mov
iret
loope
and
and
int
mov
mov
fsubl
push
loopne
pusha
xchg
cwtl
xlat
jno
dec
lcall
inc
push
es
and
adcb
or
nopl
fdivs
adc
cltd
sbb
mov
fidivl
inc
mov
mov
rcrb
fnstenv
push
les
shrb
sbbl
aas
nop
xchg
add
cmp
nop
xchg
add
add
pop
test
les
in
adc
push
inc
inc
xchg
rclb
jo
aaa
jle
jo
and
mov
repnz
enter
lock
fs
scas
aas
xor
fs
push
dec
dec
dec
fcom
inc
push
inc
cwtl
mov
out
sbb
dec
pand
fwait
inc
push
cld
pop
push
inc
mov
xchg
xlat
sahf
or
xchg
mov
mov
repnz
mov
lahf
jg
push
pop
das
xorl
inc
cli
jmp
xor
aas
mov
mov
adc
mov
daa
sbb
daa
cltd
jno
or
push
mov
imul
adc
or
jg
add
clc
arpl
push
push
out
jne
pop
pop
es
in
popa
nop
popa
pop
lea
pusha
pcmpeqb
orl
ret
and
xor
or
add
pop
lds
mov
and
adc
call
dec
jnp
aaa
push
inc
adc
xor
pop
outsl
dec
push
jg
loop
fbld
dec
xchg
push
sub
or
aas
les
push
inc
mov
dec
push
mov
jnp
es
pop
xchg
xchg
sbb
dec
sbb
cmp
push
add
sbb
mov
mov
xor
dec
cmp
adc
sbb
push
or
add
inc
or
in
gs
out
movsb
pop
sbb
push
aaa
pop
adc
in
jmp
jo
out
sub
cmp
adc
cs
dec
or
jmp
add
clc
jns
push
dec
mov
sub
push
or
mov
jbe
dec
adc
clc
iret
mov
ss
inc
add
sub
enter
dec
sub
inc
lds
or
inc
and
add
mov
data16
fchs
add
and
loopne
daa
and
dec
xor
push
sbb
xor
xor
fs
inc
xor
inc
push
cmp
pop
leave
add
jo
adc
lea
enter
ss
xchg
dec
mov
pop
jb
add
adc
into
ret
imul
inc
clc
add
cmp
add
jb
jbe
jp
or
cltd
dec
add
adc
or
adc
or
mov
cmp
cwtl
push
xor
addl
jg
adc
pop
in
xor
xor
mov
and
popf
fisubl
shl
dec
ja
pop
enter
push
push
ret
imul
fistps
shlb
push
jns
fldenv
and
pop
mov
fstpl
adc
or
cs
insb
sub
rcl
xor
push
les
cmp
mov
clc
xchg
pop
xor
jmp
mov
adc
push
sbb
pushf
pop
jb
in
mov
nop
adc
ffree
fidivrl
fdiv
cmp
jno
shlb
movsl
xor
xor
das
adc
test
test
loopne
gs
popa
test
jb
dec
rorb
shll
ret
push
fldenv
fs
pop
xchg
sbb
push
dec
lods
mov
bound
pusha
cltd
mov
push
adc
ljmp
or
or
xchg
xchg
mov
test
push
sbb
imul
inc
cmp
mov
inc
push
dec
inc
push
push
enter
fstps
inc
sub
xchg
sbb
adc
inc
bound
jae
sbb
mov
fcmovnbe
pop
add
das
push
movsb
jno
push
add
aas
aad
xchg
push
dec
add
xchg
arpl
dec
xor
rol
testb
add
mov
xchg
adc
and
call
xchg
orb
call
pushf
dec
mov
pop
xchg
cmp
adc
add
mov
int
arpl
adc
fmuls
push
in
mov
dec
rcl
adc
movl
push
jno
add
mov
jb
das
loope
sbb
andb
ret
xor
pop
add
push
jae
aam
orb
xor
movsb
cltd
jnp
js
int3
test
jns
inc
fs
add
pop
dec
inc
inc
insl
and
or
inc
insb
addl
lds
mov
sub
les
fisttpl
sbb
adc
rcl
clc
xchg
das
xlat
adc
out
imul
or
nop
or
icebp
test
scas
dec
lret
dec
js
notb
add
cld
pop
inc
inc
push
push
shl
cmp
cmp
movsb
push
ret
adc
lcall
cmp
adc
add
add
sub
push
or
push
rcl
bound
xchg
lods
daa
jo
inc
fiadds
clc
sbb
adc
test
in
mov
das
cmp
push
add
and
test
pop
xchg
or
orl
sbb
adc
add
xor
lods
adc
lcall
push
adc
dec
daa
pusha
loope
push
dec
mov
add
xchg
sub
js
xor
add
jg
dec
pop
mov
or
insb
mov
mov
int3
mov
sub
or
sub
xchg
dec
xor
push
nop
popa
cmovs
in
jl
hlt
adc
call
dec
lock
pop
xchg
adcb
sbb
pop
repz
push
add
push
jmp
lods
sub
xor
pop
push
xchg
push
push
ds
push
mov
push
push
adc
add
sub
test
adc
push
pop
movsb
mov
mov
fld
call
or
add
add
push
pop
jmp
outsl
sbb
push
scas
and
cmp
std
adc
mov
fs
and
sbb
dec
or
or
push
inc
pop
leave
out
hlt
aam
mov
dec
sti
sbb
xchg
mov
je
aad
push
in
push
imul
xchg
insl
nop
ss
pop
or
ja
pop
dec
push
push
ljmp
aam
mov
pop
jg
bound
ja
inc
mov
hlt
dec
jbe
aam
test
movsl
repz
sub
mov
mov
sub
ret
mov
add
hlt
mov
pop
cmp
sbb
and
adc
or
pusha
shrb
xchg
orb
lods
inc
dec
push
mov
xor
add
mov
adc
nop
test
add
add
push
daa
ret
mov
or
mov
adc
rcl
or
xchg
iret
pop
pop
pusha
int
daa
push
insb
out
jp
imul
inc
testl
daa
push
pusha
add
cmp
cmpsb
shl
push
insb
pusha
aad
lock
lea
stos
or
aas
sub
mov
popf
jecxz
and
pop
xor
imul
dec
sti
or
jge
and
push
and
mov
sbb
cltd
jno
or
cmp
sbbb
inc
mov
add
and
rolb
cmp
add
jge
dec
push
and
add
pop
add
andb
pop
mov
in
add
mov
das
cmp
aas
pop
je
push
and
movsb
sub
push
cltd
nop
mov
sub
add
dec
enter
rolb
xor
loopne
or
push
push
adc
imulb
add
sbb
add
xchg
pop
adc
push
inc
inc
mov
cmp
or
sub
push
nop
inc
sbb
sub
es
test
test
or
and
sub
movsb
std
addb
jmp
fisubrl
out
nop
inc
je
or
push
nop
test
jmp
mov
cmp
adc
ja
mov
push
pop
and
sub
mov
scas
inc
dec
push
push
dec
dec
inc
push
push
inc
xchg
popw
or
dec
dec
inc
addr16
leave
xor
inc
pop
or
add
inc
stos
inc
add
repnz
push
xchg
dec
dec
dec
inc
ss
lock
dec
das
es
lahf
testb
aaa
inc
push
dec
dec
psadbw
inc
push
inc
pop
inc
aas
push
push
scas
adc
add
dec
inc
push
push
push
add
mov
out
addb
out
inc
pusha
jnp
jg
ja
inc
inc
push
inc
ja
inc
icebp
ja
scas
ja
jne
nop
inc
orb
cmp
nop
icebp
xrelease
enter
rolb
lock
jnp
xchg
insb
mov
arpl
cli
loope
fwait
ret
sub
xchg
lahf
bound
icebp
jle
and
popf
aaa
repnz
add
subb
or
mov
adc
les
movsb
sbbb
dec
mov
sbb
rcrl
push
sub
add
dec
arpl
add
shrb
in
sti
inc
sar
andb
push
xor
push
mov
cs
mov
push
mov
int3
push
jno
and
mov
sbb
shrb
push
or
mov
pop
fdivl
push
jecxz
mov
sub
dec
add
gs
adc
fildl
scas
dec
clc
enter
xchg
jge
inc
enter
adcb
jne,pn
fsubrs
repnz
dec
or
sub
sub
mov
cmp
jne
xor
out
inc
mov
or
sbb
mov
insb
inc
frstor
mov
jb
add
jne
jmp
mov
cltd
out
adcl
sbb
mov
es
and
push
orl
pop
ficoml
lahf
xchg
divb
adc
lock
aam
out
xchg
ljmp
cmp
movsb
ss
add
mov
in
jg
jne
cmp
aam
lea
hlt
jne
dec
push
testb
jge
sub
cs
sti
push
sub
jb
outsl
push
and
leave
jmp
mov
mov
or
jmp
mov
sbb
push
adc
jnp
nop
daa
adc
fimull
and
dec
test
insb
cmpsb
mov
cltd
insb
dec
dec
std
arpl
sti
in
scas
mov
in
js
lea
clc
cltd
mov
inc
jbe
mov
outsl
icebp
icebp
imul
push
js
pop
les
cmpb
jne
adc
inc
jmp
call
jno
push
inc
inc
jmp
sbbb
cli
sti
pop
jne
inc
inc
mov
pop
mov
jne
out
test
push
adc
sub
cwtl
add
cwtl
mov
pop
xchg
popa
xor
cmp
pop
mov
test
pop
cmp
xchg
sub
push
jo
add
mov
jg
cmpsl
nop
nop
mov
iret
js
mov
pop
push
jp
dec
mov
adc
adc
and
shr
aam
movsl
fnsave
push
and
lock
mov
mov
xchg
adc
movsb
mov
sbb
les
dec
sbb
pminsw
loopne
and
push
clc
lea
inc
inc
fstps
push
cmpl
pop
es
add
aam
je
mov
inc
sbb
stos
push
cmp
nop
and
mov
mov
xor
test
and
aam
xchg
push
aam
inc
inc
dec
pushf
inc
xchg
out
mov
data16
or
adc
cmc
dec
push
xchg
and
movsb
adc
das
pusha
mov
or
and
sub
stos
push
inc
js
sub
daa
aaa
pop
xor
sbb
test
es
scas
xchg
ficoml
or
sti
mov
add
jne
das
sub
and
shrb
sbb
pop
sub
cmpsl
add
dec
mov
and
inc
fisubs
mov
ljmp
add
cmp
xchg
sbbb
ljmp
sarl
cmp
xchg
push
mov
mov
dec
aaa
push
icebp
push
shrb
push
rorb
push
clc
mov
test
sbb
test
mov
cmc
inc
cmpsl
pusha
mov
mov
inc
stc
std
jmp
jns
in
dec
cmp
into
in
or
push
adc
jnp
sbb
and
add
xchg
push
or
seta
push
push
js
negb
test
sbb
xchg
int
imul
push
loopne
mov
mov
or
mov
lret
mov
mov
inc
mov
xor
xchg
leave
imul
outsb
xor
sti
or
mov
das
add
push
jp
and
add
push
mov
push
cmp
jge
jb
adc
xor
push
push
mov
mov
insb
lcall
push
sub
sarb
push
jne
dec
shll
cwtl
gs
jecxz
xor
mov
arpl
je
jno
push
or
daa
cld
pop
sbb
sub
imul
outsl
cmp
jmp
pop
cmpsl
mov
mov
in
inc
adc
inc
gs
push
or
adc
shrb
add
paddq
test
in
xchg
sub
sti
fwait
xchg
lcall
mov
and
mov
sub
adc
or
and
jge
xor
inc
add
jmp
or
push
cld
or
je
and
scas
mov
add
dec
add
aaa
insb
xchg
pop
or
adc
sub
sub
xchg
fldt
push
add
adc
insl
adc
je
sbbl
ljmp
or
cmp
or
inc
lock
cmp
enter
and
inc
clc
adc
nop
inc
cltd
mov
or
mov
dec
fldenv
ds
repnz
mov
or
loope
mov
nop
jmp
adc
pop
bound
sub
adc
sbb
inc
mov
aad
jb
and
and
push
dec
lcall
hlt
nop
add
lock
and
push
test
lock
loope
shl
push
mov
scas
push
jo
adc
add
loopne
sbb
das
mov
sbb
jne
pop
cmp
mov
sub
cld
dec
mov
dec
shrl
xor
adc
mov
pop
cli
or
and
mov
sbb
xor
insb
cwtl
pusha
add
inc
leave
add
subb
mov
outsb
gs
add
aaa
lahf
mov
pop
dec
inc
and
or
arpl
or
sbb
ljmp
inc
lods
popw
sub
mov
decl
and
out
ljmp
outsl
jg
fsts
add
or
stos
scas
pushf
pop
dec
imul
cld
pop
femms
and
cmp
xor
shll
imul
shll
pop
or
or
add
push
leave
xchg
in
push
pop
pop
xor
insl
shlb
pop
loopne
je
call
mov
mov
ss
push
jae
dec
and
pop
enter
popa
leave
or
xchg
aam
enter
gs
nop
jo
out
gs
popa
mov
les
pop
mov
int3
mov
orb
inc
add
sbb
test
popf
setns
and
xor
in
lods
lds
jae
aad
cld
pop
sub
jne
push
mov
scas
sub
daa
xlat
into
loope
push
xlat
rorb
orb
neg
fsubrs
cmp
pusha
ja
lcall
pop
jl
movl
stc
jno
mulb
pop
jb
add
or
fwait
cmp
xchg
add
add
pop
aaa
jae
sbbb
pop
ret
dec
push
push
bsf
xchg
or
mov
xor
dec
pop
or
pop
mov
jp
and
or
frstor
daa
mov
mov
insl
mov
into
leave
or
cmp
in
loopne
in
shll
cmp
mov
xchg
fcoml
call
orl
call
add
push
addr16
add
adc
enter
pop
mov
xchg
cmp
sbb
cwtl
rclb
jae
xchg
xor
push
shl
sbb
je
cwtl
dec
adc
rolb
push
mov
xor
fisubrl
loopne
adc
xchg
xchg
dec
sbb
dec
into
mov
or
add
or
aas
outsl
les
and
jg
ror
dec
or
punpckhbw
add
sbb
push
or
mov
test
dec
fistpll
std
mov
inc
and
je
add
push
cmpsl
inc
jo
orl
mov
dec
xorb
cmp
sub
jmp
movsb
adc
subb
jo
testb
pop
sbb
jbe
std
incb
xor
xor
jne
loopne
mov
push
rolb
sub
rcrb
movsb
mov
clc
pusha
into
mov
nop
mov
adc
add
add
sarl
sbb
das
aam
in
in
aaa
add
int3
mov
enter
add
pop
xor
fsub
mov
or
xchg
cmp
in
test
arpl
pop
imul
lock
lock
inc
push
orb
jae
cmp
fisubs
fcoml
pop
xor
sub
rol
jle
outsb
fnstsw
mov
push
adcl
and
and
mov
push
xor
mov
addr16
add
adc
scas
cmp
mov
adc
sbb
out
cmp
jmp
push
movsb
es
std
push
mov
pop
cmp
mov
sub
push
sti
fwait
rcrb
inc
negl
pop
ss
xchg
orl
mov
std
daa
dec
ret
imul
cmpsb
nop
xchg
clc
push
mov
in
rcl
push
sub
bound
mul
push
cmp
push
into
aas
sub
or
inc
push
pop
aaa
adc
std
push
cmpunordps
push
xor
pop
add
dec
repnz
push
xchg
out
insl
or
les
lea
fs
addb
ljmp
movzwl
sbb
jmp
sub
je
inc
xor
je
dec
mov
cs
push
adc
cmp
push
lock
int3
push
bound
pop
and
sub
inc
dec
jno
inc
imul
insl
xor
sbb
test
jmp
in
addb
adc
mov
pop
fcoml
push
and
cltd
or
dec
mov
inc
mov
or
push
jmp
fs
dec
ret
lcall
add
xor
cmp
sbb
cmpsl
or
mov
lea
lea
aaa
add
fbld
lods
pop
insb
aad
jnp
mov
mov
inc
sub
lcall
push
push
rclb
jge
and
dec
fimuls
push
sub
test
sbb
ljmp
mov
mov
jge
jp
sbb
dec
and
dec
sbb
js
mov
std
adc
sub
push
in
push
add
cmp
cmp
push
insb
push
inc
xlat
daa
lcall
mov
subb
jb
scas
pop
clc
mov
or
jae
pop
inc
fimuls
enter
jne
repnz
daa
pop
mov
push
dec
pop
pop
add
fsubrl
in
add
xchg
imul
xchg
mov
xor
mov
out
pop
scas
pop
cmpb
leave
sub
sub
jae
orb
pop
jne
das
cwtl
ret
adc
int
inc
daa
and
push
push
dec
bound
clc
fdivrl
fdivrl
jmp
and
pushf
int3
push
sbb
or
mov
mov
and
cmp
enter
mov
enter
sbb
outsl
pop
jne
rorl
mov
lcall
pop
iret
add
mov
adc
add
stc
sbb
fcomp
pop
loopne
add
push
pop
mov
sub
inc
rolb
jnp
adc
sbb
xor
push
sbb
dec
int3
dec
daa
xchg
popa
xor
daa
or
sbb
lea
lock
mov
adc
push
add
xor
push
xchg
and
push
xchg
dec
divl
std
loop
and
xor
inc
bound
jecxz
inc
lock
adcl
adc
mov
pop
inc
inc
dec
cmp
jmp
add
and
sub
les
mov
inc
xchg
adc
enter
loopne
call
test
fcomps
and
test
dec
inc
rclb
add
jle
add
cmp
jne
bound
xor
sub
addl
pop
ret
adc
repnz
js
or
adc
adc
push
dec
rorb
addr16
lock
in
hlt
and
and
sbb
push
fsubrs
or
test
add
and
test
repnz
inc
add
mov
mov
aaa
pop
xchg
sub
test
pop
mov
dec
mov
jbe
cmp
cmp
jg
test
daa
inc
jb
mov
das
out
jns
and
jle
add
cmp
lahf
xchg
fldl
cmp
ja
inc
lds
enter
jb,pt
mov
addl
pusha
xor
sub
in
mov
add
outsl
add
andl
adc
int3
mov
loopne
dec
or
mov
ds
insb
dec
les
jbe
xchg
mov
jns
and
jb
das
adc
pusha
and
xlat
rcll
jae
adc
call
mov
mov
lds
leave
and
ja
imul
xlat
in
or
popa
flds
jl
mov
loopne
aam
and
xchg
loopne
inc
jae
sbb
insl
sbb
xchg
xchg
jge
rorb
push
je
inc
cli
mov
fmul
mov
pop
push
add
cmp
inc
jg
add
cmp
add
subb
test
incb
mov
or
cs
pop
jb
add
xor
sub
pop
add
or
fwait
push
loope
or
push
add
or
sbb
scas
mov
loope
cs
dec
or
lea
jmp
and
sahf
add
jg
dec
cmp
jmp
xchg
addr16
outsb
or
jmp
sbb
push
femms
jmp
scas
and
por
cmp
pop
mov
sbb
movsb
enter
jbe
or
adc
daa
jns
push
lea
cltd
shrb
incl
xor
push
pop
mov
ficoml
and
add
adc
cmovle
sbb
adc
mov
push
inc
xor
add
aam
lock
mov
jne
jmp
adc
test
loope
inc
fwait
cmpsl
cmp
adc
sbb
fsubrs
adc
das
daa
and
test
mov
jns
adc
pop
test
bound
adc
addr16
enter
cli
jbe
and
dec
or
xchg
xchg
and
dec
cmp
mov
mov
ret
je
adc
inc
mov
mov
push
mov
or
inc
sbb
or
dec
sbb
cltd
add
enter
jno
ror
dec
push
adc
imul
jp
rorb
bound
das
push
jb
cmp
je
cmp
imul
arpl
pop
sar
add
cmp
ja
mov
imul
xor
shll
jae
dec
push
pop
popa
addr16
nop
dec
insl
outsb
mov
or
sti
jmp
rcrl
dec
adc
cltd
push
xchg
add
adc
sti
pop
mov
adc
or
sub
xchg
mov
add
inc
inc
rorb
insb
or
sub
jns
pop
xchg
xchg
inc
fdivs
push
lock
popa
test
popa
and
movb
sbb
rclb
sub
popf
sarl
mov
ss
sbb
rorb
and
fsts
add
adcb
andl
sbbl
in
enter
enter
mov
rcrb
xchg
xchg
insb
and
or
adc
lret
jmp
push
push
push
bound
jo
push
dec
enter
or
push
sbb
popl
jmp
xor
ds
inc
push
mov
xor
mov
ljmp
jb
add
fstl
ljmp
adcl
sub
enter
cmpsl
and
pusha
sbb
sahf
sub
xor
pminub
mov
dec
outsl
in
enter
push
or
and
andb
push
lea
cld
daa
in
cmp
mov
loopne
cltd
add
repnz
shrb
jge
mov
inc
or
nop
inc
cmc
fidivl
dec
or
jnp
inc
jbe
cs
xchg
imul
jle
nop
decl
mov
sub
mov
insb
fs
sub
push
stos
sbb
lea
cmpb
clc
ss
add
lcall
or
cmp
mov
loopne
scas
adc
and
scas
repnz
adc
mov
cmp
shrl
adc
inc
lret
inc
rorl
gs
xor
mov
jg
xchg
sbb
fsubrp
insl
jl
sbb
test
and
sub
push
and
stc
aaa
lock
push
mov
mov
cwtl
and
pop
imul
xor
jg
pop
mov
clc
xor
sbb
outsb
xor
pop
dec
roll
dec
fsubrs
fs
rolb
sub
lcall
push
cld
scas
cwtl
mov
sbb
sub
sbb
and
test
imul
mov
aad
ja
mov
mov
insl
jno
mov
in
xchg
xchg
push
xchg
dec
cs
push
add
cmpsb
pop
inc
lds
enter
push
add
and
or
cltd
sub
sbb
mov
ja
sbb
mov
cmp
push
cmp
inc
jle
push
fs
fs
divb
pop
push
xor
inc
test
and
pusha
xor
sbb
jo
mov
mov
loope
lcall
dec
push
sub
inc
test
orb
cmovb
scas
pop
or
mov
jg
loope
pop
out
inc
sub
arpl
mov
add
stc
or
sbb
jecxz
mov
dec
push
or
push
shr
sub
cmp
movsb
and
outsb
dec
addr16
inc
add
cmp
and
cmp
mov
sub
or
loope
clc
cmp
stos
aaa
clc
mov
lcall
add
xchg
fwait
mov
jle
daa
add
mov
in
pop
mov
lock
pop
repnz
in
mov
aaa
jne
pop
movsb
wbinvd
xchg
sub
add
leave
test
call
roll
sbb
sub
xchg
or
push
and
into
xor
fcoml
and
add
repnz
dec
pop
aas
aam
insb
leave
add
and
sarb
xchg
sub
int3
mov
xchg
cmp
enter
les
sbb
xchg
les
mov
sbb
rcl
and
or
pop
nop
das
jns
pop
bound
jns
movsb
sbb
or
xor
movsb
sbb
adc
ss
adc
fidivrs
adc
je
adc
adc
mov
fimull
xor
fwait
push
dec
dec
pop
inc
push
inc
cltd
popf
mov
dec
mov
inc
pop
cmpsl
add
lahf
mov
pop
xchg
fiadds
dec
dec
cmp
shrl
pop
push
dec
ja
push
push
jmp
pop
mov
sub
sub
test
das
incl
cmp
jne
adc
sbb
add
sub
and
push
or
popa
xor
cwtl
das
daa
shrd
loop
das
push
sbbl
cmp
and
jle
mov
aas
or
jbe
fsubl
dec
in
enter
cmp
xchg
and
lcall
add
mov
dec
aam
jns
in
shlb
sahf
lods
je
test
pmulhuw
mov
inc
sahf
fs
mov
shlb
pop
nop
nop
daa
in
mov
jno
arpl
mov
push
push
push
pop
dec
dec
push
or
pop
adc
and
das
xchg
ss
add
mov
stos
add
andps
push
mov
push
aaa
jg
test
inc
dec
sbb
mov
outsl
sbb
orb
testb
dec
jge
push
daa
enter
add
add
int
mov
enter
and
adc
adc
inc
ds
sbb
arpl
bound
adc
divl
mov
push
fsubr
dec
jne
cmp
jno
xchg
adc
or
mov
sub
mov
and
and
cmp
ret
sbb
pop
ret
inc
or
loop
add
inc
push
lahf
orb
rcrb
ljmp
test
xor
cmp
rclb
jg
std
pop
gs
pop
pop
push
fs
sbb
add
pop
xchg
ja
jmp
mov
or
repnz
xchg
gs
add
add
xchg
gs
xchg
add
into
pop
xchg
gs
or
or
or
xchg
gs
xchg
gs
xchg
or
sahf
pop
xchg
gs
adc
sub
xchg
adc
cmc
sub
mov
adc
mov
lret
mov
sbb
sbb
lret
mov
lret
sbb
sbb
sbb
sub
mov
sbb
mov
lret
mov
and
sub
and
sub
mov
and
mov
sub
sub
mov
xor
xor
xor
mov
cmp
cmp
and
and
and
aas
inc
inc
inc
and
and
inc
inc
inc
inc
and
and
inc
dec
dec
dec
and
and
dec
dec
dec
dec
enter
dec
push
push
enter
push
push
push
push
enter
push
push
pop
pop
enter
pop
pop
pop
pop
enter
pop
pop
pusha
popa
xor
enter
xor
xor
addr16
xor
xor
insb
insl
xor
xor
outsb
outsl
jo
xor
xor
jb
je
mov
jbe
js
mov
jge
mov
mov
test
mov
mov
and
mov
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
cwtl
cltd
and
and
lcall
and
enter
mov
enter
test
enter
stos
stos
lods
enter
lods
scas
scas
mov
leave
enter
mov
xor
xor
mov
mov
xor
xor
mov
xor
xor
xor
xor
ret
pop
xor
xor
mov
mov
int3
mov
rorb
rcl
mov
fcoms
fcmovu
fsubl
and
and
loopne
and
and
loop
in
and
and
out
call
jmp
and
and
out
out
enter
lock
repnz
hlt
cmc
div
enter
clc
stc
cli
sti
enter
cld
std
jmp
iret
out
add
add
add
add
lahf
iret
out
add
add
add
repz
jl
add
add
add
jl
lahf
iret
or
add
add
add
enter
add
add
push
pop
sbb
xor
xor
sbb
sbb
xor
xor
push
pop
and
xor
xor
and
and
xor
xor
es
sub
mov
sub
sub
mov
xor
xor
mov
cmp
cmp
and
inc
inc
and
and
inc
inc
inc
inc
and
and
inc
inc
dec
dec
and
and
dec
dec
dec
dec
and
and
dec
dec
push
push
enter
push
push
push
enter
push
push
push
pop
enter
pop
pop
pop
pop
enter
pop
pop
pop
pusha
enter
popa
bound
jb
enter
addr16
imul
xor
outsl
jo
xor
xor
jae
xor
xor
jne
ja
pop
xor
xor
jnp
mov
orb
test
xchg
mov
mov
and
and
and
and
and
and
and
and
and
and
enter
cmpsb
cmpsl
enter
test
stos
stos
enter
lods
lods
scas
scas
enter
mov
mov
leave
enter
mov
mov
xor
jb
mov
xor
mov
xor
xor
rol
xor
xor
xor
xor
enter
mov
iret
mov
rorl
xlat
mov
fisttpl
and
and
and
and
in
out
and
and
call
and
and
in
out
out
and
and
lock
repnz
hlt
cmc
test
enter
stc
cli
enter
sti
cld
std
lahf
iret
out
incl
add
add
add
add
stc
jl
add
add
add
stc
jl
or
or
or
or
ds
iret
out
add
add
add
repz
jl
add
add
add
enter
push
pop
sbb
enter
sbb
xor
xor
xor
xor
and
and
xor
xor
xor
xor
sub
sub
xor
xor
mov
mov
cmp
cmp
mov
xchg
mov
and
and
inc
inc
inc
dec
and
and
dec
dec
dec
dec
and
and
dec
dec
dec
push
and
and
push
push
push
push
and
push
push
enter
pop
pop
pop
pop
enter
pop
pop
pop
pop
enter
pusha
popa
bound
enter
gs
enter
imul
insb
insl
outsb
outsl
xor
xor
jo
jb
xor
xor
je
jbe
xor
xor
js
jp
xor
xor
jl
jle
mov
orl
xchg
mov
mov
mov
and
xchg
xchg
xchg
xchg
xchg
and
and
cwtl
cltd
lcall
popf
sahf
lahf
and
and
mov
and
and
enter
stos
enter
stos
lods
lods
scas
enter
scas
mov
mov
enter
mov
mov
enter
mov
jb
mov
xor
xor
xor
xor
xor
xor
enter
xor
xor
int3
int
and
inc
and
jmp
inc
and
and
inc
and
aas
and
and
and
and
and
and
jmp
or
and
and
and
add
loope
loopne
filds
faddl
jmp
aaa
and
and
and
and
and
and
add
pop
add
inc
incl
jecxz
loop
loope
loopne
filds
jmp
faddl
add
add
add
add
add
add
add
add
clc
decl
add
add
add
add
add
add
add
add
add
add
inc
sbb
add
add
pushl
lea
stos
mov
mov
test
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
ds
decl
sub
add
add
add
add
add
add
jnp
jp
jns
js
ja
jbe
jne
jo
outsl
add
add
add
add
add
add
add
add
jg
sbb
gs
add
add
add
add
add
adc
lcall
pop
add
add
add
add
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushl
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
dec
mov
xor
add
add
mov
sub
pop
push
sub
add
add
mov
and
and
jmp
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
out
rol
incb
std
add
add
add
add
dec
cmc
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
dec
fldl
fwait
mov
fidivrl
adc
daa
add
add
push
xor
add
push
or
or
iret
add
add
add
and
leave
les
xor
add
jmp
clc
cmp
add
cmpsl
mov
add
mov
add
add
mov
add
add
lcall
add
add
xchg
add
add
add
sbb
addl
jle
pop
incl
jge
jl
jnp
jp
jns
js
ja
jbe
cld
call
je
jae
jo
outsl
add
insl
add
add
addr16
pushl
add
pop
add
add
dec
add
add
dec
incl
dec
add
inc
add
add
add
add
add
add
add
add
add
incl
xor
xor
das
add
add
add
add
add
add
add
add
add
incl
and
and
pop
add
add
add
add
add
add
add
add
add
pusha
call
add
add
add
add
add
add
add
pop
push
das
inc
add
add
add
add
add
pop
lods
xchg
mov
scas
aad
stc
or
sub
jmp
jp
dec
pop
imul
cltd
test
cmc
leave
fldl2t
stc
add
sbb
and
inc
push
sbb
pop
outsl
jg
pusha
addb
lahf
scas
pusha
addb
mov
pop
sbb
call
add
xchg
add
incl
mov
lea
mov
mov
mov
mov
mov
jl
js
ja
jbe
jne
jae
jb
jno
jo
incl
outsl
add
insl
add
add
add
add
add
popa
add
pop
add
incl
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
jge
jl
jb
jo
push
add
push
add
dec
add
dec
add
sub
sub
sub
sub
daa
add
add
imul
add
add
add
add
std
inc
jmp
ret
testl
repz
mov
out
add
add
add
xchg
inc
cld
jg
jmp
out
fiadds
fldl
faddl
fildl
fiaddl
f2xm1
pushl
add
add
add
add
pop
rcr
push
or
add
cltd
mov
clc
and
xchg
test
test
or
rolb
jnp
jp
jns
ja
push
sarb
fwait
push
aam
lods
jbe
add
orl
mov
sahf
add
push
add
push
fstl
add
pop
add
dec
add
dec
xchg
mov
add
pop
lods
and
ret
inc
or
shlb
je
add
add
sbb
jne
das
add
sysexit
stos
xor
mov
addb
cmp
add
add
jo
es
and
add
and
and
mov
sbb
sbbl
and
js
les
and
push
jg
dec
or
and
xchg
jmp
fcmovb
dec
or
inc
inc
enter
inc
inc
inc
aam
fsub
inc
inc
inc
inc
in
in
lock
inc
inc
inc
hlt
clc
cld
add
mov
adc
sbb
mov
xor
cmp
mov
push
mov
pusha
mov
jo
mov
mov
nop
mov
mov
movsb
test
mov
mov
mov
rorb
fsub
mov
lock
add
sbb
sbb
or
sbb
sbb
adc
sbb
sbb
sbb
and
sub
sbb
sbb
xor
cmp
sbb
sbb
inc
dec
dec
push
sbb
sbb
push
pop
pop
pusha
sbb
sbb
fs
sbb
je
jl
sbb
sbb
test
sbb
xchg
cwtl
pushf
mov
movsb
test
mov
sbb
sbb
sbb
enter
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
hlt
clc
cld
add
xor
xor
add
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
inc
dec
dec
push
xor
xor
push
pop
pop
pusha
xor
xor
fs
xor
je
jl
xor
xor
test
xor
xchg
cwtl
pushf
mov
movsb
test
mov
xor
xor
xor
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
add
fs
or
fs
sbb
fs
sub
fs
cmp
fs
dec
dec
push
fs
pop
pop
pusha
fs
fs
jl
fs
fs
cwtl
pushf
mov
movsb
test
mov
fs
mov
fs
enter
fs
fsub
fs
in
lock
fs
clc
cld
add
enter
add
or
enter
adc
sbb
enter
and
sub
enter
xor
cmp
enter
inc
dec
dec
push
enter
push
pop
pop
pusha
enter
fs
enter
jl
enter
test
enter
pushf
mov
movsb
test
mov
enter
mov
enter
int3
ror
enter
fcomp
loopne
enter
call
enter
cld
add
xchg
xchg
xchg
xchg
add
or
xchg
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
xchg
inc
dec
dec
push
xchg
xchg
xchg
xchg
push
pop
pop
pusha
xchg
xchg
xchg
xchg
fs
xchg
xchg
je
jl
xchg
xchg
xchg
xchg
test
xchg
xchg
xchg
cwtl
pushf
mov
movsb
test
mov
xchg
xchg
xchg
mov
mov
xchg
enter
xchg
xchg
xchg
aam
fsub
xchg
xchg
xchg
xchg
in
in
lock
xchg
xchg
xchg
hlt
clc
cld
add
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
and
and
cmp
inc
and
and
dec
dec
push
push
and
and
pop
pop
pusha
and
and
push
and
and
addb
nop
xchg
and
and
cwtl
pushf
mov
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
add
inc
inc
inc
or
adc
inc
inc
inc
sbb
and
inc
inc
inc
sub
xor
inc
inc
inc
cmp
inc
inc
inc
inc
inc
dec
dec
push
push
inc
inc
inc
inc
pop
pop
pusha
fs
inc
inc
inc
push
inc
inc
inc
js
addb
nop
xchg
inc
inc
inc
inc
cwtl
pushf
mov
inc
test
mov
inc
inc
inc
inc
mov
inc
inc
inc
enter
inc
inc
inc
inc
fcomp
loopne
inc
inc
inc
inc
call
inc
inc
inc
clc
cld
add
add
mov
mov
and
mov
mov
inc
mov
push
mov
mov
je
mov
mov
xchg
mov
movsb
mov
mov
mov
mov
aam
mov
mov
hlt
jns
mov
sbb
sbb
or
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
sbb
sbb
dec
dec
push
push
sbb
sbb
pop
pop
pusha
sbb
sbb
push
sbb
sbb
addb
nop
xchg
sbb
sbb
cwtl
pushf
mov
sbb
sbb
sbb
sbb
sbb
int3
rcl
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
sbb
cld
add
add
xor
xor
or
adc
xor
xor
sbb
and
xor
xor
sub
xor
xor
xor
cmp
inc
xor
xor
dec
dec
push
push
xor
xor
pop
pop
pusha
xor
xor
push
xor
xor
addb
nop
xchg
xor
xor
cwtl
pushf
mov
xor
xor
xor
xor
xor
int3
rcl
xor
xor
fcomp
loopne
xor
insl
popa
xor
shll
pop
arpl
xor
imul
dec
shll
shll
ret
shll
out
xchg
dec
shll
clc
incb
or
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
shrl
cmpsb
clc
incb
or
dec
shll
xor
xor
shll
inc
dec
push
push
shll
outsl
jne
shll
xchg
cltd
xor
shll
stos
mov
mov
ret
aam
dec
shll
clc
lcall
adc
and
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
stos
mov
mov
lcall
insb
lcall
add
shll
and
dec
shll
inc
dec
xor
shll
push
pop
arpl
xor
shrl
jnp
xchg
xor
lea
xor
shll
mov
xor
rcl
out
fnstenvs
lahf
or
sbb
daa
sub
imul
cmpsb
imul
imul
cmpsb
imul
mov
lcall
in
repnz
xor
mov
incb
unpckhps
shll
xor
dec
shll
push
pop
xor
shll
imul
roll
dec
shll
mov
xor
into
aam
loopne
xor
shl
in
repnz
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
into
aam
loopne
int
imul
dec
shll
shll
inc
dec
dec
shll
imul
addb
rcrl
dec
shll
into
aam
dec
shll
loopne
in
repnz
cmpsb
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
cmpsb
imul
xor
add
xor
shll
sub
xor
roll
push
push
pop
dec
shll
addb
xchg
cwtl
sahf
movsb
shll
mov
dec
enter
loopne
xchg
dec
shll
idiv
add
imul
cmpsb
imul
imul
cmpsb
imul
lcall
lcall
ret
imul
sub
cmpsb
idiv
add
xor
adc
xor
inc
dec
push
shll
outsb
je
shll
xchg
cwtl
xor
shll
movsb
stos
mov
shll
into
aam
shll
idiv
lcall
unpckhps
imul
imul
imul
cmpsb
imul
movsb
stos
mov
mov
ret
aam
in
lcall
add
or
adc
xor
daa
sub
xor
shll
push
pop
bound
xor
shrl
jp
xchg
xor
mov
xor
shll
mov
ret
xor
ror
in
fnstenvs
test
lcall
imul
imul
imul
cmpsb
imul
mov
ret
lcall
jmp
divl
stos
or
adc
sbb
daa
sub
dec
cmp
inc
push
push
pop
xor
shll
push
xor
roll
dec
shll
mov
xor
shll
int
shll
idiv
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
and
mov
push
pop
adc
inc
cmp
je
mov
or
push
popf
or
or
adc
cmp
push
es
cmp
mov
lea
or
inc
adc
insb
adc
xlat
jg
decb
fistpll
movb
fsubrs
pop
xchg
jge
addl
iret
movsb
fistl
mov
test
push
and
dec
int
dec
hlt
rolb
xor
pop
cltd
stos
pop
inc
pop
jg
adc
loopne
and
adc
mov
inc
ret
in
aas
add
cmpl
add
jmp
fiaddl
dec
incl
repz
movsl
and
lcall
lea
push
movswl
dec
lods
mov
sub
movb
inc
arpl
jnp
mov
int
hlt
sub
and
iret
jno
xor
or
dec
push
cmp
sub
pop
add
or
clc
push
cmpsb
mov
data16
popa
cltd
push
dec
push
cs
cmp
push
ror
dec
jp
mov
or
dec
jae
cld
inc
insb
xchg
add
pop
cmp
sbb
insb
push
inc
aad
add
push
sti
bound
add
loop
jns
sbb
popa
mov
out
and
cmp
pop
divb
push
push
leave
mov
inc
sub
insl
add
dec
sarl
out
jmp
pop
je
faddl
pop
push
inc
insb
xor
mov
test
push
xor
clc
inc
dec
push
mov
push
jae
mov
push
lock
push
push
push
es
lea
xor
inc
sub
jno
jne
cmpsl
int
imul
out
cmp
or
pop
ret
test
repnz
push
je
pop
jnp
lret
xchg
rcll
popa
add
ds
push
mov
sub
add
dec
pop
or
mov
cli
fistl
mov
jno
pop
ret
jbe
out
pop
or
je
inc
and
push
inc
mov
sub
pop
push
ret
inc
popl
dec
mov
inc
mov
pop
pop
inc
aas
or
push
or
inc
jl
bnd
mov
mulb
push
fbld
xchg
pop
movw
inc
inc
cmp
jmp
sub
push
adc
fistl
fiadds
or
fists
outsl
dec
jge
xchg
and
movl
or
and
movsb
out
and
inc
js
mov
mov
sbb
push
cmp
sub
or
lret
ret
pop
dec
imul
pusha
ret
add
lods
ds
andl
sub
sub
add
push
loopne
cmpsb
rcrl
cltd
and
ret
nop
adc
xor
cmp
or
fs
daa
subps
xchg
mov
jmp
stos
cmp
mov
mov
pextrw
sub
jbe
cld
jae
pop
mov
ljmp
les
and
mov
pop
sub
fildl
adc
popf
pop
int3
push
adc
fbld
cmpsl
pop
loopne
inc
bound
fucomp
addb
inc
push
jbe
add
loope
pop
sbb
sub
mov
mov
incl
xlat
gs
jno
cmpl
and
push
and
pop
lods
imul
pop
mov
pop
in
outsb
push
orb
inc
pushl
push
inc
mov
pop
pushf
push
popa
fcoms
cmpsl
sub
test
add
rclb
call
add
xor
imul
cmp
push
push
mov
mov
cmc
jle
add
or
in
or
or
sahf
mov
dec
or
or
sbb
movsl
and
inc
cmp
dec
sub
sbb
aam
and
jecxz
sbb
ss
mov
or
dec
or
scas
mov
ss
outsb
sbb
loopne
mov
pop
sub
jmp
cmpsb
or
lock
cmp
push
mov
adc
add
jecxz
sbb
push
in
sub
or
pop
es
cwtl
in
add
lds
pop
cmp
out
add
adc
arpl
dec
loope
push
testb
jnp
or
sarl
stc
cmpsb
loopne
pop
dec
je
add
xlat
push
dec
lea
pushf
cmp
cmp
test
mov
jmp
cli
cmpsl
mov
in
and
fisubs
mov
adc
mov
gs
dec
pop
or
outsl
int
dec
push
enter
aam
pop
shlb
in
wbinvd
dec
push
dec
lcall
add
add
jns
lret
xchg
inc
and
loope
adc
dec
lcall
push
inc
or
in
xlat
sbb
cmp
cltd
rol
cmp
cmp
orl
cmp
ds
and
or
enter
and
in
andl
push
sub
sub
sub
inc
push
sbb
adc
out
sub
leave
add
sbb
dec
loopne
lcall
scas
lcall
ret
inc
inc
outsb
loope
push
ss
outsl
lea
add
or
jne
call
cmp
inc
dec
outsl
dec
adcb
inc
movl
pop
daa
push
test
push
and
daa
jbe
or
jg
xchg
cmpl
or
stc
push
inc
inc
inc
inc
pop
adc
adc
dec
sbb
add
mov
dec
mov
or
dec
xchg
sbb
mov
je
add
sbb
popa
jne
dec
aad
sbb
popa
and
test
or
inc
cmp
xchg
sbb
cmp
rcll
add
sbb
or
cwtl
cmpsb
imul
jno
sub
cmp
mov
fisubs
shrb
fsubrs
fistpl
mov
dec
pop
push
xchg
push
add
push
fmull
jle
in
dec
test
pop
pop
sbb
and
orb
dec
mov
xchg
and
loopne
leave
test
test
push
fcmovb
xor
nop
ds
sbb
jp
js
add
adc
mov
add
and
lcall
adc
inc
add
mulps
dec
mov
int3
push
cmp
push
sub
cwtl
mov
dec
rcl
jae
adc
lock
loopne
cmpsb
add
dec
gs
mull
push
inc
imul
and
fidivs
dec
mov
pusha
nop
cmp
dec
lods
rcll
sbb
adcb
jno
mov
xadd
jae
or
add
xchg
mov
enter
popf
lret
jecxz
fstl
cmp
push
mov
ds
mov
or
rcrb
loopne
xchg
or
cmc
popa
push
pop
cmp
and
je
loope
push
add
movhps
imul
push
jo
je
xor
push
addr16
stc
or
mov
mov
or
or
inc
ret
enter
divl
dec
add
inc
adc
add
push
lods
pop
add
mov
je
dec
fsubrl
dec
rolb
xor
in
xchg
xlat
and
aaa
pop
clc
cs
dec
loopne
xor
dec
pusha
xchg
add
cwtl
mov
push
xchg
rcr
xorl
and
test
sbb
in
sub
adc
add
std
pop
push
adc
imul
xor
aaa
or
popa
push
decl
popl
mov
pusha
fdivrs
fadds
fisubrl
fs
std
push
jb
cmp
loop
xchg
sbb
inc
pop
fistps
push
adc
jb
xchg
imul
push
cmp
inc
mov
sarl
push
or
test
sub
popf
je
mov
nop
xor
or
mov
xchg
mov
xchg
sbb
pop
mov
mov
aad
jg
adc
add
or
sub
addb
add
and
inc
loope
pop
ja
dec
or
adc
imul
or
mov
test
mov
gs
dec
movsl
nop
cwtl
sbb
hlt
or
dec
cld
mov
pop
in
in
adc
or
sub
js
pop
mov
dec
testl
dec
dec
jb
add
mov
push
clc
movsb
test
add
add
aaa
les
mov
aas
aaa
lock
pop
sbb
dec
fadd
dec
add
and
adc
add
hlt
bound
and
and
dec
enter
add
and
mov
mov
dec
push
imul
xchg
outsb
jo
es
js
out
add
fidivs
add
js
in
add
call
imul
fmull
push
jo
mov
jnp
mov
pushf
push
jl
unpcklps
mov
dec
push
les
pop
push
les
mov
push
push
push
test
int3
push
sub
inc
addr16
inc
dec
addb
data16
in
inc
or
out
int3
push
enter
xor
aaa
jo
dec
clc
addb
dec
dec
outsl
cmp
aaa
inc
data16
nop
sub
fistl
xor
push
mov
imul
xchg
jl,pt
add
or
leave
outsb
sbb
push
jecxz
inc
xor
pop
sbb
addl
cmpsl
cld
cmpsl
add
sub
or
ret
insl
lock
add
push
mov
es
dec
test
and
adc
inc
mov
push
pop
xor
aam
movsl
outsb
dec
add
mov
add
inc
movsl
in
xor
lds
push
xchg
stos
or
clc
dec
mov
adc
xchg
dec
rorb
inc
jb
rorb
aas
loop
fcoms
lret
lret
dec
loopne
loopne
popa
enter
xchg
out
mov
inc
rorb
lock
xor
shll
jne
clc
clc
imul
push
mov
adc
or
and
imul
adc
xor
rolb
dec
sbb
dec
xor
nop
and
xor
repz
push
orb
push
push
test
icebp
dec
xor
insl
or
pop
add
dec
mov
mov
lcall
pusha
pusha
push
pop
jo
sbb
loop
pop
mov
push
shlb
jae
fmull
and
xorb
add
add
pushf
and
xchg
pop
dec
pop
sbb
jae
pop
loop
subb
add
aad
loop
sbb
rcrb
ret
adc
lcall
fs
adcb
or
inc
xor
jae
nop
cmpsl
fs
cwtl
jne
in
nop
mov
jne
xchg
pushf
stos
inc
jae
push
xchg
jecxz
jae
cmp
sub
mov
pop
mov
mov
push
lea
dec
rcrb
or
and
repz
and
pop
cwtl
out
cwtl
fcmovb
insb
xchg
push
add
push
jno
movsb
jbe
jge
cmp
mov
jle
dec
ljmp
dec
in
mov
daa
cmp
lock
dec
add
test
jno
dec
inc
js
jns
sbb
lar
inc
jae
or
push
mov
and
idivb
adc
popa
jmp
dec
mov
rol
sar
cmpb
js
stos
cmpsb
js
cwtl
and
push
sbb
xor
and
inc
adc
or
and
add
xor
jmp
mov
and
lcall
test
and
sbb
outsb
lock
inc
xor
pop
pop
daa
push
loope
es
enter
pop
xchg
inc
pop
xchg
addb
dec
test
rcl
out
and
push
push
xor
test
lock
and
aaa
notl
pushf
icebp
loopne
mov
inc
repnz
icebp
in
aaa
test
push
repz
lods
adc
mov
xchg
jl
fwait
data16
xchg
test
fsubr
lods
repz
and
dec
loopne
fsubl
mov
dec
fmull
arpl
cmpb
inc
add
sbb
inc
and
add
ret
cmpb
inc
enter
fdivrl
addb
sbb
xchg
add
xchg
imul
mov
rorb
inc
dec
inc
or
pop
push
push
jne
test
dec
push
leave
pop
inc
popa
push
dec
and
adc
daa
fcmovnbe
popf
pop
mov
test
xor
inc
mov
mov
jne
add
aas
test
xchg
addr16
andl
pop
push
adc
and
xchg
or
add
in
loopne
dec
paddq
and
inc
dec
xchg
cmp
jle
or
cmp
jne
mov
imul
mov
test
push
les
xor
inc
daa
inc
inc
in
nop
fadds
xchg
sub
or
roll
adc
inc
lods
rcl
loopne
pop
and
add
push
roll
xchg
sub
add
dec
dec
mov
xlat
xor
xchg
enter
cmove
push
or
in
add
dec
mov
lea
loope
pop
std
jbe
push
sbb
cs
push
add
and
jge
add
xchg
xor
xchg
stos
pushf
and
pop
and
shrb
push
leave
cmpsl
loope
xchg
clc
out
xor
nop
das
cwtl
push
or
sbbw
sub
push
pop
sbb
or
sbb
jecxz
pop
rolb
xor
test
pop
adc
scas
and
in
adc
or
jecxz
cwtl
jl
push
daa
ret
dec
xor
repz
mov
mov
xor
dec
lock
shl
loope
xor
out
fldl
adc
lea
or
dec
imul
shlb
xor
rorb
or
cmp
sbb
lock
gs
and
and
adc
sub
adc
std
fcoms
xchg
xchg
ret
xor
add
and
jecxz
rol
push
pop
jnp
adc
sub
and
mov
js
fcomip
sub
ficoml
mov
cs
xor
loopne
jmp
popa
enter
bound
dec
xor
jmp
sub
jne
and
int
daa
xor
fs
cltd
ret
xchg
and
pop
sub
mov
adc
repz
sub
lock
push
sub
stos
or
lds
sti
push
xor
insl
adc
adc
dec
cmp
xor
popa
lcall
sbb
lock
pop
pop
jb
cmp
pop
into
and
xor
roll
and
add
jg
inc
sub
sbb
daa
adc
mov
bound
inc
push
adc
cmp
or
mov
push
pushf
les
jb
ljmp
aaa
lods
push
push
stos
push
inc
hlt
sub
dec
mov
and
clc
mov
jmp
gs
cmc
or
adc
xchg
pop
adc
loope
insb
sar
push
std
popf
xor
scas
push
shll
inc
or
orl
push
enter
sbb
cmpb
fwait
dec
dec
sbbl
adc
clc
addb
push
xor
inc
push
cli
pop
cli
sbb
sbbb
test
fcmovnb
or
xor
mov
mov
fidivrl
jmp
and
inc
dec
or
movsb
xor
add
lds
or
ret
loop
add
xor
push
mov
je
push
int3
and
xchg
out
adc
movsl
and
dec
imul
pop
adc
cmpsl
pop
das
bound
addb
rdtsc
lea
movl
or
add
push
popa
xchg
mov
test
inc
cli
jae
leave
in
jmp
add
popa
orb
pop
dec
jae
mov
jne
lds
add
xchg
push
lret
pop
sub
mov
mov
inc
push
xchg
push
pop
jmp
dec
mov
adc
jo
std
inc
push
xchg
push
or
mov
aam
out
inc
enter
arpl
fisubl
cld
dec
data16
and
push
subb
jne
cmp
popa
mov
test
test
push
and
dec
add
dec
mov
iret
lret
push
push
sub
arpl
push
cwtl
adcl
push
push
bound
pop
sbb
jmp
and
inc
push
enter
or
movsb
testl
mov
pusha
pop
inc
and
test
mov
mov
iret
push
inc
notb
mov
jl
pusha
call
jge
push
fsubrs
sbb
test
mov
rol
lret
imul
add
cmp
pusha
mov
pop
or
aam
add
in
mov
es
enter
sub
jecxz
les
mov
test
mov
dec
pop
enter
and
or
cmp
sbb
add
inc
lahf
inc
fmuls
out
movsb
ret
xor
imul
mov
dec
dec
jle
or
rcrb
add
pop
and
or
xor
in
cwtl
xchg
dec
test
push
insl
mov
fcmovbe
or
xor
lret
daa
jl
bound
aam
adc
xor
fstps
incl
and
pop
sbbb
add
push
jl
mov
xchg
popa
loopne
jmp
ss
jmp
or
fs
pop
pop
insb
rolb
add
cmp
pop
ret
add
test
sahf
mov
adc
nop
push
test
lock
pusha
stos
pop
je
cld
sub
jne
mov
je
adc
or
clc
xchg
in
inc
push
push
movzwl
mov
mov
bound
inc
inc
xchg
jb
in
or
in
nop
movsb
push
dec
xlat
js
icebp
dec
clc
push
clc
out
mov
repnz
movsb
call
add
jbe
pop
add
arpl
js
pop
jae
icebp
je,pn
push
pop
shl
dec
orb
mov
push
adc
stos
jo
push
jl
imul
pop
ja
fstpt
mov
dec
cmp
iret
rcr
repnz
sbb
pop
ret
push
outsl
mov
test
in
cmp
aas
xchg
das
xchg
cmp
fwait
sub
cmp
and
nop
xchg
dec
movsl
loope
inc
ret
sub
push
stos
les
test
add
mov
dec
mov
dec
repnz
inc
test
jb
out
or
xchg
mov
lahf
cmp
dec
andl
fdivrs
imul
push
sbb
lahf
stc
outsl
and
mov
scas
jl
or
xor
adc
dec
fcoms
inc
dec
flds
decl
sbb
lret
pop
subl
xchg
push
push
inc
or
scas
jno
aam
add
and
add
mov
fsts
je
es
adc
dec
test
inc
dec
call
sbb
lret
dec
lods
push
mov
add
imul
test
enter
pop
in
leave
lea
in
inc
dec
add
add
pusha
xchg
mov
mov
lret
or
adc
and
xchg
orl
in
or
movsb
mov
and
fstl
or
and
repnz
rcrl
cmp
sub
pop
mov
sub
mov
add
mov
add
aad
imul
cmp
and
loopne
and
jecxz
push
dec
cli
or
cmp
pop
jnp
roll
xor
cmp
test
dec
popf
repz
push
and
rcrb
or
cmpsb
adc
sub
or
and
add
or
jbe
add
inc
cmp
aam
mov
loope
int3
and
sbb
inc
mov
sub
mov
pop
das
stc
cmp
pop
je
xchg
pop
dec
call
rorl
pop
movsb
push
add
js
adc
aas
dec
or
addr16
xchg
pusha
push
push
or
jmp
jae
call
lcall
push
xor
dec
cmpsb
cmp
xchg
push
and
sub
sbb
xchg
imul
adc
dec
pop
cmp
ret
mov
push
pop
addl
enter
adc
repnz
inc
inc
jp
or
inc
ljmp
shr
xor
scas
cmp
push
aad
xor
test
add
push
and
adc
xor
pop
adc
mov
pop
lret
lea
cmp
imul
inc
js
cmp
xchg
push
out
xchg
in
push
out
push
daa
subl
and
add
call
xchg
test
jae
mov
test
sbb
xor
movsl
or
jno
inc
js
ss
mov
rcr
dec
call
popf
inc
add
insl
mul
loopne
xor
pop
mov
jge
loopne
cs
xor
loopne
popf
es
or
cld
xor
sub
imul
je
repnz
inc
fsts
jl
push
adc
mov
mov
cmp
pop
gs
push
push
xor
mov
mov
inc
and
hlt
mov
sub
mov
es
jmp
adc
lahf
fsubs
rcr
sti
sbb
movsb
dec
push
add
movsb
loope
pop
inc
push
fld1
pop
xchg
adc
rcrb
and
xor
fisubrl
push
lahf
xor
and
iret
xor
lret
nop
sub
nop
out
hlt
mov
or
ss
les
test
lods
fimuls
sbb
sti
adc
out
cmp
fcmovnbe
cs
clc
xor
cmp
push
adc
fcoml
dec
mov
inc
iret
mov
mov
inc
cmpl
push
arpl
add
cmp
jno
stc
mov
xor
pusha
xchg
dec
scas
cmpb
aaa
jnp
fstpl
fildl
sarl
int3
cmpsb
xchg
rorb
jns
in
jbe
adc
insb
mov
mov
add
fnstcw
nop
add
fcomps
mov
inc
andl
cmpsl
loop
or
test
dec
cmp
js
or
jge
mov
jecxz
sbb
or
cmpb
and
js
adc
lea
les
dec
frstor
inc
mov
fs
jae
mov
push
and
cmp
movsb
inc
stos
cmp
push
xchg
mov
mov
and
inc
inc
or
icebp
std
stos
push
pop
and
in
orl
push
inc
pop
or
and
les
inc
jb
jle
ja
aad
xor
stos
popa
adc
mov
test
testl
je
rorb
pop
mov
push
push
aam
sarb
jmp
xlat
jbe
or
mov
aam
cmp
stc
or
xor
and
rclb
or
inc
and
xchg
push
outsl
add
adc
nop
sbb
pop
jo
xor
incb
xchg
add
test
dec
les
imul
and
push
cs
in
cmp
sub
leave
fcomps
leave
mov
or
and
popa
pcmpgtd
or
mov
pop
pop
or
dec
gs
out
pusha
pop
ret
fsubrl
pop
mov
fadds
xchg
fadds
sbb
sub
dec
aam
movsb
test
lahf
in
add
aad
cld
pop
pusha
push
mov
adc
aas
clc
mov
iret
sbb
cmp
aas
jb
daa
and
push
inc
push
addr16
push
inc
inc
dec
pop
sub
dec
adc
lock
adc
test
adc
push
pop
test
or
or
xchg
popa
and
or
add
push
jo
or
xchg
cmp
outsl
lret
cmp
je
add
imul
push
mov
test
lock
cmp
add
mov
into
popf
mov
jae
arpl
and
lock
inc
nop
jmp
sbb
movsl
mov
icebp
lret
push
mov
mov
faddl
std
out
push
nop
add
adc
not
push
in
dec
push
rol
mov
out
push
adc
enter
pusha
test
lds
lds
mov
mov
xor
sbb
clc
inc
adc
nop
ds
cmpl
lea
xlat
or
outsl
dec
cmpsl
jmp
mov
or
xor
popa
jmp
mov
inc
loop
xor
inc
pop
mov
cmpsb
sub
push
add
mov
ss
adc
mov
adc
add
inc
je
js
cmp
push
mov
inc
dec
xor
mov
add
ss
dec
jecxz
jecxz
jno
mov
pop
fisttpl
das
sbb
mov
jl
add
cmp
pushf
into
aad
lea
mov
cmpsl
movsl
ret
sub
cwtl
enter
dec
mov
ds
adc
xor
push
int3
inc
jns
sbb
add
or
push
loope
add
adc
add
daa
enter
shl
dec
orl
xchg
xchg
cmp
data16
cmpsb
xor
and
or
jbe
cs
mov
jle
sub
xor
push
dec
js
push
push
xor
or
dec
pop
js
arpl
push
aas
adc
bnd
xor
xchg
mov
dec
dec
sub
push
imul
push
jns
aam
call
pop
mov
mov
pop
jecxz
push
or
out
icebp
mov
mov
int
cltd
notb
cmp
cmp
add
sbb
jo
rolb
xchg
mov
pusha
sbb
and
jmp
pop
sbb
add
xlat
inc
sbb
jns
jb
and
negl
and
je
test
cmpsl
sub
testb
mov
sbb
gs
and
sub
decb
add
outsl
adc
dec
and
adc
enter
dec
movsb
pop
push
sbb
lods
and
vcvttsd2si
and
andb
ret
int
incl
jle
mulb
or
push
or
cmpl
sbb
xchg
or
xor
addb
sbb
pop
jg
cmp
daa
sbb
xchg
dec
aam
dec
xor
inc
mov
mov
testl
dec
push
mov
sub
xchg
rcrb
mov
mov
or
add
adc
add
aaa
lock
pop
or
jecxz
sbb
dec
hlt
mov
not
loop
mov
sbb
arpl
xchg
cmp
mov
adc
daa
mov
cmp
sbb
xor
pop
shlb
xchg
roll
fwait
sbbb
sbb
or
out
add
mov
rorb
mov
fsts
or
xor
push
push
mov
repz
and
into
shlb
cmpsb
sahf
rolb
nop
ss
add
fsubrp
push
adc
in
dec
push
adc
popa
sbb
cltd
add
mov
cwtl
loop
call
dec
or
dec
rcll
sub
or
jns
repnz
push
push
adc
lock
dec
icebp
push
mov
push
inc
add
jo
dec
or
inc
mov
xor
adc
pushf
push
push
sub
rcll
fadds
dec
loopne
and
xor
xchg
ret
or
dec
fucomip
vpsubusb
sbb
test
mov
pop
push
pop
fs
or
sub
cmp
inc
mov
xorb
dec
daa
int3
lock
lods
adc
or
js
mov
lret
lds
xchg
movsl
sub
push
inc
mulb
popa
adc
adc
inc
add
inc
sub
cs
push
inc
je,pn
xor
loope
lods
fsts
jne
mov
pusha
add
xor
pop
push
xchg
cmp
push
dec
inc
add
add
pop
das
or
push
push
stos
adc
daa
loop
mov
addr16
inc
cld
popa
pop
dec
add
dec
jne
jno
loop
push
les
movsb
jno
bound
adc
mov
lret
rolb
xorl
mov
fdivr
pusha
add
adc
pop
pusha
or
roll
add
lods
cmpb
das
and
ret
add
xchg
pop
lcall
inc
pusha
enter
pop
push
mov
sbb
pop
pop
sub
jno
stc
jo
sbb
fstl
je
push
xor
jle
fists
test
push
pusha
in
push
pop
mov
or
nop
and
and
push
scas
les
in
inc
add
sarb
mov
sbb
and
sbb
and
or
inc
and
sbb
or
push
shlb
icebp
cmc
es
dec
lahf
sbb
iret
fs
xor
cmpsl
fwait
popa
xchg
adcl
mov
pop
shll
add
mov
stos
arpl
pop
push
nop
add
add
mov
inc
les
aaa
stc
loope
lods
fimuls
sbb
push
and
add
aad
sub
xor
out
hlt
or
mov
and
and
adc
dec
add
cmc
push
or
and
pop
push
inc
push
sub
dec
push
adc
jae
rcll
js
add
adc
push
mov
push
push
and
fsub
dec
push
jmp
pop
mov
nop
or
pop
mov
or
push
add
cltd
xchg
ja
data16
rclb
xchg
in
cmp
jb
inc
sub
shl
mov
das
dec
mov
xchg
pop
push
and
inc
sbb
aam
lock
push
shll
mov
push
aas
mov
cmp
popf
and
adc
pop
pop
daa
outsl
loopne
jnp
shll
mov
adc
xchg
adc
or
shl
loop
test
jne
out
inc
mov
fmuls
add
sub
or
jmp
push
shlb
sbb
cmp
jp
fcoml
xor
testb
push
pop
sub
loopne
sbb
enter
scas
popf
mov
sbb
push
sub
cmovs
cmp
mov
sub
insb
or
or
ret
cwtl
xor
fwait
bound
pop
icebp
xor
push
xor
inc
sub
sbb
mov
cmp
or
cmp
or
jmp
sub
cmp
add
pop
dec
add
ja
xchg
daa
sbb
add
dec
aad
cli
into
es
and
lock
sbb
daa
jnp
push
sbb
adc
adc
xorb
es
push
sbb
test
test
or
add
sub
xor
xchg
and
lcall
sub
dec
fadd
inc
cmpsb
jmp
jmp
int3
and
cmpsb
sub
nop
lcall
adc
in
xor
cltd
mov
popa
inc
aas
sub
sub
or
andl
cmpb
pop
outsl
divl
inc
movsb
jb
pop
mov
xchg
jo
ffree
pop
xlat
or
pop
mov
loopne
ss
push
sbb
inc
cmp
aas
mov
dec
imul
jl
addb
push
sbbb
and
test
mov
imul
loopne
pop
lods
mov
sarb
inc
or
insl
je
adc
movsb
sbb
loope
jno
mov
dec
jecxz
adc
test
inc
push
mov
icebp
insb
int
mov
fadds
into
xor
add
sbb
shlb
clc
cmc
movsb
pop
mov
cwtl
pop
jge
pop
fwait
ret
aas
push
imul
and
add
pop
inc
and
in
or
xor
sbb
cmp
push
push
daa
sub
add
outsl
stc
sub
push
inc
push
xlat
inc
rclb
push
cmp
pop
popa
andb
or
adc
je
or
ss
cmp
add
inc
jp
shlb
sbb
mov
add
mov
lret
xchg
adc
inc
mov
adc
mov
pop
aam
and
pop
jp
and
or
loop
jg
arpl
test
sbb
add
jle
pop
fimull
dec
and
pop
inc
push
add
add
fwait
pop
fs
cmpl
jae
jp
cs
cmp
push
mov
outsb
inc
inc
add
mov
inc
clc
clc
enter
aam
pop
jmp
and
mov
sub
jns
jmp
adc
das
sub
or
add
push
push
and
sub
fidivrl
xchg
cmp
sarl
adc
inc
add
bound
ss
or
cmp
es
mov
pusha
push
mov
loope
dec
adcl
add
xchg
sub
call
dec
call
test
lds
popa
lret
or
test
movsb
inc
fcom
shlb
jno
inc
andb
or
lcall
mov
push
mov
cltd
dec
inc
lods
push
pop
sbb
mov
out
aas
inc
sub
insb
inc
pop
and
xor
dec
sub
cmpsl
movsb
je
mov
into
mov
xor
fadd
mov
add
add
into
pop
sub
or
stos
mov
shll
cs
pop
pop
add
add
and
adc
adc
and
sbb
jecxz
mov
je
dec
std
jecxz
lea
jmp
nop
push
sub
sbbl
and
in
sbb
cmp
scas
lods
sbb
imul
adc
push
out
popa
insb
push
mov
dec
gs
js
punpcklbw
xor
pusha
push
mov
adc
fimuls
les
hlt
jae
rcrb
sarb
mov
mov
movb
mov
jl
outsl
fstps
cs
clc
adc
pop
popa
popa
inc
addr16
or
insb
in
je
imul
push
jmp
add
ret
les
fmull
pop
jl
push
pop
ret
mov
jmp
jbe
imul
sbb
push
xor
add
fsubl
push
push
xchg
in
mov
out
insl
pop
imul
loope
cwtl
add
add
push
test
xor
negl
dec
push
push
push
dec
sbb
and
cmp
mov
mov
cmp
outsl
dec
mov
mov
add
popa
cmp
pop
data16
cmp
sub
arpl
lock
aam
lret
addr16
mov
pushf
test
hlt
xchg
adc
sar
dec
mov
dec
enter
add
aas
inc
or
js
sub
cmp
or
or
pop
mov
cmp
sbb
dec
dec
pop
sbb
push
decl
jns
fcoml
push
mov
xorl
fisttpll
or
or
and
scas
jl
inc
insb
inc
addl
sub
andl
mov
dec
jmp
lds
jle
fcoms
mov
test
push
je
add
xor
dec
aam
adc
sub
pop
cwtl
rcl
shrl
icebp
dec
pusha
pop
jb
fnstcw
cmc
mov
jmp
mov
inc
xchg
sub
es
add
add
inc
push
push
push
dec
leave
aaa
add
xchg
and
imul
leave
xchg
and
pop
xchg
inc
ja
dec
pop
xchg
xor
sub
and
fmuls
insb
nop
or
sub
in
fldt
hlt
jecxz
fs
clc
jle
and
mov
in
and
mov
imul
sub
test
mov
insl
or
or
insl
or
inc
push
nop
inc
cmp
push
or
enter
insb
jo
roll
enter
cmpsb
dec
insb
loop
outsb
aaa
dec
test
xchg
shrb
pop
xchg
aaa
cmp
inc
aas
lods
loop
push
loopne
or
inc
insl
jl
inc
xchg
aaa
nop
dec
in
cmpl
andl
mov
add
jb
rolb
or
aas
jne
mov
or
xchg
rolb
enter
adc
add
cli
inc
jmp
pop
add
push
lcall
scas
xor
enter
test
add
add
cmp
mov
ss
roll
xlat
dec
and
xor
xchg
loop
lea
lret
aas
and
fisubs
imul
mov
jo
call
insl
pop
or
call
push
pop
dec
pusha
xchg
and
lods
push
sub
sbb
jbe
ss
popl
out
insl
push
out
pop
in
add
and
fadds
je
sub
mov
shll
mov
add
fwait
and
cmp
rolb
pop
mov
rclb
fistl
icebp
sub
adc
and
jb
rolb
icebp
aas
mov
outsl
add
push
and
pop
test
test
push
pop
and
cmp
popa
les
cmovl
sbb
js
popa
jmp
cmp
and
push
pop
pop
aaa
push
repz
out
in
andl
and
xchg
xchg
jne
movsb
adc
jae
pop
xchg
in
jl
jmp
popf
mov
push
mov
adc
xor
and
add
icebp
or
or
xchg
loopne
and
xchg
jge
sub
inc
mov
push
or
or
pop
jne
adc
movsb
cmp
pop
pop
shlb
js
data16
xchg
push
cmpsb
sub
mov
pop
sub
movsb
pop
or
cmp
sarl
fcomps
fdiv
add
ret
mov
call
adc
test
cmpsl
into
xchg
insl
and
and
xchg
clc
test
and
test
sbb
daa
ret
movsb
sbb
or
mov
inc
mov
inc
imul
arpl
lds
xor
mov
jns
hlt
cmp
xorl
lock
rep
movsb
dec
or
pop
xor
ljmp
cmp
dec
sub
and
sub
decl
push
and
pushl
inc
pop
push
and
dec
sahf
cmc
mov
call
mov
cld
push
movsl
xor
or
dec
sti
aaa
adc
fs
rcrb
out
pop
scas
cmp
push
lea
jmp
scas
fcoms
sahf
dec
repnz
cmp
dec
push
pop
mov
aaa
ret
mov
popa
iret
fs
pop
sub
xor
push
pusha
mov
fs
mov
cmp
and
jle
dec
cmp
loopne
sbb
jmp
adc
add
popa
in
cmp
push
je
movsb
inc
js
pop
add
mov
outsl
mov
mov
add
cmp
push
nop
rclb
or
xor
lods
and
popl
or
add
iret
mov
sub
insb
aad
jo
mov
xor
hlt
mov
add
push
pop
iret
add
fisttpl
jae
pop
daa
jae
mov
ds
or
into
loopne
sbb
push
mov
xor
inc
fcompl
pop
inc
fadd
xor
pop
test
xor
sub
adc
je
dec
adc
sub
xor
cld
push
xchg
push
ljmp
ja
sub
pop
adc
push
sbb
subl
xor
test
mov
push
mov
jecxz
ds
mov
decb
mov
ss
xchg
pop
pop
cmp
xor
add
xlat
push
pop
jg
dec
incl
sbb
push
push
in
mov
and
les
dec
add
dec
psubw
inc
inc
mov
add
dec
out
mov
test
adc
and
movsl
xchg
aam
lcall
xchg
movsb
cwtl
sti
stos
xchg
lods
aaa
popa
or
bound
adc
ret
fwait
ret
pop
mov
or
push
mov
mov
shld
pop
jbe
rorb
in
xor
pop
mov
add
xor
scas
jl
sbb
icebp
icebp
shrl
jle
push
test
cli
push
mov
int3
test
fwait
cmp
add
xor
jno
test
cltd
or
outsb
or
pop
xchg
jbe
or
adc
xcrypt-ctr
cmpsl
push
cltd
adc
xor
push
add
ljmp
int3
xchg
notb
push
sbb
add
push
dec
ja
sub
std
sub
xor
xor
mov
xchg
xor
adc
jne
lock
pop
mov
mov
mov
push
or
push
jo
cwtl
test
insb
je
loop
ret
aad
in
mov
testl
sub
fisttpl
sub
nop
cmp
jg
test
push
ret
mov
jb
jmp
sub
je
insb
jg
dec
sub
jl
inc
mov
jl
pop
ret
dec
xor
add
add
sbb
pop
cwtl
jge
insb
or
mov
add
aam
pminsw
inc
orl
rolb
int3
in
or
fstl
jmp
mov
pusha
adc
imul
and
mov
or
lea
loop
and
lret
cld
aam
movsl
push
xchg
sbb
cwtl
jbe
add
es
or
xor
jne
rorl
push
movsl
pop
rorl
sub
pop
and
jae
and
adc
sub
and
test
add
push
sub
mov
or
shlb
inc
sti
pop
test
sbb
sub
cmp
xor
fsubs
inc
test
popf
xlat
or
mov
incl
or
jae
mov
popa
fistps
push
mov
pushf
dec
pop
adc
mov
test
cltd
inc
lahf
in
inc
incb
mov
mov
shrb
lods
shll
or
or
push
xor
and
and
ss
addr16
jbe
pop
or
or
fstpl
fstps
or
clc
insb
jo
daa
imul
jp
mov
push
inc
xchg
push
cmpl
fs
add
cwtl
loop
in
xor
pop
pop
insl
loopne
lods
outsl
lahf
jmp
push
pushf
testl
ret
cmp
inc
adc
loopne
xorb
rcr
add
call
mov
mov
cmp
add
lock
add
flds
push
jno
add
push
cmpsb
into
sbb
roll
push
xchg
pusha
in
pop
mov
lds
or
dec
push
sub
xchg
scas
jecxz
movsb
cmpsl
test
mov
jns,pt
mov
inc
push
pandn
sub
cld
sbb
mov
push
cmp
push
sbb
xchg
push
call
mov
cs
ret
out
adc
scas
add
or
push
pop
scas
dec
and
adc
and
push
leave
cmp
lock
scas
lahf
xchg
add
lea
in
push
scas
fs
lcallw
mov
fwait
push
ds
and
insb
iret
xchg
adc
rclb
mov
cmp
mov
add
or
lods
in
daa
call
xchg
lock
mov
jmp
cltd
adcb
pop
cwtl
dec
mov
jmp
das
out
sbb
dec
les
sbb
push
cmpsl
loopne
mulb
je
ja
jns
mov
mov
push
add
add
incb
pop
or
stc
movsb
addb
test
jnp
xchg
popa
mov
pop
cmpsl
mov
scas
and
add
ss
ja
push
ret
xchg
jnp
or
sub
jnp
and
int
or
jnp
ss
nop
jmp
movsb
adc
leave
bound
mov
es
sbb
pop
outsl
inc
testb
lea
inc
iret
movsb
pop
xor
sub
xor
orl
subb
sbbb
icebp
rcl
out
fmull
sbb
jmp
mov
jnp
cltd
andl
sub
pop
fdivl
cld
pop
aam
cli
xchg
or
test
shll
mov
std
lea
movsl
incl
mov
or
adc
ss
adc
aas
insb
aam
fildl
jae
xchg
dec
pop
movsb
push
imul
cmc
sbb
mov
dec
inc
mov
pop
add
sbbl
inc
dec
sub
push
and
jmp
jmp
outsl
mov
push
mov
or
pushf
adc
mov
or
xor
inc
or
push
cmp
jecxz
repnz
loopne
xor
out
inc
inc
push
call
dec
push
add
daa
sub
push
inc
lea
mov
js
pop
jl
cmc
addb
push
jbe
xor
add
push
lret
repnz
add
call
jecxz
test
ja
rcrb
ret
das
jge
and
lds
add
add
jno
jae
add
pop
adc
mov
mov
adc
mov
sbb
stos
pop
cmp
sub
push
sbb
dec
in
adc
repz
xchg
push
int
mov
mov
fs
xor
popa
or
push
inc
lods
sub
sbb
add
xor
push
xchg
xor
xor
mov
cmc
rcrl
and
mov
std
ret
mov
je
rep
jns
and
jne
push
cli
and
mov
repz
cmp
push
adcl
xor
and
xor
jb
call
xchg
rorl
jl
fadds
or
incl
push
jno
sbb
ss
cmp
pop
push
adc
mov
inc
adc
mov
or
jnp
mov
ret
adc
push
xchg
push
pop
cltd
xchg
mov
mov
jg
imull
sahf
mov
push
lock
sarb
and
jl
addl
lds
jns
cmp
inc
and
add
movsb
push
jmp
sbb
mov
jmp
mov
mov
sbb
jmp
add
adc
nop
bound
push
cmp
xchg
push
cli
rolb
shrb
add
insl
or
rolb
jg
mov
int
adc
xor
jo
and
and
dec
and
adc
shr
jl
xor
lret
push
xchg
fs
ljmp
push
cmp
or
sbb
or
jmp
inc
movl
nop
sbb
in
xchg
add
mov
add
jne
rcl
jno
aas
int
sbb
movsb
mov
mov
mov
dec
in
imul
aad
jecxz
stc
push
or
lahf
fnstenv
les
inc
in
or
mov
dec
and
push
addl
ss
loopne
push
adcl
and
repz
or
xor
movsb
ret
push
out
mov
imul
cltd
xchg
incb
neg
es
xchg
pop
mov
sbb
inc
xchg
or
jae
adc
jne
aam
jae
adc
add
pop
rorb
or
testb
clc
inc
popa
inc
inc
daa
mov
xchg
clc
lret
fbld
xor
loopne
sbb
add
shll
xlat
push
add
inc
lret
and
pop
pop
push
xchg
xor
aas
outsl
es
outsb
dec
inc
mov
jb
fs
add
cmc
pop
js
adc
jno
push
stos
add
adc
test
cmc
stc
cmp
popf
cmpsb
into
pop
fnstsw
adc
jmp
roll
mov
mov
push
push
jb
add
inc
daa
inc
or
xchg
inc
jg
lcall
sub
jl
or
mov
popf
sahf
fs
add
push
inc
fisubrl
cmp
lret
lds
cmp
sbb
adc
and
adc
pop
inc
xor
push
add
and
push
lods
inc
fdivl
je
aas
in
and
pop
mov
mov
push
mov
test
mov
jle
cmpsb
adc
mov
sub
sahf
cmp
mov
add
pop
adc
cli
loope
mov
or
dec
adc
add
inc
adc
and
mov
dec
cltd
repnz
cmpsb
add
xchg
push
call
jne
imul
xchg
imul
mov
pushl
imul
add
jne
xchg
fs
add
or
nop
add
pop
add
movsb
sbb
movsb
pop
or
or
or
repz
adc
in
add
clc
and
xchg
in
add
lods
cmp
add
jg
jo
in
xor
jle
adc
add
sub
dec
xorb
mov
iret
bound
fnstcw
add
or
jb
test
addr16
clc
add
repnz
inc
mov
inc
popa
pop
movsl
sbb
movsb
mov
push
jge
cwtl
sub
sbb
cld
loope
mov
mov
movb
jbe
add
inc
add
xor
xor
mov
pop
push
pop
icebp
and
fildl
or
cmpb
ljmp
test
les
jg
add
sbb
outsl
pop
add
and
int3
lods
pusha
pusha
popa
lret
and
loopne
out
sub
mov
inc
jno
std
dec
or
ds
and
jp
fcompl
fbstp
loope
test
and
scas
pop
or
push
out
outsl
jg
inc
push
insb
scas
pop
nop
scas
loope
cmc
movsb
mov
rorl
mov
sarb
insl
jo
popa
sahf
pop
mov
cmpsl
enter
cwtl
in
fs
xor
xchg
xchg
das
xchg
sub
push
test
sbb
fistpll
and
test
adc
pop
rcrb
jl
and
sbb
mov
fistps
mov
inc
sahf
push
push
push
push
push
mov
adc
sbb
xor
ss
or
shrb
test
jg
in
pop
cwtl
dec
pop
dec
add
pop
add
inc
sub
mov
ss
adc
inc
mov
sub
inc
mov
outsb
jmp
fists
sub
pusha
jnp
adcb
pop
das
adc
cmp
xor
test
jl
add
shlb
inc
xchg
lret
cmp
adc
or
dec
push
daa
mov
dec
cmp
mov
pop
push
or
add
mov
add
jg
imulb
push
mov
and
sti
or
mov
fisttps
push
ret
leave
lret
and
stos
adc
push
mov
test
or
imul
cmpsl
add
xor
and
insl
cmp
lea
sub
jmp
mov
lea
inc
jp
aam
fdivs
add
gs
repz
iret
add
daa
pop
fsubr
push
decl
or
jle
sbb
and
pushf
push
pusha
aad
xlat
push
inc
dec
inc
add
sub
dec
adc
or
pop
jp
repnz
and
add
and
sub
push
mov
lea
sbbb
fstp
imul
mov
inc
mov
mov
loop
pop
fisttpl
sbb
fcom
lds
fs
insl
test
inc
rolb
push
lods
ja
xchg
cmpsb
outsl
lock
xchg
xchg
ret
sub
or
loopne
les
mov
adc
and
outsb
inc
fmuls
or
push
shufps
inc
fisubrs
or
movsl
mov
xor
mov
in
adc
adc
add
xorl
incb
pop
dec
push
sub
lds
cltd
dec
jecxz
jo
xor
mov
or
rcr
imul
nop
mov
sbb
xchg
xchg
lock
test
movsb
xor
mov
inc
xchg
inc
pop
inc
pop
pop
push
inc
xor
cld
roll
cmp
lock
out
iret
addl
test
jg
mov
out
dec
nop
and
inc
or
sub
fbstp
sub
lcall
aaa
loope
or
add
jbe
push
js
push
leave
lret
xchg
repz
push
add
mov
ds
add
sub
or
adc
movsb
push
insb
nop
hlt
xchg
aaa
shlb
pusha
xchg
aaa
adc
push
mov
mov
add
sbb
and
lret
mov
imul
rcl
push
mov
inc
mov
push
sub
out
jb
leave
lcall
adc
add
aam
adc
mov
jmp
adcl
mov
add
jmp
mov
inc
push
fst
pusha
jge
xor
mov
fwait
stc
addb
or
and
popl
pop
into
scas
fdivrs
pop
adc
jne
jmp
lea
or
inc
jo
sbb
sbbb
sub
cwtl
call
push
ret
cltd
insb
cmpb
pop
enter
jnp
into
dec
aam
adc
add
dec
and
push
push
add
adc
mov
dec
pop
mov
sub
push
xor
adc
cmp
lds
xor
inc
jecxz
mov
xorl
xchg
mov
cltd
xor
aam
fs
outsl
cmpl
adc
fsubrs
cmp
fsubs
push
ss
je
loop
or
in
and
movsl
mov
mov
cwtl
push
xor
add
adcl
ficomps
push
aam
mov
enter
adc
pop
and
push
mov
sarb
xlat
dec
mov
mov
jecxz
cmp
jo
sub
inc
xor
mov
push
jo
sub
xor
insb
inc
aad
and
and
or
idivl
sbb
pop
mull
push
jmp
orl
je
sbb
push
adc
xor
arpl
arpl
jmp
cmp
pop
cmpsl
and
and
cwtl
ficoml
js
mov
inc
xor
jbe
lods
jge
movl
xor
fisubs
xor
jb
pop
insb
xor
aaa
dec
xor
test
data16
popf
sub
repnz
bound
push
jmp
fwait
shll
mov
or
pop
aam
pop
sar
add
xorb
push
xchg
dec
mov
mulb
mov
pop
or
adc
pusha
inc
add
pop
nop
femms
jge
testl
pop
mov
pop
xor
insb
mov
or
in
dec
push
fsubl
xchg
or
pusha
mul
pushf
pop
push
adc
push
lods
mov
push
xchg
inc
mov
or
sub
ret
mov
ret
stos
dec
inc
mov
inc
and
pop
test
lahf
pop
dec
fcomps
cmp
rclb
cmp
mov
arpl
addr16
dec
pop
and
xor
add
int3
cmc
xchg
push
loopne
lods
clc
add
xchg
test
xor
arpl
fwait
dec
and
inc
sub
mov
and
push
push
push
test
enter
insl
jmp
rcrb
sub
and
pop
add
jne
add
call
fwait
or
xchg
adc
adc
shlb
mov
rclb
hlt
or
pop
ljmp
inc
mov
inc
and
xchg
sbb
in
test
loope
or
add
test
dec
sub
push
stos
into
adc
jbe
sub
dec
stos
add
movsb
in
popf
dec
insl
cmp
mov
les
push
push
inc
mov
lahf
dec
inc
ljmp
dec
xor
or
lea
sub
sbbb
movsl
aam
or
push
adc
rcrl
movsl
lret
add
push
mov
sbb
mov
dec
repnz
pop
push
popa
sbb
inc
scas
shrl
jg
pop
popw
cmpl
mov
add
aaa
mov
or
mov
dec
iret
ret
call
adc
cltd
mov
in
add
icebp
dec
jne
sbb
lahf
in
enter
xchg
fiadds
adc
push
jmp
cmp
push
test
popf
and
adc
mov
popa
or
movsl
imul
gs
xchg
adc
or
inc
add
sbb
add
push
repnz
or
cmpsl
jmp
and
push
cmp
mov
imul
add
out
fwait
sbb
dec
lock
sbb
frstor
or
add
fwait
inc
adc
addb
inc
adc
pop
sub
xor
test
sub
inc
sub
sbb
sbb
adc
inc
test
shld
pusha
add
sub
adc
nop
out
std
add
fiaddl
pop
push
xchg
xor
je
lcall
loope
push
cltd
xorl
in
and
cmp
add
xor
andb
fidivrl
lea
or
adc
std
push
dec
add
enter
mov
sbb
push
add
pushf
mov
aam
mov
or
mov
or
loop
adcb
cmc
dec
and
inc
lods
and
lea
fisubl
fbstp
adc
mov
pop
jne
inc
ds
push
xor
mov
cmpl
nop
cmpsb
call
add
fimuls
and
push
xchg
inc
mov
enter
jecxz
outsb
sub
xchg
pop
popa
xchg
xchg
mulb
fnstsw
shlb
sbb
inc
adc
and
cmp
mov
jle
xchg
addb
mov
leave
icebp
in
add
push
xchg
imul
bound
js
sub
add
out
adc
pop
movsb
mov
add
fistpl
stos
push
pop
push
push
movsl
pusha
je
dec
sahf
pop
or
mov
xchg
iret
jp
fistl
pop
rorb
or
xchg
es
mov
rorb
movsl
inc
std
sbb
cmp
adc
pop
outsl
xchg
jb
sub
inc
pop
pop
mov
movsl
cmp
cmpsl
or
and
adc
add
fwait
pop
push
pop
cmp
imul
adc
popa
add
cs
dec
fcmovb
mov
shlb
push
and
aaa
sub
testl
and
dec
rcl
lds
mov
or
outsb
inc
insl
pop
add
out
and
inc
fcomps
cltd
repz
in
or
shl
aam
push
mov
push
cwtl
aam
ljmp
clc
je
mov
lret
jecxz
repz
xchg
sub
imul
add
inc
sub
inc
rcl
int3
or
cmpsb
aad
and
in
add
xor
movb
inc
dec
ja
lods
rcr
mov
adc
mov
xchg
sub
xor
fdivs
andl
loop
and
inc
fiaddl
sbb
pop
mov
loope
xor
je
sbb
pop
adc
loopne
dec
sub
inc
adc
pop
cltd
dec
test
mov
push
xor
jecxz
test
mov
adc
sub
add
mov
arpl
add
adc
clc
sbb
leave
enter
mov
mov
jb
lahf
outsl
daa
insl
sub
jmp
js
adc
pop
arpl
push
pushl
lock
cmp
jne
push
popa
je
popa
add
jmp
movsb
cmp
daa
mov
push
movl
leave
push
outsb
nop
dec
adc
lcall
xchg
sbb
pop
inc
shlb
aam
cmpsb
outsl
or
cld
dec
js
shll
lret
xor
imul
jbe
sbb
outsb
imul
push
rcrl
xchg
and
sub
pop
push
ds
or
les
add
or
xchg
in
je
inc
rorb
ds
aad
mov
xor
pusha
or
mov
or
dec
sbb
dec
int
push
pop
fimull
push
sbb
loopne
inc
or
push
fcmove
or
xor
inc
es
mov
inc
mov
xchg
pop
popa
jmp
cmp
sbbb
xchg
mov
imul
mov
fcomps
sub
or
test
movsb
fnsave
and
or
jbe
jne
es
out
push
pop
xchg
pop
xor
lea
addr16
test
popa
es
ja
les
daa
adc
pop
add
inc
inc
hlt
dec
dec
sub
dec
and
aad
push
push
push
inc
icebp
rcrl
adcl
ss
pop
inc
fisubl
adc
shlb
inc
xor
add
test
mov
push
flds
stos
pusha
jno
sbb
xlat
inc
xchg
je
nop
jae
xchg
jbe
rolb
jne
movsb
pushf
cmpl
mov
movsl
ss
or
pop
adc
mov
xchg
orb
movsl
cmp
inc
jo
or
add
push
pop
popf
push
sub
nop
push
mov
enter
iret
pop
outsb
fdivl
sbb
adc
cmpl
pop
mov
inc
orl
add
inc
ss
ja
cwtl
add
mov
sbb
lahf
addl
jle
sub
popf
das
mov
xchg
jl
stos
cmp
insl
pop
xchg
sbb
push
mov
or
sbb
loopne
jbe
sbb
inc
lcall
and
add
sub
pop
xchg
inc
in
aam
sti
shrl
mov
sti
ret
cmp
pop
adcl
int3
pop
jl
roll
or
xor
divl
inc
jge
dec
adc
push
mov
xor
bound
test
sbb
xor
inc
fstps
idiv
xor
or
jno
ret
dec
cmp
mov
xchg
sbb
fcompl
test
leave
mov
leave
and
jne
dec
sub
or
rcrb
scas
dec
sbbl
stos
pop
or
subb
adc
adc
jge
movsb
incl
cmp
popa
bts
pop
fstl
xchg
test
sarb
nop
insb
push
sbb
xchg
out
mov
lods
pop
adc
mov
inc
add
cmp
outsl
sub
dec
and
je
js
add
sbb
repnz
sbbl
jp
jo
je
or
add
adcb
mov
add
das
push
dec
inc
add
add
aam
sbb
test
rolb
movsl
mov
cli
push
les
mov
fsubs
loopne
xlat
or
push
ja
cmp
adc
sub
sti
jae
add
and
mov
stos
mov
mov
and
adc
bound
aam
and
movsb
sbb
adc
bound
les
jne
add
inc
adc
add
mov
jl
mov
fidivs
inc
mov
jg
push
jmp
dec
mov
movsb
vpsubusw
not
dec
push
push
or
or
sub
lock
push
push
add
or
outsb
add
ret
ret
test
ret
mov
fs
not
les
mov
mov
push
jno
ficoms
xchg
pop
daa
pop
sub
scas
xchg
aad
add
loopne
or
push
in
das
in
andb
add
or
jne
out
xchg
rolb
cmp
movsl
roll
leave
mov
pmulhuw
jle
mov
enter
push
es
pop
in
xor
or
jb
cmpsl
adc
adc
shll
cmp
adc
fsubl
or
movsb
adc
cltd
test
adc
jmp
adc
add
js
data16
jo
jb
jmp
jp
jecxz
xor
jecxz
repz
lods
test
add
xchg
lcall
arpl
je
sbb
adc
inc
jecxz
cmp
mov
mov
adc
inc
cltd
les
test
gs
push
mov
pop
push
pop
push
sbb
rcr
push
dec
or
push
in
orl
movsl
inc
mov
lret
and
mov
mov
sarl
and
out
mov
jne
push
inc
sub
xchg
fisubs
mov
pop
fildl
adc
ljmp
mov
dec
pusha
pop
mov
jne
push
fdivrs
xorb
sub
jge
cwtl
pop
ret
inc
and
ja
leave
push
out
dec
pop
mov
adc
adc
adc
and
pop
push
popa
or
orb
and
cmpb
test
jo
aas
inc
or
push
popa
adc
pop
aam
lret
mov
cmpsl
mov
xchg
in
jmp
outsb
cmpsl
add
push
jne
in
es
jae
fsub
mov
movsb
daa
mov
int3
xchg
cmp
sbb
mov
fists
sbb
sub
aaa
xchg
and
push
adc
testb
inc
in
orb
and
or
push
les
add
xor
pop
imul
jmp
addr16
jb
jge
lock
popa
icebp
inc
sbb
sub
test
adc
pop
sub
add
pop
fxch
jb
mov
hlt
dec
push
inc
pop
lcall
aas
push
sbb
ret
fstl
fistpl
adc
mov
dec
sarl
xorl
pop
push
and
or
pop
add
xchg
push
out
aad
pusha
or
orl
or
test
js
roll
sub
adc
negb
sbbb
dec
sub
push
mov
mov
loopne
mov
and
mov
or
sub
mov
sub
bound
pop
mov
add
inc
iret
mov
mov
pop
jmp
mov
xchg
test
add
and
in
stos
inc
dec
stos
pusha
cld
stc
or
aam
imul
fiaddl
insl
xchg
arpl
add
and
cmp
inc
inc
sbb
add
stos
mov
fmuls
in
push
mov
ret
dec
jmp
xchg
sub
add
mov
mov
fistps
jge
push
mov
adc
or
jbe
mov
gs
and
shrb
push
jbe
jo
je
push
push
frstor
roll
das
mov
xor
rcll
mov
clc
pop
dec
add
push
or
add
cmp
cmpsl
pop
mov
xchg
adc
sbb
xor
and
in
das
xor
insb
xchg
mov
cltd
ret
mov
push
fmuls
mov
js
fisubrl
and
and
gs
jae
outsl
xor
pop
fdiv
inc
push
dec
jle
add
add
mov
repz
pop
loopne
and
cmc
mov
and
jo
adc
fdivrp
jl
add
ret
add
repnz
es
out
mov
fadds
push
es
xor
and
outsl
pop
mov
loope
and
aam
daa
sbb
or
les
and
and
int3
fcom
mov
inc
dec
aad
mov
out
cmp
jno
cmp
das
push
jecxz
mov
lods
insb
and
adc
adc
sbb
mov
lcall
sub
leave
xor
int3
in
pushl
and
insl
jo
pop
in
scas
xchg
xchg
push
cltd
call
and
enter
repnz
cmp
adc
and
sub
inc
rolb
mov
test
inc
mov
add
adc
mov
inc
test
mov
cmp
or
leave
gs
addl
jnp
je
and
or
pcmpgtw
sbb
jno
sub
adcl
xor
bound
aas
cmp
dec
gs
sub
insb
and
mul
adc
iret
imul
outsb
popa
cmpsl
inc
inc
imul
mov
shrb
inc
jle
dec
and
aam
cmpb
or
fwait
adc
rol
sbb
cmp
and
xlat
dec
pusha
xor
fadds
jns
inc
dec
repnz
and
jle
lret
inc
pop
jecxz
cmp
mov
sbb
ret
xchg
mov
cmpsb
mov
ss
push
push
sbb
add
orl
xor
fbld
pop
and
enter
and
iret
cmpl
inc
and
insb
icebp
mull
aam
pop
lahf
inc
loop
dec
lcall
inc
sbb
pop
popa
inc
dec
stos
cmp
inc
imul
sub
push
push
das
xor
insb
xor
adc
xor
and
cmpsl
arpl
imul
mov
mov
rol
es
fs
ss
pusha
daa
orb
into
out
es
inc
dec
ret
adc
dec
repnz
push
popa
sbb
jns
sub
adc
adc
sbb
add
add
adc
mov
sub
orl
lea
adc
out
aaa
jns
aam
add
mov
and
adc
test
hlt
jge
xchg
mov
inc
call
xlat
mov
int3
int3
test
and
int3
cmpsl
ficoms
int3
mov
movsb
or
mov
adc
lods
and
cmpsb
and
push
fcompl
adc
mov
xlat
xchg
and
add
sbb
mov
inc
push
mov
mov
or
rol
pop
jo
jne
loop
ret
nop
movsb
scas
add
in
adcl
arpl
sbb
xchg
filds
add
jne
mov
sbb
sbb
cmp
enter
mov
pop
test
or
xor
and
lods
sbb
cwtl
sub
sbb
mov
jmp
jno
mov
lods
addr16
add
scas
sbb
cmp
pop
cmp
pop
or
insb
jmp
out
adc
bound
cwtl
sbb
pop
arpl
pop
mov
mov
lods
mov
xor
mov
in
adc
cs
cmp
int
roll
push
and
and
mov
inc
add
xor
hlt
imul
pop
mov
push
call
cmp
in
fldenv
jp
jns
jge
push
lock
jl
ss
testl
jge
fs
xor
xchg
int
mov
les
mov
pusha
or
call
in
or
les
pop
sub
test
adc
outsl
mov
shrb
insl
pavgb
ja
out
stc
pop
clc
jbe
mov
xchg
cltd
out
test
push
fdivs
int
mov
rorl
push
push
lds
gs
test
js
fstps
sbb
call
mov
ss
fisubs
mov
rorl
push
dec
imull
cltd
push
fcompl
int
pop
ss
or
pop
cs
adc
adc
int
pop
mov
push
jl
and
xchg
mov
xchg
dec
enter
test
push
xor
push
cld
xor
add
lods
imul
rcrb
xchg
push
sub
stc
lret
pop
sub
test
push
shll
pushf
xchg
fs
cmpsb
pop
ss
sub
hlt
fucomi
mov
add
daa
aam
push
or
cs
inc
insb
xchg
int
push
movsb
jo
pop
mov
js
xchg
out
hlt
ja
pop
loopne
mov
pop
fsubrl
lods
roll
inc
fdivp
mov
pusha
ds
mov
mov
jl
flds
sbb
in
mov
push
xchg
pop
ss
imul
xchg
sub
sub
cmpsb
xchg
fs
pushf
jo
mov
jl
es
mov
push
mov
lods
pop
nop
and
shlb
rcrb
push
mov
cmp
in
and
mov
ss
sahf
pushf
rcll
nop
int3
jg
int3
fldt
movsl
es
and
pushf
sbb
outsb
out
and
scas
mov
cmp
inc
inc
js
aam
icebp
pop
xchg
and
cwtl
mov
fwait
in
clc
mov
scas
insb
or
paddusb
push
movsb
pop
inc
clc
adc
pop
mov
je
inc
dec
push
sbb
enter
divb
pop
jl
add
aam
push
mov
pop
rcrl
push
fdivrs
loopne
ds
mov
flds
in
mov
xor
cld
lods
xor
cs
mov
test
or
lahf
rol
es
les
fwait
cmpsb
cltd
xorb
mov
lcall
sub
fstps
insb
int3
mov
mov
push
cmpb
add
lods
mov
ss
imul
and
nop
pusha
sbb
insl
iret
cmp
call
loopne
mov
sub
push
insb
fnsave
jo
inc
push
lock
dec
pop
ss
jbe
push
lods
dec
jl
dec
inc
insb
xchg
int
rclb
push
and
fstps
sub
inc
mov
inc
xlat
adc
test
cltd
movsb
cmp
push
jmp
test
dec
mov
sub
cld
js
push
js
push
xor
add
rorb
daa
cli
fcomp
sbb
mov
jl
pop
sub
and
jnp
mov
test
mov
loop
mov
jmp
stc
or
jbe
nop
dec
and
les
stos
push
or
pusha
or
cwtl
mov
sub
cmp
shll
addr16
mov
in
cmp
cltd
sub
sbb
mov
lods
mov
mov
inc
fsubrl
or
scas
testb
mov
dec
sub
and
hlt
sarb
aad
enter
push
mov
cli
add
test
inc
adc
jbe
loope
add
mov
fiaddl
inc
sub
or
inc
push
or
mov
js
adc
shl
repnz
addr16
pop
jg
js
je
movl
xchg
movsb
movsl
in
push
cmp
insl
or
jne
mov
imul
adc
pop
wbinvd
pop
adc
das
mov
adc
pop
test
cltd
andl
sub
nop
adc
arpl
js
add
mov
subl
inc
mov
dec
cmp
or
and
das
jmp
lcall
jb
dec
popa
jne
pusha
pop
mov
das
arpl
mov
jo
and
and
and
add
dec
jne
jnp
movsb
andl
pop
in
lmsw
adc
push
pop
jbe
add
xchg
out
rclb
daa
test
add
lret
int3
enter
dec
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
pop
mov
mov
jg
daa
and
and
and
popa
je
xor
mov
ds
push
mov
aaa
ljmp
and
pop
ss
inc
imul
adc
shlb
das
aad
xor
lret
pop
push
orb
xlat
inc
dec
outsl
mov
cmp
inc
movsb
fwait
andb
sub
xor
daa
or
xor
sub
pop
push
lcall
jo
subb
imul
mov
ror
fwait
cmpsb
imul
dec
shrl
adc
and
shll
dec
push
sub
xor
pop
pusha
push
dec
and
test
cmp
fsts
push
jb
nop
popa
bsf
enter
push
and
cmp
enter
clc
pushf
enter
push
xchg
subb
mov
push
mov
fdivp
jmp
testb
ret
inc
mov
mull
dec
test
aas
and
int
push
pop
add
add
adc
add
mov
imul
mov
add
sbb
inc
or
push
pop
in
outsb
adc
mov
pop
and
or
lret
mov
aad
mov
jmp
add
lods
add
movl
jnp
or
cs
or
mov
pusha
pop
adc
aaa
or
lods
cltd
cmp
add
add
mov
add
popf
and
mov
add
add
pop
mov
sub
addb
add
add
or
or
sub
add
shll
add
xor
pop
push
js
pushf
lods
rcl
shll
lock
sbb
lcall
cmovno
mov
add
test
outsb
out
je
aaa
test
xchg
addb
ja
jle
push
inc
xor
scas
scas
ja
adc
jae
cmpsl
pop
inc
out
pop
mov
mov
rolb
pop
shld
imul
cmpsb
imul
imul
cmpsb
imul
movsb
les
lcall
int3
mov
imul
insb
lcall
fmull
xor
mov
loopne
and
xor
shll
xor
int3
inc
shll
lock
shll
clc
lock
shll
cld
cld
xchg
add
xor
mov
or
add
mov
xor
rorl
and
or
dec
shll
adc
xchg
dec
shll
sbb
sbb
lcall
and
imul
imul
cmpsb
imul
lcall
xchg
dec
shll
cmp
xor
shll
pop
les
xor
rcl
push
mov
push
shll
add
lcall
pusha
int3
and
lcall
call
inc
insb
clc
push
jo
dec
shr
ss
push
js
je
shll
dec
xchg
dec
shll
jo
xor
shll
mov
xchg
cwtl
shll
in
insb
shll
add
xchg
shll
test
and
shll
call
xor
cld
push
mov
cmpsb
pop
fs
imul
imul
cmpsb
imul
cmpsb
imul
imul
dec
shll
adc
shlb
ss
sar
call
imul
add
push
or
shll
je
xor
shll
test
xchg
shll
and
dec
shll
xor
imul
shll
push
hlt
inc
cmp
arpl
scas
imul
mov
xor
test
inc
popa
push
outsl
push
push
in
sbb
xor
push
cld
jb
push
or
xchg
push
sbb
mov
push
sub
xchg
addr16
dec
lcall
push
je
pop
xor
mov
test
pop
nop
adc
mov
shll
fisttps
pop
sbb
push
xor
mov
dec
sarl
imul
imul
lcall
inc
dec
cmpsb
imul
imul
add
inc
in
mov
xor
dec
shll
push
pusha
insb
js
xor
roll
shll
lock
rorb
aaa
ror
shlb
int
push
mov
xor
dec
les
fildll
or
xor
or
fildll
ja
fidivrl
loopne
and
push
xor
xor
mov
andb
xlat
out
rolb
cmp
adc
lret
fidivl
and
mov
pop
outsb
xchg
xlat
into
mov
shlb
sbb
in
mov
imul
adc
lar
or
cmpsb
imul
cmpsb
imul
les
pop
shl
sbb
testb
xor
xor
shll
push
pop
sbb
dec
rorl
mov
movsb
adc
xor
rcrb
pop
hlt
add
cmpsb
pop
ss
push
sbb
imul
pop
push
dec
shll
jl
xchg
add
test
mov
divl
add
cmpsb
imul
imul
mov
mov
stc
mov
dec
roll
mov
dec
shll
fidivrs
aam
lock
loop
incb
jbe
cmp
pop
imul
push
inc
or
punpckldq
mov
add
jg
test
incl
add
adc
sbb
nop
push
xor
cmpb
ret
sbb
not
dec
or
lret
xor
in
pushf
fisubrs
lods
mov
cmp
fwait
lcall
lcall
lock
imul
add
push
int3
aam
dec
shll
in
hlt
cld
add
mov
or
mov
push
add
andb
fadds
push
and
insl
pushl
movd
cmp
ror
das
sti
bswap
add
jns
into
push
add
sbb
unpcklps
lods
pusha
nop
inc
adc
xor
push
scas
push
or
orl
adc
and
inc
jo
xor
jle
add
movhps
jle
xor
xor
stos
es
inc
xor
dec
jne
xor
fs
push
insb
xor
or
rclb
loope
mov
pop
adc
pop
cmp
cmpsb
imul
imul
insb
lcall
cmp
insb
jl
sarb
dec
shrl
loope
xchg
cmpsb
fiaddl
mov
mov
xor
inc
add
aad
inc
popa
stc
adc
add
or
nop
push
movsb
cmp
lods
test
push
std
enter
ss
shll
stc
cld
clc
adc
imul
imul
imul
cmpsb
imul
mov
lcall
aas
mov
sbb
pop
mov
or
lds
scas
sub
movl
ljmp
adc
xchg
mov
jne
sbb
or
or
add
scas
jnp
fisubrl
pop
lods
pop
adc
adc
xchg
nop
mov
inc
xor
mov
xor
daa
or
outsl
inc
add
movl
les
inc
addb
dec
aaa
add
pop
adc
push
adc
or
jbe
mov
xchg
xchg
or
mov
pop
add
jnp
jg
stc
mov
dec
cli
sti
cld
std
xor
shll
add
addb
jg
add
add
cmp
add
negl
jle
mov
cmp
pop
daa
add
cld
push
inc
xor
jge
xlat
inc
push
jne
cmp
in
cmpb
adc
rcrb
inc
lcall
stc
icebp
loope
sahf
cmpsb
imul
movsl
imul
test
lock
cmp
add
xor
bswap
jmp
xchg
lret
inc
mov
mov
addl
dec
mov
jmp
adc
sub
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
dec
cmp
add
xor
or
cmp
pop
aaa
testl
dec
mov
ja
call
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
inc
xor
push
into
incb
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
jmp
adc
cs
push
fisubs
loope
shrl
bound
pop
mov
insl
popf
pop
or
dec
cmp
push
testb
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
sub
sbb
and
push
pop
cmpsb
xchg
push
test
gs
push
push
jg
sub
pop
lds
push
inc
neg
jg
mov
mov
and
jae
push
xor
aaa
jg
sbb
push
bound
mov
inc
sub
sbb
ja
fidivrl
and
mov
or
fstp
std
ja
jb
or
fstp
fstp
bndstx
cmpsl
mov
jg
fidivs
sbb
xchg
lock
out
popa
dec
mov
xor
aas
lret
lcall
sti
call
stos
adc
shl
aas
aas
cmp
jmp
inc
xor
jnp
push
loope
pop
stos
jb
push
test
add
or
or
inc
sbbl
adc
add
out
adc
and
xor
shll
sub
sbb
ss
rorl
sbb
lcall
cmp
sub
lcall
imul
imul
imul
add
pop
or
ss
sbb
sbb
xor
or
xchg
sbb
dec
cmp
aaa
xor
push
cmp
inc
cmp
ss
adc
sbb
push
sub
pop
ss
shll
and
shll
push
ss
xor
outsb
jns
js
xor
gs
pop
bound
add
xor
arpl
adc
add
mov
das
es
ss
ss
aas
outsb
cmp
fdivs
push
cmpsb
outsl
pop
imul
jne
pop
add
add
cmp
add
mov
add
lret
add
add
jg
adc
push
adc
pop
and
xor
inc
mov
adc
push
loope
divl
bound
jno
pop
sbb
sbb
sub
or
adc
and
xor
int3
scas
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
fisubl
jmp
loop
in
out
call
repz
cmc
div
clc
stc
cli
fs
pop
dec
addl
sahf
adc
push
pop
popa
jno
and
shl
adc
imul
adc
aas
popa
and
loope
icebp
push
addr16
mov
mov
gs
dec
pop
enter
imul
mov
imul
xor
shrl
ss
call
movsb
mov
sbb
add
aam
dec
mov
hlt
add
push
mov
data16
imul
push
or
sbb
sbb
xchg
xor
add
pop
xlat
fmull
inc
sbb
lret
negl
cmpl
inc
faddl
and
add
and
and
adc
mov
jle
pop
je
int3
push
in
dec
mov
jb
mov
dec
pop
push
pop
in
mov
scas
cs
push
pop
scas
adc
inc
inc
scas
xor
mov
data16
push
mov
imul
lods
push
pop
pop
cmpsb
imul
cmpsb
imul
mov
lock
push
sub
lcall
js
mov
mov
fsubr
dec
shll
xor
inc
push
xor
shll
js
mov
ror
icebp
fbld
push
sub
pop
icebp
test
sub
stc
sti
add
add
ret
push
or
add
dec
xor
sbb
adc
and
add
push
in
iret
hlt
push
cld
add
shll
and
xlat
fnstsw
add
out
rcl
pop
or
adc
mov
cwtl
pop
add
mov
and
jbe
add
jo
mov
mov
jge
rcll
outsb
xor
dec
adc
rorb
add
test
jns
xchg
or
mov
decl
dec
inc
push
dec
push
pop
shll
sbb
fwait
and
jne
fs
js
rcrb
push
inc
push
lods
lret
shlb
mov
inc
insl
leave
xchg
cs
ss
pop
pop
fcmovb
mov
and
faddl
fs
outsb
adc
jns
and
push
mov
or
inc
add
or
clts
push
jmp
adc
add
adc
push
pop
adc
sbb
push
adc
sbb
adc
lods
daa
cs
sbb
sbb
pushf
xchg
jo
pop
mov
dec
xor
incb
or
add
xor
sub
jb
sahf
movlps
adc
pop
sbb
mov
xor
xchg
push
ss
add
push
rcrb
out
inc
push
inc
add
dec
add
sbb
fnstcw
pop
mov
dec
aas
js
fistl
das
rcrb
jp
mov
sbb
adc
and
xchg
xor
inc
les
ds
aas
dec
pop
outsl
lods
jbe
mov
cmpsb
inc
test
push
and
int3
dec
hlt
and
dec
inc
int3
out
dec
pushw
ficoml
xchg
nop
adcb
fisttpl
xchg
clc
out
lret
pop
nop
pop
mov
mov
push
push
or
es
pop
fiadds
or
adc
into
es
gs
mov
cs
lods
mov
scas
je
and
xchg
shrb
inc
push
aam
out
jle
insb
or
ficomps
aaa
mov
xor
loopne
jl
fdivs
mov
sub
jle
push
add
cld
push
ss
xchg
lods
xor
push
push
jl
nop
cs
dec
cwtl
add
les
pop
imul
out
jbe
push
test
inc
jl
ss
aam
mov
jp
and
int
push
mov
mov
orb
add
nop
inc
xor
sarb
cmp
push
dec
inc
ret
fisubl
mov
jbe
mov
push
push
xlat
xlat
es
adc
pop
push
dec
push
jbe
inc
jo
mov
and
push
push
cwtl
mov
mov
xchg
cmpsb
cs
inc
mov
aas
loopne
out
and
fidivl
push
pusha
into
lods
lcall
sbbb
adc
ss
inc
inc
cmpsb
mov
insb
push
mov
imul
lock
imul
ss
push
sbb
push
adc
sbb
ss
cmpsb
xchg
lods
mov
test
mov
enter
data16
cmp
sub
ds
sub
add
into
or
inc
inc
pusha
lods
adc
mov
mov
inc
imul
int3
out
push
sbb
scas
fs
push
adc
ds
shrb
rclb
push
lods
push
push
mov
sbb
enter
sahf
push
ret
mov
dec
ds
int3
out
mov
mov
fidivrs
inc
inc
push
repz
sub
push
jbe
cmpsb
insl
insb
cwtl
add
mov
fdivrs
inc
cmpsb
add
or
scas
adc
push
dec
out
outsb
or
cmpsb
js
data16
fimull
jo
cs
push
mov
pop
imul
and
push
dec
outsb
push
mov
xor
mov
in
inc
sub
mov
or
sub
and
jbe
scas
call
inc
test
cwtl
outsb
xor
pop
inc
dec
fsubr
mov
sub
insb
fiadds
mov
mov
pop
push
outsb
add
pop
xor
push
rcrb
sbb
clc
cs
into
in
mov
mov
lods
mov
pusha
push
out
mov
imul
mov
sbb
arpl
sahf
inc
cmp
sub
es
call
push
scas
scas
test
ret
jl
call
dec
mov
es
push
mov
sbbb
jle
push
inc
pop
imul
loopne
or
push
in
aad
cmpb
ffree
add
xchg
jo
push
adc
sahf
fdivr
mov
call
cwtl
ds
push
fadds
inc
fsubl
jnp
sub
xchg
sub
enter
test
outsb
fsubr
push
mov
rcrb
ja
movsb
js
call
add
loopne
push
imul
xchg
dec
inc
imul
push
inc
pushw
push
mov
js
test
cmpsl
ss
cmp
outsb
jo
and
addl
sub
sub
ficomps
dec
dec
rcrb
lcall
push
outsb
je
fadds
xchg
push
clc
mov
out
inc
pop
popf
jo
mov
fidivs
fdivrs
fiadds
sub
xor
dec
pusha
mov
add
nop
je
jo
add
inc
ret
sub
test
lods
pop
fmulp
inc
sbb
jbe
subb
inc
out
enter
pop
mov
enter
out
push
mov
dec
int3
notb
adc
fidivrs
fiadds
push
xchg
xchg
rolb
inc
xchg
push
jo
and
lcall
hlt
scas
fs
add
scas
sub
sub
mov
mov
test
and
jl
mov
cmp
lods
or
mov
imul
xchg
inc
rcrb
add
push
cs
push
add
aaa
xchg
mov
xor
cmp
movsl
popa
push
es
cld
add
incl
adc
add
inc
pop
sahf
xor
fcom
sbb
subb
mov
mov
ds
into
dec
xchg
loopne
cs
js
xchg
sbb
mov
imul
push
in
outsl
mov
pop
push
mov
push
mov
cmp
sbb
out
movsb
jbe
dec
and
push
sub
cmpb
aam
push
push
push
enter
adc
mov
adc
push
xchg
or
rolb
lods
xchg
pop
sub
outsb
mov
pop
dec
test
add
out
xor
xor
int3
mov
into
adc
jnp
mov
hlt
shrb
push
movb
sbb
es
xor
addb
enter
add
xchg
push
lds
dec
and
and
aas
mov
add
dec
add
mov
add
inc
dec
and
mov
add
stos
push
add
nop
inc
add
add
adcl
lcall
inc
fadd
and
push
dec
imul
mov
insw
dec
add
pop
inc
sbb
inc
and
lods
mov
and
pop
dec
aaa
push
mov
and
mov
xchg
mov
adc
dec
xchg
fisubl
push
inc
mov
divb
add
es
dec
in
popf
mov
push
inc
cmp
mov
aaa
xlat
sahf
cmp
inc
bound
or
fnstenv
pop
dec
push
and
int
cmp
scas
push
inc
or
push
xchg
insl
rolb
sub
ficompl
or
sub
push
mov
dec
imul
and
and
dec
in
flds
iret
push
mov
fidivl
into
push
and
pop
dec
in
xor
push
push
mov
mov
daa
bound
or
mov
dec
mov
push
push
mov
mov
cmpsb
inc
out
jle
sub
inc
jnp
add
and
xchg
push
or
lock
jbe
pop
adc
into
flds
or
daa
or
sarl
in
out
push
push
inc
xor
adc
push
mov
out
jb
inc
dec
push
push
inc
mov
lods
sub
testb
lods
mov
mov
xchg
sub
pop
lds
pop
push
pop
inc
jae
xor
test
jle
dec
jbe
and
inc
mov
cmp
mov
inc
fwait
sbb
push
adc
mov
daa
sbb
xor
dec
daa
nop
inc
cmp
sbb
xor
dec
push
sub
xor
inc
scas
xchg
sub
inc
scas
test
pop
stos
inc
adc
inc
xchg
ficoml
mov
push
and
adc
sbb
mov
or
orl
pop
imul
mov
aaa
inc
lods
loope
cmpsb
inc
dec
adc
xor
nop
bound
daa
dec
inc
adc
pop
mov
mov
pop
es
sub
dec
xchg
add
adc
dec
push
or
xor
aas
mov
push
add
aaa
mov
sbb
jle
adc
pop
dec
mov
or
jnp
mov
add
push
jbe
pop
scas
add
cmp
pop
cmp
sbb
and
pop
cmp
add
dec
orb
pop
arpl
and
pop
adc
mov
adc
orps
fisubrs
mov
add
loope
dec
pop
cmp
daa
mov
inc
imul
jbe
adc
stos
daa
into
adc
mov
arpl
inc
push
inc
or
sub
and
push
scas
out
pushf
pop
fwait
or
inc
mov
mov
mov
cmpsl
push
cli
and
test
shl
jle
push
jae
pop
fadds
cli
inc
imul
mov
mov
xchg
xlat
add
inc
add
jle
arpl
rorb
push
add
imul
mov
mov
push
mov
addb
stos
leave
xchg
jb
adc
int
cmp
clc
aas
push
pop
jmp
shl
int
cld
add
pop
or
mov
aas
jne
mov
add
push
addr16
jnp
push
repnz
test
or
lret
in
mov
shrb
pop
add
psubb
fisubrl
pop
out
insl
lcall
out
cmp
rolb
add
pop
outsb
leave
idivl
clc
pop
pop
aas
push
enter
cs
xchg
pop
int
pusha
addr16
lock
call
pop
std
cmp
jge
aas
add
jl
shlw
pop
data16
jg
push
mov
cltd
sbbb
add
jo
cmp
rolb
mov
lock
int3
into
sbb
lahf
pop
xor
push
cwtl
pop
in
shrl
push
insl
lcall
decl
mov
loop
xlat
iret
add
add
or
cmp
roll
cmp
stos
inc
ja
dec
pop
outsb
shll
fwait
out
and
std
clc
lock
popf
pop
loopne,pn
rcrb
dec
add
jbe
pop
cs
pop
outsb
clc
insb
add
popa
rorl
or
xchg
lret
in
pop
sbb
out
fimuls
push
push
mov
cs
jle
pusha
cmpsl
add
in
in
les
test
out
mov
js
inc
aas
push
pop
cs
jne
shll
aaa
bound
bound
pop
cld
push
push
dec
cs
cmp
fsubrl
jb
sub
mov
aaa
mov
push
push
cs
lret
mull
les
or
pop
sbb
mov
sub
inc
add
inc
sbbl
push
pusha
xor
sbb
push
push
xor
sahf
push
sbb
adc
test
aas
je
cmpsb
in
ret
roll
lock
cs
out
sbb
cmp
sbb
or
test
shlb
loopne
movsl
or
and
leave
or
add
jbe
jbe
addb
add
dec
fidivrl
and
add
jmp
or
add
es
mov
adc
cltd
fnsave
cmp
and
xor
xchg
cs
xor
fcmovu
and
jbe
cmp
mov
push
dec
push
movb
xor
push
daa
lret
mov
insl
mov
ja
push
sbb
imul
lahf
dec
daa
dec
addl
daa
sbb
add
jnp
adc
clc
push
hlt
sbb
pop
fdivl
mov
cmp
adc
nop
add
xor
dec
push
cmp
imul
mov
xor
and
daa
inc
mov
movsl
daa
dec
sub
out
ficoms
aas
push
xor
mov
ret
mov
cmp
push
js
pop
aas
js
ja
fidivs
and
push
es
sbb
push
and
and
movsb
clc
push
cmp
mov
pop
jns
xchg
cmp
insl
fadds
push
xlat
push
lret
pop
mov
daa
push
and
push
mov
mov
push
mov
adc
daa
mov
jno
daa
push
xbegin
mov
rorb
imul
clc
adc
jp
xchg
inc
inc
inc
or
mov
mov
dec
push
pop
daa
or
je
daa
inc
aad
push
pop
dec
insb
dec
push
fwait
dec
pop
daa
mov
out
in
add
add
and
sub
clc
daa
add
popa
sbb
repz
fisttpll
mov
daa
popa
ret
aas
adcw
fisttps
ss
arpl
push
dec
xlat
mov
ds
rorl
out
fistl
mov
pop
ficoml
mov
mov
cmp
out
push
fadds
enter
enter
daa
push
fisubs
mov
fcompl
mov
lret
mov
cmpsl
lcall
in
test
dec
add
popa
data16
xor
in
repz
mov
jecxz
add
push
ret
test
adc
filds
xchg
pop
testl
jle
rcrb
or
xor
xor
cmpsb
arpl
loopne
fstp
aas
cs
bound
ja
stc
frstpm(287
daa
push
inc
sub
push
es
dec
pop
icebp
xor
es
shl
mov
sub
je
outsb
je
data16
inc
push
shll
push
inc
push
mov
and
and
inc
mov
sti
call
stos
sub
pop
lock
insl
jmp
dec
push
pop
xor
arpl
fmuls
pop
mov
xchg
subl
mov
lahf
jmp
xchg
ret
cmp
adc
mov
sub
adc
cltd
out
subb
add
xchg
sbb
dec
sbb
shr
jge
daa
cltd
into
int3
push
jl
and
clc
or
sbb
daa
fcoms
daa
mov
xor
dec
xor
dec
daa
fsubr
ret
daa
dec
daa
clc
dec
mov
ja
jne
dec
sarb
dec
lret
test
dec
out
aas
inc
sub
sbb
lret
add
lahf
mov
jns
imul
push
mov
shlb
cltd
cltd
and
out
test
addr16
dec
push
ss
mull
repz
sbb
int3
aaa
mov
daa
lret
dec
popl
or
adc
fmull
sbb
enter
shl
sbb
ljmp
push
xchg
push
push
xor
mov
pop
adc
setl
andl
pop
addl
cmp
orl
and
imul
fs
fcmovnbe
fisttpl
or
aaa
sub
inc
cltd
and
xchg
stos
sub
xlat
sub
cmp
pop
jbe
les
pop
sbbl
and
mov
mov
xchg
inc
push
and
mov
xchg
push
dec
jmp
lock
mov
stos
cmp
lahf
add
aas
and
stc
aam
or
push
jbe
xor
int3
add
or
push
jo
aas
mov
or
jo
xchg
js
push
xchg
inc
data16
push
push
xor
iret
pusha
insb
lahf
jle
adc
adc
js
and
mov
add
sti
movsb
pusha
fld
roll
pop
outsb
sbb
adc
or
pusha
inc
add
sbb
add
ud2
jnp
inc
ja
pop
cmp
outsb
ja
or
mov
lock
push
flds
add
jno
pusha
sbb
xor
fmuls
push
push
and
mov
xor
dec
cmp
sbb
fwait
add
jl,pt
cld
cmp
sbb
pop
mov
add
imul
insl
fcomps
pushf
lods
mov
test
and
shll
xor
rorb
push
cmpsl
dec
pop
roll
mov
iret
xor
outsb
fidivs
add
pop
jae
xor
xor
add
sbb
pushf
add
addl
lahf
xor
pop
in
xor
jg
mov
ja
sbb
pop
outsl
rolb
aaa
gs
bound
sub
adc
mov
bound
sbb
outsl
stos
adc
orb
outsb
inc
mov
popf
jg
xor
jmp
cmp
cs
xchg
lcall
fbld
outsb
cs
lret
popf
ret
push
mov
jo
sbb
addr16
sbb
jo
xor
arpl
and
mov
ja
ja
add
and
sbb
xor
test
out
sbb
dec
out
add
pop
jle
dec
addb
mov
dec
iret
mov
push
push
add
jbe
pop
and
and
or
pop
and
xor
ja
lods
popf
mov
mov
nop
mov
push
enter
dec
adc
pop
add
in
sbb
cld
xor
sbb
add
jae
push
sbb
dec
int3
in
push
sbb
jle
das
sub
in
pop
add
aad
fcmovu
and
pop
out
xchg
arpl
pop
add
aas
cmpsl
in
mov
lds
pop
ret
ja
cmp
push
cmp
mov
in
cmpsl
or
lret
push
push
lods
jmp
pop
jne
jae
ja
das
and
pop
stos
jno
push
loopne
adc
aaa
add
aas
lock
je
shlb
adc
idivb
pop
movsb
cs
pop
addr16
aas
das
inc
aas
xor
cs
inc
fsubrl
sbb
imul
add
ja
jo
adc
shrl
dec
jne
pop
aaa
add
ja
push
jae
jae
mov
adc
pop
sbbb
jbe
das
sub
bound
dec
push
pushf
and
mov
pop
sahf
mov
fcmovne
int3
and
push
push
pop
jae
mov
add
xchg
push
sbb
cmpsl
enter
aaa
movq
fsubrs
cmp
testb
add
addr16
test
add
jp
and
add
inc
pop
push
movsl
inc
test
xor
inc
sbb
add
addr16
aam
push
sti
xchg
movups
add
pop
inc
daa
jge
int3
iret
popl
or
outsl
sub
ficomps
push
decl
or
jo
pushf
mov
out
xor
out
jp
test
or
dec
dec
dec
add
adc
mov
adc
adc
mov
push
xor
outsb
test
inc
fdivl
and
push
pop
mov
lock
pop
sarb
xchg
push
leave
mov
xor
or
sub
or
mov
pop
add
jo
push
loop
mov
add
aas
dec
and
pop
add
es
push
dec
orl
inc
add
sbb
add
pop
push
scas
push
sbb
mov
adc
sbb
mov
inc
movl
sbb
inc
imul
push
data16
pop
insb
push
jp
enter
or
mov
lods
mov
shrb
and
jb
or
mov
cmpsb
aas
and
jae
insb
cmpsb
adc
insb
push
insl
mov
in
mov
fs
jb
jns
jb
cmp
popa
sti
data16
push
jb
mov
frstor
bound
jae
fimull
in
mov
mov
insl
or
or
imul
mov
pop
pop
push
test
jo
movb
pop
pop
arpl
push
outsb
dec
or
or
outsb
or
add
xor
scas
data16
scas
arpl
insb
jo
sbb
push
sbb
sbb
inc
or
pop
cmp
mov
inc
mov
cmp
jp
jg
dec
ds
mov
test
lret
push
jb
jo
popa
add
jg
mov
and
jae
or
or
das
add
andl
paddusb
repz
out
adc
pop
push
arpl
push
gs
imul
frstor
insb
daa
daa
add
outsl
push
pop
pop
ss
jbe
jne
pop
pop
popa
pop
dec
jo
ret
je
outsl
pop
jnp
ss
out
arpl
sbb
push
je
test
movsl
mov
sub
cmp
gs
adcb
mov
mov
ret
and
mov
jae
sbb
fcmovne
sbb
mov
jp
fldl2e
out
or
inc
mov
push
stos
xchg
inc
fwait
mov
sub
cs
or
and
add
iretw
mov
add
inc
in
pop
mov
push
sbb
lret
push
gs
or
inc
pop
jo
push
sub
daa
mov
loope
mov
xchg
pop
jne
push
jecxz
adc
mov
pop
bound
repz
push
aas
insb
movl
mov
imul
cmp
js
das
dec
shlb
jbe
das
push
arpl
push
cs
mov
lahf
inc
mov
ret
int
orb
outsl
iret
sub
das
inc
lcall
adc
scas
push
dec
adc
pop
adc
outsb
push
jne
pop
adc
sbb
inc
outsb
xor
adc
mov
jb
out
subl
push
xchg
push
subl
jne
pop
xor
fs
pop
in
push
mov
outsl
fisubl
mov
fldt
or
xchg
stos
adcb
or
and
pop
lret
test
add
sbb
orl
cli
jne
sbb
lahf
mov
mov
jae
outsl
ficompl
je
push
or
stos
push
pop
es
ja
add
jb
adc
pop
mov
clc
dec
pop
mov
pop
pop
xchg
jae
enter
pop
jae
add
mov
pop
loopne
imul
mov
sbb
js
jne
addr16
push
out
fidivl
je
dec
rorl
cmpsl
lcall
xchg
ret
mov
mov
pop
cmp
sub
or
aaa
xchg
ss
xchg
push
inc
pop
dec
insb
fistl
jnp
stos
push
mov
mov
xor
xchg
orb
movl
push
xor
les
roll
cmp
jo
adc
jecxz
adc
adc
inc
daa
jbe
pop
mov
jecxz
sbb
or
out
nop
lcall
insl
mov
jae
add
mov
inc
sub
pop
push
dec
ss
scas
push
push
ss
sbb
test
xchg
or
jae
shll
fsubrs
xchg
inc
sub
enter
xor
cmp
sbb
jle
inc
dec
pushf
cmpsb
stos
or
les
and
and
jae
mov
pop
or
dec
xor
arpl
imul
cmpsb
subb
and
out
pop
jns
adc
add
push
cmp
ds
adc
rcll
cmp
push
xlat
add
pop
ret
xor
sub
xchg
mov
push
jg
and
loop
push
xlat
add
push
adcb
mov
push
inc
mov
mov
push
addr16
fsubs
es
sbb
mov
xchg
ficomps
je
orl
jne
or
pusha
dec
xor
pop
pop
cmp
fisubrl
jnp
movsl
xchg
sub
jae
aas
pushf
cmp
pop
and
inc
xlat
imul
jae
ja
cmpsb
arpl
fiadds
pop
xor
inc
jp
inc
fwait
mov
ja
dec
test
sti
notb
imul
cmp
xchg
mov
jae
arpl
and
popa
das
xchg
sbb
pop
add
pop
adc
scas
dec
dec
add
mov
jecxz
add
mov
fs
mov
data16
roll
and
inc
push
cmpsl
lock
aad
mov
adc
lret
jnp
gs
das
xor
sti
outsb
pop
mov
shlb
jmp
ret
push
inc
adc
cmpsl
nop
cmp
jbe
cmove
mov
fwait
push
shll
dec
addl
imul
adc
das
xor
subl
mov
push
lcall
adc
ja
scas
mov
mov
adc
push
xchg
mov
mov
pop
mov
push
insb
scas
xor
and
insl
mov
mov
xchg
add
add
in
add
jmp
adc
sar
sub
adc
ss
lea
and
add
adcl
push
xor
dec
subb
xor
adc
test
and
push
mov
dec
pop
jecxz
jmp
inc
shll
adc
and
lahf
jmp
mov
inc
js
inc
jmp
jp
cmp
jae
xor
aad
inc
sub
and
jb
loopne
sub
bound
and
scas
add
add
push
or
pop
andb
push
aas
pusha
adc
mov
add
add
fistl
xor
jle
xor
mov
mov
iret
cmpb
movsl
lcall
jb
shll
xor
pushf
hlt
sbb
mov
sbb
imul
or
push
aaa
addr16
pop
dec
mov
fidivl
aas
addr16
add
add
cmp
rolb
pop
push
ds
push
pop
inc
sbb
pop
sbb
push
fs
or
jbe
popa
cmp
sahf
adc
push
push
aas
inc
adc
xor
imul
push
cmp
sbb
into
jo
add
xor
cmp
es
inc
mov
out
add
testb
mov
bound
sub
and
and
fmuls
addr16
jmp
push
rcll
adc
imul
xor
sub
xor
movb
or
and
and
aaa
test
cmp
jo
adc
add
insb
and
pop
push
outsl
or
xorl
or
pop
adc
dec
sbb
fidivl
inc
xchg
mov
stos
out
jg
adc
data16
xchg
inc
or
cmpb
shrl
sbb
sbb
and
punpcklwd
push
or
adc
out
test
pop
lods
stos
rcrl
jns
rolb
pusha
fwait
sbb
push
cli
push
add
data16
mov
aas
pop
or
push
rorl
cs
scas
mov
test
pop
cs
add
mov
je
jno
add
jmp
rclb
jae
out
jbe
lret
adc
lahf
imul
push
jne
inc
or
dec
push
repz
lock
mov
pop
andb
out
sub
push
sub
push
popa
pop
scas
popa
sub
cmovb
inc
add
ja
inc
sub
pop
jns
sbb
sbb
dec
daa
xlat
push
mov
aaa
inc
imul
out
je
xor
dec
push
out
and
mov
push
lcall
inc
fsubs
aaa
push
arpl
and
push
sub
push
mov
pop
add
jmp
pop
and
add
fwait
test
iret
push
dec
lods
add
subb
mov
jecxz
inc
mov
aaa
pop
mov
push
adcl
imul
mov
xor
addb
inc
sub
pop
fs
jns
xor
xchg
add
fcmovbe
dec
cmpsb
cmp
dec
push
dec
ja
ficompl
mov
incb
xchg
sbb
inc
out
arpl
xchg
sbb
push
inc
push
int3
cmc
in
pushw
adc
outsb
pop
dec
out
sbb
dec
xchg
jg
push
fwait
loop
rolb
ja
cmp
stos
ljmp
ja
test
data16
sub
pop
push
daa
outsb
mov
jne
fs
or
scas
add
inc
xor
es
adc
inc
and
adc
push
sub
sub
add
push
inc
dec
jbe
sarb
mov
sbb
cmp
push
fdivs
sahf
or
xorl
jno
jg
daa
or
das
sbb
inc
or
sbb
sub
fidivl
dec
mov
in
addr16
adc
inc
push
jmp
add
loop
insb
or
xchg
pusha
fcoms
iret
iret
movsl
mov
fistl
lds
xlat
adc
inc
or
imul
fs
pop
add
es
or
adc
push
push
xchg
dec
add
inc
incl
push
mov
dec
rolb
outsb
push
sbb
add
sub
adc
aaa
ret
push
and
pop
sub
add
mov
fcmove
adc
and
stos
cmpl
mov
loopne
ret
out
aas
loopne
and
sbb
adcl
adc
jae
jae
add
fists
int3
aaa
imul
cwtl
dec
mov
pop
xchg
xchg
pop
inc
loope
xchg
inc
xchg
ja
push
cwtl
ja
loopne
jae
or
mov
mov
dec
out
or
pusha
shlb
in
imul
jno
or
ret
adc
push
rorb
adc
mov
push
into
and
loopne
pop
cmpsb
pop
jae
out
inc
mov
mov
dec
mov
ret
movb
out
mov
ja
inc
out
jo
loope
add
jbe
mov
pop
mov
sbb
adc
jbe
adc
xlat
shl
sbb
out
pop
push
xchg
or
cmp
pop
loope
sbbl
mov
adc
lcall
dec
cmp
movd
pusha
inc
and
cmp
cs
rep
cmp
sbb
fbstp
mov
xor
lret
push
mov
xchg
adc
jo
lahf
into
sbb
mov
loop
xor
xchg
les
add
adc
popa
push
push
pop
push
sarl
push
push
dec
pop
stos
pop
push
insb
adc
adc
sbb
dec
pop
xchg
ret
sbb
add
xchg
addb
sbb
pusha
shl
xchg
add
inc
adc
outsl
sbb
jp
jnp
ret
jo
or
or
xor
inc
and
jae
ret
sbb
jbe
adcl
push
test
jne
mov
insl
jb
pusha
mov
sahf
inc
pop
mov
inc
pop
xchg
inc
inc
test
outsl
pop
push
adc
mov
bound
movsb
mov
adc
push
add
stos
insl
mov
dec
mov
jp
cwtl
lods
cs
xchg
daa
adc
push
ljmp
and
add
les
push
shl
subl
push
jb
fildll
xlat
ret
sub
inc
imul
add
sbb
jmp
enter
bound
bound
sbb
cs
cmp
out
jecxz
repz
lcall
mov
add
bound
xor
adc
pop
scas
fwait
mov
cmp
popa
cmc
into
and
push
ficoml
loope
mov
jae
inc
bound
nop
jae
push
mov
mov
jnp
orl
push
insb
rclb
xchg
je
xchg
pop
adc
and
es
push
leave
xor
and
and
and
mov
loope
pusha
inc
xor
mov
cmp
mov
loope
sti
sahf
dec
push
cmpsl
jb
xchg
arpl
push
dec
and
or
test
cmp
jb
loope
testl
lea
fstpl
mov
cs
push
jae
lock
and
inc
jne
popa
pop
xor
add
pop
and
orl
sub
mov
sbb
inc
pop
jo
pop
inc
arpl
imul
inc
lds
rorl
sbb
jle
push
dec
cwtl
stos
je
or
mov
xor
into
lods
ljmp
xor
inc
and
hlt
rcrb
or
and
inc
adc
sbb
lods
pop
out
testl
and
mov
and
imul
jecxz
test
jmp
inc
dec
or
adc
fs
or
add
out
mov
pop
xchg
rorb
mov
and
data16
add
popa
ja
sbb
fmuls
sbb
add
or
or
les
adc
mov
lock
pop
mov
inc
arpl
stos
jae
arpl
sbb
rcrl
mov
or
je
adc
add
or
add
adc
add
or
jae
cmovs
popf
xorl
pop
sub
mov
outsb
dec
and
cwtl
jno
shrb
in
insl
nopl
xor
mov
cmp
je
push
dec
dec
scas
pop
out
mov
mov
rcrb
movsl
xchg
or
fwait
pop
les
aad
xor
lods
adc
aam
ja
gs
sbb
mov
sbb
mov
xchg
mov
ja
jg
lret
dec
mov
xchg
mov
dec
sub
outsb
cvtps2pi
mov
mov
lods
fstp
ret
inc
sbb
or
cmp
lods
cs
push
aas
xchg
adc
cmp
mov
or
pop
pop
shll
or
push
inc
xor
and
mov
rcll
xor
aam
stos
push
out
pop
push
call
jg
add
mov
ja
xchg
mov
pop
movb
mov
push
pusha
and
shr
movb
ret
imul
jae
rorb
xlat
sub
add
push
pop
insb
pop
bound
inc
and
and
or
sub
adc
push
sarl
jbe
and
or
adc
insl
adc
pop
add
mov
mov
adc
imul
setg
mov
test
cmpsl
dec
or
mov
popf
sbb
inc
jecxz
mov
push
test
testl
mov
or
and
inc
insl
sbb
pop
jmp
in
mov
lds
push
mov
inc
addr16
xchg
fcoms
push
sti
jg
pusha
ret
add
mov
jmp
bound
push
mov
stos
test
push
mov
or
and
adc
push
mov
adc
mov
pop
orps
and
or
stc
nop
adc
or
and
xchg
push
adc
lahf
xor
and
aaa
cmp
fiaddl
mov
lods
adc
outsl
mov
dec
or
xlat
dec
mov
inc
roll
add
mov
js
lret
push
inc
repz
lret
mov
popa
mov
or
or
mov
mov
ja
jecxz,pn
sbb
cmpsl
repz
aad
dec
lods
scas
movaps
bound
xchg
dec
and
scas
push
jae
stos
mov
dec
cmp
rcrb
data16
push
addl
ss
push
dec
adc
sub
inc
stos
inc
stos
mov
xor
sbb
cmpl
ret
inc
lcall
insl
pop
mov
das
popa
inc
sbb
xor
sub
sub
bound
pop
aaa
pop
sbb
sbb
adc
push
or
jg
mov
xlat
push
mov
push
adc
push
addr16
rcl
and
outsl
outsl
dec
rcrb
dec
push
scas
sbb
sub
sbb
packssdw
scas
rcrb
mov
push
jae
test
push
arpl
es
sub
ja
sbb
add
sbb
adc
scas
adc
orl
mov
sbb
dec
popf
pop
aaa
cpuid
aam
jbe
addr16
inc
jnp
lcall
jno
inc
mov
pop
mov
pop
xor
xor
xchg
loop
adcl
push
imul
xor
bound
mov
and
mov
inc
insb
inc
or
fsubrs
sub
push
adc
mov
mov
daa
lret
mov
cmpsl
pop
dec
rcrb
shlb
pop
movsl
sub
gs
pop
cmpsb
test
xorb
insb
xchg
add
sub
mov
sbb
jnp
sub
xchg
fisttpl
add
mov
ja
push
or
xorl
neg
mov
push
cmpsb
mov
adc
mov
dec
fdivl
add
insb
pusha
push
imulb
or
insl
fwait
push
ret
aas
iret
inc
and
mov
popa
or
xchg
addl
rclb
popa
loope
movsl
add
cmpsb
pop
pop
add
loope
xchg
jae
pop
add
fldt
pop
sbbb
inc
aas
inc
stos
push
pop
fcoml
dec
lds
push
sbb
lret
je
and
add
and
sub
add
mov
test
or
dec
dec
in
pop
xchg
push
or
jecxz
ret
stos
scas
aaa
dec
dec
jne
movsl
mov
jbe
les
jno
sbb
add
cs
mov
pop
add
adc
jbe
pop
data16
jbe
or
mov
ret
out
dec
sahf
jno
or
jbe
ffree
rolb
and
shl
outsl
imul
add
add
shlb
cmpsl
xor
inc
push
andl
inc
fwait
mov
pop
imul
and
mov
and
cmp
inc
cmp
push
ret
xorl
mov
pop
push
addr16
xor
movsb
xor
pop
mov
jmp
xor
cmp
pop
add
mov
dec
jl
mov
add
insb
jo
add
push
sbb
ret
pop
outsl
orb
ret
inc
fcmovnu
pusha
popf
xor
push
and
testl
pop
sub
jne
xor
subb
or
bound
push
pop
ficompl
xor
outsl
cli
jle
mov
add
outsl
or
je
bswap
cmp
adc
cmp
mov
sub
jp
push
inc
dec
add
jg
sbb
inc
call
aam
and
pop
lahf
ret
sub
xchg
pop
xchg
adc
mov
add
mov
shlb
mov
push
pop
pop
dec
imul
arpl
shrb
xlat
push
adc
roll
popa
and
adc
sbb
daa
push
add
outsl
mov
sub
ret
out
jo
subb
inc
cmp
or
add
xchg
push
push
adc
xchg
shrl
and
aaa
jae
push
mov
sbb
dec
insb
mov
aad
jmp
push
push
mov
test
repz
push
sub
test
pusha
sbb
data16
out
mov
scas
push
xchg
cmp
pop
movl
adc
adcb
cmpsl
mov
insb
pop
pop
or
stos
or
jg
dec
add
fs
push
fistpll
or
mov
lock
or
sub
shll
lea
push
mov
loopne
xchg
xor
jb
adc
adcl
mov
lea
inc
lcall
cmp
push
xchg
test
and
cmp
jge
lahf
inc
arpl
insl
test
pop
jg
in
lea
sbb
arpl
fisubrl
dec
arpl
dec
pop
sbb
stos
fildl
pop
or
jecxz
xchg
xor
test
adc
sbb
mov
imul
sub
fmull
push
sbb
cmc
mov
test
sub
sarb
sub
or
inc
sub
aad
sub
movsl
pusha
inc
sbb
bound
push
je
cmp
push
push
sbb
daa
mov
cmp
pop
mov
push
cs
or
rorb
sbb
or
lods
push
shll
mov
mov
add
aam
jno
adc
mov
fcoms
iret
popa
xchg
jno
pop
xlat
jnp
loopne
mov
push
sbb
data16
mov
imul
adc
jae
cmp
clc
inc
xorb
repz
add
fwait
cmp
xor
add
vmovshdup
sub
xlat
int3
or
add
and
negb
enter
les
and
pop
dec
int3
int3
mov
int
inc
inc
es
pop
jl
int3
bound
and
inc
and
out
divl
les
inc
jbe
inc
ret
das
dec
mov
and
cltd
les
cltd
iret
mov
jnp
pushf
push
cltd
es
pusha
pop
sub
pop
sub
jp
cltd
xchg
insb
xor
pop
js
pop
fmulp
pushw
es
popa
jbe
mov
and
idivl
push
sub
push
pop
in
int3
mov
aas
outsl
lcall
sbb
or
int3
inc
les
cwtl
fistps
add
xchg
xchg
and
xchg
ja
pop
ret
jg
xor
sub
pop
stc
out
les
clc
popa
repnz
lock
int3
add
decl
mov
test
pop
inc
push
jg
iret
repnz
and
loope
xchg
imulb
sub
add
xchg
jge
mov
aas
mov
sti
ja
out
ds
imulb
pop
sbb
cmp
es
sarb
in
ja
and
sbb
add
mov
sysret
sbb
out
insl
es
clc
pop
aas
lock
pop
loopne
xchg
xadd
fdivs
inc
insl
sbb
xorb
fstp
mov
out
xor
dec
inc
cmp
popa
push
ljmp
push
adc
adc
push
or
pop
jb
pop
jno
cmpsb
lock
jae
and
mov
mull
inc
lret
mov
mov
mov
add
mov
test
out
incl
imul
sbb
push
jecxz
mov
mov
std
ljmp
insb
cmp
and
rorb
shrl
test
or
mov
cwtl
stc
lcall
mov
mov
mov
mov
cld
or
sub
pop
jl
addl
jmp
dec
mov
inc
cmp
lahf
mov
add
add
ljmp
add
and
cmp
enter
xchg
or
pop
push
lahf
xchg
add
call
cmp
or
enter
insb
push
xchg
scas
cmpsl
xor
mov
ss
lcall
int3
sbb
jae
bnd
lea
xor
aad
inc
mov
scas
sbb
out
sub
imul
jg
jb
bound
jp
lea
outsl
jl
xchg
cmp
cmp
pop
enter
add
and
mov
mov
mov
andb
sbb
pushl
in
pop
cmp
or
jecxz
call
cmpsb
or
lahf
shrb
rclb
lcall
mov
fstps
sar
jb
ret
fucomip
in
sub
jnp
pop
push
adc
mov
adc
pop
or
add
adcb
mov
xor
sbb
push
sub
loopne
xor
enter
movsl
js
imul
pop
xor
scas
jnp
orl
pop
inc
popa
inc
clc
mov
mov
testl
mov
loopne
incl
inc
jle
inc
dec
and
das
jne
js
push
or
incl
adc
arpl
sub
add
mov
ret
das
imul
movsl
mov
call
mov
imul
lret
lahf
jne
fldt
sti
jge
inc
addr16
test
or
cld
incl
lea
xor
or
loope
inc
jne
or
or
inc
mov
andb
clc
or
mov
decl
jnp
xchg
or
add
push
jg
add
pop
cmp
dec
stos
mov
in
in
in
andb
adc
ljmp
sub
arpl
push
ja
push
cmp
repnz
ret
fbstp
dec
sub
pushl
rcll
adc
push
scas
fsubrs
mov
js
addr16
jmp
mov
add
or
test
out
clc
mov
mov
in
insl
loopne
xchg
fwait
scas
inc
dec
lock
pushl
or
add
repz
mov
mov
mov
je
shll
fstps
pop
in
stc
stc
xchg
dec
int
negl
jbe
jo
pop
push
test
xorl
mov
adc
xchg
jno
push
mov
test
out
mov
xchg
add
sub
pop
jg
dec
push
jb
mov
push
bound
mov
add
sbb
xchg
dec
sbb
xchg
cmp
mov
jmp
aad
push
shll
fists
test
xor
cmp
jg
loopne
fnstcw
arpl
arpl
xchg
inc
add
adc
cmp
adc
cpuid
push
push
addb
stos
push
push
push
adc
add
jg
cmp
sbb
push
filds
fists
les
push
adc
add
sub
xchg
scas
and
fwait
push
test
dec
icebp
stc
test
add
call
adc
jns
push
mov
jecxz
stc
insl
mov
sub
cmp
dec
pop
pop
jnp
dec
sbbb
cld
push
push
push
subl
js
adc
cmp
ficoml
in
sahf
lahf
es
test
loopne
stos
or
js
pushl
filds
xor
inc
jns
popa
inc
sbb
arpl
pushl
xchg
and
add
dec
pushf
hlt
sbb
mov
pop
repz
js
sub
mov
test
mov
jg
adcb
jne
cs
add
sub
mov
mov
and
mov
scas
inc
aas
rclb
mov
push
leave
jl
lahf
jmp
daa
mov
cld
inc
jnp
xor
or
cmpsb
fidivs
mov
mov
mov
imul
jl
push
xchg
shl
pop
lcall
ja
mov
cltd
cltd
insl
sub
stos
pop
inc
add
call
xchg
pop
or
push
pusha
pop
cmp
pop
into
in
incl
adc
push
pop
lock
dec
adc
dec
fmuls
outsl
add
push
sbb
dec
xlat
sub
fwait
pop
mov
xorb
addl
insl
add
rcll
and
jge
jg
lock
sub
add
jl
jno
pop
cmp
addr16
adcb
in
in
add
sahf
rorl
and
mov
cmp
mov
jbe
aad
into
stos
icebp
call
cmp
fs
ds
ljmp
inc
test
jg
mov
cli
icebp
std
or
adc
adc
xor
adc
add
add
jl
jno
loope
sti
std
jo
loop
js
and
pushl
aaa
test
mov
scas
cwtl
lods
outsb
mov
sbb
xchg
pop
jge
push
sbb
call
outsl
dec
idivl
jp
outsl
jne
popa
or
adc
aad
sub
cltd
sub
movsb
mov
aas
add
inc
notl
fildl
push
dec
loope
das
mov
xchg
push
mov
lds
cmpsl
xchg
jmp
and
xchg
movsl
xlat
rcll
sub
in
stos
mov
dec
popa
out
pushl
cmp
jp
push
mull
jp
data16
xorl
push
pop
push
pop
jns
cmp
cmp
mov
sbb
cld
xchg
jge
jg
std
and
leave
push
es
jae
scas
scas
mov
or
hlt
adc
inc
xor
jmp
js
push
shr
sbb
fwait
scas
daa
in
adc
fwait
rorl
dec
nop
mov
cmp
test
bound
lock
divb
out
jg
mov
lcall
fcompl
out
hlt
cli
ja
jle
jne
jge
xor
pushl
jle
push
xorl
xor
xchg
xchg
xchg
jne
inc
popa
xor
repnz
dec
sbb
dec
sbb
lcall
leave
add
inc
jge
add
push
std
sub
scas
push
arpl
or
cwtl
dec
adcl
insl
mov
xchg
mov
loop
jmp
xchg
loope
mov
pop
jne
mov
jp
cmpl
xor
stc
imul
mov
push
xlat
xchg
mov
xchg
xchg
clc
mov
dec
jg
lods
test
add
mov
jp
push
lock
inc
mov
mov
sub
rorb
pushl
jne
lds
out
fsubl
mov
mov
sahf
xlat
sti
mov
jmp
std
inc
push
addl
add
rorl
or
movsl
cmpb
adc
xchg
movsb
prefetcht0
leave
adcl
js
pop
inc
std
loop
mov
sub
pop
push
enter
add
dec
test
inc
call
xchg
aad
pop
test
in
stc
sbb
out
aad
mov
aad
mov
fldcw
decl
orl
jns
pop
mov
orl
xor
insl
loope
adc
pop
movsl
adc
aam
xchg
sub
orb
sub
aaa
sbb
sbb
clc
jg
fnsave
sbb
pop
jb
or
mov
mov
and
jg
into
call
mov
insl
mov
movsb
push
stos
push
xchg
in
cmp
mov
jb
lcall
in
sti
outsb
dec
ret
imul
js
test
addr16
mov
push
aaa
mov
cwtl
jecxz
incl
cmp
xchg
dec
pop
das
adc
and
out
decl
dec
dec
and
inc
dec
dec
inc
and
sub
inc
or
fisttps
xor
inc
dec
and
xchg
cmp
and
mov
adc
inc
or
clc
pop
fstps
push
cmp
dec
mov
es
adc
les
add
sti
cmp
cmp
xor
xchg
mov
mov
mov
xor
inc
sbb
in
push
dec
push
rcr
push
lahf
jne
insb
popl
sub
inc
add
cmpsl
and
outsb
adc
cmpb
push
dec
inc
imul
inc
push
push
mov
add
fstpt
xor
stos
adc
pop
xor
in
dec
inc
pop
adc
push
not
es
aad
in
outsb
fcomp
ret
push
dec
inc
dec
adc
xor
and
lcall
xor
jae
cmp
inc
cmp
push
adc
inc
loope
dec
push
shll
pusha
ds
and
das
bound
popa
jae
push
iret
and
jno
popa
mov
add
in
mov
add
das
filds
add
or
xchg
push
call
mov
add
sbb
add
jmp
orl
xor
jns
fcoms
scas
pop
fimuls
adc
filds
ret
mov
or
cmp
mov
fcoml
lret
add
jmp
sub
loope
xchg
popf
pop
jmp
stos
es
bound
pushl
pop
lods
inc
sub
jl
pop
pusha
shrb
test
dec
lea
add
sbb
add
incl
sub
sahf
fs
push
jbe
xchg
je
testl
add
incl
ss
fisubrs
mov
decl
cmp
mov
jb
test
pop
in
shl
out
insl
idiv
add
xchg
push
mov
push
fwait
xorl
test
cltd
jg
add
sub
test
inc
push
leave
jns
adc
loop
xchg
mov
stos
lea
test
iret
cmc
movsl
hlt
inc
add
xor
pushf
std
jg
pop
pusha
xchg
aas
push
inc
add
incl
xchg
and
fidivrl
imul
mov
sbb
in
ljmp
cltd
pop
jmp
jle
fisttpll
and
and
fists
pusha
and
dec
inc
xlat
push
into
xor
push
sub
iret
cmp
int
add
fistpll
fists
pop
xchg
adc
push
jns
fldln2
fnstsw
push
aas
shlb
xchg
out
adc
ljmp
lcall
mul
and
mov
or
enter
int3
add
aas
nop
or
iret
es
add
decl
pop
lock
sub
negb
xor
sub
sub
enter
ds
jbe
call
test
inc
jp
push
push
lds
jg
xchg
sub
or
push
cld
incl
je
ljmp
in
push
js
jecxz
sub
hlt
cmc
mov
aam
movsb
mov
aaa
lcall
pop
lds
out
jo
jle
insl
ja
lret
sbb
aas
add
dec
pop
pusha
add
insl
ret
jecxz
add
shl
sub
sahf
jne
lret
dec
or
mov
imul
mov
loope
loopne
fcmovu
mov
lods
std
incl
mov
rcrb
rolb
into
test
out
inc
pusha
pop
ret
ret
rolb
cmp
mov
mov
and
mov
sbb
adc
sub
cwtl
push
push
xchg
popa
pop
lea
xchg
ja
test
lock
js
jnp
cmpl
mov
jmp
pop
stos
push
push
inc
inc
sub
add
bnd
sub
jmp
sahf
pop
loope
leave
nop
sbb
addl
js
and
and
push
shll
decl
jo
cltd
loop
fsub
and
push
or
ja
pop
or
push
add
xchg
xchg
ljmp
xchg
xchg
inc
cs
loope
fstp
fst
lcall
rcl
mov
mov
aad
lods
lret
shlb
call
mov
mov
jns
jns
mov
insl
subb
pop
push
movsb
push
push
test
push
mov
incl
inc
xor
mov
mov
or
or
jle
or
add
jecxz
add
lds
call
dec
inc
xorb
push
ljmp
cmp
sahf
shll
add
push
cwtl
add
mov
push
and
pushl
xorb
lret
test
rorb
ficoms
xor
add
add
pop
and
pop
push
push
add
add
xchg
xchg
inc
daa
outsl
cwtl
add
dec
movb
addb
cmp
add
mov
add
adc
or
fsubs
jb
lcall
pop
cmpsl
stos
push
fnsave
pop
cmp
dec
test
cld
mov
adc
lods
sub
lret
mov
pop
fwait
in
dec
and
enter
and
daa
mov
sub
loop
mov
adc
imul
out
xor
pushl
pop
test
inc
dec
nop
test
push
rclb
cmp
pop
add
adc
fisttps
sub
scas
pop
sub
cmp
test
jo
adcb
iret
in
cmc
mov
mov
jae
inc
pop
add
mov
push
and
jae
mov
jnp
push
inc
movsl
jno
daa
push
pop
test
insb
sbb
xor
jle
lds
and
mov
pushl
inc
jecxz
or
or
sbb
ror
sub
jno
add
bound
mov
adc
lcall
dec
xor
push
das
fists
mov
jmp
lret
popf
push
lods
insl
push
mov
push
mov
adc
sbb
pop
movsb
ret
mov
mov
add
push
and
xor
pop
cmp
imul
jne
pusha
popf
pop
inc
jns
jb
dec
lods
decl
sub
imul
jg
movsb
sub
imul
outsb
and
outsb
in
sub
inc
outsl
inc
jl
xlat
mov
xchg
adc
jge
in
insl
fildll
xchg
sub
jbe
and
xor
inc
sbb
daa
sbb
jge
cs
fs
cmp
ds
std
fimuls
sub
sti
sahf
pop
test
jecxz
xlat
inc
das
inc
push
push
ds
sbb
mov
ja
movsb
dec
sub
xchg
loop
outsl
mov
insb
loope
insb
inc
sub
sub
push
jbe
and
sub
pusha
jge
xorl
and
cmp
loopne
inc
sbb
pop
loopne
loopne
pop
jae
jns
pop
inc
not
out
sub
cwtl
jmp
xor
leave
rcr
mov
iret
push
and
pusha
xor
or
sub
stos
add
ret
xchg
cmp
cmp
inc
adc
mov
mov
and
cli
mov
lds
inc
jae
arpl
insb
xor
mov
mov
add
sub
mov
adc
inc
sbb
lea
out
cwtl
and
daa
pop
mov
fcmovu
cs
aaa
sub
fisttpl
inc
xor
fldt
imul
fldt
das
test
out
push
test
push
jae
xor
inc
push
cltd
sub
and
xchg
sub
push
add
insb
adc
mov
aaa
push
sub
dec
gs
add
rcll
cmp
inc
test
ret
roll
sub
outsb
push
and
mov
or
mov
dec
pop
cmp
sar
jb
je
jb
imul
sbb
loope
and
sbb
je
xor
adc
decl
shrb
fs
bound
dec
pop
dec
pop
imul
lea
jnp
and
push
push
sti
and
loopne
and
ds
fldl
bound
xor
fsubl
jmp
imul
fdivrl
mov
and
sub
add
jbe
jo
pop
rol
mov
pop
sub
mov
mov
insl
pop
icebp
inc
pop
arpl
and
sub
xor
aas
sub
add
into
cmp
andb
mov
add
jmp
dec
shll
mov
jg
arpl
addr16
xlat
add
mov
lock
sub
push
int
pusha
ret
xchg
mov
inc
sbb
mov
push
push
jne
adc
mov
lahf
or
or
push
loopne
pop
dec
push
sub
out
adc
and
in
mov
or
insl
dec
sub
rolb
adc
js
adc
push
pop
mov
adcb
lods
or
or
aad
cs
sbb
jge
sub
adc
les
jae
mov
add
gs
fisubl
gs
sub
dec
fsubrs
push
or
sbb
dec
adcl
andb
xor
gs
mov
dec
push
pop
scas
add
mov
pusha
les
mov
xor
cli
jnp
call
imul
jbe
jge
pop
outsb
pop
sub
push
ja
int3
lcall
xor
pop
dec
push
inc
jnp
or
and
fisubrl
mov
cmpsb
and
out
jecxz
daa
das
cmc
jecxz
jo
add
imul
cltd
sbb
pop
jnp
xor
data16
pop
in
fcmovb
push
pop
sub
dec
js
es
popa
test
insl
sbbl
push
add
adc
js
gs
and
adc
das
sbb
inc
push
dec
mov
sub
scas
sub
or
imul
lahf
xchg
addl
inc
fdivrl
sub
sbb
test
mov
lea
outsb
sbb
aam
insb
insb
popa
inc
pusha
mov
push
mov
or
pop
stos
pop
add
cmp
push
movsl
and
arpl
add
push
inc
dec
adc
mov
and
lret
ret
jno
and
arpl
mov
and
dec
jo
rolb
adc
xor
fsubl
jb
leave
xor
imul
jae
in
or
and
sbb
sub
or
jne
rolb
imul
push
dec
sbb
dec
test
dec
fistpl
add
test
ss
ss
pop
bound
aaa
repz
mov
dec
xor
roll
inc
jb
inc
xor
ret
dec
push
mov
inc
cmpsb
xchg
in
mov
das
lea
mov
sbb
sti
jo
push
aam
push
and
sar
sub
or
sub
push
ds
int
fadds
pop
cmp
pop
pop
and
movsb
inc
test
jo
xor
adc
xor
jg
pop
mov
dec
mov
movsl
pop
les
pop
mov
pusha
inc
js
adc
dec
test
xor
mov
mov
mov
jne
dec
xchg
and
dec
stos
sbb
std
das
das
sub
jecxz
jecxz
and
insb
fs
test
and
das
cmp
or
gs
jnp
test
aas
cmp
and
sub
add
iret
sub
cmp
mov
inc
cmp
jae
and
dec
out
rcrb
mov
je
outsb
pop
and
mov
insb
jo
jp
movsl
gs
xor
add
jae
aas
pop
cmp
icebp
pop
inc
jns
cmp
insb
pop
fiaddl
pop
mov
and
into
inc
mov
lahf
pop
and
je
addr16
xchg
cwtl
push
jae
mull
lods
dec
iret
sub
es
add
xor
inc
mov
dec
jne
sbb
inc
mov
ficoml
popf
xorl
xor
adc
mov
enter
mov
cmpsb
inc
jb
xchg
scas
and
push
mov
jnp
pop
fcoms
sub
dec
or
sub
fsts
add
jns
push
nop
mov
dec
dec
jns
les
xchg
mov
stos
pusha
xor
imul
xor
or
adc
lods
in
jg
inc
jno
loopne
xlat
jne
das
out
mov
imul
cs
and
dec
ret
push
pop
xchg
cwtl
push
pop
xlat
and
aaa
jecxz
and
int
lahf
add
cltd
push
inc
je
push
and
adcl
cmp
rol
lods
adc
mov
insb
lret
adcl
lea
nop
sbb
notl
sub
and
fmuls
dec
add
imul
cs
sbb
pop
sub
pusha
insb
pusha
outsl
sarb
in
dec
add
adc
or
rcrl
daa
and
pop
push
sbb
nop
inc
and
push
dec
jo
les
stos
add
mov
push
or
imul
add
or
pop
or
lahf
lcall
arpl
arpl
loope
jne
push
xor
hlt
fisubs
imul
fidivl
jge
cmp
addr16
cwtl
adc
mov
aaa
jbe
adc
xor
or
sbb
popa
xchg
lods
cmp
sbb
xor
cmp
add
sbb
push
stos
and
out
push
sub
stos
imul
dec
ja
push
insl
adc
push
add
xor
int
les
adc
aaa
and
jle
dec
arpl
ret
and
adc
jmp
movsl
inc
jns
mov
xchg
or
inc
rorl
add
xchg
aad
jnp
jne
jne
and
shl
jmp
xor
inc
dec
inc
sub
dec
int
movsb
dec
jae,pn
arpl
int
adc
mov
addr16
jbe
lods
and
outsb
pop
jge
sbb
mov
popa
sarl
sub
lods
in
or
inc
lret
inc
or
mov
pop
or
sub
mov
pop
dec
gs
inc
xchg
add
adc
adc
sbbl
mov
inc
xor
sbbl
pop
rcll
mov
inc
adc
push
movsl
and
sub
lahf
jg
sbb
push
or
push
cmp
xor
ret
sub
dec
inc
push
lea
test
mov
inc
je
sub
add
pusha
cltd
add
imul
jns
xlat
ja
inc
andb
and
test
dec
add
ss
pop
mov
or
xor
lret
adc
and
mov
arpl
popa
push
imul
fwait
push
sub
lea
adc
push
cmp
in
aad
fcomps
gs
sbb
mov
imul
pop
inc
mov
add
and
or
fwait
push
sbb
dec
xchg
cmp
mov
out
push
mov
lea
push
sub
pusha
cltd
sbb
rcll
lea
xor
push
bound
or
sub
rorl
pop
sub
or
add
in
cwtl
and
xchg
adc
push
pop
push
shrl
lea
push
inc
call
leave
inc
xchg
inc
fs
xorl
or
cmp
jmp
adcl
and
xorb
fcmovnbe
cmpsb
sbb
orb
add
shll
lods
jbe
rclb
aad
add
xchg
adc
add
lods
lods
mov
test
insl
jp
ja
mov
mov
pop
sub
leave
pop
fildl
pusha
mov
add
push
inc
jae
adc
scas
scas
mov
aam
lds
sub
test
test
adc
xchg
popa
xor
jne
sub
inc
mov
or
or
cmp
in
add
xchg
mov
popa
adc
aad
jb
mov
int
cltd
negl
push
add
adc
sub
insb
mov
icebp
or
sub
or
cli
sub
movsl
out
outsb
lds
mov
mov
cmpsb
add
adc
push
test
cmp
lahf
xor
das
cmp
mov
mov
mov
push
insb
je
cmp
pusha
fwait
rorl
add
insb
sub
icebp
sub
sbb
sub
aaa
inc
loopne
xor
movsl
insl
xor
xor
pop
inc
movsl
cmp
cmp
aas
pop
xor
sub
sub
adc
fwait
or
pop
sbb
adc
test
cmp
or
int
neg
mov
push
sbb
into
mov
push
mov
jge
aaa
into
inc
sub
sub
popa
jb
sub
rcll
adc
push
xor
arpl
add
or
lahf
mov
sub
outsb
pop
jmp
jl
inc
mov
add
das
inc
adc
sub
rcr
add
jg
adc
inc
pop
mov
nop
loopne
mov
inc
add
sub
cmp
and
aas
movl
mov
jmp
mov
rcrb
cltd
aam
rcr
lcall
mov
outsl
adc
pop
sbb
sub
inc
push
ret
xor
insl
inc
or
sbb
jnp
inc
popa
mov
inc
dec
mov
sub
sbb
inc
enter
jge
inc
sbb
aas
and
cmp
sub
mov
push
mov
adc
pop
lea
lea
subl
mov
cmp
pop
cmp
lods
dec
imul
dec
inc
iret
std
and
pop
or
fiaddl
push
test
fwait
mov
jno
push
add
mov
mov
mov
xchg
sbb
mov
loope
xor
test
jno
adc
sti
shrb
test
mov
or
mov
jns
cmp
and
lods
push
and
arpl
add
push
rorl
adc
ret
stos
pop
add
sbb
inc
or
mov
mov
arpl
test
jnp
ds
mov
dec
out
jle
popl
pop
lea
xor
loop
pusha
sbb
xor
inc
iret
gs
sub
jo
and
mov
sarb
or
pushf
dec
lahf
daa
add
pop
outsb
je
jae
test
jae
xor
push
cmp
js
mov
orl
push
and
in
sbb
mov
daa
arpl
pop
mov
xchg
push
and
imul
pop
pop
jo
push
outsl
pop
sbb
int3
push
popa
or
jnp
ja
dec
ret
pop
pop
and
jae
popa
jbe
mov
adc
lret
add
data16
sub
jecxz
and
stos
ja
inc
xchg
mov
dec
rolb
bound
test
enter
xor
push
sbbl
insb
ss
ja
int3
or
sub
fstl
subl
adc
js
adc
sub
or
movsb
jbe
adcl
and
fdivs
dec
pusha
adc
sub
or
std
xorb
mov
sbb
and
inc
add
pop
in
and
add
test
js
das
push
xor
push
scas
xor
lods
pop
rorl
pop
in
data16
loope
and
mov
or
xor
or
hlt
arpl
jo
ret
mov
mov
lods
repz
sub
movsb
icebp
incb
jecxz
data16
loope
mov
jl
mov
cs
jle
push
mov
jb
sub
dec
jl
or
setg
jp
and
insb
outsb
outsl
jp
movsb
mov
push
lahf
and
and
es
sub
push
xor
add
js
or
ret
clc
push
jno
leave
inc
push
push
dec
xor
mov
data16
jae
pop
and
sbb
mov
or
inc
xchg
xchg
add
cmc
pop
pusha
jo
mov
fisubrs
push
loope
mov
inc
push
push
aaa
mov
adc
dec
imul
dec
out
movsb
xchg
aam
push
aad
daa
sub
sub
and
fs
nop
sub
push
jbe
push
pop
cmp
and
xor
push
inc
cmpsl
aas
push
push
pop
dec
call
xor
stos
in
outsb
dec
xor
or
and
data16
and
insl
sub
sbb
or
fists
ret
xchg
add
cmp
add
sbb
pop
outsb
daa
mov
bound
or
arpl
mov
push
jne
add
pop
inc
sarl
adc
jae
xchg
xor
xlat
pop
and
dec
mov
cmpsl
xchg
sub
mov
xor
ljmp
imul
or
push
mov
mov
push
movsl
mov
adc
rdtsc
xor
cmp
lret
mov
inc
roll
sub
lods
jmp
jno
push
cmp
jbe
push
orb
add
xor
nop
add
shlb
roll
xor
xor
mov
mov
test
movsl
lods
es
add
jb
fs
andb
sub
cmp
add
bound
cmp
cmp
inc
add
add
subb
dec
dec
xor
and
push
push
jb
dec
mov
dec
xor
sub
pushf
jb
push
inc
add
add
frstor
jle
push
gs
sbb
mov
push
cmp
add
or
sahf
xchg
add
lret
lock
and
xor
sbb
sub
ret
pop
sub
push
jnp
repz
sub
and
xor
aam
sbb
imul
xlat
push
aam
mov
push
fstps
mov
nop
ss
mov
data16
fidivrl
bound
stc
push
imul
ret
sbb
fstpt
sub
inc
lahf
fisttpll
mov
sti
dec
mov
dec
inc
inc
push
pop
dec
nop
subb
adc
mov
loopne
and
pop
pushl
jbe
jo
test
pop
inc
push
jb
adc
imul
test
fs
shrb
insl
jae
lret
mov
adc
ljmp
sub
aaa
pusha
movsb
cmc
inc
push
dec
pop
ret
push
ss
test
and
add
pop
inc
mov
mov
fcoms
sbb
jge
sbb
inc
rolb
jbe
test
pop
bound
cmpsl
test
cmp
jo,pn
sub
mov
dec
sbb
mov
push
jae
sbbl
sbb
inc
mov
jne
pop
inc
add
jns
rcll
xorb
aaa
and
enter
sub
insl
and
cwtl
pop
or
mov
xor
test
pusha
addr16
mov
insb
mov
xor
mov
and
test
add
push
jne
xor
outsb
and
das
cmp
gs
ja
outsb
add
subl
or
jle
inc
mov
lret
lods
aad
xchg
or
prefetchw
or
lret
add
push
and
pop
pop
loop
push
and
adc
addr16
mov
mov
shlb
scas
lods
sbb
add
xchg
dec
pop
xchg
cmp
adc
mov
xchg
push
mov
mov
sbbl
dec
cmp
push
xchg
xchg
jns
flds
nop
fcomps
push
and
mov
test
xchg
outsl
flds
stos
or
sbb
adc
jg
nop
bound
dec
add
push
test
jbe
mov
popf
pop
icebp
mov
in
cmp
dec
and
mov
rol
xchg
add
dec
insl
popa
imul
adc
push
sub
dec
xor
push
data16
fcompl
adc
leave
sub
mov
xor
xchg
arpl
dec
sbb
push
or
lods
cmp
xor
cs
test
je
push
shll
nop
andl
icebp
and
push
xor
pusha
repz
pop
lds
adc
ret
and
leave
adc
add
jbe
adc
adc
and
and
je
jge
mov
mov
mov
push
inc
inc
in
push
in
xor
push
xchg
sbb
push
jne
and
and
in
shrl
outsl
dec
shll
loopne
outsl
push
imul
arpl
loope
add
dec
mov
jg
mov
jne
inc
or
nop
push
ljmp
xor
push
lods
or
fcoml
push
aad
pop
lds
sub
sbb
lret
sub
in
sub
popf
and
pop
pop
sbb
mov
dec
inc
add
push
pusha
jnp
mov
arpl
or
inc
xor
sub
loope
mov
inc
and
subl
sub
sbb
push
nop
and
movsl
xor
fcmovnbe
aas
lods
jmp
inc
in
push
mov
cs
or
bnd
std
jecxz
pop
mov
movsl
push
and
sbbb
jge
dec
push
subb
and
inc
test
fldcw
xor
sub
sbb
xor
mov
addb
push
jecxz
cltd
push
sub
or
or
push
imul
sub
mov
pop
dec
sbb
push
shll
push
and
mov
fisttps
andl
xorl
pop
push
nop
cmpsb
push
or
mov
add
dec
fisttps
aad
inc
add
loope
add
aas
pop
mov
dec
adc
test
outsb
insl
inc
mov
adc
or
or
lds
fistpl
loopne
xor
cmp
call
testl
jne
movsl
adc
movsl
addl
lods
nop
and
ss
sbb
insl
push
mov
aaa
sti
sub
dec
push
dec
jl
subl
imul
inc
fcmovu
pop
sti
cmp
icebp
loopne
and
inc
divb
leave
pop
test
add
mov
add
ret
stos
pop
sub
popf
xchg
sysexit
mov
insb
sbb
outsl
repz
movsb
xchg
xor
push
sub
pop
jne
cmp
and
popa
cmp
xlat
xchg
cwtl
mov
or
pop
xchg
les
mov
aad
or
adc
and
jge
or
iret
xor
cmpsl
or
test
fimull
xchg
and
les
dec
cmp
push
push
cmp
mov
mov
dec
or
fcomp
test
and
sbb
push
or
inc
inc
or
pop
ja
mov
fwait
mov
sar
or
outsb
outsl
and
je
dec
inc
in
fdivrs
adc
arpl
jne
sub
mov
mov
xor
inc
jns
js
jns
xor
ljmp
add
scas
adc
mov
add
pop
jno
cs
or
xor
out
mov
sbb
mov
and
movsb
sbb
xchg
mov
pop
movsl
fistpll
js
dec
sub
mov
xor
jns
or
adc
and
jnp
add
dec
sub
add
or
or
and
or
push
add
cmpsl
sub
mov
mov
and
loop
sbb
call
pop
sbb
jecxz
xchg
stc
pop
pop
jo
adc
xchg
push
cli
add
and
outsb
cmc
imul
mov
push
arpl
bound
pop
movsb
bound
insl
sub
or
mov
inc
test
xor
je
dec
roll
jne
gs
sti
mov
xor
xchg
sahf
inc
add
sub
xor
fldt
pop
test
and
dec
movsb
pusha
dec
loopne
fisubl
dec
cmp
pop
xor
lret
or
mov
ss
push
fnstenv
daa
and
lods
xchg
comiss
adcl
inc
movl
lret
cmpsb
mov
sti
imul
inc
inc
or
pop
fadd
sub
outsb
or
push
call
shll
pushf
mov
mov
or
imul
aas
jne
xchg
cmp
roll
sub
aas
push
add
jecxz
jmp
xor
popa
les
jecxz
pop
pop
cmp
dec
fisubrs
inc
jo
sbb
push
les
inc
xorb
nop
or
in
xor
and
sub
push
sub
pop
and
xor
jbe
subl
hlt
lods
rclb
out
xor
and
shrl
das
test
push
jecxz
inc
mov
sub
dec
adc
jb
xor
imul
mov
add
mov
andb
dec
addr16
mov
loopne
lods
and
pop
or
add
cmp
test
fs
jno
jo
xor
cmp
dec
push
ljmp
and
add
sbb
nop
sbb
lods
jns
loop
adc
add
jne
jb
xchg
sbb
xor
nop
or
mov
shlb
push
jmp
or
mov
mov
or
lods
xor
bound
sub
out
aad
add
scas
xor
fsubr
and
sub
sub
add
lea
and
and
jns
dec
sub
or
gs
arpl
inc
test
mov
mov
pop
ljmp
sbb
test
adc
or
aaa
les
cmp
and
jge
aaa
sub
ret
mov
in
pop
mov
daa
aas
aaa
sub
jns
adc
daa
dec
pop
or
adc
jnp
in
in
dec
ret
nop
pop
in
jo
push
jge
adc
jb
add
outsl
fistpl
xor
subb
insl
js
cmp
js
xor
xchg
js
mov
outsl
dec
pusha
and
rolb
inc
pop
add
xor
leave
bound
xchg
imul
pusha
jbe
jle
and
xor
mov
andl
sbb
xor
xchg
pusha
ds
or
int
rolb
daa
loopne
dec
pop
inc
pop
rorl
mov
or
fstpl
xchg
or
mov
les
outsl
out
xor
pop
dec
fisttpl
cmp
sub
sbb
sarl
mov
cmp
mov
or
sub
cmp
ds
or
xor
imul
add
sbb
popa
mov
jo
xor
ret
out
pusha
mov
lock
std
addps
push
test
jecxz
pop
inc
and
in
inc
mov
jb
push
sub
jno
cmp
pop
inc
dec
outsl
js
mov
pop
movsb
fsubrs
add
pop
pushf
shll
jae
jne
mov
sub
std
mov
sbb
push
enter
sub
jne
lds
push
mov
andl
push
sub
push
mov
or
cli
inc
push
jne
sub
xor
iret
sub
test
inc
dec
jae
and
push
jb
or
xchg
in
decb
flds
loope
sbbb
dec
or
push
mov
or
mov
inc
cmp
pusha
outsl
mov
cmp
mov
sub
push
xor
xor
push
xor
or
pop
popa
pop
mov
addl
push
pop
jbe
pop
jb
sub
outsl
and
xor
mov
fcmovnb
jmp
pop
lods
cmp
xor
pop
pop
jnp
mov
dec
push
out
push
xchg
cs
mov
add
add
sub
adc
daa
sub
shrl
cmp
mov
inc
adc
or
sbb
test
sub
sbb
pushf
inc
arpl
add
add
add
and
add
das
lock
adc
rorl
fwait
mov
and
inc
in
enter
mov
nop
add
cmp
push
sbb
jb,pn
push
cwtl
gs
xor
add
lods
mov
add
xor
dec
xorl
lret
pop
outsb
arpl
popa
mov
add
sbb
sub
sub
xchg
mov
sub
jns
aas
ds
add
lds
push
outsl
addr16
push
dec
sub
ss
movsl
mov
xchg
dec
ja
out
push
sbb
adc
data16
cmp
enter
fwait
sub
mov
in
in
xor
pop
mov
pop
inc
ljmp
movsl
outsb
mov
push
mov
sub
adc
movb
aaa
daa
daa
test
push
nop
sbb
insl
cmp
imul
pop
outsl
int3
insb
pop
add
sbb
and
adc
lds
xchg
jl
cmpsl
addb
fxch
pusha
cmp
and
adc
fadd
jnp
inc
mov
inc
imul
es
add
adc
lds
adc
scas
mov
ja
xor
pop
xor
adc
fisubrs
cs
orb
pop
inc
or
push
gs
xchg
and
adcl
xor
pop
mov
mov
and
cmpsl
dec
adc
icebp
icebp
insl
inc
popa
cmp
or
mov
and
ss
pop
adc
push
inc
pop
push
inc
push
pop
pop
test
jbe
jae
pusha
adc
xchg
lret
jecxz
xchg
xchg
sbb
sub
int3
add
adc
cmp
or
rorl
adc
inc
and
inc
insb
dec
or
pop
xchg
inc
inc
lods
sbb
sub
popa
jbe
sub
popa
and
or
xor
roll
jae
sbb
push
repz
push
lea
fnstcw
xchg
movsl
mov
leave
lods
inc
or
dec
gs
jbe
or
xor
testb
stc
mov
loope
enter
dec
popa
xchg
inc
mov
fwait
inc
or
mov
sub
movl
pop
xor
inc
fcomps
mov
xchg
push
push
xor
int
cmp
inc
and
daa
push
mov
fidivs
test
sub
push
loopne
stc
dec
add
addr16
imul
aas
sbb
rcr
lea
push
mov
sub
sbb
mov
xor
xor
das
sub
adc
inc
inc
add
mov
imul
mov
jge
pop
cmp
adc
jne
arpl
add
pushf
mov
lods
and
add
fistpl
ret
xor
das
mov
cmp
adc
ss
push
mov
mov
jb
push
jge
and
int
xor
iret
icebp
xor
ret
add
inc
and
ss
jmp
pop
orb
inc
lea
cs
outsl
ja
dec
xchg
ss
ljmp
sub
lcall
rorb
xor
aad
and
push
in
loopne
jl
insl
imul
outsl
dec
jae
xor
pop
xchg
ja
jo
add
dec
in
adc
je
das
sbb
xchg
sbb
sbb
lods
sbb
pop
inc
dec
pop
lea
push
mov
mov
push
and
mov
mov
xchg
cmp
sub
cmp
or
std
dec
inc
pop
or
in
adc
adc
fs
fisttpl
pop
in
fistpl
stos
test
push
sti
or
addr16
adcb
sti
aas
lcall
pop
sbb
rcll
fisubs
movl
add
popf
push
bound
shrl
pop
dec
bound
mov
push
cmp
aaa
xorb
pop
fwait
push
pop
mov
adc
roll
rcrl
mov
fs
test
or
shlb
aaa
and
sbb
or
bound
adc
mov
pop
outsl
push
lock
shrb
push
rcrl
add
or
or
lds
or
stc
inc
mov
or
sub
dec
sbb
add
roll
jb
add
push
les
outsb
mov
sahf
mov
pop
mov
cs
aad
pop
mov
dec
enter
xchg
dec
dec
xchg
flds
add
mov
sbb
outsb
dec
pop
jmp
add
push
cmc
mov
adc
add
mov
ja
cmp
xchg
and
or
pusha
bound
and
mov
orb
cmp
or
out
in
pop
fnsave
cmp
ds
es
jbe
mov
adc
fsubl
adc
fs
add
adc
arpl
jo
fs
push
test
push
jae
arpl
in
xor
aad
movsl
test
das
test
and
and
add
adc
aad
adc
and
into
or
fmuls
loope
and
adc
addr16
xor
jmp
shrl
inc
mov
xor
mov
mov
iret
push
or
fbld
aaa
frstor
es
sbb
ss
dec
aaa
xchg
rcll
add
or
iret
lret
sub
push
sub
stos
push
jno
and
adc
orb
inc
stc
inc
lahf
inc
sub
mov
sti
call
andl
popa
and
xchg
sbb
add
sbbl
fcoms
or
adc
mov
sar
inc
fdiv
dec
ret
popf
mov
mov
aam
sbb
push
jo
mov
xchg
addb
push
xchg
psrlw
shll
and
popa
mov
jl
mov
scas
or
mov
sub
cmpl
adc
or
cmc
pop
fiaddl
stos
push
scas
test
xor
pop
jne
push
and
or
int3
inc
in
dec
fiaddl
add
mov
lods
push
jnp
inc
adc
cmpsl
subb
jecxz
and
mov
out
push
nop
stos
inc
xchg
jmp
arpl
jne
push
pusha
outsl
sub
imul
or
mov
test
dec
fistpl
push
mov
jnp
dec
or
andl
fld
add
inc
jg
fistl
sub
rcr
or
cmpsl
insl
adc
pop
adc
mov
inc
inc
fadd
pop
xchg
pop
incb
push
mov
popa
adcb
sub
and
adc
xchg
push
lret
mov
adc
pop
add
mov
stos
adc
push
bound
mov
or
xor
push
jae
or
jnp
mov
mov
test
or
cmp
roll
mov
mov
sub
adc
jne
push
pop
inc
xchg
fsts
add
add
sub
fldcw
and
js
jecxz
add
push
imul
jne
stos
sub
cmp
inc
dec
push
push
or
pop
jo
inc
adc
insl
xchg
sbb
or
pop
popa
pop
sub
daa
push
mov
cmp
dec
and
leave
xor
stos
mov
xchg
dec
pushf
test
or
adcb
add
pusha
and
cmp
and
jno
inc
cwtl
movsb
inc
stos
jne
sub
add
stos
add
mov
cmp
xchg
cmpsb
xor
popa
inc
jne
add
push
pop
aad
lds
test
mov
sub
pusha
lds
insl
daa
sub
cmc
movl
or
or
push
mov
pop
adc
pusha
push
das
push
shl
or
push
imul
fisubl
imul
jmp
mov
add
mov
mov
cmpsl
push
xchg
pop
inc
add
test
dec
dec
jne
testl
jne
pop
stos
jp
cmp
cwtl
lods
mov
inc
or
mov
add
pop
rcr
xor
push
fistpl
mov
pop
ffree
mov
add
sbb
rclb
pop
fisubl
mov
inc
insl
sbb
sub
test
xor
sub
outsl
adcl
pop
imul
in
adc
or
lods
lods
lea
les
push
and
dec
lods
lods
fucomp
das
dec
sbb
pop
mov
pop
inc
xchg
push
pop
dec
push
ds
xor
or
mov
mov
jge
int3
fldenv
arpl
daa
sub
jb
subl
and
ss
in
stos
and
insb
jne
sbb
out
pop
lods
shlb
sub
adc
pop
mov
or
test
cmp
dec
jo
js
insl
adc
add
mov
pop
dec
mov
fldenv
roll
xchg
fcmovb
testb
pop
jmp
clc
push
xor
outsb
fldt
dec
mov
sub
std
pop
push
adc
dec
loop
pop
push
outsl
or
and
sbb
test
xor
jo
enter
push
xor
daa
imul
mov
mov
inc
push
push
push
and
fstl
cmp
push
or
aad
mov
test
push
sub
mov
adc
fwait
push
mov
inc
adc
mov
les
add
dec
adc
lock
gs
or
dec
jne
dec
push
daa
jno
xor
and
lds
fidivrl
cmpl
insl
stos
and
push
arpl
xchg
jmp
pop
dec
pop
dec
inc
mov
dec
jo
add
push
and
in
in
test
cmp
imul
sub
inc
pop
inc
aaa
test
in
add
pusha
rolb
sbb
add
push
cmp
loopne
arpl
popa
or
adc
das
push
pop
xchg
inc
stos
adc
mov
sub
push
dec
sub
aad
add
sbb
outsb
sub
add
enter
sub
aaa
pop
fadds
sub
dec
addb
or
lret
xchg
jbe
lea
jns
test
mov
pusha
push
cmp
xor
and
pop
xor
inc
pop
push
or
jecxz
push
inc
and
sub
pop
and
andl
push
les
cmc
sub
in
sub
and
jae
inc
jl
arpl
je
xor
cs
or
insb
mov
arpl
pop
leave
clc
out
push
out
sub
and
fiadds
arpl
adc
faddl
cmpl
xchg
sbb
out
and
sub
jno
dec
jmp
mov
lea
gs
fadds
or
imul
sub
shrl
mov
popa
mov
gs
xchg
fs
iret
sahf
mov
mov
add
sbb
or
je
or
xchg
imul
cmp
and
insl
xor
outsb
sbb
lcall
arpl
arpl
cmpsl
orb
sbb
mov
pop
cs
jne
adc
cmp
dec
push
xchg
mov
dec
cs
jo
xchg
xor
push
int
jp
add
jae
jo
or
inc
mov
dec
pop
lahf
hlt
jle
std
xor
inc
inc
push
adc
es
cmp
cmp
adc
les
lcall
addr16
sbb
xor
inc
in
push
or
jl
dec
inc
sbb
jns
sbb
sbb
insl
xor
imul
add
mov
int3
jbe
inc
and
adc
pushw
outsl
ja
fsub
jo
push
sbbb
and
push
sub
loope
pusha
adc
jbe
adc
mov
sbb
xor
mov
jne
insb
jbe
ss
fsubp
mov
loopne
mov
dec
cmc
push
sub
jp
jb
bound
cmp
fdivl
jle
outsb
daa
jmp
and
shrb
ret
pop
sub
aas
cmp
push
arpl
insl
enter
push
aaa
incb
jp
mov
add
xchg
mov
insb
sub
mov
loope
push
lock
pusha
test
dec
pop
insl
jns
or
imul
xchg
and
sub
sahf
into
sub
or
dec
scas
and
sbb
push
and
test
cmp
xchg
xchg
and
jp
pop
pop
pop
adc
imul
jl
divl
xchg
imul
stos
bound
sub
imul
add
outsb
pop
push
fst
adc
push
pop
dec
lds
sbb
pop
add
push
inc
and
loopne
and
jecxz
inc
pop
and
sub
xor
cmp
pop
sbb
dec
aam
sti
dec
outsb
bound
cwtl
fstpl
pop
das
dec
das
xor
sub
inc
xchg
lar
or
outsl
rolb
xor
ja
ja
sbb
xor
add
add
jne
pop
mulb
push
gs
jmp
ja
loop
jns
jae
fs
sbb
mov
or
push
stos
pop
pop
addl
addr16
insl
mov
or
test
pop
rolb
in
lock
fs
mov
out
sub
mov
sbb
xor
and
pop
nop
aad
loope
sbb
or
or
jno
test
pop
jb
mov
mov
sub
and
add
sbb
lahf
js
movsb
arpl
sbb
bound
popf
pop
pop
xor
adc
mov
cmp
xchg
jno
in
inc
fidivrl
icebp
or
mov
test
and
out
bound
fcoms
push
xor
sub
push
and
leave
sub
loopne
scas
stos
jns
pusha
pop
push
mov
mov
add
sbb
pop
ja
and
adc
idivl
cmc
rorl
fwait
pop
dec
lea
sbb
mov
in
inc
mov
pop
xor
pop
pop
pop
insb
imul
xor
test
gs
mov
and
mov
js
sub
push
fwait
add
mov
insl
mov
xor
cmp
add
jecxz
xor
cs
jb
mov
sub
dec
add
movsb
dec
cmp
sbb
stos
or
sub
ret
mov
inc
push
pop
and
in
loopne
sub
fs
scas
mov
out
orb
add
std
inc
adc
pop
pop
or
cmpsb
or
pop
mov
lds
repz
push
jne
inc
es
cmp
aas
xor
not
fdivrs
xor
xor
ljmp
cltd
dec
push
dec
inc
and
mov
push
inc
iret
mov
dec
and
xor
add
test
andb
mov
mov
insb
jae
xor
xchg
push
cmp
and
int3
or
push
push
out
add
push
lods
pop
jle
xor
loope
or
jg
dec
sbb
jmp
sub
or
outsl
ret
push
add
xor
push
pusha
mov
xor
mov
orb
insb
pop
pop
mov
cs
cmp
mov
gs
and
jno
andl
mov
jns
add
cmp
or
pop
aam
xor
mov
mov
push
jo
push
dec
insl
mov
push
aas
push
ss
jns
and
and
dec
and
outsb
mov
or
mov
xchg
scas
lret
cli
jnp
rorl
xchg
shlb
xor
xlat
cmp
test
divb
cs
sub
loopne
pop
sub
js
addl
test
gs
sbbb
and
cmp
mov
cmp
or
mov
cwtl
mov
add
jg
cmp
ret
les
sbb
or
sbb
xchg
lock
insl
jae
xor
or
push
pushf
push
sub
cmpsl
mov
and
mov
fists
or
mov
xchg
xor
imul
and
mov
and
pushf
sub
jo
push
sub
sub
imul
inc
fs
sub
lea
ss
cmp
aaa
aas
push
sarb
or
dec
adc
or
stc
and
imul
jnp
ja
leave
in
xor
sbb
sbb
jl
rclb
push
jo
sub
xchg
das
xor
adc
test
jns
mov
fidivrl
sbb
sub
pop
mov
mov
jae
jno
inc
xchg
dec
popa
movsl
mov
mov
sub
mov
mov
adc
adc
ret
xor
sub
mov
or
insl
scas
daa
faddl
popa
adc
pop
pop
adc
fnstsw
les
mov
jp
dec
push
test
push
sbb
popf
retw
incb
dec
outsb
pop
jnp
pop
es
sbb
adc
inc
mov
dec
mov
imul
inc
dec
sbb
push
or
jmp
ret
fstpt
pop
outsb
outsb
stos
daa
sub
sub
pop
test
lods
test
shrl
and
test
cmp
jae
cmp
pusha
dec
or
adc
mov
aad
popa
ja
mov
xor
dec
insb
adc
jne
xor
push
test
ds
jns
push
bound
adc
call
fcmovnu
and
das
adc
mov
jge
adc
cmp
jbe
or
cmp
add
cld
cmpsl
adc
fldl
imul
outsl
sub
lods
xchg
lock
mov
insl
iret
je
mov
mov
ret
dec
lahf
test
pop
push
push
aaa
mov
arpl
imul
mov
and
push
addr16
xor
mov
shl
imul
push
jns
sub
stos
sub
cmp
addr16
and
sbb
push
mov
fldt
dec
rcrb
xchg
cmp
inc
and
movsl
push
mov
icebp
cmp
mov
pop
dec
jl
dec
pop
cmp
and
loop
pop
jge
mov
stos
pop
les
gs
js
sub
bound
lods
dec
pop
arpl
lods
push
lods
in
je
jno
and
sub
mov
mov
xor
jge
cmp
adc
in
cmp
and
test
arpl
xor
sbb
int
mov
dec
test
andl
sub
rorb
sbb
shrl
and
mov
mov
jne
sub
mov
pusha
ja
in
je
xchg
or
push
daa
adc
addl
sub
cmp
jge
adc
stos
xor
outsl
cwtl
test
pop
loope
mov
sub
cmp
sub
xor
mov
pop
cld
sub
push
ficoms
outsl
jmp
xchg
test
cmp
sub
add
pop
push
int
shr
cmp
fldenv
pop
jg
jb
mov
jmp
add
je
addb
test
ljmp
xchg
pop
push
mov
sub
inc
pop
inc
shll
sbb
pop
cmp
shll
arpl
stos
arpl
shll
xor
enter
jge
mov
iret
sub
stos
sbb
lds
rolb
jmp
dec
adc
inc
lods
xor
adc
mov
add
addr16
sbb
push
stos
xor
and
scas
push
ja
adc
dec
arpl
mov
cmp
jmp
jo
or
je
cs
pop
testb
ss
cvttps2pi
fldt
test
call
sub
paddsb
xor
xchg
pop
pop
sub
fildll
push
xorl
std
pop
adc
call
rorl
imul
test
jne
jge
outsb
pop
add
cmpsb
aam
mov
lods
add
addr16
jb
bound
cmpsl
mov
rorb
daa
sbb
sbb
fdivrs
in
adc
mov
pop
aaa
aaa
add
sbb
jb
bound
sub
inc
ja
add
or
lock
jmp
push
inc
pop
cmp
or
jg
xor
cltd
or
and
pop
and
rorb
or
lret
dec
push
mov
jl
rcll
insb
inc
pusha
sub
add
adc
out
flds
stos
ss
icebp
adcl
outsl
fldenv
sbb
sub
pop
mov
inc
push
sbb
dec
movsl
fistpll
test
and
jge
xchg
or
adcl
jne
sub
sub
sub
and
adc
into
hlt
pushf
dec
int3
cmp
xor
or
jne
addr16
mov
outsb
jns
pop
mov
imul
jmp
cmp
cmp
test
pop
ret
inc
sub
aam
test
cmp
xor
or
or
loopne
sti
cmp
jl
mov
pop
mov
cmp
cmpl
or
dec
or
cmpsb
sbb
inc
movsl
aad
mov
daa
add
mov
push
push
push
stos
adc
gs
ret
loope
jo
adc
push
add
mov
xchg
aas
and
pop
cmp
push
div
aam
sub
cmp
or
push
and
cmp
push
popa
pop
iretw
sub
mov
cs
adcb
stos
push
sub
sub
scas
xchg
mov
push
and
sbb
in
pop
int3
scas
pop
jo
arpl
bound
and
iret
cmpsb
fiaddl
jae
loope
popa
sub
cmc
outsl
sbb
lods
lods
insl
and
insl
insl
dec
pop
xchg
outsl
sbb
js
sbb
jbe
xchg
mov
and
sub
mov
xor
push
pop
sbb
pop
mov
mov
xchg
mov
mov
cmp
mov
test
and
sbb
push
test
push
lea
and
lret
jno
rclb
sbb
mov
or
aas
arpl
popa
mov
insl
insb
pop
lret
cmp
sbb
lds
cmp
mov
xor
pop
sbb
pop
push
mov
in
sub
sub
jne
and
cmp
cmp
add
pop
pop
xchg
adc
xchg
pop
and
adc
xchg
dec
add
nop
xor
icebp
dec
xor
cmp
bound
addb
test
mov
fld
push
jo
and
mov
lods
cwtl
or
frstor
pop
das
popa
mov
in
sub
dec
lahf
fldt
and
popa
popa
movsl
daa
sbb
sbb
bound
mov
stos
jmp
fnstsw
scas
push
dec
mov
dec
mov
inc
cmp
cwtl
pop
sub
pop
and
push
int3
and
cmc
cmp
es
pusha
sbbl
cmp
shll
in
dec
inc
or
sub
jbe
mov
stos
stos
sti
daa
fdivs
das
cmp
xor
mov
aad
pop
jge
fcompl
add
daa
cmp
and
sbb
cli
sub
xor
cmp
push
push
xor
inc
push
adc
inc
aam
sbb
push
mov
mov
fcom
movsb
sub
fildl
jnp
push
sub
sub
mov
pop
add
rcll
or
push
dec
ds
cmp
cmp
jo
xchg
xor
aam
dec
cmpb
shlb
jecxz
lods
sbb
lods
mov
and
jo
and
sbb
out
outsb
leave
adc
sub
xor
sbb
or
xchg
mov
cmp
shll
inc
jo
sbb
loopne
sahf
push
xor
mov
push
ljmp
sub
popa
loope
xor
js
jo
sbb
mov
xor
adc
insl
mov
lods
sbb
in
popa
fnstenv
adc
aaa
xor
int
enter
fisttpl
and
in
and
and
fstpt
inc
or
daa
cmp
mov
fwait
es
mov
insl
outsb
imul
in
push
cmp
push
stos
xor
std
lods
pop
inc
mov
and
insl
push
or
adc
pop
inc
cmp
adc
sbbl
mov
pop
sbb
jmp
add
inc
push
ljmp
pusha
dec
pop
inc
and
and
mov
xorb
popa
xor
mov
jmp
push
xor
orb
cmpsb
shlb
daa
scas
insb
inc
in
es
and
push
dec
ret
in
pop
cmp
stos
push
sub
cmp
mov
rcrl
jge
std
mov
mov
sbb
adc
and
or
push
roll
adc
sub
adc
and
aam
setne
mov
jo
dec
sbb
or
xchg
bswap
add
aaa
add
inc
push
add
push
pop
and
cmp
mov
or
js
popa
and
jge
inc
mov
xchg
loop
inc
push
inc
xor
dec
icebp
mov
mov
lea
enter
dec
cmp
mov
push
mov
test
sbb
cmp
lcall
add
mov
mov
push
lea
push
rorl
adc
ss
insb
insb
pop
daa
push
jo
cmp
xor
pop
nop
and
add
jb
pop
mov
insb
outsb
lds
and
movsl
inc
daa
or
aam
cltd
popa
xor
xor
sahf
jns
xchg
ret
mov
fwait
bound
mov
shrb
or
mov
out
or
or
sub
scas
xor
xor
imul
repnz
loope
sub
sub
rorb
mov
arpl
or
inc
lea
fistl
mov
xor
xor
lcall
call
adc
faddl
dec
push
cmp
mov
or
les
push
mov
mov
inc
sbb
pusha
test
add
push
cmp
lahf
lcall
cmp
mov
jno
jp
movb
inc
pop
inc
js
cmpsl
icebp
xor
addb
mov
mov
push
movb
push
int3
dec
sub
or
test
insb
add
icebp
rcrb
xor
pop
dec
dec
pop
loopne
xor
lcall
call
dec
xchg
pop
lcall
imul
loopne
inc
add
pop
xor
rolb
aaa
int
inc
xchg
mov
jmp
daa
jl
aaa
ret
sahf
mov
loope
jnp
sub
cmp
jns
jo
or
mov
and
test
sub
jb
sub
adc
test
loopne
ret
sub
repz
jnp
jmp
in
cmp
or
push
adc
cmp
sbb
mov
lods
icebp
and
mov
adcl
lods
loopne
sbb
lea
jge
in
enter
scas
xor
push
fldenv
arpl
pop
adc
pop
inc
or
imul
and
andb
add
push
lea
xchg
push
insl
dec
insl
inc
leave
orl
loopne
jb
sub
add
cmp
leave
ret
xor
jns
lcall
pop
push
in
mov
cmp
shrb
and
imul
sub
cwtl
fcoms
in
sub
pop
and
and
inc
ret
push
adc
sti
or
sub
lods
ret
mov
sbb
in
or
movsl
dec
sbb
adc
xor
sub
es
popa
adc
sbb
in
inc
add
dec
outsb
in
ljmp
mov
push
aad
mov
xchg
cmpsb
rcrl
sbb
sbb
ret
cmpsb
adc
lahf
add
dec
roll
cmp
pop
ljmp
jne
add
jns
loopne
rorb
or
xor
in
add
mov
mov
xchg
and
xor
xor
mov
push
adc
sti
cmpsl
movb
sub
sub
mov
mov
movsl
ret
stos
sbb
jae
sub
imul
jmp
shll
xor
mov
lea
and
adc
sub
test
shr
addl
mov
add
arpl
xchg
fildl
xchg
imul
add
push
dec
insb
xor
adc
jl
movsb
sbbb
xchg
fimull
xor
pop
daa
push
sbb
lods
jnp
sbb
call
loopne
adc
sbb
daa
pop
push
insl
inc
mov
outsb
adc
imul
jmp
push
add
and
add
sbb
dec
fs
pop
sub
inc
and
add
pop
into
jmp
inc
imul
add
dec
dec
iret
movsb
xchg
cmpsb
xchg
push
aaa
popa
push
rorb
fidivl
dec
pop
inc
push
ret
xchg
lea
mov
and
leave
xchg
pop
and
cmp
sub
sub
add
ja
in
inc
dec
jmp
push
jg
movb
das
icebp
jne
add
push
imul
cmp
js
pusha
movsl
imull
dec
and
xor
xor
test
les
adc
mov
dec
inc
movsl
fdivs
rcll
lea
cmpsb
xor
out
mov
loop
pop
sbb
mov
arpl
cmp
test
pop
std
cmp
mov
rcll
pop
inc
into
inc
dec
inc
inc
dec
xor
sbb
notb
movsl
fsubl
jns
inc
push
js
and
loope
or
jg
xchg
push
insb
adc
arpl
mov
push
or
lods
rorl
jns
sbb
test
cs
das
and
jbe
jmp
sub
and
sub
fadds
popa
sub
jbe
lods
ss
cmpb
add
ja
push
jne
push
dec
addl
or
xchg
sub
jg
int3
js
fidivrs
cmp
repnz
outsb
xlat
sub
insl
scas
jns
loopne
cmp
ds
push
lds
movsb
xchg
mov
xor
and
popa
dec
push
dec
inc
sub
lret
loopne
fnstenv
add
jb
sub
jnp
test
add
jg
les
mov
cmp
sbb
adc
cltd
sub
jp
cmpsb
xchg
call
aaa
or
sub
and
pop
or
jge
nop
push
mov
sbb
add
adc
movsl
inc
and
xchg
sbbb
sub
js
cwtl
movsl
pop
dec
add
sbb
cmpsl
jmp
sub
les
rcll
repz
ret
js
test
add
push
sbb
fsub
pushl
jns
cwtl
push
mov
mov
cwtl
sbbb
push
xchg
fsubs
je
push
xchg
lret
jl
and
pop
cmpsl
dec
cmp
adc
xchg
das
xor
jb
pop
subl
rcr
jge
sub
adc
scas
pop
adc
fldt
movsb
push
fisubl
daa
jae
and
push
sub
jae
mov
sub
ja
inc
movsb
xor
shl
add
jbe
adc
xor
mov
add
and
popf
jge
dec
pop
rcrb
mov
outsl
scas
cmp
mov
jnp
std
mov
cmc
scas
ja
push
inc
outsb
jl
push
in
mov
icebp
push
pop
pop
xor
cmp
sub
daa
imul
dec
aam
daa
dec
add
lods
cs
sub
dec
jno
div
push
sub
and
icebp
mov
es
pushf
sti
out
xchg
adc
jnp
fisubl
lcall
mov
add
jns
and
dec
enter
jns
inc
and
mov
jns
xor
sub
xor
or
and
jnp
cmp
inc
stos
mov
lods
bound
imul
pop
psrlw
cmp
mov
cmp
cwtl
ss
xchg
pop
sub
sahf
rcrb
and
inc
shrl
outsl
fiadds
ret
or
add
push
stc
ljmp
mov
test
shlb
enter
out
xor
sbb
and
push
xlat
sub
sbb
cmp
xchg
push
rorl
dec
inc
and
lea
mov
and
mov
jnp
jbe
ficoms
pop
mov
dec
jo
ja
sub
ja
or
cmp
push
xor
pop
push
xchg
push
inc
movsl
mov
mov
nop
movsl
or
xor
add
adcl
xor
push
pop
mov
or
xor
scas
sbb
rolb
xor
cmpsl
sub
aas
shlb
jecxz
loop
inc
cmp
shlb
jns
push
dec
insl
push
sub
mov
or
lods
addr16
push
js
in
dec
mov
insb
mov
mov
add
jne
aas
shrl
sub
cmp
mov
shrl
push
mov
xlat
sub
add
mov
std
shrl
fistl
aaa
lods
popa
das
fisubrs
lods
push
cmpl
inc
ja
lods
insl
or
mov
test
fistpl
es
pop
jo
dec
and
mov
and
ret
push
adc
test
subb
xchg
xor
fisttpl
jno
inc
xchg
jo
shrb
and
dec
addr16
push
xor
and
and
mov
or
mov
xor
adc
ja
mov
add
push
mov
and
insb
sub
mov
in
fldt
add
popa
mov
and
xor
movsl
add
mov
cmpb
stc
jnp
push
std
call
sub
sub
adc
imul
inc
and
xor
movsl
fwait
rorb
das
insl
loopne
dec
jmp
mov
pop
fildl
mov
loop
or
pushf
inc
push
xchg
mov
mov
arpl
sub
or
or
sub
or
outsl
adc
enter
jnp
pop
enter
inc
adc
adc
push
sarl
mov
dec
cmp
lea
sbb
shlb
adcb
pop
arpl
loop
jp,pn
cmp
cmp
sub
in
adc
rorb
movsb
fwait
cmp
nop
cltd
sbb
push
and
pop
add
and
es
mov
sub
dec
mov
fdivl
dec
xor
cmpsl
popa
jo
gs
sahf
xor
or
lods
loope
or
mov
int
mov
lods
mov
inc
inc
pop
xor
jo
mov
lods
xor
or
aam
or
pusha
xor
xchg
inc
nop
popa
les
sub
adc
or
sub
mov
sbb
and
rclb
stos
cmp
jg
sub
xchg
stos
and
sub
sbb
push
frstor
mov
in
mov
add
std
mov
mov
outsl
outsl
outsb
dec
stos
add
test
inc
cmpsb
lods
jge
xchg
mov
fsubrs
add
cwtl
ffreep
push
lcall
nop
cmp
ret
cmp
insl
pop
pusha
push
dec
mov
test
pushl
jns
push
dec
imul
hlt
arpl
pop
mov
mov
inc
lahf
movlps
fadds
pushl
sub
dec
sti
loope
pop
adc
outsl
push
adc
ss
dec
outsb
mov
adc
shlb
adcl
insb
or
sahf
inc
les
sbb
xor
shll
mov
inc
xor
cmp
mov
pop
and
jmp
notb
or
inc
arpl
mov
xchg
movsl
mov
fimull
jno
pusha
add
and
push
in
and
insb
sub
xor
dec
push
out
nop
stos
icebp
dec
push
outsb
cmp
cmp
mov
dec
daa
nop
or
mov
insl
test
mov
pop
inc
sbbl
xchg
daa
movsl
add
loop
test
lock
fldt
int
xor
cwtl
mov
sub
cmpsb
pop
inc
add
loopne
lea
mov
mov
gs
insl
or
mov
test
sub
sub
decb
mov
xchg
xchg
or
xor
mov
jno
sub
inc
sub
xor
push
dec
jo
pop
or
mov
inc
data16
mov
mov
xchg
and
shlb
ds
or
loope
sbb
inc
fsts
mov
sbb
rcrb
test
jo
push
jb
push
les
push
ret
jae
leave
lret
scas
mov
orb
and
xor
ss
add
sub
call
pusha
lahf
addb
jl,pt
das
sbb
popa
arpl
aaa
or
cs
aas
xor
or
cmp
jno
mov
mov
dec
flds
aad
push
mov
sub
mov
and
add
popa
sbb
shll
arpl
dec
pop
xor
imul
aad
xor
push
adcb
ja
sbb
mov
mov
dec
mov
ret
cltd
in
cmp
xor
jb
mov
cs
jnp
mov
xor
dec
or
dec
ljmp
push
hlt
mov
in
je
fidivl
es
imul
mov
or
out
pop
push
mov
sbb
popa
sbb
sub
rcrl
mov
arpl
xchg
and
xchg
outsl
stc
sub
lods
push
popf
mov
push
sbb
xchg
xchg
aas
aad
adc
dec
or
or
das
lret
push
sahf
shrl
push
dec
inc
adc
int3
fsubl
loope
xchg
cmp
dec
lods
add
or
arpl
xor
pop
test
jb
add
push
mov
loop
das
sub
sub
pusha
cmpsl
add
mov
nop
loopne
lahf
jnp
imul
mov
xchg
and
mov
adcb
and
popa
out
push
mov
mov
cmp
outsb
inc
mov
imul
dec
push
sbb
out
popa
ljmp
or
cmp
cmp
xor
mov
es
in
mov
bound
add
push
notl
inc
sbb
popf
imul
inc
cs
jne
daa
adc
adc
imull
cwtl
sub
mov
sbb
xlat
addl
cmp
stos
sub
mov
or
mov
mov
sbb
lret
orl
or
pop
insl
jno
outsb
outsb
lods
dec
mov
das
jns
xor
or
imull
pusha
jo
scas
pop
popa
add
scas
mov
mov
and
ficoml
daa
sub
dec
les
jne
pop
xchg
mov
xchg
and
dec
mov
pop
xchg
jnp
add
test
pop
add
outsl
movsl
adcl
hlt
xchg
push
shrl
pop
test
fisttpl
cmp
push
mov
in
and
mov
pop
out
pop
adc
xor
sub
cs
inc
imul
lods
les
push
inc
sub
dec
mov
subl
add
ljmp
mov
pop
pop
mov
pminsw
popa
mov
add
sub
xchg
fadd
sbb
xor
int
sbb
js
jns
add
bound
or
pop
inc
and
or
das
aam
int3
mov
jle
out
pop
pop
sbb
and
cwtl
sbb
popa
outsl
int3
inc
sbb
sub
sbb
xchg
xor
bound
pop
xor
leave
sbb
push
sbb
fs
sti
adc
dec
dec
push
or
inc
inc
inc
lcall
and
pop
testl
jnp
movsb
push
xchg
leave
mov
cmp
loop
das
sub
lods
inc
push
cmp
inc
add
sbbl
test
fcomps
test
and
adc
inc
stc
daa
pop
hlt
and
push
pop
arpl
pusha
mov
xchg
lea
inc
mov
daa
jo
push
aaa
andb
xor
mov
jne
inc
je
aad
lds
insb
lods
push
sti
cmp
pusha
mov
insl
popf
int3
popf
js
insl
bound
outsl
inc
xor
and
dec
icebp
jge
loopne
es
sbb
movsl
mov
cs
push
mov
pop
sub
adc
pop
and
je
cs
jl
sahf
shlb
shrl
and
rorb
daa
adcl
mov
jle
and
mov
ds
dec
addb
pop
sbb
pushf
mov
in
jno
pop
xchg
out
xorl
push
and
inc
jo
dec
xor
adc
or
aad
fisttpl
mov
test
push
test
call
dec
sbb
and
add
inc
xor
xchg
pop
fwait
and
add
sbb
push
incb
push
sbb
bound
push
imul
or
inc
inc
fs
ljmp
bound
stos
and
xchg
push
or
test
jne
push
adc
xor
mov
ret
or
pop
out
add
cmp
or
sub
aaa
sub
jge
cmp
or
cmp
fs
lret
lea
addl
add
xor
sbb
mov
xchg
bound
adc
jo
imul
inc
and
cmp
fimull
and
xor
scas
stos
add
sbbl
add
rolb
test
jo
jecxz
add
mov
stos
pop
repz
xchg
orl
adc
nop
dec
xchg
cs
mov
loopne
inc
or
and
and
cmp
dec
cmc
jcxz
mov
aad
sub
jnp
and
in
insl
daa
insb
sbb
nop
xchg
push
test
in
fucom
and
ss
push
outsb
aad
xor
push
rcr
fcomps
imul
lahf
cmp
cmp
sbb
fstpl
aad
pusha
ja
repnz
xor
cli
sub
pusha
insb
addr16
add
imul
fisttpll
cmp
ja
fstl
fildll
sub
push
in
daa
mov
mov
aam
dec
mov
mov
int
outsb
sub
mov
sbb
inc
and
jns
push
sbb
sbb
mov
mov
or
xor
xor
mov
int
inc
ss
test
push
add
mov
rol
cltd
je
or
inc
insb
jp
shrb
outsb
das
shl
imul
mov
pop
test
pusha
push
dec
sub
jp
leave
test
movsl
add
lods
mov
test
inc
aad
push
lods
xchg
sbb
adcl
pop
xor
es
add
adcb
popa
cmp
or
cmp
add
dec
popa
insl
test
ja
bound
mov
mov
test
cmp
xor
dec
jnp
leave
and
sbb
pushf
lock
inc
leave
pop
pushf
sbb
adc
daa
je
movsb
lock
sbb
jo
xor
mov
adc
repnz
lods
roll
lea
or
test
pop
xor
push
in
lods
cmp
lods
inc
add
pusha
add
mov
cs
push
and
sub
sub
push
dec
add
rorb
and
push
dec
jne
rorb
pushf
mov
pop
sub
pop
sub
add
gs
les
inc
inc
add
outsl
mov
add
jae
in
mov
push
adc
mov
insl
pusha
add
std
insb
sarl
and
and
inc
sbb
ss
inc
sub
movsl
movsb
adc
inc
loope
push
push
sbb
inc
xchg
fnstsw
sub
push
sbb
stc
cmpsl
adc
mov
push
pop
sbb
inc
mov
test
ss
cmp
filds
imul
inc
mov
or
sbb
jae
lods
rol
adc
jecxz
nop
mov
push
ret
mov
and
inc
or
les
aad
adc
movsb
xor
pop
cs
xor
push
add
jne
inc
pop
addl
adc
sub
outsb
imul
mov
sbb
push
pop
mov
fadds
jnp
and
sbbl
fisttpl
outsl
cmc
adc
cmc
sub
mov
inc
jecxz
sbb
and
sub
ds
sub
das
inc
xor
jo
sub
adc
mov
pop
dec
or
sub
pop
jo
flds
ret
popa
popa
int
mov
ret
ret
test
sub
shlb
imul
not
push
and
out
add
inc
sub
jl
add
mov
ja
dec
lods
push
les
sbb
or
pusha
adc
insl
and
stc
inc
adc
adc
mov
test
push
and
cltd
outsb
add
inc
insl
in
fs
mov
adc
shll
aad
cmp
add
dec
imul
icebp
pop
popa
add
push
pop
or
dec
xor
imul
dec
bound
adc
or
pop
test
mov
sub
mov
cmp
inc
push
or
in
jae
mov
push
insb
addr16
fs
push
adc
push
jge
mov
stos
xor
inc
inc
or
xchg
adc
jno
push
cltd
cmp
dec
sub
xor
sbb
jb
mov
je
jbe
adc
cwtl
outsl
jnp
imul
ret
mov
push
sub
xchg
stos
jo
push
mov
add
rolb
test
inc
cmp
dec
adc
inc
push
mov
lea
push
orl
push
movsl
aas
stc
fwait
mov
dec
add
dec
fistps
add
jg
loop
or
sbb
xchg
jbe
imul
or
pop
arpl
lea
inc
es
cmp
add
and
sbb
push
rorl
sti
dec
orl
adc
nop
loope
arpl
aaa
jbe
inc
adc
cmp
push
aad
xchg
cmp
sbb
incl
mov
cmp
and
adc
mov
mov
lods
lods
xor
lds
daa
movsl
mov
hlt
mov
push
adc
mov
adc
jae
push
mov
cmp
cs
jne
xchg
dec
adc
jp
or
adc
inc
inc
sbb
dec
or
xchg
lds
loopne
jae
push
pop
mov
jnp
xchg
push
mov
cmp
cmpb
adc
mov
fwait
out
xchg
lret
sbb
push
jo
push
mov
clc
pop
sub
add
shlb
push
push
dec
jg
xor
mov
push
addb
fsubs
dec
cmp
rolb
mov
test
and
mov
rol
lods
mov
cmp
sub
fcomip
jne
mov
mov
sub
xchg
jmp
jns
es
inc
push
movsl
sbb
mov
adc
fcmovbe
and
cmp
adc
loope
out
push
cmpsl
adc
adc
les
add
pop
push
ja
sbb
jge
push
push
xchg
out
push
jno
or
mov
jo
and
sti
pushf
xor
dec
sub
fnstenv
gs
aas
mov
popf
cmp
sbb
imul
mov
sub
lds
xchg
push
loop
movsb
sub
inc
push
js
xchg
loop
aam
imul
and
dec
or
or
xchg
adc
je
cmp
mov
cmp
dec
in
repnz
or
adc
addl
subb
cmp
das
and
jb
add
push
insl
adc
inc
fcompl
es
adc
cli
test
cltd
fmuls
cmp
sarb
fimull
mov
dec
xchg
enter
xchg
adc
sub
xchg
dec
push
inc
inc
adc
or
fisubs
sbb
push
push
sub
mov
lret
out
lock
or
ja
lods
inc
pop
ss
jnp
jb
jl
sarb
adc
inc
sahf
movsb
in
pop
dec
andb
outsl
inc
jae
xchg
popa
mov
and
inc
add
mov
add
addr16
mov
pop
mov
mov
bound
mov
pop
outsl
inc
fsubs
aas
dec
aas
enter
sub
push
gs
call
js
mov
cmp
mov
sub
shrb
cmp
or
sbb
xlat
xor
adc
lock
addl
sti
in
inc
jae
cmp
fisttpll
and
xchg
sti
outsl
push
adc
dec
mov
xchg
inc
or
mov
mov
and
pop
pop
adc
sbb
or
inc
fld
jecxz
insl
sbb
popf
dec
sbb
fs
jns
adc
test
inc
aad
sbb
push
jo
fsubrs
xor
xor
cltd
add
adc
sbb
stc
pusha
ret
cmp
adc
xchg
and
out
lret
fsubl
lea
adc
inc
cmpsb
popa
dec
mov
mov
mov
lahf
orl
mov
lds
ret
bound
imul
push
popa
data16
mov
pop
in
insl
inc
dec
sarb
jbe
sbb
and
push
aas
jbe
xor
test
and
movb
inc
imul
leave
scas
or
insb
mov
stos
xchg
sbb
push
or
pop
call
es
pop
dec
repz
sbb
push
daa
sub
bound
iret
dec
test
inc
jns
or
and
and
and
pop
pusha
subb
fs
jne
or
push
mov
sub
test
push
sbb
aam
inc
or
outsl
push
fdivrs
xchg
adc
rorb
mov
nop
inc
add
add
add
ret
and
add
xchg
pop
add
xor
inc
push
mov
push
push
and
mov
lock
mov
xchg
hlt
or
addl
aaa
xor
or
cmp
or
or
inc
sub
pop
movsb
mov
dec
scas
sarl
mov
movsb
xor
js
ljmp
or
loopnew
adc
add
cmp
dec
push
pop
sbb
dec
or
pop
sub
loopne
add
push
add
mov
popa
mov
movsl
fldl
and
add
mov
or
mov
push
and
cmp
pop
les
cltd
and
sysret
mov
ret
and
push
insl
mov
push
xor
add
push
mov
push
cmp
andl
add
das
add
enter
incb
or
jae
and
pop
dec
inc
mov
fildl
sti
jg
push
cwtl
fs
pop
std
inc
add
dec
adc
push
and
mov
pusha
mov
cmp
mov
xor
cmp
aaa
or
xor
mov
sbb
xor
or
sbb
insl
push
sub
push
mov
rcrl
fs
pop
push
add
es
xchg
lea
lea
roll
daa
inc
movsl
push
add
xchg
or
adc
add
data16
sbb
xor
add
sbb
subb
push
jb
pusha
cmp
lods
sub
xchg
jno
or
or
adc
and
bound
xlat
adc
add
add
rcrl
inc
stos
in
bound
ss
and
adc
sub
rcll
cltd
sarl
push
in
sbb
movsl
cwtl
fs
xchg
adc
loope
add
mov
scas
lods
inc
mov
push
pop
cmp
daa
and
cs
inc
rclb
sbb
mov
ret
jbe
movsl
decl
orl
pop
xchg
add
jecxz
rorl
insl
adc
es
jg
add
adc
dec
es
or
and
out
rolb
xchg
push
sbb
data16
xchg
inc
add
inc
cmpsb
mov
daa
add
nop
add
add
push
pop
adc
dec
push
inc
inc
aaa
ljmp
or
add
fwait
iret
mov
repnz
insb
cmp
dec
dec
movsb
sbb
add
dec
xor
mov
or
add
jne
xchg
inc
adcl
jb
jo
and
cmpsb
add
adc
push
push
add
aaa
push
dec
loope
inc
dec
jne
or
shrl
pop
outsl
xor
and
out
inc
mov
or
and
or
jmp
adc
sub
rcr
sub
dec
pop
sbb
inc
inc
iret
push
adc
add
mov
dec
mov
mov
pusha
cwtl
adc
add
jns
rclb
shrb
ret
fistl
jno
sub
xor
mov
test
gs
dec
rol
dec
mov
fidivl
jae
push
ss
in
ret
jnp
and
insb
in
mov
imul
cli
add
mov
sbb
into
and
and
stos
and
fmuls
pop
pusha
inc
xchg
fmuls
pop
dec
add
ret
pop
mov
mov
and
fmull
aam
mov
jne
sbb
adc
test
int3
adc
push
and
negl
rclb
in
add
jnp
inc
sbb
and
sub
and
outsb
adc
push
jge
sbb
fiaddl
data16
mov
dec
xor
sub
imul
sbb
and
dec
inc
js
add
mov
jnp
xchg
jbe
cmpl
or
push
inc
push
xchg
pusha
inc
ja
inc
pop
pminub
test
arpl
dec
insb
add
sub
ss
dec
pop
sub
add
mov
insl
in
popa
or
loope
and
out
faddp
xchg
cmp
xor
lea
sbb
pop
jbe
xorl
push
xor
adc
cmp
loopne
xchg
xchg
add
lds
jge
addl
push
iret
sub
stos
das
sbb
inc
pop
dec
sbb
xchg
ss
mov
outsb
rcrl
fmull
adc
subb
inc
mov
pop
mov
insb
inc
mov
ja
adc
push
add
inc
sbb
xchg
adc
and
or
pusha
popf
cmpsl
mov
shlb
add
lahf
out
sub
rcrl
or
inc
sti
mov
or
push
lods
arpl
sbb
scas
or
enter
pop
cmp
adc
push
je
cwtl
mov
and
or
lret
adc
push
shrl
xor
jecxz
cs
shlb
and
das
movsb
cmp
pop
cwtl
ret
push
xor
nop
jbe
sbb
adc
push
fldl
cmp
mov
or
mov
mov
popa
sahf
sbbl
in
nop
fsubs
and
mov
adc
sbb
dec
sbb
dec
outsl
cli
push
inc
sub
daa
bound
xchg
outsl
mov
daa
out
sub
sub
add
rorl
push
pusha
mov
ja
and
enter
inc
imul
push
sbb
adc
mov
in
inc
push
sbb
xor
and
aaa
mov
or
dec
or
and
movsl
or
insb
andl
jb
mov
jb
stos
and
popa
insb
pop
or
xor
push
add
dec
in
push
test
push
fwait
sbb
movsl
push
dec
push
xor
cmpsl
ss
addr16
push
mov
mov
lea
push
shrl
inc
sbb
movsl
jg
sub
dec
dec
push
and
mov
cmp
push
outsb
sbb
inc
inc
js
add
imulb
outsb
mov
or
dec
int3
inc
mov
jns
adc
push
mov
test
sub
jg
push
outsl
push
jo
fs
sub
lods
and
mov
loop
xor
inc
es
dec
pusha
les
mov
arpl
xor
pop
bound
adc
popa
sbbb
add
mov
push
mov
inc
ret
and
mov
pop
sub
das
mov
sbb
dec
xor
and
push
bound
arpl
sub
addb
subb
pop
sbb
sarb
push
cmpb
icebp
lods
or
sbb
sub
jg
and
cld
xlat
push
shlb
mov
mov
cmp
and
test
jae
lock
and
pop
xor
pop
lahf
adc
push
clc
je
sub
fsubrs
jnp
inc
je
sub
inc
outsl
jo
pop
js
addb
add
ret
xor
shrb
das
lea
pop
cmp
or
repnz
push
push
jbe
jle
dec
data16
jne
sub
add
sub
shlb
mov
xchg
lret
push
sub
mov
add
mov
dec
adc
cmp
and
or
sbb
xchg
sahf
or
cli
out
movsb
inc
addl
push
or
test
sbb
sbb
popa
mov
and
mov
arpl
lcall
adc
add
mov
jo
jno
xchg
lock
add
mov
mov
mov
dec
pop
mov
andb
push
js
push
and
mov
insb
sub
add
dec
or
nop
outsb
loop
es
mov
sub
push
push
sbb
sbb
inc
mov
into
xor
pop
sbbl
push
pop
dec
or
daa
jae
addb
arpl
mov
dec
sbb
pop
xchg
sbb
adc
arpl
xchg
aam
inc
sbb
xor
pop
jb
sbb
mov
lods
lea
sub
adc
mov
int
sub
sub
mov
mov
orl
aas
push
aaa
test
jno
rcll
imul
push
jno
adc
pop
cmp
shrl
cvtdq2ps
cmp
pop
xor
outsl
inc
int
push
adc
mov
insb
jg
je
jne
imul
cs
push
jne
sbb
jno
jae
test
add
cmpsl
arpl
pop
mov
addr16
shl
cwtl
and
cltd
imul
pop
or
movb
divl
and
mov
lcall
sub
xchg
or
dec
mov
sub
adc
mov
lret
popf
aaa
cmp
sub
or
mov
leave
and
loopne
jbe
and
call
aam
loopne
arpl
jno
enter
and
jbe
jmp
sub
mov
xor
dec
inc
and
aad
sbb
xor
cmp
pop
pop
sti
pop
jo
push
xchg
stos
std
inc
pop
inc
xor
loop
sahf
sub
insb
xor
es
and
les
sbb
mov
and
jne
adc
lods
push
mov
inc
and
movsl
inc
je
xchg
adcb
das
push
cmc
xorl
inc
sbb
xchg
and
mov
cmp
ret
xor
mov
insl
and
sub
jmp
das
inc
adc
aaa
mov
adc
jns
jecxz
push
movsb
sbb
or
lods
dec
lret
in
xchg
sub
sbb
inc
xchg
mov
xor
mov
cmc
lcallw
sub
lods
dec
cwtl
adc
sub
mov
or
xor
mov
and
pop
int3
cmpsl
adc
mov
loope
dec
sbb
dec
pop
push
adc
mov
outsl
mov
add
fs
push
xchg
jbe
or
sbb
arpl
sbb
insl
insb
add
data16
pop
sub
and
ret
and
mov
xchg
and
jmp
xor
xchg
shlb
inc
xchg
cwtl
dec
cld
repz
sub
mov
fcomps
ss
adc
dec
mov
mov
add
pop
mov
and
sti
pop
add
daa
xchg
and
add
in
and
hlt
push
cmp
daa
adc
jg
pop
lret
cmp
add
lods
ret
xchg
and
xchg
xorl
inc
stos
icebp
test
xor
cmp
add
ja
dec
add
add
pop
inc
sub
add
add
sbb
mov
add
mov
add
inc
xchg
push
sbb
in
in
add
xchg
insl
or
prefetchnta
outsb
add
push
inc
adc
jo
fmull
or
xor
movsb
dec
xor
pop
inc
and
push
aas
lock
ficoms
sbb
shrl
inc
scas
orb
add
and
jl
mov
push
je
idiv
sub
mov
pop
rolb
sub
xchg
loopne
lret
pusha
popa
mov
outsl
and
dec
es
cs
outsb
cmpsl
loope
insb
jae
xor
lock
sbb
add
push
xor
jecxz
inc
lcall
jb
mov
daa
or
and
out
lds
jo
or
data16
add
dec
xchg
incl
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
cmp
dec
add
