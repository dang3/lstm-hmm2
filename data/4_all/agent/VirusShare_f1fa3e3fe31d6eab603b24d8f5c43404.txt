out
int3
call
inc
outsl
outsl
insb
gs
outsb
add
or
add
inc
popa
insb
jae
add
jb
gs
push
jns
je
insl
add
xor
or
jae
inc
out
inc
push
push
cs
jmp
or
outsl
jb
dec
outsb
je
subb
divb
jg
test
insl
popa
insb
insb
add
int3
fistpll
aaa
mov
addr16
cmpsb
jbe
lret
cmp
jns
call
mov
mov
das
push
int
call
imul
out
inc
popa
push
sub
add
mov
adc
divb
cmp
push
push
inc
fdivr
mov
pop
add
dec
popa
je
jbe
dec
mov
add
jmp
out
fcomps
cld
test
inc
js
outsb
fs
xchg
xchg
in
jne
add
outsb
arpl
int3
sahf
loope
mov
je
pushf
mov
add
adc
push
cmp
xor
pop
xchg
cs
imul
or
or
cmp
and
add
iret
xchg
mov
stc
pop
xor
addr16
and
and
push
jae
push
jle
cmp
or
daa
std
mov
lock
or
es
or
push
popa
mov
pop
popa
and
test
or
and
es
insb
popa
jae
add
or
rcrb
dec
enter
push
inc
push
push
dec
push
add
add
imul
inc
adc
and
cld
push
add
in
sub
add
fcmovne
leave
in
int3
add
xor
xor
or
and
push
adc
push
fstpt
arpl
adc
sub
aaa
insb
push
andps
repz
dec
dec
cltd
jecxz
add
push
push
push
popa
adc
mov
adc
dec
data16
push
sbb
in
or
jo
inc
mov
insb
and
mov
std
inc
sbb
mov
inc
adc
jmp
sub
imul
mov
push
dec
std
sbb
mov
xor
add
cmp
add
arpl
popf
mov
or
das
add
dec
repz
aas
rcr
inc
lock
dec
rorl
add
lods
enter
loop
push
pop
jbe
jecxz
decl
push
add
sbb
mulb
inc
pop
fs
das
mov
lock
sub
or
jge
in
pushf
sbb
nop
and
inc
fistl
adc
ss
fs
add
or
mul
pop
sahf
in
testl
sbb
dec
pop
sti
test
repnz
pop
cld
ret
dec
add
out
decb
incb
xlat
sbb
imul
arpl
ds
test
push
inc
jb
popa
add
fcmovnb
sbb
mov
add
aas
adc
jae
lret
inc
and
mov
loopne
imul
inc
or
push
fldl
xchg
das
js
inc
xor
jbe
jne
sbb
jp
add
mov
jns
push
add
xor
dec
popa
insl
pop
repz
add
cmp
push
pushf
in
or
packssdw
add
jo
mov
push
popa
adc
in
shl
addb
outsw
ret
arpl
push
fsub
push
sub
fmull
iret
add
sub
mov
push
push
outsl
insl
loopne
adc
jae
jg
inc
clc
stos
fwait
xchg
add
inc
les
gs
cmp
in
in
add
or
add
jl
inc
arpl
pop
or
mov
mov
popa
add
mov
push
mov
jne
sub
inc
jb
sbb
insl
inc
stc
add
inc
mov
add
add
leave
mov
push
and
adc
jl
add
xor
dec
jnp
test
xor
or
cld
add
sbb
movsb
push
inc
jno
dec
leave
or
jnp
add
adc
push
xor
test
sub
sub
or
stos
arpl
pop
sbbl
mov
pop
dec
inc
and
rorl
pop
fs
gs
and
jmp
jo
imul
loope
subb
jmp
jnp
or
repnz
aaa
or
inc
cbtw
insl
loop
jne
lahf
movsl
or
or
pushl
cld
outsw
jb
inc
cmp
or
jo
outsl
inc
mov
je
push
pop
jle
inc
sbb
sarb
add
inc
popa
jne
lods
pusha
pop
sbb
jge
add
or
ja
addb
mov
adc
add
rep
rclb
jns
addr16
dec
movsb
or
jmp
insl
shrl
inc
insb
dec
xchg
enter
shll
add
mov
data16
cmp
ss
gs
add
mov
bswap
addl
jmp
adc
shll
mov
push
frstpm(287
incb
cs
daa
or
ss
add
push
or
adc
or
mov
push
mov
mov
cmp
add
pushf
sbb
inc
push
cmp
mov
stc
or
sbb
and
pop
leave
mov
test
aad
sbb
push
mov
ret
jecxz
stos
loopne
pop
inc
bound
insb
lahf
subl
pop
jmp
or
sub
mov
adc
push
loope
in
lahf
sub
ffreep
or
push
push
inc
cmp
lret
hlt
fists
into
daa
fmuls
or
sub
cmp
adc
push
cmpb
cmpl
sub
add
or
push
imul
sbb
fildl
jb
jns
pop
out
xchg
lods
pushf
repz
data16
pushf
fbld
jnp
dec
ja
mov
pop
mov
adc
test
loope
arpl
dec
nop
nopl
imul
xchg
mov
rcl
sub
insb
dec
jae
jo
add
or
jbe
cs
arpl
adc
clc
fs
out
pusha
or
daa
adc
or
and
adc
or
dec
test
or
jl
jbe
mov
jb
push
xor
jmp
push
ja
mov
dec
add
push
adc
xchg
dec
leave
and
popf
cmpsb
and
inc
xchg
and
clc
addr16
enter
in
add
fneni(8087
nop
xor
out
inc
mov
aaa
push
inc
cltd
outsl
lea
roll
in
mov
es
outsb
imul
fs
add
xor
cmp
nop
fldcw
andb
insb
adc
cmpsb
pop
insl
clc
cwtl
sub
push
and
adc
xor
test
xor
or
mov
mov
xor
inc
mov
aad
mov
adc
imul
mov
pusha
jb
dec
and
and
pop
bound
jns
pushf
or
pop
imul
stc
dec
inc
rclb
push
cwtl
lahf
mov
fcoms
push
push
std
imul
stc
fcmovnbe
or
lock
hlt
push
adc
mov
cmp
mov
cmpsl
and
jns
imul
or
shrl
adc
adc
leave
outsl
aas
jg
imul
test
das
mov
or
jno
sub
leave
pop
iret
test
js
clc
push
bound
rol
pop
or
das
mov
das
in
sbbl
adc
adc
xchg
pop
xor
ret
inc
sbb
push
sub
fbstp
and
xor
pop
push
or
sbb
push
pop
push
pop
fistpll
fs
dec
sub
je
imul
jns
sbb
xchg
nop
sub
sbb
sbb
imul
jl
dec
sbb
xor
mov
cmpxchg
adc
imul
bound
hlt
cmovns
popf
push
ss
adc
jb
mov
add
jno
and
sbb
add
mov
lock
jne
ret
nop
out
stc
repnz
adc
daa
mov
roll
sarb
dec
xor
push
notb
xchg
push
stc
in
fldcw
sbb
push
jmp
enter
inc
sarb
mov
inc
push
sbb
movsb
mov
fs
or
mov
inc
cmpb
inc
push
je
insb
nop
inc
push
sbb
pusha
inc
push
sbb
pop
or
dec
cld
clc
hlt
mov
ret
xchg
push
cmovl
in
sbb
enter
dec
cmove
enter
cmp
loop
orl
push
add
mov
mov
inc
or
call
inc
and
add
mov
and
int3
icebp
jnp
ret
inc
inc
pop
ret
push
ja
sub
sbb
sub
and
stc
icebp
stos
bound
mov
and
mov
and
imul
and
xor
xchg
jmp
sub
loopne
and
mov
arpl
das
and
data16
popa
insb
and
clc
imul
je
popa
inc
inc
add
jle
push
mov
sub
pop
shll
gs
insl
leave
jns
popa
imul
sahf
mov
jg
and
arpl
sub
test
jae
and
cwtl
jnp
arpl
cmp
or
popaw
dec
leave
sti
in
popf
push
cmpl
loopne
insl
jnp
and
popa
int
mov
es
xor
push
pusha
mov
das
ds
cmpsl
push
mov
into
mov
mov
mov
inc
into
add
jecxz
mov
daa
and
fs
xchg
xlat
sub
aas
or
or
pop
xchg
and
push
adc
adc
jg
sbb
fildll
fildll
add
mov
xor
jp
add
pop
pop
push
sub
pop
insb
bound
inc
dec
sub
sub
scas
sub
push
lahf
push
mov
lret
repnz
xor
cmp
lret
dec
pop
cmp
call
into
sub
add
add
neg
jns
std
out
sti
jge
insb
add
jl
pop
cmp
add
js
and
mov
lods
jl
mov
xor
loope
sti
or
mov
adc
rorl
sbb
jmp
mov
shr
movzbl
mov
pop
shlb
xchg
sub
loopne
mov
and
addb
xor
mov
incl
loopne
fistps
leave
and
add
xchg
mov
cmp
mov
lret
adc
inc
lds
pop
mov
andb
ret
fstpt
mov
cmpl
adc
neg
jg
incl
add
orl
adc
dec
add
adc
clc
cmp
dec
pop
mov
insb
aad
push
cld
sub
movsb
mov
mov
xchg
mov
popa
push
mov
inc
sbb
std
jge
add
add
push
add
mov
aas
pop
fcmovnu
das
mov
movl
mov
loopne
dec
lods
and
sub
aam
jge
fstpt
mov
lret
mov
pop
idivl
aas
cmp
or
inc
mov
int
shlb
shl
jle
nop
cmpb
jmp
call
rcr
out
enter
enter
or
sbb
lds
incl
push
push
push
mov
lea
movb
test
and
push
xchg
cmp
test
je
sti
mov
or
ja
fbstp
mov
int
pop
or
mov
sbb
mov
mov
mov
pop
pop
pop
pop
fdivrp
jno
jg
add
mov
sub
jae
jg
adc
mov
hlt
mov
add
or
ret
sbb
out
jecxz
js
add
jmp
or
cmp
cmp
lock
push
lea
inc
xor
decl
xor
add
and
cmp
jbe
sub
add
sbb
iret
test
jne
lods
fisttpl
jo
in
scas
dec
mov
add
ja
das
sbb
mov
sub
popa
cmp
and
jmp
fidivrs
loope
mov
mov
sarl
jbe
ljmp
and
loopne
add
xchg
xor
push
mov
cmp
or
cmpl
fs
ja
iret
and
mov
mov
jae
mov
out
mov
test
ds
and
jae
fadds
popl
push
repnz
lods
into
jo
out
cmp
jp
call
test
dec
inc
push
cld
ja
or
lds
les
xchg
das
in
std
std
sub
add
jbe
ret
push
mov
in
mov
adc
and
dec
aad
call
cmp
jb
addl
imul
neg
cmpb
out
mov
orb
cltd
and
mov
popa
bound
dec
jmp
leave
jne
push
in
sbb
add
lock
mov
inc
or
mov
addb
sub
idiv
je
mov
add
movzwl
add
cmp
ja
insb
mov
mov
cmp
adc
or
ficomps
daa
add
mov
jbe
and
and
xchg
inc
mov
mov
jns
push
xchg
loopne
aas
je
lods
ljmp
inc
and
sbb
je
xchg
inc
or
jo
arpl
mov
push
clc
jno
bsf
lea
scas
or
mov
and
std
mov
cmp
add
cmp
push
test
xlat
jne
mov
stc
ret
test
btr
mov
push
jle
pusha
or
insb
mov
dec
jnp
mov
cld
sbb
cli
lea
mov
sbb
sbb
mov
cmp
incl
mov
into
leave
jb
mov
sub
sub
pop
mov
and
inc
sbb
mov
mov
andb
lea
mov
xor
add
mov
mov
movl
inc
and
das
pop
push
or
imull
iret
mov
data16
dec
xchg
dec
sbb
cmp
fidivrs
sti
movsl
or
faddl
pushl
xor
jne
lea
orl
jmp
loopne
push
je
out
pop
ds
loope
rol
or
jmp
xor
add
push
psubb
insb
mov
loopne
xor
sbb
sbbl
mov
rclb
cld
jmp
mov
dec
mov
adc
xchg
pop
or
inc
lds
cmp
mov
jo
nopl
int3
sbb
xchg
or
testl
fisttps
jns
shll
test
roll
jg
enter
add
mov
jne
subl
fdivs
je
pop
rorb
je
jnp
pop
addr16
xchg
dec
fstpl
lret
push
push
xor
ficoms
imul
xchg
inc
adc
cmp
jne
and
mov
jo
push
mov
iret
xchg
and
push
jno
xchg
scas
ljmp
push
pop
pop
leave
outsl
xor
fs
aaa
inc
jo
nop
mov
jge
jae
out
loop
fisttpll
scas
imul
cmc
imul
inc
xor
sub
dec
pcmpeqw
idivb
adc
inc
cld
or
cmp
inc
filds
xor
xor
xchg
mov
xlat
mov
push
mov
pop
and
lock
cmp
cs
pop
dec
clc
sub
xchg
jmp
jns
test
xchg
mov
pop
cmp
mov
sahf
mov
stos
flds
or
mov
movsb
movl
movl
loope
add
xchg
clc
shr
dec
roll
pop
sbb
mov
sbb
div
xlat
xchg
fwait
cmp
jb
sbb
inc
es
jb
js
or
cmp
mov
cld
mov
mov
mov
jg
or
std
fistpll
sbb
and
xlat
jecxz
roll
add
bsf
ja
mov
mov
call
xchg
push
lret
pop
mov
shrl
lret
push
mov
add
jecxz
cmp
push
xchg
psubsb
aas
sub
cmp
jb
sbb
pop
add
out
sub
adc
les
and
jbe
lea
xchg
in
xor
cmp
jno
das
push
jge
repnz
inc
or
or
sar
cli
mov
cld
or
mov
push
mov
lock
or
pop
addr16
sahf
bound
add
sub
clc
ds
aas
addb
sub
loopne
cmp
and
out
lock
mov
imul
add
cmp
loopne
cmp
cmp
dec
fistps
xlat
je
inc
iret
pop
xor
out
je
and
rcrl
cmp
mov
iret
ja
cmp
xchg
xlat
pop
mov
pop
mov
shr
add
xor
sub
adc
fildl
add
add
xor
andl
popa
add
pop
add
push
jg
popa
js
lock
lea
jl
mov
push
lods
add
movl
fisttpll
mov
jecxz
rol
or
push
xlat
dec
iret
push
gs
loop
sbb
jb
cmp
fsubrs
or
pop
shll
sbb
lea
jecxz
lcall
push
fmul
lea
or
cwtl
jae
neg
fldz
mov
fstl
add
js
or
rcr
outsb
mov
pop
jecxz
scas
cmp
adc
add
mov
pop
sbb
cmp
jne
rorb
fistps
je
sarb
shlb
dec
add
mov
and
rclb
sbb
addl
in
mov
adc
inc
adc
mov
cmp
jbe
sub
sarl
icebp
sbb
add
fmuls
jmp
add
push
scas
addb
pop
jo
mul
gs
mov
loop
ret
subl
shr
mov
add
enter
mov
sahf
mov
stc
rcr
incl
aas
wbinvd
ror
cmp
das
cmp
and
adc
pop
sbb
xor
sbb
iret
add
add
jg
add
adc
and
add
arpl
mov
inc
ds
adc
ret
add
movaps
mov
sub
mov
cwtl
in
mov
nop
push
mov
push
mov
or
arpl
add
pop
cld
push
cmp
ja
pop
or
push
lock
lea
pop
ss
mov
push
adc
outsb
dec
sbb
add
push
adc
and
insl
jne
push
testb
je
adc
loope
jmp
mov
pop
rorl
mov
sub
call
rolb
shrb
sbb
mov
and
xor
out
addr16
cmp
jne
test
daa
dec
movb
imul
mov
and
or
cli
push
jo
xor
xor
in
ja
sbb
mov
push
xor
mov
sub
std
sbb
in
pop
loopne
or
and
fdivl
xchg
add
add
inc
setne
out
sub
cmp
aas
inc
sbb
inc
divb
jnp
push
mov
and
mov
loopne
in
push
jle
mov
mov
imul
dec
sarl
mov
cmp
fsubp
addl
mov
jg
sbb
add
dec
jne
mov
pop
in
sarb
mov
and
call
loopne
les
fbld
lea
lea
lea
inc
in
daa
lock
sub
testb
jne
and
pop
push
or
cmp
jg
xchg
lods
in
aaa
sub
or
add
add
lods
in
jge
adc
bnd
inc
add
call
das
ds
lock
imull
rorb
in
lock
jnp
or
or
xor
mov
sub
inc
filds
jle
dec
sahf
arpl
jl
ret
fbld
cltd
jle
adc
cmpb
mov
sub
cmp
jae
add
das
out
jl
dec
shlb
cmp
test
cmp
mov
push
jmp
xchg
loopne
faddp
pop
push
or
adcw
negb
xor
mov
movsbl
mov
je
cmpl
cmpl
jg
clc
mov
cwtl
sub
inc
filds
add
fdivrs
jne
push
lods
icebp
aam
xchg
mov
mov
daa
lret
aaa
push
dec
lds
sbb
idivl
or
sti
inc
cmp
insb
lcall
add
clc
lds
test
cli
das
aam
xchg
imul
mov
pop
aaa
out
ret
gs
jne
je
push
cmpsl
cmp
dec
fldcw
rcrb
mov
out
clc
jge
and
push
mov
ja
fmuls
movl
aas
out
rorl
loop
jne
mov
inc
lods
xlat
jg
mov
mov
jmp
pop
adc
and
in
xchg
popf
jp
repnz
mov
xchg
sti
add
mov
mov
mov
repz
inc
xchg
negl
pop
insb
jg
fcoms
faddl
xor
pop
aas
movl
cmp
lock
out
in
loopne
lea
jae,pn
push
fsubr
loop
mov
arpl
scas
jl
loope
cmp
xchg
cmpl
xchg
add
mov
in
jo
sbb
pop
add
pop
int3
sti
jle
movb
inc
pop
or
call
cmp
sub
and
xchg
loopne
adc
es
pusha
imul
or
and
jg
fwait
add
je
dec
je
jmp
or
jno
inc
ss
inc
sub
in
aas
or
inc
cld
sub
ret
cmp
xchg
dec
mov
adcl
cld
xor
push
sbbl
jbe
jmp
fisubs
and
push
ja
arpl
or
fnstsw
test
and
arpl
sub
pop
dec
push
push
mov
inc
inc
xor
jae
ret
mov
inc
or
ja
inc
xor
out
mov
aaa
add
jne
lret
pop
call
lea
test
lret
push
jl
jge
mov
dec
lea
xor
mov
pop
pop
cmp
mov
sbb
add
filds
leave
add
clc
jbe
mov
cmc
or
add
cmp
jne
xchg
mov
pop
mov
mov
cmpl
push
jge
in
pop
sbb
pop
lea
mov
or
repnz
lock
shlb
add
add
xor
mov
add
call
jbe
pop
scas
enter
loop
push
in
loopne
xchg
jp
or
mov
xor
shl
lea
add
shll
int
in
fidivs
mov
or
idiv
push
pop
out
xlat
mov
xor
div
imul
mov
jae
push
data16
mov
dec
push
jmp
idiv
sub
adc
mov
cmp
mov
ret
fnstcw
adc
adc
pop
add
mov
hlt
outsl
sub
mov
or
std
cmovl
cmp
jne
mov
mov
adc
movl
push
mov
dec
jne
sbb
jns
dec
inc
rol
dec
mov
jnp
xchg
dec
push
push
fistpll
fimuls
mov
cwtl
in
adc
xchg
dec
adc
mov
insl
out
fsubrl
sub
popf
pusha
cmp
mov
fcoml
xor
outsl
paddd
mov
xlat
adc
repz
mov
bnd
add
xor
adc
cmpsb
mov
nop
addr16
jne
jmp
add
xor
mov
inc
pusha
pop
or
cmp
add
adc
jb
insl
dec
sbb
test
xchg
add
out
dec
xchg
mov
pushf
jge
je
sbb
push
add
and
into
sbb
push
jno
notb
pop
loopne
rol
out
jmp
mov
pushf
xor
gs
mov
add
pop
sbb
out
pop
data16
fadds
or
std
outsl
ret
jne
outsl
cwtl
push
jmp
cmp
ja
movzbl
mov
lods
loopne
cwtl
movsb
jo
pop
inc
xor
scas
call
push
mov
mov
incl
out
rclb
inc
ds
pop
push
push
push
sbb
jg
mov
pop
pop
pop
jne
repz
sub
ss
fisttpll
cs
adc
mov
lahf
xor
sub
or
out
or
jmp
inc
sub
push
jle
loopne
jle
cmp
adc
addr16
xor
stc
fimull
dec
flds
ss
pusha
fwait
cmpsb
imul
mov
inc
add
or
adc
flds
out
push
add
cmp
jle
mov
ja
sub
or
adc
fildl
roll
pop
inc
cmc
pop
mov
mov
or
sahf
cmp
mov
inc
add
mov
into
and
add
mov
cmp
add
add
mov
pop
sbb
or
faddl
outsl
cli
ljmp
or
and
js
or
scas
lock
sub
std
and
pop
jmp
pop
ret
inc
imul
sar
add
pop
mov
jns
xchg
lahf
push
fdivl
in
jmp
pop
call
imul
es
test
adc
ljmp
cmp
insb
jle
loopne
or
std
aas
bound
fdivs
and
test
add
cli
divb
push
testb
aas
pop
sbb
push
sub
mov
loopne
mov
lahf
lret
cmp
add
jmp
push
clc
push
xor
or
mov
arpl
jecxz
pop
insb
sbb
pushw
and
loop
div
mov
fnstcw
pop
jae
jge
adc
or
fnstcw
fwait
orw
fstpt
fldcw
add
fldcw
pop
inc
jl
pushf
ret
push
jne
mov
adc
pop
sub
sti
dec
add
jmp
jle
fwait
dec
or
shrl
jnp
and
jb
sub
pop
or
cld
add
cmc
pop
repz
daa
icebp
push
mov
mov
cwtl
dec
imull
xor
mov
cmp
mov
pushl
and
jne
in
scas
xor
sbb
movsb
adc
mov
push
dec
pop
mov
fnstcw
lcall
aas
outsl
je
add
add
je
jg
mov
add
push
add
testb
je
pop
mov
fisubrl
fsts
jl
pop
jmp
pop
jle
mov
imul
mov
jg
das
push
push
xchg
jmp
das
xchg
sbb
sbb
xor
rcrl
push
adc
adc
iret
xor
push
or
incb
add
femms
or
cs
push
mov
test
mov
outsb
sti
mov
add
cmp
je
mov
push
sub
je
fstp
and
je
je
pop
je
xor
shlb
movsl
arpl
push
push
data16
mov
xor
or
cmp
ja
lea
add
add
lock
sbb
gs
int
fistpll
jge
jmp
and
push
neg
jle
js
pop
sub
jmp
inc
dec
fisttpll
ljmp
sahf
popa
jb
lret
dec
jnp
mov
mov
add
jb
mov
mov
lret
mov
cld
xor
shr
mov
jg
mov
mov
mov
gs
sub
inc
mov
rol
cld
loope
push
adc
fnstenv
or
pop
inc
dec
mov
and
or
adc
inc
xor
cmp
adc
incl
add
in
pop
mov
mov
incl
repz
mov
sub
sub
leave
fcompl
outsb
mov
push
push
iret
jl
fstpl
add
mov
pop
jge
fistps
sbb
mov
leave
mov
push
sti
sub
je
das
cmp
add
popa
cmpb
jl
and
andl
push
popf
xchg
jge
mov
xchg
cmp
stc
xor
sbb
fidivrl
and
jmp
fstp
fldt
or
mov
sbb
jns
imul
enter
in
cli
or
or
dec
push
in
ret
mov
adc
daa
aas
stc
and
sbb
add
jle
mov
mov
xchg
jl
daa
sub
aas
std
out
xchg
sub
sub
pop
jecxz
add
leave
int
cld
out
mov
aaa
inc
jbe
imul
cmp
dec
mov
mov
bound
cmpb
xlat
fadds
repnz
nop
lods
outsb
xor
xchg
push
or
push
push
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
pushl
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
call
mov
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fdivr
jmp
addr16
repz
mov
subb
and
and
outsb
bound
js
add
xor
fninit
fwait
cmc
fbstp
test
mov
clc
push
pop
out
inc
mov
dec
enter
nop
xchg
xchg
add
jp
rclb
xchg
pushl
mov
lea
cmpsl
pop
mov
pop
sbb
js
mov
and
and
mov
push
pop
cmp
sete
pop
pop
pop
lea
mov
ret
and
test
es
mov
int3
sbb
addb
jnp
mov
jl
aam
rcrb
aas
sbb
push
loope
xorl
lock
mov
int3
push
rclb
outsl
test
ja
push
push
shrb
adc
sahf
lret
sti
das
or
xor
jle
nop
ds
mov
pop
mov
mov
call
outsl
leave
ret
incl
push
lock
mov
adc
add
stos
pop
and
icebp
jle
add
mov
mov
sub
adc
mov
cli
jns
in
cmp
je
decl
pop
mov
xchg
jae
pop
push
mov
mov
insb
add
jne
push
out
filds
lods
mov
mov
mov
sub
or
or
push
mov
xchg
jmp
rolb
xchg
xorl
cmpsl
iret
paddd
imul
xor
loop
adc
inc
add
xchg
adc
cmp
cmp
mov
lods
adc
push
push
cs
repnz
pop
clc
mov
mov
inc
pushf
test
jle
dec
add
or
js
mov
repnz
mov
std
add
loop
add
push
lea
js
icebp
mov
es
pushf
insl
clc
aam
out
push
das
shr
cmp
inc
xor
push
fcoml
cmp
pop
or
jne
cmp
cmc
sbb
sti
push
jecxz
or
cmp
dec
jne
cmp
ja
jne
mov
xchg
rcll
inc
mov
add
pop
push
mov
cmp
pop
cld
and
xor
xor
jb
cmp
fistl
invd
or
or
pop
inc
ret
or
xor
sbbb
xchg
loopne
mov
pop
repnz
sbb
les
pop
add
adc
or
call
mov
mov
add
inc
enter
imul
fwait
std
aas
cmp
je
mov
leave
jne
mov
int
das
lods
clc
nop
push
xchg
jmp
loop
vpalignr
shll
cld
repnz
je
pop
add
xor
pop
add
sub
hlt
sti
sub
je
cld
pop
inc
push
scas
add
push
mov
add
out
mov
sub
mov
xor
or
pop
jne
das
mov
or
out
es
mov
sbb
jle
sbb
outsb
pop
outsb
pop
push
cmp
pop
pop
stos
or
pop
cmp
adcl
pop
aas
or
add
pop
sub
pop
mov
scas
lock
add
mov
sub
xchg
loopne
ja
push
inc
outsb
gs
jge
push
pop
or
test
push
inc
add
and
fcoms
push
fxch
shll
push
rcl
or
pop
sbb
jg
adc
xor
xor
mov
add
jo
mov
ds
mov
cmp
arpl
push
add
dec
jne
or
jmp
pop
jmp
push
lea
inc
xor
ljmp
adcl
pop
xor
test
jne
jge
mul
xor
push
flds
cltd
out
add
jb
idiv
adc
sbb
lea
mov
pop
add
iret
xor
mov
clc
subb
pop
or
adc
cmp
je
rclb
mov
mov
sub
lea
aas
push
add
cli
fucompp
cmpsb
lods
xchg
pusha
daa
int
push
les
rcrl
lea
ret
repnz
cmp
sahf
or
out
sbb
lock
in
fcmovne
push
pop
add
xchg
pop
add
movsb
ljmp
test
jl
inc
hlt
xor
lea
mov
mov
mov
mov
push
insl
mov
mov
sbbl
inc
mov
sub
or
pop
cld
leave
push
inc
or
leave
jle
in
lock
adc
push
clc
loopne
adc
into
stos
mov
push
mov
push
rorb
or
add
or
xchg
pop
mov
and
mov
call
push
push
cli
lds
jg
lods
stc
jg
sbb
mov
sbb
stos
mov
cmp
jne
xor
jmp
stc
pop
icebp
dec
lcall
imul
loopne
inc
test
add
push
xchg
jge
add
mov
sbb
xor
lods
mov
loope
pop
and
addl
cmp
sbb
test
jmp
pop
pop
xchg
ljmp
ljmp
add
pause
decl
loope
je
out
xchg
into
or
jne
mov
call
in
pop
or
shrl
push
mov
add
sbb
cmp
test
mov
dec
inc
dec
sub
xchg
jl
std
popf
ret
pop
push
push
fmul
mov
or
inc
adcl
out
add
add
shl
data16
nop
add
and
lds
jo
mov
fimull
jl
xor
inc
adc
pop
call
cltd
jne
pop
xchg
mov
xor
adc
je
xor
cmp
adc
add
jecxz
or
push
popa
inc
xlat
lds
jbe
lcall
scas
cli
sti
outsb
adc
dec
enter
cmp
push
addr16
mov
push
loope
das
or
sbb
or
push
cmp
je
and
pop
add
and
movb
dec
gs
imul
sub
leave
add
mull
push
inc
jne
lods
jg
and
lock
sub
inc
loope
pop
jne
inc
or
adc
dec
shll
test
lock
sbb
call
jge
add
mov
jbe
pop
out
push
iret
mov
push
flds
add
roll
add
pop
jbe
xchg
cmp
leave
inc
cmp
in
cmpb
add
psubq
mov
les
das
and
pop
inc
fdiv
into
je
decl
cmpl
and
rorb
mov
jle
adc
dec
xor
pusha
lret
xor
xor
pop
neg
cmp
ficoms
dec
je
mov
pop
dec
outsb
loopne
imul
mov
ja
adc
test
adc
or
add
and
lock
mov
adc
mov
sbb
sbb
cld
aaa
lock
mov
jmp
test
add
aad
add
adc
ljmp
test
aad
xchg
lcall
jecxz
cltd
rorl
add
out
ficoms
loopne
inc
lods
xlat
jge
cmp
add
stos
xlat
dec
nop
push
mov
dec
repnz
pusha
fsts
xor
hlt
mov
stos
sahf
js
popa
mov
sbb
mov
xor
xor
lcall
cmpsl
stos
jnp
dec
mov
dec
xchg
push
cmp
jne
repz
scas
inc
pop
xchg
cmp
jne
nop/reserved
lock
or
adc
push
movb
inc
or
incl
mov
sub
sub
das
pop
and
inc
pop
mov
call
mov
add
dec
mov
jns
les
jb
mov
mov
call
inc
dec
les
cmpxchg
push
lock
inc
sbb
fdivl
add
jge
hlt
mov
dec
mov
xor
pop
pop
in
or
in
in
add
xchg
jge
mov
mov
sub
push
adc
loope
adc
dec
cmc
out
aas
jecxz
cmp
adc
add
cli
in
push
ja
lea
mov
jns
inc
xchg
notb
push
cmp
mov
sarb
scas
testb
or
jae
dec
push
daa
sbb
fdivrs
pop
push
push
and
leave
sar
jmp
inc
push
cmp
je
or
jne
movsbl
inc
inc
loopne
loop
scas
roll
dec
jb
orl
jnp
add
mov
push
aas
loop
arpl
dec
pop
mov
sbb
jecxz
pop
xor
inc
add
pop
js
sar
cmpl
insb
inc
mov
adc
outsb
je
adcb
cmp
popf
icebp
sub
mov
not
adc
out
push
addl
xchg
push
dec
add
daa
add
test
lea
jg
inc
push
adcb
cmp
pop
ja
cwtl
sub
or
mov
jbe
adc
xor
push
jns
je
orl
add
lcall
sub
rcrl
enter
incb
out
jnp
and
fisubl
mov
mov
movl
add
loop
jmp
and
pop
out
fcomp
into
sahf
dec
adc
xor
adc
and
ret
mov
outsl
je
hlt
cmp
add
inc
cwtl
mov
incl
mov
add
lea
mov
mov
cmp
and
cmpsb
inc
mov
mov
push
clc
aas
push
jo
pop
int3
cmp
xlat
inc
enter
fucomip
dec
xor
mov
cmp
jne
inc
inc
mov
jg
pushw
cmpl
or
or
rcr
xor
inc
or
out
daa
and
and
push
adc
xor
push
inc
jb
insl
or
cs
cmovg
adc
mov
or
add
inc
jmp
lmsw
subl
add
or
and
adc
ss
dec
add
cmovl
mov
sar
adc
mov
add
and
loop
and
js
push
and
test
loopne
cmp
out
push
out
mov
or
in
jo
fcoms
push
push
cs
scas
push
mov
push
mov
xlat
sbb
cmp
jo
add
lret
adc
add
xor
scas
popa
add
mov
dec
into
pop
mov
dec
or
jns
aaa
cmpsl
xor
pusha
test
jmp
movl
push
aas
stos
nop
or
incl
andl
xlat
or
push
or
nop
call
lock
xlat
adc
adc
sbb
fists
jae
mov
sahf
or
je
sbbl
jmp
ret
xor
nop
or
loope
xor
and
or
aas
mov
cmp
je
aas
jl
fistpll
push
sub
mov
dec
je
call
add
add
je
jmp
cmp
idiv
adc
xchg
cs
adc
std
sbb
outsl
decl
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
call
mov
jmp
mov
jmp
mov
jmp
mov
sub
and
mov
push
or
shlb
negb
arpl
xor
mov
push
pop
sets
in
mov
push
dec
pop
push
jo
xchg
or
pop
mov
sbb
cmpsl
test
sbb
add
cli
fisttpl
mov
dec
int3
and
add
popa
add
fld
cmp
add
pop
cmp
inc
testb
dec
jno
cmpsb
push
xor
mov
and
sti
aam
or
inc
cmp
pop
add
push
icebp
dec
loope
cmp
cmp
jne
sbb
sub
lock
push
loope
inc
push
pop
hlt
mov
icebp
push
xchg
mov
fstpt
dec
mov
je
add
clc
or
ret
inc
xor
xchg
inc
cmp
adc
sub
dec
or
push
adc
push
mov
adc
fildl
test
aas
mov
jle
mov
xchg
jl
fildl
xlat
cmp
jg
and
cmp
inc
sarb
sub
adc
sbb
mov
jge
movsl
popl
add
inc
idivb
adc
popa
sub
and
adc
add
orl
push
xor
test
cmp
push
sbbl
pop
or
mov
dec
pop
push
push
and
enter
cmp
jge
call
push
out
or
movsl
repz
aad
adc
adc
jl
mov
bound
mov
xor
fcmovb
add
scas
and
dec
iret
dec
testl
jl
ss
adc
pop
push
cld
xchg
cmpsl
cmp
mov
shrl
inc
repnz
add
cmpsl
inc
mov
jb
dec
pushf
gs
xor
or
push
xchg
fwait
adc
push
sub
cmp
lea
mov
push
add
mov
fcomi
xchg
pop
dec
je
add
mov
or
push
add
adc
iret
jmp
push
add
dec
jne
pop
pop
xchg
push
mov
inc
sbb
dec
pop
or
mov
daa
push
ret
ret
aaa
mov
adc
pop
add
mov
mov
and
and
dec
divl
sti
pop
cmc
fdivl
loopne
inc
push
and
mov
jle
push
rorl
lock
adc
mov
cmp
jge
adc
ja
add
xor
or
fcomps
rolb
nop
push
xchg
icebp
call
push
es
mov
popa
jecxz
jno
fsubp
jbe
or
test
push
xlat
xorl
sbb
lcall
inc
xor
out
ds
sub
dec
jb
movsb
lret
inc
insb
jge
cmp
or
cwtl
pop
add
and
js
sbb
adc
loope
out
cmp
fcom
leave
sbb
int
push
pusha
xor
or
mov
add
insb
lret
sti
mov
adc
cmpb
cmpsb
paddusw
mov
jno
call
sbb
icebp
xor
jne
and
and
adc
add
pushf
cwtl
nop
adc
dec
fwait
adc
jne
jae
lock
xchg
jae
in
mov
or
in
and
adc
cmp
adc
push
push
rclb
negl
jl
push
and
scas
sub
pop
or
xor
mov
mov
test
fstl
push
pop
mov
push
rolb
sahf
lahf
jmp
popf
adc
and
dec
das
movsb
or
or
push
pop
dec
dec
jmp
xor
push
or
jg
cmp
daa
mov
lahf
jge,pt
iret
sub
pop
xlat
mov
xor
adc
push
lods
or
xor
add
sbb
xor
add
cmp
in
fs
sar
adc
jb
dec
xchg
or
mov
add
idiv
push
loop
adc
insb
insb
pop
pop
cmp
shlb
rcl
mov
push
jo
jmp
pop
movl
mov
cld
data16
sti
adc
inc
idivb
jle
lea
sub
call
fidivs
out
inc
push
jbe
jg
push
push
andl
movl
fistl
adc
lret
add
xchg
inc
xchg
orl
push
adc
in
push
std
add
xchg
lret
dec
jl
lock
inc
hlt
adc
mov
push
cli
mov
push
jl
dec
sahf
fmull
xor
ss
sbbb
add
arpl
xchg
push
or
ret
dec
jne
pop
cwtl
gs
add
inc
call
clc
inc
jle
sub
ds
mov
inc
jp
lds
pop
cmp
add
adc
push
arpl
das
loop
mov
sbb
aaa
jb
inc
jbe
lods
insl
test
ja
sub
adcl
mov
ret
stc
fsubrs
popa
jmp
or
shl
dec
aas
ret
ficomps
mov
push
mov
inc
test
push
sti
jo
fiadds
pop
and
js
mov
fisubrs
lods
movzwl
mov
push
test
push
enter
outsb
sub
jg
mov
cld
sub
or
mov
cmp
cld
lea
cmp
push
inc
fstl
pop
out
mov
jbe
pop
cld
jle
lea
fidivrl
pop
add
shll
inc
ss
jne
insb
and
cwtl
mov
lds
mov
xchg
test
xchg
cmp
dec
fs
and
adc
add
add
cmp
and
add
jmp
and
jnp
mov
xor
adc
lods
sbb
cmp
shlb
in
inc
pop
scas
xchg
mov
mov
clc
frstor
and
dec
pop
sub
inc
fadd
lds
dec
dec
pop
push
dec
es
inc
jg
ljmp
mov
pop
pop
dec
cld
lods
pop
shlb
jmp
inc
clc
xchg
fwait
add
imul
inc
xor
cmp
je
mov
callw
jmp
push
mov
inc
test
sub
add
js
lods
push
hlt
ds
inc
add
adc
nop
aaa
add
idiv
jg
pop
and
leave
cmp
je
cmp
je
or
je
call
je
call
enter
jae
mov
mov
fsubr
sbb
pop
adc
pusha
repnz
imul
mov
ffree
test
mov
xchg
rorb
add
lock
into
shr
ljmp
inc
dec
je
sarb
fwait
dec
pop
add
cmp
clc
xchg
loop
push
scas
cltd
pop
and
clc
push
jne
ss
xor
mov
cmp
sub
sub
add
idiv
jnp
xchg
pop
cmp
cmp
jne
shr
shr
sbb
mov
lret
jbe
ja
or
inc
sbb
xchg
jne
pop
jo
call
stos
fsubl
push
ret
out
sahf
xchg
dec
mov
pop
sub
insb
ret
addr16
idivl
push
cmp
or
or
push
pop
mov
pop
push
outsb
or
in
add
pop
mov
pop
in
mov
inc
mov
inc
pop
add
js
cld
xor
cmp
cmp
cmp
flds
inc
ret
ja
sub
call
cmc
cld
jne
push
lea
lea
neg
mov
cmp
or
sbb
add
je
test
sbb
arpl
out
jg
int3
cmp
ret
cmp
out
and
mov
pop
int3
ret
outsb
dec
xor
push
sub
and
fidivrl
sub
test
jl
adc
add
and
hlt
fdivrs
push
cld
add
jmp
cmp
inc
mov
outsl
pop
cmp
xor
adc
xor
dec
jl
mov
into
jge
test
jle
sub
cmp
jle
stc
add
lea
cli
add
insl
dec
hlt
loopne
cmc
dec
scas
sub
mov
mov
pop
mov
add
jle
dec
fnsave
cmp
mov
mov
mov
idivb
sti
jle
hlt
mov
add
jo
sbbl
pop
push
push
cmp
decl
cmp
add
mov
add
sbb
or
cld
daa
jo
fsubr
push
fcmovne
sarl
dec
cmpl
sub
mov
mov
push
lahf
adc
cmp
das
mov
aaa
cmp
jge
mov
cmp
jno
adc
sahf
icebp
mov
int3
rcrb
add
das
mov
push
cmp
or
imul
cmp
das
dec
push
pop
jg
js
stc
add
mov
scas
push
xchg
sub
push
cmp
bswap
push
sbb
stc
shlb
std
movsl
frndint
cmc
push
shr
push
mov
inc
dec
dec
in
xchg
lahf
pop
xor
mov
dec
adc
lock
and
popa
add
into
mov
jmp
xchg
jmp
cmpsb
or
pop
cs
sub
push
call
cmp
xchg
push
add
xchg
pop
jge
mov
cmp
jge
xor
dec
cmp
shll
mov
jmp
repz
cmp
pop
dec
clc
mov
or
rolb
rorb
mov
mov
xor
add
mov
xor
sbb
dec
ret
jno,pn
shr
idivb
lock
enter
iret
sarl
bound
cmp
pushf
pop
dec
adc
push
mov
mov
adcl
push
push
push
push
mov
pop
add
pop
pop
aaa
loopne
mov
pop
movsb
pause
mov
insl
adc
data16
pop
incb
imull
call
mov
pop
adc
cmp
jg
loop
pop
lock
pop
sub
mov
mov
xor
pop
mov
dec
jge
in
or
or
mov
or
shll
pop
xor
xor
fs
js
shlb
adc
cltd
pop
push
fldl
xchg
js
push
push
test
mov
add
or
and
and
push
mov
xor
cmpsl
imul
hlt
jns
cld
and
test
into
je
mov
ja
xor
gs
jbe
popf
mov
or
outsb
stos
mov
scas
add
cmp
je
cmp
iret
mov
jle
pop
pop
dec
pop
rorl
add
add
and
add
jbe
ret
ljmp
add
inc
cli
add
dec
clc
movsl
add
jmp
push
push
data16
push
dec
les
loope
leave
mov
cltd
or
jnp
add
cld
dec
jmp
test
movups
inc
or
pop
fimuls
mov
xlat
in
push
sbb
mov
iret
jl
pop
cmpsb
shl
add
dec
xor
arpl
dec
pushf
sbb
repnz
and
test
rcll
mov
adc
orb
push
sbb
cmp
pop
pop
lea
jmp
lahf
sub
pop
mov
add
or
xor
push
mov
cmp
jne
loope
fwait
lock
repz
arpl
mov
xchg
add
mov
nop
stc
jmp
dec
sbb
cmp
ljmp
inc
cmpsb
jg
mov
jl
cli
test
push
cs
inc
sub
sub
mov
scas
push
sbb
lea
mov
lods
or
adc
add
pop
xchg
jbe
jbe
push
push
test
push
or
in
dec
test
cmp
fadds
cmp
repz
push
sub
xchg
mov
pop
mov
jge
cmp
addr16
sbb
jge
jle
inc
xor
lock
mov
mov
dec
mov
xor
adc
adc
mov
sub
adc
inc
rclb
sbb
fdivrp
sbb
nop
ss
mov
push
and
add
js
pop
sti
add
lock
jle
dec
adc
jnp
repz
imul
ljmp
add
rcl
call
roll
shlb
dec
mov
repnz
fs
dec
mul
push
lock
jle
mov
adc
xchg
inc
cli
inc
lret
cmp
and
dec
mov
and
jmp
add
aad
xor
push
push
inc
ds
mov
mov
call
sti
loopne
ror
mov
popf
movsl
inc
lods
data16
cmp
sbb
and
les
jo
out
aas
push
arpl
cmp
jp
lret
mov
dec
clc
mov
fldl
push
sub
hlt
push
andb
xor
mov
push
and
sti
push
mov
popf
xlat
pop
mov
movsb
inc
cmp
pop
mov
pop
jo
jnp
or
out
xor
inc
dec
pop
imul
je
xor
push
mov
and
je
jae
adc
inc
mov
cmp
lods
push
out
clc
or
leave
ja
mov
xor
mov
mov
xchg
cmp
je
ljmp
je
cmp
je
cmp
je
cmp
je
cmp
or
adc
mov
mov
jne
adcl
or
and
pop
out
jmp
push
mov
lods
or
add
add
push
adc
cmp
pop
jmp
cmp
or
js
popf
or
xchg
pop
jmp
cmp
mov
mov
cmp
jcxz
les
adc
or
jmp
sub
sub
sub
jb
adc
jge
ret
mov
adc
cmp
idivb
pop
jns
jg
aam
stos
mov
push
add
mov
pop
inc
cmp
jo
sbb
xor
jle
xor
jmp
daa
jo
mov
jmp
test
aaa
xor
out
push
jmp
test
test
sbb
icebp
jmp
xor
call
jb
or
insb
mov
sub
dec
sbb
lea
cmp
or
and
sgdtl
std
and
sarl
lock
inc
out
loope
rolb
call
scas
cmp
or
lret
lret
lret
je
adc
je
or
sbb
setne
jecxz
pop
popf
inc
pop
pop
rorl
xor
mov
xchg
repz
jo
jge
sahf
pslld
lea
mov
jo
mov
add
test
push
xchg
dec
xchg
or
adc
jmp
aas
arpl
pop
add
sarl
xor
mov
mov
aas
and
shlb
aad
dec
and
je
or
or
push
sbb
mov
jns
out
and
dec
pop
insl
jl
inc
push
sbb
sub
fcmovnbe
push
mov
dec
jne
sub
and
or
pop
in
jmp
js
xchg
loope
cmp
adc
push
add
cmp
cmp
lock
ja
cmp
pop
add
inc
call
xchg
popa
mov
xor
add
cmp
add
in
ja
cmp
jmp
iret
mov
or
pusha
push
sub
mov
loopne
mov
mov
daa
cmp
push
adc
pop
data16
jmp
cmp
push
test
mov
push
sub
mov
cmp
and
xor
shr
xchg
ss
divl
xchg
out
aaa
in
xor
add
cmp
xchg
inc
aas
xchg
dec
out
pop
dec
inc
adc
popl
mull
mov
lods
fs
js
dec
xor
inc
adc
pop
pop
push
test
or
dec
jno
out
aas
sbb
pop
xor
xor
sub
sbb
sar
xor
xor
sub
sbb
add
cmp
jb
add
cmp
out
div
xchg
add
adc
xchg
jo
in
pop
shr
rcr
rorl
fisttpl
mov
add
push
clc
js
loopne
sbb
imul
in
add
cli
sub
enter
inc
dec
sbb
sbb
cltd
sbb
pop
arpl
or
cld
cmpsb
mov
adc
or
jne
or
jmp
pop
rcrl
jns
neg
mull
add
jns
neg
neg
sbb
mov
mov
aas
inc
leave
loopne
rcl
rcl
cmp
jb
pop
cmp
sbb
add
inc
loop
loop
test
xchg
lea
add
push
pop
dec
xchg
lahf
movsb
cmovae
mov
pushf
rclb
aas
hlt
push
or
bound
and
mov
xchg
inc
cmpw
je
adc
inc
sbb
inc
jmp
loop
imulb
sub
mov
aaa
and
add
add
sbb
mov
rcrl
movsb
mov
loop
pop
cli
pop
sete
cmovbe
mov
xor
pop
adc
adc
lahf
ret
jbe
mov
adc
pop
or
mov
and
push
push
mov
sub
inc
or
mov
sbb
adc
push
jb
iret
jnp
out
jmp
inc
stc
sub
jmp
getsec
jmp
popa
or
and
cld
nop
std
push
bound
jb
mov
inc
andl
ds
jbe
jmp
jg
mov
cltd
out
and
jns
shld
add
xchg
popa
ss
or
xor
jp
or
jns
daa
ja
pop
shlb
xor
popa
sub
pop
ficoml
and
lock
jae
sbb
jb
and
dec
inc
push
jne
adc
int3
and
sub
jg
imul
adc
dec
lret
dec
sub
jmp
daa
je
pop
and
je
sbb
bndstx
outsb
call
pushf
sarb
je
dec
das
fwait
arpl
or
pop
jmp
popf
test
fsts
mov
add
mov
pop
incl
and
pusha
daa
insb
push
into
loopne
mov
into
pop
add
pop
cmp
test
jg
popf
pop
mov
push
push
sub
daa
data16
int3
xchg
loop
inc
dec
out
int
jmp
icebp
mov
movzbl
add
cltd
push
add
push
push
push
fdiv
push
sbb
fwait
mov
in
idiv
cmp
je
andl
xchg
testb
in
int
cmp
mov
cmp
jge
dec
fucomip
mov
cld
lret
xlat
stc
scas
add
push
push
das
clc
mov
sub
adc
in
in
das
mov
pop
jmp
decl
les
es
mov
pushf
in
jge
mov
mov
push
in
test
dec
gs
inc
push
pusha
adc
scas
icebp
outsb
mov
dec
push
dec
lods
add
push
pop
pop
ret
movl
out
push
flds
lahf
lahf
or
xorl
jmp
loope
add
test
inc
movl
adc
clc
test
xor
not
lcall
dec
jne
enter
das
inc
sbb
push
add
aas
outsb
loopne
pop
xchg
xor
jg
decl
jne
out
test
push
adc
adc
or
mov
pop
push
mov
mov
mov
imul
sbbl
pop
pop
pop
xchg
add
adc
mov
pop
or
pop
adc
or
push
cld
or
dec
prefetch
or
mov
mov
ret
jnp
jne
push
cmp
xor
les
adc
push
sbb
inc
jno
mov
je
sbb
cmp
push
stc
lods
insl
or
je
adc
xor
lcall
ficomps
out
mov
call
add
sub
incl
push
dec
gs
inc
push
pop
je
out
sti
jb
outsb
insb
push
outsb
bound
add
sub
imul
popa
je
sub
jbe
imul
insl
or
push
push
leave
neg
jge
imul
push
push
in
inc
jno
daa
jo
sub
sarl
outsb
pop
popa
sub
popa
ss
dec
xor
sbbl
add
loopne
jae
popl
pop
ficoml
repnz
sti
loopne
jae
inc
inc
sub
sub
pop
aaa
jne
or
mov
mov
jg
je
insl
sbb
lahf
sbbb
sub
jb
dec
dec
cmp
mov
mulb
imulb
jae
push
or
xchg
dec
bound
inc
inc
pop
push
mov
fsts
xchg
popa
insl
xchg
jbe
aaa
divb
outsb
aaa
inc
fidivl
fsubs
cmpsb
jae
mov
notl
outsb
outsb
cmpsl
ss
mov
dec
dec
inc
das
push
push
pop
push
and
pushw
or
out
mov
and
setae
push
sub
ud2
dec
enter
in
inc
out
or
les
test
nop
out
xor
add
push
push
shll
data16
push
dec
push
shll
add
cltd
jne
jae
jae
fs
lret
imul
outsb
or
add
mov
mov
push
lret
addr16
sub
fistps
inc
push
sub
dec
cmpsl
outsb
jb
and
mov
adc
pop
cmpl
cmc
sub
jmp
dec
jecxz
xor
dec
leave
sub
addr16
subb
cmpb
add
fs
xor
sbb
lea
or
push
sub
fs
dec
jne
aad
sbb
inc
movsl
ret
mov
pushl
pushl
cmp
mov
sbb
pop
sub
mov
divb
jp
test
sbb
dec
push
add
test
or
inc
mov
jo
inc
mov
sbb
sbb
add
sub
push
cwtl
je
in
nopl
cwtl
xchg
mov
loope
test
and
iret
cmp
adc
faddl
dec
mov
cmp
jb
mov
add
shr
cmp
sbb
mov
rol
sbb
dec
in
inc
shlb
sub
add
cmp
mov
push
pop
push
in
mov
push
lea
pop
aaa
ficoms
outsl
jnp
lods
movsb
pop
and
fsubrl
push
mov
pushl
pop
jb
inc
pushf
movsb
pushf
add
sbbl
xor
mov
lds
pop
call
sub
mov
jbe
mov
sysret
ret
daa
sbb
loope
cmc
rclb
cmpsb
mov
pop
mov
sarl
scas
nop
push
jbe
push
push
xchg
cmp
lods
pop
js
es
add
mov
jmp
inc
xlat
popa
and
dec
sub
int
mov
je
inc
jge
std
push
popl
rol
mov
daa
ljmp
mov
mov
mov
mov
add
mov
inc
in
or
data16
jns
in
dec
jle
xchg
dec
hlt
add
cmp
mov
add
ret
cmp
cmpsl
repnz
lods
adc
call
out
cmc
enter
push
out
scas
push
mov
and
cmp
xchg
rcll
mov
pop
mov
mov
or
inc
adcb
push
inc
daa
stc
push
and
cmp
or
cmp
jne
mov
imul
sbb
fldenv
daa
xor
or
adc
out
ficoml
sub
jne
or
movsl
push
xor
pop
sub
dec
jnp
and
subl
loopne
or
cld
nop
push
dec
lods
sub
pop
adc
iret
xchg
push
or
jecxz
jp
push
jne
pop
fcmovnb
and
out
pop
cmpsb
mov
sti
jle
add
sbb
mov
pop
push
cmp
aad
fimull
test
or
call
dec
sbb
sub
lret
mov
sbb
cmp
adc
pop
insl
xchg
in
add
into
adcb
call
scas
inc
add
adc
ljmp
mov
sub
mov
jns
adc
nop
into
in
xorb
cmp
sar
pop
rolb
add
inc
cmp
fdivs
adc
insl
pop
inc
push
push
orl
mov
ret
mov
pop
cmpsl
adcl
sbb
test
aam
lea
idiv
hlt
jbe
lret
jg
xor
add
imulb
ret
dec
push
push
fldt
or
add
push
lds
add
add
js
adcl
xor
out
std
mov
mov
fisubl
xchg
gs
mov
lods
jne
lret
out
or
push
xor
sbb
pop
lds
mov
sbb
pop
push
bound
push
jge
add
pop
imul
add
jl
loopne
inc
push
xchg
xchg
pop
ja
fs
and
dec
popa
enter
and
sarl
pop
cmpb
xor
jecxz
das
jle
cltd
xor
sub
push
adcb
xor
pop
jmp
jmp
enter
mov
mov
cltd
pop
xorb
test
or
jne
lea
jns
push
scas
sbb
jmp
mov
xchg
ret
icebp
aaa
rolb
insl
mov
ja
popa
push
fwait
std
rcl
cmpsl
inc
add
bound
arpl
fs
daa
int3
mov
outsl
cs
or
insb
jb
sahf
sbb
bound
es
addr16
adc
shrb
es
ret
dec
inc
jo
imul
jecxz
shlb
pop
cmp
push
loopne
lea
in
add
adc
dec
cmovnp
mov
jne
push
inc
loop
mov
and
lcall
fstl
mov
lea
mov
cmp
mov
xchg
popa
pushw
fcoms
xchg
push
lods
mov
daa
idivb
push
mov
setne
test
je
add
add
dec
fildl
js
hlt
hlt
mov
scas
rolb
jmp
add
icebp
sub
repz
inc
push
pop
sub
sbb
or
xlat
pop
sub
call
xchg
sub
in
lret
sub
jae
dec
repnz
lods
lock
das
popa
subw
mov
inc
fdivrs
leave
xchg
xchg
test
jmp
xor
push
pop
dec
in
add
mov
or
push
dec
jg
data16
mov
mov
pop
lods
enter
add
sbb
repnz
add
popa
orb
in
enter
push
mov
adc
xor
das
or
dec
es
xor
mov
and
je
add
adcl
jne
push
cmp
aam
dec
sbb
mov
mov
jnp
mov
loope
daa
jne
in
push
jg
mov
lea
sub
in
and
jnp
ja
sbb
call
call
andl
nop
pop
movsl
sbb
mov
enter
std
in
std
and
mov
in
pushf
jmp
sbb
sti
jne
fisttpl
lea
sub
mov
pushf
inc
and
or
xchg
clc
jno
adc
jbe
js
mov
mov
pop
xor
imul
push
adc
mov
push
cmp
out
xchg
xchg
imull
imul
add
add
adc
adc
jo
mov
ja
inc
xlat
cmp
sub
ror
dec
imul
ss
pop
vandps
sti
pushf
inc
pop
adc
push
mov
dec
sbb
loopne
daa
xorl
mov
in
inc
mov
sub
ret
push
add
mov
push
add
jbe
jno
dec
popl
outsb
cltd
and
and
ret
mov
sbb
mov
and
loopne
fiaddl
mov
pop
pop
sbbb
shlb
inc
mov
add
ljmp
call
add
daa
sub
insb
cld
fwait
cli
pop
add
pop
mov
popl
fadds
mov
xor
lds
mov
sahf
call
test
sar
push
push
mov
nop
mov
out
dec
mov
imul
push
mov
push
jecxz
in
pop
pop
ret
sbb
mov
mov
and
add
pop
ds
xchg
inc
test
pop
filds
je
adcb
mov
ret
jle
add
dec
sbbb
add
add
aam
in
jae
aas
jns
inc
ffreep
cli
mov
ret
aam
rcrb
xlat
hlt
sbbb
mov
sbbb
in
add
jns
sub
mov
push
lret
cmp
stos
mov
push
pop
add
loope
xor
add
xor
push
pop
fwait
test
fnstsw
ret
xchg
cmpb
pop
cmp
ja
add
jge
inc
call
jecxz
and
jmp
dec
sti
out
fbld
jbe
es
pop
testb
adc
mov
push
fucomp
mov
cli
mov
sub
jmp
les
not
push
hlt
adc
cmpsb
jb
mov
push
jbe
jl
mov
mov
push
cmp
jb
xor
or
inc
gs
and
sbbb
andl
fbstp
dec
push
nop
add
inc
pop
sub
pop
lods
pop
adc
test
or
push
rclb
cwtl
add
gs
xchg
js
inc
sti
lea
pusha
mov
test
int3
and
push
push
xchg
and
jg
clc
lea
pop
lea
les
jns
or
es
adc
sub
add
sbb
push
fnsave
daa
loopne
xchg
cmp
jno
push
icebp
add
xlat
mov
add
imul
mov
pop
hlt
daa
clc
test
cmp
or
inc
or
jne
push
loopne
sbb
inc
arpl
out
test
in
and
add
pop
jo
and
mov
into
shll
mov
pop
push
das
inc
lock
pop
dec
add
andb
and
push
or
shr
loop
jo
push
push
xchg
testl
xlat
adc
or
loopne
add
jge
mov
push
or
lods
ja
push
mov
daa
cmp
enter
push
add
add
sbb
cmpsl
and
shll
sbb
and
push
sub
adc
andb
aas
or
mov
push
and
pop
shr
and
or
xchg
sbbb
push
stos
pop
inc
and
jne
adc
add
jae
adc
dec
add
loope
ret
or
add
in
add
and
fs
popa
nopl
adc
add
shr
loop
int3
jae
jno
mov
das
push
sub
hlt
pop
or
outsl
stos
addr16
inc
jecxz
sbb
jle
jge
push
mov
add
rcrb
out
shrb
jae
sub
adc
xchg
dec
sarl
fs
mov
cmp
jne
push
add
lock
fisttpll
push
pushf
and
sub
mov
rolb
clc
add
mov
or
testl
cmp
mov
fistps
loopne
push
movsl
xor
adc
mov
mov
dec
jmp
cmp
jne
or
jae
jle
mov
cmp
shlb
rclb
or
lcall
aam
push
aad
dec
fdivr
pop
fmull
pop
cmp
dec
lret
xor
mov
testb
sti
push
push
and
pop
loopne
add
pop
ret
out
or
outsb
add
dec
in
jmp
xchg
pop
fsubp
sbb
outsl
push
add
ficoml
flds
lea
push
push
push
sbb
adc
add
sub
inc
fnstcw
iret
je
movsb
pusha
in
mov
popa
mov
and
fistl
ret
test
sbb
mov
or
cmpl
cmp
mov
jmp
xor
lock
jne
dec
push
mov
xor
fisubs
leave
inc
or
xor
in
fistpll
cmpl
sub
xchg
cmp
jne
push
pop
into
lock
xor
mov
or
cmp
jmp
xchg
in
mov
sbb
lods
ds
repz
daa
lret
add
sbb
hlt
hlt
jg
loope
and
or
js
ja
lock
lea
push
push
jg
ljmp
jle
cmp
in
pop
cmpl
mov
mov
jb
inc
pop
sbb
adcl
hlt
xchg
rol
insb
xchg
mov
and
ret
xorl
sbb
fistps
mov
xor
call
lcall
loope
sbb
dec
fldl
test
mov
or
sub
fimuls
dec
add
push
sub
or
adc
xor
aaa
mov
mov
in
stos
int
mov
jp
xor
sub
push
adcl
xchg
add
pop
subl
call
scas
gs
inc
fcom
push
aad
cmpl
lods
inc
mov
push
cmpsl
mov
ja
jmp
pop
sbbb
or
fsubr
idivl
insb
or
jmp
push
mov
pop
ret
xchg
imul
mov
pop
push
mov
dec
shlb
or
or
out
push
sub
xor
sbb
adc
mov
push
or
mov
outsl
orb
jb
pusha
jns
les
fiaddl
and
adc
mov
mov
mov
sbb
daa
and
mov
rcr
inc
cld
xchg
mov
sub
movb
add
xor
test
insl
jns
jge
inc
adc
xchg
cld
xor
bound
insl
sub
cld
cwtl
pop
push
push
push
pop
push
daa
sbb
pop
out
adc
mov
cwtl
xchg
adc
std
in
stc
mov
cbtw
movsb
daa
test
add
testb
push
add
gs
add
add
jo
add
aas
fildll
movsb
xor
bound
sahf
add
mov
or
mov
cltd
xor
pop
je
addr16
dec
pop
inc
mov
das
or
sbb
movsb
lock
jae
push
mov
add
je
imul
in
xchg
inc
and
mov
orb
jb
je
dec
je
push
and
add
lods
ficoml
cmpsl
inc
or
push
aas
sub
mov
adc
or
or
pop
cwtl
icebp
daa
pop
xchg
inc
fdiv
rep
pop
scas
xor
fdivs
pop
jmp
fwait
add
fildl
fstpt
jmp
aaa
mov
rcrb
test
testb
add
dec
mov
pop
sbb
xchg
and
mov
clc
push
mov
sbb
or
fisttpl
idivl
std
iret
aad
mov
faddl
mov
mov
xor
in
push
mov
sar
or
shlb
xchg
sarb
pop
sub
lea
stc
rcl
das
test
int
cmp
or
or
inc
cld
into
mov
lock
pop
xchg
jne
nop
cmp
je
sbb
or
mov
les
add
add
das
js
xchg
pop
ja
push
adc
lods
xor
ret
stos
push
sub
dec
push
sahf
push
mov
loop
jle
shr
or
jns
jg
or
or
jge
dec
dec
add
popf
shl
outsb
push
jl
cmpsl
mov
je
repnz
xchg
nop
sbb
sti
lret
stos
js
fisubs
adc
sbb
jge
inc
adc
loopne
adc
add
add
rorl
pop
loope
and
adc
pop
cmp
jle
add
add
outsw
lock
dec
add
add
add
mov
testl
or
mov
and
je
pushf
insb
scas
decb
rcrl
push
push
pop
inc
dec
lahf
pop
add
pushf
push
add
xchg
fldenv
add
les
popa
dec
mov
adc
inc
pop
clc
hlt
add
add
sbb
popf
aam
aas
aam
sbb
bound
cmp
mov
push
sbb
pop
inc
push
dec
push
dec
push
xchg
filds
adc
inc
dec
dec
pop
inc
inc
inc
push
inc
and
add
add
pop
pop
push
pusha
loope
sub
cmp
adc
and
or
gs
adc
dec
jne
ud2
xor
insb
or
ret
arpl
or
rorb
bound
in
jnp
mov
orl
xor
jo
aas
push
sbb
xchg
pop
sbb
adc
rolb
xchg
adc
xor
cmp
shr
xor
inc
lock
jne
jae
sub
lds
outsb
and
sbb
push
xchg
out
add
or
push
ret
mov
sahf
mov
add
push
dec
inc
pop
sahf
movsb
push
icebp
incl
push
dec
inc
inc
inc
inc
dec
xor
mov
inc
push
xor
nop
jl
push
push
push
dec
in
add
dec
inc
inc
sub
add
push
das
sbb
xor
xor
sti
ret
pop
leave
dec
push
dec
add
dec
push
int
push
push
inc
xor
aaa
add
das
mov
sarl
nop
mov
mov
push
inc
je
or
mov
lahf
mov
adc
mov
lods
pop
pop
inc
fisttpl
pop
in
in
dec
out
popa
add
lcall
addr16
out
inc
out
sbb
mov
jo
adc
das
mov
dec
movl
sub
sbb
lock
dec
mov
sub
fs
or
sarl
xor
cmpsb
jl
scas
cmp
adc
bound
sub
movups
pop
and
test
push
push
stc
and
fadds
or
and
adc
cmovno
mov
adc
inc
push
dec
loope
mov
insb
adc
insb
sub
push
or
cmp
arpl
inc
push
push
sub
and
pop
jb
push
push
imul
imul
and
cmp
es
cmpsb
shlb
test
clc
and
test
or
dec
frstor
sbb
pusha
jo
sub
pop
push
mov
rol
es
fs
lret
and
insb
jb
repnz
sub
shll
inc
or
mov
mov
aaa
adc
push
push
shll
sahf
xchg
lahf
lods
shlb
or
fs
fcompl
and
pop
fs
stc
jno
mov
movsb
int3
inc
pop
popl
cmp
pop
push
gs
xchg
jns
xor
cmova
outsl
jb
mov
mov
mov
insl
daa
mov
pushf
xor
dec
or
xorb
fnstenv
orb
popa
loope
xor
dec
or
mov
imul
or
adcb
xchg
rdtsc
addb
outsl
jo
gs
ret
sbb
push
cmc
jb
sti
mov
mov
mov
lea
mov
nop
insb
add
mov
inc
jne
fnstsw
loopne
xor
pusha
pop
notl
fisubrl
xor
mov
push
and
fs
or
add
push
mov
popa
cmpsb
dec
sbb
or
addr16
jae
cmp
cmpsl
leave
clc
test
ret
pusha
arpl
inc
pop
cmpsb
or
pop
mov
cmp
and
out
pop
gs
jns
xor
and
js
mov
int3
mov
xchg
fcoml
or
pop
nop
imul
xchg
inc
les
int3
mov
loop
les
sbb
cmp
in
test
lds
in
aam
pop
xchg
mov
fdivs
bswap
outsl
rorb
push
movsl
test
or
ret
push
syscall
pcmpeqb
mov
mov
mov
ret
add
jae
adcl
out
js
les
inc
sub
jae
or
xor
push
adcb
fimuls
inc
sbb
sahf
mov
mov
ja
icebp
insl
pop
add
orl
ja
fmull
insb
push
js
xchg
mov
jl
test
mov
cmpsb
mov
cmp
add
xor
je
lods
or
idivl
push
sbb
out
adc
es
addr16
repnz
inc
adc
imul
outsl
js
push
in
jne
mov
dec
jae
push
jbe
adc
test
sbb
outsl
inc
arpl
or
pusha
and
jno
jns
dec
push
jbe
push
outsl
insl
bound
outsl
js
pop
decl
pop
push
lods
or
mov
andps
ficoms
cmp
cmp
mov
in
jl
add
cmpsl
xorb
inc
pop
inc
cld
pop
xchg
push
push
push
push
inc
or
popa
push
loope
dec
inc
rcr
ja
inc
jne
filds
fwait
or
ja
inc
jl
repnz
inc
jbe
lock
xor
and
and
and
les
mov
enter
test
enter
mov
or
nop
cltd
std
andb
pusha
pop
pop
xchg
ret
aas
mov
and
push
mov
test
jl
je
or
enter
fs
enter
pop
xor
and
and
and
xor
or
enter
and
xor
and
sbb
or
and
enter
add
icebp
imul
and
dec
and
mov
fdivl
cmp
or
mov
andl
addl
stos
push
popf
push
into
mov
mov
dec
cld
movups
pop
movb
dec
insl
lods
rcr
sbb
subb
or
insb
nop
call
xor
and
and
and
mov
mov
lods
test
xor
and
sbbl
or
mov
jl
and
enter
insb
orl
push
xor
and
push
xor
and
and
and
sub
sbb
sbb
xchg
adc
or
inc
push
sbb
add
orl
dec
cld
clc
hlt
lock
enter
in
enter
enter
aam
int3
and
rolb
mov
or
enter
movsb
xor
and
and
and
addb
je
or
enter
fs
and
and
and
inc
orl
cmp
xor
or
enter
and
enter
sbb
enter
adc
or
orl
add
dec
push
sbb
clc
hlt
lock
in
call
push
loopne
fcoms
ror
inc
push
sbb
rolb
fs
mov
fs
inc
lods
test
fs
inc
push
mov
inc
sbb
xor
pop
out
push
cmpb
and
nop
inc
xchg
push
push
sbb
inc
push
sbb
dec
push
sbb
inc
cmp
sbb
xor
sub
insb
dec
push
sub
and
and
and
or
jns
enter
cld
clc
sbb
hlt
lock
fs
inc
push
call
push
sbb
fcom
orl
sarb
xor
and
mov
xorl
test
mov
pushf
cwtl
xchg
orl
nop
mov
and
and
and
and
push
orl
push
dec
dec
inc
or
enter
cmp
xor
fs
xchg
sub
sbb
adc
nop
inc
push
adc
nop
inc
fiadds
add
sbb
insb
clc
pmuludq
lock
sbb
call
inc
push
aam
inc
push
sbb
int3
enter
fs
sarb
mov
xor
mov
push
movsb
mov
pushf
cwtl
xchg
enter
nop
mov
test
int3
scas
inc
cmp
xor
int3
dec
jg
push
inc
xchg
jo
sbb
push
nop
inc
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
nop
and
cmp
inc
push
sbb
and
sbb
sbb
adc
push
sbb
or
sbb
add
dec
cld
xor
and
and
xor
jno,pn
cmp
mov
imul
js
lcall
jno
add
in
test
out
ds
and
or
jns
mov
push
and
outsl
lea
mov
push
insb
and
or
daa
inc
scas
or
push
push
fs
mov
inc
test
aas
inc
dec
rorl
sbb
cmp
mov
sbb
sub
insl
inc
arpl
sub
and
out
std
add
dec
add
adc
add
jae
pop
sti
mov
pop
add
dec
push
dec
das
in
mov
mov
aas
cmp
push
push
add
dec
mov
push
xor
or
lods
frstor
add
push
push
pop
cltd
nop
and
enter
dec
es
rol
jp
rolb
repnz
cltd
adc
stos
movsb
cmpsl
insl
es
inc
and
fidivl
adc
mov
sub
push
loope
sti
mov
xor
jl
mov
or
xor
test
inc
xor
push
push
mov
test
test
psllw
enter
hlt
xor
and
and
and
std
orl
jmp
loope
xor
and
jecxz
xor
and
cmpsb
sub
push
jmp
nop
popa
sub
in
in
nop
inc
push
sbb
out
rolb
sbb
roll
sbb
aad
xlat
sbb
fcomp
fisubl
push
fcmovnu
fstl
ffreep
inc
push
sbb
ret
push
sbb
sbb
enter
nop
inc
push
lret
int3
int
inc
push
sbb
iret
mov
push
sbb
mov
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
mov
movsb
movsl
cmpsb
cmpsl
sbb
test
stos
fs
inc
push
stos
lods
lods
nop
inc
push
sbb
sbb
xchg
push
sbb
xchg
xchg
xchg
sbb
cwtl
cltd
lcall
popf
nop
inc
push
sbb
sbb
addl
fs
test
nop
inc
mov
push
mov
mov
fs
jae
sbb
jne
ja
fs
inc
js
jp
nop
inc
push
jnp
jge
inc
push
sbb
pusha
inc
push
sbb
arpl
sbb
sbb
inc
push
inc
push
imul
push
sbb
push
inc
push
sbb
push
push
sbb
push
push
push
sbb
pop
pop
pop
call
or
jae
add
add
aaa
in
arpl
lock
aaa
in
pop
test
test
xchg
fcompl
dec
cwtl
sbb
jp
push
sub
xor
dec
pop
loope
shrb
sub
fdivr
adc
inc
shlb
leave
jmp
sti
ds
daa
push
and
shlb
add
ret
cmpsl
mov
sub
imul
sahf
and
or
es
or
and
jbe
mov
inc
pop
je
mov
cmp
add
cmp
cli
mov
shl
cmpb
out
push
shl
nop
into
xor
xchg
mov
pop
jb
mov
or
push
add
mov
insl
mov
and
cwtl
cs
push
aas
mov
jg
add
jg
call
nop
add
cli
cmpsl
rolb
loopne
push
jg
lock
imul
js
pusha
add
addb
pop
jg
nop
add
rolb
loopne
outsb
call
add
add
add
push
add
jo
sbbb
add
lods
add
add
add
add
inc
sahf
mov
sub
add
add
clc
test
add
dec
aas
add
sarl
add
add
ja
fs
add
jg
pop
mov
add
or
xor
add
add
add
add
add
in
jo
addb
add
add
add
add
push
loopne
lock
add
pusha
sbb
add
clc
pop
xor
pusha
add
add
inc
push
mov
rolb
mov
add
add
inc
lock
adc
add
add
lock
push
and
pop
push
in
inc
rolb
add
or
call
add
xor
loope
sqrtps
add
add
push
daa
mov
jbe
cmpsl
jo
aaa
pop
add
test
int
fdivrl
arpl
jle
jns
insl
ja
add
sub
push
std
pushf
ret
stos
inc
addb
je
lahf
subb
mov
sub
fists
xor
inc
add
adc
adc
arpl
push
sbb
mov
xor
stc
sub
loopne
das
add
sbb
inc
adc
ret
loopne
loope
ret
and
pop
and
push
mov
aas
dec
fdivrs
in
rolb
push
add
fdivrp
stc
negl
jmp
push
push
push
pusha
push
pop
jo
addb
push
mov
imull
pop
loopne
lock
mov
mov
pop
inc
push
pop
pusha
pop
jo
pop
addb
pop
mov
pop
das
mov
idivb
loopne
cmp
adc
and
xor
inc
or
jo
outsl
clc
xchg
orb
out
orl
or
or
incl
shlb
jp
or
or
or
mov
das
decb
inc
or
pusha
or
jo
xor
in
adc
xor
pop
rcr
in
mov
rorb
adc
lock
xchg
outsl
add
add
adc
ret
arpl
or
or
push
or
mov
nop
in
mov
out
rorb
daa
or
or
or
jns
pop
jbe
or
out
or
or
jo
push
sub
lahf
or
cmp
nop
or
rcl
or
js
cmp
lcall
or
or
mov
or
or
mov
cmp
jo
orb
mov
lahf
in
hlt
call
or
add
or
idivb
xchg
or
or
fdivrp
pusha
and
or
outsb
pusha
or
nop
or
or
lock
ljmp
and
xor
inc
push
push
push
pusha
push
jo
orb
adc
call
push
rorb
push
loopne
lock
inc
test
pop
pop
lsl
wrmsr
cmovo
out
push
punpcklbw
int3
fiaddl
jo
dec
mov
imul
lret
xchg
sub
add
pop
fsts
jnp
adc
push
add
dec
cmpsl
fiaddl
sbb
mov
scas
stc
pop
roll
inc
push
mov
adcb
mov
into
out
rclb
incl
mov
fdiv
mulb
adc
add
pop
adc
dec
roll
outsl
aas
push
mov
es
cltd
scas
adc
aaa
jecxz
fisttps
push
adc
xor
addl
push
nop
adc
add
mov
sub
nop
cmp
sar
add
outsl
push
push
stos
adc
add
adc
and
xor
filds
in
cmpsl
inc
adc
fildl
scas
dec
add
cmp
xchg
push
jbe
pop
fidivrs
add
jo
pop
roll
or
pop
aas
xchg
pop
lods
pusha
jbe
fiadds
sbb
maxps
ud0
jl
rclb
lahf
adc
adc
pop
adc
rcll
scas
aaa
adc
adc
adc
flds
or
adc
pop
ficoms
mov
sub
es
push
jg
adc
fnstsw
adc
adc
adc
repz
in
jg
adc
adc
adc
adc
push
ds
adc
add
movsl
dec
mov
fistps
popa
fwait
and
dec
mov
jns
in
add
stos
in
ffreep
mov
push
lret
push
or
rolb
lock
adc
pop
xchg
xchg
mov
cmp
and
jg
ret
and
adc
jo
adcb
adc
push
repz
jecxz
adc
rolb
scas
adc
adc
mov
jnp
xchg
lock
call
es
push
push
sbb
cmpsl
adc
cmp
out
ja
add
orb
jo
push
xor
mov
mov
dec
cmp
fwait
rorb
mov
vmovlhps
ss
jg
fstpt
jle
pop
jp
adcb
pop
es
xor
jg
lcall
pusha
aas
bts
push
fidivs
sbb
or
and
sub
test
pop
das
adc
fildl
pop
or
aas
outsl
mov
mov
or
adcb
pop
mov
jle
or
pop
jg
pop
mov
or
pop
push
das
fidivrs
xor
adc
and
xor
inc
jle
sbb
and
xor
jo
or
sbb
dec
pop
sub
add
scas
stc
mov
dec
rcrb
loopne
add
lock
aaa
int3
sbb
sbb
pop
adc
add
lods
pop
cld
enter
xor
add
mov
mov
ljmp
lret
pusha
sbb
sbb
fcmovne
outsb
mov
aas
sbb
shrb
mov
and
mov
iret
jecxz
mov
mov
out
loopne
add
sarl
mov
push
jnp
sbb
add
pop
push
push
adc
or
repnz
or
adc
push
fs
sbb
sbb
std
ja
sbb
sbb
packuswb
adc
adc
mov
sbb
adc
push
jb
les
adc
sub
sbb
mov
mov
dec
inc
add
mov
add
or
pop
insb
dec
fwait
leave
add
add
add
sbb
lcall
add
jle
and
or
dec
pop
add
push
cltd
cmp
add
dec
or
jb
mov
jo
or
addr16
sub
jo
inc
xlat
ss
or
xchg
sbbl
or
lods
and
add
add
or
or
arpl
jbe
fldl
add
sbb
add
sarb
dec
mov
sbb
add
add
outsb
add
adc
fildl
or
push
push
rcrb
insb
nop
pop
fsts
sbb
cmp
sbb
add
jg
dec
dec
insl
in
jno
fistps
sbb
aas
sub
xor
add
pusha
rolb
or
aaa
or
test
scas
xor
subb
inc
mov
fisubl
jle
jae
popw
adc
add
mov
ss
xorb
jmp
inc
ficoml
addr16
lret
adc
les
imul
imul
cmp
int3
push
lods
add
sbb
jg
incl
shll
imul
popa
and
pop
or
into
inc
rorl
xchg
cs
pop
or
popf
sbb
xor
or
xor
mov
xchg
sub
mov
push
lahf
imul
aas
lahf
adc
fsubs
add
scas
or
xchg
or
lods
in
add
sbb
mov
and
cltd
jno
mov
or
add
xor
pop
jge
fnsave
cwtl
push
xchg
mov
int3
subl
or
mov
push
mov
imul
in
cmp
inc
xchg
and
add
add
xchg
cmp
push
adc
jecxz
pusha
nop
cli
mov
arpl
vmread
push
add
fisubl
or
add
jns
gs
orb
add
sub
adc
mov
pop
lahf
push
or
or
and
push
add
push
das
add
imul
insl
pusha
incl
add
pop
pop
lods
pop
inc
sbb
cmp
pop
pop
sub
jns
or
pop
adc
add
xchg
test
stos
sub
sub
mov
xor
pop
sub
add
add
imul
adc
mov
mov
pop
sbb
xor
dec
pop
add
fwait
pusha
sbb
and
sbb
shll
and
add
xor
push
dec
lahf
orb
pop
insb
xchg
add
sbb
and
dec
aaa
inc
mov
push
push
mov
mov
ret
sub
or
xchg
push
or
and
lds
ja
mov
mov
adc
fstpl
aaa
dec
adc
test
mov
mov
mov
sub
lcall
imul
lods
fbld
add
mov
or
sub
lahf
or
add
fnstenv
imul
cltd
push
mov
add
mov
adc
push
adc
cmp
sbb
adc
xchg
insb
imul
int
test
cmpsl
shll
push
pop
pop
add
pop
add
add
adc
fmuls
daa
lahf
jbe
lret
add
call
push
adc
push
jno
cmp
sbb
add
push
fisttpl
sbb
and
push
add
or
pop
stos
or
push
daa
cmp
sub
sub
push
add
pop
push
mov
rclb
aas
pop
sbb
daa
cmp
mov
push
xchg
pop
popl
or
push
add
fiaddl
jb
pop
ret
or
and
scas
pop
in
sub
outsb
popa
or
aas
sbb
sbb
out
sub
sub
sub
roll
push
pop
aaa
fisttpll
sub
nop
push
stos
mov
lcall
mull
xor
or
add
dec
adcl
inc
dec
inc
outsl
pop
sub
lock
xor
imul
ret
jecxz
mov
imul
jo
pop
adc
sahf
mov
sbb
or
push
pop
sub
sub
xlat
shlb
xor
mul
xor
push
mov
int
mov
pop
mov
push
pop
sbb
aad
xchg
add
inc
xchg
pusha
lcall
inc
dec
out
or
test
mov
inc
mov
jb
jmp
lret
xor
push
mov
pop
pop
je
mov
iret
mov
adc
add
xchg
fsubr
nop
lcall
rcrb
or
call
and
add
xor
add
ret
jnp
jnp
jno
ret
pusha
or
rcll
adc
popf
daa
mov
stc
aam
lcall
add
inc
add
add
test
fldenv
sub
jg
insb
pop
inc
imul
push
pushf
lock
sti
xchg
jo
pusha
adc
push
sbb
pop
movsl
mov
sbb
jne
adc
lahf
push
aaa
push
dec
adc
stos
aas
fstp
inc
push
ss
loope
lods
arpl
ss
pop
jecxz
popa
or
aas
push
xchg
xchg
xchg
jg
pop
adc
pop
lods
rol
lea
roll
aad
dec
pop
add
lret
sldt
popf
pop
insl
mov
adc
and
add
pop
das
lea
or
mov
add
int3
addr16
arpl
jbe
mov
imul
stc
adc
inc
xor
lcall
xor
push
sbb
push
or
sbb
lret
call
mov
add
and
xor
pop
insl
or
mov
sbb
and
pop
push
or
dec
add
adc
stos
or
add
nop
ljmp
les
mov
negb
push
pusha
or
adc
or
add
daa
mov
lock
and
adcb
xchg
nop
add
mov
fidivs
add
add
andb
mov
inc
add
add
add
and
aam
fidivl
or
xor
or
test
pop
inc
pop
push
or
pusha
mov
pop
push
aaa
xor
stos
xchg
fiadds
push
out
xchg
fists
add
jns
rclb
add
inc
leave
adc
shrl
repnz
sub
nop
jbe
add
pop
inc
shll
xchg
xor
push
nop
sbbb
fiaddl
mov
rclb
and
cwtl
pop
cmp
add
lock
adc
mov
inc
add
ret
pushf
mov
xchg
add
cwtl
cmp
nop
adc
pop
sbb
add
fcoms
repnz
pop
shl
popl
lock
add
xchg
mov
scas
fimull
sbbl
mov
addb
cmpsb
pusha
push
insl
mov
inc
outsb
ret
adc
or
inc
push
sbb
sbb
inc
jo
and
inc
pop
sbbb
jg
das
sbb
sbb
shl
jae
xor
scas
mov
or
mov
bswap
lahf
rcrb
or
adc
xor
stos
in
pop
inc
jg
aad
add
jmp
xor
call
clc
aas
push
sbb
or
push
sbb
sbb
and
seto
sarb
xor
push
sbb
dec
or
adcb
mov
mov
sub
inc
rdmsr
xor
sub
aas
jg
sbb
lcall
cltd
sbbb
sti
decl
aas
mov
cmp
lds
aas
lcall
imul
push
aad
pop
push
dec
popa
ret
push
dec
jae
das
leave
ud0
in
fnstcw
xor
jecxz
jmp
and
lds
mov
jbe
loopne
stos
ljmp
je
in
outsb
aas
or
xor
pop
sub
sbb
or
jg
mov
mov
sbb
pop
pop
cmp
clc
inc
lahf
ret
xchg
sub
adc
pop
add
pop
mov
aas
ljmp
adc
outsb
adc
out
scas
lahf
les
push
add
jno
iret
jg
sbb
scas
adc
push
pop
seto
and
xor
ss
cmp
or
enter
cmp
or
aas
cmovo
ja
sbbb
bswap
mov
das
push
push
inc
orl
push
push
inc
inc
inc
or
enter
inc
xor
and
mov
or
dec
pop
xor
push
add
inc
andb
add
jb
out
imul
dec
into
mov
and
dec
jo
cmp
dec
enter
pop
mov
mov
pop
cmp
jecxz
inc
xchg
fidivs
pop
icebp
repz
stc
cmc
sbb
sub
jecxz
adc
jg
fmuls
jle
inc
push
dec
and
mov
pushf
fistpll
aad
orl
lahf
ud0
aam
dec
add
xchg
pop
decl
scas
aad
aas
push
das
pop
add
pop
inc
ficomps
stos
and
lahf
pop
fisubrl
adc
add
aam
xor
shll
out
jg
mov
mov
jg
stos
pusha
push
popl
scas
sub
sbb
aaa
bound
mov
outsl
scas
lds
adc
push
adc
fbld
mov
mov
movq
roll
and
xor
sbb
movq
or
and
inc
inc
aas
sub
add
das
adc
pop
push
shlb
rcrb
mov
push
xor
mov
add
add
mov
add
mov
add
push
sahf
xchg
addr16
pop
or
adc
mov
mov
into
dec
push
test
lea
xor
adc
sub
pusha
and
les
fisttps
or
and
pop
push
jl
mov
sub
cmp
imul
dec
cmp
test
mov
add
add
inc
dec
bound
pop
inc
lcall
enter
inc
imul
outsl
or
jge
jp
push
mov
dec
mov
push
or
data16
outsl
fidivs
sbb
fs
jo
fildl
sti
fstps
sbb
gs
push
outsb
fs
testl
int
sbb
adc
jae
imul
jle
push
jb
insb
test
aam
mov
enter
or
mov
daa
mov
inc
jmp
fstpt
adc
inc
js
outsb
popa
xchg
fldl
and
imul
es
insl
push
daa
dec
or
je
or
pop
dec
outsl
xor
jo
lret
xor
adc
divb
testl
and
mov
or
sub
add
addr16
cmp
pop
push
inc
fs
dec
cmp
sub
push
pop
or
mov
movsl
push
in
inc
adc
test
cmp
repnz
sbb
push
mov
cmp
fmull
push
faddl
loopne
inc
cmpl
mov
xchg
inc
lcall
lcall
adc
lods
sbb
pop
add
pop
mov
enter
fdiv
jl,pn
pop
sbb
in
nop
lret
mov
fsubr
das
rcr
test
mov
enterw
cs
imul
fidivl
mov
lods
sbb
push
test
cmp
mov
xor
cwtl
inc
nop
cs
mov
xor
adc
xorb
jae
or
cmp
or
sbb
jae
je
push
jo
pop
push
mov
loopne
ret
lcall
cmpsl
pusha
inc
xchg
inc
cs
lock
outsb
sbbl
cs
pop
push
insb
mov
and
dec
push
mov
nop
lret
dec
imul
push
xchg
jbe
xor
data16
sbb
mov
add
adc
mov
les
je
xchg
fwait
sbb
mov
cmp
push
mov
xchg
push
and
out
adc
cmp
push
or
sbb
popa
lods
cmp
mov
or
das
fstpl
sahf
inc
inc
jl
xor
mov
outsl
das
insb
inc
fdivr
inc
pop
pop
push
mov
xor
and
push
inc
or
and
add
cmp
jns
insl
in
jne
add
and
inc
fwait
push
adc
jg
aam
pop
mov
rcll
cmp
push
lahf
inc
rorb
sub
mov
push
jmp
sub
xchg
inc
dec
jns
mov
sub
dec
flds
lahf
xor
lods
dec
dec
sub
inc
xchg
pushf
add
clc
add
cmp
jecxz
in
mov
movb
pop
add
repnz
sahf
nop
jne
push
inc
add
sub
or
push
add
mov
imul
rcrb
rolb
xchg
dec
pop
in
add
mov
push
test
pop
scas
dec
cmp
aad
and
inc
or
xor
sbb
sbb
pshufw
xchg
pop
hlt
cmovbe
ss
or
sbb
mov
testb
push
xlat
xchg
push
inc
inc
arpl
imul
jno
push
out
pop
and
xor
fs
inc
push
mov
iret
pop
sbb
inc
orl
fcomi
sbb
or
dec
or
pusha
negl
xchg
inc
aas
ret
push
or
xor
nop
sub
push
cld
ss
hlt
xchg
pop
or
dec
jae
sbb
fs
cmp
roll
inc
insl
je
push
mov
pop
mov
or
mov
aas
outsb
or
add
cmp
lahf
and
out
adc
and
add
in
and
or
inc
and
add
add
sub
and
add
fsubl
xchg
orb
fs
movl
mov
in
cwtl
bound
or
adc
cltd
fldl
sub
add
or
insl
jle
call
adc
shrb
inc
dec
pop
mov
fwait
or
pop
hlt
sub
imul
sub
aas
leave
or
lock
outsl
ja
roll
daa
aas
push
add
inc
lds
pop
inc
add
dec
or
mov
inc
pop
add
aam
mov
or
lds
push
dec
or
stos
or
push
lret
dec
fiadds
sub
popf
add
test
push
aas
inc
cmp
xchg
or
add
fildll
push
orb
rol
nop
mov
mov
pop
dec
mov
adc
jb
jne
mov
movb
pusha
adc
popa
repnz
in
add
pop
push
and
inc
xor
sub
ficoml
xchg
pop
mov
sub
lods
xorb
sti
pushf
jnp
in
pop
enter
or
push
add
adc
sbb
inc
sub
pusha
sbb
rolb
push
mov
push
jp
rcrl
sub
cmp
pop
into
pop
cmp
adcl
das
pusha
sbb
push
sub
inc
inc
or
and
mov
das
adc
inc
jno
or
sbb
popa
sbb
xchg
cs
add
inc
ret
inc
in
lods
andb
pop
cmp
dec
xor
iret
popa
test
adcl
data16
scas
pop
sbb
jb
loopne
pop
bound
bound
sbb
mov
push
inc
pop
pop
imul
pop
add
fstp
lods
insl
jb
insb
push
cmp
pusha
movsl
ret
add
cmp
inc
dec
gs
jo
add
imul
add
popw
jg
adc
scas
out
sub
dec
pop
inc
pop
dec
xor
push
nop
mov
inc
lods
or
mov
mov
add
arpl
fs
xchg
scas
aas
arpl
and
jmp
dec
jae
pushf
cmp
sbb
fs
and
and
sub
pop
daa
cmp
adc
mov
mov
mov
pop
stos
outsl
adc
lcall
xor
or
pop
and
add
jns
pop
pop
inc
and
sub
je
ss
pop
xor
leave
inc
add
fs
mov
gs
test
or
icebp
stos
loopne
imul
xchg
nop
pcmpeqd
pop
mov
and
sbb
mov
mov
sub
and
ljmp
add
and
das
je
cmpsl
inc
and
mov
xor
and
das
movsb
shrb
pop
sub
and
push
jb
push
pop
jne
jge
mov
sbb
frstor
imul
sbb
lock
pop
nop
cmp
call
mov
pop
push
xchg
nop
pop
add
imul
mov
in
movsl
or
mov
pop
adc
xor
push
and
and
and
icebp
sbb
rcll
mov
mov
and
sub
mov
movsb
arpl
push
xchg
mov
pop
and
xchg
xor
push
cmp
ljmp
ss
sub
test
xor
rolb
pop
fcompl
js
ljmp
cmp
inc
stos
or
insb
push
xor
pop
mov
or
fnstenv
daa
mov
and
test
insl
or
sub
or
and
xchg
or
inc
pop
pop
add
adc
daa
mov
pop
mov
fbstp
mov
and
mov
outsb
dec
pop
fs
rcll
addw
pop
sub
push
add
push
aas
call
mov
add
or
mov
adc
cmovae
push
repnz
jl
cwtl
test
test
pop
std
xor
in
push
mov
or
pop
jo
pop
cmp
mov
in
xchg
mov
movl
push
adc
inc
mov
cmp
push
or
imul
mov
xor
push
pop
jno
xor
and
js
orl
aas
push
add
shll
pop
sub
aas
pop
jnp
push
cld
jb
push
add
xor
sbb
addr16
imul
push
sbb
xchg
push
sub
jb
pop
sbb
mov
adcb
shlb
xor
movl
jb
scas
jae
pop
insb
xchg
inc
pop
dec
push
imul
or
mov
and
xor
jo
ja
jae
daa
in
add
je
jae
or
xchg
and
and
jo
iret
pop
cmp
rcl
and
push
and
pop
mov
lock
xor
xlat
pop
inc
ss
or
jne
inc
leave
or
and
test
push
add
cwtl
adc
sub
push
sub
fnstcw
adc
mov
adc
jbe
or
or
and
out
out
mov
imul
xor
add
xor
add
add
cs
xor
sbb
and
pop
pop
xor
mov
andnps
xor
inc
push
aad
or
adc
and
inc
xor
adc
jbe
and
mov
add
push
add
mov
xor
fcoml
cmp
mov
imul
aam
int
push
and
enter
insl
or
xor
and
sahf
add
ss
mov
adc
or
dec
inc
es
fwait
das
sbb
shrl
leave
cmp
and
imul
mov
jo
sub
fsubrs
cld
pop
lods
or
xor
gs
push
into
or
xor
add
jne
adc
lds
xchg
sahf
into
int3
sarb
xor
out
pop
gs
inc
loopne
jns
loopne
xchg
sub
jmp
mov
add
sub
xor
in
and
dec
jb
cmp
rorb
xchg
das
pop
jl
je
push
dec
popa
fs
sysret
push
lock
push
sar
decl
dec
pushf
fists
jno
cmp
fisttps
cltd
add
adc
push
mov
and
das
les
or
add
xchg
cmp
adc
test
popa
sbb
inc
push
je
dec
or
cmp
and
es
cmpsb
pop
jp
dec
ret
and
and
cltd
pop
push
lock
inc
shl
mov
roll
fiadds
cmp
cmp
inc
sbb
push
or
or
xor
rcll
movsb
add
jo
inc
add
mov
mov
lds
mov
mov
in
and
aas
je
imul
add
imul
pop
mov
sub
jne
int3
add
add
xor
es
enter
dec
aam
jl
jb
out
pop
jl
or
mov
push
loope
icebp
dec
pop
ds
test
ljmp
mov
xor
jle
jge
lock
mov
cmpsb
cmp
dec
outsl
jne
adc
and
mov
lds
or
push
or
outsb
popa
sub
shll
das
sbb
mov
mov
jns
fistpl
adc
pop
mov
dec
lcall
and
jb
xor
fwait
stos
adc
push
jbe
jp
pop
pop
fmull
push
cli
lret
mov
mov
cmpsl
jle
push
inc
ror
and
dec
cmp
imul
xchg
jge
xchg
insb
and
add
js
and
and
fisttps
daa
je
inc
gs
lahf
jge
rorb
enter
sub
int
cmpsb
pop
mov
add
xor
repnz
mov
push
pop
add
jnp
add
xchg
jg
ds
scas
test
mov
call
dec
dec
outsb
rclb
xchg
pop
test
mov
jo
in
repnz
sbb
dec
and
jg
add
add
and
subl
je
and
or
dec
popa
js
ja
cli
inc
popa
jo
arpl
sbb
xchg
cmp
xchg
inc
in
sub
inc
and
add
sahf
or
enter
test
sbb
inc
jne
enter
filds
or
push
mov
push
sbb
leave
cmc
xchg
je
repnz
inc
fldlg2
mov
enter
dec
je
inc
sahf
or
ret
inc
or
fs
xchg
mov
push
xor
and
inc
push
jns
sub
mov
or
fs
mov
les
fs
daa
lea
pop
push
mov
mov
xchg
cmp
and
cmp
push
push
add
or
nop
ja
ss
mov
or
cmp
loopne
pop
stos
mov
or
jno
sub
int
cmp
in
push
pop
sbb
fimull
inc
movsb
xchg
daa
or
add
dec
inc
ret
adc
popf
dec
ss
pop
xchg
or
xchg
adc
push
stos
in
add
in
fdivs
cmp
int
pop
xor
xor
or
fadds
inc
jo
stos
insb
shrb
imul
dec
mov
pop
adc
and
cmp
and
movsb
or
test
xor
push
addb
fsubrl
add
fs
xor
push
leave
mov
or
repnz
aad
and
add
les
push
leave
and
add
xor
nop
out
rorl
stos
in
sbb
xor
and
add
das
mov
push
in
dec
cmpsb
add
imul
aam
mov
adc
and
add
pop
iret
push
lret
jo
xchg
jo,pn
lods
das
xchg
test
xchg
adc
lods
imul
mov
scas
xor
or
sub
jbe
leave
nop
or
mov
xchg
mov
mov
jo
mov
in
cltd
or
adc
jmp
add
filds
push
inc
outsb
jae
es
je
xchg
and
cmp
sub
jo
push
adc
js
aas
js
inc
adc
loopne
xchg
test
jmp
shll
cmpsb
inc
mov
or
pop
dec
sub
adc
pop
mov
bound
push
xchg
aas
and
adc
ds
xor
cmpxchg
int3
adc
nop
or
je
fwait
or
mov
shlb
cltd
nop
inc
cmp
or
cs
xchg
dec
js
repnz
inc
mov
inc
xor
loope
inc
sub
inc
or
mov
aas
aam
pop
addl
int
clc
pusha
fadds
movsl
dec
inc
test
push
push
pusha
push
lock
fisttpl
sbb
int
pop
mov
clc
rorb
test
lods
insb
add
dec
xlat
in
cwtl
dec
inc
and
dec
gs
push
leave
cmp
lods
add
or
pusha
pop
repz
dec
insb
es
adc
add
mov
or
jbe
inc
mov
mov
andb
fs
sbb
mov
sub
and
dec
sahf
inc
popa
sub
mov
mov
pop
test
mov
add
popf
jl
push
repnz
adc
push
arpl
repnz
fldcw
rolb
inc
xor
inc
push
mov
or
test
aam
or
sarb
inc
outsb
arpl
imul
adc
pusha
push
call
xchg
in
es
mov
mov
cltd
adc
pop
cmp
add
pop
pushf
xchg
dec
sub
push
add
mov
dec
jae
or
cmp
xor
sbb
enter
mov
inc
sbbl
dec
pusha
sbb
in
js
mov
aad
xor
orl
pop
outsb
orl
jge
mov
and
rolb
repnz
aas
xchg
xor
add
add
adc
jbe
or
pop
push
fmuls
push
sbb
adc
addr16
enter
pushf
setne
cmpsl
xchg
call
icebp
dec
int3
pop
jg
dec
dec
pop
out
call
sub
push
addl
pop
in
adc
xlat
mov
xchg
gs
or
mov
sbb
adc
insb
in
outsb
jne
jmpw
js
loop
pop
adc
or
xlat
and
xor
out
mov
insb
test
push
or
repz
adc
sub
mov
jae
in
sbb
push
cmp
pusha
insl
and
push
fsubrs
and
push
popf
shlb
sub
push
push
popa
outsb
cs
pop
rorb
or
add
and
pop
sub
dec
xor
hlt
xor
inc
sbb
in
xchg
cwtl
pcmpgtb
sub
addl
mov
xor
xor
push
sbb
xor
sahf
inc
adc
andb
roll
sarb
cmp
dec
outsl
mov
mov
notb
rcrb
dec
or
sar
dec
mov
mov
gs
mov
sub
pop
jnp
pop
xchg
cltd
pusha
es
pop
cmpsl
xchg
lret
nop
cld
addr16
push
jl
jae
lcall
sbb
and
sub
add
mov
add
dec
sbb
mov
movsb
dec
inc
push
dec
mov
lds
into
outsl
xor
adc
cmp
pop
sub
lea
test
dec
jb
decl
dec
andl
jecxz
les
stc
stc
add
dec
dec
or
sbb
inc
push
fldt
xchg
push
cltd
pop
cmp
dec
mov
outsl
xchg
daa
in
push
add
sbb
mov
push
and
push
sbb
and
add
int
aad
adc
inc
and
pop
mov
setns
loop
inc
and
pop
sub
inc
or
jl
xchg
and
in
loopne
sbb
lcall
scas
xchg
mov
subb
shlb
cwtl
pop
inc
add
cmp
fiadds
lcall
out
lcall
aaa
pop
and
pop
nop
inc
fwait
sbb
xchg
push
repnz
pop
sbbb
and
in
fwait
sbb
push
mov
pop
leave
inc
adc
in
xor
fwait
pushf
lock
mov
xchg
paddb
mov
lock
push
mov
add
jns,pt
scas
xor
push
pushf
xchg
pushf
adc
xchg
pushf
stos
ljmp
jns
sbb
pushf
in
lock
in
repnz
add
pushf
in
sub
xor
cld
cs
icebp
dec
mov
jmp
in
cmpsl
popf
jo
rorb
pushf
pop
je
and
adc
pop
lcall
in
pop
adc
mov
mov
push
pusha
jo
daa
dec
sahf
mov
lcall
iret
xchg
data16
test
push
add
sub
popf
pop
test
pop
mov
mov
pop
pop
sahf
mov
pop
pusha
sahf
mov
pop
jo
pop
icebp
or
sub
jb
xchg
inc
lahf
fmull
jo
repnz
cmpsl
popf
sbb
add
push
jo
cmpsl
lds
jns
pop
lock
aam
into
sahf
xchg
or
mov
sbb
fists
mov
cmp
xchg
fdivs
aam
pop
mov
mov
out
mov
out
syscall
push
xchg
outsl
sub
adc
mov
pop
call
jmp
sub
lds
sub
mov
in
call
std
jg
add
sbb
cmp
int3
addb
jb
dec
bound
aas
shlb
jmp
cmc
es
ss
xchg
cmpsl
jns
and
dec
push
xchg
imul
jmp
dec
das
divb
test
jle
jecxz
enter
ss
lcall
mov
test
mov
andl
cmpsb
outsl
lcall
ss
test
lret
movsb
mov
pusha
sbb
leave
sbb
arpl
xchg
xchg
ss
pop
push
or
pop
cli
sub
dec
sti
lcall
jbe
idivb
jge
data16
sub
repnz
pop
push
pop
mov
push
into
mov
pop
xchg
pop
das
into
dec
sub
into
cld
pop
mov
xor
out
es
scas
inc
push
push
out
aaa
dec
pop
scas
push
scas
dec
adc
outsl
dec
imulb
xor
clc
in
outsb
cs
arpl
int
outsb
stos
push
mov
push
push
out
movswl
dec
subl
ljmp
add
cmp
fisttpl
in
pop
inc
cmp
shll
pop
push
push
jecxz
decl
pop
fimull
adc
mov
jmp
dec
idiv
out
gs
aaa
mov
xor
adc
mov
pop
out
jmp
inc
xor
in
adc
push
fldl
scas
sbb
or
sbb
pop
sbb
or
mov
imul
cmpsb
imul
imul
mov
mov
mov
js
mov
or
pushf
ljmp
fdivrl
mov
xor
pop
int
es
out
pusha
int
xchg
out
loopne
lods
mov
add
cmovo
pushl
stc
pop
loopne
in
pusha
or
and
cwtl
loope
lret
repnz
lret
mov
dec
sbb
mov
adcb
jno
in
stc
dec
add
sbb
inc
sbb
in
cs
xor
mov
ss
inc
pop
les
mov
mov
push
loopne
mov
add
pop
add
mov
ficomps
cmpb
andb
sub
shll
cmp
aaa
dec
inc
pop
in
sbbl
imul
mov
lcall
rcr
xor
cmp
mov
mov
xlat
in
mov
mov
sbb
popa
sti
call
scas
mov
bound
inc
ja
mov
cmp
inc
mov
shlb
aas
cld
stos
aaa
roll
jae
sub
int3
jo
adc
pushl
sahf
sbb
push
mov
fnstcw
lret
shlb
mov
or
mov
lahf
dec
add
push
verw
std
pop
lcall
std
sub
cmp
inc
outsl
lcall
addb
outsl
fwait
cmpsb
imul
imul
imul
xor
inc
lcall
outsl
popa
push
orb
movsl
add
cmpsb
imul
imul
imul
jno
xchg
pushf
lods
add
mov
cmpsb
imul
outsl
add
adc
xor
sbb
xor
mov
shll
add
xchg
add
shrl
mov
fnstenv
add
sbb
outsl
sub
inc
dec
push
add
add
cmpsb
stc
cmpsb
imul
xchg
cwtl
imul
mov
fwait
cmpsb
aad
repz
add
add
shll
sbb
sub
cld
aaa
dec
cmp
add
loop
pop
bound
repz
jbe
in
orl
add
int
fbstp
movb
jmp
fistpll
ljmp
clts
enter
sub
aaa
xor
push
inc
push
sub
dec
push
push
xor
bound
xor
jl
cld
les
fmul
xchg
cmpsl
scas
push
in
lret
aaa
int
mov
enter
into
push
cwtl
loope
mov
fbstp
cli
push
loope
or
pop
add
aaa
dec
repz
pop
push
pop
push
add
ss
xor
add
pop
bound
push
add
push
add
int
dec
jne
addb
add
repz
pop
add
pop
jl
xor
add
leave
iret
aad
pop
pop
add
data16
dec
shr
out
testb
add
or
adc
or
and
xor
popa
add
imul
push
push
pop
fwait
cmpsb
imul
test
cmpsb
imul
outsl
mov
rcr
or
in
repz
daa
ljmp
stc
std
pop
or
adc
adc
daa
and
pop
daa
sub
cmp
and
inc
or
daa
push
or
push
or
jle
fidivrs
popa
jae
imul
arpl
je
sub
mov
xor
aaa
sub
or
popf
std
mov
xor
add
insl
or
xor
imul
adc
xor
sub
fwait
and
les
fsubrs
cltd
in
imul
lea
adc
mov
addb
mov
test
xor
xor
aaa
fisubrl
lea
arpl
imul
lahf
xor
fisubl
lahf
fcomip
push
or
insl
xchg
aaa
xor
arpl
inc
xor
ss
fwait
dec
jb
aaa
ss
mov
in
mov
fwait
aaa
arpl
ficoml
xor
sbb
ja
cmp
adc
inc
sbb
insl
jb
xor
adc
enter
xor
xor
push
fs
mov
cmp
xor
xlat
jg
push
or
mov
aaa
cmp
xor
movsl
enter
fs
cmpsb
mov
xor
bound
leave
and
xor
xor
pop
jge
xor
ss
lods
cld
fbstp
xor
xor
add
imul
jbe
enter
and
or
ficoms
ja
sub
js
loope
xor
into
adc
jecxz
mov
outsl
xor
jne
mov
in
fnstenv
adc
fldenv
push
sbb
cwtl
xor
test
data16
sbb
arpl
push
outsb
movsb
add
repz
sub
or
or
jo
mov
sbb
xor
xor
xor
add
cmp
cmp
aaa
cmp
cmp
movsl
jnp
xchg
imul
sub
lcall
icebp
xor
push
or
cmpxchg8b
int
jne
mov
cmpsl
fldcw
sbb
das
imul
mov
imul
jecxz
data16
insb
or
push
jo
fs
jbe
push
ret
adc
into
jbe
fisttpl
cwtl
or
sbb
sbb
into
or
jp
cmp
jo
rdtsc
inc
xor
xor
or
clc
imul
arpl
fisubrs
ja
cmp
or
xor
cmpsb
in
inc
push
bound
cmp
addr16
cmp
insl
inc
insb
movsb
lea
xor
insl
out
xor
pop
or
ds
xor
fldl
sub
insl
out
in
ss
xor
pushf
dec
pusha
push
xor
ss
add
jnp
ss
xor
sub
in
in
adc
xor
in
xor
imul
addr16
push
aaa
in
cmp
and
leave
js
mov
push
jle
sub
adc
imul
cs
sbb
xor
adc
xor
push
push
popa
fucomip
cmpb
adc
push
pop
test
outsb
adc
adc
adc
adc
xor
neg
arpl
adc
imul
fldl
lret
mov
or
jo
imul
inc
sub
in
mov
subb
bnd
int
cmp
mov
xchg
pop
roll
ret
mov
push
and
mov
dec
aam
fstl
loopne
gs
mov
shr
add
out
adc
or
inc
add
cmpsl
inc
mov
mov
mov
inc
jmp
cmp
mov
cmp
sbb
dec
or
or
jnp
in
adc
cmp
xchg
cli
and
xor
mov
push
pop
lock
pop
jg
add
mov
adc
cmp
sub
push
lock
mov
imulw
add
bt
setb
mov
mov
push
dec
sub
mov
cmc
adc
sub
jmp
jns
and
xor
das
pop
aaa
out
sbb
or
and
sar
inc
andl
add
loopne
dec
lds
iret
lahf
mov
and
push
test
rcl
pop
push
pop
or
pop
verw
enter
pop
cld
xor
sub
push
adc
and
sub
mov
xor
sub
idiv
imull
pop
orl
add
fildl
fnstcw
jne
pushl
pop
adc
sub
pop
pop
jmp
xor
mov
movsb
dec
sub
push
add
mov
icebp
stos
imul
ret
or
inc
lret
clc
mov
fnsave
shld
sub
pop
add
pop
mov
push
aaa
or
sub
xchg
cmp
rolb
aaa
sub
stc
push
jg
mov
and
loop
pop
jg
inc
push
decl
movzbl
cmp
cmp
add
or
jo
in
pop
aas
neg
ret
mov
call
add
push
push
mov
in
ucomiss
sub
xor
mov
pop
orl
je
mov
cmp
je
data16
and
std
dec
jmp
cmp
jl
or
out
cmp
mov
jmp
sub
jne
outsl
and
and
jp
pusha
mov
pop
movsl
hlt
pop
mov
call
stc
add
and
shl
adc
or
lods
xchg
xlat
pop
jmp
xchg
and
mov
in
adc
test
and
or
xchg
shl
pop
sbb
sbb
icebp
mov
mov
ljmp
jecxz
cmc
or
filds
mov
mov
xchg
mov
jno
mov
fidivl
add
test
aad
pop
xchg
mov
mov
adc
add
sbb
imul
xchg
arpl
and
push
ja
in
pushl
jmp
inc
cmp
pop
sbb
jge
aas
repz
jge
aaa
add
xchg
divl
mov
mov
pop
aad
sbb
mov
dec
ljmp
fmull
mov
add
ljmp
push
adc
sub
movsb
dec
jne
aaa
xor
data16
jne
add
pop
scas
sbbb
pop
nop
std
mov
fldl
lea
inc
fwait
xchg
push
or
inc
cli
cmp
movl
pop
xor
push
adcb
xorl
imul
mov
call
mov
xchg
repz
mov
cltd
pop
add
adc
inc
push
inc
and
rcl
adcb
add
push
clc
adc
and
push
add
cmp
jnp
cmp
test
adc
add
mov
add
mov
test
sub
jg
pusha
in
jne
adc
xchg
nop
xchg
rolb
jg
and
mov
aas
push
mov
inc
div
adc
xor
aad
push
jo
dec
pop
inc
cmp
push
imul
add
mov
mov
lds
add
add
add
mov
leave
inc
cmp
sub
xorb
add
pusha
xor
mov
pop
cmpsl
ljmp
mov
mov
pop
adc
sbb
pop
mov
and
pop
lahf
ds
jne
cs
cmp
imul
ds
sub
pop
inc
mov
inc
pushf
jbe
je
add
fsts
push
pop
je
ucomiss
orb
fimuls
ja
cwtl
fisubrl
or
data16
aas
xor
mov
or
jne
or
jns
idiv
clc
inc
add
mov
add
add
add
cmp
jg
cmp
ret
or
decl
fildll
pop
dec
push
insl
jne
add
icebp
shr
sub
jbe
add
push
mov
jnp
add
dec
cmp
dec
jne
pop
jns
jg
push
ret
push
mov
sub
push
je
inc
hlt
cmp
repnz
mov
ret
nop
ss
cli
sbb
js
orb
ret
mov
vcvtsd2si
and
mov
inc
jmp
sub
jne
push
or
xor
clc
dec
clc
jo
add
add
sub
out
xor
testl
je
cmpb
negl
sbb
pop
or
andl
sbb
sub
lahf
sub
add
xor
jno
andl
fsts
cld
mov
mov
andl
fildll
cmp
pop
fadd
faddp
xchg
adc
pandn
add
fprem
fistps
fcompl
insb
clc
mov
cmp
les
push
push
push
cmp
loopne
jae
fnstcw
add
ret
ffree
sbb
jg
ffree
ffree
pop
in
or
js
hlt
icebp
or
lds
sub
lds
insb
xor
inc
add
inc
icebp
and
add
mov
pop
pop
cmpsb
inc
or
adc
nop
fisttpll
decb
inc
fcom
xor
xorb
inc
popa
or
push
push
mov
jno
pop
dec
mov
add
mov
out
cmpsl
mov
scas
pop
outsl
mov
sub
inc
pop
mov
or
out
dec
in
sub
mov
mov
jo
jns
jbe
orb
xchg
aaa
ret
mov
xchg
out
cmp
pop
iret
add
cmpsb
sub
fisubrl
add
inc
scas
jae
hlt
mov
dec
pushl
xor
mov
movsb
rorb
enter
hlt
stc
enter
mov
je
pop
test
or
shlb
call
push
cmpsb
ljmp
xor
shl
adc
insl
lock
loope
pop
jbe
xchg
add
dec
cmp
jnp
mov
dec
pop
sub
pop
imul
xor
mov
jne
call
add
mov
add
xchg
mov
js
add
sbb
sbb
int
adc
cld
mov
rorl
xor
add
pop
push
je
adc
test
adc
add
insb
jl
rorb
clc
aam
xchg
sbb
fisubl
pop
cmpsb
sahf
ret
add
push
mov
jp
cmp
out
jnp
mov
pop
fdivl
sbb
mov
mov
mov
mov
enter
pop
xchg
or
fs
dec
insb
and
ljmp
push
mov
ljmp
loopne
pop
enter
decl
add
ja
mov
and
imul
cli
inc
ja
push
push
adc
mov
roll
movsb
fcoml
mov
and
enter
pusha
jbe
and
xchg
ss
and
popl
ss
subl
push
sbb
mov
addr16
push
lret
add
aad
out
daa
movsl
stos
inc
pop
and
push
add
push
add
cld
pop
xchg
jmp
or
cltd
inc
pop
mov
jae
cmp
pushl
mov
lret
je
cld
pop
lods
pop
test
cs
xchg
es
test
mov
pushf
push
xor
popf
test
sbb
adc
xor
push
pushf
fcoml
and
cmc
jns
loop
jg
push
dec
testb
inc
stc
and
adc
fcmovbe
mov
xor
sub
push
addr16
xorb
enter
cmp
adc
cs
daa
sub
je
or
je
jnp
or
subb
sub
pusha
inc
aas
clc
xor
add
jne
mov
test
xchg
or
ret
sbb
xor
pushf
adc
xchg
fmuls
dec
bound
push
adc
mov
inc
jae
or
xchg
lods
xchg
push
push
sbb
das
add
add
mov
into
cmp
push
pop
push
fs
rorb
mov
add
call
decb
and
cmp
cli
std
in
ja
js
add
jb
push
add
aam
dec
ja
data16
mov
test
nop
xor
lret
data16
mov
stos
enter
adc
fists
clc
shlb
push
and
jbe
call
test
sbb
dec
je
xor
inc
sbb
out
jge
mov
mov
xlat
shll
bnd
push
cmp
into
jl
nop
push
jb
repz
add
ja
inc
cmp
sbb
or
sahf
jg
mov
shlb
daa
jecxz
adc
mov
cmpsl
mov
popa
int
cmpsl
add
stos
inc
and
pusha
sahf
test
cs
dec
push
push
negl
roll
js
gs
mov
mov
or
out
std
push
cmp
test
test
add
cmpsl
popa
sub
or
push
testb
movsl
jo
adc
cmp
pop
hlt
clc
cld
push
hlt
mov
push
fisttpl
lock
cmc
rolb
push
in
sbb
cmc
or
mov
jo
xchg
shl
dec
add
leave
lock
ret
pop
and
iret
push
es
neg
jae
filds
loopne
jo
test
jne
jle
xchg
lods
test
xor
inc
jbe
or
or
insb
inc
in
cmc
jge
popf
push
push
sbb
jne
cmp
call
scas
aas
adc
cmp
add
push
xchg
lds
pop
sub
test
jmp
je
or
mov
pop
xchg
fcompl
push
or
sub
cmp
ret
inc
or
outsl
mov
mov
and
or
nop
add
cmp
pop
fnsave
push
sub
and
jge
add
int3
xor
cmp
shrl
push
dec
mov
iret
mov
clc
roll
movzbl
or
xchg
imul
dec
add
adc
repz
sbb
add
push
add
dec
add
movsb
cltd
jbe
jno
push
jno
sub
movsb
cltd
sbb
or
outsl
pop
mov
mov
cmp
push
or
pop
push
enter
scas
pop
fistl
cmp
pop
data16
jmp
xchg
and
sub
roll
movb
fiadds
jne
push
mov
lret
orl
sub
ffreep
add
cmpsb
mov
mov
mov
negl
pop
pop
scas
cmp
sti
cmc
cli
xor
cmp
jae
leave
push
pop
mov
mov
shrb
ret
adc
mov
inc
push
jb
in
mov
push
cltd
dec
pop
pusha
dec
push
add
jmp
ficompl
repnz
mov
cmp
imul
popa
or
lock
jle
adc
or
push
out
imul
inc
pop
cmp
xchg
insl
push
das
sbb
icebp
inc
pop
push
movsb
and
xchg
inc
inc
std
aas
jl
into
xor
aam
gs
dec
je
mov
mov
add
jmp
sbb
decl
lock
sti
enter
pop
mov
jne
lea
or
inc
call
stos
ret
ds
cmpsb
dec
inc
xor
mov
lods
and
lods
and
mov
cmpsl
mov
lods
jne
sbb
jmp
mov
aaa
fwait
sub
sar
mov
daa
cs
xor
dec
pop
ljmp
lods
loope
sub
hlt
add
clc
int3
or
rclb
mov
aaa
inc
dec
jne
pop
js
adc
xor
add
dec
inc
jmp
in
fstpl
lret
adc
add
or
sub
mov
nop
add
stc
pusha
ds
cmpsl
push
inc
lock
lcall
icebp
and
data16
or
test
mov
lcall
pop
ret
jno
fnstcw
popa
mov
rorb
das
cmpsl
inc
or
fisttpll
popa
sub
push
and
incb
out
or
inc
xor
bound
int
adc
sub
outsl
lret
adc
cmp
push
ljmp
xor
push
pushf
aas
or
ret
mov
adc
insb
inc
dec
inc
cmpsl
adcb
aaa
lret
je
lods
nop
jbe
movl
xchg
add
dec
or
fiadds
mov
imul
push
enter
outsl
mov
jae
push
sbb
jns
int3
adc
adcb
pusha
bound
rclb
cmp
dec
jge
and
mov
lahf
dec
sub
jae
push
rcrb
add
add
adc
ret
dec
cmp
jg
jmp
and
mov
mov
inc
pop
push
mov
jg
push
dec
mov
ss
mov
jle
jl
hlt
jg
lea
mov
dec
hlt
fdivrs
and
mov
enter
int
mov
adc
xor
lea
or
sbb
push
or
xchg
pop
xchg
adc
clc
adc
mov
pushf
cmpl
subl
push
movzbl
inc
pop
inc
mov
cmp
in
fdiv
out
test
jp
mov
add
sbb
add
jp
std
or
out
stos
dec
jne
stos
arpl
out
mov
sub
add
out
cmp
and
dec
cld
lahf
in
insw
ljmp
insl
ss
xchg
push
pop
repnz
fnstcw
pop
cmpb
shr
or
jns
notl
jge
sub
jne
gs
jmp
push
sub
dec
in
and
mov
mov
xor
mov
push
push
sbb
sub
dec
sub
jae
lock
stc
mov
lret
add
mov
out
sub
fadds
and
cmp
mov
cld
je
repnz
les
add
test
ja
imul
data16
ret
sbb
insl
or
loopne
pop
into
adc
mov
mov
adc
cmpxchg
rorl
sbb
je
dec
fadd
and
mov
mov
sbb
lcall
clc
jne
xor
mov
pop
push
add
and
int
rcr
iret
push
push
ljmp
insb
imul
das
aaa
cmp
fadds
xchg
das
mov
ss
cmpsb
xor
shll
sbb
in
cld
adc
fildll
sub
jae
lret
sub
je
iret
cmp
sbb
sbb
jmp
lea
pushf
popf
ja
jne
jno
ljmp
push
sbb
xchg
cmp
fidivrl
test
lock
jmp
and
mov
xor
dec
ror
and
lahf
inc
add
mov
aaa
pop
sbbb
jmp
xor
ret
inc
es
imul
mov
or
rcrl
add
je
stos
int
jnp
call
pop
js
xor
inc
or
jae
in
dec
cld
jmp
daa
fsubs
inc
cmp
ja
or
and
outsb
xlat
mov
jecxz
mov
dec
dec
mov
push
pop
inc
push
xchg
lods
sbb
sub
or
mov
mov
mov
jge
add
xchg
jg
dec
inc
je
mov
or
add
adc
out
dec
je
orl
add
adc
or
and
jne
and
aas
orl
or
cmpsl
adc
push
cmp
rolb
mov
mov
rol
or
inc
sub
and
or
pop
add
and
test
jnp
mov
pop
push
jb
mov
push
xor
stos
or
daa
push
pop
je
xor
stos
or
pop
std
stos
pop
fucomi
or
jge
mov
neg
invd
in
std
imul
xchg
push
push
mov
sbbl
mov
sub
cld
sbb
dec
mov
inc
dec
leave
sti
add
shr
or
jg
orl
xor
loopne
rcrl
pop
jbe
aam
lods
xchg
adc
mov
add
push
adcb
shrb
int3
leave
leave
cmp
mov
mov
adc
sub
mov
sub
pop
imul
mov
adc
mov
jl
outsl
daa
dec
jge
add
call
addb
add
outsl
popf
pop
sub
imull
sbb
shl
lea
jne
mov
clc
ss
jnp
js
fidivrs
adc
add
or
mov
add
fidivrl
pop
add
inc
cmp
mov
call
adc
call
mov
rclb
pushw
aam
insb
pop
subl
fisubs
add
dec
xor
mov
jl
push
add
dec
xlat
lock
cmp
inc
adc
cmp
jl
mov
aas
sbb
gs
xor
dec
inc
imul
neg
and
jmp
lret
sti
outsb
fwait
mov
movsb
je
lahf
and
cmc
adc
shll
repz
adc
xor
fstpt
jmp
fisttps
dec
sub
ret
ds
xor
loop
mov
jle
dec
js
inc
mov
push
mov
aam
add
fbstp
add
cmpsl
mov
cs
or
enter
aas
or
jecxz
mov
xor
repz
fistps
and
sbb
imul
dec
jns
mov
jno
test
mov
out
dec
ja
sbb
mov
dec
cwtl
lret
dec
mov
out
pushf
add
loope,pn
call
je
push
push
cmp
adc
negl
test
push
aam
lahf
or
dec
mov
adc
pop
inc
loop
ret
dec
hlt
test
ds
cwtl
push
outsl
and
inc
add
and
idiv
lcall
sub
sub
xor
fldt
sub
sbb
and
sub
pop
sub
or
cltd
push
mov
sub
sub
sub
aas
lods
pop
add
je
add
pop
cmp
cmpsl
shlb
in
mov
test
pop
dec
mov
and
or
imul
push
mov
cmp
jle
add
lret
rcr
loope
inc
dec
push
mov
cs
imul
rol
adc
mov
sbb
clc
pop
fnstcw
dec
fldt
fstsw
fwait
mov
idiv
addr16
fidivl
jne
lea
mov
mov
sub
mov
shr
and
cmp
aas
mov
mov
jns
aas
aad
push
leave
sbb
cmp
adc
cmp
jg
out
pushl
cmpb
jb
movb
js
decb
and
ja
jmp
loopne
loopne
data16
popa
xor
enter
cmp
shrl
xor
push
bound
mov
fisttpl
ret
pop
out
or
fs
or
es
add
sub
pop
add
pop
mov
fistpll
cld
shlb
inc
sub
mov
inc
cltd
std
loopne
jae
dec
add
mov
fildll
ret
loop
or
mov
cmp
mov
mov
xchg
setnp
jne
mov
sbb
sub
mov
and
jne
pop
in
incl
mov
cmp
aas
and
jg
cmp
inc
ljmp
enter
adc
iret
cmpb
divl
pop
jmp
jo
xor
sbb
loopne
jl
mov
or
rolb
dec
lcall
hlt
fimuls
xor
out
js
push
cmp
add
push
sub
dec
outsl
mov
xor
and
imul
cld
pop
cmp
je
loopne
filds
jg
sub
mov
ret
mov
jg
ss
pop
incl
pushf
rolb
pop
rcrb
xor
dec
jl
cld
fistpll
jmp
fstpt
shll
or
xor
mov
mov
dec
mov
ds
dec
jmp
imul
aad
and
fcmovnb
repnz
icebp
mov
sub
jae
fimull
mov
add
mov
sub
stc
pusha
imul
imul
pop
cmp
sbb
jecxz
add
add
adcb
sbb
cltd
setge
sarl
rolb
adc
mov
sbb
push
and
nop
xchg
or
mov
or
add
pop
add
jae
test
xlat
in
sub
ret
or
or
sar
in
rcr
and
adc
mov
out
and
in
and
and
inc
jnp
add
mov
aas
sbb
or
fcompp
or
and
adc
pushf
jae
push
sub
filds
fstpl
fwait
mov
inc
mov
orl
jbe
mov
cmp
cld
pop
nop
push
leave
jle
pop
dec
dec
or
mov
clc
hlt
cmc
dec
out
fistl
fnstsw
fmuls
xchg
fcmovnbe
push
shlb
adc
mov
cmp
leave
shl
pop
xchg
jge
inc
add
and
adc
fisubl
jl
lcall
loop
test
and
adc
cmpb
sti
adc
fsubrl
pop
xor
add
sub
ja
push
out
add
add
push
push
sarl
inc
xchg
cli
mov
les
test
push
push
das
or
lret
repnz
cmp
cli
cmp
push
stc
dec
push
loopne
add
out
inc
mov
imul
shl
mov
imul
rcll
jmp
fistpl
and
mov
adc
xor
fstpl
fwait
push
movsb
or
jb
mov
or
loope
mov
arpl
add
mov
dec
mov
sbb
inc
lret
jnp
cmp
iret
and
cmpsb
xchg
dec
cld
call
pop
loop
ljmp
leave
and
fldcw
push
loopne
mov
and
pop
and
add
push
adc
xor
shlb
or
inc
shrl
xorl
insb
xor
stos
addb
std
adc
and
or
jb
sti
mov
rcrb
out
pop
inc
ja
adc
and
fmuls
push
xchg
add
inc
dec
adc
imull
leave
dec
mov
pop
lock
insl
shrl
loopne
lahf
test
ret
cli
add
repnz
aas
icebp
cmp
stc
add
ret
or
iret
xorl
fcmovnb
std
roll
lods
std
subl
mov
dec
pop
or
jg
or
call
jg
mov
xor
hlt
lock
mov
jno
inc
pop
inc
aaa
dec
pushw
mov
stc
mov
add
jl
addl
icebp
fidivrs
in
shl
incl
mov
jne
decw
div
mov
imul
in
sub
movzwl
add
mov
aaa
daa
loop
rclb
push
mov
inc
aas
or
inc
xchg
sbb
fcomip
push
insl
mov
or
jnp
ficoms
sub
inc
jmp
dec
aaa
sbb
clc
pop
out
xor
inc
adc
cmp
pop
cmpsl
jbe
adc
clc
push
mov
loope
sbb
test
mov
addr16
xchg
inc
ret
aam
sbb
and
clc
mov
or
jp
cltd
cld
dec
cmp
pusha
jmp
pop
loope
pop
sbb
add
test
and
lea
insb
cltd
repnz
insb
fldl
cwtl
sub
popa
leave
pop
push
add
hlt
or
inc
sarb
cmp
mov
mov
fmuls
mov
shrb
xor
jnp
mov
cli
les
adc
mov
xor
in
or
cmp
adc
je
mov
push
cltd
cld
inc
in
lods
fists
aaa
cmpb
jne
insl
outsb
cltd
sub
pop
push
lea
mov
aaa
sti
or
cmpsl
fcomps
add
cs
loop
push
sub
jge
idiv
fucomi
push
or
loop
mov
adc
in
mov
mov
add
mov
sub
sub
inc
xlat
movsb
mov
adc
pop
adc
repnz
add
shrb
and
pop
pop
int
push
or
inc
in
mov
sahf
andl
mov
push
xchg
in
popa
add
test
outsl
jne
test
xor
loopne
je
or
or
add
dec
add
inc
fidivl
jno
add
cmpl
jge
popa
test
cs
or
xchg
sub
sbb
clc
inc
cmp
dec
fiaddl
add
cmpsl
movsl
idivb
mov
adc
add
sbb
jmp
std
loopne
idivb
imul
pop
mov
add
call
add
repnz
or
or
jmp
sbb
ret
add
pop
mov
xor
mov
mov
push
sbb
ret
andl
cmp
loop
pop
mov
pop
mov
add
daa
mov
pop
shrb
not
add
adc
push
xor
enter
jmp
in
popa
cmpl
or
std
mov
sbb
out
std
pop
pop
incl
inc
dec
lods
jecxz
loop
inc
clc
mov
cmp
sbb
ljmp
push
xor
or
sar
or
aad
insb
rclb
and
sub
adc
lock
mov
sub
and
adc
std
dec
jne
push
loopne
jne
mov
sti
imul
cmp
xchg
push
dec
add
test
ja
jnp
in
push
or
or
xor
dec
pop
pop
pop
sub
insb
pop
pop
ret
adc
in
or
jo
roll
hlt
in
xchg
out
xor
cmpsb
mov
call
jae
jmp
test
cmp
mov
arpl
leave
and
jo
in
mov
outsl
popa
fcoms
inc
push
pop
adc
mov
bound
popf
dec
push
mov
in
loopne
fcomps
movsb
jns
nop
aam
aam
xor
and
or
ja
jmp
sbb
subl
mov
cmpsb
fdivrs
push
loope
xor
inc
call
je
dec
je
dec
add
mov
inc
outsl
cli
cli
push
cmp
test
or
lods
aad
pushf
fstpt
cmp
mov
xor
cld
adc
roll
mov
or
inc
fsubp
xor
in
xor
push
ds
adc
xchg
rolb
loope
jae
jns
dec
das
cli
std
lock
je
or
je
or
push
jmp
fildll
je
sub
inc
cmpb
dec
jle
test
sub
iret
test
mov
mov
test
jne
bound
push
add
pop
xchg
fidivs
mov
in
or
cmp
les
ds
loopne
fmull
sbb
outsl
ds
faddl
jne
or
jmp
sbb
jbe
or
push
xchg
or
cmp
or
popa
div
or
mov
push
add
push
sbb
adc
test
out
insb
and
push
add
sub
loope
xchg
dec
clc
push
scas
push
sbbb
test
or
push
inc
jbe
xchg
arpl
pop
enter
add
into
mov
sbb
inc
pop
sub
adc
in
sbb
shlb
lods
push
test
cwtl
push
xor
cmp
cmpsb
nop
lahf
and
xchg
sbb
pushf
or
das
sub
mov
dec
pop
mov
cwtl
clc
adc
or
add
push
and
stos
arpl
test
leave
push
sahf
add
xchg
or
jb
or
pusha
jmp
mov
cmp
adc
lock
sub
xor
nop
adc
mov
add
push
in
sub
in
sbb
sbb
adc
mov
fwait
mov
daa
mov
sub
out
and
xchg
jmp
lea
add
add
adc
mov
sti
scas
das
add
push
adc
and
sub
mov
pop
add
xchg
mov
mov
push
push
sub
outsl
sbb
fcmovnb
add
push
outsb
clc
sbb
xor
pusha
jne
sbb
mov
mov
cmc
xor
add
ret
add
or
mov
mov
sub
jp
je
mov
sarl
or
imul
mov
in
inc
dec
mov
scas
insl
push
xchg
bound
stc
push
pop
xchg
ljmp
nop
inc
or
adc
ds
mov
aam
jle
mov
scas
push
test
mov
in
xor
idivw
test
idivl
rclb
sub
ret
pop
insl
sti
add
inc
mov
xchg
dec
inc
add
repz
xor
in
push
fwait
mov
inc
jnp
les
pop
add
mov
jae
les
adcl
dec
adc
mov
mul
out
jns
pop
jl
jmp
icebp
cmp
jne
incl
pop
inc
push
mov
push
xor
loopne
inc
je
sbb
dec
je
adc
je
or
push
jmp
mov
sbb
dec
pushf
scas
push
push
add
inc
push
inc
in
mov
bnd
pop
out
dec
xlat
lock
inc
mov
pusha
scas
adc
out
lds
fwait
mov
int
mov
mov
mov
popf
adc
outsl
inc
scas
rolb
es
push
mov
sub
testb
mov
or
or
jmp
add
xorb
addb
push
jle
or
test
rcrb
incl
jp
adc
cmp
hlt
mov
jg
test
enter
lock
dec
std
xor
sub
add
xlat
add
fs
and
add
idivl
call
ret
jo
add
leave
pop
add
inc
pusha
mov
dec
sbb
in
pop
lock
sbb
push
repz
pop
sub
rorb
push
and
xor
jne
fldl
out
inc
test
aad
or
ds
les
je
es
mov
or
add
jl
xor
cwtl
push
iret
push
xorb
movsb
cmpsl
cmpsl
stos
gs
in
enter
jae
mov
dec
push
sub
cwtl
and
pop
in
or
in
jecxz
aas
pop
fs
fs
repnz
jb
daa
cmpsl
lock
inc
jmp
outsl
jb
cmpsb
sbb
loop
lock
stos
fucom
jmp
inc
out
lock
das
insb
pop
adc
in
mov
adc
ljmp
pop
push
jmp
cmpb
ja
in
add
pop
mov
in
out
ret
lods
mov
pop
out
mov
jbe
mov
enter
pcmpgtb
xor
adc
pop
pushf
cltd
repnz
and
xor
fwait
push
ret
dec
xor
inc
or
push
mov
adc
int
nop
xchg
inc
sbb
aaa
jmp
add
add
add
push
and
mov
cmp
push
xchg
adc
inc
jecxz
inc
push
adc
ja
fsubl
sub
je
dec
aam
pop
sub
aam
jge
pop
xor
add
call
mov
cmp
call
add
repnz
clc
xchg
and
repz
ss
ja
add
cs
pusha
mov
in
or
mov
mov
mov
sbb
out
adc
adc
xchg
hlt
js
int3
add
jle
push
sbb
add
loope
pop
or
popf
mov
clc
push
xchg
cmp
sub
push
pop
testb
repnz
dec
or
cs
or
cwtl
sahf
jae
mulb
adc
inc
addl
nop
xchg
subl
or
cwtl
mov
inc
jle
jno
xor
ds
ja
jne
dec
ret
xor
sbb
shld
sbb
inc
hlt
testb
imul
sti
inc
sub
and
dec
shl
daa
push
scas
lock
lret
leave
addr16
hlt
int3
or
rolb
mov
fimull
mov
gs
imul
pusha
mov
out
xor
and
inc
setl
mov
cmc
dec
fcoms
and
adc
nop
les
inc
scas
and
stc
xor
add
add
jbe
push
and
popf
push
pop
xchg
push
sub
add
movsl
xor
xor
loopne
xor
mov
dec
push
or
mov
div
popf
std
fimull
jle
sub
dec
jge
call
sbb
sbb
mov
sahf
or
ds
jns
jbe
test
mov
in
sbb
sub
stos
cli
jecxz
aaa
jmp
fbstp
loopne
sbb
je
pop
jle
xorl
in
int
push
push
test
insb
and
sub
mov
gs
mov
push
or
xchg
mov
adc
inc
xchg
xchg
movsb
and
inc
call
push
fnsave
sbb
xchg
int
loopne
adc
fcompl
dec
and
jmp
pop
fs
mov
imul
jmp
push
xchg
mov
cmpsb
cmc
dec
fisubrs
add
sub
add
fmull
repnz
iret
movsl
je
into
or
xor
xlat
fcoms
push
jmp
mov
jle
stos
push
pop
mov
xor
mov
in
push
inc
rcrb
dec
clc
pop
in
add
or
stos
adc
mov
inc
add
or
xor
dec
outsl
push
sbb
pop
or
and
adc
sbb
mov
inc
sub
loopne
rorb
push
push
cmp
in
jae
push
push
addl
daa
xlat
mov
out
dec
cmp
dec
es
jne
je
cld
sbbb
sti
ret
push
push
add
and
xchg
mov
mov
adc
push
xchg
adc
clc
jl
pop
adc
cmp
xor
mov
subl
sbb
mov
nop
add
in
call
es
cmp
mov
aas
enter
lret
in
mov
mov
jmp
xchg
in
add
inc
push
jns
xor
push
jno
lock
js
lea
fwait
push
in
sti
test
push
dec
fdivr
or
and
enter
adc
cmp
xor
push
inc
or
xor
sub
sbb
dec
aam
dec
mov
adc
xor
ret
rclb
push
fs
das
add
cld
pop
cld
insb
cmp
and
inc
push
repnz
ret
enter
jns
fs
lods
and
repnz
jge
movsl
imulb
and
add
lea
add
xchg
xchg
imul
les
or
or
andl
sub
cmp
or
orb
mov
dec
inc
push
ljmp
push
or
out
insl
add
jne
add
inc
sub
dec
mov
push
sub
in
test
push
inc
sbb
das
pop
daa
mov
fstl
or
inc
cmpsl
daa
or
mov
pop
adc
std
outsb
loopne
dec
pusha
xchg
fcompl
push
mov
std
js
es
aad
xchg
insl
jmp
aaa
clc
clc
shlb
sub
and
arpl
xor
aam
hlt
xor
jne
inc
clc
add
lret
shlb
xchg
mov
in
ss
cli
pop
cltd
mov
sbbb
push
adc
jne
pop
mov
stos
lock
lret
cmc
mov
add
clc
and
and
movsb
push
repnz
dec
lea
push
jns
pusha
push
inc
shl
or
inc
inc
pop
pop
cmc
push
decb
jne
sbb
bound
adc
pop
mov
sarl
lret
pop
outsl
inc
cld
mov
dec
inc
push
clc
orb
push
inc
dec
mov
clc
orl
je
hlt
cmp
dec
jbe
push
nop
xor
fs
pop
push
add
nop
das
sub
sub
inc
adc
adc
xor
and
mov
xchg
adc
pop
loope
mov
push
lea
xchg
jmp
cmp
dec
inc
rclb
xchg
fldenv
sbb
push
add
add
cmp
dec
and
add
mov
loopne
adc
push
mov
sub
push
and
aad
add
mov
adcb
lcall
jb
sub
xchg
je
dec
adc
das
adc
jmp
sbb
and
rcrb
xchg
cmpsb
jmp
stos
gs
xchg
inc
push
pop
push
dec
xchg
hlt
jle
jmp
leave
push
xor
or
fldenv
xchg
mov
gs
test
push
jbe
sarb
mov
inc
fdivs
imul
xlat
cmp
lock
fistps
lea
push
jl
ss
mov
xchg
adc
lock
repnz
clc
mov
ficompl
xchg
adc
jmp
roll
mov
xor
jmp
dec
pushf
sbb
dec
push
pop
je
stos
dec
add
inc
inc
jmp
xchg
or
insl
xchg
dec
push
pop
jge
mov
mov
mov
jo
pop
roll
or
inc
dec
adc
push
mov
xor
lods
add
pop
jg
sub
jnp
or
movsl
mov
xor
push
push
xor
inc
jne
mov
je
inc
cmpl
cmp
add
sbb
sbb
hlt
rorl
add
xchg
das
es
fildl
jmp
int3
inc
insb
incl
mov
push
xor
shrl
jmp
lock
outsb
adc
in
add
mov
cwtl
sub
lods
mov
mov
jae
push
push
mov
jp
lret
fmull
call
sbb
mov
add
mov
hlt
push
push
test
add
jl
sbb
out
incl
inc
sbb
fcompl
push
xchg
sbb
test
cmp
aam
or
in
cmpl
and
int3
dec
mov
mov
aaa
addl
mov
cmp
cmp
test
sub
cltd
call
add
loope
sub
pop
daa
out
lock
mov
and
repnz
mov
jmp
inc
sub
and
fadds
add
in
xchg
into
or
shrl
sbbb
inc
push
fsubl
jmp
ret
flds
xlat
mov
lea
movsb
pop
or
fildl
movsb
adc
and
iret
and
data16
out
pop
mov
cmp
lea
xor
mov
mov
loope
lea
or
lret
pop
addl
roll
add
in
mov
and
or
sbb
adc
es
xchg
aaa
and
cmpsl
js
inc
jle
or
mov
or
cmpb
adc
test
jo
cmp
rcll
xor
test
add
rcll
dec
mov
add
and
int3
gs
into
push
mov
hlt
enter
sbb
push
dec
in
xor
outsl
inc
mov
cltd
fadds
mov
and
dec
sbb
mov
jecxz
mov
lret
push
inc
pop
sbbl
sbb
sub
test
repnz
mov
xor
push
xchg
inc
add
movl
mov
mov
andl
xchg
xchg
jnp
mov
mov
test
adc
std
xchg
mov
jns
decl
or
icebp
adcl
adc
push
inc
or
push
mov
popa
aad
sbb
or
pop
jb
fdivs
push
xor
js
test
add
rcrl
lea
and
movsb
shlb
or
mov
xor
jmp
or
scas
inc
or
mov
push
adc
or
add
mov
or
test
insl
lahf
adc
mov
mov
xchg
push
inc
adcb
dec
and
inc
and
or
sub
push
loop
call
add
dec
mov
jl
inc
adc
adc
push
fmuls
roll
cmp
pop
lods
jle
add
jb
adc
ret
push
dec
lret
insb
xor
fadds
fldln2
icebp
inc
mov
inc
adc
adc
or
mov
sub
inc
adc
jmp
int3
push
bound
lahf
lods
or
cmp
je
shlb
push
jmp
cmpb
js
and
or
pop
mov
es
or
add
dec
add
inc
and
cs
js
lods
pushl
cwtl
or
and
sbb
inc
mov
bound
testl
sub
inc
add
push
loope
sbb
add
push
cmp
adc
loopne
std
rcll
adc
jg
or
clc
jmp
mov
push
jns
xlat
clc
push
sub
scas
cmp
sbb
out
jp
loopne
mov
sub
adc
ljmp
cmp
aaa
iret
or
jmp
pop
adc
std
fistl
adc
shrb
dec
add
stc
mov
or
ret
jo
sahf
fsub
in
aam
cwtl
in
stc
addl
pop
cmp
cmp
movb
mov
das
test
in
hlt
jge
mov
mov
mov
rorl
outsl
rolb
fucomp
dec
subb
lea
loopne
mov
add
push
loopne
xchg
dec
pcmpgtd
inc
inc
add
jge
jl
push
fdivs
jo
sub
inc
and
pop
or
jecxz
dec
enter
cmp
je
jmp
inc
push
stc
inc
xor
inc
xor
jle
jmp
and
add
in
pop
add
gs
xchg
or
or
push
cmp
mov
test
dec
jno
mov
mov
add
sub
mov
xor
repnz
cli
adc
mov
lods
adc
pop
lods
sbb
adc
setnp
pop
cld
subl
xchg
cld
fsubrl
jno
jmp
sbb
js
sbb
cld
pop
dec
inc
loopne
mov
push
jge
xchg
iret
into
mov
xchg
sbb
lret
in
mov
dec
negl
iret
fs
mov
mov
in
add
mov
fs
inc
mov
mov
mov
pop
les
aas
and
mov
popa
faddp
and
or
in
ja
push
xor
int3
es
xor
nop
jge
mov
enter
pushf
mov
enter
fiaddl
jecxz
out
jae
mov
pusha
jno
imul
and
push
adc
adc
jle
je
cld
adc
or
sub
or
ret
lock
bound
sub
dec
xor
mov
sub
clc
hlt
add
xlat
sub
es
sbb
mov
loopne
lock
push
stos
sub
insb
inc
add
adc
in
jecxz
adc
jb
and
cmpsb
fsubs
rorl
outsb
mov
loopne
test
fs
sbb
inc
aaa
add
or
mov
adc
cmp
mov
jge
inc
dec
sub
lods
adc
sub
out
loope
addl
adc
jns
mov
adc
loopne
mov
xor
xchg
fiaddl
sbb
jo
and
xchg
in
push
cld
cmc
sbb
movb
adc
mov
xchg
aaa
inc
mov
mov
sub
inc
dec
into
sbb
and
mov
mov
add
sbb
pusha
iret
xor
cmp
adc
adcl
ret
dec
adc
lret
sbb
mov
or
nop
pushf
cmp
xchg
dec
cmpsl
pop
outsl
ds
aas
test
fs
cmp
jne
sbb
pop
daa
orb
adc
pop
outsb
hlt
fdivs
mov
pop
mov
pop
pop
sarb
shl
rcr
add
mov
xchg
jne
fldl
rcrb
jl
adc
dec
jne
pushl
call
subl
outsl
mov
js
outsl
mov
rcrl
jl
mov
pop
push
fwait
push
out
lock
adc
aam
sbb
ja
xchg
push
add
push
les
fcoms
ret
ret
movl
mov
add
rcrb
aas
mov
xor
sub
fisubs
ficoml
adc
push
push
rorl
mov
lcall
pop
int
xor
ficoms
and
xchg
sbb
and
lea
sbb
dec
or
inc
test
xchg
or
mov
pushf
mov
dec
sub
repnz
cmp
hlt
and
add
aam
push
and
dec
cmpsb
inc
and
mov
pop
or
add
add
sahf
xor
jmp
push
adc
pop
jle
das
adc
addb
int
fdivrl
add
jne
or
and
cld
psrad
push
pop
repnz
sub
stos
addl
les
sbb
shlb
or
xor
xchg
xlat
lock
add
adc
and
add
outsb
push
scas
pop
sbb
xor
sub
clc
mov
lahf
scas
sbb
fmull
aaa
sbb
jns
xor
jo
pop
push
aam
adcl
cmp
ror
out
mov
iret
add
roll
cld
mov
push
xor
outsl
stc
jb
stc
push
cmp
inc
cmp
and
or
inc
pop
mov
enter
je
fisubrl
popa
xchg
sarl
dec
mov
pop
in
mov
push
imul
mov
xor
nop
adc
lds
cli
adc
push
sti
xor
pop
sarb
adc
dec
loop
push
shr
repz
loop
arpl
call
xor
cmp
add
int
into
dec
pushf
add
and
cmp
cmp
jg
fnstcw
cmp
jge
dec
dec
mov
cld
jl
rcl
mov
or
sbb
inc
lcall
jge
jo
xor
packuswb
icebp
fcmovnb
in
mov
lea
dec
imul
mov
cmp
ffreep
xchg
adc
xor
cltd
adc
pop
enter
out
pop
sbb
pop
fsubrl
test
in
add
pusha
pop
jge
sbb
fildl
shl
adc
add
sub
mov
hlt
jmp
xor
push
or
mov
push
push
pusha
inc
pop
dec
or
loopne
in
fiaddl
sbb
push
adc
nop
pop
adc
mov
pusha
pop
ror
sbb
cmovno
call
inc
pop
add
and
add
and
pushf
and
arpl
sarl
cmpsb
adcb
inc
gs
std
fs
sete
adc
into
in
push
pushf
sbb
mov
cmpsl
ficomps
mov
call
je
mov
push
or
shlb
add
xor
sbb
jno
rorl
and
mov
xor
dec
or
mov
lret
pop
pop
cli
mov
add
pop
dec
push
sbb
add
lret
pop
xor
test
jo
add
adc
sub
push
jne
out
mov
dec
faddl
out
mov
js
popa
nop
mov
bswap
int3
mov
cmovbe
in
push
pop
cli
xor
scas
test
aaa
ret
pop
sub
sub
pop
adc
push
xor
fcompl
jmp
decb
push
mov
or
pop
jne
outsb
fiadds
mov
out
movsl
or
add
inc
inc
mov
dec
add
push
dec
rclb
incl
popa
pop
clc
fidivrl
sub
outsl
ret
mov
call
movb
add
or
mov
or
push
sbb
pop
jge
xor
fldenv
shr
cmp
adc
orb
daa
add
outsl
scas
sbb
pop
add
clc
lea
push
test
mov
insl
or
inc
fsubl
lcall
inc
lcall
xor
xchg
inc
lcall
in
enter
mov
push
cmp
inc
xchg
add
cmp
int3
pop
mov
pusha
push
mov
cmp
aad
aam
adc
and
mov
sbb
int3
ftst
enter
lea
jp
add
or
push
xor
xor
xor
nop
push
cld
inc
out
adcb
jbe
roll
test
push
and
loope
push
fidivrs
xchg
adc
es
add
mov
dec
inc
inc
orl
inc
movsb
push
add
jbe
inc
cmp
add
fwait
mov
adc
mov
js
add
add
shll
add
andb
sbb
push
daa
and
jb
out
and
mov
out
add
mov
clc
push
fsubl
mov
inc
add
xchg
lods
cmp
mov
sbb
jl
pushf
aam
pop
sbb
out
xor
xor
mov
lret
sub
jo
cltd
pop
sub
mov
or
adc
leave
hlt
push
pop
add
adcl
rcr
sete
adc
shl
shr
or
mov
or
xor
imul
mov
cmp
addb
or
mov
test
rclb
add
mov
sbb
xchg
inc
jl
pop
jg
or
xor
inc
jmp
pop
add
or
pop
pop
ret
pop
pop
imul
adc
mov
push
adc
push
push
aad
es
and
cmp
push
test
loopne
cmp
sbb
mov
scas
dec
loopne
insl
or
femms
or
in
enter
push
mov
cmp
adc
xchg
inc
xlat
fnstcw
xor
lea
cmpl
adc
adcl
clc
ficoms
jg
mov
cmp
lea
push
inc
ret
mov
mov
addl
lods
movsl
outsl
jl
inc
cmp
ret
popf
jecxz
es
sub
dec
mov
js
mov
inc
in
adc
mov
inc
lahf
outsl
addr16
or
or
jo
sahf
nop
add
add
sbb
das
outsb
or
or
pop
jecxz
add
push
in
pop
jb
cmc
in
and
mov
sti
xchg
pop
mov
in
test
sbb
and
mov
add
or
fisubl
and
adc
fucomi
sub
pop
sbb
mov
andb
push
push
rcll
pop
xchg
ja
mov
sbb
add
inc
dec
ss
mov
xchg
icebp
stos
rclb
cmp
mov
dec
push
or
push
mov
popf
lock
test
dec
orl
rolb
js
or
lds
xchg
and
add
sub
add
inc
mov
push
sti
adc
add
push
negl
call
add
sub
repz
jmp
inc
cmp
jne
movzbl
loopne
add
inc
mov
adcl
test
test
sbb
and
push
js
femms
out
sub
pop
test
jmp
and
push
or
popa
xor
xor
mov
mov
and
in
jne
outsb
rorb
enter
adc
negl
mov
fwait
add
gs
lea
pushf
icebp
dec
or
jb
sub
lods
push
lods
or
mov
xor
or
ds
in
loopne
and
xor
lea
mov
fldl
add
or
das
loope
adcl
mov
mov
loopne,pt
dec
movsb
add
push
and
and
inc
adc
mov
ret
xor
sbb
out
xchg
dec
pusha
jo
xor
fists
loopne
xchg
dec
mov
adc
dec
xchg
nop
dec
adc
fs
pop
pop
mov
dec
pop
insb
cmp
fs
push
aaa
in
pop
les
xchg
dec
adc
and
loop
call
add
lds
imul
in
dec
addb
or
adc
xchg
ret
les
or
mov
mov
pop
and
mov
sti
data16
xor
xor
in
sub
test
mov
mov
in
xchg
lds
push
cwtl
mov
add
fists
out
lahf
sbb
inc
decl
cmpl
and
jo
pop
jnp
inc
stc
ret
mov
or
pop
pop
or
and
push
xor
clc
mov
incl
clc
sbb
add
inc
and
inc
clc
clc
inc
lcall
jbe
jecxz
xchg
pop
xor
jp
mov
pop
and
jmp
pop
jg
fcoml
cmp
inc
xor
dec
mov
test
enter
test
sbb
test
decl
pop
xor
lcall
push
scas
mov
mov
mov
xlat
dec
and
or
pop
sub
cmp
inc
loopne
scas
test
jge
stos
fwait
adc
data16
out
pop
pop
pop
jne
cmp
cwtl
adcb
lcall
inc
sub
mov
mov
cmc
fs
adcl
data16
dec
dec
jmp
scas
pop
ror
mov
sub
jle
jmp
push
push
in
adc
and
jo
or
sbb
dec
mov
adc
mov
mov
dec
add
andl
sub
adc
sahf
mov
xchg
lods
inc
fsubs
mov
mov
popa
inc
aas
lods
add
cmp
lea
xchg
in
mov
add
in
pop
inc
adc
xchg
les
mov
add
aam
pop
inc
mov
mov
xor
mov
pop
xchg
loopne
push
fmuls
mov
ja
loope
and
xor
inc
mov
pop
and
sbb
jg
inc
mov
sbb
and
push
fmuls
push
out
mov
mov
sbb
lock
dec
xor
adc
imul
add
add
inc
jecxz
bound
sbb
popa
xrelease
xor
or
je
add
test
adc
aas
insl
pop
add
popa
test
sbb
fdivl
neg
js
and
lahf
or
mov
ja
dec
jne
or
inc
test
mov
mov
cltd
inc
push
push
push
xchg
ja
subps
adc
in
mov
fs
aaa
in
push
cmp
es
jns,pt
xchg
fnstcw
and
js
add
stos
add
fst
mov
jg
incb
repz
add
scas
addr16
sbb
cmpl
jno
cmp
sbb
lock
sbb
imul
ret
mov
sub
mov
fs
and
dec
sub
cmpsl
incl
sub
xor
imull
and
sub
es
sub
js
add
leave
adc
cs
add
lock
push
pop
mov
lds
cs
add
sarb
aaa
js
and
cwtl
std
or
add
leave
imull
push
mov
sti
sbbb
std
lea
iret
and
adc
outsl
or
sub
enter
push
mov
xor
mov
cmp
vhsubps
sbb
mov
pop
adc
pushw
mov
xchg
mov
dec
out
inc
push
or
inc
rol
mov
rolb
adcb
aas
aas
andb
or
and
das
testl
add
das
xlat
cmpsl
add
xor
and
push
lahf
rcll
clc
cmpsl
cmpsb
xorl
in
stc
sub
fdivr
adc
lods
scas
dec
push
sub
dec
and
xor
mov
pop
lds
cmc
mov
inc
mov
je
incb
shrb
in
add
add
xor
sbb
and
enter
mov
stos
mov
cmpsl
scas
jbe
adc
mov
in
xorb
rcr
pusha
shl
or
fmuls
and
and
push
push
xor
push
xor
scas
pop
or
xor
sbbl
imul
xor
repnz
and
xor
inc
dec
and
xor
jne
das
xor
xlat
push
adc
mov
xor
es
mov
mov
jno
add
xchg
pop
cwtl
lea
or
and
test
and
inc
mov
add
cmp
jb
rclb
add
pop
enter
dec
push
shlb
and
jne
jge
addl
cmc
sub
mov
cld
or
or
inc
repnz
mov
outsl
insb
adc
fsubr
lcall
add
fldcw
push
mov
push
fstpt
mov
in
mov
rorl
inc
cmpsb
lea
push
mov
loope
rolb
xchg
outsb
inc
sub
arpl
popa
lods
int
imul
dec
push
xor
xlat
inc
and
jg
push
sub
ljmp
lahf
stos
mov
xchg
inc
inc
cmpsl
inc
pusha
in
test
add
imul
pop
aam
aaa
je
sbb
jns
mov
inc
dec
cld
adc
add
pop
subl
cmp
sbb
jne
fdivr
push
or
mov
test
adc
dec
sbb
pop
mov
jecxz
add
vsubsd
xor
in
insb
cmp
jae
xor
cli
insl
xchg
pop
pusha
cmp
jle
and
pop
daa
inc
test
insb
shlb
add
inc
or
dec
mov
clc
cmp
mov
add
lods
jge
add
add
add
push
lret
subl
adc
adcb
ficoml
jae
aas
rolb
cltd
push
sbb
xchg
mov
xor
mov
imul
ss
mov
sbb
adc
push
mov
leave
jne
and
out
addb
daa
sarb
fidivrl
insb
mov
adc
loopne
cmp
jecxz
andl
xlat
movl
sub
xor
xchg
vmread
lret
inc
push
add
mov
mov
mov
lods
add
jns
sub
cmp
mov
or
enter
adc
xchg
pushf
xchg
cmp
scas
mov
or
mov
mov
and
adc
mov
push
mov
sub
and
mov
push
inc
enter
sub
pop
inc
pop
or
mov
pop
xchg
stos
add
jns
imul
mov
dec
cmp
dec
sub
jno
inc
xchg
pusha
adc
jo
xchg
mov
push
mov
inc
push
and
jecxz
iret
ds
and
mov
cmpsl
aas
adc
aas
pop
cmpsl
scas
mov
mov
hlt
and
inc
or
mov
aas
lret
outsl
dec
test
xchg
aaa
lock
xchg
dec
fnstsw
popa
mov
pop
xchg
out
cmp
jl
sub
adc
inc
push
jecxz
sbb
jl
enter
ja
lcall
add
test
addr16
add
jnp
int
fsubs
xchg
test
fcoml
loopne
lahf
mov
lret
in
or
jns
aam
lods
cmpsl
pop
adc
lret
gs
loope
rorb
push
cld
movsb
iret
sbb
mov
sbb
ficoms
popa
cmpsb
sbb
out
or
inc
jmp
adc
movb
add
loope
adc
pop
sbb
pop
insl
je
mov
xor
push
xchg
sub
and
lret
inc
or
dec
or
or
rolb
adc
lods
leave
push
test
jl
outsb
xchg
dec
gs
mov
dec
lods
in
sub
mov
dec
sbb
inc
jae
clc
lds
mov
xchg
lret
add
jns
js
push
pop
mov
inc
push
push
mov
push
sub
dec
ret
push
addr16
push
pusha
push
ret
daa
cmpsb
repnz
daa
imul
inc
lcall
fmull
pop
js
insb
xor
nop
add
jle
lds
rol
add
fwait
lcall
and
pusha
fwait
mov
cmc
push
xor
dec
mov
dec
sub
push
inc
jne
rolb
ficoms
cmp
ja
les
outsl
arpl
les
fiadds
test
dec
xor
mov
dec
inc
out
xchg
movsl
push
add
add
mov
add
les
in
or
push
mov
jbe
ljmp
dec
dec
lahf
sub
data16
test
rolb
add
adcb
sub
loope
or
incb
js
mov
pop
je
test
inc
repnz
add
jmp
jno
xchg
pop
or
jl
jmp
jo
cmp
jb
fstl
jne
rorl
add
jae
push
or
pop
mov
mov
daa
push
xchg
cli
or
jge
fprem
add
fisttps
or
push
add
jg
or
inc
pop
push
cmc
dec
sbb
adc
mov
imul
and
xlat
push
adc
pop
gs
cmp
fdiv
mov
or
cmp
pop
sbb
mov
dec
sbb
sahf
js
ds
mov
or
xchg
es
or
or
and
sarb
jg
inc
dec
adc
cs
and
loope
mov
sbb
inc
sbb
xlat
clc
sbb
mov
pop
xor
mov
cmp
insb
aaa
add
loopne
adc
push
loopne
push
inc
inc
or
out
push
jg
or
lea
add
push
loopne
jb
in
jmp
fdivs
icebp
push
lock
sub
pop
or
and
sbb
test
add
std
mov
pop
insl
sbb
in
mov
clc
je
lock
inc
clc
or
dec
in
sub
sub
push
adc
xchg
jge
mov
pop
sub
dec
and
xchg
sarb
sub
or
adc
xor
sbb
fldl
push
lea
pop
pusha
adc
repnz
not
add
ret
inc
push
cmp
pop
pop
ret
cwtl
rorb
iret
call
xchg
aad
daa
mov
fisttpl
and
data16
xlat
pop
inc
pushf
pusha
clc
leave
and
push
push
fmuls
dec
insb
out
xor
rep
xor
fimuls
cld
clc
mov
adcl
pop
scas
sub
test
mov
push
add
pop
mov
dec
sbb
cmp
and
xor
or
mov
addr16
jne
imul
push
inc
popa
xor
mov
push
pop
push
cmp
add
sub
jnp
test
fadds
cmp
iret
lock
xorb
inc
out
inc
daa
arpl
jo
movsl
pop
sbb
sub
dec
cmp
daa
js
pop
and
add
mov
sub
add
insb
xorb
ljmp
inc
add
js
test
inc
aad
aad
mov
jmp
push
sub
jb
sub
es
push
sub
jb
lret
adc
or
or
cld
and
test
dec
in
out
or
in
pushf
and
inc
movsb
test
fs
inc
mov
adc
inc
adc
adc
xchg
add
push
push
sbb
sbb
and
dec
subb
add
jb
pop
xor
orb
ret
ret
test
adc
fldenv
fwait
mov
cwtl
daa
ja
in
pop
sbbb
cmpsl
out
ret
pop
pop
xchg
enter
adc
ss
cwtl
int
in
xor
and
cmp
jl
adc
or
and
pop
cmp
push
add
or
das
push
mov
push
push
sbb
mov
nop
jo
jae
dec
test
fst
xor
xchg
xchg
pop
and
xor
fs
cmp
lock
insb
lcall
in
and
dec
les
jg
sti
adc
xchg
call
shl
jmp
sub
insb
enter
or
rolb
push
in
call
test
dec
and
inc
es
push
js
mov
lods
aas
sets
and
fcmovu
repnz
repnz
nop
xchg
inc
fsts
sub
arpl
iret
sub
xchg
lret
std
sbb
adc
outsb
add
arpl
inc
aas
push
movb
pushf
insb
loopne
bound
jnp
jge
or
mov
inc
push
add
or
fildll
lret
inc
cmp
jle
shrb
mov
dec
decb
or
push
std
cli
adc
nop
mov
inc
jne
or
orl
or
push
shlb
test
fsubs
addr16
cmp
push
xchg
in
mov
xchg
xor
int3
push
rol
or
lea
mov
rolb
fidivrl
fcmovu
insb
xlat
inc
test
xlat
mov
fwait
and
pop
sbb
in
rorl
cmp
arpl
sbb
or
cmc
jl
in
pop
xchg
cmp
test
dec
imul
ret
sbb
push
adc
push
dec
or
mov
addl
add
or
push
lods
ds
push
pop
mov
mov
push
insb
and
insl
push
mov
outsl
mov
incl
das
loop
add
inc
and
mov
lods
or
dec
enter
adc
inc
mov
add
vpshufd
add
dec
or
xchg
inc
mov
push
pop
sti
inc
lods
shrl
les
imul
xor
jmp
loope
es
test
inc
dec
sbbb
xor
popa
outsl
dec
or
aad
popa
push
or
mov
push
pop
and
jmp
adc
das
xlat
add
loope
aaa
sbb
jge
das
push
insb
or
jo
inc
and
or
pop
sbb
jl
pop
fldt
test
jge
mov
hlt
inc
xor
push
inc
sub
jns
pop
pop
dec
or
pop
adc
cld
jns
scas
test
pop
sbb
pushf
pushf
cltd
popa
loopne
jbe
sub
dec
sub
aaa
stc
pop
sub
xor
stc
mov
popf
sbb
sub
leave
out
sbb
inc
push
ret
std
push
push
scas
clc
mov
jo
inc
mov
into
stos
les
shlb
mov
mov
cld
jne
sub
pop
xchg
lea
xor
out
push
sub
or
mov
push
jno
pop
sub
les
add
pop
sub
dec
and
or
cmpsl
jne
sbb
mov
popf
sbb
mov
sub
adc
adc
test
xor
sub
cmpsl
add
push
adc
in
lea
push
and
dec
push
push
cmpsb
fs
out
or
cmp
pop
ret
pop
or
imul
xor
dec
mov
mov
movsl
jle
daa
stc
xchg
xchg
call
xor
mov
rorb
das
and
push
push
and
add
mov
test
adc
mov
scas
mov
das
push
or
pinsrw
fisubrl
and
push
adc
sub
sbb
mov
push
push
test
repnz
adc
xor
test
adc
pop
out
push
lret
fwait
adc
mov
lcall
outsb
mov
cmp
insl
mov
or
xor
test
jbe
adc
int3
inc
repz
sub
pop
xor
sbb
jno
sbb
cmpsl
push
inc
imul
and
mov
xchg
push
lods
push
js
scas
mov
mov
int3
cmc
and
subl
daa
add
rolb
test
out
mov
or
jmp
lods
imul
add
pop
js
dec
inc
mov
push
inc
and
pop
xchg
cld
movb
push
pushf
std
or
mov
add
jg
aaa
or
shr
lret
in
adc
lahf
cmc
add
inc
and
pop
mov
rcrl
push
sub
fstps
adcl
into
lret
in
mov
inc
mov
shrb
daa
js
fstl
pop
push
aas
mov
cwtl
rolb
adc
cmp
lods
add
push
sub
pop
shlb
xchg
pavgb
outsl
bound
inc
mov
jo
xchg
xor
ret
loop
sbb
adc
out
in
ret
inc
xor
flds
incb
push
sbb
aas
mov
dec
addr16
sbb
jmp
mov
sbb
and
adc
popa
cmpsl
and
sbb
inc
add
imul
sbb
pop
rcrl
adc
cmp
out
or
mov
push
sti
pop
dec
jne
mov
push
repnz
pusha
cwtl
sbb
notb
enter
push
inc
and
jnp
mov
popa
push
repnz
lds
popa
dec
enter
jmp
les
adc
or
mov
pop
or
lods
add
mov
fidivl
push
or
cs
mov
loopne
add
pop
fdivs
js
xchg
cmp
rclb
lods
cmp
clc
inc
enter
xchg
data16
aam
pop
ja
nop
lret
mov
inc
and
mov
hlt
inc
lcall
fcompl
push
cmpsl
mov
xor
xchg
int
pop
aam
nop
mov
mov
ret
lcall
adc
or
xchg
adcb
or
lock
je
pop
lods
sbb
xor
enter
pop
xor
push
pop
xor
gs
xlat
add
xor
pop
xor
gs
fsubrl
fs
and
mov
push
aam
dec
mov
lcall
adc
adc
xor
xor
or
aas
leave
ret
push
or
or
pop
mov
sbb
sub
and
mov
dec
test
push
leave
jnp
iret
clc
push
test
push
adc
xchg
cwtl
pushf
insl
jp
dec
mov
jns
pusha
gs
cmpsb
sub
enter
or
cmp
fs
mov
xor
js
nop
cmp
xchg
adc
in
mov
cmp
fstp
add
cs
xchg
mov
fmulp
pop
add
xchg
mov
and
movsb
and
incb
adc
inc
xchg
pop
repnz
lret
mov
out
dec
push
enter
mov
enter
dec
outsl
daa
push
dec
imul
or
arpl
or
mov
dec
out
add
jg
add
dec
dec
gs
repnz
add
adc
push
push
outsb
sbb
dec
xor
and
and
fucomp
push
out
es
jl
or
xor
push
int
or
or
lahf
pop
hlt
lahf
sub
es
nop
add
xchg
je
addr16
loop
pop
and
pop
push
dec
jbe
push
mov
add
add
add
test
jge
add
add
xchg
or
fcmovnu
cmpsb
pusha
push
push
xchg
push
sbb
push
push
dec
dec
jo
cmp
insl
roll
arpl
sahf
mov
push
leave
pop
and
xor
pop
leave
mov
ss
mov
enter
push
sbb
mov
popf
sbb
lcall
xor
or
inc
push
pop
test
rol
inc
dec
xchg
inc
xchg
aas
mov
ja
jae
and
repz
loope
testl
fnsetpm(287
xchg
xchg
ja
and
arpl
cmc
enter
mov
xor
mov
mov
dec
sbb
aad
loopne
aaa
mov
sbb
iret
inc
or
rorb
insl
cs
mov
aaa
sbb
clc
hlt
movups
dec
xor
mov
push
imul
sub
adc
inc
ja
add
and
imul
nop
lock
cmp
enter
pusha
adc
ror
xor
cmpsb
xor
pop
les
fmull
js
or
add
mov
pushf
or
adc
andb
out
les
in
fwait
or
pop
mov
adc
inc
push
mov
insb
inc
sbb
out
cmp
dec
cwtl
push
jne
addr16
rcll
inc
pop
inc
inc
push
or
lahf
insb
add
inc
fdivp
push
or
repnz
outsl
fs
cmp
test
or
or
cmp
mov
pmullw
fisttpll
xor
xor
sub
dec
in
test
dec
cmp
adc
cmp
cmp
push
jo
out
test
mov
stos
vmovups
outsb
sbb
sbb
jmp
jne
arpl
push
mov
and
inc
jno
out
add
adcl
movsl
mov
pop
dec
inc
or
insb
imul
ret
sbb
outsb
insl
adc
add
in
adc
rclb
adc
jns
and
les
adc
push
sbb
jns
mov
in
or
adc
add
pop
repnz
mov
cmp
pop
cmpb
inc
movups
jb
jo
add
cmp
pusha
dec
jle
jl
adc
adc
nop
fbld
pcmpgtb
cmp
pop
sbb
lods
nop
je
lock
in
fwait
call
mov
sbb
mov
xor
pop
inc
rcll
add
sbb
pop
pop
ss
loop
jno
out
cli
aas
add
sub
sbb
xchg
dec
int3
xor
mov
cwtl
movlps
adc
les
adcb
and
jg
dec
jnp
sub
adc
jbe
movlps
movsl
je
imul
nop
lret
pop
add
in
cmc
jge
into
fucomip
outsb
adc
adc
inc
emms
jae
cltd
jg
jns
stos
shrl
inc
cmp
repz
push
push
imul
loope
or
jnp
mov
mov
test
xchg
in
test
jb
aaa
jmp
roll
ss
adc
ret
rorb
xchg
push
fwait
adc
push
cmove
cmp
xor
xor
and
sub
xor
and
and
and
add
push
outsb
adc
sbb
or
je
cmpsl
sub
push
and
icebp
gs
adc
cld
mov
xorb
sti
repnz
and
sti
jne
mov
jae
pop
adc
bound
or
daa
leave
mov
or
rol
mov
aaa
push
mov
jmp
cmp
mov
nop
xlat
cmp
adc
dec
es
mov
mov
and
inc
push
mov
jbe
pop
mov
daa
nop
inc
and
test
sub
pop
and
les
inc
and
nop
jb
les
sbb
or
shr
cmp
clc
add
mov
mov
rclb
fadds
stc
mov
push
inc
and
mov
daa
pop
shlb
jb
inc
add
adc
jbe
and
or
push
xor
jmp
fadds
dec
cmpsb
nop
inc
in
sub
and
adc
fld
ret
sub
or
cltd
inc
jbe
xchg
fidivrs
jnp
add
mov
out
nop
inc
push
cltd
daa
pop
pop
push
pop
rol
fs
mov
addl
fistpll
stc
adc
or
loopne
add
pop
and
jo
adc
push
pop
sarb
insb
je
pop
mov
mov
sahf
xchg
dec
cs
shlb
xchg
dec
enter
xchg
dec
cs
mov
xchg
fmuls
mov
cs
in
dec
sahf
xchg
dec
call
sahf
xchg
in
call
cmp
xchg
cmp
hlt
in
jns
xchg
clc
jno
hlt
cld
lahf
xchg
insb
inc
movsb
ja
das
add
cmp
xchg
cmp
add
and
jns
xchg
or
xor
add
jns
jl
adc
push
shr
mov
dec
je
and
outsb
inc
rcrb
es
adc
shll
pop
cmovno
inc
push
jns
jne
dec
jne
inc
imul
imul
cmp
dec
jb
pop
outsl
jb
insl
jo
cmp
adc
push
cmp
enter
push
cmp
sbb
dec
jo
mov
rcll
push
and
push
push
inc
jns
ds
aaa
fmuls
adc
mov
pusha
add
push
mov
add
adc
or
or
dec
scas
push
pop
call
adc
rolb
sub
mov
movsb
mov
mov
mov
and
cmpsb
mov
std
aaa
cli
xor
inc
int3
int3
cmpsb
lods
push
mov
les
fs
inc
add
faddl
add
rcrb
xchg
push
mov
jns
dec
sti
mov
add
dec
pop
cli
push
push
fcoml
xor
shll
sub
pop
cmc
mov
in
xor
mov
cmpb
fsubs
sbb
test
test
push
xchg
or
lahf
pslld
push
xchg
dec
add
mov
sahf
jle
out
push
jp
pop
xchg
sub
int
add
std
or
jnp
iret
repnz
push
or
test
lock
jl
push
add
push
inc
jne
jne
inc
adcl
stos
fisubs
add
dec
shlb
sub
andb
jae
lds
stc
dec
std
jo
insb
int
mov
mov
jns
ret
push
lret
cmp
push
paddd
cwtl
mov
ljmp
adc
jns
push
ds
mov
lods
adcb
push
outsl
pop
les
xchg
faddl
add
or
inc
stos
notb
and
push
lcall
xor
sbb
adcl
adc
xchg
add
mov
push
fimull
inc
dec
jns
jo
or
xchg
xchg
dec
iret
mov
jnp
rcll
shlb
xchg
mov
aas
js
sub
or
add
aas
adc
out
sub
or
stos
adc
addb
sbb
insb
fs
mov
scas
loope
xlat
es
sbb
mov
pop
and
insb
sub
push
inc
daa
int3
fldenv
test
xlat
jge
pop
mov
jo
aam
add
outsl
and
or
adcl
into
pop
cmp
fists
bound
jle
sub
xchg
xchg
pop
cmp
pop
pop
or
adc
mov
cmp
pop
or
xor
aas
call
int3
xorb
rcll
inc
mov
les
jo
xchg
sub
sub
js
pop
aad
jo
adc
cmp
pop
pop
cmp
dec
pop
inc
push
aas
andb
inc
or
andb
inc
popa
adc
into
pop
cmp
xchg
sub
nop
add
arpl
and
pop
jo
inc
in
iret
pop
cmp
dec
pop
inc
pop
cmpl
test
pop
or
adcl
inc
xor
movlps
xor
pop
pop
cmp
and
push
shll
or
in
xlat
pop
inc
xor
in
sbb
orl
dec
inc
push
dec
adc
pop
rorl
pop
iret
pop
cmp
sbb
push
in
nop
shlb
and
pop
mov
fadds
xor
inc
pop
push
dec
inc
pop
nop
data16
pop
pop
cmp
hlt
enter
test
test
test
and
xchg
test
dec
push
inc
iret
pop
cmp
loopne
and
test
ss
add
addl
ret
dec
and
addl
pop
inc
ss
mov
push
sub
fcmovb
nop
adc
jno
cmp
add
sub
call
sarb
in
rclb
dec
xchg
stc
adc
icebp
mov
pop
mov
call
or
in
in
mov
leave
dec
pop
xor
in
push
stos
addb
xor
pop
sbb
cmp
and
adc
mov
mov
lds
pushf
test
xchg
scas
dec
push
mov
fisubrl
jb
cmp
mov
daa
and
jle
sbb
and
adc
or
test
or
cmp
js
jg
dec
add
add
sub
repnz
mov
mov
inc
loopne
scas
jno
sub
je
sbb
or
mov
daa
andb
enter
std
add
enter
cld
adc
enter
dec
dec
pop
xchg
clc
ficoml
mov
pop
and
hlt
sbbb
fwait
xchg
js
xchg
fdivrl
lock
iret
xchg
sbb
and
or
in
orb
push
call
jb
mov
in
sbb
jae
sbb
loopne
mov
in
inc
lret
lsl
aam
add
enter
add
dec
and
daa
add
les
ret
inc
xorl
mov
jb
push
rorb
orl
add
cwtl
xchg
fdivs
mov
push
insl
roll
mov
or
insb
psubq
xchg
mov
shll
test
and
mov
fistpl
push
mov
rorl
mov
mov
xor
sbb
dec
jb
add
and
out
mov
or
pop
mov
fadds
pushf
mov
xchg
xchg
fnstenv
jg
pop
or
int3
jae
or
hlt
xor
clc
cld
movsl
mov
xchg
mov
pop
inc
pop
add
pop
shl
inc
add
in
xchg
pop
int3
fs
or
inc
push
sub
or
jno
test
cmpsb
mov
mov
and
adc
mov
pop
ja
mov
daa
jne
push
fisttpl
jbe
cmp
nopl
scas
add
call
jne
ja
mov
jo
adc
inc
into
add
aas
lock
sub
and
push
inc
cmp
jae
fwait
imul
jb
add
adcl
inc
pop
sub
sub
add
xor
mov
comiss
xor
lock
dec
jmp
lock
fmull
inc
cli
je
insl
xchg
in
sbb
adc
inc
sbb
mov
lock
push
or
jle
icebp
inc
ja
roll
push
roll
roll
int
push
js
add
inc
inc
loope
jecxz
in
outsb
pop
lds
incl
lahf
sarb
movl
sub
test
mov
lock
sbb
sub
lret
insb
loopne
push
dec
push
loopne
xorl
cld
cmp
clc
mov
aaa
sub
sub
testl
jne
mov
jnp
mov
addr16
jmp
sbb
mov
pusha
sbb
and
pop
nop
imul
fwait
loopne
mov
aaa
loopne
xlat
xchg
dec
lret
push
ficompl
ja
hlt
and
ret
adc
adcl
jne
imul
into
insb
lock
xchg
test
push
jo
and
adc
int
xor
cld
sub
sub
and
cmpsl
imul
xchg
xchg
xorl
sbb
or
insl
repz
dec
and
sbb
loopne
pop
mov
nop
add
cmp
jnp
enter
call
pop
lock
jne
jmp
push
cmp
push
sbb
shlb
bnd
mov
jbe
gs
push
clc
adc
ja
arpl
cmpsl
jmp
sbb
fisubs
xor
mov
aas
add
add
movsl
lea
ja
mov
jbe
push
add
or
inc
fdecstp
sbb
bndstx
dec
jmp
and
xor
mov
jmp
xor
mov
ret
mov
ret
cmp
sub
je
or
lret
mov
pop
imull
int
lahf
push
lcall
cmp
je
jmp
xor
push
shll
addb
mov
and
pop
inc
movsb
xor
lock
jb
mov
adcb
iret
lds
imull
jo
adc
xchg
cmpsl
push
stos
add
adc
daa
and
push
xor
loop
pop
mov
add
fcomi
in
jbe
xchg
xchg
cmp
in
pextrw
test
cld
xchg
inc
and
leave
and
xchg
vmwrite
fsub
pusha
lea
jb
or
rcr
dec
push
fs
sarb
inc
dec
and
push
add
enter
xchg
and
ret
or
test
adc
sub
bound
push
cmpsl
push
fidivs
and
shlb
fisubl
mov
lds
add
jbe
pop
push
push
pop
adc
pop
repz
add
cmp
or
lahf
pop
xchg
inc
jmp
inc
adc
std
sbb
outsb
and
sar
add
jmp
dec
adc
sub
mov
lahf
cmp
lock
or
cld
pop
add
inc
jne
insb
shrb
loopne
scas
adc
int3
xchg
fs
movsl
adc
xor
pop
scas
adc
int
imul
xor
fs
xchg
sub
das
enter
xchg
and
mov
lcall
stos
nop
test
nop
sbb
fimuls
shll
shl
push
scas
dec
mov
adc
pop
mov
jbe
ss
ret
sahf
or
loopne
sub
xchg
cmpl
filds
fstps
fwait
pop
xchg
fnstcw
jo
cmp
nop
xlat
push
inc
addr16
daa
cmp
adc
jbe
sub
cwtl
imul
lahf
add
nop
sbbl
xchg
dec
mov
jmp
cmpsl
rcrb
jl
jmp
das
xchg
nop
jmp
adc
inc
aad
sub
ret
sahf
icebp
dec
je
dec
jg
dec
xchg
clc
jmp
adcb
inc
jmp
mov
sbb
add
add
push
pushf
stos
pop
xchg
getsec
roll
shlb
movsb
mov
inc
mov
fcoml
mov
or
sti
std
jg
sub
xor
arpl
hlt
and
out
adc
sbb
inc
shr
or
in
imul
push
addb
or
sbb
mov
dec
fcoms
mov
aad
add
adc
nop
ss
mov
add
dec
andl
and
xchg
mov
and
or
call
sbb
sub
inc
fnstcw
dec
inc
mov
lods
lock
aam
mov
test
add
scas
arpl
push
or
sub
scas
adc
lahf
in
mov
roll
pushf
test
xor
imul
enter
cmpsb
negl
mov
lcall
daa
dec
shll
lods
ret
loop
sub
pushf
ja
imul
mov
pop
xor
inc
or
ljmp
sar
cmp
pop
dec
push
negb
fldl
fdivs
mov
jo
push
push
sbb
push
jo
ja
add
mov
mov
add
in
jmp
stos
inc
cmp
fdiv
je
dec
je
or
push
lock
xor
pop
and
loope
test
and
and
and
je
jno
mov
test
xchg
int
jns
pop
pushf
push
lcall
pop
shll
jnp
inc
pop
scas
lcall
mov
or
repnz
rorl
aaa
sub
in
and
mov
flds
popf
stos
movsb
sub
ja
xchg
mov
test
mov
inc
mov
popl
jae
push
inc
adc
cmp
test
pop
mov
jmp
jg
sbb
jle
aaa
cmp
or
push
fs
xlat
xlat
fcmovbe
mov
movsl
xor
and
push
fstps
jb
inc
inc
test
mov
andl
or
cmc
inc
push
jg
adc
jnp
insl
xor
pop
rcrb
jmp
adc
mov
mov
gs
inc
mov
jbe
andl
sbb
fistpl
test
jae
xchg
inc
push
sbb
addr16
jbe
inc
es
sub
in
in
pop
add
and
push
adc
inc
inc
dec
cmp
subl
mulb
cmpb
add
add
dec
shll
cwtl
and
shll
out
inc
push
add
mov
int
mov
adc
mov
leave
push
sahf
in
cmp
or
out
add
xchg
ja
out
sub
mov
repz
pop
je
inc
inc
sarl
notl
test
and
lahf
mov
inc
jo
cmpsl
adc
mov
imul
pop
gs
jo
cmpsb
outsb
ja
mov
dec
enter
pusha
movsb
mov
adc
pop
repnz
mov
repz
adc
mov
pop
call
imul
sbb
and
and
sub
inc
je
push
push
adc
xchg
mov
dec
pop
aaa
and
fsubr
les
sbb
adc
sub
xor
aaa
add
test
rol
dec
sbb
js
adc
mov
lds
int
fmull
lds
ret
mov
add
mov
gs
jle
mov
hlt
jmp
dec
loopne
ja
inc
fimull
adc
aaa
mov
push
xor
out
jo
mov
add
imul
mov
mov
lea
inc
sahf
call
push
cld
sbbb
sbb
rorl
ficoml
sub
lods
inc
sub
adc
ret
sub
mov
adc
pop
movsl
arpl
pop
fbld
int
cmpsl
mov
pop
lcall
sar
movsb
push
shlb
push
out
xor
xchg
sbb
daa
pop
shll
fcomip
cs
add
sub
push
cmpsl
jl
add
xchg
adc
adc
aas
and
test
xchg
sub
or
data16
cmpsl
shlb
xchg
pop
and
sub
and
add
dec
es
and
mov
daa
or
xchg
jl
add
outsb
cs
jmp
mov
and
dec
ret
lahf
imul
adc
cmp
imul
inc
mov
ss
imul
pop
daa
lret
cmc
sbb
lcall
leave
xor
in
ljmp
dec
insl
das
ffree
or
cmp
inc
imul
or
sub
mov
sub
inc
jo
mov
js
and
aaa
and
sub
push
lds
mov
inc
in
pop
loopne
sbb
enter
push
cmp
mov
imul
insb
sbb
sub
pop
and
fadd
cmpsl
in
dec
imul
test
pop
xor
dec
shll
jb
lcall
test
sub
push
fwait
and
and
mov
inc
aad
jne
jo
jmp
xor
into
ja
repz
or
sub
adc
ja
fcmovu
mov
call
xchg
jp
pusha
cwtl
clc
dec
dec
jecxz
or
jmp
mov
add
and
loope
adc
inc
or
or
or
scas
mov
out
in
out
jb
leave
add
push
das
or
adc
movsb
or
sbb
das
pop
inc
push
mov
decl
cmp
and
xchg
bound
test
out
sbb
xchg
stos
testb
dec
push
jbe
lcall
shrl
lods
ja
push
clc
addr16
shll
and
imul
repnz
scas
or
popa
jnp
setne
xor
flds
xchg
scas
je
or
cmp
fildll
loope
mov
mov
nop
arpl
sbbb
adc
jnp
push
jne
and
or
pop
nop
sbb
jg
adc
insb
adc
arpl
nop
sub
repnz
lods
jmp
lcall
js
mov
mov
test
inc
iret
push
cmp
imul
push
push
adc
mov
iret
stos
cmp
sbb
fldl
rclb
mov
sbb
push
inc
mov
sub
xor
push
sbb
insb
jecxz
pop
and
cmpl
daa
inc
mov
movsl
jmp
lahf
jmp
mov
or
add
call
add
bound
and
dec
leave
or
aad
lods
cmp
jmp
and
add
inc
add
cltd
add
sub
fldt
fstpl
fwait
jmp
add
add
add
pop
add
cmp
add
xor
cmp
mov
xchg
fnstsw
aas
push
cmp
mov
add
pop
cmpl
clc
fisttpll
pusha
rolb
das
add
push
xchg
jecxz
rorl
xor
into
repnz
push
sub
imul
push
push
pop
std
xor
fwait
sub
fwait
mov
add
add
dec
jns,pn
pop
mov
add
inc
fists
int3
pop
fcmovnu
shlb
dec
fadds
imul
mov
inc
xlat
scas
addb
ret
dec
movswl
push
sub
mov
inc
pusha
mov
bound
insb
adc
inc
dec
cmpsl
cmp
into
xchg
inc
loop
pop
faddl
test
add
push
scas
dec
mov
xor
add
scas
cwtl
xor
daa
filds
xchg
mov
jae
lcall
cs
out
xor
cmc
dec
shll
xchg
stos
les
addb
iret
xchg
add
fistl
flds
lea
mov
dec
std
imul
or
add
nop
jp
stc
into
insb
mov
jp
inc
pop
js
mov
xor
inc
icebp
mov
jmp
lods
lods
adcb
cld
pop
xor
adc
adc
inc
push
sbb
or
test
scas
or
loop
shlb
push
jmp
jp
xchg
cmpsb
imul
or
push
fcoms
rol
sub
shlb
adcb
inc
mov
sbb
and
mov
sbb
rcrb
hlt
fildl
inc
sub
adc
cli
jle
lock
xor
jb
pop
mov
dec
cmpsl
or
mov
mov
inc
inc
pop
add
mov
mov
es
add
xsaveopt
loopne,pn
stos
ret
add
repnz
sub
jmp
lea
dec
sbb
sbb
aas
loopne
call
push
jbe
jo
adc
lock
jg
and
or
ja
jecxz
aad
and
int
cmp
or
stos
jo
addb
inc
push
mov
add
push
jmp
hlt
or
inc
push
enter
pop
pop
daa
xchg
adc
adc
cmp
sbb
imul
mov
in
xor
movsl
repnz
cmpsl
pop
fidivrl
push
push
mov
cmpsb
int
pop
daa
jne
mov
imul
xchg
pushf
inc
cs
mov
repnz
fcmovnbe
mov
pop
push
pop
pop
pop
pop
inc
mov
imul
add
add
mov
push
lret
push
adc
mov
or
jb
push
sbb
aas
add
or
cmp
nop
cmpb
nop
out
mov
sub
inc
pop
dec
adc
shll
xchg
test
jae
jle
mov
add
mov
push
push
pop
repz
xorl
xor
push
incb
xchg
dec
in
pop
repnz
shll
mov
pop
push
repnz
and
and
pop
and
push
fcmovnu
add
aas
lea
in
aam
arpl
ficoml
enter
mov
jo
pop
fildll
pop
jb
sbb
pop
push
push
inc
mov
inc
repnz
stc
mov
mov
fistpll
inc
push
leave
mov
fiaddl
dec
repz
dec
jae
idivb
mov
jo
insb
jl
orb
xor
push
mov
addl
or
es
in
jb
ret
ret
xchg
js
fmul
adc
pushf
and
into
xchg
xchg
fisttpl
mov
push
pop
pop
inc
push
mov
push
aas
mov
xor
sub
mov
inc
loop
push
jno
leave
adc
ret
addr16
lds
pop
xchg
pop
push
jnp
dec
jb
add
xor
jp
mov
cmp
pop
ret
cmp
insl
pusha
dec
xor
xchg
inc
cmpsb
push
mov
imul
ret
push
loopne
push
sbb
lock
roll
cmp
jp
loop
stos
jecxz
add
les
sbb
insl
mov
cmp
nop
mov
rorb
aad
popa
pop
movl
add
mov
cmp
add
adc
sub
stc
adcb
cwtl
data16
sub
test
pop
insl
mov
outsl
fld
pop
sub
jbe
leave
inc
add
clc
popf
push
xchg
loopne
jb
or
add
sbb
dec
je
and
mov
lods
add
enter
lea
fcomp
pop
ss
mov
inc
lock
mov
hlt
sub
xchg
add
inc
test
fs
sbb
push
pop
adc
fst
les
cmpsl
les
jg
inc
mov
add
push
jo
sub
andl
inc
mov
pop
les
mov
pop
push
icebp
lds
adc
and
jb
sbb
lret
sbb
in
xchg
xor
lods
adcl
in
xor
je
add
es
js
lret
xor
cmp
invlpg
mov
shr
pusha
pop
roll
addb
cmp
mov
repz
lcall
pop
cmpsb
imul
shlb
jmp
enter
mov
push
mov
daa
stos
push
lret
lods
xor
sub
sbb
cmpsl
int3
outsl
add
mov
das
dec
mulps
lods
mov
pop
lods
mov
push
xor
aam
test
cmp
clc
add
jge
fwait
shl
mov
in
loopne
fcom
sahf
mov
fst
inc
xchg
movsl
jns
aam
clc
mov
jae
add
mov
ret
movsb
pusha
xchg
xor
add
daa
and
xchg
aaa
pushf
push
xchg
in
arpl
cmpsl
ret
push
pushf
push
cwtl
jbe
mov
aas
cwtl
xchg
and
add
xor
nop
pop
and
and
aas
nop
mov
mov
and
mov
or
sub
xor
test
pusha
aaa
sbbl
cmpsl
mov
sbb
das
and
cmp
sbb
inc
or
add
inc
xor
in
roll
mov
xor
js
js
jmp
cmp
or
inc
aas
add
fwait
jae
or
xchg
lcall
pop
int3
pop
leave
test
imul
mov
pop
jle
inc
lret
adc
sub
call
jns
xchg
dec
or
repz
push
xor
sahf
subb
inc
pop
add
je
xchg
push
ret
and
jo
dec
inc
rolb
jo
xchg
movsl
jns
and
enter
rcrl
hlt
imul
int
mov
lock
imul
xchg
adc
xchg
daa
xlat
push
push
push
jnp
inc
mov
sub
cmpsb
and
adc
fs
and
stos
frstor
jnp
pusha
fadds
pop
dec
in
add
fs
pop
out
sub
enter
sub
fs
dec
mov
mov
and
push
xchg
daa
pop
leave
push
dec
mov
ret
dec
imul
aad
jmp
aas
jmp
cmp
and
nop
dec
dec
jmp
add
inc
jb
scas
pop
imul
int3
cli
insl
cmp
cmp
xchg
xchg
add
mov
add
cwtl
or
jns
jl
lahf
cwtl
mov
mov
test
push
test
push
cmc
xchg
call
cmc
int
loop
dec
push
int
or
dec
and
sub
sub
test
add
inc
movsb
sub
jge
bswap
lea
sub
pop
into
and
xchg
inc
iret
or
sub
mov
loope
push
pop
loopne
daa
aad
leave
mov
sti
inc
les
pop
enter
popf
adc
pusha
cmp
mov
xor
jg
fsub
in
ja
loopne
inc
in
sub
push
iret
add
mov
nop
mov
mov
shll
test
imul
jg
lcall
mov
pop
cmpsb
imul
and
das
mov
clc
aad
or
inc
xchg
popa
and
dec
push
xor
pop
xor
pop
xchg
pop
fldt
mov
pop
in
xlat
push
and
add
jno
pushf
push
add
mov
xor
dec
repnz
mov
mov
mov
sbb
adc
lea
adc
cmp
jb
inc
ret
int3
cld
movsl
andb
pop
and
and
in
arpl
inc
sbb
movsl
inc
lods
add
in
and
movsl
stos
xor
xchg
out
shlb
pop
aam
shlb
cmpsb
mov
popl
inc
dec
pop
mov
jnp
inc
inc
inc
xchg
mov
mov
nop
inc
pop
or
inc
lds
and
or
inc
je
and
fsubrs
pop
popa
xchg
or
cmpsb
adc
push
popa
mov
dec
and
les
push
xor
sbb
xor
dec
outsb
imul
inc
pop
inc
xchg
sub
adc
sbb
cmpsb
adc
insb
dec
push
imul
xchg
dec
jmp
adc
dec
por
jmp
lea
sbb
fs
cmp
push
sub
sub
inc
sbb
aad
xor
xchg
adc
push
push
push
push
je
jg
and
mov
push
adc
push
push
adc
fsubs
nop
mov
inc
push
push
rcl
roll
or
scas
movsb
mov
pop
shl
xor
test
mov
rorl
gs
in
ret
jle
ja
lcall
jp
mov
xlat
fadds
mov
fldenv
push
xchg
push
pop
daa
mov
xor
lods
push
enter
sbb
cmp
mov
jnp
mov
insb
push
popa
insl
xor
push
and
adc
dec
push
mov
push
mov
cmp
lea
inc
dec
unpckhps
test
push
test
xor
icebp
xor
mov
fnstsw
dec
insb
test
scas
push
and
in
jecxz
and
cld
mov
mov
mov
push
test
aad
cmp
fiaddl
fsubl
fiaddl
sub
fildl
fsubl
test
and
imul
mov
aam
pop
lea
orl
push
and
adc
pusha
inc
gs
pop
mov
and
push
sub
fiaddl
dec
stos
lods
or
stos
push
xor
add
and
fs
fs
int3
fsubs
and
or
mov
adc
in
pop
inc
sti
aam
popa
repnz
and
sbb
add
push
out
and
adc
icebp
mov
adc
ljmp
push
dec
sbb
cmp
xchg
or
and
fiadds
mov
movb
test
pop
popf
sbb
je
ds
mov
or
bound
scas
out
push
sub
jb
jmp
jb
clc
or
mov
js
or
cmp
aad
jno
leave
sbb
cmp
fisttpll
xor
xchg
sub
movsb
les
sbb
lret
push
mov
or
xchg
xchg
fsubp
nop
sbbb
sub
insl
push
in
push
or
in
inc
inc
pop
fbstp
inc
inc
cmpsb
or
adc
pop
aam
mov
mov
in
pop
mov
popa
mov
xor
pop
jmp
jno
mov
pop
sti
push
push
lods
movsb
daa
dec
ficoml
mov
into
aas
mov
xor
jg
push
adc
mov
xor
outsb
fwait
cmp
pop
mov
adc
mov
pop
adc
xlat
adc
add
inc
push
dec
mov
test
dec
mov
pop
xchg
push
add
push
test
add
push
xchg
xchg
or
pop
ja
dec
stos
repz
dec
add
jbe
and
fwait
sbbb
pop
push
add
js
sbb
dec
scas
test
xchg
dec
pushf
push
push
mov
adc
push
or
les
xchg
push
inc
dec
mov
aas
movl
pop
jo
push
adc
or
repnz
mov
shrb
sbb
xor
clc
sbb
scas
sub
mov
pusha
mov
push
daa
es
cmpsl
inc
daa
ret
pop
clc
clc
xchg
pop
dec
push
and
cmp
imul
inc
jae
cmp
ljmp
je
add
shl
insb
addr16
clc
jb
je
popa
fs
dec
stos
jns
into
cmp
dec
in
sub
inc
sub
inc
data16
mov
je
xor
push
and
cmpl
ja
jmp
jg
and
add
jbe
cmp
and
outsb
testl
jmp
ds
in
ret
test
and
xchg
jbe
sub
cmp
jmp
mov
popf
outsb
and
jmp
push
cmp
and
cli
cmp
in
and
push
xorl
adc
mov
and
test
push
loop
xchg
in
cli
arpl
aad
jnp
lock
lock
adc
cmp
push
add
sarl
adc
inc
or
pop
mov
jecxz
pop
mov
add
icebp
dec
enter
cmp
fildll
nop
and
fbld
scas
mov
iret
pop
out
mov
out
pop
inc
jle
adc
xchg
jmp
or
cli
add
cmp
and
mov
cs
mov
cld
sbb
je
dec
adc
adcb
out
andl
mov
pusha
cmp
je
sbb
lret
push
addr16
adc
adcb
add
lds
int
mov
cwtl
in
insl
repz
xchg
jmp
mov
dec
sahf
testb
inc
lret
leave
xchg
fdivrl
adc
sub
sbb
lcall
sbb
push
cld
inc
cmp
mov
mov
mov
rclb
ret
jnp
or
iret
fdivrp
pop
test
jne
cmp
jae
xor
int
push
or
das
jbe
outsl
mov
ja
cltd
fcmovb
fisubrs
daa
jbe
fnsave
pop
or
fstl
mov
fildll
add
add
jae
push
push
sub
jo
call
fwait
lcall
mov
add
arpl
pop
or
rolb
dec
call
test
cmpsl
cmp
les
push
scas
mov
mov
hlt
dec
pop
incb
lea
mov
cmp
shll
add
jb
shlb
ljmp
gs
mov
rclb
cmpb
enter
xchg
in
in
add
int
sbb
adc
xor
push
pop
insl
or
xor
xchg
repnz
inc
adc
mov
ja
les
sbb
mov
insb
sbb
and
pop
inc
sbb
or
fld
sbb
push
pop
xlat
dec
call
nop
sub
adc
popf
xor
lock
jmp
add
xchg
cmp
mov
adc
xchg
shlb
out
fmull
mov
xchg
mov
push
add
mov
mov
lret
nop
cmpsl
sub
fs
xchg
or
mov
or
sub
movsb
or
les
jl
test
push
je
sub
cmpsl
jmp
mov
xchg
dec
dec
cmp
inc
push
xchg
dec
fs
fildl
inc
testb
sbb
js
or
add
xor
push
cmp
dec
lock
inc
fwait
mov
add
out
mov
icebp
xchg
and
push
xchg
pop
repnz
aaa
or
or
and
ret
insb
je
call
lcall
dec
cs
push
add
pop
clc
mov
ret
dec
or
xor
bnd
in
add
push
jo
in
in
lret
sahf
or
je
inc
shll
sub
mov
pop
add
sub
leave
rcll
pop
ss
push
lret
sbb
or
add
outsl
mov
daa
mov
mov
dec
push
js
sbbb
pushf
or
movsb
movsl
push
push
loope
loopne
pop
xor
xor
les
or
cmp
xor
enter
inc
push
jmp
and
mov
arpl
pop
out
in
sub
addb
ljmp
out
or
out
loop
xorb
loop
adc
adc
das
push
inc
aas
jns
dec
add
and
test
push
popa
xor
adc
pop
push
je
popf
xorl
inc
adc
add
jno
mov
aaa
out
xor
popa
call
pop
and
out
dec
fwait
rorl
inc
or
xorl
push
das
loop
xchg
inc
es
sbb
scas
outsb
aaa
push
mov
cmp
xor
es
aam
push
ja
outsl
inc
lcall
mov
and
push
icebp
add
pop
push
xor
inc
add
xor
cs
imul
pop
fmuls
aas
add
dec
add
push
xor
outsl
cmpl
cmp
ja
out
test
fbld
xchg
cmp
bnd
insl
push
loopne
sub
sub
and
leave
and
add
in
sbb
ret
and
sub
movsb
push
cmc
adc
insb
call
inc
popa
test
movl
jl
adc
and
icebp
mov
sbb
in
mov
and
cs
imul
jns
repnz
lea
daa
out
bound
inc
imul
aas
inc
es
inc
xchg
lcall
daa
lret
jne
repz
data16
jmp
call
fstpt
je
incl
sub
push
mov
andl
sti
aad
mov
daa
inc
cmp
je
add
jne
sub
and
and
xchg
adc
scas
xchg
sbb
sbb
adc
ret
push
outsl
test
out
jmp
xchg
imul
dec
inc
xchg
pop
mov
adc
sub
and
movsl
shll
ss
add
inc
add
or
add
call
fldenv
jg
leave
repnz
and
inc
ss
push
inc
sbb
jo
out
cmp
hlt
xchg
jmp
xor
testb
jge
dec
or
rcll
cmp
or
or
or
adc
rol
loope
in
adc
push
adc
mov
test
pop
cmp
insl
mov
xor
add
pop
lcall
add
or
daa
mov
aam
mov
xor
jne
adc
loop
mov
sbb
shl
add
jo
adc
pushl
fadds
xchg
stos
cld
pop
and
xchg
mov
dec
sub
stc
cld
pop
push
nop
push
and
add
fldt
add
jne
hlt
pop
dec
cmc
scas
mov
cmp
je
push
mov
xchg
arpl
adc
cs
testb
call
push
lcall
push
add
lret
jg
cmp
sarb
call
js,pn
or
adc
pop
xchg
test
adc
addr16
adcb
test
sbb
test
test
mov
add
outsl
sbb
add
mov
gs
dec
fwait
stc
and
sbb
adc
fidivrl
loopne
inc
sbb
clc
icebp
and
add
lods
jmp
stos
addl
add
sbb
xchg
shlb
xor
fcomp
and
fsub
adc
ja
test
or
packsswb
and
aas
or
sub
movsb
jle
xchg
loopne
dec
push
jns
loopne
clc
cmp
and
push
mov
in
idiv
mov
push
int
pop
sub
jl
mov
sar
xor
mov
jae
aas
mov
lods
cmpsb
movsl
xor
jne
mov
fisubrl
sbb
jmp
add
outsl
adc
xor
sarb
pop
xchg
xchg
jns
add
jo
pop
mov
mov
je
mov
sbb
idiv
clc
adc
xlat
mov
daa
lea
movb
mov
jmp
mov
push
cmovb
mov
lock
scas
dec
inc
add
icebp
rcrb
cltd
shl
or
rcll
ss
mov
mov
mov
add
push
adc
notb
xor
push
rorl
nop
ja
lea
dec
imul
pop
pushf
xlat
sbbb
sub
xchg
add
and
out
push
enter
pop
lret
shl
add
fisubrl
jbe
or
sbb
adc
sti
cmpsl
add
scas
subl
inc
xor
push
push
xlat
lahf
jno
cs
lods
mov
and
push
mov
cmp
lods
leave
loope
daa
xchg
cmp
test
lcall
xchg
fldcw
jl
sbb
fbld
pop
inc
sbb
xchg
sbb
mov
add
xchg
mov
mov
cmpsb
daa
pop
orl
mov
inc
hlt
inc
dec
jne
iret
sti
loopne
mov
pop
shl
xchg
dec
xor
sbb
scas
test
push
insb
ss
xlat
pop
adc
lahf
in
das
cmp
inc
cmc
adc
repnz
xlat
fsubr
sbb
lea
fimuls
mov
push
cmpsl
xor
adc
loope
xor
pushf
add
decb
cltd
jbe
lahf
add
or
mov
xor
dec
repz
adc
out
scas
mov
insl
pop
test
inc
add
jle
inc
insb
outsl
adc
mov
or
xchg
or
insb
xor
sub
and
pop
mov
push
adc
and
cmp
insb
adc
sti
ret
popa
into
cmp
cmove
dec
xchg
pusha
das
in
or
insl
data16
xorl
fs
jnp
pop
sbb
sub
lock
lahf
mov
test
lods
adc
sub
mov
push
jl
popaw
fsubrs
mov
inc
and
push
or
sub
add
cmp
loopne
sbb
sbb
int
mov
sbb
or
inc
fdivrl
ret
pop
inc
xor
sbb
scas
and
cmp
or
xor
cmc
sub
mov
loopne
adc
sbb
pop
imul
sbb
les
imul
and
sub
cs
add
push
and
mov
or
nop
jo
pop
insb
adc
inc
loope
adc
inc
adc
dec
xor
add
mov
call
hlt
xchg
xor
pop
mov
sub
adc
xor
lock
js
jge
jae
setne
hlt
dec
adc
es
nop
aad
mov
imul
popw
mov
mov
add
xor
dec
xor
inc
jo
adc
call
leave
inc
int
cmpsl
inc
mov
push
dec
roll
xor
js
hlt
ss
addr16
push
lea
bound
test
jne
or
add
sub
inc
es
push
adc
inc
pop
mov
mov
sub
cli
push
sbb
mov
std
adc
or
out
push
hlt
cmpsl
cmpsb
mov
cmp
mov
cli
jnp
adc
adc
sbb
push
adc
fbstp
dec
mov
push
shrl
roll
xchg
push
frstor
xlat
ss
addb
add
clc
jle
push
mov
and
pop
aas
jno
and
xchg
add
cmp
popa
add
or
inc
mov
jnp
negb
cmp
mov
leave
lods
test
sub
and
push
add
jno
rorb
add
dec
imul
push
imul
jp
js
loope
dec
loope
pop
sub
jg
fwait
jl
or
xor
push
or
pop
sbb
cli
xor
or
fbstp
out
scas
or
fistpll
lret
je
mov
push
sbb
jne
out
ret
and
jmp
movsl
cmpb
sbb
loop
mov
push
xor
lds
mov
dec
jne
jmp
mov
or
lret
sbb
pop
and
pop
je
cmp
mov
frstor
in
xor
add
add
es
or
xchg
inc
ret
xor
shl
or
stos
mov
push
mov
inc
push
or
push
or
sbb
mov
cmpl
mov
and
sub
dec
cld
mov
mov
jmp
push
dec
es
call
je
cmpb
mov
jb
ja
xchg
mov
call
ret
mov
mov
mov
idivl
mov
mov
mov
cld
add
aas
pop
je
jle
cmpl
lar
ja
jmp
pop
es
lret
mov
cmp
add
add
jno
outsl
jae
or
movsbl
sub
push
xchg
pop
daa
jg
add
jmp
ss
repz
fisttpl
cmp
mov
lret
or
xor
lock
jb
add
add
call
out
inc
sahf
cmp
mov
mov
or
out
add
jp
insl
out
add
push
adc
movb
push
pop
adc
push
jnp
mov
push
jno
dec
inc
ljmp
cmpl
xchg
aas
push
dec
pusha
cli
and
fadds
adc
cmp
pop
xlat
sub
lret
push
ret
fistps
xchg
add
mov
rclb
xlat
or
dec
enter
pop
xor
push
and
add
rorb
adc
mov
out
sbb
movsb
mov
sbbb
jge
jle
jb
ds
xchg
or
add
call
push
call
or
aam
cmp
mov
pop
inc
mov
lods
cmp
mov
stos
mov
sub
test
fnsave
nop
pushf
scas
add
adc
push
addl
arpl
les
lods
ficompl
sti
xorb
icebp
outsb
icebp
cmp
cmp
out
adc
mov
ja
rcr
and
out
clc
inc
or
inc
arpl
insl
pop
nop
in
pop
cmp
xchg
inc
bnd
add
inc
scas
jmp
xchg
int
fsubrs
xlat
lret
or
lods
fwait
leave
adc
add
pop
jb
push
or
bound
sbb
dec
pop
notb
or
or
icebp
pop
and
stos
pushl
sub
je
sbb
mov
call
xor
sahf
fistpl
push
pop
cmp
adc
mov
ret
mov
jbe
stos
sbb
xchg
sbb
lret
je
adc
jns
xchg
pop
jmp
push
or
pop
dec
or
nopl
mov
cld
jl
mov
or
add
pop
and
add
xchg
add
inc
mov
or
clc
ret
mov
jns
adc
in
icebp
fimull
cltd
jge
add
mov
adc
les
jge
push
jecxz
add
jae
mov
adc
or
dec
cmp
jne
sub
outsl
cli
test
sbb
add
in
enter
fidivs
les
inc
hlt
call
adc
xor
mov
push
adc
pop
ret
inc
sahf
add
add
in
pop
mov
in
xchg
bound
sub
hlt
sbb
inc
or
cmp
cmp
xor
inc
ss
dec
fidivrs
xor
jp
lock
sbb
fidivrs
xchg
cmp
push
adc
jo
jne
xchg
cmp
mov
lods
jns
sub
pop
or
inc
inc
and
lock
lcall
and
sub
or
lock
or
mov
aam
fsubl
inc
leave
je
inc
cld
iret
sbbb
cld
hlt
hlt
sub
repnz
mov
clc
clc
hlt
inc
mov
xchg
sbb
mov
fs
or
clc
cmpsl
imul
dec
leave
xlat
and
stos
add
addb
repnz
xchg
mov
mov
rcll
add
mov
lods
sub
push
add
adc
lret
push
bound
sbb
lods
insb
sbb
cmc
or
sbb
and
outsl
cmp
xor
or
enter
aas
cmpsl
hlt
jo
cwtl
outsb
adc
push
and
dec
rcrl
aas
pop
push
push
lea
lea
lret
dec
js
or
imul
adc
hlt
imul
test
lock
sbb
add
sub
or
sbb
add
out
fidivrl
jle
mov
and
sbb
jo
xor
pop
movb
xchg
ja
imul
sahf
rorl
cmpsb
mov
insb
mov
mov
adc
add
aad
lret
inc
push
push
jo
xor
cs
sqrtps
mov
pop
dec
sbb
lret
or
pusha
sbb
mov
sarb
lret
inc
jmp
or
dec
add
and
jnp
jge
ljmp
lea
rcrb
movb
or
or
jecxz
inc
pop
push
inc
psubb
push
sub
call
jns
push
dec
xlat
inc
or
xchg
mov
mov
xlat
xorb
fstps
sub
xor
je
jb
xchg
neg
mov
invd
inc
fistpll
pop
je
mov
and
cltd
lret
pop
lret
add
int3
inc
cs
mov
pop
jge
mov
xchg
in
and
aaa
or
cmpb
lcall
xchg
out
adc
sub
popf
pop
push
jmp
push
lods
push
fistpll
mov
mov
imul
and
shll
push
and
cmpsl
addb
sbb
sub
sub
or
mov
mov
iret
mov
ror
ja
push
pop
jge
jg
pushl
xchg
icebp
nop
jle
add
mov
or
mov
add
out
filds
std
xchg
lcall
pushl
xor
sbb
imul
popa
xchg
mov
push
aam
mov
add
ja
jb
add
mov
out
push
or
dec
movsb
dec
jno
or
cmc
pop
in
or
lahf
or
dec
push
add
hlt
cvtpi2ps
push
js,pn
scas
fidivl
add
xor
popa
inc
adc
fisubrs
jb
mov
jae
nop
cltd
and
or
outsb
pop
ds
sbb
xchg
push
adc
jo
dec
outsl
and
fldcw
jnp
sar
sbb
cmp
loopne
sbb
fimuls
nop
or
mov
shll
std
movsl
into
add
fwait
sbb
bswap
les
pop
jne
rolb
nop
fistps
loop
cmc
sbb
add
push
andl
sub
jo
add
clc
or
push
outsb
add
cmp
add
f2xm1
insl
add
add
push
adcl
inc
add
push
inc
insb
jg
insl
test
cmpl
sbb
je
data16
je
sbb
pop
add
nop
out
imul
popf
add
bound
lea
push
sbb
les
cmp
and
sub
add
insb
jns
loop
or
loopne
cltd
cmp
aaa
push
mov
add
or
jb
aaa
mov
insb
or
cmpsl
or
dec
imul
sbb
jb
push
outsl
jne
push
pushf
loope
fs
into
movsb
mov
insb
test
enter
or
fdivs
pop
xor
add
loopne
shrb
in
or
add
cwtl
or
leave
les
mov
push
data16
jbe
add
adc
dec
or
sbb
hlt
or
adc
inc
jbe
lods
or
push
sbb
inc
mov
outsb
adc
add
push
cmp
mov
icebp
push
add
sarl
jns
and
outsl
lcall
loopne
fs
test
push
sub
loope
add
adc
pusha
pop
mov
fmuls
push
mov
or
test
inc
xchg
pop
adc
dec
sub
adc
sub
and
nop
dec
loopne
or
push
jbe
leave
ret
mov
sbb
pop
xchg
rclb
push
adc
and
inc
xor
lods
and
and
test
clc
inc
add
pop
add
addl
adc
bound
pop
and
sub
test
push
sbb
xor
adc
jnp
das
test
and
inc
bndldx
pop
inc
add
xor
das
sbb
sbb
fimuls
pop
and
scas
movsb
inc
jb
or
push
xor
and
shlb
fcmovbe
pop
and
push
sbb
inc
mulb
inc
jecxz
mov
ret
pop
sub
add
cmp
in
sbb
clc
test
add
or
inc
push
mov
xchg
jae
mov
or
sub
test
xchg
mov
inc
mov
xor
pop
sub
and
and
sbb
sbb
aaa
fnstsw
inc
movsb
ss
lcall
pop
imulb
es
aam
sub
rcrb
and
mulb
nop
mov
pop
jo
jne
rcrb
lods
and
dec
cmp
pop
xor
or
adc
inc
hlt
pop
adc
and
or
and
sub
mov
push
push
jnp
adc
xchg
aas
mov
fwait
rcl
pushf
mov
xchg
aam
jnp
and
jae
pop
sub
in
add
dec
enter
push
cmp
add
xor
push
rclb
pop
xor
adc
xor
cmovs
xlat
lea
and
or
sahf
ret
push
adc
lea
or
xor
mov
and
pop
enter
mov
and
add
in
or
xchg
bswap
or
pop
inc
dec
and
pop
lcall
mov
dec
lea
and
mov
jg
unpcklps
push
lea
inc
jle
pop
jg
add
jo
jg
cmp
scas
mov
pop
dec
add
iret
adc
adc
outsl
jb
push
inc
loop
jmp
adc
mov
dec
sbb
lar
and
and
add
push
pop
subl
pushf
rorl
xor
sub
or
mov
inc
mov
and
jae
push
enter
jmp
jbe
or
xor
pop
test
xchg
xlat
push
or
inc
sbb
jnp
sub
or
pop
mov
in
push
sub
dec
mov
xor
ret
sub
or
test
push
push
adc
bound
out
or
jns
scas
js
adc
push
scas
inc
cmpsl
mov
inc
lds
je
movsl
aaa
mov
xor
and
mov
inc
sub
and
pusha
cmpsl
and
sbb
add
adc
xlat
pusha
and
lock
and
adc
or
inc
pusha
daa
pop
lds
cmp
and
cmovns
cmp
cmp
dec
push
pop
lahf
aam
jb
popf
out
es
andps
nop
daa
orl
daa
inc
dec
push
sbb
lret
or
enter
lds
cmp
inc
push
popf
add
dec
sbb
aad
icebp
or
xor
nop
gs
mov
add
pusha
and
jo
stos
xor
mov
lea
inc
loopne
sub
fidivl
dec
add
and
push
push
or
daa
jle
cmp
fmuls
jg
mov
jo
and
add
test
xor
outsb
imul
push
cmp
jo
stos
jp
stos
scas
and
mov
push
inc
stc
dec
push
sbb
sub
inc
xchg
stos
xchg
aaa
or
sub
cmpsl
and
daa
jae
dec
lods
dec
subb
push
or
inc
push
movsb
and
xchg
test
push
mov
or
imul
in
and
movsb
sbb
add
fwait
dec
es
add
popa
dec
subl
add
leave
cwtl
mov
clc
iret
push
dec
adc
pushf
mov
data16
dec
xor
xor
leave
aaa
add
pop
dec
data16
lret
xchg
flds
xor
xchg
dec
push
mov
lea
and
mov
push
js
adc
jae
int
dec
push
hlt
push
insb
adc
insl
testb
std
push
popa
mov
stos
out
rcrb
iret
pop
dec
sbb
add
add
daa
mov
pop
add
add
jne
call
cmp
inc
fimull
add
xchg
loopne
xor
test
sub
cltd
rolb
gs
sub
loope
pop
sub
xchg
mov
mov
push
les
mov
sti
sub
and
pushf
or
sub
rdpmc
orl
pop
xorb
repnz
in
adc
add
rolb
subb
sub
loope
jb
or
sub
insb
repnz
sub
and
jl
sub
or
xchg
dec
je
test
sub
add
inc
enter
sub
fildll
xchg
loopne
push
outsb
insb
push
mov
lahf
pop
setl
jbe
pop
sub
ja
incl
popa
or
out
inc
je
scas
fsubrl
je
push
aam
push
push
pop
sbb
push
loop
dec
sbb
and
mov
lret
cs
add
jno
sti
ss
in
add
shl
jo,pn
in
pop
jb
add
xor
pushf
mov
or
in
pop
mov
jnp
and
xor
add
inc
or
ret
and
ss
fsubrs
mov
cmp
or
xor
pop
in
mov
mov
xor
fdivp
sahf
push
xor
jge
das
out
push
cmp
or
mov
nop
xor
lods
mov
push
mov
iret
cmpb
ss
sub
add
add
push
push
loop
or
push
add
in
adc
add
pop
dec
adc
orl
in
sbb
adc
mov
punpcklbw
or
jle
push
inc
jl
or
pop
aaa
lods
mov
fs
pop
cmp
add
jg
nop
cmpsl
mov
xchg
jge
mov
adc
and
cmovbe
xor
arpl
cmp
dec
dec
add
xchg
adc
dec
dec
jnp
adc
jns
add
jns
imul
or
sbb
push
aad
icebp
mov
add
or
mov
pop
daa
lea
push
mov
imull
dec
pop
xor
xor
je
imul
lock
call
jmp
imul
xor
add
popa
adc
cmp
add
jns
xchg
mov
inc
lods
sbb
xor
dec
jge
xor
mov
cmp
mov
mov
add
xchg
and
dec
pop
xor
xor
popf
mov
jns
jg
je
ret
or
adc
je
push
sub
inc
pop
pop
sbb
int3
jae,pt
push
mov
and
enter
xchg
jg
push
pop
sub
inc
mov
fwait
insl
insl
adc
mov
dec
jp
mov
aam
scas
outsb
or
sbb
test
xchg
pop
sbb
add
pop
imul
adc
ds
adc
mov
pop
or
push
mov
sub
divps
dec
test
rcll
inc
jbe
jmp
lods
cmpl
add
je
mov
mov
dec
outsb
pop
or
push
add
vpsrad
stos
lahf
xor
mov
and
ss
xor
mov
mov
push
sahf
pop
aaa
push
jp
dec
lds
push
ljmp
mov
jl
xchg
pusha
mov
adc
mov
popa
sub
lret
push
sub
jb
cmp
push
jo
cmp
or
xor
and
in
lods
pop
mov
pop
and
flds
jecxz
xlat
cmp
cmp
and
dec
or
jle
test
sbb
add
or
sub
cmpsl
or
pushw
lock
popf
std
cld
sti
jg
xor
cmp
inc
mov
pop
cwtl
or
add
cmp
and
mov
or
push
push
out
rolb
fsubr
dec
and
aad
jle
xchg
ljmp
cld
sub
testb
or
or
popa
push
enter
jmp
pop
cmp
adc
dec
pop
out
nop
cmp
sub
add
sub
addr16
add
cltd
les
cmp
aam
sbb
cmp
inc
jo
push
sub
xchg
mov
and
dec
pop
out
mov
mov
add
test
add
add
inc
lea
pop
jge
adc
push
loop
mov
inc
js
adc
dec
xchg
pusha
popa
jecxz
dec
test
inc
fsubrl
outsl
jae
mov
add
in
push
rclb
sahf
cmpsb
add
scas
cmp
cmp
pop
xor
mov
outsb
jbe
outsl
xchg
fmull
jae
imul
outsl
jo
or
adc
adc
out
push
fisubs
adc
inc
cld
inc
mov
loopne
cld
imul
add
jge
stc
xorb
andps
insl
and
fs
mov
das
movsb
cmp
es
ljmp
testl
xor
icebp
iret
leave
pushw
cmp
push
push
inc
xchg
lret
adc
add
jmp
out
fisubrl
int3
or
and
mov
leave
pop
lock
mov
dec
push
cmpl
cli
lock
cmp
andb
pop
pop
pushf
jns
popa
stc
cmp
fcomp
mov
inc
cmp
cmp
ds
mov
aam
aas
sbb
inc
mov
mov
add
mov
xor
testl
or
xchg
lret
movsl
push
cmp
sub
dec
add
mov
aas
icebp
sub
dec
jl
addr16
lcall
cld
push
std
sub
rcrb
std
pop
push
mov
cmp
pop
sarl
xchg
add
pop
add
pusha
jo
cld
sub
adc
add
aas
icebp
xor
jne
dec
xchg
sub
pop
mov
rorb
leave
test
sbb
add
adc
push
dec
push
pop
add
inc
lcall
shlb
push
sbb
pop
stos
and
sbb
inc
xor
cmp
and
and
mov
cmp
addl
pop
adc
inc
ss
pop
sub
xorl
mov
nop
int
repnz
pop
adc
in
jl
insb
popf
psubsw
add
pop
push
dec
xchg
adc
outsl
adc
fimuls
dec
pop
jns
repnz
adc
fidivrs
or
dec
sbb
mov
push
in
ss
loopne
inc
push
sbb
in
sahf
sbb
sbb
sub
repnz
andb
and
flds
and
rcrb
or
test
dec
add
xor
mov
sub
icebp
sub
sub
xorl
pop
addr16
repnz
inc
popa
push
ret
mov
add
jae
fsubr
add
jl
enter
add
repnz
fmuls
pop
dec
jne
xor
nop
lret
push
add
add
cwtl
add
xor
test
jecxz
inc
mov
cmp
add
sbb
or
test
dec
xchg
push
repnz
dec
dec
add
dec
sub
daa
xchg
add
loopne
jbe
sarb
or
sub
mulb
pop
cmpl
xchg
xchg
sar
sbb
mov
pop
test
pop
pop
xor
push
jecxz
in
aaa
xor
dec
xor
aad
inc
cmp
mov
push
outsb
imul
or
ja
jo
sub
mov
es
inc
gs
movsb
add
insb
add
cli
pop
or
stc
add
cwtl
or
sub
or
fwait
mov
pop
push
cltd
xchg
xor
jp
add
or
pop
movsb
or
sbb
cmp
adc
sbb
rorb
push
dec
inc
mov
xchg
sbb
leave
push
popa
cld
decl
or
inc
test
lret
or
push
outsl
ret
dec
jbe
aam
add
mov
repnz
test
leave
jo
stos
pop
inc
or
ror
mov
or
add
xor
or
mulb
fisttpl
mov
in
and
outsl
test
mov
pop
sbb
arpl
add
mov
pop
push
dec
mov
or
and
out
dec
sbb
mov
std
dec
daa
inc
outsl
mov
shrl
sbb
rcrl
popa
orl
aam
jae
jecxz
and
push
or
pop
mov
movq
daa
inc
repnz
add
inc
mov
inc
add
in
fs
mov
inc
or
xchg
fmull
inc
shrb
nop
mov
and
imul
loopne
dec
mov
cmp
or
test
sub
test
test
inc
test
push
imul
push
adc
xchg
cmc
push
aam
notl
mov
jb
enter
insb
adc
jo
cmpsl
or
sub
or
add
popa
leave
mov
add
push
xchg
scas
je
cmpsl
dec
sbb
pop
inc
imul
and
sbb
adc
inc
adc
and
and
inc
cld
test
add
xchg
sbb
adc
adc
xchg
lahf
daa
rolb
fstpl
dec
xlat
pop
cmp
and
add
or
push
jo
movsb
test
fimuls
jbe
sbb
je
dec
push
push
fimuls
pop
adc
pop
adc
and
psubb
and
mov
add
add
and
dec
shrd
push
fsubl
sahf
in
fsubrp
push
clc
and
jae
out
dec
cld
sub
and
xor
xor
cmp
pop
add
sbb
lods
lods
in
xor
add
jl
outsl
shll
xor
inc
push
inc
jno
mov
mov
outsb
lcall
mov
roll
out
test
lds
enter
dec
jecxz
or
inc
iret
repnz
cmp
pmaxub
dec
adc
cmp
jns
addr16
adc
lret
adc
sbb
push
sub
sub
sub
inc
andl
sbb
cmp
add
dec
or
or
adc
in
add
mov
add
add
adc
adc
sbb
or
inc
out
add
push
sbb
mov
push
sbb
push
jns
dec
add
or
cmp
sub
jbe
pop
fdivl
outsb
rcll
add
add
xchg
add
adc
add
add
aad
cltd
push
adc
pop
push
sbb
cmovl
adc
push
sbb
sub
adc
mov
xchg
movsl
or
icebp
adc
push
push
add
mov
push
add
out
pop
xchg
xor
mov
fisubrs
les
xchg
xchg
mov
daa
inc
dec
fstl
and
and
dec
enter
mov
lahf
nop
es
imul
add
add
or
repnz
inc
test
mov
or
movsl
in
push
adc
outsl
push
movsb
push
aam
push
rorb
cmp
iret
push
inc
or
and
push
mov
adc
pop
fidivrs
push
mov
or
popl
addr16
rorl
add
and
push
inc
push
sbb
push
xor
enter
dec
popf
push
add
lahf
inc
push
pop
mov
xor
add
or
push
fs
test
jnp
fsubrl
add
jl
inc
test
push
xchg
cmp
imul
les
xchg
ror
leave
mov
adc
dec
imul
sub
xchg
add
sbb
xchg
pop
xchg
dec
nop
movsb
or
xchg
add
stos
cmp
push
jecxz
add
insb
mov
sbb
dec
or
aas
clc
or
sbb
in
test
outsb
sub
or
and
adc
addl
and
pusha
or
add
or
test
add
es
pop
push
push
pop
inc
test
add
and
mov
leave
adc
jb
cs
sbb
movsb
sbb
adc
jns
inc
dec
or
add
cs
int
push
jb
adc
dec
cmp
pop
and
testb
js
pop
inc
inc
pop
push
pop
mov
sbb
lods
add
mov
mov
data16
std
push
sbb
sbb
pop
and
bound
sub
pop
add
es
jno
adc
dec
push
outsl
nop
loop
xchg
cmp
je
or
rol
pop
pop
outsl
ud0
ret
mov
es
orl
inc
fiaddl
rorb
cmp
xchg
pop
pop
add
and
sbbl
dec
lcall
push
les
fidivrl
pop
xchg
pop
ret
pop
clc
add
test
in
push
ja
jg,pt
pop
mov
pop
lret
dec
pop
bsf
jecxz
insl
or
sbb
mov
dec
pop
push
roll
arpl
loop
adcl
adc
cmpsl
in
sbb
pop
push
and
pop
push
sub
sub
pop
sub
xor
push
cmp
cwtl
xchg
inc
push
ret
xor
daa
pop
jno
imul
push
dec
daa
adc
into
das
pop
nop
add
movsb
mov
pop
add
and
pop
mov
and
fistps
aad
out
pop
mov
sbb
fistpl
pop
cmp
sbb
outsb
add
shlb
xor
sbb
push
add
xchg
popa
repz
push
movsb
scas
lds
push
inc
inc
dec
adc
push
pusha
add
fisubs
pop
pop
add
xchg
scas
push
negl
adc
inc
mov
loopne
sbb
xor
mov
insl
or
push
inc
or
xor
jecxz
inc
pop
jns
pop
mov
icebp
pop
gs
cmp
insl
mov
cmp
pop
adc
pop
js
bound
mov
jns
js
push
enter
cmp
js
inc
add
pop
js
ret
lds
mov
das
nop
adc
push
pop
mov
insb
and
popf
pop
inc
imul
sub
pusha
hlt
es
push
imul
mov
xchg
cmp
xchg
lods
and
cmc
das
sarb
sub
cmp
lock
sbb
shrb
out
push
repnz
push
mull
jae
orb
stos
shll
xor
test
enter
lock
fmuls
and
pusha
lock
pop
jp
sub
pusha
lock
xor
jno
cmpsl
or
and
and
sub
cmp
pop
scas
push
xchg
xor
pop
aas
popa
sbb
arpl
nop
push
mov
repnz
jecxz
and
imul
and
or
add
dec
and
clc
pop
dec
inc
insb
outsl
add
popa
repz
jnp
popf
xlat
bound
lret
mov
xorb
push
sti
fistps
lock
jle
and
mov
or
pop
and
arpl
arpl
or
clc
or
inc
or
xor
mov
rorl
inc
mov
mov
push
mov
and
arpl
pop
shl
or
pop
dec
outsl
pop
dec
cmpsl
dec
add
inc
addr16
popf
dec
or
fisubs
pop
arpl
ja
dec
mov
scas
in
or
or
adc
and
adc
and
xor
sbb
push
xor
adc
and
push
cltd
negb
clc
lea
shll
cmp
sbb
cmpsb
imul
cmpsb
imul
lcall
push
add
clc
imul
imul
pop
and
sbb
cs
repz
lods
and
dec
jae
fsubrs
add
lods
stos
imul
ss
or
pop
mov
sub
adc
jmp
lea
sbb
pop
sahf
in
inc
dec
mov
lea
fiadds
repnz
mov
add
xchg
int
push
lret
data16
pushf
or
or
or
push
out
dec
push
mov
pushf
imul
add
dec
addl
dec
mov
adc
and
jl
and
xor
inc
xchg
inc
gs
fisttpll
pop
jo
jp
push
dec
rolb
jne
or
out
mov
mov
inc
lahf
sbb
adc
dec
mov
or
jbe
sbb
mov
adc
ja
and
test
inc
sbb
add
adc
or
push
je
fcomps
mov
or
add
cmp
jl
insl
lea
xchg
pop
push
jne
push
pop
roll
stc
dec
add
ret
aaa
dec
addps
adc
push
mov
dec
test
mov
cmp
pop
jnp
add
cmpsl
xchg
outsl
dec
pop
clc
or
push
inc
enter
sub
and
lds
or
pop
and
jle
out
add
xchg
pop
inc
push
xchg
pop
add
or
mov
dec
adc
test
sub
shl
in
or
jae
pop
jcxz
mov
pop
xchg
xor
dec
roll
push
mov
sub
push
jne
ja
jbe
push
stos
mov
imul
add
outsb
or
inc
and
stos
cmp
sbb
cmp
or
shl
lret
add
mov
pop
pop
adc
ljmp
fisttps
mov
push
or
mov
push
pop
hlt
fnstsw
pop
pushf
incb
jne
jmp
add
lock
add
ja
imul
cmpsl
or
inc
loopne
add
inc
imul
js
aas
imul
pop
pusha
adc
inc
dec
dec
cli
test
xor
or
dec
add
in
hlt
test
mov
enter
add
dec
add
iret
sbb
stc
and
mov
rorb
scas
xorl
add
mov
push
pop
add
push
sub
fisttps
adc
sbb
pop
mov
jbe
fwait
adc
outsb
je
pop
xor
rdpmc
xor
fcoml
adc
or
jno
insb
and
nop
push
dec
je
inc
out
dec
ds
mov
push
insb
add
pop
push
dec
imul
xchg
xor
mov
xchg
mov
outsb
push
iret
add
push
push
add
add
sbb
lods
adc
into
clc
push
or
addr16
test
add
or
dec
mov
mov
inc
push
sub
jnp
mov
push
or
and
sub
add
pop
or
mov
or
adc
sbb
sub
andl
cwtl
and
pushf
xchg
mov
rolb
nop
int3
xor
xchg
pop
mov
lods
jmp
negb
lcall
xor
outsl
bound
incl
sbb
inc
int
dec
addb
pop
and
jno
dec
jle
dec
shlb
outsl
nop
outsl
mov
mov
xor
mov
ljmp
or
or
adc
and
inc
phaddsw
mul
test
outsl
je
sbb
rcrl
or
xor
xor
pop
lock
in
and
mov
out
xchg
iret
lahf
clc
in
or
lret
mov
sbb
cmc
inc
in
mov
jno
in
movsl
loopne
pop
jmp
call
dec
in
jb
push
jo
lret
dec
outsb
leave
mov
sbb
add
movsl
push
push
adc
pushf
push
and
mov
jge
xchg
iret
mov
adc
xor
fcoml
push
iret
push
sub
popf
ret
outsb
loopne
cmpsl
push
mov
scas
or
sbb
ret
add
mov
daa
mov
or
ret
popf
xlat
and
aam
nop
mov
jmp
xchg
pop
or
and
dec
leave
icebp
inc
and
sub
bound
adc
addl
andps
cltd
lret
ss
or
push
int3
out
nop
add
inc
add
add
fldl
daa
imul
mov
mov
std
mov
inc
insb
xor
jl
stos
mov
jb
mov
or
insb
push
and
fildl
mov
aaa
jae
in
sbb
or
add
add
or
ret
addb
add
dec
push
inc
push
addb
pop
inc
add
popf
and
dec
xchg
pusha
pop
sub
push
xchg
pop
rcrl
sub
xor
outsl
mov
testb
ffreep
push
aad
mov
push
insb
add
mov
dec
or
sbb
cmp
mov
lahf
pop
mov
test
sbb
lahf
stc
leave
inc
push
or
insb
sbb
adc
lds
adc
test
test
cmpsl
jne
or
add
aam
pop
mov
xchg
adc
mov
rcrl
sti
cltd
ja
xchg
addr16
jne
or
sbb
push
adc
push
test
add
push
add
jne
test
inc
movsb
and
js
adc
adc
cmp
mov
pop
and
xor
mov
sub
pop
inc
adcb
adc
pusha
mov
cmp
jns
add
jp
push
inc
xorb
sbb
test
imul
inc
mov
gs
adc
xchg
popf
dec
mov
daa
jns
adc
lods
je
push
push
jp
daa
jnp
xchg
out
pushf
cwtl
jg
das
sub
jl
and
push
das
je
or
pop
repz
faddl
les
insb
enter
subb
sub
pop
int
adc
addr16
or
sub
pop
jb
and
lret
jb
cmp
xor
push
lea
ja
inc
adc
mov
or
mov
sub
rclb
pop
sahf
test
cwtl
adc
loopne
xchg
inc
daa
shrb
push
orl
jo
adc
push
xor
lret
ja
les
jge
dec
and
loop
jo
mov
jge
jns
mov
sub
rorb
push
push
ret
ja
movsl
and
or
jb
pusha
nop
cmp
jl
and
cs
xchg
loop
add
push
orl
jbe
leave
cmc
sbb
jg
ja
enter
std
andb
daa
orl
movsl
flds
add
pop
test
xchg
cmpsb
add
inc
push
sbb
movsb
or
enter
push
cmp
rorb
mov
xchg
jo
call
mov
sub
sbb
pop
jmp
cld
or
fs
add
inc
mov
xor
push
addl
and
mov
dec
mov
push
repz
icebp
add
sbb
xlat
pop
mov
mov
push
or
pusha
or
cmp
dec
xor
inc
test
add
sbb
mov
mov
stc
daa
or
xor
mov
dec
dec
sub
or
fiaddl
rclb
mov
push
leave
jge
jl
and
cmpsl
nop
lahf
les
cmp
and
adc
add
stos
add
pop
xchg
sub
pop
jp
lods
push
add
je
jmp
outsb
mov
popf
outsl
add
push
add
mov
jo
sub
inc
sahf
push
xchg
ud2
mov
xchg
cmp
mov
dec
lods
repz
cmpsl
str
nop
or
outsb
jmp
mov
les
nop
mov
inc
in
pushf
adc
xchg
mov
adc
push
sub
add
push
out
mov
or
addr16
les
add
test
dec
mov
xchg
mov
inc
dec
xchg
int3
inc
pusha
aaa
dec
int3
adc
lock
or
cmp
xor
inc
lds
or
movsl
xchg
outsl
push
cmp
mov
mov
sub
dec
pusha
pop
jne
pop
movsl
imul
adc
rolb
mov
mov
mov
pop
jno
lahf
ss
pop
mov
cltd
lods
mov
clc
and
xor
add
add
pop
mov
mov
fmuls
push
imul
add
mov
pop
int
ljmp
xchg
xchg
fstps
add
xchg
xchg
xchg
lahf
cmc
test
leave
leave
leave
inc
jo
lret
dec
push
inc
and
push
dec
lcall
jl
cmp
mov
pushf
lods
mov
jns
push
xchg
push
ror
pop
xor
cmp
sbb
sbb
rcll
push
insb
insb
inc
mov
or
mov
out
fbld
ficompl
fcoms
adc
and
imul
sbb
add
sub
ja
js
js
pushf
jg
inc
daa
xchg
adc
sbb
add
iret
inc
adc
mov
or
xor
pop
push
push
xchg
or
lahf
add
cmpsb
add
lcall
xchg
stos
mov
lock
inc
adc
repz
add
arpl
je
add
adc
ja
xchg
jnp
repz
push
clc
adc
mov
fsubl
mov
pop
pop
jl
imul
packsswb
push
cltd
mov
inc
out
or
or
push
mov
arpl
add
push
push
xor
or
or
xor
cmp
daa
pop
xchg
por
adc
jno
sbb
sub
pop
ret
and
mov
push
sbb
mov
mov
aaa
mov
add
sbb
loope
mov
dec
enter
mov
mov
daa
orl
jnp
lea
sbb
js,pt
xor
xchg
inc
in
mov
or
leave
cmc
inc
push
sbb
ss
or
enter
push
push
mov
mov
outsl
mov
enter
nop
int3
add
loopne
sub
pop
or
repnz
js
or
fldl
call
jae
add
mov
add
or
bound
subl
jnp,pt
mov
add
and
nop
int3
cld
subb
js
subl
out
cmp
or
sbb
inc
dec
cmp
or
in
ja
mov
repnz
mov
enter
sbb
mov
dec
lahf
cmp
out
adc
in
orb
cmp
or
jns
push
or
dec
cmpsb
in
cld
das
or
adc
push
push
cmp
push
mov
outsl
ss
mov
je
mov
push
icebp
add
push
scas
imul
pushf
jne
push
lods
adcb
shrl
push
mov
frstor
pop
and
ds
wbinvd
fldenv
aad
mov
mov
mov
lret
xchg
mov
push
or
pop
aaa
mov
fs
imul
subl
inc
adc
mov
sbbb
jge
ds
test
movhps
adc
adc
addr16
adc
push
add
daa
mov
or
or
jae
xor
xchg
les
push
bound
out
mov
push
subl
mov
leave
and
mov
test
sbb
xor
adc
and
and
pop
add
xor
inc
pop
pop
inc
rcrb
sbb
mov
sarb
pop
enter
enter
jb
repnz
or
xlat
pop
inc
sub
adc
mov
pop
inc
aas
xchg
sub
cmpsl
add
sub
inc
adc
cmpb
scas
pop
inc
imul
repnz
movhps
dec
mov
cmp
sbb
pusha
pop
aad
shrb
jb
dec
mov
test
popa
adc
and
adc
mov
jb
test
xor
test
clc
push
sbb
push
and
imul
scas
xor
inc
push
lods
add
out
ss
or
jno
ds
and
mov
add
inc
or
sbb
fnop
pop
dec
inc
repz
xchg
pop
fwait
lock
cli
test
jno
and
xchg
out
inc
loop
cmpl
pop
mov
enter
filds
xchg
hlt
and
stos
xchg
and
push
dec
or
or
mov
inc
loop
jae
aam
or
jecxz
pop
insl
mov
mov
repnz
xchg
inc
inc
ja
stos
gs
je
jbe
dec
jae
pusha
xchg
adc
jl
jno
push
outsb
jmp
sbb
das
mov
pusha
mov
mov
cmp
mov
xchg
pop
mov
xchg
neg
inc
ret
mov
pop
addb
out
mov
cwtl
or
enter
cmp
enter
mov
rcrl
xor
jg
push
sbb
leave
std
lcall
inc
negl
orl
pop
jmp
and
sub
in
push
and
cs
dec
fs
xchg
in
mov
js
mov
dec
push
sbb
outsl
lea
push
mov
pusha
pop
mov
adc
xlat
es
lods
mov
dec
sbb
addr16
push
or
daa
cmp
jecxz
sub
aam
cmp
clc
pop
adc
dec
clc
mov
aaa
xor
jmp
sub
test
std
cmp
imul
jmp
mov
nop
cld
add
shrl
inc
pop
xchg
push
test
addl
mov
mov
mov
addb
or
mov
fildll
jl
add
lret
jge
out
inc
xchg
jg
inc
ds
mov
sbb
lods
in
inc
xchg
dec
pop
jo
xchg
add
sub
bound
test
leave
dec
and
push
or
jnp
shrl
fmull
cltd
mov
pop
leave
adc
xorb
lds
dec
cmp
xor
mul
call
or
push
jo
push
cmp
or
jns
xor
dec
test
jo
pop
rorb
out
imul
add
sbb
test
add
jno
loopne
or
data16
pushf
push
add
daa
inc
dec
out
popf
adc
push
push
push
cmp
jp
loop
orb
or
ss
push
push
push
rorb
cmp
punpckldq
and
mov
movl
pop
sti
jo
jg
cmp
js
cmp
incl
add
mov
add
dec
lods
xor
sbb
scas
pop
mov
in
es
sub
inc
shrl
inc
ja
or
push
dec
push
rcl
cli
setae
adc
cmpsl
jl
adc
icebp
cmp
pop
aaa
xor
xchg
sahf
call
and
nop
inc
push
fadd
inc
and
jnp
dec
adc
add
lods
dec
adc
adc
push
scas
dec
add
ret
jae
and
xorl
push
jae
sarl
push
dec
lahf
push
or
lahf
mov
or
in
adc
adc
sbb
inc
test
jle
push
inc
xor
or
rclb
adc
fisubrl
xchg
es
or
sbb
push
imul
jbe
pusha
loope
adc
sub
das
adc
loopne
and
dec
insb
fcoms
adc
int
mov
imul
dec
or
dec
add
inc
jle
add
fnstcw
lods
mov
push
nop
jle
pop
out
lret
adc
aam
jbe
push
and
rclb
push
jb
or
push
in
out
mov
jns
add
js
vpmacsswd
mov
leave
outsl
fisttpl
mov
lock
pusha
pop
cs
xor
lock
xchg
stc
jg
gs
addb
jno
cmpsb
jecxz
adc
jns
outsl
mov
out
add
js
aam
mov
adc
rolb
ror
add
pop
imul
or
mov
push
imul
or
mov
outsb
and
sbb
mov
mov
insb
fwait
xlat
push
sahf
pop
mov
cmp
add
int3
add
pop
dec
js
ds
adc
lahf
or
imul
adc
and
sbb
mov
aam
cld
mov
and
xchg
add
imul
lock
sbb
addr16
sub
je
and
je
push
pop
adc
push
push
imulb
adc
inc
je
mov
and
xor
fnstenv
xchg
push
inc
dec
cmp
add
and
andb
std
sub
adc
adc
add
sbb
push
aad
movsb
in
jl
xlat
gs
push
movsl
push
pop
in
leave
sti
and
lds
or
inc
mov
jmp
sbb
push
icebp
cmpl
jp
push
mov
xor
mov
add
jp
sar
loopne
aaa
stc
decl
push
push
ljmp
and
mov
mov
lods
push
mov
pop
jae
fsubs
call
push
test
inc
movsl
loopne
les
xor
mov
sbb
jb
and
adc
mov
ss
jle
add
pop
popa
popf
mov
mov
mov
scas
jne
mov
or
sub
or
xorl
jne
sub
dec
pop
or
adc
movb
stos
pop
fistpll
jl
dec
inc
inc
push
inc
test
sbb
test
xor
add
scas
xchg
arpl
mov
loop
mov
cmpsb
in
ret
loopnew
mov
xorl
int
mov
xor
dec
sahf
call
xchg
sbb
or
js
les
cld
fwait
inc
push
test
or
jae
cltd
and
jmp
pop
cmp
inc
inc
popf
push
jne
inc
pop
cmpsb
add
mov
test
push
dec
test
or
jl
jl
cmpsb
int3
add
sbb
xor
mov
sub
cmpsl
xorb
xor
jge
adcl
aam
add
cmp
shll
jns
ret
in
cmp
popf
sbb
pop
lea
cmp
adc
out
sbb
xor
xchg
fbld
incb
enter
pop
icebp
pushf
popf
pop
mov
cmp
jecxz
fs
adc
cmp
cmp
mov
popf
sbb
fldt
test
daa
stos
sub
push
gs
stos
inc
addr16
movsb
aam
popa
daa
and
mov
lock
sbb
dec
dec
mov
mov
xor
hlt
rorl
les
nop
mov
xor
inc
int
cmpsl
push
add
dec
or
jbe
mov
dec
lods
call
pop
cmp
sbb
test
xor
movsl
push
in
test
es
imul
roll
and
insb
dec
or
dec
or
inc
into
lods
lods
call
adc
mov
push
shl
imul
in
ljmp
xor
adc
sub
dec
push
adc
fidivrl
ret
test
or
push
les
sub
loopne
pop
test
add
lods
and
sbb
subb
dec
xor
or
or
ss
repz
or
or
xor
mov
cmpsl
nop
push
stos
push
test
mov
stos
stos
mov
dec
js
cwtl
jmp
add
mov
in
add
xor
xchg
ss
cs
fdiv
out
dec
out
scas
loope
andb
scas
pop
scas
sub
mov
adc
add
cmpl
pop
cltd
cmp
inc
add
ss
jl
dec
jbe
push
aad
test
repnz
test
imul
or
jne
push
and
in
or
in
dec
test
inc
mov
js
inc
mov
cwtl
icebp
dec
pop
jns
test
loope
push
stc
test
mov
cwtl
push
in
mov
jae
out
filds
pop
inc
jp
adc
jg
xchg
push
and
cltd
push
xchg
pop
loope
and
fistpl
sbb
dec
jg
fidivl
jo
imul
std
int
mov
out
lea
dec
cltd
or
and
push
mov
jg
sub
dec
fwait
ds
sub
insb
inc
push
cmp
outsb
outsb
lods
adc
bound
enter
popf
sarb
lcall
clc
pop
js
pushf
dec
popa
jo
or
mov
or
rcll
add
pop
xlat
inc
mov
xchg
inc
cmp
insb
push
pop
mov
push
add
outsl
movsb
or
push
push
roll
adc
ret
and
insl
bound
das
lahf
inc
and
ret
into
rcrb
xchg
cmp
cmp
and
dec
das
push
xchg
add
mov
add
inc
insb
imul
add
mov
test
rorb
loopne
mov
dec
ret
cmp
mov
mov
daa
add
das
mov
sbb
fdivrs
add
sbb
push
push
jecxz
sub
inc
sub
inc
inc
insb
imul
or
fldl
jmp
adc
mov
inc
mov
ss
out
enter
mov
inc
vmread
mov
pusha
mov
jmp
sub
adc
xchg
jl
add
xchg
xor
idivl
mov
dec
pop
or
inc
sub
gs
fsts
and
xchg
mov
or
add
decl
sbb
out
cmp
in
and
repnz
dec
sbb
or
push
mov
or
and
or
add
or
iret
push
imul
and
mov
mov
pop
or
lock
adc
adc
outsb
jb
repnz
push
xchg
inc
jl
pop
insb
inc
and
incl
push
out
push
push
mov
push
cmp
add
add
popf
push
push
push
mov
sbb
dec
es
pusha
jns
repnz
mov
add
sub
add
cmpsl
jo
enter
out
ret
sub
cvtdq2ps
mov
push
sahf
or
dec
insb
mov
mov
inc
jne
aas
and
popa
fwait
or
xchg
and
jl
adcb
cwtl
ds
pop
leave
ret
cmp
or
fs
or
popf
add
inc
outsb
pop
push
add
aad
popa
jnp
dec
and
mov
dec
cmp
or
gs
mov
outsb
push
dec
je
jl
jo
sbb
jg
inc
lock
and
push
add
adc
ljmp
mov
inc
enter
lds
jae
push
mov
push
out
jae
mov
push
cld
dec
setb
pop
stos
xor
dec
cmovo
and
pusha
ljmp
inc
adcb
mov
adc
and
adc
jle
scas
aad
add
push
and
in
mov
cmp
lret
outsl
dec
cmp
xlat
xlat
sub
clc
dec
dec
jl
cli
je
test
xlat
aad
lock
mov
or
xchg
adc
jae
inc
bound
pop
jecxz
xchg
lock
imul
sub
dec
clc
sti
jne
cmp
and
mov
sbb
outsl
jmp
push
add
lods
mov
xor
stc
mov
in
ds
fs
sarb
sbb
or
mov
add
ret
mov
mov
xchg
xchg
push
adc
or
push
adc
scas
adc
inc
mov
jno
mov
sbb
sub
sbb
and
or
add
push
movsb
xlat
sbb
add
push
dec
push
and
dec
or
icebp
cmp
adc
orb
sub
push
or
sub
scas
mov
pop
jae
mov
aam
sub
ja
lcall
popa
mov
or
mov
and
inc
clc
dec
rol
mov
jecxz
ds
push
inc
sub
in
roll
or
in
mov
add
shll
in
outsb
hlt
cld
sbbl
or
xor
xor
lock
pop
adc
add
nop
pushf
add
cmp
sbb
xchg
xchg
add
dec
arpl
into
dec
jecxz
adc
inc
jb
cmc
rcrb
sbb
inc
xchg
idivl
cltd
xchg
xchg
scas
or
push
mov
lods
xchg
and
lea
and
dec
cmpsb
loopne
sbb
and
cmp
xor
dec
dec
or
cmp
jl
lcall
jne
sbb
or
lock
loop
pop
frstor
mov
fwait
scas
sub
push
add
sub
add
xor
hlt
fdivl
insb
and
jno
jecxz
cmpsl
mov
sbb
ret
cmp
xor
xlat
dec
shl
lds
xchg
fcom
or
xchg
xor
insb
or
fstps
pop
roll
xor
inc
push
leave
scas
scas
add
pusha
aaa
pop
rclb
pop
xchg
nop
mov
or
jmp
jnp
add
scas
jle
sahf
add
push
mov
imul
nop
xlat
inc
and
out
or
lock
je
es
mov
repz
cmp
lret
pop
xor
inc
adc
jne
mov
sbb
cmp
pushf
sub
rorl
test
std
add
inc
pop
hlt
addb
mov
mov
xchg
mov
jno
rcrb
movb
cmc
xchg
loope
aas
xor
push
push
lcall
push
sbb
push
and
ds
in
and
xchg
dec
add
cltd
imul
call
mov
dec
and
pop
cmpsb
inc
les
jo
pop
ficomps
jne
push
enter
cmpb
pop
daa
movsb
nop
dec
dec
aaa
in
xor
inc
xchg
pop
ret
xor
insb
xor
dec
cli
or
push
add
push
inc
xchg
test
adc
mov
add
outsb
sub
pop
lods
push
inc
rolb
sub
xor
fucomi
push
mov
mov
or
add
loop
adc
enter
std
dec
sub
pop
push
int
icebp
sbb
pop
jmp
pop
pop
ss
fistl
dec
lods
mov
inc
xchg
subl
hlt
nop
add
cmp
je
aaa
jmp
xlat
mov
and
shll
mov
or
cmp
push
dec
xor
aam
or
cmp
mov
call
fidivrl
add
loopne
xlat
xchg
sbb
pop
adc
mov
pusha
outsb
aaa
icebp
xor
iret
sbb
rcrb
outsl
nop
out
add
add
bound
mov
nop
imul
shrl
aad
dec
sbb
bound
stos
shlb
scas
scas
stos
cld
mov
ss
xor
xor
hlt
push
mov
pop
mov
lock
aad
ror
mov
add
xchg
add
lret
lcall
xchg
mov
xchg
mov
dec
or
imul
inc
test
out
cmp
dec
inc
and
adc
add
xor
add
ret
into
cld
cmp
jo
adcb
xchg
sub
xor
cmpb
scas
into
xchg
sbb
in
sub
mov
dec
add
sub
aaa
pop
sbb
rolb
imul
xchg
inc
movb
cmp
loopne
jb
xchg
dec
or
pop
andl
or
enter
mov
mov
mull
pop
xchg
clc
mov
cmpsb
leave
leave
ss
loopne
add
fsubs
pop
movsb
or
leave
cmp
and
outsb
add
mov
push
inc
lahf
js
cmp
hlt
hlt
nop
mov
xor
aas
xchg
enter
hlt
mov
sbb
call
mov
inc
call
int
aam
push
sar
sbb
cmpsl
test
nop
mov
inc
and
xchg
aad
jle
leave
mov
stos
pop
sbb
xchg
daa
scas
sub
lret
sbb
mov
test
xor
in
push
call
movsb
rol
and
push
and
iret
cmp
rcrl
pop
imulb
pusha
leave
lret
xor
and
xchg
adc
pop
aam
in
cmp
mov
inc
pop
sbb
fld
js
or
mov
sbb
lahf
int3
je
movl
jb
bound
dec
jno
mov
push
daa
pop
xor
pusha
inc
xchg
testb
sbb
push
mov
add
mov
mov
add
fwait
sub
xor
or
adc
inc
ss
or
inc
fs
dec
loopne
fsubl
int3
xchg
mov
movsb
orb
mov
mov
add
cmc
xchg
or
add
adc
popa
in
pop
jmp
roll
xor
dec
push
xchg
add
popf
stos
inc
popa
xchg
cmpsl
fildll
mov
roll
je
mov
pop
loope
pop
sub
jp
or
cmp
pusha
movsl
ret
lcall
inc
mov
int3
jnp
or
and
test
pop
into
mov
data16
pop
leave
push
repnz
iret
push
or
add
pop
push
rolb
jl
inc
lea
sub
mov
addr16
fwait
cmp
cld
inc
sbb
mov
stos
xchg
mov
daa
push
cmp
inc
or
insl
adc
fadds
pushf
sub
fwait
push
mov
jns
sub
xor
sub
jnp
inc
faddl
pop
jl
adc
mov
dec
mov
aad
vmwrite
xor
fnstenv
es
xchg
adc
int3
sub
sbb
or
add
call
mov
adc
in
sub
mov
int
addb
or
mov
insl
sbb
push
mov
push
xchg
jno
sbb
or
sub
je
push
xor
enter
pushf
aam
push
rorb
faddl
lds
hlt
mov
rorb
adc
xor
pop
mov
mov
or
add
aas
int3
pop
fs
cmp
add
or
jl
adc
mov
xlat
arpl
out
adc
mov
cli
ret
out
inc
pop
xorb
loope
push
iret
outsb
mov
leave
mov
push
or
adc
cli
aad
adc
push
mov
arpl
and
pop
cmp
xor
push
jo
sub
fidivs
fstl
cld
ja
or
movsl
and
shl
cld
pop
or
icebp
movsb
or
rclb
mov
add
call
xlat
and
adc
rorl
sbb
and
jecxz
adc
imul
add
in
imul
and
push
jno
and
in
sub
icebp
das
pusha
and
sub
jo
adc
sbb
int3
movsb
inc
mov
ss
outsl
inc
int
add
daa
xchg
cmp
or
sbb
inc
out
pop
sbb
sarl
mov
jmp
inc
adc
aas
loopne
adc
bound
icebp
cmp
cld
int
push
mov
and
cmp
pop
sarl
pop
aam
mov
xchg
int3
mov
iret
dec
mov
pop
sbbl
shll
push
cmp
and
cmpsl
dec
lahf
ret
push
push
cmp
into
and
push
and
popw
sbb
add
dec
inc
and
dec
clc
das
sti
mov
push
inc
or
ret
pop
push
popf
push
cmp
mov
add
jecxz
xor
dec
mov
sbb
or
mov
sub
das
mov
mov
inc
fs
cmp
pop
jl
ljmp
aam
unpckhps
fxch
inc
or
outsl
out
add
pusha
mov
fcmovbe
lods
add
xor
mov
inc
add
call
adc
or
mov
mov
jmp
adc
add
push
lods
mov
sbb
jo
adc
sub
sbb
ja
jmp
xchg
call
out
fwait
scas
mov
mov
dec
dec
clc
sbb
sub
int
mov
inc
call
mov
imul
jnp
or
dec
or
mov
push
inc
icebp
mov
adc
aaa
mov
cmp
ret
cmpsb
dec
seto
cmp
add
cmp
ret
jne
inc
and
cs
out
lock
popl
push
decl
add
roll
stc
add
mov
and
sub
cmp
mov
adc
add
addr16
sarl
mov
adc
mov
loope
je
jb
leave
ljmp
lret
adc
mov
push
pop
shr
push
pop
pop
dec
shr
ja
ret
scas
or
je
adc
jne
pusha
and
push
pop
dec
jle
dec
add
jge
fsub
push
mov
movsl
push
adc
push
push
inc
sarb
aam
je
mov
jno
mov
jmp
push
push
pop
cmp
je
std
popa
xor
push
lods
xchg
call
bound
bound
mov
jp
loopne
sub
dec
aaa
xchg
ja
pop
cmp
je
xchg
add
enter
push
pop
enter
jecxz
add
cmp
stos
shlb
sbb
fdiv
mov
or
lods
add
adc
fldcw
and
sti
pusha
xor
int
inc
mov
dec
inc
and
sbb
mov
xchg
mov
cmp
mov
sbb
imul
add
inc
adc
add
lock
lea
test
outsb
or
sbb
shlb
jl
add
sub
xchg
push
clc
outsb
je
add
or
rclb
mov
or
mov
jge
push
je
xchg
inc
adc
popaw
jle
loopne
inc
inc
mov
jecxz
fs
enter
jmp
mov
dec
insl
sub
pusha
test
sarb
dec
mov
and
addr16
lret
and
rclb
addr16
inc
out
mov
imul
sub
cmp
mov
cmc
fistpl
cmp
out
mov
test
cltd
insb
add
addb
cwtl
jno
nop
xchg
xlat
hlt
into
or
ljmp
pushf
jg
fstps
pop
je
add
mov
imull
add
mov
cmp
cmp
jle
insb
xchg
andb
int
pusha
test
addl
mov
popf
pop
mov
rcr
in
mov
and
aas
xchg
unpckhps
cmp
loop
inc
and
cmp
xor
adc
rolb
les
loop
lock
fsubr
leave
and
lock
flds
jecxz
roll
mov
pop
jnp
pop
clc
adc
nop
pop
faddl
aas
fdivrl
xchg
dec
ss
or
adc
fisubs
movsb
lcall
cmp
pop
dec
cmp
cmp
mov
sbb
lods
popl
inc
in
faddl
dec
dec
xchg
sub
addr16
hlt
sub
ljmp
test
sbbb
ss
lock
xchg
dec
popf
mov
movmskps
xchg
pop
mov
jno
mov
add
incl
js
push
push
dec
imul
roll
cmpsl
add
mov
dec
pop
adc
div
movzbl
xlat
in
sub
xor
fwait
or
push
cld
mov
add
cltd
adcl
and
fwait
add
sub
xchg
add
test
or
lock
jge
dec
mov
add
mov
fidivs
push
dec
mov
filds
hlt
loopne
pop
mov
xchg
rcl
cs
inc
dec
add
inc
loope
xor
popf
push
hlt
ja
inc
mov
decl
outsl
add
jns
insl
pop
sbb
roll
inc
jne
sub
mov
out
test
repz
pop
jnp
in
push
jbe
adc
enter
iret
arpl
nop
sub
push
add
test
sub
je
add
je
or
mov
inc
pop
cmp
orb
int3
add
pop
xor
push
jo
inc
shll
mov
loopne
pop
popa
add
add
jb
and
clc
sarb
or
pusha
add
scas
dec
add
inc
or
add
inc
shrl
add
mov
xchg
stos
andl
loope
push
test
sub
cmp
sbb
pop
and
jns
pop
mov
inc
xor
cltd
in
add
stos
ja
jmp
loop
addb
adc
mov
jno
push
dec
add
push
push
fcoms
adc
iret
incl
pop
sbb
cwtl
xor
pop
push
jb
repz
jecxz
in
xchg
popa
nop
call
inc
hlt
dec
push
jno
mov
dec
xchg
mov
mov
xlat
jmp
sub
push
aam
pop
pop
bound
add
outsb
cmp
fisttpll
push
mov
add
cmp
or
rclb
enter
add
scas
insl
add
shlb
fs
mov
mov
mov
xchg
pop
dec
aad
loopne
jle
sar
mov
add
out
mov
cmp
je
addl
bound
push
in
adc
imul
cld
mov
xchg
sub
jbe
cmp
sbb
or
adc
lock
adc
sub
sbb
ret
and
jae
adc
leave
je
stos
insl
stos
ljmp
cli
sbb
test
fdivrl
inc
adc
sbb
mov
dec
ret
or
push
out
sbb
enter
mov
cmp
je
sbb
jle
call
pop
ja
pop
bt
jb
fcmovb
aas
lahf
shl
dec
mov
ret
ret
adc
push
inc
inc
mov
clc
cmp
jne
inc
mov
mov
sub
outsl
aaa
dec
rorb
stc
xor
fs
test
and
les
push
mov
or
pusha
or
adc
push
or
push
outsb
add
daa
cmp
add
jmp
xchg
sarb
call
in
inc
fstps
insb
or
cwtl
add
repz
or
sub
adc
mov
stos
mov
mov
pop
rcl
ret
mov
jmp
addl
in
mov
ret
or
test
aaa
and
adc
push
test
adc
add
lcall
out
jge
and
jl
fimull
mov
test
fs
aad
add
out
and
add
aas
or
dec
rcl
xchg
clc
lret
xchg
adc
loop
jo
inc
or
enter
add
sbb
jo
loope
je
addr16
je
je
pop
nop
xchg
mov
sub
adc
scas
les
out
arpl
or
scas
cs
add
flds
scas
or
pop
daa
scas
add
add
test
mov
cmp
or
push
add
addr16
inc
add
or
adc
push
jno
pop
cmpl
or
jmp
jne
xchg
push
mov
sbb
adc
xchg
jb
mov
push
and
in
sub
and
scas
adc
jnp
cmp
inc
mov
outsb
sahf
out
stc
jno
xor
sbb
add
add
and
add
cmp
or
sbb
in
cmp
sbb
scas
push
sub
imul
andl
cmp
imul
add
stos
out
mov
fiaddl
push
mov
leave
sbb
ret
xor
xchg
into
cmp
movsl
fucomi
fdivrs
dec
inc
rcrl
lcall
dec
add
ja
pop
sbb
test
adc
addr16
adc
dec
add
or
jecxz
cli
out
loope
xchg
xor
cs
je
test
mov
push
mov
sbb
adc
dec
aam
sbb
movsl
cmp
aad
or
loope
adc
jns
and
jb
pop
jmp
test
inc
mov
jbe
cmpsb
jnp
and
sarl
mov
jnp
pushf
insb
inc
or
ljmp
les
and
push
stos
ret
popa
mov
mov
lcall
rol
pop
xorb
aaa
jo
iret
jo
fadds
push
sbb
dec
addr16
es
mov
inc
jb
xchg
notb
movdqu
enter
jl
test
or
push
or
push
jo
inc
mov
add
push
pop
pop
pop
add
lods
dec
sub
shll
iret
jle
cwtl
jl
or
mov
fwait
js
rorl
push
sbb
and
adc
scas
cmp
dec
adc
sub
pusha
and
pop
cmp
pop
js
dec
in
pop
xor
rorb
es
clc
xor
mov
add
cmp
and
inc
and
popf
adc
adc
mov
pop
in
lret
sbbb
and
and
add
mov
pop
push
push
out
stos
push
fs
testl
jge
add
call
les
dec
inc
xchg
push
outsl
sbb
add
fnsave
sub
add
pop
add
repnz
add
or
fadds
dec
jne
jnp
imul
adc
sbb
mov
xchg
fiaddl
push
nop
lret
adc
add
push
pop
test
shrl
cmp
dec
shlb
adc
adc
adc
fmuls
fwait
sbb
mov
daa
and
insl
push
fadds
pop
iret
fwait
sbb
mov
push
popf
movsb
xchg
push
jl
and
fildl
popf
jp
cmp
imul
cmpsl
addb
or
paddd
xor
push
test
add
addr16
sbb
sbb
jecxz
push
cmpl
ss
xchg
jmp
sbbb
cmp
xor
out
out
mov
xor
pop
dec
mov
divl
sub
fsubs
pop
inc
push
jp
xchg
cmp
pop
adc
jne
imul
pop
loopne
sbb
in
or
lea
or
imul
les
dec
out
mov
shrd
jmp
iret
mov
out
enter
fcomip
aad
pop
sbb
pusha
sub
or
aas
pop
sbb
test
std
inc
mov
adc
sarl
add
lea
pop
xor
out
push
sbb
mov
cmp
repnz
mov
cwtl
sbbb
sub
test
sbb
dec
addl
push
in
sbb
inc
lock
icebp
or
cmp
hlt
in
fisubl
imul
add
add
xchg
fcoml
add
jno
nop
xchg
mov
jo
xor
in
or
push
or
call
sbb
xor
add
int
mov
or
mov
std
cmpsb
mov
pop
jns
sbb
mov
or
add
inc
adc
or
sub
movsb
pop
or
or
xchg
adc
sti
arpl
lret
mov
sub
xchg
push
push
and
nop
mov
adc
sub
lret
or
pop
cmpsl
and
jo
sub
mov
rcl
imulb
add
shl
cld
jmp
and
mov
lahf
ret
xchg
pop
sub
adc
inc
ret
dec
faddl
mov
cld
push
mov
cmpsb
hlt
rorb
add
dec
pop
movsl
movsb
pop
divl
sbb
and
xlat
jp
loope
dec
lock
cmc
mov
push
inc
test
rcr
mov
in
jns
mov
in
xor
cld
adc
paddsb
pop
aas
or
push
nop
lea
or
sub
xor
notb
sbb
and
sbb
push
call
rorl
shll
aaa
sbb
das
jo
sbb
dec
je
sub
fs
shlb
mov
and
add
and
lahf
push
arpl
adc
add
adc
rolb
or
sub
dec
je
bound
adc
inc
cmc
int
mulb
sub
pop
add
and
cmpsl
es
xchg
std
negl
mov
fsubl
negb
in
push
mov
inc
fmuls
xchg
fistpll
jl
pop
xchg
mov
dec
addb
cvtpi2ps
add
lret
sti
enter
out
dec
lea
cli
popa
movsl
mov
cmpl
aaa
inc
xchg
movsl
iret
faddl
test
enter
inc
aas
sub
imul
push
les
testb
mov
mov
add
lea
mov
jne
clc
mov
test
and
ja
addr16
sub
sub
in
push
lea
jge
mov
mov
xor
mov
mov
in
cs
sbb
dec
call
sub
inc
int3
dec
xor
adc
je
sub
pop
pusha
call
jae
lods
je
je
push
sub
in
xchg
clc
mov
cltd
fistpl
orl
movmskps
mov
inc
inc
sub
cmpsl
call
xorps
test
fdivrs
add
sbb
test
dec
pop
fsubl
adc
sub
sub
mov
adc
or
inc
xchg
or
or
dec
push
mov
jne
sbb
xchg
lret
fs
cmpl
shrb
or
fmull
fdivp
jge
mov
call
lods
dec
xor
popa
add
pop
daa
xchg
icebp
in
dec
mov
dec
cld
pusha
rep
xchg
es
jg
sbb
add
add
dec
jne
fisubrl
or
dec
call
push
adc
mov
cld
es
aam
data16
xor
add
int
sbb
dec
clc
cmpsl
fwait
add
pushf
jmp
add
shrb
adc
pusha
les
xchg
push
xchg
out
sub
lea
loopne
pop
add
sbb
xor
test
mov
fcoml
cmp
inc
add
aas
adc
inc
pop
in
das
and
and
std
pop
lcall
cld
leave
repz
test
or
in
mov
xchg
lods
or
pop
xorb
shlb
fcmove
dec
cmp
push
and
lods
cmp
xchg
shll
pop
xchg
push
adc
mov
add
lret
nop
and
fwait
inc
lcall
sbb
push
pusha
pop
push
lahf
fmulp
jnp
or
repnz
pop
or
daa
dec
fwait
push
fidivs
pop
test
push
mov
or
sbb
jmp
popa
or
jo
aam
dec
pop
std
fildl
or
aaa
dec
jno
sub
in
pop
xor
pop
data16
inc
pop
pop
dec
pusha
xchg
pop
dec
or
test
enter
notrack
sbb
adc
inc
loopne
fcoms
jp
or
lret
fwait
adc
sbb
dec
je
xchg
or
xchg
add
je
addl
repnz
jns
sbb
mov
adc
dec
adc
fsubp
mov
dec
stc
add
je
or
dec
sub
push
test
or
les
nop
mov
and
lret
scas
nop
andl
out
inc
or
jmp
sub
outsl
xor
dec
push
mov
pop
pop
pop
mov
mov
add
mov
inc
xchg
adc
add
mov
sub
pop
mov
shll
and
add
outsb
mov
dec
and
shr
stos
mov
inc
push
test
jne
aas
push
in
add
push
xchg
sub
inc
inc
fldl
pop
dec
mov
fs
fisttps
xchg
out
ret
add
mov
xchg
jne
ss
xorl
pusha
dec
push
cmp
cwtl
hlt
and
daa
es
aas
jns
push
xor
clc
movsb
adc
or
es
inc
add
push
pushf
sbb
scas
clc
mov
repnz
mov
add
add
mov
xor
imul
and
adc
xchg
or
sub
and
pop
gs
xchg
add
aas
enter
mov
cs
or
mov
pop
adcl
add
inc
arpl
push
add
mov
clc
or
push
sub
in
and
push
lock
push
repz
and
pop
add
addl
push
addb
mov
jmp
and
jno
rcrb
mov
add
mov
mov
in
push
je
xchg
jge
sbb
adc
mov
adc
in
jle
or
shlb
xbegin
mov
inc
xorb
sbb
mov
or
cmp
test
loop
mov
inc
sbb
adc
enter
add
push
push
adc
xchg
xchg
dec
jp
repz
push
enter
popf
add
jns
inc
call
pop
hlt
lods
pop
dec
fisubrs
and
add
or
add
mov
and
mov
cmp
gs
add
call
popa
fwait
ljmp
clc
jne
sbb
dec
or
fisubs
mov
dec
in
push
mov
addl
sbb
or
xlat
mov
and
je
sub
mov
push
adc
lds
rol
add
lahf
aaa
sbb
push
dec
fdivs
orl
or
loope
adcl
cmpl
inc
sbb
lds
sub
and
pop
add
xor
xor
cmp
nop
push
mov
sbb
mov
inc
or
mov
add
subb
xchg
sbb
adc
call
xor
sarb
mov
push
imul
adc
xor
adc
and
or
add
adc
mov
jae
push
mov
enterw
jae
iret
add
leave
xchg
or
add
adc
mov
gs
xchg
das
fimull
jne
or
ret
inc
out
sbb
add
push
or
subl
test
testl
dec
ret
or
ja
adc
cmp
cmp
data16
add
sbb
add
or
jecxz
push
xchg
cltd
scas
or
add
imul
nop
lret
fbld
test
dec
jb
sub
and
push
out
push
nop
pop
mov
add
fsubr
mov
and
mov
cmp
repnz
push
das
out
cmp
push
dec
dec
cmpb
mov
ss
xor
mov
jnp
inc
adc
xor
inc
lock
les
inc
dec
jne
push
xchg
fs
and
mov
fmul
mov
xchg
add
xor
or
or
push
push
cmp
clc
ret
mov
daa
mov
adc
stc
cli
xor
xchg
cmpb
inc
fwait
movsb
xlat
je
adc
push
leave
cmp
and
and
subb
xor
mov
mov
sbb
not
clc
and
add
insb
fadds
add
not
popa
dec
or
ja
pop
scas
cltd
or
push
repz
xor
xchg
dec
xchg
pop
and
bound
mov
cmp
cmp
cmp
mov
ja
adc
inc
push
push
or
ret
xor
lds
jne
aaa
dec
dec
popa
xor
ret
adc
jns
lahf
add
shlb
ret
lock
movsb
ds
xchg
adc
lds
test
and
stos
adc
cs
and
or
xchg
pop
dec
scas
xor
leave
or
and
sbb
jb
add
orb
insl
sti
xor
sarl
xor
lock
outsl
and
pushl
rorb
pop
xchg
push
pop
adcb
rdtsc
sbb
jo
js
adcl
lds
fstps
mov
ret
test
dec
add
pop
push
or
ja
cmpsb
push
xchg
mov
test
mov
shlb
sub
cmp
dec
mov
fmulp
nop
ds
jmp
adc
add
and
adc
cmp
adc
lea
ja
push
cmp
imul
cmp
stos
pause
jle
cli
add
xor
push
or
pop
dec
dec
dec
inc
sbb
xchg
fiaddl
ljmp
xlat
les
xor
imul
nop
das
iret
fptan
test
movb
mov
mov
inc
cmc
test
out
mov
push
add
stos
ret
add
pop
sub
adc
fistpll
adc
out
jle
jmp
or
push
or
pop
cmpsl
loopne
cmp
adc
push
enter
lea
push
push
and
dec
ret
shrl
in
js
daa
lret
lcall
mov
push
dec
rcrl
fidivrl
mov
add
and
or
not
rcrl
jg
and
dec
sahf
dec
lods
lock
mov
fsubl
push
into
dec
lahf
jmp
jne
mov
or
or
sbb
leave
sub
jl
adc
out
xor
or
sbb
je
out
mov
daa
dec
repnz
lahf
lock
cmp
or
and
test
fmuls
pop
jmp
inc
fbld
or
xor
pusha
mov
arpl
adc
call
xor
cmp
in
sub
add
pop
mov
arpl
mov
rcl
decl
cmpb
sahf
adc
xchg
ret
mov
ret
xlat
mov
add
insb
insl
test
adc
add
or
add
sbb
or
sbb
filds
clc
cmp
je
dec
pop
adc
inc
loop
fwait
jl
xlat
xchg
sbb
adcb
scas
xor
pop
pop
xchg
jle
push
fsubrs
popf
pop
mov
add
cmp
scas
fwait
cld
push
subb
xchg
add
mov
lea
mov
xchg
sub
sub
je
sub
jle
mov
push
add
data16
into
xchg
mov
shl
cmpsl
hlt
pop
inc
mov
inc
in
xchg
xor
lods
in
faddl
push
insb
xchg
dec
jl
or
mov
mov
mov
sbb
lea
pushf
cld
sub
out
xlat
loope
in
and
push
push
jb
cmpsb
lea
das
subb
jne
sbb
xchg
adc
fcomps
add
dec
sbb
sbb
adc
sbb
xchg
xor
sbb
xchg
out
rcll
lods
push
xor
mov
rol
adc
inc
insl
or
jmp
pop
add
sub
mov
movsl
into
iret
call
xchg
sub
jle
pop
sub
add
or
lods
fnstcw
icebp
mov
adc
insl
jg
adc
adc
mov
leave
adc
fs
pop
sbb
lea
pop
mov
adc
adc
or
adc
add
fwait
add
mov
jbe
or
jmp
xor
mul
adc
in
push
jmp
xor
sbb
or
add
pop
js
test
into
call
adc
addr16
adc
or
pop
add
sbb
push
pop
mov
push
out
add
loop,pn
imul
test
aaa
push
mov
stos
jbe
arpl
lods
js
and
add
inc
pop
dec
ficomps
lods
lret
clc
dec
enter
dec
mov
add
aas
pop
ret
stos
pop
mov
cmpsl
or
mov
push
loopne
iret
mov
cmp
je
ja
sbb
das
test
rclb
cmpsb
outsb
sub
fimuls
popf
adc
lock
pop
ja
cmc
sbb
aaa
xchg
cmp
orl
mov
adc
test
dec
dec
jmp
xchg
lret
or
in
cmp
fwait
shlb
clc
aas
sbb
or
add
inc
add
hlt
dec
ljmp
dec
cmp
mov
movlps
lock
add
or
add
add
dec
ret
push
jo
popf
lcall
fimuls
push
rorb
inc
or
add
dec
mov
lea
into
adc
add
cli
or
data16
inc
cld
js
dec
add
imul
sbb
sub
sar
cmc
jnp
sti
jle
mov
inc
add
add
add
xchg
cmp
pop
idiv
das
cltd
imul
pop
or
lea
adc
lock
or
enter
and
fistps
cmp
ret
dec
fiaddl
sarb
mulb
movl
es
pop
xchg
pop
sbb
mov
cmp
adc
push
jbe
mov
pop
mov
pop
mov
arpl
fldenv
jbe
jmp
out
sub
rcr
push
cmp
jbe
arpl
movzbl
jne
add
fcompl
and
ss
sub
sbb
add
std
adc
or
push
and
es
roll
and
sub
pop
jnp
pop
push
push
adc
popa
push
add
cmp
adc
xor
inc
sbb
jl
pusha
jmp
mov
inc
pop
mov
outsl
jne
push
scas
test
pop
les
push
or
pop
pop
xor
mov
mov
adc
inc
inc
popf
xor
pop
or
jb
add
xor
add
pop
lcall
inc
pop
sbb
ret
jl
jl
les
outsb
iret
jg
or
or
stos
pop
sahf
and
dec
inc
add
add
fcmovbe
add
sub
xchg
xor
dec
mov
push
pop
call
adc
cmp
sub
jnp
push
push
dec
and
dec
jl
lret
add
lcall
mov
and
test
addb
bound
and
add
lods
sub
ret
cmp
aam
rclb
inc
add
adc
aaa
pop
stos
in
in
inc
js
pop
pop
add
add
and
mov
jne
leave
and
xor
loopne
fmull
dec
leave
loopne
mov
push
cmpsl
xchg
bound
sub
push
addb
mov
inc
sub
test
les
sub
sbb
or
jnp
mov
jcxz
cltd
jl
inc
sub
or
xor
jle
dec
adc
add
test
add
popf
pop
dec
sub
or
xchg
mov
jmp
mov
add
add
fdivs
ret
test
xchg
mov
cmpsl
mov
pop
lahf
lods
pop
cmp
pop
cmpsb
jns
inc
pop
into
inc
pop
aam
push
pop
or
mov
js
adc
and
or
inc
and
lock
pop
test
arpl
daa
sub
stc
lock
aaa
lret
jo
bswap
push
mov
enter
jle
lock
sbb
sarb
popf
jnp
aam
adc
push
pop
lods
iret
mov
aad
incb
cmp
jge
mov
jb
dec
pop
orb
fidivrl
adc
pop
rcrb
rclb
add
push
loopne
icebp
out
lea
movups
lret
or
mov
jb
iret
inc
imul
add
fsubrl
push
pop
clc
jne
dec
popf
imul
cmp
and
lods
ljmp
cmp
xor
cmp
jle
add
sarb
jle
or
movsl
xlat
xchg
fistpll
outsb
and
add
and
or
das
cmc
xchg
flds
inc
lods
pop
popa
inc
cmpsl
adc
ss
and
scas
add
or
in
or
nop
das
and
sbb
ret
jo
inc
or
pop
cwtl
inc
aam
adc
mov
test
xchg
mov
bound
int
push
enter
insb
sbb
adc
es
in
adcl
inc
popa
xchg
ret
lcall
adc
jae
inc
mov
loopne
jns
xor
rorl
ret
pop
push
addb
outsl
in
xchg
dec
test
cmp
fisubl
mov
dec
pop
orl
cmp
pop
fsubl
and
jecxz
or
adc
ret
ja
jnp
xor
pop
jo
es
mov
insl
jl
push
sti
daa
and
adc
daa
loopne
or
mov
adc
pop
inc
and
and
inc
movsb
pop
sub
rcll
or
rol
sub
fadd
dec
ja
sub
roll
and
daa
fisttps
mov
or
js
insb
andb
repz
sbb
mov
movsl
push
iret
fisttpl
mov
adc
push
or
std
mov
dec
mov
adc
mov
inc
and
daa
xchg
es
test
enter
outsb
test
loope
rorb
out
or
add
es
mov
icebp
cmp
and
push
add
adc
pop
or
and
nop
rorb
push
jb
dec
ret
lock
xor
insl
adcb
sahf
stos
adc
adc
cmp
adcl
lret
push
sub
adc
jns
in
adc
mov
mov
pop
cmpb
adc
sbb
mov
cmp
pop
add
inc
inc
xor
mov
push
jge,pn
or
or
lea
inc
pop
out
xor
jns
dec
pop
cmp
mov
mov
mov
add
dec
jp
and
sub
pop
or
or
push
roll
movsb
push
and
out
or
jl
mov
jg
adc
or
push
sub
add
outsb
push
sub
orl
nop
adc
adc
ret
xchg
sbb
or
sub
rcll
or
dec
hlt
fistl
das
add
mov
mov
pop
push
pop
icebp
or
cltd
add
cmp
enter
sub
adc
std
xchg
test
and
add
dec
lahf
adc
add
inc
or
add
jns
dec
push
and
rorb
jl
inc
aad
lcall
or
daa
xor
outsl
xchg
repnz
pop
jb
jge
das
sub
xorl
jp
stos
cs
mov
cmpl
loop
aam
push
or
lret
sub
push
inc
xor
clc
sbb
lock
cmc
sub
or
popa
jb
js
dec
jl
hlt
adc
subl
push
sbb
add
mov
sub
inc
lret
lods
jo
xchg
sti
mov
push
or
or
pop
inc
jmp
sbb
fcomps
push
jo
addr16
jmp
push
cmp
adc
jmp
dec
pop
sub
and
sub
push
cld
mov
andw
xor
jbe
fldenv
roll
loope
in
inc
inc
inc
jmp
lcall
sub
mov
cmp
test
pop
aas
loope
lcall
movups
jl
cmp
cmp
push
adc
adc
insb
insl
pop
mov
push
add
ret
mov
bound
inc
lock
outsb
inc
loop
and
pop
sub
add
and
add
xlat
jmp
dec
push
mov
push
adc
in
inc
pushf
test
fnstenv
sbb
or
push
xlat
shrb
jo
scas
dec
push
push
add
pop
or
test
push
ret
lock
sub
cmp
xchg
adc
mov
add
in
cmp
xor
insb
and
aas
xor
enter
sbb
or
adcl
pop
push
xchg
push
test
fmuls
into
sbb
adc
push
rclb
int
add
fs
sbb
daa
lods
inc
and
add
inc
adc
push
adc
jo
es
int3
push
dec
mov
or
mov
dec
xor
adc
sbb
pusha
xor
andb
sbb
jns
movsb
mov
es
fdivs
or
dec
cmp
hlt
aaa
sbb
mov
mov
roll
loopne
das
sub
xchg
adc
je
xlat
arpl
decl
daa
xor
test
xchg
add
xchg
rolb
pop
mov
add
sub
lret
push
sub
cmp
imul
insb
add
mov
xchg
subb
and
mov
notl
pop
push
cmpsl
and
fdiv
sbb
push
cmp
xchg
jo
lret
sbb
jge
mov
add
jno
add
ret
rclb
and
cmp
int3
add
jge
mov
ret
push
mov
cmp
addb
push
stos
or
leave
lock
xchg
sbb
in
inc
cmp
push
add
push
or
push
push
adc
shll
xor
inc
outsb
call
dec
popf
in
jns
push
inc
xor
push
lcall
in
add
push
fcomi
pop
sbb
xchg
les
push
test
mov
mov
cmp
lret
jl
js
hlt
jge
cmp
test
js
pop
bound
xor
shll
jl
sub
jo
fstpt
xor
and
popa
adc
dec
mov
and
daa
xor
sbb
xor
sbb
xor
pop
jne
xor
xor
test
adc
dec
lcall
cld
pop
adc
pop
popa
xchg
cmpsl
pushl
test
in
sub
mov
cmpb
sarb
mov
mov
aas
mov
and
inc
sub
rdmsr
xchg
xchg
sarb
test
mov
pop
xchg
mov
mov
xchg
jl
and
mov
cmp
jp
test
hlt
call
mov
adc
addb
aam
enter
sbb
pop
ret
mov
pop
lods
adc
sub
sub
or
sub
push
loopne
xchg
movsl
sub
adc
push
lret
mov
loope
cvtdq2ps
ja
mov
clc
xchg
test
cmp
xlat
fsts
lret
ja
add
add
or
add
rep
mov
sub
das
adcb
pop
or
jne
pop
icebp
push
adc
loop
dec
sbb
add
jae
adc
push
loope
pop
xlat
xor
sub
outsl
dec
xchg
ret
inc
clc
sub
jae
push
call
mov
incl
xor
mov
jle
call
sbb
jns
out
xor
mov
loop
inc
in
movsl
lret
rol
jmp
clc
pop
sbb
xor
inc
into
in
aam
insb
cmp
inc
popf
adc
or
pop
add
mov
dec
or
add
mov
cmp
inc
in
mov
mov
push
inc
inc
add
xchg
movsl
mov
or
stc
and
and
inc
movsl
xor
xor
aaa
and
push
add
inc
sub
lock
push
sbb
dec
out
pop
movsb
shrb
les
testb
inc
mov
js
add
xor
pushf
imul
pop
pop
insl
cmp
clc
and
movsb
cmpsl
decl
dec
dec
lock
add
cmpb
sbb
jge
lcall
or
gs
shll
not
and
aaa
int3
movsb
adc
inc
ret
fidivrl
mov
out
dec
jmp
jmp
test
sahf
jo
addb
jmp
fildl
pop
xchg
movsb
scas
cmp
pushf
ss
sbb
push
insl
and
push
cmc
scas
cmp
adc
sub
mov
int3
ficoms
dec
pop
in
imul
clc
sub
jb
jmp
xor
int
xchg
jo
imul
sbb
mov
je
std
jno
std
pop
fmull
and
jbe
out
xor
gs
mov
dec
sbb
adc
loopne
add
and
pop
push
add
add
pop
das
mov
rorb
mov
clc
data16
add
popf
xor
xor
popa
daa
subb
mov
mov
aam
clc
aaa
dec
imul
mov
aad
adc
push
shll
or
push
adc
or
cmp
enter
dec
nop
mov
or
movsl
mov
pop
xor
sbb
inc
lods
and
xor
inc
fs
and
push
mov
cs
sti
out
in
lcall
in
jge
fimuls
adc
jne
adc
addb
xchg
mov
call
sub
testb
or
cmp
jmp
aaa
fs
fnstcw
in
dec
xchg
push
jne
ss
mov
popa
adc
mov
add
inc
hlt
jl,pn
sahf
jne
cmp
xor
sbb
sub
movsl
insl
cmp
je
cmp
test
mov
xchg
clc
shll
mov
inc
pusha
sbb
push
xor
loop
fcomps
adcb
cwtl
pop
push
stc
sbb
fldt
xor
inc
xor
mov
lahf
inc
add
xor
xchg
test
mov
inc
mov
or
je
xlat
subl
mov
out
aas
out
shlb
pop
ljmp
dec
sbb
cwtl
bound
xchg
xchg
push
cmp
fmull
jns
cmp
cmp
push
xor
add
sub
inc
jbe
jbe
or
pop
jns
ljmp
adc
jns
adc
mov
cs
lcall
js
aaa
fwait
pop
add
jge
popa
sub
sub
mov
xor
add
outsb
sub
out
test
and
adc
je
jmp
in
xor
cmp
push
fs
lock
les
insb
iret
mov
aad
cs
int
cltd
inc
add
add
fstps
movups
clc
rcl
sbb
xor
add
pop
add
inc
das
scas
adc
mov
inc
aas
lcall
cld
or
iret
jl
roll
or
add
imul
ja
hlt
push
aas
push
dec
pop
inc
inc
sbb
imul
xchg
ret
mov
xchg
xor
adc
lahf
pop
pop
insb
push
mov
cs
mov
mov
les
add
pushf
pushf
pushf
fcompl
das
int3
and
les
fwait
pushf
adc
in
xor
xor
mov
inc
add
mov
pop
jmp
jmp
adc
or
loop
sub
push
ss
pop
push
dec
add
xor
shll
mov
pop
xchg
inc
aaa
out
inc
fwait
mov
sahf
cmp
sub
jecxz
or
push
bswap
cltd
mov
test
inc
cmpsl
jno
add
movsb
clc
xchg
push
or
xchg
lahf
xchg
popa
jg
pop
fwait
add
cmp
jne
ret
aad
add
and
das
testb
mov
pop
mov
and
fcoml
sub
addl
fmuls
mov
xchg
xor
mov
dec
mov
inc
mov
int3
sub
in
xchg
test
dec
popa
mov
push
dec
cmp
repz
xor
cmc
fldt
repnz
int
das
in
inc
pop
rolb
and
pop
scas
repnz
mov
inc
cmp
xor
sbb
leave
xor
ss
inc
xor
xor
sub
cmp
pop
test
mov
rep
xor
roll
rclb
mov
fisttps
mov
insl
mov
xchg
add
iret
and
movl
xor
add
in
loop
push
jo
cmp
mov
fcomps
mov
sbb
bswap
inc
pop
pop
add
mov
add
dec
and
and
cs
addr16
rcrb
addb
inc
jle
pop
jge
aaa
xor
addr16
sbb
push
adc
in
sbb
sub
das
mov
jbe
pop
ret
incb
push
mov
add
jmp
ja
inc
lea
ret
rclb
mov
call
cmp
cwtl
loope
mov
call
mov
in
pop
add
or
inc
sub
filds
js
sub
jo
dec
xor
lea
fs
or
push
cmp
movb
subl
test
xchg
push
cld
jno
adc
add
es
test
test
ja
sbb
scas
mov
pushf
or
inc
lods
mov
aas
aad
dec
rcrl
pop
mov
and
clc
jge
mov
jo
cs
inc
adc
cmp
sub
and
push
movsb
addl
or
sbb
dec
mov
flds
pusha
push
adc
adc
movsl
loope
sub
sbb
rclb
adc
jne
popf
fimull
or
sbb
jo
loope
mov
xchg
add
jl
adc
mov
inc
jge
dec
or
xchg
xor
xchg
es
inc
shr
dec
fwait
insl
addr16
push
push
testl
sub
dec
push
in
push
movsl
je
mov
cmp
mov
stos
inc
dec
adc
js
pop
fcoms
loopne
xor
movzwl
mov
in
in
gs
xor
mov
fs
cltd
inc
dec
cmp
lcall
loopne
call
cmp
fcoml
dec
or
fcoms
or
cmp
adc
das
aam
aam
xchg
mov
pop
dec
in
das
mov
sub
dec
mov
cmp
sbb
cmp
push
xor
lds
push
cmp
jb
mov
lcall
mov
cmp
icebp
adc
pop
cld
xchg
enter
jmp
sbb
aaa
push
imul
int3
pop
xor
jmp
push
aas
je
inc
sbb
add
sub
dec
pop
sub
stos
insb
or
fcomps
loopne
inc
cmp
mov
add
shl
cmpsl
push
or
jge
add
test
jne
xor
xchg
xchg
and
mov
and
mov
cmp
rcl
add
rcr
mov
adc
xchg
lock
insb
jb
dec
lret
sub
cld
pop
or
add
lret
imul
loope
jns
loopne
hlt
mov
pop
call
vmwrite
jmp
sub
mov
rolb
xchg
in
sbb
mov
pusha
aam
lock
mov
push
filds
lock
mov
subb
test
adc
adc
sbb
iret
sub
cmp
pop
push
or
xor
adc
je
outsb
leave
or
mov
adc
aad
daa
fwait
mov
or
leave
adc
test
sbb
jne
xchg
sbb
inc
mov
roll
loopne
sub
xor
cmp
mov
inc
dec
pop
xchg
fcmovnu
roll
aaa
dec
push
push
loope
push
adc
sahf
shlb
cmp
sbb
ret
sub
mov
aam
lock
das
push
cmp
push
ds
sub
in
hlt
dec
sarl
cmp
xor
aaa
cmp
movsl
xchg
ret
aas
test
mov
push
inc
nop
sbb
sub
add
fisttps
je
into
dec
ret
imul
in
or
shll
dec
fs
sbb
dec
mov
and
and
and
dec
leave
inc
out
jmp
xchg
movsl
push
inc
xlat
popa
fwait
je
decl
sbb
cmc
lcall
andl
addl
dec
and
std
sbb
push
pop
lock
bts
jmp
xchg
dec
push
int3
inc
movsl
mov
adc
cmp
mov
or
jp
mov
shlb
ret
inc
sahf
cwtl
sub
add
push
xchg
test
sti
popf
mov
fincstp
jmp
insl
cmp
push
add
je
or
xchg
add
pop
leave
or
imul
je
add
mov
cmp
lret
adc
loop
ja
sbb
test
push
push
adc
cs
lcall
lds
mov
cltd
enter
adc
lods
adc
stos
clc
sbb
push
cmc
subps
and
rcll
push
outsb
xchg
xchg
push
jne
dec
pop
push
lahf
mov
dec
int
or
xchg
adc
ficomps
inc
mov
sub
adc
cmpsl
dec
aaa
leave
imul
lods
f2xm1
shlb
dec
enter
mov
jp
push
push
jg
andl
cmp
sbb
inc
mov
mov
cmp
inc
js
push
lret
or
and
pop
mov
clc
and
mov
inc
sar
cltd
rorb
das
jge
add
sbb
mov
iret
rcl
xor
cmp
imul
sbbl
mov
mov
insl
shrl
orb
xor
pop
adc
dec
scas
pusha
mov
add
mov
outsb
xchg
inc
in
out
lds
mov
add
cmpsb
imul
mov
ds
mov
sbb
xlat
pop
in
std
or
xor
sub
inc
push
dec
push
add
pop
xchg
faddl
cmp
and
mov
or
mov
mov
in
and
xor
dec
insb
jns
pop
gs
jmp
mov
pop
jb
cmp
fadd
cmp
rorl
pop
push
jo
cmp
sub
cmp
or
js
dec
jmp
insb
push
mov
push
sbb
mov
inc
loope
pusha
into
clc
inc
adcl
lods
push
aaa
fiadds
mov
incl
jno
and
daa
push
sub
mov
xlat
imul
dec
push
add
int3
dec
adc
inc
add
popl
out
sbb
inc
sbb
mov
mov
outsl
sub
nop
cld
pop
in
jmp
jae
fiaddl
jnp
lret
jne
or
and
scas
cmc
xchg
stos
push
or
jg
add
push
aad
cltd
or
jo
cld
imul
sbb
pop
pop
inc
mov
pop
cmp
mov
sbb
lret
push
insl
push
lds
call
imul
push
jo
addr16
shll
stos
les
mov
inc
lret
sub
push
jmp
add
inc
sub
imul
mov
addr16
sub
xor
je
adc
push
cwtl
xor
repnz
jmp
pop
ret
fiadds
jo
jbe
mov
in
xchg
and
aam
pop
xor
ret
mov
inc
jecxz
ret
xor
sub
and
mov
jmp
and
es
xchg
jo
adc
loopne
repnz
add
pop
jnp
pop
mov
mull
loope
arpl
cld
movsl
sub
or
add
popa
cmp
vmovlps
xor
ret
ret
sub
leave
sbb
js
inc
cmp
jb
dec
jb
jecxz
add
test
add
dec
jmp
xor
and
pop
mov
jecxz,pn
ret
and
inc
pop
pop
aas
bound
mov
pop
call
xchg
and
shlb
movsb
mov
fists
xchg
out
inc
js
or
lods
fwait
pop
rcll
pop
lret
repnz
rorl
into
xchg
push
jo
mov
movsl
mov
dec
or
imul
repnz
sub
inc
sbb
dec
cmove
dec
sub
push
push
scas
shll
push
add
inc
mov
push
jb
push
dec
cmp
pop
jns
dec
mov
das
inc
add
cmp
or
test
or
shlb
shll
adcl
add
adc
cmp
or
add
fisubrl
add
pusha
add
sub
call
pop
adc
inc
pop
test
lods
aad
dec
dec
sub
mov
xchg
pop
xchg
daa
mov
mov
pusha
ds
ret
xor
lock
inc
test
flds
sti
or
rcl
add
mov
jno
fists
orb
lods
adc
daa
in
mov
fcoms
pop
dec
xor
xor
sbb
mov
call
sub
and
mov
sub
aas
sbb
xor
inc
ja
mov
and
addl
lret
lcall
pop
pop
and
push
ds
pop
je
rorb
mov
lock
push
xor
mov
mov
addr16
fsubl
xor
pop
pop
push
dec
minps
or
adc
add
pop
jo
scas
sbb
mov
fistpll
jae
mov
shrb
cld
cmp
daa
add
add
jo
cmp
and
call
ret
xchg
cld
loop
jmp
xchg
adc
clc
mov
sub
jg
mov
cwtl
jmp
push
loopne
pop
mov
pop
sbb
imul
ret
loopne
adc
mov
push
sbb
mov
into
shll
popa
loopne
mov
mov
scas
es
inc
or
cmpsl
mov
loope
xor
inc
and
in
sbb
adc
lea
pusha
xor
xlat
add
dec
wrmsr
add
stc
movsl
movsl
add
jb
pop
cmp
lock
xor
aam
nop
add
mov
inc
sbb
adc
xchg
leave
fadds
pop
imul
jg
pushf
test
cmp
jle
movsb
mov
sbb
sub
in
cli
xchg
add
adc
and
sub
das
lret
dec
or
dec
clc
xchg
sbb
sub
push
mov
add
add
mov
add
test
adc
inc
out
pop
jo
and
adc
lds
dec
sbb
xor
push
cwtl
dec
push
jp,pt
dec
sub
jne
mov
or
push
mov
in
fnstenv
or
xlat
les
mov
stos
adc
inc
enter
jnp
inc
or
nop
mov
xchg
subl
dec
inc
mov
bound
push
iret
sub
push
outsl
xor
out
and
mov
and
in
adc
jecxz
push
fisubrl
cmc
jno
addl
jmp
sub
daa
xlat
mov
loopne
pop
or
add
inc
in
ss
mov
push
data16
or
pop
stos
mov
arpl
xchg
xor
nopl
and
fwait
add
mov
lock
shrl
bound
clc
rorb
and
adcb
push
shl
dec
add
adc
xor
fistl
cmp
jg
sahf
mov
sub
mov
dec
dec
pushf
and
and
vmovhps
ja
jbe
mov
mov
arpl
mov
movsb
and
adc
outsl
in
rol
int3
xor
push
mov
aam
add
orb
sbb
inc
rorb
pop
mov
cmp
or
sub
aaa
sub
imul
pusha
pop
xor
clc
mov
addr16
daa
sti
and
call
and
int3
pop
push
orb
jmp
sbb
gs
dec
add
or
xor
sti
sub
dec
jge
inc
sbb
imul
lahf
pop
test
dec
cmp
fcmovnb
and
cmpb
fadd
int3
add
ret
push
xchg
add
and
les
les
aad
mov
sbb
nop
mov
push
shlb
jo
imul
or
and
sbb
popa
pop
dec
stos
and
push
lods
adc
mov
push
mov
stos
ret
cmp
dec
jns
lea
out
adc
cmp
sahf
sbb
mov
loopne
add
pop
inc
outsl
xor
xor
adc
sbb
sbb
and
in
leave
gs
fisttpl
sub
rolb
add
mov
ss
push
ret
sub
bound
adc
in
sbb
js
pop
sbb
subl
push
pop
ss
pop
pop
xor
xor
in
jns
outsl
cli
loopne
fmul
dec
pop
lcall
repnz
jne
mov
ljmp
or
pop
nop
sti
movsb
inc
adc
insl
cmp
or
test
ja
sahf
add
sub
add
push
aad
push
imul
das
add
clc
add
test
cltd
and
and
inc
bswap
and
xor
adc
or
adc
mov
or
xchg
ss
fdivs
imul
mov
jmp
xor
xor
in
fisubs
sub
sbb
adc
les
test
les
lahf
pop
cmpb
jg
mov
pop
sbb
or
mov
nop
lea
push
mov
adc
jg
mov
push
in
das
mov
add
add
xor
enter
lret
and
push
ja
and
push
cmp
pop
cli
xchg
mov
pop
mov
add
add
pop
inc
icebp
mov
je
add
inc
lock
shll
int
add
notb
jbe
xor
imul
nop
jo
lcall
test
cmp
pop
sbbl
movsb
lock
dec
cmp
adc
js
mov
cmp
nop
jle
sarl
inc
dec
jne
or
imul
cmp
mov
popf
sti
add
xor
test
pushf
mov
pop
adc
test
push
aam
ret
cld
add
fimull
xchg
idivl
lock
jno
fdivrs
mov
mov
adc
xchg
ret
sbbl
movsl
add
mov
xor
jge
fwait
add
mov
dec
lret
sub
jmp
add
sub
add
and
and
adc
sub
aas
push
call
push
es
adc
mov
sbb
and
jl
rolb
fcmovnbe
mov
fmul
and
iret
repnz
andl
arpl
aad
and
sbb
testl
xchg
xchg
xchg
sub
in
cmp
mov
xchg
sbb
popa
add
icebp
lret
fisttpl
inc
or
mov
jo
imul
pop
adc
inc
pop
fdivp
lea
adcl
inc
and
loop
sbb
outsl
push
push
xchg
cmp
cmpsl
mov
int
dec
sbb
fwait
and
dec
inc
insl
sub
arpl
adc
push
jns
add
data16
ficoml
or
or
mov
fidivrl
mov
xchg
mov
jnp
adc
inc
bound
and
cmp
jo
push
je
mov
subb
es
clc
inc
or
mov
test
dec
fwait
outsl
lea
sbb
mov
ret
addr16
adc
xchg
pushf
jne
xor
push
fisubl
add
cltd
and
and
lret
repz
or
mov
cmp
test
out
add
mov
mov
lock
aad
cmp
inc
test
cmp
jo
push
cwtl
or
cmp
adc
or
and
pop
add
xor
stos
cmp
push
jo
clc
xchg
fdivl
adc
add
pop
cli
cltd
adc
cmp
je
cmp
pop
mov
inc
cld
jl
mov
outsl
test
mov
push
sbb
test
push
adc
shll
lock
aas
adc
sbb
loopne
inc
popf
lcall
and
mulb
jno
lahf
or
jmp
xchg
inc
inc
and
in
cmp
dec
test
mov
pop
lret
lahf
dec
adc
dec
loopne
and
jbe
add
aam
dec
les
sub
imul
mov
mov
add
cli
and
jne
mov
out
imul
loope
and
xchg
stos
or
add
add
scas
test
or
jae
or
jnp
adc
imul
add
pop
lcall
push
aas
dec
push
pusha
push
fwait
cmpsb
imul
imul
data16
dec
jmp
adc
bnd
iret
xor
add
stc
xchg
aaa
mov
adc
int3
mov
imul
test
shlb
push
or
movsl
push
push
add
mov
mov
jns
jle
or
loop
cmp
test
das
and
jae
mov
sbb
repnz
into
testb
stc
and
and
andl
cmp
adc
jae
mov
cmp
dec
adc
adc
dec
js
jecxz
sub
jo
pusha
inc
repz
mov
sbb
mov
dec
shlb
test
add
sub
sub
xchg
int3
push
jno
and
jmp
xlat
xorl
push
sbb
test
mov
out
xchg
mov
add
leave
test
push
imul
or
jo
mov
imul
push
inc
cmp
mov
mov
daa
mov
dec
adc
fwait
cwtl
jge
fbstp
sub
ret
jns
repnz
hlt
sub
hlt
lea
pop
push
adc
in
xlat
cld
adcb
jns
xlat
setns
xchg
mov
jecxz
lock
pop
mov
test
dec
xchg
cld
clc
imul
and
lods
sub
add
xchg
js
in
jbe
repz
mov
add
add
add
mov
cmc
mov
jp
rcl
popl
push
xchg
dec
das
xor
add
mov
test
sub
subl
jnp
pushf
je
cmpl
mov
movl
mov
push
inc
sub
loopne
shl
dec
pop
and
or
into
or
push
mov
das
push
sub
xchg
pop
movsl
shlb
pop
into
mov
ja
push
push
cmp
add
jns
xchg
inc
or
sbb
push
adc
jno
popa
movsl
jns
lock
les
call
sub
inc
and
aaa
xchg
xorl
xchg
inc
cltd
sbb
popf
mov
jbe
addb
insl
iret
and
inc
adc
js
mov
lock
lods
and
add
sbb
cmp
insb
fistpll
xor
pop
xor
pop
xor
fmul
scas
ret
ret
xor
dec
add
arpl
out
xor
loop
fcom
pop
dec
push
inc
rorl
movsl
lret
xchg
xlat
sbb
pushf
daa
jbe
mov
jno
or
mov
push
jecxz
repnz
mov
add
xor
inc
cmp
ret
push
hlt
xor
lods
adc
inc
es
mov
xchg
inc
hlt
es
xor
or
pop
xor
inc
ja
pop
xor
mov
lea
cmpb
xchg
jnp
pusha
int
cmpb
das
fs
xor
push
enter
jge
and
sbb
xchg
push
jg
lock
cmp
cld
mov
sbb
adc
mov
push
jo
sti
add
dec
inc
ror
out
addl
dec
add
jbe
and
js
mov
jl
clc
mov
ret
sbb
mov
xchg
ja
add
jl
xor
int3
push
aad
out
stc
stc
mov
push
or
cwtl
pop
jmp
adc
pop
ds
addr16
or
ja
and
movsl
fildl
jp
pop
jnp
adc
mov
sbb
push
pop
loopne
leave
pop
outsl
dec
les
sahf
lea
int3
mov
bound
fnstcw
hlt
mov
pop
out
and
xor
pop
push
adc
and
jg
movsl
sbb
add
dec
cmp
push
loopne
imul
arpl
jnp
and
adc
nop
dec
or
jge
cmp
stc
and
push
orb
sub
or
je
mov
xchg
add
add
testb
mov
adc
dec
scas
aam
sahf
dec
xor
mov
dec
pop
and
adc
das
cmp
mov
fwait
dec
repnz
xor
movsl
fildl
xchg
lea
sbb
add
mov
mov
lahf
les
dec
mov
sbb
xchg
jne
fsubrs
add
and
mov
push
adc
int3
pop
popa
mov
call
add
jb
sub
fildll
sbb
push
fldlg2
ss
mov
addr16
xchg
jo
icebp
mov
in
hlt
hlt
mov
add
sbb
pop
push
shl
test
lahf
jmp
iret
dec
sbbb
in
in
inc
jmp
pop
mov
sbb
fnsave
xchg
es
xchg
inc
push
mov
mov
push
lock
into
cmpsl
mov
and
shrb
cmp
inc
lock
xor
shrb
dec
into
lods
outsb
popa
add
inc
and
mov
adc
sub
test
mov
sub
mov
arpl
mov
dec
inc
mov
pop
ja
cmpsl
andl
or
sub
outsb
pusha
or
frstor
mov
push
inc
cwtl
clc
mov
pop
sub
jo
leave
sbb
pusha
loopne
jl
mov
dec
push
ljmp
dec
jne
pop
or
or
mov
jbe
pop
pop
mov
pop
imul
jmp
dec
add
pop
push
rclb
mov
popf
pop
pop
push
jmp
sbbl
inc
loope
or
mov
cmp
test
pop
or
mov
xor
sbb
pusha
fstpt
movb
xchg
ljmp
adc
xor
subl
sub
jge
lods
fcmove
xchg
inc
adc
and
sar
loope
and
mov
push
scas
mov
fldcw
in
pop
mov
or
pop
aas
jno
pop
enter
cmp
add
sbbb
pop
add
xor
add
sbb
icebp
mov
pop
mov
mov
jno
and
or
push
rcrb
add
dec
jne
or
push
cmp
lock
loope
mov
pop
rolb
movb
arpl
dec
pop
add
inc
jbe
fdivrl
dec
xor
out
ss
jae
sbb
out
inc
dec
push
add
mov
jge
dec
add
mov
inc
dec
add
add
jb
inc
dec
adc
inc
lods
test
fdivs
sub
inc
and
add
add
xchg
xor
or
lcall
nop
mov
es
jns
mov
adc
fwait
cmp
fiaddl
pop
hlt
lahf
cld
lret
push
dec
xchg
jl
daa
cmpsl
xchg
dec
xchg
pop
xchg
imul
sbb
mov
xchg
mov
std
adc
fidivrl
xor
push
inc
das
sub
adc
lahf
inc
mov
or
mov
movb
ja
mov
inc
mov
adc
adcl
mov
inc
inc
mov
mov
inc
dec
lea
push
ljmp
es
add
jmp
xor
lock
testl
mov
or
adc
inc
mov
les
mov
je
jns
xchg
add
ljmp
push
sbb
mov
sub
insl
addb
pop
sbb
or
pushf
stos
dec
mov
pop
in
inc
shrb
push
xlat
add
xlat
das
insb
out
fsubs
xorb
or
pop
mov
mov
call
sub
pusha
cmp
shl
or
mov
add
jae
mov
jmp
ret
les
pop
fidivrl
xchg
aaa
lods
xorl
pop
add
loopne
into
mov
add
outsb
cmp
sahf
dec
movsl
out
add
es
icebp
repz
inc
mov
ja
push
push
push
and
test
dec
fimuls
sub
add
adc
sarl
dec
jle
cmp
lods
jmp
sbb
shlb
fidivl
pushf
adc
mov
xchg
xor
rcll
or
ljmp
sbb
mov
inc
pop
cld
mov
dec
lods
jmp
add
outsb
insb
xchg
add
addr16
jg
scas
fisttpll
imul
sub
in
mov
ret
loopne
nop
mov
or
and
lds
mov
pop
add
out
and
xor
mov
mov
jo
push
pop
dec
cld
jle
movlps
dec
int3
adc
sahf
cmp
or
sbb
call
test
mov
divl
inc
adcb
int
in
cli
mov
or
lea
sahf
push
cmpb
mov
push
and
push
push
push
ret
dec
cmp
inc
js
cmp
aaa
add
or
mov
jne
test
jmp
xchg
fcmovnb
fiadds
fisubrs
jo
xor
repnz
js
icebp
xchg
adc
add
dec
cmp
loopne
pushf
xor
xor
cmp
adc
adc
fwait
sbb
jg
movsl
cwtl
rcrb
or
je
test
hlt
inc
bound
inc
xchg
and
stc
mov
cmp
insb
lods
leave
ret
fs
jne
mov
pop
bound
dec
cmpsb
xchg
push
inc
or
mov
add
mov
mov
add
enter
push
fcmovu
sub
jo
inc
nop
pop
add
adc
jnp
mov
dec
adc
mov
adc
fnstcw
cmc
add
aad
xchg
xor
jne
sti
test
push
icebp
lea
enter
sbb
sub
inc
sbb
aam
xchg
mov
or
fdivs
addl
loope
sbb
sub
adc
ret
add
lock
sub
xor
add
or
jmp
fists
adc
inc
out
shll
or
adc
jge
jnp
aas
cmpb
inc
push
add
push
pop
or
loope
push
add
daa
das
or
fimull
xchg
add
clc
clc
add
jmp
xor
outsl
test
insb
jecxz
xchg
mov
jo
daa
dec
mov
jg
mov
addr16
cmp
jne
xor
icebp
hlt
sub
inc
push
mov
xor
push
rorl
adc
add
movsl
nop
and
push
adc
rol
xchg
outsb
fistl
sbb
shlb
mov
pop
xchg
push
cmp
imul
jle
xchg
xor
or
ljmp
jb
push
sbb
or
fs
stos
pusha
dec
clc
roll
fnsetpm(287
cmp
clc
punpcklwd
adcl
and
clc
fiaddl
dec
enter
testl
nop
add
or
inc
insb
scas
and
stc
dec
xchg
xchg
pusha
es
xor
xchg
nop
mov
adc
shll
sub
xchg
xchg
push
or
pop
loop
and
xchg
pop
cmp
mov
ljmp
jl
adc
add
test
loop
dec
fdivrl
cmp
cmp
in
xchg
sub
jne
adc
add
and
aas
js
icebp
ret
push
pushf
add
jns
cmc
xchg
pushaw
push
nop
cs
enter
sbb
bound
push
push
nop
clc
mov
sub
mov
xor
push
push
inc
jnp
or
xchg
pop
inc
fs
dec
adc
imul
sub
pop
sbb
adc
push
push
icebp
or
nop
je
jne
adc
jmp
inc
and
pop
popf
pop
xchg
ds
sub
xor
or
xchg
sbb
aad
push
dec
mov
test
sbb
inc
les
loop
out
adc
sub
pushw
test
pusha
or
sbb
or
pusha
sub
sbb
outsb
sbb
pusha
sub
push
jno
pop
cmp
inc
sub
or
insb
out
adc
inc
mov
sub
rolb
add
mov
sub
pop
mov
xchg
jmp
scas
dec
push
jo
push
rcll
fwait
or
xchg
jnp
sub
jo
adc
or
lret
sbb
js
xchg
test
push
xlat
add
xchg
fs
aad
xor
cld
and
cmp
push
aaa
leave
or
xchg
mov
in
dec
xor
nop
push
xchg
insb
shll
or
jmp
sub
add
xor
push
in
xchg
dec
imul
icebp
add
pop
jl
xchg
push
testl
sub
enter
loop
dec
rcll
jmp
and
inc
push
inc
lock
lock
loopne
cmp
aaa
in
xchg
push
add
xchg
jb
pop
xor
das
xor
add
sub
mov
nop
inc
pop
xchg
xlat
popl
std
mov
pop
xchg
xchg
cwtl
cmp
je
pop
or
stc
movsb
pop
xchg
cwtl
cmp
xchg
mov
jno
mov
pushf
or
daa
pop
push
mov
les
push
pop
ja
cltd
push
cwtl
mov
sub
mov
movsb
adc
jmp
ret
loope
add
push
push
fbld
outsb
or
cmpsb
mov
xchg
add
dec
jne
and
fs
test
fwait
xlat
xchg
loopne
add
dec
sbb
jb
shl
cwtl
push
fnstcw
jmp
pop
xor
in
cmp
adc
jo
cmp
leave
push
cmpsb
nop
inc
and
xchg
sub
jno
ret
push
pop
lret
dec
xor
jmp
push
mov
push
adc
rorl
mov
push
pop
push
bound
ret
les
xor
sub
sub
add
mov
xchg
push
inc
pop
ja
popa
sub
or
jno
mov
insl
inc
jp
orb
pop
dec
lods
in
jne
lcall
push
add
movsb
add
rcl
rol
pop
sbb
mov
inc
mov
test
push
not
popf
sbbl
sbb
es
sbb
jmp
or
lahf
mov
ja
cmp
jmp
add
rorl
movsb
mov
mov
dec
stos
inc
je
push
jg
pop
and
popa
sbb
loope
or
loop
dec
je
mov
jecxz
inc
adc
out
adc
popa
lock
jl
roll
sbb
fidivrs
sbb
sbb
ret
into
daa
sbb
pop
push
sahf
xchg
scas
iret
push
sbb
mov
push
movups
pushf
pop
jns
adc
addb
add
or
cli
faddl
sbb
xor
adc
jle
dec
sbb
lds
or
sbb
adc
and
or
sub
lret
arpl
out
test
sbb
add
xchg
es
xor
adc
inc
lahf
rol
xor
mov
jge
and
push
lret
movsl
test
push
xor
and
and
ret
xchg
mov
dec
or
and
outsb
jae
sbb
xchg
and
and
mov
aaa
fwait
mov
inc
sub
jmp
push
lock
xchg
clc
icebp
sbb
xor
sbb
adc
mov
rorl
insl
pop
adc
or
int3
sub
add
xor
orw
and
push
adc
adc
lcall
je,pn
mov
daa
cmp
aad
nop
mov
xor
aaa
ja
push
mov
sahf
xor
adc
sub
lock
add
hlt
rcrl
pop
mov
ja
fsubrl
arpl
loop
mov
cmp
pop
push
push
jge
pop
xor
and
int
int
bound
into
pop
aas
enter
mov
pushf
and
push
sbb
lretw
int3
push
cld
pop
lahf
andb
sub
mov
cwtl
sub
cmpl
es
xor
xchg
push
cmp
scas
pop
test
cmp
and
lods
jp
mov
xor
imul
pusha
in
push
addr16
add
in
das
push
arpl
lods
in
popf
decb
cmp
xchg
rcrb
es
adc
inc
inc
xor
ss
fsubrs
stos
adc
or
sub
jp
pop
inc
aam
lret
fisubl
nop
add
popf
in
pushf
testb
push
rcrb
leave
add
and
push
xor
cmc
push
hlt
std
adc
sub
pop
xchg
imul
and
xor
aaa
jge
push
sbb
add
sub
xchg
hlt
hlt
hlt
add
mov
push
and
rorb
rcrb
jno
add
dec
aas
lock
les
std
mov
rorb
fiadds
inc
arpl
xchg
test
test
and
xchg
inc
push
or
xchg
mov
inc
ja
cmp
xor
mov
insb
lea
rorb
pusha
pop
ds
jnp
je
push
jne
adc
add
fsubrs
mov
bound
sbb
es
pop
cmpsl
adc
movsb
cmovg
je
push
sbb
and
cmp
movsl
loope
fstpl
popa
adc
sub
dec
jne
mov
or
sysenter
cwtl
cmp
jbe
jae
icebp
jo
mov
add
add
jg
jl
lea
imul
inc
sbb
flds
bound
pop
xor
emms
outsl
dec
adc
daa
add
in
jmp
jge
pop
xlat
or
jno
loopne
loope
ja
imul
into
cmpsb
lahf
xlat
loopne
repnz
sbb
add
je
popf
das
xchg
cmp
ret
mov
mov
mov
ret
cmp
push
outsl
movl
sbb
sbb
ja
movsb
push
das
sub
cmp
pop
popl
mov
mov
mov
sub
xor
mov
pop
sub
das
jl
jo
adc
or
pop
xchg
xlat
adc
lds
bound
adc
add
and
and
jns
sarb
mov
ljmp
and
stc
cmp
jg
push
dec
cmp
sub
sbb
frstor
insl
fs
loope
push
and
dec
jmp
pop
shr
add
sbb
mov
repnz
dec
fnstcw
sbb
and
lock
jo
dec
jne
fisttps
lds
xor
rolb
jmp
ret
sbb
bound
adc
and
in
mov
or
jecxz
dec
inc
dec
rolb
add
jg
andb
pop
and
sub
hlt
cmpsb
lods
pusha
dec
lahf
es
es
fsts
xor
jno
test
add
mov
rolb
mov
dec
and
mov
mov
mov
ss
loope
cmp
stos
or
jmp
pusha
add
xchg
push
in
push
sbb
mov
or
add
jge
dec
jmp
stc
or
sbbb
movb
arpl
scas
xchg
adc
or
cmp
sti
aas
pusha
dec
mov
dec
or
push
dec
dec
mov
aas
or
invd
pop
cmpsl
loope
mov
pop
stc
divb
sbb
data16
add
icebp
fcomps
dec
add
mov
cmpsl
pushf
push
mov
test
sbb
xchg
adc
ret
add
rorl
mov
adc
loope
and
dec
test
call
xchg
push
or
scas
adc
adc
dec
cmovns
adc
sub
pop
jo
xchg
push
orl
sbb
lret
test
xchg
adc
lock
mov
aaa
data16
cmp
and
das
pop
xor
adcb
jg
mov
ret
mov
push
leave
clc
add
les
push
and
test
push
shll
inc
cmp
jns
xlat
adc
aam
daa
cmpl
jo
ret
popa
loop
rorb
in
cli
sub
and
lea
cmp
sbb
iret
sbb
pop
cli
mov
adc
cmp
inc
insb
ja
cld
out
pusha
push
flds
mov
xor
mov
ss
dec
xchg
mov
leave
dec
outsl
scas
out
in
lock
inc
je
add
sbb
sbb
pusha
push
add
sub
mov
ds
inc
pop
sub
enter
aas
aaa
cmp
dec
or
ret
push
push
lcall
xchg
sbb
notl
adcb
inc
inc
push
decb
sub
ja
ljmp
xor
insl
add
add
or
loope
ret
test
mov
push
inc
sti
out
xchg
cmp
sarl
add
adc
and
popa
pop
adc
xlat
cld
add
or
adc
outsl
movsb
ds
mov
mov
int
xor
dec
adc
push
xlat
add
dec
add
push
orb
adc
dec
or
xor
push
push
iret
xlat
sub
inc
xor
add
add
xchg
out
cmc
nop
pop
aad
pop
jl
mov
repnz
jge
lret
or
adc
mov
jl
scas
addb
xchg
mov
and
xor
xchg
and
sti
mov
dec
mov
lock
ljmp
enter
adc
add
or
faddl
push
fidivs
adc
pop
or
scas
lret
mov
pop
movl
fdivrs
jns
loopne
pop
movsb
jns
mov
lret
add
adc
iret
pmuludq
add
adc
inc
jne
inc
fiaddl
dec
cltd
scas
aaa
jg
fsub
adc
or
mov
lods
aad
mov
adc
pop
rolb
adc
jne
cltd
push
xor
cmpsb
lock
adc
outsl
add
mov
or
in
push
in
test
fcompl
push
inc
sbb
cld
push
mov
pop
loopne
mov
or
cmp
and
push
shlb
pop
and
adc
rcrl
in
out
adcb
or
ja
loope
adc
cwtl
push
loop
lcall
out
loopne
xchg
adc
add
sub
jnp
or
push
int
rcrl
rorb
mov
xlat
sbb
cmp
mov
gs
push
add
sbb
fld
mov
cmp
adc
add
jae
aam
and
ss
lock
test
cmp
jns
adc
or
sbb
hlt
clc
sahf
and
sub
mov
leave
mov
mov
inc
mov
and
movsb
pop
pop
je
cld
xchg
and
mov
xchg
push
mov
push
insb
or
aaa
or
iret
push
xor
adc
jp
das
or
adc
dec
aaa
xor
fdivrs
adc
and
inc
addr16
in
cltd
adc
stos
das
dec
test
jg
mov
sbb
xor
lea
popa
fimuls
cmp
movb
dec
loope
push
inc
loop
inc
add
pop
or
push
cmp
fisttpl
mov
mov
pop
add
jae
ret
or
popf
mov
test
push
sub
add
or
or
cli
mull
mov
jmp
mov
or
push
stos
dec
sti
shrb
jle
dec
jb
movsl
cmc
jne
pop
out
dec
lock
mov
xchg
mov
or
cmp
pop
xchg
dec
cmp
jnp
imul
mov
dec
in
dec
mov
push
fs
pop
jo
loopne
mov
cmp
ret
mov
in
mov
xor
mov
sub
sbb
mov
inc
les
push
push
into
jg
insb
add
imul
dec
js
jbe
and
adc
ret
mov
pop
push
ret
adc
mov
cmp
adc
mov
mov
push
icebp
xor
add
push
setne
and
sub
mov
movsl
idivl
push
cld
push
cmp
pop
or
pop
add
mov
jnp
push
jo
and
mov
pop
add
fidivl
xor
inc
daa
push
pop
es
addl
aas
or
aam
mov
mov
adc
popa
inc
into
rclb
xchg
stos
and
mov
mov
adc
push
add
test
das
stc
addb
push
jg
bound
cltd
in
or
pop
add
les
mov
icebp
andb
sub
xor
sbb
pusha
js
mov
pop
push
adc
adc
mov
xor
jl
pop
push
add
mov
fsts
dec
cwtl
adc
cld
pusha
adc
aas
xchg
dec
add
daa
dec
or
add
push
push
adc
mov
iret
adc
xor
outsl
pop
movsl
popa
or
arpl
mov
test
cmp
ds
dec
jl
inc
mov
pushf
and
arpl
push
mov
mov
cwtl
add
pop
mov
jp
push
sub
pop
xchg
cmc
xor
jne
fyl2x
pop
mov
cld
sub
ret
lret
jl
push
rolb
call
out
loopne
std
shl
add
mov
fsubrs
shl
fistpl
imul
hlt
inc
sbbl
adc
jecxz
dec
negb
adc
or
sbb
push
jo
loopne
mov
popa
ret
outsb
cld
je
or
mov
jne
jne
mov
xchg
addl
pop
cmp
loope
pushl
cmp
jge
mov
sbb
jne
jl
pop
scas
inc
jl
insb
lret
add
lcall
adc
pop
or
or
jbe
movsl
add
imul
add
and
fistl
int
add
nop
mov
inc
aas
arpl
and
pop
inc
mov
call
clc
enter
sub
ss
addr16
pop
pop
test
adc
pop
inc
inc
fcoml
sub
inc
sbb
pop
nop
or
loop
or
push
aas
mov
nopl
pop
aaa
sub
sbb
mov
loop
pop
mov
icebp
aas
mov
add
rolb
cmp
cs
push
add
dec
xor
sub
sub
mov
sbb
sub
addr16
mov
lcall
clc
jno
adc
filds
pushf
mov
lret
subb
adc
add
cmp
add
imul
pop
push
mov
scas
std
sub
sbb
push
inc
fsubs
pop
rol
or
adc
add
and
gs
fsubrl
push
sbb
push
mov
lea
and
or
xchg
ret
insl
repnz
or
addl
cmp
xor
cltd
nop
xor
dec
int
pop
pop
aaa
xor
jae
popl
imul
adc
cwtl
or
push
push
dec
xchg
aam
xlat
mov
test
ja
test
pop
rorb
xchg
or
inc
bound
into
ja
add
add
push
cmovns
push
xchg
test
test
lock
sbb
push
push
mov
jo
inc
adc
leave
addr16
cmp
movsb
push
mov
jbe
mov
fmulp
lmsw
add
sub
pop
or
inc
out
test
jne
fisubrl
iret
xorl
test
mov
imul
cmpsl
iret
jl
add
clc
add
and
stos
add
or
outsl
popl
test
xlat
or
pop
push
sbb
adc
jg
push
insl
add
std
add
fdivl
add
test
xor
js
adc
aaa
jl
pushf
adc
or
pop
add
add
mov
in
inc
add
add
pop
mov
mov
call
or
inc
dec
dec
subb
push
mov
repz
movsl
sahf
bsr
mov
adc
add
dec
leave
lds
mov
xor
or
mov
fsubrl
in
inc
repnz
mov
leave
inc
nop
bndldx
jg
fistps
mov
jae
repnz
add
inc
insb
insb
stos
mov
shrl
jmp
ss
sbb
lds
incl
mov
in
sub
fmull
mov
sub
mov
push
xchg
lcall
rorb
mov
mov
mov
cli
pushf
sbb
mov
flds
push
das
inc
pop
mov
mull
mov
dec
xchg
mov
popa
add
rclb
rolb
push
addb
cs
testb
xchg
mov
xchg
in
outsl
or
or
and
rolb
sbb
jb
jnp
cmpb
push
sbb
leave
or
push
push
pop
test
das
pop
dec
data16
or
fisubrs
rolb
daa
nop
push
lods
pop
mov
shlb
push
or
andl
pop
popf
aam
mov
pop
stc
test
pop
roll
nop
mov
xchg
insl
add
shlb
adc
leave
push
push
pop
adc
test
jne
test
inc
sbb
nop
inc
dec
fs
pop
sub
push
mov
dec
out
add
addr16
add
scas
pop
and
imul
mov
xor
push
je
sbb
test
xorb
das
push
push
cmpl
jne
adc
cwtl
add
sahf
adc
fistpl
push
mov
arpl
xchg
shll
inc
rolb
mov
inc
adcl
sub
push
push
popa
ss
mulps
push
andl
xchg
push
inc
ds
push
imul
adc
or
push
lcall
and
push
push
mov
mov
add
add
test
add
loope
cmp
mov
add
fmul
neg
sbb
and
popa
loopne
and
sbb
jb
inc
pop
mov
jge
jmp
sbb
xor
and
pop
add
or
pusha
fs
push
fimull
or
adc
adc
pop
and
addr16
les
rolb
cmp
lods
iret
pop
adc
lods
lods
aas
movl
mov
sti
lret
inc
sub
insl
inc
push
mov
pop
inc
jb
jne
sbb
dec
or
out
pusha
cmp
push
jae
lea
dec
movb
cmp
shrl
lock
andl
and
addl
add
popa
movsl
dec
dec
adc
inc
sub
mov
fmul
les
add
xor
xor
inc
popa
adc
ja
xor
jns
pop
shrb
cmp
lea
xlat
add
loopne
pop
or
or
adc
and
lcall
lock
inc
lea
sahf
rorb
jecxz
les
adc
or
mov
jg
or
push
mov
jmp
sahf
cli
dec
adc
mov
dec
sti
mov
adc
sbb
addr16
icebp
arpl
dec
je
sub
orb
sbb
add
pusha
popf
jg
pop
cmp
add
adc
adc
jl
adc
cmp
inc
ret
push
push
scas
in
clc
sub
bound
xor
enter
add
cmp
jle
popa
lsl
xor
repnz
mov
js
cs
jecxz
pop
orl
sub
dec
mov
test
in
add
js
faddl
mov
adc
mov
les
popf
cmp
test
outsb
outsb
stos
mov
jmp
add
add
movsb
and
jbe
mov
out
push
adc
pusha
mov
jmp
inc
or
int
dec
ljmp
push
dec
jg
lock
jge
sub
xor
inc
jb
jmp
pop
out
testl
je
or
sbb
sub
jmp
and
loop
or
gs
push
or
inc
add
adc
and
mov
add
icebp
inc
jmp
lds
and
arpl
adc
push
sub
mov
int3
dec
push
pusha
sarb
push
xchg
mov
enter
inc
push
and
aaa
xchg
sbb
hlt
push
pop
fldl
iretw
pop
fdivs
dec
loopne
sahf
andb
lea
or
push
ljmp
loopne
push
mov
arpl
hlt
int3
aam
pop
adc
inc
xchg
call
jbe
sub
aam
loopw
sbb
hlt
xchg
add
into
dec
sub
dec
inc
lret
test
aaa
pusha
adc
js
addl
cmc
ror
or
add
or
sbb
insb
stc
or
push
sub
dec
aam
jno
lahf
xor
adc
mov
jno
dec
movzwl
inc
push
adc
xor
lcall
pop
sarl
arpl
cld
or
push
xor
fadds
lret
mov
adcb
clc
imul
push
nop
lret
add
cmp
fmull
sbb
andnps
orl
nop
xchg
inc
clc
aas
mov
andl
jo
repnz
out
repnz
jns
lret
int3
int3
adc
sub
das
rcr
fwait
andl
imul
subb
push
sbb
enter
aaa
nop
test
pop
inc
inc
sbb
push
js
lret
push
xchg
sbb
sbb
lods
enter
out
int3
adc
sub
test
dec
neg
adc
xor
and
ja
adc
or
pop
addr16
xor
push
fistpl
in
sub
push
cmc
mov
lret
dec
mov
or
ficomps
and
cwtl
inc
dec
lods
sub
mov
push
pusha
or
jmp
ud2
or
mov
clc
or
inc
cmp
jge
and
mov
out
int
mov
inc
sbb
fmulp
in
jg
stc
xlat
into
add
mov
inc
lahf
leave
rclb
sarb
mov
cltd
test
jns
jns
mov
test
and
mov
jnp
adc
imul
push
inc
or
movsb
inc
adc
mov
xchg
push
sub
add
push
adc
jo
inc
pop
add
pop
cs
test
jecxz
adc
aas
add
pusha
sub
pop
add
push
das
xchg
mov
in
push
add
pop
fcompl
sti
push
sub
iret
rol
push
adc
pop
xchg
push
fsubs
daa
adc
iret
mov
shl
xor
or
out
push
test
xor
xchg
data16
jle
iret
inc
les
jns
jg
mov
popa
mov
cmp
mov
xlat
mov
ret
mov
aad
mov
cwtl
in
pop
cmp
xor
je
xchg
mov
ds
fmull
sub
into
fldenv
xchg
aam
inc
popa
loope
and
shl
les
sbb
in
pop
bound
ret
xlat
lock
call
mov
mov
iret
mov
mov
rolb
dec
adc
sub
scas
js
pop
ret
mov
les
sub
aas
pop
test
push
aam
mov
ret
add
or
add
cs
xor
add
addl
sub
cmpsb
stc
cmp
sbb
in
rclb
mov
xchg
lods
cmpsl
ret
lea
repz
movsl
test
pop
pop
jb
xlat
dec
pop
mov
movsb
sbb
push
add
pop
mov
mov
pop
test
mov
data16
mov
sub
add
enter
mov
dec
movsb
sub
xor
hlt
and
ret
lea
mov
push
push
repz
aam
daa
ret
sbb
lahf
ret
sbb
test
loopne
mov
xchg
push
xlat
or
pop
or
repz
imul
daa
sti
xchg
imul
dec
adc
and
inc
dec
cs
and
mov
daa
adc
scas
stos
jne
push
fisubl
lcall
cmp
push
sub
imul
in
jge
pusha
sbb
mov
pop
pop
pop
jne
ss
pop
pop
mov
ds
cmp
xor
xor
leave
ret
and
fadd
faddl
add
shlb
sbb
pop
mov
in
rcrb
and
daa
or
push
mov
lcall
out
and
mov
les
pop
ss
cld
dec
or
aam
scas
xor
and
arpl
xor
mov
sub
jmp
mov
or
jmp
push
gs
repnz
add
or
pop
inc
sub
push
les
aam
dec
or
jge
loopnew
test
lods
es
mov
fcompl
adc
js
jg
inc
mov
pop
jecxz
inc
push
cmp
jl
add
into
inc
pusha
mov
ret
jns
add
mov
jbe
mov
inc
fsubl
pop
clc
or
into
les
in
jl
xchg
aad
push
and
cli
and
sbb
int3
nop
fisttpl
shll
jb
or
xor
test
mov
mov
sub
sub
dec
mov
rcr
jmp
adc
lea
lahf
inc
es
xchg
adc
cmc
int
data16
shll
jl
jmp
mov
inc
push
pop
movb
pop
mov
stos
jnp
mov
or
fldenv
push
jae
inc
mov
and
pop
inc
inc
adc
pop
out
mov
dec
cmp
loop
repnz
inc
nop
das
in
add
insb
inc
jb
rolb
fs
mov
pop
add
adc
in
fstenv
push
jg
push
mov
adc
mov
push
add
xchg
adc
jl
rcrb
mov
add
stos
and
out
xchg
push
add
and
fsqrt
jnp
sarl
jne
mov
popa
add
cmp
jnp
test
cmpsl
pop
arpl
js
sbb
cmp
mov
cmp
jne
es
mov
addr16
loopne
jno
dec
in
xor
sbb
sbb
es
fdivs
xchg
in
testl
fstp
cmp
nop
jl
lcall
fstps
add
ret
or
ficompl
lods
test
xor
inc
fldt
popf
xor
lock
mov
rorb
and
and
sbb
aaa
ja
adc
inc
add
repnz
dec
jae
mov
clc
out
add
ljmp
jmp
in
test
adc
push
mov
sbb
inc
fisubrl
je
cltd
mov
and
add
cmp
xchg
in
cmp
fisttpl
pop
inc
cwtl
lret
out
in
incb
fcompl
add
mov
cmp
mov
fisttpll
add
sahf
gs
ficomps
or
repnz
in
or
sub
andl
iret
or
or
insl
jns
xchg
paddsb
out
loope
adc
out
repnz
nop
adc
dec
add
loop
adc
pop
sahf
aas
jge
add
mov
push
sbb
lds
or
sarl
sub
push
call
xor
inc
int
ds
fmuls
jl
push
or
in
and
jae
test
and
in
dec
mov
xchg
lret
add
fdivrs
and
cmp
sub
add
push
popa
sub
data16
lods
outsb
pop
std
xchg
nop
mov
movsl
pusha
andl
adc
mov
or
push
push
xor
fnstcw
jl
mov
mov
pop
scas
nop
adc
cmp
sbb
and
add
and
mov
push
cs
sub
stos
push
sbb
or
adc
mov
inc
push
or
jmp
xchg
mov
stos
mov
test
popa
pop
xor
inc
adc
xchg
leave
dec
pop
push
push
pop
in
push
scas
and
pop
sbbb
mov
xlat
mov
pop
xchg
out
sbb
push
xor
repz
sbbb
popa
xchg
add
and
enter
push
add
inc
sbb
imul
dec
hlt
push
adc
jne
mov
sub
sub
pop
fcoms
adc
jae
dec
or
jb
and
sbb
push
fmuls
or
lds
ljmp
pop
or
dec
imul
push
add
adc
adc
inc
jmp
adc
jnp
mov
and
add
add
add
pop
pop
arpl
mov
out
pmulhw
stc
or
addr16
dec
add
mov
mov
adc
pop
data16
pop
outsl
div
xorb
add
lcall
inc
cmp
out
sahf
or
in
iret
repnz
lar
lods
xchg
int
sub
ljmp
addr16
pop
ret
in
push
sub
inc
or
dec
and
out
push
hlt
mov
or
adc
inc
mov
int
and
out
and
nop
inc
cmc
and
adcb
pop
sub
das
nop
inc
leave
out
cli
adc
lock
dec
rorl
xchg
testl
mov
lret
mov
and
mov
call
fsubl
sbb
pop
jno
mov
inc
add
inc
sub
testl
jmp
sub
cmpb
or
xor
mov
add
ret
js
adc
pop
mov
add
stos
jmp
ds
xor
fcoms
leave
sub
or
ret
stc
inc
or
xchg
lods
dec
aaa
xchg
call
andl
out
or
xor
movsb
push
cmpsl
mov
popa
dec
push
xchg
push
les
inc
xlat
cld
int
sbb
in
faddl
pop
add
mov
mov
pop
sub
ret
lods
les
cmp
and
cmpsl
cltd
insb
sbb
push
mov
or
jecxz
fisttpll
mov
xchg
xchg
inc
and
jmp
jmp
dec
dec
cmpl
and
scas
loopne
add
push
arpl
xchg
fnstcw
mov
push
fmull
inc
in
push
in
dec
inc
and
in
jbe
cmpb
in
cmp
in
add
add
in
sbb
sub
test
inc
or
xchg
push
in
movsb
repnz
aam
jmp
ja
stos
inc
push
mov
out
or
jns
sbb
sub
shrd
xchg
mov
and
iret
fcom
ja
mov
adc
insb
sbb
fs
xor
pop
push
xor
mov
mov
or
loope
push
mov
hlt
fs
add
hlt
xchg
hlt
or
pop
loopne
inc
xchg
xlat
inc
loopne
sti
jno
test
add
adc
pop
pop
lock
cmp
adc
add
mov
add
test
into
xchg
dec
jmp
adc
xor
and
add
jne
xchg
gs
lds
add
and
dec
jns
and
and
je
fcoml
outsl
fsts
lret
cmp
jmp
enter
lock
cmp
dec
sbb
iret
dec
or
dec
mov
ljmp
add
pop
orl
xlat
push
icebp
nop
adc
sar
sbb
xchg
lock
das
add
ja
subl
push
fidivrl
or
pop
adc
sub
sbb
inc
sbbl
sub
out
mov
and
rorl
testb
notl
loop
cmp
rclb
pop
mov
cmpsb
inc
in
mov
mov
lock
insb
add
clc
fptan
dec
push
and
aas
push
fwait
gs
jmp
push
bnd
add
cwtl
es
iret
fdivr
add
add
pop
or
xchg
push
sub
dec
nop
ret
in
mov
sbb
mov
enter
hlt
or
mov
add
loopne
and
dec
repz
xor
add
das
jge
lret
inc
icebp
lock
inc
es
ret
outsl
and
jne
repnz
pop
sub
jne
das
mov
fcomp
je
loope
xor
mov
sub
add
mov
or
or
xor
int3
in
cmovle
decl
add
loopne
test
add
inc
pmuludq
cmp
fmulp
hlt
pusha
push
mov
inc
add
imul
movsb
scas
sbb
push
and
out
inc
or
test
add
and
mov
cmp
repnz
ret
add
fnstcw
push
or
sarb
mov
in
push
fildl
mov
lahf
mov
or
push
test
add
jne
inc
xchg
movsb
pop
nop
xor
lea
addl
and
das
enter
dec
inc
push
xor
inc
dec
pop
inc
imulb
cmpsb
cmp
imul
hlt
jae
pop
test
add
dec
dec
nop
inc
arpl
mov
push
aam
push
hlt
adc
pop
popa
jecxz
fidivl
push
mov
cmp
stos
and
je
out
dec
mov
fisubrl
pushf
xchg
enter
mov
adc
sub
push
inc
cs
imul
or
dec
xchg
mov
xor
scas
std
call
ss
hlt
cmpsl
and
sbb
insl
jbe
push
sbb
cltd
lret
add
in
sub
aam
popf
ffreep
rorl
inc
les
inc
push
in
push
push
cmp
sbb
and
jnp
dec
in
mov
cmpsb
test
in
and
cmp
cmp
arpl
mov
ret
xor
cld
pop
jo
add
jne
sub
sub
sbb
iret
in
stc
cmp
and
pop
jb
jne
pop
loopne
das
dec
adc
in
sti
stc
fwait
xor
ret
lock
int3
js
mov
stos
mov
push
sbb
push
cmp
add
call
lods
inc
push
in
ficoms
add
inc
dec
or
jnp
hlt
mov
shlb
and
test
cmpb
xchg
mov
mov
adc
cmp
push
inc
nop
xor
add
and
jmp
or
cmpsl
jmp
jg
nop
pop
sti
add
into
and
cli
mov
adc
adc
and
and
cli
test
or
xchg
mov
and
dec
push
mov
sub
pop
xor
adc
add
adc
ret
aaa
dec
pop
push
or
lods
lods
int3
sbb
sbbb
or
mov
addl
aam
or
sahf
mov
mov
mov
or
sub
or
pop
ss
mov
repz
and
cmp
test
push
imul
add
fildl
dec
clc
add
lds
ja
lock
push
adc
insb
dec
add
sbb
insl
testl
xchg
mov
or
popa
mov
and
pop
pop
inc
pop
rorb
fucomi
push
sub
or
seto
or
lods
scas
jmp
and
mov
adc
pop
dec
inc
pop
cmpsl
jl
add
inc
mov
push
add
lea
dec
rolb
jns
add
or
push
xorb
add
rcr
push
decb
or
mov
sub
jns
ljmp
sqrtps
xor
scas
inc
xlat
mov
or
add
push
sbb
leave
fldl
sub
xor
xchg
inc
filds
sbb
and
dec
push
sbb
add
fildl
jb
fisubs
sahf
add
cmpl
push
add
jns
enter
cmp
fs
inc
mov
or
nop
daa
orl
sbb
sti
or
cwtl
and
adc
add
aaa
pop
enter
push
and
jns
xchg
inc
lods
dec
loopne
sbb
lahf
sub
jae
or
cvttps2pi
push
daa
and
xor
imul
and
outsb
push
bound
adc
or
adc
fsubrl
insl
fimuls
jo
sbb
shrb
cmpsl
sub
inc
jae
add
jns
shll
rolb
cltd
xchg
mov
jl
or
mov
jne
pop
lret
ds
rclb
xchg
push
add
sbb
push
add
jnp
pusha
outsb
cmp
or
ret
push
outsl
jb
cmp
adc
jae
push
xor
popa
fs
mov
sub
sub
iret
jae
dec
cmpb
inc
add
data16
arpl
inc
pop
lock
xor
cltd
add
stos
mov
mov
faddl
jo
pusha
pop
orb
push
adc
leave
push
pop
mov
add
push
and
inc
cmp
pop
lds
inc
jge
jbe
or
or
cmp
push
aad
xchg
adc
sub
xchg
push
test
movsw
ja
or
and
mov
outsb
or
shll
fcompl
lds
ss
adc
add
cmp
jae
insb
cmpsb
pop
call
pop
fstl
jo
jno
test
push
inc
sbb
aaa
outsl
add
inc
insb
loope
inc
add
inc
mov
leave
ret
outsb
shrl
push
shrl
pop
push
dec
inc
jecxz
lods
fstps
sti
adcl
add
jl
mov
inc
xchg
stos
and
jne
sub
jo
adc
dec
rolb
push
xchg
mov
jno
push
lock
and
loope
jbe
addb
lret
push
outsb
test
xor
loope
or
push
mov
cmp
jo
shlb
iret
insl
je
outsb
jmp
xchg
sbb
jae
xor
inc
xor
push
int
pop
les
sbb
inc
xor
mov
nop
test
addr16
iret
xchg
inc
pop
sbb
mov
nop
mov
or
aas
pushf
aad
xlat
orl
inc
dec
insl
jbe
repnz
inc
cmpsb
or
fwait
imul
add
mov
mov
mov
pusha
lock
add
jb
cmpsl
lret
repnz
mov
cmp
cmp
jl
cmp
or
mov
or
cmp
sub
or
sbb
jnp
mov
inc
or
and
lea
pop
push
and
and
push
add
clc
mov
lods
in
add
fdiv
add
lods
add
or
adc
dec
loop
jne
mov
push
push
adc
adc
sbb
xor
add
sub
popf
add
push
jo
lods
add
mov
mov
adc
add
jmp
pusha
add
add
mov
rorb
jg
or
lods
lcall
and
add
or
mov
inc
daa
push
dec
sub
sbb
test
pop
dec
sbb
push
or
aad
push
test
xor
cmp
test
jo
pop
push
push
mov
mov
add
jmp
inc
ja
jbe
lock
sbb
jle
data16
sbb
lods
movb
adc
jmp
inc
mov
incl
push
aaa
jp
mov
rolb
cmpsb
das
jg
push
stos
or
push
loop
add
adc
add
cmpsl
out
lret
dec
push
add
repz
add
inc
mov
dec
jecxz
inc
data16
rolb
adc
xor
cmpsl
or
sahf
sarb
movb
mov
sub
adc
popa
sub
aam
cmpsl
aaa
add
sub
xor
pop
ds
and
lahf
sbb
inc
outsb
in
cli
add
mov
pop
cltd
das
pop
test
inc
sub
adc
add
and
movsb
xor
mov
cmpsb
pop
movsb
jmp
addr16
movups
fwait
les
jmp
and
shll
je
adc
test
add
xchg
test
jg
cmpsl
add
add
or
mov
subl
xchg
xchg
xor
leave
adc
push
lds
inc
cli
jmp
xchg
pop
push
and
cli
xor
sub
sahf
xchg
fadds
jbe
adc
cld
test
jo
inc
push
mov
leave
adc
lods
mov
pop
and
push
and
adc
adc
pop
or
push
js
or
fdivrl
sti
fnstcw
or
mov
and
adc
or
jmp
enter
cmpsb
mov
in
loope
inc
push
ss
fcmovne
adc
adc
inc
lods
mov
iret
dec
and
enter
int3
hlt
fsts
push
pop
push
inc
popa
out
out
add
inc
cmp
mov
mov
pop
sbb
inc
ljmp
or
shlb
mov
es
adc
sbb
adc
cmp
push
scas
inc
mov
enter
add
inc
dec
pop
dec
lods
mov
inc
inc
in
cmp
push
test
mov
enter
roll
adc
sub
mov
stos
mov
shlb
jmp
sbbl
mov
out
ret
orl
and
or
or
lahf
mov
lods
enter
imul
pop
or
sbb
mov
push
pusha
fnstsw
mov
jp
pop
pop
fstl
ds
cmpl
inc
push
add
add
or
out
aam
mov
bound
or
adc
cmp
cld
mov
dec
push
pusha
dec
fdivrl
xchg
out
hlt
hlt
cld
push
mov
sbb
bound
aam
rol
jo
test
mov
out
push
add
enter
dec
jnp
xchg
ror
adc
xchg
testb
pop
das
pop
movl
ja
sbb
dec
mov
and
mov
out
cs
push
inc
push
xor
dec
pop
sbb
pop
adc
pop
imul
lcall
inc
test
mov
jbe
add
or
inc
adc
push
inc
inc
mov
xchg
sub
push
push
jg
pusha
add
adc
inc
addr16
inc
or
dec
inc
cmp
rcr
mov
clts
ja
xchg
movsl
xor
adc
xor
and
inc
repnz
insb
and
loopne
dec
push
test
jae
lds
jo
push
dec
or
es
xchg
clc
int
loopne
inc
dec
movsb
xor
loopne
imul
cmpb
call
js
fwait
and
pop
pop
dec
mov
sub
inc
dec
movsb
mov
and
and
adc
aad
push
ficompl
sbb
jp
sbb
imul
pop
add
push
jno
addb
test
fwait
outsl
pop
xchg
push
push
add
andl
mov
pusha
pop
mov
and
xchg
rclb
adc
push
mov
or
xchg
mov
push
outsl
subl
or
jne
and
mov
stos
sbb
shlb
jno
xlat
test
ret
daa
xchg
std
push
sub
loope
pop
mov
sub
jb
je
dec
adc
adc
shll
and
mov
push
aaa
in
push
lods
add
das
fs
sub
jg
or
sbb
into
or
sbb
test
inc
jno
outsb
inc
dec
aaa
dec
pop
in
in
mov
add
mov
nop
rcrl
push
pop
push
mov
and
sbb
xor
sub
outsl
add
or
mov
cmp
dec
ja
ja
xorl
mov
adc
adc
out
dec
mov
daa
fisubrl
jbe
push
inc
pop
push
xor
cmp
add
data16
lods
push
add
jg
sbb
xor
pop
mov
jno
or
lret
scas
into
hlt
or
and
or
add
adc
or
jo
aad
fildll
into
aaa
xor
sub
sbb
and
push
add
sbb
jne
dec
rorl
add
xor
das
pop
push
lock
shll
fsubrs
aaa
lcall
add
in
add
xlat
jg
push
lea
pop
shrl
sbb
sub
mov
mov
out
xchg
fadd
hlt
add
adc
scas
pushf
xor
and
ret
mov
inc
call
aam
mov
test
lcall
in
rolb
fcoms
pop
dec
adc
dec
push
leave
jne
js
jno
enter
pop
xchg
movsb
xchg
out
xchg
aad
or
sbb
xchg
mov
fstpt
cmp
int3
lret
xor
pop
test
mov
pop
mov
mov
add
add
add
xchg
test
cltd
cmpsb
push
fwait
out
ret
jmp
shlb
inc
adc
push
mov
dec
enter
and
movsl
and
lock
sub
arpl
push
cmp
jbe
inc
and
sub
hlt
imul
or
nop
sti
inc
sub
dec
pop
sub
icebp
jmp
or
inc
dec
xor
mov
inc
xchg
push
pop
subl
inc
jne
xor
inc
popa
scas
sbb
or
andb
sub
movsb
cs
and
mov
aaa
and
and
push
aaa
sub
aad
ret
mov
xor
and
mov
and
sbb
cwtl
inc
and
xchg
push
push
mov
insb
sti
add
pusha
jecxz
icebp
sti
mov
pop
pop
add
aaa
xlat
rolb
jecxz
cli
jne
xchg
mov
add
gs
sub
and
or
pop
push
push
pop
adc
push
fidivrs
ljmp
insl
push
adcl
cmp
icebp
dec
daa
out
add
clc
xchg
adc
enter
and
lahf
or
inc
cmp
mov
enter
lock
pushf
push
loopne
imul
push
ja
and
and
ficompl
in
inc
xor
xchg
add
jb
jns
inc
popa
mov
insl
dec
enter
leave
cmp
xorb
and
sbb
cmp
xor
push
ret
inc
xor
inc
icebp
bound
dec
push
test
mov
aaa
dec
lahf
fadd
mov
loopne
push
fimull
push
push
cltd
rol
enter
cli
and
ret
rcrb
pusha
adcl
movsb
lahf
and
out
adc
and
add
sub
xchg
jl
sub
cmovae
ret
dec
sub
mov
add
inc
mov
jp
add
rorb
das
xor
xlat
inc
lods
cmp
xor
inc
cmp
mov
or
add
jns
jns
push
mov
stc
inc
xchg
fistpl
mov
sub
mov
cwtl
fs
icebp
mov
in
cmp
ds
pop
pop
es
pop
inc
sbb
mov
nop
jecxz
loop
in
add
addl
mov
inc
mov
cmp
xor
add
out
lcall
and
jo
lret
pop
lahf
push
pop
in
sub
loop
push
movsb
fistl
pop
mov
movsb
push
and
sbb
sbb
xor
fists
and
sub
mov
pop
hlt
sub
push
xor
dec
filds
aaa
sbb
das
call
mov
and
push
push
inc
js
xor
lcall
xchg
lock
sub
dec
or
dec
pop
push
lcall
movsl
and
mov
sbb
pop
pop
and
je
in
xchg
add
push
add
das
in
sub
pop
xchg
punpcklwd
into
add
js
fmul
fnstcw
xor
xor
addb
pop
mov
mov
mov
dec
adc
or
pop
add
nop
fadds
sbb
rcll
shlb
adc
adc
mov
add
adc
mov
fstpl
ret
mov
sub
sub
sub
lods
push
push
push
andb
sub
mov
adc
ss
add
xor
stc
xor
mov
inc
js
inc
xchg
inc
or
sbb
pushf
or
in
subl
or
pop
icebp
sub
pop
movsl
sbb
xor
out
mov
popa
inc
xor
adc
cmp
popa
loopne
in
sub
out
sub
sbb
inc
nop
xchg
sbb
dec
pop
xchg
jo
push
ljmp
sub
arpl
lret
push
and
push
popw
dec
push
jne
jb
push
adc
xor
ret
and
add
mov
or
fbld
inc
pop
cmp
mov
mov
sub
loope
jo
imul
pop
mov
and
shrb
add
das
cs
add
pop
pop
cmp
add
and
xlat
test
mov
xor
sbb
repz
inc
bound
and
imul
enter
das
xor
gs
nop
push
repnz
pop
xchg
addb
add
inc
and
xchg
adc
adc
dec
das
adc
movb
stos
test
xchg
push
inc
cltd
insb
aam
hlt
ja
enter
test
inc
into
lods
in
dec
xor
notl
outsb
rcrb
xor
and
loopne
push
ficomps
fsubs
lahf
push
clc
cmp
enter
dec
in
in
das
xor
xor
dec
cmpsb
sbb
inc
enter
fs
rcl
call
fwait
addr16
or
mov
inc
mov
push
adc
cmp
adc
mov
in
cli
rorb
and
xor
add
jmp
push
pop
stos
sbb
add
clc
mov
out
rol
test
xadd
xor
cmovns
dec
addr16
inc
cmp
xor
movsb
xchg
and
inc
xor
add
rorl
loop
ja
mul
stc
pushf
push
sarb
xor
and
add
sub
in
xor
cmp
push
mov
fs
jge
sbb
int3
mov
pop
push
xor
push
insl
or
inc
sbbl
inc
xor
test
mov
jl
test
movsb
fnstcw
mov
pop
pop
or
mov
imul
inc
sbb
push
pop
cltd
movsb
add
pushf
sub
push
push
add
jne
shlb
inc
bound
xchg
push
mov
or
sbb
or
lea
dec
add
sbb
mov
or
loopne
lret
inc
jecxz
cmp
sbb
add
adc
pop
sbb
jno
jecxz
mov
add
inc
inc
cmpsb
pop
pop
push
leave
xchg
cmp
push
mov
das
add
jb
cmp
jns
pop
outsb
addb
ja
outsb
shrb
push
xor
aaa
ficomps
sub
pop
repnz
cmp
inc
je
pop
repnz
inc
movsb
dec
rclb
sbb
dec
icebp
xchg
daa
sbb
jbe
repnz
pusha
push
jae
outsb
mov
mov
mov
aas
inc
stos
outsb
ja
inc
or
jb
jbe
push
xlat
inc
push
push
outsl
lcall
mov
ljmp
outsl
sbb
push
dec
pop
jnp
insl
dec
push
pop
je
lcall
jo
fs
bound
mov
dec
jb
mov
add
mov
inc
jns
jo
aad
insl
and
jmp
xchg
or
sbb
clc
fmuls
sbb
sti
shll
mov
sahf
push
dec
add
and
mov
sub
inc
mov
lea
sbb
add
add
fcom
int3
add
enter
sbb
and
loope
loope
jne
fisttpll
test
shl
mov
shlb
and
imul
jmp
das
pop
test
add
dec
push
jmp
rcrb
xorl
add
int3
dec
pop
out
cs
test
in
enter
std
jno
enter
push
add
jg
or
call
inc
inc
xchg
sbb
xor
mov
je
idivl
dec
cmp
je
lea
add
loop
les
insl
mov
mov
and
inc
add
or
and
sahf
inc
les
enter
out
xor
outsl
jo
sbb
add
jmp
inc
imul
cli
or
js
and
or
iret
rolb
fnop
or
lock
adc
xchg
xchg
mov
ds
xchg
sub
rcrb
and
or
rol
adc
lcall
adc
dec
push
push
add
or
fsubr
jnp
push
or
dec
or
xchg
aam
adc
and
push
add
call
ljmp
data16
cmp
jne
test
imul
divl
mov
mov
pop
mov
lea
loope
cmp
jo
xchg
xor
pusha
fadd
add
jge
sbbb
add
gs
add
repz
pop
sbb
shl
dec
add
sbb
insl
inc
stos
out
adc
mov
dec
sbb
push
push
jmp
sbb
xchg
lock
mov
je
jle
mov
push
js
aaa
jne
and
aas
pop
adc
test
inc
dec
out
push
and
rorl
bound
test
sub
sbb
push
inc
movsl
aad
mov
es
das
setp
or
push
loope
pop
call
cmc
clc
inc
shl
xchg
test
int3
sub
inc
mov
je
push
ret
add
pushf
stos
sub
add
inc
mov
and
pusha
in
mov
sahf
dec
xchg
in
outsl
push
cwtl
sub
xchg
jge
inc
ret
sbbb
sub
and
cmc
pop
out
push
popa
add
inc
addr16
lea
jne
js
pop
movsb
cmp
stos
fs
add
psrlw
in
push
or
or
cmp
lea
pop
jmp
jg
inc
jo
daa
fildl
divl
cld
movsl
inc
mov
add
jne
cmpb
jbe
arpl
mov
cli
or
out
je
aad
push
pop
sbb
outsb
nop
sar
and
cmp
rdtsc
dec
add
mov
ja
add
cmp
jg
lea
push
inc
aaa
sub
imul
repz
sbb
push
ja
cmp
cmp
sbb
push
mov
repnz
mov
clc
sbb
or
pop
fiaddl
inc
adc
or
imul
jg
bound
mov
mov
adc
inc
dec
mov
pop
pusha
sub
add
push
cmp
mov
jne
in
sub
lcall
pop
xchg
adc
test
jmp
xor
add
xchg
xor
enter
decl
insl
ljmp
jb
cmp
ja
jnp
loope
jbe
ss
push
push
jmp
pop
addl
and
or
adc
and
xlat
push
inc
addr16
jne
sub
jne
mov
lock
inc
jne
cmc
cmp
xchg
dec
jne
sub
stc
xor
xor
add
sub
cmp
mov
push
push
mov
adc
or
xor
fidivs
sbb
and
and
sbb
push
push
jbe
lock
bound
mov
lahf
fsubrs
or
add
pusha
adc
pushl
lea
dec
jecxz
sahf
dec
mov
cmp
push
loop
adcl
cmpsl
cmpsb
jo
sbb
xor
fisttpll
push
fildll
jbe
pop
mov
xlat
mov
popf
inc
test
adc
mov
fmuls
and
lods
testl
inc
or
xchg
xor
int3
pop
scas
repz
arpl
comiss
data16
mov
dec
adc
es
and
dec
ret
xchg
scas
cmpsb
hlt
cmpb
add
pusha
ret
loop
inc
xchg
adc
inc
outsb
sarb
rol
ret
fistpll
fcmovbe
mov
das
in
jne
push
lock
mov
xor
and
sbb
or
and
shrb
add
mov
inc
aas
loope
enter
pop
rorb
and
in
orl
call
xor
and
aam
xor
and
and
and
lods
orl
test
mov
and
and
and
and
pop
xor
add
and
in
push
push
pusha
mov
ss
push
test
add
add
jge
mov
cmp
dec
ficompl
sub
or
or
and
or
sub
and
pop
jbe
call
mov
movsb
xchg
and
dec
pop
inc
xchg
test
adc
push
call
mov
into
dec
jbe
sti
cltd
push
push
jl
lock
adc
push
xor
xor
repnz
cmpsb
jnp
mov
push
ficoml
dec
sub
fists
pushf
mov
or
or
and
lahf
andb
js
or
jb
lods
adc
mov
rcr
nop
addb
push
xchg
jne
sub
dec
loope
add
test
outsb
add
push
fsubrs
mov
lods
lea
sub
jo
xlat
adc
in
aas
add
push
jne
dec
pop
rorb
pop
sub
jecxz
call
sbb
add
jo
inc
ret
pop
sti
movsl
call
add
push
loope
in
jo
and
mov
sub
pmulhuw
mov
or
or
add
inc
stos
rorb
or
inc
leave
push
cmp
mov
mov
inc
outsl
pop
leave
add
test
loop
mov
addr16
adc
mov
pop
ja
insb
sub
sahf
or
data16
or
mov
xchg
mov
xor
mov
add
shll
or
sub
adcl
dec
sahf
push
jmp
sbb
leave
add
add
push
fwait
dec
cwtl
push
or
inc
imul
pop
cwtl
push
sub
add
push
pop
push
pop
add
or
andl
adc
lea
xor
arpl
es
xchg
sti
xchg
pop
les
std
cld
mov
push
inc
inc
icebp
adcb
rcrb
fisubrl
adc
imul
fimuls
test
pop
shl
out
mov
or
mov
jo
nop
push
fs
xor
es
dec
pusha
mov
sbb
xor
mov
lea
pop
enter
call
cwtl
pop
es
es
sub
xchg
inc
push
lods
lret
pop
popa
or
inc
cmp
add
inc
std
jmp
xchg
test
push
outsl
pop
cmp
and
xor
lods
or
in
jae
sbb
and
push
push
jae
ret
test
push
jnp
xor
jnp
or
and
pcmpgtb
mov
xlat
fcoms
shll
fwait
popa
aaa
roll
push
lcall
lcall
pop
jb
cmp
outsb
mov
mov
lods
movsl
addb
and
push
sbb
xchg
push
xor
add
mov
jecxz
fldlg2
repz
out
arpl
pop
add
xor
popf
push
into
cs
xchg
xchg
sbb
xor
add
loope
sarb
sbb
push
dec
cmp
movsb
icebp
dec
xchg
pop
adc
pop
pop
xchg
ja
rolb
sub
dec
mov
or
or
xlat
or
roll
and
pop
sbb
fsubs
and
inc
ret
jbe
jns
xor
and
cltd
dec
inc
mov
jo
ja
dec
cltd
add
lods
addr16
or
pop
sbb
insl
insb
mov
add
pop
addr16
cmp
push
add
iret
clc
push
push
dec
or
mov
push
mov
xchg
ret
insl
jmp
loopne
xor
lds
out
fcom
sub
stos
add
dec
sarb
inc
jl
or
lret
mov
inc
addb
pop
lock
dec
call
jecxz
pusha
aas
movb
inc
sbb
mov
or
cwtl
inc
and
adc
jb
add
jno
call
lret
syscall
dec
mov
inc
or
xchg
cmp
jb
test
dec
xor
mov
dec
mov
inc
sti
xchg
or
or
shrl
in
enter
mov
mov
add
imul
push
sbbl
jg
jmp
sbb
cmp
inc
cmovb
inc
inc
inc
or
enter
dec
xor
and
and
and
xor
xor
ss
enter
cmp
enter
cmp
and
and
and
and
es
enter
sub
enter
sub
and
and
adc
adc
push
or
enter
sbb
enter
sbb
and
and
add
add
push
or
enter
or
enter
or
and
inc
push
cmp
lock
icebp
repnz
sbb
hlt
cmc
testb
inc
testl
outsl
test
adc
decb
insb
or
scas
push
mov
or
imul
movsb
leave
inc
fmuls
and
xchg
test
lock
sbb
inc
dec
push
dec
sbb
push
cltd
test
pop
inc
mov
lock
push
or
mov
fs
cmp
fadd
insl
popa
pop
pop
sbbb
outsb
je
imul
xor
jo
test
push
xchg
stos
push
mov
gs
pop
mov
adc
sbb
faddl
or
outsl
cs
pusha
push
xchg
outsl
aas
cld
add
jb
fistl
pop
jnp
pop
adc
pushw
push
jb
outsl
data16
mov
jbe
scas
fs
and
or
push
gs
dec
adc
es
and
push
cli
mov
jl
data16
dec
scas
jge
test
mov
mov
sub
inc
call
xchg
push
les
leave
outsl
int
mov
jae
nop
push
mov
mov
call
or
in
sub
add
cmovb
addr16
sbb
or
nop
and
popf
cmp
orb
js
mov
jecxz
dec
adc
and
or
rcrb
adc
in
inc
mov
mov
inc
clc
mov
rorl
add
mov
mov
das
int3
pop
jo
jbe
push
jo
jae
add
sbb
dec
ficoml
or
push
outsl
add
addr16
outsb
jae
icebp
popf
inc
aaa
or
mov
inc
insb
pop
inc
mov
mov
pop
push
push
add
or
in
sar
sub
lods
imul
cmp
mov
setae
je
pop
fcomip
mov
inc
jns
sbb
or
fdivs
cmp
dec
imul
mov
cwtl
fsts
xor
or
adc
ds
shl
or
adc
jle
ja
and
jb
adc
pusha
mov
dec
loopne
mov
jnp
in
or
mov
adc
inc
je
adc
jb
fisttpl
xor
test
dec
push
add
loopne
mov
or
or
push
repnz
fadd
mov
inc
imul
pop
inc
outsb
dec
jae
mov
and
aas
push
push
or
or
lret
add
jle
add
xlat
mov
push
jo
movsl
mov
dec
dec
add
fists
xlat
scas
test
adc
jo
hlt
cs
das
movsb
and
insl
aaa
std
pushf
xor
mov
inc
dec
pop
aaa
cmc
or
dec
loopne
dec
adc
lea
adc
push
sbb
enter
push
push
or
and
lock
and
es
mov
aas
cld
adc
ret
and
xchg
sarb
dec
dec
adc
mov
or
adc
rcll
inc
dec
add
jb
ret
xor
ljmp
xor
sahf
fimull
cmp
popa
mov
pop
mov
frstor
rcrl
cmp
in
pop
js
mov
lods
in
push
mov
and
pop
adc
cmp
push
rolb
mov
or
sbb
mov
push
adc
and
mov
cmpsl
inc
xchg
xor
out
jbe
shrl
ret
pop
je
addb
daa
or
lahf
inc
sbb
and
pop
push
jo
push
and
int3
and
add
jl
sbb
inc
jb
aam
or
inc
cmpsl
dec
pop
add
jns
inc
adc
add
iret
add
and
add
xchg
add
out
jle
add
and
pop
pop
leave
dec
adc
cmp
ss
daa
and
mov
jo
scas
pop
scas
jecxz
mov
in
or
stos
push
pop
shrl
cwtl
jo
pop
dec
orb
or
enter
ja
inc
push
aas
rcr
sub
sti
cmp
les
xchg
or
lock
push
lods
cmp
cmp
or
add
inc
dec
mov
jnp
add
push
push
leave
or
dec
push
lret
ss
movsl
int3
cmp
xchg
add
add
lcall
or
or
push
dec
out
pop
dec
pop
scas
pop
adc
or
jb
jb
nop
mov
repz
cmp
pop
adc
pop
ja
sbb
jno
inc
pop
dec
or
mov
xchg
add
xchg
push
dec
inc
push
test
or
push
jg
lods
es
ja
push
sbb
adc
enter
add
nop
adc
daa
pop
and
xchg
or
pop
outsl
add
insb
in
inc
push
leave
add
cmp
in
cmp
test
insb
or
push
leave
pop
test
pop
pop
scas
dec
sahf
push
bound
ja
loopne
pop
pop
leave
mov
ss
push
pushf
rclb
or
pop
imul
test
mov
add
fwait
lret
ficompl
jl
loop
fbstp
push
pop
insl
xchg
and
or
lahf
adc
leave
les
sbb
push
ret
jecxz
test
push
cs
pop
adc
xchg
xchg
pushf
mov
lret
in
int3
and
leave
xchg
pop
in
pop
sbb
pop
push
push
cmp
enter
mov
sbbb
int3
and
or
and
pop
and
repnz
int
xchg
movsb
add
int
xor
mov
cmp
in
ss
out
mov
add
inc
mov
sbbb
inc
pop
rorl
sub
mov
push
cmp
sahf
adc
enter
rol
mov
insb
or
or
jne
or
mov
mov
jb
mov
xchg
inc
popa
sbb
inc
add
mov
insb
cmpb
sbb
or
inc
cltd
cltd
pop
adc
in
inc
xchg
ja
add
or
add
add
fsubrs
loope
inc
mov
pusha
sbb
outsl
xchg
sbb
imul
stc
aad
insb
add
jb
sbb
cli
ss
shll
es
mov
inc
cwtl
fsubl
and
dec
or
ss
sbb
add
jecxz
inc
xchg
imul
mov
push
xchg
inc
sbb
jae
sbb
push
fchs
xchg
and
push
pop
insl
push
rorb
inc
aaa
xchg
subb
adc
mov
xchg
mov
jge
push
mov
sbb
or
jnp
jo
or
pop
adc
push
mov
in
movsl
aaa
popa
insb
incl
insb
jo
in
das
cmp
lcall
in
add
push
or
aam
add
pop
add
sub
add
or
adc
test
and
push
add
cmpsb
and
dec
xor
xchg
bswap
add
lret
mov
xchg
xchg
or
setle
cmp
adc
adc
sub
mov
adc
adc
sub
sub
adc
push
pop
mov
outsl
iret
sbb
dec
imul
repnz
sbb
sbb
sbb
xchg
fldcw
sbb
pop
lret
mov
jnp
jle
movsb
and
and
jns
imul
pop
and
das
and
insb
into
and
fwait
dec
cmp
insl
dec
push
test
or
pop
lret
orl
add
arpl
out
or
push
lds
push
aam
pop
xor
sub
pop
add
xor
imul
imul
or
cmp
pushw
or
add
push
ror
or
imul
sbb
push
popf
fmuls
add
add
pop
xlat
daa
rolb
push
data16
add
jo
daa
dec
fwait
mov
gs
dec
mov
arpl
mov
in
sub
adc
ss
mov
sarl
or
or
or
shrl
push
jge
dec
pop
add
push
xchg
imul
xorb
mov
mov
jns
pop
fs
xchg
rorb
adc
cmpsb
inc
nop
fcmove
mov
mov
stc
mov
or
mov
pusha
and
je
je
xor
push
or
or
mov
iret
push
pop
ss
add
and
andl
bound
je
mov
and
or
lea
outsl
outsl
or
shlb
or
rorb
lahf
cmp
push
or
add
sahf
jne
mov
cld
popa
hlt
add
test
mov
pushf
push
dec
outsl
jbe
mov
jo
aas
push
aam
push
lods
pop
push
icebp
jns
repz
mov
lahf
cli
stc
mov
or
jp
adc
push
xchg
jl
les
or
insb
ja
xor
test
or
loopne
daa
aam
loope
inc
jno
jg
insl
jno
add
mov
xor
orb
add
cmp
jb
xor
dec
shl
add
out
jbe
in
pop
popf
inc
jne
inc
test
clc
addl
mov
and
inc
in
or
xchg
and
push
sbb
nop
cltd
sub
sub
and
out
push
pop
push
inc
cltd
loopne
lcall
repz
mov
test
dec
hlt
pop
and
mov
xchg
fsts
outsl
inc
push
sbb
dec
fimuls
or
pop
jo
mov
adc
or
mov
rorb
loope
shl
addr16
insb
sub
es
addr16
sub
rcrb
mov
ja
pop
scas
aam
inc
ror
pop
outsb
daa
daa
daa
dec
hlt
or
js
lds
xor
outsb
sub
or
and
pop
pop
cwtl
movsb
dec
mov
ret
and
or
sbb
stos
xchg
andl
xorb
ret
and
rorl
lods
lcall
subl
adc
mov
push
or
mov
and
outsl
jo
pop
sti
jl
jnp
pop
jno
mov
jb
pop
adcb
popa
adcb
ja
in
and
dec
cwtl
pop
add
xchg
dec
sarl
sub
int3
aad
jo
jae
xlat
sbb
fadds
mov
fstps
sbb
dec
rcrl
push
mov
out
push
xor
push
push
fsubrl
fisttps
clc
inc
jno
adc
test
inc
dec
push
or
dec
call
inc
add
add
mov
dec
mov
adc
jle
ret
dec
and
or
add
adc
and
jb
jb
jb
dec
push
out
out
pop
dec
jae
dec
je
dec
je
dec
out
jns
shlb
stos
jne
pop
adc
movlps
inc
adc
aam
iret
mov
adc
pop
fisubs
mull
js
nopl
addr16
sbb
sbb
int
xchg
addr16
sbb
pop
sahf
in
pop
push
data16
in
and
and
inc
cmp
dec
jnp
dec
pop
jns
mov
mov
mov
pop
leave
or
je
and
fs
cwtl
rcl
jnp
and
in
shrb
mov
add
inc
rolb
push
ror
jnp
xor
nop
rol
rcll
or
or
out
inc
sub
jnp
sub
rorl
xchg
inc
jb
inc
jo
mov
leave
or
sbb
mov
sarb
dec
push
and
fadds
mov
enter
fmuls
and
xchg
mov
mov
or
inc
fcomp
das
xchg
test
or
fsts
lods
add
xchg
push
add
mov
cmpb
inc
push
enter
adc
push
xchg
cmp
pop
fimull
mov
enter
jnp
fistpl
shrb
nop
adc
or
test
in
push
sbbl
fcmovnbe
jnp
jns
mov
mov
mov
mov
lcall
test
or
lods
dec
cmp
mov
scas
inc
orb
ficomps
xor
movsb
jnp
loope
rcl
int3
scas
or
pushf
ret
ja
xor
in
inc
and
loope
or
mov
and
add
jl
jnp
or
daa
in
jl
xchg
rcrb
push
nop
lock
out
addr16
in
push
dec
sbb
addr16
lock
idivl
jo
mov
int3
adc
or
or
sbb
adc
xchg
les
mov
push
add
xchg
ret
or
inc
cmc
or
add
or
ja
enter
adc
push
cmc
inc
adc
rclb
orl
inc
push
sbb
inc
adc
mov
mov
xlat
imul
jne
std
imul
out
push
cli
aad
inc
rolb
ds
mov
xchg
movb
sbb
nop
or
in
roll
add
jge
push
flds
mov
notb
pop
test
sub
mov
push
cmp
pop
jle
push
xor
repz
pop
jg
mov
shrl
mov
pusha
or
inc
adc
add
in
add
dec
aaa
testb
out
outsb
in
adc
notl
cs
test
mov
adc
mov
push
sub
add
and
adc
lods
push
mov
insl
and
imul
add
js
rolb
or
add
inc
sub
xchg
inc
adc
test
add
repz
dec
jg
clc
repz
andb
andb
lret
das
hlt
sbb
adc
lret
pop
jno
xor
jbe
hlt
or
mov
cmc
adc
sub
cmp
addb
add
outsl
or
mov
fildl
out
adc
dec
add
test
repnz
jle
loope
mov
bound
and
pop
mov
pop
jb
adc
mov
sbbl
dec
jns
sbbb
call
ret
lahf
inc
divb
stc
sbb
xor
sub
int
mov
add
add
cmpsb
clc
add
add
add
pushf
or
js
or
xchg
mov
out
inc
pop
enter
fsts
lods
or
add
xchg
fiadds
leave
leave
leave
jae
mov
aad
dec
out
dec
add
imul
mov
fadds
mov
imul
jmp
cmp
pop
jg
adc
inc
add
and
sub
inc
flds
xlat
xchg
or
pushf
xor
inc
movsb
movsb
inc
cltd
add
push
inc
inc
sbb
dec
mov
lods
add
jno
dec
int
xor
adc
add
arpl
cmpsl
mov
adc
inc
mov
dec
inc
mov
testb
clc
ud2
adc
fdivs
sahf
popa
push
outsl
orb
sarl
pop
daa
popa
fadds
jns
test
test
lcall
mov
cmc
insl
popa
adc
add
xchg
out
and
pop
pop
add
loopne
fistl
or
rolb
movsb
xchg
shr
cmovne
mov
pop
mov
scas
movsb
add
popa
fsubs
or
jae
mov
xchg
xor
pop
inc
nop
daa
ret
dec
xchg
psrlq
jb
inc
jmp
pop
mov
fs
jbe
xchg
xrelease
cmp
js
or
push
add
arpl
push
push
xchg
mov
push
aam
and
push
or
clts
or
ja
leave
add
lock
ja
mov
push
repnz
push
or
mov
in
shll
add
or
xchg
or
add
or
push
enter
jae
mov
xor
sbb
mov
les
mov
andl
out
push
xor
or
enter
rclb
loope
mov
add
call
sbb
popf
cwtl
ret
shll
jnp
mov
lods
in
adc
xchg
xor
xor
sbb
into
pop
imul
or
sbb
or
repnz
cmp
cmpsl
jmp
add
cwtl
cmp
mov
adc
mov
icebp
and
test
notb
or
jno
cmp
adcb
ret
fcomps
test
push
cmpsb
xor
mov
push
lock
add
arpl
or
cmp
iret
pushf
popa
mov
popa
data16
xor
in
es
and
stc
or
mov
cwtl
pop
mov
mov
jo,pt
push
adc
add
jecxz
ss
sti
iret
fwait
adc
enter
out
lea
insb
lcall
shld
subl
das
sub
lds
xor
bswap
mov
dec
les
xor
add
adcb
add
mov
lret
fistl
mov
aad
ljmp
fmuls
adc
test
xor
out
cmp
pop
pop
daa
shlb
ljmp
or
mov
test
and
or
imull
add
jmp
mov
sbbl
adc
test
cmp
imul
or
adcb
sub
push
lcall
iret
popl
loopne
or
outsb
cmp
iret
jmp
fs
mov
sbb
stos
imul
adc
adc
in
or
xlat
insl
pusha
dec
or
ret
les
sub
out
mov
sbb
nop
fs
fsubl
or
or
nop
in
mov
xchg
in
sub
sub
push
adc
in
ds
adc
or
adc
rolb
lods
push
push
paddusb
pop
mov
sbb
movb
sbb
sbb
je
xor
push
dec
adc
mov
insl
cmpsb
inc
sahf
and
pop
and
adc
jno
or
call
outsb
cmpsl
sbb
dec
test
jno
xchg
sahf
mov
mov
jns
ja
dec
push
mov
enter
sbb
cmp
outsl
xchg
sti
pop
and
or
adc
dec
leave
or
inc
adc
and
push
insb
dec
das
adc
call
push
mov
cmpsb
jmp
imul
js
pop
push
jecxz
jmp
sub
call
and
xchg
inc
mov
push
xchg
inc
in
lods
pop
adc
rol
subl
cmp
shl
clc
loopne
jmp
cli
pop
test
inc
dec
pop
ljmp
leave
cmp
jne
pop
xchg
or
enter
sub
test
loop
imul
cwtl
mov
inc
adc
xchg
std
sub
test
pop
push
test
mov
adc
mov
and
push
movsl
je
shlb
fcmovnbe
or
xor
inc
and
or
int3
inc
pop
inc
xor
das
pop
scas
mov
loopne
pop
add
es
push
xchg
cmpsb
js
sbb
inc
daa
test
push
sub
sahf
mov
and
push
inc
sub
je
push
scas
in
orl
ljmp
lock
push
ds
fwait
lea
jo
or
add
jno
xchg
pop
pop
aad
xor
mov
nop
sbb
sti
daa
test
sbb
add
xchg
jne
sti
mov
enter
or
adc
out
aas
or
fisubl
mov
inc
inc
jg
dec
mov
or
insl
jae
aad
or
imul
adc
pop
sub
fs
xor
xor
adc
cwtl
jp
jecxz
cmpb
inc
insb
jo
popa
add
ret
or
lahf
fstl
movlps
push
je
mov
aas
imul
lcall
adcb
clc
lock
cmp
jne
pop
or
pop
cwtl
mov
ja
test
cltd
sbb
ja
cmp
jns
jo
xor
cltd
in
xor
xor
push
test
ja
and
inc
ja
jl
ja
cld
pop
inc
lods
dec
aam
je
add
imul
inc
fmuls
loope
fildl
mov
inc
and
lods
std
subb
adc
or
pop
lea
sub
cmp
xor
sub
popa
xor
mov
xor
xchg
push
jae
xor
or
push
dec
mov
xchg
xor
adc
lds
mov
push
mov
inc
adc
adc
das
rclb
js
mov
lcall
bound
cmovnp
dec
mov
mov
jecxz
pushf
and
push
pop
or
enter
jmp
sahf
ja
add
sbb
dec
out
in
aam
sahf
sub
pop
lds
repnz
ss
xor
xorb
test
mov
pop
leave
xor
sahf
cmpb
lock
adc
sub
aam
inc
adcl
cmp
mov
mov
xor
cmp
sahf
addb
sub
test
call
add
mov
adc
adc
inc
dec
dec
and
mov
xor
adc
popa
dec
xchg
iret
push
cs
nop
outsl
pop
lahf
inc
gs
sbb
addb
dec
pop
xchg
jno
outsl
mov
sbb
and
adc
push
xor
andb
push
inc
push
mov
adc
push
cwtl
test
mov
test
in
add
cmpb
shlb
mov
add
icebp
sarb
jl
sbb
jae
dec
in
add
or
cs
jnp
dec
mov
inc
outsb
push
sub
inc
push
lret
or
inc
lods
int3
nop
loopne
ja
decb
aam
int
mov
or
and
adc
pop
cmc
xor
test
or
cltd
imul
and
clc
jo
mov
movsl
mov
push
dec
dec
push
sub
bound
sub
fists
cmp
rclb
jne
rcrb
mov
push
mov
inc
loop
in
ds
cmc
mov
mov
and
or
adc
push
inc
mov
push
pushf
push
int3
pop
push
js
loope
shrb
jmp
pop
or
sahf
test
xchg
lahf
adc
add
data16
push
fisubl
outsb
daa
sbb
xlat
enter
in
mov
mov
iret
aad
daa
in
int3
cmpsb
cmp
mov
in
iret
mov
add
push
sbb
jb
and
pop
les
xor
mov
push
dec
xchg
push
pop
je
mov
lcall
dec
xchg
imul
push
pop
adc
pusha
push
mov
pushf
and
mov
nop
jecxz
in
ret
or
cmc
or
pop
mov
das
daa
les
fwait
pop
mov
and
movsb
sahf
int3
xchg
and
add
and
rorl
fiadds
nop
pop
repnz
cmpsb
xor
cmp
jns
pop
cmpsb
xor
push
cmpsb
xor
push
sbb
push
outsl
ret
shrl
inc
push
and
lahf
pop
xor
xor
cmp
repnz
mov
cmp
adc
ret
cmp
xchg
push
pop
add
nop
pop
and
pusha
inc
pop
and
cmpsb
xor
and
push
test
xor
in
dec
dec
test
xor
int3
pop
pop
test
popa
orb
arpl
cmpsb
pop
scas
roll
mov
cmpsb
test
push
movsb
pop
arpl
xchg
push
fdivrp
std
outsl
roll
inc
insl
jo
push
outsb
addr16
dec
jo
addr16
aaa
cld
sbb
imul
push
dec
push
push
adc
push
dec
push
dec
push
mov
xlat
pop
xor
sarb
push
ret
out
inc
push
enter
or
push
pop
xor
test
bound
xchg
cmp
jg
bound
addr16
arpl
fbstp
leave
pop
push
pop
test
add
dec
in
jo
les
or
pop
bound
xchg
sub
xor
in
xor
mov
push
dec
mov
nop
jno
lds
dec
push
cmp
adc
mov
push
leave
add
cmp
dec
push
adc
mov
inc
add
xorl
inc
mov
pop
test
test
test
cmp
inc
pop
test
mov
sbb
leave
or
xchg
in
repnz
pusha
or
xchg
or
das
pop
mov
xchg
scas
nop
dec
shrb
stos
xchg
adc
enter
stos
xchg
gs
test
add
mov
add
push
push
ss
mov
std
dec
add
stos
sbb
in
call
addr16
enter
mov
hlt
or
pop
mov
dec
pop
adc
inc
push
int
shlb
lret
push
icebp
add
mov
xor
lods
hlt
ret
pop
cmp
das
xlat
stos
mov
push
ljmp
and
fistps
lods
inc
sub
loop
divl
mov
hlt
inc
mov
insb
and
add
in
jl
leave
int3
inc
test
and
add
int3
test
mov
cmc
setae
jns
xor
shrb
ret
rcll
jb
mov
stc
pusha
add
mov
cwtl
push
and
inc
xor
dec
and
insl
insl
jns
ds
or
mov
pop
push
sarl
dec
xchg
xlat
or
jnp
movsb
add
dec
pop
clc
jns
sbb
roll
dec
add
or
rorl
jg
jno
js
data16
inc
inc
xchg
sub
pop
adc
icebp
lods
aam
push
dec
pop
outsb
jg
ret
cmp
jbe
movsb
mov
dec
mov
pop
jecxz
adc
push
or
jmp
mov
incl
cli
and
bound
cmp
inc
shll
push
mov
mov
xor
data16
or
mov
jmp
enter
dec
and
mov
roll
adc
mov
push
add
sub
lock
lods
add
rclb
fcomps
icebp
pop
orb
ljmp
jne
lret
or
mov
mov
je
sbb
js
jne
push
cmp
inc
pusha
divb
jne
ret
dec
lret
sbb
adc
adc
leave
pop
xchg
xchg
out
in
jne
cmp
xor
js
xchg
adcl
or
xor
mov
dec
dec
dec
xchg
add
ret
daa
clc
cmp
or
dec
imul
insl
inc
inc
or
mov
rcrl
xor
lahf
pop
adc
rorl
cltd
cltd
out
jns
test
imul
insl
sub
pinsrw
cs
add
js
inc
fdiv
sub
sbb
cmp
pushf
test
mov
cmc
and
push
pop
sub
xlat
adc
mov
call
push
test
adc
ds
xchg
xchg
mov
lahf
or
push
xor
test
sbb
ss
mov
adc
rclb
xchg
add
scas
xor
mov
mov
insb
mov
icebp
test
cs
repz
push
adc
add
repz
mov
xchg
incl
or
and
jl
fadd
mov
sbb
pop
das
mov
mov
fldcw
stos
pusha
das
cmpb
dec
inc
mov
sbb
push
dec
mov
pop
rorb
fwait
cmp
repz
jecxz
add
push
mov
sub
or
ret
xchg
ljmp
mov
mov
add
xchg
loopne
or
push
sub
cmp
sarb
jl
addr16
sub
mov
jg
mov
test
jge
add
pusha
sub
mov
and
test
or
mov
push
inc
mov
inc
mov
rcrb
cmovb
popa
adc
xchg
mov
enter
jb
mov
ja
inc
sbb
outsb
aaa
dec
push
imul
scas
push
dec
xor
sahf
xor
out
add
mov
sbb
ja
addl
inc
insb
aaa
push
cmp
or
and
aas
add
push
xor
or
mov
pop
cmpsl
pop
fimull
sbb
mov
nop
mov
ja
pop
pop
repz
xor
ja
add
sbb
outsb
inc
sub
in
je
addr16
pop
sub
cmp
push
and
inc
sbb
sub
insl
ja
fs
jo
inc
fmuls
ret
xor
push
dec
mov
mov
sahf
jo
xchg
lods
add
imul
dec
push
xchg
or
add
xor
xorl
sbb
ss
xchg
out
popw
add
push
dec
in
je
or
mov
fbstp
mov
sub
pop
dec
dec
lods
sbb
push
jne
je
adc
and
mov
fwait
andb
or
popa
jg
punpcklwd
movsb
nop
imul
jbe
pop
or
cs
aas
roll
aaa
pusha
jb
adc
and
fwait
sub
pop
xorl
outsl
inc
inc
sbb
insl
or
or
push
daa
dec
jne
push
or
or
jb
fiaddl
fidivrl
daa
or
jo
adc
dec
pop
dec
add
adc
push
jg
pop
pusha
shrb
adc
add
or
dec
jecxz
sub
jmp
stos
lods
xlat
aas
inc
insl
and
xor
loopne
aam
or
xor
mov
ljmp
fsubl
rcrb
ret
xchg
or
pushf
xchg
xchg
push
adc
test
add
pusha
pop
stos
cld
adc
inc
mov
add
inc
mov
dec
out
sbb
sbb
lret
inc
sub
ds
bound
push
mov
into
cmp
inc
ret
scas
or
lahf
adc
lods
pop
cmp
dec
push
push
push
scas
fadd
cld
ss
add
mov
inc
add
cmp
inc
aaa
add
inc
ret
call
sub
rcrb
xor
sbb
inc
dec
dec
or
outsl
mov
push
xor
dec
addr16
ror
dec
sti
scas
push
addr16
xor
inc
push
cltd
test
or
and
in
das
push
xor
es
adc
pop
adc
xor
inc
pop
dec
imul
ljmp
mov
add
out
sub
mov
pop
and
mov
or
fbld
cmpsl
inc
mov
insl
loope
mov
sarb
std
dec
mov
push
push
fsubrp
xchg
lods
pushf
xchg
mov
dec
inc
mov
jge
mov
clc
jl
orb
mov
jno
pushf
sub
add
or
pop
jg
or
daa
or
mov
insl
andl
fistpl
add
sahf
cwtl
adc
lea
mov
push
pop
shlb
pop
nop
adc
cmp
out
add
or
add
add
mov
sub
repz
cmp
aam
push
mov
add
xlat
mov
mov
pop
icebp
push
mov
mov
es
inc
adc
sbb
fcmovnu
lds
add
push
pop
xor
cmc
mov
inc
adc
pop
add
shrb
add
test
jb
dec
mov
ret
das
sub
inc
or
cmpsl
aas
imul
rol
je
je
adc
dec
dec
adc
xchg
mov
sub
icebp
mov
sbb
pop
arpl
rcr
cmp
mov
dec
sub
mov
adc
icebp
cli
xlat
add
loope
test
sub
jg
mov
lret
jae
jmp
in
fistl
sbb
shll
iret
cltd
or
add
and
jne
mov
or
pusha
xor
pop
test
mov
xor
popl
pop
stos
sub
mov
imul
ret
fcoml
popa
pop
pop
push
sbb
dec
mov
sbb
add
pushf
lock
je
fldenv
jmp
adc
int
xor
loopne
fs
pop
sbb
push
push
and
add
push
fcoml
cmpsl
jmp
pop
or
or
and
into
mov
push
test
mov
lods
add
mov
rorl
inc
hlt
jmp
les
xor
clc
clc
cld
cmp
iret
add
subb
cmp
xchg
out
cmp
sarl
rcr
filds
cmpl
daa
test
aad
notl
add
test
nop
mov
jmp
sub
push
add
scas
lods
icebp
loopne
cltd
fmuls
ret
jecxz
outsb
dec
pop
sbb
ret
pop
pop
les
push
and
call
pop
call
jo
or
int3
mov
test
add
cli
cli
push
bound
jo
and
cmp
pop
pop
lds
xor
sub
add
and
enter
add
xchg
or
xlat
cmp
mov
cwtl
or
and
shrb
mov
jb
lods
push
pop
add
mov
and
push
or
push
aam
nop
outsb
and
fdivr
lret
daa
xor
push
xor
neg
cmc
and
js
addr16
and
popa
jbe
insb
gs
jg
mov
inc
xor
cmp
je
sub
xor
pop
dec
mov
imul
xchg
xchg
or
and
subb
pop
add
fcoms
lahf
mov
mov
sub
adc
jae
sbb
out
jne
mov
sbbb
test
cltd
arpl
ret
jle
cmp
adcb
outsb
int
das
jo
incb
add
stos
int3
in
mov
mov
and
inc
call
push
xor
test
mov
push
add
sbb
cmp
mov
add
jb
filds
loopne
repz
jmp
sbb
mov
push
adc
fs
repnz
scas
mov
cmp
xchg
xchg
testl
push
inc
xchg
lret
mov
or
jecxz
shrl
and
sbb
push
sarb
or
sub
dec
mov
repz
mov
pop
movb
xchg
test
pop
enter
mov
inc
jb
leave
or
out
or
and
xchg
mov
notb
dec
pop
leave
push
nop
xchg
lods
ret
cmpl
add
enter
push
mov
push
leave
and
cmp
or
subb
sub
mov
sets
bound
lret
cmp
or
sbb
in
lds
adc
sbb
enter
inc
or
mov
orb
dec
lret
jg
add
fistpl
pop
add
cmpsl
cmp
mov
add
ret
mov
xchg
xor
sbb
imul
jns
call
divb
push
push
std
push
mov
call
lods
movb
inc
xor
aaa
ret
imul
sbb
dec
cmp
xor
add
rcr
push
push
in
and
shr
or
mov
aas
dec
add
mov
mov
stos
fisubrl
dec
outsl
inc
xor
orb
pusha
pop
nop
in
xor
int3
mov
sbb
or
xchg
pusha
in
jb
inc
int3
lcall
push
cmp
xchg
dec
int
push
enter
int
sbb
popf
inc
jno
es
mov
ljmp
mov
test
test
les
in
sbb
into
fdivl
adc
movsl
mov
mov
les
or
add
es
push
sbb
pusha
xchg
dec
xor
stos
in
shrb
movl
sbb
js
inc
and
aad
jo
mov
cmp
popa
mov
out
idiv
es
je
jmp
sub
jmp
ja
pop
xor
out
arpl
pop
scas
imul
iret
sub
mov
lret
imul
add
cmp
call
xor
scas
dec
call
xchg
cmp
ss
and
in
cltd
mov
stos
xor
cmp
xor
mov
mov
add
adc
out
add
pop
or
mov
push
push
jg
push
adc
push
inc
xor
insl
fsts
pop
loopne
push
sub
adc
push
add
adcl
push
cmp
gs
sti
dec
xchg
dec
xchg
test
mov
or
cmp
sarl
loopne
aas
lods
andb
sub
dec
cs
xchg
xchg
in
pop
sbb
scas
sarb
xor
xor
add
scas
loope
and
push
add
dec
push
je
ret
lea
cmp
fiaddl
lock
ja
popl
fwait
loope
inc
insb
into
push
adc
inc
pop
add
out
dec
repnz
push
pop
nop
lock
and
lret
mov
push
jecxz
add
mov
and
inc
pop
lods
nop
rcll
pop
mov
cmp
cmp
dec
inc
xchg
inc
fsubp
cmove
inc
daa
add
gs
adc
xchg
das
jo
or
rcrl
xchg
iret
stos
bound
ret
jecxz
shrb
outsl
and
sbb
pop
sub
addb
cmpsb
inc
enter
sbb
add
adc
movsb
inc
out
or
mov
out
xchg
add
ds
jne
aad
jge
dec
sub
sbb
cmp
pop
loopne
nop
push
or
or
sarl
mov
sub
sbb
jae
mov
cmp
and
je
int
call
sub
mov
lcall
xor
dec
xchg
xchg
ss
fsubl
ret
mov
or
inc
and
pop
or
sbb
pop
mov
cwtl
ljmp
enter
aad
imul
dec
cmp
adc
mov
sarb
pop
add
add
sbb
hlt
pop
dec
adc
bound
jge
in
popf
jle
in
pop
aam
push
insl
jnp
fadds
xchg
mov
inc
xor
push
ja
mov
xor
adc
sbb
jl
push
fcmovbe
cmpsl
push
loopne
jns
or
sbbl
inc
add
mov
xchg
sub
fmuls
add
in
int3
adcl
rolb
cmp
movsb
mov
pusha
dec
imul
movl
push
push
mov
add
mov
push
xchg
cmp
mov
push
add
leave
pop
or
or
cmp
imul
rorb
pop
inc
dec
movsb
pusha
adc
or
inc
or
test
push
mov
sub
and
cmpb
sbb
mov
ret
rcrl
inc
sub
cltd
and
jmp
and
sbb
loopne
iret
js
cmp
cmp
inc
pushf
pop
pop
inc
sahf
or
or
int3
inc
adc
cld
popa
sbb
arpl
xchg
in
mov
jae
add
inc
nop
movl
nop
sbb
out
dec
movl
cs
ret
test
call
xor
movsb
pop
aam
mov
cmp
sbb
and
lods
sub
pop
das
or
fsts
mov
dec
sbb
ret
and
add
cld
inc
outsb
imul
add
gs
mov
cmpl
sbb
or
inc
test
mov
jns
or
dec
es
inc
mov
in
sub
adc
in
jb
fisttpl
pop
push
pop
adc
cmp
inc
xor
lahf
fs
scas
or
jb
adc
ja
daa
mov
inc
iret
sbb
dec
xor
test
dec
clc
negb
sbb
add
in
inc
and
lds
mov
cli
dec
mov
aad
inc
sbb
femms
adc
rorb
inc
add
push
movsb
je
mov
mov
and
xchg
fwait
icebp
xor
push
rorb
inc
dec
push
ss
andb
insb
sbb
mov
xchg
dec
push
cmc
sub
adc
sbb
add
adc
add
mov
mov
or
addl
or
push
or
and
dec
and
rcr
pop
ret
mov
jae
or
dec
popa
pop
or
cli
adc
mov
daa
xchg
mov
fmull
cmp
push
andl
adc
mov
aaa
xor
push
pop
test
add
mov
outsb
sbb
inc
fdivs
popa
sbb
lret
fiaddl
lahf
fstp
cmp
in
push
loope
rcrl
mov
in
js
add
jbe
sahf
les
sbb
pcmpgtb
dec
xchg
cwtl
cwtl
stos
pop
enter
pop
pop
add
adc
or
inc
popa
add
add
dec
inc
xchg
adc
enter
icebp
int3
cmp
sbb
call
sbb
and
movd
sub
dec
dec
add
inc
cmp
mov
cmp
je
mov
jnp
inc
push
fs
sbb
sbb
and
add
or
nop
push
add
pop
leave
aas
and
test
push
gs
and
ja
adc
dec
add
push
loopne
andb
sub
push
loopne
roll
lea
sbb
movsb
mov
scas
dec
loopne
idivb
shll
sbb
jmp
pop
cmp
je
test
or
adc
xchg
pushf
sub
movlps
and
fwait
enter
push
add
mov
cmp
add
fcomp
jnp
or
ljmp
out
ret
aaa
inc
push
jl
push
inc
mov
rolb
xor
push
cmc
in
xor
scas
pusha
movsl
jne
adc
test
jo
xchg
mov
jae
push
popa
add
adc
rclb
inc
add
popa
cs
lahf
cmp
adc
std
lods
aas
add
cmp
sti
sbb
testl
aas
loopne
cmpb
das
dec
clc
push
mov
mov
movsb
cmpb
lods
nop
cmpsl
adc
add
sbbb
add
cmp
mov
add
or
mov
cltd
rcl
aam
inc
mov
sub
add
adc
adc
lea
les
movsb
jne
jno
inc
and
bound
out
and
orb
xchg
and
xor
int3
sub
fnstenv
cmp
adc
popf
in
daa
rolb
pushw
inc
pop
push
outsl
pushf
mov
sbb
add
xchg
mov
loopne
insb
cmp
mov
mov
and
into
cmc
fwait
jecxz
jns
xchg
lods
imul
sahf
pop
lock
mov
shll
mov
mov
mov
je
sbb
mov
fcomps
movsl
and
aam
sarb
push
out
push
push
add
mov
and
xchg
mov
push
adc
dec
ja
inc
inc
or
adc
dec
mov
out
cmp
mov
jnp
sub
add
out
add
adc
dec
add
cmp
fiaddl
fincstp
shll
fldln2
mov
ret
or
out
inc
ret
mov
fisubs
dec
push
cltd
jne
ss
sub
popf
jne
xchg
js
jo
sbb
inc
sub
iret
mov
pop
push
test
in
ret
adc
stos
fldt
push
and
rorl
enter
mov
cmp
aas
test
fsubl
adc
lock
jge
xchg
push
or
and
insl
test
test
outsb
pop
mov
ljmp
lock
jmp
jns
cmp
dec
cmp
lds
add
notl
inc
inc
das
inc
pop
movsl
push
sbb
mov
movb
mov
movsl
movb
ficompl
or
adc
xchg
sbb
cmp
xchg
xchg
cmp
mov
add
mov
fisubrl
insl
loopne
push
sub
inc
hlt
lea
fidivrl
push
add
mov
or
add
mov
add
or
fcmovnb
inc
adc
popa
adc
testl
aas
dec
xor
outsl
adc
sub
lea
lea
shrl
or
inc
dec
jne
ds
aam
jge
adc
adc
adc
push
adcb
mov
add
xchg
das
and
mov
mov
fisttpl
add
xor
js
idivl
jle
imul
mov
outsl
add
dec
jns
jmp
mov
jecxz
fildll
jecxz
mov
mov
jmp
scas
fdivrp
sti
movw
add
cli
adc
inc
add
mov
cmp
cld
cmp
and
push
cmpb
jl
daa
or
out
std
mov
les
rolb
jne
aas
sbb
imul
pop
push
inc
or
mov
lea
rcrb
pop
push
cmp
das
jns
mov
daa
jmp
addr16
or
xor
gs
add
icebp
sub
sbb
adc
xchg
pop
ja
repnz
sub
movb
sbb
das
jg
push
outsb
cli
lock
movsb
movzwl
add
inc
and
mov
addl
inc
fcoml
and
loop
orb
push
add
cmp
insl
sub
dec
fcompl
adc
fs
aaa
or
insb
xor
push
inc
mov
inc
jo
xchg
dec
mov
fiaddl
int
xor
call
movups
jmp
test
and
shlb
sub
and
bound
lock
je
push
push
lods
ss
and
movl
add
outsb
push
dec
loope
daa
mov
mov
arpl
mov
push
push
in
stos
mov
sub
sbb
adc
lret
add
mov
fwait
iret
push
cs
push
xor
popa
stos
xor
outsl
in
jge
add
or
lods
add
cmpsl
in
or
mov
add
inc
xchg
or
in
pop
jmp
fiadds
jb
cmp
jo
push
dec
movsl
jmp
sub
into
nop
dec
jo
ja
add
adc
pop
push
shrl
adc
and
fsubl
insb
test
xor
add
cld
push
push
xchg
add
rcll
jae
pop
or
xchg
fs
imul
mov
mov
setae
mov
add
adc
push
jo
mov
and
sub
jmp
xor
sub
dec
in
pop
or
adc
cld
adc
cmp
inc
sub
jmp
sar
dec
sbb
push
add
test
xchg
and
and
dec
mov
out
pop
dec
rorb
cmpl
dec
inc
jo
mov
jns
or
and
cltd
rolb
adc
mov
aas
cmp
jg
test
adc
jg
inc
mov
or
enter
jg
push
test
jg
sub
movb
aaa
mov
or
mov
lea
pusha
nop
mov
mov
lock
sub
cli
xlat
add
jns
sbb
in
push
movsb
mov
mov
push
pop
xchg
or
outsb
adc
pop
cmpsb
call
fcomps
rorb
pop
cmp
test
es
xchg
sbb
xchg
dec
jp
imul
or
mov
in
or
mov
test
mov
out
fs
mov
or
mov
js
test
jge
sbb
cltd
dec
and
mov
adc
inc
inc
ret
cmp
jg
jbe
ret
decb
loopne
es
inc
lea
popf
adc
addb
in
mov
xchg
dec
push
out
inc
cmpsl
mov
push
es
adcb
adc
cmpsb
pop
or
inc
cmp
sub
shlb
add
or
ret
fs
cmp
dec
inc
mov
lock
jl
fidivs
push
add
inc
adc
shlb
adc
xor
add
jno
pop
dec
scas
hlt
add
int3
lcall
lcall
sbb
jmp
call
add
imull
mov
push
mov
les
ret
enter
adc
shrb
jge
mov
add
in
pop
cmp
inc
push
push
icebp
xchg
insl
stos
inc
aas
adc
inc
mov
cmpsb
cmpl
scas
mov
scas
add
pop
pop
movsb
dec
adc
rclb
aas
sbbl
nop
aam
mov
adc
test
push
xor
dec
roll
psrlw
or
push
shll
push
adc
push
mov
xor
pop
ret
or
mov
xlat
inc
sbb
lret
or
std
in
adc
sbb
sbb
jb
fisttpl
or
sbb
cmp
jmp
mov
mov
les
in
jnp
mov
hlt
cmovs
push
jg
lock
mov
adc
sub
and
jns
jno
mov
jae
jmp
adc
in
or
adc
insb
and
orl
or
movsb
mov
add
sti
cs
and
and
push
sub
mov
ffree
and
and
enter
mov
hlt
inc
adcl
test
out
lock
jg
xor
jae
imul
add
mov
or
es
data16
sub
adc
push
aas
and
sti
push
add
cltd
mov
dec
or
mov
sbb
xchg
mov
repnz
sbbl
sbb
push
cmp
pop
dec
mov
je
test
insb
loopne
loope
cmpsb
ja
lea
sahf
clc
sbb
enter
sbb
sub
cmc
cmp
fsubl
sub
xor
and
push
sbb
mov
sub
repz
loopne
cmc
add
pop
mov
xor
enter
pop
in
hlt
out
mov
int3
pop
or
stos
leave
fisttpl
rcll
sub
roll
mov
jecxz
loopne
pop
xchg
aaa
shlb
adc
inc
ss
scas
push
add
add
add
js
lcall
repnz
or
xor
inc
clc
pop
stos
loopne
xor
push
lods
or
lods
ret
out
out
cwtl
fnsave
mov
mov
mov
push
jb
pop
inc
and
in
jge
or
xchg
dec
hlt
lods
sbb
push
pop
pusha
xchg
in
in
pop
push
pop
adc
hlt
sbb
push
fs
fcoml
fs
pop
push
push
cmc
pop
in
add
mov
add
movb
add
stos
sub
sahf
fsubs
pop
inc
push
or
or
sub
push
je
add
js
ret
out
push
nop
and
arpl
dec
push
cmp
aas
aas
arpl
add
and
inc
cmp
loop
xchg
mov
iret
sub
test
pop
mov
inc
push
dec
pop
test
sbb
sub
negb
je
pop
cmpsl
sub
insl
notl
int3
les
mov
movsb
loope
clc
cmpsl
dec
fldenv
sbbl
rolb
ret
sub
adc
add
mov
lahf
or
into
xchg
bound
lret
jp
adc
test
mov
inc
adc
jecxz
and
es
cwtl
add
imul
sbb
daa
xchg
pop
xor
and
and
lds
xchg
xchg
mov
add
dec
daa
pop
sub
test
andb
cmp
adc
scas
sbb
enter
jle
gs
pminsw
je
push
cmp
jmp
inc
arpl
aas
and
mov
pusha
in
or
pusha
rclb
jmp
adc
add
sub
dec
push
es
iret
push
push
push
dec
pop
add
pop
mov
add
and
sub
cmpsb
es
stc
inc
js
idiv
loopne
enter
stc
or
or
and
popa
mov
xchg
cli
cmp
ja
bound
pmuludq
or
adcl
pop
repnz
push
or
or
fdivr
insb
cs
aam
pop
and
dec
xchg
adc
xor
int3
push
xchg
xlat
mov
rolb
and
adc
shlb
test
ret
add
decl
sub
or
leave
adc
or
enter
imul
loop
jo
addr16
mov
movsb
adc
mov
cmc
jp
pop
sbb
pop
jns
imul
mov
inc
mov
mov
jg
mov
xlat
jne
push
jno
mov
adc
add
jg
lods
test
add
sbbb
nop
or
add
mov
push
fs
add
repnz
xlat
movsb
clc
js
jns
jns
je
mov
int
cmpsb
call
fs
sahf
lock
pop
repnz
mov
inc
rorb
or
int3
sub
out
daa
std
cmp
add
xor
cs
jb
inc
inc
data16
sbb
gs
xchg
adc
scas
pop
pop
push
jg
push
xor
rclb
cmpsl
bound
les
mov
sub
sbb
adc
sbb
mov
clc
aam
mov
aas
inc
dec
jne
icebp
xchg
sbb
ret
mov
xchg
aaa
fwait
dec
lods
push
sub
fwait
jno
sub
nop
jbe
jb
jg
adc
fidivs
add
or
dec
lods
adc
push
das
cltd
mov
and
mov
stc
adcb
aas
pop
and
test
leave
cmp
or
imul
and
ret
mov
push
xchg
xchg
push
jmp
pushl
xchg
jp
mov
stos
inc
push
rcrl
out
lret
leave
adc
das
pop
mov
je
mov
sub
test
xchg
pop
mov
fdivs
idivb
imul
test
mov
pop
aad
push
mov
sub
push
pop
in
dec
cmp
xor
lret
nop
xchg
push
mov
add
sbb
push
inc
lret
sahf
in
insl
push
add
add
cs
mov
sbb
xorl
xor
pop
jmp
in
adc
dec
lahf
enter
adc
test
and
sbb
jl
mov
xor
cmp
in
arpl
rcrb
add
xchg
rol
push
cwtl
popa
fsubrl
jae
int
or
sub
mov
adc
mov
add
xchg
lds
push
push
push
enter
inc
fmulp
dec
test
cld
dec
incl
stos
das
or
test
cs
add
dec
add
jle
jne
and
inc
mov
jb
inc
jo
test
or
dec
std
adc
mov
sub
adc
test
xchg
mov
shll
in
test
add
les
add
dec
cmp
push
or
adc
xchg
and
pop
call
add
mov
push
add
sbb
pop
jb
xchg
mov
push
add
push
add
es
imul
insb
adc
mov
push
add
sub
es
fadds
popf
pop
icebp
jle
push
add
or
add
cmovb
push
sub
jo
insl
jae
add
xchg
pop
repnz
push
add
add
mov
inc
push
das
inc
add
add
fiadds
jle
xor
cmp
mov
sbb
push
or
lds
adc
and
xchg
das
fsubs
pop
pop
xor
mov
mov
nop
arpl
push
cwtl
dec
add
push
ret
dec
mov
mov
jo
and
stos
cmpsl
mov
inc
push
and
lods
dec
add
movsl
or
fmul
les
jne
push
dec
ret
ret
adc
xor
aad
ret
xor
or
outsl
jne
and
fstl
ja
ss
in
das
push
mov
test
loopne
mov
cld
mov
shll
js
push
add
mov
iret
lret
or
fs
add
mov
sub
fs
xlat
push
push
push
or
or
add
lret
pop
jmp
dec
push
mov
mov
sub
add
je
lods
or
rolb
add
andb
imul
inc
add
dec
or
jmp
pop
rol
push
push
je
pop
or
xor
lods
mov
cld
adc
loope
pushf
inc
mov
add
pop
cmp
jns
inc
cltd
imull
mov
repnz
or
mov
pxor
cmp
dec
push
jno
xor
add
enter
mov
pop
and
or
cs
repnz
xor
or
adc
inc
cmpsb
sub
pop
inc
popa
inc
or
sub
sub
push
or
aad
sbbb
or
dec
add
mov
xchg
or
imul
add
fmull
xchg
xabort
jae
or
and
cmp
dec
inc
dec
cmpsb
clc
aas
jne
dec
xor
pop
popa
or
push
xor
pop
dec
push
mov
addl
sbb
mov
or
push
int3
aas
sub
pop
les
mov
push
mov
cmp
sar
call
cmp
xor
or
test
imull
rcrl
shll
inc
mov
andb
xor
shrb
jg
nop
jb
cs
stos
lret
scas
fbstp
pop
sbb
push
jmp
ret
mov
mov
inc
add
or
aaa
add
mov
dec
or
cmp
ret
pop
lret
or
xchg
inc
push
inc
das
jae
in
leave
pop
inc
jl
and
cmp
adc
ud0
sub
clc
arpl
out
sbb
adc
and
sbb
pop
sbb
adc
lods
mov
and
push
and
mov
adc
mov
repz
mov
enter
clc
adc
add
add
sub
nop
cmp
test
sbb
iret
decl
cmp
nop
pop
hlt
ss
movsl
add
hlt
out
pop
rorb
mov
outsl
inc
add
xor
mov
xor
test
xchg
or
inc
mov
mov
loop
jo
adc
push
push
popf
jnp
add
xchg
and
in
adc
nop
xchg
popa
stc
hlt
mov
push
adc
dec
hlt
sbb
int3
fs
mov
pop
bound
jno
add
out
dec
fimuls
mov
sbb
sbb
adc
xor
addb
sub
pop
dec
xchg
mov
shlb
scas
push
or
adc
dec
push
push
pusha
push
movaps
dec
sub
addb
scas
xchg
shrl
inc
and
in
pop
mov
cmpsb
inc
aas
in
sbb
imul
daa
pop
ret
call
stc
mov
cwtl
push
adc
push
adc
sbb
clc
sbb
iret
jae
cmp
sahf
inc
mov
adc
aam
shrb
or
sbb
orl
push
adc
add
pop
lea
nop
push
jg
jne
loopne
test
dec
hlt
push
pop
repnz
outsb
push
xor
popa
mov
cmc
sbb
pop
push
loope
push
push
je
shlb
ss
sbb
aaa
push
xor
test
cli
lea
pop
jbe
and
mov
push
pushf
cltd
inc
push
movsb
or
and
adc
rcr
fistps
aam
xchg
movsl
fwait
sub
rclb
pop
cmp
inc
adc
sbb
push
jo
or
lods
or
mov
and
loopne
cwtl
test
insb
int
outsb
add
arpl
dec
or
adc
aam
dec
inc
or
out
xchg
dec
adc
mov
add
add
inc
pop
mov
into
adc
pop
inc
push
and
mov
add
call
or
inc
sub
pop
and
and
xor
and
pop
and
lea
nop
pop
loopne
lea
notl
clc
imul
cmpsl
loope
adc
rolb
sub
popf
mov
sub
inc
sub
lea
negb
daa
add
add
push
sahf
cmp
adc
push
pushf
inc
and
mov
sub
ret
jbe
nop
xchg
pusha
jb
push
push
in
sbb
scas
and
cmp
push
or
or
pop
push
push
repz
adc
mov
or
lcall
mov
push
adc
dec
imul
and
adc
and
bound
popa
or
jo
aaa
dec
lcall
xchg
or
pop
xorl
sbb
es
filds
rorb
sub
lock
inc
repnz
mov
popa
dec
mov
xor
xchg
inc
add
mov
testl
add
sbb
in
rol
or
inc
dec
mov
divps
jecxz
pushf
aaa
jne
jae
pop
sub
add
repnz
sub
adc
mov
addl
and
cmc
push
repnz
ljmp
push
or
insl
adc
mov
pop
lock
mov
sbb
pop
in
ret
push
das
or
mov
and
loope
popf
arpl
dec
xlat
xorb
dec
add
or
push
addl
das
xchg
dec
movb
inc
popf
ss
adc
xor
icebp
cmp
shlb
int
push
dec
or
pextrw
nop
xchg
incl
sbb
sbb
sbb
jae
push
fcoms
add
push
mov
sub
aaa
push
add
cmp
iret
jns
addb
jecxz
test
xchg
fcompl
cmp
pop
and
jg
roll
mov
ljmp
mov
push
xchg
ret
sbb
adc
mov
xchg
icebp
mov
shlb
dec
inc
je
addr16
aam
adc
test
pop
push
sbb
pop
addl
xchg
or
jbe
ret
jbe
sub
and
xor
inc
mov
sbb
mov
mov
mov
jbe
les
and
inc
push
dec
pop
fwait
xchg
and
inc
cmp
mov
fidivrs
jmp
int
lcall
xor
shrb
push
subl
sar
hlt
mov
addr16
shll
shld
in
pusha
sub
sarl
decb
push
in
ret
int
add
cmp
out
pop
lahf
test
push
loope
out
rorb
fimull
inc
push
test
hlt
lea
daa
hlt
inc
fs
xchg
mov
jnp
data16
inc
sbb
pop
cmpsl
cld
add
inc
mov
xor
inc
pop
push
inc
sahf
lock
xor
sbb
xchg
jp
and
inc
sti
lds
je
in
push
mov
add
sbb
sarb
xor
and
jne
or
and
and
cmp
sub
cmp
movsl
cmp
sub
or
mov
sub
notl
mov
inc
or
push
hlt
push
pop
andb
repz
push
add
cli
push
cmp
mov
cmp
xor
mov
sbb
lret
push
or
mov
sbb
and
lret
lds
xor
inc
js
outsb
inc
or
cmp
and
aas
pop
push
add
add
sub
pop
add
ljmp
inc
aaa
in
push
adc
dec
inc
jns
add
mov
inc
subb
mov
outsl
leave
je
jne
out
and
or
or
cltd
and
jle
sbb
dec
sahf
or
fadd
sbb
ficoml
push
rclb
imul
fs
shll
xor
sbb
inc
leave
add
and
cmp
cmpl
sbb
mov
pusha
mov
clc
rol
push
add
aad
pop
dec
dec
mov
loopne
shrl
cli
adc
or
fmulp
pop
sbb
sbb
sbb
inc
pop
inc
and
mov
mov
mov
adc
or
mov
popf
les
or
cmpsb
outsl
ljmp
jecxz
and
inc
bound
inc
sub
lahf
sbbl
pusha
lods
or
adc
xor
or
pop
mov
aas
pop
je
call
jl
mov
adc
add
push
repnz
xlat
or
adc
test
cwtl
fcmovnbe
push
sbb
and
add
or
int3
add
or
shrb
cwtl
in
adc
xchg
adcl
nop
out
and
sub
andl
push
popa
fstps
cmp
pusha
xor
sbb
jb
jae
lods
scas
xchg
insb
cmp
cld
push
and
mov
sbb
rol
icebp
xlat
cmp
push
aaa
pushf
ret
push
imul
mov
jae
test
cwtl
xor
inc
lahf
mov
subl
sarb
sbb
loope
mov
add
or
ss
adc
add
push
add
push
add
lret
rolb
out
pop
aas
fmuls
test
jnp,pt
pop
stc
or
dec
or
mov
xchg
push
insb
inc
orb
inc
xor
inc
or
cmp
loope
movsb
daa
and
pop
and
clc
mov
and
nop
inc
and
add
mov
ret
mov
pushf
out
sub
das
loope
push
add
and
or
adc
inc
and
and
and
add
xchg
test
inc
outsb
insl
and
outsl
dec
inc
mov
cs
pop
loope
jbe
stos
add
das
xor
push
add
xor
test
sbb
pop
outsb
add
mov
sbb
add
call
in
inc
jne
enter
pop
adc
lcall
mov
dec
loopne
add
stos
or
dec
out
add
pusha
imul
ret
pop
push
and
pop
and
push
and
or
enter
loopne
cmp
fisubl
pop
pop
dec
mov
mov
add
pop
divb
mov
mov
or
cmp
cmp
mov
mov
or
push
inc
xor
punpckhdq
mov
test
xchg
add
pop
shll
rcrb
inc
repnz
imul
pop
rolb
daa
dec
fs
sbb
aas
test
nop
dec
push
fdivs
inc
push
imul
push
push
add
xchg
adc
xor
mov
adc
insl
ss
aad
test
dec
pop
and
xor
fsts
xchg
add
nop
daa
push
fcoml
test
test
call
decl
fadds
push
loop
or
nop
xchg
cmpsl
shrb
adc
or
test
mov
ret
lea
cwtl
lea
add
pusha
mov
mov
roll
mov
ja
mov
adc
shlb
pop
mov
adc
orl
pop
mov
mov
sahf
out
mov
or
xchg
xor
or
rorb
movsl
and
mov
sub
andb
lock
leave
cmp
sbb
inc
lods
cmp
inc
sqrtps
xor
jne
xlat
testb
sbb
xor
xor
sarb
je
cmpsl
adc
movl
xchg
jbe
mov
add
sbb
and
add
or
stos
and
les
mov
dec
jne
je
adc
sub
movsb
cltd
xchg
push
sbb
sbb
sbb
add
dec
xorb
mov
sub
push
rolb
jge
dec
popa
clc
mov
loopne
cmpb
ja
das
mov
sub
pop
sub
imul
or
and
add
es
pop
push
adc
or
inc
or
fsubs
dec
std
sub
aas
filds
pop
dec
in
jl
mov
and
cmp
add
movl
idivl
adc
nop
xchg
xchg
and
insl
leave
popl
push
mov
dec
mov
es
rcrl
cli
popf
adc
mov
fdivl
lods
ss
fistpl
int
xlat
xchg
js
cmpsl
push
or
iret
fsubrs
sahf
xor
add
push
dec
rclb
mov
enter
sbb
xor
pusha
shll
pop
aam
in
nop
add
sub
and
testl
cmp
and
sub
xchg
mov
mov
jmp
jnp
mov
je
mov
cmp
pop
daa
sub
push
adc
adc
fcmovb
inc
mov
and
aaa
in
ss
sub
data16
xor
or
test
mov
push
jne
mov
lock
dec
cmp
jne
mov
xor
enter
test
mov
aad
je
mov
sub
jl
cs
pop
cmpsl
lock
es
push
sti
popl
das
bound
push
push
xor
inc
fcmovu
imul
mov
in
dec
xchg
das
pop
out
fwait
mov
inc
shlb
push
test
push
add
dec
add
mov
mov
sub
mov
in
ss
push
pop
and
sub
pop
mov
cmp
dec
jge
mov
add
in
dec
orb
daa
into
inc
push
int3
inc
adc
repz
sbb
add
loopne
lahf
popf
or
or
or
dec
push
add
insl
test
xchg
adc
or
jnp
and
mov
sub
imul
push
add
das
or
out
cmp
cmp
xor
mov
xor
pop
test
and
out
ret
nop
xchg
sbb
mov
gs
mov
jg
call
add
into
xchg
lock
iret
and
loopne
mov
aad
mov
mov
xchg
xor
pushw
sbb
add
test
mov
test
xor
movsl
int3
dec
popa
call
dec
enter
nop
addb
mov
push
nop
inc
sbb
mov
sub
inc
mov
arpl
and
mov
push
dec
iret
mov
mov
sbb
or
loopne
ds
fcoms
pop
in
es
jne
push
addr16
jb
lods
lock
xor
leave
je
stos
mov
mov
std
sbb
test
into
aas
pop
jae
les
pop
jle
push
shlb
scas
adc
call
sub
pop
movsb
leave
and
mov
in
repz
lcall
stos
sub
push
iret
imull
leave
and
aad
loop
imul
inc
out
jns
in
dec
int
pusha
popa
xor
int
aam
cltd
sbb
cwtl
rcr
xlat
sahf
test
add
or
inc
mov
add
inc
inc
push
jl
nop
fistl
add
ljmp
out
sbb
xor
aas
je
stos
mov
in
sub
rorb
adc
enter
adc
xor
cmpsl
and
mov
xchg
cmpsl
dec
push
xor
aaa
mov
sub
or
inc
lcall
xor
cmp
mov
or
ds
dec
pop
dec
mov
xor
cmp
and
in
in
test
mov
or
xor
mov
push
xor
sub
sub
mov
xor
push
ret
lds
das
and
pop
je
mov
movsb
sahf
ret
xor
push
mov
movsl
lret
adc
and
xor
cs
clc
mov
das
jne
or
movsb
icebp
sub
cltd
mov
sub
mov
and
mov
add
sub
xchg
into
mov
add
or
int3
dec
addr16
nop
or
mov
add
dec
jo
or
inc
xor
xor
add
outsb
pop
jne
fstl
push
push
arpl
jo
push
adcl
jns
inc
ret
movsl
add
inc
add
sbb
sub
jns
movsl
xor
and
lods
cmpsl
mov
ret
dec
xchg
loopne
cmp
mov
and
inc
adc
cwtl
sub
sbb
shll
adc
pop
xor
hlt
push
sbb
jmp
mov
out
std
stc
push
sub
dec
in
scas
roll
sarl
jbe
mov
in
jge
ret
jbe
fadds
fdivrl
inc
enter
das
movsb
or
rclb
mov
push
xchg
mov
test
imul
enter
pop
leave
or
cmp
cld
dec
cmp
xor
call
jns
aas
lahf
call
pop
call
pop
sub
and
sub
or
mov
fs
or
sbbl
pop
dec
rcll
cltd
imul
imul
in
add
adc
sbb
jno
mov
xchg
enter
pushl
add
lock
or
loopne
inc
pop
lock
lods
sub
or
dec
xor
pop
xorb
fwait
cmp
mov
mov
inc
adc
imul
inc
inc
and
push
cmp
push
cmpb
and
inc
cmp
lcall
xor
jne
dec
push
adc
push
dec
shll
ja
or
add
out
mov
sub
add
pop
test
mov
pop
add
push
sbb
sub
std
push
or
xor
cmp
cmc
dec
inc
lods
and
je
mov
or
add
sub
pusha
pusha
and
lret
push
push
or
insb
mov
sbb
sub
cltd
lods
movsb
xchg
clc
sbb
push
add
mov
subl
mov
test
movl
out
outsl
lea
xor
out
int
sub
dec
ss
rorl
adc
pop
inc
push
or
fcom
rorb
or
add
xchg
ss
sub
pop
push
pushf
pop
mov
rcrb
mov
xchg
add
mov
pop
aaa
cmp
xchg
push
cmp
mov
cmp
push
adc
add
jle
sbb
adc
mov
ljmp
dec
je
sub
je
sub
inc
or
or
or
clc
je
jmp
mov
xor
add
and
outsb
cmpsb
push
xchg
les
jmp
cli
or
das
sbb
out
scas
xchg
mov
jmp
mov
or
sbb
mov
fsubs
jp
inc
mov
dec
mov
fistps
test
pop
fs
js
rcll
pop
jmp
sub
fimull
inc
or
sub
pop
or
cmp
lods
or
sti
inc
inc
mov
push
pop
add
mov
daa
push
lea
add
cmp
xchg
loope
add
xchg
add
mov
add
sub
inc
inc
cmp
ja
pop
inc
rcrl
sbb
jnp
dec
push
xchg
and
adc
cmpsb
sub
add
add
dec
jns
pop
lock
outsl
push
cmpl
jg
rcrl
sub
inc
jle
dec
popa
leave
mov
cmp
jne
inc
pop
pop
mov
dec
push
cmpb
or
lock
lods
pop
sbb
ret
xchg
mov
nop
out
cmp
jne
stos
pop
add
mov
lahf
fadds
xor
dec
dec
inc
int
lods
add
popl
sbb
pop
pop
cmp
adc
adc
pusha
cmp
std
inc
or
and
imul
xor
or
js
or
pop
add
dec
adc
dec
rorb
cmp
jae
mov
and
xchg
sub
ret
push
cwtl
inc
iret
xor
mov
outsl
imul
inc
insb
das
sarb
or
or
cmc
cmp
mov
dec
insb
adc
jae
ja
pop
adc
test
xor
inc
mov
xlat
es
push
add
mov
adc
movsb
jecxz
add
inc
rcrl
mov
ret
mov
xchg
dec
and
and
add
add
movsb
pop
or
add
inc
add
push
xchg
adc
ja
or
pop
int
mov
inc
cs
adc
adc
xlat
push
adc
mov
jge
insb
sub
dec
movb
xor
push
dec
stos
dec
and
cmpb
lods
push
mov
xchg
adc
push
adc
adc
xchg
jne
js
jmp
xchg
mov
inc
adc
add
xor
enter
aam
insb
jo
xchg
loope
adcl
or
aaa
sub
les
add
or
dec
jg
push
sub
ljmp
mov
xchg
cmp
mov
inc
adc
push
std
add
add
daa
fs
adc
inc
fldl
xor
pop
movsb
shlb
stos
lods
add
aam
sub
push
les
es
push
subb
stos
dec
mov
and
push
and
xchg
out
push
filds
mov
inc
dec
lea
lcall
inc
shlb
adc
inc
adc
and
jns
inc
enter
outsl
bound
pop
ret
lea
je
dec
dec
aam
stos
mov
xchg
jns
push
pusha
mov
push
stc
or
jo
mov
jmp
cs
or
push
jno
push
or
movsl
adc
pushf
lcall
insb
push
jno
xor
pop
push
sub
movsl
inc
movsl
jnp
nop
cltd
das
adc
fildll
xor
out
add
dec
push
push
in
add
rorb
fmuls
loopne
push
or
popa
sti
addb
cvtps2pi
cmpsl
test
jmp
dec
mov
loopne
or
add
cmp
or
xchg
leave
mov
lret
cmc
rcrb
stos
subl
lds
adc
fldt
or
jo
push
sub
outsl
inc
outsb
mov
pop
pop
orl
push
imul
clc
add
lcall
daa
push
sbb
inc
punpckhwd
cld
push
data16
ficoms
gs
jo
rolb
mov
xor
mov
popa
imul
mov
daa
daa
movb
fcomps
sbb
sti
and
mov
xchg
sbb
jecxz
mov
add
inc
in
cwtl
shr
add
sub
ret
push
pushw
inc
add
arpl
inc
adc
sub
addl
or
pusha
js
inc
xorl
mov
or
je
pop
mov
mov
pop
pop
add
xchg
dec
mov
imul
jo
imul
sbb
mov
roll
pop
aas
or
lock
out
add
in
inc
jno
inc
dec
pop
or
inc
std
insl
dec
or
inc
enter
mov
add
lods
or
lods
jo
add
xor
adc
aam
int3
jmp
pop
inc
sbb
jbe
push
sub
cmpsb
add
shlb
insb
enter
std
cmpl
or
add
and
add
jnp
jnp
test
or
movsl
lods
popf
cld
xor
jge
int3
fildll
pusha
or
rolb
and
dec
or
or
adc
xchg
orl
cmp
inc
in
and
dec
and
push
enter
fmuls
cwtl
lcall
or
jbe
mov
das
push
adc
adc
and
mov
fs
dec
push
mov
and
fadds
sub
pop
les
and
nop
add
adc
mov
fsts
jno
gs
and
mov
fsubr
adc
adcl
mov
push
adc
movsb
nop
sbb
rolb
jne
sbb
push
push
ja
add
popa
movsb
adc
rol
pushf
sub
mov
into
sbb
xlat
iret
push
test
adc
fistpll
sbb
aad
sub
add
shlb
pop
and
pop
push
jle
or
jb
adc
jmp
sbb
int3
xchg
in
or
sub
pop
sbb
sub
bound
sbb
push
inc
sub
lods
cmp
xchg
sbb
shl
fidivrs
cmpl
cmpl
sbb
mov
out
mulps
xadd
jo
lock
cmp
pop
or
add
push
or
adc
add
inc
mov
adc
adc
sbb
push
jno
cwtl
int
jb
jp
xchg
mov
jg
bound
int
jmp
rorl
add
xchg
es
xchg
lea
or
cltd
sbbb
ljmp
in
inc
adc
in
sbb
add
sub
mov
mov
cmp
jecxz
push
int
insb
and
cli
dec
sbb
cmp
rolb
subb
push
or
jbe
mov
xchg
inc
std
sbb
lea
mov
push
add
pop
jecxz
mov
out
mov
test
and
inc
iret
repz
adc
xor
loopne
inc
adc
vmovsd
and
mov
aas
inc
sarb
lock
decl
dec
das
dec
fdivrl
jge
mov
jmp
and
iret
imul
cmp
aad
enter
push
int
jmp
inc
lea
adc
aam
cli
push
movb
arpl
and
and
and
jmp
ss
adc
push
add
xor
jb
popf
add
sbb
add
add
mov
inc
jns
and
inc
mov
mov
mov
or
mov
outsl
lock
es
andb
xor
jge
aad
dec
lea
inc
psubusb
movsb
addr16
shr
xlat
lret
add
jecxz
inc
out
jmp
rolb
dec
xchg
mov
sbb
movb
nop
or
add
adc
and
xor
inc
lock
je
cmp
incb
movb
or
mov
rorb
xor
pop
xchg
cmp
je
jae
cmpsl
or
mov
fcoms
jmp
shlb
pop
mov
dec
aaa
scas
and
push
inc
add
test
add
sub
sbb
cmc
test
insb
add
adc
adc
inc
fbld
pop
roll
pop
insb
fwait
inc
add
or
add
mov
pop
push
or
sub
test
or
repnz
cmpsb
ds
push
mov
pop
add
jno
dec
sub
push
out
adcb
cmp
or
xchg
add
mov
pop
shlb
cltd
pop
inc
imulb
cmc
xor
sub
out
sbb
inc
sub
push
int3
cmpsl
imul
mov
mov
lods
fs
fadds
jmp
mov
mov
adc
add
xorb
inc
sub
push
jne
push
fwait
ljmp
sub
adc
negb
cltd
adc
or
movsb
sahf
mov
or
leave
adc
adc
out
into
push
les
je
mov
into
or
je
jg
mov
and
ret
and
xor
and
ret
xor
push
push
push
xchg
pop
cwtl
testb
or
inc
imul
inc
push
push
jle
in
and
push
push
mov
incl
mov
testb
je
adc
jns
jno
mov
jns
scas
and
fadds
sbb
sbb
xor
sub
dec
ror
or
or
adc
into
sub
shll
imul
and
dec
xor
bextr
jp
sahf
xor
aas
dec
jecxz
popa
cmp
and
push
rcrb
repz
rorb
pop
ficoms
popf
iret
in
add
inc
fildll
push
push
cmp
cmp
rcl
adc
imul
jg
scas
push
xor
jne
cmp
add
mov
jo
dec
mov
add
and
sbb
push
xchg
and
test
rorl
cmp
xor
add
sbb
cmp
test
outsl
adc
pop
or
shl
xchg
sbb
jno
ficoms
inc
notb
je
mov
xchg
mov
sub
push
gs
push
sub
inc
cmpsb
adc
xchg
pop
fsubr
add
fsts
xor
subb
mov
lahf
or
adc
loop
ds
loop
or
dec
pop
mov
mov
js
jg
mov
movsl
jecxz
addr16
push
cmc
cmpsb
mov
push
xorl
mov
movl
adc
mov
mov
cmp
and
lock
mov
imull
mov
pop
jle
insl
idivb
int
lea
xor
mov
mov
inc
or
mov
lock
cmp
shll
arpl
pop
push
loopne
ret
push
loopne
inc
and
clc
mov
or
xorl
nop
and
clc
push
shlb
push
mov
mov
mov
pop
and
mov
push
rcl
jecxz
inc
popa
jbe
add
xor
jne
stos
fisubl
cmp
adc
scas
mov
push
xor
and
pop
dec
mov
xchg
test
cmp
push
dec
arpl
psubq
inc
and
dec
and
sbb
mov
inc
or
andb
repnz
xor
ds
sti
mov
cltd
sbb
adc
pop
les
fildl
scas
sub
jno
add
sub
fdivl
das
pop
decl
or
insb
mov
mov
dec
sub
test
inc
inc
movsb
cmp
lods
pop
sbb
xchg
outsl
addr16
nop
imul
pop
push
or
push
inc
cs
xchg
dec
sbb
popf
fsubl
or
loopne
xor
push
sub
inc
cmpsb
add
add
icebp
add
sub
scas
add
sub
or
and
add
inc
sub
mov
sub
add
cwtl
or
aam
adc
out
mull
xchg
push
inc
ret
pop
sti
nop
sub
push
pop
movsl
in
dec
aas
leave
in
and
and
mov
push
imulb
dec
push
fcoms
pop
sbb
cmpsl
daa
repz
mov
aaa
punpckldq
ret
jne
test
icebp
pop
je
adc
dec
sub
xchg
adc
dec
ret
pop
sahf
pop
cmp
mov
sub
add
inc
jno
dec
inc
xor
sbb
adc
movsl
push
add
pusha
mov
push
or
stos
icebp
ja
push
adcl
mov
dec
push
pop
or
adc
rol
adc
push
nop
gs
mov
push
movsb
xchg
mov
movsb
sub
out
test
inc
pop
mov
bound
push
adc
in
inc
shll
cmc
and
push
pop
aaa
rorb
push
cmp
inc
adc
pusha
and
lea
mov
sbb
pop
xor
out
inc
js
mov
add
xor
cmp
push
mov
sti
or
mov
pop
cmp
pop
sub
pop
or
jb
mov
mov
out
push
sbb
imul
call
rorb
xchg
inc
inc
ljmp
push
scas
sbb
push
pop
push
and
and
sbb
cmc
ds
sub
cs
cmp
push
xor
xor
sbb
xor
jg
cmp
pop
cmp
std
cmp
aaa
data16
cmp
adc
and
mov
ret
xor
pop
loopne
pop
data16
lds
push
adc
dec
test
inc
ficoml
add
mov
je
std
int
adc
stos
shrl
les
jmp
lock
jno
out
push
fwait
fstpl
push
stos
push
cltd
movsb
or
push
adc
mov
mov
cld
and
or
xlat
negl
push
jno
or
lea
xchg
sub
mov
mov
and
mov
and
test
ret
pop
sub
xchg
scas
and
add
mov
or
cmpsl
out
and
sbb
push
pop
mov
and
or
mov
pusha
cmp
ret
mov
sub
jge
nop
ficompl
inc
dec
or
adc
or
cmp
sti
push
and
mov
jmp
and
pushf
in
in
mov
and
fcoml
and
push
inc
repnz
lock
push
pusha
push
stc
xor
sub
push
loopne
fiadds
fcomps
jge
into
and
xor
cmp
sbb
adc
lea
adc
pop
rcll
or
ret
jnp
mov
push
shl
or
popa
loope
pop
js
nop
mov
sub
fsubp
push
jae
test
jmp
aad
mov
in
nop
js
xor
xlat
push
xor
push
dec
inc
out
mov
lods
xor
xchg
mov
jns
into
and
dec
clc
push
sub
push
bound
xlat
push
mov
jb
movb
add
adc
jmp
inc
das
inc
insb
dec
fldt
dec
xor
add
in
mov
fldl
and
add
cmpsb
inc
fdivs
dec
ftst
popf
loope
and
mov
inc
xor
ss
xor
addl
and
cmp
xchg
inc
sub
bound
jne
mov
int
imul
xor
jbe
je
inc
cmpb
sbb
mov
xchg
mov
sarl
mov
or
outsl
cmp
out
cmpl
cmp
outsl
fildl
add
cmp
inc
shll
adc
xor
sbb
push
cmp
aas
dec
push
adc
jge
in
xchg
ret
pop
pop
cs
sub
sub
sbb
pop
gs
sub
and
mov
test
sub
shlb
and
adc
mov
push
push
add
shlb
push
push
mov
ljmp
iret
xor
add
adc
pop
lcall
mov
addr16
jns
and
jne
scas
sub
lea
pop
inc
pop
repnz
push
cmp
jmp
sub
jl
fucomi
pop
push
fimull
jmp
out
add
xor
movsl
or
add
inc
sub
cmp
divl
inc
cmpl
add
push
sbb
cmpsb
imul
fld
xlat
les
push
and
leave
out
fimull
mov
stc
pop
and
seto
add
adc
jo
or
push
pusha
ret
add
push
stos
mov
xchg
in
adc
adc
or
inc
enter
cmp
push
push
imul
push
sbb
repz
sbbl
test
out
das
add
orl
add
or
sub
jmp
clc
push
xchg
mov
mov
adc
push
loope
add
sbb
enter
push
mov
sbbl
and
rol
add
test
aad
or
ret
sub
out
fstpt
xchg
push
pop
mov
sub
sbb
fbld
push
cmp
inc
cmpsl
outsb
push
pop
sub
nop
test
hlt
sbb
add
insl
loopne
outsl
js
or
add
negl
push
pop
cmp
xchg
adc
pop
adc
dec
push
mov
aam
push
popa
pop
fs
or
imul
add
lcall
and
mov
adc
aam
nop
clc
xchg
and
sub
pop
or
pop
push
bound
pusha
dec
or
dec
dec
es
les
sti
enter
into
cld
aas
push
mov
insb
int3
les
dec
and
adc
fdivr
movsl
outsl
mov
clc
callw
cmp
mov
or
dec
mov
sbb
aas
imul
adc
jo
aad
xchg
and
mov
jno
sbb
test
adc
push
out
jne
inc
pop
push
add
insl
and
push
mov
lcall
ret
pop
push
xchg
cs
dec
bound
je
je
jae
test
dec
and
lods
imul
push
xchg
xor
imul
es
or
push
inc
das
mov
nop
cmp
cmp
cmp
sbb
inc
imul
sub
cmp
push
mov
xchg
es
or
and
xor
sub
add
popf
mov
out
push
xchg
push
enter
sbb
clc
and
outsb
dec
xor
push
jo
pushf
xadd
leave
sbb
getsec
lret
jbe
mov
insl
in
or
xor
dec
and
add
and
rolb
sub
add
es
outsl
sbb
dec
pop
enter
push
dec
jo
mov
sub
push
hlt
cltd
bound
jae
and
and
lds
pop
mov
jo
dec
stos
xchg
fisttpl
sub
sbb
out
xchg
mov
shlb
add
lcall
jo
js
jo
pushf
int
xchg
mov
clc
stos
fs
mov
andl
pop
in
test
pop
rolb
xchg
icebp
cmpsb
cwtl
imul
jo
lgs
test
add
mov
pop
adc
sub
rcll
sbb
enter
xchg
inc
sbb
dec
into
in
dec
fmull
sbb
gs
xor
es
inc
out
std
lds
add
inc
lock
mov
or
inc
sahf
adc
sbb
hlt
ret
pop
xchg
jns
jne
inc
cmp
shll
test
js
in
testl
mov
or
mov
sub
jno
cmp
mov
jno
hlt
mov
test
xchg
outsl
test
and
xchg
jae
daa
sar
ja
xchg
test
out
je
pusha
pushf
ret
push
jb
notb
nop
add
lds
orb
jmp
jl
dec
push
jb
xor
jne
jb
repz
adc
test
inc
fs
dec
cmpsb
adc
pusha
push
arpl
jmp
in
mov
pop
xor
mov
jns
mov
in
mov
imul
sbb
ljmp
dec
dec
dec
push
dec
push
adc
das
and
enter
movups
adc
mov
test
jne
call
nop
push
test
xor
iret
jbe
add
mov
add
mov
pop
je
je
sbb
pcmpgtb
push
icebp
or
xchg
lods
shr
gs
pushf
jbe
insb
and
jbe
dec
sbb
jecxz
and
dec
pushf
aaa
push
aam
inc
je
fidivrl
mov
xchg
insb
inc
jecxz
insb
xor
add
mov
es
in
mov
xor
fs
add
jo
sbb
loopne
dec
mov
sbb
jle
pop
pop
sti
add
je
jb
call
das
mov
inc
enter
das
push
jae
mov
mov
push
xor
pop
sbb
jb
add
or
and
xchg
or
test
and
push
les
push
xor
mov
xlat
outsb
push
adc
cmp
dec
mov
pop
and
fildll
es
mov
mov
and
shrl
ja
fdivs
push
jb
cmpsb
fs
inc
lcall
repnz
mov
mov
mov
adc
dec
xor
pop
or
push
xor
adc
movsb
mov
out
jg
pop
std
or
push
js
call
push
sub
add
push
repnz
or
repnz
clc
icebp
hlt
xchg
out
mov
das
and
mov
add
aaa
in
adc
leave
xlat
add
push
mov
inc
xchg
outsl
mov
mov
rcr
xchg
push
repnz
or
fmul
rcll
in
adc
or
or
pop
repnz
add
push
mov
jns
push
test
ret
add
and
add
int3
mov
or
add
fisttpl
add
xchg
sbb
fnsave
mov
pushl
mov
push
rol
enter
mov
jp
jnp
es
jo
pop
dec
pop
jp
inc
push
nop
mov
jno
lock
inc
in
mov
mov
push
and
imul
leave
mov
jnp
add
filds
push
nop
cmpsl
dec
enter
jge
leave
filds
adc
push
inc
pop
dec
outsb
pop
dec
sub
cmp
clc
icebp
out
fiaddl
ror
fs
je
inc
xchg
mov
mov
dec
insb
mov
xorl
pop
push
xchg
icebp
sbb
orb
mov
repnz
sahf
loopne
adc
mov
mov
or
jecxz
and
mov
adc
roll
jo
mov
mul
js
jno
mov
jg
es
mov
mov
push
inc
lahf
push
mov
enter
sub
out
push
xchg
push
mov
mov
cmp
sbb
and
ret
or
jae
inc
sub
aaa
ss
cmp
fdivrs
jae
pop
leave
inc
aad
push
jnp
dec
lcall
push
mov
fs
mov
imul
dec
dec
ss
jle
cmovb
repz
ss
or
stc
frstor
in
dec
ds
adc
sub
out
ss
sub
lret
scas
sub
leave
pop
push
mov
insl
jb
js
and
and
jg
inc
fstl
icebp
imul
jns
adc
add
push
lea
rclb
cmpb
aam
dec
jae
add
adc
mov
loopne
data16
shlb
out
loop
push
add
dec
pop
pop
xchg
popf
clc
mov
cltd
std
sbb
jg
add
xchg
out
mov
mov
mov
xor
incl
pop
mov
rorl
cmp
mov
pop
add
or
sbb
inc
jbe
mov
mov
and
nop
pushf
add
xchg
push
je
adc
cltd
movsb
add
push
test
mov
sets
ret
cmpsb
nop
das
in
std
push
cltd
movsb
push
sbb
inc
pop
rorb
inc
xchg
cmpsl
fcomp
jae
adc
cmpsb
lret
xchg
pop
pop
push
dec
roll
ja
push
or
dec
imul
or
inc
jnp
sbb
out
inc
ja
add
pop
inc
pop
test
sub
jne
sbb
enter
pop
test
push
inc
test
aaa
jbe
dec
inc
lea
xchg
add
cwtl
inc
push
xchg
push
lea
repz
cwtl
inc
xchg
vmread
xchg
adc
aam
cmp
jb
cmpsb
ret
jb
fs
pushf
add
inc
mov
pop
insb
fwait
imul
cwtl
es
lcall
mov
xor
xorb
imul
cwtl
das
push
das
or
cli
xchg
shlb
fmuls
lds
xorb
sbb
aam
lret
pop
push
cwtl
xchg
out
or
sti
pop
movsl
test
rclb
leave
outsl
popa
sbb
mov
into
xchg
adc
cmp
mov
push
je
inc
cwtl
adc
iret
test
pushf
ret
add
fadds
nop
xor
add
les
mov
mov
or
fwait
xchg
xchg
push
test
test
add
xchg
test
or
call
mov
jbe
ret
das
cwtl
mov
pop
insb
and
sub
push
popf
sbb
add
loopne
pop
bswap
xchg
stc
fisttps
sbb
xor
xchg
push
xchg
or
dec
pop
subl
jmp
adc
pusha
or
xchg
fcoml
or
or
jne
insb
mov
xchg
mov
pop
movsl
rcll
mov
pusha
fisubrs
pop
pushf
push
call
pop
pop
rsm
or
ss
loopne
push
or
and
enter
dec
sbb
or
xchg
mov
nop
pop
stos
lods
loopne
or
mov
inc
xchg
rclb
pop
test
and
add
cmpsl
mov
dec
jl
cmp
mov
stc
pop
cltd
sbb
int
xchg
sbb
push
pop
sahf
loopne
outsb
mov
incl
or
xor
mov
xorb
cmpsb
jge
nop
pop
push
jo
cwtl
lods
jae
lcall
adc
xor
and
sub
xor
xor
shll
inc
inc
dec
dec
rorb
cli
andb
in
xchg
pop
and
test
adc
rcrb
and
pop
push
mov
cmpsl
cltd
adc
test
sub
pop
cmp
data16
xor
add
add
outsl
pop
sbb
jb
fdivl
icebp
in
sbb
cmp
or
jle
lret
in
ljmp
jbe
mov
data16
or
lock
jp
test
inc
xor
adc
cmpsl
adc
enter
pop
nop
mov
xchg
push
sub
es
sbb
push
mov
sbb
push
xchg
push
xchg
call
pop
mov
add
or
mov
outsb
loope
mov
in
mov
add
mov
test
ret
adcl
inc
mov
inc
mov
lds
xchg
dec
adc
pop
or
or
xor
and
aas
dec
xchg
pop
xchg
jge
leave
inc
push
or
lea
sbb
out
add
xor
ds
testb
or
mov
mov
enter
push
inc
dec
push
in
or
js
cmp
or
add
aas
mov
xor
clc
mov
ss
inc
xor
add
adc
mov
dec
loope
in
out
clc
jnp
loop
mov
inc
add
sub
sub
xchg
dec
je
or
fchs
xlat
or
lcall
sarl
pop
xor
je
xlat
mov
inc
lahf
pop
sub
rorl
shl
cmpsl
aad
enter
mov
cmp
xor
in
or
pusha
mov
and
movsb
push
adc
add
mov
rorl
jne
outsl
mov
pop
xlat
mov
bound
out
inc
xor
jle
or
cmp
and
popf
outsb
leave
test
andb
adcb
dec
mov
aas
out
lcall
push
inc
hlt
mov
fs
add
ret
stos
inc
int
pusha
mov
mov
inc
pusha
idivl
pop
xor
pop
adc
jae
in
xchg
loopne
icebp
nop
cld
cmpl
push
xchg
bound
fadds
shlb
fidivrl
in
add
jl
jle
dec
pop
daa
mov
loope
dec
dec
or
mov
data16
sbb
fstpt
push
and
sbb
pop
repnz
xorb
cmp
insb
loopne
mov
push
ffreep
cltd
add
or
inc
mov
mov
push
inc
lcall
xchg
mov
pop
and
mov
shlb
addl
aam
push
mov
mov
cmp
lock
inc
fadds
inc
mov
cmp
je
mov
pop
in
cmp
inc
clc
fwait
xchg
iret
and
aas
test
add
test
adc
dec
data16
xchg
shlb
testb
sbb
dec
and
inc
push
xchg
dec
push
test
cmpsb
test
fs
imul
mov
add
outsl
add
pop
call
adc
movb
sub
inc
mov
data16
mov
inc
mov
les
adc
adc
fcomps
adc
pop
dec
mov
or
mov
jle
xor
xchg
mov
adc
push
imul
insb
adc
dec
inc
in
js
push
jo
jno
fdivrl
mov
stos
sbb
adc
adc
xchg
test
js
subl
mov
jns
inc
add
pop
dec
cmp
or
mov
pop
fiadds
push
dec
dec
or
lret
mov
cmp
cmp
sbb
mov
mov
adc
je
shll
xor
jne
adc
push
adc
movsb
mov
xor
and
mov
mov
xchg
pop
mov
jecxz
xchg
scas
out
sbb
pop
push
add
in
subl
outsb
test
fmull
xor
mov
xchg
pop
pop
mov
aaa
xchg
lret
adc
pop
push
jmp
xchg
push
dec
inc
inc
pop
cmp
sti
insb
out
inc
in
fldcw
and
test
mov
leave
push
add
push
pop
fiaddl
adc
jle
out
push
jnp
push
xchg
inc
pop
pop
scas
mov
pop
into
cs
je
js
inc
add
sub
insb
sbb
fld
rol
js
ret
push
mov
or
daa
and
je
arpl
shlb
sbb
push
pop
clc
or
add
in
mov
dec
sbb
or
popa
int
mov
or
mov
cmp
je
push
mov
pop
push
sub
aaa
enter
out
inc
xor
and
rcll
lds
js
and
les
cmp
aad
aaa
js
xor
pop
das
je
mov
and
and
shrl
cmpsl
jl
and
pop
push
and
subb
jne
lret
xchg
mov
out
or
mov
mov
xor
ret
test
jb
sarl
addl
test
jecxz
sbb
push
mov
mov
in
or
js
push
dec
cmp
mov
inc
adc
rol
pop
sahf
aam
daa
jno
iret
and
adc
or
nop
cmp
inc
stos
add
or
daa
sbb
cmpb
inc
lds
or
pop
test
pop
jnp
dec
push
outsb
xor
mov
iret
xor
pop
repnz
mov
mov
daa
mov
outsl
rorl
daa
dec
sub
cmpl
aas
push
jmp
adc
pop
sub
popa
push
mov
mov
add
mov
sbb
movsl
and
or
inc
ud2
or
or
lret
cmpsb
lret
rclb
xor
sbb
pop
les
add
call
xor
add
xchg
insb
xchg
outsl
cmp
pop
xchg
lcall
dec
arpl
pop
jbe
test
test
push
pop
rcll
mov
test
jns
cmp
inc
les
mov
nop
pop
outsb
pop
ud2
nop
mov
xor
push
add
dec
cmpsb
push
outsb
nop
xlat
pushl
outsb
xor
dec
loop
push
inc
mov
movsl
leave
aam
add
adc
outsb
enter
out
nop
dec
jmp
add
mov
orb
add
fwait
rcll
dec
pop
dec
and
lcall
imul
jo
popa
out
jbe
out
jg
mov
ret
dec
inc
cltd
icebp
sbb
xchg
lds
out
enter
and
push
in
shlb
pop
stos
scas
adc
or
test
pop
cmp
sahf
mov
add
pop
daa
pushf
call
popa
fsts
and
jg
ljmp
mov
adc
pop
das
popa
xchg
das
push
pop
fdivrl
popa
nop
rcl
fcoml
nop
inc
jns
jbe
jae
and
mov
mov
inc
dec
sahf
cmp
mov
in
stos
insb
lods
test
pusha
mov
xacquire
cli
fcomp
push
mov
xchg
fcomp
inc
sub
aaa
jne
jg
xor
rorl
mov
insl
repz
rcrl
ret
push
lret
rcr
imul
dec
imul
push
and
adc
cs
dec
push
cmp
roll
insl
ss
sub
lea
scas
push
mov
cmp
pop
popf
lcall
mov
cwtl
pop
movsb
rolb
movsl
es
inc
lahf
fisttpl
push
cmpsl
rcr
cld
cmp
push
xor
inc
inc
popa
lods
sbb
repz
repz
mov
mov
cmp
rorl
outsl
cmp
sbb
sbb
sbb
mov
or
inc
repz
call
insb
int3
lods
mov
nop
daa
adc
sub
and
sbb
sbb
leave
mov
add
xchg
inc
ljmp
or
jmp
mov
cmpsl
pop
movsb
mov
testl
dec
imull
nop
push
lea
aas
pop
mov
enter
aam
in
jle
or
dec
and
xchg
jo
push
mov
mov
and
jo
add
mov
bswap
pop
mov
lds
pop
push
dec
inc
scas
xor
jne
mov
adc
dec
or
enter
add
inc
outsb
inc
push
fs
or
lds
fsts
dec
or
inc
aaa
mov
adc
or
ljmp
int3
and
xchg
and
aas
fs
enter
xor
sbb
xchg
pop
or
fs
add
push
insl
dec
dec
jb
add
or
xor
dec
inc
jae
andb
jno
dec
popa
or
sbb
mov
dec
lcall
arpl
popf
call
nop
add
inc
and
push
ret
repnz
fbstp
and
or
push
movsb
mov
pop
sbb
sbb
dec
fsubrs
mov
mov
les
and
inc
jo
das
xor
fsubrs
add
or
add
pop
lret
adc
sbb
outsb
popf
mov
adcl
sub
jecxz
mov
divb
pop
push
cmpsb
sub
cmpsb
push
add
xchg
loop
mov
xlat
popa
addr16
lcall
cwtl
pop
mov
inc
mov
jp
repnz
xor
mov
dec
pop
sub
inc
mov
imul
mov
loope
or
sub
adc
popf
imul
push
movsb
cmp
jecxz
test
pop
xor
bswap
sahf
inc
xchg
pop
adc
push
aaa
adc
aam
ret
fdivrl
movsl
rcr
or
pop
push
cmpsb
test
inc
mov
stos
push
std
dec
mov
scas
push
cmp
inc
adc
sbb
loop
push
adc
mov
pop
lock
add
push
sub
lahf
into
add
pushf
push
jno
inc
xchg
jmp
sbb
pop
and
push
xchg
xchg
inc
inc
or
sub
xchg
adc
xchg
jb
test
mov
cli
test
es
test
in
test
sahf
push
dec
movsl
cmp
lcall
xor
adc
stc
adcl
mov
inc
aaa
repnz
or
jnp
adc
mov
adc
push
test
and
add
xchg
sub
xor
dec
or
cmpl
jne
mov
fstl
push
pop
addl
push
das
ret
cwtl
inc
sub
repnz
push
or
adc
adc
push
cmpsb
sbb
jecxz
and
in
fcomip
push
xchg
add
daa
add
popf
pop
hlt
les
xlat
dec
push
out
fwait
adc
lock
pusha
pop
in
rclb
mov
hlt
sub
lcall
sbb
mov
insl
push
out
push
xor
lcall
scas
push
adc
cmp
clc
divl
rcrb
push
or
xchg
mov
push
insl
or
or
bound
adc
mov
js
mov
loopne
in
adc
lods
jecxz
mov
lcallw
arpl
inc
xor
lcall
add
loopne
pop
decl
jne
push
push
cmpsl
mov
fadds
fwait
pop
sbb
or
fwait
jl
push
xchg
jo
lods
leave
jne
mov
mov
lahf
mov
mov
add
call
mov
lret
fwait
jg
cmp
outsb
jae
jns
push
sbb
jno,pn
arpl
pop
movsl
sti
sub
shl
or
mov
mov
cmp
cs
cld
filds
push
lods
xor
je
dec
xor
dec
adc
inc
or
mov
jle
stos
jbe
mov
repnz
and
imul
push
leave
cmp
and
fiaddl
dec
adc
ret
int
adc
loopne
lcall
inc
adc
movsl
sbb
stos
fisttps
and
insl
and
xchg
or
negb
adc
lods
pushf
push
les
outsb
mov
mov
push
add
gs
mov
enter
inc
fcomps
sub
lock
iret
ss
push
lahf
cld
xor
js
sbb
inc
inc
xchg
dec
int
add
sub
pop
rcl
hlt
fdiv
cmp
fnstenv
loope
inc
jne
cmp
popa
in
test
or
mov
push
cld
dec
dec
push
shl
and
cmp
adc
fdiv
rorl
adc
je
repnz
adc
mov
test
pop
xchg
or
push
jle
add
lods
test
sbb
lds
scas
shl
push
or
sahf
xor
mov
faddl
inc
xor
and
sub
rcl
ljmp
lods
aad
mov
pop
aam
adc
sub
stos
loopne
jb
pop
aam
iret
les
ret
and
or
mov
scas
notb
mov
sub
mov
in
dec
or
int3
pop
fadds
imul
pop
inc
dec
hlt
push
sub
stos
sarb
ret
sbb
xchg
outsl
add
mov
sbb
inc
add
adc
sub
addr16
inc
add
xchg
loop
inc
mov
lods
orb
add
add
test
fisttps
or
sbb
pop
push
xchg
xchg
dec
dec
xlat
dec
xchg
dec
push
and
mov
adc
adc
xor
and
in
inc
movsl
in
mov
cmc
fsubs
jns
cmpb
dec
adc
cwtl
sbb
pop
mov
stc
rorl
inc
icebp
lret
sbb
or
test
mov
fs
jb
push
adc
adc
adc
sub
inc
orb
stc
insb
bound
xor
and
test
insl
mov
mov
jmp
push
pop
dec
cld
aaa
movsb
add
jno
out
push
andl
and
int
lock
add
push
out
add
out
sti
hlt
leave
shrb
hlt
mov
cs
push
mov
cmp
mov
sbb
push
mov
dec
loop
xchg
adc
loope
scas
inc
cld
aaa
sbb
dec
sbb
xor
andl
fstpt
cltd
out
adcl
nop
mov
adc
test
jg
mov
pop
cltd
dec
sahf
adc
mov
and
mov
or
push
jae
imul
add
push
in
in
sub
mov
js
jne
cs
lock
pop
push
in
mov
stos
lret
mov
xlat
mov
pop
in
js
inc
xor
inc
std
adc
imul
mov
xorb
jmp
inc
fstpl
in
lods
cmpsl
xor
inc
dec
xor
bound
nop
push
and
fadds
imul
rcrb
es
add
inc
lods
mov
in
dec
into
pushl
mov
insl
inc
mov
push
mov
out
mov
xor
inc
pop
adc
xor
insl
jge
std
jg
jmp
out
dec
jne
or
mov
ret
nop
and
pop
pop
dec
enter
push
mov
and
clc
pop
xchg
or
or
add
add
clc
test
xchg
dec
push
mov
pop
cltd
aas
and
loope
cs
dec
xchg
test
xchg
xchg
inc
in
sarl
sub
fmuls
in
sarl
xchg
daa
mov
test
cmpsb
and
mov
add
scas
push
adc
adc
adc
fwait
mov
or
or
pop
rorb
test
outsl
shlb
pop
adc
pop
mov
imul
push
leave
jecxz
mov
sub
and
push
mov
inc
push
pusha
push
xchg
fstl
test
sbb
enter
fdivr
and
xor
outsb
sub
xchg
sub
ret
pop
call
adc
int3
mov
sbb
adc
or
xor
addb
nop
xchg
cmp
cmp
cwtl
pushf
mov
cmp
cmp
cmp
cmp
cmp
int3
rcl
cmp
cmp
fcomp
loopne
cmp
cmp
call
sbb
cmp
cld
xor
add
pushf
pushf
pushf
or
adc
pushf
pushf
pushf
sbb
and
pushf
pushf
pushf
sub
dec
popa
inc
lods
cmp
faddl
push
xchg
inc
shlb
sub
sub
pop
arpl
xor
jl
pop
pop
add
xchg
enter
mov
xchg
jne
lods
cmp
repnz
int3
xor
nop
int
test
adc
dec
mov
nop
movsb
xchg
int3
insb
push
in
cwtl
hlt
pushf
ret
and
andl
nop
lods
nop
int
cmp
mov
add
push
in
mov
mov
add
nop
jl
xchg
enter
jns
int3
fdivl
clc
aam
adc
cmpl
sbb
jae
loopne
in
cmp
repnz
call
iret
in
in
lock
sahf
add
hlt
cmp
pop
sbb
out
cld
js
add
add
enter
or
or
sahf
add
sbb
adc
cmp
sbb
jns
in
and
enter
and
sub
cmp
repnz
insb
xor
inc
int
insl
ja
adc
inc
fistl
add
addl
jecxz
shrb
cmpsb
outsl
push
aaa
jnp
xor
repz
divb
imul
jb
ja
push
dec
dec
sub
movsl
adc
add
add
or
or
arpl
fwait
inc
iret
jb
addr16
adc
mov
lret
push
lods
pusha
mov
mov
fsubrs
stos
imul
jae
addr16
pop
add
add
je
jae
add
inc
xor
adc
dec
gs
dec
xchg
adc
nop
mov
sbb
loopne
adc
ds
pop
test
ja
push
mov
nop
mov
pop
out
outsb
jb
outsb
outsb
push
sti
pop
and
shlb
inc
sub
xchg
gs
outsl
inc
add
in
mov
stos
xchg
imul
adc
ret
imul
sbb
mov
xor
xchg
popa
inc
out
sbb
popa
inc
add
dec
ds
stos
lds
fs
cmovg
fists
lods
or
ja
lds
adc
inc
sub
into
jae
inc
movsb
pop
imul
jne
push
push
jnp
imul
mov
aas
add
mov
or
imul
mov
jg
push
mov
xlat
rorb
scas
lret
xor
outsl
rorl
fsubrs
push
mov
shrl
fs
mov
push
adc
subb
xlat
jae
imul
movsl
jmp
shll
fwait
sbb
xchg
roll
lds
add
clc
jbe
call
push
inc
sbb
add
rol
mov
jne
push
push
mov
mov
out
and
sub
enter
fsubr
test
fsubs
es
ljmp
call
mov
push
cmp
rcll
pop
shll
xlat
leave
movsb
add
or
and
rclb
fstps
in
lret
xor
jns,pn
insb
fs
xor
aaa
jae
and
sbb
out
cmpsb
ret
mov
inc
inc
xchg
repnz
cltd
dec
mov
dec
rcrb
loopne
in
out
fs
push
rclb
xchg
sbb
out
adc
inc
pop
mov
cmp
pop
push
nop
out
xchg
pusha
inc
dec
cmp
js
jbe
insl
sbbb
push
mov
mov
inc
inc
push
dec
adc
dec
pop
pop
cmp
or
mov
xchg
movsl
rorl
orb
push
mov
push
nop
addr16
loop
push
stos
mov
shll
dec
xchg
dec
push
mull
inc
rcll
and
test
xor
rorb
and
int3
dec
pop
pusha
inc
add
nop
push
out
mov
mov
jo
mov
pop
and
mov
and
or
add
insb
sbb
in
int
xor
dec
inc
adc
or
dec
add
int3
push
subl
adc
inc
daa
je
adc
icebp
adc
jo
int
push
xor
sbb
adc
imul
lock
jo
jae
adc
aaa
mov
or
insb
pop
movsl
mov
jo
adc
add
mov
pop
pop
shrl
loopne
push
cli
iret
and
iret
outsb
xor
add
fimull
add
daa
adc
add
add
enter
outsl
outsb
je
inc
or
push
rclb
xlat
xchg
sub
pop
cmc
neg
les
sahf
je
add
imul
movsl
add
jge
jg
push
inc
notb
insb
push
cmpsl
outsl
jns
push
or
test
inc
add
or
add
pop
clc
and
lock
sbb
mov
add
test
lcall
dec
xchg
mov
in
inc
cs
ja
popf
pop
les
sbb
in
jmp
pop
mov
inc
test
or
scas
fs
xor
xor
push
fidivl
sub
mov
sbb
inc
outsl
arpl
mov
fisttpll
or
dec
daa
jl
push
dec
jmp
add
fwait
or
add
jo
xchg
cmp
sub
out
es
add
cwtl
add
mov
add
xor
pop
ret
pop
push
and
stc
insl
push
cwtl
mov
or
inc
cmpsb
add
add
pop
std
mov
xlat
xorb
pop
push
dec
xchg
xchg
xchg
out
icebp
add
adc
xchg
xchg
xchg
xchg
jl
mov
leave
rorl
sub
js
sbb
leave
fwait
mov
add
test
test
fcoms
test
xor
mov
loope
push
clc
pop
dec
jnp
push
shl
add
in
xchg
js
jl
movsb
mov
jo
push
xor
fdivl
call
jecxz
lea
in
inc
js
dec
jl
nop
jne
or
or
or
inc
push
push
mov
subb
testb
in
inc
jmp
sbb
imul
or
inc
clc
lods
xor
in
inc
mov
xor
sbb
lods
push
test
mov
divb
shrb
call
mov
rol
push
insb
pop
push
lock
movsb
rolb
inc
sbb
movsl
hlt
mov
and
dec
dec
mov
repnz
aam
push
aad
push
adc
xchg
xor
aad
adc
test
add
add
mov
add
inc
push
popa
adc
or
push
or
or
pop
loopne
inc
outsb
aad
push
cmp
mov
adc
jne
scas
xchg
pop
in
push
xchg
scas
mov
imul
lahf
enter
cmp
adc
add
addb
pop
dec
add
xchg
xchg
std
fs
mov
push
dec
inc
or
adc
and
out
je
sub
push
lea
scas
repnz
or
mov
sahf
out
inc
inc
push
jecxz
ret
xlat
push
mov
mov
lock
fcomps
pop
fdivs
or
inc
xlat
add
int3
push
jo
cmp
fldcw
adc
test
repz
add
mov
and
or
add
data16
and
or
ret
pop
adc
dec
pop
add
mov
in
lock
or
bound
cmp
cwtl
xchg
xchg
sbb
repnz
ficoms
fnstcw
rclb
xor
inc
add
test
add
fnstcw
dec
dec
mov
xor
cmpsl
push
enter
addr16
mov
into
mov
ljmp
in
ficompl
fld1
sbb
xor
imul
fcompl
sub
iret
push
push
cmpsl
push
insb
rcr
sub
inc
and
jae
cmp
int
ljmp
mov
mov
mov
inc
fdivrs
lret
mov
inc
add
add
dec
or
pop
xchg
jns
mov
xorl
xor
sarl
sbb
add
xor
int3
int3
sub
and
sub
inc
pop
or
inc
pop
fisttpll
xchg
push
or
enter
push
inc
mov
xchg
dec
push
sti
pop
in
repz
stc
mov
and
das
cmp
jg
nop
fiaddl
pop
mov
pop
testb
pusha
inc
nop
mov
scas
loope
cmp
jecxz
push
pmulhuw
pop
sub
push
fs
stos
push
in
cmpb
inc
push
call
repnz
cmpsb
pop
cltd
add
add
test
mov
aam
pop
and
loopne
aas
and
mov
mov
cmpsl
or
dec
push
push
jg
xchg
adc
faddl
incb
jns
pop
xlat
cld
mov
jmp
adc
add
aaa
mov
jg
adc
ret
jge
loopne
and
inc
sbb
push
mov
xor
lods
dec
and
cmp
test
adcb
ficompl
jp
fdivs
dec
or
adc
mov
mov
add
aam
mov
js
scas
mov
add
and
inc
daa
sub
cmp
cmc
shll
sbb
fcoms
sbb
inc
xchg
aam
push
and
push
inc
outsb
inc
je
lea
fnclex
es
lea
pop
and
xchg
fs
or
mov
mov
jmp
jae
add
pop
push
mov
pop
je
fbld
push
leave
push
add
add
sbb
and
add
push
iret
fcomp
mov
rorb
enter
scas
loope
fs
and
mov
dec
fsubr
sub
push
xchg
jae
sti
sub
mov
dec
popa
ficomps
je
leave
push
push
or
mov
lods
adc
sti
int
and
add
inc
ds
push
push
inc
in
xor
xchg
mov
jo
adc
xor
sarb
sbb
jmp
mov
mov
pushl
fwait
ret
andb
xor
aam
xchg
adc
cltd
and
into
sub
or
add
bound
ret
in
mov
loope
mov
xlat
loopne
fwait
mov
aad
in
pusha
in
jge
sub
rcrb
inc
adc
pop
sysret
push
inc
push
jno
bswap
ds
push
push
pop
int3
push
sbb
mov
loop
lods
pop
rol
add
nop
xchg
push
dec
sbb
or
mov
add
push
enter
adc
mov
add
adc
loopne
sbb
sarl
aam
outsl
jno
aam
ja
call
add
cld
push
es
shlb
push
xor
cmp
cmp
mov
dec
insb
sub
xchg
sbb
push
rclb
adc
or
push
es
mov
pop
ficoml
dec
cltd
call
stos
enter
or
or
xchg
adc
push
sbb
mov
jb
adc
repnz
push
bound
cltd
ret
fists
pop
rcrb
jo
push
in
pop
xor
vpsllvd
adc
and
sbb
pop
push
jo
xlat
aad
scas
aaa
sub
ret
push
in
xchg
or
dec
sub
dec
hlt
lret
test
push
adc
ret
inc
dec
decl
adc
in
jecxz
aam
jle
cmp
pop
aaa
jp
dec
leave
or
sbb
pop
clc
mov
cmpb
clc
stc
sub
loop
xchg
mov
adc
or
xor
jl
daa
or
xchg
push
ficompl
push
roll
je
sbb
cmp
add
add
sbb
xor
scas
cmpb
lea
jmp
cld
std
lods
fsubs
sbb
into
cmpsl
iret
dec
mov
and
adc
sbb
daa
pop
es
fadds
cmp
repz
pop
clc
jb
inc
rolb
sahf
adc
jb
movsl
out
and
cmc
mov
in
lods
lahf
aad
jmp
mov
mov
clc
lahf
lock
and
or
sbb
icebp
rolb
popf
test
jmp
mov
xchg
mov
xchg
mov
push
cmc
pushf
xchg
xor
dec
jl
dec
cmp
jne
mov
xor
movsb
mov
fadd
cmp
das
adc
adc
mov
sub
notl
jmp
add
mov
xor
and
aam
xchg
adc
adc
or
or
or
mov
out
cli
adc
je
mov
mov
add
xchg
dec
popf
fisttpll
xchg
dec
mov
adc
lcall
or
or
out
mov
xor
mul
mov
fsub
push
imul
push
push
add
inc
rcll
pop
neg
mov
adc
sbb
jne
and
sbb
imull
xchg
mov
in
push
jmp
roll
fisttpl
ss
adc
sub
sbb
xchg
hlt
pop
inc
mov
xchg
mov
addr16
movb
sub
sbb
sbb
adc
icebp
lock
xor
gs
in
cmpl
sbb
movl
dec
sarb
test
out
es
push
cmp
movsl
fwait
sarb
shr
in
pop
mov
cmp
xchg
inc
and
push
dec
jne
lds
inc
call
leave
ret
lock
adc
push
cmp
xor
das
lods
jnp
jecxz
rclb
dec
icebp
mov
xor
jne
xchg
daa
mov
pop
cwtl
in
add
inc
das
inc
push
lea
add
pushf
sub
adc
push
ds
rolb
mov
ja
outsl
sbb
or
add
outsb
fnstenv
inc
xchg
nop
pushf
loopne
or
ror
push
xor
dec
inc
pop
cmp
or
xlat
or
adc
or
bound
push
xchg
push
adc
call
lods
cmpsb
aaa
jb
jb
popa
sbb
xchg
sub
sub
cmpsb
xchg
cmp
data16
loop
or
in
ret
test
bound
sbb
push
arpl
insb
insb
orb
add
or
shlb
test
or
je
jae
adc
adcb
fstl
adc
insb
push
imul
jnp
or
shll
gs
popa
mov
mov
push
popa
clc
test
add
add
lock
adc
inc
jb
gs
outsb
add
adc
fs
adc
and
dec
inc
adc
cmpl
daa
inc
inc
pop
outsb
fldt
adc
fldcw
sbb
jl
adc
sub
shrl
xlat
sbb
ljmp
lcall
cmp
cmp
jecxz
push
in
pop
xor
mov
cmpsb
fistpl
xlat
sbb
push
loopne
and
mov
mov
rcrb
sub
dec
cmpsb
lods
iret
pop
mov
adc
sbb
inc
shll
ret
pop
adc
dec
imul
test
mov
and
add
mov
adc
insb
sub
movsl
and
fisubl
push
adcl
sub
or
xchg
int3
push
arpl
mov
pop
mov
inc
js
arpl
in
xchg
lods
movsl
cmpsb
out
and
getsec
or
cmp
adc
sbb
inc
test
cwtl
mov
jae
sub
jns
pop
pop
sbb
test
addb
sbb
or
add
lock
push
mov
jbe
sbb
mov
or
mov
cmp
test
and
mov
mov
dec
pusha
mov
pop
fistl
or
and
addl
adc
rcrl
popf
and
xchg
push
fcoms
add
bound
lods
adc
mov
mov
jne
outsb
in
add
xchg
push
imul
adc
ret
jns
push
imul
jp
insl
rorb
adc
cmp
roll
dec
pop
orl
xchg
sbb
cmpsb
popa
aad
xor
in
sbb
sbb
dec
mov
push
bound
aad
xor
sbb
mov
or
xor
or
push
xor
mov
and
add
es
xor
mov
mov
xchg
movsl
adc
inc
dec
mov
repnz
popa
nop
loopne
fsubrs
fcompl
push
push
xlat
and
sbb
jo
sbb
pusha
and
roll
or
push
fldcw
fsubs
test
push
popa
insb
add
ja
insl
test
das
jbe
mov
push
jns
xor
add
notb
sbb
mov
div
and
jbe
fsubl
orl
sbb
insb
nop
xchg
or
mov
mov
xchg
add
dec
and
inc
dec
push
insb
xor
cltd
int
xor
or
inc
gs
icebp
sbb
push
inc
or
push
xchg
addr16
add
addr16
add
enter
scas
adc
mov
and
and
in
add
or
xlat
rolb
sbb
or
jbe
outsb
or
pusha
add
adc
clc
ja
pop
shrl
sbb
jbe
or
fdivl
notl
and
jbe
nop
xlat
adc
sbb
or
addr16
cmp
test
sbb
mov
pop
jae
pop
test
jnp
dec
add
xchg
sbb
dec
daa
mul
xchg
inc
or
fdecstp
loopne
das
xchg
pop
add
adc
fsubrs
jne
imul
es
pop
pop
mov
notl
fs
jb
nop
sti
call
xchg
imul
xor
pop
mov
movsl
bound
sbb
or
sbb
xchg
jbe
imul
jbe
stos
or
inc
adc
in
pop
fidivl
adc
sub
xchg
daa
mov
insb
pop
bound
xchg
adc
stos
imul
add
int
xor
jne
xor
cmp
in
stc
jae
call
jae
inc
je
insb
add
sbbb
insb
test
lds
jbe
mov
sub
inc
sub
and
mov
push
cmpsl
fcomp
lods
jbe
cmpsl
sub
adc
sub
add
pop
add
lds
sub
pop
insb
mov
and
add
pusha
sub
in
push
sub
andl
mov
xor
sub
cli
daa
cvttps2pi
jo
outsb
mov
and
andb
mov
outsl
add
adc
sbb
outsl
daa
or
or
mov
push
fsubrs
outsl
mov
mov
adc
fmuls
mov
bound
or
xlat
push
movsl
or
lahf
test
daa
sahf
and
aam
aas
nop
inc
and
sub
mov
adc
jb
sbb
push
pop
idiv
adc
pop
add
adc
je
cltd
nop
movsl
or
fs
jae
jae
push
sbb
inc
es
jae
xchg
or
cmp
jae
daa
xchg
and
cmp
adc
test
aas
cmp
jo
popa
adc
adc
push
adc
and
fimull
push
dec
out
popa
insl
jae
pop
xor
or
jmp
pop
or
pop
ret
add
jne
lock
push
sbb
inc
xlat
dec
or
or
and
sub
and
sub
sti
cwtl
icebp
js
sbb
jle
test
or
or
sub
and
and
dec
or
jnp
mov
pop
jge
or
jnp
flds
adc
sub
or
je
and
xor
or
mov
fidivl
or
mov
sub
xor
and
dec
mov
pop
and
inc
fs
adc
push
sbb
ret
shll
pop
pop
push
jecxz
xor
xor
cmc
adc
inc
dec
sub
xor
sti
sbb
lahf
inc
outsl
je
cs
mov
icebp
xor
mov
icebp
xor
adc
pusha
adc
outsl
jo
adc
adc
sub
add
out
rcrl
mov
and
mov
cmp
sub
loop
dec
mov
aaa
push
xor
fisttpl
mov
nop
pusha
cmp
mov
xor
push
cmc
cmp
add
add
or
fs
add
mov
sti
sbb
outsl
cmp
fsubl
loopne
lods
movsl
adc
inc
and
mov
push
sbb
add
daa
imull
or
sbb
sbb
sub
adc
pop
test
push
sbb
movsb
movsl
sbb
add
mov
mov
jnp
dec
mov
mov
cld
adc
xor
dec
mov
cmpsl
push
pop
mov
mov
inc
insl
mov
mov
adc
mov
insl
orb
adcl
pop
sbb
push
sub
fdiv
sbb
pop
or
pop
repz
push
rclb
cmp
sub
adc
xor
sbb
ficompl
sbb
or
cmpsl
adc
push
imul
insb
sbb
push
cmp
cmpsl
and
cmp
adc
push
test
xchg
shll
inc
adc
les
fsubs
adc
mov
push
daa
in
sub
add
jecxz
dec
add
inc
or
pop
push
bound
mov
sahf
test
push
imul
test
and
push
adc
pop
sbb
movsl
and
or
push
dec
shrl
jg
push
jbe
mov
outsl
movsl
or
fadd
xchg
adc
dec
adc
pop
xchg
adc
mov
jo
xor
xchg
pop
adc
xor
or
mov
add
add
insb
jno
popa
jno
cmp
push
pusha
das
daa
je
push
outsb
mov
mov
insb
sbb
mov
adc
dec
and
pop
sub
sub
sub
mov
push
sub
test
leave
int
and
ret
negl
fdivs
dec
push
or
xchg
jne
insl
pop
pusha
dec
or
daa
aam
sbb
sbbl
and
lods
push
pop
daa
mov
sub
add
mov
pop
lds
adc
sub
bound
roll
aas
pop
or
jg
sub
aas
je
in
arpl
outsb
xor
mov
mov
mov
mov
outsb
imul
xor
addr16
xor
or
adc
fs
fldenv
or
fstpt
dec
das
sbb
add
push
pop
xor
insb
jns
push
push
push
ret
xor
or
pop
sbb
in
loope
shrl
ja
and
shlb
insb
mov
sahf
mov
outsb
popa
and
adc
mov
push
push
sub
and
sub
sbb
adc
jl
shll
add
xchg
ficompl
das
mov
adc
js
js
repnz
popa
js
js
push
in
js
adc
ljmp
jbe
mov
and
daa
insl
imul
pop
and
lods
ja
push
adc
and
sbb
pop
pop
out
push
mov
out
xchg
mov
xchg
dec
or
add
mov
rolb
and
pusha
pushf
and
mov
mov
xchg
adc
in
push
lcall
or
pop
dec
and
add
cwtl
inc
xor
lods
subb
sub
xorb
xchg
pop
test
js
in
cmp
js
js
js
mov
xchg
insl
xor
adc
xchg
dec
cltd
inc
xor
sti
pusha
mov
aam
adc
sbb
push
mov
fiaddl
fidivl
int
push
mov
push
inc
mov
fcmovb
mov
sub
fldt
stos
or
mov
lods
sub
mov
bound
lods
inc
xchg
sbb
or
xor
in
push
push
adc
movsl
popa
or
inc
push
add
and
or
mov
add
push
fcoms
nop
dec
dec
shll
cmc
and
inc
and
sub
or
mov
and
cs
and
nop
inc
and
lea
adc
cmp
or
push
test
cli
sbb
loopne
lea
sbb
xor
cmc
cmp
sbb
rcll
cs
inc
and
mov
push
jp
sarb
push
push
pop
aaa
sbb
push
ficoml
xor
add
in
rorb
adc
xor
jg
pop
xor
jbe
leave
pop
dec
notb
jno
lods
add
pop
sub
aam
or
mov
insb
shlb
sbb
pop
sbb
lahf
and
and
movsb
sub
add
jmp
xchg
mov
sub
add
cmp
adc
cwtl
or
ret
push
jp
push
sti
mov
repz
mov
mov
and
xchg
push
testl
pop
sbb
in
psadbw
das
cwtl
fs
inc
sahf
sbb
or
sbb
movsb
out
sbb
jo
push
gs
enter
pop
test
and
imul
in
xor
leave
and
xchg
inc
push
sbb
stc
sahf
or
enter
frstor
inc
jne
es
pop
movsl
jmp
daa
cmp
or
in
cmp
add
daa
lahf
mov
dec
xor
adc
jo
jns
lods
xorl
mov
push
clc
add
add
sub
add
loope
imul
sbb
adc
cwtl
movsb
jae
lcall
adc
mov
and
or
inc
sub
sub
add
insl
mov
and
test
and
adc
inc
and
lret
sbb
adc
adcb
xchg
insl
and
lea
fcoms
mov
or
cmp
mov
stc
fisttps
movsb
fsubs
dec
gs
movsl
add
xchg
mov
xor
call
arpl
push
xchg
stos
imul
push
add
loopne
sbb
inc
and
fstps
fidivl
out
sbb
cmp
xor
sub
ss
or
add
cld
and
mov
aam
mov
adc
push
mov
adc
sbb
mov
sbb
and
das
nop
and
inc
adc
xor
xchg
inc
pop
inc
mov
cs
xlat
pop
sti
add
inc
cmp
xchg
adc
arpl
and
rorb
mov
lret
shlb
xor
xchg
dec
pop
test
movsb
sbb
ret
xchg
les
adc
inc
ror
dec
das
push
inc
or
add
sbbb
iret
in
adc
push
sbb
push
and
jbe
jo
aam
enter
int3
cld
inc
enter
and
sub
and
leave
int3
fs
pop
and
xchg
xchg
xor
xchg
fdivr
hlt
sbb
inc
push
and
xchg
cmc
add
inc
push
and
cmp
mul
jns
xor
adc
and
clc
xchg
jns
repnz
adc
and
sbb
xor
adc
and
sub
movsb
jns
and
add
adc
and
nop
add
and
movsb
leave
inc
enter
cld
xchg
pop
and
mov
and
cmp
mov
cmp
je
es
es
inc
push
test
add
lods
js
mov
adc
add
dec
xchg
push
jae
and
pusha
add
push
jge
push
xchg
or
cmp
add
cmp
or
or
in
mov
jbe
mov
testl
jb
bound
std
test
sbb
push
jne
add
sahf
push
xchg
push
add
or
cli
insl
mov
movhps
sub
xor
sarb
mov
add
or
or
xor
insl
es
test
sbb
xor
sub
mov
add
arpl
mov
addr16
xchg
add
aaa
insb
or
cmp
or
js
push
mov
inc
adc
xchg
sub
popa
iret
sbb
out
insb
ljmp
sub
jo
mov
mov
pop
outsw
sbb
inc
shlb
add
lods
jo
mov
imulb
sub
insb
das
mov
insl
ss
cmpsl
sbb
and
notb
xchg
dec
daa
and
ret
mov
mov
or
ja
push
daa
jns
outsl
push
jns
pusha
mov
das
add
ja
mov
or
cmp
and
mov
jp,pt
js
xor
mov
fs
mov
fldl
sbb
pop
adc
xchg
or
clc
faddl
insl
cmp
jae
push
scas
je
jbe
outsb
incl
addr16
mov
sub
in
lret
mov
adc
sarl
cmc
mov
mov
in
rclb
sbb
xchg
test
lea
cmp
adcb
test
js
sbb
movl
jle
lea
jo
mov
adc
mov
add
inc
cld
push
fmuls
mov
negl
pushf
fsts
or
pop
xchg
push
push
add
or
push
sbbb
int3
fwait
subb
mov
out
insb
dec
push
mov
movsb
outsl
mov
jne
mov
and
mov
mov
out
idivl
xorb
sbb
jg
repz
jo
pop
out
mov
sbb
dec
in
divl
movsl
add
push
sbbl
xchg
xor
cmp
loope
testb
fdivs
hlt
sahf
mov
jns
sbb
add
int3
or
add
fwait
adc
das
inc
xchg
adc
test
jb
addr16
or
add
lahf
or
mov
fcmovnu
pushf
push
pop
popa
mov
mov
jne
sub
mov
cmp
in
leave
lea
fsubrs
add
inc
mov
stos
adc
xchg
nop
sbb
je
mov
adc
and
fldt
mov
mov
cmp
mul
add
xor
loopne
pop
inc
and
jge
mov
fwait
sub
add
call
cmp
sbb
xor
test
out
push
nop
inc
mov
pop
mov
jge
mov
lcall
dec
xchg
jb
or
jb
jmp
sbb
js
jb
out
je
jmp
movl
mov
repz
repz
xor
mov
sarl
add
adc
xchg
mov
pop
or
inc
ret
sub
inc
jge
jno
mov
sub
stos
and
dec
add
pop
or
add
push
push
andb
add
mov
rcrl
dec
ja
sbb
add
jns
xchg
clc
and
xchg
xlat
pop
xor
or
add
add
or
dec
imul
movsl
xchg
push
out
shll
pop
and
xor
dec
pop
imul
add
adc
and
sub
push
add
push
cmpsl
jns
cmp
adc
imul
adc
adc
inc
sahf
or
or
nop
xchg
or
or
sbb
add
in
add
push
sbb
xchg
nop
out
xchg
repz
in
nop
out
or
or
das
or
sbb
push
sbb
imul
mov
jge
or
and
daa
sub
das
pop
or
push
and
stos
pop
imul
xor
loopne
bound
cld
or
sbb
cmp
jns
mov
add
mov
add
sub
stos
or
adc
pushf
or
sbb
and
add
and
iret
cltd
and
daa
xor
xor
test
push
pop
add
andb
ja
in
es
add
add
sbb
add
jne
pop
std
aas
mov
xor
inc
pusha
jbe,pn
add
fisubrl
push
mov
pop
ljmp
xor
lcall
jp
xchg
xor
xlat
adc
add
add
sbb
push
leave
pop
mov
sti
enter
push
inc
and
es
or
or
sbb
xor
mov
xor
jmp
cmp
push
xor
aaa
push
ss
dec
rorl
cwtl
cmpsb
mov
shrb
shlb
in
cli
jbe
jno
shll
jae
nop
mov
cmp
push
imul
pop
or
cmp
or
or
xchg
or
or
rorl
push
pop
or
enter
jmp
mull
adc
mov
mulps
aaa
xchg
aaa
shll
adc
popf
xor
push
imul
push
or
sbb
ss
push
pusha
enter
outsb
scas
cmp
dec
enter
adc
test
sbb
leave
test
sub
xor
add
iret
adc
sbb
adc
jge
cmp
jb
or
xor
push
jo
out
aas
dec
jmp
rorl
sbb
add
movsb
sbb
cltd
ljmp
jns
cmp
push
cmp
cmp
xor
and
test
dec
cmp
sbb
xor
pop
add
aas
sahf
ja
orl
push
sbb
and
jae
jbe
scas
add
add
and
add
jae
cmp
mov
cmp
push
out
push
add
adc
xor
rcrl
sub
dec
push
or
in
iret
cmp
nop
or
cltd
nop
or
cltd
nop
or
and
push
lahf
jl
and
add
testb
dec
daa
adc
cltd
loop
cltd
or
aaa
push
imul
mov
das
stos
shll
or
dec
shll
adc
xor
sbb
sbb
jnp
jg
sbb
push
pop
and
and
and
aas
jl
cmpsb
imul
cmpsb
imul
cmpsb
imul
and
xor
shll
inc
push
gs
shll
lret
mov
xor
out
or
sbb
inc
shll
outsb
int3
push
repnz
aas
jg
add
add
nop
out
cmp
push
in
pop
adc
push
addr16
sahf
add
sbb
push
in
nop
sbb
sbb
inc
sahf
add
or
addr16
and
sub
sub
xor
nop
addr16
adc
add
in
adc
nop
addr16
sahf
adc
push
in
pop
dec
sbb
sahf
add
push
sbb
in
nop
push
sbb
nop
scas
add
sbb
nop
out
popa
pop
bound
arpl
fs
out
out
and
out
out
addr16
movsb
xchg
push
xor
aam
orl
mov
ret
mov
inc
mov
pop
shlb
test
push
inc
push
add
sbb
xchg
add
rol
cmp
neg
imul
and
inc
and
push
mov
mov
sbb
pop
test
test
cmp
jo
mov
cltd
adc
dec
insb
jmp
mov
push
clc
push
mov
mov
incb
in
call
cmc
push
hlt
aam
shrb
push
jo
pusha
mov
or
hlt
sub
mov
or
aam
mov
es
inc
lock
arpl
dec
and
sbb
mov
and
rcrb
loopne
faddl
sbb
mov
fnstenv
and
push
aad
and
pop
subb
sbb
xchg
mov
inc
xchg
movsb
shrb
push
out
sbb
movl
inc
mov
push
sub
rorb
cli
sub
nop
add
xor
jp
push
xor
adc
repnz
adc
pop
mov
sub
push
xchg
add
or
movsb
xchg
cmc
push
cmp
stos
sub
inc
sub
push
inc
add
push
fisubrl
cs
sti
jo
jno
pop
aas
inc
add
jo
inc
popa
xchg
fiaddl
push
jbe
ret
subl
movsb
sub
and
mov
adc
mov
bound
ss
mov
jns
or
inc
inc
outsb
adcl
sub
xchg
inc
or
adc
je
mov
shlb
loope
pop
adc
mov
mov
xor
lahf
dec
in
add
fbld
lahf
inc
sbb
daa
shrb
testl
sub
mov
sub
and
mov
or
mov
stos
jo
jns
jo
xchg
push
push
cmpsl
sbb
sbb
shl
arpl
mov
push
adc
inc
inc
xor
fs
and
mov
out
push
dec
push
pusha
das
fidivl
mov
addl
ja
add
sbb
out
dec
xorb
cmp
sahf
inc
cmp
outsl
out
sub
insb
outsb
xchg
mov
jecxz
fs
inc
or
shlb
mov
stos
mov
push
push
dec
stos
fucomp
stos
adc
lds
cwtl
fmuls
push
push
add
fists
sbb
and
sbb
imul
bound
insl
sub
xor
insb
add
subb
cmpsb
sbb
imul
out
lods
mov
push
loopne
arpl
pop
inc
dec
push
stos
xor
leave
inc
jg
push
fwait
clc
sbb
outsl
pop
inc
lret
add
dec
jae
loope
movsb
sbb
add
stos
push
mov
adc
sub
xor
pop
ret
stos
imul
jns
iret
jae
insl
les
pop
loopne
xor
adc
push
inc
mov
dec
mov
push
inc
negb
scas
lret
popa
repnz
adc
js
je
mov
adc
push
and
push
push
xchg
push
xchg
jne
pop
mov
scas
adcb
or
adc
dec
push
mov
xor
sbb
inc
stos
imul
or
cmp
sub
adc
xchg
orb
inc
cmpsl
push
jno
popa
out
outsb
mov
adc
add
pop
insl
inc
adc
pop
or
bound
mov
sbb
testl
imul
incl
bound
mul
push
push
lahf
mov
lods
fisubrl
push
aas
push
inc
sub
pop
adc
popa
push
dec
xrstor
push
in
adc
adc
and
pop
aaa
push
fadds
adc
mov
push
dec
inc
add
or
loopne
scas
or
popa
mov
pop
jo
jo
aaa
lahf
push
fists
add
sub
push
and
dec
ja
adc
pop
daa
push
cmp
mov
mov
add
dec
outsb
add
dec
rclb
pushf
and
bound
ljmp
sbb
addr16
and
cmp
jno
das
adc
inc
sbb
nop
jg
inc
imul
ret
adc
inc
mov
fs
stos
push
mov
insb
mov
push
popa
pop
call
push
scas
aad
or
outsb
and
les
mov
mov
lds
movl
inc
popa
inc
movsb
sbb
xchg
inc
jae
mov
test
jbe
addr16
push
lods
idivl
aam
inc
and
jo
jb
xor
pop
lods
or
pop
test
cmp
sbb
aad
cmpsl
pop
cmpsl
add
sbb
cmpsb
xor
and
das
pop
mov
nop
aas
pop
lds
adc
sub
or
lock
imul
and
sub
push
fbld
xchg
insl
pop
push
mov
xor
jle
sub
lds
outsl
rcl
fcmovu
pop
adc
jo
loop
je
fwait
cmp
notl
mov
pop
aad
xlat
imul
orl
iret
je
sbb
lret
jns
mov
mov
sub
mov
push
pop
push
jecxz
scas
pusha
push
stos
push
addl
push
imul
mov
jae
pop
inc
pop
jns
jle
mov
addr16
mov
inc
test
add
test
push
dec
cmpsl
dec
shrb
das
jns
lods
mov
sbb
jle
add
dec
jb
mov
and
mov
in
mov
sub
adcl
shlb
es
push
mov
push
mov
pop
pop
sbb
cmp
or
pop
pop
pop
shlb
sbb
dec
js
mov
ss
dec
jge
and
xchg
push
out
jns
adcb
lds
and
or
add
pop
orb
push
fwait
lds
lcall
pop
xchg
push
push
and
sub
pop
enter
cmp
pop
and
pop
sbb
push
outsb
mov
mov
aad
test
sbb
mov
add
outsb
sbb
and
pop
add
or
xchg
mov
add
test
inc
jl
loopne
loope
add
aas
pop
add
xor
mov
inc
add
mov
push
movb
movl
fcoml
pop
pop
sub
adc
cmp
jle
fisttps
jg
mov
fidivrl
mov
adc
push
cld
sub
xor
aas
sub
enter
pop
xchg
into
jne
pop
rorl
adc
pop
pop
xchg
icebp
or
and
and
xchg
test
lahf
shl
bound
loopne
push
inc
lea
pusha
aaa
pusha
test
jnp
je
pushf
mulb
mov
xor
inc
mov
xchg
daa
or
pop
and
leave
push
add
adc
enter
dec
imul
mov
or
inc
or
pop
ds
and
cmpsl
out
pop
or
orl
cwtl
unpcklps
imul
pop
fs
pushf
dec
dec
ds
clc
lahf
add
bound
test
popa
jmp
popa
add
dec
push
push
test
pop
xchg
push
mov
pop
push
scas
adc
add
dec
adc
cs
adc
add
mov
jmp
pop
sbb
pop
or
std
push
les
adc
adc
add
add
adc
push
adc
xor
pop
jnp
pop
pop
rorb
adc
orl
stc
mov
je
or
cmpsl
cmpsl
push
bound
outsl
bound
jbe
enter
das
popa
xchg
out
and
cmp
pop
pop
out
push
cmp
push
add
pushf
nop
sub
pusha
dec
rcrb
inc
loopne
xchg
inc
dec
mov
pop
or
and
aaa
xchg
dec
jb
rcrl
cmp
addb
pop
pop
adc
xchg
fmull
call
ret
or
dec
clc
xchg
sarl
dec
lods
test
int3
and
test
lods
lods
imul
xor
pop
mov
mov
das
and
sbb
fadds
bound
dec
repnz
dec
gs
fidivrl
daa
inc
gs
xchg
push
and
and
gs
or
xor
xchg
xor
pop
inc
adc
cmp
mov
adc
and
movsb
jge
inc
sub
cmpsb
popf
lods
leave
adc
sub
popf
lret
mov
repnz
xchg
fsub
pop
mov
mov
lods
sub
fs
dec
jnp
and
in
out
sbb
add
xor
dec
dec
pop
insl
sbb
xor
pop
arpl
inc
mov
cld
xchg
inc
data16
out
push
hlt
addr16
clc
or
pop
xchg
or
gs
fs
xchg
push
dec
in
mov
and
cmp
or
or
adc
xor
xchg
nop
out
add
mov
add
adc
pop
ffree
push
push
adc
jno
and
mov
push
jmp
push
cmp
add
stos
dec
ja
adc
dec
iret
addr16
adc
in
addl
test
add
lahf
mov
jmp
daa
daa
iret
and
mov
xor
lods
adc
test
iret
shlb
icebp
cmpb
out
popa
pop
cmpl
or
sahf
mov
jo
ret
mov
cvtpi2ps
xor
clc
data16
xchg
es
and
dec
add
mov
fcoms
inc
sbb
scas
lea
leave
cltd
cmpb
adc
movsl
rcrb
mov
or
gs
inc
xorb
andl
stos
mov
lret
sbb
sub
dec
jbe
adc
xchg
xchg
lock
ret
jg
pop
addb
clc
push
cmp
adc
sbb
and
inc
and
filds
or
daa
aaa
data16
mov
adc
mov
not
sbb
pop
or
add
push
cmp
pop
out
jmp
or
lock
pop
sub
add
rorb
outsl
sbb
inc
adc
push
fsubrl
inc
popa
in
lcall
fdivs
jo
and
jmp
or
sub
cwtl
popa
xor
cmc
sbb
fisubrs
int3
sbb
adc
adc
fidivs
sbb
addl
add
mov
repz
arpl
or
adc
jae
pop
adc
pop
dec
push
lcall
dec
push
inc
pusha
and
adc
notb
jmp
and
ss
push
scas
ret
fidivrl
dec
push
push
into
les
dec
xchg
add
pop
inc
mov
push
jo
aaa
or
lods
lahf
dec
arpl
push
shll
enter
dec
mov
imul
add
outsl
or
jns
movb
cmp
dec
push
add
inc
mov
and
inc
icebp
ds
and
xchg
mov
adc
add
inc
cmp
pop
shll
jp
and
jo
jo
test
gs
sub
mov
outsl
sub
push
jnp
pmaxsw
inc
pop
cmpsb
ljmp
lret
aam
xor
ficompl
popa
in
nop
aaa
int3
inc
enter
inc
cs
lcall
inc
cs
lcall
xchg
pop
mov
xlat
lods
inc
sbbl
xlat
nop
sbb
pop
pop
pushf
mov
stos
jbe
fildll
mov
les
xchg
imul
fsubrs
fnstcw
fcoml
dec
pop
and
rorb
scas
ficomps
mov
ljmp
imul
and
jo
nop
test
jl
or
dec
imul
and
mov
les
mov
insb
xor
push
mov
and
add
push
je
outsb
jae
out
add
add
add
sbbb
xor
pop
jl
adc
movb
rolb
or
mov
loope
gs
or
rorb
or
jae
add
sbb
or
dec
outsb
arpl
xchg
mov
mov
sub
jae
cmp
js
sub
push
adc
sub
popa
loopne
in
pop
sbb
in
mov
jo
or
pop
ret
es
cltd
pop
outsl
mov
outsb
andps
pop
jecxz
mov
adc
jbe
add
xchg
add
add
les
or
push
sub
or
push
xor
adc
sub
adc
mov
inc
and
clc
stc
es
cmc
lea
dec
imul
mov
cmp
sbb
fnstenv
dec
ficomps
insl
outsl
outsl
js
pusha
adc
or
or
and
push
lret
inc
bound
jmp
movsb
add
sub
fsubs
push
xchg
addb
fcompl
adc
cmp
sub
or
insb
or
outsb
mov
dec
sbb
hlt
leave
or
andb
jmp
xor
cmpsb
mov
movsl
push
and
xor
pop
jo
xchg
mov
cmp
iret
fsubrs
int3
add
int
mov
sub
cld
adc
repz
sub
mov
iret
pop
cmpsl
push
xor
addr16
or
add
pop
add
loop
in
loopne
jge
push
stc
push
ja
jmp
adc
jo
adc
icebp
leave
incl
movsl
push
or
mov
leave
adcl
adc
cmp
aaa
sbb
xchg
or
aas
sbb
test
aas
dec
push
enter
cmp
arpl
in
cwtl
push
lods
inc
push
dec
push
gs
push
push
mov
pop
pop
sbbl
adc
sub
add
and
test
or
mov
inc
and
push
pop
push
sbb
mov
mov
or
pop
int
rorb
or
add
xchg
or
leave
leave
leave
jno
cmp
leave
leave
mov
inc
dec
mov
mov
fsubr
inc
out
andl
cmp
add
adc
or
cwtl
and
cld
or
pop
nop
ja
dec
inc
imul
shl
js
mov
jbe
pop
je
jne
bound
mov
push
daa
jns
pop
or
jo
mov
or
sub
or
test
mov
aas
or
mov
jp
jle
jae
pop
out
in
adc
lahf
or
test
jle
pop
movsb
mov
xlat
or
daa
or
push
scas
stc
pop
pop
mov
or
push
pop
test
fwait
pop
cs
or
insl
je
jl
or
jle
xchg
gs
out
rcl
fsubrs
repz
movl
int3
lock
repz
pop
aam
lret
push
mov
loopne
imul
pop
xchg
or
jl
xchg
call
sub
shrb
lods
mov
inc
lahf
repz
orl
inc
xchg
imul
mov
push
movsb
out
add
or
stos
xchg
jo
js
and
xchg
dec
mov
jl
ljmp
test
inc
sbb
adc
shlb
cwtl
or
fwait
dec
and
xchg
lock
jne
jbe
and
jbe
xor
pop
push
adc
insl
xlat
and
cmp
in
mulb
dec
repz
notl
sbb
cmp
fs
sbbb
adc
adc
dec
push
imul
push
out
in
popl
jbe
test
add
jbe
repz
add
int
add
rorb
outsb
pop
push
js
int
hlt
inc
or
dec
outsb
js
and
orl
mov
je
pop
add
pushf
adc
adc
test
cmp
mov
das
push
stos
imul
movswl
fs
dec
or
pop
dec
sbb
fabs
pop
lods
inc
or
nop
xor
adc
cvtdq2ps
jb
test
adc
pop
adc
or
sub
jb
adc
popw
pusha
add
jbe
add
roll
dec
in
push
daa
xchg
inc
stos
push
loope
jl
pop
add
bound
or
lds
and
cwtl
or
or
dec
mov
or
and
js
prefetchw
or
add
mov
inc
push
ljmp
xchg
mov
int3
inc
std
das
mov
arpl
pop
js
invd
sub
dec
adc
loope
int
rcrl
test
mov
xchg
and
inc
pop
add
add
mov
cmp
adc
mov
mov
push
or
pop
adc
in
xchg
add
jnp
add
mov
mov
adc
hlt
or
pop
mov
push
jmp
sub
rorb
sbb
fsubs
loopne
and
sbb
mov
js
and
mov
sub
int3
mov
cmp
roll
xchg
push
mov
arpl
ret
pop
movsb
jne
loop
and
and
or
lret
gs
dec
jge
mov
push
imul
adcb
hlt
jp
pop
ret
aas
xor
or
repnz
popa
mov
insl
popa
jb
or
mov
dec
loopne
fs
sbb
nop
outsb
xor
sub
int3
cmpsl
xor
pusha
in
inc
scas
addr16
jne
sbb
sbb
fdivs
out
xchg
xchg
fdivrl
push
mov
jp
daa
inc
or
fmull
cmpsl
or
imul
xor
jae
jnp
rclb
push
stos
and
jnp
or
je
rorb
inc
push
sahf
or
jnp
push
push
mov
dec
imul
sbb
loopne
mov
or
roll
add
roll
fcomp
pop
jb
xchg
lock
add
nop
je
add
pop
cwtl
xchg
es
jl
or
mov
adc
dec
add
mov
add
fildl
jae
adc
mov
mov
adc
lret
jl
cmp
in
test
les
andb
pop
push
stos
push
fcomps
cmp
inc
cmp
shll
mov
mov
daa
fcmovb
xor
or
jge
or
dec
sub
adc
fimuls
add
xor
and
and
rcr
push
or
adc
insb
xlat
jge
push
sbb
insb
or
add
xor
jne
push
and
outsl
fnstenv
insb
insb
pop
loope
jb
aad
xor
add
xor
mov
lods
inc
sbb
xchg
or
sub
jge
insl
or
mov
push
lret
stos
les
imul
sbbb
jg
lahf
sete
imul
cmp
xchg
ja
movups
outsb
xchg
pop
jmp
js
adc
gs
movsl
add
pop
mov
ret
test
dec
or
and
sub
push
add
adc
dec
jae
push
push
lods
imul
orb
cltd
adc
sbb
pop
loop
cmpsl
or
lret
xchg
adcb
movsl
mov
outsb
inc
mov
xchg
jge
in
or
nop
arpl
pop
inc
shlb
jae
jae
les
pop
push
inc
inc
mov
in
dec
sbb
push
sub
push
push
cltd
mov
or
mov
add
and
lds
arpl
inc
mov
adc
add
jecxz
sbb
mov
dec
inc
cwtl
push
mov
pop
pushf
jl
xchg
fiaddl
cltd
lea
andl
dec
and
pop
lock
int
cmp
or
test
ss
mov
sti
cmp
mov
cmpsl
and
decl
cli
insb
add
cld
pusha
or
pop
inc
ret
cld
aam
add
cmc
dec
mov
cmpsl
or
push
cld
pop
fadds
pop
clc
lods
or
movsb
cld
pop
repnz
mov
pop
mov
or
jl
cld
or
test
adc
pop
daa
pop
xchg
das
or
fs
loopne
leave
pop
repnz
xor
cmp
sub
or
adc
fimuls
push
test
mov
loope
pop
inc
cld
push
rolb
xor
pop
pop
add
orb
add
jbe
pushf
test
add
jecxz
test
pop
mov
add
lcall
mov
js
add
std
das
ja
cltd
inc
in
push
inc
rcrl
pop
mov
add
fwait
push
int
adc
stos
insb
push
iret
dec
enter
sahf
push
or
pop
xor
cmp
pop
and
mov
and
mov
cmp
mov
or
xchg
enter
mov
inc
and
add
push
adc
push
lea
push
imul
jne
or
fs
sbb
insl
inc
xchg
and
push
mov
test
fucomip
and
fadd
sub
cld
or
cmp
add
add
sub
or
lods
and
mov
xchg
rcrb
stos
fcmovb
and
or
push
mov
ja
pop
fadds
js
or
test
push
gs
sub
hlt
adc
ds
negb
ljmp
into
cmc
lea
sub
push
call
pop
clc
mov
lods
lock
dec
or
jle
jl
clc
or
popa
xchg
xor
popa
mov
sarl
jge
or
pop
enter
mov
sbb
xlat
in
insl
and
and
or
sub
xor
sub
stos
jo
and
xor
dec
xor
test
sub
or
xchg
inc
xchg
inc
test
jb
insb
push
sub
mov
adc
push
lahf
dec
add
xor
mov
stos
add
lods
test
mov
push
dec
lcall
add
test
bound
dec
xchg
jmp
movsb
cli
jae
pop
adc
push
push
rolb
jnp
pop
ds
xchg
inc
xchg
pusha
xor
or
and
add
dec
fiaddl
sub
insb
cmp
lea
inc
push
jl
test
xchg
sbb
popa
jmp
in
fisubrl
js
inc
cmpl
xor
and
pop
mov
stc
mov
add
jl
jne
addr16
pop
mov
xorb
jecxz
xchg
sbb
test
inc
repnz
movsl
pop
rcrb
mov
mov
sub
out
dec
add
mov
lea
push
add
push
dec
sahf
fdivrs
mov
std
mov
sbb
mov
mov
ror
leavew
or
xor
fisubs
sbbl
jns
mov
cmove
nop
push
xchg
jp
xchg
addr16
fists
cmp
xor
add
outsl
push
aaa
add
mov
cwtl
out
and
pop
fistpll
roll
push
fstl
out
add
add
add
adc
push
ret
mov
push
outsl
sbb
pushl
add
adc
sbb
adc
or
dec
mov
mov
mov
mov
mov
ljmp
ljmp
ljmp
jmp
jmp
call
call
out
into
aas
and
fiaddl
cmp
push
enter
sarl
test
ds
enter
shll
js
or
pop
nop
inc
dec
jae
lcall
inc
lret
in
lcall
inc
adc
stc
lcall
ss
fdivs
out
pop
adc
sub
dec
xchg
mov
pop
rcr
cld
es
push
mov
stc
lcall
movsb
aaa
push
and
lret
movsl
hlt
pop
test
cmp
lock
out
out
add
cmp
les
mov
adc
cwtl
pusha
dec
mov
xchg
je
cmp
jns
in
cmp
les
pop
push
push
jp
jg
sub
add
outsb
push
enter
push
sbb
xchg
and
or
inc
pop
jno
push
pop
rorb
jne
insl
jns
pop
fs
xchg
cld
mov
sub
out
sub
or
xchg
jmp
in
repnz
pop
xchg
addb
jno
push
jl
cwtl
or
add
imul
inc
lcall
in
inc
cmp
or
or
out
inc
sub
or
repnz
gs
cmp
sub
add
pop
enter
pop
sub
xchg
cmpb
add
or
push
aam
inc
mov
test
and
adc
sub
sub
cmp
cld
mov
pop
pusha
pop
xchg
orb
sub
popa
fcoml
inc
xchg
inc
lret
loopne
xchg
nop
rorl
sbbb
fcoml
and
push
inc
insb
pop
mov
rcll
gs
adc
sbb
push
in
xor
loope
loope
inc
push
rorb
inc
jae
mov
cmp
rorb
lock
aaa
rorb
insb
inc
dec
insb
push
or
pop
mov
adc
push
sub
stc
push
or
lret
lret
inc
inc
add
dec
xor
adc
jno
push
cmp
out
into
insl
mov
sub
or
call
push
pushf
dec
add
sub
pusha
or
loope
ss
nop
sbb
test
mov
pop
std
stos
imul
or
pop
cli
insb
leave
movsb
sbb
out
mov
mov
mov
pop
xor
xor
add
adc
jae
enter
xor
and
adcl
sbb
jnp
mov
jecxz
add
push
jb
jb
jbe
mov
cmp
cmp
cmp
pushf
pushf
sbb
pop
aas
arpl
lods
sarl
xchg
mov
mov
dec
dec
mov
scas
lock
and
inc
mov
inc
movsl
or
mov
push
or
add
loopne
jl
stos
adc
je
pop
inc
push
xchg
and
mov
jno
cmp
sbb
or
add
mov
mov
push
cld
inc
cmovbe
lret
push
adc
push
mov
vcvtsi2ssl
imul
jo
and
and
sub
sub
or
or
jns
arpl
dec
jmp
add
adc
mov
push
outsb
incl
sub
mov
mov
sub
jae
ret
out
push
lcall
rcll
xchg
jbe
ljmp
xchg
mov
int3
or
sub
jnp
and
in
outsb
ror
incl
inc
or
jmp
push
push
ret
mov
fisubl
sbb
ret
rorl
xor
es
or
inc
pop
nop
mov
bnd
push
cwtl
insb
seta
nop
jae
pushf
movl
xorl
mov
add
dec
dec
data16
loop
nop
lock
popf
push
pop
sbb
gs
xchg
fmuls
arpl
jbe
cmc
movsb
cmp
inc
in
mov
fs
movsl
xchg
sub
add
inc
hlt
pop
xor
pop
mov
jo
outsb
ret
popa
add
adc
sbb
add
adc
add
sbbb
fcompl
ja
aad
aad
ffree
mov
lds
popa
jns
xchg
dec
mov
dec
es
ljmp
cmp
mov
fnsave
insb
hlt
xchg
inc
movsb
addb
cmpsl
and
sbb
add
outsl
and
mov
sbb
into
mov
mov
mov
dec
jge
inc
add
inc
ss
add
and
push
int
inc
inc
pop
sbbl
mov
sbb
inc
fimuls
inc
mov
inc
inc
mov
add
pop
repnz
jge
or
sub
inc
add
xor
add
sbb
and
and
inc
bound
je
and
xchg
inc
repnz
adc
shll
adc
cs
xchg
add
fldl2t
imul
mov
es
stos
rorl
add
mov
ret
fcoms
mov
add
sti
cmp
or
mov
ret
inc
pusha
add
pop
mov
cmp
push
inc
sub
bound
cmpl
xchg
sub
scas
inc
add
jo
mov
inc
push
sub
cmp
push
cmpsl
or
sub
mov
pop
lea
adc
or
and
pushf
pop
test
sub
popa
or
sbb
adc
inc
pop
dec
sub
mov
xor
repnz
iret
jb
xor
mov
bnd
test
outsl
xor
les
inc
cmp
sbb
jns
inc
rcrb
add
cmpsl
xor
xchg
mov
std
xor
push
xorb
or
ret
loope
jns
xchg
add
xor
add
pop
repnz
jns
sbb
mov
mov
cmp
push
test
push
bound
pop
loopne
push
cmp
jb
add
and
imul
jp
pop
or
cmp
lods
add
cmpsl
lock
add
or
in
cmp
dec
fisttpl
and
mov
mov
xchg
add
aas
dec
test
mov
and
sbb
lods
push
pushf
dec
gs
pop
popf
add
daa
sub
movsb
add
push
daa
inc
rolb
or
and
add
int
lods
scas
sub
adc
jp
add
adc
push
cmc
imul
clc
push
sbb
pushf
insb
imul
orb
and
pop
xor
sbb
add
rcrb
lods
jmp
sbb
push
dec
and
or
dec
cmp
and
or
fsubs
push
arpl
add
stos
xor
dec
jg
rol
dec
ds
dec
dec
fwait
xor
adc
xchg
orb
movsb
fists
sbb
dec
or
inc
jo
andl
sbb
push
shl
sbb
into
dec
sub
pcmpeqd
inc
xor
nop
imul
out
pusha
ja
popa
incl
sti
dec
sbb
adc
leave
sbb
lock
mov
push
inc
daa
xor
cmp
xor
adc
xor
push
inc
mov
and
pop
jmp
lock
xchg
or
push
fmulp
pushf
dec
or
pusha
clc
clc
push
out
mov
out
mov
sbb
dec
test
xchg
fcoms
test
sarb
loopne
loopne
pusha
dec
sbb
cli
clc
push
ds
fld
mov
mov
imul
dec
lcall
jmp
or
xor
inc
js
pop
mov
sbbl
mov
push
rcl
pop
sbb
pop
sbb
nop
xor
sbb
inc
fsubs
and
add
or
nop
sub
sub
push
cmpsl
and
mov
inc
sub
stos
stos
pop
add
into
out
mov
and
stos
shlb
sbb
or
sbb
arpl
dec
leave
nop
xor
push
dec
xor
stc
popf
add
cwtl
enter
movsb
enter
sbb
fcom
rorb
and
test
fimull
inc
loopne
flds
xchg
adc
xor
add
xor
dec
push
movsb
jmp
push
sbb
or
test
dec
inc
jne
add
push
xchg
cmp
mov
or
and
data16
mov
sub
cmpsl
xor
imul
jno
xchg
out
cld
lock
sahf
inc
fbstp
xor
xor
xor
leave
leave
in
outsb
adc
pop
add
leave
sar
ds
test
cmp
out
cltd
adc
pop
test
pushf
lock
dec
test
daa
inc
fwait
es
insb
xchg
xchg
and
daa
mov
xchg
xchg
xchg
sub
xchg
xchg
xchg
mov
lcall
leave
inc
imul
shl
sahf
sbb
in
in
xchg
mov
jb
jb
lahf
add
push
jb
jb
mov
idivl
cmp
cmp
sbb
cmp
lods
sar
mov
popf
dec
sbb
mov
call
pop
mov
pushf
pushf
pushf
pushf
jge
leave
out
dec
dec
dec
mov
enter
test
ljmp
xor
jb
in
movsl
int3
rep
sbb
jb
cmp
cmp
cmpsb
and
pop
xor
or
rorb
leave
push
add
test
lea
xor
sub
std
fmul
push
lods
ja
cmp
mov
inc
fstl
push
or
mov
lods
and
roll
pushf
aam
or
xchg
setb
data16
stos
in
xor
imull
sub
or
mov
cs
jnp
fmull
imul
call
das
data16
sbb
mov
popf
xor
adc
sub
mov
leave
stos
dec
iret
lods
sbb
shrl
filds
cltd
sub
movsb
jp
js
fdecstp
push
xor
cmp
mov
cmp
xchg
mov
sbb
in
mov
decl
push
or
add
aas
add
jnp
inc
sar
lods
xchg
daa
push
cmc
adc
xchg
pop
push
daa
push
jb
lods
gs
mov
jno
add
adc
pop
sbb
sbb
mov
dec
jb
jb
or
adc
pop
jns
jb
jb
mov
scas
add
jno
push
xchg
bound
dec
inc
loope
or
imul
movsl
test
inc
je
lock
sbb
inc
aam
fwait
ds
subb
inc
int3
dec
aam
sbb
push
popf
shl
dec
and
pop
jne
scas
sub
aam
movsb
das
mov
int3
out
cltd
jae
push
addr16
inc
loop
xchg
in
or
adc
pop
cmp
jns
xor
aam
lahf
adc
xchg
sub
jae
cwtl
add
cmp
dec
jo
ss
xchg
or
cmpsl
addb
in
xor
pop
adc
mov
xchg
jbe
mov
jp
inc
daa
inc
jno
clc
mov
mov
or
push
pop
shrb
mov
sbb
or
mov
inc
xchg
mov
dec
pop
dec
adc
push
sahf
pop
sbb
cs
add
loop
dec
bound
pushl
nop
mov
dec
dec
xorb
or
sub
sub
or
mov
sub
pop
fnsave
das
pop
out
ret
mov
pusha
add
xor
xchg
pop
fcmove
cmp
dec
push
jnp
insb
add
fbld
push
adc
jo
adc
in
xor
sub
jb
mov
mov
push
pushf
push
push
or
or
jecxz
pop
insb
sub
pusha
sub
push
mov
push
das
fildl
das
aam
add
nop
icebp
popl
push
mov
lods
and
aam
xchg
lds
aad
lods
shlb
movsb
imul
ljmp
repz
in
ficoms
push
out
scas
arpl
mov
mov
mov
xor
and
cmovle
jns
push
jp
and
or
mov
xchg
mov
or
push
adc
insl
repz
and
and
in
stos
push
mov
sub
inc
outsb
push
push
fs
adcl
sbb
lods
nop
add
bound
xor
fcoms
jmp
outsl
adc
arpl
out
lods
push
int3
jno
stos
inc
fisttpl
or
test
pop
hlt
adc
mov
pop
bound
mov
dec
xchg
push
or
nop
inc
or
push
adcl
or
ljmp
mov
add
dec
dec
dec
cmp
lods
daa
inc
dec
dec
cld
mov
daa
daa
jae
shl
xchg
xchg
and
xchg
xchg
xchg
test
leave
leave
mov
in
leave
leave
cmpsl
lret
ljmp
cmp
stos
les
out
lret
sti
lcall
sbb
push
mov
adc
rolb
xchg
adc
pop
inc
jo
pop
push
pop
fwait
setae
mov
or
xchg
or
lea
dec
or
push
sbb
jne
jmp
xchg
cmpsl
incl
loope
shrb
leave
ret
ljmp
and
lahf
in
test
loop
enter
add
mov
loopne
clc
iret
or
sub
stos
dec
or
jbe
pushf
fwait
rorl
add
xchg
xchg
or
dec
lods
or
cmp
cmp
enter
pushf
dec
sub
andl
test
or
dec
test
mov
adc
jbe
rcrl
and
outsl
inc
andb
mov
xor
repnz
test
push
test
lods
dec
mov
inc
jb
leave
dec
and
adc
jge
mov
and
mov
jb
add
pushf
mov
or
adc
cwtl
and
add
outsl
test
and
and
dec
sbb
or
rol
jecxz
xchg
stos
and
jmp
cwtl
adc
inc
dec
dec
mov
sbbb
mov
push
sahf
mov
sub
or
fisttpll
jmp
push
mov
push
aaa
icebp
push
mov
shlb
mov
pop
xor
sub
lret
cmp
scas
mov
sbb
pop
adc
adc
aaa
sub
addl
stos
xchg
adc
sub
daa
movsb
inc
add
pop
das
mov
das
sbb
or
stc
mov
add
inc
sub
out
outsb
or
imul
sbb
das
xor
addl
and
sbb
pop
dec
jl
xor
xchg
stos
mov
push
mov
xchg
imul
dec
cmpsb
sbb
addl
jmp
or
fs
dec
and
or
iret
push
ficompl
jbe
in
dec
inc
push
dec
sbb
and
xchg
xchg
test
pop
cmpsb
pop
adc
movsb
add
xchg
sbb
dec
dec
sub
add
xchg
fwait
adc
inc
aas
jo
push
loope
or
enter
xchg
mov
mov
add
aaa
daa
pushf
mov
lock
cmp
push
adc
enter
fcomp
insl
jp
jno
sarb
dec
sti
pop
push
lods
pop
shlb
enter
xchg
jle
add
inc
addl
punpcklwd
push
lcall
push
push
mov
mov
add
add
fwait
sbb
dec
or
pop
sub
sub
scas
xchg
mov
inc
ja
out
sub
outsb
imul
je
sub
xchg
push
mov
pusha
cmp
roll
rcrb
or
lods
adc
imul
and
mov
push
add
mov
ja
and
out
mov
leave
jb
adc
add
pusha
push
arpl
or
rorb
popf
negb
pop
loop
inc
lods
pusha
rorb
mov
int3
lcall
xchg
inc
ficoml
xchg
fidivl
ret
push
mov
popa
xor
js
movsl
sbb
pop
fisubl
or
imul
sbb
aas
inc
mov
mov
xchg
push
enter
in
adc
xor
pop
cmp
and
add
mov
adc
outsl
inc
mov
push
mov
notl
xchg
lds
mov
adc
int3
lahf
pushf
daa
sub
or
xchg
push
pop
enter
popa
mov
mov
leave
movsl
dec
and
mov
outsl
sub
int3
ret
subl
pop
iret
inc
and
mov
or
pop
adc
adcb
mov
or
sti
xchg
in
dec
xchg
scas
pop
sahf
mov
lds
dec
sahf
in
pop
scas
add
outsl
aas
pushf
rolb
gs
cmp
pop
or
adc
pop
sub
and
lods
movsb
inc
xchg
adc
dec
ret
scas
popa
mov
cmp
xchg
mov
and
movsb
mov
out
fcmovnbe
inc
ds
jecxz
insl
pop
addb
or
faddl
xor
aam
adc
mov
dec
ds
dec
andb
cld
fcompl
sbb
lods
int
pop
jle
add
outsl
sbb
btr
ret
scas
mov
popf
xchg
lods
mov
mov
stc
dec
insb
stos
dec
daa
xchg
xchg
inc
add
pop
fisubl
adc
aas
mov
lods
or
mov
dec
lret
sti
dec
xor
xor
or
addr16
std
mov
xchg
add
and
in
mov
sbb
add
inc
add
dec
gs
repnz
imul
mov
mov
pop
dec
sti
mov
int
in
add
jo
pop
and
or
add
mov
fnstsw
mov
add
adc
push
push
xchg
mov
push
jo
jns
or
xchg
sub
mov
ror
lret
push
sbb
xchg
aam
xor
and
push
jle
nop
inc
sahf
or
int3
sub
cmp
mov
jns
enter
into
add
push
aas
je
and
sbb
repz
pop
orl
dec
xorb
shlb
dec
jns
nop
inc
push
pushf
aam
and
jb
loop
in
in
sbb
and
loopne
add
repnz
lods
test
daa
push
jmp
or
or
or
and
popa
or
std
jl
add
fwait
inc
mov
jge
test
pushf
mov
inc
cli
jo
imul
loopne
in
push
addr16
cld
test
data16
mov
test
add
adc
add
mov
arpl
aad
leave
or
les
test
push
add
mov
fimuls
push
lret
mov
mov
repnz
or
jl
xor
or
pop
sbb
mov
and
shrb
ror
bt
xchg
dec
lret
popf
pop
or
test
das
and
test
lods
rcrl
pushf
add
pop
add
and
xchg
xor
cwtl
rorb
fnsave
les
dec
jne
adc
in
ficoms
cli
out
movsb
fadds
les
jne
pop
jbe
stos
push
pop
cs
call
inc
or
inc
xchg
sbb
gs
mov
adc
inc
dec
adc
stos
inc
or
les
fcomps
push
jb
inc
xor
scas
cld
sbb
xor
stos
movsl
xchg
push
dec
scas
mov
jmp
lods
or
mov
jne
rorl
pop
loope
xchg
test
sub
inc
or
sbb
and
push
sub
jo
xchg
lock
adc
pop
lock
iret
popf
xchg
jl
fdivs
xor
popa
das
pop
nop
rdtsc
mov
imul
pop
inc
lods
inc
add
add
lret
daa
cwtl
js
xchg
pop
adc
cmovge
fsubl
cmp
jo
mov
rorb
lods
inc
or
sub
cs
mov
lcall
sub
push
outsb
push
jp
pushf
pop
sti
add
or
outsl
adc
clc
in
xor
push
pusha
and
test
xor
fsubrs
and
repnz
mov
xor
pop
movsb
push
or
xchg
add
outsl
cwtl
mov
or
negl
add
xchg
test
lods
rorl
push
push
popa
cmp
xor
pushf
pushf
int3
or
dec
dec
dec
mov
adc
dec
dec
lods
jecxz
add
daa
inc
imul
or
xchg
xchg
xchg
xchg
dec
jae
leave
leave
leave
xchg
in
fcoms
aaa
popa
enter
test
in
fstps
dec
js
jb
in
in
ficoml
inc
jb
jb
jno
mov
cmp
cmp
fistpl
cmp
lea
inc
sub
mov
push
add
shll
adc
loope
inc
push
mov
inc
and
push
jb
dec
cmp
mov
rclb
add
jo
aam
out
shrb
ljmp
or
sbb
pop
push
rolb
mov
fcom
rorb
je
dec
sbb
bound
sarb
movsb
lcall
push
or
ja
mov
scas
mov
in
stos
sub
dec
js
pop
pop
add
push
imul
imul
js
inc
mov
enter
jl
push
rcl
sbb
dec
orb
pop
mov
jae
fnsave
pop
rolb
pop
pop
xor
push
jge
fcoml
mov
xchg
adc
jb
arpl
mov
push
dec
in
pusha
adc
push
movsb
inc
pop
mov
add
pop
loope
xor
adc
pop
inc
rorb
xor
dec
enter
shrb
and
add
jo
mov
sbb
inc
test
add
in
xor
shlb
pop
pop
repz
subps
add
pop
sub
jo
xchg
sub
mov
mov
xchg
cwtl
mov
call
cmp
ljmp
mov
mov
addb
sub
stos
xchg
or
mov
pushf
clc
add
dec
ficompl
mov
mov
imul
outsb
inc
and
sbb
sbb
pop
popl
inc
sub
jg
inc
or
mov
lods
dec
dec
ret
sub
inc
sub
push
pop
add
xor
xchg
adcb
and
push
mov
arpl
nop
pusha
outsb
movsl
imul
icebp
lods
sub
jo
push
lds
stc
sbb
fwait
inc
jb
lods
add
cmpsl
mov
enter
insl
sbb
cmpb
js
push
test
hlt
pushf
andl
jmp
push
mov
cmpsl
divb
in
push
dec
ds
dec
es
jne
or
testb
je
and
dec
jne
mov
push
push
and
cmp
and
cltd
mov
pushf
or
lods
fisubs
lods
fbstp
jne
cmp
or
sbbl
cltd
xchg
pop
mov
cmpsl
or
xor
jae
jbe
in
mov
or
cmpsb
push
jmp
push
sti
jmp
and
mov
iret
xchg
add
mov
or
jmp
add
pop
imul
push
insb
in
xchg
pop
inc
or
add
hlt
push
push
shlb
mov
mov
sbb
ss
xchg
lcall
cmp
fildl
sub
push
dec
cli
push
lods
dec
mov
data16
pop
popa
out
gs
jmp
adc
jae
sub
outsb
mov
push
and
fisubs
sahf
movb
mov
fcmovne
test
mov
roll
sub
or
pusha
loop
xchg
cltd
add
mov
mov
stc
pop
or
psubb
inc
movsb
add
or
xor
jb
inc
fisubrs
mov
ds
sbb
loopne
xor
push
sbb
mov
jne
jne
dec
sub
lahf
cwtl
je
mov
sub
in
jl
push
test
jne
cmpl
sbb
sub
and
sbb
enter
push
andl
and
sbb
repz
popf
je
mov
xor
xchg
pop
add
rclb
in
cmp
or
lret
adcl
xchg
adc
ret
test
push
add
dec
orb
dec
adc
push
jecxz
add
inc
idivl
dec
insl
adc
xor
ret
mov
mov
xor
add
fcoml
test
test
out
int3
outsl
lock
call
sub
lret
push
jne
xchg
push
push
jl
mov
mov
fidivl
xor
push
dec
enter
addr16
or
push
jl
pop
pop
cmp
xchg
mov
adc
dec
and
push
aaa
mov
dec
sub
dec
mov
outsl
dec
ret
pop
fucom
sbb
or
add
into
add
or
inc
add
or
nop
inc
xchg
adc
out
ficoms
aad
mov
data16
add
cs
xor
add
int
shrb
lret
add
pop
or
pop
jnp
test
test
mov
loop
inc
adc
jb
pushf
add
add
jo
es
or
bound
dec
add
mov
adc
xchg
push
outsl
or
loope
mov
shll
add
add
sbb
pop
loop
es
or
jbe,pt
rcr
jbe
jne
ror
push
movsb
add
add
mov
dec
jne
sub
or
sbbb
andb
dec
mov
pop
jecxz
jae
les
insl
jmp
out
mov
enter
sub
shlb
dec
push
pop
fsubl
hlt
iret
sbb
clc
xor
sbb
mov
push
dec
add
repz
pop
inc
or
inc
sbb
movl
cmp
sti
les
inc
sub
lea
test
inc
pop
xor
xlat
nop
mov
ds
insb
sub
or
cli
pop
in
mov
inc
xchg
xchg
or
push
xor
mov
mov
ja
sbb
jne
push
push
xchg
and
jne
jg
loopne
cmc
jmp
sbb
push
hlt
je
sti
repz
pop
out
sbb
lea
adc
pop
mov
je
ljmp
adc
loopne
ror
out
sti
fldl
or
push
inc
add
or
rorb
cld
inc
inc
daa
add
fs
or
add
orl
jb
roll
in
and
add
in
inc
dec
xor
or
roll
out
movsb
adc
mov
andb
sbb
hlt
xor
cli
lock
inc
jo
jl
cmp
mov
mov
cmp
in
aad
sub
adc
loopne
or
inc
pop
incb
push
mov
mov
mov
pop
inc
adc
adc
cmpsl
or
fdivrs
mov
add
and
pop
repnz
test
int
and
int
mov
mov
bound
outsl
push
popf
fs
fdivrs
mov
lcall
pop
adc
add
dec
mov
xor
adc
fdivl
xor
pop
hlt
test
jmp
pop
jne
je
adc
dec
xchg
or
ds
fisttps
pusha
nop
sbb
test
pop
push
fidivl
mov
push
hlt
adcb
sti
push
push
fnstenv
loope
fs
stos
push
fcmovnbe
mov
or
mov
aam
lret
ds
nop
push
sbb
sbb
loope
and
push
inc
add
pusha
xor
mov
loop
or
adc
pushf
rorb
sbb
add
push
mov
sarl
ret
pusha
and
nop
and
popf
xor
push
jecxz
or
enter
xor
adc
inc
call
and
add
adc
dec
mov
inc
or
and
add
push
dec
js
testl
or
stc
jmp
xchg
inc
sbb
inc
inc
or
fbstp
sti
adc
sti
jmp
xor
mov
in
jo
cmp
int
mov
cli
push
faddl
cmp
jae
inc
sbb
xor
imul
xor
push
push
mov
out
cmp
dec
push
shrl
cli
jb
add
adc
sub
and
pop
inc
inc
movsb
test
stos
or
mov
and
ljmp
and
add
sub
inc
jmp
xlat
pop
ja
mov
pop
jmp
lcall
push
test
leave
cltd
cmp
rcl
rolb
lods
aaa
add
sbb
mov
sub
add
cmpl
cmpb
insb
inc
out
test
fs
ficoml
and
sbb
sbb
inc
sub
or
mov
pop
shrb
mov
std
pop
cmp
or
xchg
mov
add
add
sbb
jmp
lock
mov
movb
push
mov
je
and
push
sub
or
movsb
popf
lret
pushf
pop
dec
inc
jo
adc
pop
sub
mov
add
mov
adc
mov
xchg
pop
mov
ret
jbe
sarb
jmp
test
jge
xchg
jo
fsubs
mov
dec
pop
das
pop
rorb
jg
adcb
mov
pop
mov
and
mov
imul
sub
pop
inc
mov
add
lods
adc
pusha
mov
xor
xchg
pop
dec
ret
pop
xor
xor
daa
xor
js
or
cmp
mov
inc
adc
mov
std
xchg
mov
hlt
test
jge
push
out
test
movb
jbe
add
cmp
rcrb
jbe
sbb
add
ljmp
mov
pop
psllq
xor
sbb
pop
add
in
lea
and
call
pop
cmpl
sub
xor
xchg
dec
es
inc
cmp
cltd
add
dec
xor
loopne
xchg
and
xchg
mov
push
sub
nop
out
add
lock
pop
paddusb
dec
fistl
lcall
push
sbb
push
jge
aad
pop
push
pop
mov
clc
inc
or
ljmp
add
imull
addb
out
cmp
lcall
ret
and
push
or
mov
or
dec
testb
push
mov
lea
add
fcomps
stos
push
loope
lret
xchg
cltd
loope
sti
rolb
inc
mov
pop
lret
lds
mov
adc
jge
inc
or
adc
insl
or
or
cmp
sbb
push
jg
pop
jecxz
mov
fsubrl
sub
movb
std
test
out
andb
add
jecxz
add
pop
pop
push
sbb
sub
push
cs
xchg
adc
loopne
dec
sahf
mov
mov
pushf
pusha
fbstp
pushf
andl
dec
aad
mov
orb
xchg
les
adc
sub
add
enter
addr16
and
jmp
lret
cmc
mov
pop
adc
repnz
jmp
inc
adc
lock
loope
push
mov
pop
loopne
insb
test
cmp
add
call
cmp
leave
inc
stos
or
sbb
xchg
cvttps2pi
movhps
nop
into
aaa
inc
enter
cltd
inc
stos
add
mov
mov
jg
fsubrs
and
pop
xor
pop
out
fwait
imul
sub
repnz
xlat
arpl
mov
es
in
push
pop
or
stos
jno
cmp
push
test
aaa
aad
gs
add
imul
adc
int3
repnz
jl
or
dec
mov
mov
sub
fsts
xor
and
movsb
aad
iret
mov
jb
mov
push
cmpb
add
pop
repnz
cs
pop
add
iret
les
push
jle
push
adc
enter
in
adc
push
sub
pop
sahf
inc
fisttpl
push
outsl
scas
sbb
mov
xchg
add
arpl
pushf
roll
test
push
les
dec
mov
sub
cmp
repz
sbbb
loope
test
nop
es
mov
cmp
jge
in
int3
inc
and
pop
dec
enter
outsl
mov
bound
cmpsb
cmpsb
loopne
inc
repz
push
add
subb
push
sub
mov
testb
adc
pop
add
or
jnp
cmpsl
and
push
jo
xchg
mov
sbb
repnz
fiadds
mov
mov
testl
pop
add
cmpsb
sub
cmp
cmp
fwait
hlt
cmp
xchg
subl
cmpsb
mov
dec
ja
subl
shlb
xlat
sti
and
sub
add
sbb
mov
pop
or
nop
or
and
push
or
insb
popf
stos
fnstsw
and
mov
iret
pop
jg
adc
push
push
lea
push
roll
mov
fwait
adc
add
inc
inc
pop
incb
scas
mov
xor
sbb
out
sbb
pop
mov
jo
push
jg
jle
xchg
or
mov
inc
or
pop
or
sbb
aaa
sbb
xchg
xchg
xchg
pop
or
or
pop
or
add
fsubs
xor
xor
mov
lcall
and
xor
adc
mov
movsl
push
mov
insl
adc
lds
aas
mov
add
dec
pop
jnp
and
cmc
xchg
adc
les
inc
xchg
test
das
jne
adc
jl
pop
imulb
or
mov
adcl
cli
jmp
pop
jg
je
insl
jecxz
ja
inc
mov
push
jno
add
mov
cmp
jge
mov
push
ds
test
mov
negl
loope
xor
mov
nop
test
test
fsubs
push
ret
orb
mov
outsl
jne
sbb
or
add
test
lock
inc
fcomps
and
rolb
adc
xor
in
add
push
sbb
xor
jb
mov
cli
push
cmpsb
push
mov
mov
test
mov
into
shlb
test
and
pop
shlb
rcrb
add
push
dec
add
incl
and
inc
test
jge
imul
add
or
pop
jno
or
inc
clc
mov
sbb
pop
cwtl
lock
je
sub
nop
mov
mov
or
call
incl
cli
cmp
cmp
xor
andl
cli
or
mov
cld
mov
jo
xor
das
add
daa
faddl
idivl
push
mov
push
test
sahf
sbb
test
fyl2xp1
shrl
pusha
and
rcrb
ds
jne
jecxz
add
add
call
lods
mov
pushf
adc
cmpsb
inc
sub
imul
sub
outsl
cmc
sbb
push
call
sbb
in
xor
and
lea
inc
or
daa
testb
cwtl
sbb
scas
andb
add
cld
adc
mov
les
enter
arpl
mov
jo
lock
inc
loopne
movsb
lret
aad
popa
add
mov
nop
xor
mov
push
pop
or
jnp
cmpl
adc
movsl
lea
jl
sbbl
pushf
or
outsl
push
pushf
movsb
pop
jge
and
into
mov
jo
adc
sbbl
push
into
shlb
mov
clc
xor
inc
mov
pushf
stos
jle
dec
or
and
inc
inc
mov
arpl
js
mov
adc
outsl
test
inc
jl,pn
or
mov
or
adc
jle
adc
pushf
cmpl
mov
xlat
xor
mov
jo
movl
loopne
bound
mov
insl
cs
dec
addr16
std
push
rcll
adcl
lahf
or
test
adc
roll
cmpb
clc
je
testb
push
adc
sub
cmp
imul
cmp
xchg
ja
test
lea
pop
ljmp
adc
add
push
in
js
sarb
or
sbb
xor
les
mov
cs
add
sub
nop
push
je
sub
icebp
icebp
movsl
add
vpsllq
inc
ljmp
inc
add
xor
dec
outsl
in
shll
xchg
inc
xor
xchg
xor
pop
pushf
mov
inc
imul
mov
add
pop
jge
xor
push
xchg
div
cmp
enter
cmp
adc
or
or
jae
mov
nop
mov
pop
mov
lret
sub
je
pushf
push
mov
or
and
or
mov
add
add
push
cmp
shlb
shrb
je
mov
push
or
push
sbb
or
faddl
int3
dec
jmp
dec
add
repz
mov
jnp
inc
leave
out
jle
adc
xorb
push
pop
mov
fldcw
jns
or
js
cmp
mov
rclb
in
and
add
movsb
jo
dec
out
xchg
sbb
push
aas
add
and
out
push
push
xlat
lock
les
jl
loopne
adc
inc
aaa
ret
add
xchg
adc
fisubrl
movsl
sub
shrl
imul
shrb
fsubrs
fcmovnbe
pushf
jae
test
xor
xchg
popf
hlt
mov
cltd
xchg
inc
inc
inc
push
outsb
pop
fcomps
pop
lcall
je
bound
inc
sub
in
inc
je
daa
push
loope
dec
push
pop
mov
ret
or
xor
xchg
inc
sbb
cmp
dec
or
loopne
inc
fnsave
popa
cmpsl
popf
fidivrl
and
sahf
orb
je
mov
mov
adc
cs
cmpsb
pop
or
aam
and
inc
and
sub
inc
push
sbb
and
xor
aam
fdivl
je
adc
or
and
dec
test
sbb
inc
push
and
movsl
mov
inc
xor
ret
icebp
rolb
jno
sub
je
inc
popa
inc
and
loope
xchg
add
or
sub
insb
inc
pop
push
jo
dec
pusha
xor
mov
sub
cmp
push
rcrb
ror
inc
int
hlt
lods
cwtl
les
daa
lahf
and
dec
ljmp
sbb
lcall
jecxz
push
aaa
pop
int3
and
adc
and
add
add
aas
xor
adc
orb
xlat
popa
icebp
ljmp
rclb
imul
xlat
jno
xor
dec
and
mov
movswl
inc
or
mov
aas
adc
pushf
mov
cmp
sbb
push
bound
mov
notb
arpl
pop
adc
popa
push
rcr
xchg
add
stos
push
call
ja
fdivrs
in
das
push
and
push
ficompl
lds
sbb
xor
pop
sahf
or
mov
mov
addb
cmp
movsb
add
xchg
inc
fcomps
sbb
adc
mov
nop
mov
jle
sbb
in
mov
je
xchg
into
cmpsl
xor
inc
adc
xor
mov
js
and
mov
outsl
sbb
movsl
clc
push
sbb
xchg
cmp
sub
adc
inc
sbb
test
scas
repnz
add
xor
dec
lock
adc
push
scas
jo
adc
adc
adc
sub
xor
jecxz
frstor
fildl
daa
add
in
aas
cwtl
gs
scas
push
cmpl
sbb
scas
mov
push
ficoms
or
dec
adc
xor
sti
push
push
mov
xor
movsb
jg
mov
inc
adc
cmp
jne
adc
or
add
shld
insb
sub
flds
xlat
or
and
aad
shlb
pop
dec
pop
add
js
mov
adc
sbb
bound
test
lods
or
inc
sub
ja
hlt
inc
add
call
jg
or
mov
mov
loopne
or
or
pop
adc
daa
adc
cmp
inc
jo
cwtl
sbb
aaa
adc
ljmp
cmp
jle
rcl
dec
loopne
add
int3
das
fadds
dec
cmp
push
lea
inc
and
jne
adcb
add
mov
or
xchg
add
test
mov
pop
inc
leave
rclb
addr16
enter
je
jecxz
adc
fbld
mov
or
mov
adc
cmpsb
adc
outsb
sub
push
cmp
je
and
adc
jnp
inc
pop
cmp
adc
fwait
int
jne
subb
cmpb
push
jne
in
and
xlat
insb
add
mov
pop
nop
fmull
or
cwtl
push
mov
test
fstpt
pop
adc
xor
xor
or
pop
ss
or
cmp
and
loop
jg
or
cmp
rclb
loopne
xor
jno
imul
or
xor
xor
orl
cmpsb
call
stc
adc
adcl
shll
or
mov
add
and
sub
pop
add
push
xchg
sbb
fisttpll
and
sub
in
xor
repnz
push
sbb
inc
lret
in
std
lfs
pop
add
inc
shr
scas
pop
xlat
add
repnz
pop
leave
rcl
andl
pop
and
test
call
bound
outsl
aas
xlat
add
cmp
push
xchg
out
fcmovb
popa
add
pop
lahf
loop
sbb
and
cmp
outsb
sbb
addl
inc
add
mov
je
xchg
adc
ja
inc
loop
sbb
adc
nop
inc
fsubrs
shll
mov
xchg
int3
hlt
mov
mov
adc
add
jno
add
mov
push
push
out
mov
add
mov
jne
enter
idivl
js
inc
sarb
fsub
xor
xchg
out
and
adc
clc
aaa
inc
pusha
mov
mov
inc
lods
aaa
xchg
notb
xor
cmpl
pop
push
lods
inc
inc
bound
enter
insl
outsb
push
or
dec
or
dec
test
pop
jp
pop
add
jl
inc
inc
sub
pop
mov
lcall
or
fstps
mov
xchg
or
sbb
add
ret
or
dec
sbb
idivl
mov
lock
or
push
cmp
or
adc
or
mov
addb
cmp
push
ja
fldcw
in
clc
pop
sbb
mov
add
fcomps
clc
inc
xor
push
jge
sub
sbb
or
push
out
popa
fiaddl
ljmp
loopne
pop
adc
inc
push
cld
adc
lods
add
push
out
pusha
sub
pushf
pusha
cwtl
mov
movd
or
popa
add
lock
mov
adc
push
movsl
add
ret
rcll
lock
mov
incl
lock
jle
xorb
call
ja
and
and
xchg
or
push
push
xchg
data16
fwait
adc
jbe
mov
mov
add
stos
sbb
sbb
pop
push
inc
call
punpckldq
outsb
lahf
or
add
xchg
nop
and
sub
imul
mov
dec
loop
pop
or
pop
mov
mov
pusha
shll
out
add
and
clc
pop
push
add
stos
sub
sahf
or
shrb
and
movhps
push
ret
pop
lea
loopne
shl
movb
hlt
sbb
cmp
jl
das
push
movsb
adc
jo
lods
fldl
or
pop
arpl
dec
or
push
out
adc
xchg
and
inc
cwtl
ds
mov
add
fildl
adc
jl
lock
push
mov
scas
cmp
sbb
ss
add
dec
add
pop
inc
xorl
ficomps
cmc
inc
or
test
dec
test
movsb
neg
or
shll
aas
fmulp
add
cmpsb
test
adc
cwtl
dec
mov
pandn
test
xchg
jmp
push
pop
cli
add
into
xchg
lock
fs
inc
or
aas
out
stos
pop
jle
sub
push
adc
sub
push
push
push
push
lds
cld
lcall
jae
push
push
push
pop
insb
adc
ret
pop
mov
testb
je
push
mov
fsubrs
inc
sbb
fs
cmp
jbe
das
dec
icebp
xchg
arpl
pop
xor
or
ds
sub
je
mov
cmpsl
dec
mov
push
push
inc
push
mov
cmp
xchg
and
push
xchg
push
jns
fistps
mov
pop
xor
outsl
cmp
sub
sti
push
adc
push
and
add
das
mov
rorb
subb
pop
adc
xor
fbstp
xchg
jns
mov
adc
bound
rolb
loopne
inc
xchg
push
mov
push
xor
addl
shlb
popa
movsb
sbb
cmc
adc
int
xor
sub
outsl
lods
ret
inc
add
clc
dec
or
xchg
loope
mov
push
add
mov
ss
lret
sub
leave
and
js
sub
adc
sbb
and
clc
faddp
pop
pop
adc
or
vcomisd
push
leave
lods
flds
push
repnz
adc
incl
pusha
xor
pop
xchg
mov
mov
adc
js
push
push
sub
sbb
add
mov
add
sub
or
adc
sbb
and
jmp
adc
xchg
test
and
andb
add
mov
push
adc
dec
add
pop
inc
das
pusha
mov
je
sub
add
das
push
and
cmp
cmp
jns
push
push
mov
xor
sahf
inc
out
lahf
out
xchg
xor
out
loopne
xor
adc
test
hlt
and
and
inc
lock
es
test
sti
push
mov
add
sub
xor
xchg
mov
fsubr
add
bound
jg
cmp
jle
sub
lcall
jae
das
sbb
or
ret
sub
cmp
or
xchg
or
mov
fstps
jbe
push
cltd
mov
mov
mov
jne,pn
orl
add
insl
dec
adc
ja
test
je
aaa
pop
or
xlat
push
je
lods
jae
frstor
mov
inc
add
push
je
out
inc
int
notl
or
lret
and
dec
adc
cld
mov
insl
cmp
and
jg
loop
add
jmp
aam
mov
cmpb
push
sbb
cmp
repnz
or
dec
add
imul
mov
loope
test
mov
mov
lcall
test
pop
outsb
rcrl
and
or
mov
lock
mov
mov
push
inc
lods
push
mov
cmp
mov
push
mov
fadds
out
jmp
in
push
sbb
mov
ret
loop
inc
push
mov
add
push
call
addr16
dec
add
push
pushf
mov
daa
add
xor
mov
je
adc
ss
or
xor
daa
sbb
add
in
jmp
sbb
sbb
cltd
sub
add
mov
stos
lahf
or
xor
and
fadds
sub
loop
pop
loopne
mov
xor
mov
aaa
gs
jecxz
pop
fsubrs
popa
push
cmp
icebp
les
inc
or
mov
inc
jb
and
xor
adc
or
add
mov
mov
jno
mov
lods
cld
xchg
push
or
cmpsb
mov
mov
add
push
jae
clc
popf
mov
sub
adc
adc
sbb
push
push
and
jno
jge
lds
andb
stc
or
popa
call
xor
addps
inc
inc
daa
inc
adc
xorl
sahf
inc
push
add
imul
dec
adc
ljmp
pop
mov
rclb
sbb
ds
adc
lahf
cmc
pop
andl
je
inc
jle
jno
mov
jne
lahf
mov
and
xor
imul
mov
dec
pop
movsb
sbb
stc
sub
adc
mov
cmp
push
push
jne
in
adc
outsl
js
jge
xchg
and
lods
jns
mov
pop
pop
lahf
sbb
xchg
add
subb
cmpl
sub
ja
and
jns
lock
and
adc
jb
mov
ret
push
push
push
in
add
or
adc
cwtl
enter
mov
rcll
fimull
xlat
mov
xchg
pusha
add
mov
push
iret
mov
mov
push
lods
sbb
ss
and
adc
or
jo
lods
popa
inc
or
push
leave
int3
inc
cmp
call
lods
shrb
inc
and
leave
aad
lock
sbb
call
roll
jbe
orb
adc
or
or
mov
mov
pushf
stos
in
or
jg
cwtl
mov
or
dec
lret
out
push
xor
imul
push
jno
ds
mov
clc
je
cmp
insb
and
push
addl
xchg
pusha
jmp
int
ss
les
jmp
jmp
aaa
mov
popf
arpl
pusha
fstp
pusha
sub
xor
push
cwtl
jge
cmpb
sbb
or
mov
or
setge
sahf
or
xchg
inc
inc
push
es
call
dec
dec
outsl
push
inc
ret
pushf
add
into
mov
testb
enter
push
push
ds
push
push
or
pop
pop
and
adc
inc
push
out
les
repz
add
scas
cmp
daa
cmp
jl
sahf
add
ret
pop
xlat
xchg
dec
add
unpcklps
xlat
dec
out
mov
pop
imul
nop
jecxz
int3
pop
and
inc
test
inc
addl
push
cmp
je
jge
and
daa
dec
add
movb
pusha
leave
stos
inc
and
daa
jne
stc
leave
xchg
lahf
and
cmp
jle
cmp
fadds
xor
adc
jmp
andl
push
insb
lcall
mov
in
mov
add
roll
adc
addb
sti
push
xchg
mov
jne
mov
jge
cmpl
push
jne
fidivl
daa
push
mov
mov
xchg
jp
mov
and
sahf
lcall
adc
add
arpl
mov
jae
idiv
jl
or
mov
add
jle
lock
inc
cmpl
pusha
or
fst
add
or
pop
emms
fdivs
cmp
in
sub
pop
data16
fs
int3
fs
js
adcl
shll
mov
rolb
adc
cmc
mov
xor
jne
pop
pop
mov
push
pop
sbb
xor
push
repz
mov
pop
sbb
in
cmpsl
mov
lock
imul
push
pop
dec
sub
xchg
xorb
lret
sub
and
sbb
xor
mov
shrb
push
dec
pop
shlb
mov
ja
mov
jp
adc
push
sbb
in
sbb
sub
pop
in
pop
xchg
push
cmp
call
and
add
aad
add
stc
pop
sti
cmpl
pop
cs
sub
jecxz
add
mov
mov
inc
pop
add
imul
adc
into
adc
pop
test
adc
sbb
in
bound
sub
sub
jo
js
outsl
push
mov
adc
jne
dec
push
stos
xchg
aam
mov
pop
roll
inc
ds
push
jnp
push
js
cmp
xlat
inc
cmp
xchg
inc
cmpb
or
sbb
cs
hlt
mov
sbb
xor
aam
mov
pop
cli
sub
or
cmp
pop
cmpb
test
dec
ret
cmpsl
pop
mov
xor
test
mov
les
int
out
shlb
popa
lods
xchg
sbb
test
not
xor
sub
je
mov
das
movsb
ret
adc
mov
das
lock
les
fisttpll
sbb
repnz
inc
dec
dec
clc
xchg
adc
mov
sub
sub
adc
inc
jo
es
cmp
fcmovu
add
pop
mov
lds
js
je
inc
lcall
cmp
and
sbbb
mov
ss
xchg
pop
adc
aad
mov
aaa
adc
inc
vmovupd
jb
ja
and
jg
jg
sbb
pop
push
push
cmpsb
dec
rorl
lock
jmp
pop
mov
cmpb
adc
sbb
push
iret
mov
sbb
jne
mov
pop
ret
or
sub
dec
add
pop
ja
push
pop
mov
cmp
ss
dec
push
jo
dec
push
sub
and
sub
sbb
je
adc
mov
jo
dec
dec
adc
test
jns
pop
lds
fwait
inc
cmp
sub
fwait
inc
jmp
push
dec
adc
jne
das
js
and
jmp
dec
rolb
pop
jnp
sub
and
push
pop
xchg
lods
and
cmp
push
push
jmp
push
lock
addr16
cld
mov
push
popf
jl
adc
or
dec
int3
pop
pop
add
das
push
pop
jmp
mov
lea
push
jnp
leave
ret
or
jns
push
lea
lea
test
lret
sbbl
mov
fwait
mov
movl
popl
jne
adc
out
push
jl
dec
push
dec
cmpsl
lcall
lods
je
int
in
sbb
mov
test
mov
sbb
pop
inc
addr16
mov
aas
incl
jnp
popa
or
mov
adc
xor
xor
cs
ret
add
rclb
mov
sbb
scas
in
nop
adc
xor
adc
inc
or
js
je
and
fsubrl
inc
lods
adc
ret
out
push
inc
sub
sbb
aas
fsubr
loopne
sbbl
ret
adc
xor
das
add
xlat
push
sahf
or
scas
stos
add
xchg
dec
lods
jno
fdivr
hlt
adc
mov
orl
cli
imul
push
jno
or
mov
sbb
mov
sbb
inc
xchg
leave
push
sub
mov
pop
sub
rclb
push
out
xorb
loopne
xor
cld
andl
mov
xorb
sbb
cmp
adc
js
push
insl
cmpsl
lcall
cmp
lock
mov
ja
add
add
push
xchg
or
add
jns
mov
sbb
and
sub
mov
inc
xor
into
dec
or
mov
leave
adc
adc
mov
xchg
scas
mov
add
sti
add
daa
lea
mov
stos
lea
xchg
push
mov
add
loopne
gs
xchg
mov
inc
or
call
gs
xchg
lock
add
and
push
in
call
out
and
data16
nop
test
jp
mov
not
rcrb
push
mov
add
mov
sbb
add
cmp
lods
imul
fwait
out
lock
mov
xchg
lea
adc
orb
rclb
push
push
dec
adc
push
pop
cmp
cmp
dec
rcl
dec
rcll
mov
daa
call
fnstsw
mov
loope
mov
or
fdivs
adc
mov
jp
jmp
jl
sbb
clc
scas
mov
and
fbstp
mov
shlb
dec
outsb
lods
jbe
cmc
hlt
xor
ret
inc
xor
sbb
mov
decl
pop
hlt
push
xor
cmpl
hlt
pushf
ljmp
push
outsl
fstl
push
ljmp
andl
addl
mov
jl
imul
cmpl
jne
fwait
fdivrs
mov
sub
cmp
xor
and
sbb
pop
or
insb
cmp
cmp
sub
fbstp
add
push
mov
aad
popf
xor
inc
enter
int3
lcall
mov
xchg
std
repz
scas
cmp
adcb
rolb
nop
loopne
xchg
mov
dec
sbb
mov
ret
xchg
les
xchg
push
ja
pop
or
ret
mov
xor
mov
nop
xchg
xor
ds
sbb
jno
out
xchg
cmp
push
or
sbb
mov
or
rorb
out
or
xchg
adc
call
sub
add
lods
ss
loopne
cld
xchg
ja
jmp
into
mov
data16
mov
daa
imul
testl
iret
and
and
orl
jne
push
adc
mov
cmp
jmp
push
test
sub
pop
decl
ss
push
pop
or
leave
movb
push
clc
imul
je
mov
xorps
filds
popa
or
inc
jg
cmp
roll
movsb
cwtl
sbb
mov
mov
lods
push
fmuls
test
mov
mov
sbb
sbb
jl
mov
xchg
negl
push
pop
aas
movsb
xchg
mov
ss
push
repz
cmp
negl
cmp
push
mov
sbb
sub
fisubl
push
lods
mov
fsubs
out
mov
lock
insl
cmp
adc
mov
ret
cmp
pop
mov
or
dec
loop
dec
aaa
icebp
sub
imul
dec
idiv
mov
push
push
sahf
or
in
adc
xor
adc
ret
call
push
pusha
enter
sbb
ja
or
js
pop
sub
push
je
sahf
cwtl
ret
adc
cmp
push
pop
gs
sub
sbb
pop
adc
mov
mov
adc
mov
sbb
lret
mov
test
inc
aaa
xchg
dec
shll
or
add
or
ja
aas
or
inc
adcb
sub
jns
mov
push
sbb
sub
fcomp
les
mov
push
push
jno
aaa
int3
push
add
dec
cwtl
imul
jg
repz
or
dec
inc
cmpl
iret
je
cmp
je
xchg
adc
mov
or
loope
ret
jbe
orl
mov
in
lods
into
push
clc
pusha
cmp
xchg
out
adc
pop
jo
imul
inc
fiadds
sub
aam
or
fwait
cmp
ds
cmp
sub
or
je
push
mov
xlat
setae
ss
push
mov
xchg
ljmp
in
fs
xchg
arpl
jecxz
pop
add
add
push
add
add
sbb
sbb
push
ja
rcr
cwtl
shlb
inc
or
adc
pop
ss
ret
in
arpl
mov
add
fs
mov
jns
clc
adc
sub
jno
bound
ret
iret
sbb
xchg
inc
sbb
ficoml
or
or
fdivr
cmp
mov
rolb
outsb
faddl
sub
or
fadds
or
add
or
pop
push
dec
out
xlat
ret
jne
push
cmp
addl
pop
rol
shl
clc
movsb
jmp
mov
imul
mov
sbb
andl
xchg
jge
lock
dec
dec
and
sub
jmp
or
push
jle
xor
fldt
pop
rcrb
pop
call
or
mov
add
repz
mov
add
adc
lock
ret
addr16
pop
movsl
jo
mov
jmp
xchg
push
inc
mov
or
rcll
mov
nop
push
adc
inc
arpl
gs
ds
xchg
sub
mov
mov
xchg
fcoms
and
mov
jne
gs
data16
mov
inc
sbb
aas
and
pop
jne
idivl
or
testb
mov
not
and
fisttpll
cmp
cmc
lock
xor
sub
mov
inc
mov
mov
inc
andl
jecxz
dec
mov
je
adc
cmp
xor
addr16
xchg
inc
adc
push
das
fstl
out
inc
faddl
roll
push
xor
scas
orb
fsubr
jbe
jecxz
jl
movl
adc
cmpsl
je
ret
cltd
xor
out
cmpsb
cltd
out
fildll
sbbb
int3
push
inc
pop
push
mov
rcrb
icebp
mov
scas
in
push
or
add
push
movsb
sbb
add
fwait
test
lods
loopne
cmp
or
jge
mov
aaa
add
and
loop
pop
pop
incl
push
nop
notb
dec
or
inc
fildl
inc
dec
sbb
cmp
jno
mov
sub
fdivrl
pop
iret
mov
je
mov
imul
adc
pop
and
orb
xor
mov
cmp
lods
or
repnz
xchg
pop
test
jnp
rorb
push
xchg
and
push
pop
stos
repnz
pop
ja
stc
push
testl
sub
dec
loopne
and
sbb
in
add
inc
mov
mov
cmp
jbe
jmp
xor
in
nop
xor
icebp
test
mov
cmc
cmc
or
dec
cmpsl
xlat
mov
push
push
inc
pop
cltd
inc
cmp
xor
mov
and
pushf
sbb
add
push
jp
sub
mov
lods
jae
dec
push
jno
mov
and
jle
and
ja
aaa
and
das
std
inc
dec
or
bound
sar
jge
inc
in
outsl
test
sbb
outsl
imul
push
les
adcl
test
les
inc
inc
xlat
repnz
loop
fwait
sbb
mov
aad
stc
pop
lds
adc
xor
inc
sub
adc
call
nopl
add
sub
inc
add
inc
push
adc
cli
stc
or
add
inc
or
in
xor
js
je
or
fldenv
pop
js
dec
add
aas
nop
push
movsb
mov
sbb
xor
insl
mov
xor
or
mov
mulps
cmp
ss
iret
pop
add
addr16
mov
inc
loope
lcall
mov
or
mov
fwait
adc
mov
push
sub
push
or
or
adc
pop
jnp
inc
stos
test
push
or
sbb
push
push
pop
adc
cmp
mov
or
addb
pop
add
or
xor
dec
addps
pop
das
lock
xor
lock
jmp
mov
dec
adc
jmp
les
add
shlb
in
adc
sub
or
es
js
cs
icebp
mov
xor
or
sbbl
jmp
dec
les
add
pop
mov
add
test
inc
movzbl
lret
test
mov
outsl
add
mov
movb
test
xlat
daa
nop
ss
fcoml
dec
mov
xorl
and
xor
sbb
or
mov
sub
or
clc
sub
dec
add
stc
add
leave
stos
nop
rcr
mov
xchg
add
stos
pop
xchg
into
inc
dec
daa
or
in
or
cmp
ret
jbe
jl
in
xor
leave
sub
adc
rcrb
pop
lods
pusha
add
cmpl
mov
adc
adc
sub
fs
pusha
test
fldt
fmulp
cmp
add
sbb
xchg
push
test
shl
mov
inc
fldl
test
xchg
cmc
dec
add
sub
or
loopne
lret
pop
xor
or
cmpb
xchg
or
std
adc
hlt
bound
jge
repz
adc
cmp
sub
ror
sub
out
adc
fbstp
xchg
dec
imul
jle
ja
out
stos
lock
jge
jne
sub
rorb
in
aam
and
mov
jo
movsl
pop
mov
or
mov
xor
push
shr
les
jmp
lea
das
in
int3
shrl
xor
adc
clc
dec
xor
cmp
mov
adc
and
add
jns
inc
insb
or
dec
clc
stos
jo
push
mov
mov
adc
add
sbb
nop
inc
or
push
in
movsl
fwait
sub
fwait
inc
aam
push
loopne
pop
scas
add
xchg
add
shrl
pop
xor
imul
dec
sub
sub
mov
xchg
out
cmp
jmp
inc
movsb
jae
dec
inc
sbbb
aam
and
pop
adc
add
loop
cmp
cmp
ret
js
push
fstps
icebp
insb
inc
dec
add
pop
xchg
dec
adc
and
addr16
inc
mov
lea
sbb
pop
sbb
rcr
cmpl
and
add
and
in
shr
aam
mov
push
hlt
mov
shl
test
sub
xchg
jne
in
mov
push
mov
push
imul
cmpsl
es
push
adc
xchg
out
outsb
popf
into
sub
mov
jmp
sub
jb
mov
lar
mov
out
adc
xor
or
xchg
jg
dec
addb
cwtl
je
xorb
mov
mov
adc
cmp
adc
add
pop
add
fnsave
adc
push
stos
in
sbb
jle
bound
int3
and
addr16
cmp
sub
jge
fsub
dec
add
xor
jnp
fisubrs
sub
sbb
cmp
adc
mov
sub
mov
pop
sbb
pusha
fsubrs
pop
pop
or
test
insl
fldt
dec
out
and
mov
or
test
mov
lret
inc
xchg
and
testl
inc
lods
add
adc
adc
pop
shrb
or
add
adc
xor
addr16
inc
pop
gs
mov
sbb
popf
rorl
iret
sub
xchg
movl
sbb
movsl
push
cli
daa
add
or
sub
je
mov
push
xor
imul
xchg
aas
xor
test
inc
cmpsl
push
sub
sub
pushf
pop
scas
fucomi
faddl
inc
imul
adc
push
or
cmp
jnp
imul
add
dec
xor
dec
orb
pop
xchg
stos
jne
jbe
enter
pop
push
jns
xor
hlt
popf
pop
in
popa
ret
cmp
cli
or
mov
pop
dec
jg
fsubrs
aaa
pop
mov
jo
sar
cwtl
push
adc
jns
adc
pop
imul
ret
add
pop
mov
pop
in
jnp
imul
jne
jne
add
cwtl
cmp
jge
sbb
jmp
in
xor
int
mov
loop
fucomi
stos
sbb
sar
ljmp
sub
sub
out
sbb
mov
mov
add
orl
xor
mov
jmp
or
aaa
push
sub
lea
push
xchg
in
repz
orb
mov
fdivs
test
fwait
dec
xor
imul
imul
xor
inc
ret
mov
add
jno
add
jo
lock
and
add
cwtl
dec
cmp
notb
push
cltd
mov
lock
add
fs
lock
cmp
mov
xor
adc
ss
add
icebp
mov
add
jmp
mov
adc
add
mov
cmp
lods
scas
jle
adc
xor
xchg
push
mov
in
mov
enter
sub
mov
mov
or
and
cli
je
push
mov
cmp
push
icebp
xor
jne
dec
pop
jbe
lret
mov
js
xchg
adc
js
mov
int3
jmp
das
fmull
pop
test
movq
adc
sbb
mov
mov
enter
push
adc
add
dec
sbb
sub
xchg
sub
xchg
add
and
sbb
cwtl
dec
sub
jo
cmp
and
add
mov
mov
pop
fisttpl
daa
sub
and
inc
movsl
fcomps
and
test
jne
push
adc
sbb
shlb
or
or
pop
imul
imul
xchg
jb
test
add
adc
addr16
dec
stos
add
or
mov
loope
adc
cmp
call
daa
ss
insb
fmull
sbb
jne
or
mov
xor
xor
sbb
or
dec
stc
cs
orb
inc
cld
sbb
outsb
out
sbb
fsubl
or
adc
test
mov
add
or
clc
sbb
or
fucomip
xchg
in
dec
or
jo
xchg
and
jo
or
and
sub
sub
std
por
rcrl
push
pusha
add
inc
mov
lods
stos
cltd
adc
inc
scas
mov
cld
push
push
ret
push
or
xchg
fldt
andl
cmp
or
add
or
adc
add
mov
pusha
insb
inc
sub
or
mov
hlt
insb
mov
jbe
lahf
push
add
filds
pop
imul
adc
rcll
dec
jae
jno
pop
aaa
fcompl
insb
das
add
or
mov
jb
add
or
insb
ror
nop
fwait
dec
add
in
in
mov
cs
adc
popa
add
xchg
shl
sub
mov
int
xor
or
loopne
clc
sub
pop
or
add
out
mov
adc
pop
or
dec
fcoml
inc
xor
sbb
push
cli
fcompl
je
mov
push
xlat
ljmp
push
call
jecxz
sbb
js
mov
cli
or
push
and
inc
push
and
push
mov
adc
mov
dec
cmpl
push
mov
add
xchg
addr16
addl
sbb
push
mov
mov
aad
shrl
aas
jmp
push
in
bound
add
jecxz
movsb
hlt
cmp
push
or
fldl
dec
int
push
or
or
xchg
sbb
push
inc
shlb
push
mov
mov
dec
or
ja
add
pop
nop
or
ret
sbb
add
call
or
xchg
pop
orb
or
jl
jge
shl
out
or
jge
adc
pushf
push
ss
imul
adc
sbb
stos
mov
push
xor
out
loopne
push
pop
xor
nop
pop
and
pop
sbb
jo
add
dec
das
inc
mov
sahf
mov
xchg
sbb
sub
sbb
test
fsubrs
xor
jmp
inc
sub
dec
imul
adc
les
aaa
mov
and
and
orb
sub
mov
dec
cmp
ret
rcrl
jns
sub
jns
test
pop
cmp
sub
mov
xor
popa
sbb
push
popa
xor
movl
mov
cltd
add
mov
nop
add
sbb
jp
je
hlt
or
pop
mov
add
test
add
cmp
mov
out
xor
cmpb
xchg
inc
rol
sub
sub
mov
loop
mov
imul
sbb
mov
sub
jns
pop
lock
add
subl
insb
pop
pop
cmp
mov
dec
clc
cmpb
insb
les
sub
lock
pop
inc
stos
aam
frstor
sbbb
imul
inc
dec
gs
fdivrl
or
or
xchg
lret
sahf
jmp
adc
test
dec
jne
data16
push
in
addb
adc
sub
inc
mov
and
mov
sub
mov
xor
iret
add
bound
dec
cmp
rol
aam
adc
ja
rcr
cmp
sub
jns
push
fnsave
and
xor
add
icebp
or
adc
das
adc
or
sub
add
xchg
and
pop
ss
jp
rol
push
jl
ret
mov
addb
jmp
aas
mov
inc
lcall
movb
ret
push
xchg
and
out
outsb
add
pop
push
mov
pop
daa
pop
dec
adc
pop
enter
pop
xor
adc
clc
sbb
xor
stos
in
mov
out
xor
and
ds
mov
iret
sbb
aam
lret
stos
nop
inc
add
adc
add
mov
das
xorb
mov
leave
test
jb
pop
adc
xchg
or
pop
nop
add
pop
aam
aam
arpl
cltd
pop
lea
ret
xchg
cltd
pop
jb
dec
cmpsb
popa
loop
add
pop
or
mov
jb
shlb
sbb
fwait
pop
loopne
mov
mov
jecxz
subl
rorb
jge
and
adc
ret
andl
mov
mov
jb
shrl
jg
dec
jmp
out
rorl
cmpsl
add
popa
sub
icebp
mov
push
mov
sub
andb
and
push
push
lock
clc
fwait
test
jne
call
xchg
les
rclb
or
adc
push
dec
verr
mov
dec
ljmp
scas
xchg
push
and
xchg
adc
mov
dec
ret
pop
repnz
push
or
nop
pop
ret
add
fwait
fwait
push
push
cmp
popa
cmp
jnp
sar
sar
sub
sub
out
lods
rorl
sbb
add
xlat
dec
cmp
sbb
sbb
inc
inc
xchg
in
daa
cmp
or
das
mov
leave
leave
push
dec
jecxz
mov
push
or
add
data16
leave
xor
pusha
imul
add
pop
orl
aaa
or
aas
adc
ret
pusha
add
loop
shrb
js
nop
jnp
dec
pop
fstl
inc
inc
add
sub
inc
ret
xchg
or
push
ss
and
sub
inc
cmp
inc
cmpsl
mov
push
jmp
mov
cs
sub
xchg
or
xor
fs
sbb
mov
jl
pminsw
pop
inc
add
push
xor
ja
sub
xor
inc
data16
dec
dec
sbb
jge
pop
mov
mov
jg
out
lock
add
and
or
loope
arpl
push
pop
push
orl
add
add
xchg
invd
or
ds
inc
sub
jge
sbb
sbb
sbb
add
inc
adc
dec
filds
xlat
pop
push
jp
push
xor
jmp
fwait
jg
lock
frstor
dec
xchg
jl
or
xchg
or
sub
pop
add
xlat
loopne
cld
daa
bound
sub
pop
sbb
jl
cmp
sbb
sbb
sub
clc
sbb
jl
add
sub
mov
hlt
fsubrs
addl
movsl
gs
and
inc
and
adc
dec
clc
dec
adc
sub
lcall
xor
push
lea
xchg
pusha
mov
sub
popa
or
insl
and
sbb
push
push
add
push
sbb
sbb
dec
enter
sub
push
enter
rolb
xor
push
add
popa
scas
mov
xchg
sbb
dec
dec
std
bound
repz
mov
gs
inc
daa
and
out
xchg
lret
leave
cltd
xor
repnz
xor
xchg
insb
sub
loope
jnp
addl
movsl
fldt
mov
inc
shlb
popf
pop
dec
cmp
cmpb
adc
pop
rclb
or
ret
adc
mov
daa
mov
pop
and
loope
and
lock
push
fldt
xor
sbb
dec
lret
das
dec
cltd
addr16
jae
inc
cmp
pop
sbb
lea
cwtl
or
lret
or
cld
mov
fisttpl
out
inc
or
aam
push
mov
rcrl
mov
dec
test
es
divl
mov
stc
sahf
clc
clc
mov
sbb
xchg
add
cmpl
les
test
xchg
inc
mov
and
add
inc
sahf
daa
pop
jl
jae
mov
xlat
jle
cmc
das
mov
mov
out
mov
sub
call
ret
pop
and
mov
inc
cmp
cmp
dec
push
shlb
xchg
xchg
dec
lods
mov
iret
dec
pop
aam
lods
or
addr16
insb
test
add
and
sub
je
xor
and
addl
sahf
es
push
ror
repnz
add
into
aaa
mov
push
enter
xor
cwtl
and
push
loopne
lods
in
xchg
push
xchg
xor
push
cmp
xchg
std
mov
test
aam
adc
inc
insb
and
push
cli
lret
ljmp
fimuls
push
cwtl
shlb
dec
inc
das
cmp
dec
jnp
push
das
or
lahf
jmp
movsb
imull
fcmove
sub
xor
push
leave
or
movsb
pop
sub
adc
dec
insb
dec
jl
div
and
das
dec
or
or
das
sbb
insb
movsl
adc
xor
icebp
or
and
mov
mov
mov
push
xor
adc
movsb
ror
lods
popa
push
adc
sahf
or
or
sti
mov
mov
sbb
sbb
mov
inc
mov
cmp
mov
push
test
mov
xchg
ret
mov
pop
les
inc
jg
fists
xor
push
dec
adc
and
add
adcl
pop
test
mov
xor
mov
out
xchg
mov
ja
gs
test
cmp
rolb
scas
test
inc
jl
test
orb
inc
push
push
xor
inc
xor
js
movsb
cs
lds
xchg
mov
mov
clc
mov
nop
divl
adc
xor
inc
xchg
add
adc
mov
add
nop
inc
push
jns
dec
dec
dec
or
jmp
pusha
leave
xor
pop
and
insb
aas
insb
push
push
dec
pop
xor
notl
inc
push
mov
pop
mov
lock
xor
cmp
inc
push
inc
ja
or
xchg
int3
movsb
add
movsb
jns
lcall
pop
iret
aad
inc
inc
fisubrs
sbb
shl
pop
fistpl
pop
push
pusha
imul
or
push
jg
fsubrl
arpl
aam
aad
push
dec
inc
pop
flds
sbb
inc
jg
adc
fmull
ljmp
loop
cmp
jl
or
jg
cmp
inc
push
xor
pusha
xorl
fldt
ss
scas
mov
add
out
jae
xchg
add
or
jle
jmp
rcll
cld
adc
scas
in
mov
mov
repz
xchg
fcmove
sub
loop
ret
mov
jne
dec
mov
sub
lods
jno
xchg
jne
or
xor
orb
sub
je
pop
push
rol
shl
add
jmp
xor
shl
stos
mov
popa
jno
add
aaa
jae
pushf
or
pusha
cld
xchg
add
or
in
pop
cmp
push
test
nop
adc
sbb
mov
cmpsb
cmp
fcmovne
pop
lock
loope
add
test
jno
xor
jmp
lret
cmp
sahf
pop
jo
fs
test
cmp
adc
adc
adc
push
mov
ljmp
mov
or
cmp
sub
mov
lods
mov
test
xchg
cld
adc
sbb
mov
ret
imul
mov
aas
es
jne
out
jno
jns
imul
sub
push
ret
aaa
ret
cmpsl
negb
mov
inc
cmp
sahf
adc
xorl
fcompl
inc
insl
gs
inc
lea
insl
add
rcr
insb
das
aas
push
mov
fsubrs
je
pop
dec
jns,pn
js
inc
mov
shlb
in
outsb
jnp
dec
jne
pop
push
mov
insb
aaa
and
fiaddl
ljmp
addr16
push
cmp
rcrb
lea
add
pop
add
icebp
dec
lods
in
jae
pop
sbb
jne
jne
jmp
vprotb
mov
fistpll
pop
movl
mov
in
or
push
add
cmc
adc
or
adc
orb
dec
scas
cmc
dec
add
mov
inc
outsl
push
sub
icebp
cltd
dec
push
ljmp
dec
push
xchg
mov
call
sbb
push
xor
or
stc
sub
add
mov
or
inc
fwait
and
jmp
movswl
add
xchg
incl
jl
inc
sub
jl,pn
xlat
adc
and
fwait
test
mov
test
imul
sti
js
xor
outsl
fwait
js
dec
or
mov
pop
ds
push
push
mov
xor
dec
xchg
cltd
dec
loop
sub
aaa
xor
dec
mov
jmp
mov
iret
adc
sbb
mov
push
xlat
push
and
test
push
sub
arpl
jno
inc
or
sub
sbb
inc
decl
sub
mov
dec
test
rcl
nop
xor
insl
and
xchg
mov
dec
outsl
nop
pop
add
les
stos
and
mov
pop
mov
roll
rorl
add
cmp
gs
pop
mov
sbbb
js
inc
clc
jne
testb
dec
ret
and
xor
in
push
adc
push
and
imul
fmull
mov
adc
sub
cmp
fadds
dec
sbb
dec
inc
jb
in
testb
dec
cmp
mov
pop
jbe
sbb
inc
addr16
test
sbb
outsl
xor
js
mov
fnstenv
jmp
xor
or
inc
sbb
add
mov
inc
or
sub
sbb
dec
lock
and
sbb
add
shlb
cmp
jg
test
mov
movsl
push
mov
hlt
cmp
cmp
add
cmpsb
dec
mov
cs
inc
sahf
sub
pop
cmp
dec
rcl
sub
cmp
in
sbb
xor
xor
inc
add
jo
inc
rcl
push
sub
push
orb
sub
dec
mov
orb
js
jle
push
dec
cmp
aaa
pop
ret
ja
or
jp
imul
in
sub
sub
and
inc
or
xor
lock
adcl
inc
jmp
sbb
test
or
aam
and
jg
addr16
or
add
xadd
and
pop
dec
cmp
push
or
pop
sti
push
or
and
adc
js
sub
sti
and
push
add
movsb
sub
cmp
ret
xchg
push
xchg
lahf
sbb
push
arpl
pop
add
scas
sub
inc
xchg
iret
pop
hlt
je
sub
add
cmp
dec
pop
sbb
pop
mov
imul
and
push
imul
dec
dec
jne
sub
test
sub
xor
push
cmp
jp
fcomps
fimuls
addb
pop
mov
lock
xor
fmuls
xor
and
mov
xor
add
mov
cmp
add
lock
cmp
pop
lock
jo
shl
and
jns
lahf
invd
jl
fs
mov
push
jp
pop
adc
in
inc
push
add
pop
or
adc
inc
add
aas
push
cmp
rorb
mov
jmp
push
and
or
in
dec
add
divb
movsb
sbb
sub
xchg
mov
out
xchg
negl
pop
pop
xor
pushf
add
dec
lds
xchg
add
mov
add
mov
cli
mov
jle
mov
sub
insb
or
movb
cwtl
and
and
and
in
adc
movsl
outsl
mov
add
repz
pop
es
ret
je
adc
add
xor
mov
add
inc
adc
adc
movsb
xchg
or
sub
xchg
and
pop
dec
add
cmp
mov
and
adc
lock
imul
inc
ret
and
cmp
aaa
or
movsb
jo
or
int
fnstenv
pushf
inc
mov
xor
add
pusha
test
mov
adc
pop
pop
add
je
jge
mov
or
andb
les
popa
sub
jmp
push
pop
or
push
loopne
shr
inc
adcb
test
sbb
sub
mov
inc
ss
lds
arpl
add
imul
push
in
push
mov
adc
add
mov
inc
lret
fcoml
imul
mov
push
mov
imul
sarb
shlb
push
mov
je
pop
mov
xchg
sahf
or
les
inc
add
pop
out
add
or
xor
add
sub
mov
fucomp
mov
push
loopne
push
clc
mov
pusha
sbb
push
cwtl
ret
hlt
dec
jmp
js
or
push
pop
aaa
cs
insl
loope
cmp
jl
sub
popa
insl
inc
dec
jne
bound
push
fistpll
subb
mov
fs
sub
and
inc
inc
fcmovnu
adc
repz
adc
inc
nop
nop
insl
pop
in
add
dec
pusha
lahf
sbbl
addr16
jmp
push
or
les
jg
or
popa
sub
jo
in
adc
mov
sub
enter
jb
push
push
dec
or
leave
adc
mov
pop
out
xchg
and
inc
rcrb
outsl
cmp
sub
jecxz
push
dec
inc
dec
mov
push
cld
cmp
aam
mov
mov
mov
repnz
push
and
aaa
or
fsubrl
add
dec
mov
push
mov
enter
outsl
or
outsl
add
test
jbe
push
mov
in
sbb
ficoml
shld
movb
loopne
es
dec
cmp
stos
dec
dec
test
movsb
and
push
pusha
or
xor
sbb
inc
js
push
jns
sub
les
sub
jnp
and
or
add
sub
ds
scas
testl
dec
inc
or
sbb
mov
adc
xor
cwtl
jns
fildl
xchg
pusha
test
mov
push
add
and
inc
and
inc
cs
inc
adc
outsb
cltd
popf
sub
lea
jns
das
xchg
adc
les
cwtl
popf
mov
jno
adc
loopne
ja
loope
inc
jnp
int3
aaa
pop
add
or
pop
add
cmpsb
shll
or
or
aam
roll
addr16
jge
pop
or
pop
xor
mov
inc
cmp
dec
mov
test
cwtl
jbe
pusha
xor
rcrb
or
jbe
jne
cmp
test
lret
icebp
jo
outsb
mov
dec
or
add
fisttpll
daa
or
test
out
xchg
xor
lret
mov
push
gs
loope
dec
shrb
orb
cmp
cmpb
push
adc
mov
dec
or
pop
adc
dec
aaa
and
in
mov
dec
lds
jns,pn
inc
jo
adc
nop
dec
mov
cmp
add
mov
jecxz
cwtl
sbb
aam
aam
sbbb
mov
inc
pusha
xchg
sub
aas
ficomps
mov
mov
sbbl
imul
dec
in
inc
enter
cli
sarb
and
push
dec
dec
jae,pn
aam
mov
stos
sbbb
lret
sub
imul
sbb
push
test
fsubrl
leave
outsb
sbb
in
inc
nop
loopne
in
jo
add
add
jo
in
andb
aam
push
jbe
xchg
ss
test
imul
push
mov
in
or
leave
pop
xor
pop
mov
and
or
daa
out
jmp
cmp
mov
inc
aad
adc
pusha
je
in
in
xchg
cmc
jae
sbb
fs
push
pusha
lock
add
xchg
sbb
aas
iret
add
sbb
xchg
add
lock
dec
loop
add
lock
adc
inc
and
sbb
je
sti
add
dec
je
xor
sub
push
adc
popa
mov
sub
lret
inc
scas
inc
pop
fdivr
movsb
shlb
pop
jle
ja
and
adc
or
cmpsb
jo
test
or
sbb
gs
pop
push
pop
fwait
sbb
add
dec
cmp
mov
and
aad
gs
fadds
or
or
incl
incl
in
mov
push
dec
faddl
add
xor
xor
add
cmpsl
and
pop
sbb
sahf
popa
mov
hlt
mov
pop
xchg
push
in
hlt
negl
cmpsl
pop
xor
lea
mov
add
jne
xchg
mov
pusha
loope
decl
rclb
or
and
push
mov
js
xchg
int
inc
sbb
push
aas
fmuls
xchg
aas
into
roll
jne
push
call
pop
sbb
and
or
or
push
xchg
or
mov
sub
cmp
imul
add
pcmpeqw
jne
je
cld
mov
mov
fmuls
outsb
mov
and
add
cmp
movsb
fwait
les
cld
dec
cltd
dec
mov
sub
movsl
xchg
xchg
inc
push
push
xchg
xchg
mov
hlt
loopne
fcoms
nop
aaa
insb
or
push
push
aaa
out
cs
jno
pop
sbb
push
nop
nop
mov
jns
shl
stc
mov
jmp
inc
pusha
dec
and
xlat
das
push
jl
loopne
xchg
lea
mov
mov
mov
and
shrl
pop
test
xchg
xchg
adc
and
stc
jbe
das
add
test
and
clc
and
jge
mov
sbb
cmpb
and
insb
dec
test
and
sub
cld
fsubs
push
addr16
daa
jle
cmpb
push
cwtl
xchg
orb
inc
and
fsubs
mov
xbegin
pop
sbb
sbbb
xchg
mov
xor
addb
push
mov
test
add
jmp
inc
inc
xchg
xor
fmull
and
adcl
scas
push
xchg
fsubrl
int3
aad
rclb
push
cmp
out
cmp
cld
fcoml
daa
cmp
pop
mov
fs
nop
sub
pop
decb
xchg
cmp
push
enter
jno
xorl
add
daa
add
jl
call
mov
dec
cltd
dec
jo
mov
cwtl
mov
xchg
inc
sub
arpl
cmpsl
xchg
mov
sbb
adc
adc
xchg
lahf
push
aam
or
sub
testb
daa
xchg
inc
xchg
imulb
mov
push
fstpt
add
gs
call
icebp
add
cmp
pop
or
rcrb
pop
sahf
add
fisubrs
jecxz
xchg
jg
and
cmp
pop
mov
je
add
arpl
pcmpeqb
xor
xorb
loope
popf
sub
dec
stos
dec
add
push
add
negl
es
add
and
inc
add
mov
or
rorl
andb
and
ret
and
sub
jnp
clc
xor
icebp
xchg
jo
sub
cwtl
je
mov
adc
and
xor
add
data16
add
or
jb
inc
lret
mov
das
popf
ror
ret
dec
or
fs
mov
andl
in
mov
xor
test
push
mov
pop
fwait
xchg
das
push
insl
scas
movsb
mov
push
and
mov
out
or
jo
fdivp
lret
addb
mov
sub
stos
push
xor
iret
dec
cwtl
cltd
and
mov
cmp
lds
lods
andl
mull
sub
sbb
inc
jo
mov
mov
cltd
pop
divl
mov
test
rolb
popa
mov
mov
add
pop
push
adc
roll
cmp
mov
adc
je
dec
sbb
inc
inc
insl
mov
shlb
lods
test
out
cmp
mov
or
jl
xchg
and
mov
adc
xor
in
adc
test
cmp
or
subb
mov
mov
sub
mov
mov
add
sbb
ljmp
outsb
fxch
les
add
mov
xor
inc
adc
shlb
inc
es
adc
inc
shl
or
call
inc
adc
cmp
push
ljmp
outsl
and
adc
jo
stc
and
xor
xchg
xor
cmp
jg
dec
fs
lea
enterw
xor
push
and
mov
add
push
add
add
mov
popa
test
fcmovnbe
inc
lahf
enter
jno
test
add
push
imul
cmp
js
push
add
cmp
test
xor
ret
popa
and
add
jmp
sti
xor
mov
pop
or
aad
sahf
mull
lea
adcb
pushf
shr
dec
xor
push
mov
adc
jmp
cmc
add
arpl
adc
outsl
cmpb
push
in
scas
jg
ja
punpckhdq
xor
imul
fldenv
lcall
inc
mov
call
repnz
and
cwtl
pop
jge
pop
inc
adc
cmp
inc
jbe
fdivs
push
cwtl
pop
adc
je
push
sub
push
rcrb
mov
pop
xchg
rcrb
fs
cmpsb
cmp
add
rolb
inc
xchg
orb
or
push
or
lcall
and
xchg
test
hlt
or
adc
xchg
mov
stc
jge
sub
add
cwtl
sbb
or
cmp
add
adc
sbb
push
movsl
popa
rcrb
adc
push
sub
daa
cmp
adc
push
test
adc
adcl
xor
enter
decb
xchg
adc
adc
jmp
dec
je
mov
lock
sbb
cmp
sub
inc
cld
into
mov
or
xor
mov
mov
xchg
in
mov
add
movsb
and
pushw
add
or
pushl
mov
or
ret
das
pop
pusha
sub
testl
je
mov
dec
adc
or
sub
push
out
test
dec
push
jle
lods
push
add
out
sbb
dec
lret
inc
inc
xchg
xchg
shrl
adc
insb
jmp
xchg
sub
nop
add
out
ret
popa
mov
xor
mov
imul
cmp
sub
lods
mov
xor
xor
mov
imul
sub
xchg
jb
sbb
mov
nop
sbb
jae
mov
lds
pop
and
cmpsb
xchg
push
adc
rcll
mov
sahf
inc
mov
sbb
xorb
or
enter
adc
mov
cltd
lock
and
cmp
call
push
data16
fadds
lods
or
add
or
adc
pop
inc
jl
cwtl
add
les
mov
ss
inc
ds
xchg
push
pop
xchg
xchg
jne
or
inc
add
dec
jno
call
pop
xor
arpl
mov
mov
scas
test
inc
fcom
and
add
xchg
mov
insb
adc
ret
pushf
dec
jnp
push
jbe
inc
mov
push
dec
stos
cmpsb
sub
mov
xchg
dec
mov
mov
inc
dec
dec
pop
push
xchg
add
jnp
xor
push
orb
mov
cmp
mov
outsl
ljmp
jl
lea
cmpb
adc
xor
xchg
mov
push
cmpsb
sbb
xchg
jne
sbbl
add
add
pop
das
sbb
iret
and
jo
test
jecxz
lock
das
aaa
push
xor
adc
fimull
add
adc
sub
mov
movb
ret
pop
in
adc
orb
or
or
enter
rcrl
jno
test
pop
sbb
xchg
dec
and
pushf
sbb
push
test
mov
gs
sbb
sbb
jo
movb
iret
sbbb
js
push
mov
or
lods
inc
xorb
inc
lahf
mov
push
pop
pop
sbb
fcomip
or
mov
dec
mov
mov
or
cli
sub
dec
mov
pop
fwait
lcall
sbb
and
add
dec
fwait
pop
imul
fs
sarb
fnstenv
cmp
mov
push
push
nop
je
jo
imul
or
aad
out
sbb
jb
hlt
adc
ret
xchg
enter
xchg
loop
push
inc
dec
into
test
mov
and
scas
dec
add
mov
pushf
cmp
and
and
in
dec
nop
or
test
pusha
in
aam
outsb
sbb
fwait
bnd
add
out
cmp
fmuls
test
jb
mov
sbb
inc
push
and
pop
and
xor
rolb
enter
add
mov
cmp
and
imul
dec
shll
shl
test
add
lea
and
cmpsb
inc
cmp
mov
leave
mov
or
adc
clc
and
jbe
sbb
pop
mov
mov
movb
cmp
flds
lret
js
daa
adc
and
inc
in
mov
sub
imul
movsb
mov
ja
sub
test
loope
pop
inc
mov
xor
mov
pop
test
xor
mov
mov
pop
add
pushf
mov
rol
es
push
add
sbb
sbb
or
movsb
lcall
pop
cmpsl
mov
jns
inc
mov
and
cwtl
dec
pop
jo
xor
lret
sub
lcall
sbb
int3
jmp
sahf
test
xchg
add
rcrb
test
ret
or
xchg
mov
sub
inc
mov
dec
push
and
mov
mov
call
clc
xor
sbb
mov
inc
in
arpl
aaa
inc
popf
lods
push
and
jno
js
shrb
dec
push
adc
lods
fstps
daa
dec
jne
cmpsb
push
imul
out
cmpsb
pop
in
fsubrl
clc
adc
inc
test
mov
add
mov
or
ret
and
in
lods
mov
inc
test
add
cmp
pop
and
outsl
xor
and
adc
test
sub
cmp
fisubs
xor
fimuls
xchg
ficomps
xor
and
outsl
sahf
ret
jbe,pn
or
jge
adc
or
or
aam
sub
dec
movsb
inc
repnz
or
add
sub
aaa
hlt
ljmp
add
or
rcll
aam
into
mov
js
out
ret
adcb
sub
out
xlat
and
add
out
adc
pop
es
sub
add
cwtl
shrl
mov
daa
aas
sbb
jge
test
add
cmp
in
mov
cmp
faddl
push
pop
daa
xor
fsubr
pop
inc
loope
jecxz
push
ja
inc
jne
mov
test
xchg
adc
jbe
push
lea
xchg
aas
adc
pop
shrl
add
push
push
dec
xchg
mov
fistps
cwtl
inc
sbb
loopne
pop
push
and
pop
xchg
testb
or
pop
and
push
cmpsb
adc
add
jne
mov
add
adc
popa
xor
data16
sub
pop
sub
lret
ss
cmp
add
lret
jmp
movsb
adc
add
fadd
mov
bound
test
call
jo
movsb
jecxz
add
sub
sbb
ljmp
ret
adcl
or
add
inc
nopl
nop
sub
enter
adc
nop
push
loope
inc
aas
sbb
test
stos
dec
adc
dec
mov
mov
cmp
cmp
cld
mov
rorl
xchg
nop
loope
adc
push
mov
inc
ret
scas
js
cmc
push
aaa
pop
inc
cmp
ret
xchg
and
mov
ja
icebp
push
bound
xor
push
add
adc
daa
sub
lea
lock
cmp
stos
add
and
ljmp
mov
and
rcll
mov
rorl
pop
mov
jo
dec
clc
sub
pusha
pusha
jge
icebp
pop
mov
pop
adc
nop
xchg
add
push
movsl
cmpsb
mov
add
into
add
ficomps
cmp
mov
orl
gs
scas
mov
and
or
push
enter
push
lock
xor
addb
push
lods
mov
mov
mov
test
or
pop
mov
dec
jb
push
hlt
xor
pop
adc
stos
adc
dec
popf
xor
and
inc
sarb
cmp
or
lret
cmp
test
cmc
pop
cs
mov
or
loope
imul
inc
popf
sbb
xchg
push
jae
cltd
xlat
xchg
je
push
subb
fmull
add
adc
inc
add
push
add
loop
adcl
adc
xchg
or
aam
lcall
lcall
sbb
and
lods
mov
mov
loope
out
or
push
and
cmp
pop
out
add
add
mov
test
mov
xadd
jbe
push
push
popa
sub
sarl
sub
mov
and
aaa
fwait
mov
xorb
test
mov
add
scas
and
cmp
dec
and
int3
xor
xor
imul
in
dec
jne
cmp
mov
cs
dec
int3
or
mov
push
add
sbb
mov
in
dec
stc
add
push
not
cmc
mov
mov
sbb
lea
xchg
insb
and
lcall
inc
xorb
aam
aaa
xchg
mov
cmp
es
inc
adcb
and
fidivl
sub
adcb
sbb
add
sbb
inc
dec
dec
bound
mov
aam
mov
aas
adc
hlt
imul
mov
daa
xor
pop
movb
jne
push
mov
aas
xorl
push
mov
lahf
data16
sub
subb
pop
addr16
and
aad
testl
test
mov
rcll
adc
adc
or
imul
and
push
add
mov
fs
icebp
mov
cmp
jns
jge
into
aaa
mov
lcall
and
fs
xor
rorb
pop
pop
nop
rcrb
shl
mov
in
sub
fbld
inc
adc
dec
and
mov
mov
divl
movsl
or
cmp
outsl
inc
sbb
cmp
lret
sbb
popa
js
in
js
cmp
inc
dec
xor
dec
sbb
frstor
push
mov
jne
jbe
adc
inc
jmp
fptan
adc
fidivl
in
sahf
test
insl
sbb
xchg
mov
pusha
mov
dec
add
push
jmp
shlb
sbb
push
je
js
or
adc
pusha
scas
test
shl
mov
jg
ljmp
call
mov
pop
repz
mov
loopne
inc
aam
xlat
outsl
push
xor
mov
fsubs
cltd
insb
mov
xor
xchg
mov
or
pop
cmp
push
and
sub
add
les
pop
sub
pop
dec
fisttpll
arpl
std
mov
add
lock
jne
sbb
inc
xchg
pushf
rol
push
inc
addb
loop
add
adc
pop
sar
mov
das
cmpsb
adc
fistpll
mov
sub
stos
xlat
loope
movsl
or
loopne
push
jp
test
add
lds
sub
cmpsb
xlat
inc
xor
rol
push
push
inc
mov
sub
xor
mov
adc
icebp
or
stos
adc
das
lds
dec
shlb
xchg
push
daa
mov
adc
mov
fcomps
push
es
pop
aas
and
cmp
int
dec
gs
daa
movsb
test
inc
xor
add
cltd
cmpsl
popa
adc
aam
mov
clc
mov
jmp
mov
xlat
add
lret
pop
mov
dec
push
out
inc
push
sarb
pusha
lods
lods
add
mov
jno
sbb
or
nop
cmpsl
sbb
mov
aas
dec
sub
jo
inc
fcoml
add
xor
mov
dec
mov
iret
or
mov
daa
add
inc
pop
mov
push
insl
les
rorl
adc
push
out
jns
iret
xchg
enter
fabs
adc
lcall
pusha
scas
xchg
pop
push
into
push
and
test
mov
movaps
out
movsl
aas
sub
push
pop
addb
je
lea
lahf
aam
adc
iret
imulb
roll
or
negb
aas
jmp
xor
pop
scas
jo
movsl
sbb
jo
jle
mov
loopne
push
xchg
rcrb
sub
mov
ret
iret
jmp
js
sbb
out
ja
test
and
aad
cwtl
jns
mov
push
outsl
sub
out
adc
ficoms
je
cmpsb
nop
push
pop
sub
andl
cmpl
jge
cli
popa
clc
mov
mov
or
or
andl
jb
pusha
push
or
push
cld
mov
mov
mov
jb
jl
or
dec
sarb
mov
loopne
les
and
mov
pop
push
sbb
add
xchg
loope
les
mov
lahf
jbe
inc
adc
hlt
movsb
pop
arpl
pusha
aad
pop
add
or
stos
and
inc
ficoms
adc
fdivrl
add
xor
cmp
or
mov
pop
lea
jmp
imul
js
adc
cmp
adc
jo
cmp
sub
lock
inc
addb
sub
sbb
test
xlat
add
inc
xchg
fcmovu
dec
or
fbstp
jmp
sti
iret
sbbb
or
insb
mov
ja
lods
mov
pop
jno
sub
cmpl
dec
inc
sbb
les
dec
sar
cmp
sbb
fwait
xor
mov
and
pop
mov
xchg
or
add
mov
incb
push
mov
dec
orb
xor
push
pcmpgtd
pop
sbb
mov
cmp
add
push
push
dec
and
and
and
or
insl
loopne
dec
pop
xchg
nop
aas
inc
adc
dec
fisttpll
pop
orl
xchg
mov
lret
dec
lahf
cli
aam
cmp
test
shlb
rorb
stc
shrb
sub
les
mov
add
add
xchg
dec
sbb
or
jp
mov
dec
sbb
js
push
sahf
mov
in
jg
pusha
dec
inc
outsb
inc
cmp
je
test
aaa
cmpsb
inc
or
imul
loope
mov
arpl
and
sbb
xchg
inc
or
jnp
adcb
jne
jae
or
shrb
add
in
dec
pop
repnz
ljmp
rorb
das
daa
or
push
ja
paddq
lods
test
lret
cmpb
cmpl
insb
popa
inc
mull
bound
rolb
add
push
xor
or
movl
sbb
dec
mov
inc
push
pop
fisttps
das
mov
pop
lcall
popa
lds
sbb
stos
or
je
cmp
ret
adc
mov
and
cs
xchg
sbb
cmp
popa
xor
push
test
gs
movsl
sbb
jae
mov
stos
stos
test
in
adc
lahf
pop
xchg
push
cmp
rcrl
pop
ret
andl
jmp
pop
cmpsb
dec
insb
sub
xor
xchg
cmp
leave
xchg
push
inc
dec
cmp
cld
pop
dec
pop
pop
sub
dec
das
clc
mov
pop
gs
pop
int3
xor
shlb
pusha
insl
jp
cwtl
push
push
jns
xor
sbb
add
sahf
add
push
and
inc
and
sbb
xor
push
and
xchg
mov
sbb
ja
add
nop
or
add
jg
adc
movb
imul
adc
sub
jle
push
loopne
lock
sub
dec
pop
xchg
testl
gs
sbb
and
sbb
dec
adc
xor
pop
jnp
jne
mov
xchg
sub
ss
stos
into
ja
cmp
or
dec
leave
fiaddl
mov
mov
test
daa
icebp
inc
or
mov
push
adc
or
adc
or
mov
and
loope
dec
jbe
repz
or
js
push
sbb
cmp
stos
sbb
lods
lock
push
and
push
stos
enter
add
and
test
cwtl
inc
or
pop
leave
dec
mov
add
dec
jo
loop
enter
mov
and
mov
rorl
or
mov
pop
adc
loope
adc
mov
push
ret
je
andb
push
sar
mov
mov
push
out
or
imul
or
lahf
add
dec
or
cmp
cli
or
aaa
js
xor
adc
pop
xchg
sub
and
sbb
adc
sbb
sub
cmp
jmp
les
xchg
gs
fsubrp
or
adc
push
sbb
out
push
lret
inc
pop
ret
jp
cmp
mov
add
mov
xchg
shlb
out
fisttpll
daa
fsubrl
loopne
jbe
lcall
cmp
adc
push
xchg
test
bound
mov
adc
or
fiaddl
xchg
dec
iret
lds
mov
add
add
push
mov
sub
mov
pop
sti
orb
jae
mov
push
hlt
sti
dec
mov
adc
outsl
or
fadds
push
xor
adc
pop
fsubs
in
insl
addr16
lret
dec
adc
inc
or
mov
xchg
xchg
ss
add
adc
insl
mov
inc
add
addr16
sub
pop
fs
sub
scas
push
or
inc
adc
mov
xchg
fiadds
outsb
loopne
mov
xor
scas
cltd
xor
pop
imul
sub
les
add
sub
mov
dec
dec
inc
push
adc
rorb
jg
add
inc
inc
dec
fwait
jg
inc
inc
rol
xchg
je
insl
add
shll
leave
add
test
or
xor
or
xchg
fsubr
add
xor
xor
sbb
xor
or
in
xor
inc
xor
lock
push
mov
jbe
jae
call
imull
or
fstpt
inc
sub
aam
nop
pop
cltd
loopne
je
arpl
lds
arpl
add
adc
mov
xchg
and
and
leave
xor
rdmsr
xor
dec
or
xor
ja
mov
xchg
pop
aad
pop
xor
lahf
mov
jmp
jl
aam
mov
pmuludq
popf
push
push
out
out
jbe
jg
stc
mov
jbe
add
mov
xor
pusha
arpl
dec
cmp
dec
adc
rclb
inc
fldcw
adc
lods
outsl
mov
add
sub
ss
add
pop
xchg
mov
inc
in
rol
or
data16
mov
shrb
mov
dec
push
or
or
ret
cwtl
lret
es
inc
rorb
xchg
sub
lods
mov
pop
and
jnp
sub
add
sub
movsb
add
add
push
xchg
scas
iret
sub
xor
add
das
xor
cmc
push
cmp
out
xor
lods
dec
add
loop
lret
daa
orl
sahf
lret
push
sbb
dec
jno
in
and
adc
cmp
fmulp
pop
popa
out
pushf
insb
fisubrs
iret
push
xchg
jns
enter
shrb
dec
push
cld
rorl
in
push
push
mov
xor
xchg
sti
roll
jecxz
nop
inc
sahf
aam
movsl
out
or
or
aad
xchg
mov
aam
push
mov
dec
out
lock
adc
fmuls
mov
subl
push
pop
jae
inc
cs
add
imul
jns
pop
dec
std
out
and
aad
rol
in
inc
fst
adc
movsb
gs
das
sub
add
loop
or
jmp
mov
repz
pushf
xchg
add
adc
jae
int3
or
sbb
out
mov
add
mov
shll
aaa
add
outsb
outsl
repz
xlat
xor
aas
push
add
or
sub
push
pop
cltd
test
outsb
or
jl
aad
push
enter
in
or
fsubrs
add
or
adc
adcb
ret
gs
mov
in
add
dec
xor
or
or
repz
gs
rclb
xor
add
sbb
leave
and
or
or
push
loopne
outsl
inc
addr16
cmp
or
jae
or
inc
adc
jmp
ja
movsb
fnstcw
push
or
mov
or
adc
and
or
push
xor
add
jae
je
pop
icebp
lock
popa
sbb
les
xchg
add
inc
mov
nop
xor
push
xor
loopne
test
inc
loopne
jp
jb
cltd
push
in
dec
jmp
orb
insb
mov
or
push
jo
je
pop
jl
mov
inc
testb
je
cmpsb
xor
test
add
mov
out
in
fildll
mov
jo
imul
mov
ljmp
lock
or
popf
push
push
lods
fwait
roll
rcrl
or
and
jb
adc
nop
cld
or
mov
bound
push
add
xchg
out
call
inc
adc
push
adc
dec
and
or
ret
fidivl
popf
dec
add
pop
push
jmp
adc
push
sub
xchg
pop
and
or
in
sbb
pop
adcb
xor
or
aas
addb
dec
bswap
pop
push
insl
or
fs
fsubs
pushf
clc
adc
xchg
dec
pop
mov
dec
add
les
stc
push
or
test
mov
add
ret
or
cli
sbb
add
xchg
sub
lock
roll
imul
ss
push
loope
push
shrl
push
in
dec
movsb
in
or
adc
mov
sub
add
stos
lret
xor
or
fdivrs
nop
push
and
repnz
and
enter
pop
sarl
nop
add
push
xor
jo
lds
or
xchg
flds
sbb
xor
inc
or
push
xchg
xchg
xchg
ja
xor
xchg
mov
xchg
pushf
mov
add
xor
popa
add
rcrl
mov
sub
inc
insl
aas
clc
fcoml
les
test
jo
ret
rclb
movsl
repz
mov
pop
ret
mov
push
mov
test
mov
inc
mov
out
mov
add
nop
insl
mov
mov
cmp
mov
jno
movsb
jno
sbb
je
dec
inc
inc
push
jne
mov
mov
inc
dec
push
cmp
cmp
and
aas
jle
and
rolb
ljmp
sub
mov
sub
xor
je
inc
sub
mov
or
inc
dec
sarb
sbb
xor
xor
nop
xorb
cmp
mov
cmpsb
out
shlb
mov
xorb
xor
sub
enter
or
pusha
mov
sbb
dec
inc
pop
fcoml
jo
adc
pop
leave
mov
mov
pop
mov
or
or
push
sahf
jl
mov
dec
pop
cmp
jge
fcomps
ds
movl
add
mov
dec
sbb
out
fmulp
das
dec
sbb
dec
and
or
xchg
and
leave
dec
loop
inc
fisubrl
xor
ret
fnstenv
jne
or
add
mov
jg
adc
sbb
pop
push
jge
and
xor
xchg
adc
daa
lahf
ljmp
inc
or
call
sub
test
mov
push
pop
loopne
les
testl
sub
dec
cltd
rol
and
push
push
sub
mov
push
adc
loope
push
xor
or
aas
inc
cmp
je
mov
dec
adc
outsl
ljmp
dec
cmp
js
adc
or
push
xchg
sbb
js
jp
in
negb
daa
ja
xor
lods
xchg
pop
push
mov
push
mov
mov
push
mov
sbb
jae
ret
add
insl
inc
pop
loope
and
push
outsb
and
cmp
outsl
fucompp
inc
inc
out
je
sbb
aaa
jg
xchg
adc
iret
cmp
xor
jo
orb
les
dec
insl
xorb
mov
mov
pop
nop
pop
and
xor
pop
push
pop
push
mov
or
pop
aaa
jnp
ds
sqrtps
sub
lock
push
xor
mov
mov
repz
push
pop
jae
push
push
or
push
dec
or
cmp
xchg
in
mov
push
cmp
loopne
inc
mov
andb
and
xor
or
test
inc
enter
arpl
loopne
inc
bound
fucom
lahf
jle
scas
add
inc
push
scas
inc
mov
sbb
mov
xor
sbb
pop
sbb
and
imul
dec
mov
pop
rcll
hlt
jmp
cmpl
stos
push
mov
pop
sbb
rorb
outsl
add
addb
pop
rclb
adc
or
insl
xor
pop
movsb
mov
movsl
inc
add
lahf
addb
mov
xchg
fbld
cmp
dec
cmpsl
or
lock
and
loopne
and
lds
sbb
bound
mov
les
xchg
jno
jne
mov
clc
jmp
cmp
jbe
lahf
adc
inc
and
rcrb
mov
jg
mov
and
jno
mov
repnz
lea
sbb
lahf
or
and
push
sub
popa
bnd
mov
and
add
out
cli
mov
or
or
sbb
jp
pop
inc
or
scas
cwtl
xor
xor
jge,pn
cmp
inc
or
push
or
push
and
jo
sub
sbb
bswap
or
loopne
lock
or
repnz
dec
loop
clc
cmp
and
enter
rolb
lods
enter
sbb
clc
movsl
push
or
push
sbb
xchg
cmpsb
push
xlat
movsl
sub
mov
or
or
sbb
das
testl
fsts
cmp
scas
and
pushf
cwtl
mov
xor
inc
jbe
push
and
xchg
jecxz
int
jno
push
ljmp
enter
stos
mov
fsubrs
test
mov
shll
inc
push
outsb
dec
sub
dec
and
adc
cmpsb
inc
jno
test
pop
jb
in
jecxz
mov
jecxz
stc
sub
xorl
cmpsl
in
inc
ficomps
gs
call
movsb
inc
in
nop
dec
xor
nop
xchg
push
sub
arpl
dec
stc
push
push
shrb
sbb
cltd
loope
jmp
inc
mov
sub
xchg
nop
ret
pusha
loope
inc
pop
xlat
loopne
dec
adc
adc
jbe
leave
sbb
or
push
cmpsb
lock
push
mov
dec
js
adc
jne
lods
js
or
inc
outsl
push
je
jo
xchg
push
or
and
rcrb
jae
mov
insl
lret
pop
scas
adc
jo
lock
xchg
fimuls
les
cmp
sub
sbb
and
movsb
xor
xor
addr16
pop
rcll
xor
cmp
sbb
xlat
faddl
cs
jno
inc
or
jo
insb
rcl
mov
add
xchg
jns
fwait
push
sbb
push
sbb
mov
dec
push
bound
das
aad
push
stos
push
mov
fdivr
and
xchg
mov
sbb
inc
cli
dec
cmp
mov
mov
or
aaa
cmp
mov
js
movsl
cs
stos
es
or
outsl
mov
dec
lods
add
inc
and
outsl
xor
push
div
in
sete
mov
arpl
inc
rolb
xchg
or
lods
dec
popf
adc
inc
fsubrs
adcl
popa
sbb
dec
pop
xor
adc
add
sub
dec
jb
adc
int
and
add
sbb
push
outsb
xlat
adc
shlb
dec
push
aad
outsb
sub
inc
enter
inc
jge
inc
shl
jmp
pop
dec
lea
or
lret
sbb
pop
pop
push
inc
pop
das
imull
adc
xor
jne
mov
mov
test
pop
aaa
inc
or
ja
lods
jecxz
mov
push
enter
and
ljmp
scas
fstps
cmp
lods
and
test
inc
cmpsb
or
xchg
or
clc
xor
dec
push
test
push
push
in
pop
pop
hlt
jne
push
imul
div
es
sub
or
andl
in
push
adc
lock
add
jg
sub
jmp
cltd
xchg
js
mov
ljmp
sub
push
xor
stos
in
mov
pop
repnz
xchg
pop
sub
push
fdivrs
clc
lods
mov
out
sbb
jno
leave
roll
sbb
movsb
daa
add
dec
push
sbb
cs
aas
jno
pop
das
inc
pop
dec
inc
jne
fmuls
add
jmp
cmp
mov
sbb
mov
aam
fcomp
imul
or
jns
movsb
add
in
push
mov
addr16
ss
mov
mov
lret
cmp
insb
fcompl
jae
push
mov
and
rcr
decb
mov
mov
mov
add
clc
mov
fstl
ficompl
insl
sub
jno
push
or
jmp
push
mov
xchg
push
fwait
inc
pop
cmp
jge
lds
mov
jl
inc
add
in
sub
mov
jmp
pop
jle
lea
jg
dec
or
test
adc
mov
add
xor
call
mov
fxch
daa
jmp
mov
imul
push
fldenv
ret
movsb
aaa
xchg
cmpl
jmp
clc
or
nop
pop
cmp
insb
adc
out
lahf
adc
pop
and
fdivrp
dec
movsb
inc
cld
sub
cmp
and
dec
repz
scas
andl
mov
out
and
and
xor
cmp
pusha
dec
pop
leave
movsb
std
mov
inc
jl
stos
or
pop
xor
jge
and
dec
xchg
scas
cmp
fisttpl
add
jns
stc
movsl
fwait
sbb
mov
mov
dec
push
into
cltd
fbstp
push
push
or
arpl
lock
mov
sbb
lods
xchg
insb
fs
mov
jo
out
aas
add
or
test
or
out
into
aam
test
adc
adc
imul
xor
rcr
lret
inc
cmp
sbb
push
mov
inc
roll
sub
popa
sbb
test
psraw
imul
ret
insl
adc
or
cld
or
iret
sbbb
or
cmp
icebp
ficompl
xchg
imul
cltd
cmp
jo
sbb
mov
in
adcl
adc
sti
cmp
xorl
subb
add
imul
push
inc
insl
sub
mov
into
jne
shll
pop
repnz
pop
dec
push
and
add
mov
pop
add
mov
push
ret
jo
xchg
sbb
dec
lahf
add
and
xchg
mov
dec
pop
and
fistpl
cs
imul
pop
stc
outsl
aaa
dec
pop
nop
mov
leave
arpl
pop
les
xchg
inc
bound
shll
push
mov
popa
dec
cmp
pushf
cmc
push
ljmp
je
in
mov
mov
repz
adc
pop
jg
cmp
sbb
sbb
clc
repz
xor
lds
dec
hlt
mov
hlt
mov
adc
sarl
repnz
nop
cmpsl
nop
or
jecxz
and
sbb
pop
cmp
add
or
nop
call
adc
add
adc
sub
and
pop
bound
lahf
add
mov
inc
sub
pop
or
or
in
or
mov
scas
cmc
inc
add
dec
shlb
and
outsb
fwait
clc
mov
jp
inc
pop
fisttpl
and
sbb
imul
sbb
fsubrs
mov
pop
and
cltd
add
popa
bound
in
pop
push
imul
sub
push
ja
stos
mov
sub
ja
dec
mov
cli
dec
pop
test
repz
and
xor
add
inc
popa
inc
xchg
ficomps
out
push
push
mov
push
movsl
andb
jo
rolb
add
sbb
ficompl
mov
inc
clc
and
hlt
inc
in
add
pop
aad
mov
inc
jb
lock
mov
decl
inc
lea
or
ljmp
jns
push
testl
adc
hlt
mov
iret
idivl
scas
add
cmpsb
cmpsl
xchg
enter
lea
fadds
inc
ret
and
cmp
add
stos
leave
mov
test
fisttpl
cmp
jmp
mov
mov
sub
out
rorb
cmp
jne
jb
sti
fwait
jmp
cmp
inc
in
pop
inc
daa
pushf
out
or
xchg
dec
adc
insb
dec
repnz
sub
jo
in
clc
mov
pop
or
clc
fbld
in
dec
sbb
and
pusha
mov
lock
mov
ds
mov
arpl
mov
jg
pop
hlt
push
and
mov
stc
xor
call
in
sub
push
sub
aas
dec
push
sti
and
push
ret
inc
jmp
adc
or
rcrl
sub
rorl
dec
adc
orb
mov
xlat
inc
cli
int3
adc
fildl
or
mov
test
sti
add
adc
push
cmp
test
cli
mov
ljmp
or
sub
jp
sub
lock
enter
mov
cmpsl
or
jno
cli
mov
xchg
pop
insl
aaa
dec
xor
test
sbb
mov
nop
or
je
inc
pusha
ret
push
aaa
sbb
scas
adc
decl
adcb
inc
dec
fcoml
jo
scas
pop
mov
or
push
xchg
or
nop
xchg
pop
sti
lock
or
mov
clc
addr16
pop
fwait
jl
outsb
jne
pop
and
xorl
push
add
mov
lahf
es
cmpl
adc
cli
addr16
aaa
or
popa
jb
mov
jg
and
bnd
adc
mov
push
add
jnp
push
movb
and
bound
and
pop
and
imul
test
add
inc
in
xor
std
add
sub
jbe
mov
inc
xchg
and
inc
test
sub
and
cmp
ficomps
push
xor
xor
pop
mov
aad
mov
sbb
jbe
adc
stos
xorb
adc
roll
mov
jle
test
add
adc
pop
push
daa
gs
and
pop
mov
les
inc
xchg
pop
and
andb
push
je
mov
in
cmpsb
add
mov
adc
mov
adc
pushf
push
add
pop
gs
mov
or
or
or
sub
sub
adc
push
xchg
dec
sar
jo
or
popl
push
in
xor
pop
in
xlat
or
jno
pop
andl
repz
enter
sub
testl
aas
loopne
sub
mov
ret
inc
lcall
fsubrl
push
xor
imul
xor
ficoms
push
pusha
push
push
stos
imul
push
dec
inc
sbb
fsubs
add
aas
movsb
jbe
pop
sub
push
mov
sub
add
push
add
mov
loop
push
inc
pop
add
mov
sub
sbb
cmpsb
aam
fsts
inc
fidivl
jnp
push
pop
mov
cmp
int3
in
sub
insl
leave
add
add
inc
adc
adc
or
or
add
mov
sbb
sbb
pop
dec
nop
out
cltd
imul
out
pop
cmp
push
loopne
push
in
pop
lds
mov
push
fdivl
sbb
add
repnz
mov
iret
sub
xor
jbe
xor
xchg
or
lret
in
stc
pop
ss
pop
mov
test
pop
arpl
add
stos
sub
xor
xchg
mov
aaa
xchg
stos
dec
inc
cmp
xor
inc
shr
or
or
or
push
popf
jge
jae
cmp
sbb
mov
out
push
xchg
jecxz
cmp
leave
add
in
pop
cmpb
dec
and
aas
das
adc
adc
iret
sub
xlat
mov
mov
in
xchg
push
jb
pop
dec
sti
int3
push
adc
add
pop
mov
lods
pop
das
and
pop
add
inc
repnz
pusha
int3
and
push
fbld
out
rolb
dec
pop
xchg
or
lock
inc
add
sub
adc
ret
sbb
lea
or
rclb
and
add
outsl
stos
add
or
sub
push
or
fdivrs
cmp
or
lea
add
mov
add
nop
lcall
movsb
mov
adc
dec
je
pop
cmp
push
mov
insb
fsub
aas
adc
cmp
outsl
shld
jbe
pop
lret
std
or
push
ds
push
jns
push
repnz
pushf
leave
icebp
push
sbb
in
or
dec
mov
fs
inc
int3
std
or
les
orl
xchg
mov
adc
movb
cmp
std
ret
or
repz
repnz
pusha
aam
fsubl
pop
pop
jmp
daa
xchg
cmpsl
in
sub
or
mov
imul
pop
mov
shlb
lock
jno
add
sbb
sbb
std
nop
or
adcl
roll
push
addr16
dec
mov
or
ss
or
fdivs
add
mov
rorb
addb
fs
subl
ja
add
add
aam
pop
inc
mov
xorb
pop
and
xchg
or
or
fcomps
leave
push
and
pop
inc
int3
aaa
rorb
sub
push
or
scas
arpl
lds
push
push
leave
lea
mov
or
xchg
iret
lds
arpl
adcl
adc
mov
mov
je
or
inc
mov
repz
addr16
pop
inc
dec
adc
fs
movl
add
stc
cmpsb
jns
addb
adc
or
xorl
add
or
mov
rcll
mov
sub
mov
je
dec
nop
fistl
in
sub
jbe
or
pop
mov
mov
adc
or
int
mov
pop
xchg
sbb
sub
xchg
adc
sbb
ss
les
gs
sub
adc
iret
and
sarb
and
iret
and
les
enter
mov
inc
mov
add
subps
test
lret
dec
adc
dec
pop
mov
xor
pop
bound
push
and
push
pop
ds
xchg
inc
loope
mov
mov
push
loopne
popa
enter
inc
push
orl
orl
or
adc
arpl
movsl
or
cmp
and
sbb
or
and
inc
and
inc
adc
push
cs
push
mov
push
push
add
faddp
dec
pop
mov
dec
inc
xchg
lidtl
mov
fidivl
int3
pop
add
adc
mov
adc
out
push
inc
repz
dec
nop
adc
mov
add
inc
adc
je
add
adc
add
mov
jb
sbb
pop
add
add
jl
dec
lea
pop
rcll
pop
lds
add
sbb
in
enter
add
xchg
and
stc
or
xchg
xchg
xchg
xchg
ds
mov
leave
xchg
xchg
shl
or
leave
leave
pop
andl
xor
loopne
in
jns
shr
or
inc
repz
and
push
and
push
popf
add
xchg
xor
add
pop
cmp
aas
popa
inc
push
pop
aas
or
fdivs
cltd
jbe
lods
fwait
add
xor
repnz
push
mov
orb
arpl
adc
or
in
imul
int
or
and
jl
xchg
mov
out
adc
adc
jno
shll
fiaddl
mov
adcb
in
xchg
jbe
cmpb
and
insb
jmp
cltd
lret
or
xor
mov
cmp
aaa
push
repnz
cmp
or
ja
inc
adc
pop
pop
movzwl
adc
dec
pusha
and
pop
mov
outsb
mov
mov
call
and
pop
xor
sysexit
aad
pop
je
sbb
test
xchg
popa
ret
mov
pop
mov
in
pushf
inc
fcmovu
push
adc
dec
sti
out
pop
cmp
mov
push
push
cwtl
lods
or
jle
add
or
in
adc
sahf
xchg
xchg
push
imul
sub
ja
cs
pusha
dec
inc
jns
shrd
add
push
mov
outsl
cmp
pop
dec
cmpb
or
sarb
add
jmp
jp
mov
mov
loope
push
fwait
add
pushf
ja
cmc
inc
cmpsb
jmp
in
stos
ja
adc
add
push
adc
scas
and
inc
jns
inc
out
mov
sbb
add
inc
repnz
or
or
mov
mov
dec
mov
filds
in
into
dec
inc
mov
int
mov
sti
inc
mov
shrl
nop
addl
loopne
sub
sbbl
xchg
push
pop
repnz
cmp
add
pushf
sbb
repnz
adc
pusha
push
mov
stc
cmpsl
push
daa
cmp
xorb
mov
push
sub
repz
jge
cmp
push
pop
popf
pop
jge
and
adc
in
cmp
pushf
inc
mov
push
fildl
xchg
sub
imul
into
mov
sub
mov
pop
enter
or
or
add
pop
loopne
mov
pop
sbb
push
pop
sbb
cmp
enter
mov
adc
mov
xor
xor
adc
hlt
mov
mov
xor
sub
or
iret
and
and
pusha
lret
xchg
add
scas
fcmove
pop
sbb
stc
cmp
testb
outsb
insl
imul
push
sbb
xchg
mov
push
sub
pop
inc
and
sbb
scas
rcrb
adc
mov
xor
mov
jnp
pop
roll
fcmovnu
mov
inc
jne
or
jg
add
repnz
add
cmp
push
pusha
add
mov
push
add
push
sub
xchg
inc
dec
pop
or
or
pop
jb
and
mov
push
or
xchg
daa
daa
mov
lcall
xchg
xchg
xchg
and
and
inc
add
mov
stos
mov
mov
jno
sub
jg
lock
jo
jo
push
mov
cmp
adc
daa
xlat
sbb
push
cmp
mov
test
xor
jae
cwtl
fdivs
or
pushf
sbb
daa
push
push
pusha
stos
inc
popa
dec
lcall
js
sub
insl
popa
sbb
fwait
movsl
aam
das
sbb
and
fistps
adc
call
nop
push
add
pop
sbb
xchg
pop
in
inc
mov
jno
in
jo
nop
mov
mov
xchg
mov
push
popa
inc
das
cwtl
pop
pusha
and
add
add
das
imul
jno
add
loopne
push
or
stos
das
in
or
daa
cld
jnp
cwtl
ss
or
xchg
jnp
mov
sbb
lcall
and
push
lock
pop
and
mov
fimuls
or
adc
fcoms
shlb
loop
add
sbb
jb
inc
and
cmpsl
push
or
cmp
pop
pop
icebp
and
add
xor
xorb
mov
jecxz
icebp
pop
xorb
push
xor
cwtl
repz
cmp
cmp
push
jno
add
xor
stos
or
aaa
and
sahf
call
and
or
test
sbb
xor
daa
out
paddb
scas
cmp
push
pop
or
cmp
aam
pop
sbb
pushf
pushf
pushf
bound
out
pushf
std
ret
and
insl
insb
cmpsl
cs
mov
jo
add
and
adc
insb
push
xchg
and
xor
adc
test
adc
sahf
mov
pop
add
push
push
pop
inc
cwtl
dec
fdivs
push
add
mov
dec
pusha
scas
lea
add
nop
and
imul
pop
repz
or
ds
add
and
xor
mov
mov
in
and
les
shrb
inc
jb
aaa
jne
clc
sbb
lock
popl
fists
pushf
or
inc
jle
xchg
and
or
mov
xchg
dec
mov
inc
sub
add
xor
ljmp
ss
add
and
clc
addl
add
hlt
pusha
push
xchg
inc
inc
bndldx
lock
or
out
mov
add
or
je
pop
cs
jmp
or
inc
add
dec
add
ret
aad
or
popf
add
pop
jo
fcom
js
push
popa
movl
sti
cwtl
jmp
lock
jecxz
test
enter
rol
lahf
aad
mov
idiv
out
std
dec
loope
ret
adc
inc
cli
mov
xchg
add
dec
lcall
and
fisttps
rcrb
shl
push
shrb
pop
sub
ss
sub
xor
jno
push
or
daa
jg
outsb
arpl
and
es
std
inc
pop
daa
sub
xor
sbb
ss
pop
push
push
ret
ret
popa
sub
or
orb
or
sbb
sub
aas
or
repnz
insb
fwait
jns
mov
or
push
jo
or
in
nop
mov
loopne
and
or
ret
add
push
xor
xor
jmp
sub
dec
arpl
sub
add
fs
push
and
inc
inc
cmp
inc
sub
cmp
outsl
push
clc
inc
mov
js
xchg
and
or
add
dec
sbb
or
fs
dec
ficomps
lock
adc
hlt
jnp
adc
repz
or
inc
mov
add
cs
popa
mov
add
pop
int3
jae
add
dec
pop
and
pop
push
and
imul
sbb
pop
sbb
nop
add
mov
fisttpll
leave
push
loop
cld
or
filds
mov
call
fucomp
shlb
into
adc
xor
das
inc
xchg
lock
and
xor
push
fs
mov
dec
mov
inc
gs
add
sub
sti
jmp
inc
arpl
push
add
or
adc
and
add
mov
mov
xchg
hlt
fmuls
shll
lea
inc
and
jecxz
popa
add
clc
add
daa
je
jecxz
mov
stc
fsubr
cmp
ja
sbb
pushl
call
lods
out
sbb
add
incl
dec
test
insl
jne
arpl
cmp
jg
negl
aaa
inc
shr
icebp
cli
sub
imul
xchg
jb
inc
push
xchg
test
ljmp
insb
adc
test
adc
outsl
xor
add
jne
jle
sbb
jmp
cmp
inc
clc
or
fildll
fidivrs
sub
xor
jmp
scas
jge
je
in
push
hlt
aaa
add
pop
sarb
jbe
cmp
ficoms
sarl
mov
jbe
adc
lods
cwtl
xchg
pop
jp
add
or
inc
dec
and
or
shlb
ret
loop
scas
inc
mov
fstl
cmp
add
daa
mov
rcrb
fs
xchg
xchg
lods
pop
xchg
fdivrs
arpl
rorb
lret
es
rol
adc
mov
imul
push
push
jmp
dec
movsb
cltd
mov
cmp
inc
rclb
push
pop
les
mov
rcrl
sbb
inc
add
scas
sbb
add
dec
add
pop
rolb
mov
mov
pusha
push
test
push
shl
or
ds
mov
xchg
add
orb
xor
dec
inc
sub
in
cmp
movsb
js
sbb
xor
adc
jbe
cmp
fwait
sbb
aas
roll
enter
add
fstpl
mov
movsl
dec
insb
lcall
in
or
cmp
xor
inc
aas
or
test
pop
xor
xlat
fidivl
call
pop
xchg
aam
or
mov
mov
pop
enter
or
or
mov
sti
push
movb
pop
cmp
add
mov
scas
sbb
inc
or
mov
dec
cwtl
and
xchg
js
push
daa
add
or
mov
xchg
js
sbb
push
scas
ss
inc
lock
xor
jle
jo
adc
out
test
push
mov
inc
xor
and
inc
repnz
sti
sub
data16
jne
popa
pop
movups
xchg
imul
ss
and
push
jg
outsl
dec
pop
cmpsb
mov
inc
adc
or
popa
push
js
jecxz
jg
shrl
xor
mov
fcmovnu
andl
and
inc
aam
dec
cmpw
test
rcrb
cmc
xorb
jo
inc
jmp
sub
mov
mov
pusha
in
daa
mov
cltd
or
pusha
jge
xorb
loop
cmpsl
or
pop
sbb
add
add
add
ffreep
xor
adc
sbb
dec
adc
mov
inc
xchg
jp
cmpsb
jo
xor
push
test
dec
sub
mov
inc
and
pop
add
je
pop
mov
sub
das
jl
js
and
mov
mov
xchg
mov
mov
mov
fadds
xchg
in
dec
adc
inc
adc
adc
sbb
ret
ds
cmpsl
imul
push
adc
pop
mov
sbb
jne
mov
fisubrl
cmp
int3
ror
test
sahf
push
sti
aam
push
movsb
xchg
and
dec
popa
insl
arpl
pushf
in
pop
test
and
mov
loopne
and
xor
jae
adc
test
or
add
mov
or
or
adc
lcall
and
in
pop
inc
and
push
aaa
or
mov
lea
das
dec
testl
and
sti
fucomip
or
xchg
or
or
mov
ja
sbb
jecxz
pop
jo
and
sub
adc
rol
out
mov
sbbl
pop
inc
andl
mov
xor
cmc
xor
bound
xor
add
push
mov
mov
je
or
shl
inc
repnz
out
xor
dec
repz
sbb
mov
dec
and
mov
ret
inc
pop
cmp
rclb
or
add
jnp
push
lret
xor
pop
cmp
xchg
mov
lods
xchg
mov
add
sbb
and
and
cltd
push
jp
lret
jle
cmpl
dec
push
inc
mov
xor
jl
add
sub
and
and
cmp
inc
bound
lds
daa
iret
popf
xor
sti
dec
sbb
dec
xor
lds
jp
mov
mov
inc
loop
fadds
sub
jge
mov
cmp
pop
aas
jae
dec
insb
xchg
lcall
jbe
imul
adc
add
sbb
adc
popa
sbb
jl
or
inc
les
adc
or
mov
add
jp
aas
mov
sbb
ja
xchg
in
outsb
xor
or
sbb
xor
pop
push
and
out
inc
cmpsb
aas
or
mov
cmp
adc
push
pop
test
mov
popf
outsl
push
and
clc
test
cmp
add
jecxz
jmp
ljmp
repnz
add
push
and
add
hlt
iret
push
rclb
test
je
dec
adc
es
push
lcall
dec
cmp
in
sbb
jl
xchg
push
stos
xor
pushl
lds
ds
lock
loopne
pop
pop
cmp
add
push
xor
or
push
dec
and
ss
and
mov
cmpb
and
inc
jb
lcall
repz
push
repz
add
push
push
nop
sahf
dec
pop
dec
sub
rorb
push
shll
sbb
and
rol
dec
and
xchg
sbb
fisttpl
lret
push
aas
sbb
pop
jp
shlb
jg
mov
mov
pop
adc
rorl
xchg
fwait
mov
push
dec
testl
push
cmp
fbld
sub
fmull
lahf
cmp
cmp
adc
push
xchg
pop
mov
hlt
sbb
imul
cmp
in
insb
nop
movsl
or
test
pushf
mov
setnp
and
fbld
clc
outsb
xchg
inc
test
or
dec
div
xlat
and
sbb
pop
cmpsl
dec
inc
data16
push
dec
mov
cmp
arpl
jb
cmp
xor
sub
inc
dec
fldl
out
xchg
mov
cmp
test
jno
mov
cmp
int3
or
pop
stos
mov
rol
and
leave
pop
lds
fcmovb
and
push
push
mov
cmp
cmp
cbtw
and
mov
add
or
or
lea
or
or
imul
jg
inc
jo
sub
jmp
xor
xor
outsb
mov
mov
sbb
mov
lds
mulb
aad
js
cmpb
fwait
lods
orl
lods
insl
xlat
sub
dec
dec
push
push
push
testb
push
lock
jmp
testb
mov
sub
add
mov
int
or
and
cs
mov
or
mov
or
push
add
ficoml
and
dec
inc
sbb
pop
fisubs
js
iret
add
add
popa
sbb
iret
jmp
insl
dec
clc
add
jo
jne
ret
aas
xor
sub
push
lea
lea
cld
push
xchg
mov
aam
je
pop
push
xchg
aam
in
or
jnp
aaa
lret
mov
rolb
inc
in
xor
lret
outsl
push
das
pop
aas
cmpsl
adc
jmp
sub
or
daa
pop
inc
loope
dec
mov
sbb
add
push
mov
push
mov
mov
jl
sub
add
pop
dec
lock
jae
adc
insl
scas
cld
fwait
adc
lock
add
fmuls
jmp
sahf
jmp
sub
fsubrl
sub
jne
push
call
inc
mulb
cmp
test
inc
iret
add
cs
adc
cmp
sub
sbb
mov
sbbl
jnp
outsl
into
jg
sti
inc
push
and
xor
jl
push
add
jmp
popa
fstps
sbbb
add
js
adc
jno
bound
cmp
inc
imul
in
jle
and
lock
cmp
inc
push
push
dec
push
adc
adc
or
int
int
xchg
xor
push
add
or
loopne
test
dec
ss
insl
jecxz
sbb
jge
rcl
sbbl
jno
jecxz
jge
jg
sub
pop
mov
push
cmp
cmp
enter
dec
call
popa
dec
cmp
data16
enter
xor
push
testb
jmp
mov
pop
xor
cmp
mov
adc
fistps
les
jmp
lds
ljmp
push
rcrb
and
sub
sub
mov
sti
inc
popf
out
add
aaa
push
push
fs
jbe
mov
push
fs
movsb
pushf
pushf
aaa
dec
nop
int3
bnd
movsb
jmp
stc
add
cltd
add
outsb
test
sub
jp
adc
test
adc
add
adc
mov
inc
xchg
adc
scas
test
add
push
leave
push
loope
cmpsl
lock
adc
rcl
jne
aad
inc
sub
pop
mov
jne
call
jnp
mov
daa
sub
push
ret
scas
and
push
push
add
rcll
sbb
xchg
arpl
iret
das
in
push
out
or
pop
popa
enter
push
or
dec
enter
or
arpl
lock
ffree
adc
lret
enter
popf
adc
mov
mov
adc
mov
enter
int
in
or
int3
xor
jae
ret
insb
inc
stos
xchg
cld
hlt
mulps
sbb
mul
ljmp
pusha
data16
arpl
bndstx
in
rcll
push
add
and
mov
jl
jne
clc
ljmp
fcoms
sub
inc
orb
jnp
add
imul
pop
aam
push
add
pop
test
les
int
inc
imul
mov
adc
jnp
int3
in
imul
movsl
xchg
mulps
out
xor
adc
and
orb
and
movsl
and
test
jns
dec
xchg
arpl
je
aas
cmp
je
adc
sub
and
lds
sbb
pop
rcll
pushf
aad
or
mov
adc
push
mov
fisubrs
sbb
rclb
daa
in
xor
shrb
incl
je
inc
pop
inc
in
mov
jbe
mov
inc
cltd
pop
inc
or
scas
insl
popa
jle
fcoms
jl
aas
or
push
push
cwtl
or
push
adc
mov
and
lock
inc
int
and
and
mov
in
mov
jbe
dec
enter
adc
and
in
fcom
ss
push
dec
adc
sub
ss
daa
dec
jecxz
lea
sub
or
sbb
xor
icebp
dec
or
cmp
into
sbb
jno
rorb
xlat
xor
dec
cmp
and
setnp
mov
dec
mov
lock
push
or
leave
inc
push
mov
outsl
dec
cmp
sbb
inc
adc
xchg
loopne
xchg
popf
insl
and
push
dec
adc
dec
fldcw
leave
push
fs
lods
dec
push
push
dec
scas
aam
xor
xor
or
mov
mov
adc
inc
lds
insb
or
adc
jecxz
and
inc
push
xor
pop
loopne
adc
inc
aad
gs
cmp
cmpsl
inc
mov
add
fbld
test
lahf
arpl
jo
jl
xchg
sbb
loopne
dec
cmp
sub
shrl
mov
pop
add
xor
into
in
in
in
sub
in
pop
and
rorl
in
aas
adc
mov
mov
mov
push
ljmp
xor
lea
cmc
std
pop
test
push
jns
inc
fldcw
mov
dec
leave
loopne
sub
mov
add
cmpsb
sbbb
ds
aam
and
mov
psraw
or
stos
loopne
insb
fnstsw
dec
insl
ret
adc
test
sub
mov
xor
ja
jo
sub
ret
pop
les
jmp
insb
test
xchg
adc
pusha
cmp
inc
dec
leave
and
movsb
in
ret
or
xor
lock
clc
les
mov
sub
imul
dec
clc
push
or
fisttpl
dec
sub
in
loope
or
and
push
rcr
mov
pusha
leave
cmp
addb
daa
xchg
cmpsb
jo
jne
cmp
cmp
adc
daa
push
xchg
jecxz
jne
cmp
adc
lret
add
stc
lahf
add
dec
loop
sub
rorl
scas
inc
push
adc
and
clc
dec
call
push
xchg
xor
and
add
xor
and
test
push
les
call
xor
call
adcb
call
push
cmpsb
push
xchg
sub
inc
and
stos
pop
xchg
add
dec
ss
and
call
add
mov
andb
inc
adc
loopne
mov
dec
clc
ret
add
push
leave
push
cwtl
and
stc
sbb
adcb
inc
sub
inc
jo
aad
insb
mov
testb
sub
xchg
dec
adc
cmp
push
addb
xchg
aas
test
loope
insl
lods
add
jns
shlb
adc
inc
into
pop
jg
fwait
sub
fcmove
stc
sbb
or
push
adc
dec
jb
je
cmp
and
ret
rcl
sbb
mov
adc
push
mov
pushf
sbb
dec
mov
hlt
je
rcrb
lret
jnp
cmc
push
sbb
push
stc
adc
lcall
loope
jge
jmp
sbb
insb
cmp
or
or
adc
xor
add
mov
xor
lret
cs
test
mov
jno
data16
and
sbb
fmuls
sbb
adc
adc
dec
or
test
dec
lods
cwtl
pop
jg
push
in
or
shr
or
pcmpgtb
and
repz
nop
loop
call
jne
mov
dec
aaa
mov
or
xor
add
mov
mov
push
notb
or
mov
pop
ret
mov
mov
xchg
dec
sbb
loopne
cltd
adc
mov
pushf
dec
repnz
sbb
inc
dec
push
inc
inc
inc
push
sbb
mov
or
test
or
mov
jns
xchg
cmp
sbb
xor
pop
push
mov
pushf
add
push
xor
orl
sub
sti
mov
xchg
and
and
loopne
icebp
or
add
push
call
cmp
loopne
and
inc
sbb
inc
add
xchg
sub
clc
mov
jecxz
imul
push
jne
fs
adcb
inc
stos
and
ror
lods
fs
mov
and
fwait
movq
sbbl
inc
test
inc
push
sbb
je
xlat
fsubrs
dec
push
sbb
xlat
xlat
mov
jo
push
rol
pusha
data16
push
dec
mov
addb
push
xor
icebp
xor
pop
fcomi
xor
daa
insb
lahf
xlat
mov
dec
sbb
pusha
test
push
add
int3
push
pusha
push
xor
int3
mov
out
out
lcall
xorb
sbb
cld
or
inc
fsubl
adc
add
add
pop
jp
lret
int
jne
pop
or
sti
adc
inc
and
or
mov
pop
sbbb
in
movsb
push
out
push
xchg
adc
mov
call
int
xchg
popf
or
cltd
int3
pop
pushf
mov
mov
push
jns
adc
mov
flds
shll
push
das
pop
into
jg
jp
add
mov
bound
add
or
jmp
mov
jb
jnp
in
int3
sbb
pop
gs
sbb
pusha
or
stc
cmp
mov
addl
pop
or
cmp
add
out
add
jmp
adc
dec
aaa
fsubs
shl
jo
or
cmp
cwtl
pop
pop
xor
leave
ret
les
push
insb
cmp
les
ds
jno
mov
xchg
outsl
pop
test
mov
ret
repz
lret
or
clc
in
mov
or
pop
iret
mov
and
jg
arpl
lea
shrb
sub
sub
movsl
cmpsl
or
or
ret
aaa
leave
pop
sbb
lea
push
and
mov
sarb
cmp
imull
icebp
andl
stos
xor
loopne
sbb
cmp
jo
add
loopne
lahf
and
ret
popa
pop
inc
mov
mov
or
es
xor
sbb
movsl
clc
popf
add
sbb
xchg
mov
xchg
cmpb
and
cmpsl
cmp
imul
scas
jg
and
push
push
mov
ss
pushf
in
add
pushf
mov
xor
mov
pusha
fs
or
adc
mov
adc
repz
cltd
ss
and
xchg
outsl
adc
xchg
push
das
pop
gs
insl
loopne
or
jecxz
xchg
pop
cmp
adc
mov
mov
mov
ret
outsl
enter
out
ds
inc
dec
nop
ja
inc
inc
or
out
mov
outsl
loop
out
push
xor
movb
xor
jg
push
insl
inc
sbbb
loop
fs
in
cmp
push
bound
and
fimull
or
xchg
sbb
xchg
lods
sub
pop
add
xchg
rorb
out
pop
in
cmpsl
or
je
dec
cmp
adc
in
fs
and
inc
in
sbb
pop
mov
inc
dec
fimuls
popa
sbb
daa
lods
mov
je
movsb
arpl
jl
enter
pop
shld
stos
mov
nop
and
inc
push
xor
push
cmp
rclb
aad
rcr
pop
mov
adc
out
mov
aas
mov
sub
data16
and
ljmp
push
sbb
dec
imul
dec
or
lea
bound
mov
jl
pop
sbb
or
or
aad
ficomps
or
and
inc
repz
les
mov
popa
mov
inc
push
push
sar
test
sbb
inc
jae
pop
xor
jne
mov
cmp
cltd
inc
arpl
fisttps
mov
mov
lcallw
sub
sub
call
pusha
pop
shlb
cmpsb
outsl
sbb
add
inc
jo
and
add
test
test
lret
fldl
mov
sub
es
clc
xchg
and
or
inc
add
push
and
add
add
ss
lock
inc
call
repnz
and
xchg
xor
jno
insb
sbb
loop
fdivl
jns
call
loope
enter
mov
add
loopne
sbb
cmovnp
inc
movl
sbb
or
fcos
push
and
cmpsb
push
inc
inc
jmp
mov
xchg
inc
shll
ret
enter
mov
or
shr
dec
and
das
xchg
sarl
inc
jcxz
mov
in
push
mov
outsl
xor
lea
int
stos
or
lea
cmp
scas
ljmp
jp
add
add
add
out
in
pop
push
pop
or
enter
mov
or
cmp
mov
mov
mov
mov
imul
cmp
inc
mov
out
xor
repz
adc
pop
dec
mov
xor
imul
stos
mov
cmp
push
xor
or
ret
cmp
adc
xor
in
mov
sub
adc
push
lret
fsubrp
jbe
ja
pop
jb
inc
pop
mov
pop
inc
pushf
adc
leave
in
insb
jg
or
cmp
test
inc
ss
pusha
lcall
in
insl
or
add
mov
xchg
pop
push
into
push
or
pop
adc
push
in
or
pop
addl
mov
and
cmc
sub
jmp
nop
nop
in
out
loopne
push
push
in
adc
roll
xchg
aas
or
inc
leave
and
cmp
push
xor
inc
inc
inc
or
inc
xor
mov
jo
xchg
je
pop
cmp
add
insl
add
jb
adc
sbb
cmp
mov
mov
pop
push
lods
and
or
movsl
or
lahf
negb
gs
jmp
cmp
pop
push
jmp
push
jno
add
and
orb
js
je
enter
push
enter
push
pop
cmp
add
icebp
outsb
jb
std
cmpb
push
test
add
mov
call
insb
mov
inc
lock
pop
icebp
notl
inc
xor
or
lods
loopne
in
icebp
dec
jae
or
xchg
jns
inc
and
dec
in
pop
ret
add
movsb
cmp
aad
xchg
mov
add
cld
add
or
pusha
and
xchg
jmp
push
fisubrl
xor
jnp
fwait
sub
je
sbb
add
popf
xor
push
rorb
cmp
adc
or
stc
and
add
or
mov
add
add
mov
imul
fs
inc
jo
mov
imul
enter
aam
push
setns
pop
lock
mov
add
rol
mov
dec
roll
adc
insl
sbb
mov
jne
sbbl
mov
fidivrs
sub
cmp
clc
dec
cmp
add
rcrl
push
dec
add
push
xor
jnp
sbb
cmp
roll
sub
orb
stos
xchg
rolb
nop
or
loop
sub
adc
push
int3
sub
mov
loope
jne
mov
dec
mov
jno
ficompl
cltd
cmpsb
xchg
aas
and
jnp
lret
jbe
sub
sbb
roll
sbb
out
movsb
mov
xor
jns
out
or
and
pop
or
sbb
jb
clc
aas
push
sbb
addb
ljmp
jae
movsl
in
and
mov
push
xchg
mov
fstl
inc
jns
xchg
mov
fisubrl
int3
dec
scas
dec
sti
and
pop
dec
xor
or
ds
sbb
test
sbb
in
or
shlb
jae
push
out
xchg
add
daa
out
add
int3
jne
ljmp
pop
pop
nop
gs
cld
fcoml
pop
inc
in
xor
aaa
test
int3
sahf
gs
call
adc
add
dec
or
test
cmpl
fbstp
shll
xchg
int
shll
in
jnp
add
xchg
je
add
adc
pop
mov
lret
sub
imul
push
add
mov
sub
es
and
in
xor
sahf
mov
inc
sub
xchg
aaa
loopne
sbb
andb
sbb
dec
sbb
sbb
fldcw
jae
ja
xor
cmp
popa
test
js
cmpsl
jo
call
aam
push
lds
rcr
jne
ficompl
pop
stos
add
clc
pop
out
pop
and
jne
add
inc
outsl
xchg
imul
call
nop
popa
ret
push
mov
rolb
jae
mov
jns
clc
sbb
dec
mov
scas
nop
cmpsl
adc
stos
pop
xor
add
jbe
dec
imul
bound
adc
addr16
or
cmp
xchg
sub
mov
xor
cmpsb
popa
xor
cs
push
sbb
cmp
inc
fs
and
cmp
or
lock
jge
adc
mov
shlb
adc
or
arpl
lds
inc
shr
mov
dec
fidivl
inc
ret
push
pop
push
mov
rolb
adc
push
pop
xchg
mov
je
xor
rol
test
inc
inc
pushf
sub
adc
daa
xor
dec
imul
sbb
mov
sub
dec
adc
imul
sub
inc
fsubs
jmp
out
inc
pop
push
xor
add
dec
repz
push
jbe
and
cmc
popl
loope
lods
mov
jae,pt
fmulp
test
or
test
jg
fiadds
xor
inc
add
jle
jl
inc
int
xchg
popa
jbe
add
and
dec
or
jbe
in
aad
add
sbbb
push
or
out
stos
pop
or
jl
inc
ret
cmp
sbb
lret
adc
inc
movb
adc
mov
cmpsl
mulb
ret
inc
sbbl
jbe
add
cmpb
movb
mov
adc
daa
add
jl
mov
pop
jne
loopne
in
fsubl
leave
test
jg
aaa
dec
and
clc
xchg
dec
adc
scas
jbe
jo
fcmovnu
cmp
jne
jns
inc
je
int
inc
and
cmp
inc
sub
pusha
mov
fs
mov
and
jae
pop
cmp
lds
add
outsl
push
bound
xchg
xchg
xor
in
xor
pop
or
pop
pop
sbb
test
test
dec
ljmp
lea
xor
jns
or
xchg
aas
xchg
out
popa
add
nop
rol
or
test
and
cmc
jo
je
add
pop
daa
loopne
insb
mov
test
inc
data16
push
inc
stc
pop
call
pop
push
push
mov
punpcklwd
sub
lock
call
testb
add
cs
add
insb
je
pop
roll
sbb
mov
les
cmc
xor
fists
stos
dec
pusha
call
xlat
dec
or
jnp
push
ja
pop
mov
daa
add
add
mov
pusha
mov
imul
inc
cmp
daa
lea
sub
and
out
outsl
js
bound
movsl
cmp
inc
or
mov
dec
aad
js
popa
or
test
js
inc
js
and
xor
xor
aam
pop
or
imul
orb
adcb
sbb
ror
adc
mov
lret
or
inc
and
jne
or
inc
shrb
cmp
mov
dec
jb
addl
or
add
cmp
mov
ret
movl
movsb
cmpb
push
sbb
out
ret
cmp
rcl
cmpsb
je
movsl
pop
lds
cmp
inc
jnp
arpl
sbb
mov
cmpb
insb
mov
mov
jno
in
rorb
mov
add
andb
pop
roll
sub
clc
push
and
adc
adc
hlt
imul
sarl
inc
pusha
mov
sete
imul
add
sbb
pop
xor
cmp
movsl
cmp
cmp
or
call
push
push
inc
adc
xchg
int3
pop
sbb
out
cmp
adc
mov
jbe
xor
dec
xchg
or
insb
or
inc
jo
fsubs
push
xor
and
fwait
test
je
jmp
or
mov
int3
leave
adc
sarb
lock
bound
bound
jecxz
mov
lock
dec
and
and
arpl
mov
pop
xorb
push
pusha
adc
mov
hlt
xchg
pop
arpl
arpl
mov
cmp
cmc
push
add
loope
rcll
les
je
xchg
sbb
cvtpi2ps
or
add
jbe
and
repz
xorl
ffreep
clc
mov
pop
push
cli
or
popf
pushl
inc
fsubs
imul
mov
pop
jge
das
in
dec
sub
fsubrs
xor
xchg
mov
inc
imul
mov
sub
bnd
mov
xchg
add
mov
add
inc
popf
movsb
pop
sub
add
cwtl
ret
xor
or
dec
popa
pop
lea
mov
mov
lods
mov
xor
hlt
lea
test
jne
sbb
or
shlb
xchg
rorl
pop
imul
sub
cmp
arpl
cmpsb
repz
lret
addr16
mov
xchg
mov
repz
divb
scas
bound
pop
and
cltd
incb
xor
xor
or
iret
in
or
aaa
lods
stos
imul
addb
nop
and
xor
push
aaa
xchg
cmp
adcb
ljmp
jmp
mov
das
and
xor
ret
inc
fmuls
push
inc
inc
shl
aad
enter
lcall
inc
ret
scas
add
jle
cmp
loopne
nop
cmp
inc
jb
scas
clc
mov
in
dec
jo
nop
xchg
lods
test
movb
testb
adc
call
ret
jge
lods
xor
loopne
jl
daa
add
into
pushf
or
je
jo
div
inc
push
mov
push
and
push
push
movl
and
add
es
dec
dec
push
in
add
jmp
cmp
das
jge
cmp
imul
rcrl
or
sti
mov
gs
mov
dec
mov
mov
push
sbb
sti
cmpb
loop
add
pop
push
jbe
or
mov
pop
xor
mov
ss
push
cmpsl
inc
arpl
xchg
jp
push
aam
shr
add
lcall
push
imul
roll
jns
cmp
jmp
push
push
arpl
xor
or
sub
gs
loop
pop
movsl
or
je
out
notl
sbb
sbb
inc
cli
lret
sub
std
fildll
sbbb
jbe
ret
lea
xor
lret
sahf
dec
add
inc
and
hlt
add
adc
fadds
andb
movsb
stc
adc
nop
out
push
or
nop
das
sbb
fs
inc
dec
inc
adc
push
dec
jno
add
aam
dec
cmp
dec
je
mov
push
cwtl
sbb
lea
arpl
pop
add
je
push
xlat
push
or
gs
imul
sbb
jl
adc
sbb
or
xor
test
add
ja
push
ss
mov
in
pop
iret
or
nop
test
mov
in
test
add
testb
push
push
inc
cmp
and
and
jo
jge
dec
pop
das
add
es
xor
rorb
mov
dec
ret
fidivs
mov
inc
pop
adc
inc
xor
insl
mov
dec
pushf
cmpb
outsb
inc
add
pop
shll
lahf
xchg
js
sbb
ja
fimuls
aas
or
and
scas
or
clc
ss
sbb
js
pushl
add
aaa
xchg
sbbb
loopne
out
xor
cmp
insl
fidivrl
jmp
sbb
rorb
icebp
add
adc
pop
orb
adcb
in
imul
jne
jne
incw
mov
dec
cmp
add
sbb
out
jp
jb
in
in
mov
or
push
sub
xchg
test
push
inc
or
or
and
mov
sbb
adc
xchg
in
push
jle
in
aaa
in
and
mov
sbb
or
jne
push
jecxz
and
inc
sub
shrl
fdivl
jl
popf
mov
mov
sub
adc
or
or
mov
pop
pop
jp
sbb
xchg
inc
and
insb
add
jg
add
jo
push
inc
jle
and
inc
outsb
sub
adcb
cmp
loopne
pushf
movsl
sbb
and
xchg
push
cs
test
and
rolb
xchg
cmp
mov
add
jmp
inc
cmp
ret
jg
je
cmp
cmp
mov
or
adcl
xorb
lods
dec
fmulp
testb
orl
add
sbb
sbb
add
jae
daa
rcll
ja
or
cmp
add
xor
in
pop
outsb
aaa
adc
dec
dec
push
or
ja
mov
cmp
pop
inc
bound
push
addr16
xchg
mov
xchg
test
xor
lds
add
mov
or
adcb
sbb
shl
add
pusha
inc
in
inc
ret
and
xorl
call
push
push
xchg
sbb
jmp
adcl
sub
sbb
mov
push
test
mov
dec
or
nop
jge
imul
and
ficoms
mov
pop
aas
cmp
sbb
push
pandn
push
addl
ret
xor
popf
add
adc
inc
dec
mov
xchg
aaa
test
cmp
and
push
and
add
mov
push
adc
lods
pop
add
or
adc
pop
lds
ja
mov
adc
cmp
push
xchg
push
inc
popa
jl
push
in
cltd
incl
lahf
test
js
dec
repz
pop
mov
imul
sahf
dec
inc
push
popf
clc
jg
fldl
roll
add
and
add
aam
testb
add
mov
add
or
stos
push
test
push
xchg
adcl
jl
enterw
test
push
jb
out
push
cmp
or
xchg
ss
cmp
cmp
adc
aas
imul
fucomi
jb
add
pop
adc
pusha
pop
js
inc
jl
das
sub
inc
mov
sub
ret
es
cmp
jns
sarl
in
lods
cmp
in
sbb
loop
imul
add
int3
rcl
adc
test
int
inc
pop
andb
adc
add
loope
push
mov
fs
jmp
and
int
fsubs
xlat
add
test
ret
and
and
or
roll
pushf
adc
and
sub
xchg
push
sub
in
mov
add
test
push
clc
push
fdivrs
inc
or
sub
div
jmp
and
mov
xor
es
xchg
mov
xor
pop
jge
mov
or
fists
sub
test
xchg
imul
test
pushf
or
fisttpll
icebp
test
inc
xor
or
dec
sbb
and
popf
add
aam
js
xchg
or
xchg
adc
or
xchg
aam
cmp
adc
in
scas
add
dec
add
jne
aam
insb
icebp
push
and
mov
jo
popa
xor
push
push
push
pop
fcmovnu
or
int
adc
enter
rclb
pop
add
fwait
test
dec
add
in
sbb
inc
fisttpl
push
sbb
aas
imul
and
add
loopne
cbtw
adc
mov
popa
add
pop
sub
mov
xchg
add
repz
inc
rclb
jge
sub
sub
cmp
orl
pop
popa
js
jbe
je
mov
shll
lahf
call
sti
xor
mov
push
mov
or
push
movsl
sbb
loope
ljmp
jmp
mov
rcr
add
jecxz
and
or
jmp
movsl
and
fistpll
push
pop
and
test
push
loopne
and
jl
mov
popa
add
pop
pop
sub
adcb
pop
or
adc
out
jbe
out
push
jnp
nop
inc
fs
dec
imul
jg
pop
or
jge
cmp
inc
imul
xchg
clc
clc
loopne
add
and
dec
ds
cmpsl
or
dec
add
push
mov
js
cmp
inc
push
out
xor
shll
push
out
cmp
fcmovnbe
adc
and
or
add
push
xchg
cs
out
push
and
cltd
jns
cmpb
dec
jb
add
push
js
sarb
mov
hlt
push
pop
and
xor
scas
sbb
inc
mov
jl
arpl
mov
sbb
or
sbb
inc
pop
inc
cmp
cmp
inc
cmp
xor
lea
pusha
or
inc
pop
sbb
into
cmc
aaa
sar
imul
dec
call
pop
in
sbb
shl
or
hlt
xor
loopne
dec
imul
lods
or
test
mov
adc
dec
dec
sub
add
loop
add
xchg
and
inc
subl
sbb
arpl
outsl
push
aad
cmp
aad
push
sub
loopne
mov
mov
enter
mov
cmp
loopne
cmp
je
es
adc
shlb
jge
jne
sbb
sub
push
sbb
add
shr
inc
cmpsb
and
je
add
pop
cmp
pop
cmpsl
jo
je
cmc
sbb
jns
sbb
add
pusha
sub
xor
jno
xor
in
test
aaa
push
jge
rcrb
push
inc
dec
shlb
es
inc
or
test
jnp
std
add
mov
and
out
or
adc
hlt
test
setge
pusha
enter
insl
data16
imul
call
or
or
lea
add
or
sahf
or
ja
pop
mov
or
imul
loope
aad
or
sarb
fsubrp
push
sbb
das
repnz
ja
jle
mov
movsb
mov
jle
adc
jge
xorb
fucomi
or
sbb
sbb
fld
sub
dec
dec
mov
sub
shl
test
popa
push
pusha
inc
jg
rorb
test
arpl
dec
mov
aad
pop
or
iret
outsb
pop
cld
adc
fisttpl
jne
jne
test
pop
inc
enter
or
add
adc
in
rol
lret
xchg
out
push
lock
dec
mov
or
push
insl
nop
lret
and
loopne
pusha
gs
lret
and
fsts
pop
xor
fsubs
popa
int
loopne
int3
dec
das
enter
xor
pop
les
rcr
xor
or
pop
insb
push
imul
xor
and
jne
loopne
push
xchg
xchg
pop
stc
or
mov
adc
lock
scas
daa
out
js
rorb
xor
xchg
test
sbb
push
add
inc
and
add
cs
adc
jmp
stc
xchg
out
fwait
pop
dec
fs
data16
sti
out
pop
pop
push
popa
add
push
ret
jae
mov
sbb
nop
dec
loopne
adc
xchg
pop
add
add
push
imul
addr16
mov
or
adc
and
adc
pop
roll
fidivs
popa
jo
push
aad
pusha
cmp
inc
pop
cmpb
inc
push
adc
fcompl
lcall
mov
and
and
cwtl
fs
push
popa
dec
sub
stos
std
pop
insl
sbb
cmp
push
push
xlat
or
xchg
sbb
je
adc
insl
jecxz
xor
jae
repnz
test
cltd
or
sbb
push
adcl
dec
xor
test
sub
loope
add
add
add
enter
test
sbb
mov
loope
push
cmpsl
inc
and
xlat
inc
and
testb
les
mov
and
idivb
btr
sub
sbb
and
sub
and
adc
stc
dec
loopne
sbb
adc
or
sub
scas
mov
inc
iret
xor
roll
fs
sub
mov
cmp
or
stos
mov
test
push
mov
adc
sub
xchg
mov
addb
mov
cmpsl
or
jns
rcll
sub
popa
insb
jno
inc
fsubrs
mov
loope
xor
jl
les
pop
pop
pushf
push
and
cmp
pushf
xchg
inc
stc
ds
decb
dec
pop
add
dec
dec
or
pop
dec
aam
lods
imul
push
lock
popa
mov
mov
ja
jns
mov
and
movsb
int
roll
insb
scas
push
mov
mov
pop
xchg
cmp
mov
push
pop
dec
adc
xlat
push
sbb
adc
inc
popa
add
mov
push
add
stc
or
sbb
lods
inc
pop
das
xor
pop
and
adc
add
sahf
dec
hlt
paddq
popf
push
push
xor
pop
or
mov
cmp
sub
popf
mov
or
dec
leave
pop
cmpsb
lods
or
or
and
or
imul
or
cmp
mov
repz
jb
fldl
pop
sub
dec
dec
clc
aad
outsl
sub
xchg
mov
dec
pop
cmpsb
test
xor
jmp
popa
incl
cmpsb
mov
xor
in
insl
stos
push
or
icebp
or
mov
notl
sbb
data16
popf
xchg
mov
sub
pop
pop
add
add
dec
lret
sub
xchg
mov
dec
dec
or
imul
or
adc
lcall
and
popf
cwtl
push
dec
push
fstpt
mov
inc
leave
or
pop
sub
adc
adc
popf
nop
or
mov
lods
es
push
xchg
dec
in
nop
push
and
pop
dec
cld
insl
mov
daa
ss
push
ret
inc
jmp
andl
push
push
jecxz
sbb
bound
push
adc
add
ret
mov
pop
mov
xor
movsb
adc
and
ret
push
pop
sbb
data16
mov
pop
aam
inc
mov
mov
enter
nopl
lahf
loopne
adc
push
dec
xor
dec
aaa
dec
push
add
js
into
daa
xor
and
push
fldl
dec
push
mov
push
icebp
dec
js
cmp
adc
pop
jmp
lods
dec
popa
jbe
popa
das
in
adc
cmpl
mov
push
and
lock
js
dec
pushf
pop
inc
inc
dec
mov
aad
sbb
jbe
pop
enter
sbb
mov
pop
push
ds
mov
pop
push
jl
or
sub
stos
dec
mov
imul
dec
in
pusha
push
je
fwait
shlb
pop
scas
sbb
sbb
and
mov
es
cmc
in
pop
test
into
and
jmp
outsl
push
sub
inc
pop
ljmp
test
pusha
mov
dec
gs
frstor
movsl
dec
lret
lock
cmp
cmpb
mov
movsl
lods
repnz
xchg
or
add
jno
dec
cmp
xchg
sbb
movsl
lods
lcall
clc
dec
pushf
int3
jle
lcall
push
pushf
pushf
pushf
pushf
jns
leave
repz
int
incl
pop
adc
icebp
jnp
pop
ss
jne
dec
test
and
xchg
lods
dec
lds
or
addb
leave
sub
test
fs
xchg
adc
mov
cmovg
sub
loope
and
adc
xorb
sub
pushf
cmp
xchg
adc
or
fnstenv
cmpsl
xchg
test
cmovo
xor
cmpsl
aam
out
mov
mov
test
pop
sub
mov
stos
pop
scas
pop
xchg
cld
fs
lods
add
pop
lods
das
or
fisubrs
pop
test
push
popa
lock
loop
or
iret
add
add
and
outsl
inc
add
leave
mov
les
pusha
add
push
test
test
adc
cld
dec
dec
xchg
popa
lock
js
dec
cmc
mov
call
xor
mov
arpl
lea
xchg
jb
xchg
inc
mov
pop
sub
push
jbe
jns
inc
stos
jl
call
or
lds
cltd
rcr
rolb
pop
cmpsl
push
xor
mov
out
stc
stc
testb
loopne
addr16
or
aas
in
in
data16
rolb
pop
or
add
or
sub
xor
inc
imul
xor
adc
push
xor
je
or
dec
xchg
fsubrs
sub
ss
xor
mov
sbbl
xor
push
xor
push
outsl
stos
hlt
je
pop
push
pop
xor
adc
lock
or
mov
dec
and
in
sbb
movsb
and
mov
adc
push
mov
pop
add
sub
test
adc
ret
or
or
adc
jle
fidivl
or
mov
int3
push
inc
and
mov
sbb
mov
push
fisubl
inc
or
sahf
in
adc
jbe
pushf
or
arpl
dec
fsubrs
test
or
call
xor
or
lcall
adc
push
dec
adc
fsubl
or
and
jae
cmp
jp
xchg
inc
sub
pop
or
jne
orl
icebp
mov
clc
insb
fs
xchg
xchg
sub
and
jne
adc
gs
shlb
testb
push
and
push
dec
outsl
sub
lea
fmuls
scas
int
popa
sbb
inc
stos
fs
xchg
adc
jo
dec
dec
sbb
test
or
insb
ret
push
lret
adc
sub
jne
mov
sub
xchg
inc
pop
or
and
sbb
shlb
xchg
push
loope
push
sbb
rsqrtps
outsb
arpl
lds
cmp
insb
addr16
cmp
out
lods
lcall
imul
in
dec
inc
insl
bound
lret
insb
mov
dec
js
add
add
or
arpl
push
out
inc
adc
sti
inc
or
data16
loope
imul
jbe
icebp
xchg
cwtl
insl
das
pusha
or
gs
push
or
sbbl
mov
sub
or
mov
and
out
mov
fcoms
aad
pop
or
in
inc
cltd
out
cld
and
imul
les
pop
mov
add
xor
inc
fisttps
stos
ss
adc
push
in
movsb
jmp
jle
add
clc
dec
push
jae
xor
or
fwait
call
mov
js
testb
insb
outsl
mov
add
xor
or
stos
call
aad
enter
add
mov
imul
xor
xchg
cltd
test
mov
push
or
ret
and
andps
sub
lods
in
mulb
mov
test
das
push
insb
or
bound
sbb
push
push
adc
jmp
shl
scas
sub
or
cmp
repnz
adc
adc
and
test
adc
add
fsubs
push
push
cmp
dec
loope
jb
arpl
cmp
outsb
pop
and
cwtl
popa
add
add
sbb
jb
cmp
fildl
repnz
cmc
inc
or
push
or
sbb
or
mov
add
imul
add
dec
add
pusha
mov
mov
or
daa
divb
mov
sbb
push
mov
cmp
pushl
repz
mov
pop
mov
sahf
and
iret
mov
or
mov
ja
pop
ud2
jb
mov
pcmpeqw
mov
or
add
rol
mov
or
mov
adc
in
or
js
mov
out
ret
xor
mov
pinsrw
jb
inc
lock
mov
dec
test
inc
subb
adc
or
mov
fcompl
adc
pop
sbb
add
inc
xchg
adc
xchg
or
or
fwait
pop
inc
dec
push
jb
in
dec
or
pusha
test
add
sub
xchg
lds
add
or
pop
pusha
sub
inc
dec
movsl
loope
mov
sti
mov
mov
or
repnz
andb
add
cmp
dec
shlb
add
push
add
cmp
sbb
xor
add
bnd
ds
push
mov
push
adc
xor
push
mov
add
cmp
in
mov
pop
xor
outsb
mov
xor
pushf
lods
inc
popa
jb
inc
aas
add
sbb
fisubl
enter
add
dec
cmp
shll
add
andb
insl
xor
sbb
or
push
jmp
dec
cmp
dec
add
xchg
adc
decl
pop
jnp
or
mov
movsb
sbb
xchg
in
push
push
filds
and
jbe
cltd
dec
cs
add
add
add
mov
mov
or
test
jecxz
adc
add
push
out
sbb
test
cld
cli
cmp
in
push
adc
lea
push
sahf
or
or
jnp
test
cmpsl
leave
dec
cmp
rcll
lods
les
inc
dec
and
adc
mov
popa
mov
popf
xor
insl
pop
jle
daa
or
xadd
mov
cmpsl
mov
loopne
xchg
adc
nop
mov
mov
mov
mov
data16
fsubrl
mov
or
jno
xor
dec
mov
adc
cmp
xlat
data16
jbe
aaa
pop
push
and
dec
xor
xlat
add
outsb
mulb
adc
inc
mov
or
testb
dec
inc
lds
arpl
popa
paddsw
or
call
sbb
push
sub
ja
sbb
inc
popa
sbb
push
dec
das
cmp
or
mov
mov
sub
adc
cmp
out
cs
nop
mov
insb
or
shrl
xchg
lods
std
adc
repnz
lahf
sbb
test
lods
sub
loope
nop
add
push
xchg
mov
sub
cmpl
ja
mov
dec
adc
jo
inc
fcompl
adc
and
call
dec
nop
mov
or
int
mov
push
cmp
adc
insl
int
or
insb
jno
add
cmpsl
mov
and
and
xor
sbb
sbb
mov
fldenv
push
dec
notb
ljmp
add
xlat
std
mov
jb
imul
pop
push
and
push
sarb
nop
adc
xchg
sbb
sub
dec
push
ret
add
push
xor
inc
push
movsb
ficoms
fists
push
inc
es
push
imul
xor
cmp
and
shll
jl
adc
add
incb
ja
mov
shlb
cs
or
clc
xchg
mov
adc
sbb
or
push
sbb
xchg
addr16
dec
adc
lret
adc
and
jo
gs
lret
mov
cli
pop
ret
inc
fwait
in
sahf
sbb
adc
shrl
loop
or
ds
ret
loopne
gs
add
out
jno
and
sub
mov
xchg
jl
cltd
adc
rcll
mov
push
and
dec
mov
ja
addl
push
jle
leave
ror
enter
dec
nop
bound
dec
ficoms
xor
adc
add
cmpsl
sub
aam
lahf
dec
and
mov
dec
mov
repnz
int
nop
call
fisttpll
xchg
mov
dec
inc
jecxz
or
and
fisttps
clc
cmpsl
pushw
jecxz
lds
fsub
or
or
jae
or
adc
mov
add
test
inc
jle
sub
lds
daa
mov
or
inc
bound
push
sbb
jnp
adc
andb
sbb
mov
or
stos
and
mov
push
adc
movb
add
enter
sbb
inc
addl
cmp
add
jne
or
ret
jge
sub
jo
jecxz
lods
xchg
pop
pop
mov
mov
js
sub
insl
jne
jnp
test
add
sub
add
xchg
mov
pop
pop
inc
bound
jno
adc
jle
enter
or
mov
add
or
push
je
pop
movsb
or
sub
ljmp
mov
lret
scas
es
enter
leave
xor
adc
test
add
test
mov
and
mov
mov
xor
daa
aaa
mov
cmp
cwtl
inc
push
adc
mov
mov
icebp
aas
cltd
add
sbb
lea
xchg
test
and
daa
push
dec
add
dec
sarb
shr
cmp
sahf
and
shl
popf
mov
stos
inc
insl
inc
jae
loope
leave
dec
leave
subl
lret
or
fs
lock
sub
push
mov
cld
sub
test
lret
jo
test
add
out
jno
inc
test
push
aad
ret
add
xchg
jns
cmp
push
leave
aam
dec
test
adc
xchg
ret
xchg
shlb
mov
lock
push
inc
lea
pop
or
test
pop
jg
add
adc
lret
fiaddl
or
add
cmp
cmp
push
jg
loope
push
sbb
mov
bound
jno
dec
adc
bound
bnd
sbb
pop
pop
cmp
pop
imul
push
adc
in
in
push
pop
adc
ret
jae
adc
add
test
dec
inc
jnp
dec
and
adc
mov
je
ja
mov
adc
or
movsl
int
mov
lods
test
rcrb
int
jecxz
movl
push
or
add
push
push
dec
add
add
stos
nop
pop
and
add
sbb
enter
add
mov
pusha
and
add
rolb
or
stc
into
daa
pop
mov
into
fmull
or
or
xchg
daa
add
jb
stos
dec
es
or
adcl
cs
add
out
mov
add
adc
gs
jl
pusha
mov
mov
jecxz
push
data16
dec
xor
pop
aaa
mov
pushf
or
xor
dec
pop
push
addr16
test
lds
sarb
or
movl
jg
cmp
and
or
or
pop
push
mov
xor
pop
adc
sub
jae
es
jo
push
rcrl
push
movsl
push
in
add
ss
sbb
stc
add
int3
push
inc
stc
lods
cmpb
fmull
push
nop
or
rol
add
jbe
or
dec
dec
push
xor
mov
cmpsb
add
push
and
pop
int
pop
enter
push
add
mov
in
test
sub
push
mov
fistl
incl
xchg
pop
jo
stos
mov
xor
rcrl
inc
pusha
add
mov
and
imul
shll
cmp
sub
aaa
sub
push
je
dec
int
jg,pt
jns
adc
aam
push
mov
dec
int
sbb
daa
sbb
mov
sbb
nop
das
dec
outsl
arpl
test
or
cmp
pop
push
push
or
fs
dec
adc
inc
xor
adc
dec
xchg
sub
mov
or
mov
test
lds
or
and
or
mov
test
jo
repnz
insl
xchg
ret
int
dec
mov
pusha
insl
mov
cmpsb
inc
lcall
adc
ret
mov
adc
push
fwait
ret
dec
popa
xchg
jno
or
xchg
cmp
adc
xchg
adc
or
xchg
sub
mov
xchg
stc
lock
stos
cwtl
pop
lcall
add
inc
gs
inc
fimull
dec
arpl
lret
xor
or
iret
fsubrs
xor
pop
dec
cmp
add
jbe
inc
mov
adc
xchg
lret
cmp
test
pop
mov
stos
shrl
or
push
push
mov
pop
xchg
push
mov
inc
or
jg,pn
mov
and
sub
mov
add
xchg
dec
mov
mov
mov
pop
testl
js
dec
inc
and
fimull
inc
out
mov
sbb
push
or
adcl
cs
xor
pop
mov
pop
xor
add
or
out
xor
pop
mov
and
pop
nop
mov
push
roll
fldt
dec
dec
adc
adc
inc
inc
pop
mov
mov
cmp
adc
xor
scas
leave
outsb
in
add
or
repnz
outsl
shlb
in
pop
xlat
imul
in
adc
sarb
add
fldl2t
ss
sub
xchg
and
xchg
and
fildll
pop
cmpsl
les
cmpsl
outsb
pusha
add
insl
mov
push
testb
loopne
fmull
mov
mov
or
enter
insl
js
in
pop
or
xchg
cmp
add
orb
mov
andb
push
cwtl
xor
arpl
cmp
or
sub
adc
dec
stos
dec
dec
mov
rclb
or
test
out
roll
push
add
inc
or
add
lods
lds
push
je
pop
push
push
push
movsb
loopne
ret
pop
inc
or
das
daa
xor
rcl
mov
inc
pop
sbb
pop
xor
in
leave
pop
and
stos
mov
std
pusha
adc
pop
push
cmpsl
sbb
adc
cmpl
sub
clc
mov
sbb
fs
cld
or
mov
stc
xor
sub
repnz
or
je
cltd
ret
cmpl
jp
jo
test
sub
dec
into
or
test
or
or
fdivl
mov
jg
push
xor
loopne
lea
mov
mov
fstpl
mov
sbb
push
xchg
pop
rcrl
testb
sbb
insb
fistps
ret
mov
das
repnz
pop
rol
mov
enter
push
inc
inc
or
mov
mov
sub
outsb
aad
mov
je
xor
dec
push
jle
sarl
xchg
pop
das
fstps
adc
mov
test
outsl
into
fadd
imul
not
xchg
enter
cs
jne
or
shrb
mov
stc
sub
sarb
loopne
or
push
sbb
call
push
cld
lock
inc
sahf
loope
sub
sbb
pusha
pop
icebp
loope
add
shlb
add
adc
mov
pop
adc
movsb
mov
dec
sub
nop
int3
int
inc
sub
shlb
adc
xchg
xor
lcall
inc
pop
xor
cs
lea
or
or
jecxz
imul
adc
sub
sub
dec
enter
pop
ret
sbb
andl
add
add
sub
mov
sbb
aas
cmp
push
mov
test
mov
and
cmp
adc
or
jbe
mov
adc
sub
or
adc
or
jne
insb
scas
jne
and
push
or
mov
and
cwtl
rcrl
das
mov
mov
and
mov
and
and
lods
sub
add
push
sub
jae
loopne
call
call
mov
push
in
mov
hlt
ljmp
push
push
scas
pmaxsw
jmp
pop
sahf
in
lret
repnz
int3
push
xor
adc
mov
add
cs
leave
in
jo
and
push
popf
in
push
inc
mov
or
daa
ret
sahf
mov
out
pop
outsl
nop
or
enter
fisttpl
clc
ds
inc
daa
sahf
mov
das
out
ds
or
insb
fcomps
push
dec
pop
xchg
bsr
push
jns
adc
in
add
pop
adc
add
add
add
add
ret
mov
add
add
rorl
adc
les
dec
decl
mov
mov
mov
mov
mov
mov
mov
cmp
mov
add
cmp
scas
fs
jmp
lcall
and
ljmp
dec
in
in
jecxz
jmp
clc
loop
loope
loopne
fdivrp
fdivr
ljmp
sbb
fcos
fsubrs
aam
sar
pop
incb
mov
test
js
mov
cmp
pusha
jo
sti
out
ret
js
mov
jl
les
push
add
pop
xor
in
mov
pop
js
lcall
in
fldt
scas
cld
aaa
lods
in
mov
push
mov
pop
stos
sbb
push
cmp
mov
ss
xlat
jl
movsl
pusha
shlb
out
pop
repz
lcall
bts
je
xchg
push
mov
lcall
sub
mov
cmpsb
in
lods
push
xor
insb
fmul
imul
movsb
popf
sahf
inc
add
mov
insl
idivb
push
xchg
cmp
mov
test
mov
push
jbe
push
mov
dec
push
cs
arpl
push
in
mov
ret
insl
dec
dec
test
fmuls
dec
out
and
pop
fisubl
ret
cmpl
and
aam
add
or
push
lahf
sub
jl
out
or
cmc
bound
pop
dec
jbe
push
aad
xchg
jl
or
cwtl
pop
aam
addb
ljmp
mov
inc
stc
frstor
xor
pusha
xor
or
bound
cmc
rcrb
or
mov
addb
repz
and
insb
shld
outsb
subl
mov
lcall
in
mov
xchg
sub
xchg
mov
mov
add
xchg
and
popa
sub
pop
popf
mov
jg
test
pop
mov
cmpsl
rorl
xchg
sub
imul
add
add
mov
push
arpl
sbbb
inc
and
or
fadds
or
or
sub
aad
nop
sub
or
test
icebp
sbb
push
inc
enter
or
push
enter
or
sub
dec
stos
push
in
mov
int
mov
jp
adc
xor
jns
outsb
sahf
and
or
mov
pop
out
cmp
jnp
jne
push
outsl
xchg
adc
push
shld
stos
pop
dec
xor
clc
arpl
inc
inc
dec
push
or
inc
and
dec
jb
sbbb
dec
mov
adc
test
pusha
dec
test
fcoml
inc
or
add
adc
jno
add
add
ja
push
jae
add
mov
lods
jmp
push
or
or
or
popf
add
adc
or
inc
push
jb
mov
sub
adc
pusha
push
in
test
sub
sub
mov
sarl
cmpsb
sbb
adc
mov
adc
push
outsl
or
bound
movsb
test
sub
aam
mov
adc
adc
mov
iret
or
repnz
mov
or
jne
lods
pop
movsl
mov
in
and
add
inc
cmp
repnz
xchg
jnp
popf
mov
inc
push
xor
add
cmpsl
pop
imul
pop
es
mov
jo
cmp
add
adc
and
movsb
pop
adc
xorb
dec
pminub
inc
in
push
scas
xor
cmp
mov
movsb
jns
lds
inc
shrl
and
inc
cmp
xchg
xchg
cmp
jae
inc
mov
ds
test
ljmp
mov
inc
jle
xlat
jnp
push
imul
orb
and
ja
mov
or
pop
cmp
mov
jo
jecxz
mov
je
orb
xor
scas
lea
and
je
inc
mov
jns
push
hlt
sahf
scas
sbb
arpl
dec
mov
in
pop
insb
inc
jg
or
dec
aad
mov
test
add
push
cmp
or
jp
lds
or
sbb
or
dec
insl
mov
testl
daa
inc
dec
dec
leave
lock
push
ds
daa
daa
daa
mov
xchg
xchg
and
pop
sub
xchg
xchg
xchg
jno
mov
leave
cli
add
out
daa
daa
daa
inc
repz
daa
daa
daa
lea
and
sbb
inc
sub
decl
add
incl
aad
incl
js
dec
shl
xor
inc
jmp
les
in
pop
addr16
lods
push
pop
xor
dec
inc
adc
aad
pushf
dec
pop
dec
stc
in
sbb
orb
and
inc
sub
cmp
sbbb
push
or
push
repnz
incl
and
in
or
arpl
dec
push
rclb
and
add
dec
dec
dec
mov
mov
imul
lods
sbb
add
stos
dec
add
dec
or
and
push
sbb
or
pop
or
adc
flds
mov
loope
mov
jnp
mov
rorb
insl
and
nop
fadd
add
dec
sbb
add
repz
incl
sub
lea
adc
dec
les
or
jnp
lods
inc
add
add
or
aaa
jo
insl
xchg
xor
lods
dec
test
stc
inc
cmp
xchg
decl
stc
pusha
sub
cli
movsb
mov
sti
jo
cmp
push
out
and
jmp
mov
cmpl
sbb
daa
dec
or
in
and
xchg
pop
addl
je
aad
mov
mov
pop
dec
insl
in
xchg
fwait
or
out
inc
rorb
wrmsr
lods
ret
xor
xor
les
push
out
enter
inc
cmove
test
dec
popa
je
xchg
inc
mulb
adc
jbe
stc
addr16
insb
sub
and
cld
xor
pop
mov
mov
add
incb
insl
movsb
dec
std
rcrl
dec
mov
inc
leave
shrl
cmp
add
xlat
inc
les
jnp
mov
pop
xor
push
or
or
aaa
add
aam
or
imul
mov
push
bound
or
push
cmpl
ret
adc
outsl
adc
xchg
std
push
or
in
add
cltd
cld
cmpsb
xchg
add
sbb
mov
sbb
bound
mov
or
add
loopne
pusha
jge
jl
imul
imul
imul
mov
ficoms
loopne
cmp
inc
inc
outsl
arpl
std
sbb
addb
pusha
mov
shlb
sbb
sbb
out
pop
sub
cmpsl
call
movb
add
dec
sbb
adc
push
push
insb
adc
popa
mov
xor
jle
aaa
int
adc
push
out
mov
adc
push
sub
daa
add
jns
xor
and
add
mov
xchg
xchg
add
xor
adc
icebp
or
adc
les
fsts
and
cld
inc
aad
sbb
inc
add
ret
shll
jae
push
inc
inc
stos
push
orl
sub
add
or
dec
sbb
push
popw
add
inc
pop
pop
or
add
xor
or
scas
jo
sub
mov
xchg
mov
add
mov
or
push
or
xchg
mov
jl
add
jmp
shll
int3
and
test
xchg
sub
lods
add
fs
sub
pop
sub
or
nop
xor
scas
leave
jne
movsb
mov
lods
mov
je
sub
mov
les
mov
test
dec
pop
push
rolb
pop
roll
jnp
ret
xorb
das
cmp
sbb
insb
or
jno
add
adc
or
fnsave
or
stos
add
loopne
add
loopne
jbe
pop
jp
mov
iret
arpl
stos
push
je
and
cwtl
jmp
ss
ljmp
jmp
sbb
in
rorl
mov
and
movsb
or
mov
cs
pop
inc
mov
fimull
sbb
mov
pop
and
add
cmpb
dec
sub
shrb
test
lcall
daa
or
push
and
js
or
insb
sub
dec
and
int3
shlb
adc
pop
add
test
pop
sub
sub
and
sbb
je
cltd
sub
mov
test
aas
lods
inc
adc
nop
push
dec
aas
dec
dec
rorl
jae
leave
fwait
gs
loope
add
enter
xor
push
add
and
pop
add
push
add
add
pusha
xor
mov
adc
rcrl
fs
add
push
test
mov
fimull
outsl
and
push
out
or
inc
rcrb
test
and
insb
jle
push
add
cmp
push
ret
dec
or
or
xor
mov
subb
std
popf
cmp
repnz
fdivl
sub
dec
dec
je
fidivs
fisttpll
es
outsl
mov
mov
lock
ret
outsl
fimull
ds
jnp
ret
sahf
test
sub
imul
fdivp
mov
js
push
mov
shlb
dec
pop
popf
add
test
or
add
sub
adc
inc
add
jns
add
add
add
test
cs
ret
and
addl
mov
dec
add
gs
mov
or
add
add
add
add
test
adc
add
mov
or
mov
cmp
mov
test
nop
and
mov
and
aas
adc
mov
es
mov
lcall
mov
mov
xor
push
out
dec
sbb
push
mov
adc
sbb
mov
cmp
ljmp
in
inc
inc
inc
inc
inc
inc
inc
cli
inc
loope
jmp
mov
jne
iret
mov
mov
or
stc
rcll
bound
lsl
jmp
adc
sbb
adc
sbb
xor
in
mul
cwtl
pop
call
subb
shll
sub
cs
sub
fsubr
sub
cmpsb
insl
xchg
scas
les
div
idiv
sub
dec
mov
stc
cs
jo
nop
push
mov
sbb
push
push
insb
push
mov
out
cld
xor
cmpsb
cmp
in
int3
call
out
add
add
push
or
in
and
dec
rcrl
daa
mov
js
lcall
xor
fisttpl
xchg
call
push
std
ror
pusha
pop
sub
mov
popa
lods
imul
cld
add
ds
cmpsb
stc
pop
add
inc
add
iret
clc
xor
cld
inc
push
jl
sub
pop
fcoms
jbe
jl
cmc
insb
pop
mov
in
or
add
insl
xchg
out
repnz
cld
repz
lock
icebp
icebp
cmp
lods
push
mov
pushf
lods
push
sbb
pop
mov
lahf
notb
mov
in
pop
sti
nop
cs
adc
xlat
push
bound
loopne
ret
sub
xchg
add
adc
adc
add
insb
rcll
scas
jo
adc
faddl
inc
push
fmuls
mov
add
gs
or
or
xchg
and
mov
mov
sub
sbb
test
mov
test
popa
arpl
push
xor
test
and
scas
fmul
adc
inc
or
inc
ret
and
sarb
inc
daa
pop
cmp
jg
aad
test
inc
sub
dec
pop
add
mov
mov
mov
sub
adc
xor
adc
lahf
inc
jae
fnsave
inc
or
stc
or
or
inc
pop
dec
fsubp
mov
inc
js
popf
ret
sub
bnd
push
cmpb
mov
push
pusha
pop
test
inc
enter
and
popf
dec
jmp
nop
adc
inc
adc
pop
nop
cmp
mov
iret
add
adc
pop
xor
movsl
lcall
nop
das
sbb
imul
in
ret
stos
add
pop
cld
adc
push
xlat
xchg
fwait
ja
sub
jl
jl
adc
pop
sbb
sub
add
or
enter
mov
and
les
sub
and
les
test
and
pop
or
sbb
fmull
dec
in
pop
xor
mov
dec
adc
movsl
lods
push
mov
jecxz
jmp
loopne
push
cltd
add
addr16
mov
and
loope
xlat
jns
movsb
or
xchg
jns
jl
adc
or
cwtl
or
fldenv
pop
insb
jne
dec
cmp
sbb
aas
popa
mov
dec
inc
xchg
add
and
js
push
pusha
or
ret
xor
fldt
sbb
in
in
add
adc
test
cmp
insb
or
in
adc
pop
and
or
je
sub
mov
xchg
xor
shl
adc
arpl
lock
je
adc
paddsb
rolb
adc
adc
enter
adc
sub
in
in
jns
lret
jb
icebp
adc
xor
insb
jb
jb
lods
iret
popa
lcall
and
xchg
adc
inc
cmp
icebp
sbb
pop
rolb
cmp
cmp
xorl
pusha
xchg
addl
xlat
and
xor
push
mov
ficoml
in
mov
jl
xor
mov
inc
mov
lea
push
dec
std
pop
jo
inc
lds
pop
out
pop
adc
roll
jecxz
push
sub
adc
jae
push
jb
outsb
mov
or
loop
pop
test
cmpsl
pop
and
lods
inc
pusha
push
loopne
aas
pop
and
or
cs
sub
pop
mov
cmp
incl
adc
xor
testl
fs
fwait
jl
sub
scas
or
inc
mov
daa
or
pop
add
add
xor
cltd
mov
roll
jo
mov
or
stos
mov
push
loopne
xor
ret
or
xchg
cmpsl
in
or
or
or
fmuls
or
insl
add
mov
scas
mov
jecxz
cwtl
lea
mov
sub
mov
sbb
sbb
sub
mov
test
adc
leave
sub
jb
pop
sub
pop
xor
sub
xchg
push
js
inc
sub
fwait
jo
add
sub
int
adc
fmulp
sbb
push
dec
add
insl
xchg
in
sbb
xchg
inc
pop
pop
ljmp
xchg
ficoml
mov
loope
mov
add
fs
insb
cvtps2pi
push
and
and
dec
push
sbb
fiaddl
xchg
sub
jne
aam
loope
inc
add
loopne
sti
push
or
and
add
lock
add
cmpsb
test
lea
fs
pop
adc
fdivs
or
pop
pop
mov
sbb
adc
adc
add
aaa
dec
je
mov
or
sub
fistl
mov
fdivs
and
mov
inc
icebp
xchg
ja
xor
inc
pushf
xchg
xchg
xchg
mov
test
aad
sti
enter
or
call
xor
push
stos
sub
sti
lods
pop
enter
sbb
pop
add
cwtl
sbb
xchg
mov
add
or
nop
or
mov
cli
nop
rorb
xor
push
xor
or
mov
sbb
subb
subl
lret
pop
push
mov
sub
jmp
arpl
jo
adcb
push
and
lea
leave
jmp
xor
dec
cmp
add
or
mov
adc
pop
movsb
add
cs
sbb
push
xor
les
mov
jo
rep
mov
add
daa
mov
repnz
ds
jne
mov
xor
insb
or
jg
movsl
push
stos
lea
insb
pop
or
pop
or
das
and
or
aaa
pop
dec
and
pop
xor
or
xor
sarl
add
pusha
xor
and
dec
rcrl
inc
cmp
pop
imul
imul
add
add
or
xchg
popf
xor
mov
rorl
pop
push
xlat
cmpsb
shlb
icebp
cmc
fidivrl
mov
xlat
mov
pop
and
mov
pop
xchg
cmp
sbb
or
or
mov
pop
and
sub
add
inc
pushf
ja
add
add
mov
add
xchg
add
xchg
pop
and
add
add
dec
and
test
jns
jb
cwtl
dec
or
or
add
and
add
xchg
xchg
xchg
mov
sti
and
mov
arpl
testb
and
daa
or
pop
and
inc
jge
push
ja
mov
inc
dec
fcmovu
inc
popa
add
hlt
or
or
xor
push
add
sub
push
or
push
adc
inc
mov
addr16
inc
ss
mov
add
lea
sub
cmp
loop
daa
and
loope
aam
std
insl
imul
mov
and
push
inc
jmp
and
cmp
or
sbb
pop
shlb
xor
rcll
add
push
icebp
cmp
cmpxchg
xor
pop
jns
and
fwait
ja
xorb
mov
cwtl
popa
mov
add
outsl
mov
sbb
test
pusha
or
mov
push
insb
or
inc
in
ficoml
cmp
add
mov
scas
push
nop
jge
das
add
pop
out
es
cmp
mov
pop
sbb
in
or
data16
imul
daa
daa
inc
dec
cmc
daa
sbb
pop
pop
daa
daa
daa
jle
lret
mov
adc
popa
or
adcl
mov
jno
fisttpl
mov
frndint
cmp
test
cmp
mov
lds
dec
mov
call
or
dec
mov
iret
add
sub
popa
add
push
jns
inc
add
aaa
cmpsl
movsl
fistpl
mov
sbb
mov
mov
ja
scas
sub
es
xor
ds
sbb
add
sbb
nop
add
nop
dec
and
jge
add
cmp
les
jb
xor
dec
mov
aas
sub
pop
lcall
add
or
xor
rcll
and
cmp
dec
push
outsb
test
mov
mov
pop
sub
les
or
add
sub
sub
cmp
cmp
mov
int
fdivrl
aam
daa
inc
arpl
scas
mov
and
mov
cmp
das
push
int
xor
mov
push
sub
dec
loopne
push
and
fdivrl
sbb
add
pop
jno
and
test
sub
bound
jno
jnp
sbb
push
jae
repnz
movsb
and
mov
xor
or
xlat
or
xor
xchg
push
icebp
lea
xchg
inc
dec
pop
test
pop
imul
mov
jbe
push
repz
popa
inc
sbbl
es
sarl
push
sub
or
sbb
push
test
inc
test
adc
mov
inc
aas
pusha
sub
enter
daa
fs
pop
push
ss
cli
cmp
xor
adc
pop
pop
ljmp
sbb
jo
inc
popa
pop
adc
mov
push
sbb
or
xchg
mov
push
testl
addb
or
or
mov
test
sahf
sbb
sub
roll
cld
clc
cmp
jno
lods
or
stos
fldl
je
or
ss
dec
or
push
aaa
lods
xchg
lock
dec
inc
adc
push
xor
in
cs
cmp
bound
mov
inc
into
add
add
adc
sub
push
add
hlt
push
inc
or
sub
cld
or
and
test
add
loop
add
ljmp
push
inc
cmp
xor
xchg
xchg
sub
inc
sub
jb
mov
imul
add
outsb
add
add
dec
and
sub
cmpsl
pop
popl
pop
cmp
mov
nop
imul
inc
hlt
inc
jmp
pop
xor
mov
xor
aam
inc
or
cltd
jne
sbb
mov
ja
xor
jne
or
push
cwtl
jb
sub
insl
xor
lock
mov
rorl
loop
clc
adc
into
add
sub
add
push
fcmovnu
sub
and
adcb
lods
das
adc
jno
sub
or
xchg
sub
cmp
inc
cs
add
fldt
add
add
add
xor
int3
cmp
aaa
mov
or
or
pushf
mov
addr16
pusha
add
push
jne
outsb
dec
les
jns
mov
xor
pop
lock
pop
scas
sub
shl
pop
cltd
cmp
or
jb
mov
aaa
pop
cmpl
jb
stos
shl
xor
cmp
cmp
inc
jo
rorl
in
popa
add
and
dec
inc
je
aad
rolb
inc
pop
dec
or
push
stc
add
dec
sbb
mov
xor
and
xchg
sub
lods
or
inc
mov
or
rcll
dec
cmpl
inc
adcl
es
fsubl
xlat
enter
iret
dec
adc
add
lret
mov
add
add
fcompl
aas
in
or
jae
dec
inc
push
cwtl
push
pop
lahf
or
in
xor
push
aaa
insb
push
lcall
push
xchg
scas
ds
push
je
or
daa
dec
jle
je
jne
push
or
jb
add
add
ss
add
or
and
movsl
sti
mov
push
adc
ret
pushf
sub
arpl
and
add
xorl
ret
dec
ss
push
or
jbe
push
xor
je
cwtl
mov
test
pop
insl
mov
adc
push
jno
clc
or
repz
jb
dec
cmp
or
inc
je
adc
repz
sbb
sub
push
outsl
xor
adc
xchg
adc
inc
lods
xchg
dec
add
das
jnp
sbb
xchg
shll
mov
cmp
loopne
add
dec
test
das
incl
rorl
fdivs
sbb
sbbb
xchg
arpl
sub
mov
popf
test
and
pusha
sahf
dec
adc
cmp
cmp
test
xchg
es
cmp
cmp
add
push
jbe
mov
jg
outsl
rcrb
cli
add
repnz
or
add
rcr
sbb
mov
xchg
jo
xor
repnz
push
dec
add
dec
loope
and
lock
add
mov
pushf
xor
cmp
mov
out
out
push
cmp
push
cmp
pop
pop
addr16
and
in
fs
in
adc
rcrl
es
jge
jno
cltd
add
nop
jg
aaa
push
orl
or
pop
add
and
jle
xchg
and
aad
test
pop
adc
sbb
lds
jmp
lds
xchg
mov
pusha
adc
and
pop
xsaves
fwait
in
pop
cmp
cmpsl
in
rorb
pop
cmp
cmp
jp
jbe
xchg
xchg
cmp
testl
xchg
jo
js
aaa
lods
int
test
daa
jns
push
push
jbe
jb
add
mov
adc
cmp
test
sbb
or
add
sub
pusha
stos
xchg
inc
and
in
jne
dec
loopne
inc
mov
xor
inc
add
add
dec
pushf
push
sbb
or
mov
pop
test
dec
mov
je
cmpsl
sbb
ja
add
mov
gs
or
cmp
mov
arpl
sarb
or
xchg
ja
test
push
adc
outsb
jns
bt
scas
fs
data16
aas
cmp
insb
cmpsl
mov
aas
dec
xor
add
jl
xchg
insl
and
xor
push
pop
stos
push
insb
mov
mov
rcrb
test
fdivl
imul
int
and
insl
jg
add
in
lods
or
push
xor
aad
jb
add
mov
add
sbb
mov
sbb
ds
push
gs
out
adc
or
xor
inc
push
fadd
test
jge
or
hlt
adc
test
add
insl
or
movsb
int
pop
add
xchg
mov
aas
pop
jg
xlat
popf
pushf
lahf
mov
stos
lcall
ret
push
mov
bound
adc
shll
cs
and
push
push
cmp
xor
pop
loopne
cmp
jmp
adc
ret
or
xchg
push
and
mov
movsb
xchg
hlt
ret
pop
add
rorl
sbbb
adc
xorl
and
dec
sub
mov
add
movsl
and
pop
leave
add
inc
xchg
dec
rcrb
and
and
fmuls
popw
dec
lea
rdmsr
and
add
in
and
ret
or
rol
mov
inc
in
nop
adc
imul
mov
ds
push
notb
rolb
out
test
xor
mov
or
dec
or
rcll
jne
loope
jb
xor
sub
add
add
jne
js
icebp
lea
or
push
fsubs
inc
clc
pop
mov
inc
cmp
adcl
jbe
xchg
fstpt
add
or
adc
ret
inc
add
pop
sbb
xor
push
push
mov
cmpsb
test
inc
lahf
fdivs
aas
inc
push
pop
sub
inc
lods
jbe
and
aaa
push
inc
cmp
in
or
cmp
push
rcll
rcll
inc
push
ds
data16
and
fdivrs
notl
jo
lods
push
cltd
or
jne
inc
jb
jecxz
jae
push
adc
decl
sbb
in
add
push
and
in
dec
adc
and
inc
rorl
lret
or
and
dec
cmp
jb
inc
add
adc
shll
add
ret
sbbb
dec
ja
xor
popa
rep
mov
aas
or
sbb
inc
and
add
shlb
pop
and
or
pop
rolb
inc
add
inc
sub
pop
or
mov
mull
or
adc
dec
les
sub
enter
dec
lea
mov
cmp
jle
ljmp
inc
push
cmovo
jae
scas
cld
push
out
fisttpll
push
fadds
cmp
fdivl
adc
mov
adc
call
sbb
adc
adc
jne
add
loop
add
mov
gs
ficoml
mov
inc
sbb
fadd
imul
dec
je
inc
paddq
cwtl
adc
or
xchg
inc
pop
sub
xchg
ret
sahf
mov
fmuls
or
sub
or
add
test
repz
test
or
add
ret
inc
inc
push
outsb
sarl
and
sub
sub
xor
mov
jo
mov
repnz
rclb
pop
mov
dec
orb
pusha
sbb
test
fwait
dec
lahf
es
adc
adc
add
stos
fucomi
adc
or
inc
sbb
daa
lds
incl
mov
push
popa
or
xchg
xor
int3
dec
repz
or
dec
movsl
int
repnz
adc
add
mov
push
in
dec
int3
pop
dec
and
dec
orb
jne
clc
ss
adc
add
add
mov
cmp
add
inc
lret
push
loopne
sbb
ret
add
es
sbb
mov
xor
sub
insb
outsl
jl
movsl
mov
or
pop
sbb
jmp
into
push
push
xor
adc
or
pop
mov
mov
jae
push
xor
fistl
jp
inc
pop
pop
mov
dec
or
or
pushl
ficoml
inc
cmp
mov
pop
xchg
gs
or
or
adc
xchg
adc
sbb
xchg
gs
xchg
sub
sub
xor
leave
lcall
xchg
imul
sub
lahf
push
xchg
sub
xchg
ja
fimull
mov
mul
inc
push
aaa
mov
adc
movsb
jg
sub
int
push
inc
je
arpl
xor
mov
xchg
imul
mov
lea
inc
push
adc
xor
inc
and
mov
cwtl
jmp
cmc
adc
gs
or
push
adc
cmp
or
sti
adc
xor
pop
xchg
cmpsb
addb
adc
adc
push
or
clc
sbb
mov
in
loop
xor
pop
or
mov
dec
add
pop
sub
fnsave
ss
repz
sahf
xchg
sub
in
push
push
or
int3
pop
add
stc
inc
or
pusha
pop
add
cmp
inc
test
xchg
jo
sbb
loopne
add
push
mov
inc
pop
fldl
xor
push
gs
lcall
or
sbb
sbb
inc
xchg
pop
add
sub
push
pusha
repnz
jne
inc
mov
inc
imul
mov
push
fsubrs
nop
push
push
cmpsl
mov
xchg
inc
jp
and
mov
sbb
cmpsb
sbb
inc
xor
pop
inc
shlb
or
nop
test
or
movb
mov
loopne
pop
jae
dec
ja
jp
sub
nopl
ja
mov
aas
pop
rorb
mov
iret
cmp
push
push
pusha
mov
sbb
andl
dec
push
fs
mov
enter
or
push
or
inc
adc
inc
inc
out
xchg
es
mov
add
enter
mov
aad
daa
nop
push
pop
adc
and
add
pushf
in
inc
or
or
or
mov
faddp
adcb
inc
dec
movntps
pop
rorb
inc
dec
pop
dec
mov
jle
or
rcrb
imul
sbb
xchg
gs
dec
push
shl
bound
push
incb
fstl
daa
fcompl
test
xchg
dec
add
js
into
cmp
or
dec
xchg
cmp
xchg
mov
jno
inc
adc
and
xchg
rclb
push
or
mov
sbb
add
add
dec
clc
inc
adc
cmp
or
lock
enter
xor
add
adc
les
mov
adc
lock
scas
inc
xor
push
fndisi(8087
adc
sub
jge
and
mov
jmp
sbb
aam
sbb
idivl
or
add
fisttpll
jge
cmp
add
pusha
fwait
inc
sub
rorb
sub
lds
adc
adc
dec
jge
xchg
xchg
mov
mov
mov
sub
or
adc
dec
movsb
orb
repnz
add
andl
enter
xchg
lcall
repz
inc
pop
insb
daa
rorl
and
and
js
mov
outsl
fisubs
and
stos
mov
inc
push
or
scas
xlat
and
pop
icebp
inc
stc
out
les
dec
jae
sbb
fdiv
and
adc
add
add
test
xchg
dec
dec
pop
xor
sub
sbb
fdivl
xor
xor
in
dec
xor
sahf
cmp
add
push
mov
mov
jno
push
aaa
sub
in
pushf
pcmpeqd
sahf
dec
lock
pop
inc
cmp
mov
sbb
lcall
fadds
je
dec
cmpb
js
or
jbe
mov
clc
add
and
or
rorb
popf
int
clc
sbb
and
cmp
decl
call
and
pop
dec
jnp
push
adc
nop
mov
jne
and
or
jnp
dec
adcl
xlat
sub
cmp
stos
outsl
aad
sbb
std
pop
add
sbb
push
lcall
hlt
or
lock
add
xchg
rorl
dec
call
das
shrb
movsl
inc
mov
pusha
aaa
push
inc
xchg
inc
rcrb
and
loope
cwtl
stos
shrl
call
gs
lods
push
insb
sbb
xor
mov
push
sbb
sbb
xor
push
loopne
popa
and
pushl
xchg
test
sub
lret
mov
out
ror
adc
mov
ret
jne
ss
sbb
in
and
lods
or
push
ret
call
sbb
mov
rcrl
adc
and
xchg
icebp
or
xor
cmp
aas
outsl
movsl
dec
xchg
xorb
mov
jmp
jbe
mov
pop
ret
push
sbb
jne
dec
je
adc
sub
scas
pop
mov
aas
xchg
pop
mov
orb
jne
xlat
xchg
cmp
jmp
inc
adc
test
jne
pop
jno
jmp
fcomp
pop
mov
sti
shrl
lds
fcoms
fidivrs
es
cmc
sub
xor
push
xor
lock
lahf
add
scas
movsb
pop
in
lock
inc
loope
xchg
and
call
outsb
xchg
insl
cwtl
xchg
push
call
mov
and
into
push
add
or
push
sbb
add
sbb
dec
sub
pushf
xchg
mov
nop
mov
lods
int3
cmp
mov
adc
xor
roll
and
insb
mov
pop
inc
dec
fdivrs
es
mov
or
mov
mov
sub
mov
sbb
add
ret
or
sbb
or
testb
sbb
inc
sti
cmp
lds
adc
sub
inc
jns
pop
or
arpl
sub
sti
mov
and
mov
pop
pop
xchg
mov
imul
aad
pusha
dec
inc
dec
sbb
push
js
orb
jmp
and
movsb
inc
scas
js
or
flds
cmc
daa
call
ficoml
inc
pop
popa
push
arpl
sub
lds
cmp
dec
add
in
cmc
sbb
adc
add
dec
mov
or
shll
xor
xor
data16
and
fs
bound
dec
mov
mov
xor
sbb
push
stc
sbb
jno
add
inc
or
hlt
mov
dec
inc
inc
push
sbb
xchg
push
xor
outsb
dec
das
inc
push
mov
or
sub
mov
sub
add
pop
cmp
mov
adc
push
daa
or
daa
push
les
fdivrp
fstpl
fwait
jmp
push
pop
aam
sub
lret
lcall
out
adc
cli
imul
cmp
xor
xor
adc
in
imul
jns
cmp
imul
pop
sub
add
inc
adc
inc
or
sub
adc
dec
repnz
add
fdivrs
and
cltd
or
es
mov
sbb
push
int
dec
imul
fiadds
mov
adc
js
mov
or
or
roll
push
popf
add
in
push
jnp
jne
lea
lea
call
sub
and
and
shl
xchg
mov
or
sahf
sub
mov
dec
sub
fimuls
aaa
push
jmp
add
in
in
test
cltd
sub
sbb
dec
repnz
push
sub
dec
dec
stos
loopne
push
adc
pop
fsubp
inc
loopne
in
insb
push
movsb
adc
cwtl
pop
adcb
or
xor
stc
adc
dec
ja
cld
pop
stos
mov
and
jne
dec
inc
mov
sbb
int3
sub
push
fwait
pusha
xchg
xor
adc
dec
and
xor
mov
and
in
aam
or
add
clc
cmp
sbb
incl
add
lock
or
ficoms
and
das
pop
ret
adcb
add
push
xor
push
and
cmp
mov
and
dec
cwtl
xchg
pop
add
and
inc
je
add
and
sub
add
rolb
sbb
mov
lods
push
sbb
jmp
and
or
hlt
pop
test
cmp
push
cmp
mov
dec
mov
adc
in
lea
les
pop
sbbl
hlt
outsb
je
mov
dec
cmp
pop
push
pop
dec
jp
push
inc
mov
jl
dec
shrb
out
mov
adc
xor
or
jmp
and
cs
dec
xor
in
test
or
cmp
pusha
fdivl
icebp
and
imul
adc
xor
or
sub
clc
jmp
es
pop
addr16
and
jle
ret
daa
lods
pusha
xchg
or
mov
and
pop
roll
dec
fnsave
mov
pop
sub
pusha
pop
pop
lods
adcl
push
and
inc
adc
sbb
adc
mov
jo
in
pop
cmp
xor
adc
sbb
sub
push
ficoml
faddl
je
dec
adc
jecxz
inc
or
scas
ds
push
inc
pusha
scas
xor
push
xorl
sbbl
stos
xchg
jl
add
cmc
fldenv
inc
sub
xlat
mov
lret
sbb
sbb
lret
push
cmpsl
or
loop
cmp
dec
rorb
lret
popa
sbbl
test
jle
add
sti
out
dec
mov
sbb
jo
dec
dec
add
mov
xorb
adc
in
mov
pop
mov
nop
lahf
cli
xor
loopne
or
and
and
lahf
cltd
xor
popa
aaa
sub
data16
insb
sbb
mov
add
enter
popf
popa
or
xor
in
scas
movsl
in
shlb
pop
popa
adc
and
xchg
push
mov
stos
sbb
inc
inc
jg
addl
mov
jno
inc
in
mov
aad
dec
pop
or
in
imul
in
jnp
add
rorl
xor
sub
ss
popa
or
push
lret
push
cmpsb
sbb
int
test
cmp
pusha
roll
jge
push
ret
rcrb
jge
jb
pop
insb
and
or
pop
mov
dec
jecxz
cmc
or
inc
sbb
cmpb
add
mov
pop
pusha
cmp
sbb
jp
jae
mov
pop
pop
and
pushf
push
testl
rorb
outsb
orl
sbb
add
dec
and
ss
add
aaa
cs
and
ja
push
adc
or
or
or
xorb
mov
in
pop
jmp
and
filds
pop
jmp
cmp
je
mov
and
adc
adc
pop
jle
or
or
push
or
or
in
pop
je
mov
jbe
cmp
cmp
pop
je
xchg
in
addr16
and
pop
inc
push
les
jne
push
cmpsl
outsl
adc
gs
push
mov
sbb
xlat
inc
or
fs
popa
xchg
pop
js
call
sub
or
orb
inc
cli
pop
popf
fistpll
mov
mov
lea
scas
pop
adcb
or
add
repnz
gs
or
stos
shr
adc
xchg
cmp
add
jl
push
jl
dec
push
hlt
jl
aaa
sbbb
gs
rcrb
or
ret
pop
xlat
adc
lods
mov
fstps
ja
push
orb
push
fimull
fs
inc
sbb
cmp
stos
scas
mulps
repnz
adc
xchg
ljmp
xor
mov
inc
inc
shl
xchg
add
shll
xchg
jl
out
jnp
adc
subb
adc
mov
xchg
cmp
jne
and
push
xchg
mov
popa
pusha
sub
jo
or
xor
bound
or
dec
lahf
jo
nopl
add
sub
jnp
pop
int
jbe
mov
scas
jo
rcrb
aas
adc
jnp
cmp
imul
xor
sbbl
in
add
add
arpl
lret
repnz
sbb
mov
inc
sahf
xchg
ret
cmp
je
add
scas
adc
inc
insb
add
mov
jae
pop
add
lods
mov
pusha
add
jp
inc
popa
adc
pop
stos
sbb
mov
adc
cmp
jo
or
sbb
test
add
mov
imul
jnp
mov
mov
add
xchg
or
adc
xchg
outsb
inc
pop
fldenv
les
aas
dec
mov
insb
ja
pop
push
and
popa
enter
aas
mov
js
or
mov
imul
push
fsubp
xchg
lea
and
fs
fs
xor
add
pusha
je
or
jl
lea
inc
add
outsb
ss
pop
push
adc
adc
movsb
mov
add
dec
popa
jno
lahf
adc
add
js
sub
adc
rcr
repz
cmpsb
es
pop
repz
inc
cmp
xlat
push
dec
test
push
inc
enter
jo
inc
pop
cltd
add
scas
test
in
dec
cmovl
rcrl
push
push
cmp
fsincos
or
push
xchg
cmp
ficoms
pop
arpl
mov
push
jo
push
aaa
mov
insb
inc
cmp
pop
adc
daa
jecxz
loopne
inc
jnp
popf
sub
push
sub
enter
dec
jne
mov
out
jnp
push
and
pop
mov
push
sub
xor
jo
iret
add
push
mov
mov
pop
adc
jmp
orl
adc
lahf
pushf
xor
push
shlb
and
or
in
in
cmp
shlb
push
pop
add
cmpsl
mov
pop
xor
jmp
ror
cmp
fldcw
cmp
insl
mov
enter
sbb
movsb
jo
jg
out
mov
je
or
bound
cmp
roll
les
pop
push
add
push
ljmp
loope
inc
cmpsb
mov
adc
scas
pop
fwait
push
xor
mov
rcr
dec
adc
mov
dec
inc
inc
mov
lods
add
or
or
jge
mov
cmp
addl
and
insb
loope
jo
or
or
and
cmp
adc
adc
pop
add
dec
gs
ds
jmp
cmp
stc
inc
mov
insb
add
and
adc
sarb
or
dec
inc
or
notl
out
add
inc
pop
inc
rcll
scas
enter
push
cmp
into
inc
ret
pop
nop
scas
imul
cmpsl
pop
xchg
add
adc
cltd
idivb
in
sti
push
adc
enter
in
sbb
add
adc
adc
pop
and
xor
sub
cld
adc
movl
mov
dec
test
mov
movsb
imul
xchg
inc
xchg
pop
or
and
inc
sub
lcall
push
add
jns
pop
dec
imul
adc
pop
mov
dec
or
pop
push
push
fidivrl
mov
mov
mov
xchg
mov
or
jmp
or
mov
add
movsl
leave
jb
add
rcr
cmp
mov
or
and
bound
and
xlat
adc
push
das
mov
lcall
or
inc
je
sbb
sub
sbb
ja
je
adc
dec
adcb
ret
popa
xchg
dec
xchg
cwtl
lods
dec
push
or
ret
xchg
jns
jecxz
rorb
jmp
sub
xor
push
add
and
jl
inc
and
pop
jle
stos
mov
or
ss
movsb
add
mov
fdivs
or
mov
lea
mov
lods
rorb
xchg
push
pop
dec
dec
inc
filds
test
lock
mov
mov
bound
fs
inc
imul
outsl
mov
inc
cwtl
push
leave
leave
jb
push
pushf
cmp
sbbb
adc
mov
sarb
cmp
add
inc
mov
rclb
ret
sbb
cmpl
jmp
adcb
dec
test
mov
mov
mov
gs
mov
scas
xchg
lods
orl
inc
int
std
adc
ret
push
out
lods
sub
clc
ljmp
mov
das
bound
loopne
xchg
add
or
jne
add
mov
sbb
add
pusha
mov
push
and
add
cmpsl
pop
pop
xorl
mov
pop
xorl
sbb
sahf
push
js
add
out
loopne
dec
pushf
fldcw
jne
ret
cld
sbb
xchg
inc
subl
inc
ds
push
adc
xor
push
adcl
les
xor
mov
inc
out
dec
xor
inc
inc
add
adc
or
adc
movsb
outsb
sub
and
sub
jno
add
iret
shll
imul
push
cmpb
inc
and
xchg
fiaddl
pop
mov
push
ja
dec
mov
adc
push
jp
aam
or
lret
pop
enter
add
inc
add
pop
dec
add
or
out
nop
arpl
inc
dec
xchg
and
add
xlat
inc
add
or
add
add
xor
or
sub
stos
rol
pop
lock
add
xchg
pop
pusha
add
add
cmpsb
push
mov
icebp
aas
pop
jo
imul
pop
or
pop
arpl
cmp
sbb
nop
add
pop
rcrb
add
adc
inc
div
xor
pop
je
or
add
movsl
or
add
scas
or
mov
cmp
addr16
enter
sub
add
xor
jno
add
adc
js
jne
lods
adc
mov
or
and
pop
sub
fimull
js
pop
dec
fnstsw
js
and
icebp
sbb
inc
pop
mov
dec
jecxz
mov
adc
test
lock
mov
pop
sahf
mov
pop
or
jns
dec
jecxz
mov
adc
rorb
es
mov
lds
lret
inc
push
jae
adc
cmp
xlat
push
add
jmp
pop
sub
and
mov
xchg
lcall
cmp
nop
aaa
in
sbb
cltd
movsb
mov
or
adc
mov
xor
rclb
push
adc
or
outsl
insb
test
and
jns
xchg
jns
or
sti
pop
pop
mov
pop
leave
mov
lock
shrl
mov
lea
mov
adc
fs
mov
fs
add
mov
cltd
sbbb
adc
movsl
add
or
push
pop
je
mov
mov
dec
inc
or
testb
je
push
xchg
pop
sub
xor
mov
adc
sub
pop
add
or
cmp
stos
sub
insb
or
roll
test
call
and
loopne
add
test
inc
adc
fcomps
add
inc
mov
pop
jnp
xchg
push
test
cmp
push
jo
daa
jecxz
les
daa
or
mov
mov
cmp
jge
xor
pop
pop
jge
outsb
in
jmp
mov
add
pop
mov
leave
xchg
or
pop
push
jno
pop
jle
push
mov
shr
or
pop
push
add
mov
pushf
mov
sarb
dec
mov
daa
cwtl
dec
movsb
mov
jnp
daa
mov
inc
testl
sbb
test
mov
mov
add
adc
rorb
and
inc
xchg
mov
out
push
push
mov
adc
test
mov
aas
test
mov
mov
xchg
bound
cmp
movsb
imul
dec
std
fadds
jne
pop
faddl
push
jg
adc
and
mov
push
inc
ds
loop
push
sbb
or
cmc
rorb
mov
mov
fcoms
adc
pop
je
orb
mov
stos
adc
add
mov
push
aas
or
ds
mov
movb
dec
and
enter
mov
cmpsl
cmp
jmp
inc
mov
std
add
and
mov
mov
mov
jns
sbb
pop
pop
jns
xchg
sub
inc
bound
aam
sub
ja
je
js
or
jb
push
inc
pushf
pop
outsb
orb
or
in
inc
xchg
fs
sbb
cltd
xor
add
iret
mov
pop
inc
pop
mov
pop
push
jns
add
add
mov
leave
aad
dec
decl
dec
ret
jno
jne
adc
dec
push
sbb
sub
and
xor
or
nop
rorl
or
je
pop
lock
pop
stos
adc
dec
mov
ret
adc
pop
adcl
outsb
daa
sub
push
test
into
js
push
das
les
or
lock
out
cmpb
inc
mov
dec
or
push
pop
sub
and
cmpsb
dec
pop
push
and
adc
pop
test
inc
loop
inc
jmp
jg
adc
mov
sbb
fsubr
addl
cmp
xor
aam
movsb
mov
cmp
push
test
lea
arpl
inc
add
es
sbb
lods
push
push
mov
mov
mov
xchg
call
push
sbb
and
or
push
add
pusha
add
pop
add
dec
mov
daa
enter
jge
pop
aas
sbb
shl
inc
stc
inc
sub
cmp
fmuls
mov
pop
nop
sub
daa
insb
adc
or
xchg
shrb
inc
push
mov
mov
dec
loope
dec
out
mov
daa
xor
test
insb
add
push
push
lret
loop
push
jb
sbb
add
in
inc
sbb
mov
ret
imul
jle
sub
sub
inc
cmp
inc
jae
sub
in
ret
adc
and
mov
xor
push
ret
mov
mov
mov
movsl
addb
push
or
add
ljmp
jmp
xchg
mov
test
add
push
pop
pop
sub
mov
xor
pop
test
fiadds
and
or
inc
or
andl
inc
mov
cld
add
pusha
inc
mov
sbb
dec
push
push
aad
cmp
or
push
sub
dec
fstps
jecxz
mov
or
push
popa
adc
insl
and
add
inc
js
adc
sbb
cmp
and
pop
arpl
or
pop
les
lds
shrb
and
mov
mov
inc
xchg
nop
mov
xor
out
push
push
outsl
and
inc
push
xorl
sub
adcl
mov
mov
add
and
cmp
rorb
inc
inc
into
mov
lock
sbbl
ret
pop
xor
orb
jne
push
bt
outsl
push
sahf
add
push
lock
xchg
add
sbb
push
inc
xor
or
xchg
push
movsl
dec
push
dec
xchg
sbb
xchg
dec
adc
adcl
or
pop
daa
sub
mov
or
mov
outsl
iret
sub
insb
xlat
or
or
or
rclb
add
and
loop
push
test
cmp
mulb
adc
loopne
mov
rcr
dec
sub
inc
or
loope
jb
and
pop
adc
pop
insl
fwait
lea
fldl
pop
ficoml
lahf
push
fstl
dec
mov
add
outsb
or
test
pop
sub
inc
scas
push
clc
pop
scas
pusha
aad
adc
out
testb
sbb
mov
movsb
dec
pusha
rorb
in
xor
addr16
cmp
add
add
xlat
pop
cli
add
xchg
xchg
cld
clc
lret
sbb
into
pop
repnz
sbb
int3
adc
lods
shrb
test
lahf
subl
aas
pusha
mov
mov
mov
and
rclb
test
in
test
cmpsb
sahf
mov
add
adc
inc
out
push
add
dec
add
repz
xor
mov
mov
jge
lahf
mov
arpl
imul
inc
adc
call
cs
data16
mov
neg
xor
push
jmp
dec
xor
clc
ret
sub
js
mov
outsl
les
xchg
ret
pushw
mov
dec
add
xor
mov
push
fsubrl
dec
dec
pop
and
bound
test
enter
loopne
dec
jmp
not
mov
dec
fs
pop
jmp
sbb
rclb
jo
pop
movsb
sbb
mov
cmpsb
sbb
inc
add
pop
and
dec
add
dec
aad
sti
or
loopne
sub
cmp
push
testl
test
inc
cmp
mov
aaa
call
inc
loopne
pop
lods
int
in
or
inc
in
push
xor
test
mov
or
push
sub
push
scas
sbb
dec
shl
ljmp
bound
pop
xor
addr16
outsl
or
add
push
and
xor
add
jl
jo
xor
aad
aas
adc
orb
adc
mov
push
rcrl
push
and
jno
cmp
cmp
adc
and
jle
sbb
test
inc
adc
loopne
jle
dec
cmp
fsubs
cmpl
xor
lret
lea
and
push
into
movl
scas
add
pop
add
xchg
pop
xor
jle
gs
pop
dec
shll
inc
dec
shll
shlb
inc
inc
sub
or
and
mov
sbb
cmp
jecxz
fsub
aam
inc
fcoms
faddl
fdivl
cmpsb
lea
jg
cmp
pop
jmp
pop
sub
mov
sbb
xchg
add
adc
or
pushl
ror
inc
push
mov
cmp
iret
lea
wbinvd
sbb
movsb
add
lea
or
movsl
xchg
out
std
mov
movsb
add
or
add
or
adc
js
jne
pop
stos
sbb
shlb
cmpsb
loopne
popa
cwtl
gs
mov
cmc
adc
pop
cmp
bound
outsl
imul
xor
aaa
xchg
xor
setp
test
loopne
sub
or
repnz
popa
xor
dec
lahf
enter
addr16
xchg
xor
call
push
jo
movsb
cmp
mov
xor
jne
xchg
sbb
or
je
scas
mov
sub
mov
jmp
and
or
mov
and
es
push
jle
add
clc
push
mov
and
inc
gs
insl
xchg
xchg
push
or
xchg
mov
cmpsb
adc
sbb
ror
or
js
pushf
fmull
jg
dec
nop
adc
jl
or
add
add
iret
jp
or
cmp
sbb
push
dec
push
push
xchg
imul
or
dec
aam
push
dec
mov
jmp
pop
shlb
popa
push
push
movsl
mov
cmpb
mov
mov
push
lret
inc
adc
or
dec
dec
mov
int3
sbb
or
or
or
cmp
cmpsl
sar
lods
outsl
or
add
add
pop
mov
mov
dec
pushf
lds
insb
mov
add
fwait
add
cltd
jo
cmc
jbe
cwtl
xor
leave
add
pop
notl
mov
ja
imul
add
xor
je
jne
or
push
lods
xor
stos
movsb
push
andl
pop
add
xor
incb
fimull
add
addr16
push
mov
aaa
pop
push
jo
test
int3
sahf
and
jbe
insb
icebp
rorb
push
and
int
push
push
and
sub
popa
xor
enter
sub
fnsave
sub
inc
push
cwtl
xchg
rcr
sarb
js
xchg
mov
adc
repz
jge
rcll
mov
cmp
or
push
jmp
sub
ret
sub
add
push
or
in
inc
aaa
aam
add
pop
pusha
shrb
add
lea
dec
movsb
pop
dec
sub
xor
ds
scas
add
shlb
aaa
daa
mov
stos
pop
cli
js
add
fs
rol
lea
dec
lods
orb
pop
ret
dec
cwtl
add
mov
cmpb
jge
adc
dec
or
fs
imul
sub
or
outsb
out
stos
inc
mov
inc
dec
sub
dec
or
and
popa
lea
ret
mov
cmpsb
or
xlat
in
push
jp
int3
lock
xor
add
pusha
daa
adc
mov
sbb
loope
es
pushf
and
and
mov
dec
aas
and
jb
scas
ja
xchg
xchg
jge
push
inc
xorb
dec
js
jl
pusha
scas
xchg
push
adcb
sbbb
or
fstpt
outsb
push
sbbb
hlt
jne
sub
add
sbb
cmp
test
imul
adc
push
xor
jns
pusha
and
js
dec
or
mov
and
movsb
addl
sbb
dec
popa
sbb
and
or
mov
mov
loope
xchg
dec
aad
sbb
dec
jl
jge
sbb
addb
pop
aaa
push
clc
decb
insb
lods
xchg
negb
xchg
inc
xor
pop
pop
out
lds
inc
sub
je
adcb
xchg
sbb
int3
adc
inc
dec
sbbl
jge
mov
cmpb
jmp
lahf
adc
orl
scas
stc
fisubl
andl
popl
mov
sbb
add
js
loop
cmp
jne
lea
sub
mov
and
loope
data16
mov
das
push
fwait
inc
neg
ret
and
adc
out
push
or
xchg
mov
cmp
push
inc
arpl
popa
push
push
dec
shlb
mov
aas
in
popa
adc
movsl
adc
out
jo
pop
mov
movsb
push
add
add
push
mov
aam
pushf
dec
mov
push
pop
into
xlat
lea
add
fmull
or
pop
lcall
add
dec
cmp
pusha
adc
int3
and
mov
adc
adc
mov
test
mov
add
mov
add
rorb
sti
and
adc
or
xchg
inc
pusha
pop
push
or
test
xor
popl
adcl
jo
cwtl
or
pop
sbb
inc
stos
cmp
in
je
mov
cmpsb
in
add
jne
mov
sbb
or
fistl
xor
ficoml
ficomps
psrad
adcl
inc
push
nop
and
mov
in
or
pushf
mov
inc
dec
dec
jle
push
inc
push
mov
inc
dec
sub
or
or
lahf
ja
dec
dec
in
ja
push
or
lods
pop
inc
push
out
mov
dec
ljmp
pop
cmc
or
and
scas
mov
jl
push
lret
into
in
mov
int
js
leave
and
scas
hlt
pushf
mov
inc
xchg
add
xchg
in
enter
scas
or
add
add
or
add
or
pop
popa
pop
xlat
adc
or
and
pop
sbb
dec
dec
inc
and
mov
dec
das
fiaddl
jb
inc
or
dec
push
push
push
je
inc
sub
mov
out
adc
mov
adc
push
inc
mov
xchg
aad
mov
push
mov
mov
dec
xchg
outsl
push
outsb
mov
arpl
mov
pop
cmpl
or
push
shrb
lock
cli
cmp
xor
dec
lock
xor
cmp
cmc
adc
fsubs
push
mov
add
sub
or
add
jmp
pop
adc
cli
movsb
xchg
aad
movswl
cmp
pop
pop
addr16
fwait
adc
pop
mov
or
add
mov
mov
sarl
sbb
js
pop
sbb
add
and
sub
sub
rclb
xlat
or
pop
movsb
dec
jmp
pushf
xor
mov
inc
dec
popa
movsl
cs
pushl
sub
lock
adc
adc
je
movsl
js
gs
imul
pop
cmpl
dec
or
dec
push
add
push
push
gs
dec
lcall
or
or
mov
popf
mov
jae
cld
add
add
inc
scas
in
sub
scas
mov
add
scas
ror
xor
lret
mov
sbb
mov
sbb
call
mulb
mov
fcoms
push
dec
pop
or
add
aam
add
aad
mov
or
imul
rorb
xor
dec
cltd
push
sub
xor
fwait
mov
shl
jmp
push
hlt
test
stos
xor
add
inc
add
pop
adc
imul
or
cmpsb
ds
pop
mov
aam
lcall
or
je
sbb
out
mov
iret
sub
add
or
adc
mov
jl
cwtl
mov
pop
xor
andl
notl
or
out
xchg
push
cwtl
sbbl
xor
sub
movl
outsl
mov
mov
cwtl
popa
loop
orb
int
xchg
or
adc
adc
jae
inc
ss
adc
or
cmp
dec
or
dec
xchg
xchg
pop
xchg
jp
xchg
add
les
icebp
or
jne
xor
jo
lods
int
pop
imul
sub
inc
inc
sbb
test
inc
test
mov
fsubl
pushf
enter
cs
mov
jne
inc
xchg
adc
inc
shrl
in
sbb
dec
adc
lock
add
sub
or
addl
mov
xchg
add
mov
fidivrl
in
xor
cmpsl
orb
and
movl
lea
or
push
add
lock
push
stos
in
mov
dec
and
mov
mov
leave
addr16
add
adc
dec
push
ret
mov
lea
test
lcall
dec
add
xor
sbb
add
addb
sbb
push
rcrb
loopne
jecxz
scas
adc
push
jle
or
inc
and
xor
sub
xor
inc
adc
push
insb
out
xchg
outsl
lods
test
jno
inc
jge
and
mov
adc
sub
or
xchg
ficoms
xchg
push
pop
pop
divl
push
dec
imul
mov
or
pop
ret
inc
fstl
xchg
cmp
cltd
mov
sbb
mov
cli
adc
mov
adc
in
sub
xor
sbb
stos
ret
adc
sahf
sbb
nop
mov
and
pop
or
push
pusha
mov
inc
leave
inc
inc
dec
cmpsl
repnz
loopne
push
test
push
testb
je
sbb
or
xchg
cmp
ror
add
adc
sub
jne
or
inc
ljmp
subb
xor
xor
in
test
mov
movsl
push
sub
jmp
add
sub
xor
adc
add
mov
pop
dec
xchg
pop
add
faddp
jb
pop
movntps
xchg
mov
mov
add
stc
or
inc
add
sub
xor
sub
inc
loopne
pop
pushf
xor
adc
sbb
push
je
shlb
test
lods
lods
adc
inc
aam
sbb
aam
mov
add
xor
test
or
cmp
popa
mov
xlat
popf
sub
pop
roll
pusha
loope
pop
mov
cmpsb
mov
loope
in
and
push
add
push
pop
pop
clc
mov
js
fcoml
inc
subb
scas
sbb
test
stos
mov
mov
push
sbb
xchg
and
mov
xchg
daa
or
adc
adc
xchg
add
xor
test
or
mov
dec
cmp
outsb
in
pop
les
inc
stos
mov
push
jle
xchg
mov
cmp
sbb
xor
push
push
jno
inc
add
xchg
push
mov
std
inc
pop
movsb
inc
inc
ljmp
nop
cltd
push
pop
adcb
pop
mov
loop
add
cmp
pop
adc
add
pop
or
test
es
mov
xchg
push
mov
xor
test
add
fcompl
mov
mov
inc
es
insb
test
test
enter
lock
xorb
dec
loope
dec
std
cmp
mov
arpl
fildl
scas
pop
xchg
jns
adcl
jmp
xchg
cmc
in
insl
cmp
push
add
gs
pop
jecxz
pusha
mov
inc
or
mov
mov
out
sbb
mov
sbb
sbb
and
xor
and
les
ss
inc
xor
mov
sub
push
add
or
sbb
in
and
sub
push
cmp
sbb
push
je
fs
adc
call
and
dec
subb
fstps
push
pop
dec
ret
mov
test
fcmovb
mov
add
sbb
add
jmp
sbb
aaa
add
or
in
or
daa
adc
mov
rolb
rcr
out
or
xor
add
and
inc
push
cmp
test
xor
sub
aas
fs
or
and
inc
dec
sub
int3
les
sub
dec
dec
stos
jle
fstpt
adc
adc
mov
js
int3
and
nop
paddsw
jmp
mov
jb
jbe
sub
inc
cmp
mov
or
push
sbb
and
jbe
dec
xchg
xor
fucomp
dec
add
js
insl
movsb
cwtl
and
loope
imul
dec
mov
sub
in
iret
loope
mov
cmp
push
mov
xor
or
rolb
inc
mov
lods
xor
adc
inc
jecxz
pop
insl
aad
dec
ret
mov
dec
push
xor
xchg
test
lods
pop
adc
clc
mov
push
add
push
or
inc
fs
xor
rcll
jo
xor
or
stos
pop
pcmpeqw
ret
dec
leave
in
cli
sahf
enter
loope
sahf
jge
pop
add
cmove
inc
and
or
pop
sti
rorb
add
inc
add
add
call
sti
fldenv
call
popf
rcrl
pop
or
jnp
lods
sbb
fsubrl
sub
nop
add
sub
jb
dec
lods
jecxz
mov
xchg
sub
jl
inc
fiaddl
pop
ret
mov
fmul
add
mov
push
ret
cmc
add
test
dec
fdivr
xor
dec
push
add
adc
jle
movsb
lea
jne
add
and
mov
aam
inc
cwtl
dec
pushf
sbb
xor
ss
popf
xchg
fistpl
mov
xchg
pop
repnz
or
or
enter
mov
xchg
lahf
orb
shlb
inc
insl
inc
or
push
push
mov
push
movsl
and
clc
lds
pop
jb
mov
mov
outsb
jno
in
insl
sub
mov
add
dec
jecxz
rclb
fs
add
stc
mov
movl
int3
add
and
pop
test
push
or
adc
sbb
adc
je
ficoms
fwait
cli
cmp
mov
enter
add
scas
add
mov
or
cmp
outsl
mov
mov
mov
sub
sub
mov
sbb
mov
xor
lods
add
mov
and
xchg
xlat
mov
inc
popf
sbb
movsb
mov
mov
dec
aam
jge
mov
and
and
cmpb
movsl
movb
lock
sub
xchg
inc
mov
popa
mov
nop
mov
push
das
jl
mov
cmpl
test
mov
push
les
and
sub
in
sub
les
push
jne
ss
sub
or
enter
fwait
icebp
inc
mov
movsl
nop
imul
in
jno
push
and
push
sarl
adc
stc
lea
or
dec
cmp
xchg
pop
push
push
sub
xchg
loopne
inc
push
mov
add
push
fimuls
cmp
daa
enter
out
sahf
popa
jne
outsl
sbb
xor
xchg
push
cmp
or
or
jmp
and
insb
adc
insl
inc
or
or
pop
cs
lods
lahf
jae
hlt
push
mov
add
inc
bound
mov
inc
inc
pop
sti
or
mov
or
jns
mov
pop
adc
dec
or
adc
jb
inc
sub
rorb
and
adcb
mov
xor
mov
nop
cmpsl
xor
jno
pop
inc
cmc
repnz
push
mov
adc
mov
add
ss
and
aaa
xchg
into
cmp
xchg
jl
ret
inc
das
clc
jmp
cmp
push
cmpl
lcall
lret
jbe
shl
pop
pop
shll
push
in
popa
lret
xor
rcrl
jmp
xor
jmp
outsb
jne
xlat
sbb
fadds
add
xchg
es
js
mov
adc
in
xor
pop
test
inc
outsb
jns
add
mov
push
xor
mov
and
int3
in
jno
shlb
pop
jl
or
in
push
mov
sub
imul
int3
sahf
in
in
or
mov
test
pop
hlt
dec
cmp
ja
lcall
push
ret
dec
xor
andl
in
fisubrl
lret
jmp
push
sub
loopne
inc
and
mov
push
jmp
or
or
adc
hlt
inc
stos
sub
repnz
lea
add
ret
ficoml
testb
pop
es
jne
and
lods
xor
aas
sub
mov
outsl
movsb
lcall
push
mov
inc
pop
scas
dec
lods
imul
sub
loope
pop
mov
xchg
or
mov
push
sarl
loope
pop
or
sub
mov
inc
and
stos
and
int3
adc
cmp
fwait
pushf
popa
fdivrl
xor
pushf
add
and
mov
mov
mov
inc
insb
pop
daa
dec
dec
xor
adc
xor
add
les
push
pop
loope
mov
push
lret
sbb
or
xchg
jg
push
sti
cmp
or
xchg
mov
jbe
mov
cmpsb
push
iret
sbb
cmp
mov
jnp
fistl
sub
call
jmp
in
rolb
add
outsl
xchg
dec
inc
mov
cmp
jle
outsl
int3
push
sbb
frstor
xlat
aas
push
mov
add
imul
push
jp
fdivrs
test
rcll
or
das
adc
data16
decb
fnsave
fs
stos
iret
fmuls
pop
dec
sahf
mov
jne
push
and
lock
push
pop
test
pop
and
mov
cmp
cmp
jne
outsb
adc
lock
pop
lcall
cmc
ljmp
pop
ret
cmc
test
inc
pop
add
pop
mov
adc
mov
sbb
mov
flds
cmp
fwait
fs
dec
mov
cs
dec
xor
and
xor
sbb
mov
cmp
ret
mov
out
insb
and
xor
iret
inc
mov
mov
nop
fdivr
cli
mov
int
imul
test
pop
cmpsl
jne
or
add
sbb
pop
gs
add
pop
or
dec
mov
sub
ret
lock
mov
or
js
lea
imul
lds
in
lahf
or
xor
add
adc
test
dec
mov
or
out
xor
dec
fwait
lcall
sbb
lock
xchg
pop
lcall
xor
pop
jg
cmp
or
lea
and
mov
cmp
xchg
mov
and
fs
push
jecxz
mov
or
add
adc
cmp
or
ret
popa
mov
cmp
push
dec
popf
dec
jmp
xor
push
ja
jne
in
outsb
add
jnp
or
cmp
xchg
and
fistl
cmp
and
mov
add
mov
xlat
or
mov
orb
or
adc
jg
and
cmp
popf
or
sub
xor
lea
and
push
mov
xchg
add
divb
pop
inc
arpl
push
cmp
pop
je
dec
inc
hlt
push
dec
dec
sub
jbe
push
popa
ljmp
adc
push
je
in
cmp
jne
push
and
data16
imul
mov
jecxz
adc
adc
cs
cwtl
xchg
inc
in
xchg
or
xchg
fnstenv
adc
sub
jmp
or
enter
fnstenv
sub
mov
jb
push
cwtl
inc
fdivp
push
pusha
push
shlb
jne
hlt
push
and
mov
pop
lret
idiv
push
sbb
xchg
mov
mov
pop
or
mov
or
inc
xor
in
inc
push
add
push
xor
leave
mov
cmp
orl
cwtl
jle
mov
fldlg2
pusha
add
pop
mov
inc
mov
sub
sbb
cs
adc
dec
aad
mov
bound
scas
out
lods
dec
es
mov
jae
gs
ret
je
out
xchg
insb
imul
inc
orl
or
shll
or
fwait
aam
push
push
and
sti
movsb
push
call
imul
ja
cs
lods
add
sti
add
popf
ret
fidivs
pop
and
hlt
sub
ret
dec
xchg
push
mov
xchg
das
insl
loop
pop
pushf
add
rolb
sbb
sbb
fstl
mov
arpl
pop
repnz
std
ds
xor
and
ret
push
rol
pusha
cmpsb
cmp
js
add
cmp
lahf
ret
fs
cmp
and
das
inc
rorb
xchg
ss
pop
mov
lds
aam
mov
fcmovnb
jmp
mov
push
shll
sti
lea
jg
fsubr
or
mov
push
mov
adc
call
add
enter
cmp
mov
lret
adc
test
mov
into
pusha
xorb
ret
inc
xchg
dec
add
cmc
rdtsc
sbb
inc
test
xor
je
loop
xchg
pop
sbb
xchg
pop
fcomps
fsubr
or
add
jae
xlat
imul
sbb
sbb
rolb
shlb
mov
push
insb
sbb
mov
sub
xchg
andl
mov
mov
xchg
out
in
inc
add
xor
dec
test
add
and
inc
adc
or
xor
lods
dec
shlb
push
arpl
cwtl
xchg
ss
dec
or
out
pop
loopne
dec
leave
es
pop
mov
pop
add
mov
sub
loop
pop
or
jmp
or
decl
dec
mov
sub
xor
mov
std
and
sbb
pusha
push
movsl
dec
popa
icebp
and
call
idivl
imul
jnp
sub
sbbl
jns
mov
ficomps
add
sbb
ret
mov
mov
fildll
es
jo
and
and
cmp
push
cmp
sub
dec
pushf
outsb
pop
jmp
repnz
test
push
push
sbb
add
cmp
out
xor
ret
add
cltd
jp
das
xlat
pushf
std
and
and
rorl
mov
sub
pusha
adc
adc
sub
cmp
jne
xorl
mov
cmpsl
inc
cmp
test
add
inc
or
cmp
lea
xor
sub
stc
add
dec
sub
cvtdq2ps
loopne
or
sbb
sub
inc
mov
mov
push
dec
pop
xchg
in
mov
or
adc
sub
jo
fst
push
cmp
or
aam
add
xchg
jno
and
xchg
pusha
mov
aam
sbb
in
dec
and
movaps
push
and
add
int3
and
scas
push
aaa
in
cs
adc
ret
adc
xor
lock
pop
sub
xchg
imulb
pop
sbb
test
pop
mov
es
je
xchg
or
test
pop
cmpsb
jo
jl
add
enter
nop
or
sbb
sti
outsb
loopne
sbb
lea
aas
popl
es
out
push
ja
mov
fisubs
cmc
sbb
orl
and
inc
in
cmp
mov
dec
bound
iret
sbb
dec
and
jl
pop
xchg
add
orl
pop
repz
adc
mov
pop
fsubl
test
inc
and
or
sub
push
sahf
nopl
lods
dec
inc
inc
xor
pop
cmpb
sbb
adc
inc
fs
or
wrmsr
mov
add
test
out
cmpsb
dec
cld
or
jmp
pop
pop
mov
pop
lret
add
rorl
jmp
or
adc
sbb
adc
pop
or
fsubrs
insb
aad
pusha
xchg
inc
add
lret
dec
mov
shll
fcmovbe
inc
push
pop
push
push
add
in
hlt
xor
jno
cmpsl
jge
mov
rorb
push
test
jbe
out
ljmpw
cmp
push
mov
sub
lea
add
add
pop
rclb
push
inc
enter
xor
cmp
dec
add
inc
rorb
cmpb
arpl
lods
and
leave
mov
xchg
loopne
xchg
or
xor
outsl
or
shlb
lret
cmp
or
mov
and
xchg
shrl
movsl
addr16
sbb
jae
nop
sbb
add
call
test
jle
pop
jmp
lea
les
mov
mov
sbb
xlat
jne
xor
inc
cltd
les
xchg
ret
pop
roll
fmuls
and
imul
int
add
xchg
pushf
mov
std
inc
sbb
cmp
adc
xchg
adcl
pop
outsb
sub
sub
lds
faddp
movsb
fsubs
in
sarb
mov
mov
push
sub
arpl
mov
dec
test
dec
xchg
iret
add
lock
jl
les
xchg
adc
dec
xchg
sbb
jno
sbb
cmp
push
sbbb
sub
cmpsl
lods
and
or
xchg
insl
mov
subb
dec
aad
dec
das
jl
xchg
xchg
mov
adc
inc
sub
clc
and
loop
sub
movsl
je
sbb
or
and
sub
jno
bound
clc
out
adc
sbb
mov
or
aam
es
sub
popa
scas
cwtl
pop
mov
mov
push
xlat
pop
xor
test
out
xchg
inc
or
xor
fldcw
or
sbb
das
push
sar
dec
pop
cmp
push
insb
push
out
ficomps
cmp
sbb
mov
pop
push
ljmp
adc
jae,pt
fwait
pop
pop
and
and
mov
push
and
inc
cmp
jne
jns
dec
mov
add
jne
xchg
test
mov
mov
inc
rcr
inc
xchg
pop
jnp
pushf
pop
fisubrl
pop
idivb
add
nop
ja
and
jae
sub
or
mov
out
add
scas
lods
in
es
mov
inc
mov
adc
or
inc
sub
sbb
xor
out
jle
lea
mov
inc
mov
jb
mov
push
out
loopne
jo
test
adc
orl
adc
into
out
pop
adc
mov
or
test
dec
repz
cmp
adc
enter
jne
dec
sbb
out
push
xchg
imul
mov
jbe
cmp
icebp
dec
mov
test
insl
cmp
shlb
add
push
or
adc
add
repnz
shll
fidivrl
add
leave
aam
sbb
orl
ret
outsb
push
mov
test
adc
dec
add
imul
add
inc
inc
add
push
inc
mov
mov
add
movsl
mov
or
lods
or
lea
push
fdiv
aad
and
inc
or
push
push
cmp
mov
pop
push
nop
dec
aaa
xchg
add
addr16
adc
mov
mov
iret
jle
push
fnstcw
hlt
fdiv
push
sbb
jp
dec
xchg
arpl
imul
sbb
in
and
inc
mov
add
inc
fbstp
pusha
cmpl
cmp
jg
xchg
pop
dec
jo,pn
popa
xchg
lea
adc
pushf
xchg
sar
xchg
sub
into
mov
daa
or
mov
rcrl
fsub
in
ljmp
sbb
and
je
popa
mov
lahf
pop
imul
push
cmp
or
mov
sbb
mov
sbb
adc
test
or
mov
data16
je
dec
dec
imul
in
adc
aam
inc
inc
insb
inc
test
leave
adc
adc
das
sub
and
push
orb
or
lock
pop
es
dec
fdivr
call
jo
xor
xor
aam
fwait
mov
pop
nop
data16
sub
jg
sbb
push
pop
sbb
inc
repz
adc
sbb
sub
stos
lret
xor
out
sbb
mov
or
add
xor
es
mov
and
ss
fisubs
sbb
or
push
movb
sub
add
adc
mov
lea
je
lret
mov
cmp
mov
inc
or
dec
dec
test
sub
xchg
inc
adc
outsb
or
jg
dec
jge
cmp
jg
adc
je
push
fimuls
push
pop
push
out
add
lock
sub
pop
lock
push
inc
add
mov
xchg
aas
and
les
fwait
push
cmp
xchg
xor
mov
add
outsl
adc
fwait
aaa
inc
xlat
inc
xchg
push
inc
xchg
or
test
in
add
pop
ja
add
push
lods
add
fwait
js
and
pop
push
in
aas
adc
inc
mov
or
pop
or
lods
mov
add
dec
enter
adc
lahf
or
fsubrs
mov
add
cs
xor
fiaddl
or
pop
or
sbb
mov
lods
shrl
lock
dec
or
dec
js
stc
cmc
pushf
add
pop
lock
push
popf
inc
mov
ret
dec
add
mov
icebp
shr
xchg
adc
pop
jge
nop
fistpl
shll
rol
xchg
adc
add
or
mov
clc
cmpl
push
xchg
imul
push
xchg
inc
cmp
sub
cmp
adc
fcmovnu
int
sub
push
and
fimull
or
shrb
imul
movsb
jns
dec
add
dec
or
add
adc
cmp
loopne
sbb
sub
ja
mov
pusha
sbb
das
and
inc
inc
loopne
fnstcw
mov
sbb
adc
and
loop
add
add
mov
test
aam
fdiv
cmp
add
int3
adc
shl
sub
js
cltd
aad
int3
inc
add
jno
test
xchg
dec
push
adc
xchg
jne
xchg
mov
add
or
mov
xchg
js
pop
in
mov
jge
mov
inc
addr16
push
sub
stos
fwait
add
jne
pop
cld
add
out
fdivs
mov
push
cwtl
mov
xor
mov
add
push
das
xchg
fisttpll
inc
sub
sub
jae
lods
adc
mov
pop
pushf
jmp
sti
and
mov
adc
leave
nop
adc
dec
mov
mov
xchg
scas
mov
sbb
in
cmp
jne
push
adc
xor
jecxz
jnp,pt
ds
add
pop
jb
add
jmp
mov
push
push
add
into
push
push
ret
fs
in
cltd
fldl
cwtl
dec
in
aam
inc
adc
add
sti
xchg
movsl
sub
jae
pop
out
mov
lods
and
push
ret
adc
mov
and
or
add
push
and
sub
jbe
shr
repnz
xchg
test
hlt
ss
clc
inc
add
insb
and
addr16
sub
adcb
nop
mov
test
mov
or
notb
mov
xchg
aam
arpl
icebp
xor
xor
add
mov
fnstsw
data16
and
movsb
and
mov
pop
aaa
pop
xor
je
sub
and
inc
push
mov
push
push
push
jo
cmp
lods
and
loopne
cmp
pop
in
dec
je
push
inc
adc
dec
enter
lock
ret
inc
aas
loopne
inc
ret
push
sarb
adc
xchg
xchg
movb
lds
add
xchg
or
test
adcb
fmull
or
inc
sub
je
sbb
mov
mov
push
test
xchg
sbb
lcall
inc
sub
ja
aad
mov
es
jbe
loope
sub
hlt
pop
andb
xchg
subl
imul
push
pop
dec
dec
movsl
iret
popa
pop
testl
and
insb
push
or
in
stc
out
push
add
hlt
xor
pop
lock
roll
popa
pop
out
aaa
inc
fcoms
pop
lahf
lret
push
pop
pop
addr16
movsb
movsb
jb
xor
clc
inc
scas
push
fidivs
or
xchg
ds
mov
sbb
rorl
ds
cmp
pusha
fadds
loope
in
out
and
mov
mov
inc
inc
adc
in
stos
pop
pop
mov
lret
xchg
jmp
jnp
ret
sub
das
or
inc
ret
movsl
cmp
add
adc
loop
sub
movsl
inc
das
adc
in
mov
aam
push
push
push
sub
xchg
adc
mov
outsb
adc
cmpsl
dec
push
jo
imul
dec
inc
xor
inc
dec
test
dec
mov
sbb
and
adc
inc
mov
bound
inc
mov
rcrb
dec
and
xchg
nop
sbb
addl
or
test
stos
insl
adc
dec
mov
mov
add
imul
popa
dec
dec
in
mov
and
sub
bound
or
add
adc
movsl
adc
pushf
lcall
arpl
sub
mov
rolb
mov
popa
push
es
dec
mov
lods
mov
fwait
test
out
daa
push
mov
cld
cld
cld
test
mov
or
or
test
ss
mov
shrl
stos
pop
cld
ret
add
mov
scas
push
adc
lods
popf
dec
inc
repnz
adc
test
adc
int3
lods
mov
mov
push
or
and
jecxz
jmp
or
xor
out
cmp
fcoml
scas
loope
or
in
lock
add
cmp
jmp
cmc
push
and
movsl
pusha
inc
je
addr16
ss
jbe
ds
and
add
nop
inc
cs
sub
push
rorb
mov
rcrl
int
jno
xlat
fwait
or
addl
repz
lods
mov
sbbb
jg
add
push
xor
add
ja
aad
loop
mov
fs
mov
roll
lods
pop
xor
out
add
jbe
sbb
mov
pushf
mov
xchg
add
sbb
push
inc
lock
sbb
sbbb
in
add
call
ljmp
sarb
dec
test
ret
mov
or
out
sub
sub
push
repnz
jl
fists
adc
mov
dec
lock
or
mov
cld
cmc
mov
dec
push
xorb
lock
in
sahf
sbb
push
jl
xor
xor
or
enter
dec
popa
leave
roll
pop
lock
dec
xchg
jmp
xchg
in
xchg
leave
add
lods
out
loopne
sub
shrb
jmp
aas
mov
pusha
jnp
adc
imul
add
popa
rolb
mov
jb
es
pop
daa
mov
addb
inc
add
or
rorl
je
popw
lret
sub
or
and
xchg
in
loope
add
cmp
or
xchg
out
inc
mov
ret
dec
shl
push
add
inc
xor
roll
add
mov
inc
dec
jmp
dec
neg
sbb
roll
cmpb
xor
adc
pop
andl
arpl
xchg
dec
es
idivb
nop
jmp
cmpsl
inc
push
adc
inc
into
sbb
es
push
mov
js
ret
jae
test
sub
add
xor
cmp
cmp
ja
dec
xlat
push
cmpsl
sbb
mov
pop
sub
or
push
rclb
and
popa
out
xchg
pop
sbb
aas
imul
in
shll
and
jmp
push
adc
pusha
pop
orl
or
ret
push
call
das
jmp
add
adc
bound
ret
cwtl
mov
push
mov
shll
aaa
add
es
inc
loopne
shrl
cmp
mov
lcall
lods
pop
mov
fmull
mov
and
pop
push
adc
das
les
mov
mov
movsl
inc
in
jne
nop
xor
or
jmp
sti
adc
cs
xor
lret
mov
inc
add
je
movsl
jg
test
cmpl
pop
scas
cmp
and
xchg
sub
or
cmp
mov
es
dec
lahf
incb
or
ret
aam
repnz
clc
mov
movb
lock
out
lods
and
jb
in
mov
push
movsl
sub
mov
adc
push
mov
stos
repz
xchg
dec
pop
xor
add
inc
add
and
xchg
and
push
ss
jno
jnp
cmpl
dec
dec
push
test
out
decb
je
jl
das
out
add
ret
enter
dec
or
mov
out
adc
mov
mov
leave
mov
cld
mov
bound
jb
xorl
add
dec
int3
add
dec
dec
and
dec
xchg
test
dec
lcall
and
ret
cmp
scas
jne
pop
adc
insb
pop
mov
repz
inc
adc
je
rcr
loopne
loopne
lret
adc
aas
xor
pop
inc
and
arpl
cmp
fbstp
add
test
bound
aaa
jbe
pop
pop
or
rolb
and
xor
aas
or
popl
nop
cmp
mov
inc
or
sub
pop
or
sarb
and
mov
sbb
adc
pop
lcall
cmp
movsb
sti
mov
data16
incl
and
ja
les
or
xor
orb
adc
pop
push
xor
push
or
lret
into
xchg
add
push
sub
push
cmp
push
mov
or
pop
push
push
add
cmp
pop
repnz
mov
or
out
test
les
sbb
loope
faddp
jae
movsb
mov
mov
rolb
cmp
push
mov
push
add
pop
xor
sbb
and
enter
adc
stos
and
imul
add
sti
inc
addl
xor
add
xor
inc
outsl
push
pop
jecxz
pop
xor
in
lods
dec
daa
adc
push
pop
cli
mov
call
mov
mov
cmp
lahf
mov
sbb
loope
ds
cwtl
add
or
out
or
test
hlt
push
fistps
into
add
sbbb
rolb
out
sti
loopne
adc
hlt
dec
cmp
punpckhwd
inc
sub
imul
aaa
push
pop
jo
xchg
xchg
fmull
aaa
cmpl
aaa
dec
or
jae
jge
push
pop
xlat
inc
in
cmp
hlt
dec
jo
and
nop
push
adc
sub
mov
add
aam
rolb
in
cs
ror
xchg
nop
and
call
adc
mov
pop
push
in
aaa
push
add
in
inc
fs
pop
arpl
nop
mov
scas
stc
xor
rcrb
push
dec
pop
or
hlt
subb
pop
movsl
test
sub
dec
insb
xchg
push
and
arpl
adc
outsl
cli
jmp
mov
stc
push
cs
xor
loopne
pop
insl
xor
or
xorb
push
lods
or
sbb
mov
dec
dec
adc
testb
test
or
fadd
push
push
mov
mov
sbb
mov
add
sbb
sbb
pusha
xchg
mov
sbb
and
pop
bound
cmc
je
cmpb
mov
idivb
push
pop
cmpl
lds
cmp
and
pop
out
add
mov
mov
lds
gs
cmp
inc
pop
subb
sub
mov
adc
push
int
mov
jnp
xor
add
cmp
or
sub
mov
sub
push
aam
mov
arpl
push
outsl
sub
sub
je
nop
adc
je
enter
divl
or
nop
cltd
popa
inc
and
and
in
arpl
and
and
clc
mov
jo
mov
and
loopne
sbb
mov
or
mov
ljmp
dec
les
add
inc
je
hlt
or
addl
mov
cmp
sbbb
pop
or
cld
inc
sbb
or
hlt
ds
adc
into
daa
dec
icebp
push
or
inc
and
ja
cmp
aaa
pop
push
les
je
adc
push
mov
push
test
mov
pop
je
adc
popa
pop
xchg
clc
mov
pop
imul
fisttps
movsb
ret
nop
sub
sub
cmp
ja
outsb
outsl
push
enter
or
popa
mov
cmpsl
jns
popa
or
in
sti
dec
sbb
jns
call
cmp
cwtl
xor
ljmp
hlt
mov
xor
mov
inc
loop
inc
movb
pop
inc
popa
add
add
insb
addr16
shrl
test
xor
and
sbb
and
shll
sbb
pop
call
dec
fnstsw
outsb
cli
add
sbb
mov
lods
add
inc
push
mov
aas
mov
push
popf
fstpt
pop
mov
data16
mov
sbb
call
ret
imul
daa
mov
add
mov
mov
push
daa
or
pop
mov
add
mov
gs
sub
inc
pop
inc
push
add
or
rcl
xchg
rcll
xchg
das
scas
ja
les
xchg
xor
or
fstps
mov
inc
jmp
fmuls
rcpps
pop
mov
push
rclb
add
ss
lods
add
bound
les
rcr
fs
and
mov
pop
and
sbb
int
icebp
mov
arpl
fisubs
fs
fidivrl
and
out
dec
fdivl
and
push
mov
sub
xor
outsb
cmp
and
fwait
add
aam
fimull
and
mov
imull
dec
jo
mov
mov
in
lcall
and
pop
in
cmp
jbe
ret
jg
cs
and
in
mov
add
adc
or
rolb
jmp
ret
add
dec
and
dec
jg
inc
cmp
out
xor
mov
cmp
jmp
test
xchg
xor
adc
xor
adc
cmp
je
fucomi
xorb
stc
pop
mov
sub
scas
dec
sti
or
push
fisttpll
add
pop
pop
daa
fmuls
cmpsl
mov
pop
mov
ror
adc
icebp
bndldx
addb
sti
push
add
lret
fsubs
pop
loop
or
xchg
inc
gs
lea
mov
popf
sub
rcr
dec
andb
das
push
push
add
push
add
inc
push
pop
add
stos
xor
sbb
jp
add
cltd
fsubl
dec
mov
jo
adcb
xor
xor
mov
jg
lods
mov
je
mov
je
ds
jmp
leave
fistl
pop
mov
mov
ret
push
jmp
mov
pcmpgtb
mov
mov
inc
loop
add
sbb
sarb
add
sbb
inc
and
lock
jle
dec
push
lret
iret
sbb
jmp
add
sbb
adc
mov
add
push
adc
sbb
xchg
xchg
push
aas
xchg
ret
in
add
mov
and
jne
add
repnz
outsb
std
and
dec
insb
addl
inc
adc
jo
jne
cmp
daa
loope
sub
dec
dec
pop
cmovl
pop
sub
mov
nop
mov
sub
xchg
or
mov
mov
xchg
es
and
inc
pusha
sub
stos
and
or
rorb
mov
inc
adc
ret
fdivs
or
test
push
and
pop
ret
and
mov
mov
adc
ljmp
mov
mov
out
lea
xor
or
sub
push
loope,pn
dec
pop
or
icebp
adc
push
and
xor
sub
mov
or
in
add
dec
sbb
push
jmp
pop
lahf
adc
mov
dec
jmp
sbb
test
scas
movsl
xor
mov
int
outsl
mov
into
xchg
pusha
jne
xchg
and
dec
push
or
stos
xchg
test
jnp
push
movsl
adc
xchg
fs
pop
push
ficomps
add
test
inc
sbb
and
popa
mov
aam
dec
adc
inc
cmpsb
iret
icebp
adc
push
add
popa
xor
loopne
fadds
add
shll
lret
jne
add
inc
add
and
xchg
xlat
push
inc
jge
sahf
insl
and
cmp
xchg
addb
sub
add
cmp
lcall
lods
adc
enter
and
jbe
sub
dec
jo
and
cmp
cmp
mov
pop
loopne
les
mov
cmp
test
mov
daa
jge
xchg
rcrb
fnsave
pop
jmp
sub
and
aam
loop
xor
cmp
push
insb
push
sub
sbb
rcll
cmpsb
mov
mulb
mov
or
testb
cmp
imul
jmp
adc
cvtpi2ps
mov
jmp
sbb
cmp
inc
lock
cmp
push
push
cmpsb
lret
inc
xor
cwtl
xchg
jbe
jge
push
xor
adc
scas
adc
xor
daa
add
add
or
lcall
mov
lret
push
cwtl
adc
jge
adc
pop
fildl
inc
call
or
addl
mov
callw
cmc
xor
adc
daa
ficompl
add
sbb
xor
inc
fadd
pop
or
arpl
arpl
pushf
xlat
and
popa
xlat
xchg
adc
test
or
dec
jl
add
gs
push
mov
or
in
push
cmc
andb
sbb
sbb
jne
outsb
adc
add
push
inc
push
pop
jae
shll
pop
rclb
shufps
adc
or
jno
or
adc
fdivrl
movb
jne
out
fwait
dec
leave
add
push
ja
cmpsb
sub
mov
push
les
mov
pop
mov
popf
cli
add
imul
adc
push
push
sbb
mov
dec
cmp
jge
sbb
xor
adc
mov
lds
add
mov
call
push
aas
loop
or
adc
fwait
adcb
rorl
inc
xchg
fidivrl
loopne
xchg
push
xchg
xchg
les
push
scas
pushf
loopne
or
dec
pop
pusha
out
insb
das
addl
adc
lock
sarb
push
adc
ja
cmp
xchg
add
add
dec
adc
pop
dec
pop
in
add
out
out
dec
nop
or
in
jno
adc
xor
or
loope
pop
cmp
ds
bound
pop
xor
cmp
mov
cmp
rcl
pushf
subps
test
xlat
sub
or
push
mov
jnp
xor
sahf
call
pop
jp
scas
jne
stos
xchg
out
inc
cmp
push
cmp
sub
dec
outsl
das
push
fimuls
mov
jmp
and
ss
mov
mov
lock
je
out
andl
mov
xor
lcall
cmc
cmpsl
fcomps
dec
daa
je
mov
ss
test
cmp
shrb
adc
test
pop
cmp
addl
xchg
adc
add
lret
and
or
cld
pushf
lods
mov
test
inc
loop
or
push
jb
sub
out
enter
xchg
inc
inc
inc
inc
sub
or
and
adc
jae
cmp
and
movsb
xchg
sbb
mov
sbb
inc
call
or
push
testb
sub
add
xor
push
outsl
xchg
cmp
in
daa
mov
jne
rolb
psubq
lret
xor
pop
sub
adc
mov
lock
push
je
data16
pop
add
pusha
sub
nop
rorb
xor
sub
or
or
or
push
adcb
and
and
dec
rcl
je
dec
je
loop
add
push
sbbb
xchg
sbbl
pushf
test
nop
or
adc
mov
add
inc
xchg
lock
push
stc
test
or
orb
ret
and
sub
and
loop
lea
sbb
xchg
and
ret
xchg
dec
push
mov
jle
xchg
mov
sub
mov
xchg
xor
inc
jo
jbe
les
xchg
sbb
repnz
dec
push
or
adc
mov
loope
lret
xor
or
fbstp
fs
stos
mov
jmp
js
mov
xor
add
popf
or
push
js
data16
mov
xor
xchg
adc
incl
inc
adc
add
iret
and
sub
cmp
add
or
data16
lcall
lahf
mov
inc
jmp
sarb
sbb
dec
sbb
inc
mov
adc
iret
add
in
test
inc
jnp
dec
add
jg
sub
mov
add
lock
in
js
add
rol
sbb
mov
push
inc
cmp
clc
lock
xor
or
in
or
sub
or
push
cmp
fwait
in
pop
loopne
rcr
int3
cmp
repz
aam
push
out
cmp
in
lods
sub
fsubs
scas
das
add
mov
pop
mov
mov
sbb
fsts
push
cmp
sbb
mov
push
push
cpuid
mov
xor
or
jmp
cmp
mov
or
mov
push
rcr
jle
outsl
xchg
ja
mov
inc
mov
inc
add
sub
mov
add
inc
sbb
nop
xchg
or
mov
movsb
cmp
cmp
push
lds
mov
addr16
or
mov
adc
test
dec
lock
jmp
mov
lcall
adc
adc
scas
sbb
testl
cmpsb
clc
jns
or
jle
out
push
and
ret
gs
jle
adc
dec
rcl
fistps
int3
add
fdivp
mov
clc
mov
mov
jbe
fcomp
mov
int3
iret
repnz
add
mov
mov
leave
leave
repz
or
add
push
xchg
pop
jmp
shrb
pop
or
scas
add
mov
mov
cmp
and
je
xchg
jbe
in
fmul
or
dec
imul
cmp
clc
sbb
push
sbb
aam
aam
les
mov
or
jb
cmp
repz
and
add
add
pop
xchg
adc
xor
add
and
rcrl
popl
andl
icebp
movsl
mov
or
push
je
pusha
xor
lock
dec
dec
cmpsl
add
popa
mov
test
jl
xor
dec
addr16
rol
add
hlt
stos
sub
jne
loop
add
scas
and
mov
fdivl
movb
int3
add
mov
stos
xchg
repnz
xchg
xlat
test
sub
adc
and
dec
push
enter
icebp
and
push
mov
jge
stc
not
es
rclb
mov
int3
cli
test
push
pop
add
repnz
cmpl
push
inc
add
fdivrs
adc
mov
dec
add
jg
decl
aam
dec
int3
sub
setg
cmp
jne
add
test
cmpsl
sbb
jle
loopne
sahf
gs
dec
fcom
hlt
add
sub
mov
and
xchg
dec
sbb
push
notl
adc
jo
push
mov
mov
testl
test
and
mov
and
add
push
adc
imul
add
inc
or
or
dec
call
in
lods
shll
aaa
push
jbe
fwait
xor
sub
sbb
lods
inc
xchg
imul
aam
xor
sbb
adcb
cmp
daa
and
cmpsb
jnp
add
leave
hlt
jne
lea
mov
xchg
sbb
add
arpl
in
inc
rcrb
xchg
mov
rorb
jmp
and
divl
cmp
pop
or
repnz
add
adc
adc
loopne
mov
xlat
pop
int3
rcll
das
nop
sub
out
mov
xor
lcall
cmpl
mov
das
xchg
add
jne
or
test
adc
hlt
and
imul
and
call
inc
xchg
ss
xchg
mov
or
or
push
jns
add
stc
hlt
mov
lcall
test
mov
inc
aam
bound
js
imul
mov
enter
lret
aam
pop
stos
inc
movsb
lret
sbb
adc
xchg
cld
and
in
mov
cs
pmullw
ss
int3
sbb
mov
or
call
jns
sbb
xor
jns
pop
xor
add
mov
and
test
ljmp
sub
fdivrs
sbb
and
lcall
sub
pop
sub
jno
inc
push
dec
js
mov
mov
push
icebp
insb
pop
and
pop
sbb
push
lods
jnp
and
cmp
inc
and
les
xor
mov
push
aas
cmp
jmp
orl
add
adc
and
cmp
aas
add
add
movsb
movsl
stc
and
mov
xor
imul
mov
pop
fisttps
dec
push
insb
pop
pop
in
mov
xchg
test
inc
adc
sbb
jbe
cmp
imul
xor
jmp
sbb
mov
or
dec
in
inc
addr16
cmp
out
jae
pop
push
cmpl
push
push
inc
popf
or
ja
xchg
mov
push
sub
pusha
mov
and
mov
add
repnz
je
jl
xchg
add
jge
fldenv
xor
add
jg
add
insl
and
sub
xchg
inc
testb
fadd
lret
xchg
je
cld
sti
and
mov
cmp
ja
add
and
shll
sub
mov
lcall
mov
lea
les
sub
insb
in
adcl
fs
shr
jnp
add
je
jne
inc
fsubrs
jge
or
orb
pop
es
xchg
out
add
or
mov
add
enter
xchg
or
movsl
push
pusha
nop
scas
mov
arpl
in
and
mov
in
in
call
nop
inc
adcb
dec
adc
insl
pop
or
loopne
adc
imul
fsub
scas
in
push
int3
ret
adc
inc
add
or
push
sbb
xor
dec
movsl
push
subl
and
daa
push
lods
loope
lret
insl
rcrb
int3
push
aam
das
int3
jmp
xchg
inc
pusha
push
sub
fdivs
in
mov
or
nop
fmulp
setl
jmp
inc
jmp
and
rcr
push
push
jp
mov
sbb
or
xchg
xor
loopne
xchg
xor
push
mov
in
inc
xchg
cmpb
lock
cmpw
jne
push
add
mov
lcall
sarb
inc
push
inc
test
leave
adc
cwtl
je
add
mov
mov
sbb
xor
xchg
adc
enter
repnz
test
daa
movsl
jae
jno
es
loopne
je
dec
sub
xchg
dec
fcomps
imul
cmc
sub
add
inc
xor
add
mov
adc
les
sbb
fisubrl
jmp
or
cmp
aam
aam
mov
push
int
add
mov
shlb
adc
sbb
in
out
inc
dec
jmp
in
cmpl
lea
inc
sbb
push
cs
in
mov
and
pop
push
les
out
es
jmp
or
cmp
jne
roll
movsb
fadds
nop
pop
push
imul
pop
nop
cmp
jle
addl
nop
fwait
adc
out
and
add
or
add
add
add
adc
mov
mov
xor
lds
lret
dec
pop
in
inc
rorl
xchg
or
xchg
add
fadds
sub
inc
dec
into
jae
add
lds
sub
or
inc
push
in
and
or
sub
jae
sub
pop
insl
in
dec
adc
xor
cmpsb
inc
pop
mov
dec
adc
push
or
movsl
or
lods
mov
or
arpl
les
or
arpl
movsl
test
pop
inc
mov
inc
movsl
adc
lds
add
pushf
mov
jg
inc
xlat
sbb
lods
roll
repnz
sti
emms
call
bt
jae
mov
not
and
adc
addl
inc
cmp
pop
lret
dec
mov
sub
inc
jmp
cwtl
enter
arpl
and
pop
stos
mov
push
or
dec
xor
push
dec
xor
or
or
jne
mov
or
add
fcoml
pop
clc
imul
ret
jg
test
dec
mov
daa
and
ret
testl
mov
add
xchg
lods
adcb
sbb
inc
pushf
and
push
mov
lret
fists
inc
dec
scas
add
and
test
lods
dec
sarl
adc
nop
jo
call
inc
in
outsb
sbb
andb
and
pop
add
mov
punpckhbw
jno
pop
cs
xor
or
xor
or
inc
dec
mov
sub
jle
shll
xor
push
and
sub
jp
push
leave
push
out
sub
iret
or
adcl
jg
jmp
push
cmp
mov
adc
xchg
dec
adc
out
lahf
add
pushf
pushf
addb
dec
and
mov
out
shll
pop
xor
ficompl
je
or
ljmp
roll
inc
xor
lods
iret
scas
mov
ret
daa
and
mov
or
gs
sar
lods
shll
mov
push
jb
mov
cmp
jne
jo
or
push
add
cmpl
cmp
movsb
xor
adc
cmp
push
out
pop
cmpsb
pusha
mov
loopne
subl
hlt
add
frstpm(287
sub
push
sbb
rol
sub
and
jge
test
adc
push
mov
or
adc
addl
xchg
shlb
mov
push
fwait
jnp
jge
xlat
pop
jbe
dec
cmp
lods
cmp
add
cmpl
data16
sub
add
mov
jbe
femms
or
ss
cmp
repz
inc
adc
aaa
sbb
sbb
js
les
add
sti
adc
mov
repnz
fwait
ret
inc
clc
clc
inc
dec
sahf
xchg
iret
call
add
sub
mov
nop
dec
repnz
arpl
movsb
adc
js
xor
adc
or
mov
shlb
pop
loope
arpl
ret
mov
loope
pushf
jns
mov
sbb
jge
sbb
and
mov
push
dec
push
aam
outsl
xor
or
inc
push
sbb
sub
cmp
jae
dec
xchg
inc
push
mov
adc
cmp
inc
pop
and
jno
and
jo
jo
pop
lcall
aam
imul
add
inc
shlb
cmp
sti
push
in
adcb
push
jbe
or
setl
pop
lret
push
in
loopne
pusha
frstor
inc
add
dec
nop
xchg
in
das
and
or
dec
sbb
jecxz
adc
jo
push
fld
add
in
test
fs
xlat
popf
call
inc
sub
pop
enter
push
outsl
popf
mov
enter
add
or
outsl
test
cmp
lock
mov
adc
pushf
dec
mov
iret
pop
push
imul
dec
dec
popa
addl
and
mov
jnp
and
pop
addl
pop
or
adc
insl
imul
inc
add
prefetch
adc
cmp
in
xorl
mov
add
mov
outsl
and
fisubl
jmp
rorb
shrb
je
push
sub
mov
and
call
popa
cs
arpl
sub
arpl
jo
add
mov
bound
jg
fisubrl
das
mov
jle
test
mov
xor
sbbl
ljmp
inc
push
xlat
add
je
mov
add
xchg
adc
mov
enter
inc
sti
in
push
cmpb
mov
add
in
ud2
nop
pop
pop
cmpb
pop
sbb
xchg
popa
pusha
push
and
in
jl
xchg
gs
xor
mov
stc
dec
dec
dec
add
and
or
nop
out
cwtl
hlt
add
mov
jle
pusha
std
cmp
ja
std
mov
enter
xor
pusha
push
mov
xor
int3
lock
popa
jo
or
lods
aad
out
inc
push
cmc
and
stos
xchg
popa
lods
sbb
mov
jl
fstpl
cmp
and
mov
cwtl
push
outsb
mov
dec
or
xchg
in
sbbb
pop
or
das
add
fistpll
daa
pop
aaa
jl
xor
rcll
stc
mov
fwait
xchg
pushf
mov
jmp
insl
lods
stos
imul
out
jo
mov
cwtl
inc
push
jg
roll
aaa
jo
add
push
mov
or
imul
add
xor
nop
or
cmp
mov
faddl
call
xchg
or
xchg
pop
dec
test
or
push
sbb
push
lea
dec
add
or
lret
adc
mov
mov
sbb
inc
fs
xor
shrl
fmuls
mov
orb
xchg
push
xor
sbb
lods
push
ret
popf
out
xlat
or
loopne
pop
inc
sbb
jae
scas
xor
mov
jmp
mov
mov
adc
popa
lock
jne
push
jmp
adc
pushf
cmc
aaa
mov
dec
adc
and
outsb
insb
aaa
sub
pop
add
mov
leave
sahf
push
inc
or
push
clc
ret
and
aad
mov
mov
fidivrs
popl
sbb
aad
inc
adc
jne
cmp
inc
sbb
mov
mov
inc
jmp
pop
jmp
fld
pop
mov
nop
fcomps
clc
sbb
xor
in
or
sbb
stos
hlt
jp
popl
sbb
cli
cmpsl
ror
sbb
adc
ss
scas
push
jne
inc
inc
cmpsl
movsl
pop
call
std
inc
repz
xor
or
out
notl
sti
or
pop
add
push
adc
sub
cmp
iret
dec
pop
jo
push
mov
stos
mov
loopne
in
push
pushf
sub
jmp
adc
jmp
xlat
jecxz
jnp
cmp
push
add
jno
or
sbb
psrlw
mov
fsts
movl
addl
and
aaa
lods
sub
inc
pop
dec
and
mov
and
or
cmp
aaa
pop
dec
sti
jno
sbb
pushf
add
daa
inc
sub
or
leave
adc
pop
mov
sub
adc
fs
rorb
inc
inc
and
and
or
clc
movsl
mov
sbb
or
xchg
add
sub
pop
fs
or
leave
hlt
bound
imul
sub
sarb
push
rolb
mov
sub
jg
mov
push
lret
pop
subb
fists
fiaddl
pop
imul
xor
inc
inc
dec
pop
add
dec
xchg
outsl
loopne
repnz
insb
pop
test
bound
aaa
pushf
push
adc
mov
jns
fdivrs
pop
jae
mov
and
icebp
cltd
dec
adcb
pop
sbb
pop
or
pusha
int
adc
mov
fidivl
je
and
jp
add
adc
add
or
arpl
xor
jb
leave
je
daa
sub
fmulp
pop
xor
jo
or
dec
dec
push
push
add
sbb
add
cmp
sub
mov
lds
or
imul
xorb
add
mov
jle
push
dec
mov
cltd
push
push
push
cmp
cld
sub
xor
and
mulb
js
or
adc
cmp
xor
jo
out
daa
ret
jbe
ficomps
dec
push
and
adc
jl
daa
in
sbb
cli
push
push
pop
xor
outsb
pop
inc
or
inc
pop
cld
ret
mov
lock
pop
sbb
dec
mov
dec
or
and
mov
nop
test
mov
and
mov
cmp
or
sbb
sub
rcl
or
inc
mov
pop
or
cld
clc
lock
mov
add
mov
sbb
pop
dec
mov
scas
mov
cmp
mull
pop
and
mov
cmp
sbb
sbb
cmp
dec
jmp
cmp
and
pusha
out
test
sahf
or
loop
push
or
cmp
cmp
add
fstpl
sbb
ja
mov
pushf
or
test
fs
call
inc
adc
aas
xor
addl
rcrb
dec
rol
orl
popf
decl
testb
jg
insb
cmpsb
or
rol
pop
sarb
cwtl
or
orb
clc
and
or
mov
loopne
sbb
xchg
dec
push
divb
sbbb
or
fs
adc
inc
xchg
rclb
gs
sbb
cli
push
out
loopne
xor
pop
call
jge
mov
fmul
outsb
aam
mov
cmp
add
mov
push
inc
adc
fs
xor
movb
add
fdivrs
push
stos
or
add
mov
cli
scas
inc
lods
inc
rcl
and
lcall
into
sbb
jge
pop
cmp
lcall
lretw
or
in
out
rcr
jp
sub
ret
jb
add
leave
cmp
xor
inc
or
xacquire
mov
jo
jno
call
sahf
add
pop
dec
push
sbb
adc
jl
outsb
xchg
xor
sbb
aaa
mov
sub
les
fiaddl
jge
pop
shlb
aad
scas
imul
fcompl
and
into
inc
pop
add
aad
jnp
push
test
je
sbb
pop
push
mov
jecxz
pushf
jge
adc
sbb
sub
push
or
and
jp
out
jo
loopne
dec
mov
pop
dec
jne
adc
mov
sub
or
pop
push
push
sub
or
and
in
outsb
lahf
inc
push
add
cltd
xor
mov
hlt
xchg
or
adc
clc
push
pop
jbe
mov
cmp
or
cmpsb
xchg
ja
sti
mov
sbbb
push
push
cmp
pop
push
push
lods
sbb
das
movsl
aaa
and
mov
push
push
shlb
fbld
add
sahf
push
mov
rcrl
xchg
inc
inc
mov
inc
or
clc
xor
add
sarb
or
or
test
mov
adc
sbb
jbe
add
insb
jmp
xor
and
sbb
insl
mov
int
cmpb
pop
int3
fnsave
xlat
repz
sbb
nop
jne
les
dec
loopne
test
xchg
es
xchg
aaa
xchg
or
sbb
notl
or
push
xchg
inc
or
cmp
or
jo
aaa
pop
adc
push
mov
test
out
out
jno
arpl
js
jmp
mov
inc
sbb
xchg
loop
sub
test
das
cmp
fxch
bound
mov
adc
aaa
adc
sbb
add
es
push
inc
fs
ficoms
or
sbb
ss
or
pop
and
shrl
adc
push
arpl
mov
pop
or
sub
sbb
or
sbb
adc
jg
or
cmp
and
add
dec
dec
cltd
ja
mov
mov
cmp
sub
dec
mov
xchg
add
adc
jb
add
add
aas
loope
sahf
add
jl
or
imul
jle
ret
idivb
dec
mov
and
addr16
sbb
push
inc
add
pusha
and
nop
ret
sbb
mov
out
add
adc
dec
test
mov
je
push
fsts
add
pop
test
sub
adc
push
pop
or
popa
scas
movsb
mov
jecxz
adc
mov
dec
or
inc
aas
rorl
nop
ja
das
and
sub
xchg
es
scas
in
or
div
jmp
xchg
add
add
pop
lcall
and
inc
pusha
insl
xor
sbb
xor
xchg
inc
movsb
push
push
mov
sbb
mov
add
fidivrl
mov
inc
lods
pop
dec
test
scas
pusha
test
sarb
dec
bound
cmp
or
add
mov
rorb
cmp
push
mov
mov
or
push
daa
push
lock
leave
push
roll
popa
and
adcl
inc
subl
nop
subl
leave
hlt
outsl
pop
scas
adc
in
inc
hlt
bound
or
cmp
push
push
ds
inc
sbb
fs
sub
movsb
call
and
dec
add
mov
es
and
push
stos
out
hlt
outsl
enter
or
dec
and
cmp
xchg
pop
jmp
pop
push
sub
dec
fsubs
ja
cmpsb
lock
xlat
in
push
pusha
xorl
les
sahf
jecxz
pop
scas
pop
dec
add
or
pop
sbb
mov
jmp
sbb
xor
sar
lock
aas
adc
lock
jne
js
fiaddl
push
stos
mov
fisubrs
jp
jae
mov
inc
loopne
test
push
add
addr16
in
xchg
xor
add
out
andb
test
jnp
lea
xchg
cmpb
adc
mov
xor
xchg
cmp
das
cmp
pop
xchg
push
or
addl
mov
inc
dec
jle
js
sbb
mov
jbe
arpl
mov
inc
mov
dec
pop
jge
out
fstpt
jle
pop
loopne
vmread
push
add
mov
dec
xchg
sbb
cmpb
in
fdivs
adc
or
cmp
and
mov
and
in
enter
lahf
fisttps
sbbb
jnp
shll
enter
pusha
mov
pop
rclb
inc
and
sbb
push
js
add
adc
ret
mov
cmp
sbb
add
enter
leave
xor
fcoml
sub
xor
data16
cmp
add
inc
pop
nop
mov
sbb
dec
inc
add
mov
enter
inc
leave
nop
and
lret
repz
push
pusha
fildll
imul
or
dec
and
andl
xchg
sub
add
xchg
or
xor
mov
sti
and
or
nop
push
push
clc
pop
call
push
add
mov
pop
loopne
or
xchg
xor
out
sub
add
fisubs
or
and
push
adc
sbb
cmp
in
inc
mov
fs
push
pop
stos
dec
cli
push
inc
push
movsb
or
gs
push
sbb
add
popa
xchg
in
inc
or
xchg
lock
xchg
pop
inc
imul
xchg
or
sahf
pusha
inc
enter
push
das
cltd
pusha
fcom
adcl
sahf
cmp
repz
add
push
jb
dec
or
push
mov
add
sub
rolb
dec
sub
add
adcb
push
or
testl
addl
inc
sbb
xchg
cltd
clc
shlb
insl
cmp
xor
mov
adc
inc
rol
cmp
inc
xor
mov
mov
test
js
xor
in
dec
push
sbb
adc
adc
out
dec
lret
in
add
icebp
and
divb
orl
mov
lret
fsubl
mov
sub
inc
xchg
push
add
sbb
mov
add
testb
or
inc
push
push
or
mov
push
xchg
pusha
mov
mov
sub
add
add
out
enter
dec
pop
or
and
add
xchg
and
mov
adc
stos
add
pop
push
scas
popf
push
push
or
jae
daa
sar
jns
adc
rcll
dec
push
dec
inc
fsubs
mov
mov
sub
gs
jne
add
add
add
aad
test
loopne
or
sti
pop
push
xor
daa
dec
push
push
inc
pop
push
repnz
mov
movsl
adc
and
fcomp
adc
dec
push
pop
push
outsl
lcall
or
sbb
sbb
fcomps
imul
pop
fs
fs
and
inc
pop
xlat
xchg
add
mull
in
dec
mov
jmp
ret
mov
xor
cmp
arpl
cmpsb
push
pop
ja
sbb
inc
mov
or
les
push
push
pop
cmpb
cmpsl
sub
xor
enter
in
in
push
adcb
movb
scas
lods
add
adc
shrb
test
or
lea
add
clc
out
pop
mov
enter
sub
xchg
push
nop
out
mov
lods
sarb
or
mov
mov
shrl
aam
dec
pop
cltd
dec
unpcklps
imul
push
push
xchg
rolb
xchg
xchg
cmp
testl
mov
cld
sub
jp
andb
mov
xchg
sub
cmp
sub
mov
adc
push
xchg
out
lcall
sub
adcl
pusha
jo
ds
pop
orl
shrb
sbb
push
fstl
popa
or
shrb
inc
xor
mov
push
ja
add
add
rcll
or
cmp
and
xor
arpl
sub
sti
xchg
add
mov
sbb
sbb
adc
cmp
test
adc
test
or
jo
popa
sbb
push
nop
add
pop
lahf
jne
call
push
adc
jmp
sub
cwtl
dec
inc
push
push
jo
cmp
xchg
and
mov
push
inc
push
sub
pop
jg
mov
push
xlat
and
loopne
andb
push
es
lahf
ret
cmp
cmc
sti
lods
fprem
pop
sub
add
adc
sbb
jbe
or
sub
mov
insl
sbb
sub
shl
push
hlt
subl
shll
mov
je,pt
mov
adcb
add
xchg
or
jno
sti
nop
or
or
pop
shrl
and
or
mov
add
xor
in
cmc
lea
add
xchg
leave
imul
dec
xor
add
shlb
popl
and
subl
and
jle
push
mov
inc
and
adc
lock
icebp
push
je
mov
inc
sub
or
mov
add
sub
or
daa
sbb
ror
in
stos
xor
inc
ss
testb
inc
xchg
cmp
pusha
shlb
mov
clc
dec
imul
inc
addr16
and
adc
pop
popa
jae
mov
pusha
and
adc
js
cmp
pop
xchg
aam
or
mov
cmp
shll
gs
inc
fimuls
jmp
pop
in
scas
es
into
mov
stos
bound
in
xchg
loop
cmp
adcb
loopne
stc
daa
jecxz
testb
clc
decl
in
cmp
dec
push
lods
push
inc
add
xor
inc
or
std
xor
sub
stos
outsl
outsl
jo
inc
pop
and
cmp
sub
int
je
icebp
add
xrelease
dec
daa
cld
and
xchg
imul
pop
and
inc
add
gs
test
ret
pusha
adc
add
pop
ficomps
inc
mov
pop
cmp
shrb
and
sbb
dec
push
add
add
orl
dec
dec
bound
push
push
xor
pop
pop
push
adc
sub
loop
push
or
sub
mov
insl
adcl
test
insl
and
arpl
mov
push
push
cwtl
loopne
jae
adc
push
pop
mov
imul
lahf
push
xchg
and
fwait
sbb
mov
add
flds
insb
or
jo
subps
push
es
fisttps
lods
adc
mov
cltd
cmp
pusha
add
bound
rcll
hlt
inc
or
fldcw
mov
add
push
dec
and
ss
cmp
inc
addr16
adc
addl
shlb
shl
dec
inc
adc
subl
or
adc
aam
and
mov
adc
arpl
scas
pop
cld
sbb
push
lods
jg
xchg
loope,pn
adc
and
mov
jle
cwtl
or
jnp
cmp
jo
inc
jecxz
das
jecxz
jle
mov
push
insl
pop
or
pop
or
push
pop
aas
out
ror
pop
adc
push
or
fwait
test
movsb
sahf
mov
mov
test
or
scas
mov
add
cmp
lret
loope
pusha
test
inc
adc
cli
or
jg
cmp
pushf
nop
cli
andb
sub
pop
outsb
xor
lock
mov
fucomi
ss
ss
es
pop
scas
test
add
mov
aam
sub
pop
xchg
test
and
inc
xor
filds
jae
and
jns
xor
pop
rcll
or
imul
jle
movsb
les
sub
pop
and
mov
or
xchg
nop
les
iret
jo
fstpt
mov
imul
fucomi
pop
adc
movsb
and
test
dec
fs
jmp
cmpsb
fdivp
inc
sbb
inc
fcoms
je
jge
outsb
cmp
push
inc
lock
push
jle,pn
out
test
push
and
mov
addl
and
cmp
pop
jns
add
cltd
push
jmp
or
imul
xor
scas
leave
inc
add
xor
test
adc
and
popa
xor
mov
int3
inc
sub
and
pop
shll
pusha
jno
mov
inc
or
outsl
jmp
inc
cmp
test
add
adc
jnp
or
dec
fcoml
call
jb
push
cmp
and
cmp
pop
fiadds
cmp
xor
mov
sub
mov
and
xchg
inc
rcrl
mov
addr16
pusha
add
scas
and
add
xchg
les
pushf
and
dec
movsb
jo
enter
and
push
sub
and
push
mov
and
inc
clc
jbe
xor
cltd
jle
add
xor
lea
shlb
jmp
inc
xor
adc
nop
pop
and
pusha
lods
lahf
sbb
rclb
add
mov
push
or
dec
mov
mov
jl
pusha
sub
cmpsl
mov
or
jo
icebp
pusha
add
push
gs
adc
xor
jbe
xor
xor
push
xor
les
dec
outsb
cs
mov
idivl
push
xor
sub
hlt
sub
int
cmpb
rorl
invd
imul
push
xor
push
jne
sbb
mov
inc
dec
xchg
xchg
je
leave
mov
aaa
pop
pushf
outsb
fcoml
cwtl
js
mov
pop
xchg
mov
fdivs
lods
outsl
fidivrl
inc
xchg
lods
add
cs
jb
and
sub
add
jge
fimuls
adc
or
in
repnz
clc
pop
pop
dec
sub
and
or
sub
loope
orl
mov
add
loope
mov
dec
sub
add
inc
push
inc
adc
xchg
ret
sbb
cmp
ficoms
adc
push
xchg
adc
xor
cmp
jge
inc
or
call
sbb
mov
mov
push
loopne
xlat
insl
jl
and
clc
jmp
enter
dec
push
es
addb
push
xchg
mov
out
push
mov
imul
insl
test
js
mov
or
inc
outsb
lea
cwtl
fs
pop
sbb
pusha
sbb
ss
negl
cmpsb
ret
lods
pop
cmp
jl
or
mov
pop
xor
jg
inc
ficoml
add
in
in
xor
add
lock
clc
das
adc
andb
or
xor
addr16
xor
push
insb
fs
pop
dec
pop
mov
mov
pop
fdivl
nop
jne
pop
add
jb
cmp
cmp
stos
or
sub
pop
jnp
lods
insl
movb
mov
aaa
mov
jmp
insl
pusha
or
add
xchg
pop
adcb
mov
adc
insw
pop
mov
or
push
pop
loope
das
adc
adc
adc
inc
inc
mov
cmp
push
fiaddl
ret
lds
ljmp
out
mov
arpl
push
and
prefetch
lret
and
in
or
inc
cmp
ss
and
sub
popa
xchg
mov
data16
mov
pop
add
ret
add
leave
add
leave
sub
cmp
cmpl
jge
or
lea
or
pop
push
je
addb
rorb
ret
jo
inc
sub
add
stos
inc
sub
push
xlat
mov
addl
cmpsb
test
adc
dec
add
sub
stos
xor
push
arpl
shrb
add
pop
insl
push
push
nop
test
pop
sbb
fisubl
push
xor
inc
mov
or
in
add
mov
movsb
cs
add
aas
dec
dec
adc
push
and
loopne
and
sbb
dec
sbb
adc
and
adc
inc
call
fwait
mov
jmp
dec
bound
mov
dec
addb
add
in
mov
popw
add
adcl
sahf
push
adc
xchg
adc
je
jmp
ror
sub
loope
sub
jmp
sub
pop
and
cmp
stos
inc
xchg
fldenv
jmp
fwait
sub
adc
xor
inc
or
movsb
scas
rcrl
xor
pop
lcall
xor
inc
or
lods
or
test
out
mov
sti
pop
sub
daa
cmp
sbb
sarb
in
xchg
aaa
jo
aam
clc
iret
nop
insb
xchg
sub
leave
xor
jl
nop
cmp
repnz
mov
in
xchg
int
insb
adc
xchg
sub
mov
lods
adc
mov
push
add
mov
dec
cs
sub
add
and
sub
mov
imul
push
xchg
aam
pop
js
rolb
aaa
ret
pop
inc
pop
sub
rolb
scas
push
add
insl
push
pop
pop
push
stos
ss
xchg
push
jo
add
dec
xchg
pop
leave
xor
outsb
mov
add
scas
insl
mov
addr16
dec
sti
daa
dec
lods
lods
push
xchg
xchg
aaa
std
adc
cmc
sbb
push
in
int3
or
xchg
add
mov
mov
adc
or
cmp
insl
sub
mov
sbb
pusha
jl
mov
stos
jo
jnp
scas
fldlg2
inc
or
js
int
sbb
or
in
xlat
xorb
add
adcb
hlt
insl
lea
arpl
or
push
dec
mov
mov
add
jo
xorb
dec
loopne
xor
cmp
sarb
cmp
fdivl
xor
mov
or
fs
or
pop
outsl
adc
xchg
sub
mov
and
jne
out
addb
insl
xor
outsl
ret
mov
push
push
fstl
popa
or
inc
mov
xchg
or
ret
rorl
lock
xor
sub
or
inc
jle
dec
sahf
inc
fisubs
mov
and
mov
sub
loopne
or
and
or
or
loope
push
xchg
pop
scas
mov
dec
jg
or
mov
sub
iret
out
and
insb
inc
ret
sub
fs
scas
in
dec
pop
loopne
push
iret
inc
mov
lods
or
into
add
or
push
in
mov
and
outsl
jbe
dec
dec
and
or
rcll
dec
aas
inc
adc
dec
pop
adc
cmpsl
orb
inc
push
andl
fwait
inc
pop
mov
aas
xchg
sub
mov
mov
xor
adc
inc
leave
and
push
inc
dec
imul
shlb
jp
repnz
adc
add
mov
mov
add
lcall
adc
sub
cmp
shll
jmp
adc
sub
aas
mov
fwait
sbb
iret
ret
movsb
fucom
push
daa
mov
mov
xchg
cld
sub
or
jo
or
push
xchg
jl
jle
aas
xor
sti
push
stos
bound
or
and
addl
or
fnsave
xchg
push
xchg
add
notl
mov
and
addr16
xor
add
mov
jno
aas
adc
mov
add
mov
addr16
or
mov
pop
faddp
testl
xchg
mov
rcrb
pop
loope
mov
cmp
push
mov
jne
or
add
adc
dec
fcompl
dec
inc
xlat
outsl
cmp
mov
sub
jge
cli
notb
out
or
push
dec
jae
lcall
jae
rcl
fwait
movb
gs
inc
sub
cltd
sub
adc
dec
or
sbb
xor
xchg
outsl
push
lahf
dec
add
sub
inc
dec
or
dec
mov
push
sbb
mov
push
sbb
jl
or
or
pop
adc
out
add
xor
push
sub
or
mov
or
push
sub
cli
xor
bound
shlb
movsl
sbb
and
cmp
adc
in
rcll
fsts
add
test
adc
jge
push
addl
pop
shrb
sbb
outsb
jmp
adc
sub
dec
shlb
push
cmp
or
inc
cmp
dec
xor
jns
xchg
mov
adc
pop
jno
adcl
cmp
mov
stos
jecxz
inc
mov
dec
or
in
inc
repz
or
xor
outsl
subb
movsb
movsb
xchg
xlat
mov
fsubrl
pop
mov
or
movsl
or
test
cmp
ljmp
adc
xor
pop
cmp
mov
xchg
pop
leave
and
jbe
or
inc
lea
xor
or
sbbl
mov
and
pop
xchg
sub
sub
push
test
icebp
xor
and
jmp
sti
dec
mov
mov
xor
insb
push
cmp
xchg
not
and
push
imul
into
xchg
mov
add
sbb
adc
pop
fildl
cmp
mov
jns
aad
mov
lods
in
adc
cmp
add
test
xor
adc
lss
ret
or
or
jg
jecxz
inc
call
outsl
shll
mov
pushf
fimuls
imul
lret
out
adc
loope
or
lahf
cmp
pop
pop
jnp
push
sub
push
test
cwtl
xor
mov
xchg
jne
xchg
stos
and
xor
dec
pop
femms
xor
rolb
push
movsb
imul
movsb
movsb
fst
notb
call
ds
mov
andl
and
mov
jns
lods
sub
sbb
jo
and
repnz
idivb
mov
repnz
sub
add
lods
cmp
test
mov
pop
or
add
cltd
movsl
dec
xorps
les
adc
fnstcw
xchg
xchg
in
lea
pusha
insl
rorl
add
cwtl
rep
je
sbb
push
aam
test
mov
and
outsb
jne
inc
lods
add
jno
inc
cmp
push
call
mov
test
push
push
inc
adc
adc
xchg
call
repnz
repnz
cwtl
popf
push
add
pop
repz
sbb
mov
xchg
aaa
sub
sbb
iret
and
mov
inc
xchg
in
inc
add
cmp
or
in
mov
adc
lods
xorb
pushf
and
xlat
test
dec
mov
ret
dec
insb
aaa
jmp
fs
sub
push
orl
in
dec
ret
push
jae
jge
jo
outsb
ret
fisttps
jl
cltd
sbbb
jl
mov
inc
jmp
test
xor
popa
je
sbb
js
and
sbb
sbb
sbb
adc
or
aam
jmp
mov
ret
push
aaa
cmp
mov
mov
xchg
push
xchg
test
push
push
dec
dec
mov
pushf
xor
dec
xchg
or
movsb
mov
mov
or
ret
mull
pop
sbb
mov
shlb
roll
and
add
dec
add
push
mov
test
daa
clc
fstpt
dec
or
aad
and
push
xor
js
mov
cmp
inc
push
or
push
fistpl
pop
mov
shll
cs
dec
push
fs
lds
adc
sub
test
fwait
adc
pop
lods
or
jg
xor
insl
cmp
xor
mov
sbb
xchg
fwait
movsb
sbb
loopne
mov
test
lret
jecxz
lea
jno
stc
and
adc
addl
and
in
aas
cltd
xor
pop
cmpl
jmp
add
xchg
int
jle
pop
outsb
xchg
push
fwait
adc
sub
dec
xchg
xor
mov
add
sbb
sub
push
js
dec
stos
and
or
push
fimull
adcl
cmpsl
and
push
ret
push
mov
int
xchg
js
popf
add
xor
xor
fldt
es
pop
push
test
pusha
push
mov
sbb
push
pop
arpl
inc
nop
push
orl
nop
add
add
sbb
mov
maskmovq
pop
sub
mov
ud0
and
rdmsr
or
test
xor
pop
fadds
or
lock
lods
push
roll
mov
mov
sbb
leave
fadds
add
sbbb
xchg
mov
inc
dec
pop
pushl
sub
xor
adc
movsb
dec
inc
std
push
sub
cmp
dec
push
je
or
orl
and
adc
mov
cmp
jne
std
add
inc
mov
xchg
ret
mov
sub
jae
in
stos
rcl
cmp
add
ss
push
adc
adc
icebp
loopne
xor
or
mov
pop
lret
in
push
bndcl
adc
sahf
pop
pop
test
outsl
movsb
mov
shrb
add
add
adcb
aaa
pop
dec
test
mov
adc
inc
movb
mov
loope
mov
clc
or
icebp
popa
add
jae
adc
add
xchg
jnp
sub
inc
adc
xchg
sub
cmpb
test
insl
imul
or
sub
movl
fwait
mov
sub
jae
mov
add
aaa
and
push
enter
mov
sbb
mov
xor
das
aad
sbb
mov
js
adc
sbb
mov
lcall
adc
stos
pusha
dec
ljmp
push
ja
add
mov
adc
cwtl
add
mov
cmc
inc
jge
sbb
adc
rolb
xor
dec
sbb
adc
jg
pop
popl
xchg
push
pop
emms
adc
mov
dec
int
daa
mov
add
nop
dec
sub
add
cmpsb
cwtl
lds
mov
mov
fs
xchg
pusha
push
adc
xchg
fs
or
loope
push
jno
mov
and
addl
dec
mov
or
adc
or
mulb
popa
push
add
xchg
push
or
mov
mov
popf
out
mov
pusha
rorl
test
cmpsb
add
xlat
and
pop
add
or
pop
and
flds
and
xor
push
push
inc
or
pop
lock
sub
lea
mov
mov
mov
or
or
shll
rorb
sbb
xor
cmp
cld
xor
arpl
cmp
mov
lret
or
insb
xlat
lock
mov
sbb
inc
sbb
dec
xor
inc
lcall
pop
adcb
hlt
mov
xchg
mov
or
loope
inc
pop
mov
push
pop
push
mov
daa
shlb
mull
mov
xchg
cwtl
push
push
cmp
dec
sbb
inc
or
or
adc
add
aaa
add
or
cmp
outsb
insl
sbb
fidivrl
das
mov
cmpsb
mov
or
or
sub
add
stc
lret
fbstp
adc
test
add
stc
inc
dec
leave
xchg
inc
or
ret
bound
dec
outsb
pop
roll
adc
push
inc
js
int3
arpl
popa
inc
xlat
or
adc
xchg
add
shlb
ja
pop
arpl
push
mov
insb
in
insl
rcrb
mov
xchg
mov
inc
adc
rcll
sbb
or
or
scas
push
and
sub
in
stc
in
xchg
test
mov
or
pop
cltd
pop
or
jecxz
mov
scas
ror
rorb
les
pop
pop
pop
adc
pop
movsl
lret
push
push
rclb
mov
adc
adc
imul
loop
vmovhps
es
inc
es
loopne
pop
add
mov
add
push
sbb
mov
int3
int
imul
or
xor
imul
push
xor
popf
fisubrl
inc
cs
incb
mov
add
ss
and
scas
push
scas
pop
add
jo
sbb
addb
sub
pop
push
popf
js
xchg
pop
es
push
out
popf
sbb
repz
call
add
loopne
adc
jnp
in
jl
or
add
outsb
pop
mov
rol
scas
mov
lea
es
xor
jns
inc
bound
sbb
frstor
nop
daa
fistps
imul
loope
addb
sbb
and
repnz
mov
insb
dec
pop
lea
add
js
add
push
sub
stc
push
pop
pop
xchg
les
sbb
mov
adc
push
test
xchg
or
pop
nop
int
pushf
cwtl
je
cwtl
cmpsb
mov
jg
inc
adc
rcrl
push
rcrb
notl
jle
xchg
and
pop
lcall
pop
testl
cmpsb
jge
jg
or
sbb
mov
or
xchg
hlt
mov
in
testb
push
mov
testl
mov
dec
imul
push
jo
movsb
inc
or
add
sub
xor
and
repz
mov
xchg
push
or
ds
repnz
jl
mov
repnz
xchg
pop
sbb
push
adc
das
cs
or
or
and
bound
fmulp
mov
mov
dec
imul
xchg
enter
add
inc
mov
imul
imul
xchg
xchg
movsb
inc
or
mov
push
cmpsb
imul
or
dec
or
and
cmp
cmp
jno
fdivs
xchg
xchg
daa
sti
sub
adc
pop
or
lret
or
mov
pop
ret
imul
push
pop
xchg
push
insb
mov
adc
mov
xchg
adc
sbb
pop
or
sbb
clc
mov
insb
xor
sbb
subb
pushf
xchg
sbb
mov
xor
xchg
sub
jns
add
cs
out
or
loope
dec
xchg
call
push
cli
nop
xchg
stos
and
mov
in
pop
mov
adc
shll
pop
outsl
add
xchg
push
xchg
aaa
call
xchg
ds
int
les
inc
clc
lea
dec
adc
icebp
or
xor
test
and
movsb
out
popa
or
push
roll
insb
pop
cmp
xor
inc
mov
push
sub
add
iret
push
lea
repnz
xor
xchg
dec
adc
lahf
sahf
mov
adc
and
sub
movsb
aas
inc
jo
jne
xchg
jmp
or
dec
sbb
pop
mov
mov
push
in
inc
add
or
mov
and
cwtl
mulb
das
xchg
test
cmp
aas
cmp
push
hlt
or
inc
xor
insb
xor
sbb
fiaddl
adc
in
subl
add
sbb
and
and
sub
jb
xchg
or
inc
mov
mov
or
cwtl
leave
sbb
popa
mov
das
fwait
sbb
sub
in
push
rorb
loopne
insl
call
adc
lds
daa
jo
loop
pusha
mov
pop
push
adc
mov
push
scas
movsb
roll
or
mov
sub
mov
adc
xlat
daa
xchg
dec
xchg
lcall
xor
sbb
sbb
enter
clc
lcall
and
fsubs
pushf
shlb
push
in
dec
or
in
adc
push
xor
push
sbb
or
jno
push
aaa
dec
sbb
push
es
in
lret
cmp
and
dec
cs
sub
dec
cs
or
mov
pop
inc
das
dec
sbb
lret
lcall
ss
cmpsl
push
push
inc
push
mov
inc
iret
loopne
inc
pop
mov
dec
inc
pop
test
test
pop
dec
pop
jmp
clc
push
shl
mov
dec
jae
out
int3
adc
dec
out
and
aam
ljmp
pushf
or
jge
in
int
sbb
scas
sbb
sti
loopne
add
push
push
nop
jb
jns
sarl
push
fs
add
or
adc
dec
in
mov
cld
not
add
add
or
cmp
push
mov
sbb
sbb
mov
std
call
adc
dec
add
xchg
mov
ret
push
out
pushf
push
and
add
mov
cld
xor
or
pushf
xorb
aas
push
int
push
push
rorb
xor
and
jno
sub
test
insb
js
clc
xlat
jbe
pop
push
jg
dec
test
dec
clc
pop
and
push
loope
or
enter
fcomip
lret
jo
in
adc
jo
mov
or
insb
inc
es
andb
pop
aad
test
or
or
xor
push
sbb
adc
mov
lahf
sub
in
popa
sub
sbb
add
or
cmp
loopne
enter
enter
cmpl
lahf
adc
ss
cli
pusha
inc
sub
xor
dec
cmp
in
jge
mov
icebp
call
add
shlb
in
inc
dec
sahf
and
cmpsl
or
ret
push
and
roll
xchg
adc
adc
push
das
addr16
jne
xlat
leave
sub
push
xchg
clc
cmp
insb
mov
fildl
ss
sbbl
dec
jg
loop
pop
sub
pop
mov
cmpsl
ss
add
and
sub
pop
movb
ja
jb
add
push
push
jmp
pusha
enter
push
sbb
sub
rclb
insl
test
jo
jo
adc
shll
bound
lahf
cmpsl
sub
push
daa
or
aam
jns,pt
lock
inc
in
inc
loope
mov
cwtl
nop
fcmovb
and
pop
sbb
lcall
dec
repz
and
or
inc
jb
or
in
cmpsb
inc
or
add
pushl
push
dec
xchg
xchg
xchg
test
sarb
das
in
pop
pop
bound
add
je
dec
sbb
or
push
inc
shl
ss
xlat
sbb
or
inc
scas
add
ret
mov
dec
mov
les
dec
or
mov
or
xor
inc
mov
insl
loopne
jbe
xchg
int3
xchg
dec
sbb
or
adc
pop
out
aaa
adc
or
ds
aam
das
mov
xchg
test
insl
mov
xchg
out
sub
or
dec
mov
cmpsl
and
push
rorl
inc
in
ja
mov
inc
mov
imul
decw
inc
xchg
pop
insb
daa
imul
and
mov
in
xchg
test
sub
add
cmpb
in
test
mov
mov
shll
sub
inc
movsb
xor
and
movsb
cmp
enter
xchg
jg
adcb
xchg
jle
dec
or
out
xchg
adc
mov
leave
mov
sbb
movsb
sub
dec
sahf
and
lods
rclb
test
mov
repz
daa
hlt
adc
aaa
dec
imul
arpl
nop
or
xchg
mov
and
test
inc
iret
int
cwtl
jns
arpl
fwait
mov
arpl
cmpsb
arpl
inc
mov
in
xchg
push
push
xor
inc
dec
fistpll
lods
nop
gs
adc
add
inc
outsl
push
mov
lea
imul
or
adc
push
cmpsb
mov
xchg
fstps
ds
dec
add
xchg
inc
jnp
jno
add
mov
and
pop
add
lds
mov
ret
je
pusha
cmp
add
sbb
mulb
stc
cli
xchg
inc
push
sti
cld
std
dec
mov
mov
cmpsb
test
fs
pop
inc
dec
adc
jle
pop
push
data16
push
sbb
sbb
aam
push
jl,pn
inc
pop
aaa
or
or
push
fimull
sbb
xor
cwtl
sub
adc
imul
push
loope
inc
rcll
inc
xchg
and
insb
add
test
push
add
xchg
mov
and
mov
sahf
or
xchg
pusha
mov
add
and
jge
add
outsl
xor
fmull
or
or
dec
imul
mov
nop
in
mov
push
push
pop
lock
jo
inc
das
test
adc
aaa
loop
adc
js
dec
push
in
popf
mov
stos
jl
pop
stos
add
stos
xor
sarb
pushf
mov
xchg
insb
and
xlat
xor
pop
mov
in
and
push
sub
jae
add
jbe
cltd
fwait
push
ret
bts
test
sub
or
and
pop
mov
pop
js
inc
mov
inc
jo
add
sub
inc
jne
xor
push
insl
icebp
pop
leave
or
mov
cmp
or
inc
jo
shll
add
pop
inc
pusha
aad
xor
rcr
outsl
shll
add
sub
or
insl
inc
outsb
ret
pop
push
and
mov
pop
adc
adcl
incl
xchg
inc
ret
mov
push
pop
in
data16
and
jo
xor
push
mov
push
cltd
sahf
ja
xchg
and
or
dec
daa
add
addl
outsb
das
pop
jae
sub
arpl
xor
orl
sub
idivl
xchg
adcb
pop
pop
sbb
arpl
add
mov
adc
ret
shlb
fstps
imul
inc
into
pop
sbb
popf
es
mov
push
nop
pop
test
fldl
rorb
mov
add
lods
or
iret
xchg
mov
xor
mov
jbe
dec
test
cmp
and
outsl
bound
test
int3
xlat
out
cs
aaa
fists
xor
lret
lea
outsb
xor
cmpl
stos
das
sti
clc
mov
xor
test
shrb
in
and
in
mov
nop
add
sub
sub
push
daa
add
add
nop
add
and
imul
clc
mov
sbbl
and
xor
and
nop
orl
cmp
sbbl
cmp
sbbl
or
xchg
add
int3
lea
mov
sbb
cmc
add
sbb
adcl
enter
sub
in
push
push
je
and
in
cwtl
hlt
fcoms
sbb
nop
mov
cmp
sbb
fcomps
add
in
hlt
or
mov
cmp
mov
or
orl
fsub
sbbb
cld
repz
in
push
sub
les
imul
test
jae
lcall
sub
xor
cmp
push
mov
cmpsl
push
bound
imul
pop
imul
dec
mov
rcrl
into
fucomi
cmc
mov
pop
rcrl
sub
jnp
mov
cmpsb
imul
jecxz
lock
push
scas
mov
inc
dec
pop
imul
nop
mov
daa
xor
push
shll
cld
or
popa
and
shl
flds
insl
adc
push
aam
pop
ffree
inc
ss
sbb
ss
push
xchg
inc
push
leave
add
cwtl
loopne
rclb
cmpb
fwait
aaa
mov
mov
push
jecxz
shrb
mov
in
add
jl
sub
mov
jno
aas
pop
inc
push
lods
pop
add
mov
and
imul
stc
into
test
fcomps
pop
mov
jb
and
hlt
addl
sarl
out
ss
or
rorb
shlb
in
nop
or
pushf
or
test
or
fs
xchg
fs
ds
dec
jecxz
or
aam
pop
add
or
int3
pop
ljmp
into
out
loopne
xchg
cs
psubw
sti
cld
vpackuswb
sbb
addb
insl
xchg
test
cmp
mov
outsb
or
xor
packssdw
cwtl
lret
push
loop
add
movsb
jo
es
shlb
inc
jb
add
adc
push
orl
in
mov
inc
pop
mov
jge
push
cltd
rorb
cwtl
adc
ret
rcll
test
inc
hlt
or
adcb
adc
adc
imul
loope
inc
push
mov
xchg
pushf
mov
outsb
mov
mov
xor
aam
movsb
xchg
arpl
addl
dec
test
and
xor
or
jbe
cmp
and
cmp
pop
shll
mov
lret
adc
sub
cmp
lods
or
inc
inc
cmp
rcrb
push
jae
mov
dec
or
push
mov
sahf
mov
cld
jmp
sbb
ret
mov
andl
sbb
pop
fisttpll
roll
outsb
pop
push
adc
sub
hlt
call
mov
cmp
push
push
je
sahf
in
pop
out
inc
lock
icebp
in
pusha
sbb
loop
or
and
or
and
xor
test
or
or
enter
or
js
mov
or
jl
sbb
outsl
imul
jns
lock
add
icebp
aam
enter
mov
pop
movsb
adc
jns
jl
and
cmc
push
jnp
or
jo
xchg
into
es
xor
add
js
scas
inc
jmp
invd
mov
cmp
fdivl
mov
addb
nop
adc
movsb
and
inc
or
mov
dec
roll
pushf
fistl
adc
adcb
inc
and
loope
adc
add
xor
int3
icebp
lret
jle
adc
sbb
mov
jl
or
jbe
push
adc
adc
stos
xchg
lahf
add
ljmp
or
ja
js
les
pop
jmp
add
sahf
push
insb
mov
dec
dec
dec
scas
fdivr
mov
add
int3
and
jo
rol
sbb
push
mov
cmp
aaa
xor
nop
stos
adc
sub
sbb
mov
jecxz
inc
or
fists
dec
pop
or
mov
pop
xchg
pop
or
adc
and
xorl
add
inc
mov
sub
gs
pop
jnp
mov
hlt
test
aam
mov
mov
mov
lods
mov
test
mov
and
aas
jle
imul
mov
lcall
add
daa
mov
inc
xor
dec
rclb
pushf
dec
add
ret
mov
lea
popa
or
push
movsl
test
push
cs
dec
daa
rclb
lret
jmp
or
pop
adc
les
xchg
popf
pop
and
in
mov
xlat
jl
cmp
popl
pusha
inc
xchg
in
or
mov
add
nop
int
and
push
test
out
dec
int3
adc
testl
adc
mov
loopne
stos
or
add
xchg
fbld
lret
xor
adc
push
and
int3
push
aaa
xor
and
lock
pushf
adc
jbe
gs
dec
push
xor
add
mov
sarb
sbb
adc
xor
add
jmp
sbb
and
shl
sub
pop
je
cmc
insl
pop
shr
shrb
sub
call
in
dec
pop
xchg
sub
cwtl
mov
push
lods
push
pusha
mov
mov
pop
hlt
roll
adc
pop
and
scas
add
int
pop
das
inc
mov
loope
sub
xorl
dec
inc
jmp
push
clc
push
push
adc
or
jne
jb
lods
in
shll
leave
repnz
jp
mov
push
xor
sbb
pop
fs
pop
call
addr16
scas
les
adc
inc
adc
mov
inc
add
loope
mov
loope
sti
add
shlb
mov
lock
js
pop
pusha
mov
push
std
add
and
xchg
fisubs
test
jmp
inc
lea
inc
or
rep
or
mov
sub
jne
inc
push
add
adc
xlat
mov
dec
ret
push
mov
fildl
and
add
or
adc
pop
dec
sbb
jle
inc
inc
inc
mov
mov
aas
push
sbb
cmp
jne
and
fstps
mov
into
adc
ret
push
jmp
inc
dec
jne
inc
sbb
or
inc
shrb
inc
dec
sbb
add
incl
add
add
and
or
sbb
mov
sbb
ret
fdivrs
andl
ret
sub
subl
add
sbb
and
enter
add
or
xchg
sub
lods
cmp
enter
cmp
push
push
nop
lods
sbb
xchg
or
xchg
sarl
cmc
cmpsl
fdivl
enter
or
into
test
xchg
andb
stos
mov
adc
mov
xor
cwtl
dec
subb
testb
fwait
inc
add
cmpsb
push
adc
dec
and
dec
add
sub
dec
push
jnp
scas
test
xchg
push
xor
xor
xchg
pop
adc
movsl
add
outsl
jnp
inc
jnp
leave
mov
mov
sti
inc
mov
pop
pusha
jmp
and
inc
or
inc
sub
xchg
sbb
push
add
ss
pop
add
gs
adc
push
inc
adc
test
pop
inc
adc
mov
jmp
andl
add
jge
loope
mov
or
inc
scas
movsl
adc
or
andb
and
filds
test
adc
call
adc
shrl
push
stc
jo
aam
or
adc
aas
nop
dec
bnd
or
popa
mov
test
lods
sbb
pop
std
mov
out
xor
and
enter
sbb
dec
add
loop
bound
jl
or
xor
data16
mov
jb
insb
pop
test
jmp
push
sub
sbb
add
xchg
inc
xchg
mov
pop
mov
push
add
mov
adc
addb
fsubrl
imul
adc
adc
nop
dec
inc
outsl
inc
pushf
sbb
rorb
jmp
mov
jp
mov
xchg
mov
clc
dec
xor
stos
sbb
jp
adc
xor
out
nop
aam
mov
fs
std
add
add
dec
xor
inc
stos
mov
lea
lods
outsb
sbb
jle
lods
bound
adc
push
xchg
gs
fldl
leave
and
lcall
dec
mov
in
sub
das
mov
sbb
cmp
out
mov
inc
or
add
sbb
jns
pop
lods
jae
int3
data16
shrl
loop
sbb
dec
bound
ja
dec
push
pusha
and
shlb
sub
jmp
pop
pop
sub
mov
jbe
cmp
pop
ret
mov
mov
aad
adc
inc
das
inc
rcll
movl
cmp
dec
cmp
mov
xor
pop
add
pop
sbb
into
sti
sub
leave
outsl
pop
mov
testb
je
xorb
lods
xchg
xchg
imul
xor
mov
pop
stos
inc
inc
sbb
jno
lea
hlt
sarb
stos
jno
pop
sbb
adc
cld
dec
movsb
leave
call
stos
and
je
add
insl
jne
stc
sub
inc
mov
call
adc
add
clc
out
addb
cmp
add
adc
mov
and
jmp
dec
mov
mov
call
lahf
xchg
xor
fimuls
mov
inc
ret
or
push
push
mov
ret
jne
iret
push
xchg
adc
pop
rolb
cs
cmp
add
dec
xchg
pushf
int
cld
roll
stos
pop
iret
jge
sbb
mov
sub
lock
and
dec
pop
pop
dec
mov
bound
fildl
xor
push
into
lock
inc
dec
adc
daa
pop
sub
ret
xchg
popf
cmp
jne
sbb
jo
cld
lret
mov
pop
xor
add
ror
movsb
xor
mov
or
sbb
mov
jns
xor
aam
add
push
xchg
clc
loopne
hlt
fld
mov
fcoml
xor
or
add
sbb
mov
sub
pop
dec
into
sub
insb
fidivrl
jl
fstpt
cmp
into
sub
sbbl
add
inc
push
shlb
mov
fisttpl
adc
add
and
xchg
clc
add
or
mov
inc
inc
sbb
mov
sbb
or
in
test
cmp
push
mov
ret
loop
fsubrs
xchg
adc
clc
scas
popf
inc
sahf
test
int
add
sub
push
setp
and
scas
xchg
jne
das
push
xor
mov
cmp
mov
push
sub
nop
cmp
add
enter
flds
fisttpll
add
jge
lock
ja
jmp
test
jbe
jmp
dec
dec
adc
outsl
dec
iret
pop
das
or
jb
cmp
loop
subl
push
push
xchg
or
add
rorl
outsl
adc
xchg
dec
mov
pop
sub
inc
mov
test
stos
mov
dec
enter
cmpb
mov
movsl
sbb
shll
addr16
pop
adc
andl
inc
lcall
push
adc
iret
add
or
int
or
shll
mov
jmp
pop
lea
push
loope
psubusb
repz
jb
pushf
rcrw
outsl
int3
cmp
shlb
mov
test
pop
mov
xchg
stos
push
out
dec
dec
mov
add
or
popf
xchg
js
adc
or
and
cmpsb
lea
push
lea
movsl
and
and
dec
mov
mov
movsb
iret
xor
clc
mov
imul
xorb
scas
pusha
mov
pop
xchg
leave
das
aad
dec
jecxz
inc
aam
lret
inc
mov
clc
adc
add
aam
and
test
cmp
not
loopne
std
rol
mov
mov
dec
dec
sbb
adc
fisttpll
mov
andl
mov
and
mov
pop
gs
xchg
testb
xchg
push
sub
xchg
test
mov
loopne
mov
ret
outsl
mov
add
pop
mov
pop
xchg
lock
ret
pop
push
or
push
adc
or
and
cs
xchg
add
inc
cmp
push
dec
add
sti
in
pop
add
shlb
add
mulb
lds
lock
dec
xor
pop
xor
cmp
outsl
and
add
outsb
push
clc
cmp
movsb
push
addl
add
inc
lock
xchg
adc
add
inc
imul
aaa
sti
xchg
push
shrl
pop
aas
lock
or
adc
sub
je
or
cmp
fadds
jb
xor
lret
lock
aaa
push
mov
rsqrtps
mov
jno
adc
outsl
mov
adc
inc
inc
dec
out
ds
or
aaa
dec
jo
sub
xor
sub
xorl
pop
jne
sub
dec
movsl
mov
int
xor
xor
jp
jne
test
in
jmp
je
or
mov
push
in
lock
push
mov
mov
aam
in
and
sbb
adc
testl
mov
fmull
pop
fwait
sub
pushf
xor
push
adc
test
movsl
or
or
or
call
ss
adc
roll
sti
loopne
add
mov
test
gs
sbb
xor
adc
rolb
mov
shr
sub
les
mov
push
jge
dec
call
cmpsb
inc
push
cmpsb
jge
xor
adc
rcr
or
mov
aad
jecxz
adc
xchg
push
sbb
mov
pop
cmp
or
xchg
cmc
fisubrl
cmp
push
call
xor
aad
mov
mov
ljmp
sub
add
out
and
faddl
test
lahf
fildl
rclb
mov
es
pusha
int3
cmp
add
lahf
adc
in
add
jnp
dec
mov
loope
cwtl
fisttpll
fisttpl
orl
jns
or
arpl
cld
addb
cmp
es
shl
xor
test
jo
push
push
jne
jne
mov
sbb
lcall
mov
or
inc
sbb
insl
out
dec
hlt
ret
or
movsb
add
or
xchg
dec
ljmp
sbb
lret
faddl
xchg
cmpsb
add
nop
add
inc
lods
sbb
outsl
jnp
pop
movw
sbb
or
sbb
popa
test
cs
sub
or
pop
cmp
pop
xchg
gs
mov
add
dec
adc
sbb
push
push
mov
hlt
and
icebp
push
inc
push
mov
scas
cmp
popa
xor
cmc
and
hlt
je
xorl
or
movsl
int
cmp
aam
divb
fdivl
push
sub
je
inc
dec
sbb
ret
sbb
cmpsl
sbb
inc
mov
and
sbb
lahf
and
mov
stc
ret
incl
mov
cmp
ja
je
test
loopne
adc
scas
dec
add
in
ds
dec
mov
or
fsts
add
adc
cmp
inc
push
fs
out
xor
and
and
outsb
adc
jl
int3
xor
inc
fs
sbb
test
jo
sbb
iret
add
lea
push
mov
or
mov
sub
clc
add
and
mov
emms
inc
cli
push
or
movb
lea
mov
mov
pop
out
or
popl
jle
jo
pop
add
jle
jmp
sub
sub
pop
pop
aas
jmp
jle
popa
sbb
or
add
dec
ja
pop
movsb
repz
add
mov
dec
fsubrp
sub
add
push
add
dec
inc
out
pop
xor
fsts
push
fildl
fildl
inc
push
incl
js
js
cmp
inc
sub
pushf
cwtl
pop
xchg
sarb
push
pop
push
inc
sbb
movl
hlt
or
cmpsb
je
add
loop
dec
xchg
in
adc
je
scas
push
sahf
dec
or
adc
int
into
jge
das
sub
fisubrl
or
in
xchg
ret
js
lock
cltd
addl
sub
or
decl
loopne
xor
add
sub
loope
shlb
ja
daa
cwtl
jp
and
mov
inc
test
or
insb
pop
dec
repnz
push
jmp
dec
pop
jp
xchg
rcr
dec
jne
loopne
push
cwtl
adc
push
adc
jmp
pop
mov
jne
mov
rorl
pusha
lods
push
lahf
xchg
rolb
lcall
bound
mov
je
scas
ud2
mov
or
mov
push
inc
push
add
rcrb
xchg
scas
in
je
test
in
pop
loope
and
push
fs
push
dec
sub
pop
adc
aaa
inc
adc
xlat
repnz
mov
add
pop
jmp
mov
jp
incb
mov
hlt
rep
jmp
or
outsl
movsb
sub
repnz
sub
daa
loope
inc
enter
sbb
sbb
ja
rcll
fisubl
add
scas
and
insb
shlb
jne
cs
notb
clc
int3
enter
bound
ja
xchg
fwait
or
dec
dec
inc
dec
xlat
aaa
imul
jg
aam
add
loopne
jno
and
andb
push
mov
push
dec
aam
in
sbb
and
xor
cmc
out
pop
pop
sbbl
lea
inc
add
adc
mov
pusha
test
or
dec
sub
xchg
scas
sub
jecxz
ret
movl
stc
shl
pop
xchg
mov
push
sahf
inc
aam
pop
test
add
inc
cmpsb
cs
inc
pusha
jns
and
inc
and
notl
imul
out
push
or
inc
sub
lods
and
adc
or
rclb
movsl
jb
xchg
int
sub
cmp
xchg
inc
jae
jb
xor
push
test
sti
xchg
or
add
sub
loopne
inc
pop
jae
loope
mov
mov
mov
mov
inc
lret
push
adc
mov
push
fildl
sahf
push
or
dec
and
in
ja
add
js
bndstx
jp
je
and
and
das
add
jge
inc
pop
lods
jae
xchg
or
adc
mov
inc
push
sub
mov
cltd
lret
sub
mov
add
xor
pop
mov
cmp
add
and
or
pop
pop
loopne
and
andl
xor
or
adc
push
mov
outsb
add
imul
out
mov
incb
xlat
in
cld
sahf
sub
add
mov
dec
clc
nop
push
add
out
adc
imul
cmp
out
mov
outsb
loope
and
dec
sub
inc
dec
pop
or
dec
adc
fmull
out
add
fidivl
dec
shll
mov
inc
xor
pop
and
inc
push
sub
rorl
repz
mov
popa
loopne
aaa
xchg
shl
pusha
sub
add
push
nop
push
aas
hlt
sub
cmpsl
or
sub
or
or
dec
imul
adc
inc
icebp
mov
and
lock
push
xor
adc
xor
sbb
ret
or
cmp
shl
and
in
call
outsl
repz
inc
xor
call
pmulhuw
pop
mov
mov
adc
sbb
mov
cmpw
xchg
loopne
enter
or
fsts
adc
push
and
sbb
scas
fidivrs
inc
lock
and
subl
push
test
xchg
lea
sbb
adc
orl
cmp
inc
nopl
mov
insb
cmp
xor
js
adc
jo
lahf
dec
cmp
mov
xor
mov
and
mov
insl
in
xchg
ljmp
lods
sbb
xor
inc
mov
mov
push
sbb
in
inc
daa
adc
or
add
xchg
mov
jmp
popa
sahf
mov
ljmp
cmpsb
subb
and
and
push
or
aas
cmpl
jl
inc
cld
cmp
cwtl
test
adc
fbld
je
or
adc
out
mov
jge
mov
repnz
mov
jmp
aaa
mov
cmpsl
inc
ja
cltd
enter
rcl
mov
out
jns
push
and
lock
mov
add
add
lock
or
outsl
stos
add
pop
inc
cmp
add
sbb
and
into
rorl
xchg
xchg
aam
inc
stc
aaa
add
mov
or
outsb
inc
cli
out
add
sbb
mov
xchg
dec
shl
test
jnp
and
pop
cmp
in
xor
add
cli
das
aam
adc
mov
gs
repz
in
dec
mov
or
adc
call
addb
sub
call
fmul
inc
push
xchg
lods
ss
icebp
loope
scas
je
pop
adc
sbb
cwtl
aad
pushf
mov
std
push
add
pop
imul
dec
inc
inc
jnp
cmove
push
pop
mov
and
sbb
push
and
xlat
fadd
or
cltd
sub
clc
pop
add
push
or
sbb
dec
ret
and
or
gs
lock
sbb
push
or
call
push
jmp
lds
in
out
jo
pop
jnp
adc
shrl
xor
inc
inc
push
pop
testb
adc
jl
cmp
pop
mov
andb
dec
inc
cmpsl
or
insb
jne
add
rorb
jbe
push
sbb
mov
sub
inc
push
inc
pop
out
addb
test
mov
push
cli
sub
push
inc
in
lret
lods
add
cwtl
test
or
sarb
bound
push
ss
push
lea
or
arpl
movb
mov
mov
stc
pop
in
arpl
rorb
xorb
pop
std
in
je
mov
enter
mov
rclb
jns
mov
std
adc
dec
push
pop
inc
dec
jnp
jns
jb
inc
icebp
inc
inc
push
lods
xor
dec
test
mov
jns
rcrl
push
mov
sub
push
inc
and
push
es
inc
es
sbb
test
sub
shlb
fildl
cmp
das
in
add
icebp
dec
lods
roll
insb
or
jae
enter
jp
xchg
add
inc
mov
add
add
mov
inc
cmpsl
ja
mov
addl
nop
les
addl
lcall
std
je
cwtl
or
clc
and
or
cmp
or
sub
test
inc
pop
push
jg
sahf
movsl
pop
xchg
inc
adc
es
mov
or
pop
sub
mov
or
mov
and
mov
adc
fucomp
xchg
out
pushw
insb
sub
xchg
shlb
push
xchg
pop
mov
mov
xchg
dec
je
push
leave
inc
outsb
hlt
lods
fs
sahf
adc
and
pop
xor
andl
adc
test
aam
call
mov
test
mov
lds
adc
or
push
cmpsb
xor
pop
incl
add
rcrb
fstps
fwait
clc
daa
jbe
inc
inc
add
pop
add
jmp
flds
cs
add
test
fcmovnu
stc
adc
dec
and
aaa
add
imul
inc
lahf
or
xor
inc
iret
inc
rcll
adcb
mov
daa
fs
add
sbbl
add
add
push
ljmp
jb
cmc
pop
aaa
cwtl
leave
mov
inc
or
xchg
rorl
movl
fisubrs
dec
pop
insl
sbb
dec
adc
dec
or
push
sub
lcall
sbb
inc
inc
fisubs
mov
or
jb
lcall
inc
push
xor
xchg
ja
or
jo
or
das
out
ss
pushf
cltd
rcpps
test
or
xchg
cmp
adc
lods
jmp
push
sbb
scas
push
dec
jo
outsl
je
adc
lods
lret
and
sbb
adc
mov
cs
ja
or
or
inc
sbb
sbbb
xchg
fisubs
cmp
es
inc
push
cmc
sbbb
add
das
popa
push
ja
stos
dec
and
cmp
mov
js
sbb
xchg
aaa
mov
xor
xchg
test
inc
adc
xchg
pop
nop
dec
add
push
dec
sbb
and
mov
inc
imul
out
pop
xor
or
sbb
add
adc
pop
adc
aam
jl
xor
stc
stos
fs
scas
or
dec
sbb
cmp
test
xchg
adc
leave
add
pop
stc
push
ja
jae
push
xor
push
es
das
cmpsb
mov
jns
and
add
push
mov
test
insb
xchg
xchg
inc
sahf
xchg
push
rol
mov
lcall
mov
xor
sub
call
inc
sbb
push
loop
pop
mov
mov
mov
js
sbb
and
inc
je
and
mov
mov
pop
cmp
adc
adc
or
add
dec
pop
add
adc
dec
in
pop
lods
fistpll
sti
les
xchg
es
bound
adc
inc
inc
dec
inc
xchg
adcl
in
push
pop
jae
mov
and
cli
pusha
cmp
jo
xor
inc
lock
jnp
mov
xchg
mov
push
xor
ret
std
outsb
mov
data16
sbb
rol
mov
inc
sahf
dec
mov
add
sti
sub
jecxz
inc
add
lret
mov
push
mov
mov
or
jnp
push
roll
adc
fadd
mov
repz
mov
pop
cmpsl
dec
sbb
or
test
scas
pop
sbb
adc
sbb
movsb
inc
lods
les
push
adc
or
hlt
sarl
mov
ds
ret
mov
pop
cld
inc
inc
or
popa
dec
test
movsb
or
fstpl
add
and
xor
dec
enter
sub
sbb
jo
arpl
mov
jb
or
enter
adc
arpl
or
adc
inc
je
arpl
outsl
adc
fisubrl
insl
ficoml
ja
add
xchg
rolb
in
xor
jo
std
adc
sbb
jmp
nop
daa
sub
addr16
xor
xor
xor
in
sub
jl
pop
pop
sub
popa
mov
add
mov
aaa
dec
adc
fidivl
das
add
jg
adcl
xchg
das
jns
js
add
and
rorl
shll
fisttpl
mov
outsl
xorl
adc
push
and
andl
push
xchg
enter
inc
lcall
or
pop
loop
dec
xor
fmuls
leave
and
xor
insb
movsl
mov
cmp
jo
loope
jno
aaa
cmpxchg
cmp
cmpsb
jmp
shll
dec
incl
push
sbb
push
add
data16
inc
mov
mov
or
inc
push
or
enter
nop
call
add
add
cmp
adc
inc
out
loope
push
sbb
push
lods
xor
sti
in
push
test
add
js
jne
enter
jecxz
sbb
adc
inc
mov
xor
and
das
xlat
dec
pop
xchg
add
mov
imul
add
dec
mov
jl
into
add
ror
stc
xchg
mov
add
sub
popa
fmuls
or
enter
or
pop
inc
dec
mov
iret
adc
mov
inc
and
or
jnp
mov
cmpsb
cmpl
repz
xchg
adcl
rorl
andl
andl
push
push
fldcw
sub
inc
and
insl
inc
xor
add
test
xorb
imull
push
add
push
fucomi
inc
xorb
fidivs
adc
and
xor
mov
xor
nop
push
fdivr
inc
push
or
aam
leave
mov
dec
ret
sub
in
or
add
adc
or
call
out
push
lret
fmul
dec
inc
or
pushf
jle
ja
push
out
test
sti
jl
inc
push
es
pop
adc
xor
mov
add
and
cld
pushf
leave
mov
movsl
mov
jmp
imul
pushf
incl
cld
mov
and
ficoml
add
je
das
addb
add
cmp
push
and
adc
sbb
jmp
xorl
fidivrl
push
adc
sarl
push
mov
test
popa
cmovo
not
pop
dec
aas
mov
dec
jb
adc
testb
cli
inc
sbb
incl
dec
jne
sbb
nop
inc
add
or
cltd
sub
out
adc
add
cmp
rorb
inc
and
test
insb
add
mov
add
js
inc
add
or
and
pop
mov
ret
es
push
sbb
adc
sbb
sbb
cmp
sbb
cmpb
inc
pop
xor
imul
add
sub
pop
stos
mov
insb
movsl
or
sub
loop
lods
test
lock
or
shr
inc
or
or
add
jmp
fcomps
ret
dec
jg
rorl
lahf
pop
xor
pushf
push
pop
xchg
dec
adc
or
and
imul
call
sub
pop
mov
rorl
mov
mov
hlt
jbe
std
cs
testb
pop
les
jl
inc
ret
and
pop
out
add
adc
mov
mov
loope
xor
imul
test
cltd
add
out
test
repz
loope
cmc
push
ja
adc
or
outsl
dec
mov
jge
push
shl
push
sub
add
shr
and
push
inc
outsl
aas
das
push
js
xor
js
pop
sbb
push
and
adc
repnz
pusha
fmull
fcoms
popa
pop
insl
mov
or
adc
add
pop
and
adcb
lcall
add
ror
sub
add
adcl
push
push
enter
mov
or
xchg
pop
cmp
xor
or
push
or
out
pop
clc
lcall
mov
pop
pusha
mov
stos
aaa
ret
mov
cmp
jmp
rolb
shrb
mov
or
insl
sub
ja
mov
sub
fidivrl
push
and
shlb
scas
in
out
add
call
inc
mov
pop
add
push
adc
add
inc
or
les
pop
popf
xlat
add
pop
sbb
dec
xor
stos
pop
dec
mov
dec
pushf
mov
decb
rorl
sbb
push
mov
lret
stos
inc
jns
mov
call
jle
js
cwtl
push
or
mov
bound
outsb
fadd
enter
roll
test
lock
jbe
xchg
js
ret
or
pop
ret
or
push
daa
daa
xchg
aas
rol
cwtl
dec
or
xor
mov
mov
cltd
mov
and
sub
lea
in
and
adc
mov
cmp
cmp
add
fildl
data16
push
or
inc
mov
inc
int3
inc
jl
inc
jl
imul
pop
imul
cwtl
sahf
rorb
add
push
std
xor
jecxz
xchg
das
sbb
ds
and
sub
out
filds
or
inc
incl
repz
dec
dec
test
add
adc
sti
mov
mov
adc
add
dec
jge
addb
add
push
inc
test
mov
jmp
clc
dec
jg
je
call
mov
dec
add
daa
ret
lcall
xchg
adc
loop
dec
xor
mov
or
pop
add
cmp
icebp
push
adc
in
cmp
clc
jnp
inc
add
lahf
add
rorb
je
idiv
or
lods
sbb
inc
and
sti
scas
adc
xor
mov
cmp
jne
sbb
pop
mov
in
data16
inc
or
or
mov
shl
mov
leave
adc
sbb
fisttpll
rorb
jo
dec
add
adc
cmp
fadds
push
push
jl
imul
dec
and
cmp
mov
jnp
fnstcw
adc
and
adc
mov
neg
and
and
adc
or
xor
mov
lahf
movsb
icebp
jl
fnstcw
lods
pushl
aaa
cmp
xor
jecxz
jle
add
mov
add
lret
add
das
jnp
pop
xor
daa
aaa
jle
add
aaa
xor
test
add
mov
fsubrs
jle
cs
sbb
xchg
jnp
mov
inc
jo
inc
push
shrb
lret
adc
add
scas
je
pop
call
adc
add
aas
adc
xor
outsl
xor
mov
roll
or
pop
fidivs
fldenv
push
mov
sbb
pusha
movsb
inc
sti
fwait
loop
jge
sbb
push
jne
jmp
hlt
and
insl
loope
mov
pop
xor
repnz
inc
jb
jne
into
pop
xor
andl
stos
push
xchg
loope
sub
cmpsl
and
addl
dec
add
aam
rcll
xor
jo
enter
leave
push
add
fidivrs
jne
pop
pop
insl
and
shll
add
push
aam
popa
cmpsb
push
shl
mov
inc
imul
movsl
and
jl
sbb
rolb
clc
stc
pop
mov
stos
fadds
xor
test
call
jl
insl
jb
jge
pop
aas
add
sar
lea
pop
adc
negl
pop
std
les
movb
adc
or
test
adcb
fstpl
rorb
sahf
dec
int
or
jne
inc
enter
push
xor
popl
jmp
jmp
jns
hlt
inc
mov
sti
jecxz
mov
mov
ljmp
das
xor
fcomps
and
mov
cltd
int3
lret
jmp
es
inc
add
dec
cmc
push
mov
push
mov
test
sub
pop
ss
xlat
scas
cmp
and
fwait
addb
repnz
filds
push
shlb
xor
icebp
fnstcw
sbb
out
add
sbbb
ficoml
mov
and
mov
fnstsw
daa
rcl
add
adc
push
jmp
inc
out
mov
sti
lcall
add
add
movsb
mov
sbb
adc
mov
add
inc
mov
into
mov
dec
or
add
pop
mov
imul
loopne
stos
es
sub
pop
shrl
sarb
ljmp
aaa
push
add
jl
loopne
sbb
add
aad
pop
xor
inc
adc
sar
je
push
add
incl
sub
and
ljmp
outsb
sub
arpl
fimuls
and
cltd
stc
sub
add
xchg
inc
xchg
es
cltd
or
mov
std
lcall
shl
sub
lea
or
inc
out
fwait
sub
push
jne
lahf
xorl
mov
jne
and
dec
dec
push
sbb
fadd
mov
inc
rolb
int
je
add
repnz
add
cmp
or
rcrl
fnstenv
jns
push
mov
adc
sub
push
push
fisttpl
rcrb
push
or
lods
dec
push
test
pop
nop
pusha
cmp
jg
pop
jne
pop
insb
pop
insb
stos
rcll
test
jl
repnz
add
test
stc
outsl
push
sbb
sub
push
mov
pop
inc
sti
inc
and
fstp
rcrb
dec
xor
roll
add
push
mov
inc
int
jmp
iret
scas
adc
sbb
mov
hlt
jmp
enter
loopne
sbb
mov
lock
add
jp
testb
mov
nop
insb
arpl
pmulhuw
and
pushf
sub
jne
aad
add
add
lret
adc
fcoml
ss
and
insb
mov
orl
in
cmp
or
nop
adc
psubsb
rorb
pop
xchg
notb
pop
mov
jmp
iret
sarb
pop
and
or
cmpsl
inc
addb
dec
jnp
adc
jmp
jmp
pop
jl
adc
subb
or
out
sahf
adc
add
dec
adc
div
and
sbb
add
sub
mov
pop
clc
imul
push
or
push
les
push
pusha
dec
into
gs
repz
sbb
mov
rcll
incl
jmp
sbb
je
mov
jb
in
cmpl
cmpsl
add
out
add
psubb
bound
push
xchg
cmp
flds
and
pop
jl
addr16
mov
mov
pop
shl
std
arpl
pop
js
or
add
mov
sti
mov
and
lea
and
or
push
andl
xchg
iret
cmp
lahf
stc
mov
jg
test
adc
xor
ljmp
fldcw
and
dec
stc
sbb
add
xor
ret
pop
jns
lret
add
test
push
fsubl
push
and
push
lret
sbb
lcall
imul
mov
repnz
insl
jg
pop
fstpl
lock
mov
aam
lods
test
rcrl
ja
test
and
mov
ret
loopne
loope
loope
or
add
mov
pop
iret
mov
scas
vcvttps2dq
sbb
jno
test
movsl
push
jmp
cmp
je
sbb
lret
push
cmpsb
mov
jne
push
mov
pop
inc
inc
lahf
push
mov
pushl
add
mov
cmp
or
fwait
dec
rcl
adcl
negb
mov
fs
adc
pop
add
mov
loop
fmul
imul
ret
or
and
add
icebp
jno
mov
imul
aaa
push
outsb
inc
add
adc
cmp
sbb
push
adc
inc
adc
in
mov
fs
ja
push
test
fildll
pop
and
mov
test
or
ss
inc
push
shll
add
shr
xchg
dec
sbb
xchg
add
les
pop
add
sub
sbb
cmpsl
xor
mov
shrl
popf
sti
push
jne
sub
pop
xlat
or
sub
out
jb
add
lret
idivl
into
add
sti
lcall
add
sub
jb
or
jb
jns
cmp
je
jmp
outsb
xchg
sbb
xor
out
imul
add
mov
js
jge
pop
sub
in
dec
or
js
sbb
sub
lret
mov
lods
fdivrl
std
lock
or
les
mov
pop
les
and
adc
dec
pop
jo
cmp
lret
test
fmul
lret
jae
jmp
sbb
es
iret
repnz
sti
sti
pop
adc
add
xchg
add
cltd
or
push
mov
jne
dec
sub
mov
push
dec
jne
arpl
push
pop
rorb
dec
push
pop
xor
pop
jnp
adc
mov
mov
insb
mov
js
inc
cmp
xchg
dec
sbb
pop
jne
sub
lea
and
push
fcoml
addr16
or
sub
insl
push
nop
mov
loope
pslld
into
das
mov
adc
pop
pop
jle
pop
je
pop
je
pusha
mov
push
sub
insl
outsl
fisubrl
jmp
add
sub
pop
insl
mov
adc
arpl
sub
inc
cmpsl
mov
mov
adcb
mov
push
data16
sbb
pop
mov
loopne
inc
xchg
lea
jl
pop
jl
sub
xchg
enter
popa
in
push
sbb
add
xlat
in
xchg
adcb
add
and
xchg
insl
cmp
pop
sub
out
add
or
aas
lcall
stos
loopne
xor
roll
mov
mov
rclb
daa
push
aas
ds
shll
jns
scas
addb
inc
lock
insl
stos
das
dec
in
addr16
push
add
push
or
push
or
pop
in
mov
cmc
dec
bnd
jmp
add
and
xor
add
inc
pusha
mov
jae
push
jnp
xor
cmp
out
in
push
mov
loopne
xchg
test
xor
xchg
lods
lock
jmp
jne
inc
push
sub
popa
lret
or
enter
bnd
ja
push
xor
jmp
rcrl
push
popf
mov
sub
lret
cmpsb
cli
sbb
lret
dec
inc
or
outsl
cmp
inc
push
test
adc
pop
sub
orl
cwtl
push
ret
dec
loop
scas
pop
push
push
pushf
pop
jne
adc
rolb
adc
clc
shl
add
inc
xchg
push
shlb
cmpsb
test
movb
cmpsl
or
jnp
jmp
movsl
cld
roll
adc
lea
test
lret
imul
adc
adc
stc
or
roll
push
gs
sbb
sti
mov
test
or
fsubrl
rorb
es
jb
dec
cmp
jmp
add
mov
stos
pop
xor
jno
fcomi
stos
push
push
mov
fimull
incl
pop
sbb
sti
and
repnz
pop
sbb
inc
or
or
rorb
inc
mov
push
pusha
sbbb
pop
mov
les
jge
dec
add
add
mov
shll
cmp
jle
repz
pop
and
popa
mov
jno
sbb
push
adc
sti
mov
add
cmp
jne
inc
pop
jae
push
jg
mov
inc
mov
inc
test
mov
mov
shr
xor
sub
mov
divl
dec
xchg
jne
cmc
repz
jne
inc
xchg
jns
sbb
test
xchg
mov
mov
imul
cmp
jmp
mov
divb
xor
js
jne
cmp
idivl
dec
js
js
ret
jle
sub
jbe
sub
or
pop
iret
cs
or
int
dec
idivl
mov
inc
push
fimull
sbb
lret
movsb
mov
jge
stos
mov
cmp
dec
xor
loope
mulb
push
add
inc
in
lea
or
mov
imul
loop
test
xor
xor
rcll
int3
adc
inc
xor
in
add
out
push
xchg
add
and
adc
fadds
sbbl
shl
cld
rol
fnstsw
and
mov
and
iret
cmp
fwait
inc
loop
push
and
and
shll
out
jmp
or
loop
addr16
cmp
jge
or
mov
xchg
mov
cs
sbb
and
add
mov
mov
in
add
decl
rcll
and
sub
movsl
test
shl
cmp
sbb
ljmp
add
add
lahf
fidivl
push
jno
or
aaa
or
cld
daa
mov
cmp
or
pop
jo
aaa
inc
xor
jnp
or
xor
lcall
daa
testb
ss
push
sbb
data16
js
fdivrp
jg
pop
mov
sub
mov
and
mov
mov
mov
mov
ror
mov
fadd
mov
int
loop
jle
cmp
jl
push
cmp
ret
adc
cs
jge
add
outsb
push
mov
adc
push
cli
push
not
shll
lods
mull
jecxz
mov
cmc
scas
mov
pop
rclb
fsubr
addb
jnp
cmpsl
pop
push
dec
add
loopne
inc
sar
in
add
pop
lock
cmp
jg
cmpsl
cmp
push
inc
xor
cmp
push
xorb
std
and
push
or
mov
ss
hlt
jle
sbb
xor
in
xor
adc
adc
andl
rorb
or
mov
or
pop
sbb
cmp
push
mov
jo
push
int
push
orb
and
ds
outsb
sbb
ds
pop
mov
jecxz
lock
rolb
dec
or
inc
add
or
jns
dec
add
lds
dec
sub
push
fs
push
mov
cmp
dec
xlat
imul
adc
or
sti
add
in
popa
sub
or
add
add
push
ds
adc
push
sbb
clc
imul
je
or
je
sub
xchg
sub
loopne
and
xor
loopne
mov
jb
or
bts
int3
divl
je
cmp
push
adc
fsubrp
and
notb
je
mov
inc
add
adc
add
push
pop
jns
push
add
pop
sub
scas
in
in
add
stos
sub
mov
lods
mov
push
add
adc
ds
push
push
mov
inc
lock
sbbb
stc
insl
rclb
adc
rcr
cmp
testb
mov
in
jne
push
movsl
cmp
loopne
inc
in
imulb
jg
cmp
xor
testl
cli
mov
cmpsl
cltd
or
xor
xchg
jno
fadds
sub
and
sub
pop
clc
add
or
test
leave
adc
leave
clc
clc
clc
and
jb
xchg
add
pop
and
cltd
add
clc
xor
add
jb
clc
test
xchg
or
pop
ds
je
push
mov
inc
psubb
sub
adc
jmp
stc
inc
adc
in
clc
jb
stc
jb
cmc
jae
push
fs
push
in
lds
pop
out
pusha
push
mov
mov
js
adc
daa
jmp
and
je
adc
or
pop
sbb
adcl
dec
insb
fs
addr16
divb
in
jo
jo
lret
dec
jno
sbb
repnz
or
jg
xchg
add
adc
fdivr
adc
sub
les
in
aam
cmp
jns
push
test
std
inc
xchg
pop
xor
lods
add
pusha
cvttps2pi
ret
and
inc
mov
mov
fdivp
repnz
imul
xor
dec
fdivrs
int3
jge
repnz
push
push
add
mov
lahf
or
fistps
and
add
punpcklwd
push
stc
cmp
sbb
add
fwait
push
lods
dec
pop
jle
jno
lods
mov
sbb
fistpll
shll
sub
es
lods
ret
and
jne
imul
mov
sbb
sub
fsubrs
push
test
je
inc
sub
xchg
cmp
mov
jmp
test
hlt
inc
adc
adc
cmc
jae
mov
mov
lcall
lods
mov
inc
jne
pop
mov
and
les
xor
inc
ljmp
cwtl
and
xchg
push
mov
sub
imul
mov
in
fisttpl
imul
je
or
je
aas
je
fistpll
arpl
or
int3
shr
add
inc
mov
or
shll
pop
mov
les
or
or
sbb
popf
inc
in
mov
fldenv
fldenv
dec
jae
fwait
jp
nop
stc
sbb
cltd
icebp
cmp
jbe
out
adcb
mov
movsb
out
cwtl
inc
cmp
in
sbb
mov
mov
cmp
dec
enter
push
dec
dec
cwtl
mov
or
or
imul
pop
jmp
xchg
jl
mov
inc
jle
jbe
mov
test
cmp
pop
push
dec
outsl
cli
adc
mov
sub
popa
pop
dec
movb
mov
jne
pop
dec
pop
scas
cmpsb
insl
or
aas
adc
mov
loope
sub
pop
jb
mov
add
add
pop
jg
repnz
add
loope
or
dec
ljmp
and
sbb
aam
sbb
push
shrl
xor
mov
cs
push
mov
fnstcw
fidivrl
inc
add
aaa
repnz
add
adc
movsl
jl
pusha
mov
add
incl
or
hlt
pop
mov
movb
inc
adc
sbb
mov
pushl
xor
cmp
adc
enter
add
or
insl
or
push
arpl
inc
inc
add
xchg
cmp
inc
mov
xchg
movsl
cmp
add
lcall
jmp
xor
or
push
and
xchg
lea
or
sub
add
mov
mov
pusha
lea
lds
loopne
pop
jb
sub
cwtl
cwtl
leave
push
stc
andl
insb
adc
pop
ret
or
test
jle
pop
jne
mov
mov
mov
mov
inc
push
dec
cli
xorb
dec
enter
push
inc
push
cmpsl
push
incl
push
icebp
dec
add
add
fiadds
push
lea
out
jge
dec
test
test
inc
xchg
cwtl
js
bound
sbb
test
mov
pop
cmp
add
and
and
div
fistps
sub
or
or
sbb
push
bound
cmp
cli
shl
out
mov
lea
sbb
xchg
in
sub
pop
xchg
and
subl
sbb
imulb
jmp
loopne
clc
incl
loopne
sarl
adc
mov
shll
mov
sub
push
mov
push
sbb
pop
test
xchg
push
stc
mov
negb
lea
lea
stos
add
push
mov
fsts
mov
repz
adc
adc
jbe
rolb
jne
mov
jp
bnd
cmp
jno
mov
sub
or
push
fldl
aad
scas
adc
add
add
jge
push
add
daa
sub
pop
cmp
jg
popa
insl
fcompl
cltd
mov
mov
les
outsb
xor
lock
add
push
int3
inc
imul
pop
in
fiadds
rcll
lock
sbb
mov
enter
jecxz
xchg
stc
cwtl
pop
or
cmp
and
loop
xor
or
push
iret
into
dec
xchg
rcr
and
adc
dec
cmp
jl
jmp
add
sub
outsl
out
inc
mov
shlb
adc
fsubl
pcmpgtw
push
negl
jnp
adc
movsl
in
ret
jmp
and
daa
daa
out
jg
repnz
imul
add
pusha
adc
cmp
xchg
xchg
nop
in
mov
not
or
mov
jmp
jg
and
jb
and
sub
jae
add
xor
movl
aam
jl
shrl
mov
out
push
dec
xorb
dec
push
add
sbb
int
push
dec
inc
je
iret
pop
adc
mov
addr16
pop
xlat
inc
clc
push
push
pop
push
shll
dec
jae
push
inc
sbb
jg
sub
jne
sbb
xor
imul
js
xor
add
aad
sbb
cmp
add
xchg
cwtl
loopne
pop
mov
add
adc
mov
add
cmp
faddl
aaa
cmp
hlt
inc
rcrl
pop
cmp
iret
push
mov
mov
dec
inc
adc
add
add
sarl
mov
das
fwait
sub
rcrb
cmpsl
lahf
daa
adc
adc
mov
jnp
inc
sub
add
and
stc
icebp
out
js
or
and
sbb
adc
xchg
cmc
mov
xchg
testb
adc
or
jb
mov
sbb
sub
jno
andb
pop
inc
pushf
add
aas
test
subb
insl
dec
pop
lcall
int
les
mov
jns
movb
add
aam
adc
or
das
and
xchg
in
xor
pop
cs
adc
jnp
cld
mov
loopne
je
mov
or
arpl
mov
faddl
add
pop
mov
cmp
push
inc
pop
mov
out
loopne
lret
ror
or
add
push
pop
in
add
or
enter
lcall
or
enter
and
dec
and
and
cmp
push
cmp
add
and
sbb
outsb
cli
adc
or
mov
and
fldcw
mov
mov
jae
out
sti
mov
adc
lock
pop
stc
mov
je
jmp
sub
fwait
pushf
fmull
adc
pop
enter
stos
andb
sub
stos
xchg
cmc
fldcw
xchg
or
cs
and
adc
lea
mov
cmp
sub
rorb
mov
pushf
neg
mov
add
add
addr16
add
mov
inc
mov
cmp
xchg
xchg
adc
scas
sarl
lods
dec
in
jl
mov
lock
aaa
pop
movsl
les
jne
mov
add
fnsave
inc
or
std
adc
inc
sbbl
test
iret
mov
jmp
or
lods
sub
jmp
cmp
adc
inc
xor
cmp
inc
add
adc
mov
xlat
cmp
push
je
xchg
xchg
test
adc
gs
andb
lock
push
add
popa
pop
clc
jmp
call
mov
cmp
je
mov
outsb
ja
mov
sub
mov
and
shl
mov
addb
lahf
cltd
cmp
js
adc
xor
outsb
push
mov
jb
and
mov
inc
idivl
adc
inc
xchg
and
in
lret
test
push
mov
sbb
addr16
add
xor
mov
push
sub
sti
arpl
hlt
cmp
insb
ja
mov
sub
cli
out
sbb
xchg
lea
dec
ss
aas
mov
aad
xchg
cmp
je
jge
jno
je
stos
filds
jbe
jg
add
repz
and
push
push
popa
dec
pop
add
inc
sub
aas
or
out
out
int3
int3
add
mov
adc
inc
push
rorb
xchg
adc
aam
ja
jbe
mov
dec
push
jbe
and
enter
mov
push
inc
jmp
cmp
or
or
sub
fwait
or
fs
and
push
aad
aam
xchg
ja
call
movl
and
shrl
push
lea
test
ret
xchg
mov
push
jno
sbb
jp
iret
rolb
loope
shll
xlat
sarb
lock
adc
and
xor
idivb
das
enter
mov
xor
jne
cmp
outsl
mov
xchg
cmp
or
cmp
movsl
xchg
mov
jns
add
adc
ret
sub
subb
push
ja
jg
xor
add
mov
ret
jae
jno
iret
and
cwtl
lock
je
xlat
add
jmp
dec
mov
shl
es
sar
add
adc
cmp
shll
pop
popf
xor
add
sbb
inc
bound
fdivs
cmp
adc
sub
push
jl
cmp
and
sbb
sub
je
ret
data16
lea
mov
inc
daa
xor
dec
or
sti
push
push
inc
mov
jo
lods
mov
das
mov
sub
add
pop
fsubrs
ja
sub
xchg
xor
or
push
test
lods
adc
lods
xchg
adc
cmpsl
loopne
sarl
inc
subl
or
push
mov
push
add
sub
inc
std
lea
push
push
call
arpl
mov
insb
mov
adc
dec
mov
mov
xchg
mov
sub
mov
scas
add
stc
and
xor
mov
add
dec
icebp
dec
add
inc
orl
dec
adc
sbb
mov
or
add
push
pop
dec
sbb
pusha
inc
test
add
dec
cmp
ret
or
fcompl
add
inc
jae
sub
out
in
insb
push
inc
jb
inc
in
or
add
insb
cmp
insl
and
cmp
loopne
dec
aam
int3
add
in
mov
cld
or
pop
xor
hlt
sub
sub
in
pop
rcll
and
lock
fs
js
fldenv
lea
inc
cs
fcoml
loope
xor
mov
add
inc
or
pop
testb
ret
cmp
aad
mov
mov
push
ja
push
or
js
loope
lret
js
cld
stc
loop
dec
imul
inc
jne
out
push
jmp
cmp
inc
inc
aaa
lret
sub
dec
jle
xor
add
les
xlat
or
shl
loope
cmp
inc
cmovle
lock
mov
adc
pop
add
sbb
or
add
or
dec
cmp
push
js
push
jne
sbb
leave
add
or
sub
sbb
mov
dec
lret
rorb
gs
mov
inc
cmp
loopne
je
aad
pop
iret
inc
ror
ja
mov
fimull
int
sub
stos
gs
cmpxchg
shlb
add
add
push
xor
xor
mov
push
add
mov
psubb
adc
mov
mov
test
or
dec
je
in
mov
add
and
add
push
lock
popa
dec
dec
icebp
inc
pop
dec
jne
mov
and
xchg
xor
and
int
ljmp
addr16
dec
jne
jb
and
outsl
pop
dec
cmovno
insl
xchg
adc
popf
test
repnz
add
lods
sar
push
call
inc
test
daa
xorl
pop
mov
fadd
or
test
decl
cmp
sarl
mov
xchg
adc
mov
and
mov
push
push
fsubrp
dec
test
call
and
shrl
shll
jns
cltd
leave
out
in
xchg
popa
shl
sub
and
push
lret
ret
and
sbb
rol
loopne
js
aaa
das
loop
sbb
and
add
cmpsb
push
in
mov
pop
add
aad
mov
inc
mov
inc
cmc
fisttpll
dec
je
addr16
rolb
ds
outsl
in
mov
rcll
push
imul
jno
adc
push
cltd
inc
iret
and
push
in
dec
fs
fldenv
inc
xor
jno
and
inc
sub
imul
shlb
and
repnz
je
pop
je
xor
sbb
cmp
pop
mov
adc
fcoml
rorl
imul
pop
mov
mov
add
movsb
jp
pop
pop
dec
fs
scas
and
fistl
test
or
push
daa
into
push
push
out
sbb
lcall
dec
jg
movb
mov
mov
test
mov
loop
sbb
dec
inc
adc
adc
call
dec
rcrl
inc
sti
outsb
dec
das
popf
dec
mov
fcmovnb
or
sti
mov
push
dec
addr16
test
add
and
pusha
pushf
lret
pop
adc
test
pop
aaa
adc
loopne
test
ss
mov
je
popa
loopne
xchg
and
sbb
jb
jle
lock
push
loope
out
scas
dec
mov
pushf
nop
inc
loopne
incl
insl
fisttpl
inc
mov
leave
fisttpll
mov
leave
fidivrl
fnstsw
test
je
rcr
mov
xor
loopne
push
add
mov
test
add
gs
pushf
or
xchg
sarb
xchg
rol
test
aaa
adc
cmp
pop
or
je
inc
mov
inc
ss
cmp
fucom
fadd
add
cld
or
or
add
push
fs
and
cli
lea
push
aaa
js
jb
aas
adc
mov
and
xchg
scas
push
test
sarl
mov
fcompl
shlb
push
jle
xor
and
xchg
test
mov
mov
xchg
xchg
or
cmp
iret
mov
sahf
or
mov
cmp
and
mov
out
mov
cli
add
bound
nop
shlb
inc
mov
mov
push
sbb
xchg
sbb
imul
xlat
gs
mov
sub
and
or
leave
nop
push
and
icebp
add
loop
popl
adc
pop
push
mov
jb
inc
popa
mulb
xchg
xchg
leave
nop
rorl
sbb
andb
jecxz
das
leave
xor
int
hlt
adc
jp
or
mov
xor
mov
hlt
jo
jno
prefetch
or
or
sbb
fadds
inc
mov
jmp
mov
mov
loopne
cmp
jnp
or
or
sub
dec
cmpb
push
mov
pop
mov
jge
or
push
lea
cmp
test
ss
sbb
or
add
jmp
cmpsb
xor
fdivs
jle
sbb
or
add
sbb
mov
cltd
insl
inc
sub
xchg
lock
jae
call
aam
movsb
rorl
add
mov
inc
movsb
xor
mov
int
movsb
mov
mov
cli
dec
inc
add
enter
push
push
rolb
nop
inc
pop
or
add
cmp
loop
push
dec
js
js
push
inc
jmp
adc
jmp
loope
push
adc
push
jbe
push
sub
dec
out
add
push
dec
movsb
sbb
nop
je
clc
push
int
dec
shll
loopne
add
xchg
mov
lods
ret
cmp
xchg
dec
fsubp
add
inc
sub
cs
cmp
imul
xor
jmp
xor
cmp
popw
and
sub
and
inc
mulb
ret
test
push
add
dec
hlt
push
cmp
outsl
sub
shll
pop
mov
xchg
mov
push
hlt
loopew
cmpsb
repz
dec
js
test
inc
movsl
rolb
loopne
inc
pop
mov
mov
rorb
add
pop
cmpl
add
nop
cmp
jo
daa
push
rolb
jmp
incb
add
or
jne
faddl
sbb
nop
xchg
movl
cmc
movsb
add
je
inc
loope
sbbb
std
insl
test
jns
jb
je
aas
xchg
je
jo
push
jbe
push
push
mov
pusha
add
inc
rolb
jnp
dec
outsb
jne
je
add
cmpsl
cmp
xchg
or
jl
mov
movsl
mov
push
stos
cmp
sbb
lock
aas
loop
cmp
and
ret
jge
sarb
testl
mov
dec
fistps
packsswb
push
pop
gs
fcmovu
and
pusha
push
push
daa
mov
push
pop
out
in
out
mov
repnz
dec
or
lock
add
push
dec
test
add
pop
or
je
aaa
xor
leave
xlat
es
adc
mov
jne
jecxz
adc
popa
adc
shlb
pop
enter
dec
les
je
cmpsb
imul
idivb
jne
ret
or
mov
xchg
mov
frstor
clc
and
push
pop
loope
pop
mov
movb
movl
add
add
sub
push
inc
lea
jae
inc
fidivs
inc
xor
jle
fistl
gs
or
fdivs
daa
aaa
daa
and
pop
sbb
ljmp
sub
out
xor
adc
jne
inc
sbb
popa
movsb
sbb
dec
outsb
je
xchg
push
fdivrs
fwait
es
xor
orl
xor
test
sub
pushf
shlb
mov
loopne
out
sahf
and
sub
pop
rclb
pop
pusha
mov
push
xchg
loopne
call
ljmp
jmp
sub
popa
xchg
cmp
or
lea
popl
push
nop
or
add
jg
cmp
ss
sub
scas
in
mov
mov
lahf
dec
rcl
mov
adc
and
andb
push
mov
add
insl
test
xchg
push
pop
xor
sbb
push
sub
lea
lds
fstl
add
push
jl
mov
sbb
jge
mov
shrb
push
add
pop
sbb
loopne
jg
pop
inc
xor
loope
aaa
test
xchg
xchg
or
add
int3
shlb
xor
movsl
pop
mov
sbb
push
and
je
xchg
insl
imul
mov
mov
xor
mov
sub
or
mov
shll
or
push
rorl
ss
add
add
mov
push
xchg
ret
icebp
mov
lock
in
or
sub
popa
sbb
xchg
loop
adc
sub
mov
and
adc
movzww
mov
ss
jg
jmp
sarb
sbb
xor
and
shlb
fucomp
nop
add
pop
jg
sub
adcb
aam
insl
xor
in
or
fwait
shlb
and
sbb
and
pop
sbbl
pop
and
cmp
insl
sbb
pop
cwtl
outsl
pusha
add
and
pop
push
inc
add
stc
shld
shll
lret
push
insb
cmp
or
repz
daa
or
outsb
push
in
aaa
mov
sahf
shlb
jmp
mov
arpl
hlt
add
faddp
or
pop
add
pop
jne,pt
inc
mov
dec
pop
sete
fwait
jo
outsl
dec
or
repz
jne
sbb
je
cmp
add
jmp
frstor
add
nop
xchg
int
call
add
shl
mov
jns
xchg
pop
subb
inc
sub
mov
pop
cmp
xor
and
jbe
dec
icebp
dec
mov
daa
mov
xor
dec
clc
push
pop
and
outsb
dec
add
sub
outsb
dec
or
enter
xchg
pop
push
rorb
mov
cmp
dec
xor
repz
pop
mov
mov
sub
bound
test
sub
testl
sub
xchg
push
sub
mov
enter
sbb
das
stos
add
mov
movsb
mov
cmp
mov
xchg
push
add
mov
je
aaa
arpl
add
sbb
mov
push
cs
sub
pop
add
xchg
repz
in
sub
jecxz
jns
cmp
mov
pop
sbb
pusha
mov
fwait
pop
gs
pop
lret
pusha
xlat
mov
aad
xchg
jmp
test
cmp
add
push
cs
sub
popa
decl
sbb
or
loope
fisttps
fsubrs
mov
and
cltd
dec
mov
fldl
or
jmp
adc
push
arpl
test
fnstsw
inc
pop
or
ja
xchg
into
subl
pop
loope
inc
cwtl
pop
jge
push
inc
stc
xor
nop
pop
pop
je
and
mov
mov
shll
shll
scas
mov
pop
push
lea
inc
xlat
shlb
push
inc
mov
jge
or
sbb
mov
pop
xchg
fcmovnbe
inc
int
jg
push
dec
ret
cmpsb
cmp
sub
out
and
nop
or
popa
jne
xor
roll
inc
jle
adc
or
cmpsl
aam
add
iret
gs
cmp
sbb
pop
jno
insl
pop
int3
pop
mov
shlb
or
pop
addl
jbe
lret
push
adc
arpl
and
movsl
push
arpl
test
sub
ret
add
xchg
out
lock
mov
xor
loopne
enter
xor
pop
movsb
push
or
xor
cmpsl
pop
mov
aas
push
add
out
stc
repz
or
dec
push
push
sub
arpl
or
adc
push
sub
push
das
xchg
push
rcrl
xor
test
test
lock
or
rcrb
pop
xchg
add
sub
jmp
fbstp
sbb
add
jbe
jmp
inc
sub
push
je
add
aad
test
push
orl
push
in
jmp
loope
jnp
xchg
aaa
or
jmp
adc
loopne
arpl
or
xor
adcl
sbb
inc
jmp
dec
imul
jns
jns
adc
mov
push
dec
lock
adc
not
and
cld
insl
imul
test
xchg
adc
push
aaa
popa
mov
js
loopne
and
nop
cltd
mov
adc
sbb
inc
sbb
jmp
andb
rorl
faddl
inc
divb
sub
mov
cmp
mov
mov
out
mov
jne
adc
mov
idivl
xchg
jo
xor
cli
add
ror
popf
lret
push
cmpb
pusha
cmp
push
shlb
push
stc
pop
and
push
lahf
es
push
lea
andl
loope
push
fistl
or
push
outsb
std
add
pop
inc
xchg
mov
mov
mov
or
lret
pusha
ret
bswap
test
imul
mov
cwtl
sbb
jmp
cmp
sub
or
flds
or
sarb
mov
lret
adc
jnp
aad
dec
inc
ja
inc
nop
data16
sbb
jle
sbb
sbb
cmp
cmp
inc
or
vpshaw
adc
je
mov
inc
shlb
mov
cli
outsl
js
mov
test
or
xchg
or
add
and
inc
fisubrs
push
xor
mov
movaps
cmp
dec
imul
shlb
jnp
and
push
outsb
push
sub
sub
repz
jl
mov
cmp
adc
dec
sub
es
inc
add
or
test
lods
in
jb
add
fadds
jb
je
xchg
xchg
add
add
add
imul
dec
inc
flds
or
shlb
push
cwtl
and
cmpsl
aas
jle
cmp
jge
push
shrb
sbb
or
sbbl
cltd
addr16
mov
cmp
roll
cltd
inc
push
cmp
aam
test
mov
mov
cmp
cmp
mov
adc
sahf
aam
sub
lret
fmull
sbb
cmp
ret
adc
add
test
pusha
mov
push
mov
mov
lock
rcll
mov
call
mov
add
inc
gs
add
or
pushf
repnz
dec
ret
sbb
push
sub
push
pop
sbb
loope
pop
jecxz
mov
mov
pop
push
inc
add
xor
push
dec
jge
pop
js
lret
movzwl
adc
inc
fsqrt
fisttps
cmp
dec
cmp
rorl
mov
add
xchg
aaa
mov
mov
or
push
stc
xchg
fstl
inc
jnp
in
rclb
xchg
xchg
icebp
fiaddl
jns
mov
xor
xor
ud1
xor
xchg
push
jmp
or
fwait
xor
and
fcomps
sbb
sbb
adc
popa
sbb
lea
pop
cmp
jmp
pop
cmp
cmp
xor
sbb
fwait
adc
mov
sub
sub
ror
cmc
add
push
aas
lea
clc
sub
call
sbb
inc
xorb
mov
negb
jo
cltd
fcmove
movsl
in
or
lret
push
mov
push
jnp
lea
sub
jmp
dec
clc
fcmovu
sub
cmc
dec
je
aad
clc
sbb
sub
sub
jmp
cmp
shr
cs
popf
adc
or
sub
je
add
xchg
mov
sarb
test
mov
sbb
and
fmull
dec
iret
mov
mov
or
pop
rclb
cmp
rolb
stos
loopne
in
and
push
aaa
hlt
sub
xchg
imul
repnz
add
cld
adc
jle
dec
xor
jle
and
cwtl
and
dec
fwait
inc
adcb
daa
jmp
rcll
sub
shll
jmp
mov
and
push
push
or
fldl
pop
sbb
enter
or
dec
add
test
sti
fiaddl
push
push
into
test
push
fistl
mov
fsubl
pusha
imul
adc
and
pop
xor
sub
mov
enter
punpckldq
mov
in
lahf
and
loop
inc
loopne
push
mov
fsubs
and
adc
or
dec
xor
push
not
mov
mov
vpshlb
xor
mov
ja
fcompl
lds
cli
push
lock
test
sti
ds
sub
jge
adcl
push
js
sub
pop
sub
sub
sub
or
xchg
cmp
jl
mov
test
pop
sub
aad
ret
ret
js
xor
inc
xchg
in
jmp
pop
in
inc
xor
sbb
dec
bound
aam
sbb
in
jge
sbb
pushf
jno
ret
and
pop
fcompl
xor
pop
fwait
add
fs
outsb
rol
or
mov
and
sbb
pop
sahf
loopne
fdivr
loopne
pop
sbb
push
sarb
sarl
lret
notb
pop
repnz
cltd
dec
push
aam
xorb
sbb
pusha
icebp
adc
test
pusha
mov
xchg
cmp
daa
mov
add
lock
les
insl
insl
mov
pop
sub
jno
push
inc
inc
insl
lea
fisubrs
out
data16
rorb
xchg
andb
les
xchg
outsl
cld
stos
les
adc
or
outsb
les
ss
fs
add
loopne
repz
sub
loopne
enter
movsl
pop
xchg
jbe
jmp
or
pop
out
xchg
mov
jne
pushw
push
cmp
inc
jne
mov
jne
pop
mov
inc
jmp
mov
movsl
or
xchg
add
jne
sbb
insl
test
adc
mov
add
jo
xor
ja
addr16
imul
and
xchg
cmpsb
jo
push
add
out
add
push
and
fldcw
mov
cmp
cmp
jb
pop
jno
inc
mov
es
add
sub
test
aam
push
mov
add
lahf
or
pop
or
dec
push
ret
push
dec
or
sub
push
pop
andb
jb
dec
cmp
nop
sub
sub
fidivrl
and
ucomiss
push
pop
xchg
sti
push
dec
repnz
xchg
outsb
add
pop
mov
add
inc
mov
mov
stos
add
pop
les
adc
das
mov
dec
dec
dec
fildll
in
rep
inc
pusha
dec
and
std
repnz
dec
jmp
daa
pop
je
cld
xchg
add
sti
sbb
cmp
pop
push
cltd
dec
add
loope
inc
adc
push
mov
pop
add
pop
jnp
mov
push
sub
je
jns
lock
movsl
movl
xchg
cltd
dec
inc
mov
inc
fidivl
jb
ljmp
testb
je
and
outsb
add
rol
in
push
inc
pop
adc
add
enter
xchg
and
xor
and
shlb
pop
xor
mov
lea
mov
xor
or
and
dec
jmp
add
add
in
cmp
dec
push
or
popa
decb
adc
leave
cmp
jg
xor
or
pop
sbb
sub
push
rcrb
xchg
dec
add
mov
inc
sub
repnz
add
in
xorl
orb
add
or
icebp
test
cld
jge
mov
lcall
adc
add
fwait
jns
push
add
push
test
add
imulb
fcmovnb
pop
add
dec
arpl
add
int
fistl
push
push
or
jne
ficomps
jmp
inc
scas
es
push
and
inc
pop
xor
xchg
add
cmp
push
inc
int
repnz
dec
inc
or
cmpb
push
dec
fcmovne
insb
mov
push
jmp
dec
cwtl
mov
xchg
or
add
push
sub
scas
xchg
hlt
data16
jmp
and
and
sbb
jmp
sbb
dec
sub
jo
insl
sub
lods
imul
add
sub
or
adc
xor
push
and
adc
inc
mov
es
add
dec
repnz
loop
and
or
and
pop
ss
js
pop
push
jmp
cmp
dec
scas
cmp
jbe
sub
fdivl
jmp
je
jmp
push
in
cmp
inc
and
and
sub
sub
leave
mov
and
adc
fists
push
ffreep
daa
jne
js
mov
add
or
sub
sbb
mov
pop
mov
jmp
loopne
cmc
into
es
pop
pop
lock
cmp
fldt
pop
jno
push
xor
xor
sub
sarb
dec
sub
and
out
dec
and
lea
lea
xor
sbb
shlb
mov
pop
daa
inc
sbb
or
dec
or
xchg
inc
inc
mov
pop
xchg
leave
loop
mov
das
push
push
sub
or
scas
jge
call
adc
pop
adc
mov
aaa
fidivl
mov
pop
dec
lock
bnd
jle
adc
sub
mov
mov
lock
sahf
xlat
xchg
into
inc
add
and
pop
repnz
adc
inc
push
inc
cmp
dec
add
inc
mov
data16
or
movl
or
sbb
add
sub
movsl
sub
jo
xor
xor
push
mov
les
xchg
ret
stc
jo
sahf
inc
and
arpl
or
adc
push
pop
dec
sbb
add
movl
jns
adc
rorl
jecxz
inc
add
sub
rcrb
and
shlb
insl
dec
ret
mov
imul
jb
adc
or
dec
inc
push
xor
aas
sarb
out
bound
sub
dec
or
fneni(8087
clc
std
pop
push
in
cmp
jle
cmp
lcall
pop
les
add
sahf
inc
push
sub
aad
fmuls
sub
add
mov
testb
insb
jo
mov
and
mov
xchg
xor
mov
sbb
sbb
sub
add
mov
repnz
add
popa
xchg
insb
test
adc
loopne
shll
psllw
jmp
mov
inc
rcll
cmp
jl
mov
lcall
sub
aaa
outsl
xlat
inc
add
test
jne
pusha
leave
rorl
or
cmp
push
fcomps
cmc
sbb
xchg
dec
or
pop
ret
lea
adc
dec
cmp
outsl
sbb
enter
fcmovnbe
test
adc
jp
out
fmuls
add
xor
adc
lea
fimuls
jno
fdivrs
fisubrs
or
sub
ja
xchg
add
pop
mov
sbb
jne
out
out
cmpsb
inc
sbb
jmp
adc
ja
mov
sahf
push
add
mov
pusha
inc
xlat
daa
sti
jge
pop
xlat
pop
add
add
or
sub
negl
jno
cmp
jge
jl
pusha
lret
ss
popf
test
fistl
mov
setge
pop
jae
fmulp
xor
sub
mov
xor
jp
mov
movsb
jle
jle
add
cmp
push
testl
test
lret
jae
sub
testl
add
mov
cmp
mov
pop
sbb
jecxz
push
mov
insl
in
jns
fstpl
lods
filds
lods
lock
loopne
mov
sbb
inc
pop
sti
and
addb
and
fnstcw
repz
pop
jmp
or
dec
dec
pop
mov
xchg
and
cwtl
std
sti
and
mov
cmpsl
jb
cmp
pop
sub
jg
lret
cld
fstpt
jmp
jmp
mov
inc
sbb
lret
xchg
adc
daa
add
stos
out
xor
sub
dec
sti
ret
movsb
cltd
add
jl
adcl
dec
cmp
mov
adc
or
add
jb
ret
mov
shlb
dec
jns,pn
sbb
jmp
cli
repnz
jnp
or
mov
iret
dec
adc
lea
push
inc
xor
stos
test
mov
scas
jmp
dec
ds
push
outsb
outsl
add
pop
cmp
jb
cmp
jbe
and
inc
dec
lods
dec
in
test
and
das
mov
jge
pop
test
daa
xchg
cmpsb
mov
xchg
icebp
xchg
movsl
mov
cwtl
xchg
cltd
ds
xchg
pop
loop
and
lahf
inc
lods
cltd
lret
in
inc
pushf
sub
mov
cmp
xchg
cs
cmpsl
scas
scas
pop
mov
imul
insb
jns
pop
lcall
imul
and
add
lds
les
mov
jecxz
add
leave
adc
add
dec
mov
rolb
mov
xchg
frstor
outsb
orb
push
in
pop
pop
imul
jg
incb
push
mov
mov
outsl
lea
jecxz
sbb
adc
outsb
jp
add
adc
jo
or
mov
sbb
add
inc
je
rorb
mov
ret
in
ss
jbe
test
add
fdivl
push
mov
pusha
aas
into
aas
push
add
xchg
ret
jmp
movsl
sarb
jne
dec
mov
add
sub
nop
testl
test
cmp
sub
aas
mov
jnp
lret
inc
insb
dec
js
cmpb
pop
dec
push
adc
xor
mov
popa
cmp
clc
xor
push
and
or
aam
out
cmp
bound
xor
dec
xchg
adc
adc
add
cli
ja
mov
adc
push
and
out
gs
push
dec
nop
add
adcl
adc
adc
xchg
cmp
inc
or
lret
ret
or
xchg
mov
add
push
add
mov
or
fsubrp
and
sbb
outsl
add
push
punpckldq
or
sub
adcb
popa
aam
leave
dec
jge
push
test
sbb
xchg
inc
or
loopne
js
jecxz
lret
pop
insl
mov
add
sti
daa
aas
xchg
popf
cmp
pop
add
push
mov
insb
pop
mov
aaa
mov
rclb
shrb
mov
and
notl
xchg
mov
movsl
fxch
ret
movsb
xchg
sbb
mov
xchg
sti
pop
cwtl
leave
xor
add
pushf
lea
ret
and
inc
ret
ret
sub
add
iret
pop
jge
jmp
test
sahf
dec
icebp
orl
mov
addr16
xchg
adc
xor
mov
ljmp
xor
and
sub
add
sbb
mov
dec
in
lahf
add
sbb
mov
cmpsb
pop
test
sti
jmp
add
mov
int3
cwtl
cmp
in
mov
push
nop
scas
push
lret
shrl
sbb
pop
cmpsl
sbb
pop
inc
ret
dec
sbb
lods
push
mov
adc
lret
sbb
out
ljmp
jne
mov
or
fucomi
adc
xchg
cmp
inc
scas
test
clc
or
and
clc
adc
ret
or
add
popf
add
cmp
loope
jne
sub
or
aaa
arpl
dec
pusha
insl
nop
add
or
push
mov
or
dec
inc
insb
dec
stos
push
and
dec
xor
xor
xor
sbb
lods
mov
imul
orb
loop
fadds
add
adc
stos
in
data16
inc
popf
mov
adc
dec
cmp
lret
dec
and
mov
pop
inc
pusha
push
cld
mov
mov
loop
or
sbb
pop
push
and
inc
add
movsb
xchg
adc
inc
adc
paddsw
stos
dec
inc
push
push
shlb
and
inc
rclb
add
adc
subb
push
inc
jne
pusha
popa
adc
lea
pop
fsubrl
ja
out
lret
shll
cmp
mov
push
add
inc
fldenv
popa
lcall
xor
sub
fisttps
and
and
inc
pop
or
add
push
movsl
shr
and
add
fwait
loopne
in
flds
adc
mov
dec
leave
dec
and
mov
and
jb
pop
pusha
push
gs
stc
add
xchg
pop
enter
fs
insb
dec
inc
adc
push
ds
push
push
adcl
loopne
fdivrl
dec
push
lods
je
popf
adcl
fcoml
xbegin
push
sub
repz
mov
or
cld
jecxz
or
sub
cmp
out
jge
xor
test
push
push
jg
lea
dec
pop
xchg
jmp
xor
sbb
sub
pop
cmp
or
enter
mov
or
loop
push
mov
stos
inc
or
adc
mov
pop
cld
bound
push
popa
push
or
insl
mov
outsl
adc
call
push
adc
xor
popf
lret
stos
test
out
mov
push
xchg
dec
or
sti
mov
cmpsb
ss
das
and
cltd
loope
mov
cltd
dec
add
adc
mov
fs
jb
int
and
adc
cli
pop
inc
push
xchg
faddl
or
sub
xchg
cmpl
or
loopne
jne
jge
pop
int3
aad
enter
push
or
xor
imul
or
aaa
subl
out
xchg
xor
xor
mov
outsl
pop
inc
cmc
add
cmp
jne
mov
push
arpl
ret
pop
mov
adc
push
jne
leave
adc
sub
dec
add
pop
mov
aam
and
inc
mov
mov
add
pop
sub
adc
add
add
jmp
sub
mov
sbb
ja
pop
int3
push
pop
popa
mov
mov
jl
xchg
inc
repnz
lea
inc
jle
shrb
dec
or
lock
cmp
fsubrs
inc
pop
pusha
mov
out
shlb
ja
adc
mov
xchg
and
sbb
add
pop
je
adc
pop
ljmp
je
inc
pop
je
pop
jne
and
ret
jb
mov
ret
mov
pop
sbb
rolb
mov
xchg
inc
jge
sub
cwtl
insb
dec
flds
movsl
lods
inc
addr16
pushf
test
pop
inc
adc
adc
sbb
inc
sub
dec
sti
push
clc
cmp
sbb
adc
push
test
orb
mov
sbb
adc
sahf
cwtl
or
mov
cwtl
sbb
jo
pop
mov
cmpsb
pop
pusha
dec
addl
sbb
jbe
inc
mov
cmpsb
adc
xchg
push
ds
pop
sbb
gs
pop
dec
push
pop
mov
cmpsb
stos
mov
push
loopne
fsts
dec
loope
dec
rcl
push
fnstsw
popf
jmp
adc
mov
imul
xor
jp
sbb
dec
or
pop
mov
inc
aad
push
sub
aas
inc
mov
cmc
test
xor
out
add
ret
xor
lods
xchg
sbbb
lcall
pusha
ret
jno
cmp
push
aas
sbb
dec
pop
mov
sbb
mov
jae
dec
cmp
sbb
add
jge
xor
mov
adc
sbb
fmuls
and
shll
mov
in
dec
je
pop
or
fimull
and
lret
popa
add
test
data16
je
push
pusha
cltd
jo
cmp
fistl
or
pop
orl
nop
jae
sbb
inc
mov
and
cmp
loope
shrb
inc
and
pop
movsl
mov
and
cmp
lret
sbb
sub
xor
test
cwtl
movsl
mov
xchg
daa
aaa
and
sbb
mov
fsubs
pop
sbb
mov
dec
shll
orb
sbb
lods
cmpsl
pusha
pop
xchg
ja
adc
mov
and
je
aam
rcll
mov
or
sarb
push
mov
lock
mov
mov
rolb
les
push
xchg
pop
jne
and
xchg
stc
lea
add
cmpsb
into
enter
jno
fistpll
dec
add
xchg
cmp
mov
cmp
int
pop
push
push
and
push
repnz
movl
cmp
test
xchg
jmp
add
lock
subb
in
cmp
shrl
mulb
xor
jne
rolb
data16
enter
xor
inc
inc
sbb
enter
inc
dec
sub
imul
in
outsl
cmp
loope
lret
dec
aad
loop
bnd
imul
cltd
push
dec
xor
js
lods
push
xor
nop
and
cmp
test
add
clc
add
dec
enter
or
or
mov
nop
inc
push
in
dec
cmp
pop
jmp
pop
xchg
and
add
push
push
stos
stos
shl
popf
out
mulb
push
roll
shlb
sbb
sahf
xor
ljmp
int
jmp
dec
out
shll
xchg
mov
sub
and
adc
enter
movsb
dec
jp
cmp
xor
cmp
cmp
xchg
pop
jmp
dec
cmp
out
test
xlat
leave
xchg
push
andl
roll
and
or
push
xor
leave
enter
xor
xchg
pushf
pop
xor
xor
xchg
or
xor
jne
jb
enter
sub
push
xor
sub
sub
xor
push
leave
add
push
xor
jb
and
xor
and
adcl
add
jge
sbb
dec
sbb
xchg
stos
xchg
sub
adc
fs
adc
adc
dec
dec
scas
adc
adc
pop
and
jne
and
or
or
jg
enter
cmp
jg
sti
or
cmc
out
or
or
jb
jmp
sub
test
mov
sbb
sbb
inc
lahf
ret
and
sbb
add
dec
inc
inc
add
dec
inc
cmpsb
in
add
decl
sarl
sub
je
sub
sub
add
jb
xchg
stc
pop
jle
and
adc
je
cmp
loopne
and
mov
or
clc
or
or
xor
ds
bnd
mov
inc
orl
cmp
cs
jae
jmp
sbb
fs
xorb
mov
cltd
xchg
xchg
lock
hlt
xor
orl
negb
jb
xor
adc
and
dec
addr16
call
jb
call
and
in
pop
adc
cltd
stos
pusha
pop
in
dec
inc
inc
loopne,pn
in
cmpsb
in
loopne
in
dec
ret
into
xchg
dec
test
push
in
loopne
filds
push
stos
add
and
das
imul
cltd
pusha
dec
lods
jne
popf
cmpsl
ja
aas
and
sbb
cmp
adc
es
int3
cli
lahf
add
out
cld
lcall
or
frstor
add
daa
aas
or
sub
insl
inc
fisubrs
sarl
ret
mov
jp
lea
jb
jmp
in
pop
push
sbbb
jns
rorb
lea
mov
hlt
cmp
insb
cld
pop
shlb
and
sub
or
and
fcomp
aam
mov
aam
or
sbb
adc
push
adc
fiaddl
lock
repz
xor
inc
insl
inc
jne
lods
xchg
sub
inc
add
xchg
loopne
or
push
push
lods
loopne
cmpsl
out
mov
push
sahf
xor
and
les
incl
dec
jo
and
fcoml
push
sub
jne
popf
xchg
sub
jns
mov
stos
aam
loope
sbb
fsts
push
push
or
test
loope
jmp
inc
cmp
dec
movsl
or
or
ret
cmp
cmc
pop
inc
loopne
add
push
addb
mov
nop
mov
add
sub
jb
or
sub
xchg
cld
mov
inc
add
add
inc
sub
mov
mov
mov
mov
jne
movl
outsl
or
addb
cwtl
in
in
imul
inc
add
dec
lods
cmp
mov
clc
fildl
imul
jmp
jl
loop
pop
nop
nop
xor
nop
push
cmpsb
sbb
mov
pop
and
jle
mov
jg
xor
inc
mov
jp
movsl
inc
and
rorb
mov
popf
lret
fcomp
je
inc
pusha
mov
sub
push
add
adc
jge
jne
jmp
faddp
sbbb
js
test
mov
je
jno
mov
insb
push
jl
pop
xchg
rclb
mov
fwait
dec
sbb
in
mov
mov
add
jmp
cmpsb
and
cmp
pop
orb
mov
push
ret
imul
ret
cmp
hlt
mov
xchg
sub
pop
cltd
rolb
mov
xor
mov
pusha
mov
lods
cmpl
lock
dec
jne
pop
and
xchg
out
jns
pop
mov
jge
and
aas
add
lods
jle
push
jb
sub
mov
sbb
mov
mov
mov
rolb
lret
in
xchg
jo
adc
out
xor
push
subl
pusha
pop
or
fs
xchg
mov
dec
scas
fs
fs
fisttpl
cmpsl
sahf
or
sbb
push
add
jge
xchg
and
pop
imul
mov
lahf
jecxz
sbb
adc
movl
test
scas
in
lods
test
push
cltd
xchg
xchg
test
lods
lods
xchg
or
jns
sbb
loop
jmp
or
push
mov
mov
sbbb
ret
pushl
js
or
jmp
jmp
movsb
rclb
mov
jge
inc
add
and
pop
pop
push
sbb
addb
lret
rolb
test
cmp
inc
cmpsb
inc
ret
add
jg
repnz
fwait
dec
ja
mov
add
sub
or
sub
stos
into
mov
or
jno
lahf
and
pop
inc
adc
adc
out
dec
inc
in
pop
movsb
adc
pop
cmpsl
push
add
adc
stc
out
or
sub
stc
movsl
in
push
and
mov
cmp
inc
add
sti
mov
popa
push
inc
push
xchg
shll
mov
aas
xor
or
leave
jae
mov
and
pushf
sbb
sbb
mov
mov
int
popa
repnz
sbb
push
cmp
out
xchg
iret
xchg
nop
inc
push
nop
xchg
xchg
nop
xchg
dec
scas
in
nop
nop
xchg
xor
inc
sar
and
mov
orl
lahf
xlat
or
cmp
lea
mov
xchg
mov
push
add
mov
sahf
lcall
jo
aaa
or
inc
mov
punpckhwd
mov
fs
mov
and
cmp
fldl
add
nop
lock
inc
mov
inc
jg
cmp
loopne
pop
sbbl
inc
push
in
arpl
dec
jge
enter
push
sarb
add
push
repnz
add
cmp
or
sbb
mov
inc
subb
push
scas
pusha
push
outsl
cmp
or
and
jo
mov
push
adcb
sub
out
pop
mov
jae
sbb
mov
cmp
inc
mov
mov
cmpsl
or
pop
jmp
shrl
add
jnp
jg
jo
adc
pop
mov
add
imul
add
sbb
dec
icebp
loope
pushf
add
mov
insb
nop
add
mov
jo
out
es
fists
jmp
jmp
or
jns
mov
fisttpll
out
jo
jo
dec
insl
aas
rolb
jge
test
into
lret
scas
inc
movsl
negb
ja
enter
ret
icebp
push
lret
adc
push
aad
jecxz
dec
sbb
data16
and
mov
push
jno
test
push
cmp
mov
mov
mov
mov
sub
mov
add
mulb
cmp
or
into
shrl
mov
xchg
outsl
in
jmp
arpl
mov
inc
jmp
sub
mov
adc
mov
das
dec
pop
cmp
fstl
nop
loope
cwtl
dec
addl
out
add
in
push
and
sbb
sub
push
jbe
sbb
pusha
push
sbb
cli
mov
pop
scas
scas
cmp
cmp
fistpll
adc
jg
cs
js
add
insb
loope
std
loopne
push
sbb
into
dec
pop
cmp
or
aam
push
pushf
cmp
sub
jmp
xor
dec
loopne
push
shlb
lea
add
aam
shr
arpl
push
cwtl
movsl
rcll
pop
push
inc
cltd
add
enter
mov
out
push
sbb
jb
daa
mov
cmp
mov
nop
lret
mov
mov
add
lods
sub
sbb
jbe
aas
loope
outsb
fadd
mov
xor
scas
or
mov
jne
shlb
adc
pop
jno
xchg
push
jbe
lea
jmp
aaa
inc
xchg
jmp
sbb
and
lods
push
aaa
xchg
mov
mov
mov
adc
xor
mov
mov
xor
test
add
mov
stc
adc
adc
push
sbb
cmp
push
mov
sub
sub
and
outsl
dec
jne
xor
or
jne
xor
enter
lods
mov
dec
inc
jg
lea
das
addr16
pusha
lock
jg
xchg
xchg
inc
mov
dec
mov
loope
lds
add
imul
or
sbb
push
mov
inc
push
xor
repz
inc
jae
sahf
dec
sahf
pop
pop
push
push
pop
cmp
pop
adc
adc
pop
push
cmp
adc
and
xor
and
cmova
call
test
inc
jne
push
pop
repnz
xor
js
xor
nop
push
enter
fidivs
ds
adc
mov
inc
pop
sub
push
add
cmp
aam
leave
stos
add
xor
add
jmp
sbb
push
and
adc
adc
jge
xchg
les
bound
shlb
dec
or
jno
inc
rolb
cmp
sub
push
push
dec
sahf
xchg
or
dec
push
dec
dec
lcall
loopne
fsubs
mov
push
sub
subb
jno
pop
or
push
cmp
adc
lods
inc
test
sub
xor
xor
inc
inc
inc
xor
xor
inc
cmp
orl
inc
cmp
jb
enter
inc
inc
leave
enter
inc
inc
add
or
pop
test
rcrb
sahf
inc
xor
jne
pop
lock
xor
cmp
inc
push
iret
and
repz
ror
repz
xor
xchg
fidivl
xor
cmp
dec
pop
nop
test
inc
xor
insl
jb
cmp
jg
add
cmp
ud2
ret
addr16
push
jl
jle
jmp
lea
sbb
loopne
jmp
pop
cmp
mov
sbb
xlat
xchg
mov
add
and
lds
push
xor
pop
orl
add
adc
add
arpl
and
std
or
adc
inc
dec
outsb
jmp
dec
inc
mov
and
cmp
sub
and
shrb
js
mov
inc
rorl
ret
jmp
cmpsl
dec
inc
and
pop
or
cmp
mov
scas
decl
adc
nop
sbb
sbb
xchg
and
fs
adc
sbb
fs
dec
sbb
adc
inc
dec
cs
sbb
fs
and
xor
popa
push
mov
jl
or
cmovno
cs
sbb
jecxz
inc
mov
and
mov
add
add
repnz
adc
or
insl
repnz
add
jecxz
xchg
lret
or
loopne
dec
fcmove
or
mov
jbe
sbbb
mov
and
mov
sbbl
and
adc
mov
outsl
cmp
mov
fwait
push
scas
lds
jl
enter
les
xor
scas
out
sub
add
xbegin
push
xchg
inc
adc
cmp
cmp
filds
psubw
fs
or
movswl
jle
jge
pop
or
jmp
mov
arpl
cld
ss
adc
xor
imul
roll
out
test
xchg
enter
das
dec
lods
push
aad
jg
loope
das
dec
leave
xor
add
and
das
and
mov
out
loop
es
mov
out
push
inc
xchg
xchg
push
push
and
pop
hlt
or
lock
jl
lock
lock
hlt
std
mov
xchg
test
cli
mov
xchg
test
orb
add
inc
test
dec
xor
or
xchg
mov
adc
in
pop
leave
enter
in
call
call
loop
sbb
lods
cmp
adc
shl
adc
sbbl
cltd
mov
in
inc
inc
loopne
loopne
inc
cmpsb
in
in
ret
or
mov
nop
or
loopne
cmc
enter
and
inc
adc
fmul
enter
fcomp
enter
fcomp
fsubrl
inc
enter
movsb
movsl
xchg
or
nop
sbb
mov
mov
sub
bswap
enter
aam
push
xor
jb
rcl
shlb
xor
enter
aam
add
call
xor
subb
xchg
les
mov
in
jns
enter
arpl
and
push
outsl
cmp
adc
jmp
imul
adc
xchg
outsb
add
std
or
testb
sahf
pop
loope
sti
mov
or
jno
dec
or
lret
mull
mov
int3
mov
mov
pop
lcall
sub
stc
xchg
mov
repnz
int
into
xor
into
cmp
cmp
sarb
ja
xor
fisttpll
adcb
inc
and
and
fisubrl
adc
or
xchg
cmp
or
mov
cmp
stos
add
mov
xchg
ljmp
xchg
xchg
mov
jnp
cmp
rorb
mov
ret
cltd
or
xchg
int3
xor
mov
mov
jb
and
mov
mov
notl
mov
andl
add
inc
stc
sbb
pushf
or
test
lods
push
jb
and
sbb
push
andl
inc
es
mov
test
and
push
jb
push
andl
push
int
mov
or
pop
pushf
mov
pushf
dec
leave
leave
xchg
cwtl
cwtl
push
push
stc
and
add
enter
xchg
xchg
nop
pushf
pop
leave
enter
nop
push
xchg
sub
rorb
dec
xchg
jnp
sub
push
jae
fadds
jge
inc
jbe
add
pop
les
jecxz
sbb
mov
dec
notl
sbb
or
jle
xchg
adc
inc
push
inc
sbb
inc
lods
add
xor
leave
adc
jnp
inc
and
add
movsb
pop
rcrl
fsubrs
fldcw
insl
outsl
lods
stc
pop
cmpsl
ss
cltd
mov
test
xlat
and
lret
imul
add
outsb
test
jmp
cltd
mov
gs
in
aad
fisubrs
jg
stc
inc
sub
je
dec
mov
and
or
js
aad
lahf
or
cmc
mov
adc
pop
je
addb
lds
cmp
inc
adc
push
and
enter
divb
test
inc
add
ja
movsl
cmp
leave
or
pop
enter
enter
jae
flds
adc
dec
push
call
enter
jne
inc
sbb
cmpl
dec
cs
je
xor
jae
ret
int
dec
and
mov
pusha
dec
inc
stos
cmpb
add
add
sbb
sbb
cmp
dec
pop
test
pop
and
test
jmp
mov
aad
pushf
adc
popf
mov
xchg
jl
push
sbb
cmp
test
dec
push
sub
addb
addb
test
jb
dec
inc
jl
jl
leave
repz
js
jl
and
xchg
mov
jl
leave
xchg
leave
add
je
je
xor
and
jo
cmpl
and
sub
cmp
and
into
insb
push
enter
insb
add
add
add
mov
push
or
mov
pop
or
push
repnz
pusha
pusha
fs
enter
pusha
fs
jb
pop
loope
sahf
dec
sahf
mov
push
jns
and
pop
inc
pop
mov
add
inc
repnz
and
xchg
cmpsl
add
pop
loope
mov
pop
jle
subb
sbb
pop
xchg
lock
rcrb
test
add
div
xchg
dec
sbb
dec
cmp
dec
dec
inc
xchg
xchg
sub
cmp
add
sub
in
dec
shll
cwtl
mov
mov
outsl
faddl
cmp
pop
xchg
or
adc
ds
leave
and
inc
cmp
cs
inc
push
sbb
lret
lcall
inc
push
pop
fstps
xor
movsb
imul
lods
in
sub
pop
sbb
pusha
pop
jbe
adc
inc
or
xor
ja
adc
out
mov
pop
pop
in
sub
push
dec
jmp
fld
cmp
jns
fwait
shlb
call
pop
pop
lock
push
or
adc
test
fadds
ja
pop
pop
and
das
mov
mov
sbb
cwtl
dec
mov
sub
add
jge
pop
inc
dec
jb
stc
imul
adc
jne
cmp
je
adc
adc
out
pop
aas
loope
cmc
or
scas
push
sub
sub
mov
call
movsb
imul
dec
out
insl
xchg
mov
or
pop
add
je
imul
jbe
and
add
inc
mov
mov
or
adc
sub
pop
dec
popf
fiadds
aad
outsb
or
and
rdmsr
dec
and
adc
test
jo
and
add
je
xchg
in
jne
adc
in
sarl
int3
ret
pop
jo
add
push
movsl
cmp
add
xchg
cs
lret
jmp
pop
in
xchg
testl
and
cmp
dec
fwait
in
cmp
cltd
inc
pop
or
insb
adc
push
lods
xchg
push
push
outsl
das
jle
test
lea
adc
mov
dec
jmp
push
add
out
fstps
mov
xor
adc
sbb
cmp
sub
sub
repnz
xor
and
enter
sub
rorl
sbb
sbb
into
xor
mov
cmpsl
add
xor
in
xchg
add
and
sbb
sbb
and
leave
or
sbb
dec
leave
and
imul
insb
jns
bnd
imul
jecxz
jns
and
adc
and
sub
or
sbb
enter
or
leave
or
imul
dec
leave
enter
imul
adc
mov
push
dec
aad
dec
adc
xchg
push
repnz
add
add
cld
test
xor
fsubr
and
test
dec
adc
pusha
push
outsl
lds
xor
imul
cld
add
sbb
push
xchg
inc
gs
push
jmp
inc
sub
jno
adc
imul
ss
add
mov
add
sbb
pop
jne
cmp
popf
lock
leave
out
cld
lock
hlt
cld
hlt
cld
sub
xchg
in
leave
popl
lock
in
cld
call
dec
xor
inc
sbb
sbb
call
ja
inc
fucom
outsl
cmp
and
shlb
repnz
outsb
dec
scas
arpl
sbb
add
dec
jb
inc
adc
inc
mov
or
lock
bound
inc
adc
mov
aam
rclb
aam
cmp
sti
rcl
sub
sub
fsubs
imul
fdiv
jno
jl
scas
decb
pop
rcr
ret
cld
add
mov
or
and
clc
into
stc
mov
cli
fdivr
loope
ljmp
pop
mov
in
hlt
imull
cmp
idivb
pop
movsl
movsb
inc
movsl
addl
and
and
xchg
adc
xor
lods
dec
adc
cvtpi2ps
or
cmp
or
or
stos
or
inc
mov
xchg
jge
les
insb
or
sub
inc
das
jb
mov
push
pop
pop
adc
lock
xor
mov
fiadds
add
shlb
in
or
mov
jo
cld
aam
and
inc
and
nop
cmp
cld
cld
cld
cld
cmp
rol
jbe
sbb
and
lret
cmpsb
int3
mov
sbb
or
jno
cs
insb
inc
xchg
aas
aas
or
push
out
and
push
cwtl
and
or
or
test
icebp
cltd
movsl
sbb
sub
or
jb
sbb
cld
sar
repz
int
cmpsb
or
mov
jb
and
lods
mov
daa
aaa
movsb
dec
mov
mov
mov
imul
mov
jne
bound
cmp
xor
xchg
xor
jmp
pop
adc
jecxz
sbb
xchg
mov
pop
mov
mov
mov
dec
inc
dec
pop
inc
movsb
xor
jo
pop
mov
mov
pushf
fcoml
inc
mov
pushf
cwtl
mov
push
push
mov
test
sbbl
adc
inc
and
dec
sahf
push
movsb
out
cmp
std
add
mov
sbb
mov
nop
cmp
jbe
and
mov
ja
mov
je
sub
xchg
mov
call
add
inc
xor
jns
jns
sub
cld
cld
cld
imul
leave
enter
js
and
mov
and
jl
jae
test
adc
dec
sahf
pop
test
add
adc
and
je
add
insb
push
push
and
inc
adc
sub
sub
jo
imul
je
ret
sub
add
or
dec
dec
leave
fs
pop
pop
pop
pop
dec
fwait
in
pusha
pusha
inc
dec
inc
dec
outsb
or
pusha
and
mov
imul
cmp
cmp
add
add
dec
cmpl
enter
loope
dec
xor
jb
dec
dec
dec
dec
inc
fisubl
push
push
inc
adc
jb
dec
dec
push
sbb
pop
in
and
dec
push
and
in
adc
push
pushf
xchg
xchg
add
inc
faddl
pop
xor
cmp
cmp
xchg
mov
nop
ss
inc
or
cmp
mov
imul
cmp
mov
and
inc
push
bound
int3
sbb
xchg
pop
xchg
cld
inc
dec
jle
add
lea
in
ret
xchg
ja
mov
add
imul
mov
add
add
add
mov
jb
outsb
sub
dec
add
add
and
adc
aaa
lret
pop
pop
add
test
addb
inc
insl
add
push
out
mov
scas
jbe
dec
xor
sub
and
add
inc
movsb
sbb
or
adc
cwtl
add
push
dec
xchg
add
add
xchg
addr16
inc
push
rclb
adc
leave
push
out
stos
mov
jbe
xor
push
dec
pop
xchg
dec
stos
mov
fnstcw
dec
inc
and
sbbl
jb
inc
or
or
and
or
sbb
adc
in
test
test
mov
in
pushf
loopne
rolb
je
mov
push
or
nop
mov
addl
in
enterw
push
add
pop
add
daa
nop
mov
shl
add
jne
and
or
adc
inc
or
xchg
and
lods
add
sbbl
jmp
aas
cmp
dec
aad
xchg
popa
or
mov
inc
jge
mov
daa
and
out
pop
lock
dec
jmp
add
and
jns
sub
aad
xchg
add
cmp
mov
push
mov
add
and
and
sbbl
cmpsb
xchg
pop
aam
les
test
xorb
pusha
jne
add
lea
cmp
push
add
adc
psubd
std
stc
adc
dec
loope
inc
je
insl
push
xchg
mov
imul
jge
add
mov
mov
icebp
repz
scas
movsb
and
inc
sti
adc
adcl
pop
lock
testb
sub
test
add
dec
repz
inc
push
or
inc
xchg
fwait
shll
jmp
lods
pop
or
repz
out
int3
mov
dec
mov
lock
adc
repz
jo
cmp
js
dec
and
sbb
cld
test
or
sbb
pop
mov
and
inc
loop
inc
imul
mov
out
sbb
inc
or
orl
mov
sbb
sub
sbb
scas
lret
daa
inc
jecxz
add
and
mov
or
jo
inc
pop
xor
dec
pop
mov
enter
inc
or
inc
sub
mov
inc
or
dec
cmp
adc
insl
cwtl
bound
sbb
inc
sbb
and
push
dec
pusha
cmp
push
push
and
into
imul
in
or
jecxz
loop
sbb
or
or
ret
adc
or
cmp
dec
adc
adc
adc
or
and
xchg
dec
push
in
and
or
xchg
cs
jmp
xchg
or
int
divb
and
sbb
fstl
adc
xchg
mov
fucomip
faddl
or
inc
or
add
fcompl
push
ja
fmulp
and
sbb
sbb
inc
jbe
jb
jg
pop
mov
and
inc
and
or
or
mov
jnp
xchg
adc
push
dec
adc
repz
pop
clc
ret
hlt
xor
leave
jnp
xchg
dec
notb
inc
shr
inc
inc
xchg
sbb
iret
jge
dec
es
cmp
orb
stos
add
mov
cwtl
shlb
and
push
push
cmp
cmc
loopne
add
rcrb
insl
or
dec
cmpb
dec
adc
mov
movsl
dec
cmp
adc
mov
jg
adc
mov
dec
out
pusha
add
addl
mov
mov
ret
dec
xor
fldt
out
cmp
je
js
mov
popa
loopne
testb
rorl
sub
push
pusha
insl
or
push
ss
sub
xchg
or
in
ficoml
dec
and
and
roll
and
nop
sub
out
scas
jmp
xchg
movl
add
xchg
nop
cwtl
test
rorb
or
rcrl
pop
fsubr
adc
mov
nop
and
call
jne
fnstenv
ret
adc
push
scas
adc
dec
call
negl
inc
add
test
or
fwait
adc
xchg
mov
add
mov
push
mov
enter
das
in
add
test
pop
cs
mov
enter
fdivl
sbb
lcall
repz
cmp
jbe
mov
sbb
enter
or
cld
inc
rolb
push
xchg
fiadds
add
add
data16
push
jbe
out
cmp
mov
jo
xor
rcrb
pop
push
sbb
mov
push
inc
xchg
sbbl
or
inc
mov
movsb
mov
mov
add
push
jb
call
and
sahf
ss
insb
inc
jo
sbb
fnstenv
mov
push
loop
mov
daa
inc
push
add
mov
std
je
mov
popf
adc
je
call
out
daa
das
inc
adc
and
xchg
adc
lods
mov
mov
loope
or
and
jbe
jno
adc
inc
outsb
aaa
jmp
push
push
pop
imul
enter
xor
jmp
dec
scas
xorb
aaa
out
mov
mov
sub
jbe
ret
ret
xchg
sbb
iret
and
and
out
fs
or
cmp
inc
or
jb
jne
neg
push
daa
pop
cld
push
adc
sub
mov
push
sbb
inc
mov
addr16
inc
inc
rclb
lock
pop
stc
je
or
push
mov
push
in
scas
add
int3
dec
bnd
dec
shlb
pushl
sub
fnstcw
dec
bound
loop
call
sub
and
jne
push
jb
popf
enter
ja
or
xor
ja
mov
sub
cmp
loopne
jge
jne
sub
and
out
lods
push
lcall
es
and
inc
in
adc
sar
shr
nop
in
mov
mov
outsb
lahf
cmp
jmp
dec
sbb
leave
int
nop
pop
push
inc
pop
cs
mov
inc
fcos
shld
cmc
push
inc
das
jne
push
adc
push
into
rclb
nop
adc
ja
and
cmp
dec
lods
push
sub
dec
je
in
and
popf
jge
sbb
or
in
jne
rcrl
loope
push
loope
arpl
cmp
mov
mov
sbb
int
cs
pusha
jmp
or
or
or
xchg
dec
in
das
icebp
adc
dec
push
dec
das
lock
loopne
and
dec
jne
jne
loop
lods
cmp
mov
ja
sbb
shl
jmp
imul
mov
jns
rcrb
sbb
pop
shll
into
sbb
pusha
addr16
fsub
leave
xor
cwtl
rorb
or
ljmp
pusha
add
sub
sub
jl
nop
xchg
adcl
sub
xchg
lock
adc
jno
sub
sub
pop
push
or
icebp
sub
xor
test
push
inc
lods
add
xchg
in
sub
adc
ret
movsb
fdivrl
sub
xchg
and
aaa
cwtl
push
aam
or
mov
movsb
das
and
push
icebp
ficoml
xor
gs
pushf
mov
imul
sub
or
add
cmp
pop
add
xor
push
lahf
sub
pop
add
and
jbe
push
jo
mov
nop
shrb
pop
lea
pusha
push
lcall
adc
pop
adc
imul
imul
xor
sbb
inc
or
imul
shll
out
in
or
jmp
sahf
or
fmuls
daa
rcrb
adc
inc
xchg
sbb
mov
pop
inc
push
lds
sub
adc
xor
cltd
ret
inc
mov
cs
xchg
push
testb
dec
add
cmp
sub
jle
add
les
push
test
addr16
jnp
sub
ja
pop
adc
fucom
push
push
add
sbb
sbb
sub
xorb
test
pop
xchg
and
sub
jbe
and
inc
pop
jle
pusha
add
adc
in
xor
data16
xchg
add
lods
adc
sub
cltd
mov
pusha
xchg
ret
outsl
pop
insb
jns
xor
imul
add
jns
fisubl
inc
outsl
aam
call
fisttpll
xor
movsb
jle
outsb
imul
add
add
xchg
mov
lea
adc
xchg
pop
add
jns
mov
jg
jle
lea
jmp
mov
test
and
add
lock
add
sbb
push
std
fwait
lods
loopne
inc
adc
mov
inc
xor
shll
jnp
stc
push
sti
adc
outsl
cmp
stc
popf
adc
lock
not
popf
mov
lcall
nop
adc
fdiv
inc
stos
push
or
xor
test
jb
in
sub
fdivs
sahf
sub
jg
ret
sub
clc
addr16
xor
xchg
jg
xor
push
adc
jno
dec
dec
call
ret
or
pop
sub
dec
test
mov
rolb
mov
xchg
inc
inc
or
sub
enter
add
pop
or
aaa
pushf
mov
adc
jmp
pop
add
or
adc
loope
mov
dec
jae
shr
movsb
outsl
mov
mov
xchg
lret
add
fistpl
add
fiaddl
movsl
and
sbb
lret
jno
cli
mov
dec
jbe
jae
das
push
rclb
movsbl
add
push
add
xchg
fisubl
mov
xlat
or
or
pop
dec
pusha
inc
loope
lret
into
lods
lahf
and
divl
mov
inc
add
or
jns
daa
jle
cli
sbb
push
ja
ss
aaa
or
movb
add
inc
movsl
ret
xchg
inc
push
push
imul
or
sub
insb
xor
xchg
dec
cmpsl
flds
ret
add
sahf
jmp
idiv
scas
rorb
mov
jg
into
or
add
inc
mov
aaa
jl
std
sbb
or
addr16
xchg
repz
loopne
xchg
mov
shl
out
lock
jae
pop
add
sbb
jge
inc
cwtl
or
pusha
cmp
test
inc
out
rorl
scas
xor
mov
subl
adc
inc
lock
xchg
ss
addr16
lret
xchg
xchg
fistps
or
rcr
movsb
popa
popa
rol
loop
sub
dec
imul
mov
sub
pusha
inc
and
mov
xchg
lcall
enter
aaa
mov
sbb
sarb
in
xor
nop
adc
cmp
mov
cmp
ret
mov
add
sbb
sbb
xchg
push
adc
movsb
std
call
xchg
std
inc
cmp
outsl
or
mov
sub
nop
pop
and
cld
pop
test
push
pop
aad
inc
int3
int3
xor
add
add
xor
inc
push
inc
inc
loopne
in
or
pusha
or
test
leave
dec
mov
and
mov
in
js
cmp
int3
sbb
es
dec
es
sbb
dec
cwtl
dec
movsb
and
fs
mov
add
cmp
inc
add
or
mov
jo
sub
xor
cmp
ret
and
inc
lahf
cmpsl
mov
pop
sbb
stc
jne
je
fmuls
shlb
cmp
or
mov
jmp
mov
adc
mov
out
and
gs
sbb
and
push
das
loope
sub
testb
loope
pop
fimull
jbe
loop
inc
jmp
dec
jg
inc
les
push
into
adc
cmpb
xor
sbb
jmp
enter
pop
jp
jne
jmp
mov
sbb
or
lret
ret
mov
jbe
sarb
nop
jl
adc
add
mov
pop
jp
mov
int3
dec
rorb
imulb
mov
and
ret
adc
nop
fsts
pop
jmp
insb
imul
sbb
jmp
dec
pop
popf
sub
mov
cmp
dec
dec
xchg
fcmovnbe
loopne
fisttps
jp
add
dec
enter
or
xchg
mov
and
add
push
jbe
popa
fsubp
sbb
xchg
jl
sub
or
pop
pop
or
or
inc
pop
jmp
nop
gs
call
test
leave
pop
leave
shrb
add
push
dec
cwtl
xor
push
mov
and
xchg
pop
inc
fldlg2
add
mov
clc
cld
jmp
loopne
fadds
orb
mov
test
ret
mov
imul
out
aad
adc
mov
shl
adc
mov
jecxz
or
mov
test
jle
mov
adc
pop
push
dec
add
cs
lret
adc
outsb
dec
aas
mov
sar
popa
and
outsl
pop
mov
je
mov
add
inc
imul
and
add
push
ja
lcall
or
adc
adc
dec
push
inc
stc
adc
add
jb
adc
or
or
or
outsb
mov
loope
or
or
push
add
add
add
add
xor
mov
pop
dec
rcrl
dec
push
cmp
dec
jae
and
jge
pop
repz
jmp
rcrl
pop
outsb
cs
push
xor
fildl
mov
jecxz
mov
movsb
mov
adc
loope
lods
ds
adc
dec
xor
mov
cltd
push
pop
push
test
add
lret
adc
push
int
adc
adc
sbb
add
add
inc
inc
cmp
movsl
push
mov
inc
mov
test
ret
sbb
push
cltd
test
or
mov
insl
ret
mov
pusha
xchg
adcb
fcomps
inc
mov
incb
add
cmpsb
addl
inc
jl
jp
sub
xor
sbb
cmp
or
loope
imul
fdivrp
pop
loop
not
or
inc
inc
push
loop
adc
add
in
mov
dec
or
mov
xor
inc
inc
ljmp
aaa
xor
xor
mov
sub
mov
add
imul
push
inc
nop
or
and
cmp
adc
mov
popa
sbb
adc
xor
aad
pop
push
dec
pop
loope
ret
iret
in
jmp
push
jmp
rorb
inc
mov
clc
in
fwait
test
lock
jecxz
dec
inc
add
sbb
add
adc
aaa
lret
inc
push
stos
lret
fstl
jge
nop
rolb
jl
mov
xchg
push
xchg
gs
adc
sbb
loop
loope
fiadds
or
xchg
arpl
add
loop
xchg
jbe
jl
sar
sar
or
and
aas
inc
cmp
lock
jmp
sbb
ret
out
and
ret
xchg
mov
add
ficoms
nop
ret
xor
mov
push
add
xor
dec
sbb
sub
push
push
loop
sbb
or
add
inc
repz
in
lock
push
sahf
jp
push
mov
addr16
leave
jecxz
lods
push
sub
movl
mov
test
add
ret
pop
cs
push
cli
or
pop
daa
add
inc
fmuls
out
xor
or
sbb
aas
jne
push
mov
mov
sub
jl
add
daa
add
adc
push
ret
cmp
and
push
adc
dec
jp
pop
nop
test
js
les
fisttpl
in
mov
sbb
mov
outsb
dec
fs
mov
inc
iret
add
add
mov
gs
rol
movl
loopne
push
jno
dec
popa
loope
pusha
add
loop
ret
add
insb
mov
sbb
fimuls
or
in
mov
and
out
jbe
jne
lret
pop
or
ljmp
jnp
or
out
dec
and
stc
sub
mov
cmp
or
decb
cmp
sahf
gs
sub
xchg
cmpb
fs
testl
fisubs
or
adc
cltd
nop
inc
adc
or
movsb
push
push
sbb
sbb
sbb
push
xchg
mov
mov
adcb
stc
andl
inc
add
jmp
and
lods
jg
adc
jmp
inc
mov
sbb
xchg
insl
push
shrl
rcrb
rorb
inc
ja
cmp
mov
xor
mov
xchg
shl
jg
add
sub
inc
jbe
icebp
xor
sbb
sti
pop
fiadds
fimuls
or
test
xchg
fs
fneni(8087
and
adc
in
out
mov
cmp
push
jl
jmp
dec
lock
pop
and
fcos
hlt
jg
int
rcrl
jle
adc
sbb
push
xor
mov
fisubl
jg
subb
testb
cmp
vhsubps
sub
lea
jecxz
jnp
push
std
dec
or
and
je
adc
shrl
neg
mov
or
pop
test
dec
cld
cmc
sahf
test
and
xchg
cmpsl
add
xor
daa
mov
mov
lds
mul
and
adc
or
inc
pop
xchg
mov
jae
add
shl
jmp
add
inc
int
sarl
cmp
and
mov
out
imul
xlat
ret
dec
aaa
and
jl
insb
in
repnz
jmp
jg
iret
shl
mov
data16
iret
cmc
pop
addl
addl
sub
dec
add
cwtl
pop
ret
jg
sti
fwait
jecxz
mov
das
dec
dec
and
inc
add
push
hlt
loopne
test
out
in
int
imul
jmp
mov
das
sub
aam
adc
inc
push
jle
add
arpl
and
push
jle
add
add
and
push
roll
ja
jbe
or
cmpsl
testl
pop
ret
mov
pop
cmp
addr16
mov
cmp
bswap
aad
xor
mov
inc
shrb
cltd
adc
pop
inc
push
cmp
dec
xrelease
mov
mov
sbb
push
jmp
loope
pushf
inc
push
loop
lahf
in
mov
add
or
or
inc
shr
push
jae
or
imul
sbb
xchg
xor
ret
dec
mov
push
out
pop
push
add
or
dec
push
adc
outsl
adc
sbbb
xor
dec
sarl
lahf
mov
cmp
cmc
sub
adc
insb
dec
inc
or
mov
adc
nop
iret
push
mov
xor
mov
shll
es
mov
adc
repnz
sbb
pushf
fnstsw
push
pminub
pop
mov
cld
ss
or
inc
pushf
add
sbb
xchg
add
push
dec
imul
push
aas
push
lock
cmpl
sub
adc
cmp
mov
add
pop
pop
dec
nopl
xorb
dec
jnp
or
or
cs
daa
das
pop
les
iret
or
nop
dec
sbb
shufps
js
add
in
icebp
popa
or
inc
jecxz
imul
imul
rcrb
sti
daa
faddl
mov
cs
push
out
and
or
add
or
ret
add
jne
orl
add
sbb
mov
outsb
dec
cmpsb
sub
clc
sub
or
inc
or
lods
and
or
out
cwtl
dec
pop
add
or
sbbl
loopne
sub
push
inc
push
inc
mov
xor
sti
daa
lock
pop
inc
inc
push
add
add
or
cli
sbb
shrb
roll
dec
or
mov
cld
adc
xchg
or
mov
adc
cmp
shrb
xor
es
cmp
push
int3
or
inc
orl
xor
inc
cvtps2pi
or
enter
std
fs
inc
sahf
xor
gs
push
hlt
cmp
loop
cs
sub
dec
add
or
cwtl
jp
mov
bound
dec
mov
loopne
inc
rclb
inc
jle
ss
mov
inc
jae
or
aad
sbb
mov
fdivs
lds
cmp
ja
and
dec
cmp
lcall
fwait
sub
pushf
or
sbb
inc
addr16
push
loopne
test
xor
popf
test
add
sub
rorb
movsl
mov
dec
arpl
mov
je
cmpsb
lds
cmp
jne
mov
cmp
cwtl
or
ret
xchg
push
mov
sbb
pushf
mov
dec
push
ror
dec
add
mov
mov
xrelease
add
dec
icebp
dec
mov
push
and
nop
or
xchg
jns
dec
or
add
inc
mov
sbb
lea
jle
lock
push
cmpsb
ror
mov
adc
jo
xor
or
pushf
mov
dec
mov
inc
pusha
addb
dec
movsl
in
xor
daa
ss
jl
inc
and
cmp
or
or
push
or
cwtl
inc
pop
cmpsb
or
sbb
xor
loop
or
dec
or
or
test
pop
mov
fbstp
dec
xor
cwtl
cs
cmp
mov
pop
roll
jge
das
cmp
aaa
je
add
popa
inc
ret
pop
test
mov
pop
sub
in
and
jmp
dec
les
nop
jl
movsb
pop
inc
fmull
cmp
pop
test
insb
push
sub
orb
or
cmpsb
mov
dec
pop
popa
adc
push
xor
dec
or
xchg
nop
xchg
decl
dec
pop
sbb
andb
sub
mov
mov
pop
cmp
sub
lock
and
outsl
repnz
jo
test
or
push
das
sbb
arpl
sbb
and
mov
mov
sbb
pushf
imul
dec
sbb
popa
lahf
cld
jns
add
add
aaa
mov
int3
push
xlat
sar
sbb
aam
pop
sbb
xor
das
jp
fcom
sbb
jle
push
lcall
and
push
les
inc
cmp
and
repnz
or
sub
je
and
dec
loope
into
cmp
enter
cmpw
push
xchg
dec
push
sub
adc
dec
or
xor
push
sub
pop
out
pop
pushf
popa
and
stos
pop
push
mov
xchg
push
mov
cmp
and
test
pop
cmc
into
xor
cmp
in
jle
test
es
leave
sbbl
pop
push
sbb
insl
dec
ficoms
or
or
lahf
fadds
xor
cmp
or
xor
push
adcb
call
pushl
mov
mov
sbb
shll
mov
and
dec
add
or
dec
fucomp
fiaddl
cld
mov
inc
inc
push
add
push
add
and
add
mov
push
movsb
leave
cmp
call
dec
shll
pusha
push
test
int3
popa
inc
sbb
dec
test
and
cmp
mov
pop
nop
xor
mov
mov
jg
std
sahf
sub
out
sub
adc
testl
cmp
inc
sahf
inc
xchg
imul
mov
xchg
add
adc
pop
pop
xlat
into
cmpsb
dec
jmp
inc
dec
in
pop
enter
push
lock
and
out
bound
ja
loopne
lea
push
inc
pop
xchg
paddb
or
loopne
or
xor
int
bound
gs
or
fildl
mov
push
sbb
cmp
fildl
out
idivb
sub
aam
inc
mov
stc
mov
adc
dec
or
fwait
cmp
mov
iret
imul
sub
mov
sub
sbb
push
hlt
loopne
fs
push
push
adc
add
sub
clc
sub
push
xchg
fcomps
mov
hlt
push
dec
je
xlat
xor
push
push
pushl
int
or
add
in
jae
mov
ret
xorl
xor
fsubs
mov
xor
sbb
repz
aas
data16
pusha
jne
jp
je
aam
adc
lods
inc
jo
or
loope
jnp
push
add
cmp
mov
mov
sbb
sbb
jns
xor
roll
lock
add
in
jmp
xchg
pop
rclb
fcomps
xor
ret
lock
in
dec
std
mov
add
in
loopne
shrb
lods
xlat
mov
sbbb
stc
sub
lret
mov
adc
jae
push
dec
push
jge
aaa
shl
adc
inc
sub
imul
ret
das
sarl
xlat
sub
popa
or
cmpsb
or
mov
push
test
movsb
adc
xchg
or
jmp
fldcw
pop
jne
das
push
add
sbb
cmp
xor
inc
out
fwait
sub
ds
je
fmuls
lcall
xor
push
pop
cmp
jg
das
cmpsl
or
inc
movsb
sbb
ret
sub
and
sbb
lock
pop
push
lock
dec
push
mov
in
shr
popa
mov
sbb
in
inc
xor
bound
test
jl
aas
add
mov
pop
and
pusha
inc
sahf
sub
or
add
adc
test
rcl
add
xchg
jmp
sbb
or
cmp
or
leave
rclb
inc
out
cmpsb
mov
mov
adc
ljmp
loop
sbb
mov
cmp
inc
hlt
and
cwtl
and
int3
insb
xor
sub
fwait
mov
push
xchg
into
hlt
in
cmp
adc
cmp
ja
call
xchg
testl
sbb
aas
lods
xchg
mov
lcall
or
dec
cmovno
push
pop
mov
pop
pop
sbb
xor
movsl
ret
or
mov
mov
sbb
adc
add
stos
cmpb
push
or
or
scas
inc
or
aad
add
inc
lcall
dec
jmp
add
xlat
loopne
sbb
fwait
add
or
mov
fbld
sbb
fstps
sub
sbb
fcomp
es
and
cmp
jge
mov
or
es
cli
pop
je
xchg
add
jmp
data16
add
add
std
enter
xchg
pop
out
in
mov
hlt
inc
cmp
fbld
sbb
outsb
js
sub
jg
lar
and
pop
rcll
in
add
xchg
cmp
dec
jecxz
mov
xor
jmp
fildll
mov
dec
dec
cmp
and
shl
jne
mov
in
jmp
jecxz
add
clc
push
popa
cld
pop
rorl
jne
cmpsl
or
inc
xor
push
pop
test
push
popa
add
movsl
loope
inc
lcall
pop
or
mov
inc
jae
inc
xchg
insb
inc
add
dec
xor
mov
xchg
dec
mov
popa
enter
xchg
les
gs
out
sub
add
test
sub
push
loopne
cmpsl
fiaddl
jb
or
je
cli
dec
addr16
bnd
pop
jmp
sbb
or
add
dec
or
mov
or
in
data16
xchg
pusha
sub
xchg
xor
cmp
dec
mov
push
lcall
sbb
pop
aad
mov
mov
arpl
push
aaa
cmp
mov
dec
xchg
push
push
in
push
or
arpl
adc
inc
mov
js
dec
cmpsl
push
pop
mov
shlb
push
lock
mov
push
xorl
xor
and
adc
dec
adc
jbe
push
or
insb
dec
pop
rcr
jle
call
cmpb
test
aas
rcll
jecxz
sbb
in
mov
sub
dec
and
sbb
push
stos
pop
inc
loop
popa
adc
scas
mov
aas
bound
enter
jno
xchg
mov
push
xor
push
sub
pop
imul
pop
pushf
les
add
mov
add
negb
add
add
sbb
scas
sub
lock
mov
xchg
push
jae
add
adc
test
add
pusha
add
lahf
and
or
inc
dec
psubsw
add
adc
rcl
add
daa
push
push
xchg
xchg
or
add
mov
adc
mov
cmp
mov
xor
inc
sub
lahf
inc
xchg
mov
xor
add
pop
and
leave
inc
mov
lret
and
mov
inc
jg
mov
lods
leave
push
es
or
mov
mov
js
cmp
push
ret
add
aas
mov
sub
push
mov
sub
push
pavgb
jno
pop
push
rol
lcall
push
icebp
jmp
mov
push
mov
bound
aad
lods
mov
jmp
mov
fst
push
jnp
mov
repnz
and
mov
imul
or
ljmp
push
test
pop
xor
jo
and
or
mov
dec
or
jno
dec
pusha
and
fiadds
add
push
je
adc
lret
dec
ljmp
orl
push
imul
or
adc
cltd
fs
dec
mov
cmp
push
inc
dec
adc
adc
and
pusha
mov
adc
dec
aas
add
lea
xor
dec
adc
lret
dec
sbb
adc
mov
xchg
or
cmp
pusha
sub
cmc
leave
or
jne
cmp
pop
push
jns
in
orl
fstpt
sub
and
mov
jne
add
jp
xchg
iret
or
mov
sub
mov
xor
and
inc
xor
add
lret
inc
adcl
xchg
jl
arpl
add
idivb
cwtl
arpl
dec
es
jge
jg
fadds
sub
shlb
lods
or
fs
in
inc
push
cmp
dec
inc
push
adc
xor
jg
pop
int
mov
roll
pop
gs
mov
adcb
inc
decb
dec
push
popl
xchg
inc
testl
outsl
or
aaa
lods
clc
test
push
cmp
popa
pop
push
ret
push
loope
js
inc
mov
fldt
mov
mov
mov
sub
sbbb
mov
fsubrs
or
clc
xlat
repnz
jle
iret
rcl
insl
aam
cmp
add
popa
cmp
test
sbb
add
pop
inc
add
enter
leave
xlat
enter
xor
add
adc
sti
push
rcrb
aam
pusha
and
fstpl
mov
addr16
dec
xchg
rolb
insl
mov
je
popa
or
add
inc
inc
das
add
or
adc
push
fsts
stos
and
cmp
push
jle
popf
xchg
ss
movb
sub
sbb
in
pop
aam
mov
push
pop
aad
dec
fnstsw
add
and
mov
ret
fdivrl
add
xlat
cld
addr16
pop
add
or
loopne
outsb
loope
xlat
xlat
lcall
faddl
jb
or
add
loopne
push
cmp
loop
and
sbb
adc
or
xorl
push
insb
sbb
push
adc
cmp
dec
rcll
in
pop
add
sahf
or
arpl
nop
push
push
push
out
into
inc
mov
xchg
pop
fldcw
xchg
mov
sbb
and
popf
mov
mov
push
das
adc
lods
pop
adc
repz
mov
inc
ret
sbb
loope
inc
es
push
jle
shrl
push
mov
jbe
iret
cld
adc
sub
add
repnz
mov
cmovne
test
and
testb
adc
stc
inc
jecxz
add
add
cmp
fisttpll
pop
sub
push
push
sbb
add
into
lock
inc
arpl
xor
mov
adc
test
adc
mov
outsb
testb
mov
ds
inc
adc
bound
mov
ja
mov
in
pop
mov
push
xor
push
mov
test
jno
cwtl
mov
or
int3
adc
adc
mov
adc
jecxz
add
cmp
ss
insl
leave
push
xchg
leave
or
jns
xor
inc
jmp
sbb
imul
dec
iret
pop
push
jns
sub
push
push
incl
addl
loop
faddl
mov
insl
add
pop
push
ss
mov
cmp
inc
shll
roll
xor
outsb
adc
or
add
jne
cmpl
jge
outsl
and
add
push
dec
and
or
and
bound
es
push
jecxz
sub
push
cmp
ret
jno
cmpsl
andb
mov
xchg
jl
inc
push
das
fstl
outsl
sbb
dec
in
pop
mov
add
leave
lods
clc
or
rolb
lcall
popa
out
push
cmpsl
push
scas
fs
adc
adc
out
push
add
adc
fcom
andb
xlat
add
and
push
emms
add
pop
rorl
jb
lock
mov
pop
xor
and
mov
mov
lret
mov
rcrl
mov
in
mov
pusha
or
and
or
sbb
mov
lea
sbb
cwtl
sub
add
mov
lods
xlat
scas
loope
push
inc
cmp
push
testb
adc
or
hlt
adc
push
push
mov
mov
push
mov
push
mov
xchg
pop
pop
dec
xchg
pop
fs
xchg
jl
fs
xchg
sub
dec
xchg
sub
jge
inc
icebp
mov
mov
addb
or
pop
pop
adc
js
and
push
sbb
push
and
add
mov
sub
ret
pop
push
and
lds
xchg
sbb
dec
js
and
adc
rolb
adc
fiadds
dec
negb
cmp
movsb
frstor
push
sub
sbb
sti
xchg
cmp
xchg
mov
pop
push
xor
push
pushf
mov
cmp
in
inc
test
addr16
inc
mulps
inc
rcrl
es
faddl
repz
and
xchg
ret
mov
sbb
and
cld
push
pop
or
inc
les
lods
sub
arpl
insb
and
push
dec
xor
pop
jbe
mov
mov
cmp
call
cmpsb
mov
rcl
add
stc
js
cwtl
rcr
push
dec
pop
arpl
test
xlat
sub
js
test
inc
xchg
fdivl
mov
add
sub
out
sub
fwait
aam
xchg
sbb
mov
adc
scas
or
lret
fdivs
out
add
addb
lock
nop
popa
pop
mov
cmp
or
inc
push
pop
mov
lds
sbb
je
repnz
enter
inc
and
xor
enter
loopne
or
subps
push
imul
jge
and
add
inc
sub
movsb
int
divb
jb
add
add
aaa
cmp
bound
bound
jnp
add
add
dec
jnp
sub
xor
xor
cs
cmpsb
fadds
push
xor
pop
rcrb
add
fs
popf
add
addr16
out
inc
outsb
mov
cmpl
adc
jg
dec
jne
das
enter
cld
pop
sub
and
inc
daa
das
push
xchg
pushw
push
movsb
addb
sub
out
or
pop
ljmp
sbb
gs
or
mov
push
sbb
movsb
dec
out
stc
gs
outsl
adcb
inc
mov
std
nop
movzwl
jge
leave
sbb
add
xchg
xchg
nop
jg
xchg
mov
add
cmp
in
jns
add
or
aas
adc
mov
mov
scas
dec
cmpsb
andl
sub
xchg
cmp
adc
loop
mov
jne
or
add
pop
and
fadds
dec
roll
lret
mov
icebp
mov
or
add
sub
ret
nop
orb
gs
clc
fsubs
std
aas
cmp
push
or
icebp
adc
int
adc
outsb
mov
je
jo
lods
lcall
push
bnd
jg
mov
test
mov
fsubrl
movb
aas
xor
xor
mov
cwtl
ss
pop
hlt
imul
mov
fcomp
cmp
jl
mov
xchg
dec
repnz
pop
adc
add
inc
or
jae
clc
out
mov
fdivs
lods
sbb
mov
fsubrs
adc
sbb
nop
inc
repnz
leave
arpl
mov
shll
fldenv
adc
push
pushf
adc
nop
mov
jbe
and
loope
adc
xchg
sbb
addb
xor
cmp
clc
frndint
je
pop
je
or
insl
sbb
roll
repz
or
js
rorb
sub
movsl
mov
inc
or
cmp
or
xchg
xchg
call
sub
movsb
sahf
outsb
inc
cmp
test
dec
pop
aad
sub
shll
and
xor
sub
test
maxps
cmpsb
lahf
inc
aaa
inc
adc
adc
xchg
lds
test
popa
lcall
leave
ss
insl
adc
sbb
pushf
orl
jb
inc
sbb
aam
mov
loopne
mov
mov
sub
jo
mov
stos
inc
sbb
movsb
sti
xchg
jno
lock
or
insl
sbb
cmpsb
ss
push
jmp
sti
int3
lret
in
add
adc
pushf
int
push
push
and
les
jns
popa
cmc
xor
mov
push
fs
lret
inc
push
fsubrs
loopne
sbbl
fcoml
jp
and
add
or
lea
std
and
loope
faddl
subl
fdivs
sub
rolb
and
sub
cld
cltd
aam
add
push
sub
lods
sbb
in
push
dec
jb
and
mov
add
test
mov
push
jle
push
bound
test
pop
jb
jbe
sbb
fwait
mov
mov
adc
inc
insl
jmp
cs
subl
mov
add
inc
pop
les
lsl
dec
rcl
jp
daa
jae
int
dec
scas
ja
insl
or
pop
js
lods
test
dec
sahf
inc
mov
rorb
inc
pop
imul
jmp
out
xchg
xchg
andb
popa
jbe
xchg
or
or
test
pop
sbb
push
and
or
inc
das
push
pusha
leave
add
dec
loope
gs
iret
mov
and
call
and
and
xchg
inc
movsl
fwait
add
and
jne
xchg
cmp
fmuls
dec
or
iret
or
push
gs
or
mov
movsb
or
gs
xchg
out
dec
or
ret
add
mov
push
mov
adc
insb
rcrb
mov
jmp
pop
jg
fmul
lods
mov
add
outsl
les
add
cs
js
in
add
call
xchg
jb
sbb
add
nop
outsl
das
lds
xchg
test
push
push
mov
xchg
icebp
add
test
pop
ret
imul
mov
xor
dec
into
int3
mov
mov
lret
ja
xor
mov
cld
mov
sti
sarb
int3
aam
push
mov
add
enter
pop
cs
fadds
push
jb
aas
leave
xor
adc
xchg
out
push
pusha
mov
aas
jbe
nop
outsl
test
lret
rclb
sbbl
pop
push
bswap
sub
test
mov
andb
pop
fisubl
push
push
cld
imul
lret
and
or
aam
rolb
or
dec
pop
add
mov
xchg
lock
cld
xor
and
push
jg
cmp
sub
mov
or
imul
in
data16
sti
and
push
arpl
mov
add
pop
pop
ds
lock
lcall
int
popa
aaa
fstl
outsb
in
xor
pop
imul
xor
push
push
push
jo
ret
lcall
mov
xorl
pop
add
inc
or
mov
cs
rcrl
mov
add
cmpsb
imul
or
rorb
daa
xor
daa
pushf
ds
mov
dec
push
xlat
inc
shlb
xchg
in
pop
mov
xchg
mov
pop
lods
sbb
nop
test
imul
mov
aam
scas
adc
add
push
push
das
mov
mov
daa
mov
jg
add
mov
test
fsubs
dec
into
cs
jecxz
jg
sbb
add
mov
nop
stos
adc
sub
dec
shll
push
push
shll
setns
pop
addr16
test
int3
rclb
mov
pop
pushf
pop
push
das
lds
xchg
negb
push
mov
fs
sbb
xor
pop
bound
movsl
mov
push
hlt
data16
mov
push
push
mov
insl
imul
dec
es
dec
insl
sub
les
mov
outsl
xchg
jo
push
aam
jno
in
testb
bswap
pop
jae
fwait
addl
je
push
push
jne
xorb
push
or
jns
push
push
pop
mov
jle
mov
xchg
mov
int3
xchg
call
orb
lahf
fcomps
cmp
data16
push
inc
adc
fcoms
pop
jg
scas
dec
and
pushf
insb
lcall
pushf
mov
imulb
pusha
ja
aam
sahf
mov
insl
pop
roll
mov
call
or
sub
lahf
inc
pusha
sbb
push
daa
js
push
adc
mov
and
adc
rcrb
mov
adc
mov
repnz
push
mov
shlb
cmpsl
pusha
add
inc
add
jl
xchg
or
mov
daa
in
sub
mov
add
cwtl
mov
test
inc
jno
rorb
add
sahf
mov
ja
out
inc
cmp
scas
jge
pop
jle
mov
jg
addb
xor
aas
adcb
mov
test
icebp
in
adc
les
xchg
into
out
add
pop
add
push
mov
dec
repz
pop
js
aam
scas
mov
fcompl
pop
sbb
movsl
stc
pop
sbb
sbb
sbb
int
ja
or
cs
xor
mul
pop
or
lods
pop
and
enter
xlat
loopne
and
dec
aas
and
adc
xor
ret
jo
mov
sti
divb
enter
xor
mov
sub
pop
mov
outsl
sarl
cmp
cmp
daa
dec
push
push
cld
xchg
inc
out
push
jle
inc
sub
pop
pop
or
pop
cmp
pop
js
lock
mov
dec
mov
push
pop
insb
dec
rcrl
hlt
insl
cmp
cwtl
fsubr
insl
mov
push
outsb
and
xor
dec
pop
jae
mov
lcall
xor
rcrb
jbe
ja
call
inc
jo
in
outsl
aas
imull
dec
push
in
xchg
and
test
jns
leave
ret
xchg
lahf
inc
pop
mov
mov
mov
repnz
in
shlb
rorb
jbe
cmpsb
push
mov
or
inc
insl
test
ja
das
test
test
push
mov
or
scas
adc
push
mov
ja
add
push
aaa
imul
push
ss
pop
mov
rolb
addr16
lods
imul
push
fstpt
aaa
insl
xchg
rorb
outsb
or
mov
inc
cmpb
mov
push
add
test
mov
inc
pop
aaa
inc
repz
test
mov
or
insb
jg
ret
or
mov
mov
pop
mov
and
add
outsl
or
push
push
mov
push
stos
cmp
xchg
sbb
andb
insb
push
clc
mov
fs
add
or
roll
push
pop
inc
pop
lods
xchg
cmc
dec
fsubl
imul
jnp
dec
push
outsl
sub
xor
shlb
xor
ss
or
test
aas
or
sbb
mov
dec
mov
cld
sub
mov
push
sub
push
cld
std
mov
popa
add
add
push
dec
push
or
adc
push
sbb
sbb
in
daa
lahf
pop
jp
and
and
out
mov
and
jmp
lret
in
lock
int3
out
and
out
xchg
das
lret
xlat
jl
repnz
sbb
cmc
add
repnz
xchg
push
clc
std
adc
xor
dec
repz
add
movsb
cld
movsl
mov
or
addr16
mov
daa
push
cmp
dec
fs
push
inc
fs
add
dec
stos
loope
and
xchg
sbb
popf
in
mov
movsb
xlat
daa
mov
xchg
xchg
push
mov
dec
repz
lods
lock
scas
mov
cs
pusha
pushf
call
xchg
mulb
mov
push
mov
pop
mov
pop
mov
mov
idivb
cmp
pop
pop
mov
mov
push
in
add
mov
inc
pinsrw
je
in
jb
jl
lret
jo
int
into
fmul
cwtl
pop
cs
shlb
pop
fcom
cmp
sbb
xchg
out
mov
sub
aad
dec
ss
in
cld
call
js
fs
or
ss
xlat
push
call
repnz
idiv
insb
push
pop
cld
xor
xor
jae
sar
sbb
jl
add
adc
stc
sahf
jl
jp
movhps
sbb
pop
movsb
movsl
lods
and
xchg
mov
nop
pop
cmp
andb
push
mov
push
add
mov
or
pop
add
test
insl
add
pop
jo
les
mov
shrl
push
xor
imul
imul
mov
jnp
imul
sbb
jge
push
into
sbbb
cwtl
push
lods
nop
scas
sub
mov
movsb
aas
mov
xor
cmpsb
push
mov
mov
add
fcomps
cmp
movsb
mov
xlat
xor
or
pop
inc
pop
pop
xchg
push
rclb
or
add
xor
push
fisttpll
int3
and
test
int
insb
aas
call
jbe
dec
loopne
out
and
adc
jl
xchg
cmpsb
imul
int3
pop
lcall
int3
push
push
xor
cmpsb
mov
push
insb
test
ficompl
pop
cs
test
mulb
in
xlat
pop
fs
pop
mov
lcall
insl
aam
jl
in
mov
jb
lret
in
mov
fcoml
xchg
xchg
or
inc
mov
xor
dec
cmpsb
cmpsb
push
stos
xchg
les
test
lahf
add
inc
add
les
pop
push
jns
push
jnp
push
insb
push
fcmove
xlat
fsubl
jg
adcl
cwtl
cs
mov
sahf
push
jne
push
mov
movsl
jns
ret
ret
fsub
shlb
in
lds
aaa
lock
stos
push
pop
roll
push
daa
sysret
pop
and
or
inc
add
pop
cmp
and
mov
adc
popa
sbb
mov
adc
dec
or
inc
mov
test
adc
add
mov
push
jo
andl
daa
cld
ss
test
push
fsubrs
dec
inc
stos
js
pextrw
inc
adc
lods
dec
aaa
dec
push
dec
add
pop
mov
je
mov
sub
addr16
bound
es
repz
dec
cmp
clc
sub
jae
or
add
sbb
jge
dec
dec
xor
xor
cltd
xor
pop
add
scas
jae
cmp
fcompl
std
and
jae
push
dec
aas
inc
shr
push
dec
cmc
or
dec
insb
jo
cmpsl
add
xchg
sbb
jae
dec
test
sbb
jbe
jne
xor
les
pop
pop
inc
dec
or
or
out
rolb
cs
fisubrl
and
jae
and
push
cmpsb
xchg
std
jae
add
push
in
inc
mov
mov
mov
inc
test
cltd
xchg
adc
push
je
push
rcr
xchg
inc
imul
sbb
jne
or
xchg
sbb
mov
dec
or
imul
cmp
in
scas
mov
push
jb
dec
xor
cmpsl
gs
sub
add
movsb
lock
or
insb
push
lods
lock
push
xor
cwtl
xor
pusha
test
into
fidivl
mov
aad
repz
cmp
sub
test
sub
or
inc
ja
jo
add
dec
pusha
mov
insl
rorl
sbbl
pop
adc
mov
pusha
pop
adc
pusha
sbb
arpl
imull
pusha
les
pop
insl
fcomip
and
push
mov
addr16
add
pop
or
bound
es
jmp
add
pop
push
rolb
jg
push
loop
add
es
sub
jae
imul
mov
lret
ljmp
inc
sbb
xchg
push
or
outsb
mov
fiadds
ljmp
jo
push
and
push
inc
dec
ret
push
jne
adc
sub
adc
adc
xor
adc
sbb
xchg
movsb
lea
subl
rorb
xchg
xchg
sbb
outsb
ds
xor
or
push
jb
ss
jl
xor
sbb
push
add
xchg
enter
xor
sahf
jge
sub
pop
pusha
mov
adc
xor
fxch
inc
out
pushw
pushf
dec
adc
mov
sahf
mov
rorb
aam
jns
add
cmp
push
add
xor
and
jne
dec
das
push
adc
push
sarb
push
repz
lods
aas
insb
add
push
or
orl
adc
das
outsl
mov
push
mov
pop
add
xchg
cmpb
mov
cli
mov
add
call
inc
les
mov
mov
enter
fisubrs
push
mov
ja
xchg
dec
repnz
data16
adc
cmp
leave
add
pop
das
cmp
or
dec
adc
mov
fisubrs
sub
xchg
sub
add
push
sub
xor
xor
lods
jl
scas
popa
stos
fmuls
xlat
xor
sbb
mov
lds
sbb
or
sbb
sbb
in
pop
daa
sbb
bnd
das
pop
das
xor
push
xchg
pusha
adc
sbb
dec
xchg
data16
mov
or
cmp
lahf
ret
or
pop
lea
push
pop
or
nop
mov
jl
and
cmp
lock
lock
js
js
xchg
mov
in
adc
addb
pushf
push
sub
adc
pushf
orb
fldenv
inc
adc
loop
inc
add
cmpsl
add
adcb
mov
cmpsl
fdiv
in
xchg
dec
in
add
mov
add
pop
sub
clc
enter
jg
sbbl
add
mov
jge
inc
add
popa
sarb
push
fcomp
inc
ficoms
mov
pop
les
leave
sbb
dec
jae
cmp
xor
add
call
nop
sbbl
adc
push
add
inc
push
jb
add
add
pop
cmp
pop
adc
adc
jb
sbbl
push
or
or
enter
or
sbb
and
and
and
and
push
jb
andl
sub
adc
sub
cs
xor
sbbl
xor
xor
ss
push
jb
sbb
sbb
sbb
cmp
ds
inc
and
cmp
ds
jl
enter
clc
int3
div
inc
es
pop
sub
cmp
nop
hlt
hlt
hlt
hlt
cmp
nop
inc
hlt
hlt
hlt
in
inc
push
hlt
hlt
hlt
nop
inc
push
cmp
hlt
hlt
inc
push
cmp
hlt
hlt
hlt
push
cmp
nop
hlt
hlt
hlt
hlt
cmp
nop
inc
hlt
hlt
hlt
in
inc
push
hlt
hlt
hlt
nop
inc
push
cmp
hlt
hlt
inc
push
cmp
hlt
hlt
hlt
jb
cmpl
inc
das
inc
cmp
enter
cmp
ds
aas
iret
lds
pop
dec
pop
push
push
hlt
shlb
xor
lock
inc
adc
lock
jbe
cmpl
push
aas
or
sbb
sahf
lock
sbb
in
imul
mov
or
in
loopne
inc
xchg
call
das
adcl
jecxz
or
mov
ds
lret
fs
and
fxch
or
pop
sbb
lock
add
call
pop
add
adc
in
add
push
adc
sub
sbb
push
and
dec
imul
and
and
mov
mov
and
stos
xor
xor
adc
xchg
dec
scas
pusha
and
insl
adc
mov
in
and
mov
sti
inc
fs
or
loopne
fistl
shlb
mov
rclb
xchg
sbb
and
xchg
or
sarb
lret
mov
enter
xor
xor
repz
add
sub
leave
adc
inc
lahf
mov
jg
xor
enter
addr16
or
jl
mov
jl
or
or
cmp
in
push
fs
and
in
push
sub
orb
inc
xor
sbb
push
sahf
push
dec
xchg
xchg
push
pushf
pop
jb
mov
cmp
pop
mov
or
adc
cld
sbb
cwtl
ret
add
ret
mov
dec
and
js
inc
shrb
mov
movsb
or
dec
adc
adc
sbb
pop
bound
fidivl
xor
push
cmp
pop
imul
pop
popa
jg
mov
push
xor
mov
add
inc
or
insb
xor
cwtl
es
pop
xchg
or
outsl
shrb
or
les
mov
aam
jbe
xchg
cmp
add
xorl
xchg
loopne
sbb
jle
push
lcall
adc
call
int
sub
das
sub
repnz
cmp
aaa
xor
or
add
cmpsb
xor
add
and
mov
in
pop
mov
int3
xlat
xor
out
lret
sbb
call
dec
loopne
mov
pop
or
lods
ficoml
ja
xor
and
sti
xor
jmp
neg
push
xor
ljmp
jmp
in
cwtl
push
js
ret
dec
dec
or
dec
mov
mov
xlat
stc
fiadds
adc
repz
cmpsl
or
ss
pushl
adc
rorb
loopne
add
jo
mov
call
pop
dec
negl
xchg
mov
call
cmpb
push
mov
arpl
adc
mov
movsb
cmpb
jne
xchg
loopne
sbb
cmpsb
imul
rcrb
scas
sbb
push
push
aas
leave
jb
mov
and
pop
sub
sub
test
movsb
and
leave
cmp
add
inc
sub
xchg
mov
sbb
and
xchg
mov
pusha
sub
dec
xchg
xchg
mov
dec
nop
cwtl
dec
xchg
sub
rcl
dec
xchg
leave
push
jb
adc
xchg
or
inc
xor
leave
push
xor
mov
shl
mov
push
adc
inc
sub
dec
xchg
test
and
leave
mov
and
or
pop
xor
in
cmp
loopne
xchg
pop
leave
jo
adc
sarb
dec
orb
or
repnz
or
enter
stc
pop
and
daa
pop
sub
icebp
incl
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
jmp
in
and
outsl
push
loope
out
cmp
sbb
add
and
mov
call
jmp
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
nop
mov
add
add
sbb
sahf
cmp
sbb
pushf
or
xchg
daa
dec
int3
sub
inc
in
inc
jns,pt
lock
js
push
repnz
daa
sub
cmp
sbb
cmp
pop
sub
jo,pn
adcb
xchg
daa
mov
pop
movsb
decl
xchg
dec
mov
add
rcrb
add
jns
repz
loopne
hlt
add
jns
sbb
cmp
daa
inc
ds
sbb
inc
sbb
sbb
in
cmp
insb
cmp
and
in
xchg
and
outsl
movsb
sbb
daa
cmp
sbb
mov
fistps
lock
jo
je
sbb
pop
fistpll
je
add
das
js
jns
sbb
sub
ja
cmp
fndisi(8087
mov
pop
pop
jl
mov
jl
sbb
pop
cmp
jnp
int3
cs
jo
das
and
in
repnz
in
mov
lods
arpl
roll
pop
repz
setbe
fs
stos
dec
subl
push
adc
leave
mov
add
sbb
mov
addr16
movsb
push
xchg
dec
jae
or
cs
scas
mov
outsl
jl
sbb
mov
pop
jb
jae
xchg
xor
add
fs
popa
pop
add
add
nop
inc
push
sbb
pop
or
sbb
or
nop
or
push
nop
inc
push
sbb
adc
adc
add
imull
aad
pop
add
adc
das
add
xchg
push
mov
andb
subb
insl
inc
loop
iret
aaa
add
shlb
mov
sti
nop
inc
imul
cld
addr16
es
xor
xor
roll
cmp
dec
push
pop
dec
shll
test
pushf
movsb
lods
mov
xor
sarl
shlb
mov
lcall
push
inc
dec
push
pop
leave
sbb
adc
out
enter
pop
adc
xor
dec
xchg
mov
add
adc
sbb
lcall
fdivrl
adc
adc
pop
fldenv
xchg
mov
push
insb
add
mov
adc
mov
add
add
add
add
rclb
mov
in
or
imul
mov
das
push
jbe
pop
mov
das
in
xchg
pop
or
or
ja
add
or
add
push
or
or
add
pop
push
jo
test
imul
cmpsb
imul
xor
clc
icebp
or
inc
pop
jl
aaa
and
xchg
movups
adc
mov
hlt
ret
daa
js
push
push
inc
and
cmp
pop
add
add
cltd
push
jne
lods
push
arpl
out
loope
cwtl
jne
or
mov
rdmsr
add
add
cmp
or
push
push
aas
ds
jmp
xor
into
loopne
pop
sbb
iret
add
xor
test
das
fsubs
push
cmp
int
imul
xor
sub
jns
cmpsb
jge
mov
sub
clc
push
lret
xchg
adc
push
cmp
dec
or
icebp
or
cld
mov
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movsl
in
bound
dec
mov
mov
push
xor
dec
cmp
jmp
sbb
mov
dec
jge
dec
pushf
sbbb
aam
mov
cmc
jl
push
jp
inc
inc
xchg
imul
lds
and
sar
inc
dec
decb
test
push
pop
cmovno
push
and
jne
faddl
and
in
orb
or
subb
scas
add
pusha
cmpb
in
add
rol
in
mov
push
hlt
add
mov
dec
daa
lahf
rorl
jle
cld
in
jmp
cmpsb
lret
sti
leave
ja
jg
add
mov
cmovo
cmp
repnz
or
add
paddsb
xchg
daa
mov
adc
adc
dec
mov
jl
push
movsb
sbb
sbb
mov
xchg
adc
fs
mov
daa
cmp
mov
fadds
mov
in
xchg
sbb
nop
add
push
imul
and
sub
push
inc
push
pop
repnz
xchg
adc
enter
sbb
or
xchg
daa
cmp
add
repnz
push
addl
mov
pusha
mov
repnz
mov
mov
dec
sahf
cmp
incl
test
sbb
arpl
test
aaa
out
movsl
or
mov
jae
mov
imul
pop
cmp
push
jne
adc
or
or
and
loop
repnz
scas
addr16
add
out
dec
pop
adc
and
mov
mov
adc
sbb
add
jb
dec
push
mov
aas
add
lea
sub
adcb
mov
aam
shll
adc
and
dec
shll
adcb
fdiv
sub
mov
cli
add
lock
push
cmc
ds
jle
mov
cmc
out
mov
fsub
iret
inc
fimuls
inc
or
cmc
xor
jmp
push
cmc
fidivs
test
clc
ljmp
cli
inc
add
cmc
out
out
lahf
aas
sub
jmp
push
out
aad
fisubrs
lods
jmp
mov
fidivrs
lock
push
xor
and
push
lock
jle
cld
push
cmp
out
cli
int
jmp
out
stc
repz
les
fidivrl
orb
decl
inc
cld
stc
leave
adc
pop
cli
xorb
jg
fwait
mov
call
sar
arpl
lock
dec
adc
stc
repz
sub
cmp
imul
mov
mov
mov
jmp
inc
cld
stc
repz
inc
adc
int
aas
out
aaa
jg
jmp
mov
call
repz
cli
cli
rclb
mov
hlt
lods
ljmp
lret
sti
xchg
or
dec
and
dec
push
nop
out
nop
push
adc
fwait
aas
jg
lods
mov
fisubl
out
lahf
mov
repz
mov
push
sub
jl
int
mov
xchg
cld
rcrb
data16
dec
sub
jno
aas
jg
pusha
mov
mov
enter
hlt
mov
dec
sub
dec
push
pushf
stc
repz
rorb
jg
dec
or
mov
cmp
out
out
jo
jmp
fsub
rolb
xchg
in
push
cld
stc
jae
js
pusha
dec
add
stc
in
je
lods
inc
loopne
pop
jg
adc
repnz
xor
push
pop
inc
imul
push
mov
sbb
add
rcll
pop
sahf
mov
inc
add
xchg
add
in
push
nop
pop
push
push
adc
xor
int3
jl
aas
test
mov
push
rol
adc
jo
cmp
lahf
aas
insb
mov
jo
enter
fmull
call
push
inc
out
sub
fidivl
out
lahf
xchg
frstor
fcomp
ljmp
aas
jg
jl
add
ror
mov
fimuls
push
jmp
mov
push
call
or
out
push
cmp
mov
push
int
jo
nop
mov
cmc
cmc
cmc
fsub
pop
pop
or
push
jg
cld
stc
sub
in
push
dec
cmp
dec
mov
mov
lcall
orb
add
je
nop
lret
pop
or
pop
nop
xor
dec
addb
nop
cwtl
daa
mov
dec
test
mov
dec
shll
call
mov
push
push
jo
dec
shll
mov
insb
test
imul
add
sarb
gs
pop
mov
or
inc
mov
or
mov
jbe
pop
add
imul
cmpsb
imul
imul
cmpsb
imul
add
or
fdivrl
cli
add
or
lahf
inc
add
add
xchg
or
pop
daa
sbb
push
sbb
add
mov
and
or
data16
add
cmp
or
add
daa
lods
sub
outsl
lds
xchg
pop
nop
sbbl
mov
ss
xchg
ss
add
ss
mov
or
dec
mov
or
cltd
sub
pop
or
sub
pop
es
sub
inc
adc
leave
xchg
daa
dec
xor
dec
cli
push
in
clc
lods
not
div
cmc
leave
xchg
daa
popl
xor
push
repnz
repnz
icebp
nop
lock
aam
leave
xchg
inc
sahf
hlt
in
inc
or
xor
les
in
dec
ljmp
cmp
add
or
lds
jae
inc
inc
cwtl
push
in
push
insl
int3
add
inc
dec
test
lahf
pop
rcr
imul
mov
fwait
arpl
xchg
pop
push
ljmp
or
or
add
fadd
sbb
data16
mov
push
sarl
xor
sub
jmp
mov
jb
mov
adc
rcrl
mov
pop
fs
sarb
cmp
js
lahf
adc
add
dec
mov
push
js
out
dec
dec
repz
mov
loop
dec
out
xchg
pop
addr16
adc
pop
or
adc
lcall
pop
pop
mov
in
pop
sti
int
cmc
popa
outsl
sbb
jmp
or
movzbl
in
lock
or
mov
cmp
push
outsb
add
push
add
push
imul
xor
mov
nop
sbbl
mov
pop
popa
add
add
ja
nop
add
mov
pop
loopne
add
jns
push
xlat
push
and
mov
adcb
inc
dec
dec
dec
dec
ret
test
out
or
dec
add
push
dec
nop
hlt
adc
dec
inc
dec
add
and
adc
add
sub
or
imul
je
sub
bound
in
arpl
test
lea
push
inc
sbb
jo
test
outsb
arpl
add
fsubrs
and
js
pushf
rolb
outsl
mov
jo
mov
rorl
or
into
jo
in
movsl
adc
daa
arpl
add
pusha
jmp
cs
arpl
sub
pop
and
insb
insb
and
inc
fnstcw
sbb
testb
cmp
and
and
addl
je
add
or
push
insl
imul
inc
xchg
push
xchg
mov
jb
arpl
inc
jp
imul
mov
and
push
movsb
push
dec
add
dec
sbb
daa
je
cmc
xor
aad
testl
lods
and
or
xchg
adc
fiadds
sbb
lods
andl
ret
stos
or
jecxz
mov
leave
cmp
les
testl
sub
std
dec
push
dec
pop
and
cwtl
rcr
inc
jae
int
shll
push
xor
ja
je
inc
add
sub
js
and
xchg
dec
and
movaps
bound
enter
leave
dec
push
dec
dec
mov
test
scas
pop
mov
pusha
je
jae
and
fs
pop
arpl
insl
cmp
fmuls
dec
outsb
pop
sbb
addl
jmp
inc
dec
xor
lcall
and
sbb
inc
add
outsb
inc
rcrb
push
sbb
pop
push
rorl
cs
ret
inc
dec
xchg
xchg
cmpsb
mov
pcmpgtd
pop
inc
sti
loope
push
fldcw
push
push
mov
clc
cld
cmpsb
sub
sbb
sub
fmuls
lods
adc
movsb
adc
or
jns
xor
outsb
loope
adc
int3
ja
shlb
popf
pop
stos
pop
icebp
pop
push
sti
pop
sub
mov
jge
fistpl
jbe
loop
sub
fadds
add
pop
andl
cmp
popa
cmp
je
add
insb
orl
adc
dec
sbb
leave
mov
xor
jnp
mov
pop
lret
leave
imull
pop
js
add
xor
jge
push
shlb
jnp
xor
or
popa
rorl
jo
dec
outsl
int3
lahf
xchg
mov
insb
dec
push
sub
xsave
pop
jne
sti
inc
adc
and
sbb
lea
xor
push
cmp
sbb
xor
inc
push
fstl
jne
sarl
ret
push
xchg
adc
je
ret
lea
fmull
mov
pop
jmp
push
out
popa
jbe
jo
mov
mov
cs
xor
andb
rcrl
pop
pop
test
and
leave
pop
addr16
cmp
jo
leave
jo
inc
sbb
pop
mov
sbb
test
pop
push
rcrb
ret
and
xor
add
push
shll
outsb
jns
gs
adcb
fcoms
dec
repnz
adc
add
popa
insb
jle
push
sbb
icebp
pop
xor
aaa
jmp
ret
loopne
out
dec
insl
test
test
js
loope
mov
sub
jg
add
push
jo
add
sbb
cmpb
nop
enter
jmp
popa
loopne
dec
dec
inc
inc
lods
push
add
outsl
outsb
fnsave
push
bound
mov
add
sub
inc
or
push
dec
push
push
mov
addr16
imul
inc
and
sbb
xor
push
jnp
push
in
insb
add
das
xchg
pusha
adc
cmpsl
cmp
inc
mov
sbb
mov
push
inc
push
inc
sub
popa
push
mov
jmp
push
sub
push
lods
popf
outsl
pop
pop
adcb
pop
fnstcw
sub
pop
jl
mov
xor
jge
or
out
dec
popa
xor
test
nop
cmc
lock
fwait
and
add
or
inc
mov
aas
add
inc
add
or
xor
outsl
mov
push
or
pop
or
inc
push
or
lahf
fcoms
sbb
dec
inc
dec
inc
inc
pop
jnp
push
rorl
xchg
push
mov
je
lcall
pop
sub
aas
jnp
cs
sub
pop
push
pop
ljmp
ljmp
test
dec
adc
adc
pop
or
sbb
pop
add
jb
push
pushf
push
fwait
shl
jne,pn
clc
pop
cld
addr16
ud2
push
adc
leave
pop
add
and
add
nop
or
add
imul
fisubl
add
shr
mov
aas
add
ss
push
xchg
inc
add
push
jns
mov
or
sbbl
jns
scas
jl
jnp
xchg
xchg
add
add
ret
fwait
pop
mov
negb
or
xorl
int
fcoml
add
adc
fists
add
adc
out
pop
fcoml
sti
pop
add
add
add
outsb
outsb
outsb
outsb
sbb
adc
add
sbb
and
add
outsb
outsb
outsb
sbb
ds
add
sbb
jp
dec
add
push
fsts
add
aaa
aaa
mov
or
add
add
add
add
xchg
mov
add
or
add
add
lods
sub
or
xchg
pusha
pop
jbe
sub
push
and
popf
cmp
mov
jl
mov
and
xor
mov
daa
mov
daa
add
mov
pop
jnp
int
add
shll
sub
fldcw
outsb
outsb
or
loop
add
sub
stc
sub
jmp
movsl
add
aas
fdivl
or
add
add
adc
add
fisubl
adc
inc
jnp
fstpl
add
das
add
xor
dec
add
mov
xlat
scas
or
push
dec
cmp
pop
out
add
push
and
add
push
xchg
gs
sbb
int
int
dec
add
xor
jg
add
int
int
add
add
int
int
mov
add
add
cmp
jae
roll
adc
cmp
fmul
push
jae
mov
lret
or
loopne
adc
ss
sbb
xchg
arpl
adc
add
add
mov
addl
add
mov
test
add
or
and
add
xchg
sub
cmovno
xor
add
or
testl
cmp
jge
mov
paddw
lret
cmc
jle
outsw
adc
in
inc
jne
fcmovbe
hlt
cmp
push
insl
popa
fs
mov
adcb
pop
ss
es
inc
arpl
jo
rorl
imul
sub
add
inc
and
adc
dec
jae
imul
je
daa
inc
mov
jb
movd
addr16
in
inc
js
inc
gs
insb
xor
mov
xor
es
or
ja
xchg
sub
sbb
jne
xor
push
stc
push
in
outsl
outsl
lfs
dec
dec
stc
lcall
dec
imul
mov
lcall
xor
jns
push
outsl
jnp
scas
fnstenv
aam
insl
pop
inc
dec
es
daa
les
gs
or
imul
pop
inc
adc
sbb
outsl
je
jns
js
out
in
jo
fs
add
pop
inc
dec
sbb
mov
dec
mov
mov
rorl
fs
pop
pop
push
and
dec
dec
imul
fisttps
dec
addr16
dec
insb
pop
imul
fs
in
push
in
pusha
or
nop
dec
mov
sahf
sbb
xchg
or
add
jbe
pop
xchg
fs
xchg
ja
push
imul
push
lods
mov
push
add
popa
add
adc
or
mov
notb
insb
and
add
iret
icebp
jne
gs
jns
aaa
addr16
fnsave
loop
xchg
inc
insl
push
sbb
push
bound
outsl
stos
mov
or
filds
push
gs
jne
mov
clc
or
push
imul
rorb
subl
bound
ficoml
pop
add
jo
fs
aaa
cs
nopl
pop
das
push
adc
adc
in
and
adc
sub
sbbl
sidtl
fdivs
add
pop
jns
jbe
lods
insl
add
into
push
cmp
push
add
fs
sbb
mov
rorb
into
sbb
int
lret
ret
push
lret
iret
iret
popa
das
ret
push
sbb
mov
enter
pminub
sahf
inc
push
pop
lahf
sbb
sbb
cmp
or
mov
bswap
jbe
enter
sub
pop
mov
push
sbb
cmp
jbe
inc
fistps
sub
sbb
iret
nop
inc
xchg
inc
push
sbb
das
enter
sub
xchg
sub
out
es
mov
mov
inc
icebp
or
push
out
bndstx
movsb
loop
or
out
adc
enter
adc
mov
das
sbbb
and
inc
aas
dec
add
inc
fimull
fneni(8087
addr16
inc
push
loope
shll
push
imul
or
lret
inc
rorb
cmpsb
or
mov
stos
mov
scas
loopne
jnp
les
mov
jb
aas
ret
or
stos
ja
xor
and
sahf
cs
mov
sbb
bnd
ud2
dec
sysenter
adc
sub
sbb
scas
add
mov
out
push
adc
sbb
jae
adc
and
cltd
sbb
or
enter
or
jg
push
add
pop
or
aaa
aaa
aas
fstl
das
aas
scas
fidivrs
sbb
sbb
fs
inc
pop
or
sbb
dec
add
orb
add
pop
pcmpgtb
outsl
adc
sbb
sbb
enter
sub
inc
xchg
sub
inc
ficomps
jbe
fbstp
pop
nop
or
nop
cmp
adcl
push
pop
orl
or
ss
sbb
sbb
enter
sbb
aas
and
xchg
and
lahf
and
fsubs
das
pop
das
das
popf
inc
dec
fisubrs
adc
push
in
push
aas
scas
and
cmp
aas
orl
cmp
sbb
and
and
nop
inc
fimuls
or
adc
sbb
mov
push
pop
pop
fs
inc
dec
sbb
cmovg
pop
sub
xchg
arpl
adc
dec
push
cmp
push
adc
mov
fbstp
xor
pop
nop
inc
push
sbb
push
push
ja
sbb
pop
push
cmp
fs
add
aas
adc
or
pop
or
push
adc
or
fs
inc
sbb
dec
push
push
and
or
push
sbb
adc
jg
daa
fmuls
orb
insb
add
adc
cmp
movb
jns
nop
popa
pop
dec
dec
push
or
inc
push
or
cmp
fs
fs
inc
push
adc
cs
out
add
push
mov
cs
lds
loop
add
push
clc
decl
push
xor
and
mov
or
mov
xchg
in
idivl
mov
or
pushf
nop
loope
xor
addb
xchg
sbb
sbb
enter
ret
mov
loop
mov
jmp
shl
push
pop
adc
lock
sbb
sbb
cs
faddl
pcmpeqd
fildll
icebp
pop
sbb
fdivs
psubusb
das
in
add
aaa
add
loope
or
mov
xor
cmp
cmp
pop
push
push
pop
enter
outsl
sbb
inc
push
sbb
sbb
mov
mov
das
cmp
or
push
in
aas
dec
das
dec
sbb
decl
push
test
push
das
mov
push
fadds
or
or
inc
outsl
inc
dec
ds
push
sbb
or
or
inc
dec
inc
ficomps
in
cs
fs
popa
inc
aas
inc
inc
inc
inc
ficomps
inc
push
or
incl
jg
sbb
adc
adc
pcmpgtb
and
inc
inc
movaps
adc
cmp
enter
cmp
or
dec
or
fdiv
scas
ljmp
dec
sub
or
in
inc
setge
ret
lahf
inc
cs
pop
push
xchg
ds
nop
ja
push
aas
or
inc
dec
add
adc
fistl
or
imul
push
push
pop
pop
or
add
add
or
cwtl
jne
outsb
xor
or
add
add
ljmp
sbb
imul
add
adc
add
ss
adc
push
pop
mov
or
adc
scas
xor
push
fadds
sbb
push
arpl
pop
stc
mov
sbb
sbb
sbb
sbb
or
add
pop
add
cs
and
and
mov
pop
daa
scas
sub
sub
push
add
sub
ss
cwtl
add
mov
ucomiss
push
pop
inc
aaa
add
rorb
or
mov
xchg
xor
xor
mov
fwait
mov
xor
and
push
and
jno
outsl
jle
mov
or
inc
repnz
imul
and
inc
lods
fwait
xor
inc
add
push
pop
xchg
mov
lcall
xchg
dec
dec
add
insl
insl
out
dec
push
dec
push
xor
arpl
add
test
and
inc
xor
scas
das
inc
cmpsb
fidivl
pop
add
inc
insb
or
ret
sub
bound
pop
push
repnz
pop
inc
jp
add
add
scas
xor
and
push
pop
push
cmp
mov
add
push
imul
pusha
add
jle
add
daa
adc
repz
push
sbb
insb
xchg
insl
add
add
push
ljmp
jb
pop
jne
and
add
xchg
or
or
jp
lcall
jge
adc
pop
and
fiaddl
xor
es
add
push
addl
push
test
inc
sbb
xchg
add
mov
mov
mov
jnp
add
dec
cmp
mov
push
adc
int
push
mov
xor
or
sahf
sbb
add
mov
cmpb
lea
in
push
xchg
xchg
add
mull
pop
notb
ss
add
outsb
xchg
add
mov
mov
fldenv
addr16
push
cltd
and
sbb
movsb
xchg
xchg
cltd
sahf
inc
push
add
add
dec
fwait
pushf
outsb
cmpsb
fs
popf
sahf
lahf
add
adc
mov
mov
xchg
ss
add
or
mov
mov
mov
cmp
add
add
cmpsb
add
in
add
insl
mov
push
pop
jmp
ja
pop
xor
push
ficoml
imul
add
ss
sarl
add
xorb
rcl
pop
fwait
lods
add
aad
pop
scas
add
mov
ljmp
and
movntps
in
bound
mov
adc
mov
mov
add
mov
mov
daa
aaa
push
jb
push
pop
push
leave
xor
add
pop
das
jp
and
ja
mov
insl
xorb
add
lsl
push
sub
mov
divb
mov
inc
xor
add
jnp
add
notb
add
mov
es
enter
adc
push
mov
pop
xor
cmpxchg
fstpt
xor
sbbb
in
push
add
push
imul
push
ret
inc
insb
insl
push
in
fisubs
push
les
fsubs
movlps
in
fcomp
and
ret
push
sbb
push
mov
mov
daa
enter
add
mov
push
lsl
movsl
mov
push
out
push
enter
dec
dec
jnp
es
lret
aaa
dec
fldt
insl
add
dec
imul
int3
mov
and
push
add
push
lsl
out
int
adc
fiaddl
into
adc
das
lea
and
and
fistpl
insl
sub
rolb
push
push
in
push
leave
add
pop
push
push
or
into
insb
xchg
or
add
shr
and
push
sub
test
dec
insb
sbb
or
testl
fmuls
flds
fisubrl
inc
lcall
cltd
fisttpl
pop
dec
add
fimull
mov
fmull
add
push
mov
dec
pop
sbb
dec
add
movl
filds
loopne
loopne
add
loop
jecxz
fisttpll
in
pop
in
adcl
fbld
fs
or
push
loop
xor
jnp
add
push
add
test
sbb
push
das
adc
inc
insb
push
add
insl
insl
rorb
adc
sbb
insl
aas
push
jmp
in
fistpl
sub
shrb
jmp
adcb
dec
add
jnp
add
push
xor
dec
xor
out
push
cmp
add
lock
add
xchg
stos
stos
and
pop
push
cmpb
andb
push
aas
push
nop
mov
adc
push
pop
in
sub
inc
add
add
add
adc
add
pusha
pop
hlt
add
cltd
adcb
fs
stc
in
sbb
sti
orb
jg
add
call
sbb
daa
add
aaa
add
insb
jg
add
add
mov
jg
add
in
adc
add
sub
fildl
push
pop
add
jg
out
fimull
add
or
add
mov
dec
or
or
rolb
femms
mov
dec
cmpsl
sgdtl
mov
add
aas
adc
adc
mov
adc
add
adc
mov
pop
insl
adc
add
or
add
add
in
fsubrs
sbb
fadds
sbb
sub
sbb
add
pop
xlat
mov
insb
mov
and
mov
aas
sbb
sbb
add
push
scas
sbb
pop
add
mulb
and
add
fiaddl
add
aaa
fs
cmp
and
xchg
data16
xchg
pop
adc
sub
arpl
sub
xlat
sbb
shrb
sub
push
decl
mov
add
sub
dec
push
nop
sub
divl
das
add
insl
ja
pop
jnp
push
push
mov
loopne
in
cmp
add
mov
add
divb
push
xchg
xor
jmp
add
pop
inc
add
xor
sbb
sbb
cmp
adc
push
add
cmp
push
add
pop
xchg
pop
incl
in
jl
add
pop
add
xchg
and
and
pop
adc
aas
add
inc
cmpsl
inc
jb
inc
inc
add
inc
frstor
shll
aaa
push
mov
fisubrl
pop
push
insl
in
push
inc
pop
mov
imul
mov
jg
add
outsb
dec
push
xchg
cmp
rcrl
add
add
add
fucomi
mov
dec
add
add
mov
dec
add
aas
pop
add
mov
dec
push
add
outsb
mov
push
add
push
mov
mov
adc
push
add
add
pop
xor
xor
adc
mov
add
push
insb
dec
iret
outsl
add
aas
je
arpl
pop
or
adc
jbe
insb
xor
push
push
xor
xlat
out
sahf
rcr
add
into
bound
xor
das
enter
aas
outsl
push
add
add
adc
push
dec
dec
and
push
push
add
push
mov
daa
idivb
or
pop
mov
pop
movlps
add
ret
scas
insl
pop
jae
dec
pop
add
ja
mov
jg
sbbl
xor
xlat
add
add
push
pop
sahf
add
inc
leave
inc
jb
add
test
push
add
mov
mov
pusha
test
or
inc
push
scas
xchg
add
push
adc
xchg
push
mov
mov
outsb
or
xor
fwait
jg
sub
sub
sub
inc
mov
adc
adc
xchg
and
or
bound
arpl
add
add
push
add
add
mov
add
scas
push
adcb
push
mov
popa
push
mov
and
push
adcl
sub
dec
dec
pop
pop
rolb
imul
pop
or
ss
incl
fisubl
add
mov
mov
jae
and
sbb
mov
push
pop
or
rcr
push
add
push
enter
add
jecxz
je
mov
add
xchg
ds
imul
insb
add
outsb
inc
inc
or
mov
mov
add
mov
add
jb
jae
fiaddl
push
or
je
add
fimull
sti
jne
sub
jg
push
roll
jle
loopne
add
or
pop
or
call
push
inc
pusha
or
ficompl
out
outsb
adc
push
adcb
decl
mov
push
push
add
inc
and
js
pop
fcompl
jecxz
pop
add
add
xor
or
pop
out
jns
add
adcl
jp
mov
jbe
push
xor
adc
sbb
ss
jg
xchg
push
daa
loop
push
push
xchg
push
sbb
and
add
inc
cmp
jg
add
loopne
cmpb
push
pop
mov
fcomps
add
add
sbbl
mov
pushl
or
sub
or
in
push
add
push
incl
pop
test
xchg
cs
bound
mov
add
pop
test
add
add
and
or
push
add
movl
mov
mov
xor
mov
mov
pop
mov
xor
adc
lea
lea
mov
nop
or
popl
add
call
popa
sub
xchg
xchg
arpl
nop
ja
add
xchg
adc
add
xchg
and
nop
or
cltd
lcall
popf
stos
loope
jnp
pop
sahf
add
mov
mov
pusha
ud0
mov
mov
add
inc
in
test
push
add
inc
and
mov
sub
test
mov
mov
add
pop
xchg
and
daa
add
addb
mov
add
movsl
add
pop
add
aad
or
xchg
xchg
dec
xchg
or
xchg
adc
sub
repz
adc
xchg
mov
inc
in
outsb
out
add
push
inc
add
mov
pop
lcall
sub
scas
mov
add
add
xor
dec
rol
jns
dec
addr16
dec
add
test
mov
xor
adc
and
imul
adcb
add
test
push
imul
movsb
pop
test
push
into
addl
mov
test
cmp
lds
xor
imul
mov
dec
pop
ds
and
cmpsb
add
inc
pushl
fwait
add
adc
cs
or
test
inc
xorb
movsb
or
or
jbe
add
push
add
sub
mov
add
lods
add
scas
add
scas
and
add
or
repnz
push
add
push
add
pushl
or
mov
or
xchg
out
add
in
mov
scas
mov
mov
inc
mov
fldt
nop
pop
aad
mov
nop
mov
add
jo
jg
inc
ja
ja
add
add
or
sbb
xorb
add
mov
scas
sbb
add
cmp
add
inc
push
jnp
les
add
fisubrl
add
inc
xor
inc
pop
xor
stos
or
mov
movl
mov
add
insl
and
and
mov
mov
push
repnz
mov
inc
xor
enter
add
add
pop
iret
push
add
lahf
imul
jbe
add
adc
iret
xor
mov
and
and
iret
mov
daa
add
loopne
adc
adc
push
add
adc
push
mov
test
mov
inc
push
repz
fiaddl
jnp
mov
test
inc
push
fs
addb
sbb
pushl
adc
sbb
push
push
sbb
es
sub
sub
sub
call
mov
jg
cmp
cmp
ds
aas
inc
roll
dec
insb
cld
push
dec
dec
aas
dec
pop
dec
adc
dec
push
push
push
push
push
push
push
push
pop
in
in
xor
inc
pop
add
jg
scas
or
pusha
popa
bound
fs
or
addr16
push
imul
xor
pop
pop
outsl
jo
aas
repnz
pushl
jae
jne
ja
jns
jnp
jge
jle
addb
adc
adc
incl
mov
nop
xchg
xchg
xchg
xchg
inc
repnz
enter
xchg
adc
cwtl
adc
cltd
sub
add
push
test
jle
lcall
sub
outsb
popf
xchg
ret
incl
push
sbb
or
xchg
stc
negl
inc
loope
cmc
inc
popa
in
push
das
loope
cmp
lds
pop
pop
cmp
popa
xrelease
xchg
jg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
jg
dec
call
aad
xlat
fcomp
fcmovu
jno
jecxz
in
out
jg
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
and
sar
cld
jmp
xor
test
adc
sub
xor
xchg
je
leave
movb
xor
aas
insl
insl
push
lea
adc
xchg
aam
in
cwtl
add
aas
movsl
sbb
inc
xor
or
mov
fnstcw
and
addb
ss
adc
jge
add
fsubs
adc
add
push
add
pop
insb
xor
shll
mov
ror
fsubr
cld
pop
or
dec
push
inc
pop
mov
fisttps
mov
je
fmuls
fisttpll
out
fsubrl
inc
lods
js
std
pop
push
loopne
push
mov
enter
mov
lods
push
test
cwtl
fadds
lock
pop
lods
std
dec
test
aam
or
cs
test
or
outsb
xchg
sbb
mov
jae
das
insb
or
push
and
lods
push
enter
pop
mov
mov
subb
mov
cltd
jle
comiss
push
jo
push
out
xchg
fcoml
imul
js
cmp
push
je
mov
lods
sub
and
push
mov
imul
outsb
out
out
push
fs
imul
xchg
test
test
xchg
adc
mov
push
sbb
pushf
mov
mov
jge
fadds
or
es
dec
mov
in
loope
into
in
push
jle
out
push
andb
leave
add
pop
les
cwtl
imul
dec
iret
push
jecxz
pop
call
or
cmp
mov
and
or
cmp
xchg
xor
into
mov
push
push
movsb
ss
adc
mov
mov
pusha
jbe
xchg
shlb
imul
outsl
jl
in
insl
xor
jle
hlt
push
in
dec
test
cmp
rcr
dec
push
mov
out
mov
fisubl
lock
inc
push
je
mov
pop
imul
or
lods
push
dec
cmpsl
call
imul
aam
testb
or
mov
lods
cmp
mov
jl
sub
jbe
cmpsb
mov
push
xorb
xchg
rorl
push
dec
lods
cmpsb
jmp
inc
pop
fs
mov
mov
sbb
cmp
int3
push
shlb
push
les
fstpt
push
mov
xchg
jg
mov
sub
in
call
mov
idivb
adc
les
scas
out
cmp
mov
dec
inc
mov
aam
out
iret
neg
and
xor
lods
mov
xor
push
pop
mov
push
mov
movsb
dec
enter
cltd
add
sbb
push
imul
mov
or
push
xchg
push
jl
dec
xor
jle
add
or
enter
insl
mov
jbe
fsubl
mov
xor
ss
es
sbbl
mov
mov
lods
fidivs
mov
lods
mov
ss
lds
jae
nop
pop
sub
mulb
jbe
sub
js
push
mov
push
nop
xchg
scas
push
sub
add
dec
rcrb
pop
push
rcrb
loopne
loopne
outsb
inc
push
enter
lret
mov
je
or
pop
imul
mov
push
mov
mov
push
pushf
jbe,pn
pop
mov
xchg
mov
push
dec
inc
mov
mov
pop
data16
orb
lods
xchg
cmpsb
dec
sbb
xor
mov
mov
lock
sbb
mov
fadd
mov
mov
push
es
lods
mov
cs
loopne
clc
jbe
push
pusha
inc
mov
jo
hlt
jle
jle
cltd
dec
cmpsb
jp
push
mov
int3
ficoml
data16
mov
xchg
adc
push
lret
test
mov
push
orl
pop
xchg
scas
jno
add
push
jo
enter
aas
sbbb
xorb
xor
xor
xor
enter
enter
mov
mov
nop
xchg
orl
push
cwtl
or
inc
shll
enter
mov
mov
add
in
xor
mov
enter
or
in
cmpsl
addr16
sbb
lods
imul
xchg
add
roll
mov
xchg
dec
adc
sub
insl
lods
sub
pop
stos
sub
jb
xor
fs
insb
add
test
add
imul
shlb
sub
push
mov
add
cs
inc
and
jns
or
push
nop
sahf
push
outsl
dec
outsl
adc
adc
imul
gs
iret
insb
imul
dec
pop
imul
mov
sbb
jae
push
dec
inc
push
mov
xchg
sub
mov
pop
jne
je
add
pop
loope
push
imul
addb
add
mov
out
addl
test
scas
adc
mov
inc
dec
dec
or
shlb
insl
dec
jae
mov
xor
sbb
adc
add
add
adc
or
push
add
sbb
adc
nop
push
add
inc
inc
add
add
add
or
push
or
pop
or
js
sub
movl
cltd
jnp
fstpt
cmp
mov
jns
xchg
aas
inc
inc
or
xchg
or
pop
jno
dec
pop
imul
inc
and
adc
push
cmp
push
mov
incb
pushl
cmp
add
or
fstps
incb
mov
mov
sbb
dec
addb
pop
enter
incb
cld
jg
clc
dec
repz
lock
jmp
rcl
dec
xor
cld
add
pop
or
push
xchg
notb
push
addr16
jb
add
jnp
or
push
mov
mov
add
add
pop
fldt
psubb
addr16
in
sbb
ficompl
imul
cmp
add
out
jns
leave
loopne
lock
sbb
pop
pop
lods
fstp
xchg
aas
push
cs
push
xor
addr16
and
ret
mov
xor
xor
pop
std
sar
mov
addb
mov
xlat
insb
jl
inc
add
jle
test
pop
inc
add
cmp
jo,pt
iret
rolb
sbbb
pushl
popf
xor
push
cwtl
pop
popf
mov
pop
aas
es
push
add
nopl
into
push
add
add
mov
lret
es
push
stos
xorps
mov
dec
pop
outsb
es
pop
cs
data16
clc
lock
aas
test
pop
clc
dec
add
mov
xchg
jbe
inc
pop
outsb
es
lods
fs
loope
adc
add
hlt
addb
pop
sbb
sub
addb
push
push
cs
cs
jle
rorl
addr16
pop
lret
or
in
les
test
cmpb
pop
push
ja
push
cs
test
addr16
cmp
push
inc
mov
aaa
pop
push
out
in
add
inc
sbb
inc
cs
stc
jo
and
or
jg
or
int3
in
cmp
sub
inc
add
inc
addl
inc
shll
xor
sbb
push
and
aaa
jg
ret
shll
ds
lock
pop
sbb
mov
sbb
or
test
jmp
jge
add
sbb
and
jno
adc
jnp
rorb
cmpsb
out
aam
and
xor
jb
movb
cmp
out
sbb
arpl
push
mov
insl
scas
sbb
fisubrl
jno
imul
cwtl
imul
xor
or
arpl
outsb
es
add
mov
jecxz
rcrb
jne
dec
pushw
cmp
fisubl
xor
sub
fsubl
cmpsb
sub
jo
fidivl
jae
jo
mov
sarl
outsl
sub
jae
mov
das
jo
loop
adc
jae
sti
jb
pop
stos
and
sbb
fldl
xor
ljmp
jns
das
dec
icebp
movb
or
sbb
iret
cmpsb
lret
popa
push
jp
jle
in
outsb
ss
sub
inc
mov
mov
shrl
data16
nop
mov
pusha
xor
cmp
adc
ret
fwait
pop
rorb
adc
insl
push
jbe
lahf
fmuls
iret
push
out
adc
out
dec
pop
imul
outsb
add
push
sub
mov
out
xor
mov
pop
push
divps
mov
pop
outsl
mov
adc
jle
fs
test
push
addr16
jae
sbb
dec
add
mov
push
sub
jne
ficoms
or
pop
fs
nop
jmp
lahf
fisubrs
adc
adc
sbb
mov
imull
pushf
inc
subl
inc
sarb
pop
subps
sub
sub
fstp
dec
or
dec
pop
mov
pop
dec
imul
add
scas
and
adc
add
outsb
or
outsb
fildl
push
mov
in
or
push
xchg
jg
scas
shrl
or
sub
ja
push
xlat
popf
mov
out
mov
sbb
and
sbb
outsl
xor
mov
sbb
mov
outsl
jecxz
out
adc
pop
dec
outsb
xorl
ret
lds
jae
add
inc
pop
mov
or
repz
or
ds
rcll
mov
push
mov
repz
jle
dec
dec
dec
push
add
mov
inc
mov
popa
ret
inc
test
sub
add
out
ret
sahf
push
mov
addb
push
shrb
dec
add
add
push
aaa
mov
xor
add
bound
pop
push
inc
push
push
into
mov
push
inc
jle
sub
hlt
adc
mov
xor
mov
adc
push
cmpsl
push
mov
mov
jnp
and
mov
add
push
dec
add
push
jae
sub
mov
shll
mov
add
sbb
adc
sbb
push
lret
adc
mov
push
or
fcompl
jbe
imull
pop
stos
lret
enter
jae
xchg
roll
push
ficompl
sub
push
pop
inc
add
in
sbb
imul
test
cmpsb
dec
sbb
les
loop
lods
iret
xchg
pop
inc
xor
xchg
push
mov
xlat
out
inc
cmp
cmp
insl
sbb
in
jbe
fisubl
xlat
xor
xor
arpl
ret
sub
cs
ret
nop
dec
xor
orb
push
or
sub
nop
xlat
andl
ss
mov
push
sbb
jno
aas
iret
adc
fs
addr16
mov
inc
inc
dec
dec
rcrl
xchg
adc
push
mov
dec
add
add
jae
jnp
leave
pop
push
cmp
dec
sub
pop
movl
add
dec
sbb
and
enter
imul
sub
pop
push
ss
sahf
adc
test
movaps
push
fwait
pusha
cmpsl
ja
push
stos
sub
and
es
sbb
out
jecxz
push
mov
lcall
xchg
arpl
sub
mov
adc
out
dec
jb
mov
fistps
fisubl
aaa
imul
enter
mov
add
sbb
popa
mov
cmp
addr16
mov
adc
jnp
mov
out
lret
lret
add
lcall
inc
xor
inc
mov
out
jg
mov
xor
subl
ret
add
test
cmpsl
push
inc
or
scas
or
js
sub
jae
push
pop
jge,pt
shll
pop
popa
or
sub
mov
lret
cmp
mov
das
push
cli
repnz
fadds
fwait
jbe
fwait
push
pop
sbb
pop
adcl
ret
sub
cs
xchg
cmp
sbb
dec
pop
pop
or
vmovhps
mov
orb
pop
push
mov
add
jmp
test
or
and
or
inc
shll
aas
lahf
jmp
sub
fiaddl
and
js
push
xor
and
outsl
sub
or
adc
test
inc
sbb
pop
repnz
mov
ficompl
or
push
mov
rcrb
xchg
pop
xchg
cmp
rol
pusha
jecxz
dec
mov
sbb
outsl
push
jb
popa
rorb
xchg
push
insb
lret
ja
arpl
mov
adc
add
and
push
in
pusha
mov
pop
cmpsl
orb
es
daa
les
stos
mov
shrb
and
bnd
jmp
mov
shll
fisubl
sti
mov
push
mov
pushl
ret
adc
sbb
je
xchg
inc
jmp
bound
or
sub
mov
adc
push
push
push
out
shlb
aaa
fsubrl
rcll
pop
push
xchg
mov
aas
and
jae
stos
pop
lods
jbe
jp
sub
sbb
fistl
in
jp
adc
mov
gs
scas
shlb
cs
push
sbb
stos
int
fwait
cli
cs
inc
das
test
add
aas
out
sub
dec
data16
add
dec
cmpsl
mov
adc
loop
lret
fwait
add
pop
inc
push
repnz
push
add
add
add
lock
filds
dec
mov
aaa
adc
xchg
and
jnp
mov
stos
dec
push
ja
shrl
ret
je
and
pop
pop
mov
fwait
psllq
icebp
test
aas
lea
dec
shll
repz
data16
pop
sbb
lea
scas
scas
sub
lret
cmp
xor
sub
push
ret
push
pop
or
add
mov
mov
lea
out
and
jecxz
fists
add
push
cli
sub
mov
pusha
sub
jo
addr16
loope
jnp
stos
ss
gs
call
inc
adc
mov
sbb
and
pushf
out
arpl
xor
je
popa
push
aaa
outsb
insl
xor
xchg
insb
pop
add
pop
pop
dec
adc
sbbl
or
adcb
xor
roll
and
mov
add
lret
mov
movsl
jmp
sti
sti
jae
push
xor
fadds
xchg
mov
add
mov
test
mov
bound
jnp
sbb
mov
jae
xor
sbb
shrb
popa
or
loop
shlb
jns
sbb
cwtl
scas
push
push
push
fistps
cmpsb
xor
lahf
mov
push
loopne
mov
pop
lret
push
add
pop
sbb
or
mov
ja
pop
xor
daa
or
daa
adc
pop
das
pop
sub
sub
dec
mov
sbb
sub
pop
repnz
jb
xor
xchg
push
sti
fwait
and
add
xor
in
sbb
imul
movsb
sti
fidivs
mov
and
xor
adc
inc
jnp
push
movsl
mov
insb
fistl
adc
popa
xlat
aas
out
and
fistpl
ja
inc
mov
test
sub
ret
das
sbb
lret
pcmpgtw
push
inc
addl
shll
xchg
push
lods
xor
ret
ja
imul
mov
stos
sub
filds
inc
xor
lret
pop
push
mov
mov
mov
add
sub
sti
outsl
and
outsb
sub
addr16
insl
adc
mov
insl
and
adc
mov
testl
push
adc
inc
push
adc
sub
mov
rcr
nop
and
jnp
call
push
testb
outsb
test
and
je
pop
lods
imul
mov
mov
and
rcll
sti
pop
frstor
fbld
popa
add
cmpsb
pop
lea
xchg
pop
lds
jnp
rcr
dec
xchg
mov
inc
adc
xlat
addr16
mov
sbb
loopne
push
jecxz
inc
add
ret
lahf
scas
mov
add
pop
or
push
popa
jmp
add
pop
jae
ret
and
lret
daa
cmp
mov
call
jnp
inc
sbb
xor
push
mov
jle
stos
jmp
or
and
sub
mov
push
cmp
mov
ret
insl
ret
xchg
adc
test
dec
jno
or
mov
pop
push
push
jbe
and
scas
and
mov
xor
ficompl
push
gs
rcrl
sbb
and
xchg
pop
and
fwait
jbe
test
push
jp
pop
xchg
pop
or
insl
fmuls
scas
jb
add
adc
mov
insb
out
push
into
add
iret
rcll
pop
pusha
push
mov
icebp
int3
pop
jecxz
stos
cmp
inc
xor
inc
pop
sub
xor
push
inc
ret
pop
jnp
repz
fadds
divl
hlt
jp
inc
fistpl
subl
adc
outsb
popa
jb
push
sti
out
mov
nop
ficomps
inc
test
xchg
ficompl
jle
inc
adc
dec
fiaddl
cmp
fisubrl
icebp
add
stos
push
ja
notb
adc
or
xchg
jno
sti
gs
adc
jae
xchg
push
mov
push
adcl
cmpsl
push
sub
imul
sbb
ljmp
loop
fildll
mov
and
daa
daa
mov
sbbl
addl
xor
jno
add
cmp
mov
add
xchg
xlat
jae
sub
stos
mov
call
jbe
shll
inc
add
into
fistpl
dec
les
adc
pop
subb
sbb
jbe
dec
add
test
jg
xor
jbe
mov
loop
add
jecxz
sbb
repz
pop
sub
movhps
pop
pusha
div
jg
popa
ret
mov
adc
push
inc
daa
adc
jb
inc
movsb
dec
push
pop
or
mov
flds
or
inc
sub
xor
adc
je
scas
add
or
lahf
inc
outsl
cmp
lret
cmpsl
sbb
jmp
mov
cmpsb
xor
aaa
loope
rcll
adc
adc
jnp
aas
pop
les
pop
cmp
adc
and
pusha
push
pop
insl
mov
test
inc
stos
repz
adcb
ja
add
xor
xchg
lea
push
cwtl
sub
inc
lcall
out
push
mov
push
adc
or
loope
jo
iret
sub
insl
adcl
movsb
add
shll
push
adc
mov
adc
xor
mov
arpl
xchg
pop
push
mov
cwtl
fdivs
dec
popa
adc
sub
push
out
popw
inc
movsb
cmpsb
or
pop
jecxz
rcrb
pop
adc
testb
adc
mov
jo
adc
jecxz
add
add
jae
and
adc
jno
pop
pop
ret
scas
adc
or
add
mov
adcb
scas
or
das
ds
xchg
push
inc
inc
mov
daa
pop
nop
in
mov
lcall
jns
out
psubusw
shl
mov
xlat
mov
pop
test
push
outsb
sub
push
dec
fists
jle
or
or
jmp
inc
sbb
repnz
adc
push
stos
dec
xchg
iret
test
add
or
push
add
scas
mov
test
mov
cmp
inc
insl
pop
jg
sbb
fsubs
cmp
inc
xorb
repz
add
fwait
cmp
sub
mov
add
add
cld
incb
pop
mov
int
mov
nop
push
dec
inc
xchg
fs
xor
push
and
jb
jp
mov
xchg
and
dec
lds
add
or
add
xor
dec
mov
psubw
add
sbb
jo
call
in
mov
add
pop
add
mov
mov
mov
pop
sbb
or
mov
and
scas
inc
jle
add
adc
mov
fdivrs
add
setp
sbb
xor
mov
and
imul
int
push
dec
ss
test
jb
insl
sbb
dec
je
nop
jbe
std
shrb
jae
es
ds
fisttpl
insl
mov
dec
imul
lahf
fs
and
pusha
xor
lcall
insb
outsl
and
popa
xchg
sub
inc
jae
dec
in
push
push
add
aam
dec
sarb
and
add
or
push
and
inc
in
enter
inc
add
inc
add
adc
add
inc
add
jl
mov
adc
mov
inc
rclb
inc
add
adc
and
xchg
add
adc
sbb
inc
add
pop
xchg
add
adc
pop
add
and
adc
je
inc
add
inc
add
adc
and
xchg
add
inc
add
push
ljmp
in
or
dec
adc
mov
add
inc
cld
adc
jo
xchg
insb
xor
nop
jl
ds
adc
push
adc
pop
mov
stc
push
push
in
add
lahf
in
sbb
mov
or
movsb
add
enter
in
dec
repnz
adc
int3
sbb
subl
addb
adc
adc
adc
dec
je
xchg
ja
adc
test
xchg
add
adc
pushf
adc
add
or
add
cwtl
sub
pop
mov
ja
dec
cmp
lock
nop
bswap
daa
in
inc
add
adc
insl
das
add
pop
dec
jbe
das
jl
shld
dec
dec
xor
mov
push
and
sbb
inc
inc
int3
outsl
mov
cmp
dec
push
push
je
jbe
add
stos
push
inc
into
data16
cmpsb
push
inc
or
cmp
fs
inc
lcall
pushf
sbb
pop
push
lea
add
dec
inc
cmp
nop
cmpl
aaa
orl
dec
add
fadds
stc
stc
idiv
add
idiv
ss
call
in
ret
repz
ljmp
cld
ljmp
xchg
popa
leave
pushf
xchg
pop
mov
inc
ja
jle
lahf
push
dec
inc
add
sbb
int3
push
in
cld
test
add
add
ja
sbb
stc
xchg
jl
in
inc
add
dec
inc
add
cmpl
cltd
inc
add
pusha
cmpsb
add
xor
enter
dec
ja
add
sub
and
or
add
sbbb
add
mov
dec
inc
add
aas
inc
je,pt
inc
add
inc
add
aas
inc
ds
inc
add
add
inc
jle
adc
push
inc
add
add
sub
ja
push
inc
add
pop
adc
in
adc
das
jne
push
arpl
imul
add
mov
popa
ja
push
cmp
jmp
add
pop
adc
push
push
xchg
pop
push
shll
leave
sub
inc
ja
add
adc
push
nop
pop
jno
sbb
inc
add
cmp
mov
dec
xchg
or
rolb
inc
adcb
add
inc
add
movsb
andb
adc
fstps
ja
sub
pop
dec
dec
inc
add
mov
push
cmp
lods
flds
rolb
mov
sbbb
mov
sub
ja
scas
in
in
inc
add
inc
add
mov
inc
push
pop
xor
popa
or
stc
inc
repnz
ja
sbb
cmp
add
mov
or
lock
adc
movsl
mov
and
mov
mov
bound
adc
pop
dec
addr16
cld
mov
inc
add
adc
stc
adc
inc
add
lods
jne
adc
mov
fisubl
int3
inc
cmpsb
dec
push
pop
xchg
fidivl
popf
fs
adc
in
jns
nop
push
jo
add
sbb
inc
cmp
adc
mov
and
rclb
in
xchg
add
adc
sbb
getsec
sbb
and
cltd
push
pmulhuw
test
dec
les
fcoml
aas
pop
in
xchg
ds
sub
mov
inc
fs
shl
insb
sbb
stc
pop
push
enter
inc
add
jne
cs
xchg
enter
inc
add
add
pop
pushf
adc
pushf
adc
mov
in
pushf
push
inc
add
push
jbe
mov
push
fcompl
sub
inc
fnstsw
adc
and
mov
add
adc
stc
xchg
cld
inc
pushf
adc
pushf
adc
mov
or
clc
pop
push
nop
and
pop
enter
int3
adc
int3
adc
nop
aaa
xchg
add
add
mov
xchg
inc
repnz
add
mov
add
inc
add
test
push
inc
in
inc
add
inc
repnz
adc
mov
inc
add
adc
in
inc
add
and
adc
mov
inc
add
stc
cmp
clc
adc
das
in
repnz
inc
add
inc
add
adc
add
adc
les
xchg
or
aad
subb
andl
mov
fidivrs
int3
and
or
inc
add
ja
and
cmp
or
push
add
add
stc
xchg
cld
lock
pushf
adc
add
add
sbb
inc
add
jae
mov
in
push
mov
adc
nop
bswap
inc
add
adc
clc
adc
add
adc
or
pop
nop
bswap
inc
add
sbbl
iret
mov
mov
stc
add
pushf
adc
fsubs
inc
add
mov
mov
aad
into
jle
jl
clc
adc
clc
adc
pop
and
add
adc
leave
xchg
add
adc
in
inc
add
push
nop
movsl
addr16
fdivrp
push
sbb
orl
jmp
insb
push
and
aas
pop
or
enter
dec
fs
xchg
cmpl
sbb
orl
cmp
cmp
or
enter
and
enter
sbb
nop
inc
xchg
orl
mov
aas
add
sbb
enter
shld
cld
clc
pushf
nop
inc
push
sbb
sbb
call
in
or
cmp
fcompl
ret
xchg
paddq
inc
inc
add
jle
lahf
xchg
add
inc
add
add
mov
add
mov
xchg
add
inc
add
add
nop
lahf
jl
mov
inc
add
inc
add
add
nopl
aaa
inc
mov
inc
ds
in
sti
ljmp
mov
lcall
iret
mov
inc
add
mov
adc
pop
fnstsw
mov
out
inc
add
cld
ljmp
orb
je
divb
and
jge
int
add
pop
leave
or
nop
pop
aaa
enter
inc
push
mov
pop
mov
cli
push
mov
dec
fiaddl
nop
pop
adc
jmp
stc
xchg
cld
cmpsb
stc
call
jo
add
sti
dec
add
xchg
pop
enter
add
adc
mov
lret
das
stc
adc
inc
add
mov
daa
add
nop
inc
add
mov
sub
dec
clc
clc
call
inc
add
aad
cmp
je
xchg
nop
movsl
insl
dec
add
and
in
ss
idiv
incl
add
repnz
jle
mov
inc
add
cld
stc
dec
mov
inc
add
jl
incl
inc
add
inc
add
mov
enter
aaa
sbb
cmp
in
cmp
xchg
pop
xor
imulb
push
inc
xchg
lods
test
in
dec
mov
inc
add
mov
inc
add
xchg
pop
loopne
fdivs
mov
js
scas
or
icebp
sub
xchg
mov
pop
aaa
enter
inc
enter
adc
aaa
mov
push
repnz
cmp
inc
repnz
mov
add
jmp
loop
xchg
scas
adc
cmpsl
xorb
hlt
dec
and
in
pushl
inc
leave
mov
jns
hlt
and
push
add
fs
pop
imull
enter
aaa
stc
add
or
idiv
fdivp
decl
cmpb
inc
add
in
repnz
repz
cmp
call
mov
add
call
jle
mov
inc
aaa
sbb
jmp
add
incl
inc
jnp
imul
and
adc
cmp
and
adc
lea
sub
push
aaa
int3
sbb
enter
hlt
out
cld
sbb
xchg
aaa
scas
jmp
xor
out
push
cmp
icebp
dec
or
push
inc
aaa
popa
icebp
jmp
push
cmpb
incl
hlt
call
popa
pop
nop
pop
push
inc
aaa
test
decl
or
pop
repz
sti
enter
aaa
pusha
idiv
jmp
jg
adc
inc
add
inc
add
je
ds
inc
add
pop
jp
aaa
sbb
add
mov
daa
inc
xor
das
push
xor
rcrl
mov
or
push
push
aaa
in
decl
and
push
incl
and
sub
incl
cmpsl
push
enter
stc
in
loopne
out
mov
es
xor
ficoml
inc
add
movsl
in
xor
aaa
mov
inc
add
or
push
aas
in
cld
ss
inc
add
fiaddl
fiaddl
and
and
jmp
fiaddl
nop
jo
inc
add
sti
test
jmp
pop
mov
fisttps
add
aam
ds
or
add
enter
jmp
stc
push
repnz
stc
ljmp
pop
cmpb
ljmp
stc
lcall
in
cld
sub
inc
add
cld
decl
in
and
fiaddl
ss
dec
nop
inc
add
sub
add
inc
push
add
add
nop
inc
add
dec
xchg
fs
sbb
ds
aaa
cmp
decl
jns
pop
addr16
pop
sub
sarb
aaa
cmp
mov
pop
xor
mov
pusha
ss
adc
xchg
sub
clc
scas
subb
pop
leave
pushl
or
loopne
sub
sub
push
nop
movsl
aaa
and
stc
push
idiv
ljmp
adc
sbb
pop
and
and
inc
add
in
call
cmpb
push
aaa
in
inc
add
dec
jle
mov
inc
add
out
mov
fcmovbe
movl
aaa
enter
out
mov
add
adc
inc
add
fs
enter
pushl
inc
add
add
push
lahf
stc
xchg
in
inc
add
push
call
loopne
mov
movsl
pop
xor
jb
push
nop
aaa
fcompl
in
xor
sbb
add
add
out
daa
push
das
and
aaa
push
xchg
inc
add
jne
xchg
add
add
inc
add
inc
xchg
out
lcall
stc
push
aaa
rolb
add
push
xchg
inc
add
fs
idivl
dec
and
adc
add
dec
andb
inc
add
mov
add
jmp
add
add
sbb
push
cld
lcall
add
out
or
add
push
xchg
inc
add
jmp
inc
repnz
pop
pop
add
aas
stc
and
cmp
add
pop
add
pop
pop
add
scas
xchg
in
inc
add
shll
pop
dec
dec
pop
popa
fs
xor
insb
jns
stc
inc
add
notl
leave
push
sbb
aas
stc
repnz
lcall
ljmp
pop
and
decl
rcrl
mov
dec
nop
and
jns
xor
std
adc
cltd
and
sbb
add
xchg
jl
sub
inc
add
mov
add
std
stc
inc
leave
das
mov
call
cld
ljmp
in
mov
mov
inc
and
ds
inc
add
roll
add
add
inc
jle
das
dec
inc
add
inc
add
inc
jle
sti
dec
inc
add
stc
xor
sbb
subb
leave
push
push
es
add
xor
nop
inc
add
daa
es
push
dec
or
daa
nop
add
dec
inc
add
addr16
sub
push
repnz
clc
imul
push
fwait
andl
add
mov
pop
scas
fcmovu
lds
or
push
jmp
fs
lods
shlb
mov
rcrb
lcall
cmpsb
or
push
adc
pop
sbb
add
out
add
addr16
add
nop
pop
push
repnz
add
add
nop
je
add
add
inc
repnz
inc
add
cld
or
jmp
inc
add
cmp
inc
add
add
inc
add
cld
jecxz
adc
clc
call
or
enter
or
add
in
pop
and
add
add
pop
sbb
scas
pop
add
add
jmp
dec
dec
pusha
fistpll
add
test
dec
cmpsl
inc
jle
decl
add
pop
imul
aam
jl
nop
pop
in
inc
add
ljmp
pop
xchg
out
inc
add
or
mov
dec
popl
in
repnz
add
incl
and
incl
iret
adc
outsb
push
mov
add
add
or
clc
inc
ds
add
call
add
lahf
dec
mov
add
adc
test
mov
int3
mov
nop
fdiv
lcall
sar
inc
lock
stc
cmp
jns
ljmp
pusha
and
mov
nop
movsl
in
push
outsb
pop
iret
insb
nop
dec
adc
int3
mov
push
out
jle
cld
lahf
add
add
cmpl
add
cld
inc
cld
fcom
jmp
sar
push
add
add
add
sbbl
add
add
jg
cmpb
jmp
sar
call
in
repnz
add
int3
mov
jle
jl
or
push
iret
decl
and
jmp
std
lcall
xchg
ljmp
add
nop
lret
out
lock
inc
test
call
jl
and
mov
pop
in
int3
mov
incl
mov
incl
call
std
inc
or
cmpsl
in
call
faddl
ja
repnz
jp
dec
iret
call
es
inc
add
aaa
aaa
repnz
mov
add
mov
das
add
scas
dec
xor
lahf
ds
imul
addr16
xor
enter
or
mov
scas
xchg
cwtl
mov
pop
in
cld
bound
sub
adc
inc
add
jle
addb
push
mov
mov
sti
cmp
cli
jae
jbe
icebp
xchg
dec
mov
mov
int
ljmp
jbe
push
repnz
call
pop
inc
mov
ret
mov
inc
add
jecxz
test
add
jecxz
arpl
mov
sub
aam
test
lcall
int3
xchg
repnz
xchg
pop
dec
add
add
add
add
add
add
mov
add
mov
mov
lret
out
cmp
pushw
xor
xchg
mov
pop
xchg
pushf
bound
cvtdq2ps
jp
lds
dec
mov
cmpb
dec
inc
retw
sarb
repz
adc
mov
pop
inc
add
inc
add
pop
fdivrp
add
pop
inc
add
inc
add
inc
push
or
and
inc
mov
jmp
enter
inc
pop
inc
add
cld
push
or
inc
lcall
add
inc
and
call
inc
add
and
inc
add
rolb
add
test
call
xchg
jb
mov
adc
lahf
aas
sti
call
out
stc
and
inc
es
inc
add
jmp
int3
das
xor
ds
add
xchg
and
mov
add
into
or
je
mov
jle
cld
bound
inc
add
stc
enter
inc
add
fiaddl
pop
inc
add
inc
add
jbe
test
or
into
and
lock
cld
dec
ds
add
jns
aaa
sbb
cmp
bound
lahf
retw
mov
fiaddl
cmpb
inc
add
jmp
jge
cmp
cmp
sbb
lahf
or
mov
mov
add
inc
add
inc
add
add
dec
sar
inc
pop
inc
add
repnz
add
sub
lcall
jmp
sub
lods
mov
nop
mov
call
xchg
xchg
add
pusha
lcall
lds
dec
sbbl
out
call
mov
out
xor
mov
leave
pop
stc
adc
inc
add
das
in
nop
inc
push
mov
add
xor
stc
xor
inc
add
sub
xchg
fs
pop
imul
push
sar
or
inc
ret
fnstenv
fwait
lea
test
cmc
out
fnstenv
adc
rorl
mov
sub
insb
pop
mov
cmp
aas
les
dec
xor
pop
divb
jle
call
inc
sbb
mov
stc
dec
insb
mov
sti
adc
push
aad
pop
mov
inc
pop
jnp
daa
inc
loope
pushl
jmp
xor
enter
mov
sti
incl
repnz
inc
xchg
add
pop
mov
cmp
jbe
stc
shrl
pushl
xchg
in
test
mov
mov
sbb
inc
call
inc
lret
xor
mov
jmp
call
mov
incl
call
mov
pop
stc
in
call
pushl
leave
popl
decl
add
lcall
jmp
or
lret
lcall
sub
call
mov
in
mov
add
dec
push
call
mov
inc
cmpb
add
std
call
and
mov
xchg
enter
pop
cld
sar
xlat
push
nop
dec
cli
sar
shll
ja
mov
leave
and
pop
ljmp
adc
call
incl
or
add
and
fdivrp
jmp
pop
add
pusha
test
or
add
mov
and
in
movsl
mov
sub
xchg
add
pop
cld
push
and
and
mov
dec
pop
nop
pop
sub
add
pusha
std
dec
scas
nop
pop
outsl
cld
incl
lahf
dec
ds
fdivr
decl
push
mov
inc
and
lcall
pushl
pop
roll
mov
xor
push
cmp
adc
gs
call
cmp
pusha
pop
ss
neg
stos
and
jae
imulb
xchg
loop
sub
pop
stc
inc
leave
das
test
cld
stc
add
or
mov
xchg
ficoms
ja
iret
les
ret
sbb
cmpsl
in
dec
loope
call
jno
add
fldcw
test
and
fs
pusha
mov
sti
fdivl
mov
mov
jmp
lahf
push
leave
ja
incl
clc
lcall
idiv
lcall
lahf
dec
in
incl
call
xchg
inc
push
and
pushl
movsl
repz
mov
test
cwtl
and
andl
mov
cmp
push
push
ljmp
leave
scas
nop
incl
add
popa
xchg
aam
call
cmc
call
lcall
enter
jae
pop
cmp
clc
stc
test
mov
nop
lahf
cld
aaa
call
clc
cmpl
xchg
incl
repz
lcall
fxch
das
stc
inc
aad
call
clc
decl
adc
orl
sub
or
cld
add
xchg
sub
lcall
inc
andl
call
bound
shl
push
test
jmp
pop
mov
add
xchg
cld
mov
mov
jb
add
sub
sarb
dec
seto
mov
jmp
xchg
daa
stc
repnz
clc
mov
fdivp
pushl
repnz
incl
lcall
jb
testl
add
inc
push
mov
add
add
push
enter
incl
sbb
sub
lret
es
pop
mov
nop
inc
add
and
gs
cmp
or
add
push
imulb
lret
push
mov
dec
sarb
lock
call
pop
sahf
xchg
out
ljmp
stc
adc
inc
cmp
in
repnz
pushl
pop
xor
add
jmp
and
sbb
mov
push
lahf
jo
enter
decl
je
insl
cmp
out
jmp
in
gs
lahf
and
jmp
inc
leave
lcall
add
nop
pop
repnz
jge
add
nop
pop
and
push
push
add
cmp
punpcklwd
jns
ss
scas
or
pop
icebp
jmp
sub
xchg
lock
inc
repnz
inc
in
push
repnz
std
call
add
sub
add
fstpt
pop
call
test
outsl
fldcw
pop
and
stc
add
lcall
xchg
insb
or
jb
add
xor
dec
int3
lcall
xor
add
xchg
dec
push
and
jle
enter
add
cmc
std
call
dec
inc
fidivrs
decl
jmp
push
add
les
xchg
lods
sbb
push
jbe
in
jne
cld
enter
enter
enter
ljmp
sub
and
add
jl
stc
xchg
lret
mov
inc
jle
mov
jle
and
add
lcall
mov
idiv
jle
jmp
sbb
lahf
pop
add
adc
add
repnz
nop
inc
add
repnz
push
push
fildl
lret
ljmp
inc
add
cmpsl
call
or
push
hlt
or
inc
cmpsb
jb
mov
sbb
mov
xorb
enter
sub
pop
xor
adc
or
aas
fcomip
movsb
push
nopl
call
lods
addb
xorb
mov
mov
lea
in
imul
jmp
jl
mov
aas
out
mov
xchg
insb
call
leave
das
stc
push
out
call
jmp
or
js
cmpsb
pop
and
fcmovu
push
xchg
aas
stc
repnz
adc
call
xchg
inc
add
nop
cld
aam
inc
add
xchg
inc
add
xchg
inc
add
and
jg
repnz
ret
aas
popf
mov
stc
adc
cmp
in
cmpsb
ljmp
rolb
flds
xorl
into
fs
mov
lcall
imul
loopne
push
xlat
and
fildl
repnz
push
mov
inc
add
psubw
inc
add
mov
inc
add
jle
popa
pop
mov
scas
aas
xchg
lret
stos
call
sub
sbb
mov
ret
sarb
test
iret
mov
leave
jmp
inc
inc
mov
mov
push
aas
cmp
sti
adc
pop
xchg
jo
push
fisubs
inc
inc
call
dec
test
loop
push
inc
pop
mov
mov
pop
pop
subl
xchg
fbld
data16
lcall
call
cmp
sub
xor
or
andb
mov
add
sub
cmpsl
lahf
mov
popa
pop
mov
sbb
arpl
cmpsb
out
push
dec
xchg
into
test
aam
popa
pop
sub
add
lahf
dec
xchg
je
aas
or
jbe
inc
push
call
cmpl
push
repnz
ret
aas
push
ljmp
in
ds
pushl
fadd
xor
mov
cmp
call
ljmp
stc
and
inc
sahf
pushl
add
and
jns
shll
aas
dec
sahf
jmp
fsubl
mov
popa
pop
xor
pop
repnz
jle
popf
ljmp
mov
das
xchg
pushl
mov
lods
popf
lcall
add
xchg
cmpl
cmp
jb
dec
ja
inc
mov
xor
and
ret
mov
adc
add
inc
add
cld
incl
enter
pushl
decl
in
mov
jbe
call
xchg
out
jbe
popf
mov
sub
arpl
popa
test
out
cltd
dec
add
arpl
repz
pushf
scas
loope
sub
push
sbb
jl
movq
inc
add
add
xchg
pop
mov
scas
loope
mov
bnd
ds
into
in
mov
mov
push
jno
das
cmp
aas
or
cltd
fnstsw
ret
stos
dec
leave
pushl
cmp
loopne
add
lcall
repz
xlat
dec
popf
popa
push
sbb
push
mov
sub
pop
mov
inc
cltd
aas
xor
xor
sub
fisttpl
cmp
int
mov
pop
jle
xlat
stc
dec
lea
sbb
stc
shlb
insl
lcall
xchg
push
jecxz
call
loope
aas
push
ret
xchg
loopne
daa
dec
push
andb
xchg
jae
sub
mov
sbb
ret
push
cmp
and
aas
xor
lcall
enter
ljmp
loope
jmp
cmp
dec
and
in
std
loopne
sbb
push
adc
aad
or
or
cs
cmc
xor
aad
cmp
in
int3
aas
cmp
lds
inc
xor
pop
lret
pop
inc
movsl
cmovb
popa
ds
fcos
pushl
enter
cld
dec
std
jle
fwait
das
notb
ljmp
fmuls
jbe
sbb
call
sbb
test
xor
inc
xchg
stc
lock
call
xor
lret
jl
push
ret
aas
std
popl
repnz
jle
inc
xchg
ljmp
dec
das
stc
adc
lcall
clc
jno
nop
js
mov
mov
xchg
cmp
push
aas
mov
xchg
call
popa
pop
xlat
mov
ficoms
xchg
lret
xlat
xor
and
xor
mov
sub
leave
xchg
lea
jmp
pop
repnz
nop
inc
add
nop
inc
add
ljmp
mov
or
xlat
sub
pop
mov
movl
xchg
inc
add
jmp
cmp
jo
or
pop
mov
dec
xlat
repz
enter
in
test
xchg
pushl
mov
sub
int
ljmp
mov
push
sub
inc
xchg
mov
xchg
stc
inc
lret
add
add
add
add
push
add
add
inc
leave
popl
add
add
inc
add
add
lahf
pop
sar
jg
jmp
fmuls
cmp
pop
incl
and
stc
enter
iret
call
sar
stc
cld
adc
shlb
mov
ret
xchg
filds
and
lret
std
incl
and
loopne
jmp
jmp
pop
aad
mov
fwait
push
sti
std
or
jp
inc
out
mov
clc
inc
ds
dec
rorl
lds
xchg
in
or
rclb
xor
fisttps
xor
cmp
and
mov
and
repz
int
les
nop
pop
or
incl
repnz
mov
call
lret
into
decl
add
mov
inc
incl
and
orb
decl
push
jl
pushl
add
insl
cmpb
or
mov
cs
ror
bswap
or
movsl
xor
fbstp
aas
xchg
dec
arpl
pushl
inc
jle
mov
jmp
lcall
xchg
push
xchg
aaa
fsubp
cltd
inc
add
cltd
inc
add
add
pop
dec
cld
add
jmp
decl
call
leave
inc
add
cltd
inc
add
add
dec
repnz
ds
cltd
inc
add
ljmp
stc
repz
mov
cltd
inc
add
cltd
sub
push
enter
mov
in
aas
add
sbb
inc
add
mov
dec
std
ljmp
ja
dec
push
adc
call
cmp
popa
fistpll
decl
enter
lcall
call
in
repnz
decl
mov
in
dec
xchg
add
sbb
cmp
inc
ds
cltd
inc
add
push
or
jno
xchg
mov
cld
ljmp
addl
decl
leave
daa
jp
ljmp
inc
mov
outsb
xchg
inc
sub
mov
mov
mov
push
ret
filds
insb
fbstp
mov
lods
cmpsb
fnstcw
adc
stos
cld
mov
fcomp
lcall
cmpsl
mov
pop
enter
adc
jmp
sbb
push
sbb
xlat
mov
test
jl
push
push
or
cmpsb
aam
fimuls
pslld
in
cltd
inc
add
adc
ds
imul
call
xchg
fisttps
mov
xor
movsb
adc
imul
adc
push
je
dec
insb
pop
repz
adc
in
add
mov
add
or
lretw
push
les
xchg
sbb
cmp
aad
hlt
jb
hlt
xor
xchg
out
xchg
mov
pop
stc
xor
inc
add
faddl
jmp
fstpl
adc
popf
push
inc
ret
out
ret
rcrl
push
push
pop
repnz
xor
inc
add
enter
inc
add
mov
mov
leave
mov
and
aam
fmuls
stc
adc
test
int3
adc
stc
inc
repnz
adc
nop
popf
inc
add
test
add
add
adc
pop
test
adc
mov
add
add
and
adc
sub
adc
push
enter
clc
adc
fwait
stc
insb
lahf
mov
inc
jle
jl
adc
clc
adc
test
cmpsl
adc
inc
sbb
mov
popf
xchg
lfs
lods
test
and
xchg
xchg
lret
push
imull
add
nop
aas
mov
and
addb
je
or
enter
fs
and
and
and
inc
orl
cmp
xor
orl
sub
and
xchg
into
and
jl
ds
cmpsl
mov
ljmp
loopne
pop
enter
push
repnz
jns
lods
jns
mov
inc
ret
and
pop
or
enter
adc
or
adc
xchg
rcrb
jb
push
incb
sbb
xchg
adc
or
enter
in
or
enter
loopne
enter
fcom
enter
ror
enter
xor
sarb
mov
or
enter
pushf
movsl
enter
xchg
nop
pop
fdivl
testl
jae
add
and
mov
rolb
lcall
push
add
call
push
insb
std
sub
push
inc
ss
push
adc
cmp
mov
scas
push
xor
dec
aas
je
or
adc
inc
add
add
or
or
push
xor
int3
adc
and
inc
add
inc
add
pop
nop
pop
cmp
inc
add
in
in
inc
add
inc
add
and
inc
mov
inc
add
or
in
rorb
enter
adc
nop
daa
xchg
icebp
repnz
inc
push
hlt
cmc
notb
clc
stc
inc
push
sbb
cld
push
sbb
jmp
sbb
loope
jecxz
nop
inc
push
in
out
inc
push
sbb
call
fs
in
out
out
rcrb
fs
inc
rcl
shll
push
aam
nop
inc
push
sbb
fcomp
inc
push
sbb
faddl
sbb
rcrb
nop
inc
rol
fs
inc
push
inc
push
sbb
enter
sbb
int3
push
sbb
into
iret
mov
fs
inc
mov
mov
nop
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
movsb
movsl
cmpsb
nop
inc
push
sbb
sbb
lods
push
sbb
scas
scas
nop
sbb
xchg
xchg
xchg
fs
inc
push
xchg
xchg
xchg
nop
inc
push
sbb
sbb
pushf
push
sbb
sahf
lahf
sbbb
nop
inc
addl
nop
inc
push
sbb
sbb
mov
sbb
mov
inc
jno
jae
nop
inc
push
je
jbe
inc
push
sbb
jns
push
add
adc
lcall
and
in
inc
add
nop
add
push
faddl
repz
ds
faddl
faddl
ljmp
add
cmp
addr16
add
cltd
or
outsl
cmp
cmp
mov
outsl
mov
cmpsb
mov
push
leave
orb
and
add
sub
or
inc
dec
aas
add
add
addl
or
add
add
add
add
inc
add
add
add
add
stc
add
add
add
push
repnz
add
pop
add
add
pop
push
inc
dec
faddl
adc
stc
adcb
add
or
or
pop
or
adc
ss
shll
add
jl
xlat
mov
aam
or
inc
add
add
add
repnz
xlat
sub
inc
add
lret
pop
stc
mov
inc
add
inc
add
in
add
call
cmp
cmpsb
je
inc
fistpl
and
xlat
push
pushf
arpl
push
and
inc
lcall
je
mov
lcall
and
push
imul
pop
or
add
in
movsb
mov
fwait
das
clc
lock
fisubl
insl
pop
and
movsb
loopne
lods
imul
mov
imul
pusha
dec
sbb
inc
fs
xchg
ss
inc
mov
insl
cwtl
and
fdivs
dec
test
pop
pop
fs
cmp
pop
pushf
insb
outsb
out
js
pop
pop
je
dec
jo
movsb
cmp
fcoml
inc
push
fs
fs
pusha
je
insb
dec
ss
pop
rclb
push
mov
fstps
push
leave
ss
jae
xor
cmpsb
pushf
push
fcompl
dec
inc
dec
pop
cmp
jmp
cmp
mov
jno
push
cmp
outsb
aaa
dec
lea
xlat
pushf
add
pusha
add
mov
xlat
and
nop
pop
clc
adc
sub
inc
add
mov
inc
add
ds
add
mov
mov
fimuls
sti
das
pop
push
or
test
movsl
cmp
out
cld
inc
ds
xlat
mov
inc
add
imul
sub
inc
add
movsl
imul
ja
inc
stos
push
xchg
jge
inc
add
mov
cmp
push
sbb
push
inc
pop
leave
out
dec
xor
aaa
push
fwait
push
inc
add
dec
sbb
sbb
xlat
inc
push
out
jo
gs
popa
xor
inc
or
movl
fwait
out
sbb
pop
sub
sbb
add
pop
fisubs
nop
inc
xchg
dec
xchg
daa
xchg
inc
xor
inc
sbb
jno
jns
lret
leave
sbb
imul
int3
xlat
xor
xchg
mov
and
and
inc
ds
adc
int3
inc
inc
add
adc
adc
ret
out
cmp
inc
imul
or
sbb
adcl
call
lret
jns
mov
sbb
inc
dec
or
maskmovq
imul
fwait
xchg
fwait
inc
inc
add
mov
aaa
int3
inc
inc
fwait
rorb
xchg
bswap
pop
xor
inc
add
cltd
inc
add
push
xor
xlat
mov
outsl
mov
and
xchg
das
in
lock
inc
add
enter
and
test
inc
add
ficoml
jle
xlat
lock
inc
add
cltd
inc
add
mov
mov
mov
fdivs
mov
sub
and
leave
int3
inc
mov
gs
xlat
dec
pop
xor
ljmp
inc
cmpsb
xchg
loopne
xor
pop
mov
inc
sbb
add
cmpsb
or
daa
cmpsb
add
inc
lds
cmp
inc
or
cmp
mov
stc
xadd
xlat
pushf
adc
enter
int3
inc
inc
add
pop
and
sub
inc
add
add
push
insl
dec
or
xlat
inc
mov
mov
js
pusha
push
and
addl
xor
xchg
movsl
lods
sbb
pop
xor
mov
jg
dec
pop
enter
inc
or
mov
sub
pop
into
pop
cmp
inc
xor
lods
push
shlb
fmuls
adc
cmp
sbb
mov
dec
pop
inc
leave
or
dec
fs
add
push
xor
pop
inc
cmp
pop
or
adc
iret
cmp
imul
mov
andb
inc
es
les
fs
xchg
int3
pop
inc
fwait
push
inc
scas
in
shll
dec
fidivl
pop
push
jns
test
and
orl
add
dec
mov
inc
sbb
aas
inc
xchg
dec
inc
add
sti
rorb
rorb
add
jg
test
dec
mov
jns
mov
cld
dec
mov
sbb
jnp
pop
sub
mov
pop
sbb
roll
jbe
in
daa
or
and
xchg
into
mov
and
ficompl
dec
inc
loopne
ret
and
test
fwait
mov
movsb
dec
fwait
push
jns
aam
pop
jnp
inc
pop
incb
and
push
decl
int
je,pn
pop
and
inc
repnz
movl
sbb
mov
dec
adc
shlb
in
add
pop
and
js
jo
sub
inc
xchg
test
movsb
dec
test
movsl
add
or
dec
push
enter
sub
inc
dec
sub
rcrl
cmp
sbb
mov
test
fs
pop
sub
adc
les
sarb
push
aam
push
push
mov
cmp
mov
and
out
cs
jo
das
or
cld
adcb
inc
add
das
mov
cwtl
sub
pop
enter
das
mov
shlb
in
add
pop
and
and
push
das
xchg
mov
sub
not
loope
dec
shll
mov
sub
or
rorb
movsl
cmp
fadds
and
xchg
in
test
insb
push
pop
push
ficoml
adc
mov
and
test
adc
or
clc
push
or
mov
and
add
pushf
mov
test
mov
pop
or
mov
shll
sub
or
xchg
dec
push
xor
movsl
inc
pop
sbb
adc
inc
in
push
leave
nop
aam
or
jns
and
int3
sub
fs
dec
pop
enter
insb
push
sub
rcrb
pop
sub
nop
adc
push
sbb
inc
or
pop
mov
and
sub
cwtl
pop
mov
xorl
jmp
push
mov
add
add
cwtl
pop
xor
aaa
push
pop
imul
add
cs
xchg
fcoms
hlt
loopne
insl
dec
mov
pop
mov
nop
pop
repnz
js
xchg
pop
dec
sbb
shlb
fstpt
cmpsb
inc
add
sbb
dec
pop
shlb
addr16
push
imul
sub
or
or
pop
call
inc
rcrb
jnp
inc
fwait
sub
adc
add
dec
dec
repnz
pop
enter
pop
js
mov
add
testb
pop
and
sub
pop
sub
in
or
sbb
add
stos
iret
pop
inc
lock
sarl
test
or
push
xor
push
or
sbb
or
and
push
enter
pop
pop
sub
inc
adc
or
mov
shlb
or
hlt
cmp
repz
lock
xchg
shlb
enter
push
xor
inc
lcall
push
nop
and
ret
cmpsb
pop
ret
cmpsb
pusha
test
adc
adc
xor
and
sbb
rcr
pop
jbe
in
pop
and
push
push
inc
rcr
xor
mov
fwait
pop
mov
inc
add
add
adc
dec
adc
aas
inc
jle
dec
adc
dec
adc
das
nop
pop
and
inc
add
add
adc
inc
add
inc
add
es
sbb
or
pop
sub
inc
add
add
add
pop
inc
add
pop
inc
add
inc
addl
add
adc
dec
adc
add
adc
or
adc
mov
inc
add
popa
inc
add
push
mov
push
dec
cmovnp
fsub
sti
pop
dec
aaa
in
mov
inc
add
inc
leave
xchg
sbb
add
popa
inc
add
cltd
xlat
push
fsubl
add
mov
les
movsl
add
dec
jl
test
adc
clc
adc
mov
cmp
mov
arpl
ret
push
dec
dec
jmp
jbe
loope
mov
sbb
mov
and
push
jnp
pop
pmulhuw
xor
inc
add
arpl
movsb
loopne
adc
inc
add
xchg
jle
ficoml
dec
cwtl
orb
pusha
sub
sbb
cmp
movb
movsl
xchg
jo
cli
enter
pop
outsl
jg
push
xlat
mov
arpl
pop
outsb
sub
dec
neg
jno
sti
rcr
lret
dec
add
mov
push
sub
sub
gs
arpl
add
mov
sub
lods
pusha
sub
push
add
data16
push
xor
and
in
inc
mov
insb
dec
jle
ficompl
adc
inc
ds
adc
clc
adc
xchg
pop
clc
adc
shlb
or
xchg
cld
clc
adc
clc
adc
das
cmp
or
addr16
popa
daa
pop
je
dec
pop
inc
pop
inc
les
jns
data16
aam
repnz
dec
sub
insb
jecxz
inc
fwait
push
pop
es
stos
lahf
fsub
inc
outsb
fs
sub
cmpsb
push
push
cmp
repz
mov
mov
test
and
cmp
pop
xor
repnz
sub
daa
and
addr16
add
cmp
addr16
dec
sbb
clc
addr16
xchg
dec
sub
test
adc
addl
rorb
in
insl
shrl
insb
pop
push
scas
je
faddl
jbe
loope
out
pop
push
sbb
inc
das
enter
ja
inc
orb
adc
push
push
cwtl
shlb
xchg
or
cmp
shlb
or
mov
orl
pop
imul
in
js
push
sbb
movsl
mov
inc
fucompp
clc
sbb
leave
cmpsb
inc
daa
insb
pop
lret
repnz
and
add
inc
repnz
dec
jbe
inc
add
xchg
push
sbb
jle
adc
mov
dec
lock
mov
mov
xchg
sbb
inc
and
inc
jmp
jns
enter
ja
jmp
pop
les
cmp
ja
test
aam
aaa
add
ljmp
adc
in
push
leave
ja
jmp
or
lret
add
sub
inc
and
add
or
mov
nop
inc
or
jecxz
pop
pop
in
in
inc
ret
and
fisubl
inc
sbb
inc
das
sbb
dec
gs
movsb
fsubrs
leave
xchg
xor
pop
lock
inc
add
addl
jns
stos
mov
adc
adc
inc
bound
repnz
out
inc
add
mov
cmpsl
hlt
mov
out
push
dec
shlb
leave
xchg
rolb
pop
push
ja
adc
jne
add
adc
outsb
ret
fidivrl
dec
es
das
fildl
pop
push
push
jecxz
repnz
imul
cmpsb
pop
ss
push
pushf
add
xchg
dec
sub
mov
inc
clc
adc
clc
adc
repz
inc
add
push
or
inc
insl
aaa
add
mov
push
dec
push
jo
cltd
sar
push
or
pop
inc
push
lea
lods
push
add
inc
cmp
dec
or
add
dec
fisubrl
outsl
adc
add
dec
or
cs
push
xor
xor
or
mov
jb
imul
dec
mov
pusha
jp
cmp
aaa
push
mov
jl
mov
ja
das
jp
jb
and
scas
dec
jno
int
add
sbbb
and
repz
mov
jl
jmp
pop
push
xor
cmpsl
mov
sub
ljmp
jb
and
leave
mov
jb
ret
xor
sub
pop
loop
pop
add
inc
adc
enter
jb
je
jb
enter
jae
jo
xor
jae
fsub
in
jns
in
add
jae
jae
cwtl
popf
cmp
jae
wbinvd
xchg
and
nop
dec
test
jae
rcll
enter
and
jae
in
cmp
adc
pop
jmp
je
cmpsl
xorb
jns
jne
das
fmuls
adc
test
pop
mov
int3
push
fcomps
add
cwtl
inc
dec
sahf
mov
insb
hlt
xchg
jmp
xchg
daa
dec
xor
jbe
mov
push
inc
test
nop
pushf
sub
and
and
int3
jne
cmc
and
repnz
jne
cmc
xor
pop
cmc
add
icebp
jb
lds
cmpsl
in
repnz
xchg
jbe
jbe
jbe
je
cmp
sbb
pop
pop
xor
fwait
pusha
fdiv
cmpsl
mov
js
scas
jbe
rorl
test
inc
xchg
inc
xchg
call
sbb
insb
xorb
push
call
mov
repnz
pushl
inc
sbb
insl
xchg
push
jecxz
push
xchg
shrb
incl
cmp
jmp
dec
stos
mov
leave
prefetcht0
call
imul
repnz
pushl
jb
or
xchg
jb
daa
nop
cmpsl
jge
jmp
enter
cmc
push
out
repnz
pop
icebp
pushl
add
enter
pusha
pop
add
cmp
jmp
call
inc
repz
jmp
xchg
lret
scas
inc
repnz
jmp
lock
call
lock
inc
jle
jmp
pop
add
jl
cld
nop
dec
and
xor
subl
jl
add
in
and
inc
jmp
add
push
repnz
out
lcall
add
nop
cld
in
add
pusha
or
add
adc
lcall
lock
incl
dec
cmpsl
xchg
lahf
pop
pop
add
out
dec
das
in
adc
or
add
push
xchg
in
sub
jmp
xchg
setno
ds
add
decl
jns
mov
loope
lcall
jo
inc
add
mov
or
add
scas
or
inc
testl
jae
xchg
xchg
in
mov
add
imul
jl
call
mov
call
ljmp
cld
pop
leave
pop
shl
decl
stc
jl
test
pop
fldl
sub
mov
pop
mov
dec
mov
in
dec
repnz
mov
nop
push
repz
cmp
nop
fdivl
aaa
leave
pop
dec
jle
clc
cmp
add
xchg
inc
add
nop
push
dec
and
popf
loopne
fimull
gs
mov
nop
inc
fdivp
movsb
xor
inc
nop
inc
and
pushl
pop
mov
jmp
es
pop
movsl
sub
aaa
int3
pushf
add
fiaddl
and
loopne
push
mov
mov
stos
aas
jmp
dec
push
sbb
pop
xchg
nop
dec
hlt
pushf
inc
add
pushf
inc
add
xor
mov
stc
adc
jae
lcall
sbb
jmp
add
and
popf
fcompl
repnz
dec
dec
pop
leave
sbb
incl
out
incl
sbb
call
leave
or
repnz
mov
sbb
cmp
jle
mov
ljmp
incl
daa
lahf
inc
xchg
sbb
call
dec
xor
or
or
pop
call
enter
out
push
xchg
jl
in
add
fistl
add
nop
scas
xor
jl
inc
mov
dec
push
mov
in
mov
stos
xor
mov
and
and
call
xchg
in
mov
xor
inc
mov
rorb
jecxz
xor
mov
aad
movsl
mov
rorb
push
xchg
jbe
stc
xchg
call
jbe
cld
mov
call
sub
adc
mov
dec
scas
mov
mov
mov
inc
push
push
push
push
xchg
xchg
scas
outsb
in
inc
repnz
incl
out
inc
out
call
mov
scas
push
lahf
inc
mov
xchg
incl
mov
daa
dec
imul
arpl
cmp
xchg
xchg
popa
iret
inc
ds
std
dec
mov
or
and
cwtl
std
call
popf
inc
add
and
enter
mov
sahf
push
jle
idivl
add
ja
dec
xchg
shlb
sub
add
mov
add
add
in
jl
faddl
add
add
sub
inc
push
dec
push
aaa
mov
sti
aad
call
jmp
daa
pop
dec
lcall
call
loopne
decl
xlat
call
mov
and
dec
fwait
lahf
jl
ljmp
lcall
cmp
lock
incl
mov
loope
xlat
aad
or
adc
inc
add
in
cld
mov
call
add
add
cmpsl
add
jle
repnz
add
add
repnz
xchg
add
add
incl
enter
ljmp
pop
mov
repnz
mov
xchg
jns
cmpsb
pop
je
mov
xor
mov
xchg
and
dec
dec
cmpsb
imul
enter
add
add
decl
in
push
out
out
out
enter
stos
in
jno
in
dec
dec
mov
sbb
jne
pop
enter
addl
add
repz
std
fsubs
add
add
sub
stc
insb
imul
in
mov
cld
call
jmp
daa
dec
or
ss
ljmp
or
inc
sub
inc
add
stc
add
cwtl
add
add
add
dec
xchg
inc
add
nop
je
sub
shrb
fiadds
sbb
movsb
aaa
out
jmp
inc
and
fisubs
aaa
dec
jne
cld
pop
inc
pop
jns
inc
dec
push
xor
repnz
dec
pushl
xchg
inc
add
adcb
test
movsb
movhps
negb
int
add
xchg
jl
pop
xchg
inc
add
or
sub
inc
add
incl
inc
jle
lahf
xchg
inc
add
inc
mov
add
add
add
inc
jle
jle
add
test
add
enter
dec
add
add
decl
popf
inc
add
nop
pslld
decl
call
addr16
stc
leave
scas
dec
aaa
arpl
pushl
subl
cmp
and
aaa
dec
xchg
push
jns
add
or
iret
das
adc
jmp
std
call
shl
mov
push
aaa
adc
inc
add
sbb
movsb
je
in
nop
aas
aas
stos
xchg
aaa
or
decl
mov
inc
add
popf
inc
stc
push
repnz
add
popf
inc
add
add
cmp
dec
pushl
add
inc
add
scas
or
decl
enter
decl
cmp
incl
mov
call
stc
cmpsb
pushl
add
or
push
add
add
inc
mov
add
mov
ljmp
fdivr
cmp
mov
incl
pushl
add
stc
inc
and
test
incl
jmp
pop
leave
das
push
movsb
jmp
xchg
popf
inc
add
nop
jl
call
cmp
mov
cld
nop
add
mov
cld
add
inc
out
lret
jmp
nop
dec
and
call
icebp
decl
decl
cmpl
add
cld
and
cs
decl
inc
add
add
jl
stc
cmpl
cmp
cmp
add
ja
pop
filds
insl
call
aam
imul
test
and
iret
mov
or
push
pop
or
js
lock
lahf
cld
imul
sub
std
dec
test
mov
int3
iret
pop
sbb
aaa
and
mov
xchg
mov
ds
repnz
add
dec
adc
add
imul
xlat
mov
sub
mov
aaa
jge
pop
in
inc
dec
aaa
pop
movsl
inc
add
jo
repnz
movsl
inc
add
addb
push
cld
sub
int
imul
int
lea
mov
call
push
loopne
push
or
cli
inc
jmp
and
aaa
xchg
das
rcrb
stc
int3
pop
popf
xlat
cli
add
mov
xchg
aaa
scas
fcomp
popf
xchg
fld1
dec
pop
sub
repnz
cld
aam
and
xchg
xchg
outsb
xor
test
or
iret
add
aaa
sar
ds
mov
call
xchg
pop
xchg
and
aaa
cwtl
fnstenv
fwait
mov
cli
mov
push
mov
incl
and
pushf
adc
xchg
into
icebp
add
and
jnp
cld
xor
adc
mov
xchg
cmp
popf
or
repnz
add
sub
add
insb
lods
inc
add
pushf
mov
js
add
pushf
cmp
pop
pop
push
adc
or
add
in
inc
ds
xchg
or
negb
add
enter
push
mov
push
aaa
push
push
dec
sub
out
hlt
cli
test
mov
xchg
aaa
sbb
out
out
add
push
push
adc
aaa
adc
movsb
aaa
jns
fiaddl
xchg
sub
jns
cmp
cmp
cmp
fldl
inc
push
mov
js
mov
idiv
incl
or
add
enter
out
fistpll
in
jns
fstpl
or
not
cmc
cmpsl
jmp
and
lahf
dec
sbb
addb
pop
dec
fwait
es
sub
push
jne
dec
add
push
pop
or
sub
ja
fdivl
stos
mov
stos
shl
xchg
dec
leave
sahf
pop
arpl
clc
fldl
cmp
test
xchg
xchg
aaa
push
adc
mov
imulb
add
and
repz
fdiv
push
call
add
jmp
call
ljmp
idiv
aas
dec
ds
mov
incl
nop
mov
lcall
xchg
pop
leave
push
mov
push
repnz
call
add
daa
xchg
scas
inc
add
decl
repnz
sar
push
int3
cld
fsubrs
fwait
cwtl
mov
stos
inc
and
das
and
xchg
ljmp
dec
das
stc
inc
int3
daa
add
fnstsw
incl
fldl
jo
inc
add
mov
cld
outsl
stc
mov
add
add
inc
fldl
cld
nop
add
out
jmp
add
mov
add
lcall
lcall
leave
pushl
enter
incl
leave
cld
ss
inc
add
inc
repnz
call
enter
pop
or
jmp
add
cld
incl
push
sub
mov
int3
jo
cmp
adc
and
sub
cmpb
stos
aaa
xchg
mov
add
jbe
incl
enter
mov
jp
xchg
and
sarl
ja
stc
leave
dec
jle
mov
jmp
pushl
jmp
dec
ds
xchg
and
dec
decl
repnz
ljmp
mov
dec
loopne
adc
mov
push
sub
movsb
add
aaa
dec
cli
incl
shrb
cmp
and
psubw
push
aaa
cmp
ds
add
call
cmpb
ljmp
cli
jle
jl
out
cld
stc
js
jl
mov
stc
in
repnz
stc
and
stos
aaa
lahf
inc
ds
clc
lcall
out
mov
jl
and
aas
or
inc
mov
dec
cli
incl
mov
mull
adc
cmpsl
inc
sub
and
jae
in
mov
push
xchg
aaa
xor
ljmp
stc
add
decl
clc
call
add
add
iret
icebp
int3
mov
fistl
aaa
outsb
dec
sbb
popf
xchg
loopne
inc
leave
daa
mov
call
sti
call
sub
jns
daa
nop
pop
mov
inc
add
js
lcall
jo
shrb
rclb
or
adcb
bswap
das
push
out
call
ljmp
lods
adc
dec
adc
lcall
dec
repnz
mov
decl
inc
cmpl
sub
aaa
sub
mov
and
lods
call
push
stc
and
dec
repz
inc
sbb
call
cmp
pop
repnz
sbb
incl
jmp
sbb
ss
lcall
mov
add
cmp
call
add
psubw
ljmp
cmp
sub
enter
jmp
cwtl
cmp
in
aam
sub
std
pop
js
push
shrb
clc
cmpsl
push
hlt
call
or
jns
mov
rclb
jns
pop
fs
fs
sbb
popf
int3
jge
js
fmulp
data16
les
ret
enter
enter
enter
push
in
hlt
mov
mov
and
aaa
mov
fiaddl
clc
mov
int3
and
xchg
cmp
aaa
in
enter
call
mov
cs
popf
dec
adc
aaa
jbe
inc
fldenv
pushf
inc
add
imul
mov
movsl
aaa
pop
add
add
iret
jp,pn
ss
call
sbb
push
xor
out
ljmp
dec
dec
in
xchg
movsl
push
icebp
fwait
in
pop
sub
fldcw
ds
cld
mov
inc
add
insb
dec
pop
pop
imul
push
repnz
pop
in
add
sub
cmp
xchg
cmpl
ds
dec
push
aaa
or
inc
add
popf
inc
add
shrb
pop
dec
clc
stos
cmpsl
je
das
dec
xchg
aaa
add
add
shrl
xchg
dec
hlt
dec
dec
out
add
lcall
stc
ljmp
mov
incl
repnz
ret
add
mov
add
es
push
xchg
aaa
mov
add
pmulhuw
inc
add
stos
decl
incl
cmpsl
ljmp
cmpsb
pop
push
dec
or
xor
aaa
pop
stc
add
add
lods
call
in
repnz
pop
xchg
ss
inc
add
incl
aad
jbe
sub
inc
push
jns
xchg
and
ret
jp
in
push
xchg
aaa
jmp
lcall
cmp
inc
xchg
and
aaa
dec
dec
xchg
xchg
jns
daa
aaa
inc
ss
dec
stos
jl
or
movsl
aaa
push
fs
mov
popa
leave
dec
cmp
sahf
ret
push
mov
pop
jmp
jo
xchg
repnz
inc
add
outsl
ds
fldl
test
inc
ds
xchg
add
jmp
pop
inc
and
and
aaa
clc
cwtl
movsb
push
ds
pop
mov
jl
xchg
aaa
fwait
les
lahf
aas
in
mov
pop
cmc
pushl
loop
and
pop
push
push
stc
xchg
and
aaa
jo
inc
add
ds
inc
push
mov
fildl
mov
xchg
push
push
xchg
xchg
aaa
jo
leave
in
inc
add
in
mov
jmp
xor
mov
inc
enter
adc
add
scas
loopne
insl
mov
movsb
push
ss
repnz
or
aaa
and
call
inc
add
inc
add
sahf
push
sub
mov
loop
jle
and
aaa
cltd
xchg
ljmp
or
dec
push
incl
add
mov
xchg
aaa
cmp
xchg
lret
aaa
and
xchg
pop
nop
movb
adc
inc
dec
push
mov
dec
ds
inc
add
std
inc
mov
decl
mov
cmp
call
jb
inc
jle
decl
and
aaa
cmp
daa
in
decl
sbb
das
dec
jo
add
hlt
dec
xor
dec
push
xor
adc
and
aaa
cmp
cltd
push
mov
adc
aaa
or
imul
movsb
fs
mov
mov
aaa
and
call
jmp
push
leave
dec
scas
mov
pushl
mov
decl
and
add
push
sahf
ds
push
push
in
enter
xchg
adc
sbb
xor
and
mov
mov
dec
rorl
int
repnz
in
nop
jnp
mov
dec
push
cmp
xor
call
out
pop
dec
clc
cmp
sahf
lcall
push
pop
loop
xchg
xchg
jmp
movsl
aad
sbb
mov
out
call
mov
mull
inc
cmp
mov
inc
add
cmp
mov
faddl
insb
jbe
sbb
insb
cltd
dec
pop
xchg
scas
pop
add
je
xchg
pop
or
mov
sub
or
cmpsb
bnd
ljmp
stc
cmp
cltd
in
lret
test
das
inc
ds
pushf
cmp
dec
imul
scas
andb
popf
inc
mov
loopne
cmp
inc
sub
mov
push
inc
push
cmpsl
mov
in
outsl
mov
mov
inc
add
cld
decl
decl
cmpsl
xchg
lcall
nop
jle
in
popa
call
sub
sub
fcoml
clc
jmp
mov
scas
mov
add
shl
and
fdivl
fstps
cmpsb
int3
sub
mov
fmuls
enter
fs
leave
push
sbbb
call
movsb
cmpsl
push
dec
test
push
mov
pop
mov
add
daa
iret
inc
add
enter
inc
fcomps
mov
and
xchg
aam
stc
adc
daa
push
sar
lcall
lahf
pushl
push
repnz
inc
add
lea
in
rclb
sbb
push
cmpsl
test
xchg
add
cs
cld
or
jmp
xchg
leave
xchg
inc
mov
or
inc
add
incl
push
mov
cmpsl
iret
std
incl
mov
mov
push
fs
inc
adc
mov
cmp
inc
add
and
dec
dec
cmpsl
inc
push
mov
sub
cld
push
cmpsl
jae
mov
add
xchg
inc
lock
sbb
jns
and
mov
push
aas
mov
mov
lret
inc
adc
mov
fwait
imul
dec
xor
into
lcall
mov
jns
enter
mov
push
mov
sbb
mov
aas
mov
cs
fldl
inc
mov
mov
sub
mov
adc
or
in
sub
mov
push
sbb
jo
aas
repnz
inc
add
decl
js
inc
add
and
pushf
jmp
cmp
push
add
ds
inc
fldl
xchg
cld
inc
or
incl
cld
or
int
dec
iret
cmp
xchg
jl
fldl
movsb
decl
add
mov
jbe
nop
xchg
cmpsl
les
cmp
mov
sarl
jle
push
cmpsl
arpl
jmp
enter
cmpsl
stc
outsl
bound
shrb
dec
in
cmpsl
dec
jle
pop
das
iret
call
call
icebp
adc
or
repnz
cmpsl
ret
lcall
das
xchg
jmp
int3
fcomps
push
dec
pop
dec
rolb
cmp
and
cli
movsb
xchg
inc
es
sarl
pop
add
push
aaa
jp
in
pushf
fs
push
sub
cmpsl
insb
and
or
adc
or
adc
jmp
or
jl
add
add
jmp
stc
add
sub
add
xchg
ds
scas
cwtl
add
add
call
leave
jmp
call
daa
stc
push
popf
xchg
ljmp
lcall
push
cmp
and
sub
nop
cld
decl
decl
xchg
decl
jmp
adc
ljmp
jmp
add
fidivrs
xchg
jmp
lcall
incl
stc
and
mov
incl
xchg
ljmp
mov
movsb
je
or
push
repnz
jmp
and
inc
fldl
enter
fstpl
mov
pop
call
addr16
lcall
out
add
les
repnz
pop
and
push
pop
addr16
and
in
inc
jecxz
incl
sti
cld
inc
fldl
cmp
cli
ds
xchg
into
repz
inc
test
xchg
inc
mov
mov
cmp
xor
sbb
xchg
nop
dec
lds
mov
push
movsl
pushf
sahf
xchg
out
pop
xchg
mov
movsb
fs
repnz
faddl
faddl
mov
lcall
mov
incl
nop
xchg
into
and
add
adc
mov
incl
test
xchg
mov
push
inc
movsl
pop
lea
add
xchg
and
movsb
fildl
movsb
fs
sbb
cld
mov
inc
add
push
mov
and
mov
adc
adc
pop
nop
inc
clc
adc
pop
faddl
leave
seto
lods
faddl
adc
adc
sub
inc
add
loope
or
and
fcmovnbe
adc
and
xchg
pop
pop
mov
pushl
push
decl
mov
incl
call
push
dec
jle
test
cmp
sub
lock
ds
mov
pushf
cmp
in
and
call
pop
loope
subb
faddl
sub
imul
cmpsl
repnz
filds
movsb
sub
add
xchg
mov
rcrb
adc
xchg
sarb
repz
add
jnp
jp
dec
test
cmp
inc
add
repz
jle
push
sub
xchg
jl
arpl
in
sahf
imul
jge
mov
loopne
call
mov
mov
add
in
xor
adc
jb
jmp
nop
mov
insl
decl
jmp
stc
test
sar
shll
or
push
add
dec
add
add
inc
fisubl
decl
incl
xchg
jl
stc
push
decl
xchg
jmp
repnz
jo
dec
imul
and
xchg
lcall
mov
icebp
inc
dec
bound
jb
jl
dec
pop
std
jo
jmp
arpl
xor
and
sbb
mov
adc
and
xchg
xchg
or
add
cld
mov
lods
pop
notl
lret
and
xor
rcrb
adc
cmpl
lcall
stc
add
jg
ljmp
jmp
xchg
nop
decl
xchg
lcall
test
dec
leave
das
and
pop
xor
pop
jp
jmp
push
cmp
or
inc
pop
mov
incl
in
repnz
pushl
mov
mov
stc
enter
xchg
decl
cmp
sti
adc
sbb
inc
push
pop
mov
stc
aas
inc
sbb
call
and
lcall
incl
and
xor
incl
in
add
lods
jmp
or
jbe
sahf
mov
pop
xchg
jg
pushl
in
xchg
lods
js
or
or
pop
and
dec
mov
movsb
pop
mov
test
ljmp
daa
in
ja
pushl
add
bound
dec
cmpsb
stc
push
pop
inc
and
pop
call
out
jo
pop
test
jp,pt
add
ds
decl
cmp
add
pop
out
dec
call
pop
push
faddl
inc
jle
push
ljmp
jno
or
jge
pop
mov
jge
mov
push
pop
adc
push
pushf
subb
retw
icebp
dec
pop
fdivrs
adc
outsb
xchg
xor
clc
cltd
mov
add
xor
call
add
jbe
xchg
dec
add
adc
movsb
mov
clc
xchg
or
pop
enter
xchg
lcall
sarb
insb
cmpsb
adc
add
jo
inc
movsl
lahf
xorb
sbb
adc
je
xchg
push
cs
jmp
pop
ret
lahf
nop
pop
mov
push
faddl
ja
nop
aaa
pop
lcall
or
mov
xor
fists
pushf
fnstsw
mov
repz
sub
movsb
cmp
and
sbb
imul
cwtl
cwtl
push
xchg
jns
mov
xchg
fldl
mov
jmp
insl
inc
or
push
stos
mov
sbb
xor
and
inc
pop
jnp
xor
fucomi
test
cwtl
fldenv
jbe
jne
or
leave
inc
inc
cwtl
out
aas
push
dec
xchg
inc
insl
mov
jmp
add
add
nop
incb
stc
leave
lahf
jmp
nop
call
ljmp
enter
pop
jle
add
add
cmp
add
mov
adc
and
mov
cmc
call
cmp
xor
ljmp
cmp
push
mov
inc
and
dec
xchg
lret
mov
das
mov
cmp
cmp
or
or
in
push
and
popa
call
shll
sub
rcll
insl
push
stos
shrb
das
pop
mov
push
fidivs
and
jl
push
mov
add
adc
insb
cmp
sbb
sbb
les
outsb
or
dec
pop
frstor
dec
out
mov
movsl
insl
sub
mov
call
mov
and
cli
std
ljmp
fnsave
hlt
mov
enter
pop
jge
dec
add
add
ret
pusha
adc
pop
out
insl
mov
ret
sub
lahf
sub
pop
ja
pop
in
sub
popa
rclb
fs
pop
xchg
lock
lret
dec
xchg
fisubrs
adc
pop
rcll
xor
aaa
mov
mov
cmp
insb
popa
push
pop
xchg
pop
mov
call
and
and
movsl
add
inc
sbb
stc
dec
scas
pushf
fldl
mov
shl
fs
add
in
pop
scas
xchg
pop
pushf
nop
in
dec
xchg
negl
je
incl
enter
incl
add
add
sbb
aas
adc
inc
add
and
test
sbb
xor
repnz
push
push
popa
loop
sub
mov
pop
sub
add
and
dec
push
xchg
pop
mov
outsb
movsb
cwtl
jo
add
negl
rcrb
test
cmp
sbb
mov
sbb
sahf
std
divb
ds
call
push
ss
notb
clc
lcall
call
decl
lahf
dec
adc
decl
jmp
in
enter
out
incl
xchg
pop
into
scas
lcall
out
push
push
or
add
call
or
or
mov
std
mov
stc
adc
in
mov
jle
shlb
jmp
jg
and
jp
pushl
ret
test
mov
decl
in
or
jns
pop
and
mov
in
sbb
mul
pop
jmp
bound
and
int
jb
lods
cwtl
js
mull
mov
leave
cmp
sub
sbb
ja
mov
mov
pop
mov
push
testl
pop
test
push
ror
sahf
inc
jle
and
enter
call
enter
jmp
cmc
inc
add
pop
jb
ljmp
cmc
out
ss
enter
sub
sub
and
fxch
out
sbb
xchg
cmc
js
cmpsl
push
push
dec
push
sbb
mov
xor
adc
js
test
mov
push
inc
push
enter
notl
arpl
xchg
pop
nop
dec
push
adc
cmp
fwait
inc
xchg
daa
clc
popf
pushf
lock
adc
loopne
ja
cltd
cmpsb
or
add
push
in
xorl
int3
rcrb
mov
fmuls
cs
mov
fidivrl
and
push
imul
xor
jbe
movsb
insb
mov
nop
pushf
pushf
je
fisubl
insl
nop
enter
nop
push
adc
mov
mov
mov
hlt
movsb
or
dec
adcb
dec
xor
jl
test
leave
xchg
ss
shlb
mov
insb
call
and
fs
pusha
aam
mov
ficompl
pop
mov
or
cld
push
push
mov
fidivl
dec
out
ja
cs
jbe
mov
adc
rclb
pop
and
nop
adc
sti
inc
mov
test
fstl
call
cmpb
in
ljmp
and
imul
pop
sarl
out
jns
jo
sbb
int3
iret
repz
mov
nop
mov
repz
movsb
pushf
lcall
movsb
int
and
ljmp
scas
jns
xchg
out
and
add
pop
in
xchg
out
and
adc
sahf
movsb
mov
nop
push
lahf
les
cmpxchg
push
sbb
insb
daa
stc
fcompl
jns
incb
sbb
xchg
mov
jmp
mov
inc
add
push
adc
into
and
or
pop
jo
into
call
sti
inc
add
inc
xor
ss
pushl
fiaddl
stc
sti
mov
das
mov
cld
inc
push
sbb
es
pushf
inc
rorl
sahf
imul
test
or
mov
add
sbb
sub
test
dec
dec
and
imul
mov
nop
inc
repnz
outsl
or
inc
stc
gs
and
loop
xchg
incb
xor
xchg
pop
xchg
pushl
fbstp
or
call
cmpsl
mov
add
call
xor
outsl
leave
sub
or
mov
pop
adc
dec
jb
in
cmp
jb
and
nop
fs
sarb
nop
or
repnz
outsb
addl
inc
jbe,pn
in
sbb
xlat
pop
mov
fs
pop
adc
outsb
adc
aas
call
inc
mov
inc
add
sbb
inc
rcrb
pop
mov
ja
sub
rcrb
jns
sbb
les
and
enter
xchg
xchg
pop
int3
xor
xchg
xchg
out
sarb
aam
xchg
xchg
out
sbb
dec
iret
out
xchg
add
push
in
loopne
and
and
and
iret
fs
insb
iret
xor
repnz
in
cwtl
je
jns
and
lock
test
out
sbb
je
imul
in
push
cld
out
rcrl
std
mov
add
sbb
jns
les
add
dec
enter
adc
mov
ds
std
or
push
sbb
pop
inc
jo
adc
inc
add
nop
adc
inc
add
pop
dec
or
inc
add
pop
add
adc
or
mov
int3
int3
pop
cmpsb
push
je
nop
pop
cwtl
aaa
addb
or
jnp
stc
dec
mov
inc
pop
or
inc
es
add
aam
in
int3
push
pop
lcall
addb
dec
sub
popa
int
imul
fidivl
push
pusha
ds
mov
leave
push
xchg
adc
ss
inc
add
push
and
mov
push
dec
add
inc
push
push
add
pop
add
push
or
jge
lds
in
ret
pop
cs
popf
orl
add
jno
xchg
xchg
addl
jl
or
dec
add
roll
xchg
mov
test
int
mov
xchg
iret
adc
insb
and
inc
add
fcomps
jns
das
outsb
addl
pusha
adc
xchg
leave
outsb
addl
mov
pusha
cmp
xchg
push
pop
inc
rcr
xchg
add
jl
inc
add
rclb
and
pushf
adc
inc
pop
push
stos
xor
add
movsl
dec
pop
pop
lret
cmpsb
add
faddl
test
or
insl
push
xor
add
sbb
pop
sbb
and
or
jbe
sbb
jmp
pop
and
das
leave
xor
pop
adc
test
out
push
mov
loopne
sub
and
fimuls
pop
fsubl
testb
addr16
pop
cmp
and
or
mov
insb
or
xchg
inc
addr16
mov
outsl
into
pop
cmp
pop
jb
push
adc
xor
push
pop
xchg
mov
les
into
pop
cmp
arpl
sub
rolb
xchg
mov
sub
fmulp
pop
cmp
pop
pop
repnz
jo
pop
xchg
or
adcl
or
in
sub
cmp
dec
adc
pop
sbb
push
mov
or
adc
or
adc
pop
inc
xor
nop
or
pop
shlb
and
adc
fsubrs
notb
xchg
enter
test
imul
adc
or
mov
xor
pop
insl
push
or
inc
mov
inc
xor
or
movsl
push
leave
test
testb
sub
mov
xchg
adc
or
mov
inc
sub
push
or
push
into
pop
cmp
add
or
adc
adc
adc
push
dec
and
pop
inc
ss
sub
sub
and
test
aad
mov
call
dec
int
fsts
ret
push
jge
insb
push
mov
jl
adcl
add
add
pop
jo
stc
imul
mov
in
shll
inc
mov
ret
or
in
jne
cmp
adc
clc
imul
cld
mov
cmp
add
adc
rcll
in
leave
lea
adc
mov
lock
in
xor
jb
inc
xor
in
mov
cmp
pop
and
pop
addb
xchg
lea
jb
adc
mov
push
push
adc
add
js
mov
mov
and
pop
fisttps
stc
adc
insl
push
inc
add
stc
and
add
add
adc
pop
cmpsl
sbb
mov
mov
imul
movsb
std
push
repnz
clc
adc
cmp
push
jmp
pop
cmp
dec
hlt
mov
int
shl
sbb
in
or
lock
repz
out
inc
loop
in
mov
int
test
sub
jns
xor
jl
mov
pop
call
fcoms
xchg
in
pop
sahf
xor
cmp
mov
jns
int
adc
pop
repnz
adcl
outsl
add
add
mov
ret
jle
pusha
sahf
jg
movsl
jns
mov
in
insb
pop
inc
je
xchg
mov
jmp
dec
pushf
cli
inc
cwtl
dec
jno,pt
mov
cltd
mov
adc
adc
dec
out
outsl
and
aaa
jne
sub
inc
cmp
pop
xrelease
js
int3
push
popf
fst
and
xor
int
call
jns
sbb
push
shll
aam
mov
fnstcw
pop
mov
xchg
jle
adc
subb
fadds
pop
adcl
and
inc
push
and
add
add
out
and
push
ss
sub
and
add
adc
addr16
call
incl
decl
dec
enter
add
jl
jle
std
shrl
sub
ds
addr16
dec
inc
dec
jmp
add
add
inc
add
push
out
xchg
cld
lahf
add
jmp
pop
faddl
and
repnz
jmp
ljmp
mov
decl
sub
test
mov
push
mov
addr16
outsb
adcl
int
push
clc
decl
ljmp
ljmp
insl
push
cmp
faddp
addr16
xor
nop
jl
std
incl
mov
jle
or
cli
aas
inc
jle
addr16
add
add
cld
decl
cwtl
aaa
and
popf
faddl
movsl
cmpsl
stos
movsl
repz
pop
or
aas
xchg
in
faddl
addr16
dec
jmp
xchg
jl
xor
inc
add
jle
je
cmp
fdivrp
call
in
jmp
sti
pushl
pop
inc
jle
call
fdivrp
incl
inc
nop
aas
pop
nop
add
inc
add
add
fs
push
pop
add
jbe
jmp
shrl
mov
jo
push
cmp
push
sbb
fwait
xchg
or
jns
jmp
cmp
mov
xchg
xchg
and
repnz
xor
out
inc
lea
push
repnz
push
jns
inc
aam
push
enter
xchg
cmp
loopne
sbb
pop
psllq
mov
or
lds
popf
out
ret
jb
leave
scas
loopne
lds
add
adc
dec
jle
mov
incl
movsl
jae
push
dec
repnz
in
scas
repnz
js
jmp
aas
inc
jle
popa
add
and
add
pop
xchg
pop
sbb
dec
cld
incl
mov
shrb
sbb
mov
std
pop
push
and
subb
imul
and
mov
int3
sub
out
sbb
push
inc
push
imul
cmpsb
imul
sahf
inc
add
or
xchg
cli
sub
jge
int
idivl
or
sbb
insl
lds
add
rclb
pop
iret
fistpl
cmp
adc
sahf
xchg
fnsave
inc
sahf
cmp
cmp
lds
out
xlat
xor
add
aaa
enter
faddl
adc
dec
jae
mov
sub
mov
mov
leave
jae
stos
push
popf
or
in
sbb
mov
sub
lcall
or
xor
or
mov
or
aas
stc
adc
mov
pushl
sti
incl
out
incl
call
and
jl
add
lahf
cld
and
push
mov
call
repnz
call
add
idiv
cmp
rcl
mov
hlt
call
rep
loopne
inc
mov
or
jmp
or
cwtl
imul
nop
pop
btr
push
and
call
movsb
add
in
into
push
in
insw
add
push
pusha
cs
dec
roll
incl
nop
dec
jno
addr16
pop
add
in
and
mov
jmp
fiadds
and
cmp
imul
xor
add
pop
cmpsb
imul
popa
lcall
dec
mov
out
jo
movsl
in
cmpb
outsb
xlat
insb
push
stc
mov
mov
mov
fld1
dec
and
push
push
int
sbb
inc
test
cs
lcall
jo
push
push
call
jnp
and
and
mov
call
jb
or
sbb
push
cmp
in
mov
mov
mov
mov
cmpsb
addr16
fldt
es
cltd
sarl
and
test
call
mov
push
addr16
outsb
scas
sub
outsl
das
sbb
jmp
clc
cmpps
xor
daa
pop
mov
pushf
fistpl
repnz
ds
inc
out
movsb
pop
dec
push
in
pop
cmp
xchg
test
fld
insb
push
loope
fimuls
dec
xor
fldln2
in
icebp
aaa
and
inc
push
in
pop
andb
xchg
sub
sub
push
bound
xor
add
fs
ja
push
int
mov
mov
push
xchg
xchg
dec
mov
test
outsb
andl
jmp
ss
cmp
sub
add
jecxz
addr16
cli
call
pop
in
ljmp
das
decl
repnz
sub
dec
xor
jmp
leave
je
mov
pusha
jmp
loopw
cld
dec
ds
inc
add
cli
call
scas
loopne
shrl
jns
ret
in
mov
imul
dec
cmpsb
and
adc
addr16
cmp
or
add
jb
es
daa
lret
adcb
push
sub
shrb
mov
inc
jmp
aam
dec
sub
add
popf
imul
add
add
out
sbb
test
adcl
xlat
inc
stc
push
leave
outsb
mull
ljmp
sub
out
add
in
jo
daa
mov
sub
sub
add
fimuls
mov
push
das
sub
adc
push
call
notl
in
incl
sub
pop
clc
mov
sbb
push
sub
in
in
dec
jmp
xor
stos
outsb
andl
mov
mov
ss
cmpsb
mov
ss
cld
add
mov
adcl
in
decl
or
subb
or
pushl
data16
ljmp
xchg
and
ljmp
addr16
dec
dec
cs
sbb
mov
leave
pmulhuw
call
daa
nop
add
repnz
or
inc
add
add
xor
jmp
inc
enter
call
inc
add
cmpb
inc
add
sbb
stc
add
sub
call
loopne
adc
xor
push
push
faddl
and
into
mov
aas
jae
call
es
shr
and
addr16
xor
mov
ljmp
cld
mov
push
add
pop
and
andb
ljmp
xor
mov
pop
and
das
daa
push
jb
xor
rcrl
lods
imul
mov
push
inc
push
imul
cmpsb
add
jmp
dec
pushw
push
test
mov
mov
imul
add
daa
insl
sub
out
push
xlat
xchg
xlat
mov
pusha
xor
aaa
sbb
rclb
jo
cmp
and
mov
mov
mov
sub
mov
dec
sbb
push
mov
mov
jmp
sbb
xor
xchg
daa
pusha
popa
arpl
cwtl
sti
insl
push
cmp
cmp
dec
cmp
addr16
jnp
push
jae
leave
imul
fldl
movsl
addr16
xor
fildl
pop
mov
enter
gs
or
sub
inc
sarl
push
push
and
test
int
sbb
push
and
push
int3
cmp
adc
xor
stos
sub
int
cwtl
jno
xor
pop
xor
scas
imul
cltd
fidivs
out
pop
shlb
push
inc
mov
mov
shlb
add
adc
sti
incl
stc
test
jp
call
cld
xchg
pop
leave
decl
jecxz
cmp
stc
test
xor
adc
sub
mov
xor
insb
addr16
pop
ret
xor
adc
adc
dec
xor
in
leave
test
mov
dec
test
jne
add
addr16
jle
xchg
xor
add
incl
add
jmp
leave
in
and
repnz
ja
xor
shlb
inc
addr16
cmp
call
dec
cmp
cmp
mov
loope
xorl
cs
sahf
pop
or
insb
sub
xchg
or
mov
lds
pop
nop
push
pop
and
out
call
push
inc
fwait
and
pop
sbb
sahf
pop
daa
pusha
cs
dec
inc
adc
inc
jmp
stc
jo
add
mov
fnstenv
notl
aaa
and
cmpsb
imul
leave
sub
cwtl
push
pop
cmp
test
lcall
cwtl
jle
xor
add
lods
cmp
or
fidivrl
or
insl
push
xor
sbb
dec
lcall
add
ret
fldl
cmp
imul
jbe
and
add
jbe
push
push
bound
add
sbb
shrb
cmp
loope
add
dec
insl
std
popf
fistpl
std
sbb
sub
cld
mov
shlb
subl
push
mov
mov
cmp
loope
cmpsb
imul
and
fisubl
inc
outsl
push
fiaddl
xorl
mov
leave
addr16
xchg
arpl
push
sbb
jb
mov
repnz
fstp
and
cmp
pop
ret
sbb
stos
add
cld
mov
add
add
in
test
sti
jmp
cld
incl
sbb
ds
cld
fistpll
roll
daa
pop
and
mov
addr16
paddb
jmp
dec
es
adc
inc
sbb
jo
adc
leave
adc
int
sub
outsb
addr16
jge
sub
inc
daa
loopne
pop
mov
pushf
aas
xchg
cmp
loope
or
ficomps
add
cmp
loopne
push
mov
inc
push
mov
inc
das
dec
ljmp
cmp
cmpsb
imul
mov
lcall
cld
dec
repz
insb
push
popf
cmp
xchg
dec
shll
push
rclb
in
jae
jo
add
ss
nop
xchg
fistpl
fsts
xchg
sub
dec
test
aam
sarb
loope
out
add
xor
dec
fadd
xor
add
xor
pop
jns
in
mov
mov
sahf
and
popf
add
jae
mov
dec
push
mov
mov
andb
add
sbb
cmp
pop
or
or
stos
dec
cld
imul
cmp
aad
std
push
xor
mov
pop
mov
mov
xor
cwtl
cmpsb
mov
mov
sbb
push
xchg
pop
or
xor
xor
dec
outsl
and
dec
push
daa
xchg
xchg
xchg
cmpsb
movsb
sbb
xor
mov
mov
es
cli
add
add
inc
jne
xchg
into
jae
or
ss
je
fs
leave
scas
sbb
aam
inc
add
inc
ds
cld
incl
jmp
sti
stc
push
repnz
ljmp
incl
cld
ljmp
cmp
push
jl
insb
lcall
mov
add
aaa
fisubs
hlt
push
or
push
ss
aaa
inc
inc
test
add
add
sarl
or
idiv
add
mov
sbb
mov
mov
xor
xorl
test
addr16
inc
inc
test
mov
in
mov
sub
or
and
addr16
call
xor
dec
out
mov
pop
popa
sub
pop
repnz
andl
incl
mov
dec
jle
mov
call
fwait
mov
sbb
inc
loopne
cmp
push
and
les
jp
addr16
dec
jle
mov
xchg
lret
mov
enter
addr16
pop
fcoms
inc
roll
adc
lcall
fwait
and
mov
xchg
insb
inc
push
fdivrl
ljmp
inc
incl
xchg
mov
into
mov
push
lock
push
add
int
push
adc
rolb
push
fs
mov
int
push
push
cs
cwtl
mov
pop
sbbb
add
add
iret
mov
and
and
pop
leave
pop
jbe
and
nop
imul
enter
aas
dec
push
aas
ja
adc
pop
loope
xchg
arpl
mov
roll
fldl
and
fildl
mov
stos
pusha
int
xor
enter
shll
insl
in
push
mov
add
pop
ss
shll
dec
fs
aas
pop
jo
add
sub
push
cld
jae
ret
add
or
nop
or
in
cli
clc
loope
cltd
inc
es
mov
stc
loop
sub
xchg
cld
cmp
add
test
dec
jmp
xor
add
jae
dec
sbb
adc
mov
addr16
dec
rolb
pop
mov
jmp
or
add
fwait
out
cmp
lods
dec
bndstx
dec
sbb
sub
push
mov
pop
cmp
xchg
pop
cmp
mov
push
insb
sub
sub
inc
push
and
leave
sub
adc
fistpll
dec
add
fstps
iret
scas
adc
insl
inc
leave
es
ss
push
cmp
xor
xorl
fsubrp
int
pop
add
or
sbb
mov
add
sti
push
cmp
sbb
xor
jno
lods
dec
pop
in
test
push
dec
movl
or
pusha
inc
lcall
pop
jae,pn
xor
cmp
leave
mov
inc
adc
cld
mov
cmp
cmpb
iret
add
push
and
push
mov
imul
or
shrb
mov
andb
sbb
dec
imul
notl
push
sbb
in
std
inc
jnp
in
fmul
mov
imul
adcl
or
add
mov
aaa
dec
pop
imul
add
es
mov
inc
push
sub
fwait
cmpsb
imul
mov
shlb
pushf
sub
daa
pop
sub
xchg
ss
jmp
in
nop
sti
es
mov
push
add
sar
enter
cmp
mov
xor
add
shlb
push
out
leave
arpl
xchg
adc
jecxz
out
fimull
pop
xor
outsb
adc
pmulhuw
bnd
decl
inc
add
enter
aas
outsl
adc
sbb
sbb
scas
insb
xchg
scas
push
inc
cwtl
dec
inc
pushf
lock
cltd
fcoms
or
mov
sahf
inc
add
repnz
dec
inc
push
inc
sub
aas
push
jmp
repnz
pop
push
call
hlt
subb
lahf
push
add
lahf
and
mov
dec
pop
jne
insl
push
sub
and
addr16
push
xchg
dec
xchg
addr16
cmpsb
cmp
sub
or
add
repnz
ds
sti
sbb
cmp
jmp
andl
or
loopne
mov
adc
mov
stos
out
xor
icebp
mov
roll
int3
andl
mov
jmp
insl
push
lcall
das
add
adc
cmp
insl
push
sub
adc
je
roll
addr16
call
or
add
stos
fiadds
ljmp
cmpsb
imul
lods
pop
inc
sub
adc
dec
cmpsb
imul
clc
add
sub
cmpsl
fildll
sbb
mov
lcall
sub
sbb
add
addr16
sub
jmp
and
test
cmp
test
mov
and
hlt
addr16
jmp
cltd
out
mov
fs
pusha
das
gs
or
push
mov
jl
cmpsb
sti
cmp
inc
xor
mov
fldl
and
notb
out
push
push
jmp
xchg
push
stos
xchg
cwtl
inc
jmp
leave
dec
lret
popa
ret
xchg
jae
sarb
test
mov
sbb
mov
int3
jae
mov
imul
mov
push
xor
adc
inc
rorw
push
and
jns
and
int3
movsb
arpl
add
sbb
add
xchg
mov
jo
popf
jns
sbb
mov
inc
fistpl
adc
sbb
mov
js
sbb
jo
jbe
cmpsb
and
push
pop
shll
dec
push
jno
int
push
push
mov
fwait
sub
push
inc
insb
push
xchg
dec
shrl
add
add
push
enter
add
mov
pop
jae
insb
adc
orb
jnp
sub
xor
mov
and
adc
iret
sahf
pushf
pushf
sub
fistl
adc
adc
dec
enter
in
adc
add
sahf
add
push
ret
mov
xlat
pop
sub
mull
fs
enter
jg
mov
jae
pusha
and
xor
dec
pop
sbb
stc
out
das
pop
and
iret
or
pop
roll
loope
sub
cmpl
add
inc
ficoms
adc
bnd
nop
mov
push
dec
add
add
adc
push
movsl
adc
in
jl
decl
idiv
push
out
daa
cli
adc
jmp
clc
jmp
popw
cmpsl
imul
lcall
sbb
ljmp
incl
or
pushl
jmp
push
push
or
incl
mov
add
push
test
aam
pop
pop
cmc
inc
mov
cmp
insl
data16
add
sub
cli
call
or
cmove
pop
mov
cld
mov
call
mov
or
and
mov
dec
dec
pop
ret
inc
enter
leave
ja
outsb
adc
pop
sbb
jbe
fwait
pop
fildl
in
leave
lods
outsl
repnz
sbb
daa
lahf
nop
incl
push
pushl
adc
ret
xchg
xlat
jg
pop
sarb
dec
sahf
pop
mov
mov
jmp
sbb
add
popa
inc
add
scas
dec
shll
cmp
mov
add
sub
int
mov
push
push
sbb
outsl
mov
fwait
cmpsb
imul
pop
ds
mov
or
xchg
mov
cmp
dec
call
fwait
dec
and
xchg
and
or
dec
push
mov
xor
les
ja
flds
mov
cmp
stos
add
jns
inc
mov
lock
or
imul
jnp
test
jno
jno
setns
pushf
andb
xrelease
popf
and
cmp
adc
and
xor
or
addr16
sub
dec
repz
call
mov
push
addr16
mov
icebp
imul
cwtl
notl
xor
mov
insl
sti
push
andb
into
imul
push
inc
inc
sbb
xchg
or
movsl
ljmp
sbb
shlb
pop
inc
pop
push
push
fcmovu
xor
test
and
inc
push
and
adc
lahf
inc
add
add
in
js
and
jae
push
mov
pavgw
mov
fs
inc
je
sub
cmp
cmp
in
iret
repz
in
add
pop
lock
enter
out
xor
in
imul
mov
enter
jle
repz
mov
push
addr16
dec
jb
movsb
pop
inc
adc
xchg
cmp
xchg
daa
pusha
addl
lock
test
pushf
int3
inc
pop
int
add
leave
fistpl
jl
dec
pop
cmpsl
mov
and
push
mov
icebp
pushf
adcb
insl
push
dec
pop
leave
daa
stc
je
mov
or
decl
dec
ds
cli
pushl
clc
mov
out
in
cmp
stc
pushf
mov
dec
xor
mov
leave
addr16
popa
inc
insb
and
nop
add
cmpsb
lea
push
adc
cmp
adc
mov
pushf
jae
add
sbb
into
add
stc
std
sbb
fbld
inc
jb
and
cmp
int3
sar
or
insb
bound
xchg
mov
adc
dec
push
addr16
inc
loope
lcall
push
in
enter
ljmp
pop
cmp
call
notl
inc
jmp
stc
push
imul
pop
sbb
xor
roll
ja
rcl
sub
dec
lock
xor
imul
xor
fwait
cmpsb
sahf
mov
add
xchg
pop
enter
das
add
pop
jns
dec
lret
add
leave
jb
xchg
mov
cli
add
leave
jb
adc
int3
add
enter
sbb
sahf
add
mov
stos
cmp
mov
sbbb
pop
dec
push
pop
in
out
sbb
mov
ljmp
sbb
add
xchg
sbb
sub
in
xchg
inc
icebp
push
mov
sub
mov
nop
in
mov
aad
cmp
and
test
sbb
cmpsl
jns
jnp
mov
xor
and
pop
or
sbb
enter
sbb
js
mov
and
stc
add
cmpsb
imul
imul
inc
addr16
push
loope
add
andl
inc
mov
lods
ret
inc
push
or
add
inc
push
push
xor
add
xchg
sbb
and
test
insb
xchg
ja
inc
lcall
inc
dec
test
push
mov
push
stc
jmp
xchg
daa
ds
rclb
push
scas
or
pop
lods
or
std
int3
sbb
pop
jp
pop
jae
loope
rol
sub
outsl
cwtl
sbb
fwait
mov
cmpsb
jae
push
jbe
out
fwait
or
fisttps
cmp
cmpsl
or
scas
add
add
xchg
xchg
add
dec
dec
lock
xchg
xchg
and
add
fs
sbb
out
add
sbb
inc
mov
push
out
push
dec
sbb
pop
jo
xchg
call
jne
adc
sbb
push
and
cld
cli
std
xchg
add
out
sbb
icebp
pop
les
mov
xchg
pushf
fwait
jp
xchg
xchg
lcall
mov
xor
mov
call
int
inc
test
mov
ljmp
or
js
or
stc
cmpsl
loope
cmp
leave
out
mov
jl
decl
enter
incl
daa
add
out
jmp
add
jecxz
call
cmpsl
jmp
outsb
insl
lcall
es
jo
xor
shlb
inc
les
cmp
inc
pop
aam
xchg
adc
sub
and
ljmpw
lods
pop
outsb
adc
xor
xchg
sbb
inc
add
repnz
jl
stc
inc
hlt
lods
call
lods
incl
lods
decl
leave
ljmp
decl
add
dec
lods
lcall
jmp
inc
and
clc
stos
dec
stos
decl
cmpl
stos
decl
out
stos
fimull
inc
xchg
pop
leave
or
dec
pop
nop
punpcklbw
std
jmp
stos
pushl
std
ljmp
add
stc
adcb
ja
or
xchg
and
xor
push
sbb
add
int
outsl
pop
sbb
and
nop
pushl
incl
outsl
xor
sub
xor
popa
bound
adc
inc
push
push
stos
and
jl
dec
fidivrs
jle
out
call
movsl
repz
xchg
jl
inc
movl
inc
add
scas
mov
popa
into
inc
sbb
xchg
push
pop
cmp
mov
jl
mov
inc
add
inc
sub
insl
inc
jle
and
jns
push
lahf
mov
inc
add
mov
repnz
bswap
inc
add
lock
call
lock
cmp
jp
push
movsb
sarb
int
je
shrl
stc
repnz
push
mov
cmpsl
sub
in
sub
mov
pop
shlb
push
leave
scas
pop
jp
inc
add
jb
imul
shll
xor
popa
adc
lcall
jmp
popa
test
jmp
iret
insb
int
in
cli
xor
pop
inc
bound
add
cmp
push
loopne
in
test
call
jns
std
les
sahf
xchg
rcr
sti
enter
push
shr
sbb
enter
dec
cmp
jmp
xor
cltd
dec
repz
fisubl
push
fcmovbe
dec
sbb
lahf
shlb
jmp
xchg
aas
adc
decl
adc
pop
out
pop
or
incl
lahf
lcall
int
fldl
add
cltd
xor
push
imul
shl
add
mov
xchg
movsl
inc
leave
pushf
cmpsl
movsb
je
je
in
fs
cmp
mov
add
ja
fsubr
xchg
movsb
ret
in
fs
sub
sub
test
dec
adc
enter
dec
enter
mov
pushf
incl
and
sbb
push
xor
sbb
adc
pop
cmp
or
lock
or
cmp
xchg
ret
decl
popf
lcall
test
cmp
mov
stc
inc
pop
fildll
ds
sbb
adc
andl
mov
das
fwait
test
inc
jo
sbb
sub
jo
cmpsb
iret
fsubrs
mov
es
jb
inc
mov
call
xor
leave
add
js
cmpl
push
sbb
test
mov
lcall
jmp
ret
loopne
in
xchg
pop
adc
ljmp
inc
call
push
xor
inc
jle
imul
push
orl
or
rorb
nop
jle
push
fstl
pop
shrb
or
pop
sahf
xor
sbb
sub
add
dec
adc
dec
pop
or
test
mov
std
push
out
repnz
std
ljmp
add
inc
add
stc
jbe
std
ljmp
int3
arpl
sbb
mov
xor
pop
call
movsl
inc
pop
loope
cld
stos
in
cli
add
add
mov
lcall
jl
stc
add
add
push
and
xchg
fdivrp
in
cld
inc
ds
add
add
mov
dec
ds
or
movsl
inc
jmp
or
or
cmp
or
jno
cld
inc
jle
inc
add
cld
std
lcall
inc
add
in
inc
mov
js
xchg
mov
xchg
inc
das
pop
jnp
fildl
repnz
add
cmp
stc
sbb
add
jns
add
enter
rolb
add
xor
and
add
add
inc
push
movsl
adc
cmp
in
std
std
mov
fs
lcall
mov
inc
lahf
bnd
push
and
ficompl
jae
std
mov
fidivs
lahf
addr16
decl
maskmovq
notl
addr16
and
adc
jle
jl
lods
int
cmp
inc
add
iret
xor
insl
pop
decb
pop
andl
lahf
cmp
inc
add
ds
arpl
loope
and
ftst
pop
adc
lahf
xor
dec
mov
mov
adcl
clc
lahf
pop
stc
and
pop
sahf
inc
add
leave
std
jmp
clc
lcall
adc
lahf
inc
jno
pop
push
fdivs
das
cmp
xor
lahf
dec
xchg
jmp
aas
nop
pop
data16
dec
addb
xchg
call
out
repnz
xchg
mov
adc
mov
or
daa
xor
sub
adc
pop
repnz
xchg
rol
sbb
std
fcomps
sub
addb
and
rolb
push
cmp
fisubrs
sub
fs
test
aam
inc
add
nop
jl
mov
test
sub
scas
pop
and
and
lahf
int3
addl
fiadds
in
inc
add
push
and
pop
enter
inc
add
and
adcb
add
pop
repnz
addb
inc
sub
xlat
aam
das
and
lahf
jl
inc
add
xor
inc
stc
fwait
jg
xor
or
lahf
mov
dec
daa
nop
lret
call
inc
js
ljmp
mov
repz
enter
lahf
fcomip
jo
stc
enter
loope
stc
push
add
enter
or
sub
fst
jmp
repnz
push
and
inc
sub
sbb
ljmp
nop
pop
inc
inc
cld
in
repnz
push
std
jmp
cmp
out
inc
push
lahf
jl
cmp
mov
lahf
aam
decl
popa
in
mov
pop
jl
mov
pop
mov
push
rorb
loope
repnz
std
lcall
mov
nop
aaa
mov
cmp
mov
inc
fs
lahf
and
dec
lock
data16
decl
stc
pop
stc
pop
hlt
decl
inc
add
sbb
std
dec
sahf
pushf
mov
mov
jl
iret
lahf
imul
and
lahf
lods
stc
push
repnz
in
cmp
dec
inc
das
jo
fs
sti
or
or
enter
adc
lahf
push
ds
dec
xchg
call
push
leave
dec
push
jmp
incl
fidivrl
or
aaa
jns
inc
add
sub
in
add
mov
mov
repz
orb
push
sbb
aaa
rorb
sbb
mov
int
lods
xlat
and
xchg
addr16
jns
add
xor
jb
jns
adc
test
add
xchg
into
xchg
popa
lods
sub
lret
or
sbb
das
add
jmp
push
repnz
popf
or
jge
jecxz
rorb
and
and
dec
cmp
stc
mov
sub
popf
xchg
flds
aaa
in
cmpsb
and
xor
sahf
add
std
mov
fdivr
push
enter
add
jl
fcoms
inc
lret
xchg
inc
lahf
push
xchg
inc
add
pusha
and
xchg
dec
add
sbb
in
fsubrl
lock
scas
stos
or
sbb
lds
enter
xchg
inc
lock
cmp
leave
loop
push
fs
xor
mov
xor
sbb
xor
outsl
jno
aaa
xchg
loopne
xchg
inc
leave
lahf
or
mov
rcrl
out
xchg
add
xchg
lret
shl
call
movsl
leave
xor
in
ds
inc
add
repz
jmp
pop
in
push
mov
jl
ds
xlat
std
incl
and
jg
repnz
jle
lahf
pop
fdivrp
lcall
xlat
std
inc
sti
pushl
ds
repnz
xchg
fwait
rclb
or
push
lahf
nop
dec
and
pop
xchg
inc
add
shlb
inc
pop
mov
mov
nop
add
pop
jg
aas
and
fscale
inc
xor
and
and
stc
lock
inc
or
jl
and
pushl
les
iret
inc
push
and
ficompl
mov
fstl
mov
add
xchg
inc
add
das
inc
ds
incl
rcr
inc
enter
mov
push
lock
adc
enter
adc
js
inc
push
and
in
in
add
push
adc
andl
inc
xchg
inc
leave
lahf
imul
rorl
dec
jle
aas
fldl
add
enter
and
add
popf
add
dec
out
xor
mov
cmp
dec
dec
pop
add
adc
jl
inc
add
movsl
iret
sbb
stc
cltd
lea
add
lahf
pop
mov
std
sti
idiv
ljmp
loopne
and
lcall
pop
mov
xchg
mov
into
flds
jns
mov
nop
cmp
inc
push
and
add
lcall
xor
inc
add
jl
xchg
and
adc
xor
sub
adc
adc
mov
test
sbb
xchg
mov
jbe
sub
adcl
mov
repnz
aad
inc
add
cltd
inc
add
add
shlb
pop
or
sbb
pop
leave
fsts
pop
ret
imull
add
pop
mov
negl
sbb
adc
mov
dec
add
popf
aaa
mov
popf
push
popf
add
or
and
sub
loopne
pop
call
sbb
add
mov
and
and
adc
leave
or
sahf
sbbb
andb
pop
and
hlt
popf
cmp
shrl
lahf
shlb
in
add
pop
and
sbbb
sub
movsb
dec
xchg
shrb
rcl
mov
or
xor
inc
mov
movsl
inc
leave
dec
mov
xor
mov
aam
adc
sbb
cltd
mov
adc
aam
aam
jns
das
andb
cltd
mov
jnp
add
inc
leave
pop
adc
stc
add
cmpsl
shlb
lahf
or
inc
add
and
add
cmpsl
cltd
lea
stos
jg
sub
xchg
cmpsl
sub
adc
and
sbb
jg
inc
dec
push
xor
adc
add
mov
xchg
bswap
mov
ss
mul
movsb
inc
daa
cmpsl
das
ret
push
inc
andb
adc
dec
fstpt
leave
daa
dec
cmpsl
jo
inc
add
mov
fisttpll
cld
inc
push
xor
mov
pop
movsb
or
dec
xchg
add
cmpsl
xor
or
sbb
inc
imul
inc
dec
mov
sub
into
xchg
orl
add
shl
call
repnz
inc
icebp
sub
cmpsl
je
and
xchg
lret
pusha
movsl
mov
pop
mov
or
pop
push
xor
sbb
js
or
add
add
mov
add
cmpsb
inc
add
dec
inc
cmp
ja
push
push
jb
cmpsb
mov
push
xchg
push
inc
faddl
test
orl
subl
or
nop
inc
mov
and
and
xchg
cmpsl
push
jno
cs
push
pop
bnd
xor
dec
push
dec
cmp
fisttpl
cwtl
add
mov
inc
mov
adc
fsubl
sbb
inc
add
test
xchg
cmpsl
fs
cmpsb
and
jg
ret
adc
movsl
lea
xor
cmpsl
lock
inc
add
pop
and
inc
dec
add
stc
cs
or
jno
sub
jl
and
lock
inc
add
dec
sub
push
in
subb
inc
or
test
xor
or
pushf
daa
inc
ret
nop
xchg
in
or
inc
in
sbb
and
add
popa
sub
sub
adcb
dec
leave
pop
leave
pop
dec
cmpsl
pushf
adc
lock
inc
scas
adc
add
pop
aam
mov
testb
pop
xchg
jl
push
cmpsl
xor
xchg
and
jo
cmc
cld
lea
jl
and
cmpsl
xor
inc
add
cmp
push
adc
sub
insl
sbb
enter
jo
inc
add
je
and
pop
xor
lcall
xchg
cmpsl
ret
xor
xchg
aaa
pushl
pop
push
shll
or
cmpsl
cwtl
lock
or
daa
or
inc
daa
movsl
das
jmp
mov
mov
pop
jo
or
test
dec
and
sub
cmc
lods
in
cmp
sti
sbb
or
insb
jae
cwtl
shl
dec
out
aas
scas
and
sbb
cmpsl
pop
sub
pop
bnd
js
nop
push
adc
scas
sub
adc
faddl
adc
dec
push
xor
add
jbe
jne
and
add
cmp
jne
lret
insl
aam
mov
push
popl
sbb
pop
mov
stos
adc
pushf
scas
sbb
insl
fsubs
sbb
ja
sub
inc
sbb
test
push
push
or
xor
int
fdivl
in
jle
scas
ror
mov
test
cmp
xor
or
mov
pop
sbb
les
dec
add
sub
and
addr16
add
jl
and
xchg
aas
pop
dec
or
ret
orb
and
mov
add
xchg
mov
mov
nop
sbb
push
decb
adc
les
sub
ss
pop
lock
lcall
outsl
adc
mov
inc
jle
adc
sbb
inc
add
lods
sbb
mov
in
mov
adc
adcl
imul
or
out
jne
jns
mov
mov
inc
roll
pop
sbb
in
push
jmp
add
mov
leave
leave
in
and
mov
sbb
adc
pushf
adc
ficoml
adc
scas
add
inc
imul
mov
fldl
push
add
arpl
cmp
pop
adc
in
or
lcall
rorb
imul
movsl
push
adc
stos
in
mov
inc
lock
xchg
dec
pushf
mov
sub
sbb
movsb
push
add
mov
jbe
push
inc
cmpsb
fimuls
dec
mov
mov
aam
pop
pop
cmp
xor
mov
pop
sub
and
pusha
xchg
dec
and
cmp
inc
push
dec
fsubl
sub
inc
cmpsl
mov
inc
add
add
adc
inc
add
add
pop
sub
inc
add
mov
fcomps
xlat
inc
mov
addps
jnp
push
cld
jmp
jbe
mov
inc
or
fdivs
iret
dec
enter
add
xchg
int3
mov
idiv
push
adc
dec
andb
adc
jb
mov
and
push
test
addb
cmpsl
ss
insb
add
add
stos
cmp
cmp
push
xchg
push
cmp
sub
and
insl
adc
pop
cmp
test
xor
leave
cmp
sub
sub
ss
and
sub
mov
ret
sbb
mov
rep
lds
loopne
add
adc
pop
aad
shll
add
pop
flds
fcomi
inc
mov
popf
or
mov
mov
xor
mov
add
mov
inc
add
inc
add
inc
add
mov
in
test
cld
mov
mov
testl
inc
inc
push
cmpsl
pop
mov
mov
push
inc
or
and
sub
int3
or
cmp
in
lock
sti
mov
ja
pop
sahf
mov
daa
mov
xor
stc
adc
mov
dec
inc
test
mov
pop
mov
xor
in
or
mov
jo
xlat
aas
push
inc
fbstp
inc
inc
pop
push
in
inc
adc
int
imul
dec
dec
pop
rclb
push
ds
fidivs
ds
jbe
dec
cs
outsl
test
dec
add
in
fwait
push
fs
mov
fwait
or
fadds
pop
xchg
push
aam
cmpsb
dec
xchg
iret
add
ret
or
inc
jmp
test
pop
adc
mov
stc
xchg
jl
cmpsl
dec
adc
sub
inc
add
push
repnz
add
add
inc
enter
adc
aam
enter
adc
sbb
test
mov
push
icebp
ss
mov
jle
adc
mov
popf
outsl
mov
push
pop
rcrb
push
lret
add
mov
inc
shl
jnp
adc
stc
lods
pop
loopne
adc
add
add
lret
pop
sbb
ret
push
inc
push
jns
sbb
pop
sbb
scas
sbb
in
sbb
iret
cmp
push
add
push
lds
pushf
inc
jle
add
add
ror
adc
dec
mov
cmp
scas
inc
mov
pop
shr
dec
shlb
mov
pop
inc
out
inc
sub
inc
and
add
mov
dec
outsl
call
pop
lock
inc
add
cmp
mov
imul
cmpsl
jne
cmp
in
sbb
add
xchg
in
sub
les
adc
cld
inc
and
inc
repnz
movb
pop
bound
jne
dec
inc
jb
adc
in
stos
lods
in
inc
mov
adc
inc
xchg
rolb
dec
stos
pop
dec
or
pop
inc
roll
or
arpl
adc
orl
pop
loopne
rclb
inc
cmp
adcl
mov
dec
cmpsl
dec
inc
add
and
add
pop
shlb
pop
mov
add
lahf
bound
add
push
inc
push
dec
sub
stc
fs
inc
add
cmpsl
mov
and
inc
add
adc
adc
inc
add
jbe
ss
aad
sbb
jnp
sub
sub
sbb
leave
dec
pusha
cld
and
inc
mov
lret
lds
sbb
cmp
mov
into
inc
sub
xor
fimull
mov
sub
sub
xchg
pop
xchg
jmp
cmpsl
lock
inc
add
inc
sub
outsl
out
outsl
dec
sbb
cltd
inc
dec
xor
enter
or
push
jecxz
sbb
int3
or
jmp
das
pop
in
in
jge
enter
xor
adc
cmp
arpl
lods
rol
mov
leave
mov
and
adc
inc
add
dec
ficoms
movsb
in
outsb
fcmovnu
push
int
out
xor
xchg
inc
inc
pop
push
leave
cmpsl
mov
cmpsl
adc
add
notb
xchg
and
inc
push
and
and
inc
jo
mov
mov
adc
or
imul
adc
in
inc
repnz
inc
add
inc
mov
fsubs
mov
or
inc
ja
dec
mov
inc
add
leave
inc
or
insb
inc
sub
inc
or
leave
enter
leave
inc
add
scas
inc
sub
push
inc
iret
pop
pop
mov
test
pop
dec
pop
xchg
pop
enter
mov
call
aas
aam
pop
fisttps
xor
ja
push
je
pop
pusha
pop
nop
xchg
ss
rcrl
cmp
ss
cwtl
push
and
add
push
push
mov
push
fucomip
push
rclb
pop
fisttps
in
jb
pop
sub
inc
add
pop
mov
insl
mov
int3
sahf
nop
pop
fsubrp
sbb
and
push
adc
rolb
mov
inc
push
sbb
enter
inc
shlb
das
nop
inc
js
inc
add
inc
pop
and
nop
add
inc
or
push
sbb
int3
arpl
sbb
ror
int
cmp
insb
cmp
adc
popa
adc
xchg
adc
ficomps
popf
into
jecxz
push
cmpsb
sbb
ret
mov
in
orb
ja
scas
or
iret
bound
inc
pusha
fwait
dec
adc
inc
shll
or
iret
enter
add
iret
and
nop
push
adc
iret
scas
in
inc
mov
repnz
and
call
push
inc
iret
rclb
sbb
in
iret
mov
in
inc
iret
ds
add
or
or
stos
pop
aaa
push
push
sbb
mov
inc
push
cmpl
or
sub
js
movsb
bound
and
mov
push
add
xor
adc
push
xchg
xchg
daa
mov
dec
pop
mov
mov
xchg
xchg
sub
repz
mov
jae
stc
js
inc
add
inc
je
inc
add
jl
js
inc
add
inc
add
pushf
dec
adc
popa
mov
adc
add
aad
call
ret
pop
add
sahf
ror
sbb
pop
xor
mov
cld
push
sbbb
inc
scas
jo
mov
xchg
mov
jb
sbb
aas
shlb
les
adc
int3
movlhps
and
fiadds
sbb
in
aam
lds
or
jle
add
lock
inc
add
test
sbb
adc
loop
pop
out
and
cmp
mov
pusha
test
jl
and
ja
adc
shll
mov
rcr
dec
leave
adc
or
inc
ja
ret
dec
jle
pop
inc
add
stc
adc
ja
pusha
inc
add
push
or
xor
rorl
pop
mov
sbb
dec
dec
xchg
stos
mov
dec
aas
pop
sbb
adc
xchg
sub
lock
inc
add
inc
enter
push
jg
add
movsl
ja
sub
pop
pop
enter
cmpsb
add
push
pop
test
sub
ja
cltd
inc
add
int
or
or
mov
and
ja
cltd
or
add
mov
ja
sub
add
pop
and
jns
push
or
dec
sub
inc
or
addl
lds
push
xchg
stos
inc
mov
mov
mov
lods
mov
in
ljmp
and
sub
cwtl
xchg
add
mov
fisubs
loopne
lock
jbe
mov
sub
clc
push
xor
out
push
dec
push
mov
push
cs
push
fcom
inc
out
mov
push
sbb
add
in
enter
fsubs
sbb
and
and
or
fcomps
xchg
addr16
sub
jge
fdivs
xor
lock
loopne
daa
cld
sbb
mov
mov
sub
inc
fsts
and
or
and
dec
faddl
or
cmp
dec
imul
cltd
popa
ja
push
fsts
psllw
sub
push
mov
xor
mov
adc
or
adc
add
sub
nop
or
or
or
or
movsl
scas
incl
stos
dec
js
push
inc
push
inc
sub
mov
fimull
xchg
daa
xchg
lret
pop
fsub
fisubl
fildl
adc
mov
out
pop
fs
push
arpl
xchg
divl
xchg
push
xchg
out
cld
inc
jle
adc
pushf
adc
inc
jmp
xor
out
fildl
faddl
and
pop
fsubrl
dec
or
mov
fadd
add
and
or
pop
fsub
add
faddl
or
mov
jo
or
fsub
shll
popa
insl
test
es
das
scas
inc
jbe
jge
sbb
fidivrl
and
shlb
dec
xchg
push
cmp
pop
pop
cmp
out
fstpl
dec
push
mov
xlat
unpckhps
push
and
pop
imul
push
jo
ljmp
mov
pop
orl
inc
dec
mov
pop
dec
je,pt
push
mov
jb
fidivrs
xchg
mov
cmp
inc
push
lret
adc
mov
and
out
mov
rcr
pop
pop
arpl
pop
or
pop
pop
inc
jmp
sub
add
add
in
test
pop
sub
outsb
mul
loopne
daa
mov
sbb
push
cmpsl
pop
daa
out
sub
jo
pop
in
fisttps
inc
loopne
add
mov
adc
add
fsub
scas
inc
repnz
adc
orl
xchg
and
dec
xchg
pop
leave
pop
int3
lcall
add
adc
roll
cld
mulb
push
or
push
pop
add
adc
loope
inc
repnz
pop
or
inc
add
add
push
hlt
loope
add
loope
add
jle
cmp
inc
add
arpl
stc
test
test
inc
add
leave
daa
cwtl
loop
add
rolb
pusha
push
and
inc
jmp
and
xchg
dec
test
and
inc
add
sbb
scas
push
leave
inc
add
sahf
pop
cs
jecxz
in
in
in
or
push
test
add
pop
in
leave
das
in
inc
add
inc
jle
mov
inc
add
inc
add
xchg
cld
inc
or
inc
add
scas
inc
add
inc
mov
pop
mov
cmpl
inc
add
xor
inc
out
shlb
push
or
scas
mov
pop
sahf
dec
pop
pop
add
push
lret
xchg
and
pop
cmp
push
xchg
and
in
xchg
loop
add
inc
xorl
add
cmp
cltd
xchg
fcomp
sub
sub
pop
or
mov
ret
cmp
out
or
fidivl
popf
aas
dec
ds
pop
or
inc
add
scas
inc
add
inc
push
and
mov
out
push
xor
add
and
or
push
push
or
pop
jb
push
mov
push
sub
test
adc
out
add
sub
push
push
xor
sbb
pop
inc
add
mov
popf
and
cmpsl
inc
mov
add
mov
add
mov
aad
into
roll
push
test
sbb
lahf
mov
mov
nop
cmp
mov
dec
enter
mov
test
or
ljmp
add
pop
mov
sti
bswap
addl
inc
sbb
push
adc
or
mov
push
pusha
out
and
pop
jmp
add
pop
fdivl
jbe
imul
dec
adc
inc
lds
push
out
inc
dec
push
add
in
adc
pusha
in
push
adc
movl
in
out
sbb
mov
and
ljmp
cs
in
mov
lods
mov
push
mov
xchg
out
das
shl
in
enter
jecxz
mov
cs
insl
call
jno
outsl
or
inc
mov
fadd
push
adc
adc
test
xlat
stc
test
pusha
out
or
inc
add
inc
add
pop
repnz
inc
add
inc
add
pop
enter
inc
add
inc
add
push
repnz
inc
add
inc
add
adc
inc
add
ljmp
movsb
ljmp
dec
cmpsb
pusha
or
mov
pop
sbb
sub
inc
add
loopne
add
inc
jae
les
lock
out
lock
jge
enter
icebp
leave
xorps
addb
xchg
repnz
gs
pop
sbb
cvtps2pd
orl
lods
flds
sbb
in
hlt
pop
mov
inc
or
xor
or
mov
cmp
idivb
imul
mov
jb
and
mov
push
enter
mov
ljmp
pop
xchg
in
shll
and
je
das
leave
push
pop
mov
pop
cmp
les
out
push
and
sub
sbb
and
clc
and
inc
stos
mov
sub
aam
adc
pusha
mov
stos
inc
mov
xchg
add
add
pop
xchg
add
aam
push
imul
out
jbe
leave
jl
push
inc
add
or
pop
sub
clc
inc
add
sub
adc
xchg
out
xor
out
xorb
jbe
inc
add
add
ficompl
add
out
push
push
mov
push
dec
insb
les
out
pop
push
adc
or
jnp
clc
addl
out
rclb
lock
inc
orl
adc
and
nop
add
jmp
inc
add
adc
push
in
add
or
add
add
jl
enter
sete
dec
jge
mov
movsb
mov
leave
jl
add
mov
inc
mov
dec
or
cmpsl
sbb
in
test
rcl
or
push
jg
and
and
or
popf
sarb
pop
mov
add
or
or
out
or
inc
pop
insl
xor
mov
add
out
add
ljmp
adc
lock
inc
add
mov
sub
cwtl
adc
enter
test
inc
add
inc
adcb
add
ss
or
push
xor
shrb
call
out
cmp
cmp
nop
adc
push
sub
test
out
fs
push
cmp
push
fs
pusha
mov
and
sbb
dec
pop
cli
out
mov
lea
das
inc
test
mov
push
pop
xchg
push
inc
cmp
or
xor
sub
sbb
jb
jb
subl
jns
cli
push
subb
xor
ds
or
inc
add
or
jo
mov
or
pop
xor
xor
inc
add
sub
adc
out
add
call
inc
add
add
and
inc
add
scas
inc
int3
in
inc
add
test
stc
call
and
cs
pop
push
push
xchg
outsl
aam
sbbl
add
lds
push
or
sbb
stc
aam
inc
add
or
dec
in
push
arpl
movsl
inc
movsl
or
xor
ja
cld
fsubl
ss
push
mov
out
push
sar
lods
jecxz
dec
cmp
movsb
xchg
cmpsb
sbb
femms
add
mov
mov
fists
or
or
sub
inc
add
stos
inc
add
leave
pop
pushf
adc
in
inc
and
nop
sti
inc
add
inc
sbb
xchg
push
aaa
enter
dec
inc
incl
lock
sbb
add
insb
stos
jmp
enter
add
nop
xchg
orl
add
sbb
or
inc
or
enter
fldenv
sbbl
pop
mov
inc
push
sbb
mov
enter
movsb
xchg
xchg
shrb
pop
mov
xchg
inc
pop
lea
xchg
push
pop
push
ret
sub
in
std
sub
inc
leave
inc
or
rolb
lods
or
movsl
xor
out
dec
add
push
and
cwtl
inc
add
es
add
xorl
inc
xchg
sub
pusha
and
xchg
inc
add
mov
and
ja
mov
jp
or
sbb
je
inc
add
inc
mov
sbb
clts
sub
and
lods
push
adc
xchg
test
mov
out
ja
in
mov
out
movsl
adcl
lcall
lahf
inc
add
xor
adc
add
inc
jb
leave
pushf
jne
mov
adc
aas
sbb
out
mov
inc
add
sbb
das
sub
insl
push
fisubl
mov
push
add
mov
pop
mov
mov
mov
shll
dec
mov
or
stos
int
aaa
std
mov
addl
lret
lds
adc
lods
mov
out
push
adc
pop
leave
daa
clc
mov
vmwrite
imul
mov
cmp
adc
popa
and
popw
adc
mov
mov
ss
clc
inc
pop
sbb
or
lcall
aas
adc
mov
lahf
add
cli
inc
sar
inc
add
inc
sbb
data16
push
dec
pop
or
dec
add
gs
das
push
je
ss
inc
add
rclb
int3
push
xchg
or
lods
stos
mov
lea
push
xor
mov
fstpt
adc
nop
outsl
pop
push
pusha
sbb
sbb
movsl
sub
outsl
cld
and
add
inc
add
add
test
push
repnz
or
movsb
inc
push
and
add
or
rcll
loopne
pop
push
sbb
pop
fadds
repnz
inc
cltd
dec
sahf
nop
inc
rcl
jmp
cmpsb
adc
add
into
or
pop
adc
rcll
pop
sub
adc
inc
or
js
nop
ss
xor
rep
lods
mov
cld
es
or
mov
faddl
xor
fdivrl
or
iret
cmp
inc
in
mov
inc
movsb
mov
data16
mov
xchg
nop
push
inc
les
push
mov
cwtl
push
pop
mov
dec
xor
shrb
daa
in
or
inc
add
or
and
jo
inc
add
cmp
stos
inc
add
cmp
in
inc
add
or
jo
inc
add
fs
inc
or
out
mov
push
pop
rorl
inc
out
inc
fimuls
cvttps2pi
lcall
push
jb
nop
jmp
pand
std
pop
repnz
mov
icebp
lcall
adc
or
enter
movsb
jmp
ret
insl
cmp
adc
scas
adcb
push
and
xor
stos
mov
inc
pop
mov
xor
rcrl
je
roll
ds
xor
aaa
pusha
push
xor
lock
mov
or
mov
or
mov
insl
outsb
in
mov
and
sbb
mov
mov
outsl
popa
mov
cltd
xchg
add
outsl
push
cmp
or
push
pop
add
sbb
mov
xchg
outsl
mov
dec
in
inc
push
ficoml
add
pop
lea
add
add
outsb
shrl
adcb
inc
add
mulb
jb
xor
lds
push
arpl
jns
pusha
filds
call
inc
sub
decl
mov
movsb
sbb
pop
ficoml
xor
outsl
test
aam
ficoml
shlb
outsl
inc
xchg
and
adc
adc
or
inc
cmp
push
movb
into
lret
dec
xor
mov
push
dec
es
push
flds
jns
outsl
lock
inc
jns
inc
movsb
nop
add
lcall
and
add
mov
add
faddl
inc
pushf
adc
xchg
daa
iret
xorb
xchg
xchg
xchg
xchg
sub
leave
fsts
add
sub
in
and
push
lds
mov
mov
push
or
inc
mov
and
add
dec
or
rorb
add
mov
inc
add
inc
add
adc
inc
adc
add
push
dec
mov
das
bound
mov
enter
adc
push
pop
push
mov
cmpsb
mov
enter
insl
movsb
sub
outsl
sbb
leave
adc
add
daa
push
outsb
cmpl
inc
adc
inc
push
and
sub
dec
cmc
inc
add
jnp
mov
xlat
or
push
ss
push
test
test
xchg
xor
pop
or
mov
subb
stc
inc
js
inc
add
int
fcmovb
aaa
push
pop
pop
jo
or
addr16
movsb
or
nop
push
repnz
test
ror
lcall
call
inc
data16
roll
outsl
xchg
add
push
cmp
xor
inc
add
jecxz
cld
jo
inc
add
lcall
pop
sbb
pop
jecxz
in
add
xchg
sbb
mov
sbb
sahf
inc
mov
add
rorl
sbb
add
mov
insl
pop
rolb
push
push
sbb
bound
mov
cld
lods
leave
inc
add
pop
xchg
lahf
pop
or
pusha
xor
push
mov
popa
lret
loop
pop
lret
les
cmp
outsl
inc
inc
mov
fs
push
outsb
jg
sub
add
lods
cmp
lahf
imul
add
int
add
push
movsb
push
dec
xor
xchg
outsl
js
inc
pop
leave
xchg
add
or
sub
sbb
or
push
cmp
pop
shrb
and
ret
jno
popf
jge
dec
pushl
pushf
push
inc
daa
inc
sbb
and
das
movsb
push
sbb
and
mov
lods
xchg
pop
push
mov
inc
iret
inc
add
and
adc
popf
xchg
loopne
ss
sbb
dec
imul
pop
inc
fs
inc
pushf
push
cmp
enter
inc
test
nop
inc
aad
push
dec
pop
push
mov
outsl
les
push
push
mov
sbbb
and
inc
dec
sub
popa
or
in
repnz
push
inc
add
or
in
add
decl
insb
dec
test
mov
outsl
outsl
add
enter
pusha
and
adc
adc
push
inc
stos
insb
dec
fnstenv
outsl
outsl
mov
adc
push
cmp
xchg
cmpl
enter
roll
int
andl
movsl
andb
orl
int3
pop
push
lods
ret
arpl
mov
adc
xchg
and
push
inc
inc
push
mov
icebp
pop
inc
shrb
push
xchg
sub
cmpsb
mov
inc
inc
pop
mov
sbb
and
fs
pop
push
aas
fs
sahf
mov
pop
outsl
fcmove
mov
xor
pop
push
inc
xchg
orl
paddq
and
sbb
cltd
mov
aas
and
test
in
fld
mov
cld
dec
jb
sub
inc
cwtl
fs
mov
dec
pushl
lret
dec
jbe
xor
add
stos
xchg
rolb
inc
pop
enter
insb
and
sub
adc
xchg
adc
dec
push
mov
stos
outsl
jno
repz
pop
outsl
lock
inc
add
pop
sub
enter
insb
and
jae
insl
push
fldcw
sbb
or
push
cmovo
and
pusha
cli
pop
and
pop
loope
inc
adcb
fwait
and
outsl
inc
mov
push
mov
sbb
std
ljmp
pop
dec
mov
fsqrt
movsb
popf
call
push
fs
or
add
cs
lcall
nop
pop
and
cs
cmp
lods
addl
and
or
xor
stc
outsb
cs
jmp
bnd
jmp
dec
ds
jge
jmp
or
add
pop
nop
maxps
add
ret
or
add
jecxz
push
dec
jns
scas
jecxz
push
test
dec
daa
aaa
sub
push
bswap
or
or
mov
mov
mov
or
or
mulb
sbb
add
xchg
jg
std
pushl
nop
jmp
in
std
call
add
call
fimull
std
inc
es
adc
dec
cmp
ret
mov
imul
push
jle
and
ret
add
dec
fldenv
inc
xor
add
outsl
movsl
loopne
mov
shrl
sbb
imul
dec
inc
inc
xchg
jl
mov
push
stc
adc
out
std
call
sub
adc
add
cs
mov
push
xor
lcall
loope
xor
mov
lock
pop
push
pop
insl
push
xor
xor
jl
fists
sub
mov
dec
lahf
mov
xor
rol
adc
cmp
xchg
pop
xchg
fildll
xchg
mov
mov
xor
pushf
sbb
orl
popl
add
outsl
xor
jbe
insb
xlat
clc
cld
xor
aaa
add
leave
inc
popa
sub
push
pusha
add
push
xor
out
cwtl
js
push
push
aaa
push
lret
xchg
cmpsl
fs
scas
gs
scas
sub
cmpsb
fisubrl
pop
in
enter
add
add
leave
std
jmp
js
sti
or
xchg
stc
icebp
lea
cmpsl
in
addr16
mov
push
sub
xor
or
add
or
pop
pop
sub
and
add
rep
incl
incl
adc
xchg
insb
dec
fsubr
shlb
repnz
insb
cld
inc
add
pop
cmp
add
inc
les
subl
iret
cmp
andb
bound
out
jno
aaa
repnz
add
daa
incl
repnz
add
stc
and
lcall
daa
pusha
and
sub
add
ror
push
shl
pop
cld
ss
xchg
aaa
push
push
stos
sbb
cmp
dec
incl
sbb
in
pop
imul
and
clc
call
call
loop
lods
scas
and
mov
outsl
es
clc
movsb
inc
add
or
adc
pop
push
cmp
add
stc
repz
mov
add
shrb
sbb
stos
sub
call
fcompl
sub
jg
sub
jns
inc
push
mov
xchg
loope
call
sub
pop
xor
movsb
pop
jb
mov
lahf
inc
enter
cmp
add
push
nop
and
sar
lcall
pusha
xchg
and
cmp
lods
adc
xchg
and
add
xchg
aas
ds
incl
movsb
sti
int3
adc
dec
dec
jg
std
call
jmp
mov
xchg
jg
movsb
inc
add
and
or
incl
test
xchg
mov
push
roll
cmp
into
cld
mov
push
outsl
xor
inc
repnz
fsubs
mov
outsl
mov
ds
popf
push
std
clc
movsb
inc
add
ret
push
pusha
xchg
and
aad
dec
xor
add
push
push
ljmp
xor
call
pop
inc
or
movsb
lahf
add
lea
and
loope
inc
ret
ss
lret
push
and
jmp
sbb
cld
loopne
push
xor
std
jl
dec
jle
and
jmp
mov
xor
sub
push
mov
in
xchg
incl
ds
repz
pop
loope
sbb
adcl
popa
push
repnz
jmp
and
cld
inc
ds
clc
inc
mov
rcll
sub
sub
add
mov
je
ret
pop
mov
jg
and
adcl
jl
cmp
std
cmpsb
cmp
jbe
mov
inc
adc
add
repnz
sbb
call
cmp
xor
xlat
sbb
std
in
or
push
orl
in
loope
es
mov
pop
addr16
cmc
cs
scas
and
xlat
ds
ljmp
jmp
test
ret
jno
std
call
sbb
xlat
ret
sbb
call
sbb
jl
inc
add
in
push
cmpb
push
push
dec
test
dec
addr16
bound
stc
and
pushl
sbb
call
call
orl
test
push
iret
enter
mov
add
xor
jmp
ss
xchg
stc
in
cmp
call
subb
jns
decb
pop
and
enter
loop
std
jmp
add
add
sbb
lcall
std
fsts
sub
test
push
imull
incl
std
inc
aaa
pmulhuw
inc
add
std
decl
leave
fdivl
inc
add
sub
call
cld
cmp
aaa
in
call
sar
cmpsb
and
xchg
add
add
add
add
jmp
jmp
inc
xchg
cmp
xlat
fs
fmull
repnz
add
add
test
test
dec
mov
push
inc
sti
and
cmovl
std
push
and
nop
push
cmp
jnp
std
call
hlt
pushl
ds
cmp
adc
std
jmp
cmovp
cmp
adc
pushf
or
nop
jmp
adc
test
sbb
sub
jl
scas
cmpsb
sub
ljmp
stc
add
push
add
add
cmpl
lret
daa
iret
inc
push
or
insb
adc
insb
xchg
adc
jo,pt
pop
add
add
cmp
jl
es
lods
xor
out
inc
movsb
adc
stc
stc
add
inc
add
sub
ljmp
repnz
call
andb
dec
cmpl
iret
dec
stc
and
nop
lcall
ljmp
std
pushl
out
add
cmp
in
dec
push
inc
adcb
aas
sub
mov
repz
cmp
daa
and
repnz
adc
jmp
sbb
mov
inc
dec
pushf
jns
out
stc
push
pop
sub
enter
and
and
insl
stc
push
incl
repnz
ds
out
in
repnz
jmp
andb
xchg
xchg
push
repz
call
int3
pop
push
rclb
jge
jns
adc
nop
mov
andb
cmp
adc
std
ljmp
mov
jmp
aaa
sub
dec
xor
leave
pop
stc
add
add
cmc
jmp
adc
call
aas
fcmovne
sbb
mov
push
add
mov
add
repz
dec
add
sbb
add
sbb
or
and
je
xorl
divl
push
shl
or
inc
repnz
adc
add
pop
cmp
daa
std
clc
aas
jge
adc
xor
sbbb
adc
and
xchg
lret
xstore-rng
cmpsl
inc
je,pt
mov
add
sbb
flds
dec
adc
push
push
out
ss
inc
inc
add
stc
adc
jno
inc
add
cs
js
inc
add
stc
icebp
pushf
and
add
cli
inc
aas
jb
enter
jl
push
xchg
xor
add
and
cmpsb
movsb
jae
insl
not
sub
call
mov
mov
test
mov
test
iret
inc
ficoms
shlb
lret
test
shrb
test
scas
jp
adc
xor
out
inc
in
xchg
int
rcl
cmp
lea
dec
jne
xchg
mul
push
std
add
add
add
leave
inc
jle
sldt
int
std
lcall
outsb
push
sarb
call
mov
jmp
std
mov
aam
enter
pop
sldt
testl
and
repnz
cld
push
add
xchg
dec
mov
in
outsb
in
jno
neg
daa
std
incl
nop
jl
pop
std
lcall
add
repnz
jle
push
ss
call
or
nop
pop
daa
std
jmp
std
dec
adcl
inc
mov
add
std
les
bound
lahf
cli
sbb
mov
idiv
shrb
xlat
dec
inc
inc
add
es
call
push
push
and
pusha
sbb
daa
loopne
xlat
xchg
inc
inc
add
or
pop
xchg
add
push
std
incl
in
and
push
cmpl
inc
add
pop
push
addl
insl
dec
sub
les
inc
add
dec
dec
cmp
or
dec
nop
dec
shrl
dec
inc
add
repnz
add
inc
and
call
enter
daa
std
ljmp
xchg
sbb
sbb
cmpsb
xlat
mov
inc
add
insl
dec
xor
xorb
mov
mov
add
adc
jmp
xchg
add
sub
or
mov
xchg
into
enter
test
xlat
push
dec
das
fwait
xchg
outsb
in
cmc
jmp
sub
cmp
adc
mov
pop
mov
dec
dec
inc
xor
pop
and
add
mov
inc
ds
movsb
push
dec
pcmpgtb
pop
fdivp
jl
sbb
and
cmpsb
movsb
repz
push
xlat
mov
in
aad
inc
add
out
mov
and
push
adc
inc
fmul
fcomp
xchg
je
xlat
cmp
xlat
mov
cmp
movsb
sub
mov
shrl
xchg
cmp
cld
inc
and
add
lock
xor
mov
sbb
ret
dec
icebp
pop
outsb
push
shl
dec
stos
xlat
daa
jns
stos
inc
jae
sub
insl
dec
cmp
sarb
cmp
dec
daa
pop
add
cmp
and
xlat
repz
inc
add
cmpb
call
sub
lcall
push
repnz
sub
lcall
int
mov
cld
xchg
inc
cli
dec
adcb
clc
mov
push
out
and
push
add
cmp
inc
dec
and
xchg
dec
hlt
add
dec
aad
pop
ljmp
incl
in
and
dec
inc
add
push
mov
pop
leave
std
lcall
dec
xchg
adc
dec
dec
out
or
mov
push
push
sub
cmp
sub
jp
stc
inc
mov
lods
add
add
test
jmp
push
jno
xlat
pop
adc
insb
add
shrl
xlat
adc
add
cmpsl
xchg
aas
outsl
lahf
sbb
jmp
adc
loopne
enter
push
orl
and
push
stc
push
adc
ja
sub
sbb
mov
bound
rcl
dec
push
inc
add
nop
dec
adc
add
mov
lock
rcll
arpl
cmp
xlat
cli
mov
xchg
frstor
xlat
adc
xchg
movhps
std
call
add
add
insl
inc
sub
push
std
pushl
pop
mov
insl
dec
xor
jnp
and
in
add
stos
sub
ljmp
and
add
add
add
adc
xchg
or
sahf
outsl
push
push
xchg
or
add
push
push
std
incl
push
std
jmp
lahf
ja
in
mov
fstl
cmp
push
lds
loop
and
mov
fwait
inc
pop
xchg
insl
dec
cmp
adc
cmpsl
inc
cld
add
add
cmp
xchg
add
add
popf
call
stc
push
sarb
ficomps
sub
insb
fwait
jmp
pushf
iret
push
outsb
iret
scas
and
adc
sub
add
stc
xchg
jl
int3
sbb
incl
adc
lcall
das
add
add
dec
dec
adcl
pop
sbb
cld
jmp
push
inc
add
in
or
add
icebp
es
call
test
inc
call
push
push
fwait
xchg
inc
daa
pop
inc
repnz
ds
and
inc
and
inc
addb
cld
jmp
push
push
sbb
add
enter
sar
cld
call
and
pusha
mov
jmp
sbb
mov
sub
repnz
adc
nop
dec
ret
add
dec
dec
test
in
stos
pop
stos
jg
jb
jns
stc
and
and
cmc
push
mov
imul
mov
andl
pop
shlb
dec
xchg
jmp
push
mov
leave
pop
pop
and
cld
cmp
cld
decl
xchg
sub
pop
jbe
jnp
and
out
add
jl
pop
push
add
add
imul
loop
std
ljmp
xor
in
inc
pop
lcall
lcall
cltd
andl
bswap
pop
stos
ss
pop
push
or
push
mov
cld
pushl
std
ljmp
cmpsl
and
cltd
pop
out
xchg
in
test
inc
es
dec
jbe
pop
pop
mov
pop
test
pop
test
xchg
pop
mov
enter
js
jmp
mov
pop
aad
and
movsl
out
test
mov
nop
pop
mov
incl
sbb
repnz
lahf
mov
cmp
cmc
cld
adc
and
cld
faddl
pusha
jg
xchg
loope
mov
test
push
and
mov
inc
push
xor
jg
lahf
xchg
pop
out
pop
inc
add
in
cld
lcall
ret
mov
insl
mov
inc
cmc
pop
mov
push
shlb
cld
loopne
cld
pushl
add
jmp
nop
dec
and
decl
lcall
stos
add
and
mov
icebp
and
add
out
or
pop
stos
cli
repnz
dec
dec
ds
leave
loope
decl
stc
inc
sahf
push
decl
popa
inc
add
cmp
clc
aad
dec
sub
sbb
lock
call
jmp
incl
icebp
cld
call
and
decl
call
scas
sbb
call
aas
std
call
dec
leave
out
cld
lcall
add
sub
stc
cmp
push
jno
xchg
pop
test
out
cld
push
arpl
ds
stc
je
decl
and
ljmp
jns
dec
scas
cmp
dec
data16
mov
mull
xor
ja
shll
sbb
loopne
inc
push
cmp
call
xor
mov
test
inc
out
nop
add
decb
jno
testl
notb
cld
cmp
out
cld
pushl
out
cld
fstpt
push
and
jmp
scas
loop
pop
add
nop
adcl
dec
jb
into
sbb
sahf
call
xchg
push
aas
or
pusha
dec
sbb
add
mov
cmp
inc
decl
stc
push
and
cld
jmp
dec
repnz
ljmp
cld
incl
jae
adc
jmp
subl
cld
daa
nop
jl
ds
jp
cld
jmp
and
stc
cmp
cld
jl
cld
jmp
test
add
fdivl
sub
cmpsb
push
cmp
daa
push
lock
pushf
push
in
addr16
dec
xchg
xor
je
pusha
push
scas
dec
adc
push
add
ds
jle
daa
or
inc
add
inc
stc
xchg
jl
sub
inc
add
inc
add
push
aam
mov
cmovb
sub
xor
daa
add
inc
add
push
jg
cltd
xchg
xchg
daa
sub
in
test
es
rolb
bound
push
add
cwtl
push
dec
arpl
add
cmp
out
sub
pop
or
jae
pusha
xchg
sbb
add
ss
sub
xchg
inc
xchg
int3
out
inc
jo
jle
add
adc
xor
xor
jl
push
pop
and
sahf
cmp
aas
push
cld
decl
xchg
dec
xchg
std
cld
decl
and
in
and
into
cli
cld
jmp
add
pop
dec
push
std
pushl
ds
out
inc
add
es
jl
cmpl
call
es
inc
jns
incl
es
lcall
xlat
adc
mov
lcall
cmp
repnz
adc
imul
add
dec
inc
ds
stc
cld
call
add
xchg
mov
add
imul
idiv
cmpsb
out
xchg
inc
xor
xchg
xchg
inc
add
stc
pusha
push
loope
cmpb
insb
inc
add
aas
dec
mov
call
call
flds
call
addl
in
mov
dec
shrl
nop
pop
inc
inc
adc
dec
dec
cmp
adc
lret
xchg
loopne
cmp
in
sbb
call
jmp
and
mov
pop
gs
aam
dec
sbb
sbb
sarb
divb
mov
lahf
nop
xchg
xchg
leave
daa
stc
mov
call
mov
sbb
filds
sbb
jp
xchg
add
cmp
ds
or
call
das
nop
bswap
or
dec
sbb
xchg
dec
negl
add
mov
pop
pop
int3
fdivrp
out
outsb
je,pt
xchg
mov
add
add
add
add
movsb
repnz
mov
jns
dec
jle
movsb
mov
hlt
cld
call
sbb
add
jg
loope
stc
adc
cld
incl
jmp
sahf
ret
lock
xchg
into
ja
jg
jecxz
ds
pushl
inc
cmp
and
cmp
sarl
and
in
lock
jg
jno
add
xchg
setge
add
mov
dec
jle
idiv
push
stc
decl
enter
mov
dec
jg
clc
ljmp
fadds
leave
rcl
dec
xor
pusha
rorl
movsb
jno
xor
lret
int
inc
icebp
shll
lods
cmp
fcompl
jg
push
jle
sub
fucomip
push
inc
incb
fstpt
jmp
cld
lcall
add
push
fbstp
cld
jmp
outsl
and
scas
inc
add
mov
in
mov
decl
sub
aad
decl
add
js
add
add
xchg
add
incl
add
xorb
addr16
push
out
adc
rorb
leave
pop
in
inc
add
add
test
lcall
xlat
jae
fucomp
xchg
out
inc
dec
sub
dec
cmp
jnp
je
call
and
cmp
mov
adc
push
xchg
xchg
dec
movsb
iret
xchg
stc
adc
call
dec
or
push
subb
imul
ds
cmpb
fldenv
push
or
cmpsb
sbb
pushl
repnz
in
lock
sub
xchg
je
xchg
push
inc
repnz
incl
mov
in
dec
add
pop
repnz
scas
dec
add
in
std
in
repz
test
push
push
cmp
mov
xchg
ds
cld
iret
push
movsb
movsb
jb
fld
pop
repnz
jle
cli
cld
inc
xchg
dec
and
call
sahf
ja
add
sub
and
add
inc
add
inc
ds
loopne
call
push
xchg
sub
dec
mov
outsl
in
cmp
add
stc
push
inc
dec
movl
jl
hlt
xlat
cld
incl
decl
xchg
pushl
inc
add
and
jecxz
sub
mov
nop
cmpsl
jae
add
xlat
cld
pushl
js
rcr
inc
popa
std
push
shrb
mov
stos
sub
xor
add
nop
cld
and
add
lea
adc
add
in
cmpsl
nop
add
lcall
std
incl
leave
das
mov
sti
incl
mov
std
or
std
decl
and
into
sbb
xor
push
xchg
movl
movl
mov
call
in
shlb
mov
sbb
ja
es
test
cmc
adcl
outsb
pusha
pop
icebp
scas
shrb
loope
mov
mov
add
jle
out
andl
nop
mov
insb
mov
cld
sbb
jnp
gs
xchg
inc
push
dec
adc
cmpsl
jnp
push
iret
repz
loope
shl
popa
mov
dec
data16
rcr
add
cmpsl
test
push
inc
dec
sub
cs
inc
and
add
sar
jmp
jl
add
sar
call
call
in
stos
lock
add
test
jmp
and
dec
idiv
decl
stc
add
or
sldt
cmpsb
xchg
pslld
add
add
jns,pn
xacquire
add
cmc
lea
pop
stc
test
iret
push
add
cmc
decl
push
xchg
dec
enter
jge
add
add
repnz
adc
mov
pushf
ljmp
push
movsb
push
jle
add
xor
dec
enter
and
popf
xchg
xchg
dec
shrl
push
movsl
hlt
incl
leave
vmwrite
hlt
jmp
push
std
push
lcall
add
rcl
sbb
iret
sarl
sbb
and
xor
cmpsl
add
jno
xlat
pusha
icebp
sub
aas
xchg
push
mov
in
fcmovne
cpuid
mov
or
add
or
push
jns
lcall
call
add
sub
mov
repz
decl
sbb
adc
enter
gs
mov
in
pushl
inc
push
addb
incl
or
add
jmp
or
rclb
int
jecxz
xor
iret
and
push
movsb
movsb
push
out
stc
and
lret
cld
call
sbb
sbb
cmc
inc
xchg
cmp
fidivrl
sbb
lret
loop
fldcw
or
mov
hlt
repnz
mov
inc
mov
inc
add
outsl
sub
push
inc
inc
dec
jle
repnz
push
lcall
mov
in
lcall
dec
adc
add
xor
and
pop
decl
bnd
xrelease
pushl
aam
jge
repnz
add
mov
inc
dec
mov
sbb
and
jns
sub
inc
fdivr
dec
cmp
push
xchg
sbb
mov
dec
js
popf
cmp
in
dec
nop
andl
subl
rol
pushf
jmp
repnz
cmp
add
sub
pusha
sub
pop
adc
call
test
aas
sldt
or
sbb
ret
add
int
mov
pop
push
movsb
and
test
and
out
jge
add
and
nop
mov
test
loopne
cld
idiv
inc
push
xlat
adcl
test
sbb
enter
bnd
ds
mov
adc
nop
dec
push
sbb
jns
adc
lret
jmp
push
xchg
test
dec
loopw
outsb
js
or
test
int3
pop
ficompl
xchg
shll
pop
xchg
or
lcall
mov
push
imul
ss
movsb
movsb
repnz
cmpsb
dec
jle
idiv
lcall
sbb
jl
cmp
stc
enter
mov
or
or
nop
xchg
iret
mov
scas
out
add
jns
cltd
xchg
rcr
in
enter
roll
call
out
addr16
cmpsl
or
rcrb
scas
popf
test
dec
mov
movsb
mov
mov
add
dec
push
fcoms
repz
and
dec
jnp
or
shlb
cmp
cld
decl
rorl
or
pop
push
daa
or
rcll
mov
dec
icebp
add
and
xor
ja
add
xor
test
jge
arpl
xorb
add
in
repz
fidivrl
xorb
int3
add
sbbl
ljmp
movsb
movsb
repnz
xchg
pop
push
leave
cmc
lcall
adc
cmc
in
fdivr
pushl
or
aas
pop
pop
sbb
dec
dec
out
test
rep
ljmp
aam
sbb
fsubr
pop
dec
dec
dec
sub
shrl
pop
inc
jns
cmp
scas
pop
mov
sbb
push
xchg
sbb
or
repnz
inc
in
jmp
in
repnz
add
push
in
fidivrl
push
call
sbb
gs
xor
rorl
or
addr16
repnz
pop
jmp
dec
pop
inc
xor
add
cwtl
inc
xor
adc
dec
andb
insb
xor
jne
test
es
psubw
mov
repnz
dec
enter
add
add
cld
dec
seto
add
add
loopne
sbb
loop
mov
mov
pushf
pop
push
call
inc
dec
fcomp
adc
pusha
mov
pop
int
icebp
mov
mov
dec
in
jo
mov
out
xchg
cwtl
inc
addr16
push
xor
add
imul
pop
xchg
and
push
mov
rorb
xchg
cmpsl
xor
addr16
xchg
sub
jl
stos
mov
addr16
loope
incl
xor
out
jp
jns
and
sub
in
test
xcrypt-ofb
cmpsl
lods
fisttps
f2xm1
in
adc
leave
in
add
xchg
int3
out
jge
lock
into
inc
jle
mov
out
incl
dec
and
outsb
sar
lcall
loop
icebp
mov
mov
push
xchg
stc
dec
int
inc
push
adc
and
jl
int3
mov
jle
mov
jns
add
pop
or
shl
shlb
lods
inc
std
adc
iret
loope
rorl
jl
add
mov
and
and
or
ljmp
lea
mov
clc
push
add
push
sub
dec
repz
dec
sbb
push
mov
lods
mov
add
jmp
inc
sbb
cmp
mov
and
push
lret
enter
add
mov
xor
sti
ss
mov
imul
fcmovnb
cmpsb
repnz
sub
dec
pushl
dec
mov
add
lret
sbb
xor
sub
in
testb
in
std
cmp
rol
pushf
pop
inc
push
adc
lret
inc
push
inc
push
sub
or
cli
jle
xchg
pop
sub
int3
fimull
and
adc
inc
add
int
loop
cltd
adc
iret
dec
in
out
jmp
lcall
popf
cld
test
pop
push
fdivrp
call
cmp
inc
sbb
and
pushl
adc
lret
mov
inc
add
xchg
jl
jb
add
jl
xchg
xlat
sub
pop
cmp
xor
mov
add
mov
inc
and
repnz
loope
push
loopne
jmp
aas
stc
rep
or
mov
dec
das
in
pop
loope
decl
push
or
add
inc
add
lcall
cwtl
test
pop
mov
popf
arpl
ds
cld
test
pop
int3
loopne
jmp
jnp
xchg
lret
ljmp
in
shlb
in
sbb
les
pop
sbbb
paddsb
push
push
lock
xchg
pop
dec
loopne
ljmp
aas
mov
cld
pushl
ret
jb
push
xor
push
xchg
pop
push
lret
xor
mov
mov
mov
fimull
inc
cmp
lock
daa
call
insl
insb
xchg
and
dec
rclb
repz
add
loopne
loop
xchg
xchg
cmp
rolb
dec
imul
loop
xchg
pop
pop
pop
cmp
push
push
jo
mov
das
sbb
xor
int
addr16
les
fadds
dec
in
fildl
cmpxchg
in
clc
nop
loope
inc
pop
psubb
adc
imul
cmpl
mov
fdivrl
fsubl
cs
call
out
nop
jbe
lea
call
cltd
rorb
lods
sbbb
daa
jno
aas
or
iret
add
adc
jecxz
inc
and
xchg
repnz
push
push
idiv
decl
xchg
pmaxsw
incl
fistps
sub
cld
jb
addb
and
xor
lds
jecxz
movl
rol
pop
sub
pop
jne
adc
adc
xlat
add
dec
notl
sti
mov
inc
pop
test
add
mov
and
add
repnz
pop
add
add
jmp
pop
add
push
int
call
mov
add
sub
add
inc
incl
mov
in
add
std
pushl
das
xchg
mov
xor
mov
arpl
xchg
pop
inc
jle
jl
and
add
dec
push
push
bound
scas
lcall
and
ret
push
mov
xchg
cmc
sbb
mov
pop
lcall
jge
divl
pop
and
sti
and
sbb
push
lret
cld
push
ret
dec
xchg
arpl
orl
add
shll
lcall
nop
add
pop
add
push
lahf
add
sub
mov
data16
aam
dec
cmp
and
imull
cld
ljmp
mov
xchg
loopne
jmp
and
xchg
mov
add
jbe
add
repnz
add
add
xor
dec
icebp
lods
inc
call
xchg
sub
cli
sub
test
push
jl
adc
add
mov
and
mov
mov
ds
sub
pop
sahf
inc
add
adc
sub
cli
add
add
jl
jl
cld
ljmp
add
in
repnz
lcall
repz
sarb
dec
mov
xchg
push
adc
inc
roll
add
nop
bound
cmp
mov
adc
call
insl
in
aaa
add
push
xor
sub
xor
jl
inc
dec
not
xchg
inc
add
add
xchg
mov
inc
add
xor
test
or
scas
xor
mov
aas
out
repnz
dec
idivl
cld
inc
add
add
in
jo
inc
add
clc
jmp
jno
jbe
sub
rclb
push
lcall
imul
test
lds
add
push
clc
jmp
or
cs
daa
daa
xorl
int
adc
idivl
cwtl
lahf
inc
add
cld
nop
das
neg
std
jmp
aaa
mulb
mov
or
dec
mov
sbb
mov
sub
cmpsl
sbb
roll
enter
xchg
and
push
ds
das
test
inc
sbb
add
idiv
pushl
fwait
inc
sbb
cmpsb
in
dec
mov
mov
icebp
in
xor
push
ljmp
inc
pop
lods
or
arpl
sbb
add
stc
adc
add
cmc
jmp
and
push
leave
pushl
incl
repnz
mov
push
enter
mov
pop
enter
inc
adc
add
mov
xchg
add
fsubrs
pop
sbb
jle
stos
out
decl
in
and
repnz
incl
enter
icebp
lcall
stc
aad
pushl
daa
nop
pop
ja
inc
add
jmp
call
cmp
jbe
mov
and
jle
mov
shlb
or
adc
pop
push
std
incl
and
incl
jle
pcmpeqb
incl
test
jp
and
and
and
incl
adc
add
hlt
decl
dec
sbb
test
inc
fisubs
inc
aas
lcall
push
ljmp
test
in
xor
jle
xchg
sub
cmpsb
inc
add
and
inc
push
repz
fsubr
xchg
push
sahf
pushf
push
cmp
mov
ljmp
cmp
jle
pushl
cmpsb
and
sahf
dec
push
push
push
adc
mov
enter
dec
mov
or
stc
stos
cld
ljmp
cmpsl
inc
add
mov
jmp
icebp
inc
xchg
pushl
loop
push
stc
cld
or
call
add
mov
pop
cmpsl
inc
add
lock
incl
lock
incl
pusha
adc
nop
inc
aam
pop
adcl
adc
in
xchg
add
int3
mov
inc
pop
scas
stc
ljmp
dec
cmp
sub
rcrl
jmp
or
sub
test
push
icebp
dec
shrl
cld
pop
test
and
jbe
cs
outsb
pop
pop
adc
cmp
sub
xchg
in
sub
adc
inc
enter
ds
incl
faddl
ljmp
cmp
push
inc
sub
mov
loopne
shll
sbb
cld
inc
in
jg
add
in
jl
cltd
loopne
mov
push
add
in
and
xchg
sub
cmp
pop
and
stc
add
jg
cmp
xchg
pop
mov
sti
fildl
and
and
sub
xchg
add
sub
sub
cmp
or
pop
lret
inc
not
call
flds
pusha
mov
or
inc
xor
cmpl
aam
and
lcall
inc
jle
std
incl
cmpl
loopne
push
pop
das
stc
cmp
incl
in
incl
icebp
inc
jle
ljmp
vpsubb
jb
lods
mov
dec
mov
incl
and
decl
repnz
decl
stc
and
jmp
in
repnz
call
lods
inc
add
loop
pop
je
movsl
pop
and
dec
xchg
push
loope
out
lods
xchg
lahf
mov
and
push
lods
push
enter
sub
dec
add
outsl
fwait
es
pop
inc
pusha
call
and
cmp
cld
inc
jbe,pt
jnp
lcall
add
repnz
xchg
sar
aaa
jnp
and
cmp
or
cmp
inc
pcmpeqd
rdmsr
cmp
andb
lahf
mov
lods
scas
in
les
mov
add
fildl
dec
enter
cli
lcall
jmp
push
mov
in
sub
sbb
inc
repnz
pop
xor
lcall
int
xchg
sub
mov
pop
loopne
fs
push
and
push
or
orl
stc
adc
fsin
incl
jns
xchg
fs
cli
rcrb
jae
fldt
test
mov
lahf
inc
jle
xchg
pop
js
decl
jp
cmp
sub
mov
lcall
hlt
test
pop
dec
mov
xor
add
bnd
and
aad
aam
or
dec
enter
lods
adcl
cs
cltd
inc
add
fldl
loopne
push
xchg
ss
push
cmp
loopne
mov
pop
enter
out
mov
clc
xchg
lret
jp
cltd
testl
or
add
and
sub
cmc
mov
push
adc
sbbl
mov
insl
rclb
nop
in
inc
iret
lea
pop
mov
clc
data16
es
shrb
adc
cmp
test
xlat
mov
pushf
mov
pop
out
cld
dec
jle
pop
mov
mov
out
pushl
mov
pop
enter
mov
sub
push
dec
shll
xchg
sahf
out
inc
xor
cmpsl
mov
lret
cmp
pop
sahf
clc
xor
stc
sub
cli
lret
repz
sbb
adc
dec
cmpsb
cltd
cmp
inc
pop
jne
and
jp
jg
leave
icebp
sub
fnstcw
sbb
lcall
dec
jnp
sub
xchg
push
ss
lcall
mov
jl
dec
pop
cmp
add
shld
push
xchg
ss
push
mov
sbb
xchg
sub
cmp
pop
jns
dec
cmp
lods
adc
xchg
lahf
xchg
data16
sarb
mov
xor
sar
jns
push
sub
bnd
jmp
pop
sub
mov
outsl
test
cmp
popa
inc
pusha
xor
and
xchg
clc
fisttps
mov
xor
add
push
mov
test
push
push
cmpsb
pop
jecxz
rcr
or
leave
mov
push
ret
xchg
pop
enter
dec
xchg
xchg
in
sbb
stc
and
inc
fbstp
aaa
test
jge
call
xor
enter
lock
or
xchg
jge
jae
in
or
cmp
push
sbb
leave
mov
ds
mov
push
dec
mov
cmpl
add
pop
loopne
decl
int3
rolb
dec
loopne
les
xchg
cmp
mov
sbbl
mov
mov
mov
adc
push
mov
inc
jp
pop
cmpsb
pop
push
es
xchg
arpl
jns
das
adcl
rcll
and
mov
mov
xchg
jno
dec
cs
mov
sub
xor
or
in
inc
add
mov
jae
mov
mov
shrl
lea
dec
das
leave
fisubs
push
xchg
jns
mov
in
test
mov
mov
stc
and
cmp
pushl
add
add
fdivrp
pushl
sub
cs
push
sub
inc
xchg
das
lahf
mov
add
mov
cld
jmp
jmp
mov
add
lcall
lds
mov
stos
dec
mov
das
enter
xor
cld
pushl
xlat
adc
stc
aaa
add
jb
push
dec
fisttpl
enter
push
shl
jns
test
es
mov
decl
mov
add
repnz
add
inc
lcall
add
adc
inc
mov
enter
pop
adcl
pop
mov
mov
xchg
shlb
out
mov
pop
sbb
adc
and
push
jns
js
mov
inc
xchg
add
add
jno
decl
cld
jmp
nop
dec
dec
jle
xchg
inc
xlat
jno
cld
add
repz
mov
ret
repnz
nop
cmpsl
ret
sub
decl
nop
decl
jo
dec
dec
mov
outsl
lcall
cmp
jmp
pop
add
mov
cld
xchg
jl
lcall
pop
enter
lcall
ds
cld
adc
cld
cld
stc
add
inc
add
add
incl
add
cmp
stc
and
jo
sbb
cmp
outsb
jg
rorl
cld
dec
jo
jmp
stc
and
test
aas
stc
cmp
lcall
rolb
or
cld
add
inc
add
jmp
in
shrl
fbstp
incl
or
jne
cld
lcall
dec
dec
xor
aas
inc
jle
js
les
adcl
rolb
inc
mov
and
sub
inc
add
or
daa
sbb
decl
mov
jb
pop
leave
add
push
xchg
and
hlt
pop
dec
lcall
mov
cld
incl
stc
add
inc
add
sbb
add
and
pop
jge
pop
fisttpl
or
lods
sbbb
imul
pop
inc
push
ret
arpl
push
add
add
ds
pusha
movsb
and
je
daa
addl
fiadds
pop
adc
or
adc
daa
mov
loopne
je
ret
mov
fsubrp
imul
daa
testl
fs
sbb
dec
daa
subb
cld
nop
dec
and
fiadds
incl
lock
add
dec
pop
mov
push
shlb
mov
incl
stc
and
push
push
decl
stos
cld
call
mov
pop
push
adc
or
push
jno
in
cmp
daa
and
inc
jle
mov
lcall
push
repnz
lcall
imul
add
push
push
push
or
xor
les
incl
addr16
fildll
push
out
bnd
pushl
mov
or
inc
xor
and
sbb
inc
add
dec
and
inc
add
test
cmp
add
lods
mov
movsb
and
inc
imul
in
ret
inc
xchg
movsb
repz
adc
add
and
add
aam
cld
inc
cmpl
movsb
pop
mov
dec
enter
cmc
mov
jmp
mov
mov
cld
je
cmovo
test
pusha
xchg
inc
add
add
jl
movsb
add
add
nop
lcall
mov
test
cld
dec
ds
lret
mov
incl
cld
dec
daa
stc
cmpb
jmp
cmc
lcall
and
mov
add
add
test
stc
inc
repnz
call
cld
jmp
leave
cmpsl
sub
arpl
incl
popa
jmp
incl
jmp
call
push
and
insb
icebp
iret
push
dec
push
pusha
inc
adc
jle
jle
lret
inc
add
ljmp
mov
stc
call
das
pop
xchg
sub
push
sahf
jge
push
xor
jmp
sub
pop
scas
xchg
and
xlat
js
add
inc
enter
incl
mov
inc
add
into
xlat
pslld
pop
jmp
cld
pushl
lcall
lret
push
adcb
dec
xchg
enter
sub
insb
lahf
iret
xchg
lahf
jo,pn
add
mov
rclb
lcall
nop
sbb
or
jbe
cmp
push
push
xor
mov
inc
push
call
outsb
mov
push
insb
ret
call
in
ss
inc
dec
xchg
adc
mov
adc
inc
mov
dec
ds
cld
ljmp
cld
call
xchg
cld
call
std
add
add
and
add
add
add
and
into
sbb
add
ss
in
and
call
mov
cld
and
fbstp
mov
nop
jo
sar
mov
into
add
leave
repz
iret
sar
call
add
or
sub
mov
out
rcl
lock
add
das
rorb
and
add
pusha
fistpll
cld
jmp
or
dec
sub
sub
inc
fistpll
data16
stc
add
and
iret
sar
jge
cld
dec
int
or
jle
mov
mov
mov
xor
fbld
sub
add
sbb
loopne
pop
adc
das
std
push
leave
loope
xchg
ud2
cmp
or
ss
mov
xchg
and
pushl
dec
lds
out
mov
inc
xchg
pop
mov
or
jle
cmovo
das
dec
fs
push
mov
xchg
scas
loopne
or
adc
sarb
sbb
adc
int
cmp
dec
cltd
push
cltd
test
add
in
cmc
into
push
inc
push
pusha
fistpll
add
xchg
lods
mov
test
push
jge
xchg
syscall
fisttps
inc
add
add
lret
inc
inc
pop
test
pop
sbb
lcall
mov
jns
and
inc
in
pop
xchg
add
and
mov
aad
add
or
push
data16
or
inc
or
mov
push
mov
and
cmpsb
mov
lcall
cmp
mov
inc
add
fiadds
dec
xor
jge
add
subl
mov
add
leave
repz
outsb
mov
xor
sbb
dec
mov
mov
in
jg
aad
mov
test
dec
out
mov
aas
jns
aas
or
mov
inc
add
sti
mov
pushl
cmpl
fs
rorb
xchg
mov
pop
repnz
iret
or
out
imul
push
or
add
rcl
dec
adc
adc
fcoml
negb
cmp
sub
or
push
pushf
test
test
lds
mov
mov
andl
cs
push
daa
insb
fmuls
or
inc
fildll
leave
cld
ljmp
movsb
std
lcall
xchg
cld
call
cmpsb
and
sarb
pusha
fists
add
and
scas
std
pop
cmpb
add
add
push
add
leave
das
nop
add
scas
std
sbb
cld
nop
pushl
cltd
push
inc
andl
test
in
inc
add
add
nop
add
add
add
js
xchg
xor
hlt
decl
mov
cmp
jmp
fnstenv
add
stc
pop
ss
fwait
mov
lods
ret
push
call
push
loopne
push
add
loopne
adc
push
out
std
push
pushf
or
sbb
sbbl
add
pop
leave
nop
add
mov
inc
push
and
or
mov
push
inc
inc
dec
lahf
int
pusha
push
out
nop
jnp
jne
mov
hlt
in
enter
adc
push
call
loope
cmp
fisttps
clc
data16
push
stc
pusha
out
scas
addl
pop
pop
mov
stos
aam
inc
dec
dec
call
cmp
shrl
add
stos
aaa
fldenv
sub
push
ds
frstor
pop
inc
push
call
dec
sub
call
push
xor
and
push
call
cld
loop
das
mov
xchg
cld
pop
enter
add
add
add
repnz
add
nop
aas
aas
in
std
jmp
mov
fs
xor
scas
xchg
cmp
ret
das
ret
icebp
decl
dec
in
pusha
repz
mov
jg
daa
cmp
add
jle
inc
std
call
nop
cld
jmp
aas
in
xor
inc
add
lock
nop
pop
jno
das
lock
test
jmp
inc
lret
call
test
je
jae
inc
pop
jbe
xchg
sub
int3
dec
das
fstps
mov
mov
dec
and
sbb
das
xor
and
loop
idiv
decl
add
add
js
in
scas
push
inc
das
pmaxub
pop
cmpsb
int
pop
push
jns
out
mov
incl
xchg
jmp
jnp
iret
and
mov
and
sahf
popa
xor
jl
jbe
sbb
das
cmpb
mov
xchg
add
pop
movb
adc
inc
rolb
xchg
les
xchg
daa
mov
push
jmp
decl
mov
imul
ror
cwtl
in
pop
je
pop
rcr
repz
push
hlt
cld
enter
lock
icebp
mov
xchg
lret
call
lock
repz
pop
repnz
stc
pop
clc
pause
or
xchg
pop
add
sbb
movsb
das
cmpsb
insl
fnstenv
push
inc
sbb
lret
jge
adc
push
add
loop
inc
push
stc
push
add
xchg
add
inc
jecxz
jle
repnz
add
or
push
in
add
or
pop
in
add
add
push
add
out
add
add
gs
inc
inc
adc
push
adc
push
xor
sub
cs
unpcklps
cs
xchg
and
pusha
in
add
sbb
in
sbb
das
pop
in
inc
add
jmp
and
lock
inc
add
inc
jge
je,pn
das
jp
cmp
xchg
xchg
lret
add
mov
jo
xchg
pop
sub
inc
add
cltd
inc
add
jno
xchg
push
das
test
cmp
mov
orb
das
or
pop
inc
out
push
pop
mov
imul
pop
arpl
push
xchg
mov
push
scas
sub
or
xor
int
loope
popa
call
mov
adcl
ret
nop
das
enter
add
push
mov
fiaddl
xchg
adc
push
rol
popa
pop
push
inc
rolb
push
addl
cmp
pop
fisubrl
and
sub
jb
mov
adc
pop
pop
repz
and
sbb
mov
or
mov
pop
lock
inc
add
sbb
jns
pop
adc
adc
rcrb
dec
add
cmp
lock
inc
add
stos
or
or
dec
push
jns
sub
xchg
nop
adc
dec
inc
mov
cli
in
mov
imul
mov
pop
jnp
and
in
loop
and
test
sbbl
xor
fistpll
in
cmp
push
mov
ljmp
pop
andl
push
arpl
inc
xor
inc
loope
in
adc
push
push
sbb
inc
andl
or
mov
jae
ljmp
movsb
adc
icebp
xchg
inc
jle
adc
cs
adc
mov
pop
scas
ds
pusha
push
scas
test
sbb
test
ret
adc
add
in
stc
inc
xor
push
adc
xor
mov
movsb
inc
push
mov
xor
push
mov
sub
pop
pop
xchg
sbb
jp
pop
xor
in
xlat
arpl
pop
xor
or
adc
shll
testl
stos
xor
nop
pop
push
scas
or
in
les
fcomip
dec
bound
and
xlat
stc
push
and
push
out
inc
add
cld
call
imul
fsubr
ret
test
sub
mov
push
adc
out
fs
cmp
mov
jne
or
sbb
pmulhuw
inc
add
std
inc
and
iret
jbe
fsubr
je
imul
pusha
xor
mov
inc
add
mov
cmc
pop
cmp
test
imul
mov
sbb
cltd
jl
xchg
push
pusha
sbb
call
xchg
push
out
out
stc
jae
push
pusha
xor
xor
in
add
inc
lock
enter
lock
imul
inc
dec
sub
or
addb
and
push
repnz
dec
test
xlat
shll
mov
repnz
icebp
daa
icebp
nop
push
push
iret
xchg
add
data16
inc
jno
and
repnz
push
fyl2x
pop
les
mov
icebp
hlt
icebp
ret
imul
sbb
cltd
jno
stos
push
repnz
push
fsts
xchg
lods
mov
xor
push
jne
addr16
loopne
add
adc
cmp
xchg
mov
pusha
dec
xlat
iret
mov
cmpsb
dec
repz
xchg
repz
mov
mov
mov
cmp
inc
sub
andps
test
add
imul
or
and
movsb
jae
stc
pop
hlt
inc
add
pop
push
adc
add
xlat
aad
inc
add
xchg
mov
and
bound
and
pop
xlat
sbb
pop
and
in
xlat
mov
inc
add
sub
inc
jns
pushl
cld
jmp
aas
in
outsb
pop
push
in
daa
imul
mov
popa
test
dec
rclb
fs
lods
inc
push
push
xchg
add
add
inc
add
cld
jnp
jmp
ja
incl
cmp
dec
jp
in
loope
sahf
out
and
cltd
stc
xchg
jl
data16
std
imul
cltd
addr16
push
aad
pop
xor
scas
data16
ljmp
jne
jle
pop
daa
not
pusha
dec
xor
sbb
inc
arpl
sbb
xor
push
div
pop
insb
pop
sbb
cmp
xor
stc
wbinvd
movsb
gs
andl
add
inc
add
pushf
or
dec
adc
clc
mov
xchg
pop
xchg
jl
add
add
js
cmp
inc
repnz
fcoms
xlat
sub
es
enter
push
ret
pop
or
outsb
cld
aas
or
adc
inc
lcall
enter
andb
adc
xor
cmp
call
push
in
cmp
stc
fdivrs
xchg
sub
inc
mov
push
cld
jmp
inc
jle
pop
cld
call
jae
inc
mov
jle
jb
push
push
test
push
xchg
rcrl
sbb
imul
mov
and
fisubrs
lahf
movsb
pushf
sbb
in
test
or
fdivrs
or
mov
add
xchg
in
inc
add
loopne
pusha
orl
add
andl
shll
bnd
cld
in
repnz
cmpsb
cld
mov
out
std
jmp
nop
lahf
dec
repnz
push
inc
mov
pusha
xor
xchg
jl
movsl
cld
mov
roll
repnz
std
decl
in
inc
inc
cmp
pop
cmpsl
cmp
pop
int
enter
rcr
call
lock
push
pushf
add
je
mov
cld
inc
add
inc
test
xchg
aad
cld
decl
xchg
jne
fistps
loopne
cmp
stc
pop
xchg
cld
ja
xchg
cld
in
or
jmp
stc
and
sub
sub
arpl
aad
call
ds
xchg
das
sub
sub
cmp
sub
call
test
jae
ret
ret
and
ja
cmp
push
mov
inc
xor
pop
mov
nop
xlat
nop
incb
and
pop
and
cld
call
cwtl
jbe
pusha
xor
sahf
pushf
pop
xor
cmp
jo
sub
test
gs
nop
xadd
adc
call
push
mull
xlat
and
adc
nop
cmp
cmpsl
fdivl
adc
fwait
push
or
out
cmp
and
lahf
jp
inc
mov
inc
push
mov
push
add
cwtl
icebp
stc
mov
mov
xorl
in
pop
cld
or
enter
in
movl
push
in
pushl
movb
movsb
mov
nop
pop
or
inc
add
adc
pushf
adc
xchg
pop
leave
pop
pushf
adc
pushf
adc
dec
ds
add
inc
add
cmpl
inc
add
push
enter
inc
add
add
dec
leave
das
pushf
adc
fmuls
fists
mov
lea
inc
add
and
and
in
adc
mov
jle
aas
sbb
mov
lahf
inc
add
push
repnz
adc
adc
in
enter
clc
adc
add
enter
inc
add
loopne
ret
into
adcb
push
push
paddsw
enter
add
dec
push
or
dec
xchg
pop
sbb
cmp
arpl
xor
and
nop
inc
dec
jg
cmc
and
mov
clc
das
or
jb
nop
inc
loope
or
xchg
orl
or
daa
pop
sbb
pop
or
and
nop
inc
push
xchg
xchg
xchg
pop
test
inc
add
xchg
push
addr16
mov
push
dec
loope
test
inc
out
jl
test
add
push
andl
out
lret
rorb
pop
inc
sub
pop
mov
or
imul
cmp
outsl
sbb
and
lock
inc
add
xor
xchg
adc
dec
repnz
adc
adc
xchg
adc
nop
add
or
scas
inc
adc
lret
fwait
sbb
call
enter
xor
inc
out
jnp
inc
push
in
out
testb
nop
mov
or
in
xor
shl
cltd
inc
rolb
mov
out
sub
inc
push
out
xchg
and
fs
pop
jo
shl
inc
xor
mov
and
add
xchg
mov
add
xchg
push
insb
xor
mov
stc
xor
inc
add
pushf
bswap
adc
adc
andl
inc
inc
out
lods
in
lock
inc
add
pop
cmp
cmp
push
in
push
pop
sbb
xchg
nop
xor
cmp
xchg
mov
mov
sub
inc
pushf
test
pop
mov
xchg
stos
lea
inc
insl
cmp
jne
movsl
jno
xchg
js
aas
push
xchg
sbb
and
add
and
jne
inc
rcrl
xchg
and
inc
push
mov
enter
out
cltd
inc
add
mov
xor
push
jmp
or
out
cltd
xor
add
push
cmpsb
ret
mov
mov
test
fsub
loope
push
mov
pop
xlat
dec
mov
mov
movsl
bound
and
xchg
out
pop
aam
inc
inc
or
xor
orb
adcb
sarl
dec
xchg
out
mov
inc
fs
jne
cmc
xchg
push
aaa
jno
dec
mov
dec
cmpsb
sbb
pushf
dec
sbb
xchg
mov
sbb
fwait
imul
push
xlat
dec
or
je
adc
lds
in
sub
xchg
in
in
shl
sbb
pusha
dec
jp
sbb
adc
adc
dec
jle
pushf
adc
dec
cmp
push
insl
inc
outsl
jle
pusha
out
lahf
inc
add
add
dec
and
sbb
clc
adc
pop
push
jmp
mov
push
mov
xchg
mov
inc
xchg
mov
or
sub
mov
ret
decl
sbb
repnz
inc
ss
push
outsb
inc
xchg
sbb
push
mov
test
inc
pop
push
cld
stc
and
inc
jg
cld
ljmp
pop
repnz
cld
jmp
and
jg
and
leave
adc
push
cld
jl
ljmp
xchg
mov
pop
cld
call
lret
lahf
xchg
int
and
pusha
xor
in
and
fdivr
call
cmp
jmp
and
add
nop
jl
cld
fadd
sub
push
daa
mov
dec
sahf
sub
cld
ljmp
mov
dec
cld
lcall
test
inc
push
mov
pop
dec
filds
add
push
clc
xor
clc
inc
jl
push
cld
incl
cld
incl
jmp
enter
lcall
cld
nop
mov
dec
cld
ljmp
cld
incl
mov
add
push
cmp
and
mov
loopne
xor
add
push
repz
stos
xchg
and
or
push
push
jb
mov
test
js
sbb
mov
inc
pusha
test
adc
outsl
test
ljmp
pusha
aad
lahf
out
popa
mov
in
pop
inc
mov
sbb
inc
test
pop
repnz
pop
inc
sub
xchg
inc
out
mov
rolb
sbb
and
rorb
mov
sub
cmpl
jl
enter
pushf
dec
enter
iret
xor
stc
cmp
cmp
sbb
and
jae
out
pop
loopne
cmc
mov
and
pusha
jecxz
inc
sbbb
mov
inc
lods
and
mov
cmp
mov
xor
fdivs
add
sahf
xchg
iret
xor
adc
push
or
repnz
jns
inc
inc
or
mov
fdivrs
clc
inc
sbb
push
into
rolb
inc
movsl
or
pop
pop
insb
and
dec
jmp
pusha
leave
fisubrs
insl
imull
add
aas
add
xchg
sub
xor
outsb
or
aas
dec
mov
xchg
or
sbb
or
gs
pop
adcl
ss
push
fstpt
in
lods
lods
jmp
push
add
mov
add
push
xlat
push
insl
dec
pop
dec
dec
add
aaa
outsl
or
cmp
push
pop
inc
pop
push
xor
xchg
fdivl
xchg
aas
pop
nop
add
adc
icebp
sti
leave
sbb
and
mov
jnp
mov
fmuls
add
mov
pop
sub
cmp
dec
or
mov
and
xchg
rcrb
mov
sbb
pop
pop
sbb
jb
dec
fsubr
push
ds
sbb
imul
iret
negl
add
sub
sub
inc
mov
pop
sbb
movsb
sub
iret
sbb
adc
into
pop
shlb
in
cmp
inc
nop
je
lret
add
jo
adc
add
xchg
or
popa
dec
imul
push
es
das
bound
sub
push
and
xchg
add
dec
lcall
rorl
sub
inc
add
stc
add
sub
inc
add
inc
add
and
push
icebp
nop
xchg
and
sbb
mov
lds
int3
outsl
pop
sub
movsl
bound
cmpsb
pop
inc
or
popf
andb
adc
inc
add
int
jmp
mov
and
flds
dec
inc
push
leave
fwait
aas
out
into
xor
cmp
inc
add
push
or
push
add
cld
incl
and
pop
in
sbb
cwtl
std
stc
xchg
cld
movups
jne
pushl
insb
std
jmp
repnz
rclb
mov
stos
inc
jmp
and
cmp
iret
dec
ds
mov
xor
incl
stc
add
sahf
and
jmp
incb
cmp
leave
out
inc
cld
jmp
adc
in
sbbl
dec
iret
and
cld
inc
imulb
hlt
call
stos
jo
andb
mov
fdivl
inc
sbb
scas
jge
jg
push
jg
cmp
repz
rcrb
in
lock
and
repz
and
nop
dec
rolb
and
cmp
pop
or
adc
mov
add
pop
jns
fisubrs
jmp
cmp
ds
cld
jmp
lahf
nop
dec
sub
cld
lcall
inc
cld
jmp
jg
push
js
cld
ljmp
add
insl
movsl
std
incl
leave
pop
pop
dec
cld
decl
cld
decl
int
aaa
sbb
xchg
jl
aam
mov
inc
aaa
mov
jmp
testl
fnsave
pop
aam
jmp
sub
push
sbbb
cli
dec
andb
mov
pop
push
mov
inc
add
adc
mov
or
inc
pop
outsb
add
add
nop
pop
and
push
cld
incl
add
push
cld
push
add
add
inc
enter
std
jmp
xchg
jl
fs
cld
call
mov
add
inc
repnz
or
pushl
rcrl
out
dec
mov
fistps
fst
imul
mov
daa
loopne
and
mov
dec
adc
sbb
mov
add
frstor
nop
bswap
std
pushl
jle
jl
jns
js
push
out
repnz
inc
add
push
clc
ljmp
pop
cld
std
cmpsb
lahf
cmp
inc
pop
and
scas
jae
je
cld
stos
add
dec
dec
test
out
std
dec
daa
xchg
pop
add
pushl
inc
add
mov
cld
decl
and
lock
dec
pop
mov
xor
cmp
dec
call
je
sbb
dec
adc
repz
repnz
popl
in
sub
cwtl
cmp
and
arpl
das
in
jl
pop
and
decl
sbb
scas
and
ljmp
inc
adc
cmpsl
nop
add
mov
pushl
pop
push
lcall
push
add
push
fcmovu
rolb
daa
repnz
inc
pop
jno
cld
lcall
add
inc
in
std
lcall
inc
add
mov
daa
call
test
shrb
imul
mov
push
inc
pop
cwtl
mov
inc
add
mov
jns
xor
sub
adc
push
das
fistps
sbb
outsl
jle
mov
or
ss
cmp
pushf
movsb
mov
pushf
inc
inc
xchg
lret
xchg
pop
sub
add
aaa
dec
cmp
test
sub
cs
into
aas
cld
cmp
cmp
lea
push
cwtl
les
xchg
outsl
ss
cld
loopne
push
or
push
adcb
cs
push
add
push
push
add
jno
in
mov
cs
cmp
xor
rolb
xchg
mov
lods
xchg
shlb
inc
orl
and
ss
fbstp
fldt
das
or
and
xor
mov
aam
fwait
xchg
sbb
cmp
pop
inc
cmp
mov
les
mov
mov
xor
push
xor
mov
dec
imul
jno
loope
orl
push
pop
and
cld
push
jo
ljmp
jo
ljmp
jb
mov
enter
ret
or
adc
fnstenv
sub
sbb
jno
adc
jns
popl
icebp
popf
mov
sub
outsb
dec
add
adc
sarb
jmp
lret
inc
dec
adc
xor
hlt
cmpb
add
mov
cmpsl
mov
mov
jns
and
loop
iret
int3
outsb
xor
inc
xor
test
push
add
lahf
arpl
sub
ljmp
es
push
test
xchg
fisttps
xchg
jno
inc
fildll
sbbl
cmp
int3
push
pop
cmp
mov
mov
es
imul
fistpll
out
and
mov
add
push
pop
add
ds
jbe
sbb
and
data16
add
in
dec
or
aaa
push
sbb
ja
in
sub
push
and
stos
fidivl
int
and
pop
push
adc
and
lds
loope
pop
and
or
les
das
cmp
xor
xchg
iret
inc
add
inc
sub
or
fwait
xor
daa
xlat
push
nop
aaa
sub
xor
add
xchg
pusha
pushf
lret
mov
mov
lea
call
out
adc
xchg
pop
repz
jl
sub
or
das
mov
popf
dec
adc
or
ss
pusha
int
adc
out
and
mov
mov
cmovno
test
leave
ja
add
xor
addb
and
push
out
shrl
cmp
mov
adc
outsl
add
pop
mov
inc
add
loop
jmp
jns
fs
shlb
mov
or
in
sbb
fisttpll
cmp
fstps
cltd
repz
xchg
fiadds
enter
dec
ss
call
inc
xchg
mov
or
cmp
cmp
pusha
popa
or
push
aad
dec
test
sbb
push
pushf
push
cmp
lock
push
xor
clc
outsb
and
sbb
out
jae
xor
push
das
js
jo,pt
xchg
int3
sbb
or
inc
pop
xchg
jbe
shrb
sub
push
inc
shrb
pop
imul
and
push
orl
or
mov
dec
jbe
push
inc
lea
xor
xchg
push
idivb
lahf
std
sbb
push
pusha
mov
mov
stos
popa
push
xchg
push
out
mov
cmp
add
mov
repnz
test
ds
lds
push
or
addr16
enter
nop
inc
dec
sahf
rcl
les
push
cmp
stos
push
mov
jo
jmp
dec
iret
xchg
and
test
addl
or
add
cmp
adc
into
jnp
icebp
or
lea
dec
sub
aad
fucomp
xlat
sbb
mov
push
aam
insl
inc
sahf
mov
aam
add
push
xor
inc
push
push
imul
push
mov
loop
xor
stos
or
adc
cmp
aaa
sub
loop
sbb
mov
sub
xor
adc
push
orl
loop
push
or
roll
cmp
jnp
ja
daa
sub
inc
push
push
insl
sbb
xchg
rorb
adc
cmc
inc
movsb
push
inc
dec
jl
lret
xor
push
ret
lcall
rorb
push
mov
mov
dec
push
and
int3
push
ror
mov
ret
sub
repz
xor
mov
adcb
je
dec
inc
shlb
dec
adc
insb
cmp
cwtl
sbb
xchg
push
insb
jmp
xchg
push
int
aas
adc
repnz
mov
push
adc
scas
test
lcall
inc
adc
enter
insl
leave
lds
pusha
popa
xchg
cmpsb
xor
ljmp
test
ljmp
aas
dec
push
pop
pop
jns
xor
pop
mov
cmp
mov
jb
loopne
lea
jl
jmp
push
mov
xor
sub
and
and
adc
cmp
mov
adc
clc
call
push
push
mov
lock
loop
sbb
push
inc
test
lock
adc
inc
lcall
daa
and
mov
lret
sbb
pop
test
adc
lret
adc
push
push
xchg
mov
or
inc
pop
or
push
sti
dec
ja
dec
inc
lods
les
cmp
divb
or
rorb
add
jl
xor
fidivrs
mov
push
test
push
xorb
inc
pop
lods
add
fs
inc
mov
les
mov
orl
out
and
hlt
int
mov
cmpl
repz
mov
in
frstor
ss
in
push
add
pop
sub
mov
or
mov
jo
inc
rcrl
mov
pop
inc
aas
jl
jno
outsl
fsubrl
aam
xor
mov
adc
push
adc
enter
xchg
outsb
push
fsubrs
sbb
pusha
cmpsl
aas
rcrl
xor
dec
dec
shll
int3
in
fnstenvs
adc
xor
push
push
fimull
rcrb
push
andb
push
movsb
push
mov
int3
push
in
clts
shll
fs
mov
mov
mov
insb
adc
push
pushf
in
adc
mov
insb
bndcn
adc
adc
pop
dec
cmp
sbb
pop
xor
push
push
cwtl
daa
les
jo
fdivl
out
int3
insl
adc
push
and
inc
shrb
mov
insb
and
mov
aam
notl
sub
rolb
pop
inc
lock
sbb
dec
push
scas
pushf
fidivs
mov
rorb
dec
lea
fcomp
sub
lahf
mov
hlt
cmp
cmp
mov
inc
das
and
mov
pop
ss
orb
inc
xchg
mov
cs
dec
pop
pusha
dec
sbb
dec
fldcw
in
dec
movsb
cmp
fdivs
insl
mov
jb
push
mov
push
ss
dec
push
inc
push
loopne
push
mov
lds
jnp
mov
push
pop
push
push
nop
pop
not
jl
in
dec
pop
pop
in
test
and
pop
daa
adc
sbbb
pop
pop
xor
mov
faddl
shlb
cmpsw
mov
xchg
hlt
addr16
insb
jo
into
push
jecxz
popf
enter
xlat
add
mov
sbb
mov
jbe
inc
adc
popf
mov
mov
mov
aam
and
push
mov
push
mov
pop
mov
daa
mulb
inc
aam
not
push
scas
stos
daa
add
xchg
xorl
push
sbb
push
cld
aas
adc
push
push
push
dec
jnp
add
sub
lods
xorl
xor
loopne
in
in
nop
or
inc
or
mov
xchg
aas
int3
repnz
add
mov
adc
inc
lock
cs
addr16
or
xchg
fwait
les
xchg
int
push
pop
popf
hlt
mov
das
mov
xchg
push
mov
ss
mov
rcrb
mov
mov
aas
enter
pop
mov
stos
insb
scas
mov
out
mov
fidivl
mov
mov
cmp
sbb
mov
int
dec
aam
pop
and
push
push
cmp
xor
lcall
ficompl
rep
pop
enter
cs
aas
or
fwait
cmpsb
pop
ss
cmp
push
xchg
fcomps
in
jbe
pop
cmp
push
call
push
js
loopne
jmp
jl
in
pop
jmp
in
int3
test
out
in
enter
sti
sub
xor
push
cs
cltd
gs
or
fmull
inc
adc
mov
sbb
pop
push
or
lods
cmp
push
add
cltd
jo
add
in
push
push
jno
mov
adc
daa
push
add
pop
testl
subb
pop
jg
adc
mov
xor
sbb
cmp
aad
pushf
mov
push
popl
add
pop
popa
adc
sub
pop
push
mov
cmp
inc
daa
aas
dec
pop
stc
loopne
inc
add
sbb
movsl
sar
movsb
mov
movb
add
addr16
push
mov
fwait
xlat
gs
int
adc
add
ja
idivl
push
and
pop
pusha
mov
ficomps
mov
mov
cmp
iret
shrl
pop
cmpsb
adc
mov
adc
cmp
inc
or
adc
es
cmp
and
sbb
mov
adc
cwtl
cmp
pop
fistpll
xor
adc
lods
fnsave
pop
add
jns
and
mov
mov
pop
mov
adc
scas
sub
ret
in
addl
out
pushf
inc
and
push
cltd
jae
push
mov
push
std
or
mov
dec
xchg
call
mov
push
pop
std
loope
cmpsl
xchg
insl
nop
sbb
xchg
or
adc
mov
ss
cmpb
loopne
nop
xor
mov
outsb
mov
mov
nop
adc
jb
adc
mov
iret
adc
xor
sbb
stc
mov
sbb
js
loopne
mov
in
jl
push
push
mov
test
mov
pop
cld
adc
jns
lahf
pusha
orb
or
stc
pop
jmp
lcall
adcb
dec
popa
je
xchg
shll
fisttpll
mov
xor
aaa
sti
aaa
push
inc
mov
add
sub
and
lea
jl
pop
jne
mov
fcomi
inc
cmp
lods
mov
fisubs
xchg
mov
xor
cwtl
sbbl
adc
out
clc
sti
jmp
xor
xchg
and
or
imul
and
clc
mov
leave
inc
test
imul
xor
hlt
push
imull
and
idivb
mov
push
scas
cmc
lock
adc
xchg
inc
mov
pusha
xchg
pop
mov
dec
sub
xchg
dec
jecxz
pop
pop
iret
push
mov
sti
fists
sar
in
pop
in
pushl
push
nop
mov
mov
xchg
jns
sub
push
xchg
testl
inc
cwtl
and
enter
adc
stos
jl
inc
add
adc
pusha
sub
and
data16
add
sbb
sarb
adc
adc
adc
mov
outsb
and
daa
or
packssdw
mov
pop
or
fimuls
xor
jo
fmul
mov
lcall
nop
fsts
adc
sbb
and
or
sub
lods
cmp
es
inc
inc
inc
cld
mov
inc
sub
sub
inc
pop
shrb
filds
pop
sbb
dec
xor
add
pop
xor
je
cmp
or
cmp
lcall
sub
imul
imul
lret
xor
mov
add
les
imul
in
push
lock
or
push
sbb
fwait
cmpsb
imul
negl
dec
sbb
adc
cmp
imul
nop
push
jns
cmpsl
pop
movsb
cs
mov
rcrb
jns
addr16
sbb
sbb
pop
jae
xchg
and
and
and
adc
jns
imul
xor
out
pop
sahf
cmp
dec
outsb
fisubrs
popa
xorl
cmp
adc
je
je
js
mov
jle
js
sbb
js,pn
js
ret
sbb
jl
xchg
jbe
dec
jl
jl
push
pop
adc
jl
jl
jl
or
and
jl
xor
sbb
adc
js
push
push
test
outsl
rcrb
push
test
aaa
insb
fiadds
sub
shl
mov
jb
mov
push
mov
fldt
out
int3
add
pcmpgtb
xor
aaa
repz
enter
mov
lock
adc
mov
jbe
fidivs
subb
das
pusha
movsl
jle
or
push
daa
xor
mov
push
push
sarl
mov
dec
mov
enter
xor
fsub
call
sar
add
imul
imul
cmpsb
imul
daa
cld
rcrl
pop
mov
cmpsb
imul
or
or
add
shll
rcr
cmpsb
imul
cmpsb
imul
dec
shll
pop
js
mov
lahf
test
dec
inc
rorl
dec
sub
pusha
js
inc
out
xorl
and
enter
shll
add
aam
mov
gs
inc
sbb
sub
push
aam
insl
jns
pop
pushf
push
mov
jo
out
fsts
shlb
add
out
adc
clc
ds
js
lcall
push
push
nop
outsl
cs
shrl
outsb
dec
lock
popa
push
rorb
cwtl
movsb
push
pop
fistpll
and
es
push
ds
pop
pop
data16
xchg
pusha
mov
push
push
sarb
popf
push
insl
aad
fcomps
call
mov
dec
scas
or
pop
sbb
add
adc
les
sbbb
cmp
scas
push
inc
push
test
rorb
out
out
dec
rcll
fmuls
push
push
mov
test
push
mov
push
push
push
adc
cs
or
lock
cwtl
dec
add
mov
add
pop
dec
or
popf
out
push
decb
fdivrs
xorl
sbb
in
dec
sbb
ficoms
cs
add
outsl
and
pop
dec
sbb
push
push
inc
mov
aaa
add
out
test
cwtl
dec
push
mov
jo
cmpsl
ret
xchg
imulb
mov
push
divl
push
and
andb
outsb
mov
pop
push
push
call
fwait
loopne
movsb
ja
inc
pushf
xlat
jns
imul
push
push
push
inc
clc
sbb
cmpsb
popf
xchg
sbb
push
push
cwtl
add
sub
add
rcrl
mov
mov
add
out
push
add
cmp
dec
xor
cwtl
mov
cmp
dec
xor
cld
in
lcall
adc
sbb
sub
fwait
inc
subb
cltd
lret
hlt
push
mov
movsb
imul
shlb
movsb
imul
and
shrb
mov
adc
push
cs
inc
aas
int
dec
sbb
jp
movsb
mov
xor
out
testb
lret
add
adc
es
xor
shll
pusha
jp
sahf
shll
out
cmpsb
imul
cmpsb
imul
cmpsb
imul
sbb
xor
shrl
inc
push
bound
shll
dec
ss
repz
push
sbb
push
sbb
sbb
cmpsb
fnsave
dec
es
data16
dec
rcrl
into
in
dec
shll
or
out
push
cs
pusha
xor
shll
orb
sarl
cmpsb
imul
cmpsb
imul
mov
call
push
xor
pop
outsb
adcb
mov
push
shll
inc
pop
dec
shll
aam
sbb
pop
outsb
push
es
lcall
sbbb
xor
inc
cmpsb
push
mov
loop
lcall
push
inc
pop
shll
pushf
inc
mov
push
testl
jne
push
jns
pop
push
loop
ret
pop
push
and
sti
inc
fistl
fs
jo
push
les
fcoms
inc
fdivs
inc
dec
inc
sub
addr16
sub
jl
dec
or
filds
or
adc
lea
jno
clc
inc
inc
arpl
dec
addb
xor
jb
jns
movb
xchg
cmp
or
mov
in
fucomi
push
push
imul
mov
and
ss
push
adc
adc
fsubrl
jp
imul
adc
pop
sbb
bound
and
push
mov
inc
cmp
mov
or
push
imul
xchg
xchg
add
sub
add
insb
lahf
push
pop
jo
outsb
push
xchg
xchg
adc
sbb
adc
cmpsl
push
pop
inc
or
adc
push
cmp
add
insb
mov
lods
outsl
sti
inc
add
and
repz
daa
cltd
inc
fisubrl
inc
sub
push
mov
pop
ret
popa
fstps
push
push
sbb
mov
mov
insl
or
mov
mov
lret
andl
rorb
imul
roll
push
and
push
ss
push
xchg
cmpsl
xor
jb
insb
cmp
xor
add
insl
cwtl
adc
pop
dec
xchg
xchg
mov
lods
jbe
cs
sub
negb
dec
mov
stos
test
push
sbb
enter
sbb
imul
pop
ljmp
push
test
addr16
subl
mov
mov
imul
aas
adc
dec
push
pop
cmpsb
xchg
inc
add
fbstp
popa
fistpl
pop
mov
sub
adc
pusha
mov
arpl
rorb
xor
cs
xchg
inc
inc
jae
insb
pusha
cmp
xor
mov
ja
and
outsl
jmp
adc
lret
mov
add
mov
mov
icebp
jnp
lea
into
and
xor
les
adc
and
lret
dec
pop
add
ret
inc
mov
fisubl
stos
xchg
inc
pop
imul
sub
or
add
push
out
mov
mov
sub
test
fstps
add
inc
pop
dec
lods
insb
mov
push
adc
jg
add
int
xor
inc
dec
nop
sbb
outsl
inc
test
jo
mov
mov
mov
insb
popf
add
inc
sbb
pusha
inc
orb
xor
shll
adc
sbb
inc
lods
add
mov
mov
ss
ja
popa
xchg
test
pop
fnstsw
push
mov
inc
popa
adc
jb
xchg
cwtl
xchg
mov
cmp
jno
movsb
sbb
xchg
sub
pop
push
inc
outsb
sbb
xor
add
pop
jecxz
cwtl
sub
rolb
fs
ret
sbb
sub
cmp
dec
and
add
fwait
mov
rcr
pop
jl
imull
sub
insl
and
xchg
movsl
arpl
test
xor
inc
dec
push
jmp
fistpl
enter
fstl
jbe
aas
bound
cmp
mov
xor
xor
xor
sbb
pusha
xor
out
fldt
add
push
xor
push
xor
xor
xor
xor
dec
xor
mov
push
xor
xorb
xor
jmp
xor
xor
xor
xor
cmp
push
xor
xor
xor
xor
mov
xor
std
xor
push
xor
xorb
xor
push
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
sbb
and
sub
xor
cmp
inc
xor
pop
xor
je
xchg
pushl
shlb
push
ss
cmp
ss
mov
lcall
pushl
shll
in
ss
aaa
daa
aaa
cmp
push
aaa
data16
jl
aaa
mov
aaa
fidivs
hlt
aaa
add
cmp
cmp
cmp
cmp
je
test
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
push
cmp
data16
cmp
cmp
cmp
cmp
insl
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
push
cltd
cmp
cmp
cmp
mov
cmp
fstpt
stc
cmp
xor
dec
imul
mov
clc
fdivrl
clc
ds
sbb
aas
pop
aas
jo
mov
pushf
aas
mov
aas
fstpt
lock
pushl
push
pop
xor
xor
xor
arpl
js
mov
push
pushl
sahf
xor
xor
xor
dec
xor
xor
xor
pop
xor
jo
repnz
lock
push
xor
inc
call
cld
xor
xor
xor
xor
xor
xor
xor
ljmp
mov
mov
xor
xor
xor
xor
xor
xor
xor
mov
xor
cmp
push
xor
push
jb
jp
xorb
call
xor
mov
xor
loop
ljmp
or
call
sbb
and
sub
xor
cmp
inc
ss
ss
ss
bound
push
jb
jp
xorb
ss
ljmp
xchg
ss
ss
ss
iret
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
lcall
iret
cmp
cmp
jle
test
mov
ds
add
push
aas
sub
pushl
jbe
aas
je
mov
xchg
aas
stos
aas
ret
aas
lods
sbb
stos
test
xor
pop
xor
xor
xor
xor
xor
xor
xor
lcall
xor
xor
xor
xor
xor
xor
xor
push
adc
loopne
sub
das
cli
das
xor
divl
fnstenv
lock
decl
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jg
sbbb
cmp
jne
cmpl
sub
jecxz
sarb
fidivrs
or
pop
aas
and
aas
dec
aas
fdivrs
stos
orb
and
ds
jg
test
mov
xor
ljmp
xor
xor
xor
xor
xor
xchg
xor
jle
mov
xchg
xor
ljmp
xor
xor
xor
xor
push
xor
push
push
aad
ja
xor
xor
es
jg
push
push
fdivs
loopne
mov
sbb
pop
ret
clc
pushl
lea
cli
aaa
lahf
cmp
cmp
cmp
cmp
pop
jo
cmc
jb
ds
out
ds
das
js
xorb
xor
xor
stos
push
call
xor
xor
shlb
call
and
aaa
push
aaa
jb
jle
xchg
aaa
pushf
aaa
scas
sub
pushl
fbstp
or
adc
mov
sbb
jg
call
cmp
cmp
shl
xor
test
mov
pushl
mov
ret
cmp
cmp
push
cmp
out
cld
cmp
adc
jge,pt
add
or
pop
aas
arpl
getsec
sub
incl
xor
xor
xor
dec
fcomip
jg
xor
jp
xor
xor
push
loopne
out
hlt
add
pushl
sti
xor
xor
xor
xor
xor
xor
lcall
aaa
adc
push
addr16
jo
xor
fistpll
xor
xor
xor
xor
xor
push
aas
popa
aas
ja
jge
test
mov
lcall
aas
movsb
aas
mov
mov
pop
and
ror
sbb
xor
mov
out
push
and
xor
movsl
pushl
cld
sar
xor
mov
xor
xor
xor
xor
xor
xor
xor
aad
pop
shll
xor
test
and
pop
cmp
xchg
cmp
cmp
cmp
cmp
decl
imul
xor
bound
cmpl
cmp
cmp
cmp
cmp
jb
int
cmp
cmp
cmp
pop
daa
aas
insl
aas
loopne
nop
ret
dec
lock
xor
xor
pop
xor
mov
ret
xor
xor
dec
call
jg
xor
push
xor
xor
xor
ss
ss
add
adc
scas
clc
or
adc
inc
mov
mov
cmpsl
cmp
push
jg
aad
cmp
pop
cmp
jl
out
idivb
and
call
cmp
cmp
cmp
cmp
cmp
push
cmp
jge
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
mov
mov
cmp
adc
cmp
xor
inc
cmp
nop
mov
sar
cmp
add
adc
ds
cmpl
xor
ds
aas
icebp
cmpsb
jmp
aas
cmp
push
aas
push
aas
mov
jbe
aas
idivb
js
in
ss
add
call
scas
dec
xor
xor
dec
xor
pop
jg
call
outsb
xor
jle
xchg
mov
xchg
cmpsb
xor
pushl
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xorb
cli
mov
mov
push
icebp
jg
xor
mov
add
or
adc
sbb
jmp
bound
dec
xor
pop
xor
push
jb
jp
xorb
xor
lcall
xor
xor
xor
push
xor
xor
xor
xor
cmp
stos
dec
pop
xor
jo
mov
xchg
or
mov
cmp
xor
xor
loop
dec
cmc
sbb
xchg
xor
xor
push
mov
mov
addl
xor
jg
aas
adc
or
and
xor
cld
xor
pop
xchg
push
lcall
mov
mov
shlb
xor
clc
jg
sub
and
sub
xor
cmp
inc
ss
decl
push
ss
ss
ss
xorb
ss
ss
mov
ss
add
fdivs
loopne
out
clc
fdivrp
push
or
adc
xchg
aaa
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
push
jmp
mov
nop
aaa
cwtl
aaa
mov
aaa
mov
aaa
shlb
fdivs
jg
loopne
call
jge
cmp
cmp
cmp
cmp
cmp
cmp
mov
dec
push
pop
cmp
push
cmp
push
cmp
cmp
cmp
cmp
cmp
test
jmp
cmp
pop
cmp
mov
mov
cmp
adc
testb
cmp
outsb
cmp
sti
ja
cmp
mov
cmp
cmp
push
cmp
push
jne
adc
pushf
cmp
out
fwait
shlb
sarb
fdivrs
fcoml
hlt
cmp
cmp
cmp
jmp
cli
decl
adc
sbb
cmp
cmp
cmp
addb
cmp
cmp
cmp
cmp
ret
pop
cmp
push
je
js
sbbb
pop
es
pop
pop
cwtl
cmp
mov
xlat
ja
add
hlt
cmp
scas
das
cli
cmp
adc
sbb
sub
xor
dec
cmp
cmp
cmp
push
mov
aaa
adc
cmp
mov
pop
cmc
stos
aas
fisttps
adc
sbb
cmp
dec
je
cmpb
cmpsb
lahf
lock
mov
mov
xchg
ds
mov
ds
das
lock
jae
ds
ds
pop
aas
fwait
lock
jle
aas
jge
mov
xchg
sarb
call
inc
add
test
sbb
das
je
sub
sarl
icebp
test
insb
xor
je
jl
adc
aas
out
xor
xor
ds
xor
pushl
aam
fbstp
insl
xor
jge
test
lea
xchg
xor
xor
out
fidivs
in
pop
or
xor
sbb
add
xorl
xor
dec
shlb
fisttpll
xor
inc
inc
xor
xor
sbb
xor
xor
xor
xor
xor
xor
adc
add
xor
xor
mov
ds
cli
xor
es
push
xor
les
mov
mov
sub
sub
sarb
inc
daa
sub
fimull
loop
ss
push
xor
rcll
lret
push
push
push
into
in
in
hlt
icebp
pop
inc
push
fiadds
sarl
aaa
push
aaa
fs
je
adc
test
mov
xchg
adc
pushf
shlb
arpl
adc
adc
and
lea
cmp
inc
dec
lret
popl
pop
rol
mov
cmp
cmp
cmp
lock
in
in
cmp
cmp
cmp
cmp
filds
std
cmp
or
or
adc
adc
sbb
xor
push
cmp
testl
movsb
cmp
cmp
cmpsl
sarb
aas
aam
loopne
sahf
lock
jecxz
cmp
mov
cmp
cmp
xor
cmp
sbb
add
cmp
dec
fistl
lcall
fbld
jge
xchg
cmp
cmp
cmp
adc
jmp
cmp
sub
sub
xor
xor
cmp
cmp
xor
pop
loopne
cmp
cmp
jb
jbe
mov
imul
mov
xor
cmp
out
je
roll
arpl
rorl
push
jl
mov
pop
xchg
jmp
lods
pop
jecxz
out
xor
xor
rcrl
sub
xor
inc
xor
dec
xor
dec
cmp
jo
mov
inc
iret
js
mov
int3
cmp
fdivrl
loopne
in
call
addr16
pushl
std
adc
pop
and
dec
ds
ds
ds
dec
dec
dec
shll
jl
nop
pop
movsb
inc
lcall
ds
add
add
or
or
fdiv
pop
adc
adc
sbb
sbb
and
sub
aas
dec
jo
decl
loop
aas
mov
nop
aas
xchg
aas
cwtl
and
repz
mov
mov
xadd
les
mov
rolb
xor
jmp
mov
xchg
push
or
lcall
lods
xor
rolb
sar
and
in
xor
xor
lahf
or
sbb
clc
das
je
sbb
inc
stos
pop
xor
xor
or
xlat
mov
xor
xor
xor
xor
mov
mov
xor
hlt
xor
repz
lret
jg
cmpsb
call
xor
sbb
sbb
and
sub
cmp
dec
xor
clc
call
xor
mov
nop
xor
movsb
pushl
mov
lods
cmp
fdivl
loopne
ds
clc
xorl
xor
sub
sub
icebp
jg
stos
sub
ja
xor
xor
std
adc
mov
xor
xchg
xor
xor
xor
outsl
push
push
rclb
loopne
in
out
xbegin
pop
sbb
xor
inc
push
xchg
cmpb
lret
jg
mov
xor
mov
mov
or
cld
iret
add
or
test
sbb
adc
sbb
and
hlt
xchg
xor
test
sbb
xchg
xor
lods
ret
jo
mov
mov
pop
ds
xor
ss
sbb
pusha
ss
ret
ja
xchg
lods
ss
ret
jecxz
aaa
sub
push
shrb
mov
sbb
ret
aaa
aaa
fmull
cld
outsl
xlat
or
cmp
adc
adc
sbb
sbb
sub
push
jae
jo
and
shrb
mov
mov
xchg
jmp
inc
out
jmp
xor
call
into
jmp
cmp
cmp
dec
cmp
cmp
cmp
jmp
pop
ss
js
nop
mov
xlat
xor
rcrb
call
xlat
xchg
xlat
clc
sub
ja
cmp
cmp
sbb
sub
push
cmp
mov
cmp
cmp
lods
sahf
hlt
pop
push
mov
mov
cmp
cmp
and
jg
mov
cmp
push
cmp
cmp
cs
insb
cmp
je
test
xchg
imull
int3
and
stos
lahf
sahf
lock
scas
add
and
cmp
mov
pop
pop
ss
daa
pushf
stos
mov
outsl
clc
cmp
daa
lods
scas
daa
pop
xor
decb
incl
cmp
fstpt
pop
or
ds
ds
das
mov
sarl
roll
ds
decl
push
or
push
aas
xor
dec
aas
data16
jg
mov
int3
add
daa
sahf
xchg
mov
push
dec
cld
xchg
mov
xor
xor
inc
cltd
push
xchg
lcall
imul
ljmp
sahf
dec
jg
popa
xor
jbe
out
lret
lret
dec
cli
fsubl
or
xor
dec
pusha
dec
aas
ljmp
jl
test
push
movsb
cmpsb
or
xchg
xor
pop
mov
je
sti
jp
lea
mov
xor
hlt
test
cmp
out
dec
fidivl
mov
inc
test
mov
mov
jmp
aad
add
sbb
jne
and
xor
and
pop
ss
xchg
xchg
ss
stos
call
into
add
push
aaa
sbb
aaa
jno
sbb
test
test
xchg
mov
jae
jne
aam
fwait
loopne
adc
and
and
inc
lahf
les
insb
jnp
inc
xchg
sub
xchg
adc
cmp
cmp
push
add
jg
stc
cmp
cmp
cmp
cmp
cmp
mov
cli
adc
incl
inc
cmp
push
cmp
popa
cmp
jno
cmpl
pop
pop
cltd
cmp
decb
pop
std
fnstcw
loope
repnz
cmp
sbbl
mov
jg
xchg
dec
mov
fstpt
jecxz
icebp
cmp
cmp
cmp
mov
xor
inc
imul
cmp
cmp
adc
cmp
cmp
push
xchg
call
cmp
out
sahf
pop
lret
es
pop
repnz
cmp
aaa
cmp
dec
sbb
jmp
roll
loop
loopne
add
or
or
das
cmc
jg
adc
sbb
and
and
sub
sub
xor
mov
testb
ds
test
mov
ds
lret
cld
xchg
mov
adc
es
aas
insb
aas
jle
xchg
mov
aas
lds
jo
adc
and
add
xor
movsb
inc
cmp
imul
mov
rcrb
pop
cld
dec
add
or
or
adc
adc
push
aas
cli
jb
xor
xchg
xor
xor
insl
xor
mov
jle
dec
cli
xchg
xor
xor
pop
add
adc
cmp
aas
xor
pop
mov
les
enter
clc
sarb
dec
in
in
add
jg
mov
xor
inc
xor
push
xor
incl
xchg
pop
mov
xor
xor
xor
xor
sbb
push
cmpsb
adc
mov
xlat
cwtl
fcmovnbe
incl
adc
ss
xlat
mov
sub
pop
xor
or
adc
out
lcall
adcl
ss
ss
pop
or
aaa
or
ret
mov
xor
pop
dec
test
pushl
and
xor
lahf
pop
xor
xchg
xor
pushl
xor
lods
xchg
sbb
aaa
stos
aaa
out
adc
dec
std
cmp
cmp
cmp
cmpsb
ds
loop
imul
xor
outsl
xor
ja
jnp
std
mov
fildl
xor
arpl
in
xorb
ficomps
xor
xor
cltd
jmp
xlat
cli
int
inc
mov
divb
dec
push
cmp
add
dec
pop
mov
fidivrs
out
cmp
leave
cmp
cmp
cmp
cmp
jns
mov
ljmp
cmpsl
sub
xor
xor
xor
xor
ret
add
jnp
pop
cli
rorb
sbbl
jl
inc
mov
mov
btc
in
stc
aaa
aaa
xchg
fldt
adc
mov
scas
and
dec
cmp
cmp
fwait
mov
or
addb
xchg
mov
ficompl
jbe
test
dec
scas
decl
fidivs
xor
xorl
pop
call
sub
dec
cmp
cmp
mov
sbb
cmp
sti
xchg
cmp
inc
aam
jmp
addr16
cmp
cmp
cmp
stc
out
inc
cmp
fcmovnb
aas
not
rolb
mov
xor
outsl
mov
sub
idiv
xor
addr16
das
cld
movsl
xchg
xchg
xor
xor
xor
cmp
aas
dec
xchg
mov
xor
push
or
add
xor
mov
lcall
frstpm(287
ss
aaa
outsb
aaa
mov
aaa
jp
bswap
push
cmp
in
cmp
dec
clc
adc
xor
pop
cmp
and
das
add
push
cmp
adc
and
cmp
add
cld
pop
daa
addr16
cmp
cmp
bound
bound
hlt
cmp
cmp
jmp
dec
push
lahf
cmp
adc
push
aad
cmovle
mov
mov
gs
add
pop
icebp
mov
xchg
ficomps
scas
test
mov
lahf
mov
rcrb
push
jg
out
xor
xor
ja
aaa
and
mov
and
xor
xor
pop
adc
pop
adc
push
sub
mov
aam
xor
stos
xor
imul
jnp
cmp
mov
cmp
cmp
add
sbb
xor
push
clc
ret
jae
js
mov
test
enter
sbb
repz
cmp
jae
cmp
test
jno
imul
mov
mov
test
push
fdivrl
insl
mov
pop
lds
ds
lahf
lock
rorl
xchg
aas
js
popl
xlat
arpl
aas
rclb
pushf
mov
aas
sysenter
mov
mov
add
adc
add
mov
aaa
into
pop
incl
xlat
loop
out
out
aaa
add
and
sub
xor
cli
decl
popa
cmp
jae
jge
loopne
cmp
cmp
cmp
or
mov
stos
sub
incl
xor
cmp
cmp
cmp
push
pop
pop
loopne
pop
add
jmp
sbb
dec
cli
das
stos
lea
fisttpll
push
fistpl
cmp
test
aas
inc
aas
pop
aas
fs
loop
jecxz
jbe
mov
mov
xor
aas
cmp
js
imul
xor
clc
in
jmp
cmc
push
imul
jmp
push
pushl
adc
cmp
xor
cmpsb
jae
dec
je
mov
ret
xor
xlat
mov
out
mov
sbb
push
mov
lock
cmpps
daa
test
push
cmp
sub
xchg
ret
sahf
ret
adc
cmp
push
push
inc
add
bound
movsb
daa
pushf
jo
fcmovbe
rorl
jae
pavgb
loop
inc
adc
add
cmp
cmp
cmp
cmp
imul
mov
jg
mov
scas
test
ret
dec
xlat
jmp
xor
jg
cmp
cmp
cmp
inc
adc
or
xor
cmp
jl
ljmp
iret
outsl
jge
mov
cmp
cmp
cmp
push
xchg
jne
lahf
clc
push
cmp
cmp
out
pop
dec
cld
iret
push
cmp
pop
addr16
cmp
cmp
sub
mov
pop
adc
loop
test
out
addr16
int
loopne
dec
stos
adc
cmpl
jmp
es
mov
icebp
aas
aas
test
das
mov
push
wrmsr
adc
xor
daa
jg
mov
das
push
xor
xor
jb
vmread
xor
mov
cltd
decb
pop
dec
fwait
sti
test
fistl
sahf
fdivrp
ret
jmp
icebp
aaa
sti
pop
scas
daa
jle
call
xor
xor
cmpsl
inc
xor
lret
mov
pop
sub
jp
rclb
add
mov
xor
int
shlb
fnsave
push
xor
xorb
call
mov
test
push
clc
aad
ljmp
or
adc
sbb
les
ja
xor
xor
test
daa
je
outsl
je
and
xor
repz
dec
pop
loopne
inc
xor
and
call
mov
xor
add
js
dec
clc
xor
pop
or
xchg
and
jecxz
aaa
out
add
push
hlt
jg
sub
ss
inc
aaa
pop
push
jle
pop
jo
aad
ss
bound
xlat
push
lret
jmp
test
icebp
mov
aam
addl
aam
pusha
push
cmpb
cmp
fdivrs
repz
pop
inc
sub
pop
add
pusha
cmp
cmp
sarb
push
loopne
call
call
clc
pop
add
or
or
rolb
dec
cmp
js
mov
mov
push
cwtl
xchg
mov
xlat
jp
jne
sub
inc
dec
ficompl
rcrb
xchg
scas
jne
cld
nop
cmp
cmp
mov
jmp
xlat
jp
mov
adc
mov
mov
mov
push
xchg
loop
mov
hlt
cmp
decl
dec
ds
imul
adc
ds
sbb
aam
pop
pop
xor
push
aas
jb
jbe
mov
xchg
inc
push
aas
enter
aam
fmull
jge
aaa
in
lcall
and
cmp
mov
cwtl
inc
test
outsb
es
xor
mov
je
and
sub
xor
jmp
lret
inc
push
pop
sub
sub
test
fistpl
lock
repz
xor
pavgb
sti
mov
jo
arpl
fucomip
aas
adc
mov
cmc
cli
inc
adc
sbb
pop
addr16
decl
push
mov
adc
in
divb
call
adc
dec
aaa
push
pop
mov
aaa
idivb
push
cmp
cli
sbb
sbb
sbb
gs
std
pop
shll
aas
stc
aas
std
push
and
out
cli
das
jle
xor
xor
xor
subb
mov
push
cmp
xor
pop
xor
inc
add
pop
sub
mov
xlat
mov
loopne
cmp
sbb
outsb
out
xor
xor
xor
mov
add
xor
xor
pop
xor
xor
xor
lock
clc
and
xor
test
push
ss
ss
ljmp
hlt
pushl
inc
ss
ss
ss
ss
ss
packsswb
imul
add
ljmp
xchg
addb
cmp
int3
xlat
jmp
incb
xchg
stc
cmp
cmp
out
dec
jle
xchg
mov
cmp
pop
out
cmp
incl
mov
xor
cmp
adc
test
das
rcr
in
and
inc
js
dec
mov
cmc
cmp
loopne
push
xchg
in
add
pop
aas
or
inc
clc
aas
adcb
sbb
pop
aas
and
daa
inc
clc
add
pop
das
getsec
aas
cmp
aas
fildl
icebp
pop
ret
and
push
aas
pop
jae
fwait
xchg
pop
xor
push
xor
mov
xor
imul
xor
jnp
jg
xorl
aaa
or
add
xor
or
jmp
xor
xor
scas
stos
or
stos
mov
mov
mov
pushf
lock
fbld
add
xor
sahf
ss
les
ss
pop
mov
mov
mov
or
stos
into
test
add
scas
ficompl
loop
out
ljmp
pop
cmc
inc
fildl
cmp
cmp
xchg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
jmp
clc
sbb
cmp
dec
test
rolb
lret
adc
shlb
xor
repz
xchg
mov
push
loope
cmp
jae
mov
data16
sbb
shlb
and
sub
pop
call
aas
inc
clc
ret
adc
push
fwait
pop
in
loopne
dec
bound
xor
jo
xchg
aam
and
les
ljmp
xor
pop
xor
movsl
dec
fwait
xchg
xor
push
xor
mov
mov
adc
push
xchg
jecxz
aaa
or
sub
xlat
mov
jp
xchg
aaa
sub
cmp
mov
xor
icebp
test
jl
aam
inc
test
dec
dec
clc
aaa
jg
loopne
jle
cmpb
mov
cmp
cmp
cmp
hlt
mov
dec
out
mov
cmp
jae
test
dec
pop
push
mov
bswap
cmp
cmp
cmp
jle
mov
call
nop
pop
iret
cmp
stos
mov
ds
outsl
xchg
pop
loopne
xchg
iret
scas
cmp
mov
je
cld
adc
xor
xchg
mov
xchg
xor
ret
jle
xor
mov
xor
hlt
xor
in
xor
lahf
xor
xor
xor
xchg
xor
call
in
jmp
sbb
or
dec
inc
rcll
jae
cmp
pop
cli
push
cmp
inc
jmp
jg
cmp
pop
add
add
cmp
cmp
cmp
cmp
imull
sub
add
cmp
adc
add
sbbb
imul
inc
xor
mov
mov
cli
aam
ret
xchg
rol
sbb
fwait
loop
out
out
xor
rcrb
ja
xor
adc
xor
push
shl
pop
arpl
jmp
cmp
loopne
ret
inc
lahf
cmpsl
cmp
inc
cmp
adc
andl
out
aas
push
shl
inc
das
jo
or
jo
lret
leave
jle
adc
test
add
pop
inc
pop
loopne
js
dec
orps
pop
adc
hlt
and
popw
cmp
fistl
cmp
es
add
pop
ss
cld
mov
iret
jno
lahf
aaa
mov
shr
jmp
and
cmp
stc
cmpsb
daa
pop
out
or
sbb
dec
bound
loopew
dec
inc
xlat
cmpsl
sti
enter
sbb
loope
andb
sub
arpl
pop
dec
xor
cmp
add
or
xchg
and
xor
popl
or
sti
movsb
dec
mov
addl
ja
daa
push
rcll
jp
mov
push
stos
arpl
inc
loope
xor
stc
xor
xor
push
std
decl
aaa
add
jecxz
or
mov
les
and
ds
lcall
cmp
ja
aaa
ficoms
mov
sbb
xor
dec
jg
push
push
add
loopne
call
xor
loope
and
imul
jns
jge
fildl
push
fisttps
adc
jmp
push
iret
js
mov
popf
and
pop
sarb
inc
int3
cmp
repz
adc
inc
cmp
les
sub
cmp
mov
cmp
inc
adc
int
push
je
push
adc
cmp
aas
les
cmp
pusha
mov
push
incl
out
clc
or
pop
cmp
test
inc
stos
adc
push
cmp
cmp
pop
xchg
xor
push
jl
shlb
aam
loopne
dec
loopne
cmp
mov
loope
clc
das
and
xor
xor
adc
pop
xchg
js
jl
subb
dec
xchg
shlb
mov
or
clc
es
cltd
mov
xor
cs
loopne
push
jp
and
xor
xor
mov
fwait
or
xchg
jle
xor
dec
xor
les
mov
mov
add
or
xor
jns
add
jmp
mov
repz
aas
or
add
pop
aaa
pusha
xor
cmp
sti
insb
mov
aam
dec
test
stos
xlat
mov
xlat
ljmp
andl
xor
or
jecxz
cmpsb
call
inc
pusha
inc
loopne
mov
mov
xor
cmp
inc
sbb
jnp
cmp
les
mov
xor
roll
lock
addr16
pop
les
ss
ss
ss
lahf
loope
pop
std
shlb
loope
divb
xchg
push
aaa
cmp
push
jp
xchg
aaa
lods
aaa
mov
aaa
repz
rolb
adc
sbb
in
pop
jmp
mov
xchg
cmpb
sti
std
mov
cmp
add
insl
cmp
push
incb
fwait
cmp
lahf
loopne
sub
add
pop
fwait
cmp
decl
pop
aaa
push
cmp
xchg
cltd
cmp
jmp
idivb
add
sub
js
sub
jnp
jnp
push
jno
adc
sti
lret
imul
loope
pushf
or
add
fstpt
cmp
inc
cmp
jg
sarl
sarl
push
notl
cmp
ja
sti
fistl
out
cli
pop
jne
mov
test
cmp
idivb
sub
inc
ds
movsl
mov
push
movb
jo
test
or
jp
jb
pusha
cmpsl
xchg
adc
mov
loopne
lds
mov
stos
mov
xchg
add
mov
jne
mov
jb
mov
jno
mov
xchg
jg
inc
sub
cmpsl
xor
repz
inc
clc
add
pop
add
add
std
andb
lock
xchg
mov
cld
mov
xor
shlb
xor
mov
mov
cmp
loope
data16
adc
and
xor
xchg
pusha
rolb
pop
repz
loop
xchg
xor
xor
xor
mov
aaa
push
mov
ret
inc
xchg
push
aas
add
mov
pop
lods
shrb
pushl
adc
and
mov
aam
xor
xchg
xchg
incl
shll
jecxz
stc
aaa
pop
shrb
icebp
ljmp
push
mov
cmp
jp
jle
orb
mov
mov
movb
sahf
mov
les
fdivrs
fmull
jle
xorl
cs
xor
cmp
jle
movsb
mov
dec
xlat
pop
mov
cmp
push
mov
lcall
pop
loopne
jecxz
cmp
mov
inc
stos
sbb
cmp
add
inc
imull
pop
jg
pushf
inc
enter
std
xor
inc
xor
mov
cli
dec
cld
mov
xchg
cmp
mov
mov
pop
maskmovq
fwait
in
mov
add
test
cmp
cmp
sub
and
lea
sahf
xchg
ds
xlat
ds
aaa
cs
add
sbb
cmp
dec
divl
aas
orb
lret
outsl
and
sub
sbb
inc
pop
popa
call
mov
imul
incb
sbb
cmp
mov
sti
jb
or
mov
and
lock
push
xor
cs
cld
ud2
dec
xor
imul
call
xor
sbbl
andb
mov
mov
fwait
dec
int
out
dec
loope
sub
repz
lock
pushl
xchg
xor
xor
xor
dec
sti
xor
xor
incl
push
addr16
sarb
cmpsl
jmp
pop
cmp
cmpsb
mov
push
ss
pmuludq
negl
andb
out
push
sti
adc
getsec
das
aaa
add
popa
push
add
cmp
jg
popa
mov
hlt
aaa
mov
cmp
mov
cmp
cmp
cmp
lods
cmp
pop
cmp
xchg
testb
out
icebp
adc
cmp
and
lods
mov
cmp
lds
daa
std
loop
mov
cmp
mov
cmp
cmp
ret
fistpll
out
out
cmp
cmp
xlat
push
cmp
aam
fistl
cmp
cmp
cmp
mov
js
or
cli
cmp
xchg
loop
imul
repz
or
push
add
pop
daa
cmp
jl
cmp
add
ds
not
cli
or
mov
pop
pop
jae
jp
mov
pop
loope
call
jo
test
out
add
cmp
arpl
and
sti
in
xor
lcall
adc
sub
loope
pop
cmp
dec
cld
cmpb
fs
xorl
lds
orl
push
cmp
inc
sub
inc
arpl
push
lock
into
jae
call
daa
xor
or
pop
xor
mov
aam
dec
mov
adc
cs
push
je
xchg
and
imul
xor
xor
ficompl
xor
outsl
mov
cmpsl
xor
out
clc
or
inc
cmp
adc
jo
mov
mov
cmp
mov
mov
mov
subl
sbb
pop
cld
or
adc
sbb
dec
subl
push
add
adc
fwait
xchg
aaa
icebp
jecxz
mov
and
inc
cmp
loope
pop
mov
test
mov
dec
jg
sub
xchg
dec
aas
cmp
push
outsl
sbb
mov
test
mov
sub
sub
xchg
cmpb
adc
shr
inc
pop
call
cmp
lock
pop
cmp
cmp
sahf
cmp
xchg
adc
loop
or
cmp
cwtl
js
ds
pop
addr16
jecxz
jecxz
mov
aam
bound
xor
test
cmp
sbb
enter
add
pop
xor
loopne
mov
repnz
mov
ds
jo
inc
loopne
cmp
dec
pusha
mov
jo
test
dec
js
repnz
aas
cli
add
in
aam
adc
jg
fildll
subb
jge
adc
lahf
mov
dec
and
or
cmp
ret
xor
xchg
inc
jae
das
push
aas
add
loop
xorl
pop
or
mov
nop
xor
loopne
movsb
lret
inc
mov
mov
call
push
pop
xor
sub
or
cmp
pop
in
sahf
mov
or
das
adc
pop
ffreep
pop
jnp
ja
push
je
cmp
rolb
repnz
popa
mov
add
outsb
lret
ret
push
loop
jmp
aaa
sub
xor
stos
ror
aaa
fnstenv
xor
xor
xchg
mov
mov
sub
jp
popf
cmp
mov
cmp
ds
jmp
jmp
xchg
xchg
and
cmpsl
cmp
fwait
jo
cmp
das
arpl
adc
popa
test
sti
or
aam
push
pop
sbb
mov
inc
in
mov
jo
jl
add
xchg
push
or
inc
addl
cmp
dec
mov
mov
paddsw
aas
push
aas
gs
movb
jno
sbb
sub
lahf
rcrb
loopne
xor
mov
cmpsl
and
xor
sbb
sub
cmp
dec
lds
push
add
lret
adc
mov
movl
inc
repnz
sbb
xchg
xor
arpl
xor
xor
das
push
xor
ret
cmpsl
mov
cltd
xor
or
xlat
dec
fwait
outsb
mov
xchg
xchg
scas
das
lret
fstpt
jmp
add
aas
mov
mov
jp
mov
push
movsl
rcrb
mov
es
mov
mov
mov
mov
mov
ljmp
mov
imul
lret
mov
icebp
aaa
mov
adc
and
cld
push
in
inc
aaa
push
xchg
outsb
and
shlb
jecxz
daa
cmpsl
aaa
mov
adc
ja
aaa
aaa
push
fbstp
cmp
repz
xor
das
mov
sahf
lret
rcr
es
mov
cmp
cmp
adc
adc
mov
cmp
addl
movsb
scas
pop
scas
dec
push
pop
icebp
cwtl
sbbb
lods
cmp
stos
test
mov
mov
mov
iret
out
adc
or
pop
repz
scas
mov
in
cld
fdivrp
adc
repnz
sbb
adc
cmp
mov
cmp
mov
test
or
aad
movsb
ds
int3
fstl
scas
das
addb
sub
dec
aas
jb
xchg
cmc
stos
mov
aas
repnz
pop
pop
jno
inc
sbb
jecxz
add
call
xchg
outsb
lcall
xor
mov
dec
xor
and
xlat
fsubs
movsl
jne,pn
and
dec
das
jp
sbb
sarb
icebp
dec
jl
or
inc
sbb
dec
icebp
outsl
xor
pop
pop
sbb
cli
out
jbe
adc
lds
fdivl
ljmp
push
bnd
xor
rcrl
xor
das
addr16
out
mov
jo
les
or
mov
jae
add
mov
or
xchg
cmp
iret
cmp
adc
movsb
out
dec
cmp
jbe
les
inc
scas
dec
and
bound
add
xorl
call
jg
pop
pop
pop
push
jle
xchg
push
mov
jae
inc
xor
cwtl
call
pop
or
push
inc
pop
cli
rolb
inc
pop
les
sbb
loop
mov
mov
jnp
xchg
cmp
icebp
mov
add
orl
jmp
xchg
xchg
cmpsl
ds
dec
jmp
xchg
adc
bound
jle
add
sar
push
adc
cmpb
data16
adc
shrb
cmp
movsl
xor
cmp
jmp
xorl
xor
sbb
out
xchg
clc
xchg
js
or
xor
dec
scas
test
sub
test
xchg
jl
test
dec
mov
xor
xor
ret
sub
inc
clc
add
mov
inc
les
in
add
inc
mov
mov
sbb
cli
xchg
sbb
ret
out
xor
pop
sub
sbbb
dec
jno
jns
pop
call
mov
pop
or
sbb
xchg
adc
sbbb
sbb
mov
shll
out
adc
je
sbb
pushf
xchg
pop
repz
xchg
mov
dec
cmp
jns
xchg
lcall
cmp
iret
cmp
sarl
xadd
dec
push
or
xchg
jecxz
clc
push
pop
mov
dec
je
imul
inc
adc
loope
jg
push
test
or
mov
cmp
test
mov
inc
pop
call
cmp
out
iret
repnz
dec
sbb
jle
repnz
cmp
lods
dec
fidivrl
das
cld
loope
mov
mov
jmp
push
cmpsl
and
add
imul
das
mov
push
jbe,pt
cwtl
scas
stos
ds
mov
out
or
cmp
dec
sub
adc
bnd
add
loopne
fisubs
cs
pop
add
add
mov
ret
sbb
cmp
sti
xor
orl
gs
ret
add
scas
xor
and
inc
sbb
cmp
pop
call
rol
add
out
add
xor
jl
or
ljmp
jl
pop
das
mov
mov
pushl
inc
dec
insb
cmp
mov
and
inc
in
adc
xlat
dec
aaa
mov
lret
inc
push
cld
addl
cmp
cmp
jno
push
push
jno
mov
fcomi
push
mov
loopne
lret
jnp
and
pop
cmp
cmc
cmp
pop
and
aas
inc
ljmp
inc
push
mov
rdtsc
jb
adc
dec
dec
inc
add
xchg
mov
sub
pop
scas
cmp
or
aaa
xchg
fsubs
add
inc
dec
cmp
add
jmp
fisttps
imul
lcall
aas
xor
ficoml
loop
mov
add
xor
xor
dec
and
subl
push
shlb
lock
jge
push
mov
ja
mov
or
cmp
orb
lock
cmp
js
sbb
xchg
cmp
mov
mov
add
push
cmp
loop
pop
and
insl
outsb
ficoms
mov
scas
jmp
xor
scas
cmp
addr16
xor
xor
dec
shll
jbe
add
loop
adc
fbstp
push
iret
sub
inc
inc
sbb
xor
dec
pop
add
out
lret
ret
cmp
mov
mov
fwait
lea
hlt
add
ret
push
sti
fnsave
pop
sarl
mov
xchg
daa
sbb
add
or
push
adc
sbb
mov
out
outsb
adc
pop
cmp
push
cmp
cwtl
mov
xor
adc
loopne
push
dec
mov
data16
jg
or
outsl
xchg
or
or
js
lret
je
mov
cmp
repnz
ret
js
lds
jp
pop
cs
das
xorb
adc
xor
ret
addr16
mov
adc
jo
xlat
inc
sub
nop
push
imul
mov
cmp
lcall
ret
test
adc
sbb
mov
add
xchg
pop
scas
or
lock
repz
mov
pop
mov
popa
pop
sbb
xor
std
adc
dec
sub
xor
adc
mov
fmull
aaa
in
punpckhbw
pushf
pop
xchg
les
lea
iret
mov
xchg
jle
jle
fnstcw
push
pop
lods
cmp
fwait
lahf
cli
or
adc
lea
mov
cmp
sub
cmp
sub
fwait
cmp
mov
add
cmp
mov
cmp
xlat
mov
jecxz
jmp
sub
sub
and
jb
adc
fwait
push
nop
add
testb
push
outsl
jle
xor
call
xor
mov
repz
sbb
lcall
jg
rcl
xor
xor
xor
xor
cs
lcall
pop
jecxz
fwait
xor
xor
xor
xor
les
xor
xchg
xor
push
jns
cmp
inc
cli
adc
pop
push
cmp
cmp
xchg
sahf
jne
push
sub
mov
mov
mov
stos
pop
cmp
outsl
pop
ja
xchg
push
add
loopne
inc
inc
aas
pop
aaa
mov
lahf
jo
dec
xchg
mov
xor
addr16
jg
add
add
xor
add
and
push
daa
pop
cltd
or
and
repz
mov
je
cmp
sbb
jl
jge
mov
daa
icebp
jg
jmp
inc
ret
cmpb
cmp
rclb
mov
adc
and
cmp
shlb
ds
add
lret
pop
mov
pop
iret
cmp
sahf
sti
xor
loope
dec
xor
add
loop
pop
sub
das
xor
xor
lock
cmp
or
xor
inc
out
and
adc
and
dec
cli
dec
std
lret
int
push
mov
cmp
add
cmp
inc
movsb
add
mov
int
loopne
pop
add
in
and
jge
inc
xor
mov
les
call
arpl
rolb
sub
rclb
shll
cmp
inc
pop
add
shll
pushl
js
jg
ss
cmpsl
sub
fbstp
push
cmp
ret
cmp
pop
clc
fists
cmp
xchg
dec
cmp
ret
add
mov
mov
pop
iret
cmpsb
xchg
movsb
scas
scas
icebp
jmp
repnz
or
pop
dec
iret
out
or
cmpl
add
das
pop
inc
jmp
repz
cs
mov
mov
add
push
mov
dec
sbb
xor
call
xor
daa
sbb
loopne
arpl
xor
fs
push
mov
loop
clc
leave
ret
insl
ss
xchg
cmp
mov
aas
adc
push
jecxz
js
mov
cmpsb
cmp
inc
xchg
sbb
imul
ror
incl
sub
xchg
hlt
mov
ret
je
rcl
scas
repz
push
add
mov
lea
mov
mov
stos
or
pop
mov
loope
stos
or
inc
decb
dec
sbb
push
or
inc
test
inc
adc
xor
pop
ret
and
ret
dec
mov
fcomip
pop
xor
clc
push
cli
xchg
das
das
xor
aaa
inc
xor
loope
mov
sbb
pop
test
lret
push
hlt
pop
shrb
aaa
mov
ret
push
pop
bound
aaa
mov
loope
push
pop
scas
push
inc
clc
subb
je
xchg
mov
lret
fucomip
stos
push
hlt
mov
adc
and
xor
mov
pop
inc
push
leave
lret
pop
xor
or
adc
push
inc
repz
mov
rcrb
loop
cmc
out
dec
pop
mov
push
mov
cmp
addl
mov
mov
pop
imul
jecxz
icebp
jmp
addr16
dec
mov
lea
mov
jmp
incl
out
cmp
cmp
cmp
jno
jg
dec
xchg
pop
fsubrl
push
jl
dec
jl
imul
cmp
mov
stos
add
mov
je
jl
mov
cmpsb
aad
iret
incl
push
daa
scas
lock
lret
data16
test
cmpsb
daa
into
pop
repz
sbb
pop
jae
xor
pop
cmp
and
ret
sarb
cmp
inc
sub
out
xchg
adc
movsb
sub
xchg
cmpsl
and
cmpsb
inc
lock
adc
lock
push
mov
lods
xor
unpckhps
addb
lods
sbb
cmp
jne
mov
sub
pop
stos
dec
pop
or
das
sahf
pop
rcll
xor
cmp
aas
or
jle
lahf
mov
or
xor
stos
les
sub
add
push
loope
jp
or
add
aaa
fstpl
xchg
mov
cmc
or
sahf
jno
and
cmp
roll
mov
jmp
movsl
cmp
popa
test
lock
dec
push
adc
mov
jp
or
xchg
xorb
add
mov
pop
add
out
xor
fsubp
push
mov
test
addb
or
shrd
or
cmpsb
shlb
aam
repz
cmp
pop
xor
xor
movsl
inc
jmp
icebp
sarl
xor
xor
xor
outsl
sub
cmp
dec
xor
pop
repz
jns
mov
xchg
mov
mov
out
cmc
add
jmp
addl
dec
outsb
push
inc
add
ret
sar
ret
dec
out
xor
xor
repz
out
jl
mov
out
ss
aaa
cmp
dec
mov
cltd
jg
jl
cmp
das
jmp
add
shlb
daa
adc
hlt
pop
lock
mov
test
aaa
loope
testl
icebp
xchg
sbb
xchg
cmp
les
cmp
and
shlb
push
push
pop
imul
scas
and
cmp
scas
icebp
jmp
out
inc
loope
cld
sub
arpl
lea
lods
jnp
cmp
jno
imul
stc
cmp
ret
and
mov
jo
adcl
cmpsl
ljmp
loop
cmp
xchg
dec
jnp
sbb
pop
jg
cmp
inc
mov
imul
sbb
add
popf
cmp
scas
jne
icebp
xchg
pop
ds
mov
cmc
movl
ds
andl
jae
mov
mov
mov
cmp
xlat
adc
mov
xchg
or
dec
das
xchg
scas
mov
ficompl
push
push
pop
aas
add
mov
fdivrl
pop
mov
aaa
push
aaa
pop
aaa
push
mov
cwtl
or
mov
add
aaa
add
sbb
sub
pop
js
cmp
aaa
dec
iret
pop
sahf
test
outsl
outsb
aas
xorb
js
sbb
movsb
and
cmp
in
or
arpl
cmp
lret
sbb
pop
es
push
inc
xchg
jl
or
jg
add
push
or
cmp
stos
push
movsl
dec
loope
sub
arpl
mov
lods
add
int3
jae
mov
iret
das
or
jb
mov
mov
fistl
jb
and
sbb
mov
les
outsl
mov
popl
xor
call
or
inc
cmpsl
icebp
sub
stos
push
decl
cmc
dec
xor
xchg
ss
xor
rolb
leave
jg
add
cmp
ljmp
sti
cmp
daa
cmp
push
cmp
stos
mov
mov
aad
fcos
loope
cmp
or
js
je,pn
bound
sbb
repz
popf
push
mov
sbb
cmpsl
out
jnp
mov
sbb
dec
and
sahf
mov
imul
hlt
xor
xor
inc
dec
xor
jg
cmp
xchg
jmp
pop
xchg
pop
jmp
mov
xlat
pushf
xchg
xchg
fdivs
loopne
divb
pop
daa
test
imul
je
pop
xorl
es
jg
jl
dec
xor
mov
dec
aaa
std
sbb
xor
inc
pop
test
cli
and
mov
lock
out
cmp
scas
scas
mov
js
mov
push
daa
cs
push
sub
mov
mov
inc
dec
sub
idivl
xchg
sahf
test
addr16
sbb
inc
mov
orl
iret
bound
jge
mov
hlt
add
inc
sub
clc
pop
stos
test
mov
arpl
pop
add
sbb
out
mov
or
daa
adc
push
push
sti
mov
xchg
out
push
cmp
out
mul
add
loopne
add
lret
inc
das
dec
jecxz
call
pop
inc
push
repz
fisttpl
xchg
inc
sub
add
movsb
das
xor
xor
aam
cmp
mov
addr16
sahf
shr
ljmp
mov
lret
movsb
push
jno
mov
pop
imul
hlt
mov
sbb
xchg
push
adc
and
adc
and
xchg
jg
pusha
push
movsl
mov
sub
sub
xor
mov
fildll
or
sbb
jo
addr16
and
sub
sbb
stos
cmp
dec
hlt
add
push
lcall
xchg
dec
push
jl
or
xchg
mov
pop
not
add
fwait
dec
fwait
movsl
inc
lret
xor
pop
adc
movsb
out
jno
sub
add
add
push
dec
cmp
inc
aas
sbb
imul
cli
ffree
mov
mov
jae
inc
pusha
adc
pop
mov
aas
adc
or
mov
mov
mov
test
ret
and
push
sbb
ljmp
mov
and
push
dec
vmovntps
cwtl
addr16
movsl
sub
je
mov
ljmp
adc
push
add
hlt
mov
xchg
mov
test
add
xor
add
and
sti
pop
inc
test
sub
inc
sub
and
div
sub
test
jmp
inc
test
out
xchg
cld
mov
add
test
push
jecxz
ret
inc
fcmovnb
sub
inc
add
shrb
stos
xor
jecxz
orb
or
mov
decb
add
aam
stos
adc
or
or
adc
push
paddq
iret
inc
icebp
and
ljmp
push
bound
xor
and
and
pusha
js
jle
pop
xor
mov
pop
cmc
lret
jb
stos
xor
loop
out
jl
or
add
pop
xor
pop
sbb
and
lahf
les
cmpsl
inc
xor
pop
lahf
les
jg
xchg
out
mov
hlt
inc
adc
ret
inc
aam
inc
rorl
and
xor
popa
xor
mov
xor
xor
ret
mov
ss
pop
test
dec
jbe
mov
ret
test
sbb
add
lahf
mov
call
stc
imul
mov
xor
mov
cmp
mov
int3
loop
stos
dec
jb
add
xchg
ljmp
cmpsb
scas
test
cmp
jbe
inc
shlb
mov
sbb
dec
test
and
adc
mov
jmp
xor
andb
cmpsb
cmp
adc
or
adc
gs
xchg
mov
lea
mov
add
inc
js
adc
push
mov
jbe
or
and
aas
shll
comiss
dec
shll
clc
std
lcall
sub
inc
fiaddl
pop
add
or
mov
pop
xorb
push
mov
out
add
mov
and
loopne
or
inc
lock
and
add
test
inc
js
imul
das
in
mov
mov
dec
or
dec
mov
jns
in
mov
mov
add
lock
pop
dec
enter
nop
ja
and
lahf
adc
push
push
inc
pop
add
dec
xor
push
mov
push
frstor
or
mov
imul
adc
mov
adc
push
mov
dec
pop
pop
adc
add
shrb
push
and
inc
xchg
mov
jo
outsl
push
add
adc
adc
lods
inc
jne
sbb
ljmp
addr16
mov
or
adcb
push
je
jmp
sub
rolb
sub
push
mov
subl
mov
sbb
incl
or
xor
inc
sbb
push
lods
test
mov
dec
xorl
adc
jecxz
or
fldt
lret
add
adc
and
xor
adc
pop
sbb
outsl
and
js
inc
shll
xor
xor
js
pop
pop
adc
popa
jmp
in
test
int3
xchg
sub
or
and
jle
test
popf
repnz
jae
push
ret
popa
cmp
mov
xor
sbb
jnp
aas
aam
dec
sbb
push
dec
fisttpl
jecxz
inc
pop
dec
adc
adc
int3
or
cltd
adc
or
dec
sub
popa
pop
cmp
outsb
xor
pusha
jns
popa
mov
jno
inc
or
mulb
xchg
mov
adc
sbb
cwtl
or
jae
aam
sbbl
dec
pop
nop
xchg
or
push
fimuls
pop
mov
lods
or
rcrl
sti
arpl
pop
sub
inc
xchg
lock
inc
dec
push
std
dec
fisubrs
or
sub
adc
dec
test
jmp
push
ss
incl
push
pop
mov
inc
int
psubsw
imul
fwait
inc
ljmp
shll
push
das
xor
inc
leave
pop
clc
xchg
outsl
cld
jmp
xchg
xchg
setl
leave
lahf
test
out
add
dec
jns
or
add
or
or
add
xchg
dec
sbb
and
sub
fstl
push
add
and
dec
loope
mov
push
adc
jb
mov
sbb
adc
mov
scas
out
popl
sbb
add
lods
adc
push
add
mov
add
jne
mov
xor
jb
in
int3
mov
pop
test
cs
lcall
inc
shlb
shrl
push
test
into
fimull
inc
jo
smsw
adc
push
add
or
jmp
aas
jmp
call
mov
pushf
movsbw
mov
cmp
popl
lea
mov
sarl
out
mov
push
ds
cmp
add
adc
stc
mov
adc
clc
cwtl
cmc
cmc
mov
inc
xchg
mov
dec
xor
fs
jmp
inc
imul
cld
cmp
insl
ljmp
jg
gs
adc
mov
shl
das
outsl
inc
push
jmp
shl
mov
jmp
lods
test
btc
stc
mov
call
add
and
btc
inc
cs
mov
add
add
xlat
lods
shl
jmp
call
frstor
mov
jmp
sub
in
inc
mov
stos
xchg
jp
and
shll
mov
jle
js,pt
jmp
mov
mov
cld
pop
addl
mov
int
inc
sub
cmpsb
fldl
ja
inc
or
mov
mov
int3
add
push
mov
sti
push
mov
les
mov
es
adc
scas
jns
andl
adc
xor
incb
cmpsb
push
inc
or
loopne
or
call
imul
dec
sti
add
dec
cmp
test
jbe
inc
or
cmpl
sbbl
pop
or
pop
rcl
push
xchg
fiadds
xchg
pop
leave
imul
inc
pop
push
xor
inc
inc
mov
sbb
lds
mov
shrb
add
push
sub
push
or
inc
mov
mov
push
push
mov
dec
ds
mov
adc
adc
iret
dec
movsb
mov
or
cmp
add
stos
or
xor
mov
push
dec
xor
mov
or
dec
mov
xchg
mov
push
xor
ffree
insl
push
call
iret
inc
gs
push
mov
cmpsb
xor
or
rcl
jns
cmp
js
loope
out
in
sbb
push
dec
or
mov
lahf
and
sub
mov
pop
test
push
aaa
js
fst
push
xchg
shll
adc
mov
xor
pop
fisttpl
push
inc
rorl
adc
push
push
add
cltd
cmp
dec
insl
cmp
enter
bound
pop
xor
ret
jg
lret
push
jp
adc
arpl
pop
not
sbb
sub
push
and
sbb
xchg
push
inc
sub
sbb
loopne
mov
aam
mov
push
cmp
xchg
sub
mov
inc
push
push
out
iret
inc
testb
xchg
sbb
lcall
and
push
xor
call
and
and
sub
mov
mov
or
xchg
testb
cld
mov
hlt
push
movsl
cmp
pop
jg
int3
xor
push
push
adc
std
mov
incb
cmp
add
push
dec
nop
outsb
sub
and
inc
lock
inc
pop
or
jae
or
or
movsb
adc
jns
repz
add
push
lea
xor
loop
sbb
dec
mov
mov
mov
inc
popf
push
pop
inc
sub
or
leave
cmp
fs
sarb
and
fdiv
xor
pop
inc
sbb
dec
xor
es
movsl
sbb
sub
add
push
nop
mov
jnp
mov
imul
push
fs
shll
rorb
push
mov
sub
enter
les
xor
out
cmpsl
pop
sub
ljmp
mov
lahf
or
and
ljmp
popa
xor
push
push
xor
cmp
das
inc
imul
dec
push
and
push
push
js
call
push
add
mov
inc
scas
pop
or
dec
push
jl
sub
sbb
int3
call
pop
shrb
addl
add
xor
cmp
andl
sbb
and
cmp
and
sub
fs
inc
add
inc
xor
xor
inc
cmp
cmp
inc
cmp
inc
cmp
inc
or
add
ret
orb
sub
ljmp
adc
jo
and
push
pop
push
lret
mov
push
pop
push
add
in
leave
sar
addr16
push
lea
jmp
lea
inc
xchg
jne
sub
pop
sar
push
xchg
movsb
jno
or
push
push
std
cmc
ja
sahf
pop
addr16
lock
adc
fists
and
add
clc
ja
add
dec
jo
fnstsw
jmp
out
testl
adc
add
jae
add
lea
enter
shl
stos
scas
push
test
push
pop
adc
mov
mov
insl
mov
xchg
imul
test
test
add
lea
add
or
or
push
std
rol
add
rcll
xchg
ss
xor
ds
decl
lret
hlt
dec
push
lock
out
add
incl
std
lea
push
ja
lea
push
push
daa
adc
jmp
sbb
push
test
add
fists
clc
jg
mov
adc
aaa
sbb
shrb
fs
jecxz
add
mov
jns
add
sbb
je
rcrb
sbb
in
jge
sub
add
pop
or
movl
ret
xor
lea
and
mov
mov
dec
ljmp
mov
push
push
call
lea
pop
or
inc
mov
or
ja
mov
pop
jge
call
sub
lock
loopne
leave
pusha
pop
jle
outsl
cmp
inc
aad
xor
cmp
pop
add
jmp
inc
add
ss
mov
add
push
icebp
ret
jae
push
push
push
jne
call
mov
adc
jne
sub
jnp
push
into
xor
mull
xlat
adc
mov
add
cmpl
testb
jo
inc
push
inc
mov
jno
cmp
push
mov
pop
push
js
jg
xor
loopne
jge
movsl
dec
aas
or
ficoms
mov
or
xor
aaa
push
rorl
gs
add
enter
movsl
or
sbbl
lahf
clc
sub
pop
jmp
and
or
and
xor
jp
sbb
loop
inc
sub
sub
imul
das
dec
stos
push
xorb
inc
ficoms
lds
mov
sub
ret
ret
mov
or
ret
or
pusha
lahf
js
inc
bound
mov
int3
cmp
xor
das
lret
sbb
nop
sub
lock
xchg
xor
add
aad
cmp
out
ljmp
and
and
pop
and
lret
lea
loope
cmp
cmp
dec
inc
cmp
jl
pop
dec
add
call
xor
sub
dec
pop
rcrl
repz
in
call
cmp
ss
or
popa
sbb
pop
jmp
dec
test
push
sub
paddb
and
jmp
add
mov
xadd
je
cmp
aad
in
hlt
roll
inc
push
pushfw
mov
mov
cmp
call
mov
xchg
sub
push
fwait
add
jge
add
out
jb
jmp
sbb
jne
add
or
fisubrl
adc
jl
pushf
movl
or
repnz
inc
in
std
pop
mov
cwtl
movb
int
adc
cmp
and
leave
aad
xor
mov
icebp
push
negl
nop
add
outsl
cmpb
add
xchg
jl
xchg
jl
pop
xor
lret
jns
cwtl
sub
out
or
rdtsc
loopne
mov
inc
pusha
add
dec
or
jmp
mov
jne
or
xor
push
int3
inc
lret
jo
xchg
sarb
or
subb
jo
orl
mov
cltd
mov
lea
aam
loopne
mov
roll
mov
gs
add
movsl
add
push
jle
mov
clc
push
ja
addb
addl
push
xlat
adc
pusha
rorb
adc
inc
punpckldq
add
or
movb
add
test
cmp
xchg
stos
add
scas
adc
push
fimull
jno
pop
out
lds
std
stc
es
mov
push
cmpsb
cmp
sub
fwait
lods
sub
je
sbb
les
add
mov
xchg
ret
or
sbb
or
int3
sbb
or
sub
cltd
test
sub
leave
push
sbb
xchg
push
inc
push
xor
lods
cltd
cld
inc
pop
push
pop
sarl
add
push
push
ljmp
test
insl
cld
clc
dec
hlt
je
imul
movsbl
inc
lea
stos
add
or
jns
mov
ljmp
push
punpckhdq
pop
inc
jno
dec
mov
or
sbb
push
adc
mov
and
jae
loop
popa
push
ds
xor
push
aam
or
iret
int3
movd
shlb
mov
fwait
jbe
add
mov
insb
adc
outsl
and
pop
outsl
push
inc
push
inc
clc
inc
je
pop
jmp
push
xor
or
jne
clc
ret
dec
stos
lea
test
in
xchg
pushf
in
mov
insb
cmp
sub
mov
add
mov
add
push
ss
xchg
fstps
out
add
xchg
fistps
pop
pop
dec
ret
push
mov
test
jp
sub
push
push
xor
icebp
roll
lcall
mov
test
pop
jmp
call
repz
pop
insl
adc
mov
cld
inc
push
orb
xlat
push
mov
xor
push
and
xor
leave
mov
pop
cmpsl
popa
jnp
mov
xor
pop
or
in
push
mov
pop
sbb
and
xor
rorl
mov
mul
jo
inc
loopne
jo
jle
lock
sbb
shr
lock
jecxz
mov
mov
outsl
sbb
cmp
fisubrl
fs
mov
inc
or
call
and
outsl
and
xor
je
xorb
dec
xor
or
mov
arpl
push
inc
movl
add
sarb
sub
fdivrs
mov
add
mov
int3
or
jnp
or
jbe
pop
sub
cmp
je
fwait
in
inc
and
or
fisttps
xchg
dec
jmp
testb
insl
addr16
jg
dec
jmp
push
pop
push
push
push
mov
pop
test
inc
idiv
push
nop
ret
mov
add
daa
test
or
enter
xchg
fadd
das
es
push
loop
enter
push
mov
dec
cs
push
xor
push
pop
add
sub
js
mov
clc
or
dec
pop
aam
cmp
sbb
es
sbb
stc
or
adc
xor
es
push
mov
int3
fs
add
js
mov
mov
adc
sbb
and
loopne
cmpsb
out
jmp
outsl
shl
sub
mov
sbb
lds
aam
dec
push
fucomi
ljmp
aam
fists
data16
addr16
mov
sub
jne
rclb
push
call
in
jne
nop
sbb
hlt
sarb
fnstsw
lea
loopne
jl
ljmp
mov
call
rcl
aam
hlt
and
mov
movsb
adc
push
mov
fisubl
roll
sub
mov
adc
adc
adc
add
mov
cmp
mov
add
mov
sub
sub
sets
push
lods
sbb
add
and
cmpsl
aaa
insb
fsubl
repz
scas
mov
push
add
mov
adc
inc
fiadds
cmp
cmp
popa
sarl
cwtl
fcompl
push
lds
and
sbb
setle
fisubrs
mov
pusha
inc
or
push
jne
xor
sub
ret
or
cwtl
mov
xor
int3
or
js
test
aas
fsubr
daa
push
adc
in
xchg
sub
bound
push
stos
pop
insl
inc
xor
sti
pop
pop
sbb
loop
shll
pop
cmpsb
push
fs
fmull
notl
push
inc
cld
push
lods
daa
inc
movb
add
fisttpl
sub
and
inc
mov
dec
push
xor
fisubl
push
ret
push
and
cmpl
xchg
xchg
add
add
out
filds
add
and
cmp
rorb
cmp
cltd
add
sbb
jo
jns
insl
pop
dec
xchg
pop
and
push
mov
mov
jae
pop
mov
jmp
cmp
jb
out
inc
mov
inc
repnz
adc
sbb
aam
push
outsl
inc
add
cmp
rol
xor
adcw
jg
cmpsl
pop
out
mov
enter
cmp
rolb
notb
inc
or
jbe
xchg
dec
or
stc
jb
xor
cmp
jb
daa
sbb
addl
out
mov
lods
jp
test
xor
add
or
clc
shlb
adc
and
cmp
push
xchg
data16
jnp,pn
es
xor
js
dec
xchg
repz
testl
loopne
mov
mov
sbbb
cltd
cmp
ret
mov
int3
arpl
shrl
enter
das
movsb
dec
movsb
jne
divb
iret
mov
pop
clc
or
adc
inc
sbb
add
loop
decb
jge
clc
nop
push
push
mov
imul
imul
fcmovnb
jmp
hlt
add
cmp
jmp
jne
add
aaa
adc
unpcklps
mov
int
dec
lock
mov
and
jne
mov
test
add
dec
add
fnstsw
xchg
and
div
xadd
push
in
and
mov
or
lock
clc
insl
sbb
sbb
and
adcb
mov
stc
add
mov
enter
popa
inc
xor
nop
cmpsb
jmp
jg
ficompl
paddsb
adc
call
lret
mov
jg
loopne
int3
cs
dec
leave
psubq
adc
in
fcompl
mov
jo
imul
div
mov
fistpll
mov
sub
nop
dec
pop
ret
mov
mov
push
out
push
adc
icebp
insb
fs
or
sub
enter
mov
adc
add
push
xchg
cmpsl
stc
test
and
add
jnp
jns
out
in
jmp
dec
repnz
rcrb
out
mov
pop
js
pop
cs
mov
dec
shll
ljmp
xor
shll
push
ds
imul
dec
xor
aaa
call
mov
push
repnz
fcmove
mov
mov
cmp
dec
shll
call
ss
adc
inc
imul
imul
sub
hlt
or
push
push
cbtw
cmpsb
imul
xor
fcmove
push
cmp
jns
addr16
sub
push
push
cmp
loop
aam
cmpsb
movb
out
xchg
test
jne
ja
sub
repnz
lods
pop
or
rclb
add
add
bound
ss
or
shlb
bound
dec
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jp
repnz
pop
sbb
push
push
addr16
and
mov
mov
dec
xlat
in
call
mov
xchg
sbb
pop
pop
mov
push
add
and
jae
adc
push
push
add
iret
pop
pop
xchg
xor
outsl
push
adcb
pop
add
mov
add
dec
popa
push
movsb
push
cwtl
inc
cs
push
lret
inc
insb
insb
mov
lahf
add
movsb
testb
imul
xor
xor
mov
lods
mov
xor
xor
sub
imul
adc
push
inc
add
pop
aaa
ds
mov
aad
xor
jge
push
mov
xchg
ret
add
pop
inc
int
inc
rorb
fcoml
dec
sub
aas
sahf
or
icebp
inc
mov
cmpb
sub
jg
popa
fs
mov
stc
jae
fdivs
dec
inc
adc
push
push
inc
push
push
push
fwait
add
incl
or
dec
cmp
cld
ret
push
push
jae
fs
popa
sub
ljmp
pop
jne
pop
jbe
jb
shll
popa
xchg
fcmovnu
and
jo
xlat
add
cltd
jbe
mov
add
push
fstpt
in
outsb
and
jle
xor
dec
adc
out
push
imul
aam
stos
sbb
pop
inc
push
pushw
aas
int3
push
popa
and
test
loopne
fwait
xor
push
push
nop
movsb
cltd
xchg
inc
mov
aam
sub
pop
in
aas
fsubr
sub
std
xor
pop
add
mov
rcrb
out
jo
dec
and
and
and
fs
mov
jp
and
push
push
xchg
xchg
data16
ja
mov
leave
rolb
cmp
mov
pop
cmpsb
mov
daa
enter
mov
xor
cmp
movsb
imul
push
movsb
and
nop
xor
mov
sub
push
add
mov
xchg
xchg
add
mov
daa
outsb
push
imul
cmp
lret
mov
sti
movsl
enter
add
xor
cmp
sarb
add
je
sbb
roll
inc
add
cmpsb
and
lret
fistps
jbe
add
jo
clc
inc
push
dec
inc
dec
jnp
das
mov
or
inc
add
or
dec
adc
add
dec
inc
push
xchg
jno
mov
imul
mov
gs
jae
push
adc
mov
xchg
in
out
adc
pop
jle
push
dec
fwait
jg
add
add
and
push
sub
mov
push
adc
aas
aas
xor
inc
pop
push
add
push
add
cld
mov
add
jbe
ja
jnp
adc
pop
fadd
mov
aaa
dec
dec
adc
xchg
xor
aaa
add
insb
cmp
mov
inc
mov
dec
push
push
inc
push
cmp
mov
add
in
pop
pop
clc
aaa
hlt
shlb
gs
jb
pop
gs
add
pop
jo
mov
add
sub
push
fs
pop
cmp
rcr
pop
inc
mov
mov
push
addr16
xor
arpl
test
dec
push
sbb
out
imul
shl
faddl
aaa
add
arpl
lcall
cmp
ret
lods
sbb
xchg
movsb
jno
adc
je
add
stc
dec
insb
jmp
enter
outsb
pushf
in
xor
test
or
xor
pushaw
fcmovne
inc
mov
jp
dec
faddp
xchg
jns
shlb
call
andl
je
jnp
sub
or
sub
outsl
jb
ja
push
push
testl
mov
jno
xor
jno
add
inc
call
aaa
adc
ss
fwait
subb
push
sub
je
pop
dec
movsl
sbb
pop
inc
cmp
addr16
inc
inc
push
cmpsl
das
ja
out
dec
push
test
inc
jmp
insb
data16
push
sbb
mov
add
orl
shlb
test
adc
xor
dec
popa
jecxz
push
push
pop
mov
out
adc
pop
xchg
xor
inc
in
cmp
sahf
sbb
and
add
lea
fwait
add
fisttpl
aad
push
fiaddl
jecxz
add
pop
xor
add
cmp
fstpt
clc
sub
pop
add
insb
cmp
loope
add
aaa
dec
iret
cmpl
lds
mov
ja
add
jecxz
imul
add
cmp
daa
inc
add
daa
sub
stos
inc
dec
dec
das
inc
pop
pop
inc
js
cmpl
inc
mov
xor
stos
mov
dec
mov
cs
inc
push
popf
mov
add
add
sbb
loope
test
andl
insb
flds
addb
inc
push
dec
inc
inc
xor
gs
or
aas
add
mov
mov
dec
and
add
xor
rorb
fiadds
add
sub
add
add
pop
push
jo
mov
imul
or
add
mov
or
add
cmp
dec
das
add
enter
js
enter
nop
add
mov
inc
enter
loopne
mov
add
nop
and
xor
sbb
inc
push
xchg
subb
inc
or
mov
repz
xchg
or
pop
or
cmp
fs
mov
xor
pop
subb
jle
push
xor
push
lea
mov
xchg
xor
jg
fwait
inc
mov
dec
cmp
and
pop
js
pop
jb
dec
adc
dec
adc
xor
xchg
xchg
pop
push
add
leave
in
pop
and
test
add
sub
adcb
xor
fucom
pop
jno
orb
ret
ret
dec
pop
and
test
loopne
jg
push
sub
cmp
rcr
cmp
js
add
cmp
aad
lret
cmp
clc
je
cmp
out
jg
xchg
jge
xchg
nop
fildl
pop
cmp
les
add
testl
inc
dec
xor
clc
dec
cmp
fistl
in
dec
incl
pusha
outsl
sbbl
shll
mov
test
hlt
int3
iret
test
mov
xor
xor
movl
dec
int3
popl
fidivl
dec
sarl
shl
mov
add
mov
xchg
add
popa
adc
insl
bound
cmpl
inc
push
or
pop
rorb
inc
repnz
dec
int3
call
int3
sarl
jg
andl
loopne
in
mov
xor
roll
mov
aas
enter
push
hlt
inc
aas
sbb
in
jg
add
sbb
in
jg
mov
push
sub
aam
cmpl
lcall
push
push
orb
mov
test
aas
inc
hlt
cmp
push
dec
rolb
push
shll
aas
pusha
jno
addb
inc
aas
mov
inc
nop
xorl
mov
xchg
push
and
xchg
cld
ds
mov
adc
mov
rolb
pop
rolb
xlat
mov
aas
iret
jge
sbbl
jge
mov
jge
aas
sbb
fisubs
cmpb
je
jbe
push
ret
pop
inc
mov
xchg
fdivrs
pop
call
inc
andl
sar
adc
aas
test
ja
roll
or
sbb
inc
jg
jno
xchg
addb
sub
fnstsw
sub
cmp
popf
mov
push
jg
sub
xchg
xchg
pop
popa
enter
mov
jg
cmp
clc
aas
lock
loopne
xchg
inc
dec
xadd
in
cs
add
and
sub
add
sub
sbb
sbb
out
pop
dec
sbb
sbb
lahf
mov
or
nop
adc
jo
jno
stos
pop
lods
bound
movsl
adc
xor
add
dec
pop
inc
pop
jmp
sub
ja
xor
pusha
sbb
push
cmp
xor
jne
inc
fsubs
sub
sbb
je
xlat
jo
mov
test
mov
pop
faddl
insl
jg
popa
add
test
test
add
pop
fsts
push
mov
clc
inc
lea
push
rol
sti
xchg
je
xor
jo
dec
enter
xchg
mov
ret
mov
pop
rolb
das
jg
mov
push
in
jg
adc
dec
adc
hlt
jo
les
inc
test
iret
push
das
enter
ret
pop
das
xor
mov
pop
clc
dec
and
rclb
das
nop
je,pn
xchg
fbstp
lods
or
jg
xor
mov
lahf
das
je
add
cmp
vpminub
xchg
das
nop
push
mov
sarl
adc
call
das
mov
icebp
clc
add
pop
cmp
das
mov
inc
mov
movsl
lods
pop
das
pop
je
ja
das
add
dec
pop
adc
jl
push
mov
sub
push
loopne
iret
xor
loopne
psubb
loopne
adc
sub
mov
lret
ror
cmp
jns
push
cld
jg
mov
xchg
cmp
lock
loopne
leave
jae
xadd
addb
push
enter
adcb
das
push
mov
adc
lahf
iret
pop
ret
cmp
xchg
push
sub
sbb
sahf
and
add
addb
push
ret
pop
loopne
push
orb
pushf
jg
clc
mov
rclb
adc
inc
insl
mov
inc
sbb
mov
sub
dec
mov
pusha
or
ss
pop
lahf
pop
out
xor
pop
cld
loop
dec
push
and
dec
mov
int3
test
sti
in
mov
ja
push
add
jmp
pop
xchg
mov
jg
clc
or
repnz
add
inc
shrl
add
int
sbb
inc
push
iret
xchg
mov
and
jp
and
popa
inc
js
inc
xlat
mov
stos
cs
iret
in
js
dec
mov
pop
push
lea
pop
push
sub
repz
push
ja
out
out
outsb
mov
out
stc
add
mov
adc
addb
adc
mov
xor
cmp
push
stos
je
pop
xchg
out
cld
enter
into
pop
dec
inc
push
test
inc
jg
clc
sbb
fcompp
testl
movsb
jnp
mov
pusha
or
aad
fidivs
lock
push
ret
add
mov
mov
mov
or
movsb
addl
imul
xchg
push
add
inc
setae
inc
push
dec
adc
das
fcomip
std
popf
dec
sbb
movsl
dec
daa
lods
dec
mov
dec
btr
dec
adc
fsubrp
add
sbb
dec
dec
stos
push
adc
mov
sbb
sti
out
jnp
push
addr16
push
add
sbb
mov
clc
das
mov
add
testl
pop
sub
mov
daa
mov
mov
mov
and
bound
add
ss
lods
popa
xor
push
fcomip
lcall
mov
push
add
push
inc
pop
iret
enter
pop
sbb
adc
sti
pop
xlat
ret
add
pusha
sbb
arpl
mov
into
push
les
shrb
fbstp
xor
lret
add
jno
jb
int3
jne
shlb
js
das
sarb
add
inc
das
outsb
dec
push
pop
mov
inc
add
lahf
jae
jl
pop
imul
aas
js
jns
aas
jne
out
shl
ja
pop
add
xchg
inc
jg
lret
jg
pop
add
jge
lds
add
jp
jp
add
jge
add
aas
clc
jle
jnp
jg
ret
jle
xchg
add
andb
xchg
xchg
mov
imul
jb
mov
push
adcl
outsl
stc
fistpll
enter
aam
pop
xlat
mov
fmuls
jg
mov
pop
aas
mov
mov
lea
test
nop
insl
add
nop
lahf
fistl
pavgb
cld
mov
daa
les
xchg
js
jge
decl
lcall
xchg
pop
rcrl
ljmp
arpl
cwtl
data16
imul
jecxz
fdivp
std
xchg
jne
dec
in
jg
mov
xlat
movsl
repnz
out
std
pop
shll
xlat
test
add
stos
mov
lods
xchg
mov
scas
pushf
out
xchg
add
mov
mov
mov
popf
jg
imull
pop
loop
adcb
add
lods
outsl
in
mov
mov
add
mov
add
mov
cmp
ds
mov
addr16
mov
pmullw
out
sarl
mov
ljmp
mov
mov
mov
mov
cmpsl
add
rorl
stos
aaa
lds
std
jecxz
mov
in
lret
int3
mov
out
sarb
pop
fcmove
ret
aas
into
rclb
fstpt
aad
add
fcmovne
add
aad
hlt
fistl
out
add
push
out
loopne
std
sti
mov
outsl
loope
pop
in
add
in
hlt
call
mov
icebp
out
add
jmp
add
in
imul
call
incl
js
lock
cli
cmc
repnz
clc
testb
in
sbb
std
add
dec
cltd
scas
add
imul
push
es
xchg
aas
cmp
add
shr
pop
fisubrl
daa
push
push
pop
and
test
push
mov
sti
mov
and
xchg
push
stc
mov
cmp
lock
je
or
adc
xlat
push
sbb
clc
pop
push
push
adc
or
push
sbb
fdivr
cmp
adc
push
or
or
mov
ljmp
adc
xchg
stos
mov
xor
jg
and
cmp
cwtl
mov
add
add
mov
iret
int
lahf
jbe
xor
sti
aas
adc
addr16
mov
lret
iret
rcl
rcl
aam
stos
outsb
xor
aas
push
xlat
and
rol
shlb
ljmp
jl
aam
aad
aam
push
or
push
mov
mov
jp
lret
int3
sar
rclb
add
aam
pop
push
add
xlat
stc
jne
hlt
push
daa
sar
inc
in
loopne
jp
into
xchg
pop
mov
inc
add
decb
mov
or
cmp
repz
add
lret
rcr
mov
xchg
add
inc
cmpl
jge
imul
add
stc
sbbl
jge
scas
stc
imul
adc
cmpl
es
stc
jo
inc
outsb
stos
std
rolb
cs
jnp
mov
dec
sti
adc
outsl
push
pusha
mov
out
add
cmp
add
rcll
jnp
dec
add
js
mov
sarb
push
xchg
lock
sar
xlat
push
sub
imul
jg
and
roll
inc
in
pop
pop
xchg
push
pop
add
jg
aam
jle
roll
iret
mov
int
gs
sub
adc
movups
sbb
iret
or
das
add
add
outsb
fdiv
inc
hlt
in
rcrb
push
push
jle
rolb
outsb
add
cwtl
in
jo
in
sub
stc
imul
adc
lock
sbb
and
mov
mov
jle
lahf
push
cmc
test
jmp
push
xor
or
dec
lock
adc
icebp
and
inc
fistl
add
push
cli
and
sti
inc
jo
jecxz
insl
adc
cmp
popa
clc
mov
dec
rcl
jge
xchg
ror
out
add
fstpt
add
dec
pop
icebp
jg
arpl
mov
xchg
xor
lcall
add
call
mov
add
pop
jp
popf
sahf
fwait
cmp
loopne
pusha
adc
add
movsl
xchg
fsubr
mov
sbbb
aas
rclb
adc
jmp
test
xchg
xchg
mov
or
sub
xor
push
jp
cmpl
jbe
add
xorb
fwait
sbbl
jge
shll
fimuls
cmpsb
mov
sbbl
aam
pushl
das
dec
jnp
addb
pop
imul
cmp
and
push
popa
mov
fsubs
sub
jg
dec
jbe
into
into
mov
aaa
lret
jnp
sub
xchg
push
pop
jb
out
mov
jge
dec
jg
mov
adc
pop
add
aad
fidivl
pop
stc
rcl
shlb
inc
jg
dec
cmpl
pop
inc
or
add
in
add
jle
xor
sar
jg
scas
gs
xchg
sarb
sub
movsl
fucomi
pop
or
add
push
orb
jg
dec
ja
mov
in
shlb
iret
jle
int
sbb
vmovd
addb
adc
int
jno
sbbl
pop
pusha
push
test
or
adc
mov
subl
clc
iret
lret
jl
fistpl
adc
test
pop
insb
jbe
jge
push
jl
xor
inc
inc
mov
test
xor
dec
or
jge
cltd
sbb
ror
push
rolb
mov
or
mov
insl
sar
add
std
sub
test
movl
xchg
in
in
pop
std
add
loopne
dec
pop
test
add
jbe
in
jge
sub
push
adc
test
mov
jg
imul
xorl
jae
pop
ret
jg
add
lea
jge
adc
jnp
push
aad
clc
adcb
jp
pop
sbb
arpl
cld
mov
and
and
mov
adcb
lods
inc
jbe
sub
sbb
js
enter
or
mov
sbb
ret
push
fmull
xchg
and
ja
ret
bound
mov
pop
sti
add
addb
icebp
sbb
and
orl
jbe
es
inc
jbe
aam
mov
adc
in
insl
les
xor
push
movsb
jnp
lcall
inc
imul
sbb
insb
pop
xor
add
std
and
dec
dec
outsl
addb
clc
xor
push
push
dec
movsl
pushf
jg
inc
outsl
adcl
jne
jl
jg
clc
sbb
int3
daa
mov
outsl
push
cmp
jnp
cmp
pop
or
sub
movsl
inc
sub
add
pop
cmp
lcall
push
or
cmp
inc
pop
aas
cmp
cmp
addr16
jge
sub
cmp
ja
and
and
pop
lock
dec
xchg
inc
push
add
adc
pushf
ss
out
jl
sbb
dec
adc
mov
das
scas
push
adc
sti
add
lods
pop
aas
mov
pop
push
push
push
loopne
ljmp
mov
push
das
add
inc
imul
or
mov
add
push
and
ss
and
mov
mov
and
mov
pusha
sub
lahf
bound
jge
idivl
dec
gs
imul
idiv
pop
mov
cmp
push
pop
lds
pop
lock
pop
enter
les
ds
pusha
xadd
fistpll
shlb
and
testl
sub
into
push
add
aaa
ret
idiv
add
iret
outsl
xor
inc
into
jb
xchg
cs
mov
aas
add
jae
js
shlb
jns
add
daa
xchg
jno
aaa
addr16
outsb
inc
jmp
stc
add
jo
dec
outsl
jo
testl
jne
pop
cld
outsb
mov
ja
pop
jp
out
ret
xchg
jg
jg
gs
aaa
add
std
ja
add
js
iret
jns
lret
jl
add
ja
jge
xchg
mov
data16
push
daa
mov
mov
mov
xchg
jnp
xlat
orl
add
leave
xchg
mov
test
notl
add
mov
mov
fimull
mov
incb
mov
outsb
rorl
add
nop
pop
lock
aam
fstl
ret
test
jg
lcall
xchg
cmp
lcall
dec
ret
inc
int
pop
fnstsw
jge
test
outsl
scas
sahf
lahf
lods
nop
add
scas
xchg
out
mov
mov
mov
push
pop
in
lods
xchg
out
fbstp
xchg
add
mov
jmp
cmpsl
std
or
das
mov
test
fdivrs
xchg
out
sti
pop
call
scas
lahf
shlb
ffree
mov
fidivrs
shlb
ret
aaa
jmp
pop
out
enter
sub
mov
leave
mov
dec
out
mov
jge
lock
pop
out
mov
sarl
push
loopne
ret
outsl
aam
das
aad
incl
lock
pop
xlat
enter
int
repnz
repnz
add
fmul
std
add
jge
fst
daa
fst
add
aaa
out
loop
std
cld
pop
rorb
clc
jecxz
add
in
stc
ljmp
out
out
call
aas
in
jg
cmp
div
hlt
repz
hlt
icebp
cmp
or
sbb
and
movsb
add
inc
add
inc
aaa
jne
aas
add
push
add
pop
pop
pop
and
jg
and
adc
jns
xor
or
mov
ja
addr16
pop
push
lods
mov
mov
stos
xchg
outsb
adc
and
mov
in
call
lret
lret
addr16
mov
adc
aam
jg
mov
mov
outsl
std
add
sarb
cmp
test
rcl
mov
pop
cmpb
push
aam
data16
xchg
paddsw
les
inc
pop
adc
stc
xchg
cld
lret
shll
mov
pusha
pop
mov
mov
shlb
mov
and
pusha
into
xchg
pop
scas
pop
lock
mov
add
pop
add
jp
sbb
cmp
sbb
aam
aad
push
lock
or
inc
sti
ja
lret
lds
pop
das
shlb
pusha
in
adcb
mov
rcl
and
pop
sarb
mov
or
add
sub
sarl
adc
fcmovbe
mov
sub
shlb
mov
jnp
or
out
xor
sub
and
or
xlat
jo
jmp
cwtl
adcl
sbb
mov
shl
add
das
and
xchg
mov
add
movsl
jl
shrb
mov
leave
bound
mov
xchg
inc
jg
mov
lret
xchg
xchg
jge
sbbb
pop
into
pop
daa
out
and
mov
popa
orb
lods
ss
mov
outsl
and
mov
add
out
mov
xor
inc
popa
jge
jno
add
dec
arpl
xchg
xchg
popa
xchg
jo
add
xor
test
sbb
in
mov
popa
cmpb
icebp
in
mov
or
mov
push
andl
inc
jb
mov
ds
mov
sbb
xchg
popa
xchg
jb
adc
in
lcall
in
stos
pop
rol
inc
dec
add
lret
idiv
cltd
pop
push
sbbl
aam
daa
push
icebp
inc
or
movsb
pop
movsl
push
push
pushl
lea
sbb
rorl
push
xchg
mov
iret
or
push
sbb
insl
es
pop
mov
aaa
popa
xchg
pop
int3
jl
gs
xchg
push
sbb
rcrl
push
adc
fwait
push
jge
popa
mov
mov
lret
sbb
aam
inc
jle
push
jne
mov
jns
lds
rorl
xchg
jo
adc
pop
mov
adc
dec
lea
popa
cltd
fadd
idivb
mov
popa
adcl
mov
push
repnz
mov
cmp
nop
jnp
aaa
and
push
popa
or
sbb
mov
test
and
and
and
mov
add
aam
fidivrl
nop
das
stc
push
adc
iret
mov
jns
mov
pop
pop
pop
sbb
ret
jl
nop
pop
rorl
test
push
mulb
test
es
test
xchg
fbld
into
rcrb
mov
xchg
jecxz
sbb
add
mov
test
cmpsl
jbe
rol
mov
aaa
adc
shll
dec
push
pusha
jnp
mov
mov
xor
cmpsb
iret
loop
dec
insb
cmpl
ret
ret
push
and
arpl
in
rorb
pop
cmp
push
arpl
sti
addl
pop
pop
dec
pop
inc
aaa
pop
mov
xchg
pop
mov
push
pop
cmp
or
and
jp
jl
aas
fwait
dec
in
mov
push
mov
sbb
lods
pop
sub
mov
and
mov
das
pusha
and
mov
sub
sub
mov
mov
push
xor
movsb
dec
test
cmp
xor
addr16
and
stc
pushl
add
outsb
cmp
mov
xchg
mul
leave
bound
push
shrb
lds
shrl
cmp
jno
les
enter
add
inc
clc
ja
std
jle
jno
pop
jae
inc
je
mov
inc
add
dec
mov
lock
idivl
dec
inc
ja
add
lret
xchg
pop
jle
pop
jbe
int
paddw
jnp
pop
jle
jnp
outsl
dec
pop
jge
add
sub
enter
sarl
out
mov
mov
add
ud1
data16
jge
sbb
daa
mov
test
pop
jnp
out
pop
xchg
rorb
pop
add
fsts
xchg
jle
mov
iret
ja
rorb
xlat
xchg
outsl
nop
push
xchg
pop
rclb
neg
fwait
es
jb
cwtl
je
xchg
jns
lds
jl
jp
fwait
pop
int
jle
pushf
filds
outsl
loope
lahf
js
bound
xchg
idivl
and
cwtl
addr16
lcall
lcall
insb
add
popf
outsb
pushf
insl
call
sahf
jo
lahf
ja
mov
lods
pop
mov
pop
mov
in
ret
pop
les
sub
fsubrp
pop
pushf
pop
lds
fisubs
clc
xor
xchg
lods
mov
fbstp
pushf
les
cmp
mov
fbstp
add
pop
test
push
in
fcomip
cmp
in
inc
ljmp
mov
out
inc
jg
dec
mov
sarl
das
inc
cmp
shll
aaa
fcmovu
enter
add
loope
stos
aas
lods
add
das
in
aaa
call
mov
add
lret
jecxz
out
mov
mov
dec
fucomip
rclb
icebp
shlb
int3
shrl
jp
mov
in
out
repnz
aam
pop
ror
add
leave
int
fdivs
pop
xchg
iret
fcmove
pop
fxch
push
int3
add
sti
add
add
fnstcw
out
aam
cli
out
pop
out
add
loope
lock
add
loop
add
in
add
out
cmpsl
xlat
inc
push
ss
out
repz
mov
push
jmp
in
in
testl
aaa
lock
pop
mov
sti
dec
outsl
cld
icebp
jmp
repnz
stc
hlt
out
out
add
or
div
aaa
out
and
cmc
lahf
stc
stc
clc
psubd
jno
mov
xchg
stc
inc
inc
movsb
dec
mov
arpl
and
jmp
fcoms
cmp
lea
push
adc
jmp
mov
aad
iret
ret
adc
stc
decl
fimull
fcom
aad
loopne
mov
and
mov
mov
loope
fcmovu
loope
loope
sahf
sbb
ja
testl
int
movsl
loopne
fldcw
mov
repnz
add
cmp
pop
cmp
xor
ror
repnz
loop
aas
std
fldt
clc
cltd
insb
lea
mov
sarb
fcomp
loopne
loop
xchg
or
es
push
fdivrl
cmpsl
std
and
sbb
fsubrl
in
adc
fwait
loop
sub
lret
pop
fdivs
insl
roll
add
pusha
mov
inc
addr16
popf
mov
push
add
mov
lock
inc
mov
and
xchg
fs
movsb
mov
mov
dec
fcomps
sar
xchg
push
and
add
lods
or
or
jg
cmp
xchg
xchg
jp
inc
mov
scas
or
cltd
test
xchg
sub
add
cmp
jl
neg
fcmovu
test
dec
xchg
sbb
loope
xchg
pop
and
and
push
cmp
nop
pop
add
aas
rorb
out
in
cmp
cwtl
mov
add
mov
fcom
ror
imul
inc
xlat
xchg
pop
addb
loope
jmp
ret
push
aam
mov
inc
xchg
push
or
loopne
fbstp
ror
lret
stos
mov
decl
aaa
arpl
addb
mov
dec
mov
pop
jl
adcl
inc
cmp
js
sbb
fst
jg
lds
cmc
cmp
jb
jns
cltd
loope
aas
push
cld
in
or
lahf
inc
loopne
pop
jne
fdivrl
xchg
cmp
xchg
jae
adc
outsl
inc
scas
fmul
mov
mov
neg
mov
outsb
inc
test
inc
inc
pop
cmpsl
stos
aaa
decl
leave
fcmovbe
cs
outsl
je
xor
decl
in
xor
cmp
outsl
jo
aas
bound
inc
and
andb
mov
and
inc
dec
add
jnp
dec
stc
mov
dec
pop
ljmp
add
mov
fistpll
imul
mov
pop
mov
daa
mov
pop
sbb
decl
pop
sbb
add
push
dec
xor
mov
mov
jo
out
xor
ss
cmp
sarb
mov
insl
cmp
les
lds
testb
inc
jg
push
int3
popa
jg
fs
fcomip
repnz
popa
and
arpl
packsswb
scas
ds
add
push
push
cld
push
add
data16
shrb
aad
aam
and
xlat
idivl
dec
xlat
jo
push
push
mov
xor
sbb
mov
mov
aas
scas
mov
sti
rcrl
outsl
inc
mov
push
cs
mov
out
jne
incl
js
inc
inc
add
jp
add
loopne
lock
into
jg
add
push
lds
and
pusha
xlat
xchg
pmullw
add
mov
je
iret
movsl
mov
fildll
mov
repnz
incl
in
addl
loopne
xchg
add
mov
add
mov
mov
mov
push
ret
out
lret
dec
out
test
daa
cmp
repnz
int3
mov
add
cld
icebp
fmul
add
fstpl
repnz
clc
pop
mov
loope
add
repz
movntq
out
outsl
fisttps
cmc
ljmp
adc
scas
clc
in
in
stc
repz
cli
repnz
stc
repz
add
repz
js
jno
out
addr16
div
in
test
pop
stc
negl
clc
add
sti
ja
sti
push
lea
sbb
pop
insl
and
add
mov
loope
or
mov
xchg
fwait
pop
cmp
xor
fidivl
dec
ds
pop
sub
nop
ja
inc
or
add
mov
js
cmp
inc
or
daa
push
add
test
jle
cmp
pinsrw
in
cli
fistpll
ss
or
lahf
shrd
ss
fildll
lret
std
add
and
inc
add
push
pop
and
jge,pt
mov
outsl
aaa
out
out
adc
add
mov
xchg
jecxz
ret
ss
es
sbb
cmp
sbb
out
mov
out
daa
inc
cmp
or
push
cmp
insb
pop
aaa
sbb
xchg
or
dec
imul
jg
mov
xor
and
stos
sti
dec
sbb
cld
push
mov
sbbl
cmp
cmp
jle
test
sti
test
pop
xlat
es
mov
pop
stc
out
lds
daa
subl
pop
and
or
mov
aaa
jg
add
and
xchg
ss
cmp
and
jl
insl
push
cmp
add
pop
add
sub
push
ds
pop
jg
lock
jge
adc
aas
add
push
jg
inc
or
mov
push
push
xor
pop
push
xor
sub
inc
inc
adc
test
mov
add
push
sub
rcll
pop
das
lds
dec
sbb
cmp
adc
add
add
xor
cmp
lcall
adc
mov
dec
adc
popf
lahf
dec
adc
pushf
sbb
mov
pop
pmulhuw
loopne
inc
cmpb
xor
add
sub
push
inc
mov
add
call
sub
sub
cmp
xchg
inc
adc
cmpsb
dec
adc
mov
adc
mov
adc
mov
push
push
fcos
add
mov
inc
pop
sbb
push
fistpll
mov
mov
push
push
mov
ud0
xor
decl
call
popa
xor
mov
add
cmp
or
or
sbb
mov
inc
hlt
mov
out
push
adc
lcall
addr16
roll
arpl
fsubl
cltd
jmp
mov
lahf
push
std
in
jmp
mov
mov
addl
cmp
mov
leave
push
mov
std
das
loope
in
xorl
inc
and
adc
push
cmp
out
push
sbb
incl
insb
cmp
pushf
dec
adc
scas
push
adc
push
adc
ljmp
call
lea
fbstp
jle
aas
pop
push
loopne
psrad
pop
jecxz
xchg
inc
pushl
repz
push
ljmp
inc
push
out
out
in
inc
cmp
fbstp
dec
jo
pop
mov
cmpsb
dec
inc
rcr
decl
stc
lea
mov
pusha
push
das
add
call
xor
xor
push
adc
popa
jmp
outsl
rcrl
into
adcl
aaa
in
xlat
sub
daa
clc
out
fst
pop
cltd
jle
std
sti
cli
cs
cmp
out
fincstp
in
hlt
call
int
imul
imul
out
pop
lock
and
cmpsl
incl
cld
ficoms
aaa
pop
in
aas
ljmp
inc
bound
sar
xchg
aaa
push
adc
cmpsl
dec
cmpl
pop
inc
inc
sbb
jns
push
push
out
mov
lods
mov
push
call
lret
jg
out
int3
pop
fmul
out
xchg
loop
pop
xchg
out
shlb
hlt
lock
push
negl
pop
inc
repz
lock
repnz
xchg
sti
div
lcall
pop
std
outsb
push
in
data16
test
pop
out
mov
push
add
loopne
inc
push
out
xor
cmp
push
sub
icebp
out
push
jp
sbb
mov
pop
pop
push
loopne
lods
lahf
aas
cmpsb
cmp
fcmove
neg
into
and
xlat
pop
out
out
js
repz
scas
nop
inc
push
push
jmp
pop
xor
out
pop
ss
in
lock
idiv
cmc
stc
iret
js
xchg
inc
pop
ljmp
cs
inc
iret
movl
cmp
cmpsb
dec
incl
inc
xchg
data16
lods
push
adc
shlb
rclb
sub
mov
mov
loope
filds
mov
mov
into
inc
add
adc
fstps
cmpsb
repz
std
xchg
xchg
bswap
mov
in
cmpsl
loop
ja
imul
lret
sub
or
popl
xchg
xor
push
pop
loope
push
into
imul
test
xor
movsl
mov
mov
push
or
rorb
jmp
sahf
out
push
enter
cmc
and
ss
add
inc
pop
sub
inc
xor
idiv
orl
push
fnstcw
sub
cs
repz
mov
sbb
mov
push
icebp
iret
mov
pop
xchg
pusha
inc
out
iret
icebp
loop
mov
jmp
fbstp
adc
mul
repnz
jb
or
std
add
clc
roll
aad
daa
ja
pushl
data16
inc
push
loopne
sub
push
inc
idiv
out
mov
push
sbb
mov
loopne
cmpsb
xchg
xchg
dec
sub
int
aam
push
pusha
nop
divl
dec
addr16
dec
sbb
addr16
shrl
cli
out
mov
xchg
add
sti
add
call
jle
pop
jno
imul
fwait
xchg
pop
inc
out
mov
xlat
mov
xchg
mov
out
or
leave
shl
out
or
jmp
cld
and
mov
fisubs
jmp
stos
out
out
cmpsb
jg
add
fmul
dec
jbe
pop
xchg
inc
push
int3
mov
addr16
aaa
icebp
daa
imul
test
fnstsw
inc
out
xchg
faddp
adc
into
jmp
das
jo
pusha
rcll
push
adc
dec
vmovq
add
icebp
sarl
nop
das
cld
jnp,pt
adc
xlat
clc
lods
push
sbb
pop
mov
adc
out
or
xchg
mov
lock
imul
push
jl
call
gs
inc
insl
and
jl
jle
jmp
ret
pusha
push
mov
pop
xor
cmp
in
inc
add
mov
sbb
pop
lahf
xchg
pop
adc
fldl
call
cmpsb
mov
mov
mov
push
out
rcll
out
cmpsb
clc
rorb
ja
popf
jae
aas
mov
sbb
cmp
negb
mov
xchg
in
jno
sub
mov
mov
flds
and
incl
pop
call
pop
pusha
in
nop
loopne
rol
out
adc
add
jbe
jp
push
filds
je
jge
cmpsl
loopne
mov
inc
mov
fnstenv
mov
scas
test
in
mov
fcompl
push
aas
lcall
popa
and
mov
sbb
add
addr16
dec
adc
inc
cs
cmpsb
inc
imul
mov
mov
or
push
iret
cmpsl
mov
inc
mov
fidivrs
dec
leave
adc
xchg
testb
jl
test
pop
inc
shll
adc
aam
push
sti
lea
ficoml
fildll
aas
adc
cmp
or
mov
and
in
pop
in
and
push
ljmp
push
test
mov
call
push
aas
iret
pop
adc
aas
inc
sbb
ljmp
inc
mov
and
and
adc
push
out
pop
sbb
xchg
push
pushf
xchg
add
out
divl
out
pop
jg,pn
mov
add
dec
xor
pop
adc
pop
sbb
add
push
mov
pop
mov
aas
adc
outsl
add
mov
pop
push
adc
loop
clc
mov
orb
cli
icebp
iret
es
inc
lods
bound
add
sarl
pop
and
xchg
inc
mov
jnp
pop
sarb
add
ret
stos
xlat
xchg
clc
outsl
call
and
and
fs
mov
mov
inc
test
movb
icebp
loopne
lea
jg
fcoms
dec
pop
inc
pop
push
or
cld
jmp
int
cmp
pop
xor
cmp
jl
inc
mov
mov
push
sub
sbb
mov
cmpsl
data16
xor
outsb
push
jg
nop
fildl
popf
inc
dec
push
lds
add
aas
popf
pop
maskmovq
faddp
mov
sahf
lea
mov
push
out
mov
clc
mov
fcoml
dec
aad
mov
stos
push
dec
ds
test
or
incb
scas
push
sbb
xchg
inc
pop
mov
test
pop
jle
std
add
push
xor
ljmp
dec
adc
daa
adc
sub
push
jg
mov
and
scas
negl
lock
aas
testb
mov
pusha
pop
stos
outsb
mov
add
incl
in
loopne
push
out
pop
loopne
cmp
das
xor
stc
daa
push
pop
add
inc
and
sub
aad
testb
cmpsw
xchg
pop
mov
div
cld
cld
dec
sbb
call
clc
add
push
div
in
into
sti
daa
mov
fdiv
in
aas
add
cmp
dec
ret
pop
enter
pop
aas
hlt
movd
daa
rolw
push
cmp
pop
jno
faddp
mov
daa
aam
mov
idiv
loop
fldcw
int3
sar
andb
jg
cmp
mov
scas
fbld
mov
cmpsb
mov
pop
fistpll
aaa
test
movsb
jle
inc
mov
out
xchg
cs
iret
jno
fistpll
pop
add
ficompl
or
test
movsl
decb
into
mov
pop
mov
addr16
sbb
jb
cmc
stc
stc
jl
jns
decl
stos
or
idivl
xchg
xchg
je
jecxz
mov
scas
mov
scas
loop
sbb
xchg
lock
incl
fstpl
pop
mov
mov
cmpb
adc
and
mov
lcall
repz
inc
dec
clc
clc
mov
call
push
xor
mov
insl
in
mov
out
js
push
mov
icebp
aam
negl
sub
in
cs
iret
mov
lcall
shlb
mov
adc
and
imull
or
clc
lock
jle
xchg
mov
clc
ss
pop
push
mov
aas
mov
daa
sub
into
insl
cs
repnz
cli
xchg
adc
add
jmp
fbld
pop
test
scas
push
out
mul
clc
pop
leave
rorl
inc
pushf
imul
ljmp
jg
push
test
mov
in
fstpl
and
repnz
pop
sbb
xchg
out
sbb
or
sahf
xchg
pop
sbb
jecxz
aaa
das
add
scas
ljmp
xchg
adc
adc
inc
xor
addr16
pop
cmp
stos
test
pop
in
push
loop
rorl
jle
lret
scas
pop
and
pop
in
lds
les
cld
jl
lcall
dec
adc
shll
adc
out
push
inc
mov
sti
rcrb
inc
push
jmp
sar
ljmp
movsb
jge
addl
fwait
xchg
test
dec
rorl
call
pop
into
imul
cli
mov
lods
xchg
sahf
mov
ljmp
push
cmpsl
dec
adc
pop
shll
scas
mov
mov
sti
out
std
lock
mov
pop
inc
repnz
xchg
jmp
cmp
dec
test
test
aas
mov
imul
sbb
fs
cld
cld
aad
jo
push
jle
out
stos
in
shll
ret
push
mov
cmpsl
out
inc
repz
sbb
jle
mov
movsl
jge
pop
subb
jmp
test
mov
cmp
int
sbb
jmp
mov
xor
xchg
mov
loope
loop
push
daa
mov
fcmovnbe
shlb
iret
movsl
mov
pop
mov
jne
fdivp
jmp
mov
daa
shlb
push
lods
lods
xchg
mov
aas
aas
fisttpl
bound
shlb
clc
nop
mov
out
mov
cmpsb
jg
inc
dec
mov
fisubl
popf
scas
shlb
cmp
lods
test
push
out
in
int3
jbe
lret
pop
call
xchg
filds
lcall
jmp
in
in
stos
cmp
ret
jo
lods
mov
mov
lock
nop
outsb
jg
jg,pn
inc
scas
push
sbb
repnz
lahf
pop
mov
sbb
mov
mov
loope
pop
cs
stc
imul
in
and
add
push
fists
sub
add
lcall
sbb
js
iret
mov
jns
jle
loop
jns
movsb
jnp
movsl
cmpsb
sbb
pop
add
insb
mov
cmpb
dec
out
dec
push
pop
dec
adc
jp
xchg
js
out
icebp
adc
pop
jecxz
add
jge
pushl
pop
loopne
orb
sarl
add
fisubrs
add
fbstp
pop
mov
js
mov
mov
in
in
sbb
mov
in
out
jmp
fxch
fmulp
mov
inc
lea
inc
mov
cmp
movsb
push
push
fwait
pushf
dec
outsl
sbb
add
cld
addr16
inc
jno
out
jl
sbb
lahf
out
dec
shlb
push
adc
mov
cmp
decb
ret
gs
lods
dec
adc
ffreep
mov
inc
push
int3
inc
mov
call
xchg
outsb
pop
jecxz
dec
push
jns
movsl
jl
push
out
adc
jg
es
filds
jg
xor
pusha
mov
testb
ljmp
pop
jbe
mov
xchg
cli
xchg
mulb
decl
jle
movnti
mov
les
push
or
cmpsl
mov
xrelease
mov
jmp
mov
add
push
push
test
cli
out
out
mov
mov
xchg
std
xlat
adc
out
icebp
inc
add
ja
xor
mov
arpl
lock
or
mov
and
jnp
pop
popl
pop
sub
dec
ret
cmp
jge
fistps
jecxz
dec
repnz
jp
cmpsl
jle
xor
in
mov
pop
xor
or
in
jmp
clc
add
mov
jns
push
jle
aam
or
les
sbb
std
push
inc
lock
ret
inc
std
mov
aas
cmpsl
jbe
call
cmp
loope
pop
pmulhuw
jns
jae
in
in
jns
test
fmull
push
push
jno
cmp
sti
cmc
adc
leave
inc
out
out
xor
fisubrl
das
call
andnps
sub
inc
gs
mov
pop
sahf
add
jecxz
push
dec
jmp
push
sahf
pop
sahf
jb
cmpsb
or
nopl
ror
inc
pop
cmpsb
repnz
mov
mov
adc
adc
add
cmp
aas
div
loop
call
pop
negb
pop
sub
jmp
dec
ret
ljmp
aam
mov
jle
mov
outsl
jno
lahf
jb
mov
pop
pop
in
js
movsb
mov
and
stos
addb
push
aam
xchg
cli
div
pushf
cmp
mov
in
sbb
iret
sub
pop
aaa
aas
rolb
mov
push
pop
adc
and
repnz
jnp
adc
or
ljmp
out
enter
jo
je
pop
or
push
ja
push
shlb
out
out
mov
pushl
out
push
or
inc
inc
jbe
les
or
test
sbb
cmpsl
and
test
adc
cmpsl
call
jae
dec
fdivrl
mov
insl
push
outsl
jo
in
inc
jmp
push
in
push
push
out
xchg
in
out
por
push
sub
out
push
movsb
jo
push
push
out
out
adc
and
pop
jmp
push
aaa
out
fsubrs
pop
sbb
imul
test
lds
mov
jg
test
sub
insb
rcrb
scas
jbe
mov
jo
jbe
fwait
insl
pushf
outsb
clts
mov
popa
push
pop
pop
js
sbb
cmp
jns
clc
mul
notb
shrb
pop
test
loopne
adc
dec
and
out
push
jl
aas
mov
cmpsb
push
sbb
out
pop
xor
and
addr16
add
repnz
mov
lds
imul
imul
imul
jno
subl
icebp
sarb
push
lahf
fiadds
and
jae
in
stc
scas
ret
shr
out
adc
ret
out
pop
enter
sbbl
jecxz
jg
push
cmp
daa
inc
gs
rcrl
loope
inc
dec
pop
aad
sahf
cmp
jmp
test
arpl
lcall
jb
in
or
push
out
jge
bnd
sub
add
jmp
cmp
addr16
std
nop
dec
and
sub
xor
mov
jmp
int3
mov
pop
stc
cmpsl
stos
jno
inc
sbbl
cwtl
push
pop
fwait
insb
insl
pushf
bnd
xchg
outsb
push
push
push
in
add
xor
add
clc
lahf
clc
push
mov
das
ds
loop
fnstenv
fwait
clc
adc
push
push
cltd
mov
mov
loopne
pop
xor
das
jle
cmpsb
pop
es
int3
incl
add
loopne
jbe
pushw
addr16
xor
mov
fwait
imul
pop
mov
adc
lcall
inc
out
push
out
imul
sarl
mov
xchg
ljmp
mov
sbb
or
ret
lds
sub
call
sub
mul
lds
or
fcmovnb
mov
stos
jo
aaa
nop
bound
in
cltd
push
in
ret
jb
push
pop
popf
outsl
sahf
pop
in
shll
xor
es
sbb
idivb
xor
mov
mull
pop
mov
push
xor
sbb
or
cmpsl
mov
cmpsb
push
and
loopne
mov
scas
decl
outsl
cmc
out
jg
jo
daa
adc
popa
roll
push
push
push
imulb
pop
rclb
sbb
out
leave
mov
inc
sbb
movsl
popl
out
out
or
adc
xlat
scas
xchg
fistps
mov
inc
popa
cld
push
loopne
dec
and
mov
aas
mov
jmp
movsl
push
fimuls
cld
pop
shll
adc
ja
add
mov
mov
xchg
arpl
xchg
fs
xchg
ret
in
sub
push
daa
in
mull
fwait
push
push
push
out
sahf
outsl
mov
je
xchg
cmc
aas
mov
push
fucomp
aam
into
popf
jl
mov
and
pushl
int
push
and
push
push
and
loopne
pop
sbb
pop
scas
mov
lea
addb
test
jg
shll
aaa
outsl
pop
fists
xchg
in
pop
cltd
imul
cmc
fisubs
out
dec
add
pop
out
mov
push
sahf
xchg
pop
cmp
sbb
out
xchg
or
cld
imul
sbb
ds
dec
push
push
cld
sub
aad
mov
hlt
or
outsl
push
jmp
fiaddl
outsl
dec
dec
xchg
xchg
xchg
fs
pushw
imul
das
push
hlt
mov
lcall
mov
fmul
dec
mov
pushl
xlat
cli
mull
rcrb
aas
pop
loop
in
addr16
stos
dec
pop
scas
jno
mov
cli
cmpsl
ffree
mov
push
and
push
pop
ja
ret
iret
les
jne
push
jecxz
pusha
push
in
cmp
dec
popa
in
push
pop
pop
push
xlat
je
imul
ficoml
repnz
pusha
mov
mov
call
out
pop
and
adc
lcall
leave
outsb
cs
push
sahf
ret
bound
cli
outsb
test
push
mov
dec
fdivrs
push
fidivrs
mov
jo
jg
lret
ljmp
lret
pop
pop
pop
cwtl
push
push
packssdw
lret
cmp
loop
push
pushl
sbb
mov
jl
sbb
aaa
sub
mov
decl
push
push
ds
and
xchg
aaa
sbbl
push
jle
in
ret
inc
outsb
inc
dec
test
por
xchg
pop
femms
xchg
jle
imul
xchg
inc
iret
jnp
test
loope
out
daa
inc
pusha
fistpll
jo
mov
sbb
aaa
aas
je
shrb
inc
mov
push
out
notl
aaa
lods
lahf
movsl
dec
bts
pop
jns
out
and
push
inc
pop
xlat
mov
das
outsb
inc
pushf
in
loop
jp
in
pop
scas
xchg
push
xchg
pop
arpl
je
loop
fmuls
loopne
ja
push
filds
pop
jecxz
loopne
and
push
push
add
pop
sbb
outsl
mov
outsl
clc
cs
jle
jbe
iret
pop
lret
enter
aas
pop
sarl
jecxz
pop
adc
das
pusha
mov
sub
loop
aaa
xor
pop
fs
shll
rcrb
mov
or
rcrl
sahf
adc
push
movsb
cmpl
incl
and
clc
les
aam
and
addb
aas
add
sub
scas
add
add
or
jo
or
push
dec
loopne
imul
pop
in
inc
and
aas
cld
nop
or
dec
pop
loopne
inc
pop
enter
orb
add
adc
sbb
pop
enter
mov
jb
clc
lds
cmp
xchg
ljmp
lea
sub
cmp
aas
push
enter
mov
push
incl
outsl
add
xor
aas
xor
shll
insb
bound
push
dec
das
sub
cmp
and
sar
pop
dec
push
stos
mov
cmpsb
subl
lcall
test
andl
dec
and
das
sub
xor
jo
cmp
xchg
mov
js
sar
mov
inc
adc
pop
loopne
dec
adc
mov
in
andb
push
jmp
pushl
loopne
inc
bswap
cmpb
mov
aaa
push
xchg
inc
xor
jge
sub
sub
add
aas
pushl
jl
pop
push
sahf
jg
or
decl
jle
add
jo
pop
inc
xor
ds
xor
adc
mov
mov
mov
mov
pop
pop
andb
xor
xor
leave
outsl
xor
sti
das
jmp
xor
shlb
mov
inc
mov
lods
dec
adc
pushf
inc
adc
jg
adc
cmp
das
es
sub
and
jo
or
mov
jmp
test
les
sbb
and
jp
sbb
mov
push
stc
mov
push
dec
jns
call
popa
bnd
jmp
mov
stos
scas
jmp
mov
jno
mov
enter
in
xchg
loope
dec
ljmp
daa
ficoml
and
lock
mov
adc
xchg
inc
incl
sar
adc
cmp
lahf
dec
xor
jge
dec
mov
pop
lea
or
aas
adc
mov
pop
cmp
dec
jmp
iret
adc
aaa
std
shll
jle
call
xchg
insl
loopne
jecxz
mov
push
call
dec
push
idivb
movsb
fsubrp
mov
xchg
nop
pop
fiadds
xchg
mov
cld
popf
out
push
sbb
ljmp
jo
sbb
jb
pop
mov
pop
and
inc
and
ja
and
mov
std
mov
or
stos
mov
out
in
fcmovne
icebp
scas
orb
mov
pop
out
nop
pop
xchg
jl
decb
div
es
add
mov
repz
sar
pmaxsw
fcoms
mov
pop
sti
xchg
inc
adc
push
outsl
mov
sar
xchg
cmp
xor
iret
sar
pop
push
mov
mov
dec
cmp
push
push
in
mov
test
test
jmp
leave
mov
out
fldt
mov
jmp
jp
xchg
fadd
mov
lcall
xor
or
shufps
repz
div
scas
lea
out
aad
shll
ljmp
jmp
cmp
jbe
cmp
cmp
push
sbb
ja
cltd
push
daa
push
movsl
dec
adc
sbb
push
sbb
les
outsl
popf
out
stos
sbb
rorb
ja
pop
cmp
ret
xchg
daa
mov
adc
in
mov
or
es
lods
or
push
cld
sti
cmc
ret
xlat
roll
push
int3
aaa
out
call
inc
adc
push
xor
cmp
pop
push
sbb
stos
xchg
pop
sub
push
adc
cli
lret
sarb
out
aam
in
dec
int3
and
loopne
mov
mov
movsb
bound
call
test
mov
mov
clc
jle
popw
out
xchg
int3
and
push
loopne
inc
lock
mov
cmpsb
cli
xchg
inc
adc
pop
ss
xchg
xor
jb
loop
dec
inc
fldenv
xchg
add
dec
loope
mov
pop
sub
xlat
mov
jp
sbb
lret
xchg
mov
aaa
loopne
xlat
mov
fdivrl
lods
jae
lods
popa
out
sbb
into
mov
jmp
xlat
inc
push
mov
out
fbld
ljmp
and
lcall
xchg
das
sub
push
into
push
stos
lea
in
adc
mov
pop
sub
jmp
popa
and
lds
push
rorb
inc
dec
notl
jp
mul
outsb
mov
mov
lcall
dec
mov
inc
and
sti
cli
stc
incl
mov
cmpsb
psraw
sub
cltd
out
pop
xor
xchg
inc
test
jb
sbb
ret
mov
lods
pop
daa
dec
mov
dec
pop
jl
mov
vmptrld
out
mov
dec
sub
icebp
in
incb
test
cmpsl
adcl
shll
and
xchg
pop
jle
lods
or
sbb
les
cmpsb
incb
fsts
roll
mov
pusha
iret
xchg
inc
adc
push
xor
mov
ud0
pop
xchg
test
mov
sbb
lret
mov
dec
rorl
jle
xorl
push
and
imul
dec
shlb
lahf
mov
les
in
xchg
mov
dec
aad
fbld
out
fstpl
sub
adc
inc
adc
dec
xor
js
xor
aas
aam
leave
lea
mov
and
jge
jmp
mov
mov
and
cmpsl
fmull
add
mov
inc
lahf
push
rorb
lret
daa
iret
lcall
adcb
mov
push
clc
push
idivl
adc
sbb
stos
mov
lret
xchg
imul
sbb
shrb
mov
sahf
dec
add
daa
flds
incb
jb
jecxz
dec
mov
std
lcall
pop
rclb
fcoms
sbb
imull
pop
push
mov
jle
int
dec
ja
test
cmc
xchg
cmp
adc
daa
xchg
cmove
lea
xor
lret
mov
pop
call
popf
jp
jle,pt
xchg
iret
or
jmp
shlb
enter
ss
iret
push
adc
cmp
mov
std
xchg
cmpsb
pop
push
shll
inc
aas
das
adc
inc
xor
jnp
sub
jmp
movzwl
jle
pop
sbb
jg
push
mov
out
test
lods
or
bnd
mov
jg
je
ds
push
adc
clc
fnsave
int3
xchg
div
xlat
xchg
gs
sbb
imul
sub
addr16
mov
jle
int
arpl
mov
fildll
and
fidivs
rcll
loop
pop
cmc
pop
xchg
jl
mov
decl
int
jne
cltd
dec
sbb
mov
adc
rclb
mov
mov
and
aas
xchg
addr16
lds
out
aas
leave
fwait
mov
jle
mov
js
mov
scas
js
pop
mov
push
inc
jo
ds
outsb
out
lds
ljmp
stc
hlt
inc
call
jmp
sar
pop
sub
mov
dec
test
out
pushf
aas
push
rcll
outsb
fsts
push
scas
sti
addr16
sahf
xor
rorb
mov
int
pusha
push
mov
pop
sbb
mov
mov
xor
mov
push
sbb
stos
icebp
xchg
movl
std
das
mov
cmp
shrl
cmpsl
inc
addr16
fists
int3
jb
push
fxch
mov
push
popa
imul
shll
cwtl
cld
mov
es
outsl
bound
cmpsb
mov
and
xchg
mov
jmp
jg
xor
test
out
outsb
mov
cmpsl
ja
cmp
sti
leave
mov
dec
adc
out
lahf
mov
push
std
lock
mov
mov
pop
xor
mov
scas
push
adc
mov
ss
jle
fsubs
sbb
lods
je
xchg
insb
push
scas
les
cmpsl
repz
xchg
clc
call
out
mov
cli
xchg
addr16
jmp
add
pop
aam
out
dec
mov
mov
adc
aaa
push
mov
adcl
sbb
ficoml
sub
jg
adc
pop
or
adc
ja
cli
scas
mov
dec
cli
sbb
pop
adc
pop
and
jg
in
int3
mov
cmc
inc
push
in
leave
mov
outsb
xor
inc
sar
adc
cmp
sub
fs
or
sbb
mov
cmpl
xchg
inc
jb
and
icebp
push
repz
or
enter
inc
push
xor
adc
std
sbb
test
adc
mov
test
pop
sbb
xlat
pop
cmc
and
mov
mov
dec
cs
inc
cli
and
test
sbb
pop
xchg
adc
xchg
in
xlat
loop
nop
sub
sti
inc
cmp
movsl
mov
jmp
rol
mov
push
add
push
push
sarb
mov
call
fistps
or
lret
stos
xchg
loopne
jle
push
ficoml
lock
loopne
outsb
decl
cmp
xchg
mov
cmp
mov
sub
stos
inc
push
sti
jg
sub
out
jmp
aas
sarb
mov
mov
mov
add
test
xlat
pop
fdivrp
pop
cli
xchg
pop
loop
call
into
mov
movsb
pop
bound
pop
mov
je
bswap
mov
movsl
les
add
jns
lods
mov
dec
jns
jnp
bswap
mov
scas
cli
in
and
xlat
fcomip
or
nop
nop
clc
pop
daa
hlt
xlat
jo
in
into
mov
jmp
popf
jge
incb
mov
fbld
daa
testl
int
sub
dec
jae
pushl
sbb
rcr
pusha
dec
pop
scas
adc
xlat
mov
iret
lahf
add
loopne
shrb
das
rolb
out
out
pop
daa
sbb
mov
xlat
fs
pop
std
mov
jecxz
mov
outsl
ret
xchg
je
lods
mov
and
loope
test
fs
mov
dec
xchg
pop
pop
pop
cmp
das
push
lret
arpl
daa
stos
test
iret
jmp
mov
imul
jmp
dec
adc
ja
iret
mov
icebp
hlt
mov
daa
inc
int
iret
sbb
or
xlat
call
div
out
test
insb
frstor
xchg
stos
iret
mov
xor
mov
add
push
shrb
xor
push
pop
pop
lock
fildll
dec
adc
fisubs
pusha
and
xchg
mov
sub
scas
pop
test
data16
mull
dec
scas
sahf
mov
incl
pushl
popf
jp
dec
push
mov
cmp
das
imull
mov
and
dec
pop
mov
pop
pop
push
movsb
xchg
jg
orl
shlb
mov
mov
inc
ds
aaa
enter
pop
cmp
decl
addr16
in
adc
sbb
xlat
xchg
mov
mov
push
mov
jo
outsb
in
shlb
xchg
jno
sahf
sarl
xlat
bound
ja
stc
nop
inc
les
das
stc
movsbl
outsl
icebp
fmul
fbstp
ljmp
jge
mov
pusha
mov
lret
outsl
cli
xchg
std
mov
rorb
lds
mov
jle
jnp
shrb
mov
fadds
add
and
inc
cld
and
les
push
lret
pop
aam
dec
shlb
cld
out
les
jg
jno
ljmp
arpl
dec
mov
rol
cmpsb
ret
dec
inc
xor
sti
push
fld
mov
dec
xchg
loop
xchg
xorl
xchg
and
ficomps
xor
int
pop
aam
cmp
sub
cmpsl
inc
dec
xchg
sti
icebp
sbb
cmp
xor
aaa
int
ljmp
mov
and
sbb
ds
mov
lods
loopne
sub
inc
pop
sbb
inc
imul
xchg
leave
daa
jmp
das
jg
mov
mov
inc
and
jg
jl
xlat
orb
imul
or
ds
cli
scas
or
push
jne
dec
std
std
sti
cltd
callw
inc
das
incb
shrb
psrld
dec
loope,pt
or
mov
ljmp
nop
wbinvd
clc
loopne
mov
cmpsl
rorb
push
mulb
inc
mov
ds
push
ja
push
pop
cmp
daa
lds
es
leave
out
inc
adc
jecxz
call
out
pop
stc
and
cli
out
clc
icebp
fbstp
test
mov
cmp
adc
cltd
jp
cmp
mov
stos
mov
sub
mov
adc
inc
out
stos
aas
jle
xchg
pandn
out
cmp
push
jmp
sbb
stos
push
pop
ljmp
ret
addr16
out
rol
sbb
cmpsb
dec
cmpsl
push
out
push
ret
sti
fldenv
nop
inc
pop
cmpsb
xor
daa
nop
cli
adc
sbbl
incb
loope
ret
mov
mov
mov
mov
cmp
sarb
test
in
mov
cld
pop
inc
cmpsb
ffree
lods
scas
mov
outsb
decl
push
or
iret
insb
inc
out
cmp
movsl
pop
sub
sub
mov
jp
xor
dec
push
jmp
nop
lcall
pop
sub
lea
nop
jg
pop
sbb
jb
sbb
adc
stos
sbb
loope
mov
mov
in
lahf
movsb
repnz
in
mov
fistps
lahf
andb
lock
mov
in
in
loop
pop
fcomip
outsl
xlat
int
lret
mov
mov
cmp
mov
mov
movsb
pop
lret
mov
dec
out
fcomip
sub
decl
rol
outsl
js
ss
repnz
xor
lretw
pop
push
cld
nop
add
jecxz
out
mov
ja
into
and
dec
sbbl
cltd
jo
cli
mov
pop
jns
jmp
lahf
shlb
arpl
xorl
cld
cmpsl
icebp
out
push
push
and
xchg
adc
fbstp
daa
sarl
xor
mov
xchg
or
sbb
movsl
mov
mov
addb
lds
inc
pop
inc
rclb
out
ja
xchg
mov
pop
mov
and
pop
test
imul
push
add
mov
or
scas
testl
xchg
addr16
imulb
inc
addb
pop
rcrl
in
pop
xchg
dec
sbb
fsubrl
jle
das
push
mov
inc
out
loope
inc
cmovle
xchg
xchg
enter
pop
pop
loope
daa
mov
dec
aas
nop
push
pop
and
out
lods
lahf
dec
scas
add
mov
jle
hlt
sub
out
enter
pop
cmp
mov
fwait
jae
cmpsl
dec
incb
aad
popa
sub
aam
xchg
cmc
lock
dec
decl
mov
insl
hlt
loopne
or
ljmp
cmovs
adc
iret
pop
jmp
add
repz
cld
mov
ljmp
xor
cmp
sub
mov
or
jge
pop
sbb
inc
sbbl
loopw
cmpsb
jmp
in
mov
xchg
push
push
mov
shll
out
js
jp
incb
icebp
into
mov
mov
xchg
cmpl
cmc
imul
call
shll
fiadds
in
jmp
test
loopne
mov
pop
mov
sub
jg
scas
nop
add
lahf
js
shlb
mov
mov
shlb
mov
pushf
outsb
sbb
xchg
out
in
sub
movzbl
pop
les
mov
fldcw
incl
rorb
daa
inc
scas
mov
nop
jle
movsb
adcb
cmpb
mov
jg
aaa
repnz
call
inc
sbbl
sbb
lret
xchg
imul
xchg
hlt
fadd
lahf
ss
push
jno
mov
jecxz
jo
lret
mov
cmc
in
mov
jle
mov
test
mov
xchg
fsubs
cmc
jg
and
mov
and
lret
repz
jg
shll
xchg
gs
pop
lcall
stc
and
in
in
out
lods
incb
addb
xchg
mov
jbe
mov
push
movsb
scas
sahf
out
out
hlt
push
or
sahf
pop
jmp
rcrb
pop
scas
and
test
mov
int3
mov
cmpsl
mov
sub
out
mov
stos
or
rcrl
xchg
pusha
xchg
inc
xlat
or
daa
push
cmp
jmp
xlat
push
add
mov
push
sbb
dec
add
or
scas
xchg
out
cld
jg
outsl
out
dec
sub
stos
xchg
sar
aas
push
mov
insb
das
xchg
mov
js
jg
push
stc
dec
std
cmpsl
icebp
jmp
aaa
je
xchg
jle
addr16
xchg
movsl
push
jl
ficomps
iret
mov
pop
test
dec
mov
hlt
incl
mov
inc
jns
pop
hlt
cmpsl
pop
sub
xchg
ret
jg
xchg
insl
xor
pop
mov
popa
ljmp
aaa
pop
jg
outsb
push
into
lret
test
mov
jns
arpl
inc
jecxz
imul
unpcklps
in
mov
sahf
dec
cmpsl
jns
xor
pop
ljmp
pusha
sbb
in
mov
movl
pop
sbb
cmpsb
push
sbb
jmp
ljmp
xchg
sahf
js
leave
jae
dec
ror
pop
pop
sti
les
adc
aam
addr16
adc
daa
mov
pop
call
imul
test
sbb
out
xchg
jmp
mov
nop
push
hlt
fld
dec
cmpsl
jb
int
pop
div
jecxz
or
mov
lcall
daa
push
mov
sbb
nop
pop
xor
test
aas
mov
or
je
pop
shll
dec
sub
cmc
mov
and
inc
out
pop
and
or
push
inc
pushl
pmaxsw
fdivr
mov
jle
jmp
xchg
fs
xchg
jno
pop
imul
cmp
pushf
lahf
rolb
mov
and
lcall
cmp
xchg
mov
pop
sbb
movsb
popa
xor
mov
inc
and
fwait
jmp
popf
ja
lret
data16
pop
push
cld
rolb
stos
sub
xchg
int3
inc
std
pop
sti
inc
call
test
jl
fcoml
sbb
jecxz
gs
cltd
push
loope
rcrb
mov
or
addr16
aam
ja
ljmp
mov
xlat
fidivrs
std
roll
stc
mov
lret
lods
xor
mov
adc
dec
call
jbe
pop
sahf
iret
mov
mov
loop
repz
lcall
sbb
clc
pop
mov
pop
bound
add
jl
and
insl
into
icebp
dec
stc
xlat
push
sbb
cmc
pop
adc
xlat
lods
inc
je
pop
divl
mov
test
cmp
decl
aas
repz
or
lahf
jns
cmpsl
and
das
idivl
jge
cmp
int
adc
mov
shrb
movsb
mov
loope
popa
push
adc
or
adc
mov
sbbb
data16
ret
cld
jmp
fists
mov
sub
mov
rorl
aaa
jmp
cltd
outsl
xor
outsb
xor
decb
inc
mov
xchg
in
loopne
pop
mov
cmpsl
cld
add
mov
fidivrs
jl
adc
outsl
xchg
popa
xchg
mov
mov
inc
iret
imul
push
pushl
add
out
sar
lahf
cmp
je
cmpsl
adc
mov
arpl
or
outsb
cmpsl
cmc
xchg
sbb
xor
adc
sbb
dec
mov
adc
test
dec
xchg
pushl
pushl
and
out
leave
sub
pop
fcomps
dec
mov
bound
pop
sbb
divl
push
dec
iret
xchg
insl
adc
xlat
add
xor
mov
aas
pop
rcl
sbb
mov
fbld
dec
js
aad
cltd
xchg
int3
addr16
pop
out
rol
call
xor
pop
inc
loope,pt
pop
xchg
stos
or
dec
data16
clc
add
cmp
lahf
and
mov
iret
ret
shrb
rclb
das
add
test
iret
shlb
idiv
cli
fwait
orl
mov
xor
mov
dec
call
mov
test
mov
mov
pop
mov
shrb
decb
popa
fbld
out
pushl
hlt
loopne
jns
iret
outsb
xor
sub
ret
leave
roll
in
gs
push
aam
push
jne
std
lea
pushf
je
aas
dec
popl
push
mov
shlb
lds
out
pop
pop
mov
add
jmp
and
lahf
ja
jmp
jmp
inc
call
jl
sarb
aaa
ss
outsl
call
sub
les
stc
pop
dec
lret
daa
fsts
add
or
dec
sbb
xchg
fs
rcll
xchg
add
scas
xchg
or
lods
nop
or
outsb
push
fwait
xorl
ret
les
aam
les
hlt
outsl
lret
jg
ret
mov
js
sub
xchg
bound
popa
outsl
sub
pop
push
out
or
rcrb
xor
repnz
cld
add
push
lock
aas
xchg
lahf
in
orb
pop
lock
sbb
in
lock
clc
add
lock
pop
enter
loopne
shlb
xchg
xchg
adcb
add
outsl
and
sub
lahf
mov
mov
ds
scas
popa
or
pop
pop
lds
fistpll
pop
add
int3
push
aas
add
push
push
aas
push
les
and
loopne
dec
adc
adc
and
andb
sub
push
push
gs
aas
mov
or
int
data16
xchg
pop
ja
or
mov
mov
inc
adc
das
xlat
lahf
or
outsb
push
sahf
pop
call
jg
loope
pmullw
enter
mov
cmp
xchg
data16
xor
sbb
lods
add
jmp
test
xchg
mov
jle
mov
dec
js
scas
xor
xlat
iret
ja
mov
daa
inc
cld
cmpb
jg
cmpsl
stos
dec
adc
or
or
adc
xchg
pop
sub
or
xor
jmp
dec
adc
mov
adc
sbb
lock
inc
push
fsubr
call
pmaxsw
ret
pop
aad
fcmovne
push
push
loope
push
ror
loop
loope
push
xchg
in
add
in
lods
outsb
roll
dec
adc
mov
push
and
sub
andb
aas
pop
cmp
inc
jl
clc
cld
mov
call
dec
shrb
in
aam
xchg
stos
xchg
mov
cmp
fs
jo
aas
cli
ds
jo
cmp
scas
mov
and
cmpb
mov
sub
push
add
dec
scas
sbb
adc
jg
inc
sbb
inc
hlt
fmulp
test
loop
dec
add
aam
std
mov
jecxz
into
push
or
lahf
clc
sub
rorb
addr16
jl
pusha
xchg
hlt
daa
repz
adc
ds
mov
ljmp
into
fs
inc
call
xchg
dec
sbb
pop
jmp
ror
xchg
test
pop
rol
adc
shlb
testb
clc
outsb
bound
xchg
sbb
addr16
cld
pushl
mov
sbbl
ret
xorb
pushl
adc
imul
std
pop
test
xchg
or
ds
out
jns
mov
scas
mov
mov
push
xchg
xchg
inc
adc
mov
adc
sub
add
ljmp
pmullw
sub
cmpl
incl
dec
add
pop
sbb
leave
test
inc
or
out
mov
pop
scas
iret
add
mov
scas
out
fcompl
in
les
icebp
cmc
nop
pop
or
mov
mov
pushl
mov
or
dec
pushl
les
pop
out
leave
xchg
mov
mov
pop
adc
in
les
pop
pushf
and
jg
pop
push
test
jo
dec
into
jbe
add
int3
ret
pop
cs
out
loope
jne
push
jl
adc
xor
ja
imul
pop
jle
out
int
out
mov
add
outsl
popa
mov
into
decl
sub
mov
inc
ud0
xchg
sbb
sub
out
mov
fsts
cld
mov
add
addr16
jle
inc
lods
push
sbb
mov
hlt
mov
imul
rol
push
into
ss
adc
lods
push
nop
daa
mov
push
adc
mov
shrb
jecxz
daa
cmp
dec
push
out
cmp
es
pop
mov
and
ja
mov
clc
sbb
ds
out
addb
and
out
ffreep
scas
sbbl
push
push
ljmp
sbb
iret
push
cmp
xchg
mov
iret
or
sub
mov
daa
xchg
data16
and
or
dec
push
aaa
lcall
mov
push
roll
insl
cmpsb
fistl
xor
ret
and
push
fsubl
loop
mov
ret
or
in
jmp
scas
arpl
mov
stc
add
dec
add
mov
test
repnz
les
decl
xchg
adc
sahf
push
roll
xor
jg
xlat
repz
sub
push
pop
pop
adc
loopne
iret
pop
fidivl
pop
sbb
sbb
pop
add
fcompl
inc
das
and
aaa
adc
and
loopne
mov
inc
insb
xchg
push
lahf
stc
pop
push
pop
scas
pushl
in
xorl
inc
jg
inc
and
js
repz
xchg
out
mov
test
pop
push
add
lock
inc
ret
repnz
pusha
popf
dec
push
cli
fs
xor
clc
and
adc
pop
cmpsl
icebp
adcb
call
shlb
icebp
xor
daa
shl
pusha
test
mov
sbb
ja
pop
stc
jl
lahf
aas
repnz
ljmp
or
rol
push
loopne
lahf
std
dec
bound
dec
jg
or
test
add
push
pop
sbb
fimuls
xchg
scas
push
adc
inc
and
es
xorl
bound
mov
dec
pop
outsl
adc
scas
xchg
out
adcl
es
mov
cli
and
sub
mov
pushl
adc
inc
push
iret
mov
pop
and
pop
rcrb
testb
lock
mov
adc
sbbl
or
aas
jecxz
in
and
xchg
mov
je
testb
jecxz
jg
movsl
jle
jl
push
movntq
out
mov
lock
mov
dec
fnstenv
test
out
call
nop
or
sbb
stc
fdivrp
clc
mov
mov
jnp
sbb
fnsave
lret
xor
xchg
imul
notl
lret
dec
adc
fiadds
lock
loopne
ss
out
mov
xchg
les
xchg
or
fistps
jo
addr16
xchg
cli
test
mov
das
aas
mov
fistps
mov
add
ss
scas
adc
inc
jmp
ss
lcall
daa
loop
xchg
and
push
pop
cmpsl
icebp
push
sti
inc
sbb
fstpl
and
addb
push
add
mov
test
dec
aas
clc
je
cltd
sar
jg
sbb
js
lea
xchg
movsb
ss
push
sbb
arpl
cmp
or
lods
mov
push
std
scas
ret
aas
test
sahf
aad
test
dec
movb
shll
mov
dec
mov
cld
inc
add
mov
scas
andb
xchg
sarl
pop
inc
jo
sahf
daa
into
push
add
push
sbb
inc
mov
add
mov
dec
imul
loope
xchg
mov
dec
push
jbe
pop
and
mul
ror
popl
outsl
xchg
add
sbb
in
and
cmp
and
inc
pop
fimull
xor
out
aam
add
xlat
loop
pop
pop
jg
test
test
fdivr
enter
lahf
fdivl
add
inc
stos
jp
inc
mov
pop
or
xchg
pop
mov
fisttpl
andl
push
cli
popf
in
pop
pop
pop
jmp
test
and
mov
jbe
pushw
into
xchg
repnz
loopne
orl
mov
cmp
out
out
add
cwtl
pop
cmp
ret
mov
jp
mov
movlps
outsb
xchg
rcrb
movsb
testb
dec
adc
mov
call
into
shl
and
inc
pop
subb
adc
ljmp
lods
jle
mov
fcmovnb
mov
loopne
pop
ds
mov
aas
jae
add
dec
pop
pop
add
mov
push
in
ljmp
outsl
int
xchg
inc
xchg
ja
mov
adc
add
negb
xchg
loope
push
lods
push
pop
out
sbb
out
mov
pop
sarb
xchg
jle
adc
cwtl
ret
jg
xchg
jae
iret
pop
adc
div
out
mov
adcl
inc
dec
mov
push
cmp
arpl
jg
movsb
push
pop
mov
call
xchg
outsl
bound
cmp
lcall
and
or
icebp
outsb
push
repz
cmp
daa
adc
das
pop
sbbb
pop
dec
cwtl
lret
mov
cmpsl
jge
cmp
add
stos
addl
shrl
pop
daa
sbbl
pushf
dec
scas
out
and
mov
lock
inc
ljmp
xchg
mov
xor
clc
out
rol
scas
roll
jecxz
lret
mov
pop
and
in
push
aad
xor
push
adc
pusha
inc
push
out
out
out
xchg
rorb
pop
outsb
or
mov
js
les
inc
das
jl
out
repnz
mov
in
in
repnz
jl
cmpsl
lret
mov
jb
cltd
fwait
sbb
jp
cmpsl
or
stc
notl
hlt
xchg
bound
shl
out
push
pop
nop
pop
inc
pusha
mov
and
add
jg
pop
and
push
sbb
nop
rolb
mov
idivl
adc
or
fcomp
xor
mov
jg
out
fwait
sbb
out
jle
or
int3
cmpsl
fistpll
sbb
mov
cmpb
ds
pop
mov
dec
pop
mov
stos
xchg
decl
es
stos
loope
jecxz
int
jg
in
xchg
cmpsb
or
rol
lahf
out
shrb
xchg
mov
out
repz
mov
push
jg
incb
aas
inc
jl
ja
std
jne
and
movsb
add
mov
jg
stos
stc
sub
add
or
call
fs
or
add
scas
out
pop
and
mov
iret
xlat
add
push
out
dec
jmp
add
push
outsb
ja
fadd
fadd
pop
out
push
or
negb
mov
mov
adc
lods
pop
sub
leave
aam
icebp
daa
andl
jb
scas
insl
stos
mov
enter
lea
daa
test
ss
mov
loopne
mov
das
and
ljmp
inc
jmp
and
fidivs
and
mov
cwtl
imul
pop
mov
mov
add
inc
pop
mov
pop
ja
out
adcb
outsb
dec
and
push
pop
das
mov
jp
out
and
test
scas
push
add
insl
mov
stos
jb
das
popa
adcl
enter
mov
int
cmpsb
iret
pop
xchg
outsl
call
ljmp
jg
mov
xchg
xchg
pinsrw
mov
or
jne
fucomip
in
imul
js
popf
pop
stos
jno
lds
xchg
jg
cmp
and
sbb
add
data16
out
lock
ja
pop
push
stos
popl
cs
popf
pusha
or
outsl
xchg
push
xor
pop
int3
incl
push
push
or
adc
fisttps
xor
outsl
xor
pop
out
call
add
mov
lahf
addr16
adc
aas
mov
xchg
xlat
dec
lret
xchg
int
add
and
jl
mov
addl
xlat
shlb
dec
fistl
mov
jg
sbb
mov
daa
jo
in
fistpl
out
pushl
cld
pop
jg
pop
and
pop
fadds
mov
mov
xstore-rng
cmpsl
ret
aaa
stc
aaa
push
lahf
and
stos
out
mov
jb
sub
enter
arpl
push
adc
jecxz
pop
inc
mov
xchg
push
pop
xchg
sbb
mov
and
clc
push
jo
iret
and
lds
ret
and
pushl
hlt
fmulp
mov
loop
and
orps
and
addps
xor
movsb
xchg
jecxz
cmpsl
loope
leave
adcl
nop
jmp
outsb
mov
pusha
and
movsl
and
pop
sbb
or
sbb
pop
push
scas
push
std
mov
pop
aaa
xlat
mov
int
mov
outsb
inc
jg
xchg
popa
push
pop
cmpsb
arpl
xchg
mov
jnp
jb
and
mov
test
gs
sbb
movsb
lock
cmp
sbb
dec
push
sbb
pusha
sub
aaa
data16
shlb
jge
decl
fmull
daa
xlat
call
jl
fbstp
cmp
clc
jg
cs
jo
in
lds
fwait
scas
xor
inc
push
sub
xchg
loopne
jae
test
rol
cmpsl
out
mov
addr16
out
rcll
adc
decl
sub
ret
pop
addr16
xchg
mov
rolb
mov
dec
sub
add
or
filds
push
repz
mov
clc
ja
es
pop
lahf
pop
cmp
imul
mov
in
xor
pop
sbb
and
pop
jg
sub
out
int3
repnz
les
rorl
push
scas
and
adc
inc
movsb
push
mov
out
xorb
adc
sub
outsl
movsb
jg
mov
xchg
movsl
xchg
inc
adc
movsl
dec
push
in
std
sbb
cmpsb
push
pop
jmp
adc
jg
in
inc
bswap
jns
adc
push
andnpd
sbb
adc
lock
jle
dec
push
fidivrl
mov
por
mov
jmp
out
cmc
ffreep
and
lcall
mov
sub
pop
das
pushf
dec
adc
pusha
xor
xchg
roll
cmp
lods
arpl
mov
int3
mov
xchg
es
or
outsb
pop
jmp
loope
push
mov
inc
adc
call
xor
ja
clc
jg
sbb
mov
outsl
mov
and
int
and
test
cmpsl
enter
and
rcl
mov
dec
daa
lods
adcl
dec
cwtl
adc
mul
push
or
aas
pushf
iret
push
movsl
cmp
pop
and
popa
xor
mov
dec
sbb
scas
fsubrs
inc
sbb
not
inc
pop
loope
pop
sub
or
dec
lret
mov
cmp
or
adc
pop
mov
arpl
decl
out
or
push
jecxz
sahf
push
xchg
dec
inc
adc
xchg
inc
rcrb
int
inc
ds
movl
mov
outsb
clc
pop
dec
popa
scas
push
sbb
mov
out
jns
js
xchg
cmpsl
out
fisttpll
in
lret
into
out
pusha
arpl
mov
movsl
or
push
std
push
outsl
sbb
mov
push
sbb
dec
pop
dec
neg
les
add
iret
and
roll
out
adc
mov
dec
inc
les
adc
call
mov
sbb
cmpsl
mov
aaa
dec
adc
movlhps
test
sbb
pop
sbb
mov
xchg
test
adc
fadd
shr
idiv
fiadds
mov
out
sahf
push
das
cmpsb
and
in
shrb
jmp
in
cmp
mov
push
mov
lcall
dec
pushl
unpcklps
xor
incb
xadd
mov
push
push
mov
add
loopne
test
dec
pop
sahf
dec
adc
dec
adc
dec
inc
aaa
mov
leave
cmp
leave
rcrl
cmpsb
mov
mov
clc
insb
out
xchg
out
jbe
xor
xchg
aaa
clc
das
push
lds
mov
xor
js
mov
inc
dec
xor
mov
ljmp
data16
or
pop
psrad
dec
out
xchg
inc
adc
lods
add
test
add
jg
incl
ucomiss
mov
push
ret
testl
scas
ja
ret
xchg
jg
lahf
repnz
and
sub
cmc
loop
add
xchg
jl
outsb
loopne
fwait
dec
dec
mov
mov
xlat
mov
sub
pop
pop
mov
lock
jne
xchg
or
out
dec
dec
cmp
or
insl
rclb
mov
ja
dec
int
idivb
cmpsb
lock
scas
addl
mov
add
jg
fmuls
push
mov
xlat
cmpsl
sbb
hlt
dec
in
into
mov
push
mov
out
xorl
xorb
mov
add
in
test
out
xchg
xchg
out
pusha
or
cli
in
sarb
pusha
mov
pusha
aas
jns
pop
jl
cwtl
orb
outsl
xchg
test
movb
mov
ja
sbb
rclb
or
pushf
shlb
mov
arpl
call
repz
ljmp
mov
insl
nop
nop
cli
sahf
fadd
mov
sbb
pusha
xor
mov
or
pop
xor
divl
leave
pop
sbb
sub
add
and
add
ja
in
shrl
mov
cmc
inc
sbb
sahf
jbe
bound
add
jecxz
xchg
sbb
dec
setp
pop
jne
lods
pusha
xchg
je
pop
add
mov
addr16
ja
dec
mov
xor
pop
mov
or
inc
iret
sub
push
mull
push
clc
cmpsb
in
mov
incb
out
out
imul
xor
ss
data16
les
ret
xchg
dec
sbb
xchg
pop
cmp
add
cmpsb
mov
subb
pop
jp
mov
test
mov
jle
cmc
out
xor
out
pop
in
imul
mov
pop
mov
icebp
shll
das
mov
in
out
push
js
rol
movsl
jl
rcrl
xchg
out
xor
lock
jno
outsb
push
or
sub
push
add
push
sbb
negb
cmpsl
gs
insl
cmp
fcmovnbe
mov
sbb
or
out
xchg
adc
pop
xor
pop
sub
out
xchg
or
cmp
mov
adc
dec
daa
inc
sarb
out
mov
jns
xchg
insl
pop
add
inc
add
pop
inc
ljmp
scas
mov
dec
add
test
adc
das
push
adc
ljmp
mov
lea
sahf
shrl
xor
pop
sub
outsl
cmc
repz
or
jecxz
add
dec
jbe
mov
pusha
sub
push
out
dec
call
push
adcl
dec
pop
addr16
mov
jmp
scas
gs
pushf
push
aaa
pop
mov
dec
dec
jg
jb
or
mov
push
sub
out
lock
push
aas
mov
cmpsl
mov
std
lahf
sbb
cmpb
mov
jge
repnz
sti
les
inc
outsb
pop
xchg
push
cmpsl
xchg
and
and
sbb
out
jmp
cld
out
inc
aas
leave
fwait
jp
popa
ljmp
clc
sub
daa
stc
jecxz
call
int
stc
xor
incl
punpckhwd
jecxz
out
fidivrs
enter
pushl
xor
jg
pusha
and
mov
sbb
xchg
fistpll
mov
out
jmp
arpl
lcall
pop
enter
imul
xchg
aaa
jbe
jg
enter
jg
inc
mov
pusha
and
mov
xor
push
shll
aaa
decl
xlat
out
mov
dec
push
push
xchg
push
outsb
push
jecxz
lea
int
adc
rorl
xorl
daa
and
jge
jbe
xor
lds
test
jb
enter
test
orl
mov
and
enter
aaa
lahf
dec
cld
add
pop
lock
pop
rolb
pop
xchg
add
mov
push
aam
push
push
sub
pop
incl
push
sub
pop
decl
jns
add
gs
aaa
orl
stos
addb
addl
add
hlt
jmp
imul
insb
pop
outsl
aas
movsb
jg
mov
movsb
imul
push
and
cmpsl
sti
fldt
sar
pop
in
xchg
jg
inc
jmp
mov
fisubrs
inc
repz
sbb
aas
roll
inc
xchg
js
mov
add
mov
out
mov
add
add
cs
out
or
mov
mov
ds
adc
cmp
mov
sub
mov
xchg
dec
call
jbe
mov
jg
in
pop
add
push
pop
fwait
mov
adc
sar
bswap
xchg
jae
mov
sub
out
xlat
jg
dec
pcmpeqd
xchg
lea
ljmp
push
pop
outsl
mov
les
xchg
jp
pop
and
pop
xchg
sti
push
sahf
scas
cmp
lock
das
aaa
xchg
ja
sub
les
out
jmp
jg
dec
lahf
je
out
pop
dec
cmp
xchg
outsl
or
out
mov
jle
inc
pop
push
pop
out
arpl
pop
xchg
scas
js
leave
psrlq
xchg
mov
je
adc
add
or
jl
pop
cmpsl
xchg
out
mov
jl
ret
mov
les
test
or
dec
icebp
jo
dec
xor
into
xlat
sub
es
into
push
pop
lock
out
mov
add
outsl
adc
aas
loop
or
push
mov
bound
sub
push
loop
inc
repz
clc
inc
aad
scas
lcall
daa
aad
fwait
jno
imul
mov
dec
push
push
mov
lock
jbe
sbb
push
orl
dec
scas
mov
lock
call
sahf
jnp
mov
fistps
call
mov
ds
lcall
pop
xchg
addb
xchg
incb
ret
data16
outsl
clc
out
leave
adc
add
cltd
jp
inc
jno
mov
dec
push
sbb
aas
mov
ljmp
inc
push
mov
outsl
mov
stos
xchg
jmp
data16
add
data16
into
je
mov
in
out
aad
dec
mov
das
out
shlb
inc
sbb
mov
pusha
and
clc
pop
loopne
rorl
push
xchg
mov
decb
loop
push
mov
mov
fisubs
lcall
aaa
jne
jnp
and
mov
divb
xchg
iret
mov
iret
mov
mov
adc
xor
mov
sbbb
lock
jbe
xor
daa
movl
lahf
subl
arpl
lahf
iret
imulb
addl
and
mov
lea
inc
lock
add
sub
and
fcmovb
mov
cwtl
pop
pusha
sub
dec
arpl
dec
out
outsl
or
pop
stc
pop
icebp
pushl
add
shlb
icebp
out
test
inc
int3
mov
sub
ljmp
aaa
das
fldcw
test
mov
addr16
cmpsl
mov
aas
rorb
inc
in
icebp
in
jg
mov
xchg
jae
jo
loop
xchg
xchg
sar
push
fidivl
sub
punpckhwd
pop
cmp
enter
loop
aaa
fistpll
inc
pop
iret
xchg
push
aaa
push
in
shll
mov
or
loop
jg
mov
cmp
cmc
fnstsw
leave
pop
js
jbe
xchg
jecxz
pushl
mov
aaa
fadd
jp
pop
adc
mov
daa
sar
call
pushf
jne
lret
jl
data16
mov
scas
shlb
in
jns
stc
int3
jae
fmulp
jne
test
jbe
pop
aam
pusha
or
sbb
mov
add
add
sbb
frstor
jo
or
add
std
jno
xchg
ss
jbe
xchg
cmpsb
add
xchg
outsl
and
jg
enter
mov
mov
push
or
sbb
decl
movsl
dec
or
cwtl
ja
jg
inc
xor
dec
or
das
aas
decl
call
ret
pop
repnz
mov
out
cmpsb
mov
fst
dec
ja
xor
cmpsb
xchg
mov
mov
pop
cld
notb
out
mov
dec
pop
or
push
mov
addl
inc
into
push
mov
call
xchg
xor
lea
idiv
cmpsl
psrlq
sbb
mov
leave
fsubs
dec
and
fildll
xbegin
ljmp
push
adc
imul
ja
push
mov
out
push
pusha
or
in
push
add
popf
sbb
imulb
ss
jecxz
pop
imulb
inc
sub
lods
daa
adc
dec
lahf
inc
popa
or
xor
add
lahf
and
es
lock
aaa
mull
xor
push
outsl
pop
jp
mov
popa
mov
ss
outsb
adc
pop
sbb
or
pusha
sbb
add
fistps
das
mov
decl
les
or
outsl
aas
mov
jl
xor
xchg
push
add
dec
xchg
add
jecxz
outsb
jmp
mov
jb
mov
and
push
aas
data16
adc
cmp
neg
outsb
call
fxch
sbb
lahf
gs
call
call
dec
mov
xchg
das
ja
fbld
jle
lret
push
push
mov
iret
xchg
push
cmp
pop
mov
push
out
pop
loopne
dec
jg
jecxz
fnstenv
dec
jmp
lahf
out
bound
in
xchg
inc
adc
arpl
adc
mov
sbb
push
mov
mov
ljmp
call
jle
mov
mov
xor
push
mov
pop
adc
mov
ret
sbb
push
loope
adc
add
daa
addr16
cmc
in
outsb
and
sbb
test
adc
or
xor
sbb
testl
fcomi
call
sbb
mov
pop
or
pop
xchg
adc
outsl
aaa
xrelease
pop
sbb
xchg
outsb
jbe
or
add
and
in
add
cmp
dec
cmp
lret
and
movsl
cmp
in
push
push
adc
mov
inc
and
sub
and
addr16
dec
ljmp
dec
and
add
and
pop
push
filds
out
aad
addb
and
or
sub
in
pop
inc
xor
loopne
cmp
cmp
movsb
mov
and
jns
sub
insl
adc
push
out
sti
adc
jae
or
add
nop
sbbl
sbb
and
inc
pushf
movsb
fimuls
jb
add
mov
pop
mov
lods
pop
xchg
ret
xor
roll
mov
and
scas
insb
lret
add
or
fisubrl
sbb
dec
push
addr16
inc
jns
test
pop
sub
sub
shlb
jg
add
imul
dec
jmp
add
inc
mov
xchg
mov
bound
or
jne
cmp
popa
repz
xchg
inc
outsl
add
lock
lds
insb
scas
or
add
or
decl
and
insb
outsb
jae
and
outsb
cmp
push
imul
cli
jae
data16
jnp
and
jbe
and
imul
mov
xor
xor
ds
neg
cmp
arpl
je
mov
ds
dec
sub
and
cli
fidivl
and
adc
cmpsl
aam
sahf
pop
rcrb
fildll
push
inc
in
sti
sbb
jbe
cmp
out
ljmp
xor
cs
xor
or
sbb
inc
jb
mov
cmp
dec
js
ss
xchg
test
es
mov
or
or
arpl
bound
bound
popa
pop
or
out
cmp
pop
das
and
pop
pop
add
or
addr16
xor
xchg
les
jb
jge
or
aad
or
imul
lret
and
jecxz
or
cmp
xchg
sub
cmp
pop
dec
xchg
inc
fsubl
das
aas
data16
test
mov
sub
das
filds
cmc
rclb
and
mov
and
shl
neg
rcr
mov
fisttpl
add
push
mov
not
not
cmp
sbbb
stos
cltd
push
mov
jmp
mov
xchg
push
lea
nop
lcall
mov
or
enter
sahf
rcl
or
shr
cmc
test
shld
jg
mov
ja
mov
or
adc
mov
std
jg
shld
mov
xor
std
add
or
jmp
ljmp
or
sub
push
sub
fstpl
inc
lea
push
push
negl
jg
mov
sub
aas
add
jl
mov
ret
mov
lock
sub
ret
fcmovnbe
inc
aaa
xor
loope
lds
pusha
mov
jnp
mov
push
inc
lret
loopne
jmp
in
mov
mov
jbe
mov
add
mov
pusha
jmp
or
enter
push
mov
jmp
dec
jmp
shl
sar
pushf
clc
push
xor
jmp
mov
adc
aam
xor
dec
mov
adc
in
mov
aad
int
push
xchg
fistpll
clc
mov
add
call
adc
fimull
jle
xchg
subl
cld
pop
push
dec
jmp
fidivrs
mov
xchg
rorb
xor
sbb
and
lret
lret
in
das
addr16
jl
shlb
insb
and
pop
push
cld
fisttpl
shll
not
loope
xor
out
loope
sahf
not
inc
lods
lret
cmc
cld
inc
mov
xchg
dec
add
add
clc
pushf
inc
jo
loopne
add
jle
push
jnp
js
adc
lock
push
mov
in
fdivrp
mov
decb
xchg
seta
lods
pusha
movsl
push
sub
out
movsl
xor
notb
sub
sbb
rcrb
insb
cs
pop
test
aaa
jmp
out
and
pushl
std
mov
jg
aas
cmp
divl
cmc
add
jmp
cmpsl
das
jecxz
xor
mov
rcr
shrl
pop
scas
push
popf
bsf
pushf
insb
clc
xchg
push
add
call
or
mov
lea
pop
push
jae
lds
push
jl
hlt
cmc
or
sbb
test
jmp
int
mov
push
cmp
les
pusha
sub
push
shrb
jmp
fidivl
mov
aas
push
add
ds
xchg
icebp
cmpsb
lea
das
iret
hlt
sbb
sahf
mov
sar
adc
mov
adc
or
call
sub
test
push
sti
scas
pop
and
mov
call
fsubl
xor
pop
outsl
pop
leave
add
subl
inc
pop
xor
push
push
stos
insl
mov
jmp
hlt
add
in
ljmp
and
shrl
shll
call
sub
test
ljmp
mov
lock
aas
or
out
dec
outsl
pop
jno
and
mov
stc
push
not
mov
push
ss
add
lds
mov
pop
xorb
icebp
call
adc
aad
mov
cltd
lret
andl
sbb
idivb
int3
fwait
or
rcr
pop
or
ds
adc
adc
cmc
clc
movsb
pusha
add
popf
pusha
jo
bound
nop
xchg
leave
push
int3
test
les
jbe
aam
sbb
jns
rcrl
mov
and
jo
lret
das
sbb
test
call
cmpb
pushf
shl
in
int3
out
jge
dec
sbbl
loopne
repnz
fisubl
mov
js
xor
clc
xchg
xor
sub
jg
mov
and
xor
mov
aas
jge
pop
insl
fcom
inc
lds
adc
sahf
ret
popa
push
ret
movsl
cmc
icebp
lea
cmp
lds
sti
data16
out
scas
cmp
inc
daa
inc
lds
pop
dec
inc
push
jmp
adc
rolb
leave
xor
loop
incl
aam
loop
lret
enter
call
ret
mov
pusha
inc
push
push
sub
pop
loopne
mov
loopne
pushw
mov
std
mov
nop
jnp
orb
jl
push
pusha
mov
adc
je
mov
jmp
lock
push
fcomi
jg
stos
outsl
or
jmp
cmp
mov
sbb
add
fisttps
and
pop
jl
add
pcmpgtd
jmp
jge
jl
jge
pusha
out
add
sbb
jmp
ljmp
and
lea
jmp
dec
popa
andb
hlt
in
adc
filds
mov
xor
pop
mov
shl
adc
ret
shrl
mov
inc
fcmovbe
cmp
pop
mov
jmp
clc
push
sub
enter
mov
ja
decl
inc
loop
aam
adc
arpl
fisubrs
lea
iret
lock
rol
enter
lret
push
add
mov
les
stos
and
pusha
push
or
xor
jo
mov
rolb
jmp
std
and
jmp
stc
stc
not
sbb
mov
pushf
leave
sub
hlt
add
lcall
and
imul
add
xadd
rcr
lea
push
fildll
rorb
in
mov
sarl
pusha
push
jae
mov
js
outsb
cs
call
shl
test
xor
jmp
pop
pop
loop
pusha
push
stos
mov
call
fidivrs
test
lock
out
xorb
add
xor
hlt
push
clc
setbe
rcr
cmp
cli
sub
jne
shll
cmp
jno
lret
xchg
data16
cli
push
wrmsr
cli
mov
mov
or
mov
loopne
into
clc
int3
cli
and
call
test
pushf
xchg
pusha
mov
clc
jg
sarb
addl
fmuls
mov
mov
clc
jmp
sbb
push
lahf
lahf
lds
and
or
cli
idivl
xchg
pop
push
jle
inc
cmc
xor
add
neg
ja
sbb
decb
jb
call
mov
jg
push
lock
mov
xchg
mov
stos
jb
cli
xor
jecxz
push
pop
push
lcall
mov
sub
push
xor
pop
fildl
into
xchg
mov
imul
int3
scas
test
ficomps
add
push
imul
adc
lea
push
fwait
out
xchg
pop
xor
shr
andb
cmpsl
or
xor
push
cmpsl
sub
pop
jecxz
in
sbbb
call
loope
loop
outsl
out
idiv
push
out
mov
cmc
mov
push
push
mov
or
cmp
rcl
push
pop
pusha
pop
push
and
sub
or
sbb
pop
notb
adc
mov
leave
orb
in
xchg
cmpsl
into
neg
out
jp
and
knotw
ficoml
jnp
push
mov
add
lds
push
lds
js
push
cmp
call
inc
idivl
cmp
cmp
aam
test
mov
pusha
or
mov
shl
rol
in
or
mov
sar
clc
xor
adc
push
rcr
out
sbb
push
in
sub
add
mov
insb
mov
cmp
outsb
push
call
inc
outsb
out
pop
pop
add
xor
mov
dec
sbbb
and
pop
pop
sbbl
loop
outsb
call
mov
fsubs
jns
insl
and
push
cmp
ror
dec
stos
ljmp
fildll
rclb
push
inc
jmp
pop
stc
test
into
lods
lods
aad
dec
add
adc
imul
roll
cmp
or
js
mov
ret
gs
pusha
ja
ds
pop
jmp
lock
sub
lret
adc
lods
or
jp
lods
pop
lret
push
insl
clc
repnz
dec
or
testl
mov
xlat
push
jp
movsl
stc
cmp
pushf
pop
lods
cli
or
xchg
cld
rdtsc
cmp
xchg
cmc
mov
jne
addl
sub
sub
mov
or
inc
mov
push
and
rcrl
psubsw
or
repnz
dec
mov
jp
neg
out
or
xor
aam
jg
add
es
mov
pushf
mov
cmp
mov
jp
call
mov
mov
cmp
in
and
ret
cltd
xchg
jnp
lcall
and
cld
lea
pop
push
pusha
push
jmp
cmc
pop
sbb
inc
sub
xor
je
or
xor
sub
clc
scas
cmc
jmp
add
jae
push
clc
add
jmp
fiaddl
push
into
setl
sti
and
call
xchg
lcall
mov
xor
xchg
lea
or
sbb
mov
cli
or
xor
pusha
fidivrs
in
mov
xchg
loopne
lods
fnstsw
lret
out
mul
lcall
btr
push
inc
fwait
out
inc
lds
adc
or
aad
push
clc
lock
lcall
jmp
jg
jmp
dec
mov
jl
dec
pop
jo
cmp
pop
push
cmp
ror
aas
or
xchg
loopne
xchg
push
inc
aas
popa
push
cld
sarb
ljmp
cmc
sbb
ret
push
bswap
and
das
adc
xchg
lods
push
jmp
loope
ljmp
mov
dec
loopne
pop
and
mov
repz
shl
mov
lods
push
lds
pusha
aaa
test
or
push
outsb
or
push
cmp
adc
mov
into
cmpsb
push
dec
ljmp
sub
push
je
movb
std
aaa
or
cmp
mov
outsl
repz
add
sbb
pusha
push
pusha
push
fildl
data16
adc
or
ret
lret
push
xchg
clc
inc
in
dec
jmp
subb
jmp
cmp
cld
call
andl
pop
aas
mov
pop
dec
sar
jle
xlat
stc
push
inc
addr16
insb
clc
hlt
roll
pop
push
mov
mov
cli
int
das
and
pushf
push
pop
sub
push
pushf
jmp
outsb
push
cmp
clc
das
dec
repnz
rcr
xchg
pop
adc
xchg
mov
ficomps
inc
xchg
inc
push
mov
add
icebp
sar
fincstp
lock
sbb
out
mov
push
pop
icebp
in
adc
mov
das
loopne
lock
xor
fstl
ficoms
mov
or
push
nop
jmp
and
sub
aad
or
mov
mov
pushf
or
mov
ficoml
mov
pushf
shl
add
lcall
test
pop
fisttpll
lahf
pusha
xor
jmp
pop
mov
or
xorl
sbb
inc
bound
adc
jmp
dec
insb
call
jmp
aas
ret
fdivs
adc
stc
cli
stos
jb
add
and
mov
and
ror
add
aad
enter
push
lcall
or
aas
sahf
sbb
adc
sbb
mov
cltd
jae
testb
cmp
clc
mov
mov
xor
pop
xorb
mov
in
xlat
rorb
jmp
loop
cmpsl
call
add
mov
mov
jmp
mov
adc
inc
in
mov
or
and
mov
mov
lds
call
xchg
call
fsub
call
or
mov
cld
jae
decl
add
aaa
xchg
mov
nop
cmova
add
sbb
jg
push
js
aaa
adc
mov
insl
dec
push
sub
sbb
or
xor
jmp
mov
cmp
mov
mov
insl
jle
cmp
subl
in
sbb
mov
orb
in
xor
xor
jns
in
imulb
pop
sarb
jb
out
gs
nop
mov
mov
mov
dec
out
jbe
addr16
aas
ss
push
sbb
inc
jne
outsb
aas
pop
push
inc
sbb
outsb
jle
push
mov
xchg
pop
xchg
push
ss
out
fstp
loopne
es
out
mov
mov
push
fs
sarb
outsb
adc
fucomp
ss
jbe
inc
mov
push
outsb
call
jle
pop
pop
xchg
add
into
fisubrs
loopne
fwait
jl
jg
push
and
jbe
push
aaa
dec
loop
push
aaa
mov
inc
sahf
mov
sbb
push
xchg
loop
push
fiadds
or
cs
adc
outsb
jle
decl
mov
scas
dec
jne
decl
mov
push
sahf
ds
sbb
aaa
sbb
push
pop
inc
or
sahf
outsb
out
push
mov
cs
into
push
fucom
out
out
cs
outsb
ds
push
cmpsb
fmull
out
xchg
pop
mov
mov
adc
inc
xchg
dec
xchg
fucom
dec
sahf
push
cs
ja
shl
mov
out
arpl
pop
mov
ljmp
mov
cmpsb
inc
pop
xchg
sbb
xorb
push
bswap
jbe
mov
xchg
es
incl
pop
ja
pushf
or
xlat
add
in
jmp
sbb
add
ret
push
test
std
sbb
pop
movsb
in
push
mov
push
adc
jmp
icebp
pop
xchg
or
shr
daa
cli
and
test
mov
add
rcl
push
stos
lock
add
sub
xor
out
cltd
addl
mov
push
fmuls
dec
jb
in
inc
add
bound
in
cmp
movsl
pop
loopne
dec
jmp
mov
mov
test
push
idivb
add
mov
sub
inc
filds
pop
or
ja
stc
pushf
cld
dec
xchg
icebp
shr
xor
adc
mov
popa
test
sub
mov
dec
fcompl
jo
into
pop
loopne
scas
aas
pushf
repz
pusha
aam
movb
pop
sbb
cmp
pusha
jmp
and
push
cmp
pop
mov
iretw
clc
xchg
into
xor
xorb
add
sbbl
rol
call
push
test
sub
push
pop
dec
mov
call
fiadds
or
into
repz
add
sbb
scas
shl
sbb
rcll
icebp
fs
or
jno
xchg
fmull
bound
lcall
adc
rorb
xchg
xchg
int
jmp
mov
pusha
mov
test
call
jbe
sub
jecxz
push
adc
sub
fisttpll
insl
jne
add
aas
xor
shr
mov
add
fiadds
or
mov
jecxz
lods
ljmp
adc
psubd
push
loopne
lret
js
and
fucomi
out
pop
lds
fsubr
push
pushf
repz
push
inc
add
clc
imul
xor
pusha
dec
enter
or
push
cmc
and
subb
test
mov
pushf
test
jbe
mov
cwtl
out
pop
test
clc
out
xchg
xchg
jle
mov
pushf
sub
xor
fmuls
inc
call
mov
add
mov
nop
xor
pushf
inc
gs
jge
mov
clc
outsl
clc
lods
adc
xor
jmp
lods
call
xor
push
rorb
mov
cmp
add
roll
or
cli
test
sti
jae
jmp
jle
in
insl
in
rorb
jmp
dec
adcb
daa
test
call
sarl
mov
js
add
or
mov
xor
dec
cmpsl
jp
inc
les
jmp
out
pusha
pusha
stos
sbb
lods
mov
aam
mov
call
cli
sub
or
lret
pushf
aad
fcmovbe
cli
dec
sar
mov
cmp
cmc
sbb
call
out
add
leave
or
decl
dec
ss
lea
mov
pushf
enter
idivb
push
xchg
pop
mov
std
jmp
ljmp
in
or
and
lea
clc
xor
dec
cld
and
sub
ret
sbb
jmp
push
roll
jle
test
std
pop
fwait
pop
push
ret
adc
pushf
and
pop
daa
lock
sub
inc
sti
dec
xchg
or
rol
add
fcmovu
or
mov
stc
pop
loopne
call
neg
clc
jmp
or
sub
mov
add
push
cmp
xchg
sbbb
or
jbe
cmp
push
push
ds
mov
cmp
aad
lret
rorb
push
sbb
out
mov
test
or
push
adc
jne
lcall
jl
mov
or
std
pushf
push
sub
push
and
push
mov
or
cld
xchg
hlt
cmp
inc
push
xchg
xchg
lods
ja
push
xchg
dec
cwtl
xlat
movswl
cmp
outsl
mov
inc
xor
pop
sbb
test
rolb
aad
pop
inc
push
stos
ja
lcall
addb
into
call
aas
cmp
sub
mov
push
addb
dec
sub
movsb
fcomps
xor
call
int3
shlb
add
out
push
pop
and
scas
add
jmp
rol
pop
xchg
mov
push
pop
push
cmp
data16
add
popl
fidivrl
out
cmc
cli
daa
sub
test
cmc
sub
popf
lret
jmp
imulb
sbb
adc
add
sbb
movsl
call
xor
jne
pop
popf
filds
pushf
mov
push
dec
andb
ret
rcr
loop
dec
mov
xchg
shll
sbb
sar
lret
add
loopne
call
push
adc
sbb
pusha
call
pop
mov
cmp
aad
bound
lds
jne
rcr
push
xchg
movsb
add
push
imul
cmc
push
fwait
inc
test
rorl
loop
push
fistl
mov
cmp
pop
add
rcl
sub
mov
pop
mov
loop
clc
inc
pushf
jnp
daa
inc
lock
and
push
daa
mov
cmp
add
cmp
pop
mov
pushf
adc
add
call
addb
rep
lea
out
or
rcl
mov
mov
add
lds
fisttpll
in
stos
inc
adc
test
xchg
adc
mov
aam
pop
imul
scas
push
and
and
rclb
out
fisubrl
mov
test
shrb
sbb
jno
inc
lock
in
xlat
pusha
test
test
dec
jne
inc
push
jecxz
adc
cmp
movb
shlb
lcall
pusha
stos
sub
or
cmp
mov
jb
inc
into
jge
subl
in
repnz
setge
lock
adc
test
sbb
or
loopne
mov
mov
mov
enter
rclb
sub
sbb
sub
stc
mov
cmc
push
nop
lret
jo,pt
and
mov
push
ja
xor
jp
int3
fadd
roll
push
mov
lahf
mov
pusha
pusha
adc
xchg
mov
aad
mov
inc
mov
ss
sarl
mov
loope
and
push
add
inc
pop
xchg
xchg
push
jmp
xchg
daa
ror
fwait
into
and
call
sbb
mov
mov
stc
cs
mov
adc
or
adc
or
out
jae
pop
insl
decl
mov
in
cmp
push
bnd
pop
lock
adc
out
call
add
jmp
lds
aas
movsb
dec
push
movsb
xchg
scas
js
cmp
and
in
popa
ficompl
call
jecxz
ljmp
pop
not
aad
aas
cli
out
imul
push
lret
lods
cli
push
pop
add
fiaddl
adc
xchg
std
jb
adc
or
xadd
dec
outsb
sti
stos
scas
js
push
jecxz
inc
push
inc
arpl
mov
dec
sub
stos
out
mov
jl
mov
decl
xorb
jmp
into
jle
xchg
push
lret
outsl
cs
pop
jae
divl
push
out
movsb
sub
pushf
cmpsl
pusha
test
fwait
push
xor
sub
shl
pushf
addr16
lock
sti
arpl
pop
mov
mov
push
movl
jp
mov
filds
iret
xchg
stc
pop
ds
les
jbe
movb
and
pushf
out
sbb
mov
out
unpcklps
jno
test
fucomi
adc
cltd
jle
xchg
fldenv
inc
mov
cwtl
xchg
je,pt
push
jns,pn
jmp
adc
shl
pushf
or
mov
inc
or
add
jmp
mov
or
pushf
push
push
sbb
insb
jmp
lcall
in
pushf
cmp
push
repnz
add
cmc
hlt
pop
inc
push
test
mov
jb
push
inc
xor
icebp
and
dec
iret
lds
push
xor
fsubrp
sbb
jmp
je
outsb
push
ss
call
orb
jecxz
push
data16
xor
inc
testl
cmc
adc
fistpll
in
xor
mov
ret
dec
mov
sbb
sarb
rcrl
stos
jmp
fnstenv
ret
out
shll
inc
sub
sarb
stc
call
cwtl
inc
mov
sub
aas
sub
inc
xchg
mov
cmpsb
inc
pusha
mov
sub
ja
cmp
push
jecxz
mov
push
jmp
xchg
testl
call
lret
das
clc
xor
sar
into
xor
ds
in
pop
stc
xchg
adc
sti
add
rclb
fadds
call
dec
scas
cli
mov
xor
jmp
jl
xor
sub
jmp
mov
push
dec
mov
test
xchg
dec
subb
sbb
or
cmp
sub
mov
add
fdivrp
lods
adcl
fisttpl
rclb
lea
pop
mov
call
xchg
dec
cmp
lcall
loop
icebp
adc
cmc
ret
insl
test
movb
ljmp
xchg
mov
jg
aas
push
sub
orb
cmc
adc
das
inc
mov
decl
jp
push
fs
jle
and
xchg
cli
lods
dec
push
ljmp
xchg
jge
inc
sub
scas
adc
sbb
jecxz
push
mov
pop
jge
dec
hlt
fimull
decb
or
iret
incl
lock
mov
ret
popa
mov
mulb
int
xor
out
or
push
test
cld
jmp
cmp
test
pop
push
lods
push
xlat
cmc
aad
fs
shlb
jmp
jne
test
int
add
push
jg
repz
cmp
xlat
pop
cmp
das
dec
imul
lret
icebp
push
insb
xchg
popf
xchg
jg
loope
xchg
mov
mov
imul
cmp
fisttpl
sub
cmp
mov
imul
xor
aaa
push
negb
jne
and
pushl
lods
mov
dec
mov
fs
aam
je
out
and
sub
jmp
cmp
mov
insb
mov
xchg
ja
subb
outsb
and
adc
or
rcrb
sub
sub
cmp
sub
pop
sub
mov
jecxz
and
sahf
inc
stc
sub
pop
pop
decl
cltd
mov
mov
pop
mov
repnz
ret
mov
shlb
movntq
out
mov
sub
pushf
jl
xlat
jb
cltd
xchg
out
or
incl
cld
cs
push
cmp
dec
imul
imul
push
pop
imul
movb
add
and
outsl
call
jl
lock
std
std
mov
xchg
xor
je
cld
push
leave
ret
cld
ljmp
push
cltd
adc
pop
pushf
ss
in
pop
sub
jge
mov
inc
jge
jg
aam
pop
les
ljmp
xlat
test
mov
aaa
and
popf
ret
in
xchg
push
cmpsb
test
fdivrs
js
scas
call
xchg
loop
add
jmp
sbb
js
cmc
push
jmp
adc
sbb
cmpsb
push
aas
cmp
jmp
fdivr
ljmp
mov
inc
fidivrs
dec
stos
dec
sbb
xchg
fwait
xchg
cs
jnp
sti
lcall
and
push
xor
es
pop
mov
shl
inc
in
xlat
adc
pop
xchg
jle
pop
cmp
xchg
mov
outsb
decl
jmp
pop
pop
sub
adc
pop
cmp
stc
mov
inc
sbb
fidivrl
aaa
lcall
std
call
ja
add
jo
js
cmpsb
out
std
xor
jge
or
das
push
stos
mov
mov
mov
mov
shlb
cmp
iret
fiaddl
cwtl
jns
decl
fs
fldcw
or
xor
cmpsl
ret
jg
pop
rcrb
test
jmp
ljmp
xor
jle
cmp
inc
sti
mov
andl
xchg
jg
cmp
xorl
sbb
stc
sub
ds
push
clc
mov
fnstcw
cli
pushl
sbb
stos
pop
add
mov
mov
jnp
mov
pop
dec
xor
sub
insb
nop
xchg
and
icebp
fcoml
inc
xchg
incl
pop
data16
cld
scas
lods
jo
dec
jbe
inc
fmul
ja
repz
cltd
push
icebp
sub
das
cmp
inc
addl
pop
fnstcw
cld
sub
ljmp
stos
cmp
shll
xchg
idivl
mov
arpl
call
and
or
or
inc
popa
xor
adc
test
out
jb
das
cmp
scas
aas
out
arpl
mov
ret
jge
xor
les
mov
dec
jge
dec
in
push
incl
and
aam
pop
in
sub
test
icebp
push
pop
add
xchg
inc
xchg
aad
movsl
test
xchg
fcomp
inc
inc
xor
mov
dec
push
push
push
mov
jmp
dec
jge
sbb
pusha
mov
out
mov
and
push
jnp
sbb
repnz
pushl
jbe
lret
test
inc
aad
and
fldl
movsb
shlb
jp
cmc
int3
dec
inc
pusha
push
or
in
decl
xchg
ret
jbe
adc
ret
int
rorl
mov
inc
dec
outsl
pushf
fnstsw
jns
mov
dec
dec
repnz
aam
pop
stc
ljmp
adc
test
icebp
lods
xchg
push
icebp
mov
inc
sbb
jbe
xor
mov
nop
lock
cwtl
adcl
dec
es
shl
dec
sbb
stc
fxch
push
fdivrl
js
push
and
jp
jne
inc
sti
int3
dec
push
bnd
inc
cltd
pop
js
adc
das
sahf
cs
xor
insl
push
fwait
xor
cmp
das
nop
jge
cmp
cmp
push
lcall
shl
pop
mov
enter
iret
popf
pusha
inc
xor
push
dec
push
xchg
mov
iret
mov
mov
andl
loope
lcall
lahf
pusha
push
hlt
cld
jmp
jp
inc
andb
inc
mov
ret
js
aas
int
out
lods
jmp
adc
pop
sub
push
sub
cmp
xchg
dec
dec
dec
inc
or
push
enter
adc
test
movsl
dec
xchg
icebp
popa
jle
out
aaa
incl
mov
movsb
inc
push
pusha
push
push
mov
pop
pop
add
sub
or
ret
sbb
adc
aas
cmp
pop
scas
addr16
out
lret
inc
out
flds
pusha
sbb
jmp
aas
and
cwtl
aam
test
xchg
int
mov
dec
pop
fbstp
pop
mov
cld
incl
in
fiaddl
jbe
sarl
sub
cli
jg
sbb
std
clc
rol
jl
cmp
ljmp
fldenv
rorb
stos
fsubl
xchg
aaa
mov
mov
sbb
cmp
gs
ret
in
fs
test
inc
imul
xor
mov
inc
jp
cvtpi2ps
cmp
ljmp
imul
jo
inc
les
and
pop
aas
xchg
jg
adc
aas
mov
add
dec
dec
or
mov
pop
push
leave
out
fmul
jg
sub
loope
xchg
mov
mov
inc
mulb
cmpsb
test
jne
repnz
or
rcll
rcrb
dec
jmp
fwait
dec
push
push
cmp
fiadds
aas
inc
mov
rcll
push
jmp
dec
shl
je
inc
pop
push
xchg
cmp
cmp
mov
fbstp
push
in
fidivrl
and
test
f2xm1
jo
in
incb
fwait
dec
lods
call
int
iret
sbb
fnstenv
mov
inc
hlt
pop
stos
int3
push
movsb
lret
or
lcall
test
sahf
sbb
sbb
ljmp
cmp
add
adc
cltd
adc
mov
outsl
jb
and
jmp
stos
aas
pushf
push
mov
cmpsb
call
xorl
popw
pop
xor
mov
scas
lds
sti
jmp
mov
jecxz
jmp
das
call
jg
inc
imul
pop
push
jbe
cwtl
les
pushf
stc
sbb
cmpsb
repz
ss
std
lcall
mov
cmp
mov
lea
stos
sub
xchg
je
jbe
ficomps
pop
jns
fcmovnu
call
aaa
sbb
fs
aaa
sub
test
dec
push
jmp
mov
jb
xor
mov
push
sub
sbb
in
rol
fdivr
mov
cmp
into
mov
pop
mov
adc
decl
imul
int
pusha
push
dec
shl
mov
mov
dec
xchg
pop
bound
scas
gs
ja
jns
add
adc
lock
jecxz
jns
daa
lcall
pop
cmp
push
pop
jmp
cld
and
dec
cli
mov
mov
das
test
dec
test
xchg
fisubl
adc
ret
cmp
call
or
jo
insl
ds
jnp
inc
pop
mov
and
jmp
lcall
ja
dec
xchg
test
mov
add
movsb
jnp
push
imul
mov
cmpb
cli
jb
jnp
cmp
add
lret
bnd
sub
fldcw
sub
pop
inc
cmc
lret
negb
daa
mov
jns
jno
and
xor
or
dec
adc
and
jae
mov
ds
mov
xchg
pusha
lods
mov
ret
je
ja
int
pop
int
push
add
lcall
pusha
mov
rolb
ja
in
mov
loope
dec
mov
es
test
and
add
xor
jg
inc
pop
jecxz
stos
hlt
mov
xor
popf
lret
dec
test
les
pop
faddl
incl
mov
push
test
and
adc
jp
sbb
add
and
cld
mov
cmc
jno
xor
dec
or
cld
jg
in
sbb
push
fstps
cld
daa
sub
mov
jns
mov
pushf
push
lret
pushl
jns
ja
and
out
cmc
movsl
loop
pop
cmp
arpl
adc
xor
mov
jg
dec
in
xchg
loopne
mov
clc
push
imul
in
xchg
jbe
inc
jmp
push
arpl
and
xor
lret
bound
call
and
incl
xchg
mov
push
jb
mov
insb
dec
jmp
lods
ret
into
jmp
lcall
adc
test
in
mov
inc
pusha
adc
add
jmp
cli
out
call
ljmp
insb
out
adc
mov
mov
loop
call
call
sti
add
out
jns
cmp
xor
inc
loope
insl
jg
lds
mov
ret
jne
enter
or
lret
gs
or
out
xchg
out
pushf
insl
jge
pop
in
js
ljmp
incl
and
aam
push
loope
and
test
aaa
std
xchg
adcl
lds
dec
arpl
xchg
scas
test
fsubrs
bnd
repnz
fimull
cmp
insl
dec
xchg
and
lods
inc
and
jg
test
jns
loope
jns
adc
add
pop
icebp
jp
pushl
lret
dec
fimuls
fsubr
faddl
mov
in
mov
fstps
cltd
ffree
leave
fdivs
or
jmp
adc
sub
in
ffreep
push
inc
pusha
cmp
ljmp
or
iret
cmp
pushf
inc
in
loop
jg
pop
mov
adc
add
sub
mov
push
cmp
push
std
cmpsb
daa
rcrb
add
incl
or
and
xchg
cmp
sbb
mov
loop
mov
iret
test
lcall
in
pop
aas
fcomip
mov
andb
jb
je
inc
daa
and
pusha
pushf
sahf
scas
es
jb
jge
pusha
push
push
dec
cmp
xchg
lods
fwait
mov
pop
ud0
pop
stos
add
lods
push
cld
loope
int3
in
or
hlt
jle
jo
jmp
pop
dec
es
add
and
ljmp
sar
or
nop
movsl
test
add
lds
mov
jg
ljmp
mov
mov
gs
imul
insb
jl
out
iret
out
add
aas
call
movsb
dec
stos
mov
jge
adc
incl
das
data16
jne
xchg
sub
mov
call
call
imul
jl
xchg
sbb
lret
pusha
bnd
cmp
or
stc
loop
iret
insb
dec
insb
push
flds
cld
sub
pop
popa
dec
lcall
jg
movsb
das
pminsw
sbb
aaa
jp
mov
xor
enter
xor
push
mov
scas
jb
mov
aas
bound
mov
das
lret
arpl
mov
mov
cmp
fwait
adc
or
cwtl
repnz
imul
mov
xchg
incl
mov
jno
or
xorb
xchg
sub
fisubs
jns
js
lods
data16
add
idivb
ljmp
mov
cmp
lods
pop
dec
clc
dec
incl
add
mov
inc
xchg
mov
sti
cmp
es
adc
or
xchg
pushl
jmp
jmp
pop
cmpl
or
jl
ror
add
mov
fwait
stos
cmpsb
xchg
loopne
lcall
mov
adc
mov
addr16
int
rolb
and
adc
push
incl
pop
mov
xchg
clc
mov
incl
aaa
icebp
pop
repz
and
xchg
negb
add
mov
mov
call
dec
movsl
ret
mov
jge
je
and
mov
into
call
dec
icebp
pop
les
arpl
icebp
xchg
scas
or
sbb
ljmp
mov
inc
addl
dec
aas
cli
mov
outsl
pop
cmp
dec
cmpsl
std
jle
inc
decl
push
aas
fidivl
mov
inc
sub
lods
sub
pop
mov
pop
pop
adc
lock
call
imul
sub
push
xchg
mov
mov
aad
pop
decl
add
fsts
loopne
aas
xchg
jno
inc
ret
fsubl
push
xchg
sub
mov
jnp
xor
mov
xchg
pop
jmp
mov
scas
mov
sar
lcall
inc
iret
xor
mov
fs
sbb
sahf
and
xchg
out
jmp
loop
inc
xor
mov
shrb
hlt
aas
clc
jge
in
xlat
mov
jno
out
in
xor
ss
or
mov
ret
add
inc
jecxz
pop
repnz
repnz
es
lahf
push
incl
jle
mov
jns
adc
dec
loope
int3
clc
sbb
lcallw
jmp
es
mov
outsb
mov
pop
orb
jne
notb
push
sub
loopne
fsubs
mov
test
xor
loope
adcl
js
mov
adc
div
dec
mov
xor
insl
inc
push
mov
mov
ret
mov
jmp
aas
mov
loopne
out
stos
push
mov
daa
sar
paddd
mov
add
or
push
push
fiaddl
pop
add
cli
adc
aas
pushf
dec
jae
sbb
jle
mov
notl
jecxz
pop
lcall
push
repz
scas
or
jge
not
movsl
jg
push
iret
outsl
or
lds
xchg
aaa
xlat
cmp
mov
lcall
and
xchg
and
mov
add
sub
mov
jg
or
jmp
cmc
xchg
out
cltd
fwait
stc
filds
mov
std
xchg
jg
xor
dec
insl
and
cld
adc
stos
mov
incl
clc
lret
cmpsl
js
xchg
in
shlb
mov
fiaddl
cmpsl
arpl
scas
std
loope
call
jp
es
sahf
stos
jmp
repnz
stos
add
xchg
mov
and
popf
pusha
divb
push
dec
lods
jge
jmp
pop
cld
jle
insl
pop
jge
in
shr
out
imul
push
ja
mov
jg
jmp
inc
and
push
stos
imul
sbb
sti
out
mov
in
push
jmp
mov
test
mov
lret
inc
pop
and
out
lret
subb
int
dec
mov
inc
out
xchg
loop
mov
fidivl
mov
ljmp
sub
imul
lret
repnz
jns
in
xor
jmp
std
mov
into
daa
or
sbb
cld
and
pop
out
sub
dec
cld
pop
std
and
push
dec
lods
sbbb
and
incl
push
xor
xchg
mov
dec
stc
cmpsb
popf
jge
aas
and
cld
iret
int3
or
call
pushl
mov
in
subl
inc
fmuls
push
jg
or
scas
popa
and
andl
mov
and
sub
imul
cmp
sbb
mov
aam
lret
pop
lahf
mull
cmp
call
incl
cld
aas
cmp
add
xchg
not
xchg
mov
cli
mov
ljmp
sub
clc
sbb
fisttpll
mov
cmp
lret
stos
popf
jno
sete
or
ljmp
jns
enter
lock
cli
xchg
push
je
bound
mov
aad
mov
dec
loopne
cmp
jmp
incl
mov
add
sahf
xor
push
loopne
fisttpl
fwait
lcall
mov
jbe
dec
call
mov
idiv
lock
les
mov
inc
ss
jno
in
aas
mov
in
cwtl
dec
int3
mov
test
test
adc
pop
out
push
fcoml
movsb
push
insl
push
add
pop
adc
cmp
xor
mov
push
loop
jmp
pushf
les
mov
or
pop
movl
loop
mov
stos
mov
pop
je
decl
and
and
mov
jmp
or
test
jmp
ja
nop
xlat
movsb
xchg
mov
xor
lds
out
sub
out
decb
mov
mov
lcall
or
mov
fidivrs
stc
jg
xchg
ds
movsl
ljmp
in
fstps
mov
test
adc
loopne
push
out
pop
inc
fldcw
cmp
mov
ret
jae
or
iret
rcrl
imul
inc
pop
mov
ljmp
and
mov
in
pop
dec
dec
cmc
and
aam
push
loope
es
std
call
test
insl
xchg
add
dec
outsl
add
mov
inc
mov
or
mov
inc
mov
fld1
mov
mov
lcall
xor
inc
xchg
and
imul
scas
pusha
mov
cld
decl
mov
push
mov
sbb
ljmp
jle
test
ja
pop
ljmp
fldenv
lcall
int3
cmpsb
mov
xchg
mov
or
int3
cltd
ds
js
and
or
rcrb
xor
adc
lcall
jo
mov
jb
and
or
add
jmp
out
ljmp
jp
outsl
sahf
lcall
call
fimull
in
pop
push
sub
pop
std
pop
jb
scas
jge
and
call
sub
mov
aaa
sub
repnz
loop
xchg
test
mov
cmp
aas
dec
sbb
aas
movl
lret
pushl
aas
pop
movb
call
pop
les
cwtl
mov
cli
mov
xchg
jbe
push
pop
ret
xchg
addr16
mov
mov
sar
pusha
jle
pop
mov
testb
xchg
push
add
dec
mov
out
push
js
xor
or
fdivl
idiv
cli
das
aas
ja
push
mov
sbb
popa
cmp
jmp
gs
les
add
xor
ja
xlat
push
and
int
insl
adc
jl
xchg
sub
inc
or
adc
hlt
xchg
push
add
decl
fstpt
jg
popa
pop
popa
jo
sub
arpl
std
movsl
enter
cmpsb
cmp
decl
cmc
or
sbb
daa
loopne
es
mov
pop
loope
xchg
push
icebp
rcrb
shrb
jo
jmp
out
jl
mov
int
stos
sbb
scas
or
jmp
dec
test
mov
sti
int
sub
mov
cmp
xchg
decl
sub
pushf
ss
mov
add
cmpsb
and
jno
inc
into
incl
lret
inc
popf
push
testl
faddl
andl
ds
lds
jecxz
call
and
xchg
pop
flds
repz
repz
shlb
pop
stos
inc
pop
xor
mov
ret
lahf
xor
enter
lods
push
insl
pop
notb
mov
jmp
shrl
mov
insl
push
ss
sti
pop
inc
and
jg
xor
sub
outsb
pusha
xor
pop
cmp
outsb
dec
cmp
out
repz
je
jmp
divb
adc
jb
push
cmp
xor
pop
inc
imul
roll
test
sub
pop
mov
pop
rcl
decl
inc
sbb
xchg
repnz
add
and
std
mov
mov
xor
jnp
xor
ret
and
repz
mov
call
mov
or
push
mov
ret
cmp
jg
aaa
dec
int
popf
sub
xchg
es
inc
subb
lcall
add
dec
dec
and
aam
push
shr
sub
test
jge
dec
std
lahf
icebp
push
push
push
add
mov
push
movsb
fs
cmp
xorb
mov
inc
stc
decl
test
data16
lahf
ret
jae
xchg
jl
lret
sub
mov
clc
daa
xor
jl
in
mov
imul
pushl
loopne
das
adc
test
mov
mov
movsb
repnz
jmp
xchg
xchg
fwait
mov
clc
aad
adc
fmuls
arpl
jp
out
lcall
fucomip
addb
test
mov
pop
adc
roll
aam
lahf
js
and
push
idivl
xor
add
push
fldenv
cld
and
das
mov
stc
or
movsb
or
and
ljmp
inc
or
jg
and
jmp
sar
mov
loop
das
notrack
test
fbstp
and
out
pop
vandnps
decl
pushf
fsubrs
ja
outsb
mov
stc
adc
pop
adc
ss
xchg
scas
jg
decl
les
jbe
mov
mov
lock
imul
jg
mov
or
out
inc
sub
jno
or
incl
cld
lcall
pop
xlat
bound
test
movsl
xorl
push
dec
xor
xchg
leave
imul
lods
jle
and
sub
mov
push
repz
incl
gs
aas
mov
inc
movsb
pusha
sub
mov
mov
cmpsb
sbb
incb
and
inc
mov
fwait
sarl
xor
mov
xchg
sbb
je
je
andl
inc
jnp
inc
stos
push
mov
incl
adc
aad
movsl
mov
lock
aad
push
push
and
push
and
or
push
out
int3
sbb
js
int
lods
jne
push
dec
lods
ss
adc
pop
jle
call
xor
mov
push
jle
xchg
adc
out
or
jmp
sub
jae
mov
add
incl
sbb
xchg
stos
lds
mov
lock
add
mov
mov
add
and
decl
mov
pop
test
or
xchg
mov
addb
lods
nop
mov
xchg
cltd
cli
shrb
sbb
loope
mov
mov
pop
add
aas
sbb
sub
add
shl
pop
push
add
jg
push
mov
sbb
lock
jecxz
mov
dec
add
call
lods
jnp
das
lret
inc
and
cmp
cmp
xchg
sbb
mov
xor
cmp
xor
mov
ja
pop
mov
jmp
ret
mov
cwtl
mov
fsub
mov
xor
and
incl
xchg
iret
notb
scas
sbb
test
pop
lods
int
iret
lcall
stos
loop
fisttpl
fdivl
das
jge
pcmpgtw
pop
dec
dec
push
aaa
fndisi(8087
or
insb
mov
mov
inc
cli
sti
push
mov
addr16
rcrb
jl
lcall
push
or
sbb
cmp
pushl
aam
sub
xchg
pop
sub
rorb
loope
mov
cs
push
fwait
xchg
lock
es
notl
cmp
mov
dec
push
dec
xorb
loopne
loope
lds
xchg
ret
fisubrs
imul
test
jmp
rorl
popa
fidivrl
pusha
shlb
fsubrl
add
lock
cmp
call
cltd
push
stc
dec
mov
inc
push
out
mov
rclb
aas
roll
incl
insl
aaa
mov
fstpt
and
inc
push
dec
dec
loope
push
inc
shll
cmp
mov
inc
mov
jge
inc
testb
sub
jge
push
ret
cmpsb
imul
ljmp
jmp
jnp
xor
cmp
push
jno
movsb
adc
mov
sbb
clc
lcall
inc
sbb
sub
cmp
jmp
out
out
sar
pop
mov
xor
xor
popf
andl
jg
test
mov
sub
mov
dec
inc
sbbl
cmp
ret
adc
cmp
xchg
inc
enter
stc
cli
mov
push
call
lcall
mov
xchg
mov
inc
insb
sbb
jecxz
and
loopne
inc
sar
push
dec
adc
test
mov
into
ret
dec
inc
and
scas
cmp
xchg
mov
push
ja
cmp
adc
xchg
in
in
inc
mov
cld
jne
cmpsb
nop
inc
inc
nop
inc
stos
mov
test
mov
inc
dec
icebp
cmp
pop
jg
mov
mov
add
push
add
mov
ret
sbb
cmp
push
mov
in
push
cmp
lcall
xchg
cmp
je
insl
pop
incl
nop
sub
pop
cmp
fcos
aas
clc
incl
add
mov
sbb
jbe
cmc
push
inc
pop
jg
mov
xor
call
inc
cwtl
xchg
mov
mov
cmp
adc
pusha
mov
and
ljmp
push
inc
cmp
rorb
dec
enter
repnz
push
inc
call
add
inc
xchg
cld
xor
mov
jo
jno
cmp
jne
inc
jne
ret
or
ret
or
ds
cs
cmpsb
mov
loop
clc
pop
aas
aas
inc
and
inc
daa
push
inc
mov
ljmp
cmp
jg
pusha
js
mov
push
mov
inc
add
inc
in
or
inc
xchg
push
daa
mov
or
inc
mov
adc
jmp
ret
fistps
pop
clc
mov
mov
cmp
push
inc
cmp
negl
shll
pop
notb
mov
incl
stos
pop
sarl
dec
xchg
inc
out
mov
mov
retw
push
jg
push
cmp
stc
lea
jmp
mov
sbb
aaa
mov
sbb
dec
add
pop
call
mov
mov
pop
ret
inc
pop
outsb
repz
mov
mov
fsts
push
xlat
inc
pop
jmp
cmpsl
mov
repz
mov
xchg
mov
inc
insb
cmp
push
inc
add
iret
cmc
ret
cltd
jnp
cmp
outsl
push
mov
jb
jmp
stc
inc
mov
jo
push
inc
cmp
push
in
mov
cmp
in
insl
cmp
jns
inc
imul
ret
jge
inc
cmp
loop
clc
aam
inc
and
ret
push
cmp
sub
sbb
cs
mov
outsl
out
sarb
push
movsb
mov
enter
incl
addb
mov
popa
shll
inc
xchg
imul
jmp
insl
jg
popa
mov
push
mov
xor
pushl
inc
mov
sarb
lods
ds
cmp
and
inc
inc
decl
mov
xor
mov
push
sub
jmp
call
dec
jno
jecxz
in
mov
aaa
mov
and
xlat
inc
sbb
mov
xor
cmp
sub
adc
mov
add
aas
shrb
fisttps
push
pop
inc
dec
mov
call
arpl
cmp
xor
ret
sbb
mov
cld
push
inc
sar
pop
aas
andb
ret
je
das
cmp
psubw
decl
pop
pop
mov
mov
out
xor
add
lahf
stos
xor
xor
jg
cli
adc
incl
or
fadds
sbb
stos
jmp
popf
ret
pop
incb
cmp
dec
inc
jge
ds
pop
push
out
bound
pop
icebp
sub
mov
push
in
lcall
cltd
insb
sbb
mov
mov
jecxz
xchg
mov
call
push
pop
dec
push
pop
inc
or
ret
cmp
sti
cmp
pop
push
inc
roll
mov
cli
lcall
jge
jp
popf
mov
scas
mov
cmp
jno
lcall
std
in
cmp
ret
jecxz
nop
cmp
mov
and
jp
daa
jl
jg
jmp
inc
and
and
mov
inc
fimuls
gs
jne
cmp
sbb
cli
add
stos
mov
adc
jns
add
pop
incl
enter
xlat
jp
jbe
movsb
ret
popf
imul
pop
pop
mov
mov
jbe
inc
pop
fbstp
xchg
inc
dec
je
movsb
out
ret
push
jecxz
dec
fbld
pushl
outsl
mov
call
scas
sub
aad
shlb
or
pushl
lret
cmpsb
mov
movsl
idiv
jp
ljmp
inc
lahf
lds
jmp
and
dec
inc
repnz
inc
fsubrs
mov
int3
ret
int3
or
inc
push
cmp
ljmp
hlt
push
ret
gs
test
adc
xchg
loope
gs
ret
xchg
inc
add
pop
push
lcall
cmp
pop
incl
dec
in
adc
sub
xchg
push
pop
mov
std
pop
loopne
fisttps
add
inc
outsb
js
clc
ffreep
ss
and
dec
cmp
push
xchg
mov
mov
lcall
pop
fsubr
and
into
jle
outsl
sub
ret
xchg
test
jg
mov
xor
push
ret
sub
mov
clc
push
loope
sbb
aas
loope
dec
inc
lret
xor
mov
fistpll
pop
jmp
aas
add
xor
js
push
aas
cld
jge
sbb
movsb
xchg
cmpsb
popf
pop
ss
std
cli
jg
jns
mov
ljmp
das
test
ret
add
aas
call
out
daa
mov
mov
sub
loope
mov
mov
cmc
cmp
sbbb
inc
lcall
push
jecxz
into
xchg
aas
cltd
dec
call
push
ret
out
or
or
jg
xor
ret
inc
mov
pop
pop
jmp
inc
inc
outsb
lds
fldl2t
stc
cmp
mov
xor
xchg
lcall
lret
lods
xchg
addr16
sub
dec
aad
lcall
inc
fstpt
and
and
jecxz
jp
test
pushf
lret
ret
mov
pop
std
jg
loop
inc
bound
ret
xchg
jbe
cmp
pop
pop
push
and
cmp
mov
scas
mov
dec
inc
xchg
sti
loop
adc
or
mov
inc
or
mov
cmp
xor
inc
adc
mov
jp
lahf
mov
addr16
mov
jecxz
ret
xchg
lret
filds
int3
inc
clc
push
jns
xchg
cmp
pop
jge
in
fdivrl
inc
cmp
outsl
or
pusha
incl
repnz
inc
pop
pop
out
cmp
outsl
mov
cld
and
mov
lcall
push
fcomip
sbb
push
pushl
cmp
inc
inc
aad
pop
push
ja
imul
incl
clc
adc
mov
push
sbb
in
rolb
stc
fdivrl
pop
push
std
call
cmp
mov
mov
aas
push
fdivrp
jg
clc
cmp
push
push
cmp
mov
mov
out
cmp
cmpsb
add
aaa
add
incl
icebp
pusha
inc
and
jl
stos
cmp
ret
cwtl
cli
pop
xchg
cmp
push
jg
xor
mov
sbb
xchg
cli
push
scas
mov
pushf
jg
popf
lods
cmpsl
inc
dec
sbb
cmp
and
je
jb
mov
ret
jl
fistpll
or
pop
inc
add
mov
jle
mov
adc
filds
mov
out
jne
cmp
and
mov
ljmp
lea
push
cmpsl
mov
mov
adc
cmp
pop
inc
inc
gs
sahf
mov
fisubrl
xchg
ret
stc
mov
les
rcll
pop
ret
shlb
xlat
call
movl
js
ret
jmp
int
sub
lahf
push
out
xchg
mov
shrl
filds
cmp
mov
stc
ret
fstpl
pop
incl
pop
lahf
sbb
add
mov
ljmp
cmp
data16
inc
jnp
cmp
fs
lahf
or
push
inc
mov
mov
sbb
pop
sub
lahf
or
add
mov
pop
ljmp
inc
out
icebp
mov
lcall
fisttps
push
pop
inc
fisubs
in
mov
sbb
ja
inc
ret
or
clc
ljmp
inc
xchg
mov
lods
ret
movsl
ja
cmp
fisttps
fnstcw
and
or
jmp
and
mov
xchg
movsl
clc
dec
lcall
jl
leave
mov
lock
pop
push
xor
inc
cmc
or
jg
pop
dec
xor
cmp
scas
mov
cmp
fwait
inc
cmpsl
fmull
jnp
xchg
cmp
out
mov
aam
fwait
out
aas
sarb
roll
pop
sub
gs
cmp
jg
incl
jae
inc
test
cmp
mov
jmp
ret
pop
mov
js
push
inc
inc
mov
mov
ret
mov
aas
mov
pusha
aas
push
xchg
jmp
jbe
ds
mov
cmp
movsl
inc
outsl
cmp
ret
xor
aas
clc
dec
cmp
test
sub
pushf
jae
cmp
js
inc
and
aas
xchg
mov
xor
cmpsb
fiadds
pop
xchg
mov
push
push
cmpb
dec
push
loope
mov
dec
lahf
daa
pop
fdivrs
xor
clc
paddd
in
or
or
imul
ret
aas
cli
adc
mov
pop
pusha
cmp
jge
inc
fdivrl
icebp
popf
jg
jmp
push
jb
cmp
cs
call
pusha
mov
inc
jo
rcl
idiv
repz
fs
std
cmp
aas
push
pop
ud0
jg
lock
cmp
out
mov
mov
in
ret
mov
adc
cli
jmp
mov
ret
out
mov
call
xchg
sti
mov
add
add
jg
pop
inc
dec
icebp
cld
mov
loope
in
sar
incl
lret
xchg
mov
mov
jp
inc
ljmp
jg
lock
and
push
sahf
retw
sub
std
mov
pusha
pop
mov
jg
xor
ret
lds
fisttps
cmp
sahf
movsb
mov
in
jg
out
cld
xchg
pop
mov
xor
mov
insb
mov
pop
lcall
inc
adc
cmp
test
lock
mov
adcb
call
aas
movsl
cli
mov
mov
fwait
jecxz
cmp
jg
imul
push
push
sbbl
cmp
jl
inc
jns
mov
mov
ljmp
repz
xor
fistpll
data16
andl
pop
incl
mov
jg
lcall
fbld
mov
aas
ds
fdivrs
ds
fstpl
mov
or
inc
push
stos
push
std
inc
xchg
pop
idivl
dec
sbb
pusha
arpl
push
std
call
ja
ret
arpl
cmp
push
inc
enter
xlat
jg
dec
mov
pop
dec
inc
inc
iret
jo
or
mov
hlt
fildll
sar
push
pushl
adc
cs
cmp
dec
int
repz
std
aas
cli
ljmp
inc
subb
rcrb
and
sar
inc
mov
aaa
sbb
out
mov
mov
and
js
jnp
shll
cmc
cmp
lahf
enter
inc
ljmp
cmpsl
cs
sbb
nop
inc
std
mov
test
jg
add
lcall
pushf
pop
sbb
das
inc
ret
mov
cli
pop
jg
rcrl
icebp
jecxz
pop
test
and
xor
inc
pslld
inc
hlt
pop
xor
fldt
ret
push
imul
add
mov
scas
inc
add
iret
inc
es
pop
decl
pop
push
lea
pusha
sbb
movsb
divl
mov
fisttps
cmp
inc
rorl
out
scas
lahf
and
in
pop
cmp
mov
mov
shl
stos
ret
mov
aas
subl
xlat
movq
jg
adc
inc
mov
push
pop
xor
lahf
pop
paddd
jg
xor
lret
dec
ret
leave
lret
outsb
pop
mov
inc
inc
jmp
rcrl
pop
mov
inc
ret
lcall
mov
inc
mov
out
cmc
pusha
ret
adc
sarb
repz
incb
std
xchg
lcall
loopne
data16
lods
adc
cmp
fs
push
mov
mov
xchg
aas
incb
mov
dec
inc
jg
add
ret
lahf
test
aas
clc
dec
mov
dec
mov
clc
jmp
faddl
in
or
ret
ret
xchg
subb
cmp
xor
stc
mov
hlt
dec
cmp
or
lock
inc
ret
addl
call
mov
fcoml
ljmp
pop
mov
jg
movsb
fstps
add
mov
dec
pop
cld
call
sbb
sbb
inc
adc
aas
sub
mov
lods
pop
sbb
jb
and
pushl
sbb
sub
out
mov
pop
mov
pop
xchg
shll
lret
jmp
pusha
mov
mov
int3
lock
test
add
movsl
cld
leave
int
lcall
sbb
xchg
and
push
or
and
mov
repz
mov
sbb
call
bound
cltd
jae
in
out
sub
jge
and
dec
push
ss
int3
loop
push
incl
popf
dec
shl
out
js
jmp
fwait
push
jb
xchg
fwait
popa
test
push
mov
scas
out
sub
sub
aam
mov
addb
jne
xchg
setae
adc
stc
pusha
data16
or
in
icebp
sbb
and
leave
fwait
sub
pushl
ret
cmpsb
push
jecxz
dec
pop
into
cmp
jl
aam
pop
lret
add
adc
fyl2x
pop
std
decl
jns
mov
mov
sarl
int3
ja
mov
popl
dec
adc
incl
mov
jae
ja
jmp
pop
outsl
jg
inc
movsb
lea
outsb
inc
incl
jg
in
mov
jmp
xor
pop
sarb
aad
shrl
call
cs
fcompl
xor
lret
pop
cmc
mov
arpl
in
clc
in
sub
add
les
xor
adc
xchg
addr16
mov
fwait
sub
jle
mov
mov
stc
jg
inc
mov
dec
arpl
out
fnsave
cltd
mov
xor
mov
sub
jbe
cmpsl
imul
jmp
stc
hlt
adc
sub
jg
mov
dec
mov
ret
outsb
loop
shll
dec
jecxz,pt
out
sar
ljmp
cs
xor
loope
mov
fldenv
pushf
arpl
jb
shll
jg
decl
nop
pop
mov
sub
mov
adc
lret
cmp
clc
hlt
sahf
push
fidivl
aaa
mov
xchg
pop
adc
testb
scas
test
ljmp
out
in
pop
mov
jmp
jmp
or
aaa
cld
adc
xchg
pop
xchg
inc
push
orl
ljmp
fnstcw
andb
je
in
sbb
and
inc
jo
add
sub
aas
movsl
jle
push
iret
cmp
mov
mov
pop
clc
clc
sbb
mov
rcr
int3
cmpsb
lds
ja
mov
lcall
mov
lods
sub
in
pop
cwtl
push
mov
dec
sub
in
cs
inc
adc
ljmp
xchg
adc
loopne
in
or
sbb
pop
cmp
xor
dec
call
mov
pop
ret
movsb
dec
lds
and
stos
dec
inc
adc
lds
mov
mov
std
das
mov
imul
push
lods
sbb
ljmp
icebp
pop
mov
je
push
cmp
fs
loopne
adc
xlat
fcos
out
stc
jecxz
jns
outsl
pop
cld
push
hlt
les
fstpt
sub
nop
fisubs
pushf
mov
out
incl
clc
mov
inc
ds
dec
out
jl
in
adc
jmp
repnz
into
pushf
sbb
sbb
stc
mov
sbb
jns
imul
jg
inc
ret
sbb
lods
mov
xor
adc
mov
lcall
and
mov
test
in
xchg
test
mov
jge
jcxz
fisttpl
pop
mov
aas
cli
repz
imul
pop
fisubrs
repnz
push
repnz
aaa
cltd
fsubrp
imul
mov
mov
insb
aam
mov
cmc
sub
cmp
scas
dec
out
push
push
adc
pop
fldenv
lcall
incl
xlat
fstpt
out
arpl
idivb
std
jmp
iret
push
out
lahf
daa
add
pop
pop
cld
aas
xlat
sub
out
mov
xchg
xor
lcall
add
ljmp
push
shrl
pop
insb
inc
mov
movsl
dec
call
sub
roll
inc
dec
call
cli
in
scas
cmpsb
sqrtsd
mov
daa
xorl
orl
pushl
push
arpl
shl
fisubrl
adc
sarb
pop
orl
mov
call
mov
jmp
pop
jb
xor
pop
nop
das
divl
pop
xor
or
jecxz
sub
call
pop
push
out
jp
cltd
sahf
in
js
std
push
mov
lret
repnz
push
es
mov
hlt
add
icebp
call
add
add
int
shl
jo
jg
pop
stos
fistps
negl
add
mov
jl
in
inc
push
mov
pushw
out
or
mov
test
ja
call
js
pushf
pop
lods
rcr
sti
jg
xchg
dec
sbb
rclb
bound
sub
jnp
stc
push
lret
dec
mov
repnz
sub
clc
rclb
or
push
loop
insl
xor
inc
fs
mov
mov
sub
stos
jb
les
jo
lcall
mov
leave
mov
and
jne
fists
cmpsl
or
ljmp
mov
cwtl
sbb
rorl
mov
pop
sbb
insb
scas
divl
lcall
xchg
mov
outsl
imul
and
xchg
popf
hlt
out
mov
mov
jg
mov
push
ret
mov
ret
outsl
jle
adc
dec
jno
cmp
aaa
mov
pushl
mov
cmp
in
mov
lahf
xor
pop
sbb
sub
cmpsl
incl
add
adc
fwait
insl
test
incl
ja
cmp
lods
pop
fbld
jne
mov
in
xor
imul
mov
sbb
push
sbb
xchg
mov
push
add
ljmp
mov
js
mov
cmp
idiv
mov
dec
out
push
xchg
add
add
push
test
jns
incl
adc
icebp
out
aad
push
mov
cmp
mov
dec
nop
inc
cltd
popa
adc
xor
pop
add
inc
push
sbb
mov
pop
xchg
fs
jae
and
push
pop
cmc
sti
xchg
ja
call
sbb
dec
icebp
pop
push
sbb
shll
clc
and
mov
scas
mov
cmp
mov
add
std
scas
call
mov
jnp
push
jne
push
fs
fsubrl
inc
push
sti
mov
inc
jnp
add
clc
and
test
gs
mov
cltd
sub
inc
lret
and
dec
loope
lahf
fsubrl
sub
sahf
or
xlat
mov
clc
decl
ljmp
fcomps
loope
pusha
lcall
repz
xchg
in
lcall
pop
hlt
lock
pop
adc
ljmp
sub
push
fcomps
ret
adc
cmp
sbb
fdivl
lcall
out
and
sbb
je
loop
shr
or
jp
insb
dec
pop
adc
mov
incl
repz
stos
push
leave
add
jbe
xor
lret
mov
cmp
aad
ljmp
jg
inc
or
pusha
pop
bound
push
adc
je
ljmp
sbb
mov
adc
jp
push
lcall
pop
lret
es
mov
out
jg
pushl
adc
adcb
cmp
stc
jb
fidivrl
rorl
jmp
decl
mov
add
xchg
rcll
pushl
pop
mov
fisubl
cmp
and
cmp
sti
xor
decl
rorl
xor
xchg
inc
jno
insl
imul
jecxz
filds
repnz
xchg
sti
js
icebp
ret
xchg
xchg
scas
xchg
outsb
push
dec
testl
mov
andb
inc
push
mov
add
pushl
std
pop
xchg
dec
ljmp
clc
lods
xchg
jg
ljmp
mov
jmp
ret
jp,pt
or
and
inc
pushl
add
dec
mov
sub
inc
imul
dec
es
xlat
sahf
xor
dec
xchg
bound
lcall
mov
call
scas
pop
dec
mov
mov
mov
incl
mov
jns
xchg
push
int
stos
sub
mov
add
mov
aad
push
popa
mov
faddp
pushl
lret
xchg
lods
mov
inc
adc
pop
xor
sub
testl
add
add
or
or
add
out
jg
inc
inc
insb
push
or
push
add
xorb
add
sbb
shll
and
decl
loopne
xor
push
sbbb
add
or
dec
in
negb
insb
stc
push
add
or
popf
add
dec
push
mov
xchg
add
jns
cmc
idivl
into
je
or
sub
lret
mov
addl
adc
lahf
sbb
adc
in
sbb
out
call
cmp
xorl
push
xor
xor
rol
adc
push
imul
and
sbb
xor
adc
and
inc
mov
je
xor
pusha
pusha
jns
pop
inc
xor
mov
and
inc
sarl
jo
cmp
das
ja
jbe,pn
jae
add
cld
shl
das
jb
popa
nop
in
out
jno
xor
cs
mov
xor
sbb
into
add
jne
xor
sub
push
pop
or
add
xor
add
ds
mov
stc
pop
xor
xor
add
stc
mov
adc
pop
adc
test
subl
push
add
and
xor
cmp
ret
inc
adc
xor
int3
push
dec
roll
pop
dec
xor
loope
rorb
inc
and
fsubs
jbe
stos
add
jb
sbb
lahf
sbb
add
pop
and
cwtl
aam
mov
stc
stos
divl
adc
or
rcll
jg
push
inc
or
jmp
xchg
in
add
idivl
dec
aas
test
pushf
into
ljmp
push
pop
jbe
add
pushl
xchg
cwtl
movl
and
xchg
js
add
jmp
jne
test
sahf
push
rcll
xchg
sbbb
fstps
cld
inc
imul
pop
cld
decl
sub
pop
pop
dec
fldcw
pop
push
add
cmp
ds
sti
addb
xor
jg
sbb
cmp
pop
push
adc
pop
incl
jle
fbstp
inc
push
pop
add
xor
mov
xor
icebp
jo
push
fisubl
arpl
sub
fwait
cmp
inc
repz
push
inc
cmp
mov
imul
add
mov
scas
pop
add
inc
dec
and
add
sbb
fdivrs
imul
xor
mov
add
loope
addr16
mull
and
pop
xor
sbb
pop
adc
jo
xor
dec
add
popa
imul
add
lcall
xor
adcb
imul
xchg
pop
or
mov
mov
jo
cmc
iret
inc
xor
sbb
push
xor
or
push
push
pop
shll
subb
sbb
adc
dec
jecxz
or
adc
cmpsb
xor
add
movsb
mov
js
dec
jb
jmp
std
sbb
mov
cmp
test
pop
push
fnsave
pop
repz
add
or
push
enter
leave
clc
mov
mov
xor
imul
cmp
mov
add
call
mov
imul
data16
stos
hlt
dec
dec
adc
dec
cmp
push
clc
adc
push
cmp
sti
jecxz
inc
test
mov
sbb
xchg
sahf
pusha
rorl
ja
push
inc
jl
and
xchg
push
mov
pop
adc
lods
cmpsl
int
inc
xchg
loopne
sbb
cmc
fadds
shll
movsb
xchg
das
std
ds
ljmp
push
orb
mov
push
xor
pop
mov
pop
stc
dec
push
and
ljmp
xchg
pop
jo
push
mov
xorl
in
aas
gs
es
cs
pop
movaps
pop
popf
cmp
add
aaa
xor
push
mov
push
sub
jmp
and
and
je
mov
sbb
nop
add
adc
inc
or
verw
or
adc
addr16
dec
outsl
push
pop
jl
leave
pop
xchg
orl
or
sub
rcrl
mov
lcall
cmp
pop
or
cld
lds
mov
and
jnp
hlt
add
icebp
mov
je
addr16
dec
push
iret
popa
pop
jns
loopne
adc
adc
sar
pushl
sub
inc
mov
mov
dec
mov
push
nop
loope
negb
data16
aas
scas
mov
jns
stos
xor
sahf
xlat
stos
adc
test
jg
adc
push
mov
loopne
sbb
add
mov
pop
mov
decl
test
xor
dec
cmpsl
into
jno
aam
mov
mov
xchg
lcall
mov
mov
sub
and
in
pusha
js
add
call
std
push
or
or
inc
and
push
xchg
ljmp
data16
loopne
je
cmp
mov
pop
add
cmpsb
jge
arpl
fstps
inc
addl
clc
add
xor
or
cmp
pop
mov
std
and
adc
addr16
arpl
movsl
jg
call
loop
pop
jno
adc
in
sbb
ret
iret
subb
mov
cmp
sub
sbb
xor
outsl
outsl
out
sahf
add
jnp
jae
xchg
sbb
in
jo
movsl
and
cs
mov
iret
ret
and
and
inc
pop
mov
cmp
sar
shl
test
adc
and
xor
idivl
sbb
adc
xor
xor
mov
gs
add
push
pop
adc
add
mov
incl
rcr
fadds
popa
imul
jle
mull
in
jae
add
add
pushf
jmp
jmp
lret
jb
push
mov
adc
subl
in
push
push
aaa
xor
movsl
sub
decl
dec
xor
cli
addr16
gs
jp
cmp
adc
js
jbe
repz
add
pusha
ret
popf
testb
loope
mov
in
inc
inc
cs
ja
pop
ud0
jp
bound
cmp
scas
sahf
hlt
nop
out
mov
pop
aad
jmp
xor
push
jp
sti
inc
sub
test
ficoml
xor
xor
sbb
xor
xor
dec
dec
sub
pop
jmp
xor
mov
push
adc
decl
dec
pop
das
dec
xchg
imul
xor
bound
push
xor
ret
sbb
mov
les
divb
fstps
scas
mov
jbe
icebp
test
imul
dec
dec
ljmp
mov
pop
dec
mov
pop
in
sub
subb
sub
stos
mov
enter
xchg
push
out
loopew
ret
sahf
pusha
cmp
loop
push
mov
jnp
sub
add
mov
call
cmp
ficoml
mov
out
xor
mov
std
push
test
and
cmp
shl
fwait
push
lea
movsb
adc
adc
shrl
ss
sbb
push
push
inc
cmp
lcall
loopne
push
lds
and
or
mov
add
inc
decl
adc
push
sub
adc
fadds
xchg
xchg
mov
sbb
jmp
mov
ss
cwtl
dec
in
mov
inc
sbb
lea
cli
aad
add
loopne
incl
dec
add
xor
daa
repnz
dec
add
cli
decl
loopne
loopne
xchg
movsb
xchg
sahf
pop
or
loop
mov
pusha
jg
sbb
dec
fs
sbb
lods
cmp
aad
and
decl
mov
inc
or
mov
sbb
mov
inc
incl
iret
leave
add
sbbb
pop
jb
mov
sahf
sub
mov
call
jge
imulb
cmp
insl
or
hlt
sbb
sti
cmc
lods
xchg
mov
call
faddp
push
andb
sub
add
jmp
js
roll
pop
mov
jmp
punpckhdq
leave
sub
fisttps
call
insl
dec
or
or
inc
pop
inc
xor
xchg
jp
jb
popa
jo
inc
jne
test
adc
bound
jbe
pop
cs
fstpl
push
sbb
inc
mov
and
jp
stos
fadds
jae
mov
xor
xor
xor
push
call
adc
int3
int
ljmp
xchg
mov
icebp
ffreep
movswl
mov
mov
test
mov
std
mov
imul
sahf
xor
in
js
ja
jle
cmp
xchg
scas
or
xchg
lret
sub
stos
dec
cmp
pop
sbb
lahf
cli
das
imul
mull
add
jg
push
jecxz
pusha
in
inc
lcall
mov
mov
xchg
add
and
xor
push
sub
pushl
xchg
adc
das
stos
out
ret
sub
mov
xchg
sbbl
jne
cmp
xchg
lret
cmp
test
push
rorl
inc
dec
fnstsw
jl
ds
lcall
js
lahf
xor
icebp
out
sbb
les
pop
mov
cmc
out
jl
jge
bound
jg
cmc
dec
or
rclb
xchg
int
mov
out
mov
fldenv
adc
xchg
loope
cmp
fcmovnu
scas
add
test
inc
outsl
or
cmp
cmp
mov
xor
push
andl
mov
test
push
mov
xor
cwtl
pusha
mov
stos
jg
mov
stc
ljmp
jns
sub
ljmp
mov
pop
outsb
cmp
adc
add
or
add
mov
leave
xchg
dec
lcall
aaa
and
aam
and
icebp
mov
xchg
pop
add
push
xchg
dec
and
test
mov
inc
repz
out
fstps
mov
mov
mov
loope
mov
iret
or
lock
sub
cmp
sbb
daa
mov
push
xchg
push
arpl
lret
movsl
inc
adc
dec
int
dec
mov
add
push
roll
mov
cmp
jmp
xor
xor
or
sbb
xor
xor
mov
jno
xor
jmp
pop
jbe
sbb
bound
cmpl
jg
roll
adcb
push
jmp
scas
mov
sbb
ret
xchg
push
pop
mov
sbb
out
ljmp
sbb
cmp
cld
dec
adc
test
mov
inc
or
iret
aam
stc
inc
cmpsb
addl
out
adc
in
jno
loopnew
add
ja
push
jae
jmp
mov
push
in
into
jecxz
fdivrl
popf
leave
cld
sbb
xchg
in
ds
repnz
mov
cmp
push
mov
jnp
push
xor
insb
push
pop
xchg
dec
sub
imul
or
mov
je
pop
sbb
add
and
xor
jg
js
xor
add
mov
xchg
adc
call
add
repnz
mov
mov
lea
lcall
les
movsb
xlat
idivb
fisubrs
add
lock
sub
xor
or
call
int
or
push
cmp
or
cmc
setae
out
cmc
sbb
sbb
mov
jmp
xchg
jle
add
mov
outsb
pop
faddp
sub
mov
cmpsb
pop
cld
push
sub
sub
pop
pop
arpl
pushf
pop
mov
jnp
imul
mov
add
jns
mov
ss
and
mov
cmc
fsubrs
mov
xor
push
sbb
dec
insl
inc
xchg
test
and
push
jno
and
mov
cmp
popa
dec
jg
test
jo
daa
inc
or
and
push
scas
adc
adc
cmc
mov
cmpsb
mov
cmp
mov
and
lret
push
inc
or
lahf
inc
stos
or
repz
adc
and
test
add
adc
mov
pop
fistl
adc
inc
dec
or
push
es
mov
movsl
sbb
jecxz
addb
inc
gs
add
rclb
jbe
sarl
xchg
inc
sti
outsb
jb
movsl
jecxz
cmp
adc
enter
fcmovb
mov
xchg
adc
test
or
and
cmp
arpl
jmp
fmuls
add
gs
out
xchg
inc
mov
dec
movsb
and
and
mov
push
xor
xchg
je
mov
int
push
mov
cmp
xor
fsts
insl
fnsave
js
gs
lret
sub
adc
push
shll
jecxz
inc
dec
nop
fildll
jns
adc
inc
js
push
xor
adcb
icebp
xor
dec
or
push
repnz
jns
mov
mov
call
inc
dec
adc
loope
mov
gs
inc
and
in
imul
or
add
and
enter
add
or
sub
adc
push
scas
clc
das
add
out
dec
lds
aam
cmpl
push
sub
cmpsl
jno
fistl
push
xor
adc
add
jno
add
mov
adc
mov
inc
cmpsl
jno
or
add
add
dec
add
repz
mov
adc
insl
xor
testl
lahf
and
add
sub
fiadds
jo
adc
es
mov
mov
and
add
adc
sub
pop
inc
or
popa
add
aad
adc
lds
adc
add
and
adc
add
add
inc
inc
adc
add
les
add
pop
cmpsl
sbb
xor
shrb
mov
subl
add
and
cwtl
add
and
xchg
popa
add
add
sbb
loopne
add
jmp
subl
out
icebp
xor
jno
pusha
lds
mov
inc
sbb
movsl
sub
sub
fisubl
inc
pop
sbb
mov
xchg
and
mov
and
loope
imul
add
push
add
or
sbb
out
int
aam
add
push
mov
out
push
sbb
inc
mov
push
das
add
xchg
sbb
sbb
sub
push
xor
mov
lods
add
cwtl
inc
imul
cmpsl
xor
push
mov
loop
jmp
dec
inc
inc
add
popf
sbb
mov
fidivl
das
rcr
shll
push
and
arpl
outsb
and
jecxz
stos
xchg
xorl
loop
rorb
xchg
stos
filds
mov
inc
orb
mov
movsb
jnp
mov
movsl
jae
shll
add
or
xor
inc
mov
xchg
add
xor
aad
daa
add
sub
add
jb
ret
sub
sbb
add
cmp
pusha
or
mov
das
les
aaa
sub
bound
jmp
sub
out
mov
inc
pop
sub
sub
stos
cmp
sub
add
lahf
sbb
test
repz
pop
add
cmp
hlt
dec
or
test
add
xor
in
sbb
push
insl
pushf
push
mov
mov
dec
fistl
xchg
push
shlb
pop
adc
push
nop
adc
sbb
sub
sub
mov
dec
xchg
ss
sbb
xchg
push
sbb
add
and
rolb
xchg
mov
push
xchg
inc
ja
or
mov
adc
jmp
shl
sub
mov
lret
shlb
popa
inc
adc
and
loopne
cmc
dec
je
jg
xchg
add
pop
add
pop
outsb
mov
subb
sub
test
rcll
inc
inc
addr16
and
mov
mov
daa
mov
sbb
loopne
add
sub
pusha
mov
lcall
outsl
lea
adc
dec
mov
cmp
insl
mov
dec
outsl
stos
xor
pop
push
adc
sub
or
sbb
add
and
pusha
sub
pop
or
int3
inc
inc
sbb
stos
loopne
shrl
jmp
mov
bound
dec
sub
mov
dec
or
mov
inc
popa
sub
jbe
sub
dec
nop
ja
popf
nop
and
xor
pusha
xor
mov
mov
xlat
mov
mov
clts
and
outsl
arpl
ret
dec
pushf
sbb
inc
insb
xor
push
xchg
adc
fwait
push
bound
mov
sahf
rorl
sbbb
ja
xchg
jo
mov
add
lods
dec
lods
or
mov
cmp
sub
rcll
pop
mov
push
xor
ficoml
fnstenv
dec
push
nop
insb
adc
sbb
popa
imul
sub
sub
push
or
jp
mov
dec
shll
sbb
push
xchg
inc
inc
pand
jmp
test
nop
mov
movsl
xchg
adc
ss
loopne
jnp
push
loop
or
jmp
imul
mov
lahf
inc
cltd
push
cmp
xchg
rorb
pop
das
inc
jns
xchg
xor
add
mov
es
xchg
push
pop
das
add
sub
ror
dec
cmpsb
xor
push
int
push
roll
fdivl
outsb
inc
outsl
fidivrs
adc
mov
and
jbe
lods
sub
fstl
and
sub
xchg
dec
scas
jecxz
iret
sbb
inc
imul
popa
fcoms
sbb
in
sbb
inc
pop
mov
or
js
dec
jne
xchg
movsb
insb
int3
sbb
inc
cmpb
xor
addr16
pop
inc
xchg
pop
or
add
mov
adc
test
fwait
test
jp
arpl
push
ss
andl
outsb
or
push
gs
cmpsl
imul
and
mov
inc
or
movb
mov
fsubs
push
daa
adc
pop
mov
fldenv
je
pushf
daa
mov
ret
popl
add
lds
dec
and
xor
cmovb
fxch
and
or
in
add
lods
and
popa
pushf
adc
repz
or
fsts
std
push
mov
dec
lea
dec
mov
rclb
lods
xchg
xor
mov
mov
and
cmp
pop
and
int3
push
imul
pusha
jmp
cld
addr16
inc
mov
push
lods
and
and
or
and
fsubl
push
imul
push
in
pusha
xchg
insl
and
xorl
adc
push
and
add
mov
add
jno
inc
int
pop
dec
dec
push
adc
and
sbb
or
dec
and
and
push
and
sbb
cmp
dec
jno
dec
lea
add
sub
add
ss
add
add
insl
add
fildl
push
jo
sbb
jp
inc
in
mov
pop
xchg
shrb
and
cmp
sub
add
add
sbb
push
mov
mov
push
xchg
jecxz
and
xchg
xchg
inc
sbb
sbb
inc
ret
fidivrl
sbb
or
mov
daa
mov
fisubl
mov
rclb
daa
ja
sub
adc
add
sbb
push
dec
xchg
add
fdivl
and
xlat
or
ficoms
arpl
fcom
push
add
adc
cs
lods
in
mov
popf
mov
sbb
dec
dec
jo
mov
mov
leave
popa
rcll
mov
mov
decl
push
mov
push
insl
cmpsl
rorl
es
aam
and
shlb
shll
sahf
fmuls
sbbb
dec
and
bound
lds
sbbl
inc
xorb
jno
or
cmp
push
jnp
sub
inc
pop
or
adc
sbb
sbb
cmc
cmp
subb
add
push
stc
and
push
shrb
and
jbe
mov
call
dec
adc
push
xchg
movsl
xor
mov
adc
movsl
movsb
push
fcoms
push
and
insw
loop
fcoms
aad
push
mov
jae
pop
dec
mov
bound
or
mov
test
imul
pop
sbb
test
sbb
push
es
pop
out
inc
inc
dec
cmpsb
ljmp
cs
test
fwait
sbb
cmp
adc
pop
push
inc
xchg
and
sbb
cmc
mov
insb
push
adc
pop
lods
inc
mov
ret
xorl
sbb
mov
insl
and
movsb
pusha
mov
fcos
mov
adc
fsts
aaa
ljmp
mov
pop
adc
jno
imul
aad
xor
andb
inc
nop
mov
movsb
out
sbb
stos
mov
mov
mov
mov
sbb
pop
sbb
and
dec
or
adc
mov
pop
jge
inc
sbb
fistpl
lods
int
and
outsb
jno
test
dec
popa
and
pop
adc
pop
mov
pop
cltd
and
lahf
cs
test
sbbl
jae
and
rolb
push
sbb
sbb
pop
outsb
mov
dec
xchg
scas
test
pop
xorb
fstpt
and
jmp
add
inc
or
stc
or
rol
test
bound
adcl
xchg
dec
dec
outsl
ja
adc
push
popa
mov
loop
sarl
add
and
jg
jo
sarb
jge
and
dec
pop
aaa
dec
or
push
inc
pop
push
mov
sbb
dec
popa
fwait
mov
xor
push
inc
bound
xor
shld
pop
mov
int3
lods
pop
or
imul
and
movsl
shll
push
popa
sub
gs
add
push
add
xor
jbe
jbe
sbbl
add
sbb
sbb
sbb
and
sbb
adc
adc
or
jg
cs
sbb
or
push
push
and
push
movlps
sbb
sbb
adc
or
or
add
out
out
pop
adc
adc
push
push
adc
adc
std
mov
add
adc
add
push
adc
push
mov
pop
sbb
sbb
push
or
jg
fisttps
or
pop
and
add
and
loopne
paddd
or
or
or
xchg
scas
and
pop
pop
add
and
push
adc
paddd
pop
and
mov
adc
cmpsb
orb
repnz
or
adc
sbb
divl
cmpsl
push
push
push
and
adc
divb
pop
adc
xor
sub
bound
fiaddl
xor
decl
pop
lock
add
and
xor
and
jg
pop
and
dec
push
push
or
mov
adc
aaa
adc
out
idiv
or
sbb
in
cmp
dec
sbb
adc
mov
sbb
and
sbb
or
lock
add
dec
or
xchg
adc
or
or
lock
add
lock
mov
or
sti
jg
inc
and
or
lea
das
adc
push
push
dec
push
sub
add
and
pop
in
add
push
and
rolb
and
adc
idivl
or
and
sbb
imul
xchg
daa
std
jmp
mov
sbb
xor
outsb
insl
lock
sbb
sbb
incl
inc
cmp
lock
push
daa
or
add
dec
pop
shrl
push
mov
push
push
add
cmp
mov
cmp
cmp
dec
adc
add
adc
sbb
adc
xor
push
mov
mov
and
jno
inc
dec
add
pop
sbb
xor
inc
mov
inc
add
sub
daa
lcall
or
ljmp
cmovne
adc
fwait
adc
or
ss
or
out
call
inc
or
cmp
dec
test
push
add
mov
inc
add
lock
sub
mov
scas
push
cltd
sub
pop
lock
add
fldln2
add
bound
and
sbbl
xor
or
or
adc
lock
pop
and
jmp
filds
sbb
and
adc
and
and
daa
or
inc
jg
xchg
fdivrp
call
inc
or
adc
push
adc
adc
or
pop
cmpsl
lock
mov
fldcw
push
xor
or
lahf
inc
mull
push
das
shll
rcrl
add
mov
lahf
push
iret
pop
sub
sbb
pop
pop
push
out
add
pop
aad
or
adc
dec
pop
mov
xor
add
sar
imul
push
push
adc
xor
xor
ja
cmc
dec
data16
sbb
fnstenv
jmp
adc
push
sbb
pop
sbb
xchg
adc
push
popf
mov
sbb
sti
fstl
lahf
adc
sbb
stos
pop
sbb
sub
jmp
mov
or
push
sub
adc
in
and
push
push
adc
sbb
repz
add
inc
and
or
push
or
add
insl
loop
jmp
add
add
add
or
adc
pop
addl
pop
add
cld
push
adc
and
or
push
sbb
or
dec
cmp
pop
xor
pop
push
jns
adc
cmp
popf
daa
cmpsl
pop
or
adc
shll
or
and
lds
adc
rorl
inc
test
adc
test
clts
jmp
add
inc
sbb
push
lock
std
sbb
and
out
pop
std
negl
adc
push
or
pop
mov
pop
stos
pop
jmp
add
divl
sub
add
and
mov
fildl
push
aad
in
sbb
add
sbb
add
sti
and
add
dec
or
fldt
sbb
adc
pop
and
xor
sub
rsqrtps
add
add
dec
adc
lods
fiaddl
cmp
stos
lahf
pop
adc
or
mov
push
stos
xchg
adc
adc
jno
mov
lahf
es
mov
push
jae
push
jp
adc
or
and
mov
push
and
add
sbb
xchg
sbb
out
add
sbb
rorl
and
pop
push
adc
sbb
scas
sti
push
cmp
jb
in
push
adc
adc
adc
add
sub
adc
leave
and
adc
push
adc
jb
jge
pop
adc
add
insb
pop
mov
dec
add
sub
mov
fdivrl
push
adc
push
dec
adc
mov
nop/reserved
mov
fmuls
mov
es
leave
or
stos
test
adc
inc
or
cwtl
out
fistpl
push
push
or
adc
adc
adc
icebp
adc
push
sub
adc
xchg
shll
sti
divl
cwtl
mov
fstpt
adc
sub
add
in
out
pop
xor
decl
add
or
jo
or
or
push
adc
into
mov
dec
sbb
daa
inc
out
sbb
insb
fs
sub
adc
sahf
rclb
imul
arpl
outsb
adc
insl
mov
popa
and
adc
jg
mov
or
cmp
push
sub
add
ss
aad
cmp
pxor
lock
outsl
adc
and
pop
or
mov
ljmp
jbe
adc
sbb
or
lock
add
lock
and
scas
idiv
cmp
sbb
inc
sub
cmp
mov
iret
xor
lock
fdivrp
decl
add
adc
data16
and
das
movsb
add
push
jg
xor
cmp
sbbb
cmp
adc
cmp
push
push
test
sub
nop
lock
add
add
lock
pextrw
jg
ljmp
in
sub
lds
and
and
femms
and
adc
cmp
in
lock
adc
and
sub
adc
dec
mov
or
sbb
adc
adc
bndldx
push
dec
inc
add
cltd
sub
jmp
pop
call
sub
push
sub
in
xor
pop
inc
push
or
push
dec
or
xor
pop
sub
mov
movhps
add
sbb
mov
dec
sub
enter
sub
pop
or
mov
outsb
sti
popa
sti
or
push
add
div
decl
push
sub
inc
push
outsw
sub
add
push
and
and
aas
add
jg
sti
or
or
or
xor
std
cmp
pop
pop
sbb
xor
fnstsw
or
shl
loope
pop
push
out
and
sar
aas
mov
ss
xor
and
in
or
decl
and
sub
popa
sbb
sub
and
jne
dec
daa
sub
add
sub
adc
aaa
jg
push
outsb
lds
lea
sub
adc
pop
jl
pop
lahf
mov
sbb
add
ljmp
das
sbb
xor
pop
and
lods
sub
sub
adc
lret
fnstcw
aaa
xor
das
das
sub
adc
jns
out
mov
adc
push
sbb
xor
sbb
cmp
and
lock
add
or
push
sub
arpl
xor
sbb
lcall
ds
and
or
or
fwait
leave
or
pop
jbe
push
add
cmc
jae
xor
push
dec
dec
mov
divb
daa
pop
push
push
pop
and
sbb
or
pop
cmp
mov
pop
ds
filds
mov
pop
pop
pop
cmp
sbb
sbb
pop
cld
fistl
and
inc
imul
mov
mov
inc
repnz
push
or
or
or
xchg
dec
or
adc
test
jmp
adc
push
jg
pop
pop
pop
push
comiss
cmp
mov
cltd
es
sub
adc
andl
icebp
or
push
sbb
dec
adc
push
xchg
adc
jbe
pop
mov
add
pop
and
es
adc
adc
mov
and
mov
sub
jl
rol
ss
daa
pop
sub
hlt
fistpl
cltd
add
incb
sub
push
and
add
add
cmp
sbb
sbb
mov
scas
cmp
push
push
pop
jae
insb
pop
cmp
push
and
icebp
test
and
xchg
daa
pusha
inc
mulb
sbb
inc
lods
xchg
push
pop
mov
in
out
sbb
dec
out
cmp
and
out
cmp
pop
pop
jnp
sub
and
sub
add
insb
jg
adc
adc
or
ss
inc
icebp
mov
pop
add
mov
daa
add
iret
push
or
loope
or
mov
ss
pop
inc
jg
cmp
adc
jne
test
cs
push
pop
stc
xchg
push
push
inc
jb
adc
aaa
fdivr
ret
scas
jmp
sub
insl
sub
sub
sbb
jle
xlat
inc
enter
lock
insb
add
fcomps
dec
xchg
imul
adc
mov
lock
out
mov
inc
inc
inc
sbb
inc
adc
ror
fwait
xor
mov
rdtsc
cmp
and
dec
lods
jle
scas
adc
add
jo
shlb
pop
sbb
mull
testb
inc
test
adc
sbb
cmp
fsubs
xchg
pusha
aaa
pop
mov
xor
psadbw
sbb
adc
push
and
in
lock
add
sub
cmp
incb
rolb
mov
lock
sub
aaa
call
sbb
pop
pop
pop
dec
decb
lock
add
xor
and
sbb
or
sbb
sbb
inc
add
or
sti
cmp
adc
adc
add
cs
inc
lcall
xor
lock
adc
lock
add
and
add
out
andps
and
cvtps2pi
adc
adc
push
adc
adc
and
lcall
add
push
adc
loopne
or
ja
fucomip
xchg
movlps
or
push
pop
fmuls
pop
stc
testl
jmp
pusha
sub
xor
or
push
std
hlt
decl
aaa
sub
addb
pop
cmp
sub
insb
jns
mov
sarl
inc
int3
inc
in
and
movups
in
inc
inc
or
dec
cmp
adc
sbb
sbb
sbb
push
adc
mov
hlt
aas
jmp
sbb
adc
rorb
push
push
adc
fisubl
and
punpcklbw
adc
movsl
push
cmp
cmp
push
daa
popf
adcl
add
sbb
pop
sbb
cld
ret
sbb
cmpsl
sbb
push
push
or
ljmp
adc
sbb
adc
jne
adc
and
or
jnp
and
or
mov
dec
add
push
adc
inc
cmp
mov
adc
filds
or
or
adc
adc
inc
arpl
outsl
test
jno
minps
rep
pop
cs
pop
jbe
rorb
adc
je
mov
push
daa
jbe
add
dec
push
dec
mov
push
shll
test
loope
pop
push
dec
paddusb
sub
push
lock
jle
sbb
lret
sbb
nop
mov
adc
sbb
loopne
in
clc
or
aad
and
sbb
pop
sbb
sahf
and
and
bndstx
add
lds
mov
xor
rcr
push
in
xchg
push
push
xor
cmp
push
mov
adc
repnz
add
dec
inc
sbb
adc
and
shlb
mov
aam
and
sbb
aas
add
adc
lds
mov
mov
or
movsl
inc
mov
mov
sbb
adc
push
clc
out
into
mov
pop
ja
adc
jmp
sbb
sbb
mov
sbb
push
pop
popa
or
add
xchg
and
prefetchnta
and
cmp
adc
push
or
or
mov
daa
mov
and
pop
mov
add
andl
adc
sub
mov
loopne
and
fmulp
jno
adc
ret
or
or
sub
xchg
and
outsl
xor
popf
push
adc
lods
mov
jnp,pn
or
sbb
add
pop
mov
stc
int
push
adc
push
and
mov
cld
pop
push
sbb
ljmp
ja
or
ret
int
mov
lahf
and
cmpsb
je
xchg
roll
fdivs
or
mov
cmp
or
or
les
ss
loopne
pusha
xor
fs
push
and
cmp
fisttpll
pop
fstl
or
sbb
imul
push
bound
or
or
or
lds
out
ljmp
cmp
or
jl
mov
and
insl
stos
adcl
pop
and
cwtl
jnp
inc
mov
iret
sbb
adc
and
add
and
in
fucomp
pop
and
add
adc
fnstenv
sub
or
or
dec
mov
and
pop
repnz
sbb
cmovns
sbb
or
jl
out
enter
jno
adc
inc
adc
arpl
fs
out
add
imul
mov
call
dec
call
push
and
aaa
add
pushf
adc
mov
popa
cmpsl
sbb
adcl
and
icebp
sar
test
mov
adc
inc
jbe
mov
gs
popa
fwait
jae
sahf
movhps
jne
adc
dec
mov
sub
xor
jo
outsl
mov
daa
das
and
sub
or
loop
scas
adc
unpcklps
or
outsl
sbb
add
mov
cmp
push
call
sbb
sub
lods
out
cmpsb
dec
sbb
sbb
aas
test
pop
and
js
mov
daa
sub
cs
or
rorb
es
push
sub
pop
les
mov
pop
sbb
test
xchg
sbb
jg
adc
lock
or
popl
add
adc
sbb
aam
outsl
and
adc
aad
pop
or
cld
sar
sub
sub
or
es
test
aas
sbb
mov
pop
sbb
adc
pop
sub
jae
cmp
inc
inc
adc
adc
sbb
cmp
adc
shll
adc
inc
call
ljmp
xchg
and
lods
push
push
arpl
and
movl
movsl
adc
and
jp
and
and
subb
adc
cmp
lds
test
xchg
jnp
inc
mov
or
or
xchg
sbb
jo
addb
adc
cmp
lock
loopne
xchg
and
pop
in
or
sbb
filds
fistpl
push
lahf
pop
or
and
push
lret
loopne
mov
adc
adc
into
pop
mov
movsl
adc
es
sete
adc
test
add
sbb
pusha
mov
push
mov
cmp
add
icebp
xchg
decl
cmp
pop
sub
pop
pop
les
rolb
adc
adc
adc
add
xor
cmp
lahf
stc
std
pop
std
adc
or
add
movaps
jnp
pop
or
in
pop
mov
shlb
stos
lea
pop
add
or
mov
adc
and
push
push
sub
and
incl
adc
adc
inc
inc
dec
cmp
das
sbb
mov
and
aas
inc
arpl
and
dec
or
push
or
rcll
dec
adc
cmovs
push
pop
and
lock
jmp
test
inc
sbb
sbb
inc
sbb
sbb
cs
jmp
push
sbb
jle
sub
mov
xor
sub
mov
cmc
aas
clc
or
pop
push
ja
jbe
pop
imul
sbbb
cmp
aas
and
inc
push
cmp
pop
jmp
scas
scas
inc
sub
push
sbb
cmp
and
ds
fldt
xor
sub
fildll
inc
lock
dec
xor
cs
dec
or
outsl
popa
loopne
pushl
xor
sub
pop
sbb
xor
inc
push
scas
sub
pop
jns
jb
pop
pop
mov
adc
cmp
pop
add
aas
fs
pop
in
jae
repz
pop
inc
aas
push
incl
jnp
pop
pop
and
cli
add
mov
add
mov
andl
sbb
xchg
pop
cmp
adc
cmp
and
mov
push
inc
mov
jmp
xor
ret
jecxz
or
adc
dec
incl
sub
punpcklbw
and
jae
or
inc
add
das
sbb
ss
mov
pop
sbb
sub
xor
or
into
pop
test
and
lods
daa
sbb
adc
and
adc
pop
lock
mov
aas
fsubrs
and
jg
add
cs
sub
xchg
cmp
aas
stos
lock
ja
pop
sbb
adc
loope
jmp
arpl
xor
sub
or
jp
adc
pop
and
cmc
push
or
pop
sar
cmp
sub
je,pn
bound
fmuls
lock
pop
add
mov
and
aas
sub
ret
add
dec
pop
daa
sub
cmp
add
jnp
inc
bound
adc
pop
and
cmp
nop
aam
sbb
lock
jge
in
popa
jmp
inc
xor
aas
jbe
popa
movsb
jb
pop
or
xor
imul
and
cmp
or
mov
adc
ljmp
push
outsb
sub
cmp
sub
pop
sub
jbe
mov
pop
pop
add
add
cmc
push
sub
and
jne
lcall
test
fs
je
sbb
pop
loop
ret
aaa
jge
pop
pusha
sbb
mov
add
and
daa
cli
loop
jg
sbb
pop
pop
daa
sbb
dec
add
cmp
cmp
add
pop
or
sysret
sub
push
push
lcall
add
sbb
xor
sub
or
jmp
fistpll
adc
sbb
adc
or
fiadds
sbb
sbb
adc
adc
mov
es
pop
adc
or
cld
jg
pop
push
nop
xchg
and
pop
or
mov
or
add
pop
mov
dec
sub
clc
ds
addr16
add
xor
subl
ljmp
es
adc
clc
decl
lock
aas
std
jbe
push
cmp
add
paddd
pop
fists
cmp
or
cmp
cmpsl
cmpsl
decl
sbb
push
push
cmp
or
or
or
or
ficoms
and
add
or
pop
push
and
sbb
js
sub
push
cltd
sbb
dec
and
pop
mov
or
insb
push
mov
pop
push
pop
adc
adc
cmp
or
mov
jne
outsl
ja
push
gs
adc
adc
sbb
sub
sbb
cs
loop
out
ljmp
in
jb
add
sbb
pop
pop
and
cmpsl
and
or
xor
out
sti
incl
ja
inc
dec
pop
xchg
pop
ds
or
push
add
or
stos
fs
xor
int
pop
xor
mov
xor
std
sub
push
hlt
das
gs
pop
aaa
adc
pop
mov
and
fimull
sub
cmp
cmc
in
push
adc
mov
rorb
sub
xchg
or
adc
cmp
adcl
in
sbb
mov
adc
sbb
push
or
sahf
imull
adc
and
sbb
sbb
into
sti
int3
rcrb
push
push
adc
adc
in
push
ss
mov
push
iret
fs
add
and
jns
imul
cmp
fwait
jbe
pushl
outsl
pop
dec
sub
jns
or
sti
dec
cmp
adc
das
add
or
adc
cmp
sbb
lret
adc
lret
cmp
aaa
inc
or
mov
xorl
and
adc
daa
sbb
inc
push
push
xor
push
icebp
repnz
dec
push
imul
bound
push
push
push
scas
push
lock
sbb
pop
or
adc
test
add
cltd
adcl
and
push
xchg
js
insb
xor
inc
adc
push
ss
mov
sub
push
pop
icebp
dec
roll
xlat
ficoms
adc
je
adc
adc
push
and
xor
and
mov
or
lcall
push
sbb
sbb
push
jno
and
adc
ds
add
or
add
xor
xchg
xor
incl
jbe
sub
fwait
push
xchg
or
mov
mov
or
mov
cs
lock
incl
pop
popw
jb
insl
pusha
sub
jno
xor
inc
pop
inc
inc
das
aas
sub
sbb
inc
sub
sub
and
and
test
jo
add
les
jl
dec
sbb
adc
push
sub
and
or
sbb
sub
inc
aad
xor
push
push
pop
inc
ds
out
sub
nopl
or
pop
sub
lcall
dec
dec
sbb
imul
adc
test
cli
mov
or
pop
xor
sub
std
jne
shrl
popf
or
or
or
or
xchg
xor
cmp
les
xor
sub
aad
push
dec
out
push
mov
lods
and
mov
mov
and
lahf
sbb
jg
rclb
subl
add
or
push
pop
imul
ss
and
or
push
adc
mov
adc
ljmp
adc
imul
jg
call
icebp
pop
mov
insb
pop
movsl
sbb
mov
sbb
or
xchg
push
sar
cmp
add
sbb
loopne
xchg
and
add
es
dec
adc
add
daa
in
add
pop
orl
or
mov
inc
sub
adc
unpcklps
fstpt
jecxz
sub
add
adc
pmaxsw
pop
pop
or
sbb
sbb
adc
and
sbb
adc
xchg
and
and
sbb
divb
adc
pop
push
or
xlat
push
push
pmullw
xlat
adc
xor
lcall
cli
das
sub
push
in
xchg
adc
int3
hlt
pop
neg
pop
inc
push
add
fwait
push
sub
pusha
ficomps
sbb
or
and
mov
scas
push
and
and
lock
sub
xchg
scas
mov
xchg
xor
pop
cmp
xor
xor
xchg
popa
xor
and
or
or
mov
int
ds
push
or
dec
inc
or
or
sbb
setbe
pusha
add
or
imul
adc
and
push
into
push
sbbb
sbb
sub
adc
adc
stos
and
cmp
xor
outsl
rol
push
push
in
ljmp
xchg
pop
daa
push
sbb
sbb
adc
adc
sbb
pop
lods
jle
inc
or
sub
dec
dec
shll
pop
mov
imul
and
jmp
inc
xchg
dec
jmp
add
xchg
adc
adc
jge
push
shrb
and
cmp
push
adc
adc
fdivrs
fists
movb
in
mov
and
push
add
push
cs
and
adc
mov
test
adc
push
or
pop
pop
loopne
sbb
xor
push
sbb
arpl
add
dec
xchg
jb
push
bound
or
outsl
mov
clc
sarl
add
sub
mov
fdivl
and
push
or
jne
sbb
pop
adc
jo
dec
adc
movb
push
jecxz
dec
xor
aad
cmpsl
mov
pop
sub
mov
loop
xor
jae
push
stos
jne
lods
sbb
and
or
and
je
inc
mov
test
aad
pop
incl
cmp
adc
lock
adc
add
sub
ret
cmp
clc
add
lea
sbb
xor
in
lcall
push
inc
jl
sub
cmp
and
sub
inc
push
sbb
ljmp
push
ss
ss
sbb
mov
or
decl
ss
add
cmp
pop
pop
xor
and
and
ds
push
lods
xchg
cmp
adc
inc
xor
push
cmp
mov
push
outsl
mov
cmp
pop
pop
mov
or
lods
aas
lock
push
pop
test
xor
dec
jg
jmp
stc
xorl
jnp
inc
and
dec
in
push
and
cmc
lock
jg
adc
xchg
inc
mov
inc
cmp
push
cwtl
jo
push
dec
in
int
xor
and
add
js
xor
out
mov
aaa
push
or
std
inc
add
push
cmp
push
or
das
xor
test
fsts
mov
js
daa
dec
jo
cmpsl
sub
pandn
mov
out
int3
pop
pop
push
lock
add
sbb
sub
nopl
add
out
pushl
and
cmp
xor
cmp
push
dec
es
ss
add
es
cli
icebp
dec
cmp
clc
sti
aas
andl
das
push
and
add
and
mov
sbb
adc
jmp
fistpl
aaa
sbb
add
mov
adc
add
subb
push
add
dec
or
leave
push
sub
int
fs
loopne
aas
pop
or
xchg
es
into
dec
or
into
xor
pop
lock
inc
std
mov
cmp
sub
xchg
pop
out
pop
sbb
jg
cmp
dec
pop
pop
adc
lcall
xor
cmpsl
add
call
les
pop
mov
sbb
lidtl
jg
aas
mov
cmp
pop
int
sub
adc
jmp
dec
or
and
push
adc
pop
or
xchg
adc
jno
ja
pushl
xor
and
and
lods
push
cli
std
cmp
add
push
adc
or
arpl
pop
sbb
dec
mov
nopl
add
dec
sbb
push
sbb
xchg
sub
xor
aam
mov
jb
js
adc
fisttpl
xor
stos
test
push
push
pop
dec
jb
out
or
call
mov
sub
or
jmp
jno
adc
pop
loop
out
mov
cmp
stos
inc
push
pop
add
mov
int3
sbb
mov
mov
push
mov
jg
xor
add
and
add
jg
xchg
sbb
push
out
mov
cli
pop
out
cltd
and
and
cmp
popa
adc
sbb
add
add
push
lods
xor
push
and
dec
or
shl
xchg
gs
icebp
sbbl
or
pop
push
push
adc
les
or
lods
in
int
nopl
sub
or
pusha
inc
jecxz
or
ljmp
cmp
unpcklps
ss
jle
rol
adc
lock
gs
xor
dec
pop
fs
pop
pop
lock
sub
push
adc
add
and
pop
cmp
cmp
cmpl
inc
sbb
dec
pop
pop
push
lds
inc
adc
rolb
sub
pop
and
push
and
rclb
mov
shrb
insb
adc
push
addr16
loopne
cmc
pop
adc
mov
mov
ljmp
or
and
xchg
enter
jmp
add
dec
cs
decl
dec
fwait
sbb
pop
xor
cmp
ljmp
jl
jno
ljmp
cli
cmp
pop
cmp
push
dec
xor
adc
inc
and
movsl
mov
aaa
cmp
pop
sbb
or
movsb
adc
dec
or
mov
gs
jo
or
jmp
add
cld
add
or
fcmovnu
ret
movsl
or
and
add
sub
or
mov
sbb
and
and
sbb
pop
adc
lods
cmpsl
dec
aas
adc
sbb
xchg
es
adc
adc
pop
cmp
push
loope
adcl
cmp
adc
or
andl
and
mov
add
pop
cmp
add
adc
ficoms
mov
cli
xor
jbe
jno
mov
mov
and
pop
dec
sub
in
mov
jge
jo
push
add
xor
xor
imul
sub
clc
call
sub
adc
das
mov
bound
pop
push
and
sar
adc
sbb
sbb
and
rolb
cmp
mov
scas
and
daa
add
and
push
sbb
out
orps
lock
add
and
push
add
sbb
sti
add
mov
sbb
pop
sbb
sahf
add
pop
push
mov
mov
or
inc
rolb
xor
sbb
sbb
sub
mov
xor
cmp
or
pop
or
or
push
or
push
adc
icebp
mov
fadds
sub
adc
adc
sbb
adc
sub
pop
adc
sub
lock
or
ds
adc
dec
outsl
dec
push
ret
loopnew
and
movb
xor
xor
gs
sbb
push
sbb
inc
leave
sub
pop
sub
insl
fisubl
adc
aas
fnstsw
xchg
sbb
loopne
push
ret
aas
pop
lcall
xchg
mov
dec
lods
es
xor
cmc
dec
clc
aas
sbb
adc
xchg
inc
aas
movhps
orl
js
das
add
pop
or
xor
loopne,pn
es
or
notb
in
add
push
xchg
xor
pop
sbb
les
add
xor
inc
cli
xlat
mov
adc
imul
out
sub
or
xor
pop
and
fdivr
cmpsl
dec
sbb
pop
and
test
xlat
push
inc
or
ret
and
jp
jge
inc
in
push
sub
sahf
test
add
popf
jg
das
inc
adcb
xor
sbb
sar
dec
sbbb
daa
add
sbb
and
or
mov
pop
sbb
cltd
sub
mov
push
pop
add
sbb
and
sub
sbb
gs
loop
jmp
push
push
add
sub
and
and
jmp
aaa
and
pushl
aaa
sbb
adc
sbb
adc
and
and
or
cmovl
push
adc
adc
les
push
test
mov
adc
sbb
shlb
sbb
adc
adc
loopne
and
fadds
sub
fistpl
test
xchg
sbb
jne
adc
out
insl
push
jl
in
sbb
arpl
fistl
pop
sbb
push
or
pop
js
and
dec
sbb
add
add
xchg
inc
popa
mov
mov
into
xor
out
arpl
push
sbb
dec
mov
xchg
cmp
add
xchg
sbb
add
or
adc
pop
xchg
adc
xchg
push
jno
push
sbb
or
mov
enter
adc
lock
cmp
or
and
mov
or
adc
add
sub
sbb
mov
sub
push
test
aad
adc
cmp
xor
sbb
sub
sub
sbb
add
add
mov
or
cmp
sub
and
adc
adc
je
test
dec
jo
mov
sub
mov
out
add
xor
sbb
adc
ds
or
mov
or
xchg
mov
mov
adc
push
sbb
sub
push
in
ja
testb
push
sbb
sub
sbb
xor
pusha
icebp
pusha
add
daa
dec
subb
sbb
xchg
push
inc
sbb
jmp
pop
cmp
icebp
scas
push
xchg
por
inc
adc
sbb
xlat
leave
and
and
or
jne
mov
and
sub
xchg
sub
push
or
sbb
add
xchg
mov
xor
and
pop
imul
test
push
sbb
bound
ret
daa
push
fwait
test
addl
jnp
sub
push
add
sub
xchg
push
xchg
out
ficoms
pop
lods
add
jmp
adc
and
sub
sbb
sub
xor
or
xor
adc
add
push
dec
test
add
adc
add
push
or
adc
clc
sbb
mov
add
mov
sbb
movsl
add
and
push
movsl
push
push
pop
fbstp
mov
pop
cmp
inc
sbb
push
pop
sub
cmp
sti
and
test
pop
dec
int3
popl
shlb
xchg
pop
sahf
sub
into
in
xchg
cmpsl
test
mov
jno
pop
sub
test
popf
ljmp
outsb
push
fsts
and
push
or
rcr
gs
and
shrb
sbb
lods
je
cmp
push
das
pop
add
outsb
sub
xchg
loop
add
xorb
adc
loopne
aaa
pop
dec
sbb
in
ficoms
orb
and
ja
std
and
sub
pop
xor
and
xor
xor
xor
aas
subb
adc
or
or
pop
add
dec
or
mov
addl
or
mov
and
cmp
inc
pop
cmp
mov
cmp
and
adc
loope
mov
xchg
pop
or
cli
inc
clc
mov
mov
push
insl
inc
xor
mov
sub
ud2
sbb
inc
xor
jle
inc
push
sbb
incb
clc
ljmp
jb
cmovbe
fs
cmp
push
adc
mov
ss
push
add
lods
lock
test
pop
pop
cltd
das
xor
test
sbb
sbb
das
bound
adc
lock
add
aaa
push
inc
and
or
cmc
cmp
fstl
ss
inc
out
jge
orl
ficoms
call
lock
sub
jl
cmp
xor
and
idiv
sbb
and
and
adc
adc
add
cmc
inc
pop
std
pop
adc
pop
adc
and
adc
insb
clc
inc
cmp
or
adc
jp
pop
inc
lcall
jl
xchg
lods
andb
adc
xor
inc
push
cmp
pop
or
fildl
mov
or
es
ljmp
sub
sbb
dec
and
inc
add
es
icebp
orl
mov
or
lock
add
jmp
and
add
jmp
sub
and
mov
pop
sbb
mov
push
sbb
decl
pop
xor
sbb
add
push
or
inc
mov
lods
jno
adc
es
decl
xor
or
and
sub
push
jns
ucomiss
ud0
decl
sbb
sub
out
or
pop
add
add
aad
outsl
sbb
lock
or
adc
lock
jge
inc
or
dec
subb
inc
subl
adc
adc
dec
jp
lock
push
add
jbe
and
aam
iret
jecxz
rorb
test
push
xchg
jmp
add
inc
dec
das
cmp
mov
or
add
incb
lods
sti
adc
or
pop
or
jae
incl
jg
pop
or
pop
or
add
adc
pop
mov
fists
cmpsb
pop
adc
sbb
syscall
stos
pop
incb
xor
pop
push
adc
cltd
push
testl
adc
push
jecxz
xchg
jg
xorl
xchg
outsb
add
mov
xor
bound
and
or
xor
loope
sbb
add
inc
mov
outsl
adc
addb
dec
adc
xor
and
sbb
pop
xor
and
dec
or
push
jbe
xchg
das
dec
lcall
sub
adc
pop
sbb
xor
stos
sbb
hlt
call
stos
cmp
mov
xchg
add
cmpsb
and
and
xchg
xor
aas
adc
mov
dec
mov
or
movsl
mov
inc
sbb
lea
xchg
ss
ljmp
cmp
pop
sbb
sbb
pop
sub
pusha
adc
mov
cmc
add
xor
popa
xchg
loope
or
pop
shlb
imul
pop
xchg
movups
push
xor
fsts
dec
adc
fldl
adc
pcmpeqw
sbb
call
out
arpl
lods
push
push
pop
rorb
lret
add
scas
lods
test
shll
movhps
push
pop
add
arpl
push
adc
fxch
repnz
adc
dec
sbb
mov
and
push
add
les
pop
movsl
jmp
xchg
inc
outsl
pop
or
and
inc
jge
or
mov
pop
das
jae
or
cvtpi2ps
adc
adc
pop
in
scas
mov
add
pop
or
sub
aas
adc
int
movsl
sbb
dec
mov
sbb
ss
lea
push
nop
fildll
cmp
hlt
loopne
cmovno
insl
sbb
je
inc
leave
loop
xor
push
xor
jne
call
clc
lcall
or
sbb
xor
lock
add
sub
idivl
sub
sub
adc
sbb
or
or
cs
sbb
inc
sbb
or
or
mov
jmp
adc
push
addl
iret
mov
aaa
repnz
stos
and
or
push
adc
add
push
test
pop
frstor
jmp
sbb
add
xlat
lods
sbb
push
jl
sbbl
in
jecxz
pop
mov
inc
mov
inc
aaa
add
loop
push
adc
dec
pop
add
adc
sbb
sahf
push
sbb
or
inc
and
jecxz
adc
dec
push
and
sbb
dec
jns,pn
lods
adc
sub
daa
push
sub
push
rolb
or
mov
adc
push
or
or
or
jo
push
mov
les
jns
imul
sbb
or
cs
and
and
insb
inc
lds
cs
test
push
and
mov
aam
or
sbb
sbb
popa
mov
or
adc
insl
rcrl
ror
add
and
xchg
shrl
and
xchg
sbb
xchg
cmp
jne
adc
pusha
push
stos
mulb
xchg
jg
lods
lea
pop
clc
aas
mov
fcoms
sbb
sbb
adc
adc
xchg
dec
dec
sti
adc
std
adc
or
adc
adc
call
jle
pop
jge
and
mov
or
or
sub
xor
stos
pop
std
dec
aas
adc
xor
and
xor
xor
sar
out
add
sbb
xor
add
adc
in
dec
lock
add
decb
push
lock
add
call
dec
out
jne
or
adc
cmp
lock
add
sbb
mov
pop
dec
sbb
pop
jae
inc
aas
jle
in
xchg
adc
lock
add
jae
fs
mov
incl
add
adc
and
cmpl
mov
and
xorb
or
loopne
imul
xor
sti
sti
lock
add
add
ds
adc
sbb
or
or
lcall
or
or
es
pop
call
sub
mov
repz
mov
xor
stos
push
dec
xchg
js
pop
or
das
jo
sub
xchg
sub
push
sub
pop
sub
adc
cld
pop
inc
daa
lcall
push
les
sub
or
inc
add
mov
push
push
add
arpl
adc
ret
cmc
movb
or
pop
mov
cmp
loope
cmp
and
adc
pop
inc
aas
das
and
and
es
ret
and
and
adc
sbb
add
xor
add
sbb
jg
cmp
adc
and
push
movsb
repz
and
xchg
sub
push
leave
testl
sbb
ljmp
sub
and
out
jge
lock
add
sub
and
add
pop
sbb
wbinvd
pop
stos
pop
stos
loop
in
sbbb
test
add
add
in
sbb
js
aaa
adc
or
adc
mov
cmc
lahf
adc
sbb
sub
sub
sub
sub
inc
movsl
fbstp
pop
or
adc
push
mov
movsb
adc
and
add
xchg
imul
and
add
pop
and
out
rolb
mov
bound
pop
or
sbb
aas
pop
sahf
negl
adc
adc
xor
sbb
ss
or
es
call
arpl
fldenv
xor
sbb
es
and
xor
or
and
rcll
jg
mov
and
test
adc
aaa
adc
lret
jno
fstpt
mov
push
adc
or
pop
sub
aas
adc
push
add
push
and
xor
inc
in
fdivs
dec
adc
dec
xor
sahf
dec
push
jbe
pop
pop
adc
mov
minps
adc
push
jp
mov
outsl
das
add
or
adc
shlb
leave
push
jp
mov
sbb
jne
shrl
ja
enter
outsl
movsl
sbb
ds
sbb
pop
and
mov
adc
push
push
pop
xor
aam
dec
inc
pop
sbb
pop
add
or
pop
sub
or
push
xor
jp
xor
movsb
inc
gs
or
test
sbb
pop
mov
cmp
and
gs
lcall
test
shl
adc
mov
push
sbb
sbb
orl
add
or
sbb
and
repz
es
cmp
pop
or
in
mov
pop
dec
adc
cli
mov
pop
ficomps
or
push
and
push
jg
xor
sbb
and
stc
xor
sbb
sbb
es
shlb
or
imul
test
push
mov
adc
and
sbb
int3
in
sbb
test
ret
push
adc
or
daa
arpl
popf
or
sbb
sbb
call
sbb
xchg
roll
push
roll
mov
dec
and
loop
inc
push
lods
or
pusha
shll
sbb
sbb
add
xor
push
xor
cltd
add
push
sub
adc
add
mov
dec
xchg
push
das
ljmp
or
sbb
add
js
sub
das
popa
mov
sbb
lahf
jnp
mov
clc
adc
loopne
lods
adc
lds
icebp
dec
arpl
adc
cmp
pop
fidivl
and
mov
sub
or
dec
pop
cmp
cmp
dec
orl
cmp
mov
adc
lahf
sub
rcr
adc
test
dec
and
mov
push
and
jmp
pushf
push
or
and
stc
push
add
fstl
sbb
sbb
aad
adc
orl
aad
mov
shrb
dec
mov
push
std
cmp
lret
inc
sbb
sbb
or
hlt
out
dec
add
xor
loope
add
sbb
adcb
adc
jl
sbb
pop
sbb
mov
or
sbb
lds
or
push
fstps
sub
sbb
and
or
inc
je
jo
imul
rcrb
lahf
cld
pop
or
inc
je
and
es
je
or
and
mov
loopne
adc
push
subb
ja
and
jbe
leave
push
cmp
lods
je
mov
ja
mov
inc
faddl
xor
pop
std
cmovbe
aaa
wbinvd
sbb
dec
inc
or
sbb
cmp
pushl
ss
adc
iret
add
pop
dec
sahf
or
push
sbbb
cmpsl
negl
inc
or
xchg
call
dec
xchg
int
arpl
sub
and
push
aas
clc
aas
adc
lock
xchg
cmp
adc
sbb
mov
push
xchg
pop
cmp
or
cmp
insl
cmp
add
and
das
inc
aam
aas
mov
push
add
or
or
or
out
pop
loope
test
pop
and
jg
dec
or
sub
mov
dec
jb
or
adc
fstpt
ss
mov
jg
xchg
cmp
sub
mov
cmp
daa
cltd
add
or
jge
cld
cmp
or
push
adc
adcl
or
jg
mov
add
add
adc
push
sar
lcall
inc
and
lock
or
or
or
cmp
push
inc
mov
or
xor
cld
jg
adc
push
add
and
sub
sahf
add
std
jg
jo
xor
cmp
je
lock
add
add
sub
add
pushf
mov
dec
lock
mov
push
add
xlat
lock
pop
or
btc
lock
and
lods
js
shrl
and
add
push
daa
xchg
mov
mov
add
pop
fs
aas
and
lock
jo
sub
and
test
lock
pop
mov
pop
inc
aas
push
mov
lock
add
call
pop
inc
or
test
inc
std
lcall
movsl
inc
sbb
cs
in
mov
sbb
or
or
and
sahf
and
in
add
push
subl
pop
and
ljmp
insb
inc
sub
pop
inc
mov
sbb
outsl
dec
xchg
push
cmp
stos
mov
pop
aas
mov
dec
and
das
push
add
sub
jg
std
pop
out
mov
and
sub
sbb
int3
add
push
sbb
mov
push
pop
and
inc
arpl
pop
cmc
jmp
jg
push
lds
lock
add
lock
or
in
sbb
daa
je
cld
push
and
sub
jns
add
adc
insb
pop
cltd
sbb
sbb
adcb
and
sbb
psrad
xchg
push
add
cmc
add
push
push
or
mov
lock
pop
test
mov
pop
xchg
pop
cmp
shlb
pop
jle
mov
add
lock
add
mov
xor
push
cmp
daa
jae
push
xchg
test
fistl
call
adc
add
sbb
cld
incl
inc
or
sbb
cmp
xor
insb
aas
sbb
mov
and
test
push
sub
adc
jmp
pop
adc
inc
lock
push
jnp
pop
cmp
xchg
out
jecxz
sub
inc
adc
orl
mov
sar
add
adc
sbb
adc
xor
jg
xchg
ret
ljmp
sub
xor
dec
adc
sbb
pop
adc
pop
xor
cld
jnp
add
jp
pop
repz
sbb
inc
nop
push
jmp
leave
lock
add
int3
or
add
or
xor
jg
roll
and
or
imul
add
cmpsl
lahf
gs
out
adc
or
pop
adc
cmp
jp
add
mov
mov
adc
aas
pop
push
add
dec
mov
cli
das
decb
movsl
jle
aaa
sbb
sub
clc
shr
sub
movsl
push
addr16
mov
and
aam
add
or
invd
push
mov
add
mov
mov
dec
inc
sbb
pop
mov
xchg
adcb
data16
adc
pushf
dec
mov
pop
sbb
mov
and
popa
pop
orb
sbb
pop
add
xor
and
decl
jmp
cs
aaa
sub
daa
cmp
pushf
and
push
das
adc
mov
pop
loopne
lcall
jg
adc
and
sbb
aad
xor
into
sar
cmp
sub
sub
sbb
mov
adc
adc
and
sbb
or
filds
loopne
arpl
or
push
and
pop
mov
xor
test
lret
std
cmp
or
cwtl
ljmp
lods
das
xlat
sbb
cli
add
pop
adc
add
insl
adc
sbb
cmp
add
or
adc
pop
push
adc
lods
pinsrw
sbbl
ds
and
in
sub
sbb
jae
sbb
mov
icebp
xchg
orl
sbb
in
dec
and
pop
sub
fimull
sbb
add
and
loop
and
mov
cmp
lahf
pop
pop
cld
sti
pop
addl
xor
lock
push
fimull
sub
mov
das
and
mov
and
sbb
ss
xor
gs
insl
insb
cmp
push
incb
pop
mov
sbb
adc
inc
push
cld
call
shll
test
imul
sub
dec
lret
inc
push
push
cmc
decl
or
xor
fs
es
mov
faddl
daa
push
ds
xchg
and
sbb
cmpb
mov
sub
ds
aaa
jno
arpl
sub
push
pop
sbb
and
imul
xchg
jg
add
xchg
pop
sub
push
gs
mov
clc
pop
pop
and
mov
dec
cmp
out
or
aaa
jl
xor
sub
pop
pop
sbb
push
pop
pop
pop
out
jno
mov
aas
push
aad
fdivs
pop
and
push
sti
sbb
sbb
adc
xor
mov
adc
loope
aam
lret
pop
jle
and
mov
call
or
xchg
and
sbb
sti
negl
out
sbb
lock
orb
ds
adc
insb
lcall
rcrb
xor
adc
lock
lock
lods
and
dec
cwtl
lcall
push
loope
push
daa
out
or
mov
pop
lock
add
sbb
incb
in
pop
sbb
jl
pop
sbbl
inc
xchg
lock
adc
push
ret
in
sub
lds
and
mov
imul
add
jge
mov
stos
das
outsb
loop
cmp
fbstp
mov
or
mov
insl
xchg
cmp
addl
lock
mov
add
scas
fiadds
push
sub
add
sub
cld
cli
mov
inc
jb
adc
sub
xor
jmp
cld
jg
inc
aad
cmp
lret
and
mov
lock
aas
mov
sbb
test
adc
sub
sub
sub
adc
sbb
mov
in
dec
push
or
push
sbb
or
aas
loope
aaa
mov
loop
movsb
adc
add
fsubrs
notl
ljmp
sub
pop
sbb
mov
push
aad
xor
xchg
nop
push
nop
mov
jnp
xor
test
dec
sub
stc
test
sti
fisubrl
shrl
iret
sub
mov
mov
or
repz
mov
mov
add
fnstcw
inc
aad
xchg
ja
or
insl
xor
dec
cmpsl
dec
enter
lcall
pop
xor
sbb
inc
pop
fldt
fists
in
xchg
push
add
push
sahf
xor
ret
shl
cmp
inc
outsl
adc
pop
inc
hlt
in
or
ss
imul
sbb
or
mov
pop
or
add
test
jecxz
scas
movsl
aas
push
push
inc
push
adc
jmp
adc
mov
rclb
repz
push
jmp
inc
push
sbb
mov
sub
push
popa
inc
pusha
mov
push
or
sbb
outsb
xchg
pop
jnp
and
cli
lods
sub
lds
mov
pop
and
sbb
or
and
cli
push
xchg
js
cmp
lcall
cmp
imul
mov
inc
fstps
inc
mov
add
pop
hlt
pop
idivl
pop
sub
xor
sub
add
int
lock
xchg
std
sub
pop
pop
arpl
popf
sbb
jns
or
add
or
pop
mov
sub
nop
test
cmpsl
aas
pop
lock
or
andl
push
push
or
daa
sub
cmp
and
fldl
adc
js
add
cmp
lods
aas
pop
adc
jge
insb
sbb
lock
test
pop
es
mov
adc
pop
xor
add
ds
jge
jns
add
or
sbb
pop
pop
add
dec
sbb
xchg
icebp
sarb
mov
scas
add
fcmovb
sub
add
push
add
jae
imul
add
add
insl
fwait
mov
push
and
inc
or
or
add
adc
test
imul
nop
add
imul
cmp
test
test
mov
pushf
sbb
add
or
adcb
add
push
adc
sub
lods
rcrb
sbbl
push
lds
jnp
sub
or
or
test
sbbb
dec
cmpsb
sbb
add
scas
or
sbb
add
mov
or
or
sahf
fisttps
add
or
push
add
push
or
jb
sbb
mov
or
push
clc
pop
or
or
out
out
mov
or
or
add
loope
es
pop
sbb
cmp
add
in
sbb
pop
add
jo
out
or
pop
or
adc
jno
ljmp
push
adc
xor
mov
test
adc
or
imul
roll
pop
into
mov
adc
fsubr
or
test
jg
sbb
mov
or
pop
dec
out
xorb
push
add
aaa
adc
mov
push
add
mov
ret
push
or
sub
add
in
add
or
push
mov
ret
add
add
inc
add
cld
lret
sbb
sbb
pop
inc
fiadds
and
push
insb
xor
jbe
or
test
sub
and
mov
jne
adc
pop
mov
adc
rorb
cmp
mov
lock
cltd
bound
jo
sub
pusha
mov
add
stc
push
repnz
or
add
mov
dec
fisttpll
loopne
and
cmpsb
jge
xchg
jmp
cmpsl
and
ret
popa
mov
repnz
add
psrad
in
mov
mov
inc
js
rorb
push
cmp
or
jo
inc
push
add
xchg
decl
add
lock
fimuls
leave
xor
ss
dec
cmp
inc
pop
popa
or
sbb
xchg
mov
xchg
inc
inc
fdivrs
sbb
nop
and
push
daa
xor
cld
pop
mov
iret
cmp
mov
sbb
adc
inc
mov
push
xchg
incl
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
