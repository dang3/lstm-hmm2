gs
dec
fidivrl
cmp
add
dec
sbb
add
or
push
out
add
mov
add
xor
cmp
mov
cmp
hlt
add
stc
or
cs
sbb
sahf
xchg
adc
sub
cmp
negl
cmp
pop
or
into
cmp
cmp
rcll
out
cmp
dec
add
out
mov
pop
cmp
add
cmp
and
cmp
xchg
das
cmp
push
adc
push
mov
cmp
sub
xor
out
ss
ja
cmp
add
jbe
and
cmp
rclb
cmp
subl
cmp
xor
out
cmp
cmp
push
push
cmp
pop
cmp
arpl
into
xor
mov
sub
outsb
cmp
cmp
cmp
sbbb
push
daa
add
sbb
cmp
das
cmp
mov
push
cmp
repnz
fisubrs
cmp
cmp
cmp
pop
cmp
inc
cmp
jo
inc
jmp
imul
insb
cmp
sti
xor
cmp
jecxz
cmp
frstor
cmp
xor
cmp
insb
dec
cmp
mov
cmp
jbe
sahf
js
cmp
or
scas
fistpl
out
pop
cmp
lcall
add
pop
sbb
movb
cmp
push
sbb
cmp
or
sahf
push
mov
lcall
cmp
cmp
cmp
in
cmp
push
inc
cmp
mov
xchg
cmp
sarl
out
add
cmp
cmpsb
data16
sbb
outsb
call
dec
cmp
pop
xchg
cmp
aas
push
cmp
xor
cmp
lea
into
pop
outsl
cmp
hlt
arpl
cs
stos
cmp
push
cmp
and
cmp
push
aaa
cmp
fsubrl
cmp
dec
test
xchg
out
sahf
sbbb
cs
dec
cmp
and
out
int
cmp
rcl
cs
xchg
push
cmp
cmpsb
cld
cmp
hlt
sarl
inc
out
cmp
out
cmp
mov
into
cmp
mov
or
cs
cmp
rcrl
push
or
cmp
sub
cmp
into
or
jb
sti
cmp
push
cmp
ficoms
cmp
pop
sbb
scas
fwait
adc
lret
cmp
inc
sahf
cmp
aam
cmp
cmpl
jae
cmp
inc
pop
cmp
dec
cmp
in
cmp
mov
cmp
mov
cmp
call
hlt
cmp
add
cmp
orb
ret
cmp
jo
cmp
and
dec
jbe
cmp
inc
dec
cmp
fs
cmp
xchg
cmp
in
cmp
nop
cmp
push
sub
mov
sub
pop
test
cmp
aaa
mov
cs
fnstsw
inc
inc
lahf
cmp
push
cmp
test
test
cmp
scas
sarl
data16
outsb
push
clc
cmp
push
test
ss
cmp
push
cmp
data16
cmp
in
imul
movsb
pop
cmp
je
sub
cmp
bound
cmp
sahf
mov
ds
in
cmp
xor
cmp
xor
cmp
cwtl
xchg
cmp
add
loop
dec
imul
cmp
sbbl
shrb
sahf
push
imul
dec
sub
stos
dec
lods
cmp
or
cmp
fdivl
cmp
fcmovu
cmp
cmp
pushf
push
cmp
test
inc
xchg
cmp
mov
push
push
xchg
dec
dec
and
es
dec
cmp
pop
add
decb
cmp
iret
lock
adc
cmp
and
cmp
sbb
cmp
sub
out
add
lcall
cmp
out
cmp
and
push
loop
outsb
lahf
sbb
outsb
stc
and
scas
pop
loop
lcall
cmp
push
cmp
pusha
sahf
cmp
push
cmp
pop
cmp
sbb
and
xor
cmp
xchg
in
cmp
shlb
mov
enter
in
cmp
inc
cmp
jp
lcall
cmp
pop
mov
cmp
pop
sub
or
push
out
cmp
aam
cmp
ds
into
fwait
sbb
dec
dec
cmpsl
cmp
cmp
into
mov
cmp
push
sub
or
aam
scas
dec
add
add
cmp
jb
cmp
pop
into
lret
cs
icebp
cmp
sti
add
cmp
dec
xor
push
xchg
daa
cmp
xorb
push
and
cmp
notb
into
lods
fnstcw
stos
add
cmp
loop
ds
jne
mov
loopne
pop
into
sub
cmp
or
cmp
lcall
cmpsb
outsb
adc
cmp
sub
mov
icebp
adc
cmp
push
cmp
pushf
les
push
pop
cmp
ljmp
data16
cmp
mov
cmp
fstpl
cmp
mov
lret
cmp
mov
cmp
cmp
cli
xor
cmp
dec
cmp
sub
cmp
mov
cmp
pop
mov
cmp
adc
cmp
xor
cmp
jb
movsb
mov
sbb
cmp
push
sub
adc
movb
cmp
adc
cmp
enter
add
cmp
dec
cmp
cltd
popa
cmp
jae
cmp
pop
and
sahf
leave
fdivrl
andb
cs
fidivrs
scas
in
xlat
cmp
lods
sarb
push
cmpl
cmp
xor
stc
jmp
jb
in
cmp
ret
pop
test
mov
test
mov
cmp
inc
dec
cmp
iretw
cmp
je
cmp
shr
cmp
xor
cmp
call
sbb
outsb
dec
je
bound
xor
cmp
pop
sub
or
cmp
and
adc
cmp
mov
cmp
pop
jp
scas
shll
fisubs
cmp
add
cmp
jbe
cmp
orb
cs
cmp
pop
and
push
sbb
cmp
nop
cmp
jmp
jo
scas
out
cmp
test
cmp
push
xchg
push
add
pop
cmp
outsl
xor
stos
orb
mov
lock
cmp
lea
cmp
jmp
cmp
into
mov
cmp
test
cmp
jp
cmp
out
push
mov
mov
jae
cmp
shl
inc
cmp
xlat
popf
cmp
xchg
cmp
inc
xlat
dec
cmp
dec
inc
cmp
pushf
stc
cmp
fnstsw
push
jae
cmp
pop
cmp
push
sbbl
adc
movsl
cmp
jmp
push
cmp
clc
inc
cmp
fidivs
cmp
adc
cmp
cmp
xchg
jnp
jmp
cwtl
cmp
into
mov
xchg
cmp
push
adc
outsb
cmp
cmp
mov
inc
cmp
adc
scas
mov
imul
out
mov
mov
cmp
jo
cmp
dec
xor
cmp
icebp
adc
cmp
push
cmpb
fidivrl
cmp
dec
cmp
sub
xor
cmp
ret
sahf
sti
sub
ljmp
cmp
adc
cmp
ss
cmp
xchg
mov
daa
cmp
outsb
pushf
and
push
mov
push
cmp
pop
pushf
cmp
or
push
std
pusha
cmp
xchg
cmp
bound
mov
push
lds
cmp
or
cmp
cli
push
cmp
sub
cmp
mov
cmp
jo
cmp
mov
addr16
cmp
mov
cmp
cmp
cmp
push
sarb
add
mov
lcall
cmp
jbe
cmp
mov
loop
xor
in
cmp
cmp
sub
mov
cmp
sbb
jbe
mov
sbb
ds
popf
jl
into
addr16
ds
jns
cmp
cwtl
pop
cmp
outsl
dec
cmp
cmp
adc
scas
cmp
pop
rcll
mov
test
push
cmp
cmp
shlb
shrb
cmp
push
pop
push
ds
or
xchg
cmp
cmp
cmp
add
cmp
shr
cmp
stos
dec
add
push
pop
insb
cmp
add
ds
aaa
aas
cmp
push
or
and
clc
cmp
mov
pop
testl
cmp
jmp
sarl
jb
cmpsb
dec
movsl
cmp
pop
sub
cmp
sbb
cmp
mov
cmp
out
fdivrl
scas
push
jb
fidivs
cmpsb
pop
mov
cmp
push
pop
outsb
cmp
iret
push
das
cmp
and
xchg
ds
cmp
and
cmp
mov
cmp
add
pop
add
ds
cmp
out
cmp
mov
ds
adc
dec
sbb
cmp
fdivrs
cmp
pop
cmp
out
cmpsl
cmp
into
idivl
push
dec
gs
dec
in
pop
cmp
outsl
pop
cmp
sahf
mov
cmp
test
jb
and
xchg
mov
mov
loope
cmp
adc
data16
dec
xchg
repz
pop
cmpsb
cmp
or
lods
cmp
sbb
pop
test
ds
cmp
mov
hlt
orb
push
cmpsl
dec
cmp
cmp
ss
mov
insl
adc
inc
aas
addl
mov
cmp
adc
sbb
cmp
sbb
pop
cmp
dec
adc
cmp
pop
cmp
scas
mov
dec
cmp
jno
cmp
xor
cmp
lods
movsl
cmp
xchg
fistpll
mov
mov
negb
aas
out
daa
cli
or
push
mov
pop
cmp
jb,pn
cmp
push
xor
sbb
outsb
in
dec
cmp
mov
xor
ficoml
cmp
jbe
mov
cmp
into
jnp
cmp
lods
aam
outsb
mov
scas
sbb
and
adc
sahf
ds
cmp
sub
cmpsb
int
cmp
lea
scas
rcl
outsb
and
adc
ds
ljmp
mov
scas
aas
jb,pn
cmp
cmc
ds
inc
enter
test
pop
mov
stc
cmp
loope
ds
nop
jb
adcb
ds
cmpsb
cmp
loop
cmp
jae
ds
push
cmp
aam
scas
test
ds
pop
insl
cmp
mov
cmp
jecxz
jle
mov
into
notl
iretw
lea
shlb
into
inc
movsl
aas
push
jne
ds
lea
sahf
and
mov
lcall
ss
cmp
xchg
insb
ds
cmp
lea
fdivrp
pop
cmp
scas
sarb
jb
out
push
sbb
ds
mov
out
xchg
mov
cmp
rcrl
inc
push
and
mov
out
jno
cmpsb
inc
std
ds
hlt
push
cmp
inc
in
cmp
xor
cmp
push
mov
cmp
jbe
jns
scas
jle
cmp
dec
cmp
xor
bound
dec
cmp
lds
cmp
mul
xchg
aas
pop
pop
cmp
ljmp
data16
cmp
lock
cmp
mov
fstpt
pop
cmp
lds
cmp
loope
aas
and
ds
imul
out
aam
mov
adc
jg,pn
cmp
xchg
pop
cmp
es
cmp
pop
ds
pop
cmp
or
sub
shll
je
faddp
mov
cmp
mov
jle
jb
push
aas
fisubrs
imul
ret
cmp
arpl
aas
adc
dec
mov
pop
cmp
rcr
cmp
and
cmp
es
push
cmp
adcl
adc
in
stos
lea
cmp
aas
sarb
out
dec
cmp
push
inc
cmp
or
gs
into
aad
bound
inc
cmp
mov
jnp
mov
jle
jb
add
xchg
sbb
xchg
int
cmp
daa
ss
outsb
mov
inc
notb
and
data16
mov
outsb
mov
cmp
lods
sbb
push
xchg
sbb
adc
push
inc
dec
cmp
push
push
mov
cmp
scas
out
cmp
jbe
decb
call
cmp
pop
outsb
cmp
outsb
or
inc
jbe
test
ficoml
ds
into
icebp
inc
jb
ret
ds
mov
add
cs
cmp
cmp
mov
aas
ds
inc
sbbb
inc
push
scas
dec
cmp
lds
pop
lret
test
mov
cmp
loopne
cmp
insb
mov
cmpsl
cltd
aas
push
and
cmp
fbld
aas
inc
test
cmp
mov
loopne
mov
jbe
cmp
call
mov
inc
xchg
sbb
cmp
push
das
cmp
mov
mov
bound
sarl
scas
enter
flds
out
mov
jl
cmp
mov
fstpt
pop
pushf
jl
xor
cmp
xchg
cmp
adc
cmp
loope
cmp
jo
cmp
outsb
xor
xchg
mov
lcall
jl
cmp
cmp
and
inc
scas
or
mov
xchg
jne
dec
sahf
mov
or
cmp
faddl
dec
fdivl
sub
cmp
gs
cmp
jecxz
inc
cs
cmp
cmp
sbb
aas
out
lcall
mov
cmp
cmp
xchg
outsl
cmp
pop
ljmp
rol
inc
fdivp
xor
sbb
cmp
arpl
cmp
mov
jge
cmpsb
enter
into
int
cs
mov
jbe
push
inc
cmp
movsl
cs
scas
leave
jp
ds
inc
ds
jbe
cmp
inc
pop
aas
into
sub
pop
inc
ds
add
mov
test
cmp
and
cmp
mov
jb
inc
lock
adc
into
loop
inc
mov
pop
inc
into
xor
ds
push
inc
into
mov
and
aas
scas
mov
aas
jbe
mov
fisubrs
cmp
and
jmp
inc
dec
sbb
out
cs
ds
gs
stc
xchg
sub
aas
push
ss
adc
cmp
dec
jecxz
push
scas
xlat
ds
dec
mov
push
test
xor
cmp
ds
cmp
ds
fdivrs
testb
cmp
incl
out
push
cmp
lods
test
into
notb
push
pop
cld
cmp
push
popf
aas
jle
cmp
inc
ljmp
cmp
pop
mov
scas
aad
inc
push
je
inc
cs
xchg
lods
cmp
rcll
mov
inc
ds
ds
xorl
ss
jae
pop
mov
inc
outsb
lret
xchg
cmp
mov
cltd
cmp
enter
test
out
movb
scas
aas
bound
cmp
repnz
into
sub
inc
pop
xchg
inc
cmp
push
mov
cmp
and
scas
jnp
mov
cmp
add
cmp
int
cmp
sub
inc
xor
or
cs
aas
bound
xchg
push
cmp
cmpl
push
or
movsl
aas
sarb
inc
cs
cmp
lock
add
mov
push
push
cmp
dec
push
aas
outsb
fcmove
cmp
pop
inc
cmp
push
addl
add
inc
add
cltd
inc
cs
dec
cmp
and
out
pop
popf
cmp
lds
inc
push
scas
or
cmp
and
fsubp
sbb
cmp
cmp
test
cmp
sahf
andl
test
inc
mov
js
cmp
aaa
popf
cmp
jbe
mov
inc
mov
fadds
cmp
mov
cmp
pop
cmp
aam
out
xor
insb
cmovo
dec
aas
sahf
leave
sti
cmp
lock
cs
aas
stos
fidivrl
into
or
cmp
test
inc
scas
jbe
aas
push
xor
xchg
inc
fisubrl
aas
dec
or
cmp
repz
cs
roll
jg
mov
pop
inc
push
cmp
inc
xchg
mov
ds
cmp
dec
and
into
int3
adc
mov
inc
fisubrs
iret
cmp
push
out
cs
lds
jecxz
mov
mov
out
and
mov
aas
sbb
cmp
xchg
cmovno
addr16
fiadds
cmp
cltd
mov
cmp
into
movsb
loop
fisubl
or
outsb
xlat
loopne
outsb
into
push
cmp
int
cmp
cmpsb
in
cmp
ret
sbb
mov
jle
ds
adc
ss
js
outsb
mov
clc
inc
scas
add
cmp
shrl
scas
and
inc
sub
inc
push
mov
cmp
xchg
dec
cmp
test
movl
xor
movsl
add
aad
cmp
jns
cmp
or
ds
dec
inc
into
inc
cwtl
aas
sbb
or
push
inc
dec
cmp
cmp
inc
or
inc
pop
add
or
loop
inc
cs
cmp
add
cmp
repnz
jle
pop
aas
into
push
imul
inc
cmp
bound
into
lds
inc
fimuls
bound
bound
inc
push
sub
cmp
out
mov
inc
mov
cmp
mov
inc
dec
xchg
add
inc
scas
lea
jle
aad
lcallw
pop
cmp
cmp
jecxz
inc
testb
ds
add
add
aas
push
inc
cmp
ds
lcall
loope
inc
pop
lea
jbe
cmp
mov
ss
outsb
aas
jns
mov
push
les
dec
sti
icebp
ds
fiadds
mov
inc
push
lods
mov
sahf
repnz
inc
scas
adc
mov
xchg
xchg
jbe
out
xchg
popa
aas
pop
imul
push
aad
outsb
insb
inc
outsb
dec
pop
inc
cli
gs
mov
in
inc
push
imul
sub
mov
rep
ds
inc
push
inc
adc
aas
decb
addr16
xor
mov
mov
add
push
cmp
pusha
nop
aas
into
jno
inc
fidivs
inc
jbe
push
inc
dec
jnp
cmp
xlat
xchg
inc
out
shll
cmp
jp
mov
sub
push
push
inc
scas
jp
cmp
pop
inc
fimuls
adc
xchg
cmp
mov
inc
cmp
std
inc
cmp
pop
jnp
cs
sbb
imul
cmovno
in
mov
mov
mov
inc
pop
fmuls
inc
outsb
push
sarl
push
sub
into
xor
inc
push
and
aas
mov
mov
fnstsw
or
sahf
push
in
inc
es
roll
add
aas
scas
aam
inc
sbb
inc
xchg
idivb
mov
dec
sarb
and
ds
fidivrs
mov
in
ds
xchg
cmp
pop
inc
cmp
adc
es
cmpl
out
xor
dec
cmp
ljmp
inc
jnp
inc
sahf
add
cmp
xchg
inc
aas
stos
push
dec
cmp
clc
inc
ficoms
ja
dec
call
sub
dec
and
inc
mov
pop
inc
dec
push
mov
lods
jae
lret
inc
ss
cmp
mov
cmp
cs
pushf
cmp
pusha
push
inc
cs
popa
inc
inc
fcmovnu
inc
push
or
addb
inc
push
outsl
push
ds
inc
ds
scas
pop
jnp
lret
cmp
mov
mov
inc
and
mov
cmp
mov
ds
jmp
cmp
mov
cmp
push
jl
mov
arpl
cmp
sbbl
cmp
shr
adc
cmp
rcr
cmp
lods
push
cmp
lods
push
scas
xchg
add
ss
inc
scas
repz
aas
ds
xlat
inc
cli
fmulp
inc
cs
cmpsl
inc
xchg
push
out
ds
pop
jae
push
pop
cmpb
out
int3
aas
mov
jge
ds
cmp
outsb
pop
mov
adc
cmp
outsb
pop
aad
cs
cmp
outsb
movb
adc
mov
inc
sub
das
cmp
cmc
in
sahf
shll
aas
pop
aas
inc
sub
add
cmp
insb
cmp
repnz
aas
loop
sbb
push
fs
xchg
out
adc
js
inc
cmp
inc
cs
filds
mov
ss
or
loopne
jbe,pn
cmp
xchg
insl
cmp
test
inc
inc
inc
sbb
outsb
js
inc
inc
stos
sub
mov
enter
inc
ds
aas
ds
push
inc
cs
call
cmp
pop
mov
inc
outsb
cmp
inc
lcall
inc
stos
lret
outsb
inc
cs
cmpsb
cmp
pop
jmp
lock
inc
out
jp
faddp
faddl
test
adc
push
aas
into
ficoms
cmpsb
push
les
fildl
sub
inc
into
cmpsb
or
mov
out
daa
cmp
into
punpckhwd
inc
cmp
js
aas
cs
push
cmp
outsb
mov
lret
aas
pop
cmp
aas
dec
ret
mov
aas
dec
addr16
jnp,pn
data16
aas
fimuls
cmp
scas
and
out
push
je
lret
cmp
push
ret
dec
sub
scas
clc
aas
repnz
push
push
mov
cmpl
inc
pop
nop
inc
scas
rep
inc
add
inc
outsb
xchg
cmp
rorb
inc
or
inc
scas
mov
cmp
mov
loop
mov
xor
dec
sub
outsb
inc
lods
inc
jle
hlt
inc
jo,pn
inc
sbb
inc
cs
cmp
dec
cmp
cmpsb
jmp
inc
out
loope
cmp
loopne
xchg
push
inc
imul
test
add
cmp
lret
inc
pop
jb
cmp
pop
or
adc
cs
cmp
mov
xchg
lods
inc
scas
call
ja
jbe
movb
adc
push
cmp
sub
push
mov
bound
cmp
dec
mov
es
inc
cs
lret
inc
push
add
aas
jle
fiaddl
clc
inc
xchg
and
aas
cs
cmp
mov
or
xorl
xchg
push
push
inc
mov
jp
xchg
sub
jle
push
inc
inc
cltd
es
es
inc
out
jo
cs
xor
jne
cmp
xchg
pop
inc
push
pop
mov
inc
dec
dec
dec
cmp
scas
cs
inc
into
loope
inc
fnstcw
ljmp
xchg
dec
cmp
pop
dec
inc
add
aas
dec
out
cmp
push
mov
out
scas
cli
cmp
ja
into
jge
inc
rclb
inc
inc
jp
xor
mov
clc
cmp
out
inc
push
jno
jbe,pt
pop
cmp
icebp
imul
pop
stos
filds
fldl
icebp
mov
scas
mov
stc
aas
or
aas
loop
popl
enter
iret
mov
inc
lcall
inc
into
es
inc
sarl
adc
cmp
sub
cmp
ja
inc
xchg
mov
cmp
or
das
mov
pop
adc
pushf
xor
loopne
inc
scas
fs
ljmp
ds
sbb
pop
sub
xchg
stc
cmp
lcall
inc
and
cmp
inc
sbb
fisttpll
outsb
lock
cmp
aas
into
or
ds
xchg
inc
cmpsb
flds
dec
mov
inc
dec
inc
mov
adc
aas
fcmovu
cmp
cmpsb
cwtl
lcall
dec
xchg
aas
jmp
inc
push
arpl
sbb
inc
mov
fwait
inc
inc
push
push
inc
sbb
das
inc
inc
jno
inc
jg
inc
ficoml
out
inc
xchg
or
inc
mov
int
orw
sbb
push
aas
pop
mov
aas
subb
cs
mov
push
nop
push
inc
cmpsb
call
adc
rclb
xor
mov
inc
data16
sarb
cmp
cmp
jb
fldl
lods
scas
cmp
mov
inc
mov
cmp
mov
cmp
jl
push
mov
inc
incb
sub
xchg
aaa
inc
shlb
inc
inc
scas
xchg
inc
adc
aas
outsb
xchg
push
inc
es
inc
inc
or
ds
lds
cmp
out
mov
imul
push
outsl
jle,pt
add
into
sub
cs
push
cmp
mov
push
ficoml
or
aas
jle
test
les
inc
push
inc
faddl
cmpl
and
push
cmp
mov
cmp
sahf
lret
sbb
or
xor
push
inc
out
push
pop
bound
cmp
mov
cmp
adc
inc
ds
mov
cmp
adc
inc
push
mov
cmp
bound
mov
sub
inc
filds
ds
inc
bound
js
cmpsb
jle
cmp
jge
sahf
lahf
into
inc
scas
adc
inc
mov
inc
es
cs
xor
aam
fdivrp
jl
push
subps
mov
outsb
push
xchg
inc
fimull
inc
mov
addr16
inc
ss
inc
push
scas
repz
daa
inc
out
std
pop
inc
push
les
adc
inc
push
jbe
inc
jle
fnstsw
jle
lds
xchg
in
add
push
ds
xchg
inc
data16
inc
out
popa
cmp
mov
int3
inc
es
scas
inc
or
outsb
movsl
cwtl
ds
fiaddl
sbb
inc
into
das
pop
cmp
pop
xchg
roll
daa
aaa
cmp
dec
cmp
mov
inc
inc
push
cmp
xor
cmp
jp
cmp
mov
cmp
jnp
cmp
dec
call
inc
inc
adc
inc
data16
inc
scas
loop
inc
mov
roll
fwait
inc
ljmp
aas
and
pop
cmp
jmp
cmp
cs
out
add
inc
pop
loopne
inc
cs
std
cmp
gs
inc
fldcw
movb
cmp
out
outsl
cmp
jmp
cmp
into
mov
out
cs
inc
lret
inc
cs
inc
outsb
mov
cmp
pop
mov
push
stos
dec
inc
outsb
pop
cmc
inc
cs
and
repnz
data16
cmp
pop
jle
scas
std
ljmp
bound
inc
into
lods
pop
cmp
lods
loop
imul
in
dec
dec
push
xchg
in
cmpsb
repz
cmp
sub
dec
lret
cmp
xor
or
out
push
sarl
popf
cmp
mov
or
inc
lret
inc
fimuls
inc
dec
rorb
mov
add
ds
jmp
dec
cs
int
mov
inc
xor
inc
adc
aas
cli
test
inc
cmc
dec
inc
push
jmp
mov
shl
inc
jbe
int3
cmp
push
xchg
sbb
jns
inc
jle
imul
scas
cmpsb
xor
xchg
aaa
inc
xchg
xchg
push
inc
dec
sahf
xchg
ds
ficomps
inc
dec
add
mov
pop
adc
dec
scas
inc
ret
cmp
cmpb
jbe
or
icebp
dec
cmp
imul
push
jmp
mov
cltd
xchg
dec
push
jl
cmp
mov
pop
or
sbb
cmp
mov
gs
xor
cmp
cmp
cs
mov
into
mov
cmp
dec
cmovbe
sbb
cmp
mov
inc
cs
into
cmp
cmpsl
xchg
cmp
jl
inc
scas
cs
aas
data16
out
inc
into
jl
inc
lret
inc
mov
scas
inc
sahf
mov
cmp
push
mov
repnz
sbb
and
mov
push
cmovb
dec
push
jo
inc
xchg
out
gs
scas
fcmovnbe
inc
cli
pop
ds
cmp
jb
jl
mov
scas
inc
adc
inc
dec
xor
cmp
mulb
dec
dec
and
inc
shr
cmp
data16
dec
shl
mov
cs
inc
mov
xchg
inc
out
ret
cmp
push
in
jle
je
dec
inc
es
sahf
outsl
and
jb
sub
xlat
push
aas
sahf
jle
cmp
stos
adc
inc
out
jge
inc
int3
fidivrl
inc
inc
ljmp
cmp
repnz
cmp
sbb
repnz
cmp
or
xchg
pop
inc
jbe
mov
inc
dec
add
inc
les
cmp
cmp
into
push
pop
cmp
out
sahf
inc
cmpsb
enter
xchg
xchg
cmp
push
sbb
mov
divb
xor
dec
sub
lock
adc
cmp
push
sbb
inc
mov
push
add
shll
xor
jae
dec
je
aas
cmpsb
std
sbb
cs
test
mov
test
inc
cmp
cmp
mov
aas
sahf
mov
add
jae
inc
fsubp
sub
add
fidivrs
push
inc
push
mov
inc
cli
in
rolb
inc
notb
stos
cmp
dec
cmp
pop
or
int
jle
icebp
or
popa
cmp
mov
ret
mov
push
or
dec
jp
addr16
scas
lods
mov
inc
push
scas
mov
scas
test
pop
inc
repnz
or
inc
cli
and
cmp
push
xor
ds
sbb
dec
into
out
inc
es
sub
outsl
or
cs
xchg
inc
or
dec
outsb
xchg
xor
pop
mov
cmp
jle
pop
inc
or
cs
fidivrs
push
dec
aas
ficomps
ret
sbb
cmp
popa
addr16
divb
mov
inc
push
push
fnstcw
jb
cmp
into
mov
inc
sbb
push
cmp
jbe
aam
jb
lret
inc
mov
jle
fildl
add
ds
push
and
cmp
push
fs
inc
fisubs
cmp
stos
ds
inc
add
inc
cs
cmp
add
aas
push
out
inc
sahf
or
inc
mov
xor
dec
xchg
jno
inc
ds
loope
cs
orb
dec
cmp
pop
mov
add
mov
inc
and
dec
dec
xchg
test
jle
rclb
lret
inc
sahf
mov
cmp
ds
cli
dec
out
in
sarb
push
sub
cmp
pop
rorl
inc
mov
inc
jecxz,pn
ds
inc
push
imul
inc
cs
cmp
pop
jmp
jp
push
inc
dec
push
inc
cmp
push
addr16
dec
inc
bound
inc
stos
xchg
addl
loop
aas
test
ds
adc
outsb
lds
inc
xor
dec
mov
loope
inc
mov
ss
clc
cmp
cmp
ss
into
inc
mov
andb
add
inc
bound
dec
in
inc
xor
dec
ret
ds
insb
push
sahf
out
cmp
push
jb
push
adc
dec
es
inc
out
insl
push
cmp
add
push
push
dec
inc
out
pop
bound
jbe
cmp
jnp
inc
outsb
stc
sarl
repnz
push
cmp
arpl
inc
outsb
jl
inc
push
sbb
inc
outsb
jne
inc
mov
inc
into
sub
dec
fidivl
mov
loope
ds
adc
cmp
xchg
test
ss
fisttpl
scas
pop
aas
scas
add
cmp
push
cs
cli
frstor
outsb
xchg
mov
dec
out
cltd
dec
and
arpl
xchg
js
mov
push
aas
and
aas
fidivrs
sub
dec
scas
or
cmp
xchg
adc
inc
stos
arpl
mov
dec
addb
test
inc
out
cltd
lock
rorb
ljmp
scas
int3
std
cmp
popf
lods
inc
sahf
adc
inc
push
in
cmp
cmpsb
dec
inc
mov
pop
mov
dec
push
and
jge
aas
xor
mov
or
out
dec
sarb
rolb
jle
cs
dec
ds
jns
inc
loop
adc
add
inc
sahf
inc
ret
dec
sbb
mov
mov
inc
mov
mov
inc
outsb
push
inc
inc
ficompl
xor
out
daa
lea
add
mov
add
dec
jbe
push
inc
adc
fs
scas
fmulp
cmp
roll
mov
mov
mov
jbe
cwtd
sti
inc
out
sbb
cmp
fiaddl
ds
sub
inc
xor
inc
pop
shl
inc
stos
rcr
inc
jnp
aas
stos
cmp
mov
mov
inc
scas
ljmp
push
test
mov
and
mov
dec
jae
sahf
add
inc
out
adc
inc
es
lods
inc
sub
in
inc
inc
mov
inc
mov
icebp
inc
iretw
mov
ret
cmp
dec
dec
or
lret
cmp
pop
lds
push
arpl
sub
es
inc
add
loop
mov
lods
push
cmp
movsb
or
mov
cmp
pop
jl
mov
repz
stos
sbb
fnstsw
jge,pn
push
es
cmp
in
into
sbb
dec
push
sbb
dec
sahf
sub
inc
mov
testl
inc
push
mov
dec
scas
xor
aas
push
enter
lcall
out
xlat
cmp
cs
data16
outsb
call
push
pop
sbb
xor
cli
cs
dec
cwtl
sub
ds
or
pop
cmp
mov
push
inc
mov
inc
inc
xor
loop
repnz
aas
mov
repz
outsb
ret
inc
lock
dec
out
push
add
inc
push
mov
mov
inc
adc
sub
sub
dec
fisubrl
inc
testb
hlt
ss
xchg
lcall
add
mov
hlt
xor
add
popa
jae
and
rol
mov
fstpt
and
ret
jg
pop
xchg
push
add
clc
aam
xor
xchg
clc
test
subl
add
xchg
add
inc
add
in
add
xchg
add
add
add
bound
adc
out
stos
xor
fiadds
adcb
sarl
mov
shl
inc
cmovb
movsl
lret
jle
pop
and
add
and
add
mov
add
add
or
out
rolb
adc
add
sti
or
xchg
subl
or
arpl
cmpsl
sub
add
addl
add
jno
push
push
add
mov
add
aaa
fildl
jb
lcall
add
add
dec
add
and
add
cmpl
sbb
xor
add
fbstp
in
add
nop
add
add
mov
cltd
xlat
xchg
xchg
cld
sbb
inc
push
addr16
dec
add
add
push
add
jbe
inc
mov
add
push
in
add
dec
fstpt
push
xchg
pop
fsubl
xor
jp
testb
sub
push
add
xchg
and
add
arpl
xchg
add
push
add
add
pop
add
add
add
mov
add
leave
add
out
mov
jo
jecxz
add
mov
xchg
mov
movsb
add
orl
test
cmp
sarl
lods
int3
add
inc
add
pop
add
pop
dec
add
imull
add
and
mov
cmp
data16
add
mov
aas
sbbl
icebp
add
stc
outsb
add
rcrl
int3
in
and
add
add
add
cltd
jp
mov
push
jmp
pop
add
inc
add
push
add
add
add
daa
lds
cmp
xchg
test
inc
add
out
movsl
aam
out
inc
or
push
add
out
mov
add
ljmp
add
pop
cmpsb
aas
inc
cltd
cmp
mov
stos
add
inc
add
push
lock
pop
add
js
addb
add
mov
lock
data16
add
add
jg
cmpb
add
insb
add
data16
mov
add
add
mov
add
add
jmp
sbb
or
jb
fisttpl
push
outsb
add
outsb
add
add
iret
mov
add
add
mov
add
add
and
push
in
add
lahf
xlat
mov
test
xchg
add
je
loope
std
fwait
iret
fmul
xor
leave
push
add
into
cwtl
sub
out
mov
add
cmp
in
lret
clc
cld
mov
add
xor
jo
stos
sub
fidivrs
push
mov
flds
cli
add
add
test
int
pop
mov
mov
inc
and
add
test
fdivrl
add
aad
idivb
ret
js
sahf
jo
add
add
mov
leave
push
cmpsl
add
lcall
jbe
out
in
repnz
add
repz
mov
aam
test
and
add
ret
and
add
add
into
sbb
lahf
stos
mov
sbb
aad
fwait
mov
mov
pop
in
shl
add
in
cmp
pop
push
add
in
test
push
add
mov
hlt
and
das
test
in
jge
js
out
lahf
cmpb
mov
sub
daa
xchg
add
add
xor
add
xchg
add
jmp
add
mov
adc
ds
fsts
add
aam
push
xchg
bound
jg
jg
cmp
mov
pop
add
sub
stos
int
add
test
das
lret
sub
mov
push
add
and
pop
ja
and
add
outsb
add
add
data16
mov
adc
mov
je
inc
adc
add
cmp
add
push
add
daa
or
add
add
mov
pop
xor
mov
add
dec
add
add
test
xchg
rol
add
mov
mov
add
loope
imul
add
mov
add
sbb
ficompl
and
es
add
addl
push
lret
mov
scas
dec
add
add
stos
jbe
loopne
push
jg
cmpl
add
bound
out
leave
jg
test
mov
sub
jl
arpl
lock
and
out
adc
add
add
outsb
stc
icebp
repnz
cmp
in
inc
add
add
adc
mov
lea
push
push
push
push
call
shr
cmpb
jne
mov
push
push
call
add
and
xor
cmp
jb
lea
and
or
es
push
mov
test
je
shr
test
jne,pn
nop
leave
lret
or
xchg
cld
call
mov
imul
mov
mov
xor
test
add
and
sbb
add
pop
push
add
or
aam
and
xor
add
xor
add
mov
mov
lods
adc
add
xor
push
add
jne
scas
pop
cltd
add
mov
bound
cmp
bound
push
fiadds
mov
cli
out
insb
add
or
pop
add
inc
add
cmc
addb
add
int3
mov
add
ret
inc
add
push
pop
add
add
add
ja
pop
and
add
and
add
addb
add
adc
jo
lahf
cmp
shlb
and
add
inc
mov
add
pop
loopne
faddl
cmp
dec
rorb
cmpsb
adcb
mov
jbe
push
add
inc
stos
jmp
add
mov
roll
int
xorl
add
adc
add
mov
stos
cmp
push
add
add
jp
out
add
mov
cltd
rorl
cmc
add
add
add
sbb
lock
add
mov
or
daa
add
insb
add
loope
push
add
xchg
dec
insl
inc
outsl
out
pop
add
add
rcl
setae
jge
add
adc
pop
iret
sub
mov
or
push
add
fiadds
dec
dec
mov
aam
or
jno
xchg
jmp
sbb
jecxz
add
dec
add
pop
add
mov
mov
pop
add
popl
daa
dec
add
or
fcompl
loopne
vpmaxsw
dec
add
cld
inc
jl
dec
jnp
stc
add
jp
ret
les
lret
adc
cmp
out
cmp
add
cmp
sbb
rorb
add
add
into
ret
add
lea
sub
stos
mov
in
mov
stos
jecxz
add
daa
rolb
xor
add
jg
dec
add
ljmp
add
jle
popa
movsl
mov
mov
mov
mov
jle
outsb
add
sbb
mov
jo
mov
xchg
mov
push
add
pop
add
out
push
add
leave
add
add
testl
scas
xchg
gs
loope
and
inc
popa
fdivl
pop
test
jl
repnz
add
mov
lret
mov
jo
movsb
mov
xor
add
mov
insb
add
sbbb
jb
jno
xor
pushf
cmpsl
push
mov
add
add
xchg
add
add
pop
pop
sbbl
add
jecxz
mov
mov
cmpsb
or
sbb
xchg
aam
les
add
xchg
shr
out
xchg
std
xchg
mov
mov
fwait
add
loopne
xchg
add
test
test
mov
add
cmpsb
xchg
push
add
and
add
and
add
add
pop
add
xor
icebp
ret
les
mov
add
fs
pop
xchg
xchg
push
shlb
out
test
push
sub
xchg
shl
add
in
fs
lcall
push
or
das
loope
fwait
int3
xor
add
in
jae
sahf
std
movsb
pop
str
clc
push
cwtl
cltd
cmp
lahf
jae
add
mov
pop
add
stos
add
sarb
add
fistps
mov
ja
add
das
repz
fucom
scas
mov
mov
sub
inc
add
loopne
jnp
shrb
cld
xlat
sbb
es
pop
hlt
mov
and
push
add
add
sbb
jns
inc
add
add
ret
mov
orb
add
lds
data16
movq
xor
add
pop
cwtl
aas
outsb
add
add
divl
insb
add
or
fsubl
inc
add
stos
lock
mov
xchg
lret
add
add
add
add
add
repz
add
mov
out
mov
push
lods
add
adc
movsb
data16
xlat
add
mov
mov
xlat
mov
scas
arpl
loope
in
ret
dec
fisttpl
add
mov
sub
nop
lock
cmp
adc
add
add
push
add
push
movsl
in
das
and
mov
inc
cmp
jbe
scas
sbb
pop
add
pop
add
dec
add
add
arpl
add
arpl
fadds
xor
add
fwait
push
cmp
int
adc
add
and
add
mov
mov
xlat
cmpsb
loopne
test
jg
mov
add
add
leave
add
out
shlb
dec
jmp
cmpsb
mov
add
dec
add
je
lret
xlat
ret
je
xor
add
add
fwait
xchg
push
xor
stos
push
add
out
cmp
add
movsl
sub
and
add
stc
add
cmp
fdivrs
add
jns
ret
add
add
mov
pop
sbb
inc
repz
int
scas
add
aas
lock
jge
add
inc
mov
add
dec
add
adc
add
scas
adc
add
and
add
cmp
andb
or
xchg
stos
dec
add
sbb
data16
fmuls
and
add
add
xchg
sysenter
call
aas
std
sub
sub
xchg
shlb
mov
xor
add
movsb
arpl
popa
lea
sbb
hlt
push
or
sahf
and
add
mov
xchg
inc
add
add
jno
subl
add
inc
add
lods
subl
ud0
xchg
and
fildl
sub
data16
jne
dec
add
in
mov
fsubrs
add
add
add
add
dec
add
ja
iret
in
add
add
push
add
mov
add
and
inc
add
fwait
outsb
add
sub
xchg
inc
add
inc
ret
xor
add
add
add
fmull
xchg
add
inc
or
in
add
js
jb
xchg
mov
jl
adc
mov
add
mov
mov
add
sub
jg
imul
push
pop
add
in
hlt
jo
inc
out
fisttpl
divb
mov
add
add
push
jae
add
imulb
add
add
mov
pusha
add
insb
add
mov
add
add
xlat
jp
push
fisubrs
mov
xor
mov
imul
inc
add
mov
dec
lahf
xor
outsb
add
jno
lahf
mov
adc
add
adc
add
dec
lock
ss
add
or
xchg
add
int3
add
add
sahf
add
mov
mov
bound
es
add
cmpsl
xchg
cwtl
scas
mov
add
sahf
add
mov
jbe
ja
xlat
addr16
pop
loop
add
imul
add
loope
inc
add
aam
icebp
sbb
sbb
int3
fwait
sub
sahf
sar
or
sbb
pop
add
cmp
dec
add
add
mov
add
in
inc
dec
mov
mov
and
add
clc
dec
add
add
cltd
add
lret
dec
add
jl
popa
data16
inc
add
dec
add
add
sbb
mul
rcll
add
add
jp
pop
test
add
cmpsl
add
cmp
sbb
jno
add
add
jmp
cmp
into
add
scas
add
cmpsl
add
aas
sub
lds
add
out
mov
add
add
cmpsl
inc
xorl
xor
add
pushf
pop
adc
mov
add
outsb
add
je
or
xor
mov
call
add
push
adc
add
add
pop
fwait
add
repz
mov
push
outsb
add
repz
sbb
xchg
sub
mov
icebp
jp
pop
iret
jecxz
data16
jl
add
add
mov
mov
mov
mov
pop
aad
push
add
jae
add
add
inc
add
jecxz
addl
add
pop
std
leave
lret
xchg
or
leave
test
stc
pushf
mov
lock
and
fdivp
mov
sub
out
or
add
xor
add
add
cmpsb
test
mov
jecxz
gs
adcb
add
mov
outsb
add
mov
mov
add
push
add
add
add
add
sbb
aaa
inc
add
push
adc
inc
add
sarl
add
add
and
mov
jb
out
add
hlt
add
pushf
jge
pop
add
xchg
lret
adc
add
dec
jl
push
sub
add
das
fs
loope
ret
cwtl
inc
imul
push
add
cmp
int
mov
xchg
out
lock
sarb
rcrl
add
repz
test
mov
add
shll
push
std
add
js
test
sub
push
rorl
data16
add
fadds
xchg
pop
mov
fwait
cmp
adc
add
ficomps
xchg
mov
add
pop
dec
add
jnp
sbb
adc
into
sbb
add
sub
and
add
cmpsb
add
shlb
cmp
jo
add
sar
out
rcrl
push
add
in
add
add
add
shll
repz
add
enter
mov
ret
push
add
pop
das
push
add
sbb
nop
mov
add
dec
add
loope
xchg
add
xor
add
fsts
jecxz
fsubrs
mov
and
loope
mov
rolb
sub
in
mov
add
add
add
mov
mov
cmp
add
mov
add
inc
xchg
push
jmp
dec
add
xor
add
add
lods
sbb
push
add
scas
add
rcll
add
jns
dec
add
loope
movsl
mov
sbb
add
mov
ljmp
push
add
pop
add
or
jecxz
push
pusha
add
jl
mov
add
sbb
add
add
sbb
add
rcll
mov
stc
pop
jno
add
mov
add
roll
in
push
outsb
add
mov
stos
add
mov
loope
test
push
add
js
inc
rol
xor
add
add
outsb
add
dec
popf
stc
push
mov
imull
lods
test
insl
test
hlt
fs
mov
hlt
add
cmpsl
add
fcmovb
xor
repnz
push
jne
out
insl
fwait
or
jge
cli
out
add
add
fisttpl
add
out
add
pop
add
and
add
ja
add
aaa
push
add
adc
pop
add
fwait
insb
add
fld1
vpsrlw
jb
pop
xor
xchg
adcl
xor
add
fstpt
insl
xchg
ds
rdmsr
mov
add
add
outsl
mov
bound
pop
xchg
repnz
sub
add
dec
pop
enter
mov
pop
add
push
xchg
add
add
mov
jmp
and
add
add
mov
add
dec
fimuls
in
scas
pop
in
or
jns
dec
std
pop
add
test
inc
add
inc
add
push
aam
cmp
into
mov
filds
stos
enter
cmp
iret
jae
add
mov
add
lahf
je
jp
test
adcl
add
mov
cmpsl
ret
subb
movsl
add
dec
add
inc
add
es
add
adc
add
scas
test
out
sbb
jmp
sti
and
add
lea
nop
add
add
add
ja
add
pop
popf
mov
roll
mov
mov
out
pop
fwait
add
int3
stos
or
pop
add
aas
pop
add
sub
jnp
call
enter
add
and
add
jg
pop
add
not
mov
add
in
dec
push
add
add
stos
xchg
add
daa
xor
or
adc
or
inc
pop
and
icebp
mov
xor
mov
sbb
dec
add
cmp
jge
jmp
aam
jne
mov
loop
mov
stos
add
insl
add
ljmp
add
outsl
add
sbb
inc
add
add
add
and
fnsave
mov
pop
sbb
cmp
shrb
outsl
bound
in
lods
and
add
stos
add
jae
xchg
hlt
leave
fcmovbe
push
add
sbb
mov
add
mov
pushf
aas
sbb
inc
add
add
movl
cmp
push
add
dec
add
subl
mov
sub
stc
scas
jno
and
add
add
cltd
je
xor
mov
add
push
or
clc
mov
gs
push
add
add
pop
jae
fbstp
jb
ds
mov
fbld
std
add
sahf
xchg
mov
shll
cmp
add
xchg
add
add
jo
out
lds
rol
add
jno
push
loopne
add
add
popa
pop
add
add
pop
imul
mov
rcr
add
add
xor
aam
add
scas
add
push
push
in
add
add
out
adc
add
or
jae
in
int3
add
loopne
add
add
mov
jb
cmpsl
loope
movsb
sti
add
add
add
repnz
fcompl
sub
xchg
outsb
add
in
xchg
add
movsb
cmp
pushf
or
add
and
add
sahf
add
lahf
add
pop
add
lods
rol
or
adc
std
mov
enter
data16
add
push
fidivrs
faddl
sar
or
lds
cli
push
add
jmp
xor
add
add
clc
fldenv
addr16
add
add
mov
or
add
mov
popf
paddq
add
or
add
loope
mov
xchg
add
scas
add
add
inc
add
mov
sti
add
sub
scas
mov
add
sbb
sbb
repnz
push
daa
add
push
add
jg
add
xor
add
sub
adc
mov
cmp
scas
adc
add
sub
dec
add
push
add
inc
add
mov
movswl
add
add
add
jae
push
or
jl
pusha
add
loop
add
iret
add
outsb
add
add
cmpsl
aam
push
add
add
imul
add
mov
sarl
out
js
imul
popa
and
and
or
ficoml
cs
mov
jnp
iret
dec
mov
push
add
loop
mov
enter
add
add
cmpsb
fsubr
mov
cmp
adc
pop
sbb
cmp
outsb
add
dec
and
xchg
pop
cmp
jb
into
gs
mov
jne
fstpl
incl
add
add
jle
dec
add
add
add
lods
jb
pop
mov
sub
mov
pop
outsl
add
bound
out
dec
add
cltd
cmp
dec
add
and
aas
xchg
adc
add
jmp
mov
and
add
sti
data16
sbb
pop
add
pop
cmp
jb
mov
add
mov
mov
dec
add
jae
fsubrl
xchg
sbb
mov
cmp
jecxz
sub
inc
add
popf
in
and
add
test
jb
sbb
add
inc
add
jns
das
mov
into
dec
add
and
add
add
adc
add
pusha
add
test
mov
add
add
sbb
add
push
add
inc
push
lret
xchg
pop
add
aaa
add
aad
pop
add
sbbl
nop
dec
add
rcl
punpckhdq
xor
sahf
repz
add
sub
data16
adc
sti
add
sbb
cmc
mov
je
push
add
inc
and
ja
rcll
mov
mov
cmp
add
add
shrl
js
fdivs
adc
add
add
add
add
fistpll
int3
dec
add
iret
clc
bound
lods
inc
add
repnz
lahf
inc
add
sub
lahf
outsl
das
mov
adc
in
add
add
push
add
and
add
movsb
test
mov
add
jecxz
bound
lds
faddl
add
cwtl
fsubl
xchg
in
push
add
add
ljmp
pushf
scas
imul
jb
imul
add
iret
mov
lea
pop
fwait
pop
dec
inc
add
add
add
inc
add
bound
iret
lods
ja
clc
cld
outsb
add
fdivrp
mov
icebp
add
jnp
enter
xchg
jmp
das
add
lret
les
stos
movsl
int
pushf
or
leave
jns
mov
out
mov
repnz
rorb
sbb
xor
jo
sub
push
pop
add
stos
xlat
push
dec
add
xlat
adc
jns
mov
add
mov
jb
push
xchg
ficompl
add
lods
dec
push
adc
stos
out
push
loop
movsb
add
jg
add
xchg
add
pop
sub
inc
int
xor
add
add
shll
pushf
test
outsl
repnz
dec
add
mov
shrb
add
add
add
mov
add
loopne
add
push
add
add
lret
je
cwtl
imul
add
stc
pop
add
lds
std
jne
je
fcmovbe
sub
repz
or
dec
add
mov
xchg
and
push
insl
jne
push
add
cmp
push
roll
lret
push
push
mov
sbb
add
mov
adc
xchg
mov
cmpsb
mov
test
xlat
aas
daa
mov
lods
rclb
in
repnz
add
arpl
push
fdivr
pop
add
or
inc
add
insl
add
jge
fwait
add
stos
mov
add
lret
repnz
stc
pop
sub
xlat
mov
fdiv
mov
add
add
sub
push
xchg
fisubrl
add
pop
outsl
scas
repz
add
pop
scas
int3
repz
lods
jb
fistps
nop
cmpsl
inc
lods
outsl
xchg
insb
add
add
add
add
jl
mov
xor
add
lcall
add
pop
add
add
add
pop
add
popa
add
imul
add
sbb
and
add
pop
push
add
ja
das
hlt
test
mov
jb
add
sbb
pop
les
xchg
push
add
push
add
out
or
cmp
enter
add
add
stos
add
add
xor
dec
push
adc
ljmp
movd
xchg
add
inc
mov
add
dec
add
dec
add
jno
mov
add
add
jmp
push
pop
incl
ret
fisubrs
out
add
out
testl
aam
add
pop
add
jo
cltd
stc
and
add
add
sbb
and
jle
or
decl
dec
add
mov
mov
cld
inc
sahf
cmp
and
dec
add
not
insl
mov
add
cli
add
add
add
mov
add
pop
repz
popf
mov
jle
into
xchg
inc
add
add
push
add
ret
mov
add
sub
add
lahf
adc
xchg
mov
out
jge
add
or
icebp
jmp
insl
xchg
lds
lret
add
pop
add
sbb
lea
inc
add
fwait
add
loop
test
inc
adc
enter
lahf
addb
add
or
rorb
xchg
ja
imul
xor
add
add
add
lods
add
jp
mov
add
in
lods
mov
add
add
in
aas
lock
add
add
lahf
xor
add
add
and
add
add
repnz
push
sbb
sub
sbb
cltd
andb
add
xor
aad
movsb
xchg
aad
and
add
jmp
into
or
ficomps
add
es
sbb
mov
cli
lret
dec
inc
add
jmp
bound
jmp
jno
stc
fnstcw
pop
xchg
sbb
pusha
add
jmp
aas
add
mov
add
cmp
dec
add
fstp
fisttps
bound
out
lds
add
push
stos
mov
sub
add
insb
add
inc
test
jecxz
xor
cmp
fmull
add
dec
cltd
shrb
sbb
lea
pusha
add
test
add
inc
add
nop
xor
add
js
pop
add
leave
leave
sub
int3
sub
ret
fildl
adc
and
pop
add
cmp
popa
mov
fs
push
add
sbbb
les
ficoml
add
add
das
not
mov
cmp
jmp
movsb
mov
lret
mov
sub
ds
pusha
add
push
lods
iret
and
add
lock
subl
add
arpl
add
pop
add
sbb
cmp
push
int3
inc
add
outsb
add
rol
jo
lret
fisttpl
pop
add
mov
loopne
add
les
dec
dec
jg
add
sub
int3
and
add
adc
add
out
scas
sub
inc
cmp
popa
pop
aam
ret
int
add
and
pop
and
add
lock
bound
inc
mov
shll
add
add
mov
xor
aad
add
cli
xor
add
notb
addr16
jp
mov
xor
push
add
add
xor
add
or
inc
mov
add
dec
add
sbb
cmpsb
sub
addl
cmc
bound
inc
add
add
jmp
mov
jge
andb
and
push
inc
add
ret
add
xchg
push
dec
add
inc
jl
jecxz
or
ret
aaa
stos
add
sub
sbb
add
add
add
add
js
test
sub
add
rcrl
movsb
cmpsb
test
adc
add
add
cld
nop
pop
inc
add
repz
lds
in
imul
add
pop
pop
add
inc
mov
ja
fidivl
lcall
push
add
mov
add
loope
fs
orl
cmp
out
add
mov
lahf
xchg
adc
add
lcall
xchg
test
pop
push
add
ja
add
mov
mov
adc
xor
add
jnp
sbb
add
xlat
inc
add
aas
stos
scas
and
add
jbe
jb
out
mov
popf
test
lods
push
add
dec
add
add
pop
add
cwtl
lods
pop
out
or
add
push
add
scas
es
movsl
ss
add
push
add
add
inc
add
scas
or
push
add
and
aas
push
add
popf
push
cltd
mov
push
mov
cmp
add
fwait
jmp
push
mov
adc
push
add
adc
pop
add
and
add
dec
xlat
out
cmc
add
dec
pop
push
dec
add
clc
add
dec
fsubrs
and
add
or
out
or
inc
add
add
inc
add
inc
mov
dec
add
mov
inc
mov
add
add
add
les
decb
add
cld
jo
push
add
popa
jnp
nop
lret
aad
orb
leave
mov
add
imul
pop
cmp
push
add
xchg
imul
add
shlb
push
add
add
sub
add
insl
add
push
and
dec
popa
sub
add
mov
into
sub
jmp
lds
jp
inc
add
xlat
pop
add
push
or
xlat
dec
add
add
xchg
mov
lods
push
add
cmpsb
add
add
test
aaa
add
lods
xchg
jmp
stc
xchg
movb
lea
fiaddl
mov
pusha
add
push
xor
sbb
pusha
add
mov
fcomip
into
dec
jmp
push
add
str
cltd
pushf
xchg
push
add
add
and
or
add
add
xor
js
rcrl
shll
add
loope
mov
inc
ds
xchg
and
and
add
roll
lds
test
xor
add
add
xor
sub
out
inc
test
jno
push
mov
cmpsb
add
mov
call
add
sbb
clc
add
sub
negl
pusha
add
sbb
fwait
dec
sbb
mov
inc
add
ja
imull
movl
and
lahf
lods
imul
arpl
scas
pop
add
add
mov
jae
or
shll
cmp
sti
pop
int
loop
div
fwait
xchg
out
or
test
jb
lock
subl
aad
sub
clc
repnz
sub
jbe
cltd
pop
add
or
mov
xor
add
mov
loopne
cmp
xchg
inc
cmp
add
jae
bound
addr16
xor
data16
add
cltd
pop
add
add
insl
popf
stos
sarl
fwait
add
adcl
xlat
mov
out
or
call
push
add
and
add
sub
jnp
aaa
add
add
adc
pop
add
add
xor
add
jmp
add
mov
add
rol
xor
add
mov
loopne
test
jae
je
jae
pop
jl
lods
cmp
add
icebp
sub
popa
repz
push
popf
into
adcl
add
add
mov
add
jmp
ljmp
add
or
inc
mov
add
lahf
mov
rcr
xor
cmp
mov
roll
aam
add
hlt
add
cmpsb
xchg
lds
mov
loopne
sbb
add
add
out
add
add
sbb
xchg
add
cmp
add
add
cmpsb
add
fistps
sbb
mov
fsubl
dec
add
mov
in
int3
add
push
add
mov
mov
jmp
jns
movsb
ret
mov
add
add
jg
and
pop
lcall
ret
nop
xor
outsl
add
xchg
test
mov
sub
xchg
xlat
pop
add
mov
add
mov
loope
add
add
sti
xor
add
cmp
xchg
setne
jae
adcl
add
inc
add
jp
movsl
or
sub
add
and
add
inc
jg
ret
adc
push
add
fwait
add
adc
add
sub
mov
add
add
and
fs
cmpsb
inc
add
sbb
xchg
aas
cmp
movsl
mov
mov
mov
and
xlat
dec
add
call
fxch
fmuls
dec
xor
ss
add
int3
imul
gs
sub
aaa
adc
mov
add
add
stos
cs
mov
inc
add
rcrl
add
add
push
add
add
push
add
ja
hlt
jle
add
shlb
stos
in
push
add
loope
ss
in
leave
push
add
mov
sbbb
add
das
sti
adc
push
aas
popa
mov
adc
add
jge
loop
add
popa
pop
jbe
fsubrl
add
jae
pop
stos
add
or
stc
loopne
jl
popf
mov
add
dec
add
sbb
add
stos
or
or
shlb
ficomps
mov
inc
add
ret
add
insb
add
add
lret
add
imul
and
cld
sub
add
loopne
add
adc
add
push
add
xor
add
pop
add
sub
popa
std
ss
add
repz
and
icebp
xchg
ljmp
mov
push
mov
ja
cmpsb
adc
push
add
add
inc
add
pop
mov
mov
movsl
pop
insb
add
out
xchg
add
rolb
hlt
repnz
add
rol
sahf
sbb
add
fldt
loop
and
add
add
jge
mov
loopne
movsl
inc
and
add
xchg
jb
fiaddl
push
add
cmp
scas
arpl
add
repnz
sbb
or
add
push
add
add
add
popa
mov
add
dec
arpl
and
add
add
and
add
mov
add
fwait
sbb
add
enter
add
lret
add
add
add
loope
sub
jno
lock
push
add
jnp
push
push
add
adc
in
xchg
add
ljmp
fwait
xor
add
mov
sbb
jb
decb
xor
add
sub
xchg
je
push
xor
add
mov
add
jge
sbbl
add
push
add
sbb
push
add
add
add
add
add
dec
add
in
mov
cmp
mov
push
jle
loope
add
test
mov
add
add
sub
adc
lcall
rolb
add
fcomi
cmc
mov
mov
lcall
lock
notl
scas
add
rclb
ljmp
add
jg
lock
in
bound
mov
add
lods
dec
ret
add
sub
test
faddl
repz
add
inc
add
add
dec
add
add
add
cmp
mov
push
cmp
cmp
stos
in
cmp
cmp
lods
fisttps
movsb
lock
fdivs
cmp
xor
add
fcomps
mov
sub
pop
fiadds
sbb
add
mov
aas
test
dec
add
jle
into
inc
and
add
in
out
test
inc
add
and
or
adc
xor
add
push
popf
mov
shll
roll
iret
push
or
mov
cmp
add
lahf
shll
add
lea
rcll
add
add
cmp
sbb
mov
inc
add
cmpsb
mov
jae
cli
pavgw
mov
xchg
lea
add
sub
call
int
arpl
cmp
push
or
or
jo
loop
movsb
pop
pop
add
loop
mov
stos
dec
sti
push
negb
aad
push
mov
inc
add
add
xor
add
gs
cli
mov
out
mov
cmp
andl
add
add
roll
dec
mov
lock
or
add
add
test
pop
incl
cmp
insb
add
mov
dec
add
add
xchg
jno
fsubrs
cwtl
sahf
loope
jl
lahf
mov
jg
outsb
add
outsl
in
mov
push
add
add
xchg
add
or
inc
add
add
shrl
xchg
shr
mov
xor
add
pop
add
xchg
mov
mov
jns
sub
stc
jbe
xchg
dec
sub
test
jecxz
adc
mov
mov
cwtl
jg
add
mov
sbb
sbb
jno
outsl
daa
xor
sub
mov
mov
and
add
add
or
adc
add
inc
add
sbb
mov
xor
add
js
xlat
jne
add
mov
scas
xchg
add
rolb
push
add
mov
into
push
pop
sbb
inc
sub
add
dec
add
iret
in
push
aad
add
add
xchg
xchg
ljmp
inc
test
sbb
test
imul
out
add
dec
add
repnz
int
push
add
add
lahf
pop
in
notl
add
cltd
push
mov
add
mov
add
add
aam
imul
xchg
xchg
sti
xchg
inc
addr16
out
pop
xor
movsb
sub
push
add
add
add
cmp
push
add
add
or
sub
push
cmp
jecxz
xor
add
inc
add
movl
add
rolb
fldl
mov
lea
je
jb
stos
push
jp
and
int
and
add
es
xchg
stos
outsl
push
push
add
inc
test
fists
neg
bound
call
inc
sub
adc
add
jo
lock
imulb
arpl
mov
pop
xor
add
roll
int
xchg
lea
pop
add
pop
cmpb
lcall
call
cmovp
add
pop
add
dec
add
add
fwait
add
inc
add
jnp
les
pop
cwtl
in
mov
sbb
or
mov
leave
dec
add
nop
add
mov
inc
add
dec
cmpsl
gs
add
pusha
add
or
add
roll
inc
add
insl
add
lock
ljmp
push
add
add
add
xor
push
add
add
lret
rol
pop
sub
add
bound
add
sub
addr16
ret
add
xchg
sbb
and
pop
add
mov
cli
add
ja
xchg
repz
add
and
or
stc
shlb
inc
pop
add
pop
and
add
filds
mov
add
sbb
jnp
add
dec
cwtl
jle
xor
and
add
push
add
add
shr
aas
aam
pop
adcb
push
push
add
loope
jno
popf
add
ljmp
mov
lret
add
dec
ljmp
push
aam
adc
pop
pop
dec
add
mov
lret
or
and
add
sti
add
add
adc
add
add
add
add
inc
add
xchg
sarb
cs
pop
add
lret
add
test
jge
add
add
add
adc
add
add
sub
int3
ret
test
add
add
mov
mov
jle
ret
out
and
add
add
jns
jnp
aad
push
add
lods
cmp
xor
add
push
adc
add
push
push
mov
mov
sbb
push
push
push
add
add
lret
mov
add
push
rcl
jmp
addl
sub
rol
ds
pop
aad
jbe
xchg
xor
add
sub
dec
add
pop
or
icebp
push
repnz
adc
add
shll
or
and
xor
xchg
mov
pop
add
arpl
add
int
cmp
movsb
sbbb
and
out
add
je
bound
jge
fisttps
mov
or
lea
dec
add
pop
add
add
pop
test
out
xorl
add
xchg
mov
xchg
lds
add
and
leave
arpl
stos
movsb
int
mov
scas
mov
sbb
push
add
add
icebp
sub
hlt
mov
mov
push
add
roll
sub
in
adc
and
push
insl
sarb
mov
cmp
jbe
std
mov
mov
lahf
xchg
js
shlb
lcall
mov
bound
xor
add
shll
dec
add
push
imul
cli
repnz
repnz
or
xor
fildl
aaa
mov
repnz
sub
outsl
mov
pushf
adc
mov
add
adc
add
push
inc
cwtl
inc
add
cmp
add
lods
cmovge
add
fdiv
xor
add
pop
cmp
int3
mov
inc
xor
add
and
int
fadds
test
mov
lea
push
add
cmpsb
fistl
arpl
pop
add
add
mov
xor
cmpsl
jp
popa
jno
aaa
dec
add
add
jl
daa
or
or
loopne
movsb
jo
lods
push
adc
add
out
sbb
into
lock
add
sar
lret
pop
add
cmp
xchg
insl
push
pop
xlat
xor
adc
add
daa
test
lea
lock
or
addr16
adc
add
add
inc
add
jno
add
mov
inc
sub
xor
nop
sbb
popa
mov
add
add
in
add
add
inc
sti
jge
add
test
cmp
leave
adc
pop
add
ja
lds
mov
pop
add
add
push
mov
add
stos
jbe
lret
cmpl
cs
test
add
add
dec
add
outsl
mov
xchg
shl
add
stc
cli
loope
xchg
add
add
fstp
lea
mov
mov
add
mov
add
cltd
mov
xlat
jl
and
add
add
add
pusha
add
shl
testb
add
stc
mov
mov
pushf
out
out
out
add
stos
and
add
add
cli
cltd
pop
add
mov
push
sbbl
add
dec
add
testl
add
lea
mov
sbb
test
add
jnp
sti
mov
lcall
mov
jbe
pop
add
add
dec
add
jge
inc
add
pop
sbb
add
add
shll
add
cltd
sub
mov
cmpb
fidivs
test
cld
cwtl
test
out
lret
outsl
imul
imul
sbbl
inc
add
aaa
add
add
ja
inc
add
add
jb
in
xor
adc
add
clc
adc
add
xor
add
lds
loopne
push
sbb
jge
les
aaa
mov
mov
popa
mov
mov
pop
xchg
add
out
adc
adc
add
xchg
imul
add
outsl
and
mov
insb
add
sub
pusha
add
test
subb
add
or
xchg
ds
sub
dec
add
and
test
ja
pop
sbb
iret
push
data16
add
sub
test
nop
xchg
bound
push
add
add
iret
shlb
add
add
pop
fsubrl
nop
dec
add
mov
popf
jbe
pop
add
in
add
add
lahf
add
arpl
aam
data16
hlt
cmp
inc
out
lods
std
mov
jg
add
mov
out
push
fiadds
adc
test
jnp
pop
add
inc
leave
aaa
fiadds
shrl
popa
outsl
add
inc
adc
add
sub
and
add
inc
add
xchg
lds
test
insb
add
add
add
repz
mov
mov
out
je
aad
in
rorb
jae
dec
add
pop
add
or
mov
xor
pop
test
add
and
add
bound
test
add
test
pop
pop
add
add
inc
and
add
add
jge
add
add
add
add
lock
xchg
add
call
add
add
pop
add
cltd
xchg
ljmp
aad
mov
xlat
jbe
xchg
jno
add
mov
cmp
mov
stos
or
sbb
in
inc
add
add
aas
and
add
mov
cli
daa
jns
mov
add
sbb
test
in
pop
test
add
popf
ljmp
iret
xlat
jge
add
add
insb
add
push
mov
xorl
add
bound
jp
sbb
mov
add
add
sub
add
es
add
or
out
or
in
mov
add
adc
bound
sbb
xorl
sahf
xchg
pop
cltd
outsb
add
cmc
mov
pushf
add
into
mov
aam
cmp
pop
add
mov
cltd
or
shrb
dec
jmp
add
outsb
add
addr16
lds
add
mov
jmp
add
lea
pop
add
iret
add
ret
cmp
pushf
inc
add
sti
cmp
add
and
add
stc
add
repnz
scas
outsl
mov
or
lea
das
add
in
aad
pushf
and
add
lea
shlb
mov
pop
add
lahf
mov
push
add
add
mov
add
push
add
gs
pop
cmc
mov
jb
shl
pop
mov
push
add
test
pop
add
loopne
lcall
cmp
pop
add
mov
repnz
jae
dec
mov
push
and
pushl
inc
add
js
push
bound
jl
push
or
add
add
xchg
dec
xchg
add
pop
mov
xor
mov
cmc
mov
add
mov
repnz
jae
mov
loop
push
mov
pop
mov
jecxz
add
inc
add
add
daa
mov
rcrl
and
add
fisubrl
loop
dec
add
subb
add
out
adc
push
add
add
add
add
adc
add
or
in
add
fdivrl
addr16
insb
add
sbbb
shl
push
pop
mov
fbld
inc
add
in
add
cmp
pop
add
test
das
add
jg
lods
bound
int3
aad
add
in
mov
pop
pop
add
add
repnz
jae
pop
mov
mov
mov
mov
mov
mov
inc
test
and
outsb
add
jmp
repz
mov
imul
and
add
insb
add
and
add
add
pop
push
xor
dec
inc
add
xor
add
mov
jno
push
fistpl
ret
rolb
push
add
cmp
lea
test
push
add
repnz
jae
jo
mov
push
scas
mov
add
add
add
add
sbb
adc
add
inc
stos
jb
fsubs
add
inc
pop
ffreep
jns
xchg
add
add
test
mov
pop
add
xchg
clc
jae
dec
jle
xchg
and
mov
mov
lods
add
pop
add
add
ljmp
jo
xor
ss
call
stos
push
mov
imul
fstps
add
mov
lods
jge
sbb
push
add
jg
push
ret
int
incb
mov
clc
jae
mov
pop
out
ss
pop
xor
rcrb
mov
add
rclb
sub
add
add
add
add
add
inc
add
push
add
arpl
into
inc
add
jecxz
jbe
jle
popf
ljmp
add
data16
xor
fldz
cmp
pop
add
cmp
mov
inc
add
shrb
xchg
inc
int3
int3
int3
add
add
pop
push
sbb
dec
add
roll
add
add
pushf
add
stos
cmp
icebp
fnstsw
add
outsb
add
add
repnz
jae
mov
loop
pop
mov
jl
jnp
add
xor
push
add
add
add
jns
lret
fcoms
cld
shlb
xchg
jmp
popf
pop
jo
popf
jo
jo
xchg
andb
add
sub
ret
jmp
cmpsb
add
add
add
cmp
add
add
in
add
arpl
add
add
xor
xor
jmp
add
movsl
inc
add
dec
add
imul
add
dec
mov
hlt
movsl
xchg
and
add
test
mov
add
sqrtps
test
add
call
data16
add
stos
hlt
mov
imul
je
mov
add
sbb
imul
pusha
add
rol
adc
rorb
imul
sbb
mov
lock
ret
ds
xor
add
scas
jo
std
dec
add
jae
add
add
and
add
imul
and
add
jb
or
adc
imul
push
out
add
jns
mov
jo
out
in
push
mov
add
arpl
add
repz
in
inc
add
add
push
fst
bound
xchg
jecxz
jno
add
mov
pushf
rcr
jmp
lcall
popf
or
and
add
mov
ja
push
push
jle
mov
int3
xlat
hlt
mov
xor
add
repnz
jae
jo
repz
repz
mov
ret
pop
dec
jle
in
cmp
gs
inc
add
cmp
int3
fisttps
loopne
mov
inc
add
and
add
mov
out
fwait
mov
add
loop
nop
in
fdiv
mov
movsb
aam
xchg
shl
clc
jae
push
mov
scas
pop
adc
popf
mov
mov
add
add
xchg
data16
imul
add
xchg
cmp
outsb
add
and
loopne
cltd
mov
add
add
add
test
movsb
inc
jmp
bound
icebp
sbb
inc
mov
popa
add
clc
jae
push
mov
imul
stos
push
add
or
add
add
nop
repnz
pusha
add
xchg
mov
mov
lock
ret
sbbb
insl
xorb
add
cmp
popa
addr16
jg
nop
mov
push
stos
add
push
mov
mov
xchg
sti
pop
push
mov
add
rcrl
xchg
sbb
dec
lahf
mov
inc
fimuls
and
add
xchg
sbb
lods
mov
sbb
imul
mov
repnz
jae
xchg
mov
orb
or
add
jns
scas
mov
imull
or
aad
or
sub
in
pavgw
jae
mov
push
scas
and
mov
loop
popf
stos
lahf
pop
add
outsl
mov
add
test
flds
subl
push
add
add
push
mov
lock
ret
jo
pop
fldenv
push
add
icebp
dec
add
push
nop
iret
leave
and
jo
add
add
add
sbb
loop
imul
call
scas
add
arpl
out
push
pop
lods
fnsave
popf
add
mov
data16
or
pop
jo
adc
pop
fadds
jns
add
sub
mov
addb
push
add
cmp
addl
cltd
add
mov
jmp
mov
mov
mov
cmp
imul
add
jp
and
add
add
movsb
xor
add
dec
and
add
mov
loope
add
add
es
add
sbb
inc
push
xchg
jmp
insl
scas
jo
xor
pop
add
and
add
dec
adc
insl
mov
xor
ret
push
popf
cmp
mov
test
add
pop
add
xchg
imul
stos
add
or
pop
test
mov
add
push
roll
xchg
addl
add
push
mov
mov
pop
pop
insl
mov
aad
cmp
in
clc
mov
sub
and
add
xor
add
and
add
repnz
jae
jo
loop
mov
mov
mov
jle
add
outsl
pop
add
jno
leave
aam
sti
xchg
movsb
jg
stc
and
repnz
jae
push
jo
xchg
mov
insl
and
sbb
cmp
out
inc
int
or
cmp
or
add
cmpsl
cmp
test
push
pop
add
subl
add
xchg
ret
xor
xor
add
add
xor
data16
add
push
bound
fcom
pop
mov
ficomps
add
mov
add
cmpl
add
push
cs
and
pop
jae
mov
dec
xchg
jmp
popf
mov
mov
repnz
mov
xor
add
xchg
jae
imul
in
pop
das
lret
pop
out
in
jns
add
fwait
push
mov
lock
ret
imul
sub
push
cmc
negl
addl
test
pop
add
add
sbb
or
dec
mov
add
jmp
add
mov
xor
add
shl
movsl
add
dec
xchg
dec
adc
pusha
add
xorl
add
lcall
iret
dec
ret
shlb
lret
add
ficompl
out
add
add
inc
add
sahf
push
add
and
add
add
and
add
and
push
add
in
add
ret
add
faddl
ljmp
xchg
shll
and
inc
test
add
lock
lcall
add
push
scas
test
mov
mov
inc
add
popl
cmp
iret
add
add
add
pop
aam
jbe
push
add
or
sbb
imulb
add
popf
adc
popa
or
rcl
mov
loope
jmp
mov
cmp
mov
mov
mov
ss
add
inc
add
pop
add
sbb
es
add
push
daa
lret
add
fbstp
mov
jbe
sub
push
add
cmp
add
repz
shrl
loopne
inc
add
test
pop
add
cltd
cmp
add
sub
sbb
mov
aad
adc
outsl
decl
sbb
test
add
aam
dec
dec
add
bound
adc
add
add
insl
in
sti
push
int3
xchg
mov
das
aas
insl
push
mov
jle
xor
add
inc
add
pop
add
add
imul
jbe
lods
gs
add
test
in
cmpsl
orl
sbb
sahf
add
jp
insl
pop
mov
gs
repnz
jae
and
repnz
loope
adc
add
imul
insb
add
xor
add
add
test
fs
std
js
fildll
pop
mov
xchg
jmp
push
xor
mov
mov
hlt
loopne
negb
jp
inc
add
sbb
call
add
jo
push
or
cmp
sub
add
adc
outsb
add
jns
dec
into
cmc
add
add
and
add
jo
lret
push
andb
jmp
mov
pop
popf
pop
push
xorb
add
jb
out
mov
addr16
or
mov
add
xchg
push
repnz
jae
insl
mov
mov
mov
xor
add
add
repnz
jae
push
imul
mov
jbe
jmp
add
lahf
lret
nop
jecxz
iret
jg
add
cmp
nop
lds
pushf
add
ret
pusha
add
cltd
pop
fildl
mov
add
push
mov
lock
ret
dec
mov
loope
clc
rol
jns
add
xor
add
rolb
pop
fsubs
push
add
mov
das
pop
add
mov
fcoms
add
lods
or
add
sub
lahf
add
add
aaa
pusha
add
xor
clc
jae
repnz
mov
xchg
jo
ss
mov
jl
adc
out
jecxz
in
lods
ljmp
jge
mov
test
enter
jl
or
iret
cmpsb
dec
add
cmp
xchg
bound
cmc
rcrl
xchg
xor
add
adc
jl
call
mov
sub
push
inc
add
xor
pusha
add
xchg
push
mov
lock
ret
xchg
mov
mov
repnz
add
push
add
repz
add
push
add
enter
push
icebp
push
add
add
mov
je
nop
inc
clc
ss
add
push
add
mov
sub
push
add
cmp
sbb
jp
push
lds
in
std
sbb
roll
add
add
add
ss
push
repnz
dec
cltd
xor
push
aaa
add
out
xor
add
icebp
add
stos
add
flds
iret
mov
add
jmp
imul
and
les
add
mov
xor
add
and
add
jle
pop
add
xchg
test
add
xchg
ret
repz
loop
pop
insl
push
add
shr
repnz
jae
mov
ss
mov
dec
mov
inc
add
fmull
add
stos
mov
pop
add
fistpl
lret
loope
xchg
faddl
clc
jae
mov
push
insl
xor
add
push
add
jno
jge
cmp
xchg
jmp
rep
mov
insl
adc
ficomps
movsb
stos
xchg
sub
lahf
add
sbb
add
add
mov
mov
pop
add
add
in
flds
rorl
insl
stos
mov
add
xchg
shl
jae
popf
mov
cmp
mov
insl
xor
add
js
and
jae
add
in
mov
inc
add
cmc
das
adc
add
xchg
add
or
adc
add
sti
push
clc
jae
pop
jle
ds
mov
xor
movsl
orb
inc
test
lret
mov
xchg
mov
movsb
mov
xor
andb
clc
add
mov
add
add
xchg
arpl
mov
sti
xlat
dec
loope
inc
add
stos
movsl
ljmp
add
aas
cmp
add
int
jnp
mov
xchg
adc
add
add
add
push
icebp
pusha
add
add
mov
sub
andb
inc
add
sub
sub
or
out
cld
or
jno
add
push
add
or
and
cld
mov
cmp
jns
add
out
aaa
push
add
add
repnz
ffree
xchg
inc
add
fistpll
or
lea
insl
sbb
adcl
add
mov
jle
out
push
jb
mov
add
out
pop
sub
sbb
sarl
and
lods
test
add
or
loope
outsl
in
and
jl
inc
subb
rcrb
pop
add
popa
add
mov
adc
test
add
xchg
xchg
clc
jae
pop
xchg
mov
mov
imul
jge
sub
add
pop
add
mov
mov
lock
ret
pop
xchg
scas
and
add
ljmp
movsl
shll
add
adc
add
fildl
movsl
lods
xchg
cltd
add
add
pop
add
icebp
dec
mov
jp
xor
add
push
add
rcll
dec
add
add
loope
and
pop
ja
add
add
xor
ret
loop
mov
pop
and
cmc
add
xchg
add
xchg
inc
mov
and
add
cltd
jb
mov
add
imull
dec
add
enter
mov
pop
pop
add
sahf
xor
add
mov
or
adc
and
add
lock
or
repnz
jae
mov
pop
mov
out
insl
and
mov
decb
in
pop
inc
test
add
ja
mov
mov
add
add
adc
ja
rol
xlat
sub
jbe
pop
push
push
add
int
sub
mov
add
dec
imul
xor
add
pop
mov
aaa
lret
add
cwtl
sub
fcomps
sti
pop
add
add
push
add
aaa
jnp
inc
add
pop
lret
add
insl
add
mov
xchg
jmp
jle
ds
mov
push
jnp
lret
push
add
aas
add
push
mov
lock
ret
mov
and
popf
fimuls
jnp
mov
jb
scas
pop
add
xchg
test
and
add
clc
jae
scas
loop
orb
xchg
movsl
lcall
mov
dec
add
cwtl
icebp
imul
out
dec
daa
dec
add
add
mov
loope
popf
pusha
add
or
int
add
andl
ss
pop
repz
sub
loop
loope
add
pusha
repnz
jae
mov
mov
mov
mov
mov
or
aam
mov
and
mov
loop
add
data16
and
xor
add
add
add
jmp
add
push
add
rorl
pop
fisttpll
add
mov
jne
push
mov
lock
ret
mov
mov
add
or
add
add
mov
outsb
add
filds
out
sub
loopne
add
enter
rcl
adc
lea
cli
jne
cld
cmp
sbb
lods
and
add
clc
jae
mov
mov
mov
out
mov
add
je
sub
clc
jae
loop,pt
scas
dec
insl
ds
loop
jo
xchg
add
jecxz
pop
add
aaa
mov
clc
jae
push
xorb
mov
push
add
call
add
add
sub
les
cmp
mov
and
dec
outsb
add
add
jmp
hlt
cmp
scas
pushf
test
clc
dec
add
es
xlat
xor
or
in
lcall
add
inc
hlt
in
adc
sarb
stos
xchg
mov
add
addr16
insl
fldl
rolb
dec
cld
arpl
aad
add
xchg
ret
push
and
out
insl
pop
adc
movsb
adc
add
jb
stos
pop
dec
add
pop
stos
inc
add
xchg
ret
mov
mov
cwtl
adc
add
ljmp
imul
loop
ss
jne
add
and
lahf
in
imul
lods
adc
add
xchg
lods
and
push
add
mov
jmp
add
mov
dec
cmpsb
adcb
insl
dec
popl
fisttpl
jo
xchg
jmp
mov
mov
repnz
je
pop
scas
sbb
or
loope
in
sbb
mov
int
adc
add
push
add
loopne
mov
inc
add
repnz
adc
add
mov
adc
add
xchg
add
add
add
repz
in
pop
dec
mov
loop
les
add
inc
add
jle
push
out
xor
add
xchg
inc
incl
add
bnd
out
jo
mov
push
fwait
add
jge
je
stos
andb
and
inc
pop
push
mov
lock
ret
jle
mov
cmp
out
ds
cli
inc
mov
repnz
jae
pop
jo
jo
mov
jo
cwtl
push
mov
add
add
add
mov
sbb
mov
inc
inc
int3
and
add
mov
inc
add
js
lock
add
in
test
push
push
mov
lock
ret
imul
insl
int3
or
pop
xchg
xchg
jmp
xorb
jle
mov
mov
push
sbb
and
testl
xchg
inc
jge
addr16
and
add
jnp
xor
add
add
test
add
rclb
jae
mov
cmp
and
scas
out
push
push
mov
lock
ret
mov
pop
xor
add
add
add
jp
je
lret
movsb
pop
add
sub
and
repz
add
insb
add
pop
add
outsl
pusha
add
jl
in
add
icebp
aad
add
add
jmp
mov
xchg
pop
repz
insl
ds
xchg
clc
jae
loop
xor
pop
popf
mov
mov
pop
add
jbe
cwtl
into
into
adc
add
xchg
jmp
mov
and
and
inc
repnz
stos
fbstp
out
add
xor
test
loope
jo
hlt
add
in
pop
shr
adc
add
or
div
fsubrl
add
aaa
movsb
add
scas
add
inc
test
test
push
add
push
mov
lock
ret
popf
xchg
mov
fmul
movsl
nop
mov
aas
fisttpl
lds
outsb
add
ja
sti
push
inc
push
push
mov
lock
ret
xor
pop
adc
add
add
push
push
mov
lock
ret
mov
dec
repnz
ds
ja
rorl
fucomip
aam
dec
mov
scas
mov
add
and
dec
test
add
faddl
jle
dec
scas
mov
sahf
jp
dec
add
add
jns
xchg
push
cmp
jae
mov
mov
cmp
mov
lods
fldcw
jnp
sbb
add
xor
add
add
inc
add
lcall
and
aad
lods
mov
stc
pusha
repnz
jae
scas
mov
insl
insl
push
xchg
insl
pop
insl
in
cmp
into
test
add
fildl
fsub
xchg
repnz
call
int
xchg
mov
push
mov
lock
ret
insl
xchg
loop
lcall
jmp
add
ret
repnz
jae
mov
jo
pop
mov
sbb
jbe
pop
add
fnstenv
daa
in
dec
xlat
rclb
dec
add
add
jg
insl
mov
lret
cmpsb
jecxz
adc
add
push
add
rclb
clc
mov
xor
ret
mov
mov
repnz
fdivrp
lock
add
adc
add
pop
xchg
jmp
cmp
xchg
mov
mov
xorb
xor
pop
sbb
mov
repnz
jae
mov
xor
mov
popf
pop
and
adc
add
repnz
jae
repnz
mov
lods
jecxz
rorb
pop
add
add
add
repnz
jae
mov
mov
xchg
mov
mov
loope
add
daa
cmp
lods
adc
push
add
push
add
mov
hlt
fiaddl
pop
add
add
pop
add
and
add
add
and
clc
jae
mov
mov
out
fistps
add
add
add
dec
sub
and
xor
imul
cs
decl
xor
subb
arpl
push
clc
jae
loop
ss
imul
add
cmpsb
push
pusha
add
mov
push
pusha
add
lds
add
dec
add
sti
dec
add
mov
add
and
mov
add
add
mov
lock
ret
jo
out
mov
ljmp
jns
jbe
jp
arpl
lcall
xchg
jmp
repnz
loop
pop
mov
adc
aam
dec
add
add
pop
add
movsb
add
and
stos
and
add
add
add
xor
push
add
push
sbb
les
add
sub
add
repnz
jae
push
xchg
push
jo
ds
mov
repz
add
add
add
cmpsl
daa
aaa
add
sahf
cmp
xor
add
pop
add
adc
add
add
add
repnz
add
popa
add
clc
jae
jo
dec
mov
mov
xor
push
add
sub
mov
push
add
testl
out
xlat
test
addl
add
add
cmp
call
fld
mov
xchg
nop
push
mov
lock
ret
xchg
xchg
xor
mov
scas
dec
loopne
xor
outsl
jbe
xor
mov
outsb
add
push
mov
lock
ret
pop
popf
mov
ds
mov
add
adc
dec
jb
jmp
cmpsb
lods
pop
add
add
int
mov
push
mov
lock
ret
pop
xor
and
call
mov
jp
fidivl
lock
into
sbb
adc
add
sarb
mov
cwtl
mov
add
sbb
sub
add
mov
push
add
cmc
add
mov
inc
add
add
faddl
jns
je
ret
jo
inc
add
cmp
cmp
addl
add
mov
jo
insl
repnz
add
pop
repnz
or
in
jg
xchg
pop
in
add
adc
add
jno
add
inc
add
add
pop
pop
add
inc
arpl
jbe
cs
sahf
shll
arpl
test
add
sbb
pop
add
cmp
mov
add
fscale
pavgw
repz
hlt
pop
add
xor
xchg
xor
add
repnz
jae
imul
shl
pop
out
xchg
push
push
mov
lock
ret
pop
xor
addb
push
push
add
jne
fdivl
push
add
xor
xlat
mov
xchg
jmp
ds
jo
push
mov
cmpb
icebp
pop
add
in
loop
imul
lock
out
push
andl
add
jmp
pop
out
loop
and
pop
add
add
sub
insl
sbb
dec
hlt
js
add
or
mov
jbe
and
add
add
flds
and
add
mov
jb
sti
sbb
fistpl
add
aam
faddl
add
add
add
sbb
test
add
imul
jl
xchg
pop
cltd
pop
notl
sbb
daa
xchg
add
jns
and
cmc
cmp
add
arpl
test
add
sbb
inc
in
cmpb
sti
sbb
and
test
addb
add
rcrl
cmc
cmc
cmp
sbb
lret
daa
add
and
add
jle
lods
ret
inc
add
cli
or
push
lahf
push
add
xor
lea
js
push
add
cmp
pop
and
mov
pop
push
add
sbb
add
into
sub
add
add
jb
xchg
test
lret
test
add
mov
repnz
jae
insl
insl
repnz
mov
arpl
jle
inc
add
sub
xacquire
mov
lock
ret
mov
jle
outsb
add
pop
jl
push
mov
xchg
add
add
sub
aad
add
roll
sbb
xor
mov
jne
add
sti
pop
je
daa
mov
insl
iret
fwait
in
and
ret
test
add
in
lret
jo
sbb
and
add
add
and
add
add
inc
add
loope
push
repnz
jae
push
xchg
mov
and
repnz
and
cmc
xor
add
int
add
adc
xor
add
add
push
repnz
jg
imul
je
fistpl
add
adc
test
add
pop
add
sub
add
dec
push
add
adcl
pushl
jle
xchg
loop
repnz
mov
add
lods
xchg
rolb
dec
add
lods
popf
lcall
xchg
cld
xlat
push
add
add
stos
xor
add
add
outsl
inc
cltd
xlat
cmpsb
stos
out
aaa
lahf
add
xchg
leave
xchg
movswl
xchg
jmp
pop
scas
jle
push
popf
repz
add
out
add
and
insb
add
nop
push
jge
es
add
sahf
add
fwait
ljmp
xchg
jae
mov
pop
ds
jle
dec
sub
repnz
in
cld
addr16
leave
scas
pop
or
test
lds
add
add
dec
add
add
sbb
push
add
imul
pushl
pop
mov
dec
and
pop
inc
add
mov
add
xchg
xor
push
mov
lock
ret
cmp
push
cmp
insl
repz
mov
add
addb
jae
data16
mov
fcomps
out
sub
sbb
cmpsl
mov
aad
sbb
out
mov
std
add
lds
lods
jno
pushf
inc
add
lods
scas
push
jmp
adc
mov
dec
adc
add
add
push
mov
lock
ret
and
nopl
rolb
xor
lahf
test
and
add
fwait
bound
ror
outsb
add
xlat
xor
add
in
add
adc
add
test
andb
add
sbb
enter
int3
jae
cmp
loopne
xorb
push
adc
enter
sbb
popa
cli
or
xor
repnz
add
cmp
mov
mov
add
sahf
add
cmc
jle
popa
in
stos
cmp
mov
jbe
add
add
jecxz
pop
inc
push
repnz
jae
insl
repz
pop
scas
mov
popf
push
mov
lret
add
nop
adc
cmpsl
mov
rolb
add
dec
adc
adc
jo
filds
nop
dec
add
stc
decl
repnz
jae
jle
xchg
push
insl
insl
imul
ret
mov
push
add
test
xchg
jmp
push
loop
imul
add
inc
add
out
or
mov
cs
icebp
jae
add
adc
ds
pop
sub
std
repnz
dec
test
cltd
insb
add
lret
lahf
pop
sbb
xor
stc
mov
repnz
jae
xor
pop
mov
daa
testb
scas
mov
push
xchg
jmp
pop
mov
pop
push
and
add
pop
add
mov
pop
add
xchg
pop
lret
add
dec
repz
mov
jl
cmp
scas
fcoml
sub
fnstcw
pop
add
repnz
add
stos
cmp
loopne
push
icebp
bound
in
sbb
std
jp
push
cmpsl
dec
add
push
add
mov
mov
mov
inc
add
popf
add
shl
roll
add
add
add
and
clc
jae
mov
xchg
xchg
dec
and
into
iret
sub
jge
daa
adc
xchg
loop
jmp
xor
mov
push
out
xchg
mov
sub
test
inc
add
xchg
ret
repnz
repz
cmc
in
loop
push
add
scas
pop
fs
cli
and
mov
cltd
pushf
daa
or
or
loope
add
xchg
push
xchg
jmp
push
pop
out
mov
jo
xchg
pop
popf
testb
orl
add
xor
pop
popf
popf
xchg
adc
pop
push
add
cltd
adc
sub
gs
aaa
add
push
add
das
inc
add
xchg
js
lods
cmpsl
fimull
add
nop
pop
pop
cmp
inc
add
ret
add
and
xor
inc
push
repnz
jae
mov
mov
mov
mov
jle
mov
enter
add
and
push
mov
lock
ret
adc
adc
mov
sbbb
sub
clc
movsl
mov
mov
add
in
cmp
cmpsb
push
add
out
lret
add
lods
add
leave
sub
mov
shl
mov
jno
add
dec
or
jbe
sbbl
addb
and
fucomi
sbb
aas
pop
test
add
cs
mov
add
cmpsl
and
add
jns
fcomps
pop
add
pushf
ja
add
pop
add
add
push
add
add
add
mov
mov
lock
ret
imul
dec
jns
insl
gs
insl
jno
loope
test
jnp
mov
lcall
add
out
add
inc
add
xchg
jmp
and
pop
cmp
cmp
loope
test
inc
add
lea
xor
cmp
cmp
test
out
add
std
sub
out
je
pop
ss
add
cmpsl
dec
add
and
add
and
xchg
jmp
xor
push
push
mov
xchg
popf
bound
rcll
push
das
mov
dec
mov
fiadds
add
shl
cmpsb
add
add
pop
dec
add
ja
in
movsb
add
pop
mul
add
add
add
clc
cmp
test
rclb
mov
or
and
add
mov
and
add
rcll
add
add
add
fsubl
inc
add
and
add
movl
add
jmp
adcl
add
adc
xor
mov
in
leave
stos
cmp
mov
aas
notl
inc
add
add
xlat
daa
imul
dec
add
add
stc
mov
repnz
jae
jo
pop
mov
insl
xor
xchg
add
repnz
jae
and
push
pop
mov
loop
or
add
repnz
jae
out
pop
push
jle
ret
std
addr16
lock
mov
clc
jae
jo
pop
adcb
dec
aas
jno
push
push
add
pop
incl
add
xor
orb
pusha
add
test
add
outsl
pop
add
scas
mov
mov
sbb
mov
jbe
repnz
jae
adc
mov
xor
rep
jle
and
add
xchg
jmp
mov
mov
mov
xor
xor
add
dec
add
negb
add
and
add
mov
add
in
fstpl
dec
fidivrl
add
inc
add
and
jbe
dec
add
add
add
push
add
mov
aas
add
incb
mov
ljmp
ror
cltd
or
popf
data16
js
or
test
pop
test
push
insb
add
dec
add
or
mov
xor
add
repnz
jae
imul
fisubs
add
add
dec
add
add
or
inc
add
xchg
ret
imul
bound
mov
inc
add
sahf
add
mov
add
arpl
test
fwait
inc
add
add
lcall
add
mov
lahf
dec
push
sbb
cltd
lock
mov
sti
xchg
jmp
repz
mov
mov
mov
add
jecxz
call
add
pop
add
dec
ljmp
repz
mov
xor
clc
adc
add
adc
add
iret
or
inc
add
xchg
ret
imul
mov
xchg
stos
repnz
jae
loop
mov
push
push
mov
and
add
add
nop
loopne
test
lret
add
aad
pop
lods
outsb
add
add
push
add
test
test
movsb
add
cmp
jecxz
inc
add
jae
add
xor
add
add
or
add
add
ret
add
cmp
jne
mov
lahf
add
mov
mov
add
test
outsb
add
ltr
pop
mov
js
icebp
push
adc
add
data16
out
add
add
es
add
rcll
clc
jae
xorb
jo
scas
mov
into
dec
or
mov
ja
sbb
xchg
sbb
aas
mov
xchg
jmp
cmp
pop
imul
push
add
cmp
mov
mov
mov
arpl
and
fmull
rol
mov
add
enter
adc
add
add
push
add
xchg
xchg
jmp
imul
mov
pop
sub
jp
mov
sbb
out
adc
add
xchg
jmp
jo
mov
scas
mov
mov
mov
sub
ret
repnz
jae
mov
mov
mov
mov
scas
mov
cmp
mov
dec
add
sub
cmp
mov
stos
xor
pop
add
clc
sub
or
arpl
add
add
add
pop
add
add
nop
pop
aas
or
stc
mov
repnz
jae
repnz
repz
xor
add
xchg
xor
mov
mov
cli
repz
xchg
add
jg
adc
mov
or
loop
in
sbb
cli
test
movb
cmp
xor
pop
fidivs
leave
add
add
hlt
loopne
or
pop
test
cmp
add
mov
push
pop
add
inc
add
outsb
add
loopne
movsl
inc
add
orb
add
add
jmp
pop
jo
mov
mov
mov
out
loop
add
push
out
inc
push
xchg
jmp
xor
pop
mov
mov
insl
mov
xchg
mov
mov
repnz
add
inc
add
add
mov
mov
add
pushf
add
cltd
add
rolb
inc
add
sub
lret
sbb
or
ffreep
jle
rcrb
push
add
pop
add
sbb
stos
sahf
movsb
dec
add
pop
add
fbld
movl
xor
cld
sub
out
daa
mov
and
add
xchg
int
mov
jmp
mov
jle
insl
mov
mov
scas
stos
pop
je
addr16
pusha
add
daa
add
xor
add
add
cmpl
add
ss
and
add
jmp
jo
mov
loop
repz
mov
pop
adc
mov
xchg
jge
cs
aam
sub
add
add
adcl
pop
mov
xor
repz
sub
enter
jg
add
and
add
and
add
jo
popf
jo
xor
imul
adc
mov
xchg
add
lret
je
repnz
jae
pop
mov
push
xchg
xor
repnz
jae
pop
pop
imul
pop
aas
add
jo
add
lock
loopne
jne
pop
jne
out
dec
add
jmp
sub
add
and
add
adc
or
cmpl
add
cmp
out
and
sbbb
fstps
add
dec
add
lds
fcmovu
enter
inc
and
repnz
jae
push
mov
pop
xchg
pop
mov
repz
add
or
icebp
mov
rcl
into
mov
add
rolb
in
clc
and
add
add
incb
andl
loope
mov
push
add
sbb
cwtl
lret
imul
add
adc
sub
dec
add
add
out
add
add
add
test
fiadds
enter
mov
dec
add
sbb
mov
rolb
xor
in
add
add
clc
xchg
int
dec
push
mov
lock
ret
mov
jo,pt
scas
repnz
popf
aaa
imul
mov
add
sbb
xor
rolb
sahf
fistpll
add
jle
je
push
adc
push
add
adc
adc
add
cmp
rcrl
cmp
fdivrs
mov
lock
ret
jle
insl
and
dec
add
js
not
or
add
mov
push
mov
lock
ret
pop
mov
imul
inc
add
xchg
ret
jo,pt
loop
insl
jle
sbb
jbe
add
movsl
add
data16
mov
push
or
adc
and
add
mov
add
pop
ret
mov
into
inc
add
das
cltd
dec
lahf
jbe
cmp
repz
shlb
test
mov
push
mov
lock
ret
dec
mov
xor
ja
aas
mov
filds
and
add
jmp
test
add
add
add
add
faddl
mov
add
fisttpll
add
xor
loop
cmp
mov
ss
pop
add
add
jns
mov
pushf
fcom
lea
add
add
and
push
add
add
sahf
mov
push
mov
lock
ret
mov
mov
adc
push
push
cmp
add
adc
push
add
int
inc
add
cmp
test
test
add
dec
add
add
pop
add
xor
mov
aam
add
movsl
or
add
sbb
cmp
and
add
push
and
cmovnp
add
mov
icebp
mov
or
mov
mov
cmpsb
call
mov
xchg
ret
xor
dec
add
cltd
adc
mov
loopne
in
xor
add
add
and
add
aas
fisttps
lret
mov
repz
addr16
add
fcomi
or
sarb
cltd
fistl
popf
sbb
cmpsl
call
xor
add
push
add
fdivrp
and
add
fst
sub
stos
jb
mov
xor
add
enter
mov
leave
inc
add
mov
daa
push
add
cmp
mov
add
lcall
push
add
cmpsl
xor
pop
jp
jno
and
cmp
popa
mov
jge
repnz
jae
xor
mov
insl
jo
jle
insl
push
inc
xor
repnz
jae
ds
xchg
mov
add
add
pop
add
fadds
rolb
xlat
movsb
loope
add
daa
leave
add
jae
xor
add
push
push
add
add
clc
jae
and
push
xor
or
fwait
outsb
add
add
inc
call
repnz
jae
mov
repnz
dec
xchg
fbld
sahf
mov
mov
push
add
aad
jge
push
add
pop
ficoml
repnz
cmp
test
push
add
cmpsb
xor
cmp
mov
push
dec
mov
arpl
mov
insl
cmp
pop
add
add
adc
xchg
mov
xchg
jmp
mov
mov
scas
jle
ds
xchg
add
mov
ficomps
jb
adc
add
xchg
clc
jae
mov
loop
scas
dec
mov
out
aam
xchg
xor
add
add
imul
stos
sbb
movl
mov
jae
mov
mov
dec
adc
mov
dec
add
cmp
xchg
lea
ja
std
je
pop
pushf
xor
add
mov
xchg
jmp
mov
ss
pop
mov
jle
lcall
add
xchg
div
repnz
jae
popf
xchg
xor
mov
test
xor
cld
pop
jl
ret
iret
test
add
xorl
push
repnz
jo
cmpsl
inc
add
pusha
add
sbb
add
repz
add
insb
add
test
mov
add
sbb
jo
or
mov
jg
xchg
jmp
pop
mov
mov
xor
movsl
add
setno
sbbl
jo
mov
insl
loop
ss
stos
shll
jecxz
loop
adc
add
or
mov
add
data16
aam
push
sub
aaa
add
js
lahf
sbb
or
sbb
dec
int3
mov
dec
add
cli
add
add
sub
cmpsb
sbb
je
pop
add
iret
or
sbb
bound
call
add
add
dec
add
stos
movsl
xor
add
add
add
dec
sub
mov
in
mov
add
fidivl
push
sub
xchg
arpl
add
push
pop
sub
mov
and
outsl
inc
inc
push
repnz
jae
mov
insl
mov
repz
xchg
bnd
adc
sub
sbb
inc
xchg
repnz
jae
mov
mov
xchg
jo
fstps
or
xchg
dec
add
mov
add
or
mov
in
call
xchg
jmp
pop
mov
scas
jo
cmp
pmaxub
pop
add
mov
dec
add
or
xchg
jmp
mov
push
jle
pop
xchg
xor
add
add
add
push
push
add
add
add
fbstp
cmp
add
adc
call
cwtl
ljmp
movsb
lods
jl
push
cmpsl
add
add
dec
idivl
add
sahf
xchg
push
add
add
pop
int
cld
push
mulb
add
mov
in
or
pop
jne
dec
add
jnp
std
and
add
ds
scas
scas
inc
add
sbbb
inc
add
mov
jnp
pop
jp
push
add
add
add
pop
add
sub
xor
add
jb
in
lods
lahf
cmp
mov
mov
repnz
jae
pop
imul
imul
test
testb
btc
mov
lods
adc
add
std
popa
daa
jae
mov
jo
js
and
add
pop
push
aad
je
repnz
jae
push
dec
and
dec
add
sbb
and
ficompl
or
stos
xchg
clc
jae
imul
popa
cmpsb
add
add
xchg
in
pop
mov
pop
sub
cmpsb
add
add
add
jl
jb
jle
push
adc
add
insl
ret
nop
jbe
in
cmp
imul
cld
dec
jae
dec
add
data16
cmp
fcmovnbe
push
clc
jae
jo
loop
pop
mov
add
jmp
cmpsb
lock
imul
loop
mov
pop
add
pop
add
outsl
push
dec
add
cmpl
decl
xchg
xorb
xor
sub
cmpsl
loop
jge
pushl
lret
jmp
sti
add
add
test
add
inc
scas
call
icebp
adc
fiaddl
fiadds
push
add
aas
pop
fiadds
mov
fimull
add
jo
pop
pop
pop
xchg
jo
dec
bnd
xchg
cmp
push
clc
jae
and
loop
xchg
mov
lock
ret
mov
dec
scas
dec
pop
popf
adc
and
dec
add
add
pop
add
pop
add
xchg
cmp
push
mov
lock
ret
pop
pop
xchg
movsb
roll
add
lods
ficomps
sbb
je
xlat
cmp
add
loop
xchg
add
fs
cmp
jmp
jg
add
les
xchg
jmp
popf
mov
repnz
jle
pop
pop
inc
add
addb
addb
or
es
add
jle
hlt
cmpsb
lods
mov
ret
arpl
add
xchg
sbbb
add
sub
loope
mov
jmp
hlt
out
adc
js
lods
fucomip
mov
bound
cmp
rcll
push
in
das
sub
stc
mov
push
mov
lock
ret
xor
push
add
pop
movsl
adc
adc
clc
jae
scas
mov
xorb
add
mov
add
add
add
push
or
leave
push
add
pop
inc
jmp
add
shr
outsb
add
repnz
insl
fmuls
rorb
cmpsl
xor
scas
dec
add
rcl
adc
add
test
mov
mov
add
xor
arpl
jnp
jbe
mov
push
add
jns
outsl
sahf
xor
add
jb
lods
or
scas
sbb
cmpsl
xchg
mov
repnz
jae
jo
adc
scas
mov
mov
add
add
push
roll
inc
call
repnz
jae
mov
jo
adc
jo
out
in
popa
and
imul
sar
outsb
add
mov
insl
bnd
out
add
xchg
fistpl
mov
add
test
sbb
lods
data16
es
add
and
clc
jae
popf
bnd
mov
xor
add
xchg
mov
add
sbb
and
add
or
bound
xor
add
test
add
add
jo
sbb
add
scas
out
add
lea
outsl
add
faddl
enter
add
add
imul
add
add
xor
out
pop
mov
xchg
jmp
scas
repz
mov
int3
fstpl
xor
add
shlb
cmp
mov
mov
cmc
xchg
and
add
mov
sbb
xchg
jae
and
mov
repz
scas
mov
xchg
loope
add
jmp
xchg
out
add
xchg
ret
imul
add
sub
xor
add
jmp
pop
jo
adc
xor
addr16
add
fimull
and
add
std
add
adc
add
add
hlt
sbb
sub
pop
add
repnz
clc
jae
jo
xchg
xorb
mov
scas
popf
xchg
lea
decb
std
pushl
and
fistps
inc
or
push
add
jnp
gs
or
scas
pushf
mov
jae
mov
adc
mov
mov
mov
stos
add
lcall
cmp
adc
add
push
add
hlt
addl
add
cmp
xchg
inc
inc
mov
push
mov
lock
ret
insl
and
out
sub
dec
add
hlt
orl
aas
add
sbb
iret
mov
sbbb
or
push
add
movsb
ret
call
add
add
andl
addr16
and
add
outsl
add
add
addr16
je
repnz
jae
mov
pop
popf
cmp
mov
pop
xchg
mov
ret
add
add
xchg
jmp
push
jo
jle
push
adc
add
xor
xchg
jmp
xor
repnz
mov
sahf
push
add
jb
inc
add
and
add
add
mov
shrl
nop
stos
add
add
test
mov
addr16
add
add
lahf
push
scas
out
jmp
es
add
pusha
add
inc
add
xchg
lret
xchg
add
or
sti
sub
push
and
out
and
add
inc
add
in
xor
add
add
jg
insl
fildl
add
xchg
add
repnz
jae
mov
jle
sti
inc
sbb
ficoms
jne
mov
mov
jno
es
add
sbb
test
flds
jl
jge
leave
aam
jp
cmp
add
cmpsl
pusha
add
add
add
test
dec
mov
add
loop
mov
stos
aad
fadd
scas
outsb
add
push
add
pop
and
add
pop
xor
add
pop
pusha
add
sub
fisttpl
mov
mov
popa
xchg
mov
push
mov
lock
ret
mov
insl
jo
jo
pusha
add
ret
sub
repnz
and
push
add
xchg
sbb
scas
adc
add
add
add
fimuls
mov
aas
fwait
cmpsb
xor
add
mov
push
sbb
stos
inc
dec
adc
ds
dec
mov
mov
cmp
fcmove
mov
add
or
pusha
add
inc
ret
pop
add
pshufw
add
jmp
push
mov
lock
ret
ds
jo
or
mov
test
mov
lock
ret
mov
loop
add
sbb
mov
push
mov
lock
ret
dec
mov
scas
pop
mov
pop
lds
adc
add
popf
dec
add
pop
das
pop
sahf
add
loope
xor
add
sbb
mov
mov
jmp
sub
dec
pop
gs
add
cmp
rorb
fwait
add
test
add
cld
add
sbb
mov
int3
add
mov
aad
imul
mov
jge
jae
add
stc
mov
xchg
jmp
jo
xchg
mov
adc
mov
mov
sub
imul
cmp
dec
std
and
mov
mov
add
and
add
xchg
add
mov
or
push
into
lahf
popf
xchg
jb
and
add
add
int3
outsl
pop
push
mov
and
mov
adc
ds
insl
imul
add
add
mov
mov
scas
xchg
scas
movsl
jmp
movsb
mov
je
repnz
jae
dec
mov
out
mov
add
add
and
inc
add
scas
popf
outsb
add
sub
stos
add
mov
add
or
imul
lcall
add
repnz
jae
pop
mov
out
imul
pop
add
add
add
add
jno
add
repnz
jae
imul
cmp
xor
cmp
sbb
add
jp
jle
icebp
stc
add
repnz
jae
push
mov
jo
mov
pop
lret
jno
add
jbe
cli
push
out
jae
daa
ja
sbb
pop
add
inc
add
fadds
push
add
adc
add
jae
mov
add
add
testb
popa
hlt
sbb
add
xorl
scas
pop
popf
mov
mov
push
jbe
hlt
test
add
movaps
jnp
push
clc
push
frstor
mov
int3
jne
or
mov
add
push
add
add
lcall
push
add
xor
add
in
add
xchg
in
sub
call
inc
add
pusha
add
or
cmp
jbe
sub
add
add
add
std
add
jnp
mov
repnz
jae
mov
mov
jo
pop
scas
insl
sahf
in
add
jl
jb
cmp
test
inc
iret
inc
add
notl
add
ud1
mov
mov
mov
rol
add
add
add
mov
jb
push
mov
lock
ret
mov
push
mov
xchg
and
push
mov
jns
fistpll
add
jp
stc
pop
xchg
jmp
xchg
out
mov
repnz
imul
pop
mov
aas
mov
dec
adc
add
fldl
add
push
add
roll
mov
pop
add
xchg
cmp
add
and
and
enter
dec
pusha
add
add
mov
mov
pushf
test
lock
ret
xchg
ds
mov
add
testl
into
lcall
xorl
mov
test
clc
jae
mov
out
jo
jae
push
std
and
add
or
fs
sub
idivl
add
add
mov
rcll
sbb
cmp
clc
jae
xor
out
loop
mov
repnz
scas
add
add
mov
insb
add
inc
add
test
push
dec
add
iret
add
icebp
xor
push
add
aas
add
xorl
inc
xor
push
cmp
out
mov
xchg
add
lret
in
inc
add
jae
cmp
push
jo
mov
dec
scas
ret
add
lcall
add
aam
in
fcmovu
rol
or
jns
add
and
imul
pop
call
add
add
and
out
ja
lea
push
add
mov
add
out
and
repnz
jae
ss
mov
and
dec
add
add
roll
add
add
lldt
out
out
lea
roll
int3
add
ljmp
add
add
mov
mov
iret
adc
add
ss
insl
out
mov
ljmp
mov
cmp
or
movsb
mov
cmp
cmp
cwtl
mov
out
fisubs
add
cmpsl
loop
inc
add
stc
mov
repnz
jae
insl
xor
jo
mov
add
leave
ret
add
fwait
orl
les
jo
push
add
jo
outsb
add
xor
add
dec
jbe
mov
xchg
aad
scas
add
add
add
or
scas
movsl
int
sbb
clc
jbe
cli
mov
and
addl
add
add
mov
pop
push
add
out
xchg
int3
mov
lods
add
test
or
add
xchg
jmp
jle
jo
pop
mov
cmp
test
sti
in
int3
hlt
sahf
mov
jmp
mov
mov
jo
mov
mov
mov
cmp
push
adc
fmuls
dec
andl
hlt
in
xchg
inc
push
mov
lock
ret
mov
xor
pop
add
push
imul
pusha
add
cmp
cmp
xchg
push
mov
lock
ret
ss
out
sbb
imul
pop
cmp
add
add
add
leave
mov
lret
mov
jle
cmp
or
or
ss
ja
push
inc
mov
xchg
jmp
mov
pop
jo
jle
imul
add
add
add
mov
bnd
adc
fimuls
add
pop
add
push
add
rcrl
jle
loope
push
repnz
jae
jle
ss
popf
and
lods
add
dec
add
fsubrl
push
add
sub
js
idivb
add
or
clc
jae
mov
mov
mov
mov
popf
add
mov
jmp
pop
pop
insl
and
mov
add
ret
mov
adc
add
and
push
add
int
incl
dec
lea
lock
ret
loop
xor
insl
mov
lret
add
add
jne
add
add
cmp
pushl
mov
jo
push
daa
hlt
add
add
mov
xor
adc
add
sahf
fnstcw
push
push
add
mov
out
xchg
mov
add
mov
cmpb
jmp
jle
mov
cmp
ds
mov
pop
fldl
push
into
xchg
adc
sbb
inc
add
pop
jge
add
sbb
add
test
int
fistpll
add
into
lret
test
sub
mov
add
out
dec
adcl
add
mov
dec
adc
xchg
push
repnz
jae
imul
pop
jo
pop
mov
add
cmp
and
es
jne
outsb
add
mov
jae
push
pop
jo
adc
pop
out
add
cmp
jle
pop
xchg
xchg
int3
int3
xor
movb
add
loope
mov
adc
icebp
lahf
bnd
ret
pop
add
push
jl
js
aam
add
daa
add
lcall
dec
add
mov
cmp
daa
fdivrp
pushl
xor
mov
and
or
repnz
jae
pop
out
mov
pop
cmp
mov
popa
adc
add
popf
lret
push
add
in
fsubp
jge
dec
add
add
add
add
add
rcrl
xor
fildl
scas
sarl
add
pop
add
cli
add
jae
mov
xor
scas
mov
jo
or
loop
push
add
sbb
mov
add
popa
and
add
arpl
sub
pop
sbb
stos
inc
mov
repnz
jae
jle
push
jo
scas
mov
dec
cltd
das
popf
jecxz
in
andb
sub
and
add
filds
jnp
add
add
scas
rcl
adc
add
add
push
add
les
pop
add
ret
cli
add
popf
cmc
jnp
stc
add
pushl
addl
jb
xchg
mov
int
and
mov
push
add
mov
jmp
xor
hlt
iret
cmp
inc
add
cmp
test
loop
test
addr16
add
pop
test
add
test
insl
fstl
lods
mov
xor
add
and
add
add
dec
add
sub
jge
out
or
push
add
add
and
add
adc
test
cwtl
addb
xchg
ret
push
dec
pop
push
ss
add
or
push
jo
pop
push
add
imul
add
sbb
rolb
add
add
mov
pop
add
imulb
ljmp
or
mov
add
inc
add
pop
sub
mov
sub
inc
and
push
mov
lock
ret
mov
mov
mov
jecxz
dec
add
aas
inc
mov
xchg
push
or
sub
popf
int3
cmp
sub
inc
mov
repnz
jae
jo
push
insl
mov
mov
sbb
dec
mov
push
add
bound
test
clc
jae
pop
ss
imul
or
mov
mov
cmp
fimuls
clc
jae
mov
repnz
out
jo
add
lahf
pop
add
push
add
add
daa
add
pop
call
push
add
add
fstpl
imul
push
sub
int
sub
xorb
fidivl
pop
js
aam
and
add
loopne
lods
push
add
in
add
fidivl
aaa
add
mov
jo
mov
ret
sbb
lahf
sub
jno
add
aam
es
rcrl
inc
xor
lea
aad
push
add
lahf
cli
cltd
and
stc
mov
xchg
jmp
cmp
ds
imul
mov
lock
ret
mov
mov
xor
sarl
fs
dec
add
jmp
insl
mov
pop
xchg
push
xor
pop
sbb
mov
jnp
testl
add
orb
add
cli
imul
test
jno
lds
add
jnp
adc
add
fcomps
add
add
rclb
push
add
int3
add
push
add
and
sti
fsubp
jo
fidivrl
mov
in
add
cmp
add
add
add
mov
add
add
mov
adc
jo
push
add
movsb
add
cmc
add
into
xor
add
filds
or
movsl
into
sub
dec
addr16
mov
jmp
add
and
add
cld
add
xchg
lds
cmp
jne
iret
out
jne
imul
mov
cmpsl
push
xor
decl
xor
add
ja
add
cmc
jecxz
or
mov
add
loopne
outsl
pop
add
add
push
add
pop
fsubrl
cli
sub
add
inc
adc
add
pop
add
add
and
push
or
mov
add
sub
cmp
push
jnp
push
int3
add
iret
test
add
xor
rolb
dec
add
cli
mov
add
sti
cmp
xchg
cmp
push
ljmp
dec
add
bound
sarl
aaa
scas
add
and
inc
mov
testl
lock
add
adc
and
add
cmc
repnz
jae
cmp
mov
scas
mov
push
add
jbe
push
add
pop
fstpt
out
int3
add
out
add
inc
cmpb
or
xor
add
insl
jecxz
out
aas
xchg
xchg
movsb
mov
and
add
xlat
or
repnz
inc
add
pop
sbb
inc
add
mov
enter
shll
roll
cmpsl
out
push
add
add
add
add
repnz
jae
xor
mov
dec
imul
mov
push
mov
lock
ret
ss
mov
pop
xchg
mov
push
clc
jae
pop
popf
pop
insl
cmp
dec
inc
bound
rol
into
or
std
mov
dec
add
add
out
sbb
sub
jg
inc
add
std
add
dec
add
mov
sbb
xlat
pop
sub
test
cmp
lock
add
adc
add
call
je
and
add
or
int3
sub
or
add
aas
add
add
clc
jae
insl
mov
out
pop
mov
dec
add
iret
cmc
aam
cmpsl
ret
adc
add
sbb
lock
decl
mov
pop
pop
xor
cmp
stos
pusha
add
or
mov
aam
push
xchg
xchg
jle
sbb
lret
mov
pushf
add
mov
push
pop
mov
add
cmp
add
xchg
scas
cmpl
add
push
add
add
add
mov
jp
out
jl
xor
add
sub
inc
add
add
mov
jp
sub
fbld
inc
pushl
push
mov
lock
ret
insl
mov
mov
mov
add
enter
incl
add
movsb
and
lahf
xchg
iret
mov
add
or
xor
dec
add
adc
add
sub
or
add
or
fbld
stos
add
test
add
subl
lock
jae
scas
mov
out
add
movb
insb
add
mov
add
add
add
popa
mov
add
clc
jae
pop
loop
mov
insl
mov
mov
repz
add
and
test
add
add
movsb
add
mov
dec
add
ror
cmp
or
mov
add
sub
leave
flds
mov
testb
xor
xchg
fsubs
add
adc
fisubl
and
jmp
fildl
xchg
add
add
insl
mov
mov
jmp
mov
mov
jle
push
mov
xchg
jle
pusha
add
add
outsb
and
clc
jae
adc
pop
xor
jo
xorb
add
mov
int3
fildl
add
add
push
mov
jb
fwait
xchg
das
cmpsl
mov
pop
add
fstl
inc
ret
xchg
jmp
pop
mov
pop
push
jo
repz
scas
xor
add
xchg
push
xchg
jmp
mov
mov
pop
jo,pt
mov
mov
scas
cmpsb
out
test
hlt
add
into
fmuls
mov
cmp
sbb
cmp
cmc
mov
add
lods
xlat
inc
sub
nop
out
inc
add
add
out
add
lock
ret
mov
insl
mov
mov
cmp
gs
push
repnz
jae
rep
out
ss
xchg
rep
jle
add
pop
push
push
add
mov
sub
loope
xchg
xchg
ret
mov
mov
lock
ret
insl
insl
cmp
jo
pop
push
adc
int3
addr16
pop
icebp
xor
enter
add
pop
sub
mov
jmp
dec
insl
xor
pop
xchg
xor
pop
add
add
clc
jae
mov
cmp
repz
mov
test
xor
add
add
ds
mov
and
mov
popa
jmp
add
add
add
pop
add
frndint
and
pop
mov
add
or
sbb
cmp
cmp
inc
push
add
sbb
clc
and
add
lods
nop
or
fisubs
add
scas
and
add
push
add
adc
cli
sbb
push
add
or
pop
add
mov
xor
imul
scas
jmp
test
mov
sub
dec
add
and
add
add
jae
pop
loop
insl
push
mov
mov
inc
add
cmp
xchg
mov
dec
jp
mov
add
sbb
jmp
add
ja
add
cmp
mov
add
cwtl
repz
push
add
mov
popl
push
add
pusha
add
jecxz
add
stos
sbbb
add
add
out
pop
add
out
das
fdivr
in
dec
add
movsl
roll
add
mov
and
add
sub
popf
inc
fbstp
in
lds
add
push
sbb
jge
bound
loope
das
mov
shl
clc
jae
mov
and
mov
add
repnz
jae
pop
pop
jle
adc
mov
push
adc
sbb
push
push
mov
cmp
sbb
imul
icebp
clc
ficomps
add
jo
pop
ret
add
add
xor
mov
add
xor
add
add
pop
add
movsb
mov
out
and
add
aam
pop
xchg
jmp
cmp
mov
mov
insl
pop
adc
mov
mov
mov
inc
add
lods
add
jae
ss
mov
scas
cmp
xor
mov
stos
mov
add
add
lock
ret
adcb
mov
test
sbb
push
xchg
lcall
lods
pop
mov
jle
lods
or
mov
fsubrs
sbb
imul
add
xchg
add
push
mov
lock
ret
scas
pop
ds
mov
repz
repz
add
add
add
sti
dec
ret
cmc
jo
dec
add
add
testb
mov
add
clc
jae
xor
pop
jo
mov
push
add
push
add
add
popa
das
mov
je
and
add
push
lods
pop
inc
add
outsb
add
subb
out
inc
pop
int3
dec
movsb
pusha
add
xchg
sti
aam
sub
mov
add
jne
repnz
jae
cmp
mov
ss
lret
test
mov
out
repnz
jae
jo
xor
popf
pop
mov
inc
push
repnz
jae
scas
sbbb
xor
bound
adc
pop
xchg
xchg
jmp
mov
mov
mov
mov
or
add
int
add
add
add
or
cmp
add
xchg
pop
adc
outsb
add
xor
add
insb
add
cmpsb
ret
es
add
jle
sub
lods
dec
add
mov
pushf
cmp
add
push
xorl
add
incb
or
outsb
add
push
add
jle
jns
add
sub
sti
sbb
mov
add
jecxz
add
add
xorb
test
add
add
xchg
les
cmc
and
or
sub
cmp
pushf
jecxz
push
hlt
add
add
sbb
xchg
and
add
stos
bound
add
mov
cmpl
xchg
jmp
jle
mov
imul
testl
sub
fsub
pop
add
push
aaa
add
sbb
sbb
xchg
add
stc
decl
repnz
jae
dec
mov
pop
push
mov
mov
push
xchg
lahf
mov
xchg
jns
sub
incb
add
clc
jae
pop
imul
call
dec
add
insl
push
enter
jns
cmpsl
jo
sarb
or
lock
popf
imul
add
pop
add
stos
xchg
mov
lock
ret
jle,pt
mov
push
sbb
and
add
dec
dec
add
or
cltd
sub
shll
in
adc
cmp
and
fisubs
int3
int3
stc
push
repnz
jae
push
scas
jo
jle
pop
and
dec
add
lods
lea
in
adc
xlat
sti
stos
cmpsb
fcmove
lods
fsincos
mov
dec
mov
pop
popl
push
add
ret
popf
dec
add
mov
adc
mov
jle
mov
cmpsl
mov
xchg
inc
adc
mov
jbe
mov
repz
inc
add
fstl
hlt
add
cmpsl
or
mov
addr16
add
xchg
xchg
clc
jae
adc
mov
insl
mov
xor
push
pop
jne
movsl
inc
add
or
cltd
pop
clc
mov
pop
add
repnz
add
mov
repnz
jae
ss
imul
add
loop
lret
add
jg
movsb
mov
and
clc
jae
mov
mov
inc
add
outsl
inc
add
mov
jns
mov
add
ds
mov
sub
mov
adc
movsb
iret
jns
popa
add
mov
insl
add
pop
add
inc
add
add
mov
add
out
push
add
mov
add
sub
xor
add
dec
ja
push
cmpsb
cmp
daa
mov
sub
aaa
lret
flds
or
fiaddl
pop
add
adc
add
int
add
cs
dec
xchg
add
clc
jae
mov
out
mov
xorl
fimull
loopne
add
add
and
add
sbbb
subl
add
je
jge
pop
add
xchg
or
inc
add
jns
adc
cli
mov
mov
lock
ret
xor
adc
clc
sub
pop
add
lea
push
add
add
jecxz
xchg
cli
les
fiadds
push
sbb
add
in
mov
xor
fs
mov
lock
ret
popf
mov
and
rcr
add
or
ja
xor
mov
dec
add
add
repz
add
add
std
jle
xor
add
xchg
sbb
cmp
pop
ja
push
add
fistps
les
ror
lret
mov
add
loopne
test
int3
cmp
or
inc
push
sbb
xor
sbb
add
jb
jae
sub
ret
dec
adcb
ja
shlb
mov
mov
data16
push
add
sub
xlat
imul
adc
and
repnz
jae
mov
pop
dec
mov
cmp
xor
add
sbb
add
movsl
add
push
ja
xchg
repz
mov
stc
mov
xchg
jmp
mov
jo
xchg
pop
mov
mov
mov
add
cld
add
add
xlat
jno
leave
add
add
cmp
iret
push
add
jl
or
or
nop
push
add
lahf
pusha
add
int3
xchg
cmp
push
cmp
xchg
jp
aam
mov
add
add
push
scas
pop
lea
inc
fistps
sub
mov
add
or
shrd
jle
push
xor
add
dec
add
jae
rolb
inc
add
mov
lods
mov
xor
ret
adc
repz
mov
push
aaa
adc
xchg
pop
lock
arpl
push
add
add
test
jge
ffreep
jae
xor
add
imull
and
or
cmp
xor
add
dec
add
imul
sbb
jae
mov
repnz
jae
orb
mov
ss
imul
add
testl
mov
outsb
add
add
add
fwait
jo
adc
sbb
pusha
add
leave
xchg
jmp
loop
ss
mov
pop
mov
insl
jo
fildl
cli
cmp
out
xor
add
pop
pop
int3
pop
ret
add
rolb
add
or
mov
addr16
lcall
add
sbb
movsl
mov
bound
cwtl
lea
add
scas
in
dec
xchg
xor
add
or
addr16
jecxz
add
cmp
jae
add
cmp
cld
jp
sub
cmp
out
xchg
add
add
xorl
add
ss
and
mov
mov
jae
adc
add
clc
addr16
in
gs
add
add
add
xchg
fsubrl
add
cmp
dec
add
cmpl
pushl
mov
ds
cmp
sbb
movsb
in
jne
pop
add
add
out
cli
fcoms
cli
add
mov
inc
add
orl
jmp
mov
mov
xor
dec
add
add
scas
add
add
add
loopne
add
faddl
xchg
add
out
fwait
in
ljmp
add
jge
pop
add
int3
cmp
add
add
lcall
je
mov
mov
call
daa
add
push
add
jae
insl
loop
pop
mov
xor
add
ja
add
mov
adc
add
sub
and
add
outsl
add
add
out
adc
add
xor
add
push
add
add
add
cmpsl
int3
pop
cmp
jmp
xchg
adc
xlat
in
out
in
data16
xchg
pusha
add
jbe
in
dec
add
stos
cmpsl
or
cwtl
mov
stos
pop
or
fimuls
inc
add
rclb
aaa
fiaddl
fisttps
aas
dec
add
cmp
test
push
test
or
pushf
cwtl
out
adc
add
lahf
imul
cmp
dec
add
cmp
insb
add
add
and
or
insl
mov
add
add
ljmp
movswl
repnz
jae
ds
loop
mov
mov
xor
sbb
and
add
fwait
or
lock
ret
out
ds
pop
and
push
outsb
add
rcl
shlb
roll
adc
add
pop
add
inc
add
cmp
int
pushf
add
repnz
jae
scas
dec
repz
scas
jo
mov
jo
xor
stos
jmp
pop
add
adc
add
and
sbb
mov
cmp
xor
add
dec
mov
add
and
mov
ja
cmpb
jbe
loope
add
add
add
sub
mov
add
xchg
jmp
jle
insl
mov
ds
lea
fwait
add
cltd
je
jb
out
pusha
add
sub
loope
fs
popf
sbb
add
cmc
mov
arpl
or
adc
xchg
mov
pop
add
push
clc
jae
pop
repz
ss
dec
jnp
into
xor
add
ljmp
popf
xorb
sbb
mov
call
repnz
jae
xor
mov
add
pop
cli
add
shlb
mov
sahf
mov
or
xchg
repz
dec
add
inc
add
repnz
jae
mov
repz
mov
push
imul
xchg
jno
scas
jae
sub
and
mov
mov
in
add
call
jmp
push
xor
dec
pop
jo
xor
dec
inc
mov
loop
repnz
jae
mov
insl
pop
mov
add
mov
xor
add
inc
repnz
jae
mov
mov
xor
dec
add
push
ljmp
sub
mov
in
add
loope
sub
add
mov
cmpsb
call
aam
outsb
add
or
hlt
mov
stos
fsubs
add
loopne
popl
fcmovnb
aas
xchg
fldt
add
add
inc
add
adc
add
xchg
rclb
repnz
add
xchg
ret
mov
imul
and
mov
sub
add
stos
add
lock
push
mov
lock
ret
mov
repz
mov
jl
cmpb
gs
xchg
fmull
add
dec
add
xor
into
enter
fadds
ret
inc
jle
ss
or
and
add
push
mov
subl
js
mov
add
stos
jg
add
push
add
or
add
add
je
call
push
add
add
pop
xor
jno
jmp
push
mov
lock
ret
xchg
pop
mov
repz
mov
push
mov
lock
ret
out
bound
xor
add
lods
push
add
adc
sbb
add
mov
cmpsl
into
dec
fdivr
gs
sbb
add
mov
aas
push
bound
and
lods
add
in
push
add
add
add
add
inc
mov
repnz
jae
ds
ss
jecxz
or
lcall
add
add
inc
add
mov
jmp
mov
mov
push
pop
mov
pop
ds
dec
jno
je
dec
add
dec
stos
hlt
lret
mov
cmp
push
add
dec
add
xor
add
add
add
mov
xor
add
roll
add
mov
mov
xor
and
adc
add
rclb
insl
inc
add
xchg
ret
ss
mov
repnz
movsl
sub
out
or
repnz
jae
insl
jo
jo
pop
cmp
jle
cli
add
push
or
rcrl
lods
pushf
cmp
in
add
or
sbb
push
add
test
mov
add
rep
repnz
jae
pop
pop
cmp
and
jo
lcall
add
sahf
xchg
repnz
jae
mov
xor
mov
sbb
data16
dec
add
int
xlat
scas
cmp
add
and
fisttpll
add
dec
add
movsb
dec
add
stos
lds
xchg
cmp
add
add
inc
and
into
popa
push
add
out
out
mov
lcall
inc
add
jp
or
cli
call
cmp
sbb
add
repnz
jae
xor
out
shrb
rolb
mov
pop
repnz
jae
pop
push
jo
pop
scas
ds
outsl
data16
int3
data16
mov
sbb
cmp
jo
negl
push
repnz
jae
insl
xor
mov
pop
cmpsl
xchg
adc
add
into
adc
add
mov
xchg
jmp
ss
imul
jmp
mov
ds
adc
xchg
push
fwait
add
push
clc
jae
jle
imul
lret
idivl
add
add
sub
out
lret
add
std
add
pop
add
jbe
lcall
add
mull
mov
push
add
add
cmpsb
add
add
cltd
jle
sub
mov
repnz
jae
out
mov
loop
mov
pop
and
xchg
and
and
mov
ss
ljmp
je
adc
jno
xchg
lock
jne
push
mov
lock
ret
dec
mov
rcr
jle
sti
dec
add
loope
xchg
roll
jmp
rep
popf
mov
mov
mov
push
mov
arpl
and
jnp
rorb
add
add
xchg
jmp
pop
pop
push
jo
push
jo
add
fisubs
sahf
or
fistl
add
add
add
add
icebp
mov
inc
into
or
in
cmp
add
add
mov
add
push
jb
aas
pop
add
add
arpl
jl
add
add
mov
or
and
xchg
jno
cmp
stos
xchg
mov
push
mov
lock
ret
jo
mov
xor
movsb
dec
add
mov
lock
ret
repnz
insl
jo
mov
add
mov
aad
add
jo
mov
sub
repz
jae
popf
ds
pop
mov
jle
pop
push
in
das
addb
pusha
add
inc
add
cld
inc
mov
loopne
shrl
add
jo
add
imul
cmpsl
stos
dec
and
add
add
repnz
cld
addr16
add
sbb
xchg
mov
repnz
jae
pop
popf
mov
mov
push
lcall
push
sub
dec
push
add
outsb
add
pop
fwait
cli
mov
add
mov
repz
add
pushf
mov
lods
scas
xor
cmp
out
jae
pop
add
add
or
out
mov
add
fwait
inc
push
jae
std
insb
add
cli
add
fsub
fwait
sub
test
bound
cmp
insb
add
ja
push
add
add
jle
add
mov
or
addr16
inc
add
clc
jae
xor
xor
repz
sub
fnsave
add
sbb
ret
jle
imul
rolb
push
pop
add
add
imul
inc
push
repnz
jae
out
pop
pop
out
insl
pop
push
outsb
add
xchg
jmp
insl
adc
pop
mov
popf
xor
leave
cltd
in
fnclex
divl
pop
add
pop
add
inc
add
imul
cmp
dec
add
add
jo
or
push
add
xchg
add
es
add
jmp
ds
mov
jo
mov
mov
imul
lods
add
add
inc
add
mov
add
ljmp
mov
daa
aam
aas
insb
add
add
jo
test
add
add
add
cmp
jp
mov
mov
mov
imul
ja
aas
iret
es
mov
and
add
jle
jns
inc
add
lods
xor
add
lret
mov
dec
add
and
sub
imul
xchg
ror
mov
outsl
sbb
push
add
add
sbb
cmp
add
push
add
add
dec
add
mov
cmpsb
call
xchg
xor
ret
jo
xchg
mov
mov
lret
add
pop
add
pop
sbb
fistps
sbb
adc
add
add
add
add
add
test
cld
popa
or
pop
add
add
pop
add
out
add
icebp
pop
dec
add
or
shrl
push
ljmp
pop
jecxz
and
into
push
add
mov
mov
mov
aam
xor
add
movsl
cmpsb
gs
add
pop
stos
adc
add
outsb
add
mov
lock
ret
mov
jo
adc
or
mov
cmp
add
dec
das
mov
add
dec
add
pop
add
pop
cmp
mov
mov
add
bnd
sti
mov
add
adc
add
loopne
add
add
or
add
cli
add
add
call
add
push
add
jecxz
rcrb
ja
rcl
mov
add
mov
jns
loope
jnp
mov
add
mov
test
add
inc
add
mov
inc
add
xchg
ret
mov
scas
adc
mov
out
sub
pop
push
add
lcall
add
sbb
jge
or
shrl
jnp
add
adc
add
jae
add
aam
jo
cwtl
adc
je
stc
pop
repnz
jae
scas
cmp
mov
mov
mov
mov
xorb
add
add
ds
mov
test
and
add
pop
push
mov
lock
ret
push
mov
insl
mov
xchg
pusha
xchg
jmp
insl
mov
popf
popf
loop
pop
jo,pt
repnz
add
add
push
or
mov
push
add
jae
cmc
sbb
scas
repz
cld
stos
sbb
int
mov
jl
repnz
negl
jmp
add
dec
dec
test
addb
mov
mov
jmp
push
mov
lock
ret
imul
mov
pop
xor
movsl
mov
test
xorb
push
or
insl
insb
add
inc
xor
repnz
jae
pop
pop
mov
dec
mov
out
mov
add
dec
add
dec
out
add
add
in
add
add
ljmp
lcall
xchg
jmp
mov
xor
pop
pop
rol
mov
sbb
sub
inc
into
and
add
ret
hlt
mov
test
inc
add
xchg
ret
xor
repnz
mov
xchg
fmul
repnz
add
push
xchg
test
clc
jae
xorb
out
sbb
stos
neg
push
add
shlb
cmp
clc
jae
mov
imul
out
add
cwtl
add
or
maxps
add
sbb
in
sub
mov
shl
or
xchg
jmp
jo
pop
loop
mov
addb
inc
add
add
or
fidivs
mov
insl
and
add
xchg
cmp
add
stc
jmp
repnz
jae
xchg
mov
jo
xchg
repnz
rolb
mov
repnz
jae
imul
mov
mov
int3
jmp
pop
add
sbb
push
add
nop
inc
sahf
andb
mov
sbb
xchg
sub
add
lret
hlt
push
add
adc
aam
add
hlt
lods
jmp
pop
jno
je
xchg
jmp
adc
dec
xor
mov
repnz
popa
push
ret
add
add
add
pushf
mov
aad
aaa
cmpsl
add
scas
adc
in
inc
add
add
in
sub
pop
add
add
inc
aam
add
mov
icebp
in
add
pop
add
mov
insl
add
mov
jmp
pop
mov
jo
dec
xchg
jo
mov
mov
rclb
pop
add
shl
je
test
out
add
cmpsb
testb
daa
rolb
mov
popa
add
clc
jae
pop
ds
push
adc
dec
mov
add
pop
add
add
add
adc
add
add
divl
push
add
adc
call
repnz
jae
out
mov
insl
out
jmp
movsb
sub
sbbl
jmp
mov
jo
mov
pop
popf
jo
xor
add
enter
loope
shll
push
ja
add
add
add
add
mov
rclb
mov
xor
ret
mov
push
ds
mov
add
push
lds
adc
or
push
add
add
add
or
xor
add
mov
int
add
aaa
aam
mov
add
cltd
adc
add
insb
insb
add
push
mov
lock
ret
mov
insl
xorb
addr16
xchg
mov
push
mov
sub
sbb
inc
add
add
adc
adc
xchg
xchg
inc
jge
sbb
je
mov
xchg
jmp
scas
pop
push
mov
pop
jo
insl
mov
pop
push
mov
lock
ret
xor
xor
pop
cmp
pop
dec
add
add
push
adcl
loope
sub
testl
decl
xor
pop
add
arpl
sti
inc
add
mov
test
sar
repnz
jae
mov
mov
mov
call
add
add
adc
pop
add
add
ljmp
cmp
call
add
jns
pop
imul
pop
movsb
add
fdivr
dec
add
jmp
cmp
push
scas
ss
mov
mov
dec
and
add
mov
jae
pop
insl
mov
and
mov
jno
mov
test
sbb
mov
xchg
jmp
jo
mov
mov
mov
adc
popa
lock
test
jp
stos
push
and
mov
roll
cmc
sub
insb
add
add
xchg
and
add
sub
and
repz
js
adc
add
cmp
movsb
or
scas
popa
aaa
xor
mov
xor
jmp
loop
std
iret
jecxz
faddl
repnz
add
adc
fidivs
test
mov
insb
add
xor
aad
push
cmpsb
add
dec
add
xchg
jmp
mov
scas
out
imul
popa
dec
add
sub
sub
int3
jge
fwait
sbb
gs
lcall
movsl
xchg
jne
or
mov
ret
mov
daa
ss
xor
mov
in
mov
or
shll
movsl
cs
inc
add
popa
cld
lock
add
mov
mov
pop
out
sti
fimull
cmp
insl
in
test
loopne
jl
mov
lock
ret
repnz
pop
cmp
cmp
add
fisttps
jb
sub
lock
scas
leave
out
mov
cld
pop
imul
add
add
mov
fbstp
cmc
add
adc
addr16
add
mov
add
sbb
out
pop
out
fimuls
dec
adc
xchg
xchg
test
mov
lock
ret
mov
insl
mov
add
add
add
into
fldt
add
nop
pop
add
push
add
jmp
inc
add
bound
or
movsl
jl
ja
icebp
aam
add
movsl
lahf
iret
pop
mov
loop
punpckhbw
testl
clc
jae
repz
scas
xor
add
xchg
repz
add
ret
adc
push
xor
add
inc
add
test
insb
add
add
add
mov
clc
jae
mov
pop
mov
subb
cmp
ljmp
out
mov
idivl
insl
pop
aad
aad
add
or
adc
rolb
mov
add
mov
add
xor
mov
repnz
jae
repz
insl
ds
mov
mov
push
add
fsub
out
ficomps
fisttps
andl
pushl
imul
or
testl
add
adc
inc
push
repnz
jae
mov
pop
dec
insl
mov
jo
xchg
mov
and
add
lods
push
lods
adc
xor
push
dec
add
add
lcall
call
xchg
jmp
mov
jo
cmp
mov
das
push
inc
add
movb
lods
push
add
add
clc
addr16
mov
jecxz
add
add
in
out
mov
out
add
pushf
push
clc
jae
mov
mov
push
add
popa
add
add
pushf
mov
rorl
lods
mov
dec
push
xchg
jge
daa
mov
pop
ret
cmp
xor
add
adc
inc
cltd
out
test
mov
movl
add
add
insl
jmp
mov
add
adc
xor
loope
add
or
lods
push
popf
rcl
sbb
lret
sbb
cmp
out
jge
sub
ljmp
add
loope
cmp
xor
add
sahf
cmpsb
xchg
or
mov
aaa
jmp
inc
add
add
lcall
pop
push
add
or
jecxz
jle
rorl
xchg
push
jno
push
mov
add
add
jns
fsts
add
movsl
add
data16
cmp
fdivrs
cmp
aad
or
into
dec
add
mov
add
loope
add
les
ja
push
lea
subl
push
mov
loop
jle
insl
loope
xchg
mov
add
movsl
stos
ret
dec
add
mov
push
pop
js
aaa
jnp
sub
clc
sbb
push
push
cmp
shrl
lea
pop
add
mov
xchg
jmp
popf
pop
push
insl
pop
loop
ss
jecxz
movsb
add
repnz
jae
repnz
imul
scas
pop
sbbb
fstl
add
popa
push
push
pop
add
xchg
call
jle
insl
xor
mov
loop
sarb
aad
mov
inc
lret
lcall
ret
and
add
rolb
lret
pop
jle
scas
sbb
sbb
sbb
dec
add
mov
add
inc
add
pop
repz
push
xchg
jmp
xor
push
adc
jo
jle
imul
lods
add
add
popl
and
add
jnp
pop
pop
add
jb
aad
xchg
mov
repnz
jae
loop
mov
repnz
popf
mov
push
add
verw
sub
sub
add
icebp
sti
cmp
dec
add
clc
unpckhps
add
rolb
aam
push
add
add
xchg
enter
mov
aam
xchg
push
repnz
dec
add
dec
pop
mov
add
add
add
adc
add
lret
lods
and
add
test
out
ret
mov
lea
adc
add
leave
push
call
push
add
out
pop
sub
inc
add
repnz
jae
pop
xchg
sbbb
pop
add
stc
pop
xchg
jmp
mov
and
push
and
add
add
xchg
pop
adcb
add
sahf
pop
add
push
add
popf
adc
add
push
clc
jae
mov
mov
out
add
je
gs
xchg
add
repnz
jae
push
jo
loop
jo
dec
lods
cmp
jne
lock
iret
mov
lahf
pop
add
movsb
inc
stos
iret
sbb
mov
dec
add
xor
add
inc
xor
add
sbb
pop
add
add
or
enter
jo
and
add
arpl
ss
add
pop
add
dec
add
add
aad
push
inc
add
jnp
int
add
call
arpl
sbb
imull
cmpb
test
add
sub
push
add
imul
iret
ljmp
sbb
cmp
mov
xchg
jmp
xor
insl
adc
dec
rep
mov
jmp
mov
mov
jg
mov
repnz
jae
push
and
pop
mov
addl
test
out
inc
add
cmp
jge
repnz
jae
imul
repnz
add
mov
and
add
fwait
inc
add
mov
add
add
clc
in
in
add
nop
adc
je
mov
add
in
add
add
sbb
push
outsb
add
ss
add
aaa
inc
add
movsb
scas
jecxz
mov
add
mov
fdivrs
jle
mov
adc
add
sbb
inc
add
and
add
stos
das
imul
data16
push
lock
addb
add
xor
push
mov
repz
jg
scas
xor
add
rolb
add
push
or
lea
push
js
pushf
aad
adc
add
lret
add
jbe
repnz
jae
mov
pop
pop
xor
adc
fbld
mov
xchg
fmull
jae
pop
and
mov
mov
xorl
data16
insl
out
inc
add
adc
add
cmp
or
and
xchg
jmp
mov
jo
ss
insl
out
movsl
rep
mov
adc
add
add
cmp
jmp
je
jo
insl
in
add
dec
add
mov
lods
push
add
stos
xorl
fisubs
and
das
jp
mov
test
cmpb
cmp
add
into
jo
xor
fwait
sbb
lret
push
stc
mov
push
mov
lock
ret
ss
push
mov
pusha
add
mov
dec
add
add
pop
ja
pop
add
add
and
fisubs
cld
popf
xor
and
push
ljmp
cmp
stos
mov
and
popa
jnp
mov
push
mov
lock
ret
jo
mov
mov
mov
xchg
jmp
and
imul
aas
lods
jns
mov
lods
dec
mov
out
dec
add
movsb
inc
shll
pushf
outsb
add
xchg
jmp
pop
mov
jle
popf
out
mov
pop
popf
bound
add
add
or
repnz
jae
pop
jo
mov
mov
jle
enter
add
pop
add
xchg
add
andl
jmp
mov
repz
sbbb
pop
mov
out
sub
fisttpl
add
pop
std
mov
xchg
jmp
jo
imul
add
out
push
repnz
jae
ds
pop
push
mov
and
in
xor
fwait
jo
fsubrl
int
mov
repnz
jae
insl
mov
imul
mov
cmp
cld
jne
dec
je
sbb
enter
std
enter
add
clc
jae
mov
mov
scas
mov
xchg
pop
xorb
add
adc
pop
add
add
mov
add
xchg
mov
fwait
push
popf
and
dec
add
outsl
add
call
inc
cmpsb
inc
add
ds
dec
lret
mov
in
data16
shll
cld
ret
outsl
mov
or
repnz
jae
repz
jle
pop
push
loop
out
xor
fucomp
insl
js
add
lahf
cmp
mov
popf
mov
stos
add
push
inc
add
in
xlat
jl
xchg
pop
cmp
stos
incb
inc
mov
push
mov
lock
ret
push
jo
pusha
add
pushf
add
add
stos
mov
cld
add
inc
add
notl
in
jmp
dec
insl
or
jns
add
pop
add
test
fsub
iret
data16
lret
imul
add
inc
add
mov
aad
push
cld
int3
movsl
add
inc
testb
out
mov
pop
pop
add
dec
fldcw
push
scas
add
add
lcall
jmp
pop
add
gs
mov
jge
xchg
jmp
mov
xor
adc
cmp
pop
mov
add
or
push
stc
add
cmp
inc
add
or
test
les
xchg
out
xor
add
mov
ret
mov
pop
call
out
pop
add
or
or
add
add
add
add
cmp
fwait
push
add
inc
inc
cmp
xchg
jmp
ds
mov
mov
pop
pop
mov
cmp
push
add
cmp
sub
mov
mov
lock
ret
mov
pop
push
ss
lret
push
test
lea
aam
mov
pop
xor
add
add
clc
jae
jo
repz
loop
pop
pop
pop
jp
push
xchg
add
rcll
xorb
add
mov
push
add
mov
add
push
sti
pop
scas
gs
push
add
inc
ret
add
mov
lock
add
add
xchg
fbstp
add
repnz
jae
mov
xor
dec
jmp
add
lds
mov
add
jnp
add
mov
addb
and
mov
mov
and
popf
push
add
fcoml
loope
das
jb
push
xor
fistpll
and
imul
clc
jae
insl
jle
jo
pop
imul
outsl
daa
mov
ds
bts
dec
nop
add
add
flds
inc
ficoml
lds
addl
cmp
clc
jae
mov
pop
xor
xchg
cmp
in
or
shll
pop
add
sbbl
cmpsl
add
mov
out
into
ss
add
push
mov
pop
mov
and
pop
add
cmp
fs
add
add
lock
dec
add
repz
aam
out
xor
add
jl
dec
add
add
jp
int3
addb
add
add
clc
in
sub
cmp
ss
cli
inc
add
add
lret
add
push
add
add
je
push
add
flds
or
fidivl
out
add
inc
sbb
fiadds
in
sbb
push
add
mov
adc
add
flds
leave
add
out
adc
aas
das
call
lret
add
stos
push
in
jg
add
add
add
stos
mov
add
stos
mov
inc
add
mov
sarb
dec
add
pop
add
and
xchg
jmp
jo
ds
repz
out
mov
dec
jle
repnz
mov
add
push
repnz
jae
adc
mov
mov
lahf
pop
rolb
jns
cmp
add
xor
add
pushf
test
add
xor
add
add
add
mov
in
movsl
adc
aad
add
push
fst
xor
fisttpll
sub
sbb
dec
xor
add
orb
je
jge
mov
mov
push
push
mov
lock
ret
pop
jle
popf
mov
mov
jne
pusha
add
mov
xchg
add
add
fadds
incl
jo
push
mov
push
std
add
fistl
mov
mov
loope
push
xchg
jmp
mov
mov
mov
mov
jo,pt
mov
add
add
outsl
jmp
or
hlt
movsb
jne
les
sbb
add
push
mov
add
xchg
ret
adc
jo
and
int3
int3
and
pop
js
dec
xchg
pop
dec
and
in
aas
ljmp
out
add
lods
aas
imul
stc
notl
push
mov
lock
ret
mov
insl
push
jo
bnd
add
ret
repnz
call
stos
rcrb
jmp
repnz
mov
jo
mov
mov
xchg
scas
inc
add
xchg
ret
xor
dec
scas
mov
out
lret
pusha
add
fistl
mov
xor
mov
add
dec
add
pusha
add
out
subl
pop
add
push
clc
jae
jo
repnz
repnz
lahf
cwtl
lds
movsb
push
add
add
sti
dec
xlat
data16
mov
fists
popa
incb
add
mov
xchg
ret
mov
cmp
dec
add
call
addl
jae
cmp
mov
pop
cmp
dec
ss
arpl
jno
dec
add
in
cli
mov
int3
sbb
insb
add
add
add
sti
add
test
add
repnz
jae
out
pop
pop
repz
pop
cmp
dec
add
clc
add
add
push
add
mov
and
mov
lock
ret
xor
pop
xorb
xor
es
add
xor
pop
adc
add
call
or
mov
pop
jl
insb
add
stos
sub
add
add
jp
push
push
xchg
ss
int
add
mov
xor
ret
out
xor
sub
cmp
add
jne
add
les
adc
aam
add
sbb
int
add
notb
pop
add
add
stc
notl
repnz
jae
scas
mov
mov
mov
xor
iret
fst
movsb
lock
repnz
jae
mov
insl
jo
mov
cmp
pop
lods
setp
jno
add
jns
adc
outsb
add
mov
dec
add
jle
sbb
mov
add
aam
dec
dec
xorb
ffree
add
add
roll
xchg
orl
enter
inc
iret
in
add
int3
int3
int3
movsl
dec
add
xor
fstps
jo
pop
add
into
add
scas
or
js
fwait
mov
add
xchg
mov
lret
pop
add
add
in
add
lea
repnz
jae
mov
pop
xor
iret
movsb
fwait
test
mov
in
cmpsb
mov
imul
add
mov
jmp
mov
mov
xor
outsb
add
int
pop
add
loope
xor
add
mov
push
add
add
lds
test
push
add
cmpsb
mov
je
mov
shr
xchg
jmp
mov
xor
imul
pop
add
xchg
repnz
jae
mov
pop
push
repz
out
stos
and
add
arpl
je
lahf
adc
pusha
add
scas
and
add
or
out
int
fnstenv
xchg
or
clc
jae
imul
pop
add
fildll
add
mov
sti
filds
lock
ret
pop
scas
mov
mov
cmp
repnz
add
test
xor
and
mov
push
divb
stos
add
jno
pushf
popf
sbb
std
xchg
movsb
push
mov
lock
ret
mov
push
ss
cmp
push
add
int
mov
push
dec
aas
aaa
push
add
add
jae
xchg
in
rolb
inc
add
pop
movb
add
sarb
add
sbb
and
add
popf
loope
clc
push
mov
add
add
adc
add
push
add
add
xchg
add
ret
dec
leave
adc
add
add
jg
sub
push
aad
int3
in
insl
add
cli
xchg
ljmp
jb
stos
push
push
insb
add
cltd
add
in
fistpll
add
or
pushf
es
mov
add
pop
push
add
mov
mov
clc
jae
and
mov
xor
add
add
add
cmp
pushf
test
add
test
cmp
and
outsb
add
and
mov
sbb
cmp
int
int3
enter
pop
jbe
xor
jne
repnz
jae
repz
repz
push
add
mov
ja
xor
add
pop
add
fcomps
mov
jmp
insl
repz
mov
mov
imul
loope
sbb
add
add
movl
cli
pushf
out
add
inc
sub
clc
jae
push
ss
mov
jo
popf
jo
add
xor
aaa
add
adc
add
add
addr16
xchg
mov
pushl
pop
out
out
mov
sti
dec
jl
sub
add
std
test
subl
pop
add
mov
add
int3
sar
mov
mov
repnz
jae
xchg
mov
mov
mov
push
push
dec
cmc
mov
mov
push
or
xor
scas
cmp
cwtl
xor
insb
add
pop
shr
inc
stos
xchg
jmp
jo
mov
pop
and
repz
jge
jnp
add
pop
mov
add
xorl
add
repnz
jae
jle
mov
pop
mov
mov
jo
inc
add
cmp
pop
add
add
pop
mov
push
repnz
jae
mov
mov
xchg
jle
mov
mov
es
or
mov
inc
add
lea
add
jno
es
add
les
push
mov
lock
ret
mov
mov
mov
jb
inc
add
add
movsb
aam
add
add
or
jle
js
es
add
or
scas
xchg
jmp
insl
pop
mov
dec
adc
popf
mov
fstpl
stc
call
push
mov
lock
ret
mov
mov
jle
sbb
cmpsb
inc
pop
add
add
and
add
in
sub
mov
push
add
jns
dec
add
xchg
jae
mov
push
mov
xor
pop
sahf
mov
add
add
add
dec
lods
cwtl
cwtl
mov
ret
mov
add
jp
lret
mov
clc
jae
mov
pop
mov
dec
adc
pop
mov
or
in
loop
cmpsl
pop
add
iret
pushf
fdiv
fdivl
inc
add
pop
add
pop
add
stc
pop
push
mov
lock
ret
mov
xorb
add
add
xor
cmp
xorl
loop
add
testb
sahf
add
and
movsb
push
fldl
in
adc
jae
mov
out
loope
add
mov
add
rolb
add
out
inc
inc
xchg
jmp
xchg
repnz
mov
insl
xor
dec
mov
cmpb
arpl
xchg
xchg
mov
hlt
add
pop
add
shlb
mov
into
add
add
es
add
pop
rorl
mov
add
push
mov
nop
add
sub
lods
push
rclb
pop
add
roll
lods
pop
add
or
jge
pop
add
into
dec
adc
add
push
add
jno
bound
adc
add
aas
mov
mov
testb
mov
add
adc
push
add
pop
add
mov
add
enter
jle
jbe
pop
add
adc
add
js
scas
sub
add
add
cmc
jo
dec
add
inc
add
add
inc
add
add
add
xchg
xor
add
add
add
inc
push
mov
lock
ret
jo
pop
mov
mov
xchg
pusha
add
mov
ficomps
inc
add
icebp
cmp
add
add
movsb
adc
add
std
add
push
add
xchg
div
add
add
incb
out
xchg
call
repnz
jae
insl
mov
insl
xorb
xchg
mov
xchg
jmp
pop
loop
imul
insl
cld
xor
add
lret
insl
test
pusha
add
sub
push
add
add
cltd
outsl
dec
add
and
mov
movsb
add
sub
pop
mov
pop
arpl
push
add
loop
scas
sahf
je
jns
popf
ss
add
sbb
ficompl
add
add
imul
jmp
mov
imul
sub
sub
add
add
add
xchg
popf
movsb
or
cmp
add
repnz
jae
jo
mov
push
jo
xchg
mov
enter
add
push
add
mov
filds
ja
add
testl
aaa
push
add
mov
fcomps
mov
sub
mov
cmpsl
jecxz
imul
mov
data16
adc
add
sbb
repnz
out
fildl
nop
add
loope
add
mov
jbe
mov
xchg
ret
insl
push
pop
jo
insl
mov
lcall
mov
je
addr16
and
add
insl
add
add
or
mov
jge
add
repnz
jae
mov
mov
pop
loop
jo
cmp
add
data16
addl
add
mov
and
pop
add
jle
sub
call
idiv
xchg
add
clc
jae
pop
dec
insl
out
pop
add
loope
jl
or
xchg
andl
call
imul
jle
add
mov
scas
incl
incl
pop
pop
mov
scas
add
add
roll
out
add
sti
loope
mov
add
add
xor
push
add
repnz
hlt
das
or
add
adc
add
icebp
jecxz
add
repnz
jae
jo
out
jo
insl
insl
pop
xor
incl
push
xlat
push
test
add
mov
push
add
dec
test
ret
bswap
pop
push
add
add
add
iret
data16
add
push
int
add
xchg
lods
repnz
jae
jle
mov
loop
mov
repnz
in
add
xchg
mov
mov
repz
mov
mov
imul
mov
push
add
pop
add
add
repnz
cmpsl
test
sbb
dec
enter
pop
sub
pop
add
and
add
incb
cmc
jae
cld
xor
add
add
add
inc
cld
mov
mov
lock
ret
out
ss
enter
repnz
jae
mov
mov
and
xor
and
pushl
mov
push
push
mov
scas
ds
in
rolb
sbb
in
clc
inc
shl
hlt
mov
jmp
xchg
push
pop
pop
jle
pop
cmp
pop
repz
sbb
add
cmp
sbb
bound
syscall
dec
add
mov
add
jp
es
add
lahf
add
add
pop
add
xchg
shl
jae
imul
shlb
sub
mov
and
add
lods
stc
push
repnz
jae
mov
mov
adc
cmp
mov
lock
xchg
test
fucom
inc
add
xchg
ret
pop
mov
rorb
add
pop
and
add
add
je
inc
add
add
adc
bound
fwait
sbb
mov
gs
add
mov
movsb
std
add
lods
scas
add
xlat
out
aas
in
add
fimull
adcl
out
xchg
ss
mov
jae
mov
dec
cmp
mov
mov
in
and
add
bound
out
fadds
push
add
mov
loop
pop
add
add
push
add
mov
movsb
add
aam
insl
and
add
or
shr
jb
sbb
xor
add
inc
jns
int3
add
aas
add
cltd
inc
add
out
add
push
cmp
mov
fbld
jmp
cmpl
xchg
jmp
jle
repz
pop
pop
mov
orb
addr16
add
mov
add
mov
clc
mov
push
ret
add
jmp
repz
pop
xorb
insl
loop
scas
and
add
add
add
push
mov
lock
ret
and
mov
testb
xchg
xchg
rol
jbe
sbb
ret
popl
repnz
jae
push
pop
adc
pop
xor
jmp
add
add
add
xchg
push
repnz
jae
jo
mov
pop
mov
mov
xor
add
iret
sub
mov
data16
sub
lds
mov
jp
mov
test
jmp
call
xchg
jmp
loop
imul
mov
add
sahf
cli
push
into
or
rcll
cmp
stos
push
lds
and
lods
clc
pop
add
xor
jno
leave
movl
add
pusha
add
add
nop
add
mov
add
loope
loopne
je
rcll
adc
pop
fbld
mov
jmp
arpl
xchg
push
xchg
jmp
adc
pop
pop
push
repnz
rcrl
mov
repnz
jae
mov
and
mov
add
pop
add
lods
adc
out
inc
mov
xchg
jmp
popf
ss
cmp
dec
mov
mov
jb
mov
xchg
subl
add
add
add
xchg
ret
ror
into
arpl
jne
push
or
mov
sbb
je
fyl2xp1
cmp
xchg
jmp
jo
insl
mov
mov
dec
xchg
imul
sub
xor
sub
xor
stos
push
add
add
movsl
cmc
hlt
jl
or
push
lods
push
add
add
loop
lret
inc
add
outsb
add
xchg
push
push
mov
lock
ret
repz
loop
pop
mov
add
add
add
mov
out
sub
out
mov
add
inc
in
pop
push
sub
add
xchg
insb
add
xchg
icebp
xchg
mov
pop
push
xorl
add
into
bound
fildl
mov
cmp
mov
jle
mov
aaa
dec
add
mov
and
sub
xchg
xor
les
pop
add
add
add
sub
xchg
popa
repnz
add
rol
repz
aad
dec
add
fcmovnu
push
xchg
mov
add
bound
mov
push
add
fdivl
imul
add
jno
fcmovb
int
pop
adc
add
jp
push
push
add
pop
sbbl
in
rcrb
jmp
add
add
clc
jae
push
mov
mov
adc
repz
rorb
das
cli
ja
in
mov
add
scas
adc
add
add
jmp
add
rorb
jb
movsl
inc
add
add
add
scas
add
push
inc
add
loopne
add
ret
and
add
adc
add
dec
mov
fsubl
idivb
in
les
add
jb
sti
test
push
mov
cwtl
mov
enter
data16
imul
add
iret
adc
add
cmp
shlb
ljmp
jmp
xor
add
jl
mov
xchg
dec
push
mov
lock
ret
ss
mov
scas
mov
popf
xor
add
push
mov
inc
lea
call
add
clc
jae
ss
insl
jle
mov
insl
imul
mov
clc
jne
mov
add
jmp
nop
out
ret
pop
mov
jns
ss
add
mov
inc
add
pop
lods
add
dec
cmp
clc
sbb
sbb
popf
add
data16
adc
pop
lcall
out
add
mov
add
dec
add
push
mov
fildl
fdivrs
lea
cmc
add
add
or
mov
cwtl
sub
lds
fwait
loop
movsb
popa
pop
inc
add
scas
cld
push
add
add
add
add
xchg
jmp
push
xchg
ds
repz
scas
and
sub
inc
add
add
addl
add
fldt
in
dec
icebp
sti
jmp
add
ja
push
add
mov
repnz
ret
push
mov
lock
ret
pop
mov
xor
pop
out
lods
pop
mov
rolb
stos
repnz
jae
mov
pop
ds
mov
push
loop
add
jne
roll
subl
fdivr
repz
repnz
jae
sbbb
mov
andb
hlt
into
add
add
add
or
add
add
clc
jae
xchg
cmp
pop
loop
adcb
mov
cmp
mov
das
add
add
push
push
mov
in
ret
int
mov
mov
sahf
std
lods
and
add
mov
jge
dec
add
std
sub
add
fwait
cmp
jo
notl
sbb
mov
add
mov
lock
ret
popf
mov
mov
xor
imul
mov
add
std
add
add
ret
add
cmpl
idiv
ljmp
repnz
outsb
add
inc
add
enter
add
jge
or
loopne
xor
add
add
loope
outsl
fdivl
pushf
push
cwtl
pop
sbb
mov
push
add
fwait
adc
add
lcall
push
rolb
add
ljmp
dec
pop
mov
xor
fsubrs
repnz
jae
push
orb
loop
mov
lcall
dec
outsb
add
scas
add
xchg
stc
push
repnz
jae
xor
mov
xor
mov
jo
push
add
mov
push
push
insb
add
testl
add
jge
inc
add
lret
push
in
lret
mov
xchg
jmp
mov
and
repnz
xchg
jmp
mov
jo
pop
mov
xor
pop
lea
stos
inc
add
xchg
ret
ds
repnz
ds
xchg
mov
psrad
sub
xchg
push
call
test
add
xchg
sbb
adc
add
and
add
add
in
mov
nop
idivb
sbb
xchg
stos
xchg
jmp
jle
dec
insl
popf
pop
pop
and
hlt
cltd
int
jp
jns
mov
cmpsb
aaa
sbb
fnsave
test
ja
sub
push
xor
add
pop
xchg
int
rep
push
mov
lock
ret
repz
mov
xor
sbb
faddl
js
arpl
pop
inc
add
in
addb
cmc
jp
stos
lods
or
mov
add
pop
add
jmp
pop
mov
mov
ss
mov
mov
jae
adc
pop
clc
add
cmpsb
rcr
out
aad
ljmp
enter
jae
subb
pop
insl
mov
jbe
jae
pop
add
movsb
and
add
add
stos
push
add
sbb
filds
cmp
inc
push
sahf
stc
pusha
repnz
jae
mov
mov
xor
loop
mov
cmp
and
jle
bound
mov
add
and
clc
jae
dec
and
mov
scas
fstpl
leave
add
out
add
or
mov
add
add
add
adc
add
movsb
out
into
cmpsl
idivl
add
js
ss
pop
add
mov
clc
jae
mov
xorb
loop
jle
jle
mov
pop
lods
daa
iret
add
inc
data16
addr16
in
jbe
rorb
mov
lock
ret
mov
insl
mov
mov
jg
movsb
inc
imul
outsb
add
mov
fidivs
jnp
xor
add
inc
add
jmp
add
loope
cmpsl
push
add
jb
fwait
in
add
imul
xor
add
into
push
loopne
int
adc
add
add
add
add
mov
inc
stos
repnz
jae
mov
jo
push
popf
adc
xor
add
mov
mov
add
add
push
add
stos
nop
mov
repnz
jae
jo
rep
jle
pop
jno
cmc
aam
and
mov
xchg
jmp
xor
insl
scas
cmp
sbb
dec
int3
adc
iret
cld
xchg
inc
add
add
pop
add
adc
jne
mov
mov
mov
add
cmp
sbb
jle
testl
mov
adc
add
xchg
mov
andl
jle
ss
mov
popf
addb
cmpsl
in
cmc
mov
mov
push
or
mov
add
mov
bound
push
mov
adc
leave
addl
mov
nop
pushf
fisubrs
mov
hlt
push
mov
addr16
mov
addl
add
add
cmp
cmpsl
xorb
dec
cmp
jmp
mov
insl
andb
mov
add
mov
xchg
jmp
imul
xor
rcrl
icebp
and
jo
xchg
mov
mov
xchg
jmp
mov
imul
ds
add
mov
mov
in
add
xor
add
test
lret
push
add
or
jbe
adc
add
enter
xor
add
inc
fildl
or
xchg
aam
adc
jo
pusha
add
mov
dec
pop
jl
xchg
flds
lods
push
mov
lock
ret
repnz
xor
and
sub
dec
add
cmc
daa
aas
add
mov
xchg
test
inc
add
sub
pushf
fisubs
repz
jae
int
cwtl
pop
add
cmpsb
iret
movsl
ret
je
add
add
dec
add
fldt
add
bound
insb
add
jge
jno
outsl
fiaddl
hlt
add
push
add
bound
aas
inc
lds
outsl
repnz
jae
cmp
scas
mov
and
jo
enter
xor
add
add
mov
stc
add
mov
xchg
mov
mov
add
add
add
shll
xchg
repz
pop
mov
xchg
pop
popf
mov
dec
adc
pop
dec
pop
popf
iret
jle
mov
inc
add
mov
add
call
aas
mov
xor
ret
loop
mov
int
add
cmp
dec
dec
add
lahf
sbb
fcomip
inc
and
add
pop
push
mov
lock
ret
andb
pop
cmpsl
sbb
rcrl
out
add
xor
imul
add
jns
mov
test
add
add
mov
push
add
inc
add
clc
jae
jo
repz
subb
pop
test
mov
jp
pop
inc
add
add
add
push
stc
jne
push
mov
lock
ret
mov
cmp
dec
add
mov
repnz
jae
jo
adc
pop
stc
mov
repnz
jae
repnz
pop
mov
mov
mov
dec
sub
jnp
inc
add
cld
add
popl
lret
add
loopne
sub
popa
fistps
cmp
ja
fiadds
cmp
or
repnz
jae
imul
add
mov
loop
cltd
xchg
pusha
repnz
jae
mov
loop
popf
push
out
mov
or
icebp
rorl
jg
mov
mov
repnz
jae
imul
out
repnz
mov
es
mov
dec
add
jne
mov
add
in
push
add
add
inc
loopne
add
add
jp
aas
nop
sub
cmp
add
mov
in
mov
add
jne
cli
lods
in
add
repnz
jae
mov
mov
xchg
and
sub
sbb
push
add
dec
add
sbb
icebp
test
add
mov
lock
ret
mov
loop
imul
lds
add
bound
add
add
jae
xchg
mov
mov
mov
xor
jo
and
xor
imul
add
mov
add
popa
add
clc
jae
jle
scas
cmp
xor
insl
iret
xor
add
mov
add
push
je
jl
mov
add
add
add
add
adc
push
lret
add
pop
mov
mov
mov
add
add
mov
mov
repnz
jae
adc
mov
addb
stos
xor
push
push
add
add
add
pop
das
add
add
sbb
add
add
mov
push
lea
mov
inc
add
xchg
ret
ds
mov
pop
flds
mov
xor
add
sbb
mov
sbbl
add
sbb
mov
inc
add
stc
mov
repnz
jae
scas
repz
xchg
mov
cmpb
mov
cmc
and
push
add
cld
arpl
xor
fnstenv
lahf
in
mov
add
add
daa
add
ljmp
add
aad
pop
add
cmc
rcll
add
or
repnz
jae
imul
mov
cltd
push
je
inc
add
fwait
mov
add
xor
add
out
ret
imul
xor
add
inc
xchg
mov
repnz
jae
mov
pop
cmp
mov
add
dec
test
lcall
add
test
js
sub
insb
add
andb
add
outsl
add
clc
jae
mov
pop
xchg
insl
pop
mov
mov
nop
pop
add
adcb
inc
add
lds
cmp
add
mov
add
add
push
add
sub
push
sahf
pop
lds
adc
adc
add
pop
nop
in
jns
add
sahf
add
push
add
out
cmc
bound
outsl
jg
add
jne
pop
add
js
sbb
or
lahf
call
pop
sub
shr
cmc
lock
or
push
xchg
clc
jae
mov
and
enter
add
sub
or
jnp
add
mov
lock
add
mov
cmp
fld
pop
add
rolb
hlt
mov
pop
or
push
repnz
jae
jo
mov
insl
dec
and
add
pop
add
cmpsl
lods
ljmp
icebp
data16
movsl
repnz
jae
jle
insl
loop
pop
out
xorb
rcll
sahf
into
jnp
pop
sbb
push
push
add
mov
sbb
jmp
cmc
adc
add
dec
add
add
add
stc
lea
repnz
jae
mov
mov
insl
adc
pop
ss
jg
push
inc
jne
in
gs
add
mov
mov
jp
bnd
add
push
add
aam
add
push
mov
jmp
dec
mov
ss
jo
mov
popa
push
add
loopne
xor
lret
test
pushf
sub
adc
add
add
add
in
cmpsb
add
add
stc
add
dec
add
add
dec
xchg
popa
add
mov
lock
ret
repz
mov
repz
sub
xor
repnz
jae
mov
mov
jle
scas
ss
cmpb
mov
jnp
xchg
xchg
iret
cmc
repnz
add
add
inc
add
add
pop
add
test
dec
add
add
pop
sar
mov
pushf
add
mov
aad
cmpsl
repnz
add
jmp
mov
mov
repnz
push
mov
stc
mov
repnz
jae
pop
push
pop
and
ds
mov
add
test
inc
add
xchg
mov
mov
push
jnp
dec
add
inc
std
sbb
sub
addr16
add
add
xchg
mov
repnz
jae
xor
ss
xor
stos
and
add
cmp
mov
jle
jbe
sbb
cltd
cmc
ss
add
mov
cmpsl
add
sub
jns
cmp
int3
stc
push
xchg
jmp
loop
insl
repz
pop
bnd
pop
mov
xchg
mov
jne
sub
pop
enter
add
sub
jns
mov
jo
mov
out
mov
cmc
sbb
pop
add
jg
call
cmp
js
mov
jle
cs
sarb
iret
loope
add
pusha
add
fsubs
cmpsl
add
adc
xchg
inc
cmp
jmp
mov
and
jo
mov
add
add
add
jae
mov
add
add
inc
add
inc
pushl
repnz
jae
xor
push
mov
pop
mov
daa
or
jns
push
add
repnz
into
push
add
pop
inc
add
cmp
imul
or
enter
push
add
and
add
add
arpl
aad
push
in
xor
popf
add
pop
add
fdivrs
fucom
mov
add
or
rolb
icebp
lcall
add
cltd
addr16
arpl
mov
scas
enter
adcl
pop
push
popf
insl
xor
push
cltd
cli
xor
inc
popa
out
mov
lock
mov
clc
jae
pop
push
cmp
insl
mov
xor
xor
add
sub
scas
xor
add
cltd
push
lods
int3
inc
add
int
test
arpl
leave
aam
incl
lcall
mov
mov
xrelease
clc
jae
mov
mov
xor
mov
adc
out
jecxz
popf
add
add
add
aam
mov
cmp
and
add
add
push
add
add
rorl
add
sub
insb
add
add
sbb
inc
sub
push
mov
lock
ret
mov
mov
loop
jle
mov
push
add
mov
add
jmp
mov
ss
mov
mov
loop
shl
add
loope
add
sub
mov
mov
xchg
cwtl
cwtl
add
adc
add
in
add
push
test
push
add
mov
pop
add
inc
push
pop
or
in
sub
pop
add
add
and
add
or
xor
pop
add
test
add
aad
ljmp
repnz
jae
jo
adc
pop
xor
xchg
fistl
lret
add
xchg
ret
mov
insl
insl
xor
sahf
mov
int3
int3
push
cmp
popf
add
add
add
add
push
dec
add
scas
adc
add
enter
add
ja
ja
mov
jmp
cli
add
push
bound
or
mov
adc
add
add
rcrl
jl
jae
add
gs
pop
add
insl
sbb
mov
leave
add
std
cmp
mull
xchg
add
add
cmp
pop
and
dec
add
mov
pop
add
pop
insl
add
cli
add
mov
int
push
add
or
dec
add
xchg
pushf
or
cld
loope
pushl
push
add
push
mov
add
testl
add
sti
ret
into
push
push
add
mov
mov
xchg
insl
test
dec
add
adc
push
add
push
and
adc
add
push
add
pop
add
imul
cmp
in
jl
push
sub
inc
jne
jno
xlat
inc
scas
sub
pop
or
mov
sbb
out
add
aas
fldenv
cld
add
add
push
add
or
pop
add
mov
int
add
add
push
add
add
hlt
sub
mov
aam
cwtl
sti
xchg
shll
add
jmp
mov
adc
dec
popl
aaa
add
and
add
pop
add
add
lret
add
and
mov
xor
jne
rcrb
add
mov
pop
mov
adc
add
roll
fcomi
je
lea
enter
add
xchg
shrl
jecxz
and
add
es
stc
jae
mov
imul
sbb
mov
dec
add
inc
add
fwait
cwtl
out
cmp
adc
add
push
jg
in
add
sub
notl
mov
addl
inc
add
aas
lret
out
dec
xor
add
sbb
jno
inc
add
dec
add
push
inc
add
loope
popf
stc
outsb
add
add
add
xor
add
ret
push
add
push
or
outsb
add
add
arpl
testl
add
cwtl
add
out
add
lds
fistpll
inc
add
add
inc
add
addl
in
daa
faddl
fidivrl
xor
add
enter
rolb
push
add
aam
inc
add
pop
test
rcrl
loop
add
xchg
sti
rep
inc
add
pop
aad
jae
mov
add
mov
icebp
pop
add
add
add
add
mov
rclb
outsl
je
lahf
fs
rorb
aas
ss
add
add
inc
add
xchg
add
lea
and
xor
aaa
out
add
fiaddl
test
mov
data16
jg
and
lods
cltd
pop
add
aad
lods
nop
mov
shrb
popf
fimuls
sub
cmp
xchg
out
inc
lcall
and
add
adc
add
sub
xor
xchg
push
add
dec
or
pop
repz
daa
aam
cmp
add
add
sbb
int3
adc
add
jecxz
sbb
cmp
add
sti
fsubr
fstpt
add
add
add
cmp
cmpsb
add
add
scas
iret
js
xchg
push
add
setae
dec
add
add
pop
aas
add
movl
mov
pop
or
dec
add
push
add
jne
adc
add
add
cmpsb
pop
add
addb
or
jl
outsb
add
bound
xchg
shll
dec
add
cltd
add
aas
add
add
pop
add
xor
add
repnz
add
insb
add
pusha
add
addr16
decl
outsb
add
cltd
movsl
inc
stc
in
popa
clc
in
lods
push
movsl
or
icebp
cmp
cmp
mov
bts
jecxz
push
add
negl
mov
fdiv
inc
add
or
sbb
jp
test
orb
add
xor
test
add
inc
add
add
dec
add
insb
add
add
cmp
cmp
data16
cmpl
pop
add
jmp
jg
mov
ret
cs
add
dec
or
add
add
fiadds
sbb
ret
clc
mov
add
add
or
add
add
mov
add
add
add
xchg
push
or
cld
addr16
mov
fstl
pop
add
jp
add
pop
sbb
sub
inc
add
mov
hlt
lcall
pop
sub
push
add
add
add
and
add
call
bound
addl
add
add
add
int
add
add
add
mov
jg
add
add
add
iret
jecxz
and
xor
dec
fbstp
je
int
int3
mov
popf
lret
adc
add
lock
jmp
cmpsl
and
add
add
popf
add
cmpsl
loopne
mov
add
lods
repz
icebp
cmp
ss
add
xchg
roll
adc
and
lods
popa
jle
inc
add
pop
push
mov
fiadds
mov
lods
xchg
push
add
add
call
scas
sub
push
add
jo
clc
xor
dec
cmp
add
inc
add
add
add
scas
add
scas
dec
cmp
shr
inc
add
pop
inc
add
add
outsb
add
mov
add
add
inc
add
fsubs
lcall
add
add
add
lret
cmp
sub
in
add
xchg
sarl
and
outsb
add
les
inc
add
jle
jmp
pop
add
scas
jle
add
xor
add
add
push
add
add
mov
movsb
xchg
cli
xchg
mov
pop
add
ret
test
add
add
pop
add
add
add
loopne
lock
jns
rcrb
sub
sub
push
add
icebp
adc
add
cwtl
das
pop
add
add
int3
mov
mov
filds
loope
call
inc
add
push
add
repz
xlat
mov
out
cld
and
add
mov
ficompl
inc
lods
mov
mov
cmp
orb
inc
add
pop
rorb
nop
push
testl
add
mov
scas
fwait
out
xchg
ss
add
add
cltd
loopne
add
mov
test
add
in
adc
add
iret
add
add
neg
test
insl
sahf
mov
mov
pop
xchg
cmc
insl
outsb
add
add
jns
add
fsubs
push
add
cmp
mov
mov
cmpsl
inc
jecxz
add
cmp
int3
push
inc
add
lock
pop
dec
add
add
add
sbb
loop
cmc
popf
mov
add
cmp
flds
je
fwait
xchg
into
js
mov
movsb
jnp
pop
and
inc
add
cmp
xchg
popa
data16
mov
insb
add
pop
insb
add
xchg
fstl
xchg
movsb
add
rclb
ret
test
jl
fsubl
cmpsl
mov
add
hlt
inc
add
add
mov
push
add
test
movb
and
add
pop
add
inc
add
jl
add
push
les
gs
fisttpll
mov
add
sbb
lcall
add
or
pop
jb
jmp
cmova
inc
add
mov
push
ret
mov
cmp
cmp
leave
add
dec
lret
lock
in
mov
sub
lea
push
cwtl
aas
lds
roll
or
xor
xchg
add
fcompl
jbe
stos
add
add
mov
add
out
mov
std
jae
lods
in
imul
mov
pop
xchg
mov
or
daa
jle
sub
in
xor
add
and
add
mov
add
add
and
add
mov
cmp
pop
imul
pop
sub
jne
add
adc
leave
mov
dec
cmp
in
lods
addr16
dec
push
fwait
add
fdivl
pop
iret
mov
shrl
add
jo
addr16
add
fwait
sub
add
pop
ret
add
add
jle
and
je
and
add
std
std
xor
add
xor
cmc
movsb
jbe
ret
xchg
jg
lahf
jecxz
lds
add
dec
add
data16
or
cmp
lods
sub
lea
orb
xchg
repz
int3
stos
inc
add
and
sbb
movl
pop
in
add
and
add
xchg
or
push
add
test
add
pop
add
sub
stc
shl
fnstcw
jmp
adc
or
add
xchg
add
jmp
add
sub
mov
decl
es
and
test
out
ret
fiaddl
mov
jmp
pop
fs
xor
add
lahf
and
mov
push
add
add
mov
sti
cmc
cmp
mov
pusha
add
mov
add
jo
jns
add
imul
cwtl
add
cwtl
add
add
ds
adc
lcall
fcompl
jmp
iret
add
or
mov
call
idiv
test
adc
aad
push
pop
mov
sub
pop
jae
add
add
add
pushf
int
ss
hlt
mov
sub
sahf
lods
push
add
add
jbe
out
cmp
movsb
xchg
dec
mov
add
mov
int3
mov
mov
mov
add
and
add
jbe
xchg
push
or
push
add
iret
and
mov
into
daa
in
adc
add
scas
add
out
mov
fwait
push
add
add
add
loopne
scas
popf
mov
jbe
pushf
push
mov
add
add
mov
add
cmovae
addr16
jno
add
jbe
adc
adc
add
jae
push
add
call
add
add
rolb
xor
add
pop
add
adc
add
hlt
jg
jne
add
add
add
add
std
add
inc
dec
decb
add
add
dec
xorb
add
loopne
add
add
mov
loope
mov
scas
rorb
add
daa
jp
mov
scas
arpl
add
icebp
leave
adc
add
adc
fcoms
jns
sahf
add
push
cmpsb
mov
xchg
mov
fwait
add
icebp
push
ja
rcr
repz
add
add
outsb
add
dec
add
addl
cmpb
cmpsb
add
test
and
add
mov
jns
loope
add
in
jne
pop
repz
outsl
sub
in
roll
or
in
dec
add
xchg
in
adc
add
add
mov
arpl
pop
add
dec
int
jmp
add
xchg
jmp
add
add
or
inc
add
mov
test
addl
jg
insb
add
cmp
add
add
ret
rolb
sbb
jp
loope
cmp
sbb
jno
movsl
jns
adc
add
lahf
sub
roll
mov
dec
push
sub
xchg
mov
test
in
imul
pop
repz
cmp
push
add
lock
repnz
data16
add
add
clc
sbb
cwtl
movsl
jo
push
cmp
mov
cmp
popf
std
fdivs
les
lods
xchg
mov
add
push
push
add
add
sub
aam
add
add
pop
xchg
inc
dec
or
mov
add
add
into
clc
push
add
push
jns
loop
sbb
pop
adc
add
or
mov
jge
or
nop
ficoml
push
mov
inc
add
push
lea
fwait
loope
sub
in
lock
add
mov
scas
add
repz
add
iret
add
mov
loopne
push
add
arpl
aad
mov
sub
int
add
sahf
mov
add
add
pusha
add
xchg
jg
sbb
rolb
imul
add
inc
add
add
or
jl
mov
dec
leave
mov
data16
xor
add
dec
dec
lcall
push
cs
test
shrl
add
mov
subl
daa
dec
add
les
arpl
cmpsl
test
sub
loope
sub
push
add
or
scas
data16
cmp
xchg
ret
hlt
outsl
inc
add
stos
or
loop
inc
add
icebp
loope
or
insl
mov
adc
add
add
mov
dec
add
test
pop
add
leave
xor
add
add
mov
sbb
add
ret
mov
add
out
lret
jne
xor
mov
xlat
pop
add
ja
add
sbb
dec
mov
dec
add
bound
and
shll
inc
add
dec
add
ja
add
add
add
cmp
stos
aas
push
add
xchg
add
loopne
popa
sub
nop
cmp
shlb
icebp
idiv
loope
sub
jno
fiadds
jns
mov
lret
daa
dec
add
sub
mov
mov
into
icebp
outsb
add
add
fldl
loop
lea
add
xor
add
sub
sub
pop
mov
add
add
add
jno
adc
add
jp
cli
into
stos
scas
add
dec
add
sarl
outsb
add
sysenter
mov
pusha
add
stc
into
mov
inc
add
pushf
fsubrl
xchg
jae
sbb
mov
add
andl
je
xchg
ret
sub
shrl
adc
ja
clc
pop
cltd
stos
and
add
rol
pop
push
and
add
add
fadds
incl
loop
dec
add
in
fwait
add
add
lods
push
add
jo
fnsave
mov
add
add
push
fucomp
sbb
xchg
test
xchg
add
push
add
roll
mov
add
sub
fdivr
push
stos
add
fs
jle
loope
sub
xchg
or
out
pop
mov
shl
fdivr
add
xchg
enter
mov
push
je
lods
push
add
ds
pop
mov
push
add
push
add
mov
fisubs
cmpsl
lret
xchg
icebp
pop
imul
sub
movsb
add
cmp
and
add
int3
xchg
and
dec
add
or
mov
pop
add
ds
movsb
stc
pushf
dec
cwtl
pushf
and
imul
mov
jle
packsswb
add
sub
xchg
adc
add
mov
add
sub
add
xchg
cmpsl
call
add
pop
pop
add
add
ja
add
add
or
add
xchg
inc
jne
add
add
add
add
cmc
jecxz
add
jo
sti
lods
add
sahf
pop
add
popf
int3
xor
jmp
inc
add
add
add
std
test
sahf
mov
lods
jbe
push
loopne
in
ds
pop
inc
add
xor
xchg
mov
daa
add
mov
stc
sbb
xchg
dec
add
ret
jbe
jno
lret
rcl
nop
jg
ja
jno
push
je
shlb
es
add
rorl
add
add
sub
jl
imul
pop
add
mov
and
xchg
leave
add
add
cmp
xor
cmp
add
loopne
jle
xchg
aad
add
add
das
es
add
leave
stos
cmp
lds
xor
cmp
add
roll
push
pop
cwtl
add
add
ja
testb
add
or
sbb
inc
es
add
ret
add
into
xor
sbb
sub
iret
lret
rolb
cmpsb
add
add
push
lret
in
xchg
loop
adc
pop
xor
add
inc
jmp
call
add
int3
and
add
add
mov
enter
scas
ss
out
mov
pop
xor
add
dec
add
lea
in
aas
dec
add
inc
add
add
dec
pushf
ret
add
aam
add
sbb
sub
lret
ud2
aad
rorb
pop
addb
out
js
gs
add
add
enter
fs
in
ljmp
add
sub
lock
sbb
add
lds
scas
add
inc
ret
push
mov
lock
add
popa
and
add
add
mov
add
pushf
ljmp
js
xor
int3
or
movsl
movsl
mov
add
mov
pop
sub
int3
add
outsb
add
add
inc
add
sbb
in
cmp
jl
cltd
ljmp
das
jne
es
add
je
cmp
jp
outsl
xchg
mov
add
push
sub
mov
stos
or
jmp
imul
sbb
add
dec
add
add
addl
sub
test
les
push
dec
add
cmp
dec
add
hlt
je
inc
add
add
xchg
add
xor
add
add
andb
out
mov
aaa
bound
dec
add
or
test
jge
or
xor
es
add
or
ret
xchg
push
lahf
movsl
enter
push
add
add
add
add
adc
fadd
xorl
hlt
shr
sbb
insb
add
lods
jae
cwtl
dec
add
push
roll
xor
add
adc
add
inc
repnz
pushf
add
imulb
add
add
add
xchg
loop
lock
das
imul
popf
jp
mov
add
add
sbb
jb
cltd
xchg
or
jae
in
xchg
scas
xchg
add
sub
sti
mov
call
sbb
mov
mov
fildl
inc
add
imul
imul
jno
mov
sbbb
add
add
js
adc
add
adc
add
rcl
data16
add
mov
cmc
add
mov
add
xlat
add
mov
pop
test
jns
stos
stos
flds
add
sub
add
jge
push
in
add
and
xchg
adc
mov
add
js
cmp
ljmp
add
insl
adc
add
movsb
outsl
movsb
sbb
cmp
stc
and
add
cmpsb
add
outsl
add
std
jl
int
in
adc
mov
in
lcall
call
mov
add
or
cmpsb
add
jns
jns
test
add
add
lods
push
or
pop
out
sbb
das
pusha
add
adc
inc
stc
fisttps
add
add
testb
dec
fidivs
pop
add
in
dec
add
pop
add
add
add
sbb
xchg
pop
add
pusha
add
add
sub
ja
jg
sub
xor
adc
or
xchg
xor
jge
pop
push
add
cli
push
mov
jl
push
add
popf
and
add
add
icebp
inc
add
loopne
lahf
lahf
or
sub
sbb
mov
in
fidivrl
filds
jmp
mov
pop
xchg
add
addb
push
add
mov
cld
dec
arpl
push
add
ja
mov
nop
lcall
loop
add
adc
add
pop
mov
hlt
or
xor
add
push
add
push
lahf
fcmove
mov
loop
add
jecxz
mov
add
icebp
sbbb
dec
cmp
add
and
add
mov
add
xchg
sbb
adc
add
xor
pop
mov
aaa
add
out
idiv
and
add
outsl
add
in
add
inc
sub
sub
gs
inc
add
sbb
inc
add
adc
add
add
data16
addr16
adc
add
add
popl
cmc
inc
add
push
stos
lahf
xchg
shlb
push
jnp
in
push
add
add
add
stos
jb
sub
mov
add
or
dec
add
inc
ljmp
jl
das
pop
add
mov
add
les
xor
add
stos
jl
add
add
add
movsb
xor
add
ljmp
xchg
ret
sarb
mov
cmpsb
push
add
addr16
loope
push
add
insl
push
add
inc
fdivl
add
push
add
mov
sub
add
leave
xor
add
and
add
stos
ljmp
sbb
lret
mov
icebp
push
adc
inc
xchg
iret
jae
call
or
fimuls
out
cmpsl
mov
dec
push
add
sub
shlb
add
sbb
test
sbbb
pusha
add
iret
add
xor
add
add
jp
adc
push
sub
test
or
add
fwait
and
add
sub
and
cmpsb
jecxz
cli
jo
or
mov
imul
add
lock
push
shll
dec
add
pop
add
inc
or
clc
mov
or
xor
add
sbb
repnz
dec
cmpl
pop
add
add
ret
xchg
jnp
pop
push
add
jbe
inc
add
dec
add
scas
pop
jmp
and
add
rolb
pop
dec
add
or
movsl
stos
jl
sti
inc
xor
dec
sub
xorb
add
shrb
add
and
pop
add
data16
add
mov
stos
add
test
stos
add
mov
xchg
out
jbe
popf
cltd
popa
jecxz
adc
add
std
repz
arpl
int3
and
add
sub
clc
push
addl
add
inc
mov
notb
jge
or
outsb
add
inc
mov
pop
pop
dec
add
dec
rol
cmp
push
add
xorb
pop
add
loopne
adc
add
or
and
mov
sbb
or
test
sbb
pop
fdivrl
mov
ds
outsl
in
outsl
ds
arpl
idivb
cmovg
sti
sbb
sbb
xor
jp
in
hlt
lret
jb
cmpl
sahf
addr16
add
imul
cli
cmpsb
int
ret
bound
ret
test
jns
inc
stc
fs
pop
add
cmp
pop
add
sbb
mov
push
add
xchg
add
add
jle
dec
xor
mov
std
sub
cmp
into
lahf
sbb
addr16
fdecstp
jmp
pop
xchg
adc
add
add
xor
test
add
add
lock
int
test
xor
rorb
add
xchg
or
lea
testb
dec
add
mov
stos
adc
add
add
sub
in
insb
add
mov
pushf
mov
aam
add
rorl
xor
gs
sbb
push
add
push
cmp
mov
lret
fisubrs
xor
push
adc
add
out
sbbb
sub
and
stos
mov
loopne
adc
mov
jbe
jge
sub
jg
xorb
add
add
xchg
mov
cmp
aam
and
icebp
insl
stc
outsl
inc
add
stc
mov
fs
dec
out
jmp
dec
add
or
cmc
rol
in
pop
add
mov
inc
ss
add
aaa
and
lds
out
pop
add
sub
loopne
add
adc
aas
inc
pop
movsb
add
add
out
mov
dec
jnp
cwtl
mov
rcrb
add
inc
add
jmp
add
push
add
incl
enter
sub
sub
js
sarb
dec
and
or
or
cmpsl
test
pop
add
aas
push
cmpsb
rorb
add
add
rolb
add
inc
adc
and
add
add
mov
dec
add
push
add
sub
test
xchg
cmp
xchg
sbb
in
loopne
outsl
pop
add
add
jno
add
add
mov
add
loopne
mov
sahf
cmp
add
sub
xchg
xor
add
loope
pop
fsubs
fldl
movsb
or
or
lds
in
or
mov
add
add
add
inc
add
add
sbb
inc
add
pop
pop
pop
mov
add
xchg
data16
pop
push
add
pop
add
cli
adc
add
xlat
ss
lret
lret
mov
bound
rcr
sbb
adc
add
xor
add
add
mov
add
in
add
roll
sub
ja
lcall
pop
add
lods
add
dec
add
add
js
scas
dec
notb
add
jp
xchg
inc
add
fcompl
es
sahf
rcr
xchg
inc
dec
jmp
jbe
pop
add
add
add
add
shlb
mov
add
aad
and
add
add
jno
sbb
out
ret
add
addl
and
sub
sahf
out
and
adc
mov
xchg
mov
push
add
adc
ret
lea
mov
add
cmp
add
or
inc
add
jmp
jl
sub
cli
xor
adc
add
mov
rep
add
jo
xchg
repnz
mov
add
add
iret
pop
xor
inc
add
add
out
xlat
adc
add
add
mov
push
add
add
add
pop
and
sbb
div
cmp
lods
pop
inc
add
mov
mov
add
add
dec
add
into
sub
sbb
in
jecxz
add
add
add
fdivrl
xchg
mov
xor
add
push
aam
add
add
inc
add
out
andl
add
call
jg
js
fisubl
add
bound
test
test
mov
add
and
add
outsl
pop
mov
add
sbb
xchg
arpl
lcall
add
mov
add
jb
push
xchg
add
add
arpl
or
or
bsr
add
add
add
add
ret
es
cmp
mov
jecxz
push
leave
inc
out
add
mov
dec
add
mov
pop
add
in
or
imul
push
or
push
inc
add
add
rcrb
dec
xor
cli
mov
cmp
push
test
mulb
add
add
add
ja
clc
repnz
hlt
loop
add
je
mov
aam
clc
js
pop
inc
add
adc
dec
add
jbe
js
into
xchg
mov
jge
nop
xchg
test
add
xchg
xlat
enter
pop
mov
add
cmp
lret
out
cmc
inc
add
dec
inc
add
add
imul
and
add
dec
add
dec
add
outsb
add
xchg
add
dec
add
cmpb
andl
and
push
jecxz
add
lahf
jnp
lret
adc
add
add
ret
pop
add
add
add
mov
dec
add
jne
or
mov
std
jmp
xor
add
adc
push
loop
mov
mov
adcl
out
mov
pusha
add
arpl
std
stc
dec
mov
sbb
adc
add
cli
enter
add
add
inc
test
add
jne
pop
cmpsb
add
out
add
popa
add
testb
add
jmp
out
pop
add
xor
add
mov
jl
aad
add
lahf
cmp
cmp
pushf
add
adc
sub
mov
into
repz
orb
lahf
mov
add
arpl
mov
add
add
xchg
repnz
add
add
ljmp
cmova
add
pop
into
ljmp
lea
gs
add
stc
cs
xchg
test
inc
insb
add
lods
rorl
add
cmp
push
add
push
add
movsb
das
ljmp
mov
xchg
jl
lcall
add
rcrl
adc
add
jbe
mov
or
sub
sbb
add
cmpl
or
fnstsw
jecxz
out
jl
sub
pop
cmp
stos
pop
add
repz
outsl
sub
loop
scas
sub
out
fistpll
pop
add
push
add
add
sarb
arpl
or
xor
orb
add
xchg
sti
or
sti
fiaddl
add
sti
mov
inc
add
lahf
pop
fnstsw
pop
popf
mov
cmp
aad
and
ja
add
cmpsb
xchg
push
jb
lcall
cmc
push
add
add
jb
cmp
stos
jns
fmull
sbbb
insl
movsb
addb
add
add
dec
add
add
add
xchg
mov
adc
add
movb
addr16
mov
add
add
iret
push
add
add
in
xchg
lock
dec
add
jnp
mov
add
popa
mov
add
and
popf
jae
pushf
and
add
int
pop
add
add
add
andb
add
add
mov
jbe
xchg
mov
and
add
imul
in
idiv
insb
add
xchg
add
gs
add
add
push
das
adc
dec
add
jl
clc
adc
lret
adc
bound
push
push
add
push
ret
cltd
mov
add
add
icebp
cmp
mov
add
add
test
pop
imul
adc
add
xchg
add
pop
add
or
pushf
jo
adc
ret
pop
add
add
scas
add
mov
das
add
cs
out
mov
jnp
add
into
add
add
xlat
repz
pusha
add
inc
add
add
scas
add
mov
repz
pop
inc
add
push
add
mov
push
inc
jge
jl
lods
mov
xchg
out
in
add
xchg
test
add
sbb
add
in
push
add
pop
add
push
add
inc
add
fsin
add
xor
add
fucomp
addl
pop
in
jecxz
aas
rorl
rcl
mov
add
add
adcb
std
jno
dec
add
jecxz
adc
add
add
filds
fidivrs
rcrl
fldenv
nop
in
jbe
push
loope
push
stc
and
das
mov
mov
lea
or
aaa
sbb
cmpsl
fwait
arpl
mov
add
add
sbb
push
add
sldt
cmp
pop
icebp
fimuls
ss
push
add
add
dec
jecxz
popf
popf
insl
jp
dec
add
icebp
outsl
lds
sub
xchg
popf
mov
mov
js
xchg
xor
add
add
sbb
stos
fwait
ljmp
adc
test
aad
test
js
lea
daa
incl
push
cltd
lock
push
or
xchg
sub
add
sahf
mov
fistl
add
test
aad
into
shlb
scas
add
xor
add
and
add
jmp
xor
add
fiaddl
sub
stos
add
in
jp
xchg
mov
add
dec
mov
jbe
ds
sbb
sbbb
loop
outsl
scas
sbb
dec
sbb
icebp
inc
add
aam
bound
and
mov
add
jle
push
add
add
in
dec
and
add
sbb
clc
dec
add
mov
repz
add
das
mov
add
mov
and
add
aas
sbb
add
fimull
stos
mov
sarb
fcmovnbe
mov
add
cpuid
add
sub
stos
out
mov
add
and
sub
pop
add
mov
and
adc
add
lds
neg
hlt
or
add
add
dec
mov
add
add
add
test
fiaddl
cli
jmp
inc
add
and
popf
lret
and
add
shlb
ret
stos
rolb
add
jns
out
aam
push
xor
cld
mov
push
add
xor
sub
pop
scas
mov
out
rcr
mov
sbb
cmp
cmp
cmp
ret
nop
aad
stos
out
js
aas
cmovb
test
fstpt
fistps
add
adc
loope
repnz
xor
add
dec
add
mov
jmp
mov
add
pop
sbb
popf
and
aaa
int
mov
mov
fnstenv
mov
add
ret
dec
add
xor
add
add
pop
enter
popf
add
add
add
dec
add
or
push
add
xlat
add
dec
mov
mov
jnp
dec
add
add
bound
mov
add
add
push
add
add
js
mov
aad
push
push
mov
jp
or
add
out
add
gs
pop
add
push
mov
insl
fldt
mov
sub
data16
push
add
mov
sbb
mov
mov
outsb
add
cld
add
adc
sahf
push
and
add
jecxz
nop
vsubsd
push
scas
add
jbe
fstp
jle
push
add
add
int3
shr
stos
fistpl
push
mov
addb
add
imul
add
test
mov
adc
add
and
fildl
dec
add
jo
xlat
int
pop
add
add
add
stc
sbb
add
dec
add
jno
add
add
jmp
add
movl
testl
mov
inc
add
jno
add
add
add
add
dec
add
pop
add
add
add
mov
mov
adc
out
push
arpl
ja
roll
aas
loope
mov
pop
add
add
add
les
ret
xor
add
dec
add
push
add
dec
add
lcall
scas
add
dec
mov
mov
add
cmp
fcmovu
popa
sub
xor
add
mov
mov
fidivl
add
negl
push
mov
fimuls
sbb
add
sub
inc
add
adc
add
inc
add
scas
fnstenv
fistpl
imul
add
add
nop
push
add
xor
add
xor
add
dec
add
stc
jecxz
pushf
ds
hlt
pop
testl
sbb
add
push
add
add
dec
add
mov
ret
add
shr
adc
add
add
add
sbb
movsb
jns
movsl
icebp
cmpps
mov
out
sub
ljmp
pop
add
inc
add
push
cpuid
stc
cmp
add
cmpsl
aad
add
xchg
gs
mov
fbstp
fstps
add
add
hlt
cmpl
jbe
popf
xchg
jmp
and
add
arpl
idiv
fcoms
jbe
leave
pop
sbb
insb
add
shrl
addb
xor
add
dec
add
int3
jecxz
jg
inc
add
sub
sub
sti
cltd
add
add
fidivs
add
shrb
bound
or
jae
mov
and
pop
popa
mov
mov
cmp
fildll
jl
jl
call
adc
mov
add
out
add
mov
ret
out
adc
and
pop
add
cltd
mov
pop
aad
lods
in
or
jge
out
push
leave
jne
jecxz
inc
add
fucom
pop
add
jbe
dec
enter
jge
hlt
stos
jnp
fists
jne
icebp
add
add
sbb
popa
pushf
push
add
add
add
lret
fstpl
pop
sub
rcrb
out
lss
inc
add
pop
add
add
out
xchg
xor
add
enter
cmp
out
orb
xor
add
adc
add
inc
add
test
add
add
dec
add
dec
push
and
add
mov
repnz
push
pop
rcr
xchg
xchg
lods
mov
data16
add
or
pop
subl
sti
ljmp
lods
push
insb
add
insl
rcrl
inc
xor
add
adc
add
das
or
bound
sti
xor
add
add
in
add
pop
sub
jmp
sub
mov
mov
loopne
dec
add
cld
mov
sbbb
add
test
jbe
repnz
add
mov
push
jne
std
ss
add
fld
cwtl
iret
fwait
pop
jnp
adc
enter
rclb
push
add
add
add
add
or
fadds
in
aas
and
add
insb
add
aaa
les
adc
fsubl
enter
addr16
push
rorb
les
inc
int
add
add
cmp
jbe
inc
mov
mov
and
add
add
push
add
sub
jne
xchg
add
mov
ret
clc
lods
fildl
daa
xchg
add
adcl
add
sub
jecxz
les
xchg
xor
add
dec
add
jmp
jg
rolb
add
add
pop
out
inc
add
xchg
xchg
or
add
add
add
les
add
push
mov
pop
pop
dec
push
nop
add
mov
xchg
and
mov
add
iret
pop
add
lods
loope
rolb
sqrtps
pop
popa
add
xor
ss
add
add
pop
add
and
aaa
pop
add
sub
pop
ficoms
add
add
je
ret
pop
add
std
push
xor
add
mov
jp
hlt
pop
orl
mov
push
add
add
adc
add
icebp
test
cmc
in
loopne
add
add
mov
mov
sbb
movsl
push
into
lds
fstpt
test
cmp
addl
ss
mov
add
add
cmp
pop
mov
and
add
add
mov
add
mov
add
add
add
mov
aas
sub
fildll
cmp
xor
add
bound
push
dec
mov
daa
in
inc
fnstenv
push
add
sbb
push
cmp
incb
xchg
add
sub
dec
add
xchg
leave
repz
aam
movl
add
xor
lahf
arpl
in
add
imul
aaa
stos
add
push
inc
add
add
add
clc
jbe
mov
mov
add
aaa
pop
add
sub
popf
fwait
cwtl
sub
dec
sub
mov
sub
jle
insl
mov
popf
or
lahf
ljmp
add
cmp
xchg
loop
lret
mov
jge
add
pop
adc
mov
ficoml
call
in
dec
add
add
and
std
shrl
leave
jno
rcl
pop
popf
add
fsub
push
xor
add
add
or
in
jnp
mov
add
cmp
fsts
dec
add
gs
subl
add
add
mov
add
mov
xorl
add
bound
add
add
and
dec
add
dec
add
sbb
mov
popf
xchg
pop
add
aas
adc
add
je
push
add
cmp
add
jmp
dec
pop
xor
add
jbe
shll
pop
xchg
lret
les
dec
add
add
int
fldl
data16
mov
mov
push
add
mov
dec
test
in
push
add
adc
mov
push
loope
add
popf
push
add
into
inc
push
add
mov
add
mov
add
ja
xor
add
addr16
push
stos
or
outsb
add
sbb
mov
data16
mov
stos
pop
add
add
jnp
push
mov
cmp
roll
add
insl
ja
xchg
xor
lods
insl
dec
add
sub
lret
add
aas
mov
das
add
ja
fildl
in
mov
and
push
add
dec
add
fisttpl
push
xor
rol
push
add
dec
les
dec
add
stc
jnp
mov
jno
add
sub
add
cmp
aas
jb
and
add
xchg
out
lret
adc
add
add
and
xor
add
add
test
add
inc
add
xorb
mov
jp
lea
pop
pop
add
adc
add
mov
or
mov
add
int
scas
fiadds
push
add
pusha
add
push
in
jne
frstor
je
cmp
loop
mov
das
mov
cmp
jge
rclb
movl
mov
add
loopne
push
add
push
add
xchg
mov
sub
mov
jns
pop
add
insb
add
add
or
adc
add
mov
inc
add
hlt
lret
jecxz
mov
or
stc
mov
fisttpll
add
stos
push
mov
add
ja
fimuls
aad
data16
push
add
cmp
cmp
and
rol
mov
mov
js
push
add
ljmp
pop
add
add
add
xacquire
cwtl
sub
mov
pop
add
mov
and
add
shl
dec
mov
data16
outsb
add
lret
add
iret
hlt
push
mov
scas
ret
xor
add
and
add
outsb
add
imul
out
adc
daa
test
cli
pop
stos
add
cmp
jno
push
shll
adc
add
sbb
sub
jbe
push
add
and
add
add
sub
out
xor
pop
jge
xchg
imul
pop
add
mov
xchg
or
xorl
add
cmc
or
mov
mov
xchg
in
adc
fwait
and
add
push
add
and
add
test
fwait
add
out
inc
add
mov
xchg
mov
add
jae
or
xchg
add
jg
call
je
cmp
add
sbb
cwtl
cltd
jmp
xchg
or
add
push
add
pop
sub
sbb
pop
and
jnp
pop
add
add
daa
xlat
add
popf
add
add
lret
add
add
mov
xlat
jo
leave
push
cmc
sub
imul
add
adc
push
add
xchg
adc
add
nop
lds
and
in
cmpsb
outsl
popf
in
jns
mov
mulb
aad
jg
add
add
mov
or
inc
aas
adc
add
mov
sar
jnp
cmp
nop
gs
mov
add
add
cld
pop
test
xchg
das
js
or
xchg
stos
jae
add
jecxz
push
sub
lahf
mov
xchg
lret
inc
call
push
add
add
add
fdiv
stc
dec
fcmovnbe
sub
aaa
insb
add
add
cmp
test
push
aaa
int
pushf
repz
add
in
add
addb
xor
add
arpl
mov
pop
and
add
xor
sbb
adc
and
add
pop
lret
in
call
fistpll
push
add
pusha
add
add
pop
test
scas
add
add
inc
add
repnz
jg
out
add
inc
add
mov
jp
inc
mov
add
adc
add
ljmp
push
add
std
pop
mov
add
push
mov
sbbl
add
add
mov
push
add
xor
add
repnz
sbb
in
add
add
test
popa
data16
insl
mov
cmp
jbe
sbb
jae
add
sarb
add
inc
add
mov
and
add
es
dec
ret
xlat
xor
pop
jge
add
jecxz
je
pop
repz
add
cmpsl
mov
add
in
pop
lcall
cmp
stos
sub
lret
push
mov
mov
or
popa
pop
mov
xor
add
das
push
fadds
out
fst
or
int
or
mov
cmp
cltd
sbb
adc
inc
insb
add
add
dec
push
dec
pop
add
testl
or
pop
xchg
aaa
mov
sub
out
ret
mov
adc
add
jle
adc
int
sbb
jmp
add
stos
adc
add
sbb
add
xchg
imul
add
add
fwait
scas
push
add
add
pop
add
sub
add
dec
add
repnz
popa
cli
sub
inc
add
pop
add
bound
fistl
xor
push
add
in
mov
lods
rolb
xchg
add
mov
jnp
sbb
add
add
add
inc
add
lds
fsubs
incl
jl
sub
jno
mov
bound
mov
add
data16
jbe
cld
pop
lret
inc
add
adc
add
xor
add
push
add
add
add
mov
add
add
hlt
or
pop
jnp
aaa
jb
js
jne
add
mov
add
aas
sbb
or
xchg
je
repz
sub
std
add
dec
add
push
add
add
add
or
lret
aaa
movb
fiadds
out
jp
ret
add
decl
push
sbb
pop
add
nop
sub
xor
mov
cmp
mov
push
add
ret
sub
add
loope
test
ror
mov
add
xchg
cld
dec
add
inc
lahf
sub
adc
jmp
xchg
add
push
add
sub
jnp
addr16
in
std
pop
fldl
dec
mov
pop
add
movsl
stos
mov
xor
decl
addb
add
lds
add
add
sbb
in
sarl
xchg
pop
in
stos
add
jno
add
test
outsb
add
cld
add
add
add
xlat
pusha
add
cmpsb
bound
xor
add
je
cmpl
sbb
xchg
movsl
add
add
jle
mov
aas
ret
jmp
lods
push
add
add
add
dec
shlb
jg
mov
xchg
nop
popa
andb
testb
mov
or
lcall
imul
add
aaa
add
sti
cmpsb
test
jmp
push
push
pop
add
enter
push
add
push
sub
sbb
testb
cmc
imul
jge
add
add
add
jae
mov
inc
push
add
sub
dec
and
iret
push
xorb
lock
ljmp
call
or
clc
push
add
mov
cmp
mov
add
adc
add
fisubrs
jl
inc
inc
test
add
daa
mov
filds
mov
inc
sub
xchg
inc
mov
add
add
call
add
nop
dec
mov
ja
jmp
scas
jbe
sub
mov
mov
add
add
mov
inc
pusha
add
rorl
das
mov
dec
add
andb
add
aad
or
xchg
inc
add
inc
add
test
loope
movsl
push
add
data16
mov
dec
add
jno
add
and
hlt
mov
pop
mov
icebp
lds
hlt
xlat
adc
add
push
lods
pushf
xchg
jo
dec
imul
ret
xor
outsl
cmp
ret
or
mov
add
add
or
in
mov
mov
sub
push
add
fisttpl
shlb
mov
je
pop
mov
add
mov
add
xorl
add
xchg
inc
popa
fbstp
add
ret
mov
insb
add
add
andl
pop
aas
lret
lock
jns
and
add
adc
pop
jbe
xchg
xchg
rcll
sbb
xor
add
dec
add
mov
daa
cmp
sbb
repz
stos
jb
or
push
add
and
pusha
add
icebp
add
cmc
je
dec
mull
rolb
addb
test
and
dec
add
fcomip
or
out
and
add
add
add
add
jp
jge
inc
add
push
add
stc
stos
mov
adc
sarl
movsl
outsl
jnp
jb
arpl
movsb
dec
add
sbb
decb
dec
add
mov
mov
add
js
insl
mov
les
lret
fsubs
test
push
add
push
add
cmpsl
jne
mov
cmp
lret
orl
out
add
xchg
int
das
push
add
outsb
add
xchg
lret
jns
add
fnsave
mov
add
add
sub
jne
cwtl
inc
add
lock
dec
add
data16
and
ficoml
sbb
cmp
in
add
push
add
mov
ret
js
les
adc
add
inc
add
shlb
add
adc
add
pop
or
sub
sub
sub
out
scas
sub
xlat
fstl
aam
stos
add
lock
pop
test
jno
push
add
add
add
add
das
cmp
stos
add
dec
add
inc
js
jl
mov
xor
cmp
out
lret
scas
or
outsl
pop
dec
sub
rcll
add
in
lret
repz
stos
xor
add
cmc
movsl
mov
sub
sub
mov
add
cmp
lret
push
add
data16
dec
mov
xor
add
add
add
aam
add
sub
jbe
orl
add
popa
call
inc
jle
lcall
add
dec
add
xor
add
push
cmp
inc
add
xchg
add
or
dec
inc
add
leave
mov
mov
cmp
xlat
cld
cld
and
add
faddl
aam
add
rcrb
mov
lds
rolb
xchg
roll
add
dec
add
add
test
add
mov
add
add
out
lret
mov
add
pop
add
add
add
xchg
test
add
add
add
add
add
or
inc
add
add
mov
shlb
add
add
jns
cmp
data16
adc
mov
dec
add
data16
movsl
mov
loopne
pop
add
ret
add
add
fs
sub
enter
aam
adc
movsb
scas
add
add
enter
repnz
pop
add
sbb
daa
in
adc
add
mov
add
das
rcr
add
bound
sbb
mov
sub
add
add
cmc
scas
jne
push
xor
inc
add
js
ficompl
add
add
inc
mov
add
or
pop
xchg
stos
icebp
test
cmp
add
xchg
mov
add
xor
movsl
jbe
cmpl
xchg
and
add
in
add
jle
mov
stc
add
sub
mov
outsl
push
imul
ja
add
movsl
fdivrl
pop
add
test
add
mov
scas
inc
add
push
test
add
pop
push
add
addl
add
or
push
add
add
add
pop
add
mov
je
xchg
dec
fldcw
idiv
add
add
add
por
add
add
dec
pop
add
popa
add
into
hlt
dec
add
sub
mov
add
and
and
jmp
je
scas
aam
pop
mov
pandn
in
cmp
add
xchg
fisubl
daa
sub
cld
jb
jl
pop
push
rorl
pop
add
lock
les
add
add
cmp
xchg
sbbl
jb
out
dec
add
movsb
mov
pop
add
dec
pop
push
add
jns
stos
sbbb
xlat
sbb
push
add
test
data16
mov
stos
lock
mov
cld
ret
add
push
add
add
add
cmp
dec
add
inc
add
add
sbbl
ljmp
jle
or
inc
mov
add
xchg
inc
stos
mov
add
imul
xchg
mov
add
adc
add
dec
xor
xchg
test
sahf
mov
xchg
js
aaa
bound
test
imull
push
add
mov
fisubs
jne
xchg
mov
movsl
add
mov
inc
add
cmc
ret
rolb
inc
in
sar
dec
add
add
sbb
lcall
adcb
add
cld
fwait
adc
add
inc
add
jns
fcoml
aad
mov
add
add
movsl
push
add
pusha
add
inc
add
cwtl
pop
add
icebp
and
add
sahf
lods
mov
push
add
mov
add
call
dec
add
push
js
pop
adc
div
rorb
inc
adc
inc
add
call
add
xor
mov
add
stos
pop
stc
add
call
gs
add
sti
or
arpl
mov
loopne
jnp
sub
in
add
mov
mov
add
pop
add
inc
lock
movl
mov
lcall
jecxz
inc
add
in
scas
add
loop
ljmp
cmp
xor
add
movsl
push
pusha
add
add
imul
mov
dec
add
add
mov
or
dec
pusha
add
pop
add
dec
add
cli
cmp
mov
and
add
push
add
loop
pop
adc
push
add
dec
add
scas
dec
hlt
xor
inc
jmp
xchg
jbe
jmp
out
add
add
push
add
movsb
in
push
add
push
xor
test
xchg
ss
add
fsubp
stc
mov
add
add
bound
pop
dec
mov
add
add
cld
and
add
dec
add
ljmp
cmp
hlt
dec
stos
sub
out
mov
mov
pop
add
add
popf
aaa
out
add
ja
sbb
pop
fiaddl
lcall
add
mov
das
adc
add
add
mov
ljmp
add
out
add
xor
add
jge
xchg
xor
add
cltd
add
mov
sbbb
add
rolb
test
add
fstp
addr16
pop
int
inc
mov
add
add
push
xor
sbb
add
xor
add
loope
add
rorb
jb
mov
xor
sub
lcall
test
pop
addl
mov
add
cmc
pop
dec
add
add
mov
out
cltd
push
outsb
add
add
fldcw
pop
add
pop
add
jbe
xchg
push
and
sub
das
stc
mov
add
add
testl
mov
in
les
lret
dec
into
push
add
scas
add
outsl
lds
ret
add
mov
push
daa
fiadds
push
cmp
imul
add
sbb
sub
out
mulb
push
add
mov
add
sub
test
pop
jbe
mov
mov
add
pop
add
push
add
add
adc
add
add
add
xor
push
add
add
std
lods
pop
add
aam
or
add
add
add
scas
and
sub
or
movsb
movsb
xchg
sbb
push
gs
add
aas
push
add
clc
pop
and
lock
or
rolb
add
testl
add
xor
pop
add
inc
add
push
push
add
add
mov
fisttps
sbb
in
add
stos
fcmove
ja
call
add
add
cmpsb
sti
cmpsb
or
pop
dec
add
imulb
add
sahf
mov
add
xchg
fsts
pusha
add
iret
add
add
mov
shl
arpl
addr16
into
cmp
filds
inc
add
jg
add
mov
add
sub
ret
xor
pop
fiadds
scas
mov
add
add
das
hlt
mov
add
mov
pop
add
or
adc
add
dec
or
fwait
jecxz
stos
cmpsb
mov
sub
mov
mov
add
scas
cmp
adc
jns
repnz
inc
outsl
pop
add
add
add
jecxz
push
add
add
das
push
add
fwait
sti
ficoms
adc
add
movsl
pop
add
push
add
add
pop
add
cwtl
xor
fsubrs
lret
add
dec
test
cmp
mov
cmpsl
shrb
push
add
movsb
ljmp
add
jp
idivb
mov
add
fmull
xor
add
push
inc
add
jmp
dec
inc
mov
pop
xor
mov
shrl
rcr
out
add
shll
jge
jb
data16
add
sub
xchg
inc
add
repnz
sub
fildll
add
pop
add
add
cmc
add
sbb
add
mov
add
cmc
das
push
cmp
aaa
mov
cmp
arpl
pop
add
adc
jbe
test
cmp
jecxz
std
dec
xor
sub
iret
mov
add
xor
imul
lea
roll
mov
add
or
add
jno
add
xchg
mov
dec
sub
sub
jmp
add
add
bound
sbb
int3
loope
mov
add
add
cmpsb
test
movsb
imul
add
mov
add
xchg
movb
imul
add
popf
dec
add
adc
add
ds
ja
out
pop
add
add
jmp
or
push
jns
or
fmul
mov
pop
add
jne
inc
add
inc
add
arpl
nop
add
pusha
add
inc
popf
imull
add
aaa
push
add
inc
add
jbe
or
or
add
cltd
cmpl
push
add
aad
lds
add
mov
add
mov
cli
add
mov
cli
push
xor
and
add
in
scas
mov
add
add
jb
fsubrs
clc
add
sub
sarb
repnz
mov
mov
pop
add
push
add
jmp
add
add
xorb
add
je
cmp
sub
add
add
jbe
hlt
push
shrl
inc
xchg
mov
stc
xor
add
mov
add
pop
outsl
mov
mov
out
movsl
xor
add
lock
add
or
out
cmp
lock
mov
cs
xor
add
push
pop
add
fstl
mov
iret
add
rcrb
mov
xchg
add
cli
xchg
frstpm(287
dec
xor
cwtl
jb
and
add
sbb
add
rcrb
jl
addr16
lcall
jnp
sbb
daa
jbe
clc
sub
lds
mov
add
add
or
cmpsb
push
add
or
mov
adcl
sarb
fwait
mov
loopne
mul
cli
mov
stos
add
cmp
cmc
push
daa
push
add
and
jmp
mov
jmp
data16
or
add
das
xor
add
add
fidivrl
add
push
xor
push
movsl
add
add
xchg
add
add
popf
add
cwtl
xchg
add
add
ja
clc
inc
pop
mov
add
lea
jmp
cmpsb
jge
add
lods
xchg
adc
add
and
loopne
pop
es
pop
xchg
bound
bound
push
add
xchg
cld
pop
imul
cmpsl
sub
mov
sbb
xchg
or
add
outsb
add
add
sub
add
lret
jle
neg
pop
rorb
out
sub
int3
sub
mov
fdiv
nop
sub
dec
mov
add
mov
mov
add
sbb
in
call
add
xchg
mov
add
data16
cmp
push
add
add
leave
xchg
pop
out
bound
cmp
loop
add
ja
mov
movsl
fwait
mov
and
pop
jo
cmp
lods
jns
inc
add
add
add
les
aaa
test
cld
in
jle
cmp
cmp
jmp
add
mov
inc
push
add
mov
out
add
add
sarb
pusha
add
icebp
lret
inc
add
call
jle
xchg
cmpsl
fwait
pop
or
pop
addr16
push
dec
jae
jmp
dec
add
mov
adc
or
ror
jge
add
loopne
add
add
jbe
push
add
iret
jmp
add
lret
push
add
add
add
inc
add
add
inc
jg
add
hlt
push
das
popa
cmp
xor
enter
cmpsb
sub
mov
bound
cmpsl
cld
daa
sub
xchg
xchg
cmp
in
dec
mov
or
jl
cmpsl
mov
ret
add
cmp
push
push
add
jg
adc
add
neg
incl
addb
pop
mov
sbb
loopne
add
dec
inc
pop
sbb
jne
cld
push
add
out
cwtl
xor
add
data16
gs
cmpsl
test
out
mov
add
loope
pusha
add
inc
or
or
xor
add
add
repz
ret
jne
xlat
mov
dec
xlat
sbb
mov
add
sbb
inc
add
xor
add
test
add
and
movsb
pusha
add
mov
add
add
pop
adc
add
inc
ret
adc
push
add
cld
adc
jno
enter
and
add
mov
sarb
add
in
bound
cmp
outsl
aas
or
push
and
stos
iret
push
pop
add
jnp
xor
add
add
jmp
add
add
ss
add
or
add
mov
popa
ret
mov
ja
jne
push
add
sub
adc
add
pop
add
xchg
loop
aam
popa
push
add
add
mov
add
enter
mov
add
mov
dec
outsb
add
sub
dec
cmp
mov
sbb
jmp
xchg
pop
or
je
jnp
sub
inc
mov
xor
add
add
xchg
lods
fisttpll
add
add
add
add
andl
cmpsl
cwtl
inc
cmp
mulb
mov
scas
shl
rolb
add
add
add
les
jg
loop
add
lds
fmulp
pop
add
lock
add
lcall
fists
jle
sub
and
in
add
mov
test
add
add
fists
fsubl
data16
mov
subl
add
jb
and
mov
aad
dec
add
nop
xchg
idivb
add
fiaddl
add
add
lcall
cmpsb
mov
js
fidivrs
ljmp
pusha
add
add
lret
add
repz
inc
movsl
mov
cmp
and
add
add
mov
xchg
and
add
pop
and
mov
pop
fnstenv
enter
mov
add
or
jl
push
mov
fcmovnb
cld
jo
inc
add
dec
add
lahf
add
xor
jns
or
repnz
das
add
and
add
push
add
aas
scas
mov
add
sub
test
addl
add
mov
testb
sti
add
aam
sub
outsb
add
adc
je
aaa
and
adc
out
xor
jmp
out
imul
inc
add
je
imul
add
inc
add
jle
in
adc
xor
outsb
add
add
cwtl
add
add
mov
loopne
push
add
xor
sub
sar
mov
js
ljmp
lcall
call
push
pop
mov
add
pshufw
cmp
popf
mov
inc
add
mov
mov
add
sub
adc
cltd
fisubrs
sbb
add
fisubrs
and
dec
add
mov
fsubrs
add
mov
dec
add
add
sbb
and
add
mov
shll
dec
add
add
add
mov
sti
mov
js
adcb
push
add
insb
add
adcb
add
stc
jnp
add
mull
outsb
add
add
jnp
enter
sub
push
jne
lods
out
jecxz
enter
mov
add
add
call
imul
add
cmp
push
pop
add
mov
enter
jmp
or
pop
dec
add
jo
aam
add
lods
xchg
mov
stos
add
and
add
and
add
stc
lods
mov
repnz
cmp
add
mov
sbb
fiadds
mov
mov
sub
pop
add
lock
int
loopne
sbb
push
stos
out
cmp
dec
int3
or
xchg
loop
ret
aam
js
mov
mov
jno
subb
add
lds
cmp
scas
insl
sbb
xchg
jmp
add
repnz
adc
add
add
push
sub
push
add
aas
flds
add
add
daa
faddl
subl
push
add
push
sbb
pop
sub
mov
hlt
imul
insb
add
cmp
ljmp
aas
add
add
lea
sahf
adc
sub
loope
add
add
add
add
pusha
add
add
xchg
add
scas
mov
xchg
add
add
add
xor
daa
and
push
int
int
pop
enter
sbb
js
mov
add
outsl
add
cwtl
or
mov
and
add
addr16
add
lahf
sbb
pop
add
sbb
mov
fisubs
rorl
xor
lea
add
or
dec
add
add
dec
inc
roll
mov
fistl
in
pop
insb
add
testl
add
scas
adc
out
mov
imul
pop
add
lahf
jge
loope
or
pop
add
push
xchg
push
inc
add
pop
add
test
bound
jnp
stos
ss
jl
ficoml
insl
add
add
rolb
lods
mov
adc
add
js
lds
mov
or
cmp
nop
and
mov
add
mov
add
bound
movsl
pop
xor
add
js
imul
or
into
adc
add
ljmp
scas
cli
mov
fsts
add
icebp
shlb
stos
add
push
pop
add
sahf
add
mov
rcl
lods
mov
xchg
and
add
pop
cwtl
loop
jmp
mov
sbb
ret
daa
addb
xchg
ljmp
push
add
dec
add
daa
mov
test
inc
add
and
mov
mov
pop
add
pop
add
jb
subb
mov
push
sub
stos
shr
dec
add
lods
jg
xchg
call
adc
inc
add
rorb
fstl
push
imul
or
cmp
xchg
xor
add
add
pop
xor
ljmp
movsl
shr
mov
incb
mov
add
repnz
dec
pop
add
add
xor
add
mov
out
add
cmp
out
mov
ss
daa
jge
out
shl
add
outsl
push
push
add
mov
js
mov
pop
add
inc
add
mov
adc
add
mov
imul
add
mov
int
mov
insl
addr16
outsb
add
add
xchg
mov
jmp
mov
jns
sub
pop
imul
add
xor
push
lds
add
add
lods
into
fwait
pop
add
pop
add
add
push
add
adc
add
add
cmp
add
add
scas
add
push
add
addr16
xor
add
dec
dec
cwtl
inc
jne
push
xchg
imul
add
xchg
push
jo
jno
lea
push
mov
lock
add
call
jecxz
add
das
bound
or
mov
ret
mov
dec
add
fcompl
cmp
sub
or
in
cmp
out
add
mov
pop
add
xchg
aas
sbb
sub
jbe
mov
xor
add
add
stos
out
aaa
add
push
add
repz
nop
add
aaa
add
stc
add
mov
mov
add
in
cmp
adc
add
push
xchg
int3
jo
adcb
testb
sub
mov
jmp
mov
ret
jb
into
fcmovnb
ds
ret
add
dec
add
and
add
popa
insb
add
inc
xlat
cld
push
add
cmp
sub
outsl
leave
pop
jne
adc
add
mov
jmp
jge
lea
fdiv
inc
iret
jge
cmpsb
scas
pusha
add
loop
mov
add
jnp
outsl
mov
pop
add
rolb
mov
add
and
add
add
xchg
mov
add
fstpt
jae
andb
push
add
leave
stos
push
add
mov
loopne
and
add
popf
ret
jae
xor
and
addb
lods
idiv
jmp
dec
add
xchg
jbe
shll
xchg
imul
lahf
pop
push
add
mov
and
push
xchg
and
add
add
mov
cltd
scas
mov
cmc
xor
add
add
and
add
add
add
jle
mov
add
inc
sbb
repz
or
push
push
add
push
add
cltd
aas
push
add
add
lds
ljmp
add
icebp
add
loopne
ret
add
cld
push
scas
arpl
xor
pusha
add
push
add
pop
add
shl
xorb
jo
stc
clc
pop
add
mov
pushf
mov
scas
mov
mov
pop
mov
add
add
add
filds
adc
add
add
addl
cld
bound
icebp
ja
scas
sarl
add
repnz
insb
add
stos
mov
mov
sbb
aas
jb
dec
add
jnp
pop
sbb
rolb
add
xchg
pop
cmpsl
dec
push
add
push
adc
cmp
mov
nop
test
sbbl
dec
pop
adc
add
cmp
loopne
popa
test
inc
add
add
insl
ja
lods
lcall
pusha
add
or
out
movsb
lea
stos
movsb
mov
adc
add
dec
sbbl
sub
lret
clc
xor
xor
add
jge
hlt
icebp
xlat
adc
add
sarl
mov
add
sub
mov
adc
sbb
add
add
add
add
lea
pop
add
add
in
leave
push
add
pop
dec
add
sub
outsb
add
imul
add
ljmp
adc
push
add
adc
add
xchg
test
jle
and
add
mov
dec
add
popf
add
add
add
push
add
xchg
lods
and
add
add
insb
add
add
pop
add
jp
mov
add
push
add
add
rorl
inc
add
cwtl
imul
add
mov
mov
cwtl
add
insb
add
add
pop
addr16
push
add
test
add
inc
add
add
add
add
data16
add
mov
fisttpll
add
pushf
pushf
or
nop
add
mov
mov
stos
mov
and
jbe
dec
mov
fiaddl
xor
add
or
mov
pop
std
add
aam
jle
fists
ljmp
decb
stc
outsb
add
jle
mov
sub
xchg
mov
push
movsl
xor
adc
sahf
pop
inc
add
gs
add
jge
fisubs
mov
add
mov
sbb
daa
faddl
cmp
sbb
fwait
jmp
lds
or
shr
add
pop
outsl
add
xor
aam
add
add
stos
add
jg
jo
mov
pop
xor
inc
add
in
lods
insl
inc
int
add
loope
adc
push
add
xchg
insb
add
mov
xlat
fmulp
stc
faddl
ljmp
add
mov
add
add
lods
add
call
repz
cmp
dec
inc
add
mov
fstps
add
push
add
add
xor
push
xchg
add
and
add
add
bnd
aad
popf
sti
sbb
cmpsl
mov
add
pop
cwtl
sarb
adc
into
xor
rolb
jg
das
add
in
jns
or
pop
sarl
adc
add
add
mov
xor
mov
inc
add
cwtl
repz
and
in
xchg
cmpsb
sbb
jge
mov
adc
mov
mov
push
add
jmp
filds
pop
mov
jno
fsubl
add
jne
inc
add
data16
push
add
mov
and
add
jae
xor
add
gs
lcall
cmp
movsb
push
add
or
mov
add
insl
ret
cmp
xor
std
andl
add
inc
add
mov
orb
in
insb
add
clc
outsl
xchg
outsl
mov
gs
dec
add
jns
mov
leave
push
push
add
cmc
add
xchg
add
add
mov
add
ja
mov
xchg
pusha
add
xchg
cld
outsb
add
negl
repz
xor
jbe
das
ss
add
lea
mov
push
xor
lret
incl
jl
dec
imul
mov
add
ja
jb
dec
add
xchg
sbb
xor
add
syscall
std
add
add
or
sub
cmc
loop
adc
add
fs
add
push
outsl
inc
add
into
mov
cmp
icebp
fwait
inc
aad
cmp
ret
ja
add
sub
aaa
xchg
add
xor
dec
jge
adc
in
je
mov
mov
iret
add
add
test
bnd
or
sti
mov
add
add
mov
add
jecxz
xor
add
pop
inc
add
sbb
mov
mov
xchg
add
nop
add
sub
inc
sub
mov
out
fdivr
mov
pop
add
xchg
push
sub
test
out
fistpl
add
mov
add
hlt
sahf
inc
xor
int3
sbbb
push
add
add
pop
leave
int3
ficoml
dec
add
imul
push
add
add
sub
add
call
arpl
and
add
insl
loopne
add
popf
enter
idivl
stos
sub
adc
add
popf
pop
cltd
mov
mov
adc
sbb
fstpl
mulb
rcrb
add
lods
fnstenv
cmp
add
add
ja
cltd
cmp
pop
add
inc
add
add
add
pop
add
fwait
add
pop
add
call
xchg
or
mov
push
fsts
and
add
jae
mov
add
add
push
xchg
add
jg
repnz
ret
pop
jne
push
add
add
std
mov
scas
jp
cmp
jl
and
add
fincstp
aas
outsl
lcall
jmp
mov
inc
mov
mov
sub
inc
add
or
cltd
cli
and
add
shlb
jg
add
add
add
mov
xchg
add
add
add
dec
andb
add
mov
sub
out
sar
clc
js
mov
add
mov
leave
add
push
add
xor
xchg
out
dec
jbe
imul
inc
icebp
push
add
bound
rcll
sahf
lods
cmc
lods
mov
add
ss
loope
sbb
cmp
dec
sub
scas
imul
test
add
add
sub
cmp
insb
add
sub
push
add
mov
add
add
sbb
scas
loopne
cmp
cmp
lret
add
clc
xchg
xor
add
add
add
inc
add
push
add
inc
mov
insl
mov
xchg
sub
cmp
pop
add
aaa
mov
shrl
sub
sbb
pop
add
add
push
fdivs
sbb
imul
inc
add
dec
add
add
dec
in
mov
inc
add
add
aas
cmp
add
in
loope
add
add
nop
add
push
add
sbb
inc
xor
add
in
cltd
lods
pop
push
add
add
dec
add
sahf
xchg
jecxz
cmp
subb
xor
test
add
add
adc
nop
addl
cmp
lods
loopne
push
add
subb
cltd
jle
imul
xchg
adc
pop
add
add
sbb
enter
sar
sub
cmpsl
push
out
out
add
sub
add
jmp
sbb
inc
add
mov
mov
cld
adc
add
jmp
add
add
jl
sub
xchg
add
stos
je
subb
and
add
dec
add
out
leave
es
add
sub
enter
xor
add
movsl
mov
xchg
aas
popa
jle
xchg
sub
andb
add
cld
cld
movsb
insl
dec
add
add
js
pop
and
add
add
adc
xor
add
leave
fiaddl
push
cmpsl
add
xor
popf
pop
add
int3
or
add
add
add
fwait
sub
xchg
xor
dec
shr
lds
add
sbb
cwtl
arpl
fsubs
cmpsb
add
orb
mov
pop
dec
push
add
in
or
push
add
add
pop
add
loope
lcall
jo
xchg
adc
addl
dec
add
add
add
addr16
add
inc
xchg
pop
add
xchg
xor
add
in
enter
add
jmp
pop
test
cmpsl
int3
movl
add
and
ret
popf
roll
in
or
add
add
mov
add
stos
mov
add
sbb
imul
add
sbb
push
add
ljmp
enter
lds
ret
add
add
add
add
addl
out
popf
mov
sub
add
add
aam
add
adc
and
xchg
xchg
adc
add
cltd
aas
dec
imull
add
mov
sub
sub
jbe
adc
add
xor
add
dec
add
roll
add
push
cmp
subb
push
addl
ss
int
negl
add
data16
jbe
xchg
lock
add
mov
sbb
int3
test
xlat
or
add
mov
jg
adc
testl
sbb
add
sbb
sbb
xchg
insb
add
stos
sahf
sub
popf
stc
leave
jp
mov
add
inc
add
push
test
addr16
insb
add
addb
out
add
int
add
or
xchg
test
add
test
jbe
std
in
mov
lret
add
cmc
add
std
push
sbb
and
add
cld
dec
add
daa
call
scas
ljmp
add
sub
aaa
pop
add
mov
rcll
push
add
std
bound
les
push
into
push
add
mov
adc
icebp
xor
sbb
test
push
xor
add
add
stos
dec
push
add
sub
jle
sbb
sub
sub
push
lods
jno
add
ret
ret
std
mov
push
add
popa
in
cmpsl
xor
jo
xchg
nop
pop
icebp
mov
jb
mov
mov
add
loopne
xchg
add
lea
dec
add
sub
pop
pop
add
aad
push
out
dec
add
xor
add
into
adc
cmp
mov
sti
sti
or
lock
sub
sub
dec
add
sbb
mov
mov
add
lret
movb
sbb
sub
dec
add
sub
push
aas
out
add
jp
mov
cmc
xchg
xchg
or
pushf
aad
xor
add
push
add
add
hlt
pushf
rcll
add
add
add
add
ja
cs
dec
add
add
testb
ja
nop
jne
add
add
adc
add
add
adc
add
add
inc
mov
jg
add
icebp
ja
mov
vaddpd
ret
mov
jecxz
imul
mov
rolb
push
add
add
mov
jb
inc
std
xchg
mov
mov
add
ljmp
sbb
add
add
add
add
cmp
aas
push
add
mov
loopne
jae
shlb
lcall
ds
sti
push
push
add
jge
pop
add
pop
mov
dec
sbb
addr16
fsubl
add
or
je
cld
jns
les
jp
ret
and
add
sbb
push
scas
ja
sbb
adc
inc
jle
and
add
inc
add
xchg
lds
xor
add
or
out
add
jb
sub
inc
add
mov
xlat
test
add
jb
inc
add
adc
add
mov
adc
jne
jae
add
test
test
jl
sub
je
inc
bound
pop
push
sub
ss
es
add
add
add
jg
ss
push
sbb
into
movsl
add
add
ret
ja
cmpsb
movsl
into
dec
add
add
mov
add
fistpll
jp
pusha
add
mov
sbb
sbb
ds
sub
and
fstl
xchg
aad
and
push
fcoml
xlat
les
dec
lock
add
popf
xchg
dec
add
roll
dec
add
add
sub
add
add
xorb
add
add
test
add
repz
jb
pop
xchg
add
add
add
add
in
lods
mov
mov
fisttpl
dec
xor
add
sbb
push
sub
add
add
mov
add
mov
nop
pop
negl
and
add
cmpsl
xchg
jno
out
ret
cmp
dec
dec
add
add
mov
jmp
push
fwait
dec
cld
or
inc
add
add
push
mov
ret
pop
mov
and
add
dec
pop
ja
push
add
add
push
xor
add
scas
add
pop
add
jg
rol
enter
lea
sbb
push
add
faddl
add
out
stos
pop
and
mov
add
dec
mov
add
add
scas
mov
ljmp
add
add
sbb
sbb
cmp
sub
jg
loop
jo
xchg
clc
mov
icebp
add
and
bound
mov
add
add
xor
add
sti
int3
out
bound
push
add
rolb
add
repz
icebp
inc
add
popa
jecxz
add
sbb
cltd
icebp
fidivrl
mov
popf
add
push
add
and
add
js
inc
add
push
add
jmp
sub
pop
and
cmpsl
pop
add
ficomps
arpl
add
aas
mov
add
add
sbb
sbb
push
xor
mov
adc
add
add
out
jb
mov
jg
fs
add
add
aas
std
mov
aas
call
rorl
push
add
test
mov
adc
test
push
add
inc
add
add
add
pusha
add
jle
add
add
add
fsubl
push
add
mov
add
jl
xchg
movsl
jmp
push
add
dec
setg
pop
imul
jnp
sbb
std
test
adc
cmp
sbb
adc
add
lods
mov
jns
movsl
add
frstor
inc
add
jecxz
add
add
xchg
insl
add
inc
add
repz
add
addr16
add
xchg
add
add
gs
jb
pop
add
add
aaa
dec
add
add
jo
jno
fwait
add
sub
pushf
inc
xchg
xor
rcrl
ljmp
add
sbb
les
add
addb
pop
add
mov
add
add
mov
add
outsb
add
sbbb
mov
or
sbb
and
add
sub
push
sub
pop
add
xor
test
sbb
in
aaa
roll
in
push
add
xchg
add
inc
adc
push
xor
push
push
testl
add
add
add
add
mov
test
test
add
jbe
test
add
cmp
daa
aam
nop
mov
in
add
int
push
add
lret
adc
add
push
add
mov
cmp
xchg
push
js
int3
leave
mov
add
cs
push
add
rclb
add
scas
cwtl
test
fdivrl
out
add
add
test
cmp
or
loopne
add
cmpsb
ljmp
add
mov
add
adc
add
add
lcall
repz
jp
xchg
cli
or
push
add
xchg
or
jg
add
add
add
add
int3
in
pop
pop
lds
push
cmpsl
cmp
xor
or
outsl
add
xor
add
xchg
fimuls
add
xchg
sbb
push
add
pusha
add
jb
fiaddl
inc
add
sti
push
add
call
repnz
xor
inc
add
out
sti
cltd
jnp
dec
add
into
mov
add
add
add
add
ret
jl
ja
xor
pop
clc
mov
jle
push
jl
push
add
hlt
add
pop
add
add
addb
into
dec
aad
loope
sub
mov
mov
sub
xor
add
outsl
jmp
inc
push
jbe
cmp
in
lock
adc
rol
and
add
mov
add
ljmp
add
cmc
or
add
add
arpl
fldenv
out
jae
xor
add
outsb
add
adc
loope
adc
inc
xor
add
in
push
xor
rcrb
add
aam
mov
sub
mov
dec
add
shrl
dec
add
fnstcw
add
add
xchg
pusha
add
jecxz
push
add
rcll
mov
add
sub
dec
not
push
add
ret
sbb
popf
xchg
fmull
adc
lahf
xchg
mov
imul
add
pop
jmp
add
lret
popa
ret
add
mov
mov
sub
and
add
add
jle
xlat
sarb
loopne
dec
add
call
outsl
je
negl
add
push
add
mov
cmc
add
add
mov
scas
add
push
add
add
add
daa
jle
cmp
jmp
add
add
fcompl
dec
and
add
stc
add
movsl
outsb
add
mov
sbb
lahf
or
add
loop
push
adc
add
mov
push
add
les
push
add
aam
out
sbb
mov
popf
test
pop
add
sti
shll
mov
cli
shlb
xchg
bound
xchg
pop
add
mov
adc
or
add
pop
daa
aad
dec
add
popf
add
fisubrs
fsub
xor
add
outsl
dec
jmp
add
xchg
add
into
add
or
dec
enter
add
push
add
repnz
dec
clc
subl
pop
add
add
add
push
add
xor
add
add
cmc
dec
adc
add
cmp
into
dec
cmp
xchg
cmc
lods
lahf
fiadds
inc
add
mov
in
add
add
jle
sub
jmp
add
cld
fistl
insb
add
mov
popa
movsl
loope
testb
cmp
in
ret
push
popa
adc
cmpb
add
sbb
push
add
dec
add
mov
inc
push
add
add
outsl
add
add
push
lods
adc
cmp
push
add
add
lock
fwait
stos
hlt
cli
pop
add
bound
sub
xchg
sti
popa
movsb
frstor
aad
add
leave
mov
rolb
fcomps
add
mov
fcmove
adc
add
jno
scas
sub
test
pop
xchg
inc
nop
aaa
cwtl
add
add
add
stc
sbb
dec
lret
hlt
dec
add
cwtl
into
ret
lea
add
cmp
dec
add
cmp
int
aad
add
pop
pop
add
lret
add
mov
nop
inc
call
add
daa
clc
add
add
dec
add
add
or
and
add
ret
dec
add
add
jno
add
pushf
popa
push
add
add
add
add
inc
mov
sbb
dec
add
add
aas
xchg
in
dec
loop
adc
add
and
add
add
cmpsb
outsb
add
sbb
dec
add
sub
arpl
repz
add
pop
outsb
add
add
add
mov
loopne
push
add
je
or
and
add
lret
add
movhps
push
add
sub
add
cld
mov
rorb
push
dec
mov
xor
add
pushl
mov
add
add
cmpsb
insb
add
sub
ret
adc
lods
cmp
int
lods
xor
add
mov
pop
xchg
add
add
pop
pop
add
loope
jbe
xor
add
lods
add
sub
mov
nop
adc
mov
out
mov
mov
sub
lods
and
add
mov
pop
add
adc
shrb
enter
sbb
mov
das
popa
std
pop
add
add
ficoml
adc
imul
add
jne
xchg
movsb
loop
out
imul
sub
ljmp
sub
pop
and
add
sbb
mov
idivb
xor
pop
inc
add
lcall
aas
lcall
lods
add
into
and
insb
add
cmp
jbe
cli
push
dec
add
and
aam
mov
lock
ljmp
imul
add
dec
mov
adc
add
push
add
stos
jle
loopne
jge
pop
and
mov
aam
clc
add
roll
mov
fsubrs
lahf
fists
aad
loop
fcoml
sahf
mov
call
repnz
daa
loop
mov
add
stc
out
pop
add
fwait
popa
xor
jmp
push
add
sbb
mov
push
add
add
add
stos
out
pop
add
enter
and
add
dec
ljmp
adc
push
out
dec
add
jne
mov
outsb
add
jp
jnp
dec
add
dec
inc
add
mov
dec
add
jmp
test
add
add
add
sbb
pusha
add
subl
fcmovnu
push
add
out
cwtl
or
sbb
cmp
imul
fcoms
add
lds
add
cmpsb
in
push
shrl
sbb
dec
add
add
jle
mov
aas
repnz
mov
mov
daa
mov
jecxz
popa
outsl
mov
and
add
cmp
jb
je
shlb
add
mov
jecxz
jns
fcmovbe
test
add
add
nop
add
in
add
mov
les
bound
push
ficomps
in
add
add
roll
dec
add
or
cltd
rorb
mov
xchg
xor
nop
pop
repz
shll
mov
loop
lock
add
jbe
nop
shrl
outsb
add
cmpsl
lcall
insb
add
hlt
pop
js
and
add
add
mov
adc
adc
add
inc
add
push
add
movsl
imul
pop
push
clc
scas
loopne
fstpt
lods
pop
add
pop
lods
add
lods
es
add
or
mov
or
aas
add
add
rcl
mov
lods
cmpsl
movsl
lods
std
ja
add
add
add
les
addr16
sbb
mov
mov
add
test
add
add
xchg
fwait
out
sub
sbb
dec
je
and
mov
mov
sbb
xchg
lcall
adc
add
mov
push
sub
hlt
sbb
std
mov
cmpl
mov
jmp
stos
bound
inc
xor
add
movsl
loop
lods
mov
jbe
cmp
add
push
mov
lock
pusha
add
dec
mov
add
lods
dec
add
add
cmc
push
cmovge
aas
adc
add
sbb
push
orb
add
add
add
mov
and
add
addb
add
pop
add
push
sbb
sub
aas
add
xor
pushf
bound
or
mov
add
add
sub
mov
arpl
jle
mov
ret
add
add
adc
add
fldt
xor
or
fstl
mov
nop
aam
push
add
fistps
add
jl
int
test
add
nop
sbb
in
scas
vdivpd
scas
push
add
mov
add
hlt
or
adc
andl
add
pop
add
inc
add
out
pop
adc
mov
push
push
add
add
add
xchg
xlat
add
sub
pusha
add
add
adc
add
inc
add
xchg
pushf
je
aam
jl
adc
test
mov
test
add
or
jae
mov
add
test
mov
out
sbb
push
add
mov
mov
push
add
sub
and
jne
push
out
add
out
mov
mov
and
adc
sbb
ret
imul
adc
ds
test
fildll
cltd
mov
xchg
loop
stos
add
push
add
mov
aas
and
add
add
add
add
add
jno
bnd
jge
and
add
lea
mov
iret
mov
push
add
scas
add
xor
ljmp
xchg
imul
add
inc
add
mov
add
add
insl
les
pop
add
faddl
leave
movsl
jg
push
add
xchg
xchg
cld
imul
mov
ljmp
lret
dec
add
mov
pop
addr16
roll
lret
add
add
cwtl
push
daa
add
pusha
add
fisttpl
cs
cwtl
dec
add
data16
mov
orl
add
xchg
fcomps
lahf
jnp
add
out
loop
adc
dec
cltd
vpavgb
jmp
cmp
addl
pushf
fdivl
pop
add
dec
sbb
add
jmp
cmp
jecxz
cmp
jns
sbb
sbb
pop
loop
aad
sub
ljmp
push
add
xchg
jecxz
jbe
mov
jl
mov
add
mov
shrl
add
add
add
mov
mov
jle
mov
stos
sub
pusha
add
xchg
pushf
std
cltd
out
mov
insb
add
pushf
ds
test
push
clc
sub
dec
add
out
add
add
fcomip
out
out
aaa
ret
add
imul
inc
add
lret
sbb
loope
rclb
mov
and
add
fistps
sbb
fsubrs
nop
jno
pop
add
add
jmp
jne
mov
roll
xlat
adc
add
add
mov
std
xlat
push
adcl
cmc
sbb
sub
mov
loope
add
add
add
add
repnz
mov
sahf
lcall
pop
mov
or
mov
push
rclb
mov
push
insb
add
mov
xchg
add
fsubp
je
add
add
sub
jp
pop
mov
and
add
adc
mov
add
fs
dec
ljmp
adc
pusha
add
outsl
imul
lcall
jmp
adc
insl
ficoml
sub
repz
mov
dec
sub
mov
sub
cmc
cmp
out
add
jle
add
into
data16
lahf
outsl
mov
add
jg
fiadds
add
insb
add
add
add
jns
push
scas
pop
add
add
xchg
add
int3
in
xor
fwait
xor
add
add
add
notl
adc
add
cmpl
xor
xchg
pop
or
testl
add
xchg
xor
bound
rclb
add
sub
xor
xchg
push
icebp
mov
insb
add
add
pusha
add
movsb
push
fwait
push
add
add
xchg
sub
es
add
mov
add
sahf
mov
add
mov
add
and
lea
inc
add
pop
add
mov
jae
movsb
adc
push
pusha
add
add
stos
arpl
cmp
out
add
add
add
add
add
add
outsb
add
push
add
add
inc
mov
mov
nop
sahf
es
add
in
pushf
adc
jle
cltd
xlat
xor
push
mov
xor
add
movsl
add
inc
add
jl
sbb
mov
mov
popf
orl
dec
add
mov
or
jp
and
nop
push
add
in
cmp
add
in
ja
enter
or
inc
xor
add
add
xchg
cmpsb
or
ficompl
sub
stos
mov
in
ja
pop
add
das
add
add
test
push
add
lahf
shl
sbb
xchg
push
add
sahf
pop
add
or
add
in
mov
mov
pop
cmpsb
add
dec
add
fistpl
adc
add
add
add
jb
in
stc
ja
fsub
xor
add
push
add
jmp
xchg
add
add
xor
add
or
imul
add
enter
fstp
out
ret
dec
jecxz
cmpsl
xchg
in
mov
jb
popa
dec
add
push
add
jp
jne
sti
lods
mov
mov
dec
add
jmp
add
lret
add
jg
roll
out
test
xchg
fsubs
add
fiaddl
dec
test
add
dec
sbb
out
hlt
adc
add
loop
in
cs
fwait
popf
or
ret
incb
imul
xor
add
or
repz
add
loope
cli
shll
lahf
add
pop
movsl
add
sti
xchg
bound
pusha
add
add
mov
gs
cmp
in
loope
mov
add
aam
mov
lahf
repnz
add
or
and
add
add
or
in
mov
push
add
adc
enter
orb
pop
adc
add
jne
call
push
add
stos
ret
aam
inc
add
push
repz
add
xchg
push
add
add
push
xlat
pop
add
add
lods
lea
xchg
pop
add
jmp
add
sbb
add
sub
mov
and
call
sbb
and
and
mov
push
sub
xchg
arpl
testl
add
jge
daa
add
add
add
int3
xchg
jmp
sahf
in
add
rcrb
mov
lahf
out
jmp
fisubrl
add
je
xor
add
add
add
jg
sbb
xchg
inc
adc
fiadds
xchg
add
add
push
outsl
add
add
add
sbb
add
mov
and
leave
mov
push
mov
mov
mov
adc
add
push
add
add
sbb
loop
lds
xchg
sahf
pushf
inc
add
insb
add
add
pop
add
fwait
add
add
jp
and
mov
mov
add
hlt
clc
jns
and
push
add
sub
add
into
test
call
flds
movsl
sub
iret
add
jns
jmp
mov
and
add
in
sub
add
pop
insl
add
ret
xchg
push
sti
sub
test
add
add
aaa
xchg
add
add
fcmovnb
data16
pop
add
dec
add
fwait
or
push
add
dec
fs
pusha
add
add
jg
enter
add
loop
mov
xchg
loop
fiaddl
popf
mov
iret
sbb
stos
in
mov
cmpsl
adc
add
imul
add
add
inc
adc
add
push
dec
add
test
jl
or
sub
add
fs
shl
mov
stos
add
fisubrl
pop
add
loope
sahf
cmpsb
aas
in
icebp
jno
add
add
xchg
sub
and
test
popf
clc
pop
add
mov
scas
add
add
inc
add
call
mov
mov
add
push
push
add
jmp
add
addb
adc
les
adc
add
pop
fistl
arpl
pop
add
cmp
data16
add
add
jnp
sub
insb
add
xchg
daa
push
add
dec
add
out
jb
shrb
add
paddusw
bnd
inc
add
mov
mov
jle
je
inc
add
jno
mov
fadds
inc
add
push
add
lret
pusha
add
std
subb
mov
add
add
add
jno
add
sarb
repz
sub
push
ss
add
push
add
repz
lret
xor
add
insl
es
add
sub
nop
sbb
sahf
outsb
add
call
outsl
idivl
add
push
mov
add
push
add
mov
add
in
movb
add
add
push
addl
add
inc
xor
add
mov
jns
pop
ja
sub
mov
dec
mov
xchg
pop
ret
add
addr16
pop
jmp
add
out
mov
add
sub
leave
mov
adc
push
add
pusha
add
push
mov
dec
add
add
or
cwtl
xchg
add
xchg
sahf
in
hlt
roll
add
add
dec
add
js
xchg
push
aad
add
jl
xchg
cmc
std
cmpsl
out
addb
inc
add
js
iret
and
add
popa
sub
outsl
sbbb
add
enter
ss
xor
sub
ljmp
sbb
in
std
pop
add
jnp
push
add
or
and
in
test
arpl
or
add
add
add
add
fcompl
inc
add
out
out
add
sbb
add
dec
or
inc
xchg
sbb
add
pop
add
sbb
rorl
push
push
add
adc
mov
add
dec
add
pushf
pushf
or
clc
push
into
test
outsb
add
add
add
add
cmc
dec
mov
movsl
jmp
or
and
add
dec
add
xchg
cmp
xchg
push
add
jl
pop
sub
push
mov
dec
add
or
lods
cltd
push
inc
add
xchg
cmpsb
xchg
push
cmp
rcll
or
adc
mov
add
enter
add
inc
inc
add
or
movsb
jp
mov
pop
add
cmpb
lock
mov
insl
lret
and
add
push
add
add
add
add
sub
in
adc
add
test
dec
imul
or
in
popl
fwait
xchg
xchg
pop
mov
pop
add
inc
add
jns
jp
adc
add
cwtl
lds
add
and
hlt
lds
adc
movsb
int3
imul
pop
cltd
add
into
add
add
int
das
test
cmpsl
add
push
imul
adc
test
lcall
xchg
daa
xchg
add
ret
rcrl
add
rolb
add
jle
in
cmp
dec
sbbb
add
add
pushf
add
and
add
add
std
push
rolb
out
ret
mov
imul
dec
fidivl
fwait
add
lcall
push
daa
add
mov
jmp
or
out
insb
add
add
int3
add
out
daa
and
jb
dec
add
cmp
add
sbb
jbe
add
test
xlat
xchg
add
add
push
add
sbb
push
add
jne
sub
add
add
mov
add
adc
add
jmp
aaa
mov
add
add
push
add
and
add
add
push
add
push
add
mov
loope
xchg
push
add
pop
fmuls
out
add
incb
call
inc
add
dec
add
jo
inc
fdivr
out
mov
sub
dec
add
push
add
xchg
dec
mov
add
fwait
add
int
mov
jmp
cltd
sub
mov
add
inc
mov
pop
add
negb
adc
add
or
ljmp
add
dec
add
push
add
jnp
xchg
or
add
sbb
les
add
or
lahf
aas
andl
mov
add
loop
mov
mov
xchg
scas
cmp
cli
in
data16
lock
add
lcall
add
leave
sub
xchg
sbb
push
test
mov
add
pop
mov
imul
ljmp
and
sub
xor
add
add
and
add
mov
enter
cmp
add
sbb
adc
add
dec
add
or
lds
push
add
mov
aam
daa
add
sarl
mov
lods
mov
sub
pushf
push
mov
push
add
add
dec
add
push
add
jge
jp
sbb
sbb
jb
daa
stc
add
loop
sbb
pop
push
jmp
repz
and
add
add
mov
lret
add
add
xchg
testb
add
xchg
push
xor
add
and
and
add
add
add
add
mov
add
inc
add
std
aas
test
inc
add
add
add
inc
add
jl
or
insl
ljmp
jno
jmp
fwait
mov
add
add
and
sbb
dec
add
roll
jp
jb
in
inc
enter
mov
pop
add
push
add
adc
cmp
loopne
sbb
add
stos
gs
aaa
lods
add
ficomps
push
add
add
xor
add
add
mov
add
decl
push
add
imul
add
ljmp
add
mov
lahf
inc
xchg
cmp
add
bound
inc
mov
mov
jnp
ret
adc
and
mov
dec
add
mov
lods
jb
into
jo
pcmpeqd
cld
mov
in
sbb
jg
xor
add
add
daa
sti
add
cli
add
add
adc
pop
add
nopl
sbb
mov
std
inc
add
adc
add
add
jo
add
pop
adc
sub
jbe
mov
nop
add
cmp
xor
adc
add
sti
rolb
mov
xchg
loopnew
add
mov
mov
mov
imul
add
call
pop
mov
xor
add
js
mov
push
add
xor
out
cwtl
mov
add
lock
add
stos
add
and
sbb
add
sbb
add
add
lods
sub
xor
push
add
adc
es
nop
and
add
insb
add
hlt
adc
cmp
pop
add
xchg
pop
add
inc
add
int3
pop
mov
add
add
arpl
add
jb
sbb
jl
ret
add
orl
int
jmp
pop
repz
and
add
jb
mov
movaps
mov
add
fwait
int3
xor
dec
arpl
pop
add
addr16
mov
add
into
add
fisubs
sbb
push
into
pop
add
test
jnp
test
out
stos
mov
push
add
addb
add
lcall
lock
pusha
add
cltd
jecxz
adc
add
xlat
pop
cmp
mov
test
or
insb
add
adcb
icebp
xchg
cmp
xchg
xor
sub
cmpl
pop
add
pop
add
rcrb
add
jp
imul
push
push
add
stos
mov
add
push
add
addr16
ljmp
add
loop
mov
add
jo
inc
xorb
xchg
addl
push
popa
add
add
pop
add
or
add
add
mov
add
mov
mov
dec
mov
add
add
add
mov
int
dec
stos
push
push
add
lret
emms
and
jne
popa
rclb
clc
outsb
add
add
dec
jne
jecxz
mov
add
fcomip
sub
jle
sbb
xlat
fwait
push
repz
rcrl
aas
cmc
movsl
pop
inc
add
pop
push
add
insb
add
out
ja
pushf
call
jns
pop
out
ficoml
jns
add
dec
add
sub
mov
xchg
mov
pop
add
pop
add
cmp
or
xchg
in
outsb
add
sub
insl
jmp
stos
lds
add
movl
add
cmp
fwait
inc
ficoms
aas
push
add
cltd
divb
mov
pusha
add
xor
sti
das
cmp
sbb
mov
add
test
xchg
cmp
aam
add
lods
repz
add
xor
add
and
add
or
imul
add
sbb
mov
and
add
or
int3
mov
add
push
stos
add
xor
bound
mov
repz
add
dec
xorl
add
push
dec
inc
add
jl
stos
test
add
xlat
shr
pop
jnp
loopne
xchg
xor
pop
aam
add
xor
lock
ljmp
add
mov
enter
xor
add
out
or
xor
add
add
add
imul
mov
dec
add
insb
add
adc
arpl
pop
pop
dec
add
cmp
or
out
jns
add
add
xchg
add
inc
add
mov
mov
jae
mov
xor
add
jne
jno
or
xor
sub
in
add
out
add
add
outsb
add
bound
ljmp
out
push
loop
daa
pop
add
adc
out
fimuls
clc
sbb
mov
out
loopne
jb
insl
push
push
add
xor
add
out
add
xchg
int
and
add
dec
add
repnz
ret
movsl
iret
movsl
fcom
imul
push
add
xor
in
add
mov
add
add
mov
add
push
add
push
add
cmp
pop
xor
push
or
mov
add
popa
xchg
dec
add
rcrl
add
hlt
add
fiadds
adc
pop
add
enter
xchg
and
cmp
imul
add
popf
aad
add
add
fsts
filds
inc
add
add
add
jge
test
lods
add
mov
xchg
add
pop
add
add
add
sahf
add
stc
scas
inc
add
mov
mov
cmp
jo
and
outsb
add
mov
push
add
ffree
stos
mov
scas
mov
add
xor
test
stos
inc
add
repz
add
hlt
aam
xchg
add
stc
not
pushf
add
add
mov
inc
add
scas
mov
xor
add
mov
das
add
sub
pop
sbb
cmp
xchg
and
add
add
inc
add
fsubrl
pop
push
add
and
push
adc
add
lahf
add
xor
add
pop
pop
add
add
add
add
incl
cmp
ljmp
int
negl
movsl
mov
jbe
lret
and
add
push
sub
push
add
je
fidivs
icebp
xchg
cmp
daa
and
xchg
push
add
pop
add
mov
stos
xchg
arpl
add
pop
add
cmpsb
add
scas
mov
mov
call
add
push
sbb
add
sub
push
add
mov
jae
add
dec
add
inc
add
adc
add
ja
les
jmp
add
in
sub
pop
mov
in
shlb
add
add
sub
in
mov
sbb
add
add
xchg
jg
add
add
repz
add
inc
je
insl
mov
add
add
add
add
add
add
movsl
imul
rorb
add
push
add
flds
sub
cmp
inc
add
add
add
jns
sub
test
fsubrl
lahf
add
pop
add
sbb
inc
fisubrl
aad
sbb
push
add
dec
add
sbb
xchg
mov
push
add
inc
add
lds
pop
add
pop
loopne
add
sbb
sbb
xchg
add
inc
add
out
xor
push
add
mov
xor
insb
add
xchg
jge
add
adc
jp
push
push
jno
jne
add
adc
add
loop
int
cmpsb
in
inc
add
fs
ret
add
pause
inc
add
mov
addr16
add
fcmovnu
popa
addr16
add
push
mov
sub
jbe
lret
stos
push
ss
shll
add
and
add
add
inc
add
cwtl
call
fimuls
pop
add
push
add
ljmp
inc
cmp
add
test
mov
mov
sbb
loope
jp
cmp
dec
dec
add
jecxz
in
popl
mov
sar
sub
les
pushf
xchg
push
sub
push
add
add
fcompl
xchg
sub
dec
jecxz
sbb
jne
adc
add
and
mov
add
adc
add
popl
dec
adc
add
cmp
sahf
rcll
cmp
push
jne
das
fldl
jecxz
add
rcrl
add
add
fdivl
add
push
dec
add
xchg
mov
sbb
add
add
add
add
imul
xchg
add
add
add
jecxz
pop
lods
add
pop
fcoms
add
mov
cmc
leave
imul
mov
in
jne
pop
add
dec
out
ljmp
add
mov
add
inc
jnp
add
je
ficoml
and
push
and
punpckhdq
mov
add
sbb
mov
mov
xchg
cmp
insl
mov
in
jl
ds
test
imulb
loopne
mov
insl
mov
add
mov
add
std
jbe
xor
add
cmpsb
sub
sbb
adc
add
add
loop
add
adc
stc
pop
cld
inc
add
cmpsl
pop
hlt
sti
push
xchg
add
sbb
jae
xchg
add
add
adcb
test
mov
cmp
fwait
stos
jae
add
sub
add
add
ret
mov
inc
add
push
add
mov
in
jecxz
cli
iret
jb
mov
sub
jmp
push
add
pop
mov
xchg
jg
mov
pop
xlat
jb
cmpsb
leave
pop
add
mov
add
loope
and
scas
fwait
inc
out
je
std
or
mov
imul
ss
add
pop
mov
jb
pop
daa
add
sub
jge
inc
add
dec
add
cmpsl
jmp
scas
ror
inc
adc
test
pop
fildll
mov
mov
xchg
outsl
lods
aaa
inc
add
xchg
add
xor
xor
sbb
mulb
sub
scas
mov
outsl
jle
rcl
xchg
repz
add
jecxz
add
add
add
dec
add
clc
push
out
mov
gs
addr16
mov
test
data16
mov
sbb
outsl
xorb
add
adc
add
mov
jp
out
in
arpl
add
and
add
out
add
jecxz
lret
mov
mov
hlt
shrb
sbb
push
add
cmp
xchg
push
dec
pop
cmp
jb
jne
push
add
add
dec
add
push
add
xor
add
mov
mov
int3
jecxz
mov
popf
mov
addr16
add
imul
in
mov
arpl
or
and
pop
add
incb
push
loope
rcrl
jnp
fmul
dec
add
add
dec
add
or
cmp
cmp
push
in
out
add
jge
mov
test
xor
add
xchg
cld
call
push
add
add
out
jmp
into
test
mov
arpl
fidivrl
outsb
add
inc
add
add
xchg
into
rclb
test
lcall
add
dec
fxch
add
cmp
js
jne
test
or
add
fildll
add
mov
add
mov
adc
add
mov
test
es
add
xchg
dec
adc
add
push
out
add
int3
or
xchg
push
mov
add
lret
stc
shlb
pop
filds
sub
fistpl
roll
pop
cmpsb
fdivrp
dec
add
mov
add
ja
mov
mov
inc
xlat
aas
stos
out
mov
sahf
mov
call
xchg
fstpl
push
add
add
add
add
cli
cltd
pop
dec
add
jbe
lahf
sub
mov
fwait
and
add
mov
mov
stos
fisubl
inc
or
xchg
inc
adc
add
mov
xor
std
in
xchg
sbb
xor
add
addb
mov
add
add
imul
test
cmp
hlt
add
add
aaa
push
add
jmp
sbb
jns
push
xor
dec
add
xor
fbstp
loop
add
mov
loop
loop
jne
add
lds
ret
mov
adcb
add
sbb
push
add
add
icebp
sub
push
push
or
push
add
std
mov
data16
fildl
mov
int3
mov
filds
add
rcrb
pop
add
add
add
pop
add
sbb
mov
add
data16
mov
dec
add
add
cmp
push
loop
in
out
pop
fidivl
add
cltd
dec
add
jg
xchg
pop
and
add
adc
xlat
jmp
add
jae
dec
add
add
into
add
jb
xchg
fsubrl
add
lret
mov
add
fisttps
pusha
add
add
testb
das
ret
add
adc
add
push
mov
jmp
cmp
add
dec
add
cmovle
orb
lds
lcall
xchg
popf
pop
add
daa
adc
add
sub
sub
sub
adc
ret
or
xlat
dec
add
daa
push
add
icebp
add
incb
fistpl
push
cltd
mov
inc
add
add
sti
inc
add
add
add
fisttpl
add
add
xorl
push
xchg
or
iret
add
mov
sbb
pop
add
icebp
cld
jae
lds
jmp
call
adc
cltd
movb
fistl
outsb
add
add
sarb
mov
popf
add
pop
add
jg
cli
add
dec
xor
add
sub
ret
sbb
add
inc
or
lods
dec
cmp
cmp
cwtl
mov
mov
js
dec
add
push
add
cmpsb
repz
add
data16
lock
jmp
push
sbb
dec
add
add
cld
cmpsl
shlb
mov
and
add
dec
add
ret
add
icebp
pop
add
dec
xor
jne
cmp
icebp
sbb
ret
jae
add
mov
jae
int3
orb
popa
add
scas
imulb
mov
inc
add
les
pop
int3
das
push
add
lock
cwtl
inc
scas
insb
add
inc
add
mov
sar
add
cwtl
loope
sub
xor
int3
sub
mov
popl
jns
mov
jne
add
loop
pop
add
jle
dec
lcall
xchg
adc
pop
je
or
das
adc
stos
loop
add
loopne
and
add
aam
and
add
jmp
jo
xchg
mov
mov
test
sbb
fucomi
cltd
sti
sbb
int
mov
addl
in
aam
dec
add
je
cmp
inc
sub
xor
and
add
mov
jge
jb
lahf
and
add
push
testb
pushf
mov
add
and
or
dec
rorb
add
add
mov
mov
jl
sti
nop
mov
jmp
cmc
data16
cmp
jmp
add
orb
add
lahf
xor
add
add
jo
push
aaa
xchg
nop
pop
inc
add
dec
add
add
add
adc
add
add
add
mov
push
push
pop
call
add
ds
les
aaa
add
andb
std
jmp
cmpsb
outsb
add
xchg
divl
add
add
push
subl
add
xchg
add
pop
add
dec
add
add
cltd
add
push
add
add
inc
add
xor
fcmovnbe
lcall
lcall
lret
mov
add
stos
xor
je
jbe
fistpll
add
push
add
add
push
add
ret
add
mov
les
lea
pop
ljmp
xor
add
icebp
shrl
sub
int3
xchg
add
bound
ret
xchg
mov
imul
add
jno
out
mov
shr
insl
dec
jno
or
mov
out
cmp
sahf
sub
add
add
and
dec
add
out
and
add
cmp
fdivrs
add
or
cltd
push
add
add
xor
add
jbe
mov
jb
push
and
fcomps
mov
jae
cmp
mov
pop
jb
sub
push
iret
daa
mov
dec
push
jbe
mov
xor
adc
add
out
add
add
arpl
add
fcomip
mov
lret
add
sub
daa
filds
clc
lods
add
lcall
push
incl
inc
add
into
jo
enter
add
add
dec
add
in
rcll
mov
jns
and
sub
adc
add
adc
add
sub
add
in
sub
or
push
add
ds
adc
add
push
push
add
push
out
sti
add
dec
je
je
inc
add
in
xchg
and
add
and
add
add
xchg
add
add
testl
xor
inc
add
das
dec
pop
add
add
insl
sbb
push
pusha
add
add
clc
xor
add
add
cmc
roll
fldenv
cmp
xchg
add
add
into
inc
xchg
repz
add
jns
addl
inc
add
pusha
add
les
push
add
sbb
mov
add
dec
push
std
or
add
or
rclb
add
and
bound
and
sub
sti
dec
add
iret
mov
mov
in
add
sub
dec
mov
add
jp
in
testb
xchg
jno
add
jno
mov
mov
add
add
add
sub
test
jge
fcmovb
mov
cmp
dec
ja
jno
aas
bound
les
scas
mov
pop
mov
xchg
movsb
add
pop
out
jp
std
pop
add
ret
add
mov
mov
sahf
add
add
add
add
add
xor
fcomps
add
in
dec
lahf
lcall
mov
xchg
sub
pop
lahf
add
pusha
add
add
dec
add
dec
fildll
das
imul
sti
arpl
sahf
aad
xchg
add
sub
dec
iret
std
out
stc
cld
mov
lods
mov
add
stc
add
mov
add
repz
add
ret
add
andl
push
add
addr16
add
add
incl
xor
and
test
out
enter
repz
xchg
xor
add
cmp
pushf
sbb
mov
add
imul
add
lods
add
jbe
fistl
faddl
je
cld
push
pop
out
push
pushf
add
imul
add
dec
mov
add
inc
or
inc
xor
ljmp
xlat
and
adc
imul
add
pop
into
je
add
adc
arpl
jbe
cli
pusha
add
push
add
jae
hlt
insl
mov
xor
cmp
inc
mov
fdivrl
push
add
int
lds
add
mov
xchg
neg
cmp
dec
add
insl
add
add
insl
lcall
add
sahf
movl
push
sbb
jne
ret
push
add
xchg
sub
dec
orl
dec
sarb
call
add
add
mov
pop
inc
add
pop
add
add
shlb
addl
push
add
xchg
loopne
cli
mov
jge
add
adc
andl
or
adc
add
mov
mov
dec
inc
add
add
pop
add
jns
arpl
mov
pop
xchg
push
push
add
cli
mov
add
sbb
daa
mov
orb
shll
ljmp
push
add
add
sbb
add
mov
bound
mov
loope
xor
add
mov
mov
xchg
add
scas
or
sahf
iret
cmp
push
cld
jnp
xchg
clc
sbb
push
mov
dec
xlat
push
add
sbb
adc
add
add
jo
cld
popa
mov
std
mov
add
aad
cs
fidivrl
add
stos
sahf
lds
add
roll
sahf
and
add
add
sbb
pushf
sbb
mov
dec
data16
jo
dec
mov
and
cmpsl
sub
fxch
mov
call
mov
sbb
lock
add
bound
mov
mov
faddl
and
add
out
sarl
ret
out
jne
sub
and
jmp
enter
jmp
push
sahf
cltd
ret
pop
test
mov
lret
data16
add
add
js
orb
mov
jmp
pop
add
add
imul
add
icebp
push
add
imul
rol
mov
cmp
mov
enter
add
cld
add
add
add
dec
add
adc
add
fcomps
xor
inc
icebp
aaa
rolb
pop
dec
add
test
je
rorl
dec
cmp
cmpsl
dec
add
mov
movsl
add
xchg
out
mov
jbe
sbb
inc
jmp
clc
leave
add
add
pop
sub
add
std
roll
add
add
repnz
adc
xchg
sub
jg
and
add
add
js
in
jns
jb
push
add
sahf
daa
add
lahf
mov
mov
inc
add
adc
add
pop
cmp
fisubrl
add
add
jns
add
incb
or
scas
pop
add
and
add
xorb
loope
cmpsl
repz
mov
add
add
popf
add
push
add
sti
inc
out
cmp
and
add
adc
add
mov
pusha
add
jae
popa
sbb
outsl
das
and
add
add
mov
pop
push
add
add
mov
and
add
add
sub
push
data16
add
add
lods
jne
xchg
jbe
pop
push
add
inc
jnp
cli
xor
add
divl
pop
sub
mov
dec
add
pop
dec
add
mov
add
mov
add
xor
cmp
push
lahf
mov
add
mov
mov
pop
into
iret
ja
adc
jnp
add
push
add
mov
add
in
loope
into
fidivrs
out
adc
cwtl
jge
lahf
and
add
cs
aad
rclb
cli
add
jns
add
stos
add
fidivrl
or
pop
std
dec
sbb
sbb
test
cld
lret
out
xchg
cmp
nop
out
add
fstl
add
jne
push
add
pop
sub
xchg
test
pop
add
faddl
and
fwait
jno
add
sub
adc
add
push
add
js
arpl
add
stos
add
jns
adc
add
mov
movsl
shlb
mov
add
add
jge
pop
adc
adc
add
adc
add
movsb
adc
add
jmp
cld
sahf
mov
decb
pop
mov
add
mov
pop
and
and
or
jle
ret
add
xor
out
xchg
lods
lods
sbb
leave
sub
cmp
pop
and
add
push
add
out
adc
add
push
add
add
xor
push
stos
or
clc
pop
stc
jmp
popa
nop
push
out
dec
sub
stos
sub
stos
cltd
inc
add
int3
jp
mov
lcall
mov
sub
adc
add
mov
add
andb
and
inc
mov
lock
stos
xchg
jb
and
add
pop
add
mov
inc
js
mov
call
movb
mov
in
pop
fsubr
idivb
std
sbb
push
add
mov
pop
dec
add
jp
in
xchg
pop
add
sbb
mov
sub
ljmp
stos
hlt
push
add
add
jo
inc
xor
add
pushf
push
add
adc
mov
add
add
subl
mov
xchg
sbb
dec
in
sbb
add
aas
mov
add
stc
add
add
push
jno
sub
lock
mov
shrl
mov
add
ja
je
test
add
lods
or
or
insb
add
loop
add
add
sub
push
jnp
and
bound
push
adc
adc
add
jecxz
nop
insb
add
fwait
pop
add
vcomiss
outsb
add
add
push
dec
add
pop
add
test
xchg
aas
mov
cmp
clc
shll
push
mov
adc
add
je
mov
xchg
sub
cmpsb
cmpsl
frstor
mov
inc
add
sub
mov
add
and
add
scas
cmpsb
and
add
push
imul
push
xchg
and
add
outsl
hlt
mov
out
and
add
inc
add
rolb
xor
add
mov
add
fcompl
add
or
sub
mov
lahf
shl
sub
stos
leave
push
add
rolb
mov
cmp
cmp
mov
incl
mov
mov
push
mov
cmp
xor
add
stos
push
add
out
add
add
aad
mov
movsb
sub
fisttpl
adc
add
add
int3
pushf
push
dec
mov
add
add
leave
add
add
sbb
sub
cmpsb
testb
add
repnz
add
jns
mov
fnstenv
clc
daa
mov
inc
add
mov
add
clc
fstl
mov
stos
jne
in
out
nop
incb
push
scas
inc
add
repnz
jae
dec
enter
or
in
sti
xchg
enter
cmp
inc
add
xor
jns
push
add
add
jns
sahf
test
mov
or
std
push
add
and
mov
mov
mov
add
out
mov
add
pop
test
and
cs
addr16
and
xchg
std
mov
cmp
aam
add
add
inc
add
xchg
xchg
xchg
jecxz
adc
mov
sbb
aaa
sbb
mov
add
pop
add
and
push
add
xor
add
roll
add
inc
add
jecxz
into
loope
push
dec
jno
add
push
add
popf
out
mov
add
add
jmp
mov
sbb
dec
push
add
cmp
je
push
add
ja
mov
add
pop
fisubl
movsl
loope
jl
adc
ret
mov
jae
add
adc
add
inc
add
pop
add
inc
add
jno
add
push
add
rcrb
leave
sub
mov
pop
lods
mov
pop
pop
subb
imul
push
int
loop
mov
add
add
mov
push
jnp
mov
add
jnp
mov
and
mov
xlat
scas
mov
add
mov
test
inc
add
xor
add
xchg
outsl
push
add
add
add
sub
les
hlt
xchg
mov
rcrb
xlat
vminsd
mov
add
jecxz
mov
add
xchg
cmpsl
mov
sbbl
mov
inc
add
push
add
add
roll
jns
jae
push
add
jecxz
add
add
sub
fstl
add
jge
testb
je
data16
pop
add
les
test
lods
int
xchg
push
add
pop
sub
lret
and
add
fadds
mov
add
xor
add
je
rcl
leave
andl
adc
jmp
cmp
push
add
mov
mov
sti
lds
mov
add
xlat
cmp
sub
icebp
cmp
dec
aad
cmp
scas
xchg
adc
add
cmpsl
add
push
loopne
movsb
sub
mov
add
xchg
push
add
stos
mov
add
bound
mov
flds
test
adc
add
stos
add
push
add
dec
and
add
lcall
jo
push
mov
add
adc
add
icebp
scas
jecxz
add
mov
jle
push
xchg
cltd
outsb
add
add
inc
add
mov
sbb
rolb
add
push
fidivrl
loope
xchg
add
add
incl
sub
bound
mov
add
add
in
mov
add
mov
add
xor
add
les
and
add
mov
lret
push
add
sub
daa
mov
and
add
movsl
add
sbb
mov
add
push
dec
add
jl
xor
inc
add
fmulp
xlat
imul
loop
xor
inc
imul
es
or
xchg
clc
shll
add
fstl
add
movsb
jne
sub
add
add
pop
add
add
rcrl
add
jp
xchg
add
add
mov
and
add
or
fsubrs
mov
shll
pop
add
lret
gs
pushf
add
dec
add
or
push
add
test
ja
lcall
add
scas
shlb
add
sahf
notl
inc
add
cmpsb
and
andb
add
stc
add
add
add
movlps
add
pop
dec
add
mov
pushf
loopne
fmull
dec
inc
add
enter
cwtl
add
in
fsts
jmp
sub
push
fcomps
add
subl
out
in
shlb
add
adc
add
sub
add
jne
add
xchg
das
out
lock
and
add
add
or
push
add
lea
cmpsb
mov
orb
aaa
filds
int3
and
add
add
xor
pusha
add
add
divl
xor
pop
popf
dec
add
cmc
or
mov
in
cmpsl
pop
add
out
adc
push
add
lods
add
add
out
and
add
icebp
ljmp
lret
mov
push
and
daa
movb
add
aas
sub
add
js
addr16
int3
add
add
arpl
sbb
aam
add
idiv
out
xor
sub
cld
movsb
xchg
gs
filds
sbb
sub
stos
add
adc
add
js
add
cmpb
sahf
cmpl
fmull
into
push
add
sub
or
jg
sbb
out
mov
pop
cld
mov
add
adc
add
mov
add
aas
mov
add
int
add
inc
add
add
mov
js
xchg
stc
dec
jecxz
add
cmc
adc
add
add
add
add
add
add
add
mov
push
add
push
add
movsb
scas
sbb
test
inc
sbb
add
pop
ret
cld
movsb
aaa
pop
add
sub
or
add
pusha
add
es
add
mov
mov
add
je
add
out
clc
mov
jecxz
xchg
sahf
jp
adc
int
mov
outsb
add
add
add
inc
add
add
pop
nop
in
and
add
lea
add
aad
push
add
sub
xor
mov
std
fstpt
inc
add
and
add
mov
in
cmp
cmp
xchg
mov
je
dec
call
repnz
and
mov
inc
add
flds
test
icebp
data16
add
add
add
push
insb
add
adc
lret
nop
ss
movsb
icebp
jo
aaa
adc
xor
add
inc
add
sbb
mov
js
into
push
sbbl
add
das
add
lret
add
dec
adc
mov
or
leave
jbe
add
or
add
lahf
add
add
or
test
add
add
enter
inc
add
rolb
mov
test
cmp
scas
js
mov
je
dec
jl
sbb
in
add
add
mov
icebp
add
sub
sbb
and
mov
dec
arpl
or
fiadds
pop
addr16
jmp
xchg
arpl
mov
outsb
add
add
out
sbb
push
add
mov
test
shl
lods
jb
rcrb
sbb
dec
pushf
mov
mov
mov
into
mov
jg
dec
add
xor
repnz
xor
add
add
mov
and
mov
add
fldl
in
add
loope
in
xchg
fbstp
add
xchg
adc
add
test
add
rolb
inc
add
cmp
or
imul
cmp
add
add
movl
push
mov
add
mov
add
addr16
ss
add
xor
add
dec
add
or
mov
ss
call
push
add
addr16
mov
add
clc
addr16
xchg
pop
jp
pop
mov
push
add
or
dec
je
pop
add
rolb
xor
adc
repz
sti
xchg
add
add
clc
fdivl
lcall
pop
add
xchg
add
lods
mov
add
movsb
xlat
adc
or
pop
add
int
mov
into
xchg
push
add
push
mov
aad
mov
xchg
and
jecxz
fs
jecxz
add
add
xor
add
inc
add
std
imull
scas
adcl
add
adc
add
stos
addr16
std
rcll
pop
add
stos
pop
enter
ljmp
add
cmp
enter
sub
cltd
add
add
loopne
add
popf
hlt
adc
add
leave
in
push
add
add
push
push
add
xchg
inc
xlat
push
add
mov
mov
mov
insb
add
add
add
sub
fidivl
xchg
rcrb
mov
cltd
cmp
add
inc
add
loope
test
lods
add
adc
dec
data16
or
je
dec
inc
add
add
fsubl
addb
les
faddl
insl
lods
pop
add
xchg
add
mov
cli
push
add
clc
inc
add
add
push
add
add
loop
stos
gs
sbbb
inc
inc
sub
leave
iret
das
jo
dec
cmp
push
addr16
sbb
or
add
add
push
add
add
inc
add
leave
add
shlb
add
add
sbb
inc
add
cmp
data16
add
sahf
dec
add
sub
stos
xchg
cmpsb
rcl
add
aaa
addl
mov
rclb
push
add
add
jb
pop
fstpt
in
add
xchg
xchg
add
dec
dec
add
push
nop
add
pushf
addr16
mov
data16
into
pop
adc
int3
jg
ljmp
add
xchg
pop
mov
jnp
inc
mov
addr16
push
add
pop
add
add
add
push
xor
add
lock
add
insb
add
movsb
inc
fidivl
add
pop
cwtl
add
add
sbb
or
imul
add
js
scas
cmpsl
mov
daa
aam
xor
add
lods
push
add
mov
sub
pop
sub
int3
pop
add
pop
add
adc
add
and
fadds
leave
pop
sbb
mov
add
ljmp
sub
cwtl
insl
sbb
pop
add
and
xor
dec
in
pop
add
inc
add
pop
add
pop
aas
aad
call
xor
pop
xchg
add
pop
add
int
inc
add
xlat
or
adc
fnstenv
jle
mov
add
add
add
adc
add
in
xlat
sar
mov
nop
push
inc
mov
mov
jmp
add
dec
dec
add
inc
pusha
add
xor
push
add
jge
mov
add
mov
jns
adc
add
add
add
add
add
sub
mov
inc
add
add
add
push
repnz
lds
add
cwtl
and
add
subl
pop
popf
dec
mov
sbb
aaa
iret
add
add
push
add
rolb
sahf
and
cmp
fdivl
mov
leave
jg
mov
push
jge
jl
and
add
add
add
inc
add
bound
insb
add
inc
add
add
or
add
add
cmp
add
adc
fst
sub
lea
add
add
loopne
push
int3
xchg
icebp
jl
in
sub
mov
add
mov
scas
cld
xor
add
dec
add
ds
in
sub
xlat
mov
movsl
pop
mov
jno
mov
sub
dec
add
add
add
xor
add
mov
out
ds
push
add
sbb
add
mov
add
pop
jne
add
add
sarb
sbb
or
fidivrl
ret
add
inc
add
xchg
imul
jmp
enter
add
popf
add
loope
add
cmc
sarl
add
add
xor
push
add
loop
add
xchg
pop
add
push
add
mov
out
pop
mov
stos
out
add
add
lret
sub
mov
add
mov
sub
adc
xchg
add
add
dec
add
cmp
jge
negb
add
aas
add
fbld
sub
mov
test
add
in
xchg
xchg
loopne
sbb
dec
sbb
or
sub
mov
add
sub
mov
add
ljmp
out
mov
lret
cltd
add
add
add
add
jb
pop
add
jle
inc
inc
add
add
jbe
test
clc
xlat
jne
add
xchg
mov
add
in
pop
add
add
jge
add
sub
jns
ds
fwait
sbb
mov
or
xor
jo
mov
mov
lock
aad
pop
add
sbb
mov
pop
roll
inc
add
addr16
mov
add
add
or
dec
add
jp
jb
push
add
sbb
xchg
in
pop
push
add
mov
add
daa
fldl
rcl
xchg
mov
pushf
mov
add
jp
sub
loopne
push
add
adc
add
add
xchg
dec
add
adc
lret
in
into
push
or
je
sbb
test
mov
mov
xor
sbb
mov
or
popa
push
ret
out
in
mov
lret
cmp
xchg
or
add
pop
add
xor
add
aad
push
sbb
jnp
adc
add
add
cli
mov
add
fbstp
mov
int
test
fcoml
fldl
jno
cs
movsb
enter
imul
cmp
add
add
add
mov
jle
stos
pop
xchg
fcoml
lret
sub
jl
andl
dec
das
xor
imul
add
cmp
inc
add
cltd
and
ljmp
fmull
insl
fadd
inc
add
incb
dec
add
arpl
and
add
add
mov
add
in
aad
scas
insb
add
aaa
add
add
add
mov
add
add
xchg
xor
cmp
mov
daa
cs
dec
add
int
dec
lods
cli
jb
in
add
out
repz
mov
adc
add
pusha
add
in
in
scas
ds
adc
add
dec
add
mov
jle
pop
pop
push
add
pusha
add
loope
add
add
and
mov
ja
test
add
dec
add
or
add
std
outsb
add
mov
rcrl
leave
xchg
add
add
inc
add
jno
lea
add
add
movsl
xor
dec
add
mov
loope
add
xchg
cmp
push
cmp
arpl
sbb
add
shl
ja
or
add
jge
add
add
enter
mov
bnd
or
loop
or
imul
repz
repz
pop
add
or
jo
mov
xchg
or
aad
add
add
inc
add
add
add
inc
add
add
jno
add
rolb
pop
int
fs
cltd
mov
push
add
or
nop
xchg
lret
repz
fwait
add
add
mov
add
add
outsl
add
add
sti
jmp
lahf
and
mov
jp
pop
cmp
iret
adc
add
stos
add
ja
icebp
mov
stc
icebp
or
fists
inc
lods
dec
mov
mov
in
mov
aas
inc
scas
pop
dec
push
mov
mov
std
movsb
aad
fldl
jge
stos
add
inc
add
push
add
sbb
daa
jg
cmp
or
xor
push
das
cmp
pusha
add
mov
or
cmp
sub
add
js
bound
outsl
lahf
or
add
movl
aam
incb
cld
inc
add
and
mov
mov
loope
mov
add
xchg
pop
rolb
fcoml
or
mov
test
xor
add
add
pop
push
add
sub
dec
add
stos
xchg
xor
add
add
imul
push
sarl
xlat
xor
repnz
scas
cmpsb
push
cltd
add
xlat
nop
cmp
adc
add
add
pop
add
add
repz
in
push
add
add
pop
add
jae
out
xchg
or
push
mov
add
add
loope
add
add
add
add
sbb
rorl
add
out
add
add
out
leave
xor
add
nop
lret
add
pop
add
push
in
add
jae
call
pop
pop
fstpt
add
fs
xor
add
jns
mov
jp
mov
cmp
hlt
in
mov
lret
test
mov
xchg
jecxz
add
add
or
sti
and
add
mov
push
add
aas
add
jge
inc
add
cltd
insb
add
adc
es
add
jb
sbb
sbb
js
ss
add
cmpl
in
pop
adc
add
add
add
xchg
cmp
sti
adc
add
jmp
mov
mov
add
loope
mov
mov
mov
and
add
mov
add
ja
les
mov
outsl
scas
adcl
add
add
push
xchg
add
add
ret
add
out
add
mov
js
pop
add
jno
pop
add
add
cld
jmp
imul
mov
rcll
pop
adc
lret
jne
push
add
sbb
cmp
adc
add
notl
test
push
insl
test
popl
dec
add
mov
sbb
popf
jmp
add
jge
fidivs
incb
bound
fwait
xlat
jb
mov
add
adc
ss
mov
mov
adc
add
hlt
inc
add
pop
cld
adc
add
iret
pop
add
add
add
or
add
add
add
inc
into
xchg
outsb
add
mov
add
lret
pop
test
mov
lret
comiss
mov
mov
dec
add
js
outsb
add
add
dec
add
cvttps2pi
mov
mov
stos
lret
add
test
mov
add
add
jo
repz
add
and
pop
push
add
int
mov
mov
add
add
mulb
ljmp
add
inc
mov
mov
mov
push
jge
add
repnz
add
pop
add
stc
add
movsl
cmc
mul
mov
sub
xor
cmpsl
jp
insb
add
jge
scas
xchg
mov
imul
push
or
xchg
stos
sub
xchg
dec
inc
xchg
push
lods
add
mov
add
push
out
xlat
add
testl
jne
fsubrl
test
ret
in
mov
shlb
add
pop
jge
mov
lret
adc
add
test
mov
add
mov
mov
inc
and
add
xchg
mov
arpl
repz
mov
sbb
bound
xchg
xchg
adc
lret
in
pop
ljmp
nop
clc
sub
mov
int3
sub
aad
in
or
adc
insb
add
call
enter
in
mov
sbb
fldenv
cmp
mov
cli
or
add
das
arpl
aaa
scas
add
lea
add
pop
lods
enter
add
mov
dec
sbb
inc
add
addb
add
mov
call
mov
sahf
cmpl
sub
pop
add
mov
inc
adc
add
rcrb
leave
dec
add
push
and
mov
add
test
cmc
add
sbb
add
mov
rcll
xor
js
fcompl
ljmp
push
add
cmp
sbb
add
lcall
or
out
mov
and
add
jmp
add
cmc
push
pop
mov
cmp
ss
add
add
xchg
sub
pop
in
stc
fcompl
add
mov
add
push
add
sub
data16
fdivl
fwait
add
es
push
add
ret
mov
mov
fidivrl
test
add
out
mov
push
add
add
fadds
cmp
lock
cmpb
and
sbb
xchg
test
cmp
test
add
add
imull
cmp
and
add
add
push
add
add
or
add
adc
mov
mov
aam
int
add
stos
std
xor
add
bound
into
cli
inc
mov
lds
xchg
imul
push
push
add
lea
pusha
add
vmulpd
outsl
fbstp
or
aad
dec
leave
xchg
shr
inc
adc
add
aam
xchg
cltd
xchg
inc
add
add
add
adc
add
ret
and
icebp
loop
sub
or
and
add
add
ror
xchg
pop
add
cmc
fwait
mov
sub
fidivrl
loopne
mov
xor
add
ficomps
cmpsl
and
sub
in
add
lock
cmp
pop
add
rorl
add
add
scas
xor
add
jb
inc
add
add
arpl
ljmp
dec
lods
xchg
jle
aad
mov
addr16
jmp
enter
xchg
adc
adc
in
jbe
xor
outsl
iret
nop
jnp
sahf
out
or
sbb
jg
mov
js
fstps
lcall
sbb
or
add
add
stos
enter
cld
ljmp
ljmp
push
add
add
lahf
imul
mov
int3
sbb
std
add
add
mov
mull
lret
mov
add
add
jae
adc
add
add
lret
add
mov
mov
cmpsb
std
stos
mov
pop
add
add
lods
jae
fnsave
or
push
add
adc
jmp
cmc
add
mov
add
outsl
pushf
sub
aad
daa
add
lock
movsb
or
icebp
movzwl
imul
add
add
add
xchg
add
jmp
add
daa
add
add
cmp
in
or
pop
aam
pop
add
movsl
dec
push
add
add
sub
jmp
add
xor
rcr
add
ficompl
dec
shll
mov
add
add
out
std
push
or
mov
inc
iret
data16
ret
jo
xchg
fwait
or
mov
inc
add
cli
mov
add
mov
sahf
jae
add
add
add
test
xchg
mov
add
arpl
jns
or
xor
add
add
add
adc
add
imul
add
std
and
sub
sub
in
nop
inc
rolb
add
and
mov
jb
cmp
add
add
addr16
xchg
std
mov
add
mov
add
int
arpl
inc
add
mov
stc
adc
add
pop
in
push
xor
neg
dec
mov
push
sub
mov
imul
pop
inc
add
add
jp
mov
jnp
xchg
dec
fwait
xor
int
inc
shlb
inc
add
ja
sub
out
mov
add
add
mov
push
push
add
add
repnz
sbb
adc
lods
daa
lret
xchg
or
je
imul
mov
in
dec
sbb
ss
shlb
outsb
add
js
add
gs
adc
movsb
mov
xchg
psubsw
in
movsb
or
imul
jb
inc
add
xor
jl
rcrb
cltd
andb
sarb
faddl
iret
scas
mov
add
in
jmp
push
add
rcrl
sarb
pop
ficoms
xor
loop
loopne
add
and
add
push
mov
test
pop
add
add
flds
pusha
add
ja
icebp
xor
sarl
add
daa
add
add
mov
lea
movsl
int
jo
sub
sbb
add
cmp
in
mov
adc
add
cs
adc
or
xor
pop
jnp
in
and
add
inc
add
data16
getsec
xchg
enter
add
aam
es
add
xchg
test
inc
add
nop
movsl
popf
mov
push
fwait
pusha
add
or
add
adc
add
jl
clc
adc
jnp
and
push
add
mov
in
std
and
add
add
push
dec
enter
dec
add
add
fwait
pop
std
or
mov
ja
mov
int
add
push
mov
add
push
xchg
add
int
or
cmc
shr
loop
je
xchg
jns
insl
fnstcw
pushf
rcl
fbstp
add
loopne
add
mov
dec
add
cld
push
add
aas
add
dec
lock
mov
add
add
add
add
mov
or
lods
jbe
add
sti
xchg
imul
pushf
mov
insl
pop
xchg
int3
xchg
push
add
jge
push
loopne
sbb
std
cmp
std
adcl
add
sbb
add
xor
add
test
xchg
stc
jns
push
add
add
addr16
add
cmp
sub
std
test
fists
adc
gs
add
push
popf
add
add
insb
add
jne
repz
repz
enter
fimuls
add
add
jbe
push
dec
stos
int3
test
jle
xor
add
add
test
bnd
and
daa
add
loop
add
add
adc
mov
add
add
jge
or
std
push
add
add
add
mov
popl
and
add
inc
mov
rclb
inc
add
inc
add
push
add
inc
gs
add
pusha
add
lahf
add
push
sbb
in
insb
add
jb
ficoml
popf
push
sub
sbbb
jl
cmp
testl
cmpsb
push
pop
push
add
xlat
add
add
pop
add
les
ret
movsl
xchg
loopne
cltd
add
jae
fiadds
lcall
dec
add
fwait
rolb
lea
cmpsl
add
adc
add
aad
add
sahf
cmp
cmp
fmuls
test
mov
add
add
add
or
mov
add
mov
roll
out
dec
add
dec
add
add
out
add
pop
dec
add
mov
sbb
cmp
add
and
add
imul
outsb
add
jg
mov
xchg
add
dec
add
pop
add
jl
icebp
and
add
out
mov
push
add
add
mov
fiadds
add
jns
pop
push
and
add
movsb
insb
add
add
cmp
clc
xchg
daa
sbb
ljmp
add
jo
and
add
add
xor
ss
xorb
cld
add
adc
pop
jg
add
inc
add
fsubrp
mov
add
mov
in
lods
lods
testb
add
in
int
arpl
add
add
xchg
cmp
out
popf
ficompl
mov
add
add
cmp
lea
hlt
fildl
jb
popa
inc
jbe
inc
adc
add
add
insl
jb
or
xchg
fldenv
xchg
add
push
push
pop
add
jle
in
ljmp
add
mov
aaa
outsl
add
sub
fwait
aad
push
add
push
add
repnz
mov
xor
add
push
mov
cwtl
mov
add
bound
or
add
add
insl
dec
add
sahf
insl
rolb
dec
es
add
add
daa
call
or
dec
add
pop
add
add
add
dec
stc
invd
add
dec
fstpl
add
add
add
jb
jl
mov
add
xchg
add
jb
push
add
fisubl
cmp
add
loop
pop
add
adc
imul
push
add
or
into
in
outsl
aaa
adc
mov
mov
mov
call
ror
aaa
test
add
mov
insb
add
and
add
add
mov
sti
in
cmp
mov
sbb
adc
xchg
jl
sbb
pushf
enter
enter
lahf
mov
add
add
pop
add
pusha
add
add
pop
or
adc
add
add
mov
pop
add
dec
add
inc
std
cmp
movsl
popa
shlb
lods
add
int3
mov
mov
sbb
icebp
mov
adc
and
add
or
movsl
push
std
add
add
push
add
jbe
imul
add
or
and
add
add
cwtl
stos
pushf
addr16
clc
test
mov
sub
cmpl
mov
add
shr
xor
add
sbb
inc
cmp
imul
test
add
lea
dec
lea
test
add
push
leave
int3
lock
fnstenv
leave
add
add
add
cli
adc
adc
int3
dec
add
stos
ja
dec
push
adc
dec
add
stos
inc
add
add
and
add
jnp
movsl
inc
scas
imul
push
add
ja
cli
lret
mov
jb
mov
add
dec
cmp
push
push
add
fs
or
icebp
in
das
and
add
shl
lcall
sub
scas
add
sub
lea
ret
icebp
cmp
mov
out
add
add
lds
shll
add
in
add
and
add
loop
daa
lret
add
add
xor
add
mov
pop
add
pop
add
xor
add
fiaddl
pop
xchg
cmp
cmc
add
jp
aaa
dec
add
test
cmp
cmp
push
add
fbstp
add
mov
enter
inc
add
add
ljmp
mov
xor
pushf
jbe
bsf
add
rclb
adc
add
add
ret
mov
jg
mov
mov
adc
add
push
sbb
and
mov
mov
fiaddl
int3
xorl
add
dec
stos
push
add
add
shrl
add
add
add
add
add
ret
sbb
cmp
out
pop
cmp
std
add
jp
pop
mov
hlt
add
insb
add
fbld
jle
outsb
add
add
xsaveopt
xchg
pop
fwait
sub
sbb
test
ucomiss
and
add
jle
jbe
add
add
pop
add
or
sahf
mov
mov
call
pop
mov
or
add
add
loop
mov
jecxz
add
cs
test
filds
out
add
jg
addb
lods
icebp
or
test
and
repnz
repnz
add
into
mov
fwait
lret
push
hlt
mov
xor
ret
mov
add
xor
je
mov
add
add
xchg
loopne
fisubs
test
adc
add
nop
mov
xor
add
arpl
sbb
inc
add
or
push
call
add
test
mov
adc
add
add
pop
add
add
add
ret
add
add
or
ret
xchg
sbb
cmp
push
xchg
push
cmp
adc
mov
popf
repnz
mov
xchg
add
sahf
iret
lahf
jg
sub
imul
add
jl
cli
out
in
nop
jle
or
addr16
push
add
xchg
data16
or
sbb
lea
jg
push
add
rcr
xchg
rcrb
add
dec
add
dec
add
pop
add
jl
popf
sar
mov
inc
add
loopne
mov
add
outsb
add
add
testb
push
inc
mov
ret
addr16
arpl
mov
sub
inc
add
paddusb
mov
push
jns
dec
add
xor
add
add
xchg
int3
out
cwtl
fldcw
push
sbb
mov
mov
cmp
xor
add
push
adc
add
adc
xor
add
and
mov
scas
add
pusha
add
add
shlb
add
rcl
imul
add
addl
loop
sub
dec
add
xchg
xchg
testb
mov
ficompl
aas
and
add
cmp
call
mov
jne
add
mov
jno
push
inc
add
dec
divb
sbb
xchg
test
lds
mov
sub
test
push
add
in
add
popl
inc
jnp
aas
push
push
add
dec
or
sbb
int3
clc
mov
push
sub
adc
add
add
dec
add
mov
add
sbb
inc
cmc
mov
les
popa
sbb
add
xchg
xor
mov
or
icebp
aam
test
js
cmp
mov
push
adc
jbe
mov
and
add
add
xchg
mov
sbb
add
add
cmp
mov
inc
sbb
push
add
loop
add
loope
loope
cmp
add
add
add
jecxz
outsl
add
add
jne
add
jo
imul
sub
fiadds
mov
in
out
push
lahf
inc
lret
or
sub
test
ficomps
add
je
push
rorl
lcall
es
push
add
cmp
or
test
shll
cli
xchg
loope
cwtl
pop
add
mov
add
mov
dec
xchg
add
stos
mov
sub
cltd
gs
add
mov
sbb
ljmp
rcrl
or
shrl
sbb
shrl
and
add
loopne
js
addr16
or
das
dec
add
arpl
outsl
cmc
cmpsb
push
add
int3
add
add
add
mov
mov
add
add
xchg
js
scas
ret
popa
lret
cmp
outsb
add
add
jns
leave
test
repz
pop
add
jl
rclb
add
add
clc
inc
and
dec
add
sbb
mov
dec
aad
add
mov
pop
xchg
roll
mov
cmp
test
dec
add
adc
subl
je
inc
add
outsl
es
xor
add
cltd
scas
cmp
nop
mov
add
mov
cmc
jg
add
push
int
add
outsl
mov
add
add
mov
pop
add
setge
and
fstp
mov
add
daa
inc
add
mov
push
add
jno
jmp
jbe
fcmovbe
aaa
sbb
xor
dec
add
mov
add
fbld
popa
add
pop
add
loop
sub
jecxz
xchg
mull
mov
not
xchg
sbb
and
add
cltd
sub
arpl
or
and
add
or
fisubrl
call
pop
add
fimuls
add
add
out
adc
add
js
jle
mov
mov
mov
iret
add
add
push
add
test
out
mov
add
add
sbb
pop
test
jg
or
out
add
sub
rorl
add
sarl
and
add
ds
out
leave
cli
cmp
xor
or
inc
add
mov
fmul
hlt
sarb
js
mov
sub
add
add
or
add
jno
add
xchg
in
mov
push
add
add
add
into
jp
mov
xchg
out
add
push
sub
mov
add
sahf
sbb
cli
int3
dec
pop
add
mov
mov
loope
into
lret
in
in
dec
add
out
imul
lock
sub
repz
pop
cld
data16
std
cmp
sbb
add
and
add
push
insb
add
mov
xchg
push
add
fldl
push
insl
pop
addl
mov
into
das
in
add
cltd
mov
int3
adc
add
add
mov
sar
adc
add
dec
pop
imul
pushf
mov
mov
add
jge
cmp
dec
nop
mov
add
add
adc
test
dec
push
add
add
add
add
cmc
push
test
fcoml
mov
add
add
aam
mov
sti
sub
in
cmpsl
or
aam
xchg
add
je
push
jmp
mov
cmc
push
and
fisubl
pop
xlat
add
add
add
and
pop
add
dec
add
test
add
xor
add
add
add
test
add
mov
add
daa
loope
roll
add
add
stc
bswap
xchg
mov
add
aam
push
add
add
push
fwait
iret
bound
in
sub
sub
adc
add
xor
jge
repz
ss
add
mov
imul
add
mov
std
insl
cmp
out
movsb
mov
xchg
scas
imul
enter
add
add
add
insl
add
dec
fidivl
jg
lcall
pop
pop
add
add
shrl
xor
add
add
sub
xor
add
or
rorl
add
add
jge
push
fistpl
sbb
and
xchg
xchg
inc
mov
add
lret
loope
test
pop
add
cmp
sub
in
pop
add
mov
add
push
add
add
cmp
push
xor
sahf
sub
push
xorb
add
roll
add
pop
out
add
arpl
mov
or
rolb
jne
xchg
jne
jecxz
cmp
dec
ret
or
mov
add
outsl
sbb
add
inc
add
mov
sbb
lahf
xchg
aad
inc
add
rep
popa
inc
or
push
add
jbe
pop
out
js
or
and
mov
mov
loop
and
add
lret
cltd
xor
add
add
add
xor
lock
jbe
mov
jg
xor
add
add
jle
int3
scas
jns
inc
xchg
pusha
add
cmp
inc
inc
jnp
mov
xor
xorl
add
add
sub
and
cltd
adc
add
and
add
mov
xchg
push
jl
jnp
lods
push
add
adcl
mov
out
and
pop
std
mov
pop
cmp
fsts
call
xor
add
and
add
add
mov
pusha
add
sub
stc
lret
sahf
cmp
and
add
inc
add
pop
jmp
sar
pop
jae
addb
mov
shll
add
add
fdivl
mov
dec
or
inc
add
jecxz
out
lret
or
pop
jmp
add
int3
pop
divl
mov
pop
jl
xor
add
test
xor
cmpsb
imul
icebp
test
add
add
add
jmp
push
movsb
adc
filds
inc
add
std
aam
movsb
add
dec
lret
dec
dec
add
add
cmp
xchg
loopne
mov
icebp
leave
xchg
pop
cwtl
iret
test
ja
add
xchg
cmp
mov
loopne
add
mov
add
xor
hlt
cmp
xor
mov
sbb
scas
add
add
xchg
outsb
add
shr
push
add
add
add
xlat
scas
andnps
xor
push
add
adc
add
fnstcw
out
gs
mov
and
jge
outsl
inc
imul
sub
xor
add
add
icebp
inc
add
int
dec
add
add
and
jg
add
cmpsb
mov
std
xchg
enter
sbb
fidivrl
add
mov
rol
sub
and
pop
scas
mov
dec
add
lock
imul
add
popf
adc
add
je
cmp
mov
inc
add
push
roll
in
xchg
mov
or
add
addl
add
xor
mov
dec
add
jae
incl
mov
xchg
cmpsl
and
add
push
xor
mov
pusha
add
sahf
add
rolb
mov
add
inc
add
movsb
sbb
push
push
add
dec
add
aam
or
stos
mov
mov
rorb
sub
mov
add
add
dec
jns
rolb
pop
add
fcomps
add
mov
push
add
add
push
add
lahf
add
loope
add
jbe
add
cld
push
add
lds
add
push
scas
sbb
sbb
out
add
lcall
add
inc
add
mov
test
fisubs
cmp
adc
mov
jle
push
add
outsb
add
out
out
sbb
cmpsb
lods
xchg
rorl
icebp
mov
pop
add
dec
rorl
shlb
xor
int
or
cwtl
in
fdivs
add
add
mov
movsb
add
and
sbb
dec
add
and
add
dec
add
push
cmp
sti
sbb
enter
add
sbb
icebp
mov
sbb
inc
add
xor
gs
mov
jae
mov
cmpsl
bound
fisttpl
add
fdivrl
jnp
add
cmp
add
repz
add
bnd
xor
add
add
add
sub
jl
xor
cltd
add
xor
add
lcall
add
sbb
sti
cmc
jo
stos
xorb
inc
add
add
movl
sbb
adc
std
js
mov
pop
jmp
nop
sbb
idivb
out
add
rolb
loope
gs
add
mov
xchg
dec
add
lahf
add
movsl
adcb
inc
add
add
push
add
add
das
jge
ret
in
dec
add
inc
add
not
pop
add
jns
pop
jne
sti
cmpb
add
cmp
mov
push
cld
push
cmpl
xor
add
pop
xchg
mov
test
jg
pusha
add
inc
add
jp
inc
jno
cmp
leave
xor
add
out
ja
dec
xor
add
mov
add
push
add
mov
sub
repz
add
out
pop
jge
add
sbb
mov
loop
sbb
jae
add
arpl
add
hlt
call
dec
add
sub
jg
jecxz
sbb
or
pop
add
rcrl
jp
mov
jecxz
rcll
add
inc
add
pop
add
incl
rorl
add
sbb
in
call
push
add
sub
and
jg
add
add
lret
push
add
popa
push
add
cli
scas
push
add
add
or
outsl
add
add
push
clc
pop
jnp
dec
scas
cld
in
movsb
xchg
sub
cmp
cmp
mov
push
add
sbb
test
add
daa
cmpsl
add
dec
add
out
jbe
popa
xchg
or
mov
cmc
inc
add
cmpsl
add
jo
mov
cmp
mov
sub
lods
jp
inc
popa
in
mov
jb
js
sbb
and
add
add
mov
inc
stos
pop
add
bound
loopne
cmc
adc
cltd
lret
xor
add
xchg
cmpsl
sbb
gs
sub
dec
add
push
fcoms
cli
pop
mov
add
adc
add
add
inc
add
lret
rorl
add
outsl
pop
add
mov
test
add
push
add
or
test
daa
or
stos
lock
add
stc
add
add
cmpsl
add
hlt
sub
in
add
popf
adc
mov
nop
mov
xchg
adc
loope
push
add
add
xor
add
outsl
cmp
cmpsl
xchg
sub
fwait
mov
lock
out
adc
xor
add
add
repz
lea
roll
add
lcall
or
enter
add
adc
push
movsl
pusha
add
test
and
add
adc
add
add
add
push
cmp
bound
arpl
xchg
lahf
cltd
and
add
and
mov
jo
adc
add
data16
pop
jge
cmc
xor
add
add
push
add
inc
repnz
and
add
add
adc
add
mov
dec
add
sbb
ss
sub
shlb
mov
add
and
add
pop
add
sahf
pop
add
out
jle
test
add
xchg
adc
in
lods
cld
cmp
mov
fstpt
add
out
lea
add
popa
pushf
cmp
cmpsb
add
pop
sub
mov
dec
pop
mov
or
insl
jmp
jp
and
add
push
in
data16
add
add
add
add
and
add
pop
daa
lock
xor
mov
sbb
iret
add
xchg
fisttpl
add
mov
push
add
lea
cwtl
shll
add
popl
cmp
fbstp
add
hlt
ret
jl
pop
loop
mov
jp
icebp
test
ficompl
push
add
xorl
nop
andl
add
mov
push
lahf
inc
add
jg
xchg
add
out
pop
add
lea
cmp
js
sub
movsl
and
add
dec
add
add
dec
add
sbb
cmp
xor
add
adc
test
lahf
add
and
add
add
test
add
push
add
jnp
rcr
jecxz
addl
lock
sub
stos
jg
dec
add
mov
dec
add
into
add
test
aam
xchg
xor
and
pop
or
sbb
jge
fidivrl
inc
gs
xchg
add
das
mov
mov
pop
add
popa
add
add
add
bound
xchg
jge
ljmp
int3
out
pop
add
mov
add
dec
add
aad
add
xchg
repz
or
sbbl
mov
data16
js
fbstp
in
sbb
cmp
ret
mov
stc
out
jp
imul
mov
add
push
add
add
xchg
add
jne
push
in
jo
movsb
dec
push
add
jo
and
add
and
add
sub
cli
add
cmpsb
mov
ss
cmpsb
shlb
out
xlat
in
pop
add
nop
add
sbb
lock
push
jnp
jp
loop
add
loopne
push
add
pop
add
rorb
and
xchg
sti
xor
jle
pop
add
push
add
cmp
pop
mov
inc
jbe
cmp
mov
add
jne
sahf
push
add
testl
mov
add
into
data16
fbld
into
imul
add
and
add
loopne
or
cmp
xor
add
imul
fisttps
ja
lcall
shl
push
add
aas
add
int
adcl
test
lahf
add
mov
add
xor
add
xor
mov
pop
add
rclb
jne
lret
fwait
dec
jle
pop
insl
push
cmc
add
pop
add
dec
lods
loopne
add
loopne
int3
jb
dec
add
int
jno
or
test
in
pop
add
push
add
fiadds
push
add
add
xchg
inc
add
loope
stc
add
incb
sub
in
pop
stc
push
lods
xor
and
add
dec
pop
add
rcll
add
pushf
mov
insb
add
add
dec
add
pop
cmp
pop
add
pop
mov
add
mov
add
jecxz
data16
repz
inc
add
add
icebp
stc
stos
dec
add
xorl
mov
add
mov
int3
or
xchg
add
xor
add
add
add
add
add
insl
mov
add
inc
add
lcall
fdivs
daa
sbb
add
add
add
sbb
jo
cld
jecxz
test
jp
mov
sub
xchg
nop
cmc
cli
adc
js
add
add
cmp
mov
add
incl
cltd
int
add
jns
fiadds
sbb
enter
test
rcrb
lods
es
add
adc
sbb
out
cmp
push
test
jp
cmpsl
cmpb
lret
cmp
and
add
and
insb
add
sbb
loopne
dec
add
ljmp
mov
add
lcall
add
stos
lea
pop
sub
xor
add
push
outsl
add
add
push
add
xchg
out
push
add
add
pushf
scas
or
dec
add
mov
call
and
sarb
cmp
bnd
add
add
in
je
insb
add
and
add
pop
pop
add
sbb
pop
add
add
xchg
test
and
add
call
fcom
lods
fsts
pushf
xchg
mov
lret
imul
int3
mov
add
sar
jae
imul
jne
lahf
lods
sbb
mov
add
add
loopne
or
jnp
jle
je
xor
add
iret
add
add
push
add
ja
push
add
jb
daa
and
test
out
lods
add
data16
add
mov
addl
add
pop
add
sbb
push
add
sbbb
add
add
add
sub
mov
lods
ror
fwait
dec
dec
push
repz
push
add
fsubrl
xor
add
mov
movsl
add
stc
loopne
cwtl
mov
pop
mov
dec
add
cmp
sub
add
add
add
popa
stos
inc
add
test
xchg
mov
add
add
nop
jecxz
das
scas
leave
lea
insb
add
filds
lcall
cmp
imul
add
xchg
mov
jl
push
add
sbb
jl
out
inc
mov
cltd
and
add
cmp
dec
adc
push
mov
rcrb
add
aas
add
mov
mov
xor
xlat
jl
jbe
mov
add
lcall
daa
xor
cltd
cmc
cmpsb
sbb
or
les
les
add
add
stos
pop
and
add
aas
das
nopl
or
and
add
add
adc
or
imul
std
jl
xchg
pop
cld
jge
ret
push
add
add
jmp
xor
mov
int3
xchg
sbb
cmp
pop
sub
test
mov
push
add
add
cld
cmp
jbe
in
lock
data16
pop
add
add
sub
or
int
movb
in
add
pop
mov
add
and
add
add
xchg
imul
sub
sbb
mov
sub
push
call
push
add
add
iret
mov
jnp
lret
add
add
jns
add
popa
add
dec
add
cmp
inc
add
arpl
fcoml
xor
add
push
clc
lods
jns
pop
add
mov
jg
add
or
je
pop
add
mov
cmp
sub
adc
add
js
mov
inc
add
sbb
push
add
loope
ret
mov
pop
add
push
add
pop
add
dec
cmp
sbb
adc
add
jl
mov
push
test
cmp
push
inc
fstpt
mov
jecxz
add
mov
add
and
add
add
pop
add
popa
fcompl
fdivrl
adc
stos
mov
xlat
or
in
adc
xchg
or
mov
add
in
jnp
push
sbb
add
mov
add
test
lahf
add
dec
add
add
push
add
fimuls
leave
add
leave
jae
lods
mov
xchg
iret
inc
add
cli
add
push
ret
dec
mov
es
mov
add
pop
add
jae
add
add
dec
add
jecxz
iret
nop
fldt
mov
jae
inc
add
jp
dec
mov
inc
add
add
add
and
add
add
repz
xchg
sbb
push
cmp
add
sub
movsl
push
add
add
add
push
xlat
leave
xor
ret
int
add
sahf
shlb
mov
movsb
mov
push
dec
add
sbbl
add
push
add
fchs
push
popa
add
test
imul
mov
into
nop
shl
sbb
pop
out
add
add
push
push
and
add
mov
add
add
xor
imul
sub
add
loope
stc
push
addr16
add
outsl
jp
inc
add
add
add
mov
add
jne
insl
and
add
jge
das
lret
mov
add
rolb
inc
add
dec
add
cmp
fisttpll
add
mov
dec
add
leave
insb
add
fcoms
in
inc
mov
adc
imul
jmp
add
sbb
daa
push
add
ljmp
sub
xchg
push
aas
and
arpl
outsb
add
sub
fmuls
add
add
cmp
adc
mov
mov
inc
jg
roll
mov
shrl
mov
add
testl
popa
dec
add
or
inc
add
cmp
scas
jae
or
lea
movsb
add
push
dec
add
add
idivb
add
pop
add
lods
dec
aaa
sti
add
test
add
add
sti
add
adc
add
adc
scas
push
dec
add
xchg
aaa
mov
popf
mov
enter
add
adc
add
mov
imull
mov
inc
add
sub
mov
ret
out
add
mov
cltd
pop
add
aas
xor
sbb
test
insb
add
fdivr
mov
inc
add
pop
add
cmp
repz
or
adc
std
sbb
sub
sti
scas
cmp
movsl
loope
xchg
xorb
add
xor
add
add
push
add
add
add
in
xlat
dec
xor
mov
sbb
xchg
popa
push
popa
add
inc
add
cmpsl
pushf
out
test
leave
add
les
add
add
stc
fsubrl
push
xchg
sub
stos
or
in
sahf
xorl
inc
add
and
add
sbb
mov
add
or
les
and
pop
fiadds
test
and
add
add
stos
add
cltd
add
shr
pop
pushf
mov
in
bound
mov
fcomps
add
mov
jg
cmpsl
add
push
add
adc
add
jecxz
mov
iret
adc
dec
add
mov
jmp
jbe
sti
lock
mov
pop
adc
call
dec
add
push
mov
decl
xchg
xor
repnz
add
and
pop
add
mov
add
add
add
and
add
and
arpl
notl
inc
add
sub
ret
mov
bound
imul
lods
inc
sbb
adc
notb
mov
xchg
and
add
mov
je
aad
sub
dec
add
fs
leave
or
fisubrs
add
add
add
and
comiss
nop
pop
inc
add
cs
iret
xor
add
or
or
or
push
push
adc
add
rol
mov
test
aas
mov
add
test
sub
es
add
movsl
cmp
jbe
xchg
imul
fildll
aas
dec
add
inc
add
nop
les
test
mov
inc
pop
add
add
xor
xchg
rcll
pop
add
add
adc
mov
add
add
mov
inc
add
repz
bound
jno
shlb
repz
insb
add
add
add
add
stos
push
pop
add
imul
enter
add
mov
push
add
mov
mov
add
movsl
les
adc
cmp
xor
iret
mov
out
int3
test
add
lods
xchg
into
cmp
sahf
xchg
mov
xlat
or
jns
jmp
add
insb
add
sub
push
add
sbb
pop
add
testl
lret
inc
add
fcomp
jb
rorb
add
xor
add
push
pop
cld
leave
movsb
xor
add
mov
loopne
int3
andl
repz
cltd
xor
add
scas
add
push
add
sub
add
push
xchg
add
cmp
movb
add
push
push
add
test
add
pop
or
xor
or
not
ret
xchg
fcomps
in
rcrl
and
push
fidivs
mov
js
je
lods
jl
mov
xchg
add
lahf
std
jge
sti
cmp
lods
add
lods
push
cmpsb
repz
ja
pushf
dec
add
jle
out
loop
cmp
dec
add
psubsb
add
adc
add
test
hlt
inc
add
test
loop
add
add
pop
add
rclb
inc
add
imul
jp
shll
push
fwait
or
into
jl
push
pop
add
adc
add
add
inc
add
jl
rcr
incl
fcomip
jl
lahf
jmp
adc
add
xlat
add
loope
cwtl
jo
lret
mov
sti
mov
add
sbb
lahf
dec
pop
leave
add
add
push
add
push
add
arpl
divb
jns
mov
lret
add
out
in
das
fisttpl
je
cmp
push
sbb
inc
add
add
mov
jl
and
add
ret
orb
sahf
jbe
sub
cld
add
stc
in
and
add
add
cmp
sub
add
cmp
pop
xchg
add
out
lock
idivb
add
lods
cwtl
xchg
mov
incl
push
add
inc
add
add
mov
pop
add
adc
add
add
push
inc
sbb
leave
add
push
add
mov
repnz
lods
mov
add
test
xor
add
lret
sbb
scas
xchg
and
popf
and
and
jbe
push
mov
push
add
add
xor
bound
rcrl
dec
add
mov
scas
popf
shll
jo
push
push
aas
add
add
enter
scas
fisubrl
es
add
and
xchg
mov
icebp
lock
mov
sahf
mov
fildll
or
dec
add
push
add
fmull
div
int3
popa
and
inc
add
mov
push
add
lret
jne
fadds
jl
inc
add
add
add
xlat
mov
adc
add
dec
adc
add
add
setnp
add
cmp
repz
add
xchg
mov
xchg
pop
jl
ret
cmp
data16
jns
lret
insl
mov
pop
inc
xor
fistpl
xchg
fwait
scas
xchg
cmpsb
lods
cltd
lret
leave
lcall
or
jo
scas
mov
fldcw
test
insl
scas
inc
add
mov
rcrl
adc
sub
pop
pop
add
das
xchg
addr16
leave
mov
add
js
dec
ret
div
les
dec
add
cmp
out
add
pop
add
es
add
add
add
add
cld
cmc
xor
add
pop
and
movsb
cmp
cmc
popa
inc
add
jge
jo
cmc
cltd
arpl
cld
scas
pop
jb
out
or
xor
add
add
rolb
imul
cmp
inc
adc
sbb
add
mov
sbb
ja
gs
loop
xor
xor
pop
bnd
add
or
scas
fs
add
add
mov
jle
mov
push
add
inc
outsl
add
add
pusha
add
dec
add
sbbb
xchg
loopne
sub
add
dec
bound
jp
sbb
inc
add
and
add
data16
dec
fcoml
pop
add
mov
pop
add
adc
push
add
popf
and
add
add
add
cltd
pop
add
rolb
sub
sbb
lods
add
iret
add
and
add
add
cmp
dec
add
int
in
add
add
movl
shlb
ret
ds
sub
add
add
cmp
mov
dec
jnp
add
loopne
pop
add
cmpsl
negb
pop
loope
add
int
jl
js
xor
sbb
add
cmp
sub
cmp
xchg
pop
add
mov
mov
dec
add
aaa
addb
jmp
mov
add
out
add
add
negb
add
xor
jns
int
stos
mov
aaa
add
pushf
sbb
leave
add
add
out
mov
cmp
add
cmpsl
add
dec
mov
stos
sub
fnsave
ljmp
sub
xchg
pop
push
pop
add
pop
aad
stc
add
insl
xor
add
add
inc
add
add
jnp
add
sbb
xchg
xchg
pop
dec
or
push
ljmp
inc
jbe
push
add
adc
add
ja
bound
adc
inc
add
xchg
mov
add
pop
add
add
stos
jo
cmpsb
mov
and
fstps
push
inc
add
push
add
add
cwtl
lahf
pop
ficoms
insb
add
lret
mov
lods
mov
or
add
insl
in
mov
jae
sbb
testl
sbb
add
jns
popf
jae
add
xor
add
das
xchg
arpl
iret
lahf
push
add
add
cwtl
add
pop
add
les
add
loopne
xchg
xchg
add
jo
jmp
add
add
cmp
xor
add
dec
sub
shrb
lods
add
mov
add
mov
mov
movsl
or
aam
and
add
and
add
and
xchg
loopne
orl
popf
orb
add
dec
add
add
xchg
xor
add
imul
cmc
add
scas
add
ja
movsl
bound
mov
jno
add
mov
cmp
mov
aam
mov
ret
add
xchg
outsl
sbb
jmp
sub
mov
sbb
sbb
iret
mov
icebp
inc
inc
add
jno
call
add
sarb
aam
fiadds
mov
call
mov
mov
push
cmpsb
mov
arpl
cmpsl
push
ds
mov
cmp
lea
aad
repnz
cmp
sub
pop
mov
add
and
call
or
out
sub
dec
add
int3
jmp
scas
or
add
mov
jl
repz
mov
add
add
xchg
call
aaa
int
mov
sbb
fisubrs
push
movsb
push
add
add
scas
add
jg
test
add
mov
add
sub
xor
jecxz
adc
lds
rclb
add
out
or
hlt
xor
add
jae
clc
prefetchnta
jmp
inc
add
lcall
add
aad
call
add
add
jnp
mov
lods
adc
add
lea
adc
add
add
jl
rcrb
imul
add
imul
stos
mov
pop
add
xchg
or
popf
push
js
lods
mov
push
xor
hlt
xor
mov
xlat
add
sahf
lcall
dec
add
fimuls
stc
mov
jge
jg
push
add
cmp
stc
loop
push
mov
add
inc
add
add
pop
test
add
add
neg
push
add
pop
add
pop
in
add
fisubrs
adc
pop
add
mov
inc
jmp
mov
add
notl
jnp
mov
in
add
insl
dec
dec
add
push
mov
aam
pop
add
jg
add
xchg
fisttps
mov
or
adc
add
push
clc
xor
dec
add
push
daa
add
pop
popl
lods
or
insl
mov
ret
add
jecxz
in
ja
cli
push
add
and
add
sub
add
add
ret
loope
clc
nop
inc
push
jnp
adc
cli
jo
mov
xor
add
add
add
lock
add
ss
add
sarl
add
add
cli
and
add
repz
pop
mov
mov
cmp
jb
push
add
add
js
fs
aam
and
add
mov
lock
add
add
ret
into
mov
push
add
mov
sbb
icebp
xor
add
mov
inc
jo
push
incl
lock
cltd
mov
xlat
test
fistl
cmpsb
add
or
jp
lock
sbb
fwait
aaa
mov
mov
testl
addr16
add
pop
je
test
fninit
dec
and
add
insl
push
or
fsubs
add
add
add
cs
hlt
js
das
movsb
and
add
jb
mov
and
add
adc
gs
std
outsb
add
negb
add
cmc
test
add
jmp
add
xor
mov
add
jne
add
inc
add
in
adc
add
test
dec
push
xchg
add
add
sbb
mov
add
cmp
ja
lret
cli
add
pop
in
ja
add
jl
jmp
fisttpl
add
out
xchg
mov
push
scas
add
mov
add
push
std
pop
imul
and
add
push
fwait
lea
aas
fnstcw
push
cmp
div
mov
push
add
nop
jp
push
and
jmp
and
xor
add
mov
ret
lcall
jp
add
movsb
xor
xor
add
loop
or
cmp
mov
das
movsb
cmpl
add
xchg
mulb
lcall
ret
mov
xor
add
inc
mov
and
loope
data16
cmpsb
add
add
push
add
idivb
addr16
add
xor
add
or
add
stos
push
movsb
sbb
add
mov
add
add
je
in
outsl
lahf
mov
int
int3
mov
push
add
sahf
mov
mov
xchg
jnp
sub
adc
add
mov
add
fwait
jmp
mov
js
divb
sub
xor
push
add
cmp
dec
or
jb
push
add
cmp
pop
mov
and
cmpsb
lret
dec
addr16
add
push
cmp
or
add
stos
xorps
shlb
popa
add
arpl
lods
add
jl
sub
cmp
jle
test
dec
add
ja
mov
cmpsb
mov
lret
in
pop
add
add
mov
add
sarl
mov
or
cmp
addb
add
push
add
adc
add
movsb
pop
add
xor
add
movl
add
movsb
testb
add
add
mov
data16
add
pop
push
add
and
xor
add
stos
mov
cmp
push
add
movl
xchg
push
add
sbb
in
sub
out
jg
push
dec
add
add
jecxz
cmp
ret
loop
leave
dec
pop
cwtl
clc
aaa
ret
add
test
add
aas
add
push
add
sub
in
jnp
add
test
add
cmp
lods
rorb
sub
data16
cmc
mov
test
cmp
cmp
inc
add
inc
add
sub
icebp
shlb
sbb
jge
dec
add
testl
add
mov
add
jp
mov
jl
or
xor
stos
mov
sahf
imul
inc
add
mov
jae
or
rorl
add
test
and
add
add
add
mov
push
add
fdivrl
cmp
stos
std
mov
pushf
mov
std
add
add
roll
jl
in
inc
into
sbb
jae
shrb
cmp
dec
addl
add
xor
mov
popf
cmpsb
add
add
ret
imul
mov
add
cmp
sbb
add
addl
add
and
sbb
mov
std
jge
jg
test
dec
fistpll
or
ret
add
cmp
xor
add
jno
adc
add
add
sbb
in
js
movsl
sbb
or
jecxz
add
push
add
mov
cs
enter
pusha
add
add
or
jmp
cmp
in
xchg
sub
loop
add
dec
add
add
pop
push
add
je
scas
sub
mov
add
push
pop
or
xchg
outsl
mov
sbbb
and
shll
jmp
sbb
jmp
add
and
add
mov
xchg
popa
mov
pop
add
add
add
add
add
add
add
adc
add
add
xor
xlat
scas
jl
fistl
mov
xchg
mov
ret
xchg
mov
push
add
dec
add
mov
xchg
add
add
out
shlb
fwait
push
add
add
add
add
ret
cmp
xchg
dec
add
js
lret
add
jle
jnp
pop
add
add
jbe
xor
add
jp
ljmp
cmpsb
mov
xchg
sub
scas
pop
out
add
add
sub
imul
lahf
lret
add
jne
cmp
mov
push
cmp
adc
mov
sub
fists
xchg
mov
cmpsb
and
add
fwait
add
and
add
add
dec
sbbb
add
sbb
push
add
cmp
mov
or
sbb
jae
cmpsb
mov
xchg
lock
push
call
add
mov
cmp
shll
or
add
add
push
add
loop
or
test
imul
dec
in
jbe
aad
add
or
sub
add
iret
divl
cmp
sahf
push
add
pop
add
fs
inc
sti
dec
sar
adc
add
add
rcl
cmp
lds
loope
ret
sbb
mov
add
jl
sub
adc
add
jge
scas
aas
xor
add
movsl
ret
add
sbb
aaa
dec
add
popf
lcall
je
scas
repz
sub
push
add
add
cmp
jmp
add
jg
push
sbb
jo
xchg
mov
loope
mov
shl
add
add
fistl
adc
jp
xchg
dec
push
fwait
and
shrb
ret
dec
or
sbb
add
mov
or
addb
add
outsl
rol
mov
fildl
mov
js
psubq
mov
mov
pop
cmp
pop
cltd
add
mov
cmpsb
mov
rcr
lcall
push
add
sbb
mov
into
jg
dec
or
mov
ffreep
jecxz
outsl
adc
add
add
ret
push
or
and
add
jp
pusha
add
jecxz
add
add
imul
add
add
dec
dec
add
jg
or
mov
test
aas
sahf
hlt
mov
add
add
sbb
add
mov
add
add
fnstcw
or
hlt
jle
fistl
add
xor
hlt
sbb
outsl
daa
lock
add
add
xor
add
jns
mov
pop
clc
nop
and
add
shrl
nop
outsb
add
in
xor
inc
add
add
add
sub
fnstcw
add
gs
lea
cmc
iret
push
add
jle
andb
mov
enter
movsb
sub
ret
add
jbe
mov
add
out
mov
xor
pop
leave
out
test
inc
add
add
add
and
popa
comiss
in
jp
cmp
sbb
push
add
jg
sub
xchg
or
adc
add
mov
jb
scas
stos
xor
add
aad
sbb
addl
pop
adc
add
or
addb
and
add
incl
pop
int3
cltd
dec
mov
pop
dec
push
xor
add
int
imul
inc
jge
stos
add
test
xor
add
in
pop
add
cmpl
add
jo
add
add
inc
add
sub
aad
rcr
pop
mov
add
add
sub
in
push
test
add
add
push
add
sub
data16
loope
xchg
sub
stc
push
mov
stc
push
add
mov
enter
add
stc
in
mov
adc
scas
lcall
sbb
add
les
clc
add
inc
stos
mov
add
add
ret
int3
mulb
rolb
imul
nop
sahf
fwait
mov
cwtl
clc
into
push
ror
dec
loop
add
incl
ret
add
add
pop
add
push
add
cmp
pop
add
push
add
mov
bound
addb
inc
add
add
add
jns
mov
arpl
jle
enter
call
xor
add
test
inc
push
cli
loopne
mov
jmp
add
push
adc
add
add
out
xor
add
mov
test
sahf
fildl
in
ljmp
jecxz
lret
add
aaa
icebp
add
jp
sar
cmp
jns
dec
lods
xchg
add
add
mov
sub
lcall
push
add
xor
add
add
iret
sar
repz
add
pop
add
daa
mov
push
add
cmc
add
aaa
push
add
inc
add
repz
lods
outsl
lret
jno
les
inc
xchg
nop
sub
push
add
mov
movsl
inc
add
jmp
mov
sbb
cmp
cmp
sub
lock
add
and
rolb
add
xor
movsb
inc
add
add
xchg
nop
stos
insl
arpl
cwtl
fdivrs
add
fwait
cmp
call
add
sub
xchg
in
mov
mov
pop
xor
add
add
addl
fisubl
divb
push
add
mov
pop
sbb
pop
add
mov
and
std
jecxz
add
in
xchg
vmread
push
add
add
add
cmp
jo
adc
add
test
rorl
xchg
mov
add
add
lret
xchg
sarl
cs
in
dec
roll
mov
jno
inc
add
mov
inc
add
jmp
jge
loop
pop
add
jl
xor
or
adc
add
in
xor
leave
mov
add
sahf
mov
add
add
and
jge
adc
popa
out
add
mov
jl
fwait
shll
lcall
bound
cltd
mov
ret
pop
scas
sbbb
pop
dec
insb
add
cmp
add
push
lods
mov
pop
pop
leave
inc
fwait
jno
call
aaa
lcall
add
loopne
mov
ss
aas
lock
and
add
in
nop
cmp
push
xchg
test
out
cmp
stc
mov
add
pop
insb
add
add
sub
add
add
lods
add
add
xor
shl
add
data16
and
add
jb
xchg
mov
stos
add
scas
cld
xchg
mov
hlt
std
add
mov
mov
aaa
testb
add
dec
add
das
das
icebp
iret
xchg
daa
sub
cmp
add
pushl
jmp
iret
and
lret
addr16
add
sub
nop
push
add
dec
stc
xchg
sub
incl
jmp
ret
fmuls
stos
leave
mov
dec
add
sbb
fbstp
mov
jle
test
xchg
mov
add
add
imul
add
shl
fldcw
out
negl
inc
leave
push
pusha
add
inc
sub
pop
and
add
test
lahf
or
add
add
adc
outsl
mov
les
sbb
push
add
mov
sub
push
mov
sbb
aam
add
inc
add
data16
mov
add
sub
cwtl
loopne
sar
call
jnp
lock
sub
fldcw
cmp
js
and
add
mov
add
add
jl
cmpsb
or
add
add
xor
add
add
add
mov
add
sub
dec
add
add
cmp
rolb
add
jge
mov
push
add
aad
in
call
std
add
sahf
loope
add
popa
jns
nop
test
add
arpl
xor
adc
add
es
popa
inc
add
mov
and
jne
loope
mov
mov
ret
mov
bnd
pop
lock
nop
cmpsl
cmp
add
bound
out
pop
js
inc
add
mov
adc
add
add
add
pop
add
jge
adc
cmp
jns
jmp
fbstp
pop
xchg
lea
jne
add
pop
add
in
in
ja
ljmp
pop
push
mov
add
and
or
clc
ljmp
add
cmp
andb
jle
repnz
mov
xor
add
cmc
add
lods
push
add
mov
xchg
push
pop
gs
add
xor
fwait
push
in
add
adc
inc
hlt
bound
jge
dec
ss
mov
mov
adc
icebp
sub
or
push
add
decl
add
das
add
push
iret
xlat
fldt
std
xor
add
mov
mov
mov
inc
add
mov
das
and
add
add
int3
xchg
fiaddl
xchg
mov
push
ljmp
ret
dec
pop
add
add
push
add
and
add
inc
sub
or
insl
fcmovb
cwtl
mov
fucom
xlat
sbb
xchg
and
add
xor
add
rcll
lea
inc
ret
jge
jns
push
add
lret
sti
cmc
stos
add
push
add
in
mov
adc
mov
arpl
adc
xor
add
jno
pop
aaa
add
lock
popa
sub
xchg
push
testl
add
add
jns
jo
add
add
mov
std
dec
loope
jp
icebp
sbb
add
ffree
outsl
push
add
add
add
add
add
add
adc
add
mov
add
add
pop
sahf
sbb
xor
add
add
add
add
daa
mov
inc
dec
test
fidivrs
add
rcll
pop
clc
add
mov
add
ljmp
jl
std
fidivl
add
mov
jle
aam
add
cld
jnp
mov
test
sbb
sbb
dec
add
fwait
add
push
shr
xchg
outsl
cmpsb
into
inc
add
add
daa
mov
xor
pop
call
adc
mov
add
clc
add
adc
pop
add
add
inc
xchg
repnz
shll
jno
xor
cmp
add
add
add
aaa
fiaddl
add
add
arpl
push
add
outsb
add
stos
les
push
add
loopne
stc
sbb
outsl
push
add
add
jns
cmp
std
add
sub
pop
pop
add
cld
add
pop
aaa
push
aad
add
rcrb
ljmp
cmc
movsl
add
fldl
and
add
push
add
imul
add
xchg
fisubl
dec
add
push
xchg
add
mov
js
push
add
add
pop
fldt
add
push
add
adc
add
dec
add
mov
add
ret
add
add
movsl
push
add
or
loope
add
xchg
push
jno
les
adc
add
imul
add
and
add
ret
mov
add
add
add
pop
add
mov
pop
data16
inc
add
in
add
add
into
in
pushf
add
push
push
add
add
pop
mov
scas
adc
add
mov
push
ja
add
push
notl
icebp
adcl
add
jle
adc
add
mov
sahf
inc
add
add
mov
dec
add
add
outsl
add
mov
add
neg
ja
cmc
lds
pusha
add
jnp
outsb
add
cld
add
inc
pop
push
add
loop
adc
add
cltd
cmp
mov
xchg
or
add
add
gs
imul
icebp
or
adc
add
add
add
pop
sbb
push
add
fiadds
arpl
push
add
push
add
xor
add
clc
lods
out
add
mov
lahf
xor
aam
add
aaa
cli
add
adc
add
movl
inc
cmc
xor
into
inc
add
leave
rol
lea
add
fisubs
mov
and
das
stos
arpl
ret
test
pop
add
cmpsb
ljmp
int3
lods
add
add
shrl
fcmovnu
repnz
sarl
add
inc
shrb
ret
aam
hlt
clc
push
mov
push
add
cltd
add
inc
xchg
add
cvtpi2ps
mov
lret
add
jno
lahf
cmc
mov
clc
rorb
add
int
add
xor
in
not
icebp
add
mov
sbb
or
inc
sub
imul
mov
add
mov
xchg
mov
xchg
mov
and
add
mov
sbb
pop
add
jnp
outsb
add
push
mov
add
xor
jmp
jnp
add
shrb
add
cmp
enter
push
les
add
int3
pushf
jo
out
and
or
sub
inc
add
push
es
mov
add
sbb
popa
jmp
sbb
dec
add
stc
jmp
add
dec
les
push
pop
movsl
test
mov
add
test
pop
add
sbb
mov
mov
xchg
sub
sbb
push
add
xor
add
jp
aaa
cmc
add
sub
std
inc
jl
fldcw
add
xchg
lods
add
shlb
add
jo
mov
sbb
pop
xor
in
aas
or
adc
in
xchg
icebp
push
mov
add
inc
push
iret
mov
jbe
inc
push
add
add
mov
sarb
cmp
inc
xor
add
push
add
cld
test
clc
push
jl
dec
cmp
jns
jg
sub
add
imul
add
add
add
mov
mov
sbb
loop
add
rolb
cld
push
add
mov
cli
add
add
add
cmpl
add
add
push
loopne
add
imul
mov
mov
mov
add
add
loope
jns
test
add
in
mov
or
mov
addl
add
lods
mov
add
and
aam
add
sahf
cmp
repz
add
sub
add
scas
xchg
das
mov
aas
sbb
add
add
xchg
aaa
jp
aam
cltd
je
mov
sub
add
testl
test
nop
add
mov
das
pushf
jmp
add
add
mov
sbb
daa
cmp
mov
adc
jmp
add
out
mov
add
decb
fidivrs
movb
sub
pop
inc
add
inc
add
adc
add
lods
push
jnp
push
jne
xchg
adc
add
lret
add
inc
add
cld
sub
test
call
push
stos
mov
dec
add
push
add
in
ljmp
cmp
repnz
lea
popa
fidivrs
nop
push
add
or
daa
dec
add
cmp
cmp
insb
add
mov
push
shlb
add
popa
mov
add
inc
popl
add
and
add
xorb
add
negl
icebp
sub
jo
aas
jg
mov
push
push
add
mov
mov
inc
add
movsl
imul
int3
sbb
and
add
stc
add
mov
add
or
mov
or
aam
sbb
sbb
add
movsl
cmpsl
jecxz
xchg
test
outsb
add
add
daa
jns
sub
leave
fimull
jnp
and
push
les
or
jb
fldl
data16
nop
add
add
das
out
in
dec
add
add
cmpsb
add
add
out
push
cmp
dec
pop
xor
add
ret
add
dec
pop
pop
add
daa
addb
jmp
mov
adc
pushf
mov
aam
jg
fistl
sub
movsb
push
pop
add
and
add
repz
repnz
fcoms
push
add
pop
add
mov
jp
and
cld
pop
add
rcl
adc
dec
pop
scas
or
adc
add
add
stos
outsl
cmpb
add
push
add
test
add
sbb
add
out
fnstenv
ret
push
add
add
add
lea
clc
fwait
daa
add
daa
adc
pushl
add
imul
enter
add
divb
pop
add
dec
add
push
add
mov
sub
dec
push
int
and
add
and
add
out
daa
add
test
enter
add
push
push
xchg
push
mov
icebp
add
add
or
sbb
adc
sub
daa
out
add
movsl
imul
xchg
mov
pop
add
lret
add
or
xor
hlt
aaa
add
add
mov
loope
int3
test
xchg
add
mov
sbb
push
mov
mov
daa
addb
or
push
popl
test
push
mov
push
add
mov
mov
adc
mov
imul
inc
dec
pop
movsb
add
mov
inc
pop
add
push
shll
add
les
add
popa
movsl
mov
negl
xor
add
add
je
sahf
pop
xor
mov
mov
hlt
mov
add
add
add
sub
bound
lods
rcrl
add
sub
mov
dec
add
push
add
gs
jno
jns
add
inc
push
pop
les
xchg
add
add
mov
add
mov
dec
add
mov
lahf
fildl
cmpsl
add
inc
add
enter
add
scas
add
add
add
lahf
mov
add
sbb
and
add
jae
lods
sbb
ja
push
pop
dec
add
sbb
iret
add
les
mov
push
popf
arpl
sbb
pushf
popa
pop
add
xor
add
ja
push
mov
movsb
add
jg
arpl
mov
add
cmp
repz
cmp
arpl
add
aam
cmp
and
pop
add
push
xchg
add
fimuls
add
mov
lret
dec
cmpsb
ja
mov
in
add
mov
js
sbb
filds
test
neg
aas
sub
mov
bound
adc
sahf
add
adc
add
push
add
pop
xlat
add
push
in
les
sub
cmc
pop
add
add
daa
xchg
add
add
jg
mov
add
add
add
fadds
add
pop
inc
add
pushf
add
aad
rcrb
inc
xlat
jecxz
pop
scas
add
popl
divl
pop
inc
add
mov
xchg
dec
add
lds
btcl
xchg
push
ljmp
and
add
jecxz
data16
les
stc
jo
inc
into
sbb
add
icebp
ljmp
jg
add
add
pop
dec
jno
pop
pop
pop
dec
add
dec
stos
mov
jno
insl
aam
and
add
adc
mov
inc
add
jnp
and
sub
pop
sbb
sub
lret
sub
mov
add
ss
add
into
aaa
cwtl
add
testl
je
mov
cli
lret
lods
mov
lods
dec
add
push
add
outsb
add
jns
mov
adc
lcall
add
fimull
jne
add
pop
lock
aaa
xor
int
sahf
or
call
inc
add
xchg
and
add
scas
pop
add
lret
lods
aam
add
into
mov
mov
lret
add
push
add
xor
inc
inc
and
xor
mov
jle
and
pop
mov
jecxz
addb
or
cmp
add
adc
add
xor
add
sub
std
ror
cwtl
std
int
mov
jmp
loope
jnp
inc
add
or
jl
ja
mov
fiaddl
lods
lods
xor
add
pop
add
out
sbb
and
add
adc
add
aaa
jmp
push
add
add
add
test
enter
pop
add
add
add
rorl
ffree
or
cmp
sub
xchg
ljmp
lods
add
ret
add
enter
lret
add
add
add
pusha
add
arpl
ficomps
xchg
mov
cmp
adc
add
add
bnd
lret
dec
mov
push
dec
aaa
scas
add
push
ljmp
mov
jmp
adc
add
add
lds
inc
add
mov
xchg
add
inc
xchg
push
add
inc
add
sbb
push
add
pushf
xchg
mov
ret
out
inc
xor
lods
icebp
inc
add
add
dec
add
sub
jp
mov
js
lds
jle
adc
add
lcall
jecxz
mov
dec
pusha
add
or
jmp
pop
xchg
inc
add
enter
icebp
data16
cwtl
cmc
sarl
aad
add
add
ficoml
mov
adc
add
sbb
jns
leave
pop
add
sti
mov
add
dec
add
add
cld
loope
add
cmp
xorb
add
dec
xchg
insb
add
add
mov
add
dec
jns
add
mov
lret
add
ss
add
jle
mov
cli
push
jnp
sub
add
mov
adc
add
push
loop
mov
scas
shrl
das
mov
mov
add
mov
imul
mov
push
in
add
or
in
pop
add
sbbl
add
add
xchg
adc
jecxz
insl
add
inc
cld
push
sub
pop
add
jecxz
int
add
das
fsubr
js
data16
add
lret
stc
add
add
test
or
cwtl
push
aaa
arpl
mov
sahf
cmp
cmp
mov
inc
xchg
pop
add
pusha
add
iret
cmp
fwait
add
add
inc
add
add
sub
lret
mov
sarl
cmc
lahf
mov
jmp
clc
add
xchg
adc
das
inc
add
in
jecxz
pop
add
add
call
sbb
outsb
add
mov
jo
rcrl
sar
pusha
add
pop
or
movb
jl
cs
cmc
outsl
adc
js
jmp
clc
lcall
cltd
jo
mov
mov
add
dec
pop
outsb
add
push
add
xor
mov
jns
cmp
cmp
add
push
lahf
outsb
add
add
add
into
fiadds
lock
add
and
rorl
add
add
dec
insl
mov
mov
jmp
add
ds
gs
add
push
add
pop
scas
add
daa
add
jb
pop
popa
nop
sbb
addr16
mov
or
int
add
add
mov
sbb
mov
add
out
fdivrs
cmpsl
and
dec
inc
add
repnz
push
add
add
jl
or
outsb
add
scas
icebp
push
jnp
sub
xchg
adc
or
or
sub
mov
and
xor
push
add
and
add
or
add
lcall
inc
add
sbb
mov
push
loope
inc
add
pop
cmp
add
mov
add
repz
mov
adcb
add
rcl
add
add
add
add
repz
sub
lods
add
pop
int3
add
push
nop
add
in
add
mov
pop
add
add
insl
add
jb
inc
push
add
fsts
scas
pusha
add
fadds
xor
add
addb
in
add
push
lds
aaa
mov
nop
adc
sub
add
and
ss
add
loopne
add
jl
push
push
add
insb
add
add
js
ffreep
dec
add
add
push
sbb
add
add
cmp
sbb
mov
leave
stos
pop
inc
jne
add
dec
add
dec
add
add
or
inc
add
sbb
add
cwtl
stc
pop
arpl
add
add
xchg
sti
sbb
rcrl
inc
add
add
xor
jl
inc
sub
dec
add
inc
add
jmp
in
movsl
mov
add
outsb
add
mov
jne
add
add
add
fwait
sub
lahf
xor
add
add
add
sbb
add
and
add
cli
add
mov
testb
add
data16
add
xor
xchg
pop
dec
add
iret
imul
fbstp
add
inc
add
hlt
jle
fwait
mul
hlt
insb
add
mov
push
push
insb
add
rcrb
popf
push
add
jle
js
or
aaa
ss
jb
shll
lret
add
dec
add
mov
sub
push
push
pop
add
cmpsb
push
mov
xor
add
mov
cmp
xchg
pop
fdiv
cmp
adc
es
xorps
jo
xor
icebp
fwait
push
inc
add
add
stos
add
sub
clc
call
pop
lods
add
lret
add
fists
into
fldl
out
add
aas
cli
and
add
add
add
jns
dec
push
push
ret
call
jmp
mov
movsl
inc
add
lret
inc
add
or
push
dec
add
cld
push
pop
add
or
dec
dec
add
push
popf
jae
ljmp
add
or
insl
mov
xchg
cmp
xchg
cld
rolb
add
in
aaa
jle
das
gs
sahf
jae
or
fdivrl
inc
add
xor
add
add
xchg
xlat
repz
cmp
xchg
push
add
add
popa
sbb
push
or
and
adc
add
popf
mov
inc
stos
cltd
mov
mov
scas
add
pusha
add
repz
push
push
addr16
pop
add
insl
pop
add
add
mov
xchg
add
lret
mov
xchg
cmp
outsl
add
add
aas
mov
inc
icebp
jnp
or
pop
add
test
fsubr
adc
add
add
sarl
jge
push
xchg
roll
sbb
data16
xor
add
leave
out
push
or
add
sti
or
or
in
pop
fwait
enter
cli
pop
add
add
inc
cmp
add
add
out
add
mov
imul
push
add
outsb
add
les
shrb
nop
add
testb
add
jmp
shlb
aas
add
pop
jmp
jnp
pop
xlat
add
jp
mov
int
daa
and
push
adc
movsb
outsl
add
shl
inc
add
push
enter
add
xlat
jbe
mov
in
insb
add
push
jne
mov
push
add
ja
add
pop
add
xchg
cltd
pop
cmpl
pop
dec
fistps
xor
add
shl
jns
pop
sub
add
add
push
add
mov
jae
or
cmp
add
and
jae
jge
test
mov
add
repnz
aad
add
pop
add
lcall
sbb
add
or
adc
adc
pop
add
iret
xchg
cmpsb
test
out
dec
add
lcall
das
add
xlat
pop
cltd
popf
jbe
out
fnstsw
lret
xchg
lods
pop
mov
push
add
ret
jl
lret
add
jg
add
sbb
icebp
jno
add
add
add
mov
add
mov
testl
aaa
imul
add
cwtl
inc
add
mov
add
add
test
int3
mov
or
add
jae
imul
fcomps
pop
push
add
sub
push
adc
add
dec
add
nop
shl
or
xor
add
or
sahf
insb
add
lods
es
add
repnz
cmpsl
pop
add
cmpsl
aam
add
add
xchg
mov
push
mov
bound
mov
add
add
add
lret
pop
cwtl
lret
xchg
je
sbb
sub
xor
add
mov
push
insl
sbb
testb
or
push
add
aad
mov
sahf
and
add
sbb
int
mov
dec
cmc
inc
aam
add
mov
add
add
mov
ficomps
xor
adcb
add
inc
add
cmp
add
xchg
insl
inc
popl
jl
sub
rol
hlt
or
xchg
sbb
jp
test
add
xor
cld
in
gs
mov
dec
add
xchg
lcall
outsl
sub
jle
add
roll
dec
in
xor
aaa
cmp
sbb
cmpsb
adc
cmp
aaa
xchg
add
add
lock
hlt
mov
adc
add
pop
add
xorl
lcall
mov
js
jo
jne
ljmp
subb
call
rcpps
mov
and
es
or
lods
lret
dec
or
outsl
jae
iret
ret
push
add
lds
js
or
test
mov
add
ja
icebp
sub
roll
sub
sub
xchg
leave
cmc
pop
mov
iret
mov
jg
lcall
mov
add
cli
mov
pop
rolb
add
das
and
add
pop
jmp
dec
add
inc
add
add
fsubr
js
enter
in
movnti
jb
and
add
add
pusha
add
push
add
add
sbb
loope
add
add
add
add
add
inc
fs
add
add
pop
add
jle
pop
add
add
arpl
int
adc
std
jne
ljmp
sbb
add
faddl
test
mov
ja
or
push
add
cltd
sbb
out
sbb
fadds
and
cmpsb
inc
add
int3
xorl
add
loope
xchg
pop
add
pop
add
sbb
outsb
add
das
add
nop
add
mov
dec
add
sbb
repz
gs
jmp
int
add
add
das
imul
add
jp
insl
adc
xchg
dec
inc
cmp
mov
xchg
cmp
dec
cld
add
mov
jnp
or
outsb
add
mov
fwait
adc
add
mov
mov
fstpl
mov
add
add
push
pop
add
stos
sub
fcmovu
movsb
outsl
fdivrs
add
mov
sub
add
add
data16
jno
xchg
and
outsb
add
push
add
and
roll
daa
or
xchg
mov
add
jp
addr16
and
jns
leave
popl
outsl
add
sbb
xchg
imul
cmp
push
fs
data16
in
add
insb
add
add
add
add
cmp
pop
add
fldl
pop
add
add
ret
inc
fmuls
and
mov
pop
add
add
xchg
mov
add
add
jne
mov
lods
mov
add
negb
lret
test
sbb
inc
mov
test
add
scas
or
dec
add
ss
and
add
es
add
xchg
outsb
add
in
in
mov
jae
xlat
outsl
popa
iret
fistps
mov
push
mov
add
mov
fldenv
insl
jne
str
mov
push
add
in
pop
push
jbe
xor
and
je
adc
add
mov
pop
and
mov
ja
add
cmpsb
popa
push
pop
add
add
jnp
mov
repnz
adc
add
sub
jo
inc
sub
stos
imul
pop
add
jne
addl
push
add
push
add
call
jnp
fsubrl
iret
dec
add
lods
xor
sub
leave
dec
add
xchg
cmp
dec
add
xchg
adc
mov
add
or
inc
push
shll
adc
add
outsl
scas
adc
add
xor
add
push
add
lods
int
data16
pop
add
pop
xchg
jge
add
sbb
pop
jae
idivl
pop
add
popf
mov
cmp
negb
add
jno
mov
insb
add
imul
test
cld
sub
inc
or
add
stc
push
arpl
xor
and
add
mov
add
and
enter
inc
pop
add
scas
mov
mov
add
and
add
into
mov
sbb
xchg
cmp
lods
scas
into
nop
jb
jns
sbb
lret
xchg
sub
sbb
and
add
loop
sbb
xchg
mov
loope
add
push
push
add
icebp
add
dec
sub
ret
jp
cmc
jge
push
add
pop
cmp
jmp
xchg
sub
fld1
and
add
dec
fisubrs
xor
add
pop
add
push
add
add
cmpsl
add
add
add
cwtl
rol
add
add
dec
xchg
mov
add
and
scas
arpl
movsl
cmpb
cli
fldl
xchg
lret
mov
arpl
int3
xor
add
lret
mov
into
ror
lods
nop
popf
cmpsb
test
cmp
mov
scas
mov
add
and
dec
lret
mov
add
add
jg
js
test
add
push
add
imul
mov
jmp
imul
mov
push
add
mov
arpl
test
or
loop
pusha
add
inc
add
cwtl
adc
addr16
jmp
gs
add
div
out
cmpsl
or
insb
add
add
mov
incl
or
decb
add
in
inc
add
fisubrl
add
std
stos
push
icebp
sbbb
add
adc
add
add
into
imul
cmp
fucomp
jmp
clc
pop
and
push
lret
int3
cmp
mov
add
add
xlat
outsb
add
dec
add
xchg
pop
adc
or
add
add
fbstp
cmp
xlat
and
add
arpl
adc
fsubs
add
add
xor
rorb
inc
add
cmp
and
add
jnp
add
push
out
pop
add
mov
cmpsl
movsb
cltd
adc
daa
test
add
add
cmpsb
add
mov
mov
add
icebp
rcrb
loopne
add
fildll
inc
add
add
ljmp
push
add
sub
cmp
pop
aas
js
add
pusha
add
test
add
and
add
add
xor
add
pop
add
sti
xchg
adc
add
add
add
add
faddl
push
add
xchg
sbbb
jno
xor
add
jle
pop
movsl
mov
sub
push
add
scas
cwtl
xchg
inc
sar
enter
adc
or
mov
sbb
mov
fwait
je
mov
shrb
in
subl
lock
into
jae
ljmp
add
adc
add
add
add
mov
das
jbe
add
cmc
pop
or
into
mov
sti
orl
add
xor
add
dec
push
jno
add
cmp
mov
add
cmc
add
mov
add
xchg
enter
add
jle
int
add
add
test
add
add
fs
dec
add
in
jnp
nop
xor
enter
adc
loopne
mov
pop
add
push
sbb
xchg
inc
add
xor
add
lahf
pop
incl
xor
addl
and
pop
add
sti
push
add
imul
flds
dec
and
push
pop
fmul
inc
add
add
add
rorl
xchg
pop
sbb
push
sbb
imul
or
mov
lds
mov
ja
shl
mov
adcl
dec
add
movsb
sub
mov
jge
push
add
add
subb
add
bound
jne
mov
iret
data16
mov
add
add
out
and
mov
add
add
popl
pushl
xor
mov
add
mov
adc
lret
xor
lods
push
out
daa
sti
add
and
add
or
rorb
fcmovu
movsl
mov
add
insl
add
popf
add
fcompl
or
add
and
sub
mov
in
xor
call
jns
cmp
add
add
sbb
push
faddl
and
aad
jnp
add
mov
sarl
icebp
push
add
add
sarl
sarb
push
add
add
mov
js
jae
xchg
add
add
rclb
fld
sbbb
das
adc
add
out
jno
mov
add
add
jnp
stos
test
or
jno
add
add
test
jmp
sti
ret
lcall
lret
add
add
add
cmp
dec
je
lock
add
scas
sbb
repz
add
push
add
push
add
lods
ret
cmp
scas
mov
mov
jmp
clc
int
push
add
jns
mov
out
fwait
mov
push
add
cltd
adc
add
dec
jmp
add
jb
jmp
xor
dec
add
push
inc
mov
and
xchg
xlat
mov
add
add
push
iret
into
dec
add
mov
or
clc
xor
add
mov
lret
shlb
in
add
add
ljmp
xor
add
lds
outsb
add
add
sbb
push
add
and
lock
and
cld
jl
popa
xor
pop
push
dec
add
add
add
add
testb
jne
lahf
add
mov
mov
mov
fcmove
push
add
xlat
add
add
pop
add
and
add
add
push
add
xchg
call
sbb
jle
sub
fadds
adc
sub
jmp
add
jnp
and
add
stos
test
imul
xorl
add
add
into
pop
pop
add
add
data16
ss
add
sbb
add
sahf
mov
xorl
fidivl
outsl
mov
add
add
lock
pop
inc
add
add
pop
add
ljmp
add
enter
mov
and
and
sub
pop
add
add
mov
je
stc
test
jnp
jno
lret
gs
lret
out
aad
add
test
cmpsb
add
sub
xchg
push
shll
hlt
add
add
push
add
add
add
loope
cmp
mov
sub
fwait
inc
icebp
add
add
sub
push
xchg
add
aas
adc
jge
sbb
icebp
pop
or
jae
adc
add
push
add
ljmp
and
add
sub
pop
pop
or
dec
add
add
cmpsl
mov
fsubr
mov
mov
clc
rcrl
xor
add
xlat
jb
mov
inc
add
fcmovu
jle
adc
jne
add
push
pop
jo
fwait
aaa
xor
adc
out
sahf
fsubs
sub
mov
mov
imul
mov
aaa
xchg
add
add
add
push
add
faddl
gs
mov
add
mov
dec
add
dec
add
add
xlat
sbb
cli
dec
add
repz
xor
fldcw
jbe
and
cmp
jecxz
or
in
sub
sub
mov
inc
add
testl
mov
xor
adc
add
frstor
and
add
add
add
add
mov
add
test
addb
test
test
mov
inc
add
lea
fxtract
adc
add
push
or
mov
fidivrl
into
fisttpll
add
stos
mov
jge
jne
add
cmc
sub
mov
jne
add
insb
add
mov
jb
addr16
aaa
add
sbb
adc
add
add
lds
add
rol
dec
test
push
test
inc
insl
imul
testb
das
ja
push
out
test
jg
iret
xlat
lock
xor
add
outsl
add
enter
add
cmp
sbb
cmpsb
add
mov
aad
add
scas
add
fsubl
add
add
xchg
pop
sbb
xchg
addl
shlb
ljmp
adc
aaa
jbe
xor
jo
pop
jnp
test
dec
xor
add
js
ss
add
dec
scas
mov
loopne
xchg
cmpsl
lods
jnp
insl
lods
leave
jle
adc
pop
add
sbb
add
xchg
rcrl
sbb
dec
add
scas
aas
nop
cwtl
jb
loop
mov
add
push
add
mov
add
sahf
xor
popf
or
lret
test
push
aad
inc
adc
dec
add
push
add
mov
sbb
addr16
test
nop
mov
loope
mov
add
mov
scas
into
push
add
in
dec
add
insl
xchg
inc
add
clc
sub
ljmp
repnz
ja
fadds
pop
repz
and
cmc
and
add
das
cmp
imul
popl
cmp
xchg
fcoml
insl
or
add
xlat
loopne
in
fidivrs
mov
add
mov
mov
stos
sbb
cmp
add
add
jecxz
rorl
sbb
add
add
xchg
xchg
mov
cmp
mov
adc
clc
add
mov
mov
add
popf
add
mov
mov
xchg
int
hlt
in
adc
add
movzwl
cld
aad
leave
xchg
jmp
mov
sbb
add
add
add
push
mov
jnp
sub
arpl
cmp
add
fistpl
push
add
sub
jno
inc
add
movsl
fwait
mov
mov
mov
adc
imul
xchg
std
inc
fwait
push
pop
push
add
sbb
jns
add
stos
icebp
jmp
ljmp
sub
dec
into
add
add
aas
and
add
movsl
adc
add
xchg
scas
sbb
jmp
test
cmp
xor
add
mov
jns
ret
mov
loope
jmp
mov
fdivs
adc
add
add
pop
mov
add
add
add
mov
stos
cmpsb
jecxz
ret
jnp
daa
adc
outsb
add
popf
push
add
faddl
cld
add
adc
andb
stc
add
fiadds
movsl
hlt
mov
cmp
aas
push
add
jno
cmp
xchg
sub
add
mov
shrb
movl
mov
testl
mov
out
stc
test
leave
js
shr
jmp
push
xchg
push
add
mov
and
add
lock
iret
ror
sub
adc
popf
and
push
dec
add
cmp
xlat
and
add
add
dec
in
jmp
dec
mov
add
jo
cwtl
or
inc
fcmove
adc
add
add
aas
insl
mov
push
add
add
sub
mov
stc
pusha
add
out
add
add
jns
add
adc
add
xlat
mov
mov
push
add
jp
test
and
or
push
push
jbe
cmc
jecxz
pop
add
sub
xlat
mov
add
add
dec
add
jb
enter
faddl
add
or
dec
add
add
mov
lcall
cwtl
add
pop
add
add
mov
or
add
mov
add
xor
push
dec
add
icebp
mov
sbb
pusha
add
sbb
add
or
add
fsubl
add
xchg
divl
fs
or
bound
adc
add
xchg
add
add
and
jle
repnz
fmull
dec
add
xchg
add
lods
add
mov
test
add
adc
add
ja
cmp
xchg
data16
add
addr16
pop
add
add
mov
sub
jmp
mov
inc
adc
loop
aas
call
xor
adcb
jns
cmpsb
xchg
jo
push
int
clc
add
dec
add
add
movl
add
mov
ret
adc
inc
adc
and
dec
jb
insb
add
movsb
lea
mov
add
pop
add
add
aas
cld
xchg
xchg
pop
mov
xor
add
movsl
inc
add
jo
fstpl
add
cmpsl
mov
xchg
mov
int3
sbb
jge
mov
and
testl
frstor
jo
sub
iret
in
fcomi
xchg
and
adc
add
in
ljmp
arpl
mov
add
cmc
fs
stc
mov
outsb
add
insb
add
and
add
add
xor
add
iret
add
add
add
mov
push
add
into
pop
mov
ja
mov
cmpsb
cld
inc
add
add
sbb
cwtl
dec
add
cld
add
add
push
add
test
xchg
add
popf
add
test
add
add
gs
add
movsl
jae
add
test
push
daa
jp
xchg
mov
mov
jg
shl
mov
cltd
lcall
cmp
inc
fidivs
mov
rol
push
ljmp
cmp
data16
push
add
rolb
xor
imul
repnz
add
add
add
xchg
inc
add
cmp
add
call
add
out
add
add
and
add
clc
in
lcall
leave
dec
stos
addl
add
iret
add
dec
add
push
add
add
fisttpl
fiaddl
jbe
pushl
data16
add
stos
mov
add
xor
test
or
mov
je
sbb
addb
add
pop
xor
add
or
sub
dec
and
clc
out
movsl
out
les
add
push
add
stos
add
movsl
or
jmp
add
push
cmpsl
xchg
lock
cmc
lahf
pushf
jl
rcll
scas
popa
fwait
lahf
out
push
add
cmp
mov
mov
pop
add
add
xchg
mov
jns
lret
repz
aaa
cmp
jno
add
push
negb
addr16
push
add
mov
push
add
or
inc
add
adc
add
xchg
add
popa
sbb
pop
dec
add
shl
shrb
add
cld
pusha
add
scas
jae
in
std
ljmp
push
add
add
test
and
add
add
cwtl
adcb
into
leave
xchg
mov
ret
stc
pop
add
cli
ja
icebp
sbbb
push
arpl
pushf
xchg
adc
push
or
pushf
xchg
xor
add
cmp
dec
add
add
add
faddl
xor
pushf
insb
add
lea
fdivl
iret
xorb
mov
stc
sub
pop
int
nop
add
add
in
add
add
out
add
aas
lock
dec
xor
nop
out
inc
stos
pop
add
addr16
subb
mov
pop
xchg
es
jmp
fwait
jb
scas
mov
add
push
add
add
mov
or
jl
mov
outsl
cmp
fiaddl
add
add
mov
push
add
sub
dec
add
inc
add
into
xchg
cmp
cwtl
mov
arpl
or
xor
add
mov
pop
add
ja
add
data16
mov
arpl
add
fisttpll
jg
pop
sbbl
or
out
inc
add
add
stos
sbb
push
outsl
and
add
fildll
add
hlt
sbb
cmp
xchg
ret
addr16
lds
pop
push
add
add
aaa
add
mov
and
cmp
adc
jge
mov
nop
push
jno
adc
mov
push
imul
jecxz
lock
aad
inc
add
add
and
add
push
add
rolb
aad
adc
add
lods
push
add
mov
subb
inc
shr
movsl
sti
clc
movsb
lret
jne
imul
add
jecxz
add
test
fmuls
insl
inc
xor
jmp
xor
push
pop
cmp
cmp
sbb
push
or
rclb
sub
mov
add
aam
add
fcomi
mov
mov
sbb
push
add
fnsave
movsb
add
add
cmpsl
add
jo
data16
dec
add
mov
out
inc
bound
jle
insl
dec
add
add
repnz
sub
pop
add
add
lcall
out
rolb
out
ficoms
repz
aam
nop
out
mov
add
movsb
in
and
jnp
inc
add
add
add
pop
movl
mov
mov
cmp
movsb
add
mov
lock
add
add
jmp
and
bound
inc
adc
lcall
add
stc
mov
rolb
aad
push
inc
jns
pusha
add
sub
cmpsl
pop
add
and
jmp
mov
add
loop
push
add
in
add
pop
and
js
jnp
sub
push
mov
add
sbb
push
add
add
add
mov
jno
sbb
inc
add
mov
dec
add
out
lret
stos
int
aam
faddl
inc
xor
add
add
data16
inc
add
add
pop
add
push
mov
add
cmp
inc
add
test
sbb
dec
add
imul
jnp
jbe
push
insb
add
add
out
pop
ret
add
add
push
ja
add
loope
test
loope
add
add
movsb
xchg
jno
add
add
or
lock
add
push
sub
push
cld
adc
add
add
inc
shlb
add
dec
jp
xchg
jp
dec
out
into
test
test
xchg
jb
adc
out
mov
add
cmpsl
mov
add
inc
subb
mov
adc
add
cmp
add
repnz
and
add
fisttpl
mov
lret
stos
pop
cwtl
dec
add
out
sub
push
xchg
xchg
inc
add
or
add
add
popa
add
xchg
inc
add
test
sti
xlat
dec
rorb
mov
into
jb
lock
or
xor
xchg
popf
into
sbb
inc
jno
sbb
sbb
popa
mov
pop
add
push
add
add
jb
sbbb
add
les
mov
cwtl
data16
pop
pushl
sub
mov
add
inc
aaa
add
xchg
lea
inc
add
lods
rcrb
xor
add
mov
leave
lcall
adc
add
sub
add
add
ljmp
add
lcall
add
add
jne
aas
pusha
add
cmc
popf
js
mov
add
jge
rcrl
add
in
jmp
push
add
mov
push
add
lcall
add
cmp
in
fwait
gs
dec
add
add
pop
dec
add
pop
jecxz
and
and
add
sti
add
pop
or
add
inc
add
add
push
lods
cmpsl
push
add
mov
arpl
pop
sbb
xorl
add
mov
sub
add
add
sub
add
in
fwait
ret
jl
xchg
negl
call
pop
xlat
add
fbstp
add
or
fnsave
lock
inc
add
sti
ret
adc
scas
hlt
mov
lret
mov
add
push
add
add
sbb
fiaddl
setge
inc
add
xor
lods
loop
insb
add
inc
dec
add
add
add
jae
add
dec
add
roll
add
add
cs
sarb
addl
and
add
xor
xchg
sub
xchg
push
add
inc
add
cmc
add
pop
lods
add
sub
xor
outsb
add
inc
add
xchg
add
add
pusha
add
sub
data16
and
add
mov
add
mov
aaa
arpl
cs
mov
addb
add
jecxz
mov
pop
add
hlt
sub
add
add
add
in
add
and
mov
add
sbb
add
lods
add
movsb
add
add
out
jnp
sbb
ss
add
push
add
add
mulps
or
fstps
add
fistpl
push
add
sahf
or
cmpsl
loopne
add
jp
ljmp
add
pop
and
jmp
imul
or
mov
cmpsl
filds
pusha
add
mov
clc
in
ja
lods
mov
push
inc
int3
jns
adc
add
mov
add
or
sbb
add
mov
mov
add
mov
flds
shll
push
and
jo
rcrl
add
xor
call
scas
jecxz
inc
out
add
adc
add
lock
jge
mov
push
add
xor
jmp
cmp
and
insl
pop
add
test
outsl
jo
sub
inc
testl
jmp
cli
push
jg
mov
mov
adcb
add
lock
stos
sub
jl
repnz
sbb
inc
test
dec
movb
add
mov
mov
add
add
imul
add
pop
add
cmp
into
mov
pop
add
gs
pop
ljmp
out
mov
add
mov
add
inc
push
insb
add
mov
xchg
mov
add
push
add
add
jl
xchg
cwtl
mov
push
add
es
add
stos
add
cli
and
add
mov
cmpsb
in
mov
cmc
mov
incb
clc
mov
mov
fs
cmp
push
stos
in
add
fimull
add
push
sarb
sub
add
add
add
lcall
pusha
add
movups
add
inc
ret
jmp
or
rcr
fstpl
mull
xchg
or
ss
add
or
bound
ret
cmp
add
add
add
sbb
mov
add
push
pop
int
add
inc
add
add
mov
test
fstl
mov
xlat
inc
or
cmpsb
push
add
loopne
inc
stos
jns
pop
add
ss
add
add
addl
call
orb
dec
push
add
cmp
adc
add
add
mov
and
add
mov
cmp
add
aaa
push
add
movsl
mov
fldl
stos
mov
sti
ja
add
hlt
insl
jo
dec
adcb
push
add
add
dec
leave
inc
imul
insb
add
add
push
add
movsb
add
inc
sbb
sti
clc
cmpsl
cltd
mov
add
add
xchg
and
xor
dec
imul
loopne
or
js
fmuls
jno
xor
add
xchg
xor
movsb
sub
inc
push
add
mov
in
lods
fisubs
add
sbb
push
add
icebp
mov
mov
and
add
adc
add
mov
sti
add
push
add
push
add
lret
rorb
scas
out
mov
cmpl
add
cmpl
int3
mov
jmp
add
add
jle
idivb
xor
inc
add
mov
popa
dec
add
sub
add
clc
add
jge
mov
call
add
jae
mov
mov
add
sbb
negb
add
in
decb
jbe
aas
xor
add
icebp
add
add
add
call
inc
add
js
mov
cmpsb
int3
hlt
add
add
adc
fs
pop
js
outsb
add
rcll
add
add
push
in
jecxz
shll
mov
lret
xchg
mov
add
inc
add
cmp
push
mov
add
add
add
push
in
or
repz
sub
in
outsb
add
cmpsl
pushf
into
or
aas
movsl
or
sbb
push
int
pop
dec
add
pop
rorb
lcall
dec
xchg
inc
add
mov
test
add
and
add
add
and
fwait
and
add
loopne
add
bound
fcompl
dec
add
inc
and
rolb
mov
add
add
or
daa
out
add
add
xchg
add
jp
add
data16
pop
add
xchg
aam
xchg
push
add
mov
mov
jl
loop
bound
fidivrl
add
sahf
pop
add
xor
add
jns
xchg
add
add
fstps
cmc
jp
pop
xlat
add
incl
jmp
shrb
sbb
xchg
loope
add
mov
icebp
lret
and
mov
popl
ljmp
lcall
add
mov
cmp
arpl
cwtl
repz
jae
add
sbb
add
push
fbld
push
fadds
out
mov
aad
cli
lahf
add
dec
add
add
add
add
jno
xchg
shr
sbb
fsubs
pop
add
add
jge
and
add
sub
mov
lds
add
add
mov
cmpsl
rorl
push
sub
inc
xlat
test
ja
add
cmp
shl
lods
or
xchg
ljmp
add
adc
add
jle
bound
sub
push
leave
adc
enter
mov
add
pop
add
addr16
cmp
jp
dec
add
mov
add
mov
add
daa
add
pop
roll
adc
add
pop
addb
popf
sbb
sbb
outsl
fidivrl
add
add
cmp
cmp
movsl
inc
jl
mov
add
clc
rcl
testl
aaa
filds
pop
add
or
std
mov
pop
add
xchg
outsl
push
add
add
pop
inc
add
add
add
add
add
addb
jecxz
add
enter
leave
push
add
add
pusha
add
push
and
push
inc
lea
add
fiaddl
mov
leave
add
sbb
add
lods
inc
add
add
into
and
ret
in
cwtl
dec
clc
outsb
add
andb
add
lret
daa
repz
dec
lds
shl
clc
xchg
out
mov
fcoml
ret
add
add
jo
sbb
cli
add
add
add
sub
jno
mov
pusha
add
xor
add
push
hlt
xor
add
cmp
dec
add
into
jae
or
jecxz
or
imull
or
cmp
popa
push
jecxz
insl
mov
add
mov
scas
add
dec
add
outsl
call
mov
xchg
jno
dec
mov
adc
addb
inc
loope
push
aam
imul
fwait
pop
int3
pop
push
add
jge
mov
je
add
jmp
out
jg
xchg
jecxz
imul
int
mov
mov
in
movsb
mov
mov
add
xor
add
roll
jp
lock
mov
jo
pop
addb
push
add
scas
add
mov
push
dec
add
loop
lods
add
add
aaa
arpl
ljmp
add
test
xor
inc
add
add
out
scas
out
push
add
xlat
iret
ret
pop
hlt
out
rorb
add
sbb
xor
add
mov
add
add
sub
sbb
sbb
add
call
addb
les
pop
add
rcll
add
adc
xor
in
jbe
lods
out
in
push
add
xchg
add
shl
dec
add
add
in
add
add
pop
xchg
mov
pop
add
push
rcl
mov
or
inc
add
sbb
test
jnp
movsb
pop
add
sbb
add
lret
add
push
xchg
pop
push
sub
add
jns
andb
adc
add
adc
int
rclb
and
add
loop
outsl
xchg
inc
or
push
jae
int
inc
add
lea
add
add
and
add
add
cmp
sbb
xor
add
push
add
add
sbb
xchg
fucomi
jle
xor
add
sbb
add
lcall
add
mov
and
clc
mov
adc
add
daa
in
add
shlb
mov
add
or
push
pop
out
and
add
and
or
mov
add
mov
pop
aaa
adc
mov
fs
dec
add
fwait
popa
loope
test
dec
add
je
mov
inc
add
add
add
add
mov
sti
pop
lock
add
nop
add
in
xor
add
add
cltd
add
add
or
add
mov
jns
loopne
sub
sbb
stos
clc
sub
pop
stos
js
loope
cld
add
push
sub
loop
inc
add
add
icebp
outsl
jb
stos
nop
scas
out
fcmovne
xchg
mov
pop
add
faddl
xor
add
enter
xchg
dec
int
xor
push
sbb
push
add
xchg
inc
adc
add
push
add
pop
cmpsb
add
add
mov
push
ja
cld
mov
scas
jl
cmp
lret
and
add
add
scas
mov
mov
add
add
pop
aaa
push
add
mov
add
mov
in
fisttps
and
xchg
pop
cmpsb
jge
sbb
inc
or
lret
lock
xchg
fcomip
lds
add
hlt
mov
and
add
xor
jo
xchg
xchg
cmp
inc
add
jle
sbb
data16
add
loope
inc
push
add
xor
popf
test
xor
add
mov
ds
repz
nop
push
xchg
ret
mov
insl
ss
add
add
xor
add
dec
add
cs
lret
movsl
push
scas
int
add
add
mov
gs
xchg
ss
add
inc
add
push
add
push
add
out
jbe
mov
push
add
mov
sub
sbb
add
jmp
add
ffreep
mov
inc
add
inc
add
pop
lret
and
add
sub
lock
dec
inc
add
mov
push
shl
pop
xchg
roll
stos
sub
mov
xchg
and
lcall
in
stos
push
jne
mov
xchg
add
add
test
sub
int3
push
add
sub
cmp
or
test
add
add
mov
dec
add
lock
int3
push
add
adc
add
pop
add
add
cmp
xor
add
add
add
stos
mov
negb
lods
add
add
dec
add
pop
add
pop
ja
repnz
movsl
mov
stos
push
add
add
cmpsl
add
jo
repnz
mov
stos
mov
cmp
test
cmp
add
xchg
sbb
cmp
add
stos
in
or
ret
cmp
xor
pop
push
add
mov
dec
leave
mov
stos
sbb
push
add
xor
push
add
fldenv
push
add
mov
gs
add
data16
repz
add
int3
inc
inc
add
in
fidivs
jb
out
add
sahf
add
hlt
nop
lock
sbb
cwtl
dec
add
icebp
inc
add
insb
add
jne
mov
cli
std
dec
add
or
add
repnz
push
mov
jne
dec
add
add
add
add
out
add
add
add
add
cwtl
mov
test
int
jo
mov
aad
push
add
arpl
add
movsl
sti
mov
add
lret
ja
fcomp
les
add
mov
push
add
scas
adc
jo
negl
add
pextrw
xor
add
popa
fdivrl
mov
add
adc
add
out
xor
add
add
pop
pop
inc
add
mov
or
mov
icebp
mov
add
mov
add
add
int
orl
add
add
out
push
cmpsl
in
fnstenv
outsl
sub
dec
jns
cwtl
xor
jg
inc
add
adc
add
jno
jge
lods
in
add
pop
add
xchg
xchg
cmpl
in
cmpsb
mov
fcmovu
xor
addb
aad
add
fldl
lcall
add
add
jecxz
add
cmp
add
jg
imul
and
add
add
lret
stos
xchg
popa
inc
add
xor
iret
es
add
mov
xchg
mov
rcr
mov
aad
scas
sbb
mov
insb
add
clc
add
pushf
in
lret
add
add
shlb
inc
add
aaa
mov
lods
out
sbb
mov
add
rolb
add
cld
cmpsb
cld
add
add
and
add
aam
add
add
decl
mov
dec
add
das
add
add
lods
jle
mov
loop
cld
sub
nop
outsl
mov
add
add
pop
sub
ror
add
add
insb
add
push
aad
popf
and
out
addr16
sbb
ret
mov
add
add
jl
rcrb
and
add
sar
jp
push
loop
fs
add
imul
add
sub
fsubl
lcall
cmpsb
adcb
ja
fcmovnu
xchg
pushf
push
inc
add
pop
add
xchg
or
dec
inc
add
and
bound
es
add
std
mov
mov
push
mov
fadds
dec
add
sbb
cmp
add
jno
push
mov
and
add
arpl
cmpsl
dec
add
pop
inc
add
popa
add
xchg
mov
add
add
jne
sbb
data16
adc
add
pushf
add
movsb
lahf
mov
add
fistl
add
jne
shl
add
add
stos
add
nop
imul
add
inc
add
adc
add
cld
xchg
add
rorb
adc
add
call
add
xor
add
pop
add
push
pop
pop
add
in
lcall
pop
add
xchg
add
add
jb
pop
add
push
or
lea
add
add
inc
add
roll
jno
pop
xchg
mov
and
add
mov
divl
test
hlt
loop
add
movb
dec
fimuls
fsts
add
test
pop
add
add
adc
in
addb
stc
pop
adc
pop
cmpb
stc
lcall
pusha
add
add
push
add
mov
cmp
xchg
or
jl
add
add
mov
and
add
str
xchg
fnstenv
inc
xchg
cmp
dec
add
fs
sub
inc
add
cmpsl
add
pop
addb
test
inc
jp
lods
jb
daa
addb
add
mov
mov
add
mov
dec
add
add
in
add
andb
scas
arpl
inc
fbld
add
xor
add
adc
mov
jae
int
mov
arpl
mov
jl
fidivrl
push
add
jmp
mov
data16
js
popf
out
xchg
pop
add
mov
jmp
xchg
repz
add
lea
mov
or
iret
push
movsl
cmp
pusha
add
push
add
popf
push
add
fcompl
adc
nop
mov
jne
add
add
xor
add
add
add
inc
add
mov
lahf
push
add
rolb
idiv
pop
add
cmp
jle
mov
mov
adc
repz
and
add
add
aaa
aaa
add
sub
mov
bound
inc
add
pop
add
mov
into
stc
and
dec
add
add
jbe
sub
repz
test
add
dec
cwtl
mov
add
js
mov
add
jge
add
or
mov
dec
add
int
jmp
lods
add
nop
add
sub
shrb
add
add
mov
jns
sarb
add
fsubs
lods
js
inc
jnp
rolb
push
add
std
in
mov
xchg
movl
add
cs
addr16
imul
sub
movsl
lret
fimull
outsb
add
add
jo
addr16
add
es
add
add
sub
or
aad
add
and
add
bnd
call
add
push
outsl
xor
lock
sahf
mov
subl
jge
sti
cmp
mov
mov
data16
out
add
adc
add
cmp
inc
cmp
out
or
add
out
cltd
cmp
lcall
xor
add
movsb
and
loopne
add
jmp
add
fwait
insb
add
jmp
add
mov
dec
add
mov
inc
add
push
pop
shll
add
ljmp
add
aad
xlat
adc
jge
lods
add
testl
mov
aad
or
ljmp
sahf
mov
add
mov
or
cmp
sti
jae
add
lock
add
add
lock
add
imul
xchg
push
jns
push
add
xlat
mov
stc
add
inc
lahf
ds
mov
iret
cltd
push
add
cmpsl
loope
jp
sub
push
add
in
add
sub
add
add
sti
add
dec
lret
add
add
sbb
decl
rolb
pop
add
mov
add
push
xlat
sub
sarb
mov
xchg
xchg
add
mov
shll
add
add
mov
subl
addr16
mov
shlb
mov
xor
add
out
cmp
and
add
inc
xchg
sbb
pop
add
inc
cmp
stc
test
movsb
rcl
sbb
or
add
add
mov
add
gs
or
sbb
pop
movb
out
bound
lret
add
dec
jle
test
jge
pop
jb
jge
mov
in
cmp
les
mov
add
daa
push
add
mov
add
stos
jle
pop
add
push
mov
loope
add
fildll
pop
out
add
stc
xchg
pop
mov
clc
ljmp
add
stos
repz
mov
add
jno
add
dec
mov
enter
outsl
add
cmpsb
dec
mov
add
fwait
stc
ljmp
out
clc
jl
mov
jnp
out
loope
or
add
inc
add
add
jb
ret
dec
pusha
add
add
jno
mov
dec
xchg
cmc
in
add
pop
mov
or
pop
add
scas
add
rcl
pushf
pop
outsl
popf
stc
xor
pop
dec
add
popl
or
cld
aas
inc
add
xor
add
push
out
stc
or
insl
sbb
mov
lret
xor
add
add
add
add
outsl
cmpsb
dec
add
cmc
add
dec
out
push
add
sbb
xor
add
lret
jp
and
add
int3
cmpb
push
daa
add
or
cmp
add
add
and
add
fwait
mov
and
add
test
repnz
clc
cltd
pop
outsb
add
sub
iret
cmp
push
add
jle
test
fcmovne
call
xor
add
cmp
in
les
mov
fstl
sbb
add
jo
pop
add
mov
cs
adc
xchg
add
lods
add
fwait
rorl
lods
xorb
xchg
mov
rcr
into
xchg
lods
jo
cltd
stos
sub
sbb
sbb
xchg
xor
add
lret
pop
jb
stos
push
jmp
add
aas
add
fstpl
cltd
pop
shlb
add
or
loope
xchg
mov
out
inc
add
cmp
inc
sbb
andb
sbb
mov
stc
cmp
movsl
and
push
add
add
nop
push
add
adc
xchg
inc
add
mov
add
or
push
add
add
xorb
add
add
add
add
jne
add
push
push
add
add
and
add
cmp
pop
imul
add
and
add
in
rclb
sub
adc
pop
inc
add
or
add
add
int
stc
in
sti
xchg
sahf
outsl
out
sub
cmpsb
add
add
add
bound
in
mov
push
mov
xchg
pop
stc
xor
add
daa
add
add
dec
pusha
add
mov
fwait
dec
add
pop
sbb
fsubl
dec
loope
add
ret
add
cli
clc
aam
cmpsl
inc
stos
stc
mov
test
xor
add
fwait
jecxz
adc
add
add
add
hlt
sahf
sub
ret
add
push
add
cli
add
add
lea
pop
add
push
add
aaa
pop
add
jl
push
add
add
out
sub
fildl
lcall
xchg
add
test
cli
pushf
push
add
fwait
in
pop
pop
cmp
dec
idivl
xor
add
inc
adc
fmulp
cmpl
aam
enter
jnp
push
out
stc
popa
jecxz
clc
out
sbb
push
add
push
push
inc
add
inc
add
dec
add
push
add
add
inc
adc
bound
in
jl
fidivl
les
push
add
cmp
add
in
sub
faddl
flds
sub
dec
and
in
cmp
jg
mov
jmp
sub
add
jmp
dec
clc
xchg
xchg
push
mov
push
movb
cld
fwait
pop
add
add
out
rol
add
add
movsl
test
push
add
xorl
cmpsl
mov
add
rolb
xchg
mov
xlat
jp
add
pop
add
mov
add
add
add
pop
add
lahf
add
add
add
lds
add
pop
add
fs
out
mov
orl
pop
sbb
mov
out
loopne
mov
incl
sub
pop
pop
adc
add
cmc
add
mov
cmp
out
lock
add
das
add
push
icebp
lcall
add
stos
mov
adc
add
lret
lea
aad
lods
stc
and
add
fadd
sub
imul
add
jo
sti
dec
jecxz
jb
push
add
jg
std
hlt
push
add
add
into
imul
adc
incb
or
cwtl
loop
add
ret
add
in
or
nop
int
add
add
gs
add
daa
mov
jb
int3
dec
xor
add
xchg
add
add
inc
add
fadds
inc
push
add
fiaddl
push
lods
dec
add
inc
add
add
in
sti
loope
add
add
imul
adc
add
scas
clc
out
mov
or
add
cmp
inc
jae
lret
aad
xchg
fstps
int3
cmp
or
jb
fs
jmp
dec
cmp
aaa
add
dec
add
lret
bound
es
add
xchg
add
sarl
mull
push
push
add
add
xor
cs
test
mov
push
add
mov
lret
in
fisttpll
add
aas
push
add
sub
loope
cmp
pop
mov
popa
and
add
dec
add
fdivr
xor
add
lods
lock
std
xor
add
adc
add
sub
add
mov
sub
lret
pop
add
push
add
imul
push
add
cltd
or
addr16
push
add
stc
mov
in
loop
add
js
test
pop
mov
mov
mov
stos
nop
mov
add
cmp
jp
push
mov
add
into
call
add
jb
js
add
add
add
add
inc
js
lods
movsb
nop
cmp
pushf
cli
in
cwtl
les
adc
add
fbstp
fstps
add
add
mov
add
inc
test
add
add
icebp
add
mov
cmpb
add
push
add
add
pushf
outsl
push
add
stc
dec
es
add
mov
dec
add
mov
fwait
mulb
loopne
dec
mov
movsb
inc
add
cmp
stc
mov
push
mov
mov
add
add
je
adc
add
xlat
leave
jmp
dec
add
mov
add
dec
add
cltd
mov
add
lret
arpl
push
add
mov
cmp
sub
add
rcll
add
and
popa
jle
add
sub
add
add
sbb
xor
add
insl
shlb
add
clc
pop
inc
mov
jle
dec
add
pop
add
pop
and
add
add
push
add
out
adc
add
sub
and
es
int3
sbb
pop
outsl
add
add
add
mov
add
add
add
and
add
add
movsl
stos
and
add
xchg
add
pop
mov
fisttps
int3
add
inc
dec
add
xchg
fadds
xchg
es
add
or
js
rcrl
daa
or
jae
lock
out
lret
lods
lret
sbbb
inc
add
loopne
jge
add
mov
jmp
lods
cmp
jmp
inc
adc
add
iret
sbb
jecxz
lods
add
mov
rolb
js
pusha
add
sarl
insl
js
sub
xorb
add
aaa
insb
add
and
in
add
dec
enter
sbb
mov
mov
push
add
add
add
sub
xchg
sub
mov
jge
add
fcomps
movsb
negb
add
pop
push
cmp
out
jne
cmpsl
in
dec
movsl
cmp
mov
add
lcall
dec
mov
lds
or
pop
add
sub
mov
sub
jecxz
mov
and
inc
das
lds
out
cmp
mov
xchg
call
add
int
dec
mov
add
cli
xchg
ret
loop
subl
mov
add
mov
add
dec
adc
add
add
cmp
add
clc
iret
mov
add
xor
add
js
pop
fldl
aad
add
add
add
adcb
ljmp
addr16
sarb
push
mov
insl
jl
cmp
push
jae
dec
call
add
adc
adc
add
sbb
dec
add
addb
xchg
add
mov
sbb
and
insb
add
add
push
bnd
xchg
icebp
mov
dec
add
lahf
js
loopne
ljmp
loop
sbb
outsb
add
push
add
int3
pop
add
enter
lret
adc
mov
stos
int3
fistl
sub
pop
add
adc
add
xor
cmp
xor
add
icebp
mov
add
adc
mov
add
push
dec
add
add
testb
mov
cmp
cmpsb
mov
inc
mov
pop
bound
lret
sub
aas
imul
add
gs
add
pop
add
fildl
and
add
jo
into
shll
add
push
mov
adc
add
sub
xor
add
add
cmp
xchg
imul
adc
scas
add
add
in
hlt
dec
je
jae
imul
add
into
push
add
je
pop
add
push
fwait
outsl
pushf
pop
lods
stos
into
idivb
shl
inc
add
mov
add
xlat
aaa
nop
add
cltd
and
mov
add
and
add
pop
jle
pop
dec
add
enter
cwtl
test
xor
add
dec
les
add
data16
mov
popa
fwait
pause
stos
jecxz
mov
mov
push
jge
shrb
orl
in
mov
jns
js
push
add
add
sub
push
sbb
and
aas
insl
jns
adc
mov
insl
cmpsl
cmpb
add
shr
add
add
pop
add
jae
inc
add
fwait
in
pop
xor
add
add
jl
jbe
mov
and
add
test
jmp
pop
add
add
mov
xlat
repz
and
pop
inc
add
mov
std
out
mov
and
add
adc
add
add
scas
push
mov
xchg
sbb
xor
add
pop
add
sbb
xchg
ljmp
clc
jmp
stc
add
sub
add
push
xchg
xchg
xchg
inc
popa
or
and
add
loope
imul
nop
shr
push
add
ds
push
add
sub
lcall
lods
add
add
push
add
mov
add
sbb
das
fmulp
inc
add
sub
add
add
mov
add
leave
add
shr
add
add
add
roll
xchg
std
inc
add
pop
mov
or
icebp
add
add
add
jecxz
inc
add
mov
into
div
pusha
add
mov
mov
dec
add
jl
jb
loopne
mov
cmp
or
add
out
add
sbb
addb
inc
daa
popl
dec
loope
in
mov
in
les
dec
add
or
inc
add
add
add
sti
sub
in
popa
mov
jnp
fnstsw
add
sub
cmp
mov
add
je
xor
add
pop
add
fisubs
imul
mov
fisubs
add
popa
add
add
inc
or
pop
add
rorl
or
xchg
into
adc
fldl
pop
lcall
mov
in
jne
mov
scas
popf
xchg
sarl
or
pop
add
dec
add
add
add
dec
cmp
addr16
cmp
jecxz
mov
xchg
roll
jns
add
rcr
mov
push
add
jne
push
add
mov
push
add
and
ret
popf
xor
cli
out
sti
adc
add
fisubl
push
mov
xchg
aam
push
add
pusha
add
add
push
add
arpl
in
adc
add
movl
add
stos
in
daa
jns
inc
add
and
adc
add
rcr
cmp
inc
add
mov
add
jnp
sbb
sub
mov
or
es
bound
pop
add
pushf
add
jp
mov
pusha
add
mov
jns
mov
in
test
xlat
add
jmp
pop
and
add
jns
add
test
idiv
test
movsb
cmp
loop
in
jg
add
jmp
std
lods
push
add
push
add
ss
add
dec
addr16
push
sbb
stc
ss
add
jl
pop
add
jmp
add
dec
xorl
add
mov
adc
xor
add
sti
dec
push
sub
cmp
or
xchg
inc
sbb
dec
xor
mov
or
fisubrl
daa
loop
mov
mov
add
incl
hlt
sbb
add
xor
add
roll
add
arpl
pop
add
add
mov
pop
add
sbb
add
add
add
mov
test
addl
adc
dec
add
add
add
adc
add
add
cmp
aam
add
sub
movsb
fwait
dec
add
daa
add
mov
add
sub
add
mov
jge
add
lods
imul
fmuls
iret
add
add
jle
push
mov
push
jno
pop
test
mov
cmp
nop
mov
jle
call
add
add
add
jnp
sub
mov
clc
push
add
add
mov
jne
addb
aas
mov
pop
fildl
adc
add
negb
cmpsl
jae
add
fcompp
sti
push
lret
sub
inc
add
in
aad
lods
mov
sub
in
movsl
add
imul
gs
add
sbb
add
dec
pop
add
cmp
jnp
int3
pushf
inc
add
outsl
xor
imul
lahf
xchg
dec
inc
add
add
ljmp
aam
add
add
aam
sbb
and
add
dec
add
add
inc
dec
add
mov
add
add
push
add
add
nop
nop
das
jecxz
pop
cli
mov
inc
int3
and
add
mov
mov
repnz
add
cmp
mov
rcll
add
mov
popf
add
pop
add
add
div
mov
or
xor
add
inc
add
and
loop
add
inc
add
addl
add
mov
add
jl
add
or
push
movsl
iret
pop
sub
or
mov
push
cmp
outsl
inc
add
xor
add
mov
arpl
add
add
and
add
add
add
inc
xchg
nop
mov
jne
incl
ficompl
add
add
add
mov
mov
dec
je
inc
lcall
add
sub
lret
jmp
imulb
pop
lret
mov
add
repz
push
push
push
xor
pop
xchg
mov
adc
add
xchg
shlb
pop
add
add
out
lret
inc
add
ret
and
addb
cmpsb
add
ja
add
roll
das
daa
scas
add
jecxz
fwait
ds
sbb
add
push
add
fsubl
push
or
clc
call
add
sbb
add
int
jl
insl
push
or
sahf
stc
cmp
xchg
pop
add
cwtl
repz
notl
jg
out
in
loope
add
add
js
jg
jmp
fimuls
aaa
nop
add
aaa
add
shrl
clc
inc
sbb
lods
jle
inc
inc
js
add
ja
orl
add
aam
ret
add
adc
pushf
add
add
dec
add
xchg
lret
lcall
popf
gs
hlt
push
add
cmp
loope
pusha
add
mov
cwtl
add
cli
std
out
arpl
stos
add
call
add
mov
out
sub
jo
mov
add
ss
xorl
mov
aaa
roll
outsl
sahf
dec
jno
add
dec
add
stos
mov
mov
xchg
xor
add
jp
sbb
je
aam
or
fnstsw
jns
add
xlat
fisttpl
shrl
cmp
pop
daa
adc
sbb
xchg
movsl
aas
pop
mov
addb
jo
arpl
add
push
or
mov
add
faddl
test
mov
adc
add
mov
data16
add
cmpb
sbb
add
int
add
es
add
cmpsl
aad
cmpsl
add
add
movsb
cli
or
add
in
add
jp
sbb
lods
lret
jge
int3
add
dec
pop
add
orb
xchg
sbb
push
sub
inc
jno
fcoms
add
enter
xchg
inc
jmp
les
xor
add
add
add
add
rcrl
mov
add
add
je
xchg
popa
leave
dec
add
popa
mov
add
test
mov
add
dec
xor
dec
add
std
xchg
mov
outsl
push
add
mov
es
imul
add
sub
dec
add
add
into
dec
dec
add
cmc
dec
add
test
repnz
js
fwait
and
fwait
sub
stc
in
or
fimull
jmp
clc
mov
mov
sub
clc
loopne
or
std
add
push
add
sbb
push
test
enter
add
ret
shlb
arpl
push
add
push
add
add
mov
dec
xchg
sub
lds
add
stos
ss
mov
subb
rcrb
and
shlb
inc
add
aaa
add
jge
or
push
add
sbb
add
push
add
movl
fcoms
jg
out
add
jbe
je
inc
cmpsl
xor
movsb
pusha
add
jno
sahf
pop
or
push
xor
lock
add
mov
cmpsl
dec
add
or
add
jnp
sahf
add
and
clts
mov
aas
inc
add
inc
add
push
add
inc
add
push
add
ds
adc
mov
pop
add
add
add
push
add
dec
mov
cmpsl
aas
mov
stos
in
mov
add
dec
jno
xor
test
sbb
jp
dec
xor
add
add
hlt
call
xor
push
or
hlt
mov
cmp
push
add
push
negb
push
add
adc
add
add
pop
add
xor
add
fidivl
pop
add
lcall
add
shll
add
xorb
add
dec
add
shl
xchg
add
and
shll
pop
add
add
stos
test
xchg
xor
add
add
fs
push
or
sbb
mov
lds
cmpsb
movsl
jle
dec
add
lret
mov
pop
add
clc
ret
push
mov
add
push
ret
mov
add
or
adc
inc
add
jge
pusha
add
add
addl
arpl
int3
mov
push
cmp
sub
ja
lods
pop
fadds
js
mov
pop
add
cmpsb
xchg
sbb
je
push
add
pop
add
repz
add
ljmp
add
push
sbb
sub
and
add
sub
xorl
add
test
add
add
fsubrs
xor
add
add
add
add
add
test
lea
mov
push
add
inc
add
mov
lds
lret
add
iret
into
jne
xlat
je
jge
fistps
push
add
mov
and
add
add
and
add
ret
in
xor
stc
outsb
add
adc
movsl
mov
or
fidivl
mov
insl
fnsave
jl
jae
add
icebp
adc
add
xor
popf
xchg
push
add
fistl
push
jg
adc
sbb
adc
or
jge
cmpsl
or
xchg
cmp
cwtl
dec
add
adc
jle
data16
sub
mov
stos
mov
in
daa
lds
xor
add
jae
sbb
js
mov
jmp
in
push
inc
add
stos
xchg
scas
outsl
mov
mov
sbb
sbb
add
add
mov
add
dec
add
pop
repnz
pop
adc
int
ljmp
das
pop
mov
jbe
fmull
add
mov
daa
out
popa
scas
hlt
or
rdmsr
sahf
add
test
sbb
jmp
push
popf
or
sti
jbe
add
loopne
into
mov
add
mov
push
data16
incb
add
pop
add
push
movsb
bound
sbb
add
daa
nop
add
add
or
inc
enter
stos
sbb
stc
lret
push
add
imul
jbe
aam
lods
cmp
add
into
enter
add
xchg
push
add
inc
xchg
jmp
mov
add
mov
jae
xchg
aas
xchg
and
add
mov
add
mov
add
add
push
add
push
add
add
add
addl
dec
add
mov
dec
add
out
add
xchg
dec
add
mov
filds
jb
sub
pop
dec
xor
mov
lods
sub
mov
mov
shlb
pop
pop
pop
stc
addr16
jo
das
imul
sti
outsb
add
fiaddl
adc
add
mov
fsubrs
fucomi
pop
jge
mov
shl
push
add
add
mov
jno
add
ljmp
je
jle
not
sub
int3
aam
add
movsl
add
cmp
mov
jnp
dec
adc
in
out
adc
addr16
add
pop
jae
pop
add
push
add
outsb
add
lahf
push
add
les
add
divl
add
cmp
faddl
adc
fdivrs
and
in
pop
add
add
mov
xchg
sub
pop
sub
insb
add
movl
les
cmp
or
ja
sub
fwait
pop
add
or
jno
add
mov
mov
inc
add
test
add
jl
mov
add
mov
sub
xor
mov
add
ds
jno
mov
outsl
adc
add
cmp
mov
pop
mov
jle
add
mov
mov
add
sub
add
shlb
add
aas
add
cmpsl
lods
repnz
inc
add
add
inc
add
test
mov
add
test
stos
push
in
bound
in
iret
popa
adc
sub
test
mov
add
in
ja
lods
add
jecxz
dec
add
add
xchg
or
jle
and
sub
add
add
add
aam
inc
add
jae
mov
add
add
aas
xchg
leave
into
fisubl
enter
mov
add
scas
mov
pop
add
mov
in
pop
or
test
add
cld
js
push
int3
xchg
cmc
pop
add
data16
insb
add
test
mov
add
sub
mov
pushf
add
fmuls
add
add
and
incl
jnp
add
mov
add
ja
add
add
jns
adcl
cmc
movsl
xchg
test
das
cld
mov
add
cwtl
test
bound
adc
add
int
xor
fmul
in
mov
jl
xchg
pop
add
cmp
filds
pop
add
jecxz
lock
add
add
mov
addb
jnp
xchg
loop
in
or
push
add
jae
hlt
mov
das
push
xchg
stc
add
add
scas
lds
push
add
sbb
call
imul
mov
or
push
sub
jno
movsb
add
ror
mov
lock
cmp
mov
add
cmp
cmpsl
out
cli
push
add
popl
sub
inc
xchg
jo
int
leave
out
mov
mov
or
rorb
add
or
in
andb
add
insb
add
jge
mov
dec
add
fldl
ljmp
mov
shlb
cmp
idivb
add
pop
add
cmpb
lcall
cli
test
adc
mov
roll
sbb
add
dec
cmc
scas
aas
xchg
mov
xchg
cmpl
add
mov
cmp
adc
es
add
mov
bound
movsl
addl
add
jb
pop
add
or
and
add
in
lret
add
sbb
sub
add
out
add
and
sub
pop
add
ret
in
xor
sbb
jnp
iret
lahf
jo
push
decb
rep
scas
arpl
add
cmpsl
cmp
mov
add
add
and
and
push
stc
add
int3
mov
or
es
adc
js
out
outsb
add
push
add
pushf
cmp
into
out
aaa
add
in
add
xlat
sub
mov
mov
leave
sbb
dec
out
out
add
xor
add
out
cmpb
add
les
pusha
add
lret
add
add
add
sub
pop
arpl
lret
add
adc
add
mov
repnz
adc
cmp
add
add
add
xor
sbb
mov
xchg
add
das
rcrl
add
mov
fstpt
pushf
pop
imul
mov
add
scas
loope
arpl
xchg
mov
xlat
push
add
loope
cmpsb
add
mov
in
add
dec
add
dec
add
add
jge
pop
add
into
sarb
sbb
jo
xchg
out
into
or
pop
add
scas
mov
fcmovne
jle
bound
shlb
inc
mov
jg
add
mov
cmpsb
add
rolb
scas
sub
outsb
add
add
add
sub
inc
add
push
add
add
add
jmp
push
jp
mov
add
or
dec
add
movsl
add
js
adc
xor
jbe
mov
cmp
sbb
fdivrp
mov
add
ja
imul
incl
addr16
push
add
add
xor
str
aam
fiaddl
cmpsl
add
sub
add
adc
xchg
mov
sbb
add
add
jg
enter
roll
add
int3
stos
test
xorl
es
add
sbb
fcmovu
outsl
xchg
fdivrp
daa
popl
jns
outsl
jns
insb
add
orl
add
add
add
add
fcoms
sarl
adc
add
mov
rcl
popa
jmp
add
sarb
add
xlat
dec
leave
pop
add
cltd
add
scas
mov
outsb
add
add
sahf
pop
add
jno
add
add
rolb
cmp
ret
jno
ljmp
shlb
fsubrp
out
cmp
mov
add
add
dec
add
inc
add
cmp
mov
add
add
shll
cmpsb
add
add
xor
nop
inc
in
movsb
mov
dec
mov
xchg
mov
aam
scas
sbb
dec
add
push
add
ret
mov
add
das
add
mov
pop
push
add
or
xchg
and
push
xchg
les
jle
dec
add
std
pop
add
fcoml
out
jae
add
into
out
sub
jnp
movsb
mov
push
aas
pop
add
pinsrw
das
sbb
out
repz
add
add
dec
shll
enter
jbe
xchg
iret
loop
adc
mov
sub
cmp
jae
push
and
add
cmc
add
xchg
xor
mov
cmp
in
outsb
add
insb
add
add
adc
fucom
adc
add
dec
pop
out
add
mov
add
adc
add
loop
rolb
outsl
jl
or
loop
sbb
mov
jmp
out
add
mov
sbb
sbb
pushf
push
add
repnz
sbb
call
cld
and
je
mov
inc
add
pop
push
add
test
add
jmp
sbb
jg
sahf
ret
testb
adc
mov
push
add
int3
add
add
sti
jns
push
stos
iret
push
bound
outsb
add
add
push
add
fsubs
push
dec
nop
outsb
add
push
inc
add
icebp
mov
add
sub
js
in
jae
dec
mov
or
imul
xor
popf
ret
lahf
pusha
add
ja
mov
inc
lods
fbstp
or
pop
add
mov
mov
mov
daa
loopne
inc
add
sbb
add
fadds
inc
data16
add
push
add
or
mov
stc
xchg
in
mov
mov
mov
sbbb
mov
add
add
mov
scas
insb
add
add
add
roll
js
andb
add
add
enter
lea
add
ret
sbb
push
loope
mov
add
add
inc
add
add
add
jno
sti
mov
sub
push
add
flds
mov
add
or
jo
xor
add
roll
nop
mov
nop
fsts
jl
lods
ret
xor
add
add
pop
add
out
cmp
lods
pop
mov
sbb
mov
lahf
jmp
add
cmpsl
sub
sbb
push
add
jg
std
xor
lods
movsb
pop
mov
sub
les
addr16
add
sbb
or
sub
jbe
jl
xor
addb
repz
jp
sbb
fcoms
xchg
cmp
push
jmp
add
push
cld
and
mov
ljmp
add
add
dec
add
cs
mov
adc
cmp
ds
push
add
cmp
cmpsl
or
add
push
add
shr
adcb
shl
jecxz
outsl
jns
cmc
rolb
add
push
add
cmpsl
nop
xor
ss
into
mov
cmp
pop
add
roll
push
jg
int
or
arpl
jae
sbb
xchg
add
mov
stos
sahf
or
adc
add
or
mov
add
add
push
lods
in
out
pop
jns
add
incl
imull
out
mov
das
ret
add
add
je
cmpsb
xor
add
inc
out
or
inc
add
jns
mov
stos
push
rolb
jnp
mov
jno
add
jbe
repnz
test
add
cmp
mov
pop
add
add
sub
push
add
inc
add
add
add
mov
add
arpl
ret
pop
movb
paddsw
lret
rcr
pop
stos
pushf
mov
add
add
cs
jae
push
add
mov
cmp
or
dec
add
sbb
popa
js
fsubrs
add
add
imul
mov
jne
push
pop
add
js
iret
inc
shlb
add
lahf
rolb
jg
cmpsb
jno
bound
stc
in
mov
scas
ljmp
sbb
add
les
imul
add
and
add
add
mov
std
std
and
push
daa
add
jo
cli
push
jnp
or
add
je
in
xor
adc
pop
add
sarl
add
pop
add
mov
jmp
psubusb
in
pop
repnz
repnz
shll
add
mov
add
or
lcall
sub
jl
push
roll
push
add
adc
add
lahf
add
imul
add
add
cltd
and
inc
cmpsb
sti
sub
test
add
popf
arpl
xor
rclb
fwait
lods
add
jnp
sbb
adc
outsl
test
xchg
xchg
inc
add
dec
aam
call
mov
mov
pop
cwtl
jp
out
jb
sbb
sbb
insl
in
addr16
add
add
mov
daa
rolb
orl
dec
add
add
jecxz
inc
add
arpl
out
add
call
div
ljmp
stos
mov
mov
int
loopne
fbld
loope
popf
add
das
pusha
add
je
xchg
dec
add
cmc
insb
add
leave
add
add
