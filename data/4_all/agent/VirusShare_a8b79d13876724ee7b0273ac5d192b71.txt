mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
add
jmp
add
cmp
add
add
add
add
add
or
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
sub
pop
rorb
shlb
dec
lahf
mov
enter
lea
addb
enter
dec
cmp
dec
xchg
inc
dec
xor
out
subl
adc
pushf
mov
inc
in
dec
fistpl
and
int3
movsb
pop
imull
fdivrl
pop
fnstenv
ja
mov
jne
rcr
and
push
cli
out
sub
sahf
movsl
out
adc
mov
aam
insb
and
xor
in
loop
ja
or
sti
out
or
push
je
repnz
mov
cwtl
push
sub
mov
mov
and
mov
inc
push
fwait
jp
inc
popa
inc
push
xor
mov
nop
mov
mov
sbb
jbe
stc
rorb
test
enter
enter
mov
and
push
cwtl
dec
fmul
shlw
xlat
in
dec
gs
xchg
jmp
add
das
fchs
push
cltd
and
xor
or
pop
pop
push
andb
xchg
jl
int
lds
dec
ljmp
cmp
cs
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
.byte
popa
and
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
sub
pop
rorb
shlb
dec
lahf
mov
enter
lea
addb
enter
dec
cmp
dec
xchg
inc
dec
xor
out
subl
adc
pushf
mov
inc
in
dec
fistpl
and
int3
movsb
pop
imull
fdivrl
pop
fnstenv
ja
mov
jne
rcr
and
push
cli
out
sub
sahf
movsl
out
adc
mov
aam
insb
and
xor
in
loop
ja
or
sti
out
or
push
je
repnz
mov
cwtl
push
sub
mov
mov
and
mov
inc
push
fwait
jp
inc
popa
inc
push
xor
mov
nop
mov
mov
sbb
jbe
stc
rorb
test
enter
enter
mov
and
push
cwtl
dec
fmul
shlw
xlat
in
dec
gs
xchg
jmp
add
das
fchs
push
cltd
and
xor
or
pop
pop
push
andb
xchg
jl
int
lds
dec
ljmp
cmp
cs
das
and
pop
ror
xchg
int
dec
mov
mov
mov
imul
sub
xlat
pop
push
push
cmp
cmpsl
rclb
adc
mov
daa
lcall
shll
jae
lret
pop
in
in
inc
daa
adc
hlt
shrl
ljmp
sub
pop
repnz
ds
rclb
or
add
lock
jmp
pushf
or
dec
js
push
pusha
xor
push
repnz
pop
xchg
out
lcall
jae
iret
cmp
test
ret
cmp
mov
jl
movsl
xlat
cmp
adcb
icebp
out
cmp
and
sbb
ret
push
mov
pop
inc
add
ja
das
jp
lahf
pop
popf
call
unpckhps
mov
pop
test
inc
add
mov
push
lds
sub
pop
dec
xchg
mov
adcl
ljmp
xchg
xchg
in
cmc
in
gs
dec
push
clc
inc
jb
add
dec
ret
mov
jg
push
out
stos
or
stos
insb
dec
cmp
mov
insl
add
test
or
inc
lock
outsl
addr16
jnp
cmpsl
adc
xor
gs
fsubrl
loop
xor
out
jo
movsl
out
mov
cmp
in
sbb
lock
shlb
mov
sbb
loop
pop
sbb
scas
mov
push
aam
in
jecxz
loope
aas
jb
shll
pop
push
in
dec
push
adc
dec
adc
mov
call
mov
xchg
loopne
pop
dec
add
int3
jmp
jns
scas
je
cli
arpl
jg
repnz
adc
call
adc
adc
mov
jge
aam
dec
mov
stos
pop
or
or
mov
nop
rcll
mov
xadd
in
rcrl
mov
or
jmp
cli
aam
push
fmull
insl
clc
in
dec
loope
cmp
pop
xor
mov
inc
das
inc
in
aam
es
inc
in
pop
inc
pop
or
ja
pop
inc
cmp
mov
push
rcr
addr16
xchg
push
pop
mov
das
add
daa
push
fstpt
in
cmpsb
stos
sub
xchg
inc
out
loopne
cmp
sbb
ja
mov
and
scas
imull
ss
int3
push
adc
push
mov
sub
xchg
aam
shll
dec
rcl
push
and
into
mov
push
mov
and
iret
push
nop
push
push
repz
dec
adc
push
movsb
test
inc
pop
repnz
pop
cmp
xchg
pusha
xor
sbb
ljmp
repnz
or
xchg
bnd
and
data16
test
cmp
xchg
mov
leave
xchg
bound
jnp
jnp
adc
pop
iret
cmp
bound
pop
lret
xchg
inc
out
add
xchg
shrl
jp
movsb
pop
out
ss
outsb
andl
jbe
jge
loop
cs
shrd
outsb
dec
add
test
pop
test
mov
mov
and
nop
cmpb
cmc
xor
adc
test
iret
mov
fdivrs
stos
lretw
repz
inc
clc
neg
lds
or
adc
or
icebp
lahf
jecxz
adc
cmpl
push
fucomp
xor
call
add
jbe
stos
sub
xorl
adc
mov
stc
lret
mov
and
mov
push
call
lods
dec
adc
pushf
movb
pusha
mov
out
out
pop
jp
stos
xor
enter
add
mov
mov
dec
pop
shll
ds
add
mov
shrl
movsb
fisubs
cwtl
sub
or
add
lods
cmp
and
fwait
shl
add
jnp
inc
loop
sbb
mov
cs
pop
sbb
push
jge
inc
sbb
pop
cmp
frstor
xchg
pop
adc
loopne
insl
mov
adc
movl
mov
jmp
add
mov
call
xor
jg
arpl
outsl
mov
fincstp
ds
add
push
sbb
jne
sub
and
shlb
mov
pop
mov
nop
pop
cmp
outsl
mov
xlat
rcrl
cs
ret
dec
push
mov
sub
jp
cmp
adc
out
insb
xlat
adc
pop
mov
lea
lea
pop
inc
out
mov
sub
adc
mov
adcb
aaa
and
xor
jg
pop
stos
sub
pushl
mov
sub
test
push
imul
dec
mov
xor
pop
mov
lret
push
pop
lock
adc
shlb
movntq
out
into
stos
xor
pop
mov
jmp
int
es
xor
dec
ret
jp
pop
inc
or
rep
or
test
insl
insl
adcb
xor
push
sub
dec
push
cmp
inc
cli
out
push
inc
lea
pop
outsl
rcrl
int3
mov
shl
jae
sbb
dec
dec
aas
mov
jnp
or
push
sti
push
filds
jmp
xor
xchg
ja
inc
add
int3
mov
lea
arpl
ss
aaa
fisttpll
pop
add
fiaddl
repnz
lret
xchg
mov
mov
hlt
inc
push
mov
cmp
fs
js
ret
inc
rcrb
dec
ds
lds
lods
aas
push
in
add
pop
pop
xchg
jb
insb
stc
in
add
and
ljmp
and
rcl
cmp
movsl
jns
cmp
jl
aad
and
sarb
push
aas
sub
out
stos
or
shrl
rclb
movsl
movsl
xchg
icebp
in
aaa
jo
lds
stos
aaa
scas
scas
add
push
insl
push
call
sbb
push
mov
jne
loopne
fistpll
sbb
test
jne
mov
jb
cmc
adc
dec
in
inc
and
mov
jl
stc
aas
adcl
aad
push
arpl
lea
scas
mov
add
jno
jb
into
mov
xchg
xchg
into
lret
js
pop
inc
inc
xorl
mov
test
das
or
xor
popa
mov
dec
inc
or
pop
in
test
xchg
icebp
xor
mov
jnp
repnz
filds
repnz
xor
dec
fisubrl
cmpsb
rcll
inc
out
cmp
inc
add
cmp
xor
add
dec
lcall
fld
adc
cmpsb
pop
cmc
fwait
pop
test
and
loop
stos
and
in
mov
dec
test
rol
add
lods
out
cs
cwtl
loop
inc
and
mov
mov
pop
js
ficoms
inc
cmp
lds
dec
nop
iret
cmpsl
enter
roll
mov
cmpsb
lods
push
shlb
mov
pop
xor
subb
lods
xchg
jecxz
mov
dec
lcall
nop
push
cmp
pop
adc
int
in
jle
xchg
shrb
mov
dec
jnp
pop
adc
cmp
pop
adc
fsts
push
std
jp
int3
insb
mov
mov
jbe
xchg
jne
lret
push
cld
movsb
jmp
sbb
gs
test
adc
mov
push
or
movsb
out
pop
or
mov
xchg
ret
inc
xlat
mov
outsl
or
push
cmp
adc
stos
or
mov
push
sbb
mov
xchg
pop
mov
into
inc
xchg
je
sub
xchg
mov
ljmp
xchg
sarb
xor
fs
inc
sub
or
out
dec
aas
hlt
xor
nop
in
adc
fwait
lret
fldl
jb
aam
ret
rep
out
pop
lahf
cli
ret
or
rol
sub
aaa
add
loopne
mulb
jmp
cmp
in
ds
hlt
lcall
mov
or
mov
iret
sub
and
pop
adc
mov
insb
xorb
outsb
lret
fsubrs
inc
xor
jmp
sti
insb
push
adc
or
nop
pop
mov
xor
inc
fiaddl
mov
leave
cmp
adc
xchg
mov
enter
pop
out
xchg
mov
push
movl
xchg
scas
pop
outsb
dec
sbb
xlat
mov
and
mov
int3
fstps
pop
jmp
test
lods
cltd
cltd
fidivs
sub
test
push
push
dec
clc
sti
lea
and
pop
dec
test
orb
sub
neg
test
dec
mov
mov
mov
mov
pop
mov
push
push
icebp
orb
fmull
mov
or
adc
cmp
or
and
mov
aas
and
lea
outsb
aad
lahf
fiaddl
js
or
inc
inc
and
call
les
stos
xor
mov
inc
orb
and
ret
repz
ljmp
in
insb
xor
xor
jno
pushf
sub
hlt
adc
and
sbb
add
and
xor
adc
in
in
out
popf
fisttps
sbbl
insb
fldpi
ds
mov
pop
sbb
xchg
mov
sti
lods
sbb
pop
imul
jo
adc
loope
out
lods
jo
aas
test
mov
mov
iret
sbb
sbb
leave
gs
inc
idivb
mov
sub
or
mov
sub
aad
xchg
mov
add
mov
xchg
jae
mov
sahf
push
jbe
dec
adc
adc
icebp
fiadds
popa
jmp
outsl
pop
hlt
mov
cmp
add
sub
test
add
jge
mov
xor
mov
cmpl
cmp
ljmp
push
cli
adc
push
pop
xor
xchg
je
inc
jle
add
mov
faddl
scas
popf
mov
data16
xchg
repnz
sahf
inc
adc
adc
jmp
mov
dec
pop
inc
or
adc
aaa
mov
sahf
jmp
dec
std
es
stc
aaa
lret
inc
adc
adcb
xor
out
dec
sahf
mov
cltd
stc
outsb
stos
dec
xor
and
testb
int3
xchg
das
xchg
dec
mov
movl
xchg
fcom
cmp
repnz
test
xadd
inc
mov
xor
lock
or
in
push
lcall
movsl
jne
iret
aas
xor
stos
inc
sbb
dec
scas
push
nop
mov
stos
insb
flds
subb
out
aaa
shll
sub
fdivs
ss
int3
or
xchg
xorl
cmpsl
fldcw
adc
mov
or
lock
mov
fimuls
inc
arpl
cmpsl
or
sbb
ret
rolb
dec
cmovae
aad
or
mov
nop
inc
sub
xchg
jecxz
imul
mov
dec
insl
and
adc
inc
dec
pop
lret
insl
leave
mov
or
pop
sub
test
mov
test
pushf
or
sahf
and
pop
pusha
shll
push
dec
lret
shl
ficompl
mov
mov
add
add
push
jp
jle
mov
fsubr
scas
sbb
out
add
xlat
or
mov
mov
clc
scas
fidivl
jo
dec
stos
jecxz
stos
jae
ja
lcall
sub
cmp
adc
cld
push
data16
push
pop
fs
mov
push
test
sub
movsb
aad
mov
jbe
stos
pop
push
dec
mov
leave
xchg
cmc
and
mov
sbb
adc
pushf
jecxz
mov
mov
jecxz
cmpb
push
fimull
add
in
rcrl
dec
xchg
mov
and
cmp
push
jae
or
lcall
or
rorb
add
aam
stos
es
jle
sbb
int3
pop
push
push
les
lods
and
fcomps
andl
adc
mov
and
lods
gs
mov
mov
gs
sbb
push
int
sbb
out
les
ljmp
mov
aam
inc
mov
loopne
add
xor
dec
lahf
ja
sbb
test
add
js
movsb
jne
and
inc
and
mov
lahf
dec
adc
idivl
mov
push
adc
push
cmp
insb
hlt
popf
aam
leave
hlt
pop
push
es
pop
jecxz
in
mov
ss
movsl
xor
and
popa
idivb
jmp
xlat
test
add
mov
xchg
xchg
lret
fwait
pushf
and
push
data16
dec
pop
sbb
rcrb
jl
dec
data16
pusha
mov
pop
mov
inc
int3
cld
push
stos
mov
std
mov
inc
or
xchg
aam
or
dec
lret
decb
std
mov
rol
add
fistl
hlt
sub
repz
dec
fbld
jecxz
gs
loopne
test
je
lret
imul
int
add
xchg
push
inc
add
cmp
push
enter
jno
cmpsl
lcall
jns
popf
push
push
mov
icebp
xchg
add
into
push
imul
mov
or
push
dec
mov
xor
add
scas
inc
lea
push
pop
dec
mov
stc
popa
das
push
lods
out
aad
scas
jbe
and
or
iret
push
sub
add
fdivp
leave
sarb
dec
stos
adc
ja
lods
das
or
movsb
pop
xchg
das
sub
mov
stos
or
sub
loop
mov
sbb
add
leave
out
pop
push
imul
sub
and
shl
mov
pop
out
cwtl
and
dec
or
cmc
jge
int
data16
adc
inc
inc
pop
mov
xor
scas
xchg
ljmp
pop
jp
jp
cmc
js
movl
fcompl
or
and
outsb
mov
push
mov
jbe
aam
adc
prefetcht0
jmp
push
das
xchg
in
nop
and
in
or
fs
jnp
add
fld
test
cs
test
push
addb
jle
aam
aam
outsb
aaa
mov
fstl
fldl
push
test
loopne
int
mov
mov
hlt
xchg
mov
jmp
ret
add
sub
push
ja
mov
and
jl
jmp
inc
sub
mov
sti
pusha
cmp
sbb
cwtl
ret
jne
outsl
adc
fisttpll
aas
sub
int
push
loop
insb
in
mov
pop
cmpb
lret
sti
std
push
and
mov
cmpl
lock
sbb
mov
imul
lcall
ljmp
add
ret
add
jae
dec
and
arpl
movsb
sbb
shrb
mov
xchg
add
push
add
push
in
out
test
movsb
xchg
adc
xchg
jae
in
or
cwtl
push
dec
mov
je
test
rcl
push
jmp
sub
add
inc
sub
jne
pop
xor
scas
jg
add
sbb
sub
push
cwtl
rorl
xchg
aaa
xor
lcall
push
jns
cmc
cmpsb
into
push
aaa
mov
nop
inc
mov
dec
aaa
xor
pop
stc
cwtl
push
or
test
mov
int
push
dec
xor
fsubrs
shll
out
pushl
mov
daa
aam
loope
ja
and
add
sarb
in
jb
push
aam
nop
cmpb
out
sbb
aam
in
mov
inc
adc
loope
bound
dec
je
js
sub
and
mov
test
pop
mov
adc
outsb
push
mov
fs
loopne
mov
dec
shll
or
clc
inc
pusha
inc
cmpb
inc
xor
cmp
add
pop
push
nop
adc
and
ss
repnz
outsl
shrb
andl
and
xchg
xor
negl
inc
jne
test
add
mov
sub
imul
test
sbb
jmp
xchg
je
xor
cld
divb
fwait
cmp
sbb
mull
mov
push
enter
cmc
dec
mov
and
repnz
js
cmpsl
dec
rol
lock
call
sbb
pop
sbb
hlt
test
imull
les
cs
mov
mov
add
test
pop
ret
or
push
sbb
pop
push
mov
into
add
add
sub
mov
and
ret
pop
cmp
mov
xchg
or
daa
das
repz
lret
outsl
jo
mov
mov
xchg
lea
xor
sub
test
in
and
or
pop
popa
arpl
cmc
je
push
loope
cmp
and
and
fldcw
xlat
cmc
mov
add
es
pop
imul
inc
leave
add
loop
loop
test
bound
cmp
sub
sub
lret
imul
fcmovnu
mov
lret
mov
aaa
xchg
test
out
or
mov
lods
pmullw
dec
mov
movsl
mov
dec
cmp
adc
sub
jae
repz
mov
sbb
sti
xchg
pop
push
mov
jmp
repz
lods
sub
adc
js
shrl
push
out
sub
movsb
decb
cmp
shlb
fiaddl
test
cmpb
cmp
movsb
icebp
mov
mov
stos
psadbw
stos
push
les
xor
shrl
leave
lret
ret
into
ja
sti
test
aad
aad
mov
cwtl
jg
mov
mov
or
mov
mov
pop
xchg
rolb
test
cmpsb
mov
mov
repz
add
scas
jbe
lcall
push
mov
std
popf
das
mov
pop
xchg
mov
icebp
cmpsb
fisubs
push
dec
lods
test
enter
fildl
sti
sbb
js
mov
nop
and
xchg
test
push
jp
pop
cmp
lods
pop
xchg
clc
into
js
mov
mov
and
jg
loope
push
popf
jecxz
addl
js
mov
mov
adc
es
xchg
pop
sbb
insl
push
lds
adc
cld
jmp
adc
ja
sahf
inc
out
lods
jle
xor
in
or
out
loopne
fcomi
mov
cmp
movsl
and
pop
iret
addr16
arpl
imul
mov
inc
lock
dec
dec
and
sub
shlb
pop
xor
outsl
push
cmp
fsts
or
cwtl
mov
xor
or
in
add
adc
sbb
push
lret
lret
or
pop
sub
enter
es
sub
mov
sub
sti
fistl
out
scas
sub
sbb
xor
jp
cmp
shl
push
cmpsl
push
mov
les
mov
xor
push
shr
sbb
lcall
repz
jmp
mov
mov
test
add
dec
pop
push
xchg
mov
cmp
cwtl
ret
add
jae
ss
pop
mov
jp
int3
int
xchg
aaa
mov
inc
inc
mov
test
loope
lcall
jae
inc
pop
dec
and
enter
cmp
xor
ljmp
fistpl
add
cmpsl
add
arpl
ss
test
jne
mov
aas
mov
data16
imul
mov
jecxz
sbb
xor
movsb
fbstp
or
ret
xchg
pop
icebp
lcall
inc
fisubrs
add
mov
push
scas
mov
jno
cmp
cli
lods
cmpsl
mov
xchg
xor
jne
jmp
shr
out
loop
sub
mov
jmp
dec
pop
repz
fstpl
pop
push
mov
push
sti
mov
adc
lods
repz
stos
add
push
or
cmp
inc
sbbl
fdivrs
push
pop
pop
xchg
into
jg
ja
pop
add
inc
inc
jecxz,pt
jp
sahf
sti
popf
movsb
mov
or
sub
enter
mov
std
adc
decl
aam
scas
cwtl
cmp
popf
mov
inc
sbb
inc
insb
ljmp
sbb
lcall
mov
into
stos
addb
pop
add
xor
jmp
push
and
mov
add
mov
ret
ds
aaa
xchg
push
popf
lea
mov
or
add
cmpsl
inc
adc
or
rcl
in
dec
imul
pop
mov
popl
or
pop
shl
fisttpll
pop
xor
sub
icebp
stc
pop
std
xor
lahf
mov
cltd
shld
sti
stos
pop
rorb
ret
pop
mov
psrlq
int
ja
test
test
ja
jne
aad
in
dec
and
test
mov
inc
and
movsb
jae
sbbl
xor
xchg
subl
pop
int
std
aad
cmpsl
adc
mov
cmpsl
sub
es
push
shlb
fimull
stc
jbe
xchg
in
lret
jnp
adc
orl
scas
fwait
add
mov
arpl
push
or
aaa
movl
xchg
les
add
push
imul
lret
mov
inc
mov
xor
and
add
mov
fwait
inc
mov
pop
fadds
in
lods
add
and
xor
lods
push
mov
shrd
add
addr16
push
pop
jb
pop
mov
sub
std
add
dec
cli
or
inc
imul
lcall
bound
movsl
jmp
negb
out
rclb
inc
shrl
or
nop
mov
inc
imul
jns
xor
insb
in
add
fwait
mov
ret
sbb
movsl
jb
jecxz
pop
out
lea
cltd
lds
mov
inc
add
sub
sti
pop
cltd
ret
cs
push
adc
inc
xchg
out
and
mov
fcmovnu
stos
and
pop
inc
inc
lcall
fsubl
dec
xor
add
jnp
rcr
mull
mov
inc
imul
call
fs
or
dec
rcrl
scas
mov
sti
mov
iret
in
jmp
mov
push
ret
adc
sbb
enter
dec
add
inc
bnd
xor
movsl
fstl
insl
push
xchg
fisubl
mov
xor
filds
sub
sub
xchg
sub
lods
nop
ficoml
repz
fdivrl
arpl
xor
lret
mov
fisubl
mov
adcb
and
add
cwtl
div
pop
cmp
push
pop
insl
fimull
mov
xchg
mov
stos
push
fwait
sbb
punpcklbw
mov
dec
andb
hlt
lock
dec
nop
lea
jmp
enter
mov
xchg
or
fwait
mov
aas
insb
pop
inc
cmp
fwait
imul
rol
pop
cmpb
imul
data16
rorb
stos
mov
push
sub
pop
je
cmp
pop
pop
mov
jecxz
sbb
nop
jmp
jg
sub
dec
outsl
xlat
mov
pop
jae
in
pop
or
and
sub
dec
repnz
shrb
ret
sbb
mov
test
lret
or
jl
loope
dec
push
mov
mov
push
sti
mov
rclb
sbb
fadd
cwtl
push
leave
add
add
push
push
movsb
xchg
pop
push
add
int
mov
inc
jmp
sti
mov
in
inc
fbld
lds
sahf
in
push
xchg
jne
lods
mov
push
sub
sbb
dec
pop
or
xchg
lret
jnp
mov
push
add
decb
lds
test
pop
out
inc
js
sbb
idivl
push
mov
stc
jo
loop
push
xchg
pop
xchg
dec
dec
mov
mov
dec
cmp
mov
in
inc
leave
aas
mov
dec
cmpsl
lahf
outsb
or
dec
cltd
and
fsts
or
push
loop
ja
cmp
mov
mov
fimuls
int
jno
jns
sahf
mov
pop
mov
push
imul
push
mov
and
sahf
insl
mov
sysexit
movsb
cmp
jp
sahf
and
pop
or
inc
scas
mov
dec
xor
inc
mov
pop
aas
int
jb
fwait
shll
pop
loope
dec
pop
jmp
lcall
inc
fcomps
or
fcoms
repnz
lret
xchg
push
adc
inc
roll
jge
lahf
sbb
mov
lods
pop
call
into
jg
cli
clc
add
mov
orb
xchg
jp
mov
mov
or
lds
ficompl
or
loope
add
jae
xchg
adc
fnstsw
cmp
and
push
adc
aaa
jmp
loop
leave
pop
subl
leave
jmp
js
or
mov
lahf
xchg
icebp
mov
pop
mov
add
repz
dec
dec
cmc
xchg
mulb
test
dec
stos
call
xchg
shlb
lods
xor
rorl
movsb
sub
in
popf
sub
jno
jno
lds
movsb
sbb
adc
outsb
jge
inc
and
iret
push
pop
push
fwait
jmp
mov
les
xchg
loope
imul
test
lock
gs
fisttps
test
push
sub
out
mov
xchg
lods
sub
inc
pop
push
jl
xchg
rcrl
push
rcl
mov
fwait
dec
dec
push
inc
xchg
pop
stos
add
ss
mov
jmp
jl
int3
mov
fsubs
mov
incb
inc
inc
push
fs
jbe
stc
sub
in
xchg
cltd
dec
insl
adc
addr16
dec
and
test
sub
xor
cld
loop
sub
movsl
sbb
lods
sub
loopne
pop
or
ror
out
ss
sub
or
and
insl
es
imul
sbb
mov
int
fmull
lea
mov
add
fdivr
shrb
fisttps
fcomi
dec
cwtl
sub
stos
push
jb
inc
sbb
xchg
test
cmpsb
mov
icebp
ds
jo
jmp
stos
pop
dec
xor
jbe
jmp
in
mov
push
cmpl
lock
mov
add
jno
fidivl
out
sbb
mov
dec
dec
out
insb
loopne
call
neg
mov
shll
push
push
push
jbe
jmp
xor
cmp
aaa
cmpsb
iret
and
jo
xchg
inc
negb
dec
repnz
mov
and
shlb
aaa
sarb
mov
sub
mov
jo
shrl
bound
xor
mov
test
mov
insb
mov
movsb
mov
add
lea
sbb
mov
shll
jbe
sahf
pop
lods
adc
movups
repz
movsl
mov
mov
das
adcl
outsl
gs
add
mov
rcrl
dec
dec
dec
adcb
insb
lahf
into
inc
sahf
lods
jnp
inc
lods
rorb
push
adc
rcrl
repz
mov
nop
movsl
cmp
sbb
dec
lcall
mov
rorb
push
sub
data16
inc
mov
push
push
jne
cld
push
arpl
dec
stos
jb
sti
ss
rolb
xor
or
sub
mov
pusha
lds
pop
push
lret
cmp
imull
pop
and
sbbb
lfs
pop
cwtl
popa
dec
aam
and
in
xchg
and
cltd
xchg
push
int3
push
cmp
push
stos
stc
sti
push
cs
mov
mov
mov
sub
cmpsl
jge
test
xor
pop
imul
cmpsb
xchg
jecxz
inc
loope
pop
stos
push
pop
xor
jmp
jno
add
es
dec
rolb
int3
cmc
hlt
mov
jp
insb
push
dec
andl
jbe
mov
imul
cltd
decl
xor
sahf
fdivrs
cmp
shll
pop
sub
cmp
pop
xchg
and
jp
aad
and
dec
out
xorl
lock
sti
dec
and
clc
call
sbb
es
xor
mov
pop
out
mov
cmpsb
nop
push
jmp
xchg
test
dec
fidivrs
icebp
das
mov
das
lods
psubb
into
mov
fwait
nop
push
mov
jne
lret
mov
rcll
fisttps
xor
mov
push
fdivl
out
int
adc
dec
jb
sub
jp
js
or
xor
cli
add
inc
pushf
lcall
sbb
lret
rorb
pop
pop
and
insb
sbb
movsb
xchg
dec
mov
push
negb
sarl
std
dec
loop
aas
cs
push
mov
or
mov
jae
xor
stos
ret
rorl
andb
dec
dec
out
jge
int
sbb
inc
clc
add
push
sub
push
sbb
fidivrl
sub
out
sbb
and
es
lret
arpl
mov
mov
xor
aas
mov
inc
push
push
test
jns
or
mov
fcmovb
mov
cmpsb
xchg
fisttpll
push
mov
arpl
in
scas
addr16
ret
push
push
jns
or
jle
in
in
daa
pop
daa
adc
push
xchg
test
out
popa
cld
add
mov
jmp
pop
daa
pop
pop
dec
mov
out
cmp
outsl
mov
jns
fisttpl
mov
in
rcll
jne
mov
ss
add
sub
in
xor
push
into
scas
clc
adc
pop
enter
lods
subl
add
or
gs
out
mov
pop
lret
pop
xlat
xchg
or
xchg
add
push
hlt
and
push
orl
stos
jl
pop
es
jno
shlb
sahf
cmp
shrb
cmp
sub
jecxz
cli
scas
jmp
lret
fidivs
out
addl
fsub
xchg
scas
imul
adc
fs
xchg
add
test
jl
sbb
xlat
push
or
lock
fdivrs
xchg
pop
pop
push
jnp
add
adc
insl
inc
jns
or
mov
add
mov
stos
sbb
test
bnd
dec
jecxz
pusha
loop
pop
push
fs
jb
les
addb
sbb
ficompl
and
xchg
adc
jne
push
mov
push
js
rcrb
arpl
push
ss
data16
aas
mov
outsb
addr16
scas
or
stc
call
xor
popa
push
notb
push
out
cwtl
imul
add
cmpsb
pop
cmp
popf
loop
jne
idivb
aaa
jmp
mov
movsl
lods
pop
xor
cmpl
mov
cltd
in
xor
out
mov
shll
add
test
and
loope
push
mov
xchg
sbb
aas
fucomip
in
aam
bound
nop
and
fisubl
lea
xor
shl
in
lahf
shlb
mov
daa
pusha
push
ffree
int3
aas
sbbl
aas
fsts
mov
mov
push
scas
aas
jnp
test
call
insl
mov
ds
pop
inc
jp
outsl
orl
xchg
xor
and
dec
fwait
out
mov
nop
cmpb
push
test
movsb
jge
adc
jb
sti
es
mov
dec
adc
shlb
pop
rcll
add
fscale
movl
add
popf
aaa
inc
das
ljmp
frstor
sbb
mov
fmuls
mov
ret
cmp
xchg
mov
out
lret
push
jp
fmull
leave
mov
or
test
push
bound
cmpb
xchg
stos
lea
pop
push
push
sbb
in
fs
mov
adc
cmp
cld
inc
movsl
lea
mov
in
and
sub
cmpsl
rorl
out
push
fxch
aam
fs
rcrl
mov
inc
mov
mov
pop
ds
fidivl
scas
imul
or
shl
lahf
out
and
stos
pop
jg
mov
in
push
jno
xchg
inc
and
nop
cmp
jb
pop
movsb
orl
mov
mov
movsb
repz
jl
sub
cmp
insl
scas
movsb
shrb
jmp
mov
xchg
mov
dec
pop
mov
addb
orb
rorb
adc
repnz
jmp
and
sub
inc
jle
xchg
in
movsl
jne
and
les
mov
mov
pop
hlt
loop
mov
add
push
test
fcmove
loope
push
mov
call
mov
xchg
cmc
adc
xor
leave
call
push
pop
push
add
imul
xchg
pop
xchg
fwait
shll
imul
mov
add
std
mov
xor
push
ficompl
inc
addl
add
xor
mov
mov
cwtl
daa
fiaddl
push
xchg
repnz
cmp
lret
push
push
cmpsl
das
push
push
stc
pop
arpl
dec
cmova
mov
nop
push
dec
dec
addr16
pop
int3
outsb
ret
pushf
pop
pusha
stc
test
fs
dec
pushf
fists
test
push
outsl
add
shr
sub
dec
frstor
cmp
xchg
jnp
imul
mov
xchg
out
movsl
fimuls
dec
push
and
lock
adcb
mov
out
jnp
mov
test
xor
or
out
cltd
lret
cmp
cli
pop
stos
int
bound
lret
arpl
out
dec
cmpsb
push
icebp
push
addl
lret
cmp
insb
sbb
push
scas
jns
sbb
cmp
test
sub
xchg
es
push
fmulp
xchg
inc
inc
mov
push
jo
out
dec
icebp
nop
cld
jge
pop
xchg
ret
xchg
push
das
push
adc
addr16
lret
sub
bound
lock
rclb
mov
inc
push
mov
lods
and
movsl
mov
push
sbb
shl
imul
jb
inc
scas
xor
pop
xchg
js
lea
adc
mov
mov
ror
inc
loopne
sarb
sarb
adc
sbb
in
out
enter
mov
mov
mov
sarl
pusha
xor
nop
shlb
bound
mov
mov
inc
ficomps
sub
cmc
sub
js
push
stos
sub
fists
and
jle
test
stc
out
dec
test
aad
xchg
mov
mov
fdiv
std
inc
dec
mov
jne
pop
cmovg
dec
enter
mov
out
jp
imul
mov
mov
cli
xor
into
repnz
out
js
add
mov
xchg
sub
mov
test
adc
in
and
ret
push
lcall
repnz
cmp
or
les
rcll
jbe
cli
mov
sbb
sahf
adc
sbb
inc
test
lcall
inc
push
mov
fsubs
sbb
clc
cld
jge
pop
movsl
xchg
dec
or
outsl
cmpsb
add
xor
inc
in
ljmp
dec
stos
xor
scas
sub
aas
mov
mov
mov
lods
addl
mov
and
les
iret
cwtl
leave
enter
aas
daa
adc
jno
scas
push
mov
cltd
dec
push
push
lret
mov
xor
rol
jnp
aaa
subl
rcrl
mov
push
mov
or
push
pop
adc
pop
imul
fucomi
mov
mov
jo
pop
and
dec
jmp
shrb
xchg
cmp
ljmp
bound
sub
fstps
aam
in
decl
mov
inc
adc
jle
jle
adc
pusha
out
adc
push
insl
leave
jae
xchg
imul
int
push
xchg
mov
push
fstl
pop
fwait
test
inc
sbb
addr16
imul
into
cmp
loop
or
mov
xor
lret
pop
aaa
mov
sbb
and
jp
cmp
xor
mov
jmp
xchg
mov
adc
lds
xchg
mov
aas
add
push
or
mov
and
push
jle,pn
fists
es
add
outsl
mov
xor
sahf
push
pop
or
mov
mov
sbbl
rcll
sbb
insb
and
push
cmpsl
inc
loopne
mull
test
mov
and
rorb
jae
add
push
push
sti
mov
xor
test
pop
mov
gs
inc
xor
clc
xchg
dec
adc
ret
cmpsb
sub
insl
or
sbb
dec
sub
push
lahf
mov
fstl
xchg
lea
pop
push
cmpsb
cs
repnz
add
jle
xlat
leave
add
out
sbb
pop
mov
push
lods
jo
xor
sub
cli
push
lods
dec
cmp
sbb
dec
and
inc
push
aas
adc
aad
xchg
out
daa
and
dec
and
cwtl
and
cs
jg
je
sarl
push
test
sbb
mov
mov
dec
jno
xor
mov
sbb
push
stos
and
fcmovu
sbb
subb
mov
mov
mov
pop
clc
adc
or
push
idiv
mov
in
in
jge
jmp
or
out
dec
loop
xorb
cmc
rolb
fstpt
or
or
clc
xor
cmp
pop
sbb
js
addr16
inc
out
lods
loop
inc
dec
xor
xchg
daa
out
jl
jno
icebp
movsl
shlb
pop
out
add
fisubrl
sub
scas
shll
and
cmpsb
sub
jno
cmp
pop
or
cmp
sti
adc
mov
xchg
sbb
addb
or
cmp
jmp
xor
mov
and
stc
subl
bnd
sbb
sub
dec
lock
fs
cmp
adc
cs
je
mov
aad
xchg
mov
xorb
xchg
jno
lods
lods
loopne
add
js
loopne
ljmp
xor
xor
negb
in
ds
inc
cmpsl
addr16
inc
loope
mov
jmp
mov
mov
sub
and
dec
sbb
movsb
add
repz
xchg
lcall
xchg
sub
mov
dec
push
icebp
loop
pop
inc
add
mov
scas
jnp
push
bound
inc
add
jp
popa
lahf
shlb
in
jl
dec
push
stos
jmp
popf
mov
xor
push
or
imul
dec
mov
arpl
jbe
in
out
arpl
xchg
mov
mov
int3
mov
sbb
aad
cmc
cld
ret
call
ja
lds
or
fsubs
pop
mov
xorb
cmp
ljmp
pop
in
clc
pop
stos
es
jnp
jno
sahf
sbb
sbb
sub
clc
lock
fstl
mov
mov
cmpsl
jmp
adc
dec
arpl
out
repnz
push
xchg
xchg
cld
movsb
sbb
mov
sti
or
push
mov
mov
imul
xchg
fstl
cmp
xchg
adc
jl
lds
sub
mov
mov
xchg
mov
mov
pop
lods
jo
les
inc
xchg
scas
mov
loope
je
mov
mov
add
shlb
jns
jl
mov
cs
loope
fs
jmp
cmc
lret
les
cmc
jnp
push
leave
and
sbb
jns
fidivl
pop
sbb
pushf
fldenv
incl
pusha
ljmp
fldenv
dec
insb
popl
cmp
jns
dec
adc
sub
xlat
mov
out
insl
repz
adc
in
jb
lret
jbe
fdivrs
jb
clc
aam
into
mov
xor
mov
inc
outsl
daa
jg
in
repnz
aam
cld
leave
js
pop
dec
je
add
fisttps
mov
aaa
sub
mov
leave
cmp
jne
mov
cmpsb
outsb
rorb
xchg
sub
and
lods
test
sub
out
mov
stmxcsr
or
scas
jns
pop
jno
mov
nop
les
sbb
push
xlat
or
mov
jb
pop
in
sub
aad
and
jno
or
ret
cs
repz
lods
out
inc
dec
xchg
sbb
movsl
push
fimull
pop
mov
in
pop
sbb
sbb
inc
into
cmp
in
adc
cmp
xchg
xchg
sbb
cmp
fs
scas
jp
xor
adc
rcrl
mov
xor
sub
cld
dec
mov
aad
dec
cmp
dec
jbe
enter
aaa
aad
cmp
pop
sti
xchg
push
jle
sbb
pop
ret
sqrtps
add
push
sbb
xchg
repnz
stc
sbb
xchg
and
xor
mov
pop
xchg
js
ror
lahf
jo
lock
imul
pop
or
mov
mov
repnz
mov
out
jle
xor
push
jnp
sub
and
int
jo
lret
mov
sar
mov
in
jg
inc
jge
aad
icebp
std
sahf
mov
sub
dec
cmp
and
add
cmp
in
sub
rcrb
pop
out
cmpsl
sub
mov
mov
dec
aas
cmp
and
cld
xchg
sub
and
sarl
movsb
add
in
leave
cmp
add
mov
pop
and
jg
enter
out
aaa
and
mov
inc
popa
add
jne
dec
ja
add
push
sbbl
adc
mov
or
test
int
pop
loope
jp
add
lret
movsb
aaa
cmpsb
scas
aas
fstpl
sub
sub
dec
xchg
cmp
inc
push
mov
cld
inc
push
mov
or
cli
dec
imul
popl
stos
sti
lea
out
xchg
or
add
iret
add
and
mov
flds
mov
or
jmp
push
mov
jg
pop
add
mov
push
or
dec
sub
sbb
xchg
stc
int3
popa
std
fnstcw
inc
lea
sbb
mov
into
xchg
mov
or
xor
inc
push
in
mov
push
sbb
pop
mov
pop
cmp
jns
lock
adc
mov
addr16
push
pusha
and
je
ja
xlat
inc
cmp
and
icebp
mov
inc
jmp
inc
mov
push
int
stos
mov
lret
icebp
sbb
insl
inc
xor
scas
mov
test
dec
pop
stos
jo
sbb
jp
cmpsl
scas
push
in
repnz
lock
cmc
scas
cltd
pop
int
sbb
add
imull
sarl
popf
jnp
sbb
movsl
repnz
mov
fidivs
movsl
mov
outsb
popa
cmpsb
leave
call
test
xchg
rcll
lods
hlt
inc
mov
scas
pop
rolb
pop
fsubr
rcll
add
sarb
jne
stos
movsl
xchg
fisttpll
fidivl
sub
inc
mov
movsb
into
cmpsl
lret
pop
aad
mov
mov
push
sbb
mov
bound
test
cwtl
data16
popa
dec
pop
icebp
adc
stc
sti
pop
push
push
lret
and
popa
stc
das
aas
arpl
mov
jmp
jmp
pop
cmp
xchg
ret
adc
jge
and
sbb
mov
es
je
xlat
jecxz
sub
sub
ror
jg
cmc
jecxz
and
or
or
add
sbb
pop
sahf
sbb
inc
pop
std
lods
xor
test
mov
out
pushf
mov
mov
or
test
inc
fcoms
mov
cmpsb
lock
jp
nop
pop
cmpsb
dec
lods
push
cmp
rorl
data16
sti
xchg
xor
mov
mov
in
sub
mov
xor
sti
mov
popa
jbe
mov
gs
dec
xchg
aam
sbbl
inc
sub
inc
lea
mov
dec
pop
xor
ss
.byte
pop
.byte
.byte
addr16
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
sub
pop
rorb
shlb
dec
lahf
mov
enter
lea
addb
enter
dec
cmp
dec
xchg
inc
dec
xor
out
subl
adc
pushf
mov
inc
in
dec
fistpl
and
int3
movsb
pop
imull
fdivrl
pop
fnstenv
ja
mov
jne
rcr
and
push
cli
out
sub
sahf
movsl
out
adc
mov
aam
insb
and
xor
in
loop
ja
or
sti
out
or
push
je
repnz
mov
cwtl
push
sub
mov
mov
and
mov
inc
push
fwait
jp
inc
popa
inc
push
xor
mov
nop
mov
mov
sbb
jbe
stc
rorb
test
enter
enter
mov
and
push
cwtl
dec
fmul
shlw
xlat
in
dec
gs
xchg
jmp
add
das
fchs
push
cltd
and
xor
or
pop
pop
push
andb
xchg
jl
int
lds
dec
ljmp
cmp
cs
das
and
pop
ror
xchg
int
dec
mov
mov
mov
imul
sub
xlat
pop
push
push
cmp
cmpsl
rclb
adc
mov
daa
lcall
shll
jae
lret
pop
in
in
inc
daa
adc
hlt
shrl
ljmp
sub
pop
repnz
ds
rclb
or
add
lock
jmp
pushf
or
dec
js
push
pusha
xor
push
repnz
pop
xchg
out
lcall
jae
iret
cmp
test
ret
cmp
mov
jl
movsl
xlat
cmp
adcb
icebp
out
cmp
and
sbb
ret
push
mov
pop
inc
add
ja
das
jp
lahf
pop
popf
call
unpckhps
mov
pop
test
inc
add
mov
push
lds
sub
pop
dec
xchg
mov
adcl
ljmp
xchg
xchg
in
cmc
in
gs
dec
push
clc
inc
jb
add
dec
ret
mov
jg
push
out
stos
or
stos
insb
dec
cmp
mov
insl
add
test
or
inc
lock
outsl
addr16
jnp
cmpsl
adc
xor
gs
fsubrl
loop
xor
out
jo
movsl
out
mov
cmp
in
sbb
lock
shlb
mov
sbb
loop
pop
sbb
scas
mov
push
aam
in
jecxz
loope
aas
jb
shll
pop
push
in
dec
push
adc
dec
adc
mov
call
mov
xchg
loopne
pop
dec
add
int3
jmp
jns
scas
je
cli
arpl
jg
repnz
adc
call
adc
adc
mov
jge
aam
dec
mov
stos
pop
or
or
mov
nop
rcll
mov
xadd
in
rcrl
mov
or
jmp
cli
aam
push
fmull
insl
clc
in
dec
loope
cmp
pop
xor
mov
inc
das
inc
in
aam
es
inc
in
pop
inc
pop
or
ja
pop
inc
cmp
mov
push
rcr
addr16
xchg
push
pop
mov
das
add
daa
push
fstpt
in
cmpsb
stos
sub
xchg
inc
out
loopne
cmp
sbb
ja
mov
and
scas
imull
ss
int3
push
adc
push
mov
sub
xchg
aam
shll
dec
rcl
push
and
into
mov
push
mov
and
iret
push
nop
push
push
repz
dec
adc
push
movsb
test
inc
pop
repnz
pop
cmp
xchg
pusha
xor
sbb
ljmp
repnz
or
xchg
bnd
and
data16
test
cmp
xchg
mov
leave
xchg
bound
jnp
jnp
adc
pop
iret
cmp
bound
pop
lret
xchg
inc
out
add
xchg
shrl
jp
movsb
pop
out
ss
outsb
andl
jbe
jge
loop
cs
shrd
outsb
dec
add
test
pop
test
mov
mov
and
nop
cmpb
cmc
xor
adc
test
iret
mov
fdivrs
stos
lretw
repz
inc
clc
neg
lds
or
adc
or
icebp
lahf
jecxz
adc
cmpl
push
fucomp
xor
call
add
jbe
stos
sub
xorl
adc
mov
stc
lret
mov
and
mov
push
call
lods
dec
adc
pushf
movb
pusha
mov
out
out
pop
jp
stos
xor
enter
add
mov
mov
dec
pop
shll
ds
add
mov
shrl
movsb
fisubs
cwtl
sub
or
add
lods
cmp
and
fwait
shl
add
jnp
inc
loop
sbb
mov
cs
pop
sbb
push
jge
inc
sbb
pop
cmp
frstor
xchg
pop
adc
loopne
insl
mov
adc
movl
mov
jmp
add
mov
call
xor
jg
arpl
outsl
mov
fincstp
ds
add
push
sbb
jne
sub
and
shlb
mov
pop
mov
nop
pop
cmp
outsl
mov
xlat
rcrl
cs
ret
dec
push
mov
sub
jp
cmp
adc
out
insb
xlat
adc
pop
mov
lea
lea
pop
inc
out
mov
sub
adc
mov
adcb
aaa
and
xor
jg
pop
stos
sub
pushl
mov
sub
test
push
imul
dec
mov
xor
pop
mov
lret
push
pop
lock
adc
shlb
movntq
out
into
stos
xor
pop
mov
jmp
int
es
xor
dec
ret
jp
pop
inc
or
rep
or
test
insl
insl
adcb
xor
push
sub
dec
push
cmp
inc
cli
out
push
inc
lea
pop
outsl
rcrl
int3
mov
shl
jae
sbb
dec
dec
aas
mov
jnp
or
push
sti
push
filds
jmp
xor
xchg
ja
inc
add
int3
mov
lea
arpl
ss
aaa
fisttpll
pop
add
fiaddl
repnz
lret
xchg
mov
mov
hlt
inc
push
mov
cmp
fs
js
ret
inc
rcrb
dec
ds
lds
lods
aas
push
in
add
pop
pop
xchg
jb
insb
stc
in
add
and
ljmp
and
rcl
cmp
movsl
jns
cmp
jl
aad
and
sarb
push
aas
sub
out
stos
or
shrl
rclb
movsl
movsl
xchg
icebp
in
aaa
jo
lds
stos
aaa
scas
scas
add
push
insl
push
call
sbb
push
mov
jne
loopne
fistpll
sbb
test
jne
mov
jb
cmc
adc
dec
in
inc
and
mov
jl
stc
aas
adcl
aad
push
arpl
lea
scas
mov
add
jno
jb
into
mov
xchg
xchg
into
lret
js
pop
inc
inc
xorl
mov
test
das
or
xor
popa
mov
dec
inc
or
pop
in
test
xchg
icebp
xor
mov
jnp
repnz
filds
repnz
xor
dec
fisubrl
cmpsb
rcll
inc
out
cmp
inc
add
cmp
xor
add
dec
lcall
fld
adc
cmpsb
pop
cmc
fwait
pop
test
and
loop
stos
and
in
mov
dec
test
rol
add
lods
out
cs
cwtl
loop
inc
and
mov
mov
pop
js
ficoms
inc
cmp
lds
dec
nop
iret
cmpsl
enter
roll
mov
cmpsb
lods
push
shlb
mov
pop
xor
subb
lods
xchg
jecxz
mov
dec
lcall
nop
push
cmp
pop
adc
int
in
jle
xchg
shrb
mov
dec
jnp
pop
adc
cmp
pop
adc
fsts
push
std
jp
int3
insb
mov
mov
jbe
xchg
jne
lret
push
cld
movsb
jmp
sbb
gs
test
adc
mov
push
or
movsb
out
pop
or
mov
xchg
ret
inc
xlat
mov
outsl
or
push
cmp
adc
stos
or
mov
push
sbb
mov
xchg
pop
mov
into
inc
xchg
je
sub
xchg
mov
ljmp
xchg
sarb
xor
fs
inc
sub
or
out
dec
aas
hlt
xor
nop
in
adc
fwait
lret
fldl
jb
aam
ret
rep
out
pop
lahf
cli
ret
or
rol
sub
aaa
add
loopne
mulb
jmp
cmp
in
ds
hlt
lcall
mov
or
mov
iret
sub
and
pop
adc
mov
insb
xorb
outsb
lret
fsubrs
inc
xor
jmp
sti
insb
push
adc
or
nop
pop
mov
xor
inc
fiaddl
mov
leave
cmp
adc
xchg
mov
enter
pop
out
xchg
mov
push
movl
xchg
scas
pop
outsb
dec
sbb
xlat
mov
and
mov
int3
fstps
pop
jmp
test
lods
cltd
cltd
fidivs
sub
test
push
push
dec
clc
sti
lea
and
pop
dec
test
orb
sub
neg
test
dec
mov
mov
mov
mov
pop
mov
push
push
icebp
orb
fmull
mov
or
adc
cmp
or
and
mov
aas
and
lea
outsb
aad
lahf
fiaddl
js
or
inc
inc
and
call
les
stos
xor
mov
inc
orb
and
ret
repz
ljmp
in
insb
xor
xor
jno
pushf
sub
hlt
adc
and
sbb
add
and
xor
adc
in
in
out
popf
fisttps
sbbl
insb
fldpi
ds
mov
pop
sbb
xchg
mov
sti
lods
sbb
pop
imul
jo
adc
loope
out
lods
jo
aas
test
mov
mov
iret
sbb
sbb
leave
gs
inc
idivb
mov
sub
or
mov
sub
aad
xchg
mov
add
mov
xchg
jae
mov
sahf
push
jbe
dec
adc
adc
icebp
fiadds
popa
jmp
outsl
pop
hlt
mov
cmp
add
sub
test
add
jge
mov
xor
mov
cmpl
cmp
ljmp
push
cli
adc
push
pop
xor
xchg
je
inc
jle
add
mov
faddl
scas
popf
mov
data16
xchg
repnz
sahf
inc
adc
adc
jmp
mov
dec
pop
inc
or
adc
aaa
mov
sahf
jmp
dec
std
es
stc
aaa
lret
inc
adc
adcb
xor
out
dec
sahf
mov
cltd
stc
outsb
stos
dec
xor
and
testb
int3
xchg
das
xchg
dec
mov
movl
xchg
fcom
cmp
repnz
test
xadd
inc
mov
xor
lock
or
in
push
lcall
movsl
jne
iret
aas
xor
stos
inc
sbb
dec
scas
push
nop
mov
stos
insb
flds
subb
out
aaa
shll
sub
fdivs
ss
int3
or
xchg
xorl
cmpsl
fldcw
adc
mov
or
lock
mov
fimuls
inc
arpl
cmpsl
or
sbb
ret
rolb
dec
cmovae
aad
or
mov
nop
inc
sub
xchg
jecxz
imul
mov
dec
insl
and
adc
inc
dec
pop
lret
insl
leave
mov
or
pop
sub
test
mov
test
pushf
or
sahf
and
pop
pusha
shll
push
dec
lret
shl
ficompl
mov
mov
add
add
push
jp
jle
mov
fsubr
scas
sbb
out
add
xlat
or
mov
mov
clc
scas
fidivl
jo
dec
stos
jecxz
stos
jae
ja
lcall
sub
cmp
adc
cld
push
data16
push
pop
fs
mov
push
test
sub
movsb
aad
mov
jbe
stos
pop
push
dec
mov
leave
xchg
cmc
and
mov
sbb
adc
pushf
jecxz
mov
mov
jecxz
cmpb
push
fimull
add
in
rcrl
dec
xchg
mov
and
cmp
push
jae
or
lcall
or
rorb
add
aam
stos
es
jle
sbb
int3
pop
push
push
les
lods
and
fcomps
andl
adc
mov
and
lods
gs
mov
mov
gs
sbb
push
int
sbb
out
les
ljmp
mov
aam
inc
mov
loopne
add
xor
dec
lahf
ja
sbb
test
add
js
movsb
jne
and
inc
and
mov
lahf
dec
adc
idivl
mov
push
adc
push
cmp
insb
hlt
popf
aam
leave
hlt
pop
push
es
pop
jecxz
in
mov
ss
movsl
xor
and
popa
idivb
jmp
xlat
test
add
mov
xchg
xchg
lret
fwait
pushf
and
push
data16
dec
pop
sbb
rcrb
jl
dec
data16
pusha
mov
pop
mov
inc
int3
cld
push
stos
mov
std
mov
inc
or
xchg
aam
or
dec
lret
decb
std
mov
rol
add
fistl
hlt
sub
repz
dec
fbld
jecxz
gs
loopne
test
je
lret
imul
int
add
xchg
push
inc
add
cmp
push
enter
jno
cmpsl
lcall
jns
popf
push
push
mov
icebp
xchg
add
into
push
imul
mov
or
push
dec
mov
xor
add
scas
inc
lea
push
pop
dec
mov
stc
popa
das
push
lods
out
aad
scas
jbe
and
or
iret
push
sub
add
fdivp
leave
sarb
dec
stos
adc
ja
lods
das
or
movsb
pop
xchg
das
sub
mov
stos
or
sub
loop
mov
sbb
add
leave
out
pop
push
imul
sub
and
shl
mov
pop
out
cwtl
and
dec
or
cmc
jge
int
data16
adc
inc
inc
pop
mov
xor
scas
xchg
ljmp
pop
jp
jp
cmc
js
movl
fcompl
or
and
outsb
mov
push
mov
jbe
aam
adc
prefetcht0
jmp
push
das
xchg
in
nop
and
in
or
fs
jnp
add
fld
test
cs
test
push
addb
jle
aam
aam
outsb
aaa
mov
fstl
fldl
push
test
loopne
int
mov
mov
hlt
xchg
mov
jmp
ret
add
sub
push
ja
mov
and
jl
jmp
inc
sub
mov
sti
pusha
cmp
sbb
cwtl
ret
jne
outsl
adc
fisttpll
aas
sub
int
push
loop
insb
in
mov
pop
cmpb
lret
sti
std
push
and
mov
cmpl
lock
sbb
mov
imul
lcall
ljmp
add
ret
add
jae
dec
and
arpl
movsb
sbb
shrb
mov
xchg
add
push
add
push
in
out
test
movsb
xchg
adc
xchg
jae
in
or
cwtl
push
dec
mov
je
test
rcl
push
jmp
sub
add
inc
sub
jne
pop
xor
scas
jg
add
sbb
sub
push
cwtl
rorl
xchg
aaa
xor
lcall
push
jns
cmc
cmpsb
into
push
aaa
mov
nop
inc
mov
dec
aaa
xor
pop
stc
cwtl
push
or
test
mov
int
push
dec
xor
fsubrs
shll
out
pushl
mov
daa
aam
loope
ja
and
add
sarb
in
jb
push
aam
nop
cmpb
out
sbb
aam
in
mov
inc
adc
loope
bound
dec
je
js
sub
and
mov
test
pop
mov
adc
outsb
push
mov
fs
loopne
mov
dec
shll
or
clc
inc
pusha
inc
cmpb
inc
xor
cmp
add
pop
push
nop
adc
and
ss
repnz
outsl
shrb
andl
and
xchg
xor
negl
inc
jne
test
add
mov
sub
imul
test
sbb
jmp
xchg
je
xor
cld
divb
fwait
cmp
sbb
mull
mov
push
enter
cmc
dec
mov
and
repnz
js
cmpsl
dec
rol
lock
call
sbb
pop
sbb
hlt
test
imull
les
cs
mov
mov
add
test
pop
ret
or
push
sbb
pop
push
mov
into
add
add
sub
mov
and
ret
pop
cmp
mov
xchg
or
daa
das
repz
lret
outsl
jo
mov
mov
xchg
lea
xor
sub
test
in
and
or
pop
popa
arpl
cmc
je
push
loope
cmp
and
and
fldcw
xlat
cmc
mov
add
es
pop
imul
inc
leave
add
loop
loop
test
bound
cmp
sub
sub
lret
imul
fcmovnu
mov
lret
mov
aaa
xchg
test
out
or
mov
lods
pmullw
dec
mov
movsl
mov
dec
cmp
adc
sub
jae
repz
mov
sbb
sti
xchg
pop
push
mov
jmp
repz
lods
sub
adc
js
shrl
push
out
sub
movsb
decb
cmp
shlb
fiaddl
test
cmpb
cmp
movsb
icebp
mov
mov
stos
psadbw
stos
push
les
xor
shrl
leave
lret
ret
into
ja
sti
test
aad
aad
mov
cwtl
jg
mov
mov
or
mov
mov
pop
xchg
rolb
test
cmpsb
mov
mov
repz
add
scas
jbe
lcall
push
mov
std
popf
das
mov
pop
xchg
mov
icebp
cmpsb
fisubs
push
dec
lods
test
enter
fildl
sti
sbb
js
mov
nop
and
xchg
test
push
jp
pop
cmp
lods
pop
xchg
clc
into
js
mov
mov
and
jg
loope
push
popf
jecxz
addl
js
mov
mov
adc
es
xchg
pop
sbb
insl
push
lds
adc
cld
jmp
adc
ja
sahf
inc
out
lods
jle
xor
in
or
out
loopne
fcomi
mov
cmp
movsl
and
pop
iret
addr16
arpl
imul
mov
inc
lock
dec
dec
and
sub
shlb
pop
xor
outsl
push
cmp
fsts
or
cwtl
mov
xor
or
in
add
adc
sbb
push
lret
lret
or
pop
sub
enter
es
sub
mov
sub
sti
fistl
out
scas
sub
sbb
xor
jp
cmp
shl
push
cmpsl
push
mov
les
mov
xor
push
shr
sbb
lcall
repz
jmp
mov
mov
test
add
dec
pop
push
xchg
mov
cmp
cwtl
ret
add
jae
ss
pop
mov
jp
int3
int
xchg
aaa
mov
inc
inc
mov
test
loope
lcall
jae
inc
pop
dec
and
enter
cmp
xor
ljmp
fistpl
add
cmpsl
add
arpl
ss
test
jne
mov
aas
mov
data16
imul
mov
jecxz
sbb
xor
movsb
fbstp
or
ret
xchg
pop
icebp
lcall
inc
fisubrs
add
mov
push
scas
mov
jno
cmp
cli
lods
cmpsl
mov
xchg
xor
jne
jmp
shr
out
loop
sub
mov
jmp
dec
pop
repz
fstpl
pop
push
mov
push
sti
mov
adc
lods
repz
stos
add
push
or
cmp
inc
sbbl
fdivrs
push
pop
pop
xchg
into
jg
ja
pop
add
inc
inc
jecxz,pt
jp
sahf
sti
popf
movsb
mov
or
sub
enter
mov
std
adc
decl
aam
scas
cwtl
cmp
popf
mov
inc
sbb
inc
insb
ljmp
sbb
lcall
mov
into
stos
addb
pop
add
xor
jmp
push
and
mov
add
mov
ret
ds
aaa
xchg
push
popf
lea
mov
or
add
cmpsl
inc
adc
or
rcl
in
dec
imul
pop
mov
popl
or
pop
shl
fisttpll
pop
xor
sub
icebp
stc
pop
std
xor
lahf
mov
cltd
shld
sti
stos
pop
rorb
ret
pop
mov
psrlq
int
ja
test
test
ja
jne
aad
in
dec
and
test
mov
inc
and
movsb
jae
sbbl
xor
xchg
subl
pop
int
std
aad
cmpsl
adc
mov
cmpsl
sub
es
push
shlb
fimull
stc
jbe
xchg
in
lret
jnp
adc
orl
scas
fwait
add
mov
arpl
push
or
aaa
movl
xchg
les
add
push
imul
lret
mov
inc
mov
xor
and
add
mov
fwait
inc
mov
pop
fadds
in
lods
add
and
xor
lods
push
mov
shrd
add
addr16
push
pop
jb
pop
mov
sub
std
add
dec
cli
or
inc
imul
lcall
bound
movsl
jmp
negb
out
rclb
inc
shrl
or
nop
mov
inc
imul
jns
xor
insb
in
add
fwait
mov
ret
sbb
movsl
jb
jecxz
pop
out
lea
cltd
lds
mov
inc
add
sub
sti
pop
cltd
ret
cs
push
adc
inc
xchg
out
and
mov
fcmovnu
stos
and
pop
inc
inc
lcall
fsubl
dec
xor
add
jnp
rcr
mull
mov
inc
imul
call
fs
or
dec
rcrl
scas
mov
sti
mov
iret
in
jmp
mov
push
ret
adc
sbb
enter
dec
add
inc
bnd
xor
movsl
fstl
insl
push
xchg
fisubl
mov
xor
filds
sub
sub
xchg
sub
lods
nop
ficoml
repz
fdivrl
arpl
xor
lret
mov
fisubl
mov
adcb
and
add
cwtl
div
pop
cmp
push
pop
insl
fimull
mov
xchg
mov
stos
push
fwait
sbb
punpcklbw
mov
dec
andb
hlt
lock
dec
nop
lea
jmp
enter
mov
xchg
or
fwait
mov
aas
insb
pop
inc
cmp
fwait
imul
rol
pop
cmpb
imul
data16
rorb
stos
mov
push
sub
pop
je
cmp
pop
pop
mov
jecxz
sbb
nop
jmp
jg
sub
dec
outsl
xlat
mov
pop
jae
in
pop
or
and
sub
dec
repnz
shrb
ret
sbb
mov
test
lret
or
jl
loope
dec
push
mov
mov
push
sti
mov
rclb
sbb
fadd
cwtl
push
leave
add
add
push
push
movsb
xchg
pop
push
add
int
mov
inc
jmp
sti
mov
in
inc
fbld
lds
sahf
in
push
xchg
jne
lods
mov
push
sub
sbb
dec
pop
or
xchg
lret
jnp
mov
push
add
decb
lds
test
pop
out
inc
js
sbb
idivl
push
mov
stc
jo
loop
push
xchg
pop
xchg
dec
dec
mov
mov
dec
cmp
mov
in
inc
leave
aas
mov
dec
cmpsl
lahf
outsb
or
dec
cltd
and
fsts
or
push
loop
ja
cmp
mov
mov
fimuls
int
jno
jns
sahf
mov
pop
mov
push
imul
push
mov
and
sahf
insl
mov
sysexit
movsb
cmp
jp
sahf
and
pop
or
inc
scas
mov
dec
xor
inc
mov
pop
aas
int
jb
fwait
shll
pop
loope
dec
pop
jmp
lcall
inc
fcomps
or
fcoms
repnz
lret
xchg
push
adc
inc
roll
jge
lahf
sbb
mov
lods
pop
call
into
jg
cli
clc
add
mov
orb
xchg
jp
mov
mov
or
lds
ficompl
or
loope
add
jae
xchg
adc
fnstsw
cmp
and
push
adc
aaa
jmp
loop
leave
pop
subl
leave
jmp
js
or
mov
lahf
xchg
icebp
mov
pop
mov
add
repz
dec
dec
cmc
xchg
mulb
test
dec
stos
call
xchg
shlb
lods
xor
rorl
movsb
sub
in
popf
sub
jno
jno
lds
movsb
sbb
adc
outsb
jge
inc
and
iret
push
pop
push
fwait
jmp
mov
les
xchg
loope
imul
test
lock
gs
fisttps
test
push
sub
out
mov
xchg
lods
sub
inc
pop
push
jl
xchg
rcrl
push
rcl
mov
fwait
dec
dec
push
inc
xchg
pop
stos
add
ss
mov
jmp
jl
int3
mov
fsubs
mov
incb
inc
inc
push
fs
jbe
stc
sub
in
xchg
cltd
dec
insl
adc
addr16
dec
and
test
sub
xor
cld
loop
sub
movsl
sbb
lods
sub
loopne
pop
or
ror
out
ss
sub
or
and
insl
es
imul
sbb
mov
int
fmull
lea
mov
add
fdivr
shrb
fisttps
fcomi
dec
cwtl
sub
stos
push
jb
inc
sbb
xchg
test
cmpsb
mov
icebp
ds
jo
jmp
stos
pop
dec
xor
jbe
jmp
in
mov
push
cmpl
lock
mov
add
jno
fidivl
out
sbb
mov
dec
dec
out
insb
loopne
call
neg
mov
shll
push
push
push
jbe
jmp
xor
cmp
aaa
cmpsb
iret
and
jo
xchg
inc
negb
dec
repnz
mov
and
shlb
aaa
sarb
mov
sub
mov
jo
shrl
bound
xor
mov
test
mov
insb
mov
movsb
mov
add
lea
sbb
mov
shll
jbe
sahf
pop
lods
adc
movups
repz
movsl
mov
mov
das
adcl
outsl
gs
add
mov
rcrl
dec
dec
dec
adcb
insb
lahf
into
inc
sahf
lods
jnp
inc
lods
rorb
push
adc
rcrl
repz
mov
nop
movsl
cmp
sbb
dec
lcall
mov
rorb
push
sub
data16
inc
mov
push
push
jne
cld
push
arpl
dec
stos
jb
sti
ss
rolb
xor
or
sub
mov
pusha
lds
pop
push
lret
cmp
imull
pop
and
sbbb
lfs
pop
cwtl
popa
dec
aam
and
in
xchg
and
cltd
xchg
push
int3
push
cmp
push
stos
stc
sti
push
cs
mov
mov
mov
sub
cmpsl
jge
test
xor
pop
imul
cmpsb
xchg
jecxz
inc
loope
pop
stos
push
pop
xor
jmp
jno
add
es
dec
rolb
int3
cmc
hlt
mov
jp
insb
push
dec
andl
jbe
mov
imul
cltd
decl
xor
sahf
fdivrs
cmp
shll
pop
sub
cmp
pop
xchg
and
jp
aad
and
dec
out
xorl
lock
sti
dec
and
clc
call
sbb
es
xor
mov
pop
out
mov
cmpsb
nop
push
jmp
xchg
test
dec
fidivrs
icebp
das
mov
das
lods
psubb
into
mov
fwait
nop
push
mov
jne
lret
mov
rcll
fisttps
xor
mov
push
fdivl
out
int
adc
dec
jb
sub
jp
js
or
xor
cli
add
inc
pushf
lcall
sbb
lret
rorb
pop
pop
and
insb
sbb
movsb
xchg
dec
mov
push
negb
sarl
std
dec
loop
aas
cs
push
mov
or
mov
jae
xor
stos
ret
rorl
andb
dec
dec
out
jge
int
sbb
inc
clc
add
push
sub
push
sbb
fidivrl
sub
out
sbb
and
es
lret
arpl
mov
mov
xor
aas
mov
inc
push
push
test
jns
or
mov
fcmovb
mov
cmpsb
xchg
fisttpll
push
mov
arpl
in
scas
addr16
ret
push
push
jns
or
jle
in
in
daa
pop
daa
adc
push
xchg
test
out
popa
cld
add
mov
jmp
pop
daa
pop
pop
dec
mov
out
cmp
outsl
mov
jns
fisttpl
mov
in
rcll
jne
mov
ss
add
sub
in
xor
push
into
scas
clc
adc
pop
enter
lods
subl
add
or
gs
out
mov
pop
lret
pop
xlat
xchg
or
xchg
add
push
hlt
and
push
orl
stos
jl
pop
es
jno
shlb
sahf
cmp
shrb
cmp
sub
jecxz
cli
scas
jmp
lret
fidivs
out
addl
fsub
xchg
scas
imul
adc
fs
xchg
add
test
jl
sbb
xlat
push
or
lock
fdivrs
xchg
pop
pop
push
jnp
add
adc
insl
inc
jns
or
mov
add
mov
stos
sbb
test
bnd
dec
jecxz
pusha
loop
pop
push
fs
jb
les
addb
sbb
ficompl
and
xchg
adc
jne
push
mov
push
js
rcrb
arpl
push
ss
data16
aas
mov
outsb
addr16
scas
or
stc
call
xor
popa
push
notb
push
out
cwtl
imul
add
cmpsb
pop
cmp
popf
loop
jne
idivb
aaa
jmp
mov
movsl
lods
pop
xor
cmpl
mov
cltd
in
xor
out
mov
shll
add
test
and
loope
push
mov
xchg
sbb
aas
fucomip
in
aam
bound
nop
and
fisubl
lea
xor
shl
in
lahf
shlb
mov
daa
pusha
push
ffree
int3
aas
sbbl
aas
fsts
mov
mov
push
scas
aas
jnp
test
call
insl
mov
ds
pop
inc
jp
outsl
orl
xchg
xor
and
dec
fwait
out
mov
nop
cmpb
push
test
movsb
jge
adc
jb
sti
es
mov
dec
adc
shlb
pop
rcll
add
fscale
movl
add
popf
aaa
inc
das
ljmp
frstor
sbb
mov
fmuls
mov
ret
cmp
xchg
mov
out
lret
push
jp
fmull
leave
mov
or
test
push
bound
cmpb
xchg
stos
lea
pop
push
push
sbb
in
fs
mov
adc
cmp
cld
inc
movsl
lea
mov
in
and
sub
cmpsl
rorl
out
push
fxch
aam
fs
rcrl
mov
inc
mov
mov
pop
ds
fidivl
scas
imul
or
shl
lahf
out
and
stos
pop
jg
mov
in
push
jno
xchg
inc
and
nop
cmp
jb
pop
movsb
orl
mov
mov
movsb
repz
jl
sub
cmp
insl
scas
movsb
shrb
jmp
mov
xchg
mov
dec
pop
mov
addb
orb
rorb
adc
repnz
jmp
and
sub
inc
jle
xchg
in
movsl
jne
and
les
mov
mov
pop
hlt
loop
mov
add
push
test
fcmove
loope
push
mov
call
mov
xchg
cmc
adc
xor
leave
call
push
pop
push
add
imul
xchg
pop
xchg
fwait
shll
imul
mov
add
std
mov
xor
push
ficompl
inc
addl
add
xor
mov
mov
cwtl
daa
fiaddl
push
xchg
repnz
cmp
lret
push
push
cmpsl
das
push
push
stc
pop
arpl
dec
cmova
mov
nop
push
dec
dec
addr16
pop
int3
outsb
ret
pushf
pop
pusha
stc
test
fs
dec
pushf
fists
test
push
outsl
add
shr
sub
dec
frstor
cmp
xchg
jnp
imul
mov
xchg
out
movsl
fimuls
dec
push
and
lock
adcb
mov
out
jnp
mov
test
xor
or
out
cltd
lret
cmp
cli
pop
stos
int
bound
lret
arpl
out
dec
cmpsb
push
icebp
push
addl
lret
cmp
insb
sbb
push
scas
jns
sbb
cmp
test
sub
xchg
es
push
fmulp
xchg
inc
inc
mov
push
jo
out
dec
icebp
nop
cld
jge
pop
xchg
ret
xchg
push
das
push
adc
addr16
lret
sub
bound
lock
rclb
mov
inc
push
mov
lods
and
movsl
mov
push
sbb
shl
imul
jb
inc
scas
xor
pop
xchg
js
lea
adc
mov
mov
ror
inc
loopne
sarb
sarb
adc
sbb
in
out
enter
mov
mov
mov
sarl
pusha
xor
nop
shlb
bound
mov
mov
inc
ficomps
sub
cmc
sub
js
push
stos
sub
fists
and
jle
test
stc
out
dec
test
aad
xchg
mov
mov
fdiv
std
inc
dec
mov
jne
pop
cmovg
dec
enter
mov
out
jp
imul
mov
mov
cli
xor
into
repnz
out
js
add
mov
xchg
sub
mov
test
adc
in
and
ret
push
lcall
repnz
cmp
or
les
rcll
jbe
cli
mov
sbb
sahf
adc
sbb
inc
test
lcall
inc
push
mov
fsubs
sbb
clc
cld
jge
pop
movsl
xchg
dec
or
outsl
cmpsb
add
xor
inc
in
ljmp
dec
stos
xor
scas
sub
aas
mov
mov
mov
lods
addl
mov
and
les
iret
cwtl
leave
enter
aas
daa
adc
jno
scas
push
mov
cltd
dec
push
push
lret
mov
xor
rol
jnp
aaa
subl
rcrl
mov
push
mov
or
push
pop
adc
pop
imul
fucomi
mov
mov
jo
pop
and
dec
jmp
shrb
xchg
cmp
ljmp
bound
sub
fstps
aam
in
decl
mov
inc
adc
jle
jle
adc
pusha
out
adc
push
insl
leave
jae
xchg
imul
int
push
xchg
mov
push
fstl
pop
fwait
test
inc
sbb
addr16
imul
into
cmp
loop
or
mov
xor
lret
pop
aaa
mov
sbb
and
jp
cmp
xor
mov
jmp
xchg
mov
adc
lds
xchg
mov
aas
add
push
or
mov
and
push
jle,pn
fists
es
add
outsl
mov
xor
sahf
push
pop
or
mov
mov
sbbl
rcll
sbb
insb
and
push
cmpsl
inc
loopne
mull
test
mov
and
rorb
jae
add
push
push
sti
mov
xor
test
pop
mov
gs
inc
xor
clc
xchg
dec
adc
ret
cmpsb
sub
insl
or
sbb
dec
sub
push
lahf
mov
fstl
xchg
lea
pop
push
cmpsb
cs
repnz
add
jle
xlat
leave
add
out
sbb
pop
mov
push
lods
jo
xor
sub
cli
push
lods
dec
cmp
sbb
dec
and
inc
push
aas
adc
aad
xchg
out
daa
and
dec
and
cwtl
and
cs
jg
je
sarl
push
test
sbb
mov
mov
dec
jno
xor
mov
sbb
push
stos
and
fcmovu
sbb
subb
mov
mov
mov
pop
clc
adc
or
push
idiv
mov
in
in
jge
jmp
or
out
dec
loop
xorb
cmc
rolb
fstpt
or
or
clc
xor
cmp
pop
sbb
js
addr16
inc
out
lods
loop
inc
dec
xor
xchg
daa
out
jl
jno
icebp
movsl
shlb
pop
out
add
fisubrl
sub
scas
shll
and
cmpsb
sub
jno
cmp
pop
or
cmp
sti
adc
mov
xchg
sbb
addb
or
cmp
jmp
xor
mov
and
stc
subl
bnd
sbb
sub
dec
lock
fs
cmp
adc
cs
je
mov
aad
xchg
mov
xorb
xchg
jno
lods
lods
loopne
add
js
loopne
ljmp
xor
xor
negb
in
ds
inc
cmpsl
addr16
inc
loope
mov
jmp
mov
mov
sub
and
dec
sbb
movsb
add
repz
xchg
lcall
xchg
sub
mov
dec
push
icebp
loop
pop
inc
add
mov
scas
jnp
push
bound
inc
add
jp
popa
lahf
shlb
in
jl
dec
push
stos
jmp
popf
mov
xor
push
or
imul
dec
mov
arpl
jbe
in
out
arpl
xchg
mov
mov
int3
mov
sbb
aad
cmc
cld
ret
call
ja
lds
or
fsubs
pop
mov
xorb
cmp
ljmp
pop
in
clc
pop
stos
es
jnp
jno
sahf
sbb
sbb
sub
clc
lock
fstl
mov
mov
cmpsl
jmp
adc
dec
arpl
out
repnz
push
xchg
xchg
cld
movsb
sbb
mov
sti
or
push
mov
mov
imul
xchg
fstl
cmp
xchg
adc
jl
lds
sub
mov
mov
xchg
mov
mov
pop
lods
jo
les
inc
xchg
scas
mov
loope
je
mov
mov
add
shlb
jns
jl
mov
cs
loope
fs
jmp
cmc
lret
les
cmc
jnp
push
leave
and
sbb
jns
fidivl
pop
sbb
pushf
fldenv
incl
pusha
ljmp
fldenv
dec
insb
popl
cmp
jns
dec
adc
sub
xlat
mov
out
insl
repz
adc
in
jb
lret
jbe
fdivrs
jb
clc
aam
into
mov
xor
mov
inc
outsl
daa
jg
in
repnz
aam
cld
leave
js
pop
dec
je
add
fisttps
mov
aaa
sub
mov
leave
cmp
jne
mov
cmpsb
outsb
rorb
xchg
sub
and
lods
test
sub
out
mov
stmxcsr
or
scas
jns
pop
jno
mov
nop
les
sbb
push
xlat
or
mov
jb
pop
in
sub
aad
and
jno
or
ret
cs
repz
lods
out
inc
dec
xchg
sbb
movsl
push
fimull
pop
mov
in
pop
sbb
sbb
inc
into
cmp
in
adc
cmp
xchg
xchg
sbb
cmp
fs
scas
jp
xor
adc
rcrl
mov
xor
sub
cld
dec
mov
aad
dec
cmp
dec
jbe
enter
aaa
aad
cmp
pop
sti
xchg
push
jle
sbb
pop
ret
sqrtps
add
push
sbb
xchg
repnz
stc
sbb
xchg
and
xor
mov
pop
xchg
js
ror
lahf
jo
lock
imul
pop
or
mov
mov
repnz
mov
out
jle
xor
push
jnp
sub
and
int
jo
lret
mov
sar
mov
in
jg
inc
jge
aad
icebp
std
sahf
mov
sub
dec
cmp
and
add
cmp
in
sub
rcrb
pop
out
cmpsl
sub
mov
mov
dec
aas
cmp
and
cld
xchg
sub
and
sarl
movsb
add
in
leave
cmp
add
mov
pop
and
jg
enter
out
aaa
and
mov
inc
popa
add
jne
dec
ja
add
push
sbbl
adc
mov
or
test
int
pop
loope
jp
add
lret
movsb
aaa
cmpsb
scas
aas
fstpl
sub
sub
dec
xchg
cmp
inc
push
mov
cld
inc
push
mov
or
cli
dec
imul
popl
stos
sti
lea
out
xchg
or
add
iret
add
and
mov
flds
mov
or
jmp
push
mov
jg
pop
add
mov
push
or
dec
sub
sbb
xchg
stc
int3
popa
std
fnstcw
inc
lea
sbb
mov
into
xchg
mov
or
xor
inc
push
in
mov
push
sbb
pop
mov
pop
cmp
jns
lock
adc
mov
addr16
push
pusha
and
je
ja
xlat
inc
cmp
and
icebp
mov
inc
jmp
inc
mov
push
int
stos
mov
lret
icebp
sbb
insl
inc
xor
scas
mov
test
dec
pop
stos
jo
sbb
jp
cmpsl
scas
push
in
repnz
lock
cmc
scas
cltd
pop
int
sbb
add
imull
sarl
popf
jnp
sbb
movsl
repnz
mov
fidivs
movsl
mov
outsb
popa
cmpsb
leave
call
test
xchg
rcll
lods
hlt
inc
mov
scas
pop
rolb
pop
fsubr
rcll
add
sarb
jne
stos
movsl
xchg
fisttpll
fidivl
sub
inc
mov
movsb
into
cmpsl
lret
pop
aad
mov
mov
push
sbb
mov
bound
test
cwtl
data16
popa
dec
pop
icebp
adc
stc
sti
pop
push
push
lret
and
popa
stc
das
aas
arpl
mov
jmp
jmp
pop
cmp
xchg
ret
adc
jge
and
sbb
mov
es
je
xlat
jecxz
sub
sub
ror
jg
cmc
jecxz
and
or
or
add
sbb
pop
sahf
sbb
inc
pop
std
lods
xor
test
mov
out
pushf
mov
mov
or
test
inc
fcoms
mov
cmpsb
lock
jp
nop
pop
cmpsb
dec
lods
push
cmp
rorl
data16
sti
xchg
xor
mov
mov
in
sub
mov
xor
sti
mov
popa
jbe
mov
gs
dec
xchg
aam
sbbl
inc
sub
inc
lea
mov
dec
pop
xor
ss
push
inc
inc
xchg
push
mov
aam
jb
and
sbb
sbb
or
mov
push
cmp
fsts
into
fistpl
jle
sahf
xchg
sbb
mov
xchg
adc
add
push
mov
ja
or
cmp
cwtl
lods
inc
pusha
push
mov
jecxz
fsts
and
fwait
std
mov
fwait
pop
rcrl
push
sub
pop
xor
and
addb
cltd
int3
jecxz
cs
or
jns
data16
testl
cmp
mov
xor
lds
dec
in
shrb
pop
pop
mov
xchg
mov
pop
cmp
lret
ret
mov
test
mov
pop
nop
cmp
cwtl
or
dec
int3
lds
stos
mov
jmp
push
loope
sbb
xchg
dec
fwait
js
dec
inc
pop
add
pop
daa
cmc
push
fsts
pop
or
jl
inc
xchg
sbb
inc
and
jo
inc
imul
push
es
push
arpl
pop
stc
mov
mov
out
xor
repnz
icebp
xchg
mov
push
outsb
insl
dec
scas
xchg
add
pop
pop
lret
ljmp
in
push
inc
fistl
pop
out
push
xor
pop
mov
push
out
dec
mov
push
jp
mov
cmp
sti
filds
in
ja
sarl
pop
enter
push
decb
sbb
dec
or
pop
test
cltd
outsl
sub
add
rorb
fnsave
lods
pop
fnstsw
jnp
ror
in
hlt
xor
pop
fisubl
adc
add
inc
pop
cmp
addr16
je
scas
jne
std
outsl
ja
lahf
lods
pop
sarl
mov
scas
add
cmp
mov
into
dec
rcll
pop
ficompl
popf
int3
nop
mov
and
cmpsl
cmpsl
mov
add
sub
enter
xchg
insb
stos
das
je
mov
xor
mov
and
jge
imul
sbb
in
xor
es
mov
addr16
add
add
mov
or
leave
daa
sub
sbb
and
aas
adc
js
add
out
je
mov
icebp
pop
xchg
nop
test
fnstcw
xchg
aam
loope
jae
push
fsubrs
push
out
sub
hlt
mov
pop
push
jecxz
pop
pop
aaa
xchg
push
imul
adc
scas
push
in
lahf
pop
xor
fcoms
repz
dec
aas
xchg
mov
test
push
test
push
mov
cmp
cmp
push
dec
and
mov
inc
push
icebp
sub
divl
lcall
add
lea
adc
cmp
and
loope
js
movsb
pop
xchg
rcll
inc
xor
add
and
stos
inc
mov
ja
mov
mov
sbb
jl
iret
jle
insl
push
stos
push
jg
add
adc
inc
dec
or
inc
pop
frstor
sbb
clc
out
jg
daa
mov
jecxz
xor
dec
ds
push
xchg
xchg
sbb
inc
cmp
mov
cmp
xchg
sbb
fs
mov
adc
jp
icebp
test
lea
pop
ret
lock
outsb
sarb
les
xor
add
xor
cmpsl
xor
js
mov
pusha
xor
arpl
or
mov
test
mov
enter
or
mov
lahf
jle
insb
sub
sub
test
arpl
dec
icebp
pop
cs
xchg
add
mov
lds
push
push
cmp
mov
xor
xor
pop
pop
test
mov
pop
pop
add
bnd
and
dec
pop
inc
nop
pop
add
xchg
out
pop
ljmp
std
mov
or
movsl
lret
pushf
enter
add
and
into
sub
outsl
out
push
dec
jge
sarl
scas
fwait
pop
into
pop
xor
sbb
lock
pop
flds
cmpl
ret
jp
lds
in
and
in
das
or
push
lahf
inc
movsl
mov
mov
sub
cwtl
pop
imul
lret
push
or
xchg
mov
xchg
pop
repz
fwait
stos
mov
adc
inc
cltd
negb
gs
pushf
imul
and
icebp
or
xchg
hlt
xchg
lret
push
push
xchg
jecxz
adc
pop
cwtl
xor
xor
test
les
ret
xchg
mov
mov
cmc
xchg
sub
pop
jmp
orl
aaa
and
mov
iret
outsl
outsl
das
mov
rcr
push
rcll
subb
mov
ret
push
push
lcall
cmc
addb
fidivl
aas
or
pop
ss
decb
mov
adc
and
and
int3
and
repz
mov
mov
bound
mov
popf
outsb
push
xchg
mov
popf
roll
jns
dec
bound
jg
lock
into
and
jae
loopne
movups
dec
cmpb
pop
xchg
add
out
jbe
cli
rcrl
sbb
leave
jb
std
hlt
mov
add
inc
test
adc
mov
jbe
jns
ret
inc
clc
fnstcw
outsl
dec
cltd
fisttpll
dec
pusha
popf
int
loop
fsubs
leave
rclb
sahf
xor
aad
call
dec
push
mov
jb
xchg
xorl
insl
push
test
dec
xchg
scas
push
pop
mov
jae
push
bound
sbb
call
test
mov
loopne
test
dec
pop
jo
xchg
and
pusha
cwtl
ja
repz
dec
xor
and
or
mov
test
mov
aas
push
sbb
jge
pop
loop
xchg
leave
or
enter
cmp
gs
fdivrs
arpl
call
jecxz
pushl
jp
jb
pusha
push
and
push
movsb
mov
les
mov
and
cld
jns
fsubrs
aaa
and
or
and
mov
rcll
dec
roll
out
cwtl
out
aam
addr16
fisttpl
pushf
xchg
repz
cmpsb
and
sbb
cmp
ss
out
mov
ss
cli
es
cmp
mov
imul
pop
in
mov
jae
rorl
pop
inc
jecxz,pn
jle
mov
mov
jb
scas
divb
gs
movsb
fistpll
xor
ret
test
cld
mov
insb
cvtpi2ps
mov
insb
icebp
mov
ds
repnz
imul
insb
sub
imul
jb
adc
mov
sub
pop
je
jecxz
lret
imul
pop
dec
push
movl
pop
ljmp
cltd
hlt
call
jnp,pn
rcrl
push
push
inc
arpl
ja
mov
dec
cmp
dec
and
inc
inc
cmpsb
jbe
sti
cs
rcrb
std
bound
mov
push
shlb
mov
pop
or
mov
jge
mov
or
and
mov
in
stc
les
test
mov
mov
dec
fsubrl
stos
rorb
xlat
sbb
imul
mov
xor
sbb
mov
xchg
sahf
lahf
mov
sub
jp
fbld
jo
xor
out
gs
int3
dec
popf
gs
push
mov
or
imul
movsb
loopne
mov
xor
jecxz
jecxz
dec
lock
mov
xor
popa
sarl
imul
mov
cmpsb
sub
and
or
cs
test
cmp
jmp
addr16
in
inc
xor
mov
outsb
push
pop
dec
int3
jnp
mov
mov
cmpsb
rolb
lock
xor
arpl
lods
cli
cmpb
repz
imul
mov
xchg
push
cmp
decl
jno
jge
in
test
jp
xchg
push
fcmovbe
xchg
lret
pushf
push
sti
or
adc
add
sbb
mov
mov
js
dec
gs
pcmpeqb
sbb
test
inc
outsb
jo
sub
mov
jb
es
sub
iret
mov
cwtl
xlat
mov
mov
or
dec
cmpsl
daa
rcrb
push
adc
mov
adc
sbb
hlt
sbb
stos
and
aaa
cmc
dec
stos
pop
mov
int3
test
mov
add
test
xor
fcomps
xor
or
adc
inc
gs
pop
mov
pop
push
push
sbb
lret
icebp
dec
aaa
movsb
xor
xchg
sti
inc
scas
jg
popf
adc
lds
out
dec
hlt
pop
cli
int
sar
fmull
aam
imulb
dec
pop
cs
mov
jmp
paddd
mov
xchg
mov
cwtl
dec
add
cmp
in
jmp
pusha
shl
out
add
cmpsb
and
adc
xchg
sub
push
cli
shr
push
icebp
hlt
rolb
mov
cmp
dec
lea
lcall
xchg
or
bswap
xchg
jmp
je
mov
sahf
rcll
add
pop
lret
je
imul
in
popaw
mov
push
les
mov
mov
sbb
add
xchg
or
sub
xchg
pop
xchg
fstl
shrl
xchg
sbb
mov
dec
mov
hlt
jae
sub
jmp
xlat
xor
nop
es
test
call
xchg
sub
cmp
ss
shrb
and
sub
mov
aam
jmp
sahf
xchg
pusha
inc
mov
mov
dec
jbe
test
xor
add
xor
or
loop
xlat
ret
aad
lea
mov
enter
pop
gs
add
sti
test
dec
pop
pushf
dec
and
jg
pop
jns
push
rcrb
xor
push
aam
sub
gs
inc
in
pop
or
sub
fwait
mov
repnz
popf
pop
scas
divl
mov
mov
inc
xor
jno
ja
pop
mov
or
ret
insl
lret
cmp
mov
mov
mov
mov
fs
sub
imul
sub
outsl
add
mov
hlt
mov
lock
and
pusha
mov
xchg
sub
lods
mov
sub
imull
jae
test
push
mov
jg
loope
jbe
int3
cmp
scas
cmp
aam
or
in
dec
cli
adc
and
mov
fisubrl
sub
and
repnz
xor
push
jb
sub
ss
fwait
dec
xchg
sub
mov
dec
adc
xor
jp
dec
leave
shl
les
lds
stc
mov
adc
fnstenv
insb
sub
out
xchg
pop
bnd
inc
push
sbb
xchg
inc
dec
fmuls
pop
clc
dec
lea
ds
or
rclb
call
jl
add
pop
out
jp
outsb
push
inc
push
add
incl
andb
or
pop
andl
mov
adcb
and
popf
imul
add
out
imul
out
enter
lret
bnd
cltd
jge
and
rorb
cmp
xor
stos
scas
movl
mov
lahf
sbb
and
xchg
ljmp
cmp
mov
cmp
aad
mov
clc
pop
mov
inc
testl
mov
inc
pop
push
insb
jne
push
sbb
or
test
js
test
roll
inc
sarl
pop
pop
mov
pop
sbb
sbb
js
aam
cmp
jo
movsb
cltd
mov
lcall
dec
pop
arpl
add
out
mov
sub
mov
jmp
sub
aad
mov
mov
pop
test
lret
xchg
adc
xchg
sbb
push
pop
jl
repnz
test
xchg
adc
insb
pusha
out
or
mov
cltd
insl
sbb
mov
int
xchg
std
jmp
dec
inc
jns
daa
mov
daa
lods
pop
and
push
pop
dec
loopne
xor
inc
shrl
cmpsl
mov
adc
xchg
lret
inc
pop
pop
aas
adc
and
loopne
mov
cmp
daa
mov
xchg
mov
outsl
aam
mov
lock
push
push
mov
mov
pop
dec
push
dec
xchg
pop
pop
les
sbb
cmc
fsubrl
lea
adc
mov
adc
jmp
jmp
xor
jmp
xlat
scas
in
sbb
sti
rol
loop
in
mov
push
hlt
sbb
or
lahf
out
enter
les
shll
jb
dec
cwtl
cmp
adc
sahf
aaa
sub
add
mov
cli
adc
lret
dec
rol
cmp
push
and
int
mov
pop
lock
ljmp
icebp
fisttpl
cmp
or
jo
jnp,pn
sbb
scas
or
jbe
mov
ss
movsb
fs
push
outsl
stos
shlb
scas
sub
jnp
pop
in
jbe
mov
adc
aam
std
dec
cmp
mov
cmp
ds
movsl
into
fimuls
or
mov
jge
pop
dec
lock
mov
pop
dec
inc
lcall
cltd
mov
inc
sbb
or
xchg
pop
dec
adc
and
mov
scas
sahf
and
repz
sahf
and
shl
data16
maxps
insl
push
or
lret
xor
clc
arpl
mov
inc
ret
lahf
cmpsb
popf
sar
mov
push
or
cmpsb
shlb
mov
movsl
mov
sbb
rclb
jae
cmpsl
fldl
xchg
adc
add
cmp
jge
ficoms
dec
xor
mov
fs
pop
or
lds
mov
push
mov
cmp
insb
add
xchg
cmp
pop
imul
ja
into
mov
rcrb
cmp
bnd
xchg
add
cmpsb
mov
mov
sbb
and
out
cli
test
push
cmp
ret
inc
scas
xchg
popa
or
pop
ds
ss
mov
inc
mov
in
shrl
aam
xchg
inc
push
pop
inc
andl
aad
dec
popf
popf
add
enter
and
xchg
js
ss
sbb
push
pop
adc
adc
jg
sub
sub
xchg
and
iret
sub
cmpsl
daa
lea
pop
outsl
mov
and
xchg
bound
sti
xchg
push
xor
imul
orl
xor
cmp
cmpsl
adc
or
xorb
xor
lock
lea
mov
add
or
pop
cmpl
jb
lods
add
jo
xchg
sbb
mov
subl
clc
jle
jl
repnz
or
xchg
sub
rclb
clc
cmp
outsb
mov
cld
sbb
push
push
mov
in
out
aas
cmp
jecxz
jae
cmp
sbb
or
push
and
std
aam
loopne
mov
pushf
and
stos
in
sbb
rolb
sar
jno
lods
and
mov
call
out
add
dec
xor
pop
out
iret
adc
in
into
xor
push
mov
idivl
mov
leave
cmpsb
cmp
dec
add
icebp
addb
pushf
sbb
pop
lahf
divb
loopne
popf
dec
movl
shll
or
cmp
imul
add
fidivrl
jl
out
filds
lret
lea
jb
pop
roll
cmp
addb
push
loope
add
das
xchg
icebp
mov
jnp
sub
xchg
mov
xor
mov
lahf
outsl
fs
das
mov
incb
push
sbbb
icebp
jecxz
jle
pop
jno
add
cmp
pusha
cmp
in
mov
sub
hlt
stc
lods
fs
dec
int
sarl
mov
test
cmp
xlat
inc
insl
dec
pop
ds
xchg
sbb
popf
imul
pop
mov
movsb
ja
scas
add
xchg
test
pop
addr16
lcall
inc
push
cmpsl
outsb
push
dec
inc
adc
fimull
pop
out
xchg
std
cli
imul
jge
aaa
jp
pop
fdivrl
pop
lods
std
std
inc
sub
hlt
icebp
icebp
xchg
or
mov
mov
dec
test
xor
mov
sbb
lret
adc
loope
into
mov
cltd
scas
dec
lret
popf
int
pop
or
test
lods
cmc
iret
mov
mov
lcall
std
sbb
test
mov
divb
inc
das
cmpsl
ds
pop
imul
out
rcll
ja
sub
cmp
ret
dec
iret
mov
sbbb
push
icebp
xchg
mov
jmp
add
loop
push
xchg
bound
sbb
adc
xchg
cmp
loopne
pop
shl
aas
xchg
clc
leave
or
loopne
dec
sbb
retw
mov
sub
cli
add
ss
fucomp
pop
jbe
pop
aad
jae
lea
push
fdivrl
cwtl
sbb
stos
sti
mov
pushf
into
mov
stc
mov
rorl
add
iret
fxch
mov
xchg
mov
xchg
aad
jno
jnp
iret
imul
stc
xlat
mov
xor
xchg
std
out
jge
lret
test
push
rorl
scas
fisttpll
test
into
inc
or
rcl
js
jbe
imul
sub
ret
dec
or
sbb
std
add
xchg
adc
mov
test
push
sub
js
cli
bound
or
leave
jg
sahf
gs
sub
stc
inc
fiaddl
jge
push
shll
jbe
pop
add
stc
mov
or
and
out
add
mov
push
call
pushf
inc
mov
xor
push
jmp
adc
pop
cld
push
addb
mov
jp
xchg
lock
push
jl
into
inc
icebp
scas
jnp
and
cmpsb
mov
and
jo
pop
mov
fdivs
daa
loop
lret
std
jmp
mov
adc
mov
div
add
inc
sahf
xor
push
outsb
cwtl
xchg
lea
dec
movsl
popf
mov
gs
stc
dec
inc
and
pmulhuw
loope
ds
jbe
nop
loope
fidivrl
sbb
xchg
js
loopne
iret
in
aaa
clc
lahf
arpl
rcrl
xor
imul
dec
cmp
xchg
xor
imul
or
dec
sub
movsl
xchg
jbe
xor
ss
rcrb
adc
cwtl
fstp
clc
xchg
loope
jae
pop
jmp
imulb
add
mov
shr
addr16
pop
dec
cmp
imul
xor
jmp
pop
mov
inc
arpl
test
jno
mov
aam
xchg
popa
lahf
loope
xchg
out
adc
cmp
cli
int
push
lahf
jg
stc
xchg
loopne
test
lahf
lcall
es
xchg
or
push
mov
mov
in
inc
xchg
sbb
adc
je
cmp
mov
pop
ds
xchg
enter
dec
outsl
mov
mov
cmpl
lds
imul
sar
test
ret
fidivrl
and
pop
cmp
xchg
cmp
jno
and
add
mov
jl
out
imul
lcall
push
in
test
push
repnz
test
ja
jnp
and
dec
clc
jne
add
dec
sub
lea
insb
pusha
push
movswl
sbb
inc
loopne
cltd
test
sahf
xorl
nop
inc
xor
cmpsl
mov
das
inc
dec
out
sti
add
xchg
push
mov
idivb
push
test
int
mov
and
aaa
xor
jmp
andb
fldcw
ds
mov
leave
cmp
jno
add
xlat
enter
testb
andb
and
sub
inc
xchg
pop
imul
pusha
lods
test
jnp
loop
adc
fcoml
sub
in
mov
pop
mov
lret
aam
scas
jecxz
lret
in
rclb
mov
les
pop
mov
rorb
insb
call
pslld
or
stc
xlat
int3
jmp
lock
dec
scas
xor
jg
sarb
leave
shll
dec
sub
les
ss
shrl
pusha
pop
in
out
outsl
das
adc
js
insb
dec
pop
das
filds
sub
cmp
pop
cmp
pop
jnp
enter
addr16
jbe
sub
dec
scas
sahf
in
jno
xchg
pop
rcrb
xchg
and
cmp
addb
push
sub
adc
loopne
bound
scas
jmp
and
cmpsb
mov
jns
int
jmp
pop
cmp
mov
and
xor
dec
cmpxchg
jbe
sbbb
subb
push
ficomps
ret
decl
adc
and
repnz
jnp
negb
xor
pop
push
jp
mov
pop
cld
test
push
mov
ret
imul
cli
sub
cmp
call
push
test
scas
xchg
aam
mov
mov
stos
lret
inc
test
movsb
cltd
lret
insl
cmpsb
and
sub
sub
cmpsl
mull
sti
fs
icebp
in
aas
aas
dec
stos
movsl
cmpsb
pusha
fwait
nop
mov
mov
popa
and
js
insb
push
mov
jp
push
pusha
dec
pushf
testb
rorb
scas
scas
add
rolb
and
xchg
dec
in
mov
pop
stos
loope
xchg
sub
xchg
pop
test
adc
popa
mov
jnp
lock
or
sahf
sub
out
mov
adc
mov
and
into
cltd
cmp
popa
add
mov
es
rcrb
test
mov
outsl
or
xchg
xchg
xchg
ret
pop
mov
cmp
in
lahf
insl
iret
std
adc
lcall
dec
fstpt
std
xor
stc
mov
inc
bound
imul
cltd
mov
es
xchg
popa
inc
pop
pop
mov
xchg
inc
or
add
js
call
clc
idivl
and
int3
pop
sub
mov
mov
mov
pop
lods
mov
lret
imul
sarb
insb
push
iret
mov
adc
mov
push
dec
loopne
mov
push
sahf
int3
scas
stos
mov
xchg
or
stc
jg
int3
mov
sarb
fwait
jb
scas
dec
and
xchg
lahf
outsl
mov
rorb
hlt
mov
mov
dec
sub
or
std
jns
mov
sar
dec
or
mov
dec
cli
mov
out
xlat
push
push
or
xchg
xor
xchg
jp
push
insb
fidivs
mov
or
ret
push
jns
lret
mov
cmp
and
dec
lret
ret
or
pop
xor
xor
fwait
lcall
or
negb
lds
push
pop
mov
pop
cmp
sub
mov
jp
in
xorl
push
push
inc
in
sti
inc
and
hlt
ficoml
push
loopne
ja
sub
loopne
or
add
mov
dec
shl
xchg
sbbl
stos
repnz
sbb
pop
and
mov
mov
mov
int
mov
xchg
fcoml
cmc
cmpsl
mov
adc
nop
inc
ss
nop
fs
fildll
cmpb
dec
cmpb
pop
sbb
xor
sti
xchg
inc
mov
xor
jp
push
sbb
popf
jns
inc
xchg
loopne
xor
xchg
ss
js
loope
shrl
aam
adc
dec
mul
in
jb
shl
das
lds
xlat
pop
or
cmp
adcl
jg
dec
inc
sbbb
cmp
sbb
pop
add
push
adc
or
nop
pusha
jl
adc
pop
aaa
mov
jbe
out
mov
push
stos
jecxz
mov
mul
in
lods
sbb
fdivrs
mov
push
lods
pop
xor
dec
mov
vmulss
cli
out
rcrl
mov
jge
out
insb
xor
mov
jne
lods
dec
and
add
push
pushf
js
stc
aad
repnz
xor
push
push
jbe
and
pop
lret
xchg
and
scas
ss
and
dec
out
mov
jbe
lock
pop
stos
cld
inc
xor
mov
inc
imul
