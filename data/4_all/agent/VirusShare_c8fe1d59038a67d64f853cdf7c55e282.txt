bound
add
push
add
push
push
mov
lea
push
push
call
push
lods
add
mov
mov
push
push
push
call
lea
je
add
sub
add
sub
movb
mov
pop
mov
pop
pop
ret
mov
add
stos
push
mov
push
mov
sub
push
push
pop
mov
and
push
mov
push
test
xor
jmp
push
mov
lods
lret
jl
or
xchg
pop
mov
mov
cmp
dec
or
je
cmp
mov
es
add
pop
push
ret
mov
or
sbb
or
add
add
add
jne
pushl
pusha
mov
mov
pop
mov
add
ret
push
mov
sub
xor
push
loope
sbb
inc
hlt
das
cmc
inc
divb
gs
push
xchg
clc
popa
stc
dec
cli
inc
sti
cmp
lret
adc
jns
addr16
inc
jno
addl
adc
add
stos
stos
lea
mov
lret
add
push
loopne
xchg
loop
sahf
nop
dec
mov
cmp
cmp
ja
mov
test
cmp
xor
packuswb
test
js
jmp
push
push
push
imulb
fstpl
loopne
mov
pop
mov
push
lods
add
push
pop
push
cmp
pop
pop
push
push
xor
cmp
cmp
cmp
sbb
adc
orl
inc
add
jns
mov
popf
cli
fmuls
test
jg
pop
mov
mov
test
fnsave
je
sub
xchg
je
dec
je
sub
shlb
or
dec
push
pcmpeqd
jmp
andl
popa
xchg
adc
orb
inc
adc
inc
sub
pop
jo
and
rclb
sub
sub
and
dec
xchg
sbb
mov
push
push
sbbb
mov
push
adc
arpl
adc
cmp
lret
icebp
clc
incl
jns
out
adc
jmp
sahf
out
aaa
sub
push
mov
adcl
add
pop
cmp
pop
test
cmp
jl
dec
sar
push
pushf
xchg
xorb
ret
loop
mov
adc
push
aam
aad
sub
adc
ret
add
je
mov
inc
mov
adc
andl
mov
or
xchg
mov
jne
or
lea
mov
add
rol
orb
lret
cltd
or
inc
nop
es
add
cmp
int3
fsubrs
fmuls
ret
loope
add
mov
inc
frstor
ficomps
fwait
js
fnstsw
add
pop
movsb
sbb
lea
jmp
hlt
loope
cmp
push
hlt
cmc
push
testb
mov
shr
ret
or
mov
mov
lcall
mov
add
add
ret
pop
les
hlt
in
xchg
add
jae
fsubrp
jmp
ljmp
cmp
addr16
push
loope
insl
mov
sbb
mov
test
fstp
fwait
push
push
add
popf
mov
test
sub
xorl
fsubl
jne
roll
mov
sbbb
xor
clc
stc
sbb
jp
mov
push
sub
push
stc
cmp
notl
fsubl
or
leave
outsb
iret
repz
call
cld
cmpsl
mov
lods
incl
mov
sbb
scas
xor
and
loope
inc
mov
mov
mov
pop
fisubl
cli
jmp
or
sub
out
jae
lods
outsb
sbb
cmpsl
popf
inc
push
pop
and
cs
test
sub
fadd
enter
out
adc
lret
and
jne
pop
push
je
jae
rclb
pop
jb
jmp
rcl
add
xchg
jb
jo
lods
in
mov
adc
mov
inc
lock
push
outsb
sbb
and
les
or
sub
and
mov
pop
add
in
lret
ficoms
or
add
add
fidivrs
cmp
push
add
and
pop
add
xor
push
call
jo
pop
mov
add
insb
cmp
clc
mov
or
dec
lret
cmp
add
cmp
cmp
cmp
pop
and
jne
hlt
jp
sahf
jge
pop
or
push
nop
push
out
xchg
sbb
push
popf
sbb
add
leave
add
lret
mov
sub
je
or
and
pop
push
outsb
jnp
int3
jo
xchg
lods
lahf
mov
sbb
movsl
and
gs
sbb
nop
in
pop
sbb
mov
mov
push
pop
adc
push
mov
ss
jne
shl
rcpps
sbb
fstpt
push
xor
push
call
or
add
icebp
or
pushf
cmpb
add
or
and
mov
cmpsb
mov
pop
push
bound
push
ficomps
or
cmpsb
jmp
dec
or
inc
cmp
sub
lea
jne
movb
mov
push
inc
mov
mov
int
aam
call
mov
movsl
mov
shll
and
out
shlb
mov
jns
ret
cmp
repz
enter
int3
jns
out
xor
into
iret
rcl
repz
jecxz
cmp
aam
jo
sbb
xlat
fdivs
fnstenv
fidivrl
ret
loope
frstor
fisubs
loop
cmp
xor
cmp
in
cmp
out
call
loope
fs
jecxz
sbb
cmp
out
lock
ret
loope
cmp
repz
cmp
cmp
xchg
es
fs
xor
xor
sbbl
std
jae
nop
and
xlat
add
pop
jbe
mov
push
cmp
add
push
mov
dec
inc
xchg
add
mov
mov
addl
test
xchg
lds
or
push
rorl
ds
xor
cltd
pusha
mov
test
push
pop
decb
sub
rclb
pop
and
push
fistpll
hlt
sub
sahf
inc
call
insb
lea
enter
out
push
rcl
ret
sub
pop
add
sub
sub
pop
xlat
scas
das
mov
mov
push
cli
xor
cmc
test
out
inc
scas
cltd
mov
ret
push
mov
push
or
test
mov
and
and
out
mov
dec
jne
les
adc
je
jmp
xor
test
xchg
push
push
mov
push
push
test
mov
fcomps
mov
sbb
jno
adc
mov
inc
push
roll
cwtl
dec
cld
sub
sbb
insb
repz
fidivl
mov
leave
pop
lcall
repnz
clc
push
push
xchg
jmp
icebp
fiadds
outsb
int3
jnp
mov
or
mov
jns
and
scas
pusha
push
mov
sbbl
push
andb
enter
fists
xchg
sub
lock
sbbb
sub
xor
push
jne
mov
adc
sarl
xchg
rorl
dec
out
xor
adc
push
push
pusha
test
mov
sbb
stc
std
je
loop
fsubrs
lret
xchg
stos
push
std
out
or
push
mov
jmp
scas
push
dec
adc
sub
and
lahf
je
xchg
fsubp
add
dec
clc
push
or
sbb
dec
mov
sub
xor
dec
push
andb
push
jnp
imul
movl
pop
cmp
and
xchg
jns
pop
dec
jge
adc
push
scas
pop
les
or
jo
je
dec
inc
pop
cmp
jno
loopne
sbb
push
push
push
pop
shlb
mov
push
and
mov
pushf
movsl
out
cltd
div
fmuls
outsl
setns
sub
rclb
test
je
push
mov
or
fnstenv
idivl
pop
stos
pop
jnp
std
push
lods
inc
and
fs
cmc
or
pop
xor
mov
dec
xchg
push
jbe
or
and
adc
fisttpll
xchg
adc
aas
fbld
arpl
je
push
cmp
imul
out
sahf
cmp
dec
lahf
out
outsl
jae
jne
mov
xchg
int
cmp
je
mov
andb
cld
add
inc
xchg
pushw
mov
jno
testb
jl
adc
dec
dec
inc
jbe
mov
push
push
jl
cmpsb
sub
adc
and
mov
mov
mov
add
jns
add
mov
mov
lcall
js
divb
mov
pop
add
shlb
mov
cmp
jle
mov
cmp
jg
mov
out
sub
sbb
mov
push
or
jmp
pusha
andb
mov
jno
pop
mov
es
les
daa
xor
cmpsb
sbb
push
cmp
dec
aas
addb
into
inc
les
jge
lcall
jne
inc
mov
and
and
sarl
cmpsb
inc
sbb
dec
lds
push
jb
inc
test
mov
push
shll
in
in
jns
out
out
jmp
sahf
jmp
in
out
jo
outsl
out
sahf
das
je
bound
jne
and
jns
insl
bound
jae
test
lret
nop
fwait
pushf
je
mov
sbb
xor
addb
mov
les
stos
xor
leave
test
mov
mov
xor
adc
imul
xor
or
aas
je
and
mov
mov
inc
and
xlat
outsl
and
mov
int
insb
int3
xchg
insl
inc
pop
add
cmp
xlat
xor
data16
lcall
adc
push
mov
or
aam
or
push
add
xchg
xchg
jne
pusha
mov
rolb
cmp
loopne
sahf
add
adc
mov
pusha
jo
add
cs
lods
jmp
pusha
mov
and
iret
adc
mov
sar
sar
orl
pop
andl
cmp
jge
test
in
fs
lcall
inc
xor
xor
and
mov
lea
bound
int3
movsl
sbbb
adc
js
jae
inc
push
and
movl
xchg
mov
xor
pop
lods
in
jne
push
adc
add
in
add
sub
pop
mov
js
pop
jl
pusha
shll
ret
xor
test
je
clc
pop
loop
mov
inc
nop
and
add
sti
and
cmp
push
jno
cmp
test
push
movsb
push
mov
sub
faddl
inc
mov
data16
pop
dec
mov
mov
arpl
aas
sahf
daa
xor
arpl
imul
jns
je
leave
orl
and
dec
fcoml
notb
pop
pusha
decl
fsubrl
mov
ftst
je
or
shll
stc
pop
mov
cld
scas
and
push
mov
pop
fldt
rolb
pop
push
lret
adc
nop
lret
or
xchg
clc
shl
pop
js
test
cmp
mov
lea
pop
mov
lret
dec
out
nop
push
sbbb
pusha
mov
inc
push
sub
mov
push
add
ret
push
repnz
add
repz
mov
popa
movzbl
push
mov
pop
cltd
mov
idiv
jge
lea
shlb
idiv
pop
push
mov
inc
rclb
cltd
jb
mov
xor
mov
idiv
sub
std
cli
mov
cmp
inc
mov
idiv
jp
jecxz
ds
push
xchg
push
mov
mov
fistps
sub
mov
pop
cmp
addr16
dec
push
mov
xchg
sahf
xchg
cmp
mov
sub
mov
or
jo
ljmp
push
or
cmpsl
insb
push
in
in
mov
push
scas
in
cmp
sahf
and
inc
aad
add
push
iret
repz
jmp
in
out
imul
out
inc
lock
cmp
mov
mov
arpl
dec
add
mov
aad
jb
int3
pop
xor
mov
fsubrl
dec
xchg
and
mov
or
pop
cmp
or
and
enter
shl
xchg
jge
push
mov
cmp
mov
inc
push
fsubrs
int3
push
push
jo
lea
dec
pop
xchg
loopw
lcall
gs
mov
jno
sbb
cli
fdivr
lea
xchg
cmp
jmp
clc
add
mov
or
inc
sub
jmp
sub
std
pop
or
mov
sub
jmp
xchg
pop
push
decb
mov
std
mov
add
mov
cmp
add
add
add
popa
push
inc
repz
xor
pop
jb
inc
add
mov
pop
ja
mov
cmp
jl
cmp
push
fiaddl
ljmp
cmp
call
pusha
fsubl
dec
sub
adc
push
inc
pop
or
and
pop
mov
movsb
cmp
cmp
add
mov
or
sbb
mov
sub
les
pop
inc
rcll
mov
mov
jecxz
lds
dec
scas
sbb
shlb
ja
add
add
push
xchg
and
sub
xchg
addr16
call
jnp
push
jae
sbb
xor
insb
repnz
repz
push
lea
dec
push
and
push
cmp
repz
imul
repz
leave
popa
fs
loope
addr16
gs
jecxz
popa
xchg
into
arpl
sbb
xchg
outsl
shlb
shlb
mov
loope
cmpsl
xchg
test
sbb
movsl
jns
out
cmpsb
cmpsl
test
stos
stos
out
sahf
out
lods
scas
scas
mov
out
sahf
mov
mov
mov
icebp
sbb
mov
push
mov
xchg
xor
pusha
jne
je
sub
sub
push
in
xor
shlb
push
mov
fdiv
inc
test
jmp
xor
pop
or
imul
sbb
push
or
or
dec
cmp
add
mov
out
adc
add
shlb
fsubs
adc
inc
jne
or
jne
push
out
add
pop
clc
shrl
pop
in
mov
adc
movl
mov
es
push
iret
repz
ret
shl
cmp
xor
mov
jns
repz
cmc
testb
xchg
xor
out
mov
push
imul
outsl
ja
dec
xchg
xchg
inc
out
jo
mov
mov
jne
lock
fstpl
mov
inc
push
mov
push
mov
push
es
xchg
inc
ret
mov
xor
lds
cld
data16
push
js
jae
jmp
scas
xor
pop
jl
cmp
cmp
test
xor
sub
sub
cmp
jb
push
sbb
push
add
pop
les
xlat
add
imul
lcall
cmp
push
sbb
pop
add
cld
jl
jmp
les
sbb
addr16
cmp
xlat
cmp
jo
fsubrs
mov
in
mov
mov
adc
subb
test
cmp
je
repz
ja
mov
cmp
je
bound
push
jp
jnp
pop
pushf
fstpt
jle
insb
lcall
rcrl
insl
jo
or
test
inc
xchg
push
testb
inc
mov
mov
mov
sbb
adc
lea
push
xchg
xchg
popa
xchg
jbe
gs
dec
ret
loope
cmp
addr16
gs
push
cmp
xchg
imul
cmp
xrelease
repz
insb
jne
push
je
iret
repz
jb
jne
dec
cmp
cwtl
shrb
pop
sahf
addr16
icebp
mov
loope
mov
cmpsb
ja
addr16
jae
push
ja
dec
mov
sub
mulb
jne
xor
and
ret
lea
hlt
fmuls
and
mov
loop
xchg
sarb
mov
data16
imul
push
add
mov
pop
addr16
gs
das
pusha
mov
mov
fs
jmp
lea
stc
hlt
shrb
jecxz
xor
popa
and
and
lea
xor
sbb
shlb
lahf
mov
adc
or
loop
push
mov
dec
or
shrb
mov
mov
sbb
mov
xchg
xorb
stos
aaa
adc
js
adc
sbb
mov
sarl
repz
or
adc
daa
lea
cmp
adc
push
or
or
jl
sbb
pushf
test
add
mov
cmpsl
cmp
movsb
js
nop
jne
mov
and
je,pt
or
cmc
push
pop
sub
xor
mov
mov
fdivr
xchg
push
pop
hlt
lea
lcall
ljmp
add
sub
add
push
mov
pop
adc
adc
push
cwtl
lock
das
mov
add
and
mov
inc
int
or
mov
pop
enter
push
inc
rclb
shlb
adc
pop
cbtw
mov
mov
cmp
xor
pop
mov
dec
cmpb
pop
push
mov
push
ljmp
insb
outsb
jl
push
movaps
push
mov
mov
inc
cs
cltd
dec
popf
dec
cmp
popa
push
imul
insb
scas
insb
insl
cmp
addr16
outsl
xor
pop
repz
jecxz
jb
jb
clc
in
jecxz
jbe
ja
and
clc
clc
outsb
fs
sbb
pop
mov
xchg
loope
jo
insb
shrb
ret
pop
adc
ret
jb
js,pn
repz
hlt
enter
test
imul
je
inc
cli
xor
and
xor
imul
mov
pop
mov
ljmp
xchg
out
inc
data16
mov
iret
jecxz
xor
xor
bnd
cmp
loope
in
in
inc
out
inc
out
push
lock
cmpsb
sbb
repnz
mov
jl
dec
movl
int3
dec
push
push
mov
repz
push
outsl
push
out
out
push
insb
push
push
mov
lds
sub
ss
in
pop
xor
mov
pop
pop
cwtl
cltd
cmp
clc
idivb
pushf
arpl
mov
or
clc
fdivrs
jg
add
jae
push
xchg
xorb
test
test
xlat
loop
xchg
jo
test
sahf
outsl
sbb
xchg
lahf
arpl
jae
loope
cmp
dec
cmpsb
cmpsl
pusha
fimull
test
cmp
dec
cmp
cmp
jge
popf
leave
test
fiaddl
mov
mov
dec
rolb
xchg
loope
mov
nop
imul
outsl
xchg
ja
push
xchg
rolb
je
push
popa
pop
xor
lcall
xchg
fisubl
jb
xor
xor
jecxz
cmp
fbld
loope
aad
adc
cmp
pop
inc
hlt
lcall
pop
ret
mov
sbb
sub
or
test
adc
jecxz
adc
ret
push
push
hlt
pop
sub
int
pop
adcl
lods
shl
or
rcll
or
lods
cmc
jno
xor
in
test
in
adc
xchg
rcrl
push
jmp
dec
jbe
add
lea
jmp
sbb
loopne
rcl
push
push
les
adc
cmp
neg
les
je
sti
mov
mov
inc
rcll
hlt
jne
pop
imul
pop
sub
jmp
mov
push
imul
test
push
mov
pop
cmp
mov
mov
int
sbb
icebp
rorl
int3
lods
lods
sti
dec
sub
movsl
sbb
aad
adc
and
mov
orb
nopl
and
popa
xor
popf
inc
push
lea
popa
sbb
push
mov
xorb
add
push
mov
test
sbb
mov
ja
addl
sub
jne
sbb
sbb
movsb
push
cmp
mov
mov
sahf
inc
scas
sahf
pusha
clc
mov
loopne
add
dec
dec
insb
mov
push
or
add
cmp
je
cmp
jb
dec
dec
cmpw
jne
pusha
xchg
sarl
pop
or
jne
fs
and
push
pop
xchg
jl
or
ret
repnz
push
add
inc
xchg
inc
out
add
rolb
jb
or
adc
mov
out
xlat
aad
cmp
mov
je
push
or
jno
ficoms
xor
inc
jnp
neg
fcoms
cmpsb
pop
jne
into
xor
sbb
bnd
xor
xchg
cmc
xor
mull
sti
xor
gs
cli
xchg
out
sahf
inc
gs
outsl
out
dec
push
gs
xchg
ja
outsl
jne
test
jns
outsb
outsl
pmulhuw
into
push
rcrb
mov
sbb
pushf
nop
sar
xor
dec
aaa
sarb
push
iret
and
adc
push
popf
scas
sti
xor
sub
scas
add
addr16
dec
insb
shrb
cmpsb
iret
loop
inc
xor
jmp
adc
pop
lea
xor
cmp
push
imul
adc
in
shl
repnz
lods
cs
fs
or
xchg
or
pop
out
test
lods
pusha
push
fs
jge
insl
in
stc
insb
stos
push
xor
stc
and
pop
js
clc
fisubs
mov
test
or
enter
push
das
sub
sbb
sti
in
sti
cmc
std
dec
ficompl
daa
addb
test
push
js
xor
xchg
gs
push
add
jno
ja
rorl
push
int3
sub
cmp
in
popf
mov
sarl
stc
pop
xchg
adc
icebp
xor
fs
jge,pn
addr16
xchg
mov
sub
dec
sub
fs
inc
pusha
xor
je
in
and
push
inc
add
int
jo
mov
fildll
sub
xchg
pop
int
jno
add
lods
sahf
es
inc
insb
test
xor
xchg
lret
sub
and
mov
lret
add
push
pop
cmpsl
jno
popa
leave
or
lahf
arpl
adc
insl
je
mov
ja
adc
in
sub
dec
leave
insl
pop
or
xor
adc
pop
lods
or
mov
xor
outsb
mov
mov
push
je
mov
jecxz
cmp
je
push
mov
outsb
pop
or
or
insb
mov
sahf
out
je
dec
jo
sahf
out
outsb
push
gs
or
imul
test
and
push
pop
leave
repz
outsb
fs
iret
repz
jno
gs
repz
inc
js
in
aad
lock
out
je
inc
outsb
fs
testb
gs
scas
idivl
xchg
dec
dec
leave
outsb
lret
icebp
adc
push
rcr
jns
jo
into
gs
jp
jecxz
rol
icebp
cmp
arpl
mov
sbb
js
out
or
sbb
fs
popf
sbb
insb
subl
pop
mov
jecxz
cmp
aas
leave
enter
aam
or
or
movl
int3
jno
ret
fcomp
cmpsb
and
loopne
in
call
imul
loop
addb
pop
mov
fs
and
jo
mov
sbb
inc
imul
mov
imulb
pop
sub
inc
inc
xor
add
lea
jle
out
iret
cld
dec
push
test
subb
pop
mov
test
sbb
sub
add
fdivs
sub
clc
mov
push
test
hlt
inc
push
or
xor
cltd
xor
idiv
jle
push
mov
mov
inc
cmc
test
or
and
out
mov
out
add
or
cmp
jl
and
cmpsb
sbb
add
or
jge
push
adc
in
adc
cmpsb
pop
mov
ret
push
or
add
stc
pop
mov
lock
xchg
pop
sarb
cmp
mov
sbb
add
xorl
mov
fadds
mov
push
rolb
inc
or
rcl
and
jecxz
cli
sbb
push
ja
push
arpl
push
mov
xorb
test
sbb
inc
clc
dec
stc
inc
cli
inc
sti
jb
mov
std
insl
cmp
popa
movsb
dec
movsl
outsl
cmpsb
xchg
loope
jp
imul
stos
push
lods
dec
lods
push
scas
imul
mov
mov
mov
ret
cmp
popa
mov
mov
push
xchg
xchg
icebp
cmp
xor
jae
in
cmp
jb
insl
repz
fs
dec
iret
repz
popa
js
push
cmp
jae
cmp
inc
fidivl
fsubrl
loope
pop
fstp
mov
pop
cmp
xchg
pop
xchg
push
xchg
xchg
loope
push
xchg
inc
xchg
jb
popa
xchg
insl
push
gs
push
cltd
lcall
pushf
pop
popf
xor
cmp
inc
mov
inc
std
shr
mov
repnz
adc
mov
je
inc
repz
sbb
outsl
jecxz
dec
iret
jne
leave
push
cmp
xchg
imul
outsl
into
push
sbb
insb
ret
add
int
jmp
addb
mov
mov
xlat
mov
push
repnz
andb
das
sbb
xchg
jg
xor
rep
and
push
push
pop
mov
fs
mov
adc
jo
dec
push
and
push
xor
sahf
mov
inc
into
or
aas
test
testl
jge
sub
jmp
mov
repnz
jmp
dec
xchg
add
cmpsb
imul
xchg
mov
lods
addr16
xlat
push
ds
fnstenv
cmp
jbe
push
aaa
neg
pop
stos
push
jb
shlb
cmp
je
add
adcl
sar
mov
mov
popf
out
pusha
pusha
push
icebp
sub
fnstsw
hlt
in
testl
aas
mov
loopne
jnp
pop
inc
fsubs
ficompl
cs
lock
or
lock
clc
push
xor
push
das
cld
pop
sar
sarl
push
xor
jge
es
enter
xchg
leave
adc
outsb
sbb
imul
xor
flds
lea
in
sbb
xchg
xchg
int3
adc
mov
adc
pusha
or
repz
mov
not
and
pop
xor
ret
inc
cmp
arpl
xchg
mov
mov
aam
icebp
imul
add
mov
push
mov
or
xchg
pop
test
sahf
pop
mov
fidivl
sbb
repz
js
push
cmp
add
add
inc
push
lock
sub
pop
push
xor
push
nop
pop
cmp
push
mov
cld
out
xchg
push
lds
or
push
push
dec
in
ret
hlt
and
xor
xor
invd
push
adc
dec
push
and
lods
lods
mov
fcoms
or
movl
aaa
and
cmc
mov
dec
mov
insl
cmp
pusha
stos
pop
mov
jp
jbe
and
ljmp
pusha
cmp
or
mov
sub
cmp
dec
push
pushl
pushl
psrlq
sbb
adc
inc
jecxz
mov
or
add
and
xchg
xor
addr16
cmpsb
jp
add
fisttpl
mov
cmpl
xorb
inc
add
mov
into
mov
roll
and
roll
stc
enter
xchg
jl
add
jae
mov
mov
pop
xchg
incb
sub
pop
or
pop
or
dec
orb
dec
cmp
fimull
out
push
adc
jbe
movl
pop
dec
mov
push
incl
add
dec
jnp
cld
imull
pop
xor
repnz
pop
popf
cltd
loopne
jne
inc
rolb
icebp
mov
push
test
das
inc
dec
mov
push
incl
nop
xchg
fwait
loopne
or
int3
les
pop
adc
push
adc
rcl
js
adc
inc
lret
les
sbb
jno
mov
cmp
sbb
and
mov
and
sub
cmp
mov
xor
inc
orl
lret
and
ds
jmp
add
push
or
add
pop
shlb
xor
sbb
pop
dec
lcall
cltd
adc
push
xor
push
lds
xor
jno
int
adc
sbb
gs
cmpl
loopne
push
mov
je
add
or
dec
je
adc
movsl
decl
popa
adc
nop
rol
jmp
iret
lock
repz
push
data16
jmp
cwtl
and
mov
push
cmpsb
pop
cmp
jns
push
je
subb
push
stos
and
sbb
lcall
push
cld
repz
test
mov
imul
lcall
ret
call
pop
dec
inc
mov
fmuls
out
repnz
int
movb
sahf
out
jns
push
jb
gs
xor
fimull
push
test
gs
fs
jg
push
loopne
mov
xor
lret
arpl
in
jmp
gs
out
sbb
cmp
mov
sub
xchg
pusha
popa
fisttps
jae
loopne
sar
inc
pushf
lds
mov
adc
push
ss
js
mov
dec
pop
rcr
stc
aas
sub
jmp
sub
inc
cmp
sub
roll
lahf
add
lock
inc
add
push
daa
dec
insb
faddl
shll
sbb
sbb
mov
ret
test
add
je
mov
mov
push
xor
mov
jl
loop
fcoms
dec
das
call
sti
dec
pop
jne
adc
shll
or
rcrl
lea
mov
inc
stos
into
mov
dec
xchg
push
cmp
mov
mov
clc
add
push
lock
cmp
jge
hlt
test
sbb
jle
popl
xchg
negl
enter
mov
mov
enter
inc
sub
iret
sahf
gs
sbb
call
push
inc
negb
dec
loopne
jnp
rorl
pop
insl
leave
enter
xchg
mov
sub
enter
in
push
adcb
imulw
ret
adc
clc
mov
js
push
or
mov
push
cwtl
xchg
and
dec
outsl
push
test
sub
mov
jne
call
cmp
outsl
jmp
in
cmp
jo
in
popa
out
jns
jmp
gs
cmpsl
jg
cwtl
pop
leave
shrb
jbe
jmp
jae
jae
pop
push
xor
mov
push
adc
jne
mov
cltd
jl
xchg
shlb
pop
push
movsl
sub
fwait
repz
fldcw
xor
pop
ror
or
mov
fldl
cmpsl
aam
jp
add
pop
icebp
and
fstps
shll
inc
jl
mov
xor
lds
add
les
jbe
inc
mov
in
lret
sbb
fistpll
mov
les
inc
xchg
mov
dec
stos
aaa
call
jmp
cmovno
imul
or
and
gs
sub
in
pop
dec
aad
push
popf
push
insl
imul
clc
push
push
ljmp
pop
push
cld
jo
push
lods
adc
ficoms
das
cld
rcll
adc
add
mov
xchg
mov
inc
fsubr
std
ret
mov
out
les
jb
sbb
xchg
gs
popa
enter
lret
loope
push
lret
outsl
int3
outsl
int
into
push
roll
shlb
shll
aam
aad
popa
jae
nop
repnz
outsl
je
xchg
repnz
popa
cmp
xchg
push
call
scas
in
in
in
jns
out
lock
repnz
adc
out
cmp
repz
xor
js
jns
int
lods
test
mov
into
imul
push
rclb
sub
or
adc
cltd
push
pop
jb
dec
lods
pop
push
jmp
cmp
jnp
push
daa
cwtl
stc
push
mov
xlat
cmp
mov
or
fisubl
rcrb
out
sarb
imul
iret
repz
inc
fs
jo
iret
repz
xor
cs
stos
xor
repnz
push
inc
pop
js
repz
fstp
repz
jmp
outsl
imul
cwtl
sahf
xor
mov
outsl
cmc
cmp
repz
sub
in
sub
sahf
insb
jns
out
addr16
popa
insb
jne
pop
xchg
out
inc
lds
loope
fs
jo
sbb
je
push
lahf
outsl
mov
or
push
movsb
jb
cmpsl
mov
gs
lret
mov
xor
mov
mov
sarl
or
jle
int3
adc
enter
mov
dec
push
enter
jns
out
outsb
je
jb
fninit
jae
gs
mov
es
add
pop
fmuls
push
push
adc
rcrl
mov
pop
adc
js
jb
xchg
lods
add
mov
rolb
je
neg
sbb
push
and
push
mov
pop
push
and
sub
push
push
inc
xor
insb
jne
test
push
ret
mov
cmp
aad
cwtd
or
dec
dec
add
shlb
ret
cmpw
rolb
lret
push
inc
xor
push
ds
mov
adc
sbb
js
cmp
xor
imul
mov
sbb
add
cmp
je
adc
or
add
jne
ja
mov
in
lds
pusha
pushf
add
mov
mov
cmp
inc
jmp
outsl
xor
add
push
sbb
je
decl
incl
bound
jp
jmp
mov
int3
push
sub
jmp
push
rorl
dec
les
push
inc
mov
adc
add
cmp
add
push
xor
or
enter
movsb
xchg
in
shll
adc
sbb
mov
cmp
push
pusha
bound
in
lcall
inc
add
sbb
je
adc
dec
sbb
es
mov
sbb
sbb
imul
pop
ret
dec
mov
lea
hlt
push
cmc
dec
push
or
testl
push
push
cs
je
inc
cmp
cwtl
dec
outsb
je
dec
push
pushf
out
xor
outsb
in
addr16
jo
in
jo
xchg
lock
rcl
loope
dec
shrl
jns
cmpsl
jge
test
dec
jo
pop
or
addr16
cmp
dec
aad
jecxz
push
jo
push
xchg
notl
jns
outsb
push
aas
sbb
mov
fldl
scas
mov
cmp
jb
je
popa
xchg
into
iret
repz
insb
sub
aad
cwtl
dec
iret
cmp
jb
cmp
sahf
gs
je
inc
mov
xchg
loope
jae
movsl
dec
cmpsb
popa
pop
sbb
outsb
test
inc
adc
nop
stos
adc
mov
shlb
cmp
aam
sbb
leave
mov
lods
adc
mov
dec
inc
outsl
pusha
shlb
popa
sarb
test
push
xchg
stos
loope
insb
pop
push
orl
mov
and
jp
cs
test
in
mov
mov
pop
loopne
test
push
inc
adc
xor
lock
hlt
push
rorl
iret
loop
pushf
enter
sbb
cmpsl
in
je
lea
pop
mov
add
and
sub
jl
mov
adc
xor
loop
sub
sbb
leave
orb
or
hlt
inc
call
jne
mov
xchg
dec
enter
mov
je
out
pop
add
aam
pushl
movsbl
cmp
je
dec
jmp
add
xor
add
adc
leave
je
mov
inc
inc
jmp
andb
jle
xor
test
and
aas
sbb
test
pop
mov
or
xor
inc
inc
mov
mov
and
mov
push
inc
cmp
jo
mov
out
jmp
enter
enter
sub
shr
adc
mov
or
ficoms
incb
clc
cmp
jecxz
andb
gs
arpl
add
sti
sub
mov
cmp
mov
cmp
inc
adc
cmp
jmp
add
pop
test
cmp
shll
pop
cmp
inc
jmp
push
add
clc
push
mov
mov
inc
inc
test
jne
pop
ret
mov
in
pop
aam
and
jmp
xor
repnz
push
mov
imul
outsb
out
call
jb
mov
dec
sbb
sub
inc
insb
pop
leave
ret
mov
inc
inc
jmp
jnp
sahf
cmpsl
mov
outsl
jae
push
pop
inc
gs
lret
mov
and
fsubs
pop
in
stos
push
xor
xchg
inc
inc
pop
pop
pop
inc
flds
sbb
scas
dec
push
jns
pop
addr16
stos
loope
cmp
insl
cmc
inc
imulb
jb
data16
je
mov
cmp
inc
daa
shrb
lret
shrb
push
inc
jae
mov
mov
or
fadd
xchg
xor
add
dec
leave
scas
inc
cmpsb
je
add
mov
mov
dec
mov
dec
idivl
jae
mov
adc
sarl
ret
inc
lcall
add
dec
push
insb
and
iret
cltd
mov
sbb
mov
out
mov
add
dec
sbb
mov
call
aaa
subl
ljmp
sbb
adc
add
movzwl
sbb
pop
andb
cmp
add
dec
cmp
add
fdivs
cmp
jb
addr16
xorb
repz
cmp
les
sub
inc
pusha
sbb
andb
cmc
shrb
inc
sub
jg
mov
inc
push
ss
push
add
pusha
inc
lret
pop
adc
inc
push
sbb
jg
mov
inc
into
sub
adc
mov
xor
mov
inc
dec
je
nop
jnp
inc
xchg
or
mov
jnp
and
imull
pop
cmp
out
push
jge
lock
mov
sbb
shrl
and
adc
pop
xchg
jne
mov
or
sub
sti
daa
popf
lock
dec
dec
lret
add
push
pop
popa
inc
sti
push
inc
decl
jne
or
aad
scas
bound
push
adc
in
in
outsl
mov
add
out
push
shll
xchg
mov
ds
pusha
leave
movsl
inc
sbb
push
push
mov
inc
mov
mov
pop
jecxz
and
jnp
push
mov
scas
loope
dec
inc
imul
stos
dec
and
outsb
imul
push
add
clc
jle
jmp
push
push
and
pop
jne
jne
bound
mov
pop
cmp
test
xor
mov
repnz
jmp
jecxz
in
xchg
ja
in
lock
dec
push
repnz
or
test
inc
daa
or
repz
add
cmp
je
mov
cltd
or
shll
push
outsl
push
cmc
sub
xor
jp
js
insl
mov
int
bound
xlat
stos
cmp
popa
jo
pop
data16
pop
push
in
inc
or
stc
clc
cwtl
sub
ljmp
clc
mov
ss
gs
aad
mov
in
dec
pushf
jmp
sbb
xchg
loopne
push
sbb
lret
pusha
loopne
gs
lea
in
in
arpl
push
imul
cmp
addr16
aaa
mov
int3
add
into
push
addr16
out
jae
jecxz
push
fs
insb
push
pop
xor
shrl
cmp
xor
fmull
mov
pushf
xchg
and
dec
sbb
dec
int
inc
mov
push
rclb
mov
mov
and
add
or
add
jno
push
add
xchg
std
or
jl
cmpsb
repz
mov
lea
sbb
sahf
out
push
outsl
ja
inc
jecxz
mov
test
popa
push
iret
sti
jns
pop
pop
mov
xor
stc
addb
stc
popf
stos
cltd
sbb
decb
js
std
cmp
rcrl
insb
insb
inc
mov
arpl
inc
mov
pop
jmp
popa
je
movsl
add
lea
nop
cld
insb
push
adc
imul
mov
pop
pushf
cs
mov
shlb
mov
add
idiv
add
xor
xor
inc
cmp
jl
mov
fnstenv
stc
xchg
jb
into
inc
out
lret
imul
out
negl
add
mov
mov
lea
sti
jb
cmp
mov
add
sub
pop
into
jae
shll
or
sbb
dec
or
pop
xor
sbb
sbb
sbb
mov
iret
inc
repnz
xor
mov
cmc
fildl
aam
dec
repz
pop
jbe
fiaddl
js
xorb
sahf
add
jp
inc
mov
scas
push
je
mov
xchg
mov
xorl
inc
inc
adc
mov
stos
je
inc
cmp
imul
jge
pushf
cmc
jmp
scas
or
jnp
leave
xor
push
add
ror
sbb
xor
lahf
lret
cmp
push
cmc
cmp
lahf
push
mov
cmp
jb
out
xchg
insl
insb
add
adc
out
ret
int3
jmp
pusha
jns
push
dec
int3
push
sbb
in
push
or
stos
or
push
push
out
insb
into
mov
in
inc
cmp
sub
jo
fstps
mov
cwtl
movsl
sbbl
clc
rclb
dec
jns
jmp
adcl
mov
inc
stc
push
dec
lods
push
or
ret
mov
jb
sbb
jo
int
rcll
pop
aam
cmp
fcomp
pushf
lahf
gs
pop
cmp
pop
and
and
out
inc
cmpsb
cmp
mov
icebp
mov
jae
xchg
jb
lods
jne
dec
mov
jb
jbe
cmp
and
sbb
push
jl
jbe
jbe
jne
jne
push
xchg
aam
les
jne
jbe
cmp
mov
js
js
js
xchg
loope
js
js
js
js
jo
sbb
ja
ja
ja
ja
js
push
xchg
mov
ja
ja
loope
cmp
dec
ja
ja
ja
ja
sbb
xchg
ja
jbe
jbe
jbe
ret
loope
cltd
js
jns
jns
sbb
xchg
mov
test
inc
jbe
xchg
loope
jbe
jbe
jbe
jbe
jbe
pop
aaa
push
cwtl
jbe
sahf
jne
repz
xchg
jne
jne
jne
pusha
jne
cmp
pop
jne
jne
jne
jne
jne
xchg
loope
jne
jne
jne
jne
jo
sbb
jne
je
je
je
je
push
xchg
fdivs
les
ret
loope
cmp
je
je
je
sbb
xchg
jbe
bound
inc
imul
jo
cmp
loop
push
xchg
loope
jns
jns
jns
jns
cmp
mov
lret
pop
xchg
add
insl
arpl
xorb
pop
inc
pop
push
out
sub
inc
pop
rdmsr
inc
iret
sarb
pop
cmpsb
add
add
js
jb
dec
popa
outsb
fs
gs
add
outsl
imul
outsb
lds
rcll
sarb
xchg
cltd
jae
je
into
outsb
mov
jne
cmpsl
test
ret
lret
mov
sbb
mov
jb
outsb
je
add
data16
gs
dec
add
loope
ja
jae
insl
jb
and
arpl
fs
cmp
leave
je
insb
insb
movl
add
daa
mov
mov
mov
jb
in
jmp
add
mov
inc
leave
mov
out
imul
lret
dec
push
std
in
in
push
dec
add
imul
roll
aad
js
imul
fisttpl
je
push
daa
shrl
dec
movsb
lret
jae
jbe
push
shll
push
push
inc
push
push
cs
push
jge
shrl
mov
add
bound
arpl
mov
pop
rolb
push
add
fstps
mov
inc
outsl
mov
pushf
jge
bound
xchg
sub
add
imul
ror
shll
and
cs
add
mov
dec
xor
inc
mov
dec
jo
sub
das
jecxz
push
jb
out
xchg
rorl
add
sub
xor
sbb
insl
dec
gs
add
inc
add
fsubrl
loope
out
mov
inc
mov
insb
xor
jmp
pop
je
shlb
jo
jp
push
popf
add
je
add
dec
xor
cwtl
mov
outsl
insb
jne
outsb
mov
mov
add
int3
inc
insl
rorb
push
rolb
dec
push
into
add
scas
jp
xchg
dec
jae
push
gs
mov
xor
mov
mov
cmpsb
or
fs
test
mov
sbb
push
mov
enter
or
inc
bound
push
xlat
mov
das
sahf
dec
outsl
fwait
cmpsb
push
popa
jae
push
jnp
ds
push
jne
lock
xchg
jle
push
imul
outsl
dec
mov
jns
imul
add
pop
push
pop
psraw
jp
cmp
cmp
push
push
loope
push
outsl
cs
xchg
pushf
add
popf
fmull
add
outsl
mov
or
outsl
outsb
gs
std
xchg
adc
outsb
imul
push
xor
or
jae
hlt
mov
lret
jne
dec
lret
jmp
cld
arpl
lods
inc
sub
lcall
xchg
add
and
mov
push
fs
inc
cmp
sub
lcall
lret
lcall
pushw
imul
out
push
data16
pop
or
outsb
movsb
shl
mov
mov
sub
mov
insb
popa
shlb
inc
push
dec
inc
dec
dec
xor
xchg
cmp
xor
mov
and
enter
adc
xor
insb
popa
xor
dec
fsubs
mov
mov
dec
cmpsb
sarl
inc
imul
lret
add
outsb
push
add
jo
jne
mov
imul
mov
mov
jp
xlat
pop
dec
ficomps
or
sarb
hlt
adc
movl
out
das
xor
mov
add
leave
mov
mov
sub
clc
mov
rol
xlat
test
pop
cmp
add
cmp
imul
cmpsl
test
sub
mov
cld
mov
fcmovb
cli
mov
mov
adc
add
stos
mov
into
icebp
test
ror
ret
into
mov
sub
clc
aad
orl
xchg
imul
mov
ret
test
fcmovne
cmpsb
sub
mov
enter
lock
iret
add
mov
mov
out
add
lret
cli
sub
std
aad
mov
fbstp
clc
mov
fsubs
int
mov
leave
add
mov
aam
sar
cmc
dec
scas
and
pusha
jge
in
jmp
mov
lret
jae
fcmovne
jmp
jecxz
insl
cmp
addr16
jecxz
cmp
push
lret
push
mov
sbb
outsb
shll
ret
pop
daa
pop
arpl
mov
or
mov
imul
sub
inc
pushf
gs
or
push
and
inc
and
cmp
in
jno
sub
add
data16
mov
add
loop
les
cmp
jbe
mov
and
mov
shl
lret
pop
cs
add
ret
repnz
and
aad
pop
loop
str
dec
push
push
add
mov
jb
outsb
xchg
fcmovnu
dec
jno
or
sub
inc
pop
imul
dec
and
dec
pop
jb
or
xor
mov
jae
jae
pushf
adc
mov
adc
adc
adc
jg
xor
jne
test
das
adc
dec
ljmp
adcb
rcrl
fnstcw
movsl
lea
dec
je
sbb
insb
je
ret
loopne
xor
pop
add
movl
add
add
lock
add
addl
add
xchg
fmull
scas
pusha
jno
jo
mov
btc
jo
cs
add
mov
cld
insl
inc
fcmovnb
ss
jbe
jb
gs
cmp
mov
cmp
fbstp
pop
lods
fcompl
xor
jb
inc
rcll
insb
ret
jns
sub
fsubrl
scas
int
jns
or
pop
sahf
jge
or
and
or
faddl
sub
aam
sub
add
cltd
pop
push
sbb
fidivrs
xchg
leave
repnz
adc
xchg
mov
sub
cli
cmpsb
in
push
push
xchg
adc
and
fs
inc
sbb
lds
cmpsl
add
push
xchg
shll
in
loope
or
popa
sbb
das
int3
push
push
dec
xor
add
lret
popa
cltd
pop
adc
or
add
add
or
aaa
repz
outsl
cmc
inc
push
sub
sbb
pop
jbe
xor
sbb
add
mov
in
pop
adc
enter
or
roll
xchg
mov
stc
out
adc
out
in
sub
sbb
pop
scas
pop
push
inc
ljmp
lcall
repnz
data16
xor
cli
gs
push
cmp
adc
sub
inc
push
adc
fisubl
xor
fucom
cltd
pop
sbb
rcrb
xchg
push
test
lods
fistl
fnstcw
jo
pop
push
insl
pop
stc
cmp
jb
je
or
mov
mov
add
outsb
loope
jnp
cli
mov
push
xchg
fidivl
dec
lea
mull
and
loope
xor
sbb
in
sbb
sub
push
xchg
sub
fwait
sub
push
adc
dec
add
xor
lds
outsl
dec
mov
mov
adc
mov
in
push
aaa
jns
imul
adc
pop
push
jl
out
add
iret
jae
push
push
sub
sbb
sarl
negl
pop
aas
in
jl
and
dec
cwtl
xchg
fistl
sbb
xchg
repz
xor
inc
std
push
and
sbb
mov
push
and
sub
insl
jmp
jl
xor
jmp
ja
aaa
ret
xor
jo
add
mov
mov
mov
or
cmp
scas
int3
daa
dec
inc
popa
hlt
or
arpl
add
cs
xor
sub
cmc
pop
add
repz
jno
jns
out
cmp
sbb
add
scas
into
dec
shlw
mov
pusha
add
dec
add
or
xchg
sub
arpl
sbb
gs
dec
jae
mov
jns
sbb
dec
inc
cmp
pop
jo
inc
lock
add
inc
cs
or
out
adc
pop
mov
sub
ret
adc
add
les
cmp
daa
inc
mov
add
add
add
add
add
add
add
add
cmp
add
xor
add
xor
add
inc
mov
add
add
rorb
movsl
dec
add
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
mov
add
mov
add
add
xor
add
add
add
push
mov
add
add
add
add
add
add
add
pusha
mov
add
add
add
push
mov
add
add
je
add
add
add
incl
add
add
add
add
add
jmp
add
jl
add
test
add
incl
mov
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
dec
xor
cs
insb
add
add
add
je
gs
arpl
popa
jo
add
add
add
inc
push
xor
cs
insb
add
add
inc
gs
imul
arpl
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
pop
xor
xor
cmpsl
sub
mov
add
mov
cmp
stc
mov
jge
add
jae
xchg
mov
js
and
add
loope
add
push
sub
dec
add
pop
fcmovnb
mov
add
xlat
loope
jo
imul
jmp
cmp
mov
insl
mov
clc
jbe
pop
push
test
ret
pop
push
push
push
call
pop
sub
inc
add
sahf
add
add
mov
mov
mov
add
sbb
pusha
or
stos
pop
cwtl
add
nop
cmpl
je
mov
test
je
mov
mov
mov
or
cmp
sbb
das
add
ret
or
add
push
push
call
xchg
nop
mov
mov
inc
push
push
iret
ret
mov
add
mov
cwtl
jne
mov
fwait
cltd
call
je
mov
or
push
mov
jae
jnp
xchg
stos
sbb
outsl
mov
lea
fnstcw
jmp
test
je
push
and
mov
push
aas
pop
test
and
dec
sbb
or
enter
pop
push
rcrb
push
lahf
mov
test
jae
jmp
ret
push
pop
ficomps
add
adc
or
dec
inc
mov
add
movb
add
inc
xchg
sbb
mov
or
sbb
pop
push
call
cs
mov
xor
pop
pop
pop
pop
mov
push
mov
add
clc
inc
sbb
pop
sub
inc
or
push
call
or
push
add
jle
add
xor
add
filds
add
mov
add
jne
test
add
ret
in
movb
mov
es
leave
add
mov
add
das
inc
pop
or
ret
je
mov
mov
add
mov
sub
mov
lods
mov
add
lods
add
pusha
aas
mov
sub
je
movw
xorb
je
data16
add
mov
and
decl
sti
shr
sarl
add
add
mov
add
dec
shr
mov
mov
add
mov
or
cwtl
and
add
or
hlt
mov
sti
out
pusha
jbe
push
call
rorl
cmp
or
or
jmp
mov
push
clc
movzwl
test
xchg
fiadds
subl
pop
adc
push
clc
cmp
jge
mov
inc
movzbl
add
sub
mov
push
dec
mov
jne
cmp
mov
or
rclb
les
xchg
push
add
add
fmuls
add
pop
pop
inc
adc
xor
mov
push
cwtl
aaa
call
xor
mov
subb
sub
pushw
push
push
call
or
sbb
sub
es
or
xchg
mov
in
inc
ja
stc
and
mov
jae
push
xor
dec
or
sar
rep
add
add
cmpsl
inc
adc
je
mov
shrl
xor
stos
pop
cmp
mov
push
dec
ret
jne
ss
push
mov
inc
add
xor
push
push
push
adc
enter
mov
jge
or
cwtl
mov
enter
rcrb
jg
mov
pop
and
inc
dec
hlt
push
jae
sub
adc
mov
ret
in
call
loop
xchg
je
mov
mov
test
call
sbb
ss
cmp
jne
mov
mov
jmp
mov
push
inc
add
shl
sub
loopne
pop
pop
pop
and
cmp
mov
and
fcmovnbe
pusha
or
xchg
insl
leave
cmp
je
add
add
ret
clts
dec
mov
es
call
inc
push
jmp
call
testb
xor
fisubrs
ret
xor
jbe
jbe
sbb
rcll
or
addl
mov
testb
xchg
out
lock
ss
call
mov
or
adc
bound
js
jne
in
popf
cmp
adc
push
adc
or
mov
imul
cmpsl
repnz
mov
pusha
inc
push
bound
and
push
xchg
insb
and
aad
inc
es
mov
xchg
cmp
pop
pop
rclb
cli
mov
add
lods
ss
rcrb
ljmp
xor
icebp
mov
int
pushf
inc
lret
sbb
dec
or
dec
adc
repz
fwait
int
xchg
sub
add
adc
jl
sbb
shr
pop
clc
inc
loope
push
lea
sub
cmpb
sti
push
mov
test
sub
mov
scas
mov
cmp
out
dec
jnp
mov
lret
and
mov
or
ds
jmp
lea
add
in
leave
xor
pop
loopne
stc
xchg
inc
jo
insb
rcl
add
imul
and
jb
jb
arpl
add
je
add
and
test
gs
and
add
and
je
bound
adc
push
mov
dec
sub
or
popa
insb
ret
jns,pn
sub
push
scas
push
mov
add
jne
xor
add
jae
popa
addr16
outsl
js
jle
or
je
sub
outsb
gs
cmp
sbb
inc
js
je
cwtl
iret
aaa
mov
jne
add
fs
add
outsb
inc
lds
inc
pop
outsl
insb
sbb
fbstp
jne
shr
jl
mov
jbe
sahf
ret
push
lcall
mov
mov
jmp
xchg
mov
jp
sbb
enter
cli
pop
add
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
shlb
add
add
push
mov
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
