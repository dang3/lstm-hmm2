sbb
add
mov
lds
mov
adc
xchg
pop
add
jmp
dec
pop
dec
dec
cmp
rorl
adc
jnp
and
push
mov
out
ret
push
lret
mov
push
mov
add
test
xchg
popa
sub
pop
sahf
xor
push
dec
sub
movsl
les
xor
or
cmpsl
test
outsl
sar
mov
sahf
rcrb
xorl
lods
sub
dec
das
sub
and
popa
test
mov
repz
idivl
adc
add
adc
and
pop
mov
add
xlat
enter
pop
add
out
lahf
xchg
cli
nop
mov
fs
pop
dec
mov
shll
xchg
stos
nop
or
xlat
rorl
adc
push
cmp
sbb
lods
push
xor
leave
and
push
sti
inc
mov
cli
pushl
xchg
movsb
jne
int
cmc
fcompl
push
mov
cli
cmp
sbb
dec
inc
inc
cmpsl
lock
in
cmp
jecxz
mov
repnz
scas
jae
jmp
orl
push
fbld
cltd
mov
pop
jns
push
cmp
sub
cmp
cmpsb
mov
enter
push
sbb
add
lods
jl
test
xor
cmc
add
imul
mov
jb
push
mov
notb
rcll
scas
mov
lods
sahf
mov
fpatan
sbb
add
cs
icebp
pop
ljmp
lret
out
out
lods
mov
fisubs
jl
dec
xor
rcll
push
jg
lcall
inc
inc
sub
mov
add
jge
jl
xor
cltd
pop
xchg
add
and
mov
jne
in
mov
loop
les
data16
mov
pushf
xchg
or
int
pusha
add
sahf
in
and
jg
lret
adc
jne
jmp
insb
xor
lret
cld
dec
stc
inc
out
jg
jg
cwtl
mov
fnsave
adc
lcall
push
sbb
xor
in
cmc
mov
sti
sbb
shr
add
cwtl
mov
fiaddl
test
inc
xchg
enter
pop
aad
stos
sbb
mov
xor
mov
adc
sbb
push
mov
sub
cltd
jns
cmp
subl
and
test
in
lods
popf
pusha
negb
sbb
xor
inc
xor
sub
pop
cmpb
arpl
push
xchg
mov
cmp
repnz
mov
mov
addr16
in
test
std
adc
jl
mov
add
fistl
imul
sbb
jmp
or
adc
xchg
add
dec
jae
mov
mov
ljmp
dec
dec
outsb
out
lahf
cmpsb
push
imul
cmc
push
idivb
imul
pop
sbb
sub
mov
adc
rcrl
test
call
or
sub
out
xchg
jae
mov
insb
xchg
jno
xchg
push
pop
popl
or
push
sahf
sbb
jae
jge
addr16
out
cmp
mov
xchg
pop
pop
xchg
out
xor
out
leave
mov
jge
hlt
pop
jnp
and
faddl
sbb
mov
dec
jnp
cmpsb
mov
mov
push
mov
rcrb
lcall
daa
mov
outsb
fistl
imul
cmp
mov
shrl
daa
push
dec
adc
fmull
xor
sbb
xchg
push
or
aas
adc
cmp
outsb
xchg
pop
or
cmc
push
mov
test
testl
and
in
inc
test
dec
ja
add
xor
xor
xchg
add
aam
cmpsb
and
cmc
clc
xchg
push
outsb
push
int
inc
pop
push
repz
and
xor
hlt
adc
or
mov
dec
pop
push
lret
xchg
addr16
cli
nop
jmp
pop
sbb
enter
stos
repz
iret
mov
xor
loope
cltd
lcall
jo
bound
lahf
sarb
push
sub
dec
and
into
cmpsb
mov
in
cmp
out
inc
out
pop
dec
popa
out
das
pusha
mov
subb
cmp
test
loop
pop
aad
cmp
pop
pop
jb
push
adc
xor
lods
lahf
shrb
cmpsb
or
lock
jp
xchg
stos
push
iret
outsl
and
dec
dec
and
sub
repnz
dec
add
repz
inc
mov
xchg
mov
lods
iret
mov
int
xchg
into
and
push
dec
out
insb
add
mov
push
jl
loop
das
cli
adc
fidivrs
scas
xor
mov
mov
into
repz
jnp
out
and
sbb
shlb
sub
mov
or
add
mov
add
mov
push
push
cmpsb
pushf
idivl
out
xor
or
xor
xchg
mov
fwait
dec
cmc
mov
rorl
mov
jl
daa
stc
pop
mov
dec
push
ljmp
ds
or
adc
sub
push
repnz
xor
xor
sar
bound
pop
ficoms
push
mov
cmpsb
jle
push
sub
cld
cli
cwtl
xor
and
popa
pushf
es
call
test
in
xchg
nop
repz
and
pop
out
shrb
aam
mov
ja
adc
scas
lahf
pushf
inc
pop
cs
aas
push
aad
jmp
loop
imulb
cs
push
add
jl
scas
gs
aaa
pop
and
loop
ss
mov
dec
or
pop
setae
push
push
mov
mov
stos
fsubrl
push
push
jnp
out
aas
or
cld
movsl
in
sbb
cli
ret
sub
push
mov
das
inc
mov
adc
es
es
jns
cmp
inc
mov
lods
lds
dec
sub
pop
push
push
push
loope
ret
dec
pop
sbb
ljmp
add
outsl
ret
stos
mov
hlt
jo
and
inc
iret
mov
jno
xor
push
jno
fmuls
pop
cmp
jnp
dec
xchg
test
jb
adc
je
xchg
insb
inc
xchg
jns
mov
or
dec
or
in
xchg
dec
xchg
add
cltd
mov
and
mov
adc
cmp
and
lock
pop
fwait
pop
lret
jne
popf
sub
in
mov
or
mov
jle
lret
mov
ljmp
lea
add
arpl
fwait
jo
xchg
inc
lret
data16
negl
rorb
mov
sbb
mov
adc
mov
inc
flds
sbb
jmp
sub
push
cmp
aaa
mov
cmp
repz
shrl
push
addr16
lods
ret
jb
mov
inc
dec
xchg
adc
jecxz
fs
data16
push
test
je
adc
pop
jmp
leave
jbe
inc
mov
mov
ret
cmp
insl
add
cmp
sub
push
dec
leave
test
sbb
dec
mov
in
rclb
in
xor
sub
int3
sub
idivl
insl
inc
mov
mov
into
push
call
or
pop
push
movsl
shrl
cwtl
aam
test
add
push
pop
cwtl
jecxz
fsubrs
adc
jo
jnp
add
cmc
xchg
shr
or
fucomp
xor
mov
ja
out
sub
inc
andb
je
mov
imul
mov
ds
sbb
daa
pop
and
or
int
sarb
dec
mov
inc
cmpsb
fldenv
push
mov
jg
adc
imul
cmp
aaa
adc
aad
dec
mov
inc
jns
cltd
or
pop
rep
mov
push
fcomps
push
int
clc
aam
lcall
push
sbb
scas
adc
sbb
mov
test
stos
inc
pusha
sub
jmp
dec
lret
adc
cmp
jns
mov
rcll
stos
rol
mov
jno
stos
inc
xlat
xchg
cmpsl
out
leave
in
int3
mov
std
jno
lcall
jle
adc
sbb
ljmp
mov
push
popa
pop
jns
sbb
fadds
xor
xchg
mov
jbe,pt
sub
xor
es
fadd
jb
xchg
pop
aam
cmpl
shrl
hlt
gs
xor
loopne
add
push
jae
mov
add
scas
adc
mov
ds
mov
add
lods
push
sub
popa
cmp
cmp
pop
mov
cmp
lock
testb
add
xchg
inc
and
popf
pop
pop
movsl
popf
jbe
pop
or
jno
int
fwait
push
xor
pop
adcb
rcl
out
mov
das
pop
lds
dec
testl
rorl
cwtl
mov
push
subb
fbld
inc
cltd
or
es
add
xchg
adc
test
imull
data16
leave
dec
push
xchg
ds
jae
mov
fbld
mov
inc
push
and
lcall
rcr
mov
push
sub
cmc
cmp
adc
cmpsl
cmp
stos
notl
fdiv
xchg
xor
adc
mov
mov
inc
jl
xor
aaa
or
repnz
int3
sbb
pop
xlat
repz
xor
outsb
xchg
stos
adc
lds
jle
sub
cmp
pusha
pop
inc
adc
push
sub
insl
jb
or
scas
sub
rolb
ja
inc
adc
pop
iret
push
adc
fwait
lret
inc
imul
fsubl
xchg
xor
push
push
push
jb
push
cli
ljmp
pop
rolb
pop
imul
mov
stos
dec
pop
lea
mov
inc
jne
gs
jg
xchg
jg
cmp
xor
mov
cli
mov
jl
lds
pop
scas
fadds
mov
stos
test
pop
scas
adc
xor
add
xchg
mov
cmp
ret
mov
and
add
ss
cmc
xchg
int
xchg
add
jge
je
push
fwait
adc
xlat
loopne
push
inc
fwait
mov
je
inc
mov
movsl
inc
insb
inc
mov
lock
mov
cmpsb
cld
adc
lcall
ret
push
sbb
mov
popa
adc
mov
ror
enter
mov
mov
fldenv
cli
outsb
dec
fisubrl
xchg
pusha
enter
inc
cmpsb
or
dec
cmp
push
xor
add
clc
sbb
mov
mov
or
fildl
jle
enter
jae
and
mov
cmp
pop
cmp
push
ret
popa
repnz
xchg
test
mov
sub
cwtl
ss
push
pop
imul
sbb
ds
sar
push
in
hlt
cmc
sub
lret
mov
add
test
insl
push
stc
pop
add
std
pop
shlb
clc
in
mov
and
out
addr16
mov
add
and
lret
xor
adc
xchg
mov
lret
jl
shr
jne
es
add
push
ss
xchg
addr16
test
or
cmp
cmp
jb
mov
or
mov
and
in
and
fcoml
mov
xor
inc
out
jp
imul
test
lahf
repz
gs
xchg
cld
lcall
cmp
xchg
pop
push
cmpl
ret
cld
int3
out
shll
and
lea
idivb
push
xchg
lods
and
mov
add
cli
xor
add
outsb
jb
xor
xor
sbb
or
cmpsl
or
push
xchg
mov
cmp
ljmp
cwtl
pop
fsubrl
mov
and
push
imul
sbb
jmp
cmp
sbb
ss
je
mov
dec
push
test
addl
pop
pop
arpl
cmp
stc
loopne
popf
xchg
push
dec
clc
out
fldt
aaa
mov
stc
adc
ret
xchg
pop
mov
pop
sbb
inc
sbb
jns
dec
lods
mov
mov
gs
pop
rorb
fdiv
adc
push
push
fcoms
clc
xchg
lock
fcompl
xor
mov
fs
cli
sub
mov
in
dec
mov
out
testl
rorb
imul
adc
adc
sub
fwait
into
jl
jns
adc
xchg
mov
cli
stos
test
loope
add
call
mov
cwtl
cmpsl
jnp
push
inc
pusha
fiadds
sub
shlb
jl
out
adc
out
pop
imul
aam
or
cltd
inc
mov
mov
xor
test
and
mov
push
add
adc
or
or
fbld
std
repz
bound
mov
mov
mov
mov
push
fucomip
and
dec
cmpsb
lcall
pop
js
jge
pop
sarb
inc
mov
pop
cli
dec
ja
sbb
and
lds
xorl
push
fiadds
or
mov
pusha
push
add
xchg
mov
or
mov
dec
aaa
aam
aas
inc
adc
cmpsb
out
mov
adc
loopne
bound
inc
sub
sub
push
pushw
sahf
scas
sahf
inc
mov
push
leave
add
stc
sub
mov
jge
xlat
test
test
es
js
dec
and
das
std
adc
push
fbld
or
sti
push
push
pop
repnz
mov
dec
outsb
cmp
fstl
jne
lock
inc
push
shll
jno
mov
fnstcw
sbb
popf
in
jae
mov
jbe
inc
jmp
hlt
xchg
cmp
sub
out
and
push
mov
jmp
sbb
inc
out
cmp
test
push
pop
adc
je
sbb
int
cvtps2pi
loopne
stc
and
inc
mov
sub
sbb
out
dec
xchg
stos
mov
bnd
pop
repnz
sub
stc
sub
or
and
rcrb
scas
mov
vmptrst
and
insb
imul
or
mov
pop
pop
movsb
xchg
pop
enter
aas
inc
jmp
xchg
pushf
jnp
or
pop
xorb
lcall
lahf
stc
jg
dec
imul
lret
test
add
std
or
push
adc
cmpsb
les
sbb
mov
test
ljmp
orl
cs
cmp
or
shl
dec
in
pop
iret
pop
imul
iret
jmp
inc
mov
mov
cmpsl
imul
stos
xchg
xor
sub
or
jb
mov
aaa
in
mov
push
jns
or
dec
int3
sub
xor
pop
mov
inc
dec
mov
pop
pop
xchg
sub
jge
and
adc
jo
xchg
jae
xlat
mov
ds
lods
pop
test
mov
xor
movsb
add
rcrl
jo
rclb
mov
shrl
mov
in
pop
add
aaa
lret
xchg
leave
sbb
out
cltd
pusha
xchg
adc
jns
loop
push
mov
dec
and
sarb
pop
lea
sub
dec
xor
xchg
adc
lods
sbb
push
xor
inc
negb
xor
mov
lods
push
add
rcrb
and
cmp
mov
subb
pop
push
jo
lret
test
push
stos
imulb
mov
mov
mov
sbb
or
clc
imul
mov
mov
mov
in
je
xchg
test
pop
mov
mov
cmpsl
sarl
jne
inc
pop
sbb
adc
cmpl
fucomi
sub
push
xlat
test
sbb
insl
add
sub
jp
outsb
jle
mov
mov
shrl
call
cmpsl
and
sub
scas
inc
sbb
adc
fnstsw
dec
mov
mov
in
push
adcl
xchg
push
add
mov
mov
add
cmpsb
lea
inc
fimull
push
into
or
adc
mov
in
mov
or
and
ja
inc
cmpsb
jo
mov
lods
outsb
xor
enter
jecxz
shrl
push
push
shll
loope
aam
mov
sbb
xchg
xchg
mov
fcomi
mov
push
sti
add
movsw
xchg
test
jmp
jbe
sub
test
push
mov
inc
pop
lret
divb
clc
cld
jp
loope
stos
pushf
and
mov
fnstsw
pushf
mov
call
stos
and
adc
das
test
daa
insb
ror
or
into
out
notl
rol
inc
mov
sub
imul
dec
sbb
jns
mull
push
in
jl
jne
loope
in
sub
je
dec
pusha
cmc
ds
or
ljmp
xchg
clc
jae
mov
sbb
data16
std
mov
jecxz
or
inc
ljmp
out
mov
add
xchg
inc
hlt
pop
and
je
mov
xor
sub
int3
lcall
fcomp
rol
and
sbb
test
jmp
mov
dec
clc
shl
aas
and
mov
xlat
ficoml
dec
push
stos
sbb
xor
icebp
dec
inc
jne
out
jnp
mov
sbb
fmuls
inc
rolb
add
int3
mov
aas
and
fcomps
adc
arpl
cmp
lret
xor
gs
mov
data16
xor
xchg
inc
mov
inc
sub
aas
dec
or
lock
jbe
enter
aad
popa
ficoml
and
in
push
xor
add
sarl
enter
mov
rolb
das
sub
inc
ss
mov
or
add
mov
push
jmp
call
jmp
inc
cwtl
test
fbstp
out
pop
dec
loope
xor
ret
pop
nop
and
push
dec
shll
insl
clc
imul
hlt
outsl
repnz
jp
adc
into
pop
mov
cmpsb
mov
xor
popf
mov
jo
inc
orb
jl
clc
scas
add
cmp
loope
inc
mov
test
xchg
test
add
fcompl
ljmp
jnp
daa
js
xchg
scas
lea
adc
inc
sub
dec
jg
lods
xlat
dec
sti
in
mov
xrelease
in
loope
fnstenv
mov
lea
jge
push
adc
test
sub
addr16
outsb
cld
jecxz
jo
cmp
xor
nop
data16
or
adc
ja
je
sbb
fs
fsubr
aas
push
jp
xor
sub
mov
in
xchg
sbb
push
xor
in
inc
cmpsb
hlt
mov
rcl
cli
jp
arpl
and
adc
fsubr
push
stos
inc
sub
sub
mov
add
push
mul
call
mov
adc
stos
fcmovne
mov
in
mov
cwtl
mov
push
push
imul
in
mov
flds
add
stos
push
cmp
test
pop
jno
iret
inc
jb
lcall
xchg
scas
popf
sbb
outsb
cmp
fwait
pop
subl
dec
xor
pop
xor
jne
test
lea
mull
sub
loop
push
hlt
pop
xchg
scas
pop
mov
jecxz
in
aaa
xor
jb
mov
and
out
xor
add
push
out
lds
dec
fnsave
mov
das
out
icebp
test
mov
js
push
leave
scas
in
ficompl
in
lahf
enter
xchg
mov
add
flds
popf
subl
faddl
push
jp
lock
jmp
bnd
iret
and
xchg
add
dec
adc
sti
inc
mov
dec
pop
mov
push
sbb
mov
jns
int
in
and
mov
movsl
popa
jo
setp
loop
sbb
lea
sarl
jbe
or
loopne
jo
mov
cmp
jno
lea
mov
inc
fidivl
in
jno,pt
in
dec
pop
sub
jecxz
rorb
xchg
int
out
add
add
fbld
mov
xchg
lods
inc
roll
mov
lock
cmp
jge
xor
push
pop
xor
icebp
xchg
scas
push
mov
jo
mov
mov
fdivs
int
roll
sbb
das
and
push
mov
push
mov
test
xchg
pushf
aam
ret
mov
imul
push
icebp
fdivrp
xor
cld
ss
roll
mov
xchg
dec
pop
pop
inc
adc
lret
test
popf
xor
sbb
fistpl
das
sbb
push
cli
dec
test
in
aas
in
xlat
inc
sahf
test
scas
cld
mov
pusha
mov
icebp
and
pop
movsl
pop
jecxz
sub
adc
add
cltd
sub
xchg
dec
test
in
xor
push
xor
pop
aam
and
roll
inc
pop
int3
xlat
stc
push
sbb
insb
loop
push
bound
and
aam
xor
pop
ds
and
pop
or
fildl
push
dec
popa
mov
scas
jnp
push
push
les
inc
jo
and
fisubrl
mov
fcompl
or
mov
cmc
mov
arpl
loope
lea
int3
xchg
lea
sub
repz
mov
push
and
call
stos
cmp
mov
jns
mov
loopne
sbb
idivb
notb
fs
psubusb
xchg
stc
mov
shl
mov
data16
mov
dec
cmpsl
push
dec
dec
out
movzbl
fs
mov
lods
mov
dec
adc
sub
sub
divb
ds
cmc
dec
mov
out
pop
push
test
les
mov
pop
dec
pusha
std
shr
popf
int
jo
mov
mov
add
mov
dec
sbbb
in
jge
mov
adc
xor
push
jp
push
pop
adc
loop
adc
lret
add
out
sbb
jmp
or
stos
xchg
loop
dec
push
dec
shl
test
stos
gs
or
clc
fistl
stos
enter
arpl
and
hlt
aas
gs
and
les
inc
inc
mov
push
xor
jno
repz
add
xlat
or
adc
out
lret
daa
imul
lods
aam
aam
dec
js
adc
add
add
mov
test
fisttpll
std
lret
cmp
lret
or
and
shll
xor
and
sub
cmp
cmp
bound
mov
mov
pusha
fnstcw
and
pop
push
aad
cmpsb
xor
stc
mov
sysret
push
push
mov
pop
jo
sub
bound
dec
push
cmpl
or
into
xchg
or
repz
loopne
fwait
imul
sbb
imul
push
and
jecxz
les
pop
sbb
pop
notb
xorl
pop
test
and
push
xchg
or
mov
sbb
das
xchg
stos
or
jle
xor
call
and
lret
data16
mov
pop
mov
xchg
std
outsb
addl
xor
sbb
into
lcall
fistpll
cmp
push
jg
jmp
jp
sub
mov
cltd
gs
mov
sarl
mov
dec
loope
cmpsl
dec
push
pop
imul
popf
std
lahf
mov
insb
hlt
inc
btc
pop
movsb
xchg
dec
lret
sbb
mov
dec
jnp
dec
xchg
xor
sbb
xchg
mulb
push
sub
pop
fidivrl
ljmp
push
ja
fmuls
rcrl
fcompl
sub
das
pop
mov
push
jo
push
int3
jns
xor
pop
enter
cmp
inc
icebp
or
and
or
push
dec
int3
cltd
lahf
mov
mov
sarl
enter
jecxz
cmp
dec
mov
push
stos
mov
jmp
mov
movsl
pop
pmaddwd
jne,pt
jbe
orl
push
lret
lahf
dec
mov
or
es
xchg
pop
add
push
xchg
sub
sbb
rcrb
movsl
std
sub
dec
cmpsb
pop
pop
cwtl
mov
jb
cmp
lds
sub
push
mov
adc
in
cmp
in
cmp
popf
inc
movsl
hlt
mov
add
imul
mov
push
jle
out
testb
adc
add
add
cltd
xlat
jmp
mov
or
daa
cli
mov
dec
jge
ret
sbbl
add
cli
jp
push
pop
or
jo
inc
fdiv
popa
xchg
mov
adc
pop
mov
imull
out
mov
mov
cmpsb
lcall
or
outsb
in
or
xchg
in
adc
popf
imul
sbbb
shr
sbb
mov
aad
jp
jge
in
mov
dec
sub
cmpsb
xor
mov
pop
adc
fcmovnb
jle
inc
xchg
out
test
inc
dec
push
cwtd
int3
xor
cmp
dec
jg
add
pop
adc
xchg
add
dec
xchg
or
clc
or
loope
stos
add
test
sub
cmp
cmp
pop
call
int
mov
outsb
sub
jle,pn
iret
and
fs
icebp
scas
add
sub
imul
push
cmp
mov
int3
mov
mov
mov
adc
mov
or
aaa
xor
mov
push
js
lret
scas
cmc
imul
lret
xchg
scas
mov
xchg
jp
xor
adc
and
repz
mov
push
cmp
mov
test
aad
mov
jne
je
lret
pop
xor
push
mov
fcomip
arpl
cmp
xor
jle
repz
fstl
ret
xor
clc
popf
data16
data16
sti
cmc
lods
xor
idivb
outsb
mov
dec
mov
cmp
inc
dec
jmp
ljmp
cs
in
cmp
mov
adc
icebp
subl
aad
mov
outsb
pop
and
pop
add
in
ljmp
cmpsl
jnp
mov
xor
nop
mov
rcrl
jg
shlb
out
fisubrl
ficompl
jle
test
rcll
lods
shll
inc
mov
push
sub
add
mov
jb
adc
dec
popl
lods
ret
stc
mov
sub
xchg
in
cli
push
insb
stc
pushf
xchg
les
pop
inc
adc
mov
lahf
out
push
mov
ljmp
mov
mov
int
imul
sti
and
stos
fimull
lcall
jno
insb
mov
cs
ss
aad
loopne
xor
int
pop
popa
or
jb
mov
popa
inc
dec
sahf
outsb
push
dec
fldl
dec
xchg
in
adc
movsb
fsubrl
jne
jp
jl
mov
lods
mov
push
push
call
scas
pop
jno
stc
or
enter
push
inc
je
arpl
sub
out
dec
ret
inc
cwtl
std
lahf
mov
scas
mov
out
imul
dec
mov
fwait
or
ret
push
sbb
or
pop
dec
fucomp
aas
sub
test
daa
sbb
loopne
xor
or
cmpsl
or
sub
or
imul
xchg
in
ja
fsts
ret
shll
adc
sahf
push
lcall
mov
inc
stos
gs
fcmovu
scas
psubb
jno
mov
jb
repnz
jns
xor
aam
or
xor
lea
scas
mov
out
js
test
rcll
dec
cmp
in
icebp
xor
mov
mov
dec
adc
std
outsl
mov
les
adc
xchg
out
add
or
fistpll
scas
mov
fs
cmpl
outsb
mov
mov
mov
xor
popf
gs
inc
sub
mov
mov
dec
jp
sbb
cmp
andl
jecxz
inc
insb
icebp
cmpsb
movsl
pusha
cmp
int3
xchg
int
ss
js,pn
leave
push
mov
jae,pt
repnz
push
jae
mov
pop
cmp
js
jle
mov
inc
dec
xchg
fstps
sub
pushf
movsl
inc
nop
stos
gs
dec
fxam
in
cmp
inc
jo
sub
inc
xchg
mov
imul
mov
xchg
bound
mov
add
pusha
addr16
lcall
add
lds
mov
gs
addl
adcb
pop
fimull
or
adc
or
pop
inc
fstpl
fs
add
cwtl
mov
arpl
jae
adc
sbb
and
sbb
dec
push
sbb
sbb
pop
hlt
mov
ds
mov
rolb
mov
jns
mov
ljmp
cmpsb
iret
add
dec
addr16
fs
icebp
xor
fiadds
fcompl
fsubr
cli
sbb
lods
jecxz
or
icebp
sahf
aam
shl
adc
fnstcw
sahf
mov
lds
fstl
into
pop
pop
or
lcall
sub
lds
jbe
or
stc
dec
jge
mov
out
mov
aaa
add
mov
loop
in
mov
test
mov
data16
fisubl
nop
imul
jl
adc
xor
sbb
inc
mov
push
aad
outsb
mov
dec
loope
sub
sub
mov
dec
mov
das
sahf
jns
mov
repz
or
or
mov
stos
mov
lcall
sub
inc
sub
mov
mov
test
jo
mov
mov
lods
push
cmpsl
movsl
dec
inc
movsl
xchg
aaa
jge
push
jge
aas
sub
cmp
bound
or
push
cmp
push
rcr
jge
jbe
fwait
loopne
ror
mov
test
in
enter
addl
mov
aaa
pop
add
or
stos
xchg
repz
cs
inc
stos
inc
fstl
lds
rorl
jae
sbb
lret
push
xor
xor
adc
fcomps
dec
jecxz
adc
sti
or
loope
mov
sbb
inc
pop
mov
test
sub
sub
mov
dec
imul
jge
pop
sbb
sub
jno
pusha
mov
faddl
ljmp
and
rolb
aam
sub
shrl
jae
jle
push
mov
out
cmpsl
std
fmull
dec
ljmp
inc
fsubl
cltd
leave
aaa
pop
and
int
lock
aaa
push
add
dec
shll
xor
fadds
dec
or
js
sti
ds
cmpsb
movsb
and
scas
inc
out
movsl
cmp
leave
push
mov
icebp
cli
int3
mov
in
mov
dec
push
push
cld
mov
dec
stc
jmp
and
sub
and
cld
fidivrl
dec
jbe
add
std
popf
add
test
adc
or
loopne
jg
fdivr
enter
pop
push
ret
xor
or
sub
mov
int3
mov
aad
mov
mov
dec
hlt
enter
in
testl
out
add
mov
jl
push
xchg
test
pop
bnd
push
imul
int3
lea
lock
arpl
shll
xor
outsl
pop
and
xchg
adc
test
xor
hlt
pusha
je
mov
dec
ret
xchg
mov
mov
andb
sti
xchg
jne
mov
mov
mov
jp
jno
sbb
lcall
jge
pop
xor
data16
inc
jnp
aas
mov
push
out
lcall
sbb
fwait
ss
aam
xor
mov
or
push
rolb
arpl
jmp
mov
cmp
test
mov
mov
cli
lret
cmp
mov
mov
cld
inc
das
mov
daa
cltd
push
inc
jns
or
ljmp
or
test
fnsave
xchg
lods
shrb
cltd
mov
mov
pop
inc
outsb
jo
notb
arpl
adc
arpl
sbb
cmp
in
dec
mov
xchg
push
jmp
push
jecxz
mov
mov
std
dec
mov
pop
and
stc
adc
pop
ljmp
inc
imul
sbb
mov
mov
push
outsb
ss
call
lret
aad
bound
sub
push
mov
and
xor
jno
mov
iret
stos
pop
leave
or
jo
std
cmpsb
lods
call
xlat
pop
int3
mov
jg
mov
fisttpl
negb
inc
rol
xchg
fidivrs
adc
adc
dec
movsb
out
test
sti
mov
pop
xlat
std
mov
callw
hlt
pop
push
movsb
out
in
xchg
and
les
jnp
push
imul
and
fwait
sbb
add
cltd
ss
or
cmp
pop
sub
lock
mov
sub
rcr
scas
sbb
sub
sbb
test
or
mov
mov
or
and
movsb
inc
movsl
inc
push
cltd
and
jns
fxch
rcrl
stos
scas
cmpsl
insb
cmp
ss
sub
cld
imul
pushf
mov
dec
ss
mov
pop
sbb
inc
jge
push
xor
and
xchg
add
dec
ror
and
mov
jl
and
xchg
in
push
mov
jmp
sub
xorl
adc
fistl
dec
ret
lock
enter
push
push
outsb
pop
lahf
mov
push
dec
mov
ret
push
sbb
add
jmp
rolb
outsb
and
sbb
mov
out
sbb
popf
outsb
xchg
stos
and
jecxz
test
add
fwait
or
push
es
mov
or
cmp
adc
mov
les
shll
mov
push
mov
adc
xor
aas
push
mov
inc
jns
xchg
mov
fstpl
fisttpl
mov
decb
adc
in
xorb
cli
inc
inc
mov
ret
mov
or
test
push
push
lret
inc
rcrb
xchg
pop
and
addl
cs
mov
scas
push
lods
mov
add
imul
jbe
jp
jmp
cs
add
sbbb
pop
aas
inc
daa
fwait
mov
mov
jae
jne
xchg
jge
lahf
cmp
test
xchg
imul
adc
je
fisttps
in
leave
jle
pop
or
or
bound
adc
mov
cli
or
xor
xchg
sarl
lcall
pop
aaa
mov
add
cmp
das
lock
outsl
outsb
idiv
int
sarb
scas
inc
cmpsb
and
sbb
lods
xchg
mov
adc
ljmp
fcomps
lret
cmpsb
xlat
pop
ret
mov
cmpsb
mov
push
mov
dec
orb
push
cmp
movsb
stos
sbb
pushf
ret
sub
xchg
test
xor
daa
addl
imul
fsts
xchg
xchg
pop
mov
cmpsb
mov
jno
shr
int3
lret
jp
mov
cmp
call
sub
lods
and
sub
nop
lcall
loope
jns
pop
jbe
aas
pop
adcb
push
std
pushf
jno
aaa
add
xchg
iret
push
int
js
stos
cmpsb
fsubrs
adc
inc
mov
cli
xorb
jo
lock
out
xchg
or
in
andb
sbb
jmp
pop
daa
clc
cmp
jo
or
mov
mov
push
mov
aam
insl
cmp
adc
add
imul
loop
ret
enter
sahf
popa
adc
jle
sub
adc
sbb
xor
mov
xchg
push
mov
mov
addr16
and
pusha
lret
push
mulb
shrl
rclb
call
cs
into
mov
jae
inc
pop
xchg
clc
std
pop
mov
mov
rcrb
subb
jecxz
jne
cmp
mov
jg
pusha
and
add
xor
iret
mov
jns
adc
mov
pop
mov
clc
add
adc
jne
movsl
xor
add
jge
es
sub
fcompl
jle
jne
xchg
pop
fstl
sub
out
sbb
or
adc
xchg
test
sub
dec
fdivp
daa
push
test
adc
dec
outsl
call
dec
pop
and
jmp
outsb
xchg
cmp
adc
jg
ljmp
lret
inc
les
movsl
outsb
inc
outsl
jnp
sbb
mov
add
iret
ret
and
push
dec
mov
add
mov
bound
adc
push
dec
mov
and
jne
push
movsl
shrb
push
sar
mov
xor
xor
cmp
das
pop
aas
cltd
xlat
dec
inc
push
pusha
popf
dec
sub
fwait
out
mov
add
adc
fisubrs
sbb
hlt
mov
jle
jnp
daa
dec
add
inc
sub
loop
ret
cmp
addr16
jecxz
mov
fsubr
scas
push
push
cmp
jg
vdivpd
shlb
add
cmp
test
push
adc
orb
in
dec
imul
inc
aam
or
aam
fistps
loop
inc
xor
xchg
and
fwait
arpl
popa
xor
mov
mov
inc
mov
pop
popa
movsb
push
rcrb
push
xchg
repz
jmp
jae
dec
enter
xchg
pop
pop
adcb
mov
les
lret
test
sahf
jmp
sti
inc
adc
cmp
fldt
mov
fwait
push
in
cmp
aaa
jns
xor
test
adc
mov
or
out
dec
cmp
xor
outsl
decl
xor
push
xchg
mov
fbstp
or
enter
dec
and
iret
push
incl
pop
dec
mov
int
dec
pop
adc
call
inc
xchg
sbb
or
adc
int
ret
adc
jns
lret
or
pop
repnz
sub
rolb
outsb
jo
cmp
mov
mov
jecxz
cmc
jg
inc
cli
imul
hlt
xchg
mov
xorl
aad
add
sub
repz
cmp
mov
into
loopne
lock
xchg
lods
mov
repz
sahf
aaa
or
xor
cmp
push
popf
cli
adc
jnp
adc
testl
jecxz
push
dec
divb
cmp
xchg
mov
fisubrl
adc
scas
popf
or
adcb
cs
sub
mov
scas
sbb
dec
sbb
and
and
sbb
stc
fstl
scas
shrl
sbb
mov
mov
icebp
lret
mov
imul
push
repnz
fdiv
sub
mov
je
sbb
add
cmp
test
int
lds
and
lods
cmp
lret
push
shl
xchg
jl
iret
pop
int
cs
cmpl
outsl
adc
rcll
pop
sub
subb
out
cmp
and
cmp
nop
movsl
sbb
ds
xchg
jp
adc
add
fisttpl
ret
add
cmp
enter
mov
shl
lahf
cmp
dec
ds
inc
loop
xlat
mov
mov
mov
cmp
mov
jmp
mov
outsl
push
orl
movsb
je
jle
sub
fsubrl
fisubs
cmpsb
adc
lret
sbb
imul
mov
negb
sbb
mov
mov
cmp
xchg
daa
shlb
test
fldl
cmp
and
movsl
pop
pop
test
imul
jecxz
int3
stos
dec
dec
xlat
pop
idiv
xor
cmp
test
test
iret
mov
lds
mov
in
push
jle
daa
add
hlt
divl
push
daa
xor
mov
xchg
adc
xchg
and
mov
mov
pop
out
mov
ljmp
imulb
imul
rorb
sarb
into
or
rcrl
inc
insb
xchg
inc
lods
sub
adc
daa
mov
mov
or
arpl
sbb
mov
popa
xor
fdivr
jo
inc
adc
and
or
ja
push
scas
and
repz
mov
bound
jg
int
mov
out
inc
xorb
daa
lock
dec
jb
out
xor
xchg
aam
mov
enter
rolb
mov
jno
inc
nop
sub
push
push
mov
int
jl
sub
pop
mov
mov
jle
add
xchg
pusha
in
push
popf
sbb
out
hlt
imul
dec
cmp
cmp
cs
inc
xchg
or
das
outsl
loope
cmpsb
mov
inc
add
or
adc
xor
ret
cwtl
lret
sub
or
clc
popf
mov
dec
push
mov
stos
sti
dec
fstpl
add
mov
lds
mov
lahf
adc
xchg
dec
cmp
movsb
jb
mov
pop
inc
and
test
lret
pop
push
int
mov
subb
pop
xchg
std
in
fucom
stos
dec
cs
inc
adc
je
fimuls
lea
inc
cmp
mov
adcb
dec
imul
into
lock
mov
pop
fcmovnu
add
jns
test
mov
outsl
or
sti
pop
adc
rcl
int3
xchg
in
pop
adc
pop
push
jnp
xchg
lcall
inc
das
fmuls
and
xor
in
pop
xchg
enter
inc
fs
popa
lea
mov
and
mov
fdivrs
ret
popa
std
pop
movsb
xchg
adc
dec
mov
mov
ret
mov
sub
add
pop
movsb
ret
pop
clc
inc
inc
leave
jge
add
sub
pop
xor
jmp
push
dec
outsl
xchg
cs
sbb
push
fnstsw
pop
out
loop
lahf
jns
scas
loope
sub
sbb
mov
mov
inc
in
aad
inc
xor
jl
xchg
pushf
int
cmc
stos
xchg
sbb
pop
jbe
loope
je
add
shll
es
dec
enter
int
addl
aam
xchg
idivb
sti
test
inc
js
inc
jp
dec
clc
in
pop
loopne
in
push
xchg
mov
stos
out
into
jbe
add
and
and
pusha
lcall
inc
lock
mov
pop
pop
in
add
xor
in
xchg
push
mov
or
in
jg
shll
dec
lret
lret
pushf
adc
xor
dec
add
sahf
adc
push
ds
in
sub
pop
out
repnz
xor
xor
push
lods
mov
and
xor
fcompl
cmp
lea
dec
and
xorl
mov
or
xor
pop
pop
or
xchg
call
dec
std
in
test
mov
and
pop
cs
sub
lds
setne
or
pusha
sarl
dec
mov
mov
pop
stos
adc
xchg
pop
jns
imul
scas
lods
push
dec
js
cmpsl
adc
add
cmp
jg
push
ja
xlat
mov
push
fisttps
hlt
sbb
add
and
mov
insl
cli
loop
or
xor
adc
shl
lods
ljmp
dec
inc
pop
and
mov
or
or
test
lret
std
outsb
push
inc
bswap
cmpsb
xchg
int
in
imul
inc
mov
cs
jmp
int3
cmp
loopne
cltd
xchg
mov
into
jl
fdivl
das
sbb
or
in
rorb
repz
and
adc
push
gs
dec
adc
mov
xlat
cwtl
pop
stos
jecxz
aaa
scas
aaa
pop
sub
loopne
or
gs
mov
jmp
adc
out
aaa
mov
mov
add
mov
sti
adc
add
or
jmp
add
out
sbb
xchg
iret
inc
xor
imul
rcll
mov
loop
jecxz
jns
xor
mov
mov
out
xor
les
lret
cmp
or
inc
js
sbb
xchg
add
mov
pop
out
fidivrs
jae
out
dec
xchg
loop
rcl
imul
adcb
cmp
pop
push
mull
lcall
fbstp
push
js
pop
js
aam
sub
and
jg
or
add
adc
push
fmull
jmp
rorl
sti
subb
cwtl
out
rcr
aam
adc
or
jl
jne
call
jmp
dec
imul
xchg
sbb
pop
or
or
shrl
mov
mov
sub
xchg
pop
test
xchg
xor
clc
aas
cmpsb
jge
fsubs
and
sub
adc
push
rorl
xchg
add
out
and
out
sub
pop
and
jmp
in
mov
pop
in
xor
addr16
stos
clc
test
js
push
inc
test
nop
repnz
pop
js
sarl
js
cmp
add
les
cmp
shlb
test
imul
sbb
xchg
sbb
out
dec
loope
pop
cmp
imul
scas
mov
push
mov
jns
push
iret
cmp
cmp
add
sarl
ljmp
push
sub
int3
out
or
and
push
int
fwait
adc
decb
and
cmp
jnp
mov
sub
mov
pop
ret
out
test
loop
cli
lcall
xchg
movsl
out
frstor
repz
jmp
dec
fildll
loop
insb
jle
stc
jmp
in
adc
mov
push
sub
imul
test
sbb
repnz
xchg
cmpsb
lods
mov
jne
mov
push
mov
ficoml
push
fisttpl
mov
push
fwait
rorl
xchg
hlt
loopne
roll
hlt
stc
or
mov
xchg
js
sub
push
sbb
insb
push
xor
push
lds
xchg
cmp
xor
mov
sti
loopne
xor
fdivs
lea
sub
add
stc
mov
aad
add
mov
add
aaa
ret
cmp
push
out
or
cwtl
popa
call
mov
sub
pop
push
inc
inc
sub
adc
push
and
scas
int
cmpb
xor
and
push
dec
sbb
aad
scas
movsl
mov
imul
je
push
imul
cltd
inc
fstp
jae
push
fidivs
pop
jmp
jnp
fistpll
jg
jbe
mov
call
sub
nop
shl
mov
shrb
sub
popf
notb
mov
pop
fsubrs
add
out
xlat
sub
mov
xchg
xchg
inc
xchg
jle
repnz
test
sub
or
lahf
dec
and
stos
push
push
jo
xor
and
mov
int3
push
inc
aam
repz
loop
popf
cwtl
xchg
imul
jg
sbb
out
out
pop
mov
add
pop
lret
out
sti
inc
ja
and
clc
pushf
call
stos
stos
aam
sub
stos
outsb
jb
dec
clc
lods
fldcw
add
movsl
lds
dec
inc
xchg
push
fnsave
mov
inc
dec
xor
mov
mov
lcall
jo
ror
or
or
icebp
mov
jo
jg
int3
xor
pusha
int
xchg
pop
mov
mov
test
and
iret
sarb
mov
aaa
data16
xlat
jb
ljmp
aaa
mov
add
cli
movsb
call
pop
dec
stos
shrb
mov
cmc
jecxz
adc
insb
dec
xchg
shlb
mov
mov
ficomps
sbb
inc
inc
call
push
shll
mov
fidivrl
push
jg
lds
push
dec
sbb
addr16
add
sbb
repnz
mov
into
insl
aad
fdivr
rorb
mov
inc
cmp
das
rclb
adc
push
ret
xchg
mov
jp
push
pcmpeqd
sarb
dec
lods
dec
inc
or
scas
hlt
mov
outsb
push
cmc
js
xchg
testb
push
imul
cmp
push
negb
stc
mov
test
jg
mov
movsb
popa
jge
sub
and
xor
imul
jmp
jnp
cwtl
sbb
jns
out
sbb
les
xchg
pusha
sub
int3
out
inc
popa
pop
imul
aas
in
hlt
add
cs
lods
aam
cwtl
add
rcr
inc
push
jl
or
xor
sub
xchg
mov
adc
xlat
pop
mov
dec
mov
imul
ds
addl
or
jle
cltd
jmp
dec
cmp
jge
cs
inc
pop
sub
push
data16
out
or
addl
inc
mov
jno
bound
lret
inc
mov
int3
xor
mov
sub
and
popf
repnz
ljmp
sbb
sbb
mov
or
lret
xor
dec
pop
cmp
push
popa
mov
jp
lret
and
sbb
movnti
sub
fidivrl
lret
mov
jg
addr16
mov
test
dec
imul
mov
push
push
clc
jnp
sbb
xchg
cmpsb
notb
pop
pop
fnstcw
inc
je
test
lods
push
ss
pop
xor
call
mov
andl
cltd
sarb
ljmp
dec
sub
repz
je
cmp
sbb
adc
orl
fcoms
fldl
cmpsb
cs
cmp
in
mov
pop
testb
xor
mov
push
insl
jno
cmp
and
pop
pushf
ja
aaa
xor
xchg
push
jecxz
add
rorb
jecxz
outsb
insl
leave
dec
lds
ret
xchg
add
popf
cli
push
sbb
push
pop
add
xor
push
scas
pop
cmp
cmp
outsb
in
fstpl
outsl
and
leave
shll
jecxz
pop
rcll
lds
push
movsb
mov
xchg
push
jmp
lret
mov
fwait
cmp
lcall
test
adc
push
push
dec
push
notl
mov
clc
lret
adc
push
jae
push
mov
pushf
insl
push
stc
xlat
and
icebp
iret
jae
pop
cwtl
push
mov
sbb
cld
loopne
inc
bound
cli
fsubl
mov
lret
jnp
insb
xor
sub
imul
mov
mov
pop
mov
mov
ret
lahf
imul
mov
push
add
std
divl
rorl
mov
push
xchg
mov
movsb
mov
insl
lods
mov
jnp
mov
mov
dec
lret
cmpsl
scas
inc
ljmp
loop
inc
or
sbb
nop
dec
out
mov
fs
insl
sub
cmp
sub
xchg
and
lods
inc
add
sbb
in
push
fcoml
lret
call
shlb
popf
jl
cmp
dec
pusha
sbbl
cmp
inc
stos
push
push
sbb
and
aas
mov
arpl
lods
and
mov
idivb
mov
dec
ficoml
add
add
jne
popa
inc
or
add
sub
jl
fst
mov
mov
pop
jp
lcall
dec
cld
imul
mov
mov
mov
inc
pop
jbe
mov
xchg
adc
adc
inc
outsb
sub
or
push
test
lea
je
enter
jne
sbb
pop
push
push
and
mov
sub
dec
movb
and
repz
scas
lret
sbb
jge
add
xor
inc
dec
mov
inc
sbb
mov
xchg
xchg
sbb
jmp
cwtl
in
mov
mov
addr16
rcl
insl
scas
add
cmpsb
pop
dec
sbb
adc
xchg
sti
mov
jmp
hlt
xchg
mov
icebp
cmpsl
je
popf
fcomp
fwait
int3
pop
mov
jg
lea
mov
ret
mov
cmc
cmovle
and
popa
rcll
imul
pop
aad
and
sub
mov
mov
jg
dec
add
ror
and
out
jecxz
icebp
adc
mov
sub
jo
xor
sub
xchg
mov
in
and
sahf
mov
fs
and
fiaddl
inc
dec
dec
loop
pop
dec
imul
jbe
sbb
pop
loope
add
mov
xchg
repz
dec
xlat
adc
loop
dec
inc
xor
sar
rorb
out
sbb
add
pop
jge
mov
sub
fldl
ja
rolb
cmp
shll
adc
dec
jle
adc
jecxz
xchg
pop
lret
fldt
in
hlt
xor
daa
ja
and
mov
cmp
decb
pop
std
inc
data16
incl
ljmp
lods
insl
loope
lods
jle
lret
mov
jne
pop
fwait
xlat
mov
lcall
pop
dec
popf
cmp
ds
xchg
sbb
or
xchg
popa
and
lcall
fstl
mov
sti
jns
jno
and
xlat
push
aad
xchg
loop
pop
gs
xchg
loop
leave
in
pop
mov
inc
cmp
out
iret
nop
pop
mov
pop
mov
in
inc
xchg
xorl
add
adc
push
cmp
imul
scas
inc
mov
insl
adc
mov
jo
popa
lea
ret
sbb
es
in
dec
cmp
mov
jl
or
or
or
xchg
xchg
adc
or
cmpsb
movq
push
adc
enter
jle
lock
lcall
inc
dec
mov
bnd
mov
js
pop
jns
dec
bound
add
inc
jle
insl
jg
jmp
pop
mov
iret
rclb
gs
cmp
or
xchg
jge
nop
jno
ljmp
inc
or
repnz
cmc
cld
mov
les
or
pop
lods
cmp
push
add
pop
nop
icebp
inc
test
mov
cmp
fimuls
fildl
in
int
cmp
jb
xor
lods
inc
stc
addr16
in
daa
pop
push
dec
jle
pushf
arpl
and
mov
and
pushf
lods
pop
stos
cltd
xchg
pop
jnp
sbbl
cmpsb
add
adc
mov
mov
jmp
push
gs
js
ss
leave
xor
out
cld
xchg
sub
out
mov
pop
out
jnp
std
mov
cmpsl
cwtl
inc
sbb
adc
jbe
and
test
aam
jmp
xor
mov
das
lret
jne
popf
sbbl
negl
faddl
xchg
fdiv
int3
arpl
iret
test
xchg
adc
je
rclb
jg
addr16
imul
mov
ljmp
out
lods
cmpsl
inc
dec
mov
mov
xchg
mov
loopne
mov
add
int3
clc
adc
add
adc
and
mov
sub
rcrl
and
stos
stc
sbb
aam
popf
fdivs
arpl
dec
mov
cmp
pop
sbb
and
in
in
xchg
cli
jae
rcrl
and
leave
pop
scas
cltd
jl
xor
sbb
test
pop
xor
add
ljmp
ja
mov
jg
dec
jne
loop
stos
dec
imul
mov
idivb
notl
testl
movsl
jo
lea
js
lcall
xor
push
sbb
xor
push
jp
nop
orb
sub
or
loopne
inc
gs
and
xchg
add
or
xchg
inc
pop
pop
or
int
xlat
mov
push
mov
jb
mov
shll
test
push
shl
leave
jbe
push
jne
ja
aas
or
arpl
mov
push
jne
pop
lahf
int3
mov
cmp
inc
scas
fs
jnp
sub
data16
mov
dec
ljmp
les
mov
popf
in
adc
cmpsl
pop
leave
pop
repnz
xchg
shl
bound
jb
movsb
movl
in
aam
cmp
jae
jb
fsubrp
cmp
int3
inc
cmp
mov
enter
lret
pop
ret
sbb
push
sub
mov
add
jae,pn
leave
and
xor
sbb
xchg
add
dec
add
fwait
add
clc
stos
insl
lds
adc
xchg
test
and
or
inc
pushf
jnp
pop
hlt
std
pop
push
jno
scas
movsb
insb
cltd
xlat
cmc
dec
cltd
leave
add
fmuls
and
jns
mov
dec
sub
mov
xchg
add
adc
gs
lock
add
leave
xchg
das
stos
xor
cmp
mov
or
stos
jle
inc
mov
pop
in
pop
aam
push
mov
push
popa
xor
lret
hlt
xchg
mov
jge
je
sbb
sbb
fs
inc
pusha
mov
push
pop
ret
cltd
sbb
mov
daa
mov
jmp
dec
xor
jns
inc
and
andl
fldl
sub
mov
je
push
add
push
js
adc
imul
jge
test
dec
mov
xor
or
sti
xchg
push
jmp
sub
sub
sbb
lahf
lret
xchg
inc
add
mov
iret
cltd
cmpsl
ficoml
in
nop
xchg
ret
inc
aad
mov
movsb
dec
mov
push
xchg
pop
mov
call
fsubs
jns
hlt
mov
dec
jle
in
cmp
aaa
pop
outsb
rcrb
mov
dec
idivl
andb
xchg
xchg
int3
ja
ja
or
fsubrp
mulb
mov
xor
ret
insb
clc
and
mov
sub
or
jb
dec
fucomp
sbb
fcmove
mov
inc
movsb
or
imul
dec
shrd
shll
push
jle
pop
scas
in
enter
in
mov
sbb
pop
mov
jle
out
xlat
je
mov
aad
cmpsl
inc
nop
inc
repz
adc
or
xor
dec
lock
fidivrs
pop
stos
push
icebp
jno
xchg
and
fidivs
js
inc
rorb
lea
mov
add
out
pop
mov
mov
test
cld
mov
loope
inc
cli
movsl
mov
sbb
jl
fldl
cltd
scas
push
mov
sub
jae
test
pop
and
cs
notb
movsb
push
sub
xchg
cmc
sub
xchg
stos
cmp
push
out
add
dec
xchg
inc
mov
cltd
outsb
pop
nop
clc
test
adc
addr16
and
fimuls
jp
nop
push
mov
scas
mov
pop
jmp
cli
xchg
mov
loopne
sbb
lahf
stc
xor
jno,pt
or
dec
lcall
jge
lret
mov
mov
cmpsb
cs
cmp
cli
fistpll
mov
or
pop
pop
repnz
sub
mov
in
mov
popa
ret
testl
aad
cmpb
cmp
test
mov
push
ret
xlat
shll
shrl
mov
add
cmc
jmp
push
adc
movsb
or
dec
subb
push
xchg
pop
mov
add
mov
cmp
xor
movl
test
add
push
push
int
fs
test
scas
cmp
leave
xchg
adc
aas
shlb
dec
adc
add
xchg
cmp
imul
and
fisttpl
jne
cmpsl
jge
paddw
iret
in
sbb
push
jb
test
stos
movsl
sti
add
inc
mov
push
ret
imul
mov
lea
je
repnz
sub
pop
cltd
fmuls
and
aas
addb
sub
mov
in
adc
mov
ja
cwtl
xor
xor
or
out
lret
sub
adc
pop
arpl
sbb
data16
pop
cmp
pop
cli
dec
xor
mov
inc
jno
mov
adc
add
inc
daa
mov
inc
stos
push
adc
loope
xor
cmpsb
or
aas
mov
or
frstor
mov
xor
js
sub
push
sbb
push
dec
data16
cwtl
dec
inc
fdivp
stos
insl
inc
scas
adc
jmp
in
and
inc
sarb
iret
sbb
cmp
jns
arpl
or
ret
cmpsb
push
mov
bound
dec
icebp
pop
lret
repz
scas
adc
mov
movb
jo
movsl
arpl
pop
inc
enter
mov
xchg
pop
fdivrs
rclb
cmp
or
test
dec
gs
sti
add
ret
test
cmp
rcrl
sti
mov
movsb
in
push
shl
test
les
and
xor
mov
decl
xor
cmp
imul
jnp
pop
jp
cmp
out
inc
fdivs
stos
inc
in
rcl
neg
int3
mov
movsl
outsb
add
xchg
pop
xor
repz
jle
xor
popa
test
sub
aad
xlat
cmp
mov
sbb
dec
iret
aas
or
inc
testl
sub
jo
mov
or
push
js
aaa
adc
out
movsb
sbb
jne
lods
icebp
mov
test
xor
shlb
mov
out
decb
mov
mov
iret
mov
rcll
into
xchg
negb
lahf
or
in
pop
jo
lds
xchg
push
jle
cmp
add
arpl
dec
xor
sbb
das
cmp
mov
sbb
icebp
inc
pop
out
in
jb
mov
adcb
test
xchg
mov
fwait
or
mov
call
jnp
test
data16
call
push
iret
repnz
push
ror
je
mov
adc
sub
sbb
pop
das
cwtl
int
and
xor
push
inc
or
mov
push
jle
inc
lcall
jbe
jecxz
inc
add
cmpsl
lea
rorl
fstpt
inc
lahf
pop
mov
and
xchg
mov
subb
cmp
rcrl
dec
jbe
loop
lret
fisubs
negb
jmp
fistl
aaa
push
es
pop
add
pop
jmp
cmc
sub
mov
lahf
je
add
xlat
or
lahf
jg
das
fldenv
sti
stos
push
ljmp
mov
inc
stc
aaa
adc
inc
mov
pop
pop
lea
mov
in
lahf
mov
int3
cli
and
test
daa
int
leave
sti
xchg
push
or
adc
or
and
or
mov
mov
cld
in
mov
jp
bound
xchg
mov
mov
imul
fs
fdivs
dec
sbb
mov
push
mov
lret
lret
repz
sub
lahf
jecxz
fcoml
cmpsb
std
pop
push
fmull
je
jno
enter
push
push
lret
das
push
ja
leave
ja
lods
stc
cmp
rcrl
hlt
jg
ja
mov
push
pop
scas
je
popa
popa
ret
dec
arpl
sub
cmpsl
sbb
inc
test
je
movsl
addr16
xchg
fnsave
pop
xchg
mov
mov
push
mov
mov
mov
leave
loopne
sbb
xor
xor
inc
lods
jne
xor
fs
ljmp
xchg
xor
push
xchg
popa
cmp
stos
mov
mov
push
lret
jbe
cmpb
cmpsl
dec
inc
mov
lock
int
insl
lret
adc
xchg
inc
and
repnz
outsb
pop
cmpb
lea
jae
mov
ret
mov
xor
jl
sbb
xchg
mov
pop
push
lcall
and
sti
push
fcmovu
daa
mov
data16
adc
repz
mov
push
pop
mov
inc
cmp
cmp
in
add
shr
scas
xchg
enter
mov
jmp
mov
les
push
ds
xor
jge
clc
pop
jae
push
shll
xchg
mov
sti
ds
ja
lods
xlat
lcall
cwtl
inc
sbb
dec
lods
mov
popw
outsb
jb
or
sbb
inc
stc
sti
push
xlat
stc
dec
test
cmp
xorb
lods
ficomps
sub
mov
in
jnp
cmp
fwait
out
daa
mov
mov
jl
pop
cmpsb
cmpsl
addr16
daa
pop
lods
and
jl
sbb
lods
out
pop
add
int3
cmp
mov
das
xor
inc
stos
insb
das
fs
push
ret
es
add
jne
in
sbb
cmp
push
push
sbb
pop
xchg
insb
out
xchg
push
scas
sbb
fwait
scas
fldcw
and
lcall
mov
test
nop
mov
arpl
icebp
orb
stos
xchg
mov
cmc
pop
insb
mov
hlt
dec
jecxz
addr16
xchg
and
scas
cmp
mov
loope
push
in
fprem
ja
pop
ret
push
push
dec
mov
pusha
loop
add
pop
xchg
roll
cli
jne
ds
cmp
pusha
push
out
in
imul
cmp
fisubrs
push
pop
iret
adc
loop
cmp
js
sub
jo
pop
sbb
into
xchg
stos
pushf
dec
pop
push
aad
test
xor
mov
mov
mov
adc
aad
mov
dec
stc
ss
pop
and
or
cmp
hlt
push
mov
mov
dec
popf
mov
pop
pop
adc
push
repz
xchg
push
daa
lret
movsb
pop
mov
cmp
add
stc
and
push
jns
xlat
std
jb
cs
imul
fidivrl
ds
or
ja
jns
cmpl
mov
mov
lret
fbstp
ret
jmp
cmpsl
shlb
push
push
pop
sti
mov
sti
pop
shll
test
xor
cmpsb
arpl
mov
jo
inc
adc
add
popa
sbb
adc
jmp
push
ret
dec
or
xor
lock
loopne
lret
xchg
aas
call
sbb
ljmp
jp
lods
mov
push
xchg
icebp
mov
mov
andb
fs
testl
cltd
push
xor
insb
mov
nop
mov
mov
sub
jbe
inc
cli
ret
aad
fs
cmc
arpl
cmp
inc
test
sub
mov
aam
fcomps
cli
mov
xchg
push
add
lods
cld
insb
shr
test
mov
sbb
jecxz
pop
or
mov
pop
sbb
je
rcl
in
call
and
push
jno
jp
pop
cmpsb
push
mov
out
int3
loopne
or
sub
mov
mov
in
in
add
mov
jns
xor
lea
or
pop
jae
xchg
inc
cmp
pop
cmp
rcll
dec
ret
mov
std
test
int3
pop
mov
cmc
es
and
mov
in
mov
pop
jb
pop
xor
pop
in
jns
loope
lcall
mov
in
add
pop
mov
pop
pop
jge
and
pop
sub
sub
lcall
std
js
out
fcompl
add
inc
les
pop
add
mov
or
push
jb
mov
jp
jge
in
add
daa
inc
sub
cmp
daa
in
int3
popf
lds
inc
js
repnz
hlt
aad
aas
and
xlat
push
push
inc
or
xchg
add
in
sbb
imul
cltd
movsl
fnsave
push
mov
je
into
cmp
sub
mov
inc
mov
call
in
rcrb
push
mov
test
outsb
push
inc
xchg
push
sar
pop
sbb
cmp
jge
adc
fistpll
adc
insb
mov
cmp
push
fcoml
jmp
jmp
lret
clc
or
jp
jb
fcmovnb
into
ror
stos
push
xchg
push
push
pop
sub
pop
test
jbe
xchg
loop
punpcklwd
ds
ja
test
arpl
lds
inc
gs
js
lcall
aad
mov
adc
mov
mov
dec
or
add
fwait
mov
cmp
jns
lods
int3
fcmovbe
inc
rclb
add
sbb
dec
push
or
mov
sbb
subb
push
push
jne
adc
inc
add
es
aaa
mov
push
xchg
out
adc
call
jge
sub
scas
adc
loopne
je
inc
stos
adc
insb
iret
ja
stos
mov
icebp
mov
and
adc
repnz
mulb
push
iret
xchg
sahf
mov
repnz
movsl
fsubr
add
jecxz
adc
sub
shll
xchg
or
divl
inc
in
mov
lock
fdivl
sub
push
xchg
lea
jb,pn
sar
push
insb
jp
lret
xchg
aaa
popf
aaa
popf
insb
cwtl
out
leave
xchg
dec
pop
std
cmp
decl
inc
pop
das
idivb
pop
xchg
add
cwtl
dec
popa
pop
and
mov
mov
jl
dec
dec
push
aas
cmp
mov
fbstp
fists
out
jle
lret
xchg
jbe
out
xchg
subb
test
hlt
xor
and
push
outsl
cmp
rolb
dec
mov
sub
xchg
lahf
int
mov
fildl
les
pop
shl
push
cmp
cmp
push
inc
jno
movsb
add
mov
dec
ja
mov
mov
mov
cmp
inc
mov
mov
push
sub
lret
ja
dec
lock
xchg
stc
dec
xor
jle
lret
out
clc
cmp
test
das
dec
ljmp
sbb
dec
or
mov
insl
jle
scas
push
push
and
in
inc
lods
mov
cmpsl
mov
lock
rcl
or
mov
fs
push
sub
push
push
pop
js
inc
mov
cmp
adc
mov
lds
popf
lret
mov
fdivp
lret
cmc
xor
lret
inc
shrl
mov
jmp
outsl
ja
insl
std
jae
mov
add
jecxz
das
pop
adc
addr16
jp
adcl
pop
clc
test
scas
sub
xor
imul
sub
jnp
icebp
int
cmp
sbb
gs
inc
mov
pop
push
cmc
aaa
pop
dec
xchg
xchg
xchg
sub
push
pop
mov
adc
sub
js
adc
enter
loopne
out
out
imul
pop
cmc
mov
adc
out
shl
idivl
mov
in
xor
jbe
mov
inc
sub
and
jg
jo
into
insl
daa
subb
dec
mov
adc
aas
and
jg
jmp
adc
mov
iret
dec
and
sub
out
push
or
jnp
mov
or
xchg
jae
mov
inc
inc
jmp
scas
sub
mov
push
test
subb
call
shl
mov
pop
and
in
cs
test
cld
cmp
lock
icebp
sbb
cmp
ds
hlt
jbe
arpl
cmc
into
dec
shlb
das
sbb
mov
sub
lret
cmp
or
rorl
mov
out
outsb
loop
and
push
nop
fidivl
outsl
test
das
mov
mov
cmpb
pop
mov
arpl
subb
jns
roll
xchg
outsb
icebp
imul
mov
shll
pop
cmp
flds
adc
loop
mov
test
xor
add
cmp
or
sub
bnd
jecxz
fcoml
mov
imulb
dec
shl
pop
dec
add
dec
test
pop
or
fldt
sub
and
mov
test
shlb
ret
fmuls
cmp
outsb
test
and
push
sbb
orl
aad
sub
push
les
lock
out
sub
rcrb
mov
cmp
push
das
testl
jle
rep
mov
sub
out
jb
xorb
and
sbb
ret
mov
jmp
pop
adc
add
pop
xor
negl
add
mov
inc
aaa
cwtl
xor
ljmp
repz
loop
sub
pop
movsl
adcl
movsl
shl
inc
stos
cmp
jo
jnp
push
repnz
cwtl
enter
mov
mov
pop
hlt
dec
add
xor
mov
stos
adc
mov
sbb
mov
xchg
decl
test
sbb
xlat
xor
lahf
repnz
pop
mov
pop
repz
in
test
push
jp
sub
mov
adc
mov
fimull
jl
leave
jle
fst
aam
dec
push
xor
ljmp
push
mov
mov
pop
mov
xchg
pop
cmpsl
xor
mov
sbb
sahf
stos
adc
fwait
lods
xor
movsl
push
dec
in
or
push
jb
jle
push
and
pop
mov
testb
xchg
mov
stos
mov
add
jno
mov
mov
jo
mov
test
in
add
ja
mov
sbb
stos
mov
enter
cmp
call
fisubl
pop
gs
mov
scas
add
or
stc
xchg
and
call
data16
push
xchg
pop
mov
aaa
loop
mov
mov
out
pop
mov
mov
test
jno
outsb
jmp
jns
loopne
movsb
dec
fwait
je
out
mov
aad
lret
jge
test
pop
sti
adc
sbb
lret
jl
call
add
mov
inc
enter
or
aas
xchg
fadds
mov
add
insb
movsl
mov
cmpsl
and
sahf
sub
andb
mul
jbe
test
insb
lds
lods
mov
mov
div
loopne
and
or
pop
adc
add
and
adcl
xchg
jle
jl
pop
jnp
jp
cmpb
cmp
push
fstpt
adcl
mov
sahf
sbb
ret
cmp
mov
pop
or
popa
fcmovnbe
repz
cmp
stos
add
scas
sub
add
cmp
dec
xchg
pop
xchg
xor
jecxz
or
stc
cld
mov
ret
ss
sub
push
cltd
loop
fwait
loop
mov
neg
inc
data16
sbb
pop
pop
pop
or
ljmp
dec
jns
nop
sbb
add
push
fs
dec
mov
cltd
sbb
pop
popf
leave
push
jbe
sub
fists
inc
lahf
lods
dec
and
dec
sbb
dec
ret
cmc
jle,pt
lahf
add
pop
daa
mov
fldt
rcrb
out
sub
aas
cmp
fs
insl
adc
insl
sub
in
fstpl
fldt
xchg
iret
fidivs
loop
rcr
lret
ret
adc
inc
pop
outsl
int
dec
mov
insb
fdivrs
and
js
pusha
push
in
or
mov
test
je
and
cvttps2pi
jnp
gs
mov
inc
es
push
ss
ss
adc
fcoms
and
aad
arpl
cmp
cmp
stos
xchg
mov
adc
cmpsb
fs
ret
lahf
decb
and
dec
subl
test
js
cmpsb
imul
pop
mov
add
insb
sahf
cmp
aam
jle
mov
mov
jp
and
fsubrs
and
pop
pop
sbb
out
bound
add
imul
cmc
flds
push
inc
or
mov
cmc
sbb
pop
ja
sbb
repnz
inc
mov
and
daa
ds
xor
fsub
lds
xchg
gs
scas
inc
shrl
data16
in
out
fldenv
jns
push
cmp
pop
sbb
inc
das
mov
les
dec
sub
mov
inc
inc
xor
or
jl
stc
mov
jnp
mov
mov
lret
mov
out
cmpsl
les
fsubrl
ficoms
pushf
mov
sbb
call
lret
pop
cmp
js
loopne
inc
dec
sahf
and
adc
sub
sahf
movsb
jno
lods
cld
push
xorl
std
cmpsb
daa
aas
daa
jmp
out
ficompl
es
push
lahf
sti
mov
inc
dec
adc
fcomp
sbb
mov
jo
fiaddl
xor
aam
xor
push
mov
mov
pop
pop
scas
dec
or
sti
xor
and
dec
mov
adc
or
pusha
mov
lods
clc
xchg
dec
cld
shll
inc
shlb
je
mov
dec
lret
pop
frndint
jns
out
xlat
add
adc
test
sti
repnz
cld
and
pop
es
int3
cltd
mov
cmp
mov
mov
xor
fsub
std
aam
mov
xchg
pop
push
adc
mov
mov
or
mov
xchg
jg
push
call
cmp
aas
pop
test
lods
enter
into
xor
mov
xor
mov
bound
mov
das
jne
sbbb
push
mov
fstps
dec
lahf
mov
inc
insl
jmp
pop
dec
jo
aam
ja
add
imul
stos
mov
xor
jmp
adc
jae
xchg
mov
repnz
adc
or
loopne
pop
push
mov
aad
movl
push
lock
pop
cli
pop
jp
inc
pop
pop
mov
push
mov
jnp
sti
mov
and
xchg
aam
adc
push
cwtl
cmp
insb
andb
int3
aam
stc
dec
outsb
sarb
push
pop
repz
test
pop
dec
push
leave
sbb
pusha
mov
push
mov
adc
mov
dec
loop
push
push
mov
addl
xorl
arpl
mov
and
cmpsl
xchg
push
incb
fnstsw
push
xchg
sbb
call
cmpsb
pop
push
push
shlb
lcall
sbb
sbb
pop
push
push
xchg
inc
jge
insb
rcrb
call
cmpsb
call
mov
rcl
pop
mov
mov
add
cwtl
push
insb
mov
push
cmpl
push
mov
jp
add
int
add
incb
push
add
mov
fcoml
cmovae
jbe
or
data16
div
lods
fstpt
xchg
push
fstpt
icebp
mov
js
or
push
pop
pop
cmp
js
push
mov
imul
movsb
stc
push
pushf
cmp
push
sar
leave
or
mov
pop
add
and
out
mov
dec
imul
cmpsl
xor
xor
loope
adc
mov
mov
inc
or
fildll
test
es
int3
jmp
xor
call
dec
jp
out
mov
ljmp
add
and
idivb
fiadds
cmp
mov
addr16
dec
mov
loopne
inc
ror
sbb
rolb
pop
fsubl
imull
imul
daa
adc
or
cmpb
xchg
lcall
aam
sub
jb
mov
mov
jnp
faddp
or
shrl
sti
push
mov
popa
fistps
dec
daa
dec
insb
ret
jno
sub
adc
and
xchg
push
push
adcb
imull
adc
nop
testl
out
outsb
bts
pop
aam
repz
add
add
inc
mov
cwtl
ret
and
sub
sarb
and
loop
jmp
cmp
stos
into
scas
loop
movsl
dec
lock
dec
jne
sbb
add
push
mov
popa
jl
or
movsb
or
cmpsb
test
outsl
dec
scas
pop
rcrl
jl
xchg
popf
add
shll
insb
jl
mov
insb
xor
addl
into
add
inc
push
cmp
cltd
sbb
push
mov
xor
inc
and
movsb
mov
sbb
xchg
lcall
push
mov
mov
fists
sbb
cmp
and
imul
rcrl
mov
xor
xchg
test
sarb
mov
add
xchg
out
push
out
push
leave
adc
or
sti
shl
mov
push
inc
movsb
sub
mov
add
gs
shrb
imul
sub
jl
imul
scas
push
notb
inc
ss
inc
popf
fsubrs
push
scas
mov
sbb
jns
rolb
xor
loopne
filds
mov
jp
test
sbb
sarb
std
call
data16
jmp
pushf
fbstp
jge
mov
push
repz
pop
mov
push
and
dec
les
or
fimull
inc
pusha
movsl
xchg
dec
push
add
pop
push
sti
roll
lcall
fnstenv
cwtl
aas
fdivl
push
jle
loope
out
call
out
subb
mov
pusha
mov
enter
fstl
mov
int
xor
rcrb
mov
mov
jg
sub
addl
sub
js
push
jne
push
bound
add
push
popa
mov
dec
adc
mov
ficomps
ja
nop
rclb
imul
loope
xor
int3
fcompl
pop
sbb
inc
leave
test
lea
and
andl
stos
xchg
and
inc
jl
negb
xor
fildl
iret
shrl
loope
push
out
inc
shll
adc
cli
push
daa
mov
mov
jl
sbb
mov
outsb
frstpm(287
js
push
or
test
and
ret
js
adc
sub
sbb
inc
inc
sbb
int3
out
lds
cmp
xor
jo
mov
jno
add
shlb
cwtl
sbb
mov
mov
mov
pop
inc
test
cs
or
mov
incb
fcmovnb
fimull
pop
mov
jae
pop
cmp
int3
xchg
leave
pop
push
mov
push
mov
jae
fs
rcrb
insl
test
pop
sahf
std
xchg
cmp
push
cmp
shll
div
fadds
arpl
mov
jl
js
xor
test
mov
iret
add
dec
jl
cmp
inc
ja
lea
in
imul
rorl
out
xor
sbb
mov
cld
stos
add
mov
pushf
fbld
fmuls
fcomi
dec
xchg
sarl
rcll
jns
fcoml
xchg
scas
pop
jno
push
adc
xchg
adc
mov
jle
icebp
jne
mov
jg
push
add
sbb
push
or
inc
mov
pop
and
rcr
xor
sub
mov
jge
mov
sub
out
decb
pop
out
mov
bound
and
xor
and
loope
test
daa
ret
cmp
jecxz
pushf
push
pusha
xchg
mov
jns
fidivrs
sub
sahf
enter
mov
push
push
aam
jne
push
pop
aas
push
fisttpl
stc
or
aam
lods
cmpl
int3
mov
mov
addr16
sub
es
enter
jnp
std
add
sub
add
cli
addb
push
mov
cmp
add
stos
rorb
pop
dec
scas
sahf
repnz
cmp
sub
cltd
or
ljmp
inc
sub
sti
mov
sub
jns
xchg
aas
cld
in
jle
inc
xchg
aam
insl
pusha
jo
add
cmp
dec
std
jg
jns
sub
ja
cmp
fidivl
es
cmpsl
cld
mov
rcr
jbe
jno
add
neg
ficoms
push
fcoml
call
pusha
pushf
add
in
sbb
cwtl
pop
adc
and
inc
or
push
pop
xchg
and
bound
sbb
adc
adc
lcall
push
mov
rorl
cmp
cltd
rolb
sub
std
mov
mov
and
mov
out
cmpsb
push
pusha
dec
movsb
das
fsubrl
sbb
out
inc
dec
cmp
lods
cld
xor
popa
mov
das
outsb
jb
mov
sbb
loope
push
dec
nop
add
jl
mov
sbb
xchg
add
jnp
pop
iret
sti
cmp
leave
cld
in
dec
sbb
or
sbb
sub
ljmp
imul
push
test
fisubrs
aaa
mov
mov
es
xchg
dec
pop
jne
xor
pop
jp
orl
push
mov
mov
sti
mov
adc
jns
stos
and
lods
xchg
rcl
xchg
pop
xor
sti
cmpl
rolb
jbe
pop
addr16
sahf
aad
insl
inc
and
push
pop
daa
dec
xchg
dec
repnz
add
por
lret
pop
mov
out
sahf
lret
dec
mov
adcb
les
icebp
mov
loopne
jb
jle
or
ljmp
push
dec
jae
sbb
jno
enter
cmpsl
mov
xlat
movsl
lock
lea
jge
lods
pop
repz
cmp
clc
inc
xor
fcompl
in
push
jo
std
fldenv
ljmp
adc
movsl
sbb
dec
cmp
jl
enter
and
dec
inc
or
cld
sub
in
inc
pop
adc
mul
ret
data16
adc
in
mov
cmp
test
test
cmp
cmp
cltd
jno
daa
mov
cltd
aad
push
dec
jns
add
sub
xor
movl
call
and
mov
in
push
inc
xchg
or
and
or
jl
inc
mov
adc
es
lock
jo
lret
and
jae
sbb
lahf
and
enter
ljmp
mov
ja
das
data16
je
nop
mov
pop
imul
pop
mov
mov
adc
and
aas
test
and
insb
arpl
jae
jbe
dec
dec
xor
pop
insl
imul
test
pop
loope
sbb
jp
jl
adc
jecxz
lahf
or
in
cmp
lock
lock
in
pop
call
add
mov
es
push
xchg
xor
aaa
jb
mov
out
repz
mov
lds
imul
add
pop
icebp
data16
adc
test
bound
mov
dec
cli
scas
das
lret
xor
sbb
dec
cmp
popf
xchg
aaa
adc
jge
movsl
inc
push
lahf
mov
rcrb
inc
sub
test
pop
adc
aas
xchg
add
jno
insb
adc
icebp
arpl
outsb
loopne
lret
rorl
push
data16
xchg
lcall
push
cmp
push
add
mov
insb
xor
out
pushf
fldcw
pop
jns
repnz
pushf
xchg
idivl
rcrl
mov
bound
adc
xor
jmp
pop
or
inc
dec
pusha
cs
add
lea
aad
jnp
sub
adc
xorb
and
xor
jmp
cmp
mov
adc
xchg
out
xchg
hlt
scas
push
scas
scas
and
fnstsw
stc
adc
xchg
rolb
pop
rcrl
ds
add
cmp
cmp
lret
out
lds
out
cmp
iret
push
loop
test
cmpsl
mov
fidivs
imul
sarl
fbstp
jo
mov
and
dec
bound
inc
xor
mov
cmpsl
cmp
les
mov
dec
leave
insb
or
popa
or
jbe
out
insl
call
push
outsl
cmp
pop
mov
mov
outsb
out
jecxz
bound
cmp
mov
sbb
lods
dec
or
mull
test
repnz
subb
mov
sbb
xchg
mov
dec
jbe
pushf
ds
cmp
mov
xchg
aaa
or
test
cmp
gs
daa
lds
mov
fstpl
push
sbb
stc
lds
rcll
mov
xchg
test
sti
cmc
rcll
sbb
bound
jmp
xor
or
cmpsb
inc
pusha
fildl
scas
cltd
lock
repnz
and
cli
arpl
insl
xor
mov
cld
sbb
fwait
or
test
cmp
negb
out
xor
aas
insb
out
inc
add
addr16
fldenv
arpl
andl
jo
mov
inc
outsl
dec
adc
gs
fdivrl
cmp
cmp
cmp
dec
jns
insb
mov
je,pt
dec
mov
inc
rcll
mov
fidivs
ljmp
xchg
js
mov
xchg
push
fsts
sbb
sarl
cmpsl
jb
aad
in
js
push
dec
mov
cmp
push
mov
xchg
adc
roll
xlat
int
mul
add
mov
push
mov
xchg
sbb
mov
stc
sbb
xchg
jmp
cmpsl
popf
add
testb
mov
jmp
xchg
nop
push
and
sahf
scas
push
inc
daa
mov
xchg
cmp
mov
aaa
clc
or
dec
adc
mov
call
cmpsb
sti
add
aam
pop
mov
sub
push
cmpsl
pop
lods
rorb
cmp
mov
or
sbb
movsl
lcall
dec
in
movsb
loop
orl
inc
movsl
leave
inc
push
test
loope
out
dec
pushf
cltd
in
test
pop
dec
js
sbb
inc
out
mov
je
rcrb
jge
pop
arpl
les
adc
inc
xor
sub
scas
adc
dec
fcompl
js
es
push
fdivr
cmp
cmp
outsb
pop
mov
mov
aad
orb
jg
test
adc
in
push
mov
iret
aaa
mov
pusha
xchg
mov
xchg
inc
call
ret
sub
jo
shlb
mov
xor
in
xor
stos
and
icebp
fistpl
pop
xor
xchg
in
cltd
mov
mov
dec
imul
cmp
insb
out
cmc
das
mov
sti
jns
pop
sub
popf
push
or
data16
push
daa
push
dec
sub
stos
cwtl
mov
lea
cmp
adc
mov
jp
test
jecxz
sub
mov
fs
jle
mov
pusha
mov
push
push
sub
jle
and
xchg
fwait
cli
in
add
sub
test
sbb
push
jb
cld
jmp
xor
pop
hlt
data16
fsubrl
pop
cmp
lods
jb
test
ljmp
jbe
loop
mov
ja
and
hlt
mov
or
lret
lods
dec
xor
push
push
rcrb
pop
mov
lea
rorl
cmpsl
in
push
int
testl
in
fimuls
sahf
daa
xor
push
in
and
xchg
cmp
insl
push
xchg
push
push
loop
orl
mov
xchg
test
test
imul
xor
sarl
add
push
insb
fcoml
jbe
test
mov
adc
int3
vfnmsub132sd
sub
lock
clc
cmp
rcrb
mov
mov
es
cmp
cmp
aaa
jae
test
insb
es
dec
test
aas
mov
das
or
and
jp
fisubrl
adc
clc
mov
call
or
xchg
ja
mov
mov
push
dec
jno
inc
add
fimuls
pop
jns
mov
jo
cmpsl
outsb
xor
mov
sbb
rorl
outsl
xchg
mov
nop
sbb
movsl
cld
jb
pop
ljmp
cmc
jmp
ds
push
data16
or
adc
cltd
js
flds
ja
nop
jns
lock
les
push
hlt
dec
cmpsb
xor
pop
jp
in
mov
cmc
sarb
call
jae
loop
xchg
add
xchg
iret
sbb
pop
and
int3
xchg
mov
aad
fiaddl
push
push
mov
mov
aas
aam
mov
mov
and
ja
push
push
and
fdivrs
mov
shll
daa
adc
push
enter
mov
adc
jae
addr16
sarb
mov
mov
aad
mov
mov
or
lcall
adc
mov
inc
pop
push
aad
push
or
mov
shll
xchg
xchg
pop
xor
pop
ret
in
rcrb
test
out
cmpsb
jb
mov
mov
or
mov
adc
mov
lea
clc
xchg
or
in
cld
lahf
shl
insl
cmp
lock
mov
mov
xor
lcall
push
xor
and
pop
sbb
push
mov
sub
aam
iret
sti
adc
ss
lds
in
cmc
push
stos
les
push
ret
mov
cli
cli
sub
subb
mov
inc
mov
popa
sub
pop
arpl
dec
ljmp
lds
mov
fimuls
cmp
and
push
jae
pop
das
in
scas
inc
pusha
add
stc
mov
xchg
idivl
and
sub
notl
test
ret
and
adc
push
mov
sahf
xchg
mov
dec
cli
roll
jns
cltd
nop
jmp
mov
and
or
cmp
add
inc
push
test
pop
movsl
aam
pop
sub
fs
xchg
adc
cld
xchg
xchg
xor
fisttpll
je
push
jb
pop
xchg
popa
jne
inc
or
push
rorl
int3
clc
jmp
fsts
add
mov
faddl
insl
aad
fidivrl
pop
shlb
dec
sets
popa
mov
inc
inc
cs
mov
push
xchg
sub
stos
ret
dec
mov
fcoms
ficomps
pop
lret
cmp
and
mov
push
pop
aad
cmpsb
test
dec
add
stc
inc
sub
sti
jno
push
pop
addr16
pop
sub
orb
lret
decl
frstor
popf
jno
xor
sub
nop
xlat
inc
dec
mov
lahf
push
mov
stc
fs
dec
xorb
dec
daa
push
std
inc
dec
xchg
inc
inc
push
adc
pusha
lock
int
cltd
int3
aam
stos
test
mov
jmp
xlat
inc
push
jns
aaa
adc
aad
aaa
add
dec
mov
repz
sbb
and
xchg
cmp
loopne
mov
hlt
jecxz
pop
out
in
iret
xor
fsubp
pop
repz
or
mov
sub
sub
fcompp
add
xchg
out
xchg
inc
sti
push
inc
lods
lcall
ret
push
loope
in
mov
push
leave
jecxz
into
bound
aam
xor
je
rcrl
jle
jae
and
les
test
sub
mov
xchg
inc
mov
pusha
lds
fs
lret
or
mov
sbb
mov
lods
in
in
nop
mov
sub
cli
adc
aaa
dec
xor
into
movsb
jnp
ss
mov
fsubr
sub
das
inc
pop
adc
pop
add
sub
stos
lcall
and
daa
xchg
icebp
cmp
inc
xchg
xchg
sbb
jae
stc
in
inc
repnz
movsl
or
mov
call
cmp
sbbl
dec
pop
popf
mov
adc
mov
test
pop
and
mov
jge
jecxz
add
cs
lret
pop
or
push
push
mov
ds
ss
xchg
daa
add
cmp
iret
jmp
mov
add
sbb
add
jl
mov
fidivs
push
xor
out
pop
test
aad
out
adc
pop
mov
xlat
add
push
adc
push
add
jb
inc
cmp
xchg
and
pop
and
popf
xchg
sbb
lea
cmc
inc
and
aad
dec
xor
push
mov
sbb
xchg
in
inc
cmp
int
loop
mov
inc
aam
inc
xchg
push
push
fwait
imul
push
xor
mov
fdivl
and
popf
loop
mov
mov
movsl
sub
xchg
add
loopne
mov
loopne
daa
or
adc
mov
xor
movsb
mov
insb
pop
pop
dec
or
push
leave
test
sub
insb
aam
mov
nop
adc
jnp
dec
cmpsb
and
mov
scas
dec
lret
xorl
sbb
cmp
jmp
dec
xlat
stos
push
push
mov
add
inc
mov
mov
fwait
and
pop
add
scas
pop
ds
cmp
jle
or
enter
xor
mov
shll
insb
mov
rcr
inc
lret
mov
cli
adc
cmp
out
pop
mov
xchg
fadds
and
add
mov
xor
inc
frstor
mov
test
pop
jns
inc
ret
add
daa
mov
cmp
jne
enter
pop
fs
in
jg
pop
xchg
push
mov
and
scas
inc
cmp
jge
lds
loope
enter
add
xchg
push
inc
and
push
inc
jbe
aaa
out
popa
xor
out
mov
and
push
pop
or
cmpsb
mulb
ss
enter
jg
sbb
mov
nop
jecxz
fmulp
iret
ds
lods
in
add
mov
inc
sar
push
sub
push
mov
imul
pop
pop
dec
test
mov
dec
je
das
xchg
adc
fidivs
out
test
popf
hlt
push
and
sahf
adc
cmp
inc
in
xchg
mov
addr16
rcll
mov
pop
gs
loope
inc
cwtl
ret
aaa
das
popf
cmp
xor
xor
aas
sbb
in
adc
sub
outsb
shrb
ljmp
es
push
enter
jg
lods
sbb
mov
sbb
inc
outsb
mov
pusha
dec
pop
jno
out
fs
or
and
push
cmc
push
xor
push
jl
pop
push
dec
push
xchg
cmpb
mov
lods
sahf
inc
imul
pop
fidivrl
hlt
mov
stos
dec
nop
adc
enter
mov
and
das
push
jbe
insl
lahf
mov
in
test
test
arpl
fadd
and
push
mov
adc
push
test
sbb
ss
imul
or
push
xchg
sbb
xchg
adc
add
jo
mov
or
ljmp
nop
out
lods
stos
cmc
xor
sbb
sub
stc
adc
outsl
add
fdivrl
pop
push
inc
je
fildll
inc
mov
cmpsb
outsb
push
push
xor
repz
insl
mov
xchg
out
test
adc
sbb
test
inc
mov
icebp
addr16
lret
cmpsl
mov
push
cmc
nop
sbb
fldenv
adc
inc
out
lds
icebp
pop
cmc
pop
pop
jp,pt
fcomps
call
xchg
insb
mov
nop
and
jbe
in
jo
es
push
mov
js
jb
xchg
xchg
jo
sbb
test
cltd
cld
fistpll
dec
lret
lahf
sbb
stos
sbb
fnsave
pop
mov
push
mov
mov
and
push
sbb
xchg
mov
and
xor
adc
pop
ret
dec
jecxz
xor
jae
adc
add
aaa
cs
mov
setle
mov
ret
into
outsl
mov
scas
jns
js
stc
add
test
inc
dec
push
push
fucomip
fcmovbe
jno
and
mov
subb
pop
sub
insb
test
jns
pop
adc
jae
mov
outsb
mov
psubq
push
sub
inc
gs
sbb
leave
rorb
outsl
mov
sub
jp
stos
mov
aad
cmp
icebp
orl
popa
aam
testb
pop
mov
push
stc
push
push
mov
frstpm(287
cmp
dec
iret
clc
sub
mov
fmul
insb
shl
inc
fistps
test
in
add
add
or
in
jle
xchg
loopne
aad
in
fdivr
sbb
sbb
stc
jl
mov
xchg
and
mov
add
rcrl
sbb
pop
push
ljmp
sbbb
outsb
data16
adc
enter
ds
lods
inc
outsb
mov
negl
or
cmp
fmull
sub
xor
invd
dec
pop
cmpsb
sub
popf
sub
sub
out
shrl
lods
cmp
sbb
dec
ret
adc
dec
jp
leave
xchg
call
inc
loop
stos
in
adc
fsin
mov
lea
xor
repz
sbb
pushl
or
ljmp
shll
mov
dec
xor
sub
in
fldlg2
faddl
xlat
popa
mov
mov
push
xor
loop
mov
pop
or
jmp
dec
mov
pop
sarl
add
push
scas
and
and
adc
adc
imul
out
push
mov
repnz
push
gs
iret
cmp
cli
outsl
cmp
aas
shll
sub
sub
mov
fxch
inc
mov
lods
hlt
xor
inc
ljmp
pop
lahf
inc
lahf
out
mov
dec
dec
adc
fisttpl
xchg
inc
clc
cwtl
aas
nop
outsl
outsb
xor
add
sbb
and
data16
imul
adc
inc
adc
aaa
lods
pop
xchg
pop
bound
scas
shr
mov
shlb
scas
pop
mov
cwtl
data16
inc
push
fdivl
xchg
mov
cmp
xchg
adc
leave
xchg
pop
mov
out
inc
sbb
out
xchg
cltd
cmp
and
mov
mov
fistps
in
jbe
and
mov
xor
mov
out
pop
lcall
cmpsb
xchg
daa
cmp
test
adc
sbb
out
aam
fisttpl
nop
movsb
fisubrs
cli
mov
shll
or
in
int
mov
sub
jno
aas
or
adc
adc
mov
cmpsl
pop
popa
xor
mov
mov
dec
dec
in
shll
mov
inc
jp
sbb
fcomps
jbe
pop
push
je
mov
push
push
icebp
mov
push
sub
fildl
mov
out
aad
jmp
hlt
push
push
data16
dec
fldenv
jbe
mov
std
push
hlt
sub
pop
and
adc
mov
ffree
andl
xor
rorb
xor
sbb
push
adc
mov
in
cmpsl
jg
ret
jmp
jmp
xlat
cmp
into
xor
loope
and
xchg
and
shlb
aas
or
cmp
push
push
data16
cwtl
jo
dec
jg
outsb
jae
shl
iret
inc
cld
outsl
xor
mov
data16
mov
jecxz
aaa
cmp
adc
push
mov
nop
push
scas
mov
fucom
mov
cmp
lea
and
xchg
jecxz
dec
sbb
inc
dec
popa
bound
push
aas
fdivrl
movsl
sbb
sbb
or
cmpsl
gs
xchg
popf
jle
mov
js
int
inc
xlat
scas
mov
push
add
or
and
sbb
sbb
pop
sbb
cwtl
pop
pop
dec
push
das
cmp
out
or
stos
xchg
stos
pop
pop
es
cmp
sub
out
mov
push
lods
push
jle
lcall
mov
push
stc
fimull
pop
ljmp
cld
push
mov
sbb
es
enter
pop
fisubrs
call
out
test
inc
add
mov
dec
inc
sbb
pop
imul
arpl
scas
push
mov
cmp
mov
clc
bound
jge
xor
insb
jb
in
add
jge
dec
sub
in
repz
fisttps
repz
sar
ret
mov
adc
ret
arpl
and
test
pushf
mov
mov
lahf
mov
sbb
mov
cmp
in
ret
mov
fadd
xchg
cmp
jns
hlt
clc
sub
sub
sub
mov
jp
push
ret
je
jne
dec
nop
fs
hlt
insl
jl
mov
lods
fucomp
sbb
notb
cmp
xchg
fildl
mov
and
jo
lea
adc
jecxz
jae
fcmovnbe
sti
mov
dec
mov
mov
test
inc
out
ljmp
push
cmp
das
jp
add
inc
popf
pop
into
je
lods
sub
jl
stos
mov
stos
orl
mov
fs
pop
or
jmp
mov
fs
mov
pushf
jge
xchg
sub
arpl
outsb
push
rcll
mov
mov
pusha
mov
mov
stos
ja
jmp
shr
outsb
sarl
addr16
push
xor
mov
cltd
dec
mov
in
je
pop
es
push
add
push
loope
loop
mov
jg
mov
icebp
sti
int3
sahf
jnp
sahf
imul
in
adc
pop
pop
dec
push
cwtl
add
add
inc
mov
subb
shll
loopne
inc
mov
stc
test
mov
cmp
xchg
fcomip
loopne
jp
fsubrl
mov
repz
xchg
pop
loop
imul
popf
pop
addb
xor
movsl
in
xchg
js
sub
mov
lock
negb
aad
add
xchg
test
aas
push
cmp
fisttpl
jg
inc
cmp
or
xor
iret
mov
lods
fs
xor
test
adc
lea
adc
out
sbb
sahf
push
stc
jl
mov
cmp
add
imul
push
cmp
pop
and
push
jno
xchg
xchg
data16
pop
iret
and
imul
sub
int3
or
adc
stos
pusha
cli
call
movsb
xor
lahf
cli
adc
xchg
scas
or
mov
jo
mov
cmp
jbe
jmp
fsubrs
movb
xor
fcomp
and
sahf
sbb
sarl
push
xchg
xchg
aam
js
enter
or
push
pop
xchg
dec
fisttps
inc
push
jmp
mov
arpl
sub
out
fldenv
sub
movsl
pop
adc
inc
mov
mov
insb
mov
cmp
add
inc
dec
lret
jne
test
inc
ret
xor
in
fistpll
mov
int3
and
loopne
cmpsb
pop
inc
mov
inc
push
jle
movsl
adcl
xor
aas
sub
aam
push
or
mov
cmp
and
sahf
dec
mov
push
cli
cmp
add
out
xorl
je
and
cmc
xchg
xor
mov
imulb
jne
cli
in
pusha
mov
mov
repz
xor
push
sbb
mov
testb
frstor
sbbb
stos
cmp
adc
or
aaa
and
jo
out
cs
adc
pop
add
roll
push
add
lahf
or
push
daa
push
mov
int
negl
and
adc
mul
sub
leave
mov
out
sub
add
xchg
ljmp
test
jecxz
sub
ret
adc
add
in
jns
lea
cmp
mov
stos
lcall
inc
xlat
std
dec
xchg
pop
xchg
jl
sbb
shl
fs
popl
dec
mov
cmp
push
mov
stos
jae
xor
dec
fsubrl
outsl
mov
pop
pop
or
push
cmp
add
faddl
jo
hlt
gs
cld
sbb
lahf
scas
jg
xor
aam
testl
dec
pop
or
outsb
enter
sarb
pop
push
xor
xor
cmp
movl
test
cmpsb
ficoms
into
mov
xor
jnp
aad
push
push
rorb
xor
cmc
cmp
xchg
repz
mov
testl
stos
sahf
int3
xchg
fistpll
add
dec
pusha
in
mov
adc
or
mov
mov
or
cmc
pop
andl
mov
arpl
je
aas
mov
dec
xor
stos
test
mov
in
mov
adcb
rorb
dec
sub
jo
enter
sbb
inc
sub
inc
mov
mov
dec
mov
cmpsl
test
mov
cmp
add
jmp
add
leave
fldl
mov
popa
int3
push
into
jne
imul
addr16
xchg
jno
and
gs
push
fcomip
fs
mov
xor
adc
dec
or
iret
cmpsl
fldcw
pop
jno
aas
push
jecxz
aaa
lahf
or
inc
and
pusha
mov
push
test
pop
fistl
cmp
es
or
cmpsb
ficomps
cmc
xor
jae
inc
cltd
dec
daa
cli
cmp
fistl
cmpsl
mov
in
sbb
jle
fbstp
fbld
mov
in
sahf
test
cmp
sub
adcb
mov
in
or
out
gs
mov
nop
ja
cmp
test
es
cwtl
adc
add
xchg
rolb
mov
in
xadd
lea
cmpsl
repz
pushf
xchg
jns
xchg
push
pushf
test
insl
mov
jnp
dec
and
and
jecxz
adcl
fiaddl
je
mov
aam
cmp
dec
adcl
mov
fdivrs
mov
into
push
sahf
bound
test
stos
fistps
pop
pop
inc
xor
cmp
pop
xchg
clc
pop
jne
neg
popa
mov
gs
aam
jb
pop
push
push
pushl
inc
mov
movsb
test
and
hlt
aas
adc
cld
notl
jno
leave
clc
test
mov
mov
ljmp
cmp
push
pop
pop
repnz
mov
out
in
pop
dec
fdivr
out
test
fidivrs
js
cmp
je
in
adcl
mov
icebp
int3
adc
dec
arpl
pushf
mov
js
and
add
cwtl
sbb
ftst
or
sbb
lds
popa
jp
pop
mov
idiv
outsb
imul
cmp
cmp
cmpsb
out
gs
pop
or
adc
fldt
jg
adc
rcr
fmulp
sbb
mov
test
adc
popa
mov
mov
enter
fs
test
out
aad
push
iret
push
jbe
sub
xchg
aad
into
push
test
lahf
xor
jecxz
mov
aas
ds
ret
sti
pop
sbbb
mov
adc
addl
mov
pushf
sbb
sbb
rol
addr16
xchg
aaa
shlb
ja
xlat
jmp
inc
add
addr16
cmp
test
or
popa
data16
mov
mov
push
outsb
bound
ljmp
ret
out
cmp
out
sbb
sub
push
shrb
and
xchg
sub
enter
mov
jecxz
xchg
testl
jge
popf
js
fistpll
or
inc
cld
mov
stc
cld
lcall
cmp
xor
lret
adc
jbe
pop
adc
out
repz
push
stos
repnz
jns
mov
lods
mov
push
xor
adc
push
test
pushf
ljmp
cmc
lahf
sub
mov
push
jne
xchg
or
aam
int
xchg
inc
jb
shlb
pop
cmpsb
and
movb
sbbb
push
fdivr
xchg
cmpsb
jo
iret
test
add
loopne
divl
pusha
fldcw
fisubs
xchg
adc
addl
hlt
movsb
and
lahf
addr16
in
xor
inc
push
or
mov
shll
xor
rorb
stos
sbb
aam
mov
xchg
xchg
outsb
popf
cmpb
and
ffreep
in
arpl
dec
adc
cwtl
mov
add
sarl
dec
cli
test
popa
cmc
push
sbb
inc
push
xor
sbb
sbb
enter
pusha
push
int
inc
mov
jo
pop
jp
lock
mov
or
push
loop
mov
mov
fwait
inc
cs
mov
stos
rcrl
mov
jne
sub
mov
lea
xchg
sbb
test
push
jge
mov
or
cwtl
dec
out
and
mov
insb
cmpsb
ja
addl
sbbl
arpl
mov
shrl
ror
das
out
nop
mov
ret
lcall
inc
imul
xor
stos
inc
dec
repz
mov
fbld
xchg
es
lock
xchg
rolb
jmp
jae
sbb
add
cltd
mov
nop
inc
sbb
sbb
lea
xorl
out
test
ret
or
cmc
xchg
mov
out
test
and
xor
push
cltd
pop
mov
iret
subl
adc
ja
push
dec
je
fs
mov
sahf
or
inc
jp
cmp
adc
outsl
jg
shll
imul
sahf
jne
pop
inc
popf
pop
ja
sahf
mov
pushf
out
jnp
sub
add
mov
ret
push
push
mov
inc
mov
pop
sahf
lret
pop
inc
push
inc
sarb
mov
cwtl
jl
pop
rclb
sub
ror
je
mov
mov
enter
xor
int3
xchg
aas
xchg
sarl
leave
aas
lods
xchg
xchg
sarb
dec
fwait
nop
jbe
and
push
sbb
gs
mov
push
push
mov
mov
gs
rcrl
add
inc
xorl
xor
pop
cmc
cmp
mov
loope
cmp
sti
xlat
or
ret
cltd
sbb
fimull
scas
push
fwait
stos
sub
mov
mov
mov
daa
mov
addr16
dec
and
lahf
cmp
xchg
xchg
xchg
dec
mov
std
jge
xchg
movsb
mov
inc
add
add
inc
rol
das
adc
push
push
cmp
and
clc
pop
outsb
mov
int3
sbb
pop
fcomps
roll
popa
sub
sbb
adc
sub
xchg
push
enter
subl
loopne
push
pop
sbb
mov
mov
vandnps
movsl
mov
repnz
cli
test
fldpi
push
jns,pn
test
cmc
stc
jl
loope
outsl
mov
sbb
jae
dec
sub
sub
jno
test
negl
in
fimull
call
mov
mov
inc
sub
test
dec
icebp
arpl
push
pop
lds
or
test
mov
mov
mov
mov
clc
ja
mov
jmp
mov
loopne
stc
mov
push
cmp
pushf
jb
lret
pop
test
xor
cltd
adc
mov
test
push
cmpsb
xor
push
push
pop
mov
testl
jl
aad
inc
push
cmp
out
jle
jbe
cmp
daa
jno
popa
test
test
mov
jns
lods
push
push
das
call
insl
shr
daa
xor
stos
inc
cmp
fsubs
loope
rclb
es
test
inc
sub
sbb
mov
mov
fimuls
stos
jmp
lcall
lret
stos
mov
nop
aad
bswap
mov
hlt
add
push
rcrb
aaa
sbb
int
mov
ss
and
jno
aam
inc
addr16
mov
push
sbb
rclb
xor
bswap
or
test
or
stc
mov
cmp
dec
es
sub
insl
ljmp
cs
out
push
jbe
iret
sbb
cltd
cmp
imul
push
mov
xchg
adc
loopne
lahf
adc
ljmp
xor
call
add
cmpsl
lds
cmpl
jnp
jmp
adc
lds
lds
in
jns
mov
outsl
pushf
adc
ds
or
xor
sbb
and
loop
add
popa
arpl
adc
sti
fildl
insl
push
imul
inc
inc
xchg
ret
pop
or
call
mov
lahf
and
cltd
test
imul
out
jo
sub
pop
jae
lahf
cli
cmp
loopne
sbb
adc
cmp
sti
add
rol
bound
les
or
std
mov
hlt
xchg
cwtl
int3
dec
xchg
mov
mov
in
cmp
out
pop
sbb
pop
inc
inc
cld
or
in
out
rcl
addr16
push
push
inc
push
xchg
sbb
rol
jl
movsl
negl
mov
out
cmc
stc
mov
inc
faddl
sub
jmp
add
pushf
inc
stc
and
lret
xchg
fists
xchg
inc
ficompl
iret
jo
and
add
mov
ret
test
leave
es
popa
pop
mov
mov
repz
popf
hlt
xor
cld
sub
hlt
jns
idivb
ljmp
insb
rcrb
jne
cmpsb
mov
mov
jecxz
ret
pop
fiaddl
pop
inc
sbb
xlat
sbb
jo
in
or
pop
push
in
pop
jmp
mov
fwait
jnp
repz
pop
aam
scas
or
jns
mov
lahf
cwtl
push
lahf
pop
sub
dec
imul
mov
xlat
mov
popa
push
cmp
xor
icebp
mov
jne
push
xchg
inc
mov
cmp
add
or
jb
je
sub
dec
inc
xchg
stos
mov
inc
out
inc
fadds
cli
adc
inc
out
inc
sub
adc
mov
test
cs
clc
mov
iret
dec
pop
cld
and
pop
lods
mov
std
mov
adc
outsl
and
sahf
rorb
gs
dec
popa
mov
lods
divl
clc
rorl
mov
sub
dec
xlat
arpl
arpl
mov
test
mov
mov
jb
jo
and
leave
cmp
clts
fcom
jbe
mov
aas
mov
jg
hlt
mov
xor
stc
dec
and
sbb
cmpsl
jmp
inc
sbb
push
loopnew
xor
cs
movsl
repz
jne
inc
mov
and
and
sub
lds
scas
call
lea
in
push
aam
mov
aad
data16
jnp
xor
adc
mov
cmp
insb
ljmp
or
inc
xor
and
popf
adc
and
dec
call
sbb
lods
jge
and
xchg
sti
insl
das
xchg
fstpl
cmp
add
js
push
cmp
pop
jp
or
xor
xorb
jne
lret
cltd
dec
addb
lock
pop
idivl
jmp
scas
or
adc
sahf
add
sbb
and
loop
inc
add
jns
adc
and
mov
adcl
sahf
icebp
dec
imul
push
std
fisttpll
cmp
sbb
rolb
lcall
cmpsl
aaa
out
lock
and
mov
adc
int
pushf
add
inc
jl
fldt
sar
cld
mov
adc
mov
pop
cmp
in
js
in
addb
ret
dec
xchg
pop
arpl
push
or
gs
out
push
sbb
icebp
jg
mov
in
stos
jo
adc
iret
jecxz
aaa
cwtl
test
imul
adc
cmpsl
push
aaa
sarb
dec
sbb
cwtl
test
sti
scas
les
out
mov
inc
aas
pop
dec
or
popa
rclb
cs
mov
pushf
push
pop
lods
fdivr
push
inc
pop
sub
push
lds
jle
shr
ret
mov
xchg
or
sbb
movsb
cmc
mov
stos
cmp
iret
pusha
nop
cmpsb
or
testl
mov
xor
mov
sbb
cmp
cmp
clc
dec
adc
push
xor
mov
mov
xor
lods
clc
iret
jnp
sbb
insb
mov
pop
push
and
xchg
or
imul
out
xor
jge
stos
mov
cmp
mov
jg
pop
sub
cmp
sub
inc
xchg
xor
cmpsb
cmc
xor
mov
pop
and
xor
sub
shl
ss
mov
rcr
lds
add
fcoms
and
pop
ds
push
push
ffreep
lods
das
sub
xchg
cmc
push
jp
or
push
cmp
jp
jp
imul
cmp
push
cmc
or
and
xchg
inc
cli
jl
clc
lahf
mov
add
cli
in
and
fnsave
pop
into
nop
neg
cwtl
cmpsl
repz
xchg
lods
push
push
xchg
adc
repz
fldt
mov
sbb
test
in
and
push
les
stc
stos
jg
dec
sahf
les
dec
jno
mov
mov
ret
jne
sub
pop
mov
adc
or
stos
cmp
add
mov
cmp
cmpsl
fidivrs
mov
sub
in
sub
lods
push
mov
scas
or
and
and
dec
loop
or
ficoml
lea
fs
and
mov
je
mov
or
or
push
hlt
inc
push
cmp
mov
fisttps
jg
les
add
xchg
lahf
inc
daa
outsb
ss
jle
not
rcrb
add
sub
jb
sbb
adcb
jo
fiaddl
xchg
push
lods
jno
push
in
jnp
loope
iret
sub
jbe
adc
movsl
mov
outsl
or
cltd
fistps
rcl
mov
imul
jmp
in
inc
push
in
ds
or
cli
inc
pop
or
xchg
pop
xor
jnp
cmpsl
or
and
cmp
jmp
push
or
and
popa
or
cmpsb
cmp
add
pop
int3
dec
rcpps
ret
inc
mov
pop
sbb
aad
xchg
out
jle
popa
aam
sub
divl
adc
push
outsb
out
insb
insl
and
dec
data16
scas
add
cmp
repnz
rcrb
push
inc
xchg
ret
mov
jecxz
dec
cmp
dec
iret
push
rorw
sbb
into
pop
inc
xchg
insl
mov
mov
js
test
push
xor
or
aam
jecxz
pop
gs
or
mov
mov
push
mov
rcrb
idivl
adc
loop
or
out
or
repz
mov
mov
mov
push
mov
jecxz
pop
mov
mov
inc
push
out
inc
outsl
push
jmp
shlb
xchg
or
lcall
xor
jnp
adc
mov
int3
pop
sbb
adc
adc
movsb
xchg
ds
aas
add
rorl
adc
lret
popa
dec
push
mov
sub
insl
gs
out
mov
jb
sub
push
push
mov
lret
or
repnz
xchg
loop
lcall
lahf
push
xchg
lret
aas
aam
mov
movsl
insl
jnp
fidivrl
cli
call
or
bound
sub
das
dec
rcr
pop
xchg
lret
enter
hlt
or
mov
out
js
ffree
hlt
pop
cs
fiadds
hlt
add
jg
das
out
mov
push
fs
dec
ss
push
fst
pop
repz
push
inc
push
mov
dec
sub
mov
adc
cmp
and
xorl
cmp
stos
sbb
stos
aam
repnz
movsl
push
int
pop
in
movsb
push
stc
dec
test
fwait
cwtl
pop
xchg
sub
add
pop
ds
icebp
test
sub
push
or
mov
mov
js
adc
ljmp
mov
pop
aam
bound
call
mov
jle
mov
and
xor
sbb
nop
sbb
fmull
push
insb
mov
xchg
push
add
pop
int
jae
das
ds
dec
xor
in
out
push
mov
adc
or
mov
imul
push
lods
adc
cmp
int3
in
pop
rcl
mov
jbe
mov
scas
cmp
das
js
jmp
loope
movsb
cs
leave
fcmove
push
adc
xchg
fucomp
mov
je
lock
dec
mov
lods
sahf
cmp
xchg
movl
cmp
and
mov
mov
fcmovnb
rcl
jge
add
repnz
rcll
dec
sbb
cmp
inc
push
stc
das
out
adc
mov
mov
pushf
pop
and
cmpsl
xor
mov
int3
cld
and
stc
cmpsl
and
sub
ds
lods
xchg
addr16
jbe
cmp
inc
pop
pop
mov
into
cmp
lock
cmp
or
sbb
or
aas
nop
mov
repz
jge
push
xchg
sub
fimuls
ret
pop
nop
loope
mov
daa
mov
fdivl
rolb
inc
rcrl
std
xchg
and
push
in
inc
out
xchg
imul
aad
fnstenv
pop
leave
shll
shll
cld
repnz
jl
push
adc
imul
or
out
xchg
dec
xchg
mov
xlat
leave
into
repz
sub
cmc
jo
adc
test
mov
jl
pop
adc
pop
xchg
das
int
ret
lock
cmp
jp
es
add
push
add
insl
iret
or
add
inc
add
mov
lahf
jecxz
mov
rorl
outsb
mov
and
cld
add
pop
mov
lea
inc
in
je
pop
fld
mov
fbld
jl
xchg
arpl
addr16
iret
xchg
mov
jne
sbb
popf
push
and
jge
int
xor
adc
pop
jmp
gs
sarl
jmp
sub
pop
mov
xchg
fbstp
cwtl
shlb
jecxz
mov
push
fdiv
in
mov
nop
adc
or
cmp
inc
and
jge
push
mov
inc
wbinvd
push
stc
adc
pop
dec
xchg
orb
sbb
jl
mov
fadds
jle
aad
in
icebp
rcrl
adc
mov
pop
xor
jbe
and
int
xor
push
sarb
mov
popa
je
pop
cmp
cmovo
sbb
mov
mov
mov
sub
test
pop
mov
inc
sub
xchg
imul
outsb
in
adc
adc
repnz
mov
outsb
push
xchg
test
pushf
adc
mov
add
cmpsl
imul
mov
ja
add
jb
scas
cmp
and
xor
mov
out
jg
or
mov
ss
scas
fptan
adc
mov
jns
inc
xchg
loopne
popf
stos
push
cmp
sub
subb
adc
xor
add
sahf
xorl
mov
les
xor
dec
jno
sub
dec
ja
js
test
out
adc
and
dec
movsl
arpl
xor
jns
lret
jle
pusha
pop
mov
ret
pushf
aam
push
iret
popf
pop
insl
sbb
cmpsb
bound
mov
pushf
outsl
xchg
jo
sarl
inc
mov
mov
imul
push
rep
pop
aam
push
and
scas
sbb
push
movsl
popa
cmp
cmc
push
lcall
imul
push
push
rcl
lcall
cmp
sbb
rol
pop
cmp
mov
pop
inc
rcr
cmp
stos
outsb
add
aaa
shlb
scas
mov
call
dec
fists
hlt
xorl
daa
jbe
mov
mov
adc
out
ss
inc
ret
lret
out
mov
loope
outsl
lea
into
sub
xor
pusha
sbb
mov
sub
movsl
clc
jb
fwait
and
loopne
nop
lods
inc
mov
pop
ja
xor
stc
inc
fcomip
mov
dec
push
daa
jb
scas
icebp
into
lods
mov
fildl
sub
sahf
sbbb
inc
ds
push
aas
mov
stos
and
out
pop
sub
xchg
movsb
inc
out
push
adc
lret
adc
xor
xor
mov
or
xchg
dec
cmpsl
mov
cmp
mov
cmc
xchg
dec
dec
mov
ret
jle
xchg
stc
out
push
cld
xchg
mov
clc
xor
rolb
jo
xchg
sub
xchg
push
jle
fwait
mov
xchg
sub
sub
fisubrl
dec
jp
ljmp
push
add
ret
sub
icebp
push
sbb
fisubrs
cmc
scas
push
ficoml
lret
mov
push
xor
inc
mov
inc
jns
fwait
xor
jbe
dec
decl
cmp
xor
lcall
fimuls
outsl
into
ret
lods
pushf
mov
adc
dec
mov
jae
call
sarl
pop
inc
cwtl
fmul
and
fs
cs
lcall
xor
jl
mov
xchg
lcall
add
push
das
push
pop
lret
jb
repnz
adc
lods
sub
jg
ljmp
mov
ss
xchg
dec
ficompl
fcmovb
nop
pusha
ret
nop
lret
push
inc
add
pop
outsl
pushf
shlb
mov
cmp
inc
icebp
pop
fs
push
xor
sub
addps
dec
or
mov
dec
lea
adcb
xlat
dec
mov
inc
xor
test
jae
scas
pusha
dec
ljmp
pop
hlt
fistl
pop
push
cmp
mov
fcmovb
leave
addr16
add
mov
or
jge
xor
cltd
push
push
mov
jns
jae
xchg
daa
insb
dec
pop
adc
mov
sbb
xchg
xchg
ja
subl
mov
and
or
cmp
data16
icebp
add
sub
scas
cmc
int
or
inc
iret
push
or
and
out
popf
xor
mov
mull
push
hlt
mov
repz
or
dec
stc
pop
fs
xor
insl
sub
pop
add
pop
loope
mov
xor
jnp
mov
cmp
test
or
lds
stos
test
enter
orl
inc
lret
bound
shl
xchg
sbb
jmp
jnp
das
cmp
in
addl
jl
adc
dec
jge
movsl
and
enter
push
cmp
lret
lea
out
push
in
mov
sub
mov
adc
aaa
pop
pop
divb
xorb
das
inc
add
cmp
cmp
xchg
lcall
sub
fwait
or
das
pop
icebp
orl
test
cmp
and
mov
xchg
int
mov
hlt
cmp
inc
mov
jb
mov
xchg
mov
js
cmp
add
popf
jnp
sub
fchs
loope
cmp
xchg
sbb
out
sub
push
xlat
xchg
mov
data16
fbstp
mov
icebp
cwtl
and
push
nop
sub
lahf
ret
sarb
mov
jmp
test
adc
fiaddl
fstpl
or
and
in
pushf
mov
cmc
test
mov
add
fidivrs
pop
mov
mov
xchg
inc
jne
dec
mov
jle
xor
dec
cwtl
push
stc
xorb
mov
jbe
fnstsw
jb
ljmp
cmp
hlt
shlb
mov
imulb
push
clc
push
mov
shll
sbb
divl
or
aaa
in
arpl
imulb
js
sbb
lock
leave
pop
scas
dec
add
in
push
lods
and
stos
adc
jne
sbb
icebp
add
push
mov
adc
xchg
jno
stos
sbb
xor
movsl
pop
mov
mov
cs
sbb
xchg
fsts
sarb
ret
add
push
xor
pop
jecxz
fwait
popa
dec
out
shll
mov
adc
leave
in
loope
inc
out
mov
into
mov
and
mov
mov
pusha
call
ret
pop
mov
adc
mov
sarl
mov
hlt
xchg
enter
mov
or
xchg
shll
cmp
xor
add
adc
jg
xor
and
mov
std
out
mov
insb
rclb
xor
xlat
mov
lahf
xchg
jp
popa
mov
stos
and
mov
imul
mov
lret
cltd
iret
mov
sub
addl
or
sbb
or
push
and
stc
adc
cmp
out
push
aam
push
idiv
pop
cld
clc
sbbb
cmp
int
dec
mov
adc
sti
loopne
mov
inc
into
mov
jbe
fistl
mov
flds
sub
clc
fcomp
out
push
inc
sbb
in
das
adc
xchg
inc
jae
rcrb
xor
sub
xchg
adc
jp
aaa
adc
rol
and
xchg
sub
xor
fstl
mov
or
push
roll
aam
lret
xchg
test
rclb
push
jmp
jl
mov
insl
pop
pop
sti
fstpl
add
mov
fsubrs
inc
lahf
inc
lea
clc
call
inc
sarl
push
xchg
push
mov
jp
and
mov
shrb
mov
and
ret
clc
test
gs
jns
cmp
pop
inc
mov
adc
and
sahf
sbbb
sbbb
inc
jmp
sub
xchg
data16
pusha
or
dec
decb
iret
das
ret
xor
mov
sti
int
pusha
dec
cmp
int
cld
mov
repz
xchg
xchg
cwtl
aad
sbb
je
jbe
cwtl
orb
movsb
mov
fisttpll
xchg
pop
mov
sub
jne
lcall
dec
sahf
push
js
pop
mov
call
mov
icebp
ret
mov
and
mov
mov
inc
add
push
xchg
int3
aad
roll
gs
std
pop
repz
dec
push
cmp
mov
psubusw
xor
pop
cmpsl
fwait
loop
test
jno
mov
xor
adc
ret
or
out
test
pop
out
jmp
jno
adc
sbb
adc
dec
pop
pop
dec
adc
sub
dec
pop
mov
test
dec
insb
mov
loopne
dec
push
iret
addr16
shr
jb
stos
xchg
xchg
lcall
icebp
or
cmp
jp
stc
shr
in
repnz
xor
jmp
mov
fstpl
mov
push
lock
in
iret
sbb
push
add
dec
xor
inc
mov
int
dec
mulw
js
sub
ja
cltd
ret
cwtl
push
xorl
jne,pt
loop
push
pop
cmc
pop
push
jne
outsl
ds
adc
mov
inc
ficomps
lret
sub
and
loope
push
stc
mov
das
ss
sub
jns
cmpsl
fwait
test
imul
out
lret
out
xor
in
jmp
out
or
cmpsl
jl
adc
xchg
pop
test
cmpsl
mov
xor
xor
mov
mov
push
cmp
movzbl
sti
andb
xlat
andb
jns
mov
daa
out
out
lret
fists
jne
push
pop
shll
xlat
adc
movsb
jge
outsl
cld
jle,pt
inc
mov
jnp
pop
aas
dec
inc
mov
sub
adc
test
int
clc
rclb
std
pop
dec
push
imul
lds
fisubl
repnz
xor
mov
pop
xchg
test
shll
pop
stc
add
iret
mov
insl
jl
jno
inc
push
and
call
int3
nop
sarb
jmp
jnp,pn
jmp
testl
sub
int
roll
adc
push
jo
test
in
cmp
push
sub
push
push
cmc
testb
jl
andb
jl
and
cmp
or
test
call
lea
jb
jmp
out
xor
mov
jmp
std
bound
push
insl
insl
mov
scas
inc
in
sbb
mov
dec
and
sub
cltd
scas
hlt
cmp
and
cmp
inc
mov
push
aam
hlt
mov
mov
stc
adc
jp
xchg
jo
out
jns
into
out
jge
dec
test
add
stc
pop
jge
fisubl
outsl
add
mov
aas
push
mov
push
inc
push
lds
sti
push
adc
lcall
jecxz
push
push
in
in
cmp
repz
mov
cs
ljmp
bound
dec
es
pop
xchg
and
cmpsl
sbb
sub
mov
mov
push
ss
and
rcr
out
cltd
sbb
jle
std
aaa
mov
scas
sarl
les
std
add
add
int
repz
daa
imull
lds
pop
or
out
sub
sub
loop
jne
push
fsubrs
mov
aaa
out
xchg
fstpt
aam
fisubl
in
pop
stos
dec
push
jne
arpl
lahf
jno
xchg
pop
mov
adc
xor
adc
pop
int
mov
pop
mov
das
pop
push
scas
fdivr
push
test
xchg
dec
scas
jo
sbb
push
fscale
inc
mov
pop
pop
adc
lret
adc
xchg
in
add
add
cmp
shll
fcmovnb
mov
aaa
jl
push
jmp
repz
push
xchg
push
push
sub
push
sbb
xchg
jmp
mov
or
lcall
int
out
adc
lcall
nop
jecxz
pop
push
in
mov
pop
jbe
dec
push
lock
push
push
in
jae
jae
jl
ds
aas
jno
sub
loopne
imul
xorb
sbb
in
xlat
imul
inc
call
addl
das
jp
pop
cmpsl
stos
push
call
fidivl
mov
inc
xorl
shrl
cmpsl
jae
sub
inc
mov
lret
adc
mov
push
fnstenv
inc
movsl
addb
mov
mov
lret
lcall
ja
gs
jo,pn
mov
xor
or
xchg
stos
mov
sbb
aad
push
iret
mov
aad
cmp
mov
jno
scas
int
push
imul
enter
dec
pop
jp
mov
repz
fdivrl
sahf
inc
shll
mov
xor
and
aam
shr
std
pop
pop
int
out
dec
in
push
push
pop
pminsw
jge
pop
push
shrb
dec
mov
add
pop
stos
or
lret
shl
push
push
mov
js
adc
pop
inc
cwtl
xchg
mov
xor
iret
mov
pop
int3
and
test
pop
sbb
inc
dec
bound
bound
test
ret
and
push
fimuls
jne
movsb
jmp
cmp
mov
movsb
in
sub
in
movsw
mov
mov
stos
icebp
mov
or
addr16
out
jo
pop
mov
mov
cli
pop
xchg
xchg
pop
xchg
cmp
pop
add
ds
call
notl
sub
jne
mov
clc
push
mov
push
cld
mov
or
pop
jnp
int
jge
dec
pop
sub
in
popa
sbb
in
or
out
rorb
sub
insb
cmp
ret
sub
addr16
adc
lock
push
pop
push
nop
das
out
lahf
xor
add
and
test
loopne
inc
pushf
mov
jnp
jno
fs
shrl
enter
xchg
lea
and
lods
fsubrp
inc
daa
hlt
xchg
xchg
ja
mov
lret
adcl
push
dec
jl
rorl
xor
stos
cmpsl
movsl
out
jbe
data16
arpl
add
push
mov
test
addr16
nop
enter
stos
mov
dec
pushf
test
shl
mov
jecxz
fnstcw
xor
cmp
mov
scas
loop
test
fadd
add
ret
jl
scas
jnp
jno
dec
and
adc
push
out
shl
ficoml
movsb
dec
out
mov
dec
stc
cmp
mov
cmpsb
inc
pop
inc
icebp
popa
mov
jb
ja
dec
pop
dec
cmp
sub
pop
scas
ds
loopne
lods
clc
sub
push
dec
jne
clc
and
sbb
pop
jp
test
inc
leave
shlb
fucom
and
sub
xchg
xchg
arpl
xor
je
sbb
mov
push
push
testb
outsl
sarl
mov
test
pop
iret
jmp
sub
pop
mov
xchg
fisttpll
xor
lock
fistpl
out
icebp
fildll
xchg
pop
cmp
or
push
push
add
jnp
xchg
loop
pop
fwait
mov
sbb
dec
or
push
dec
aaa
pop
or
inc
or
adc
es
xchg
and
lds
xchg
enter
adc
fwait
stos
push
adc
xchg
pop
fldt
in
mov
mov
lea
push
add
popf
loop
aaa
bound
jge
pop
repz
push
adc
jnp
jl
xor
xor
andb
fdivrs
outsl
cmp
adcl
mov
idiv
nop
xchg
andb
sarb
mov
lods
fwait
daa
bound
popf
fcompl
int
stos
jbe
xor
or
scas
mov
daa
mov
mov
add
cmp
repz
in
dec
mov
add
subl
pop
or
pop
in
push
fcoms
loopne
pop
aam
out
ror
es
out
fistpl
lock
cmpsb
dec
repnz
popa
jp
test
mov
dec
add
and
adc
mov
mov
mov
jae
inc
aam
pop
or
loope
test
jmp
dec
fsubrl
pop
dec
ds
mov
mov
mov
mov
mov
mov
movsl
nop
or
sbb
lods
or
pop
fistpll
dec
mov
lea
jnp
or
sbb
jno
jbe
arpl
xchg
bound
add
mov
gs
insl
jp
mov
mov
cmpsb
hlt
dec
imul
mov
inc
shl
fisubrs
ljmp
pop
andl
outsl
jecxz
test
in
mov
gs
out
xchg
popa
das
addr16
push
cld
jo
add
stos
or
sub
adc
insl
mov
hlt
jo
mov
mov
outsb
and
sbb
and
cmpl
dec
rolb
mov
sbb
push
jno
xchg
dec
lcall
mov
xorb
hlt
out
shr
jmp
std
loope
mov
lock
in
cmp
test
and
xlat
sbb
int
mov
jle
mov
sbb
stos
xchg
hlt
loope
sub
imul
addr16
lahf
cmp
adc
and
mov
mov
mov
hlt
andb
mov
sub
mov
cmp
cwtl
inc
call
xchg
sbb
jl
push
inc
test
lds
mov
and
xchg
test
mov
jae
inc
jne
lret
mov
in
test
mov
adc
add
clc
push
cmpsl
pushf
loopne
adc
sub
cs
clc
jle
daa
mov
xchg
adc
movsb
xor
test
test
pop
cmp
pop
add
inc
enter
fcoms
inc
arpl
and
sarb
out
lcall
push
out
out
es
aad
les
jbe
lret
jle
test
mov
dec
cs
movsl
pop
mov
out
jmp
les
por
or
lcall
lcall
inc
pop
sbb
inc
or
pushf
in
push
jl
pop
lret
inc
into
dec
cmc
out
je
xor
inc
xchg
xchg
or
mov
dec
shlb
or
inc
test
arpl
fisubl
test
sub
cltd
es
sbb
and
arpl
rolb
loopne
cmpsl
and
inc
aas
mov
fdivl
imul
sub
aas
rclb
fsubl
out
push
das
xchg
mov
pop
mov
xorb
ljmp
mov
jg
push
data16
lock
or
je
jnp
add
ljmp
sub
aaa
cld
xor
sub
outsb
into
inc
inc
in
sbbb
add
imul
js
mov
mov
repz
arpl
xor
sti
sbb
test
in
inc
inc
mov
jnp
add
dec
outsb
stos
cmp
mov
or
jmp
mov
inc
xor
or
aas
xchg
jbe
fcomi
sub
imul
add
and
xor
xor
orl
je
and
in
mov
adc
sub
scas
hlt
loopne
es
fwait
test
gs
lret
and
enter
jmp
rclb
or
cmpsl
jb
push
xor
cmp
sub
hlt
bound
fidivl
push
rcrb
xor
fld
inc
sbb
jno
aam
jecxz
push
jle
shll
stc
cmp
and
mov
in
cld
roll
inc
inc
mov
jecxz
push
pop
jne
jge
scas
fisubrl
push
jb
pop
aam
gs
aam
adc
cmp
out
push
popa
sbb
xchg
add
sub
out
jns
mov
shll
ret
inc
das
xlat
mov
dec
xor
xchg
rclb
mov
icebp
cmpsb
clc
jecxz
std
stos
sahf
mov
pop
cltd
lods
or
and
out
imul
ja
sub
jnp
js
jno
rcrl
add
push
inc
dec
xchg
sbb
jnp
adc
pop
push
and
fldt
push
mov
jmp
jbe
cmp
pop
or
add
jl
push
test
inc
movsl
xlat
in
add
xchg
cmp
xor
pop
dec
mov
or
fidivrl
or
push
adc
idivl
ret
ljmp
mov
pop
movsb
repnz
cs
shrl
add
or
xor
cs
data16
sbb
and
jae
out
add
add
ficomps
xor
cwtl
aam
inc
in
loop
sub
cwtl
js
mov
cs
lret
test
or
jnp
add
in
rorb
xor
out
cmp
rorl
stos
push
pop
jnp
dec
sub
adc
test
mov
clc
fisttpl
dec
ret
pop
mov
mov
push
jmp
push
fs
cwtl
icebp
add
mov
sti
inc
leave
sub
ret
jp
adcl
pop
loopne
mov
xor
xchg
lret
xlat
mov
xchg
jno
adc
push
adc
outsb
xchg
int
mov
adc
pop
xlat
or
mov
ljmp
lods
sbb
pop
aaa
es
mov
add
sbb
pop
ret
pop
push
inc
loop
mov
jle
mov
cs
cs
mov
xchg
and
inc
fcoml
in
int
mov
ljmp
dec
adc
mov
push
xchg
out
std
inc
insb
add
sub
push
sub
dec
lcall
js
in
jne
and
lea
or
shlb
or
xlat
ss
or
pushf
jae
xor
std
pop
das
rcll
and
dec
jle
movb
arpl
mov
daa
pop
scas
outsl
je
and
sbb
xor
cli
in
lea
ret
add
mov
cltd
rclb
dec
fsubrp
xchg
push
jecxz
or
je
mov
test
rolb
adc
mov
push
dec
iret
or
fwait
cwtl
xchg
cmp
xor
add
cmp
cmp
dec
ret
pop
std
or
mov
adc
and
jne
lods
jl
rcrl
jl
sbb
xchg
xor
shl
sub
loopne
pushf
scas
mov
push
nop
mov
iret
jl
lds
in
sub
test
push
mov
mov
mov
sbb
mov
inc
mov
jl
sbb
dec
pusha
or
mov
mov
xchg
mov
sbb
inc
pop
push
js
push
mov
and
push
and
inc
daa
xor
mov
inc
icebp
cmp
push
cmpsb
pushf
aam
popf
inc
fdivp
add
jnp
jb
ja
enter
out
sbb
imul
add
jnp
jnp
inc
mov
mov
add
dec
lds
mov
ret
pop
cmp
xrelease
dec
fisubl
icebp
sub
movl
ret
pop
leave
push
imul
sub
mov
sub
test
lret
mov
je
push
jg
jp
or
shl
rorl
jns
aaa
pop
pushf
and
int3
sbb
arpl
loopne
add
xor
ljmp
push
stc
pop
fldl
or
setg
lds
popa
repnz
mov
ret
scas
or
mov
mov
jb
movsb
xchg
push
sbb
cmp
xchg
cs
push
inc
jbe
push
mov
jb
int3
xchg
in
mov
jnp
mov
and
fcmovnbe
and
fsubrl
das
pushf
mov
cmp
ds
call
or
jge
xor
pop
pusha
push
int
mov
fcmovnbe
jl
addr16
outsl
js
testb
repz
jnp
xor
cld
int
mull
sbbl
in
ja
call
das
inc
mov
test
sub
adc
add
imul
lea
sbb
andb
dec
cmc
fcom
mov
cmp
push
int
sbb
insl
mov
pop
leave
cltd
xor
adc
outsl
out
aas
stos
push
dec
insl
ja
repz
mov
fstpt
or
push
lds
pop
push
lds
jle
out
cmpsb
daa
popf
add
push
out
pusha
adc
mov
stc
andl
ja,pt
dec
stos
mov
lea
xchg
sbb
nop
pop
lods
std
adc
test
push
maskmovq
divl
nop
je
shld
aam
cmp
data16
popa
mov
xor
ljmp
push
pop
pop
cld
jmp
or
push
std
out
mov
sbb
mov
and
and
ret
or
fmull
into
adc
or
xor
add
lcall
push
loop
xor
addl
cmp
and
xor
mov
pop
cmp
fdivs
movsl
imul
sub
sub
mov
add
loop
inc
pop
or
cs
je
mov
aaa
shl
adc
dec
sti
stc
jnp
inc
xor
testl
pop
pusha
cmc
pop
lods
mov
xchg
adc
aaa
movsl
les
xor
adc
pop
sub
dec
xor
xchg
loopne
cmp
dec
adc
xor
xchg
jmp
xchg
rclb
sub
out
rorl
mull
pop
mov
pushf
imul
movsb
pop
lods
inc
test
ret
out
std
aas
add
ja
pop
loope
faddl
inc
loopne
adc
jb
mov
jae
call
pop
insl
inc
cmpsl
lds
sbb
aad
loop
dec
push
aas
sub
pop
ja
xor
pop
jno
aad
xor
adc
or
out
or
aam
ret
mov
daa
pop
seta
dec
mov
add
jnp
mov
add
and
data16
insb
mov
dec
fs
inc
mov
ret
movsl
fiaddl
test
outsb
xor
addl
inc
adc
test
and
add
cltd
sar
pop
call
aad
mov
lret
push
popf
gs
sub
insb
jge
fdivp
jo
mov
pop
push
scas
pop
dec
out
mov
adc
arpl
fucom
rcrb
cmp
mov
out
xlat
add
pop
sbb
push
ljmp
scas
ljmp
push
in
push
mov
push
sub
sub
fdivr
jns
jns
stos
push
xor
aam
nop
fstpt
mov
xor
sahf
or
jae
jg
sbbl
dec
dec
in
out
add
pop
mov
dec
adc
jns
mov
xlat
pop
cltd
pop
mov
sahf
pop
sbb
or
mov
sbb
shll
int3
jle
and
dec
fmul
stos
aas
and
cld
inc
ljmp
hlt
or
icebp
in
into
inc
push
sub
cmp
jbe
or
faddp
inc
jae
hlt
popf
out
in
jo
cmp
loopne
outsl
scas
enter
mov
mov
xor
inc
push
out
jne
lds
scas
aad
popa
mov
adc
adc
pop
jp
sbb
sarl
fisttpll
fsubrs
sub
jae
jmp
pop
push
mov
push
add
fs
scas
push
cmp
lods
std
cmp
or
xor
ds
xchg
jnp
fldt
imul
sub
into
and
lods
push
leave
mov
movsb
popa
stc
lret
push
inc
cld
stos
lret
negb
mov
mulb
stos
outsb
ds
xchg
popf
and
repnz
cli
sub
lret
xor
push
sbb
push
xchg
aad
rorl
lods
in
xchg
jo
testl
aaa
inc
movsl
addr16
mov
loopne
sub
leave
arpl
sub
out
adcl
test
call
movsl
jg
mov
xchg
aas
sub
jnp
mov
cld
xlat
push
inc
test
test
push
in
add
shlb
outsb
xor
sub
ja
fwait
mov
cmp
das
jne
jb
dec
or
xchg
fwait
sahf
pop
test
test
mov
pop
or
fimuls
adc
in
sahf
adc
in
sti
sbb
pushf
shll
pop
fimull
xor
je
enter
or
enter
jnp
mov
and
sbb
xor
fmul
hlt
add
lea
adc
pusha
div
mov
mov
sti
out
push
and
fists
or
xchg
pop
enter
xorl
sub
das
in
in
mov
icebp
push
fwait
jns
cli
insl
jg
jne
call
cli
repz
cmc
jb
pop
adc
mov
mov
sub
hlt
or
push
movsl
jns
outsb
data16
cltd
xor
std
lods
push
sbb
jno
inc
in
sbb
pop
xchg
imull
loop
outsb
add
or
iret
inc
pop
andb
test
xchg
add
popa
inc
es
adc
mov
or
fimuls
out
mov
outsb
adc
gs
push
ret
pusha
stos
lahf
cmpsb
jb
pop
push
fwait
and
mov
mov
adc
cld
inc
clc
sub
jl
add
dec
movsb
push
push
into
lahf
clc
test
cwtl
incb
mov
lods
in
jne
jae
cmpsl
xor
in
mov
loop
es
sbb
mov
imul
adc
pop
aas
adc
pop
adc
data16
fistpll
test
jbe
shl
sti
add
outsb
sbb
daa
sti
push
mov
movsl
cmpsb
loop
cmp
pop
daa
mov
xchg
or
fs
ret
fidivrl
inc
mov
jno
in
xor
rcrb
adc
popf
popf
iret
sbb
or
sbbb
cmpsl
mov
popl
inc
jne
and
inc
or
pop
mov
xor
jp
gs
movsl
and
in
popf
xchg
mov
sbb
push
sub
popa
bound
add
lods
ds
popf
jp
mov
cltd
jne
adc
in
fildl
cmp
adc
push
jae
inc
push
in
shrl
mov
sbbl
and
dec
adc
add
sub
xchg
fsts
sahf
pop
add
xchg
push
pop
cltd
outsb
pop
filds
shl
or
jle
cmp
mov
sbb
repz
cli
xor
xor
nop
or
insb
stos
into
jecxz
sahf
xchg
adc
sbb
in
jbe
sbb
insb
cmp
or
or
imul
cld
and
movsb
dec
jg
movsl
in
in
inc
or
xor
outsl
cmpsl
in
sub
and
loopne
xchg
and
adc
es
mov
ficomps
es
and
outsb
dec
or
xchg
sub
cmpl
aad
or
in
xlat
rorl
stos
bswap
outsl
js
cmp
xchg
insb
push
sbb
inc
cli
icebp
fnsave
push
xor
push
mov
add
pop
pop
inc
cwtl
dec
fcomps
and
sub
adc
neg
aas
movb
sub
pop
cld
loopne
ret
xchg
fisubs
push
cmp
xchg
push
inc
into
lods
jnp
cmpsb
int3
pop
xchg
testb
in
xchg
rolb
dec
outsl
outsl
cmp
rolb
ds
xor
mov
xchg
fldcw
cmpsb
movsl
xlat
jae
jl
pop
adc
ljmp
ss
lock
xchg
inc
or
push
inc
adc
mov
test
test
xchg
imul
repnz
lea
outsb
jbe
and
cltd
jae
sbb
jns
or
pop
xchg
add
xor
cmp
lds
cld
cwtl
and
cs
and
adc
movsb
xlat
lahf
aam
and
adc
push
jmp
fcoms
or
jg
cs
pop
pop
sbb
sub
in
dec
in
test
outsb
loope
cmp
xchg
adc
mov
add
pop
daa
loop
dec
push
ret
cmp
mov
add
sub
enter
push
out
in
or
shlb
jmp
and
addr16
into
aaa
ja
xchg
push
jns
lret
pushf
loopne
sti
sbbl
or
xchg
mul
in
cmpsb
jnp
ret
in
stos
push
push
lock
arpl
jp
test
adc
jbe
and
jnp
inc
push
sarl
or
test
pop
mov
cmp
fstps
lea
mov
xchg
popf
pause
pop
popf
aas
dec
pushf
inc
and
movsb
andb
sub
shl
fs
sbb
mull
add
xchg
jp
movsl
add
ret
sub
mov
xchg
leave
inc
cmpsl
cmp
xchg
push
test
or
gs
fcoms
add
das
leave
pop
push
scas
ljmp
cmp
cwtl
sub
xor
lea
add
jnp
test
add
fcoml
xchg
in
pop
xchg
sbb
loop
pop
push
mov
adc
sub
xor
push
xchg
push
cld
stos
or
pop
test
out
push
idivl
sbb
shll
gs
pop
out
out
jns
xchg
jmp
pop
and
and
mov
ljmp
jno
out
and
push
shr
and
rolb
mov
addr16
jl
adc
fsubp
sbb
add
jp
inc
or
xchg
pop
xchg
cmp
stc
les
pushf
mov
or
and
shll
call
adc
lret
pop
add
pop
pushf
pop
sbb
jbe
cmp
hlt
popf
push
xlat
loope
lret
push
repnz
lea
adc
pop
add
sahf
xchg
stos
pusha
inc
std
pop
aaa
mov
pop
cmovge
out
repz
loop
xchg
sbb
add
xchg
bound
stc
dec
cmp
cmp
cmp
inc
addr16
dec
ds
cwtl
adc
xor
aad
push
inc
mov
lret
scas
adc
dec
addr16
jle
fcomp
dec
cmc
insl
cli
test
out
or
dec
xlat
and
xor
mov
addr16
cmp
mov
repnz
jo
adc
fcompl
js
or
xor
pop
add
pop
lret
ljmp
cmc
jmp
xchg
mov
cmp
mov
and
mov
shlb
sbb
sbb
jb
pushf
es
jae
aam
jbe
push
in
mov
lods
sbb
lahf
fsts
xchg
cmp
stos
and
and
mov
push
insb
sti
daa
mov
push
sbb
inc
insb
bound
mulb
and
cmc
cs
je
cltd
mov
ret
ret
mov
mov
adc
arpl
push
daa
jbe
pop
cmpsb
sub
cmpsl
cmc
ljmp
out
mov
mov
push
cmp
call
aas
repnz
push
and
inc
movsb
or
sbb
push
push
jnp
loop
xchg
lods
jmp
or
inc
xchg
mov
or
jno
dec
mov
les
mov
test
xchg
scas
pop
iret
add
sbb
sbb
xchg
lods
and
push
mov
sbb
stos
leave
adc
sbb
rorb
cli
mov
mov
push
imul
popa
out
mov
fisttps
ljmp
out
nop
cld
adc
jnp
and
ljmp
sub
lock
aas
jns
std
dec
scas
fxam
jmp
cwtl
jg
aaa
pushf
or
jno
pop
xor
xchg
mov
loope
xchg
aas
dec
lret
pop
sbb
mov
lahf
dec
pop
jo
aad
mov
xor
test
fs
test
add
push
out
clc
jl
and
fst
adc
cmp
add
iret
clc
adc
je
mov
push
fisttpll
mov
sar
adc
jle
lods
and
sub
enter
mov
sti
pop
adc
in
sub
iret
gs
pusha
push
pavgb
scas
jecxz
sarb
call
aaa
cmp
mov
cld
dec
and
inc
pushf
mov
add
pop
cld
dec
mov
jae
sahf
mov
daa
jge
cs
xor
outsl
dec
insl
das
sub
std
sbb
sub
cmpsb
cmp
dec
lods
ret
loop
cmpl
aas
cld
push
push
cmpsb
adc
jl
push
and
push
adc
out
jp
add
pop
fdivp
jle
mov
flds
lods
in
shrl
sarl
sbb
andl
in
ret
clc
xchg
out
imull
in
adcb
mov
pop
mov
sub
movsl
cmpsb
frstor
ljmp
aas
xchg
rclb
or
sub
mov
movsl
fwait
outsl
outsl
xchg
xchg
inc
in
rcll
testb
lock
leave
xchg
xor
ss
out
cmp
mov
sub
stos
adc
in
xlat
push
xlat
insb
jl
test
cmp
xor
inc
jp
imul
inc
jp
cmp
and
jo
pop
shrl
adc
inc
cmp
add
mov
push
jmp
adc
test
roll
bound
xchg
adc
jns,pt
test
lods
cmp
inc
lahf
imul
lods
aam
and
pop
je
sub
jmp
icebp
jns
cmp
lret
in
and
insl
add
mov
sbb
out
push
push
in
loop
inc
sbb
xchg
inc
bound
repnz
hlt
xchg
ret
cmp
pop
adc
cli
insb
roll
push
test
lods
xor
lret
push
pop
push
or
inc
push
stc
in
mov
mov
mov
xor
les
sbb
adc
push
mov
bound
mov
inc
rolb
xor
pusha
lahf
pop
ja
sub
test
sub
fcomip
test
lds
insl
dec
inc
stos
pop
leave
mov
pop
icebp
test
rclb
in
jl
sarl
xor
jae
sub
xchg
pop
push
mov
cmp
add
push
xor
hlt
jl
cltd
popa
rcrb
out
or
adc
mov
jg
in
cwtl
inc
jg
or
cmp
sub
xor
insl
call
enter
xorl
lcall
mov
push
adc
adc
or
xchg
sbb
sbb
call
dec
push
jno
in
and
sahf
mov
cwtl
fucomip
hlt
cmp
add
lret
adc
sbb
jge
mov
cmpsl
pop
sub
jmp
pushf
mov
push
rorb
imul
rcrl
sub
or
mov
push
movsb
pop
jbe
mov
into
dec
or
loopne
mov
xchg
mov
hlt
mov
fldenv
add
insl
lock
out
ss
xchg
fdivrl
push
sbbl
outsl
cmc
lret
out
push
adc
iret
fucompp
test
fwait
dec
mov
jle
loope
or
jecxz
das
popf
popf
jp
int
outsl
xor
xchg
xchg
jge
sbb
and
dec
aaa
in
mov
shll
or
inc
int3
sbb
sub
mov
imul
movsl
ret
cmp
lahf
pop
xchg
dec
push
mov
popa
xlat
mov
fldl
cmp
cmpsb
and
and
nop
sbb
cltd
shl
dec
mov
add
scas
fisttpll
push
pop
enter
pushf
push
xchg
insl
popf
push
dec
insb
jge
das
pinsrw
psubsb
sti
cmp
stos
sbb
pop
dec
ljmp
out
dec
in
ss
sbb
icebp
nop
fs
lret
add
hlt
cmpsb
inc
je
inc
addr16
popa
pop
adc
sub
cld
ret
sub
mov
loope
scas
pop
sub
fadd
repnz
adc
out
jl
dec
pushf
orl
mov
push
jg
sub
loop
mov
xchg
imul
xor
or
movsb
in
adc
fisubs
cwtl
js
rcrl
adc
lahf
ljmp
add
in
pushf
shrl
or
push
stos
addr16
bound
addr16
mov
out
std
scas
push
sbb
dec
sbb
adc
imul
xor
das
stc
popa
mov
pop
lahf
hlt
rorl
mov
gs
fwait
pop
xchg
add
xorb
es
lahf
inc
int3
daa
and
dec
cmp
xor
push
add
or
ds
sub
inc
les
pusha
and
arpl
movsl
and
scas
lahf
and
loopne
scas
cmp
xchg
adcb
mov
jb
loop
xchg
mov
gs
jmp
bound
xchg
test
rcr
mov
rcll
mov
or
push
scas
xchg
jg
inc
jle
sub
out
push
push
push
push
xor
sub
movsl
repnz
enter
fidivrl
fcomps
adc
mov
inc
mov
xchg
fstpt
lahf
xor
push
mov
mov
xor
stc
dec
pop
mov
loop
test
aam
ljmp
adcl
pop
test
xor
insl
jae
arpl
adc
call
outsb
arpl
mov
mov
xor
xor
push
mov
pop
mov
push
int
rclb
push
mov
out
sbb
and
lods
popf
pusha
dec
mov
dec
shrl
dec
xor
push
ret
xchg
sbb
sti
sub
push
shll
sub
mov
cmp
pop
fsubl
pop
pop
outsb
lock
mov
adc
cli
sub
or
divb
out
ss
mov
push
jne
outsb
adc
les
leave
shl
mov
mov
jne
cmp
mov
call
xor
pop
or
in
or
or
mov
mov
xor
cmp
pushf
jns
ror
ret
or
fs
xor
mov
int
repnz
in
and
iret
into
rolb
push
subb
add
add
xchg
outsl
or
xchg
out
sbb
pop
mov
mov
test
jbe
mov
jno
inc
outsb
lret
or
lea
iret
inc
xchg
jmp
jae
mov
lcall
sbb
push
xchg
push
in
rorb
lods
mov
int3
in
fldl
out
jnp
lcall
dec
lret
and
scas
push
cld
push
inc
lods
pop
jb
push
lret
dec
jp
sbb
jmp
xor
and
xlat
and
mov
mov
sub
ja
lcall
arpl
jnp
test
aas
dec
jge
adc
fs
dec
mov
orb
sbb
push
mov
jne
shl
movsl
imul
lcall
fwait
push
push
cmp
frstor
adcl
inc
add
adc
mov
lock
ja
mov
push
add
aaa
arpl
xor
and
movsl
fsubs
and
fnstenv
xchg
jnp
cmp
push
jo
lea
and
pop
loopne
push
mov
push
test
jno
inc
fs
lock
lds
mov
shl
in
adc
rclb
add
xchg
push
nop
and
pslld
cmp
ret
mov
mov
sub
mov
sbb
sarb
jmp
mov
pop
mov
sub
dec
jo
dec
push
out
jae
test
inc
divb
lds
data16
add
mov
in
mov
dec
cmp
filds
mov
jecxz
pushf
dec
xor
mov
xor
mov
lock
jmp
mov
cmpsb
gs
mov
push
mov
cltd
inc
jle
pop
outsl
popf
or
jecxz
mov
mov
xor
shlb
xor
jmp
pop
push
jecxz
dec
ja
jns
xchg
and
xor
jne
int
dec
push
lahf
dec
fldt
filds
arpl
xchg
loopne
jecxz
lret
scas
or
or
dec
push
cld
push
shl
cmp
mov
inc
popl
mov
bound
fsubl
ror
add
movsl
addr16
push
es
push
cmpsb
sub
movsl
jge
in
faddl
mov
inc
fcomi
jae
inc
mov
iret
add
arpl
cmpl
in
dec
jbe
push
stos
fdivrl
inc
fidivrs
stos
adc
or
out
cld
xor
sub
cwtl
pop
or
jb
jnp
pop
cltd
bound
push
daa
cltd
rorb
fiadds
adc
mov
or
and
xor
push
out
insb
aam
dec
adc
mov
icebp
in
test
xchg
loope
int
inc
jge
xchg
mov
jbe
addl
pop
out
pop
int
mov
test
sub
lds
lret
jle
mov
stos
or
push
mov
mul
lahf
xor
les
inc
dec
in
sbbl
jge
js
in
jae
and
daa
and
les
clc
or
je
cmp
popf
pop
mov
push
repnz
pop
or
pop
addr16
dec
out
into
sbb
add
pop
mov
xchg
pop
xchg
rcrb
add
or
cs
bound
stc
fcmovnb
cmp
or
or
inc
pushf
andl
leave
mov
mov
jno
mov
stos
test
pop
fnstsw
inc
fucomip
fldl
ret
mov
push
jnp
jno
in
xor
sbb
jp
xor
sub
cld
lea
pop
push
popf
adc
mov
stos
es
dec
xchg
iret
inc
arpl
xlat
and
mov
ss
decl
dec
lds
inc
pop
cmp
insb
mov
cmp
rol
lcall
dec
dec
filds
loopne
sbb
pop
jmp
cmpsb
sub
nop
mov
aas
rcr
dec
dec
xchg
cmp
adc
pop
bound
xor
mov
jg
pushf
int3
fadd
aam
fldt
sti
push
jno
dec
mov
mov
fs
test
lds
add
fwait
and
roll
fdivrs
inc
pushf
fstpt
cltd
xor
pop
clc
in
dec
pop
xor
push
lods
je
insb
je
lods
xchg
dec
and
inc
mov
or
xor
push
cmp
jge
cmpsb
and
cmpsb
loope
popf
pop
leave
lea
cltd
scas
jmp
jmp
push
mov
cltd
pop
sub
sbb
push
mov
push
neg
je
sub
sahf
out
fidivrl
xor
jo
push
repz
cld
pop
sbb
js
nop
xor
jmp
stc
push
icebp
pop
adc
fsubs
or
and
aam
xor
sbb
and
xchg
inc
mov
and
mov
xchg
out
loop
cmp
adc
enter
shrl
mov
test
dec
sti
xchg
mov
jmp
or
scas
sbb
mov
mov
fnstenv
lods
outsl
lods
mov
loopne
fbstp
divl
or
add
dec
xlat
data16
cmp
sub
sub
aas
push
pop
ds
jg,pn
aas
or
or
fcmovu
or
xchg
sbb
insb
jecxz,pt
pusha
rorb
jns
xor
rolb
xor
pop
jb
inc
pop
popf
jnp
gs
imul
stos
sub
jne
out
adc
shll
iret
aam
mov
call
jg
mov
std
out
movsb
test
rcrb
mov
shll
mov
xchg
add
inc
fiaddl
out
sub
lea
dec
cmpsl
pop
push
push
dec
pop
pop
sbb
sbb
jecxz
lahf
in
xchg
mov
sti
std
les
mov
sub
cli
sti
lret
mov
mov
fs
jbe
xchg
push
mov
cwtl
xor
and
rep
push
xor
shl
or
mov
das
test
adc
mov
inc
movsl
jns
jge
pusha
ss
addb
pop
and
mov
repz
scas
sar
inc
cli
rclb
cmp
das
lahf
and
sub
outsb
addr16
fistpll
mov
or
push
pop
cli
insl
fsubr
mov
lret
out
jno
sub
test
lretw
adc
xor
int3
mov
mov
int3
xor
mov
jnp
pusha
or
loope
jne
dec
push
bound
mov
cmp
xlat
push
dec
mov
rolb
jle
push
mov
lea
repz
ja
aam
push
adc
dec
out
inc
push
xor
dec
and
movsb
aam
or
jo
jbe
outsl
in
test
mov
arpl
out
xchg
movsb
adc
clc
ss
repz
dec
cli
mov
out
test
sbb
scas
scas
arpl
filds
or
js
pop
xchg
popa
scas
call
pusha
sbb
mov
add
cmpsb
cli
cld
lcall
sub
leave
cmovae
pop
ret
orb
mov
dec
mov
inc
mov
push
and
loope
jns
add
pop
xchg
sbb
fsubs
mov
mov
popf
out
inc
repnz
jnp
sub
popf
cwtl
add
inc
cmp
repnz
adc
mov
pop
cwtl
cmp
mov
in
hlt
cmpb
inc
or
imul
es
jb
xchg
stos
adc
xchg
and
ja
jmp
add
dec
pop
mov
cmp
pop
arpl
mov
sbb
push
sbb
xchg
nop
loope
lock
adc
call
test
jge
ds
jge
pop
sub
xchg
jl
and
jle
repz
inc
repnz
mov
cmpsb
repz
adc
dec
pop
jp
outsl
ljmp
jns
loopne
fnstsw
jo
sbb
xor
push
xlat
xchg
std
pop
and
xor
push
testb
sub
lock
aad
mov
dec
push
sbb
sub
in
dec
and
push
jge
mov
pop
test
mov
cmpl
rdtsc
dec
dec
mov
add
or
sub
scas
cmp
or
or
ds
mov
ljmp
in
insl
mov
test
subb
sarb
gs
sarl
mov
out
xor
pop
add
pop
jb
inc
push
mov
test
daa
dec
shll
pop
mov
roll
push
sarb
push
out
push
add
dec
dec
aad
push
pusha
and
mov
lcall
pop
mov
testb
mov
jle
lret
sub
mov
ret
fst
jo
and
pushf
inc
rcl
cmc
ret
cwtl
add
pop
cli
out
leave
cmp
and
dec
insl
sbb
pusha
test
pop
cmpsl
orb
je
addr16
push
fxch
je
std
imull
mov
mov
pop
mov
jg
or
mov
mov
push
mov
hlt
sbb
adc
sub
in
into
jae
int3
rcrl
mov
test
jecxz
and
arpl
lret
dec
lcall
outsl
dec
push
xor
loope
popf
xor
scas
pop
xchg
je
fisubrl
stc
imul
dec
jae
data16
dec
in
insb
ljmp
mov
dec
lock
and
rcr
mov
push
sub
push
outsb
sarb
outsb
xchg
adc
mov
pop
push
mov
mov
lret
popl
jno
negl
imul
cmc
into
mov
mov
pop
loop,pn
aaa
sahf
stc
ret
xlat
or
pop
insb
popf
gs
push
ja,pn
into
push
aam
inc
lcall
jae
loop
push
adc
mov
pop
dec
push
pushf
xchg
stos
loope
mov
add
mov
testb
ss
lds
call
add
leave
push
mov
add
insl
xchg
inc
mov
fnstcw
push
ljmp
orl
repz
cmp
jnp
lcall
adc
push
mov
mov
add
mov
mov
ds
jge
stc
jge
jne
mov
add
sub
jne
lds
out
aam
cwtl
sub
mov
js
dec
mov
lahf
data16
jno
loope
dec
dec
clc
aas
lret
mov
sbb
push
imul
dec
dec
inc
lcall
sbb
lcall
and
data16
cmp
insl
stos
xor
mov
inc
int3
fmul
adc
icebp
nop
or
push
out
dec
xchg
fucomi
cli
jno
mov
cs
dec
mov
fisttpl
aad
iret
cmpsb
jl
ror
out
jge
mov
jecxz
mov
add
icebp
or
movsl
push
stc
add
popa
sti
ljmp
push
leave
aaa
in
scas
or
jmp
int
mov
push
cmpsl
imul
or
jle
mov
clc
scas
aaa
xchg
adc
adcl
shll
in
js
pop
in
jno
test
mov
mov
daa
jo
clc
pop
cld
xor
lahf
aaa
insl
hlt
mov
sub
rolb
je
lcall
gs
hlt
or
aad
dec
ja
inc
fs
test
sbb
inc
mov
aam
jl
enter
pop
test
dec
xchg
shll
fwait
lahf
xchg
dec
aaa
je
mov
and
das
push
pop
xorb
loope
cltd
out
jo
icebp
xchg
jae
in
jp
out
push
test
xor
mov
mov
and
pop
fwait
mov
ret
es
stc
xchg
ret
aaa
dec
test
pop
into
xor
pop
mov
xchg
ss
shl
cmp
sbb
xchg
or
push
shll
cld
add
fstps
add
mov
lock
mov
mov
test
cmpsl
sbb
mov
mov
xor
xchg
mov
pop
pop
pop
aaa
or
iret
mov
aam
js
lods
enter
negb
xor
mov
popf
add
pop
jmp
scas
leave
inc
lods
clc
inc
fld
mov
adc
mov
push
mov
or
lahf
in
popa
inc
jecxz
mov
mov
dec
arpl
mov
xchg
insb
jl
xchg
lret
addr16
movsl
jne
xchg
imul
and
test
mov
push
shrl
not
pop
xchg
lret
aam
test
pop
mov
mov
jb
fwait
jmp
and
cltd
sub
mov
jmp
dec
cmpsl
sarb
fs
cmp
push
outsl
cli
fcmovnb
mov
dec
xchg
xorb
pop
pop
into
mov
cmc
hlt
xor
pop
js
push
fbld
sbb
push
cmp
rep
lahf
js
aam
xor
sbbl
pop
inc
fists
inc
cmpsb
dec
cltd
sbb
inc
dec
aas
pop
test
pusha
xchg
xor
dec
ds
rcl
xlat
jnp
popa
adc
push
push
sub
jb
pop
stos
adc
cmp
mov
or
or
in
xor
pop
fs
add
insb
mov
jge
pop
mov
icebp
addr16
aas
gs
jg
stos
jbe
imul
insl
cmp
mov
inc
jne
xor
mov
push
test
jo
lea
daa
inc
popa
cmp
pop
add
mov
sub
mov
pop
rcrb
roll
out
jns
cvttps2pi
mov
dec
mov
lret
mov
stos
and
into
or
mov
lods
es
ja
dec
nop
inc
inc
cmp
and
shl
mov
push
dec
stos
pop
push
leave
ret
jbe
inc
cld
xchg
mov
ljmp
adc
ljmp
cmp
ja
lods
adc
leave
dec
mov
js
adcb
imul
es
push
mov
adc
or
mov
scas
mov
cs
imul
out
xchg
xchg
dec
xchg
add
pop
mov
or
imul
enter
lods
sub
or
lret
jo
gs
inc
orl
adc
mov
cmpsl
push
push
popa
jno
or
aaa
mov
pop
cld
cmpsb
mov
mov
in
insl
push
scas
test
mov
lahf
dec
adc
movsl
mov
jle
mov
daa
lock
cwtl
mov
jo
push
mov
fdivrs
addr16
pop
iret
or
mov
xchg
icebp
cmp
or
stos
and
xchg
mov
mov
dec
mov
push
cmp
jbe
js
mov
xor
enter
inc
mov
imul
jmp
imul
push
inc
push
lea
insb
dec
testb
jle
mov
pusha
dec
and
or
pop
mov
push
sbb
imul
les
sub
dec
jge
hlt
jb
fs
mov
and
jbe
scas
mov
adc
jle
dec
in
test
cmc
cmp
push
lahf
aam
mov
pop
movzbl
in
loop
int
daa
xchg
in
xchg
jecxz
lret
add
fs
int
pop
add
mov
aas
and
or
in
shll
mov
cmc
jg
iret
add
std
imul
cmp
stc
out
rolb
jmp
mov
mov
nop
inc
xchg
pop
test
fisttps
scas
xor
xchg
jle
out
inc
push
ret
cli
int
jo
cltd
sbb
mov
adc
lods
mov
pop
cwtl
and
push
mov
sahf
test
mov
lea
fbld
mov
addr16
hlt
xchg
inc
les
jnp
sub
sbb
adc
sti
fimull
out
push
icebp
lods
push
out
xor
inc
dec
jg
repz
push
stos
jo
pop
lock
mov
in
jecxz
imul
cmp
adc
stos
inc
or
jmp
xchg
xchg
mov
sti
and
jne
or
ret
cmpsb
and
mov
mov
add
ljmp
jp
adc
jb
jmp
enter
rcr
pop
enter
js
jb
mov
jp
pop
out
test
rorb
jmp
mov
and
and
push
call
repz
pop
mov
cmpb
in
sbb
into
or
in
stos
pop
and
outsb
loopne
mov
mulb
mov
or
inc
mov
push
jmp
jb
sub
arpl
jnp
xor
push
jle
jne
int
fcmovnb
popf
das
sbb
sbbl
popf
out
push
xor
fsubrs
cmp
divl
dec
or
hlt
into
pop
xchg
mov
out
xor
mov
push
xchg
push
ss
pop
movsl
nop
aad
shr
push
shll
ret
and
mov
dec
scas
out
mov
add
pop
pusha
inc
sbb
mov
es
addl
jecxz
mov
adc
je
jg,pn
xor
add
mov
stc
into
inc
push
movsl
mov
dec
les
movsl
aaa
pushfw
push
jae
dec
pop
ja
mov
fdivrs
jae
loope
fnstcw
lahf
pop
fcomps
mov
dec
fmull
xchg
xor
inc
test
aaa
add
pusha
dec
enter
loopne
mov
mov
push
xlat
stc
mov
adc
dec
out
mov
push
leave
ja
ficompl
daa
lahf
mov
cmp
leave
inc
rorl
ljmp
insb
push
lahf
pop
cmpl
inc
cmp
ljmp
jmp
mov
cltd
in
imul
jns
cmpl
in
in
pusha
in
xchg
cmp
xchg
rclb
mov
loope
mov
sub
fstps
xchg
pop
imul
cmpsl
mov
cs
jbe
addr16
and
loope
fcoml
push
xor
and
and
stc
mov
imul
mov
test
pushf
cmp
nop
mov
sbb
scas
lock
pop
mov
xor
lock
sahf
in
icebp
pop
sub
add
orw
pop
pop
popa
jge
pop
imul
mov
loope
sub
push
push
ja
pop
cmc
stc
aam
out
dec
pop
cmc
push
inc
xchg
jnp
cwtl
fisubrl
xchg
imul
movsl
test
js
or
std
jp
ljmp
mov
sti
mov
sbb
or
shll
cmc
add
scas
pop
or
outsl
outsb
pop
and
push
test
in
cmp
mov
in
push
arpl
scas
into
rcrb
cmp
in
cld
sbb
je
ljmp
dec
jg
mov
mov
out
mov
lret
add
insb
mov
int
push
int
add
pusha
sahf
mov
mov
jns
push
jmp
fwait
out
int
fwait
inc
or
ret
mov
jns
fisubrl
cwtl
push
cmpsb
sub
movsl
mov
loop
imul
pop
stos
ret
enter
divl
pop
arpl
xor
sub
mov
aaa
popf
push
gs
pop
cmp
jl
negb
cmp
mov
sub
mov
mov
test
dec
adc
pop
mov
in
or
pop
adc
cmp
mov
xchg
cwtl
or
fcomps
ret
mul
dec
mov
xchg
xor
aas
daa
push
sbb
mov
mov
xor
ret
inc
ds
ljmp
or
iret
add
lds
outsl
jb
loop
lret
rcrb
stos
mov
mov
jb
ja
mov
in
nop
inc
mov
and
loope
cmp
mov
lea
pop
cs
adc
sbb
lret
dec
or
mov
jne
push
sahf
in
js
mov
out
mov
je
mov
loop
push
inc
dec
sar
outsb
pop
insl
adc
fbld
rorb
sub
rcrb
or
jg
mov
sbb
mov
pop
in
rol
in
mov
clc
mov
scas
loopne
icebp
sbb
add
cltd
inc
inc
or
cltd
xor
lcall
mov
inc
rcrb
aas
fcoml
and
fnstcw
rorl
in
xor
jo
int
shrl
lds
icebp
les
push
popf
mov
out
ljmp
inc
test
shll
cmc
and
rolb
and
push
pusha
or
fmuls
and
cmp
pop
cwtl
arpl
mov
push
ss
mov
fstps
dec
cmp
repnz
cwtl
shrl
fstpl
fldcw
mov
lcall
jl
pushf
fnstsw
into
lods
mov
xor
xchg
nop
lods
push
shlb
mov
jnp
lods
mov
jb
mov
lds
fwait
and
push
mul
clc
add
and
push
shlb
xor
fs
or
pop
icebp
jns
jae
aaa
fiadds
cmp
dec
add
insl
push
mov
push
mov
jo
cmp
popa
iret
aaa
dec
fisttpll
rclb
sahf
inc
je
xchg
lret
push
std
bound
popf
rcll
jnp
add
mov
js
pop
push
nop
flds
movsl
popa
call
sub
xchg
dec
xchg
inc
xlat
dec
or
jp
jle
ja
test
loop
iret
push
pop
ja
xchg
xor
ja
pop
adcb
xor
mov
into
xor
mov
cmc
jp
lods
fstp
push
clc
filds
imul
add
mov
pop
fimuls
mov
or
subb
inc
or
sbb
add
cwtl
sbb
xchg
enter
push
mov
inc
incl
add
push
dec
scas
inc
jp
mov
aam
xchg
in
mov
repnz
ss
fbld
in
xor
dec
in
xor
lret
sahf
nop
jecxz
scas
ja
outsb
div
sub
test
arpl
movsb
dec
sub
sbb
arpl
xchg
xchg
xor
hlt
push
mov
inc
inc
or
ret
repnz
xchg
and
push
adc
jmp
jo
adc
ficompl
ss
out
xchg
inc
inc
ljmp
and
mov
xchg
mov
adc
pop
lret
nop
je
testb
jecxz
pop
mov
les
push
add
mov
insl
inc
mov
rcl
aad
out
fldcw
sbb
xchg
bound
xor
inc
xor
bnd
imul
xorb
mov
loope
popf
xchg
jge
cld
cs
dec
lea
hlt
orl
inc
in
pop
loopne
or
movsl
mov
xchg
xchg
dec
iret
and
nop
push
mov
mov
sbbl
lock
lods
insl
mov
mov
aas
sub
loope
pop
mov
rol
lret
mov
jp
xchg
adc
mov
aam
gs
push
mov
xor
jmp
xor
insl
es
in
inc
loope
shlb
push
in
cmp
ss
fcompl
inc
fucomip
bound
lea
leave
stos
xchg
push
js
daa
pop
test
cmpl
loope
stos
pop
clc
fisttpl
dec
mov
insb
stos
jge
lea
or
jg
push
outsl
xchg
ss
fcmovnb
aaa
stos
xchg
je
insl
sub
emms
shr
or
mov
packssdw
jbe
popl
push
test
xor
out
cmpsb
and
inc
sbb
imul
pop
rorb
js
add
outsl
jp
xlat
iret
cli
movsb
shr
pop
sub
jns
sahf
and
loop
cmp
xchg
cmp
jle
lds
aam
lods
cmovnp
pop
out
inc
sub
jp
add
test
fcomp
mov
enter
outsl
mov
stc
stos
xchg
xchg
inc
add
pop
dec
mov
add
push
mov
mov
xchg
inc
pop
push
in
jo
aam
cmp
jg
fidivl
mov
cmp
movl
jecxz
stc
cmp
into
adc
fiadds
inc
dec
sahf
icebp
sub
sbb
sub
or
or
push
clc
loop
push
jb
cltd
aad
enter
scas
addr16
push
in
jecxz
pop
out
mov
pop
out
mov
cmc
int3
mov
pop
rcll
cli
add
xchg
push
stos
mov
popa
and
jge
arpl
push
mov
mov
repz
scas
mov
jg
ja
jmp
mov
out
stc
mov
loopne
push
cmpsb
pop
and
jmp
andl
pop
sbb
pop
arpl
lods
and
push
push
or
jle
pcmpeqb
dec
jecxz
int
mov
lret
jge
dec
cmpl
add
insb
arpl
sbb
imul
bound
sub
pop
jge
iret
lock
or
mov
out
ss
scas
scas
and
into
lock
jge
rorb
mov
andl
sub
out
hlt
xchg
jo
and
push
aaa
mov
lock
jp
bound
xchg
data16
in
out
mov
jp
mov
arpl
mov
mov
lea
data16
and
jne
stos
mov
cwtl
fucom
ds
mov
pop
divl
xchg
jp
adc
int3
pop
lds
movsl
stos
dec
imul
push
mov
ss
pop
fsubrs
dec
pop
dec
cmpsl
add
push
insl
add
out
into
adc
xchg
dec
sub
pop
xchg
push
cs
jns
in
mov
inc
das
and
fisubl
lods
rorl
xlat
fmull
adc
cmp
cmp
in
mov
mov
fs
pop
insl
add
push
pop
xor
ja
jae
mov
inc
xor
shll
das
into
pop
sbb
rcl
test
lods
mov
adc
orb
out
je
mov
pop
xor
sbb
adc
es
sub
lahf
loop
ljmp
sbb
pop
ror
daa
rcr
and
daa
loop
and
pusha
shll
dec
mov
testb
and
mov
push
popf
shlb
loopne
popf
push
dec
nop
out
ret
xchg
or
shr
rcrb
and
ss
xchg
jb
lahf
dec
fsubrp
and
mov
rorb
out
outsb
psllw
cmp
push
pop
jb
arpl
leave
dec
cmp
push
pop
mov
sbb
adcb
scas
test
mov
mov
add
out
in
push
pop
repnz
pop
xor
pop
pushf
add
call
mov
aad
adc
add
in
repnz
dec
pop
pop
mov
sbb
mov
stos
std
shrl
call
insl
adc
adc
inc
fildl
aam
push
or
repz
addr16
cmp
cmpb
jp
scas
negb
inc
pop
jae
xor
mov
jno
add
aam
mov
das
fildl
and
adc
mov
test
mov
in
mov
clc
cltd
mov
jae
xchg
ja
and
clc
idiv
iret
fcoms
cmp
notl
dec
sub
sub
add
je
std
fwait
jne
jae
lods
rcll
mov
iret
jmp
sub
pop
jo
test
sub
mov
add
arpl
data16
out
push
out
xchg
and
pop
lahf
imul
repz
hlt
mov
fwait
push
loope
xchg
imul
mov
sub
stos
ja
test
jne
int
adc
jmp
nop
mov
pusha
sbb
lret
jge
and
jbe
dec
and
imul
dec
push
movsl
mov
jmp
xchg
mov
lds
cmp
pop
pop
inc
or
adc
out
test
pop
mov
dec
push
sub
iret
fucom
outsb
dec
adc
mov
add
icebp
add
and
es
and
ret
fsts
inc
sti
sbb
add
and
jno
cmpsl
das
cmp
cmp
sbb
and
sbb
test
ljmp
mov
rcrb
pusha
add
xchg
sub
test
inc
sahf
or
cmp
xchg
int3
or
popf
test
pop
xchg
lea
xchg
in
jmp
pop
enter
and
jg
les
or
loop
inc
sbb
or
jns
xchg
xchg
dec
adc
push
mov
in
out
pop
push
jecxz
sbb
div
jnp
in
lea
or
pop
into
or
mov
inc
hlt
loopne
insl
pop
add
push
iret
inc
and
daa
orl
enter
insl
lods
cmpsb
push
ficompl
sti
add
mov
fcoms
in
sbb
push
jle
in
push
mov
imul
mov
sbb
push
cmc
push
cmp
mov
enter
jecxz
mov
xor
xchg
jnp
mov
into
call
mov
mov
xor
mov
dec
pop
and
push
xchg
rcll
or
xor
mul
psubusb
mov
cmpsl
push
sti
mov
xchg
push
insb
call
iret
fldl
sarb
mov
adc
sbb
fucomip
adc
sbb
inc
and
adcl
push
mov
lods
lcall
es
push
jl
lock
lret
insb
hlt
outsl
aas
pushf
sub
cmp
dec
xor
xor
out
xor
ret
push
mov
cmpsl
pop
pop
mov
cmp
aam
pop
xorb
shlb
pop
xchg
xchg
scas
nop
push
mov
xchg
sarl
push
rcrb
ret
mov
orb
stos
sti
aas
push
dec
stos
xchg
addb
insb
jp
push
daa
int3
dec
les
dec
sti
enter
xchg
hlt
and
rcll
hlt
mov
bound
aam
fwait
mov
into
jo
mov
leave
or
scas
inc
sbb
out
popa
mov
and
and
loope
dec
inc
add
movsb
insl
mov
and
js
pop
inc
andb
dec
pop
cmp
lods
sub
xor
inc
sub
sub
dec
int3
mov
out
shlb
sbb
mov
popf
loop
xor
mov
mov
or
mov
dec
add
scas
mov
xchg
loopne
or
cs
add
dec
fstps
leave
imul
out
and
lcall
or
outsb
sbb
aaa
inc
nop
int3
jmp
lods
repnz
sub
dec
push
adc
pop
lods
and
push
out
in
xchg
push
ret
push
movsb
int3
sahf
ljmp
pusha
pop
mov
inc
pop
imul
and
jecxz
adc
cmpsl
sub
jecxz
adc
movsb
xchg
ja
in
rcrl
or
out
fadd
dec
mov
jo
ja
addr16
mov
cwtl
nop
xchg
push
sbb
inc
addr16
push
mov
xchg
cmpsl
call
mov
mov
pop
movl
jg
sbb
add
dec
lret
dec
jbe
xor
adc
pop
int3
xchg
sub
fldcw
cs
jecxz
in
mov
xchg
pop
ljmp
scas
fistpl
das
mov
mov
mov
xor
jo
int
jbe
add
ljmp
xchg
xlat
cs
stos
dec
mov
mov
daa
mov
dec
fisubs
arpl
push
test
test
mov
xchg
add
add
mov
xor
cmpsb
mov
inc
lcall
push
test
and
test
cmp
cmp
loopne
rcll
daa
mov
push
xchg
das
shr
popa
xor
cwtl
mov
cwtl
push
sbb
mov
movsl
cmp
mov
inc
incl
mov
lods
pusha
neg
xchg
inc
add
mov
test
or
pusha
in
ss
or
pop
push
push
push
fwait
xlat
pop
inc
rolb
mov
cli
mov
xor
dec
sbb
into
push
cmp
jae
cld
ja
out
sbb
out
aad
push
dec
out
dec
lea
pop
pop
jmp
inc
lods
fsts
pop
xchg
into
fildl
not
repnz
or
cwtl
lret
imul
jne
popl
aaa
aad
stc
mov
cli
scas
add
adc
xor
iret
out
xchg
stos
inc
jl
jmp
mov
xor
add
ljmp
rcr
sahf
test
adc
adc
mov
add
loop
mov
cmp
loopne
sub
mov
bound
int3
popa
aam
aam
adc
repz
pop
jns
pop
add
loop
arpl
cmp
cmp
jp
incb
xor
pop
push
xor
cmpsl
mov
test
mov
cs
cmc
mov
pop
mov
dec
insl
mov
inc
cmp
icebp
lea
jns
inc
dec
insb
in
sbb
scas
mov
call
data16
aaa
aaa
inc
add
mov
sub
icebp
mov
mov
push
out
movaps
ret
mov
or
fldenv
imul
inc
mov
cltd
fwait
in
iret
jmp
pop
push
jle
push
xor
stos
inc
test
sahf
adc
fs
jae
push
sti
xor
js
xor
pushf
and
les
addb
dec
sub
mov
test
or
jnp
popa
xchg
xadd
pop
and
sbb
jae
xchg
or
fdivl
sti
push
mov
mov
ret
mov
rorl
in
cwtl
repz
mov
inc
out
mov
inc
lret
cmp
insl
inc
jne
mov
jmp
pop
jmp
xchg
xchg
dec
xchg
lahf
xor
mov
in
and
jno
jmp
mov
mov
inc
cmpsb
pop
cmpsb
mov
adcb
inc
jae
mov
xor
push
mov
les
jp
mov
mov
ret
icebp
ss
push
insb
push
jbe
pop
adc
out
cltd
mov
cltd
jnp
dec
aaa
ret
out
fldl
cmpsl
dec
outsl
mov
test
sub
adcl
cmp
cmp
and
les
cmp
imul
insb
int
push
lret
js
mov
push
stos
cmpsl
das
cwtl
xchg
dec
push
sbb
repz
sti
adc
shlb
adc
mov
loopne
sahf
shr
std
lods
jecxz
add
fldenv
or
scas
adc
push
es
sbb
hlt
aaa
adc
adc
out
mov
dec
aam
inc
inc
add
imul
clc
mov
fwait
and
mov
fisubrs
cmp
inc
fcomps
cmp
push
dec
loopne
fisttps
mov
jmp
jmp
mov
mov
inc
cmpsl
cmpb
std
pop
shrl
push
lods
cltd
pop
adc
push
ret
cld
fistpl
in
insb
sub
subl
mov
inc
xchg
lods
xor
lret
add
lds
mov
add
movsl
out
fcoms
mov
insl
pop
std
jle
cmp
cltd
xchg
clc
inc
shrb
jg
sub
pop
movsb
inc
es
dec
push
pop
ficoms
in
das
outsb
jnp
xorl
ret
mov
pushf
lods
sbb
cmp
insb
push
repz
mov
sub
hlt
gs
push
jae
pop
sti
imul
out
jne
pop
inc
sub
inc
inc
test
fwait
arpl
imul
mov
push
mov
dec
jg
nop
mov
push
cmpsl
push
push
loope
push
add
sbb
repz
je
aaa
ss
cmpsl
test
xchg
stc
icebp
adc
pop
jmp
mov
pop
push
clc
lret
dec
cwtl
and
mov
and
push
repz
mov
in
movsb
imul
dec
mov
lcall
leave
daa
outsb
pop
ja
imul
fildl
pop
ret
sub
loop
dec
xchg
lea
andb
inc
lret
shr
mov
sub
cmp
pusha
xchg
loope
cmc
repnz
xor
cld
adc
mov
std
push
mov
fsubl
jmp
xor
jl
mov
xchg
gs
movsl
lret
or
and
lcall
dec
jne
sbb
sbbl
xchg
and
xchg
or
mov
daa
mov
dec
cltd
jbe
idivl
cld
push
sbb
inc
ja
movsb
sub
inc
sub
mov
lret
cli
mov
adc
movsl
outsl
inc
in
dec
add
inc
cwtl
lods
shlb
xor
xchg
jnp
mov
lock
cmp
mov
mov
test
cmp
cmp
pop
ffreep
or
test
aad
cld
aas
inc
clc
pop
xor
ffreep
or
ljmp
ja
mov
rorl
enter
or
pop
pop
sub
in
pop
ret
out
add
call
mov
ja
loop
add
fwait
push
nop
imul
and
xor
bound
cmp
sbb
fiaddl
and
inc
lock
clc
xchg
pop
inc
mov
push
movsb
push
mov
imul
lods
rcr
sahf
into
jo
mov
jg
cltd
sub
stc
in
xchg
imul
adc
gs
xor
outsl
lret
hlt
mov
insb
and
scas
aad
sbb
sub
popf
mov
jl
and
test
fdivrl
jns
or
add
lods
enter
rcrb
ret
insl
sub
cs
out
pop
push
mov
mov
sti
mov
aad
ds
push
cmp
push
or
mov
mov
inc
xchg
add
pop
cmp
in
leave
es
cpuid
lcall
xlat
or
push
inc
dec
into
inc
iret
loope
shlb
push
and
xlat
pop
outsl
mov
xorl
in
mov
loopne
incl
lea
push
es
enter
test
and
sub
push
mov
mov
loope
mov
hlt
jecxz
cmc
jl
pop
and
xchg
in
jb
mov
fsubl
dec
or
sarb
insb
inc
in
mov
cmc
je
inc
push
shrb
enter
push
fbld
test
sbb
jecxz
add
clc
jae
dec
aad
mov
sbb
ror
frstor
pop
jmp
cwtl
and
push
popf
and
add
xchg
or
or
push
fstl
fwait
cmp
lock
fs
mul
insl
cmp
cs
pusha
das
mov
xor
rorl
inc
fs
out
mov
decb
popa
outsl
mov
rcl
mov
add
in
aam
loope
mov
jl
in
mov
ret
add
loopne
fldenv
int3
xchg
je
lds
and
jae
neg
add
mov
movsl
cmp
ficomps
jnp
mov
fcomps
jge
ds
add
mov
mov
notl
or
pop
mov
stc
test
das
sbb
call
and
push
sarl
clc
pop
mov
or
adc
sar
rorl
and
jle
pop
negb
add
cmpl
cmp
dec
push
pop
mov
pusha
xchg
lcall
pop
repz
out
sbb
movsl
addr16
movsl
lahf
and
adc
repz
inc
pop
jae
add
xor
cmc
push
cmpsl
out
push
and
into
subl
icebp
mov
add
shrb
data16
or
in
adc
xchg
gs
mov
adc
mov
repz
add
test
adc
cmp
cs
push
add
adc
xor
xchg
mov
in
sub
outsb
int3
js
mov
repz
loopne
cld
xchg
ret
stc
ret
sub
enter
xchg
inc
xor
aas
or
push
out
loop
fldcw
jmp
add
push
dec
adcl
pop
test
cmp
outsb
aad
pushf
lea
inc
stc
xchg
fstpl
in
rcl
xchg
daa
cmp
dec
mov
mov
mov
or
jb
enter
mov
inc
adc
cmp
outsl
shll
add
scas
push
push
pop
dec
mov
inc
cli
cmp
add
cmp
stos
aam
jns
xchg
cmp
fildl
outsl
push
pop
enter
out
xor
jmp
mov
hlt
dec
and
dec
cmp
lea
and
and
lcall
jmp
sbb
jle
add
sar
push
in
loopne
xor
testl
push
mov
cli
in
in
movsb
mov
xchg
sub
lcall
fstps
js
shr
xorb
imul
adc
repz
or
cmpl
lahf
cli
out
pop
inc
jmp
sar
mov
inc
insb
adc
mov
andl
xchg
loop
add
out
sub
xorl
stc
ljmp
ss
ret
sbb
jne
lods
movlps
or
and
dec
lods
push
pusha
daa
loope
pop
divb
add
fbld
mov
repnz
mov
pop
mov
mov
cmp
xorb
dec
sahf
cld
imul
dec
xor
shlb
cmc
xor
clc
nop
std
in
sahf
ja
xchg
push
push
adc
cli
mov
cmpsl
or
dec
in
fdiv
lahf
sti
fsubrl
mov
jmp
iret
add
sub
ret
loop
sar
sub
int
pop
jmp
std
ja
lahf
insl
hlt
fucomp
mov
ret
pop
in
xor
jns
mov
loopne
cmp
push
push
dec
inc
jo
xor
lret
dec
dec
lret
int3
repz
xchg
xor
jp
xor
inc
fists
enter
add
nop
pop
std
mov
mov
add
je
aas
setge
sti
push
sahf
mov
fwait
dec
in
int3
mov
lahf
fbstp
cmp
adc
stos
ret
mov
es
mov
jae
jle
testb
sub
xor
loope
add
ficomps
inc
rclb
push
mov
mov
jo
sarl
xchg
fwait
jmp
and
xor
mov
sub
pop
das
stos
push
sbb
cmp
out
pop
xor
and
mov
mov
repnz
push
dec
sub
icebp
add
mov
sub
mov
jecxz
divb
scas
inc
xorb
cmpsb
xorl
ret
es
faddl
divb
lock
inc
test
imul
clc
fxtract
push
mov
ds
jle
sub
test
dec
adc
jnp
jle
xor
xchg
pop
les
das
and
outsb
lahf
adc
jge
or
icebp
xchg
push
mov
dec
push
divl
packuswb
cmp
mov
cmc
ljmp
roll
push
jnp
lock
into
fmull
cmp
inc
mov
sbb
cmp
daa
xlat
rcll
cmpb
rcr
cltd
mov
outsb
add
jo
cmc
mov
nop
push
cs
aad
fs
pop
jne
mov
xlat
imul
pop
out
rcrb
sbbl
mov
rcll
rorb
sbb
outsb
popa
lcall
clc
aaa
repnz
es
sbb
push
lock
push
and
in
jo
adc
add
rcrl
add
pop
and
lods
pop
jl
and
mov
cld
mov
and
inc
and
sbb
mov
nop
scas
inc
aas
mov
cltd
mov
xor
cmp
repnz
outsl
ja
adc
cli
sub
hlt
mov
push
mov
adc
mov
imul
or
ret
in
scas
xchg
scas
cltd
popf
mov
fwait
enter
clc
lods
jo
and
repnz
insb
add
repz
es
xchg
adc
mov
jnp
lcall
jecxz
idivb
sbb
xor
xor
push
dec
xor
call
lods
dec
dec
jns
push
push
dec
push
inc
push
fcmovu
subb
dec
push
shlb
into
inc
add
sub
xchg
nop
xor
hlt
xchg
les
mov
out
cmp
incl
dec
push
inc
leave
cli
movzbl
das
lods
pop
mov
jo
jnp
shrb
lods
stos
into
inc
bound
push
jge
jb
in
jno
add
fcompl
leave
mov
dec
fld
inc
dec
imul
popa
sub
icebp
mov
or
in
jg
rorb
pop
rep
mov
or
xchg
aas
ja
inc
mov
or
clc
jecxz
push
popa
repnz
jmp
mov
inc
lcall
mov
insb
sbb
xchg
pop
or
or
test
lret
push
mov
insl
inc
repz
test
cmp
mov
das
aaa
idivl
push
pusha
cmc
add
test
dec
loop
add
lock
mov
push
xchg
pusha
shrb
push
xorb
outsl
subl
sub
add
rorb
fidivl
adc
cmp
sbb
or
pop
out
cli
add
loop,pn
lods
int
add
pop
xchg
fdivs
xor
mov
jne
rep
outsb
pusha
mov
icebp
hlt
push
test
mov
or
out
out
fcomps
leave
sbb
jb
outsb
inc
pop
femms
fnstenv
mov
stos
out
adc
aaa
out
adc
push
sbb
ds
cld
dec
lock
ljmp
test
pop
aas
sub
jg
dec
mov
push
pop
add
xchg
mov
and
movl
lret
mov
push
or
jg
mov
clc
or
outsb
sbb
subl
testb
test
sub
ret
ljmp
lods
andl
push
jne
cmp
scas
dec
mov
icebp
xlat
clc
inc
pop
jns
lret
cmpsl
push
mov
sti
lock
dec
mov
or
lret
pop
je
mov
mov
fs
jge
and
dec
test
jle,pt
or
testb
mov
sub
call
mov
mov
pusha
and
xor
xor
adc
lods
rcl
out
inc
and
int
addr16
sub
pop
out
jg
call
ss
xor
aas
pusha
adc
adc
cli
subl
inc
je
lahf
mov
dec
insb
jecxz
pop
cltd
cltd
mov
aad
xchg
xor
popf
repnz
hlt
lock
cmpsl
or
mov
lock
jne
aam
sub
jl
std
ja
xchg
loopne
lods
outsl
push
sub
daa
shl
dec
mov
sub
lods
popa
fstp
or
mov
lret
cmp
push
lods
and
rcrb
cld
shrl
xor
jmp
jo
cmp
adc
das
popa
and
inc
jl
inc
data16
nop
jecxz
xor
jne
scas
out
sub
ljmp
fwait
push
push
cmp
or
pop
and
mov
hlt
cmc
test
pop
xor
xlat
dec
popf
xchg
das
xchg
jge
leave
jnp
jmp
adc
xchg
je
out
or
push
pextrw
pop
pop
sub
adc
stos
push
js
loop
ds
jne
scas
stc
int3
fdivl
or
rcrb
test
adcl
add
or
loop
rcll
je
popa
inc
or
insb
movl
fdivr
sahf
adc
or
clc
sbb
in
iret
mov
adc
sub
mov
rcll
sbb
dec
lods
pusha
sbbb
stc
divb
and
jnp
int
lods
or
cmp
inc
inc
out
xchg
out
xlat
out
push
push
xor
lcall
shll
scas
leave
xlat
rcll
sbb
ds
clc
jle
dec
jnp
es
arpl
or
ret
test
fmull
in
jne
sbb
mov
cmc
ss
fs
subl
sub
icebp
push
xchg
test
or
add
ds
xor
and
ja
cmp
xchg
dec
clc
daa
in
inc
jb
sarb
imulb
xor
and
cmovg
addr16
jmp
mov
adc
das
push
cmc
fsubs
xor
inc
ja
cmp
fldenv
in
loopne
insl
daa
movsb
popa
pop
dec
in
fistl
and
push
nop
mov
sbb
popf
in
leave
mov
mov
imul
push
add
sub
jle
adc
sub
lcall
mov
xor
push
fstps
sub
add
lods
nop
mov
pop
fbld
lds
movsb
cmp
sub
push
mov
es
xchg
adc
inc
dec
enter
lods
or
jmp
add
clts
mov
cwtl
aas
fidivrl
call
out
dec
push
adc
dec
cmp
inc
in
cld
push
dec
xchg
in
cltd
std
in
shlb
jno
in
ss
loop
idivb
xor
or
mov
stos
into
cmpsl
dec
lds
ja
sti
mov
jmp
daa
jae
xchg
xchg
stos
mov
aaa
xchg
out
fs
dec
scas
jns
sub
jl
xchg
mov
repnz
addl
cli
mov
and
lds
js
fiadds
test
hlt
faddp
or
shrb
out
jbe
or
js
mov
adc
test
pop
sub
cmp
jmp
rolb
in
or
sbb
add
xchg
sti
lods
mov
pop
cs
xor
cmpsl
out
adc
int3
xor
iret
rorb
cmp
and
out
dec
inc
ljmp
pop
adc
xchg
movsb
and
xor
sar
flds
pop
mov
stos
repnz
pop
adc
lcall
cmp
pop
sahf
jl
pop
outsl
adc
ss
mov
cmp
mov
or
xchg
fimuls
das
mov
insb
sub
jmp
scas
out
and
sbb
pop
or
pop
add
mov
lea
xor
mov
cmpl
push
mov
insl
lock
fisttpll
dec
xor
jg
xor
adcl
cmp
testl
je
and
pop
jge
stc
shlw
dec
lcall
lds
sub
mov
inc
mov
scas
leave
or
mov
mov
push
jnp
sbb
jg
push
dec
ss
and
enter
and
push
out
daa
mov
xchg
jl
and
add
pop
call
dec
xor
inc
adc
cmpsb
aad
mov
mov
push
test
ja
mov
cmp
popa
fistpll
mov
dec
pop
dec
add
aaa
roll
nop
adcb
out
mov
xchg
cld
cmp
scas
cltd
fwait
popa
pop
pop
addr16
stos
stos
addr16
jae
mov
jo
adc
imul
dec
out
inc
cmp
cmpsb
sbb
dec
movsl
mov
jnp
cmp
icebp
push
stos
insl
int
cmc
fs
nop
xor
scas
jne
add
test
push
cs
mov
shl
bound
push
inc
ret
or
sbb
sbb
sbb
adc
or
aaa
sbb
scas
xchg
test
and
cltd
mov
add
or
or
jae
mov
fdivrs
adc
pop
iret
dec
inc
or
aam
xor
cmpsl
bswap
fldcw
jae
dec
sahf
sbb
mov
jecxz
aam
dec
inc
adc
jnp
imul
or
xchg
leave
pop
sub
cmpsb
bnd
popf
paddw
jge
sti
fwait
stos
rcrb
adc
sbbb
pushf
jns
sub
icebp
out
ds
pop
mov
pushf
bound
jns
outsl
fdiv
iret
jp
jmp
jno
dec
adc
xor
les
lcall
sbb
lods
shr
xor
jo
je
push
aam
mov
sarb
jmp
and
jnp
sub
loop
iret
jo
das
sub
fists
pop
xor
inc
nop
loop
xchg
nop
xchg
dec
rolb
inc
sahf
add
in
fiaddl
lock
and
and
mov
jle
jl
jae
imulb
data16
addr16
pusha
popf
and
shl
jns
sub
add
xchg
and
sahf
push
adc
aam
xlat
mov
fnstcw
testl
mov
push
dec
or
lock
sbb
mov
stc
iret
filds
sub
mov
push
lea
je
std
out
cmp
mov
xchg
leave
mov
fcomi
sbb
dec
je
cmpsb
jbe
shlb
mov
cmpb
test
repnz
test
ljmp
cld
pop
nop
pop
lret
in
mov
xchg
out
ret
dec
ljmp
jmp
test
insb
mov
add
xorl
imul
and
in
lahf
cmp
fldcw
mov
out
inc
xor
out
aas
call
pusha
and
xchg
cmp
pop
aaa
stos
and
or
pop
lret
int3
popf
inc
ret
xchg
out
inc
mov
inc
gs
adc
push
xor
hlt
mov
jge
outsb
mov
dec
mov
adc
das
adc
adc
lcall
movsl
loopne
mov
nop
sub
lds
sub
subb
xchg
xchg
xchg
jmp
pop
and
ss
push
scas
popa
dec
outsl
adc
dec
pop
pop
test
cltd
push
lret
mov
jb
das
xor
add
inc
cmc
jno
shrb
mov
pop
cli
jmp
jmp
or
in
fcmove
popa
jmp
adcb
pusha
stos
push
sub
or
add
sub
jnp
sbb
dec
sbb
sti
ficoms
mulps
push
scas
shrl
idivl
xchg
imul
test
outsl
mov
lds
js
sbb
cmp
fnstsw
push
sub
mov
fldcw
fidivs
mov
add
sbb
jo
jl
test
mov
lea
shld
add
enter
pop
push
popf
jmp
and
arpl
scas
shr
pusha
dec
cmp
add
adc
jmp
je
les
or
pop
pop
cmp
sbb
mov
adc
call
adc
sub
mov
jns
rclb
cmpsb
das
pop
pop
in
int
divb
inc
adc
sub
cmp
dec
test
mov
movsl
xor
lock
bound
sti
mov
cmp
mov
mov
in
inc
xor
adc
adcb
jle
dec
adc
pop
hlt
bound
xchg
outsb
aas
add
inc
lods
pushf
pusha
jmp
jb
inc
sbb
push
shlb
add
sbb
negl
cmp
mov
lret
loopne
add
pop
pusha
dec
hlt
adc
push
add
mov
je
shrl
mov
movsb
pop
push
arpl
shr
adc
dec
aad
lds
sbb
dec
rclb
call
outsl
iret
pop
rorl
es
dec
jp
xor
mov
addr16
bound
bound
testl
sub
ret
push
xor
push
out
sbb
push
jne
add
and
add
sbb
mov
shrl
mov
into
jo
hlt
mov
divb
arpl
shlb
and
jae
mov
jmp
testl
inc
cmp
fists
arpl
cmp
and
adc
push
leave
sti
scas
setnp
aam
lods
fbld
push
lds
daa
add
sbb
fnstenv
xor
ljmp
mov
jmp
inc
inc
das
shll
xchg
lea
dec
outsl
sub
lahf
fcmove
mov
iret
fldenv
pop
and
aaa
loop
dec
jmp
mov
and
jmp
movb
shlb
cmp
fnstcw
or
mov
ljmp
rolb
lret
mov
packuswb
dec
icebp
mov
mov
or
xchg
jg
cmp
or
and
push
or
iret
pop
lea
iret
mov
arpl
arpl
sbb
jmp
inc
shrl
xchg
insb
fs
mov
cltd
and
sub
popf
aas
jl
repz
pop
dec
and
lret
xlat
scas
enter
add
cmc
xor
inc
pop
xor
dec
jnp
stc
mov
mov
scas
mov
cmp
push
jge
xor
push
sti
int3
mov
clc
and
jno
xor
and
mov
jg
jns
insl
rcrb
lret
mov
test
jno
sub
inc
jne
inc
les
inc
mov
push
les
fistpl
icebp
jbe
outsl
hlt
negb
scas
push
addr16
adc
mov
xchg
int3
mov
xor
inc
outsl
jno
sarb
nop
push
bswap
jge
stos
scas
cmpl
imul
out
bound
bound
in
aad
jg
mov
je
js
cmc
sahf
out
sub
jp
loope
add
lcall
push
xchg
pop
ljmp
sbb
pop
incb
in
lods
pop
mov
lock
mov
lahf
subb
cmp
adc
jl
es
mov
sub
and
js
mov
or
sbb
push
fucomi
jecxz
call
xchg
das
xchg
roll
aas
lock
inc
and
pop
mov
ss
mov
and
lods
mov
insl
mov
and
sar
or
adc
push
fwait
cwtl
mov
adc
popf
jae
movsb
cmc
ds
xchg
sti
jl
cmp
sub
insb
sarl
add
jmp
lock
std
inc
or
lds
pop
shl
adc
adc
push
test
jo
outsb
scas
loop
jl
push
out
scas
repnz
movsb
mov
dec
sub
ficompl
add
loope
inc
shl
mov
rcrl
int
xor
scas
gs
cltd
sbb
xchg
cmpb
mov
jecxz
in
jo
push
outsb
std
mov
xchg
add
jge
in
int3
sbb
call
mov
add
into
cmp
and
insb
push
call
in
or
sub
add
imul
dec
jle
or
jp
sub
xchg
andl
or
push
rol
mov
lcall
sahf
sub
cmp
push
adc
rcrb
xlat
mov
adc
dec
xor
insl
fsts
jnp
outsb
repnz
and
test
dec
insb
xchg
jmp
fwait
es
lcall
add
outsb
outsl
mov
into
call
xchg
push
les
and
push
inc
sbb
inc
sub
movsb
stc
insb
faddl
fstps
dec
xchg
arpl
jb
ret
xchg
push
dec
mov
push
lods
loopne
orl
mov
dec
pop
sub
test
popf
pop
mov
inc
lds
mov
dec
ja
mov
push
frstor
mov
mov
or
push
mov
sbb
xchg
popf
jns
aaa
sub
mov
mov
sahf
aas
insl
mov
mov
pop
cmp
add
mov
leave
mov
mov
cmpsl
out
sbb
mov
mov
stc
loop
mov
or
push
dec
jp
inc
cmp
jecxz
mov
les
bound
jge
mov
inc
iret
scas
daa
je
orl
cmc
out
mov
gs
stc
xchg
jb
outsl
or
sub
add
and
hlt
add
sub
cmpsb
hlt
mov
leave
in
int3
xchg
shll
flds
sub
add
push
in
jnp
js
pushf
pop
pusha
lret
dec
inc
outsl
imul
and
scas
jnp
add
outsb
mov
xor
cmc
jecxz
lds
and
fwait
sbb
pop
ljmp
in
cltd
repnz
jmp
jg
bound
movsl
pop
jae
sbb
and
mov
jo
ljmp
dec
andl
cmp
or
or
pusha
push
call
lods
roll
shlb
sbb
sub
xor
xlat
push
test
adc
xlat
add
mov
aad
xlat
dec
outsb
arpl
add
dec
ja
arpl
call
stc
mov
cmp
adc
lret
pop
lea
and
or
and
jge
imul
xchg
jo
inc
jge
add
gs
xchg
add
push
movsb
int3
jo
jno
insl
in
jno
jb
xor
cmc
sar
shll
call
ljmp
or
stos
mov
xchg
sarb
aam
repz
inc
pop
cltd
or
insb
scas
or
pop
daa
cmpsb
cli
in
imul
jae
add
cld
test
pop
xor
aaa
insl
ret
cmp
and
test
pop
xor
lods
jnp
leave
xchg
mov
ljmp
sbb
jae
notb
insl
rcpps
fmull
rcl
jge
and
adc
mov
fcmove
push
aam
mov
test
sub
cmp
fbstp
fmull
adc
aaa
jmp
sbb
les
mov
in
adc
andl
add
mov
xchg
mov
lahf
xchg
pop
xchg
xchg
cmp
mov
xor
hlt
jae
inc
and
in
data16
test
xor
add
loope
fcoms
movsb
popf
xor
jl
test
loop
jo
cld
or
mov
fidivl
outsl
push
pop
fwait
push
jbe
gs
jge
imul
decl
cmp
pop
sbb
fcomps
inc
scas
add
xchg
out
jg
xor
push
int3
cmp
add
dec
mov
leave
std
sub
push
es
cld
mov
repz
mov
cmp
stos
jmp
je
inc
and
jne
lcall
iret
xchg
xchg
push
dec
in
sub
xchg
imul
push
pop
cmpsb
clc
push
das
mov
arpl
dec
insl
iret
jno
fiaddl
enter
add
jl
decl
hlt
lds
mov
lcall
jl
mov
sbb
int
xchg
jne
je
call
push
jns
add
add
leave
insb
out
cmp
xchg
cmp
dec
test
daa
sti
fnsave
shl
in
fwait
test
lcall
sub
sbb
add
cmc
and
sub
cmp
xchg
mov
out
scas
ds
or
mov
sub
out
inc
pop
xor
repnz
xlat
and
push
dec
xchg
adc
jno
sbb
or
aaa
call
jns
jecxz
cltd
dec
int
into
cmp
jne
fidivrl
cwtd
dec
adc
into
xchg
inc
lock
es
outsb
insb
in
inc
loopne
jae
loopne
lods
jb
mov
pop
inc
ljmp
movsl
jae
push
xchg
lret
pop
popf
mov
aaa
fisubrs
shrb
ret
cmpsl
rorl
dec
hlt
dec
mov
jge
lds
cmp
xor
ss
adc
pusha
add
sub
call
mov
or
and
jge
fsubp
lods
dec
in
adc
mov
les
ror
cmp
adc
sbb
mov
aaa
cli
mov
adc
push
fldt
inc
daa
sub
or
sbb
add
xchg
int3
adc
dec
mov
jle
jbe
mov
fwait
add
xchg
nop
mov
jl
push
int
loopne
cltd
inc
cmp
das
push
imul
test
mov
jnp
jg
es
pop
mov
call
in
std
cld
cmp
popf
sub
add
xchg
mov
arpl
cmp
push
or
jb
push
adc
mov
test
xchg
shrl
call
in
sbb
adc
xchg
mov
and
xchg
scas
cltd
daa
ret
insb
ret
mov
jle
pop
push
mov
notl
shlb
test
in
jae
dec
or
fsubl
sub
sub
mov
es
and
jl
sti
stos
leave
in
dec
sbb
add
pop
testl
call
out
jg
jno
push
and
in
les
mov
subb
mov
movsb
leave
rorl
sbb
imul
mov
jle
clc
push
aas
stos
pushf
gs
test
dec
push
stos
mov
push
lock
sbb
hlt
add
and
sbb
bound
xor
or
inc
cli
push
jo
sbbb
int
push
mov
fs
test
bound
jmp
push
popf
adc
popa
jb
mov
rcl
cmp
outsb
aas
mov
movsb
iret
out
inc
fidivs
mov
cs
mov
mov
pop
dec
divw
daa
stos
pop
sub
mov
mov
scas
cmp
lods
scas
cmp
sub
pop
xchg
leave
rcll
mov
and
orl
dec
mov
lret
cltd
jl
cld
or
push
jb
cmp
xchg
mov
adc
pop
out
rorl
in
fprem
addl
sub
incb
pushf
jp
adc
notl
cmp
mov
pop
xchg
insl
jbe
add
psraw
lahf
push
jg
insl
jg
pop
lcall
cmp
gs
in
ja
cmp
dec
inc
lds
in
adc
ja
ror
in
lret
movb
mov
cmp
xchg
sahf
test
push
lahf
in
jge
push
mov
push
dec
push
and
ja
es
mov
je
shrl
cmp
sbb
adc
cmpsl
std
adc
mulb
out
xor
inc
mov
orb
pop
sbb
add
gs
pop
mov
aas
pop
icebp
in
and
lods
call
cmp
and
or
pusha
insb
daa
jns
mov
lods
inc
add
push
mov
pusha
xchg
packsswb
sub
jmp
mov
movsl
stos
jne
xor
pop
sub
add
das
cs
sub
ds
outsl
add
xor
dec
lcall
into
xor
testl
adc
fimull
enter
add
sbb
pop
adc
pop
adc
add
int
pop
or
scas
cmpsb
jbe
mov
push
pop
pop
or
and
jp
push
mov
ljmp
clc
das
adc
dec
mov
or
cmp
lods
mov
push
aam
lds
sub
cltd
fdivrl
icebp
out
dec
cld
mov
and
xchg
mov
or
mov
mov
xchg
pushf
dec
xchg
aad
scas
xchg
lahf
inc
daa
repz
sub
gs
jnp
sub
imul
push
jp
mov
cltd
popf
push
fxch
pop
ds
into
pop
pop
repz
dec
cmp
mov
dec
mov
arpl
adc
pop
sbb
lock
push
sbb
pop
push
ljmp
push
xchg
movsb
gs
mov
xchg
pop
fcom
dec
andl
cmpsb
cli
fmull
test
push
sub
mov
sub
pop
inc
daa
sub
gs
jg
mov
scas
out
mov
out
mov
ja
inc
inc
cs
cmp
sbb
push
loop
push
in
or
cld
jl
or
pop
fistpl
lds
pop
cli
or
int
jne
fstpl
xchg
nop
add
js
and
mov
in
hlt
call
xor
insb
cwtl
sub
ljmp
fisttpl
push
fwait
mov
mov
loopne
or
push
push
mov
dec
push
mov
sub
cmp
lahf
gs
or
xchg
outsb
xchg
dec
pop
mov
inc
cmpb
dec
push
push
hlt
add
xor
cmp
push
xor
sarl
pop
dec
or
mov
dec
mov
or
ja
outsb
imul
js
push
and
cld
push
sbb
cmp
aad
mov
or
loope
and
test
and
orl
mov
int
mov
ja
flds
adc
sbb
jg
mov
fwait
mov
adc
or
andl
mov
and
add
sub
in
and
mov
outsb
inc
faddl
jg
sub
sbb
xchg
pop
and
movsb
or
test
jl
aas
xchg
loopne
outsl
pop
mov
sub
mov
mov
mov
jno
movsb
pop
sbb
adc
les
lock
dec
imul
inc
loope
fcmovnbe
mov
repz
out
ljmp
xchg
mov
insb
push
in
loopne
mov
sub
mov
ja
and
xchg
inc
xlat
cmpsl
xor
or
mov
sub
test
cwtl
jne
int3
xchg
enter
or
jg
mov
push
out
fsubrs
add
fsubr
into
fstp
ds
ffreep
and
xchg
add
mov
aas
lret
sub
mov
lods
xchg
fnstenv
jge
sbb
pop
aam
out
shll
sub
xlat
xchg
dec
andb
and
clc
fwait
dec
dec
cmpsl
sub
stos
mov
xchg
inc
xchg
mov
outsl
and
int3
filds
mov
add
loopne
sbb
inc
jno
and
int3
sbb
jno
in
pop
xchg
out
dec
loopne
imul
cmp
dec
push
or
inc
xor
int
mov
adc
into
je
mov
push
jno
js
and
rorl
cmp
mov
xor
outsb
push
pop
popf
push
push
jbe
fnstenv
scas
and
cmpsl
lret
pop
in
nop
pop
adc
pop
jns
mov
mov
inc
ljmp
jnp
mov
sahf
int3
repnz
and
jne
xchg
jge
pop
cmpsb
sub
nop
xorb
xor
test
add
and
mov
test
sbb
cmpxchg
jmp
call
mov
adcl
dec
jae
aaa
mov
and
loopne
cwtl
lock
mov
in
repz
stos
or
into
hlt
jecxz
jne
xchg
push
sbb
inc
mov
pop
sbb
movsb
lods
int3
jno
inc
cmp
rorb
divb
mov
in
outsl
test
popf
bound
jmp
aam
pop
cld
adcb
xlat
insb
push
cwtl
ss
pop
idivl
out
iret
mov
lods
inc
loope
pop
add
inc
sub
pop
pusha
bound
mov
add
jno
mov
mov
ret
lcall
mov
lcall
adc
orl
xor
xor
adc
sub
leave
test
jne
pop
and
mov
adc
in
lahf
divl
gs
lcall
ret
push
adc
xlat
mov
nop
jge
jns
rcll
dec
into
xchg
add
imul
mov
inc
jle
jo
xor
or
icebp
mov
sbb
in
sbb
mov
jecxz
int3
ret
mov
sub
stos
iret
mov
sbb
cli
stos
lcall
mov
test
pop
jl
jmp
rorb
ret
xchg
icebp
in
lret
ss
sub
lock
shrl
inc
push
and
and
outsl
dec
cmp
add
sub
cld
bound
and
mov
mov
shrl
xor
int3
push
xchg
sub
dec
dec
mov
xchg
dec
and
packsswb
pushf
imul
enter
add
sub
and
dec
dec
loop
repnz
insb
push
jg
dec
outsl
out
sbb
shrb
mov
inc
mov
subb
out
pop
andl
jo
andl
test
lret
lods
dec
mov
dec
mov
adc
xor
xor
ljmp
mov
sti
lahf
mov
js
stc
sbb
jmp
dec
sbb
xchg
sbb
sti
scas
add
push
sub
xor
icebp
aam
push
xor
push
add
add
nop
sbb
adc
cmc
cmp
cwtl
xchg
jnp
push
xor
in
in
test
sub
fcoml
out
ds
fnstcw
scas
fistpl
and
mov
fsubr
ss
xchg
push
sbb
mov
mov
imul
cltd
scas
lea
daa
jno
outsl
in
std
sbb
std
rorb
gs
lcall
jmp
cmp
mov
hlt
flds
xchg
xor
movsb
and
pop
and
xor
scas
push
or
inc
xchg
sahf
hlt
push
neg
test
add
jge
pop
add
mov
xchg
idiv
inc
sbb
or
shll
out
out
xchg
xor
push
ljmp
aaa
cmp
xor
or
jl
mov
push
lock
prefetcht2
outsl
shrb
push
out
mov
rcrl
xor
rep
push
lahf
cli
xor
in
inc
jmp
out
mov
mov
leave
in
xor
push
rcrb
not
dec
shrl
mov
push
and
inc
and
xorl
or
out
out
cmp
sub
dec
movq
popa
lods
repz
movsl
dec
mov
mov
imul
xchg
inc
scas
push
scas
jecxz
test
dec
pop
mov
lahf
xchg
ret
add
popf
flds
daa
sbb
aam
push
mov
adc
scas
sub
test
fcoms
mov
test
data16
fcmovb
push
cmp
cmp
xor
mov
jle
aaa
fwait
push
xchg
jle
push
cld
xor
and
push
mov
xlat
fstcw
mov
data16
cltd
jnp
loope
mov
cmp
add
out
bound
sub
xor
enter
int3
shlb
lcall
pop
fistps
jns
push
ds
jle
lret
cmpsb
sti
xorl
mov
in
mov
mov
xchg
and
pushf
dec
adc
in
pop
loopne
movsl
shlb
aad
and
rcrl
mov
std
addr16
jmp
jl
adcl
lgs
xchg
popa
sbb
inc
and
mov
lods
or
mov
cmp
enter
lahf
outsb
and
mov
sbb
pop
popa
and
bound
fistps
inc
fidivrs
push
sbb
sub
in
adc
xchg
or
andb
inc
loope
mov
push
out
push
adc
dec
into
sbb
pusha
mov
fcom
or
in
out
mov
jns
dec
out
pushf
mov
mov
jbe
lea
xchg
and
not
sub
add
dec
xchg
mov
ds
lds
push
pop
mov
inc
mov
dec
lods
inc
divl
clc
mov
int
pushf
js
mov
mov
loop
mov
lret
sbb
or
outsb
xor
popf
lods
or
aaa
and
jne
fs
jg
jle
push
jge
and
add
push
repz
mov
mov
xchg
push
movsl
pop
loop
mov
sbb
inc
icebp
xor
je
pop
pop
cmp
daa
mov
out
pop
nop
pop
mov
xchg
fstp
imul
adc
inc
lds
test
cmp
daa
mov
lret
les
pop
out
xor
imul
into
stos
mov
jecxz
fisttps
jnp
add
xchg
test
lods
jns
push
aad
aaa
out
icebp
and
hlt
scas
sub
push
pop
push
mov
mov
pop
adc
es
fcompl
lret
mov
and
test
push
std
pop
pusha
push
mov
ja
data16
mov
adc
xchg
das
add
jbe
inc
and
sub
inc
mov
or
das
cmpsl
jnp
xorb
int
lods
or
mov
xchg
jecxz
lods
outsl
jo
or
pushf
pop
jle
cs
mov
into
inc
repnz
stos
aam
in
push
addr16
mov
mov
mov
subb
mov
jno
hlt
repnz
mov
cs
inc
lcall
pop
and
jbe
jnp
imul
pop
dec
cwtl
fistps
into
shll
jo
int
xchg
in
je
pusha
sbb
cmp
loope
sbb
loope
ficompl
mov
mov
mov
out
ret
pop
inc
mov
jb
dec
cmp
popf
pop
pusha
aam
dec
inc
jbe
push
push
sbb
xchg
pop
shlb
push
sbb
push
fldcw
lret
shll
cmp
and
lea
jbe
sub
mov
adc
nop
push
inc
pop
mov
arpl
fists
cmp
push
dec
cmpsb
add
cld
adc
enter
nop/reserved
shlb
fldenv
add
roll
pop
imul
and
mov
mov
rclb
mov
jmp
pop
pop
lods
push
push
cmp
mov
add
imul
add
xlat
or
movsb
test
lret
ljmp
call
subb
dec
ss
mov
add
outsl
xchg
push
adc
out
dec
and
btc
mov
es
enter
sbb
lods
cmp
rolb
test
int3
push
rcl
ret
stc
ljmp
inc
mov
mov
jo
out
fadd
xorl
leave
adc
cli
dec
int
jge
add
cmp
cli
and
push
push
cmp
push
xor
sub
pop
aam
push
out
in
lods
lock
lret
js
fbld
fmuls
xor
cli
dec
pop
dec
mov
outsb
mov
iret
dec
test
mov
pop
cmp
je
shll
shr
out
lds
sbb
sub
jle
pop
pop
sub
jne
ficoml
loopne
sbb
mov
jae
mov
cmp
fs
cmc
pop
out
lods
jne
push
mov
aaa
call
ret
mov
lcall
pop
xchg
lea
mov
test
mov
adc
movsb
push
das
test
or
decl
and
cmc
fs
repz
js
imul
cwtl
repnz
mov
movl
es
pop
les
pop
xchg
adc
push
insl
or
mov
mov
inc
cmpsb
imul
int
and
add
push
mov
add
jp
fwait
imul
xor
test
cmp
inc
mov
jp
addb
insl
xor
lret
imul
ret
int3
inc
fs
repnz
sub
aad
add
and
jg
cmp
sub
mov
ljmp
fsubl
mov
out
xchg
push
vpsubusb
int
jmp
movsl
in
cmpb
and
movsb
jmp
mov
popa
jbe
leave
vphsubwd
pushf
out
icebp
clc
jle
sub
push
movsb
inc
adc
mov
adc
mov
lret
adcl
test
imull
popf
or
jb
ljmp
dec
push
cld
clc
adc
stos
imull
outsl
jg
cwtl
js
mov
pop
pop
or
shrb
xor
aaa
push
inc
or
push
lds
icebp
jge
rcl
out
es
or
daa
xlat
jge
lret
inc
mov
aam
les
sbb
lret
cmpb
loopne
mov
ficomps
fs
ret
pop
stos
jp
mov
lds
dec
jg
xor
xor
loope
or
pop
ja
test
scas
fwait
call
into
push
xor
adcl
call
adc
push
fimuls
cmpsb
adc
push
add
lret
in
stc
ds
in
sbb
xchg
ja
movsl
sti
shlb
pop
pop
imul
cmp
cmc
fldl
sti
jnp
sti
sub
xchg
out
in
xchg
xchg
mov
imul
jmp
stc
mov
rorl
mov
jns
pop
push
repnz
sub
and
xor
cmp
nop
mov
or
inc
fnsaves
or
popa
je
jae
aas
pop
in
or
fldt
notb
push
popa
push
lcall
lcall
and
pop
xor
aam
fistpll
sub
lods
sbb
je
sub
ja
xor
add
popf
pop
mov
mov
and
test
mov
inc
shlb
in
rcll
ja
ljmp
in
pop
out
in
loop
adc
pop
rorl
cmc
pop
lret
aam
adc
int3
out
fnsetpm(287
test
inc
es
mov
jo
in
daa
push
call
jmp
stc
mov
jno
aam
movsl
push
xchg
dec
inc
push
xchg
adc
xor
test
imul
pop
sahf
cmp
push
pop
pop
cmp
fcompl
and
jecxz
mov
mov
push
jl
jg
or
sub
sbb
scas
inc
shrl
sub
cmp
pop
cmp
cmp
cltd
mov
lret
pop
xchg
xchg
popf
je
insb
xlat
aam
out
push
into
xchg
ja
dec
jecxz
sub
test
add
ficomps
mov
add
enter
imul
cmp
sbb
fs
mov
inc
ret
out
xchg
xlat
and
mov
imul
into
jecxz
adc
int3
mov
and
sar
stos
sub
push
daa
fwait
out
call
scas
cmc
fs
fs
in
xor
sub
push
test
and
dec
pop
and
xor
loope
xor
in
jmp
cld
lods
xor
cmp
lcall
jl
dec
gs
es
dec
imul
adc
mov
sub
mov
imulb
bound
inc
movsb
fadds
je
inc
call
sbb
fdivrl
popf
sbb
lahf
or
xchg
aad
cmpsb
xor
cltd
fs
jg
test
ljmp
cmp
fidivs
push
je,pt
pushf
pop
inc
adc
mov
push
sbb
sbb
push
and
pop
pop
shll
test
test
push
decb
sahf
xor
and
movl
lcall
dec
lds
pop
insl
mov
outsl
scas
in
sbb
mov
push
stc
adc
add
cmp
imull
movsb
fdivs
jnp
loopne
mov
sub
push
mov
dec
mov
loop
mov
ret
enter
xor
push
cmp
mov
dec
into
iret
xor
jne
sub
test
or
movsl
cmp
in
dec
add
sub
push
lds
pop
leave
mov
xor
push
pop
stos
cmp
inc
lods
aam
cmp
inc
mov
sbb
fsubs
repnz
scas
shlb
push
mov
cmc
js
jnp
adc
jo
inc
pop
pop
xchg
aas
ljmp
and
jmp
sti
mov
stc
ret
sbb
aad
jo
ret
inc
mov
add
fcmovnu
popa
lahf
inc
repz
mov
jl
mov
mov
add
push
xchg
dec
sbb
pop
push
out
movsl
fildl
jne
mulb
cmc
rorl
lods
inc
mov
lea
and
xor
pushf
ret
xchg
add
sub
lods
push
out
out
inc
xchg
out
or
push
jnp
dec
and
test
cmp
ja
sarb
lods
jns
mov
xor
pop
jmp
cmp
xor
sbb
shll
push
push
bound
adc
pop
push
or
mov
pop
push
lret
hlt
mov
add
je
inc
filds
nop
arpl
or
push
js
push
fdivp
inc
mov
testb
lock
imul
mov
jne
cmc
sub
push
sbb
mov
into
jo
pop
fsubr
test
aas
mov
scas
push
mov
add
enter
jns
lock
lret
scas
adc
lahf
mov
hlt
xor
sbb
and
or
hlt
adc
sahf
xor
mov
mov
jmp
outsl
sub
mov
xor
push
xchg
cli
dec
inc
push
je
sarb
js
add
sub
inc
push
pop
mov
insl
jo
and
cld
test
shrb
out
xchg
xlat
into
add
call
adc
sbb
push
or
cld
add
mov
repz
fbld
jge
push
mov
insl
sbb
je
cltd
pcmpeqb
xchg
xchg
push
cmp
fisttpll
sub
hlt
nop
movsl
in
jns
add
inc
or
cmpsb
push
fimull
test
fildl
cs
notl
add
aas
std
outsb
jnp
push
sti
fstps
pop
adc
xchg
xchg
je
inc
push
mov
mov
and
mov
xchg
push
add
stc
ret
dec
scas
inc
enter
jl
cwtl
imul
xor
and
cmp
jg
cli
je
mov
faddl
push
cmpsb
dec
out
mov
pop
das
cmpsb
mov
push
sub
pop
lods
xchg
mov
popf
push
cmp
jae
fnstcw
ja
cmp
fst
or
push
mov
sub
jb
jmp
cli
and
addr16
adc
push
or
sbb
call
xor
int3
fsubrp
jb
out
mov
rcll
pop
xchg
cmp
ds
ret
orl
js
lcall
xchg
cmpsb
repz
lods
int3
loop
inc
jo
data16
cmp
add
divl
pop
push
cltd
test
fisubrs
cmp
loop
lret
aas
sub
inc
adc
roll
arpl
lea
sub
test
and
arpl
adc
ret
adc
sub
lods
cmp
cmp
sbbl
insl
movsl
inc
dec
cmp
dec
ja
ret
lods
fmull
cli
addr16
push
lret
jmp
mov
cltd
sbb
fistpll
fistpll
mov
std
push
mov
sahf
xor
mov
jnp
call
jb
imul
cmp
push
and
fwait
fwait
lock
shl
repnz
or
mov
lds
adc
in
xor
fimull
inc
inc
and
inc
das
fildll
dec
test
test
or
jge
add
cli
je
xor
xchg
xchg
imul
mov
or
clc
pop
hlt
xchg
pop
sub
mov
stc
pop
aaa
ss
mov
sub
mov
or
cmpsb
je
inc
and
mov
pop
cmp
pop
mov
mov
inc
push
std
push
mov
sahf
hlt
or
cmpb
cmpsl
ret
call
and
push
xchg
xor
dec
or
sbbb
jle
xor
sub
stos
add
fdivs
out
pusha
or
mov
jge
sbb
cwtl
aam
rorl
je
adc
xchg
push
add
push
les
jae
or
cmp
movsb
sti
xchg
push
xchg
sub
adc
sets
cmp
subl
mov
jne
adc
int3
repnz
fiadds
dec
jne
fwait
mov
fldcw
lods
insb
adc
mov
push
push
sbb
clc
fstl
cmc
push
mov
enter
xchg
in
stos
shr
das
test
push
jge
or
jp
testl
push
add
pop
imul
in
fisubs
mov
add
insb
or
pop
sbb
jecxz
jp
cmpsb
cmp
cwtl
ljmp
mov
shll
pop
shlb
fs
dec
mov
psrlq
inc
inc
ljmp
ret
scas
pop
fcmovne
jae
dec
popf
pop
mov
add
leave
and
aam
lret
and
dec
cltd
ja
add
xchg
insb
insl
or
sub
sbb
xor
jp
pop
jns
into
jae
pop
xor
inc
out
and
dec
arpl
xor
sub
adc
lret
inc
or
add
popa
and
call
xorb
jno
in
adc
jp
adc
jno
mov
mov
pop
and
call
negl
xor
out
shlb
out
xor
mov
pop
mov
repnz
mov
pop
xchg
sbb
pop
loope
and
jae
mov
bnd
push
sub
add
cmp
mov
movl
pop
mov
dec
adc
jp
cmp
jae
addr16
jae
cmp
test
in
ljmp
fistpll
fs
icebp
data16
addr16
cltd
inc
insl
and
mov
jb
cmc
jge
inc
es
push
addl
loop
roll
gs
or
outsl
cmp
in
ss
inc
mov
xchg
xchg
nop
or
push
popa
lea
hlt
orb
dec
imul
mov
cmp
sub
or
jns
scas
enter
mov
jb
int3
cmpsl
leave
sarl
clc
push
popf
hlt
or
adc
jo
in
test
out
imul
mov
mov
pop
ss
mov
mov
dec
lods
fsub
pop
rorb
hlt
and
mov
mov
jp
fnstenv
push
pop
mov
push
xor
outsb
mov
loopne
sub
lds
cld
fs
adc
fbld
cmp
pop
xchg
dec
xchg
int3
out
fimull
fstpt
or
outsl
orb
xchg
pop
mov
scas
jns
test
sub
sbb
add
pop
or
cmp
leave
out
jecxz
xchg
aaa
loope
mov
std
sti
pop
es
les
test
xchg
sub
mov
or
outsl
negb
cs
adc
aaa
cmp
xchg
add
adc
repnz
dec
xor
inc
dec
push
sub
imul
push
daa
iret
testl
bswap
pop
inc
nop
xchg
imul
xor
dec
fists
and
fwait
pop
outsl
int3
daa
mov
cmpsb
inc
clc
imul
int3
jg
jmp
push
imul
xor
jns
mov
xchg
hlt
loop
icebp
push
sarb
mov
out
shlb
out
mov
or
adc
jno
adc
aas
xlat
cmp
push
adc
xor
xor
sbb
mov
pop
jno
dec
test
cmovb
mov
icebp
pop
lea
mov
fidivl
loopne
in
test
xchg
scas
xor
mov
cmp
dec
adc
inc
loop
aam
add
popa
pop
fwait
push
jbe
mov
mov
sbb
call
inc
and
mov
aad
test
jecxz
fsubr
popf
pop
jne
jl
jmp
mov
lcall
dec
cmp
pop
shlb
outsb
jb
movsl
pop
dec
repz
push
cmp
fldt
push
in
pop
push
cmp
sub
mov
inc
mov
fsts
push
in
fadds
sub
mov
in
cltd
jecxz
outsl
loopne
arpl
ss
push
mov
add
cmp
or
je
push
and
xor
ss
cmp
pushf
adc
push
inc
js
inc
and
mull
xchg
mov
je
testl
cs
adc
cmp
std
rclb
es
ja
mov
jne
jbe
mov
dec
xchg
jo
lret
stos
xor
add
xor
jae
in
and
test
jmp
inc
mov
mov
out
in
andb
test
sub
sub
dec
dec
in
enter
pop
sti
pop
aas
out
lcall
fistl
cmp
cmpsl
ret
jg
push
sbb
cli
jae
and
sbb
and
mov
in
stc
nop
dec
loopne
adc
add
inc
cmp
mov
mov
mov
popa
repz
dec
ficompl
movsb
dec
fisubrs
mov
xor
mov
in
pushf
cwtl
add
mov
sub
add
test
insb
mov
shrl
sbb
jge
jne
out
push
test
pop
imul
popa
popf
and
daa
pop
call
fstl
arpl
ret
dec
add
dec
test
dec
inc
mov
loopne
lret
mov
push
hlt
rcrl
fmul
pop
shrb
ud2
rcrl
jno
mov
pop
gs
jecxz
rcll
mov
test
roll
adc
in
or
pop
push
cmpsl
dec
ja
mov
sub
xor
scas
jge,pt
jg
int3
sbb
or
lret
cld
cmp
cld
lea
in
aaa
sub
test
adc
dec
stc
bound
push
push
dec
lods
mov
push
out
cmpsl
aad
fidivrs
push
daa
popa
xchg
xor
arpl
stos
jmp
xor
push
cwtl
out
sub
nop
int3
subl
dec
js
mov
xchg
push
jmp
out
or
or
popa
dec
arpl
dec
scas
pop
or
pop
xchg
aad
enter
in
cmp
inc
push
sub
mov
mov
and
out
jbe
cmp
scas
aam
subl
push
ljmp
fsubrp
aas
sarl
sbb
imull
jne
fsubl
mov
mov
arpl
inc
shll
sbb
mov
and
lahf
mov
cmp
xor
ss
and
dec
mov
outsb
mov
mov
or
daa
out
push
push
jae
mov
jo
ret
test
jnp
push
mov
jns
fcoml
ljmp
push
xor
fdiv
ja
das
push
test
call
popa
stos
es
inc
and
in
loopne
pop
enter
dec
mov
pusha
pop
dec
negb
scas
loop
mov
sbb
daa
mov
push
imul
test
mov
call
push
icebp
mov
adc
aad
cmovnp
stos
bound
cmp
xor
stc
adc
cmp
xchg
mov
pop
nop
shlb
bound
out
cmp
add
stos
mov
faddp
push
data16
cld
mov
in
scas
jnp
clc
jne
mov
mov
pop
jmp
push
mov
inc
cmp
sub
pop
xor
fdivrs
rclb
fs
loopne
mov
mov
inc
sbb
jno
fsubl
shr
push
lcall
das
int3
les
inc
add
inc
add
aas
pop
mov
dec
add
xchg
and
jg
mov
dec
xchg
fs
cmpsb
pop
andb
lods
in
cld
insl
in
pop
xor
sbb
add
cmp
test
xorb
add
outsb
repz
mov
ret
stos
rcrl
mov
jno
jne
adc
xor
mov
lods
stos
ss
pop
ss
call
and
das
xchg
and
mov
imul
add
inc
adc
lock
rcrl
cmp
out
in
ss
xlat
push
mov
movsl
or
and
xchg
adc
pop
jg
xchg
or
jbe
repnz
fidivs
aad
sbb
add
jmp
aam
mov
cli
adcl
stos
mov
and
pop
cmpsb
scas
shrl
sub
mov
add
mov
repz
shlb
es
js
xor
or
lret
mov
mov
pop
stos
das
pop
cmp
cmp
cmp
lret
xor
cwtl
cmp
dec
mov
scas
imul
stc
adc
das
in
arpl
sub
cmp
cmp
ja
sub
sub
sbb
push
fs
mov
int
mov
imul
popf
ljmp
mov
outsb
jnp
mov
cmc
lods
pushf
xchg
test
mov
add
test
push
jae
loopne
leave
das
xor
dec
clc
js
mov
sub
or
pop
fisttpl
mov
nop
pop
das
into
pop
mov
dec
mov
jmp
mov
xchg
loopne
and
cwtl
fnstsw
lock
pop
xchg
sub
into
adcb
add
xchg
mov
push
testl
filds
add
in
popf
stc
jecxz
cmp
xlat
adc
dec
mov
mov
or
mov
hlt
das
mov
repnz
xor
mov
aas
push
xchg
leave
enter
stos
cli
rclb
inc
sbb
dec
mov
jp
jg
xor
and
and
dec
inc
clc
test
aas
sbb
call
insl
pusha
fwait
mov
mov
daa
in
pushf
fstpt
mov
repnz
inc
jl
pop
cli
pusha
ljmp
int3
in
lds
pop
xor
xorl
hlt
ljmp
xchg
test
add
mov
outsb
jp
or
mov
fwait
xchg
cmp
xor
mov
jmp
arpl
lahf
gs
cmpsb
sahf
and
inc
inc
xor
iret
mov
fisubrl
shrb
mov
arpl
mov
test
dec
sub
insl
adc
rorl
test
or
xchg
std
std
repz
add
pop
insb
sbb
out
cs
jecxz
dec
or
lea
dec
dec
mov
outsb
jecxz
or
loopne
jg
in
and
xchg
jmp
or
and
jno
ret
jp
and
roll
fs
std
add
sub
scas
push
push
loopne
cmpsb
lret
test
xchg
mov
lods
lret
sar
sti
cmp
mov
push
pop
int
orb
ret
lock
stos
f2xm1
mov
lret
nop
adc
jne
mov
xor
ror
out
imul
inc
push
cli
add
mov
ja
add
push
inc
jo
call
jp
mov
movsl
mov
mov
xlat
xchg
sbbb
mov
imul
cmp
mov
add
add
loope
cmp
pop
cmp
pop
ljmp
sbb
loop
pop
cmp
pop
pop
and
or
js
mov
or
jb
add
xchg
jno
into
xchg
cmpsb
jl
push
scas
xlat
aad
fs
bound
call
ds
js
pop
pop
sub
and
and
mov
xlat
xchg
sti
andb
sar
lahf
das
add
in
pop
movsl
jnp
xor
inc
xchg
inc
adc
aas
es
out
cmpl
inc
cmp
push
loop
fwait
cmp
add
rolb
push
or
jecxz
push
ss
push
xchg
addr16
mov
mov
sub
fmul
jge
sti
ds
jns
es
sub
fiaddl
shl
mov
add
xchg
lret
push
mov
pushf
lret
fmuls
outsl
rclb
scas
dec
repnz
fildll
pop
add
dec
les
aam
popa
iret
adcb
pop
lods
add
jg
outsl
dec
fwait
jae
aad
sbbl
daa
mov
add
test
adc
sub
pusha
mov
jge
outsl
or
xchg
aaa
fs
jb
stos
sub
into
clc
cltd
cmpsl
test
and
and
xor
jl
jp
and
or
push
in
fbld
add
pop
addb
movups
sti
lea
inc
adc
inc
push
push
data16
lods
add
aas
enter
lock
fwait
jbe
mov
dec
mov
sub
add
sbb
jle
sub
shll
test
xlat
jle
insl
rorl
test
push
push
in
push
push
test
imul
stc
cmp
aas
dec
ljmp
sbb
lock
jge
cmp
push
in
push
sahf
in
xor
lods
psadbw
jno
add
out
addl
or
leave
push
dec
xchg
rcl
incl
jmp
dec
std
mov
out
mov
nop
lcall
cmp
les
out
push
pop
mov
sbb
rcll
jg
sbb
cmp
icebp
shr
mov
jmp
testl
loopne
cld
idivb
mov
iret
rep
es
test
rcrl
mov
rorl
gs
xor
adc
xchg
sub
ljmp
jle
hlt
xchg
arpl
pop
cmp
icebp
push
and
inc
xchg
pop
add
sahf
lahf
into
xchg
pop
mov
and
sub
push
in
push
jb
imul
pop
outsl
insl
fisubl
shll
in
cmp
inc
aad
xor
in
out
mov
push
and
popf
cmp
outsb
arpl
or
cwtl
xchg
mov
mov
int
notl
mov
adc
loope
xlat
mov
rolb
mov
mov
jmp
jge
iret
mov
and
pop
mov
push
js
adc
aad
inc
lods
mov
insb
dec
xchg
cmp
setns
adc
mov
inc
cmp
mov
pop
gs
mov
dec
les
jnp
lret
movsb
lahf
jb
shlb
sbb
push
sbb
mov
bound
cmpsb
fildll
inc
shl
pop
push
les
lods
adc
or
lret
sub
sub
dec
jbe
inc
inc
loopne
test
push
testl
jge
fnstenv
xor
adc
or
leave
mov
bound
les
pusha
xor
popa
subl
gs
negb
jmp
push
mov
cmp
aas
addr16
roll
sbb
fisubrs
cltd
jle
arpl
xor
xchg
dec
pop
cmp
mov
out
jns
cmp
insl
pop
add
sbb
aas
mov
inc
arpl
mov
cmp
sub
mov
pop
daa
inc
arpl
xchg
mov
pushl
sub
ret
push
sub
test
mov
aad
mov
mov
or
push
add
cmp
popf
sbb
decb
mov
movsb
cmp
scas
fadds
je
rdpmc
or
fwait
syscall
scas
push
fistpll
and
xlat
outsb
mov
cmc
ljmp
lods
add
cs
jg
fisttpl
cmpsb
xchg
cmp
mov
mov
cmp
shll
lods
add
aas
cld
inc
jae
add
pop
adc
stos
or
sub
stos
cmp
and
enter
pop
shrl
adc
addr16
mov
fisubrl
lret
outsl
dec
js
pusha
mov
xchg
cmpsl
shlb
lcall
adc
inc
xchg
imul
loop
inc
outsl
adc
or
jo
loope
push
xchg
cld
pop
rolb
xchg
or
shlb
std
push
mov
pop
add
sbb
aam
jno
lahf
push
xchg
sbb
addb
dec
ljmp
sar
cmc
pushf
and
or
sub
sbb
aam
js
movsl
xchg
push
sbb
lret
leave
pop
inc
movsl
jno
sbb
in
sub
adc
pop
ret
pusha
test
out
cmp
sub
xor
aam
inc
push
data16
in
das
mov
lds
ficoml
mov
ljmp
scas
loop
in
lahf
sahf
mov
stos
sub
insl
xchg
and
fs
push
lret
and
scas
xor
pop
rorl
leave
pop
cmp
dec
push
or
and
scas
mov
fcmovnbe
outsl
jl
hlt
push
push
mov
mov
sub
pop
jbe
std
mov
or
adc
sub
pop
pop
rcl
mov
mov
scas
xchg
ret
rcrb
scas
ja
mov
pop
in
pop
and
repnz
jnp
cs
adc
inc
ficomps
mov
iret
gs
in
pop
xor
xor
int
xchg
or
lods
fwait
test
jb
rolb
jae
out
inc
adc
test
cld
pop
add
movsb
sub
cmp
inc
jno
rolb
imul
clc
xor
ljmp
mov
lds
sub
push
leave
dec
outsb
bound
inc
rcrb
addr16
jae
inc
sub
test
insb
ret
pop
popa
popf
pop
lcall
lds
icebp
inc
pop
and
lea
inc
add
iret
push
in
sti
jnp
mov
cmp
push
mov
ficompl
addr16
test
pop
mov
cld
rcrl
add
or
insl
pop
dec
out
push
dec
cmp
clc
outsl
xlat
inc
inc
dec
cmpl
mov
es
xchg
out
inc
lret
fdivs
mov
push
mov
add
pop
cltd
or
push
dec
mov
test
aaa
adc
outsb
std
out
loopne
ds
scas
pop
jo
int
or
pop
mov
add
and
lret
rcrl
adc
and
pop
stos
andl
push
fcmovu
test
jg
add
xchg
int
movsb
nop
mov
lret
dec
cmp
adc
mov
sbb
or
repz
frstor
cld
out
mov
jmp
xor
jecxz
test
cmpsb
ss
push
jae
inc
scas
jbe
jbe
mov
int3
fldt
jo
add
push
mov
cmpb
cmp
lea
mov
adc
push
sar
adc
jp
scas
xor
adc
repnz
add
cmp
pop
push
sbbl
pop
inc
mov
je
push
sti
mov
js
pop
addb
arpl
nop
add
into
icebp
sub
addl
sub
ljmp
adc
push
js
xor
mov
aaa
aam
sbb
ljmp
lock
cwtl
xor
scas
std
int3
xchg
dec
sub
jecxz
pusha
bound
mov
cwtd
push
sbb
ret
cmp
dec
pop
imul
mov
cmp
lods
in
fcoms
out
imul
push
add
push
mov
mov
jns
or
jge
iret
sub
push
popa
xchg
sub
cmpsb
cmpsl
sbb
push
push
mov
mov
add
andb
pop
inc
imulb
adc
in
mov
stos
popf
sub
cltd
add
dec
adc
or
adc
adc
ficoms
mov
popa
mov
loopne
jmp
arpl
scas
and
sbb
and
mov
mov
mov
arpl
popa
sub
cmp
aad
jp
movsl
push
jl
ss
push
int
adc
dec
scas
and
and
dec
push
je
xchg
sub
mov
sub
mov
adc
mov
cwtl
shll
repz
lds
xchg
mov
les
sbb
nop
loop
add
jns
and
ret
lret
fldl
dec
push
push
es
sbb
push
sbb
mov
push
push
pop
mov
adc
lahf
jnp
mov
dec
fwait
mov
xor
and
xchg
cs
dec
mov
out
push
je
adc
push
and
cmc
mov
ljmp
cld
dec
pop
xlat
les
outsl
and
or
fldcw
jns
adc
bound
inc
sub
pop
lods
cmp
loope
jne
mov
jno
jno
movsb
fnsave
adc
push
adc
mov
clc
js
sahf
stos
scas
jecxz
icebp
fcmovnbe
stos
jae
ret
movsl
imull
mov
sub
push
mov
push
push
sbb
mov
lcall
sub
mov
outsb
mov
cmp
stos
das
inc
sub
jp
aas
cmpsb
outsb
rclb
mov
je
dec
inc
xchg
bound
pop
push
push
in
pop
and
movsb
in
fidivrl
add
in
dec
mov
in
sar
insl
add
and
orb
pop
inc
outsl
sar
mov
xlat
adc
insl
fstpl
rcll
push
clc
inc
loopne
inc
cmpsl
test
sub
inc
jp
push
scas
cmp
loopne
cmp
or
adc
xor
mov
scas
mov
in
mov
lods
scas
stos
mov
jbe
xchg
and
add
pop
sub
sub
or
stos
int
into
dec
movsb
jbe
mov
popf
push
xor
push
sub
test
inc
jae
mov
mov
stos
lret
jnp
inc
jbe
mull
data16
adc
cmp
xchg
add
push
push
jo
pop
ret
shrb
or
addb
je
dec
in
sub
jge
iret
jnp
fnsetpm(287
and
mov
ficoms
cmp
add
cmpl
pop
add
sahf
lods
or
jle
cmpsl
sbb
decl
push
cld
push
insb
pop
stc
fucomi
cwtl
sahf
add
out
popa
addr16
sub
out
sub
sbbl
ljmp
sbb
push
xchg
xchg
jp
adc
xchg
negb
out
adc
fcmovnbe
std
mov
fcomps
cmp
mov
in
mov
push
push
or
imulb
dec
cmp
movsb
in
mov
pop
xor
xchg
mov
mov
fucomip
rclb
lahf
lahf
or
lret
testb
stos
ret
mov
lahf
push
and
xor
sbb
xlat
lahf
mov
sti
iret
and
or
ja
xchg
fs
lock
sub
sbbl
into
xchg
movsb
sarb
cmp
iret
fisttpll
xor
cmp
repnz
ret
sub
loopne
loop
mov
aas
loop
test
lea
mov
ret
or
xor
lea
pop
inc
mov
aam
ret
lods
ret
dec
push
mov
loope
jge
jecxz
or
sub
inc
jmp
mov
les
xor
dec
data16
xchg
mov
stc
lcall
cmp
pushf
mov
adc
and
popa
jmp
jae
inc
xchg
out
inc
cli
dec
xchg
loopne
and
lcall
lret
mov
add
shlb
shr
and
shrb
push
mov
test
and
mov
mov
fnstcw
daa
es
sbb
xchg
cmpsb
jnp
ror
mov
xor
jae
xor
lcall
mov
pop
clc
iret
sbb
out
pop
jb
ret
and
jnp
adc
mov
leave
pop
mov
aaa
clc
cmp
adc
mov
push
fwait
pop
cs
cltd
mov
cmpsb
mov
inc
dec
gs
mov
imul
sub
push
cmc
popf
jnp
in
and
inc
into
shrl
and
mov
pop
in
jmp
lods
inc
out
add
pop
adcl
lcall
loopne
lods
pop
insb
lods
xchg
xor
orb
sarl
cmc
mov
jbe
push
mov
ret
dec
mov
mov
mov
addl
push
dec
cmp
push
scas
idivb
in
and
mov
iret
lods
adc
and
lock
imul
xchg
cmp
shl
insl
mov
push
andb
mov
pop
repz
addr16
sarl
push
in
cmp
ja
pop
call
test
pop
rol
xor
test
dec
push
xchg
fistpll
icebp
dec
andl
fnsave
fcoml
fsubp
jmp
pushf
adc
sbb
adcb
xchg
or
clc
lea
loopne
adc
fwait
xchg
sbb
push
mov
out
fbld
jge
xchg
insb
fiadds
shll
push
and
xchg
mov
mov
push
in
mov
adc
lahf
and
mov
xor
cmp
jb
shlb
fists
jge
push
shl
lret
xchg
xor
add
dec
add
cmp
mov
movsb
fsts
lock
mov
lcall
xchg
cwtl
stos
push
imulb
mov
scas
mov
sbb
fwait
xchg
mov
movsb
and
sub
mov
mov
jns
wrmsr
fidivs
sar
xor
fidivrs
mov
mov
pusha
shll
pushf
ja
icebp
into
mov
jecxz
push
inc
divb
cmc
cmp
sarl
mov
push
mov
xchg
out
pop
loop
cmp
mov
pop
inc
aad
in
inc
mov
mov
push
mov
fidivs
repz
fisttpll
xor
lcall
cmp
add
mov
mov
sar
push
push
loopne
cmp
fwait
popf
push
cltd
add
dec
xchg
cmp
push
insb
into
repz
mov
bound
testb
cmp
aas
jae
and
lahf
fbstp
mov
mov
jge
mov
ret
loopew
adc
nop
dec
lahf
sti
cmp
pop
adc
cli
xchg
outsl
pop
fst
mov
cmp
aad
js
pushf
push
mov
jp
psrlw
imul
out
out
cld
adc
cmc
into
in
movsb
leave
mov
push
iret
shll
lods
inc
jle
ss
add
int3
ljmp
jp
nop
and
rcll
les
pop
dec
out
lahf
mov
cld
cltd
pop
in
mov
pushl
leave
xchg
sbb
inc
xor
pop
into
pusha
pop
lret
mov
add
inc
ror
pop
dec
cmp
cmpl
mov
sahf
mov
mov
iret
icebp
push
push
xchg
stos
rolb
std
dec
push
pop
out
repnz
scas
aaa
ret
or
mov
add
fcoms
sbb
movsl
mov
lods
lcall
movsl
data16
in
int3
cmp
or
pop
mov
cmp
into
pop
jnp
sub
clc
jo
fwait
lret
ret
dec
outsl
jp
loope
ret
je
lret
insl
hlt
inc
jg
nop
dec
popf
push
dec
adc
setbe
mov
xlat
hlt
lock
fs
pop
mov
rolb
jbe
cmp
loop
push
ja
mov
inc
loope
fcoml
mov
inc
sub
push
cltd
jns
xchg
movsl
aam
scas
xor
mov
jb
je
iret
sarb
mov
push
push
adc
mov
fbstp
imul
add
and
sbb
push
es
dec
mov
movsl
xchg
cmpsb
jle
jp
mov
cli
enter
loopne
lahf
fs
aaa
ss
dec
or
push
mov
or
mov
rcrl
pusha
daa
je
das
sbb
xchg
hlt
cmpsl
lods
lcall
loope
inc
ss
js
outsb
aaa
aam
mov
mov
sti
or
faddp
or
sbb
sbb
xchg
pop
test
xchg
mov
xchg
xchg
repnz
adc
cmc
sub
pop
lret
push
inc
dec
push
xchg
xor
mov
inc
xlat
stos
ja
xor
icebp
and
cmpsb
pop
push
hlt
push
and
jo
fisttpl
jb
into
push
cli
fdivs
fnstsw
cmp
inc
scas
sub
push
repz
push
lcall
sbb
lret
lock
and
cs
adc
xchg
dec
pop
push
fcomps
xor
popa
xor
mov
iret
cmp
ret
pushf
or
int
push
addr16
call
pop
scas
rcr
loopne
out
fninit
dec
mov
xor
lods
push
jle,pt
fdivrs
or
js
push
sti
flds
stos
mov
mov
and
loop
inc
mov
push
negl
adc
shl
pop
or
lods
popa
arpl
cltd
mov
lcall
shl
roll
out
ret
jbe
adc
lret
lahf
push
mov
cmp
bound
mov
in
mov
movsl
mov
mov
xor
adc
xchg
sbb
cmp
pop
aas
sbb
lcall
out
int3
mov
mov
pop
fisubrs
and
fwait
imul
aaa
mov
fcmovnu
into
imul
icebp
pushf
in
push
test
arpl
insl
and
sub
insb
cmpsb
pop
rolb
inc
ret
stos
sub
stos
cmp
and
movsb
xor
dec
movsb
mov
sbb
and
jmp
ret
pop
ficoml
xchg
pop
jns
jb
loopne
jp
jae
pop
jae
ds
dec
add
mov
pop
jne
pushf
hlt
xchg
test
int3
jge
daa
cltd
fdivrl
pop
mov
dec
loop
add
or
clc
mov
add
les
xor
cmp
lods
mov
push
or
icebp
leave
movsl
lcall
xchg
xchg
sbb
and
mov
ljmp
sub
mov
inc
loopne
inc
orl
fidivrs
push
push
pop
inc
xor
jbe
arpl
jge
mov
add
jne
pop
cs
adc
enter
dec
xchg
mov
cmp
jne
pop
mov
dec
in
push
push
cmp
addr16
movsl
push
sbb
frstor
popa
div
dec
loop
cmp
fildll
xor
hlt
imul
cs
xor
out
sbb
xor
or
adc
mov
addr16
pop
pop
mov
mov
cmp
icebp
jae
push
xor
sub
fistl
testb
mov
or
out
scas
mov
inc
pushf
lret
das
repnz
jns
in
in
inc
mov
in
pop
lret
inc
stc
fcomip
fisttps
xor
push
fcomps
pop
cs
lds
and
in
loop
lds
inc
iret
dec
inc
push
xor
lods
in
push
aam
add
aad
loope
jo
loopne
lret
cmp
sbb
or
inc
hlt
lret
pop
aas
pushf
aad
lds
pop
pop
fldenv
mov
roll
mov
sbb
jne
jns
stos
xor
mov
cwtl
dec
jle
jmp
xchg
jg
push
adc
sti
imul
pop
jae
in
test
aaa
shl
pop
push
mov
enter
cmp
neg
jle
mov
out
insb
and
movsl
sbb
mov
jle
mov
adc
pop
nop
cli
fwait
jmp
shlb
shl
fistl
xchg
sarb
in
aas
pop
cltd
clc
add
lock
mov
in
xchg
rcrl
add
mov
int3
bnd
pop
subl
fnsave
fstpl
and
xchg
fmul
jae
adc
shrl
clc
shll
inc
jne
shlb
push
cltd
mov
lock
pushf
repnz
fldcw
and
xor
dec
sub
jl
mov
orl
pop
sub
mov
xchg
cmp
fidivrs
jae
add
jno
shll
aaa
cmp
nop
mov
test
mov
adc
adc
add
or
pop
sarb
mov
ret
inc
inc
xor
nop
mov
or
outsl
push
push
jl
sahf
or
jp
out
push
into
pop
test
rcr
sbb
stos
arpl
inc
mov
into
pop
or
xor
push
lret
jae
or
push
shlb
add
and
ja
in
cmp
idivb
and
push
shrb
loope
out
data16
call
and
sub
and
cmpsl
mov
out
pop
test
sub
fcompl
add
lods
xorl
and
lods
enter
sbb
nop
jle
dec
cmp
push
daa
mov
mov
mov
xor
cmp
pop
or
mov
sbb
pop
fidivrs
push
mov
push
lret
and
movsb
ret
arpl
lret
jbe
hlt
xor
sbb
xchg
or
scas
fisttpll
iret
sbbb
lea
lds
adc
loope
xor
insb
cmpsb
adc
fadds
imul
stos
sbb
jo
adc
imull
jmp
xlat
xchg
outsb
xchg
jmp
subl
out
push
xchg
imul
sbbb
jae
push
xchg
iret
stos
scas
xchg
clc
sbb
mov
xor
mov
icebp
in
or
mov
xchg
pop
dec
sub
push
sbb
ret
cmpsb
jecxz
cs
mov
push
push
hlt
sbb
sbb
dec
inc
push
push
lods
or
into
mov
lahf
cmc
ja
out
rorb
push
jle
int
dec
jg
in
lods
sub
lret
hlt
mov
pushf
scas
cmp
sub
cmp
inc
push
mov
fildl
and
arpl
insb
push
pop
mov
mov
fstl
mov
ffree
mov
sub
pushf
dec
movsb
pop
pop
aas
std
iret
sbb
push
int3
push
cs
mov
ret
mov
out
jmp
cmpsl
shrl
ret
mov
add
out
xchg
add
out
push
pop
dec
xchg
enter
dec
xchg
and
out
int
mov
ffree
ret
mov
mov
shl
xchg
push
scas
ljmp
adc
inc
stc
xchg
out
push
xor
addr16
test
outsl
lcall
in
int
cmp
ss
loope
and
and
or
iret
popf
jg
out
fistps
sub
gs
in
fnsave
sub
or
push
ljmp
outsl
imul
push
fwait
bound
pop
and
inc
xchg
or
int3
ja
icebp
jmp
sbb
dec
and
sbbl
movsb
pushf
ja
mov
adc
add
push
inc
and
push
sub
mov
neg
xor
xor
pop
inc
sbb
clc
jbe
jl
jne
mov
adc
in
insb
adc
ret
sub
in
jp
cmpsl
xor
mov
ret
xor
mov
idivb
jns
pslld
loopne
ja
ret
aad
xchg
xchg
push
daa
push
or
cmp
jb
gs
cmpsb
cmp
out
jge
mov
jecxz
push
insb
push
or
test
popf
pop
les
scas
scas
lcall
movsl
add
stc
data16
bound
lret
mov
clc
adc
pop
addr16
clc
je
push
xor
scas
std
lahf
jp
data16
push
sarb
ljmp
testb
adc
adc
notb
inc
stos
stos
sub
push
cltd
and
xchg
cld
cs
test
es
mov
add
cld
mov
adc
stc
loopne
jo
rcll
pusha
adc
sbb
repnz
test
in
stc
aas
xor
lret
test
test
sbb
push
popf
sub
out
jb
imul
test
xor
sub
add
and
loope
mov
xor
mull
outsb
dec
imull
divb
push
rol
jnp
xlat
push
xchg
add
inc
jae
jbe
stos
xorb
scas
inc
xor
xchg
push
fsubrl
cmpsb
jecxz
fsubr
pop
or
pop
jb
mov
sub
xchg
dec
jae
push
push
movsb
mov
lods
xchg
out
jne
lret
lcall
ret
fsubs
aad
test
ret
orl
insl
and
test
test
hlt
test
xchg
pushf
pop
pop
mov
add
and
jmp
jmp
aad
je
add
fwait
push
ret
lahf
mov
mov
sub
scas
negl
je
mov
idivl
rcrb
ret
mov
mov
push
mov
sub
mov
mov
inc
fidivs
jge
xchg
aaa
lret
stos
add
xor
sub
sbb
or
aas
cwtl
mov
dec
fstl
fistps
ds
insl
fiaddl
xchg
push
mov
fistl
loopne
in
cmp
mov
sbb
jbe
stos
in
jecxz
js
inc
adc
xor
sub
fxch
hlt
lcall
adc
inc
lods
mov
xchg
es
jo
xchg
dec
scas
clc
cmp
mov
je
adc
sub
lea
push
jns
add
jp,pt
push
adc
xchg
in
fbld
addb
lret
cmp
shll
xchg
push
out
xor
and
lods
mov
imul
popa
mov
sub
in
shlb
adc
cmp
test
cld
sahf
and
fucomip
movl
pusha
adc
aam
lcall
loopne
jl
adc
cmp
push
push
popl
out
shll
inc
insl
daa
mov
adc
dec
lods
test
aas
push
and
jge
sub
push
fidivs
xorb
lods
mov
cltd
or
jns
sub
js
inc
outsl
and
lret
mov
or
push
lea
aad
shrl
cmp
push
fldcw
xor
push
mov
cld
ds
cmpsb
pop
cmp
mov
movl
in
subl
sbb
mov
test
adc
mov
mov
cs
mov
js
rcrb
jp
inc
push
push
pushl
pop
sarl
aaa
psubw
out
pusha
push
test
stos
jmp
je
out
add
cmp
stos
adc
or
js
push
add
shlb
or
inc
pop
fpatan
test
and
aaa
add
jnp
push
inc
pop
fisubrl
pop
sahf
pop
call
push
inc
movsb
loopne
incl
and
cmp
icebp
xlat
mov
out
dec
inc
cmp
push
push
or
ret
es
fisubl
sarb
jl
inc
cs
aad
pop
mov
jne
mov
outsb
orb
adc
and
or
jns
sbb
fs
movsb
out
mov
js
adc
call
or
lds
movsl
push
test
xchg
mov
bound
stos
lea
inc
adc
sbb
mov
ds
cwtl
add
dec
call
je
sar
and
mov
and
sbb
push
or
sbb
or
outsb
popa
aam
sub
faddl
inc
ror
fwait
repz
cmp
xchg
imul
out
arpl
mov
mov
and
mov
cmp
ja
xor
hlt
mov
movsb
push
lea
mov
mov
mov
sbb
mov
xchg
daa
cmp
dec
pop
mulb
or
btsl
jg
mov
mov
loopne
sahf
int3
adc
mov
pop
in
mov
test
fwait
or
push
xchg
pushf
sub
xchg
inc
mov
cmp
insl
adc
leave
inc
out
leave
cmc
add
adc
das
jbe
jb
std
fcomi
cmpsl
ficoms
mov
sbb
imul
outsb
sti
and
sbb
mov
adc
pop
sbb
popa
in
pop
idivl
or
fnstenv
cli
xor
pop
jb
inc
push
inc
add
arpl
mov
xchg
mov
cli
ja
in
aam
je
adc
mov
lock
xor
shlb
mov
mov
jne
out
add
sub
stc
hlt
cld
je
or
scas
pop
pop
sbb
push
and
out
xchg
enter
sahf
mov
xor
sbb
dec
xor
mov
xor
mov
push
dec
addb
repnz
icebp
shl
inc
and
sarb
xchg
ja
pop
mov
sti
sub
out
mov
xchg
pop
inc
fidivrl
sbb
sbb
mov
aaa
cmp
cmpsl
jp
xchg
lret
cmp
add
fidivrl
jae
and
in
jle
cmpsb
jp
cltd
jg
or
mov
push
jns
sub
mov
ret
jae
iret
push
insb
jns
mov
nop
test
inc
rolb
shrl
scas
sbb
xchg
addr16
in
pop
mov
fcomp
mov
xchg
push
push
push
leave
add
shrl
xchg
sahf
fsts
rol
fwait
jge
cmp
xchg
lock
jbe
cmpsb
repz
notl
jae
call
out
cmpsb
addr16
fidivs
adc
pusha
sub
or
mov
jae
and
sub
ret
int
push
pop
and
push
jae
push
mov
fistpl
in
push
out
insb
inc
pop
fcompl
in
xchg
adc
in
dec
cli
jmp
xor
insb
push
shll
sbb
les
testb
pop
xchg
fldt
sbbb
popf
ljmp
xchg
int3
sbb
jno
and
fdiv
push
cmc
adc
leave
cmp
push
adc
mov
dec
call
fwait
mov
sub
jg
mov
jbe
loope
out
mov
jns
fs
xlat
inc
jb
mov
add
mov
test
inc
lahf
sbb
ljmp
sarl
dec
sahf
ret
mov
mov
and
mov
dec
add
jmp
push
mov
pop
push
jl
in
adc
mulb
mov
dec
cmp
rorb
jl
cmp
pop
out
mov
test
imul
pushf
mov
push
pop
adcl
jecxz
xlat
sub
jns
inc
dec
cmp
xor
push
push
cmp
cli
imul
add
fdivrl
ror
dec
mov
sbb
je
inc
mov
lahf
sbb
xor
jbe
and
jecxz
mov
xchg
or
mov
mov
repnz
cwtl
rol
mov
sub
sub
xor
jge
push
rolb
popf
pop
cmpsb
add
jl
fcoms
jo
inc
cmp
daa
dec
in
mov
adc
adc
jns
jnp
mov
pushl
jecxz
add
adc
les
shlb
js
cmpsb
mov
js
lock
andl
cmovne
cltd
cmp
fwait
cmpsl
dec
push
or
add
push
fucomip
cmc
ret
aam
xchg
ret
cmp
cmp
clc
cmp
testl
cmpb
add
jmp
repnz
and
inc
lahf
push
mov
pop
in
ja
outsl
je
mov
les
jne
outsb
mov
daa
je
add
mov
cmpsb
push
loop
mov
xchg
pushf
shll
or
and
jne
add
lock
xor
add
pop
mov
out
or
pop
adc
mov
xchg
sub
mov
fadds
cmp
scas
mov
rolb
push
out
outsb
dec
cmp
adc
bound
sbb
ljmp
sbb
or
lea
fcompl
fs
push
jne
xlat
into
cli
push
pop
popf
jb
sbb
xlat
mov
mov
femms
mull
xor
and
outsl
xchg
stos
jae
mov
pop
in
sarl
rcl
int3
and
test
cmp
xor
cmp
daa
fcoml
and
dec
test
xchg
pop
and
mov
xchg
in
dec
xor
inc
repz
mov
push
icebp
not
fdiv
push
cld
ss
jnp
dec
xchg
pop
xor
sbb
les
fdivs
nop
cli
movsl
ljmp
insl
mov
loop
and
out
mov
in
in
adc
or
jge
inc
les
mulb
dec
lock
std
scas
fldl
adc
xor
iret
dec
enter
adc
jmp
and
add
arpl
sbb
ss
sub
gs
adc
pop
mov
inc
repz
lahf
and
cwtl
sbb
rcrl
xor
xor
bound
inc
mov
aad
pop
xchg
fstl
mov
push
mov
mov
and
daa
js
jo
sbb
clc
icebp
or
jno
cli
ficoms
sti
nop
mov
into
push
cmp
rep
lock
cs
imul
and
sti
into
arpl
pop
std
pop
out
jle
mov
fwait
mov
add
push
out
inc
decb
jns
fs
lcall
jmp
mov
cmp
sbb
jg
sub
mov
mov
inc
cmp
loop
fisubs
lods
jo
movsl
mov
inc
mov
cltd
icebp
jb
pop
sub
nop
pop
push
fsubrl
leave
std
sub
decl
and
sub
xor
cwtl
jmp
les
loope
jp
pusha
mov
iret
lea
pop
jg
xor
jecxz
shrl
stc
jnp
push
lahf
mov
jb
xor
xor
xchg
stc
clc
aam
jbe
add
push
xor
push
mov
pop
jp
scas
scas
push
jmp
adc
lods
hlt
adc
mov
call
and
jne
sbb
setno
fldt
ljmp
arpl
popl
pop
nop
cmp
clc
cmpsl
mov
sub
push
push
adc
faddl
cmp
insb
sbb
xchg
imull
daa
push
popf
pop
inc
xor
sub
push
or
cmp
aaa
rorl
pusha
inc
jl
adc
xor
mov
lock
ss
lret
cmp
pop
cmc
mov
stos
and
mov
adc
gs
cltd
mov
lahf
lea
enter
mov
inc
push
sub
push
push
mov
pop
xlat
pushf
xchg
push
insb
sbb
lret
bound
icebp
or
jge
aas
push
scas
sahf
scas
xor
cmp
sub
fadds
xor
jb
pop
mov
sub
shll
jmp
jmp
push
add
icebp
inc
pop
ja
adcb
es
addb
out
mov
test
stos
scas
pop
xchg
cmp
xor
je
aas
insb
je
lcall
rorl
mov
xchg
movsl
jbe
es
cwtl
inc
xor
cmp
mov
es
into
jae
mov
jl
aas
idiv
jp
add
stos
inc
xor
sbb
dec
xor
jp
inc
mov
dec
pusha
addr16
fmuls
jle
inc
movsb
push
push
mov
jmp
stos
cltd
push
rcll
push
imul
jg
add
mov
dec
nop
gs
cmp
lock
sub
add
add
sbb
push
pusha
inc
add
fisttpll
or
repnz
push
sahf
into
nop
xchg
mov
ret
and
jg
mov
cmp
jge
les
push
xchg
inc
mov
pop
jp
jne
rclb
or
jle
cld
xlat
push
mov
xor
stos
loopne
ss
push
aad
popf
adc
pusha
lock
notb
aas
insb
push
and
stc
xchg
mov
mov
call
call
xchg
aaa
into
sbb
push
xchg
call
test
dec
sahf
mov
fnstenv
stos
dec
repnz
es
mov
rolb
mov
jp
mov
ret
adc
scas
sbb
xchg
call
inc
stc
push
insb
mov
inc
xchg
inc
movups
loop
call
imul
insl
aam
pop
sbb
pop
nop
loopne
push
out
lds
push
repnz
xor
movsl
ss
sbbl
rcrb
push
xchg
addr16
in
hlt
cmp
repz
cs
mov
mov
js
xchg
jecxz
xchg
ja
ljmp
sbb
cmp
scas
jge
mov
sahf
js
xlat
jae
inc
fsubp
sti
gs
nop
icebp
lds
mov
out
lds
popf
fidivrl
dec
or
cli
cld
push
xor
adc
mov
mov
and
xchg
sub
ljmp
mov
xchg
xchg
andb
mov
hlt
mov
mov
ds
mov
sti
dec
cmpsl
jb
cmp
ficoms
and
js
je
loopnew
nop
shll
bound
jecxz
pop
arpl
add
inc
iret
xor
in
imul
dec
mov
xlat
js
or
xchg
int3
mov
mov
adc
rclb
pop
or
jmp
sbb
and
pop
inc
stc
rcrb
aam
fdivr
pop
fs
ja
daa
sbb
mov
in
mov
aad
mov
dec
sub
stos
or
jne
jb
inc
loop
insl
rcl
lds
scas
push
inc
clc
enter
cwtl
xchg
adc
pop
jmp
divb
push
dec
mov
adc
sbb
repz
adc
ljmp
pop
fisubrl
dec
fdivrl
arpl
hlt
xor
mov
inc
pop
or
mov
out
push
fmul
in
sbb
jbe
test
cli
mov
insl
in
daa
rorb
out
roll
cmp
sbb
cs
lock
out
stos
pop
icebp
popa
dec
into
add
cmpsb
pop
push
stos
nop
je
pop
add
push
popf
add
dec
xchg
cmc
jg
adc
pushf
sarl
mov
add
xchg
push
mov
cli
movsb
call
out
mov
mov
addr16
and
ljmp
ret
daa
and
xchg
add
and
aaa
inc
push
inc
mov
cmp
popa
pop
push
jecxz
or
ljmp
sbb
sub
fwait
popa
movsl
test
add
sub
aam
mov
add
jnp,pt
mov
xchg
stc
xchg
mull
aas
dec
xchg
push
movsb
or
mov
jno
ja
rolb
outsl
sub
ret
mov
lret
mov
outsl
inc
mov
sbb
xchg
sub
mov
popa
adc
aas
mov
add
mov
dec
pop
push
mov
imul
je
xchg
mov
xor
stos
mov
adc
sbb
repnz
cmp
ss
cli
cmpsb
mov
imul
push
into
in
xchg
dec
pop
xchg
fisttps
into
sbb
inc
mov
cmp
in
sbb
sbb
jle
lods
and
xor
and
outsl
das
addl
insl
mov
fwait
add
mov
mov
and
push
mov
jp
mov
sbb
loope
iret
sub
pop
divl
mov
pushf
and
mov
cmc
lret
int
push
cwtl
sub
fsts
hlt
call
xor
sahf
or
xor
stc
and
cmc
es
mov
int
adc
pusha
inc
jmp
xchg
xchg
push
and
test
adc
and
pop
mov
mov
arpl
push
mov
iret
jmp
cld
mull
lahf
stos
xchg
jb
sbb
inc
and
xchg
push
les
sti
xor
sbb
xor
rolb
xchg
xor
das
cld
movl
sahf
dec
in
lock
jae
push
roll
addr16
scas
mov
negl
cli
data16
mov
pop
mov
push
or
pop
xor
xchg
xorl
aaa
incl
or
bound
fdivs
xchg
movsl
popf
mov
push
rclb
xlat
pop
dec
js
mov
aam
push
cltd
pushl
or
jns
fcmovnbe
mov
mov
jecxz
inc
popf
into
pop
std
stos
sub
inc
mov
xor
sub
mov
aaa
mov
lahf
dec
jmp
ret
xchg
or
mov
imul
jecxz
push
cmpsl
lahf
jae
adc
dec
out
or
jmp
leave
push
movsl
clc
jle
push
xchg
push
xchg
arpl
and
fcompl
jae
gs
scas
js
push
mov
out
pop
sbb
dec
sbb
jecxz
inc
dec
movsb
sbb
mov
inc
mov
sbb
push
jmp
mov
in
imul
fwait
pop
repnz
repnz
ret
add
inc
and
int
and
or
das
or
inc
aad
out
add
cmp
xor
imul
jmp
mov
lcall
inc
iret
insb
pop
or
or
das
jns
test
stc
cmp
sbb
lret
sbb
stos
arpl
inc
push
orl
enter
or
pop
mov
fsts
xlat
jno
mov
pop
test
jns
push
shl
decl
in
pushf
cmp
xchg
inc
mov
test
cmpsb
pop
pop
fidivs
sbb
loopne
test
test
and
mov
jl
idiv
xchg
jns
jb
punpcklwd
xchg
test
sbb
shlb
push
xor
add
outsb
in
mov
insb
adc
dec
mov
fs
pop
arpl
mov
xchg
cs
out
push
pop
lea
inc
cli
and
insb
mov
mov
xor
in
dec
and
fwait
sbb
ss
aaa
dec
mov
cmp
jge
in
popa
repnz
jl
push
movsl
test
cmpsl
cs
adc
jb
and
fisubs
xor
fmull
in
imul
jmp
clc
add
pusha
loope
xor
cmp
sbb
push
dec
bound
inc
and
xchg
push
sub
xor
jg
imul
insb
out
and
lods
fwait
jecxz
cld
sub
hlt
push
out
mov
adc
andb
mov
das
pusha
sarl
push
arpl
jg
add
cmpsb
call
push
aad
js
xor
sub
push
fsubr
clc
pop
or
daa
mov
int3
mov
jp
xchg
jno
sub
popf
jb
call
aam
sarl
lds
mov
jle
gs
mov
mov
test
es
aaa
test
mov
jno
mov
xchg
push
out
jle
mov
adc
int3
jns
dec
repz
jb
push
fists
loope
xor
and
inc
jns
repz
fnstenv
mov
adc
aas
mov
call
sub
push
jmp
inc
pop
push
inc
mov
xor
aas
into
loopne
shlb
pop
push
adc
aas
xor
xchg
fistl
cwtl
adc
dec
hlt
inc
pop
adc
push
mov
jno
movsb
into
rep
inc
enter
pop
test
or
and
xchg
pop
push
sti
or
add
push
adc
add
rorl
xchg
cmpl
je
adc
push
adc
fisubrs
push
int
pop
adc
xchg
sub
addr16
sbb
lret
or
loopne
push
inc
mov
push
pop
jo
xchg
push
push
cmpb
inc
xchg
inc
cmpsb
pop
movsl
add
stc
pop
pop
jbe
ss
sbb
mov
jmp
mov
int
std
fisubs
cli
xchg
addr16
push
cwtl
test
js
push
sub
popa
leave
adc
inc
inc
mov
cmp
ljmp
sub
lods
mov
pop
outsl
sub
rcrb
data16
rclb
in
das
shrl
popl
in
repnz
pop
mov
test
rcl
cmp
inc
lret
stos
movsl
mov
dec
arpl
xor
jmp
cwtl
in
jp
shlb
ljmp
pop
push
test
or
lods
pusha
pop
inc
jne
test
inc
pop
xor
dec
push
bound
loopne
mov
nop
xor
rol
cmp
pop
stos
xor
insl
pop
or
add
fcompl
add
jmp
idivb
xchg
daa
fisttpll
push
xchg
shl
fdivl
cmpsb
push
and
xchg
xor
ljmp
lcall
pushf
in
pop
mov
jmp
jle
test
shll
cmp
cmp
mov
call
data16
clc
pop
inc
scas
adc
inc
pop
adc
lods
adc
fdivl
and
scas
jo
std
aaa
cld
ljmp
dec
in
mov
mov
xor
sahf
sbb
fnstenv
sbb
sub
sub
lcall
jg
push
pop
inc
int3
fisttpll
xchg
jo
push
iret
loope
mov
shlb
pop
fwait
xchg
xchg
inc
cmp
test
aad
and
mov
es
or
inc
ja
into
bsf
sti
rol
jp
cld
hlt
sbb
in
loop
pop
push
movsb
and
mov
filds
xchg
inc
jb
cs
push
sbb
dec
push
push
not
push
ret
inc
push
pop
lea
scas
add
int3
push
aas
adc
and
push
sub
das
das
scas
sub
fists
cmpl
dec
inc
sbb
inc
aaa
out
mov
insl
cmp
mov
pop
jle
imulb
dec
mov
adc
enter
das
xor
sbb
in
stos
pop
dec
jbe
jb
mov
cmc
dec
loop
jns
adc
add
sub
int3
fldl
cmpsl
jge
out
mulb
pop
outsb
cmp
pop
bound
scas
out
aad
bound
jl
mov
outsl
dec
stos
jmp
mov
inc
sbb
lods
xchg
dec
sbb
cs
mov
jnp
sbb
push
xchg
push
loopne
das
cmp
xchg
fnsave
mov
faddl
jo
sub
mov
cmp
push
popa
mov
mov
mov
test
lret
inc
enter
pop
leave
stos
gs
adc
scas
inc
inc
pop
pop
pushf
push
push
mov
stc
pop
dec
cmpsl
fdivs
jbe
fs
aad
mov
fldcw
dec
mov
add
mov
int
incb
inc
ljmp
adc
leave
xchg
jo
push
add
push
mov
ljmp
sbb
jo
sub
jns
fs
dec
cmp
mov
pop
sahf
push
lds
outsb
lahf
push
int
movb
repnz
int3
int
mov
add
mov
sbb
pop
jbe
fmul
cmc
jbe
cmp
stos
dec
add
push
cltd
hlt
addl
pop
or
fidivs
sbb
and
xchg
divb
cmc
adc
cld
or
scas
pop
into
sarl
fistpl
jle
dec
xchg
imul
lea
push
scas
retw
mov
lea
fcomi
adc
mov
mov
mov
in
sub
idiv
fbld
push
mov
mov
lcall
fisubrs
addr16
sbb
stc
inc
nop
and
and
adc
and
xchg
jle
pop
mov
std
sbbl
push
add
sub
sub
shll
mov
js
mov
outsb
sbb
lcall
sub
pop
cltd
jbe
push
sti
dec
jno
sub
aaa
sub
sbb
movsl
inc
ljmp
addb
jle
mov
sub
cmp
mov
adc
pop
push
fistpll
ret
je
aam
mov
mov
push
and
add
push
in
cli
jge
mov
inc
push
dec
push
jle
js
and
repz
jecxz
aam
push
ds
rclb
mov
sahf
shlb
jo,pt
pop
ret
jo
aas
jmp
mov
mov
xor
subb
add
jecxz
stos
sarl
mov
xchg
insl
negb
push
sahf
je
rcl
inc
sahf
pop
adc
shlb
jmp
xchg
pop
ret
add
mov
xchg
push
icebp
jecxz
add
mov
mov
mov
cmpsl
loopne
iret
fcmovnbe
in
fwait
lea
cmp
fisttpl
int
popf
cmpsl
jno
shr
out
clc
push
pop
pop
cmp
ljmp
aam
pop
cmp
loopne
or
arpl
std
test
add
pop
stos
cmp
lods
mov
pop
mov
and
cmp
out
or
or
jne
sti
sub
std
pop
mov
lds
movsb
shll
stc
insl
add
sbb
sbb
aam
xor
out
xchg
push
xor
inc
js
xchg
decl
mov
mov
inc
outsb
dec
xor
dec
cmp
mov
stos
data16
repz
mov
jae
cmpsl
pop
cmpb
cli
outsb
adc
dec
fiaddl
addr16
leave
lret
mov
cmpsb
test
out
add
aas
popf
adc
fadd
add
mov
inc
scas
push
pop
cli
xor
xchg
push
inc
mov
xor
add
dec
adc
bound
xchg
pop
xor
xor
xchg
lcall
fiaddl
sbb
insl
lret
loop
cld
or
in
pop
rcr
push
mov
test
orl
xchg
es
loope
or
fdivrl
test
lods
ss
outsb
in
fiaddl
push
xchg
scas
shrl
mov
jne
in
jl
movl
push
or
pop
pop
sub
jno
adcl
jns
adc
add
sub
shlb
cmp
sbb
fmuls
inc
dec
cli
add
ss
push
bswap
adc
inc
ficompl
int3
je
or
cmp
ficoms
cltd
jp
mov
imul
es
in
sahf
fdivrl
sbb
ss
and
pop
imul
rcrb
adc
test
mov
movsb
mov
out
sar
aad
sub
mov
or
add
push
xchg
adc
mov
and
das
leave
cwtl
or
insl
imul
movsl
loop
test
ret
and
fcomi
push
cmp
push
rorl
sub
jg
and
mov
test
dec
mov
sub
ljmp
xor
pop
jne
jge
outsb
and
call
jl
ss
popf
inc
fidivrs
repnz
inc
loope
out
jnp
mov
lock
dec
popf
out
pop
mov
ret
movsb
out
pusha
jge
sub
test
cli
aam
stc
lds
les
jl
sub
test
sub
loopne
sbb
push
push
mov
adc
mov
inc
dec
repnz
fidivrs
popa
mov
push
cmp
in
sub
jb
out
imul
enter
imul
pop
test
sbb
push
jne
mov
movsl
push
sbb
push
loope
orb
push
addr16
mov
lret
mov
lea
mov
insb
dec
daa
divb
adc
adc
rol
adcb
stc
sbb
call
cli
loopne
cmc
push
cmp
mov
ljmp
sbb
mov
out
out
pop
add
push
scas
fstl
jns
je
out
test
lcall
push
push
or
add
shrl
outsb
pop
cmp
or
fdivs
xor
in
mov
ret
push
adc
sub
std
fdivrl
pop
xchg
rclb
mov
out
das
mov
lret
push
lock
pop
jbe
inc
adc
pushf
imul
mov
mov
leave
mov
scas
loop
inc
pop
into
xor
cmp
clc
lahf
inc
cmp
dec
mov
push
sub
mov
mov
cmp
xchg
jnp
xor
dec
lods
add
fisubrl
adc
mov
xor
jo
adc
jmp
adc
popf
inc
repnz
sub
or
insl
and
dec
sbb
xor
mov
mov
adc
js
inc
jl
dec
mov
js
mov
mov
jecxz
call
adc
jp
xchg
xor
sub
gs
inc
test
mov
xchg
dec
mov
call
adc
fsubp
mov
mov
shl
and
rorb
xchg
enter
icebp
js
lds
dec
cmp
mov
test
into
icebp
loopne
test
idivl
mov
ret
lods
sbb
aas
dec
scas
mov
ret
addr16
pop
add
in
out
jbe
xchg
inc
pop
and
xor
rcr
dec
loope
add
aad
mov
cmp
xchg
fidivs
pop
push
inc
add
and
xor
cltd
fwait
xchg
and
dec
mov
mov
xlat
adc
gs
fidivs
xchg
shrb
das
jmp
int3
mov
in
sbb
push
inc
aaa
mov
xchg
mov
out
adc
xor
mov
xor
add
inc
daa
cmp
cmpsl
call
sahf
lods
fstps
xchg
cli
jbe
fs
repnz
sahf
sahf
js
jnp
mul
fildll
adc
push
adc
outsl
cmpsb
insb
adc
mov
pushl
and
pushf
jl
int
fbld
pop
xor
in
or
sti
mov
fs
pop
out
int
cmp
call
mov
and
jbe
push
pop
iret
popa
jmp
mov
dec
and
lock
lcall
adc
push
cwtl
dec
insb
or
mov
sbb
dec
inc
mov
jl
lock
movsl
jl
bound
add
test
sbb
call
repnz
or
mov
aas
ds
cmp
mov
pop
push
inc
add
sbb
jnp
jne
test
mov
add
int
jno
mov
sbb
sahf
js
sarb
aas
jecxz
insb
push
lods
push
bound
ljmp
mov
dec
jmp
jle
and
sbb
lret
xor
adc
adc
mov
fdivr
adc
or
es
jle
roll
into
popa
out
xor
add
mov
lret
mov
mov
xchg
sahf
adc
or
fwait
aas
dec
mov
cmp
or
sbb
push
mov
cmp
out
lret
sbb
mov
mov
leave
add
fs
push
bound
push
inc
push
dec
xchg
lea
mov
add
pop
lret
pushf
cli
mul
ds
mov
mov
or
or
push
imul
bound
stc
popa
arpl
dec
faddp
cli
movsb
popf
add
inc
fisubrl
lcall
mov
and
ds
mov
pop
xchg
iret
or
lods
std
add
fwait
mov
sbb
mov
xlat
repz
in
xchg
push
mov
pushf
ljmp
cmp
inc
aam
mov
pop
mov
ret
xchg
mov
arpl
push
jmp
pop
add
ds
les
mov
out
mov
cmpsl
cmp
sub
mov
call
out
mov
dec
jmp
or
es
aaa
mov
dec
push
mov
int
jb
lea
xchg
or
pop
jae
add
sbb
testl
jp
dec
add
cmp
cmp
popa
rol
sbb
repz
in
fwait
jge
mov
lods
xchg
pop
xchg
lret
mov
push
sub
dec
fldcw
add
push
sbb
sub
repnz
fwait
and
xchg
ror
stc
mov
jb
shrl
icebp
push
sub
jmp
in
es
adc
push
testl
popf
gs
add
out
fidivrs
or
insb
pusha
push
mov
jl
decl
loope
jnp
mov
push
in
es
fimuls
pop
lock
inc
jb
enter
lods
into
jp
clc
push
outsb
iret
shl
adc
repz
leave
pusha
outsb
inc
gs
pusha
pusha
push
hlt
jae
cmp
nop
xchg
addr16
pop
mov
bound
or
in
xchg
push
pop
fstps
lock
mov
mov
pop
mov
pop
andb
dec
mov
leave
outsl
cld
shl
int3
jge
ljmp
xor
popf
dec
loope
jge
jo
shlb
inc
testb
inc
fcmovnu
cmpsl
sub
std
std
push
push
xor
mov
mov
add
in
xchg
bound
mov
fdivr
leave
addr16
jbe
in
add
testb
dec
repnz
fidivrs
jo
sub
xchg
js
shl
fildll
xor
add
jle
aad
jbe
dec
xchg
mov
sti
pop
cmpb
xchg
jae
popa
ss
in
mov
cmp
lret
mov
add
jae
add
shlb
pop
fsubl
ljmp
push
icebp
push
lahf
stos
pop
cltd
sub
sbb
jecxz
xlat
cwtl
inc
push
jae
xor
movsl
std
pop
push
aas
insb
add
lahf
dec
cwtl
test
adc
xchg
insl
xor
pop
fistl
push
xlat
xchg
cld
addb
cmp
mov
jle
scas
cmp
fdivp
test
fmull
push
add
aas
jmp
mov
xchg
mov
roll
xchg
xor
mov
test
stos
js
add
adc
pop
pusha
loop
push
sub
fcoms
and
jl
ja
jns
lods
push
xchg
das
push
out
push
xor
and
or
mov
inc
xor
jnp
addr16
rcr
adc
sbb
shrl
cli
rcrb
xchg
inc
cmp
pop
movsl
jo
addr16
mov
scas
loop
popa
jge
mov
adc
into
fiaddl
sub
mov
push
mov
cmpsb
xchg
dec
bound
push
daa
pop
push
pop
and
mov
push
adc
or
inc
fnsave
int
mov
jo
jno
pop
and
xorb
adc
mov
sbb
push
or
les
push
and
repnz
mov
test
cmp
cltd
cmc
push
mov
andl
ljmp
jg
adc
cltd
or
cmc
adcl
jb
xor
mov
push
popa
data16
mov
push
mov
mov
mov
pop
adc
sbb
adc
lret
out
mov
xor
andb
ja
dec
cmpsl
or
xor
mov
shrl
icebp
mov
xor
aam
jbe
into
aad
jne
popf
fwait
shlb
cmp
inc
jmp
and
sbb
not
mov
push
subb
lods
lret
or
xchg
jle
jnp
push
push
xchg
loope
int
mov
int3
mov
jns
xchg
xchg
mov
outsb
push
rolb
pop
int3
loopne
fsubr
js
sbb
dec
sub
rclb
inc
fs
jp
mov
push
push
xchg
xor
sub
fcmovb
ficompl
and
jnp
and
jl
aad
dec
jge
mov
stos
int3
fdivl
lock
in
ja
in
movb
sbbb
scas
xor
jbe
mov
test
setle
pop
stc
lock
lret
pop
push
jne
insl
shll
mov
fwait
xchg
mov
mov
stos
jno
popa
pop
iret
xchg
outsl
mov
pop
test
call
pop
mov
mov
rorb
and
movsb
push
fistps
mov
adc
popa
in
mov
add
cmp
cli
adc
notl
pusha
imul
dec
in
fidivrs
aas
push
insl
stos
shlb
dec
fcomp
adc
dec
icebp
ret
inc
push
data16
shrb
popf
sub
sbb
scas
test
jge
add
popa
xor
aaa
push
or
enter
ret
pop
inc
jge
test
pop
push
inc
mov
lcall
push
daa
lcall
leave
push
sub
into
sbb
inc
mov
ljmp
push
cld
pop
divl
ret
dec
js
jecxz
fsubrp
inc
adc
and
xor
sbb
sti
ffree
clc
or
lret
jb
ret
xchg
je
xor
cmpsl
xor
enter
fldcw
pop
repz
cs
xor
cmpsl
in
flds
std
cs
mov
je
fnstsw
push
jbe
cltd
mov
in
cmpsb
and
jno
mov
sub
dec
mov
fcom
pop
jg
leave
arpl
adc
sti
push
add
fwait
xor
push
inc
fisubrl
cld
push
push
push
shll
dec
imul
lea
sbb
mov
lock
cmc
mov
iret
xchg
cmp
xchg
andl
xlat
add
fadd
adcl
sub
push
repnz
popa
jecxz
or
lret
mov
mov
addr16
mov
add
iret
sbbb
cwtl
push
filds
jg
hlt
dec
sbb
xchg
lret
fdivr
jecxz
dec
cld
add
adc
mov
popa
sub
jb
and
pop
aad
adc
lock
inc
int
inc
jbe
push
insb
add
mov
push
mov
or
dec
int3
pushf
sub
mov
pop
push
sahf
lret
adc
inc
ljmp
sbb
push
imul
add
es
push
sub
sbb
lret
call
out
ret
bound
call
dec
add
mov
push
cmpsb
pop
aaa
out
and
xchg
push
jmp
xor
push
daa
ds
in
ljmp
mov
adc
cmp
clc
push
mov
in
cmpsl
inc
xchg
inc
add
into
xchg
call
testb
mov
dec
add
push
ret
pop
xchg
cmp
or
xchg
and
neg
mov
mov
dec
jo
fs
sbb
mov
xor
repnz
das
or
test
push
std
std
lret
sub
mov
rcll
dec
jmp
inc
sbb
jecxz
stos
mov
mov
or
mov
ja
and
gs
mov
push
jae
add
addr16
push
test
jne
sti
mov
mov
fsubrl
repnz
inc
mov
jo
fstpl
sbb
xchg
dec
rorl
cmp
test
in
mov
aas
shlb
push
ljmp
and
push
lock
dec
mov
shrb
mov
add
adc
ficoml
test
sub
repnz
add
jmp
dec
cmp
xchg
inc
popf
sub
push
push
scas
pop
lcall
rcrl
fsubrl
or
ss
filds
push
hlt
dec
add
adc
cmpsb
test
mov
je
sbb
js
cmp
mov
into
inc
fdivrl
jno
int3
in
lahf
mov
sbb
int3
or
sub
mov
sbb
mov
or
lods
xor
mov
cli
je
push
jno
jne
lret
out
sahf
jns
femms
gs
insl
push
jbe
push
into
lcall
sbb
cmp
cmp
adc
jbe
mov
aaa
jl
gs
cltd
js
subl
loop
je
mov
xchg
add
ror
orl
cwtl
das
iret
xor
je
movsl
iret
dec
xchg
adc
fwait
in
arpl
dec
or
mov
jbe
mov
push
lock
ss
mov
fs
mov
lcall
push
push
mov
repnz
push
jno
daa
fisttps
inc
push
xor
mov
dec
xchg
dec
or
fmuls
inc
pop
inc
addl
repz
cmp
jmp
or
test
mov
sbb
add
filds
sbb
or
icebp
shrb
lret
pxor
inc
xlat
loopne
adc
mov
into
rclb
test
addr16
ud0
mov
add
scas
pop
ficomps
mov
jne
mull
test
test
lods
ja
add
rcl
push
cmp
cwtl
xchg
inc
mov
loop
and
test
lahf
jl
inc
pop
test
loopne
mov
adcb
pop
out
cmp
nop
mov
jl
cmp
push
lret
add
imul
adc
sub
pop
or
and
xchg
in
data16
ja
mov
or
enter
mov
in
mov
mov
lods
cmc
push
out
pop
leave
les
cmp
mov
inc
or
mov
pop
test
cmp
push
cmpsl
das
sub
mov
and
test
aaa
push
sbbb
daa
insb
jg
dec
jl
ja
jb
mull
dec
xchg
inc
xchg
adc
mov
aas
jnp
pop
insl
jg,pt
and
xor
jmp
out
and
mov
inc
pop
adc
cmpsb
icebp
dec
sbbb
mov
xor
mov
fwait
inc
bound
arpl
inc
push
cmp
stc
sbb
insl
js
divb
cmp
and
jns
jo
bound
adc
mov
imulb
dec
cmp
adc
adc
adc
aad
lods
scas
dec
xchg
jns
es
loopne
and
jne
pop
dec
fildll
pop
jae
das
repz
pop
jb
pop
mov
cmp
orl
mov
cmp
lcall
outsb
push
mov
outsl
mov
inc
jp
mov
ja
je
inc
mov
jno
lds
add
or
or
sub
jle
jmp
inc
into
adc
in
cmpsb
decb
mov
dec
push
xchg
jl
add
push
push
aad
mov
into
sarl
sub
movb
push
and
out
orb
cmp
orl
mov
lret
movsl
imul
mov
call
jae
pop
sub
loopne
sub
add
push
jno
xor
sub
fidivs
jns
cltd
jmp
dec
jne
mov
loop
mov
movsb
pop
push
dec
lea
stos
pop
mov
mull
scas
xor
xchg
mov
repnz
pop
into
ficoml
xor
jb
push
xlat
push
jecxz
fldt
xor
sub
adc
mov
in
fcompl
add
test
bnd
out
fwait
call
or
ret
mov
or
data16
lds
icebp
cli
xchg
or
es
imul
insl
int
dec
sub
jae
or
xor
sbb
mov
ret
iret
aas
ljmp
cmpsb
test
std
or
mov
and
jl
ret
ficomps
xlat
jg
jmp
mov
clc
and
xchg
jmp
pusha
aas
xchg
cmp
in
in
out
and
jmp
scas
fs
and
mov
mov
sub
aas
outsb
icebp
pusha
repz
sbb
xchg
add
fbld
push
mov
sbb
xor
push
xor
push
lds
push
aas
mov
orb
cli
and
stc
or
adc
inc
pop
nop
push
ret
jb
fcomps
mov
add
inc
cli
mov
shl
aam
xchg
int3
push
jno
in
les
or
into
iret
inc
mov
mov
out
popf
lea
and
int3
add
adc
xor
xchg
addl
out
and
xchg
sar
ljmp
push
in
inc
ss
enter
pop
jge
mov
or
pop
inc
inc
lock
loopne
sbbb
popa
add
les
dec
loopne
and
pushf
pop
ja
shlb
push
xchg
enter
inc
mov
idivl
adc
lret
test
sti
lcall
test
cmp
adc
sahf
jae
cld
rorl
or
mov
push
out
cld
fwait
xor
pop
jle
cmp
cmp
jo
sub
sub
data16
shll
lcall
arpl
sbb
xor
movsl
fidivs
sbb
adc
popf
test
dec
loopne
sub
pop
fcompl
insl
mov
add
divb
js
fnsave
aam
sbb
mov
loopne
mov
and
notl
and
push
jno
lret
call
testb
pusha
shrl
push
xchg
hlt
sbb
lahf
lea
fildl
sbb
sub
stos
mov
bswap
jge
sub
fimuls
mov
scas
mov
push
push
or
mov
sub
ja
mov
cmp
mov
xchg
subb
into
mov
sub
repnz
out
mov
movsb
adc
enter
xor
lcall
mov
insl
xorl
jne
pusha
sub
jl
lahf
add
pop
inc
shlb
addr16
test
hlt
mov
in
adc
clc
xchg
xchg
sub
jmp
mov
mov
arpl
in
testb
es
loop
icebp
out
dec
mov
addr16
add
pop
cli
lds
out
popf
and
pop
ret
mov
test
scas
hlt
out
or
sub
ljmp
int
ror
enter
movsl
sahf
mov
cld
filds
pushf
test
cli
xchg
pop
popf
or
cmpsl
std
or
cmp
mov
aas
jmp
jecxz
sub
mov
in
push
adc
adc
test
pop
repnz
mov
dec
pop
push
ss
sub
adc
pushf
push
stos
pop
sbb
pop
leave
out
fisttpll
mov
sub
ja
pop
inc
jecxz
cltd
scas
dec
fisttpl
xlat
xchg
aaa
repnz
mov
arpl
or
aam
repz
aam
mov
movsb
and
in
or
mov
lods
sub
negb
negl
daa
sti
mov
shrl
sub
mov
mov
sahf
mov
pop
xchg
jne
xchg
jmp
push
dec
jo
cmc
mov
dec
add
push
test
mov
in
or
outsl
xchg
mov
arpl
test
sarb
iret
mov
nop
jns
sbb
cld
enter
push
inc
add
aaa
jbe
fnsave
mov
mov
jbe
fs
jno
fwait
mov
jnp
mov
pop
jp
ljmp
jbe
jb
dec
xor
out
push
fdivrl
pop
cmp
or
orl
sbb
xorb
sarb
sbb
pop
in
xlat
jmp
jmp
hlt
sub
stos
movb
lahf
orb
pusha
aaa
inc
jecxz
adc
mov
xor
add
sbb
stos
cmp
fwait
daa
push
add
mov
xor
pop
pushf
inc
cmp
shrl
and
pop
dec
and
sub
popf
mov
ljmpw
mov
adc
dec
and
sbb
fimuls
int3
adc
jo
rorb
xor
xor
imul
push
xchg
test
xor
sti
push
stos
xor
lods
jne
dec
jp
push
addr16
cmp
lds
pop
sbbb
push
mov
outsb
stos
lahf
xchg
mov
cmp
sbb
fdivrs
jmp
gs
hlt
sbb
mov
stc
inc
pop
jne
sub
ret
mov
sub
mov
push
les
pusha
bound
stc
or
in
mov
mov
test
cld
in
mov
mov
pop
idiv
dec
xchg
cld
fadds
adc
push
testb
inc
es
adc
outsb
inc
adc
xabort
jecxz
cld
cmp
int3
add
push
mov
jecxz
mov
inc
xchg
xchg
dec
push
xor
pop
lcall
movsl
scas
in
fisubrs
push
fldcw
inc
imul
int
adc
adc
pop
imul
out
adc
sbb
out
ficomps
xlat
inc
loopne
loop
jp
ficoml
scas
inc
mov
jnp
shrl
cmp
jp
sub
imul
fstpl
ret
cli
in
mov
sub
xchg
mov
push
adc
divl
rorl
inc
pop
scas
popf
jno
cmpsl
adcb
adc
jl
in
test
jns
jecxz
cwtl
negl
test
xchg
popf
lea
fdivp
pop
adc
xchg
cmp
sbb
inc
je
out
inc
push
std
dec
fmull
jecxz
lock
dec
dec
or
mov
inc
fbld
movsb
lcall
loope
rcl
mov
imul
cmp
pop
push
pop
and
or
mov
insl
enter
lahf
test
movsl
adcl
xor
mov
xchg
and
nop
adc
cmp
xchg
fdivrs
sub
les
scas
gs
jle
daa
xor
sbb
dec
sbb
add
push
mov
ret
xor
or
outsb
aam
mov
sub
or
dec
push
pop
mov
inc
gs
dec
mov
aad
xlat
and
mov
cmp
fists
xor
notl
aam
cwtl
iret
leave
int3
push
add
outsb
aas
mov
hlt
pop
lcall
pushf
inc
fcoml
stos
fisubrl
les
mov
mov
lea
les
push
fcomps
rorl
pop
mov
dec
dec
mov
fdivl
fs
cmp
fs
inc
adc
outsl
outsw
rcr
pop
addb
dec
mov
clc
test
mov
sub
push
push
out
cmp
xchg
pop
fidivrl
sbb
add
push
push
cmpsl
jb
push
fldt
aad
movhps
lcall
inc
push
and
jbe
adc
icebp
xor
mov
xor
or
cmp
or
insl
dec
mov
xlat
cmp
bound
inc
ret
sbb
gs
int3
jae
cmp
mov
dec
imul
mov
lret
fdivl
movsl
movsb
shl
inc
test
push
xchg
icebp
insb
push
das
int
and
dec
xor
clc
sbb
mov
sub
ljmp
sbb
push
aas
out
add
xchg
jb
lahf
imul
jecxz
push
out
push
dec
outsl
aad
jg
add
ds
mov
pop
rcrb
cmp
dec
test
mov
sbb
push
out
inc
clc
imul
xchg
arpl
negb
sbb
outsb
addr16
adc
jge
mov
out
negb
fbstp
ret
mov
sbb
insl
push
and
popa
mov
lds
sbb
jmp
mov
popl
cmc
das
sbb
mov
mov
or
daa
outsb
and
mov
mulb
into
lahf
mov
cld
jmp
icebp
lcall
inc
in
jb
ret
xor
dec
aam
jmp
and
jmp
cmp
dec
dec
push
test
xorb
outsb
ret
cmp
repz
jnp
dec
push
cwtl
sub
outsb
imul
sbb
pushf
inc
jne
push
xlat
and
push
insb
push
es
mov
xchg
xlat
inc
xchg
xlat
stos
imul
fsubp
cltd
stos
lret
cmp
xchg
sbb
sub
dec
jo
shl
xlat
adc
sbb
inc
sbb
pushf
mov
inc
shrb
shlb
popa
mov
xchg
sub
push
fistpll
fbstp
inc
jl
loope
jne
lods
in
std
lock
data16
jmp
daa
jge
cli
mov
pusha
ss
sub
mov
movsl
faddl
sbbl
push
xchg
je
fwait
mov
adc
lea
insb
xchg
test
call
mov
xlat
aaa
jne
popa
dec
rolb
or
imul
cmp
push
sub
xor
ds
test
rcl
pop
sbb
mov
mov
mov
lock
pop
push
jno
imul
push
mov
loopne
mov
imul
push
add
cmp
xor
push
pop
or
fstpl
imul
xor
lcall
test
pop
lds
pusha
lds
xchg
or
aas
cmpsl
cmp
in
es
enter
loope
or
and
fcom
fbstp
push
dec
nop
sar
pop
mov
xor
mov
dec
into
outsl
rcr
test
xor
and
repz
jmp
sbb
xlat
push
gs
loope
pop
leave
xchg
icebp
add
adc
push
pop
insl
xor
movsb
lds
fldl
mov
mov
or
push
lods
test
mov
call
and
mov
and
adcl
popf
inc
cwtl
test
mov
out
aaa
cmpsl
and
repz
lock
push
mov
add
cmp
popa
or
sub
clc
in
jle
inc
loope
mov
mov
xor
ror
bound
gs
sbb
repnz
adc
xor
jbe
sbb
or
loop
or
out
jge
mov
rcl
fsubrl
push
adc
mov
das
xchg
ja
cmc
loop
ret
inc
fbld
sbb
pushf
aas
mov
clc
call
ficoml
cmpsl
gs
aad
scas
test
jmp
push
call
mov
adc
xor
iret
loop
add
aas
sub
or
xchg
cltd
aas
divb
sub
and
sahf
rclb
cwtl
mov
lret
repz
in
leave
lret
in
dec
and
push
shrb
adc
outsb
push
nop
sti
pop
pop
xchg
add
mov
mov
lcall
jo
es
add
stc
hlt
clc
ds
outsl
fwait
out
cs
dec
orb
int
ret
pop
mov
jecxz
mov
cmp
aam
push
jb
inc
test
jecxz
test
scas
stc
filds
add
leave
fiaddl
mov
add
and
xor
inc
dec
pop
repz
std
nop
and
and
sahf
fwait
nop
adcb
bound
movsb
aaa
pushf
cmp
pop
sahf
mov
xchg
or
mov
jns
in
sub
mulb
inc
pop
leave
cmpsl
orl
cmp
pop
push
outsl
insl
push
ret
mov
adc
inc
testl
sbb
xchg
cmp
push
inc
outsb
mov
fxch
push
fisttpl
sub
out
ljmp
push
push
mov
popf
xor
mov
cmp
scas
sub
fstp
pop
and
cmc
push
sbb
addr16
mov
lcall
and
mov
mov
and
ds
inc
sbb
andb
xchg
mov
dec
push
in
into
mov
sbb
lret
jne
cmp
icebp
pop
mov
popa
mov
lea
xchg
dec
jmp
jmp
mov
adc
xor
mov
push
in
repz
cmp
leave
loopne
sub
inc
mov
push
negb
adc
shlb
sbb
pop
repnz
rcpps
and
jne
sub
push
sub
push
sbb
ret
mov
xor
lcall
daa
dec
inc
inc
jbe
push
ror
subb
adc
add
sbb
mov
stc
cmp
fs
mov
jns
mov
xchg
call
bound
fnstsw
mov
ljmp
cltd
test
ds
sbb
mov
mov
or
xor
int
xchg
pop
sarb
dec
sub
imul
shr
dec
mov
shl
sbb
xchg
and
in
xchg
dec
add
inc
jns
jae
jg
mov
lret
fisubrs
mov
aas
sub
loop
pop
cmp
hlt
sub
jmp
mov
mov
das
rcrb
jg
cmp
xor
fdivr
jbe
test
stc
adc
cmp
popa
add
pop
lds
push
cld
add
je
clc
sub
scas
mov
mov
jecxz
lea
sti
dec
fmull
sbb
sbb
insl
adcl
inc
insb
mov
sti
jl
aaa
loop
in
push
sbb
enter
jnp
imul
das
lock
mov
stc
lods
loopne
cmpsl
fdiv
cmpsb
shrl
jle
cmp
mov
push
jo
jbe
adc
push
rolb
testl
repnz
decb
enter
mov
shr
add
orb
fbstp
xchg
aaa
scas
mov
shrl
xchg
das
mov
lcall
gs
and
sub
xchg
dec
js
adc
xor
sbb
pop
out
jl
xchg
cltd
inc
xor
sbb
mov
cwtl
push
jl
leave
mov
cmp
cmpsl
jb
cli
loop
adc
sub
and
sbb
cld
mov
dec
fs
add
setle
cmp
pop
mov
pushf
adc
aas
dec
and
and
dec
cs
mov
sub
imulb
mov
lea
add
out
sbb
push
mov
lds
adcl
cmc
lods
and
push
ret
inc
aaa
mov
pop
int
dec
push
out
xchg
adc
les
push
or
shrl
mov
pop
out
mov
jbe
mov
push
fsubrl
cmpb
inc
ror
mov
arpl
loope
jnp
repnz
popa
leave
and
pop
dec
jo
outsb
mov
xchg
cmpsl
adc
nop
add
mov
sub
add
dec
and
jecxz
call
sarl
ret
jo
aam
rclb
movsb
mov
mov
insb
mov
out
xlat
dec
sbb
enter
imul
push
inc
jnp
mov
add
std
add
movsb
sub
inc
xchg
clc
outsl
mov
or
push
jns
popa
mov
dec
sub
cld
sahf
jmp
sub
pop
ja
and
mov
pandn
mov
lea
pop
mov
sbb
imul
lcall
adc
mov
push
call
push
add
cmpsb
sbb
rorb
inc
pop
xor
sub
insl
in
xchg
loope
sarl
icebp
fcmove
pop
cmpsl
popf
ljmp
loope
scas
mov
aam
sahf
sbbb
gs
adc
fwait
cmp
ljmp
or
ret
int3
dec
pusha
loop
pusha
xor
fldl
sub
jl
imul
sbb
cmp
sbb
cli
pushf
lret
daa
mov
ret
dec
inc
popa
or
jo
and
lret
cld
sub
test
and
adc
cmp
repz
or
cmp
jecxz
fwait
xchg
jmp
jb
ljmp
in
lcall
mov
sbb
lret
mov
mov
xor
xchg
enter
scas
in
sahf
orb
leave
divps
cwtl
and
outsb
loope
es
push
add
pop
in
pusha
push
pop
lret
nop
arpl
sarl
push
pop
outsb
in
jg
inc
sub
mov
out
mov
cmpsl
lret
insl
jle
mov
invd
test
aad
shrl
imul
fistpll
cmpsl
arpl
or
xchg
mov
cld
fimuls
mov
sub
stc
xor
xchg
nop
jo
in
imul
cwtl
ss
xchg
in
fwait
lods
dec
movsb
and
icebp
or
push
pop
or
push
aad
mov
out
dec
sbb
ret
lret
sub
sub
pop
push
out
std
jnp
insb
pusha
or
or
ret
sbb
bound
or
push
pushf
jmp
mov
sbb
adc
dec
sbb
inc
fadd
xlat
sbb
sub
insb
inc
lahf
mov
or
xchg
scas
cs
ss
fisttpll
iret
mov
xor
negl
cld
orl
cmpsl
dec
xor
imul
fsubrs
pop
lods
xchg
xor
mov
mov
xchg
or
adc
ficompl
icebp
cwtl
lret
ficomps
sub
das
mov
jne
popa
mov
cs
in
inc
jp
int
push
in
mov
push
lock
and
dec
push
dec
leave
test
mov
cmp
xor
mov
jmp
sub
out
in
in
testl
mov
cmpsb
xchg
sbb
mov
and
mov
shll
inc
lods
ja
lock
bound
cld
or
and
insb
push
mov
pop
cmp
test
shr
cltd
dec
mov
lcall
sbb
dec
and
loope
pop
int3
pop
out
stc
sbb
es
sahf
jecxz
push
shrb
cmpb
test
mov
ja
pop
mov
ds
push
push
orb
mov
int
mov
mov
push
push
add
sbb
inc
cltd
out
stos
mov
mov
pop
cwtl
cmp
add
fsubl
mov
fistps
aam
out
pop
lds
or
or
pusha
and
adc
addps
shl
into
ss
ret
mov
orb
mov
addl
pop
lahf
loope
jb
js
sbb
aam
xchg
mov
pop
loope
in
int3
loope
cmp
cmp
test
rcl
jp
jno
pushf
add
xchg
movsl
movsl
push
pop
sub
test
mov
cmp
lea
add
jno
movsl
xor
call
clc
jbe
arpl
in
scas
or
pop
dec
aaa
add
lock
inc
into
test
aad
cwtl
sub
xlat
dec
mov
inc
lods
aam
mov
jl
repnz
xchg
inc
sub
imul
mov
cmpsb
jns
push
mov
push
mov
sbbl
pop
jmp
fidivrs
adc
sar
inc
jg
js
in
cmp
push
ljmp
push
cmp
and
mov
addr16
in
mov
and
mov
jp
sub
lahf
add
push
imul
rcrl
mov
xlat
push
sahf
shrb
in
pop
sbb
pop
ja
cli
lcall
fsubrl
insb
mov
sbb
sbb
add
jecxz
iret
xchg
cmp
mov
pop
and
xor
xchg
xchg
mov
dec
jecxz
jg
cli
sub
movsb
sub
push
push
fs
mov
fisubs
jnp
outsb
jo
fiadds
inc
arpl
cwtl
out
popf
sbb
call
or
pop
insb
or
js
mov
xchg
in
icebp
addr16
cs
jge
icebp
rcr
hlt
xor
xchg
sbb
clc
cmp
cmp
rorb
ret
idiv
outsl
in
or
les
push
adc
mov
mov
mov
cmp
loopne
and
push
xor
popf
push
add
iret
sbb
jb
dec
into
in
stos
repz
sbb
into
and
idivb
mov
mov
push
sbb
xor
pop
push
or
das
jne
movsb
sub
rol
xor
xor
stos
xchg
jne
fdivs
aad
std
shll
data16
out
out
cmpsb
mov
jmp
push
sysenter
push
sub
call
or
cli
cltd
lds
pop
and
sub
adc
movsb
jnp
cmp
test
repnz
and
rcrl
shlb
xchg
sbb
adc
and
xor
dec
xor
lds
sub
aas
cwtl
dec
mov
xchg
leave
mov
mov
xor
and
in
or
mulb
sub
lock
fs
out
movsl
sub
lods
enter
xchg
mov
jecxz
cli
sub
inc
pop
nop
xor
and
faddp
cltd
mov
push
xchg
push
scas
imul
dec
loope
pop
cmp
mov
jae
or
cmpsl
pop
test
iret
daa
mov
data16
sar
test
test
push
dec
out
rorl
pop
add
outsb
and
inc
lds
int
add
mov
adc
inc
in
ss
xchg
test
in
inc
push
out
adc
mov
and
mov
mov
jo
cmp
mov
jo
pushf
and
syscall
add
loopne
sub
scas
mov
outsl
push
push
scas
cmpsb
enter
mov
les
inc
pop
insb
fdivs
or
aam
sbb
mov
push
sbb
mov
outsb
push
mov
loop
push
cmpsl
xchg
scas
loope
mov
pop
loope
or
mov
shlb
or
test
in
movsb
clc
adc
and
jo
dec
push
mov
mov
data16
mov
mov
mov
in
subb
jl
or
cmp
sbb
out
arpl
in
or
add
in
push
lcall
mov
jg
push
mov
inc
stos
or
pop
inc
lea
sbb
popf
rorb
pop
out
stos
cli
ljmp
in
std
push
loope
in
dec
lahf
sbb
dec
mov
or
dec
jg
aad
scas
add
out
in
bound
ljmp
pop
mov
cs
dec
jmp
xchg
loope
push
lea
cmp
out
aam
popf
fnstsw
dec
add
lea
scas
cmp
mov
aas
inc
lret
gs
popa
scas
mov
mov
pop
out
sub
mov
inc
push
in
dec
pop
jb
insl
stc
lock
xor
loope
mov
out
fistps
cmpsl
aam
js
inc
xor
push
loopne
inc
and
xlat
or
push
into
cltd
out
les
mov
dec
cli
mov
hlt
fdivr
inc
xor
bts
jae
xor
repnz
mov
fwait
std
adc
inc
out
or
fwait
cmp
push
add
sbb
enter
inc
fnsave
dec
imul
pmulhw
and
xor
test
xor
add
push
xchg
jns
adc
dec
push
sti
rol
push
mov
xor
sbb
ljmp
sbb
xchg
mov
stc
stos
adc
stos
sbb
lods
pop
jne
jmp
lock
jno
pop
icebp
push
int3
dec
test
push
pop
and
jl
sahf
lret
test
sub
mov
adc
int3
loopne
mov
andb
xchg
push
or
test
xchg
push
outsb
fcomps
in
bound
aaa
push
inc
lods
pop
ja
cmp
and
or
clc
jae
enter
mov
push
xchg
fcompl
ret
imul
popl
out
cmp
fimuls
sub
adc
or
fwait
xor
sahf
mov
jp
xlat
ljmp
sbb
jg
push
adc
or
xchg
inc
pop
loopne
fcoms
or
xchg
fwait
outsl
and
push
movsl
and
and
subl
fnsave
or
mov
xchg
jno
xor
mov
cmp
or
dec
sbb
hlt
aad
mov
push
stos
sbb
mov
int3
push
xchg
repnz
add
ljmp
icebp
outsb
mov
popf
xchg
mov
sbb
ja
std
jns
and
inc
outsb
mov
inc
lcall
jae
add
shlb
jmp
push
cltd
movsb
int3
push
xor
inc
push
loop
ljmp
pop
sub
inc
xchg
fwait
testl
inc
push
fcom
jl
sbbl
call
cmp
jp
xor
pop
movsb
mov
ds
fnstcw
xor
add
xchg
cmp
jae
addr16
mov
xor
cmp
aaa
lods
repz
or
xchg
push
cli
xchg
add
subb
lret
iretw
push
lcall
add
sbb
xchg
ds
call
mov
rolb
cmp
incl
mov
jecxz
pop
in
xchg
or
jbe
mov
mov
lret
icebp
imul
adc
cmp
dec
sbb
shlb
lea
dec
aam
lods
lcall
jle
sahf
jbe
hlt
pop
jb
fisubrs
sbb
clc
mov
push
ret
adc
and
xor
and
jl
cmpsb
dec
mov
cmp
jmp
out
cmp
dec
lods
cli
gs
adc
fs
and
sbb
push
in
adc
add
inc
fyl2xp1
cmp
rep
push
pop
lods
imul
stc
dec
xchg
or
dec
divb
pop
mov
adc
push
daa
arpl
pop
aad
lahf
pop
and
jmp
cmp
sub
xor
call
fwait
jae
lock
xchg
xor
dec
test
test
cltd
mov
and
xchg
popl
aad
jge
and
in
inc
push
xchg
leave
xor
aad
popf
inc
mov
jbe
fcmovnu
sub
orl
lds
pop
lods
push
or
rorb
ret
loop
mov
push
xor
sti
mov
mov
push
mov
mov
es
out
das
or
and
and
hlt
jge
mov
sbb
lds
lock
and
sub
ss
icebp
pushf
nop
cmp
dec
mov
push
mov
xor
fsubrl
mov
mov
jg
pop
ljmp
rol
push
ficoms
sbb
mov
out
lock
cli
add
ds
or
das
adc
mov
mov
ret
popa
sub
fs
mov
mov
inc
test
pop
cmp
lods
push
out
call
cli
cmpb
cmp
outsl
pop
cwtl
dec
inc
dec
push
data16
mov
lds
pop
cmc
cmp
mov
jo
sub
jb
popf
dec
add
mov
fists
mov
mov
stos
test
lock
fcompl
pushf
inc
cmp
outsb
add
jne
int
adc
cmp
aaa
sub
popw
call
sbb
push
inc
stc
cmp
scas
or
adc
fistl
outsl
int
jae
dec
rcll
bound
sahf
push
scas
mov
cmp
adc
out
test
sub
outsl
or
mov
adc
pop
xchg
bound
out
loope
cmpxchg
fistl
add
ja
adc
notl
sarb
shr
jmp
sub
dec
jp
outsl
bound
sub
bound
inc
mov
sub
cs
ret
jns
sahf
imulb
sbb
push
mov
mov
xor
cltd
or
stos
out
pop
mov
mulb
jp
push
xchg
mulb
adc
cmpsl
ds
jle
mov
xchg
push
cmp
cmp
lock
lahf
jge
jnp,pt
mov
ljmp
test
daa
je
in
add
cs
ss
jne
or
mov
fs
jmp
mov
inc
sbb
inc
stos
xor
or
xchg
jmp
insb
and
jno
cltd
idivl
cwtl
jp
xchg
push
ljmp
mov
mov
adc
adc
add
pop
cmp
xchg
mov
fs
adc
jno
fld
dec
push
xor
in
lock
jae
sub
xchg
daa
xchg
push
dec
loopne
stc
insb
mov
data16
pop
push
pop
cmp
lret
imul
cmpsl
fdivl
jge
sar
aas
inc
mov
loope
sbb
test
cmpsb
mov
mov
adc
push
pop
cmp
movsb
mov
mov
popa
adc
mov
cli
sahf
pop
inc
out
cmp
ret
cmp
mov
mov
mov
das
sbb
xchg
add
jmp
lret
cmpsl
sbbb
cs
ja
rorl
cmp
fstps
cwtl
inc
mov
repnz
cltd
pusha
xorb
shl
dec
icebp
mov
shl
or
addr16
cltd
pop
mov
xchg
test
jg
or
dec
adc
roll
negb
andl
inc
inc
push
popf
fdivs
stos
sbb
in
and
sbb
fildl
setb
mov
shlb
jbe
sbb
pop
outsl
and
sub
mov
pop
xor
fnstsw
insb
mov
mov
jno
mov
stc
test
outsb
and
pushf
lds
cli
push
imul
add
mov
pop
or
sti
jae
lods
dec
adcl
daa
push
loop
xor
xchg
jns
jecxz
add
pop
or
popf
mov
rorl
xor
sbb
jo
cmp
sbb
mov
pop
cltd
dec
lcall
jle
push
rorl
jl
inc
clc
xchg
xchg
mov
ficoml
pusha
add
or
dec
mov
sarl
pop
repz
cmpsl
xchg
aad
ljmp
pop
std
sub
jbe
stc
outsb
daa
aaa
dec
stc
xchg
mov
dec
je
mov
push
cmp
mov
jp
incl
jg
push
into
icebp
xor
pshufw
call
xor
xor
out
cwtl
imul
cmp
fnstcw
sub
in
scas
sbb
xchg
sarb
lret
add
pop
push
je
out
subb
mov
mov
dec
push
inc
ja
mov
sbb
aaa
jnp
daa
insl
mov
pushl
pop
sbb
mov
push
and
pop
or
clc
call
jbe
out
jns
jno
cmc
cmp
mov
push
mov
fwait
mov
lret
sbb
idivl
jne
push
adc
xor
aas
pop
or
dec
or
cld
mov
unpcklps
daa
fisttps
das
xor
or
inc
sbb
pop
ss
pop
and
cmc
popl
shlb
jl
add
jmp
loopne
mov
cmp
or
mov
sahf
push
pop
and
pushl
mov
push
jne
mov
dec
lcall
xor
es
dec
mov
xchg
cmc
xor
and
cltd
xchg
jmp
xlat
add
dec
adc
cld
jmp
fnsave
jne
outsl
push
and
lods
sub
dec
fistl
adc
fadds
shll
or
ljmp
push
inc
nop
xchg
mov
out
out
pop
or
push
daa
or
xchg
xchg
adc
insl
call
fistpll
push
inc
dec
pusha
mov
xor
aad
in
add
push
sub
jle
pushf
movsl
jecxz
jo
cmpl
testl
imul
stc
into
xchg
jmp
sub
inc
addr16
sub
enter
add
jb
sbb
mov
cltd
or
cwtl
cmp
cltd
aad
cmp
add
sub
ja
movsb
int
pusha
ljmp
test
fcoms
sbb
inc
push
mov
push
mov
repnz
fs
je
mov
inc
ljmp
sar
scas
je
mov
loopne
mov
adc
push
addr16
dec
and
or
add
mov
dec
xchg
mov
push
sti
ds
fldcw
inc
cwtl
dec
xchg
xchg
sbb
and
mov
mov
aas
mov
mov
es
cmp
add
lods
aas
inc
mov
stc
xchg
dec
xor
xchg
sbb
inc
jmp
jmp
test
movsl
jne
out
cmpsl
mov
push
daa
popa
pop
cli
cltd
iret
icebp
pop
push
aad
cmp
fiadds
mov
mov
dec
xor
or
ljmp
inc
aad
ss
mov
daa
js
push
call
sbb
nop
push
aad
jno
ja
push
jge
push
mov
jp
fwait
loopne
mov
ret
xchg
lret
xchg
outsl
sbb
gs
das
insb
iret
jnp
lods
and
mov
xor
pop
cld
insw
push
out
mov
jp
inc
xchg
cmc
int3
jge
push
negb
lret
testl
push
int3
shlb
jl
leave
jmp
lahf
insl
scas
movsl
lret
lret
out
push
mov
sbb
or
inc
mov
outsb
push
scas
ret
inc
ror
add
sub
cmpsb
adc
mov
hlt
add
push
push
and
fdivrl
daa
loop
imul
xchg
rolb
testl
mov
ret
inc
test
xchg
mov
or
add
inc
rcll
out
pop
aaa
addr16
mov
into
mov
inc
xchg
fcomps
push
shlb
inc
push
mov
push
lds
stc
lret
decb
xor
das
xchg
sbb
ljmp
or
fcoms
mov
out
pop
pusha
loope
repz
inc
push
or
adc
incl
mov
adc
mov
cmp
xor
outsb
stos
and
jnp
cmpsb
popa
pop
pop
mov
mov
sub
xlat
mov
pop
fidivl
lock
cmc
lods
dec
ds
das
mov
mov
mov
ret
bound
ret
aam
or
ss
mov
subl
xchg
xchg
aas
push
mov
inc
lret
mov
int
ror
hlt
or
fs
leave
push
cmp
fs
sbb
loope
adc
and
iret
xor
pop
or
aas
movsl
add
xor
inc
cmp
cmp
scas
cli
add
push
es
mov
push
lret
lods
imul
fcmovbe
negl
dec
stos
mov
mov
test
loope
mov
pop
outsl
es
inc
pop
dec
inc
jmp
xchg
cmp
push
imull
ret
mov
jbe,pt
out
cmp
push
test
sub
xchg
xor
xchg
aad
xor
les
ljmp
and
out
pop
repnz
sub
adc
xchg
dec
inc
out
jmp
arpl
dec
daa
stos
dec
out
push
xchg
cltd
sahf
or
add
mov
cmp
add
clc
fisubrs
pop
movsb
mov
out
mov
js
clc
repnz
mov
mov
xor
mov
iret
and
sti
jne
jne
orl
dec
pop
mov
jns
movsb
insl
sbb
mov
xchg
addb
mov
lcall
cs
xchg
out
push
lea
xchg
mov
ljmp
cmc
jns
mov
shrb
inc
mov
fs
xor
sbb
out
addb
fsubr
inc
dec
mov
jle
sbb
repnz
je
xor
test
pop
xor
pusha
out
sbb
xchg
jb
fwait
dec
mov
add
sbb
mov
push
add
pop
jmp
inc
cmpsl
mov
adc
cmp
rorl
dec
mov
fwait
mov
orb
iret
and
ret
dec
jae
insl
loopne
push
and
fs
out
or
lds
adc
movsl
adc
sub
imul
test
mov
lret
out
sbb
pop
inc
adc
mov
hlt
cmp
push
ficoml
push
mov
das
inc
xor
or
or
add
popf
outsl
outsb
pop
stc
mov
aas
cmp
or
push
dec
mulps
cmp
dec
ljmp
fdiv
or
push
fcoms
pop
test
fwait
shll
int3
push
xchg
adc
outsb
dec
sbb
clc
and
ror
adc
divl
xchg
test
hlt
or
xchg
pop
mov
in
lret
mov
and
sbb
dec
js
mov
xchg
sub
cs
fnstsw
scas
out
cmc
cmp
loope
mov
dec
jbe
popa
movsl
pop
testl
and
push
push
in
or
aaa
add
jae
fdivs
and
repz
mov
jg
ja
pop
int3
push
notl
xor
pop
hlt
xchg
jne
movsb
or
pop
divb
and
outsb
negb
mov
loope
lods
fmul
jmp
leave
std
stos
xchg
loop
xchg
loope
shll
push
in
jmp
mov
icebp
xor
mov
mov
jo
inc
jg
inc
mov
jmp
cmc
arpl
push
outsl
pop
cltd
mov
pop
sahf
push
ret
je
movsl
cmp
mov
mov
loope
add
lock
vpandn
adc
mov
push
icebp
sub
cmpl
jbe
repz
jns
push
hlt
jno
fs
inc
sub
lret
cmpb
aad
jge
pusha
jnp
or
clc
jns
js
scas
sti
pushf
and
mov
xchg
ja
add
push
jmp
xchg
xchg
loope
cmp
out
sar
popf
clc
add
sbb
jns
test
out
jns
bnd
xchg
push
xchg
iret
movsl
aad
leave
mov
inc
mov
jae
mov
incb
loop
rorl
movsb
fnstsw
push
mov
ss
inc
or
or
mov
outsb
stos
loope
fs
jle
cli
lock
call
aaa
push
js
test
mov
jne
leave
es
in
xor
leave
inc
cmpsb
mov
xorl
push
cs
sub
lret
pop
loop
loopne
cmpsb
fmuls
mov
mov
adc
scas
mulb
out
lods
xchg
out
add
repnz
xor
call
pop
mov
shll
mov
dec
and
xchg
dec
xchg
or
mov
lds
jns
push
outsl
mov
inc
std
inc
push
xchg
mov
daa
lods
stc
adc
push
lcall
xchg
ja
mov
xor
out
mov
sub
sbbl
cli
sub
mov
ljmp
cld
pop
fdivr
xchg
addb
add
jne
loop
cmc
mov
cmp
mov
mov
gs
pop
shrl
and
or
cmp
xchg
add
adc
jno
mov
fists
je
aam
pop
outsb
xchg
subb
movsb
cs
sahf
xorl
ja
movsb
push
imul
cmpsb
je
or
pop
int3
repz
cmp
mov
mov
nop
jns,pt
xchg
pop
lea
or
lea
and
and
xor
dec
shrl
test
int3
push
mov
test
pop
leave
jge
xor
les
and
pop
lods
aam
pop
sahf
pop
inc
add
sub
ss
xor
popf
std
out
mov
fdivrp
mov
mov
jae
frstor
cmp
jb
hlt
shr
pushf
repz
insl
iret
adc
addr16
or
xchg
xor
pop
xor
enter
lahf
lret
nop
dec
push
pop
inc
aas
xor
clc
test
fsubrp
inc
push
and
inc
xchg
cmp
mov
test
shr
xchg
lock
ljmp
push
js
sahf
lahf
or
sub
xchg
mov
aaa
test
fstpt
in
xchg
lret
jmp
sub
mov
int
popf
dec
pop
cwtl
jns
rep
push
mov
stos
dec
loope
adc
movsb
test
fwait
repz
push
and
js
push
mov
int
dec
imul
fisttps
fincstp
out
fucom
ret
push
jmp
and
pop
pop
or
in
xchg
inc
call
jns
jecxz
jb
inc
or
fcoms
mov
imul
jg
ljmp
test
inc
daa
les
je
dec
or
pushf
sahf
cltd
test
xchg
lret
or
and
pop
dec
add
add
dec
jl
loopne
mov
lret
lods
xchg
sub
out
push
sbb
xchg
fsubrp
std
adc
jnp
gs
idivb
iret
movsw
ja
push
jle
movb
pop
xor
fiaddl
xchg
adc
mov
and
push
fucomi
popa
or
js
lahf
jmp
cmp
fsubl
jmp
shl
mov
cwtl
out
add
aas
jo
xchg
pop
xlat
dec
sub
std
jle,pn
mov
mov
out
sub
sub
mov
repnz
dec
push
and
clc
test
jmp
push
or
cmpsb
cmp
or
sbb
cmp
in
mov
push
jle
test
inc
out
pop
stos
mov
mov
jecxz
popa
cmp
push
pop
mov
fldl
cmp
fnstenv
inc
pusha
cmp
xchg
imul
jbe
scas
fdivl
sub
adc
mov
fsub
outsb
push
mov
ds
mov
les
arpl
push
stc
in
mov
pop
popf
push
push
out
stos
inc
and
mov
inc
mov
jp
pop
ja
in
das
out
inc
and
xchg
loop
out
mov
adc
iret
xor
lret
pop
dec
push
jle
xchg
les
dec
jo
cmp
pop
mov
jb
sub
lcall
out
cltd
push
test
sbbb
jns
movsl
or
push
or
lret
in
sub
in
or
jne
int
je
imul
xchg
ljmp
dec
fidivrl
call
jge
movsb
pop
lock
adc
out
movsb
data16
adc
sub
cmp
stos
ds
jb
pop
jecxz
hlt
icebp
sbb
xor
mov
jbe
movsb
jmp
jnp
mulb
adc
inc
ds
mov
xchg
jg
jne
adc
mov
inc
and
shlb
sub
jb
xor
mov
add
in
fdivrl
test
cli
out
rolb
mov
shrb
add
inc
pop
xor
cmp
out
mov
dec
sub
loop
lods
aaa
mov
sbb
jnp
mov
jge
sub
xor
sbb
mov
sbb
imul
pop
add
jp
mov
call
add
pop
lret
cmp
outsb
outsl
xor
popf
test
fisubl
fs
sbb
adc
test
sti
jno
jns
or
cwtl
aaa
mov
cmp
les
scas
inc
pop
mov
f2xm1
daa
enter
decl
add
data16
lahf
mov
push
icebp
add
fwait
mov
jb
outsl
or
cmp
mov
imul
subl
mov
pop
dec
or
push
sbb
sahf
pop
add
sti
fs
roll
ret
push
fadd
mov
mov
loopne
nop
mov
add
dec
jl
test
mov
repz
dec
lods
lcall
repnz
xor
test
aad
scas
ret
aas
sahf
pop
stos
fldt
and
mov
jg
and
fstpt
jae
cwtl
push
jns
popf
insb
adc
insl
sbb
nop
test
push
and
lret
mov
sub
xor
add
mov
js
inc
sub
loope
in
lret
ja
sub
std
or
mov
mov
cld
adc
dec
mov
fldl
and
sar
jg
movsb
push
icebp
ret
aaa
inc
jb
dec
push
out
mov
rorl
clc
xchg
imul
mov
pop
dec
outsb
insl
push
xchg
sbb
movsb
ljmp
std
cmpsl
mov
dec
leave
stc
out
sub
cmp
cmp
inc
jl
pop
imul
negb
and
pop
or
pushf
fadds
pop
pop
mov
xchg
mov
jle
jp
jp
repnz
stc
add
xchg
ljmp
and
cmc
push
dec
add
or
mov
imul
push
adcl
inc
out
dec
repnz
aaa
out
bound
mov
pop
iret
mov
leave
inc
inc
inc
cmp
mov
jno
sub
xor
out
and
daa
and
jae
dec
sahf
aas
pop
and
aad
or
inc
inc
or
daa
adc
inc
cmpsl
push
ja
adc
es
mov
inc
jo
iret
lahf
mov
cmpsb
js
lods
mov
mov
or
cld
in
mov
in
clc
xchg
into
pop
lahf
mov
mov
adc
loope
aaa
lahf
pop
fbstp
out
inc
decb
and
scas
push
cmc
pop
decb
ret
sbb
xchg
les
lahf
sti
or
mov
jbe
incb
xorl
leave
idivb
cmp
imul
aas
and
nop
outsl
xor
mov
cmpsl
fnstenv
cltd
and
or
push
out
int
ss
jne
adc
or
pop
ss
pop
aam
xchg
cmp
cmpsb
mov
xor
ds
mov
std
cmp
adc
mov
fists
popa
mov
pop
jne
inc
cmp
jae
inc
in
clc
data16
outsl
jmp
xchg
and
insl
mov
pop
jge
popf
sbb
call
lcall
add
pop
loope
scas
fxch
mov
jbe
aad
inc
stos
pop
test
not
xchg
hlt
mov
fisttpl
ret
lock
cmp
xchg
les
or
and
adc
cld
aas
repz
ds
sub
mov
lods
loop
mov
fldenv
leave
mov
or
scas
jmp
mov
insl
xor
xor
mov
loopne
jmp
aas
mov
popf
icebp
cmp
daa
mov
xchg
lahf
pop
daa
leave
loop
cmp
mov
mov
imul
fs
adc
mov
stc
popf
cmp
add
sub
mov
fidivrl
addr16
xor
adc
pop
xchg
mov
bound
dec
jmp
mov
stos
psllq
dec
clc
push
jo
cld
cli
out
inc
mov
adc
lds
or
xor
dec
mov
test
and
arpl
fisttpl
fidivrl
data16
fisubl
jecxz
push
push
pop
call
xchg
mov
push
sbb
inc
loop
inc
dec
imul
cmp
int
mov
xchg
adc
sub
fs
fnsave
incb
mov
jmp
movsl
mov
imul
xchg
int
jmp
mov
shlb
add
pop
ljmp
push
xchg
orl
jne
imul
mov
add
fisttps
mov
fneni(8087
das
xchg
push
gs
sub
imul
ss
push
push
push
push
xchg
mov
sbb
test
jmp
pop
es
mov
sub
mov
scas
jno
add
ds
dec
mov
or
add
push
in
and
and
sub
add
add
jmp
dec
test
xchg
xor
add
cmp
mov
adc
jne
mov
cmp
popf
icebp
pop
pop
or
pop
daa
subb
ret
inc
test
xchg
iret
jmp
faddl
out
inc
xchg
ficomps
xor
insl
cltd
cmp
dec
cltd
scas
lcall
sbb
or
aad
ss
adc
mov
sbb
es
test
mov
imul
pop
enter
in
push
fisubrl
and
popa
sub
adc
insb
xlat
jp
scas
xchg
jne
fidivrl
push
bound
and
popa
cmc
pop
jae
testb
mov
jle
daa
or
inc
sahf
mov
ljmp
sahf
mov
jbe
jno
inc
mov
mov
pop
mov
dec
pop
cmp
xchg
adc
sbbl
nop
xchg
add
xor
inc
mov
mov
xchg
clc
adc
add
push
bound
pop
add
and
sar
pusha
repz
xor
fwait
out
adc
rcl
movsb
xchg
and
sbb
or
shr
xlat
imul
mov
shll
lock
mov
sub
jp
jge
daa
clc
xor
push
jb
push
adc
xchg
adc
nop
nop
xor
loopne
pop
xchg
dec
stc
mov
mov
xchg
js
lret
mov
push
lcall
mov
mov
xchg
fcomip
inc
cwtl
aas
sbbl
add
dec
push
dec
fcomp
pop
or
sub
inc
imul
add
aas
sub
mov
adc
add
mov
sete
addr16
pop
outsl
insl
je
inc
mov
in
scas
mov
inc
out
lcall
jo
jns
dec
mov
sub
popf
leave
xchg
repz
mov
cs
popa
stos
in
repnz
sahf
andb
xchg
cmp
push
mov
pusha
mov
mov
push
jmp
adc
outsb
lea
push
jle
sar
arpl
leave
shll
loop
inc
insl
cmp
fsub
xchg
push
lds
inc
add
lret
inc
dec
dec
rorl
shrl
mov
shll
lret
ja
out
lock
xor
adc
test
cmp
cmp
cltd
shlb
cwtl
das
mov
xorb
negb
cmp
ficoml
add
xchg
sub
in
sbb
repz
je
or
and
inc
call
adc
or
adc
pusha
or
add
push
or
xorb
nop
fiaddl
jns
inc
jns
hlt
cmp
pop
sbb
scas
out
xchg
lock
fldt
push
inc
xchg
enter
outsb
idivl
sarb
xchg
aam
loopne
mov
popa
popf
jo
shll
jno
pop
xchg
jge
lret
mov
jne
sbb
cmp
adc
repnz
xchg
orb
sub
add
cmp
dec
mov
xorl
push
pop
push
bound
call
push
fcomps
sub
insb
hlt
pushl
xor
bound
les
and
orl
push
daa
add
fstpl
and
les
adc
or
cli
xor
movsb
sbb
xchg
lea
mov
sti
jb
insb
push
test
xor
jmp
jl
cli
ds
rorl
jmp
lods
sar
lods
mov
icebp
push
sbb
out
pop
jmp
loop
int3
mov
loopew
sbb
fisubrs
fcmovnbe
adc
xchg
sub
mov
int3
insl
sub
mov
pop
std
or
mov
and
fbld
mov
mov
lcall
sahf
cmp
scas
add
sarl
adc
addr16
in
fcompl
cmovge
lahf
das
mov
ljmp
mov
test
sbbb
dec
int3
sbb
sub
aam
sub
and
movsb
hlt
xchg
in
xchg
pop
xchg
xchg
mov
sbb
lahf
mov
mov
pop
pop
mov
pushl
pop
pop
fstpt
call
lods
xor
rcrl
add
cmpsb
push
add
test
and
mov
adc
add
movsl
push
pop
imul
dec
push
out
adc
dec
clc
mov
lock
sub
mov
and
movsl
mov
adc
pop
pop
cmp
cs
sub
call
push
lock
ret
pop
in
push
stos
movsl
pop
in
jbe
pop
pop
ds
mov
cmp
adc
sbb
cmc
inc
aam
jle
mov
test
xchg
mov
cltd
es
bndldx
or
pop
pop
xor
push
pop
mov
mov
xor
or
xor
mov
mov
insb
mov
dec
mov
mov
xchg
cli
inc
sub
inc
sahf
mov
mov
test
aas
enter
test
gs
xorl
or
movb
xchg
sbb
push
int
xor
das
cmc
mov
test
pop
loope
ds
xor
and
addr16
psubb
xor
or
mov
enter
dec
jle
inc
pop
adc
sahf
test
repz
movsl
mov
stos
pusha
lods
push
and
enter
inc
inc
clc
stos
mov
mov
add
dec
mov
add
lock
in
int
push
adc
das
stos
and
rolb
int3
test
lock
adc
test
repnz
mov
xchg
cmpsl
push
pop
lds
mov
scas
push
cwtl
popf
xor
out
divb
shr
lea
xlat
test
cli
rcll
or
fstps
mov
and
pusha
test
push
dec
sti
or
addr16
movsb
xor
mov
imul
rorb
decb
sub
add
xchg
aaa
cmpsl
lock
fwait
pop
inc
mov
into
dec
xor
sti
in
pushf
jl
ljmp
add
jb
in
ds
lret
mov
add
arpl
mov
jecxz
mov
loopne
gs
cld
mov
mov
inc
jle
mov
fists
idivl
mov
fcomps
outsb
test
insl
pop
fildll
jecxz
push
or
push
in
sbb
pushf
insb
inc
sub
divl
aad
int3
je
orl
xor
mov
push
jnp
cmp
pop
arpl
aas
cmp
shrb
repz
loopne
mov
sti
sub
add
dec
stc
or
mov
rclb
inc
les
pop
jp
inc
das
xor
xor
adc
leave
mov
fildll
out
jne
sti
sbbb
mov
bound
aaa
xlat
ds
stos
mov
pop
clc
xor
xchg
in
scas
fwait
xor
out
ja
pop
cli
push
mov
rorl
add
loopne
in
or
sarb
int
xor
daa
movsl
push
insl
nop
adc
mov
sub
lock
popa
sub
sbb
and
pop
mov
xor
mov
rcll
sub
inc
fidivl
dec
fisubs
inc
into
adc
sub
pop
lret
xlat
cli
loopne
hlt
inc
orl
push
and
inc
push
mov
ljmp
jb
dec
adc
test
jns
loopne
mov
call
xchg
mov
sub
push
popf
mov
fcmovnu
inc
xor
jno
mov
or
sar
clc
and
lea
dec
fwait
push
mulb
jo
sarl
lds
sbb
mov
test
pmulhw
jecxz
lock
popf
popa
not
in
out
lcall
sbb
sub
mov
sub
or
or
mov
bound
cltd
ret
loop
pusha
push
push
sub
out
pop
scas
loop
dec
jge
xchg
mov
aas
dec
xchg
mov
sub
es
lcall
je
jmp
movsl
int
add
inc
loop
pop
out
xchg
mov
pop
and
xlat
ja
lret
cmp
mov
test
dec
sbb
cmp
out
out
cmp
pop
popa
mov
mov
fisubs
push
cmp
push
arpl
not
mov
lfs
jbe
cmp
pop
movsb
pop
pusha
rcl
cmp
sbb
imul
mov
adc
adc
jo
mov
jne
mov
cmp
mov
repnz
push
pop
inc
movl
scas
jb
stc
or
cmp
lret
mov
mov
aaa
std
and
fsubl
mov
insl
ljmp
push
dec
add
and
push
roll
or
sub
lods
push
inc
xor
xor
or
mov
addr16
push
cmpsb
lret
movsl
mov
fcmovnb
and
mov
movsl
cld
int3
jo
sti
xchg
arpl
cmp
sbb
mov
clc
pop
mov
sbb
aam
dec
mov
sti
sub
pop
inc
xor
add
int
mov
mov
jl
and
cmpb
mov
fstpt
mov
aam
ss
mov
cmp
push
dec
jge
loopne
sbb
bound
mov
scas
jge
rorb
xor
mov
cmp
cs
or
pop
aaa
stc
mov
mov
icebp
or
inc
mov
push
call
sub
call
and
fsubr
and
adc
mov
push
mov
pop
icebp
dec
out
call
fldt
sbb
imul
cli
xlat
fistpl
das
cli
mov
dec
mov
pop
jns
dec
dec
imul
inc
out
mov
mov
es
dec
mov
pushf
mov
add
decb
cmp
into
repz
je
dec
xor
and
mov
add
jp
cmpsb
test
popf
mov
jb
aad
scas
adc
stos
xchg
sub
lret
inc
test
push
add
add
repz
sub
icebp
fs
pop
or
inc
adc
cmp
push
jmp
inc
add
test
mov
push
pop
cmp
les
dec
icebp
shrb
inc
out
mov
sbb
leave
dec
adc
mov
popa
sbb
cs
js
push
insb
aas
fsubrs
inc
pop
movsb
pop
inc
sbb
iret
outsl
or
loop
xor
stos
and
mov
arpl
sub
lret
and
mov
pop
mov
cwtl
cmp
jp
lahf
fnsave
and
xlat
mov
and
sbb
int
aad
push
sub
pop
out
xchg
cs
adc
sbb
fwait
cmp
jl
adc
in
scas
adc
or
repnz
xchg
in
mov
mov
data16
gs
lahf
jp
xchg
dec
push
cltd
xor
cs
outsl
mov
jl
repz
push
and
lret
mov
dec
cmc
or
ljmp
push
mov
cli
push
push
rcrb
jne
insl
mov
lahf
adc
fbld
jne
ret
sar
addr16
cld
mov
push
lahf
lcall
add
inc
hlt
jbe
push
fld
mov
xor
repnz
icebp
push
fwait
jle
xchg
inc
dec
sub
and
pop
cmp
push
sbb
out
mov
popf
push
mov
lds
add
mov
xor
test
jb
fabs
sarl
in
mov
fwait
xor
fldenv
add
filds
into
rcrb
mov
in
stos
imul
lcall
hlt
test
mov
arpl
orb
stc
cmp
sbb
std
jns
adc
dec
mov
ljmp
dec
jnp
test
push
lods
sbb
pusha
sbb
mov
push
xor
mov
xchg
jno
cmp
aad
ficoml
sub
xchg
and
aas
xor
cmp
cmpb
dec
fsubs
or
and
in
les
pop
pushf
xor
lds
dec
xchg
pop
das
pushf
sub
js
push
ss
add
nop
add
sbb
xchg
and
popf
adc
jae
jle
push
sbb
loop
xor
loopne
out
aaa
cld
cmpsl
mov
int
push
cmp
or
adc
push
adc
rclb
jl
pop
lret
mov
push
jg
mov
mov
inc
sahf
insb
mov
xchg
scas
inc
cmp
lds
dec
pop
adc
mov
adc
fwait
mov
sub
xor
mov
popf
pusha
pop
stos
xor
cmc
inc
lahf
flds
add
push
pop
cmp
bnd
mov
mov
push
jne
dec
xchg
sbb
mov
mov
cli
mov
pop
inc
jb,pn
sbb
sub
dec
sti
sbb
inc
outsl
repz
lret
xor
sbb
scas
adc
test
in
stc
test
pop
mov
cmp
jo
mov
inc
mov
mov
add
inc
jnp
push
inc
rorl
add
fcmovbe
xor
mov
lret
jg
dec
push
dec
int3
int
and
and
ss
dec
movsl
pop
repz
mov
inc
push
mov
inc
loop
dec
int
and
sub
pop
roll
mov
fsts
gs
jg
xchg
push
pop
xor
pop
sbb
insl
and
dec
nop
mov
pop
fisubrs
xchg
jno
mov
dec
jbe
andl
aad
aas
das
mov
dec
fisttpll
scas
addr16
popa
fwait
dec
in
jnp
rcrb
add
arpl
shll
push
pop
dec
aaa
inc
shl
test
in
clc
stos
addr16
add
xor
and
outsb
cmp
jb
inc
in
mov
xchg
pop
shlb
mov
inc
rol
and
or
dec
stos
push
push
or
ljmp
pop
add
inc
adc
cmpb
xchg
jno
out
and
lret
xor
xchg
or
lahf
mov
mov
ds
lds
outsb
xchg
pushf
aaa
movsl
pop
xchg
enter
push
pushf
in
popa
rcrl
std
jge
loop
cmp
pop
mov
adc
addr16
sahf
test
bswap
xor
into
into
inc
sub
ret
je
xchg
mov
dec
movsb
fisubrl
or
fcomip
push
jbe
std
mov
cmp
inc
or
rolb
dec
mov
or
mulb
adc
stos
fs
scas
or
push
dec
clc
or
push
sahf
loope
aam
pushl
xchg
sub
into
jp
adc
jns
arpl
jecxz
pop
mov
mov
adc
jmp
or
cmp
cmp
and
in
jne
mov
shll
or
dec
adc
xchg
ds
fwait
mov
mov
pop
push
adc
mov
jge
pop
in
fwait
or
packsswb
enter
jo
iret
jle
loope
jbe
sarl
mov
testb
xchg
test
lret
mov
xorl
sub
jge
pop
lods
scas
pop
mov
repnz
fstpt
js
sbb
mov
and
mov
mov
push
in
sub
mov
inc
sbb
dec
lcall
pop
cmpsb
dec
fiadds
add
xor
out
ror
ss
sbb
pop
jge
je
or
jmp
cs
jns
cli
and
test
cs
sub
int
and
hlt
outsb
jae
cmp
std
jno
jae
pop
sarb
jg
dec
inc
jp
dec
daa
adc
xor
mov
mov
std
push
mov
repnz
xchg
in
dec
xchg
mov
shr
ss
jns
adcl
inc
mov
mov
imul
fs
ret
xor
loope
fsts
push
xchg
pop
adc
push
fisubl
popa
popw
ds
js
lock
data16
pop
stos
jmp
cmpsl
int
aad
pop
mov
out
movsb
mov
filds
insb
test
cli
xor
sbb
and
aas
int
popf
mov
lahf
ret
idivl
inc
mov
xlat
mov
sub
mov
les
rcrb
lock
mov
roll
mov
pop
adc
xchg
icebp
mov
cld
int
fidivrl
sbb
jae
mov
and
sub
arpl
push
fnsave
jg
dec
sbb
repnz
movsl
cmp
mov
lret
lret
mov
fbld
sub
cld
lcall
xchg
mov
icebp
loope
into
dec
or
ljmp
insl
dec
cld
cltd
fwait
adc
add
dec
shl
test
fs
sbb
jb
xchg
sub
mov
mov
clc
das
sbbb
js
cmp
push
test
cmc
fdivrp
xchg
mov
xor
sbb
and
pusha
push
stc
or
fdivl
dec
scas
mov
outsb
jb
mov
test
jns
add
cmp
pcmpeqw
adc
jecxz
test
cwtl
mov
les
xlat
out
and
jne
xor
xlat
insl
test
dec
mov
es
jp
and
or
jns
jmp
es
dec
sub
daa
xchg
cmp
jle
mov
mov
xchg
dec
pop
psubq
clc
mov
in
je
pop
push
mov
dec
scas
lret
add
gs
sub
inc
ficoml
or
into
mov
mov
ds
nop
mov
jmp
data16
daa
into
lcall
lret
jae
aaa
nop
mov
pop
mov
insl
cmp
cmp
out
lahf
adc
jl
lahf
iret
push
dec
das
mov
xchg
mov
adc
and
fsubs
push
aam
lret
js
lea
xchg
push
add
fdivp
mov
test
jno
test
aaa
or
aas
pop
lods
ror
push
jge
lock
ja
xchg
out
shrl
xchg
adc
sahf
or
out
clc
sbb
cmpsb
fimull
fs
push
popf
jne
inc
lahf
into
pop
adc
ret
sbb
rcrl
fdivrs
push
pop
jp
ljmp
jb
adc
and
jne
rolb
pusha
ret
neg
sti
or
test
lcall
xchg
dec
cwtl
cmp
cmpsl
jmp
mov
inc
lret
sti
sbb
fsubl
inc
repz
mov
icebp
call
scas
imull
inc
pop
push
aam
test
and
cmpsl
ret
jno
xor
pop
lods
xchg
test
test
mov
ljmp
lret
push
shrl
sahf
movsb
imul
mov
sbb
cmpsl
push
adc
insl
adc
lds
pushf
inc
ret
cld
data16
push
adc
pushf
ret
xor
mov
ja
cmp
xor
icebp
mov
xor
insb
ret
add
lcall
fwait
or
or
std
icebp
ja
or
jl
jmp
jl
jmp
add
sub
mov
rclb
fcompl
pop
dec
adc
test
enter
arpl
mov
inc
xchg
fmulp
out
lret
pop
push
fs
push
inc
leave
add
cli
insl
sahf
repz
pop
sbb
dec
xor
mov
mov
hlt
xchg
ja
or
sar
arpl
dec
test
xchg
inc
shrb
pop
or
subb
jp
jge
in
loopne
pop
and
xor
push
cmp
xor
subb
ficoms
cltd
push
movsl
fwait
inc
push
adc
jecxz
dec
outsl
mov
lock
mov
testb
ficoml
fisttpl
aad
add
imul
shlb
in
add
push
rcrl
neg
add
mov
mov
push
xor
scas
mov
leave
sbb
loopne
mov
and
inc
arpl
stos
sbb
sbb
cltd
stc
jg
mov
scas
push
add
fistps
mov
or
jbe
imul
aaa
das
jnp
adc
inc
cmp
inc
and
movsl
sahf
xor
pop
out
call
mov
xchg
xor
inc
pop
pop
pmulhuw
cli
std
sub
dec
popf
stc
sub
xor
jmp
push
or
or
subb
mov
mov
sarb
inc
or
out
inc
mov
stc
into
cmp
repnz
loopne,pt
mov
fnsave
mov
mov
mov
mov
in
sub
push
mov
dec
push
movsl
loope
ss
fwait
jl
jb
adc
ljmp
popa
push
arpl
daa
and
and
mov
inc
pop
mov
scas
mov
cmp
dec
xchg
fld
mov
xchg
add
ljmp
add
dec
sbb
mov
xchg
sub
ret
test
adcb
lock
inc
mov
push
cwtl
jbe
pop
stos
out
jne
jecxz
xchg
rcrl
mov
orb
ja
push
in
sbb
xchg
pop
fstpt
mov
imul
rcll
in
cs
cmpsb
icebp
imul
clc
mov
inc
inc
movsb
jl
sub
sbb
cmp
jb
xchg
cmp
repnz
add
push
lret
int
and
test
dec
mov
lods
jg
outsl
idivl
mov
push
jmp
xor
xchg
data16
out
jg
push
jp
mov
int3
cmp
dec
js
xor
popf
inc
pop
xchg
pop
add
or
addr16
nop
push
in
sbb
pop
adc
push
dec
jp
sbb
popa
insl
mov
xchg
and
insb
xor
adc
adc
sbb
outsb
dec
ret
push
aam
ficoms
and
mov
mov
mov
fbstp
test
jb
je
adc
aad
push
or
adc
scas
xchg
iret
add
or
popf
jp
mov
lock
orb
or
add
adc
sub
xchg
jno
insl
in
sbb
popa
mov
xor
js
sbb
hlt
fidivs
add
xor
notb
shl
lret
and
pop
add
fcoml
ficomps
sbb
dec
fwait
shrb
test
pop
add
and
dec
into
rcrb
cmp
mov
lret
add
shl
fisttpll
sub
inc
push
pop
mov
ja
gs
mov
mov
mov
fnstcw
fildll
inc
lea
ds
push
dec
cmp
fstpl
mov
ret
rcrb
mov
push
and
std
inc
mov
cmpsb
xchg
cli
or
inc
das
seta
loopne
scas
movb
dec
fldl
inc
and
xlat
ficoml
dec
lret
dec
dec
mov
lret
cmp
js
arpl
popf
mov
in
orl
jbe
or
loope
jmp
jmp
jb
dec
mov
push
fwait
add
pop
adc
mov
test
loop
xchg
std
xlat
mov
lahf
jmp
add
or
xchg
int3
bound
mov
inc
pop
or
lock
push
dec
push
jg
pop
cli
xchg
push
fsubs
test
shll
mov
in
or
mov
jecxz
mov
add
add
scas
jmp
cmp
dec
clc
or
rcl
and
fdivl
imul
jno
cmp
jg
jmp
xor
lcall
shlb
sub
xchg
cwtl
imul
outsl
adc
mov
mov
xor
into
mov
pop
repz
lcall
mov
dec
call
cmp
out
daa
sub
mov
cmp
dec
cs
mov
mov
mov
push
mov
jle
js
pop
adc
add
mov
mov
jno
sub
aam
add
ficompl
xchg
xchg
mov
inc
sahf
in
push
mov
movsb
mov
shrb
mov
push
mov
xchg
lods
mov
pop
icebp
pop
dec
jnp
sub
push
jl
icebp
sub
cmp
pop
movsb
test
or
pop
or
dec
stc
stos
insb
out
jg
sbb
sbb
pop
add
add
and
shrb
push
stc
push
sub
sarl
sub
outsb
sbb
jae
push
sbb
test
mov
xor
les
and
dec
adc
xchg
sub
adc
push
aas
sbb
and
mov
jnp
out
decl
pushf
dec
pop
fs
sbb
loop
push
cld
jg
cmpsl
sub
loopne
out
inc
xchg
adc
test
stos
inc
int3
push
rclb
add
or
orb
or
xor
dec
push
xchg
xor
sbb
repz
and
add
or
data16
scas
daa
aam
add
or
std
xlat
popf
lret
or
scas
push
lret
popf
js
jmp
fistps
mov
int
mov
outsl
arpl
cwtl
or
std
lock
mov
cltd
add
cli
dec
dec
jne
adc
fsubrp
lods
and
in
lea
mov
aaa
aad
cmpsb
cmc
das
test
inc
inc
push
fnsave
jle
lret
aaa
xchg
out
popa
cmpsl
daa
icebp
clc
lret
into
insb
push
mov
cwtl
mov
mov
pop
fists
fwait
inc
adc
jb
push
in
add
mov
lock
mov
pop
pusha
mov
push
lahf
pop
lods
lds
pop
mov
lcall
push
push
cmpsl
rcl
fisttpll
jmp
sti
push
inc
stos
inc
dec
cmp
inc
mov
out
lret
jl
add
xorl
xor
cmp
aaa
jbe
mov
mov
adc
pop
lahf
data16
int
rol
push
test
pop
jb
imul
push
inc
jbe
out
jns
xor
loope
xchg
push
mov
das
mov
std
or
dec
add
inc
bound
imul
jo
sbb
lock
inc
xorb
loope
push
xor
dec
inc
jge
outsl
es
mov
cld
test
jmp
dec
hlt
push
mov
mov
xchg
negb
into
mov
stos
fsubs
mov
cmp
add
pusha
mov
sbb
or
xor
mov
add
pusha
jp
lock
unpcklps
inc
cmp
push
mov
jg
inc
adc
popa
gs
std
test
jno
imul
outsl
popa
sti
int3
add
cmc
out
mov
nop
sbb
inc
dec
sub
cs
leave
push
scas
lods
out
test
mov
push
or
adc
lods
rorl
cmp
sbb
jns
fbstp
lret
inc
xor
xor
pusha
popf
addl
push
mov
sbb
sbb
cmp
jno
mov
and
mov
insl
sub
pop
push
pop
mov
pop
jl
pop
test
or
insb
sti
std
imul
fs
push
es
int
pop
dec
shlb
jb
js
stos
sbb
js
test
in
lods
mov
aad
rorb
fcomps
sub
lahf
xchg
cwtl
fwait
cmc
sub
mov
ja
dec
in
mov
loopne
test
cld
ljmp
push
cmp
addr16
out
repz
and
jne
hlt
jg
out
mov
ds
ficomps
inc
pop
push
push
hlt
jo
int
loop
int
lds
push
xor
push
loope
ja
shrb
and
mov
pushf
enter
or
ds
mov
cs
push
loopne
mov
popf
sar
inc
push
inc
lds
repnz
lods
test
mov
xlat
andb
mov
sarb
mov
lea
pop
scas
adc
in
int3
aad
dec
xor
xor
and
stc
mov
lods
jmp
cltd
call
mov
or
rolb
insl
push
pop
test
mov
out
inc
ljmp
jecxz
pop
lcall
outsb
int3
sbb
lcall
fcomps
shrb
mov
jg
sbb
test
xor
mov
jns
loopne
inc
and
mov
sti
cltd
jae
jns
xchg
ss
mov
inc
imul
shrl
jg
push
in
and
ret
mov
mov
dec
push
shl
jp
dec
cmp
or
lret
or
int3
out
mov
enter
leave
xchg
cmpsl
ljmp
cmpsb
rorb
pop
iret
jmp
aaa
sbbl
out
jbe
das
mov
pop
xchg
imulb
adc
mov
aas
xchg
adc
sub
mov
je
mov
push
inc
mov
sbbb
jmp
sbb
in
or
idivl
sub
or
add
xor
mov
xchg
mov
test
pop
aad
fildl
fsubrl
aam
push
iret
push
movsl
fs
imul
cmp
jae
push
repz
ret
pop
sbb
pop
and
insb
mov
mov
iret
icebp
out
xchg
fstpl
inc
sub
fcomps
jle
push
aas
push
dec
or
xlat
test
aaa
add
xchg
push
pop
aam
mov
inc
movsl
repnz
push
dec
mov
push
cmp
jp
in
daa
icebp
pop
out
add
dec
push
aad
cmp
iret
jo
test
mov
jnp
cmp
movswl
scas
mov
mov
test
pop
adc
pop
sub
rolb
cmp
push
fs
push
imul
mov
scas
enter
sub
jo
or
mov
outsl
nop
xor
pushf
addr16
xchg
dec
inc
insl
adc
int3
jmp
lods
jge
insl
daa
dec
mov
adc
repnz
push
cmc
xor
push
scas
xchg
and
and
cmpsl
sub
ss
mov
dec
xchg
pop
adc
xor
aad
mov
pop
sub
ret
aad
add
lods
push
jge
adc
sub
flds
sahf
leave
out
jle
lahf
enter
jmp
test
mov
pop
jle
jo
lret
inc
mov
lods
mov
cmpsl
mov
mov
push
iret
scas
mov
test
mov
daa
enter
xchg
arpl
popa
adc
xchg
cmpsb
jo
es
ljmp
sub
push
mov
xlat
jmp
scas
mov
jne
lret
inc
cmp
push
jecxz
hlt
mov
stc
loopne
in
add
aad
loope
shll
pop
push
pop
or
inc
sahf
inc
bound
pop
test
push
into
int3
cmpl
sub
test
popa
out
addr16
jmp
decb
and
push
cwtl
int3
cmpsb
clc
sbb
out
pushf
aam
inc
cmp
sbb
sbb
shrl
sbb
cs
or
pop
push
push
loope
ret
test
dec
adc
mov
out
cld
xlat
mov
add
in
stos
sub
scas
lods
inc
stos
xchg
sahf
mov
add
sbb
cmp
add
sbb
pop
lcall
dec
cmp
ss
and
cmpsl
loop
aam
xchg
test
idiv
int3
push
fdivl
popf
arpl
es
adc
adc
js
repz
mov
inc
fiaddl
mov
cld
gs
sub
sbb
sbb
jp
mov
or
mov
push
mov
cmp
push
test
rolb
inc
adc
pusha
and
aaa
arpl
cli
outsl
xlat
stc
sub
in
mov
in
insl
mov
adc
mov
mov
cwtl
mov
jnp
jp
push
jge
dec
pop
dec
adc
daa
in
sbb
insl
mov
cmp
push
sbb
push
jmp
hlt
ljmp
xor
addr16
roll
mov
dec
rcll
int
pop
sbb
mov
out
fadd
mov
jnp
xchg
dec
adc
xor
jno
sarb
outsl
aas
push
jl
jle
sti
clc
pop
cmp
loope
adc
insb
jg
movsl
sahf
pop
in
xchg
mov
push
insl
xor
jbe
stos
aam
jmp
in
mov
sbb
and
mov
incb
out
cltd
mov
popa
push
mov
dec
xchg
xchg
and
pop
or
pop
scas
jmp
ja
push
xchg
or
adc
dec
inc
or
add
push
loopne
subb
dec
pop
gs
dec
js
or
xchg
test
or
test
jae
adc
sub
push
mov
ds
ss
push
jp
rdpmc
daa
mov
into
jg
mov
mov
jns
lea
mov
dec
lret
mov
out
add
int3
lds
fisubrl
test
je
shl
push
lock
xchg
or
push
ljmp
jns
rcrb
push
mov
or
pop
xor
xor
inc
and
int
lret
sub
lock
mov
js
fstl
mov
pop
out
push
mov
push
lea
jno
aad
int
test
inc
imul
jnp
or
movsb
pop
clc
lahf
loope
cmc
jae
lea
and
icebp
nop
es
jle,pn
cmc
cmp
jae
std
cmp
arpl
movsl
insb
and
xchg
xor
adc
mov
insb
jo
out
stos
push
sahf
aas
add
int3
int3
insb
fistpl
jno
mov
out
sub
cmc
mov
rcll
sbb
push
and
enter
pop
xor
int3
imul
gs
mov
sub
test
imul
xchg
hlt
push
xchg
lea
mov
jo
jno
mov
addl
jmp
add
and
push
and
mov
sbb
dec
fsub
or
stc
jne
fnsave
or
mov
test
and
pop
fadd
dec
sub
jg
sarb
xchg
xor
pop
sahf
mov
sub
stc
or
dec
sbb
cmp
mov
sub
fcoms
int
aad
mov
push
mov
mov
fimuls
xor
xchg
subb
lock
nop
and
aad
cli
push
out
lcall
mov
xor
test
shrb
idivl
cmp
hlt
cltd
js
add
mov
push
jmp
inc
inc
loope
insl
call
xchg
mov
xchg
in
mov
enter
shlb
mull
adc
dec
scas
mov
push
or
sub
mov
jg
jp
jge
arpl
mov
sub
pop
mov
je
pop
sbb
rclb
xor
fsubrl
gs
rorb
les
loop
cltd
dec
sbb
shrb
repnz
jg
jb
fdivrp
mov
std
hlt
push
sarb
fnstcw
pop
push
ds
mov
mov
inc
pop
bound
cmp
push
dec
sbb
aam
xor
leave
and
addr16
sbb
xchg
or
sbb
push
sarb
push
cwtl
and
es
or
daa
cmp
insl
inc
cmpsb
test
and
jp
pop
mov
jl
push
out
scas
imul
pop
mov
jb
enter
jecxz
adc
mov
xor
pushf
in
js
sbbb
xor
push
pop
dec
push
out
outsl
inc
loopne
cwtl
cwtl
xor
add
xchg
xchg
hlt
and
inc
jecxz
pop
popa
testl
jmp
jo
xor
dec
js
adc
popa
test
call
mov
xchg
mov
mov
into
sub
sbb
mov
adc
vpmulhw
cmp
xchg
nop
sbb
enter
sahf
mov
push
xor
jp
push
filds
jle
cli
push
mov
sub
cmp
mov
cmp
stos
rcll
lds
ds
ja
insl
xor
xchg
cmp
lock
cmp
das
inc
pop
arpl
enter
scas
ljmp
outsl
inc
cmp
flds
jp
scas
lods
adc
pushf
in
mov
imul
div
out
ljmp
in
mov
mov
jp
and
cmp
pop
stos
jae
adc
mov
and
lods
add
inc
push
imul
mov
mov
sub
in
out
stos
jp
adc
lds
ja
cmpsb
jbe,pt
adc
jg
clc
jg
leave
imul
mov
cmc
mov
clc
mov
std
adc
jo
scas
mov
dec
add
call
sbb
fcomps
repnz
inc
jno
mov
push
fninit
xlat
popa
push
rorl
enter
pop
xor
cmp
scas
sti
xor
stos
cmp
ficoml
or
sbb
mov
mov
rcrl
cmpl
dec
push
shll
popf
addr16
and
cmp
sbb
push
decb
mov
cmp
call
out
cmp
xchg
rcrl
into
scas
pop
movb
repnz
mov
into
xlat
push
sbb
clc
rcr
and
cmp
push
aaa
lods
or
loope
dec
sahf
dec
push
mov
push
sub
pop
add
cli
inc
dec
les
mov
dec
cmc
lcall
push
loop
mov
cld
pop
adc
mov
jno
adc
pop
arpl
mov
push
xchg
rcr
or
loop
mov
sti
cmp
pusha
adc
popf
mov
mov
test
jecxz
das
jl
mov
gs
xlat
pop
and
scas
jmp
test
aas
iret
sub
and
push
jo
mov
call
movl
cmpsl
pop
mov
test
fcomip
xor
mov
orl
orl
mov
xor
sti
gs
nop
inc
jge
cmp
cmp
adc
fnsave
cli
mov
jecxz
jl
mov
test
sub
jae
pop
lret
push
jmp
fcmovu
cmp
push
je
hlt
fdivs
cli
lcall
sbb
arpl
xchg
dec
push
fstpl
jno
lahf
addl
jbe
mov
or
outsl
int3
xorb
or
adc
aas
adc
and
push
inc
leave
in
adc
cmpsb
movsl
jp
mov
insb
sub
lock
shlb
jmp
mov
cmp
dec
lods
repnz
dec
sahf
or
stos
mov
lcall
lock
add
dec
cmovne
xchg
fadds
xchg
leave
mov
push
cmpsl
in
push
ficomps
pop
adc
and
mov
cltd
pop
cmp
inc
pop
bswap
mov
gs
movsl
call
mov
icebp
in
push
pop
push
xchg
sbb
xchg
push
push
loop
push
gs
xchg
add
lcall
and
insl
inc
fldcw
mov
in
andb
mov
sarb
dec
mov
std
xchg
and
xlat
int3
sti
lods
mov
test
and
or
in
loop
dec
repnz
pop
mov
adc
or
pop
sub
test
add
test
fisubl
imul
dec
sub
daa
sbb
inc
and
and
pop
std
pop
out
fsubs
ret
and
inc
into
inc
add
rolb
ljmp
leave
adc
xor
xchg
clc
out
mov
notl
add
inc
mov
inc
and
in
inc
arpl
cmp
and
nop
jo
xor
fcompl
test
loop
incb
pop
mov
and
aas
push
std
out
pushf
into
push
out
xor
into
addr16
stc
xor
test
fnstcw
fstpl
mov
notrack
fld
ret
cmpsl
outsl
dec
stos
or
imul
inc
pop
or
rolb
cmp
mov
int
lea
fists
arpl
out
xor
sub
insb
stc
in
jl
cli
int
push
pusha
cld
mov
mov
cmpsb
inc
mov
sbb
lods
aam
test
fmul
movsl
insl
mov
jae
jp
dec
xchg
xchg
and
ss
adc
pop
pop
sbb
int3
or
push
push
adc
divl
mov
sbb
loopne
push
dec
pop
push
push
dec
push
lock
lcall
repnz
sub
dec
shll
leave
cmpl
andb
rcrl
test
call
shlb
jb
aaa
sbb
pop
in
aaa
subl
lret
int3
outsl
ljmp
adc
pop
mov
movsl
fisttpl
std
xor
sub
bnd
inc
push
cmp
incl
aaa
sbb
fcmove
fwait
or
jmp
jnp
sbb
lret
and
clc
or
outsb
leave
xor
cmp
push
cli
out
scas
pop
insl
xor
jae
inc
xchg
mov
lret
adc
cmp
sbb
cld
add
repz
mov
scas
sbb
leave
pop
mov
shlb
dec
into
int3
pop
jecxz
cs
mov
fdivs
xchg
ret
insb
sub
push
les
xlat
xchg
outsl
pop
loop
lcall
mov
pop
aad
sbb
sbb
or
adc
mov
mov
inc
rolb
mov
or
sub
xor
sub
sarb
mov
aam
xor
popa
repz
push
loop
cmp
movsl
and
sbb
sbb
mov
add
sbb
addr16
je
sbb
rcll
leave
in
nop
addr16
idivb
es
lret
and
es
xor
int3
xchg
in
in
cmp
lcall
push
sub
test
iret
mulb
andl
push
mov
ficompl
aaa
pop
adc
roll
sbb
lret
xorl
sbb
adcb
xchg
or
ret
push
addr16
setle
ret
rclb
dec
fcoml
sub
iret
mov
sub
lea
jb
xchg
arpl
push
pop
push
push
dec
fldt
dec
dec
mov
mov
andb
clc
xor
inc
mov
out
push
push
aaa
xor
dec
ror
clc
pop
std
popa
fmull
popf
pop
pop
xchg
inc
insb
cmp
faddp
adc
fnstenv
pop
xchg
inc
test
mov
mov
ret
lahf
mov
add
iret
fisttpl
mov
jmp
add
xchg
xchg
xchg
enter
addr16
sbb
in
int3
test
mov
dec
dec
sarb
adc
mov
out
sahf
test
les
push
cmpsl
push
cmp
and
aaa
mov
jae
inc
fdivrl
iret
inc
test
or
dec
insl
add
in
aaa
mov
jge
addr16
test
jmp
aaa
dec
les
in
jb
nop
push
cmc
les
out
xor
mov
scas
sub
sahf
and
jns
jp
or
addr16
adc
pop
loope
insb
jmp
mov
aas
or
cmp
pop
jle
adc
xchg
mov
enter
mov
stc
mov
std
mov
rcrl
add
cli
aaa
das
pop
xchg
push
inc
push
in
dec
bound
adc
sub
test
ss
mov
fwait
ljmp
add
outsb
ss
inc
or
and
mov
mov
fwait
ja
mov
mov
inc
pop
jle
pop
stc
xchg
in
shll
stc
popl
jp
pop
pop
insb
std
rol
cld
imul
mov
mov
xchg
and
dec
in
pop
sahf
orps
add
and
shl
idiv
ljmp
leave
and
pop
sahf
arpl
leave
inc
cs
lcall
xchg
fidivs
test
movsb
std
sub
sub
and
movsl
push
into
or
aad
add
jmp
rcr
scas
je
mov
cmc
and
seto
jns
xchg
scas
sti
push
ret
fidivrl
popa
call
jle
inc
cmp
fisttpll
test
pushf
sub
sub
inc
not
mov
loop
xor
pop
mov
push
in
ror
mov
and
sub
loopne
fidivrs
nop
jns
or
mov
mov
sbb
daa
aas
movl
shrl
mov
jnp
repnz
das
push
outsl
mov
mov
and
dec
lods
or
push
xor
or
ret
mov
shll
push
and
arpl
jns
xchg
leave
xor
push
adc
test
fcompl
pop
and
outsl
dec
test
movsb
mov
jecxz
ficomps
and
je
sub
push
gs
iret
xor
sbb
push
insb
mov
adc
jl
lcall
repz
lret
adc
jmp
jbe
fildll
sub
or
mov
mov
fbld
jmp
fimull
iret
or
ljmp
mov
pushf
fistl
mov
aad
lods
sar
mov
xor
dec
sti
and
xor
jg
les
xor
mov
test
or
mov
ret
popf
jno
push
in
inc
repz
jle
dec
and
sub
lods
lcall
js
jp
pop
or
loope
pop
cltd
push
sbb
repnz
add
scas
arpl
or
gs
add
shll
inc
imul
dec
lahf
in
imul
cmpsb
or
xor
sbb
add
inc
push
shlb
xchg
out
inc
sbb
repnz
mov
les
pop
rcll
mov
mov
pop
loopne
jo
lds
aam
scas
rcrl
mov
mull
or
xchg
iret
mov
push
ds
xor
lcall
sti
and
mov
cmp
dec
inc
push
add
sbb
pop
stc
dec
das
repz
mov
mov
stos
loop
adc
push
stos
lods
in
cmp
mov
add
mov
push
mov
insb
push
test
adc
lea
and
dec
add
out
lock
push
leave
insb
scas
xor
ficoms
or
rolb
xchg
sub
repz
xchg
js
stos
jne
jl
leave
pop
dec
or
mov
xor
xchg
mov
mov
pushf
cmpsb
pop
inc
das
pop
fldt
lahf
jle
popa
xchg
push
call
pop
push
inc
add
outsb
enter
push
mov
iret
sub
mov
jb
fsub
ret
out
inc
push
pop
mov
sarl
icebp
daa
or
mov
stc
push
ja
shll
rclb
jno
sub
adc
test
jae,pn
push
sbb
lods
add
push
into
dec
jle
xor
xor
daa
mov
test
push
test
inc
sbb
xchg
xchg
pop
mov
arpl
fwait
pop
ljmp
inc
push
or
test
pusha
into
add
pusha
cmp
sub
xor
clc
xor
rcrl
push
pop
outsl
mov
inc
and
add
pop
lret
adc
add
and
fidivl
push
cli
xchg
sbb
int
data16
insl
sbb
and
mov
or
lcall
sbb
dec
rcll
sub
testb
xchg
test
inc
stos
adcb
das
call
mov
add
inc
push
les
es
mov
bound
aam
enter
xor
popf
add
xchg
nop
add
add
pop
mov
ja
adc
jno
popf
popf
jo
dec
sahf
jecxz
add
popf
dec
pushf
xchg
and
stos
fdivl
adc
enter
push
jecxz
lock
mov
gs
divb
arpl
sbb
cld
jmp
in
push
push
pop
sbb
pop
fwait
test
xchg
fs
xchg
jno
push
and
push
push
inc
es
je
inc
jno
loope
loop
mov
jno
sar
je
jp
outsl
ljmp
inc
jge
mov
jae
stos
pop
cmp
dec
add
in
insl
inc
mov
jb
fs
ja
pop
jo
arpl
lods
icebp
xlat
jae
sub
adc
aas
or
xlat
sar
jl
test
shr
pop
mov
in
push
push
mov
test
sub
movsb
data16
in
mov
cmp
out
jb
mov
push
dec
sub
adc
es
loopne
push
push
pop
xchg
mov
jb
jle
lods
lret
push
fdivr
sbbl
xor
push
mov
insb
mov
pop
jl
push
pop
movntq
jg
sub
dec
sti
dec
fsubrs
push
test
xchg
push
jb
or
sub
add
push
jae
lea
jmp
cmpsl
push
pushf
jns
mov
sbb
push
daa
sbb
nop
stc
imul
pop
push
mov
aaa
pop
mov
data16
ret
rcll
inc
cs
pop
mov
bswap
icebp
cmp
adc
insl
mov
mov
scas
pop
ret
popa
nop
fisubrl
mov
stos
decb
sub
push
push
ficoms
adc
ret
mov
xchg
inc
cmc
enter
shlb
andl
mov
add
cmp
pop
cmp
call
adc
inc
lahf
mov
scas
push
xchg
aas
mov
in
cli
mov
and
aam
jns
repnz
jae
pop
pop
mov
int3
jl
inc
es
push
data16
xorl
into
dec
test
pop
push
ret
mov
int3
push
and
pop
orl
add
incb
cmpsb
xchg
mov
xor
push
and
add
xchg
daa
push
mov
inc
mov
jns
dec
inc
adc
cltd
mov
mov
jb
ja
lcall
or
adc
stos
pop
adc
ljmp
mov
dec
push
ffree
loope
mov
jle
push
or
dec
sbb
ja
sbb
mov
mov
push
inc
fisubrl
push
adc
fiadds
push
mov
popf
fiaddl
lcall
insb
dec
in
int
xchg
mov
and
mov
sbb
jo
and
add
loope
in
push
mov
add
xchg
imul
jecxz
outsl
scas
sub
adc
ljmp
call
inc
push
out
out
and
jle
or
iret
iret
dec
fnstcw
cld
jb
xchg
adc
add
sbb
imul
push
test
stos
adc
lcall
xchg
mov
cmp
cmp
sbb
fdivs
mov
std
pop
scas
clc
sbb
inc
addr16
mov
add
mov
leave
lret
iret
xchg
xchg
ja
jne
xchg
imul
sarl
xchg
adc
scas
pop
xchg
jmp
test
cltd
add
xchg
mov
mov
jge
pop
lret
add
lds
out
sub
outsl
int3
mov
mov
jg
jecxz
fadds
aam
fisubrs
adc
imul
adc
push
xchg
fcmovbe
sarb
mov
fidivrl
lret
pop
repnz
mov
popf
inc
jmp
xor
xor
inc
test
mov
stc
in
sbb
sbb
mov
mov
xorl
cmp
xchg
jo
jmp
movsl
scas
cwtl
push
cltd
movsl
fistl
pop
clc
insl
sub
or
or
sub
cmp
or
jge
loope
outsl
jno
xor
dec
sub
and
or
mov
mov
aas
and
adc
cli
dec
cmp
pop
mov
push
cmp
sub
mov
adc
xchg
bound
rcr
xor
adc
sbb
pop
push
fcomp
sub
sti
push
jno
aas
sbb
pushf
add
pop
inc
cli
ret
dec
jo
jmp
push
ret
in
lods
sub
shll
xchg
push
test
pop
ss
cmp
fabs
cmp
adc
fistl
faddl
gs
mov
fstpt
dec
mov
inc
das
mov
inc
inc
xchg
mov
push
mov
aad
loopne
loop
fidivrs
lea
push
push
sti
mov
mov
test
push
mov
aad
xchg
inc
outsl
push
sbb
popf
xor
popf
shll
mov
insb
push
in
jnp
adc
pop
adc
out
gs
cmp
test
mov
enter
and
pushf
popf
test
push
ret
fnstsw
cmc
jns
add
mov
repnz
mov
out
lods
jge
push
mov
add
mov
sbb
add
lods
out
test
jmp
sub
mov
shr
call
adc
mov
mov
jno
in
cmp
add
movsl
jge
push
dec
mov
add
sub
xor
into
push
jecxz
xor
inc
scas
test
popf
clc
mov
and
insb
adc
sub
sahf
push
push
sbb
sahf
aam
and
add
push
xchg
cmp
cmp
cmc
addr16
jl
gs
sbb
inc
int
dec
sub
xor
xchg
push
mov
scas
mov
mov
adc
inc
xchg
call
mov
scas
ljmp
push
shll
mov
and
sub
mov
loopne
dec
xchg
dec
jmp
ja
loope
pop
in
cmpsb
fidivrl
mov
xlat
pop
arpl
imul
je
test
lods
pop
dec
jmp
cmp
enter
inc
cmp
sarb
or
dec
arpl
cld
jecxz
sti
add
repnz
jp
fists
inc
jno
ds
mov
pop
fidivrs
lcall
loopne
push
aam
das
int3
mov
test
push
sub
aam
or
sub
aad
cmpsb
ja
daa
sub
push
outsb
jmp
adc
ficoml
sub
stos
jnp
popf
popa
cmc
lds
imulb
push
and
xchg
dec
pop
shrb
lods
mov
loop
inc
dec
xor
ja
adcb
jp
mov
pop
data16
int3
jmp
std
or
in
xor
dec
xor
into
xchg
push
cmp
cs
sub
push
das
pop
inc
mov
dec
mov
repnz
imul
xlat
dec
outsb
dec
jl
jg
pop
cltd
cwtl
sub
inc
jmp
ret
pusha
arpl
aaa
mov
insl
andl
push
inc
mov
cmpsl
jl
adc
sub
add
out
sub
xor
mov
lret
mov
test
out
sbb
in
push
mov
push
jnp
sarb
and
sbb
stos
int3
pop
add
cmc
aad
sbb
or
movsb
ret
loop
iret
rorl
addl
pop
inc
leave
movsb
push
jg
orl
aad
scas
nop
pop
push
or
add
mov
push
or
and
int3
sarw
cmp
mov
sahf
add
sbb
mov
mov
bound
dec
clc
sbb
pop
repnz
jae
push
lret
xor
and
rorb
mov
inc
jp,pn
rclb
adc
in
test
out
xor
inc
xchg
push
jbe
push
cmp
movsb
add
mov
xor
sub
aad
pop
clc
fldenv
dec
cmp
into
jp
adc
mov
je
in
jg
hlt
and
lret
xchg
int
xchg
or
push
cli
xchg
jmp
xor
imul
test
into
rcrl
fmull
jbe
jp
es
jns
icebp
sti
stc
push
mulb
cli
pop
mov
xor
lahf
addb
sbb
push
sbb
addr16
jo
addr16
pop
jmp
rcrl
mov
gs
popf
lcall
ss
cs
add
out
mov
pop
subb
negl
cmp
lea
and
ficomps
in
inc
addr16
mov
dec
pop
pop
dec
test
cmp
test
mov
push
sub
data16
imul
push
mov
and
outsb
out
fisttpl
mov
pop
lretw
dec
int3
push
test
lea
test
loopne
nop
inc
cwtl
mov
xchg
popa
leave
push
jb,pn
or
jl
push
xchg
lcall
fbstp
scas
insl
inc
or
jns
jle
sbb
jns
mov
jg
jns
and
test
cltd
add
cmp
and
ret
out
xor
push
inc
ja
jmp
fcmovnu
mov
pop
mov
outsb
enter
stos
push
mov
je
imul
add
pop
aad
add
clc
xchg
jae
mov
mov
daa
adc
hlt
lea
lret
pop
xchg
int
aaa
sub
cmp
in
adc
jp,pn
stos
sub
adc
clc
rol
insl
icebp
out
sahf
xor
mov
flds
pop
je
jmp
xlat
cltd
push
in
and
mov
popf
repnz
or
and
cmp
and
jge
cmc
xor
and
and
sahf
enter
rcrl
ret
ds
pop
repnz
jnp
push
fs
mov
mov
xor
jbe
cwtl
pushf
sub
clc
jne
cmc
or
adc
adcl
in
push
addr16
mov
hlt
das
inc
inc
ss
sbb
subb
cmc
push
cs
dec
mov
cmp
hlt
mov
ja
ret
jbe
sbb
not
int
jne
repz
faddl
fwait
emms
xor
pop
sub
adc
adc
ljmp
adc
test
mov
pop
jg
xchg
xor
sub
out
bound
mov
mov
faddl
in
in
lea
pop
xor
dec
push
xchg
mov
jmp
fstpl
test
push
jbe
int3
movsb
cmpsl
xor
mov
sub
jmp
xchg
mov
and
adcb
push
jb
jp
adcl
cmpsl
lds
mov
inc
or
sbb
fldenvs
mov
outsb
mov
inc
lds
cmp
and
jbe
fimull
mov
mov
push
mov
gs
mov
cmp
cld
mov
repnz
out
arpl
jbe
mov
stos
imul
fistpl
loop
push
push
dec
into
push
icebp
lret
arpl
hlt
mov
jl
gs
jnp
hlt
in
mov
pop
lods
cmp
push
mov
fdivs
mov
and
insl
mov
xchg
sub
inc
test
out
lods
fs
push
pushf
repnz
mov
nop
push
aas
stos
pop
push
cmp
fs
push
dec
mov
mov
jb
jb
and
aas
xor
das
push
adc
iret
and
scas
lea
mov
popa
and
into
je
sbbb
lods
mov
lds
mov
cwtl
bound
mov
repz
mov
rolb
shrl
push
sbb
imul
pop
jge
sti
fnstsw
jno
add
leave
test
adc
mov
lahf
add
inc
push
mov
test
ss
adc
insb
test
in
mov
adc
addl
xchg
cmp
and
xor
es
ficompl
outsb
xchg
dec
mov
jbe
int
dec
mov
push
cmp
sub
loope
ss
mov
icebp
mov
into
pop
add
movsb
add
or
test
mov
push
jecxz
out
adc
jno
sbb
sub
test
nop
mov
cld
mov
jecxz
cmp
addr16
mov
and
popf
test
arpl
stos
mov
or
pop
scas
xor
push
add
push
outsl
out
xchg
push
std
sbb
push
adc
sti
inc
imul
push
daa
xchg
arpl
test
push
loop
movsl
dec
popf
adc
jg
jmp
xchg
sbb
push
repz
stos
jp
cmp
adc
lret
std
adc
pop
xor
mov
add
push
lods
push
ljmp
sbb
sub
adc
push
std
inc
lds
inc
mov
cmpsl
rcll
in
push
sub
cli
mov
mov
jmp
mov
insl
fnsave
repz
jns
mov
and
jnp
xchg
in
sub
dec
nop
jg
jne
loopne
lret
cmp
aam
dec
adc
nop
stos
jae
icebp
je
xchg
roll
clc
xor
int
and
sbb
add
jl
jg
push
jnp
test
pop
dec
inc
int3
or
test
jmp
bound
sbbl
push
push
clc
movsl
inc
pop
movsl
adcb
insb
jne
insl
lea
cmp
aas
lock
pop
dec
adcb
push
jae
ljmp
xor
leave
sbb
test
ljmp
dec
pop
mov
addr16
cmp
jae
sti
jmp
mov
das
cmp
mov
testb
xor
mov
xchg
push
lds
sbb
mov
inc
mov
dec
xorl
cmp
inc
or
xchg
mov
cmp
sbb
jae
mov
xlat
push
out
adc
lods
or
out
shll
or
iret
sahf
mov
mov
pop
cltd
inc
inc
pop
je
mov
inc
call
xor
xor
shll
insb
jo
in
jl
cmp
test
add
cmp
sbb
pop
arpl
out
mov
lods
cmpsb
mov
mov
mov
xor
pushf
fs
leave
or
push
push
jb
mov
xor
ljmp
outsl
or
or
sbb
insl
std
adc
mov
xor
andb
jle
dec
mov
pop
dec
sub
mov
hlt
push
mov
aam
cwtl
arpl
xchg
mov
fiaddl
imul
xchg
add
mov
cwtl
sub
lods
lret
push
pop
sahf
iret
pop
dec
loopne
stos
sbb
jecxz
outsl
jp
aaa
adc
imul
and
dec
adc
andb
jns
sub
fbld
push
mov
pop
mov
mov
push
test
push
pop
jnp
mov
mov
test
and
xchg
shl
xchg
pop
aam
xchg
push
je
shll
xchg
dec
mov
mov
out
inc
cmc
xchg
inc
pushf
xchg
mov
cmp
lea
cmovb
cmp
add
sahf
fnsave
and
push
sbb
arpl
loop
adc
lods
int3
pop
jne
lock
or
fsub
test
and
pop
push
clc
ror
sub
dec
sub
lods
lods
call
or
bound
xchg
popf
fs
call
dec
rcll
mov
stos
ss
and
scas
cmp
fwait
data16
push
sbb
inc
in
outsb
addl
cmpsl
aas
or
mov
dec
mov
xor
out
add
jne
pop
fsts
pop
cwtl
rorb
out
fpatan
mov
imul
mov
fisubs
xor
daa
cmc
popf
or
jge
sub
cltd
stc
sub
push
sahf
mov
or
testl
mov
mov
mov
adc
sbb
push
out
xchg
adc
push
pop
or
popa
xor
cmpsb
lds
sbbl
jmp
dec
stos
arpl
push
negb
mov
inc
jmp
pop
cmpsl
or
loope
es
aad
insl
cld
dec
or
jne
jns
dec
and
loop
imul
pop
xor
jl
fldcw
subl
rorl
fisubrl
mov
lock
sbb
out
dec
cmp
daa
add
test
pop
push
addr16
jne
cltd
and
inc
loopne
inc
int3
int
lret
push
cli
insl
push
cli
and
xchg
in
loop
mov
in
call
mov
dec
movsb
cmpsl
lods
rcll
mov
jns
pop
test
loopne
push
xor
mov
shl
mov
push
and
mov
lea
clc
xchg
sub
call
jnp
fbstp
push
js
call
js
push
mov
adc
stos
and
lahf
add
xchg
mov
aaa
xchg
sarl
mov
sub
ret
sbb
rcrl
test
adc
sub
sub
dec
inc
out
mov
inc
aaa
ret
aam
xchg
je
pop
cmp
lods
mov
in
push
sahf
push
mov
or
outsl
mov
jmp
ljmp
adc
inc
sub
outsb
jo
sbb
push
test
jmp
cmc
ret
mov
and
stc
push
jp
adc
popf
test
sti
xor
loopne
repnz
add
lods
ljmp
push
pushf
cmpb
pushf
int3
fwait
or
add
int3
cmp
jnp
mov
outsl
lret
cmc
gs
lods
mov
out
mov
test
xchg
outsb
rcr
ficoms
push
repz
mov
leave
mov
js
mov
pop
mov
leave
movsb
lcall
jmp
bound
xorl
hlt
daa
cmpsb
pop
pop
add
jg
das
adc
sbb
test
adc
push
das
scas
jnp
push
cmp
jecxz
mov
or
xchg
test
and
mov
pop
negl
loop
ret
lea
or
dec
sub
orl
add
and
or
mov
cs
out
mov
sahf
ljmp
stc
pop
jle
in
dec
cmp
arpl
sub
pop
stc
add
push
mov
jnp
aas
inc
dec
sub
xlat
in
lea
pop
mov
lret
insl
jg
sbb
push
out
popa
jbe
mov
and
add
ds
iret
and
dec
ret
adc
out
adc
cmp
enter
lcall
pushf
ret
pushf
mov
mov
andl
rorl
cwtl
xor
adc
pop
and
sub
cmpsl
std
xchg
push
mov
fwait
push
lahf
mov
mov
xor
sbb
add
leave
pushl
adc
push
ret
popf
sti
dec
sub
add
inc
cmp
fisubrs
adc
data16
sbb
sub
add
adc
mov
movsl
pop
sub
cmpsb
insb
push
lock
sti
sbb
das
jb
and
bound
sbb
arpl
sbb
dec
and
fcoms
pop
or
jbe
int
and
mov
and
dec
and
ficompl
dec
jns
popa
mov
pop
rol
stos
ljmp
scas
xor
nop
sarl
addr16
push
pop
das
inc
fucomip
insl
outsb
inc
pop
inc
pop
adc
dec
jle
aas
or
jmp
sub
out
push
adc
sbb
dec
insb
mov
iret
out
and
add
cmp
nop
movsl
mov
xchg
xor
daa
test
jae
push
std
cltd
push
das
and
cmp
and
into
lret
jg
lds
scas
sub
mov
mov
bound
leave
xchg
sti
in
xor
jl
pushf
or
mov
mov
mov
sub
or
cvtpi2ps
repnz
daa
aas
push
jmp
xor
push
mov
mov
mov
scas
mov
fsubs
cs
fistl
sti
pushf
jnp
hlt
xchg
cmpsl
outsl
mov
cmp
xchg
ja
cli
pop
popf
mov
cmp
sub
mov
fiadds
push
and
pop
cs
test
clc
mov
xchg
enter
mov
gs
loop
flds
inc
pop
mov
jae
scas
fstp
insl
icebp
xchg
cld
mov
test
repnz
fwait
jb
inc
scas
shll
mov
xchg
inc
ret
add
pusha
or
pop
imul
mov
inc
xchg
sbb
jg
push
sar
mov
divl
adc
out
sub
and
mov
lds
cmpsl
inc
out
call
pop
push
lahf
fildl
add
lret
xor
jbe
dec
push
lahf
iret
aad
aad
fnstenv
imul
jl
stos
call
add
and
filds
jo
inc
dec
das
pop
dec
jl
or
rclb
mov
call
mov
test
sbb
mov
inc
jns
adc
lods
js
in
dec
fistpl
mov
nop
sub
pcmpeqb
aad
jnp
sub
leave
inc
pop
enter
push
mov
cmp
into
push
pop
aas
test
scas
sub
test
getsec
js
or
negl
pop
xchg
out
pop
push
sbb
sahf
add
out
imul
and
daa
bound
gs
mov
inc
sub
xlat
je
idivb
mov
add
xor
cmp
movsl
dec
in
push
xor
pusha
inc
push
into
xor
imul
not
mov
xor
sub
pop
out
fdivs
sbb
popf
lock
ficoms
or
mov
inc
inc
xchg
mov
test
cmp
cmp
push
pop
enter
cmc
pop
arpl
inc
lret
ret
sub
add
mov
ret
sub
or
insb
shrb
popf
mov
inc
dec
adc
aas
mov
adc
insb
ljmp
shll
das
jp
xchg
add
pop
cmp
leave
adc
in
psubd
dec
mov
adc
sub
ret
into
mov
mov
jb
cmp
loope
push
xchg
mov
bnd
jns
inc
or
dec
jle
xchg
aam
xchg
fistl
push
andb
cltd
sbb
pusha
sbb
mov
mov
mov
mov
push
shll
roll
xor
lods
inc
push
add
les
jnp
add
roll
adc
call
pushf
push
add
ret
clc
jle
out
dec
mov
adcb
jns
cmpsb
push
arpl
sub
leave
pop
loop
mov
imul
adc
push
movsl
xor
mov
test
scas
divb
xor
outsb
inc
sti
mov
pop
cmp
mov
push
xchg
in
adc
mov
mov
lcall
mov
ret
pushf
pop
adc
icebp
dec
lds
cltd
mov
jns
fwait
ret
xchg
push
das
insl
push
adc
loope
stc
xlat
mov
dec
mov
fimull
cmp
mov
pop
push
je
or
mov
jecxz
sbb
clc
popl
insl
lock
dec
push
sub
sub
not
cmp
jge
and
fwait
ret
dec
push
or
les
xor
shll
push
adc
fdivrs
int3
scas
cmp
dec
adc
imul
aam
pop
xchg
lret
fcompp
add
mov
adc
sbb
mov
dec
gs
or
daa
pop
sub
divb
push
sbb
xchg
mov
sarl
sub
or
subl
cmp
xchg
inc
adc
push
mov
call
push
js
push
sbb
popf
shlb
xchg
sub
leave
fmulp
repz
in
cmp
mov
inc
and
dec
aas
jmp
or
imul
inc
ret
out
push
xchg
rcrl
mov
xor
icebp
aaa
dec
call
or
call
push
jae
push
xor
inc
push
push
cmpsl
setg
xor
pop
sbb
sbb
leave
sub
out
and
mov
xchg
xor
ret
xor
jns
ficoms
imul
push
mov
fnsave
outsb
out
sub
xor
or
add
xchg
inc
shrl
mov
mov
jae,pt
xor
jno
xor
insb
mov
dec
push
popa
iret
or
sbb
rol
and
cmpsb
lahf
jae
xchg
mov
dec
xchg
fsts
popa
sbb
imul
sub
in
and
je
and
sbb
pusha
jmp
xchg
or
dec
cmp
ja
addr16
add
inc
mov
pushf
inc
mov
sub
test
jne
scas
sahf
xchg
jo
repz
js
or
repnz
adc
mov
js
sub
ret
xchg
push
dec
fcompl
int
pcmpeqd
testb
lock
jle
aam
pop
mov
adc
mov
pop
inc
sbb
loopne
pop
adc
arpl
out
and
push
cltd
ds
or
lahf
outsl
or
lods
push
jbe
pop
xchg
sbb
test
add
mov
addr16
sbb
dec
inc
mov
mov
pop
jmp
adc
ret
sbb
push
into
out
addr16
inc
lahf
cmpsl
rcll
dec
adc
loope
xchg
xor
pop
dec
or
xchg
xor
and
mov
xor
sbb
xchg
sti
mov
aam
test
adc
nop
fwait
adc
pop
repz
cmp
and
out
push
add
lahf
lret
push
jp
fildl
mov
xchg
mov
shl
in
loop
js
movsl
mov
jne
jp
ja
xorl
push
mov
mov
mov
lret
outsb
fdivp
dec
sub
xchg
rolb
js
psrlq
fadds
stos
aad
lock
into
add
jbe
sbb
inc
pushf
jo
xor
mov
sub
je
or
or
movsb
add
enter
pop
xchg
insb
cli
pop
test
push
movsb
cmp
or
hlt
lahf
jns
sbb
inc
cwtl
jge
orl
lcall
iret
jp
mov
ret
cmp
or
repz
and
sub
mov
test
cltd
pop
cmp
jecxz
fcom
push
pop
ja
and
lcall
sarl
xor
lods
jmp
push
mov
jge
pop
adc
mov
mov
xchg
imulb
dec
call
out
sub
push
jbe
imul
dec
fdivs
or
cmpl
push
xor
or
nop
xor
and
dec
loop
andl
and
lods
push
pop
or
mov
sbbl
pop
sti
lds
nop
jp
pop
fbstp
in
pop
and
xor
pop
aam
daa
adc
sarb
adc
sub
fdivr
call
popa
cmp
add
arpl
aad
movsl
mov
sbb
jbe
cmpsb
xchg
test
imul
add
call
pop
xor
add
jge
and
add
mov
inc
mov
out
popf
or
je
push
in
and
jb
sub
mov
lock
push
pushl
insb
cmp
fisubrl
filds
adc
ljmp
and
stos
jnp
push
lret
mov
or
les
pop
mov
xchg
mov
mov
push
adc
fs
push
fmuls
xchg
jmp
mov
or
bound
mov
cltd
mov
mov
xlat
mov
jecxz
sub
sbb
or
and
pop
jo
lds
fxch
aaa
ficompl
xchg
inc
pop
sbb
hlt
inc
mov
ljmp
out
clc
mov
lea
repz
imul
rclb
ret
jmp
cmp
add
mov
mov
push
cmpsb
fimull
ss
push
daa
rcrb
sbb
sub
fcomi
mov
inc
outsb
mov
mov
mov
jle
and
lods
dec
popa
add
sub
fistps
jnp
jb
and
loop
mov
sub
lods
push
clc
cld
push
xor
sti
sbb
dec
aaa
int
out
pusha
out
fs
pop
lahf
adc
dec
pop
push
test
jg
xor
outsl
testl
clc
jecxz
adc
imull
pop
mov
test
into
jae
push
lcall
mov
int3
gs
mov
or
stos
fmull
testl
and
pushf
in
jp
je
into
cmp
push
adc
jl
lret
idivl
js
js
jne
jge
popf
and
test
pop
ds
outsl
inc
push
jle
xchg
out
jbe
dec
xchg
in
dec
pop
xchg
repz
lcall
push
lds
mov
and
xor
insl
mov
sub
repnz
out
dec
in
notb
mov
negb
pop
hlt
or
mov
daa
or
imul
sub
jmp
xchg
out
pusha
enter
fistpl
add
cmpsl
clc
pop
sub
fcmovne
inc
mov
push
mov
popa
adc
cmpsl
fnstenv
fwait
jne
cmpsl
rcrb
jo
dec
xchg
shll
pop
mov
dec
out
imul
xor
xchg
insb
stc
sub
cmp
fdivs
daa
cld
int3
lret
inc
mov
xor
sahf
xchg
insl
pop
clc
and
std
add
dec
xchg
lods
test
cld
xorb
gs
in
daa
sbb
fldcw
mov
rorl
rorb
leave
stc
pop
adc
add
lret
jno
sub
pop
mov
xor
or
cmpsb
fcomps
iret
dec
jo
int
rcrb
inc
dec
nop
add
jmp
hlt
cld
movsb
adc
sbb
sbb
cmc
mov
or
fisubl
dec
inc
outsl
mov
rolb
jp
jo
xor
xchg
stos
fcmovbe
or
sbb
push
xor
dec
data16
dec
inc
pop
arpl
mov
dec
jno
js
mov
fadds
jae
fs
ficoms
jb
outsb
call
ja
repnz
sub
pop
shlb
cmp
xchg
jg
ds
add
lods
ret
dec
inc
dec
xor
and
push
sub
movsl
loope
popa
mov
push
add
pop
pop
sbb
pop
hlt
out
rcrb
adc
lcall
mov
pop
sub
pusha
mov
mov
aad
mov
cs
out
add
jnp
pop
out
sbb
imul
pop
lret
cmc
das
lcall
mov
dec
xchg
pop
ficompl
dec
ret
mov
or
mov
das
dec
pop
out
cwtl
rorl
push
ljmp
gs
mov
orb
insb
cmpsl
mov
xor
pop
andb
mov
mov
popf
stos
xor
hlt
dec
out
dec
jge
js
xor
mov
imul
hlt
arpl
push
out
push
mov
cs
loopne
sbb
fucomp
out
rcl
xchg
movsb
adc
stos
sbb
rclb
js
mov
and
aaa
lock
xchg
mov
sbb
mov
in
push
ja
popf
enter
call
add
ficoms
xchg
ljmp
outsb
dec
and
sbb
pop
sbb
sub
inc
adc
arpl
jge
mov
xchg
pop
xor
data16
bound
outsb
and
movsl
icebp
inc
lcall
pusha
int
adc
inc
xlat
inc
mov
je
dec
fdivrs
aaa
fcmove
jge
dec
aaa
add
adcb
fwait
rcrb
cli
vphaddwq
adc
cmp
or
mov
jmp
jno
fisttps
adc
cmp
nop
stos
enter
rcrl
add
dec
push
out
loop
dec
inc
stos
jp
lret
inc
adc
add
cld
or
sub
je
sti
jae
mov
add
or
sahf
mov
test
pusha
out
and
scas
lods
sbb
test
pop
mov
sbb
mov
adc
mov
or
add
mov
in
arpl
vpsubq
les
ja
push
aad
xchg
arpl
sub
xchg
mov
fdiv
sti
xchg
aad
push
enter
mov
xlat
xor
scas
sub
xor
js
add
cmp
repnz
inc
les
inc
movsl
adc
push
push
sbb
fstpt
nop
xchg
push
push
push
scas
sbb
cltd
mov
and
ds
pop
rclb
or
jge
lock
adc
push
cs
mov
adc
in
pop
mov
je
repnz
scas
xchg
sbb
aam
gs
aam
mov
or
lea
xchg
push
or
call
ficompl
outsb
repz
add
mov
pop
adc
inc
cltd
jmp
call
sbb
test
cs
test
lahf
push
push
sub
mov
popa
jns
mov
pop
addr16
add
mov
inc
xchg
push
jnp
pop
shll
cmpsl
aas
clc
inc
outsb
cld
or
xchg
lcall
xchg
pusha
jno
ds
sub
and
pop
adc
dec
jne
mov
call
adc
incb
xor
push
mov
mov
cmc
xor
fldln2
adc
fimull
inc
mov
inc
in
aam
ja
aam
sbb
mov
out
cltd
bound
jne
test
call
mov
stos
std
sub
ljmp
mov
mov
add
and
mov
clc
shrl
mov
push
adc
mov
scas
xor
rcrb
inc
call
sti
push
push
and
or
xor
out
push
test
dec
je
inc
insl
and
dec
stos
mov
xor
aaa
adc
push
jge
mov
fldt
in
add
ds
leave
hlt
nop
out
cltd
inc
lds
dec
movb
cwtl
sub
lods
mov
gs
and
ja
pop
jmp
push
scas
xor
into
or
cmpsb
jno
push
mov
orl
pop
fs
daa
fisubrs
gs
pop
int3
and
cmpsl
add
lock
and
aad
push
in
inc
push
and
in
mov
and
rcll
cmpsb
mov
and
cmc
mov
xor
inc
stos
lds
add
push
xchg
fnstcw
jge
jne
jns
shrb
ss
jge
enter
push
pop
aaa
pop
lock
inc
mov
pop
in
jns
pop
fcomps
xlat
cmpsl
sub
negl
cmp
sbb
xchg
and
sub
push
dec
call
jno
lcall
jl
sub
repz
jmp
sub
hlt
add
lds
inc
in
pop
ja
push
sbb
cmp
add
nop
call
xchg
lret
lock
mov
call
and
push
enter
mov
mov
sub
xor
andb
cmpsb
xchg
cmp
out
adc
adc
daa
pop
repz
je
sub
mov
mov
pop
imul
lods
popa
add
pop
or
mov
pop
cmp
dec
imul
jnp
insl
int
mov
dec
mov
xchg
mov
shrl
cmp
scas
cmp
rorb
jecxz
mov
ds
pop
add
dec
lcall
js
mov
gs
loope
daa
test
inc
pop
pop
daa
stos
lock
cmp
push
jb
push
scas
dec
xchg
pop
ret
jo
and
out
shlb
mov
fcomps
xor
xchg
ljmp
gs
adc
aam
movsl
push
outsb
aas
cmp
dec
push
jp
imul
fs
in
popa
repnz
insl
stos
je
jmp
cmp
popa
sbbl
jno
or
data16
sub
push
mov
dec
sub
or
roll
lds
movsb
push
sub
push
add
ret
hlt
popf
jl
sub
leave
lock
out
cmp
movsb
nop
jecxz
pop
xor
adc
cmovae
iret
mov
lods
rcll
aam
int
jbe
mov
mov
xchg
cltd
sbb
loope
or
icebp
inc
xor
leave
mov
ds
xchg
enter
mov
pop
cmp
xchg
sbb
js
mov
or
cmc
outsl
fcmovnu
jnp
add
cltd
shlb
mov
out
movswl
xchg
xchg
adc
pop
lock
mov
lret
mov
out
xchg
xor
and
cmp
xchg
lret
insl
and
mov
gs
lret
sub
mov
popf
sub
mov
pop
jp
sti
adc
lds
mov
fisubl
jg
fistpll
outsb
push
pushf
not
sub
lock
pop
call
int3
cwtl
pusha
std
aam
push
lret
xchg
cmp
xor
sbb
addr16
and
mov
adc
pop
testb
pop
gs
pop
addr16
cli
adc
cmp
or
in
mov
fdiv
add
and
xchg
jbe
mov
push
and
adc
sti
cmc
fs
add
jg
iret
cmp
in
mov
rcll
mov
fimuls
or
or
fcoml
dec
cltd
scas
int3
lret
hlt
push
adc
inc
add
jb
out
jle
mov
incb
jae
outsb
mov
fwait
sahf
pop
push
inc
in
icebp
jbe
inc
mov
icebp
test
leave
sbb
clc
sbb
mov
cmp
test
jns
fstl
pop
ret
in
test
or
icebp
push
in
dec
cmp
pop
mov
mov
outsb
mov
jnp
sub
sbb
in
clc
or
xchg
mov
xchg
jo
in
cmp
rcll
outsl
fsts
push
mov
mov
ucomiss
divb
lcall
inc
push
dec
test
jmp
outsb
imul
in
xor
rorb
stos
xchg
cld
sub
mov
jb
jo
fldcw
data16
lods
shrb
ds
jo
mov
mov
pushf
cmpsl
dec
add
jge
divb
jb
insl
sub
dec
mov
fwait
add
push
arpl
adc
in
decl
dec
jecxz
mov
insb
mov
icebp
xchg
out
sub
fdivrs
es
imul
pop
in
lds
test
mov
xor
sbb
mov
mov
adc
dec
xor
sbb
dec
lods
call
scas
ficoml
push
scas
divl
and
mov
popf
dec
sbb
mov
arpl
or
movsb
sub
mov
add
iret
push
imul
adc
xorb
cmp
push
xchg
push
loope
fildl
ljmp
pop
cmpl
adcl
test
cmp
xor
jb
mov
roll
scas
fcmovu
ds
in
pop
pushf
scas
in
sub
inc
jo
inc
hlt
cmovno
fidivs
mov
imul
repnz
jmp
push
ss
in
cltd
inc
mov
out
pop
mov
ljmp
xchg
lock
sub
xor
jnp
nop
mov
in
jle
adcl
cmpsl
icebp
fnstcw
inc
add
dec
imulb
add
jg
xchg
mov
sub
push
lret
or
dec
and
adc
jecxz
jg
pop
into
inc
comiss
jno
ret
push
mov
test
scas
aas
mov
iret
popl
fucomp
inc
adc
sarb
xchg
jg
subl
setno
aam
divb
icebp
rcrl
push
mov
enter
sub
adcl
or
adc
add
and
cltd
imul
test
push
jge
popa
cmc
pop
jmp
jo
rclb
mov
notb
aad
jp
adc
push
mov
pushf
add
pop
pop
insb
aad
stc
and
ficoms
cmp
pop
pop
pop
shlb
adc
cwtl
out
mov
out
mov
pushf
xor
push
lods
outsl
mov
push
stos
mov
scas
inc
push
mov
outsl
scas
lret
mov
pop
dec
mov
loopne
out
mov
repz
int
xchg
or
ds
jbe
pop
dec
jecxz
lret
jg
push
les
dec
out
fwait
push
dec
jnp
push
sub
adc
fcompl
dec
sbb
jl
pop
inc
fidivrl
repnz
xacquire
sub
push
dec
shrl
mov
lods
push
aaa
test
jle
cli
xchg
xor
inc
push
insl
imul
cmp
sub
mov
dec
cmp
out
pop
inc
dec
push
push
pop
ss
xchg
das
add
test
and
xchg
js
fbld
sub
or
dec
rclb
je
xchg
jmp
out
setne
add
jmp
leave
daa
inc
jno
out
cltd
mov
mov
in
mov
add
adc
das
jp
lea
subb
sbb
movsb
test
aad
nop
fwait
sbb
fists
mov
inc
mov
and
fisttpll
lret
aad
xor
xor
iret
in
test
imul
mov
mov
pinsrw
es
lods
mov
cltd
shll
push
jmp
mov
lock
cmp
pop
idivb
lret
mov
jno
pop
lock
add
repz
imul
xchg
shll
push
push
mov
jl
adc
imul
pop
cli
jp
jb,pn
mov
ret
adc
les
pop
insb
loopne
call
and
call
popa
adc
popf
insb
and
mov
sbb
pusha
out
xchg
incl
mov
popa
sub
mov
jno
aaa
dec
fsubl
push
ss
cld
fiadds
cmpsb
shlb
mov
shrb
mov
fistl
iret
adcl
imul
inc
fidivrl
mov
nop
add
xor
jo
push
fadds
dec
mov
sub
ret
sbb
pop
mov
ss
sub
mov
test
pop
mov
and
xor
cmp
xchg
test
mov
scas
mov
mov
subl
cmpsb
sub
je
pop
dec
inc
cmp
ror
jo
pushf
xchg
cmpsb
pop
pop
cmp
test
mov
insl
xchg
mov
sbb
pop
mulb
adc
push
aam
sahf
insl
scas
adc
jle
mov
sarb
jle
dec
inc
js
rolb
imul
ss
dec
aaa
mov
pop
daa
lods
movsl
xchg
push
loop
xlat
sbb
outsl
bound
sbb
mov
pop
test
lods
xor
pop
addr16
mov
sub
jg
fstpl
push
out
push
cmp
pop
xor
cmp
ja
aam
push
lock
xchg
and
iret
mov
lds
out
sti
sarb
cmp
jg
pop
inc
outsb
cld
inc
push
adc
aas
lcall
lea
sbb
adc
dec
outsb
je
in
mov
js
sub
fimuls
stos
add
pop
shlb
lea
and
mov
stos
test
jbe
divl
or
mov
mov
inc
mov
test
in
sahf
adc
jns
jge
push
push
adcb
xchg
lods
in
fstl
inc
pop
ror
ds
lret
fcmovnbe
lods
pop
dec
cmp
mov
and
cli
mov
push
int
repnz
xchg
es
xor
enter
fists
popf
push
incl
jae
mov
lods
xchg
xor
dec
lcall
adc
scas
daa
test
loop
push
popa
wrmsr
loop
xchg
and
testl
mov
and
in
lcall
pop
cld
xlat
cmpsl
xchg
outsl
xchg
dec
xor
push
or
push
sbb
lods
ss
push
pop
sbb
push
jl
mov
shll
xor
jne
cwtl
outsl
jnp
cmp
jge
or
mov
aas
in
push
insb
fldl
lcall
div
ja
mov
cmpsb
mov
pop
push
sbb
cld
add
es
aas
push
dec
sbb
loop
dec
roll
bound
jl
sbb
jle
mov
cmpb
add
or
out
pop
aam
mov
push
aad
sbbb
sub
mov
pop
mov
pop
mov
pop
sbb
xor
rol
cwtl
rcll
testb
mov
mov
jno
movsl
clc
aam
xchg
or
cmp
mov
insl
dec
enter
fsubl
and
movsl
popf
sbb
mov
pop
xchg
xor
orb
insl
sbb
sbb
insl
inc
addr16
xor
sbb
outsl
stc
xor
inc
push
inc
packsswb
loope
dec
mov
mov
loop
cmc
pop
dec
and
jmp
lret
mov
out
outsl
mov
in
mov
lea
aam
mov
je
mov
mov
or
sbb
mov
and
adc
movsl
jle
inc
pop
shlb
stos
xchg
gs
jecxz
arpl
out
cld
mov
mov
daa
cmp
sbb
xchg
cmpsb
lds
fcoml
cmp
repnz
and
inc
dec
mov
ret
cmpsl
andb
mov
out
fsubl
sbb
pop
stos
lret
fcoms
mov
inc
mov
add
dec
mov
push
add
push
and
xor
js
in
jl
mov
loopne
das
dec
jb
jb
mov
testl
pop
divb
pop
cmpsb
mov
hlt
aam
ret
clc
jmp
and
stos
imul
fs
jnp
push
fs
mov
std
adc
push
pop
outsb
lret
dec
mov
test
push
lret
shl
dec
and
test
punpckhbw
mov
push
sbb
cmp
push
js
ficoml
std
and
mov
mov
incb
jmp
xchg
sub
mov
fsubp
into
out
pop
daa
in
sub
adc
jnp
daa
cmpsb
dec
add
cmp
popa
inc
or
dec
jecxz
stc
fbld
pop
mov
cmp
adc
lods
jge
movsb
push
mov
push
push
sbb
sbb
push
cmp
into
sub
stos
scas
test
pop
pop
sub
sbb
sti
jns
or
shlb
insb
cmp
popa
jnp
pop
jb
subl
mov
jnp
sbb
dec
mov
mov
outsb
jae
jg
sbb
sbb
pop
enter
mov
push
sub
cmp
xchg
jb
mov
iret
cmp
cmp
mov
cs
push
outsl
test
sbb
into
shlb
lea
andb
xchg
pusha
movsl
leave
je
xor
adc
mov
sub
das
mov
outsl
inc
xchg
lret
xor
nop
xchg
loop
popf
push
add
pop
and
popf
xchg
pop
fldcw
push
pop
adc
sti
push
jnp
hlt
mov
aas
fsub
cmp
xchg
cmp
adc
add
xor
or
leave
in
inc
mov
dec
fldt
lret
mov
pushl
xor
leave
cmp
insl
hlt
xor
jmp
shlb
dec
sbb
outsb
adc
mov
cwtl
xor
sbb
rcr
loopne
jns
xor
lret
push
aas
sbb
push
popa
repnz
cmp
mov
rorb
out
mov
aam
and
mov
gs
mov
stc
in
jecxz
imul
inc
sub
cmp
mov
jge
add
xor
inc
sbb
push
lds
stos
ficomps
push
mov
fcoml
push
aam
test
jecxz
ja
mov
popa
jns
and
push
mov
dec
hlt
xchg
std
outsl
cmp
out
fwait
enter
pop
jle
arpl
sbb
fisubrl
mov
xchg
dec
jg
push
dec
mov
sbb
push
out
test
sbb
dec
cwtl
movsb
icebp
sti
xor
push
xchg
orl
add
test
iret
xchg
and
and
mov
mov
stos
push
xchg
pop
nop
inc
popa
push
fs
fwait
sub
pop
gs
fmuls
outsb
xor
pop
cmpsl
mov
rclb
adc
cli
push
mov
push
fmuls
ret
and
mov
mov
xor
cs
lock
inc
mov
adc
int3
mov
push
mov
pop
fiaddl
and
adc
shrl
add
add
imul
rcr
fstl
sbb
and
test
mov
adc
fildll
or
repz
add
stos
testl
aad
sbb
lock
lcall
test
mov
jmp
sub
les
xchg
lahf
push
inc
and
push
xor
gs
pushl
shlb
int
filds
mov
and
pushf
pop
cmp
aad
push
or
imul
das
xor
es
into
icebp
ret
xorb
xor
int3
in
aaa
lret
orb
int3
push
and
jno
xor
shrb
pop
mov
inc
nop
mov
pop
in
loop
outsb
movsb
int
sub
pop
mov
scas
mov
pushf
or
shrb
lahf
cmp
loopne
xchg
testl
sahf
insb
sbb
xlat
sub
cmp
sub
pusha
mov
add
jae
hlt
lock
or
addr16
jp
mov
ss
into
je
rol
sbb
aas
ss
popf
add
push
addr16
jp
insb
ljmp
sub
cmp
add
es
mov
das
scas
fistl
pop
jae
inc
into
scas
sarb
fildl
and
cmp
mov
add
and
xlat
outsb
push
pop
std
int
push
ret
add
xchg
pusha
insl
frstor
loop
int3
cmpb
push
leave
pusha
add
pop
jbe
jnp
xor
iret
ja
popf
add
or
cmp
xchg
cmc
mov
push
test
jecxz
ficoml
dec
les
orl
sbb
mov
rcrl
or
out
sbb
sbbl
pushf
push
xchg
jno
jle
add
nop
push
imul
lods
and
push
pusha
imull
dec
pushl
push
xchg
mov
fwait
mov
jge
sub
sbb
lahf
js
sub
or
pop
mov
mov
rorl
out
lret
loope
mov
xchg
sub
jbe,pn
ret
int3
sbb
mov
pop
ljmp
cs
out
cmp
cmp
push
out
push
sub
aam
addr16
arpl
lahf
push
xchg
sub
addr16
push
mov
dec
int3
and
add
stos
lods
iret
pop
pop
aas
pop
lds
imul
mov
stos
icebp
jl
aam
std
ss
add
addr16
out
cmp
ret
pusha
and
adc
cld
mov
xor
cltd
pop
pop
loopne
mov
add
ret
mov
cmp
dec
sti
iret
decl
sti
inc
pop
out
xlat
in
mov
mov
pop
gs
push
lea
xorb
jge
dec
cmp
scas
mov
sti
imul
ja
outsl
inc
sub
add
cli
icebp
test
mov
aam
je
repz
cs
sbb
lahf
fprem1
dec
fs
push
jno
test
push
push
int
adc
sahf
movsl
dec
aaa
in
adc
mov
scas
pop
scas
mov
ss
jle
sbb
jecxz
clc
lahf
fdivp
in
out
orb
jecxz
jae
push
mov
lods
test
arpl
aas
lcall
xor
pop
mov
int
icebp
lcall
cmp
cmpsb
sub
iret
or
fnstenv
scas
push
push
mov
mov
cwtl
scas
ret
testb
fisubrs
or
call
push
sbb
and
jp
jl
iret
or
ljmp
cmp
push
jb
nop
insl
les
xchg
rcrl
or
push
mov
fstl
dec
cwtl
adc
shll
cmp
mov
jnp
add
sti
cmpsb
sbb
std
fs
xor
dec
mov
xchg
mov
sbb
outsb
lret
orb
cmp
xchg
clc
jno
aam
ja
inc
mov
dec
jmp
lods
pop
sahf
loopne
cmp
jbe
dec
filds
mov
test
jge
fwait
imul
pop
enter
addl
dec
jns
fmul
pushf
insb
add
sub
pop
pop
mov
cwtl
std
fstp
insl
dec
dec
jno
out
sti
adc
scas
sahf
daa
aad
push
jp
mov
dec
mov
xor
push
repnz
pop
or
in
push
repnz
and
mov
xchg
or
pusha
push
push
into
lods
pop
adc
dec
add
pop
cld
pushf
add
add
pushl
add
lock
push
and
jae
sti
loopne
lcall
add
or
lahf
mov
adc
push
dec
mov
loopne
mull
cmp
inc
cmp
mov
aam
dec
mov
xchg
loop
mov
rorl
dec
sub
fsubr
daa
xchg
ret
stos
shrl
test
sbb
xor
stos
stos
mov
aad
jae
insb
sub
sbb
fsub
addr16
xor
mov
outsl
dec
shrl
and
test
rcrb
pop
sbb
insb
xchg
test
call
push
lret
rclb
call
lods
jno
add
jle
jno
jbe
mov
inc
in
xor
lret
filds
xchg
jge
lcall
inc
test
cmp
mov
loopne
pop
dec
cmp
pushf
or
int3
cmp
xor
adc
inc
adc
xor
and
pusha
adc
pop
lds
loopne
aas
in
gs
in
and
or
fisubl
lret
jecxz
sbb
xor
aad
dec
inc
mov
jl
lea
cmc
pop
movsl
xor
mov
and
xchg
mov
xor
fs
outsb
sub
pushw
nop
cmp
and
and
mov
xlat
mov
or
cmc
fstpl
xchg
jmp
xchg
cld
xchg
fdivrs
jb
and
mov
call
imul
outsl
or
lcall
push
jl
add
sub
cs
push
and
push
mov
addr16
les
sbb
iret
std
mov
mov
xchg
push
out
insb
jne
ss
lea
and
clc
xor
mov
movsb
xchg
out
inc
or
mov
push
sbb
test
ficoml
pop
xchg
cmpsl
ss
add
repz
pop
ljmp
mov
leavew
incb
mov
pop
adc
xlat
stos
mov
sbb
into
pusha
push
pop
adc
add
out
lock
outsl
cmp
bound
stc
out
fnstsw
cmp
cmp
or
adc
lcall
insl
sbb
inc
out
es
je
xor
sbb
sbb
mov
cmp
pop
stos
xor
add
in
xchg
jo
fldcw
popf
stos
stos
jo
xchg
aaa
lea
pusha
ss
sti
inc
inc
push
popf
mov
pop
popa
lahf
aad
xchg
aas
sbb
testl
nop
js
pop
inc
mov
pop
data16
push
shrb
push
lea
das
adc
icebp
cmpsl
lods
sub
sbb
loop
pop
cmc
orb
mov
mov
ljmp
lea
int3
mov
popa
in
inc
pusha
sub
cmp
or
xchg
iret
sub
pop
jl
cmp
aam
xchg
add
xchg
addr16
std
outsl
push
jl
cwtl
inc
ret
ja
movsl
jmp
add
push
cmpsb
leave
pop
jecxz
and
sub
cmp
mov
inc
dec
lret
rcrl
push
std
lea
test
xchg
inc
mov
add
pop
and
outsb
in
repnz
xchg
sub
pop
test
pop
jne
sub
pop
mov
mov
jl
or
andb
js
mov
pop
and
cli
sbb
jl
filds
cmp
lods
xor
pop
mov
pop
in
xor
dec
mov
cmp
pop
push
and
xchg
or
popa
pop
pop
dec
and
adc
xchg
outsb
mov
mov
out
dec
cmp
xor
in
mov
sbb
xchg
out
push
outsl
add
jb
addr16
mov
add
mov
or
lock
push
jnp
lock
pop
sub
dec
sarb
mov
mov
enter
push
subb
sub
cmp
out
fldenv
jno
into
imul
sub
ficoms
mov
sarb
push
pop
mov
inc
add
mov
cmp
xchg
stc
fwait
test
rcrb
xor
lods
popf
push
sbb
cmp
rclb
aaa
inc
cmp
aas
lcall
sub
add
pop
and
push
pop
clc
rcrl
lahf
cmc
adc
int3
and
push
xchg
and
incl
jbe
add
mov
loopne
push
mov
xorl
xor
push
pushf
sub
cmp
cmp
mov
outsl
push
or
rcrl
adc
dec
pushf
jmp
scas
pop
fs
sbb
xchg
aad
sub
movsb
loopew
jecxz
xor
cmpsl
jmp
mov
push
cmp
mov
out
adc
inc
add
sbbl
btc
rorb
jne
aam
add
sahf
loopne
and
xor
in
pop
out
inc
mov
loopne
xchg
xchg
pop
or
sub
jno
out
addr16
repz
and
nop
jbe
jns
es
pop
aam
fwait
dec
pop
loope
fidivrl
xor
mov
lcall
or
sbbb
inc
or
enter
push
jno
aaa
rcll
cltd
jg
pop
inc
std
push
test
loopne
fwait
add
adc
xlat
add
push
mov
ja
cmp
dec
ds
jb
out
dec
not
sti
in
imul
or
add
mov
cmp
hlt
jbe
mov
js
dec
xchg
and
andb
pop
cs
repnz
popa
cmc
fists
addr16
int3
adc
data16
test
sub
js
fisubrl
int3
jo
out
adc
imul
jmp
out
pop
cmp
jg
mov
xor
leave
jp
mov
cmpsb
xlat
xor
pop
cli
mov
test
pusha
ds
fidivl
das
xchg
mov
iret
lods
and
jle
dec
jbe
sub
mov
cmpsl
sbb
sbb
pusha
mov
jecxz
roll
xor
cmp
shlb
out
sub
cmp
movsb
jno
aas
adc
mov
daa
and
mov
call
push
jo
or
out
fsubl
sbb
testb
inc
sbb
jg
loopne
mov
push
jle
aad
cmp
jmp
movsl
dec
mov
lds
add
hlt
xchg
daa
dec
shr
xchg
call
adc
add
pmaxub
sub
and
jmp
mov
cmc
or
xchg
outsl
enter
xor
jge
lock
je
sbb
loopne
push
idivb
lea
hlt
fldl
push
add
jle
loop
inc
dec
in
std
aaa
jo
jae
aad
cmpsl
mov
mov
mov
stos
and
sub
iret
adc
rcrl
xor
pop
push
dec
xchg
cmpsb
jmp
fadd
call
je
sub
js
imul
enter
mov
jl
ds
jne
sbb
mov
dec
and
bound
xchg
insb
mov
in
nop
dec
lret
frstor
push
add
cmp
sbb
inc
stc
ret
dec
in
icebp
fcompl
pop
or
fiaddl
mov
push
into
xlat
cmpsl
faddl
jo
imul
jnp
pop
inc
adc
cmp
xor
xchg
mov
or
push
push
and
add
data16
xchg
repnz
and
je
jnp
cwtl
adc
popa
stos
or
mov
xor
push
insb
lods
xor
cld
jmp
jp
cmp
add
or
nop
push
ds
data16
nop
rclb
pop
aad
fldt
fidivrl
insb
cmpsl
push
pop
and
sbb
cmp
sub
movsb
mov
lret
xor
fidivs
sbb
push
push
pop
test
sub
sbb
cmpsl
mov
cli
cmp
mov
aaa
mov
jmp
arpl
adc
icebp
xchg
in
pop
cmp
rcrl
mov
int
fcmovu
std
adc
jge
movsl
mov
lods
inc
aaa
mov
adc
push
sti
xor
add
cld
mov
inc
lcall
and
cmp
cltd
repz
mov
dec
pop
fcomi
xchg
aad
xchg
aas
mov
mov
das
mov
pushf
pop
call
loopne
jp
ds
in
mov
aam
ret
cwtl
lea
ret
lret
lcall
mov
cld
insb
das
sub
dec
xor
das
push
jge
sub
mov
sahf
ljmp
bound
jae
pushf
mov
mov
test
pop
jno
inc
inc
jns
iret
sub
cmp
xchg
rorl
cs
int3
in
or
jnp
mov
repz
pop
jmp
iret
call
mov
xor
cld
lods
fs
orb
stos
push
aaa
scas
cmc
push
mov
sti
jmp
xorb
repz
jge
push
lahf
ret
pop
pushf
pop
lock
cmpb
movsl
push
int3
jne
cmp
outsl
jmp
rclb
and
xor
mov
jo
add
mov
in
fbld
mov
sub
lods
mov
sbb
cmp
push
out
in
push
loopne
xor
insl
adc
cmp
lods
fmuls
lock
cmpsb
sub
sahf
mov
mov
sbb
rorl
cwtl
xchg
add
jb
xchg
pop
orl
out
and
idivl
dec
cmp
mov
cmp
repz
daa
mov
xchg
mov
push
or
add
fstpt
fists
and
pop
ljmp
sbb
jae
enter
div
cmp
inc
lret
lods
cmp
adc
daa
dec
push
xchg
xchg
push
imull
iret
dec
xchg
leave
mov
pop
test
loopne
loopne
test
push
loop
cmp
ret
std
dec
pusha
sbb
icebp
fwait
inc
xor
pop
aam
call
stos
and
jno
sub
iret
mov
xorl
ss
andb
jmp
data16
lahf
ss
jns
cs
movsb
jge
fidivrs
imul
push
jns
arpl
jmp
mov
dec
mov
fdivl
loop
sbb
jp
mov
sbb
xor
or
lods
repnz
adc
nop
pop
dec
scas
cmc
or
les
mov
cli
fbstp
sbb
xchg
rcll
mov
pop
cmp
call
lret
xor
pop
push
lods
leave
xor
es
mov
and
fnstsw
and
push
adc
inc
call
jo
test
lret
mov
notl
xchg
das
clc
jle
push
dec
add
mov
testb
sti
cld
cs
fabs
es
scas
sbb
dec
or
dec
subl
sub
stos
dec
mov
mov
pop
lret
jl
xchg
dec
add
or
push
cltd
xchg
jle
inc
jb
je
lock
inc
adc
pslld
ja
pop
mov
shl
ja
aam
movsb
sub
cmp
subb
aad
scas
jno
loopne
mov
adc
and
push
out
into
adc
adc
and
gs
mov
jle
sbb
add
dec
rcll
jno
lret
mov
lds
stos
aas
lret
mov
out
sbb
sub
lds
pop
ror
and
repz
popa
mov
or
cltd
adc
dec
or
arpl
xchg
mov
sbb
xchg
rorb
mov
mov
pusha
pop
mov
mov
call
aam
leave
sbb
insb
and
adc
xchg
add
and
push
add
pushf
cmp
fistpl
arpl
das
cli
mov
aam
sbb
sub
sub
call
xchg
or
insb
push
add
mov
mov
scas
ret
mov
push
out
stos
xor
cltd
stc
add
jne
and
stos
lcall
cld
iret
jnp
popa
sbb
dec
icebp
pop
mov
test
lret
push
scas
insl
test
flds
aad
mov
inc
xchg
ffree
in
mov
das
push
rol
addr16
and
mov
mov
jle
xor
cs
lea
add
cmpsb
out
arpl
scas
jne
mov
hlt
xor
lret
in
xchg
push
insb
cmp
mov
cld
repz
lret
jle
out
dec
mov
mov
ret
inc
sub
mov
dec
and
lds
je
ss
mov
pop
inc
gs
sbb
leave
mov
std
jno
jg
lahf
push
xchg
clc
pusha
je
rcrb
enter
and
cmp
cmc
jae
addr16
xchg
rcl
fwait
xor
mov
insl
jge
inc
xchg
dec
jne
push
jmp
test
lea
cmp
cltd
pop
xchg
inc
ret
jl
mov
or
jecxz
std
ja
outsb
xchg
xor
and
adc
popa
int3
mov
xchg
out
je
add
ds
pop
sub
imulb
sahf
lods
mov
scas
daa
inc
inc
push
cmp
icebp
xchg
lods
adc
test
add
dec
shlb
lahf
xor
ficomps
dec
add
mov
outsb
xchg
arpl
shll
push
fwait
xchg
cs
sub
cmp
sub
jg
arpl
or
lret
andb
lods
fcmovbe
mov
dec
cmp
mov
rclb
fs
mov
adc
dec
and
scas
dec
jae
xor
js
cmpsb
lea
ret
push
sti
pushf
mov
scas
or
aam
jg
or
xchg
fisubs
sub
cmovl
fnstsw
fdivr
int
push
leave
adc
ret
xchg
shlb
sbb
outsl
movsb
push
adc
mov
iret
inc
mov
lea
sub
insl
mov
mov
jns
inc
pop
xor
repnz
add
push
ds
mov
add
enter
aad
outsb
mov
dec
xor
xchg
jecxz
cmpsb
das
ljmp
out
or
push
jmp
jno
cmpsl
lcall
sub
sub
cmc
daa
push
sbb
dec
flds
push
rol
imul
add
xor
and
push
scas
cld
hlt
aaa
ljmp
outsb
in
nop
mov
jg
leave
in
fdivl
jmp
scas
jae
cwtl
xor
cmp
push
bound
in
jp
lea
jl
fstpl
icebp
movsb
xchg
enter
inc
pop
negb
mov
mov
jle
sbb
mov
lods
out
or
xor
shll
sti
and
mov
or
lock
popa
fstl
fs
sbb
not
push
cs
in
push
std
imul
mov
lahf
pop
jne
or
mov
fnstcw
repnz
lret
sbbb
dec
jmp
inc
and
imul
lret
sbb
out
adc
int3
ret
stos
ja
mov
sahf
in
sbb
in
adc
mov
xorl
push
cltd
idivb
dec
daa
dec
pop
fs
push
mov
movl
jno
enter
inc
imul
aam
arpl
sub
fiadds
in
mov
mov
push
and
aas
pop
sub
rclb
aas
inc
fnstsw
out
adcb
icebp
imul
sub
nop
test
and
imul
or
mov
pop
movsl
in
mov
and
sahf
mov
push
xor
jmp
mov
mov
sar
gs
cwtl
imul
imul
adc
mov
lds
insb
pop
movsl
jbe
mov
or
sub
bound
push
loope
in
and
xchg
add
std
leave
cltd
lahf
xor
pop
mov
into
push
pop
out
stc
pop
rcrb
add
xor
xor
mov
imul
mov
mov
inc
push
dec
pop
adc
sub
in
fistpl
out
cmp
out
pop
cmp
mov
xchg
mov
jo
rep
stos
push
cmp
push
mov
sub
js
adc
xchg
ret
test
or
add
sub
push
test
sbb
jne
icebp
add
add
xchg
out
sbbb
xchg
push
add
outsl
push
std
jbe
enter
fstpt
mov
inc
nop
mov
mov
testl
sbb
out
sahf
mov
stos
sub
pop
mov
ret
cmpsb
or
inc
js
iret
scas
dec
pop
add
add
add
dec
jbe
mov
adc
lahf
xchg
cmp
xor
int
fmulp
lods
adc
imul
testb
test
mov
fidivl
and
aas
fwait
mov
adcl
pusha
in
jmp
xchg
sbb
insl
fiaddl
add
addr16
push
cmp
arpl
add
outsb
jne
or
and
popf
insb
xor
add
inc
pop
jge
push
dec
and
sub
or
dec
nop
popl
mov
lods
or
mov
jne
jp
mov
mov
call
sbb
cmc
mov
xchg
fnstcw
imul
or
and
sbb
xchg
cmpsl
inc
inc
ljmp
ret
cmp
mov
xchg
mov
mov
push
pop
popa
js
popa
add
lods
ficompl
jno
or
imul
sbbb
pushf
or
test
cld
lret
push
icebp
sub
add
pop
fs
ffree
ja
and
cmp
push
fbstp
fidivrs
inc
clc
pusha
push
pop
mov
adc
mov
pusha
hlt
dec
and
add
or
lds
cmc
loopne
test
pushf
not
je
in
cmp
and
bound
jge
sub
scas
mov
push
sarl
xor
stos
adc
mov
aas
xor
jp
mov
xor
sbb
sbb
fs
add
sbb
mov
or
lcall
add
inc
mov
int3
test
jnp
mov
xor
lret
push
cmp
loopne
ljmp
pop
mov
push
sbb
xchg
xor
and
jmp
inc
jl
jo
sub
mov
pop
xor
jecxz
gs
pop
pop
aad
call
inc
jo
mov
mov
sub
cwtl
orb
jp
ljmp
mov
jl
mov
mov
jb
movsl
hlt
fiadds
add
or
xchg
cmpsb
jecxz
sub
push
test
out
ja
rorb
rolb
aam
xor
mov
xlat
push
outsl
mov
mov
jp
hlt
inc
adc
cs
rcr
bound
ret
pop
in
cmp
add
xorb
push
jp
xchg
push
push
pop
in
cltd
cmpsb
sbbb
pusha
aam
mov
jecxz
out
adc
sbb
gs
in
sub
test
je
cmpsl
pop
fwait
pop
sbb
inc
testb
cmc
das
lea
mov
test
dec
iret
and
dec
jnp
test
roll
dec
stos
test
daa
dec
and
add
sub
add
dec
jns
mov
jbe
add
cmpsl
mov
mov
mov
and
stos
dec
inc
add
jnp
inc
mov
xor
push
fisubrs
fld
pop
les
jb
outsb
movsb
xor
push
test
mov
inc
mov
call
imulb
cs
repz
add
cltd
fnstsw
insl
add
xor
cmp
xchg
xor
and
jns
in
fisubs
xlat
pop
test
loope
mov
push
fsubrl
ret
xchg
lcall
sub
dec
out
gs
pop
out
ret
out
add
lds
sub
shrl
and
fadd
sub
std
add
jns
lds
pop
gs
clc
cltd
sbb
or
dec
adc
xor
ret
pop
mov
xor
jne
std
int
sub
sbb
fcompl
out
frstor
inc
push
xchg
inc
repz
push
push
lahf
mov
push
mov
push
and
xchg
pop
mov
inc
lods
mov
mov
or
jl
or
fiaddl
push
jmp
push
jb
stos
lahf
cmp
inc
rsqrtps
call
fidivrl
sub
and
arpl
cmpb
mov
int3
nop
shrl
movsl
jbe
xchg
add
aas
mov
xor
push
cmpsb
arpl
push
and
add
cltd
adc
jecxz
or
sbb
cld
adc
sub
push
jns
xor
xchg
xchg
xchg
in
aaa
sub
popa
mov
in
dec
mov
inc
testl
adc
push
fdivs
outsb
pop
mov
mov
in
ret
adc
or
lahf
sbb
mov
sbb
add
cmp
xchg
out
xchg
xchg
and
jo
fwait
iret
mov
movsb
sahf
sbb
xor
setg
sbb
stc
adc
pop
xchg
xchg
mov
cs
pop
movb
xchg
push
mov
movsl
inc
addr16
fiaddl
fsub
inc
sub
jg
jge
jb
jge
xor
sub
mov
enter
clc
xlat
sbb
das
sbb
cltd
out
add
test
popa
imul
mov
mov
bound
xchg
scas
mov
mov
sub
mov
cmpsl
stos
cmp
push
incb
mov
scas
mov
and
arpl
lods
pop
iret
popf
cmp
mov
jae
clc
cmpl
add
fsts
ja
jbe
shll
inc
icebp
cmp
out
lea
mov
fidivrl
sub
vsubss
sahf
icebp
stos
cmp
cmp
mov
pop
mov
mov
mov
sarb
arpl
xchg
xor
pop
lahf
aaa
fidivrs
pop
sbb
filds
in
adc
pop
mov
sbb
cmc
mov
cmp
out
pop
mov
div
cli
or
ljmp
mov
not
loop
jb
rclb
and
add
das
mov
jne
xor
andl
add
mov
movsb
xchg
aam
loop
bound
mov
movsb
cwtl
mov
repnz
push
sub
adc
aad
pushf
sbb
or
adc
xor
lahf
imul
adc
jge
popl
out
lret
jno
push
bnd
dec
mov
dec
lods
vpunpckhqdq
aad
and
aaa
sbbl
mulb
and
jae
push
aaa
shlw
pop
jmp
push
and
jb
xor
std
test
in
lea
loope
xor
push
inc
push
test
scas
dec
data16
inc
aas
lods
and
sub
enter
push
outsl
adc
mov
mov
ds
lds
push
xchg
mov
call
and
fbstp
xchg
mov
test
add
jns
jge
pusha
in
je
sahf
testb
push
enter
jecxz
jnp
in
repz
inc
xchg
mov
pop
push
push
std
and
push
ja
jne
pop
pop
pusha
mov
leave
jnp
pop
fnstsw
clc
pop
test
add
mov
sbb
mov
adc
cmpsb
mov
adc
dec
cmp
test
xchg
lock
shl
lea
je
or
mov
inc
sahf
mov
cli
pusha
ret
jl
lods
mov
mov
xchg
stc
out
aam
dec
ss
imul
cmp
out
into
les
decb
dec
pop
mov
mov
sti
fisubl
lea
mov
xor
cmpb
aaa
daa
dec
sbb
movsb
repz
orb
jo
sub
shl
push
pop
or
imul
cmp
into
inc
mov
dec
movsl
mov
dec
pop
jns
push
lcall
add
jae
pop
xor
mov
inc
insb
add
xor
dec
or
lock
pop
xor
in
jl
ret
rcll
cli
mov
jge
push
add
sbb
push
cmp
lods
jnp
mov
popl
mov
movsb
jp
xchg
lret
inc
loopne
adc
mov
add
insb
addr16
scas
stos
movsb
shl
adc
pop
jg
dec
xor
out
jecxz
push
icebp
pop
dec
cmpsb
jg
dec
jb
mov
jne
xchg
sub
mov
es
adc
loopne
test
fcoml
pop
dec
iret
daa
shll
pop
sbb
stos
xchg
sub
pushf
aaa
test
cmp
imul
jbe
icebp
stos
jl
adc
ds
test
push
jo
and
aam
insl
pop
leave
mov
cmp
shr
cmp
xchg
decl
jecxz
add
sar
lods
fnstcw
aam
add
ljmp
adc
mov
xlat
leave
in
out
addb
mov
cmp
cld
push
inc
fdivp
lahf
movsb
xchg
dec
out
je
out
mov
mov
xchg
test
sub
sub
jmp
cmpsl
sub
rcrl
into
push
clc
push
insl
sbb
ja
xchg
sarl
and
push
cmp
in
or
notb
outsl
dec
andb
xor
add
in
dec
repz
cmpsb
lcall
ds
aam
out
xor
sub
pop
pop
stos
xchg
shll
or
xchg
cs
shl
movsb
sti
sarl
inc
mov
cmp
outsl
push
stos
mov
daa
rcrl
xchg
and
out
in
addb
mov
xor
int
std
or
cmp
mov
sbb
out
sbb
xor
or
cld
mov
scas
in
inc
xchg
pop
cli
xor
lahf
shrl
mov
sbb
sub
sbb
jge
xchg
popf
loope
cmc
pop
cmp
jno
mov
jmp
sti
sbb
lods
push
push
ss
cmp
gs
sub
mov
test
sbb
push
rcll
dec
pop
iret
jge
inc
mov
or
push
imul
pop
jge
lea
xchg
mov
lret
add
and
jo
dec
aam
cltd
mov
add
popf
and
mov
mov
aas
es
pop
mov
sbb
es
pop
push
andb
addr16
pop
in
push
or
pop
adc
sbb
adc
jb
cmpsl
call
scas
and
adc
incl
push
xchg
and
mov
pop
int3
out
enter
push
dec
cmc
and
int
lahf
mov
adc
push
jecxz
push
pop
gs
stc
mov
cmp
cmp
iret
cmpsl
push
jns
repz
divl
add
dec
push
jno
jmp
sub
inc
sub
jbe
jno
mov
sahf
fiaddl
mov
mov
ret
fldl
cmpsb
test
into
call
dec
xorb
dec
jg
push
add
out
and
inc
imul
add
loope
push
adcb
xchg
out
adcb
cmp
mov
in
jb
mov
fists
sub
and
jns
sub
gs
adc
sbb
loope
mov
cli
xor
cwtl
mov
out
ss
je
jno
inc
or
mov
or
push
jnp
xlat
aas
out
imull
push
cvtps2pd
out
pop
mov
jno
cmpsl
outsl
loope
repnz
lahf
cmp
in
push
pop
ja
shlb
jge
shlb
out
sub
cmp
insb
stos
xchg
lret
and
fcmovbe
mov
xor
mov
fiadds
cmp
adc
mov
pop
jns
addb
into
inc
pop
in
jno
jmp
lret
mov
adc
sbb
mov
mov
popa
out
mov
dec
mov
pop
xor
aad
repz
adc
dec
push
xor
jmp
arpl
jecxz
cmp
test
jg
fmuls
cwtl
insl
ljmp
lea
sub
das
adc
stos
fs
movsl
fstps
push
into
mov
pop
repz
lcall
xor
push
pop
test
mov
adc
or
mov
cmp
iret
test
xor
repnz
pop
fildl
int
insb
jb
jge
dec
fadds
jp
cmp
xchg
scas
loope
sub
ret
cmc
sub
hlt
adc
mov
xchg
ret
stos
mov
dec
or
mov
mov
jp
call
fistpll
daa
mov
dec
ljmp
lret
in
mov
aaa
lea
popf
sbb
add
push
loopne
xor
fucomi
popa
xchg
scas
cmp
push
xchg
aam
movsl
inc
mov
mov
xchg
push
sbb
add
enter
ret
pop
loop
lret
nop
lret
cld
pop
or
lods
xchg
arpl
imul
xor
out
and
cmpsb
test
pop
cwtl
sbb
cmp
jg
daa
repz
js
bound
lcall
shl
and
xchg
cmovbe
je
dec
int
out
xchg
sbb
pop
out
dec
rorl
or
xchg
testl
mov
pop
loope
gs
mov
jp
into
xchg
mov
mov
lret
pop
cld
mov
cmp
push
pop
pop
lods
leave
cli
mov
dec
mov
dec
push
mov
or
sub
adc
movsl
mov
mov
pop
orl
je
into
fsts
mov
call
nop
fimull
mov
pop
das
lret
in
inc
add
clc
test
fwait
popf
sbb
adc
pop
mov
faddl
inc
xchg
inc
pushl
inc
fcmovnu
dec
repz
push
pushf
push
orb
pop
xor
pop
inc
add
cmp
insb
mov
jae
pop
fnstsw
repz
mov
inc
scas
je
pop
or
pop
mov
or
inc
fisubrl
dec
sahf
lds
xor
leave
lret
pusha
sub
mov
sahf
leave
lret
cmp
lock
fcompl
idivb
inc
sbb
fld
pushf
jg
mov
pop
stos
dec
sbb
mov
jl
xor
xor
cs
test
sahf
mov
cmp
aad
pop
je
testl
imul
aas
and
mov
push
inc
and
mov
dec
daa
sbb
roll
in
xor
dec
es
push
mov
rcl
sub
es
call
mov
cmp
adc
cmp
cmp
xchg
mov
jge
das
gs
lds
mov
push
push
dec
bound
inc
jae
push
jb
push
dec
fwait
xchg
adc
test
in
and
aaa
xchg
test
jbe
lods
xlat
dec
mov
jns
and
sbb
cmp
enter
push
dec
and
inc
pop
repnz
mov
fldt
mov
rol
jmp
mov
dec
arpl
andl
mov
xchg
add
dec
add
das
cs
xchg
mov
and
mov
jg
mov
mov
mov
fidivl
lods
iret
push
mov
sub
ret
mov
setg
pop
pop
test
mov
mov
enter
mov
lds
ret
ss
push
scas
imul
nop
inc
add
enter
xor
mov
xor
xchg
inc
outsb
push
and
lea
test
jmp
push
nop
pop
mov
pop
lret
jmp
mov
fnstcw
inc
pop
xchg
mov
dec
dec
sub
add
pushf
or
or
adc
sbb
xor
cld
flds
push
mov
mov
imul
sbb
mov
mov
rcrb
inc
or
out
sub
test
mov
mov
outsl
sub
clc
mov
push
lahf
ret
and
in
jno
aaa
jno
add
lret
leave
adc
mov
in
inc
gs
cmp
int
jb
push
testb
ss
mov
jno
or
out
or
nop
scas
loopne
int3
and
push
and
mov
or
xchg
pop
add
and
in
insl
shlb
sahf
repnz
das
sub
pop
stos
sub
sbb
jmp
mov
jb
inc
bound
aad
sub
in
outsl
jno
loopne
mov
adc
push
in
sub
pop
hlt
jecxz
gs
adc
outsl
mov
sbb
ret
dec
test
lahf
jge
aas
inc
xchg
dec
pop
or
int
xchg
fldl
scas
pop
inc
mov
shll
aad
push
ss
fbld
movsb
mov
cmp
sbb
rolb
xlat
mov
add
and
gs
loopne
sub
clc
bnd
inc
cmc
push
jns
sub
xor
cwtl
mov
test
jecxz
xchg
jmp
cmp
xor
add
jmp
add
push
scas
jnp
repz
adc
cmp
test
in
and
xchg
lahf
lret
rcrb
cltd
mov
rolb
dec
lret
xor
nop
popf
xor
push
aad
jge
shlb
lds
loop
cmp
pushf
sbb
mov
xor
popa
pop
pop
xchg
loop
and
jae
test
fistpll
dec
jge
daa
int
insb
pop
dec
inc
lock
rcll
xchg
shld
xor
pop
fs
pop
adc
pop
fnstcw
ret
push
push
and
mov
sub
fstl
dec
dec
popf
jge
lret
jle
iret
jle
aad
mov
es
mov
cwtl
jb
sbb
jbe
arpl
ret
sub
pop
mov
mov
adc
add
push
push
cmp
xlat
adc
or
sahf
mov
data16
sub
and
pop
push
adc
dec
je
movsl
int
pop
mov
std
aas
sub
xchg
cmp
pop
cmp
dec
and
sbb
push
mov
jp
loope
adc
jb
xchg
ljmp
int3
push
test
mov
aas
fnsave
mov
push
xchg
repz
adc
loopne
in
int3
shll
arpl
popf
std
xchg
sbb
test
je
outsl
in
mov
sbb
inc
dec
xor
add
jno
scas
nop
lahf
jle
testl
mov
fnstenv
aas
and
push
pop
fs
int
dec
pop
popf
pop
addr16
xchg
pop
jge
add
les
pop
mov
in
es
cmpl
divl
shr
add
push
stos
xor
mov
sub
cltd
adc
mov
aad
xchg
xchg
or
aam
xor
xchg
cmpb
and
and
fdivs
cmpsb
xchg
es
push
or
inc
pop
mov
dec
rorb
jmp
scas
xor
in
in
push
loop
mov
lods
xorb
mov
xor
mov
gs
popf
cmc
mov
stos
lahf
mov
push
loopne
aas
sub
repnz
cltd
push
or
mov
sbb
lock
cltd
mov
xlat
cwtl
inc
stos
mov
adc
dec
jp
push
lods
add
in
les
daa
sbb
jno
xor
pop
xchg
inc
cmp
sbb
mov
aam
sahf
fcompl
fisubl
leave
les
push
dec
loopne
in
push
sbb
sahf
cmp
push
dec
mov
test
into
cmp
cmp
out
clc
in
mov
push
xor
and
and
int
je
push
mov
push
jns
mov
js
sub
mov
data16
xor
test
js
iret
in
pop
out
sbbl
insl
outsl
and
sub
inc
test
cltd
vmovaps
popa
jmp
push
add
push
push
test
push
mul
cmp
shll
mov
outsl
xchg
es
adc
dec
lods
outsb
sub
mov
mov
movsl
or
sub
mov
dec
mov
xor
mov
insl
popf
cmp
push
push
jno
and
cmp
add
pop
sbb
cmp
xor
lret
dec
xor
out
setge
sub
jmp
je
add
cld
imul
insl
or
ljmp
pop
pop
push
cmpl
hlt
out
cli
dec
arpl
lahf
jo
test
ficoml
mov
mov
movsb
jl
daa
jge
inc
cmpsl
cmpsl
ret
cld
pop
pusha
jl
lods
hlt
in
popa
mov
mov
into
movsb
cmp
pop
iret
inc
mov
jp
mov
aam
loop
lods
das
insl
xchg
push
mov
mov
jo
xchg
dec
mov
mov
lret
pop
orl
daa
lret
mov
stos
js
pop
incb
and
jle
adc
xor
mov
aad
aam
cmp
or
mov
sbb
xor
test
outsb
out
add
in
scas
mov
push
pushf
add
les
push
fstl
ret
xchg
stos
inc
cmp
mov
push
jge
aas
inc
test
outsl
pinsrw
push
mov
test
loope
icebp
add
cmp
je
dec
orb
add
mov
scas
stos
mov
leave
push
dec
jo
pop
imul
insb
sbb
out
mov
dec
dec
push
jns
out
ret
je
push
call
stc
push
sbbb
sbb
pop
jl
xchg
mov
mov
ljmp
cld
and
sbb
dec
jmp
inc
xchg
negb
lods
sbb
inc
or
fcompl
jmp
pop
cmp
xlat
mov
lods
mov
push
mov
sbb
sbb
or
push
mov
and
stc
loop
pop
xor
stos
jp
mov
ljmp
test
ss
mov
xorb
cmp
fs
sbb
pop
push
sbb
adc
mov
add
push
or
add
dec
les
jb
jns
mov
or
add
add
mov
out
ficoms
loopw
push
lret
jne
scas
test
push
pop
stc
push
inc
in
iret
rorb
mov
adc
cmp
push
rorl
dec
mov
pop
cli
pusha
cmpsb
or
lret
pop
push
add
jecxz
inc
push
jle
and
in
mov
cmp
andb
cmova
jle
push
rcrl
ret
mov
inc
call
mov
jns
xor
into
outsl
ja
adc
shlb
sbb
pop
mull
mov
sbb
addr16
jae
mov
mov
inc
pop
push
stc
orl
or
ret
fwait
jns
rclb
and
rorb
adc
ret
jnp
mov
mov
xor
sbb
and
cmp
xorb
adc
mov
xlat
aam
cmp
bound
ds
fldl
inc
sub
scas
sub
jbe
jno
add
sbb
dec
insb
xchg
in
mov
int3
js
xchg
je
or
cs
loope
cli
pop
xor
and
cmc
xchg
and
fldenv
lcall
insl
cs
jp
loope
add
in
jo
jns
shr
mov
add
mov
stos
movsb
jg
jae
xchg
repz
in
xchg
movsb
pop
fnsave
cmc
mov
mov
inc
js
adc
cmpb
inc
and
pop
stos
push
lahf
mov
out
in
in
ret
out
aam
ljmp
push
and
mov
sahf
cld
or
mov
adc
mov
movzbl
js
push
in
movsl
fisubrl
fstpt
outsl
jp
pop
bound
push
cwtl
orl
mov
movsb
and
cmp
xor
dec
sub
not
shrb
in
mov
xor
mov
push
xchg
mov
cs
jge
lea
in
insb
or
loope
loop
in
std
popa
shrb
cmp
test
fldcw
and
inc
data16
das
sbb
int3
idivl
lds
mov
aaa
add
scas
add
add
and
shl
subl
addr16
push
xor
pushl
dec
movsb
mov
sub
movsb
jno
jb
sbb
dec
ss
xor
push
das
xchg
xchg
push
andl
hlt
cmp
shlb
pusha
xchg
ret
mov
xlat
movsl
push
adc
xor
mov
cwtl
dec
ja
pop
xor
inc
push
mov
aam
mov
in
sbb
iret
daa
sahf
and
mov
ds
dec
sub
cmpsl
jecxz
or
stos
mull
sarl
or
jae
inc
add
cmp
lcall
stos
ds
addr16
popf
filds
pop
and
stos
gs
mov
push
in
or
loopnew
enter
sub
xlat
mov
mov
cmp
push
int3
sub
fsubs
sbb
mov
cmp
dec
jns
mov
sbb
sub
sbb
imul
ficompl
xor
push
jns
call
or
adc
aaa
push
cwtl
dec
repz
mov
rolb
or
xorb
sbb
mov
adc
arpl
aas
ret
cli
push
cltd
mov
int3
xchg
mov
pop
ds
int
inc
push
mov
stos
movsl
xor
mov
lods
ficompl
neg
pop
in
std
sub
je
mov
pop
scas
mov
push
inc
rcll
movsb
in
int3
push
shll
cli
sub
jae
sbb
iret
add
nop
in
aaa
mov
int3
loope
das
or
out
dec
cmpb
mov
pop
fistpl
pop
cmpl
ss
lds
lock
sbb
bound
test
pusha
inc
test
incb
loope
or
es
shlb
push
fistl
in
cmpsl
les
sti
cmpsb
and
rep
adc
and
push
add
push
lret
cmp
call
dec
xchg
negl
scas
xor
inc
hlt
mov
xlat
sbb
mov
push
movsl
cmp
mov
pop
leave
loope
mov
in
lods
ss
fstpt
rcrb
dec
and
dec
out
xchg
popa
out
out
sub
cmp
add
pop
mov
into
push
es
lods
or
rorl
mov
inc
lcall
popa
push
cmp
addl
fstpt
outsb
and
sbb
shll
enter
stos
pop
call
adcb
jae
mov
insb
addr16
stc
testl
pop
outsb
adc
sbb
rolb
je
lahf
dec
xchg
pop
jecxz
ror
mov
in
push
cmp
push
inc
mov
cmp
pop
fs
push
push
cmpsl
add
fisubrl
push
cmpsl
and
xor
popf
lcall
sub
push
xchg
xchg
pop
rorl
mov
and
xchg
adc
sub
mov
mov
mov
bound
xlat
js
push
mov
aaa
xchg
ljmp
push
adc
dec
into
inc
mov
adc
mov
inc
ffree
cld
cmp
adc
mov
stos
into
xlat
call
out
add
push
std
adc
mov
ja
imul
gs
push
xchg
mov
xchg
mov
cmp
sti
mov
mov
mov
nop
pop
pop
nop
notb
repnz
imul
lret
jg
ret
rol
inc
pop
dec
jae
lods
ss
cwtl
scas
add
into
xchg
adc
mov
cmpsl
jl
and
sub
in
add
xchg
adc
fcmovnbe
push
or
add
mov
jnp
push
cld
stos
mov
hlt
shll
mov
jbe
dec
xchg
outsb
mov
xor
cmpsl
out
in
and
jbe
mov
adcl
push
aad
cmp
mov
adc
pop
in
stos
dec
xchg
repz
and
push
xchg
xor
pop
sbbb
sub
in
shrb
out
scas
jg
lcall
loopne
xor
mov
in
cli
mov
jl
fwait
and
outsb
pop
scas
add
jl
mov
cmp
fwait
mov
cmp
mov
mov
in
push
adc
mov
jno
das
inc
sbb
adc
shlb
sub
add
rorb
clc
sbb
out
insl
adc
jge
lods
jecxz
cmpsb
enter
outsl
rclb
out
sub
movsl
inc
into
jl
dec
ret
clc
mov
stos
lea
movsl
sbb
dec
and
cmpsb
sbb
or
sub
dec
mov
jl
cmpsl
push
inc
pop
xorb
data16
cld
jl
or
mov
lahf
lea
lret
outsb
adc
std
out
adc
dec
int3
jge
enter
mov
pusha
arpl
addr16
jmp
dec
ss
imul
jae
clc
inc
out
cmpsb
xchg
dec
sub
pop
mov
mov
ud0
outsb
sbb
pop
and
fdivr
sbb
fistpl
out
mov
or
mov
lcall
adc
push
dec
movq
sub
mov
jp
icebp
mov
sub
pop
adc
ficoml
fnsave
inc
xor
sbbb
adc
sub
repnz
push
inc
adc
inc
adc
xchg
sti
add
ss
nop
addl
nop
insb
cmp
pop
in
jmp
ss
cmpsb
adc
out
mov
mov
cmp
mov
jge
test
imull
call
mov
xchg
xor
mov
xchg
adc
adc
repnz
sub
sbb
mov
sub
into
fidivrl
test
xor
pop
jns
sub
loopne
jle
stos
mov
call
outsb
mov
loope
clc
loopne
mov
aaa
stc
mov
mov
sti
dec
aaa
hlt
loopne
mov
xchg
dec
inc
int
imul
adc
popa
push
mov
and
xchg
pop
add
int3
xchg
mov
lods
pop
xchg
cmc
outsl
dec
adc
fldt
out
les
pop
scas
inc
add
imul
popa
mov
push
cmp
xlat
push
fwait
mov
lods
push
negb
cmp
ss
dec
xchg
jno
mov
imul
push
pop
inc
or
push
cmp
xchg
setbe
push
xchg
lret
mov
sub
pusha
ret
repnz
test
jbe
jns
inc
adc
pop
aas
sbb
das
xchg
shll
fwait
sub
or
mov
push
sbb
pop
cmp
sbb
add
mov
lea
daa
hlt
pop
out
add
sar
xchg
or
pop
mov
sti
rcl
out
cmpsl
cmp
testb
test
cmc
loope
sub
lods
fsubs
jmp
jnp
fnstcw
rorl
cmp
mov
add
stos
fistps
ficoms
out
xchg
gs
push
cli
fistpl
test
jle
gs
xor
or
and
dec
or
sub
sub
ljmp
fs
xchg
movsb
int
cld
int3
push
xor
outsl
cld
dec
ficoml
add
sbb
insl
cli
cwtl
aam
arpl
xchg
addr16
and
jmp
xor
popa
cmc
xchg
imul
cmp
push
arpl
cltd
fnsave
bnd
jnp
pop
pushf
bsf
inc
sbb
popf
out
int3
pop
xchg
insb
pop
push
mov
xor
ja
outsl
stos
push
add
xchg
sbb
in
jb
inc
xchg
jg
dec
cmp
iret
jmp
push
add
jle
xchg
test
add
add
out
je
repnz
cmp
push
mov
sbbb
mov
add
or
add
lret
sbb
flds
xchg
testl
fcomps
pop
das
push
imul
fsubs
mov
cmp
inc
xchg
jg
rol
xchg
pop
flds
and
pushf
xchg
jns
movsl
pop
daa
xchg
jp
sbb
adc
out
xchg
stos
cltd
ljmp
push
adc
mov
sub
inc
loopne
push
xor
sbb
jge
xchg
bound
mov
ret
sbb
ljmp
fs
pop
cmp
in
lahf
lods
push
mov
pop
pusha
xchg
fs
add
decl
pop
jnp
mov
xor
call
std
mov
mov
adc
leave
daa
in
js
aas
mov
into
mov
pushf
test
pop
xchg
pop
mov
mov
imul
movsb
mov
sar
cmp
imul
adc
cli
test
adc
mov
push
pop
shlb
mov
lcall
mov
mov
adc
test
inc
dec
sbb
add
cmp
push
xor
inc
xor
push
add
pop
pop
mov
sub
push
add
xchg
cmp
cmp
iret
pop
adc
rcrl
popf
lock
pop
xor
mov
dec
push
sbb
lret
cmpsl
gs
mov
out
lds
xchg
jnp
push
andb
mov
stos
mov
inc
jecxz
mov
clc
sub
les
mov
adc
mov
jecxz
sub
test
data16
sub
lret
addb
xor
sub
mov
in
sub
mov
lret
test
shll
loop
shl
fstpl
mov
sub
adc
mov
mov
leave
push
ret
out
clc
ds
inc
adcl
into
add
call
or
fdivr
lods
fcoml
addl
dec
into
push
cmp
sbb
push
dec
mov
inc
repnz
or
sbb
pop
std
cmp
fnstenv
mov
inc
mov
das
adc
mov
inc
int
jg
add
lods
fdiv
in
mov
adc
mov
pop
xchg
cld
cwtl
les
dec
mov
adc
push
mov
jl
jb
mov
pop
jae
sub
or
leave
sbb
xchg
mov
inc
jnp
mov
or
push
mov
imul
fsubrl
lds
shrl
cld
inc
ss
aam
mov
inc
leave
xchg
and
jno
dec
xchg
stos
jo
mov
popf
loopne
mov
les
inc
mov
adc
out
mov
xchg
or
jecxz
ss
test
ret
iret
lock
ret
test
sub
inc
push
jmp
and
int3
and
rcrb
rcrb
gs
and
lea
xor
dec
mov
push
mov
xchg
sub
add
icebp
mov
shlb
mov
jns
inc
mov
ja
or
sub
push
dec
pop
fs
cmp
adc
lock
es
fstpl
std
fmulp
cs
ljmp
lods
int3
mov
mov
and
sti
ss
arpl
cmp
out
call
push
outsb
jmp
in
mov
mov
pop
scas
in
xor
or
fiaddl
ss
jns
cmp
fidivrs
xor
out
mov
rclb
mov
scas
dec
aas
ljmp
leave
sbb
mov
push
add
dec
pop
les
call
shlb
lods
in
inc
loop
mov
xor
out
mov
sbb
adc
dec
mov
or
ds
mov
in
cli
cmpsl
or
xor
mov
clc
mov
aaa
add
lea
and
sbb
mov
pop
jge
setge
repnz
addr16
inc
sbb
ds
xor
shrb
cmpsl
sub
pop
rorb
sbb
jno
aam
dec
shl
stc
movsl
test
sbb
ror
icebp
sar
xlat
sarb
sbb
rcll
inc
shll
es
ret
ss
push
rolb
inc
fwait
lds
lcall
fmuls
push
adc
sbb
add
cmp
jno
cmp
sub
imulb
shlb
and
fstpt
lea
mov
imul
stos
sub
imul
in
mov
cmp
mov
or
popa
jae
bound
add
mov
xchg
sub
loopne
jge
lods
add
test
or
test
sbb
xlat
add
pop
subl
dec
and
inc
pop
adc
popf
mov
or
fstps
fmul
push
adc
jmp
pop
int3
test
ds
gs
dec
fld
aas
mov
inc
xchg
gs
sub
adc
cli
fwait
stos
fsubl
jnp
sub
pop
outsb
inc
mov
inc
aaa
rcrl
ds
lea
scas
in
mov
negl
test
mov
lahf
mov
stos
aam
xor
fcmovbe
call
gs
in
or
dec
shr
adc
pop
mov
int3
add
sbb
jmp
lods
mov
dec
add
lret
xor
jno
cmp
jno
ret
pop
and
adc
mov
jl
imul
jns
sub
mov
jo
push
add
xchg
add
sbb
shrb
lcall
sub
sbb
and
clc
add
inc
jmp
jecxz
inc
push
or
mov
fistps
lock
insb
push
adc
and
cmpl
mov
scas
nop
int3
jl
add
push
pop
fldl
add
push
pusha
scas
or
pusha
cmp
add
adc
jmp
push
or
and
mov
lds
orb
adc
sub
test
scas
push
mulb
push
cmp
out
xchg
arpl
fcoml
ja
xor
mov
ret
cmp
xchg
rorb
xchg
adc
mov
in
addr16
jne
dec
lea
push
xor
mov
add
cmpsb
mov
pop
push
imul
mov
adc
cmpsl
push
push
sub
test
inc
clc
pop
xor
push
and
in
je
test
clc
cmp
es
ss
adc
xor
sti
mov
sbb
push
push
mov
in
push
dec
cld
mov
in
rorl
jp
orl
xchg
cltd
jne
sbb
outsb
push
sub
cmpb
lcall
jl
out
xor
je
sbb
push
scas
sub
addl
repz
mov
add
rclb
adc
jbe
jno
scas
inc
fmull
mov
fistl
mull
dec
out
sub
nop
mov
jg
mov
add
mov
mov
pop
jmp
cwtl
in
cmp
dec
pop
dec
mov
cld
jl
mov
mov
or
aaa
dec
jb
lcall
into
lods
out
xchg
loope
sub
jmp
addb
aas
scas
sub
pop
addr16
mov
lods
push
jecxz
sub
stos
pop
mov
adc
out
lea
aad
inc
fists
sbb
call
mov
mov
jne
pop
cwtl
xchg
jb
cli
stos
and
fwait
aam
adc
mov
rcll
movb
fucomp
cmovno
test
aad
push
jo
aam
outsb
or
arpl
lock
call
inc
inc
inc
add
loop
nop
mov
adc
add
dec
loope
or
shll
fmuls
insl
pop
add
subl
push
dec
mov
sub
sub
inc
imul
and
insb
popa
or
push
sbb
mov
jp
sub
cmpsb
add
inc
cmp
les
imulb
mov
pop
mov
and
jo
movsb
jp
aas
or
pop
lret
push
jg
out
dec
iret
ffreep
and
roll
adc
add
cs
testl
pop
cmp
push
sbb
movsb
and
stos
dec
adcl
sbb
inc
movsl
fcmovnbe
sbb
out
mov
shlb
xor
jae
enter
jae
test
outsl
mov
loope
push
loop
xor
or
lea
mov
inc
lods
lret
lcall
mov
lcall
or
and
loope
mov
mov
ja
lds
mov
jp
push
xor
movsl
negl
mov
int
outsb
dec
cmpsb
mov
test
adc
adc
das
mov
mov
out
jg
cmp
push
mov
int
inc
rcr
mov
ret
dec
sub
lcall
xchg
mov
fidivs
jbe
mov
hlt
push
adc
notl
push
sub
lcall
sbb
ror
push
sub
xor
cwtl
dec
and
loop
dec
xor
hlt
add
jne
sar
and
nop
push
pusha
ljmp
aaa
mov
test
lret
popa
cld
leave
mov
inc
xchg
dec
sub
mov
data16
or
aam
sub
or
cmpsb
in
sbb
lret
lcall
mov
pop
fnstsw
mov
cld
aas
into
loop
push
incl
shrl
push
les
xchg
sbbb
cmp
ds
rcrl
lret
ss
jbe
pop
ljmp
inc
es
shlb
les
push
mov
adc
jmp
imul
cmpb
daa
lods
cmp
mov
jo
dec
cli
pushf
hlt
jmp
mov
mov
cmp
pop
mov
or
sbb
scas
mov
inc
sub
pop
push
ja
cmpps
fcmove
pop
mov
mov
int3
inc
sbb
xchg
or
jne
push
xor
xor
sbb
add
lret
pop
inc
fnstenv
out
test
vmread
mov
insb
inc
repnz
push
xchg
pop
lret
daa
add
fldcw
adc
xlat
push
jae
fcoml
xchg
popa
scas
data16
adc
sub
fsubs
leave
cmp
divl
mov
cli
dec
repnz
sbb
adc
outsl
arpl
in
mov
jecxz
sub
popa
testl
popa
add
push
mov
xchg
nop
lods
jp
std
mov
ret
imulb
or
adc
test
mov
in
mov
nop
out
leave
mov
xlat
sub
mov
ja
pop
xor
addr16
rep
loop
aam
push
jb
mov
dec
push
jl
shr
clc
pop
in
scas
cmp
mov
xor
push
xchg
cmp
lret
mov
jo
iret
dec
mov
ret
cli
sub
cmp
ret
mov
sub
enter
cmp
pop
cmp
jmp
pushf
int
mov
dec
mov
adcl
and
xchg
insl
push
mov
push
loop
icebp
popa
xchg
jo
xor
icebp
jnp
pop
dec
mov
inc
jo
jecxz
adc
in
pop
test
in
pop
pop
pusha
dec
addb
cli
jno
in
jne
dec
into
sahf
shl
and
sub
dec
ss
add
mov
inc
cmp
pop
cltd
pop
shll
jb
outsl
fdivs
data16
lea
stos
lods
push
xchg
fnsetpm(287
push
sub
pop
adc
addr16
jns
sbb
mov
and
and
or
imul
inc
and
das
or
stos
hlt
cmp
daa
ret
scas
sub
cwtl
or
fcmovnu
subl
and
ret
ss
pop
adc
push
test
inc
jae
es
pop
dec
je
mov
push
xchg
jae
and
fdiv
ret
or
std
in
pop
inc
dec
lods
fidivrs
rol
xchg
lcall
push
dec
sub
adc
inc
lds
loop
pmaddwd
cmp
out
add
fisubl
and
arpl
xchg
xchg
sbb
ja,pt
or
mov
pop
movsb
or
push
inc
outsl
xchg
pop
imul
dec
into
enter
cmp
jnp
sbb
mov
dec
dec
add
sbb
stos
cs
cmpsl
in
xor
inc
sbb
dec
xchg
gs
cs
ds
and
xchg
sbb
cltd
shrb
iret
jnp
pop
xlat
cs
jns
scas
mov
dec
aas
sbb
lods
ret
jo
cmp
mov
sbb
add
insl
je
out
test
cmpsb
ret
or
or
sub
dec
mov
cs
outsl
jno
add
fsqrt
in
cmc
cmp
aaa
cmp
adc
mov
addb
bound
pushf
jns
jns
inc
xchg
mov
jecxz
pusha
cld
mov
and
push
lds
andl
cs
dec
fcompl
loop
sbb
xchg
dec
add
and
sbb
aad
mov
adc
das
mov
out
mov
cmp
inc
fidivs
std
int
mov
mov
imul
jmp
push
jo
sbb
imul
sahf
jne
popf
xor
xor
fdivp
push
push
mov
jmp
sbb
jae
shrb
jmp
jnp
mov
inc
lahf
add
test
sbb
adc
jle
rcrb
mov
aas
out
fdivs
and
cmpb
aas
add
stos
push
or
mov
xlat
bound
dec
sub
lret
sbb
shrl
jns
xchg
dec
jnp
and
dec
jecxz
aas
and
imull
lret
enter
xchg
push
mov
out
cmpb
in
lahf
xor
int
push
jo
cld
inc
or
mov
ret
loop
jecxz
outsb
mov
dec
lock
inc
jecxz
cli
call
cltd
mov
testb
push
imul
incl
lcall
dec
xchg
sub
out
mov
test
cwtl
iret
imul
fistpl
jae
test
mov
lcall
jl
xchg
scas
push
imull
dec
or
and
punpckldq
insb
push
xchg
dec
xor
aad
test
jg
cli
jae
push
and
mov
mov
lea
or
movsb
in
sub
ja
inc
test
sub
mov
and
sbb
andl
push
lods
jnp
popf
lock
and
inc
je
loopne
push
adc
lods
mov
into
jg
movsb
jo
push
jne
cmpsl
cmc
sub
enter
mov
lock
xor
lods
xchg
adc
fucomip
push
inc
bnd
mov
cmp
decl
mov
xchg
lret
mov
aam
xlat
cmp
xor
mov
push
jnp
sbb
inc
outsb
lahf
fwait
jp
push
jns
fisubrs
ret
mov
pop
inc
js
cs
xchg
cmp
cmpb
repz
and
mov
cli
dec
inc
mov
mov
sub
inc
stc
lahf
sub
arpl
lret
je
sub
add
jge
jg
enter
xchg
addb
mov
ss
push
rorl
or
mov
stos
sbb
js
jno
jecxz
mov
aas
mov
push
or
ljmp
cmpsl
nop
sbb
adc
adc
xchg
js
pop
cmc
add
data16
xchg
ja
mov
shll
cmp
and
call
jns
mov
or
jmp
mov
lret
pop
pop
adc
bound
shlb
rol
jl
adc
xchg
push
das
jp
mov
mov
lock
adc
inc
push
cmp
xor
test
aam
xchg
loopne
sbbb
aaa
xchg
int3
cli
inc
push
push
fbld
test
adc
loop
push
mov
jne
movaps
aam
daa
cs
or
and
add
shll
ret
js
xchg
pop
loop
hlt
andl
popf
jle
adc
or
push
mov
or
subl
push
pop
fdivrl
add
sub
xchg
xor
pop
mov
imul
cmp
add
stos
xchg
mov
mov
mov
sbb
gs
mov
fincstp
scas
jecxz
lock
aam
pop
cmp
mov
test
stos
dec
dec
jge
fsts
lret
in
stos
cmpsl
xchg
sub
mov
subl
xchg
clc
sub
xor
mov
cmp
das
arpl
in
mov
push
add
or
popa
jg
mov
jnp
mov
mov
sahf
shrb
js
insl
test
loop
pop
pextrw
or
mov
mov
insb
js
inc
mov
sbb
imul
pop
sbb
xchg
test
xor
ljmp
aam
fwait
mov
fwait
pop
mov
movsb
mov
mov
setae
sbb
push
popa
shll
sub
adc
adc
add
out
test
push
mov
inc
in
add
mov
jl
inc
or
push
inc
movsl
mov
hlt
jge
sbb
or
mov
mov
jne
fstpl
mov
cmp
repnz
cmpl
push
cmpsb
jne
aam
lahf
fisubrl
mov
lcall
ret
adc
ficomps
inc
or
push
loope
inc
mov
cs
pop
popa
lods
pop
mov
sub
lcall
xchg
flds
xchg
mov
xor
shlb
and
imul
and
dec
lcall
sbb
test
pushf
lgs
or
fs
loopne
pop
pop
lahf
lahf
push
int
pop
mov
push
and
rcll
fstpt
pop
scas
pop
adc
in
and
fidivs
lea
mov
or
mov
jg
call
pop
dec
bound
jns
fidivs
flds
push
mov
push
jmp
jnp
or
dec
push
out
push
pop
ss
xchg
xchg
mov
xor
pop
xchg
and
call
mov
xchg
xor
jb
adc
cmpl
or
add
in
hlt
adc
lea
cmp
test
push
mov
in
sbb
push
js
mov
movsb
xorb
mov
jg
lods
and
fcompl
or
push
xor
ficoms
shrl
pop
dec
jle
xchg
xchg
dec
ja
fistpl
adc
scas
rcrl
repnz
adc
add
inc
negb
mov
int3
pop
and
xchg
cltd
ret
out
jae
add
je
repz
xchg
jne
xchg
mov
sub
sahf
xor
mov
ficoms
fstpt
insb
mov
sbb
lret
stos
jle
mov
mov
sbb
cmc
icebp
aam
in
in
xor
mov
push
sub
pop
push
cmpsl
sbb
loop
inc
lcall
fidivs
insl
xchg
nop
push
out
aad
ror
cmpb
scas
jnp
je
xchg
push
sub
shlb
and
mov
cmpsl
and
or
cs
ja
cmp
pop
in
cwtl
test
lock
sti
jmp
sub
mov
lds
adc
es
in
nop
jp
push
ja
jecxz
mov
arpl
pop
nop
ja
jae
ret
aas
lds
adc
jmp
xor
jno
in
push
or
inc
pop
jp
pop
or
mov
mov
push
gs
xor
dec
rcr
add
and
mov
test
clc
jnp
lret
gs
psubq
push
sarb
or
mov
and
fbstp
sub
subl
cld
shrb
test
in
gs
sub
loop
mov
aad
xchg
add
jecxz
jne
test
aas
jmp
push
pop
or
mov
fstps
je
dec
sbb
push
mov
repz
xchg
scas
mov
pop
insl
sub
outsl
insl
and
mov
sbb
or
inc
cmp
jg
mov
sub
nop
cmc
outsl
imul
ret
push
ret
pushf
dec
shll
cltd
jno
jb
mov
push
pushf
sbb
or
jb
ficoms
les
inc
movlps
push
lea
stos
sbb
pop
jecxz
mov
mov
fisubrs
dec
xor
cld
out
lock
xchg
sbb
stos
mov
inc
lcall
ret
mov
scas
add
jno
inc
inc
aas
in
pop
xchg
repnz
ds
push
es
loope
jbe
adc
fs
jmp
cmpl
jg
arpl
and
add
cmp
sbb
in
rcr
add
sub
add
movsl
popa
fidivrl
pop
mov
movq
sbb
mov
into
mov
push
add
lock
lcall
xor
ror
lock
push
sub
dec
mov
dec
push
iret
add
data16
movsb
rorb
fdiv
jae
xor
and
mov
sbb
cmpsl
dec
pusha
adc
jp
xor
inc
cmc
sbb
mov
jns
cld
inc
clc
adc
int3
jmp
push
in
daa
pop
xchg
mov
in
push
dec
movsb
call
stc
inc
xor
data16
mov
cmp
lcall
cmp
aas
push
push
or
jns
and
shll
pop
lcall
pop
push
imul
cmp
pop
jge
rcll
mov
shlb
jle
gs
gs
aas
push
or
lods
lahf
sub
je
inc
shlb
out
insb
add
push
faddl
test
inc
cmp
push
xchg
xchg
xchg
lret
js
in
mov
sbb
cltd
ret
adc
jb
stos
lods
push
push
xlat
call
nop
popa
out
add
mov
mov
or
pop
jbe
inc
inc
enter
adc
pop
das
adc
jnp
bound
pop
mov
or
pop
push
or
icebp
lods
pop
xor
cld
fidivrl
dec
sti
fiaddl
push
in
addr16
cmp
out
test
lods
xor
mov
dec
adc
push
xor
shrl
in
mov
dec
mov
or
cli
and
xchg
pop
loope
jmp
xor
aas
inc
add
add
mov
loopne
cmc
mov
jb
scas
pop
lods
in
cmp
daa
push
add
cwtl
pop
addr16
inc
in
cmp
aaa
xchg
mov
mov
add
fstps
pop
inc
fwait
ds
adc
int
jp
sbb
mov
pop
int3
sbb
andl
out
out
out
pop
push
mov
pop
dec
cmp
push
mov
xor
subb
cmp
imul
mov
jle
lcall
imul
insl
ret
cmpsl
adc
inc
inc
push
jbe
les
dec
fidivrs
lret
dec
rcr
push
xchg
mov
das
pop
lret
mov
xchg
mov
and
jno
xchg
mov
popf
std
fxtract
cltd
sbb
jnp
fs
repnz
cli
nop
pop
repnz
clc
inc
test
xchg
pusha
xchg
push
daa
fildll
push
push
push
adc
add
adc
add
xchg
xchg
cwtl
test
aad
dec
enter
fimull
ret
cmp
mov
fcmovu
add
jb
insl
add
pop
mov
cmc
popl
in
pop
pop
or
test
and
cmpsl
inc
rorb
lret
hlt
sub
js
pop
loope
add
imul
push
popa
jl
mov
push
jne
clc
add
add
or
ljmp
test
cmp
push
add
pop
mov
bound
dec
fldenv
push
repz
xor
or
pop
or
sbb
imul
cli
pop
sbb
je
xor
arpl
and
subb
or
mov
or
dec
repnz
inc
cmp
lcall
into
hlt
dec
jl
movsl
jp
cld
outsl
mov
iret
in
sub
add
loop
scas
push
push
mov
pusha
std
mov
out
jb
divb
jl,pt
xor
lds
jmp
test
or
xor
movsb
mull
sbb
add
push
xorb
jecxz
cmp
mov
clc
mov
xchg
xchg
out
ds
push
add
cltd
jo
lds
fcmovnbe
cmp
gs
out
adc
mov
das
lret
out
ficoml
mov
jg
rorl
jp
pusha
or
lds
pop
out
popa
daa
mov
sbb
lods
add
dec
and
and
sbb
into
pop
in
xor
mov
xchg
jo
jne
rcl
dec
xchg
aam
fcmovne
sub
jae
adc
jmp
mov
inc
movsl
jl
pop
lods
sub
mov
pop
popf
cli
hlt
out
jae
pop
push
mov
test
cmp
les
clc
imul
adc
inc
sarl
cmp
or
cmp
pop
aaa
test
cmp
out
add
ds
lock
shll
mov
lahf
jnp
jle
jne
cmpsb
in
push
repz
xchg
aaa
insb
mov
mov
scas
pusha
cld
push
add
leave
es
xchg
test
loop
and
push
inc
inc
pop
test
pop
cld
icebp
rcrl
lds
xchg
andb
das
inc
xchg
fmul
push
lods
add
lods
fldcw
scas
jne
fwait
ret
lock
ss
lods
jmp
or
pop
sbb
in
jl
pop
pop
xor
mov
fstps
push
in
add
fldl
or
sub
in
enter
insl
ss
cwtl
out
arpl
dec
mov
clc
pop
nop
inc
cmp
loope
rorl
dec
test
movsl
test
jg
arpl
pop
push
stos
push
inc
and
and
inc
cli
add
mov
imul
ficoms
cmp
adc
imul
call
add
test
rcrl
xor
jb
dec
jns
cmp
jae
aam
xor
outsb
push
pop
pop
pop
in
nop
dec
xor
mov
subl
sbb
testb
fwait
dec
pop
mov
pop
ret
sub
lcall
dec
push
aas
sbb
daa
insl
insb
fidivrs
jne
lods
jnp
mov
ds
xchg
mov
jmp
jmp
inc
sar
push
fistl
ja
pushf
mov
out
push
test
clc
pop
popf
in
xchg
sbb
dec
cmpsb
mov
cld
adcl
add
xlat
cmp
mov
hlt
rcrb
lock
pop
test
movsl
jmp
loop
gs
imul
adc
lods
jmp
dec
inc
inc
jae
adc
int
xchg
mov
cmp
cmp
ret
cmp
das
push
jg
xor
test
sbb
ja
sub
mov
sub
and
or
cs
frstpm(287
ljmp
fiaddl
fwait
jo
dec
xor
add
out
add
mov
movsb
adc
repnz
dec
adc
jg
es
into
inc
pop
xchg
cmp
test
jl
push
dec
inc
fisubrl
roll
and
or
fistpl
sbb
xchg
xchg
jge
arpl
lds
sbb
int
insl
mov
call
dec
mov
inc
xchg
sahf
xchg
and
or
aaa
jmp
addr16
and
scas
jbe
cltd
icebp
adc
icebp
jbe
outsb
pop
inc
jno
mov
push
fisubl
mov
scas
jecxz
push
mov
mov
enter
popf
sbb
jbe
xchg
cmp
stos
fs
rcrl
ljmp
shr
push
xchg
xor
sub
enter
xor
fwait
ds
lret
lahf
add
movsl
lcall
dec
mov
add
and
fcompl
loope
push
jle
test
sahf
and
jbe
cltd
cmp
fwait
xchg
mov
pop
lahf
data16
mov
fidivrl
mov
in
push
rorb
out
push
in
push
inc
and
enter
add
and
push
loopne
fsubp
loopne,pn
dec
xchg
mov
fld
push
out
arpl
and
and
xor
cmpsl
adc
sbbb
shrb
mov
fnstsw
cld
cmp
lea
je
je
mov
xchg
jno
dec
enter
fcomip
loope
lret
pop
int3
inc
leave
mov
inc
inc
call
fwait
pop
repz
into
fcomps
or
xlat
push
mov
mov
push
clc
sbb
cmp
stos
cmp
pop
sbb
arpl
xchg
xchg
es
andb
add
cmc
int3
aam
and
aas
dec
pusha
aam
mov
es
les
fs
pop
push
pusha
cmp
or
push
fs
jmp
mov
jmp
mov
xchg
pop
es
mov
scas
xchg
fiaddl
xor
pop
and
dec
mov
mul
cmp
dec
fwait
mov
ret
paddusb
sub
std
sti
mov
test
jmp
xchg
xchg
mov
mov
jle
sbb
add
in
mov
js
jb
dec
arpl
and
aas
incb
leave
push
loope
scas
mov
push
add
iret
dec
je
stos
aad
mov
cmp
mov
lcall
xor
imul
sub
imul
aad
adc
xchg
cmp
arpl
lea
filds
dec
lock
sub
scas
cmp
mov
sahf
mov
lea
xchg
sub
sbb
popf
dec
pop
pop
lret
inc
dec
adc
lea
jge
icebp
sub
cld
xchg
add
lea
mov
in
outsb
pop
push
lea
cmpsl
jecxz
push
int
addr16
mov
test
outsb
mov
mov
add
lods
enter
sub
mov
add
cmpb
xchg
adc
mov
jne
jmp
sbb
stos
ret
js
adc
lret
adc
cmp
mov
call
lods
popf
jno
add
ret
rcl
aam
dec
aaa
cmp
jbe
lret
ss
or
addb
insl
sub
push
or
add
mov
call
in
inc
adc
loop
daa
inc
lret
out
testl
lock
sbb
iret
ret
sub
mov
rcr
push
or
les
sbb
sub
dec
mov
test
scas
pop
loopne
sbb
ficoml
sbb
mov
and
imul
cmpsl
test
mov
int
outsb
add
mov
xchg
loop
in
in
adc
into
mov
pop
mov
fcoms
pushf
mov
cld
jnp
xorb
sub
lock
mov
shll
cwtl
popa
roll
xchg
enter
sub
mov
cmp
aam
lahf
loopne
sbb
jg
pop
mov
aaa
xor
cmp
push
sbb
adc
xchg
add
xor
aas
sbb
lret
adc
mov
add
mov
jnp
sbb
cwtl
dec
xor
in
movsl
sub
cli
pop
loopne
jb
int
faddl
test
inc
inc
add
sahf
cld
or
add
push
rorb
test
cmp
addb
inc
push
add
xor
and
scas
push
in
xchg
lods
push
jl
mov
add
mov
jl
jmp
out
in
and
imul
shlb
mov
xor
mov
ja
mov
push
mull
xchg
mov
or
push
xchg
xchg
inc
mov
addl
dec
jle
dec
lods
sub
std
sub
fisubs
or
cltd
jp
ret
sbb
cltd
add
nop
or
xor
fstpt
push
fs
dec
inc
xor
pop
and
adc
push
lret
lds
sbb
add
sti
dec
add
and
push
push
lret
imul
or
xlat
mov
fstpt
fwait
mov
and
nop
test
fstps
inc
sub
mov
inc
cmp
cli
jle
push
das
out
inc
jns
ret
sub
jne
dec
cld
mov
sbb
movsl
mov
insl
scas
xor
icebp
push
std
lahf
dec
push
adc
in
pop
outsb
xor
xchg
pop
inc
std
ljmp
vminsd
jbe
push
into
jg
imul
or
stos
repz
cmp
sbb
push
call
test
jno
push
pop
xchg
fcomi
ret
mov
adc
cmpsb
scas
xchg
mov
loopne
sub
jno
loope
push
mov
push
lods
clc
pushf
mov
mov
ja
fst
xchg
pop
mov
dec
mov
cs
ss
popf
jge
inc
sub
xchg
imul
popf
mov
mov
dec
sbb
loopne
inc
scas
lret
into
pusha
or
mov
inc
sti
mov
mov
fnstenv
jmp
cli
jno
mov
mov
loop
mov
scas
xchg
xor
divb
int
stos
inc
cltd
pop
ret
out
fucom
pop
imul
in
je
push
jle
sub
loope
movsl
add
push
pushf
fs
stos
insl
scas
out
adc
xor
push
mov
sbb
sbb
cmp
popa
or
xor
adc
adc
jb
sbb
jecxz
jb
js
lret
dec
rorb
pop
xor
fldcw
mulb
lea
ret
mov
cmp
xor
push
mov
add
and
push
rcr
test
sbb
outsb
andl
sahf
es
in
jno
movups
ja
jns
outsb
jae
dec
xor
xchg
jno
mov
push
cwtl
push
xchg
mov
jp
negb
les
frstor
push
stos
xchg
or
xor
add
and
push
or
outsl
jns
mov
imul
dec
jp
push
vpcmpgtw
xor
enter
aas
mov
and
sbb
fabs
and
and
mov
test
pop
clc
stos
loope
aam
jp
sbb
adc
jg
mov
cli
pop
mov
push
flds
adc
add
lds
std
cs
cmc
sub
subl
les
mov
test
inc
lods
cmpsb
pop
mov
mov
bound
or
xor
negb
nop
ss
aam
rcrb
mov
jl
cwtl
lods
mov
pop
cmp
pushf
or
icebp
daa
sub
mov
pushw
push
jg
out
fisttpll
mov
jne
cmpsl
and
pop
jmp
add
jg
pop
imul
lea
dec
subl
fwait
adc
popa
or
aaa
popf
cmp
push
lods
push
sbb
add
cmp
xlat
ret
hlt
jbe
imulb
rcll
and
mov
lret
arpl
fs
jnp
push
cmp
repnz
scas
es
jmp
lds
xor
push
psraw
test
dec
sbb
bound
push
and
les
or
cmc
mov
subb
or
loope
out
sub
insb
test
flds
mov
dec
xor
ja
scas
lock
test
outsb
das
push
int3
faddl
sub
hlt
insb
xchg
bound
adc
cli
je
mov
stos
sub
cmp
add
pop
fs
das
jmp
sub
pop
pop
imul
xchg
dec
jg
test
dec
jbe
mov
mov
add
sub
orb
pop
addl
fcomp
cmc
aad
pop
out
jnp
add
clc
push
cmp
into
aam
ficomps
cltd
out
mov
andb
sbb
sbb
pop
push
lea
psrlq
outsl
mov
and
popa
and
imulb
sub
pop
shlb
jns
loopne
cltd
jl
mov
jb
pop
jns
in
leave
arpl
enter
inc
add
loop
in
arpl
and
push
mov
or
data16
iret
in
pop
mov
fstl
inc
repnz
into
jmp
in
cmp
push
push
inc
lock
negb
das
mov
mov
aaa
subb
inc
cmpsl
mov
outsl
pop
mov
movsl
lock
mov
jl
or
push
imul
mov
cmp
xor
pop
xor
mov
hlt
in
push
push
stos
fistpll
ljmp
sub
mov
dec
cmc
lret
mov
lods
insl
dec
cmp
mov
test
aad
xlat
sub
daa
push
jmp
jg
lock
pop
call
fsubrl
ret
dec
popa
cmpb
add
or
in
mov
push
jno
jno
lcall
aas
lret
ret
sbb
test
push
in
shll
mull
cltd
in
jmp
mov
mov
and
lock
or
mov
pop
fimuls
loopne
pushf
mov
popa
in
stos
adc
popa
xlat
and
cmpsl
lret
in
cltd
in
or
adcb
loope
cmp
cmp
sbb
or
mov
dec
and
push
mov
pop
sahf
push
xchg
sahf
imul
in
mov
sub
pop
add
jle
push
adcb
dec
rcr
ja
insl
inc
add
dec
sbb
sahf
jns
aam
jecxz
frstor
hlt
cs
xor
mov
test
lods
lea
cmpsb
xor
aad
push
std
cmpsb
adc
jne
aas
sub
xor
or
jecxz
inc
xor
std
mul
in
xchg
cmp
mov
xlat
sbb
inc
imul
je
sbb
pop
lahf
lret
xor
rclb
iret
xor
sbb
sbb
push
lret
xchg
pop
popf
aaa
xchg
daa
sub
dec
push
jnp
mov
mov
jmp
out
xor
lcall
dec
inc
rcll
insb
and
out
popf
mov
cltd
sub
into
xchg
in
xrelease
dec
cmc
sbb
dec
popf
pushf
cmpsl
outsb
rol
jg
xchg
out
sub
jecxz
pop
inc
aas
mov
pop
sti
aad
or
cmp
jmp
shll
push
lret
pop
pusha
popf
xchg
in
arpl
inc
jmp
mov
inc
lds
dec
jbe
sub
jl
add
int3
add
add
push
pop
in
fstpl
push
cmp
push
lret
cwtl
inc
mov
xchg
andl
stc
sub
test
jge
cs
addr16
sub
std
aas
in
lds
xlat
scas
sub
repz
mov
jmp
pop
adc
jl
xacquire
pushf
xchg
out
push
sub
mov
inc
jns
imul
lret
lret
add
add
mov
iret
sub
adc
ljmp
mov
adc
shrl
loopne
call
jnp
xor
int
inc
ret
jbe
cltd
adc
mov
push
fists
scas
lahf
outsl
fisttpl
shr
stos
cmp
sar
cmp
outsl
jecxz,pn
imul
or
pop
stc
paddusw
and
insl
mov
jns
jge
xor
fsts
cwtl
pop
dec
lods
adc
inc
fldt
enter
inc
dec
cltd
jmp
clc
xchg
mov
mov
xor
mov
bound
add
inc
sbbl
adc
adc
and
ffree
push
or
adcb
repz
xor
pop
and
dec
out
push
add
xchg
push
inc
jecxz
lods
sbb
sub
cmpsb
in
test
idivl
push
mov
push
jno
fstp
std
mov
jb
cmp
mov
lret
shll
mov
shll
popa
push
sbb
cwtl
test
out
ljmp
sbb
loopne
sub
out
stos
stos
scas
ror
jge
or
dec
cmp
dec
sub
mov
cltd
sub
lret
pop
mov
adc
addr16
xchg
pop
push
mov
adc
cli
adc
fmuls
pop
lahf
insb
ds
pop
pop
jmp
push
push
rcl
sbb
xor
or
ret
inc
shrb
loope
sahf
inc
mov
sarl
mov
cmp
dec
fsubs
jge
fldenv
lds
push
lock
jg
cmpsl
addl
test
cmp
out
test
adc
scas
test
ss
insb
aad
mov
mov
dec
xor
test
mov
jecxz
or
inc
testb
pop
gs
pop
iret
pop
xchg
popf
inc
mov
loop
or
fimull
in
sbb
inc
imul
test
popf
sub
sbb
insb
testb
pusha
imul
inc
jmp
aas
push
cmpsl
mov
push
lahf
test
fdivrp
mov
xor
int
das
lcall
xchg
shll
push
clc
andl
out
inc
push
jbe
mov
add
mov
xor
sbb
jbe
repz
adc
icebp
inc
nop
xchg
fwait
mov
xor
push
or
call
cmp
ret
pop
ja
scas
aaa
fisttpll
pop
rclb
pop
shrl
or
inc
cmp
jecxz
and
scas
ret
js
xorb
arpl
xchg
divl
jb
js
inc
jb
int3
mov
shr
xchg
notb
mov
sbb
in
ljmp
cmpsb
iret
xchg
push
out
and
jno
inc
nop
xor
ss
outsb
jno
mov
mov
lahf
nop
divb
mov
dec
cmp
mov
andb
fwait
repz
idivb
repz
and
xlat
and
sarb
adcb
push
inc
fs
cli
push
xchg
cltd
cmp
nop
mov
adc
notl
xchg
adc
test
mov
test
inc
fisubs
test
ret
jl
pop
cwtl
pop
jns
stos
pop
and
inc
adc
ljmp
mov
cmpsb
mov
adc
loopne
sbb
or
fcmovu
push
movsb
fcoms
movsl
mov
repnz
test
cli
mov
lods
rcrl
xchg
add
dec
fiaddl
cmpsb
pusha
xor
fldenv
out
inc
rolb
std
adc
inc
cmp
mov
sbb
pusha
nop
mov
mov
fidivl
sub
sbb
mov
scas
mov
mov
insl
xor
cmpl
adc
inc
gs
into
jge
inc
sbb
adc
jae
negb
loopne
sbb
cmp
cmp
int
xchg
lahf
icebp
dec
and
test
cmp
push
fldt
cltd
insl
mov
jle
mov
xchg
mov
ljmp
mov
jl
sub
mov
scas
push
xor
out
jl
loopne
cmp
push
jb
inc
jmp
nop
adc
xor
icebp
jno
xchg
push
cmc
cmp
push
sub
dec
sub
out
fptan
mov
adc
popa
cmp
roll
insl
xor
add
fbstp
in
roll
scas
stos
adc
jb
gs
adc
lret
and
sarl
cmpsl
push
push
add
movsl
xchg
out
jle
js
push
cli
jg
adc
or
insl
icebp
mov
sar
mov
xor
out
mov
sbb
scas
or
pop
int3
out
mov
cmp
or
and
mov
lret
adc
fstpt
mov
insl
pop
mov
sub
push
cltd
idiv
out
xor
fcmovnu
cs
push
inc
pop
dec
lock
jmp
sbb
push
shll
push
hlt
nop
xchg
inc
xchg
icebp
pop
sahf
inc
loope
hlt
mov
cltd
mov
adc
mov
fisubl
inc
aam
sar
das
and
push
push
inc
fidivl
cmp
and
mov
add
ret
mov
loop
aad
outsl
in
in
insl
in
movsl
sub
xor
fs
sbb
xchg
imul
loope
addr16
sbb
sbb
xchg
mov
stc
jmp
fwait
cmp
movsb
mov
mov
jbe
mov
mov
lds
sbb
lret
jl
outsb
nop
test
fcompl
fistps
mov
insb
dec
pop
cli
stc
shrb
sub
orb
jo
lds
sbb
pop
fcomps
fwait
ds
scas
lods
cmc
sar
test
outsb
das
lock
or
xchg
and
mov
mov
and
mov
repz
lcall
int3
add
test
es
hlt
je
cmp
mov
out
in
lds
loop
imul
push
xchg
mov
andl
xchg
sub
jecxz
mov
mov
movsb
lds
popf
sbb
push
js
pop
lret
mov
loope
xor
dec
xchg
hlt
fldenv
adc
jae
nop
imul
jl
inc
xchg
push
outsb
sub
dec
xor
ffree
pop
lcall
sub
daa
jae
lret
jp
popf
xor
and
addb
jecxz
adc
sub
rcll
shll
imul
mov
repnz
std
pushf
push
xor
xlat
divl
fildl
add
mov
test
gs
cmc
ret
stos
push
pop
inc
xlat
js
mov
xchg
ret
mov
or
inc
and
daa
pop
pushf
inc
lock
dec
repz
movsl
repnz
xlat
dec
addr16
xchg
insl
inc
push
push
into
inc
mov
lods
movsl
nop
push
scas
push
test
jg
pop
or
add
inc
ret
daa
push
xlat
inc
push
add
out
pop
sub
mul
stc
adc
adc
xor
mov
popa
mov
add
in
xor
add
imul
inc
mov
mul
decb
call
ss
jb
xchg
adc
dec
and
mov
push
jno
out
repz
cmpsl
xchg
xchg
mov
stc
and
push
cli
movsl
in
les
out
xchg
mov
inc
pop
outsl
sbb
xorl
jle
mov
jbe
jl
cmp
jae
inc
movsl
mov
cmpsl
add
xchg
push
pushf
aas
inc
push
add
sarb
jo
mov
movsb
and
cmp
fimull
rolb
push
fs
mov
push
hlt
push
and
xor
outsl
pop
repz
sbb
add
movsl
push
jg
gs
movsl
xchg
cwtl
clc
cmp
aaa
dec
subl
cmp
mov
xchg
arpl
jb
ja
enter
aad
shrb
jg
mov
scas
dec
xor
pusha
mov
xor
cmp
mov
mov
pop
mov
outsl
test
adcb
int3
pop
outsb
test
inc
mov
mov
aam
jecxz
dec
imul
sub
adc
aas
icebp
mov
push
aaa
fdivl
pop
or
dec
mov
mov
ret
fsubs
adc
mov
cmp
xchg
rcl
int3
loop
inc
fisubl
inc
sbb
cwtl
ljmp
les
lret
incb
out
xor
inc
mov
repnz
mov
or
dec
dec
push
adcl
leave
mov
dec
and
push
imull
add
jl
and
addb
shrb
and
pop
and
jp
pop
mov
hlt
insl
out
fisttpll
aad
sub
out
add
repz
mov
ret
xchg
fsubrl
pop
out
rol
sub
shrl
cmp
jge
sub
fs
mov
int
aad
and
ret
mov
or
mov
sbb
cmpl
sub
adc
stos
repz
test
or
divb
sbb
lods
in
mov
dec
jle
pop
in
popf
xor
xchg
jmp
and
and
fsubrl
push
dec
pop
fs
imul
iret
mov
ficoml
lock
push
push
test
pop
and
mov
or
add
in
cmp
add
loop
sub
test
rorl
adc
arpl
leave
and
in
push
outsl
push
aam
arpl
and
xorb
inc
cmp
inc
pushf
out
push
sbbl
push
pop
fcmovb
cld
mov
shr
int3
xchg
in
xchg
mov
inc
jg
pop
negb
mov
test
xor
std
lcall
push
and
arpl
pop
dec
scas
push
lahf
lcall
fs
mov
jne
push
xchg
jecxz
pop
out
sbb
or
push
adc
xor
loopne
inc
dec
jns
aaa
push
sub
cmpsl
or
cmp
sarb
rcrb
mov
push
jecxz
push
fcoms
adc
and
inc
lea
aaa
mov
xor
cmp
shll
pop
jg
adc
xlat
pop
and
sbb
dec
jbe
scas
popa
dec
adc
jbe
adc
hlt
mov
test
push
sarl
push
idivl
repz
insb
xchg
add
mov
dec
and
in
insb
lods
test
daa
sti
mov
jecxz
fisttps
add
xchg
sti
dec
fimuls
inc
push
jb
aas
and
or
dec
dec
push
out
into
imul
sbb
ror
rcrb
mov
hlt
adc
or
fld
mov
test
repz
xor
inc
add
cld
mov
jecxz
inc
rcrl
pusha
mov
cmp
outsb
xor
out
cmp
mov
cmp
mov
shrb
adc
mulb
mov
pop
jnp
and
cwtl
adc
cmp
dec
cmp
adc
ret
jo
cmp
pusha
jl
outsb
lods
sub
xor
mov
inc
jg
sbb
aaa
push
arpl
mov
add
cli
and
and
push
stos
jbe
andl
test
ror
push
mov
sbb
js
jae
int3
outsw
in
popa
mov
lods
and
mov
or
rclb
xchg
rolb
mov
cmp
sbb
mov
add
xchg
mov
repz
fisubrs
xor
lret
inc
scas
loope
test
fs
mov
push
gs
xchg
adc
aas
fs
arpl
stc
ss
mov
adc
xchg
aas
sarb
mov
pop
pusha
aad
testb
mov
jns
addl
push
adc
jecxz
sti
xchg
inc
and
imul
mov
imul
shr
call
adc
xchg
mov
mov
sbb
pop
ret
lcall
hlt
fdivs
stc
pop
ja
addr16
and
sub
xor
dec
push
or
jmp
and
push
and
jle
int
daa
icebp
jb
imul
call
and
pushf
add
scas
jecxz
imul
in
add
mov
js
mov
mov
rolb
cmpsb
rorb
into
fmul
das
fnsave
ja
in
dec
mov
xor
dec
test
xchg
jmp
ljmp
cmp
mov
pop
pop
addl
lods
xor
cltd
pop
and
inc
imul
dec
pop
push
push
mov
in
mov
jns
cmc
push
jl
xor
mov
mov
insb
insl
dec
adc
jle
adc
add
flds
push
aam
xor
dec
hlt
jo
xlat
std
and
out
inc
mov
or
shll
add
out
cld
sub
popf
fisttps
add
or
push
in
cmp
xchg
inc
dec
pushl
cmp
xchg
mov
jne
adc
add
arpl
pop
fdivrs
push
xchg
xchg
pop
loopne
leave
fcmovbe
mov
pop
or
fst
xor
or
and
mov
and
aam
outsl
movsl
add
movsb
ja
clc
ljmp
add
dec
xchg
push
xor
push
or
cmpsl
in
sahf
rol
sbb
sub
mov
les
loope
cmp
adc
test
mov
aaa
and
iret
cmp
jns
xchg
mulb
mov
xor
es
xchg
jmp
ljmp
imul
lcall
add
mov
pop
mov
add
add
mov
shrb
mov
xchg
dec
mov
xchg
lret
mov
or
outsl
sub
sub
jecxz
cltd
mov
jno
jne
mov
adc
xorb
stc
stc
push
aad
jno
imul
pop
or
ss
sbb
out
rcl
in
adc
xchg
in
mov
xchg
push
loop
repz
lods
jnp
jp
jne
test
inc
or
jg
push
imul
xchg
lea
and
orb
cmp
das
sub
arpl
jg
icebp
mov
mov
ret
lods
aas
sahf
or
sub
cli
mov
int
cld
add
shlb
adc
into
cmp
out
addb
aam
rorb
cmp
mov
mov
sbb
pop
xchg
repnz
sub
jmp
push
ror
nop
fldcw
push
push
mov
mov
cmpsb
mov
out
xchg
ja
int3
and
cld
out
mov
lcall
sub
mov
lret
rcll
sti
outsl
mov
dec
imul
subb
xchg
lods
push
out
stc
cli
div
and
sbb
cmp
lahf
jae
push
xchg
lret
cs
insb
aas
push
cmp
enter
insl
mov
stos
xor
pop
jle
lret
sarl
outsl
mov
jns
xchg
mov
mov
cmpsb
add
mov
mul
push
lods
aam
push
sub
aad
jo
movsl
sub
dec
ret
inc
pushf
pop
and
adc
popa
lock
mov
cmc
das
mov
shlb
mov
sbb
cmp
sub
jnp
and
push
or
out
dec
or
test
sbb
sbb
lods
push
fadd
sbb
lods
sbb
int
pop
mov
ror
add
dec
inc
cmc
dec
fsubr
mov
fmull
lods
jle
int3
mov
push
int
int3
pop
cmp
mov
push
xchg
xor
gs
in
and
cld
imulb
pop
jae
add
xchg
inc
inc
fisttps
adc
lahf
shll
ja
dec
cmpsb
les
mov
mov
inc
adc
push
inc
inc
loope
fnclex
cmc
mov
sbb
andl
ljmp
xor
mov
pop
or
add
lcall
cmpsb
sbb
sub
lret
or
fisubrs
mov
xchg
imull
fcmovbe
lret
lods
mov
pusha
cwtl
cmp
fisttpll
in
lods
pop
ds
daa
push
add
into
fcoml
mov
xor
and
fcoms
push
inc
in
loopne
je
or
out
sub
dec
inc
push
cmp
add
add
push
add
push
jbe
test
pop
aas
sahf
out
add
scas
sti
sarb
mov
lods
cmp
loope
mov
xorb
jbe
and
scas
mov
cld
hlt
mov
loop
pop
shlb
pop
iret
xchg
jmp
add
or
mov
mov
in
dec
sub
enter
lcall
cmp
or
pop
mov
popf
cmpsb
rclb
jno
and
mov
inc
cmc
orl
jecxz
jmp
lods
inc
into
mov
jns
aaa
xchg
cmp
ss
or
cwtl
sub
aaa
inc
test
sbb
aam
gs
lret
shrl
daa
pop
hlt
cltd
js
dec
lods
pusha
rorb
test
jne
or
push
pop
xchg
testb
jmp
lret
push
hlt
ret
push
pop
sti
scas
int3
out
push
push
mov
xor
rcll
mov
jg
sbb
lahf
mov
ret
addr16
out
cmp
fldt
lret
jmp
mov
push
cs
pop
xor
xlat
adc
dec
fcmovnu
and
add
cmp
inc
jmp
pop
dec
add
jbe
shl
les
dec
ffree
les
subb
in
adc
sub
jno
cmp
jg
loope
int
pop
jnp
sub
jge
das
pop
pusha
lcall
adc
ja
mov
stos
mov
jo
sbb
xchg
xchg
es
push
jp
fwait
push
loopne
cmpsb
outsb
or
imul
add
in
jns
xor
pop
test
or
add
push
xor
adc
pop
int3
sbb
jb
mov
movsl
cmpsl
pop
lahf
dec
pop
push
pop
stos
xchg
imul
or
int
cltd
lcall
aam
fmuls
test
movsl
mov
mov
lahf
imul
sbb
out
jnp
sub
jbe
inc
and
in
loope
shrb
jnp
add
and
dec
outsl
cmp
xor
xchg
ljmp
inc
jnp
pushf
or
jle
stos
xor
mov
push
dec
in
push
into
popf
add
cld
test
cmpsl
std
xchg
cmp
in
sbb
out
iret
adc
lea
or
int3
and
pop
mov
lahf
addr16
fimuls
xchg
loope
jb
adc
add
push
mov
hlt
js
mov
cmp
pop
lret
xchg
dec
xchg
inc
inc
inc
ret
outsl
jge
jne
mov
fimuls
aad
xorb
inc
pop
mov
mov
and
adc
popa
std
sbb
in
in
mov
filds
lret
dec
lds
fstpt
adc
mov
js
xchg
cmp
mov
imul
fwait
je
mov
out
pop
mov
leave
adc
cmp
xor
outsb
repz
rorb
or
movsl
iret
insb
cmp
cltd
ret
dec
jmp
ficoml
dec
and
lahf
mov
adc
push
imul
test
mov
pop
mov
cltd
and
inc
xchg
pop
inc
xchg
icebp
and
mov
jmp
imul
sub
xorb
dec
sub
cmp
sbb
jmp
and
out
or
sahf
adc
inc
mov
mov
push
mov
nop
pop
in
shlb
mov
pushf
pusha
bnd
inc
dec
xchg
cs
or
popf
int3
call
cmp
mov
hlt
out
or
mov
mov
jns
or
frstor
cltd
cld
sub
sub
stos
mov
push
in
lret
jae
fistpll
cmc
gs
fidivl
ds
jmp
sbb
fwait
jmp
xchg
cltd
popa
xor
test
jmp
or
mov
sub
rorb
sub
ljmp
dec
test
pop
adc
adc
movsb
arpl
dec
movsl
popa
adc
ss
loop
jmp
xor
add
repnz
xchg
test
or
std
and
xor
mov
jns
cmpsb
add
pop
pop
push
mov
cmpsl
popa
scas
add
test
xchg
fcmove
aaa
mov
mov
ja
cltd
test
and
sbb
jae
test
ror
mov
push
imul
test
dec
cltd
inc
loop
lock
jbe
insb
test
lods
sbb
sti
mov
movsb
push
imul
test
pop
xchg
mov
push
rcrb
xchg
testl
adc
pop
xchg
dec
daa
imul
test
pop
add
mov
dec
scas
cmpsb
cmp
cs
jmp
cmp
sbb
gs
and
test
jae
cmp
shlb
lahf
adc
sub
jmp
lcall
push
ja
or
out
scas
mov
mov
subl
fildl
outsl
ret
nop
pop
jle
aam
xorl
and
data16
es
jge
aas
sbb
outsl
dec
dec
pop
push
mov
loop
repnz
push
push
call
mov
jl
mov
xlat
faddl
cld
and
into
or
xchg
push
cltd
xor
jl
mov
popl
cmp
cmpb
dec
leave
xchg
push
xorw
or
push
addr16
pushf
lods
sub
push
stc
ret
outsb
pop
out
test
aam
jmp
into
rcl
xchg
pushf
sahf
adc
icebp
sub
mov
xchg
or
jne
push
jl
addr16
cmpl
pusha
std
lahf
mov
leave
aas
gs
les
and
shl
movsl
inc
pop
mov
movsl
mov
stos
ret
in
inc
push
jo
or
adc
lock
test
ret
fdivl
addb
push
test
out
hlt
subb
shll
fisttpl
out
dec
out
bound
gs
js
jmp
fmull
pop
xchg
sti
sbb
push
std
cli
into
lcall
aam
xchg
iret
sahf
sub
lods
divb
ljmp
pop
test
xor
leave
add
divl
out
fmulp
adcb
call
lds
push
nop
stos
das
dec
mov
leave
pop
testb
fistpl
or
jne
rcr
addr16
dec
ret
repz
add
or
fistps
cmp
dec
popa
lods
add
aam
imul
je
in
nop
dec
bound
jnp
fcoml
push
lods
int
cwtl
ljmp
stos
jno
div
lcall
mov
mov
insl
aad
pop
lret
xchg
call
or
sbb
cwtl
ret
dec
lock
shl
and
mov
mov
push
test
xchg
aaa
xchg
push
push
adc
xchg
xchg
test
jae
es
inc
sbb
mov
aam
pop
jnp
dec
cmp
pop
xor
pop
sub
ror
adc
ret
mov
ss
cwtl
add
loope
and
jl
push
scas
mov
dec
pusha
cmp
xchg
push
lea
mov
push
das
sbb
lods
outsb
push
and
add
push
ja
push
adc
xchg
sub
jmp
lds
cwtl
mov
dec
fsub
dec
pop
xchg
sbb
divb
pop
std
cs
dec
xchg
mov
test
out
out
andb
cmp
imul
sbb
xlat
fwait
inc
aam
or
xchg
add
arpl
sub
cld
mov
gs
sub
je
push
push
movhps
mov
in
sbb
add
sub
mov
xor
adc
cld
test
add
xor
lods
cmp
shlb
sub
inc
movsb
les
adc
push
pop
mov
fisubrl
pop
mov
sub
loopne
lret
stc
adc
out
xchg
inc
repz
js
adc
cwtl
loop
lock
mov
clc
rclb
inc
lods
lods
mov
or
cs
jecxz
out
mov
into
xchg
aam
mov
pop
fcomps
xor
sbb
iret
pop
stos
mov
fistpll
mov
xor
mov
mov
sarl
dec
push
shlb
jl
test
fcompl
dec
nop
push
adc
jl
testb
es
push
inc
mov
test
scas
in
mov
shl
test
jge
adc
loop
or
adc
lahf
mov
jo
pop
or
sbb
ja
test
jno
push
cmp
arpl
adcl
sub
sbb
mov
xor
and
inc
jl
push
cmp
loop
mov
insl
add
jp
lret
mov
jecxz
pusha
inc
push
push
ret
out
jge
pop
mov
cld
add
sbb
jle
jnp
sbb
iret
es
rcll
xchg
xchg
rolb
imul
insl
push
cmp
jae
shrb
dec
xor
dec
insl
sbb
lahf
test
cs
es
cmpsb
and
insb
adc
aas
pop
xor
ret
test
aaa
xlat
in
popf
sub
mov
popfw
pushf
loope
frstor
hlt
xchg
and
andl
sub
adc
sbb
add
idivl
mov
mov
movsb
jne
xchg
iret
or
imul
lea
jecxz
fwait
mov
les
xor
add
fstps
pop
adc
ljmp
sbb
cs
mov
sub
sub
sbb
out
ficomps
push
les
pushf
cmpb
aad
in
add
loopne
test
or
xchg
adc
jbe
aad
adc
mov
xor
fisubl
stos
mov
and
inc
jg
shll
and
inc
aaa
mov
inc
rcrb
mov
lods
mov
mov
xor
testl
mov
and
add
cmpsl
push
aad
xor
add
loope
daa
and
cmpl
cwtl
mov
push
cwtl
faddp
in
mov
mov
nop
ja
mov
xchg
mov
addr16
lock
and
es
sbb
xor
mov
adc
test
ret
xor
andl
sub
cwtl
mov
sbb
out
in
stos
test
or
push
insl
in
jns
int
int3
lods
ss
pop
add
inc
pop
jb
pop
or
ss
ss
dec
cltd
sbb
push
cmp
xchg
mov
cwtl
mov
fidivrs
jg
into
daa
inc
and
mov
iret
jae
push
gs
jl
rcrb
sub
clc
subb
out
jnp
nop
int
cmc
adc
or
or
cmp
xor
das
sahf
or
je
or
dec
push
push
movsb
jnp
nop
js
aas
pop
in
out
out
cmp
mov
addr16
inc
pop
shll
call
lahf
scas
pushf
mov
insl
stos
data16
inc
ror
scas
push
sub
xor
ret
sub
jmp
xchg
push
or
adcb
pop
fistl
sub
movsb
add
and
popa
cld
jb
pop
jno
pop
jp,pn
ret
into
shrb
jmp
clc
sbb
mov
pop
ss
or
mov
push
push
pop
mov
mov
arpl
pop
fbld
stos
fdivp
or
faddl
pop
mov
outsl
scas
mov
out
popa
mov
push
lock
push
jg
push
ja
mov
cwtl
push
repz
andb
nop
ret
insb
addr16
dec
pop
lods
pushf
daa
add
and
cmpsl
mov
rcr
test
int3
inc
push
mov
test
incl
and
out
pop
aam
ljmp
sub
daa
sub
add
mov
xor
in
inc
clc
pop
adc
in
fs
push
adc
pop
xor
inc
xor
adc
int3
lret
out
aam
out
rcr
test
call
aad
sub
cmp
out
xor
lret
dec
mull
cwtl
mov
sub
mov
ret
std
pop
pushf
inc
ret
mov
pop
inc
lods
popa
mov
cmpsb
lahf
inc
addr16
cmpsl
jbe
repnz
pop
cmova
mull
lret
stc
mov
push
pop
xchg
push
mov
xchg
gs
jno
pop
or
addr16
and
dec
mov
bound
jo
call
push
test
pushf
cmp
pop
cmp
adc
inc
movsl
lret
sub
mov
mov
adc
add
dec
and
rolb
cmc
pop
test
jmp
push
in
mov
jp
cmp
test
sbb
push
lret
add
repnz
hlt
lods
sbb
ljmp
mov
mov
sbb
or
cmpsb
pop
repnz
jbe
jecxz
xor
jl
cmpsb
call
scas
movsb
mov
das
mov
bound
addr16
js
and
adc
sbb
xlat
xchg
test
sub
xor
jmp
es
insl
and
sub
in
push
jge
pushf
pop
jns
jle
sbb
out
ss
xchg
xlat
xchg
mov
es
pop
xor
mov
pop
adc
inc
mov
sti
cmp
inc
je
cmc
xchg
xor
popa
jle
sbb
leave
cld
and
add
jb
push
cmp
pop
adc
daa
push
or
add
inc
lcall
popa
or
fsubrl
aas
es
add
sahf
lret
adcb
repnz
sub
fnstcw
das
repnz
or
test
out
dec
imull
je
fistps
push
jnp
nop
cmp
loopne
dec
push
sub
or
xchg
call
insb
mov
mov
fdivs
fmuls
push
mov
fnstenv
xor
mov
dec
sub
vaesdec
clc
jmp
popaw
fstps
dec
add
mov
outsl
shlb
adc
xor
fistl
jl
loop
xor
bound
rcl
inc
add
stc
push
pop
scas
mov
pop
xchg
dec
cmpsl
test
decl
cld
aad
jns
inc
js
rclb
cli
mov
dec
adc
mov
cld
push
adc
fcmovbe
mov
jae
scas
mov
xchg
or
add
loope
fisubs
xchg
jbe
sub
mov
inc
adc
and
and
fimull
inc
fbstp
xor
xor
cmp
das
lea
ljmp
inc
xchg
test
gs
inc
push
or
or
cmp
or
pop
pop
or
mov
mov
dec
or
sbb
out
jl
nop
arpl
ljmp
sarl
imull
int
out
sub
cmpsl
xor
int
pop
or
cmp
lds
sub
dec
daa
or
mov
jnp
and
xor
je
mov
pop
push
xor
sbbb
jmp
sub
jle
jb
stc
mov
add
xchg
xlat
cmp
fsubl
cli
and
pushf
hlt
test
xchg
xor
sub
pop
mov
sbb
in
cltd
xchg
mov
incb
aad
fsubr
test
les
or
push
sarl
pop
inc
mov
jns
jg
sbb
aam
cld
test
fisttpl
test
ljmp
pop
js
sub
sbb
out
push
cmpsl
nop
adc
push
loope
in
sbb
cwtl
lret
lcall
int3
cmpsl
xchg
mov
dec
jmp
ret
sub
or
push
or
rcrb
xchg
outsb
ja
sar
out
or
pop
clc
sub
mov
rep
xor
cs
aas
imul
xlat
jge
fstps
jmp
inc
outsb
pop
cmc
inc
lods
pop
inc
lds
js
fxam
dec
inc
mov
les
imul
push
loopne
fidivl
sbb
hlt
adc
mov
fcoms
rolb
sbb
fsubs
lret
xchg
dec
fisubl
sub
pusha
lret
jle
push
push
xor
cld
adc
xchg
fstpl
sub
push
test
in
cli
and
aam
xchg
xor
jp
outsl
sub
lods
fwait
ret
mov
fistps
push
ret
xor
push
sub
lock
insb
addr16
mov
stos
mov
dec
jno
fstl
sbb
iret
mov
loope
daa
and
ljmp
iret
push
xchg
and
mov
clc
mov
push
sahf
mov
push
mov
pushf
fdivp
sbbl
pop
dec
pop
hlt
loop
jge
scas
mov
adcb
xlat
test
cld
movaps
or
adc
mov
xchg
adc
dec
jecxz
inc
mov
mov
cmp
lcall
int
test
inc
test
sub
cmp
xor
aaa
cmp
rorb
and
mov
inc
jbe
mov
clc
les
jge
dec
jb
cmp
jns
pop
mov
gs
inc
shlb
les
outsl
mov
les
jmp
fwait
je
sub
xor
bound
mov
jo
rorb
and
dec
sbb
jns
shlb
fucomip
lret
push
pop
sub
xor
cmp
out
xor
fcmovnb
bound
lahf
mov
imul
outsl
push
mov
pop
popa
or
xchg
and
jecxz
ja
pop
loope
mov
stos
pusha
sub
dec
jnp
mov
in
sti
adc
mov
pop
stos
cwtl
ret
ret
sub
push
call
mov
push
inc
rorb
push
cmpsb
pop
lret
mov
mov
ret
addps
dec
mov
mov
jne
dec
cmp
mov
loopne
push
aas
loope
add
mov
push
ror
jmp
daa
push
push
arpl
test
xchg
adc
mov
xor
sub
xlat
mov
adc
push
mov
push
mov
out
and
sbb
xchg
add
dec
daa
mov
shlb
rcr
loopne
sub
rcr
mov
sub
cli
pusha
adc
sub
fcomi
sbb
lock
or
sub
fwait
push
int3
jge
shlb
popf
ret
mov
xor
leave
lret
add
sti
rcrl
xor
or
testl
cmp
rcl
loop
xor
test
idivb
aaa
pop
divl
push
mov
hlt
stc
imul
inc
lods
sysenter
lahf
and
xor
cmpl
push
repz
xlat
scas
push
push
sub
xchg
pop
aad
xor
sbb
jb
lahf
outsl
push
lahf
jl
mov
mov
fisttps
movsb
push
mov
in
pop
out
sbb
outsl
ds
lret
mov
ret
push
fildl
adc
xchg
mov
cld
push
jmp
scas
outsb
push
jns
insl
xorb
dec
xlat
or
inc
push
mov
cmp
xchg
inc
fcomps
sub
push
adc
cmp
mov
jp
push
sub
std
pop
shll
cmpsb
xchg
push
cli
mov
repnz
mov
ljmp
jbe
xor
xor
stc
movsb
xor
and
cld
cld
xchg
clc
test
push
lcall
pop
call
cmp
dec
push
in
addr16
ret
xor
push
xchg
fdivrl
pop
testb
mov
lea
cmpsl
and
addr16
jnp
adcb
jb
les
and
lret
fiaddl
mov
xlat
sub
dec
add
and
scas
cmc
call
shrb
or
mov
mov
icebp
dec
fcmove
pop
adc
sti
or
aaa
lret
inc
adc
pop
pushf
insl
xor
std
pop
shll
mov
jl
dec
scas
lock
inc
gs
jl
adc
enter
xchg
mov
test
loopne
ss
lods
and
pusha
xchg
sub
aad
je
sbb
cwtl
fnsave
stos
div
push
sbbb
imul
je
mov
call
lret
popf
les
loopne
cmp
pop
push
inc
bound
pop
jbe
leave
jecxz
cmp
and
mull
fstps
aas
jmp
clc
std
dec
pop
sub
pusha
mov
inc
push
notl
and
jns
jp
mov
pop
dec
push
jbe
cmp
cli
ret
push
sub
stc
rcr
loope
mov
jne
push
pushl
adc
mov
cmp
or
lods
lods
mov
adc
cwtl
or
shll
mov
inc
inc
cmpsb
or
stos
ljmp
mov
inc
mov
mov
xor
jbe
fwait
jmp
push
pop
push
push
or
cmpsb
pop
push
push
sub
push
push
arpl
mov
mov
ja
fdivs
mov
mov
sub
js
inc
int
in
mov
jg
mov
pop
ret
mov
mov
fstpl
add
test
push
movl
cmpsb
test
iret
aam
movsl
push
imul
cmp
idivl
loope
adc
pushf
popl
mov
push
and
lahf
lods
cmp
repnz
xor
test
add
cmp
cltd
test
add
jae
cmpsl
sbb
out
fdivrl
cwtl
dec
lret
push
mov
int
sbb
mov
sbb
es
into
cmp
xchg
xchg
cli
add
pop
dec
jmp
add
addr16
pop
jmp
in
clc
sub
jge
je
std
jl
dec
jo
dec
mov
lahf
inc
sub
movsl
popa
sub
ret
push
cmp
mov
hlt
sti
out
dec
icebp
cs
dec
mov
mov
jg
jmp
sbb
test
test
mov
clc
mov
scas
xchg
push
push
in
add
mov
adc
cmc
lret
adc
push
pop
inc
test
jp
mov
xchg
daa
xchg
pop
dec
js
out
cld
andnps
and
in
dec
test
pop
mov
mov
mov
aas
je
and
leave
dec
nop
cmpsb
cltd
sbb
mov
adc
nop
sbb
cs
mov
lahf
jl
mov
mull
dec
cmp
ret
add
mov
jmp
mov
in
push
aad
mov
arpl
rcl
int
mov
jecxz
arpl
jns
pop
xor
movsl
add
aam
xchg
and
jp
shlb
cmp
pusha
or
sti
les
test
inc
inc
mov
mov
js
lcall
cltd
fildl
pop
mov
js
imul
cmp
arpl
dec
orb
jmp
sbb
scas
and
ret
dec
dec
adc
push
fdivrs
shll
or
dec
push
test
mov
incl
pop
push
sub
dec
bound
add
in
ljmp
pop
pop
scas
sub
inc
xor
nop
mov
rcrb
mov
xchg
jl
ret
pop
push
aas
fimuls
jmp
data16
shlb
cli
inc
dec
in
or
aad
push
pop
jecxz
pop
push
xor
ja
inc
fs
je
add
ffree
jns
jnp
aaa
xchg
pop
inc
inc
in
call
daa
inc
xchg
mov
repz
pop
lret
aaa
lret
jg
daa
leave
cmp
inc
push
xchg
xchg
pop
and
imul
into
pop
push
cs
lea
dec
sbb
cs
stos
fsubl
xorl
arpl
pop
jmp
or
sub
push
movsl
pop
and
cmpsb
jno
mov
sub
jp
imul
out
add
pop
fs
jle
insb
mov
fst
mov
pop
insb
dec
jmp
mov
stos
xor
addr16
popa
lret
mov
in
pushl
nopl
cmp
and
cmp
and
in
in
jae
lods
das
ja
js
push
mov
inc
mov
outsl
icebp
testl
sub
sbbl
mov
fwait
mov
add
mov
sub
mov
andb
rcll
out
ds
cli
inc
xor
pusha
scas
adc
lahf
jbe
mov
mov
dec
inc
and
in
xlat
out
push
dec
loopne
imul
js
call
stos
lods
and
push
das
cmpsb
inc
and
sbb
sub
and
sbb
pop
add
or
mov
ljmp
xchg
idivb
test
sahf
sbb
mull
stos
add
push
cmp
in
sub
cmp
repnz
aad
push
xor
fwait
movsl
or
xor
add
addr16
mov
adc
jnp
pop
add
jg
fcom
cli
aaa
movsl
jg
add
and
lods
aad
lds
mov
fbstp
xchg
xchg
mov
pop
xor
je
rorb
test
fmulp
push
add
inc
push
inc
loopne
sbb
mov
std
lea
jbe
js
inc
pop
data16
daa
mov
shl
out
dec
out
repz
mov
jno
leave
mov
orb
push
and
sub
fdivrp
or
and
movsb
jne
push
xchg
dec
and
or
sar
cmp
inc
je
stc
clts
addr16
cmpb
sbbl
outsb
or
cmpsb
sar
mov
jmp
leave
cli
cmp
pushf
mov
push
adc
sbbb
arpl
xchg
aam
push
ret
lea
aam
fs
xlat
imul
daa
sbb
movsl
adc
xchg
lods
ret
xchg
xor
pop
loope
loop
iret
xchg
adc
ja
or
mov
push
adc
push
dec
test
pop
push
popf
and
and
das
lahf
mov
xor
test
xor
push
addr16
sbb
out
sarl
std
addr16
into
out
dec
loope
fimull
sub
push
mov
xchg
mov
int
das
outsl
dec
xchg
mov
add
mov
xchg
movsb
mov
cld
pop
clc
and
in
jecxz
add
aas
wbinvd
std
dec
iret
mov
dec
lods
adc
inc
lods
sbb
lcall
inc
jb
and
mov
popf
push
jg
pop
scas
push
mov
add
mov
jo
mov
mov
movsl
imul
push
xchg
fdiv
adc
fimull
fwait
rcll
out
cmc
mov
adc
in
sub
incl
mov
jae
pusha
loop
clc
xchg
jno
shlb
int
inc
add
scas
jmp
sbb
cltd
and
cmp
or
pop
jae
cwtl
inc
mov
lret
testb
push
mov
or
pop
lahf
dec
lahf
fnstenv
cmpsl
lods
dec
out
dec
cmp
cli
ss
lods
jmp
addr16
testl
lods
sbbb
mov
add
subb
jns
movsb
movntps
iret
and
pop
adc
xor
and
or
nop
test
pop
int
add
adc
inc
inc
nop
xchg
mov
rep
movsl
testl
dec
push
daa
lds
popl
or
jmp
imul
xchg
in
test
and
pushf
outsb
and
fsubrl
mov
roll
daa
fldl
inc
dec
mov
scas
loope
inc
pop
sti
stos
int
pop
pop
jecxz
xor
sti
clc
sbb
sub
insb
push
cmp
push
pop
fsts
sub
cmpsb
inc
pop
ljmp
pop
aaa
out
in
lcall
dec
in
and
aam
or
subl
inc
inc
mov
xchg
adc
cltd
sbbl
cmp
test
mov
insl
fiadds
notl
or
jb
arpl
rorb
sti
sbb
jb
out
ret
inc
addr16
cmp
popa
popf
into
mov
xchg
xchg
pop
or
sbb
fs
push
pop
mov
loopne
fbld
nop
adc
mov
sarb
fistpl
cmp
scas
push
sub
and
pop
pop
mov
fnstenv
test
sub
stos
dec
xor
push
stos
push
cld
push
xchg
fwait
mov
nop
inc
jp
mov
adc
les
arpl
sub
pushw
movups
nop
out
jns
sub
sub
cmp
push
fisttpll
addr16
lret
cwtl
pop
add
mov
sub
cmpsb
xchg
inc
push
xor
imulb
jne
fsin
xlat
sub
lds
fwait
addr16
mulb
filds
pop
mov
sbb
addb
mov
in
pusha
aam
add
lods
and
push
push
lods
subl
lods
inc
jae
test
popa
in
shll
in
loopne
mov
insb
and
cld
sbb
dec
mov
xlat
dec
pop
xor
imul
mov
xchg
int3
and
movsb
and
push
jle
cmp
mov
cmp
dec
adc
sub
mov
mov
fs
xor
or
jnp
popf
cld
jnp
orl
xlat
lea
mov
cmpsl
jns
pop
outsb
pop
mov
cmp
je
or
movsb
mov
les
leave
mov
ljmp
into
ret
xchg
mov
sbb
notl
repz
sbb
loopne
jae
cltd
es
sarb
sbb
push
dec
mov
or
push
sarb
out
mov
xor
into
pushf
idivl
mov
dec
icebp
iret
aas
mov
lret
in
lea
repz
push
popa
mov
dec
mov
pop
fs
sbb
dec
push
arpl
repnz
aaa
ljmp
insl
add
lods
andb
data16
int3
into
out
ret
adc
das
icebp
es
cmp
test
test
jmp
iret
fmuls
push
xchg
in
mov
cmp
rorl
jecxz
jmp
mov
cmc
or
jl
addr16
test
sbb
xchg
addr16
push
dec
daa
lret
dec
test
int3
mov
and
fmuls
add
mov
stos
jae
dec
call
jo
mov
rorl
push
xchg
out
inc
jmp
pop
gs
test
cmp
inc
out
sub
sbb
rcrb
or
add
or
push
inc
jnp
sub
es
push
out
sahf
lahf
insb
push
jno
xchg
shl
fimull
jo
leave
mov
cltd
pop
sbb
mov
data16
mov
shrb
mov
cmp
cmp
inc
fmuls
mov
stos
fwait
jb
mov
inc
clc
jmp
xor
in
adc
mov
les
xchg
aas
jbe
lcall
iret
imul
adc
scas
movsl
out
orb
fnstcw
out
mov
das
sbb
push
test
sbbl
lret
or
and
popa
ja
mov
in
ljmp
ds
leave
jae
mov
inc
aam
jle
into
or
inc
cmp
jbe
add
imul
test
sbb
or
movb
scas
ds
push
pop
dec
test
xchg
cmp
jmp
xorl
sbb
fcomps
adc
out
sub
data16
sbb
blci
dec
in
fs
mov
ds
and
ret
std
push
mov
dec
inc
mov
lcall
adc
imul
cmp
div
mov
adc
lock
sub
jge,pn
mov
je
xor
subb
int3
push
daa
sti
cld
adc
repnz
f2xm1
stos
in
andb
push
lods
nop
dec
push
push
je
add
mov
in
xor
ficoms
in
mov
test
cmp
rorl
imul
mov
mov
jne
cltd
sub
dec
and
inc
fs
imul
sbb
mov
inc
xor
adc
push
sahf
lret
inc
les
add
mov
lret
lcall
pop
pop
sarb
cmpsb
mov
test
mov
push
mov
mov
sub
dec
ss
lcall
test
mov
mov
sbb
sub
and
scas
adc
mov
xchg
divl
sbb
mov
test
add
mov
fstp
ret
and
sub
inc
jbe
in
mov
jecxz
xor
jbe
out
jmp
dec
es
inc
test
pushf
and
inc
popa
jg
mov
test
adc
add
dec
xor
es
ret
lods
movsb
je
fdivrs
jb
pop
lea
or
ja
push
sub
mov
imul
jle
or
int
fmuls
cmp
jns
xor
data16
mov
push
rcrb
iret
rol
sub
sbb
mov
int3
pop
icebp
add
pusha
sti
jno
jns
and
data16
pop
sahf
movsl
push
insb
sbb
out
xchg
cmpsb
ljmp
faddl
testl
es
xchg
cmp
enter
xlat
pop
jmp
divb
xor
adc
shrb
enter
lret
inc
mov
cmp
add
and
add
fnstcw
arpl
mov
sbb
xchg
push
push
jno
insb
xchg
outsb
mov
add
mov
jno
int
cs
stc
fiaddl
pushf
dec
fisubrl
jo
cmpsb
cmp
sub
cmp
add
loope
mov
add
sbbb
les
or
stos
jb
pop
lds
pop
test
loope
add
mov
loop
and
or
mov
pop
push
adc
scas
ja
push
test
xor
push
cmp
lock
add
inc
fsubrs
add
lds
cmp
shlb
clc
pop
pop
mov
cs
mov
lahf
jae
mov
in
jmp
mov
or
subb
outsb
cmpsl
mov
dec
dec
xchg
subl
int
pop
cs
das
insb
sbb
hlt
cs
test
and
ss
test
and
loopne
adc
push
ror
test
mov
les
imul
imul
sub
cmc
push
pop
mov
fmull
push
decl
sub
adc
popa
cmc
repz
xor
xor
sarb
imul
add
jno
js
cmpsl
ret
js
cld
test
push
mov
cmp
xchg
lock
data16
sbb
idiv
pusha
inc
aaa
jle
inc
cmp
repnz
ljmp
pop
icebp
or
sub
sti
rcll
in
arpl
xor
or
lea
sbb
dec
dec
movups
pop
sbb
in
sti
mov
in
mov
jmp
das
js
inc
out
cmp
data16
out
fisubrl
jmp
stos
dec
add
mov
jmp
and
rcrl
test
mov
ret
stos
shr
xchg
cmp
jge
cmp
loopne
gs
dec
in
xor
ret
test
adcl
test
scas
test
sub
stc
xchg
mov
pusha
mov
pop
lret
inc
xlat
or
mov
xchg
pop
mov
xchg
xchg
mov
add
mov
sub
in
adc
inc
inc
mov
sahf
shl
push
jmp
jnp
push
push
test
push
and
scas
rolb
adc
fsub
popf
adc
ljmp
outsl
xchg
dec
dec
je
xchg
and
cmpsb
dec
pop
addr16
cwtl
lods
rolb
in
jecxz,pt
jecxz
in
sbb
sub
mov
adc
add
scas
les
adc
lock
adc
jbe
divl
cmp
mov
sbb
push
inc
outsl
dec
enter
dec
mov
popf
ja
mov
xor
popa
cmp
in
adc
inc
jb
push
ret
xchg
insl
cmp
fscale
push
cmpsb
cmpsb
fcmove
jb
sub
xor
aad
or
ret
sti
or
ficompl
jno
imull
jle
fidivrl
mov
int
ret
lcall
fimuls
sahf
aas
loop
xchg
stos
test
and
xchg
sub
adc
cld
ljmp
inc
in
xchg
mov
pop
cmp
sti
in
sub
jge
jp
loopne
pop
mov
insl
sti
pushf
mov
fstl
jns
mov
lahf
cmp
push
and
xorw
and
and
push
mov
loopne
mov
mov
setae
ja
sahf
lahf
xchg
push
lcall
inc
mov
xchg
fidivs
clc
dec
pop
mov
sub
fcoml
lods
cltd
idivl
out
add
xorb
popa
jmp
mov
icebp
fdivrs
jno
pop
ja
lcall
dec
jl
out
pop
mov
into
xlat
in
jne
shr
or
inc
inc
push
es
aad
sub
mov
stos
adc
pop
pop
lcall
ret
es
rorl
adc
lret
cmpsl
or
cmp
push
cld
pop
test
sahf
lidtl
rolb
js
in
jle
repnz
cmp
jecxz
push
jbe
lds
roll
or
lret
dec
lock
repnz
mov
xchg
push
xchg
popf
sub
ffree
pop
ss
push
std
arpl
dec
pop
int3
dec
cs
mov
iret
inc
movsl
outsb
stc
rorl
push
inc
xor
sahf
call
scas
add
pop
adc
idiv
leave
outsb
std
leave
push
repz
sub
dec
jns
arpl
stc
aad
and
xchg
fs
xor
sub
xchg
adc
dec
jae
in
push
lcall
push
in
testl
daa
ja
popa
repnz
cld
nop
and
jg
xor
adc
mov
push
push
fs
insl
es
inc
js
xor
dec
addb
mov
jb
or
loop
mov
adcl
aaa
pop
jmp
outsb
enter
xlat
mulb
scas
out
push
dec
mov
xor
cli
insb
jp
push
cld
out
je
outsl
inc
int
mov
mov
or
jb
add
sbb
mov
iret
xorb
mov
adc
cmpsb
call
call
int3
cmc
mov
xor
and
enter
movsb
popf
add
stos
scas
stc
push
jp
mov
push
gs
popf
pop
sbb
add
xor
in
aas
push
xlat
jge
test
and
jne
nop
js
fst
dec
pop
jne
mov
daa
scas
ds
fldl
sbb
push
xor
jns
mov
xor
cmp
add
pop
dec
inc
adc
cld
or
and
or
scas
mov
mov
sbb
xlat
inc
loop
sbb
adc
in
xchg
push
loope
xchg
stc
mull
fcmovu
xchg
negl
or
mov
clc
adc
and
pop
test
mov
cli
jmp
rcrl
outsb
dec
pop
mov
mov
mov
testb
push
jno
sbb
daa
aas
test
xor
sbbl
xchg
mov
fdivrs
inc
jns
push
lahf
mov
loope
addb
in
and
test
add
inc
ret
popf
or
sbb
sbb
fists
test
jo
scas
nop
or
ficoml
hlt
mov
cmp
addr16
jb
ja
in
out
cld
and
and
sub
jnp
mov
es
xor
lcall
cmpsb
ja
ret
xor
xchg
pop
into
out
daa
aam
sub
push
xor
aam
notl
icebp
mov
pop
cmp
mov
aam
ffreep
pusha
push
add
cmc
add
mov
xor
jge
push
out
mov
dec
es
adc
jmp
in
sbb
sbb
rcrl
inc
adc
outsb
mov
subl
stos
lcall
stos
inc
int
rol
jp
push
push
fwait
aaa
dec
adc
fists
popa
mov
inc
mov
out
pop
inc
or
mov
sbb
divb
pushl
sbb
and
outsb
clc
jns
xchg
adc
imulb
jno
andb
imul
hlt
sahf
pop
dec
out
pop
lahf
call
jmp
pusha
or
jne
dec
aaa
xchg
aam
ret
sahf
test
mov
cs
faddl
add
insl
adc
pop
lock
pop
inc
stos
lret
mov
jp
pop
push
cmpsl
imul
mov
loop
leave
mov
scas
add
xchg
jne
ficoml
or
mov
outsb
lret
inc
mov
cmp
push
call
out
and
call
into
cwtl
pop
movb
jmp
and
sub
mov
add
mov
iret
fldt
repz
loopne
lcall
and
pop
in
mov
jmp
add
xchg
jle
and
push
and
mov
jmp
adc
daa
cmp
loope
sbb
sub
cmc
in
sub
jno
adc
in
shlb
jbe
roll
stos
sbb
cmp
subb
aad
cs
jmp
test
cmp
aam
mov
xchg
mov
push
or
xchg
xor
mov
imul
mov
or
xchg
dec
lock
sbb
insl
loope
push
push
js
add
cmp
out
aad
inc
loopne
and
ja
mov
and
pushf
sarl
xlat
adc
pop
push
subl
dec
or
xor
hlt
aas
jmp
rorl
add
cmp
fcmovnbe
clc
dec
outsb
and
lcall
xchg
jl
ds
cmp
dec
cld
jo
int3
popf
ss
pop
ret
aad
pop
add
mov
icebp
nop
in
add
lret
and
loope
fdivl
movsb
int3
add
mov
das
mov
call
mov
out
pop
fidivl
out
repnz
adc
push
pop
push
aaa
lea
dec
inc
mov
or
cmpsl
push
mov
fistpll
fwait
push
mov
dec
xor
push
mov
mov
scas
jmp
loop
sbb
fdivrl
wbinvd
insl
jb
xor
aas
dec
fistpll
hlt
jns
js
fs
popa
dec
fnsave
stos
pop
push
pop
lods
xor
insb
enter
adc
push
fs
fisubrs
imul
repnz
push
test
insb
xchg
lods
pop
xor
fidivrs
sti
test
insl
push
jmp
mov
push
clc
leave
or
or
jae
xor
add
arpl
repz
and
mov
pop
pop
sub
pop
jl
or
or
and
cmc
in
adc
das
sbb
rclb
pop
cmp
xchg
or
out
pop
cwtl
jae
xlat
push
in
push
xlat
xor
movsb
aas
sarl
xor
jnp
sub
test
ret
hlt
adc
or
mov
dec
and
push
leave
ss
movsl
ljmp
popf
rol
cs
mov
mov
in
pop
test
imul
cmpsb
fisttps
stos
jge
mov
subb
loope
shll
imul
mov
js
or
pop
push
out
push
adc
or
pushf
jne
jle
inc
shl
cmc
data16
cld
push
pop
repnz
ds
pop
inc
ja
iret
lock
aas
sub
es
or
jb
lahf
lods
mov
pushf
pusha
enter
xor
xchg
jle
and
imul
gs
jecxz
adc
in
aas
mov
popa
das
in
cwtl
mov
lds
push
popa
into
repnz
stos
xchg
xchg
dec
sahf
fs
sbb
stos
cmp
cmp
jns
aaa
or
push
xchg
push
cmp
dec
or
mov
adc
pop
add
jae
fcomps
lods
decb
push
push
sub
jmp
out
pop
jl
mov
insb
mov
fsubs
sbb
pushf
pop
lret
shlb
icebp
lds
dec
push
shll
iret
outsl
mov
inc
fwait
in
mov
and
xchg
loopne
lcall
cmpl
sub
daa
xorb
shll
dec
in
sub
loopne
sub
xchg
mov
push
popf
int3
xor
or
push
fildl
xlat
add
cmp
mov
int
adc
xor
scas
mov
jl
repnz
xor
fisttpl
ret
dec
and
mov
add
xchg
rol
cmp
jp
movsl
cli
es
hlt
lods
scas
shrb
jne
pop
xchg
ss
adc
js
fldt
pop
xchg
pop
cmc
cmc
mov
minps
or
xchg
and
adc
repnz
pop
jne
add
xchg
xchg
adc
cmp
adc
push
outsl
jae
fldl
and
bound
ss
jnp
out
push
test
cmp
sub
push
inc
cmc
inc
test
mov
add
adc
movsl
jmp
mov
jl
addr16
dec
lds
in
jecxz
mov
xor
sti
int3
push
cwtl
mov
mov
in
jle
mov
add
inc
dec
lret
pop
loopne
popf
cmp
or
fwait
bound
dec
lahf
ret
pop
and
adc
jp
dec
mov
out
and
rcrl
jge
loopne
pushf
xor
mov
aad
rolb
lret
mov
out
push
sbb
xchg
inc
lock
aaa
lret
ret
aam
shll
xor
aaa
ficoml
mov
add
call
pop
popa
in
push
repz
aam
mov
lods
jle
cmp
popf
sbb
add
mov
fistpl
xchg
test
lds
idivl
inc
scas
mov
lret
push
push
and
mov
fbstp
add
movsl
clc
lcall
cmp
pop
xchg
mov
jmp
mov
push
add
jo
adc
dec
data16
xchg
dec
mov
push
pop
push
lret
test
adc
jg
aaa
jnp
outsl
std
sub
movsb
adc
out
mov
ss
setne
sub
mov
iret
mov
fldenv
icebp
stc
sbb
fdivs
ds
push
fists
pop
sbb
pop
sahf
adc
jne
push
pop
mov
cmpl
out
les
inc
in
xchg
dec
pop
pusha
cli
notb
repnz
and
or
int3
std
xchg
aad
or
clc
stc
repnz
lods
daa
cmp
lret
rorb
inc
pop
fisttpll
and
cmp
xchg
add
mov
in
inc
xchg
ret
adc
int3
mov
out
inc
cmpsl
mov
or
daa
clc
sbb
pop
movsb
fsubr
int
notb
cmc
lds
stos
or
mov
sbb
dec
jge
lret
inc
and
adc
push
subl
mov
dec
mov
in
fs
adc
out
loop
xlat
and
jmp
sub
cmp
int
mov
mov
mov
outsb
pop
sub
and
mov
idivl
fists
and
insl
inc
xlat
ss
adc
mov
pop
pop
jg
out
adc
sbb
hlt
scas
lcall
add
fisubl
mov
inc
xchg
add
rcrl
and
and
xor
inc
outsb
das
in
add
and
mov
fstl
shrb
push
inc
jp
in
mov
lods
mov
cld
fnstenv
pop
pop
cmpsl
ss
scas
data16
dec
mov
mul
in
popl
cmpsl
xor
fidivrs
shlb
mov
and
adc
adc
jns
jmp
cltd
sub
loope
or
cmp
orb
bound
movsb
cmp
jb
dec
push
cli
push
or
mov
mov
and
adc
pop
push
movl
and
sbb
jecxz
xchg
xor
cld
pop
jg
adcb
jg
aas
push
mov
sbb
stc
mov
daa
jbe
out
sbb
inc
lcall
add
mov
cld
popf
mov
scas
mov
push
mov
cmp
lock
inc
mov
testb
cs
and
or
xchg
inc
not
rclb
lock
push
lret
mov
xor
dec
jecxz
clc
loope
sbb
add
popa
pop
sbbl
fwait
mov
jge
pop
push
shrl
fildl
jg
inc
and
sbb
movsb
int3
loopne
icebp
loopne
stos
stc
stos
xchg
sub
add
in
jp
push
sbb
js
inc
jl
cmpsl
loop
rcrb
movsb
sbb
lods
loope
cwtl
popf
dec
mov
and
daa
jle
daa
daa
test
adc
push
push
mov
ret
mov
inc
pusha
mov
je
inc
jne
xchg
out
mov
cmp
dec
jo
xor
insl
and
xchg
out
mov
fbstp
mov
daa
push
or
jne
push
mov
cli
push
cmc
pushf
outsl
xchg
iret
mov
xchg
xor
shl
cli
push
pop
popf
roll
movsl
xchg
ss
rcrb
sub
mov
pop
les
jne
push
xchg
jno
gs
jbe
lcall
add
std
add
sub
shll
cltd
aaa
mov
fistpll
xor
or
dec
mov
lea
loop
mov
in
ljmp
leave
adc
xor
loope
xchg
lds
shrb
jecxz
mov
inc
xchg
xor
mov
scas
adc
ds
push
adc
mov
int
lahf
sbb
ret
fistl
mov
movsb
xor
xchg
jo
jbe
and
or
push
sbb
pop
mov
stc
sbb
sbb
or
sbb
outsb
imul
aaa
mov
pop
jnp
pop
add
adc
aas
push
les
pop
mov
xorl
and
xor
mov
nop
mov
test
pop
mov
xchg
cmp
mov
dec
mov
pop
pop
fldlg2
pusha
adc
sarb
or
jg
loope
mov
jne
mov
xor
xchg
push
cmc
xchg
pop
jecxz
outsb
xchg
aad
hlt
shrb
sub
mov
scas
clc
movsl
xlat
push
xchg
xlat
insb
adc
lods
or
sbb
mov
lds
xor
arpl
dec
lahf
xor
movsb
sbb
aad
je
jno
imul
adc
test
fdivrl
cli
cmp
lret
lods
popf
popa
jl
mov
mov
inc
aam
jbe
pop
aam
cld
repnz
iret
inc
add
cmp
aaa
lods
push
loope
mov
sbb
mov
mov
xor
lods
aam
lcall
sbb
les
and
mov
sub
xor
mulb
enter
inc
and
jmp
mov
and
sbb
add
cmp
xor
push
jae
xor
mov
in
and
subl
jno
sbb
mov
fiaddl
xor
imul
repnz
cmp
lcall
sbbb
outsb
cmp
add
cmpsl
push
sbb
jo
xchg
jb
jmp
cs
mov
push
loope
or
push
fcmovb
or
and
test
cmpsb
and
imul
int
inc
ljmp
push
xchg
mov
mov
rcll
sar
xor
lret
fmuls
iret
aas
dec
dec
pop
sbb
adcb
sub
jb
cmp
gs
dec
aad
adc
pop
imul
mov
push
aas
cmp
mov
push
divl
pop
xor
add
jle
in
imul
addr16
push
add
push
bound
call
rclb
lret
mov
inc
xor
mov
nop
jns
cltd
insl
and
dec
dec
push
sbb
into
jl
mov
or
pop
clc
add
imul
mov
and
xor
fldenv
pushf
adc
cmp
xchg
in
cmpsl
cmp
sbbl
add
dec
jmp
lods
or
xchg
pusha
jno
loopne
sbb
cs
and
xchg
rclb
mov
outsb
lods
scas
loope
aam
dec
cmpsl
sbb
jle
dec
lods
sbbb
mov
xor
xchg
jmp
or
insl
cmp
int3
pop
mov
mov
xchg
fisttps
jp
scas
push
std
cmc
inc
sbb
sti
push
rcrl
and
insb
test
movsb
fs
sub
out
push
xchg
loopne
dec
add
push
dec
dec
mov
sti
in
les
in
mov
xchg
mov
shr
or
push
fnstenv
shll
xchg
in
xlat
mov
and
cmpl
mov
loope
cld
xor
lea
lods
ret
ja
inc
and
adc
bound
popa
and
xor
sbb
add
dec
pop
imul
leave
jbe
adc
xchg
sbb
incl
mov
test
fdiv
adc
mov
push
sbbl
mov
jne
mov
idivl
fisubrs
sbb
inc
lods
jb
movsl
es
popa
imul
cs
mov
push
scas
lret
popf
in
js
sub
inc
shl
sbb
js
outsl
adc
xor
cmc
adc
and
pop
adc
lcall
bound
jno
test
pop
xchg
sub
xchg
arpl
aad
in
jnp
movsb
fsts
shll
aas
cmp
pop
les
dec
mov
xchg
jb
mov
aam
push
call
popa
add
addr16
mov
inc
pop
xchg
inc
xor
imul
arpl
push
jns
push
dec
aaa
stos
adc
mov
fisubrs
push
sbb
lret
data16
test
sub
pop
add
push
std
push
movsl
out
mov
add
lods
sbbb
lret
das
cli
adc
or
jb
adc
scas
cmp
mov
jmp
or
aaa
adc
inc
inc
dec
and
adc
and
xor
ficoml
pop
pop
inc
dec
jae
push
icebp
fistpll
iret
xchg
xor
test
pop
test
in
enter
xor
pop
rol
xchg
mov
inc
cld
and
dec
inc
call
jnp
test
loopne
shrb
inc
aas
xchg
xlat
push
adc
das
testl
inc
lea
icebp
ret
leave
fisttps
and
sub
xlat
fldcw
cmp
dec
mov
dec
jecxz
orl
stos
push
sbb
insl
mov
test
mov
nop
mov
nop
cmove
sub
adcl
sti
mov
shl
mov
jae
pushf
xchg
cmp
ja
rcrl
dec
test
cmp
popa
inc
cmovg
adc
pushf
push
icebp
mov
xor
fcompl
js
inc
adc
loope
cmp
push
adc
xchg
mov
inc
and
jnp
pop
pop
lock
pop
jmp
jns
sbbl
pop
cmp
mov
sub
mov
test
testb
mov
lods
xor
nop
daa
xor
out
sub
adc
and
xchg
cmp
push
scas
lds
mov
cwtl
enter
test
frstor
out
or
cmc
xchg
or
xor
lret
dec
das
adc
xchg
xchg
push
mov
mov
push
pop
inc
xchg
and
test
sbb
clc
xor
sub
repz
ja
mov
xchg
bound
push
dec
jmp
jns
cld
cmp
sub
movsb
mov
xor
ljmp
lahf
std
mov
aas
push
dec
ja
cmp
clc
outsb
mov
test
xor
stc
add
or
in
popf
mov
bound
movsb
pop
insb
pop
aam
mov
ds
pop
pop
cltd
std
sbb
add
adc
movsl
das
xchg
push
lods
jg
or
or
add
cli
insb
cmc
cmpsl
mull
jbe
orb
loop
dec
inc
and
jo
and
fisubl
xor
repz
add
stos
adc
pop
and
sub
js
cmp
pop
pushf
and
icebp
mov
imulb
or
push
dec
fimuls
push
in
xchg
aad
in
fisubs
subb
sbb
sbbl
cmpl
in
out
scas
cmp
xor
nop
je
aad
mov
pop
xlat
mov
mov
xchg
movsb
jbe
mov
stc
icebp
cmp
sbb
movsb
std
lods
je
lods
push
and
insl
ds
cmpsl
faddl
jge
mov
es
andb
imul
jno
movsb
ret
fidivl
mov
jp
pop
outsl
cmpb
jge
cli
sarl
add
cmp
or
push
xchg
inc
jb
adc
mov
sub
and
jge
cmp
adc
jno
xor
cmp
inc
xor
out
add
jns
xchg
mov
pop
xlat
push
clc
fwait
dec
adc
cmpsb
inc
or
fdivs
in
mull
aam
outsb
xchg
leave
pop
in
xchg
leave
int3
push
int3
mov
cld
mov
aas
bound
es
xlat
out
fwait
enter
xchg
sbb
in
adc
aas
pop
xchg
call
pop
leave
pop
fwait
mov
xor
imul
mov
or
or
rcr
movsb
movsb
pushf
test
lds
inc
rcl
cmp
shrb
lcall
sub
xchg
xor
xchg
cli
inc
nop
ljmp
sbb
jnp
dec
pusha
bound
mov
inc
lea
aaa
or
std
fs
adc
pop
sahf
jge
call
add
loop
mov
sbb
xchg
enter
xchg
pushf
adc
mov
inc
adcl
outsl
xor
push
jne
andb
xor
out
or
or
xorl
les
dec
xchg
js
push
lcall
adc
adc
dec
int3
idivl
sub
out
and
push
fdivrl
or
imul
xchg
inc
xchg
mov
movsb
pop
mov
addr16
iret
pop
out
stc
sbb
pop
mov
adc
or
lcall
cmp
lcall
popf
xor
insl
and
jnp
test
aam
data16
pop
mov
das
mov
call
nop
push
aaa
stc
jmp
das
cmp
push
pushf
test
int
sbb
shrl
pusha
cmp
nop
xor
and
adc
and
je
hlt
clc
enter
test
cli
push
stc
xchg
and
ljmp
push
mov
cmp
cltd
movsl
inc
push
sub
mov
fistpl
imul
out
xor
insb
lret
iret
or
and
cmp
and
jg
sub
loope
inc
je
mov
js
jmp
mov
lea
sub
arpl
cmp
mov
lret
std
push
mov
jns
xchg
xor
decb
les
pop
popa
push
cli
ds
push
adc
rol
imul
pop
mov
lds
sarb
stos
mov
or
cmp
mov
scas
imul
test
add
idivb
aad
pop
mov
shrb
orb
sub
lods
inc
gs
cltd
xchg
push
mov
out
jne
clc
daa
test
push
xchg
outsb
xchg
scas
popf
scas
std
inc
lcall
or
xor
out
xchg
mov
mov
xor
iret
fs
addr16
shr
xchg
cmpsb
sbb
inc
data16
add
mov
and
jecxz
xor
xor
jb
fmul
mov
or
adc
aas
mov
mov
pop
lea
mov
push
icebp
iret
gs
xor
push
jl
fsubs
scas
adc
rclb
les
xchg
pop
sub
loope
sub
xor
in
sub
pusha
idivl
sbb
imul
je
push
or
pop
aad
fisttps
push
clc
mov
add
psubusb
or
push
push
adc
xlat
outsl
xor
inc
push
and
outsb
ss
aas
or
cmpsl
jecxz
xchg
mov
int3
adcl
jecxz
push
loop
por
sbb
or
scas
sbb
aaa
lret
fistps
std
stos
add
xor
mov
xlat
repnz
rclb
pushl
mov
mov
and
xchg
ja
push
dec
cld
mov
pop
pop
xchg
and
enter
mov
jo
cmpsl
xchg
loop
fld
sub
aas
fistl
leave
cmp
hlt
dec
mov
negb
inc
int
inc
lock
shll
test
jo
xor
xor
jno
mov
xchg
xor
pop
mov
movsl
adc
out
test
shr
stos
mov
jae
iret
xor
dec
test
cmp
xorb
outsl
test
dec
adc
add
push
mov
add
dec
pop
pop
sub
outsl
and
or
mov
xor
cmp
xor
mov
stos
in
and
xor
es
cmp
out
dec
jle
aaa
pop
push
imul
mov
divb
dec
notb
cwtl
outsb
ds
hlt
pop
out
sbb
pop
dec
or
pushf
nop
movsb
lret
push
jg
cmp
mov
es
dec
out
jbe
repnz
popf
int
sub
and
mov
sub
insl
adc
add
inc
cmp
push
cmp
or
push
jns
xchg
stc
jne
mov
push
pop
pop
pushf
mov
adc
ja
add
inc
xor
lahf
lods
cmp
imul
mov
das
scas
jne
movzwl
pop
push
clc
sti
xchg
clc
or
pop
mov
imul
lock
xchg
daa
fldenv
pop
mov
xlat
into
dec
push
ja
adcl
mov
xchg
push
addr16
mov
fcoml
xor
dec
jne
or
lahf
fs
cwtl
mov
sub
push
mov
xchg
test
rcrl
addr16
stc
sti
dec
ds
cmp
sbb
jns
and
pandn
nop
insb
jns
outsl
sub
jg
not
inc
and
sbb
push
and
js
jge
jae
push
lds
add
and
ds
sbb
add
stos
ljmp
xor
adc
lea
sbb
mov
stos
xchg
pop
aaa
jbe
leave
icebp
icebp
adc
rclb
adc
fsubs
addb
out
jle
mov
es
push
scas
sub
mov
sbb
jo
jg
pop
das
sbb
aaa
into
xchg
and
jnp
sub
and
inc
lds
icebp
adc
pop
mov
shrb
loopne
mov
inc
lahf
or
les
dec
mov
mov
sbb
lret
mov
scas
xor
enter
in
mov
pop
shlb
data16
addr16
sub
push
into
push
sub
leave
push
mov
popf
push
outsb
mov
lods
notl
lods
scas
cmp
push
decb
adc
mov
push
xchg
fcoms
xchg
push
mov
ja
sahf
les
or
fadds
mov
les
call
mov
sub
cwtl
mov
inc
dec
ja
mov
fisttpl
add
cmp
imul
push
dec
xlat
jecxz
addr16
add
das
stc
je
or
dec
sub
sub
popa
inc
movsl
dec
lods
pusha
lods
dec
test
stos
test
jne
or
stos
mov
mov
adc
sub
mov
sub
or
push
fs
or
pop
lods
add
push
adc
ret
negb
xor
lods
lret
sbb
push
imul
xchg
xchg
add
mov
ret
scas
mov
cld
in
enter
push
iret
daa
lret
jbe
les
mov
cmp
inc
pushf
dec
add
pop
inc
or
jnp
aaa
mov
sub
pusha
xor
add
divl
dec
stos
cvtpi2ps
push
sahf
jecxz
cltd
stos
sahf
rcl
adc
push
mov
mov
cs
sub
xor
das
call
test
sbb
daa
push
iret
fildl
imul
out
sti
adc
sbb
pop
xor
fcomps
xchg
mov
inc
mov
mov
push
lret
jecxz
enter
cmp
ret
pop
cmpsb
inc
mov
pop
jbe
sub
dec
cmpsl
push
or
mov
or
insl
out
aas
iret
add
outsb
loope
jne
pusha
push
xchg
mov
push
addr16
mov
adc
mov
loopne
sarb
in
lret
mov
jae
insl
or
mov
ret
scas
and
js
jns
aad
cmpsl
fxch
inc
or
test
pop
adc
cmp
fdivr
inc
add
negl
pop
enter
std
hlt
or
lret
mov
hlt
jle
jne
cmp
popf
nop
or
jg
hlt
mov
cmp
or
dec
mov
fists
inc
mov
pop
int
push
in
cmp
mov
mov
sarl
xor
jbe
mov
mov
int3
or
mov
stos
imul
sbb
aam
adc
dec
stos
mov
jb
lea
xor
xchg
add
and
pop
fptan
popf
mov
cmp
or
push
cmpsb
sbb
sar
mov
test
fstps
mov
push
es
dec
pusha
je
xlat
push
pop
push
aad
push
enter
jnp
cmp
dec
add
and
mov
popa
cmp
in
or
mov
lahf
or
movsl
in
mov
or
movsl
repz
ljmp
push
cs
bound
inc
cmp
adc
lods
cmpsb
pusha
inc
subl
psubsw
jb
adc
sar
mov
mov
pop
dec
sti
arpl
add
xor
enter
push
mov
cltd
jnp
dec
idivb
rcrb
ss
cli
dec
sbb
sub
imul
sahf
sbb
and
arpl
cmp
xor
inc
mov
out
insl
mov
mov
inc
test
std
inc
jbe
inc
add
mov
or
fadd
mov
adc
loopne
pop
rclb
inc
pop
push
fsubr
lock
mov
cmpsl
test
mov
jp
lret
cmp
mov
sbb
and
lcall
fwait
clc
or
jecxz
xchg
pop
ja
mov
push
push
and
fildll
movups
and
notl
lea
jns
pop
in
dec
mov
push
cli
or
pusha
mov
cmp
sub
lds
jge
fucomip
and
inc
fistps
push
pminsw
ss
adc
mov
pop
jge
mov
xchg
dec
push
ss
push
dec
aaa
or
cmp
aad
fs
sub
xor
out
insl
stos
aaa
hlt
negl
xchg
xor
pop
adc
xor
push
std
adc
pop
push
lock
pushf
xchg
xor
mov
into
and
sahf
fcoml
shl
cld
xlat
or
mov
test
loop
shlb
pop
inc
shlb
ja
xchg
adc
mov
repnz
aad
aad
dec
addl
pop
mov
sbb
lock
in
xor
mov
pop
mov
hlt
xor
sahf
fistps
dec
xchg
mov
andb
imull
xchg
xchg
jp
add
mov
sbb
mov
jp
sub
mov
jle
loop
cmp
sub
fwait
mov
leave
cmpsb
popf
jae
xchg
push
xor
insb
nop
dec
xchg
loop
aam
movsl
lcall
sub
decl
pop
add
inc
mov
pop
mov
push
push
adc
sbb
mov
outsb
iret
lock
mov
fistl
sbb
xchg
add
ljmp
fistpll
int3
sti
mov
aaa
loopne
jge
fists
push
cmp
ret
cs
mov
pop
push
test
loope
addr16
faddp
lods
inc
adc
jae
jno
cmp
out
push
fs
cmp
cmpsb
les
mov
sub
xchg
or
fisubs
scas
lret
push
adc
dec
sbb
pusha
jo
movsl
mov
pop
fldl
aad
cli
aas
ljmp
scas
adc
adc
imul
push
xor
jb
inc
or
bound
aas
jle
jmp
std
scas
fdivrs
mov
xor
sbb
xor
ret
xchg
out
fs
pop
je,pt
into
inc
mov
xchg
dec
inc
sub
jae
cld
mov
push
jecxz
mov
repz
fisttps
push
adc
jae
jne
js
mov
loop
or
icebp
cmp
ret
jns
adc
subl
pop
sbb
and
stos
test
or
movsb
xchg
xchg
je
pop
dec
and
sti
sbb
ret
mov
imul
adc
sub
ljmp
mov
mov
imul
mov
xor
mov
or
mov
ret
sbb
mov
lcall
adc
hlt
aam
daa
mov
jle
aad
jae
xchg
mov
repz
das
lea
inc
jge
xchg
inc
mov
add
iret
jnp
mov
xchg
push
jg
xor
stos
pop
push
mov
imul
lods
mov
cld
lock
out
dec
jnp
cli
jp
add
imul
cmp
cmp
or
bound
cltd
scas
cmc
xchg
aam
incb
xlat
sbb
or
mov
pop
in
pop
sub
in
xor
or
lea
test
out
cmp
pop
sub
sbb
pusha
mov
mov
addr16
cmp
dec
mov
add
leave
bound
sbb
test
movsl
pop
cmpsb
lods
cmc
xor
xor
or
ficompl
jl
mov
cmp
ror
jns
fucomi
lret
adc
mov
lea
inc
cmp
jo
jl
jmp
aad
out
jle
xor
fisttps
fisubl
xor
push
js
stos
jmp
jl
push
cltd
loope
das
fimuls
pusha
pop
out
outsb
int
xor
and
push
mov
sbb
xor
scas
pop
mov
sub
inc
lock
pop
dec
jl
and
and
int3
pop
mov
sbb
insl
ror
pop
movsl
mov
add
and
xor
cmp
int3
sti
sub
cmpl
dec
aad
push
jg
push
out
mov
push
in
lods
fwait
xor
xchg
fld1
test
dec
xchg
in
pusha
dec
add
pop
mov
lock
addr16
add
jmp
push
fldcw
callw
outsb
sbb
xchg
inc
push
cmp
dec
xchg
mov
repnz
or
add
lods
lock
jecxz
cld
cmp
xlat
pusha
dec
or
sbb
lcall
mov
pop
cmp
jae
mov
lret
add
mov
pop
jbe
and
adc
rcl
xchg
pop
fldenv
aad
xchg
inc
out
adc
xchg
popf
lret
xorl
cmc
mov
xchg
cmp
popf
and
mov
add
arpl
shll
lea
xor
and
fdivrl
cmp
je
and
mov
jb
add
add
push
fnsave
insb
inc
loope
movsl
sbb
stc
pushf
jmp
inc
data16
cmp
enter
lcall
jmp
jp
mov
xor
pushl
cmc
mov
popf
arpl
lods
xchg
mov
popa
inc
push
xlat
sub
adc
sbb
lcall
jns
xchg
xor
in
or
push
mov
lods
lret
or
pop
mov
rcll
iret
cmpsb
subw
push
lock
sbb
das
mov
lods
pushf
mov
faddl
int
and
jl
stc
push
cld
mov
rcll
ja
cld
or
add
fwait
lret
dec
call
lcall
cltd
cmp
jmp
push
gs
repnz
clc
dec
test
dec
xor
lods
hlt
inc
decb
rcrb
xchg
sbb
sub
mov
sbb
imul
gs
inc
sar
inc
jmp
loope
lret
rcll
shr
pop
jge
and
aaa
jge
push
stos
aad
push
cwtl
loopne
shl
in
movsb
jnp,pt
dec
mov
std
push
jns
rorl
faddp
cmc
add
ljmp
cmpsb
inc
mov
fcom
lods
dec
or
aad
repz
and
inc
jnp
loopne
lods
xlat
imul
xor
sub
popf
fs
or
xor
cltd
fiadds
ffreep
sahf
pop
mov
push
xor
scas
pop
fmulp
and
or
inc
pop
jo
clc
xchg
test
fdivrs
shrl
sahf
sub
mov
xchg
mov
testl
inc
pop
outsb
outsb
jo
add
in
fiadds
sbb
aad
pop
xchg
inc
mov
adc
xor
ret
rolb
cltd
sub
repnz
outsb
mov
xchg
call
pop
in
inc
je
push
fsts
adc
xor
fildll
inc
out
sub
adc
nop
xchg
rorb
mov
mov
xor
sub
adcb
mov
in
mov
iret
mov
jbe
sbb
mov
inc
dec
dec
cmp
push
insl
loope
push
in
xchg
lea
loop
pop
cs
mov
sbb
in
dec
lea
jmp
sarl
pusha
push
sbb
pop
adc
scas
adc
dec
xchg
dec
mov
mov
push
dec
enter
push
lret
aaa
or
cmpsb
jecxz
dec
pusha
rcl
push
push
mov
or
xchg
in
inc
inc
aam
sub
xchg
xor
pop
call
adc
mov
pushf
lds
push
push
mov
les
stos
repnz
mov
mov
mov
jae
test
mov
sub
xchg
pop
xor
push
imul
pusha
nop
roll
add
nop
and
inc
inc
cmp
enter
pop
inc
ds
rol
mov
push
mov
fsubr
adc
xchg
test
stos
xchg
pop
lods
fs
pop
loop
jnp
gs
pop
adc
mov
test
add
pop
jmp
add
es
sub
inc
fwait
inc
sbb
xchg
mov
sub
mov
mov
mov
cmp
xchg
inc
shlb
or
sbb
jne
mov
sbb
pusha
cmp
mov
cltd
dec
mov
mov
jbe
push
mov
or
cmp
cwtl
cmp
out
push
lahf
in
push
lahf
mov
fistl
mov
pushf
mov
movsb
insl
add
pop
stos
imul
mov
inc
or
sti
jnp
inc
cmp
add
andnps
addr16
adc
movsb
stos
lds
test
ds
jbe
inc
mov
push
lods
and
fdiv
mov
push
rorb
test
mov
and
mov
shlb
mov
mov
movsl
cmp
sti
jl
out
ljmp
mov
xchg
inc
rorl
mov
popf
lods
out
pop
sbb
cmp
std
xchg
add
push
inc
imul
gs
mov
lea
sahf
mov
popa
pushf
inc
sub
jno
fcom
dec
sbb
addl
cld
daa
cmpb
cmp
jbe
loop
dec
rcl
xchg
add
shlb
dec
into
inc
imul
lea
mov
sbb
cmp
xchg
dec
daa
outsb
sub
jns
imul
fisubrl
clc
jns
xchg
sahf
out
lea
int3
movsb
jnp
gs
cmp
out
xchg
fst
pusha
pop
daa
in
mov
lock
inc
clc
push
pop
dec
stos
cmp
aad
adc
pusha
adc
insb
cmp
scas
mov
cmpsb
cli
cmpsb
in
es
filds
test
inc
push
out
jmp
loope
shrb
inc
loope
outsb
xor
adc
repz
fisubs
jp
int
or
nop
xchg
in
inc
out
adc
loop
loop
xor
mov
push
and
dec
mov
xorb
jle
xchg
add
push
and
jns
sbb
cmp
and
mov
popa
pop
xor
mov
mov
hlt
imul
xchg
test
in
sbb
lea
lret
add
cmp
icebp
negb
and
pop
push
jbe
and
mov
dec
mov
int3
into
sub
jns
mov
sbb
sbb
mov
or
mov
dec
das
enter
in
or
jae
fnstenv
xchg
jecxz
cmp
mov
and
enter
testl
pop
jge
test
xor
frstor
jle
int
sub
cmpsb
mov
cli
scas
push
stc
mov
pop
dec
xchg
jo
pop
lret
add
sbb
pop
incl
sbb
mov
dec
lods
jmp
push
cmc
ret
shrb
push
mov
inc
mov
push
jno
sbb
shll
pop
xor
lock
add
dec
out
lcall
pop
mov
xchg
jo
leave
ds
add
in
mov
mov
jp
cwtl
fdivs
push
push
xor
jo
dec
cmp
dec
inc
mov
dec
in
sarl
lods
in
pop
xchg
push
pushf
nop
adc
repz
imul
mov
fsts
sbb
aam
test
jns
sbb
loopne
sub
aad
test
ja
jp
cmp
inc
jno
stos
int
dec
mov
call
insb
mov
pop
pop
sub
je
pop
subb
aaa
orl
lahf
push
ss
cmp
dec
inc
mov
adc
fnstenv
push
pop
je
lods
mov
pop
fstpt
pop
and
std
and
add
adc
in
fbld
das
inc
adc
call
dec
mov
ret
or
jg
scas
call
jno
add
test
inc
sbb
dec
xchg
mov
push
cmc
pop
lret
fxch
jmp
sub
mov
jnp
sbb
cltd
pop
inc
sbb
jmp
lea
mov
scas
ffreep
popf
adc
ja
mov
sub
jmp
in
cli
add
cmp
cmp
push
clc
outsb
add
pop
sub
jmp
and
jl
fwait
hlt
addb
movsb
negb
adc
fldt
loopne
rcl
pop
das
pop
inc
jo
loop
int3
sub
scas
jge
je
mov
sub
lret
push
inc
stos
lahf
clc
xlat
mov
pop
adcb
ret
push
test
rcrb
pushf
scas
rol
aam
aas
iret
pop
mov
dec
test
cltd
hlt
mov
add
rsm
test
shl
ds
rclb
mov
adc
sub
or
mov
je
mov
xor
pop
inc
shlb
cli
int
test
orl
jle
dec
mov
push
in
jp
fnstcw
push
out
mov
xchg
push
add
outsl
mov
sbb
insl
and
aaa
pop
popf
icebp
jecxz
mov
jbe
shrb
outsb
sub
jno
jne
jnp
scas
mov
mov
icebp
daa
xor
push
int3
cmpsl
daa
imull
cmp
mov
jmp
int
mov
mov
dec
in
lods
incb
push
mov
lods
cli
repnz
lock
push
je
sbb
push
outsb
std
jmp
insb
aaa
test
lock
and
nop
in
add
xchg
sarb
adc
or
add
gs
lock
or
arpl
pop
cwtl
lea
push
add
mov
sbb
pop
xchg
mov
imul
into
mov
sahf
pop
xor
xchg
out
pop
xchg
andl
or
push
mov
mov
dec
shl
int3
mov
pop
aaa
xchg
mov
xchg
subl
cs
pop
or
pop
repnz
lds
sbb
xchg
cmpsb
mov
jmp
dec
push
enter
std
xor
sbb
dec
inc
xchg
mov
cmp
shr
insb
xchg
inc
jp
mov
lcall
mov
stc
cld
inc
mov
addb
jae
fimull
lcall
push
cli
cwtl
and
sbb
cmp
rcl
pop
sarb
cmp
aam
push
dec
xor
xchg
in
test
mov
repz
pop
cmc
push
popf
or
cmp
dec
shlb
push
jmp
das
xchg
stc
xor
outsl
adc
ret
xchg
cwtl
sbb
inc
bound
insb
sbb
cmp
sub
dec
repnz
add
mov
push
mov
scas
xchg
enter
xchg
dec
sbb
push
ret
movsl
call
cmpsb
pop
sub
cmpsl
arpl
pop
mov
rcl
or
mov
test
shlb
iret
mov
ficomps
mov
es
mov
daa
icebp
lea
roll
fldl
sbb
add
arpl
in
imul
cmp
mov
scas
or
into
ja
test
cs
imul
mov
fildll
push
popa
inc
imul
icebp
pop
sbb
mov
dec
fwait
push
rorb
gs
out
in
xchg
insb
andb
push
imul
pushf
inc
xchg
iret
jbe
dec
mov
enter
mov
jmp
jmp
adc
mov
xorb
inc
pushf
lcall
outsl
sbb
xchg
mov
aas
sbb
lcall
push
add
leave
adc
leave
push
add
stc
push
test
sub
and
cmp
push
sbb
xchg
dec
push
in
pop
and
or
mov
cmp
xchg
sbb
push
sub
mov
test
leave
pop
rcl
xchg
xchg
xchg
adc
xor
aas
repnz
push
jns
add
cmpsb
push
call
and
ds
sahf
iret
fdivl
outsb
mov
ljmp
xor
sbb
fcom
mov
adcb
out
addb
and
push
idivl
imul
dec
cmp
or
sahf
lods
push
cmp
sub
movsb
leave
add
leave
jg
xchg
and
xlat
into
ffree
dec
inc
push
or
arpl
pop
xlat
mov
std
es
insb
test
cmp
ljmp
xchg
inc
sub
std
add
jno
pusha
fstpl
mov
loop
mov
sti
rcrb
xor
in
cld
or
dec
mov
insl
xchg
mov
cwtl
pop
mov
clc
mov
movsb
sti
loope
push
call
call
mov
fiadds
rol
enter
clc
add
popf
icebp
cwtl
shl
hlt
adc
sbbl
add
cmp
jne
push
addr16
popa
imul
dec
dec
cwtl
das
rcrb
loop
sbb
addr16
push
aas
mov
mov
xchg
andl
sahf
cmpsb
js
xlat
pop
or
lock
push
add
mov
mov
test
ret
pop
movsb
add
push
out
movsb
rorl
mov
nop
xchg
in
jp
dec
add
pop
xchg
jmp
mov
inc
das
fildll
js
rorb
mov
xor
cmp
mov
rorl
jno
jne
out
jl
ljmp
icebp
mov
fidivs
fadd
pushf
lds
jge
dec
fwait
insl
in
insl
call
out
add
mov
orl
jo
clc
dec
sub
sub
cmp
inc
jle
cltd
shrl
mov
jg
pop
xor
call
imul
cli
insb
mov
cmp
das
mov
insb
sub
shl
inc
in
pop
ds
pop
and
add
xchg
scas
jnp
jp
adc
popa
das
lock
jb
fisubrs
xchg
dec
stos
lock
adc
stc
sub
popf
fs
add
fisttpll
mov
cmp
inc
dec
das
repnz
es
in
push
js
int
ds
out
mov
call
mov
inc
mov
shrb
in
jnp
test
call
cmpsb
fimull
and
out
mov
rcll
popf
mov
inc
fcoms
dec
push
icebp
jp
jmp
call
push
lahf
aad
inc
mov
add
jbe
jae
lahf
fsubrl
jno
mov
out
seto
out
dec
cmp
imul
lcall
mov
pop
jge
scas
mov
mov
dec
xor
xchg
push
cmc
and
or
sub
mov
enter
add
mov
jne
pusha
ljmp
pop
mov
pop
mov
mov
loope
lret
mov
inc
xor
xor
or
jge
mov
scas
lods
test
cld
cmp
cmpsl
faddl
jns
std
mov
hlt
mov
je
cmp
lret
jo
in
mov
dec
sbb
push
in
sub
rolb
aaa
fsub
xlat
pop
sbb
sbb
js
lcall
mov
dec
mov
int3
xor
repnz
push
filds
je
mov
cmp
out
int3
stos
adc
push
or
jmp
cmp
xor
xor
inc
test
addr16
mov
cmc
jnp
dec
outsl
mov
hlt
jns
test
mov
sbb
pop
shl
sahf
fbstp
repnz
in
loop
adc
sub
sbb
pop
and
cli
insb
mov
das
addr16
push
repz
xor
sbb
jno
cmp
mov
movsl
push
push
sub
popa
cmp
xor
sub
std
adc
lcall
rcrl
scas
mov
push
arpl
or
scas
insb
sbb
pop
lock
adc
in
dec
gs
in
pushf
sti
in
fbstp
dec
imul
int3
mov
icebp
mov
jecxz
add
and
jl
push
or
shrb
gs
lea
pusha
addr16
movsb
nop
aaa
imul
cmp
je
xchg
jo
nop
mov
int3
jae
in
dec
outsl
pop
into
popf
jo
mov
sub
dec
xchg
adc
push
repz
dec
mov
ficompl
adc
lret
fst
inc
cmp
add
imul
pop
pop
bound
fistps
jns
outsl
or
cli
push
jmp
and
sarl
rcrb
push
sbb
cmp
lret
mov
push
push
out
cmpsl
pop
adc
addl
dec
push
in
enter
pop
ja
in
out
hlt
js
jmp
into
lods
out
cmc
mov
push
cltd
lcall
test
leave
call
out
jno
gs
mov
dec
add
jo
cmp
mov
jno
mov
pop
ja
xchg
orb
mov
lods
add
ret
cmp
xchg
mov
inc
mov
mov
mov
add
test
push
adc
sbb
or
xor
dec
cmp
cmpsl
repnz
popf
bound
jg
int3
push
repz
outsl
andl
popf
lds
frstor
push
sbb
jg
or
mov
add
and
sbb
mov
inc
inc
sub
adc
fstpl
jmp
sbb
je
negb
pop
scas
sub
cltd
aam
xchg
into
jmp
flds
data16
cmp
into
ret
jnp
jo
mov
add
test
loopne
sbb
or
ljmp
or
cmp
inc
fs
js
mov
push
pushf
outsb
jp,pn
mov
outsb
add
xor
rcr
call
cmpsb
mov
mov
cmp
adc
inc
jecxz
mov
pop
out
mov
icebp
cmc
fnstenv
mov
and
in
mov
std
cltd
dec
add
mov
lcall
fsubrl
inc
dec
clc
lret
dec
xchg
push
fmull
adc
hlt
movsb
mov
mov
jbe
adc
dec
icebp
adcb
cmpsl
mov
ffree
or
push
xor
addr16
in
ret
cwtl
ret
and
push
lret
push
mov
icebp
icebp
and
test
mov
mov
lahf
add
inc
jp
or
rcrb
cld
jb
sub
dec
add
mov
inc
into
jl
and
ret
and
cmc
mov
bound
int3
mov
cmpsb
lods
push
sahf
pop
mov
xorb
push
dec
call
sub
pop
stos
daa
push
cmp
daa
xor
xor
inc
push
push
cmpsl
jb
xchg
lret
es
inc
fs
clc
inc
mov
push
aad
push
jb
mov
push
jo
xchg
add
xor
inc
je
push
mov
add
mov
pop
xor
push
testl
pop
dec
mov
mov
xor
jmp
push
ret
inc
push
push
cmpsl
inc
add
sub
mov
mov
in
nop
push
mov
dec
cmc
jg
in
mov
popf
stos
insb
sub
inc
sub
cld
insl
movsb
rclb
test
mov
xchg
dec
mov
mov
sub
loopne
mov
les
mov
mov
jne
xor
les
jo
or
test
jl
sbb
das
daa
jle
insl
sub
xor
fninit
test
shrl
xchg
imul
out
imulb
lock
cmp
push
adcb
cmp
insl
stos
xor
xchg
cmp
fnstenv
cmpsl
push
rcrb
cmp
cmc
dec
call
ljmp
int3
icebp
cmp
outsl
dec
inc
mov
adc
add
dec
enter
sbb
cmp
int
pop
cmp
push
addl
or
ljmp
jae
mov
mov
in
xchg
icebp
jns
lods
jg
cmp
cmp
add
pop
adc
dec
mov
in
dec
hlt
pop
lea
and
loop
and
sbb
add
cs
divb
aas
sbb
xchg
or
push
sub
mov
mov
and
test
stos
movsl
mov
cmpsl
pop
or
fmulp
add
nop
movsb
lahf
mov
lea
int
xor
lret
sbb
and
and
jbe
jae
icebp
jl
mov
and
xlat
add
xchg
mov
jae
dec
inc
test
aad
cli
cmpsl
mov
jmp
repnz
lret
push
pop
mov
jb
xchg
pop
popf
test
pop
mov
inc
pop
cltd
jno
jo
inc
push
inc
push
mov
shll
jmp
push
jbe
or
shl
and
out
ret
sbb
rorb
mov
ffreep
pop
cmpsl
repz
movsl
imul
cmp
iret
mov
andl
mov
add
out
mov
mov
sub
push
jnp
cmc
fcoml
aas
or
fistps
jbe
mov
pushf
push
sbbb
mov
pusha
push
enter
in
scas
fsts
inc
jp
cmp
icebp
dec
stos
mov
jle
jmp
lods
xchg
enter
cmp
cmp
data16
dec
call
outsl
or
pusha
sub
aas
jnp
ret
shll
cmp
add
and
call
cltd
jmp
imul
sbb
dec
cltd
and
out
sbb
cmpl
push
or
int
xor
and
in
bound
xchg
push
rol
xchg
mov
in
rcr
icebp
add
add
mov
pop
sti
pop
mov
sub
adc
jge
sbb
pushf
outsl
add
icebp
sahf
xor
or
rolb
or
sub
jne
negb
in
scas
mov
ficomps
jae
cwtl
repz
inc
jno
mov
mov
xchg
adc
insb
mov
pop
ss
test
jno
loopne
outsb
dec
lcall
sti
jmp
sti
sub
sub
add
aas
lock
fstp
in
out
je
pop
sub
inc
movl
test
ja
jg
adc
sti
ds
jae
sahf
push
pop
mov
or
test
and
mov
sarb
push
cmpsb
jge
dec
sbb
jp
divl
lcall
hlt
cmp
mov
xchg
xor
fstps
cld
pushl
push
test
mov
test
int3
mov
adc
inc
arpl
and
addb
mov
inc
add
cmp
mov
dec
test
push
jnp
pusha
movsb
in
es
and
das
push
cmpsl
sbb
adc
stos
inc
aad
and
jno
mov
daa
sahf
ret
push
subl
push
in
mov
sub
sub
add
movsl
popf
aaa
mov
popf
loop
aad
add
lahf
dec
inc
nop
scas
dec
or
mov
jge
mov
adc
sti
mov
push
sti
sbb
ret
stc
fwait
in
jae
call
push
jl
fistpl
xchg
rolb
mov
lahf
std
adc
pushf
lret
outsb
push
jl
pop
iret
jbe
test
daa
inc
rolb
popa
push
add
mov
jnp
ss
add
jnp
push
sub
in
jge
push
loop
leave
aas
fists
das
rolb
mov
imul
xchg
xor
lea
xor
shrl
sub
mov
mov
mulb
test
rcrl
pop
pop
out
mov
rolb
pop
test
pop
aas
dec
inc
pusha
add
push
jbe
pop
mov
fimuls
cmp
jae
ret
shlb
mov
push
int
sub
add
lcallw
dec
iret
cltd
in
pop
cmpb
arpl
push
dec
lahf
add
dec
ror
je
inc
jbe
loope
lahf
iret
test
mov
mov
mov
fisubl
mov
sahf
adc
or
or
dec
scas
pop
sti
mov
and
xor
pop
std
sbb
shlb
push
shrl
fistpl
nop
sub
jle
js
inc
dec
dec
xchg
aam
adc
test
imul
dec
dec
jmp
andb
sub
les
mov
push
out
pusha
into
mov
jno
mov
adc
ja
sbb
dec
xorl
inc
fmul
sbb
add
je,pt
test
and
es
jb
adc
int3
pop
dec
enter
fcmovnu
pushf
ret
lcall
pop
add
sub
push
adc
mov
stc
jg
int3
test
push
jge
test
pop
push
pop
push
dec
inc
jecxz
push
lea
push
adc
mov
in
xor
test
aad
jo
mov
sbb
dec
mov
loope
mov
insl
aaa
dec
xor
sarl
std
lcall
mov
mov
mov
ljmp
rolb
repnz
les
and
xchg
dec
mov
stos
in
sbb
pop
mov
xor
mov
int
testb
stc
jge
popa
lret
insl
sub
sti
movsl
push
push
int3
pop
mov
rcr
popf
fs
lret
pop
pop
push
push
mov
dec
pop
ljmp
outsl
jns
das
push
cmp
aas
mov
in
std
xchg
and
mov
xchg
aaa
cmp
or
dec
jle
icebp
out
mov
enter
mov
or
rclb
push
xchg
orl
sbb
sub
into
xchg
mov
lahf
xchg
jnp,pn
movsb
jg
popa
mov
pop
sbb
loop
cmpsl
sub
inc
push
xor
adc
sbb
jns
jne
pop
mov
rclb
test
sti
push
loope
insl
popa
pusha
xchg
shll
dec
and
pop
push
imul
fs
fldl
cmc
out
xor
lcall
daa
jae
push
mov
out
out
pushf
out
xor
in
mov
dec
in
push
dec
sub
mov
jecxz
rcr
or
sbb
fs
pop
stos
cmp
jae
sub
das
cmp
or
outsb
sbbl
outsb
or
dec
int3
loop
loopne
and
mov
nop
test
scas
mov
imul
in
fldl
push
xor
jl
jnp
lods
sbb
pop
movsl
xor
test
lock
mov
mov
push
push
jmp
jmp
mov
in
mov
mov
movsb
das
leave
mov
adc
xor
cmpsb
pop
add
dec
xrelease
mov
push
sbb
in
fcomp
sbb
add
fistps
cli
xchg
pop
pop
addr16
loope
jle
ds
jle
sub
sub
and
jmp
lea
in
popa
xor
sbb
xor
jns
rcr
mov
adc
call
mov
push
add
in
inc
and
fmull
les
mov
test
in
lds
loop
mov
inc
cld
imul
jmp
push
jle
out
test
fxch
xor
arpl
mov
loop
adc
jle
cwtl
test
push
fcmove
cld
repz
push
sahf
jmp
jge
iret
in
repz
mov
les
and
out
lcall
mov
sahf
push
fnsave
cmp
mov
lahf
mov
sub
insl
jg
jge
je
mov
pop
imulb
into
je
xchg
out
jge
push
ret
loope
adc
mov
xchg
push
test
cmp
loope
int3
push
fs
mov
dec
pushf
stos
mov
hlt
or
xor
cmp
jne
clc
dec
xchg
divb
enter
and
fsub
popf
jae
xor
xor
cs
dec
test
rorb
fstpl
lock
add
cmp
jno,pt
test
inc
mov
cmp
inc
adc
add
fadds
mov
fnstsw
mov
insb
xlat
adc
leave
mov
vmovdqu
mov
xor
pop
sti
or
dec
lock
jge
push
mov
sbb
out
dec
xchg
xor
insl
enter
sub
pop
jle
inc
or
ret
lret
insl
xor
and
lcall
inc
scas
stos
mov
mov
sub
push
mov
cmpsl
mov
mov
inc
pop
je
dec
sti
mov
repnz
mov
jecxz
aas
jne
aad
insl
adc
ret
repz
add
xor
shll
add
fdivrl
imul
pmuludq
lock
loop
push
lock
int3
xorb
mov
xlat
push
adc
pop
lods
sbb
mov
ljmp
jecxz
aam
dec
sbb
shrl
out
adc
mov
aas
jns
mov
xchg
inc
push
lahf
les
xchg
pop
cmp
shr
repnz
shl
xchg
xchg
and
mov
enter
in
adc
cld
jmp
das
into
lahf
sbb
arpl
sub
adc
outsl
mov
data16
adc
mov
mov
ss
adcl
movsl
inc
repnz
cwtl
movsb
pop
mov
cmp
sub
rcrb
mov
dec
addb
push
cmc
sub
add
push
pop
cmp
adc
sub
popa
cli
call
inc
stos
add
sub
mulb
sub
mov
sub
pop
sub
iret
jns
test
scas
xchg
lods
xlat
loope
push
push
mov
sbb
xchg
dec
das
pop
push
outsl
js
rclb
xor
leave
pushf
add
sbb
mov
push
sbb
jmp
enter
sbb
in
btr
inc
iret
sbb
rorb
pop
in
sub
dec
clc
jle
push
jmp
stc
decl
push
sahf
add
mov
test
xchg
dec
xchg
stos
adc
lds
xor
pusha
pop
cltd
std
sbb
sbb
xor
jno
xchg
and
pop
fnsave
popa
imulb
arpl
xchg
jne
pop
shlb
mov
pop
movsb
push
add
pusha
test
xchg
mov
xchg
test
in
jl
ds
cwtl
leave
and
hlt
dec
cmpsl
mov
dec
adc
sahf
lods
pop
mov
int3
dec
into
ja
jo
jp
jle
imul
adc
scas
clc
fs
ja
mov
inc
inc
mov
add
scas
mov
sub
mov
xchg
jge
sub
pop
and
mov
sub
mov
push
cmp
jl
inc
xchg
sbb
adc
pushf
adcl
cmpsb
sub
or
push
pop
mov
cmpsb
jb
sub
mov
mov
xchg
sahf
mov
mov
sub
out
jbe
sti
addl
pop
jmp
xor
dec
xchg
frstor
leave
rcll
cmp
loope
sbb
push
push
and
dec
movsb
les
or
fiadds
fiadds
je
fsubl
mov
stc
mov
sbb
insb
push
outsb
xchg
movsl
stc
ja
jo
loopne
out
pop
jle
pusha
add
add
add
mov
cmp
cli
adc
jp
push
xor
dec
cmp
mov
mov
imul
cmpsb
aad
mov
or
sbb
or
scas
sti
push
out
mov
xor
insl
daa
das
les
out
push
sub
sub
pushf
xchg
daa
rorl
dec
imul
mov
or
sbb
sub
sbb
xchg
cltd
jb
js
mov
jb
mov
xchg
in
push
mov
int3
ror
out
ret
cmp
dec
inc
iret
sub
cmp
mov
std
cs
jmp
repz
dec
add
lahf
loope
mov
jle
mov
pop
xchg
pushf
repz
movsb
nopl
das
in
mov
test
push
lret
sub
jl
loope
mov
jle
fistl
sub
inc
dec
fsubl
sbb
imul
and
into
outsl
jno
int
jnp
cmp
je
jbe
sub
mov
inc
loop
cmp
fbstp
addr16
adc
stos
clc
lea
jecxz
mov
xchg
xchg
out
fsub
loope
sti
sub
jno
loope
cld
xchg
enter
das
adc
out
jae
sarb
leave
es
push
mov
sbb
sahf
add
popa
jl
sub
insb
test
add
sahf
add
inc
adc
mov
sub
stos
sarl
mov
dec
add
std
adc
fidivs
or
sub
mov
clc
aaa
or
out
icebp
xchg
xchg
int3
andb
and
push
cmp
lods
inc
xchg
cmp
shl
shrl
mov
lock
addr16
ret
iret
lret
imull
pusha
push
adc
add
dec
clc
pop
sbb
adc
test
and
sti
fs
push
inc
mov
arpl
mov
jmp
lret
das
sub
cmovle
push
in
mov
mov
sbb
mov
fldcw
jo
mov
jae
out
ja
ret
insb
pusha
mov
and
test
cmp
cld
ds
ret
adc
loopne
push
mov
pushf
push
addb
pop
idivb
and
cmp
push
sbb
or
dec
dec
pop
stos
pusha
call
fcomps
push
cld
pop
xor
or
pop
mov
push
mov
in
movsb
sbb
push
mov
clc
xchg
dec
fcom
mov
paddq
jnp
loope
call
ljmp
xor
push
pop
aad
mov
test
addl
or
fnstenv
shlb
xor
jg
cmp
or
push
cli
xchg
fwait
bound
int
lret
xor
incb
push
das
stos
xchg
jo
or
jno
push
and
add
loop
cwtl
imul
push
cmp
mov
in
ficomps
sbb
mov
dec
xchg
repnz
pop
or
dec
dec
sub
into
adc
jge
shll
pop
loop
push
xor
lock
outsb
int3
dec
jl
xchg
sbb
sbb
shlb
in
mov
sub
dec
in
adc
push
out
mov
xchg
fisttpll
test
sub
mov
pop
add
ror
mov
fsts
test
js
sub
cmpsl
std
enter
mov
push
out
in
rorl
or
mov
jl
ss
sub
imul
pop
mulb
lcall
xchg
lahf
jle
push
mov
add
sarb
pop
xor
pop
dec
pop
adc
aad
push
add
mov
in
pop
test
inc
push
pop
mov
cmp
stos
leave
adcl
pop
mov
gs
push
mov
dec
repz
fs
popa
rorb
std
xchg
xor
in
hlt
pop
enter
movsl
mov
mov
jne
mov
lods
ss
out
and
jb
mov
or
rcr
mov
push
pushl
lods
inc
imul
sub
out
ja
xchg
mov
cld
inc
cmp
mov
dec
inc
cmc
sbbl
mov
fcom
int
xor
cmpl
add
enter
lret
pop
xor
shlb
dec
xor
push
jle
xchg
cmp
les
cmp
inc
add
sub
mov
sub
scas
sub
adc
sub
inc
ljmp
mov
jmp
repnz
xchg
data16
add
cmp
jae
popf
sbb
das
std
xchg
shlb
cmpsl
mov
int3
adc
jae
dec
xchg
xlat
push
incb
enter
dec
das
pop
xorb
out
sti
fyl2x
repz
jg
inc
out
xchg
arpl
ds
pop
test
inc
cmp
sbb
mov
push
mov
jle
adc
into
ja
outsl
sbb
pop
or
lret
popa
mov
in
or
or
adc
cli
lcall
dec
shlb
lea
stc
adc
xchg
pop
dec
mov
push
out
mov
dec
xchg
pop
cltd
mov
pop
xchg
pop
pop
jecxz
push
jae
cwtl
out
xor
pop
push
clc
fistpl
jge
sbb
sub
sbb
cmp
repz
mov
pop
cmpl
push
mov
cmp
cmp
inc
into
rclb
ljmp
shll
insb
cmc
loop
sbb
mov
sbb
push
adc
and
mov
dec
test
or
xchg
jns
out
mov
mov
mov
test
and
hlt
loopne
add
mov
or
pop
push
mov
leave
mov
lcall
mov
jecxz
xchg
dec
popl
nop
push
dec
fisubl
pop
lock
imul
dec
push
out
jne
test
lret
rorb
pop
int
scas
dec
and
push
xor
adc
push
out
lds
mov
ja
out
jbe
dec
or
mov
fs
mov
pop
cmp
sbb
push
in
hlt
call
pop
add
in
jmp
ljmp
scas
inc
push
fs
jp
je
inc
mov
mov
rcrl
mov
daa
mulb
std
arpl
or
shl
movsl
shll
cli
js
lock
mov
pop
mov
jne
pusha
imul
fwait
mov
ds
pop
leave
mov
mov
imul
jg
mov
sbb
mov
out
sahf
mov
icebp
xchg
js
stc
scas
popa
lods
shr
cmpsb
push
fcomps
adc
clc
repz
out
or
push
inc
cld
push
xchg
dec
enter
push
mov
sbb
stos
popa
scas
or
pop
add
push
cmp
push
mov
lds
popf
popf
js
cmpsl
or
imul
repz
andl
or
jp
adcl
xor
fbstp
stc
call
jge
js
add
mov
ret
xlat
dec
jmp
add
hlt
in
in
push
pop
xchg
in
enter
sarl
fldenv
push
mov
add
adc
ds
repnz
es
orb
jno
sbb
stc
inc
xchg
inc
sbb
mov
push
sbb
jle
push
test
pop
mov
jae
shrl
pop
and
orb
leave
mov
jnp
pushf
data16
dec
ret
rcrb
mov
mov
xlat
dec
jl
rclb
fnstenv
xchg
inc
cltd
xchg
inc
imull
xorl
orb
popa
lods
add
and
dec
in
out
cmp
or
sbb
xor
or
outsl
imul
mov
stos
mov
lcall
mov
mov
add
and
loope
repnz
xor
dec
ja
jmp
inc
shlb
ficomps
in
sub
mov
inc
adc
sub
dec
sub
dec
fs
inc
push
fisubrl
sbb
xor
mov
or
pop
sbb
inc
enter
daa
pop
or
aaa
daa
sub
jo
xchg
pop
insb
inc
fwait
hlt
shrl
sbb
dec
mov
adc
jge
outsb
push
ljmp
mov
xchg
xchg
scas
cli
movsl
mov
mov
inc
iret
push
cmpsl
jno
fstps
cwtl
imul
jb
fdivr
mov
mov
shrl
imul
sub
out
xchg
lods
mov
mov
pop
pushf
call
je
jno
cli
dec
dec
out
and
clc
jge
adc
mov
xor
rcl
sti
cmp
sti
adc
mov
xchg
fs
mov
inc
dec
jne
inc
push
into
lcall
ljmp
xor
jmp
push
pop
jl
repz
jbe
scas
inc
lods
lret
push
push
cs
cld
adc
in
es
push
pop
jbe
outsb
dec
jl
fsubrs
loope
fs
inc
shll
jb
push
xchg
push
mov
adcb
rdmsr
loop
add
lret
fwait
xchg
into
jnp
cmpsb
sub
xchg
stos
dec
loope
pushf
cli
mov
int3
xchg
enter
cmp
fs
xlat
ljmp
mov
adc
fcmovne
jns
test
xchg
stos
push
lods
in
cmp
mov
adc
add
jl
pushf
aas
mov
clc
jne
mov
stos
adcl
insb
or
xorb
push
push
testl
into
pusha
add
lds
sar
in
mov
push
pop
sbb
fiadds
stos
jb
and
data16
rclb
mov
sbb
inc
sbb
jae
push
mull
jne
sbb
aaa
sbb
int
js
jns
gs
scas
ret
cmp
lahf
mov
stos
inc
sbb
xchg
pop
ffree
fsubrl
sbb
fisubs
das
pusha
loop
fmuls
add
mov
xor
in
pusha
xchg
mov
pop
add
ret
mov
fsubr
imul
add
movsl
pop
nop
repnz
jp
dec
lret
fdivrs
cmp
fisubrs
fwait
int3
adc
push
into
roll
lcall
mov
fs
lret
pop
movsl
push
sbb
shlb
movsl
push
js
mov
pop
lret
jl
xchg
push
push
push
mov
sbb
fstpl
aas
pop
repz
rcrb
imul
mov
inc
xor
ret
je
sbb
dec
mov
sbb
xchg
push
in
xchg
or
cmpsb
movsl
inc
xor
jbe
cmpsl
les
and
stos
stos
add
mov
mov
mov
mov
rcr
jbe
xchg
dec
mov
fadd
and
push
jmp
scas
insb
xor
xor
jp
rcrb
iret
fwait
cmp
mov
push
push
out
pushf
lods
mov
sbb
pop
cmp
in
hlt
and
push
or
dec
mov
movsl
js
and
fadds
jmp
ret
mov
inc
aam
inc
mov
push
and
int3
inc
scas
sbb
mov
cld
fnsave
fsubs
xlat
enter
stos
jge
sub
jg
int3
faddp
in
movsb
jnp
addr16
xchg
hlt
pushf
addr16
push
int
sub
mov
xchg
punpckhbw
xor
fcmove
dec
sbb
arpl
or
fisttpl
sub
je
xor
cmp
push
xchg
rclb
add
cwtl
inc
xor
inc
push
xor
aaa
mul
adc
test
mov
fucom
inc
ret
jg
mov
inc
pop
testl
mov
mov
sbb
pop
out
in
cld
and
dec
insb
cmp
sbb
mov
mov
insb
repz
dec
inc
or
sub
rcrl
add
out
test
sbb
pushfw
mov
bound
xor
push
cmp
aas
adc
jge
or
add
cmp
pop
or
cmpsb
cmp
clc
aam
jp
jne
xchg
out
dec
xchg
adc
repz
dec
sarb
and
sub
or
in
cld
inc
data16
cld
mov
sbb
add
vrsqrtps
and
js
mov
nop
lcall
shl
cltd
xchg
pushl
mov
stos
pop
mov
add
adc
nop
push
fiadds
popf
enter
iret
in
test
outsl
cmpsb
fs
mov
fidivrs
xchg
test
jb
cmc
mov
subb
test
push
xor
or
lahf
lock
pusha
repnz
sbbb
and
mov
fcomps
mov
xor
mov
pop
cmp
mov
jmp
movsb
mov
or
mov
dec
imul
mov
imul
pop
dec
or
push
les
pop
cmp
loop
mov
jg
pusha
outsb
mov
and
cmc
push
jo
orb
add
or
insl
cmp
jnp
jo
push
cmpsl
xchg
stos
push
inc
std
call
pop
ja
fidivrl
mov
xchg
cmp
xchg
xlat
ljmp
dec
mov
sahf
and
xchg
push
pop
inc
sbb
xor
or
mov
rorl
shl
lock
inc
pop
push
cmp
shlb
xchg
sti
in
lods
xor
imul
mov
sub
sbb
stc
xchg
pop
jno
stos
jle
ret
pop
aaa
dec
lret
incb
and
daa
decl
and
ja
push
push
or
push
mov
adc
xor
leave
sbb
lea
xchg
xchg
shlb
adc
mov
adc
mov
dec
mov
imul
stos
add
rolb
dec
les
inc
insb
mov
mov
sub
outsl
stos
pop
push
sub
jae
dec
add
xchg
or
lods
je
dec
push
dec
mov
or
sub
mov
loop
out
sahf
ret
jno
mov
not
pop
pop
pop
jecxz
pop
pop
js
jns
lods
sub
cmp
stos
xor
out
pop
fnsave
ss
jl
outsl
xor
rorl
outsl
mov
out
rol
mov
mov
lods
inc
lcall
mov
les
aas
jnp
mov
popa
mov
out
rorb
fldt
mov
cmpsb
and
in
adc
iret
add
aad
mov
and
call
ss
adc
push
cld
push
mov
cmpsl
das
frstor
adc
jae
xchg
clc
movsb
dec
jne,pt
lock
in
out
dec
jp
mov
inc
dec
cld
aam
mov
mov
ret
jle
shrl
jnp
enter
fisttps
sbb
in
int
out
inc
scas
es
sub
cmp
std
into
pushf
xchg
xor
lock
test
sbb
inc
sbb
mov
in
and
xchg
sub
add
cld
in
fwait
jae
sub
lahf
hlt
mov
jno
pop
test
gs
jmp
lcall
ja
in
repz
mov
pushw
lock
sbb
pop
add
adc
sbb
dec
adc
inc
or
inc
stos
mov
jp
cmpsb
cmp
cmp
jg
inc
push
adc
or
dec
xor
mov
sbb
jae
dec
xor
mov
andb
or
xor
dec
movsl
sub
mov
jnp
lcall
outsl
mov
mov
cmp
mov
ss
movsl
jmp
orl
dec
shlb
call
mov
xchg
jg
pusha
out
fidivrs
popa
jns
xor
xchg
jo
and
jle
mov
dec
lret
nop
cmc
fmull
push
lcall
imul
int3
inc
xor
inc
popf
push
jno
jge
and
dec
add
jp
rcll
pop
adc
push
jl
inc
int
stos
cld
daa
pop
shll
cmp
aad
inc
ret
repz
push
inc
push
dec
mov
out
adc
das
cmpsl
in
addr16
or
cmp
in
outsb
push
push
in
js
js
pop
inc
fldenv
sbb
loop
fs
push
sti
lret
stos
or
mov
aad
push
and
lahf
aad
cmp
pop
sarb
pop
pop
in
loope
lret
pop
sub
sub
test
cs
nop
stos
inc
mov
lret
mov
lahf
pusha
mov
stos
fisubs
xchg
jnp
daa
cmp
add
cltd
push
sbb
outsb
mov
or
int3
jmp
arpl
bswap
jge
dec
subb
sub
es
adc
jbe
pop
scas
mov
push
movsb
movsb
movsl
outsl
pop
mov
test
hlt
rcl
dec
lret
lcall
hlt
out
dec
movl
cld
adc
mov
push
push
sbb
or
fidivs
xor
imul
dec
fs
ss
pop
sahf
pop
std
xchg
fnsave
pop
jle
lock
cmp
inc
pop
fisubl
test
push
arpl
xchg
test
and
loop
add
jne
ret
stos
inc
mov
cmp
test
mov
add
xorb
aaa
aam
pop
lea
fdivr
iret
movsb
std
add
insb
popf
fistpll
neg
or
add
icebp
les
or
xor
in
mov
into
test
rcll
mov
orb
push
outsl
ds
push
sub
fistl
jmp
movsb
mov
push
sub
xor
lret
clc
arpl
mov
sbb
xchg
movb
cmp
or
jmp
mov
jl
add
add
addr16
scas
sarb
aas
add
sti
out
clc
cs
cld
cli
outsl
jle
jle
push
inc
jmp
fstpt
dec
push
or
dec
std
outsb
jmp
xchg
mov
mov
in
inc
jecxz
xchg
je
jne
hlt
xchg
inc
pop
imul
out
dec
fldl
sbbl
aas
shrb
mov
mov
and
push
or
aam
ljmp
jo
push
fdivrs
or
cmp
xchg
cmp
mov
repz
cmp
jg
xor
mov
sbb
sbb
mov
out
xchg
in
scas
xchg
push
movsl
xor
jl
and
cmp
xchg
ret
pop
data16
add
pop
xorb
and
inc
sahf
adc
imul
push
mov
mov
sub
or
xchg
xor
test
add
orl
push
push
pop
insl
lret
leave
pop
ja
fsub
inc
jge
inc
adc
or
fistpll
sbb
pop
push
pop
sub
pushf
xor
sub
pop
sarb
dec
push
pop
shl
lods
fcoms
dec
aaa
mov
inc
aad
repz
in
fwait
and
inc
cmp
cli
pop
sar
sbb
jg
sbb
aas
aam
pop
jnp
xor
sub
cmp
xchg
les
jne
mov
and
pop
test
lcall
lock
ja
xchg
stc
rolb
mov
sub
js
jno
ret
mov
out
mov
sub
test
adc
push
loope
inc
je
or
xor
xchg
stos
lret
je
xchg
rcll
or
aam
fdivl
jae
push
pop
adc
ret
pusha
mov
mov
mov
mov
imul
flds
rclb
mov
push
xorl
shl
arpl
stos
test
test
jbe
mov
adc
dec
out
mov
subb
in
out
aad
fs
aam
and
cmpsb
and
in
inc
xchg
adc
scas
pop
nop
mov
mov
data16
ja
scas
lcall
inc
xor
and
insl
push
sub
and
out
mov
je
outsl
sub
rcl
aas
outsw
jge
sbbb
gs
mov
jbe
sub
loope
push
xchg
mov
inc
arpl
or
pop
pop
data16
or
push
arpl
js
sbb
not
dec
xor
mov
mov
nop
out
lock
popf
push
arpl
jle
shrb
sbb
or
into
xchg
pop
pop
test
inc
clc
pop
mov
fsubl
outsb
add
or
fisubrl
cwtl
inc
fnstenv
push
les
push
sbb
mov
jns
cwtl
xchg
sub
sbb
fdivrs
pop
inc
mov
clc
mulb
decl
jge
mov
mov
push
xchg
push
jmp
ljmp
rclb
leave
fbld
sti
mov
push
pop
add
insl
nop
and
movsl
sub
push
cmpsb
sbb
fldenv
add
dec
xchg
adc
mov
insb
mull
fistl
push
js
sti
addr16
sub
jb
mov
sbb
test
xchg
ss
xor
das
das
call
pushf
scas
jbe
pusha
flds
cmp
jb
inc
jno
or
xor
push
push
cmc
std
cwtl
subb
mov
arpl
mov
cwtl
adc
and
adc
or
mov
data16
int3
or
jo
lock
scas
enter
in
ret
rcll
dec
lret
xchg
mov
in
fisttps
or
or
insl
mov
in
in
xchg
push
mov
enter
gs
jno
nop
cld
iret
mov
jp
fistl
sub
pop
mov
sarb
cld
and
ljmp
lahf
jnp
xchg
outsl
xor
mov
aas
ljmp
fcmovbe
mov
lock
stos
fldt
test
stos
in
mov
inc
fwait
push
xchg
dec
je
repnz
repz
shll
adc
fmull
push
sub
pop
or
insl
mov
movsl
push
mov
pop
pushl
iret
cmp
cmp
cmp
xor
popf
into
test
int
std
mov
bnd
leave
filds
and
inc
lods
push
jo
or
add
sub
mov
mov
or
jecxz
movsl
loopne
fidivrl
dec
xorl
xorb
pop
sbb
out
mov
test
lods
xorl
ljmp
sti
stc
push
js
jne
push
loopne
jnp
inc
lea
in
mov
and
in
xchg
mov
dec
or
lock
fs
incb
stc
xchg
pop
sub
nop
sub
nop
test
addr16
cmpsb
push
mov
test
insl
xchg
mov
cmc
push
scas
mov
addr16
aas
insl
jnp
mov
jecxz
das
adc
bound
sbb
pop
mov
or
mov
adc
leave
sub
out
sub
and
hlt
rolb
add
mov
jmp
js
in
pop
addr16
push
fs
shlb
dec
cwtl
add
negb
mov
imul
cmpsb
ljmp
xor
ja
pop
pop
scas
mov
cmp
xchg
add
dec
or
fwait
decb
roll
ljmp
cmp
fildll
lock
pop
enter
pop
xorb
jmp
cmp
mov
stos
in
loope
or
shlb
cwtl
sti
scas
fcomps
sub
jne
ret
lcall
pop
cld
jbe
test
push
das
and
or
test
fbld
adc
bound
pop
xchg
xor
pop
add
jge
mov
test
cld
cmc
xor
and
cmp
stc
jecxz
xor
or
cmp
shrl
fdivl
sbbb
pop
xchg
jae
pop
out
mov
stos
fsubl
out
enter
lea
divb
in
mov
pop
or
mov
bnd
push
push
pop
aad
pop
in
pop
mov
jno
stos
test
or
fdivrs
bound
imul
sub
xchg
movsl
cmpsb
test
sub
addr16
pop
cmpsl
iret
sbb
cmp
jne
pop
ffree
mov
cmpsl
jge
in
aad
dec
in
notl
jge
adcb
aad
jecxz
pop
out
lods
lcall
mov
adc
adc
bound
fdivl
xor
in
and
nop
or
pop
and
pusha
mov
dec
fcmovu
test
int3
adc
ds
add
push
ficoml
xchg
movsb
movsb
stc
rcr
ficoml
popa
out
inc
scas
aaa
cltd
adc
outsl
xlat
push
push
or
sub
push
cmc
and
lret
jne
lods
or
popa
stos
sub
outsb
pop
ret
sarl
adc
lret
into
pop
mov
xchg
sub
push
test
pop
fisubrl
outsl
popf
cmp
out
test
adc
xlat
jmp
out
and
cmp
cwtl
sbb
pop
sbb
or
mov
js
mov
nop
cmp
cmp
or
push
cmp
divl
mov
xchg
push
in
cli
std
or
cmpsb
and
sbb
loop
push
mov
insl
ss
ret
xlat
jne
rol
lods
or
int3
or
ret
pop
scas
shr
adc
nop
lock
mov
adc
mov
lods
fwait
sub
or
gs
xchg
sbb
dec
dec
dec
mov
push
dec
jns
sbb
mov
xchg
fistps
and
adc
sahf
loop
movsl
bound
sub
in
popa
mov
or
iret
xor
int3
aad
lods
cmpsl
pop
mov
cmpsl
popf
jae
loope
das
in
or
sbb
stos
aaa
loope
ja
mov
cmp
in
push
and
int3
leave
test
outsb
into
mov
pop
sub
popa
sbb
loop
ret
mov
lret
fsubl
sbb
int3
jnp
fs
insl
lea
dec
aaa
inc
lds
repz
xor
xchg
in
pop
iret
fdivl
fnsave
hlt
aas
jne
fsubrs
inc
mov
adc
lahf
add
add
cmc
push
out
dec
pop
fcmovbe
pop
mov
dec
push
fs
test
outsb
inc
and
fidivl
mov
mov
xchg
cmc
insl
out
push
sbb
lea
clc
xlat
adc
pop
mov
mov
movsl
pop
sub
lret
inc
dec
adc
inc
mov
sub
push
notb
jbe
push
fldcw
mov
clc
call
mov
fs
jno
rcrl
int3
mov
mov
push
sbb
xor
aad
repz
aad
les
mov
lcall
pop
sub
out
xchg
ficoml
mov
pop
add
xor
sbb
cmp
sub
add
add
dec
out
aaa
lahf
push
out
inc
cmp
xor
div
lods
cmpsl
push
dec
shll
push
pop
adc
push
loopne
cmp
shrl
mov
das
bound
sub
push
mov
sti
sub
iret
insb
dec
add
push
data16
in
jge
push
mov
jnp
push
mov
shlb
mov
inc
jle
ljmp
mov
add
gs
sbb
shll
test
mov
or
cld
xchg
mov
shlb
sub
pop
loopne
dec
adc
lock
loope
jae
lods
sbb
xchg
test
sti
imul
cmp
adc
xorl
pop
and
fcompl
ficoms
lods
movsl
sub
mov
pop
ret
fidivs
cmpsl
dec
sub
cwtl
mov
popa
cmp
stc
popf
cmc
inc
lahf
ds
pushf
jge
push
xor
rcrb
xchg
out
lods
mov
mov
and
push
xchg
mov
push
xor
repnz
mov
cmp
mov
les
adc
xor
sub
sub
adcb
pop
cmc
sti
shr
or
inc
repz
cs
or
jns
dec
mov
pushf
pop
scas
dec
xchg
loope
sub
rorb
add
aas
call
jmp
std
test
xor
loop
sub
int3
pop
out
adc
add
mov
mov
fucomi
cmp
or
in
mov
pop
cmp
jae
xchg
mov
pushf
ret
jae
inc
jle
cmp
sub
lods
movsl
cs
push
jmp
repnz
mov
aaa
lret
adc
sbb
std
fwait
mov
xchg
outsb
adc
cwtl
aad
mov
dec
sbb
scas
pop
jecxz
jp
fstpt
inc
mov
sbb
xchg
pusha
cs
incl
xor
inc
jge
cwtl
pop
sbb
sbb
pop
or
cmpl
leave
add
sbb
mov
inc
inc
and
xor
addr16
insb
lods
pop
movsl
and
push
mov
inc
arpl
fwait
jae
ljmp
pop
push
sub
or
sbb
and
pop
dec
sub
push
mov
xchg
es
sub
dec
dec
mov
scas
sub
mov
xchg
xor
loop
into
jae
rol
test
out
push
adcl
inc
test
xchg
dec
xchg
mov
ss
or
push
xchg
xchg
add
js
mov
xchg
mov
xor
fsts
rorb
scas
add
push
xchg
pop
daa
or
cld
and
lods
sbb
inc
add
add
push
mov
jne
sub
adc
nop
imul
ja
pushf
mov
xchg
mov
sbb
adc
sub
iret
movsl
push
dec
dec
xorb
lea
lea
in
dec
call
mov
adc
mov
into
data16
mov
jp
inc
pop
test
xor
xor
mov
imul
sbb
inc
clc
in
cmp
jo
mov
rolb
aad
fstpt
pop
mov
fwait
into
mov
jne
dec
loopne
push
dec
mov
add
push
adc
fcomps
adc
push
mov
add
sub
movl
xchg
jo
push
and
cmp
das
push
pushf
nop
fisubrs
rorb
lods
inc
jecxz
sbb
test
jo
icebp
aas
and
imul
stos
out
aad
inc
mov
xchg
inc
pop
int
leave
push
adc
repnz
push
cmp
gs
xorb
out
cwtl
in
xor
loop
mov
jecxz
jae
nop
pushf
push
je
popf
stos
in
dec
leave
cld
cmp
xor
fsubr
push
out
or
mov
push
insb
shr
addr16
sbb
add
inc
bound
dec
pop
iret
leave
pop
mov
jno
test
shll
cmpsb
mov
test
mov
cld
and
stos
enter
repnz
fdivl
aam
xor
sbb
lahf
pop
ljmp
adc
loope
xchg
stc
insb
popf
dec
in
jmp
ret
ljmp
sub
sub
pop
lds
adc
inc
in
add
into
jg
xor
and
ljmp
dec
xor
jo
push
cwtl
frstor
in
stos
mov
mov
inc
sub
and
test
add
and
add
jecxz
jnp
cltd
loope
neg
jmp
pop
repnz
int
stos
adc
pop
std
nop
fbstp
ja
xor
rcll
scas
push
jle
addb
sbb
jne
sbb
loopne
mov
xor
push
xchg
into
or
cmpsb
mov
int
dec
lock
jmp
sbb
ds
lahf
movsb
test
and
icebp
push
loope
mov
jne
in
mov
sbb
sbb
loop
lock
push
inc
add
mov
dec
in
mov
cwtl
iret
push
jp
es
mov
mov
pop
sub
add
aaa
scas
adc
in
cmpsb
fisubl
dec
add
mov
mov
inc
or
hlt
movlhps
adc
cmp
int
imul
hlt
aam
mov
inc
mov
ret
jge
fmuls
leave
lret
pop
out
fnstcw
in
mov
stc
mov
out
jecxz
mov
mov
outsb
inc
js
or
out
mov
push
fwait
mov
mov
loope
scas
repnz
add
cmp
cli
loop
movsw
push
mull
fistps
xchg
fyl2x
mov
and
dec
add
push
jge
shll
sarl
cwtl
sbb
pop
cmp
xchg
ret
jecxz
xlat
mov
adc
ds
test
dec
js
and
mov
insl
fistl
mov
add
fs
sbb
ja
cltd
inc
jnp
call
and
int3
push
inc
arpl
aaa
cmp
lret
gs
es
xchg
nop
in
xlat
cli
xchg
shll
xchg
and
andl
scas
push
sub
mov
jns,pn
jle
mov
jmp
sahf
and
cmpsb
ljmp
add
mov
ficoms
mov
popf
repz
inc
and
cmpsb
pop
add
movsl
inc
cltd
das
lea
sbb
cmp
or
jns
rclb
pop
jnp
ret
imul
iret
decb
cmpsb
sub
pop
arpl
mov
cmp
xchg
test
rcrb
add
mov
jge
adcb
push
inc
sbb
lret
fwait
xchg
add
or
cld
out
cli
sbb
rcl
in
pushf
inc
mov
lret
adc
jnp
js
push
iret
cmpsb
sub
pop
jecxz
vunpckhps
aas
decl
cmp
adc
aas
jp
pusha
mov
out
fistpl
gs
out
xchg
xor
jmp
inc
es
adcb
push
mov
outsl
sbbl
xor
mov
sbb
push
sbb
iret
mov
mov
aad
mov
pop
scas
inc
nop
imulb
mov
ret
outsb
pop
xlat
bnd
loope
movaps
pop
cmp
js
shlb
jb
in
push
out
jg
in
scas
xor
leave
hlt
aam
mov
popa
negl
js
mov
pop
lods
lret
dec
adc
and
shrl
sub
repz
lock
adc
cmpl
rcrb
push
pop
pop
imull
xchg
insb
lock
insl
nop
or
std
mov
push
cmpsb
addr16
mov
std
hlt
jns
mov
int
out
or
stos
pop
js
sarb
and
adc
sbb
out
pop
pop
jne
dec
out
inc
jp
lock
xchg
pop
cmpsl
dec
push
pop
aad
rolb
flds
test
sbb
in
xchg
jno
cld
and
ret
imul
inc
rcll
int
stos
xchg
popa
js
lcall
dec
jno
push
negb
aas
out
push
mov
es
or
cli
icebp
js
or
fs
sti
jno
fldl
cmp
shl
fwait
rcll
aaa
push
fadds
inc
mov
rcl
mov
push
in
andl
bound
or
dec
idivb
jns
mov
ret
xor
and
test
out
push
movsl
pop
and
out
pop
inc
dec
insb
nop
jge
std
dec
mov
fwait
mov
cmc
adc
dec
inc
fs
add
ret
mov
jnp
push
sbb
cltd
and
leave
test
xor
adc
add
jns
mov
loope
dec
daa
or
cltd
inc
loop
sub
sbb
cld
daa
dec
lret
sti
dec
mov
dec
js
mov
fldl
cwtl
nop
andl
jg,pt
jno
ss
and
lds
sbb
adcb
in
pop
out
cmpsw
jle
shrb
lds
mov
jnp
adc
push
mov
mull
mov
sub
insb
mov
adc
stos
aam
addr16
cltd
pop
les
jb
cmc
pop
jbe
dec
sbb
aas
je
or
sub
std
je
stos
push
outsb
pushl
sbb
mov
ljmp
les
fildll
ds
out
std
push
adc
std
mov
fdivrl
inc
aad
sub
jnp
loopne
sbb
aad
mov
hlt
pop
cmp
addr16
pop
enter
vmovddup
pushf
frstor
mov
pop
jb
cmpsb
push
movsl
cld
xor
push
sbb
pushf
sbb
hlt
cwtl
pop
mov
mov
sbb
or
loope
out
sub
nop
xor
ja
xor
cmp
fnstcw
andb
pusha
cltd
decb
rcll
sahf
std
outsl
sahf
arpl
adcl
shr
ja
cmpsl
push
push
xor
or
mov
jg
ljmp
push
pop
imul
cmp
roll
imulb
mov
je
and
jns
push
adc
push
or
or
imul
adc
imul
jbe
aaa
test
cmc
insb
xchg
dec
cltd
mov
mov
into
sub
dec
ss
aas
and
mov
repz
pop
jmp
push
and
clc
jle
push
inc
push
pushf
test
addr16
mov
push
popf
sti
inc
and
gs
or
stc
and
cld
cmpsb
dec
out
sti
pop
jnp
das
fmulp
shrl
jecxz
xor
pop
mov
icebp
loopne
and
sbb
ficomps
stc
ret
push
or
xorl
adc
lea
fsts
mov
leave
test
push
cli
out
cmp
adc
jb
aad
mov
adc
inc
fcompl
xor
xchg
dec
jge
sub
jmp
mov
nop
out
jns
adc
pop
mov
lret
mov
dec
adc
add
lds
bound
lea
adcl
inc
xor
mov
xor
mov
es
out
in
adc
lret
arpl
sub
in
and
dec
adc
inc
mov
adc
ljmp
test
mov
jno
jge
jge
hlt
push
mov
push
jg
sub
mov
push
lods
popw
mov
inc
and
mov
out
xchg
sbb
cld
mull
stc
xor
lods
jb
push
dec
and
xchg
mov
xchg
cmp
outsb
inc
adc
out
mov
stos
push
gs
or
aam
test
ja
sbb
ret
dec
pop
add
jge
aaa
test
pop
add
mov
sar
mov
mov
sub
scas
bound
sbb
cmp
les
jmp
push
iret
xchg
mov
pop
adc
sbb
test
mov
lea
fildll
pop
sbb
shll
sub
iret
adc
xchg
jecxz
xor
fnstcw
jne
pop
ljmp
aas
pop
roll
lds
je
mov
push
aas
in
mov
imul
mov
and
ja
jmp
xor
in
jnp
or
out
fsubp
push
lret
popf
push
dec
push
sub
clc
mov
sbb
jbe
aas
mov
sub
sbb
loopne
out
xor
loope
push
cmp
imulb
test
popf
cmp
xchg
iret
ds
ret
mov
add
inc
push
in
add
or
push
das
xor
adcl
outsb
mov
daa
adc
adc
cmp
xchg
repz
push
xor
push
aad
nop
sub
js
or
lcall
daa
vpaddw
push
xchg
call
xor
stos
and
divps
and
into
jp
scas
icebp
cmp
scas
or
pop
inc
pop
xchg
sub
mov
lcall
inc
dec
test
pop
iret
movsl
pusha
pop
stos
pop
jae
hlt
aaa
sti
sahf
push
sahf
mov
insb
sbb
dec
jne
mov
jg
mov
mov
dec
fucomip
pop
sahf
in
mov
bound
inc
mov
out
inc
mov
andl
dec
or
add
dec
push
mov
dec
cmp
loopne
cmpsl
fnstcw
jmp
and
pop
movsb
add
and
ljmp
add
frstor
pop
js
xor
arpl
jl
pushf
repz
add
push
adc
shl
ret
icebp
dec
sub
xchg
adc
cli
sbb
imul
nop
pushf
push
push
sbb
or
lods
in
icebp
adc
xor
fstpt
push
fwait
int
sahf
adc
shl
lock
ljmp
ss
fwait
out
sub
inc
sub
mov
and
aad
fwait
mov
mov
sub
mov
lahf
lds
stos
mov
jae
sahf
imul
fcmovnu
pop
out
loope
scas
mov
hlt
mov
notl
or
icebp
add
pop
sub
or
aas
xchg
loope
out
cwtl
mov
lcall
sbb
and
dec
out
popa
adcl
mov
stos
lods
adc
sub
add
inc
xchg
cmp
mov
sarl
sub
fwait
test
or
add
fs
cltd
imul
inc
repz
cmp
js
insl
in
lret
jle
add
jmp
xchg
rolb
sub
mov
sbb
dec
sarb
push
fidivs
out
dec
divl
sbb
ret
stc
xor
ljmp
xchg
sbb
cmp
shrl
xor
jno
js
iret
add
jns
mov
push
add
stos
lods
in
test
mov
mov
scas
int3
mov
mov
sbb
pop
imul
enter
mov
xor
movsb
mov
mov
fs
add
lea
aam
dec
cmp
push
aad
or
add
daa
loope
scas
inc
xchg
lret
or
sahf
repz
and
xchg
jne
cmc
and
lock
into
mov
xchg
xor
leave
sbb
jg
xchg
mov
addb
push
popa
stc
sub
xchg
mov
xchg
sahf
mov
jbe
shl
xchg
in
pop
jmp
push
jle
aas
sbb
loop
scas
pop
and
pop
lods
xchg
push
jp
dec
mov
ror
xor
sarb
mov
lret
out
xchg
xorb
into
and
lcall
dec
dec
enter
mov
push
cld
mov
mov
enter
push
lods
xor
inc
dec
cmp
jae
push
pcmpeqw
jo
mov
sbb
lods
insb
push
ret
out
aas
jns
adc
lret
dec
push
and
dec
clc
stos
sti
and
hlt
sub
or
push
mov
insb
push
shlb
clc
xlat
push
cmp
inc
insb
aam
dec
stc
xlat
adc
jbe
loopne
pop
mov
cmp
push
clc
mov
scas
mov
lret
jge
pop
jae
rclb
fwait
ljmp
aad
jmp
sbb
mov
mov
sbb
arpl
lahf
in
mov
sbb
or
and
push
subl
movsl
mov
cmpsl
in
insb
sub
verw
mov
rcl
xchg
ret
ret
inc
es
pushf
jb
icebp
scas
cmp
dec
loope
xchg
cs
sbb
xchg
jo
divl
mov
adc
cmc
scas
mov
sbb
lcall
jae
ja
leave
in
fcoml
ss
mov
stc
xor
sbb
jg
mov
fcompl
popa
lcall
arpl
dec
jnp
pop
pop
out
sbb
adc
push
dec
and
xchg
add
pop
adc
loop
adc
out
mov
pop
pop
stos
mov
dec
pop
add
aam
pop
bound
mov
adc
fcoml
outsl
repz
or
fs
sti
dec
aam
test
jae
insb
les
test
inc
inc
lcall
call
pop
mov
or
xchg
xchg
and
jp
ja
nop
mov
and
in
mov
xor
or
jo
mov
dec
test
jne
test
mov
cmp
loop
sub
stc
push
mov
outsl
xlat
loope
sbb
push
inc
pop
cmp
pop
cld
adc
xchg
xor
adc
jmp
ret
or
xchg
shl
test
bound
and
clc
cld
icebp
int3
fld
adc
lret
mov
ret
jecxz
es
aam
les
les
js
movsb
aam
xchg
add
mov
int
xor
outsb
inc
ficoms
mov
jecxz
pop
rorb
jns
gs
mov
insl
aaa
ss
into
pop
inc
lret
movsl
ljmp
sub
and
dec
or
xor
pop
in
xor
pop
sbb
movsl
hlt
dec
outsb
lods
add
xlat
into
subb
clc
or
add
fildl
cli
mov
sbb
mov
jmp
ds
out
ss
mov
inc
scas
dec
fisubrl
and
mov
lret
rolb
dec
xor
sbb
daa
notb
outsb
andl
xor
mov
or
filds
mov
pop
jne
xchg
adcb
pop
mov
xchg
fisubs
mov
push
cmp
pop
in
imul
lds
out
sti
std
loop
loop
mov
iret
int
fwait
sqrtps
popa
mov
repz
xorb
pop
cmp
out
mov
cmpsb
xchg
jmp
adc
ljmp
out
lock
mov
out
clc
aaa
dec
sub
iret
fcompl
out
popf
dec
in
sub
sbb
imul
js
add
xchg
adc
aas
cmp
ds
clc
ret
jp
cmp
subb
out
xchg
loop
roll
test
mov
jae
or
sbb
loop
adc
test
add
pop
sub
outsl
fs
popf
dec
mov
cld
ret
clc
outsl
and
arpl
and
or
leave
test
add
jge
aad
lret
mov
add
aaa
mov
mov
aam
xor
push
loop
lds
xor
roll
ret
mov
lods
repz
sub
and
and
dec
das
dec
mov
mov
stos
out
and
aas
std
repnz
push
xorl
test
sarb
mov
shr
jbe
inc
or
push
push
ficoml
xor
xchg
arpl
ret
jmp
fsubs
js
mov
pop
cmpsb
sub
pop
xchg
pop
stos
mov
sub
cld
rcrl
jns
out
jo
shrb
pop
fsubp
jae
and
mov
sub
dec
xchg
inc
fs
dec
fiadds
repnz
je
cmp
push
pop
lahf
xlat
jge
cmp
sub
xor
mov
or
roll
clc
shrb
popf
in
into
cs
adc
add
lock
fcmovnb
je
fisttpll
js
jle
popa
lods
shll
je
pushf
stc
adc
scas
and
inc
and
xor
and
dec
inc
push
mov
inc
aas
aam
sub
jo
in
call
push
xchg
sbb
ss
push
stc
cltd
int3
shrb
dec
cmp
lret
add
je
popa
fs
xor
mov
mov
fadds
inc
in
dec
push
pop
mov
loopne
push
jl
movsl
insl
adc
mov
push
jecxz
test
jo
mov
sub
mov
repz
mov
xchg
xchg
lret
test
fstpl
adc
into
mov
cmp
jbe
insl
or
mov
fldt
iret
movsl
mov
int3
cmp
xchg
ret
push
dec
popa
loope
jne
mov
aam
push
cltd
leave
xchg
or
insb
mov
js
mov
dec
arpl
outsb
int3
ds
shll
lds
popf
adc
cmc
add
mov
sbb
cwtl
int
fdivrs
scas
mov
pusha
fmul
adc
dec
loopne
jo
fisttps
mov
jo
lock
xchg
add
lods
out
int3
adc
fcmovnbe
aas
ret
add
iret
fcoms
fisubs
les
add
xchg
adc
daa
mov
or
jp
mull
or
in
insl
jb
aaa
cmp
gs
or
pop
xlat
pop
incl
mov
mov
pop
mov
cltd
mov
fiadds
sub
into
jae
adc
inc
lahf
mov
es
mov
mov
inc
and
int3
icebp
jae
sbb
pop
push
popa
cltd
sbb
insb
jb
test
mov
mov
gs
andl
stos
xor
lcall
sbb
mov
jg
outsl
jl
loopne
cmp
cmp
loope
xor
adc
out
dec
in
pusha
mov
mov
pop
incb
push
add
or
cltd
fldt
js
mov
push
add
jb
call
dec
orl
loop
push
mov
inc
loope
sbb
sahf
cld
push
push
fwait
cmp
push
jo
call
mov
xor
or
int3
fimull
out
test
movsb
out
cmp
push
test
inc
sbb
sub
push
test
sub
outsb
rolb
or
mov
adc
sbb
out
mov
mov
xor
jns
in
mov
or
mov
cli
fwait
out
inc
add
cmpsb
lahf
ljmp
adc
xchg
xchg
popa
shr
inc
xchg
inc
int3
xchg
jle
sbb
fidivl
add
jle
pop
or
rorb
repnz
call
imul
sub
push
outsl
adc
ja
pop
dec
push
pusha
ja
xor
xlat
mov
jb
das
adc
insl
push
push
aad
cmp
xchg
xor
arpl
es
mov
leave
mov
outsl
test
lahf
out
push
sarl
mov
mov
imull
cmpsb
adc
pop
js
push
ret
mov
mov
jg
jbe
pop
fistps
sarl
dec
insb
enter
jp
add
jmp
fs
push
sub
mov
pop
jle
push
push
pusha
push
push
mov
and
jne
push
push
ja
mov
adc
add
outsl
xchg
mov
or
lds
xchg
or
push
mov
in
aam
push
shrb
scas
iret
push
ss
dec
repz
mov
pop
push
xlat
dec
push
cmp
mov
mov
cmpsb
and
enter
outsl
add
sahf
in
daa
cmp
inc
mov
xor
sub
pandn
jecxz
cld
fisubrs
enter
mov
mov
xchg
popf
popa
insb
les
dec
add
mov
pop
sub
and
inc
popf
add
outsl
addl
dec
mov
cs
lcall
lret
push
jne
roll
or
mov
imul
and
and
sbb
bound
je
neg
adc
addr16
sub
pop
xor
aam
mov
cmp
stos
pushw
rorl
push
loope
arpl
in
in
cli
pop
stc
pop
roll
into
cmp
jns
fnstsw
not
mov
int
xor
divb
or
cmpsb
test
xchg
scas
and
add
fsub
mov
jle
enter
data16
or
repz
sbb
sub
bound
dec
inc
xchg
sti
test
pop
sbb
dec
sub
sub
nop
jno
jbe
sti
and
ret
adc
xor
xchg
stos
inc
shr
test
push
add
dec
imul
mov
out
jge
mov
jns
repnz
fwait
mov
add
push
mov
pop
ljmp
xor
push
xor
sbb
pop
cmpsl
inc
jnp
dec
lods
push
addr16
clc
data16
add
pop
jns
fs
add
lret
in
inc
jne
mov
fxtract
loope
xchg
jp
cld
call
jns
jbe
popf
xchg
push
dec
pop
out
adc
sbb
and
test
xor
mov
inc
mov
inc
lret
shrl
inc
std
test
adc
lahf
stc
mov
push
cltd
roll
aam
dec
in
add
fs
xchg
add
in
xor
push
imul
enter
ret
enter
mov
mov
aad
scas
inc
adc
lret
mov
call
fldl
int3
mov
or
gs
dec
mov
aaa
mov
ds
xchg
loopne
pop
ljmp
cs
dec
int
jp
std
sub
out
or
push
jne
popa
add
int3
cltd
sub
loope
mov
cmpsl
cmpsl
xchg
dec
imul
cmc
pushf
mov
cmp
xor
push
sti
mov
push
add
pop
scas
test
stos
gs
imul
jmp
sub
ljmp
sbb
cmp
roll
push
adc
loopne
fmuls
dec
and
ffreep
xor
in
es
cmp
mov
cmpsb
icebp
cwtl
mov
mov
mov
sub
ret
or
hlt
aaa
pusha
jmp
sbb
in
subl
fadds
xchg
iret
loope
das
aam
xchg
jge
fcmove
or
out
inc
jbe
adcl
push
in
cmpsb
and
push
mov
leave
movsl
pop
mov
mov
xchg
pop
jge
cmc
sub
lds
and
cmc
jnp
cwtl
sahf
xchg
pop
imull
mov
lea
sub
sti
jle
cwtl
inc
fbld
leave
or
ffree
mov
out
jb
dec
sub
popl
jae
and
dec
cltd
add
mov
pop
dec
inc
xchg
mov
pop
sub
adc
loop
sbb
decb
mov
in
iret
adc
bound
adc
test
mov
cmp
out
stos
in
bound
dec
dec
push
pop
pop
mov
inc
or
cmc
test
jne
adc
ficompl
fstl
mov
adc
mov
pop
mov
cmp
sub
in
loop
sub
jl
cmp
pop
ja
loopne
cld
push
andb
in
mov
sbb
fstpl
faddl
add
push
sarb
mov
scas
stos
sbb
aas
inc
push
push
arpl
int
jmp
mov
rcr
sub
jg
nop
sbb
sbb
add
cmp
cmp
fisubs
mov
add
icebp
or
pushf
dec
mov
jl
mov
movsb
cmpsb
xchg
sahf
sub
mov
popf
mov
test
add
out
pop
aam
mov
cld
sbb
push
xchg
pusha
jp
addr16
data16
adc
adc
jo
outsb
div
cmp
test
cs
imul
test
mov
aam
cltd
or
inc
xor
push
loopne
sti
in
jns
dec
xchg
jmp
xchg
mov
xchg
mov
in
sbb
sbb
mov
or
incb
dec
jmp
ds
idivl
sub
inc
lds
roll
sbb
mov
xor
leave
sbb
jl
add
cmp
bound
ja
negb
pushf
sbb
push
adc
aas
movsb
push
lret
and
sbbl
push
subl
xchg
out
dec
or
sahf
es
out
fdivrl
rol
cwtl
jnp
or
daa
and
lret
fnstcw
push
dec
add
add
repz
dec
adc
leave
pop
jle
mov
mov
lahf
lea
mov
cltd
push
sbb
movsl
xor
mov
js
sbb
scas
mov
dec
sub
xor
test
xchg
loopne
iret
insl
fwait
hlt
pop
ljmp
aaa
cmp
aad
and
cmp
dec
mov
fcmovnu
adc
mov
pop
aaa
sub
cs
mov
fisubrs
pop
jnp
cmpsl
xorl
adc
jl
in
test
mov
mov
loope
xor
dec
xor
push
daa
inc
or
out
xchg
pushf
fld
or
inc
outsb
shlb
jp
sub
cmp
mov
mov
or
jno
jno
jno
dec
push
jbe
and
sbb
repnz
xor
adc
lods
shrl
jl
xor
icebp
jnp
pop
mov
insb
and
shll
sbb
push
js
xchg
cmp
lcall
and
mov
mov
mov
out
dec
lock
push
cmp
xor
pop
out
push
cmp
push
xor
mov
icebp
adc
sub
pop
mov
imul
dec
jle,pt
nop
add
test
insb
push
xchg
jo
repz
daa
jge
xchg
sbb
pop
pop
push
lret
rolb
mov
push
loopne
jge
push
insb
xor
or
fisttps
add
xchg
icebp
pop
inc
int
push
fcmovnbe
sub
fdivl
push
and
cmpsl
inc
adc
rcll
loop
shlb
jmp
leave
repnz
bound
sbb
fdivrp
cwtl
mov
mov
jne
fimull
cmpsl
push
repz
and
mov
add
sub
nop
addr16
mov
add
mov
pop
aaa
inc
imulb
shl
negl
les
pop
clc
pop
mov
add
lcall
adc
pushf
adc
in
lds
pop
sub
push
inc
int
popa
sbb
mov
sub
insl
xchg
or
cli
div
push
xchg
xchg
and
xchg
mov
stos
adc
push
cmpsb
loop
lahf
mov
adc
jo
dec
lds
push
sbb
mov
xchg
xor
es
ja
sbb
sub
jbe
xchg
js
das
mov
iret
lret
or
scas
pop
iret
dec
dec
xlat
pop
mov
imul
invd
gs
mov
push
mov
push
xchg
mov
repnz
into
es
pop
fimull
loope
push
mov
or
xlat
hlt
pop
movsl
mov
pop
dec
xor
jl
xchg
ret
push
fsubl
adc
popf
sub
pop
jnp
repz
out
cwtl
dec
shl
inc
test
jmp
push
fcoms
test
iret
mov
rorb
cltd
stos
mov
sbb
lret
dec
or
push
cmp
out
cmp
or
fwait
pop
sub
in
daa
mov
aad
inc
adc
hlt
jl
scas
andl
jp
out
mov
stos
hlt
add
jns
add
inc
lods
repz
sub
in
push
mov
adc
xchg
mov
out
pop
jb
clc
push
mov
mov
sub
and
mov
rorl
lret
iret
popa
cmc
mov
and
dec
notb
outsl
andnps
jmp
pop
mov
addr16
jbe
ret
push
ret
in
sbb
pusha
call
or
faddl
lret
dec
mov
xchg
mov
inc
enter
mov
pushf
ja
fistpll
adc
mov
push
jbe
mov
adc
xor
scas
inc
sti
andb
push
push
mov
xchg
rcl
pusha
mov
xchg
out
inc
outsl
dec
insl
loop
and
mov
pop
enter
jl
test
addr16
loopne
jge
in
frstor
clc
popa
fwait
fwait
jbe
ret
lods
sti
mov
jp
mov
std
pop
push
mov
jg,pt
xchg
in
ret
std
shrl
jl
mov
lret
aaa
jl
iret
jnp
test
outsl
ret
out
addb
ficompl
inc
cmp
call
test
push
jbe
sahf
rorl
call
lds
push
int3
sub
dec
dec
jbe
cmp
mov
sub
inc
movsl
sti
mov
or
lods
jp
xchg
dec
in
push
mov
xor
shl
add
repnz
mov
mul
push
push
in
lahf
ret
push
cmp
out
mov
in
ror
sbb
xchg
cmp
int3
jbe
pop
movb
dec
or
sbb
pop
and
les
fs
test
pusha
movzwl
lcall
add
pop
inc
or
int3
pop
dec
mov
cmc
mov
xchg
fistps
xor
lret
sub
jmp
stc
cmpsl
in
cmp
add
cmp
push
sub
push
adc
sub
les
push
ret
imul
aad
and
adc
jb
jmp
enter
mov
pusha
mov
or
neg
push
sub
sbb
sub
lds
lods
adcb
loope
adc
rcrb
cmp
dec
bound
adc
cmpsb
push
xchg
inc
rcr
cmc
or
ud2
int
in
addl
inc
dec
gs
sbb
in
pop
lahf
jle
lea
lods
xlat
inc
inc
addr16
aad
mov
addr16
test
in
in
mov
push
xor
xor
outsb
pop
or
fnsave
leave
cmp
dec
adc
test
daa
ds
lret
movsl
jp
fwait
dec
mov
or
adc
cmp
mov
and
shrl
sbb
push
add
ret
out
push
ds
and
sbb
icebp
pop
std
adc
movsb
out
ja
sarl
mov
ja
cmpsl
push
dec
rcr
fmul
daa
ret
sbb
or
js
jmp
test
aas
pop
fs
fidivl
outsl
nop
std
int3
outsb
cli
repz
adc
pop
mov
mov
ljmp
adc
out
jns
arpl
jl
or
jmp
jmp
pop
pop
ret
cmp
or
push
mov
add
js
addr16
mov
cmp
mov
dec
lods
add
pop
std
rorb
rorb
cmpsb
jno
mov
push
pop
jp
int3
aaa
into
sub
pop
lret
das
loopne
mov
xor
jmp
xchg
mov
pop
leave
outsl
scas
fwait
and
iret
xor
sub
mov
jmp
jnp
repz
mov
push
sarb
test
movsb
aaa
and
sbb
aas
lret
aas
inc
mov
push
rcr
lcall
push
cmpsl
loopne
mov
or
push
icebp
arpl
push
mov
mov
inc
mov
sub
mov
xchg
out
mov
mov
xor
outsb
out
dec
into
jns
mov
mov
enter
fsubs
jg
test
mov
cli
dec
xlat
out
inc
push
in
pop
lods
push
mov
mov
dec
xorb
add
mov
ds
aas
aas
xchg
mov
and
mov
aas
retw
sbb
and
mov
add
jb
xchg
rcll
ss
sub
mov
mov
loope
fists
das
mov
and
mov
pop
push
xor
pop
xor
mov
out
cs
dec
cmp
push
jp
lret
cmp
pop
push
outsb
insl
sbb
ja
cmp
and
or
dec
rcl
insl
ds
xor
xchg
hlt
popf
clc
shl
out
push
pop
mov
cmp
push
jne
outsl
xor
push
or
dec
sbb
pop
jle
pop
mov
ret
lds
mov
addr16
and
pop
jle
sbb
daa
push
pushf
repz
out
negb
jns
jp
sub
popf
cmp
fs
outsb
cmp
cmp
xor
xor
test
pop
sbb
imul
push
movsb
pop
or
xchg
adc
inc
adc
pop
stos
adc
lods
out
hlt
aam
cld
jecxz,pt
test
pop
cmp
fst
cwtl
into
adc
push
adc
xor
cmp
jnp
dec
repz
popf
std
jp
mov
xchg
lahf
mov
and
adc
add
dec
pop
jmp
ret
xchg
cld
and
in
xchg
fsubrs
mov
cmpl
mov
daa
aas
jnp
sub
hlt
jmp
jecxz
mov
nop
lods
aam
shlb
cmp
cmp
das
push
aam
hlt
mov
stos
dec
int3
mov
and
sbb
inc
js
sbb
sbb
outsl
push
cmp
pop
cli
stos
mov
cmp
jmp
mov
imul
sbb
push
mov
sti
sub
movsl
and
leave
sub
push
stc
push
stos
movsb
jp
jg
scas
cwtl
xchg
div
jo
cltd
stos
lods
or
mov
add
bound
test
jge
cmpsb
cli
out
outsb
sub
lock
rcll
les
pop
scas
jb
stos
mov
jns
stc
dec
inc
dec
mov
pop
pop
push
dec
rorl
gs
std
lock
je
jge
fistpl
repz
push
repz
sbb
scas
pop
push
leave
test
or
mov
outsl
icebp
es
adc
popa
adc
jp
loop
mov
sbb
sbb
jp
and
pop
xchg
loop
lret
dec
in
in
movsl
push
addl
xchg
mov
xchg
mov
or
xor
cmpsb
pop
rolb
sbb
cmpl
sub
xchg
fdiv
mov
mov
mov
mov
xor
sahf
or
in
jecxz
adc
pop
xchg
push
out
popf
aam
mov
data16
push
insb
push
mov
loop
into
lock
xchg
jmp
rclb
add
das
repnz
inc
or
mov
add
jne
push
adc
xchg
je
loopne
pop
mov
popf
mov
jl
insb
in
push
test
or
fsubrs
adc
pop
lret
popf
fbstp
inc
cmpsl
lret
imul
int
jmp
loopne
jns
jbe
add
gs
repz
mov
adc
mov
dec
notl
cmp
inc
add
out
iretw
vmwrite
and
inc
jnp
mov
shr
cmp
or
add
mov
shlb
sti
cmpsb
push
insl
ss
push
mov
push
mov
ljmp
inc
or
stos
jle,pn
ja
mov
inc
sub
mov
hlt
sbb
mov
negl
jecxz
ficomps
inc
mov
cwtl
mov
mov
push
lret
adc
mov
lock
cmpsb
lds
xor
lods
js
jne
in
fwait
es
jp
leave
add
call
push
xchg
mov
rorb
mov
sbb
dec
insl
call
mov
jmp
cmp
out
scas
rcrl
pushf
sbb
xor
sub
inc
sbb
in
rcr
aaa
push
xchg
int
xor
or
jle
jae
idivb
cmc
push
ret
push
lahf
cli
ret
inc
jae
cmpsb
cmp
mov
jle
pop
jp
idivb
pop
lret
mov
sbb
addr16
push
into
xor
pop
xchg
xchg
jmp
clc
inc
aaa
push
pusha
jns
lods
cmp
jge
fcmovne
sbb
dec
mov
rorb
dec
inc
shll
mov
cmp
int
mov
or
arpl
fcmovb
pusha
pop
xchg
sub
leave
out
xchg
mov
ret
push
sub
sahf
mov
and
js
push
shl
push
repnz
sub
add
inc
lea
xchg
rcrl
and
lock
mov
pop
mov
jb
adcl
fldenv
aaa
scas
scas
push
or
clc
dec
push
push
xchg
dec
scas
aad
aaa
mov
or
or
jg
jp
pop
jbe
movl
lock
lods
lcall
fadds
fwait
mov
cltd
out
ss
mov
cmpsb
mov
lds
add
xchg
mov
sub
xlat
filds
imul
pop
adc
repnz
lahf
mov
aam
xchg
jecxz
aam
cmpsl
call
js
add
lea
push
jl
test
mov
jmp
jnp
push
call
jmp
enter
jns
js
and
xchg
push
and
lock
out
lods
inc
cmp
jmp
shll
cmp
mov
lret
mov
pusha
xor
xchg
dec
mov
sarb
ficoms
mov
pop
outsl
cld
pop
out
and
scas
pop
imul
cmp
push
xor
adc
mov
adc
or
pop
cld
mov
bound
mov
lret
test
aas
xchg
xchg
mov
lret
cmp
xchg
gs
and
in
cs
or
arpl
outsb
push
ljmp
sbb
nop
mov
or
or
ss
loope
outsl
add
repz
push
imul
js
movsl
adc
fidivl
mov
test
loop
popa
test
xor
pusha
lods
push
jns
jl
ret
jp
cmp
cmp
or
mov
int
dec
das
rclb
xor
xor
insb
adc
popa
lock
cmp
pop
jmp
and
and
sub
scas
mov
ret
mov
add
adc
in
add
mov
mov
cmp
inc
idivb
push
aam
jecxz
xchg
push
orb
jmp
cmp
repz
out
sahf
jmp
mov
xchg
je
loope
outsb
loope
and
movl
jecxz
inc
enter
lock
fsubs
xchg
inc
sbb
mov
jo
pop
mov
mov
out
xor
xor
cmp
pusha
fs
pop
mov
outsb
push
cmp
js
jbe
loope
insl
jmp
pop
dec
or
mov
pop
loop
xor
mov
in
push
push
adc
or
cmp
shl
insb
ss
pop
nop
cmc
pop
addb
decl
bound
in
dec
test
sub
shll
bound
nop
adc
fstpl
mov
loope
pop
push
cmp
in
cmc
movsb
loope
ljmp
lret
mov
dec
pop
or
ficoms
mov
loop
mov
into
dec
int
out
outsb
sarl
mulb
and
jl
int3
add
or
repnz
scas
adc
ret
sbb
cmp
cmpsl
andb
cmpsb
clc
imul
xlat
adc
popa
xor
insl
jne
cmp
adc
std
shl
mov
punpcklwd
xchg
stc
mov
outsb
pusha
ja
fsubl
mov
mov
jg
scas
jno
adc
lret
dec
subl
pusha
xor
loopne
mov
add
inc
loop
cmpsl
fdiv
dec
movsb
push
cwtl
aam
add
jo
sub
idiv
pushf
ljmp
fcoms
ljmp
and
mov
test
inc
outsl
js
pop
outsb
roll
jno
lcall
or
test
mov
xlat
pushf
dec
cmp
pop
pop
ds
in
in
mov
lahf
ret
xchg
dec
aaa
lret
jnp
mov
sbb
icebp
pop
ljmp
test
gs
cs
cmpsl
rclb
add
fstpl
fldt
mov
scas
xor
push
mov
clc
jecxz
mov
test
cs
fcmovne
mov
cltd
push
xor
rcr
sbb
xchg
movsb
sub
fsub
jmp
dec
xor
xchg
orl
rcll
and
fistpl
in
mov
xchg
inc
mov
push
aas
ss
cltd
add
gs
pop
mov
mov
jb
jge
adc
lods
movsb
fidivs
fcoms
adc
sub
or
mov
aaa
test
mov
mov
sbb
mov
ja
lcall
pop
outsb
jl
push
jmp
insb
xchg
add
repnz
xor
and
mov
xchg
jb
xor
sub
mov
mov
psrld
stos
ss
mov
xor
fadds
sub
dec
inc
mov
enter
push
mov
adc
xor
mov
or
mov
mov
add
fdivrl
test
inc
aad
push
ds
pusha
loope
sbb
jge
sub
pop
cmp
cmc
and
mov
neg
sub
mov
mov
movsb
jne
mov
mov
pop
lea
push
inc
mov
push
cmpsl
enter
or
adc
in
sbb
or
ss
xchg
fistpll
lods
mov
dec
ret
arpl
sbb
dec
xchg
jno
xor
mov
jl
in
or
popa
mov
test
loop
and
push
dec
mov
mov
pop
shrb
fwait
push
adc
div
scas
test
repnz
push
add
cs
xorb
rcrb
cs
shll
jp
aad
stc
pop
outsl
outsb
repnz
repnz
scas
mov
mov
push
aaa
lock
stos
xchg
inc
hlt
cld
adc
fdivrl
aaa
cmp
lret
aas
dec
jecxz
jmp
movsb
mov
imul
adc
mov
mov
and
fs
mov
xor
imul
push
jo
out
add
outsl
push
add
test
stc
xchg
mov
loopne
cs
sbb
inc
push
loope
push
gs
outsb
clc
adc
mov
xlat
pop
xchg
jmp
in
mov
push
out
imul
nop
pusha
cltd
mov
fcoml
shll
cmova
pop
lods
pop
loopne
hlt
loope
xchg
jmp
rcl
dec
lea
das
mov
cmp
in
adc
fwait
mov
std
bound
icebp
addr16
loope
lds
mov
out
cmpsb
dec
mov
sbb
sbb
jmp
call
or
in
scas
lods
add
ds
mov
rcrb
cmpsl
sub
cltd
call
aas
cs
cmp
addr16
jo
inc
mov
xchg
pop
test
xchg
loope
xlat
push
pop
movsb
xor
sub
push
sub
sahf
cld
lods
jmp
jmp
pop
out
add
call
je
xchg
stos
cltd
mul
inc
dec
xchg
xchg
push
xor
push
shrb
ret
les
jl
jge
mov
mov
hlt
xorb
xor
cli
mov
push
dec
out
std
test
pop
dec
fcoml
stos
or
insb
addr16
mov
xchg
push
dec
push
jb
sub
pusha
mov
sbb
inc
negb
adcb
aam
mov
inc
pop
rcl
xor
jo
sub
cmc
pop
inc
cmp
sarl
fldenv
jno
or
lds
jo
cmp
cwtl
push
test
mov
jns
test
repnz
jnp
adc
adc
jl
pop
loope
push
xorl
sbb
mov
push
mov
and
cli
orl
mov
ja
repnz
lds
jnp
xrelease
jns
jns
cmpsb
sbb
pop
roll
mov
sub
cwtl
sbb
or
aad
es
mov
pop
jmp
pop
aam
inc
cltd
lods
xor
sub
movsb
sahf
shlb
fnsave
lods
outsb
iret
jo
dec
mov
dec
js
fwait
mov
bound
sub
pop
cld
jno
imulb
cmpsb
movsl
fdivrs
int
add
cmp
and
xlat
loopne
call
es
xchg
mov
or
scas
rcr
push
insb
outsl
sub
movsl
sub
push
dec
cmp
loop
mov
ds
lods
cwtl
dec
clc
call
pop
push
fsubrl
push
add
mov
aad
mov
out
xchg
push
insb
jns
xchg
inc
mov
mov
add
dec
jmpw
fsts
pop
sub
mov
xor
mov
or
aaa
pop
or
jp
fcompl
sbb
jmp
nop
pushf
loop
jmp
mov
xchg
fcmovbe
imul
in
ss
mov
xchg
shll
adcb
adc
and
out
jmp
cmp
pop
pop
xchg
push
aad
ja
sbb
add
mov
add
rorb
push
add
xchg
popl
lods
mov
xchg
pmaxsw
lcall
push
mov
pushf
fdivl
in
lahf
icebp
pop
fcompl
sbb
or
lods
push
mov
jge
add
jb
push
adc
mov
iret
jg
sub
hlt
push
loop
enter
and
addr16
data16
and
mov
int
mov
and
jb
push
repnz
dec
popf
mov
mov
lret
scas
pop
fucomip
bound
mov
les
xchg
jbe
cmp
dec
xchg
xchg
add
cwtl
aas
push
fmulp
lods
test
jns
fwait
xor
inc
mov
stc
sbb
inc
fcmove
and
imul
popa
or
xor
push
pop
push
push
data16
dec
das
test
xchg
sbb
imul
jo
fisubs
mov
decl
dec
xlat
or
sti
lret
jmp
jo
repnz
test
fsqrt
enter
mov
fabs
outsb
test
add
dec
out
adc
mov
push
jb
out
lret
mov
dec
dec
call
incl
inc
dec
loopne
out
dec
xchg
mov
outsb
cmp
les
pop
mov
andl
lds
rorb
lock
or
push
push
xchg
xlat
cwtl
sbb
aaa
rcll
sti
arpl
stos
or
sti
insb
xchg
mov
mov
lret
in
mov
mov
jno
mov
movsl
xor
add
outsb
and
dec
addr16
inc
mov
inc
sbb
xchg
push
xlat
pop
jl
lcall
in
mov
mov
jbe
in
roll
or
mov
fisubs
inc
jbe
mov
cmp
into
sub
inc
sahf
cwtl
sub
arpl
icebp
and
mov
stos
test
movsl
pop
cmp
enter
js
loop
insb
shlb
jmp
outsb
dec
aam
mov
mov
pop
pop
mov
and
mov
xchg
xchg
int3
and
xor
movsl
sbb
rcll
fwait
mov
adc
ljmp
enter
and
jecxz
sub
pop
xchg
jbe
fwait
inc
mov
gs
test
jnp
negb
dec
ljmp
jo
mov
shlb
add
ds
ljmp
inc
adc
test
mov
dec
cmp
test
jl
frndint
mov
push
inc
mov
std
sbb
jge
test
adc
pop
cltd
fsubrs
pop
xlat
mov
sub
ds
ds
lds
mov
dec
cmpsl
insl
fcompl
lret
jae
shrb
idiv
xlat
pop
int3
les
push
push
dec
and
aas
call
fstpl
roll
xchg
mov
inc
mov
cmpsb
jae
cwtl
pop
mov
cli
sub
mov
test
popa
xchg
dec
mov
fnstsw
mov
jnp
cs
inc
jne
mov
lods
xorl
inc
and
dec
jne
pop
add
decb
insb
inc
inc
fcompl
fnstenv
push
and
popa
mov
adc
nop
xor
scas
inc
pop
es
cmc
or
or
mov
push
arpl
dec
fidivl
pop
dec
mov
rcll
xor
cmp
rol
xor
mov
and
mov
xchg
es
bound
call
fisubl
xlat
sbb
push
sbb
ret
aad
rcrl
jmp
push
mov
and
orl
adc
xor
jmp
data16
jae
outsl
inc
xor
or
mov
dec
out
out
sbb
sbb
dec
jecxz
imul
fdivs
bnd
cmp
sbbb
call
lock
mov
add
xchg
add
dec
out
int3
inc
mov
push
popf
in
rclb
xchg
adc
inc
or
pop
icebp
mov
clc
inc
les
mov
pusha
fwait
ret
cmp
or
js
stos
ret
jg
jae
aam
out
mov
push
inc
dec
mov
in
push
and
add
cmp
dec
cs
stos
sbbl
adc
ja
imul
lea
testb
pop
mov
int3
pop
icebp
mov
cmc
mov
xor
test
add
mov
ret
push
stc
and
scas
jmp
cmp
inc
cmp
cmp
sub
inc
outsb
filds
mov
jle
adc
inc
push
and
dec
or
mov
outsl
or
jbe
cmpl
rcr
test
add
cmpsb
cld
ret
adc
xchg
pop
mov
jecxz
pop
rorb
jae
test
sub
adc
dec
pop
jae
sub
mov
lds
imul
add
rol
stos
outsb
xor
fwait
pop
ja
sub
mov
loop
adc
mov
ja
mov
movsb
jbe
pop
lea
stos
ss
xorb
fimull
mov
cvtpi2ps
sahf
inc
sahf
mov
mov
imul
icebp
fimuls
mov
push
pop
lods
in
pushl
sub
adc
dec
pusha
ror
pushf
test
jne
mov
scas
xor
mov
fmull
sub
sarl
and
cmpsb
fs
push
xchg
jnp
sub
cli
mov
jb
mov
je
xchg
xchg
add
insb
push
and
jge
imul
jno
ja
ss
jp
mov
ret
movb
dec
push
test
add
cmp
mov
enter
mov
or
jmp
cs
addl
inc
mull
lods
xor
mov
insb
test
push
gs
je
mov
xchg
xchg
clc
sub
and
push
pop
pop
and
cmp
xchg
repz
or
or
pop
inc
mov
movsb
push
jmp
lods
das
lret
out
adc
and
sbbl
push
dec
jp
push
xchg
xchg
xchg
in
insb
nop
and
jnp
sbb
int3
fs
popf
xor
mov
cld
test
out
jno
mov
xchg
incl
data16
mov
add
xchg
addr16
outsl
adc
ds
test
cmp
dec
inc
movsb
pop
out
inc
sub
pop
int3
rcrl
mov
aad
addb
daa
lock
fsubrs
icebp
sbb
fwait
movsb
sub
pusha
jle
mov
fmul
jmp
mov
fistpl
sbb
jg
cmp
inc
leave
or
daa
fstpt
sub
xchg
int
cld
and
dec
jae
out
pop
cs
loope
leave
pop
lcall
xor
lret
xor
sub
mov
roll
aam
ja
pop
fdivl
mov
outsb
aam
xchg
test
mov
icebp
sub
rcl
aad
loope
cltd
lods
shlb
dec
xchg
mov
pop
fst
ds
inc
pop
aaa
js
hlt
xchg
addps
lahf
fnstsw
pushf
cwtl
xor
cmc
mov
inc
xchg
cltd
out
movsb
ljmp
adc
jge
in
add
aad
stos
push
aam
cmc
js
pop
sbb
xor
pop
aad
fadds
dec
xchg
adc
lret
push
imul
pop
push
inc
out
arpl
ds
jno
or
mov
or
jle
cmp
insl
dec
xchg
mov
xchg
and
fnstenv
add
push
rcr
adc
adc
cmpb
lcall
sub
push
das
xor
lret
push
jne
pushf
aad
push
aas
mov
push
sub
inc
popf
pop
mov
or
cld
pop
cmc
fdivs
mov
dec
jge
lea
mov
mov
mov
mov
push
jae
dec
add
inc
shlb
cmp
sub
repz
add
xchg
sbb
inc
push
shrb
pop
das
ret
pushl
pop
sub
punpckhdq
hlt
xor
daa
les
les
jbe
push
xor
clc
es
add
es
cmpsb
out
xor
xchg
inc
bound
xchg
out
inc
out
or
inc
sbb
popa
ja
pusha
fidivs
notb
mov
jae
pop
sbb
push
sbb
push
je
mov
jge
sub
mov
push
mov
cmp
addr16
sahf
or
mov
xchg
stos
push
or
cmp
mov
out
xchg
cmp
cmp
jne
cmp
stos
dec
lahf
bound
and
shll
cmp
cmp
mov
push
mov
mov
sbb
testl
push
ds
ret
daa
movsl
dec
sbb
and
xchg
cwtl
mov
out
jp
dec
dec
stos
push
jge
outsb
adc
pusha
xchg
and
out
insl
jge
data16
inc
jo
outsb
insl
mov
test
lds
push
aam
cmp
xchg
jae
inc
rcll
imull
push
pop
lcall
or
dec
jle
push
hlt
cmp
cmp
sbb
movsb
add
loop
jne
dec
adc
ljmp
or
sub
js
jg
jns
pushfw
push
out
mov
mov
lahf
js
cli
mov
push
imul
lods
clc
adc
outsb
jp
adc
cwtl
bound
or
adc
test
inc
xchg
repnz
sub
xchg
cmpsl
fsubrs
mov
imul
mov
cmc
xor
popw
hlt
push
sbb
shll
mov
in
xor
decl
jo
repz
add
pop
push
mov
jecxz
aad
popf
push
sub
in
xchg
mov
sbb
in
data16
inc
cmp
lahf
push
rorl
fxam
ret
xchg
ss
xchg
add
dec
loope
jns
ret
push
outsb
into
mov
inc
jnp
jl
xlat
out
push
jecxz
jecxz
sbb
daa
into
mov
push
ficoms
ret
dec
add
pusha
mov
test
dec
clc
push
stos
aad
or
repnz
dec
adc
repnz
lds
mov
shl
or
les
push
es
lcall
es
and
ficomps
inc
or
xor
mov
in
xchg
pushf
bound
dec
sahf
inc
push
mov
ret
push
pop
movsb
mov
ret
or
pminsw
push
pop
mov
and
lret
cmp
rcrl
xchg
jecxz
dec
mov
adc
mov
scas
cmp
cmp
sbb
lods
lock
ret
cmc
enter
jns
loop
mov
andl
lds
dec
ret
divl
imul
enter
and
je
dec
inc
lcall
lods
xchg
xchg
arpl
jns
lock
jne
out
sbb
into
out
mov
test
int
sbb
xor
mov
aam
das
popf
movsb
mov
adc
dec
loopne
sub
xor
pop
mov
in
and
test
popa
imul
dec
mov
test
cmpsl
lods
xchg
cmp
lods
cmp
xlat
xor
dec
sub
out
clc
fyl2xp1
mov
push
ret
mov
and
loopne
popa
jbe
stos
les
daa
loope
icebp
push
mov
lcall
mov
pop
sbb
mov
ss
insl
arpl
cmpsl
mov
test
mov
mov
sub
sub
inc
out
or
cld
andl
jmp
push
sub
mov
ds
fcmove
sbb
mov
or
fbld
sub
xor
xor
scas
xor
mov
push
jle
fists
or
mov
mov
lahf
in
push
mov
dec
popa
stc
jnp
sbb
add
int
lret
push
out
jl
test
jmp
loope
sbb
rcrb
aam
mov
fdivr
fimuls
movsl
pop
imul
call
call
cmpsb
sbb
sub
out
push
fwait
and
out
sub
into
bound
mov
rcrb
out
mov
fwait
inc
or
mov
push
rorl
ret
and
xchg
fisttpll
andl
orl
int
fsubl
jns
cmp
push
dec
jle
scas
enter
out
xchg
cs
sahf
pop
popa
notl
mov
push
xchg
stos
adc
jle
ss
mov
pushf
nop
push
and
jg
mov
adc
fidivl
andb
push
dec
add
loop
lea
and
sub
mov
push
movsb
orl
pop
mov
cmp
xchg
leave
out
hlt
mov
subl
jge
imul
addr16
jp
or
jmp
jae
icebp
sbb
sti
lea
fldenv
push
sub
adc
inc
pop
ss
dec
adc
aas
push
fistl
aam
mov
and
fwait
mov
mov
cltd
mov
out
mov
lcall
inc
ret
push
cltd
fisubrs
ds
xlat
clc
push
mov
and
mov
xchg
jbe
shlb
repnz
ja
sbb
and
popf
ss
repz
jne
xchg
enter
aam
lret
dec
inc
std
pop
mov
adc
inc
int3
fsubs
lret
mov
sti
adc
leave
in
push
dec
push
push
jo
mov
lcall
pop
call
mov
lahf
push
pop
rcr
dec
mov
xchg
arpl
xchg
cmp
inc
clc
stos
sub
out
or
xchg
add
jg
gs
mov
stos
mov
rorl
das
adc
pop
popf
jae
xlat
fistpll
mov
iret
insl
push
or
lea
mov
sarl
enter
lds
and
hlt
inc
xchg
jnp
jge
popa
xchg
jo
je
and
mov
adcb
das
int
test
cmp
xchg
jbe
popa
pusha
mov
xorl
ds
mov
jnp
in
jno
repz
sbb
add
insb
pushf
out
inc
hlt
leave
leave
stc
pop
sbb
repz
test
xchg
test
loop
pop
push
std
inc
cmp
jns
mov
and
in
add
and
and
mov
pusha
test
roll
insl
jae
mov
bnd
je
cmpsl
sbb
loope
xor
inc
ret
jnp
push
cs
leave
mov
cmp
cmp
pop
adc
push
and
push
xlat
dec
inc
shll
in
add
push
stc
rorb
fdivs
pop
shlb
aas
or
test
repz
sar
pushf
jae
test
inc
dec
mov
push
les
cmovge
push
out
and
cld
adc
mov
stos
sbb
dec
mov
jl
add
sbb
push
jo
mov
movb
pop
sbb
mov
cltd
outsl
mov
test
test
cmp
mov
sub
jl
push
mov
cmc
push
popf
sub
mov
push
xchg
mov
mov
shlb
cmpsl
push
pop
ds
repz
and
fwait
call
mov
call
clc
aam
cld
dec
inc
or
popa
sub
ja
lret
and
adc
pop
adc
imul
or
adc
outsl
pop
mov
adc
pop
cli
mov
pop
lods
loopne
lcall
aad
jp
pop
roll
push
dec
jg
faddp
rolb
outsb
scas
or
cmc
xor
orl
lods
lock
sub
imul
cmpsl
jl
xor
ds
jns
cld
pop
aaa
cmpsl
cwtl
sahf
popf
cmp
jae
push
push
fwait
imul
in
mov
add
pop
jp
nop
les
leave
aad
jl
rorb
mov
insl
int3
cmp
or
xor
rclb
xchg
lock
scas
mov
xchg
pop
push
mov
imull
pop
fcoml
call
jo
roll
aam
push
sbb
cmp
in
mov
imulb
dec
adc
sbb
inc
push
push
and
dec
ja
je
fs
outsl
repz
pop
addr16
lcall
sbb
shr
sahf
or
add
popa
lcall
and
mov
int3
pop
mov
ficoms
and
xor
sub
loop
sbb
sbb
push
push
dec
cld
sbb
xlat
mov
dec
cmp
insb
sbb
and
jbe
enter
lcall
push
int
cwtl
or
pop
push
mov
pop
pop
adc
mov
fisttpl
fcomp
add
nop
push
inc
sbb
insl
frstor
popf
push
and
cmp
sub
xor
xor
cmp
repz
mov
inc
jnp
inc
inc
loope
ret
or
cmp
lods
inc
ror
push
rorl
fildl
jg
and
xchg
xchg
rorl
int
repnz
mov
orl
lock
js
and
out
jb
negb
pop
in
out
int3
pop
mov
rcrl
xor
stos
push
cmc
jae
je
sti
inc
mov
std
shrb
out
push
jmp
fs
push
cltd
mov
push
fs
pop
cwtl
dec
add
pop
ror
enter
push
and
push
inc
xchg
std
shlb
out
ja
popa
mov
movsl
mov
ret
daa
cli
mov
jmp
int3
mov
cmp
cmpsb
jg
loope
sbb
shll
int
stos
sub
jmp
dec
aaa
stos
jl
addr16
into
mov
int
mov
lahf
sbb
sti
movsl
push
test
cld
or
sub
add
mov
loopne
jbe
daa
jnp
stos
sbb
push
lock
rcll
mov
call
add
mov
paddsw
xlat
add
ret
fnstcw
in
lahf
sbb
and
cmp
cmc
jbe
xchg
xor
test
sub
push
jle
mov
pop
icebp
cmp
insb
mov
popf
lods
clc
sbb
inc
dec
cmp
subb
shlb
adc
cmpb
xchg
jbe
mov
add
jmp
xchg
ret
or
cmp
jo
lock
in
jle
mov
push
ret
xchg
js
push
mov
dec
fnstsw
call
stos
mov
cmp
stos
xchg
cmp
jmp
add
call
daa
nop
or
jo
add
fdiv
scas
xor
adcb
sbb
gs
jne
xlat
mov
xor
xchg
pop
jno
xchg
add
mov
loop
sub
jo
js
lret
mov
mov
xchg
fsts
cmp
inc
pop
or
and
mov
sub
nop
popf
enter
jmp
call
inc
add
jo
adc
scas
fisttpll
lods
pop
jne
aaa
daa
cmc
sub
sbb
movsl
ljmp
cmp
mov
cmpsl
iret
stc
sub
mov
je
fbld
fdiv
add
shlb
rorl
xchg
jae
int3
stos
cmp
scas
or
hlt
mov
xchg
mov
outsl
in
cli
and
inc
pop
adcl
iret
bound
lcall
std
pop
jno
lahf
cld
cmp
std
sbb
pop
or
iret
xor
enter
push
jge
adcl
inc
aaa
stos
stos
aam
xchg
stc
jnp
insl
pop
orl
insb
inc
mov
fxch
xchg
and
or
inc
shrl
incl
push
lods
ss
mov
dec
dec
stos
jmp
and
aaa
sbb
bound
adc
xor
inc
or
inc
nop
cli
cmp
les
inc
push
imul
adc
jg
cli
xor
repnz
ds
mov
sbb
out
imul
push
pop
movsb
popa
dec
fidivrs
ret
xchg
popa
push
sbb
int3
jmp
filds
sbb
push
scas
stos
pop
inc
pop
mov
mov
mov
inc
enter
pushf
test
mov
xor
mov
dec
mov
pop
js
sahf
and
mov
jle
pop
dec
mov
dec
inc
in
inc
jo
lods
shll
push
mov
adc
jmp
jp
in
xchg
iret
xchg
mov
pop
xor
int3
inc
pop
popa
add
test
add
xchg
cld
and
sbb
fisubrs
dec
leave
dec
inc
pushf
mov
and
lcall
sub
sbb
inc
mov
ja
sub
pusha
cli
lret
lcall
mov
cmp
aas
xor
ja
mov
mov
pop
loope
cmp
lcall
push
jae
pop
ja
lds
or
add
inc
sub
lea
push
daa
test
dec
divb
xor
push
jg
add
xor
sub
imul
or
adc
mov
add
leave
and
fisttpll
inc
testb
jmp
add
hlt
xor
rcrb
jns
jbe
es
sub
leave
adc
push
xor
jb
mov
jecxz
push
jp
push
lds
sub
out
pop
cltd
fxch
sbb
pop
dec
sub
fnstenv
std
sub
mov
repz
cld
dec
stos
andps
push
sub
xchg
push
add
shr
imull
pop
adc
mov
xchg
mov
in
mov
dec
cmp
int3
fidivrs
mov
jno
inc
xor
cmp
fs
fnstenv
aaa
pop
or
in
nop
pop
arpl
xor
ljmp
pop
mov
mov
loope
dec
mov
fildll
test
lods
xchg
cmp
xchg
aaa
pop
cltd
loope
fstpl
mov
repnz
jge
jecxz
scas
cmp
arpl
sbb
lock
js
das
leave
pop
cld
jno
xor
pop
jg
pop
ret
jmp
repnz
outsb
leave
add
insb
adc
outsl
and
dec
cmc
in
sub
add
jle
lods
jecxz
xor
out
call
fcmovnu
xor
lods
ss
adc
xor
lock
scas
fwait
push
lods
mov
sbb
fdivrs
imul
sbb
lea
stos
add
popf
js
adc
daa
inc
mov
lds
xor
cmp
dec
sub
jb
mov
icebp
adc
jecxz
xchg
fbld
mov
hlt
and
cmpsb
cmpb
xor
or
in
mov
movsl
push
lods
aaa
pop
cmp
cmpb
cmp
push
xor
or
xchg
call
dec
push
jo
cmc
xchg
dec
orl
stc
arpl
mov
lds
cmpsl
jae
loop
push
test
cmp
inc
jecxz
shlb
push
rcr
sbb
push
lcall
mov
ss
sub
jns
in
push
jmp
lock
test
sbb
test
adc
jge
adc
xchg
jbe
lods
das
mov
sbb
mov
rorl
fcmovu
cmp
lcall
add
insl
addr16
imull
ret
dec
and
xor
pop
repnz
sub
out
sub
sahf
es
sahf
jae
add
imulb
idivb
filds
pop
cmpsb
xchg
pop
fwait
sub
cltd
hlt
add
jbe
sbb
adc
dec
push
pop
mov
les
mov
imul
sbb
xor
dec
jae
dec
xor
lods
ds
fsubl
gs
inc
push
jnp
arpl
pop
gs
gs
repz
and
ljmp
popf
or
and
imul
fcomps
movsb
imul
test
stc
in
scas
dec
pop
dec
mov
lahf
bswap
inc
mov
mov
inc
dec
mov
pop
and
scas
fldenv
jmp
inc
or
dec
jmp
push
sub
mov
std
jae
or
fucomip
test
and
sarb
sbb
pop
jl
fwait
stos
xchg
sub
xor
jae
mov
sbbl
mov
fs
add
clc
scas
cmc
adc
idivb
or
popl
mov
hlt
stos
add
mov
aad
dec
cmp
test
lret
sbb
clc
xor
nop
out
out
xor
ljmp
movsb
popf
push
jb
aaa
movsb
shlb
jno
lret
xchg
mov
sbb
mov
aam
int3
cmp
pop
sbb
ret
mov
cmp
cmp
pop
pusha
mov
jp
insb
mov
jecxz
push
mov
lock
ret
fbld
jmp
cwtl
add
hlt
mov
cmpsb
mov
push
mov
je
ljmp
fidivrs
movsb
xlat
push
aaa
gs
lock
dec
shl
mull
rclb
or
mov
ret
mov
into
iret
sbb
out
lret
icebp
fwait
dec
aam
lret
xor
sti
and
sbb
out
xchg
pop
dec
sarb
sbb
xchg
daa
add
sub
mov
dec
pop
loopne
pop
fs
jnp
xor
and
fs
jnp
outsl
push
bound
dec
sahf
imulb
pop
loope
or
call
or
rol
insl
lret
popa
cmp
mov
push
pop
es
sub
cmpsl
jb
mov
sbb
mov
mov
cmp
xor
out
aas
mov
movd
mov
dec
testb
fstps
or
jno
cs
js
or
test
lcall
pop
arpl
jle
repz
pop
sbb
xchg
out
aas
cmpsb
mov
test
dec
mov
clc
or
jmp
shrb
repnz
push
push
mov
mov
pusha
xchg
jl
pop
roll
jns
or
ds
imul
subb
add
xor
pushl
jecxz
mov
lods
pop
bound
sub
jle
push
popl
xchg
enter
dec
xor
call
bound
icebp
jae
sti
lds
adc
jp
andb
push
aaa
fsubs
or
sub
test
inc
sti
xchg
inc
movsl
imul
in
mov
and
ja
in
lods
mov
sub
pop
inc
out
jb
or
or
mov
lret
adc
dec
ja
xchg
jge
sbb
sub
adcl
cmp
ja
sub
je
out
arpl
movsl
fwait
es
add
xor
mov
cmp
aam
pop
imull
or
out
push
movsb
sbbl
xchg
pushf
inc
or
outsb
hlt
into
jge
ss
fstps
pop
inc
jnp
jae
add
mov
stos
mov
jb
inc
or
push
sub
dec
xchg
rcrl
int
xor
push
xchg
shrb
mov
or
imull
sub
in
inc
adc
xchg
cltd
xchg
test
mov
mov
fsubl
jecxz
fstpt
movsb
sbb
dec
xor
xor
xchg
ljmp
mov
stos
jb
ss
xor
in
scas
mov
mov
mov
in
pop
xchg
leave
je
lods
aaa
lock
loop
pop
flds
insl
mov
mov
push
add
sub
arpl
adc
pop
movsl
bound
jl
mov
cmp
dec
out
fldcw
and
outsl
stos
movsb
pop
shrl
stos
jmp
fs
sub
data16
pop
loop
out
cs
divb
pop
ljmp
in
mov
rclb
jb
ljmp
ss
or
pop
iret
xchg
fidivrs
jg
fnstsw
aaa
or
cwtl
insb
push
mov
daa
js
xchg
mov
adc
fiadds
fisubl
icebp
xchg
scas
jge
imul
cmp
shlb
ret
inc
xchg
frstor
insb
out
loopne
xor
cmp
dec
jne
dec
pop
roll
or
outsb
pop
fistps
pop
repnz
das
lea
insl
les
aam
jp
lea
in
sub
in
mov
and
push
cmpsl
ja
push
mov
add
push
or
sub
or
into
pusha
xor
insb
mov
mov
xchg
popf
mov
mov
mov
outsl
sbb
sbbl
mov
insl
sub
mov
repnz
lods
insl
xchg
outsl
mov
mov
cmpsl
jmp
pop
xchg
xchg
insl
push
push
mov
testl
mov
aaa
jg
shrl
or
leave
push
ret
add
jns
or
pop
mov
cli
movsb
pop
cmp
into
lahf
xor
in
scas
jle
xchg
xorb
push
pushf
inc
loop
xor
js
fimull
testl
inc
outsl
mov
or
out
imull
sbb
insl
std
xchg
daa
cmpsl
lds
bnd
in
pop
pushl
xchg
or
xchg
mov
outsl
imul
movsl
mov
adc
mov
ljmp
pop
pop
cli
repz
cld
mov
dec
mov
and
xlat
cmp
jge
jbe
add
lret
js
fldl
daa
js
stos
pop
adc
sbb
inc
xchg
scas
mov
and
popf
xchg
fs
test
pop
loopne
ja
pop
lods
cmp
xor
fsubs
inc
mov
lahf
cli
je
ret
jg
nop
stos
mov
std
mov
inc
pop
xor
subb
jnp
jae
aas
in
lret
test
xchg
jmp
jg
leave
xchg
pop
andl
sub
mov
adc
mov
test
test
fs
mov
adc
test
mov
int3
or
into
clc
mov
sbb
popa
call
ret
inc
popf
pop
xor
adc
inc
xchg
and
fstps
sbb
jb
out
mov
jae
push
push
rcrl
in
clc
paddsw
shrl
pop
pop
insb
in
push
scas
xchg
pop
out
jg
testl
add
inc
mov
jbe
lods
xchg
or
dec
cltd
test
fwait
pop
pcmpeqd
jns
sbb
xchg
or
imull
pop
test
jnp
lods
outsl
inc
push
ljmp
dec
cmp
scas
dec
sub
mov
cmc
dec
cmp
jge
adc
stos
add
pop
mov
sub
stos
mov
js
mov
out
adc
xlat
jmp
addb
adc
xchg
xchg
pop
sahf
repz
mov
ss
repnz
das
mov
in
shl
inc
jns
mov
rol
adc
lods
jo
add
xchg
mov
dec
bound
xchg
xchg
jae
dec
movsl
test
iret
xor
xor
into
push
ja
push
xor
or
ds
testl
jecxz
xchg
fisttpll
push
out
lret
jmp
xor
cmp
jne
aad
push
mov
inc
xor
add
cltd
jle
not
adc
mov
jp
xchg
or
in
push
mov
add
push
mov
inc
filds
push
popf
pop
stos
pop
std
mov
mov
addl
incl
faddl
sbb
sub
ret
in
mov
stos
fildl
jae
cmpsb
inc
jno
jns
mov
sbb
lock
mov
xor
cwtl
leave
mov
mov
gs
imul
mov
int
arpl
mov
jmp
xchg
xchg
int
mov
nop/reserved
inc
xor
loopne
xchg
shr
arpl
mov
adc
add
dec
adc
jne
dec
das
lcall
imul
push
popa
shl
sub
and
cli
jno
mov
push
movsl
jo
pop
es
sub
in
call
cmp
xor
pop
ds
into
mov
mov
and
jbe
adc
or
xchg
out
and
inc
lcall
adc
mov
movsb
std
mov
rorb
xchg
push
enter
fdivr
xchg
hlt
xchg
scas
dec
in
pusha
sbb
push
jl
dec
pop
mov
lcall
adc
setbe
or
movsl
pop
loopne
in
ret
cmp
addr16
mov
das
dec
enter
and
mov
mov
mov
pop
sbb
sarl
push
imulb
stc
and
psllw
mov
xor
rcrl
shlb
loopne
mov
mov
pop
iret
cmovp
mov
outsl
xchg
movsl
push
ss
hlt
and
imul
cmc
fisubrl
pop
inc
sti
xchg
xor
xchg
test
movsl
jno
push
pop
add
push
icebp
push
fiaddl
inc
add
inc
in
push
adc
dec
push
sbb
aad
sub
xchg
sbb
or
mov
stos
fndisi(8087
or
and
fs
shll
jbe
imul
push
dec
stos
add
cmpsl
cs
mov
ret
push
ja
scas
pop
fsubrl
js
sbb
aam
push
outsb
pusha
xlat
sbb
aas
dec
sahf
orb
add
mov
mov
push
push
sbb
cmp
jmp
cmpsl
adc
jne
sub
scas
icebp
ds
xchg
mov
fcmovbe
out
or
cmp
add
inc
orl
arpl
sbb
inc
cwtl
pop
push
mov
jne
stos
cmp
cmp
repz
push
mov
notb
sti
jmp
insl
into
adc
repnz
js
sahf
daa
mov
scas
push
xchg
dec
xchg
add
js
test
mov
add
imul
jnp
ss
leave
mov
fildll
push
xchg
adc
es
xor
adcb
dec
mov
mov
aad
test
jb
or
les
xor
loop
pop
stos
pop
rol
pop
mov
imul
dec
push
mov
ds
lret
jae
loope
arpl
xlat
mov
inc
fdivrs
scas
pop
jl
test
pop
inc
sub
mov
loop
mov
dec
lret
dec
and
cs
xor
mov
mov
outsb
jae
add
lds
test
cltd
scas
xchg
shll
jle
adc
filds
scas
out
xor
dec
sub
lds
xor
push
xchg
sti
not
rcl
xchg
add
xchg
mov
ds
movsl
addr16
xchg
sub
pop
jmp
and
jne
stos
jno
fcompl
adc
in
lahf
inc
mov
addr16
sub
mov
inc
es
pop
call
insl
les
hlt
daa
popf
sub
add
adc
cmp
dec
in
decb
mov
fisttpl
jl
or
add
stc
mov
int3
das
cmp
mov
sahf
xor
xor
sub
mov
pop
movsl
xchg
dec
inc
xchg
sti
movsb
or
in
nop
or
std
push
jle
push
test
dec
jae
push
fwait
push
mov
cs
sub
inc
jmp
jae
jne
dec
out
sbb
cmp
mov
cli
xchg
test
sar
setl
fidivrl
cmp
rcrl
pop
dec
xchg
loop
push
lock
push
fcomi
inc
xchg
daa
pop
xorl
call
gs
jmp
idivl
sbb
das
out
mov
hlt
cld
or
sbb
aas
jmp
mov
add
movsb
in
fs
gs
pop
movsb
in
mov
shlb
iret
loop
xor
cmp
lds
cmp
push
adc
out
adcl
adc
pushf
int
fs
insl
out
cmp
push
syscall
addr16
decl
addr16
in
clc
and
repnz
ss
xchg
adc
repnz
add
dec
loop
in
mov
clc
and
cmp
sarb
add
or
cltd
sub
inc
dec
das
push
mov
adc
outsb
mov
and
aas
outsb
in
xchg
mov
xor
mov
pop
subl
clc
es
ds
lcall
cmp
sub
lea
lds
out
inc
jecxz
lret
mov
insl
cmp
inc
dec
pushf
imul
xor
lcall
cmpsl
mov
nop
cmp
sbb
dec
clc
or
pop
ds
inc
adc
sub
push
icebp
xor
mov
aaa
js
sub
dec
jno
jge
dec
das
insb
lret
jecxz
jmp
orl
jmp
test
mov
mov
inc
movsl
jle
cli
mov
jecxz
inc
ret
mov
xor
shld
push
push
pop
test
insb
adc
jp
ja
lods
in
push
or
call
or
movsl
dec
lds
cmpsl
pop
add
mov
mov
fnstsw
sub
xor
addr16
icebp
popf
xlat
push
ds
dec
xor
fsubr
jmp
xchg
test
push
mov
lahf
push
sub
inc
mul
sti
jecxz
pushf
repz
mov
cmpsl
mull
sbb
push
mov
lods
popf
cmp
fdivs
hlt
and
mov
mov
push
mov
or
or
dec
sub
and
roll
inc
inc
sbb
mov
xor
enter
xchg
push
push
ja
xor
std
sti
mov
jbe
push
mov
pop
xor
xchg
xor
fiadds
mov
rclb
movsl
jg
jne
jge
lar
sub
sub
les
daa
and
jmp
ret
dec
es
jle
ret
sub
lcall
in
mov
movsl
out
cmpsb
sti
pop
fists
cmp
enter
lret
insb
js
xchg
nop
mov
inc
sub
lods
mov
sbb
aaa
adc
push
imul
ficoml
inc
xor
loop
dec
xchg
mov
in
xchg
repnz
aaa
bound
sbb
pop
imul
ss
mov
pusha
xchg
jmp
pop
fsubl
out
je
and
pop
and
dec
gs
push
dec
dec
xor
and
lcall
pop
scas
xor
push
inc
mov
fs
jmp
sub
inc
int3
mov
cmpsl
push
jle
pop
fistps
sub
lret
mulb
add
dec
imul
or
xchg
nop
int3
push
jns
jecxz
lods
es
out
sub
cmp
push
sbb
je
sub
or
inc
test
xchg
jle
lahf
dec
leave
sub
imul
and
pop
push
sub
clc
mov
jg
ret
push
jnp
jg
jb
dec
jo
popf
clc
arpl
mov
push
xor
sbb
push
movsl
cmp
push
xchg
cmpsl
cmp
fwait
push
stc
push
mov
xchg
add
inc
filds
cmp
or
cmp
and
pop
data16
jne
push
pop
stos
add
fstpt
sbb
pop
mov
out
mov
iret
and
loopne
dec
jno
cmp
cmp
jge
mov
jbe
mov
cwtl
shlb
out
push
inc
push
push
mov
dec
mov
fstpl
inc
cmp
sub
jbe
rcll
mov
push
and
xchg
stos
cmpsb
repz
pop
and
fwait
popl
inc
sbb
xor
stc
dec
sarl
pop
xlat
mov
mov
jecxz
adc
lahf
inc
and
dec
xchg
add
cs
add
icebp
mov
jb
cmp
jns
fldcw
aaa
jle
inc
mov
ljmp
imul
aad
and
iret
sub
inc
or
pushf
cmpsl
or
push
sbb
iret
jmp
or
sub
pushf
loop
lock
push
jg
fiaddl
je
lea
xor
sub
mov
fdivrl
scas
sub
cltd
cmpsw
push
ss
mov
lock
inc
adc
les
iret
mov
mov
sub
fistl
clc
push
cmp
sbb
xchg
push
loopne
add
lcall
push
pop
cmc
mov
call
test
sbb
mov
pop
push
cwtl
sub
imul
sahf
push
sub
aaa
jg
jp
cwtl
dec
mov
cmp
push
jb
and
es
and
inc
enter
jne
outsl
mov
mov
inc
shl
add
mov
dec
add
cli
sub
jo
das
mov
lret
ret
mov
loopne
sbb
loopne
and
clc
xchg
repnz
les
cmp
outsl
js
mov
jle
pop
lods
fdivrs
sub
lahf
xchg
popf
in
mov
fadds
push
aad
fs
into
jp
aas
or
xor
pop
popa
aaa
jbe
pusha
out
cmp
xlat
push
sbb
sub
xor
mov
xchg
xor
sbb
cmpsb
push
jle
add
push
push
and
dec
hlt
mov
sub
je
ret
test
in
cmpsb
jmp
push
push
xchg
out
push
mov
lahf
push
sbb
aas
or
cltd
or
stos
pop
mov
inc
sbb
adc
xchg
mov
cmpsl
rclb
cmp
push
out
cmp
call
call
xor
sets
mov
pop
cmp
pushl
jne
sbbl
inc
cld
mov
mov
mov
arpl
mov
push
sbb
rcrl
sub
add
imul
sub
mov
cmc
mov
jnp
xchg
jg
mov
into
js
out
cmc
arpl
add
stos
mov
mov
stos
lds
outsb
adc
dec
std
jno
pop
aaa
lret
push
decl
rcl
dec
xchg
ret
ds
sarl
std
arpl
and
call
pop
push
call
scas
ja
aad
jmp
inc
mov
inc
and
nop
rclb
inc
jl
out
push
inc
int
inc
loope
fstps
out
daa
mov
dec
andl
mov
or
jae
jge
mov
sbb
int3
dec
fildll
lock
dec
add
inc
adc
push
adc
xchg
popf
cmp
outsl
aam
cli
and
mov
out
icebp
lret
dec
add
xlat
and
outsb
stos
lods
jne
mov
mov
xorl
fwait
daa
inc
shl
fs
sbb
mov
xchg
testl
sbb
cmp
or
add
mov
insb
sbb
sti
inc
xchg
cmp
jmp
adc
movsb
cmc
mov
fwait
add
es
mov
js
ss
xchg
leave
imul
insb
adc
dec
loope
cltd
loop
add
imul
jno
imul
movsl
push
pop
and
clc
loope
popa
lods
cmp
iret
aas
fisttps
xchg
inc
mov
insl
out
cmpsb
jge
xor
or
das
mov
sahf
enter
pop
pop
das
pop
gs
adc
sahf
mov
and
push
mov
add
lock
mov
jnp
mov
das
idivl
out
lock
adc
testb
or
sub
mov
mov
pop
jecxz
scas
outsl
orb
dec
xchg
sbb
fnstcw
idiv
push
xchg
roll
mov
rolb
imul
xchg
inc
in
sahf
mov
sub
in
jbe
fisubrl
cmp
sub
in
push
jo
and
jo
push
adc
inc
dec
sub
fs
cli
dec
push
inc
pop
or
movsl
mov
and
and
jmp
ret
enter
in
ret
sub
popw
test
repz
dec
xchg
or
mov
mov
fldl
hlt
and
out
icebp
test
rcrl
xor
dec
mov
mov
gs
js
jge
push
mov
jno
outsl
adc
xor
adc
dec
add
outsl
mov
adc
inc
sarb
out
push
dec
and
hlt
mov
mov
in
mov
xor
cmp
arpl
push
or
ljmp
je
sub
jle
and
pusha
idivb
xchg
adcb
imul
and
fdivrs
cltd
cltd
aam
mov
imul
hlt
into
pop
rcrl
and
insl
mov
xchg
inc
aad
icebp
lea
cmpb
sbb
cld
outsl
or
leave
dec
ja
cmpsl
xchg
fdivl
imul
stc
sub
and
sub
ljmp
into
sbb
sub
dec
int
sarl
xor
jmp
mov
sbb
aaa
push
in
shr
cs
call
mov
add
xchg
add
neg
dec
or
cmp
xchg
insb
mov
lret
xchg
adc
js
fdivs
out
fcoml
push
les
jb
hlt
aad
out
orb
jne
xchg
fst
out
push
out
jo
xor
lds
es
arpl
pop
or
cmp
out
or
cltd
out
push
in
mov
pop
mov
mov
orb
xchg
cwtl
bound
imul
aas
cs
inc
out
ljmp
mov
inc
add
popw
fsubr
inc
mov
test
mov
mov
ja
imul
hlt
mov
adc
ret
xchg
popa
sub
xorb
loopne
sub
insl
dec
push
add
sbbb
jo
fidivrs
xlat
xchg
push
jmp
addr16
add
cli
test
mov
jnp
addr16
loop
repz
testl
pop
das
xor
inc
dec
outsb
mov
scas
mov
pop
pop
mov
and
aad
cld
cmp
sub
lods
xlat
sar
mov
mov
cmp
push
and
push
add
jp
and
ret
in
mov
adc
add
mov
dec
pop
lret
mov
sbb
jae
shrb
mov
inc
test
dec
repnz
ja
pop
out
les
sub
xchg
push
popf
ljmp
mov
shrb
mov
out
jl
fisubl
sub
sahf
in
repnz
dec
out
adc
fsts
pop
sub
dec
stc
inc
out
imul
cld
outsl
cmpsl
rorl
or
mov
add
dec
shlb
adc
bound
aas
sbb
jae
fsubrp
add
jae
pop
popf
xchg
mov
popa
test
mov
aas
and
or
adc
cmp
jb
push
push
in
pop
xchg
jge
insl
scas
add
lahf
scas
fmulp
or
leave
popl
mov
add
inc
loope
jl
stos
andl
inc
cmpsb
xchg
out
and
ljmp
inc
aam
shll
fcmovne
out
xor
cmp
fldenv
ds
mov
adc
sbb
sbb
js
xor
adc
negb
jne
lret
lds
stc
idiv
daa
jb
dec
and
cmp
xor
and
roll
add
xor
ret
pop
cmpsl
stos
in
inc
jne
sub
scas
or
dec
andl
jnp
xor
ss
ja
cmp
mov
mov
scas
jns
rcrl
adc
mov
stos
cltd
pop
mov
adc
fwait
jle
pop
push
mov
jl
and
test
dec
jmp
jge
loop
loope
loope
xor
dec
mov
data16
push
push
push
andb
inc
std
jbe
mov
mov
mov
push
push
or
mov
cmp
fwait
sbb
mov
cmp
xchg
mov
push
pop
mov
mov
mov
stos
ss
and
or
pop
pop
ljmp
arpl
loopne
ss
sbb
xor
inc
sbb
adc
andb
rolb
das
dec
repz
lret
and
mov
push
adc
sub
sbb
stc
push
cmp
push
cmpl
ljmp
int3
jl
lcall
test
in
xchg
jecxz
movsb
xchg
inc
leave
mov
sarl
pop
fcompl
add
inc
xor
xchg
rcl
jo
data16
push
aas
out
mov
inc
fcmove
ret
inc
mov
pushf
jl
out
push
sub
mov
dec
sbb
in
jno
lods
and
mov
fs
sbb
loope
and
or
sub
popa
sub
mov
inc
dec
adc
ret
lea
mov
aas
les
jnp
cmp
adc
push
cmp
daa
fnsave
sub
sbb
test
imul
loop
rol
addb
xchg
pop
jne
stos
jmp
inc
in
push
pop
adc
dec
push
dec
int3
mov
loope
icebp
xchg
push
mov
cmp
mov
dec
stc
and
sbb
pop
xchg
aaa
cwtl
pop
push
fiadds
cmp
dec
stc
jo
and
mov
ret
and
sub
sbb
sti
mov
cmp
aaa
xchg
or
lcall
ljmp
cmpsl
cld
or
loopne
bound
int
imul
cmp
jno
jle
cltd
out
push
bound
xchg
clc
fcompl
popf
pop
mov
cmp
jp
pushw
jle
sub
pop
hlt
cmp
in
jne
sbb
or
and
mov
fcompl
aas
in
ficoms
fsubl
adc
push
xchg
add
inc
je
aad
out
mov
jg
push
add
and
push
sahf
or
sahf
ss
cli
mov
jg
jl
call
int3
std
xor
movsb
mov
and
scas
sub
and
in
pop
arpl
int3
rorb
mov
add
popl
push
std
inc
sub
mov
stos
lods
xchg
mov
pop
dec
xorl
aaa
in
push
mov
cmp
mov
add
in
in
sbb
out
loopne
xor
mov
mov
add
dec
scas
sub
test
jp
in
cmp
pop
mov
mov
xor
lret
push
adc
daa
addr16
rorb
flds
movl
fs
ficompl
mov
mov
lret
icebp
fidivs
mov
inc
mov
aad
fs
aaa
scas
out
test
push
xorl
add
jno
xchg
adc
mov
and
push
repnz
pop
sbb
add
sahf
pop
iret
clc
jp
testl
dec
push
dec
adcb
xchg
das
xchg
mov
cmpsl
gs
jne
in
add
aaa
out
jnp
xor
cmc
cltd
cmp
ror
lret
mov
cmp
fstpt
sub
imul
inc
mov
arpl
cmpsl
das
xor
mov
mov
xor
je
rcrl
mov
loope
test
dec
jg
sbb
cltd
cmc
mov
push
xor
mov
roll
fwait
stos
mov
mov
and
jl
ja
fwait
push
int
cmpsb
pop
mov
mov
test
push
mov
pop
jo
dec
mov
push
loope
dec
scas
xor
cld
jecxz
inc
and
aam
mov
mov
sub
jne
adc
sub
sbb
js
subb
sub
jnp
adc
in
sub
or
inc
std
mov
aaa
enter
dec
sbb
das
enter
test
pop
pusha
or
xchg
rol
pop
shlb
clc
ss
xor
pop
movsb
xchg
xchg
jnp
lods
cmp
push
insb
divl
mov
push
lahf
pop
rcrb
scas
sbb
jmp
dec
xchg
gs
pminsw
cmp
or
outsl
pop
mov
xor
lods
cmp
pop
rolb
jno
inc
lahf
sbbl
repnz
mov
fcmovne
pmullw
push
leavew
stos
jmp
xor
push
and
stos
mov
in
push
call
cmp
ja
add
addb
in
shll
xor
mov
xchg
movsb
cmp
dec
or
mov
xor
nop
push
int3
mov
push
jnp
jbe
dec
out
fdivrp
sbb
sub
idivb
arpl
inc
mov
lret
into
fyl2xp1
sub
insb
sub
mov
pop
lcall
xchg
sub
fcmovb
aad
int3
gs
mov
cwtl
add
inc
sbb
adc
xor
into
pop
mov
call
repz
pop
jmpw
xchg
adc
or
jo
inc
aam
ret
call
cmpsl
scas
or
fcmovnbe
add
sub
cmp
xlat
ficompl
mov
shll
and
cmc
xchg
movsl
pop
push
add
into
daa
push
mov
xor
adc
dec
xor
sbb
sbb
pop
xchg
cmpsb
dec
and
shll
sub
addr16
adc
pop
int3
jbe
sub
sbb
decb
and
jl
mov
pop
inc
mov
lea
push
xchg
sub
mov
jp
mov
ret
pop
inc
int
push
test
leave
leave
pusha
or
rcll
insl
repnz
inc
pop
sub
sbb
out
cli
arpl
mov
test
xor
fldcw
lea
outsb
lods
push
adc
or
push
push
mov
sahf
shll
in
pop
pop
adc
daa
lret
addr16
enter
mov
sbb
add
loopne
cmpsl
les
scas
sub
rorl
test
dec
push
fwait
push
mov
mov
icebp
mov
jae
iret
sahf
adc
and
xor
outsl
or
mov
insl
inc
mov
xchg
pop
adc
loopne
jb
jg
lods
lahf
lcall
rsm
mov
in
dec
orb
and
sti
xchg
cltd
daa
sahf
xchg
rcrl
sub
iret
fs
mov
jae
pusha
test
add
mov
adc
ja
sub
rcll
inc
jle
shrd
sub
ss
fdivrl
shrl
sub
and
dec
cmp
add
clc
jp
in
test
or
adc
rorb
cli
mov
mov
sbb
jno
mull
adc
adc
sub
mov
sub
jbe
orb
fdivrl
lret
dec
lods
xchg
incl
push
lds
test
push
mov
and
out
and
imul
mov
aad
jg
movsl
std
loop
fdivrp
cli
stos
xchg
pop
sub
fdivs
roll
cmp
adc
fisttps
mov
mov
inc
cmp
mov
mov
mov
pop
in
cmpsl
in
add
inc
inc
cmp
mov
fpatan
mov
shrb
fdivp
xor
push
sub
sub
shrb
lret
inc
lret
jno
xor
test
cmp
icebp
ds
pop
addb
add
mov
div
sbb
mov
mov
cli
pop
clc
stos
cmp
js
call
cmp
mov
outsl
cmp
pop
rorl
outsb
stos
data16
dec
aas
push
sarl
mov
jno
pinsrw
repz
nop/reserved
push
addr16
mov
inc
and
decl
mov
push
out
lock
mov
lods
popa
sbb
subl
pop
mov
mov
sahf
movsl
insl
lods
xor
dec
pop
enter
jg
into
adc
jl
sub
faddl
insl
testb
stos
cltd
cmp
jnp
mov
rolb
in
pop
push
fyl2x
mov
adc
push
testl
jne
push
into
dec
mov
or
pop
in
xchg
pushf
les
fbld
sub
and
jp
std
dec
jg
lcall
stos
jl
jbe
sbb
jecxz
je
mov
push
adc
push
pop
test
and
inc
cwtl
rolb
jb
mov
or
jl
mov
rcrl
dec
adc
fsubl
mov
sub
xchg
jg
mov
lcall
fwait
dec
movsl
add
push
inc
inc
jno
push
dec
xchg
lods
dec
jnp
push
pushf
pop
pop
sbb
sub
popf
dec
cmp
sbb
xor
sbb
das
lcall
push
adc
jmp
mov
and
push
pop
les
mov
jnp
aaa
push
pop
mov
mov
or
jge
ss
fimull
pop
rorb
inc
dec
popf
lea
cmp
stc
mov
adc
std
or
cwtl
shll
dec
loope
fcmovne
gs
cwtl
mov
lret
lret
jns
mov
ljmp
push
enter
int
cmp
test
and
fsubs
out
fidivrl
jg
xchg
xor
rep
hlt
jl
das
rorb
jno
sbb
mov
das
inc
sub
push
xor
xchg
in
ficompl
dec
pop
adc
cmp
test
cld
adc
adc
sbb
mov
jecxz
mov
xchg
mov
loopne
jge
shrl
movsl
shlb
inc
and
or
xchg
sbbb
cwtl
cli
or
jns
nop
sahf
cli
outsb
bound
push
add
in
xor
inc
addr16
mov
repz
mov
gs
and
xchg
mov
repnz
cs
gs
loope
cmp
ret
mov
es
daa
jae
movsb
mov
adc
leave
sbbl
xchg
test
movsb
mov
in
xchg
xor
outsl
push
sbb
jle
jle
sbb
mov
std
insb
push
push
mov
into
testl
das
test
inc
ret
aas
aas
xchg
jnp
mov
mov
fldenv
add
mov
sub
popa
or
cmc
jbe
decb
mov
mov
mov
test
xchg
pop
imul
lea
pop
jb
test
lock
pop
stc
add
jmp
push
sahf
jo
addb
gs
mov
dec
xorl
test
push
xchg
mov
fidivrs
adc
jmp
test
mov
jno
cmp
mov
scas
fs
cmc
dec
push
xor
pop
cmp
mov
idivb
int
dec
pop
xchg
pop
or
lahf
push
rcrb
test
rcr
dec
jmp
ret
or
aaa
lea
std
fscale
jle
fcomps
repnz
inc
lahf
or
dec
xchg
lcall
mov
or
cwtl
lods
cmp
push
push
decb
out
arpl
insb
mov
insb
mov
movswl
push
mov
leave
inc
xor
es
sbb
ret
add
push
rorl
clc
dec
sbb
push
xchg
sub
jno
dec
pop
mov
or
adcb
popa
or
ljmp
mov
bound
xor
pop
movsl
mov
sub
adc
dec
cmpsb
xchg
scas
in
and
out
es
push
mov
dec
jmp
push
jo
lcall
and
ror
je
xchg
ret
test
dec
pop
xor
lret
mov
js
bound
fsub
push
std
xchg
fldt
cmp
daa
out
sbb
jbe
ret
jne
add
push
or
ret
adc
subb
or
and
jge
pop
jmp
inc
add
xchg
ret
push
clc
xor
js
lock
leave
mov
cli
fbstp
aaa
pop
or
es
xchg
lock
inc
sbb
jge
roll
or
inc
bnd
jbe
adc
xchg
pop
aad
enter
cmpsb
out
lds
push
cmp
inc
mov
addr16
xchg
or
mov
mov
pop
es
lcall
fs
and
repz
sub
imul
or
cli
aaa
add
cltd
inc
inc
iret
dec
mov
leave
mov
fcomp
lahf
js
mov
lods
addr16
sub
cltd
xchg
in
mov
xchg
lods
ret
mov
movsb
cmc
mov
adc
xor
sub
fisubrl
mov
or
adc
adc
sub
adc
imul
cli
cmp
add
in
pop
jnp,pt
sbb
inc
xorl
mov
push
mov
lods
mov
mov
mov
dec
jmp
sbb
jb
jbe
mov
lret
mov
popa
pop
fdivrl
or
lahf
int
xchg
enter
or
add
mov
inc
mov
das
lahf
imull
andb
fsubs
adc
jbe
imul
in
xor
in
push
pop
push
dec
and
ja
shll
sub
and
cmp
icebp
cmp
inc
sub
cmp
push
xor
and
imul
pop
push
lods
or
adc
fsts
adc
mov
and
cmpl
loope
lods
mov
shll
pop
lret
jae
fistl
add
adc
xor
push
or
std
xor
movsb
lahf
mov
icebp
lods
xor
dec
inc
stos
lods
jbe
mov
mov
dec
cmp
addb
iret
adc
push
cmp
jle
cmp
or
xor
and
pop
les
cli
add
aaa
addl
push
cmp
or
sub
xchg
xor
ss
loop
push
mov
int
in
adc
repz
lock
add
dec
cmp
flds
adc
fidivl
dec
cmp
cltd
aam
mov
data16
add
sub
sahf
sbb
scas
lcall
divl
push
movsb
notb
mov
int
push
loopne
adc
add
mov
sub
in
xchg
jmp
mov
insl
out
and
gs
inc
inc
mov
jbe
sbb
out
xchg
sbb
jge
adc
add
insl
fimuls
sub
mov
mov
popl
cmp
xor
negl
adc
jp
cs
cmp
xchg
xchg
mov
dec
int
fimull
or
ret
movsl
xor
and
add
insl
scas
sub
dec
cmp
pop
enter
mov
add
push
mov
jae
jo
je
fsubl
jbe
cli
push
enter
es
push
lret
jne
push
lahf
data16
jnp
push
clc
movsl
or
pop
movsb
jl
out
jl
or
clc
mov
cld
shll
stc
mov
lahf
aam
mov
cmp
ss
in
add
addr16
ljmp
jno
xor
and
mov
and
rcrb
cmpsb
adc
push
fiadds
cmpsb
lret
mov
sbb
mov
cltd
lock
xor
divl
cwtl
in
movsb
loopne
lea
jno
jmp
std
cmpsb
repz
cmp
mov
mov
sub
xchg
push
loop
mov
cmp
aaa
mov
jmp
imul
imul
int
data16
sbbb
sub
push
insl
xchg
and
xor
cmpsl
push
adc
pop
inc
sbb
inc
imul
test
xchg
jne
jmp
aam
nop
and
mov
dec
push
js
adc
fldcw
out
rcll
push
sub
jae
inc
push
outsl
hlt
xor
testl
sub
adc
lcall
cmp
daa
mov
inc
add
jns
loope
cmpsl
and
pop
std
hlt
fdivr
xchg
cmpl
cmp
cmc
ret
or
mov
lcall
and
in
and
outsl
cmp
inc
mov
jl
mov
mov
or
adc
decb
push
and
xchg
je
jmp
push
jb
lods
ss
in
mov
mov
outsb
mov
jnp
insl
clc
cmc
cld
xor
jmp
pushf
rolb
scas
dec
jb
cmp
es
jno
cmp
mov
xchg
xchg
push
inc
mov
ret
push
arpl
nop
push
adc
inc
cmpb
mov
and
out
xlat
xchg
clc
push
lds
lods
pop
xlat
pop
bound
add
cs
f2xm1
into
add
and
xchg
sbb
pushf
cmpsl
jns
imul
or
xor
cs
lods
dec
cld
stos
sub
jb
mov
cmp
and
rcr
adc
aas
push
mov
gs
nop
dec
fcmovb
mov
outsb
cld
adc
sbb
and
mov
in
mov
xor
cmp
dec
repnz
shrb
scas
orl
mov
cmp
call
sub
xchg
cmpb
lds
fistpl
into
pushf
imul
rorb
add
leave
repz
push
cltd
pop
adc
add
mov
sar
call
xchg
mov
cwtl
jno
imul
sub
icebp
mov
sbb
pop
sub
xchg
hlt
sub
filds
xchg
mov
daa
pop
aas
lcall
adc
cmp
insb
testl
bswap
test
mov
lea
lret
mov
out
push
pop
sbb
je
xchg
jmp
outsl
mov
cs
sub
addr16
and
xor
cmpsb
test
xor
mov
sbb
and
mov
test
pusha
mov
pop
pop
and
out
or
loope
push
mov
shl
add
xlat
fistpll
xchg
push
cld
mov
mov
fsub
mov
test
push
pop
mov
cmpsb
pop
dec
repnz
push
jmp
xchg
and
dec
add
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
