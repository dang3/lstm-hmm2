mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
int3
inc
inc
test
inc
and
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
push
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
or
popf
push
jle
add
fldl
ljmp
test
int3
push
jmp
pop
mov
adc
test
sbb
mov
mov
test
ret
stos
jge
out
pop
xor
es
jne
out
loop
mov
pop
das
out
cli
xor
inc
fisttps
cltd
xchg
push
push
add
fs
dec
adc
out
push
fsubrs
xchg
add
push
rcrl
out
add
push
popa
mov
jbe
adc
cmp
sbb
jmp
and
idivl
fadds
into
pusha
pop
lret
mov
xor
leave
stc
xor
cvtps2pd
pop
push
pop
addr16
jbe
sbbb
rcll
lods
mov
es
push
cmp
add
rolb
fistl
lret
xchg
fisttpl
sub
add
sahf
sub
mov
idivl
inc
xchg
add
das
repz
test
jb
mov
or
test
push
pop
in
lods
stos
dec
mov
xor
and
das
xchg
or
addr16
sahf
inc
pop
out
xor
sbb
jno
inc
test
popf
icebp
sbb
mov
jns
adc
mov
dec
cmp
lods
jle
insb
lcall
inc
xchg
sbb
sub
sbb
shlb
fcoml
mov
mov
jg
inc
mov
inc
shr
inc
push
lods
loopnew
xor
popf
ss
mov
dec
pop
sub
aad
ljmp
fs
daa
in
stos
xchg
mov
shl
cmp
hlt
movsl
add
xor
js
jmp
xor
push
push
ficompl
sub
lret
imul
push
mov
xchg
xchg
add
leave
dec
out
gs
xor
and
ret
pop
jbe
sbb
jl
pop
lods
das
repnz
int3
in
and
xchg
push
shrb
mov
and
aad
jge
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
or
popf
push
jle
add
fldl
ljmp
test
int3
push
jmp
pop
mov
adc
test
sbb
mov
mov
test
ret
stos
jge
out
pop
xor
es
jne
out
loop
mov
pop
das
out
cli
xor
inc
fisttps
cltd
xchg
push
push
add
fs
dec
adc
out
push
fsubrs
xchg
add
push
rcrl
out
add
push
popa
mov
jbe
adc
cmp
sbb
jmp
and
idivl
fadds
into
pusha
pop
lret
mov
xor
leave
stc
xor
cvtps2pd
pop
push
pop
addr16
jbe
sbbb
rcll
lods
mov
es
push
cmp
add
rolb
.byte
xchg
mov
inc
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
or
popf
push
jle
add
fldl
ljmp
test
int3
push
jmp
pop
mov
adc
test
sbb
mov
mov
test
ret
stos
jge
out
pop
xor
es
jne
out
loop
mov
pop
das
out
cli
xor
inc
fisttps
cltd
xchg
push
push
add
fs
dec
adc
out
push
fsubrs
xchg
add
push
rcrl
out
add
push
popa
mov
jbe
adc
cmp
sbb
jmp
and
idivl
fadds
into
pusha
pop
lret
mov
xor
leave
stc
xor
cvtps2pd
pop
push
pop
addr16
jbe
sbbb
rcll
lods
mov
es
push
cmp
add
rolb
fistl
lret
xchg
fisttpl
sub
add
sahf
sub
mov
idivl
inc
xchg
add
das
repz
test
jb
mov
or
test
push
pop
in
lods
stos
dec
mov
xor
and
das
xchg
or
addr16
sahf
inc
pop
out
xor
sbb
jno
inc
test
popf
icebp
sbb
mov
jns
adc
mov
dec
cmp
lods
jle
insb
lcall
inc
xchg
sbb
sub
sbb
shlb
fcoml
mov
mov
jg
inc
mov
inc
shr
inc
push
lods
loopnew
xor
popf
ss
mov
dec
pop
sub
aad
ljmp
fs
daa
in
stos
xchg
mov
shl
cmp
hlt
movsl
add
xor
js
jmp
xor
push
push
ficompl
sub
lret
imul
push
mov
xchg
xchg
add
leave
dec
out
gs
xor
and
ret
pop
jbe
sbb
jl
pop
lods
das
repnz
int3
in
and
xchg
push
shrb
mov
and
aad
jge
or
jne
jnp
xchg
dec
cld
or
xchg
daa
lods
int
and
pop
mov
xchg
mov
push
fwait
and
xchg
scas
xchg
jne
xchg
or
leave
ret
sbb
lret
mov
mov
jo
push
test
xchg
out
mov
inc
repnz
pop
fnstcw
mov
rorb
adc
out
sub
out
xlat
imul
insb
push
add
loop
hlt
push
fsubp
dec
jb
imul
cwtl
leave
jae
mov
loop
and
rolb
inc
mov
push
popf
cmc
inc
loope
mov
cs
xchg
xchg
je
add
sub
jg
mov
enter
or
popa
not
inc
dec
daa
andb
xor
and
negb
decb
inc
in
movsb
psubusb
adc
xor
push
mov
inc
jg
movsl
push
out
add
mov
cmp
testl
mov
divl
ljmp
ljmp
dec
push
sbb
push
mov
in
rcr
test
imulb
scas
inc
aad
incb
push
mov
popl
ret
aam
or
mov
mov
mov
xchg
push
daa
adc
jmp
xor
adc
ret
jmp
das
lock
lret
fcmovbe
or
mov
xchg
cmp
mov
sub
cmp
nop
cmp
jl
inc
xchg
and
mov
sub
adc
mov
push
push
idivb
add
aad
aas
clc
out
mov
push
push
mov
xlat
loopne
aaa
mov
cmpsb
inc
jge
cmp
push
aad
stc
jb
inc
stc
cltd
sub
enter
rclb
sahf
repnz
cwtl
and
sarl
ds
adc
loopne
sbb
xchg
adc
xlat
shr
add
mov
das
jbe
scas
data16
add
add
inc
jp
pop
int3
add
js
cli
xor
push
fwait
push
push
popfw
inc
cmpsl
lret
mov
sbb
ja
add
lea
xchg
pop
jae
inc
in
push
jl
in
lcall
iret
arpl
xchg
pop
sub
add
nop
xbegin
add
test
mov
push
add
sub
test
dec
pop
fwait
xchg
insb
sbb
stc
sahf
scas
lock
ljmp
xchg
mov
sub
mov
inc
pop
in
lods
insb
or
movsl
lcall
jp
cmpsl
test
pop
lahf
sbb
jg
mov
mov
cmpl
push
or
or
pusha
xorl
mov
dec
test
cmpsl
adc
ja
or
push
lret
sbb
mov
insl
add
mov
outsb
jge
fadd
sbb
pop
scas
stos
pop
jmp
cmp
pop
sub
jb
pop
scas
xor
cmp
pop
fisttpl
add
fisttps
xchg
or
adc
aad
test
push
mov
inc
sub
mov
dec
fcompl
mov
cld
fistps
xor
push
add
inc
out
lret
xor
mov
sti
sbb
hlt
xor
xchg
xchg
ss
push
or
and
fisubrl
fildll
and
inc
jae
xor
jmp
jle
xchg
test
clc
push
lds
lock
mov
mov
lret
movsb
arpl
fwait
mov
mov
mov
fisttpl
repnz
aaa
int
fwait
inc
fmuls
je
out
lcall
sub
popa
mov
scas
fcmovne
pop
and
or
push
push
cmp
dec
jno
mov
ret
mov
mov
fcmovnbe
xor
xchg
or
lret
sbb
neg
call
insl
lds
into
pop
lcall
add
mov
cwtl
out
push
cld
add
insb
mov
fadds
xor
xchg
jae
cmc
stos
fsubrs
mov
iret
sbb
out
fidivrl
add
mov
push
xor
addr16
pop
bound
push
cmpsl
inc
movsl
cmp
xor
or
cmp
inc
movsb
dec
out
int3
pop
out
mov
in
sub
add
rcr
cltd
adc
aas
call
pushl
or
mov
pop
push
and
icebp
push
adc
lcall
add
pop
and
popf
lock
rorl
cwtl
cwtl
in
icebp
jne
and
push
mov
add
bound
rcrb
xchg
fwait
pushf
inc
mov
inc
pushf
sbb
out
fildll
aad
pop
scas
dec
jge
std
in
loopne
pop
mov
jg
xorb
lcall
xorb
mov
mov
shll
pop
and
and
scas
push
rol
mov
mov
ja
xor
mov
gs
cmp
push
jns
xchg
nop
repz
mov
or
leave
movsb
ja
cmpsl
loop
nop
mov
adc
sub
rdtsc
cmpsb
lret
lret
out
mov
jne
push
jge
mov
jmp
sbb
xchg
pop
pop
xchg
add
mov
pop
inc
lods
adc
rcll
adc
call
cmp
xor
sub
enter
pop
aad
sbb
popf
cmp
daa
inc
push
lcall
jp
repnz
iret
out
inc
jo
jg
rclb
sbb
pop
pop
mov
inc
xor
xor
jg
push
testl
adc
push
mov
adc
cmpsb
mov
sub
movsl
pop
push
pop
sarl
gs
leave
lahf
mul
sbb
or
pop
fidivs
ljmp
les
and
fnstcw
dec
push
in
jnp
movsl
pop
movsl
test
sahf
orb
add
sub
inc
lods
sbb
fdivrp
sub
dec
test
sbb
or
cmp
fs
inc
mov
lret
pop
in
loop
cmc
ror
data16
leave
in
add
jle
adc
orb
and
inc
jl
or
lret
test
mov
cmp
add
dec
fisubl
rcrl
int3
sub
xor
stos
pop
int
mov
jge
out
and
jle
sbb
jns
sbb
sbb
xor
das
push
push
in
inc
std
lret
inc
mov
popa
mov
imul
bound
inc
push
jmp
stos
ret
add
lret
fs
cli
xchg
add
rorl
sbb
stc
lock
movsb
je
jge
push
andl
notb
loopne
adc
fstpt
xacquire
cltd
xchg
or
cmp
adc
sar
sub
iret
jecxz
dec
and
jae
gs
pop
lods
test
pop
xlat
and
xchg
mov
pop
cmpsl
dec
in
mov
mov
or
mov
repnz
add
jmp
adc
out
mov
and
jae
jmp
xchg
push
jmp
mov
inc
scas
sbb
fwait
mov
ss
jp
xor
rclb
ss
out
pop
lds
fldz
iret
cltd
outsb
pop
es
outsl
mov
cltd
jge
sub
or
mov
sbb
jnp
sbb
into
pop
or
in
cmp
fildl
jae
data16
mov
inc
sbb
push
in
adc
sub
das
sbb
jns
lods
lret
xchg
and
xor
int
fsubs
sub
pop
mov
stos
jg
sbb
push
cmp
or
cmpb
mov
sbb
hlt
jns
jno
xchg
daa
jno
fisttpll
inc
pop
fldenv
adc
in
xor
iret
sarb
call
xor
xor
and
lea
mov
jg
js
adc
inc
gs
pop
inc
testb
and
mov
pop
sub
test
pop
mov
das
lret
or
fstpt
imul
cmpsl
sbb
pop
loop
imul
filds
out
stos
mov
add
sbb
hlt
lock
pushf
sub
inc
repnz
fldenv
lods
dec
sbb
and
stos
daa
rcrb
ja
scas
aad
lock
xor
stc
aad
inc
jp
and
mov
scas
les
nop
jb
inc
jle
sti
pop
mov
and
mov
add
mov
pop
cmp
fimull
scas
out
imul
stc
or
cmp
ret
mov
bound
shlb
repz
xchg
push
shr
loope
out
cmpsb
ficoml
jb
sub
jg
cmpsl
insl
fwait
dec
jecxz
cld
fldcw
dec
xor
sbb
imul
dec
mov
fisttps
jl
dec
jo
cmp
hlt
mov
iret
jae
jle
aas
jnp
mov
jnp
ds
js
das
nop
push
aas
adc
sub
daa
shlb
or
nop
ljmp
jge
jecxz
cmp
or
jmp
fcompl
dec
call
push
and
loopne
push
aad
mov
push
movsl
imul
push
ljmp
divb
lahf
and
pushf
lods
jg
and
scas
mov
out
dec
ljmp
mov
xchg
or
std
test
arpl
dec
rcrb
jne
std
and
push
pushf
cmp
jmp
jl
or
xchg
rcll
pop
popa
sbb
mov
daa
jle
inc
out
sbb
test
cwtl
repz
loop
ret
int3
ret
fidivrs
pusha
das
gs
adc
push
inc
lock
test
xor
cmp
loope
cli
mov
jmp
push
sti
jne
leave
push
outsb
js
out
fisttpl
and
lcall
jne
push
pop
inc
xchg
enter
rcll
push
adc
mov
stc
mov
hlt
and
pop
mov
popa
testl
push
mov
xor
lock
push
dec
mov
xchg
int3
jnp
push
mov
xchg
fbstp
ret
test
jo
mov
ret
jo
mov
sub
xor
xorb
or
mov
stos
addr16
mov
sbb
movsb
movl
aam
mov
mov
mov
cmpsl
cmpsl
sub
mov
xchg
mov
xlat
jl
mov
mov
mov
xchg
loop
test
aad
outsl
daa
jo
mov
insb
cs
call
iret
adc
popa
jecxz
out
mov
aad
in
mov
call
cmp
or
push
push
push
das
lcall
and
pop
adc
shlb
mov
adc
loope
sbb
clc
aaa
into
cmp
push
in
xor
jne
imul
mov
repnz
test
pop
lock
in
sbb
xor
fisubl
std
jmp
loope
mov
cmp
outsb
xorl
in
xchg
out
sub
cli
pop
cmp
xor
cwtl
mov
in
push
or
push
pop
pop
sahf
xchg
out
into
mov
cmp
push
pop
mov
pop
xor
dec
mov
mov
js
mov
in
cmp
cmpsl
and
mov
fbstp
sbb
cwtl
pop
std
cs
and
mov
int
mov
fistl
mov
jge
add
cmc
jmp
add
pop
inc
rorb
xchg
cmpsl
lea
clc
push
neg
mov
xchg
fwait
pop
jo
inc
sub
hlt
repz
inc
jns
or
and
add
mov
jo
mov
jae
dec
lods
add
rclb
jge
inc
xor
int
xor
loope
jge
popa
cs
and
jae
xorl
pop
ds
xor
mov
push
or
push
les
insl
ret
dec
jl
lahf
mov
add
xor
pop
fnstenv
jbe
push
imul
mov
xchg
fs
flds
jb
mov
enter
jmp
mov
jnp
adc
xchg
pop
lods
inc
repz
inc
jmp
and
cwtl
imul
jmp
mov
pop
shll
je
sbb
inc
adc
mov
mov
xlat
and
and
mov
scas
enter
sub
cmp
cmp
imul
sub
movsb
or
and
mov
ja
enter
or
int
mov
popa
stc
jp
mov
out
decb
sub
add
and
aam
sub
pop
dec
pop
mov
mov
js
sub
and
lock
sub
adc
pop
iret
dec
insl
fcoms
ja
jae
xor
rol
and
jns
scas
xchg
or
out
mov
mov
push
sarl
out
and
lcall
xor
lahf
addl
jmp
xor
mov
dec
jae
loopne
in
mov
pop
pop
mov
mov
lods
fsubp
stos
les
loope
lds
dec
jmp
push
aaa
cmpsb
push
aad
adc
outsl
pop
dec
cmpsb
rcrb
add
mov
cmp
ror
sbb
ds
and
enter
out
loop
cltd
mov
ja
divl
setne
das
or
or
inc
ss
out
jg
push
xor
icebp
jle
test
mov
stc
into
mov
out
bound
cs
dec
jge
aam
fldlg2
push
lock
rcrl
outsl
or
mov
loopne
sar
sarb
pop
call
daa
stos
int
in
xlat
popf
mov
cltd
sbb
jne
ds
and
add
add
fwait
enterw
pop
mov
fldenv
push
and
pop
add
adc
or
xor
das
scas
inc
ljmp
cli
push
stos
sub
push
mov
push
daa
ljmp
jp
pusha
push
xor
les
iret
out
add
sub
lods
mov
jecxz
pop
jae
rcll
pop
adc
push
sbb
jg
mov
dec
flds
inc
jmp
rclb
adc
outsl
in
les
mov
test
mov
das
sbb
mov
sti
test
lods
and
xor
cmp
insb
sbb
or
outsb
out
mov
arpl
xchg
std
adc
cltd
rclb
sub
out
jle
push
push
cltd
data16
fisttps
push
push
jnp
push
and
dec
mov
ja
adc
movsl
outsl
jnp
xor
cmp
sbb
adc
int3
cmp
int3
outsb
pop
pop
test
dec
lods
inc
jbe
ja
rolb
sub
mov
cmp
ja
ljmp
pop
lds
addr16
pop
cs
xor
notl
popa
sti
pop
cwtl
mov
push
sbbl
mov
aad
das
and
mov
or
jl
insb
inc
lahf
mov
ja
adc
or
lea
mov
rcrb
mov
sub
sbb
in
lds
jae
mov
jne
adc
xor
dec
jp
xchg
sub
int3
pop
mov
add
sbb
lds
push
mov
and
push
inc
mov
roll
and
pop
push
dec
stos
push
mov
push
xchg
or
outsl
je
sahf
pop
pop
lods
fsts
cli
sbbb
or
push
imul
lea
mov
fmul
mov
cmpsl
ja
sarl
jmp
call
jbe
and
mov
push
int
sbb
frstor
sbb
lahf
or
aas
jne
mov
nop
call
leave
loope
test
shlb
insb
and
dec
es
inc
mov
cmp
aam
lahf
lea
pop
push
daa
push
rcr
cld
scas
mov
fstps
mov
and
fiaddl
push
icebp
and
hlt
cmp
iret
dec
xchg
jl
push
jmp
sbb
jmp
push
inc
mov
cltd
xchg
mov
sahf
lock
or
xor
fs
jp
mov
fsubrs
dec
andl
lcall
and
add
sbb
mov
loopne
push
and
push
sbb
in
loop
ss
jnp
jecxz
cmp
fisttpl
fst
sahf
outsl
xor
xchg
mov
xchg
and
outsb
pop
bound
ret
pop
jp
jbe
jbe
cmc
frstpm(287
pop
stos
sub
or
mov
rcll
mov
pop
or
dec
js
jae
mov
mov
dec
into
lds
inc
xor
jbe
sbb
cmp
les
imul
dec
in
cmpl
push
cld
and
icebp
scas
jbe
shl
pop
mov
repnz
nop
or
and
pop
xor
pop
ret
int3
cmp
xor
cwtl
in
hlt
sbb
jmp
mov
push
shll
sub
inc
xchg
jl
sub
movsb
sub
cmp
aas
jmp
inc
xbegin
push
mov
cld
push
std
lds
roll
bound
or
fsubr
or
sarl
movsb
test
pop
pop
cmpsl
fisubrs
pop
in
sub
sub
mov
sbb
mov
add
mov
add
sub
pop
pop
jae
ja
mov
xchg
adc
rcl
inc
cmpsb
inc
mov
bound
sbb
sbb
mov
ret
mov
or
sub
lret
lcall
gs
xchg
cmpsl
sbb
jg
or
cmpb
fimull
pop
sub
dec
jecxz
sub
dec
sub
aas
int
push
sub
aas
fcoms
hlt
or
cmp
xor
dec
repnz
pop
adc
or
mov
and
bound
mov
and
mov
dec
test
insl
sti
pcmpgtb
mov
or
jb
test
sbb
lods
insb
scas
mov
outsb
xchg
pop
or
andl
fnsave
idivl
inc
sahf
std
int3
fiadds
and
inc
out
mov
cmpsb
fisubrs
gs
pushf
pushl
js
fidivrs
cmp
and
adc
sub
dec
mov
in
push
test
mov
repz
mov
mov
out
inc
sahf
pop
gs
jmp
test
xor
xchg
data16
jb
arpl
bound
ds
in
test
xor
lds
sbb
lea
inc
pop
inc
xor
add
add
jp
xabort
js
add
stos
pop
mov
sub
adc
call
int
je
nop
xor
mov
inc
jb
push
add
and
sbb
lock
in
mov
jae
jns
stos
in
mov
aaa
data16
insb
aas
push
pushf
pop
inc
pop
aad
ljmp
jecxz
sub
sbb
out
shrl
imul
mov
push
dec
sahf
bound
mov
jo
flds
mov
sbb
notb
aad
cmpl
mov
xchg
jmp
hlt
popf
mov
adc
add
fbld
push
pop
push
sahf
rcrb
xchg
xchg
and
les
insb
loopne
sarl
inc
lods
icebp
mov
mov
jg
xor
outsl
dec
inc
mov
jnp
push
out
loop
in
xor
shr
dec
push
xchg
xchg
repz
imulb
and
das
add
lret
or
addr16
movsb
sarl
rorb
cmpsb
loopne
push
lds
aam
outsb
mov
lret
rol
fcomip
xchg
loopne
fiaddl
adc
aas
sub
sub
in
lods
or
je
dec
test
and
shlb
pop
push
call
test
pop
xchg
scas
adc
les
xor
jmp
rcll
call
rolb
or
mov
adc
and
push
push
xchg
xor
mov
movsl
les
add
pop
sahf
mov
pop
scas
dec
cmp
cmp
cli
daa
cltd
cltd
loope
aad
mov
mov
bound
mov
and
mov
mov
daa
or
nop
jb
pop
fprem1
jb
dec
and
pop
fstl
add
shll
pop
jecxz
jecxz
xchg
adc
and
xor
fstps
mov
mov
cmp
add
fsubrl
test
push
adc
test
push
jno
cmpsl
xorb
dec
and
insl
jl
push
xor
bnd
ss
mov
out
out
daa
sti
js
ss
or
adc
mov
enter
or
out
repz
jnp
into
lret
sub
or
cmc
stos
out
ss
addr16
insb
jge
sti
push
cmp
fs
mov
jmp
cmp
mov
std
pop
and
add
jl
inc
shrb
add
sub
sti
in
and
push
es
dec
pop
mov
imul
inc
and
adc
lds
mov
test
cmp
je
inc
push
pop
negl
enter
pop
adc
mov
push
and
aas
movsl
pushf
dec
xchg
push
sbb
test
jo
mov
and
stc
xor
jb
ss
shl
movsb
inc
dec
out
fdivl
push
stos
pusha
push
out
pop
pop
insb
jnp
clc
imul
or
fmul
pop
fdivr
xor
sub
xchg
addr16
push
jle
inc
aaa
mov
adc
sub
rolb
jle
inc
cmp
rclb
gs
lock
movswl
sub
cmpsb
sahf
jl
jecxz
sub
int
test
mov
mov
mov
cmpsb
es
dec
sbb
jecxz
popa
cs
xor
stos
cmp
or
aas
inc
fwait
loope
ds
add
xor
out
mov
shrd
ja
xor
data16
pop
daa
sub
pop
adc
movb
pushf
cmpsb
sbb
mov
adc
lea
or
mov
cmp
cmpsb
jl
cmpsl
enter
add
mov
sub
sbb
test
flds
in
aam
cs
lock
mov
out
bnd
jg
test
popf
pop
xor
cmp
repnz
das
daa
les
mov
pop
ret
push
out
ret
icebp
orw
sbbl
sub
xchg
pushf
jmp
push
push
sub
xor
imul
cmpsl
test
jle
mov
mov
mov
mov
pop
fcompl
mov
cld
and
and
adcb
jge
sbb
jmp
mov
mov
cltd
insl
ljmp
inc
cmpsl
sbb
pop
or
inc
sub
ds
testl
sbb
lgs
repnz
and
outsb
xchg
mov
mov
mov
cmp
rol
xor
pop
data16
mov
into
xor
insb
icebp
in
jecxz
ljmp
dec
adc
add
rorl
jle
mov
add
mov
cmp
mov
cwtl
clc
arpl
xchg
dec
addr16
outsb
ficompl
jecxz
add
hlt
dec
repz
pop
mov
stos
ret
icebp
xchg
sbb
test
inc
loop
pop
popa
ljmp
or
cmc
je
ret
mov
jae
xchg
mov
out
and
xchg
in
mov
jecxz
lods
lret
test
std
lcall
push
mov
adc
xor
loope
sbb
data16
xchg
mov
xchg
aam
adc
lods
mov
test
inc
orb
shrb
fwait
test
xchg
mov
sub
and
and
scas
leave
inc
dec
fisttps
adc
mov
pop
test
adc
es
sbb
test
xchg
and
and
rcl
pop
xor
call
xchg
xchg
enter
ja
arpl
js
lock
gs
shrd
push
adc
or
pusha
fidivrs
movb
lahf
adc
and
mov
cmp
jmp
shr
ljmp
in
jne
jb
and
xor
jae
daa
sarl
cmp
push
out
lahf
mov
cmpsl
mov
lcall
push
mov
dec
xchg
pop
in
packuswb
jne
nop
std
mov
fiaddl
fwait
pop
mov
les
and
lods
lds
pop
movb
js
stc
or
inc
mov
and
sub
es
loopne
mov
inc
idivb
pop
dec
dec
jne
xor
ja
or
pusha
inc
mov
xor
rorl
aam
int3
arpl
daa
or
or
jl
cmpb
push
xor
pushl
jae
xchg
jge
cltd
xchg
js
cmp
ja
jecxz
push
dec
mov
scas
clc
adc
and
out
sahf
in
stos
cwtl
sbb
popa
mov
inc
or
or
or
cmpb
lcall
fucomip
mov
pop
ret
cmp
in
das
test
js
jno
std
push
adc
nop
scas
push
jmp
mov
mov
sbb
mov
push
mov
mov
fistpll
stos
xchg
imul
xchg
and
loope
in
in
sti
mov
fwait
mov
in
jnp
add
sub
es
testl
inc
xor
jnp
xor
pop
push
rolb
fwait
cmpsl
push
xchg
in
fcmovbe
jne
cmp
cmp
mov
dec
cmpsb
adc
push
pop
push
mov
imul
test
test
insl
nop
jne
inc
add
fildll
xor
jle
shrb
adc
pop
loop
jge
add
iret
xor
xlat
push
shlb
push
popa
mov
pushf
push
or
xchg
cmpsb
ret
push
push
mov
outsb
cmp
push
mov
adc
mov
pop
test
imul
inc
xchg
sbb
iret
ss
icebp
dec
xor
jne
repz
mov
ret
enter
inc
pop
push
xorb
lea
es
insb
xor
idivl
cwtl
lods
mov
cmp
aaa
scas
movsb
in
push
mov
lds
sti
lret
movsl
cltd
fldenv
insl
in
pop
lock
idivl
cmp
inc
cmpsl
popl
jo
jae
lods
vpsrld
jle
dec
mulb
arpl
or
inc
test
test
subl
adc
or
ja
mov
xchg
out
xlat
and
pop
neg
leave
dec
or
adc
psubusb
cs
lret
push
dec
rcr
lock
or
mov
nop
imul
mov
jnp
lgs
mov
dec
dec
loopne
pop
push
dec
dec
sbb
sbb
jno
out
cmp
inc
inc
in
sub
cmpsl
fbstp
add
aam
fistl
add
icebp
dec
cmp
repnz
jb
mulb
scas
mov
cld
ljmp
inc
int3
test
xlat
lea
mov
xchg
cli
in
leave
loop
rolb
fwait
jnp
and
push
xchg
mov
call
sbb
xchg
repz
int
in
ja
movsl
loopne
movsb
in
jns
lret
in
sub
test
mov
sub
int3
insb
rorl
cmp
shr
test
or
push
push
xchg
sarl
pop
jo
push
push
addr16
test
sub
or
pushf
dec
jp
and
movl
or
pop
scas
add
inc
jns
push
ds
insb
repnz
mov
inc
test
mov
fwait
mov
inc
adc
arpl
xchg
jbe
or
adc
jne
jg
ds
inc
ss
gs
pop
mov
xchg
cmp
add
enter
ja
pop
sub
jno
jae
data16
lahf
lret
pushf
sub
fisubrs
in
and
in
xor
mov
xor
stos
lock
fildll
iret
and
shll
cs
mov
sub
je
test
mov
or
xor
gs
inc
mov
std
inc
lock
pushf
test
addr16
mov
inc
cld
mov
pop
pop
addr16
add
cld
enter
shr
dec
xor
jo
out
test
mov
fwait
jno
pushf
fsubr
add
scas
xchg
cmp
push
lret
std
lods
and
adc
mov
popa
cmpsb
cmpsl
fisttps
push
test
test
test
mov
sbb
push
cld
xchg
out
les
cmp
insl
cmp
std
cmp
into
and
iret
clc
mov
inc
mov
gs
ficoms
pop
or
mov
and
pop
xchg
push
sahf
in
add
xchg
xlat
ret
filds
mov
int3
push
shrb
mov
inc
test
pop
jl
sub
add
push
and
dec
test
mov
mov
xor
adc
gs
stc
dec
lods
xor
push
in
sbb
mov
cmpsl
xchg
sbb
mov
pop
mov
lock
cmpsl
mov
adc
sarl
fdivs
jge
bound
es
xchg
pushf
pop
stc
xor
fstl
les
push
mov
dec
add
or
sub
lret
cmp
loope
xchg
icebp
mov
out
cmpsl
sbb
cmp
lods
test
and
lcall
push
mov
jae
mov
or
shrl
xchg
inc
mov
xchg
push
repnz
ret
pop
pop
imul
mov
out
sbb
rcll
cltd
mov
sti
jno
and
in
jle
cli
lahf
xchg
push
dec
push
das
clc
push
pop
sbb
bound
mov
cmpsb
stc
push
das
and
push
cwtl
fcomps
or
pusha
adc
mov
xchg
sbb
iret
ljmp
shrb
lret
xchg
insb
lahf
cmp
mov
inc
leave
sahf
pop
cmpsl
mov
and
mov
push
jl
cli
cwtl
enter
sub
jmp
rcl
loop
mov
scas
pop
in
cmpsb
xchg
lret
shlb
cmp
jle
outsl
nop
js
popf
test
call
ret
fwait
sbb
cmpsb
fistps
dec
push
mov
inc
fdivrl
sbb
push
pop
sbb
xchg
arpl
es
iret
das
adc
lcall
pop
mov
int3
jne
mov
testb
add
jb
inc
inc
movl
mov
je
fdivs
mov
push
xchg
cmp
int3
or
jmp
inc
push
sub
mov
inc
std
aad
std
sub
mov
mov
inc
adc
scas
call
mov
mov
hlt
mov
xchg
cld
inc
out
mov
scas
iret
lret
adc
js
add
shrb
jnp
sub
lock
ss
shl
or
stos
cld
or
mov
sbb
popa
inc
adc
inc
fwait
push
sbb
lcall
divl
xor
jg
xlat
xchg
jle
mov
push
inc
pop
clc
cmp
sub
mov
int3
pop
add
sub
jmp
push
pushl
and
mov
mov
add
mov
rcl
dec
or
push
mov
ror
xchg
jmp
jg
xchg
mov
or
xchg
dec
adc
mov
ret
ss
push
jbe
pop
int
sub
insb
cmp
in
js
mov
mov
scas
sub
fistpl
lds
hlt
pop
daa
jbe
lds
int3
aas
pusha
mov
adc
shrb
filds
sahf
loop
ljmp
call
dec
sbb
scas
inc
push
push
mov
jecxz
divl
fs
mov
and
dec
cs
lds
fcoms
ja
and
mov
inc
pop
outsl
dec
repz
gs
xor
jb
rcll
dec
vrcpps
cwtl
negb
lret
cmpsb
push
stos
inc
mov
enter
mov
cmp
jmp
cmpsb
mov
popf
and
pop
push
cmp
repnz
sbb
ljmp
nop
test
lahf
out
xchg
xor
repnz
fucom
inc
or
pop
popa
pusha
call
rclb
lcall
adc
int3
sub
jne
or
outsl
jo
bound
aaa
hlt
cmp
dec
aas
vzeroupper
cwtl
fsubrl
jbe
cs
cmp
xor
add
into
insl
out
push
pop
cltd
lock
pop
inc
test
les
test
jmp
lret
sub
divl
add
enter
add
inc
icebp
xor
repnz
subb
ds
ret
les
lcall
xchg
popa
sbb
sbb
jmp
aas
adc
adc
arpl
mov
rcrb
das
test
mov
xor
or
ds
mov
jg
cmp
stos
and
jae
dec
mov
mov
cmp
nop
ss
sub
mov
jns
clc
nop
nop
cwtl
inc
adc
stos
and
in
scas
cmpb
xchg
cmp
inc
loopne
rcll
pop
fildl
xchg
xchg
pop
xor
sub
adc
lea
lret
mov
and
jb
sub
push
movsb
jge
add
jmp
mov
or
adc
xor
iret
cmp
mov
int
dec
push
in
cmp
xor
push
push
sub
add
les
imul
insl
adc
fs
test
cwtl
sti
cmp
cli
jmp
add
int3
mov
xlat
out
enter
and
and
stc
dec
mov
sub
rcll
out
imul
jle
dec
jg
pop
push
adc
int3
mov
dec
xchg
pop
mov
jle
shr
lret
sbb
lods
aam
and
mov
in
xorl
jle
pop
xor
dec
pop
mov
add
or
faddl
push
ss
sbb
ret
les
cwtl
daa
push
sahf
out
scas
push
int3
cltd
pcmpgtb
push
pop
push
adc
mov
repnz
rclb
dec
pushf
insb
aad
jns
and
and
movsl
decl
fcmovbe
enter
push
push
std
jo
outsl
sti
stos
lea
mov
addb
jno
cld
mov
popf
pop
mov
clc
mov
pushf
ret
icebp
inc
fisttps
and
sbb
inc
mov
lods
into
and
les
lahf
dec
sub
lock
adc
mov
inc
shrb
insb
jns
xor
jbe
xor
inc
cmpsb
mov
lret
jmp
popl
mov
or
push
sbb
insl
lcall
adc
jl
ljmp
mov
adc
shrl
je
mov
imul
int3
sbb
fidivrs
mov
xor
jb
ret
icebp
faddp
fsubs
mov
ljmp
add
sbb
les
stos
push
ja
iret
push
pop
and
incl
mov
into
push
adc
ficoml
sbb
test
xor
or
and
cmove
mov
and
and
mov
sbb
fstps
sbb
shl
dec
pop
inc
pop
pusha
push
dec
sbb
add
test
jno
fsubrs
xor
ds
jge
jns
adc
insl
xchg
dec
jg
hlt
stos
jle
cmp
les
mov
xchg
repz
rcr
xchg
movsb
std
xor
jnp
dec
jnp
adc
push
and
add
jb
sarl
outsb
jno
rcll
jg
add
pop
andl
out
bound
daa
test
adc
and
mov
lds
inc
lods
scas
imul
xor
adc
jns
push
fiaddl
lods
call
mov
and
mov
lds
pop
pop
movsb
cwtl
pushf
jge
ror
adc
outsb
loopne
add
add
mov
ret
inc
shl
idivl
mov
shl
cwtl
sub
push
jge
add
fistpl
out
jnp
pop
imul
icebp
adc
lds
pop
insl
sub
popa
cwtl
push
aaa
shll
fldenv
mov
pop
push
jnp
rorb
sbb
xor
test
mov
mov
mov
aaa
jo
test
out
or
jb
pop
push
int3
cmp
xor
mov
aas
mov
push
in
rcrb
xchg
xchg
push
imul
cli
jecxz
push
jae
mov
dec
jp
fstp
lock
imul
mov
sbb
div
lods
cmpsl
push
cmp
mov
in
dec
sti
cmpl
loopne
repz
pop
push
pop
cld
push
jecxz
in
out
ljmp
xor
jno
lret
gs
push
pop
mov
repz
pop
outsb
fmuls
sub
jne
repnz
dec
or
mov
test
push
cltd
add
lea
push
imul
rcr
mov
aam
xchg
fidivrs
sub
sub
pop
out
out
js
sarl
bound
mov
xor
cmc
ss
inc
sarl
out
out
add
stos
ja
addb
out
dec
test
inc
jg
mov
loope
faddl
sbb
mov
andl
in
jns
or
inc
lock
inc
insb
jmp
divl
iret
xlat
pop
adcl
mov
jecxz
cli
mov
hlt
pop
cmp
out
rcl
ljmp
out
jbe
in
dec
pop
sahf
jg
xor
jecxz
lret
mov
dec
arpl
sar
cmp
add
cmp
xor
add
jp
lock
add
dec
and
cmpsl
mov
fildll
test
lret
scas
mov
and
fsubrs
mov
int3
cmp
outsl
int
dec
inc
or
inc
cmpsl
popf
mov
inc
mov
data16
std
jno
push
outsl
subl
inc
inc
lcall
lret
gs
int3
sbb
add
inc
mov
arpl
lods
dec
xchg
js
pop
je
or
out
dec
mov
incl
aaa
dec
andb
das
pop
jnp
cmp
lock
fldt
sbb
pop
xchg
hlt
popf
mov
mov
pusha
lcall
iret
push
leave
pop
dec
mov
or
add
mov
jl
mov
fistps
cmovg
std
dec
lods
loop
xchg
fldt
fdivrl
dec
out
jle
std
pop
or
nop
shl
stos
test
cmp
repnz
dec
mov
shrb
sub
hlt
ret
imulb
pop
push
lret
push
cwtl
movsb
add
shll
adc
xchg
stos
movsl
add
pushf
fdivl
inc
pop
cmpsb
xchg
pop
xor
pushf
jne
dec
mov
add
xchg
jae
cmpsb
enter
cmc
xchg
sbb
outsl
add
lcall
sbb
pop
xchg
mov
int
mov
adc
cmp
mov
fisttpl
sahf
mov
bnd
in
sub
pop
adc
adc
cli
rclb
jge
pop
xor
and
pushf
lock
into
mov
sti
mov
aaa
adc
movsl
dec
and
pop
and
movsb
test
pushf
cmp
jnp
pop
orl
or
push
dec
xchg
xor
jo
mov
mov
cmpsl
sub
jns
adc
or
in
inc
cmp
and
popa
int3
aaa
addr16
mov
in
mov
jl
fnsave
fwait
and
rcrb
lods
dec
ss
mull
or
scas
out
cs
or
sarl
jns
mov
inc
aaa
lock
push
mov
aad
jl
fldcw
sbb
mov
pusha
dec
mov
test
dec
and
scas
mov
int3
jae
popa
cmp
add
mov
lret
outsb
jmp
mov
movsb
and
movsb
inc
addr16
cmp
mov
test
push
mov
aad
mov
adc
xchg
cwtl
and
mov
leave
out
je
xor
sbb
fildll
xchg
inc
aas
pop
and
cmpsl
jns
sub
xlat
dec
mov
inc
rolb
push
cs
xchg
aad
cmp
gs
aas
xor
lret
push
mov
sahf
and
pushf
push
xchg
dec
sub
or
rep
xchg
and
push
dec
lea
and
mulb
jle
loopw
leave
add
adc
clc
iret
pop
aaa
mov
xchg
inc
mov
lret
lret
loop
mov
mov
cmp
mov
fdivr
ret
sarl
push
insb
fisttps
add
hlt
rcll
sbb
dec
xor
dec
push
leave
inc
inc
or
jae
movsb
lahf
fidivrs
adc
call
sbb
mov
in
xchg
xchg
popf
scas
imul
sbb
xchg
add
nop
mov
es
repz
fcmovnbe
jle
testl
aad
leave
sti
cs
jnp
leave
rcll
pop
jb
xor
sbb
xchg
push
sbb
jb
cmp
adc
xchg
inc
aas
jne
aas
xchg
pop
pop
sub
lret
xchg
mov
subl
xor
push
rcrb
stc
mov
dec
inc
push
dec
jl
sti
int3
lahf
cli
bound
push
je
outsb
mov
mov
mov
ret
and
in
or
or
sbb
add
das
sub
cmp
jo
int
mov
cmpsl
push
clc
aaa
jl
sub
dec
fbld
jb
rorb
stos
sbb
push
add
stos
ss
popa
xlat
mov
mov
mov
mov
lret
or
mov
add
or
and
cwtl
push
jl
push
xor
and
scas
sbb
xchg
pop
daa
inc
icebp
stos
arpl
xchg
mov
or
jb
xor
push
movsb
sub
xchg
popa
adc
lahf
lds
mov
out
sub
loope
sub
cmpsb
es
add
inc
fistpll
cltd
xor
arpl
outsb
leave
add
addr16
push
into
push
out
addr16
xchg
test
in
xchg
addb
lods
stc
lods
sbb
mov
in
data16
sub
mov
arpl
movsb
dec
mov
popa
cmp
lea
xor
scas
jg
dec
pushf
mov
rorl
or
ljmp
ja
pop
sbb
repnz
mov
mov
add
jp
aaa
popf
cmp
inc
repz
test
mov
adc
in
cmc
xchg
inc
and
rolb
xor
or
rcr
rclb
push
adc
aad
cmpsb
sbb
add
jae
dec
sti
push
jno
sub
add
xchg
inc
movsb
pop
jmp
jl
push
inc
dec
ss
fisubl
mov
xchg
pop
add
cli
xchg
adc
inc
pop
or
push
daa
stos
aam
ljmp
cltd
sbb
and
call
aaa
pop
and
sub
sub
mov
leave
cmp
mov
hlt
clc
in
and
es
sub
jmp
pushf
loopne
sub
mov
adc
das
stc
push
push
lock
pop
scas
pop
scas
pop
dec
out
bound
sbb
sub
adc
fdivrs
pop
sahf
rdtsc
xor
push
aaa
mov
cli
jae
xlat
popf
mov
icebp
fistpll
in
mov
mov
nop
cmp
pop
in
cmp
sub
roll
mov
fcoms
jge
outsb
shrb
xchg
arpl
in
imul
and
aas
sti
mov
push
mov
out
sub
jp
pop
inc
in
leave
jnp
cmc
add
cltd
icebp
ljmp
mov
lret
dec
push
add
lods
in
push
or
pop
or
sti
fstl
add
mov
pop
ret
cmp
mov
insl
cli
xor
out
fbstp
in
push
push
and
and
pop
mov
ret
mov
sbbl
in
int3
pop
xchg
sbb
insb
into
xor
jnp
dec
rorb
xchg
xor
mov
pusha
bound
into
pop
pop
in
pop
ficoml
loop
mov
out
shll
loope
push
jge
fsub
in
lret
sbb
test
lcall
or
jp
mull
xor
push
xchg
or
stos
adc
jns
lods
scas
clc
xchg
pop
pop
std
ss
fisubrs
or
outsl
aad
sub
sub
loopne
xchg
and
pop
ficompl
test
mov
sub
aam
pop
outsl
add
jns
mov
fcomip
sub
jge
hlt
imul
and
or
stc
mov
int3
sub
daa
stos
pop
mov
movsb
sahf
js
cltd
stos
cmpsb
jae
popf
dec
negl
sub
js
in
sub
out
push
push
and
mov
jmp
inc
daa
xchg
mov
jle
mov
fnsave
loopne
xor
xor
movnti
hlt
repz
mov
les
pop
outsb
jne
lds
stc
mov
or
fsubr
mov
out
pop
jo
jne
or
xchg
adc
mov
aad
pop
sbb
movsl
mov
inc
inc
out
push
lea
mov
jle
rol
je
addb
jp
aam
out
mov
gs
add
loop
xchg
add
sub
sahf
inc
repz
in
sub
mov
cmp
xlat
pusha
cmp
jecxz
in
dec
out
add
imul
jg
add
loope
into
xor
mov
mov
mov
jne
xor
insb
sbb
pushf
pop
inc
or
jbe
jne
pop
pop
jecxz
or
hlt
and
mov
sbb
mov
xchg
scas
adc
test
dec
or
movsl
pop
cs
mov
jb
out
xchg
mov
pop
mov
js
xchg
push
cmp
sar
xchg
and
pop
push
add
mov
and
mov
shl
iret
sbb
add
loopne
push
dec
mov
nop
out
pushl
bound
xchg
mov
cmpsb
pop
xchg
cmp
mov
outsl
pop
or
adc
adc
call
out
es
fmul
lret
jmp
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
or
popf
push
jle
add
fldl
ljmp
test
int3
push
jmp
pop
mov
adc
test
sbb
mov
mov
test
ret
stos
jge
out
pop
xor
es
jne
out
loop
mov
pop
das
out
cli
xor
inc
fisttps
cltd
xchg
push
push
add
fs
dec
adc
out
push
fsubrs
xchg
add
push
rcrl
out
add
push
popa
mov
jbe
adc
cmp
sbb
jmp
and
idivl
fadds
into
pusha
pop
lret
mov
xor
leave
stc
xor
cvtps2pd
pop
push
pop
addr16
jbe
sbbb
rcll
lods
mov
es
push
cmp
add
rolb
fistl
lret
xchg
fisttpl
sub
add
sahf
sub
mov
idivl
inc
xchg
add
das
repz
test
jb
mov
or
test
push
pop
in
lods
stos
dec
mov
xor
and
das
xchg
or
addr16
sahf
inc
pop
out
xor
sbb
jno
inc
test
popf
icebp
sbb
mov
jns
adc
mov
dec
cmp
lods
jle
insb
lcall
inc
xchg
sbb
sub
sbb
shlb
fcoml
mov
mov
jg
inc
mov
inc
shr
inc
push
lods
loopnew
xor
popf
ss
mov
dec
pop
sub
aad
ljmp
fs
daa
in
stos
xchg
mov
shl
cmp
hlt
movsl
add
xor
js
jmp
xor
push
push
ficompl
sub
lret
imul
push
mov
xchg
xchg
add
leave
dec
out
gs
xor
and
ret
pop
jbe
sbb
jl
pop
lods
das
repnz
int3
in
and
xchg
push
shrb
mov
and
aad
jge
or
jne
jnp
xchg
dec
cld
or
xchg
daa
lods
int
and
pop
mov
xchg
mov
push
fwait
and
xchg
scas
xchg
jne
xchg
or
leave
ret
sbb
lret
mov
mov
jo
push
test
xchg
out
mov
inc
repnz
pop
fnstcw
mov
rorb
adc
out
sub
out
xlat
imul
insb
push
add
loop
hlt
push
fsubp
dec
jb
imul
cwtl
leave
jae
mov
loop
and
rolb
inc
mov
push
popf
cmc
inc
loope
mov
cs
xchg
xchg
je
add
sub
jg
mov
enter
or
popa
not
inc
dec
daa
andb
xor
and
negb
decb
inc
in
movsb
psubusb
adc
xor
push
mov
inc
jg
movsl
push
out
add
mov
cmp
testl
mov
divl
ljmp
ljmp
dec
push
sbb
push
mov
in
rcr
test
imulb
scas
inc
aad
incb
push
mov
popl
ret
aam
or
mov
mov
mov
xchg
push
daa
adc
jmp
xor
adc
ret
jmp
das
lock
lret
fcmovbe
or
mov
xchg
cmp
mov
sub
cmp
nop
cmp
jl
inc
xchg
and
mov
sub
adc
mov
push
push
idivb
add
aad
aas
clc
out
mov
push
push
mov
xlat
loopne
aaa
mov
cmpsb
inc
jge
cmp
push
aad
stc
jb
inc
stc
cltd
sub
enter
rclb
sahf
repnz
cwtl
and
sarl
ds
adc
loopne
sbb
xchg
adc
xlat
shr
add
mov
das
jbe
scas
data16
add
add
inc
jp
pop
int3
add
js
cli
xor
push
fwait
push
push
popfw
inc
cmpsl
lret
mov
sbb
ja
add
lea
xchg
pop
jae
inc
in
push
jl
in
lcall
iret
arpl
xchg
pop
sub
add
nop
xbegin
add
test
mov
push
add
sub
test
dec
pop
fwait
xchg
insb
sbb
stc
sahf
scas
lock
ljmp
xchg
mov
sub
mov
inc
pop
in
lods
insb
or
movsl
lcall
jp
cmpsl
test
pop
lahf
sbb
jg
mov
mov
cmpl
push
or
or
pusha
xorl
mov
dec
test
cmpsl
adc
ja
or
push
lret
sbb
mov
insl
add
mov
outsb
jge
fadd
sbb
pop
scas
stos
pop
jmp
cmp
pop
sub
jb
pop
scas
xor
cmp
pop
fisttpl
add
fisttps
xchg
or
adc
aad
test
push
mov
inc
sub
mov
dec
fcompl
mov
cld
fistps
xor
push
add
inc
out
lret
xor
mov
sti
sbb
hlt
xor
xchg
xchg
ss
push
or
and
fisubrl
fildll
and
inc
jae
xor
jmp
jle
xchg
test
clc
push
lds
lock
mov
mov
lret
movsb
arpl
fwait
mov
mov
mov
fisttpl
repnz
aaa
int
fwait
inc
fmuls
je
out
lcall
sub
popa
mov
scas
fcmovne
pop
and
or
push
push
cmp
dec
jno
mov
ret
mov
mov
fcmovnbe
xor
xchg
or
lret
sbb
neg
call
insl
lds
into
pop
lcall
add
mov
cwtl
out
push
cld
add
insb
mov
fadds
xor
xchg
jae
cmc
stos
fsubrs
mov
iret
sbb
out
fidivrl
add
mov
push
xor
addr16
pop
bound
push
cmpsl
inc
movsl
cmp
xor
or
cmp
inc
movsb
dec
out
int3
pop
out
mov
in
sub
add
rcr
cltd
adc
aas
call
pushl
or
mov
pop
push
and
icebp
push
adc
lcall
add
pop
and
popf
lock
rorl
cwtl
cwtl
in
icebp
jne
and
push
mov
add
bound
rcrb
xchg
fwait
pushf
inc
mov
inc
pushf
sbb
out
fildll
aad
pop
scas
dec
jge
std
in
loopne
pop
mov
jg
xorb
lcall
xorb
mov
mov
shll
pop
and
and
scas
push
rol
mov
mov
ja
xor
mov
gs
cmp
push
jns
xchg
nop
repz
mov
or
leave
movsb
ja
cmpsl
loop
nop
mov
adc
sub
rdtsc
cmpsb
lret
lret
out
mov
jne
push
jge
mov
jmp
sbb
xchg
pop
pop
xchg
add
mov
pop
inc
lods
adc
rcll
adc
call
cmp
xor
sub
enter
pop
aad
sbb
popf
cmp
daa
inc
push
lcall
jp
repnz
iret
out
inc
jo
jg
rclb
sbb
pop
pop
mov
inc
xor
xor
jg
push
testl
adc
push
mov
adc
cmpsb
mov
sub
movsl
pop
push
pop
sarl
gs
leave
lahf
mul
sbb
or
pop
fidivs
ljmp
les
and
fnstcw
dec
push
in
jnp
movsl
pop
movsl
test
sahf
orb
add
sub
inc
lods
sbb
fdivrp
sub
dec
test
sbb
or
cmp
fs
inc
mov
lret
pop
in
loop
cmc
ror
data16
leave
in
add
jle
adc
orb
and
inc
jl
or
lret
test
mov
cmp
add
dec
fisubl
rcrl
int3
sub
xor
stos
pop
int
mov
jge
out
and
jle
sbb
jns
sbb
sbb
xor
das
push
push
in
inc
std
lret
inc
mov
popa
mov
imul
bound
inc
push
jmp
stos
ret
add
lret
fs
cli
xchg
add
rorl
sbb
stc
lock
movsb
je
jge
push
andl
notb
loopne
adc
fstpt
xacquire
cltd
xchg
or
cmp
adc
sar
sub
iret
jecxz
dec
and
jae
gs
pop
lods
test
pop
xlat
and
xchg
mov
pop
cmpsl
dec
in
mov
mov
or
mov
repnz
add
jmp
adc
out
mov
and
jae
jmp
xchg
push
jmp
mov
inc
scas
sbb
fwait
mov
ss
jp
xor
rclb
ss
out
pop
lds
fldz
iret
cltd
outsb
pop
es
outsl
mov
cltd
jge
sub
or
mov
sbb
jnp
sbb
into
pop
or
in
cmp
fildl
jae
data16
mov
inc
sbb
push
in
adc
sub
das
sbb
jns
lods
lret
xchg
and
xor
int
fsubs
sub
pop
mov
stos
jg
sbb
push
cmp
or
cmpb
mov
sbb
hlt
jns
jno
xchg
daa
jno
fisttpll
inc
pop
fldenv
adc
in
xor
iret
sarb
call
xor
xor
and
lea
mov
jg
js
adc
inc
gs
pop
inc
testb
and
mov
pop
sub
test
pop
mov
das
lret
or
fstpt
imul
cmpsl
sbb
pop
loop
imul
filds
out
stos
mov
add
sbb
hlt
lock
pushf
sub
inc
repnz
fldenv
lods
dec
sbb
and
stos
daa
rcrb
ja
scas
aad
lock
xor
stc
aad
inc
jp
and
mov
scas
les
nop
jb
inc
jle
sti
pop
mov
and
mov
add
mov
pop
cmp
fimull
scas
out
imul
stc
or
cmp
ret
mov
bound
shlb
repz
xchg
push
shr
loope
out
cmpsb
ficoml
jb
sub
jg
cmpsl
insl
fwait
dec
jecxz
cld
fldcw
dec
xor
sbb
imul
dec
mov
fisttps
jl
dec
jo
cmp
hlt
mov
iret
jae
jle
aas
jnp
mov
jnp
ds
js
das
nop
push
aas
adc
sub
daa
shlb
or
nop
ljmp
jge
jecxz
cmp
or
jmp
fcompl
dec
call
push
and
loopne
push
aad
mov
push
movsl
imul
push
ljmp
divb
lahf
and
pushf
lods
jg
and
scas
mov
out
dec
ljmp
mov
xchg
or
std
test
arpl
dec
rcrb
jne
std
and
push
pushf
cmp
jmp
jl
or
xchg
rcll
pop
popa
sbb
mov
daa
jle
inc
out
sbb
test
cwtl
repz
loop
ret
int3
ret
fidivrs
pusha
das
gs
adc
push
inc
lock
test
xor
cmp
loope
cli
mov
jmp
push
sti
jne
leave
push
outsb
js
out
fisttpl
and
lcall
jne
push
pop
inc
xchg
enter
rcll
push
adc
mov
stc
mov
hlt
and
pop
mov
popa
testl
push
mov
xor
lock
push
dec
mov
xchg
int3
jnp
push
mov
xchg
fbstp
ret
test
jo
mov
ret
jo
mov
sub
xor
xorb
or
mov
stos
addr16
mov
sbb
movsb
movl
aam
mov
mov
mov
cmpsl
cmpsl
sub
mov
xchg
mov
xlat
jl
mov
mov
mov
xchg
loop
test
aad
outsl
daa
jo
mov
insb
cs
call
iret
adc
popa
jecxz
out
mov
aad
in
mov
call
cmp
or
push
push
push
das
lcall
and
pop
adc
shlb
mov
adc
loope
sbb
clc
aaa
into
cmp
push
in
xor
jne
imul
mov
repnz
test
pop
lock
in
sbb
xor
fisubl
std
jmp
loope
mov
cmp
outsb
xorl
in
xchg
out
sub
cli
pop
cmp
xor
cwtl
mov
in
push
or
push
pop
pop
sahf
xchg
out
into
mov
cmp
push
pop
mov
pop
xor
dec
mov
mov
js
mov
in
cmp
cmpsl
and
mov
fbstp
sbb
cwtl
pop
std
cs
and
mov
int
mov
fistl
mov
jge
add
cmc
jmp
add
pop
inc
rorb
xchg
cmpsl
lea
clc
push
neg
mov
xchg
fwait
pop
jo
inc
sub
hlt
repz
inc
jns
or
and
add
mov
jo
mov
jae
dec
lods
add
rclb
jge
inc
xor
int
xor
loope
jge
popa
cs
and
jae
xorl
pop
ds
xor
mov
push
or
push
les
insl
ret
dec
jl
lahf
mov
add
xor
pop
fnstenv
jbe
push
imul
mov
xchg
fs
flds
jb
mov
enter
jmp
mov
jnp
adc
xchg
pop
lods
inc
repz
inc
jmp
and
cwtl
imul
jmp
mov
pop
shll
je
sbb
inc
adc
mov
mov
xlat
and
and
mov
scas
enter
sub
cmp
cmp
imul
sub
movsb
or
and
mov
ja
enter
or
int
mov
popa
stc
jp
mov
out
decb
sub
add
and
aam
sub
pop
dec
pop
mov
mov
js
sub
and
lock
sub
adc
pop
iret
dec
insl
fcoms
ja
jae
xor
rol
and
jns
scas
xchg
or
out
mov
mov
push
sarl
out
and
lcall
xor
lahf
addl
jmp
xor
mov
dec
jae
loopne
in
mov
pop
pop
mov
mov
lods
fsubp
stos
les
loope
lds
dec
jmp
push
aaa
cmpsb
push
aad
adc
outsl
pop
dec
cmpsb
rcrb
add
mov
cmp
ror
sbb
ds
and
enter
out
loop
cltd
mov
ja
divl
setne
das
or
or
inc
ss
out
jg
push
xor
icebp
jle
test
mov
stc
into
mov
out
bound
cs
dec
jge
aam
fldlg2
push
lock
rcrl
outsl
or
mov
loopne
sar
sarb
pop
call
daa
stos
int
in
xlat
popf
mov
cltd
sbb
jne
ds
and
add
add
fwait
enterw
pop
mov
fldenv
push
and
pop
add
adc
or
xor
das
scas
inc
ljmp
cli
push
stos
sub
push
mov
push
daa
ljmp
jp
pusha
push
xor
les
iret
out
add
sub
lods
mov
jecxz
pop
jae
rcll
pop
adc
push
sbb
jg
mov
dec
flds
inc
jmp
rclb
adc
outsl
in
les
mov
test
mov
das
sbb
mov
sti
test
lods
and
xor
cmp
insb
sbb
or
outsb
out
mov
arpl
xchg
std
adc
cltd
rclb
sub
out
jle
push
push
cltd
data16
fisttps
push
push
jnp
push
and
dec
mov
ja
adc
movsl
outsl
jnp
xor
cmp
sbb
adc
int3
cmp
int3
outsb
pop
pop
test
dec
lods
inc
jbe
ja
rolb
sub
mov
cmp
ja
ljmp
pop
lds
addr16
pop
cs
xor
notl
popa
sti
pop
cwtl
mov
push
sbbl
mov
aad
das
and
mov
or
jl
insb
inc
lahf
mov
ja
adc
or
lea
mov
rcrb
mov
sub
sbb
in
lds
jae
mov
jne
adc
xor
dec
jp
xchg
sub
int3
pop
mov
add
sbb
lds
push
mov
and
push
inc
mov
roll
and
pop
push
dec
stos
push
mov
push
xchg
or
outsl
je
sahf
pop
pop
lods
fsts
cli
sbbb
or
push
imul
lea
mov
fmul
mov
cmpsl
ja
sarl
jmp
call
jbe
and
mov
push
int
sbb
frstor
sbb
lahf
or
aas
jne
mov
nop
call
leave
loope
test
shlb
insb
and
dec
es
inc
mov
cmp
aam
lahf
lea
pop
push
daa
push
rcr
cld
scas
mov
fstps
mov
and
fiaddl
push
icebp
and
hlt
cmp
iret
dec
xchg
jl
push
jmp
sbb
jmp
push
inc
mov
cltd
xchg
mov
sahf
lock
or
xor
fs
jp
mov
fsubrs
dec
andl
lcall
and
add
sbb
mov
loopne
push
and
push
sbb
in
loop
ss
jnp
jecxz
cmp
fisttpl
fst
sahf
outsl
xor
xchg
mov
xchg
and
outsb
pop
bound
ret
pop
jp
jbe
jbe
cmc
frstpm(287
pop
stos
sub
or
mov
rcll
mov
pop
or
dec
js
jae
mov
mov
dec
into
lds
inc
xor
jbe
sbb
cmp
les
imul
dec
in
cmpl
push
cld
and
icebp
scas
jbe
shl
pop
mov
repnz
nop
or
and
pop
xor
pop
ret
int3
cmp
xor
cwtl
in
hlt
sbb
jmp
mov
push
shll
sub
inc
xchg
jl
sub
movsb
sub
cmp
aas
jmp
inc
xbegin
push
mov
cld
push
std
lds
roll
bound
or
fsubr
or
sarl
movsb
test
pop
pop
cmpsl
fisubrs
pop
in
sub
sub
mov
sbb
mov
add
mov
add
sub
pop
pop
jae
ja
mov
xchg
adc
rcl
inc
cmpsb
inc
mov
bound
sbb
sbb
mov
ret
mov
or
sub
lret
lcall
gs
xchg
cmpsl
sbb
jg
or
cmpb
fimull
pop
sub
dec
jecxz
sub
dec
sub
aas
int
push
sub
aas
fcoms
hlt
or
cmp
xor
dec
repnz
pop
adc
or
mov
and
bound
mov
and
mov
dec
test
insl
sti
pcmpgtb
mov
or
jb
test
sbb
lods
insb
scas
mov
outsb
xchg
pop
or
andl
fnsave
idivl
inc
sahf
std
int3
fiadds
and
inc
out
mov
cmpsb
fisubrs
gs
pushf
pushl
js
fidivrs
cmp
and
adc
sub
dec
mov
in
push
test
mov
repz
mov
mov
out
inc
sahf
pop
gs
jmp
test
xor
xchg
data16
jb
arpl
bound
ds
in
test
xor
lds
sbb
lea
inc
pop
inc
xor
add
add
jp
xabort
js
add
stos
pop
mov
sub
adc
call
int
je
nop
xor
mov
inc
jb
push
add
and
sbb
lock
in
mov
jae
jns
stos
in
mov
aaa
data16
insb
aas
push
pushf
pop
inc
pop
aad
ljmp
jecxz
sub
sbb
out
shrl
imul
mov
push
dec
sahf
bound
mov
jo
flds
mov
sbb
notb
aad
cmpl
mov
xchg
jmp
hlt
popf
mov
adc
add
fbld
push
pop
push
sahf
rcrb
xchg
xchg
and
les
insb
loopne
sarl
inc
lods
icebp
mov
mov
jg
xor
outsl
dec
inc
mov
jnp
push
out
loop
in
xor
shr
dec
push
xchg
xchg
repz
imulb
and
das
add
lret
or
addr16
movsb
sarl
rorb
cmpsb
loopne
push
lds
aam
outsb
mov
lret
rol
fcomip
xchg
loopne
fiaddl
adc
aas
sub
sub
in
lods
or
je
dec
test
and
shlb
pop
push
call
test
pop
xchg
scas
adc
les
xor
jmp
rcll
call
rolb
or
mov
adc
and
push
push
xchg
xor
mov
movsl
les
add
pop
sahf
mov
pop
scas
dec
cmp
cmp
cli
daa
cltd
cltd
loope
aad
mov
mov
bound
mov
and
mov
mov
daa
or
nop
jb
pop
fprem1
jb
dec
and
pop
fstl
add
shll
pop
jecxz
jecxz
xchg
adc
and
xor
fstps
mov
mov
cmp
add
fsubrl
test
push
adc
test
push
jno
cmpsl
xorb
dec
and
insl
jl
push
xor
bnd
ss
mov
out
out
daa
sti
js
ss
or
adc
mov
enter
or
out
repz
jnp
into
lret
sub
or
cmc
stos
out
ss
addr16
insb
jge
sti
push
cmp
fs
mov
jmp
cmp
mov
std
pop
and
add
jl
inc
shrb
add
sub
sti
in
and
push
es
dec
pop
mov
imul
inc
and
adc
lds
mov
test
cmp
je
inc
push
pop
negl
enter
pop
adc
mov
push
and
aas
movsl
pushf
dec
xchg
push
sbb
test
jo
mov
and
stc
xor
jb
ss
shl
movsb
inc
dec
out
fdivl
push
stos
pusha
push
out
pop
pop
insb
jnp
clc
imul
or
fmul
pop
fdivr
xor
sub
xchg
addr16
push
jle
inc
aaa
mov
adc
sub
rolb
jle
inc
cmp
rclb
gs
lock
movswl
sub
cmpsb
sahf
jl
jecxz
sub
int
test
mov
mov
mov
cmpsb
es
dec
sbb
jecxz
popa
cs
xor
stos
cmp
or
aas
inc
fwait
loope
ds
add
xor
out
mov
shrd
ja
xor
data16
pop
daa
sub
pop
adc
movb
pushf
cmpsb
sbb
mov
adc
lea
or
mov
cmp
cmpsb
jl
cmpsl
enter
add
mov
sub
sbb
test
flds
in
aam
cs
lock
mov
out
bnd
jg
test
popf
pop
xor
cmp
repnz
das
daa
les
mov
pop
ret
push
out
ret
icebp
orw
sbbl
sub
xchg
pushf
jmp
push
push
sub
xor
imul
cmpsl
test
jle
mov
mov
mov
mov
pop
fcompl
mov
cld
and
and
adcb
jge
sbb
jmp
mov
mov
cltd
insl
ljmp
inc
cmpsl
sbb
pop
or
inc
sub
ds
testl
sbb
lgs
repnz
and
outsb
xchg
mov
mov
mov
cmp
rol
xor
pop
data16
mov
into
xor
insb
icebp
in
jecxz
ljmp
dec
adc
add
rorl
jle
mov
add
mov
cmp
mov
cwtl
clc
arpl
xchg
dec
addr16
outsb
ficompl
jecxz
add
hlt
dec
repz
pop
mov
stos
ret
icebp
xchg
sbb
test
inc
loop
pop
popa
ljmp
or
cmc
je
ret
mov
jae
xchg
mov
out
and
xchg
in
mov
jecxz
lods
lret
test
std
lcall
push
mov
adc
xor
loope
sbb
data16
xchg
mov
xchg
aam
adc
lods
mov
test
inc
orb
shrb
fwait
test
xchg
mov
sub
and
and
scas
leave
inc
dec
fisttps
adc
mov
pop
test
adc
es
sbb
test
xchg
and
and
rcl
pop
xor
call
xchg
xchg
enter
ja
arpl
js
lock
gs
shrd
push
adc
or
pusha
fidivrs
movb
lahf
adc
and
mov
cmp
jmp
shr
ljmp
in
jne
jb
and
xor
jae
daa
sarl
cmp
push
out
lahf
mov
cmpsl
mov
lcall
push
mov
dec
xchg
pop
in
packuswb
jne
nop
std
mov
fiaddl
fwait
pop
mov
les
and
lods
lds
pop
movb
js
stc
or
inc
mov
and
sub
es
loopne
mov
inc
idivb
pop
dec
dec
jne
xor
ja
or
pusha
inc
mov
xor
rorl
aam
int3
arpl
daa
or
or
jl
cmpb
push
xor
pushl
jae
xchg
jge
cltd
xchg
js
cmp
ja
jecxz
push
dec
mov
scas
clc
adc
and
out
sahf
in
stos
cwtl
sbb
popa
mov
inc
or
or
or
cmpb
lcall
fucomip
mov
pop
ret
cmp
in
das
test
js
jno
std
push
adc
nop
scas
push
jmp
mov
mov
sbb
mov
push
mov
mov
fistpll
stos
xchg
imul
xchg
and
loope
in
in
sti
mov
fwait
mov
in
jnp
add
sub
es
testl
inc
xor
jnp
xor
pop
push
rolb
fwait
cmpsl
push
xchg
in
fcmovbe
jne
cmp
cmp
mov
dec
cmpsb
adc
push
pop
push
mov
imul
test
test
insl
nop
jne
inc
add
fildll
xor
jle
shrb
adc
pop
loop
jge
add
iret
xor
xlat
push
shlb
push
popa
mov
pushf
push
or
xchg
cmpsb
ret
push
push
mov
outsb
cmp
push
mov
adc
mov
pop
test
imul
inc
xchg
sbb
iret
ss
icebp
dec
xor
jne
repz
mov
ret
enter
inc
pop
push
xorb
lea
es
insb
xor
idivl
cwtl
lods
mov
cmp
aaa
scas
movsb
in
push
mov
lds
sti
lret
movsl
cltd
fldenv
insl
in
pop
lock
idivl
cmp
inc
cmpsl
popl
jo
jae
lods
vpsrld
jle
dec
mulb
arpl
or
inc
test
test
subl
adc
or
ja
mov
xchg
out
xlat
and
pop
neg
leave
dec
or
adc
psubusb
cs
lret
push
dec
rcr
lock
or
mov
nop
imul
mov
jnp
lgs
mov
dec
dec
loopne
pop
push
dec
dec
sbb
sbb
jno
out
cmp
inc
inc
in
sub
cmpsl
fbstp
add
aam
fistl
add
icebp
dec
cmp
repnz
jb
mulb
scas
mov
cld
ljmp
inc
int3
test
xlat
lea
mov
xchg
cli
in
leave
loop
rolb
fwait
jnp
and
push
xchg
mov
call
sbb
xchg
repz
int
in
ja
movsl
loopne
movsb
in
jns
lret
in
sub
test
mov
sub
int3
insb
rorl
cmp
shr
test
or
push
push
xchg
sarl
pop
jo
push
push
addr16
test
sub
or
pushf
dec
jp
and
movl
or
pop
scas
add
inc
jns
push
ds
insb
repnz
mov
inc
test
mov
fwait
mov
inc
adc
arpl
xchg
jbe
or
adc
jne
jg
ds
inc
ss
gs
pop
mov
xchg
cmp
add
enter
ja
pop
sub
jno
jae
data16
lahf
lret
pushf
sub
fisubrs
in
and
in
xor
mov
xor
stos
lock
fildll
iret
and
shll
cs
mov
sub
je
test
mov
or
xor
gs
inc
mov
std
inc
lock
pushf
test
addr16
mov
inc
cld
mov
pop
pop
addr16
add
cld
enter
shr
dec
xor
jo
out
test
mov
fwait
jno
pushf
fsubr
add
scas
xchg
cmp
push
lret
std
lods
and
adc
mov
popa
cmpsb
cmpsl
fisttps
push
test
test
test
mov
sbb
push
cld
xchg
out
les
cmp
insl
cmp
std
cmp
into
and
iret
clc
mov
inc
mov
gs
ficoms
pop
or
mov
and
pop
xchg
push
sahf
in
add
xchg
xlat
ret
filds
mov
int3
push
shrb
mov
inc
test
pop
jl
sub
add
push
and
dec
test
mov
mov
xor
adc
gs
stc
dec
lods
xor
push
in
sbb
mov
cmpsl
xchg
sbb
mov
pop
mov
lock
cmpsl
mov
adc
sarl
fdivs
jge
bound
es
xchg
pushf
pop
stc
xor
fstl
les
push
mov
dec
add
or
sub
lret
cmp
loope
xchg
icebp
mov
out
cmpsl
sbb
cmp
lods
test
and
lcall
push
mov
jae
mov
or
shrl
xchg
inc
mov
xchg
push
repnz
ret
pop
pop
imul
mov
out
sbb
rcll
cltd
mov
sti
jno
and
in
jle
cli
lahf
xchg
push
dec
push
das
clc
push
pop
sbb
bound
mov
cmpsb
stc
push
das
and
push
cwtl
fcomps
or
pusha
adc
mov
xchg
sbb
iret
ljmp
shrb
lret
xchg
insb
lahf
cmp
mov
inc
leave
sahf
pop
cmpsl
mov
and
mov
push
jl
cli
cwtl
enter
sub
jmp
rcl
loop
mov
scas
pop
in
cmpsb
xchg
lret
shlb
cmp
jle
outsl
nop
js
popf
test
call
ret
fwait
sbb
cmpsb
fistps
dec
push
mov
inc
fdivrl
sbb
push
pop
sbb
xchg
arpl
es
iret
das
adc
lcall
pop
mov
int3
jne
mov
testb
add
jb
inc
inc
movl
mov
je
fdivs
mov
push
xchg
cmp
int3
or
jmp
inc
push
sub
mov
inc
std
aad
std
sub
mov
mov
inc
adc
scas
call
mov
mov
hlt
mov
xchg
cld
inc
out
mov
scas
iret
lret
adc
js
add
shrb
jnp
sub
lock
ss
shl
or
stos
cld
or
mov
sbb
popa
inc
adc
inc
fwait
push
sbb
lcall
divl
xor
jg
xlat
xchg
jle
mov
push
inc
pop
clc
cmp
sub
mov
int3
pop
add
sub
jmp
push
pushl
and
mov
mov
add
mov
rcl
dec
or
push
mov
ror
xchg
jmp
jg
xchg
mov
or
xchg
dec
adc
mov
ret
ss
push
jbe
pop
int
sub
insb
cmp
in
js
mov
mov
scas
sub
fistpl
lds
hlt
pop
daa
jbe
lds
int3
aas
pusha
mov
adc
shrb
filds
sahf
loop
ljmp
call
dec
sbb
scas
inc
push
push
mov
jecxz
divl
fs
mov
and
dec
cs
lds
fcoms
ja
and
mov
inc
pop
outsl
dec
repz
gs
xor
jb
rcll
dec
vrcpps
cwtl
negb
lret
cmpsb
push
stos
inc
mov
enter
mov
cmp
jmp
cmpsb
mov
popf
and
pop
push
cmp
repnz
sbb
ljmp
nop
test
lahf
out
xchg
xor
repnz
fucom
inc
or
pop
popa
pusha
call
rclb
lcall
adc
int3
sub
jne
or
outsl
jo
bound
aaa
hlt
cmp
dec
aas
vzeroupper
cwtl
fsubrl
jbe
cs
cmp
xor
add
into
insl
out
push
pop
cltd
lock
pop
inc
test
les
test
jmp
lret
sub
divl
add
enter
add
inc
icebp
xor
repnz
subb
ds
ret
les
lcall
xchg
popa
sbb
sbb
jmp
aas
adc
adc
arpl
mov
rcrb
das
test
mov
xor
or
ds
mov
jg
cmp
stos
and
jae
dec
mov
mov
cmp
nop
ss
sub
mov
jns
clc
nop
nop
cwtl
inc
adc
stos
and
in
scas
cmpb
xchg
cmp
inc
loopne
rcll
pop
fildl
xchg
xchg
pop
xor
sub
adc
lea
lret
mov
and
jb
sub
push
movsb
jge
add
jmp
mov
or
adc
xor
iret
cmp
mov
int
dec
push
in
cmp
xor
push
push
sub
add
les
imul
insl
adc
fs
test
cwtl
sti
cmp
cli
jmp
add
int3
mov
xlat
out
enter
and
and
stc
dec
mov
sub
rcll
out
imul
jle
dec
jg
pop
push
adc
int3
mov
dec
xchg
pop
mov
jle
shr
lret
sbb
lods
aam
and
mov
in
xorl
jle
pop
xor
dec
pop
mov
add
or
faddl
push
ss
sbb
ret
les
cwtl
daa
push
sahf
out
scas
push
int3
cltd
pcmpgtb
push
pop
push
adc
mov
repnz
rclb
dec
pushf
insb
aad
jns
and
and
movsl
decl
fcmovbe
enter
push
push
std
jo
outsl
sti
stos
lea
mov
addb
jno
cld
mov
popf
pop
mov
clc
mov
pushf
ret
icebp
inc
fisttps
and
sbb
inc
mov
lods
into
and
les
lahf
dec
sub
lock
adc
mov
inc
shrb
insb
jns
xor
jbe
xor
inc
cmpsb
mov
lret
jmp
popl
mov
or
push
sbb
insl
lcall
adc
jl
ljmp
mov
adc
shrl
je
mov
imul
int3
sbb
fidivrs
mov
xor
jb
ret
icebp
faddp
fsubs
mov
ljmp
add
sbb
les
stos
push
ja
iret
push
pop
and
incl
mov
into
push
adc
ficoml
sbb
test
xor
or
and
cmove
mov
and
and
mov
sbb
fstps
sbb
shl
dec
pop
inc
pop
pusha
push
dec
sbb
add
test
jno
fsubrs
xor
ds
jge
jns
adc
insl
xchg
dec
jg
hlt
stos
jle
cmp
les
mov
xchg
repz
rcr
xchg
movsb
std
xor
jnp
dec
jnp
adc
push
and
add
jb
sarl
outsb
jno
rcll
jg
add
pop
andl
out
bound
daa
test
adc
and
mov
lds
inc
lods
scas
imul
xor
adc
jns
push
fiaddl
lods
call
mov
and
mov
lds
pop
pop
movsb
cwtl
pushf
jge
ror
adc
outsb
loopne
add
add
mov
ret
inc
shl
idivl
mov
shl
cwtl
sub
push
jge
add
fistpl
out
jnp
pop
imul
icebp
adc
lds
pop
insl
sub
popa
cwtl
push
aaa
shll
fldenv
mov
pop
push
jnp
rorb
sbb
xor
test
mov
mov
mov
aaa
jo
test
out
or
jb
pop
push
int3
cmp
xor
mov
aas
mov
push
in
rcrb
xchg
xchg
push
imul
cli
jecxz
push
jae
mov
dec
jp
fstp
lock
imul
mov
sbb
div
lods
cmpsl
push
cmp
mov
in
dec
sti
cmpl
loopne
repz
pop
push
pop
cld
push
jecxz
in
out
ljmp
xor
jno
lret
gs
push
pop
mov
repz
pop
outsb
fmuls
sub
jne
repnz
dec
or
mov
test
push
cltd
add
lea
push
imul
rcr
mov
aam
xchg
fidivrs
sub
sub
pop
out
out
js
sarl
bound
mov
xor
cmc
ss
inc
sarl
out
out
add
stos
ja
addb
out
dec
test
inc
jg
mov
loope
faddl
sbb
mov
andl
in
jns
or
inc
lock
inc
insb
jmp
divl
iret
xlat
pop
adcl
mov
jecxz
cli
mov
hlt
pop
cmp
out
rcl
ljmp
out
jbe
in
dec
pop
sahf
jg
xor
jecxz
lret
mov
dec
arpl
sar
cmp
add
cmp
xor
add
jp
lock
add
dec
and
cmpsl
mov
fildll
test
lret
scas
mov
and
fsubrs
mov
int3
cmp
outsl
int
dec
inc
or
inc
cmpsl
popf
mov
inc
mov
data16
std
jno
push
outsl
subl
inc
inc
lcall
lret
gs
int3
sbb
add
inc
mov
arpl
lods
dec
xchg
js
pop
je
or
out
dec
mov
incl
aaa
dec
andb
das
pop
jnp
cmp
lock
fldt
sbb
pop
xchg
hlt
popf
mov
mov
pusha
lcall
iret
push
leave
pop
dec
mov
or
add
mov
jl
mov
fistps
cmovg
std
dec
lods
loop
xchg
fldt
fdivrl
dec
out
jle
std
pop
or
nop
shl
stos
test
cmp
repnz
dec
mov
shrb
sub
hlt
ret
imulb
pop
push
lret
push
cwtl
movsb
add
shll
adc
xchg
stos
movsl
add
pushf
fdivl
inc
pop
cmpsb
xchg
pop
xor
pushf
jne
dec
mov
add
xchg
jae
cmpsb
enter
cmc
xchg
sbb
outsl
add
lcall
sbb
pop
xchg
mov
int
mov
adc
cmp
mov
fisttpl
sahf
mov
bnd
in
sub
pop
adc
adc
cli
rclb
jge
pop
xor
and
pushf
lock
into
mov
sti
mov
aaa
adc
movsl
dec
and
pop
and
movsb
test
pushf
cmp
jnp
pop
orl
or
push
dec
xchg
xor
jo
mov
mov
cmpsl
sub
jns
adc
or
in
inc
cmp
and
popa
int3
aaa
addr16
mov
in
mov
jl
fnsave
fwait
and
rcrb
lods
dec
ss
mull
or
scas
out
cs
or
sarl
jns
mov
inc
aaa
lock
push
mov
aad
jl
fldcw
sbb
mov
pusha
dec
mov
test
dec
and
scas
mov
int3
jae
popa
cmp
add
mov
lret
outsb
jmp
mov
movsb
and
movsb
inc
addr16
cmp
mov
test
push
mov
aad
mov
adc
xchg
cwtl
and
mov
leave
out
je
xor
sbb
fildll
xchg
inc
aas
pop
and
cmpsl
jns
sub
xlat
dec
mov
inc
rolb
push
cs
xchg
aad
cmp
gs
aas
xor
lret
push
mov
sahf
and
pushf
push
xchg
dec
sub
or
rep
xchg
and
push
dec
lea
and
mulb
jle
loopw
leave
add
adc
clc
iret
pop
aaa
mov
xchg
inc
mov
lret
lret
loop
mov
mov
cmp
mov
fdivr
ret
sarl
push
insb
fisttps
add
hlt
rcll
sbb
dec
xor
dec
push
leave
inc
inc
or
jae
movsb
lahf
fidivrs
adc
call
sbb
mov
in
xchg
xchg
popf
scas
imul
sbb
xchg
add
nop
mov
es
repz
fcmovnbe
jle
testl
aad
leave
sti
cs
jnp
leave
rcll
pop
jb
xor
sbb
xchg
push
sbb
jb
cmp
adc
xchg
inc
aas
jne
aas
xchg
pop
pop
sub
lret
xchg
mov
subl
xor
push
rcrb
stc
mov
dec
inc
push
dec
jl
sti
int3
lahf
cli
bound
push
je
outsb
mov
mov
mov
ret
and
in
or
or
sbb
add
das
sub
cmp
jo
int
mov
cmpsl
push
clc
aaa
jl
sub
dec
fbld
jb
rorb
stos
sbb
push
add
stos
ss
popa
xlat
mov
mov
mov
mov
lret
or
mov
add
or
and
cwtl
push
jl
push
xor
and
scas
sbb
xchg
pop
daa
inc
icebp
stos
arpl
xchg
mov
or
jb
xor
push
movsb
sub
xchg
popa
adc
lahf
lds
mov
out
sub
loope
sub
cmpsb
es
add
inc
fistpll
cltd
xor
arpl
outsb
leave
add
addr16
push
into
push
out
addr16
xchg
test
in
xchg
addb
lods
stc
lods
sbb
mov
in
data16
sub
mov
arpl
movsb
dec
mov
popa
cmp
lea
xor
scas
jg
dec
pushf
mov
rorl
or
ljmp
ja
pop
sbb
repnz
mov
mov
add
jp
aaa
popf
cmp
inc
repz
test
mov
adc
in
cmc
xchg
inc
and
rolb
xor
or
rcr
rclb
push
adc
aad
cmpsb
sbb
add
jae
dec
sti
push
jno
sub
add
xchg
inc
movsb
pop
jmp
jl
push
inc
dec
ss
fisubl
mov
xchg
pop
add
cli
xchg
adc
inc
pop
or
push
daa
stos
aam
ljmp
cltd
sbb
and
call
aaa
pop
and
sub
sub
mov
leave
cmp
mov
hlt
clc
in
and
es
sub
jmp
pushf
loopne
sub
mov
adc
das
stc
push
push
lock
pop
scas
pop
scas
pop
dec
out
bound
sbb
sub
adc
fdivrs
pop
sahf
rdtsc
xor
push
aaa
mov
cli
jae
xlat
popf
mov
icebp
fistpll
in
mov
mov
nop
cmp
pop
in
cmp
sub
roll
mov
fcoms
jge
outsb
shrb
xchg
arpl
in
imul
and
aas
sti
mov
push
mov
out
sub
jp
pop
inc
in
leave
jnp
cmc
add
cltd
icebp
ljmp
mov
lret
dec
push
add
lods
in
push
or
pop
or
sti
fstl
add
mov
pop
ret
cmp
mov
insl
cli
xor
out
fbstp
in
push
push
and
and
pop
mov
ret
mov
sbbl
in
int3
pop
xchg
sbb
insb
into
xor
jnp
dec
rorb
xchg
xor
mov
pusha
bound
into
pop
pop
in
pop
ficoml
loop
mov
out
shll
loope
push
jge
fsub
in
lret
sbb
test
lcall
or
jp
mull
xor
push
xchg
or
stos
adc
jns
lods
scas
clc
xchg
pop
pop
std
ss
fisubrs
or
outsl
aad
sub
sub
loopne
xchg
and
pop
ficompl
test
mov
sub
aam
pop
outsl
add
jns
mov
fcomip
sub
jge
hlt
imul
and
or
stc
mov
int3
sub
daa
stos
pop
mov
movsb
sahf
js
cltd
stos
cmpsb
jae
popf
dec
negl
sub
js
in
sub
out
push
push
and
mov
jmp
inc
daa
xchg
mov
jle
mov
fnsave
loopne
xor
xor
movnti
hlt
repz
mov
les
pop
outsb
jne
lds
stc
mov
or
fsubr
mov
out
pop
jo
jne
or
xchg
adc
mov
aad
pop
sbb
movsl
mov
inc
inc
out
push
lea
mov
jle
rol
je
addb
jp
aam
out
mov
gs
add
loop
xchg
add
sub
sahf
inc
repz
in
sub
mov
cmp
xlat
pusha
cmp
jecxz
in
dec
out
add
imul
jg
add
loope
into
xor
mov
mov
mov
jne
xor
insb
sbb
pushf
pop
inc
or
jbe
jne
pop
pop
jecxz
or
hlt
and
mov
sbb
mov
xchg
scas
adc
test
dec
or
movsl
pop
cs
mov
jb
out
xchg
mov
pop
mov
js
xchg
push
cmp
sar
xchg
and
pop
push
add
mov
and
mov
shl
iret
sbb
add
loopne
push
dec
mov
nop
out
pushl
bound
xchg
mov
cmpsb
pop
xchg
cmp
mov
outsl
pop
or
adc
adc
call
out
es
fmul
lret
jmp
out
xchg
dec
imul
std
dec
test
mov
loopne
adc
popa
inc
push
shll
xchg
leave
push
pop
test
mov
dec
fucomi
clc
loop
dec
fbstp
in
push
mov
mov
mov
test
mov
fisubs
sysexit
push
in
scas
js
or
out
and
aaa
mov
cmp
movsb
pushf
inc
scas
sbb
insl
dec
dec
mov
pusha
cmp
mov
xchg
in
sbb
mov
mov
mov
push
and
fwait
lds
xlat
imul
icebp
ficoms
out
mov
or
aad
aad
ljmp
push
xor
pop
ds
sarb
loope
sub
cwtl
scas
imul
xchg
add
cmp
or
or
fldl
adc
popf
mov
xchg
ret
imul
fdivrl
ljmp
clc
mov
mov
lods
cmpl
xchg
mov
mov
fstps
push
cmp
cs
iret
push
pop
sbb
testb
push
scas
push
sub
cmp
and
mov
aad
mov
lock
loope
mov
adc
imul
pushf
bound
push
mov
insl
dec
push
test
xchg
fiadds
push
ficoms
int
or
mov
jmp
and
mov
lret
xchg
test
outsl
xor
pop
mov
fcoml
or
inc
ficoms
lret
xchg
ljmp
out
or
gs
sbb
into
pop
mov
imul
ret
imul
pop
shlb
or
sbb
jne
push
jg
stos
sbb
cmpsb
mov
pop
loopne
mov
sbb
aad
sub
fsub
das
push
shrl
xor
ret
das
std
dec
pop
test
or
pop
inc
cmp
dec
daa
lds
cmp
dec
xor
movsl
sahf
sub
fimuls
mov
stos
jg
jmp
xchg
fmul
sbb
adc
sub
pusha
shr
cld
ret
repnz
imul
jmp
xor
xchg
pop
xchg
pusha
sti
pusha
aas
bound
inc
bound
call
repnz
lahf
jge
lcall
lret
insb
jmp
xchg
pop
sub
push
push
addr16
or
mov
pop
ja
scas
rorl
push
daa
ficoml
pop
aaa
dec
mov
not
fucom
mov
pop
loopne
pushf
cmp
mov
lahf
lock
cmpsb
fs
fldl
mov
aaa
inc
repz
lcall
add
push
out
ret
push
inc
fldcw
jg
dec
hlt
xchg
sbb
shlb
inc
jno
inc
inc
push
repz
adc
fs
mov
sub
ja
test
xchg
mov
daa
cld
hlt
sub
shl
pop
pushf
adc
mov
xor
loop
cmc
aaa
sbb
or
dec
jp
in
loopne
leave
cs
enter
inc
dec
push
je
xchg
in
neg
xor
mov
leave
push
clc
aas
int
jne
or
inc
enter
cmp
shll
or
pop
mov
mov
sub
sbb
data16
xchg
push
xchg
or
imul
push
xchg
add
imul
xor
pop
js
popa
adc
test
arpl
shlb
push
hlt
lock
or
push
and
lcall
ret
insb
dec
push
mov
cmp
lods
adc
out
sub
aaa
in
cmp
and
mov
pop
mov
and
mov
test
xchg
int3
aas
cmp
adc
adc
jae
cmp
aad
fs
xor
mov
mov
adc
mov
repnz
jbe
mov
and
loop
push
sbb
xor
test
cmp
push
aam
adc
fdivrs
hlt
push
pop
sbb
mov
pop
add
mov
adc
inc
jge
lcall
mov
addb
mov
stos
jb
movsl
outsl
lret
pop
inc
jecxz
mov
out
decl
addr16
scas
cltd
add
push
jns,pn
in
dec
in
ret
pop
push
inc
push
fdivs
ljmp
jmp
iret
outsl
xchg
jns
lock
mov
cmp
sbb
nop
movsb
subl
inc
xor
ret
xor
sbb
sbb
cmpsb
clc
fisubrs
lret
or
xchg
lahf
jl
leave
inc
pop
sti
sti
out
push
ds
xor
pushf
out
push
pop
adc
dec
call
ss
push
das
and
push
mov
out
sbb
cld
xchg
cmp
jle
test
adc
insl
jns
mov
jb
pop
sub
jne
mov
mov
adc
sbb
sti
inc
sbb
shlb
ss
xor
test
gs
mov
std
mov
addr16
cmpsl
int3
lret
addr16
sahf
shl
negl
push
adc
xchg
jl
out
pop
pusha
xlat
sti
xor
jb
push
fsubrs
data16
leave
ret
aad
aad
int
data16
sub
out
imul
test
ret
test
xor
jmp
cmc
gs
xor
sub
fcmove
je
adc
pushf
sbb
inc
rolb
pop
gs
lods
push
adc
popf
push
inc
rcrb
ret
stos
movsb
push
lahf
pop
mov
xor
imul
jg
or
sub
cld
out
inc
decb
out
les
lret
sub
xchg
repnz
dec
outsb
hlt
pop
icebp
mov
sarb
adc
adc
inc
leave
loopne
adc
and
leave
dec
lea
in
cmp
in
in
loop,pt
stos
sub
pop
push
mov
sbb
ds
rcrb
push
mov
gs
sub
fidivl
and
or
pop
ljmp
inc
push
mov
mov
xorb
sub
xor
cmpsb
pop
mov
xchg
mov
sti
lds
test
dec
fcmovbe
jne
mov
inc
mov
mov
imul
or
xor
ja
scas
lret
jg
pop
mov
jl
jle
and
adc
mov
adc
mov
push
cmp
pop
cmp
sbb
add
lea
movsb
cmpsl
daa
std
mov
sarb
sbb
movsl
ror
pushf
cmpsb
cmp
aas
gs
dec
jmp
in
xor
and
cmpsl
cwtl
ret
dec
in
lahf
fisubl
sar
lea
inc
cli
mov
rolw
sbb
pop
xchg
dec
stc
mov
pop
push
xor
jb
movsb
push
dec
cld
xchg
inc
jl
xor
lahf
dec
jbe
mov
cmpsl
pop
push
xor
ljmp
pop
xor
jmp
mov
nop
mov
test
sahf
repz
shr
imul
out
leave
and
jle
pop
sbb
mov
pop
xor
push
cs
mov
mov
insl
loop
cltd
mov
push
or
inc
daa
cmc
or
adc
scas
cmp
sti
push
sbb
pusha
and
jmp
fsubr
push
jb
hlt
xor
jns
push
cmp
and
lock
push
cmpsb
imul
loop
mov
mov
js,pn
cmc
push
pop
div
outsl
jmp
dec
fyl2x
pop
outsb
and
dec
fchs
icebp
dec
or
pop
insb
bound
push
out
cltd
das
jae
or
sbb
cmpsb
dec
fwait
ret
push
dec
sbb
mov
cmpsb
dec
scas
fstpt
aaa
xchg
mov
sub
int3
cmpsb
lcall
out
inc
jl
xor
movsb
jns
pop
cmc
cmp
inc
adc
lods
cmpsl
jnp
mov
clc
xchg
mov
push
push
push
addr16
add
cmp
ja
das
jecxz
es
dec
notb
into
push
ss
adc
sbb
movsl
sub
aad
test
pop
test
mov
push
loope
xor
sbb
push
push
arpl
sub
sbb
mov
es
adc
xchg
aaa
scas
push
mov
cmp
cltd
iret
or
mov
addl
fincstp
xchg
int3
daa
lock
dec
rcrb
lods
xor
mov
ret
dec
sub
xor
dec
dec
pop
push
xor
loopne
mov
cmp
movl
ljmp
and
test
pop
mov
push
mov
push
adc
clc
and
and
mov
ljmp
movsb
stos
lcall
or
fcoms
pop
dec
repz
push
xchg
adc
loope
push
pusha
push
cmp
iret
push
mov
jge
push
jnp
and
mov
int
mov
ljmp
add
imul
ds
jno
push
in
xchg
dec
add
sub
lea
mov
and
xchg
fldt
pop
push
inc
stc
xchg
push
xor
sahf
lahf
adc
pushf
iret
movb
arpl
xchg
mov
pop
sub
test
pop
int3
or
cmpsl
cld
sbb
mov
dec
insl
xchg
push
inc
mov
cmp
xor
xor
in
nop
loop
leave
sub
dec
xor
lea
adcb
das
xlat
fdivr
inc
cmp
push
cmp
addr16
fstp
pop
ds
fisubl
int
cmpsl
adc
leave
cld
push
dec
push
imul
fucom
lods
in
imul
mov
adc
dec
lret
dec
push
loope
push
cmp
outsb
daa
mov
and
ror
gs
sub
cmpsl
fdiv
inc
dec
mov
pop
mov
sti
xchg
pop
leave
lcall
xchg
mov
dec
dec
sahf
fcoms
movsl
dec
jo
push
sahf
mov
xchg
dec
in
clc
inc
pop
inc
adc
jle
mov
gs
pop
sti
andl
or
lahf
sbb
mov
and
dec
jno
iret
jo
cltd
push
jo
inc
in
ret
xchg
xchg
stos
fnstcw
add
mov
add
push
es
ret
loope
cmp
jmp
mov
pop
outsb
in
dec
sbb
call
mov
ja
cwtl
scas
popf
imul
add
push
jle
mov
outsb
lret
iret
jo
mov
aad
in
xchg
push
mov
cmp
sub
ret
fnsave
mov
mov
jp
lcall
imul
jb
mov
icebp
ja
lds
jb
popa
imul
insl
and
sub
cmp
mov
jo
push
fwait
push
push
mov
sub
into
mov
jae
ljmp
ds
aaa
insb
and
fwait
dec
lcall
sbb
enter
fnstenv
push
sub
mov
inc
lret
cmc
xchg
sub
negl
or
clc
aam
out
inc
cmp
pop
add
insb
jae
inc
outsb
sub
aad
sbb
outsl
sub
lds
dec
mov
mov
stos
mov
ror
out
push
daa
addl
jecxz
sbb
jnp
dec
pop
pop
sub
push
addr16
pusha
adc
lods
add
add
out
jbe
mov
inc
dec
cmp
mov
lahf
ret
inc
xor
cmc
movsb
mov
push
movsl
push
outsb
jb
cld
movsb
nop
pushf
icebp
cmp
jns
scas
sahf
xchg
xchg
or
push
in
arpl
std
add
mov
mov
andnps
xchg
mov
in
sub
sub
in
js
add
das
cld
adc
out
or
rcrb
push
add
mov
mov
loopne
inc
dec
call
cs
dec
jge
xchg
mov
adc
jns
and
mov
cmpsb
jge
push
xor
push
push
fcmovu
and
mov
sub
mov
ja
sbb
pop
stos
sub
dec
imul
dec
and
and
cmc
les
cli
faddl
data16
and
test
or
int3
push
fbstp
or
inc
shrl
dec
fs
mov
and
loope
mov
dec
xchg
aam
cs
adc
and
jle
cwtl
outsl
das
dec
add
jb
jnp
mov
xchg
sub
cmp
cmc
movsb
cmpsl
mov
ss
mov
fstl
addb
test
mov
pop
push
dec
and
mov
or
xor
cwtl
repnz
add
icebp
stos
outsb
inc
ljmp
dec
jb
stos
mov
xchg
sub
mov
insl
or
pop
or
sub
or
sbb
mov
jae
and
xor
insb
add
dec
fiaddl
scas
sbb
jg
mov
test
or
mov
ja
pinsrw
sbb
je
inc
call
cmc
leave
cmpsl
ss
into
test
mov
popf
dec
jno
sub
movsb
jae
inc
xchg
frstor
cltd
iret
scas
fwait
ret
ljmp
stc
cwtl
adc
inc
or
setp
push
dec
jmp
popa
pop
stos
enter
mov
gs
stos
int3
pop
rorb
insl
fwait
fistps
xchg
mov
gs
push
lods
ljmp
jg
aaa
and
imul
xor
mov
mov
mov
pop
xchg
outsl
rclb
out
mov
cmc
in
les
jl
imul
lahf
test
cmp
and
cmp
sub
std
shll
rorl
jg
or
je
mov
out
xor
push
push
icebp
push
test
mov
xor
add
lcall
add
push
int3
movsb
das
int
into
sub
call
data16
inc
cld
dec
cmp
xorl
in
xor
mov
pop
pop
cli
movsl
xor
mov
std
aam
cmp
ss
icebp
sub
pop
dec
mov
mov
push
sub
clc
cmp
sbb
jnp
ja
pop
xor
ret
cmp
test
repnz
xchg
in
in
call
repz
loop
and
adc
adc
pop
shlb
xor
sbb
sub
fimuls
xchg
xor
sahf
sbb
out
insl
ficompl
hlt
adc
les
shrb
cmpsb
and
sbb
mov
out
adc
xor
mov
ror
cmovg
inc
bound
jge
push
js
out
rorl
dec
imul
movsb
sub
enter
enter
jg
adc
daa
rcll
and
dec
cli
loopne
frstor
cltd
inc
inc
out
add
or
mov
mov
xchg
or
nop
or
dec
movsl
mov
mov
push
pop
dec
cmp
dec
dec
lret
push
lahf
xchg
mov
mov
push
push
push
push
clc
or
dec
mov
andb
std
add
imul
xchg
loop
stos
adc
out
imul
inc
subl
mov
push
push
jp,pn
cmp
xor
pop
je
jno
inc
add
test
push
in
out
xchg
lock
lahf
push
movsl
push
std
rcrb
inc
jg
fs
dec
stos
scas
xor
or
shlb
push
mov
arpl
inc
roll
gs
sbb
mov
pop
loopne,pn
filds
sbb
in
pusha
and
jae
aam
cmpsl
fnstenv
ret
das
test
bsr
fldenv
notb
jmp
adc
in
jnp
lds
inc
test
mov
mov
or
arpl
scas
cld
mov
fldcw
xchg
cmc
fst
mov
jbe
scas
mov
xor
les
mov
mov
ljmp
xor
xchg
dec
adc
sub
std
mov
or
xchg
js
ss
int3
push
sbb
and
dec
jmp
sbb
enter
push
push
add
pop
loop
rcrl
or
mov
sti
jle
adc
dec
push
xchg
jbe
ficoms
in
pop
sar
push
xchg
sbb
and
les
mov
xorb
ds
mov
inc
inc
push
xchg
jmp
test
nop
xor
stc
mov
fcmovnu
push
repnz
fcoms
dec
cmpsb
jmp
mov
iret
insl
ss
ja
dec
pop
mov
cmpsb
int3
push
jo
jl
or
stos
cli
rol
sti
cs
test
pushf
mov
out
outsb
std
sti
cld
add
xchg
mov
xchg
aam
test
shll
sbbl
icebp
sub
jp
fwait
or
dec
dec
pushf
fnsave
jnp
inc
lret
filds
push
clc
fisubrs
fistps
jb
pop
pop
sub
adcl
cwtl
and
jnp
repz
out
sub
mov
xchg
js
dec
jae
jg
outsb
xlat
lods
mov
test
fcompl
js
adc
mov
aas
pop
repz
mov
shlb
xchg
pop
lods
xlat
mov
add
sub
xchg
or
or
push
rcll
rclb
mov
mov
pushf
or
pushf
jp
shll
jb
sub
dec
ljmp
gs
inc
in
pop
out
mov
cmpsb
add
inc
pop
rorl
mov
sar
jnp
ljmp
push
mov
lret
pop
mov
mov
fmuls
jae
out
lret
xor
cmpsl
lea
pusha
dec
mov
xchg
je
cwtl
adc
sub
loop
test
bound
jl
pop
mov
add
jne
repnz
push
or
aad
push
outsb
dec
cmp
insb
std
fwait
xchg
repnz
xchg
mov
arpl
inc
out
popf
das
mov
sub
jle
arpl
dec
loope
xlat
inc
xor
mov
cwtl
movsl
ret
pushf
push
insb
arpl
pop
icebp
add
mov
je
mov
mov
inc
sbb
stos
mov
outsb
add
or
stos
sub
ror
mov
xchg
mov
or
add
xor
xor
in
cmp
push
mov
ret
fcompl
sub
jns
rol
jb
add
les
cs
hlt
sub
xchg
push
call
mov
sub
push
mov
ret
inc
adc
repnz
xchg
stos
fildll
push
push
xor
out
fsubrp
mov
fs
lods
sahf
push
and
lret
adc
xchg
shl
orb
mov
mov
dec
adc
push
fisttps
sbb
cmpsl
shlb
out
hlt
push
outsl
sbb
push
sub
mov
movsb
lods
popa
lcall
dec
fwait
and
mov
jbe
and
dec
sbb
push
cli
push
fldcw
aas
dec
cld
adcb
lret
cwtl
xchg
fstpl
insb
jmp
jg
mov
mov
mov
int3
imul
das
imul
stos
loopne
and
dec
clc
test
push
pushf
fcmovbe
cmpsl
jae
mov
cli
and
adc
dec
in
mov
add
cmpsl
lcall
nop
dec
cmp
int3
push
pop
mov
stos
cmp
mov
gs
rolb
clc
gs
xlat
in
cmpsw
and
jne
arpl
cs
sti
push
and
push
sub
jns
insb
pop
int3
popa
cmpsb
sbb
pop
cmpsl
xor
ud0
and
jo
scas
add
hlt
aam
cli
or
jae
popf
pop
pop
stos
hlt
fxam
test
and
jmp
add
and
movsb
mov
mov
jo
mov
imul
cltd
xor
add
push
in
orl
movsl
xor
jbe
into
sarb
jbe
repz
out
loop
xchg
sub
cmp
scas
sub
push
lock
fmul
incb
sub
inc
dec
jbe
dec
dec
cld
cmpsl
icebp
je
add
cld
sub
dec
dec
fiaddl
testl
das
or
dec
loope
pop
fisubs
pop
mov
and
aam
jo
js
call
pushf
push
push
fwait
pshufw
sti
mov
popa
outsl
fwait
shll
xor
mov
nop
ljmp
add
push
jle
push
jmp
xor
dec
loop
sbb
pop
dec
xor
inc
dec
cmp
push
nop
jne
paddusw
xchg
imulb
sub
mov
add
ret
cmp
mov
adc
jno
and
and
cmpsl
cltd
dec
mov
pop
or
bound
retw
fldcw
or
sub
dec
subb
mov
mov
fsubs
or
movsl
push
ljmp
inc
movsl
push
ljmp
enter
mov
add
xor
cmp
push
int
rcll
lods
sub
ret
repnz
xchg
jmp
inc
sub
ror
jmp
out
sbb
data16
icebp
jg
hlt
in
pop
inc
pop
mov
shll
pop
leave
lcall
or
int3
mov
add
cmp
dec
test
add
add
je
jl
jnp
mov
idivl
cwtl
mov
rol
daa
add
into
enter
mov
dec
test
ss
sub
shll
mov
xchg
xchg
bound
xor
ja
mov
out
jb
loope
fbstp
push
pop
out
xchg
mov
das
dec
ljmp
scas
mov
je
pop
cmp
pop
xchg
out
inc
adc
xor
call
cld
sbb
fisubs
dec
jnp
dec
jbe
int3
mov
jmp
addr16
inc
test
and
lds
cmpsb
pusha
lea
push
cld
rorb
pop
sbb
jp
add
push
cmp
aas
xchg
pop
mov
cmp
int
mov
sub
lcall
dec
mov
adc
and
insl
in
mov
sub
cmp
xchg
fstps
xchg
nop
aaa
and
xor
pop
lcall
mov
and
popa
jg
pusha
leave
cmp
mov
adc
ret
aad
jecxz
ret
cmp
sub
in
movsl
cmpsb
data16
pop
fbstp
popa
pop
sbb
jbe
bound
or
inc
in
push
jle
rcrl
js
sub
sti
mov
aam
enter
xchg
jp
xchg
stos
scas
js
out
ljmp
xor
imul
mov
popf
int
loope
mov
sbb
mov
int
fistpl
pop
mov
mov
push
mov
sub
cwtl
xchg
fistpll
xchg
jo
in
roll
mov
cmc
adc
lea
addr16
or
sub
pop
mov
int3
cltd
leave
xor
sbb
pop
popa
xchg
inc
rcl
sub
add
add
in
and
mov
push
or
push
push
sub
out
stos
adcb
pop
jl
pop
lock
mov
in
xor
mov
in
push
shll
mov
mov
jp
dec
push
fadds
xor
xchg
mov
loop
repz
fbstp
divb
pop
fucom
push
into
adc
mov
sbb
jp
mov
cltd
mov
popf
arpl
cmpsl
lods
and
jmp
idiv
xor
into
pop
and
xorb
xor
fiaddl
ja
insl
or
daa
xchg
sub
cmc
loop
es
or
jo
fistpl
xchg
lcall
cltd
cmp
lret
pop
test
loope
cld
popa
movsb
add
adc
and
xchg
or
jge
lret
dec
cltd
xor
inc
xor
lds
cmp
mov
jge
cmp
ss
std
push
add
iret
sbb
stos
fadd
lcall
push
cmp
fisttpll
out
pop
mov
push
and
and
andl
add
jae
mov
scas
fwait
adc
cld
loop
sub
pushf
jg
cmp
cltd
cmp
addr16
cli
lcall
mov
push
outsb
xor
aad
or
pop
test
ljmp
adc
shll
cmpsl
rclb
