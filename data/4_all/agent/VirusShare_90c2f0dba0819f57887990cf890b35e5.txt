add
jecxz
push
ljmp
add
stc
lea
imul
cmp
enter
clc
jle
inc
cmpsl
jnp
mov
adc
mov
mov
inc
fiadds
ljmp
cmp
popa
xor
pop
lret
mov
pop
adc
push
rol
xchg
push
jae
inc
jne
jns
scas
xorb
fstps
adc
cmpb
aas
jmp
xchg
stc
mov
mov
dec
jae
sbb
xor
inc
popf
pop
pusha
test
adcb
out
stc
xchg
cmp
pop
test
imul
cmp
add
and
adc
xor
mov
xor
repnz
fldcw
mov
lret
pushfw
lcall
jns
and
sarl
inc
or
out
int
adc
xor
pop
inc
gs
cmpsb
pop
fs
dec
pushf
sbb
push
nop
jg
and
sub
test
js
fwait
adc
cmpsb
cmc
jl
sub
enter
jnp
sbb
add
push
push
daa
arpl
cmp
add
xor
cmpsb
sbb
pop
lock
jne
jp
lods
mov
lcall
pop
mov
insb
adc
or
jne
sub
stos
jp
arpl
pusha
je
outsb
push
lods
xchg
gs
jl
sbb
in
fstpt
sub
push
mov
xor
aaa
push
adc
insl
nop
mov
mov
stos
dec
inc
mov
adc
jmp
popf
fwait
int
pop
xchg
lods
jne
pop
jle
dec
or
add
int3
fcompl
adcb
fnstenv
xchg
ja
dec
pop
sub
out
lsl
mov
mov
push
js
inc
jo
mov
ss
sub
lods
inc
jmp
xor
xchg
sahf
loopne
sbb
outsl
mov
ret
cmp
mov
sbb
lret
movsb
xor
mov
stos
xor
ja
loop
mulb
daa
or
xchg
in
inc
mov
sub
cmc
fnstcw
outsl
fbstp
stc
shr
in
lods
mov
out
push
xor
sbb
xchg
aad
cmpb
sub
mov
jle
stos
imul
dec
aad
shrb
mov
cmp
lcall
enter
xchg
shrb
pop
arpl
mov
sub
cmc
adc
cs
pop
sbb
inc
push
sub
xor
pop
lahf
into
adc
pop
iret
push
lahf
data16
sahf
inc
sub
fsubrl
adc
xchg
nop
bound
jp
jns
xchg
mov
jecxz
sbb
inc
pop
scas
push
repz
jp
jl
mov
dec
push
outsb
push
sub
mov
and
fwait
cltd
pop
cmp
les
test
add
fnsave
add
and
jne
jno
dec
mov
pop
dec
pop
dec
fistpl
add
mov
cmc
std
inc
dec
ret
std
int
add
std
inc
popa
dec
dec
add
movsb
or
adcb
das
lods
in
popa
inc
mov
in
jnp
pop
imul
adc
xchg
xor
mov
cmpsl
loopne
jnp
mov
add
dec
cltd
pop
loop
in
mov
movsl
test
xor
pop
mov
jnp
popl
fcompl
cld
fisttpll
daa
push
popa
xor
dec
stc
int3
dec
mov
xchg
shll
pop
lea
or
mov
jge
push
xchg
or
sbb
or
dec
push
mov
in
xchg
inc
rorl
int
lock
mov
fldenv
fmul
arpl
imul
pop
and
cmp
sub
rol
stos
push
mov
movsl
and
pop
mov
push
jecxz
aad
mov
adc
loopne
push
jp
dec
mov
mov
rclb
icebp
or
jl
jg,pn
sbb
dec
flds
cmp
sar
aaa
hlt
pop
scas
xlat
loop
les
jno
add
sbb
hlt
ljmp
sbb
div
loope
arpl
les
dec
mov
aas
stc
js
sub
jmp
sbb
pop
icebp
out
jg
aad
add
and
loope
lahf
ds
add
data16
js
ljmp
mov
into
nopl
mov
ficoms
lret
jbe
push
call
jne
imul
arpl
das
arpl
jo
mov
push
or
inc
xchg
mov
mov
mov
aad
jnp
xlat
adc
mov
push
and
or
and
push
pop
mov
pop
je
insl
xorb
ret
out
jne
stos
pushf
xchg
xor
sub
and
mov
sbb
les
dec
scas
jnp
fiaddl
or
inc
mov
push
and
bound
out
iret
in
sub
inc
pop
stos
cmpsb
movsl
fmul
inc
fadd
cltd
dec
ds
add
stos
loop
and
ss
cld
fs
pop
xchg
inc
repz
jg
subb
testb
jmp
xchg
mov
leave
cmp
adc
and
pop
out
iret
and
movl
jp
popf
or
cmp
das
fstps
out
decl
popf
dec
inc
imul
cmp
mov
sub
aam
adc
insb
mov
xlat
das
out
pop
cmc
xor
sbb
fdivrp
inc
mov
inc
and
add
ss
sbb
cli
sub
test
sub
cmpsb
jge
pushf
pop
jo
mov
jo
sub
mov
cmpsb
out
or
rol
mov
push
loopne
jmp
mov
jl
inc
repnz
mov
sbb
pushf
xchg
jb
add
imul
orl
jns
adc
push
hlt
lret
sbbl
jb
jnp
orps
jae
pop
cmpsl
sbb
in
out
sub
call
xor
sub
xor
pop
mov
pop
mov
mov
and
fstl
cmpsl
jae
pop
ljmp
ds
cltd
cmpsl
mov
lcall
stos
adc
addr16
add
jno
movsb
adc
mov
mov
imul
push
xchg
stos
aam
dec
xchg
push
mov
push
mov
imul
arpl
arpl
inc
pop
shrl
popa
adc
lods
jb
outsb
cmpsb
xchg
movsl
subl
push
dec
sbb
adcb
inc
xor
and
test
add
ss
pop
loop
sbb
and
jmp
ret
cmpl
out
cmp
pop
sbb
lret
aad
cmpxchg
adc
xor
mov
mov
scas
mov
stc
aaa
js
or
enter
xlat
or
test
pop
popa
out
es
outsl
jae
lea
xor
pcmpeqb
mov
test
push
movsb
dec
xchg
inc
mov
dec
mov
mov
adc
fwait
lcall
jg
pop
aas
ret
ret
fmull
xor
push
subb
mov
mov
sub
cltd
arpl
jmp
mov
loopne
aad
sbb
sbb
mov
mov
fcmovnu
inc
jecxz
add
push
and
mov
or
sbb
outsl
jp
out
mov
sub
inc
cli
sbb
leave
jle
sbb
jecxz
inc
xchg
dec
inc
inc
dec
dec
shr
enter
insb
loopne
das
cltd
insb
dec
das
in
clc
addl
hlt
add
ret
mov
imul
xchg
and
outsl
push
call
ret
cmp
fs
xorb
jo
inc
sarb
inc
sbb
adc
idivl
sbb
pushf
imul
lret
cmp
mov
repz
xchg
jbe
pop
add
data16
insl
stos
ret
stos
jae
cli
scas
mov
adcb
es
mov
repz
xorl
dec
sub
and
dec
notb
daa
dec
fdivl
and
sub
add
or
aad
add
dec
loopne
call
aad
out
mov
popa
jmp
dec
pop
lds
push
mov
out
das
std
push
es
ds
addr16
cmp
inc
out
movsl
mov
test
rcr
loopew
jmp
inc
in
out
sub
fadds
lea
pop
cmp
lcall
push
jp
dec
sub
pop
aam
mov
ret
add
out
jbe
fwait
iret
mov
cmp
sbb
scas
inc
cli
cmp
insb
addr16
dec
jmp
mov
xchg
pop
insb
insl
sti
hlt
add
sub
xor
inc
mov
je
scas
lret
movsb
or
xchg
mov
pop
cmp
notb
mov
and
orb
push
push
xlat
cmpsb
sub
test
das
add
sbb
daa
or
adc
rcrl
orb
test
test
pop
popf
inc
insb
mov
sub
inc
add
mov
push
test
or
dec
or
or
cs
mov
stos
insl
add
outsl
mov
jbe
dec
pop
pop
int
fimull
jecxz
inc
out
xchg
xchg
repz
in
mov
push
ja
dec
addr16
neg
and
sub
sbb
mov
mov
movsl
aam
or
dec
cmp
js
dec
jl
out
cmp
arpl
sarl
aam
das
adc
xchg
push
cmp
repz
fs
sti
scas
sbb
mov
inc
xor
lahf
jbe
pop
je
aaa
ja
pop
bound
dec
pop
xchg
xchg
hlt
outsb
jecxz
mov
cmpb
std
ficompl
repz
dec
cwtl
xchg
xor
jns,pn
sbb
out
pushf
insb
and
test
mov
lds
and
push
mov
xor
dec
aaa
mov
leave
mov
sub
insb
push
push
inc
aaa
cltd
popf
mov
adc
add
xchg
xchg
fdivl
notl
in
adc
jp
push
movsb
fs
sahf
out
sub
lahf
bound
cmp
and
inc
pop
dec
out
push
xchg
lahf
xchg
and
adc
add
mov
in
in
inc
clc
loopne
cmc
jge
xor
cld
outsl
mov
xlat
and
cmp
xchg
push
orl
add
pusha
scas
pop
lock
ds
test
popf
mov
jge
mov
je
outsb
imull
sub
and
and
mov
add
outsl
movsl
add
out
inc
cmp
or
pop
mov
xchg
dec
movsl
movsl
pop
push
xor
xchg
push
sbb
mov
ret
mov
push
mov
xor
xor
out
clc
popf
lea
out
xchg
mov
and
push
pop
clc
outsl
je
orl
pop
ret
aam
dec
xor
inc
sub
pusha
sub
jp
mov
pushf
rcrw
les
movsb
repz
lea
out
xchg
or
ds
and
mov
test
xorb
rcrl
inc
dec
or
cmp
mov
inc
pop
test
scas
daa
sub
and
mov
jnp
aam
mov
mov
repnz
cmpsl
aam
or
lock
jmp
testb
mov
vunpcklpd
clc
rcrl
adc
aas
repz
mov
sbb
mov
cmc
fwait
jb
loop
sbb
clc
js
cmp
lock
movsb
repz
ds
jle
cmp
jecxz
add
xchg
ja
repz
movsb
ss
je
imul
fisttpl
jmp
mov
cmp
dec
inc
adc
xor
fstl
mov
mov
push
popa
arpl
fs
xor
sarl
shlb
mov
bound
shrb
lahf
cli
mov
sbb
shlb
stos
jl
ret
sti
cmp
mov
push
in
enter
push
push
sub
cli
sbb
sbb
call
push
nop
insb
lcall
sub
cmp
mov
mov
sub
push
ficoml
adc
inc
cmpsl
mov
aas
dec
inc
popa
loope
lock
idivb
dec
pushl
mov
mov
adc
jb
jne
cmp
jp
push
jle
push
mov
push
mov
outsl
mov
push
push
xchg
add
push
jo
fildll
mov
pop
aaa
lcall
call
mov
cmp
cli
je
lods
mov
test
cmp
mov
shll
int3
xchg
iret
pop
mov
std
cmpsl
add
dec
mov
fs
lds
mov
sti
jle
push
out
in
aaa
cltd
xchg
into
jb,pn
shlb
sub
jcxz
lods
mov
inc
adc
xor
xor
inc
jns
ret
jecxz
pushf
dec
sbb
add
stos
push
sti
pop
clc
into
push
mov
adc
sbb
xor
xchg
insl
or
mov
jg
ja
xchg
mov
adc
repz
mov
jecxz
subl
sahf
repnz
xlat
lcall
fisubrs
mov
cld
andl
fcoms
mov
pop
rclb
and
add
pop
xchg
rorb
insl
pop
push
adc
xor
lahf
test
adc
xchg
add
and
movsl
shlb
or
sti
mov
outsl
data16
mov
rorl
sub
fwait
jmp
mov
fisubrl
or
fwait
movsl
ds
iret
ja
jns
mov
inc
fldt
mov
inc
pop
xor
add
cmp
fisubrs
mov
adc
daa
sbb
xchg
push
sub
lods
push
push
pushf
push
popf
push
jns
cmpsl
shll
je
fs
imul
std
mov
pop
push
popf
jae
jg
mov
cs
mov
and
clc
ret
mov
sbb
jmp
aas
pop
jl
jno
mov
mov
fs
cmc
mov
sbb
aad
gs
jge
movsl
icebp
sbb
mov
jae
shlb
jbe
xchg
mov
lea
pop
call
jno
pop
scas
sub
fs
test
xor
mov
xlat
sbb
dec
xor
test
push
and
leave
inc
cmp
xor
test
mulb
xchg
pop
mov
ret
jg
fnsave
pop
mov
adc
mov
push
arpl
push
sti
idivb
mov
fcompl
daa
dec
mov
negl
xor
dec
mov
aaa
push
sbb
in
mov
fstps
test
decb
pop
mov
pop
cmpsl
adc
mov
ret
push
or
pop
inc
xor
sub
stos
pop
add
dec
pop
add
enter
push
and
arpl
mov
add
or
stos
clc
jle
loopne
and
xor
xchg
int
cmovne
jae
scas
xchg
popf
cltd
rcrb
pop
and
pop
push
test
incl
ret
push
pop
pop
out
ret
sub
inc
push
cmp
or
addr16
pop
jmp
cld
xchg
or
hlt
jge
inc
dec
pop
adcb
mov
fmul
cmp
add
jle
sahf
test
adc
pop
xor
mov
pop
test
jp
push
adc
aaa
xchg
stc
jno
fidivrl
enter
mov
repnz
lret
pop
jno
xchg
sar
adc
adc
pop
jle
ja
outsl
sub
call
adc
sub
xchg
add
xchg
xchg
add
adc
inc
inc
out
into
mov
ret
imul
or
adc
call
pusha
jecxz
push
adc
inc
pop
sub
or
xchg
xlat
lea
shll
in
test
test
int3
test
aam
fnstenv
je
loope
sub
and
leave
pop
es
scas
lahf
ljmp
shrl
or
xor
or
push
xor
add
ja
out
sbb
xchg
aaa
add
daa
push
dec
mov
dec
ja
xor
pop
arpl
inc
lock
xor
cmp
xor
push
fldl
sub
outsl
adc
pop
sub
rorl
sarl
ficoml
and
cmp
jp
stc
jne
dec
mov
clc
scas
les
fistpll
cmp
pop
push
int
scas
fcompl
jb
push
icebp
lea
mov
sub
insb
sub
imul
testb
out
or
stos
stos
lret
jmp
sub
clc
adc
ljmp
insl
push
xor
mov
ds
mov
sbb
and
insb
sti
mov
sub
pusha
add
loope
aas
jb
mov
mov
xor
testb
repz
pop
sbb
jecxz
out
jecxz
xchg
lret
inc
out
or
xlat
jo
lods
inc
sti
int
sub
jnp
jno
rcrl
adc
mov
leave
xor
push
fsubr
and
aas
gs
adc
add
cs
jbe
enter
add
movsb
sahf
add
sub
xchg
add
and
hlt
mov
xchg
mov
movsl
test
mov
sbb
scas
outsl
cwtl
scas
addb
fcmovb
xor
pop
jmp
cmp
mov
add
dec
jmp
add
and
mov
ljmp
jne
aad
lods
mov
xchg
push
dec
lea
andb
lret
stos
pop
enter
cmpsl
jns
jl
jl
cmpb
mov
xchg
sbb
stos
mov
inc
call
xchg
push
pop
cld
sti
sub
leave
lret
jae
int
jge
mov
lods
imul
jno
sahf
test
out
dec
inc
in
out
lds
mov
nop
jge
dec
imul
add
mov
in
and
push
mov
in
fistl
into
mov
cmpb
and
xor
rolb
insb
sub
and
test
and
out
mov
aaa
push
pushl
jae
push
mov
sbb
cltd
sub
sub
push
xor
shll
and
cmp
mov
mov
jp
jecxz
je
push
inc
xor
mov
pop
clc
add
mov
hlt
xchg
adcb
sbb
xor
cmp
xor
dec
adc
mov
or
lock
shll
push
test
inc
insb
mov
icebp
jne
js
popf
lods
inc
inc
fcmove
or
std
pop
push
cmpb
into
xchg
push
xchg
ss
test
sbb
cltd
cmp
xor
fwait
mov
sub
sub
push
mov
jecxz
lods
std
mov
xor
xchg
hlt
pop
add
sub
push
cmp
bound
and
push
ds
arpl
pop
sti
arpl
sub
lahf
xchg
add
inc
cmp
movsl
notb
rcr
sbb
jecxz
jle
into
popa
addr16
mov
push
clc
push
jae
and
pop
adc
gs
cmpl
sarl
xor
enter
xor
inc
movsb
pop
stos
mov
out
lods
push
mov
jecxz
out
cmp
dec
movsl
test
xchg
imul
je
jp
sub
insb
dec
lahf
mov
ds
int
mov
test
lock
insb
pop
les
xor
mov
or
mov
sbb
or
fucom
pop
push
adc
in
xchg
sub
popf
insl
in
movsb
xor
lods
in
and
dec
jnp
sub
rcll
stos
sbb
pop
add
and
sbbb
jp
fcmovb
cmp
fdivl
sarl
inc
leave
jmp
or
movsb
sahf
sbb
adc
mov
or
adc
divl
les
outsb
mov
add
jae
push
popa
xor
cld
sbb
push
pop
add
stc
faddl
insl
fwait
add
js
mov
mov
xchg
sub
movsl
push
pushf
test
jno
icebp
pop
dec
std
popa
lods
aad
adc
outsl
mov
imul
ret
xchg
cmpsb
push
mov
xor
lret
mov
mov
pop
cli
pop
lock
inc
rorl
dec
test
incb
pop
or
sub
loopne
pop
sub
aaa
adc
pop
das
fistps
fsubrs
pop
jb
stos
sahf
jnp
push
stos
xchg
sub
mov
mov
jns
fcomps
mov
iret
inc
mov
mov
loop
sub
std
mov
jns
or
cmp
mov
lods
mov
inc
lea
mov
mov
mov
add
out
pop
jle
es
jno
push
rol
add
jno
and
mov
sub
pop
mov
loop
imul
mov
ljmp
pusha
and
rorb
fidivl
dec
movsl
pop
or
insb
clc
sub
push
repz
jge
bound
push
ss
xor
xchg
inc
lock
fldt
mov
jbe
push
lret
lds
xor
daa
xchg
lahf
psllw
mov
je
xor
jnp
sub
pushf
aaa
push
cmpsb
and
mov
xchg
xor
out
push
mov
out
stos
es
xchg
mov
frstor
insb
icebp
cmpsl
mov
jmp
popf
fwait
test
orb
sahf
sbb
or
mov
xor
fdivrs
enter
mov
cmp
ss
push
and
or
fsub
incl
andb
jae
jne
sti
dec
out
scas
pop
push
inc
push
pop
stos
out
popa
aas
inc
in
push
xor
xchg
dec
lock
orl
add
lret
clc
pusha
scas
mov
adc
adc
ficompl
sub
and
adc
addb
dec
inc
lcall
stc
push
in
in
nop
test
lds
sar
fs
movsl
ss
add
push
jmp
out
xchg
andb
jmp
arpl
adc
jg
and
popl
inc
cmc
adc
loopne
mov
int
insl
mov
mov
xor
test
mov
movb
mov
mov
repnz
outsl
push
add
cwtl
cltd
testb
jp
and
and
aas
aas
dec
jnp
inc
jbe
push
xchg
mov
sbb
popf
shl
pop
in
inc
xchg
xchg
jl
and
and
sbb
push
addr16
sub
addr16
inc
push
xchg
pop
add
xor
xchg
es
mov
jg
mov
push
dec
jge
inc
in
mov
lea
and
mov
jae
aaa
mov
xor
imul
dec
pushf
rcrb
xor
mov
push
lock
push
test
fstpt
aad
xchg
xor
mov
jno
jp
scas
inc
mov
stc
adcl
fwait
xchg
inc
xchg
pop
xchg
push
push
mull
enter
insl
rep
scas
sbb
ror
lods
jae
fidivrs
testl
stos
xchg
sarb
jg
adc
sbb
shl
lods
popf
mov
aaa
inc
or
clc
dec
xchg
xchg
stos
mov
pop
mov
push
cs
sub
stos
add
jns
and
cltd
fwait
inc
adcb
inc
mov
test
pop
mov
jae
sti
sbb
or
out
sub
shll
cmp
and
or
push
mov
in
push
and
andb
dec
mov
xchg
xchg
shl
xchg
push
mov
fdivs
add
shrl
iret
sub
and
and
jae
xchg
dec
inc
rolb
cmp
inc
mov
mov
iret
fs
sub
jmp
test
jg
sbb
mov
std
sbb
pop
bound
mov
push
stc
jnp
xlat
daa
pop
cmp
shrl
fwait
scas
jb
fbld
jmp
std
ss
cltd
mov
xchg
es
fisttpl
sbb
xchg
sti
push
sub
pop
cld
dec
xor
lods
push
pusha
lret
or
push
pop
adc
ret
xchg
lods
pop
or
mov
xor
loop
cmp
ret
pop
mov
xchg
fsubrp
insb
mov
pop
sbb
adc
stos
xchg
dec
mov
cwtl
movsb
hlt
jge
mov
cmp
aas
shlb
xchg
sbb
pop
jecxz
or
pop
ja
clc
xchg
outsb
lods
pop
pop
sarb
hlt
mov
pop
sub
mov
ud2
mov
scas
adc
popa
add
sub
adc
flds
mov
lret
jecxz
mov
jno
std
and
mov
push
mov
and
sbb
adc
xchg
cmp
push
pop
leave
pop
test
subl
cmp
pop
ret
fisubrs
pop
push
push
jmp
subl
or
stos
mov
xchg
lcall
test
ret
shlb
lret
ds
mov
mov
ret
nop
xor
xor
cltd
rcrl
add
aaa
les
adc
jp
mov
test
je
lock
adc
cmp
cmpsb
les
icebp
sbb
push
adcb
enter
shrl
sub
push
fs
ficoms
push
shll
and
sub
shll
rcrl
cltd
loope
jbe
lods
mov
notl
fstl
xchg
xchg
popa
mov
mov
div
fistpl
out
shr
hlt
std
hlt
push
test
mov
into
insl
cmp
lock
out
lret
cmp
sbb
out
repnz
arpl
clc
xchg
and
loopne
ret
cwtl
mov
insb
ds
mov
cmp
lea
mov
incl
fmuls
sbbl
arpl
lea
mov
push
inc
es
rclb
or
mov
mov
push
imul
jl
or
add
stos
sbb
divl
xchg
mulb
mov
jle
push
lock
push
dec
fcmovnb
add
mov
inc
add
scas
xor
outsl
push
pop
pop
inc
dec
flds
test
dec
stos
loopne
mov
ret
lods
aad
mov
fisubs
lea
stos
ja
add
cmp
mov
sub
das
sbb
addb
flds
pop
xchg
ss
data16
mov
mov
sub
pop
push
push
daa
mov
mov
in
push
mov
jno
mov
pop
out
outsl
inc
cmp
fs
sub
loopne
inc
fcompl
rcrb
out
mov
lret
or
pop
sub
mov
pop
add
inc
mov
je
mov
add
pop
fcmovbe
mov
mov
gs
ret
test
xchg
pop
icebp
pop
cltd
mov
fwait
xchg
test
dec
les
pop
icebp
lcall
or
inc
fcoms
pop
xor
mov
insb
cmp
xchg
in
lock
ret
add
repnz
je
push
xor
mov
jecxz
dec
pop
and
mov
arpl
jo
mov
sahf
cmp
adc
inc
nop
fcmovnbe
mov
lock
and
cmpsl
sahf
mov
mov
jmp
xchg
test
sub
clc
jle
push
mov
shrb
push
jne
dec
dec
test
dec
pop
out
std
push
loop
idiv
xchg
or
xchg
lea
addr16
lods
pop
or
xchg
sbb
xor
arpl
sub
fwait
mov
jns
adc
adc
sub
xchg
sbb
outsb
and
lcall
sahf
ja
cmp
jecxz
push
lea
repz
mov
push
xchg
out
mov
cmp
imulb
xor
insb
mov
inc
xchg
add
stc
pop
push
cmp
mov
rol
jne
or
jno
and
jg
mov
and
sar
outsb
sbbl
stos
and
call
test
mov
jae
jnp
into
cmp
mov
mov
or
pop
gs
cmpsl
and
jecxz
add
in
and
outsb
dec
ljmp
bnd
push
mov
push
cld
stc
loope
rcll
in
xor
je
pop
imul
cltd
push
mov
xchg
mov
inc
jge
inc
inc
shrl
mov
loope
fs
andb
cmp
aaa
jecxz
sbb
fstpt
insl
notb
imul
mov
js
das
mulb
pop
fwait
add
fisubl
jae
cmp
push
dec
add
xchg
sbb
adc
cld
loop
mov
dec
lods
xor
push
push
sbb
cmp
mov
or
pop
push
dec
daa
in
lahf
pop
imul
mov
or
leave
sbb
clc
scas
sti
cmp
popf
scas
adc
cltd
sub
ljmp
mov
cmp
mov
adc
xchg
outsb
ljmp
add
flds
dec
enter
in
lret
adc
in
add
add
xor
sbb
adc
jg
enter
sbb
or
inc
mov
lods
pushf
inc
mov
repnz
cmp
mov
fisubrs
and
fdivl
stos
lods
test
loope
dec
push
push
divl
push
cmp
xchg
fcmovnb
out
cltd
cltd
adc
insb
and
adc
cmp
aas
clc
mov
enter
push
out
pop
xor
and
pop
imul
movsl
push
movsb
in
xchg
jl
sbb
loopne
push
das
div
in
mov
movb
add
mov
mov
cltd
sbb
sbb
je
pop
mov
sub
clc
xchg
jne
mov
je
add
mov
xor
mov
xchg
and
out
lods
inc
jecxz
pop
out
out
or
out
xchg
jp
out
lods
mov
xchg
jmp
fs
jns
loope
shlb
mov
xor
jecxz
fidivrl
movsl
popf
jne
jb
das
dec
xchg
into
xor
mov
xor
push
sar
dec
xor
xchg
sti
push
push
mov
data16
ss
mov
cs
mov
jb
adc
jge,pt
add
pop
aam
pop
imul
into
lods
dec
sahf
int3
push
mov
arpl
sti
and
fidivrl
push
in
loop
mov
xor
sub
sub
lock
add
dec
mov
add
push
in
out
jmp
aaa
bound
inc
push
mov
xor
mulb
push
test
and
jl
adc
das
jmp
add
dec
jno
pop
mov
fcomps
fsubr
dec
cmp
sahf
add
cmpsl
imul
xchg
pop
pusha
pop
scas
inc
insb
arpl
clc
mov
ljmp
imul
mov
sbbl
push
clc
pop
sahf
std
inc
out
sbb
mov
das
adc
cld
fs
adc
jo
xor
aas
sbb
mov
in
jo,pn
xor
out
mov
add
xchg
fdivrl
clc
mov
sub
movsl
subl
ss
cmc
gs
stos
fwait
cwtl
lds
cmpsb
xor
inc
jmp
int3
pop
shrb
or
testb
pop
adc
and
mov
mov
push
mov
rcrb
cmc
ret
jns
push
sbb
movsl
lods
xchg
or
jb
jmp
out
add
mov
sub
outsb
loop
fnstsw
pushf
in
xchg
insb
mov
or
dec
and
jge
fwait
add
jle
dec
push
cmp
inc
push
and
cmpsb
cli
xchg
push
cli
jae
and
frstor
dec
cmp
stos
and
and
sub
xchg
jge
fs
cmpl
dec
scas
jo
add
adc
dec
pusha
fbld
sub
xchg
fldt
mov
xchg
jne
cwtl
aaa
push
mov
or
dec
jmp
sbb
mov
sub
mov
pop
data16
inc
rolb
inc
add
ja
push
or
test
push
add
repnz
and
lret
inc
push
mov
fs
lds
negl
jmp
movsb
out
mov
adc
call
and
dec
stos
and
ret
adc
xchg
pop
sbb
mov
subb
int3
int3
nop
mov
cmp
push
mov
cwtl
in
or
xchg
jge
lods
cltd
mov
sub
push
push
and
push
dec
test
mov
ljmp
adc
cmp
sbb
lods
jne
mov
pop
add
adc
imul
mov
pop
xchg
in
xchg
enter
mov
mov
inc
push
mov
std
xchg
repnz
xor
clc
sub
dec
shr
mov
cmpsb
inc
mov
dec
jl
insl
push
sbb
out
mov
and
and
jno
jne
pop
loope
dec
or
aam
call
lock
stos
pop
add
lock
or
pop
loop
arpl
mov
jecxz
out
leave
std
aaa
sub
mov
jg
repz
cld
cmp
cmpsl
push
inc
ret
imul
pop
push
mov
push
ljmp
in
fs
mov
xchg
pop
ss
and
js
and
ret
xchg
mov
shrb
mov
pop
addr16
repz
shr
leave
xlat
stc
rclb
ret
sub
mov
bound
andb
in
addr16
pop
sbb
cmp
push
inc
test
jbe
push
gs
inc
aad
mov
mov
pop
mov
jg
sarl
ficomps
cmp
push
jmp
in
xchg
jmp
inc
in
imul
ret
mov
sbbb
sub
mov
hlt
sbb
lret
js
cld
xchg
mov
mov
jmp
jl
dec
lahf
ss
imul
ret
bound
pop
int
jo
push
ror
pop
sub
sbb
jl
add
ja
imul
dec
jmp
cmp
ret
push
fidivrl
cmpl
lahf
cltd
pop
sub
sub
call
fnstsw
cmp
mov
mov
push
mov
fidivrs
add
jnp
xchg
pop
fcmovu
mov
pop
ljmp
and
push
pop
push
dec
sbb
cld
call
in
shrb
js
sbb
mov
sub
inc
adc
cltd
dec
inc
xchg
xchg
sahf
inc
rorb
daa
aaa
ret
mov
sahf
loope
xchg
push
call
dec
push
cli
mov
test
lret
cmp
xchg
cs
jmp
mov
lods
xor
cltd
push
icebp
in
push
rorb
js
push
pop
xlat
nop
cld
or
xor
cmc
sub
insb
xchg
mov
pop
out
cmpsl
jmp
ds
imul
adc
inc
out
push
cld
push
fs
or
cli
arpl
and
pop
xchg
sbb
jo
pop
mov
jnp
mov
je
pop
les
test
jmp
lcall
mov
aas
cmpsl
sbb
rcr
sub
adc
je
mov
out
js
sbb
push
aaa
push
pop
mov
psrld
jle
mov
xlat
fisttpll
dec
mov
dec
les
out
mov
push
test
cmp
mov
mov
push
push
pushf
inc
mov
xor
add
clc
sbb
out
fwait
mov
mov
push
mov
dec
out
mov
mov
sbb
addb
adc
dec
pop
iret
aaa
xor
pusha
popf
pusha
insb
fistl
jmp
sbb
push
jle
jg
mov
and
cmp
test
dec
fisubrs
sub
pushf
lock
out
dec
mov
adc
cld
xor
sub
sub
adc
and
push
popa
push
mov
int
loopne
add
or
mov
dec
stos
cmpsb
inc
dec
cmp
sti
test
jge
and
adc
mov
jae
xchg
xchg
dec
xchg
fists
pop
insl
in
sbb
popa
mov
mov
add
adc
add
xor
jne
fadds
push
add
mov
pop
bound
dec
mov
rcl
je
sbb
inc
stos
mov
sub
pop
or
dec
stc
or
jmp
cld
jp
or
dec
bound
push
es
jle
inc
out
mov
cmp
inc
adc
fsubrl
into
popf
fisubrl
fsubs
lods
ffree
lock
cmp
cli
jno
mov
mov
test
out
outsb
je
and
add
movsl
nop
pop
sub
jmp
call
cwtl
sbb
jns
jae
pop
iret
push
and
out
cld
jnp
das
adc
loopne
cmpl
sub
addr16
and
mov
pushf
les
addr16
mov
pop
lahf
sbb
in
movsb
andb
cltd
popf
stos
xchg
sbb
sbb
mov
mov
jb
jle
loopne
outsb
mov
or
mov
pop
shlb
aad
sahf
fstps
jg
lds
push
orl
stc
int3
push
mov
cmp
mov
sbb
push
xchg
adc
scas
push
test
lgs
mov
lock
jb
jl
es
or
jbe
icebp
rorb
lcall
xor
pop
jmp
popf
out
xor
scas
lret
das
mov
sub
aaa
push
push
pavgb
cmp
mov
nop
and
or
ljmp
cmp
das
shr
sti
rol
mov
inc
sub
push
or
dec
mov
insl
sbb
stos
inc
push
sbb
gs
shrb
shll
inc
fsubrp
pop
daa
add
kmovw
jge
rcl
andl
xor
adc
cmp
mov
add
popf
lea
xor
adc
mov
fwait
jbe
movsl
dec
ret
cwtl
dec
or
cmc
or
push
jle
mov
daa
xchg
aad
jp
xchg
out
pmaxsw
addr16
xchg
mov
xor
cmpsb
test
inc
add
sub
jmp
adc
scas
orl
or
jns
xchg
mov
push
ljmp
adc
sbb
mov
lcall
lock
das
int
xchg
shrb
pop
sub
jbe
enter
mov
into
mov
push
adc
xor
inc
mov
fsub
stc
mov
pop
iret
jp
inc
shll
cmc
add
jnp
cmp
shll
cmc
stc
fsts
or
clc
push
cmpsb
adcb
stos
mov
or
fcoml
jmp
mov
cmp
jb
pop
andb
sahf
pushf
stos
cmp
jne
push
imul
dec
sub
mov
pushf
in
cwtl
lods
out
dec
push
push
ja
jp
jg
jge
dec
jge
push
jge
pushf
fs
cmpsl
cmp
ja
out
mov
xchg
cmp
sbb
xor
cmp
pop
push
cltd
xchg
push
pop
or
push
mov
mov
xor
push
xor
add
lcall
adc
adc
or
andb
or
outsl
out
push
mov
gs
mov
lods
fnstsw
add
aas
stos
icebp
lahf
lock
or
mov
mov
pop
repz
pop
lea
cmp
inc
push
shll
je
fwait
sub
mov
pop
cmp
pop
xadd
loope
pusha
cmp
fdivs
push
dec
dec
pop
cmp
xchg
ljmp
mov
or
mov
movsl
outsb
divb
xor
xor
cmp
jl
fadd
in
leave
fisubs
or
lcall
mov
mov
xchg
or
das
mov
cmpsl
cs
shll
add
push
je
scas
mov
mov
jbe
test
into
dec
scas
ja
clc
xor
xchg
or
ds
test
cltd
adc
mov
frstor
mov
push
mov
xor
cmc
faddl
mov
xchg
mov
jle
add
hlt
add
jp
add
leave
scas
loopne
ljmp
test
and
sub
jle
in
push
push
xor
stos
out
cmpsl
rcl
mov
push
scas
lods
insl
ljmp
insl
imul
scas
xchg
imul
or
cmc
mov
push
pop
xor
shl
jae
aam
mov
loop
out
sbb
clc
push
insl
int3
popf
sbbl
stc
daa
imul
fdivrs
repz
jmp
lds
dec
dec
cmp
arpl
ret
or
jae
ja
lods
ss
sub
mov
mov
lret
cmc
pop
scas
aas
mov
wrmsr
imul
lret
subl
lods
and
scas
push
mov
popf
adc
sbb
jl
push
push
ja
insb
jecxz
adc
mov
lds
fcoms
jae
adc
mov
inc
mov
jl
jbe
movb
adc
repz
cmpsb
popf
sbb
push
scas
arpl
das
or
test
inc
frstor
aas
sbb
mov
push
in
sbb
fwait
sahf
not
shll
push
pop
mov
jmp
mov
xor
lods
mov
sbb
sub
aam
and
bound
test
lret
icebp
das
sbb
jge
dec
or
jo
dec
daa
mulb
xor
testl
sbb
out
fxch
push
imul
mov
sti
push
popa
bound
dec
ja
xchg
lret
shl
dec
adc
jns
test
mov
cltd
pusha
ja
dec
pop
sub
adc
mov
pop
andl
addr16
dec
aas
xor
jg
add
inc
pop
push
xchg
or
fimuls
pushf
push
push
sti
movb
fstl
cli
jne
outsl
jo
cli
loop
push
adc
in
adcl
jae
and
and
push
mov
cmp
fdivs
dec
ljmp
outsb
or
pop
mov
mov
aam
test
cmc
xchg
insb
leave
shl
pop
push
xor
or
addb
pop
enter
push
mov
adc
movsb
in
fcompl
fwait
rcrb
and
stos
jg
push
mov
cmp
jbe
aad
ret
ret
add
push
inc
clc
aad
lret
xor
imul
call
in
ret
in
add
out
jbe
and
xsavec
sub
popa
in
arpl
mov
xchg
enter
ljmp
xchg
sbb
mov
push
xchg
movsl
mov
sub
in
aad
mov
sub
inc
cmp
mov
or
pop
andb
pop
cmp
loope
xor
ljmp
cmp
negl
aaa
sub
repz
add
rolb
add
sbb
push
arpl
aas
aam
adc
add
in
xor
test
mov
stos
leave
out
cmp
aaa
daa
lods
and
add
mov
xchg
addr16
test
sahf
pushf
mov
sbb
xchg
pop
loope
inc
push
aad
bnd
test
cmpb
lock
aam
add
jns
lock
mov
pusha
jmp
imul
dec
inc
xchg
mov
push
sub
pop
fyl2xp1
mov
fisubrl
lret
sub
cmp
aaa
icebp
xor
gs
add
in
jge,pt
xchg
xor
adc
test
icebp
les
aam
cmp
mov
jae
xor
lret
sub
pop
les
int3
sbb
xchg
mov
cmp
jge
inc
and
lods
jmp
cmc
or
andb
dec
negb
sub
pop
insl
push
ljmp
pop
push
xchg
mov
mov
pop
nop
sub
adc
sub
xchg
pop
aas
dec
dec
stos
jae
sbb
adc
cmpsb
aaa
mov
out
sbb
inc
mov
shlb
mov
or
int3
sub
or
adc
shll
nop
hlt
xchg
push
mov
fwait
ror
sub
ljmp
mov
and
adc
test
inc
in
adc
setb
rcrl
mov
outsb
fdivs
inc
sbbb
es
sub
dec
xlat
adc
stos
aaa
or
js
mov
ss
addr16
fnstcw
bound
pop
repz
push
fcoml
push
and
lock
adc
dec
sub
cwtl
fwait
xor
xchg
mov
mov
pop
add
mov
lret
sub
mov
mov
xchg
push
lods
scas
cmp
xor
imul
push
out
negb
in
fsub
push
mov
sub
xchg
rcll
push
sbb
mov
cli
fdivrs
push
fimull
repnz
push
mov
xchg
pop
sar
or
rcrl
out
aam
adc
enter
divb
popf
cli
leave
push
xchg
push
mov
in
sub
sub
jge
or
adc
lret
test
inc
pop
mov
mulb
ljmp
jp
jecxz
lds
push
push
pop
das
shlb
mov
das
xchg
mull
sahf
mov
inc
daa
or
sbb
js
mov
cmp
pop
push
test
pop
nop
xorl
sbb
sbb
mov
scas
stos
notb
daa
arpl
rcrl
xchg
jo
cmpsl
pop
or
es
stos
push
out
rclb
sbb
or
mov
mov
or
sub
arpl
mov
lahf
jmp
cmpsl
sbb
or
and
xor
xchg
mov
outsl
mov
xor
and
call
movsl
loop
adc
out
outsl
popa
xor
lret
xchg
dec
aaa
push
lret
loopne
and
jl
fs
mov
adc
lods
adc
js
mov
div
jg
repnz
aad
jb
ja
and
sbb
push
lret
mov
pop
and
pop
and
xor
es
cmp
mov
xchg
pop
and
imul
or
lock
movsl
repnz
std
or
hlt
wrmsr
cmp
mov
lcall
int
cmp
les
mov
or
xorb
fs
lock
repz
fistpll
cmp
int
mov
je
add
lods
add
loop
enter
in
dec
lret
ds
mov
push
jle
xchg
sub
mov
pop
and
mov
jge
test
pushf
ret
dec
out
cwtl
pop
push
sbb
mov
xchg
lret
arpl
test
push
in
cmp
pop
add
cmp
xor
shll
mov
in
mov
outsl
push
add
test
mov
mov
mov
push
dec
adc
sub
push
jmp
push
call
sub
sub
xchg
mov
pop
xor
cltd
jne
nop
add
jmp
push
mov
sub
sarb
cmovl
scas
and
mov
mov
daa
jecxz
and
clc
mov
xchg
and
add
dec
pop
inc
les
sbb
dec
stos
inc
mov
or
dec
mov
cmpl
sbb
mov
cmp
dec
push
outsb
and
adc
jl
out
xchg
jnp
xorb
je
repz
shl
dec
sbb
add
sbb
inc
adc
add
add
movsb
out
arpl
fidivs
aad
xor
and
sbb
xchg
pop
jmp
xor
jecxz
test
in
xor
lret
add
add
push
loop
fisubrl
adc
or
mov
sar
mov
cld
sub
sub
sbb
push
subb
aas
cmp
sbb
fistpl
cmpsb
fisubrs
inc
clc
leave
adc
sahf
xlat
lretw
inc
dec
in
fnstsw
out
ja
push
mov
add
push
add
iret
in
unpckhps
dec
rorl
imul
mov
pop
loop,pn
pop
sub
into
fldt
movsl
mov
mov
jbe
cmp
pop
aas
shr
das
xchg
ja
jns
lods
fwait
es
sbb
cmpsb
pop
daa
jmp
jno
mov
cltd
pop
rcrb
pop
ss
add
inc
push
enter
cltd
outsb
pop
rolb
call
gs
loope
mov
in
push
add
dec
lret
enter
test
fwait
movsl
in
cmp
dec
push
jns
jmp
sbb
lods
fstpt
mov
dec
hlt
fldt
adc
cmp
or
jg
add
int3
inc
sahf
push
xor
cmp
push
or
dec
xor
movsl
stc
das
push
in
testl
push
repz
enter
stos
in
jmp
pusha
lahf
mov
ds
das
pushf
pop
jg
adc
push
in
testb
cmp
dec
mov
sub
add
dec
cwtl
outsl
dec
test
inc
aam
mov
mov
sub
ret
push
shll
and
aaa
rcr
ja
fistpl
and
ljmp
pop
das
adc
pop
add
lcall
pop
xlat
bound
jae
ret
loope
cmp
ljmp
and
loop
nop
mov
inc
les
sub
les
xor
shll
sarb
dec
mov
pop
adcl
scas
lods
mov
addl
shl
cs
cli
or
and
in
mov
gs
lcall
adc
repz
es
pop
sub
and
loop
push
cmp
pop
fstl
add
pop
jle
dec
rcrl
cmpb
inc
inc
and
idiv
xchg
mov
movsl
mov
nop
pop
aad
loop
jbe
dec
add
push
mov
and
es
adc
lret
sbb
pop
lods
imul
stos
mov
nop
scas
and
mov
aaa
sar
jmp
inc
fdivp
xchg
dec
addr16
insl
icebp
in
js
add
mov
divb
jg
push
fscale
enter
cltd
sub
dec
cmpb
rclb
aaa
insb
or
je
out
popf
mulb
xchg
xchg
and
pop
jg
xor
sub
inc
adc
cmp
xchg
adc
inc
sbb
das
push
add
cli
or
sbb
addb
mov
lea
add
lods
cmp
les
mov
and
adc
push
adcl
cltd
dec
cmpsb
jbe
mov
sbb
in
xchg
stos
jp
and
or
es
jle
jl
xchg
out
test
lods
fsubs
jg
jp
xchg
notl
movsb
mov
pop
adc
shl
cs
mov
int
into
dec
or
push
push
std
mov
pop
out
int
mov
ret
fwait
repz
cmc
imul
imul
out
mov
mov
popw
sbb
ja
in
mov
pop
shl
in
testb
push
cmp
jge
sbb
es
push
mov
xchg
xor
pusha
add
enter
add
arpl
and
sbbl
std
sub
adc
jbe
movsl
dec
add
or
mov
or
lcall
mov
sub
orl
dec
pop
bound
loop
dec
jne
test
bswap
xor
movsb
test
fdivl
dec
les
arpl
sub
sub
stos
sub
andb
pop
dec
ljmp
adc
add
or
adc
adc
jns
cmpsl
idivl
leave
loop
push
addl
xor
xchg
xchg
jp
fcoml
insb
pop
dec
add
pusha
call
js
sub
xchg
sahf
push
mov
push
fdivs
cmpsb
into
mov
adc
shr
cmp
jp
xchg
fistps
push
jge
fisubl
add
or
add
pop
out
arpl
insb
sahf
je
mov
test
adcl
sbb
mul
or
ret
mov
adc
push
push
mov
pop
mov
jp
inc
xlat
movsl
sbb
jbe
decb
addr16
insb
cli
add
push
mov
sub
mov
cmp
call
mov
lock
std
daa
push
repz
add
insb
aam
lock
fstpl
mov
lret
les
push
xchg
xor
loopne
roll
arpl
ret
dec
sub
aas
shrl
imul
repnz
inc
push
mov
ret
inc
or
adcl
pop
outsb
push
sbb
jmp
out
std
adc
sbb
jae
xor
cmp
or
pushf
shll
sub
or
into
leave
pushl
jle
xchg
jge
inc
push
popa
push
jne
loop
out
js
mov
aaa
stc
xchg
lods
adc
cmc
jne
mov
jae
pushf
cmpsl
inc
cmc
je
pushf
sbb
arpl
xor
jp
pop
sbb
insl
push
add
sub
dec
nop
xor
adc
push
shlb
jns
push
aaa
inc
gs
std
push
cld
xor
pop
fcomi
test
cmp
sub
mov
outsl
aad
lea
cmp
scas
lds
push
jmp
jno
cmp
lcall
jp
scas
ljmp
add
loopne
sub
jmp
mov
andb
outsb
push
add
test
or
mov
push
mov
mov
lret
jo
imul
enter
dec
aas
aam
mov
popa
rcrb
xlat
sbb
add
sti
adc
jmp
jne
xchg
jle
dec
xor
xchg
es
dec
loope
fists
out
pop
stos
std
cmp
jb,pt
test
popa
mov
fwait
test
jo
ss
mov
and
lock
orb
push
into
push
cmp
mov
sub
inc
loope
movsl
stos
lcall
das
out
dec
fwait
mov
pop
fs
mov
movsb
jno
fsubrl
mov
and
mov
jmp
mov
das
sub
pop
shlb
or
std
mov
add
mov
sub
dec
mov
mov
xor
push
loop
pop
jle
jnp
add
test
cmovno
mov
cltd
and
xchg
sub
ret
xlat
jbe
in
cmc
inc
scas
mov
sub
mov
mov
mov
mov
jae
pop
imul
dec
or
sbb
iret
pop
add
mulb
push
hlt
pop
jo
sbb
mov
jp
dec
ja
inc
test
in
adc
hlt
shr
mov
jnp
adc
pop
dec
arpl
add
movsl
xor
cld
test
sbb
sti
test
mov
inc
push
insb
xchg
jne
jo
aad
or
sub
in
cmp
mov
fwait
sbb
xchg
jnp
adc
js
pop
sbb
loopne
pusha
xchg
mov
fistpl
xchg
sahf
mov
xchg
mov
cwtl
jle
int3
push
xor
aad
lahf
jae
jno
pop
in
mov
push
cmp
cmp
jne
jecxz
int3
cmpsb
pop
movsl
push
pop
pushf
pop
sbb
fwait
jg
aad
flds
int3
sub
movsb
imull
and
xor
popa
inc
in
xchg
dec
or
sub
lret
aas
inc
inc
pop
jg
xor
and
mov
jae
popa
cmp
shl
daa
lret
outsl
cltd
rclb
jae
xor
xchg
lock
cmp
add
jno
leave
and
lcall
push
outsl
negl
stos
shrl
faddp
sub
pushf
stos
int3
sbb
jmp
bound
cmp
pop
inc
mov
inc
int3
jno
popa
jmp
sub
aam
test
add
je
arpl
imul
and
mov
scas
stos
aaa
pop
leave
int
cs
punpckhbw
shll
pop
sbb
clc
jmp
imul
xlat
imul
and
or
pop
pop
cmp
ret
dec
into
ss
addb
call
cmpsb
movsb
xchg
mov
lock
push
cmpsb
sahf
in
inc
addr16
icebp
jge
inc
lea
pop
sti
push
sbb
add
stos
fwait
lods
jno
push
into
test
rcll
mov
xor
mov
dec
mov
std
jb
jmp
jno
add
test
imul
sub
imul
add
testl
push
xchg
mov
lea
clc
inc
ret
cmc
mov
mov
pop
pop
cmp
std
cmp
dec
add
cli
and
xor
icebp
cltd
cmp
jbe
add
sti
int3
xor
mov
xchg
in
mov
ljmp
movsl
jmp
inc
mov
repz
popf
push
das
loopne
das
popf
int3
and
xchg
inc
bound
rorl
xchg
mov
adc
jmp
outsl
movsl
sbb
sarl
ret
mov
lret
mov
clc
popf
push
popf
pop
ljmp
pushf
push
inc
pusha
jmp
inc
or
lods
inc
xor
loop
jo
sbb
cld
xchg
mov
adc
loop
pop
outsb
or
add
mov
lahf
pop
cmp
cli
mov
jnp
jle
in
xchg
bound
fnsave
mov
inc
xchg
adc
cmp
dec
push
loop
not
adcl
sub
add
inc
jo
jne
push
loope
jbe
inc
out
daa
sbb
mov
push
pop
mov
add
xchg
addr16
movsl
push
fwait
in
popf
fsts
adc
enter
or
dec
loop
movsl
mov
enter
dec
cmp
mov
sub
cmc
arpl
andl
dec
into
into
fcmovnbe
insl
bound
sbb
int
popa
mov
push
je
adc
add
mov
jo
jmp
xor
inc
repnz
push
arpl
mov
cmp
in
cs
jae
fldenv
aam
outsl
mov
cmp
cmpsb
pop
lahf
cmp
mov
adc
sub
popa
jge
inc
mov
push
add
cltd
imul
xchg
inc
push
in
aam
add
mov
xor
outsl
and
inc
ret
leave
mov
mov
addb
add
cld
rorl
aas
adc
inc
imul
arpl
dec
js
push
mov
inc
mov
mov
jne
cmp
nop
test
lods
push
scas
mov
hlt
xchg
in
in
sub
dec
cmp
movsl
push
sub
pop
sbb
cmp
sbb
add
fists
imul
sarl
pop
jo
je
negb
jge
or
pop
repz
mov
pop
mov
jge
movsb
sti
adc
sbb
push
dec
or
mov
inc
mov
flds
or
testl
push
mov
xchg
std
push
das
mov
ficoms
sub
cli
bound
jnp
xor
movsb
sbb
mov
fcomp
sbb
data16
shlb
mov
aaa
pop
stos
mov
mov
sub
insl
aaa
xchg
aas
mov
shlb
dec
inc
mov
fidivrl
imul
ja
ss
push
or
push
loop,pn
push
mov
jo
xchg
test
es
or
sub
enter
push
sbb
and
int3
filds
scas
dec
adc
mov
mov
mov
push
std
dec
fld
jle
push
roll
push
jmp
jnp
jns
or
stos
or
rcrl
enter
ret
loopne
ret
and
stos
jbe
ljmp
cwtl
xor
mov
mov
push
test
and
loopne
jno
ja
mov
push
and
mov
ss
dec
jg
pop
rcll
arpl
pop
rorl
shr
daa
outsb
popf
add
test
int
xor
popa
mov
or
fwait
sbb
imul
testl
lret
push
jne
sub
jno
add
cmpsb
and
loopne
pop
jmp
cwtl
test
fadds
adc
cli
push
shr
mov
jecxz
add
xor
je
sahf
leave
je
xchg
inc
inc
xchg
jl
mov
pop
push
add
sbb
mov
adc
push
into
sbbb
mov
pop
or
rclb
jne
or
mov
and
adc
sub
cmpsb
jge
roll
xor
outsl
mov
ss
add
aas
aam
push
xchg
mov
mov
adc
pop
cmp
in
xchg
nop/reserved
cmpsb
push
cmpsb
xor
jp
inc
int3
fistps
or
pop
cmp
mov
gs
and
pop
mov
xchg
lods
pop
jecxz
adc
scas
cs
hlt
lea
adc
in
outsb
arpl
xchg
pop
lods
dec
or
jno
js
mov
and
daa
scas
int
test
fnstenv
push
mov
inc
out
dec
loope
sbb
pop
jg
rcll
pop
cmpb
out
jle
pop
testl
and
or
aad
sbb
mov
into
pusha
and
aaa
fnstcw
in
shlb
sbb
add
pop
pop
jmp
js
sbb
in
das
pushf
lret
repnz
test
inc
test
adc
insl
xor
movsl
xchg
out
mov
shl
cld
mov
jp
cli
mov
dec
mov
shlb
push
pop
xchg
xchg
mov
mov
test
pop
cmp
push
cmc
test
cld
cs
lcall
outsb
mov
pop
movsl
lea
insb
ljmp
sahf
out
jle
and
cs
std
push
sub
jle
pop
and
xchg
in
movb
repz
adc
inc
mov
mov
push
cld
iret
pushf
outsl
daa
ja
add
jne
xor
jbe
arpl
xchg
rolb
or
int3
push
sub
rclb
lahf
dec
sbb
popa
das
fdivrl
mov
int3
lcall
out
xor
stos
push
and
inc
and
and
push
ljmp
hlt
and
lock
mov
mov
movsb
sub
inc
std
push
stos
sub
daa
xor
lret
cwtl
test
xlat
push
imul
adc
or
and
ljmp
xchg
xor
stc
adc
lea
xchg
cmp
xchg
push
inc
push
xchg
mov
xchg
jnp
adc
mov
inc
xor
test
lock
jl
inc
nop
and
push
jno
into
and
add
dec
sbb
fisubs
and
mov
mov
push
ss
xchg
pop
jne
push
orl
imul
je
icebp
mov
inc
lods
cmc
cmp
repnz
add
test
test
ja
and
subb
shl
cmp
push
lods
rolb
dec
cs
adc
std
lahf
push
repz
iret
pop
and
cwtl
jns
mov
pop
xchg
and
out
add
fmull
pop
mov
sti
sarl
lcall
and
xor
sbb
xchg
sbb
or
xchg
mov
dec
iret
jl
movsl
jl
mov
pop
js
insl
push
insb
xchg
inc
es
or
add
clc
in
nop
sahf
sbb
jp
jmp
jns
jns
add
push
mov
rcl
mov
shl
fs
cmp
xor
outsl
xor
dec
cmp
jbe
mov
repnz
pop
pop
fistl
ds
xchg
mov
and
mov
push
stos
mov
mov
lods
cltd
xchg
push
and
mov
fsubl
fcompl
pop
cwtl
jp
and
adcl
add
movsl
aam
push
fneni(8087
cld
popa
fs
rclb
xchg
pop
insl
shll
adc
push
add
mov
sar
mov
out
scas
xchg
push
sahf
fdivs
pop
pusha
sub
and
pusha
je
lds
mov
cmp
push
or
test
pop
and
and
or
js
jnp
and
test
mov
push
xor
mov
mov
cmp
repz
lock
mov
mov
dec
mov
insl
idivl
cmp
scas
sub
or
push
cmpsl
push
pop
push
fdivp
addr16
jbe
in
outsb
in
and
mov
xlat
sbb
cwtl
push
lcall
jecxz
roll
inc
push
push
mov
fistps
rorb
aad
mov
pusha
sbb
imul
repz
add
mov
and
and
add
sub
pop
inc
mov
mov
pop
femms
jae
repz
adc
cmp
bound
xor
int
ja
xchg
mov
inc
sub
ljmp
fists
lea
out
scas
dec
out
xchg
mov
or
mov
pop
mov
inc
pop
and
imulb
ss
dec
mov
or
ljmp
nop
sahf
ret
pop
je
dec
jns
cmpsb
cs
insl
push
insl
sub
nop
ljmp
or
xor
jb
mov
lea
testl
je
jne
dec
negb
and
call
loop
popa
shll
insl
dec
mov
sbb
xchg
adc
movsl
cmp
in
jle
push
sti
bound
mov
mov
mov
xor
clc
dec
pop
add
lea
push
push
xor
cwtl
movsl
out
or
call
iret
cmp
pushf
stc
mov
cs
sar
push
stc
mov
ds
iret
or
cmp
popa
push
lock
cmp
push
jnp
je
jp
out
test
pop
dec
rorl
dec
subl
jns
adc
ss
dec
out
mov
jb
lret
cmp
outsl
jns
and
mov
jnp
xchg
testl
inc
aaa
movsl
add
jmp
popa
adc
dec
cmpsb
lods
xlat
fldenv
inc
inc
out
mov
fs
rorb
repnz
mov
inc
fistl
icebp
sub
popa
hlt
jl
adc
lods
push
pusha
mov
sbb
mov
mov
add
cmp
or
clc
fwait
aad
push
mov
lahf
movsl
iret
xchg
dec
pop
cwtl
ficomps
roll
push
jnp
lahf
xchg
fnstcw
jmp
test
xlat
mov
jb
insl
pop
mov
mov
xchg
mov
add
fs
or
js
cmp
in
cmp
xchg
mov
push
outsb
pop
nop
ja
jo
enter
jp
test
jne
out
aas
pop
push
mov
adc
cli
inc
scas
mov
cli
or
lcall
insl
adc
stc
mov
je
scas
aaa
and
sti
adc
sbb
sub
push
sbb
inc
sub
jmp
pop
ljmp
cmpsb
scas
lret
test
shl
push
pop
mov
xchg
lret
shrl
sbb
int
cltd
cli
lds
push
push
push
ss
and
xchg
push
aad
sbb
push
mov
test
push
sbb
mov
dec
xchg
xor
clc
xchg
js
mov
mov
aam
test
test
mov
add
xchg
enter
inc
or
subb
lds
aam
adc
out
test
dec
jmp
jp
int
inc
sti
mov
xchg
adcl
adc
push
mov
mov
stc
sahf
pop
mov
mov
movsl
ljmp
mov
jle
mov
pop
jne
ds
dec
sub
xor
lock
call
gs
dec
jmp
pop
pop
xlat
mov
lds
mov
hlt
jle
push
pop
mov
fs
lahf
jae
es
sti
lahf
es
roll
int3
test
fldt
and
inc
clc
or
mov
cmp
mov
popaw
negb
clc
icebp
std
loope
test
in
fldcw
cld
mov
or
mov
rolb
not
and
push
mov
popf
push
psubd
mov
xor
rclb
xor
jae
xchg
cli
repnz
dec
mov
dec
int3
jg
popa
fs
add
test
filds
inc
mov
aas
into
push
pop
data16
leave
pusha
fdivl
xchg
sub
xchg
gs
sbb
push
inc
mov
push
mov
and
pushl
mov
xor
xor
jb
jne
xchg
cltd
cmpl
inc
cld
fcmovb
call
call
mov
jnp
and
fwait
xor
xchg
scas
adc
addb
loop
push
mov
xor
inc
cmp
ret
or
pop
les
pop
cmpsb
ficoml
push
imul
cmp
les
movsb
jge
das
shl
testl
or
das
sub
lods
xor
jle
std
push
pop
insl
add
shrb
xor
and
aam
or
lock
outsb
or
rcrb
daa
jmp
jne
push
daa
sahf
inc
mov
imul
jecxz
subb
sahf
cmp
movsb
mov
push
cmp
clc
cs
dec
aas
dec
dec
mov
pushf
sbb
imul
es
hlt
test
mov
cmp
mov
fisttpll
aas
sub
xor
test
push
sub
jo
pop
pop
dec
adc
mov
fs
ret
mov
xor
or
xchg
inc
jecxz
jnp
lock
cli
push
inc
xchg
or
mov
sbb
push
pop
insl
mov
dec
nop
dec
outsb
inc
inc
dec
xlat
xchg
movsl
push
arpl
pushf
sbb
int3
jge
test
add
mov
insb
mov
jle,pt
iret
and
sbb
testl
jne
mov
mov
sbb
gs
insb
fidivrl
dec
adc
pop
das
push
icebp
loopne
mov
push
push
xor
cmpsb
push
test
ret
xchg
xor
cltd
jb
cmp
enter
sub
dec
push
out
cmc
sbb
ficompl
popa
pop
and
movsl
sbb
jns
mov
pusha
push
jl
pop
in
inc
hlt
int3
fdiv
lcall
cmpsl
icebp
fwait
sub
outsb
or
pop
mov
xor
rcll
jo
outsb
outsb
mov
mov
repnz
xorb
and
in
mov
pop
jb
lock
push
int
pop
imul
loop
ljmp
scas
mov
call
aam
sbb
mov
cmpsl
sti
repnz
call
fsubl
xchg
sub
sarb
dec
xor
push
push
aam
insb
rcrl
arpl
and
pop
leave
mov
packsswb
push
jb
fisubs
jge
aam
add
xchg
imul
aas
or
sarb
mov
dec
mov
mov
popa
lds
cmc
add
outsb
push
cwtl
aaa
add
sub
into
sub
sub
movsb
jnp
sahf
sub
fstpl
and
mov
cwtl
dec
insb
out
add
xchg
dec
bound
pushl
jmp
sub
shlb
sub
add
xchg
nop
xchg
and
jns
pushf
inc
inc
jo
xorl
inc
dec
mov
aaa
ficomps
push
mov
les
in
int
inc
dec
add
push
inc
fisttpl
test
ret
pop
negb
inc
push
adc
repz
rcrb
xchg
xchg
xor
push
mov
and
and
in
out
lahf
stc
mov
jb
jno
loopne
ret
xlat
push
sbb
xchg
pop
and
pop
insb
mov
sbb
loopne
sub
sahf
pop
fcomi
mov
sbb
mov
cwtl
mov
xor
push
lret
gs
leave
xchg
test
cmpsl
scas
je
cmp
stos
xor
stos
test
stos
shl
or
fiaddl
mov
decb
mov
xchg
call
outsb
mov
pop
inc
lock
mov
push
insl
in
outsl
pmuludq
leave
adc
aaa
jl
mov
stos
cmp
sti
test
push
push
and
pop
mov
jns
jp
rcll
out
jmp
mov
and
mov
insl
fs
lcall
sub
jmp
das
xor
daa
dec
das
xor
jne
lahf
lret
pop
ss
push
mov
dec
ss
add
test
clc
ljmp
mov
sbb
lock
jno
xchg
adc
mov
adcb
daa
lods
adc
push
xor
subb
adc
xchg
cmp
shlb
pushf
dec
xlat
push
imull
sbb
mov
jg
mov
pop
jl
popf
sbb
dec
lret
sbb
push
sbb
dec
mov
scas
lods
lock
notb
sti
jbe
mov
cmp
dec
sub
es
das
int
pop
inc
insl
imul
sbb
test
test
push
cmc
data16
lods
push
push
in
out
ror
pop
inc
add
repz
inc
xchg
inc
dec
fdiv
cmpl
mov
cmp
nop
mov
sahf
test
arpl
cmp
xor
lds
hlt
test
insl
js
dec
xor
sub
adc
movsl
mov
ja
ja
pop
xchg
popf
cmpsl
mov
xchg
mov
inc
into
push
xchg
aad
push
leave
pop
ret
mov
shlb
xor
shr
lret
fwait
push
sbb
imul
mov
test
xor
jno
lea
sbbl
dec
sbb
pop
stc
cmp
adc
leave
jp
mov
popa
orl
sti
loop
mov
les
mov
mov
cmp
push
clc
cmpsb
scas
subb
xchg
ret
ret
subb
ffree
xchg
pop
movl
fcmovb
push
pop
ret
mov
add
cmpsl
mov
push
dec
mov
cwtl
sub
flds
stos
mov
dec
jo
mov
mov
push
scas
in
inc
push
icebp
sbb
test
lock
aam
repnz
cli
es
test
mov
mov
ror
inc
push
xchg
mov
sub
pusha
xchg
inc
imul
sbb
pusha
add
test
dec
cmp
into
mov
leave
cmpsb
and
f2xm1
xchg
sub
popf
fwait
stos
test
or
cmp
jb
mov
jl
cmp
sbb
or
xorb
mov
dec
int3
les
lods
mov
fdiv
mov
cs
mov
cmp
sub
sbb
fisttpll
or
aas
lods
sbb
lods
push
stc
fsubrs
je
push
negb
imul
add
cmp
add
ret
movl
icebp
or
std
pop
mov
cld
pop
out
mov
mov
dec
cmp
adc
mov
shl
pop
push
fs
cmc
ror
pop
jg
xor
fisttps
xor
cmp
insl
in
outsl
shrl
dec
cmpl
shrb
scas
bound
je
les
cmc
mov
dec
test
fmuls
or
cwtl
rcrb
jns
mov
xor
mov
jne
out
add
or
fwait
leave
decb
bswap
add
call
loop
cmp
rorb
jne
pop
icebp
lods
xor
sbb
shll
lret
cwtl
or
add
ds
mov
in
inc
adc
imul
std
mov
pop
icebp
mov
xor
xchg
fadds
hlt
cmpsb
mov
aam
jbe
into
nop
mov
jmp
adc
int
or
movsb
jb
cmp
stos
popf
or
mov
mov
rcrl
fnstsw
push
test
idivb
push
out
dec
idivb
mov
dec
sub
lock
movsb
adc
gs
mov
outsl
dec
mov
inc
push
popl
cs
das
dec
popf
fcomip
iret
pushf
ljmp
ljmp
and
test
mov
sar
ret
sbb
call
sbb
inc
je
or
lahf
mov
les
or
add
mov
shl
movsb
jno
das
sub
xchg
lods
bound
xchg
test
loopne
shr
pop
aam
dec
mov
loopne
stos
jae
or
js
cli
mov
stos
leave
popa
and
jp
jl
add
mov
xor
mov
in
mov
push
lcall
mov
es
sbb
push
std
nop
rol
push
mov
or
sub
mov
pop
jno
mov
sbb
xchg
inc
clc
cli
mov
ffreep
dec
ljmp
andb
sub
adcb
hlt
scas
lcall
test
inc
incb
cmpsb
cli
addr16
lret
pop
push
dec
sub
inc
jnp
jno
mov
xchg
jo
int
enter
adc
xchg
push
and
fmuls
lret
std
pop
or
lret
lods
in
add
sbb
mov
ja
xchg
mov
jge
in
jle
es
rcr
pushf
shll
cltd
cltd
jle
mov
insb
stos
adc
or
push
rolb
lahf
enter
jbe
lock
jle
and
mov
in
imul
push
in
sahf
pop
test
ret
arpl
ja
inc
stos
mov
in
fwait
out
sub
jle
gs
aad
pop
lds
or
pop
pop
lret
in
adc
jge
jmp
addr16
imul
or
pop
lea
jno
ret
out
out
add
into
cld
mov
sub
fisubrl
outsb
mov
sub
out
xchg
pop
inc
shld
fs
sub
xor
sahf
xchg
shr
fcoml
jno
push
les
inc
and
out
addb
nop
fwait
sbb
jl
daa
sub
mov
pop
mov
out
dec
xchg
sbb
sub
into
mov
push
sub
fcmove
mov
popf
adc
xchg
es
cmpsb
sub
pop
sub
or
sub
jge
xchg
movsl
bound
push
mov
or
inc
mov
sarb
inc
dec
sub
jle
iret
or
popa
stc
int
mov
imull
pop
fstps
jnp
rcr
mov
sbb
lea
push
cs
dec
mov
xchg
pop
xlat
push
jle
pop
add
decl
adc
loope
jp
cmp
xor
dec
mov
mov
js
jae
bound
push
mov
testl
sub
xlat
xchg
in
pop
xchg
enter
push
enter
ficoml
jno
push
js
jg
mov
std
sub
mov
int3
add
cmc
push
rcrb
outsl
add
and
mov
sbb
arpl
ret
sarb
cmp
mov
pop
xlat
imul
test
xchg
decl
iret
cwtl
pop
mov
out
mov
pop
aam
sub
mov
shlb
sbb
pop
clc
add
mov
mov
ficomps
xor
mov
arpl
out
jb
push
mov
flds
jle
mov
jg
add
sub
sub
mov
lcall
insb
stos
or
jb
inc
popf
xor
loope
jl
mov
addr16
inc
mov
roll
mov
xor
push
xchg
out
cmc
punpckhwd
cs
jg
add
dec
icebp
jmp
adc
in
dec
push
jne
lods
cmp
dec
or
mov
mov
xchg
push
xchg
repnz
dec
lods
loope
test
test
add
push
movlhps
enter
xchg
pop
mov
cld
ljmp
or
jne
fstps
cmp
hlt
mov
icebp
lock
sbb
jmp
int
jmp
fsubs
lcall
shlb
mov
lea
adc
loopne
jbe
push
jbe
adc
into
add
prefetch
jge
lods
push
es
and
lret
xor
sti
mov
insl
insb
ja
scas
dec
sub
pop
inc
loop
test
es
int3
gs
aas
push
insl
aad
fs
dec
inc
cmc
pop
rol
jle
cmp
test
scas
cmpsb
pop
jmp
mov
lds
addr16
mov
push
jo
cmc
inc
ja
incb
lret
dec
cwtl
pop
nop
jb
cmc
xchg
pop
loope
push
mov
lcall
mov
lea
ficompl
insl
inc
repnz
mov
ds
mov
imul
daa
mov
sahf
je
pushf
xor
nop
repnz
in
pop
cs
and
movsb
div
mov
push
movsb
ja
jbe
call
ret
test
fists
sbb
das
sbb
subb
or
and
fldcw
jnp
jae
enter
in
sub
fiadds
fwait
std
mov
xorl
jp
cmp
xor
jbe
cmpsb
push
push
jnp
or
sahf
into
ret
loop
int3
mov
fisubrl
mov
adcb
cmp
lods
neg
lret
inc
pusha
std
dec
pop
je
inc
mov
mov
mov
mov
push
xor
mov
clc
xchg
aad
dec
xchg
mov
pop
dec
push
std
test
pushf
push
xor
popf
mov
dec
inc
push
jp
int3
add
sti
pop
sbb
mov
andl
ja
xor
pop
ret
xchg
sbb
fldcw
dec
scas
scas
std
inc
and
rcll
jp
dec
adc
arpl
xchg
inc
fldenv
test
xchg
insl
lahf
mov
incl
ds
sbb
arpl
data16
add
sbb
inc
add
imul
lret
mov
sbb
mov
add
shll
cmpsb
sahf
sub
and
push
adc
push
dec
fs
cmp
lock
subb
mov
add
and
pop
or
dec
jmp
daa
ret
add
les
stos
pop
push
mov
pop
sbb
bound
lock
mov
push
push
insb
jecxz
lcall
sbb
insb
adc
mov
das
jne
movsb
inc
daa
jne
pop
xchg
push
cmp
and
xchg
shrl
fnstsw
rolb
inc
test
jns
movsb
in
repnz
out
fisubrs
pusha
or
js
adc
les
jl
idivb
scas
js
or
dec
xor
in
pop
and
add
out
mov
xchg
fsubrs
imul
inc
inc
jnp
xor
pop
or
jne
xchg
sub
jbe
mov
adc
xchg
lahf
dec
sbb
fbld
data16
lret
rolb
pop
scas
adc
int
testl
imul
mov
call
or
popf
mov
popf
xor
icebp
test
outsb
pop
sbb
movsl
mov
int
inc
cmpsw
cmp
mov
jbe
mov
outsb
xchg
pop
mov
fbstp
shr
mov
cmp
mov
out
dec
frstor
lret
das
mov
xor
mov
stos
xchg
ret
scas
and
cmp
sti
fsubrl
jecxz
dec
inc
add
mov
mov
dec
mov
shrl
jl
sub
xchg
loope
mov
icebp
push
mov
stos
cltd
jns
loope
sbb
movd
push
cs
dec
jbe
inc
push
xor
dec
fwait
nop
dec
push
fsubrp
std
divl
fistps
rorb
mov
pusha
ljmp
cmp
xchg
lahf
mov
push
jge
xchg
push
jns
fcmovbe
call
iret
lock
xor
rorb
mov
xor
sub
loop
pop
pop
icebp
ds
xchg
or
lock
adc
rcrl
mov
ret
cmpb
cmp
lock
jnp
addr16
pop
scas
or
jnp
add
and
inc
sbb
jl
test
movsl
rolb
in
mov
sbb
jbe
mov
cmp
pop
imul
ret
sub
sbbl
int
fs
popa
push
inc
cmpsl
cli
mov
je
add
sbb
mov
or
sti
or
movsb
sub
es
mov
sbb
stc
pusha
push
and
jbe
mov
pop
pop
sbb
sub
mov
loop
movsb
mov
aam
lret
fsub
ret
rcrb
shrb
shlb
out
mov
mov
jbe
add
call
adc
call
sub
dec
add
out
call
or
push
out
mov
jle
in
js
jle
mov
or
aaa
test
clc
jae
jae
fimuls
imul
sub
mov
in
adc
xor
fcomps
jbe
repnz
push
add
movsb
xchg
fdivr
addr16
pop
inc
mov
adc
mov
pop
shll
add
in
mov
cmc
push
push
cmp
inc
aaa
fmulp
repnz
flds
inc
mov
xchg
jmp
test
cltd
stc
mov
inc
cmp
add
ret
and
dec
insl
icebp
test
mov
xchg
or
les
lret
clc
sub
sbbl
xor
es
dec
cli
das
rcll
xchg
xchg
xchg
xor
test
insb
mov
das
xchg
faddl
repz
test
sbb
mov
out
add
fcomi
mov
mov
cli
lds
aam
sbb
insl
and
jmp
push
lock
fsubrs
in
pop
pop
push
dec
inc
mov
inc
mov
bound
mov
repz
sub
test
and
cld
bound
push
mov
test
sub
sbb
fwait
into
fisttpll
jno
and
std
mov
sbbl
sub
dec
ds
sbb
inc
fisubrs
in
ljmp
lret
and
div
push
sub
mov
xorps
movsb
sbb
test
rcrl
dec
out
adc
sbb
cmc
ret
stos
dec
fistpl
jmp
and
xchg
xchg
pop
ss
mov
lret
adc
mov
ja
adc
dec
adc
or
aam
add
ficoms
or
cmp
scas
inc
mov
jne
mov
shll
cld
adc
xchg
movsl
push
in
repnz
and
jbe
pushf
stos
mov
xor
add
iret
or
jl
push
add
iret
mov
mov
cltd
mov
outsb
cmp
and
addl
repz
xchg
mov
daa
data16
or
or
cmpb
sub
decb
rcll
push
scas
icebp
pop
inc
adc
or
mov
std
dec
jp
push
in
in
notb
mov
jae
lods
dec
mov
jecxz
subb
popf
imul
dec
jmp
ficoms
and
mull
pop
mov
add
int
in
pop
mov
mov
mov
loope
out
jp
je
cwtl
sub
inc
stos
rclb
jnp
test
or
stos
mov
inc
dec
add
shll
test
addr16
aaa
mov
rcll
rcrl
mov
sub
dec
repz
enter
lds
stc
xchg
into
out
enter
arpl
mov
pop
fldl
insl
xor
mov
xchg
adc
and
pop
and
jle
gs
nop
loope
fdivs
mov
sub
sub
mov
add
dec
jg
sbb
nop
push
sbbb
jmp
push
int3
frstor
add
mov
push
mov
in
ficomps
mov
sahf
mov
push
ficoml
rcrb
xchg
mov
push
push
ss
jecxz
pop
mov
mov
cmp
mov
into
add
adc
xchg
int3
movsb
das
aam
into
repz
cltd
addr16
and
mov
cli
repnz
lret
mov
repz
sbb
mov
cmp
pushf
nopl
ja
mov
not
add
cmp
adc
jo
adc
and
cmp
das
inc
lret
xchg
adc
jno
ljmp
inc
mov
js
pop
lds
fwait
add
daa
or
cmp
or
movsl
loope
add
sub
mov
aam
ja
iret
push
pushf
notb
xlat
sbb
les
mov
int
or
movsl
out
pop
daa
ds
gs
push
or
adc
fsts
xor
fidivrl
adc
rcll
pop
jge
or
cli
jo
imull
pop
cmc
push
mov
and
xchg
sbb
ljmp
mov
inc
rep
xchg
add
loop
cld
sub
mov
push
or
in
or
add
push
cmp
push
xchg
movsl
pop
jmp
sbb
mov
cmp
daa
dec
fs
push
fsubs
mov
cli
pop
ror
sub
fcoml
jbe
test
fstl
aad
add
inc
out
scas
pop
jp
cmp
jmp
rol
push
mov
xor
cld
iret
js
pmaddwd
xchg
push
xor
dec
pop
fwait
sub
jle
mov
stos
orb
ja
mov
repz
inc
adc
push
mov
add
push
jae
aam
mov
and
jle
nop
xlat
fiaddl
sbbb
cmp
stos
pop
add
inc
jno
inc
fiadds
push
lods
sub
mov
orl
sbb
pop
push
test
pop
int
adc
jnp
in
ss
pop
adc
imul
mov
lods
sahf
mov
jns
push
out
push
test
cmpsl
in
dec
and
scas
push
dec
adc
pop
xchg
or
adc
filds
sbb
fdivs
dec
in
leave
adc
dec
lea
inc
ss
jmp
mov
fdiv
pop
cmc
xchg
push
sbb
rorb
xchg
mov
and
mov
stos
lret
mov
les
mov
mov
pop
dec
jns,pn
sub
xor
jl
cltd
xchg
sub
sbb
aas
jo
popf
mov
stos
push
outsl
cmp
repnz
xlat
shll
addl
ja
mov
popa
into
mov
call
jns
imul
xchg
mov
or
jns
test
das
insb
shll
add
icebp
pop
dec
xor
cltd
mov
outsb
int3
iret
or
sbb
sub
mov
ret
xchg
std
sbbb
mov
xchg
call
jmp
jbe
push
xor
jo
popf
test
leave
gs
xor
icebp
cs
jbe
movsb
fdivl
or
das
icebp
mov
loop
adc
inc
icebp
pop
jmp
mov
cmp
insl
fldcw
dec
lcall
insb
fimuls
mov
or
arpl
inc
ret
ljmp
je
xlat
leave
mov
mov
adc
jp
mov
add
pmaxsw
adc
add
sbb
sbb
or
jnp
or
test
mov
or
adc
lcall
xlat
push
vpmulhw
test
sarb
fdivr
cs
iret
mov
dec
xor
out
or
fisubrs
xor
jo
ljmp
xor
in
cmc
enter
xor
push
popf
in
lea
shll
lahf
xchg
icebp
pmulhuw
mov
orl
sub
negb
mov
rolb
xor
in
mov
mov
shrl
pop
in
iret
push
and
gs
mov
push
stos
cli
xchg
sub
xor
dec
push
jecxz
pop
push
rcl
mov
mov
jmp
js
dec
out
aad
call
hlt
push
adc
fcoml
lods
sbbl
add
inc
sbb
add
or
push
cld
adc
movsb
sub
es
.byte
mov
cmpsl
add
ret
adc
jge
arpl
xchg
hlt
hlt
push
cmp
fstps
jp
mov
inc
mov
addl
out
push
outsl
push
daa
sbb
jmp
or
movsl
jns
rorb
pop
cmp
lcall
movsl
jmp
push
xor
incb
lock
lahf
cmp
pop
cmp
lret
fs
jns
js
int
hlt
fstl
dec
pop
test
cmpsl
sub
loop
loop
add
gs
jp
nop
call
push
lcall
fisttps
adc
sub
cld
dec
inc
adc
test
push
push
dec
out
orb
adc
push
push
xchg
pop
push
push
lahf
clc
lds
in
sub
lds
jo
faddp
fsubp
mov
fisubs
insl
mov
hlt
jns
push
or
push
movsb
es
inc
mov
push
mov
xchg
mov
data16
dec
out
xchg
xor
and
stos
xchg
dec
bound
mov
mov
in
push
repz
lock
mov
mov
pop
and
outsl
es
rol
leave
cmc
mov
xor
mov
in
push
sbb
mov
flds
jmp
sti
vminps
xchg
repz
je
mov
xchg
or
nop
add
cmp
out
inc
xor
mov
sbb
pop
inc
in
xchg
inc
jmp
adc
jae
cmpsb
push
adc
dec
jbe
inc
xchg
adc
xchg
or
xchg
out
lds
mov
pop
shll
test
dec
enter
jl
adc
clc
lret
dec
jg
dec
mov
sbb
sub
daa
xchg
in
std
and
sbb
in
push
mov
les
push
imul
xchg
lock
or
scas
jle
jg
cli
neg
mov
out
push
xchg
push
and
popf
xor
test
add
or
sub
in
decb
fnstsw
cmp
inc
iret
xchg
add
fs
xor
mov
lcall
adc
adc
jne
addl
lret
mov
mov
jle
and
in
notl
push
xor
lret
dec
jbe
inc
jae
xor
inc
adc
int
mov
cmp
fwait
xor
data16
subb
sti
test
xor
sub
jge
push
dec
push
mov
mull
loope
inc
dec
sub
imul
xlat
xlat
mov
or
call
test
aaa
xlat
fidivl
mov
mov
push
jg
repnz
mov
movl
in
push
popa
sbb
and
scas
pop
int
nop
mov
xchg
jmp
daa
xchg
dec
imul
gs
std
fdivrl
inc
cld
mov
push
in
add
and
lds
adc
jg
add
inc
xor
faddl
movsl
sbbb
mov
mov
stos
jge
scas
pop
xchg
imul
and
daa
sub
lea
je
cmpl
or
mov
adcb
cwtl
ja
xchg
mov
ret
outsb
popf
aaa
test
sbb
sub
push
imul
ret
lcall
adc
aaa
inc
push
pop
in
dec
adc
mov
movl
dec
mov
enter
push
adc
insl
or
dec
pop
push
mov
or
sahf
icebp
inc
sahf
inc
jbe
lahf
inc
fstp
jl
popa
lret
push
inc
int3
xchg
popw
mov
in
hlt
popf
mov
frstor
pop
std
in
jno
mov
jne
adc
es
cld
inc
inc
sbb
outsb
xor
test
cmc
in
and
dec
daa
pop
sub
cmp
int3
sub
jae
inc
outsb
inc
fidivrs
inc
fsubrs
std
jae
sbb
xchg
addr16
pop
or
aam
xor
imul
test
push
shll
sub
add
xlat
adc
hlt
mov
pushf
mov
jae
xchg
sbb
test
pop
pop
mov
xlat
mov
xor
push
sbb
sub
mov
cmpsl
mov
push
inc
jo
test
daa
test
pop
stos
and
inc
test
mov
outsb
pop
push
fstps
dec
and
icebp
shlb
xchg
push
push
xchg
lods
fisubs
idivb
xchg
cld
add
mov
sbb
call
xchg
out
pop
jbe
sub
push
cmc
pop
add
pop
das
sbbb
jnp
push
out
out
xchg
lahf
sub
dec
or
aaa
pushf
repz
notb
mov
ja
dec
sbb
cmp
rorb
mov
sub
shr
cmpl
push
ljmp
or
cli
fcoms
movsl
fcomip
jecxz
pop
out
std
fcmovbe
mov
add
movsb
repnz
pop
cmp
lret
sar
adcw
std
popf
clc
fs
cwtl
ljmp
xchg
and
adc
in
outsl
xchg
mov
pop
aad
lcall
es
lods
clc
fs
push
push
jnp
jae
cmp
cmpsb
sub
xchg
inc
test
test
xor
push
xchg
mov
addl
jg
aaa
push
sub
xchg
or
or
mov
lcall
sarb
jae
and
sub
icebp
inc
add
add
mov
cmp
insl
add
add
add
add
orb
add
push
add
orb
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xorb
add
mov
cmp
add
add
add
add
add
addb
add
cmc
out
dec
inc
outsl
insl
add
add
data16
add
add
addb
add
mov
cmp
add
add
add
add
add
add
add
addb
add
mov
cmp
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
js
add
add
add
cmc
out
dec
inc
outsl
insl
add
add
add
add
mov
add
add
add
mov
cmp
add
add
add
add
add
cwtl
add
add
loope
add
add
add
add
add
add
add
add
add
out
add
adc
add
xor
add
sub
add
pusha
repnz
jne
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
add
mov
mov
test
mov
test
test
incl
test
mov
mov
test
mov
mov
test
add
test
incl
test
add
add
incl
incl
incl
incl
add
incl
mov
test
add
test
test
test
test
test
incl
mov
mov
test
test
incl
mov
mov
test
test
incl
mov
mov
test
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
add
test
add
incl
incl
incl
incl
test
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
add
test
test
add
add
test
test
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
mov
add
add
inc
mov
xchg
test
mov
xchg
add
test
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
test
incl
add
mov
add
add
add
add
test
test
test
test
test
test
test
test
test
mov
test
test
test
mov
incl
add
test
test
mov
test
add
add
test
mov
mov
test
mov
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
mov
test
test
mov
test
mov
mov
add
add
test
test
mov
mov
inc
mov
xchg
test
add
add
add
test
mov
test
add
add
inc
mov
add
test
test
test
test
inc
mov
xchg
test
mov
add
add
add
test
inc
mov
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
test
test
add
test
test
incl
add
add
test
incl
mov
test
add
add
add
add
add
test
test
incl
add
test
incl
mov
test
add
add
test
incl
add
incl
incl
mov
test
add
add
test
incl
add
incl
test
add
test
add
mov
test
add
add
test
incl
add
incl
add
incl
add
add
test
mov
test
add
add
test
incl
add
incl
add
add
test
mov
test
add
add
test
add
test
mov
test
add
add
test
test
test
test
test
test
test
mov
test
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
add
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
es
aaa
mov
pop
fwait
cmp
add
add
or
add
add
push
jb
je
outsb
imul
gs
add
push
jns
je
insl
add
adcl
je
add
push
outsb
imul
outsl
xor
add
push
imul
dec
push
imul
add
inc
jo
insb
imul
push
outsb
imul
add
mov
jae
je
insb
jae
imul
dec
gs
jo
xor
add
add
add
and
add
add
sbb
test
add
add
sub
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
sub
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
pop
dec
xchg
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
add
push
jmp
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
add
and
xor
sub
and
xor
sub
and
xor
xor
xor
xor
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
popa
add
add
add
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
jb
addr16
bound
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
dec
xchg
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
add
add
popa
add
add
add
pop
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
add
push
jmp
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
and
xor
sub
and
xor
sub
and
xor
xor
xor
xor
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
and
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
das
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
pop
and
cmpw
jne
mov
add
cmpl
jne
movzwl
mov
imul
mul
sub
imul
add
jne
sub
jne
sub
jne
nop
jb
add
jmp
nop
nop
nop
nop
nop
nop
jp
add
jb
add
xchg
add
add
add
imul
gs
xor
cs
insb
add
add
je
insb
inc
js
je
add
inc
add
rolb
mov
xchg
lods
inc
pop
icebp
or
adc
sbb
lret
mov
xor
fidivs
and
shr
jg
sub
mov
xchg
stos
inc
pop
out
push
popf
mov
mov
push
push
mov
sub
mov
mov
cmpb
je
add
xor
rol
add
add
ror
inc
jmp
pop
pop
leave
ret
mov
test
mov
js
movzbl
jecxz
pop
jmp
push
push
push
call
push
call
call
add
push
push
push
push
push
mov
add
push
push
push
push
mov
mov
add
pushl
popl
mov
add
mov
mov
add
mov
add
mov
dec
mov
cmp
ja
lea
push
call
cmp
jne
cmp
jne
xor
mov
mov
mov
add
mov
add
pop
pop
pop
pop
leave
ret
add
add
dec
jne
int
push
mov
mov
add
movzwl
mov
add
pusha
call
call
add
add
popa
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
mov
add
mov
mov
mov
test
je
dec
jecxz
xor
inc
rol
add
inc
dec
add
add
jmp
ret
popa
add
dec
jne
mov
test
je
mov
add
cmpl
je
mov
movl
call
call
add
add
push
push
pushl
add
call
pop
pop
test
je
mov
mov
mov
add
mov
test
jne
mov
add
and
and
mov
test
je
push
push
push
push
test
jne
call
mov
add
cmp
add
lea
mov
mov
sub
xor
cmpb
je
ror
add
rol
add
add
inc
jmp
ret
add
jmp
push
pushl
push
call
mov
xor
cmpb
je
movb
inc
jmp
add
jmp
sub
push
push
call
pop
pop
pop
mov
mov
cmpb
jae
sub
movl
jmp
cmpb
jae
neg
add
movl
jmp
xor
movl
mov
add
xchg
pop
inc
jmp
add
jmp
push
add
add
push
loope
xchg
fiadds
add
ret
push
xor
dec
in
add
ret
push
test
add
add
push
xlat
pop
mov
add
ret
push
sub
add
push
jnp
sbb
add
ret
push
int
out
rolb
add
ret
push
pop
lea
push
jno
inc
xor
add
ret
push
ret
xchg
insb
pop
add
add
push
adc
add
ret
push
fimuls
add
add
push
mov
add
ret
push
or
repnz
add
push
pop
js
ret
add
push
scas
dec
dec
add
add
push
add
add
add
ret
push
push
je
loop
add
ret
push
movsl
shl
add
add
push
mul
add
add
ret
push
dec
rolb
push
fwait
xchg
dec
incl
add
ret
push
in
sub
sub
add
ret
push
aas
xchg
clc
pop
add
add
push
xchg
lret
repnz
add
push
jecxz
xchg
sbb
push
xor
add
ret
push
xchg
or
add
ret
push
ftst
aad
add
add
push
sub
aad
add
add
push
jge
cld
lods
add
add
push
iret
push
popf
cmp
add
ret
push
and
or
push
jae
xchg
mov
add
ret
push
lds
in
add
add
push
pop
dec
mov
push
imul
ret
push
mov
add
ret
push
or
add
ret
push
pop
xchg
imul
add
push
mov
mov
add
add
push
add
aas
add
add
push
push
sbb
push
cmpsl
call
add
push
stc
mov
daa
add
add
push
dec
std
rcr
add
ret
push
popf
inc
notb
push
out
pop
les
push
inc
inc
jle
add
add
push
xchg
jne
add
add
push
in
std
faddl
add
ret
push
aaa
jmp
mov
add
ret
push
mov
push
add
add
push
fistpl
daa
aad
add
ret
push
sub
add
ret
push
jg
inc
push
add
add
push
rcll
add
push
and
loope
add
ret
push
jne
jecxz
add
add
push
insl
jecxz
add
add
push
sbb
cmpsl
jnp
add
ret
push
imul
add
add
push
mov
add
ret
push
maxps
ret
push
popa
push
add
push
mov
sub
add
ret
push
add
add
ret
push
push
jo
bound
add
ret
push
test
add
ret
push
sti
in
xor
add
ret
push
dec
fcmovbe
xor
add
ret
push
lahf
mov
add
push
icebp
cmp
add
push
inc
cmpsb
icebp
and
add
ret
push
xchg
jecxz
testl
adc
mov
add
ret
push
cmp
dec
add
add
pusha
mov
cld
call
pop
sub
lea
push
lods
mov
lods
mov
push
mov
lods
ror
xor
stos
loop
pop
pop
lea
dec
jecxz
jmp
mov
call
pop
and
add
inc
add
movsb
popa
jmp
add
add
add
