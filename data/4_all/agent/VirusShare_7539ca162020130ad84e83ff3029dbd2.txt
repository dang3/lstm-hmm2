jle
push
jo
scas
or
mov
sti
mov
aaa
popf
mov
aaa
out
daa
leave
pop
mov
mov
and
mov
scas
fwait
sub
mov
pushf
test
enter
pop
sbbb
push
pop
stc
or
pop
popa
push
xchg
jl,pt
adc
in
ljmp
adc
jp
leave
jns
das
mov
fcmove
add
push
icebp
fsubl
mov
dec
das
movsb
fildll
push
repz
xor
testb
std
hlt
mov
mov
cmp
shrl
push
lcall
orl
inc
sub
out
shl
push
mov
imul
cmp
rcrl
adc
imul
cmp
data16
std
inc
sbbl
shlb
popa
mov
or
cmpsb
cwtl
inc
insl
shr
rcll
sar
aam
das
mov
inc
popf
jno
jnp
in
in
fistl
nop
gs
imul
cmpl
mov
sbb
into
sbb
test
cwtl
sbb
aaa
mov
add
pop
outsl
test
jbe
mov
icebp
ja
mov
out
pusha
dec
cld
jge
sti
mov
stc
sub
mov
cld
add
jp
test
insl
lahf
pop
mov
sbb
rol
mov
mov
cmp
call
lock
inc
or
scas
sub
orb
adc
lea
je
jecxz
es
insl
jne
fiaddl
in
test
add
pushf
push
sub
pop
rorb
or
ljmp
je
pop
xor
mov
je
les
mov
int3
adc
sbb
jnp
cmp
sbb
jle
jg
jge
test
cs
and
lret
adc
mov
ror
cmpl
jmp
mov
mov
popf
outsb
inc
mov
cmp
roll
loope
aad
ret
sub
xchg
pop
rcll
mov
pop
pushf
lahf
frstor
jp
arpl
sbb
and
jnp
ror
mov
lret
push
push
insb
loopne
shll
shrb
sbb
push
mov
in
push
lds
xor
stc
arpl
sub
xchg
xor
les
in
xor
dec
sbb
jae
mov
aas
fcoml
lods
jle
and
jmp
enter
in
in
cmp
lock
pusha
call
add
or
cmp
aad
repnz
cld
or
adc
xchg
sub
xchg
outsb
pop
sahf
fnstsw
xchg
push
pop
aad
mov
lahf
mov
or
daa
jns
mov
sti
xchg
sbb
addr16
sbb
xor
sbb
mov
lds
mulb
cs
daa
cmc
or
pop
imul
mov
mov
mov
loope
mulb
sbb
add
push
xchg
push
push
loope
gs
movsl
mov
mov
mov
adc
decb
and
jo
frstor
push
sahf
fldenv
or
xor
fwait
inc
loopne
mov
mov
or
pop
and
cmp
adc
adc
into
add
sbb
mov
push
xchg
cmp
xorb
in
xchg
mov
decl
mov
repnz
mov
mov
popa
cmp
xchg
xchg
nop
xlat
push
adcl
mov
lahf
pop
and
pop
mov
ljmp
cmp
aad
mov
and
xchg
mov
nop
mov
push
dec
stos
mov
inc
andl
and
aas
into
std
xor
mov
arpl
lret
cltd
mov
je
mov
push
cmp
mov
clc
cltd
loop
mov
inc
pop
mov
push
push
pop
or
fldl
into
pop
popa
adc
xor
cmp
hlt
jo
mov
in
loop
push
pop
jne
lret
int3
popa
inc
sbbb
adc
stos
sbb
inc
pop
pushf
pop
popa
out
nop
mov
imul
lahf
push
push
fmull
lods
mov
mov
stos
test
loopne
and
jo
movsl
mov
out
lods
mov
jae
xor
insb
dec
or
aad
pop
push
pop
sbb
test
xlat
fisubl
pop
in
push
jbe
int
cs
pop
cmp
ja
call
lock
jnp
xlat
enter
inc
leave
pushf
fmuls
add
shll
jns
xchg
xchg
push
es
sub
imul
adc
sbb
jmp
xchg
adc
sub
cmpsb
sbb
mov
lcall
inc
mov
je
aam
adc
add
xchg
pop
push
fldcw
xor
xor
lret
xchg
into
pushf
xor
je
mov
mov
push
rorl
mov
sub
aaa
adc
dec
shlb
stos
push
and
xchg
and
stos
mov
ds
stos
mov
cli
ljmp
in
mov
mov
or
inc
xor
aam
sub
jae
xchg
dec
xchg
cmpsl
sbb
nop
jmp
sbb
jo
punpckhwd
call
das
push
ret
xlat
addl
imul
dec
clc
or
rcl
mov
dec
clc
inc
xchg
sub
adc
lock
jbe
fidivs
or
addr16
mov
mov
jge
gs
rorl
call
and
mov
cmpsl
setns
stos
mov
add
dec
mov
jecxz
cmp
repz
andl
sub
pop
push
and
cmc
cmp
sbb
push
pop
adc
push
jns
ret
out
lea
dec
mov
xor
out
lret
pushf
lds
pop
sbb
clc
popf
cmp
jne
xor
sbbl
adc
xor
add
inc
inc
mov
mov
push
test
mov
mov
mov
mov
aam
mov
call
and
movsb
jecxz
cmp
xchg
xlat
and
js
mov
mov
cmp
dec
nop
call
in
lods
jmp
divb
aas
dec
popa
and
aaa
jl
hlt
xlat
aaa
xchg
ret
mov
pop
insb
jne
adc
jns
rolb
and
add
cmp
mov
jne
sbb
push
add
sub
shl
hlt
iret
cmp
loope
fsubs
jo
jmp
mul
bound
add
aad
repnz
ficompl
xlat
adc
movsb
or
sarl
dec
pop
jp
jae
add
jmp
jg
insb
jne
mov
cmp
push
jmp
aaa
jle
icebp
cmp
test
jg
loop
andl
outsb
dec
pop
leave
sbb
mov
das
mov
mov
xor
push
xchg
popf
imul
push
mov
xor
je
mov
or
sarb
jle
and
fildl
stos
and
xor
insl
sar
test
push
push
arpl
mov
neg
xor
push
or
push
sub
dec
jne
push
cltd
test
lcall
jecxz
pop
jge
int
xchg
test
xchg
sbb
ljmp
movsl
push
xchg
lahf
fxch
inc
ret
and
ret
dec
mov
test
in
sbb
es
sbb
push
pusha
sub
jg
push
mov
push
or
fxch
cmp
add
ja
ja
hlt
or
jo
in
lcall
and
mov
jne
xchg
icebp
push
arpl
out
rep
fcomps
cmp
and
mov
push
lea
addr16
sbb
scas
out
mov
cli
sub
mov
in
cltd
aaa
pop
mov
fwait
xchg
sub
test
cmpsl
push
cmpsb
icebp
sbb
inc
fbstp
clc
adc
jl
xor
js
mov
xchg
jns
les
or
movsb
mov
add
xchg
mov
mov
out
and
ret
mov
aam
sbb
xor
daa
mov
and
iret
push
icebp
xchg
mov
dec
push
xlat
sub
test
arpl
xorb
push
sbb
or
int
sbb
jmp
cwtl
rcrl
enter
mov
add
xor
jnp
inc
mov
test
out
mov
mov
icebp
stos
add
push
cmpsl
pop
scas
pop
and
pop
shll
mov
ror
test
pop
lret
flds
xorl
push
jl
jp
xchg
aaa
mov
add
jle
lods
and
movsl
andl
push
jg
shl
sbb
leave
sbb
xlat
mov
pushf
push
pop
mov
mov
lea
jg
mov
gs
pop
sbb
mov
mov
ljmp
insl
push
cmp
mov
xor
cmp
pop
test
into
fwait
in
cmp
mov
mov
enter
filds
mov
aad
ljmp
adc
add
inc
add
jno
xor
cld
pop
loop
sbb
cld
inc
push
sahf
pop
push
int3
fsubrl
and
jae
les
xor
mov
xchg
pop
in
loopne
in
pop
mov
lods
mov
and
mov
and
sub
das
xor
cmpsb
lret
cmp
in
decl
int
fistpll
cmp
xchg
sbb
mulb
jge
cmpsl
shlb
sbb
arpl
ja
pop
jns
mov
fdivl
fdivs
ja
inc
jne
daa
adc
inc
dec
sbb
jmp
lret
pop
inc
ljmp
jmp
stos
jnp
lods
pop
orb
fwait
mov
leave
out
add
or
mov
dec
add
jnp
rcr
lahf
or
out
xchg
cmp
xchg
out
pop
inc
arpl
mov
pop
clc
adc
xchg
mov
into
pop
in
jae
fbld
imul
loop
xchg
lahf
mov
xchg
daa
adc
adc
pusha
fidivrl
push
movsl
dec
in
sub
xchg
jge
mov
sub
mov
mov
mov
fwait
xchg
outsl
fucomi
xchg
xchg
mov
call
test
inc
rcll
in
inc
fcmove
mov
and
and
and
jl
or
jge
inc
mov
sti
insb
stc
out
sti
js
lods
fadds
dec
dec
mov
sbb
pushf
fnop
sarb
jns
popa
cld
push
push
out
lahf
scas
xchg
in
add
mov
call
lcall
jmp
dec
das
sbb
shll
cmp
cmp
scas
inc
mov
push
push
xor
adc
loope
mov
and
mov
aam
adc
xor
imul
lcall
test
dec
int
aas
sti
sbb
int
sub
scas
adc
pop
jl
inc
jmp
aas
sbb
xor
xchg
cmp
aam
hlt
and
fwait
xor
mov
xchg
and
pop
inc
lock
add
enter
add
pop
out
xchg
push
inc
out
repnz
je
mov
popw
clc
ss
loopne
mov
loop
cltd
fiaddl
aaa
mov
hlt
lock
call
ja
scas
imul
sbb
lods
pusha
jno
adc
add
sarl
xchg
inc
mov
mov
mov
movsl
and
and
and
int3
aas
sbb
ss
das
cmp
pop
mov
cltd
push
lret
subb
repnz
adc
mov
cwtl
stc
push
xchg
mov
dec
jg
test
sbb
xor
cmp
dec
mov
lret
jns
mov
mov
cmp
push
adc
mov
ret
push
sub
loope
pop
js
icebp
fdivr
sbb
or
or
loope
addb
push
add
fisttps
mov
dec
scas
push
pusha
or
mov
jne
loopne
and
cld
into
data16
pop
push
pop
jne
imul
xlat
outsb
jmp
bound
mov
push
push
xchg
fnsave
inc
xor
int
out
les
arpl
ret
in
cmp
into
sti
jge
sub
or
popa
repz
xor
xchg
mov
and
iret
xchg
orl
sub
ret
mov
ret
loopne
movsb
and
adc
sbb
xor
movsb
or
sub
xor
cli
cmp
jns
enter
sahf
mov
pop
push
or
xor
push
inc
out
pop
gs
in
pusha
push
pop
sub
cmpsl
xchg
push
iret
adc
lcall
scas
cmp
insl
add
mov
pop
outsb
xor
lods
inc
push
jbe
fdivrl
xchg
mov
int
scas
fisubl
ljmp
ss
inc
push
cltd
jle
cmp
dec
adc
mov
loop
pop
or
mov
mov
lods
subl
out
loopne
cltd
push
loop
cld
test
stos
inc
out
out
lret
adc
pop
dec
lahf
pop
xchg
cmp
mov
ret
or
in
cmc
mov
dec
je
js
and
mov
jmp
sub
cwtl
inc
sub
imul
in
pop
adcl
into
repnz
adc
xchg
and
xlat
flds
xchg
or
sbb
ds
aas
and
mov
pusha
testb
pushf
jg
into
arpl
repnz
mov
mov
addr16
or
adc
sub
adc
mov
jecxz
mov
scas
lds
pop
mov
xor
add
ret
daa
daa
ds
cmp
add
xchg
mov
push
outsl
sahf
ds
push
sub
in
es
mov
sbb
scas
cmp
das
lea
and
or
mov
ja
fnstcw
bound
fwait
imul
arpl
dec
pop
pushf
mov
and
movsl
push
outsb
add
push
inc
out
ss
ss
jp
fsts
xchg
mov
mov
or
stc
ret
xor
add
repnz
hlt
cltd
mov
mov
sar
mov
sbb
adc
and
xchg
in
push
fiadds
fdiv
enter
mov
mov
and
mov
mov
add
in
mov
test
fldl
mul
push
in
test
pop
jp
cmc
mov
mov
pop
stos
jo
adc
adc
ja
push
daa
inc
jecxz
cmpsl
xor
ja
mov
sbb
bound
out
arpl
mov
imul
mov
jns
test
jecxz
icebp
cmc
push
out
adc
cs
mov
mov
mov
xor
mov
rcll
or
cwtl
xor
xchg
pop
lods
mull
jbe
not
es
add
mov
pusha
mov
pusha
jne
lcall
out
xchg
or
jle
enter
rcll
sbb
sbb
lahf
xchg
dec
cwtl
pusha
rcrb
mov
jne
inc
add
gs
pop
jge
incb
jg
push
or
arpl
adc
xchg
dec
cmpb
shlb
pop
shll
iret
fwait
xor
sbb
sahf
pop
andb
mov
lret
adc
js,pt
adc
mov
nop
popf
sub
jae
cmp
mov
in
cmpsl
ret
scas
add
sbb
jo
js
add
out
lret
iret
bound
ss
xchg
hlt
pop
outsl
insb
fldcw
rol
xor
mov
pop
dec
sbb
rolb
and
lock
xchg
xchg
adc
jae
or
inc
test
ret
stos
mov
cmp
lods
adcl
js
or
dec
jl
mov
sub
sbb
lds
mov
aaa
pop
add
xchg
outsl
daa
fisubl
jge
aas
pop
in
fcoml
jp
inc
movsb
fsts
std
stos
and
xchg
add
adcl
iret
aaa
ret
jnp
mov
push
shll
jp
xor
push
cmpsb
inc
mov
push
out
sub
dec
gs
dec
es
xchg
mov
xchg
enter
clc
inc
cmp
push
in
test
push
gs
cmp
xor
fistpl
lcall
xor
bound
std
adc
pop
lret
add
sti
adcb
fisttpll
push
pusha
inc
nop
loope
in
fnstenv
orl
xchg
int3
push
cmp
inc
add
push
push
xchg
mov
es
pushf
adc
imul
or
sti
loope
jle
je
lahf
cli
jo
sub
push
icebp
das
cmpsb
mov
or
stc
aad
pop
jecxz
dec
or
mov
movsl
cmp
sbb
and
mov
dec
data16
jecxz
cmp
loopne
loopne
pusha
jmp
inc
inc
fdivl
dec
movsl
in
popf
or
add
jmp
iret
jne
or
mov
xor
fwait
imul
adc
sbb
ror
dec
pop
sub
repz
add
ffree
mov
xchg
mov
cwtl
movsb
adc
inc
xlat
in
mov
out
mov
pop
mov
mov
mov
cli
pop
lock
pushf
orl
out
jno
hlt
sub
jg
jecxz
mov
dec
jecxz
and
div
movsb
jnp
pop
cmp
shrl
dec
jle
fcmove
es
out
xchg
stos
test
imul
cmc
jp
add
loope
jecxz
sub
push
andb
mov
sbb
or
mov
mov
jl
fstp
rdtsc
outsb
or
sub
jo
lret
icebp
xor
xor
addl
or
mov
hlt
and
sahf
shll
lahf
pop
xchg
sahf
and
mov
sbb
xchg
pop
xchg
pop
cwtl
shll
inc
add
pop
and
out
mov
or
nop
and
jge
fs
cmpb
jns
ret
lret
leave
test
push
push
push
xchg
andb
inc
fisttpl
mov
sub
popf
loopne
mov
movl
stos
jns
pop
xchg
je
or
xor
push
stos
lret
pop
mov
lock
into
cld
mov
in
cwtl
lock
enter
and
pop
jnp
cmp
cmc
lea
xchg
or
shll
arpl
fwait
popf
repz
dec
jecxz
cmc
sub
adc
push
aas
add
fstpt
dec
adc
cmp
negb
pop
aam
into
enter
das
xor
lods
mov
sub
push
mov
ret
loopne
pop
fldcw
mov
idivl
pusha
sbb
jbe
jne
sarb
call
inc
or
cmp
cmp
mov
into
inc
js
ds
dec
ret
into
ret
fcomip
loop
mov
repz
mov
cmp
xchg
iret
fsubl
cmpl
xchg
dec
cmc
cmp
loopne
sub
pop
add
and
jmp
jecxz
data16
js
and
jp
mov
loop
mov
xor
imul
push
mov
ret
adc
jae
ret
es
xchg
pop
xlat
subb
mov
jno
ficomps
jge
pop
int3
pop
jne
cmp
and
jns,pn
and
push
cltd
clc
imul
fidivrs
in
sbb
pushf
shll
push
out
jb
push
scas
fnstsw
in
sub
adc
pop
or
cmp
loop
scas
js
rclb
push
push
push
sub
les
add
int
jle
test
push
scas
push
sbbb
cwtl
pushf
mov
adc
mov
jl
add
cmp
movsb
xchg
fldcw
inc
push
dec
xchg
cmp
mov
jb
add
mov
inc
jmp
lods
xor
aas
out
aas
imul
mov
xorb
xor
fwait
popf
xchg
mov
dec
mul
fildll
idivl
sbb
movsb
push
mov
data16
lcall
in
insl
jmp
lock
popa
cmpsl
and
mov
das
xor
sub
aam
insl
sbbb
pushf
pop
leave
out
adc
lret
adc
lcall
sarl
mov
sti
mov
mov
jecxz
leave
cltd
cmpb
dec
insb
or
pop
sbb
cmp
jmp
stos
jb
fwait
lret
nop
dec
mov
push
or
or
inc
stos
sahf
cmpl
mov
daa
push
arpl
movsl
xchg
aas
xor
fisubrs
xchg
adc
repnz
add
idivl
mov
mov
sti
loopne
adc
movsb
rcl
repz
adc
sbb
jmp
das
sub
mov
jbe
add
mov
fimull
cmpsl
daa
into
pop
xor
ret
movsb
push
adc
pushf
or
sub
push
sub
jle
sbb
call
aas
jmp
iret
and
lcall
xchg
scas
data16
cltd
dec
sub
and
xchg
jno
push
mov
call
adcb
pop
test
push
sbb
decl
sbb
into
jns
into
ret
push
icebp
nop
jne
push
inc
dec
jge
mov
loopne
xchg
aas
gs
pop
jp
push
adc
sbb
push
stos
and
sub
and
out
xor
mov
inc
mov
jl
stc
out
scas
jns
leave
pop
pop
or
mov
mov
lods
hlt
sbb
push
xchg
xchg
cmp
mov
popa
push
lock
cmp
sarl
add
pslld
push
sarl
and
and
pop
pop
lahf
lahf
testl
push
mov
pop
je
notb
add
mov
jne
and
and
push
stc
xor
jb
scas
lock
push
jle
orl
mov
enter
adc
mov
inc
xor
gs
shll
andb
test
mov
stos
dec
in
stc
loopne
std
push
aas
lret
loop
adc
scas
repz
arpl
insb
push
leave
sbb
sarl
jb
fdivrl
pop
aas
and
into
lds
xor
mov
roll
movsl
movsl
sbb
mov
mov
or
mov
aam
jbe
pop
mov
ret
pop
mov
hlt
fiaddl
and
jne
push
jle
rcrb
mov
jno
aam
push
push
lds
mov
psrad
outsl
push
fnsave
sbb
sbb
std
xchg
neg
nop
mov
jge
cmp
mov
dec
xchg
adc
popf
inc
cltd
mov
ret
sarl
push
mov
and
mov
rcr
pop
pushf
movsl
shll
movsb
xor
loopne
or
xor
mov
sbb
lea
int3
sub
fsubs
fstp
ja
insb
adc
mov
lds
sbb
cs
xchg
stc
pop
fmuls
es
mov
mov
pop
pop
jmp
push
scas
imul
push
jb
icebp
xor
scas
sti
dec
xchg
xor
push
xor
adc
xchg
push
adc
mov
dec
push
das
ds
adc
mov
ret
dec
inc
out
loopne
insb
test
idivb
lcall
jmp
sbb
push
roll
jmp
pop
jl
je
and
int
xsha1
cmpsb
or
ret
ljmp
xlat
into
notb
aas
repz
xchg
decb
dec
adc
adc
mov
mov
imul
in
inc
mov
mov
push
xor
xor
pop
jp
xchg
nop
or
dec
cwtl
jno
xchg
into
xor
jle
leave
sub
ror
fcoms
cmp
out
movsb
xchg
enter
lods
sub
mov
jb
dec
mov
dec
sbb
ss
inc
or
sub
pop
jl
outsb
xchg
outsl
fmull
push
lea
dec
enter
aaa
sub
mov
test
pushf
adc
dec
popa
scas
mov
sub
aaa
xchg
out
repnz
stos
fwait
sbbl
outsl
cld
inc
icebp
push
icebp
push
mov
xor
sub
mov
stc
imul
inc
aas
ljmp
in
mov
arpl
popa
sub
xchg
dec
mov
sub
adc
lods
repz
pand
dec
sub
fiadds
jp
adc
and
push
imul
mov
insb
xchg
mov
sahf
mov
inc
fcoms
pusha
clc
xor
jo
in
imul
mov
and
pop
cmp
rolb
mov
je
lods
js
fidivrs
inc
mov
dec
mov
inc
clc
cmpsl
cmp
fbstp
cltd
fisubrl
divb
and
adcl
jle
popa
push
fisubl
mov
loopne
jo
mov
jp
insl
pop
mov
jnp
mov
imul
mov
and
adc
pop
fdivrs
sub
out
adc
push
mov
hlt
mov
inc
dec
dec
repz
dec
ljmp
insl
stc
insl
test
mov
sbb
fcmovbe
or
inc
gs
mov
aas
mov
mov
imul
sub
iret
int
div
mov
sub
cmp
shl
inc
jno
push
arpl
push
pop
lock
adc
add
push
mov
std
cs
stos
loope
xchg
lret
mov
shlb
dec
or
push
idivb
or
je
adcb
aaa
xchg
mov
mov
cmp
push
cld
sbb
in
mov
mov
out
mov
repnz
stc
lods
movsl
jnp
pop
mov
rclb
les
push
dec
mov
xor
push
xchg
arpl
rorl
push
aas
rcrb
notl
jle
int3
jo
adc
push
int3
mov
cld
or
dec
into
fidivrs
lock
fwait
ret
jo
in
sub
loope
movsl
inc
push
int
mov
sub
mov
iret
sbb
scas
and
rcr
xchg
lahf
sub
pop
es
cmpb
cld
jns
pop
push
int
push
mov
add
cltd
xor
mov
call
cmpsl
imul
hlt
faddl
shlb
dec
mov
cmpb
pop
sbb
dec
imul
cs
pusha
mov
cmp
clc
lods
jbe
out
jbe
dec
aas
cmpb
fsubs
loope
mov
push
cld
rorl
cmp
add
xchg
leave
mov
ret
mov
sub
push
or
ljmp
fwait
out
cmp
adc
or
xor
dec
movsb
push
jnp
ficomps
mov
fnstcw
mov
shrb
pop
jno
rclb
or
dec
mov
aam
aam
je
xor
jl
jg
push
mov
in
insb
in
or
lret
inc
jns
pop
push
push
pop
mov
fcomip
jmp
xor
stos
xlat
cmp
and
sbbl
pop
test
lock
test
loop
cmp
fneni(8087
lods
sahf
sbbl
mov
adc
cmp
shlb
arpl
lods
int
out
ljmp
sub
rclb
je
movsl
jnp
add
incb
test
xor
or
sub
std
ds
loopne
push
mov
ss
xorps
scas
mov
imul
cmp
cmp
nop
or
jle
jae
and
mov
scas
add
xchg
xchg
fisttpl
movsb
mull
xchg
loopne
ret
mov
xor
dec
push
dec
add
lods
lcall
adc
fstpt
or
mov
push
inc
lret
or
enter
dec
cmp
cmp
adc
mov
dec
inc
lea
pop
cmp
decl
ss
rorl
xor
test
iret
aam
aad
gs
and
lcall
xchg
fcoms
int3
mov
out
push
cmp
addr16
jne
repnz
movsl
push
xlat
hlt
int
pop
fs
mov
aam
das
ffree
or
inc
lea
in
inc
jno
aaa
lds
int
mov
pop
jae
aaa
iret
outsl
push
lods
mov
and
ret
pop
xchg
sbb
loop
bound
xchg
jg
pop
jmp
cs
jp
pop
jno
leave
jmp
push
in
xchg
cmpl
push
add
xchg
cmc
push
cld
cmp
mov
sub
mov
popf
dec
push
adc
mov
xor
fstps
orb
mov
push
test
ljmp
cmpl
add
je
mov
test
loopne
mov
pop
rolb
cmp
cwtl
fidivrl
push
in
dec
mulb
lret
pop
push
xor
int3
rcrb
pop
cwtl
dec
sbb
frstor
faddl
jmp
idivl
loopne
cmp
mov
ljmp
mov
sbb
pop
test
cmp
aam
or
cmp
xchg
clc
cmpsl
mov
cmc
sub
shrl
cmp
roll
in
mov
inc
and
hlt
mov
dec
cwtl
sti
inc
push
adc
mov
xchg
cld
gs
jl
aam
pop
add
mov
insl
add
loopne
or
add
jl
dec
adc
sub
call
push
xchg
mov
hlt
pop
or
sbb
fdivrp
mov
jb
loop
ret
fstps
call
push
pop
pop
pop
inc
cmp
xor
push
mov
cmp
xchg
dec
cltd
mov
mov
aaa
cltd
pop
in
mov
jl
aam
jl
movsb
mov
sbb
push
sti
mov
lcall
pushf
in
add
sub
data16
fs
cmp
cmp
out
in
in
inc
lret
push
jne
mov
aas
cmp
gs
rorl
jne
add
jge
jl
roll
inc
loope
cmp
mov
and
dec
lock
pop
das
mov
push
push
mov
dec
sbb
inc
test
shl
ss
and
mov
cli
stc
popf
xchg
sub
dec
ret
mov
outsb
or
adc
icebp
in
rcrl
fs
xchg
imul
push
repnz
mov
mov
inc
dec
aam
pop
jne
push
aas
push
fdivs
jae
pop
cmp
xlat
or
lea
scas
les
out
int
cmpsl
inc
imul
orl
jge
fmul
nop
hlt
jmp
cmp
bound
movsb
xchg
pop
mov
pop
into
dec
aam
sbb
mov
int3
pop
bsr
add
jle
scas
dec
je
ss
jb
add
xor
ret
cmpl
mov
sub
ja
xchg
cmc
inc
aaa
pop
and
fsubrl
out
enter
lea
mov
cmpsb
pop
ror
jo
sarb
mov
pop
xchg
sbb
or
mov
or
lret
aas
cmp
movsb
pop
sahf
pop
push
movb
mov
add
loop
xor
xchg
fsubrs
stos
mov
cmp
mov
xor
inc
shll
shl
or
sub
mov
cmp
adc
mov
push
mov
jbe
stc
jae
daa
mov
push
push
mov
cmpsl
rcl
push
dec
lret
leave
cld
and
push
std
aas
cmc
pop
fcmove
cmpxchg
push
mov
call
pop
xchg
bnd
xchg
in
add
cmp
fadds
cltd
sub
repz
in
cmc
aas
xchg
aam
stc
rorb
je
outsl
pop
cmpsl
push
push
or
popf
add
cmpsl
xor
mov
inc
mov
pop
mov
or
sbb
mov
inc
fcomip
jl
ja
or
nop
stos
sbb
cmp
out
sub
xlat
sub
aaa
cmp
sub
push
fsubr
or
es
loop
pop
cwtl
ja
out
notl
mov
xor
sub
adc
aas
cmp
ficoms
aad
xor
stc
mov
and
test
cwtl
xchg
rcll
cwtl
ds
addb
jmp
sub
dec
movsb
jmp
lods
enter
xchg
and
cmp
push
or
mov
mov
imul
cwtl
sub
push
and
lcall
cmpsb
mov
mov
jnp
sbb
and
sub
stc
shl
sbb
outsl
xchg
fwait
cmc
mov
inc
dec
or
xchg
stc
insl
pop
add
mov
or
push
loop
pop
mov
repnz
out
outsl
cmpsl
pop
or
pop
mov
add
add
insb
mov
fsubs
cs
inc
nop
jne
std
mov
sbbl
bound
dec
xchg
lret
inc
pushf
mov
mov
push
xor
imul
pop
xor
sub
mov
dec
mov
mov
fs
dec
jl
lock
cmp
cmc
scas
sarb
lods
mov
jp
adc
inc
stos
gs
rorb
stos
sub
and
nop
xchg
lods
inc
jl
fstps
jge
add
lret
jge
lret
dec
paddusw
jo
scas
pop
inc
pop
dec
add
pop
loope
mov
xor
pop
and
jno
mov
pop
sub
push
push
and
mov
jno
xlat
gs
inc
popa
mov
mov
in
loop
test
push
push
cli
not
int3
fiadds
std
cmpsb
xchg
xor
jae
and
psrld
mov
ja
pop
in
cmp
in
stos
test
or
xor
mov
test
sbb
push
jae
cs
sub
loope
cmp
mov
inc
mov
sub
or
mov
loope
ret
xchg
adc
loopne
out
cmpsb
js
imul
mov
dec
dec
pop
push
inc
iret
mov
roll
cs
xchg
push
jb
into
dec
ss
pop
negl
mov
aas
es
das
js
and
clc
in
mov
idivb
mov
das
xchg
cld
inc
fwait
xchg
sbb
pop
int3
xchg
jmp
les
sbb
out
into
xlat
and
ss
mov
cmpsb
adc
adc
je
pop
aaa
xchg
fldl
sub
call
xchg
xor
mov
js
mov
inc
mov
ss
xchg
mulb
imul
stos
sub
add
push
mov
xchg
ficomps
lahf
inc
adc
lea
lret
out
jmp
cmp
outsb
pop
lock
mov
sub
sub
lock
fcmovu
test
aas
shll
jmp
in
and
cmp
jmp
pop
sub
add
lret
mov
aad
push
repz
pop
lahf
inc
data16
adc
jmp
loopne
popf
cmp
mov
imul
mov
inc
sub
clc
or
ljmpw
mov
mov
push
fs
xchg
xchg
stos
push
gs
mov
push
sub
fwait
inc
fisubl
lret
popf
xchg
aaa
mov
lds
shlb
incb
sbb
outsb
aam
out
cli
mov
or
push
push
icebp
enter
jo
mov
dec
add
pop
cmp
mov
jge
ds
push
fs
jmp
xchg
jp
stos
cld
and
and
inc
mov
sahf
aad
fwait
popa
push
dec
pop
xchg
sahf
inc
pop
enter
xor
push
push
andl
xor
mov
mov
outsl
test
cmp
or
push
stc
jl
ss
roll
loop
inc
movsl
push
mov
push
fsubrl
test
stos
cld
cmpsb
les
fildl
imul
push
fsubs
fisttpll
cmc
cmp
cltd
fidivs
and
out
dec
bound
jge
inc
xchg
out
enter
lea
sbb
ret
bsr
or
pop
aad
mov
or
adc
or
lcall
push
add
aam
je
fistps
xor
les
mov
mov
add
dec
idivb
add
jbe
mov
jns
mov
dec
clc
sub
shrd
jns,pt
dec
pushf
add
push
mov
xchg
call
sub
add
test
add
jnp
bound
inc
pusha
shll
push
int
out
sbb
les
popf
mov
out
sahf
out
xchg
sti
stos
jo
outsl
mov
add
xor
push
cmp
inc
nop
or
movsl
mov
jmp
mov
fcmovnb
out
push
rclb
inc
xlat
add
inc
rorb
outsb
jns
add
xor
es
or
and
add
push
dec
xchg
jle
or
pop
mov
hlt
mov
fcoml
cmp
adc
popa
mov
jl
sub
add
shl
clc
cld
or
andl
insb
stos
cmp
pop
shlb
sbb
inc
jne
clc
adc
inc
paddusb
lret
negb
or
jmp
pop
ss
push
mov
inc
in
imul
in
adc
pop
push
stos
leave
out
pop
cltd
adc
xchg
cmpl
pop
xchg
lods
xor
pop
jno
scas
inc
push
ret
xchg
movsl
aam
nop
xor
and
xor
test
in
mov
cmpsb
sbb
or
dec
mov
nop
sarl
aad
rorb
add
pop
sbb
pop
imul
dec
xchg
movsb
ds
cwtl
test
jnp
ds
cmp
adc
out
fstpt
adc
or
add
mov
push
sbb
das
mov
cmpsb
loop
jae
dec
loopne
add
stc
push
sbb
aad
popf
cmp
stos
sahf
sub
dec
jb
push
ljmp
dec
lahf
mov
mov
ds
sbb
ds
xchg
xor
sbb
in
out
imul
ret
adc
sbb
nop
sti
push
imul
pop
add
shll
mov
hlt
repnz
sbb
sbb
xchg
mov
push
mov
mov
sarb
fdivs
dec
rorb
icebp
je
out
lds
call
outsb
and
pop
cli
in
jmp
xlat
mov
pop
adcb
lods
out
lea
or
ja
fcomp
sbb
ret
adc
and
dec
bound
mov
dec
outsl
into
and
arpl
jge
xchg
dec
div
shlb
add
push
cmp
mov
lret
or
mov
fstpl
jbe
outsl
cmpsl
mov
enter
rolb
mov
hlt
icebp
cmpb
pop
push
mov
cltd
enter
testb
or
sbb
imul
add
jbe
sub
mov
fldcw
jl
inc
cmp
insb
jg
lcall
popf
in
or
mov
pop
icebp
mov
mov
pop
stos
mul
xchg
mov
xor
cmpsb
nop
mov
mov
sbb
adc
or
pop
add
sub
push
or
out
inc
push
inc
mov
jl
pop
dec
ret
lcall
or
pushf
jge
sub
mov
push
cs
fs
add
sbbb
jge
jo
cmp
fcmove
inc
pop
or
jecxz
in
fiadds
cmp
xchg
ficompl
hlt
clc
out
mov
rcrl
mov
jg
negl
mov
mov
pop
mov
cmp
cmp
mov
cmp
push
int
mov
test
inc
jge
stc
jmp
movsb
dec
aad
mov
fmull
jne
xor
imul
and
fcoms
and
or
pop
frndint
scas
xor
ror
cmc
in
mov
call
pop
mov
aas
jne
aaa
and
pop
mov
and
inc
push
popf
gs
loop
lret
roll
sub
sahf
loopne
dec
xchg
fldt
or
push
shll
mov
std
xchg
mov
roll
ss
push
and
dec
cmp
cli
mov
push
int
aam
ljmp
xchg
cli
dec
or
lods
sbb
cmpsb
fs
sbb
cmp
fs
mov
pop
cmp
lods
inc
pop
add
sub
mov
fmuls
rcl
push
mov
sub
addr16
jno
pop
inc
mov
adc
addb
mov
or
lock
in
jnp
push
pop
xlat
lcall
dec
pop
test
cmp
and
test
mov
movsb
nop
ret
andl
pop
inc
prefetch
mov
dec
pop
addb
ficompl
xchg
loope
imul
xor
and
je
test
inc
xor
inc
ljmp
lahf
movsl
mov
mov
arpl
lahf
daa
lods
xchg
inc
inc
popf
js
sub
xor
fistpll
mov
in
shlb
stos
les
lea
or
iret
outsb
xorl
lcall
jae
repnz
adc
lock
pop
insl
pushf
cmp
loop
pusha
mov
into
sahf
adc
dec
and
cmp
pop
and
lds
inc
and
repz
pop
loop
repnz
ret
out
cmp
repz
pop
adc
das
sbb
test
push
in
mov
lahf
pop
orb
jb
jnp
adc
pop
into
sbb
xchg
adc
jbe
lods
add
cmpsl
addr16
aam
adc
popa
aas
xor
push
pop
ljmp
shrl
hlt
adc
jle
arpl
fiaddl
sub
ret
sarb
ret
push
cmp
arpl
and
adc
mov
and
movsl
mov
mov
pop
pop
lods
xor
and
popa
leave
aad
push
push
pop
mov
push
shlb
xchg
data16
lods
mov
jne
aam
std
das
inc
sub
lret
mov
and
arpl
hlt
fadds
lret
pusha
out
aas
mov
sbb
scas
fpatan
ljmp
or
ja
aad
add
mov
dec
int3
xchg
popf
pop
es
cmp
sbb
pushf
xchg
sahf
leave
add
xchg
mov
in
icebp
lods
lcall
xchg
popf
pop
jg
adc
mov
lea
inc
call
pop
test
aam
shl
popf
xchg
jmp
ja
jae
mov
mov
or
stos
mov
insl
xor
neg
add
adc
test
sub
call
jmp
aaa
jmp
fnstsw
xchg
inc
dec
jg
add
adc
insl
cmovbe
adcl
pushf
push
repz
popa
cld
mov
mov
test
popf
rorl
push
sub
movsl
enter
and
out
imul
les
int3
std
std
shl
cld
nop
das
decl
daa
xchg
mov
int
cmp
aaa
jb
sub
xchg
cwtl
add
push
mov
out
bound
popf
and
out
decl
pop
bound
cmpsb
clc
jge
leave
stos
sub
movsb
pop
sahf
inc
dec
or
adc
mov
mov
lahf
lret
mov
cmp
jp
jbe
mov
xor
imul
lods
or
or
cmp
sbb
or
jmp
sbb
lret
xlat
dec
repnz
jnp
and
jns
in
repnz
cld
jae
push
scas
fidivl
insl
bound
mulb
stc
mov
clc
mov
and
scas
sbb
out
fstl
testl
or
or
icebp
cmp
sbb
or
fiaddl
jg
and
andb
mov
arpl
push
push
mov
push
fldenv
pusha
push
pop
in
popa
jno
fwait
mov
jns
sub
sub
add
add
mov
and
lret
or
rclb
lcall
rol
ja
mov
mov
sbb
lock
shrl
idivb
movsl
shll
dec
sbb
cmp
pusha
insb
jns
sub
lods
inc
mov
push
ret
jno
and
adc
cmpsl
ret
test
test
sub
sub
push
data16
into
jnp
int
scas
push
adc
addl
icebp
iret
push
sbb
jl
lret
call
push
adc
push
mov
movsl
lret
addb
cmp
inc
test
cli
add
mov
clc
sub
add
mov
adc
pop
add
mov
mov
jmp
dec
not
dec
xchg
shl
cld
sub
and
jp
xchg
int3
cmpb
std
pop
adc
cli
int
outsl
movsl
sub
or
jo
mov
out
sub
dec
mov
and
stos
adc
imul
popa
lret
dec
out
fisttps
lods
arpl
or
sub
inc
adcl
dec
add
lock
inc
dec
popa
adc
xchg
or
gs
movsl
sub
push
pop
or
ss
push
xor
dec
cmpl
scas
test
nop
dec
outsb
aaa
insl
movsl
mov
enter
mov
mov
xchg
fwait
push
lret
jl
push
mov
push
test
xorl
subb
in
outsl
mov
push
cmp
add
inc
jno
cmp
in
je
arpl
mov
outsl
fsub
jge
sub
out
or
cs
pop
aaa
mov
bound
cmpsl
xchg
pop
in
or
in
and
enter
mov
out
inc
mov
and
stos
xlat
jnp
test
out
jbe
push
mov
and
test
jmp
mov
test
dec
dec
jns
cltd
cmp
xchg
xchg
js
push
imul
xchg
lds
pop
xor
xlat
imul
in
enter
ds
mov
adc
fnstcw
negb
mov
or
test
inc
pop
adc
dec
scas
aam
sbb
subb
sub
add
and
lea
mov
data16
xor
jmp
fisubs
mov
xlat
xchg
sub
mov
cmp
loopne
adc
push
push
xchg
ds
jns
mov
xlat
shl
inc
xor
dec
stc
inc
loop
repz
add
das
and
std
movsl
es
mov
fists
imul
mov
sub
mov
lock
dec
or
sbb
mov
push
ljmp
inc
push
xchg
aas
test
cli
and
mov
je
jl
adc
mov
inc
mov
ret
xlat
sub
jno
fcomp
mov
mov
and
repz
out
xor
mov
popf
mov
ja
js
sub
pop
lods
outsl
sbb
sbb
outsl
jmp
ret
mov
lock
cs
ret
in
in
iret
mov
push
pop
pop
shrb
into
mov
mov
popa
fbstp
addr16
cmp
or
out
sub
cmpsb
testl
in
mov
cs
adc
cld
add
add
xor
dec
add
add
add
add
add
add
sub
add
push
add
adcb
add
push
add
add
inc
orb
add
add
add
xor
add
jne
add
jne
add
add
add
inc
orb
add
add
add
add
add
enter
add
add
xor
dec
add
add
add
add
add
add
loopne
add
xor
dec
add
add
add
add
add
add
clc
add
add
add
add
inc
orb
add
add
add
add
add
or
add
add
add
xor
dec
add
add
add
add
add
add
sbb
add
add
add
xor
dec
add
add
add
add
add
add
sub
add
add
add
xor
dec
add
add
add
add
pop
add
add
add
add
add
xor
add
mov
add
add
add
js
add
call
add
add
add
add
add
sub
add
mov
add
add
add
mov
add
xor
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
inc
cld
cmp
inc
cld
pop
clc
aas
cld
pop
sti
cld
pop
sti
cld
jg
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
inc
sti
cld
cmp
clc
cmp
sti
ret
clc
aas
sti
inc
cld
add
rolb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
ljmp
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
add
or
push
ja
add
push
jo
add
push
add
add
push
add
add
incl
jo
add
add
out
loopne
add
add
loopne
incl
add
incl
add
popl
add
add
add
add
add
pop
add
rorb
add
sldt
rorb
add
sldt
rorb
add
jg
add
incl
add
incl
add
incl
add
incl
add
add
add
add
and
add
add
add
add
add
jne
and
add
add
call
jne
adc
add
add
sub
add
xor
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
aaa
add
add
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
jo
insb
add
add
jae
outsl
add
je
add
cmp
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
bound
jns
and
add
push
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
outsl
add
imul
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
je
pop
add
insl
add
arpl
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
insl
add
arpl
add
js
add
or
xor
adc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
xor
clc
mov
add
add
mov
add
xor
js
xor
xchg
xor
stos
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
jb
gs
xor
add
add
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
imul
add
jbe
jbe
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
dec
arpl
add
loope
add
inc
sti
jo
add
nop
jmp
mov
xor
dec
add
push
add
outsl
mov
orb
inc
add
or
lret
fidivl
frstor
push
or
pop
pop
std
sbb
or
mov
test
or
add
push
popa
sbb
sub
not
xor
adc
or
xor
popf
loope
mov
xor
adc
add
ret
pop
popa
movl
stos
pop
xor
sbb
lods
push
testb
mov
mov
mov
pop
push
rolb
xchg
jo
leave
cmpsl
push
dec
pop
and
sbb
pop
sbb
sbb
pop
cmp
mov
mov
sub
add
cwtl
xor
cwtl
add
mov
sarl
jg
ret
adc
rcll
ret
movsl
int3
xchg
les
das
cmp
jp
lock
int3
dec
and
push
or
and
dec
xchg
sbb
sbb
add
addr16
roll
adc
pop
in
aaa
mov
push
sbb
and
adc
xor
xchg
sidtl
outsb
in
push
sub
inc
mov
and
add
pop
mov
pushf
out
adc
or
adc
stc
rcrb
mov
mov
mov
jb
cmp
mov
adc
movsb
mov
aaa
fidivrs
aam
iret
add
xchg
pop
add
cmp
add
pop
dec
mov
adc
jae
jnp
cmp
jle
int
rcrl
inc
pop
sub
lods
loope
add
dec
sbb
aaa
push
ret
es
out
dec
daa
cmpsb
and
and
cmp
add
push
push
inc
push
add
cmp
in
push
movsb
sbb
ja
minps
jb
movsb
pop
inc
jo
xchg
pop
add
pusha
jg
xchg
sub
js
in
sub
mov
adc
push
aam
aaa
les
mov
icebp
mov
or
inc
mov
in
mov
out
sbb
cmpsb
push
inc
js
mov
fs
inc
loop
mov
add
sbb
bound
inc
loope
test
jge
lahf
scas
fadd
xchg
sub
add
les
addl
in
faddl
cwtl
sbb
cmp
add
mov
pushf
cltd
rcrb
dec
mov
adc
push
fcom
adc
jmp
movsb
adc
es
or
enter
sbb
add
mov
xor
adc
mov
push
xchg
mov
or
insb
add
sarl
pop
dec
sbb
cmp
mov
sti
add
rorl
pusha
popf
pop
push
mov
or
in
or
inc
pusha
push
xchg
sbb
pop
repz
add
fwait
and
dec
and
mov
pop
sub
frstpm(287
les
xor
mov
and
enter
arpl
outsl
sbb
cmpsl
mov
and
sbb
add
icebp
xor
cmp
daa
jnp
rclb
inc
jmp
push
inc
aam
or
push
hlt
push
push
dec
sbb
fcoms
and
dec
inc
add
cld
cmc
pop
cltd
inc
jb
js
sub
subl
adc
or
inc
loopne
adc
imul
cmc
xlat
xchg
sbb
cmp
jge
mov
jg
adc
dec
xchg
mov
in
mov
in
adc
add
sbb
pusha
push
inc
hlt
ja
dec
cmpsb
call
popa
add
jno
xchg
jge
lret
sub
xor
push
sub
loopne
shlb
xorb
in
add
push
les
daa
inc
inc
sbb
adc
negb
pop
mov
or
cmp
adc
add
mov
xor
jno
xchg
mov
shll
sbb
or
fdivs
sub
sbb
cmp
add
pop
xor
lret
mov
adc
clc
xchg
and
or
adc
addr16
loop
adc
mul
add
cmp
adc
dec
xchg
mov
test
pushf
or
and
nop
test
sub
lds
add
mov
cmp
inc
loopne
andl
mov
or
inc
test
mov
and
xchg
jne
sub
or
pop
repz
fadds
mov
xor
push
adc
xchg
pushf
mov
shll
je
cmp
nop
shlb
into
and
pusha
pop
popf
push
and
icebp
sub
sub
rclb
and
shl
adc
mov
fwait
bound
imul
js
fdivrs
xor
fsubl
jl
or
cmp
andb
mov
in
sub
divl
mov
inc
xor
stos
daa
inc
xor
testb
aas
icebp
mov
mov
sub
test
sbb
mov
inc
xor
cwtl
insb
incl
add
pop
push
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
decl
outsb
cltd
push
fs
rcll
shlb
xor
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
push
addr16
xchg
das
or
adc
or
aaa
add
mov
das
or
push
arpl
fxch
adc
adc
xchg
inc
xor
adc
outsb
das
mov
cld
dec
clc
mov
inc
or
call
in
inc
add
and
test
inc
inc
jb
mov
cld
fs
xchg
push
add
push
lea
lret
rorb
sbb
shrb
fs
je
test
mov
sub
inc
mov
and
sub
and
in
sub
push
jb,pn
insb
and
cmpsb
and
lock
decb
je
jae
dec
fs
insb
jge
dec
js
sbb
adc
push
mov
in
add
adc
add
inc
outsl
inc
insb
gs
outsb
add
dec
adc
add
jae
add
push
mov
lds
rol
push
and
das
or
inc
xor
push
add
add
rolb
outsb
je
pop
addr16
push
lea
sub
jo
adc
jns
sub
test
push
outsl
jb
fs
mov
cmpsb
fs
add
nop
mov
or
sbb
jb
addr16
nop
nop
adc
push
push
mov
add
rolb
out
dec
data16
pop
or
mov
xor
mov
push
dec
bound
arpl
repnz
adc
adcl
daa
dec
dec
stc
jb
popaw
arpl
mov
dec
xor
inc
cs
int3
addl
clc
jmp
mov
pop
out
int3
mov
mov
xor
mov
xor
je
hlt
sbb
or
fs
cmp
adc
adc
mov
dec
sub
rolb
and
or
pop
enter
jb
cmp
sub
sub
inc
and
dec
xchg
sbb
adc
or
loop
mov
call
fcoms
pop
lds
lods
sbb
cmpsl
and
xor
nop
cltd
or
sbb
or
sub
je
enter
jb
cmp
or
enter
push
mov
add
je
nopl
mov
cmp
pop
jmp
adc
xor
cmpsb
or
and
sub
and
sbb
adc
push
push
sbb
ds
add
push
ds
enter
jne
xor
pop
pop
lret
aad
add
or
rorb
lea
rcrb
sbb
push
add
cli
fs
out
iret
adc
push
pop
nop
in
mov
hlt
pop
je
repnz
test
dec
pusha
mov
mov
or
push
add
or
adc
bound
adc
push
adc
mov
sbb
push
mov
push
push
push
adc
cmp
mov
jl
andnps
icebp
out
and
call
add
sbb
scas
nop
cli
cmp
icebp
push
or
fwait
or
ret
nop
adc
call
inc
mov
or
add
jmp
add
or
and
pop
sbb
pop
rcr
cmp
jne
loop
ret
sub
test
pop
pop
pop
adc
mov
xor
cltd
cmp
jb
ror
add
insb
call
int
bound
add
or
jnp
sub
bound
jp
xor
iret
pop
and
adc
cli
sub
jmp
sub
test
scas
and
stc
outsl
jl
sti
cmp
arpl
xchg
jmp
xchg
cmp
xor
nop
push
xchg
mov
enter
incb
jge
mov
jb
jbe
out
cwtl
xchg
add
daa
add
jns
xchg
rclb
test
je
adc
sbb
dec
adcb
mov
sbb
fwait
dec
das
stc
push
adcb
dec
mov
push
dec
add
popa
push
scas
push
mov
sub
bound
mov
and
adc
scas
inc
jo
in
movsb
dec
adc
in
jecxz
or
mov
scas
push
mov
sbb
add
out
cmp
dec
and
push
repz
jae
xchg
out
ja
leave
movb
jnp
jnp
std
std
je
push
push
jbe
imul
jne
test
movl
sub
cmpsl
pushaw
add
sbb
cmpl
sbb
or
adc
sbb
adc
sub
hlt
mov
ljmp
add
and
loop
inc
or
or
mov
cmp
pop
cmp
or
add
xchg
pcmpeqd
mov
std
push
mov
test
mov
subl
pop
mov
test
xor
or
mov
xchg
xor
dec
mov
adcb
jmp
jmp
push
clc
sub
push
inc
test
jbe
sti
mov
std
stos
sbb
addl
or
inc
dec
gs
inc
cmp
mov
sub
aas
xchg
data16
aam
xor
cld
or
and
call
ja
je
inc
aaa
dec
push
xor
leave
inc
stos
call
and
int3
mov
xchg
arpl
cmp
pop
movsl
and
push
call
jns
aaa
cmpsl
adc
test
cmp
je
dec
push
adc
cmc
add
jle
fisubrl
lods
xchg
push
sub
lret
andb
mov
or
sub
xchg
xor
jne
push
dec
mov
rorb
jmp
or
orb
pushw
pop
dec
pop
jmp
imul
cmp
dec
push
sbb
jp
and
cmp
test
adc
sub
test
dec
rclb
sub
stc
xor
lea
sbb
jecxz
add
add
orb
fidivs
pushl
xor
rorl
and
dec
dec
mov
test
je
mov
ret
mov
imul
movsl
adc
notb
repnz
adc
push
jnp
pop
mov
lea
in
mov
sbb
xor
mov
push
sub
mov
dec
shlb
jle
and
stos
sub
popa
adc
sahf
mov
and
test
int3
xchg
mov
mov
inc
push
xor
pusha
rolb
mov
or
daa
xchg
movb
mov
add
xchg
xchg
sub
mov
aaa
push
dec
iret
xchg
or
or
out
test
andb
mov
xor
xchg
cmp
aad
cmp
mov
daa
add
mov
dec
mov
je
xorl
inc
sbb
pop
add
ja
cwtl
jl
or
in
fistpl
loopne
cmp
or
adc
dec
or
jg
loopne
pop
add
rcrl
call
jmp
pop
and
sbbl
sub
hlt
fisttps
imul
sub
jmp
adc
in
shll
fisttpll
movhps
sbb
inc
in
test
mov
xchg
ljmp
sbb
mov
adc
movl
call
mov
or
inc
or
or
incl
rolb
loop
jecxz
or
add
push
sub
outsb
or
jl
xchg
lret
sub
adc
or
and
sub
inc
dec
fs
and
je
sub
fidivl
subb
mov
mov
jmp
testb
cli
and
or
cmp
pop
push
push
mov
repz
fs
xor
add
mov
pop
jmp
sti
fadds
and
add
addr16
pop
xor
inc
or
pop
andl
movsb
mov
xchg
dec
or
mov
sbb
adc
cmpsl
orb
call
aaa
sub
push
jg
aad
pushf
jl
cli
jmp
add
je
ret
or
adc
jns
inc
stos
adc
insb
pop
and
aad
movl
add
or
call
jl,pn
pop
push
ret
mov
or
dec
push
mov
push
or
mov
push
add
sub
jge
sbb
cmp
mov
cmp
adc
or
es
lahf
add
jmp
sar
inc
sub
pop
jg
sub
cmp
jl
xchg
push
inc
stos
adc
add
xor
mov
cmp
or
dec
fwait
inc
pop
jmp
sub
rorl
adc
pop
xchg
xor
sysenter
movlps
lea
and
cld
cld
call
dec
or
sub
push
jbe
rorl
push
add
cmp
xorl
sub
add
fisubs
repz
test
nop
pop
jae
shll
pop
xchg
xchg
int
jno
js
outsl
mull
andl
and
adc
shl
sahf
aam
icebp
adc
lea
dec
mov
sub
inc
add
pop
and
mov
bound
lea
mov
nop
pusha
xchg
adc
push
mov
cmp
push
lea
adcb
cwtl
jbe
mov
xchg
pushf
test
dec
mov
int3
stc
adc
or
test
mov
jnp
xchg
xlat
xor
mov
lods
inc
sub
jle
out
shr
arpl
jb
adc
aad
gs
sbb
jmp
cmp
or
rcl
sub
add
sub
lods
icebp
push
int3
and
out
rep
xor
cmc
mov
inc
or
and
xchg
mov
sub
mov
dec
cmp
or
leave
pop
insb
in
stos
push
data16
xchg
das
shlb
dec
push
push
mov
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
ret
pop
ja
xchg
sti
ficoml
add
xchg
in
push
mov
and
sub
ret
scas
adc
pop
shlb
sahf
sub
pop
imul
jl
hlt
jmp
stc
lret
sub
popl
mov
insb
cmpl
mov
sbb
mov
adc
sbb
sub
or
xchg
lcall
jge
xor
inc
gs
ret
and
push
push
mov
test
fs
xchg
adc
ficoms
clc
or
pop
jb
pop
jmp
adc
mov
push
push
test
sub
inc
adc
sbb
xor
decl
mov
push
inc
add
pop
je
mov
outsb
mov
jne
imul
pop
in
inc
aas
and
dec
dec
sub
cmp
sbb
xchg
mov
scas
push
ja
loop
or
cmp
nop
jno
push
inc
sbb
mov
jle
lcall
fmull
add
and
cli
add
cld
or
mov
js
pop
or
push
or
and
adc
cmp
mov
imul
in
and
inc
mov
adc
pop
jle
adc
icebp
ret
movl
mov
adc
inc
sbb
out
dec
adc
fsubr
jmp
add
jne
orl
adc
cltd
sahf
mov
jge
nop
pop
enter
imul
popf
lahf
test
push
inc
fiadds
rcrb
test
add
dec
pop
movups
mov
mov
push
adc
inc
sti
mov
jl
lret
push
sbb
sub
adc
pop
xor
add
and
cmp
aad
xchg
fbld
ret
jmp
das
push
cmp
lds
push
scas
ds
loopne
in
sub
test
shll
dec
rorb
out
cmp
xor
loop
andps
and
fsub
jge
dec
test
or
sbb
jmp
cmpsl
lods
jl
movsb
lret
repnz
adc
jns
or
add
icebp
dec
mov
daa
ficoms
outsl
sbb
jmp
lcall
or
pushf
outsb
les
cmp
or
push
inc
add
xchg
call
sahf
nop
push
adc
inc
daa
stc
sub
jle
call
test
sbb
add
shlb
inc
out
nop
and
outsb
orb
leave
je
xchg
cwtl
add
push
mov
and
xor
sbb
add
nop
push
jmp
movsb
inc
xor
sub
add
or
out
and
lcall
push
mov
ret
inc
loope
and
inc
add
nop
mov
sbb
mov
pop
or
lcall
clc
repnz
sbb
cmpsl
aas
iret
int3
add
dec
jecxz
adc
sahf
adc
adc
push
test
cmp
dec
ja
sbb
ret
lea
pop
sub
adc
xchg
and
jmp
push
push
push
cltd
in
and
inc
pop
jne
lock
and
mov
and
xorps
rclb
or
or
je
nop
add
cmp
jg
sub
dec
inc
outsl
push
jl
faddp
cli
add
mov
inc
rep
push
jmp
mov
xor
mov
mov
cld
call
adc
add
nop
lods
hlt
pusha
cli
rorb
ret
xor
sbb
xchg
xlat
add
je
das
add
xchg
fmuls
cld
cmp
sbb
push
std
sbb
pushw
movl
push
ret
or
mov
pop
movsb
sbb
xor
jb
inc
jp
add
and
mov
loop
sub
orps
pop
adc
adc
jl
or
je
add
fwait
orw
inc
insb
ffreep
and
xchg
sub
pop
and
nop
fwait
orb
rclb
push
enter
xor
je
mov
jecxz
sar
or
xor
or
jmp
push
cmc
mov
test
jno
loop
shlb
and
jge
dec
add
call
mov
and
mov
xor
mov
add
das
or
arpl
loope
mov
data16
jne
sbb
lock
and
and
je
test
push
jmp
adc
dec
dec
sub
mov
mov
sbb
lret
loope
rorb
and
xlat
shl
call
jb
rorb
inc
test
add
ret
ljmp
add
cmp
jne
dec
mov
testb
jae
leave
sbb
add
or
dec
inc
loop
push
push
inc
add
pop
fadds
je
add
das
cmp
adc
std
mov
push
or
sbb
mov
adc
call
shr
loopne
mov
add
rcll
shr
jno
repnz
inc
dec
and
or
cmp
dec
sbb
push
stc
mov
mov
cmp
jne
dec
mov
dec
pop
and
add
popf
sub
test
mov
xor
data16
shll
or
stos
adc
stos
pop
adc
xor
imul
mov
cs
dec
daa
insb
cmp
xor
lea
sbb
mov
sub
inc
movsl
add
je
mov
push
ja
bound
sub
pop
or
js
pop
addps
push
add
sub
or
call
add
sub
pop
or
cmp
inc
and
xchg
fcomps
or
out
int
or
aam
push
jmp
call
jle
js
pop
sub
sbb
lds
pushf
mov
sub
sbb
and
jbe
or
adc
add
or
push
adc
push
or
mov
jge
mov
mov
lods
cld
test
stc
add
push
or
inc
mov
sbb
repz
xor
add
xor
sti
call
lock
ret
out
iret
xchg
flds
cmpb
ffreep
jecxz
add
fiaddl
loopne
ja
dec
mov
icebp
and
shl
inc
fadds
mov
shl
push
or
cwtl
push
clc
add
push
push
and
mov
pop
jmp
stos
dec
mov
mov
leave
xor
cmpsb
push
dec
pushf
add
jo
in
push
jl
je
mov
cmp
mov
cwtl
jle
pop
xchg
push
fldt
fsubrp
call
push
or
je
sbb
das
xor
bound
inc
xlat
sbb
push
nop
push
mov
inc
scas
inc
adc
or
xchg
xor
ret
xchg
sbb
inc
pop
stc
jmp
fstp
shrl
mov
out
das
int3
sbb
cmp
or
aas
loope
add
enter
cli
or
pushf
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
or
mov
inc
mov
aam
mov
bound
sub
test
hlt
and
mov
mov
test
add
leave
sbb
mov
lds
mov
call
or
inc
call
mov
and
vmovsd
js
inc
add
xlat
fadds
nop
add
dec
add
push
in
int3
into
sbb
ret
xchg
push
pop
fsts
enter
nop
mov
scas
push
add
hlt
daa
lret
into
jp
add
aas
cmpl
xlat
pop
mov
dec
addr16
leave
repnz
call
inc
xchg
mov
pop
test
lds
iret
lcall
dec
pop
js
shlb
push
stos
mov
cmp
jmp
xchg
test
stos
add
out
sub
inc
imul
divl
loopne
add
leave
cmp
call
and
movsl
add
push
add
das
push
sbb
es
jecxz
repnz
test
nop
jo
sbb
add
stos
clc
scas
adc
lds
pushf
mov
int
mov
repnz
aam
imul
loope
dec
jp
iret
inc
bound
add
push
cmpsb
scas
push
sbb
mov
addl
xchg
cmp
add
in
cmp
add
mov
movsl
mov
popa
out
pushf
sbb
pop
mov
fildl
addr16
repz
mov
addb
fwait
xchg
and
les
lock
xor
ret
push
push
loope
xor
push
mov
clc
pop
jne
clc
add
loope
mov
add
cmp
mov
pop
inc
dec
nop
mov
adc
mov
shr
mov
jae
ss
push
push
or
or
inc
ja
testl
xor
xor
pusha
or
xchg
ret
ja
push
or
push
mov
repnz
test
xor
push
out
sub
in
push
mov
jp
pop
mov
lods
cs
aas
or
ret
dec
mov
dec
or
push
dec
inc
push
push
inc
push
add
inc
outsl
jb
popa
outsb
js
cmp
jo
imul
inc
push
push
pop
dec
popa
jae
push
inc
insb
jne
or
daa
jecxz
xor
jns
mov
enter
loopne
aam
add
mov
inc
rep
xor
adc
rcrb
je
mov
dec
cld
jne
cmpsl
cmpl
out
clc
add
scas
or
inc
mov
sub
inc
fcoml
imul
call
pop
nopl
rcrb
and
arpl
jns
add
cmp
test
or
xor
or
pslld
mov
or
lret
push
sbb
jo
jecxz
mov
fwait
or
push
cld
cmp
mov
fdivs
rclb
pop
and
adc
imul
add
daa
pop
faddl
jmp
cmp
jle
repnz
add
jae
cmp
ds
add
mov
sub
sbb
fnstsw
adc
popf
xor
scas
push
ss
jp
sbb
call
fsubs
jmp
xchg
inc
stc
inc
lahf
pushl
mov
cmpxchg
push
add
popa
aaa
add
add
addb
inc
sbb
leave
jns
movsb
jl
mov
lods
pop
sbb
mov
movsl
jmp
aam
inc
daa
dec
je,pt
xchg
inc
adc
add
add
mov
testb
call
lea
ret
inc
push
addr16
sbb
stos
insb
xor
xchg
ret
cltd
pop
inc
mov
dec
push
push
mov
inc
sbbl
mov
and
sti
jl
xor
xor
jb
fnsave
hlt
mov
aas
sbb
lea
dec
adc
leave
add
jl
addb
sub
sbb
js
add
mov
mov
cmp
ret
push
mov
add
or
nop
push
xchg
loope
inc
data16
sub
adc
add
repnz
adc
pop
and
dec
pop
pop
shrb
ret
je
cld
jbe
hlt
push
nop
int3
mov
sub
add
pop
shll
fsubr
dec
sbb
sbb
lock
jne
pop
sbb
adc
test
mov
mov
adc
xor
or
add
rol
push
fwait
push
add
add
fnstsw
mov
movsb
pushf
leave
mov
dec
cmp
adc
lock
cmp
or
dec
jne
and
jmp
fstl
mov
add
xor
inc
jecxz
out
or
inc
pop
add
xor
mov
sbb
push
insb
adc
mov
fisubs
and
jo
or
push
mov
push
inc
aas
enter
popl
xor
jl
sub
mov
je
pop
jmp
push
ja
aas
call
in
dec
mov
push
push
push
push
pusha
jb
dec
add
hlt
xor
pusha
sub
fs
mov
mov
inc
imul
xchg
xor
pusha
pop
or
sbb
jmp
mov
or
mov
push
mov
pop
pop
lods
fisttpll
sub
cwtl
sbbl
or
cld
mov
push
pop
adcb
xor
cmpb
adc
sub
sbb
in
push
ljmp
adc
leave
addl
push
or
push
push
cmp
or
pop
push
loopne
sbb
or
sub
ret
push
xchg
adc
das
add
mov
cmpb
xor
ss
jne
pop
movsbl
clc
clc
lahf
test
mov
mov
imul
mov
pop
pop
lds
jno
adc
and
test
sub
adc
mov
ror
hlt
or
jae
mov
adc
add
cmpl
push
add
pop
call
adc
popa
add
push
jmp
and
dec
mov
shrl
cmpl
push
je
call
fwait
xor
xorl
inc
ja
and
aas
mov
cmp
fidivrs
mov
lret
xor
call
push
cmp
xor
out
pop
cmp
loopne
add
add
xor
sub
sub
repz
mov
fstpl
push
mov
sub
int3
test
outsl
or
stc
cmp
inc
mov
adc
ja
hlt
sub
inc
jecxz
lods
push
icebp
or
mov
jmp
cs
xor
outsl
test
inc
or
push
add
mov
scas
ja
xchg
sub
or
add
add
dec
lds
out
xchg
mov
push
add
cmp
dec
cltd
jne
fs
push
cmp
xchg
ret
sbb
call
pop
mov
jg
or
jne
push
mov
aam
and
or
inc
pushl
xchg
push
jb
xchg
nop
lahf
mov
mov
insl
nop
xchg
push
and
pop
mov
test
jecxz
or
xchg
add
mov
and
or
movl
fisttps
call
mov
cmp
xchg
xchg
clc
fmul
sbb
jb
add
push
push
push
push
fimuls
icebp
pop
dec
cmp
iret
push
ret
shll
mov
mov
xchg
mov
pusha
add
dec
cld
push
popf
cmp
sarb
pop
adc
mov
jnp
lea
pop
push
fs
je
inc
mov
adc
call
ret
xor
popa
pop
sub
sbb
add
ret
lahf
fwait
inc
scas
dec
xor
aaa
cmp
sub
pop
repnz
sub
mov
mov
cmp
pusha
sbb
jno
inc
aas
sub
mov
push
sub
cmp
inc
popa
adc
and
cmp
std
inc
comiss
push
sub
fisttpll
mov
mov
ds
and
iret
xor
and
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
cld
or
mov
push
or
lds
pop
bound
and
mov
lea
jno
dec
cmp
lret
dec
test
sub
cld
int3
rcll
nop
or
je
pushf
orl
pop
mov
test
cld
mov
add
dec
leave
or
fldenv
push
pop
jmp
dec
add
inc
hlt
andb
in
xor
fldt
mov
and
cwtl
sbb
cmp
sahf
xchg
cmp
jp
or
cmp
xor
and
subl
cs
dec
pop
push
or
jo
push
mov
test
jle
ja
ret
xor
inc
dec
lcall
xor
jmp
enter
pop
xor
add
ss
ret
nop
movsb
pusha
sub
xchg
xor
jg
test
cmp
jle
sbb
sbb
shrl
in
movsl
pusha
jno
mov
jge
mov
movsl
popl
push
and
inc
push
mov
push
dec
sub
or
das
jge
xorl
mov
mov
mov
repnz
and
stc
mov
pop
and
adc
pop
cmp
jge
jmp
mov
xor
push
mov
dec
dec
aam
adc
cmp
sbb
push
les
pop
add
cmp
dec
orps
aam
xchg
mov
or
mov
sbb
pushl
inc
push
push
add
enter
sub
or
in
adc
pop
pop
and
repz
or
sub
push
jecxz
sbb
inc
push
inc
out
int3
mov
cmp
fdivl
mov
loop
jo
cmpsl
mov
sbb
sub
mov
cltd
idiv
add
aam
add
mov
and
mov
dec
jo
in
adc
mov
loopne
mov
cmp
fsts
call
inc
out
mov
mov
maskmovq
sbb
sbb
outsl
or
pushl
push
and
aaa
xchg
lds
pop
push
js
dec
in
push
push
adcw
adc
push
sub
std
rorl
cmp
fcompl
push
sub
daa
mov
or
jecxz
push
sbb
shlb
push
cltd
adc
xchg
dec
mov
or
push
mov
or
jnp
jbe
push
cmpl
and
rol
imul
mov
jne
cmpsb
push
add
jnp
adc
sub
dec
ljmp
popa
insl
add
aas
xchg
enter
es
or
insb
sub
das
jbe
cwtl
mov
adc
push
push
mov
cmp
add
or
push
inc
mov
movsl
out
das
and
jne
push
je
xchg
mov
cmp
popf
and
or
add
sti
xor
push
cltd
loopne
dec
iret
call
push
mov
mov
fsts
or
push
or
dec
xor
adc
mov
pop
stc
fisubrs
pop
push
adc
mov
inc
or
sub
push
fstps
or
mov
or
pop
mov
iret
or
push
push
cmp
mov
cmp
sub
sbb
push
or
push
mov
push
push
push
call
xchg
sbb
mov
adc
jbe
dec
orb
jl
xor
pop
push
lea
dec
jg
ljmp
adc
sbb
add
sub
pmaxub
ficoml
int3
push
and
inc
das
jg
add
cld
call
push
pop
sbb
aam
mov
js
push
xchg
dec
enter
mov
cld
mov
push
sub
adc
ja
xchg
or
add
mov
adcl
jmp
xor
jecxz
inc
int
or
clc
cwtl
stc
cmc
lock
lock
popf
sti
fdivrs
cmp
lods
xchg
xchg
adc
inc
xchg
je
push
adc
pop
adc
js
out
push
popa
fsts
les
sbb
fstps
test
fs
add
decl
cltd
jge
push
dec
push
push
mov
mov
divl
lahf
inc
aaa
jl
cmp
call
insb
sbb
pop
sar
dec
cmp
xor
xor
sti
dec
adc
and
nop
scas
adc
xor
movsb
subl
push
and
or
je
or
call
sbb
inc
jns
mov
pop
sub
jmp
xor
sub
insb
and
pop
pop
rorl
push
mov
in
add
pop
cmp
and
or
cmp
mov
inc
dec
test
stos
push
repnz
mov
rcrl
add
aam
sbb
sub
add
sub
add
test
sar
sbb
daa
sbb
push
adc
fnstcw
or
xchg
mov
pop
add
add
inc
cld
repnz
aas
incb
std
dec
jl
les
popa
add
cmp
inc
lret
xor
adcl
adc
inc
inc
dec
pop
lods
push
and
sub
xor
mov
adc
mov
cld
pop
or
adc
jmp
arpl
sbb
inc
add
fmuls
sub
arpl
add
sbb
pop
nop
aas
jae
dec
clc
call
lret
or
mov
movsl
nop
insb
les
xchg
adc
cli
je
cmp
sub
jle
inc
cld
dec
jmp
test
push
or
xchg
cmp
jne
cwtl
sub
in
int
pop
call
cld
pop
mov
aaa
add
dec
jmp
xchg
insb
sahf
push
mov
leave
repnz
add
dec
mov
jne
dec
xchg
js
or
sub
xchg
dec
xor
xchg
pop
lea
xchg
jmp
cmpsl
xor
mov
das
inc
push
ljmp
mov
dec
jp
and
pop
and
or
adc
sub
push
lret
jae
fdivs
and
sbb
xlat
push
jmp
push
inc
aam
push
clc
inc
xchg
inc
ret
les
outsb
add
sub
gs
push
fdivs
push
jg
mov
adc
stos
imul
jae
and
inc
adc
mov
enter
cmp
xor
sub
add
dec
jl
cmp
jge
and
push
sbb
pop
and
int
hlt
xor
call
out
adc
or
les
mov
adc
mov
add
dec
jl
xor
add
and
icebp
xchg
data16
stc
add
pop
movsb
push
xchg
push
dec
push
or
cli
dec
loopne
aaa
xchg
xchg
push
cltd
push
nop
dec
mov
push
xchg
add
dec
jge
lea
xlat
adc
imul
jge
ljmp
ret
addb
adc
test
cmp
add
jmp
loop
fcmovbe
sbb
inc
lahf
xor
push
mov
sub
orb
mov
inc
lds
nop
leave
adc
dec
out
inc
mov
bound
jge
clc
mov
loop
rcrb
jle
inc
je
scas
and
sbb
mov
loopne
pushf
sbb
or
loopne
jmp
nop
js
dec
mov
mov
cmp
cs
xchg
mov
sbb
jle
mov
xor
mov
dec
lahf
test
sub
addr16
stos
push
sub
imul
rcrl
mov
and
daa
pop
outsb
pop
leave
and
cmp
pop
sub
sub
push
sub
push
cmp
xchg
xchg
mov
mov
ret
arpl
dec
pop
jae
jno
jmp
dec
inc
loop
cmp
pop
and
and
adc
add
and
inc
xchg
inc
js
ss
mov
sub
dec
cmc
popf
pop
call
incb
dec
add
xchg
mov
add
les
jp
xchg
icebp
ja
pinsrw
cmp
jl
add
sub
fsin
dec
mov
jle
push
mov
add
fdivrs
add
dec
pop
xchg
sbb
add
ret
jge
push
js
mov
or
pop
sbb
sub
fmuls
mov
mov
subb
in
and
lds
mov
adc
xchg
into
hlt
out
fbld
lds
leave
xchg
xlat
and
and
xor
jl
push
xor
lcall
mov
lea
jns
and
fisubrl
rcrb
sbb
push
push
into
bound
xor
pop
pop
mov
dec
and
add
dec
jne
repnz
lret
icebp
mov
pop
cmp
inc
pop
pop
jp
inc
js
je
xchg
push
ret
xor
sbb
icebp
cmp
pop
fs
and
push
adc
pop
sbb
or
jmp
pop
jne
mov
mov
loope
and
or
fucomi
pop
dec
and
ret
jmp
mov
or
jecxz
clc
dec
and
add
scas
pop
or
psubw
cmp
mov
dec
push
push
dec
call
dec
add
les
push
jl
cmp
lea
hlt
popa
dec
fcmovne
xchg
xchg
mov
mov
lahf
xchg
test
in
stos
scas
and
cmp
in
cmpsb
cltd
mov
dec
inc
std
cwtl
adcl
dec
jo
pushf
mov
xlat
xor
xor
or
ljmp
mov
inc
xchg
jne
adc
je
clc
hlt
fisubs
fstps
fdivs
xchg
push
dec
pop
sbb
jle
add
and
mov
sub
mov
orl
xor
leave
mov
sar
int3
testl
sub
popa
adcl
fsubl
cmpsl
pop
test
ljmp
mov
nop
ret
inc
hlt
lods
mov
loopne
stos
adc
cmp
popf
xor
arpl
inc
xchg
sub
mov
cmpb
in
les
lods
stc
and
push
mov
clc
push
mov
dec
fdivrl
jl
push
dec
pop
sbb
into
adc
sub
addr16
mov
jo
mov
xor
pop
xor
cmp
je
call
or
and
or
clc
dec
clc
psubw
loop
shll
push
shrb
lcall
cmc
nop
push
or
or
adc
out
jmp
push
jmp
xchg
push
cmp
or
fadds
pop
aam
cmp
cmpsb
sbb
filds
adc
mov
aaa
movsl
push
lock
or
jmp
push
inc
test
adc
mov
call
repnz
js
cmp
in
loopne
push
dec
out
xchg
in
and
pop
adc
pop
sub
xor
mov
jmp
stc
add
jg
or
fucomip
cmp
sti
or
sbb
ja
xor
sub
and
repz
pop
inc
adc
push
das
inc
inc
test
inc
popa
jmp
inc
inc
sub
sbb
push
cmp
adc
adc
jmp
or
mov
mov
inc
xchg
adc
sbb
movsb
divl
add
outsl
imul
push
add
add
sarl
ret
in
fwait
mov
stos
mov
or
or
cmp
aam
das
xor
jo
push
xor
mov
adc
push
xchg
es
daa
push
popa
clc
xor
mov
xchg
mov
and
dec
cmp
adc
inc
nop
adc
stc
hlt
inc
sbb
or
nop
and
inc
sbbb
cmp
mov
add
js
inc
arpl
dec
pop
pop
inc
push
lea
inc
or
addl
icebp
aam
fwait
dec
adc
test
lret
ljmp
nop
mov
shrb
adc
maskmovq
divl
popa
test
and
roll
push
scas
sub
jmp
dec
inc
cmp
jmp
mov
or
sub
sub
dec
dec
cltd
adc
add
pushl
inc
add
es
inc
cmp
sar
dec
stc
push
lds
xor
cmp
je
cmp
sub
sub
pop
push
inc
adc
bound
ljmp
jns
adc
in
push
cwtl
dec
inc
mov
xchg
lahf
inc
enter
pop
movsb
and
movsl
into
sub
push
or
cmp
dec
cmc
push
add
mov
push
jbe
mov
rcr
into
push
cmpsl
xchg
leave
pop
fldenv
xchg
inc
fmul
ja
cs
leave
cltd
les
ja
pushf
hlt
inc
pop
inc
and
adc
dec
xor
adc
jge
mov
jns
pop
fs
or
pop
dec
and
lret
ret
dec
push
movsl
dec
adc
imulb
dec
add
or
jne
rcl
popa
lock
rcrl
adc
neg
xchg
xchg
sbb
iret
add
sbb
inc
loop
xlat
int
xchg
jmp
jb
sbb
shl
popf
rcrb
out
jb
and
sub
sbb
inc
add
ret
mov
cmp
outsl
out
repz
jle
cmp
nop
jl
pop
mov
enter
push
mov
jle
xchg
std
repnz
lret
or
add
sub
inc
lock
or
push
or
sub
outsb
dec
sbbl
dec
push
orl
mov
or
add
mov
and
push
call
pop
cmc
sbb
xor
pop
fimull
pop
fldenv
lret
sbb
adc
jmp
pusha
ret
or
enter
push
adc
and
push
sbb
or
clc
and
out
xor
jno
or
lcall
jmp
incb
andl
jmp
jg
mov
cltd
sbb
js
adc
movsb
adc
mov
imul
or
cs
add
dec
and
push
out
or
shll
xchg
dec
rolb
jmp
shll
scas
rcll
and
dec
loop
fsts
test
jg
clc
out
or
adc
xor
shlb
add
adc
rorb
shr
ljmp
add
or
fcom
pop
ljmp
loop
xchg
cmpsl
mov
dec
mov
cmp
xor
gs
fs
mov
push
test
and
in
lds
pop
xchg
push
sbb
jg
or
pop
mov
enter
cmp
or
scas
jmp
sbb
loopne
mov
sbb
xchg
mov
adc
mov
lcall
xor
add
insl
call
mov
loope
cmp
loope
push
dec
pop
or
or
jne
xor
jge
and
mov
das
add
xchg
pop
or
push
iret
sbbl
stc
subl
or
adc
push
cli
in
fmull
or
inc
sub
pop
mov
dec
in
push
das
ror
adc
lods
popa
into
dec
mov
pop
test
sub
pusha
xchg
movl
xchg
sub
lock
js
xchg
in
fiaddl
ret
cmpsb
push
add
cs
dec
dec
nop
cmp
jl
inc
mov
divl
pop
ret
ret
scas
mov
xchg
dec
jne
lret
and
sbb
inc
push
andl
pop
loop
and
lock
jne
fisttpll
add
and
adc
push
test
fs
pop
testb
mov
adc
inc
push
fwait
sbb
leave
adc
adc
adc
push
push
push
cmp
lret
enter
pop
les
test
dec
inc
jl
in
sbb
push
jmp
popa
jns
add
xchg
push
movsl
xchg
push
rol
inc
sbb
call
jo
les
push
test
jnp
jne
sub
add
mov
or
mov
xchg
and
adc
fidivs
mov
js
dec
pop
mov
dec
adc
scas
sbb
or
or
push
sub
out
outsl
adc
into
jecxz
jmp
pop
inc
dec
mov
adc
pop
jne
test
test
and
or
pop
pusha
icebp
cmpsl
push
mov
push
pop
xor
mov
and
das
lods
lods
hlt
mov
ja
sarl
or
lahf
adc
test
or
cmc
dec
cwtl
cli
cmpb
loop
or
add
adc
call
cmpb
jge
and
adc
mov
mov
jbe
sub
sub
lea
push
pop
push
mov
sub
inc
rolb
roll
cmp
lahf
mov
push
push
xor
sbb
and
cmpsb
in
andl
adc
ds
or
push
add
ret
orb
movb
movntps
ret
dec
xchg
xchg
dec
fstpt
leave
inc
push
add
test
cmpsl
push
daa
movsb
xchg
ficomps
gs
pusha
insb
xor
cs
fs
dec
outsl
outsb
addr16
popa
fsubrl
call
adc
mov
mov
jecxz
outsl
push
int3
cmp
ss
out
and
xor
sbb
mov
inc
daa
or
fxch
push
and
in
cmp
lea
push
cmp
mov
adc
call
adc
nop
xchg
or
cs
mov
fstps
mov
sub
stos
inc
and
push
sub
push
dec
sub
and
and
lds
popa
xor
add
add
mov
and
testb
mov
arpl
xor
fists
xchg
and
add
cmp
push
inc
adc
fdivs
or
mov
andl
movaps
xchg
add
pop
push
mov
mov
jns
je
sbb
shl
push
mov
pop
or
or
jge
es
push
int3
sbb
outsl
data16
popa
jb
aas
lret
push
aas
arpl
jae
xor
lods
aas
cltd
push
mov
dec
or
cmp
mov
jp
mov
mov
and
lret
incb
jo,pt
and
leave
pop
jns
cs
mov
orl
data16
icebp
incb
sub
add
je
sti
xor
xchg
pop
pop
adc
mov
inc
pop
cmp
arpl
mov
xor
xchg
inc
mov
cs
push
cld
ss
jae
push
mov
push
iret
xchg
dec
or
pop
test
call
out
lcall
cmp
decl
mov
sub
daa
jne
adc
sub
ljmp
xor
cld
add
lret
sub
rcrl
or
pusha
out
xlat
inc
lods
in
mov
test
bound
inc
adc
xchg
fidivs
ss
mov
ret
setae
inc
dec
add
aaa
pop
call
divl
and
ret
clc
nop
or
pop
or
subb
jbe
xchg
and
imul
stos
cmp
and
inc
jo
sbb
or
sti
push
into
call
lea
stc
pop
and
jp
ja
repnz
lahf
xchg
movl
movsb
sbb
cmp
dec
inc
cmp
push
ja
mov
inc
jmp
sub
xor
pop
cld
ja
add
shr
or
adc
sbb
or
sbb
out
out
cmpsb
loop
inc
lret
add
fisubs
adc
es
shlb
inc
add
add
push
mov
jbe
push
xor
inc
and
scas
test
add
cmp
ret
inc
hlt
inc
fdiv
test
xor
push
fnstsw
mov
add
jmp
adc
fiaddl
and
ss
test
inc
adc
and
mov
inc
testb
xorb
or
sbb
cmp
loope
and
je
aas
mov
add
in
aaa
sti
push
jne
inc
mov
int
popf
in
roll
push
or
mov
mov
int3
dec
dec
jbe
pop
mov
adcl
adc
inc
popf
jae
or
mov
or
cmp
xchg
inc
and
pop
sub
ret
xor
xor
adc
addr16
out
push
jne
test
push
jb
in
and
je
cwtl
nop
push
push
mov
or
fbld
jbe
dec
or
sub
xchg
adc
pop
push
lods
js
lea
or
mov
adc
inc
and
push
pop
pop
in
push
cld
mov
or
cmp
jp
rclb
mov
in
ret
adc
pop
pop
mov
pop
mov
sub
push
popf
test
jb,pn
rorb
adc
movsb
xchg
cmp
pop
xchg
add
roll
and
cmp
dec
test
mov
and
cmp
rorl
imul
mov
push
xchg
fisubrl
cld
imul
xchg
add
sub
int
std
popf
pop
add
cmp
dec
pop
out
iret
push
mov
das
out
push
or
push
jl
das
fbstp
inc
aam
imul
sarb
sub
pop
lea
adc
mov
mov
push
aaa
adcb
lods
fcomi
aam
mov
pop
je
xchg
or
cmp
jmp
or
add
and
push
and
mov
mov
cmpsl
add
inc
sti
repnz
inc
sub
dec
clc
and
rolb
mov
inc
add
in
adc
cmp
out
adc
sbb
js
cmc
ljmp
call
popf
nop
push
rclb
clc
in
mov
push
mov
shlb
rorl
call
mov
pop
adc
shrl
aas
inc
add
dec
call
add
fs
sarb
es
int3
push
jmp
adc
or
aam
mov
lods
out
mov
and
pop
xchg
pusha
arpl
or
or
lea
cmpl
ret
adc
add
jmp
and
dec
adc
mov
sarb
adc
dec
bound
pop
arpl
mov
and
or
push
sub
insl
mov
aam
xlat
test
push
lahf
sbb
adcl
mov
mov
leave
jne
jmp
popa
add
ret
pop
jg
xchg
add
mov
fcmovne
enter
jg
test
or
or
add
push
push
bound
jmp
aaa
or
xchg
cmpsl
inc
fsubr
or
adc
sbbl
lds
xlat
xor
lea
adc
dec
xchg
mov
sbb
add
cmpsl
xor
push
push
sub
adc
ret
inc
aas
push
dec
dec
mov
dec
mov
mov
cmp
in
aas
dec
jecxz
or
imul
enter
cmpsl
jl
cmp
dec
mov
sti
lods
push
cmp
je
mov
and
cmp
pop
pop
fstl
mov
js
push
sub
xor
add
cs
add
pop
and
or
push
gs
jge
push
scas
xchg
push
or
adc
mov
push
inc
push
inc
sti
in
jae
jbe
cmp
je
dec
divl
push
popa
mov
jbe
aas
inc
dec
cmp
or
push
lds
sbb
push
xorb
sub
or
xor
jg
cmp
cmp
pop
js
test
pop
inc
xchg
jg
ja
nop
adc
sbbb
ljmp
push
inc
cltd
out
push
je
mov
cli
sahf
or
add
cld
mov
fnsave
or
mov
dec
test
sbb
or
and
enter
jb
cmp
inc
mov
and
sub
and
inc
sbb
adc
inc
sbb
inc
scas
test
out
and
call
nop
or
sub
les
xor
dec
or
mov
and
xchg
aam
int3
in
jb
cmp
test
mov
in
jb
cmp
mov
and
enter
jb
cmp
xor
inc
xor
sub
adc
or
add
cld
inc
mov
enter
jb
cmp
sbb
mov
sbb
mov
and
in
jb
cmp
and
enter
lahf
cld
mov
cltd
dec
push
inc
movsb
jb
cmp
test
in
dec
mov
inc
xor
sub
enter
les
in
hlt
cltd
or
sbb
mov
and
xchg
int3
enter
jb
cmp
and
in
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
mov
and
xchg
adc
or
adc
clc
lahf
lock
sbb
mov
and
xchg
enter
mov
jb
cmp
mov
adcb
jb
cmp
push
mov
and
enter
jb
cmp
adc
inc
or
add
cld
sahf
outsl
adc
xor
loopne
or
movsb
xchg
pushf
enter
fisttps
repnz
cmp
jmp
hlt
xchg
in
enter
jb
cmp
sbb
mov
clc
push
lahf
stc
mov
adc
mov
or
and
jo
mov
sub
adc
cmp
push
mov
and
fiadds
mov
inc
lods
and
mov
jnp
icebp
push
pop
and
dec
enter
jg
sbb
pop
in
jb
cmp
push
dec
enter
jb
cmp
imul
fsubrp
push
fists
push
jb
in
jle
or
sbb
mov
and
xchg
loopne
fsub
shlb
cmp
jb
cmp
cmp
cmp
and
mov
cmp
mov
and
enter
or
or
sahf
xor
sbb
cltd
or
sbb
mov
sbb
mov
and
in
jb
cmp
jo
mov
push
in
or
ret
xor
mov
shlb
push
adc
jecxz
and
mov
hlt
inc
pop
inc
repz
nop
or
aad
xchg
dec
pop
adc
mov
or
sub
push
enter
push
cli
das
mov
sbb
mov
cmp
stc
push
popf
pusha
adc
mov
or
jmp
out
negb
push
mov
loope
sti
aas
push
inc
insl
adc
mov
test
inc
or
dec
loopne
in
adc
mov
orb
call
add
shrl
and
adc
mov
and
dec
sub
call
push
daa
jbe
inc
ret
nop
mov
in
push
push
scas
clc
and
jecxz,pt
mov
jl
inc
push
mov
or
cltd
bound
or
jecxz
and
cld
js
std
lods
psubb
clc
pop
scas
or
pop
in
sbb
iret
hlt
int3
add
sbb
xor
scas
and
aas
pushf
and
pop
enter
ja
movl
popa
addr16
jns
push
push
push
dec
inc
cs
adc
daa
outsl
bound
xchg
dec
dec
mov
cld
stos
adc
push
pusha
inc
dec
push
jge
shrl
xor
dec
inc
es
pop
dec
dec
inc
stos
sbb
insb
dec
and
pushf
inc
jnp
jl
jl
xchg
lock
push
or
icebp
xchg
repnz
jb
cmp
sbb
mov
and
xchg
cli
enter
jb
cmp
sbb
loope
inc
loop
jecxz
in
in
out
out
call
jmp
gs
or
cmp
sbb
mov
and
xchg
ror
shl
shll
cmp
sbb
fmuls
xchg
fcmovne
fsub
fnsave
cmp
sbb
mov
and
xchg
ret
enter
jb
cmp
sbb
mov
and
xchg
lret
enter
jb
cmp
sbb
mov
and
in
jb
cmp
mov
enter
jb
cmp
mov
enter
jb
cmp
test
enter
jb
sub
adc
mov
inc
or
lds
jg
fwait
or
test
jp
lret
pop
add
adc
inc
js
gs
add
jg
fisubrs
mov
jle
addb
inc
bound
jb
nop
loopne
testb
mov
pusha
push
inc
dec
adc
popa
jo
mov
cmp
scas
pop
inc
cmp
xor
sbb
jne
ret
gs
test
scas
pop
fs
jne
or
or
outsb
mov
mov
lock
or
xlat
or
sub
cmpl
les
sub
pusha
fldcw
adc
cmp
orb
inc
inc
imul
outsl
nop
push
pop
pop
mov
sbb
popa
outsb
addr16
scas
pop
fs
leave
or
or
mov
outsl
ja
and
popf
fs
dec
mov
nop
fs
in
mov
rolb
sbb
fs
jo
mov
fisubs
shlb
adc
sbb
push
inc
insb
lods
jnp
and
or
push
fs
adc
les
punpcklbw
xchg
test
test
lcall
pop
inc
ljmp
pop
mov
sbb
outsl
sarb
fdivrs
int3
ljmp
jae
push
mov
insb
popa
xchg
mov
mov
inc
iret
sub
push
jb
jns
mov
scas
pop
fs
cmp
push
inc
stos
add
arpl
adcl
and
je
sbb
inc
xchg
aam
enter
js
enter
testb
push
enter
and
test
xchg
outsl
lea
mov
es
fsts
jb
jae
test
pop
idivb
inc
pop
and
pop
in
ret
cmpsb
push
lea
mov
inc
xchg
daa
data16
orl
and
adc
test
mov
inc
sbb
xchg
jo
xor
adc
push
inc
int
insl
stos
push
push
gs
outsb
xor
inc
or
sbb
or
sbb
outsb
and
cltd
adc
push
cs
and
icebp
inc
mov
mov
add
sub
das
fsubl
int3
int3
sub
adc
call
push
inc
outsl
pushf
mov
inc
adc
fnstcw
adc
jb
popa
fs
sbb
jne
faddl
int3
add
jmp
or
jmp
popf
inc
rcll
adc
push
mov
int3
push
roll
xchg
mov
mov
adc
push
mov
adc
sbb
add
jno
cmp
sub
les
push
or
loopne
add
mov
int3
pop
adc
pusha
in
enter
or
insb
add
pop
imul
loop
push
outsb
std
adc
push
jbe
jp
lret
out
dec
lods
imul
shr
div
xchg
ret
into
mov
add
dec
adc
test
std
cld
pop
lret
mov
mov
outsl
outsb
repnz
ret
xchg
icebp
inc
dec
adc
and
stos
dec
hlt
je
jnp
aad
dec
aad
mov
stos
lds
mov
push
mov
lcall
cmpsl
aaa
inc
dec
adc
ret
mov
rolb
lds
jne
fs
sub
inc
nop
pop
and
push
inc
lcall
mov
ja
push
faddl
jbe
in
shll
je
movzbl
cmp
push
dec
test
xor
xchg
loop
mov
cmpsl
ss
pop
push
in
add
inc
push
scas
push
pusha
sub
int
pop
xchg
lea
mov
sbb
je
loop
cltd
push
xlat
out
inc
je
ret
mov
popf
out
orb
enter
daa
fildl
push
and
repnz
xor
nop
hlt
or
push
fcoms
xchg
shlb
and
jmp
sti
sub
ret
out
and
pop
jbe
xor
fbstp
cmp
add
sub
inc
repz
dec
ds
push
inc
fdivl
mov
test
sub
out
dec
iret
mov
or
sbb
cmp
xchg
or
or
jg
pop
lahf
lds
stos
push
pushf
adc
popa
cmpsb
sub
das
sub
inc
mov
sti
ds
jg
mov
lods
leave
lock
iret
push
push
into
js
in
daa
repnz
cmpsl
js
rorl
push
push
out
add
jbe
arpl
or
idiv
jmp
popa
jns
dec
xchg
push
andb
aad
xchg
fistl
dec
insb
adc
xor
test
add
cmc
push
adc
dec
mov
adc
cmp
scas
ljmp
mov
inc
jl
push
pop
andb
and
rcll
or
sbb
dec
sub
adc
add
into
sub
inc
xchg
jo
icebp
mov
ds
je
aaa
pop
js
push
bound
cmp
sbb
sub
les
inc
jne
lea
aad
and
imul
mov
mov
and
mov
movsl
mov
bound
pop
mov
jle
je
mov
mov
sub
cmp
cmp
jbe
jne
pop
or
aas
inc
test
adc
and
push
testb
sbb
add
mov
xorl
rol
fdivs
lret
xor
mov
adc
jno
add
outsl
xchg
sbb
jmp
fistps
adc
mov
sbb
movsb
xchg
outsb
insb
adc
jmp
popl
out
inc
or
lea
adc
cmp
xchg
fstps
adc
sub
fwait
xlat
sbb
mov
outsl
pop
data16
enter
inc
lods
mov
test
cmpsb
xchg
xchg
lods
aas
xchg
aaa
nop
cmp
enter
add
sub
jb
cmpsl
jg
adc
add
dec
sbb
add
mov
notrack
fldenv
mov
bound
and
incb
jae
inc
dec
jne
mov
mov
mov
or
hlt
pop
or
sarb
fsubr
mov
sub
ret
fisttpl
add
div
cmp
xchg
cmp
adc
pop
mov
push
jne
push
pop
pop
sub
inc
lret
add
cmp
jmp
add
dec
jne
fs
cltd
sbb
xchg
mov
add
add
push
and
movsb
sub
push
lods
add
sbb
dec
add
in
shr
popa
aas
push
ja
mov
pushf
jl
ss
push
mov
cmp
adc
leave
push
lds
repnz
sbb
inc
lea
imul
push
pop
xorb
cltd
orb
and
push
imull
xchg
call
data16
cwtl
inc
sahf
push
xchg
or
add
cmp
data16
or
into
jge
sub
mov
and
sbb
xchg
jg
pop
add
and
pusha
pop
fadd
faddp
stos
test
hlt
jecxz
repz
outsb
fnsave
fdivl
add
mov
jmp
pop
loope
push
add
fcom
fstsw
sahf
jae
jmp
jl
add
ffree
cmp
cmp
adc
pop
incl
and
push
xchg
add
sub
push
inc
xor
xchg
mov
movb
sub
loopne
pushf
leave
sbb
xor
movb
adc
fsub
loope
and
dec
int3
and
or
sarl
dec
cmpsb
roll
push
andb
call
shlb
pop
mov
nop
nop
sub
sub
push
mov
in
mov
enter
sub
stc
jnp
mov
pop
lods
jns
pop
lock
sub
or
test
mov
iret
jg
inc
bound
mov
fidivl
aaa
dec
xor
fcmovnb
cmp
mov
pop
mov
mov
and
dec
jb
push
add
popa
mov
push
mov
adc
sub
add
adc
call
add
xchg
fstpt
nop
cmp
inc
mov
nop
inc
shrb
mov
and
push
ljmp
movb
xchg
repnz
jl
inc
mov
adc
xchg
cmp
test
xchg
mov
mov
int3
sub
mov
xor
sub
lock
pop
fldt
fcomps
inc
xor
xchg
add
dec
sbb
xor
push
dec
test
xor
movb
into
and
push
stc
push
and
lret
sub
imulb
rclb
adc
cltd
or
adc
icebp
subl
sub
repnz
adc
nop
sub
jb
adc
sub
and
inc
nop
xchg
nop
cmp
xor
cmp
dec
inc
out
xor
clc
or
mov
loopne
add
ja
xchg
and
jge
dec
xor
add
pop
roll
and
add
push
mov
lea
repz
mov
call
add
pop
cltd
adc
insl
dec
hlt
aas
mov
into
idivb
test
or
jnp
cwtl
adc
and
cld
xchg
push
xlat
insb
test
sbb
mov
clc
adc
xchg
rclb
lods
or
push
cltd
je
mov
push
cld
out
xor
or
add
int
lea
mov
pop
add
mov
je
enter
negb
or
jne
ja
mov
enter
fwait
inc
xor
or
test
call
sub
jmp
mov
inc
add
adc
push
clc
loop
xlat
ret
push
inc
adc
in
xor
je
repnz
push
xor
mov
pop
sub
push
out
bound
pop
notrack
aaa
sbb
lahf
pop
push
push
xlat
dec
ret
dec
push
inc
cli
jg
jl
sahf
mov
fdivs
jl
cmp
add
jne
push
mov
mov
jmp
pop
xlat
cld
mov
push
orl
dec
jmp
in
jl
test
add
ret
aam
mov
lcall
and
dec
loop
into
push
lret
pop
insb
xor
inc
xchg
add
mov
mov
push
cli
or
mov
or
inc
and
sbb
mov
sub
sbb
add
adc
inc
push
pop
bound
sbb
dec
dec
adc
xor
xchg
scas
mov
push
or
stc
xchg
dec
out
pop
and
cmp
pop
adc
mov
sub
sbb
and
add
dec
fs
or
mov
adc
in
sub
add
mov
in
in
sbb
cld
outsl
cmp
lods
cs
mov
mov
lock
dec
inc
jb
adc
pop
sub
ret
nop
mov
cmp
mov
enter
push
mov
lcall
addr16
test
es
sar
aas
out
mov
sar
jmp
mov
pop
ret
popl
sub
dec
cs
divb
sub
sub
pop
pop
out
or
xlat
bound
sub
sub
push
pop
mov
jns
dec
test
iret
push
inc
je
pop
mov
xor
cmpsb
mov
lret
pop
rcl
mov
je
and
mov
cli
xchg
jmp
inc
ljmp
nop
fcompl
or
push
pop
sub
das
dec
insb
push
xchg
pop
lods
jmp
cmpsl
add
push
inc
ljmp
jmp
repnz
nop
mov
push
mov
push
fists
push
sub
jbe
push
aas
lea
and
lods
sbbl
xor
pop
sti
shl
dec
loope
ljmp
jle
insb
int
sub
dec
cwtl
or
mov
sbb
push
mov
das
xchg
fdivrp
int3
dec
rcrl
jns
inc
and
cltd
and
lods
pop
cwtl
or
sbb
mov
in
scas
add
jbe
mov
rorl
fcmovne
add
jne
fnstcw
je
push
inc
aaa
add
cmp
aam
adc
push
push
pop
jg
add
jo
dec
jnp
mov
sub
add
movsb
sbb
pcmpeqb
sbb
call
pop
ljmp
shll
cmpsb
sbb
xchg
push
mov
inc
xchg
xor
inc
inc
xor
jmp
jge
clc
or
enter
in
dec
outsb
or
lods
cmp
enter
es
repz
sub
jmp
das
repnz
sarl
call
sub
fsubrl
cmp
and
lods
jmp
adc
mov
mov
daa
mov
fcoml
popa
or
sub
jae
push
fildl
or
push
dec
sarl
or
and
stos
xchg
push
ret
jge
xor
push
jmp
pop
rcll
sahf
jmp
cmp
popf
rolb
xor
push
cmp
imul
movzbl
xor
ret
incl
adcb
push
dec
push
cmp
jg
push
mov
decb
jl
cli
into
es
je
mov
fisttps
and
jae
enter
jne
lea
fisubs
pushf
push
add
and
xor
xchg
or
mov
mov
xchg
xchg
jns
out
and
or
xchg
push
sbb
inc
adc
ss
popf
rcll
or
sahf
loop
push
push
aam
lea
fdivrl
jmp
mov
push
dec
leave
and
loopne
paddb
push
adcl
adc
lret
pop
mov
adc
je
pop
stc
push
popl
adc
movsb
punpckldq
cmpl
jbe
jns
push
imul
dec
xor
dec
and
popa
rep
and
enter
mov
fldl
jne
cld
and
test
ja
jle
cld
sbb
pop
jp
cld
jle
test
mov
inc
pop
cmp
fdivl
loope
ficoml
xchg
out
lcall
inc
push
jle
pop
stc
loope
pop
inc
push
add
decb
in
mov
das
jmp
ret
jecxz
or
mov
int
je
aas
lcall
nop
add
inc
aas
adc
add
enter
mov
add
mov
cmp
jbe
cmp
jmp
sub
int3
daa
adc
adc
adc
mov
out
shlb
lcall
iret
and
pop
arpl
xchg
ret
inc
xor
add
enter
cmpsb
rcrb
or
sahf
int3
dec
push
daa
xchg
idivb
and
movb
push
ja
inc
sarb
mov
adc
dec
ret
xchg
xchg
pop
push
mov
inc
ja
inc
cli
in
xor
daa
inc
inc
and
adc
inc
xchg
xchg
call
add
std
adc
xchg
ror
dec
shrb
test
cmp
es
cmp
clc
insb
add
lea
mov
jmp
es
and
ret
inc
jmp
add
stos
sti
call
adc
inc
cmp
or
lea
xchg
xchg
dec
push
out
jo
add
outsl
movsb
jmp
cmpsb
adc
nop
inc
cltd
adc
and
add
lea
add
cld
and
es
push
sbb
mov
xchg
jae
iret
xchg
adc
lods
sarl
jnp
push
xchg
les
pop
and
xor
mov
jbe
jae
adc
cmp
stos
dec
jne
xchg
ja
mov
test
add
and
pop
cld
aas
mov
and
cmp
pop
call
mov
add
sub
ficoml
in
orl
sub
loopne
jne
sub
in
repnz
jge
sub
movsw
push
jp
xchg
xchg
jmp
sub
jb
inc
inc
sbb
mov
and
mov
test
pop
jmp
sti
pop
push
xchg
dec
cmpsb
jnp
adc
int3
and
loopne
inc
add
int3
sbb
sub
mov
adc
sbb
test
jb
stc
jno
lcall
sub
sub
and
ss
mov
mov
mov
mov
cmp
sbb
outsl
sbb
mov
insb
inc
mov
mov
adc
dec
les
cwtl
bound
inc
sub
or
and
adc
mov
bound
ds
in
decb
push
call
rorl
test
lds
jecxz
stos
mov
xchg
mov
pop
andl
jae
in
imul
mov
aam
lcall
cs
out
shr
sbb
mov
pop
dec
jne
dec
mov
mov
and
outsl
mov
push
clc
push
inc
fbld
pop
and
inc
outsl
ds
adc
bound
ss
inc
mov
adc
cmp
pop
pushf
rclb
stos
or
cs
js
jge
mov
neg
cmc
fmuls
in
je
mov
stos
xchg
push
mov
xor
mov
insb
outsl
pop
orb
inc
pop
dec
sub
mov
outsb
daa
add
cmp
loopne
pop
pop
mov
push
aam
testb
stc
and
mov
sti
lock
test
stc
push
adc
lret
repnz
outsb
in
sbb
mov
mov
pop
les
mov
jle
inc
xchg
jbe
push
orb
dec
add
add
call
cld
mov
sub
add
sbb
or
sub
and
mov
sub
sub
add
sbbl
ja
out
jb
cmp
pop
sbb
adc
or
cld
lock
jmp
aaa
xchg
xchg
or
les
stos
add
inc
xchg
inc
mov
fidivl
xchg
add
jmp
cmp
mov
cmp
jg
orl
std
jl
es
stos
cmpb
cmp
fstps
repz
mov
inc
lea
loop
inc
or
mov
lds
stos
or
pop
inc
clc
mov
pushf
inc
push
daa
pop
push
and
xor
gs
test
sub
les
sub
pop
add
mov
mov
in
mov
lret
or
mov
cmpl
mov
pop
xchg
bound
jmp
sub
add
enter
testb
mov
inc
push
inc
dec
je
dec
sub
mov
ret
and
divb
add
call
lods
sahf
and
sbb
in
inc
sub
das
jns,pt
test
jb
adc
or
cld
cmovo
push
lret
cwtl
mov
xor
cltd
stos
sbb
aas
dec
movsl
mov
cmp
je
push
push
fldenv
mov
test
ret
imul
inc
loop
ret
push
mov
loop
test
and
sub
dec
fisttpl
shll
jle
jmp
sub
sub
test
sbb
fimull
dec
shrb
sub
add
jle,pn
cmp
and
push
add
sub
sub
xchg
or
loopne
std
or
test
test
xor
adc
and
mov
aad
cs
mov
jne
sbb
inc
push
fs
adc
call
jle
lods
add
sbb
das
adc
aas
add
adc
or
clc
xchg
inc
loope
and
dec
add
fabs
movsb
mov
and
and
mov
fldt
xchg
mov
je
or
mov
lcall
loope
add
or
sub
xor
add
bsf
jno
ds
shrb
or
rorl
push
mov
dec
add
cmp
jae
cmpb
cld
and
add
or
add
ja
jmp
movw
gs
and
xor
je
inc
cld
push
or
fadd
ljmp
add
je
out
xchg
lret
lcall
mov
add
mov
mov
das
or
jns
cmp
inc
mov
test
or
outsb
mov
add
mov
jg
cmpsl
sbb
jae
repnz
add
and
int3
push
in
fildll
cli
mov
and
pop
sbb
imul
add
sbb
sbbb
inc
or
aad
push
pop
iret
pop
and
jne
dec
rcll
cwtl
mov
movsl
and
and
lret
inc
ljmp
or
enter
or
mov
jmp
inc
fmull
mov
nop
sub
lea
mov
flds
movsb
stos
icebp
leave
stc
mov
shll
ljmp
xlat
or
sub
xchg
in
sub
mov
push
cmp
bound
inc
push
pop
or
icebp
je
es
fistpll
and
mov
inc
lods
dec
xorb
shr
rol
sbbl
jb
push
add
loopne
xor
jmp
test
mov
stos
icebp
filds
and
nop
addr16
push
and
popa
ret
or
cld
sub
cld
or
jae
fimull
into
push
adc
jmp
sbb
mov
cld
daa
mov
dec
xchg
and
jns
cmp
push
nop
subl
jb
sbb
add
pusha
shlb
or
xchg
xor
mov
ret
push
pop
imul
mov
icebp
or
sub
pop
stos
sbb
ljmp
mov
and
push
fwait
jnp
or
mov
js
add
fldl
or
inc
scas
cmpsl
test
mov
adc
jmp
or
sub
add
dec
pop
clc
je
or
daa
mov
iret
arpl
jae
sbb
inc
and
pop
inc
cld
das
add
loope
pusha
xor
das
out
ss
dec
rcrb
addl
push
inc
shr
and
leave
dec
fildl
mov
push
sbb
push
pop
jecxz
dec
inc
or
movsb
dec
jne
test
inc
dec
data16
loopne
iret
xchg
in
and
xchg
hlt
mov
mov
add
clc
pop
cmp
sbb
hlt
mov
pushl
push
popa
or
hlt
call
popa
dec
mov
negb
cmp
imul
cld
add
ja
ficompl
les
adc
enter
and
lods
and
and
test
adc
div
mov
mov
icebp
and
xchg
xor
sbb
cld
cmp
push
fiadds
jg
mov
cmpsb
popa
lea
int3
xor
dec
lock
pop
stc
cmpb
jb
outsl
push
inc
daa
ja
push
sub
js
or
lock
sbb
movl
dec
nop
adc
mov
incb
jne
shrb
mov
imul
shr
mov
ja
repnz
inc
sbb
int3
or
jne
test
rolb
cmpsl
les
clc
pop
mov
mov
roll
pop
pop
xchg
inc
faddl
mov
mov
dec
xchg
or
mov
dec
in
test
jg
push
fidivs
loope
and
xor
hlt
sbb
add
jmp
rolb
daa
inc
jo
je
xchg
pusha
js
stc
sbb
cmp
pop
jl
or
inc
xor
push
add
sbb
ret
dec
push
enter
xchg
fsubrl
mov
jmp
sub
imul
and
fsubrs
loop
mov
xchg
sub
loopne
jns
inc
inc
cs
insb
sub
pop
mov
cs
jmp
ret
movsl
inc
and
jp
mov
mov
push
repnz
arpl
adc
fs
jmp
ja
sub
sbb
or
push
hlt
das
dec
ret
mov
lret
jo
stos
cmp
push
or
fcoms
pop
aas
sarl
cltd
mov
xor
stc
cwtl
inc
imul
xchg
bound
pusha
xchg
call
or
xor
orl
ret
mov
sbb
test
loopne
inc
outsl
sub
pop
dec
es
movhps
pop
repnz
and
jecxz
sbb
adc
dec
leave
and
or
push
push
dec
inc
adc
mov
mov
cltd
cld
lcall
adc
mov
sbb
cld
daa
push
fidivl
lret
mov
add
fcomps
mov
sbb
pop
mov
sub
icebp
js
push
push
xor
popa
fucom
das
add
and
in
push
testl
lock
mov
test
inc
test
xor
sub
mov
xlat
cmpl
sti
je
mov
mov
inc
hlt
mov
push
push
cmpb
jne
adc
inc
cwtl
aaa
jo
push
pushf
sbb
sub
dec
or
call
movb
shll
jecxz
xor
pop
sub
push
aas
inc
out
call
push
and
aas
xchg
jecxz
int3
inc
call
push
push
inc
leave
mov
mov
bound
adc
mov
xor
enter
in
dec
or
mov
sbb
and
mov
insl
call
push
in
sub
mov
and
in
push
mov
les
test
xchg
inc
sub
pop
dec
aas
jecxz
adc
sub
push
and
or
pop
jnp
push
add
shrl
gs
in
out
sbbl
add
movsl
fbstp
adc
iret
add
fistps
cmp
cmp
lods
lcall
xor
jne
lds
sbb
mov
inc
repnz
cmp
xchg
les
add
decl
stc
lahf
loop
insb
add
lahf
sti
jo
ret
push
push
mov
jg
pmulhw
adc
or
jbe
or
jb
jne
add
cmp
fcoml
push
xchg
inc
inc
enter
add
bound
mov
jns
ret
call
xchg
loopne
fcoms
mov
fcompl
jb
pop
and
adc
pop
lea
call
cltd
out
sub
adc
and
xchg
mov
or
mov
and
scas
scas
mov
adc
sub
inc
mov
ficoml
lahf
orl
xchg
mov
push
add
lahf
mov
jnp
in
and
jne
lock
dec
ljmp
push
push
add
ja
mov
and
test
add
or
ret
rorb
or
add
push
and
or
add
fidivrs
dec
mov
movsl
and
mov
mov
orl
push
dec
imul
xchg
mov
dec
hlt
cwtl
sub
add
jnp
add
mov
cwtl
int
mov
and
dec
dec
es
adc
call
repz
sub
stos
aaa
enter
dec
flds
mov
jmp
xor
hlt
mov
test
xchg
sbb
fsub
lret
test
sbb
or
fwait
dec
or
insl
jmp
movsl
jnp
ja
imul
inc
test
pop
xor
sarb
daa
adc
mov
fwait
lods
adc
xchg
cmp
adc
loope
jne
jmp
cli
js
mov
lock
ret
pusha
orl
loopne
and
or
inc
por
jl
or
adc
popa
rcll
sbbb
bound
xchg
xchg
data16
mov
popa
adc
lea
jne
and
jmp
pusha
push
loope
xor
mov
loope
test
lds
sub
xchg
iret
push
push
in
or
or
lock
out
jbe
add
adc
in
xor
or
pop
in
out
es
jo
cli
in
mov
xor
call
or
xor
out
bound
xchg
jge
movsb
das
xchg
and
in
push
and
push
sub
mov
dec
das
insb
push
jne
cmc
nop
cs
inc
cwtl
test
and
popa
dec
dec
test
inc
add
add
add
dec
mov
jae
out
pushf
mov
mov
adc
mov
jmp
test
dec
int
jle
jl
adc
sub
cli
sti
pushf
call
push
fwait
fs
call
adc
cwtl
pop
xor
or
out
rolb
cwtl
dec
mov
add
and
sub
sub
ja
and
lock
lcall
or
add
frstor
mov
jns
hlt
inc
aam
push
mov
xlat
inc
cmpsl
push
scas
inc
cmpb
rclb
jmp
and
in
rorl
mov
sub
scas
pushf
fadds
dec
das
push
idivl
lea
mov
add
or
pop
daa
xor
mov
add
inc
dec
ret
cmp
ljmp
mov
xchg
lcall
pusha
sub
das
sbb
mov
aaa
das
lret
pop
jo
popf
insb
add
push
mov
and
je
mov
fisubs
push
push
shrb
divl
or
fwait
outsl
mov
jmp
mov
add
lea
enter
pop
mov
ljmp
mov
mov
add
sub
jae
das
inc
stos
dec
daa
into
dec
pop
cmp
sub
fadds
pop
push
mov
mov
imul
dec
loope
icebp
inc
pop
mov
les
test
shrl
xor
push
push
cmp
xchg
adc
push
push
pop
cmp
xor
jne
and
push
mov
inc
pop
pop
push
mov
push
mov
popa
xor
out
and
dec
pop
jl
rolb
add
and
idiv
imul
lret
gs
inc
lcall
je
dec
mov
push
jecxz
loopne
jmp
cmp
push
dec
push
xchg
outsl
js
push
inc
pusha
pop
clc
jle
in
f2xm1
dec
and
jmp
rolb
subb
push
addr16
sbb
addr16
orb
inc
lahf
dec
jl
cs
mov
mov
call
clc
mov
push
mov
or
add
sub
add
pop
icebp
xchg
shrl
addl
fs
imull
inc
filds
imul
push
fcoms
pop
movlps
and
arpl
lods
jl
fs
cltd
xor
jb
bound
sbb
mov
imul
sti
fmuls
cmp
push
adc
pop
xchg
adc
push
decl
xor
add
pop
inc
fs
or
pop
scas
es
loopne
in
stos
mov
loop
adc
xor
loope
or
call
leave
cwtl
iret
cmp
dec
fdecstp
aad
add
int3
push
adc
dec
xor
in
xchg
xchg
jge
or
pop
inc
inc
lret
lea
sahf
aaa
test
jo
sbb
adc
adcb
rcl
and
jle
mov
mov
ret
mov
cs
xor
adcl
mov
add
ljmp
into
adc
lock
push
mov
inc
imulb
lcall
mov
mov
jmp
jge
fs
inc
in
jmp
cltd
sbb
or
mov
and
cmc
pop
mov
das
call
sbb
lock
push
push
scas
daa
push
decl
clc
jmp
cmpb
xor
sub
aad
sbb
push
add
sub
or
sub
or
mov
jns
sbb
jbe
cmp
cmp
jle
frstor
les
int
mov
nop
testb
push
adc
and
mov
outsb
nop
or
fs
mov
pushf
and
or
cmp
mov
sbb
sub
adc
mov
or
jne
ret
mov
push
inc
sbb
outsb
adc
or
sbb
jo
sub
push
fsub
sbb
sub
dec
test
cli
pop
push
out
adc
loop
push
xor
movsl
bound
add
jb
mov
pop
sub
gs
es
mov
or
add
shr
ja
aas
and
add
inc
sub
je
add
adc
sub
and
add
mov
or
pop
lds
mov
out
pop
clc
and
dec
popf
gs
and
or
or
dec
mov
es
and
add
test
test
fistpll
inc
je
nop
sbb
ret
adc
cmp
loope
data16
sbb
ja
popa
jne
and
js
sti
add
shll
add
loopne
adc
or
jae
fdivrl
pop
push
mov
mov
mov
fcompl
movsb
sub
xchg
into
in
lods
test
xor
daa
cmp
rcrl
mov
xor
leave
mov
call
lock
fwait
cmp
cmp
xlat
adc
adc
add
arpl
out
mov
adc
bound
jmp
cmp
adc
fstpl
lds
pop
jb
inc
paddusb
or
fwait
jmp
or
mov
push
fcmovne
hlt
pop
subl
lahf
push
push
das
fldcw
xor
jmp
je
add
add
sub
jb
ret
je
mov
mov
add
pop
stc
int3
nop
dec
pop
mov
push
pushf
push
and
adc
adc
fstps
or
and
sub
cltd
mov
fadds
and
mov
bound
jo
mov
pop
push
fisttpl
xor
jo
xor
leave
cmpsl
idivl
mov
mov
adc
adc
stos
je
es
push
push
add
lret
adc
adc
xor
mov
fmull
push
sub
daa
mov
dec
clc
inc
add
dec
call
push
jae
push
mov
and
or
mov
inc
adcl
rclb
scas
popa
adc
sub
pop
pop
add
mov
xor
xor
mov
adc
cmp
sbb
insb
cmp
cmc
pushf
sub
mov
and
push
pop
imul
sub
mulb
pop
xor
cmp
sub
xchg
stos
or
or
inc
mov
pop
outsb
jl
push
jge
adc
movsb
cmp
sub
inc
insb
decl
scas
lods
orb
pop
mov
in
sti
loope
int3
or
aam
ja
sbb
fmulp
jno
and
aas
mov
fdivrl
and
insl
xlat
js
shrb
aam
cmp
std
enter
cmp
xor
shlb
or
shrb
push
add
jne
push
add
adc
shrb
xchg
icebp
push
out
cmc
push
mov
into
mov
jp
mov
xor
inc
pop
adc
dec
or
push
inc
ret
add
mov
or
xor
js
sub
cmp
aas
and
push
fsubs
mov
lret
aaa
or
add
ret
aaa
lods
inc
push
add
jae
pop
loopne
mov
mov
rorl
mov
lock
push
push
add
jmp
sbb
lea
mov
xor
dec
mov
por
sub
les
adc
ret
add
push
fimull
inc
dec
mov
cmc
popa
pop
je
add
nop
aaa
pop
mov
test
mov
xchg
pushf
frstor
add
add
aas
aad
mov
fistpl
cmc
lods
nop
movsl
test
ret
jno
push
adc
pushf
mov
add
mov
add
pushf
std
fiaddl
shl
scas
and
fwait
and
sbb
das
jne
imul
pusha
and
std
ja
push
aam
inc
enter
and
mov
dec
xchg
inc
jmp
sub
and
add
mov
inc
and
inc
incb
add
jbe
popf
mov
in
aam
or
xchg
pop
and
in
sub
and
out
ret
jno
cmpsl
clc
jae
into
lahf
inc
lods
add
dec
cs
in
rolb
aaa
loop
cld
and
inc
push
add
pop
stc
dec
xchg
inc
push
xchg
hlt
dec
mov
and
mov
addr16
mov
es
mov
push
sub
and
cli
popf
push
rorb
enter
sub
ds
push
sbb
push
add
or
mov
dec
or
call
loopne
sub
stos
adc
dec
inc
push
aam
sbb
loop
push
or
int
popw
mov
push
pop
pop
or
pusha
dec
lock
ja
add
roll
sbb
incb
xchg
repz
add
test
mov
push
lods
push
cmpsl
out
sahf
jo
stos
cmp
sub
cmp
dec
out
push
inc
add
in
rorl
fstpt
mov
push
clc
pop
pop
inc
lods
leave
inc
dec
rclb
jmp
and
or
lods
jns
sbb
cmc
insl
outsl
mov
pop
lea
push
pop
mov
fldt
pop
and
das
pop
bound
xor
pop
pop
jmp
dec
push
das
rclb
and
std
cs
lods
sbb
mov
or
jecxz
hlt
int3
das
or
xor
lahf
jbe
inc
xor
call
fiadds
jg
add
push
jg
cmp
jne
push
pop
adc
push
out
add
dec
addb
jmp
mov
pop
movb
push
or
loop
movb
jo
pop
dec
pop
push
orb
testb
loope
cs
adc
or
dec
addb
push
jb
jmp
loope
cwtl
sub
js
sub
pushf
and
jle
inc
lea
dec
cmp
flds
pop
adc
es
and
imul
fadds
cld
mov
aad
clc
ds
int3
lret
mov
shrb
popf
add
loope
jbe
push
lock
jge
add
xchg
fsub
lret
xchg
add
loopne
cmp
sub
push
cli
push
xchg
out
xchg
xchg
fdivs
or
das
aad
loopne
adc
icebp
loop
adc
mov
scas
push
fildll
mov
xchg
dec
arpl
inc
sbb
leave
sbb
fsubs
and
jnp
insb
xchg
mul
les
push
mov
and
jmp
sbb
nop
aaa
cld
inc
xchg
mul
les
jmp
das
and
andl
add
fwait
add
push
add
or
or
or
or
pop
nop
jecxz
pop
ja
mov
jle
test
jne
sub
jl
adc
lods
sbb
iret
xlat
or
rcrl
andl
adc
adc
and
movsb
push
or
push
flds
int3
cli
jge
lock
testl
popa
push
cmpsb
dec
in
clc
je
data16
mov
and
xchg
ucomiss
mov
fs
call
mov
les
leave
sub
enter
adc
mov
push
or
fs
xor
mov
push
cld
mov
lret
test
pop
jmp
cmpsb
xchg
inc
xchg
and
and
les
insb
sbb
nop
mov
xchg
adc
xlat
push
mov
xchg
mov
mov
cmpsl
icebp
aad
out
cmpsb
mov
loop
fcomps
cld
push
rolb
ljmp
adc
jae
mov
push
inc
bswap
cmc
lods
fwait
push
xor
fs
mov
inc
cld
subb
stc
in
lcall
out
mov
outsl
lea
les
mov
and
in
mov
xchg
mov
or
mov
push
pushf
pop
imulb
mov
pop
cmp
jnp
cmpb
cmpsl
sub
stos
pusha
sbb
or
loopne
sbb
cmp
mov
cmc
fs
or
lods
je
cwtl
xlat
test
mov
or
push
or
mov
add
ss
inc
inc
pushf
js
and
popf
push
sbb
or
fdivrs
mov
cmp
rcll
test
or
dec
popa
shrl
mov
adc
fdivl
or
loopne
adc
adc
pop
cwtl
in
jmp
mov
call
rcrb
and
push
push
sub
add
or
jne
or
mov
jo
jnp
inc
sar
xchg
mov
xchg
jnp
and
dec
adc
cmp
cmp
jo
jae
out
xchg
nop
adc
pop
lock
push
sahf
xor
and
add
pop
inc
in
push
push
mov
jle
or
std
addr16
push
and
in
dec
outsb
in
sbb
dec
jp
mov
xor
or
mov
add
data16
pusha
hlt
call
jne
mov
jmp
sbb
repz
clc
popf
add
mov
and
jb
jmp
es
add
or
inc
jg
insb
add
mov
jo
in
cmp
mov
pop
pop
sub
push
test
sub
iret
clc
hlt
lds
leave
bound
pop
test
shl
enter
lock
lcall
sbb
scas
cmp
jle
mov
lods
pop
pop
das
xchg
fildl
sub
and
push
add
and
dec
or
xor
sub
inc
sti
inc
arpl
jge
cli
cld
nop
je
fnstcw
cmp
and
push
or
inc
dec
in
push
ret
jge
call
mov
dec
xor
jns
or
dec
hlt
mov
ljmp
dec
repz
and
cld
dec
mov
jg
sbb
lock
cs
lahf
adc
roll
jae
add
loopne,pn
jg
or
idivl
inc
jmp
or
or
push
fnstenv
xchg
push
ds
inc
or
mov
jge
or
mov
or
add
ret
stos
sub
mov
adc
out
imul
push
inc
je
inc
mov
mov
inc
adc
push
jo
shl
push
add
and
push
shr
adc
adc
cmp
clc
pop
push
and
adc
mov
shl
leave
nop
pop
mov
pop
cmpsb
ret
movsl
adc
dec
mov
gs
adc
mov
xchg
jg
jge
cwtl
pop
cmp
sar
std
inc
sub
cld
xchg
icebp
rorl
fbld
lcall
shr
pop
lcall
je
je
popf
adc
adc
jmp
stos
pop
inc
adc
sbb
orb
mov
or
pop
xchg
les
sbbb
test
xlat
mov
in
mov
lahf
jb
cltd
adc
clc
ficoml
aad
xchg
xchg
arpl
dec
lods
loopne
sub
mov
or
je
mov
push
cmp
daa
mov
push
jecxz
add
mov
pushl
adc
jbe
test
rclb
shr
repnz
pop
xchg
lock
pop
fs
hlt
inc
cmpsb
adc
sbb
repnz
gs
jecxz
test
stos
adc
mov
xlat
lcall
in
cmp
inc
fsubrs
mov
outsl
or
push
insb
nop
stc
mov
hlt
and
hlt
xor
sub
rcrb
adc
ficoml
loope
inc
lds
incl
add
add
jb
inc
jb
sub
popf
mov
push
in
mov
push
mov
sub
jb
adc
inc
sbb
push
and
stos
int
push
int3
lret
jne
ljmp
or
jmp
add
pop
data16
cwtl
call
pop
cs
sbb
out
xchg
dec
shrb
cli
sub
add
fs
daa
or
add
add
adc
enter
dec
mov
sub
add
jmp
dec
or
mov
movsb
cltd
dec
mov
cmp
roll
test
arpl
movb
push
xchg
sbb
adc
xchg
mov
jp
push
call
xchg
ret
mov
or
sbb
mov
xchg
call
inc
inc
cmp
lea
push
inc
mov
test
add
pusha
je
add
cmpw
cwtl
xchg
rorl
sbb
sbbl
xchg
add
imul
sub
rorb
mov
pushf
pusha
lea
lret
adc
jne
stc
push
xchg
fsub
or
call
mov
popa
mov
movsb
or
add
xor
mov
aas
and
push
lock
mov
adc
in
fwait
mov
sub
xor
repz
in
sbb
cmp
mov
cpuid
mov
dec
mov
mov
test
mov
mov
dec
push
in
and
inc
in
mov
sbb
faddl
and
xor
faddl
xchg
rol
mov
loopne
mov
sbb
aam
fdivrs
sarl
mov
xchg
sbb
push
sarb
andl
int3
mov
jae
xchg
hlt
or
enter
push
push
cld
repz
out
add
cmp
sete
les
enter
push
and
jmp
and
bound
mov
call
out
push
cmp
push
dec
mov
xchg
mov
aad
and
push
xlat
frstor
adc
mov
aas
lret
pop
dec
test
repnz
and
fs
call
and
mov
loopne
add
insl
or
jo
dec
adc
and
iret
mov
sub
and
orl
xor
into
sub
jae
xchg
fcmovne
mov
sbb
jbe
inc
out
testb
int3
push
add
fsubrp
dec
or
jmp
out
mov
xlat
cltd
or
dec
adc
mov
or
jne
aam
imul
fcoms
stos
mov
les
adc
push
mov
xchg
cltd
les
add
adcb
dec
sar
cmp
sub
push
in
ljmp
clc
movl
xchg
out
mov
jmp
fdivrl
inc
dec
call
pop
fists
cmpl
xor
xchg
cmp
jns
pusha
clc
xchg
sub
repnz
mov
insb
mov
add
popa
fwait
adc
sub
ret
or
push
pop
fcmovb
popf
mov
bnd
jge
adc
cmpsl
faddl
inc
adcb
rcrb
ds
sbb
lret
inc
repz
push
mov
stc
rorb
daa
jne
jb
add
jmp
fs
fmull
aam
out
clc
lcall
in
inc
jnp
jl
mov
pop
or
mov
dec
push
sub
inc
imul
push
jo
popa
arpl
inc
js
hlt
jp
xchg
lock
dec
jne
ds
adc
adc
mov
push
xor
gs
or
pop
add
lods
mov
sbb
repnz
cmp
adc
adc
out
and
pop
pop
daa
mov
push
int3
pop
jb
nop
dec
sti
add
push
xor
decl
and
pop
pop
inc
lock
push
les
int3
add
mov
push
daa
in
mov
add
add
pop
in
pop
repnz
jecxz
adc
fidivs
dec
lret
jbe
mov
jg
popa
add
add
jno
shlb
adc
pop
insl
mov
inc
cs
xchg
dec
addr16
push
arpl
emms
shlb
push
or
sbb
outsl
fldl
orl
and
lea
mov
cmp
mov
and
xlat
sub
imul
inc
sbb
xchg
rolb
and
jmp
add
jg
adc
add
dec
sbb
mov
mov
test
mov
pop
adc
rol
scas
ss
and
call
inc
movb
inc
mov
bound
or
stos
mov
push
push
sbb
push
arpl
enter
sbb
mov
je
xchg
test
outsl
sub
mov
xchg
lods
hlt
or
xchg
ret
flds
call
sbb
adc
pop
fnstsw
fstps
sbb
xchg
inc
and
push
cmp
pop
orl
add
xor
sub
cmp
sete
push
sbb
dec
in
daa
push
push
aam
inc
inc
pusha
cmp
jnp
mov
dec
rolb
loope
pop
dec
add
fildll
stos
les
cmp
and
cli
lret
lock
rclb
inc
or
mov
fsubrs
add
jne
cmpsb
add
aam
fs
les
insb
dec
add
stos
xor
into
mov
cltd
in
mov
fimuls
dec
mov
xor
test
mov
cmp
shr
test
jp
and
mov
pop
mov
pop
cmpsb
sbb
adc
int
and
pop
nop
jp
das
mov
xchg
fsubl
push
lods
lds
cmp
cmc
push
add
jg
mov
jecxz
adc
loope
adc
rcrl
lahf
jmp
and
in
adc
dec
adc
in
and
adc
fistl
and
hlt
je
inc
outsl
inc
loope
sbb
sub
dec
gs
jmp
xor
sbb
adc
mov
pop
cmpsb
test
adc
or
popa
das
adc
movsl
push
mov
repz
lods
push
leave
mov
out
and
fisttpll
ret
and
ret
rorb
adc
and
mov
xchg
adc
and
in
jmp
in
clc
dec
fmull
xor
ja
mov
adc
xchg
adc
shlb
inc
adc
or
hlt
jno
mov
xor
fmull
cltd
test
insb
adc
cld
mov
adc
orl
test
and
imul
imul
ret
bound
sbb
xor
inc
add
and
lock
cltd
and
adc
cltd
or
adc
adc
sarb
dec
dec
or
mov
rorb
mov
or
adc
cmp
adc
push
enter
pushf
add
adc
xor
adc
sbb
enter
sbb
fdivrs
inc
je
rolb
and
or
mov
add
add
les
shlb
fdivs
and
and
sub
cld
test
mov
sub
xor
test
mov
mov
mov
cmpsb
pusha
inc
cwtl
call
xchg
je
push
xor
jo
add
pop
jmp
cmp
dec
push
mov
sub
mov
cmp
leave
sub
mov
adc
fstps
adc
les
mov
adc
dec
and
dec
cmpl
jle
inc
sub
mov
test
aas
push
sub
xchg
or
test
inc
test
xchg
movsb
scas
or
enter
or
nop
test
jmp
out
pop
inc
aam
inc
jecxz
cmp
rclb
sub
add
repz
cmp
or
subl
ljmp
out
enter
cmpb
inc
popa
mov
test
xor
adc
dec
jae
ja
out
or
js
add
lods
repz
mov
lahf
movsb
or
push
pop
push
jge
bnd
add
data16
pop
scas
or
mov
out
movsl
lods
adc
xor
mov
or
inc
adc
push
mov
mov
cltd
lret
mov
push
je
aaa
addr16
adc
xrelease
pop
pusha
sbb
adc
mov
hlt
cs
inc
sahf
fisubrl
inc
sub
cli
xchg
mov
pop
loop
cmc
sbb
insl
aam
sarb
sbb
ret
sbb
sub
leave
out
in
test
cmp
out
xchg
mov
sbb
mov
mov
jg
les
clc
adc
loop
mov
inc
xor
sbb
adc
add
outsl
mov
je
push
gs
mov
test
loopne
movsl
jo
mov
push
cmpsl
je
sbb
clc
gs
pop
mov
test
adc
fwait
mov
push
and
clc
fmull
jmp
cld
pop
repnz
test
mov
mov
adc
repnz
jl
rorb
add
bound
ret
int3
sbb
call
out
mov
js
adc
in
add
test
fld
sub
hlt
dec
mov
push
and
pushf
push
and
inc
lods
mov
les
mov
jno
push
jnp
adc
loop
sbb
fmull
in
inc
fsubs
xor
in
loop
sbb
loopne
or
pop
push
sti
mov
sbb
sbb
cmp
in
sub
lods
inc
sub
testb
lock
push
rclb
dec
push
and
mov
mov
fs
insb
sbb
cld
js
pop
cli
add
jne
call
xor
push
jns
jo
xchg
unpcklps
stos
sbb
outsl
push
je
inc
jno
xchg
push
jne
xlat
stos
adc
inc
or
adc
sahf
outsl
popa
mov
or
scas
adc
pop
outsl
mov
or
ds
outsl
push
push
je
test
cmp
inc
mulb
adc
ds
rcr
push
and
inc
jae
or
adc
cmp
mov
push
and
and
call
dec
mov
or
sar
test
jmp
push
or
arpl
test
or
jnp
inc
mov
rcrb
sbb
sti
jmp
loopne
xchg
cld
stos
mov
pop
inc
add
dec
xor
adc
push
cld
xor
pop
test
mov
int3
sub
add
xchg
and
adc
or
adc
or
and
push
nop
lods
lret
sbb
mov
sub
adc
push
into
jae
rorl
and
jnp
add
std
lods
int3
das
clc
xchg
push
mov
inc
pop
imul
mov
fs
mov
aad
cld
xor
testb
jle
pop
inc
adc
clc
push
inc
mov
inc
aad
dec
data16
testb
inc
out
fs
adc
sbb
jle
inc
sub
mov
sbb
leave
gs
sub
pop
fs
sbb
jns
out
imul
mov
enter
inc
fbld
jae
sbb
adc
mov
adc
add
pop
fs
in
cmp
int3
mov
loop
shrl
sbb
jle
inc
xor
pop
cld
jo
arpl
fs
adc
jo
arpl
in
jnp
and
mov
cld
push
push
sbb
jne
in
jb
xchg
mov
or
inc
jmp
popa
inc
dec
sub
sub
push
cmp
or
in
mov
pop
push
call
pop
sbb
pop
hlt
xchg
test
dec
add
add
add
push
mov
sti
rcrb
cmp
mov
in
loopne
dec
xchg
jge
adc
lods
out
adc
mov
inc
lock
add
sbb
add
insb
les
call
fsubrs
decb
pop
mov
bound
enter
sub
and
inc
clc
mov
fadds
adc
jmp
push
test
call
add
dec
sub
push
sub
clc
idiv
insb
mov
add
xor
or
dec
je
dec
push
cmove
push
mov
call
sbb
pop
add
sub
and
div
xchg
adc
mov
mov
sbb
cld
out
scas
xor
clc
mov
mov
xor
in
shrl
int3
mov
ret
test
dec
es
cld
rorb
mov
adc
push
loopne
out
test
cmp
adc
mov
mov
sub
and
int3
cmp
jmp
push
repnz
xor
int3
mov
aam
mov
push
adcb
fcoms
fsubrl
rol
jne
bound
clc
xchg
aas
pop
loop
fstps
loopne
or
cmpsb
lret
fidivrs
movsl
cli
sbb
jg
sub
xor
dec
jmp
sahf
lea
adcl
or
ret
call
test
testl
jge
outsb
or
aad
mov
adc
inc
call
xor
push
and
ret
cwtl
and
test
rorb
and
shlb
xor
into
insb
adc
pop
mov
xor
in
pop
fsubl
decb
filds
out
mov
sbb
shrl
sub
cmp
lcall
or
lahf
ret
rclb
add
inc
jge
mov
hlt
or
test
mov
fldcw
cmpb
cmp
and
jg
ja
dec
shr
ja
ja
push
mov
push
dec
call
pop
testl
and
mov
adc
testb
and
in
testb
das
rcll
push
mov
hlt
fs
cmp
test
and
lret
xor
xchg
and
and
adc
pcmpgtb
popf
push
pop
clc
popl
jl
inc
xor
lea
cmp
and
mov
add
sbb
cmp
mov
lea
test
xchg
das
cmpsb
and
arpl
adcl
inc
and
jae
mov
inc
mov
jbe
sbb
and
stos
fnstenv
movsl
or
rorb
lcall
pop
dec
inc
sub
stos
je
adc
ja
aaa
jb
pop
in
insb
jl
xchg
imul
add
push
ret
out
jne
sub
int3
cmpsl
ficomps
sbb
lock
or
jmp
sbb
jne
xor
push
jmp
sub
mov
lcall
cli
and
jmp
scas
and
xchg
push
add
add
and
cmp
jmp
pop
mov
je
sbb
pushf
daa
fwait
dec
jl
scas
mov
nop
push
xor
clc
iret
inc
mov
cld
jg
enter
xchg
fisubl
testb
xchg
dec
add
or
fs
and
inc
sbb
push
lods
and
add
or
and
jns
or
or
mov
outsb
subl
or
pop
cmpsl
jae
daa
es
jbe
xchg
cltd
subl
inc
mov
ss
test
inc
and
popa
pusha
push
xor
enter
xor
call
lahf
sbb
and
adc
incb
xor
mov
cli
inc
je
stos
bound
cld
adc
into
arpl
les
or
push
push
push
cmp
jmp
adc
leave
or
or
pop
and
or
fs
fsubr
sub
sub
mov
scas
xchg
cmp
inc
adc
pop
adc
inc
insb
xor
jmp
leave
and
or
push
test
sbb
popa
sub
or
jnp
pop
mov
repz
movsb
scas
sbb
push
push
and
sbb
std
mov
inc
roll
push
cmp
mov
daa
lock
jb
lods
es
sub
inc
push
nop
movsl
push
and
add
sbb
add
and
mov
push
push
push
adc
push
pop
stc
sbb
scas
je
repz
sahf
pop
movsl
and
cld
cs
mov
dec
pop
movsl
or
out
mov
inc
dec
mov
fcomps
mov
bound
sysenter
and
inc
xlat
push
call
orb
sbb
lret
jg
icebp
jne
push
jb
mov
xor
xlat
xor
mov
inc
lcall
adc
xor
pop
sub
xchg
enter
push
cmp
and
mov
iret
sub
mov
mov
or
adc
push
sub
push
icebp
push
push
sbb
push
and
int3
jmp
cmpsb
inc
adc
mov
inc
lret
movsb
pop
add
cmp
jne
xor
cmp
jne
sub
cmp
test
popf
push
xchg
dec
shll
sub
adc
adc
xchg
dec
and
jbe
mov
inc
pop
adc
je
in
sub
pop
imul
push
mov
adc
and
push
cmp
cmp
or
cmpb
adc
rcl
dec
imul
or
or
jmp
test
sbb
mov
inc
inc
cwtl
sub
or
and
add
cld
fcos
mov
and
inc
ret
adc
fisttpll
xor
cmp
into
push
sub
xor
mov
dec
push
pop
push
add
test
sbb
jecxz
cmp
push
iret
mov
or
jp
and
push
nop
mov
in
and
call
add
sub
and
repz
cmp
aas
add
cs
lds
je
dec
js
nop
sbb
cmpsl
and
cmp
xor
inc
add
test
mov
push
push
mov
push
push
dec
in
outsl
mov
mov
mov
or
jg
add
jg
sub
xor
clc
jle
jo
cld
pop
mov
popf
es
mov
sub
clc
xchg
lcall
test
lods
cmpsl
rcr
std
ja
and
adc
push
add
adc
mov
data16
push
pop
sahf
popa
iret
jne
mov
dec
sahf
icebp
sbb
xchg
imul
xchg
lret
insl
xor
mov
mov
xlat
cltd
xor
hlt
mov
mov
imul
sti
leave
enter
mov
fld
mov
sbb
pop
or
add
add
std
icebp
add
mul
mov
popa
sbb
stos
xchg
xor
shlb
mov
xor
push
or
adc
sub
adc
ja
cwtl
mov
test
sbb
adc
add
mov
xchg
or
and
inc
sti
sub
leave
dec
mov
or
lds
orb
inc
or
and
mov
push
sar
cmp
dec
pop
ret
jge
jle
pop
fisttpll
mov
fdivs
sti
push
call
mov
and
or
fwait
push
xor
and
call
bound
push
movsb
lcall
mov
mov
rcr
add
push
or
add
and
dec
clc
and
mov
add
jmp
sbb
or
add
and
dec
jnp
sahf
inc
and
scas
sbb
cmp
add
cltd
sub
or
adc
and
sbb
ror
inc
and
out
aad
mov
dec
mov
jo
sub
pop
xchg
dec
and
rolb
cmp
inc
mov
jmp
push
enter
sub
or
push
add
xchg
test
jmp
mov
add
sbb
and
inc
divl
or
jmp
mov
or
xchg
push
call
jmp
pushf
xor
inc
sbb
popf
pop
and
addl
jle
mov
mov
andb
mov
sub
cs
pop
dec
pop
jge
repnz
leave
xor
testl
jecxz
xor
mov
inc
xchg
jns
leave
fs
or
jmp
test
mov
movb
mov
cmp
pop
mov
je
sub
sbbl
mov
and
ret
jmp
repnz
imul
adc
mov
les
and
add
add
gs
add
sub
pop
and
dec
outsl
xchg
js
lret
push
sub
add
xchg
dec
shlb
les
sbb
mov
in
mov
addb
adc
and
sub
hlt
and
sbb
xchg
std
addl
xor
dec
push
xchg
pop
inc
aam
cmpsl
out
xchg
adc
fmull
bound
test
xchg
pop
jbe
and
adc
repnz
push
push
push
sbb
fs
or
jle
dec
adc
insb
adc
inc
shlb
in
push
insb
adc
adc
inc
or
sbb
xchg
adc
inc
cmc
psubsb
adc
inc
pop
call
test
sbb
das
xadd
sbb
cltd
xchg
push
or
sub
sub
adc
mov
ja
cs
aaa
enter
adc
rcrb
sbb
aam
dec
xchg
mov
test
pop
pop
jecxz
push
jp
in
xchg
push
hlt
int3
test
hlt
jmp
adc
clc
mov
mov
call
pop
hlt
push
inc
mov
cltd
mov
jmp
push
or
or
rolb
pop
iret
loope
or
xor
rcrb
mov
inc
sub
ja
cld
popf
rol
jecxz
push
xchg
dec
in
jae
shr
loope
push
stc
cmp
pop
popf
sbb
scas
movsb
popf
fldcw
arpl
lods
dec
add
mov
insb
lock
ja
sub
fucomip
sub
lea
jno
or
sbb
gs
imul
stc
push
std
bound
fld
dec
jns
imul
and
lret
sbb
inc
pop
mov
or
inc
in
add
sbb
call
sti
adc
inc
rolb
adc
add
xchg
andl
inc
stos
mov
cwtl
jge
test
jmp
adc
and
pop
rcrl
and
nop
lock
adc
xlat
adc
popf
ficomps
push
and
fcmovbe
enter
call
push
adc
sub
mov
test
into
je
lods
push
data16
or
or
xchg
push
jne
test
sub
mov
les
adc
push
inc
test
pop
and
and
scas
sbb
enter
lock
sub
cmp
ds
and
push
or
movsl
adc
mov
push
mov
push
ljmp
mov
jl
fisttps
repnz
xchg
xor
inc
adc
rcll
jmp
lret
adc
fisttpll
in
jb
inc
testl
jmp
daa
icebp
test
sbb
mov
mov
and
enter
jo
mov
pop
jmp
mov
fdivr
loop
and
pop
inc
test
sarb
cmp
mov
pop
pop
jmp
inc
lock
xchg
mov
push
cs
pop
push
rcrb
out
adc
adc
out
les
and
lock
pop
pop
inc
or
xor
aam
and
mov
mov
movsb
and
out
cmp
sub
pop
xchg
and
test
jnp
inc
mov
aas
mov
test
in
lods
xlat
lcall
jp
sbb
ja
xchg
movsb
mov
dec
lock
lea
movsl
adc
mov
adc
dec
loopne
jmp
xchg
pop
mov
jl
xor
push
push
or
lock
and
inc
and
imul
out
push
add
mov
sbb
adc
call
das
mov
adc
cld
stos
jmp
push
repz
jb
popl
cwtl
xchg
pop
dec
cs
test
in
adcl
add
xor
add
dec
dec
xchg
jge
xchg
inc
stos
sbb
mov
inc
or
add
int3
sub
or
mov
adc
sub
mov
lcall
popa
jnp
cs
cli
sub
sbb
lret
mov
mov
pop
pop
dec
mov
push
push
scas
lahf
adc
or
js
mov
mov
mov
out
pop
stos
mov
scas
std
cli
and
xchg
sbb
out
mov
cwtl
mov
sbb
testl
sub
xchg
cli
ret
mov
cmp
jmp
ds
mov
sub
jl
add
jp
fwait
jmp
or
add
pop
sub
or
stc
pop
or
inc
lret
mov
nop
popa
in
pop
cmp
unpcklps
ja
mov
call
mov
or
inc
in
xor
adcl
xchg
call
push
xchg
adc
pop
enter
lcall
sbb
ret
xchg
fisubl
in
inc
adc
lods
mov
adc
add
and
dec
pusha
xchg
jne
xchg
stc
movaps
add
jl
cmpsb
sbb
and
fbld
outsb
adc
or
fnsetpm(287
fnstcw
sbbl
add
imul
lods
and
dec
inc
sbb
and
imul
movsbl
dec
sub
adc
mov
inc
fildll
sbb
cmp
mov
inc
pushf
adc
inc
mov
xor
je
inc
push
adc
add
popa
sbb
or
mov
lahf
inc
mov
movsl
and
xlat
sub
test
out
sub
adc
and
dec
inc
lods
in
jno
fisttpl
and
imul
push
push
and
fildll
pop
mov
sub
sti
push
inc
mov
adc
adc
cmp
imul
les
xor
jmp
movsb
rorl
and
mov
repnz
sbb
outsl
mulb
xor
adc
push
add
jno
aas
aam
fildl
shrl
inc
or
adc
div
mov
es
ror
add
add
or
push
in
bswap
js
push
inc
mov
loope
repz
sub
insb
lcall
and
mov
pand
movsb
and
jno
hlt
fildl
push
and
mov
shr
js
xchg
loop
adc
pusha
sub
xchg
pop
lock
pop
xchg
dec
mov
inc
or
xchg
ja
adc
fstps
sbb
inc
mov
add
and
lods
jbe
pop
jg
mov
call
sbb
mov
push
jmp
test
pop
mov
mov
sbb
push
test
pop
pop
rolb
imul
jae
adc
mov
xor
cmp
jecxz
pop
movsl
xor
subb
ret
xor
adc
and
jmp
lock
fsubrl
push
jbe
dec
sbb
cmp
inc
pop
imul
stos
xor
shll
std
mov
jns
or
adc
xor
xlat
fnstsw
lcall
xchg
outsl
enter
orl
es
js
ds
and
inc
or
or
cltd
jo
stc
dec
adc
test
and
adc
sub
mov
sub
dec
pop
das
jo
lds
out
nop
in
or
dec
jnp
ret
xchg
push
rcrb
and
and
lds
pop
and
sub
lds
test
lds
xor
pop
pop
call
hlt
scas
and
outsb
int3
dec
sub
lret
and
dec
fs
inc
pop
mov
andb
sbb
or
enter
and
movaps
xchg
or
add
and
jle
mov
lds
imul
lahf
movsb
mov
loope
sub
xchg
pop
enter
jns
cmp
mov
sub
lods
sahf
aas
js
lret
dec
xor
bnd
hlt
cs
loop
xor
pop
xchg
das
cmpsb
andl
dec
movsb
mov
pop
adc
adc
stc
mov
jmp
and
and
lret
push
fildll
or
jno
sbb
push
jbe
fildll
xchg
mov
xchg
adc
je
or
inc
fcoms
addr16
les
inc
fistpll
cwtl
inc
or
aad
fildll
jns
sbb
mov
pop
xchg
or
mov
mov
mov
adc
sbb
sbb
add
and
dec
inc
xchg
popa
and
cs
push
movsb
cs
mov
movsl
jbe
jecxz
adc
or
inc
repz
jp
pop
in
je
and
stos
sub
pop
test
insl
pop
xor
nop
adc
imul
mov
movsl
repnz
xlat
sub
sub
inc
lret
xchg
mov
ret
add
sbb
mov
mov
inc
int
mov
ljmp
and
mov
ret
jb
scas
sub
je
mov
fidivs
sbb
test
jmp
push
fnstenv
pop
mov
jmp
xchg
fisttpl
and
lock
sub
sub
mov
mov
mov
xor
mov
mov
les
dec
jg
hlt
decl
mov
and
cmp
rclb
sub
rorl
popa
mov
mov
push
mov
clc
and
pop
cld
in
dec
adcb
cmp
je
and
hlt
out
in
aaa
mov
jp
jnp
popa
test
cmp
mov
xlat
pusha
mov
xchg
dec
lea
sbb
or
or
xor
cmpsl
and
adc
outsl
or
test
stc
adc
in
adc
nop
mov
lds
inc
ljmp
sahf
mov
nop
cmp
cmp
sbb
xor
test
jb
mov
push
rcll
sahf
jg
dec
shrl
add
add
adc
or
push
mov
xchg
aad
pushf
push
out
jb
mov
xchg
mov
inc
sti
xorb
je
push
test
cmp
and
mov
xor
hlt
aad
and
or
jp
cwtl
andl
shlb
mov
jle
xlat
inc
or
roll
add
fldenv
cmp
popa
inc
jl
mov
inc
adc
or
mov
sbb
ljmp
sbb
xchg
mov
mov
iret
rorb
in
iret
aaa
inc
and
je
sub
dec
push
jo
faddl
clc
lcall
out
xor
mov
js
xchg
sub
jmp
fwait
jg
and
lock
push
push
or
sti
mov
hlt
iret
jge
sbb
fbld
push
push
adcl
gs
push
lret
mov
push
mov
dec
push
lods
mov
push
and
sub
data16
or
das
push
fmuls
mov
cld
daa
aam
push
sbb
mov
rolb
cmp
in
test
xor
push
inc
mov
inc
push
mov
je
enter
cmp
addr16
xchg
out
fisubrs
sub
mov
xor
and
add
in
insl
inc
add
dec
add
int3
sbb
or
mov
pop
inc
jle
and
enter
add
lods
sub
out
add
and
or
mov
and
sbb
lahf
adc
mov
lds
xchg
mov
and
xchg
es
push
adc
jmp
inc
aam
lahf
test
call
movsb
addr16
mov
inc
iret
jle
jmp
pushf
lds
cwtl
xor
aaa
sbb
dec
push
mov
cmp
nop
cmpsb
sbb
or
dec
push
shl
ds
aam
test
pop
dec
push
or
adc
mov
mov
daa
mov
movsb
in
cmp
add
sbb
xchg
stc
push
dec
mov
sub
push
int3
push
xchg
pop
dec
mov
jno
pop
inc
or
gs
aad
xchg
mov
test
mov
insl
call
add
mov
mov
in
repnz
or
stc
inc
clc
loopne
push
sbb
imul
adc
inc
and
xchg
lahf
hlt
pop
push
test
aas
inc
test
or
and
or
mov
cmp
loope
dec
cmp
mov
adcl
inc
movsl
mov
inc
add
and
inc
pop
inc
or
cltd
pop
sbb
adc
adc
jns
xchg
enter
lret
add
cwtl
jp
mov
lahf
cmp
test
jecxz
lcall
xchg
sub
cmp
pop
sub
cmp
pop
sub
cmp
pop
sub
cmp
sbb
cmc
les
jo
adc
sbb
inc
sbb
es
fdivrl
mov
in
pop
xchg
fmull
mov
inc
sbb
aam
les
and
movsl
xchg
sbb
sarb
call
cmp
jmp
cmp
sbb
je
filds
jp
mov
popf
sbb
lahf
jmp
test
cmp
inc
or
add
fstpl
cli
or
dec
add
dec
pop
xchg
jnp
lcall
je
add
xor
in
add
sbb
or
bound
js
mov
lahf
adc
sbb
mov
pop
and
fstpl
dec
cmp
mov
fisubs
dec
cmp
sub
sub
jno
cmp
jmp
imul
imul
imul
sbb
cwtl
js
and
in
cmp
icebp
ret
cmp
nop
cltd
dec
outsl
push
rclb
cmp
es
adc
aaa
mov
jne
add
and
mov
xchg
aam
loop
leave
test
sub
les
dec
sub
mov
das
xchg
dec
sti
xor
push
iret
pop
or
daa
ret
and
pop
push
sahf
fadds
dec
cmp
leave
inc
lahf
add
xor
dec
out
or
shll
fisttpll
into
push
out
aas
punpcklbw
sub
mov
jmp
dec
aaa
pop
mov
jns
js
jnp
xor
pop
pop
pop
mov
inc
outsb
and
dec
aas
stos
and
ds
mov
not
scas
les
cmp
rol
dec
inc
addb
push
test
or
inc
int
dec
mov
mov
add
pop
ret
adc
icebp
inc
xorb
inc
xchg
cltd
push
insl
mov
dec
enter
lods
mov
dec
pop
inc
or
add
jl
push
xchg
je
inc
testw
mov
mov
xchg
pusha
add
cmp
adc
push
xchg
lock
pop
jmp
pop
data16
mov
pop
pop
jnp
mov
add
sbb
stos
mov
addr16
jae
cld
clc
jb
inc
mov
inc
out
add
inc
pop
xchg
mov
jns
sbb
adc
sbb
adc
sbb
add
and
and
mov
jmp
xchg
imul
or
pushf
gs
jge
enter
pop
inc
dec
addr16
add
dec
sub
push
pop
inc
test
or
sar
lahf
jb
cmp
jbe
int
ret
fnsave
fwait
cmc
out
mov
pop
hlt
push
fistpll
mov
inc
adc
adc
in
or
add
jmp
mov
sub
test
xor
jns
push
push
gs
cmp
mov
adc
leave
pop
push
test
test
jns
mov
jecxz
and
sti
adc
adc
push
test
jne,pt
xchg
mov
jle
in
idivl
cmpsb
loop
rorb
pop
jle
into
mov
shlb
or
jmp
push
add
xchg
cmp
shll
jbe
js
lret
out
cmp
iret
adc
fisttpl
pop
mov
dec
or
lea
cmpsl
push
xor
cmp
xchg
or
cli
or
lcall
dec
or
mov
adc
mov
push
add
je
jae
jae
rcll
jb
jmp
add
cmp
or
lret
jmp
cmp
ret
test
mov
adc
push
inc
subb
mov
pop
push
push
jnp
mov
lea
jmp
inc
mov
das
in
pop
jnp
test
sbb
enter
adc
inc
sub
and
sbb
push
xchg
sbb
push
inc
lret
stc
or
leave
push
int
testb
shl
xchg
mov
fdivl
scas
shr
inc
xchg
mov
jne
pop
mov
mov
lret
addl
jle
cmp
mov
fdivr
or
push
adc
sub
gs
cmp
fildll
push
or
fcompp
sbb
push
adc
pop
jae
sub
lods
push
ret
rolb
and
xchg
ret
clc
and
or
adc
testl
imul
push
addr16
leave
jne
sub
fsubrp
out
lock
xchg
mov
inc
sub
inc
and
sub
test
ret
pop
leave
push
lret
imul
and
mov
adc
xchg
jge
test
mov
inc
mov
adc
pop
and
dec
mov
movsl
sub
push
inc
dec
dec
cmp
fisttps
mov
adc
jnp
data16
mov
or
ljmp
cmpsb
or
xchg
scas
cmp
cmpsl
push
sub
bound
xor
cli
sbb
outsl
jnp
loop
push
dec
mov
push
out
xchg
push
and
out
inc
ret
or
fstpl
popa
mov
adc
sub
ficoms
ljmp
mov
mov
testl
stos
and
out
push
cmpl
hlt
mov
mov
das
xor
daa
pusha
in
xchg
jecxz
jbe
dec
add
inc
sbb
das
std
or
cwtl
mov
jmp
push
sub
xor
inc
setnp
cmp
je
jnp
fmul
in
lret
push
movsb
adcl
and
pop
mov
cwtl
lcall
cld
xlat
and
es
cmp
mov
adc
in
or
xor
aam
inc
and
sahf
filds
mov
test
and
mov
jno
xchg
pusha
cld
movsl
mov
popf
dec
ret
xor
insb
or
scas
mov
push
jg
push
int
clc
mov
lods
jecxz
adc
mov
enter
jbe
dec
xchg
inc
lock
jg
lods
dec
mov
mov
inc
je
ja
les
cmp
repnz
lea
adc
pop
dec
lds
test
mov
jae
mov
jmp
mov
aaa
in
out
xchg
mov
shlb
jg
imul
movsl
jnp
cmpsl
mov
bound
jle
arpl
cli
push
fistpll
imul
mov
cmp
enter
or
dec
sub
push
cmp
aaa
inc
jmp
inc
inc
adc
inc
and
shlb
adc
out
inc
nop
pop
fsub
mov
imul
or
xchg
hlt
popf
dec
pop
adc
mov
jns
daa
pop
lcall
insl
jo
jns
add
cmc
cs
adc
enter
insl
popa
and
mov
cmpsl
pop
dec
mov
inc
insb
jo
scas
adc
inc
outsl
jne
push
pop
inc
inc
divl
in
arpl
daa
test
xor
dec
cmpsl
mov
mov
enter
nop
mov
jmp
sub
adc
jmp
pop
jae
push
jecxz
icebp
outsl
ja
push
or
imul
and
push
inc
call
mov
into
mov
and
enter
inc
fs
dec
outsl
adc
adc
add
adc
test
mov
popf
out
fstpl
adc
sbb
and
clc
mov
dec
mov
adc
or
shrl
jmp
lea
je
cli
pop
shr
mov
ja
mov
dec
cli
xor
push
adc
roll
mov
cmpsl
gs
xchg
adc
in
iret
xchg
sub
mov
nop
and
inc
mov
les
adc
push
and
cmp
test
in
lock
xchg
and
adc
inc
enter
std
pop
les
dec
and
sub
hlt
mov
push
cmp
pop
inc
and
pop
inc
cmc
jns
sub
sti
and
and
sub
enter
pop
add
ss
je
stc
cwtl
leave
pop
bound
or
xchg
add
pop
pop
adc
cmp
cltd
sbb
inc
pop
sar
or
push
or
stc
mov
movsl
jmp
and
aam
jno
push
pop
dec
mov
das
push
les
inc
jbe
push
ja
pop
mov
sub
adc
imul
mov
loopne
fs
fisubrs
mov
js
push
sbb
ret
add
inc
cmpb
add
jl
ja
dec
adc
out
push
sarb
or
push
mov
dec
nop
push
sbb
gs
into
in
insl
pop
sub
in
mov
cmp
setne
cmpsb
cli
push
pop
mov
mov
or
adc
lods
push
or
mov
das
inc
dec
test
clc
test
xchg
or
inc
dec
pop
pop
ret
pop
or
cmp
mov
add
xor
jmp
loope
mov
aad
and
sub
or
call
jo
pop
pop
sub
push
mov
test
scas
sub
orl
jl
push
inc
ss
cmp
adc
and
jb
dec
pop
push
dec
test
popa
lret
addr16
comiss
call
sbb
push
aas
in
rclb
ficoms
jg
xchg
into
push
dec
jns
jle
xor
pop
das
ljmp
icebp
mov
jbe
or
je
js
test
adc
mov
clc
inc
rcrl
cld
call
out
and
mov
data16
fdivrl
push
mov
or
dec
movsb
xchg
pop
inc
adc
repz
lds
subl
std
adc
mov
les
pop
pop
jg
mov
fldcw
mov
jg
shl
push
int
or
test
dec
rolb
mov
lahf
das
cld
fdivl
jo
pop
xchg
jp
mov
out
mov
jp
mov
or
call
fmuls
mov
dec
loop
bswap
or
shll
mov
test
and
lcall
pop
stos
popa
in
ljmp
stc
pop
rorb
stos
lods
les
cmpl
sub
std
jb
sbb
ud0
jbe
sbb
cmp
jns
add
repz
and
push
adc
adc
ret
dec
cmp
test
mov
push
cmpl
or
gs
xchg
jno
dec
pusha
fisttpl
clc
pushf
mov
jb
dec
push
dec
adc
jl
sub
jne
test
or
mov
inc
xor
lods
mov
add
sbb
lea
int
adc
dec
aaa
stos
mov
mov
mov
xor
push
inc
dec
jne
mov
les
cmp
and
xchg
fmull
dec
hlt
aas
dec
adc
xor
enter
and
leave
jne
int3
popa
mov
jo
test
adc
lods
push
clc
mov
xor
mov
cmp
xchg
fmull
lret
aam
pop
sbb
bound
add
dec
cmp
std
mov
pop
inc
in
add
cld
add
enter
and
pushf
inc
or
cmpl
pop
or
mov
and
or
inc
cmp
enter
test
jecxz
stos
and
xor
xlat
add
call
xchg
enter
jb
cmp
xchg
and
in
jb
cmp
lahf
and
in
jb
cmp
xchg
mov
mov
cmp
and
jno
jb
in
add
arpl
inc
inc
fadd
les
and
sbb
pop
mov
mov
lods
push
push
jb
jo
test
scas
divl
lret
xchg
xchg
hlt
mov
rorl
stos
loop
adc
or
mov
fbstp
bound
or
adc
inc
inc
and
sbb
mov
and
sub
outsl
pop
insb
cmp
add
and
push
test
mov
xchg
mov
pop
lahf
pop
out
sbb
std
gs
aam
pop
sbb
push
jp
xlat
lahf
inc
cltd
mov
test
pop
mov
ds
mov
fmull
xchg
lea
std
in
xor
ficoml
popa
insb
cmpb
dec
push
dec
loop
adc
imul
or
xor
mov
mov
repnz
setne
movsl
loop
loopne
pusha
inc
movsb
pop
lods
mov
or
xor
imul
sbb
jo
or
sti
add
inc
add
dec
xchg
inc
hlt
pop
jp
cmc
ds
mov
inc
data16
rorl
out
dec
out
ret
add
sbb
lea
cli
jl
pop
gs
push
mov
pop
movups
xor
test
loope
dec
cld
icebp
jmp
push
xor
add
add
clc
jle
jo
mov
jl
cmpb
cli
addr16
mov
add
xor
jne
lock
loope
movsb
mov
enter
add
inc
outsl
sub
sbb
dec
pop
adcb
daa
add
mov
or
pushf
cwtl
sub
push
xor
cmc
pop
push
mov
or
or
add
mov
mov
pop
sbb
jmp
mov
dec
add
sbb
mov
rorb
xchg
jp
outsl
loop
test
out
sbb
test
push
out
imul
sbb
pop
test
test
xchg
pusha
addr16
hlt
adc
mov
pop
mov
es
scas
push
xchg
push
and
rolb
xchg
dec
push
xlat
test
xchg
dec
push
or
stos
cld
dec
stos
mov
inc
addb
sbb
sbb
mov
andl
mov
sub
sbb
jmp
xchg
ss
lahf
nop
inc
dec
or
test
cmpb
clc
push
adc
or
mov
in
inc
jle
mov
mov
lea
aas
sbb
pop
je
scas
lods
xor
enter
mov
jp
pop
or
ja
jmp
jle
sbb
add
rorl
inc
cmp
push
add
adc
jae
mov
scas
push
js
ds
movsb
outsb
pop
mov
cs
call
mov
out
ds
cwtl
sbb
push
add
andl
mov
hlt
ja
lock
or
or
jb
xor
add
call
adcl
mov
ss
xchg
jnp
mov
add
pop
fs
mov
das
mov
imul
test
cmp
cmp
pop
aam
dec
xor
or
clc
dec
loopne
pop
into
and
rorb
cmp
mov
xor
mov
int3
call
xchg
nop
repz
cmp
xchg
imul
sbb
int3
jo
mov
pop
dec
aaa
sahf
mov
pop
add
outsl
call
insl
sub
rol
push
add
adc
xchg
add
mov
call
push
addb
rorl
xchg
cmp
shrb
out
test
cltd
mov
lcall
xor
rcrb
sub
xlat
and
jecxz
sbb
bound
das
imul
push
pop
push
sub
push
or
rorl
or
dec
je
add
sbb
push
mov
add
orl
sbb
sbb
loop
add
adc
adc
push
mov
xor
fistl
mov
dec
sti
loop
ret
inc
adc
cmp
or
enter
pop
stos
lret
cmp
and
pop
xchg
mov
out
jmp
sub
insl
push
shr
leave
loopne
mov
jne
nop
sbb
or
adc
int3
mov
cmp
repz
and
flds
jmp
mov
insb
mov
out
or
xor
mov
dec
adc
or
sbbl
push
pop
notb
hlt
jge
add
cmp
mov
insl
dec
call
or
jmp
push
mov
mov
xor
jae
jmp
pop
or
ds
sub
jecxz
cmp
lret
cmp
pop
int3
adc
xor
iret
scas
test
sub
dec
icebp
pop
pop
or
inc
leave
loop
jno
addl
test
lsl
pop
out
fcomps
cmpsb
cmp
ja
popa
mov
mov
mov
and
inc
flds
ljmp
pop
fisttpll
dec
fisttps
push
xchg
adc
aaa
adc
mov
cs
fcomps
xor
push
jo
sub
sub
pusha
dec
cwtl
inc
or
mov
add
add
rclb
out
add
push
inc
adc
or
scas
and
inc
sub
adc
sub
orb
add
or
push
dec
sbb
xor
divps
ljmp
push
mov
jnp
sub
inc
sbb
xchg
cltd
mov
or
adc
and
outsl
add
inc
fldt
fstps
nop
adc
pop
fucomp
pop
sbb
inc
pop
mov
lods
and
fistpll
cs
insb
jo
movsb
adc
mov
add
add
fcoml
mov
and
jge
out
xchg
lret
and
mov
jo
int3
dec
lcall
imul
sbb
cld
dec
call
push
outsl
int
pop
sub
fs
adc
out
add
or
mov
xchg
adc
dec
nop
test
push
cmp
mov
dec
cwtl
jnp
xchg
fneni(8087
and
add
cld
lea
and
dec
xchg
and
pop
add
pop
jo
add
sub
adc
bound
mov
test
pop
test
ret
and
sub
fs
loopne
dec
pop
inc
add
jno
add
xor
cmp
aaa
inc
ss
adc
sbb
mov
mov
dec
out
or
jb
inc
je
add
jg
xchg
pushf
movsb
dec
pop
xor
ja
aad
xchg
pop
sub
xor
add
mov
pop
push
pop
push
outsl
das
sbbl
mov
adc
je
add
mov
sub
mov
pop
aam
xor
mov
mov
icebp
stos
mov
jge
xchg
jge
pop
xor
jb
sbb
push
mov
test
push
or
push
into
aad
xor
mov
sbbb
jae
dec
inc
pop
mov
dec
pusha
ljmp
push
and
dec
fcomps
xor
push
or
je
addr16
pop
inc
cwtl
push
dec
dec
adc
and
bound
jne
push
mov
or
hlt
call
leave
push
push
insl
mov
test
cmp
roll
enter
dec
mov
push
aam
imul
data16
test
lret
rolb
gs
dec
jne
xchg
imul
dec
push
inc
jae
cmp
mov
out
jge
rcrb
in
mov
scas
repnz
and
or
push
outsl
push
inc
sbb
adc
dec
test
cmc
out
loope
outsl
push
je
gs
jns
outsl
or
xchg
jo
add
xor
push
xchg
nop
xor
cmp
inc
lahf
cmpsb
add
push
or
in
jb
inc
cmovbe
adc
adc
adc
call
or
push
not
mov
nop
adc
or
or
dec
gs
inc
outsl
test
cmpsl
out
xlat
enter
push
jne
inc
sbb
jns
mov
push
add
fmull
jns
mov
cmp
insl
push
mov
cmp
stc
into
jge
aad
insb
xor
fmuls
sub
inc
jbe
gs
or
push
push
adc
jge
push
lret
notl
leave
mov
out
add
jne
jmp
or
mov
inc
imul
jbe
cmp
mov
jne
lods
adc
inc
inc
imul
aas
xchg
pushf
enter
or
or
clc
mov
xlat
outsb
test
push
ja
pop
dec
inc
dec
adc
or
jb
pop
test
xchg
test
add
scas
push
or
das
dec
push
nop
or
hlt
loopne
xchg
mov
jb
daa
bound
pop
pop
fstps
icebp
push
inc
arpl
dec
lock
lea
testb
aam
push
or
pop
and
adc
out
xchg
push
mov
pop
mov
pop
fs
andb
nop
shrb
adc
inc
adc
jp
adc
jp
and
enter
jo
in
xchg
and
mov
adc
mov
faddp
dec
int
leave
xor
or
mov
out
das
adc
adc
cwtl
mov
or
jnp
sub
mov
aas
and
pusha
cmpsb
fs
sbb
inc
add
enter
and
or
add
enter
scas
adc
test
xchg
and
add
dec
jl
je
adc
or
stos
adc
test
clc
adc
add
inc
stos
cld
rcrb
adc
push
adc
and
mov
inc
jo
add
push
push
fsubrl
pusha
or
adc
sti
lahf
stos
fcomp
sbb
int3
loop
int3
jns
or
jo
jl
inc
fsubrs
leave
in
dec
sbb
add
pop
jge
inc
cmp
jnp
sub
inc
lods
stc
sub
adc
adc
popaw
cwtl
ficoml
out
nop
je
pop
sbb
cmp
jo
lahf
or
nop
in
scas
movsb
mov
jle
push
or
sbb
sub
or
scas
or
clc
mov
add
scas
pop
rorb
lods
xchg
mov
xor
andps
cli
insb
les
mov
adc
mov
xor
pop
vcomiss
test
int3
adc
jg
mov
push
sbb
xchg
xchg
arpl
insb
mov
fisttps
je
sub
adc
repnz
pop
test
adc
adc
xchg
sti
xor
inc
and
or
inc
insb
or
pop
adc
adc
jg
loop
xchg
adc
sbb
pop
jle
aam
add
fmul
and
pop
pop
xchg
push
movsb
nop
nop
inc
subb
sbb
cmpsb
inc
add
mov
and
xor
jo
adcl
cmp
cmpsb
add
scas
cmp
and
outsl
jo
and
in
mov
or
cmp
fs
sub
mov
icebp
loopne
sbb
fs
mov
loop
adc
mov
cld
or
xor
cmpl
sub
or
jl
ret
push
test
and
bound
sbb
adcb
nop
mov
cmp
mov
fcoms
or
and
imul
xchg
adc
call
lcall
mov
or
pushf
daa
and
inc
subb
mov
adc
andb
loope
ret
push
lds
mov
mov
push
xor
and
sbb
in
or
ret
adc
xor
mov
lock
pop
les
in
lds
sbb
or
adc
shlb
data16
xchg
or
mov
daa
push
je
loopne
pop
adc
cmp
mov
faddp
rolb
fdivrl
leave
pop
orb
cwtl
and
test
lret
or
pop
push
xor
test
mov
xor
lock
fmul
or
or
jo
adc
outsb
fs
jnp
and
and
inc
fimull
adc
adc
in
aam
mov
and
mov
out
xor
stos
mov
inc
jl
mov
lods
adc
les
daa
jl
mov
sar
or
jp
add
or
sbb
xor
sub
jl
andps
mov
pushf
in
or
or
in
insb
adc
ss
sbb
and
fsubrl
and
dec
push
xlat
popf
std
ljmp
adc
enter
mov
rolb
push
adc
insl
dec
jnp
mov
xchg
inc
movsl
in
or
pop
gs
xor
adc
mov
xchg
nop
jo
xchg
sbb
insb
cmp
clc
or
or
inc
je
mov
cmp
dec
adcb
push
lock
sbb
stc
add
xchg
inc
or
push
cs
ret
imul
rcl
call
mov
rolb
rcr
sub
jo
push
xchg
sub
xchg
sbb
loopne
adc
cwtl
xor
or
add
std
add
adc
stc
add
enter
push
jp
orb
adcb
icebp
mov
and
adc
les
inc
pop
adc
sbb
stc
call
jp
sbb
inc
inc
push
adc
pop
inc
push
dec
mov
aas
les
inc
inc
cmp
inc
sbb
subb
mov
sbb
out
test
pop
fcomps
je
or
mov
sub
cwtl
mov
ret
pushf
inc
dec
inc
les
stc
jecxz
dec
and
test
shll
ret
xor
imul
arpl
jp
and
inc
sub
pop
and
aam
shlb
cmpsb
xchg
or
mov
adc
and
push
movsb
cmp
loop
in
pop
inc
popl
int
dec
addb
or
out
dec
out
addr16
sbb
call
adc
test
insl
inc
sbbb
or
js
inc
sbb
jl
adc
sbb
cltd
jns
sbb
cs
pusha
inc
jo
int3
cli
pop
adc
add
jp
jl
jle
jle
jle
jg
jle
pop
repnz
icebp
iret
lock
xor
xchg
push
and
adc
sbb
data16
dec
shll
and
inc
sub
leave
and
sbb
push
nop
in
sub
adc
sub
jp
lcall
imul
adc
pop
push
fimuls
decl
add
pop
push
and
add
lahf
and
mov
xor
in
js
ss
dec
enter
sbb
sbb
adc
adc
aam
arpl
sbb
push
in
mov
arpl
imul
jns
imul
pop
fcomps
mov
mov
loopne
aaa
mov
xor
cmp
shlb
mov
xchg
adc
push
sbb
adc
mov
lods
sbb
and
cmpsb
xchg
add
dec
test
dec
fs
mov
popa
jo
mov
jns
dec
add
jno
dec
aad
mov
mov
icebp
bound
xor
push
push
jle
gs
out
jecxz
xchg
mov
fwait
mov
pop
xlat
sbb
cmp
jne
push
clc
add
je
ja
fcoms
jae
cmp
sub
add
add
pop
cmp
xorb
aaa
and
mov
ret
in
and
addr16
jb
sub
mov
pop
mov
and
sub
adc
or
pop
jae
add
xchg
add
jne
mov
jne
mov
xor
test
or
dec
pop
cmp
nop
jle
xchg
in
sub
pop
je
test
inc
or
adc
jmp
xchg
lret
popa
lds
sub
nop
sbbl
xchg
inc
cltd
addb
out
xchg
js
movsb
push
inc
fcomp
leave
cld
jne
xor
xor
jo
adc
push
outsb
nop
adc
add
in
push
sub
decl
mov
and
in
jp
or
inc
bound
push
adcl
mov
fiadds
mov
int
jle
cli
std
inc
add
pop
pushf
and
jle
jns
loope
push
or
cmp
test
lods
imul
movsb
xchg
call
jb
and
and
add
int
inc
arpl
inc
inc
insb
loop
movb
fstl
push
push
adc
mov
dec
cmp
lods
push
cld
ljmp
or
push
pop
or
and
inc
test
push
push
arpl
mov
push
inc
dec
in
rorl
add
pushf
repnz
fadds
cmc
adc
das
dec
and
out
ss
test
xor
enter
dec
or
je
bound
xor
test
aam
jno
lods
in
negl
push
lds
cwtl
add
setge
lods
add
fimull
xchg
adc
cmp
out
fwait
adc
and
inc
inc
push
mov
lcall
and
repnz
or
dec
adcb
std
push
mov
xchg
ret
xor
xor
xor
dec
ffree
enter
fcmovu
pop
xor
stc
aaa
ss
in
inc
push
aad
mov
pop
jmp
jle
add
xor
mov
mov
mov
cltd
pushf
int3
or
in
mov
inc
adc
lea
imul
inc
popf
sbb
push
mov
mov
out
repz
inc
push
lods
push
pop
aaa
daa
out
lds
push
jl
inc
lcall
sub
push
dec
jne
sub
cmp
xor
xor
add
jecxz
and
dec
push
push
pop
xlat
mov
inc
inc
ret
ljmp
sbb
inc
lock
popa
cmpb
xchg
xchg
xchg
iret
cmpsl
frstor
faddp
insl
sub
clc
loop
or
clc
and
mov
jnp
roll
loop
ds
sti
add
cmp
cmp
sub
pop
in
inc
adcb
sub
call
pop
mov
mov
shr
xor
xor
std
clc
sti
and
pop
xchg
sbb
pop
xlat
jp
fbld
adc
inc
cmc
int3
or
inc
cmp
call
rorb
out
cmpb
push
lods
inc
push
pop
inc
lods
sbb
in
lahf
es
jns
cmp
jne
sub
xchg
sub
push
inc
bnd
cmp
sbb
popa
jle
ret
imul
ds
pop
inc
dec
cmp
test
pop
call
mov
test
jb
mov
ficoml
sub
cmp
pop
push
dec
or
iret
test
jmp
adc
or
mov
pop
movsl
and
xor
sub
cmpl
jne
sub
xchg
sub
movsb
xchg
hlt
jge
inc
call
imul
or
lods
push
jmp
test
dec
dec
dec
add
pop
jle
xchg
or
inc
jmp
or
call
jmp
mov
stos
in
or
scas
xor
loopne
shrb
cmpb
je
dec
sub
push
cmpb
inc
test
push
mov
das
push
push
mov
out
adc
and
movsb
pop
push
stc
jnp
add
cmp
cwtl
std
adc
xchg
sub
lods
je
imul
ja
mov
and
fcmovbe
pop
ds
xchg
push
insb
mov
and
mov
mov
int3
jle
inc
cwtl
pushf
xchg
pop
jmp
jg
inc
popa
inc
mov
or
or
jae
mov
cwtl
aas
mov
mov
movsb
lret
push
cltd
test
cmp
sbb
sbb
int
pushf
daa
jbe
mov
dec
idivb
pop
jnp
and
cltd
sub
push
sbb
cmp
mov
je
sbb
xchg
int3
adc
movsb
mov
jbe
push
ror
jo
out
jecxz
jp
dec
jl
dec
ret
adc
cmp
dec
icebp
orl
into
push
or
aam
dec
scas
je
js
fiadds
pop
pop
dec
inc
xchg
in
scas
fsubrs
cmp
pop
adc
test
or
ret
jle
sbb
fcmovu
dec
add
dec
xorl
ss
repz
cli
xchg
dec
xchg
aad
test
in
lcall
ret
and
fwait
cmc
sahf
cwtl
mov
cld
and
mov
or
test
mov
cmp
inc
mov
shrl
fldenv
sub
sbb
adc
aam
xor
mov
enter
or
cld
jne
or
xchg
add
lea
mov
add
fmull
mov
cmpsl
sub
xor
ret
out
xor
jae
and
inc
push
inc
jmp
clc
adc
pop
sbb
out
orl
out
push
pusha
cld
andl
movsl
xchg
mov
mov
mov
or
adc
sbb
pop
and
adc
fadds
adc
jmp
js
xchg
loope
pop
sub
adc
inc
sbb
adc
sti
pop
push
call
mov
fs
test
or
or
data16
xchg
and
popf
mov
and
rcrb
or
mov
test
cs
jb
dec
dec
push
xor
mov
lds
ss
sahf
ljmp
jbe
xor
push
inc
enter
add
jmp
sub
and
cwtl
outsl
lods
sub
sbb
mov
adc
nop
or
sub
and
push
leave
pop
faddl
sub
fisubrs
ret
repz
das
adc
mul
jns
lret
gs
mov
xchg
dec
xor
jne
sbb
add
mov
dec
cld
int
mov
and
lahf
cmpsl
loope
cmp
push
loope
in
jo
lock
popf
adc
sub
popf
dec
inc
xchg
imul
push
dec
mov
dec
and
roll
in
xchg
xchg
jae
stos
mov
fs
push
bound
and
lods
sahf
and
addr16
and
adc
shlb
push
inc
sbb
cmpb
add
push
jg
jl
insl
call
loope
or
mov
mov
fs
popf
add
and
sbb
push
repz
and
leave
fildll
lahf
jge
mov
inc
mov
mov
repnz
dec
adcl
sbb
cmp
enter
clc
xchg
js
mov
mov
xchg
jge
pusha
cld
movsl
push
mov
push
test
mov
movsl
xchg
adc
mov
push
enter
test
xor
sub
iret
scas
add
call
sub
hlt
adc
loope
or
hlt
stos
sub
adc
push
and
or
lock
and
pop
pop
out
push
cmpsb
sbb
push
add
or
mov
and
pop
leave
mov
incl
and
clc
mov
test
mov
xor
out
push
or
mov
lods
mov
imul
add
cmp
mov
lahf
and
xor
sub
das
inc
stos
mov
adc
jae
ja
clc
cs
lcall
mov
push
inc
sub
stc
test
or
sbb
xchg
enter
add
lea
mov
inc
in
ljmp
inc
add
mov
mov
pop
xchg
push
mov
and
jo
sbb
les
jb
popf
push
xchg
mov
nop
mov
adc
push
mov
cs
iret
ret
addr16
imul
or
dec
jb
cmp
out
mov
lods
psadbw
and
addb
jle
ror
leave
jns
in
shrl
push
sub
adc
dec
or
push
add
or
shrl
imul
sub
cmp
jge
dec
pop
add
adc
jne
fstpl
jb
leave
loope
shll
jle
xchg
mov
push
mov
pop
andb
pop
popa
rorb
dec
repnz
pushf
mov
je
imul
xlat
or
imul
xchg
xchg
or
lret
int
fstpl
mov
push
dec
rclb
dec
cs
inc
mov
clc
je
mov
xor
adcb
hlt
scas
mov
add
sbb
mov
dec
sbbl
loopne
cmovge
dec
addb
loopne
dec
sbb
pusha
xchg
stos
sarb
jle
mov
sbb
scas
dec
push
push
mov
mov
pop
shl
aas
jmp
clc
pop
push
filds
sub
jg
dec
rcl
mov
jne
loopne
inc
sbb
les
sarl
mov
movsb
rcrb
int
mov
jg
adc
lea
xor
je
and
jg
out
push
pop
lds
mov
xchg
mov
cmpsl
addr16
cmp
jae
imul
cmpsl
sub
xchg
adcb
add
out
fwait
mov
pop
lea
insb
jne
lea
cmpb
or
cwtl
jne
mov
dec
sub
cmp
adc
cmovae
pop
fs
ret
data16
jno
lret
test
outsl
and
scas
push
sub
dec
adc
subl
cltd
arpl
test
sub
popf
ss
lret
xchg
roll
xchg
aaa
popf
aaa
pusha
ret
aad
dec
add
mov
leave
enter
mov
add
sar
shll
or
negb
dec
push
jge
nop
push
imul
xlat
pop
mov
pop
pop
sar
mov
stos
out
cmp
push
iret
call
out
je
imul
xchg
add
pop
ss
jg
loope
xchg
xchg
out
inc
or
sub
fsts
mov
mov
aad
das
inc
sbb
std
mov
cmp
scas
jle
add
sbb
cmp
xchg
mov
inc
jl
push
push
inc
and
add
pop
jmp
ret
xchg
addl
fisubs
mov
loopne
jnp
pusha
nop
in
mov
dec
inc
mov
not
decl
or
pop
add
adc
je
femms
cmp
aam
pop
add
push
ret
pushf
xlat
jb
xchg
adc
test
mov
jne
xor
jmp
inc
add
jne
inc
decl
in
mov
jno
imul
jp
sub
cmpsb
or
xchg
dec
cmp
mov
sbb
mov
inc
stos
xchg
mov
je
fdivrs
in
adc
stos
inc
xchg
repnz
jle
inc
lock
outsl
cmp
sub
inc
rorb
into
dec
ret
mov
pop
les
mov
imul
mov
push
fstl
cli
test
add
cli
mov
mov
daa
das
fistps
sbb
addps
enter
icebp
cmp
fisubrs
jp
lds
bound
dec
push
out
pushf
sub
cmpb
adcb
and
mov
pop
jmp
arpl
fsubl
or
cmpsl
pop
les
lods
jp
and
push
dec
clc
int3
mov
mov
lahf
mov
fs
sub
and
or
pop
mov
inc
negb
cmp
rcll
lods
mov
out
addr16
daa
pop
sub
push
mov
test
call
jge
and
jmp
fprem
test
lods
xchg
into
shl
das
lret
xchg
inc
push
out
adc
mov
lods
cmp
js
add
inc
rcll
mov
adc
enter
mov
fcmovbe
inc
sbb
mov
or
cmpl
test
jmp
cmpsb
test
sub
push
mov
jle
xchg
xchg
enter
lret
xchg
repz
and
icebp
xor
push
out
das
in
cmp
xor
call
or
push
jge
roll
or
es
dec
rcll
scas
mov
sbb
popf
add
in
lcall
int3
scas
adc
data16
push
and
pop
shl
pop
mov
cmp
lock
cmpsb
adc
cmpsl
push
xor
clc
imul
mov
fsubs
sbb
jno
push
mov
leave
into
add
stos
push
mov
pop
aad
hlt
js
dec
dec
add
aad
mov
dec
aam
lcall
sub
sbb
and
cmpsl
movsb
imul
and
inc
push
lret
push
imul
or
sbb
adc
cmp
or
shll
fs
xor
sub
jno
xor
pop
or
and
loopne
mov
inc
jb
mov
sarb
jg
iret
dec
push
mov
mov
mov
mov
mov
pop
and
mov
pop
mov
mov
outsb
or
scas
xchg
flds
sti
inc
mov
fisubl
sub
mov
daa
jmp
dec
iret
lods
push
int3
dec
pop
pusha
jnp
jg
push
and
testb
mov
jb
jl
or
call
pop
je
adc
leave
out
jecxz
jnp
movsl
push
dec
or
dec
movb
pop
shrb
loopne
aad
icebp
mov
cmp
clc
jno
mov
sbb
std
cmpsl
fldenv
in
jp
mov
cs
das
cmpsb
in
cmc
add
pop
andl
mov
cli
pop
test
and
cmc
fistpl
dec
mov
xor
jno
scas
in
das
push
adc
fwait
jmp
sub
xor
shr
cld
movsb
xchg
cmc
call
mov
mov
aas
sub
jns
test
call
movsl
mov
arpl
jg
stc
jg
pop
ret
ficoms
mov
inc
jmp
andl
aam
aaa
inc
in
mov
cwtl
mov
pop
jne
mov
xorl
cld
inc
adc
push
sbb
jne
inc
sbb
cmp
sbb
cmc
xchg
jl
push
xchg
clc
inc
sti
xchg
and
inc
adc
cmp
out
dec
ljmp
adc
jae
jg
iret
leave
jbe
dec
cltd
enter
and
mov
and
mov
dec
les
lods
rcr
cmp
push
mov
test
rclb
adc
mov
xchg
sub
mov
pop
jmp
cmpsl
ret
sub
or
sbb
je
xor
add
mov
shlb
jmp
push
xor
dec
in
orb
jp
or
xor
jmp
jno
xor
pop
ret
std
daa
lea
adc
xor
ret
jl
inc
mov
insb
iret
jl
sbb
out
mov
mov
jmp
int
shll
sbb
pusha
xchg
pop
sub
stc
cli
fcoms
iret
sub
and
pop
int
es
mov
mov
inc
icebp
mov
loop
push
push
clc
jns
lock
jg
sub
dec
das
push
arpl
mov
daa
negl
enter
mov
push
gs
jmp
pop
pop
stos
mov
dec
mov
lods
test
xor
lock
and
mov
rclb
xchg
add
repz
inc
rcll
inc
adc
mov
add
inc
mov
mov
in
adc
loop
dec
cli
pushf
scas
xor
fs
mov
call
add
scas
mov
test
clc
call
xorb
jmp
adc
jb
mov
pop
sub
mov
push
or
or
jb
mov
or
adc
stos
pop
cli
je
call
cld
ljmp
lods
cmpsl
lret
and
lahf
pop
and
or
stos
pop
movsl
clc
mov
jne
or
pop
xor
jge
push
and
iret
xor
push
mov
call
cltd
shll
adc
cmp
pop
rep
mov
cmpsb
adc
sbb
das
repz
movsb
mov
push
popf
fiaddl
xchg
or
test
xchg
sbbb
adc
mov
pusha
shrl
push
xor
fwait
lea
mov
pop
sahf
push
dec
and
in
lahf
and
xchg
loop
fwait
inc
ljmp
xor
out
fimull
lock
dec
mov
sbb
jg
test
jne
cld
in
mov
pop
dec
push
jnp
sub
iret
out
int3
mov
fnstenv
jo
leave
mov
int3
call
xchg
mov
xor
jo
or
mov
xchg
jne
cmpsl
xor
mov
sub
dec
mov
jmp
push
or
pop
push
lods
and
fdivr
add
shr
cmpsb
dec
inc
pop
sub
push
outsl
popf
rcll
rcrb
and
sbb
dec
outsb
add
pop
bound
push
and
sarl
pop
push
mov
add
jnp
push
fucom
insb
scas
int3
stc
cld
xchg
and
sub
fs
loope
cmpsb
cmp
cld
sub
or
int
repz
mov
je
call
mov
xchg
or
cli
je
nop
addr16
mov
xchg
xchg
mov
jae
pop
jmp
adc
or
inc
and
jge
push
outsb
cmp
cli
cwtl
adc
xchg
inc
into
mov
enter
pop
sub
test
inc
mov
jge
fs
mov
movsl
filds
and
dec
jb
push
cmp
cmpsb
enter
cmp
out
and
pop
pop
mov
cmpsb
mov
and
push
xlat
mov
leave
push
push
sbb
mov
push
call
fiadds
xor
insb
xchg
lret
mov
or
cmp
xorb
mov
mov
adc
cmpsb
call
rcrl
lea
repnz
js
sub
enter
push
mov
mov
hlt
into
in
pop
sub
fists
je
pop
mov
insb
sbb
clc
or
dec
push
mov
jae
loop
mov
dec
daa
fldt
adc
ficoms
or
adc
sub
mov
push
movsl
call
dec
sub
je
push
fimuls
mov
lret
clc
jmp
popf
bound
mov
jb
cmp
adc
mov
push
fists
mov
jp
cld
xchg
cwtl
xchg
push
fwait
adc
mov
sarb
jnp
addr16
aaa
out
push
enter
mov
mov
or
dec
je
adc
aaa
pushf
fimull
mov
aad
push
and
bound
jge
sub
push
scas
xchg
mov
pop
out
test
pop
mov
test
sub
shrb
jb
in
daa
sbb
cmp
and
imul
mov
sub
addb
xchg
stos
incl
fs
or
aaa
jp
shrl
ja
pop
and
imul
loop
shrl
addl
mov
xchg
in
out
xlat
adc
mov
sbb
out
fstpl
adc
inc
xchg
std
imul
testb
add
pop
sub
call
std
add
and
inc
and
pop
push
test
mov
jne
testb
orb
mov
lret
inc
push
and
mov
fisubl
repz
cmp
jnp
aaa
sbb
jg
mov
sbb
push
and
or
add
test
mov
or
roll
adc
adc
mov
push
dec
sub
mov
cmp
rclb
push
and
xchg
adc
subb
out
push
xchg
mov
enter
mov
sub
add
jmp
mov
jmp
adc
and
mov
lods
mov
into
lea
push
rcrb
and
cmpsb
inc
and
dec
xchg
enter
shll
jne
add
mov
adc
test
sbbl
inc
sub
xor
repnz
shrb
xor
add
les
inc
or
pop
lds
or
adc
or
xchg
push
in
lods
push
in
outsl
sbb
sub
xchg
pop
or
pop
pop
test
or
incl
jmp
mov
daa
or
pop
std
xor
dec
int
gs
sub
dec
cld
cli
mov
or
arpl
aas
repz
push
or
jmp
mov
fcmovb
dec
loope
push
sbb
add
jmp
or
imull
and
or
jg
das
pop
dec
push
repz
jle
shll
xor
scas
adc
data16
push
fisttpll
fnstsw
or
mov
outsb
add
mov
sbb
repnz
mov
sar
cmp
mov
pushf
pop
gs
push
cld
dec
aam
push
sbb
scas
addb
dec
test
repz
shll
lock
jae
xor
add
mov
mov
jnp
aad
pop
mov
push
nop
jbe
sbb
icebp
sub
test
repnz
or
dec
sub
dec
mov
shl
sti
ret
pop
aam
data16
jle
dec
push
cltd
sub
test
cmpsl
les
inc
mov
fldl
xchg
out
cmpsl
cwtl
lret
mov
jne
jmp
add
shr
inc
add
mov
sub
mov
or
mov
push
jg
cmp
pop
jl
lea
int3
dec
cmp
pop
lock
mov
or
mov
push
inc
dec
sbb
mov
clc
jle
adc
and
and
or
jl
aam
pop
jl
pusha
shl
lea
sbb
in
cmp
sbb
adc
inc
test
es
or
push
push
jmp
es
lret
push
dec
dec
mov
mov
dec
mov
jl
mov
addb
andb
mov
mov
and
inc
jle
mov
inc
pop
lods
cmp
mov
repz
dec
mov
outsl
mulb
movq
mov
and
int3
inc
lock
fsubs
pop
add
or
adc
aad
sub
add
xchg
sbb
xor
inc
fs
mov
pop
loop
xchg
push
roll
subl
jb
jmp
jl
mov
or
jbe
es
pop
mov
or
inc
cmovle
test
jne
mov
imull
test
std
xchg
mov
test
xchg
sahf
cmp
cwtd
das
out
cmp
ljmp
imul
jmp
mov
test
cmpl
mov
jbe
add
call
aad
out
xchg
mov
lds
stos
cmp
xchg
add
popa
cmp
push
jmp
pusha
inc
cltd
push
or
push
out
js
je
jns
ss
sub
loopne
adc
inc
arpl
loopne
mov
pop
or
loop
or
pop
dec
mov
mov
pop
ja
repnz
jne
sbb
xor
inc
adc
pushf
ror
pop
xchg
cwtl
in
hlt
adc
mov
leave
or
xchg
addr16
aas
dec
mov
imul
cmc
push
and
lock
jbe
push
decb
movl
push
sub
aas
ficomps
or
js
push
jmp
lret
aaa
cltd
call
inc
or
dec
add
jmp
lea
sti
daa
mov
leave
clc
add
cltd
sub
pop
sbb
mov
jg
jg
mov
pop
cwtl
push
gs
daa
ja
dec
xchg
notl
insb
xchg
rol
rcll
cwtl
fistl
mov
jge
cmp
mov
pop
sub
cwtl
cli
and
add
imul
dec
int
leave
hlt
and
cmp
test
loope
int
iret
aaa
xchg
decb
ret
add
fnclex
jb
add
clc
iret
sbb
and
xchg
cmp
das
test
mov
or
enter
shll
jae
sub
rcrl
xchg
mov
xchg
bound
fcoml
mov
or
imul
inc
push
ret
cld
scas
int3
pop
fdivr
sub
out
add
call
sbb
test
popf
out
sub
test
push
xorw
lret
loope
leave
mov
and
lea
dec
mov
pop
popa
int3
pop
int3
test
pop
out
cli
push
repnz
pusha
sbb
in
int
loop
pop
sahf
adc
and
xchg
rolb
xchg
jbe
inc
cli
xchg
shll
arpl
xor
adc
xchg
aaa
sub
fmull
mov
cmp
fdivrl
fcmovnb
shrl
and
and
out
add
and
mov
adc
mov
ja
mov
jae
sub
mov
into
es
cmpsb
movsb
push
push
add
in
inc
xor
jae
pop
cld
scas
inc
iret
add
jmp
or
jmp
or
adc
or
add
sbb
pop
mov
outsl
hlt
lahf
out
loopne
mov
or
and
fstpl
in
mov
mov
loopne
mov
call
jae
lahf
rcrb
xor
add
int
pop
xchg
dec
subb
out
cmpsb
jg
inc
jecxz
notl
jge
stos
adc
xor
mov
jo
xchg
xor
or
testl
pop
fmulp
cmp
loope
loopne
daa
sar
push
adc
cmp
push
lds
or
insb
adc
cmp
inc
cmpsb
adc
or
push
adc
shrl
nop
push
es
sbb
adc
or
jecxz
push
mov
jne
or
outsl
push
pop
shl
leave
icebp
jg
xchg
mov
mov
xor
push
and
dec
add
cmp
aad
xchg
or
clc
out
sub
aad
es
push
and
or
cmp
mov
dec
rol
push
cmp
mov
pop
mov
sbb
adc
test
xchg
lods
xchg
dec
mov
adc
cmp
push
hlt
sti
pop
dec
rorb
rorb
dec
leave
repnz
cmp
roll
add
adc
jb
and
mov
xor
test
jle
adc
movsl
cmp
and
shlb
pop
inc
imul
js
fisttps
or
pop
loope
lahf
add
js
das
fcoml
mov
mov
lods
and
sbb
push
jnp
shrb
xchg
inc
xchg
mov
das
sbb
sbb
aam
push
add
or
push
sub
mov
aad
sti
cmp
xchg
test
push
jmp
cmp
js
jne
shlb
aam
cld
cld
xchg
in
roll
je
mov
cld
pop
and
nop
repz
mov
ret
add
fisubs
mov
rcr
iret
fcompl
ja
fsubrp
sub
cs
jne
ret
call
and
add
lea
mov
inc
xchg
sbb
mov
arpl
xchg
je
rcll
inc
or
test
sbb
jle
lock
popf
out
jno
loope
cs
cmp
rolb
pop
hlt
inc
dec
loope
add
push
rcll
push
lock
repnz
in
imul
xchg
fstl
push
movsl
out
push
jmp
outsb
addr16
jmp
mov
adc
add
in
ljmp
js
das
daa
daa
add
mov
roll
add
xor
sub
mov
pop
jge
mov
lret
js
stos
cltd
es
test
cmc
pop
cld
cwtl
dec
stos
frstor
roll
xchg
adc
mov
inc
cmp
inc
jb
cld
xchg
push
dec
out
xchg
jge
clc
jb
sarb
dec
inc
rcr
sti
imul
insb
jg
das
and
adc
jg
add
mov
lahf
faddl
sbb
cld
imulb
jmp
jns
imul
js
pushf
loopne
unpckhps
sub
je
inc
adc
repnz
pop
repz
add
decl
push
or
dec
scas
jae
mov
or
repz
or
stos
mov
repnz
imul
rol
xchg
stc
test
andw
pushl
inc
mov
fld
test
dec
mov
nop
loopne
mov
push
shlb
lret
push
cmp
xchg
mov
fldcw
mov
inc
add
les
or
insl
test
pop
sub
push
adc
jnp
sbb
inc
push
jg
sub
mov
cmpsl
leave
dec
pop
pop
mov
in
and
push
and
ficoml
cvtps2pd
sbb
test
xchg
pop
rcrl
or
sub
popa
adc
mov
ja
outsl
out
fwait
shll
and
sbbl
roll
cli
adc
mov
mov
mov
pop
mov
fsubrs
in
les
cmp
stos
push
mov
sbb
lds
xlat
jo
sub
pop
dec
mov
movsb
and
inc
adc
push
fdivrs
xor
fst
outsb
fldl
push
xchg
je
rorb
xor
sbb
adc
or
sbb
dec
fildll
cmc
subl
inc
js
mov
add
aad
or
or
sarl
jno
adc
movsb
cmp
hlt
sbb
push
pop
jno
mov
fisttpl
fs
mov
inc
int
mov
int
clc
decl
lahf
ljmp
adc
or
dec
jb
adc
mov
push
movsb
call
lret
lea
add
dec
mov
subl
and
jmp
and
stos
xchg
fdivrs
and
push
mov
inc
inc
cmp
cmpsb
cmp
add
pop
add
sub
in
dec
mov
or
cmp
jne
nop
adc
lock
mov
psrld
sub
mov
fstpl
lds
lds
fsubrp
imul
int3
push
xchg
test
jl
cld
push
imulb
dec
std
pop
leave
fcomps
push
adc
fs
mov
inc
rclb
aaa
xchg
jnp
xchg
jp
sbb
xor
or
push
mov
leave
pop
sub
sbb
leave
adc
add
xlat
sbb
inc
into
pusha
aaa
jne
les
fisubs
mov
mov
fsubr
sbb
pop
roll
adc
mov
and
pusha
push
jge
xchg
daa
and
les
push
xchg
imul
dec
inc
inc
xor
ljmp
xchg
lods
xchg
or
std
fwait
or
in
inc
mov
xor
mov
sub
es
inc
fcoms
or
xchg
imul
or
pushl
dec
out
loopne
inc
ljmp
jnp
jb
mov
mov
or
jb
clc
inc
inc
inc
or
jbe
scas
inc
fs
fsubr
sbb
mov
sti
sbbb
inc
dec
cltd
aas
nop
jne
repnz
aaa
into
fbstp
mov
sbb
inc
jmp
mov
js
cltd
ja
repz
push
cmp
cli
movl
decb
lret
jmp
jne
pop
rorb
jne
dec
pop
scas
popf
call
dec
jb
xchg
mov
stc
pop
adc
push
ja
xor
push
ret
cmp
or
pop
mov
aas
loopne
in
test
cmp
and
inc
loopne
aas
push
dec
xor
mov
xchg
mov
arpl
shrb
aas
jne
dec
testl
roll
add
in
push
fiadds
mov
mov
divl
push
inc
je
pop
sub
adc
mov
sub
repz
mov
cld
xor
movsb
out
test
out
mov
pop
dec
mov
adc
mov
jl
xor
adc
xchg
cli
sub
mov
sub
cmp
mov
xchg
sbb
daa
cli
inc
pusha
jae
inc
movsl
pop
mov
std
popf
jge
psubb
inc
inc
shll
shrl
xorb
lods
jne
lock
pop
std
out
adc
in
addb
jge
shlb
push
cmp
data16
lea
pop
mov
pushw
push
jmp
cwtl
sub
shr
and
sub
iret
ret
pop
cmpsb
push
add
inc
les
mov
mov
insl
call
fdivrs
cmp
arpl
xor
add
push
std
mov
sahf
fs
leave
jle
or
cmp
add
clc
xchg
push
int
dec
sub
mov
jecxz
addr16
mov
aaa
sbb
pop
jb
repnz
adc
es
adc
push
in
inc
xchg
and
add
mov
xchg
dec
mov
xor
insb
rcrl
lret
in
mov
lds
inc
testl
mov
push
add
and
inc
jb
scas
adc
sub
addb
ror
inc
jmp
jge
popa
mov
sub
mov
sub
and
push
xor
jne
sub
pop
xchg
adc
in
mov
mov
scas
cmpb
lcall
mov
test
pop
dec
or
in
test
or
repz
mov
jecxz
mov
or
jno
push
adc
pushf
xchg
dec
adc
mov
shl
fmuls
mov
fisttpl
outsb
adc
mov
sbb
adc
mov
mov
and
out
cld
lock
repz
out
cli
sbb
leave
push
negl
fs
and
call
imul
ja
sub
arpl
or
jb
adc
out
out
leave
fidivrs
insb
push
not
add
arpl
cltd
daa
jmp
cwtl
mov
mov
sbb
test
jne
add
mov
mov
adc
push
mov
shll
inc
pop
adc
faddp
push
xlat
inc
push
pop
dec
or
jmp
mov
out
mov
popa
mov
dec
add
imul
enterw
sbb
std
push
mov
xchg
nop
adc
xor
int
data16
and
mov
inc
lods
push
lret
fs
fs
dec
jmp
dec
sbb
jb
lret
sub
dec
xlat
jb
pop
inc
add
adc
fcoml
xchg
push
fdiv
dec
bound
out
daa
xor
adc
cli
into
cld
xor
fisttpll
loop
mov
repz
inc
xor
dec
jne
iret
inc
xor
iret
mov
xchg
out
bound
rcrl
ret
shrl
pop
pop
pushf
mov
je
or
and
or
fildll
xchg
push
mov
cmc
add
sti
xor
add
stos
enter
xor
mov
sbb
sub
xor
adc
fyl2xp1
or
aas
orl
nop
adc
and
jge
jne
test
mov
lds
aam
mov
enter
mov
xor
or
mov
rcll
outsb
xchg
cli
sub
sti
je
dec
inc
pcmpgtb
and
andl
jno
or
xchg
or
out
add
pop
jmp
push
test
adc
pop
sbb
xchg
out
pushf
rcll
xchg
push
xchg
mov
inc
mov
ja
or
add
shlb
dec
push
xor
or
ljmp
and
or
mov
add
sub
jle
cmp
shlb
cs
lock
sbb
and
pop
sarl
mov
test
movsb
dec
mov
push
dec
or
subl
or
jmp
jne
adc
mov
cmpsl
xor
repnz
outsl
push
movsl
inc
mov
insb
imul
movzbl
xor
dec
mov
mov
cmpsl
clc
dec
inc
or
add
mov
mov
xor
lock
jne
sbb
addr16
imulb
inc
nop
sbb
pop
dec
pop
mov
mov
push
push
in
push
xchg
in
mov
ss
xlat
xor
inc
fdivr
gs
pop
cmp
sub
in
sub
sub
les
stos
lret
mov
jo
mov
loopne
or
jmp
and
in
call
out
dec
mov
aas
mov
mov
add
ret
mov
in
repnz
mov
cmp
adc
push
inc
mov
and
outsl
fimull
mov
jp
jge
out
or
lods
inc
hlt
sub
and
sbb
sar
test
test
in
int3
cltd
or
sti
ja
test
inc
jbe
push
sbb
jne,pn
xor
mov
xlat
pop
dec
ror
inc
imul
jo
lcall
dec
subb
rorb
aas
rorl
pop
std
cltd
xchg
or
mov
int
inc
cld
jnp
dec
inc
into
lahf
loopne
repnz
xchg
inc
sbb
and
sbb
imul
in
jmp
fs
pop
daa
push
enter
jo
je
pop
pop
arpl
sbb
jecxz
movsb
mov
mov
movsl
mov
sub
xor
mov
cltd
xor
js
dec
mov
sub
push
pop
xchg
out
xchg
mov
cmp
rclb
movsl
movsl
pop
push
inc
cmc
pop
nop
scas
jecxz
pop
ljmp
ljmp
gs
push
pop
xchg
aaa
divl
sbb
push
cmp
jnp
shll
mov
xor
outsl
pop
xchg
push
rcrb
pop
ja
test
cmpsl
hlt
xchg
jl
dec
sbb
imul
and
xchg
dec
pop
orb
test
or
lods
sub
lret
rolb
mov
cli
jmp
cmpsl
frstor
xor
jmp
aas
sub
daa
sbb
clc
mov
test
mov
push
and
cmp
mov
bound
test
aas
inc
repz
fldl
adc
ret
pop
sub
jge
or
dec
shrb
jne
mov
or
add
adc
aam
scas
mov
or
and
push
repnz
add
repz
push
or
repnz
jl
mov
mov
cld
movsl
clc
pop
xor
mov
fwait
inc
loop
daa
or
lcall
scas
fsubs
gs
sbb
and
popf
shll
fcoml
mov
jae
bound
loopne
addr16
dec
mov
faddl
adc
aad
dec
ja
incb
sbb
jmp
outsb
call
and
lods
push
ror
mov
cmc
xchg
fidivrl
in
dec
out
cwtl
sub
loop
pop
dec
outsb
dec
call
mov
push
aas
gs
enter
add
xor
insb
fwait
stos
daa
sub
test
adc
jecxz,pt
out
and
jns
push
push
inc
cmp
leave
movsb
or
pop
adc
mov
aam
or
fcompl
lret
negl
lcall
dec
ret
notb
or
and
adc
leave
cld
fnsave
div
les
mov
dec
adc
movsb
divl
and
je
in
mov
aaa
aam
mov
sarl
inc
notb
imul
out
lret
call
xchg
ret
or
rcr
es
lods
jmp
push
xor
call
sub
sub
jmp
sbb
pop
mov
sbb
pop
inc
or
xor
or
cmp
xor
adc
pop
js
das
cmp
push
xor
daa
popf
insb
mov
pop
mov
xor
je
or
or
add
sahf
repz
ja
xlat
sbb
ss
push
mov
inc
xor
jmp
dec
in
jbe
dec
xor
les
cmpsl
adc
test
jecxz
or
and
pop
or
sub
jno
mov
xor
dec
and
mov
test
cli
mov
jae
xor
adc
out
mov
test
or
movsl
imul
lods
push
fildll
and
pop
and
mov
lret
inc
aaa
notb
call
sub
popf
xchg
mov
push
jmp
out
fwait
push
inc
xchg
mull
pop
inc
dec
hlt
cs
mov
lods
imulb
into
mov
sarb
cmpsl
pop
jge
hlt
imul
div
rcll
in
cmp
or
fwait
ret
xchg
je
outsl
jle
xor
cmc
dec
pop
dec
xchg
movsb
and
loope
movsl
push
ja
loopne
or
jecxz
adc
in
inc
fcomip
cmp
lea
rclb
div
outsl
inc
and
add
je
mov
or
pop
adc
lahf
into
jmp
std
ss
mov
cld
pop
adc
add
je
imul
scas
push
cs
and
movl
pop
jmp
pop
cld
nop
shl
movsb
dec
cld
test
mov
fists
inc
mov
clc
sbb
pop
cmp
enter
xor
or
hlt
out
rcrb
ja
fsts
adc
mov
test
inc
andb
rcll
shrl
ror
xchg
mov
sub
or
pop
mov
mov
test
mov
dec
incb
das
in
dec
mov
xchg
lret
loop
test
jmp
mov
nop
test
cld
jmp
fiaddl
divb
jge
pop
push
fistpll
ffreep
inc
sbb
js
mov
lds
mov
lods
out
and
stc
sbb
lock
push
mov
pop
iret
cltd
jl
bound
adc
dec
in
nop
pop
sbbl
adc
dec
mov
sbb
sbb
mov
mov
adc
add
bound
or
sbb
in
push
or
fstps
add
or
bound
das
adc
movsb
shll
sahf
sbb
mov
or
arpl
inc
push
or
mov
icebp
sub
mov
push
or
xchg
sub
cmp
mov
rclb
subl
push
jmp
js
cld
cltd
cltd
bnd
movsl
jle
push
and
or
jl
xchg
pop
xchg
mov
pop
jl
pop
ja
hlt
arpl
dec
or
stos
xchg
outsl
cmp
cld
adc
out
cmp
mov
pop
loop
hlt
sub
daa
dec
std
clc
xchg
stc
sub
or
jg
mov
stos
aad
bound
daa
inc
imul
mov
cmp
and
cltd
lods
xchg
inc
call
push
lea
push
push
mov
push
out
test
clc
jmp
jnp
outsl
inc
adc
std
mov
fcomp
fdivrl
orl
dec
orl
std
cmp
repnz
or
ds
inc
sub
mov
xchg
sbb
dec
rolb
cs
in
outsb
test
push
or
and
bound
nop
sub
and
xchg
fisubrs
xchg
mov
popf
jae
dec
jne
ss
das
xchg
sti
cmc
gs
sub
inc
or
mov
mov
pop
jg
popf
jns
dec
jge
nop
sub
dec
out
roll
push
dec
or
clc
repz
fs
daa
sbb
call
lock
test
and
mov
pop
cltd
lds
push
mov
fisubs
inc
mov
sub
testb
imul
cmp
clc
mov
or
clc
imul
shr
pushf
push
pushf
mov
inc
sub
jno
push
add
mov
outsb
dec
loopne
mov
xor
roll
mov
lahf
add
mov
arpl
mov
adc
out
mov
inc
pop
sub
dec
mov
xor
add
push
sub
cmpsb
daa
add
cmp
dec
jb
xorb
mov
imul
xchg
mov
dec
add
mov
xor
aam
call
and
or
cmp
cs
sbb
push
add
jnp
das
cmp
sbb
mov
cld
adc
sbb
fwait
xor
js
pop
fadd
lds
inc
sub
movl
inc
pop
xchg
test
movsb
repnz
inc
xor
sub
jb
sub
push
push
call
ret
inc
adc
and
and
cltd
jns
push
stos
mov
sub
ret
jle
or
adc
decb
imul
dec
sub
loopne,pn
dec
pop
pop
in
loope
clc
add
adc
pop
inc
xor
hlt
test
leave
je
mov
les
adc
das
or
sub
mov
sbb
bound
repz
popf
gs
movsl
repz
add
inc
lods
sbb
sbb
jg
mov
repnz
push
adc
jb
stos
sub
inc
mov
movl
and
inc
dec
or
pushf
and
xchg
dec
dec
push
jecxz
movaps
push
mov
rorb
or
inc
repz
mov
icebp
outsl
add
dec
adc
or
adc
mov
stc
out
or
cmpsl
test
adc
int
pushf
ds
pop
movsb
jb
sbb
adc
cwtl
orb
sub
aad
or
lock
add
inc
xchg
cld
xchg
and
test
jno
adc
sahf
inc
xchg
stc
jbe
stc
push
iret
and
push
clc
out
jnp
mov
lds
lods
popa
bound
icebp
cmp
cld
mov
push
divb
pushf
add
jns
fs
and
enter
or
in
movsl
sbb
fsts
sbb
out
lods
or
fstps
bound
adc
dec
xlat
loop
mov
xlat
in
push
jne
inc
loopne
push
je
dec
and
in
stos
jne
aaa
push
inc
pop
loop
leave
clc
jp
imul
sbb
movaps
adc
mov
add
mov
mov
scas
and
mov
outsl
gs
or
pop
rcrb
dec
adc
xchg
sahf
push
in
inc
dec
ljmp
push
ja
cltd
addr16
add
inc
call
mov
in
mov
clc
cmpsl
add
pusha
sbb
xchg
inc
arpl
pushf
xchg
hlt
inc
or
xchg
addr16
add
lea
nop
ror
int3
dec
lds
mov
xchg
fadd
sbbb
jg
fwait
mov
mov
inc
xorl
push
mov
or
inc
jg
xor
divl
adc
test
mov
xchg
jg
in
dec
daa
or
adc
push
jmp
xchg
add
orb
jmp
into
or
iret
je
push
nop
and
popf
xor
jge
and
push
sbb
cmc
out
cmp
iret
inc
cmp
test
dec
cmp
xchg
mov
cmpb
outsb
jb
pusha
cmp
cmpsb
mov
push
or
cmp
cmp
movsl
adc
adc
xchg
mov
aam
aaa
repnz
inc
sbb
push
das
inc
loop
adc
jmp
push
xchg
push
mov
je
pop
and
movups
adc
inc
es
cmp
adc
add
cmc
inc
nop
adc
sub
loopne
mov
xchg
outsl
jae
mov
push
imul
adc
adc
insb
dec
decl
mov
dec
pop
lock
dec
inc
es
lds
mov
jbe
push
ret
push
jp
sub
jne
inc
clc
das
fnstsw
xor
in
add
sub
or
or
repz
and
int
cld
adc
call
in
adc
insb
dec
mov
xor
xor
cmp
cmp
cmp
rclb
mov
out
test
sahf
movsl
imul
xchg
xchg
adc
mov
dec
mov
xchg
mov
gs
mov
xor
sti
pop
icebp
sub
cltd
adc
jne
jnp
xor
mov
out
add
jno
fs
out
std
sbb
add
cli
push
inc
adc
mov
cmp
mov
ja
outsl
movsl
mov
xor
inc
mov
cwtl
cmp
or
mov
sub
mov
xor
inc
sub
mov
mov
inc
test
xchg
inc
sbb
repz
je
jmp
clc
leave
push
push
sbb
les
mov
add
sbb
hlt
pop
int
addl
and
fnstsw
xor
sbb
cmp
adc
mov
sbb
hlt
or
pop
xor
inc
and
adc
movsl
push
jl
insb
jp
loope
lcall
mov
xchg
nop
shll
dec
test
xchg
mov
fbld
jg
inc
sub
or
lock
lea
fistps
divb
lea
insb
pop
mov
test
cmp
test
test
lahf
fcomps
fstpl
jb
adc
dec
lock
pop
xchg
ljmp
mov
lahf
push
lcall
pop
out
bound
push
sbb
imul
inc
dec
jle
jno
cmpsb
mov
lods
and
ljmp
movsl
jbe
push
divb
iret
adc
mov
push
pop
pop
xchg
mov
jg
fcoms
stc
xlat
xchg
jecxz
adc
pop
std
or
cmpb
leave
test
lock
fsubrs
cmp
das
std
addr16
je
cmp
dec
pop
imul
cmp
pop
inc
popa
fistl
mov
fisubl
push
insl
mov
scas
cmp
jmp
sbb
sbb
adc
into
pop
pop
xor
cmp
ja
add
pop
pop
and
bound
cmp
ljmp
mov
mov
inc
add
pop
adc
mov
imul
and
cmp
push
xor
xchg
or
ret
sahf
aaa
dec
or
lods
ret
pop
daa
cmp
push
mov
mov
popa
add
cmp
jne
std
imulb
xchg
call
mov
sti
loope
andl
fists
sub
or
scas
dec
aam
push
mov
lcall
imul
and
push
test
pop
mov
cmp
or
pop
test
mov
add
aaa
mov
scas
andnps
stos
and
dec
mov
je
xchg
cld
stc
mov
and
jl
and
sbb
int3
test
mov
out
dec
fcompl
test
xor
fstps
fs
xchg
bound
cmc
mov
mov
cld
jo
shll
jne
and
inc
adc
cld
pop
xchg
sbb
and
pushl
mov
xor
insl
fs
scas
jl
lds
leave
pop
div
imul
sub
into
and
adc
and
push
xorb
hlt
sub
push
adc
cltd
add
lea
insl
or
loop
and
inc
or
jo
add
outsl
repnz
adc
lock
hlt
popf
fstl
loopne
mov
inc
fsubl
out
xchg
imul
pop
push
nop
pop
push
cmp
cmpsl
stc
jne
mov
stc
faddl
roll
adcb
movsb
xor
push
cmp
push
mov
das
adc
into
lock
jg
mov
adc
mov
sbb
sbb
push
or
xchg
dec
je
jl
jo
pushf
push
dec
xlat
or
pop
in
sub
in
jge
rorb
pop
enter
or
je
lret
ja
push
std
xchg
or
or
mov
movsb
jmp
cli
inc
repnz
test
lds
filds
jne
dec
adc
sub
xor
xchg
clc
xor
movsb
leave
jg
sub
pop
mov
lds
adc
inc
xchg
xchg
sub
xchg
pop
add
jge
push
mov
cmp
add
inc
inc
xor
sub
inc
pop
and
inc
mov
sub
or
dec
push
stos
data16
or
adc
movsb
mull
cmpsb
mov
add
sub
mov
pop
das
cmp
shlb
or
cli
loop
ror
in
sbbb
adc
cmp
lcall
add
mov
shll
test
mov
and
jne
adc
xchg
divl
cs
loop
xlat
repz
sahf
lock
inc
test
dec
out
and
leave
into
fdiv
inc
adc
add
ds
lcall
add
popf
lahf
add
inc
mov
jns
xchg
fimuls
push
sub
loop
sbb
jne
test
add
cmp
sarl
pop
mov
test
gs
es
sub
test
add
sbb
rcl
ret
mov
mov
mov
jne
mov
or
cs
jae
jmp
jl
int
xor
inc
stos
cmc
or
int
cmpsl
pop
mov
ret
movl
sub
ljmp
popf
test
dec
sub
dec
adc
loop
ja
xchg
pushl
cmpsl
push
jnp
lcall
adc
xchg
je
push
mov
xchg
mov
sbb
daa
xor
popf
stc
nop
lock
imul
cmp
cmp
sbb
pop
cmp
mov
mov
mov
rolb
jnp
add
push
jne
mov
sar
sbb
inc
sbb
xor
sbb
hlt
pop
psubd
sub
push
add
push
ret
stos
xchg
jbe
inc
arpl
int3
jnp
jmp
mov
or
fs
imul
lcall
cmp
xchg
add
or
cmp
das
sbb
push
pop
mov
inc
movhps
mov
cs
ds
pop
sbb
test
mov
sti
ja
lret
inc
aam
or
mov
cmpsl
mov
mov
or
cmp
jne
repz
cwtl
xor
aad
xor
add
and
mov
push
sub
lds
ret
cmp
insl
sub
cli
pop
stos
mov
popf
in
push
shll
out
add
jecxz
fcmovu
insb
ljmp
jo
add
lret
push
push
lods
jl
hlt
sbb
cmpsl
mov
js
xor
cmp
dec
sbb
call
shlb
or
notl
cmp
in
scas
mov
scas
sub
dec
mov
aam
test
lcall
sbb
jmp
dec
cmp
push
inc
sbb
adc
gs
jmp
repnz
out
loope
dec
sbb
shll
xlat
dec
cmp
xor
inc
hlt
dec
in
sbb
lret
clc
insb
daa
lods
push
mov
vmread
xor
lea
mov
and
mov
psubsw
loope
push
inc
sub
insl
in
gs
addr16
outsl
nop
movsb
mov
pop
mov
test
insb
int3
stos
cmp
pop
lea
adc
push
adc
mov
mov
enter
xchg
and
test
adc
or
xor
mov
or
lahf
inc
mov
jns
daa
adc
xchg
adc
pop
xor
jnp
cmpsb
or
lea
add
lahf
adc
mov
daa
fwait
or
pop
cmp
adc
xlat
nop
sub
ja
mov
or
inc
sbb
adc
adc
and
pop
sbb
lds
lods
push
mov
sbb
push
int3
aas
enter
in
mov
adc
cmp
out
jp
inc
aaa
dec
adc
xchg
loop
dec
rolb
pop
jg
add
add
push
nop
or
jne
and
and
lcall
and
sub
xchg
mov
adc
xchg
inc
inc
jmp
push
mov
and
jne
imul
or
je
sbb
pop
mov
xchg
rorb
hlt
call
lea
cmp
fs
and
and
negl
sarb
mov
sbb
sub
xchg
icebp
lock
fstpt
inc
arpl
mov
stos
jl
clc
and
sbb
iret
icebp
inc
sbb
jo
lss
rcr
cli
or
cmp
or
xchg
fsubl
pushf
lret
push
lret
cmp
cld
jl
mov
dec
dec
fs
adc
mov
mov
adc
test
pop
jae,pn
sbb
enter
sub
stos
pop
and
jge
sub
jbe
jbe
lock
cmp
loop
adc
and
xchg
call
adc
xor
call
sahf
popf
and
sbb
shrb
in
fwait
mov
movsl
push
shrb
lock
cmp
loopne
pushf
xlat
insl
fsubr
dec
cmpsl
cld
mov
jno
xchg
and
cmpsl
cld
cmp
sbb
lahf
inc
xor
adc
or
rclb
dec
and
out
inc
stc
ds
xor
test
dec
inc
dec
shlb
aam
mov
in
push
repnz
xlat
xchg
or
gs
testb
and
subb
dec
mov
test
mov
sarb
movsb
pop
xchg
in
daa
pop
dec
outsb
mov
cmp
mov
fidivl
popa
rclb
jmp
mov
lahf
stc
xchg
cmovnp
lods
push
sub
dec
push
or
jmp
test
jno
rcl
rclb
in
stc
dec
cltd
pop
xchg
sub
inc
and
fcoml
std
mov
test
aas
dec
out
sub
clc
fwait
cmp
out
and
and
push
add
cmp
jge
push
clc
cltd
xchg
mov
push
jnp
xor
aam
das
mov
push
fisttps
test
dec
jg
std
cli
jg
outsl
add
js
leave
pop
outsb
cld
out
dec
out
push
sbb
adc
mov
xchg
dec
sbb
or
pop
xorb
jo
repz
daa
insb
or
and
mov
inc
push
or
pop
or
and
push
mov
loope
push
and
rcll
adc
sbb
mov
and
or
pop
pop
nop
movsb
or
or
adc
push
inc
or
dec
ret
cmp
adc
dec
lods
xchg
cwtl
out
and
rorl
mov
out
sbb
jge
mov
mov
bound
js
mov
push
std
mov
ds
aas
push
inc
pop
dec
lods
ja
or
cld
lds
out
orb
cmpsb
jb
and
subb
mov
jne
popa
mov
rorb
pop
fisubs
mov
leave
or
push
or
sbb
adc
or
jb
pop
imul
adc
pop
sti
cmp
dec
dec
sub
add
imul
stc
xchg
call
sbb
inc
loopne
outsl
les
pop
mov
cmp
xlat
fs
cmp
adc
jb
inc
adc
add
sub
xchg
decl
movsl
xor
mov
pushl
adc
sti
adc
mov
ret
mov
roll
push
push
sub
loop
mov
pusha
xor
xor
fdivrs
fsubrs
lahf
fildl
lock
outsb
repz
out
int
fnstsw
in
dec
inc
leave
jge
je
cmp
hlt
push
inc
and
sbb
jnp
sbb
fs
sbb
inc
sbbl
aad
xor
cmp
ljmp
jne
dec
sub
int
sub
inc
jmp
scas
fistpl
daa
push
inc
mov
hlt
and
sub
in
lret
lods
pushf
xchg
mov
jne
xor
pop
push
adc
sub
sbb
sbb
adc
add
or
push
sub
sub
dec
lock
xchg
xchg
xlat
adc
mov
cmc
cmp
jne
mov
ret
roll
pop
div
popf
into
les
mov
adc
dec
xchg
jmp
mov
rolb
stos
inc
push
xchg
call
pop
scas
mov
mov
test
mov
bound
sub
sbb
sbb
cmpl
call
imul
ja
es
sbb
test
inc
jne
add
pushf
or
mov
gs
push
shll
pop
sub
jmp
mov
popa
pop
inc
lods
movsl
test
add
loopne
adc
mov
ret
and
xor
or
or
inc
or
dec
mov
mov
inc
xchg
idivl
lods
push
xchg
mov
mov
cmp
cs
stos
dec
scas
add
setge
and
jmp
aam
loopne
push
sti
mov
sarb
cmp
mov
rorb
jne
movb
data16
daa
or
sub
rorb
pop
adc
sbbl
and
push
dec
add
fwait
incl
jecxz
push
and
fwait
or
outsb
dec
mov
imul
pop
ret
test
and
and
or
mov
bound
pop
fwait
mov
xchg
dec
enter
pop
mov
add
and
mov
fbld
add
sub
push
mov
sub
ja
sbb
fnstcw
sub
call
push
or
arpl
mov
icebp
shrb
sub
jae
lret
lds
nop
mov
inc
mov
psraw
outsl
jno
movsl
push
cltd
shlb
lcall
ss
pop
fbld
sti
or
or
mov
jno
dec
jge
dec
cmp
push
adcb
bts
popf
outsl
shr
mov
dec
dec
pop
negl
xor
orl
mov
xor
shll
js
sbb
sbb
sbb
sub
pop
sub
mov
or
out
sbb
movl
rclb
repnz
daa
or
adc
mov
sahf
pusha
out
dec
cmc
cmpsb
ret
and
in
push
xor
das
movl
push
mov
jge
pop
inc
decb
lods
or
adcb
scas
inc
cs
push
into
enter
cli
inc
pop
dec
or
pop
mov
or
popa
xchg
or
inc
and
and
lock
pop
shll
clc
sbb
mov
ret
and
aam
cli
inc
or
shlb
xor
aaa
and
jmp
sbb
mov
pop
adc
leave
mov
push
js
xchg
loope
jo
dec
aad
adc
popf
fisttpl
and
xchg
adc
sbb
dec
in
loope,pn
aas
into
cwtl
adc
or
jb
mov
data16
jne
rorb
lret
adc
mov
es
inc
mov
mov
mov
jno
dec
shlb
lods
xchg
add
fdivrs
and
ficompl
cld
inc
push
push
outsl
sub
mov
push
cmp
inc
hlt
push
push
xor
sub
and
cmp
xchg
cmp
mov
mov
cmp
test
inc
decb
inc
and
mov
mov
jo
jg
pop
xchg
out
xchg
or
mov
frndint
and
lock
jae
test
lret
cmp
pop
daa
nop
cltd
fnsave
and
sub
inc
fildl
mov
sub
cmp
cmp
push
push
inc
push
out
dec
sbb
cmp
test
stos
pop
sbb
inc
test
shll
jns
dec
ljmp
push
push
mov
and
inc
and
lock
into
mov
xor
hlt
pop
mov
or
xor
inc
in
daa
fists
and
fsubrp
push
jg
cwtl
inc
pop
mov
push
inc
dec
mov
jg
int3
and
and
pop
outsl
out
imul
xor
mov
das
aam
mov
mulps
mov
jmp
mov
xchg
mov
setl
mov
loop
pop
fbstp
imul
lods
lret
sbb
scas
push
in
data16
xchg
loop
ja
inc
push
out
dec
aas
sbb
xor
mov
jp
and
idivb
loopne
cmp
xor
pop
dec
mov
xlat
stos
data16
lret
push
lea
cwtl
pop
jle
jp
insb
inc
fisubrl
push
dec
push
into
jmp
push
repz
sub
dec
loopne
mov
testl
int3
fwait
pop
daa
and
adc
ljmp
xchg
xchg
ja
dec
jp
push
cwtl
lods
jge
dec
aam
adc
jp
xor
add
cmp
mov
pop
dec
mov
mov
mov
nopl
ret
mov
inc
sub
imul
sbb
sub
inc
sub
test
jge
and
jne
bnd
jnp
sub
xlat
jns
in
and
push
rorb
push
inc
and
jmp
int
das
mov
outsl
aad
and
mov
mov
dec
and
or
or
aam
jne
jo
push
push
hlt
imul
sub
fdivl
or
test
sbb
adc
out
sbb
cmp
daa
je
mov
or
jl
ja
or
mov
out
and
dec
cmc
sub
jne
shlb
and
cs
jae
push
jg
clc
adc
xor
stos
dec
jno
leave
xlat
fs
dec
jmp
rorb
and
cvtps2pi
adc
lea
xchg
dec
mov
rcrl
sub
or
ja
nop
into
int
mov
mov
xchg
push
mov
inc
cli
pop
dec
dec
idivb
pop
push
jle
ss
sbb
jne
in
dec
or
inc
inc
pop
rorl
sbb
push
push
cmp
lods
sti
ss
sub
into
or
out
mov
mov
xchg
mov
sbb
icebp
cmp
inc
cmp
cmp
push
ljmp
insb
mov
adc
push
sub
data16
adc
xor
adc
dec
pop
jmp
lcall
inc
xor
jp
test
xor
cmpsl
mov
push
push
inc
mov
rcr
or
mov
adc
shlb
daa
inc
or
pusha
dec
adc
mov
loopne
xor
test
cmp
scas
xor
jne
mov
stc
cwtl
inc
xor
call
loopne
add
lods
loope
mov
scas
cld
push
out
in
push
push
jge
arpl
add
push
hlt
adc
clc
in
fidivrs
mov
jl
xor
add
inc
sub
in
cmc
int
mov
push
xchg
dec
out
adc
push
or
or
sbb
jnp
mov
in
mov
push
inc
stos
adc
int
jg
adc
push
mov
gs
adc
dec
out
popf
bound
lret
fcoms
xor
and
cwtl
call
into
push
in
sbb
inc
loopne
inc
in
hlt
add
inc
cmp
popa
aaa
adc
cmp
adc
jo
loope
sbb
mov
adc
xor
inc
jmp
xchg
bswap
inc
pop
mov
xlat
jne
cld
jle
hlt
jle
xchg
fnstsw
mov
dec
or
cltd
dec
cmpsl
pop
mov
cmp
clc
xor
ret
sub
test
mov
fdivrs
sbb
dec
push
cld
insb
leave
or
xor
fmul
lods
fcompl
jbe
dec
in
xor
and
push
and
adc
xchg
mov
repz
mov
adc
xor
xchg
jecxz
decl
xchg
push
and
movsb
les
cmp
sarl
sbb
into
lock
adc
dec
mov
mov
test
push
mov
push
sub
es
xchg
push
scas
je,pn
ret
mov
cs
mov
scas
aaa
xchg
iret
jl
or
sbb
popa
xchg
idivb
jecxz
lahf
sbb
or
movl
int
cs
movsb
cmp
mov
add
and
and
fs
movsb
scas
stc
mov
not
outsl
pop
cltd
cli
cmp
jne
pushf
adc
pop
pusha
std
jg
jne
inc
xchg
aam
jo
xchg
xchg
into
and
pop
out
test
rcrl
ja
mov
lea
je
xor
adc
mov
add
adc
fidivrs
in
sbb
aas
rorb
int3
and
arpl
mov
mov
push
lea
mov
lret
jg
adc
xchg
test
lea
add
mov
inc
divps
movb
pushf
push
and
adc
add
or
or
cmp
jl
mov
pop
call
fidivl
adc
mov
xchg
xchg
inc
push
add
fcoml
je
insb
jae
or
outsl
ja
lock
fsub
or
or
outsl
int
adc
test
addr16
rolb
or
jo
fdiv
pop
lret
and
inc
call
aam
pop
sub
push
xor
addb
nop
sub
adc
sub
dec
call
and
mov
mov
jns
xor
imul
sub
add
cld
mov
lret
mov
inc
je
arpl
dec
xor
mov
adc
xchg
add
jge
mov
mov
out
xor
mov
fcomps
push
or
adc
push
xor
xor
mov
rcrl
ret
sbb
imul
push
fists
pop
ljmp
aaa
imul
cmpsl
mov
sub
jae
call
xchg
mov
adc
inc
adc
js
rolb
call
dec
bound
push
push
pop
cmp
mov
fwait
xchg
and
jnp
pop
lcall
cmp
xchg
and
imul
and
xchg
inc
jno
pop
inc
ret
xchg
test
dec
cmp
rorb
test
and
insb
inc
add
imul
push
gs
push
decb
and
dec
adc
dec
and
mov
cmp
cmp
or
dec
add
es
mov
or
pop
push
inc
imul
xlat
test
mov
inc
adc
icebp
dec
test
rclb
or
or
and
lock
aaa
or
ret
xor
xchg
je
push
orb
loopne
inc
in
fsubl
adc
adc
inc
arpl
or
insb
outsl
loope
pop
shll
call
aam
and
jl
adc
in
add
imul
cmp
push
adc
jae
pusha
sbb
pusha
icebp
lods
xchg
inc
rcrb
pushf
inc
sub
cmpb
mov
ds
push
mov
or
or
push
in
mov
ret
aas
or
lock
frstor
test
inc
xchg
lods
xchg
mov
mov
adc
push
push
int3
sbb
pusha
mov
mov
and
inc
inc
loope
inc
or
xchg
inc
ja
pop
sbb
push
lods
mov
in
aam
test
cmp
or
jl
xchg
and
mov
mov
icebp
push
inc
mov
pop
jo
lahf
mov
loopne
xor
mov
and
fs
or
mov
or
push
fildll
sbb
enter
xchg
pop
xor
mov
icebp
cltd
and
xchg
or
call
xor
mov
lock
sbb
xor
rolb
mov
sbb
jg
enter
aam
xor
mov
hlt
adc
cld
les
add
or
mov
les
inc
xorl
adc
push
adc
pop
and
push
mov
cld
xor
dec
xchg
test
pop
sbb
add
fs
mov
cwtl
mov
jmp
push
xor
aam
cmpl
mov
iret
stos
add
pop
ja
jge
cmp
mov
mov
lahf
and
dec
stos
xchg
mov
dec
sbbb
and
and
xchg
inc
adc
inc
and
push
lods
dec
and
rclb
xchg
popa
mov
icebp
push
mov
test
stos
enter
leave
cmpsb
or
or
shr
push
add
mov
sbb
xor
push
inc
jne
fdivrl
add
sbb
sbb
inc
inc
dec
sbb
cmp
push
push
fisttpl
stos
add
into
shr
insb
sbb
mov
and
fsubrp
int
in
mov
mov
in
clc
inc
jne
icebp
aas
adc
mov
xchg
mov
sbb
xchg
lahf
cld
sbb
push
les
call
es
divb
addr16
lods
iret
cmp
jg
mov
mov
lea
inc
push
push
call
ret
push
rcrl
or
dec
jne
loope
push
inc
fs
imul
repz
mov
or
xchg
shr
int3
aaa
jl
jl
neg
js
out
testb
jae
out
iret
mov
and
or
dec
sub
or
push
sbb
into
fisubs
or
sbb
adc
mov
lea
xor
inc
int3
sbb
jp
in
or
scas
rol
adc
lods
xorb
adc
push
mov
adc
dec
shrb
pop
ljmp
jns
jns
xchg
dec
stos
xlat
out
and
or
xchg
jb
push
mov
cld
lods
sahf
mov
mov
out
cmp
daa
or
fldl
ljmp
and
sbb
popa
negb
inc
mov
sub
call
xor
sarb
jg
mov
and
cwtl
dec
lods
jmp
jne
fists
scas
add
xlat
test
xor
pop
lock
adc
jmp
mov
mov
mov
cld
adc
addr16
or
sub
jb
pop
jns
outsb
or
push
cmp
pop
xor
jo
mov
arpl
out
jmp
or
aas
jae
mov
es
jl,pn
je
jg
adc
pop
and
outsl
imull
push
jae
cli
mov
sub
push
imul
jmp
cmp
lcall
repnz
and
jns
xchg
push
or
add
dec
dec
push
push
push
outsl
cld
cld
fidivs
xlat
sub
jge
inc
stos
into
je
push
stc
jl
sahf
pop
loope
add
out
xor
mov
les
stos
fldcw
inc
lods
inc
pop
jae
les
cmp
lock
jmp
fildl
adc
or
addr16
mov
lahf
fistps
daa
mov
fsubl
adc
lods
loopne
fsts
push
fs
sti
cltd
pop
xchg
adc
frstor
push
and
lahf
test
call
fbstp
ficoml
unpcklps
imul
les
rolb
mov
cld
out
cld
loopne
sbb
jae
imul
lods
jns
cmp
addr16
pop
pop
push
sti
or
xor
cmp
stos
gs
and
xchg
call
mov
cltd
int3
test
push
cmpsl
and
pop
inc
pop
stos
test
jmp
out
dec
jle
mov
lret
mov
call
dec
out
mov
call
mov
add
dec
cmc
xor
adc
cs
and
jge
xor
xor
push
daa
nop
je
dec
fistpl
xchg
push
stos
xchg
or
nop
in
mov
push
cmpsl
flds
adc
mov
fstps
or
sbbb
sub
adc
jl
push
mov
pop
dec
push
int
pop
sub
sub
lahf
data16
push
out
outsl
push
addr16
push
mov
adc
add
xchg
test
push
xchg
sub
xchg
repz
sub
dec
leave
xchg
lock
push
mov
sbb
aad
into
nop
lock
pushf
idiv
test
ljmp
pusha
or
cs
add
out
jmp
in
mov
call
dec
or
cmp
push
adc
cmp
and
popa
fs
and
adc
jne
sub
sbb
fstpl
pop
je
jae
jo
fwait
jb
std
cmp
mov
pop
jmp
sub
out
mov
sbb
push
push
movsb
nop
push
mov
movsl
sub
call
and
shl
add
jmp
popf
fcmovnb
rcrb
pop
sbb
sbb
cltd
neg
add
xor
out
jl
addr16
rorb
cwtl
or
dec
bound
push
adc
daa
sar
fnstcw
dec
sub
inc
sub
icebp
push
mov
jl
or
aaa
inc
inc
pop
pop
dec
sarl
adc
inc
jnp
adc
jae
xor
inc
jbe
pop
jns
lods
push
nop
lret
aam
das
hlt
push
push
test
pusha
xor
fisubs
cmp
push
inc
sub
mov
clc
pop
or
pop
stc
mov
and
and
cld
mov
lea
rcll
adc
dec
hlt
cmpsb
ror
and
xor
jmp
jb
jne
sub
addr16
adcb
daa
adc
incb
jle
pop
sbb
ss
nop
mov
xchg
or
push
pusha
das
add
lahf
stc
mov
in
cwtl
test
pop
jmp
das
mov
and
in
cmp
jne
pop
inc
or
jle
mov
adc
sbb
clc
cmp
adc
or
fnsave
int3
sub
sti
pop
stos
lea
or
or
add
dec
dec
inc
inc
inc
inc
and
cs
jmp
ds
push
icebp
and
filds
push
jl
scas
sbb
popa
dec
fidivrs
cmp
call
push
dec
adc
push
mov
or
dec
in
jne
int3
dec
and
pop
mov
inc
test
push
dec
xchg
fs
repnz
add
cmpsl
xor
push
out
insb
aaa
leave
jmp
cmp
add
test
pushf
mov
loop
dec
pop
mov
lret
outsl
rcrl
xchg
and
adc
lsl
shrb
and
add
xchg
insb
stos
mov
aaa
loop
sbb
and
fstps
add
pushl
cmp
adc
loop
xchg
subb
or
jp
sub
aas
jnp
sub
in
out
dec
sub
fimuls
sub
xchg
leave
xchg
sbb
data16
jg
push
jp
or
cmp
dec
sub
lahf
adc
xlat
mov
arpl
mov
dec
or
pop
adc
lods
imul
dec
hlt
cmpsl
push
mov
shr
imul
inc
push
lea
or
push
xlat
hlt
inc
jb
or
pop
lret
xchg
pop
push
dec
push
dec
int
add
push
subl
hlt
fs
cmpb
shlb
pcmpgtb
push
les
imul
repnz
pop
fadd
jnp
les
std
push
loopne
xlat
icebp
leave
cmpsb
mov
gs
sarl
int3
mov
xlat
sub
notb
dec
int
nop
cmp
inc
sub
inc
inc
adc
push
xchg
in
push
daa
pop
pop
adc
and
cmc
nop
jmp
enter
jmp
les
das
bnd
jle
jmp
and
and
pop
lcall
mov
outsb
filds
faddl
inc
mov
push
idivb
jg
nop
cltd
pop
cmp
jge
or
gs
imul
clc
mov
rclb
fcmovnu
push
and
sub
int3
xor
sarl
ljmp
and
pop
push
jns
adc
mov
mov
dec
stos
dec
int
mov
dec
sub
subl
and
dec
jns
xchg
mov
lods
insl
decl
int3
cmpsl
pop
sub
and
mov
sub
call
xor
sub
xor
adc
sub
sub
fisttpll
call
lock
mov
pop
dec
jne
mov
sub
das
enter
imul
cmp
je
cmp
sub
and
mov
mov
xchg
dec
or
adc
and
push
mov
fisttpl
dec
sbb
popa
adcb
xor
mov
push
or
jns
dec
sbb
sbb
jne
or
out
jmp
xor
mov
lahf
push
test
ds
dec
int
in
sbb
mov
pop
aaa
lock
cmpsb
or
enter
sub
xor
lods
or
aam
shlb
sub
adc
test
dec
cmp
xor
inc
dec
xor
js
pop
stos
inc
mov
and
lods
sub
movsl
xchg
and
push
pop
add
sbb
adc
adc
popf
mulb
or
xchg
and
jge
ljmp
ljmp
pop
lret
je
or
push
daa
sbb
sub
cmp
cmp
in
jmp
jecxz
sub
jle
sbb
adc
outsl
xchg
inc
leave
xchg
xchg
ret
mov
lock
stos
push
sbb
dec
jle
fistps
pusha
loopne
adcb
into
mov
mov
loopne
inc
sub
push
or
subl
cs
in
inc
dec
into
sub
sbb
and
jns
iret
sti
test
xchg
xchg
add
scas
pop
push
je
decb
push
pop
sub
in
sbb
adc
inc
in
sbb
dec
repz
inc
ljmp
jne
dec
sahf
push
inc
mov
and
call
add
push
mov
jle
add
fstpt
ret
jg
fisubl
adc
sub
jg
push
adc
lods
pop
les
lahf
add
sbb
icebp
iret
lea
sub
xchg
mov
xchg
sbb
loop
call
and
add
ljmp
movlps
inc
rcrl
adc
adc
push
sub
fdivl
into
roll
iret
gs
fsubrl
jge
push
je
push
mov
pop
inc
sub
xchg
and
sbb
xor
cmp
mov
lret
jmp
aam
movsb
lods
inc
shrl
jmp
sahf
push
adc
shlb
dec
or
je
popa
fcomps
sub
imul
lret
cs
cmc
jno
xor
mov
jae
popf
in
sub
in
jo
in
mov
mov
jl
mov
ljmp
gs
pushf
lahf
or
orb
cltd
cmpsl
hlt
and
mov
inc
mov
mov
imul
xchg
xchg
and
mov
xchg
cwtl
jp
and
inc
pusha
mov
test
mov
cwtl
cmp
jmp
push
inc
mov
enter
add
test
dec
mov
adc
out
fdivrs
cltd
ljmp
bound
xchg
pushf
test
nop
and
push
pop
int
leave
dec
mov
dec
mov
and
movsl
ja
or
push
jge
pop
bound
inc
popa
outsb
sub
imul
mov
enter
push
sbb
jne
int3
push
fs
inc
sbb
jae
insb
pop
jns
rcr
stos
js
iret
dec
imul
and
das
aaa
insl
addr16
jne
push
mov
jge
pop
jbe
in
pop
fisubl
xor
pop
add
test
mov
movsl
in
push
lods
cmp
pop
inc
or
or
lea
or
push
pop
lea
push
orb
rcl
xchg
xor
adc
rcl
jge
push
sahf
jnp
adc
pop
xor
je
andb
aas
test
sub
lcall
jno
ja
add
mov
sub
popf
aam
push
push
add
das
sub
cmp
push
or
daa
push
nop
sbb
mov
cmp
xor
add
sub
repnz
or
or
sbb
lea
sub
jo
jae
fistpl
jo
imulb
adc
jge
rorl
jae
mov
mov
jle
xchg
sbb
lret
lea
insl
pop
jnp
mov
aas
movb
addb
cmp
inc
stos
sbb
rorl
inc
pop
push
test
cmp
negb
jg
mov
sbb
mov
repz
add
lods
rorb
shr
cltd
and
fdivs
jne
xor
adc
add
lock
pop
mov
mov
pop
test
push
fwait
or
or
sbb
ret
inc
inc
jne
lret
mov
push
sbbl
out
lock
jo
int3
jbe
in
and
subl
mov
push
cmc
call
dec
mov
into
push
inc
pop
add
dec
or
push
rcrb
adc
cmp
aaa
leave
dec
or
xor
into
and
add
mov
lea
mov
pop
mov
stc
enter
testl
push
shll
cmp
mov
in
add
sbb
dec
ror
cmp
xchg
add
dec
ror
and
sbbb
lods
mov
leave
cmp
lock
ret
adc
xchg
adc
enter
sbb
xchg
xor
shrl
sbb
xchg
and
shll
mov
hlt
inc
cmp
inc
cmp
popl
inc
jnp
dec
and
mov
popf
sub
xchg
stos
xchg
mov
enter
mov
adc
iret
or
inc
jo
lret
sbb
jo
nop
pusha
push
mov
and
popl
les
jo
je
mov
inc
jl
mov
pushf
and
mov
test
in
test
and
clc
xor
and
push
xchg
xchg
lods
xchg
fs
jnp
pushf
mov
scas
int
fisttpll
out
mov
fmul
sbb
and
mov
cltd
rcll
ja
pop
xchg
xchg
test
or
sbb
dec
dec
fimull
push
popf
lods
and
ret
jmp
mov
xchg
and
lds
mov
pop
jge
je
imul
and
call
enter
ret
test
or
enter
sub
rclb
aam
and
pop
inc
fdivrl
lock
test
lods
and
call
xchg
aad
mov
adc
lret
cmpsb
inc
xchg
xor
hlt
mov
int
scas
sub
pop
inc
lds
mov
mov
xor
and
lea
test
lds
mov
and
lea
sbb
stos
push
ss
js
popl
mov
js
popl
mov
inc
adc
sbb
outsb
xor
sub
xor
xor
enter
cmp
lds
jno
bswap
hlt
call
dec
call
or
adc
or
adc
loopne
leave
add
dec
stc
or
inc
or
and
mov
xor
repz
pop
cld
mov
movsb
pop
dec
cmc
sub
xchg
adc
lea
addr16
and
or
orl
incb
or
xor
push
jbe
ret
pop
shl
lock
insb
and
loopne
addl
inc
add
popf
insb
lahf
rorl
mov
mov
mov
cs
add
loop
mov
add
xlat
xor
and
cmpsl
imul
js
push
adc
inc
push
add
add
iret
xor
and
aam
repnz
in
cmp
ds
lcall
ret
mov
pop
pop
and
in
add
pand
and
lods
out
icebp
shrl
xlat
and
call
into
es
cmp
xor
cmp
scas
adc
jl
enter
xchg
adc
and
pusha
adc
test
inc
sbb
inc
xchg
inc
std
jb
xor
cmp
cwtl
subb
xor
cmp
sub
cmp
sub
cmp
and
pusha
and
nop
imul
cwtl
std
sbb
lea
cmp
jns
or
mov
push
test
add
mov
fs
mov
rol
inc
or
and
andl
push
enter
adc
fs
daa
mov
add
pop
adc
add
adc
jb
or
inc
add
cmp
adcl
adc
enter
out
ret
adc
and
pop
out
loope
mov
aaa
ret
sbb
lea
cmp
sbb
xor
cmp
mov
fdivr
mov
sbb
flds
outsl
inc
and
popa
mov
cmp
and
inc
es
and
rolb
xchg
mov
xchg
mov
xchg
dec
or
mov
popa
popf
insl
enter
hlt
and
xchg
dec
mov
test
or
pop
xor
adc
or
movsb
in
cmp
neg
inc
dec
and
pusha
dec
mov
shll
mov
jle
sub
test
adc
mov
test
and
aam
sbb
add
and
cmp
aam
mov
shl
sbb
xchg
cmp
gs
lods
les
sbb
mov
fistpll
and
hlt
inc
push
and
xor
rcr
xchg
jmp
sub
or
xchg
lds
adc
xchg
stos
ja
inc
adc
xor
leave
mov
cmp
into
enter
ret
pop
pop
cmp
add
int3
or
jb
or
out
jmp
add
rcll
pop
test
jle
test
xchg
cmp
loopne
sub
and
arpl
lret
xor
add
adc
dec
jb
ss
cmpb
xchg
sub
xor
or
sub
and
xchg
adc
xchg
ret
pop
pop
xor
mov
inc
jmp
or
test
imul
mov
ret
movsl
jno
xchg
adc
adc
add
and
or
fdivrl
xor
les
add
daa
dec
mov
add
mov
mov
pop
clc
add
xchg
xor
cmc
or
movl
xor
push
fcmove
push
les
dec
or
subl
xor
or
es
sbb
lods
push
es
adc
pop
and
nop
sbb
pop
cmp
and
nop
and
or
and
and
cmp
and
nop
xor
push
cmp
and
nop
cmp
or
cmp
mov
mov
jmp
adc
cmp
sarl
insl
movb
into
xchg
xchg
or
roll
mov
jmp
push
and
lahf
sbb
cmp
xchg
pop
sub
pmulhuw
sub
pop
mov
and
enter
sub
or
js
adc
sub
or
or
lret
or
add
add
or
xor
xorl
aas
adcl
ss
leave
aaa
into
adc
add
cwtl
push
cmpsb
test
shlb
fidivs
add
add
xchg
pop
lcall
imul
pop
lcall
or
xchg
and
add
pop
adc
push
lock
sbb
or
fsubl
inc
or
aas
sub
into
mov
adc
xchg
adc
sbb
mov
and
test
cltd
push
dec
xchg
mov
movsl
and
push
sbb
std
cwtl
or
xchg
test
sbb
in
dec
mov
jge
sub
dec
rclb
inc
push
aas
xchg
cmpsl
xchg
mov
repnz
sbb
dec
xchg
inc
jns
or
sbb
add
push
lahf
xchg
cmp
leave
sbb
xchg
adc
popf
fisubs
xor
into
xchg
dec
std
push
test
dec
xor
mov
lret
xchg
xor
dec
xchg
and
push
incb
and
mov
xor
xchg
xchg
sbb
xor
in
and
lahf
xchg
inc
inc
xchg
add
or
mov
xchg
stc
sub
or
nop
sbb
or
cmp
lret
xchg
xor
sbb
in
pop
pop
je
ljmp
mov
incl
mov
inc
test
push
sbb
lods
adc
push
inc
lahf
lret
scas
mov
in
dec
scas
rcrl
dec
rclb
hlt
xchg
jbe
dec
xchg
push
nop
push
add
in
paddq
push
pop
xchg
cmp
or
aad
test
and
nop
sub
push
cli
dec
inc
popf
xchg
push
rolb
rolb
rorl
or
popf
pop
and
dec
push
daa
jns
or
xor
sbb
pop
push
mov
rclb
xchg
xchg
fimuls
lahf
xchg
cli
movsl
or
aas
xchg
cmp
xchg
pop
aas
xchg
cmpsl
xchg
inc
jo
dec
xchg
adc
push
push
std
and
xstore-rng
cmpsl
xchg
loop
pop
and
or
push
repz
jo
lahf
add
sbb
sub
cmp
jmp
mov
mov
jno
fidivl
xchg
fiadds
dec
xchg
mov
xchg
xchg
cmp
jmp
or
inc
xchg
jmp
xchg
push
or
push
pop
xchg
xor
lods
xor
daa
in
jl
add
sahf
pop
aaa
xor
push
imul
dec
pushf
test
jge
jae
xchg
push
sahf
xchg
jmp
jp
xchg
or
js
repnz
test
and
sub
add
sub
push
xchg
add
push
xchg
or
mov
inc
xchg
stos
dec
inc
jo
dec
xchg
les
xor
sbb
sahf
sub
inc
loop
ucomiss
cmp
or
cli
xlat
fldenv
push
xchg
xor
sub
sahf
fisttpl
ret
add
pop
mov
push
pop
pop
dec
sub
inc
or
mov
mov
psrld
or
cli
or
inc
sub
xchg
push
jecxz
adc
sbb
xchg
popa
mov
cld
jle
xor
pop
ret
cs
mov
xchg
aam
mov
push
aam
sbb
and
mov
or
add
das
and
cmp
dec
push
int3
lock
shrb
mov
and
ja
push
inc
mov
icebp
mov
mov
loop
das
sub
test
adc
clc
jb
mov
lret
push
adc
fiaddl
call
std
mov
mov
mov
pop
rdmsr
adc
fadds
add
cmp
cli
aaa
rorb
inc
jl
lods
mov
insb
inc
mov
pop
push
push
rorb
and
pop
test
sub
xor
jnp
je
repz
adc
fadds
and
add
inc
stos
test
lret
das
fistpl
or
orb
jmp
addl
lea
jmp
fidivrs
enter
bound
adc
adc
lods
add
jno
and
xor
add
loope
jo
and
or
adc
or
adc
or
dec
add
adc
sbb
mov
int3
cmp
add
mov
adc
xor
or
or
and
sbb
or
and
adc
mov
push
int3
cmp
xchg
mov
and
adc
or
adc
dec
jmp
jp
mov
sbb
adc
popa
les
fldl
mov
ret
add
adc
icebp
adc
pop
daa
jmp
jnp
mov
mov
push
int3
cmp
xchg
mov
jo
inc
sbb
and
add
xchg
jmp
jns
or
or
adc
fisttpll
mov
push
sbb
jns
add
je
pop
mov
jnp
adc
or
push
inc
cmp
push
lods
add
pop
repz
pop
adcl
pop
in
sub
add
stos
mov
add
push
xchg
adc
add
adc
mov
adcb
push
fcompl
mov
xchg
pop
jbe
inc
add
adc
xchg
out
push
fmuls
or
popf
rorl
fmuls
int3
mov
push
add
and
add
dec
push
pusha
pop
add
pop
push
pusha
pop
add
jbe
pusha
pusha
add
cwtl
push
pusha
fs
test
pusha
push
mov
pop
subb
pop
mov
add
jns
push
inc
je
inc
xchg
and
add
sub
jl
add
stos
repnz
nop
mov
test
or
test
cmp
sbb
lret
pop
repz
add
in
push
xchg
test
add
push
mov
mov
jae
or
push
jns
outsb
enter
mov
push
pop
test
push
add
in
push
lods
fld
cmpsb
loop
sub
xchg
lret
and
cmp
or
data16
add
mov
sub
lods
test
mov
fnstenv
push
shll
scas
enter
xor
nop
mov
adc
mov
shll
or
insb
aaa
push
push
fxch
or
dec
daa
stos
mov
adc
push
shlb
mov
sbb
cmp
dec
stos
mov
sub
rclb
dec
lret
pop
push
fsubl
rep
cs
push
out
orb
subl
add
or
enter
in
orl
mov
mov
hlt
add
insb
push
movsb
sub
clc
test
mull
cld
or
adc
mov
movl
adcl
mov
xchg
rcrl
out
mov
add
jle
push
inc
sbb
mov
subb
adc
cmp
and
jb
movsl
dec
cmc
cmp
adc
push
push
push
jg
adc
add
pop
andl
stos
push
sbb
loopne
sbb
inc
pop
inc
sbb
xchg
int3
clc
adc
ljmp
dec
sub
and
jl
lock
xor
sti
shrd
in
fdiv
xlat
jnp
sbb
add
dec
push
repz
pop
sub
push
xchg
shr
push
repnz
outsb
push
jge
xchg
ja
dec
adc
add
mov
mov
add
or
sahf
sub
pop
jne
xor
and
loopne
push
or
add
mov
in
movsb
jns
push
mov
and
orb
jmp
cltd
cmpsb
pop
push
adc
mov
fidivrl
arpl
xchg
mov
mov
or
std
sbb
fnsave
and
repz
adc
adc
dec
lret
adc
ljmp
adc
cmp
pushf
dec
mov
icebp
shrb
mov
cwtl
push
cmp
jb
sbb
les
inc
lcall
lahf
xor
or
xor
pop
popa
add
into
adcl
adc
cwtl
les
mov
test
inc
mov
bound
or
add
int
out
and
std
lahf
mov
sub
mov
sbb
mov
sbbb
aaa
daa
inc
test
xchg
mov
or
les
lods
sbb
mov
adc
movsb
mov
adcb
jne
aas
mov
mov
lods
les
andb
test
adc
or
addb
mov
mov
cld
bound
cwtl
cmp
and
sbb
or
fisttps
ret
xor
sbbb
mov
and
mov
adc
mov
mov
out
dec
test
add
jno
sbb
inc
nop
bound
adc
jne
add
adc
mov
mov
sub
jns
adc
sub
sbb
xchg
test
jb
inc
mov
addb
les
sub
add
dec
out
pop
sbb
mov
push
aam
out
and
adc
or
adc
daa
movsb
cmpsl
cwtl
bound
sub
pop
cmpsl
sub
sbb
inc
andb
mov
xor
add
scas
cmp
mov
icebp
xlat
sub
sub
cmpsl
cwtl
push
movsb
or
adc
pushf
cmpsl
cwtl
rorb
add
sub
sbb
xor
mov
sub
add
add
gs
sbb
mov
pop
push
lods
dec
sub
cwtl
adc
nop
sahf
popa
inc
pushf
xor
ds
inc
xchg
sahf
popa
mov
mov
cmp
push
std
leave
jle
sub
in
add
mov
pop
test
mov
dec
adc
adc
inc
dec
cmpsb
lahf
dec
jnp
loope
inc
or
mov
in
lahf
insb
aas
sahf
pop
test
jl
push
fstps
pop
add
aad
mov
dec
jnp
loope
inc
or
mov
outsl
mov
daa
repz
mov
test
adc
add
mov
push
cmp
std
pop
xchg
ficomps
sbb
nop
or
and
je
xor
mov
and
push
sub
add
es
negl
adc
test
inc
xchg
mov
or
dec
icebp
sahf
test
stos
fs
movsb
dec
test
inc
xchg
mov
mov
adc
stos
jnp
fisttps
aad
push
and
stos
xor
inc
add
aad
mov
mov
clc
push
inc
dec
mov
dec
jp
xor
pushf
sbb
sub
jo
aaa
dec
test
cwtl
adc
xor
pop
pop
lock
out
sarl
sub
dec
cltd
scas
hlt
xchg
ljmp
and
sahf
jl
ret
adc
jp
sbb
les
mov
sub
lret
adc
scas
pop
xor
subl
lock
push
test
pushf
adc
les
stos
fbld
or
out
mov
push
push
or
test
enter
adc
mov
sbb
fstpt
fisttps
pop
push
push
and
aam
aas
and
sti
cwtl
mov
sbbl
mov
fcoml
in
and
mov
mov
ret
adc
fchs
sbb
test
ret
cmp
mov
test
mov
pop
lret
bound
add
cmpsl
or
fimuls
mov
lock
add
addb
pop
mov
clc
push
inc
pop
mov
and
adc
xorl
fs
sbbl
inc
cmpsb
mov
add
cld
adc
rolb
mulb
jnp
loope
pop
or
icebp
or
call
es
leave
pop
add
mov
lds
mov
adc
add
sub
pop
pop
jmp
clc
push
inc
pop
mov
cmp
inc
aas
sbb
fists
mov
popf
pop
mov
dec
jnp
loope
pop
or
icebp
or
arpl
out
testl
sti
and
xor
sub
test
ja
cmp
cltd
xchg
cmp
popa
sub
mov
xor
inc
out
in
inc
add
mov
mov
cmp
iret
cmp
add
xor
xlat
xchg
fimuls
mov
and
inc
andl
aam
add
and
jge
dec
mov
xor
add
sbb
push
dec
mov
jge
push
mov
xchg
clc
rolb
mov
ret
adc
fstps
pop
test
xor
arpl
out
mov
push
testb
add
push
out
add
call
jmp
inc
push
loopne
or
and
insb
adcl
stos
fldcw
shrb
adc
mov
and
and
push
sub
loope
insb
or
mov
add
sarl
out
testl
mov
or
scas
fsts
les
adc
mov
push
adc
xor
cmc
inc
outsl
mov
and
jmp
fists
mov
mov
push
inc
mov
pushf
and
sub
jnp
jnp
loope
jb
test
mov
inc
movsb
add
pop
leave
lds
ljmp
mov
adc
lods
and
add
mov
adc
fs
mov
cltd
inc
sarb
jae
arpl
cs
dec
jnp
loope
jne
test
shrl
mov
mov
mov
out
enter
ret
mov
cld
adc
stos
xchg
fimuls
mov
and
adc
andl
mov
test
sub
pop
lds
or
stos
lock
fimuls
mov
jbe
inc
faddl
cmp
cli
fs
testl
mov
and
push
arpl
das
mov
dec
jnp
loope
jge
test
enter
ds
in
test
jmp
neg
leave
out
mov
jle
fcmove
adc
hlt
add
jg
jl
mov
or
push
and
pop
fs
cld
adc
push
and
xchg
sti
pop
daa
mov
test
int3
adc
add
add
ljmp
imul
scas
mov
xchg
inc
or
add
and
push
mov
lods
add
into
or
sub
inc
adc
add
inc
xor
jge
aas
mov
ficoms
fstps
dec
inc
sbb
add
lock
jg
jge
dec
mov
and
push
inc
roll
sahf
and
jb
add
addr16
rorl
push
and
pop
sub
inc
sub
add
mov
arpl
cmpsl
mov
adc
xchg
lret
inc
xor
add
cmpb
cwtl
aas
pop
adc
mov
mov
test
aam
in
cmp
sbb
in
pop
xor
mov
and
mov
test
inc
mov
jge
and
cmc
ja
sub
inc
cmp
adc
dec
pop
xchg
mov
inc
add
lret
jno
ficoms
fsts
push
test
mov
or
mov
fsts
pop
sbb
dec
or
addr16
mov
testb
add
mov
fsubl
and
testb
insb
add
jle
cld
add
and
push
xchg
fstl
je
in
cli
cmp
stos
outsl
lret
pop
fsubl
adcb
xchg
js
jl
pop
pop
inc
dec
orb
mov
push
and
or
adc
rep
es
aad
loope
lods
push
pop
fstpt
loope
repz
xor
adc
ficoms
adc
add
inc
mov
out
mov
or
jg
jo
cmp
inc
orb
mov
jno
sbb
inc
mov
mov
out
ja
rcrb
or
cmp
inc
fistpll
jmp
xor
cmp
add
or
push
insl
pop
jl
pop
out
inc
adcb
mov
ja
int3
push
mov
push
add
repz
push
orl
scas
mov
or
xchg
clc
sub
adc
sbb
sbb
insb
shlb
imul
insb
pop
add
xor
jo
imul
scas
int3
cmpl
push
cmp
adc
mov
sahf
fadds
lret
mov
jl
aad
or
sub
xorb
fstl
and
testl
das
and
fmuls
inc
or
xchg
cmp
and
fs
and
cs
movsb
and
dec
sbb
sbb
mov
push
adc
testb
or
nop
xor
sbb
add
cmp
jne
loop
fstl
pop
add
or
fiaddl
orl
or
and
or
jne
cwtl
ljmp
inc
inc
or
xor
pop
mov
inc
cmp
xor
fucom
add
push
adc
fisubrl
out
xor
inc
adc
arpl
add
cmc
add
push
inc
cmp
fsubrp
je
jle
out
push
lss
sub
mov
jbe
iret
add
pushf
inc
add
dec
push
xor
pop
filds
xchg
inc
adc
xchg
mov
and
inc
mov
imul
nop
pop
gs
jl
mov
cs
and
insl
test
sti
sub
movzbl
add
sbb
aam
and
mov
jmp
adc
and
mov
push
clc
adc
mov
sub
lcall
add
sub
jno
push
mov
add
ret
mov
fisttps
ljmp
and
jbe
sub
push
ljmp
inc
iret
enter
xchg
movl
and
fimull
mov
jl
popf
test
jg
mov
jne
or
cmp
flds
arpl
push
pop
shll
or
dec
pop
adc
adc
inc
sbb
sub
xor
in
add
sbb
pushf
test
or
ds
outsl
mov
mov
lea
ret
adc
cmp
ror
fmull
inc
sub
cld
inc
inc
addr16
adc
les
les
or
adc
enter
jl
clc
and
dec
dec
sbb
add
enter
sbb
adc
testl
pusha
imul
pusha
arpl
or
push
fs
gs
pop
mov
push
sbb
loopne
pop
push
inc
add
push
sbb
mov
inc
mov
andl
aam
mov
pop
or
inc
and
and
mov
and
aam
ret
sbb
loopne
insb
or
or
fs
or
lock
sbb
mov
xchg
or
dec
sub
aam
mov
fists
push
loop
dec
test
loop
push
xor
gs
jbe
mov
mov
bound
or
je
aam
jbe
lock
adc
notl
test
push
jle
adc
mov
in
int3
sbb
push
dec
fdivrs
pop
clc
je
nop
or
adcb
pop
clc
adc
aam
adc
sbb
cwtl
ja
aam
inc
xchg
nop
inc
ja
inc
inc
push
aam
and
mov
pop
loopne
xor
in
movsl
sbb
rclb
lock
inc
inc
and
or
cmpsl
cld
mov
jno
mov
cld
test
xchg
cmpsl
aam
dec
enter
cmpsl
lock
inc
push
pop
push
jb
jo
rcl
pusha
add
add
adcl
sub
das
inc
jge
adcb
roll
add
leave
je
xchg
mov
mov
lea
pop
std
aad
subl
or
inc
jo,pt
jbe
jge
jne
andl
dec
inc
xchg
push
rol
movsl
push
std
cmpsb
data16
ret
inc
movzbl
mov
xchg
sbb
xlat
dec
js
push
and
mov
and
push
cmp
push
int
xor
cmc
jecxz
sbb
cmp
fbstp
adc
xor
xor
add
out
sbb
aaa
mov
das
jle
add
dec
aas
push
mov
inc
xor
cld
and
inc
sbb
cmp
decl
and
test
inc
outsb
aaa
fcoms
out
inc
dec
adc
xor
repz
sbb
inc
dec
jmp
adc
mov
fidivl
das
movsl
dec
inc
aas
mov
add
or
inc
das
or
dec
pop
rcrl
cmp
or
mov
cmp
ret
fimull
mov
les
out
daa
mov
add
std
adc
aad
loop
shrb
push
mov
dec
psraw
cmpxchg
dec
or
test
in
mov
dec
in
loop
dec
in
push
rcl
xor
and
and
cmovs
pop
stc
push
je
in
pushf
adc
jp
add
sbb
adc
test
and
and
sbb
push
inc
sbb
mov
and
fs
jae
les
adc
push
adc
dec
push
pop
push
xchg
dec
movsb
pusha
das
cs
aas
lea
sbb
add
int3
roll
dec
test
aas
and
pushf
dec
xchg
lret
dec
xchg
cli
or
pusha
sbb
mov
dec
jle
push
mov
dec
cmpxchg
dec
or
mov
mov
inc
adc
xchg
test
mov
lock
push
xchg
outsl
push
xchg
sahf
push
test
mov
movsb
sub
lea
adc
push
sti
adc
sti
adc
mov
push
push
jle
enter
ret
pop
bound
pop
loopne
in
lea
in
xchg
push
psrlq
ret
pop
idivl
test
push
das
pushf
adc
iret
or
testl
push
adc
push
sti
sub
fdivrs
and
adc
cld
sub
bound
push
pop
les
dec
lea
inc
mov
dec
and
mulb
jg
mulb
scas
push
jl
pusha
mov
or
cmc
push
push
les
les
push
mov
and
mov
das
push
cmpxchg
or
mov
movsb
push
movsl
push
xchg
test
and
cld
and
pop
mulb
ss
jl
rorb
adc
jge
inc
mov
jb
push
inc
mov
mov
and
mov
adc
pop
pop
mov
inc
fcoms
aas
xor
sbb
add
inc
cmp
xrelease
fisttpll
int3
sub
pop
jg
negb
mov
pop
std
or
pop
jge
icebp
int3
pop
and
es
pop
decb
cmpxchg
pop
or
xor
lods
inc
pop
in
jmp
pop
or
or
lods
ds
pop
in
insl
inc
pop
in
pushf
inc
pop
mov
adc
pop
sti
adc
sti
adc
les
sub
out
cmpsl
fdiv
sbb
pop
mov
pop
xor
gs
aas
fadds
mov
adc
pusha
sti
adc
pusha
scas
les
push
jbe
les
popa
sub
dec
bound
mov
bound
mov
bound
in
repz
bound
inc
arpl
test
mov
sub
fdivr
and
fs
shlb
fs
add
gs
imul
mov
xchg
push
test
dec
add
mov
shl
add
mov
cmpsw
xchg
sbb
jle
aas
cmp
xor
add
scas
adc
add
mov
mov
fdivs
inc
dec
and
hlt
mov
bound
mov
jne
fsubrs
inc
pop
inc
mov
das
inc
fnsave
jne
jle
lods
movq
lea
fbstp
cmp
loope
leave
mov
xor
enter
pop
clc
xor
dec
mov
lahf
pop
outsl
push
mov
cli
mov
add
mov
or
jmp
enter
push
popf
loope
or
mov
and
mov
push
jmp
fwait
sbb
in
jge
cld
lea
data16
mov
aas
mov
xchg
inc
inc
inc
cmp
jle
add
fisttps
jne
fwait
pop
jmp
daa
cmp
fs
add
or
adc
inc
leave
mov
sub
inc
cmpsl
dec
bswap
push
int
lret
test
into
enter
inc
nop
lock
loope
mov
cmp
cli
addl
or
rorl
cvtpi2ps
in
cli
cmpsl
pop
aad
sbb
js
xor
add
jmp
sub
jmp
dec
sar
jns
cmpl
pop
dec
sub
dec
call
test
inc
fwait
fs
adc
and
nop
lret
sbb
or
iret
inc
mov
dec
sub
popf
ret
ljmp
ds
mov
adc
dec
lock
fcoms
sub
dec
mov
rclb
mov
inc
das
shl
cmpsb
push
dec
lods
and
ret
mov
adc
mov
jno
sahf
and
enter
sub
inc
sub
push
leave
test
mov
push
ret
pop
cwtl
push
lea
call
mov
jno
inc
loopne
or
int3
fstp
dec
pop
ret
cmp
js
mov
push
cmp
js
js
out
sti
in
cmc
dec
outsl
mov
and
jmp
scas
mov
adc
fnstenv
std
jb
jge
adcb
jle
int3
cwtl
daa
mov
push
je
or
push
add
adc
cmp
fadds
cmp
lea
xor
push
mov
pushl
sbb
xorb
push
cmp
or
lea
add
jns
jno
aam
cmp
mov
call
cwtl
inc
push
movl
ljmp
imul
lahf
imul
into
imul
lcall
icebp
or
add
or
xchg
insb
xchg
shrb
insb
lret
sbb
cltd
mov
out
push
mov
jge
cwtl
insl
jge
insl
push
lret
test
cmp
lods
add
lea
sbbl
push
inc
repz
cmp
mov
mov
inc
icebp
dec
mov
push
inc
or
and
sbb
mov
stos
mov
jmp
and
lret
inc
inc
add
jns
das
scas
xor
sahf
jo
or
or
dec
ljmp
aad
insl
pop
mov
jae
call
scas
lods
mov
jb
pop
mov
pusha
test
mov
aaa
or
arpl
cmp
sbb
xchg
jo
ret
and
sub
jg
pop
adc
push
xchg
xor
loopne
sub
mov
aad
out
cltd
inc
sub
mov
loopne
push
pop
cld
pushf
mov
idivl
mov
mov
or
repnz
inc
or
scas
sarb
jle
lea
lock
adc
inc
mov
jno
add
sarb
mov
mov
add
loopne
and
stc
cmp
dec
mov
xor
adcb
ret
xchg
ss
mov
sti
pop
sub
lret
xchg
sbb
inc
call
or
push
test
stc
ret
mov
pop
lods
sahf
push
ret
inc
jno
sarl
xchg
xchg
push
xchg
xchg
movsb
xor
and
push
int
movsb
subl
mov
in
pop
lret
subb
push
cmc
lods
xor
pop
hlt
movb
adc
mov
and
pusha
mov
push
inc
call
jns
outsb
lea
inc
dec
or
movsl
lods
dec
push
xchg
xchg
std
stos
mov
pop
adc
xor
mov
mov
mov
aas
xchg
mov
mov
xor
inc
dec
dec
shrb
sbb
cmp
mov
jp
sub
push
push
push
jne
push
je
adc
cmp
and
sbb
mov
and
pop
jns
enter
sub
push
std
or
or
sbb
repnz
das
xchg
mov
inc
je
mov
je
mov
je
test
sbb
mov
jne
mov
jne
mov
sub
pop
push
or
sub
hlt
sbb
and
dec
jbe
in
xor
and
pop
adc
or
adc
adc
inc
or
push
sarb
sub
sti
stc
les
std
or
ret
mov
fwait
shrl
jl
test
loope
and
jbe
and
jbe
and
ja
and
ja
and
int3
clc
add
fsubp
icebp
aas
js
loope
js
mov
js
mov
js
in
adc
jns
inc
inc
jns
jbe
jns
movsl
inc
jns
adc
jns
adc
jp
adc
sti
adc
scas
ficoms
stos
sub
fdivr
and
jnp
das
push
jnp
loope
and
loop
jnp
gs
aas
fadds
scas
test
les
jl
les
jge
mov
jge
mov
jge
mov
jge
in
and
jle
push
inc
jle
xchg
in
mov
jle
adc
jle
adc
jg
adc
sti
adc
jg
les
cmpb
cmpb
subb
lods
sbbb
fistps
pop
bound
inc
test
jge
out
jge
adc
sahf
mov
xor
or
loop
pop
fs
pop
add
cmp
cld
xchg
push
add
push
adc
push
in
push
sbb
cmp
push
adc
mov
xor
cmpxchg
sbbl
cld
orl
sub
cmpxchg
cmpxchg
test
out
int3
jg
daa
test
push
test
mov
lea
test
loope
xchg
test
push
test
ds
xlat
xchg
les
xchg
mov
xchg
addb
fiadds
sbb
mov
adc
mov
adc
mov
adc
sti
adc
mov
adc
mov
adc
scas
les
fdivrs
mov
mov
xor
gs
fadds
mov
adc
mov
adc
mov
les
les
lea
mov
mov
mov
mov
mov
mov
mov
mov
lods
pop
std
jp
push
sub
push
adc
aaa
adc
jp
or
jmp
add
repz
push
gs
repz
adc
sti
adc
sti
adc
nop
cli
adc
adc
int3
cld
das
pop
xchg
mov
pop
ret
pop
bound
adc
pop
mov
xchg
pop
bound
xchg
lea
xchg
xchg
push
xchg
xchg
adcl
push
push
std
fdivr
sub
xchg
in
pop
pop
xchg
sub
mov
popa
aas
jae
xchg
in
mov
out
stc
jge
or
aad
lods
loope
push
clc
or
sub
push
xchg
sbb
mov
cmpxchg
xchg
or
sub
lods
pop
inc
xchg
in
mov
in
mov
add
sti
adc
adc
cwtl
push
or
cltd
les
sub
in
fadd
adc
pop
bound
stc
jge
or
lcall
sbb
jo
lahf
cli
nop
daa
mov
jno
pop
movsb
out
adc
xor
dec
jle
mov
jns
fs
scas
clc
mov
clc
scas
in
mov
or
jmp
js
fimull
xor
fldenv
and
xor
outsl
inc
add
pop
daa
shr
test
shl
cli
inc
add
adc
sub
and
ss
xor
sub
inc
sbb
jne
push
je
sbb
out
cmp
jge
shrb
cmp
and
dec
mov
mov
lsl
mov
xor
add
pop
pop
mulb
pop
cli
lret
movsl
adc
pushf
pop
and
adc
and
std
ficomps
aas
jg
iret
enter
add
sbb
push
push
ljmp
mov
push
mov
push
or
push
add
add
cmp
jl
mov
sub
lock
jle
jb
je
jbe
js
pop
dec
mov
jae
cmp
mov
adc
nop
inc
jne
pop
sbb
add
in
mov
js
imul
jmp
push
sub
mov
cld
mov
test
xchg
push
inc
add
in
xorl
add
mov
or
jo
test
add
lret
or
aaa
icebp
test
push
outsl
mov
mov
inc
lahf
in
add
in
xor
ljmp
mov
sti
adc
mov
xor
test
aas
mov
or
and
addr16
adc
arpl
push
sbb
popfw
or
mov
jnp
sbb
pop
hlt
fisubs
sub
in
mov
xchg
andl
shl
mov
xchg
dec
mov
sarb
int3
loope
movsb
cmpxchg
cmp
ja
xchg
movsb
sbb
repz
fadd
and
imul
pop
cli
movsl
adc
pop
je
xchg
mov
cmpsb
test
sbb
loop
cmpsl
pop
bound
pop
bound
cmpsl
lea
test
fcoms
xchg
subb
push
push
cld
fdivr
sub
in
pop
dec
test
inc
test
in
add
in
xor
mov
adc
cld
daa
or
push
stos
push
and
mulb
loop
pop
mov
lods
aad
pop
lods
jge
mov
outsl
or
jge
arpl
pop
dec
leave
fstpt
mov
mov
ret
pop
pop
push
fdiv
scas
xchg
es
xchg
push
scas
xchg
test
scas
cld
and
scas
mulb
sub
mov
inc
jle
pop
inc
js
pop
ret
pop
xlat
mov
bound
mov
dec
enter
je
jge
mov
mov
or
mov
or
jge
outsl
mov
mov
mov
bound
mov
bound
pop
bound
adc
pop
lock
fsub
pop
mov
mov
mov
sub
mov
mov
mov
mov
lahf
fadd
es
jno
pop
sbb
addl
iret
loope
jg
test
inc
mov
and
mulb
cmpsl
mov
and
mov
mov
mov
jge
scas
mov
xor
bound
pop
bound
mov
pop
bound
mov
adc
pop
fmuls
loope
mov
sub
mov
fistps
pop
push
push
inc
push
mov
pop
outsl
or
jmp
push
and
test
sub
sbb
mov
mov
sti
and
fisttpl
pop
inc
add
xor
stos
and
mov
inc
mov
in
mov
mov
ljmp
mov
sti
adc
push
push
push
adc
out
dec
das
mov
jl
out
sbb
add
or
shrl
jno
lea
sub
pop
mov
jbe
sar
xchg
pushf
aas
pushf
jecxz
out
idivl
jg
ret
clc
ret
ret
ret
ret
ret
ret
imul
and
pop
adc
scas
and
cld
inc
clc
les
les
lds
mov
push
lds
xchg
push
lds
loop
pop
sub
xor
jg
ret
lea
aas
sahf
popa
cld
repz
enter
psrad
pop
enter
xor
leave
jg
leave
scas
mov
xlat
adc
and
cld
inc
lret
lret
lret
xchg
lret
or
lret
lea
psrad
pop
int3
push
jmp
xor
mov
nop
rclb
pop
aas
and
repz
add
sub
inc
inc
dec
std
pop
lods
xor
xor
mov
xchg
in
dec
jp
dec
pop
xchg
hlt
in
cmp
jg
mov
push
sahf
shlb
cmp
cmp
divb
mov
xor
hlt
test
mov
sbbb
mov
or
mov
add
bswap
push
xor
in
pushf
mov
and
in
adc
cs
ret
cmp
test
xchg
pop
les
jl
lea
jg
mov
popf
xchg
aad
xchg
mov
mov
fwait
xchg
loopne
mov
sub
daa
xchg
lcall
push
adc
jne
jnp
mov
test
loopne
mov
push
leave
mov
cmp
add
sub
add
test
mov
test
xor
adc
xlat
or
mov
inc
mov
test
in
adc
iret
inc
mov
cli
xlat
sbb
mov
adc
adc
or
test
pop
test
mov
int3
push
movsb
lods
enter
xchg
pop
pop
rcrb
xor
sub
mov
dec
adc
sub
xor
add
and
adc
and
inc
dec
pop
adc
clc
adc
int3
sbb
mov
cmp
pushf
bound
xor
jno
mov
add
or
push
sbb
pop
popa
outsb
mov
jo
or
je
sbb
insb
hlt
iret
adc
ss
arpl
push
jo
popa
popf
pushl
mov
inc
lods
shrb
das
test
add
dec
fcoms
add
inc
inc
inc
dec
stc
bound
shrb
cmpsb
mov
jnp
push
push
mov
movsb
lods
mov
adc
inc
cwtl
mov
arpl
xor
sub
and
add
push
pushf
mov
push
std
into
xchg
dec
jge
cmp
xchg
popa
insl
mov
push
movsb
dec
lea
mov
adc
jne
sbb
clc
lds
or
insb
jp
push
cs
add
add
addr16
adc
scas
insb
mov
cmpl
insl
sahf
sub
cmpb
pop
dec
imul
insl
jbe
xchg
dec
jo
fimuls
sbb
arpl
mov
enter
jae
out
bound
xor
jle
imul
mov
mov
mov
cwtl
adc
stc
push
stos
jmp
fwait
cmp
test
jae
ss
je
cmp
sbb
dec
iret
outsl
xchg
fwait
xchg
inc
jb
in
mov
adc
ds
movsl
daa
push
cmp
test
xchg
or
adc
divl
pop
fistps
stos
addb
adc
aaa
dec
cmp
mov
add
push
add
scas
mov
scas
push
adc
fcoms
inc
ljmp
pop
clc
add
push
push
push
jns
pop
push
lcall
mov
sub
mov
xor
inc
insb
and
js
adc
dec
addr16
xchg
insl
dec
or
xchg
stc
lods
jle
inc
iret
and
add
xchg
mov
test
cld
add
ljmp
inc
jae
or
inc
popa
pop
mov
adc
push
lock
lods
imul
push
pop
add
dec
cmp
xchg
nop
mov
push
bnd
inc
and
xchg
fcompl
mov
cwtl
pop
cwtl
jns
add
pusha
jno
pop
or
push
out
es
mov
push
mov
jb
pop
push
cmc
leave
add
ja
inc
cmpsl
pop
jmp
adc
in
stc
lock
loop
mov
cmpb
inc
test
jo
mov
adc
cwtl
mov
push
mov
call
les
sub
or
insb
and
lret
rclb
call
xor
outsb
lods
pop
jp
test
xchg
call
divb
mov
inc
or
jmp
xchg
daa
jne
add
jne
add
mov
scas
sub
lcall
nop
jb
mull
mov
cwtl
fsubrl
aad
sub
cmp
jge
cmpsl
cmp
bound
arpl
inc
cwtl
and
dec
jmp
lock
sbb
push
sbb
sbb
adc
sbb
imul
not
push
fs
stos
mov
push
test
sub
sbb
das
test
sbb
sbb
adcb
pop
lock
jbe
decl
pop
iret
adc
rclb
mov
sub
or
or
or
push
lea
call
cmp
popf
xlat
mov
push
pop
xor
cmp
push
push
sbb
repz
lret
test
test
adc
mov
mov
mov
stos
adc
lds
gs
sbb
mov
loop
push
inc
rol
xor
mov
repnz
jb
jle
sbb
push
adc
dec
add
push
adc
ljmp
add
adc
push
das
adc
push
sub
or
mov
cli
std
mov
sub
sbb
add
jno
ds
orl
mov
inc
pop
hlt
dec
loopne
data16
xor
push
test
andl
inc
dec
das
inc
push
push
pop
iret
stos
and
cmp
loop
int
and
dec
data16
fstpt
fidivrl
push
test
push
add
dec
mov
adc
xchg
sti
mov
and
sbb
sbb
lock
cmp
jle
jge
fisttps
jne
rclb
push
outsb
daa
jge
and
push
xchg
sbb
in
and
jae
stc
out
aas
pop
or
adc
dec
xchg
je
leave
scas
fidivl
jnp
fidivl
or
mov
jbe
fwait
sub
or
add
sbb
mov
jmp
lea
add
jbe,pt
shll
test
ficompl
sub
jge
mov
lock
insl
adc
je
sahf
arpl
mov
fisttps
and
rcrb
sub
and
divl
pop
sbb
dec
sbb
psrld
xor
or
pop
or
or
mov
into
lock
insb
adc
xor
push
in
daa
pop
mov
pop
inc
das
call
xchg
ljmp
rorb
lock
push
sub
arpl
sub
xor
sub
shlb
push
cmp
jae
xchg
lock
imul
push
int
movb
in
lea
inc
adc
sub
jl
dec
jle
pop
xor
cmp
inc
dec
add
mov
fstpt
inc
and
mov
daa
mov
jne
js
xchg
add
lahf
add
xor
xor
jbe
xchg
xchg
mov
mov
jne
in
jg
popl
sub
jns
push
cli
dec
adc
sub
popa
sub
fwait
lret
pop
cwtl
fstl
or
dec
xchg
cltd
xor
pop
popf
mov
mov
inc
push
pop
lcall
or
dec
mov
out
inc
push
xor
arpl
hlt
fdivl
adc
sub
cmp
xlat
daa
and
mov
pop
out
sub
or
mov
mov
pop
pusha
rcrl
dec
adc
int
fidivrl
mov
sub
xlat
dec
pop
cmpsb
or
ficoml
and
leave
inc
jno
adc
mov
dec
cmp
jl
xchg
movl
and
and
sbb
push
sbb
and
push
pop
jg
xor
adcb
pop
aaa
shrl
cltd
add
cli
mov
popf
pushl
mov
jg
pushf
add
clc
add
ds
xor
cmpw
add
push
lret
mov
cmp
push
cmp
xor
sbb
sbb
inc
decb
push
sub
push
push
out
loop
adc
ret
and
inc
add
mov
stos
in
mull
mov
pop
push
pop
mov
dec
mov
mov
mov
repnz
xchg
pop
mov
mov
mov
adc
test
push
in
inc
fldt
mov
adc
push
daa
add
dec
push
sub
enter
push
leave
dec
bound
sbb
dec
sub
rol
icebp
dec
sbb
or
ljmp
push
and
inc
push
dec
test
rcrb
xchg
jno
mov
sub
stc
les
js
mov
out
cmp
cmp
dec
add
mov
inc
decl
mov
mov
inc
sub
sub
test
xchg
xor
xchg
das
adc
sbb
inc
mov
mov
int
loopne
pop
out
daa
push
js
adcl
jo
pop
dec
clc
inc
mov
inc
les
mov
and
es
mov
inc
and
pop
inc
cld
call
fs
adc
sub
jg
cmp
inc
sub
lock
clc
jns
sbb
mov
push
pop
add
pop
jne
pop
mov
shl
push
repz
push
sbb
mov
fs
sub
mov
ja
daa
and
lret
push
in
xchg
add
cmp
mov
mov
repnz
mov
sub
jno
push
dec
sbb
add
sub
out
and
test
adc
and
sub
cmpsl
test
add
adc
push
adc
xor
in
pop
adc
ret
movsl
and
popf
popf
pusha
mov
fldenv
ja
cwtl
jmp
xor
add
xor
add
arpl
test
ficoms
or
push
in
push
sahf
dec
fsubrs
and
add
push
inc
sbb
xchg
adc
mov
sbb
movsl
lahf
lods
cmpsl
xchg
movb
es
xor
loope
or
mov
test
and
jmp
push
or
push
and
lock
mov
mov
ja
and
test
cld
sahf
movsl
adc
loop
adc
inc
jo
pop
jnp
push
cmp
pop
scas
push
repz
imul
cmp
nop
test
and
lea
sub
xchg
out
xchg
movsb
cmpsl
sbb
push
or
lea
and
xor
jbe
bound
ret
cs
adc
mov
dec
loopne
jle
jl
stc
int3
inc
ret
mov
mov
push
xchg
ljmp
sub
popa
popa
or
xor
out
add
or
cmp
xchg
pop
cltd
out
jns
cs
pop
lods
jmp
ret
push
pop
pop
mov
and
out
jmp
or
sub
imul
test
into
pop
ffreep
sahf
addr16
stc
fwait
push
xor
push
add
enter
enter
cmp
mov
and
push
les
dec
inc
shlb
or
xor
xchg
xchg
mov
mov
adc
and
cld
inc
add
mov
fs
adc
inc
sub
les
mov
dec
and
dec
push
pop
faddl
movb
dec
add
ret
ja
andb
or
sub
or
jmp
dec
frstor
sarb
add
stos
xor
mov
movq
add
inc
or
xor
adc
mov
adc
xor
xor
rcrl
xchg
jbe
dec
inc
in
cmp
lods
es
jno
mov
roll
out
out
arpl
fidivl
and
ror
push
imull
clc
or
add
lods
or
add
lret
addb
mov
and
test
pop
inc
xor
call
enter
lea
pop
mov
push
inc
mov
mov
arpl
ja
sub
inc
xchg
test
pop
test
sub
adc
cmp
cmp
shrl
or
mov
scas
stos
push
adc
adc
adc
xchg
stos
negb
rclb
enter
dec
xchg
or
mov
sarb
bnd
int3
movsl
or
mov
add
lahf
sub
or
jmp
fisubrl
das
push
xor
outsb
or
pop
ret
mov
fstpl
clc
or
adc
lods
fldl
jl
jbe
jle
les
xchg
xor
test
or
inc
cmp
loope
clc
push
add
js
push
mov
testb
in
ds
mov
pop
mov
fisubl
lret
mov
paddusb
les
inc
cwtl
jns
pop
test
add
push
dec
push
hlt
std
and
cmp
sub
mov
in
test
cld
sbb
pop
lret
lret
push
nop
mov
mov
add
addb
leave
mov
aas
gs
sbb
or
jmp
sbb
mov
xor
and
rorb
xor
mov
repz
sbb
adc
les
mov
mov
or
in
dec
adc
xchg
iret
outsb
push
stos
pop
jo
xchg
loopne
jns
add
stc
arpl
cltd
sub
movsb
mov
mov
movsb
lods
ret
lea
dec
add
pop
sbb
xor
xchg
shlb
jg
popa
pop
sbb
inc
sub
ret
jmp
clc
je
test
push
mov
jbe
xor
xor
xchg
cs
add
arpl
dec
lds
call
out
ljmp
cmc
ja
adc
rcll
inc
repz
aam
pop
inc
stc
adc
or
aas
xchg
shl
dec
dec
cwtl
ljmp
jmp
outsl
decl
jns
sub
lret
icebp
rcrl
sub
call
clc
add
rolb
iret
pop
jae
mov
cld
into
subl
dec
adcb
dec
dec
aam
jecxz
popa
enter
xor
std
xchg
inc
loopne
mov
repz
scas
sub
lds
adc
push
incb
jbe
addl
ja
mov
scas
movsb
mov
jo
jmp
into
push
mov
sti
popf
sti
cmp
imull
jecxz
inc
jmp
bound
sbb
repz
fsubl
ljmp
add
dec
imul
into
sub
inc
les
into
sub
jbe
push
push
or
dec
adc
adc
or
cmp
aas
jle
sub
cmpsl
fidivs
cli
fstpt
and
bound
jo
jne
adc
add
add
sub
shr
outsl
nopl
iret
imul
xor
sbb
daa
or
add
add
mov
lea
movl
xor
jl
loop
aad
lea
or
inc
adc
and
sbb
insb
dec
or
not
and
xchg
pop
push
xor
jmp
stos
xor
sub
icebp
push
push
es
adc
mov
mov
inc
inc
std
and
mov
test
outsb
add
push
and
jbe
and
shr
dec
mov
jae
sbb
jmp
mov
repz
pop
push
ret
adc
mov
adc
in
cvtps2pd
andb
test
mov
lods
inc
push
mov
lahf
gs
xchg
jge
je
jb
in
dec
push
cmpsb
push
ds
dec
push
pop
mov
jmp
cs
call
and
fsubrs
adc
adc
xchg
add
lds
xchg
push
cmpb
jne
add
dec
adc
insl
movsl
in
in
push
push
imul
js
pushf
xor
add
dec
shr
mov
nop
mov
cmp
adc
jae
inc
call
mov
jmp
push
into
and
mov
lock
bt
jae
inc
test
test
push
push
mov
jns
orl
mov
xor
inc
adc
adc
sub
cmp
pop
adc
cmc
mov
and
shlb
pop
sub
pop
cmp
inc
fisubrl
pop
in
enter
scas
and
ret
or
inc
imul
fbld
in
or
imul
adc
rcr
and
or
and
adc
inc
sub
add
push
dec
inc
mov
test
inc
cwtl
xor
lea
adc
dec
lret
sbb
push
add
jp
jb
jb
nop
outsb
dec
inc
inc
test
push
aaa
aam
pushf
push
adc
and
and
xor
sub
iret
mov
mov
push
jmp
lea
mov
and
daa
repnz
add
cmp
ja
xchg
ffreep
jg
nop
rorb
mov
out
adc
imulb
mov
dec
pop
repz
add
sbb
es
iret
and
cmp
jne
cltd
adc
test
jb
inc
mov
dec
xor
sbb
mov
push
mov
sub
or
inc
or
push
and
adc
repnz
ret
xor
jmp
mov
jbe
mov
cmpb
subl
adc
stos
xor
jae
mov
adc
and
push
adc
jecxz
cmp
xorl
repnz
xor
cmp
mov
js
cs
dec
rclb
mov
lret
jns
sub
xchg
das
fmull
push
mov
inc
cmp
aam
pop
lea
aaa
call
pusha
adc
mov
sub
jbe
fisubrl
dec
icebp
jbe
pop
enter
dec
sahf
lods
bound
les
sub
outsl
adc
push
mov
dec
jmp
cld
pop
rep
pop
jle
push
mov
movsl
pop
inc
or
je
not
jl
std
fisubs
xor
je
mov
lret
pusha
rol
pop
and
dec
int
add
sbb
das
and
lea
loop
mov
fs
lea
adc
cmp
jne
shr
jae
sub
adc
add
push
orb
mov
or
or
sub
xchg
aad
jle
xchg
sbb
jbe
ja
ret
and
inc
test
inc
push
dec
xor
lret
call
mov
sbb
xchg
test
andb
adc
leave
mov
adc
popa
inc
push
mov
mov
push
push
inc
leave
test
sub
mov
dec
add
lea
fdivl
xor
mov
nop
or
aad
adc
and
pop
shll
enter
out
pop
inc
push
sub
dec
mov
pop
dec
int3
and
outsb
shll
push
push
xchg
and
mov
dec
sub
inc
nop
outsl
jge
adc
popa
add
sub
xor
mov
or
jne
ret
mov
out
pop
pushf
fildl
nop
pop
and
jp
sete
or
loopne
mov
jno
mov
inc
shrl
xor
out
jbe
pop
lret
pushf
movl
shl
popa
or
jbe
push
push
test
adc
rclb
xchg
test
sub
or
add
adc
loop
jmp
hlt
cmpl
sub
mov
rcrb
das
mov
cmp
jge
adc
adc
push
lcall
adc
stos
push
push
mov
jmp
inc
sub
sub
pop
dec
hlt
cmp
jb
add
call
test
and
jbe
adc
addr16
jmp
scas
cmp
xor
inc
xchg
xchg
add
int
mov
adcl
sub
pop
add
cltd
ds
dec
es
xchg
pop
jmp
sbbb
inc
inc
sbb
pop
jmp
sbb
sbb
mov
sbb
xchg
inc
movsl
jmp
xchg
jo
mov
test
test
add
or
movsl
and
les
dec
sbb
fildl
cmpsb
mov
mov
pavgw
fwait
movl
pop
lods
jge
lahf
xchg
cwtl
xor
pop
jae
sub
xor
loope
push
pusha
or
jl
rcr
cmp
xchg
iret
lock
add
jae
add
add
je
shl
jmp
add
aaa
adc
sub
push
movzbl
in
ret
mov
decl
rclb
jmp
test
jnp
fldcw
push
cmp
push
push
lea
std
in
cmp
xchg
mov
push
add
xchg
rcrb
mov
fcomp
or
popa
push
arpl
fidivs
outsl
sub
or
xor
ret
nop
scas
rcll
sbb
xchg
movl
stc
xchg
adc
dec
sbb
add
repz
push
loop
in
jne
inc
scas
pop
mov
dec
adc
je
push
jns
loope
lods
push
pop
push
mov
xchg
mov
adc
ret
push
data16
xchg
xor
cmpsl
adc
or
sub
adc
cmpl
dec
push
insl
pop
dec
loopne
add
lret
mov
jp
test
push
sbb
xchg
adc
adc
lret
jecxz
xchg
pop
sbb
xchg
adcb
divb
je
jmp
push
mov
test
pop
jne
sar
fstps
push
fdivr
repnz
movl
and
adc
cmp
test
pop
dec
add
ds
xlat
stos
movb
std
mov
cmc
lret
cld
roll
add
xor
dec
je
adc
pop
pop
sbb
movsl
js
pop
add
mov
in
adc
loopne
push
cmp
je
xor
mov
jne
pop
rorb
out
mov
mov
shll
ss
ror
adc
ret
lea
mov
data16
and
mov
enter
call
lock
xchg
lret
sbb
cmp
je
push
push
xchg
cld
and
lods
adc
and
sub
fdivrs
jge
inc
out
and
sub
jns
in
xchg
ffreep
shrb
icebp
sarb
lods
loop
mov
stos
roll
or
in
pop
push
push
pop
sub
pop
jnp
push
lahf
loope
sub
inc
mov
jns
imul
sub
mov
push
jae
sub
xchg
sub
clc
add
xchg
or
repnz
mov
test
jne
push
shr
loop
pop
lret
loopne
lods
pop
sub
push
hlt
or
daa
test
ret
mov
je
mov
jg
jmp
sub
jle
adc
test
cmpl
lock
or
cmp
adc
cmp
sub
add
push
pop
push
rolb
jle
subl
decl
sub
movhlps
mov
inc
sbb
test
cmp
dec
jae
add
neg
jmp
xlat
dec
pop
js
xchg
test
sub
js
pop
and
rol
xchg
int
imul
cmp
out
dec
xchg
mov
int3
or
dec
je
dec
cmpsb
loopne
cmp
fists
adc
lahf
jbe
jne
loopne
jbe
cltd
mov
clts
push
inc
dec
jne
js
stos
mov
jae
dec
fisttpll
sbb
ficoms
cwtl
sahf
fidivrl
sub
or
sub
and
filds
add
jae
test
jmp
repnz
pop
cmpsb
loope
xchg
rolb
fldenv
lds
aad
test
iret
mov
mov
jo
sub
fnstcw
mov
mov
push
jbe
jo
popa
sub
push
fs
aas
dec
jne
mov
sub
jae
and
scas
dec
lock
jae
mov
pusha
fwait
xor
or
push
test
fisttps
mov
ret
loop
add
add
push
cld
mov
adc
add
cmp
cmp
push
mov
xchg
loopne
push
fisttpl
fildll
repnz
out
test
repnz
aad
mov
pop
pop
pop
pop
int
out
testl
call
jecxz
jmp
std
imul
movsl
and
adc
inc
iret
jg
cmc
add
push
shl
adc
dec
cli
jb
sbb
out
test
mov
cli
push
push
dec
sub
sbb
jo
out
nop
and
pop
push
or
aam
and
dec
clc
imul
dec
cltd
jecxz
fs
dec
lea
inc
andb
add
lret
adc
xor
dec
popa
sbb
pop
shr
aad
adc
shl
xor
rcrl
loopne
andb
mov
vmovaps
stos
ds
push
sbb
dec
call
rcrb
mov
add
dec
call
sub
jnp
lock
inc
lret
xchg
cmp
mov
int3
daa
mov
jmp
lods
push
pushf
xor
test
pop
push
test
add
pop
and
test
rorl
push
aad
inc
cmp
mov
sub
or
pop
and
pushl
push
and
dec
xchg
int
dec
ret
ja,pn
or
divl
pushf
outsb
add
dec
and
xchg
jecxz
cmp
aam
mov
sbb
and
mov
xchg
hlt
shrb
adc
pop
dec
sub
xchg
adc
add
in
cmp
jbe
rorl
popa
sbb
adc
mov
in
mov
jge
mov
rcl
or
mov
rolb
in
not
loop
inc
lahf
sbb
repz
je
pop
xchg
dec
add
dec
in
psubusw
jge
mov
jp
push
xor
push
jbe
addr16
dec
orl
or
or
inc
jge
call
roll
call
pusha
test
push
xor
sarb
repz
clc
add
xchg
xchg
xchg
pop
dec
lahf
into
aad
popa
adc
popa
xchg
pop
push
dec
sbb
dec
sub
push
push
sbb
adc
mov
xchg
xchg
in
adc
inc
or
mov
dec
lock
jmp
push
cld
mov
pop
adc
push
xlat
enter
dec
ret
and
into
inc
and
add
sub
loop
or
push
mov
fnstenv
jno
sub
pop
andl
in
dec
push
xchg
rorb
push
call
loopne
rcll
dec
xor
xor
outsb
dec
int3
test
dec
add
call
mov
and
xchg
jb
enter
int3
enter
add
inc
les
pop
popf
cmp
jp
mov
cmp
jecxz
push
nop
fs
adc
fcompl
loopne
dec
mov
add
loope
mov
scas
pop
jge
jne
gs
or
inc
les
sub
ds
mov
nop
adc
mov
scas
jb
and
adc
sub
jne
jne
in
or
loopne
cmpsl
aas
insl
ja
jae
movsb
das
cmp
inc
cmp
adc
push
lock
jle
push
jle
loope
imul
subl
lahf
dec
popa
packuswb
divb
and
sub
aam
mov
in
pop
flds
pop
shr
pop
mov
sub
inc
loop
mov
and
cmp
add
cmovns
in
clc
push
mov
dec
pop
rorl
iret
sub
int3
clc
insl
dec
jmp
lods
adc
shll
pop
pop
pop
jecxz
aas
xchg
add
fcoml
cs
sarl
pop
dec
jo
jg
inc
stos
jb
or
xchg
push
pop
rclb
pop
push
sbb
push
jge
jp
sysenter
test
push
add
jne
jnp
ss
or
add
lea
add
mov
pop
repz
mov
adc
adc
add
sbb
sbb
sbb
xchg
push
movsl
inc
sub
adc
push
fdivrs
int3
mov
mov
ror
pushf
faddl
jge
push
sub
jb
or
inc
xor
xor
jmp
add
stos
inc
scas
mov
adc
add
orb
das
es
push
adc
sahf
pop
xor
add
sub
add
or
mov
or
and
push
shlb
dec
mov
push
push
js
outsb
mov
adc
jmp
insl
sub
inc
dec
add
loopne
int
cmp
and
adc
adc
sub
adc
in
mov
mov
xor
shr
in
fiadds
popf
inc
nop
and
lea
hlt
jmp
loopne
push
jmp
lock
into
leave
cmp
adc
xchg
xor
rcrl
mov
inc
test
add
inc
popa
popf
pop
xchg
nop
mov
jmp
sarl
insl
xor
sub
orb
call
clc
ret
and
add
inc
jmp
and
pusha
and
dec
stos
aam
sub
add
add
jmp
cmp
jbe
ret
add
test
jle
sub
hlt
mov
cwtl
scas
dec
call
and
stos
sub
inc
mov
shrl
inc
and
call
clc
je
or
in
or
sub
pop
mov
fs
jo
inc
xlat
aas
je
mov
cs
fcoms
push
nop
sub
ljmp
loopne
in
imul
mov
and
adc
loop
in
mov
enter
fsubr
jnp
les
cmp
adc
jno
ret
pop
divl
xor
adc
jle
sbb
add
xchg
or
cmp
mov
notb
push
or
repnz
sub
popa
loop
jp
ficoms
and
lock
adc
mov
sub
outsb
in
repnz
mov
into
lea
push
ljmp
ljmp
sar
cmc
cltd
adc
mov
ret
add
not
aaa
adc
or
add
out
push
out
push
jmp
out
mov
sbb
movsl
mov
lds
inc
mov
and
mov
mov
inc
dec
jne
jmp
and
cmp
inc
adc
or
insb
pop
or
jbe
sub
sbb
notb
xor
pop
loop
xchg
and
inc
xchg
add
js
daa
jne
addr16
jmp
and
mov
sub
pop
je
and
jb
ret
adc
lea
or
scas
inc
dec
cmp
push
add
mov
inc
jmp
movsl
mov
jle
mov
xor
inc
add
flds
sbb
adc
push
lcall
inc
stos
xor
add
push
ljmp
pop
push
sbb
bound
pop
cmp
jg
lock
test
movsb
inc
mov
xchg
adc
push
rorb
cmp
iret
out
xor
or
jge
fsubs
cld
jle
sbb
jl
xor
mov
xor
aad
cmp
sbb
mov
dec
add
jne
jle
pop
gs
mov
out
adc
cld
or
dec
lock
insb
jmp
pop
and
mov
pushf
xor
push
lock
repz
iret
dec
movsb
nop
xor
jl
add
sbb
xor
sbb
popa
sub
or
xlat
out
xor
and
sbb
mov
or
dec
adc
fcomps
xor
add
shll
jmp
sub
adc
mov
pop
imul
insb
push
xchg
and
mov
sub
into
push
xchg
dec
inc
mov
push
lcall
js
pop
call
mov
add
push
outsl
jne
sbb
inc
or
xor
sub
pushf
dec
push
outsb
and
stos
test
or
cmp
or
in
dec
icebp
out
mov
and
push
mov
add
iret
bound
push
xchg
sub
mov
cmp
cwtl
repnz
xor
adc
xchg
cmp
loopne
lea
push
xor
les
int3
xchg
cmpsb
nop
mov
pop
jbe
or
dec
cpuid
imul
and
gs
sub
pop
mov
jge
jns
push
and
and
mov
je
in
aaa
push
and
loope
adc
sbb
jp
mov
push
xchg
icebp
add
sbb
and
jp
les
cs
and
mov
mov
and
xchg
test
bound
ljmp
add
jbe
inc
xor
loop
frstor
cmp
pop
xor
push
pop
mov
sbb
ret
dec
or
pop
adc
jno
xor
sbb
je
fcomip
aas
lods
inc
lock
push
adc
enter
dec
or
sub
sbb
pusha
sub
and
jo
sbb
xchg
inc
mov
mov
sub
mov
xchg
and
lret
dec
xor
out
mov
xchg
mov
ret
mov
les
add
bound
test
arpl
xor
ss
pop
lods
arpl
jle
out
cmp
sub
jle
pop
mov
xorb
call
dec
adc
add
pop
faddl
or
inc
jne
fcmovnbe
push
inc
call
mov
ja
jmp
adc
cmpb
loope
cltd
or
push
cmc
and
mov
add
mov
push
mov
insl
cld
sub
dec
push
dec
jbe
sub
add
mov
and
shrl
daa
add
pusha
inc
daa
pop
call
sub
out
mov
xor
shlb
or
cmpl
cwtl
and
mov
xchg
bound
divl
in
xor
hlt
sub
cltd
xchg
pusha
pop
sti
mov
into
or
sbb
add
ds
lcall
push
cli
and
repz
icebp
cmp
jbe
push
and
and
dec
clc
sbb
sbb
or
xchg
call
sbb
bsr
adc
divb
pop
jns
push
xchg
das
dec
mov
data16
xor
dec
or
or
sbb
call
jg
test
shrl
loop
inc
fs
loope
es
and
lea
repz
xchg
or
movzwl
xchg
inc
es
decb
hlt
int
inc
test
fstpl
fwait
mov
cs
pushl
jne
push
or
test
pop
leave
pop
cmpsl
dec
das
xorb
je
test
cmp
cli
std
sub
and
jle
inc
js
sub
das
mov
cltd
inc
adc
adc
call
xchg
mov
test
scas
sub
fnstsw
or
pop
aas
rorl
sbb
icebp
push
jns
adc
and
jne
xor
push
mov
push
add
add
ret
inc
xlat
push
adc
mov
jl
and
movups
test
inc
aas
xor
or
xlat
sbb
dec
repnz
sub
add
adc
add
adc
shrb
xor
inc
or
pushf
adc
or
addr16
pop
push
imul
or
and
jl
inc
or
test
insb
bound
sub
inc
inc
ret
jb
and
sbb
inc
or
jl
or
aad
lods
push
or
out
xchg
jl
jb
lea
sub
daa
jb
scas
xchg
test
cmp
lahf
push
popa
nop
or
imul
push
clc
inc
test
dec
imul
push
jbe
push
dec
outsb
lods
or
and
mov
jge
xchg
gs
jb
lods
sub
pop
xchg
imul
cmp
mov
inc
pop
iret
dec
mov
outsl
and
jbe
js
dec
xchg
and
adc
xchg
fwait
popf
pop
scas
adc
sub
push
pusha
enter
dec
cmpsl
mov
sub
imul
xchg
push
inc
dec
lahf
popa
nop
or
sub
and
inc
cmp
inc
popa
insl
bound
push
adc
out
push
dec
sbb
add
inc
xchg
mov
aad
inc
and
je
or
mov
dec
lahf
pop
dec
imul
inc
dec
sub
lock
xchg
ret
sbb
sbb
rcrl
jecxz
or
enter
icebp
dec
and
filds
jb
popa
je
push
dec
sub
sbb
push
mov
jmp
outsb
push
bound
pop
fs
cmp
add
insl
andb
out
adc
dec
in
xor
das
xchg
push
add
stos
dec
pop
push
push
inc
loopne
sbb
pop
inc
and
jne
or
pop
inc
inc
xchg
sbb
pop
mov
sub
inc
sbb
sbb
sbb
or
test
cmp
push
inc
push
lahf
pop
dec
imul
inc
jecxz
jl
push
push
mov
in
cmpl
inc
push
cmp
insb
inc
nop
sub
outsl
and
insb
lret
push
lods
sub
inc
inc
dec
lahf
pop
push
imul
jnp
dec
gs
mov
cld
mov
cmp
test
addr16
inc
push
lret
sub
insl
leave
movsb
jns
mov
push
xor
push
xchg
test
cmp
and
test
inc
in
sbb
push
push
sub
dec
imul
rcrl
mov
inc
push
fists
dec
sub
dec
outsl
cmpsb
jne
or
mov
dec
dec
jae
sbb
push
or
and
pop
push
cs
daa
push
dec
xor
dec
xchg
lods
pop
jecxz
push
pop
mov
push
out
push
dec
sub
add
push
sbb
sbb
adc
dec
dec
push
mov
and
inc
inc
cmp
test
dec
push
jae
sbb
enter
sbb
int3
adc
inc
push
dec
push
sub
mov
xchg
shrb
push
test
popa
cmc
pop
aad
test
dec
dec
push
jl
inc
scas
push
lret
lahf
and
dec
push
sbb
sbb
and
popa
mull
icebp
dec
dec
push
imul
popa
jp
imul
sbb
and
iret
popl
jl
es
adc
xchg
dec
inc
inc
cltd
sbb
sub
gs
push
xchg
jne
mov
and
mov
jns
ret
int
pop
movsb
and
xchg
mov
adc
dec
inc
out
push
dec
jl
push
je
imul
and
jae
fsubrs
outsl
test
sbb
add
bound
dec
push
pop
sub
push
test
outsb
jae
or
test
dec
test
pusha
je
loope
outsb
data16
dec
push
cmp
lock
dec
gs
push
or
addr16
push
dec
pop
sub
dec
dec
popa
insl
outsl
or
sub
dec
dec
sbb
inc
sti
dec
test
test
dec
cltd
sbb
ficompl
aas
jns
xchg
sbb
dec
pop
xchg
sbb
sub
adc
jmp
jns
mulb
mov
je
addb
dec
mov
mov
gs
inc
push
outsl
sub
pop
jns
negb
shlb
sub
inc
adc
sbb
addr16
stc
dec
dec
inc
je
pop
stos
into
xchg
addr16
dec
sub
leave
lds
mov
dec
push
inc
cmovg
pusha
dec
pop
gs
insb
in
cmp
mov
mov
pop
shrl
dec
jnp
inc
push
sbb
popa
insb
fmull
pop
lcall
mov
fisubs
pop
test
dec
push
inc
aam
pop
sti
and
dec
inc
sbb
sbb
popa
in
jns
push
and
mov
shl
xchg
rcr
dec
dec
xchg
push
test
push
inc
dec
lahf
pop
inc
imul
xchg
scas
test
xchg
inc
movsb
cmp
jns
push
nop
pop
repz
in
sub
jne
sub
mov
in
sub
jo
stos
outsb
out
sub
dec
fists
test
outsl
jns
mov
dec
xor
or
adc
adc
xorb
adc
test
push
imul
adc
or
push
pop
push
inc
xchg
sbb
test
insl
mov
push
imul
jo
sub
sbb
and
int3
sbb
sub
and
xchg
adc
les
or
push
popa
jne
xor
dec
inc
movsl
pop
js
push
cmpsl
test
sbb
test
bound
and
inc
mov
bound
mov
je
test
xchg
imul
cmp
inc
bound
das
inc
mov
and
and
xlat
mov
loopne
dec
repz
in
cmp
gs
outsb
enter
and
or
add
pop
inc
inc
cltd
sbb
or
push
mov
push
out
xchg
push
fsub
mov
adc
mov
cmp
pop
ja
ja
sahf
lods
inc
inc
iret
push
mov
mov
push
imul
dec
sbb
sbb
push
aad
adc
push
and
xchg
lret
insb
sub
ja
test
xchg
sbb
shlb
push
imul
insb
bound
clc
inc
sti
and
fcmovnbe
and
dec
cmp
pop
lret
stos
nop
in
xor
jge
add
jg
push
imul
xchg
mov
push
jecxz
in
sub
gs
cmp
ds
add
adc
mov
push
dec
push
jl
dec
lret
mov
push
imul
inc
iret
test
xor
dec
cmpsb
or
cmpsl
inc
insl
int
cli
jae
bound
sbb
push
sti
sub
cmp
pop
in
jno
js
loop
push
clc
push
mov
push
sbb
xlat
inc
je
ret
adc
out
push
inc
rolb
and
push
fsts
hlt
clc
jp
bound
push
pop
xchg
sbb
lock
push
inc
idivb
pop
push
mov
scas
sbb
gs
jp
sub
dec
jnp
loop
ret
pop
gs
xchg
push
sbb
lock
insl
arpl
xchg
test
shlb
jmp
inc
rorb
nop
nop
adc
push
cwtl
data16
aam
jae
xchg
dec
adc
ret
inc
or
rorl
shlb
mov
dec
add
and
arpl
xlat
add
mov
xchg
call
xchg
pusha
inc
lock
add
cmp
lock
mov
repnz
xor
mov
adc
out
adc
call
shr
and
clc
rol
mov
push
cmp
iret
sub
push
xor
xor
or
mov
sbb
pop
jns
add
sbbb
mov
and
call
notl
jae
lret
loopne
jne
cmp
je
lds
cmc
mov
mov
mov
inc
decl
dec
hlt
jne
fists
incb
daa
push
mov
loopne
arpl
loop
pushf
dec
jbe
sub
add
dec
call
inc
mov
pmuludq
xchg
or
call
xchg
push
in
sbb
adc
sub
sbb
cmp
sbb
mov
push
add
add
mov
shlw
jnp
jle
or
stos
push
loop
loop
push
lcall
xchg
cmp
inc
mov
jecxz
nop
cld
sub
or
jne
adc
pop
data16
sbb
fldl
cld
in
and
call
xchg
sti
cmp
lds
out
dec
sbb
and
or
dec
insb
into
push
test
inc
and
fwait
inc
les
sub
mov
push
jbe
pop
jg
cmpsl
rol
add
sti
repnz
push
inc
js
cmpsl
fidivrs
inc
push
cmpsl
adc
add
aas
push
xor
inc
or
adc
lahf
shl
sbb
add
and
pop
out
filds
mov
or
inc
inc
adc
sub
dec
xor
adc
adc
mov
cld
cmp
pop
inc
add
imul
loope
dec
push
push
test
adc
ret
and
sbb
add
dec
dec
dec
push
push
push
adc
push
add
pop
pop
pop
inc
popa
sub
lods
pop
mov
pop
push
mov
adc
jns
inc
push
dec
pop
sbb
pushf
ret
mov
xor
push
and
dec
mov
icebp
inc
xchg
adc
cmp
dec
mov
pop
or
xchg
loop
mov
adc
pushf
inc
dec
dec
inc
dec
dec
dec
dec
hlt
cli
int3
mov
push
insl
outsb
outsl
add
jb
je
jbe
adc
jp
sub
sub
insb
scas
add
pop
push
sub
or
xchg
fsubrs
sti
jne
lret
sbb
and
je
fldt
sub
jl
push
hlt
push
sub
adc
pop
fdiv
and
push
jl
cltd
jmp
shll
loop
xorb
mov
adc
inc
push
lcall
cmp
push
imul
decl
mov
cmpsl
cld
ds
es
jecxz
sarl
movsl
push
aad
pop
xchg
mov
cmpb
xor
and
sti
xor
arpl
cmpsl
or
addr16
adc
imul
movsl
xor
xor
mov
inc
xchg
mov
sbb
jns
mov
cmpsl
or
test
and
push
dec
sbb
invd
fs
and
xorb
adc
subb
cmp
daa
les
xor
adc
xchg
outsl
mov
push
sbbl
lret
gs
rclb
or
or
ret
jb
add
inc
inc
sbbl
cmp
mulb
lods
sub
popa
lock
inc
and
mov
test
xor
test
pop
sbb
test
pop
mov
add
pop
pop
dec
lea
or
xor
mov
adc
mov
push
loope
rorb
mov
in
stos
les
adc
mov
dec
shlb
pop
sbb
or
adc
and
mov
std
sbb
xor
xor
inc
test
and
mov
call
lcall
in
shrl
ds
pop
push
inc
adc
sub
dec
pop
int
lret
or
push
outsb
adc
sub
or
jae
sti
mov
test
mov
lahf
add
jno
cmpsb
xchg
lahf
jb
nop
mov
or
push
imul
mov
add
sbb
sub
push
test
call
mov
push
jnp
out
mov
mov
jp
sbb
fidivrl
hlt
rorb
aam
test
mov
adc
sub
add
push
sbb
int3
or
cmp
ffreep
enter
mov
test
push
cmp
dec
and
cmp
ret
add
fbld
jmp
or
repz
mov
or
push
shrb
adc
push
enter
xor
mov
sbb
xorl
shll
add
cmp
addr16
xor
pop
test
je
mov
rorl
call
lret
and
cmp
xchg
xor
xchg
xchg
mov
subl
fisttps
test
imul
add
adc
xchg
and
push
pop
push
inc
add
jmp
adc
jl
pop
inc
mov
or
and
mov
shll
rcl
push
or
and
insb
add
pop
push
adc
js
jo
adc
inc
push
dec
add
push
cwtl
les
sbb
inc
cmp
jae
fists
cwtl
sub
pop
testl
mov
mov
xchg
add
aas
and
xor
sbb
jmp
in
rcll
jg
fsubs
sarb
out
pop
fldt
adc
nop
cmp
pop
test
enter
cmpsb
pop
xor
dec
hlt
in
push
xchg
add
aad
and
adc
hlt
push
enter
add
fstpl
mov
mov
mov
movsb
jb
fstps
fistps
test
add
add
sbb
test
push
and
xor
cmc
adc
mov
fisttpll
adc
shlb
push
and
rclb
lret
and
daa
call
and
adc
push
mov
mov
push
mov
cwtl
es
sub
setg
xchg
or
imul
sbb
and
add
push
adc
out
loop
xchg
mov
insb
xor
cmpsb
mov
xchg
adc
imul
or
pusha
mov
sbb
xchg
fwait
sub
mov
pop
in
pop
xor
mull
repz
adc
fisubrs
fcomps
sub
mov
push
mov
mov
inc
sbb
clc
rolb
sbb
je
pop
adc
enter
inc
and
mov
jmp
jp
push
add
cmpsb
repz
mov
or
notl
lahf
xor
test
cwtl
roll
int3
ret
lds
add
inc
jbe
add
bound
jge
or
jae
pop
cmpsb
dec
xchg
sbb
jmp
inc
in
push
push
push
cwtl
add
out
lret
mov
inc
movsl
add
adc
das
add
jl
push
popa
add
xor
add
es
sub
shll
fsub
jo
les
aad
jge,pn
add
push
jbe
je
jp
add
xlat
xchg
lods
negl
sub
cmp
stos
add
pop
rorl
pop
and
sub
mov
pusha
sbb
stos
xor
or
clc
sub
daa
pop
mov
ret
xor
cmc
sbb
mov
clc
or
fs
xchg
inc
and
insb
enter
hlt
out
jl
sbb
add
fidivs
xchg
rcr
test
fistpll
xor
add
cltd
mov
lods
shll
jo
lock
enter
lret
arpl
mov
inc
cs
xchg
sti
add
add
or
cmp
je,pn
add
sahf
stos
aad
xchg
push
add
cs
or
pop
pop
ret
xchg
out
aad
push
mov
or
inc
rcr
mov
mov
stos
out
add
and
mov
ja
mov
popa
xchg
dec
adc
mov
mov
roll
inc
mov
in
aaa
jecxz
add
pop
pop
pusha
gs
sahf
xor
cli
jnp
fldenv
sbb
in
pop
add
inc
sbb
imul
in
sub
pushf
fldlg2
pop
fs
jmp
daa
test
add
lret
aas
jo
sbb
fldl
sub
sbb
add
inc
imul
out
add
js
mov
sahf
add
or
jno
out
addl
icebp
loop
cli
test
fwait
add
add
add
stos
inc
roll
lret
lcall
add
push
mov
add
adc
adc
out
add
push
xor
test
es
inc
dec
xchg
fwait
pop
add
xor
add
pop
xchg
mov
inc
push
mov
dec
test
push
mov
fistpll
sub
pop
inc
movsb
add
movsl
or
in
jmp
enter
add
push
fwait
call
or
clc
fsubl
add
outsb
loopne
jbe
ja
jecxz
jl
sub
dec
xchg
add
jle
mov
out
mov
add
adc
cmpsb
insb
pushf
add
xchg
in
xchg
adc
push
repz
xchg
and
add
imul
sbb
ficomps
sbb
mov
in
neg
cmp
aam
fcmovnb
and
adc
jecxz
xchg
mov
add
pop
mov
jge
sub
xchg
add
xchg
fdivs
jge
cmp
repnz
callw
inc
dec
add
sbb
pop
or
ss
outsl
add
jmp
fisttps
ss
outsl
daa
aas
mov
lea
add
rclb
sahf
ret
jo
xor
mov
or
sub
cld
mov
xchg
dec
push
add
mov
inc
insl
or
in
lods
add
jo
js
add
orb
add
mov
xor
pop
push
repnz
mov
fstpt
in
in
test
aas
loopne
cwtl
pushf
add
clc
pusha
repz
outsb
mov
lret
fs
insb
dec
add
cli
cmovno
add
or
mov
fldenv
add
jg
ds
inc
sbb
pop
xor
mov
inc
dec
xchg
data16
cs
aaa
mulb
outsl
jmp
lea
jl
popa
xchg
add
movsl
stos
clc
push
inc
and
xor
mov
push
leave
push
cs
loopne
in
fildl
xor
dec
dec
dec
inc
mov
inc
int
gs
inc
adc
dec
jnp
push
add
call
mov
push
xlat
jno
push
sahf
ja
sarb
xchg
js
xchg
mov
lahf
push
mov
adc
stos
jno
clc
pop
add
scas
in
adc
xchg
jl
mov
jg
dec
dec
mov
xchg
mov
dec
iret
cmp
jg
push
xor
jns
rcll
add
xchg
popf
shrb
add
jae
add
and
movsl
movsb
nop
pop
add
dec
popf
enter
dec
mov
ret
iret
test
loope
jle
push
adc
mov
and
push
in
filds
idivl
rorb
xchg
cmpb
sbb
cld
adc
in
mov
jns
pop
ja
jne
or
popf
aad
pop
pop
inc
sub
dec
movsl
idiv
inc
les
mov
es
ret
mov
pop
scas
mov
add
push
xor
push
cmp
xchg
add
xchg
sbb
sahf
lret
imull
add
jne
xchg
outsb
shll
add
push
fidivrl
push
add
push
js
jns
adc
in
or
adc
inc
add
std
ret
mov
loopne
leave
add
ja
xor
iret
repz
addl
jae
das
add
fld
incb
aaa
lods
es
jns
aam
add
jb
insb
setb
lret
and
dec
xchg
inc
call
leave
outsb
mov
outsl
sub
mov
shrb
loop
mov
stos
ljmp
fcompl
add
mov
mov
in
enter
and
jo
out
dec
xor
add
adc
lea
je
jle
mov
jns
rorl
cmp
add
hlt
and
lea
fstps
inc
fnstsw
and
add
cmp
xor
ljmp
pop
xchg
inc
add
enter
pop
sbb
add
cs
lcall
add
pop
xchg
xor
jg
sub
and
repz
dec
xor
leave
mov
push
push
and
pop
jns
dec
cs
push
push
ss
push
dec
sub
mov
cmp
dec
addb
dec
pop
xchg
je
add
in
inc
jle
push
dec
lock
shlb
cli
inc
push
push
pop
sbb
mov
or
sbb
popa
add
jnp
mov
in
dec
xchg
stc
mov
mov
inc
inc
fmull
add
repnz
movsb
mov
sbb
nop
cmc
cli
fisubl
add
lret
les
pop
test
jp
add
pusha
fstpt
sub
add
cltd
jecxz
xor
insb
mov
xor
xchg
mov
push
pop
repnz
cmp
and
xor
dec
stos
rolb
sub
xlat
mov
add
jb
bswap
cmp
xor
jne
in
cmpsl
mov
add
push
test
pop
mov
lret
movsl
sub
lea
test
inc
mov
pushw
sub
adc
mov
sub
mov
inc
push
cli
shr
scas
sbb
fiadds
icebp
dec
xchg
mov
lret
push
lahf
test
hlt
cmp
cld
xchg
mov
nop
xchg
lock
sub
or
cmpsl
and
push
inc
or
mov
add
daa
push
jecxz
xchg
adc
cld
mov
inc
sub
outsl
das
mov
in
sbb
cmp
fwait
in
enter
loope
scas
mov
pop
add
mov
cmp
dec
sbb
or
lods
nop
inc
cmp
dec
inc
outsl
mov
jo
mov
fisttps
jl
fists
xchg
jl
push
inc
lahf
mov
enter
out
inc
xor
out
in
push
test
sub
push
add
out
sbb
xlat
sub
cld
lea
sbb
sub
inc
js
mov
pop
jb
mov
sub
fists
sahf
xchg
pop
sub
dec
nop
push
mov
aam
add
ret
xchg
cmp
rolb
dec
adc
jl
jb
sahf
adc
imul
and
xor
dec
dec
push
pop
push
inc
push
cwtl
adc
push
shlb
xor
pand
xor
push
inc
push
cmp
xor
cltd
sbb
dec
xor
cmp
and
pop
dec
pop
dec
or
xor
mov
and
mov
cmp
gs
push
jne
adcb
mov
dec
and
inc
icebp
inc
cmp
jbe
push
mov
pop
roll
xchg
push
sub
dec
xchg
scas
icebp
inc
in
pop
dec
push
cld
inc
push
nop
inc
sar
mov
inc
inc
nop
enter
push
xchg
test
ss
mov
adc
push
addr16
addr16
stc
xor
test
sub
cmpb
call
test
inc
pop
aam
xor
xlat
and
and
cmc
xchg
js
push
lret
inc
inc
dec
or
inc
xchg
das
mov
and
fldt
mov
and
stos
repz
jl
pop
into
hlt
mov
sbb
jnp
sub
jl
xor
loop
ss
push
inc
cmpsl
push
fstps
aam
inc
int
dec
clc
rolb
jae
ret
mov
cld
push
repnz
push
inc
inc
inc
js
pop
scas
push
sub
in
xchg
dec
ljmp
push
testb
dec
aas
pop
push
icebp
rcrb
push
repz
mov
push
clc
add
daa
mov
cltd
ror
mov
movsb
dec
xchg
cmc
lret
pop
mov
xchg
mov
jbe
xchg
aam
call
pop
jo
jne
or
inc
jo
push
push
push
loop
fs
sub
movsb
in
sub
popf
dec
test
cmpsl
les
dec
nop
adc
data16
inc
test
adc
je
addr16
je
mov
mov
adc
mov
pop
cmp
jne
lcall
in
in
and
inc
jns
rcrl
pop
jno
xchg
in
and
inc
insb
xchg
and
and
mov
shrl
push
cmc
adc
es
repnz
out
mov
pusha
push
sbb
int3
nop
mov
xchg
pusha
call
lret
sub
inc
fs
loope
test
outsb
push
adc
pop
inc
push
popf
fs
xor
xchg
adc
pusha
and
add
pop
xor
aam
stc
arpl
push
inc
movsl
pop
rcl
pop
cmc
das
rclb
and
push
inc
xor
les
push
xchg
int
dec
sub
dec
inc
ss
xor
add
xor
xchg
cmp
sub
xchg
dec
xchg
adc
or
dec
mov
loope
cmp
inc
movsb
shll
inc
push
sub
or
insb
fs
scas
push
stos
inc
mov
sub
sub
inc
lds
xchg
test
dec
mov
lea
inc
shrl
sbb
rclb
mov
je
das
push
adc
mov
jno
dec
popa
pop
adc
ljmp
jl
lcall
std
insb
pop
imul
cs
sbb
es
je
push
sbb
repnz
mov
adc
pop
jne
das
je
fs
xor
bound
inc
push
fsubrs
pop
aam
mov
and
jae
cmp
mov
in
sub
enter
scas
inc
pushf
orb
in
pop
ret
push
sub
shlb
dec
xchg
int3
and
les
push
push
out
ja
mov
or
cs
push
stc
sbb
out
lret
sahf
shl
pop
push
mov
and
fs
nop
mov
cld
xchg
cwtl
stc
es
int3
int3
push
push
imul
loope
jo
imul
cmp
dec
cli
clc
push
dec
push
insb
sub
test
sbb
mov
inc
pop
inc
mov
mov
insb
clc
pop
insl
loope
insl
jl
push
jne
pushl
in
imul
xchg
lods
inc
sbb
sub
mov
cli
xchg
mov
pushl
cmp
scas
inc
das
das
les
cmp
sbb
cmp
out
jbe
fcompl
cmp
das
cmp
and
repnz
sub
push
lret
mov
adc
sub
jecxz
sub
inc
pop
movsl
fs
or
mov
mov
inc
adc
pusha
cmpsl
lds
aam
lods
cmpsl
dec
dec
fsubl
push
movsb
sub
cmp
sub
push
ficoml
jp
les
inc
or
push
fistpll
stc
pop
les
stc
js
in
pop
pop
xlat
mov
shr
enter
pop
xchg
and
iret
fsubl
dec
and
and
xchg
and
icebp
lret
leave
cmp
popf
xchg
inc
xchg
cmp
dec
fcmovnu
mov
out
lods
lds
xchg
mov
loop
sti
dec
outsl
cmp
scas
lods
imul
leave
in
dec
push
pop
inc
cli
adc
ficompl
cmp
xor
push
test
ret
pop
icebp
dec
cli
sub
jb
dec
push
aaa
js
push
ret
mov
lret
vmovaps
push
mov
je
loop
xchg
mov
repnz
das
jb
push
jle
les
lds
adc
push
xchg
mov
movsb
das
pop
dec
cmp
movsl
mov
jnp
inc
and
pusha
nop
mov
mov
imul
das
cmp
cmp
mov
dec
stc
jns
test
push
jns
test
mov
or
js
jmp
pusha
dec
cmp
scas
imul
icebp
stos
pop
out
je
int
imul
jns
jl
in
loopne
cmp
stos
imul
stos
and
stos
mov
push
test
dec
dec
sti
in
inc
and
dec
lret
in
pop
sub
mov
das
sbb
xchg
cmp
movsl
jnp
pop
or
std
scas
xor
cmpsl
popl
mov
ficompl
xor
scas
movsl
icebp
mov
shll
pop
mov
in
lods
mov
adc
shl
movsl
into
addb
insb
add
insb
imul
mov
aas
aam
idivb
pusha
sub
pop
xor
loopne
jb
in
loopne
mov
rep
cmc
jle
pop
aas
push
je
loop
cmc
jle
pop
into
lods
shrb
pop
outsb
fisttps
std
jns
lods
dec
xor
loop
aam
cli
pop
iret
call
cmp
jecxz
xlat
mov
movsl
in
sub
test
mul
mov
xor
mov
leave
int
adc
push
lods
jns
mov
ror
lock
inc
negb
jae
jnp
sarb
add
sbb
out
add
insl
movsb
in
fdivrs
stc
jp
add
je
sub
xchg
cmp
ss
stc
or
mov
out
das
inc
dec
call
sarl
imul
das
mov
xor
das
mov
xchg
sahf
xchg
dec
jo
clc
test
push
mov
jb
clc
lret
in
imul
mov
cld
test
sub
mov
mov
es
mov
sub
push
jae
mov
loope
jl
jge
lods
and
in
jl
std
pop
sbb
repz
sub
into
xlat
mov
and
lods
jl
sub
repnz
in
mov
mov
cmpsb
fdivrs
mov
loopne
cmp
loopne
jl
mov
mov
mov
arpl
popf
out
sub
push
fcmovbe
push
pop
push
imul
in
mov
repnz
shrl
or
adc
mov
aaa
mov
mov
ficomps
imul
movsb
ljmp
loopne
sbb
sbb
aam
pop
push
sbb
test
ljmp
and
cli
sbb
xchg
and
dec
out
in
pusha
pop
push
pop
loop
mov
push
mov
xchg
enter
aam
icebp
sbb
aam
mov
and
popf
dec
rol
jnp
push
pop
lods
cmp
push
movsb
sbb
push
mov
aam
cld
xchg
sbb
cmp
popf
inc
mov
adc
mov
push
dec
movsb
ljmp
and
adc
test
push
dec
mov
dec
cmp
ljmp
aam
ja
pusha
cmpsl
push
mov
movsb
ljmp
js
lea
jo
inc
cwtl
icebp
sub
hlt
ljmp
lahf
xchg
sub
je
popf
inc
nop
pop
aaa
je
push
nop
inc
sbb
std
pop
mov
sbb
push
xchg
mov
popf
inc
mov
push
outsl
push
dec
cmpsl
test
and
enter
xorb
pusha
dec
cmpsl
jl
jae
push
popf
fisubrl
test
incl
dec
cmpsl
js
and
jle
cmpsl
push
je
and
shrl
xchg
aas
jl
and
sbb
jne
insb
adc
fs
ljmp
push
popf
dec
fs
ficompl
imul
daa
push
pusha
lds
cmp
cmpsl
pop
in
dec
aas
push
jmp
sub
pop
or
push
or
pop
cmp
test
stos
nop
cmpsb
arpl
sub
repz
xchg
sti
jae
outsb
test
mov
sub
or
and
push
mov
sbb
mov
inc
mov
adc
roll
push
cmp
or
leave
nop
imul
mov
insb
jnp
aas
mov
mov
push
nop
inc
push
jo
pop
mov
je
pop
jbe
jmp
inc
stos
xchg
enter
loop
adc
sub
and
ret
ja
or
jne
insb
or
imul
orb
iret
std
xchg
adc
pop
adc
and
ljmp
inc
jne
and
es
pop
dec
test
gs
pop
inc
imul
pop
mov
dec
pop
mov
imul
sbb
mov
adc
in
cmp
sub
lods
cld
nop
lds
lods
push
lock
and
jo
cmp
fnstcw
and
fadds
mov
mov
or
les
in
cmp
fs
int
mov
mov
push
sub
and
mov
sub
movsb
imul
outsb
pop
dec
outsb
mov
jno
mov
mov
and
dec
add
jb
mov
push
mov
add
test
test
pop
push
dec
and
lods
cmp
scas
inc
imulb
and
data16
test
mov
cmpsb
sub
dec
jne
into
negl
mov
loopne
mov
insl
js
repnz
pop
repnz
out
ss
or
and
sub
sub
test
enter
mov
push
shll
jne
push
enter
jb
push
dec
xor
insl
mov
cwtl
push
nop
fcoms
test
outsb
out
jmp
adc
inc
push
sub
jmp
mov
push
mov
and
push
mov
mov
rcrl
pop
out
sahf
call
adc
cltd
add
xchg
or
xchg
jmp
in
shll
les
jmp
lock
fsubs
dec
shr
push
fdivl
jmp
les
loopne
nop
mov
jge
mov
mov
divl
imul
sub
jb
movb
push
loop
xor
pop
adc
int3
jb
inc
xchg
lock
mov
cmp
daa
insl
cmp
cwtl
inc
inc
leave
push
push
mov
jno
adc
loop
aam
mov
lahf
jne
sub
lds
stos
cmp
cld
add
dec
mov
pop
icebp
frstor
subb
mov
inc
psrld
movsl
mov
nop
and
imul
cmpsl
shlb
enter
jl
sub
ror
mov
test
in
enter
icebp
sub
inc
fadds
cmp
and
lods
pop
fildll
jne
js
push
jp
int
adc
cmp
or
je
mov
sbb
inc
mov
mov
cmp
adc
cmc
bound
jmp
lcall
push
inc
sub
insb
jmp
sahf
adc
pop
in
shrl
shlb
fcom
sub
dec
adc
sub
sub
adc
shrb
inc
inc
shr
xchg
js
xor
dec
aam
cmp
jne
sub
gs
jmp
pop
push
addb
test
pop
mov
pop
mov
and
into
icebp
dec
sub
push
out
fldcw
mov
pop
dec
sub
mov
imul
pop
push
sub
inc
xchg
inc
inc
test
mov
jp
in
inc
fsubs
push
lods
movsl
mov
xchg
out
lds
pop
test
or
mul
in
sub
jnp
sub
movsl
mov
pop
push
ffreep
cmp
push
aaa
push
imul
imul
inc
xchg
sub
push
lret
mov
or
ljmp
mov
push
and
push
cmp
test
mov
mov
push
pop
jne
insb
leave
push
je
cli
xchg
outsb
es
jl
mov
inc
sub
scas
push
pop
sub
mov
rclb
xchg
lds
lods
sub
and
dec
xchg
sub
dec
sbb
sbb
test
mov
pushf
repnz
jb
je
sbb
xchg
ja
js
inc
push
inc
mov
xor
outsl
lds
je
imul
cwtl
push
in
in
adc
rorb
and
sub
push
mov
jne
mov
cmpsb
push
xchg
pop
cmp
outsl
adc
ja
xchg
and
cmp
jl
lcall
inc
push
nop
les
or
lods
push
inc
lcall
pop
nop
and
mov
sahf
mov
sub
test
xor
inc
xor
push
mov
inc
insb
xchg
add
mov
mov
sub
pop
movsb
fsubs
pop
mov
pop
push
or
imul
jae
add
xchg
mov
sarb
test
push
inc
push
inc
or
push
adc
mov
inc
push
adc
jo
push
xor
sbb
sub
inc
inc
inc
cmpsb
and
dec
push
xor
repnz
in
sub
xor
xor
and
inc
xor
ss
ss
in
sub
aaa
pop
nop
cmp
cmp
lods
pop
inc
xor
in
cs
fsubl
xor
xor
xor
xor
xor
repnz
jl
sbb
inc
dec
add
pop
cmpsb
sbb
stc
dec
pop
inc
add
or
push
mov
xor
imul
hlt
cs
mov
pop
nop
xor
and
jle
xor
repnz
enter
ss
and
jle
aaa
mov
push
repnz
call
hlt
cmc
fstl
jl
and
or
sub
xor
xor
xor
xor
in
das
enter
ss
inc
dec
xchg
pop
inc
inc
dec
push
inc
dec
sahf
adc
mov
mov
fcoms
pop
sbb
enter
dec
cmpsb
dec
dec
xor
pop
xchg
dec
cltd
clc
sbb
sub
test
shrb
dec
dec
dec
inc
je,pn
sbb
adc
inc
and
push
inc
push
dec
aad
sbb
pop
stos
push
fstpt
test
pop
sub
or
jl
mov
adc
xchg
dec
nop
sub
test
cmp
xorl
andl
xorl
xor
jb
pop
addr16
cmp
insb
insb
das
xor
cmp
xor
sub
inc
cmp
or
outsb
inc
repnz
inc
mov
add
imul
xchg
rolb
rorb
sub
mov
and
enter
outsl
sub
pop
adc
aas
push
and
dec
mov
or
mov
sbb
xor
lret
mov
popa
imul
or
dec
cmp
faddl
cmp
ss
xchg
or
or
outsb
push
adc
jo
movsl
xor
jge
jl
cmc
arpl
or
jae
pop
pop
fadds
stos
enter
ljmp
mov
adc
cmp
add
cmp
mov
mov
or
fsubl
fistl
hlt
and
lret
mov
orl
inc
rorb
je
adc
mov
adc
mov
stc
push
sar
leave
mov
sub
in
inc
sbb
inc
adc
inc
xor
cs
pop
sub
cmp
inc
mov
cmp
frstor
jo
mov
xor
dec
sub
lock
sub
mov
and
mov
adc
and
dec
or
and
mov
cld
push
addr16
inc
les
les
test
add
test
fs
mov
adc
adc
pushf
cmp
adc
sbb
inc
dec
popa
inc
mov
adc
pop
add
addl
pop
add
and
pop
or
je
rcrl
cmp
push
cld
inc
andb
push
rorb
adc
imul
jl
mov
and
push
xor
xchg
push
push
adc
js
adc
subl
addl
add
inc
in
dec
or
rorb
fadds
mov
cwtl
inc
and
pusha
testl
adc
adc
inc
adc
jg
or
and
aam
ds
mov
pushf
cmp
or
jle
cmp
movsb
adc
and
cmp
insb
aaa
rcll
inc
xor
and
cmpb
add
je
push
and
inc
sub
cs
adc
clc
sub
mov
mov
adc
push
adc
insb
es
jnp
push
and
and
lods
mov
and
test
cld
and
pusha
and
and
inc
pop
adc
test
sub
orb
add
jl
cmp
pop
and
sbb
inc
xor
subl
pop
sbb
mov
decl
and
call
dec
jb
sbb
and
mov
sbb
mov
xorb
inc
ds
sbb
subb
or
xor
sbb
je
push
or
push
sub
mov
or
xor
jne
in
ret
inc
imul
sti
add
insb
jae
js
sbb
fsubrs
addb
or
adc
call
mov
sbb
push
movsb
in
pushf
or
test
cmp
pop
push
xor
leave
inc
call
in
xor
fs
or
mov
and
enter
jb
cmp
adc
inc
or
add
cld
mov
loop
jne
push
daa
add
imul
xor
mov
push
sbb
cmc
out
fstps
add
push
sbb
inc
enter
dec
add
push
cld
pop
test
fsubrl
lods
sbb
dec
ja
push
in
sub
movsb
pop
mov
in
outsb
push
or
rclb
stos
daa
pop
dec
enter
inc
test
je
xchg
jae
add
adc
and
jmp
into
cmp
lods
adc
hlt
sub
push
adc
and
jl
adc
jno
push
enter
xchg
sbb
das
shlb
cmp
sbb
and
and
push
test
and
jle
es
lret
jb
sub
mov
sub
cwtl
cmp
xchg
fsubs
pop
incl
testl
rcl
fwait
iret
lret
sub
scas
lret
sub
xchg
xor
xor
adc
int3
fcomps
rorl
and
add
rorb
jg
call
sub
sub
mov
dec
loopne
xchg
in
mov
mov
sub
test
jno
push
mov
sbb
fcoms
test
push
cmp
enter
test
rcll
xchg
or
or
nop
xchg
test
lea
inc
imull
dec
or
xor
jns
and
subb
xor
nop
xor
or
je
stos
shrl
insb
gs
dec
adc
xor
mov
mulb
dec
xlat
aas
xchg
push
push
add
in
cmp
in
mov
sbb
pushf
call
adc
jbe
ja
pop
bound
test
and
pushf
xor
add
and
pop
jle
sub
or
inc
add
jb
outsl
sahf
rclb
mov
and
lcall
adcb
test
xchg
xchg
pop
rcrl
pop
repz
sub
push
test
lods
push
test
jmp
pushf
inc
or
or
arpl
call
dec
test
loop
sub
lock
adc
mov
jne
stos
arpl
add
inc
mov
add
lea
sbb
jmp
pop
ret
cmp
jge,pt
xchg
sbb
inc
or
jb
or
adc
xor
push
clc
xlat
jns
jns
xor
adc
mov
xchg
xor
loopne
adc
stos
mov
sbb
adc
call
sbb
inc
lock
mov
xchg
sub
or
push
xlat
jb
xor
and
mov
push
hlt
notl
pop
xchg
jbe
outsb
jl
xor
pop
mov
adc
cmpsb
incb
adc
or
mov
jp
xchg
nop
inc
pop
mov
sbb
enter
adc
or
int
mov
lods
fbstp
jmp
jl
aam
cld
mov
mov
int
and
imul
rcl
sbbb
addr16
popa
popl
test
outsl
mov
sbb
xchg
fistpl
loope
loopne
sub
and
dec
dec
push
orl
push
adc
adc
pop
adc
inc
xchg
cmp
call
sub
mov
call
xchg
lcall
mov
adc
inc
fs
out
movsl
arpl
dec
jae
cmp
sub
fimull
sbb
jne
std
or
jno
xor
inc
xor
fwait
cmc
inc
cmp
int3
pop
dec
add
cwtl
jg
mov
repnz
add
xchg
addl
imul
cmp
fstp
das
inc
lea
adc
adc
lock
adc
push
push
or
call
aas
stos
sti
out
sub
mov
dec
in
push
mov
dec
jnp
fs
inc
loopne
loopne
adc
xchg
filds
adc
and
and
xor
mov
inc
push
xor
and
shll
das
idivb
add
sbb
loop
pop
mov
adc
jbe
inc
mov
fwait
xor
lock
mov
mov
jle
add
mov
xchg
mov
addb
push
add
and
dec
movsb
mov
add
lea
call
sbbb
mov
and
push
push
mov
and
ljmp
adc
push
cmp
add
add
push
cmp
sub
xchg
aad
mov
xchg
movsb
in
fdivl
fcmovb
push
dec
incb
gs
dec
adc
adc
and
sub
cmpsb
adc
std
fs
push
mov
inc
push
mov
imul
enter
pop
std
or
push
and
add
push
push
scas
and
ja
add
jg
or
pushf
nop
lods
mov
cmpsb
cwtl
jmp
jae
and
or
or
or
lcall
xor
or
xchg
jmp
xor
add
dec
les
or
sti
movsl
sbb
xchg
fcoms
shll
orl
mov
in
mov
or
xchg
pop
jg
dec
add
sbb
xor
inc
cmp
pop
jne
fs
rolb
aam
jge
xor
fsubrl
sbb
add
jne
sub
fisubrl
jne
mov
arpl
add
and
mov
pop
cld
aaa
mov
cltd
inc
je
add
push
into
pop
or
jne
inc
xchg
in
cmp
push
inc
pop
pusha
xorb
push
mov
xchg
inc
aad
dec
cmpb
not
testl
jecxz
xor
fldt
fwait
adcb
adc
sbb
call
out
mov
xchg
fildll
enter
jno
cmp
fldl2e
fistl
or
nop
fists
inc
mov
jns
cmpsb
cs
sbb
and
sarl
mov
pop
icebp
int
and
in
xor
hlt
out
in
icebp
push
sub
pop
rcl
stos
lea
outsl
mov
push
or
pop
bound
inc
xchg
push
xlat
inc
add
inc
xchg
int3
loopne
mov
mov
push
mov
push
xchg
sub
xchg
aam
mov
xlat
aaa
jp
movsl
out
jbe
pop
jg
add
movw
inc
add
inc
cmp
jne
xchg
mov
call
aas
or
dec
jg
push
xchg
popa
cmp
bound
lret
inc
jg
aad
jo
mov
add
mov
sti
push
pop
ret
xor
decb
add
xchg
addl
jnp
inc
jbe
lea
adc
push
movb
mov
sub
push
das
aaa
sbb
out
push
ds
call
lcall
test
sbb
push
add
mov
pop
cmp
ja
testb
pop
push
stc
mov
mov
punpckhwd
add
xlat
inc
cli
jge
sub
push
mov
push
jp
and
ficomps
inc
hlt
or
test
inc
adc
daa
lock
dec
jb
mov
inc
and
jno
aas
inc
add
adc
mov
and
cwtl
loopne
jne
inc
and
jmp
vpsadbw
test
inc
movsl
sub
xchg
popf
adc
pop
jb
pushf
inc
rclb
or
add
movzbl
xchg
add
test
je
add
cmp
sbb
and
or
adc
add
or
pushl
mov
push
push
orl
pop
pushf
call
jmp
and
jg
lret
dec
add
dec
jne
movsb
mov
sbb
nop
in
and
leave
mov
mov
dec
in
stc
sub
repz
loopne
push
push
adc
or
or
dec
insb
hlt
push
push
fnop
cmp
push
call
push
push
sbb
jmp
movsb
dec
or
mov
shlb
jmp
cld
mov
sbb
in
push
push
add
mov
pushl
out
add
xor
mov
add
and
mov
push
mov
add
pop
push
or
daa
and
cmp
pop
xor
std
and
pop
pop
push
fldl
push
and
insb
adc
cs
push
add
jmp
adc
les
adc
daa
mov
mov
add
outsb
sbb
std
sahf
inc
stos
sbb
inc
and
push
push
jmp
inc
mov
pop
xor
adc
or
iret
pushl
adc
inc
push
mov
inc
adc
mov
cmpb
jge
testb
cmp
push
mov
outsb
cmp
pop
xor
push
mov
out
lock
rclb
or
dec
fildll
lock
add
fs
adc
cmpsb
mov
insb
sar
jmp
add
mov
or
rclb
add
nop
mov
sbb
inc
insl
add
add
nop
leave
mov
lock
push
mov
jo
adc
je
mov
push
or
dec
push
enter
push
pop
add
xor
pusha
xor
sbb
scas
lock
xchg
mov
in
mov
and
adc
movsl
mov
adc
gs
adc
iret
adc
cmp
pushf
mov
iret
inc
sub
jmp
iret
pop
and
pop
adc
add
fstl
add
call
fs
or
inc
add
push
push
inc
cmp
jbe
pop
inc
cmp
and
pop
sub
das
cwtl
mov
outsl
dec
ds
mov
pop
adc
stc
push
pop
dec
das
insl
add
push
sub
inc
mov
or
rcll
inc
lret
mov
icebp
cmp
stc
in
dec
cmp
dec
jmp
inc
add
scas
cmpsb
jmp
inc
sbb
jne
icebp
lret
mov
inc
cmp
jmp
test
sbb
xor
out
push
lds
mov
ljmp
sbb
jne
push
into
cmp
dec
lcall
add
cmp
sbb
fcoms
les
mov
fcoms
or
nop
and
push
xchg
cli
int3
xor
add
xchg
pop
test
jo
stos
lods
or
mov
cmp
in
out
idivl
push
push
in
xor
andb
call
and
dec
pop
je
inc
sub
inc
sti
and
inc
dec
cld
daa
add
sub
lahf
gs
add
and
and
add
cmp
pop
pop
or
jl
jns
loopne
or
mov
sbb
fs
inc
test
push
inc
insb
and
push
push
xor
mov
mov
add
pop
add
les
sahf
data16
xchg
inc
inc
sub
jmp
rcll
cmp
push
jle
adc
gs
mov
pop
add
ret
jg
int
inc
xor
inc
and
sub
and
adc
insb
push
andl
dec
mov
pop
cld
aaa
nop
dec
add
ret
insb
loopne
cmpsl
fs
shl
testl
and
xlat
jp
cmp
lret
and
mov
xor
leave
xchg
add
mov
inc
enter
jmp
mov
and
push
jmp
mov
leave
push
push
cwtl
insb
mov
cmpsl
pop
jp
ds
mov
sbb
loopne
hlt
divb
mov
sub
or
jge
rcll
movl
pop
adc
pop
data16
jle
and
mov
test
cmp
xor
sbb
pushf
ja
mov
cmp
pop
fcoml
cwtl
cmp
cmp
push
out
cmp
jb
daa
pushf
lock
push
jmp
movb
inc
fnstsw
jne
sbb
sub
push
add
xor
mov
lea
pop
stc
stos
add
loopne
sti
inc
mov
dec
push
adc
push
sub
wrmsr
pop
mov
push
into
jmp
sbb
jg
aaa
xor
lcall
test
mov
inc
push
mov
cmpl
int
inc
push
jl
dec
lcall
or
dec
fwait
or
sarl
xchg
pushf
add
or
enter
jae
mov
and
inc
ret
loope,pn
popf
push
adc
cltd
push
in
sub
dec
andb
sub
fdiv
sbbl
loop
loope
cld
lods
into
adc
dec
cmpsl
sbb
decl
insb
or
subb
and
add
inc
dec
push
loop
or
rolb
pop
cmp
shll
inc
pop
popa
pop
sub
sbb
mov
push
sti
adc
sbb
sbb
or
dec
lret
jo
add
jmp
push
cmpb
mov
cmp
push
dec
sar
mov
mov
xor
fxsave
fwait
movsb
or
nop
lret
add
or
adc
inc
aas
sbb
jecxz
adc
popa
roll
dec
jb
mov
aaa
out
mov
insl
jmp
add
sub
and
cmp
mov
test
add
mov
add
or
hlt
dec
and
jb
xchg
ja
add
xchg
movsl
jmp
add
fsubs
fcomp
pop
add
xchg
xor
pop
lea
adc
adc
push
cmp
clc
mov
lahf
mov
jl
adc
and
clc
divl
push
pop
sub
adc
stos
inc
mov
mov
lods
cmc
xchg
mov
in
clc
sub
or
push
push
out
mull
mov
and
cmp
pop
inc
lods
test
cmp
negl
sub
inc
test
cmp
push
shlb
adc
lcall
leave
jge
add
call
xor
adc
dec
fists
sub
jmp
jecxz
sbb
lea
shr
cs
je
push
push
sar
adc
test
sub
push
inc
lods
or
mov
in
stos
mov
testl
xchg
jbe
push
cli
jmp
mov
jmp
mov
setg
mov
or
lret
mov
lcall
loop
sub
adcb
mov
sahf
adc
sub
inc
xchg
push
cltd
jle
loop
mov
push
fnstsw
pop
jnp
dec
test
inc
and
inc
mov
inc
das
rorl
or
adc
cs
outsb
nop
lods
sub
push
xchg
stc
push
mov
adc
and
call
ficompl
adc
pop
add
mov
push
jle
xchg
lods
mov
negl
scas
add
sbb
pushl
daa
mov
cmp
ja
mov
lea
and
hlt
call
xor
out
scas
xchg
fcomi
fmull
fsubr
adc
mov
in
orl
inc
or
xor
add
cli
xlat
sub
xchg
inc
adc
sbb
out
dec
jne
xchg
push
in
mov
adc
xor
movsl
add
mov
nop
or
loope
and
sarl
fwait
daa
or
add
movsl
enter
mov
push
unpcklps
pop
xor
mov
mov
in
js
loopne
or
jl
ret
xor
dec
mov
dec
dec
inc
inc
adc
xchg
loopne
mov
aad
mov
inc
mov
stos
inc
cwtl
sub
test
xchg
push
and
sbb
sub
mov
test
ljmp
lods
scas
jno
adc
popa
nop
add
or
popa
jmp
test
pop
mov
lahf
shlb
pop
add
mov
cmp
add
mov
add
and
movsbl
call
inc
adc
rcrb
seta
pop
mov
fsubrs
popf
out
pop
in
jp
testl
xor
mov
pusha
xchg
sbb
adc
push
pop
lock
jmp
xchg
shrb
rcrb
mov
les
test
jo
push
xchg
push
push
jecxz
xchg
inc
imul
cmp
adc
mov
mov
sub
hlt
mov
xchg
or
push
jb
gs
push
data16
xchg
scas
push
mov
adc
sub
dec
push
mov
nop
jmp
cmpsl
cwtl
enter
mov
or
add
mov
cmpsl
lcall
in
inc
mov
fidivrs
rcrl
add
sub
adc
xchg
adc
lea
cwtl
adc
test
loopne
jle
into
lods
or
sti
mov
lret
xchg
mov
pop
mov
mov
lock
and
mov
mov
inc
lods
dec
and
popa
adc
dec
lock
jne
adcb
in
test
add
jne
stos
dec
jb
sahf
stos
pusha
sbb
add
add
cmpw
je
or
inc
mov
xor
add
or
push
or
adc
xchg
add
adc
fstl
sub
aas
mov
repz
scas
cmpsl
mov
push
repnz
cmpl
jne
test
mov
adcb
movl
sub
jb
push
je
push
adc
push
mov
sbb
notl
jmp
and
xor
push
int
in
inc
rcrl
lret
xor
stos
stc
enter
lahf
rcrl
pop
adc
jo
stos
push
jb
icebp
enter
mov
mov
dec
shlb
rcrl
testl
js
adc
cmpsl
push
jb
push
cmp
mov
outsl
scas
mov
les
sub
add
push
fadds
dec
mov
rorb
movsb
inc
push
and
mov
add
mov
stos
rcrb
mov
js
inc
mov
adc
es
jb
je
push
nop
insb
movsl
pusha
mov
and
ret
or
mov
jb
push
rclb
and
sbbb
push
notb
shlb
sbb
jo
or
mov
enter
adc
adc
sbb
add
inc
add
add
lret
jg
jb
adc
js
jmp
adc
lret
mov
popf
fsubrl
jo,pn
gs
sub
cli
movl
cmp
nop
call
pusha
sbb
mov
push
pop
dec
lock
sub
out
daa
lret
into
cli
sbb
cmpb
not
cmp
xor
lret
sbbl
dec
push
lea
in
mov
inc
inc
or
lock
enter
or
faddl
cld
cwtl
test
dec
xchg
inc
cli
sub
pop
into
insb
arpl
leave
je
adc
icebp
pop
stc
or
in
and
mov
test
sub
nop
sarl
and
jo
stos
orl
into
xor
pop
adcb
sub
sbb
push
cmp
mov
inc
lods
jns
sub
xchg
inc
pop
jmp
sti
xchg
cmp
call
xor
inc
jae
rcrb
sub
cmc
test
adc
pushl
mov
hlt
stos
fwait
hlt
bound
jb
hlt
lea
test
mov
insb
mov
dec
lods
stos
cmp
loope
sub
push
dec
mov
adc
lds
fs
ret
adc
pop
ret
jmp
imul
push
cmp
or
mov
aaa
mov
ret
test
mov
mov
filds
sub
jmp
pushf
lds
mov
push
pop
adcb
xchg
ljmp
aaa
inc
sub
sbb
and
repz
lret
mov
inc
lret
pop
pushl
pop
inc
int3
loop
adc
scas
call
fwait
rolb
es
sub
add
adc
ljmp
mov
pop
cmp
mov
lahf
addr16
sub
add
enter
jmp
xor
jle
or
fmuls
xor
in
mov
push
sub
and
iret
xor
push
xchg
xor
jp
mov
jmp
push
lds
lret
icebp
inc
xchg
pop
stos
lret
ret
sbb
mov
outsl
std
inc
xchg
xor
clc
mov
cld
mov
dec
xlat
adc
ss
sub
mov
imul
add
sbb
sbb
jg
push
lea
xchg
cld
sahf
mov
xor
jns
inc
push
imulb
lahf
adc
xchg
or
daa
or
push
adc
jecxz
mov
mov
or
or
xchg
mov
xchg
push
dec
shl
les
fld
add
inc
jne
pop
inc
ret
hlt
stos
sbb
hlt
test
mov
out
cmp
nop
cltd
inc
adc
xor
test
aam
out
loope
mov
pushf
call
loopne
sarb
xchg
ret
cmp
leave
dec
fmul
or
mov
mov
adc
push
dec
outsb
je
inc
in
push
flds
mov
adc
and
mov
stos
add
mov
adc
pushf
mov
cld
or
xor
cmpl
sub
or
popa
add
mov
sbb
sbb
sbb
mov
add
cmp
inc
addb
lds
insb
shrb
or
push
pop
outsb
jae
mov
aam
pop
adc
addl
adc
jl
les
lahf
mov
rcll
sarb
je
xchg
sbb
adc
iret
inc
fistps
rclb
mov
sub
test
nop
lods
sbb
dec
sub
rolb
insb
negb
jne
data16
xor
rorl
xorb
xor
mov
add
push
sub
sahf
inc
popa
jo
insl
push
push
test
push
pop
sub
mov
orb
ret
adc
sbb
int3
fistpll
sbb
in
or
add
inc
shl
jo
enter
call
add
in
adc
and
and
jno
or
or
loop
xor
fsub
sbb
jns
jmp
add
adc
jns
or
insb
inc
fadd
int3
or
int3
sub
sbb
mov
sub
aam
pop
adc
and
mov
push
jge
and
mov
addb
cmp
ret
or
loop
and
mov
fidivrs
mov
sub
iret
dec
imulb
jb
or
pop
movsl
sbb
jmp
ret
mov
or
sbb
adc
js
lock
not
jns
mov
test
sub
lock
inc
sbb
in
repz
add
pushf
or
inc
les
cmp
mov
jmp
das
in
sbb
outsb
and
movsb
push
dec
or
push
mov
or
hlt
xor
cmp
sti
inc
lcall
xor
les
lahf
cs
xchg
sub
adc
mov
bound
sahf
mov
sbb
negl
inc
add
xor
out
ret
pop
fcomip
mov
hlt
dec
jge
aaa
leave
lods
or
mov
cli
jp
add
mov
aad
and
mov
test
push
mov
mov
in
cmpsb
popa
adc
xor
jnp
pop
or
push
add
inc
inc
les
mov
hlt
lret
in
xchg
jne
mov
xchg
cmp
or
daa
jecxz
jmp
add
push
scas
cmp
or
inc
aaa
mov
mov
adc
mov
push
leave
icebp
xor
shrb
sbb
add
and
nop
sub
pop
stos
cmp
call
mov
add
lock
cmpw
mov
xchg
adc
dec
in
cltd
mov
adc
push
xchg
xchg
repz
adc
mov
test
jnp
adc
or
aaa
jge
ja
pop
dec
add
adc
clc
xchg
cmp
sete
jo
addl
hlt
mov
nop
pop
or
jae
or
negb
jmp
xorb
inc
sub
mov
push
aam
movsb
inc
or
push
and
das
roll
fsubrl
je
inc
or
and
stos
in
and
lret
xor
adc
adc
hlt
mov
ss
ja
inc
rcl
xchg
mov
dec
fs
lock
xchg
push
bound
jge
lds
leave
icebp
nop
ret
add
mov
bound
xor
daa
mov
xchg
dec
imul
sbb
adc
and
stc
or
sub
xlat
test
loope
sbb
jg
in
clc
xor
or
and
nop
jle
dec
daa
cmp
mov
push
dec
pop
push
lods
test
cli
pop
or
dec
cmpsb
mov
leave
push
rcrb
arpl
xchg
dec
xor
push
in
push
or
mov
xor
outsl
mov
and
icebp
arpl
push
add
lods
popa
imul
inc
pop
inc
inc
ret
sub
xor
jo
insb
js
and
and
jae
rcll
mov
jle
je
adc
or
or
insl
push
push
js
mov
xor
std
push
inc
loope
popf
pop
je,pn
adc
movsl
sbb
push
jl
nop
cld
and
dec
clc
cmp
arpl
mov
push
add
jmp
inc
lods
mov
aaa
hlt
test
adc
outsb
adc
leave
adc
mov
mov
mov
cmp
hlt
pop
scas
mov
js
xchg
mov
in
mov
in
and
scas
fstl
sub
push
lret
and
jb
addr16
movsl
fldenv
xchg
movb
in
sub
dec
int
cmpsb
shlb
aas
sub
imul
movswl
cmc
stc
inc
mov
push
inc
out
mov
and
and
mov
sub
or
aaa
xchg
pop
push
divl
shlb
cld
adc
hlt
dec
test
jl
inc
aas
test
push
push
sbb
mov
add
cmp
jne
pop
mov
sub
xchg
dec
lds
in
call
stos
cmp
jne
nop
inc
loopne
mov
popf
mov
jne
sub
dec
int3
xchg
mov
fisttps
lock
cmp
scas
and
pusha
js
jmp
sti
jl
add
daa
in
jg
xchg
and
jle
push
cmpsl
fstl
sarl
movsb
mov
fcompl
mov
in
loopne
jl
icebp
mov
into
test
cmp
jne
and
out
pop
mov
inc
push
lock
mov
shr
xchg
in
inc
mov
pusha
adc
icebp
mov
or
or
sti
sub
dec
or
mov
les
jbe
test
jmp
movzwl
xchg
das
adc
bound
ret
pop
sub
fsubs
adc
test
dec
rcrl
fcomps
adc
cmp
lock
sarb
jl
imul
ror
adc
add
pop
arpl
and
orb
or
mov
loopne
push
xchg
les
mov
inc
outsb
hlt
and
push
test
pop
xchg
call
cltd
mov
ret
cmp
push
mov
adcl
imul
push
pop
call
js
dec
iret
sub
dec
dec
jo
insb
loope
rorb
shrb
movsl
dec
mov
and
shlb
in
hlt
cmp
cli
jecxz
jne
jns
push
and
gs
push
fdivrl
in
movb
jp
pop
orl
dec
mov
or
sbb
pushf
push
jno
jge
cld
push
nop
sbb
xor
mov
lcall
roll
stos
add
movsl
push
das
imul
or
mov
pop
into
aas
gs
xor
shl
dec
imul
test
iret
int
mov
push
push
jo
roll
push
lahf
add
and
fyl2xp1
enter
or
dec
je
dec
or
mov
ss
xor
pop
mov
rcr
adc
pusha
push
out
dec
in
push
fstl
test
mov
add
inc
sbb
and
je
lea
psraw
aam
jb
fistpl
dec
into
std
fisttpl
lret
push
push
mov
push
in
rorb
cs
pop
in
rorl
xlat
pop
sbb
rorl
adc
movsl
push
gs
xor
mov
rcll
in
je
jp
sbb
loopne
fsubrs
inc
lret
mov
int
or
jp
repz
xor
int
mov
mov
sbb
ret
testb
shll
mov
mov
push
ret
pop
mov
pop
mov
xchg
sub
jl
inc
jns
sbb
inc
inc
repz
aam
mov
inc
ficomps
xchg
add
mov
add
and
add
cmp
jge
cltd
cmp
ss
nop
ja
das
or
lods
sub
mov
xchg
in
push
or
mov
dec
daa
xchg
ja
sbb
jne
nop
test
sub
cli
add
in
xchg
lds
xchg
mov
imul
sar
ret
stc
clc
das
xchg
cld
addr16
aam
pop
fiaddl
mov
daa
movsl
pop
sbb
fstpt
sbb
sub
jl
mov
xchg
mov
or
sahf
mov
cmpsb
mov
cmp
lret
xor
adc
sbb
pop
ficoml
and
dec
out
hlt
mov
filds
jmp
mov
push
std
inc
ljmp
jnp
xchg
sarl
adc
jp
bound
and
out
mov
push
fistps
dec
fisubs
adc
mov
outsl
aam
pop
mov
stos
pop
lods
push
in
and
call
jb
jne
adc
es
push
fs
lods
dec
sahf
loopne
hlt
push
cmp
mov
pop
cmp
movsl
jecxz
js
movsl
dec
and
jmp
sbb
lcall
mov
add
hlt
mov
inc
in
mov
fcomps
test
jno
adc
mov
fcoms
inc
pop
cwtl
adc
mov
js
fadds
call
mov
in
sub
test
mov
mov
dec
or
cld
into
push
and
pop
leave
mov
cli
test
loope
jnp
mov
jne
sbb
and
pop
rclb
imul
xchg
mov
pop
jp
mov
in
push
lods
filds
inc
sub
jle
pop
xchg
loopne
or
sbb
mov
dec
sub
or
add
fnstenv
pusha
test
leave
dec
cwtl
hlt
xor
aas
fildl
fdivrs
mov
loopne
add
sbb
ljmp
or
add
andb
mov
dec
dec
dec
ret
daa
sbb
cmpw
sysenter
test
je
cmpsb
pop
push
neg
mov
outsb
push
jb
jmp
jl
pop
sti
mov
adc
std
lds
and
mov
test
add
jne
mov
add
xor
and
lock
inc
add
clc
xor
sub
inc
imull
sub
orb
dec
mov
sub
imul
fdivrs
or
jl
lea
aaa
shr
repz
xlat
push
sarb
or
repnz
push
insl
mov
sar
xor
mov
stos
imul
rclb
stos
cltd
jmp
sbb
pop
les
and
cmp
cmp
sbb
imul
fsts
jo
adc
adc
mov
mov
ret
jl
inc
je
pop
lcall
inc
xchg
subl
push
dec
push
cmp
jo
lods
jg
mov
movsl
xor
cmp
aad
sbb
mov
iret
lcall
dec
fidivs
dec
push
xor
cmp
into
jge
add
pop
ret
lret
icebp
int3
stos
lods
xor
add
xor
xor
push
shll
mov
js
insb
mov
push
inc
lret
jb
dec
and
and
loopne
xor
and
mov
sti
xor
and
push
outsl
jne
fs
xor
sub
inc
and
fs
into
cmp
xchg
les
mov
sub
push
in
inc
xor
cmp
sbb
shl
rcll
adc
les
lods
xchg
stos
dec
mov
dec
div
dec
movsb
into
cmp
ja
jne
div
xchg
or
outsb
inc
stc
aas
cltd
filds
clc
and
mov
or
mov
jp
sbb
add
je
mov
mov
mov
xor
xchg
lret
dec
pop
sbb
inc
add
pop
push
pop
jbe
inc
and
sub
sub
dec
popa
prefetcht0
inc
and
imul
sub
pop
daa
jbe
in
cli
mov
lds
jo,pn
adc
dec
cmp
lahf
pop
fmuls
js
xor
mov
or
imul
cwtl
and
xor
jge
xor
cmpl
jae
lods
clc
lret
push
xor
gs
jg
add
push
add
and
mov
mov
test
adc
xor
mov
sbb
inc
mov
shl
mov
scas
loopne
mov
cld
jnp
in
loopne
xchg
and
in
add
add
mov
adc
add
addr16
push
rclb
sbb
cmpsl
notb
jp
add
inc
inc
push
xchg
and
and
je
out
mov
daa
jecxz
dec
popa
fistpl
xor
xchg
sahf
and
pop
int
xlat
mov
es
pop
mov
cmp
pop
lahf
loop
push
je
and
out
mov
fwait
or
and
mov
test
hlt
dec
jl
push
gs
cmp
and
sbb
out
sti
pushl
adc
sbb
mov
andb
dec
jne
lret
mov
mov
cmp
cmp
xor
jnp
sbb
hlt
int3
push
les
nop
hlt
hlt
outsl
mov
jp
fisubs
cld
push
jg
pop
sub
outsb
sub
jno
mov
outsb
jecxz
pop
push
repz
mov
out
or
and
or
les
mov
push
int3
gs
inc
xchg
lds
cs
orb
addb
iret
out
adc
sub
repz
repnz
or
in
insl
push
xchg
and
jno
or
sahf
and
mov
lds
imul
jmp
pop
in
and
gs
adc
dec
movsb
int
cli
pop
sbb
das
lret
dec
mov
sbb
test
das
shlb
cmp
ret
xor
cld
aaa
mov
xor
addr16
inc
xchg
dec
clc
cmp
xor
in
fcom
shl
sahf
jl
out
in
outsb
mov
aaa
or
rorb
jbe
xor
lret
call
add
sub
dec
dec
cmp
stos
sub
jne
stc
dec
test
adc
gs
mov
ret
icebp
pop
scas
push
cld
xchg
push
xchg
push
hlt
xlat
inc
or
cld
or
jae
mov
cli
mov
cmp
in
in
in
and
dec
or
push
js
pop
sub
mov
aas
pop
add
or
inc
mul
aam
sti
push
cmp
jne
lcall
in
loop
lods
xchg
pop
fldenv
out
or
add
xchg
mov
dec
out
mov
pop
dec
fldt
dec
out
lret
mov
mov
cmp
mov
dec
sbb
insl
xchg
cmpps
pop
inc
push
dec
rcrl
and
push
push
or
lret
pop
xchg
out
aam
mov
mov
rcll
lods
data16
push
data16
fcompl
push
fs
pop
inc
fists
sbb
call
enter
xchg
xchg
enter
or
mov
jmp
test
adc
dec
xor
fadds
add
in
adc
test
mov
or
imul
jae
jae
xor
xchg
lods
in
or
scas
inc
push
mov
repnz
dec
add
push
mov
and
pusha
cmp
in
dec
stc
push
fistpl
leave
jmp
sub
adc
mov
sbb
out
mov
and
mov
insl
inc
stc
jle
je
adc
data16
sbb
std
cltd
das
add
or
rolb
fbld
pop
xor
fiadds
sub
and
sub
push
adc
dec
cld
mov
int3
adc
xchg
and
imul
ja
iret
jmp
icebp
in
daa
mov
xor
cmp
icebp
xchg
mov
fs
xchg
dec
cmp
xchg
lock
test
nop
xor
dec
enter
inc
cs
lods
dec
jge
lcall
mov
or
subb
add
inc
or
jp
movsb
lret
ljmp
add
sub
jle
leave
in
xchg
push
cmp
xor
sub
mov
add
call
jne
and
into
fistl
stos
jb
push
aad
ret
rorl
lret
jl
or
adc
lahf
call
movsl
in
mov
or
push
call
jb
mov
add
jmp
adc
xchg
xchg
sbb
loopne
xchg
sub
mov
ret
xchg
lods
and
sbb
xor
mov
cmpsl
add
outsl
pop
sbb
call
add
cmp
je
inc
dec
mov
lahf
aad
or
dec
push
mov
scas
pop
scas
mov
pop
mov
and
adc
call
or
ror
and
xchg
clc
inc
push
cwtl
mov
loopne
pop
out
push
mov
sbb
push
adc
out
out
add
in
das
or
push
daa
sbbb
clc
and
loop
out
adc
adcl
mov
outsl
adc
push
inc
loop
out
sbb
lahf
int
sbb
mov
jnp
lds
push
adc
leave
adc
push
sub
or
shrl
cwtl
lods
or
pop
mov
inc
push
jb
addr16
sub
cmpsb
push
dec
cmpsl
lods
xchg
sub
call
je
mov
pop
cmp
dec
call
cmp
test
and
cmp
or
or
add
push
loopne
sub
add
mov
sub
out
and
cmp
sub
or
sbbl
es
push
fidivrs
popf
movl
adc
faddl
inc
pop
and
jmp
mov
fs
adc
icebp
mov
movsb
nop
mov
inc
add
add
mov
int
push
push
pop
cld
adc
scas
data16
inc
add
and
jae
or
nop
cld
cmp
test
andb
mov
repz
flds
or
xchg
pop
mov
cld
mov
scas
test
inc
push
and
outsb
xor
loop
or
repnz
pop
in
jg
rclb
repnz
xchg
lock
lock
repnz
stos
mov
mov
lods
xchg
cld
pusha
in
cld
xchg
or
jne
stos
fsubrs
inc
repz
leave
push
ds
pusha
dec
popa
insl
rcll
push
push
not
jb
push
jo
add
xchg
adc
lea
cwtl
stos
mov
dec
cmp
outsl
ds
stos
or
or
cwtl
mov
xlat
and
ret
xchg
xchg
fiadds
fisubs
fmulp
cmpsb
sbb
lcall
mov
pinsrw
repz
jo
mov
push
lahf
stos
divl
testb
add
sub
out
cmpsl
add
movsl
movl
jle
pop
int
jmp
cmpsb
adc
mov
mov
mov
aad
cmp
ja
add
shr
pushf
inc
xchg
cli
stos
push
je
add
or
rol
add
fsubl
cld
push
imul
mov
adc
movsb
or
ret
mov
inc
inc
in
cmp
or
fsubs
jo
xchg
lahf
xorl
jne
pusha
xchg
je
int3
and
enter
jge
lock
scas
xor
popf
cmp
push
bound
hlt
add
ja
mov
inc
sbb
sbb
jae
ss
and
insb
pop
mov
das
sbb
sub
cmpsb
arpl
push
xor
imul
test
shl
adc
cmp
call
xchg
loopne
or
lods
les
pop
or
pushf
mov
cmc
cmpsb
or
inc
dec
sbb
and
psubb
jne
in
pop
adc
jmp
or
cmpl
pop
add
mov
sidtl
and
cld
sahf
je
loopne
or
fists
dec
cmp
fs
xlat
leave
inc
imul
enter
int3
push
add
sbb
push
push
pop
adc
test
mov
jp
push
outsb
dec
sub
fs
test
dec
stc
es
movups
xchg
decl
ss
xor
or
es
das
ja
fistpl
mov
adc
ret
mov
dec
mov
add
add
mov
dec
mov
je
adc
dec
fs
lret
sbb
mov
adc
fdivrs
insb
jl
daa
pop
je
mov
jnp
lods
loop
sbb
daa
inc
fwait
sar
dec
leave
sbbl
lods
arpl
push
rolb
xchg
int3
pusha
add
les
and
out
aas
mov
popa
popa
mov
adc
cs
mov
cmp
add
les
and
cld
push
loope
clc
jns
test
cs
cmp
rcl
mov
js
lock
and
sbb
mov
mov
test
xor
push
add
pusha
cmp
push
xchg
lea
daa
pop
dec
add
cmpb
adc
mov
in
and
inc
push
incl
jge
inc
xor
lock
adc
test
jns
jg
lods
lds
int3
inc
test
sbb
lea
fs
shr
les
xchg
adc
inc
sub
xchg
add
mov
imul
add
mov
enter
push
pop
or
xchg
fildl
push
mov
xchg
rclb
cmp
lods
outsl
addr16
rol
clc
dec
outsb
lods
mov
inc
add
and
ljmp
sbb
jecxz
add
sbb
shl
out
aam
orl
and
inc
xlat
popf
daa
lods
js
sarb
mov
aam
sub
sub
push
stos
or
pop
negb
xor
es
lods
shll
add
fcmovbe
inc
pop
dec
test
cli
inc
dec
ljmp
push
sub
and
cmp
jecxz
cmpsb
lret
jmp
cmp
pop
or
jae
addr16
test
leave
into
in
aaa
and
pop
cmp
fs
add
or
leave
inc
jl
dec
push
subl
fisttpll
push
cltd
es
test
sbb
inc
xor
repnz
pop
sub
sti
into
or
inc
push
bound
ret
sbb
pop
icebp
scas
loop
je
ljmp
dec
fmuls
nop
test
push
dec
shrb
ds
stos
and
pop
mov
and
outsl
sbb
loop
lret
xchg
fwait
adc
adc
dec
mov
pop
sub
rolb
push
push
nop
push
inc
and
mov
adc
stos
jg
adc
adc
xor
mov
cmp
stc
dec
mov
adc
rolb
sbb
adc
lea
das
decl
adc
in
inc
sub
mov
int3
jne
enter
jmp
lcall
loopne
shlb
or
imul
pushf
xor
std
and
pop
dec
icebp
cwtl
xchg
xor
cmpl
std
pushf
cmp
mov
mov
icebp
imul
and
decb
das
mov
add
inc
inc
cmpb
xor
in
mov
or
and
push
and
ds
rcll
inc
lea
ss
cmp
mov
sbb
repz
xchg
push
sub
popf
out
or
test
xchg
std
ss
daa
push
imul
das
loopne
call
orps
outsb
mov
push
int3
andb
in
frstor
push
adc
sub
enter
outsb
xchg
cmp
loopne
loopne
adc
shll
or
or
sub
adc
dec
and
loopne
out
pop
xor
push
cmpsb
push
popf
inc
popa
lods
dec
cmp
cmp
mov
adc
std
cmpb
adc
push
mov
cmp
push
adc
mov
dec
mov
imul
jecxz
pop
fdivl
pop
out
mov
test
mov
cld
sti
loopne
sbb
adc
adc
xor
data16
sbb
arpl
insl
aas
pop
es
loop
mov
adc
adc
mov
xchg
inc
and
sub
roll
push
inc
push
mov
mov
ljmp
cmp
xchg
inc
fstp
mov
cld
inc
inc
jo
fdivl
xchg
add
ss
hlt
rclb
add
jge
adc
jg
iret
test
add
push
add
setge
ja
mov
dec
stc
fstp
adc
jns
stc
clc
fstps
adc
and
fistps
test
pop
ss
fcoms
daa
sbb
xor
sub
out
jp
xchg
imul
add
test
mov
adc
rcrb
mov
popf
sbb
leave
add
test
pop
mov
enter
and
mov
test
mov
adc
adc
sub
sbb
xor
and
in
and
mov
pop
mov
lahf
add
push
pusha
stos
mov
mov
add
mov
or
push
xchg
dec
sbb
cltd
gs
cmp
shll
xchg
jmp
add
bts
add
dec
jne
jne
xor
rclb
jl
pop
shl
mov
daa
popf
jne
call
cmp
jae
sub
pop
add
sub
push
cmpb
ljmp
add
cwtl
dec
jne
mov
and
adc
stc
addr16
cmp
push
and
dec
lock
push
and
imull
testb
je
sub
testb
push
sub
xchg
xor
dec
cwtl
push
jmp
movsl
and
add
je
data16
jb
inc
sbb
sti
ljmp
js
mov
cmpsl
pop
lcall
scas
cmp
cwtl
xchg
jno
xlat
add
repz
sbb
push
push
dec
call
jmp
pop
mov
dec
lea
gs
test
xchg
sub
ljmp
mov
in
fstpt
imul
xor
clc
mov
repz
lods
in
jbe
mov
cmp
iret
add
sub
outsl
repnz
daa
lret
pop
outsb
pusha
xor
cmp
push
mov
xchg
add
xor
orl
sahf
in
dec
mov
dec
lods
fcomip
leave
sub
je
mov
enter
cltd
loopne
xchg
or
insb
rorl
pop
or
push
sub
cmpsb
in
cli
shll
pop
insb
cmp
ljmp
imul
adc
mov
jbe
ret
nop
cmp
adc
cs
enterw
or
sub
cwtl
loop
cmc
bound
mov
in
pop
mov
nop
fwait
sub
xchg
adc
or
dec
mov
xchg
jmp
push
push
rorl
sub
pop
mov
movsl
jg
mov
and
adc
mov
pop
xchg
dec
call
leave
push
cmp
clc
loope
pop
push
les
adc
ja
movsl
lods
in
cmp
jecxz
mov
cmpsb
push
mov
sbb
fsubl
pop
pop
bound
or
es
movsb
dec
jo
adc
push
cltd
and
imul
sub
push
testl
scas
ja
jmp
fsubrs
mov
shlb
sti
adc
and
add
scas
in
or
lret
es
lahf
push
push
mov
popa
add
jmp
pop
mov
dec
cltd
adc
dec
or
mov
aad
lea
sub
pop
stos
pusha
lock
push
mov
pop
or
jae
push
das
cld
movb
lods
icebp
and
rorb
mov
dec
or
stos
and
pop
push
mov
sbb
hlt
or
and
sti
mov
push
inc
adc
das
inc
jp
or
lods
or
fimuls
cmp
inc
lea
adc
adc
rorl
or
mov
xchg
or
mov
or
sbb
inc
pushf
mov
cwtl
popa
mov
and
fs
sub
sub
add
jnp
lods
xor
stos
jae
int3
sub
ljmp
test
sub
inc
add
sti
inc
pusha
les
adc
scas
pop
push
mov
xor
test
lcall
pushf
movsl
shlb
pop
sub
gs
push
jmp
dec
jbe
xor
nop
jmp
xor
jmp
std
fs
inc
mov
push
ljmp
xor
sub
cmp
cs
lea
ret
inc
xchg
jno
pop
cmp
or
pop
sbb
ljmp
adc
mov
mov
loop
sub
add
idivl
xchg
xchg
sub
adcb
or
daa
add
ja
inc
xor
insb
insl
movsb
xor
scas
adc
adc
mov
ja
and
mov
in
imul
je
push
popf
lcall
inc
jge
movsb
in
jbe
test
cli
xchg
xchg
inc
call
jmp
testl
push
push
mov
div
push
loop
jae
mov
movsl
adc
jne
add
cmp
inc
sti
mov
inc
into
jle
pusha
adc
lret
push
inc
js
mov
lret
fistl
or
jbe
push
cmpsl
or
ljmp
jae
xchg
jmp
jb
mov
dec
mov
sti
test
das
cld
mov
je
fadds
iret
dec
ss
imul
stc
dec
cmpsb
mov
pusha
mov
pop
movzwl
jmp
fisttpll
mov
fldl2e
dec
shll
shlb
int3
leave
icebp
push
xchg
fdivrs
jg
mov
xchg
xchg
mov
add
das
dec
jne
sub
mov
repz
sbb
and
dec
fsubrs
pop
inc
lods
sub
rcl
mov
adc
test
leave
repnz
xchg
jne
mov
mov
adc
mov
push
cmpl
push
mov
pop
add
cld
sti
repz
jb
rclb
subl
inc
gs
xor
insl
sahf
addb
das
je
pusha
mov
enter
in
sub
int3
lea
lods
lods
int3
lea
shlb
in
shlb
adc
sbb
adc
enter
or
fcom
test
and
inc
mov
and
xchg
adc
fs
inc
dec
jo
andb
cmp
add
lret
inc
adc
push
inc
cld
arpl
cmpsb
leave
push
pop
sub
dec
dec
pop
and
sbb
adc
sar
xchg
lods
cmpsb
push
shl
add
sti
movsb
add
fucomi
mov
fs
je
jl
js
mov
fstpl
jns
lea
test
repz
mov
push
inc
sbb
dec
shrl
lock
xchg
out
int
dec
sub
leave
push
xchg
inc
push
mov
fidivrs
sub
call
push
pop
ret
add
xchg
daa
lea
ja
mov
sbb
mov
jp
or
mov
hlt
add
xor
mov
xor
cwtl
jo
sub
sub
arpl
and
gs
rclb
test
cmpsb
push
mov
stc
and
push
mov
out
test
mov
pushf
sub
je
adc
xor
lea
dec
cs
in
pop
xor
mov
popf
push
xchg
mov
les
pop
jecxz
or
add
push
and
jno
mov
push
in
sub
inc
pop
inc
pop
mov
lret
js
loope
add
or
or
or
dec
mov
adc
stc
xchg
mov
mov
cltd
pop
imul
inc
pop
cmp
xchg
or
js
mov
pop
mov
push
sub
xchg
mov
fwait
les
push
scas
jno
enter
jae
inc
and
jl
push
add
dec
jne
shll
mov
jmp
xlat
into
call
mov
pushl
aaa
clc
dec
cwtl
and
jl
fucomp
loopne
movb
jle
push
xchg
aas
add
sub
stos
aad
mov
repnz
adc
jmp
dec
dec
sbb
cltd
inc
testb
fcoms
push
stos
call
cmpsb
push
fs
inc
scas
push
call
sub
es
jne
enter
loopne
daa
lcall
adc
nop
xor
xchg
imul
adc
notl
xchg
sahf
xor
inc
add
fidivrs
pop
sub
mov
cmp
or
push
and
aam
cmpsl
cltd
jnp
jmp
mov
push
jbe
xchg
cmp
pop
sbb
int3
adc
test
mov
jns
adc
or
hlt
dec
gs
adc
sbb
je
add
lods
sub
sbb
fcomps
pop
ja
add
jae
jecxz
dec
push
mov
fbld
xchg
push
es
out
push
mov
dec
pop
adc
dec
int3
lock
push
pop
adc
js
add
jnp
js
push
jne
jb
push
dec
outsb
outsw
leave
insl
fisttps
jne
outsl
sbb
push
cs
sub
adc
mov
movsl
jp
into
test
push
mov
insb
push
jns
xchg
push
or
xchg
jmp
movsb
adc
sbb
sbb
lods
fcoms
decl
shr
bound
push
lea
andl
pop
gs
in
daa
inc
lret
inc
and
popf
push
jp
pop
lret
pop
mov
inc
movsb
xor
adc
ret
mov
je
lods
dec
les
adc
sbb
mov
sub
repnz
adc
mov
push
int3
sbb
cmp
aam
sbb
cmp
xchg
xor
inc
imul
inc
test
cmp
jl
and
adc
add
xchg
push
sub
inc
test
arpl
stos
add
hlt
pop
fdivl
inc
jb
mov
mov
jl
xlat
leave
and
sbb
push
call
scas
aam
cmp
inc
bound
add
pop
roll
cmpsl
mov
fisttps
andb
pop
inc
or
xor
sbb
mov
sahf
push
lock
inc
mov
lods
bound
imul
dec
movb
popf
call
sub
inc
sbb
lods
nop
xchg
test
inc
cld
cmp
xor
jne
insb
dec
dec
mov
and
adc
fsubr
sbb
add
loop
loopne
push
das
mov
arpl
push
inc
sbb
push
add
out
and
push
prefetcht1
xabort
mov
sbb
dec
or
mov
subb
les
loop
pop
push
fisubrs
jo
or
or
or
cltd
adc
cwtl
int3
call
fadds
loopne
int
fisttps
test
in
jbe
hlt
aam
clc
adc
fisttpl
mov
inc
or
adc
fsts
out
push
int3
xchg
pop
loop
mov
rolb
add
lret
sti
mov
loop
test
xchg
movsb
imul
sbb
xchg
and
sub
sub
xor
xor
cmp
inc
inc
and
dec
adc
inc
out
loop
sub
pop
jnp
dec
cmc
pop
mov
add
lock
inc
fisttpl
mov
mov
cmp
lea
pop
stos
or
mov
test
and
mov
pop
stc
cmpsl
xor
pop
cwtl
or
mov
cld
in
jns
jl
pop
int
sti
movswl
cli
gs
testl
fimull
or
call
leave
sub
rorl
test
adc
inc
and
mov
mov
int3
test
add
cmp
or
cli
add
rcrb
out
adc
enter
and
mov
sub
push
push
fwait
pop
xor
mov
rolb
mov
mov
xor
or
jp
and
in
insb
test
mov
add
pop
aam
enter
sbb
pushf
outsl
push
and
icebp
add
push
cmc
or
enter
or
inc
xor
mov
xchg
sub
mov
les
mov
adc
cmp
stos
and
in
cmp
fsubrl
adc
adc
test
xchg
repnz
inc
cmp
mov
and
add
or
xchg
and
jl
or
inc
scas
jg
or
enter
xor
or
xchg
push
stos
and
in
insb
push
lea
ret
and
jo
pop
jae
xor
cmc
or
enter
xor
or
xchg
push
mov
daa
das
sbb
dec
or
repz
test
xchg
das
filds
pop
pop
aad
cwtl
add
and
dec
xchg
pop
and
pop
add
xorb
and
mov
repz
mov
cmpb
jbe
cmp
dec
mov
cmc
xor
push
sub
adc
add
pop
sbb
mov
or
xor
sub
rorl
lock
add
testl
jle
aaa
push
add
orb
sub
sub
mov
mov
repz
cmpsl
jg
aam
mov
imul
inc
mov
xor
and
add
push
push
call
sub
or
in
ret
ljmp
dec
mov
cltd
jge
test
aam
add
add
and
pop
lods
daa
cmc
adc
push
je
jns
popf
insl
dec
xor
mov
enter
mov
or
inc
add
push
mov
nop
xor
add
movsl
and
and
or
sbb
push
mov
cmp
adc
mov
add
adc
sbb
or
bound
and
sub
xchg
cwtl
push
add
add
xchg
push
call
jmp
adc
mov
push
call
pop
or
pop
sbb
adc
or
pop
clc
sbb
push
or
sbb
dec
mov
push
inc
xchg
sub
adc
pushf
and
adc
sbb
or
pop
push
jp
aad
pop
and
inc
xchg
xchg
sub
shlb
push
jl
and
mov
jge
pop
xor
jl
sub
inc
call
outsl
repz
cli
stc
out
test
mov
jge
xchg
ret
mov
popf
pushl
push
shl
pop
cltd
outsb
addl
pusha
cmpl
sub
push
sbb
arpl
inc
aas
dec
dec
cmp
or
add
push
sbb
jle
jne
movsl
add
pop
cmpsb
and
pusha
ds
jb
sub
sbbl
cmp
lods
pushf
xchg
jns
popf
and
push
dec
inc
pop
dec
aam
xor
and
adc
or
xor
dec
popf
call
sbb
xchg
and
ds
js
jl
or
cld
inc
push
mov
mov
sbb
mov
and
pop
ds
sub
push
ret
sbb
add
orb
test
clc
mov
jne
sub
aad
pop
add
mov
mov
jbe
xchg
gs
sarb
push
and
xchg
sub
inc
mov
ja
mov
clc
xlat
or
push
popa
sub
adc
ss
push
fnstenv
les
hlt
add
add
jmp
inc
push
test
xor
push
adc
or
push
adc
sub
outsl
pushf
daa
notl
inc
imul
cmp
cmp
push
adc
dec
dec
xor
inc
adc
adc
aam
adc
dec
cld
fs
xchg
sub
sbb
push
cmp
or
mov
sub
add
xor
inc
dec
mov
mov
shrl
icebp
fsubrs
mov
and
ret
nop
sub
aam
jp
cltd
fdivrl
or
jge
jle
jg
pusha
in
jb
cmp
mov
and
fbld
xchg
imul
insb
cmp
outsb
mov
and
push
enter
jb
cmp
push
mov
and
pop
enter
jb
cmp
pop
mov
and
inc
enter
jb
cmp
inc
mov
and
dec
enter
jb
cmp
ljmp
xor
xor
xor
sbb
mov
and
xchg
cmp
cmp
cmp
sbb
mov
and
xchg
and
and
and
sbb
mov
and
xchg
sub
sub
sub
call
cmp
das
test
cmpsb
shlb
in
push
mov
lcall
stos
pop
push
cmp
xor
inc
cld
xor
adc
inc
mov
jb
je
or
pop
testb
sbb
insl
fs
les
inc
sbb
jp
push
xor
cmp
popa
jne
je
sub
fwait
bound
inc
mov
dec
ret
jae
lock
pop
repnz
push
xor
adc
dec
xchg
out
push
push
jmp
nop
sbb
pop
jo
in
rcrl
xor
data16
nop
fidivl
arpl
adc
push
mov
subb
jne
mov
or
or
jae
mov
push
add
inc
push
dec
orb
packsswb
adc
push
je
or
insb
pop
pop
inc
sarb
xor
imull
inc
mov
in
pop
push
and
and
xor
subb
insb
popa
arpl
push
sbb
gs
dec
outsl
repnz
push
test
sbb
jns
stos
or
dec
jmp
and
adc
or
inc
and
inc
or
or
or
movsb
and
pop
mov
adc
test
addl
mov
pop
movsb
inc
xor
aad
add
imul
sbb
fdivl
push
inc
or
inc
lock
or
inc
dec
cmp
jb
jne
sub
inc
or
cmp
insb
xor
xchg
movsl
adc
or
mov
test
enter
je
mov
imul
and
pusha
pop
adc
xlat
or
out
unpcklps
mov
imul
and
rclb
scas
cmp
lods
out
adc
les
jo
pop
pop
adc
and
and
push
aam
mov
push
daa
jl
jno
xchg
jne
or
out
leave
dec
add
pop
and
inc
and
rclb
fs
or
mov
pushf
mov
ret
dec
mov
lret
sbb
dec
insb
dec
mov
add
push
dec
imul
dec
xchg
cmp
ret
in
mov
sbb
cmp
arpl
pusha
rorb
xchg
inc
push
add
gs
sub
or
out
jle
mov
xor
adc
enter
jl
fcoms
push
addl
xchg
pop
or
mov
push
movsb
inc
xor
push
or
sub
roll
repz
push
add
leave
cmp
or
aas
roll
pop
loope
and
cmp
pop
push
or
inc
xchg
fcoms
je
mov
mov
fldenv
sbb
add
sbb
mov
sub
or
add
or
movsb
cmp
push
add
and
push
xor
sbb
loope
aaa
push
sub
xchg
adc
sbb
inc
sbb
cld
pop
and
out
sbb
sbb
pop
push
daa
inc
popa
add
sub
push
rorl
inc
mov
pop
mov
mov
xor
mov
int3
sbb
leave
pop
or
nop
xlat
insb
xor
movsl
inc
inc
pop
bound
mov
shlb
pop
xor
inc
aam
cmp
ret
jg
cwtl
and
popa
mov
mov
jo
adc
mov
icebp
nop
adc
mov
outsl
push
mov
cmpsl
jbe
dec
je
cmp
ds
into
push
pop
add
inc
popa
sbb
push
or
inc
mov
push
add
jns
and
push
std
xchg
inc
cmpsl
pop
pusha
sbb
add
cmp
mov
add
daa
addr16
jbe
imul
cmpsb
insb
and
mov
add
push
mov
pop
rcll
ret
pop
or
in
or
inc
push
jmp
or
mov
mov
dec
sbb
add
es
adc
mov
pop
xchg
xor
cmp
dec
pushf
push
das
pop
cmp
lods
xor
dec
pop
or
ss
jl
pop
push
mov
and
adc
jo
data16
or
mov
daa
hlt
cwtl
push
push
jne
lods
jmp
or
cmp
std
rclb
xor
cmp
movsl
sub
sbb
loop
leave
xor
outsb
mov
and
inc
sarb
jge
mov
jmp
or
dec
sub
cmc
es
fbld
mov
adc
adcl
push
or
cmp
ret
inc
sbb
push
push
sbb
sub
push
icebp
nop
jnp
push
rorb
cli
adc
push
hlt
loop
and
dec
cld
dec
les
push
fnstenv
jae
icebp
shll
test
inc
js
scas
adc
fdivrl
iret
push
loopne
add
stos
das
pushf
xchg
in
les
cmp
or
insl
push
test
cmp
pusha
mov
adc
jl
push
xor
les
mov
bound
adc
xor
nop
cmp
notb
add
inc
sub
xor
repnz
jl
stc
or
dec
cmpb
rclb
mov
dec
mov
mov
or
adc
xchg
mov
mov
dec
push
or
imul
sub
or
cmc
cmp
dec
mov
inc
sbb
mov
inc
xchg
inc
mov
insl
mov
pusha
adc
dec
and
mov
call
test
popa
clc
popf
add
sbb
mov
mov
adc
add
scas
add
pop
dec
mov
bound
sbbb
or
lods
xor
nop
mov
adc
sub
push
cmp
shlb
movsl
inc
ljmp
sbb
inc
sbb
dec
mov
rorb
push
dec
arpl
outsb
test
adc
pop
or
js
sbb
enter
jl
sub
jl
stc
or
jl
xchg
adc
mov
inc
ret
push
mov
fmuls
in
dec
add
test
pop
or
hlt
ljmp
ret
pop
lahf
dec
dec
shlb
nop
or
inc
dec
stc
add
and
xor
xchg
push
adc
sub
lea
mov
pop
ret
shlw
xor
inc
adc
idivb
mov
lea
in
outsl
test
cmpsb
test
ljmp
test
pop
xor
popa
or
popa
or
cli
fcomps
mov
jl
test
xor
stos
cwtl
int
rcll
inc
fdivrs
add
pop
clc
jmp
jge
inc
cmc
jg
cwtl
and
sbb
jne
jmp
mov
and
jnp
mov
subb
shll
sub
sbb
out
pop
clc
lods
xchg
cltd
push
stos
adc
or
adc
or
insb
xchg
sub
cld
adc
push
stc
das
push
clc
sub
call
test
mov
scas
mov
cmc
out
sub
inc
je
mov
add
inc
and
or
sahf
lock
mov
js
aas
pop
xchg
daa
neg
push
sub
adc
adc
rcrl
mov
cmp
jl
adc
or
adc
fs
mov
mov
in
pushf
jb
jle
jo
xor
add
test
and
dec
cmpsl
scas
lds
je
mull
xchg
xlat
push
jbe
xor
mov
mov
stos
gs
scas
adc
or
pop
lret
sbb
inc
nop
lods
gs
sub
test
inc
pop
sub
addr16
rolb
pop
add
jo
mov
std
inc
and
pop
adc
or
adc
mov
popf
jns
dec
outsl
sarl
loope
xchg
nop
in
call
jns
faddl
push
mov
pop
mov
sbb
mov
mov
xor
and
mov
outsl
aaa
sub
or
mov
inc
mov
popf
repnz
inc
push
in
pop
push
aam
push
rorl
or
in
test
sbb
mul
jmp
cmp
arpl
inc
fists
mov
addl
pop
in
sub
mov
dec
nop
imul
and
popa
jo
movsl
inc
xchg
push
push
mov
dec
and
sub
rcrb
js
imul
add
push
inc
or
gs
pop
sti
lahf
inc
outsl
ja
push
and
xchg
call
popa
mov
jno
push
popa
loopne
mov
pop
call
orb
dec
push
sub
pop
and
inc
dec
sub
and
dec
adc
loope
je
xor
xchg
jle
and
lds
les
mov
push
pop
imul
popa
rcr
cwtl
repnz
dec
stos
cmc
push
mov
rolb
inc
rclb
imulb
popf
fisttpll
or
adc
mov
rclb
inc
inc
xor
mov
inc
or
sbb
dec
fldcw
int3
inc
imul
and
dec
clc
cmpsl
and
cltd
adc
jb
xor
adc
sub
outsl
sub
adc
loope
jp
pop
push
insl
cmp
mov
add
or
shll
imul
rolb
or
outsb
jne
mov
aam
les
es
adc
call
push
icebp
dec
xor
push
int3
or
and
xor
xchg
loope
mov
bswap
dec
loope
or
sub
cmp
movsb
and
xchg
mov
pop
push
pop
cmp
push
xor
dec
nop
mov
fwait
cmp
rclb
or
rcl
inc
or
call
lds
sti
shlb
call
mov
dec
push
dec
pop
inc
dec
fstl
inc
push
loope
cmp
add
inc
inc
push
dec
push
scas
sbb
dec
inc
dec
dec
movsl
xor
xor
inc
inc
dec
sub
adc
dec
dec
inc
out
dec
hlt
pusha
mov
inc
ret
xchg
or
inc
dec
xor
add
xor
xor
dec
dec
inc
and
in
inc
push
xor
jg
dec
call
push
dec
xchg
adc
fsubrl
push
imul
inc
movsl
sbb
inc
inc
and
andl
cld
test
loopne
repnz
pop
and
adc
push
add
dec
push
int3
mov
dec
test
pop
push
adc
or
fwait
mov
xlat
inc
sahf
mov
xchg
ss
pop
jbe
or
push
call
daa
jl
xchg
les
mov
sbbb
adc
jne
or
dec
adc
pop
or
inc
or
push
cmp
push
mov
jmp
jmp
insl
mov
inc
or
mov
dec
sbb
xchg
rorb
or
inc
or
add
or
lds
into
jo
shlb
mov
sbb
sbb
sbb
jmp
sbb
loop
jmp
cmc
xor
call
xor
cmpl
daa
shrb
cli
clc
test
mov
adc
mov
mov
and
add
sahf
sbb
dec
or
cld
ret
shld
push
inc
aaa
inc
pop
rol
sbb
inc
int3
je
mov
rcrb
cmc
cmp
loope
dec
adc
test
shll
sbb
pop
outsb
in
cmp
adc
fwait
sbb
lods
in
xchg
mov
dec
sub
movsl
mov
adc
dec
mov
cmp
je
mov
or
push
mov
jp
in
nop
push
mov
mov
dec
push
test
addb
xor
rcll
xchg
and
add
adc
lods
fxch
les
xor
adc
add
add
or
and
add
mov
jmp
xchg
and
xchg
mov
icebp
mov
ret
sbb
mov
repz
mov
and
sbb
and
in
imul
and
enter
push
sbb
or
adc
jge
mov
shrl
push
or
or
or
imul
or
insl
mov
sub
mov
loop,pn
icebp
jne
and
dec
scas
sub
notb
lea
in
inc
and
mov
shrl
ds
out
or
sub
push
test
sub
nop
cmpsl
sub
inc
iret
and
xor
cld
mov
or
aam
cltd
shrl
ret
mov
ds
sub
mov
insb
imul
insl
mov
addl
push
push
push
sahf
aaa
pop
pusha
xchg
test
add
in
dec
and
mull
pop
push
ds
loopne
cmp
sub
mov
mov
pop
xchg
jmp
sbb
xor
xor
mov
pop
jle
inc
inc
xor
or
bound
xor
or
sub
mov
and
es
pop
sbb
mov
jo
in
jl
inc
push
loope
push
pop
and
jae
push
outsl
in
mov
decb
vaddpd
clc
adc
push
and
repnz
add
lock
inc
lret
ret
push
sbb
insb
cmp
jne
lods
loopne
rcl
push
mov
adc
sbb
mov
sub
and
sbb
mov
call
adc
xor
sub
mov
and
push
cmp
lods
and
dec
fmull
mov
xchg
sbb
cli
or
push
xor
inc
or
mov
enter
cmp
xchg
or
je
push
clc
cmp
enter
addr16
push
mov
pop
dec
nop
mov
xchg
mov
ret
cmp
nop
mov
push
setbe
outsl
mov
outsb
mov
mov
inc
mov
lock
adc
ret
movb
fidivrl
in
inc
lock
test
lock
push
in
sub
mov
jnp
fisubrs
push
mov
mov
aam
xchg
insb
sbb
add
ss
fisubrs
cmpsl
rcl
ljmp
jmp
push
push
lock
dec
adc
xor
and
out
or
rorb
xor
mov
push
jmp
sub
jb
push
nop
iret
dec
rcrb
or
sub
xchg
sbb
or
add
or
add
scas
push
aas
sbb
xchg
stos
lahf
hlt
dec
jmp
lea
xor
arpl
cld
adc
ja
aaa
jle
movl
outsl
dec
mov
and
adc
inc
ss
std
sbb
inc
sub
jnp
and
sbb
repnz
xlat
in
iret
les
fwait
adc
push
nop
leave
pushf
jl
cmp
lret
mov
push
jecxz
dec
or
and
adc
fisttps
notb
scas
aam
pop
nop
mov
mov
mov
aad
xchg
stos
es
ret
enter
jge
push
lock
jbe
clc
push
cmp
mov
invd
mov
lods
push
inc
int
push
ss
cs
xchg
push
in
mov
sbb
ret
pop
or
divl
imul
sbb
das
pop
rcrb
lds
movsb
inc
adcb
mov
add
test
pop
fidivrl
icebp
lea
push
test
or
ret
test
pop
and
cld
pop
ret
sub
iret
mov
addl
sub
cmp
imul
jmp
jns
lods
clc
sub
imul
pop
insb
aam
inc
dec
push
movsb
inc
and
or
mov
inc
shll
dec
mov
and
repz
mov
fs
in
call
xchg
in
cli
cmp
push
push
scas
fldl
loop
mov
xor
push
add
inc
xor
dec
mov
test
inc
pop
mov
dec
mov
xchg
mov
pop
jns
aam
divl
add
popa
push
es
push
sbb
push
es
pop
pop
repz
cmp
xchg
stc
stos
cmpb
push
sbb
cmpsl
mov
xchg
cmpl
je
leave
js
lods
pop
pop
test
push
mov
dec
and
or
loop
adc
dec
add
add
push
imulb
daa
push
aad
jmp
mov
and
das
les
xchg
ljmp
sbb
inc
aaa
ret
hlt
ror
sub
or
nop
xor
outsb
dec
stos
cmp
xor
loop
cmpb
jne
inc
mov
or
pushf
pop
pop
scas
and
push
ret
cwtl
xchg
pop
mulb
push
xchg
leave
leave
dec
jg
mov
data16
mov
fstl
sbb
movsl
jge
dec
inc
or
mov
or
or
xchg
sub
pop
shlb
andl
and
leave
lea
repnz
sbb
xchg
and
inc
jnp
lock
mov
mov
in
lods
les
aas
es
fyl2xp1
add
add
inc
mov
mov
push
sbb
not
and
inc
or
je
mov
mov
dec
dec
sbb
rorl
jnp
mov
xchg
jo
subb
push
and
pop
cmp
je
cmp
das
outsb
arpl
cwtl
xor
and
sbb
jp
or
sahf
adc
dec
pop
add
sahf
sbb
movsb
imul
jl
pop
or
shll
sbb
mov
ret
je
testb
jmp
cmpl
jne
rorb
add
mov
arpl
push
sbb
push
add
xchg
and
or
into
test
xor
xor
adc
sub
sub
sub
cli
and
add
rcrb
sub
add
pop
adc
lret
sbb
sbb
and
and
mov
pop
dec
add
jne
pushf
popa
jl
push
or
push
push
rorl
and
jmp
cltd
insb
idivb
add
je
xchg
fwait
std
dec
scas
push
int3
push
or
and
mov
popa
mull
lret
inc
test
xor
shll
test
das
js
dec
pop
fdivrs
mov
cwtl
loop
xchg
or
xchg
shrl
test
push
out
inc
inc
das
lea
dec
ds
loop
xor
jns
lret
push
pusha
das
in
pusha
fld
pop
ret
imul
mov
bound
daa
push
les
adc
adc
jmp
imul
das
lea
clc
xchg
mov
inc
lea
pushf
pop
jmp
or
xchg
in
dec
sub
cmc
jmp
js
mov
jg
push
xchg
inc
mov
loop
or
xchg
ja
xor
xor
and
add
mulb
cmp
sub
icebp
testl
sbb
hlt
xchg
jecxz,pn
or
jmp
fwait
xor
sarb
adc
rorb
gs
or
into
sbb
fldcw
gs
cmpsl
rep
cmp
add
addb
sti
xchg
aam
cltd
lock
in
jl
push
fwait
sub
adcl
adc
stos
mov
adc
into
stos
cli
lret
outsb
repnz
mov
std
add
xor
ficompl
cmp
xchg
leave
out
out
cld
popf
add
shlb
lret
or
lahf
push
push
pop
enter
shl
ret
sahf
int3
dec
test
and
notb
xchg
popl
clc
jmp
movsl
fstl
aam
sbb
gs
test
sub
test
and
inc
lahf
pop
andl
cmp
hlt
mov
ret
and
mov
sub
pusha
adc
add
xor
and
dec
sub
pop
call
ret
frstor
and
sbb
sub
fdivrl
dec
mov
aas
mov
les
pop
test
xchg
insl
dec
push
adc
fstpl
adc
adc
adc
jmp
sub
or
push
dec
and
and
sbb
lock
push
inc
sbb
ss
push
push
or
pop
mov
push
fwait
loopnew
test
push
xchg
cmp
push
push
nop
and
imul
loop
int
push
dec
das
aam
mov
test
pop
pshufw
adc
mov
nop
mov
out
and
add
out
pusha
push
push
push
mov
cmp
sbb
cmp
inc
add
dec
test
jne
fidivrs
popf
hlt
fcoms
jmp
mov
xor
aas
jne
mov
add
mov
adc
push
push
outsl
mov
push
shlb
hlt
inc
dec
daa
jne
addb
cmp
xor
pop
mov
aaa
pop
push
sbb
mov
pop
leave
leave
in
and
dec
pop
cli
jb
aam
mov
hlt
test
or
stos
pushf
in
push
push
dec
js
and
or
adc
add
enter
jecxz
loopne
jns
bnd
push
xor
sbb
mov
cwtl
jecxz
rcrl
cmp
mov
ljmp
movw
cli
push
adc
mov
mov
and
loopw
push
push
cmp
mov
adc
mov
ds
inc
or
inc
cmpl
dec
inc
stc
repnz
xor
nop
popa
and
mov
jg
test
loopne
inc
pop
sub
push
scas
inc
enter
xor
jmp
push
xor
fsubl
loope
push
sub
fdivl
mov
mov
adc
clc
mov
push
adc
cmp
and
add
cmp
jbe
movsl
and
clc
xor
das
lea
stc
imul
lea
sbb
inc
fld
add
cmp
and
push
fsubr
mov
test
movsb
pop
push
mov
and
mov
fldl
sub
fs
fnstcw
sub
add
sbb
adc
dec
add
shl
sbb
inc
dec
jl
es
push
sub
adc
call
push
push
les
jnp
and
xor
es
xchg
xchg
daa
add
neg
push
in
push
je
adc
push
push
xchg
outsb
imul
lea
cmp
jge
add
pushl
insl
pushf
js
inc
bound
lret
pop
ja
je
pop
inc
rcl
or
enter
push
jecxz
dec
mov
jae
imull
or
inc
adc
retw
call
mov
dec
jb
xchg
adc
xor
shlb
add
ret
in
ret
loop
dec
loope
ljmp
rcrl
adc
or
or
add
fsubrp
push
dec
hlt
push
test
outsb
and
mov
cmpsb
pop
dec
iret
add
sarl
and
hlt
jbe
adc
mov
dec
and
cld
push
test
movups
xchg
add
call
lock
mov
inc
xchg
das
jbe
xchg
mov
sbb
mov
add
mov
scas
movsl
mov
enter
pop
push
lahf
sbb
stc
mov
ljmp
rcrl
mov
test
xor
mov
sbb
in
es
pop
js
pop
icebp
jl
adc
mov
sub
inc
jg
ret
xchg
sbbl
out
mov
mov
js
or
pop
ficoml
sarl
ljmp
dec
mov
adc
mov
add
add
jne
push
pop
inc
js
jl
mov
scas
sub
or
sub
push
lods
push
test
shrl
add
xchg
push
in
cwtl
sbb
and
call
dec
jbe
enter
or
or
subl
fsubs
imulb
pop
xchg
pop
loopne
icebp
hlt
xchg
ret
mov
out
cmpl
inc
inc
ret
adcb
xor
or
jl
push
push
push
or
adc
mov
enter
cmp
inc
dec
pop
lahf
je
pop
mov
cmp
mov
xor
adc
mov
fbstp
cmp
arpl
aam
scas
outsb
test
in
add
adc
rclb
mov
cwtl
xchg
sbb
push
pop
jle
dec
roll
dec
enter
xchg
add
pop
or
in
roll
fs
test
int3
xor
pushf
dec
cmp
cwtl
in
inc
mov
imull
mov
push
mov
cmp
add
adc
jge
in
call
sub
lcall
add
push
push
pusha
xchg
imul
xchg
push
dec
adc
add
enter
push
mov
mov
int3
icebp
add
pop
xchg
mov
cmp
std
pop
das
cmp
adcl
test
lret
jb
and
adc
test
in
aad
fsubrs
adc
dec
dec
or
psubd
movsl
jl
test
lock
pop
xchg
aaa
push
push
cmpsb
leave
pop
call
add
inc
jl
arpl
mov
loopne
lea
or
das
int3
imul
mov
sub
mov
fstpl
pusha
movb
dec
or
aad
push
sub
jmp
popf
lock
xor
add
popa
inc
and
sbb
or
mov
divl
jp
filds
leave
and
lock
imul
adc
inc
and
push
push
xlat
sub
enter
lcall
adc
ficoml
jno
enter
cmp
dec
dec
xchg
bound
inc
out
adc
mulb
loopne
cs
mov
pop
adc
or
add
mov
pop
jmp
sub
or
mov
add
arpl
ja
mov
aad
jo
mov
sub
stos
jb
adc
jo
test
insl
out
push
push
out
xor
adcb
dec
out
push
pop
xchg
fwait
xor
lds
lcall
sub
push
scas
dec
adc
sub
lahf
jl
dec
cwtl
add
fs
nop
pop
aam
call
push
lods
adc
xor
xchg
hlt
inc
push
cltd
push
lods
adc
sbb
mov
mov
or
clc
or
mov
lea
enter
adc
sub
adc
sub
jmp
cld
cmp
clc
out
push
out
ds
sbb
out
inc
in
push
loopne
aam
fdivrl
push
addb
adc
xchg
inc
loop
pop
pop
inc
ljmp
adc
inc
push
test
pop
lock
adc
pop
push
inc
xchg
inc
cmp
add
sbb
mov
sub
mov
push
add
push
lods
or
or
enter
jge
push
mov
ss
lods
mov
push
add
leave
fcoml
nop
dec
hlt
push
iret
scas
fdivrl
in
lock
sbb
ljmp
test
fmull
adc
lret
push
enter
adc
int3
inc
les
jae
sub
dec
popf
adc
mov
and
mov
daa
adc
pop
adc
adc
popf
hlt
mov
fistps
fists
adc
mov
test
rcll
jmp
or
adc
or
or
adc
nop
ljmp
in
pop
or
mov
push
repnz
inc
sub
xchg
clc
addb
imul
or
fsubrl
arpl
fcompl
or
and
mov
push
jmp
or
ds
xor
xor
xlat
sbb
inc
jne
and
add
hlt
test
into
hlt
push
std
sbb
dec
or
mov
rorb
sbb
fs
incl
mov
jne
hlt
ja
sub
dec
push
sbb
imul
inc
and
cmp
and
nop
mov
adc
jne
lea
mov
sbb
jg
jnp
lret
or
movsl
or
lret
cmp
cld
pop
dec
icebp
or
pop
movsl
mov
mov
das
jbe
inc
pop
les
jbe
dec
jmp
sbb
push
and
lret
or
ret
js
pop
or
jne
daa
or
mov
scas
repz
xchg
aam
jbe
enter
inc
adc
sub
inc
mov
jns
imul
dec
mov
in
add
in
test
outsb
cmp
xchg
mov
test
rclb
jae
add
pushf
mov
sbb
aam
iret
hlt
sub
sbb
nop
cmp
jae
mov
incb
push
adc
popf
in
dec
xor
test
pop
or
xchg
and
jo
adc
cmpb
or
or
jl
inc
jne
jnp
mov
xchg
cltd
dec
jne
out
sbb
xchg
xchg
in
push
or
out
loop
mov
js
test
dec
dec
mov
test
sbb
and
mov
movsl
sbb
mov
pop
and
add
jo
jns
mov
negb
test
xor
pop
hlt
dec
xchg
js
jns
sbbl
jl
repnz
xchg
adc
daa
mov
cld
inc
lret
ja
ljmp
jne
xor
enter
out
mov
in
add
adc
mov
cmc
adc
add
adc
imul
cmp
aad
xchg
lods
pop
mov
lea
sub
or
add
mov
push
test
mov
sti
int3
mov
scas
mov
movsb
mov
rcl
push
fisubrs
sbb
out
and
std
fsubr
sbb
cmp
sub
jne
cmc
sub
pop
cmp
mov
sub
cld
dec
mov
test
push
mov
adc
roll
pushf
jns
imull
xchg
adc
or
push
lahf
jne
push
rcll
pop
dec
out
hlt
cmp
and
or
mov
notl
mov
push
dec
mov
cmpsb
xor
hlt
rorl
inc
fsubrp
push
dec
jle
test
or
adc
daa
jo
enter
cld
sub
mov
dec
pop
repnz
mov
out
repz
xor
test
shr
push
dec
cld
pushf
jg
dec
rorb
mov
mov
push
xchg
jp
cli
pop
mov
test
push
mov
jge
out
pop
mov
push
insl
mov
push
sub
cmp
dec
pop
mov
add
rclb
sbb
adc
push
xchg
loopne
jne
adc
jo
sbb
cmp
mov
push
sub
push
or
or
es
push
cmpl
push
sbb
sbb
cmp
jle
and
xchg
add
fildll
and
jg
mov
aam
add
leave
mov
xchg
sub
mov
lcall
pop
dec
dec
ret
inc
int3
and
cltd
jle
ficompl
mov
mov
aad
repz
dec
jg
lea
mov
xorb
or
mov
inc
incb
xchg
imulb
add
and
mov
mov
mov
mov
mov
sub
call
sar
lcall
push
dec
adc
mov
cmp
lahf
jo
insl
sbb
scas
mov
push
adc
adc
dec
push
bound
xchg
pop
fnstenv
scas
adc
jle
lods
ficoms
inc
adc
push
jae
adc
push
pop
filds
fisubrl
dec
mov
cwtl
sahf
dec
shl
sub
sbb
data16
shrb
ja
dec
cmpsl
xor
jmp
lods
adc
sub
or
jmp
fs
mov
addb
add
and
dec
cmp
loope
xor
and
sub
mov
js
dec
mov
adc
push
sub
inc
sub
inc
fs
mov
lock
cmp
cltd
pop
fwait
sub
insl
stc
roll
add
test
lahf
bound
mov
dec
or
rolb
sub
and
or
testb
sub
dec
inc
push
pop
in
mov
jmp
adc
cld
add
decl
jle
cmp
repz
dec
adc
or
jne
int
mov
inc
clc
mov
addl
or
push
and
mov
js
lahf
pop
push
and
je
mov
and
xor
push
push
test
stc
cmpsl
push
arpl
jmp
adc
push
mov
inc
push
cwtl
mov
pop
mov
jg
imul
or
pop
xor
push
repnz
inc
mov
das
cmp
lock
pop
sub
sarl
pop
mov
dec
hlt
int
movsl
cmp
dec
sbb
sbb
sar
fwait
and
lock
sbb
cmp
and
mov
adc
and
push
or
sbb
ja
adc
arpl
push
mov
enter
jns
pop
std
fcmovb
xchg
dec
dec
xor
movsl
inc
std
leave
xor
pushf
add
shlb
push
mov
sub
mov
cli
jle
jg
insl
and
xchg
jmp
popf
cld
maskmovq
divl
mov
add
xchg
pop
pop
stos
sub
cwtl
dec
push
sub
xchg
adc
jne
mov
shlb
or
je
push
adcl
es
fs
test
sub
enter
add
jp
mov
add
mov
movsl
push
jne
dec
ret
mov
push
sub
sub
jmp
lret
mov
roll
inc
test
enter
jb
test
icebp
lods
call
lahf
or
bound
fcomp
xlat
int
lcall
dec
aad
or
insl
clc
push
xchg
mov
fildl
mov
xor
in
movsl
out
push
cmpsl
in
fsts
push
or
or
cltd
mov
add
adc
ret
and
xchg
out
sbb
or
mov
add
into
aad
mov
call
lea
fs
dec
cli
xchg
pusha
mov
xchg
and
push
stos
jg
or
loop
clc
pop
dec
jg
scas
mov
dec
mov
inc
push
xchg
xchg
lret
scas
movsb
ljmp
repnz
xlat
xor
shll
cmpsl
inc
jge
lods
pop
nop
ja
dec
stc
pop
test
imul
push
sti
mov
jg
gs
cmp
jecxz
movsl
out
sub
add
cs
je
adc
call
iret
mov
adc
inc
pushf
pop
jg
inc
das
adc
rorb
aas
nop
push
xor
or
and
jae
gs
sbb
andb
inc
sbb
push
mov
jmp
sbb
cmp
sub
mov
push
jge
mov
outsl
cmp
sbb
or
jecxz
lock
sbb
dec
adc
ja
ja
sub
dec
jl
orl
fs
inc
push
mov
loop
or
fmull
cmc
inc
test
or
jne
push
test
fistpl
inc
fdivs
rol
jmp
add
add
jle
sub
or
je
cld
lret
jno
mov
mov
or
pushf
dec
data16
sti
jl
inc
adc
sbbl
jne
xchg
pop
sub
cmp
adc
pop
in
dec
mov
cmc
movl
sub
mov
out
push
xchg
xchg
das
pusha
jl
and
pop
out
sub
arpl
mov
and
adc
clc
insb
out
iret
inc
jo
ret
mov
pop
mov
adc
mov
push
cmpsl
idivl
in
insl
cs
or
stos
ret
ljmp
jnp
xchg
js
inc
push
xchg
int3
enter
in
xchg
dec
mov
incb
push
sub
mov
lock
imul
adc
xchg
repnz
in
lods
push
movsl
test
test
sub
inc
adc
cmp
mov
push
cmp
aam
in
xor
add
stos
xor
mov
sub
inc
inc
mov
aam
lcall
and
adc
adc
aad
dec
clc
add
or
gs
shll
jns
xchg
js
das
xlat
sub
adc
into
push
cltd
leave
inc
cmp
mov
scas
imul
push
sbb
mov
mov
sub
cmpsl
fcoml
fs
xor
ljmp
mov
sbb
xor
int
popa
add
fs
mov
test
int
fidivs
dec
xchg
sbb
xchg
cmp
jo
jl
jl
pop
inc
xor
aaa
push
mov
inc
xor
aaa
xor
xor
or
adc
mov
inc
popa
test
dec
cld
mov
scas
es
popa
sbb
out
or
inc
xchg
xchg
mov
dec
mov
mov
and
mov
mov
mov
sbb
pop
test
mov
push
or
add
add
inc
fidivl
fistps
pop
sbb
add
and
addl
call
in
add
xchg
dec
rolb
cwtl
inc
pop
rcr
or
je
or
pusha
das
movntps
sbb
jmp
std
pop
loope
cmp
repz
fwait
arpl
jbe
scas
in
lss
mov
adc
adc
nop
mov
cli
pop
adcl
dec
or
adcb
cmp
adc
sub
or
orps
mov
jle
mov
jl
fdiv
dec
daa
and
dec
pop
xchg
push
inc
xchg
pusha
xchg
mov
inc
das
cmp
sub
icebp
dec
jmp
das
sbb
rclb
popf
jo
mov
sub
mov
mov
or
mov
dec
fildll
jbe
adc
lcall
lea
sub
adc
insb
push
sahf
in
pop
mov
or
adc
push
movsb
pop
hlt
or
lahf
and
sub
dec
mov
or
stos
cmpsb
cmp
lock
xchg
mov
shlb
jns
jnp
xor
inc
and
xchg
loop
sbb
jp
mov
pop
and
scas
test
std
fld
push
xchg
sub
pop
push
xor
push
shrl
and
push
pop
ds
arpl
fnsave
testb
add
outsb
mov
test
es
mov
adc
insb
clc
dec
push
inc
and
pop
push
dec
pop
sbb
test
and
daa
add
daa
push
rcl
xchg
in
aam
repnz
xchg
scas
popf
adc
loop
sub
sbb
push
or
dec
inc
jne
inc
add
test
or
cmc
add
mov
test
jp
addl
add
ljmp
fdivl
adc
xor
in
rorb
cli
cwtl
sbb
test
das
pop
cmpsb
popa
push
push
or
inc
repz
add
cmpsl
xchg
daa
or
addb
clc
jecxz
dec
push
lock
and
push
call
sub
jmp
mov
push
leave
je
dec
call
dec
add
lea
mov
push
and
push
or
xchg
add
and
mov
dec
pop
mov
adc
es
dec
adc
pop
es
clc
and
jo
push
cli
test
sbb
cmpsl
push
xrelease
or
cmpsb
push
xchg
pushf
lahf
loop
xor
out
mov
or
loop
insb
lahf
es
sub
add
xor
add
jmp
sub
mov
xchg
ja
fiaddl
aam
or
mov
stos
xchg
mov
and
pop
dec
cld
sub
cmpsl
repnz
jmp
mov
mov
xchg
cmp
sbb
xchg
clc
push
pop
adc
cmp
clc
adc
adc
lods
daa
shrb
adc
pop
xchg
cld
cmp
fidivl
jl
sub
jno
fisubl
mov
mov
push
and
push
pop
lds
out
enter
dec
movsl
jle
xor
xchg
pop
inc
jbe
mov
inc
stos
notl
cs
add
cmp
or
sub
inc
out
nop
outsb
ficoml
mov
stos
cwtl
movsb
or
lcall
mov
sbb
shl
int3
iret
lahf
and
ss
js
pop
fs
mov
mov
xchg
or
xor
popa
js
or
dec
xchg
sbb
divl
and
mov
cmp
in
push
imul
jo
in
xchg
mov
mov
inc
and
xor
aam
outsl
rorb
adc
jmp
push
xchg
mov
lahf
adc
dec
cmpsb
mov
pusha
call
fsubr
mov
inc
or
aad
mov
push
outsl
xchg
jbe
fs
jb
loopne
fcoms
push
test
xor
mov
xor
cmp
mov
addb
jge
pop
mov
cwtl
es
pop
cmp
add
pop
movzwl
in
xor
nop
sub
jecxz
mov
fldl
sbb
jmp
lock
scas
inc
adc
inc
in
xchg
ja
sub
push
or
or
js
wbinvd
or
enter
cmp
adc
mov
dec
dec
testb
inc
pop
sub
xor
sub
mov
imul
mov
out
sub
dec
adc
dec
mov
int
xor
subl
outsb
xchg
sub
ds
sub
mov
fwait
or
mov
mov
pop
dec
jb
cwtl
dec
pop
xchg
jnp
icebp
cld
fwait
mov
inc
inc
lock
sub
sbb
inc
mov
fists
sub
and
test
test
fwait
mov
daa
movsb
js
jg
sub
add
push
cmpsl
push
and
cmp
into
loope
test
ds
out
insl
sarb
or
in
mov
cli
bound
fwait
notl
jnp
mov
rorl
and
or
adc
dec
jl
and
push
ljmp
adc
in
push
arpl
mov
inc
xor
jbe
push
or
or
jno
dec
pop
popf
sub
jg
cmpsb
and
dec
cmp
or
cmpb
sub
lods
mov
mov
popf
jmp
sub
fbld
xor
lcall
fmull
daa
mov
push
out
mov
pushf
push
daa
arpl
hlt
sbb
mov
mul
mov
fimuls
cmp
loop
or
push
push
pop
fisubrl
out
arpl
orb
push
ds
rorb
sbb
push
pop
loope
ficoml
jb
pop
or
mov
in
movsb
movsl
pop
fists
lea
lret
adc
scas
lea
data16
xchg
call
push
cmp
jbe
mov
mov
inc
or
popf
pop
jns
dec
cmc
in
pop
movl
cld
sbb
xor
ret
mov
cs
clc
jmp
fstps
and
jmp
mov
dec
push
lea
add
mov
test
xor
dec
gs
mov
leave
fdiv
addr16
lock
daa
adc
lds
push
inc
int
sub
pop
add
sbb
in
adc
sbb
push
fsub
push
stos
xrelease
pop
mov
and
lock
mov
cmp
adc
out
mov
mov
and
and
cmovne
push
jmp
or
xchg
jmp
cmpsl
jo
sub
cmp
mov
jns
add
jl
xchg
xchg
push
out
arpl
jae
push
arpl
roll
push
xor
or
stos
les
jmp
lods
pop
das
xchg
pop
push
es
and
adc
adc
sub
push
mov
xchg
xor
inc
push
ja
inc
incb
pop
pop
jmp
add
pop
push
test
arpl
adc
and
push
gs
inc
sbb
sub
and
or
lcall
aaa
inc
sbb
inc
and
xor
add
push
pop
rorb
call
imul
cmpb
es
or
pop
xchg
pop
iret
mov
xchg
and
les
push
jns
mov
cwtl
mov
jns
inc
dec
sti
cmp
mov
jge
jp
dec
clc
hlt
mov
imul
jae
movsl
jbe
or
jmp
xchg
xchg
mov
fsubl
mov
push
sub
mov
xchg
pop
sbb
mov
xchg
jae
repnz
push
fisubrl
cmp
test
adc
mov
xor
insb
mov
leave
inc
cltd
cli
sub
xor
or
inc
and
data16
jae
jae
lock
push
xor
lds
aam
cmp
sbb
popf
jle
push
ljmp
xchg
push
xchg
ss
insb
pop
or
daa
mov
je
cmp
jne
dec
mov
xorl
adc
add
repz
sub
push
dec
test
movsb
test
push
or
ret
push
add
add
popf
movhlps
xlat
dec
xor
call
fsubl
adc
sub
aad
or
dec
cltd
jb
xchg
pop
andb
imulb
or
push
cltd
movsl
sbb
cmp
pop
mov
mov
jo
adc
cli
ret
shlb
pop
in
shlb
xchg
nop
enter
mov
or
push
mov
add
sbb
sub
es
lods
cmp
jae
adc
jp
mov
int3
and
sub
cmpsb
adcl
hlt
mov
ficomps
call
imul
shrl
push
lea
xchg
mov
insl
cmp
dec
movsl
dec
fsubs
mov
push
or
movsb
pop
xlat
out
rcrl
mov
sub
add
xor
xor
push
xor
inc
popf
pushf
inc
stc
push
jnp
dec
inc
ss
adc
das
adc
or
arpl
sbb
add
xor
ja
adc
aas
nop
aad
cmpb
adc
test
nop
adc
test
or
insl
dec
fbstp
ret
sbbl
jne
fstl
cltd
imul
jne
push
pop
push
out
sub
or
mov
push
sub
ljmp
mov
add
or
adc
imul
movb
aas
lret
dec
and
aas
add
ss
mov
pop
mov
cmp
sti
lds
mov
pop
les
rcr
and
mov
mov
hlt
xor
jb
pushl
repnz
sarb
lahf
mov
sar
mov
aad
out
push
out
movsl
jecxz
popf
dec
pop
or
or
sub
lea
pushf
outsl
int3
xor
xor
adcl
xchg
jecxz
imul
dec
adc
daa
negl
jle
insb
popf
lds
clc
jge
mov
cmpsb
pop
cmpsl
dec
in
scas
mov
cmp
mov
push
push
cmpsb
jae
cmp
xor
push
das
pop
xchg
imul
adcb
adc
jnp
icebp
mov
sub
add
or
notb
sub
sbb
adc
jae
out
in
jecxz
out
daa
sbb
jbe
pop
mov
in
loope
lods
stos
dec
push
adc
sarb
or
sbbb
lock
mov
div
xor
mov
sbb
and
inc
push
sub
jmp
push
dec
xchg
addr16
call
lea
adc
cmpsl
mov
cmpsb
call
dec
jne
arpl
push
jmp
sub
adc
inc
dec
push
in
mov
mov
xchg
push
xor
or
xchg
cs
fs
sub
xchg
pop
stos
test
mov
lret
adc
sahf
push
push
xlat
in
add
call
dec
in
xlat
or
add
test
sub
sub
adc
push
and
sbb
popa
pop
mov
mov
mov
aaa
xorl
and
and
lds
mov
sti
jae
and
mov
sub
push
mov
xchg
ja
ss
push
mov
sbb
pop
sub
call
add
movsb
fnsave
pop
cmpsl
mov
sti
stos
xor
xchg
lahf
xchg
or
and
lret
cmp
inc
mov
in
or
arpl
add
movsl
scas
outsl
mov
add
mov
jns
aas
out
fs
and
jbe
stos
testl
dec
xchg
enter
or
sarb
aaa
push
sub
push
hlt
add
jno
imul
in
mov
loopne
in
jno
sub
lods
sub
jae
cmpsl
lods
das
pop
sub
loop
push
std
rcrb
daa
pop
xchg
loope
mov
cmpsb
movsl
and
add
pop
xchg
pop
in
mov
and
inc
lret
loopne
shll
mov
stos
push
mov
hlt
adc
or
idivl
mov
adcl
leave
mov
sub
and
cmp
fcomps
dec
sbb
pop
xchg
or
and
pushf
nop
and
mov
hlt
sub
mov
or
mov
add
lret
mov
or
movsl
and
cmp
mov
mov
dec
or
push
and
pop
stc
lds
mov
test
subl
pop
ljmp
sub
jp
imul
jp
sub
jle
mov
imul
fmuls
mov
push
dec
push
xor
pop
adc
int
lea
jmp
sbb
or
bound
int
and
add
xchg
out
dec
out
mov
mov
jmp
ror
cmpsl
or
inc
or
lds
push
add
push
lods
pop
and
inc
pop
sbb
mov
push
mov
cmp
or
push
or
xchg
add
and
mov
mov
pushw
jg
rcll
dec
push
jmp
outsl
adc
sbb
jo
push
int3
int
jp
test
xor
dec
mov
inc
sbb
xchg
push
adc
mov
lret
loopne
sarb
adc
push
fs
leave
adc
mov
mov
sbb
ret
or
push
rolb
push
faddp
jnp
push
inc
in
adc
and
loopne
jmp
push
push
mov
and
xchg
out
push
stc
andb
cmp
lcall
mov
or
cwtl
inc
addr16
push
mov
movsl
mov
scas
push
mov
xor
nop
push
dec
fxch
inc
sahf
stos
or
push
mov
lds
ret
test
or
test
orb
hlt
sahf
shlb
inc
sub
xor
movswl
jns
mov
xchg
jge
dec
xchg
dec
cmpsb
xchg
int
fxch
and
push
scas
mov
sub
inc
sbb
push
xchg
mov
fbld
test
movb
lret
rorl
je
inc
insb
pop
and
push
movb
icebp
int
or
or
sbb
xchg
mov
cli
pusha
lahf
lock
jb
movsb
movsl
clc
adc
add
sbb
mov
add
xor
mov
mov
fld
lock
and
ds
fs
test
dec
mov
das
int
mov
insb
pop
push
leave
jo
pop
add
daa
pop
loope
pop
cmpsl
bound
fmull
bound
shrb
push
push
push
lea
xlat
test
or
mov
cmpb
jo
je
repz
ds
dec
addr16
xchg
rorl
jge
or
cmp
rorb
fistl
or
dec
out
ret
je
das
addr16
mov
or
test
in
and
mov
rorl
ss
stc
loopne
or
into
cmp
and
or
subl
je
push
cmpsl
inc
sub
and
shrb
inc
into
jge
or
scas
out
push
bound
push
xchg
cmp
aam
pop
sbb
popa
in
xor
lock
or
sbb
jae
je
xchg
outsb
call
pop
sbb
push
sbb
pop
pushf
pop
dec
leave
js
and
push
cwtl
pop
push
mov
and
or
ljmp
inc
push
xor
adcl
ret
mov
cmp
jecxz
xor
sub
testb
je
xchg
cmp
in
ss
jo
and
xchg
bound
gs
adc
jno
inc
xor
xchg
repnz
pop
out
shr
jns
pop
push
in
lret
or
and
sub
xor
nop
aam
hlt
bound
dec
jle
repnz
gs
jecxz
push
insl
dec
fildll
sub
mov
jle,pn
xor
xlat
roll
or
imul
mov
jns
scas
icebp
bound
pop
inc
daa
mov
sbb
cmp
lods
ja
xor
out
pushf
and
mov
or
add
loope
nop
fwait
adc
movb
sub
adc
nop
repz
pop
loope
outsb
loope
jnp
mov
jmp
icebp
sti
stc
inc
outsl
shlb
and
shrl
aaa
xchg
xchg
stos
mov
in
mov
jl
mov
mov
mov
jmp
addl
adc
and
dec
test
lods
adcb
loop
xchg
loop
test
stos
std
xor
movsl
adc
push
idivb
nop
or
inc
xor
pop
dec
cmp
ret
adc
xor
shlb
repnz
shlb
sub
mov
jmp
mov
roll
mov
pop
icebp
rclb
jg
daa
mov
stos
or
jl
rorl
xor
xchg
shll
and
lods
sbb
movsl
adc
sub
cmp
jne
ret
pop
dec
cmpsl
pop
push
jmp
xor
fdivr
adc
dec
adc
sar
push
mov
dec
and
pop
inc
in
nop
lock
sub
mov
xchg
rcll
push
push
lret
gs
aam
mov
mov
mov
pop
loop
imulb
stc
pop
mov
adc
mov
or
push
adc
pop
mov
in
outsl
lods
push
lcall
cmp
xchg
mov
call
xchg
dec
or
jns
jecxz
pop
cmp
loop
xor
jmp
and
sub
lea
fnstcw
jg
jecxz
dec
or
mov
push
or
cmp
testb
test
pop
xchg
repnz
je
loop
sub
push
and
loop
scas
in
rcll
imul
mov
lods
ds
dec
push
clc
jo
out
dec
les
mov
mov
std
ret
gs
scas
addr16
je
or
cli
xor
add
sbb
aaa
mov
icebp
sub
jne
adc
mov
add
ss
add
inc
sbb
pusha
inc
subb
and
adcl
jbe
adc
mov
and
xchg
jns
pop
push
push
popa
je
loope
jg
sub
mov
inc
mov
rcll
repz
pop
jmp
mov
ror
scas
jge
mov
xchg
cli
or
adc
ljmp
push
aas
and
lds
ss
xchg
adcl
int3
inc
and
enter
hlt
jmp
jge
add
inc
mov
lret
push
psubsb
add
enter
mov
and
push
push
mov
mov
lea
jnp
pop
stc
pop
sub
sbb
dec
sbb
mov
push
es
dec
sbb
in
je
repnz
into
push
loope
ja
out
outsb
les
inc
push
test
fildl
jns
dec
or
inc
mov
dec
test
jne
lss
inc
std
dec
lock
push
addb
sti
or
inc
data16
ret
cmp
pop
mov
mov
inc
lods
mov
pop
fnstenv
and
mov
mov
mov
xchg
sub
movsl
xchg
mov
mov
lahf
cmp
and
idiv
and
shlb
mov
shr
out
mov
xor
inc
push
bound
jne
mov
mov
int
sbbl
or
inc
cmp
outsl
mov
dec
adc
mov
mov
adc
mov
adc
stc
fimuls
adc
dec
mov
test
pusha
in
arpl
sti
lods
add
popa
dec
or
pop
push
andb
or
dec
inc
or
push
jg
into
pusha
cmp
dec
lods
add
mov
and
inc
xor
xor
mov
adc
mov
and
pop
shrl
jnp
pop
lcall
nop
push
mov
mov
int3
das
ja
popa
xor
movsb
bound
cld
xor
mov
js
mov
adc
ljmp
arpl
loop
add
cld
mov
pop
shl
mov
dec
jns
cmp
andb
outsb
je
mov
fidivrl
adc
xchg
sti
xchg
mov
ss
push
adc
inc
jne
pusha
outsl
insl
sbb
jmp
ljmp
arpl
outsb
fs
sub
push
pushf
mov
add
jle
add
sarb
push
jo
fildll
std
lret
ds
fsub
add
or
imul
add
fadd
fisubs
dec
aam
adc
imul
into
in
leave
cmp
rcrl
shll
mov
andps
and
outsl
js
or
aam
mov
rol
xor
sti
adc
fdivrs
stos
push
push
or
shll
rcl
mov
push
add
adc
mov
enter
dec
test
aam
ljmp
andl
lea
mov
and
dec
fistl
cmpsl
scas
mov
lcall
gs
and
push
fs
cmp
nop
lods
ret
and
jo
sub
and
adc
test
nop
xchg
mov
inc
mov
mov
pop
fwait
dec
loop
insl
movsl
fbld
adc
adc
into
mov
aaa
mov
sub
adc
cmpl
pusha
ret
mov
xchg
xlat
mov
pop
sub
pop
out
sub
jno
ret
inc
dec
clc
mov
daa
jg
call
in
rorb
jge
or
xchg
mov
inc
addr16
icebp
in
rorb
xor
lods
and
jp
or
inc
add
movsl
add
adc
rcll
sbb
shlb
and
fstps
ret
repnz
or
les
orl
lds
iret
lret
mov
lret
mov
stc
call
jmp
dec
into
jmp
test
xchg
insl
dec
pop
add
loop
loope
mov
and
adc
adc
xor
nop
hlt
clc
sbb
insb
dec
shrl
dec
pinsrw
pop
jl
out
popa
cld
int
popw
shlb
fsubrs
dec
mov
leave
cs
incl
pop
mov
sbb
scas
popf
mov
pop
or
in
sbb
cmp
inc
dec
jne
xlat
in
lods
scas
jg
sbb
ret
push
enter
add
mov
daa
sbb
and
sbb
sbb
xchg
or
sbbl
lret
or
or
mov
sub
js
mov
je
lea
test
pop
into
hlt
xor
addr16
sub
push
dec
jle
or
pop
lcall
sbb
mov
outsb
adc
adc
sub
mov
call
ret
lcall
adc
jmp
mov
or
gs
push
scas
adc
imul
js
test
imul
xor
and
fbstp
sbb
push
mov
jle
jg
jne
aad
mov
popfw
cld
ror
std
ljmp
mov
xchg
into
and
inc
mov
xchg
lock
sub
pushf
inc
enter
adc
mov
inc
sub
fstl
mov
sbb
hlt
adc
xlat
das
inc
sbb
loopne
pop
sub
mov
push
in
push
and
rcll
adc
mov
daa
adc
sbb
and
sbb
jne
inc
fs
sub
popa
sub
and
aam
pusha
in
push
lock
mov
stos
adc
cmp
adc
pop
rclb
test
inc
adcb
das
dec
mov
jle
push
lahf
pop
sti
cmp
sahf
sahf
test
or
addr16
aad
faddl
mov
xor
testb
push
sbb
ficompl
movsb
cmp
xor
cli
test
les
cmpsb
dec
inc
pop
adc
cmpsb
dec
shl
sbb
mov
sbb
enter
cs
inc
xor
push
push
loopne
push
jmp
adc
idiv
lock
sub
les
sub
loopne
jl
and
jecxz
adc
bound
repnz
lock
push
push
lret
adc
cwtd
xchg
test
je
push
ficoml
or
in
fwait
or
insl
mov
inc
xchg
inc
test
or
lock
mov
gs
stos
gs
pop
out
push
scas
pusha
shr
sub
and
out
or
cmp
dec
push
jg
jno
movsl
testl
mov
mov
sub
or
cmp
fsts
adc
test
xchg
shrl
adc
in
fstps
pop
cwtl
fwait
pop
call
push
adc
push
dec
cmp
xchg
or
lock
adc
add
or
pop
lret
cs
mov
cwtl
imul
lret
mov
je
int
nop
sahf
je
lea
pushf
lcall
mov
cld
imul
pop
jmp
jno
vmovapd
shll
sub
dec
je
mov
sbb
and
sti
mov
fstpt
mov
inc
or
gs
stos
rclb
movsl
mov
mov
or
imul
and
stos
lret
and
cmpsl
cmp
cli
sub
jns
pop
test
js
jne
dec
mov
sub
mov
clc
fstps
sbb
aas
ret
call
std
cmpl
xchg
inc
lcall
mov
mov
mov
jae
je
jp,pt
xchg
push
cli
and
iret
inc
orl
sub
test
adc
xor
test
les
mov
call
andl
test
add
stc
test
inc
push
inc
cmp
enter
xor
push
sub
ret
loopne
or
or
push
decb
dec
pusha
test
nop
shrb
imulb
inc
push
push
loopne
mov
rorb
or
xor
mov
inc
testb
inc
inc
rcrb
mov
and
js
or
ss
mov
test
enter
daa
call
test
or
les
test
std
or
nop
enter
hlt
and
mov
push
das
je
imul
hlt
push
inc
inc
pop
decb
push
inc
push
rorb
sbbl
hlt
scas
mov
jo
pop
sbb
loop
outsb
jne
sbb
xor
push
ja
shlb
push
popf
push
and
pop
ja
out
nop
jnp
jae
mov
adc
ss
out
jo
inc
shlb
adc
add
pusha
fsubs
les
add
mov
test
xor
sub
cmovno
push
test
sbb
dec
adc
aaa
xchg
call
paddsb
inc
lock
hlt
xor
sbb
mov
dec
cmp
pop
inc
or
or
adc
sbb
and
and
inc
sub
sub
xor
cmp
inc
sbb
xor
dec
mov
and
mov
bound
sbb
jo
je
js
jl
andb
mov
mov
cwtl
mov
or
dec
xlat
mov
je
mov
int3
xor
arpl
sbb
xor
mov
xchg
jo
mov
push
mov
in
andb
push
mov
adc
jae
inc
adc
hlt
test
aam
inc
cld
jnp
cmp
inc
dec
cld
and
add
adc
and
adc
or
movsb
push
mov
fs
mov
mov
mov
and
shrb
inc
rorb
xor
or
jns
or
roll
xor
adc
inc
dec
and
dec
and
mov
or
movsb
rcrl
lea
inc
and
inc
fs
xor
or
lea
insb
pushf
adc
bnd
adc
and
mov
and
mov
and
mov
jge
inc
movsb
mov
test
mov
mov
xchg
xchg
mov
arpl
push
add
je
gs
lret
cmovg
outsb
push
adc
out
gs
adc
jb
ja
cs
mov
and
mov
push
sub
rcll
jne
xchg
loope
adc
inc
outsl
daa
adc
sarl
and
stos
xchg
je
dec
cmovs
cmp
jae
and
mov
cmp
inc
pop
imul
rolb
adc
jecxz
jns
jle
xor
jo
adc
pushf
or
inc
mov
adc
shlb
imul
sarl
jmp
sub
xchg
arpl
inc
xor
stos
cld
cmp
push
pop
cmp
dec
mov
jae
in
les
push
dec
lea
dec
mov
push
in
popa
les
sub
pop
adc
mov
xor
sub
adc
inc
adc
mov
test
adc
push
inc
rcl
dec
es
addr16
xchg
adc
hlt
prefetchnta
sub
mov
and
ficoms
sub
inc
jle
adc
pop
dec
popa
rcrb
jne
xor
jno
test
push
xor
scas
movsb
cmp
cli
xorl
pop
ret
or
je
xchg
pop
pop
lret
je
jecxz
push
dec
jne
pushf
dec
push
or
fcmovnb
add
repnz
jnp
inc
jnp
xchg
push
cmp
and
cli
mov
inc
add
jb
rcrl
mov
xor
pop
fdivrl
scas
ds
je
stc
cmp
mov
sbb
adc
mov
mov
lea
jo
mov
int
mov
adc
cltd
sbb
or
test
and
inc
addr16
nop
lods
dec
stc
repnz
push
adc
stos
lods
xor
adc
sub
adc
add
dec
sbb
xor
or
and
inc
inc
or
lcall
pop
lods
adc
mov
push
shlb
adc
pop
aad
decl
cmp
inc
lock
rclb
add
jle
shlb
mov
loop
push
je
rolb
outsb
pop
inc
and
inc
push
sarb
adc
fdivl
daa
and
add
les
aas
push
mov
xchg
inc
in
outsb
orb
pop
adcl
mov
add
adc
adc
sbb
clc
dec
shll
adc
xor
pop
or
sub
popa
or
push
pop
xchg
mov
fldl
icebp
cs
xor
cmp
push
popf
or
push
cli
or
push
sahf
inc
popf
sub
jle
jp
in
push
adc
lret
movsl
ficoml
call
mov
xor
cwtl
pcmpgtd
xor
out
xchg
stos
and
stos
cld
aam
xor
and
and
call
adc
popf
pop
jo
or
lcall
cltd
or
xchg
pop
push
sahf
data16
and
and
add
fdivp
loopne
add
mov
push
das
shll
pop
push
in
inc
fnclex
fldcw
movsl
inc
inc
add
or
mov
aam
test
fwait
pop
mov
imul
add
xor
and
fnstsw
and
add
fsubl
dec
dec
dec
mov
inc
push
push
mov
and
int3
addr16
add
inc
inc
adcl
mov
jecxz
and
popa
push
push
cs
ljmp
add
stc
mov
fs
and
adc
inc
loop
bound
adc
sub
adc
shl
xor
dec
out
movb
cmp
pop
xor
add
cwtl
adc
dec
lds
xor
and
mov
xor
xor
les
jl
add
popl
movsb
lret
lea
or
lock
mov
mov
xchg
sbb
fsubs
sbb
xorb
push
imul
mov
sbb
or
arpl
or
and
add
mov
jmp
sub
add
inc
mov
xor
xchg
or
dec
cld
lock
sub
inc
mov
dec
gs
popa
pop
addr16
or
pop
adc
xchg
lret
push
pop
xchg
ret
rorl
popa
mov
inc
mov
pop
dec
mov
adc
test
sub
lea
movsb
je
lahf
fmulp
rclb
inc
les
and
inc
add
cmpsb
lock
arpl
xchg
decl
or
push
mov
push
add
pop
rcll
cmp
iret
dec
mov
mov
fsubrs
imul
dec
jbe
or
inc
mov
fstpt
dec
in
pop
stos
sbb
sbb
sbb
cmpsb
addl
push
and
pop
in
push
sbb
ficoms
movsl
ljmp
daa
push
shlb
ja
jne
add
dec
imul
pop
popa
pop
in
imul
and
mov
pop
mov
repz
push
jl
das
in
out
bound
fiadds
nop
fiadds
loopne
in
sub
das
mulb
fsts
sbb
dec
sbb
mov
or
and
mov
rorl
sub
ljmp
xchg
pop
adc
mov
jno
sbb
loope
cmp
or
sbb
mov
or
pop
cli
ja
adc
scas
mov
sub
mov
outsl
lods
mov
fimull
xor
ret
stc
xchg
call
nop
aam
bound
cmc
add
mov
sbb
xorl
cs
inc
mov
or
adc
shlb
xor
add
or
lea
xchg
inc
cwtl
mov
inc
mov
or
popf
ja
nop
xchg
leave
push
mov
xor
subl
and
mov
gs
jno
dec
outsl
ret
dec
dec
popf
pop
xchg
push
jge
jecxz
gs
popf
jbe
loop
mov
adc
sub
test
xor
outsb
inc
gs
cmp
into
out
mov
outsl
push
stos
adc
pushf
sub
pop
loope
fmull
adc
xchg
push
cwtl
add
daa
push
sti
mov
insb
in
test
enter
inc
inc
pop
dec
xlat
mov
mov
push
xor
sbb
add
pusha
add
cltd
cmp
xor
shl
push
push
es
subb
xor
sbb
sbb
mov
push
inc
xor
xchg
pusha
xchg
js
jp
repz
add
jae
in
inc
cmp
jae
sub
push
or
xor
int3
mov
sub
scas
add
cmp
ja
and
in
mov
push
pop
stos
rcrb
xchg
and
or
add
xchg
pushf
cs
jnp
xchg
jp
jp
popa
xchg
mov
fadd
pop
mov
fs
cmpsb
mov
out
xchg
cmp
test
cmp
cmp
test
leave
pop
add
in
pop
cmpsb
aam
in
push
push
xchg
push
rclb
mov
nop
imul
jo
cmpsl
cmpsb
aas
ret
ss
mov
sti
mov
jne
inc
lods
mov
mov
adc
add
mov
pushl
sub
in
and
and
inc
push
add
inc
inc
enter
je
mov
mov
insl
rolb
ss
in
popf
fidivrs
push
fs
or
addb
int3
add
fmul
and
das
shlb
stos
out
into
stos
frstor
mov
mov
inc
lods
dec
lea
stc
and
cwtl
pop
out
lock
and
dec
mov
arpl
add
sbb
imul
push
sbb
adc
pop
push
std
mov
mov
sub
test
loop
lcall
push
mov
add
adc
imul
pop
dec
lods
leave
lcall
loope
and
sub
adc
pop
add
sbb
mov
adc
mov
inc
fs
mov
pop
rclb
xchg
push
mov
add
adc
dec
hlt
roll
sub
cmp
xchg
addr16
lret
mov
mov
stc
jle
fidivl
inc
adc
inc
dec
dec
stos
dec
pop
test
popf
lods
sub
xchg
dec
fwait
divb
in
ret
sbb
jmp
sbb
or
fs
add
add
loop
adc
popf
xchg
enter
dec
jns
xchg
mov
mov
test
scas
and
rorb
dec
sbb
mov
sbb
dec
push
lret
sub
or
pop
mov
fadds
adc
inc
cmp
xor
or
pop
and
ret
or
not
movsb
xchg
and
iret
push
fdivl
push
cltd
lret
add
add
or
mov
adc
pushf
adc
iret
mov
push
insb
rorl
scas
into
aad
jae
inc
xchg
nop
ljmp
push
test
ljmp
dec
xchg
mov
decb
cmpsl
adc
or
or
push
dec
jp
call
mov
mov
std
mov
call
test
jge
popa
mov
call
mov
add
adc
cmpsl
dec
fwait
xor
inc
inc
dec
or
adc
les
negb
sbb
push
je
nop
push
push
add
mov
mov
mov
cld
pop
push
mov
jbe
lret
ffree
lock
leave
call
lret
jg
sub
shlb
push
cmpsb
push
mov
cwtl
outsl
adcb
inc
aad
jo
gs
daa
jecxz
pop
push
insl
les
cmovne
loope
sub
xor
or
sbb
sbbl
inc
sub
int3
int3
dec
cs
movsb
ficoml
sbb
add
push
mov
jno
adc
push
inc
pop
imul
dec
push
pop
sahf
mov
cmp
add
mov
lds
sbb
push
aaa
shrl
rol
inc
hlt
mov
ret
adc
and
adc
dec
sbb
mov
cmpsb
and
dec
in
sbb
rol
ret
jb
cld
movsl
xlat
inc
xor
sbb
dec
cmpsl
dec
lods
and
iret
icebp
add
cmpw
dec
mov
popa
or
pop
xchg
xlat
xchg
loop
dec
lock
cmp
jns
mov
xor
xor
push
xchg
nop
loope
loopne
bound
lea
cwtl
or
or
aaa
and
xor
cld
mov
jo
fwait
jns
dec
sub
xor
jae
fisttps
pop
insb
out
or
sbb
jne
fldenv
adc
xor
or
sbb
or
inc
insb
jmp
bnd
jb
insl
lods
clc
jp
jmp
jae
icebp
xchg
cmp
adc
rorb
xchg
in
je
mov
lahf
cmp
adc
mov
cmp
dec
and
jmp
inc
mov
or
je
sbb
adc
js
inc
add
adc
xor
mov
add
dec
mov
jmp
pop
or
or
sub
stc
or
inc
sub
int3
or
jmp
add
xorl
lods
push
inc
sbb
push
push
enter
xor
and
inc
pop
xchg
pop
or
int
xchg
pop
roll
cld
or
sbb
aam
popa
adc
and
add
or
inc
outsb
arpl
push
add
test
inc
cmpsl
inc
or
mov
jecxz
mov
fucomp
or
mov
pop
out
jae
push
iret
inc
fwait
sarb
repnz
je
inc
and
ror
inc
pop
nop
pusha
and
inc
adc
aad
dec
jnp
aas
jmp
or
lds
adc
fs
je
or
insl
out
rcll
inc
icebp
clc
jns
aaa
insl
xchg
aam
mov
lods
inc
sub
mov
pop
jl
cwtl
dec
push
shlb
pop
stc
adc
stc
daa
dec
les
and
sbb
xchg
mov
mov
or
xchg
push
rolb
inc
and
pop
xorl
rcrl
push
ss
or
lods
dec
pop
outsb
cwtl
dec
push
out
jo
jne
dec
fmuls
jmp
and
or
rcl
lock
lods
and
jbe
mov
aaa
xchg
or
dec
jae
sbb
or
mov
mov
pop
fwait
dec
rcl
movsl
insb
insl
sbb
rorb
pop
sub
lret
aam
dec
fsubr
pop
and
insl
or
inc
into
pop
or
loopne
jo
fcmovbe
dec
mov
call
lret
daa
ljmp
scas
mov
mov
push
sub
push
or
adc
lcall
push
mov
add
pop
push
shlb
int3
push
cmp
or
adc
xlat
inc
dec
dec
lcall
inc
jg
lods
and
adc
paddq
xchg
add
ljmp
xrelease
call
lock
mov
jns
push
push
pop
jns
pusha
push
push
pop
inc
sahf
dec
mov
lea
adc
adc
andl
lea
adc
dec
and
popa
jne
and
insb
xlat
icebp
mov
insb
cmp
loope
push
xor
lock
xchg
adc
jae
and
es
shll
aaa
dec
scas
pop
mov
jge
mov
or
subb
ret
popf
xor
js
xchg
jl
add
sbb
out
and
inc
jnp
lods
pop
adc
mov
mov
hlt
pop
lcall
mov
in
or
mov
push
test
or
mov
mov
pop
and
pop
and
mov
sub
and
and
and
mov
mov
jns
xchg
xchg
daa
fstl
test
sub
sub
push
sar
mov
mov
movsb
or
int3
xor
dec
jecxz
gs
mov
mov
or
movsl
cmp
mov
or
outsl
js
dec
or
pop
rcll
xchg
inc
leave
or
sbb
sahf
or
data16
or
addr16
mov
loop
sti
pop
sub
pop
cld
mov
inc
push
insb
xchg
sub
in
cmp
sti
push
push
or
sub
inc
or
xchg
inc
adc
aam
pop
or
jmp
sub
out
in
mov
inc
or
out
mov
or
and
leave
or
popa
rcrb
adc
cmp
test
es
or
and
movsl
adc
or
adc
or
lcall
inc
jns
hlt
sub
or
imul
pop
dec
or
fldl
sub
cmp
push
mov
pop
leave
inc
xchg
scas
bound
dec
xchg
and
jbe
add
pop
pushf
ret
push
pop
movsl
inc
pop
fstl
jl
decb
or
pushl
sbbb
ret
cmp
and
add
sub
repz
push
inc
lods
or
clc
sub
bound
lock
xchg
test
in
fdivrs
lea
lea
mov
lahf
clc
sbb
and
cld
clc
mov
sbb
lret
stc
clc
inc
adc
in
xchg
test
add
pop
inc
enter
mov
adc
jo
jg
out
leave
adc
xor
push
inc
lret
jg
enter
in
clc
pushfw
leave
cmp
and
imul
lea
inc
sub
adc
ljmp
loopne
xchg
pop
inc
imul
cld
cmp
movsl
xor
add
sub
fs
or
hlt
jg
push
in
or
or
inc
mov
xor
fmuls
loopne
ss
mov
add
in
lea
xor
jbe
gs
test
or
decl
lock
pop
cld
dec
inc
test
dec
or
lock
cli
stc
push
shr
jns
ds
int
pop
pusha
mov
inc
jns
adc
push
push
or
jb
dec
push
call
pop
push
add
hlt
add
adc
out
sub
in
or
mov
fsubr
xor
xchg
jl
add
or
mov
mov
leave
out
lock
mov
adc
mov
cmp
adc
mov
cmp
out
mov
dec
push
dec
scas
fidivrl
movsb
dec
lods
push
jbe
outsl
je
pop
mov
cmpb
pop
push
sub
mov
pop
test
jp
iret
push
insb
or
xchg
adc
mov
icebp
das
cmp
push
js
sbb
jnp
dec
sub
sub
imul
xorl
out
jle
pop
jmp
add
mov
ljmp
add
jl
mov
cmp
js
hlt
fs
aad
insb
lds
lahf
icebp
push
mov
xor
jb
mov
jmp
add
or
imull
adc
mov
dec
or
inc
sbb
test
scas
ret
cli
add
fwait
push
adc
inc
push
cltd
jae
sub
dec
inc
cmpsl
jo
pop
pop
out
mov
xchg
mov
inc
or
aam
lods
cmp
nop
int
or
jle
lahf
push
hlt
jmp
add
dec
push
in
mov
fwait
and
adc
adc
pop
jp
arpl
mov
out
cmp
jae
sbb
mov
mov
xor
imul
dec
dec
mov
xchg
inc
sub
loop
arpl
inc
dec
inc
je
ret
pop
adc
push
popf
aaa
adc
adc
xchg
inc
cmp
mov
and
test
and
or
jl
ds
mov
or
je
jp
idivb
inc
incl
mov
cmpl
inc
adc
mov
pop
mov
fwait
cmp
jge
mov
mov
sbb
jle
ss
dec
sbb
lock
adc
sbb
push
repnz
loope
add
cmpsb
jge
xchg
mov
sub
stc
rcl
and
inc
push
mov
sbb
in
pushf
call
in
sbb
adc
loop
jns
inc
cwtl
add
adc
adc
push
dec
push
push
pop
dec
mov
ficoms
sbb
mov
sbb
xchg
jle
cli
adc
inc
lods
and
dec
pop
lea
jmp
pop
inc
sahf
mov
popf
lret
inc
add
stos
cmpsb
int
nop
movsb
lods
fisubs
push
aad
test
jo
add
push
nop
add
jns
inc
sbb
jne
xchg
and
and
adc
lahf
push
gs
and
lock
call
jnp
jb
cmpb
inc
jmp
xorl
dec
and
lsl
mov
jmp
xchg
dec
adc
adc
inc
xorl
xorb
dec
pop
scas
mov
or
inc
pop
adc
and
dec
cli
push
add
xor
dec
or
mov
sub
mov
pop
push
out
jge
xchg
xlat
add
je
insb
aad
pop
inc
sub
cmp
or
das
xor
ret
push
xchg
pop
cmpsb
xor
cmp
insl
xchg
xor
and
jge
mov
jge
mov
pop
sub
bound
pop
jle
fs
sub
fcomps
dec
inc
ljmp
loopne
ret
mov
mov
pushf
xchg
aam
fdivs
shll
mov
or
pop
inc
clc
mov
leave
or
cmc
mov
inc
cli
out
pop
mov
invd
cmp
lods
push
adc
dec
in
mov
push
or
out
jmp
not
push
and
test
adcb
sbb
int
and
mov
addr16
fincstp
fs
mov
movsb
pushf
shr
notl
testb
lds
sub
push
pop
jmp
sub
jae
sub
mov
xor
movsl
xor
push
in
dec
dec
xchg
iret
inc
adc
ds
imul
mov
jb
test
pop
inc
push
sbb
ja
gs
push
xchg
inc
aad
ss
or
mov
xchg
cmp
movsl
repz
lods
ret
xor
add
aaa
pop
adc
in
mov
ljmp
fildll
or
fdivl
or
jbe
aam
xchg
and
cmpsl
xchg
jmp
aaa
mov
push
inc
sub
imul
push
pushf
cmp
mov
mov
adc
mov
iret
mov
cmc
int3
push
or
dec
and
addr16
sbb
cmp
sub
cs
lret
lcall
sbb
jne
dec
mov
push
and
hlt
push
mov
into
fdivs
lods
insl
xor
mov
inc
or
out
or
movsl
enter
dec
add
shrl
dec
sahf
mov
lods
das
cmp
or
xchg
push
inc
jmp
hlt
adc
jmp
and
sbb
push
movzbl
mov
sbb
adc
xor
pop
mov
adc
and
or
data16
dec
dec
mov
inc
or
fimull
in
mov
or
adc
mov
stc
add
push
xor
xor
cmp
mov
test
sub
push
xchg
pop
xor
jmp
push
push
cmp
xchg
scas
jb
clc
inc
sub
mov
mov
hlt
inc
ss
push
dec
in
insb
push
adc
xchg
enter
pop
mov
popa
jmp
push
movsl
ficompl
ficoml
shr
mov
inc
xor
cmp
mov
js
pop
adc
dec
sub
sbb
jg
movsb
mov
enter
dec
loop
sbb
push
add
xchg
xor
lret
cld
mov
cltd
xor
mov
mov
hlt
cli
popf
dec
cmp
adc
aas
hlt
pop
jb
push
test
dec
scas
insl
pop
out
mov
or
sbb
call
and
pop
mov
pop
ja
jne
fcoml
sub
xchg
jo
inc
pop
and
push
dec
jae
loopne
inc
xorb
cmp
sahf
shll
push
xor
push
cwtl
and
rolb
mov
imul
lret
pop
inc
mov
and
inc
xchg
mov
lcall
and
or
enter
lret
and
lods
dec
or
stos
pop
les
dec
sub
or
cmp
cmp
mov
lahf
das
shr
adc
lahf
dec
mov
adc
roll
push
and
mov
or
incl
push
mov
sub
xchg
push
out
xchg
test
iret
pop
push
xchg
sbb
cmp
ljmp
push
das
sbb
adc
test
add
add
pop
xchg
cld
xchg
jecxz
push
dec
push
jo
mov
mov
shll
je
aam
movsl
pushf
les
adc
sbbl
sti
mov
mov
and
pop
xchg
mov
mov
dec
pop
enter
jo
push
adc
pop
mov
xor
add
adc
inc
jp
and
mov
call
xchg
mov
inc
daa
in
fcmovnu
sub
or
loope
les
sbb
adc
adc
and
dec
rcll
adc
dec
or
outsl
or
cmp
je
and
hlt
and
sub
adc
lock
repnz
ret
sub
adc
cld
adc
jp
inc
hlt
mov
addr16
jo
adc
dec
mov
adc
cmp
cmp
xchg
push
adc
or
dec
sbb
xor
out
test
rcrb
and
ret
lds
leave
xchg
insb
add
call
adc
xor
es
sub
mov
jecxz
add
jmp
jp
das
fcomip
cmpsb
iret
jo
and
sub
xchg
sbb
popl
mov
or
adc
and
test
adc
adc
jmp
sbb
add
int
repz
sti
mov
mov
lcall
stos
shlb
sbb
xchg
loope
add
add
popf
out
imul
lcall
lock
inc
xchg
orl
subb
jg
push
cmc
ds
mov
lahf
dec
subl
mov
dec
mov
nop
jb
add
pop
sbb
xchg
adc
xor
fisttpl
and
movsb
inc
sbb
lea
xchg
adc
enter
cmp
mov
dec
arpl
ret
mov
adc
xchg
outsl
addl
cmp
lret
fcmove
push
jl
dec
out
sbb
shll
int
push
outsb
into
xchg
cs
or
hlt
jmp
pushf
les
sub
stc
adc
or
mov
jo
inc
add
subb
inc
pop
dec
je
enter
or
and
mov
push
inc
push
cmpl
jns
loope
push
lock
add
fimuls
add
jg
cmpsb
sbb
xor
pop
xor
mov
dec
dec
inc
and
popf
push
cwtl
movsl
jmp
test
imul
xchg
in
pop
enter
xor
ss
adc
stc
add
push
sub
or
enter
inc
dec
imul
dec
or
xchg
call
sub
mov
in
gs
sub
movzbl
sub
popf
aad
inc
mov
mov
dec
cmp
mov
jmp
btc
xor
adc
and
jge
shrl
or
push
cmp
sbb
mov
and
xchg
sbb
sbb
sbb
sbb
add
xchg
add
jb
cmp
sbb
mov
and
or
jno
sbb
mov
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
cld
enter
enter
jb
and
xchg
jl
outsl
add
adc
dec
adc
nop
ret
inc
clc
outsb
or
add
push
push
jo
loopne
push
pusha
and
inc
pop
enter
shlb
mov
inc
cmp
and
dec
cwtl
xchg
and
nop
inc
sbb
and
dec
js
inc
jo
clc
push
subl
call
mov
xchg
and
fcoms
dec
and
dec
inc
xchg
enter
shlb
mov
dec
and
mov
or
pop
and
inc
insl
orb
imul
pop
and
pop
mov
mov
pop
and
pop
mov
sbb
inc
or
adc
dec
das
clc
jg
ja
pusha
stc
cld
testl
xor
and
nop
std
push
aam
cld
loop
add
jecxz
xchg
in
nop
ds
cld
lcall
inc
repnz
lcall
enter
xchg
mov
mov
int
orl
xor
pop
mov
xchg
adc
mov
push
pop
pushl
inc
adc
fstpl
je
les
mov
jne
push
cld
inc
mov
cmp
dec
neg
mov
cmp
out
or
sub
inc
pop
cmp
sbb
jg
mov
cmp
jne
and
cmp
push
add
xchg
adc
mov
mov
je
and
xchg
xchg
ret
aam
ljmp
or
cmp
sbb
cmp
inc
jne
jecxz
mov
scas
adc
pop
xor
cmp
bound
jns
fistpl
or
sarb
imul
aas
lret
inc
jae
pusha
xchg
addl
jne
pop
jl
sti
jnp
mov
clc
sarl
add
and
mov
dec
jg
mov
sarb
jecxz
pop
adc
loopne
adc
aam
and
aaa
xor
dec
cld
adc
rorb
popa
int3
sbb
mov
les
fcompl
adc
xor
or
mov
adc
int3
dec
fmuls
sub
sbb
push
pop
cmp
push
inc
jmp
fcomps
ret
xchg
adc
sbb
or
mov
mov
inc
mov
cmp
bound
pop
lock
adcl
or
sbb
mov
and
adc
adc
out
mov
iret
aam
rorl
cmp
sub
cwtl
mov
aas
cmpl
dec
fcomps
in
push
push
aam
sub
aaa
xor
or
cltd
int3
and
push
mov
adc
add
lret
sbb
dec
mov
daa
cmp
xchg
or
push
cltd
cwtl
sub
loop
add
sarb
das
or
xor
or
cs
stos
enter
je
rcrb
jo
fstps
jno
add
inc
in
xchg
adc
push
nop
xchg
push
or
test
jo
mov
mov
mov
in
mov
xor
xor
pushf
or
popa
jo
dec
mov
cld
cmp
adc
add
jmp
cltd
xor
mov
in
cmp
lock
adc
inc
ds
mov
cld
popf
iret
mov
inc
jae
mov
and
and
xlat
xchg
sub
dec
inc
cld
xchg
int3
nop
test
pushf
and
pop
ss
and
pop
movsb
movsl
fs
fistpll
mov
push
add
pusha
push
mov
les
dec
jmp
sbb
in
cmp
das
lock
shrl
pop
addb
sub
inc
addr16
out
pop
and
cmp
lret
cmp
and
and
jne
cmp
shlb
jl
enter
or
jle
hlt
and
xor
mov
in
pop
and
dec
test
aam
jl
add
pop
push
je
mov
sbb
pop
mov
mov
adc
lods
int3
out
push
or
sahf
insb
push
call
fcomi
call
or
or
and
or
adc
and
xor
and
int3
pop
mov
fcmovne
daa
outsl
iret
scas
lret
cmpsl
addr16
cltd
je
mov
xchg
cmc
gs
int
sub
mov
jnp
or
inc
orl
aad
fsubrl
cmp
jo
jl
jnp
push
scas
inc
or
adc
push
add
les
or
sbb
cmpsb
punpckhwd
outsl
pop
cmp
divb
mov
xchg
stc
mov
pop
push
insl
push
xchg
mov
mov
addl
xor
adc
adc
orb
decl
pop
add
sarl
cs
push
cmc
lds
push
test
ljmp
or
cli
les
inc
dec
or
imul
add
je
dec
aas
test
inc
int
xchg
fsubl
inc
add
mov
fsubs
xchg
mov
cs
mov
and
cmpl
jb
push
inc
xchg
push
imul
jne
jl
xchg
out
cmp
or
jge
sbb
call
sbb
xchg
push
mov
andb
movl
cmp
jne
adcl
pop
outsl
mov
mov
sbb
add
ja
cwtl
fiaddl
adcb
pop
mov
sbb
notb
dec
xor
xchg
out
add
out
repnz
cmp
loopne
rol
rorb
call
adc
les
adcb
pop
dec
xlat
shrl
into
fcoms
or
jne
movsl
mov
add
mov
mov
sub
or
jge
xchg
enter
push
xor
xchg
test
pop
mov
xor
push
and
sub
arpl
cli
lret
mov
sbb
add
add
add
and
sbb
shll
sbb
add
xor
and
add
scas
mov
gs
enter
aam
dec
out
leave
push
test
js
add
out
aas
in
lods
leave
shlb
and
xorb
mov
jne
lret
inc
int3
or
je
jbe
mov
xor
jl
clc
sub
cmp
test
into
into
dec
xlat
xor
adc
int
nop
hlt
popf
or
out
cmp
test
decb
iret
push
xor
xchg
fcoml
inc
adc
jle
fs
lcall
aas
sarl
pop
sti
cmpl
add
ds
cltd
enter
or
movsb
inc
sbb
imul
shll
in
jb
or
loope
jae
sub
push
pop
outsl
lret
fdivl
push
pop
dec
jae
je
insb
add
add
orb
test
push
sbb
clc
dec
inc
cmc
inc
xchg
or
jmp
inc
or
insl
sub
and
jge
and
imull
lock
mov
insb
insb
or
fdivs
cmp
fmull
push
into
shl
xchg
enter
clc
mov
aad
mov
pop
mov
aad
dec
insb
jo
sbb
mov
dec
in
adc
xchg
and
sbb
adc
jae
and
push
aaa
adc
out
xchg
jne
enter
pop
loop
inc
sub
adcl
stos
adc
sub
aaa
pop
adc
lock
std
cmp
mov
lret
pop
adc
and
loop
jae
loopne
aam
push
loope
std
mov
pop
aam
mov
aam
cmp
jle
xor
mov
aaa
inc
jns
and
push
push
mov
in
sub
fcom
jnp
xchg
xchg
push
daa
jo
jp
adcl
xchg
ljmp
out
sbb
add
mov
stos
fidivrl
pop
xchg
xchg
and
sub
lret
cmc
int3
adc
clc
mov
data16
cmp
pop
xchg
mov
popa
incl
add
jmp
test
pop
or
jg
in
jnp
cmp
and
xor
mov
adc
and
das
pop
push
jg
dec
jb
sarb
hlt
sub
test
lods
xor
lods
dec
mov
jl
xchg
in
lahf
movsl
icebp
push
cmp
sub
cmp
js
mov
jbe
add
sbb
push
pop
outsb
std
jl
jg
faddp
mov
push
outsb
or
cmp
xchg
push
xchg
push
push
sbb
pusha
push
out
ret
dec
jmp
adcb
inc
fbstp
and
dec
cmpsl
pop
stos
add
in
lahf
fwait
push
inc
jo
sub
mov
test
mov
adc
mov
mov
mov
push
jl
pop
adc
jge
movsl
lods
add
hlt
dec
mov
lods
pop
or
jne
jle
mov
and
gs
or
sub
or
push
inc
sbb
mov
sahf
aas
pop
mov
inc
and
jecxz
iret
mov
jmp
daa
push
lods
push
cmp
into
jne
loopne
jl
xchg
adc
push
and
out
out
push
inc
ficomps
imul
sbb
add
je
or
popf
inc
push
in
add
jne
sti
pushl
xchg
mov
add
push
iret
and
popf
inc
pop
xor
or
mov
jle
push
and
push
movsb
mov
fs
les
loop
nop
cmpsl
push
lea
movsl
add
ret
or
push
xor
ficoms
cmc
mov
pop
adc
fmuls
sub
jae
dec
xchg
rorl
test
sahf
adc
nop
adc
sub
in
push
cmpsl
push
add
or
inc
pop
xchg
subb
jmp
cwtl
add
ja
xor
sub
fadds
xchg
xchg
decb
data16
pop
sbb
push
adc
mov
adc
in
mov
cmp
jae
fdivrs
adc
mov
ret
adc
mov
cmp
jmp
lods
dec
std
pop
dec
out
push
adc
inc
popf
cltd
mov
sub
fwait
dec
mov
jl
mov
loopne
push
jge
push
mov
pop
ljmp
inc
xchg
aam
and
movsb
add
add
je
xchg
inc
and
or
jmp
mov
push
add
cmp
sbb
push
insb
loopne
sub
adc
mov
inc
add
test
daa
imul
shrl
sub
fsubrl
mov
inc
movsb
and
add
push
xchg
ret
or
jp
push
mov
insb
adc
shrb
fs
and
and
and
push
dec
and
jae
and
sti
jae
and
inc
sub
scas
xor
sbb
loop
outsb
mov
cli
ret
push
dec
es
int3
or
inc
dec
push
hlt
adc
mov
dec
push
mov
hlt
sub
push
jae
and
hlt
icebp
ja
add
dec
adc
test
mull
jno
sbb
mov
loop
sbb
adc
js
jae
rorl
sbb
xorb
cmp
shr
andb
mov
cwtl
ret
cmp
sub
clc
insb
push
lcall
das
xchg
xchg
mov
sub
and
xchg
test
adc
repnz
shlb
fstpl
mov
and
sbb
add
push
clc
pop
add
movl
mov
mov
leave
push
das
xor
jo
mov
rol
inc
pop
sbb
clc
jg
and
fdivp
insb
adc
mov
fwait
jae
xchg
inc
js
stc
add
pushf
sbb
sub
or
xchg
call
dec
imull
in
fildl
in
mov
ds
cmp
out
xchg
push
cli
xchg
mov
and
jno
scas
adc
sbb
adc
int3
mov
repz
sub
sub
or
test
je
movsl
mov
and
add
pop
xchg
jo
movsl
jp
repnz
add
dec
add
gs
adc
andl
sub
and
leave
fists
nop
or
adc
ret
daa
push
test
hlt
adc
sbb
pop
jne
jae
add
mov
jnp
add
lcall
add
pop
inc
pop
push
hlt
jne
enter
and
pop
jmp
pop
sbb
jle
mov
adc
adc
sub
cmp
xchg
xor
sbb
loopne
xchg
fs
or
hlt
jg
dec
call
out
test
mov
xor
pop
je
test
pop
inc
js
mov
mov
lods
in
stc
fs
mov
sub
inc
enter
dec
lret
lahf
add
mov
xor
daa
or
push
push
adc
jo
or
pop
sub
das
pop
jb
xchg
std
inc
or
mov
inc
shlb
movsl
jne
nop
push
movsl
aaa
adc
aaa
pusha
adc
imul
mov
dec
es
pop
jo
and
cmpsb
xor
out
dec
sahf
and
out
xor
cmp
pop
lods
xchg
adc
jne
sub
sub
mov
mov
out
xor
push
dec
popa
xchg
clc
rolb
push
cld
xchg
adc
xchg
mov
ret
pop
das
adc
and
fisttps
fstl
int3
cmc
push
dec
test
push
dec
sub
sbb
sub
les
mov
add
xchg
loope
repz
mov
sub
mov
mov
adc
das
jmp
lock
cmp
cli
sub
rclb
shrb
sub
mov
xor
movsl
cs
mov
or
xor
mov
pop
loop
fnstenv
imul
into
mov
cmpb
adc
test
fs
mov
push
add
and
pop
push
cmpsb
out
jg
clc
jg
xor
je
add
add
lea
and
pop
mov
and
outsb
pushf
jmp
pop
inc
pop
dec
cli
lret
adc
mov
sub
mov
and
xor
test
test
adc
or
and
adc
xor
outsb
sbbb
xchg
pop
mov
dec
dec
test
and
jmp
out
push
sub
sbb
add
xor
inc
testb
xchg
aam
je
jmp
sarb
leave
cli
push
cwtl
mov
mov
outsl
fstl
sbb
jbe
pop
nop
dec
and
and
add
jmp
cmp
jge
xor
cmp
je
jle
and
jmp
mov
rcrb
testb
pop
xor
movl
push
mov
mov
je
ja
bound
call
add
adc
mov
fdivs
jne
mov
cmp
out
cmp
fisubs
sbb
sbb
add
adc
loop
inc
ss
dec
and
dec
jnp
cld
mov
cmp
js
adc
rcl
sub
push
xor
lds
xchg
mov
sarl
mov
dec
and
mov
inc
js
sub
pop
mov
clc
push
cmp
jne
cmpb
jb
test
icebp
loop
mov
pop
xor
xchg
cmp
and
sbb
jo
cmp
testl
sbb
cmp
jle
int3
push
das
add
pop
sbb
jne
cmpsl
jb
mov
je
pop
pusha
inc
cltd
mov
cmp
insb
adc
andb
cmp
stos
aas
inc
fs
add
jmp
xchg
lret
mov
mov
popa
mov
lcall
scas
mov
pop
loop
pop
lret
popf
mov
mov
jle
mov
jbe
lcall
xchg
mov
xorl
ret
or
inc
add
lret
mov
imul
push
and
imul
jmp
mov
sbb
nop
sub
adc
or
mov
pop
cmp
inc
and
dec
mov
pop
add
add
jecxz
dec
xor
in
or
or
in
jne
xor
pop
inc
cmp
push
or
ljmp
and
movsb
push
jno
outsb
inc
push
subb
push
dec
lods
jp
push
orps
ret
stc
cmpsb
mov
and
test
and
std
movsl
imulb
aaa
pusha
or
inc
mov
push
fimuls
dec
or
pop
aam
pop
push
das
std
push
dec
stos
xchg
pop
lret
aad
pop
adc
pop
cmp
outsb
test
nop
leave
aam
or
sub
sub
mov
inc
cwtl
dec
inc
pop
cmp
mov
mov
orb
adc
pop
into
and
cs
loop
bound
push
jle
push
xchg
xlat
nop
or
sbb
cmp
pop
mov
or
cmp
xchg
jl
sarb
lret
das
jne
xchg
js
xchg
imul
push
sbb
sbb
mov
mov
cltd
xor
clc
ret
mov
xor
mov
adc
cltd
and
pop
inc
mov
xor
inc
pop
adc
mov
aad
roll
ret
ja
les
adc
sbb
pop
stos
fisttps
mov
test
outsl
push
pusha
mov
ja
insb
and
jmp
push
dec
sub
insb
or
movsl
dec
xchg
inc
dec
jmp
in
js
sbb
les
pop
mov
jo
inc
insb
mov
bound
sbb
dec
dec
cmp
cmp
ret
xor
adc
popa
cmp
sbb
and
xchg
mov
mov
sbb
mov
sub
mov
jmp
sub
push
push
outsb
jns
push
sbb
and
xchg
dec
mov
aaa
lods
adc
fstl
insb
cli
cld
push
iret
dec
and
nop
xchg
mov
pop
pop
inc
mov
sub
movsb
add
or
xchg
arpl
xchg
scas
loopne
xchg
xlat
cmp
xchg
out
and
enter
xlat
sbb
or
mov
dec
repnz
cmp
sbb
insl
leave
push
jg
xor
xchg
lock
add
xor
cmp
mov
sbb
outsl
push
je
emms
test
push
les
adc
shrl
add
add
adc
ficoml
push
add
push
cmp
sti
orb
pop
jb
loopne
dec
inc
mov
cmp
mov
and
fdivr
xchg
inc
scas
pushf
sbb
jo
je
sub
cwtl
cwtl
xor
sbbb
shrb
or
push
test
mov
lods
out
dec
or
push
pop
dec
imul
les
push
jmp
mov
rcl
mov
dec
cmp
dec
outsb
jno
push
lock
int3
out
xchg
sub
push
movsl
dec
pop
dec
mov
pop
mov
movsb
movsb
dec
mov
add
push
rolb
adcl
inc
dec
sub
cld
or
adc
push
push
or
dec
adc
dec
cltd
cmp
push
les
enter
dec
adc
std
and
std
jg
inc
test
pop
in
or
push
jo
arpl
sbb
js
sub
daa
push
and
les
cwtl
data16
cmp
outsb
jl
sbb
sbb
orb
pop
mov
inc
xchg
jo
jl
push
or
xchg
clc
inc
mov
pop
sbb
xlat
test
lods
fwait
clc
dec
loop
xor
xor
adc
mov
sti
gs
and
aaa
or
add
mov
xchg
aad
inc
cmc
faddl
sub
mov
shr
in
dec
mov
add
add
enter
adc
sub
es
jl
and
push
and
sub
test
mov
xchg
sbb
adc
push
jne
mov
insb
push
sub
orb
or
cli
cmp
cmpl
xchg
cwtl
imul
dec
out
fidivrs
push
cld
push
rolb
jl
loopne
js
loopne
lahf
dec
pop
mov
jle
stos
adc
lahf
mov
push
mov
dec
mov
xor
inc
and
fstpt
or
xchg
dec
and
fs
cli
or
test
jmp
fs
or
arpl
inc
fs
xor
push
push
clc
jle
adc
arpl
mov
cmp
sub
hlt
scas
inc
xchg
cld
loop
jge
test
lock
repz
mov
cmp
je
mov
addr16
push
push
mov
jns
enter
inc
enter
jle
push
sub
adc
push
adc
xchg
mov
xchg
or
and
sub
add
xchg
cwtl
push
cltd
push
imul
pop
insb
adc
sub
cmp
loop
mov
inc
inc
push
inc
pop
and
pop
push
scas
dec
jl
and
sbb
mov
xchg
sub
test
dec
dec
mov
inc
xor
mov
pop
inc
sti
adc
mov
pop
mov
or
adc
mov
pop
sbb
pop
adc
and
cmc
dec
or
lods
inc
sub
daa
xchg
jo
jbe
mov
mov
aas
into
bound
ja
pop
mov
mov
jo
xor
mov
dec
sub
push
adc
dec
dec
mov
pop
inc
sbb
xor
mov
cmp
sub
jecxz
xor
push
adc
fsubr
rclb
adc
inc
pop
or
or
andps
popf
sub
test
inc
aas
jl
or
lcall
jbe
daa
insb
aam
and
jecxz
inc
push
fdivrp
pop
push
adc
push
sbb
and
xchg
cli
insb
cs
add
je
or
cmc
dec
push
ljmp
cmpsb
push
xchg
or
sbb
xor
add
fimuls
mov
scas
mov
and
or
mov
sub
mov
sub
or
movsl
les
sti
inc
stos
pusha
js
push
adc
or
sbb
mov
mov
inc
sbb
sbb
lret
sarb
adc
mov
pop
js
or
loope
jnp
das
mov
mov
dec
movsl
add
adc
fwait
or
mov
dec
inc
lret
mov
lcall
add
cmpb
sub
sub
jae
dec
xchg
add
subl
repz
repnz
hlt
sbb
les
mov
xlat
adc
faddp
xchg
nop
sbb
inc
pop
or
pop
ljmp
jnp
xlat
mov
imul
add
call
aas
add
dec
movsb
rorl
call
or
and
mov
push
jg
cmp
and
leave
dec
push
hlt
cmp
lahf
aam
xor
or
add
mov
inc
dec
dec
jge
mov
clc
jle
sub
das
into
xchg
push
sub
aaa
ds
test
xchg
add
push
les
cmp
je
mov
lods
mov
dec
nop
or
xlat
cmp
xchg
fadds
lret
or
addr16
loop
jb
loopne
xchg
loope
cwtl
inc
inc
jo
xchg
icebp
aam
repz
and
scas
dec
push
xchg
pop
pushf
xchg
ficomps
cli
stos
cwtl
jg
push
test
test
pop
and
push
adc
shlb
lds
test
dec
adc
mov
or
cmpsl
repnz
push
adcb
lret
js
addr16
xor
cltd
adc
outsl
cld
dec
lds
sbb
cmp
je
xor
scas
xchg
fstpl
dec
cs
inc
lea
jne
movsb
xor
movb
addb
cmp
inc
dec
cld
push
popf
mov
xor
call
fstpt
ficomps
xchg
pop
js
pop
rorl
movsb
fs
adc
adc
mov
mov
cmpsl
mov
dec
add
ljmp
ret
dec
sahf
xor
pop
dec
mov
push
in
push
sub
xchg
rorb
mov
jmp
andb
mov
mov
and
mov
lock
insb
jecxz
sbb
jns
and
and
out
mov
jle
xchg
dec
inc
mov
mov
dec
push
ja
jnp
jne
mov
xor
sbbb
jl
sbb
std
lcall
in
orb
mov
dec
cmp
adc
mov
or
xor
and
lret
xchg
adc
mov
xchg
scas
mov
ja
mov
mov
push
pop
xchg
nop
out
cmp
test
pop
repnz
push
lds
shlb
push
xchg
ret
push
movsl
test
idivb
mov
call
in
and
popa
call
add
test
mov
inc
out
cmp
push
mov
jne
mov
mov
lea
and
subl
or
push
aad
mov
roll
inc
in
mov
xor
cld
in
fsubs
add
enter
and
sub
pop
sub
xchg
out
stc
dec
fidivs
add
popa
fstpl
cmpsl
clc
sub
mov
or
in
mov
sbb
sub
dec
cmp
mov
sub
jecxz
pop
or
adc
les
adc
dec
adc
scas
push
add
mov
push
fisttps
insl
in
xchg
xchg
and
jg
or
xchg
adc
mov
dec
inc
mov
push
cmp
adcb
outsl
inc
jle
mov
push
sbb
dec
sbb
xchg
jp
push
dec
lahf
pop
mov
pxor
mov
out
loope
adc
dec
sub
imul
xchg
inc
cmp
mov
and
sub
pop
sub
mov
xorb
lds
push
mov
mov
test
xchg
mov
pushf
adc
and
jns
push
or
mov
stos
push
push
lahf
inc
inc
dec
jg
lds
lods
mov
mov
cmc
stos
and
insb
inc
ret
movsl
test
loop
imul
rcrb
xchg
or
add
xchg
cmpsl
inc
or
dec
lret
push
sti
jle
dec
lods
lods
daa
dec
sbb
fs
or
push
test
loopne
mov
or
ljmp
enter
ja
mov
pop
mov
popf
mov
call
loop
xchg
test
jae
sub
andb
pop
or
repnz
cmp
sub
adc
imul
imul
outsb
ja
xor
outsl
and
fdivr
cs
fcoms
mov
nop
jnp
fwait
or
inc
loop
inc
das
sub
and
xor
xlat
xor
pop
ja
inc
insb
mov
scas
push
and
mov
cmpl
fisttpll
and
add
daa
xor
sub
pop
adc
pop
insl
scas
and
and
and
ljmp
mov
push
dec
dec
push
fisttpll
cmpsb
and
push
push
mov
mov
sarl
negl
mov
popa
test
cmp
or
pop
adc
ret
push
in
inc
test
and
popf
xchg
shll
enter
testl
ds
jno
xchg
nop
daa
dec
inc
inc
ljmp
dec
xchg
jae
push
push
ret
fs
and
xchg
hlt
or
push
insb
jnp
or
sti
movsl
sub
fwait
push
into
mov
push
mov
push
pop
cmpsl
fdivrl
sub
mov
xor
fldt
in
jae
adc
pop
and
lcall
pop
mov
enter
sub
test
xchg
data16
inc
lahf
bound
xor
or
dec
paddusw
jae
push
xchg
or
and
push
adc
imul
es
or
inc
inc
pop
nop
popa
xor
add
push
cs
inc
into
add
jmp
pusha
dec
mov
movsl
js
lret
and
stc
in
adc
adc
bound
jge
call
lock
enter
ja
fmul
or
insb
jne
ds
fsubs
adc
pop
popf
jecxz
or
ljmp
cmpl
test
sub
mov
pop
or
orl
jle
add
jg
add
mov
add
lcall
inc
and
xor
movsb
push
add
dec
popa
js
outsl
inc
and
mov
outsb
cmpsl
imul
add
inc
enter
xchg
or
inc
push
xor
sahf
pop
bound
mov
pushf
adc
popf
sbb
pop
jle
shl
adc
xor
scas
mov
inc
jl
pop
adc
jg
mov
or
movsb
sbb
je
scas
les
sub
clc
mov
mov
je
sub
dec
or
pop
cmove
movsb
scas
mov
and
dec
mov
mov
scas
ja
nop
mov
sub
addr16
push
popf
sbb
mov
bound
dec
and
cmp
inc
and
call
xorb
fdivrl
cmp
sbb
push
orl
cltd
gs
inc
js
xchg
cmovne
xor
pushf
loop
gs
inc
add
xchg
lds
jg
inc
lret
pop
mov
pop
adc
push
jecxz
adc
adc
movsl
lods
mov
pop
xor
test
add
jmp
or
gs
jl
loopne
adc
out
push
testl
mov
adc
inc
add
xor
jl
lahf
or
or
jmp
or
inc
nop
xchg
sub
or
sub
xchg
inc
jo
dec
les
lock
int3
sbb
sub
cld
cwtl
pop
lods
sarb
pop
in
pushf
inc
inc
mov
xchg
sbb
lcall
mov
mov
dec
in
or
cwtl
push
in
cltd
and
fwait
inc
or
inc
insl
sub
test
test
push
add
and
in
or
cmp
sub
inc
stos
mov
dec
adc
leave
cltd
mov
nop
into
add
add
xor
int3
inc
aam
dec
outsb
cmpsl
cmp
or
inc
push
pusha
dec
mov
mov
xchg
inc
pop
sub
xor
mov
mov
mov
in
icebp
not
scas
jecxz
repz
fdiv
lods
repz
fpatan
lods
icebp
pop
movsb
fwait
jl
or
mov
push
stos
add
lds
mov
mov
sarb
or
and
push
mov
mov
pop
adc
dec
fiaddl
arpl
mov
inc
mov
mov
cmp
push
adc
nop
xor
lods
push
and
hlt
outsb
icebp
mov
popf
cwtl
pop
and
sub
das
mov
test
mov
sbb
adc
add
add
shl
int
div
insb
mov
add
sarl
je
jae
sbb
rclb
imul
xlat
sub
sbb
repnz
push
inc
imul
ret
push
pop
ret
jne
test
icebp
test
repnz
and
inc
mov
repnz
test
repnz
jle
inc
mov
repnz
lea
inc
dec
cmp
pop
inc
test
sub
cld
fistpll
mov
mov
add
mov
filds
ret
inc
xor
add
flds
ret
inc
sbb
lcall
xor
mov
leave
adc
or
mov
dec
test
iret
cmc
dec
jmp
or
or
or
jo
or
mov
or
cmpsb
mov
lods
mov
cltd
and
lea
xchg
dec
or
xor
pushf
adc
pusha
xor
jl
xchg
push
jl
or
fcoml
sbb
push
pusha
movsl
repz
xlat
inc
leave
pmullw
fdivl
test
js
add
fstpt
mov
mov
xchg
movsb
fs
frstor
cmp
inc
imul
fisttpl
sub
dec
dec
adc
sbb
adcl
xor
mov
inc
xor
dec
in
adc
movsb
ljmp
pop
or
push
insl
cli
popa
out
cmp
mov
pusha
cmpsl
push
mov
imul
rcrb
mov
mov
xchg
inc
repz
push
mov
sbb
xchg
stos
aas
arpl
sbb
jl
and
imul
test
cld
sbb
jge
mov
icebp
push
jnp
out
loop
push
movsb
addl
push
jo
fiadds
add
xchg
xchg
stos
aas
jp
and
mov
pop
and
cmp
or
arpl
and
and
enter
sub
sub
add
mov
adc
loope
jl
ljmp
inc
cmpsl
push
shl
adc
adc
and
adc
or
and
bound
inc
js
sbb
lea
xchg
pop
adc
das
or
int3
int
jmp
add
addb
scas
out
cmc
and
fldt
std
or
cld
xchg
cmp
xor
cmp
sub
jb
and
cld
adc
call
popf
outsl
movsb
jo
hlt
mov
cmc
or
xor
cld
jb
adc
mov
or
xor
inc
sbb
sub
inc
pop
mov
call
sbb
adc
jo
add
xchg
or
mov
mov
or
or
je
and
rorb
hlt
or
mov
and
add
add
sbb
test
imul
test
call
mov
cmpb
mov
adc
sti
test
adc
in
ret
lds
and
pop
xchg
sbb
inc
mov
or
xchg
jne
mov
inc
loopne
adc
mov
js
les
cmp
loope
pop
push
int3
cli
push
and
clc
push
mov
push
xchg
hlt
and
pop
add
mov
aam
iret
or
inc
xchg
rclb
inc
inc
push
fnstcw
or
sub
mov
cwtl
xchg
or
sub
mov
sub
adc
scas
sbb
jo
popa
add
in
or
pop
inc
jo
xchg
fs
and
stc
mov
mov
push
mov
add
fadd
mov
add
add
sub
cmp
imul
es
pushf
lret
add
pop
sub
push
ret
or
and
pop
jbe
loopne
hlt
jbe
pop
cmp
popf
dec
mov
pop
xor
test
iret
out
cmp
test
stos
mov
fcomi
rcl
jg
xchg
or
call
add
inc
call
aaa
pop
scas
clc
and
mov
xchg
dec
sti
cmpl
cmpl
or
mov
dec
into
sub
mov
ret
loope
scas
sub
test
cmp
mov
mov
xor
add
enter
inc
jl
fnstcw
in
mov
sub
cmpsl
dec
mov
rorl
mov
cmp
and
filds
dec
shlb
mov
or
repnz
dec
idiv
rcl
scas
jno
fsubrp
fcompl
push
push
sbb
sbb
pop
out
xchg
add
lcall
popf
ret
ljmp
sbb
movsl
bound
mov
dec
inc
xchg
mov
aad
cmp
sbb
lds
scas
sub
into
pushf
adc
sahf
jg
push
push
mov
setle
mov
and
pushl
into
lock
push
fisttpll
in
call
and
jmp
outsl
push
mov
jbe
pop
sub
subl
jo
mov
inc
add
iret
pop
pop
lods
js
jmp
das
jg
mov
dec
xabort
int3
data16
and
adc
adc
rorb
test
mov
adc
and
outsl
in
lret
or
sbbb
jmp
push
leave
lret
push
mov
sahf
pop
and
jae
push
out
adc
pop
jp
movsb
cmpsl
ljmp
mov
dec
sti
mov
push
sbb
cli
jb
fidivs
and
insb
xor
mov
cld
xchg
mov
repz
sbb
push
das
orl
jle,pt
inc
dec
jne
das
mov
push
mov
mov
jbe
hlt
movsb
cmp
push
das
jns
xchg
adc
cmp
push
add
inc
jne
repnz
loopne
cli
mov
dec
clc
test
out
xchg
jnp
add
mov
dec
lock
cld
jmp
call
int
dec
and
stc
jle
sbb
fstpt
dec
scas
push
iret
mov
mov
mov
call
call
inc
xor
pop
pop
and
add
jo
jnp
xchg
xchg
sbb
adc
sub
push
adc
adc
xor
imul
js
shl
mov
nop
pop
inc
das
mov
sub
mov
xchg
push
movsl
je
je
roll
jl
fimuls
or
add
cmp
jge
push
mov
bound
int3
pop
or
daa
aad
push
bound
and
pop
inc
and
xchg
clc
sbb
cmp
or
or
or
out
inc
int
nop
cwtl
pop
sbb
pop
dec
imul
je
subl
and
popf
popa
dec
cmc
dec
fcoms
adc
mov
mov
or
and
adc
mov
jg
adc
dec
adc
adc
lahf
or
test
lods
ja
loop
mov
test
sahf
xor
xchg
je
in
loopne
cmpl
jl
jg
loop
cld
jg
mov
or
rorb
in
ja
sbb
jnp
dec
mov
test
or
sub
cmp
push
or
mov
enter
sbb
in
ficoml
jmp
cltd
ja
add
jle
mov
dec
scas
mov
imul
xchg
xor
sub
lock
mov
pop
nop
dec
rorb
fwait
fwait
jae
inc
and
and
inc
mov
cmp
mov
lahf
inc
mov
leave
xchg
aas
push
rcrb
push
lds
and
repz
dec
aam
test
xor
pushl
mov
enter
sahf
cs
jg
popa
cmp
adc
test
std
mov
addb
dec
adc
mov
in
jg
and
imul
aaa
je
adc
add
outsl
mov
lea
out
dec
sarl
ficoms
imul
jecxz
and
pop
pop
xor
push
jg
mov
xchg
pushf
rcrb
subl
mov
stc
xor
push
lds
or
cli
xor
clc
addb
inc
enter
andl
xor
loopne
or
dec
xor
adc
pop
leave
push
xor
in
jns
mov
mov
call
xor
js
ret
enter
mov
cltd
sbbl
sub
inc
adcl
pop
sbb
pop
mov
and
out
mov
enter
lock
mov
and
or
mov
cmpsl
push
mov
lea
mov
ja
jmp
stc
or
movq
inc
daa
stos
test
inc
and
or
fs
jmp
sbb
inc
cmpsl
xchg
adc
mov
inc
fsub
out
out
jle
xchg
mov
and
and
xchg
jge
adc
mov
outsl
mov
sahf
or
pop
into
fstps
stos
xor
mov
call
xor
jnp
repz
adc
sub
push
jl
inc
out
and
and
inc
dec
jne
repz
pop
test
pop
out
hlt
mov
decl
int
add
pop
jne
subl
cwtl
jbe
fsubs
idivl
fsubs
mov
insb
adc
cmp
sbb
cltd
cmp
mov
push
stos
aaa
add
test
ret
in
mov
mov
outsb
imul
mov
add
mov
mov
xchg
inc
dec
jne
arpl
nop
or
adc
adc
xor
and
adc
mov
or
add
push
out
xchg
pop
add
cwtl
mov
out
fs
pop
inc
scas
mov
imul
aad
in
mov
cmpb
mov
imul
sub
mov
xchg
mov
cmp
je
push
mov
scas
lds
mov
test
lods
jmp
xchg
outsb
iret
and
push
or
cmp
inc
je
test
mov
js
xchg
or
cmpb
insb
dec
xor
sub
add
fwait
adc
jecxz
jle
push
test
xchg
jmp
jg
mov
push
in
mov
mov
dec
cmp
adc
je
or
or
sub
add
inc
jne
loopne
add
cli
add
ds
cmp
and
pop
inc
es
repnz
cmp
push
test
pop
jle
inc
add
adc
add
or
mov
arpl
sub
insl
inc
orl
into
icebp
lahf
mov
adc
test
lret
adc
out
call
loope
sbb
xchg
dec
nop
ljmp
dec
or
shrl
fmull
xor
dec
lds
sub
in
ja
inc
pop
sbb
xchg
push
aad
mov
out
aam
sti
addl
inc
mov
xchg
push
iret
sbb
pop
popa
push
bound
pop
cwtl
mov
and
inc
lock
clc
dec
test
test
mov
lock
lea
inc
and
leave
cs
sub
lds
and
xchg
xor
les
cmp
cmp
pop
push
mov
loop
xchg
sbb
outsb
cld
push
mov
rcrb
insb
es
fsts
mov
adc
dec
ret
xlat
cmp
rorb
xor
rorl
imul
jl
dec
sbb
repz
sbb
and
bswap
push
movsb
inc
das
jge
stc
adc
and
cmpsl
int3
sub
insb
mov
jne
hlt
or
jae
lahf
push
push
jecxz
inc
test
test
sub
dec
add
mov
lahf
xchg
or
jnp
push
cld
pop
sarb
mov
push
add
xchg
outsl
dec
xchg
mov
orb
fdiv
push
dec
aam
xchg
pop
push
inc
sbb
cmp
cld
pop
sub
adc
pop
push
mov
sub
mov
stos
je
mov
cmp
dec
fsubrs
test
add
gs
stc
mov
in
lods
fs
jnp
jle
nop
pop
loopne
dec
push
adc
bswap
xchg
mov
hlt
out
jg
cli
test
jge
inc
scas
lret
jle
lock
sti
cwtl
test
inc
xchg
xor
mov
or
dec
mov
push
lcall
inc
sub
js
xchg
adc
jns
lods
outsb
and
pop
sbb
das
les
sti
mov
pop
mov
aam
aaa
xchg
popf
dec
mov
jge
push
pop
mov
test
loope
cmpb
call
outsb
add
popa
mov
pop
int3
adc
and
andb
sbb
loop
ret
add
mov
inc
inc
orb
mov
test
inc
ljmp
mov
cld
negl
das
mov
mov
lret
push
or
push
sbb
fs
or
sbb
xlat
push
fisubrl
inc
add
jge
mov
pop
outsl
sbbb
loop
inc
dec
jne
push
jmp
stos
xchg
push
or
sub
test
mov
sbb
sub
inc
jmp
std
outsb
test
int3
enter
shll
sbb
add
shrl
mov
inc
pop
or
stc
adc
movsl
sti
mov
push
rcl
fistl
test
inc
testl
daa
mov
sbb
inc
and
dec
or
test
xchg
test
push
mov
dec
push
pusha
or
jno
std
lcallw
push
leave
fnstcw
sub
enter
pop
jae
dec
ret
fistpll
inc
adc
sti
cmp
push
lahf
mov
js
ljmp
jne
or
mov
pusha
push
lahf
cmp
mov
jmp
xor
movsl
adc
xor
cmpsb
xchg
inc
and
cld
jge
dec
xor
xlat
mov
cld
in
aam
insb
hlt
mov
push
pop
in
repz
scas
adc
adc
popl
test
xchg
add
das
andb
std
or
aam
test
xor
fcoms
xor
push
xchg
inc
push
push
push
pop
mov
mov
jmp
cld
dec
dec
in
fdivrs
in
test
and
add
dec
in
lea
pop
sub
into
rorb
hlt
mov
out
jns
adc
mov
popa
sub
cli
mov
sbb
mov
mov
lea
test
mov
xlat
cwtl
stc
bnd
int3
push
jno
mov
or
aam
orb
jns
xchg
fmull
add
sub
adc
sbb
inc
hlt
aam
shrl
mov
add
mov
or
call
fldenv
cmp
mov
addb
pop
shr
orb
sahf
in
in
or
ja
adcb
hlt
jmp
sti
out
imul
repnz
dec
test
movswl
ficompl
inc
fdivrl
add
add
mov
out
sahf
in
shrl
inc
nop
stos
pop
xchg
pop
sbb
jp
dec
aam
enter
mov
fucom
xlat
or
ja
movsb
xchg
or
inc
int3
mov
outsb
pop
xchg
inc
mov
inc
loopne
jnp
fdivrs
dec
test
or
cmp
cwtl
and
and
and
stos
inc
mov
push
add
adc
dec
add
jne
push
out
loope
xor
add
mov
sub
test
inc
imul
lds
lock
icebp
loopne
adc
inc
push
and
jbe
push
out
xor
les
mov
test
push
or
xchg
and
adc
rclb
sub
and
inc
push
ljmp
int3
fidivrl
inc
cmp
enter
and
and
mov
movsl
xchg
or
test
xor
mov
out
cmp
pop
sbb
test
shlb
xchg
adc
lea
cs
mov
xor
cwtl
xchg
shr
fdivrs
clc
mov
mov
inc
in
sub
rolb
mov
xchg
push
aam
fwait
ljmp
adc
into
mov
ja
jb
cld
inc
mov
dec
in
and
mov
int3
pop
sar
or
jbe
mov
dec
and
lahf
mov
fcoml
xchg
mov
mov
sub
adc
js
test
sbb
inc
mov
pop
pop
or
ret
shll
lret
idivl
push
lock
lret
cli
xchg
dec
call
jmp
cld
inc
dec
and
cltd
sbb
arpl
ret
push
pusha
divl
nop
add
add
sti
mov
or
sbb
cli
cmp
jae
xchg
xchg
jae
adc
xchg
xor
xchg
fisttps
adc
push
lds
xor
sbb
xchg
nop
dec
les
or
ja
add
rcrl
subl
mov
bound
push
jno
mov
cld
mov
and
clc
xor
and
mov
xor
mov
push
sbb
nop
fs
test
out
daa
xchg
or
pop
xchg
or
adc
cmc
dec
mov
sub
repnz
and
xchg
lahf
ret
pushf
pop
and
sahf
mov
incb
jp
xlat
mov
sub
pushf
or
icebp
sbbb
test
xlat
dec
sub
rorb
mov
dec
jge
out
imul
movsl
or
mov
sub
inc
xor
inc
jno
push
and
cmp
adc
pushf
pop
and
push
bts
xchg
adc
add
sbb
jl
mov
and
dec
mov
mov
inc
or
lcall
into
or
inc
rcll
xlat
add
add
xor
dec
fadd
rcrl
bt
movsb
jl
inc
mov
dec
or
lds
sbb
mov
sbb
sbb
adc
push
test
dec
add
es
bswap
sub
hlt
pop
add
inc
mov
loopne
pop
orl
inc
inc
pushf
mov
and
dec
adc
imul
imul
pop
xor
adc
fwait
sub
mov
sub
push
insl
loop
xchg
cltd
xchg
cld
call
xor
inc
aam
sub
pop
pop
mov
inc
bound
pushf
imul
adc
fcmove
leave
adc
adc
push
jo
push
repz
mov
inc
push
adc
push
stos
adc
cld
sub
daa
adc
and
fwait
sahf
fsubl
inc
fdivs
adc
mov
xchg
js
mov
pop
xor
mov
clc
push
test
xor
push
or
inc
sbb
adc
cmpl
jno
les
cmp
or
dec
andl
mov
dec
nop
xor
sbb
sub
and
rclb
nop
and
mov
scas
adc
jo
jge
cs
or
or
inc
sub
in
xchg
xor
inc
adc
pushf
dec
repz
sub
ss
je
shl
aaa
xchg
imul
mov
or
xchg
ficoms
in
ret
aam
push
xor
dec
pop
repnz
inc
in
xor
push
xor
cld
bnd
cmp
inc
gs
movsb
leave
mov
jmp
sub
and
cmp
sbb
push
or
inc
push
mov
je
fldenv
dec
sbb
pop
sti
cmc
or
cmp
ror
push
and
lcall
mov
push
inc
popf
push
adc
xor
xchg
gs
or
leave
jno
imul
ret
push
das
in
nop
outsl
shlb
movsb
stos
sub
out
dec
pop
jmp
xor
jle
sbb
inc
push
in
push
cmp
and
xchg
sbb
cs
push
push
or
sbb
call
push
je
sahf
inc
mov
push
xchg
cmp
scas
xor
adc
je
stos
cmp
jmp
fs
aam
jne
mov
inc
sub
orl
les
and
ja
push
inc
xchg
sub
decb
pop
xchg
mov
bound
dec
test
inc
or
out
mov
inc
mov
pop
inc
or
mov
jb
insb
mov
and
push
pusha
stc
addr16
xchg
jp
fdivl
clc
inc
repnz
add
je
sub
push
dec
cltd
push
push
cmp
add
jmp
sub
xlat
cltd
pop
or
aad
add
rclb
mov
push
mov
sbb
and
mov
nop
mov
push
inc
jb
push
fs
mov
push
add
negb
add
push
jno
push
in
inc
pop
cmp
enter
setp
fiaddl
and
xor
jl
mov
sbb
sub
add
sbb
addl
into
add
sbb
or
jp
and
jne
push
cmp
jbe
sbb
add
sub
xor
inc
jns
fdivrs
sbb
and
mov
shrb
cmp
nop
or
mov
cmp
add
adc
push
inc
pushl
int3
insb
fcoms
pop
add
and
dec
add
and
pop
call
adc
sub
adc
mov
pop
mov
adc
mov
stos
stos
mov
pop
idivl
sub
call
dec
sbb
xlat
xchg
jne
nop
sahf
mov
and
lcall
jbe
xchg
or
test
xchg
xchg
loope
adc
cmp
xchg
mulb
por
xor
rclb
xchg
sub
lds
jmp
sbb
push
enter
adc
xchg
sub
mov
leave
jmp
test
push
jp
xchg
test
add
nop
xchg
mov
sub
jb
rclb
shll
jl
loop
jo
sbb
mov
mov
cmp
push
mov
lods
dec
out
movsb
in
mov
sub
or
pop
sbb
mov
cs
mov
xchg
mov
hlt
xchg
sti
iret
mov
sub
addr16
xchg
mov
aad
scas
lds
mov
ret
add
arpl
or
add
push
scas
in
push
xchg
mov
testb
lret
aaa
pop
push
mov
lock
add
inc
add
add
btc
ss
or
jg
das
out
push
adc
adc
add
pop
mov
cwtl
dec
loop
xchg
scas
sub
int
push
outsb
mov
inc
dec
call
repnz
dec
scas
mov
xchg
push
mov
ljmp
sbb
adc
ds
bound
jne
xchg
push
fsubr
fsubl
pop
repnz
xchg
mov
push
cmpsb
dec
jne
push
mov
cmp
cmp
imul
mov
sbb
mov
xor
dec
mov
and
mov
cld
push
dec
ja
out
fidivrs
notl
jae
push
mov
adc
mov
fmuls
sbb
in
or
inc
shrb
stos
sarb
lods
test
or
test
popa
call
lahf
rcll
add
push
xor
jl
xchg
xchg
mov
xlat
mov
ret
mov
xchg
pop
or
adc
adc
repnz
dec
jo
cmp
push
imul
inc
jne
int
test
mov
push
imul
xor
and
and
mov
jmp
loopne
xchg
sbb
cmpb
or
pop
jmp
mov
lret
data16
jmp
dec
repnz
mov
push
cld
push
cmpb
call
or
inc
ja
enter
or
lcall
push
mov
mov
in
xor
add
je
ds
sbb
bound
or
fs
les
mov
xor
push
mov
dec
sbb
adc
adc
mov
or
or
dec
mov
adc
inc
in
jle
adc
pushf
add
sbb
pop
mov
movsl
jne
fisttps
mov
pusha
inc
xor
and
and
jmp
push
sti
nop
aas
dec
mov
aad
mov
mov
movsl
add
movsb
xor
mov
ret
addr16
add
and
icebp
popa
adc
lods
int3
xchg
sub
mov
test
or
push
add
les
add
adc
or
mov
sub
mov
jge
jge
jne
inc
mov
pop
shl
ret
add
push
testl
and
adc
lds
xor
pop
sbb
cs
test
movb
adc
dec
xchg
push
xlat
mov
cltd
repz
imul
testb
pop
out
pop
mov
xchg
mov
xchg
repz
mov
jg
aam
add
push
out
add
je
xchg
mull
xchg
xor
xchg
sbb
mov
pop
push
sahf
adc
std
dec
or
stos
lea
lods
jbe
fsub
push
mov
in
sbb
mov
sbb
add
test
fmulp
dec
out
or
add
notb
testb
jmp
adc
fs
xchg
in
adc
inc
and
in
add
and
les
cmp
xchg
add
mov
lea
shrl
gs
mov
clc
dec
jbe
inc
xor
and
gs
and
mov
push
in
or
sub
mov
roll
call
test
scas
mov
adc
fdivl
stos
push
sbb
or
es
pusha
push
adcb
jecxz
dec
lcall
enter
xchg
fs
pop
sub
aas
pop
or
shll
call
pushf
push
sub
subb
xchg
sub
cmpsl
repnz
push
jae
mul
add
xchg
or
pop
xchg
imul
lods
adc
lss
sub
jg
adc
repnz
jno
or
inc
fdivp
lock
loopne
scas
mov
cli
mov
test
or
std
add
int3
not
xor
je
xchg
add
and
xchg
and
or
cmp
in
push
loop
and
xchg
imul
xchg
mov
mov
enter
scas
sub
lahf
imul
std
mov
test
and
ds
inc
pop
incb
movl
ja
jbe
sahf
mov
xchg
mov
jne
mov
adc
je
movsb
cmp
push
add
dec
or
mov
cmpsl
sbb
leave
inc
add
pop
sub
and
fisubrl
xchg
adc
lock
lock
add
enter
cmp
hlt
add
xchg
inc
out
jge
sub
xor
and
xchg
or
push
jno
loop
and
mov
negl
notl
hlt
cmpl
or
pushf
leave
cmp
cwtl
or
xchg
leave
push
subb
fs
and
or
and
jle
imul
adc
xchg
dec
fimuls
dec
push
mov
movl
inc
xchg
stc
mov
adc
leave
repnz
dec
adc
sub
xor
sub
dec
cmp
out
jae
cltd
jmp
pop
sub
dec
sub
test
icebp
sub
or
movsb
cltd
rcrb
dec
jp
std
jo
loope
mov
mov
mov
stos
cltd
mov
stos
adc
xchg
jge
and
cmp
lock
pop
jns
loop
xor
divb
addr16
and
pop
fsubrl
pop
iret
push
dec
sub
xor
scas
pushf
mov
sub
enter
shl
sahf
insb
stos
pop
outsb
mov
ret
in
and
dec
push
and
mov
bound
into
data16
xchg
adc
dec
push
or
mov
cmp
fs
add
test
pop
and
adc
stos
sbb
jne
aaa
pop
pop
jmp
test
mov
push
push
xchg
enter
cmovnp
push
nop
adcl
dec
mov
xor
mov
cld
cmp
outsl
cmp
sub
jns
jle
and
inc
pop
or
in
pusha
aad
pop
or
testb
pop
mov
jae
jo
push
adc
sbb
dec
push
out
shll
nop
push
movsb
ds
inc
sub
daa
lea
dec
mov
test
cmp
push
adc
add
enter
mov
jnp
sti
mov
inc
adc
pop
mov
nop
and
push
and
inc
aas
leave
lea
repnz
add
cmp
hlt
loope
stos
test
jg
es
adc
repnz
or
pop
mov
bnd
movsb
dec
in
inc
fs
and
pop
and
lds
adc
test
sbb
sbb
ret
fistpl
xor
addr16
xchg
or
adc
movb
add
cmp
and
or
add
je
jmp
xchg
jnp
push
jp
xchg
add
sub
aas
cmp
push
roll
es
addl
push
nop
push
adc
lcall
or
add
mov
sbb
out
inc
testb
and
cmp
mov
lock
sub
rolb
arpl
or
clc
pop
test
adc
hlt
sahf
adc
xlat
cmp
mov
sub
dec
out
enter
cmc
xor
or
jnp
or
pop
sub
push
shlb
rclb
adc
xor
rorb
xor
pop
adc
mov
adc
in
xchg
adc
lods
add
dec
sbb
inc
leave
and
lds
sub
sahf
push
push
lods
daa
into
fisubrs
dec
sbb
dec
mov
movsb
or
or
push
aaa
ds
xchg
inc
mov
ret
and
shl
dec
rolb
or
or
push
or
in
repz
push
inc
pop
test
insb
mov
and
jmp
and
jne
add
add
cmp
jne
ficoms
out
xchg
pop
clc
cmpsb
popl
mov
dec
lods
xchg
or
fcomps
jmp
mov
adc
das
mov
cmp
movsb
lea
sub
pop
or
dec
jne
cli
mov
ljmp
nop
cs
and
test
add
dec
ljmp
adc
aas
push
push
test
xor
adc
mov
sbb
lock
mov
jle
pop
and
mov
add
aam
or
sub
adc
dec
cltd
pop
inc
loop
adc
in
loopne
mov
bound
iret
lock
sar
cmp
icebp
fucomip
adc
mov
inc
or
inc
in
fs
cmpsl
ficoml
cmp
dec
push
adc
into
and
fadds
fmuls
or
add
outsl
and
jmp
xor
push
mov
jle
sub
push
push
js
xchg
adc
push
int3
int
enter
xor
inc
inc
and
adc
les
shlb
xchg
out
nop
lea
xor
pop
sub
mov
arpl
pop
xchg
inc
xchg
sub
mov
cmp
popa
inc
aam
loope
add
inc
in
dec
pushf
dec
sti
fs
std
xchg
test
fcoms
rcr
ss
lret
push
and
inc
cmp
adc
stos
mov
dec
daa
inc
push
cmp
insl
aad
movsl
mov
int3
or
lock
dec
mov
mov
and
std
sarl
and
adc
ds
or
add
mov
xchg
sub
and
gs
cmp
aaa
pop
mov
push
jmp
in
or
ret
clc
pmuludq
cmp
daa
cmpb
cmpsl
std
push
das
pop
daa
xlat
inc
fs
pop
and
xchg
je
dec
hlt
movsb
gs
aam
xor
sbb
subb
in
dec
sbbl
ljmp
sbbb
lock
sub
in
pop
stc
dec
adc
push
mov
sub
push
out
cltd
xlat
or
sbbb
aas
mov
add
sbb
ja
int3
sti
sub
adc
push
push
out
or
mov
and
pop
lock
xchg
jae
je
aaa
stos
xlat
mov
test
lahf
cmp
das
mov
lock
xchg
xor
jns
jle
mov
inc
add
enter
jno
andb
mov
int3
and
mov
add
ljmp
or
dec
and
jecxz
dec
sarl
jb
test
dec
pop
mov
and
int3
lock
test
push
sti
pop
leave
clc
jb
aaa
cs
push
sbb
mov
mov
sub
push
mov
enter
dec
rcrb
call
mov
sarl
cmp
rcrb
in
loope
outsl
jno
jmp
sub
pop
mov
test
pop
fcompl
rcr
decb
or
mov
es
xchg
in
sti
jmp
sahf
jo
or
mov
sbb
dec
rcr
dec
imul
adc
sub
loope
sub
jb
push
pop
push
pushf
dec
sbb
mov
mov
xor
rolb
lock
das
mov
sub
sub
es
adc
adc
popf
shlb
loop
jae
testl
ficomps
nop
lods
xor
xchg
movsl
mov
fstps
inc
lret
iret
adc
inc
cmpl
je
sub
adc
and
sub
mov
enter
lock
shll
or
push
fcmovne
imul
imul
xchg
movsl
pop
and
sbb
jo
arpl
addb
inc
das
jo
sbb
pop
adc
push
out
fnstenv
inc
test
mov
inc
jl
test
mov
or
mov
mov
jae
inc
inc
push
nop
mov
jb
adc
dec
adc
test
sbb
adc
xchg
lahf
insb
mov
adc
adcb
rorb
push
or
sub
and
andb
mov
std
ucomiss
cmp
repz
gs
nop
mov
pop
loopne
cltd
pop
sbb
dec
mov
in
push
sub
dec
or
test
cmp
mov
testb
add
cmp
and
test
mov
jns
andb
jb
xchg
pop
and
add
add
or
or
lcall
mov
cmp
or
push
adcl
add
dec
dec
icebp
jp
inc
add
test
cmp
or
call
movsb
push
mov
cmpsl
jp
imul
inc
aam
lahf
pop
mov
fldenv
sbb
scas
or
pop
scas
dec
adc
cmpl
or
outsb
stc
arpl
dec
or
pushf
dec
mov
xchg
push
mov
and
xchg
pop
in
or
out
mov
sub
test
int3
aad
out
xchg
jno
fists
jae
aam
movl
lcall
sub
xchg
and
imulb
jmp
movsb
adc
daa
adcl
adc
arpl
xorb
les
fmull
sub
cmp
inc
js
inc
add
sbb
push
adc
xchg
push
pop
sbb
and
es
mov
xchg
loope
loopne
ds
inc
pop
test
adc
notb
push
mov
jg
test
daa
xchg
movsb
or
adcb
xor
int
out
shr
dec
and
cwtl
mov
sbb
xor
scas
xchg
or
out
adc
jb
push
mov
jne
inc
mov
dec
and
hlt
add
add
xchg
jae
xchg
and
xchg
outsl
pop
xor
and
in
mov
pop
jns
lahf
xchg
xor
stos
hlt
out
inc
pushf
inc
movb
aad
leave
xchg
jp
xor
push
mov
test
sbb
or
aas
shll
xor
movswl
or
fsubs
and
cmp
adc
jge
int3
push
and
cmpsb
jmp
aas
push
je
mov
jge
out
xchg
xor
jb
scas
pushf
xor
mov
or
sub
xor
pop
add
sbb
sub
inc
js
push
push
addr16
adc
dec
xlat
enter
or
test
into
mov
cmpsl
jnp
sbb
or
jne
jnp
push
in
cmp
jp
jae
imul
movl
push
fidivrs
adcb
xor
sub
xor
lock
mov
test
xchg
cld
dec
movsl
jl
inc
jmp
pop
dec
sub
push
sti
into
xor
jecxz
jno
int3
std
cmp
or
jge
rcll
dec
or
cwtd
dec
roll
mov
pop
jge
xlat
cs
das
cmp
and
cmp
adc
inc
cmpsl
xchg
sub
fs
scas
mov
lock
mov
into
jno
inc
mov
int
popf
idivl
jg
popa
adc
stos
cmp
jns
xchg
or
repz
dec
sbb
adc
iret
mov
sub
fs
popf
stc
mov
faddl
clc
xchg
aas
nop
lock
fs
bound
gs
shll
ffree
mov
inc
or
push
sbb
pusha
divl
jle
or
lea
movsl
pop
or
dec
add
repnz
mov
inc
dec
dec
or
aam
js
enter
cmpsl
in
js
mov
and
gs
pop
lret
jecxz
data16
xor
roll
sar
or
ret
loopne
daa
stos
imul
adcb
xor
xor
dec
cmp
inc
stos
xchg
dec
and
sbb
test
mov
dec
movsl
or
or
inc
nop
inc
sbb
cmp
xor
orb
es
jge
mov
fldenv
test
and
mov
xchg
jno
mov
xchg
lock
push
push
scas
loop
inc
and
pop
mov
mov
mov
movb
bound
cli
or
cwtl
xchg
jp
xor
lea
mov
aam
clc
movsb
imul
sbb
push
and
dec
mov
cmp
mov
dec
clc
outsl
inc
mull
sub
pop
bound
sub
lahf
or
out
push
add
test
ficompl
mov
push
push
sub
mov
neg
fsts
leave
pop
inc
fmull
jmp
mov
dec
cltd
ret
daa
pop
or
xor
cwtl
lock
mov
xor
lods
pop
sub
sbb
dec
xchg
ret
push
hlt
sbb
sub
cli
into
dec
pop
scas
xor
push
gs
js
das
adc
fists
adc
test
pop
jo
mov
mov
fcomps
test
mov
and
notl
lahf
inc
movsb
mov
les
push
and
mov
les
adc
inc
jecxz
xchg
addr16
sahf
aas
inc
mov
fsubrs
or
cmpsl
inc
movsl
cld
xchg
bound
xor
mov
dec
out
xchg
push
lock
fwait
andb
shrl
into
lock
cld
mov
dec
loope
xchg
cmp
pop
cld
pop
lock
test
arpl
inc
dec
call
cmc
js
int
out
sub
je
stos
sbbb
adc
mov
fdivl
pop
in
das
les
pop
adc
sbb
mov
adc
cmpsb
fmuls
fdivl
push
cwtl
in
and
fmull
xlat
stos
pop
negb
and
push
xor
xchg
pusha
mov
inc
lock
sub
pop
jnp
inc
jmp
xor
mov
sbb
aaa
cmc
clc
stos
or
jne
les
sub
andl
and
xor
insb
ljmp
and
dec
or
push
jle
scas
mov
jnp
mov
inc
lds
lret
faddp
nop
push
lods
mulb
or
or
in
fdivrl
sub
and
inc
xorb
in
cs
hlt
mov
fsubl
out
jns
fsubrs
imul
in
mov
jo
sub
icebp
inc
imul
cmpsl
cmpl
inc
mov
dec
xchg
dec
inc
xchg
adc
fsubrs
dec
int3
mov
xchg
xor
sbb
hlt
push
mov
sub
sti
jle
dec
fisubl
xchg
jmp
xor
xchg
xchg
cmp
dec
push
cld
ret
xlat
lret
shrb
mov
cs
push
mov
ljmp
inc
mov
pop
stos
push
mov
decb
mov
pop
mov
xchg
mov
cmc
inc
icebp
shl
mov
mov
inc
push
sbb
xchg
fstps
sub
push
clc
rclb
jmp
popa
shrb
mov
add
shl
nop
out
in
xchg
inc
shl
mov
pushf
push
shll
aam
jle
inc
xchg
clc
mov
mov
inc
push
inc
cmp
in
dec
sbb
ret
xchg
dec
add
xor
and
test
shll
enter
sahf
pop
fnstenv
cs
add
imul
cmp
je
stc
inc
pop
scas
cmp
jmp
pop
das
imul
js
xchg
add
mov
negl
jmp
xchg
lock
je
out
push
adc
xchg
jge
mov
movsb
decl
or
sbb
add
movsl
and
call
xchg
push
mov
iret
mov
jb
gs
divl
or
sbb
iret
push
rclb
mov
imul
lods
and
jge
push
cld
xor
inc
sub
and
dec
xchg
pop
mov
out
cmp
lret
jo
sub
and
mov
sub
mov
es
je
or
stc
adc
lods
jmp
pushf
xchg
inc
sbb
or
cmpl
dec
orb
mov
and
mov
loop
sbb
jecxz
test
push
adc
jmp
sarb
push
adc
movsl
jae
push
mov
lahf
test
imul
mov
adc
test
jnp
scas
inc
cmpsb
rolb
test
lret
clc
fs
push
adc
add
call
cmp
cmp
sbb
stos
repnz
xor
sub
sub
pop
pop
decb
add
push
or
or
sub
sbb
jae
cmp
push
and
and
add
xor
and
add
mov
jb
xchg
sbb
or
pop
mov
lock
idivl
dec
out
and
enter
or
fcomps
es
mov
inc
jmp
push
mov
push
sub
adc
add
push
xchg
adc
xchg
mov
inc
jecxz
adc
push
pop
cmp
push
popf
fucomi
icebp
movsb
pop
in
fsubrs
addr16
add
inc
ret
adc
lret
enter
push
push
push
cmp
mov
pop
and
push
loop
dec
push
stc
out
mov
jg
inc
call
sbb
mov
sti
negb
cmpsb
arpl
push
movsl
sbb
jmp
mov
xchg
iret
lock
dec
inc
jmp
add
imul
mov
adc
or
scas
mov
sub
sbb
jmp
sub
xchg
sbb
mov
push
push
jle
mov
inc
jae
test
repnz
mov
fincstp
outsl
dec
push
pop
lods
jg
fdivrp
or
mov
daa
ret
icebp
fsubl
bswap
push
xchg
ret
leave
jge
jns
jp
movsb
jno
adc
mov
or
enter
sbb
testb
jl
adc
cli
mov
inc
add
cli
dec
subl
test
movsb
out
orl
dec
pop
xor
or
jmp
xchg
adc
sub
test
and
adc
jle
int3
and
and
cmp
inc
jl
pop
fs
pop
mov
sbb
xchg
imul
push
inc
or
test
dec
pop
imul
add
add
icebp
sbb
ret
gs
sete
call
jno
jne
xchg
sub
sub
xchg
and
test
push
cld
pop
xor
ret
sub
xor
dec
xorb
push
push
pop
and
add
pop
dec
cmp
push
xor
mov
xor
stos
inc
and
imul
push
xchg
and
cld
ss
mov
xor
enter
xchg
loopne
mov
std
out
adc
adc
push
cs
jbe
jns
loope
ret
imulb
sub
or
xchg
cmp
push
push
mov
adc
insb
xor
outsb
stc
in
xchg
int
mov
filds
dec
push
pop
cmp
or
leave
lds
test
adc
and
gs
out
cmp
insb
mov
push
push
ss
adc
add
sub
shlb
pop
je
loop
leave
nop
push
add
and
icebp
sbb
sbb
stc
mov
and
cmpsl
push
sbb
aaa
insl
loop
inc
dec
pusha
xchg
mov
add
dec
loopne
hlt
cmp
or
lret
dec
push
outsl
daa
xchg
or
les
lods
ret
adc
sarb
shll
cwtl
add
ljmp
lock
enter
ds
sbb
scas
and
movsl
jmp
leave
jl
stc
cmp
xor
gs
push
mov
adc
pop
mov
adc
push
mov
lret
movl
push
lahf
movsl
push
pop
and
or
xor
mov
xchg
and
or
adc
enter
sbb
lret
push
push
dec
pop
jmp
pusha
or
test
mov
dec
inc
xchg
adc
push
mov
mov
xchg
bnd
js
adc
pop
test
mov
pop
adc
dec
push
insb
cmp
sub
xchg
aaa
sarl
cmpb
xchg
xchg
test
push
lret
adc
ja
xor
and
insb
test
lahf
push
add
and
cmp
xchg
fldt
xor
sbb
xor
imul
ret
pop
and
mov
mov
adc
fcompl
push
cmp
mov
push
jge
stc
pop
jp
test
sbb
js
addr16
nop
cli
pop
and
pop
bound
pushf
or
xchg
mov
pop
xchg
mov
inc
dec
clc
and
xchg
rclb
adc
dec
inc
les
pop
sti
mov
pop
popf
xchg
xchg
ja
andnps
push
testl
push
push
sbb
or
xor
das
dec
sbb
orb
jmp
js
xlat
inc
fadd
clc
sub
aaa
sbb
mov
pop
gs
and
inc
pop
xor
sub
xor
and
test
fstpt
mov
adc
sub
scas
xchg
or
mov
cmp
jbe
loope
dec
jg
jmp
scas
mov
bound
sub
push
imul
sbb
inc
adc
loop
or
lret
insb
call
pop
int3
mov
sbb
negb
mov
nop
dec
loopne
xor
pop
inc
setb
mov
sbb
mov
adc
bound
sub
sub
out
inc
loop
sub
pop
aas
adc
in
scas
lret
lret
and
out
lea
adc
daa
loopne
jne
pop
sub
xor
dec
cmp
jle
lds
cmp
int3
push
push
stos
movsb
hlt
push
dec
insl
aad
outsl
push
or
mov
loop
sbb
xchg
scas
lret
andb
mov
xchg
xchg
jle
push
xor
and
shl
add
fidivrs
dec
scas
lea
jns
add
sub
jno
jecxz
mov
dec
mov
ljmp
mov
xchg
jl
daa
sbb
cmp
jp
dec
outsl
shr
pusha
push
push
and
pop
or
inc
push
mov
cmp
push
jae
jmp
pop
dec
push
aad
or
dec
inc
or
imulb
sbb
pop
mov
les
leave
sbb
orb
push
sub
lret
stc
adc
fs
and
push
sub
mov
push
cmp
loopne
jnp
jns
nop
xor
mov
or
out
and
lock
dec
rcr
popf
loope
test
or
jno
jnp
or
dec
sbb
fistpl
pop
xchg
in
push
adc
imul
repz
rolb
test
mov
in
jge
push
repz
mov
or
push
jmp
sbb
mov
inc
pusha
subl
adc
adc
or
add
int
cltd
dec
in
inc
imul
fmuls
lea
fbld
sub
add
jmp
outsb
add
loop
add
les
stos
and
stos
enter
test
xchg
in
push
dec
xchg
lods
dec
mov
test
inc
inc
jl
mov
inc
dec
ljmp
test
jnp
mov
das
or
inc
mov
inc
cmpsl
test
aaa
mov
and
sub
subb
test
mov
idiv
push
dec
add
mov
rorb
lcall
add
call
push
push
out
mov
dec
aam
rcr
movsb
pop
scas
call
stc
push
cmp
fdivrs
mov
adc
jmp
orl
add
jmp
loopne
repz
and
push
je
lret
adc
ret
or
in
adc
or
pop
pop
mov
rcrb
lock
fucomi
mov
stc
incl
xor
cmp
sub
mov
sbb
push
lock
stos
mov
lahf
adc
scas
notl
movl
fmull
pushf
nop
xor
call
fcoml
hlt
mov
test
dec
test
and
sbb
xchg
add
push
push
jecxz
dec
xor
fsubs
sbb
sarb
inc
cmp
sarl
jge
xchg
dec
mov
leave
push
add
push
sti
clc
shlb
fstl
jb
in
sub
mov
jo
imul
and
ret
ds
sahf
dec
dec
adc
clc
into
aaa
adc
inc
push
adc
xchg
inc
dec
adc
test
add
add
sub
push
adc
xor
jmp
fists
jmp
dec
or
xlat
adc
xchg
pop
xor
cmp
jle
cmc
hlt
mov
shrb
pop
jmp
jle
jp
leave
fstl
or
inc
shlb
test
jecxz
and
inc
cmp
nop
xor
into
push
or
adc
push
adc
inc
cltd
sub
sub
adc
rcrl
loopne
clc
inc
sub
adc
lods
ja
adc
aas
repz
adc
fcomip
leave
xlat
icebp
adc
aaa
mov
adc
or
xchg
ss
mov
cmc
vpunpckldq
in
inc
js
ret
mov
imul
xor
fxch
sti
fidivl
pop
pop
push
mull
lahf
jle
pop
call
xchg
dec
loop
sar
out
dec
lods
jle
scas
cmp
pxor
insb
cmc
popa
xchg
loop
and
sbb
inc
xor
out
jg
out
sub
and
mov
js
inc
and
cmp
sub
or
popf
repz
out
fsubs
or
push
sbb
adc
aaa
loopne
and
dec
push
daa
or
das
rorl
add
in
movsb
stc
out
adc
lock
sbb
or
or
sub
ss
mov
das
add
loopne
repz
adc
stc
mov
sbb
pop
sub
push
mov
sub
mov
lods
mov
nop
mov
aam
push
pop
loope
dec
pop
add
xor
cwtl
xchg
xchg
pop
xchg
mov
mov
dec
sbb
shll
sub
lret
adc
and
loope
mov
fsubl
and
orps
xchg
xor
call
sub
ss
push
bound
imul
xchg
je
xchg
xchg
or
dec
mov
adc
gs
or
pop
add
cmp
or
sub
inc
and
add
lea
jnp
sti
repz
and
sub
daa
inc
sbb
notl
xor
out
add
fucomip
adc
adc
push
mov
mov
mov
test
rcrl
je
jno
cmp
in
dec
lret
mov
not
daa
pushf
xor
dec
pop
pop
cs
dec
cmp
imull
sub
dec
out
test
ret
mov
dec
clc
jge
and
test
das
pop
adc
inc
jp
in
push
lea
shll
jne
mov
seto
pop
jp
sub
and
and
adc
cmp
or
inc
push
movsl
and
mov
and
push
les
lods
push
out
inc
ja
bt
inc
les
or
pushf
xchg
cltd
ret
mull
ljmp
in
push
insb
adc
add
inc
pop
cs
adc
xchg
jns
adc
mov
and
icebp
dec
sub
ret
movsb
scas
lret
mov
loopne
das
das
push
clc
jae
xchg
nop
stos
lret
adc
pop
stos
cmp
xor
jb
pop
push
inc
call
adc
subb
stos
mov
or
cmp
testl
loop
jno
in
std
imul
into
add
sbb
inc
sbb
lea
push
std
inc
mov
int3
lcall
xchg
sbb
inc
inc
add
cmpsb
cwtl
lea
add
add
xchg
ret
imul
clc
push
xor
add
test
mov
sub
sbb
call
mov
xor
push
sti
lcall
aam
adc
push
imul
aam
jle
lahf
push
data16
jmp
mov
bound
or
jg
hlt
adc
or
adc
sbbb
sub
cmp
and
cli
cmpsb
ss
enter
mov
and
dec
cmpsl
mov
cmp
fisubl
push
dec
in
mov
repz
pop
pop
jge
nop
push
sub
pop
push
or
pop
aaa
jmp
xchg
repz
lea
and
sbb
lahf
pop
cmpsl
call
scas
inc
jp
or
subb
sub
push
jns
es
cmpsl
mov
mov
jmp
pop
dec
and
adc
rorl
inc
or
mov
add
ljmp
iret
neg
imul
lea
xorl
das
sub
dec
push
or
xchg
pop
add
fldenv
pop
sbb
inc
adc
adc
and
push
loop
sbb
mov
test
or
add
sbb
fdivrl
loopne
in
jmp
adc
jecxz
test
iret
mov
mov
sbb
scas
or
sub
imulb
adc
xchg
dec
dec
pop
cmp
into
xor
rclb
adc
xor
cld
sbb
dec
and
cmp
fists
hlt
lahf
and
incl
push
clc
lods
mov
imul
popa
loopne
inc
jo
push
push
push
enter
inc
mov
jae
xchg
aad
outsb
pop
stos
gs
mov
jbe
inc
mov
outsl
mov
cli
shufps
clc
sbb
cmp
daa
movb
movsl
aaa
frstor
lock
outsb
push
stos
int
mov
cmp
push
in
call
aam
loop
addr16
lret
add
gs
jnp
test
xchg
jne
sahf
mov
lods
pop
adc
in
jl
cmovne
push
inc
mov
aad
mov
sub
push
arpl
popf
scas
sub
jmp
inc
sbb
leave
sub
add
dec
jne
push
loopne
sbb
push
iret
xchg
sbb
xor
pushf
xor
int
xor
pop
test
fstl
clc
insb
stc
mov
out
roll
popf
xchg
inc
and
or
xchg
push
inc
test
and
test
or
xchg
je
sub
dec
andl
cmpb
es
test
sub
cmpl
and
xchg
inc
in
test
adcb
and
js
xchg
stc
cmp
loop
mov
xchg
pop
enter
loopne
jle
dec
addr16
push
out
sub
dec
sub
push
add
mov
push
push
popa
cs
add
jne
xor
xlat
push
jg
adc
xchg
jbe
dec
loope
cmpsl
cwtl
mov
push
lock
in
push
mov
aaa
inc
dec
jo
adc
out
mov
imul
adc
or
aam
cltd
pop
inc
mov
pop
outsb
or
add
push
cli
xor
inc
dec
pop
cltd
mov
and
xchg
scas
and
mov
adc
add
mov
mov
rcrl
ljmp
sbb
push
sbb
xchg
test
sahf
pop
adc
add
cwtl
and
int
imul
push
loope
je
and
jo
mov
pop
fidivrl
xlat
push
ja
out
inc
push
mov
ret
add
mov
push
adc
or
push
xchg
pop
sbb
je
js
nop
jo
pop
jg
inc
mov
jl
cmpsb
mov
gs
imul
push
movl
dec
sbb
in
inc
or
and
ficoml
rolb
inc
adc
push
inc
inc
shrb
and
imul
ja
push
pop
sbb
nop
dec
test
pop
mov
stc
mov
std
adc
std
mov
xchg
jecxz
inc
push
pop
mov
es
neg
pop
xchg
adc
pop
aad
repnz
call
pop
call
orb
pop
bound
out
mov
in
sbb
add
das
repz
dec
add
inc
xchg
hlt
lcall
mov
addr16
xor
push
out
dec
stos
pop
arpl
imul
test
mov
decb
int3
sti
fcmovnbe
xchg
std
adc
das
mov
push
push
sarl
ljmp
push
vmovsldup
mov
push
bound
mov
adc
dec
xlat
aas
fsubp
aad
adc
loop
dec
mov
stc
jbe
push
push
mov
call
add
out
mov
add
dec
hlt
das
cli
adc
ja
mov
and
or
jg
add
add
add
hlt
push
push
xchg
call
out
leave
fcomp
inc
add
in
cmp
pusha
hlt
data16
and
aaa
dec
or
das
jae
jmp
adc
push
jne
pop
movsl
jnp
mov
dec
xor
and
mov
add
out
inc
cmpl
aam
leave
sbb
xlat
daa
mov
ret
jns
and
fistl
imul
adc
jo
pop
sbb
leave
jne
jno
inc
lahf
xchg
mov
ret
sahf
push
mov
and
and
jmp
sbb
sub
push
loop
dec
push
ret
adc
jge
notb
dec
add
jg
icebp
sbb
jmp
or
sbb
test
sbb
ljmp
lds
xchg
in
sub
icebp
rclb
mov
pop
cmp
dec
add
xchg
aaa
rclb
mov
xchg
jnp
dec
in
or
push
cmpsl
nop
movsl
jecxz
dec
mov
mov
push
test
xchg
mov
adc
lret
addb
sahf
fst
cwtl
jmp
xlat
in
adc
aad
or
imul
mov
inc
in
push
shrb
mov
mov
jne
xor
dec
mov
lods
orb
loop
test
sarl
pop
adc
sub
popf
notb
mov
add
push
xlat
enter
ror
stos
inc
outsl
xor
sub
push
and
push
and
cld
jge
cmp
sbb
inc
loop
adc
xchg
adc
inc
inc
sbb
sbb
inc
xor
enter
sub
sub
loop
enter
iret
adc
xor
out
loop
mov
jl
gs
or
js
fistpl
call
shr
int
cmp
cmp
repz
pop
inc
adc
lahf
jbe
lods
pusha
dec
add
jmp
js
xor
fs
fs
fnstcw
in
out
xor
cmp
mov
pop
popf
xchg
nop
xchg
in
push
mov
push
add
or
jo
jmp
push
sub
aam
cli
and
push
rorl
xor
cwtl
adc
adc
shll
cmp
mov
push
inc
adc
cld
jp
into
sub
fidivrs
or
fcomip
lahf
mov
lahf
or
add
pop
lds
sub
inc
adc
loop
xchg
test
cs
inc
popf
fdivrl
out
insl
clc
mov
jbe
or
dec
ffreep
movlps
movsl
mov
or
push
lret
and
pop
repnz
test
push
inc
push
dec
adc
cmp
stos
sub
cltd
outsl
pop
push
in
dec
ficoms
mov
imul
rcrl
mov
xchg
jg
push
and
cmc
mov
in
mov
sahf
leave
jne
adc
orl
popf
or
sti
pop
jecxz
jmp
lea
and
fs
push
mov
jecxz
mov
outsl
pusha
ds
add
lea
inc
add
adc
lcall
inc
cwtl
xor
decb
leave
pop
and
cs
idivl
pop
or
xor
js
enter
cld
data16
je
xor
mov
xor
push
cmc
lods
jg
mov
leave
or
hlt
xchg
pop
loopne
shlb
mov
test
test
into
push
pop
clc
sub
mov
in
mov
data16
mov
push
mov
shlb
cmp
or
cmp
mov
and
pusha
mov
out
nop
add
xor
inc
and
rorl
inc
insb
or
inc
loopne
lea
shr
inc
pop
jo
xorb
lock
nop
mov
faddl
push
dec
push
ljmp
imul
daa
inc
mov
and
cmp
daa
cmp
mov
sub
push
lahf
mov
xor
cmc
sbb
adc
xor
test
insb
mov
or
lods
or
insl
fldl
add
js
pushf
fs
or
sub
xor
sarl
dec
popa
jp
push
adc
add
jae
jbe
mov
adc
jo
pop
addr16
jb
cmc
pop
push
push
cmp
arpl
fsubrl
imul
adc
lret
push
push
fldenv
push
dec
pop
xorl
jb
xchg
jo
adc
xor
xor
jns
push
outsl
sub
sbb
rclb
repnz
jl
xor
cmpb
jne
mov
xchg
push
add
inc
adc
add
leave
fwait
enter
je
popf
xchg
fsubrs
or
popf
imul
jne
mov
or
ret
clc
pop
mov
ret
test
cli
mov
jnp
insb
std
add
sbbb
je
jb
push
cmpl
jne
out
mov
pushf
mov
inc
je
and
mov
mov
or
repz
and
or
or
jns
add
je
inc
out
hlt
pushf
adc
cmpsl
inc
and
jmp
pop
sub
adc
pop
xor
add
sti
sbb
inc
inc
cmc
dec
dec
xchg
sarl
inc
in
or
scas
dec
cli
hlt
pop
cmp
ret
pop
ror
clc
clc
push
sbb
ret
xchg
scas
les
or
inc
pop
mov
adc
dec
or
pop
dec
rolb
adc
stos
sub
dec
shlb
lea
sbb
jbe
jge
and
sub
and
pop
mov
xchg
or
or
dec
mov
dec
cli
push
mov
clc
ja
mov
jecxz
imul
adc
nop
and
dec
jne
inc
push
or
and
or
jb
push
xor
xor
into
int
cltd
cs
adc
sbb
push
icebp
subl
clc
xor
inc
movl
add
int
sbb
xor
inc
and
adc
or
test
mov
or
add
rolb
push
or
add
sub
jb
xorb
adc
lret
rol
jge
xor
jne
sbb
loopne
cmp
push
cmp
add
rorb
push
cmpsl
popa
nop
dec
mov
enter
nop
enter
push
sbb
sbb
and
adc
stc
push
rorb
pop
shrl
iret
jnp
or
clc
pop
imul
jp
in
enter
add
add
or
or
or
or
or
or
and
dec
adc
adc
mov
adc
and
dec
sbb
sbb
add
pop
and
and
and
xor
adc
jp
xchg
or
mov
and
inc
add
or
xchg
and
xor
push
dec
fwait
xchg
lods
and
lock
jg
enter
xor
inc
inc
push
mov
andb
pushf
xchg
stos
and
adc
sti
jo
mov
sub
add
xor
scas
xchg
adc
fiaddl
and
adc
mov
jns
or
xchg
adc
test
enter
cmp
cltd
or
adc
push
and
inc
mov
in
and
inc
adc
xor
adc
xor
inc
adc
cmp
adc
cmp
inc
adc
and
pop
and
sbb
dec
push
inc
sbb
push
in
and
sbb
pop
in
and
sbb
ja
push
adc
imul
pop
arpl
and
adc
and
data16
and
addr16
push
mov
push
jge
inc
add
les
je
adc
sbb
pop
fs
sub
push
shl
cli
xor
inc
adc
cmp
cmpb
scas
lods
movsl
pop
sahf
push
adc
mov
test
fs
mov
pop
push
hlt
xor
clc
xchg
add
or
lret
outsl
add
mov
stc
inc
push
into
repz
rcrl
popf
dec
outsl
pop
xchg
adc
imul
jns
push
or
xchg
dec
clc
shlb
in
pop
in
xchg
jbe
push
inc
in
fdivr
rclb
inc
pop
bound
add
inc
sbb
ljmp
adc
add
gs
or
xor
pop
push
and
cmpb
repz
sub
iret
add
add
adc
xorb
je
repz
mov
mov
mov
imulb
enter
push
cmp
fiaddl
out
cmpsl
or
add
jmp
mov
xor
adc
push
pop
mov
mov
xor
or
stc
pushf
popa
add
push
mov
in
and
xor
xchg
dec
stos
fs
out
cmc
add
mov
pop
lret
jge
or
push
je
fstps
adc
or
lds
std
xchg
idivb
add
jo
or
pushl
nop
mov
mov
dec
sbb
or
or
adc
cmp
cmp
test
inc
jge
pop
cmp
into
loopne
les
xchg
popa
ss
dec
and
sbb
xchg
push
rcr
inc
in
test
or
adc
lods
push
rcrb
out
push
dec
bound
inc
pop
cmp
or
out
adc
js
pushf
push
sbb
mov
insb
jge
popl
push
push
std
lret
inc
pop
xor
and
mov
xor
jno
cs
jg
dec
out
push
fists
add
lods
cmp
or
pop
sti
sub
insl
jge
pop
push
mov
sti
fsubl
psubsw
out
adc
addl
xor
adc
into
stos
mov
cs
stos
xchg
mov
pop
adc
and
push
push
or
js
mov
sahf
xorl
arpl
mov
sbb
ds
and
push
add
pop
dec
cld
cmc
dec
sbb
xlat
dec
hlt
mov
pop
adc
mov
sbb
ret
dec
dec
push
inc
inc
inc
jno
cwtl
loope
inc
shrl
pop
jne
xor
dec
and
mov
rcll
cmp
stc
mov
push
push
cmp
adc
mov
and
and
push
inc
inc
shll
fidivl
pop
fwait
adc
and
icebp
es
lods
adc
adc
sub
mov
or
cmp
movsb
jl
mov
xchg
inc
push
js
and
pop
and
addr16
es
in
push
push
jl
xor
xor
sbb
imul
inc
jno
inc
inc
cmp
sub
dec
insb
or
enter
and
dec
outsl
inc
ja
xlat
mov
pop
insb
rorb
push
and
xchg
and
outsb
testb
mov
mov
loopne
add
inc
or
ds
lock
adc
cmp
negb
inc
int3
js
or
inc
mov
shl
inc
popf
cld
pop
je
cwtl
and
nop
and
add
data16
push
or
sbb
loope
shlb
jl
clc
and
dec
fmuls
adc
inc
daa
or
je
and
test
call
jno
add
adc
xchg
cmpsb
push
int3
or
xor
bound
jg
pop
xchg
add
jne
rcrl
arpl
jae
mov
push
dec
orb
jp
add
or
insb
loope
push
aas
mov
adc
or
adc
and
adc
and
sub
sub
sbb
sub
inc
mulb
cwtl
dec
clc
mov
pop
pushf
mov
sbb
pop
lock
and
cs
xor
out
fs
mov
inc
dec
gs
pop
loop
movsl
push
pop
cmp
call
xchg
or
cld
jnp
and
adc
hlt
inc
adc
and
mov
cmp
fadds
sub
loopne
push
cld
add
sbb
dec
scas
sub
test
dec
sbb
mov
xor
pop
es
bound
mov
jne
fcomps
cmpb
int3
sub
rclb
cwtl
pop
pop
cmp
mov
fadd
push
cli
mov
shr
cltd
add
aam
cmpsl
sbb
addl
push
or
adc
adc
in
or
enter
mov
int3
hlt
adc
dec
inc
jmp
or
call
pop
bound
test
movsb
arpl
je
inc
jge
or
mov
push
mov
adc
push
or
pop
dec
push
push
aaa
sub
push
mov
xor
and
hlt
and
data16
adc
mov
dec
cltd
shrl
lcall
cmpsl
adc
repnz
stc
rcll
xor
inc
sub
jge
mov
pushl
ds
pop
out
adc
push
decl
fsub
dec
sub
xor
ss
or
jo
cwtl
push
jp
jl
aas
adc
gs
pop
sub
add
insl
mov
test
rclb
mov
sbb
xor
mov
adc
dec
xlat
cltd
les
dec
dec
cmp
lods
pop
test
test
shrb
aam
sub
sbb
push
xorb
pop
cld
xchg
inc
stos
adc
mov
fcompl
rolb
clc
xchg
xor
enter
lea
or
adc
xor
mov
pop
fmuls
pop
dec
jns
shlb
imul
pop
es
sub
out
bnd
sub
repz
add
xor
int3
ljmp
movhps
cli
cmpsl
loopne
icebp
lret
xor
insb
lods
adc
nop
inc
gs
jne
insb
je
push
in
mov
push
adc
and
push
sbb
movsb
lahf
aaa
sub
hlt
rol
insb
push
gs
rcrb
inc
sbb
sarb
push
jle
xchg
nop
sbb
mov
mov
dec
incl
imul
mov
repnz
push
lahf
pop
push
and
and
add
cmp
sbb
and
sub
enter
and
and
adc
and
inc
and
fstl
shlb
daa
fstl
mov
push
inc
js
imul
jns
js
gs
jns
out
test
dec
loopne
inc
into
sub
or
jb
mov
add
imul
push
ss
adc
repz
repnz
fs
gs
pop
das
or
add
and
cmpl
inc
push
inc
xor
out
repz
shlb
mov
sub
adc
lcall
enter
lods
dec
or
inc
or
jl
mov
pop
sar
xor
dec
pushf
sub
mov
inc
ret
xor
loop
and
repz
gs
cmp
and
nop
pop
pop
bound
pop
mov
fldl
jae
stos
or
sub
jns
popa
popa
clc
orl
jnp
mov
adc
daa
inc
add
mov
pop
jae
adc
adc
insb
xor
sarl
add
inc
or
mov
or
stc
push
adc
aad
add
mov
jg
shrb
mov
fisttpll
mov
inc
into
push
lods
aaa
sbb
movsl
jg
jnp
es
push
dec
mov
or
in
or
shrl
dec
hlt
sub
sub
popf
jne
ljmp
and
stos
and
dec
or
dec
fistpl
dec
sbb
ret
out
jo
inc
fildll
out
xchg
push
mov
loopne
fisttpl
inc
xlat
shll
sti
pushf
popl
add
inc
repz
add
or
mov
jl
mov
and
push
mov
mov
gs
push
movsb
and
mov
push
pushf
adc
mov
shrb
or
xchg
in
jmp
mov
and
inc
dec
xchg
insl
jecxz
cmp
adc
fcomps
add
fs
push
out
cld
sub
sbb
lea
dec
mov
stos
repz
and
jmp
cmc
push
das
xor
cwtl
sub
push
mov
mov
and
scas
and
xor
mov
adc
loopne
sti
dec
test
inc
inc
loope
mov
push
cld
or
mov
jge
jecxz
add
mov
scas
and
jmp
ret
stos
mov
inc
imul
jl
or
push
test
pop
mov
loop
push
push
dec
xchg
js
ss
test
je
popa
repnz
adc
and
xor
lea
mov
mov
cwtl
cmp
sti
leave
adc
mov
int3
aas
mov
mov
xor
sbb
inc
dec
les
mov
jne
jnp
or
xor
ja
mov
pop
xor
loope
jg
jo
jl
rcrl
pop
adc
jmp
jecxz
sbb
pushf
pushf
pop
dec
imul
mov
adc
fadds
cmpsl
jo
stos
mov
xchg
push
xor
inc
sbb
or
cmp
mov
pop
aam
repnz
in
sbb
sub
jb
aaa
lea
cltd
xchg
je
ja
imul
lock
sub
or
and
rclb
and
shr
leave
dec
movsb
not
jb
add
pusha
add
xchg
add
mov
data16
rol
jmp
hlt
out
aad
pop
and
inc
adc
sti
adc
and
mov
aaa
sbb
repnz
sar
dec
lahf
mov
fimull
jne
jne
icebp
imul
incl
and
sub
inc
aam
push
mov
mov
or
dec
fists
mov
inc
adc
insb
mov
adc
cmovp
nop
inc
outsb
pop
je
sbb
mov
cwtl
jno
iret
and
leave
fimuls
mov
adc
nop
mov
and
inc
dec
ja
inc
sbb
xchg
insl
push
dec
or
sbb
push
adc
mov
repnz
pop
adc
cmp
pop
inc
adc
sbb
add
dec
insl
clc
push
sti
sub
cmp
mov
roll
mov
inc
push
pop
in
fnstenv
add
inc
push
add
xchg
cmp
mov
push
xchg
repz
mov
jp
mov
loop
jne
adc
std
in
mov
cmp
mov
icebp
jbe
hlt
int3
or
dec
out
movsb
xchg
cli
fucomp
add
adc
jg
mov
insb
cmp
js
sub
nop
lods
adc
cwtl
cmp
inc
jb
mov
hlt
push
mov
dec
cli
mov
and
fdivs
adc
in
push
ud0
mov
mov
and
pusha
inc
outsb
js
adc
sbbb
and
add
ret
nop
stos
iret
and
loopne
push
mov
repz
xchg
fs
lahf
sbb
push
rorl
sahf
sub
jl
cltd
inc
cmp
je
lret
out
dec
scas
push
inc
sub
fwait
mov
adc
dec
jmp
out
movsb
cmpsl
adc
inc
cmp
xchg
lahf
sti
movsb
sub
call
xchg
jl
js
inc
dec
bound
push
inc
dec
lods
fidivrs
nop
cmp
jae
xlat
test
jns
adc
divl
xor
test
inc
inc
negl
push
inc
add
sysret
adc
mov
dec
inc
xor
aaa
pop
cmp
cld
adc
pop
mov
ret
cmp
lar
hlt
ss
xchg
jle
je
mov
outsb
sub
cld
aad
push
push
test
adc
js
hlt
inc
pop
adc
popa
cmp
mov
or
popa
xor
inc
adc
inc
add
mov
or
sbb
push
faddl
rcll
cld
sbb
xor
add
push
mov
inc
popa
mov
shlb
dec
or
or
mov
push
cmp
mov
gs
xchg
aad
dec
test
pop
test
nop
repz
pop
xchg
scas
and
add
js
push
repz
fstps
dec
into
and
jp
call
mulb
inc
mov
xchg
pop
out
gs
aaa
pushf
pop
test
mov
push
inc
dec
call
cwtl
das
sub
mov
mov
mov
loopne
sub
test
jns
sub
aas
push
inc
sbb
xor
inc
add
jno
sbb
bswap
lcall
in
lahf
ficoml
mov
icebp
lock
or
mov
int3
or
mov
lret
and
and
xchg
cmp
inc
xor
or
or
daa
add
mov
and
call
out
addl
sub
push
and
in
movsl
cmp
daa
xor
jl
cld
test
add
cld
sub
sbb
add
std
pop
test
mov
cld
imul
dec
ja
add
cmpsl
push
ja
cli
pop
inc
add
mov
jae
dec
lods
repnz
pop
cmpb
aad
jae
adc
jno
and
xor
movlps
xor
adc
cmp
jge
xchg
inc
pop
inc
inc
dec
push
ret
mov
fsubs
js
jo
in
inc
xchg
cmpl
mov
jbe
push
aaa
loopne
xor
xorl
sub
loope
mov
faddl
mov
pop
and
loope
push
in
inc
movb
jnp
push
xor
addb
dec
mov
nop
or
sbb
nop
adc
xor
jne
sub
add
movzbl
dec
fistpl
testl
mov
sub
cmp
push
andnps
and
xchg
std
xor
scas
rcrl
dec
cltd
popa
xor
add
mov
xchg
add
adc
mov
fs
clc
dec
ds
sbb
push
adc
cmp
xchg
in
and
sub
add
push
jno
pop
div
mov
and
xchg
jnp
xor
add
xor
shl
test
mov
cmp
jmp
shll
sahf
jo
push
cld
daa
aas
pop
nop
adc
add
sbb
xchg
call
das
jg
sahf
outsl
outsb
rcll
and
mov
cwtl
lods
loopne
sub
sub
mov
add
add
push
mov
movsl
test
mov
loop
insl
mov
mov
inc
push
popa
aam
jp
fdivs
sub
dec
subl
dec
or
jns
les
fsts
push
daa
sbb
mov
mov
or
fsubs
stc
cli
xor
sub
xor
out
fucom
jns
xchg
incb
mov
subl
fs
dec
dec
and
mov
out
lock
dec
addb
sbb
test
add
fsubrl
push
push
push
pop
dec
test
movl
push
enter
mov
sub
int3
xchg
les
xchg
sbb
pop
mov
mov
ret
je
mov
icebp
jle
aaa
xchg
inc
js
inc
sub
stos
inc
stos
push
push
xchg
and
ja
insb
jl
jge
push
sbb
cmp
dec
das
jle
pop
cmp
lds
fmul
xchg
mov
dec
push
enter
std
mov
jp
and
mov
jmp
aad
nop
xlat
add
jle
addr16
inc
sbb
jge
xchg
fwait
repz
add
push
sbb
jno
dec
fwait
jmp
fcoms
fsubp
adc
mov
mov
push
sub
mov
dec
and
stc
leave
cmc
push
rcl
cmpsl
insl
and
push
out
xchg
and
cwtl
loop
and
js
xchg
and
pushf
dec
sahf
cmp
push
dec
leave
std
jle
gs
sub
and
fdivrs
jp
inc
rol
enter
gs
nop
dec
dec
mov
in
sub
in
dec
fs
mov
das
mov
js
dec
mov
dec
mov
pop
add
movb
daa
dec
cmpsb
test
out
lret
push
cs
xchg
mov
cmovle
lahf
je
fcompl
sub
xor
pop
dec
inc
sti
and
mov
nop
aaa
push
dec
mull
es
loope
lea
not
and
or
or
es
and
pop
lcall
data16
testb
sub
daa
and
fs
adc
xchg
sbb
jp
stc
sbb
sarl
gs
sbb
or
insl
adc
inc
pushl
and
cmp
xchg
push
or
rclb
js
test
clc
mov
mov
xchg
inc
inc
push
push
sbb
jno
push
push
push
cmp
jge
push
push
es
add
nop
inc
mov
andb
sbb
push
and
loop
inc
and
fisubs
and
mov
dec
or
jmp
in
data16
std
enter
jne
or
mov
mov
xor
jb
cmpb
sub
or
jne
insb
out
or
xchg
mov
cmp
or
adc
mov
sbb
sbb
sbb
push
xchg
add
lods
add
sbb
sbb
mov
cmp
addr16
add
dec
in
imul
or
and
xchg
ffree
mov
ss
push
inc
dec
mov
stos
and
dec
sub
push
pop
dec
xchg
pop
pop
xchg
cs
dec
and
dec
adc
pop
dec
dec
into
or
nop
ror
gs
jge
jae
mov
int3
push
nop
ret
daa
in
mov
out
ds
sti
fistpll
enter
inc
int3
and
mov
sbb
fisubs
cmpsl
divl
cwtl
adc
push
mov
mov
dec
add
adc
adc
mov
adc
jecxz
fs
je
fildll
imul
cmp
dec
or
rcl
and
les
cmpl
mov
dec
xor
push
mov
ds
ja
or
inc
sahf
dec
daa
in
mov
push
test
mov
inc
push
jns
cs
es
rcll
dec
add
ljmp
xchg
out
xor
fs
stc
dec
xlat
decb
cmpsb
popf
mov
dec
xchg
xchg
sub
or
adc
fs
mov
dec
adc
mov
rclb
jle
mov
dec
sbbl
in
adc
fistl
pop
stos
adc
push
fsts
add
ds
fadds
push
jns
pop
dec
ljmp
pop
sub
push
cmpl
push
pusha
push
inc
xor
cmp
fisttpll
lea
ja
cmp
sti
sub
push
xchg
faddl
xchg
lock
ficomps
jne
stc
divl
cmpsb
adc
les
pop
addl
mov
xor
xchg
mov
adc
pushf
xchg
or
bound
push
fnstenv
and
cld
test
adc
pop
out
mov
push
pop
sbb
nop
or
pop
xor
pop
out
fstl
out
add
lds
jge
mov
and
push
jb
cld
mov
adc
pop
cmp
jmp
daa
and
fiaddl
pushf
aam
push
test
fs
mov
or
sti
inc
sub
pop
inc
iret
cs
dec
and
mov
in
test
pop
and
push
mov
dec
jne
cmp
cmp
adc
pop
mov
loop
push
sti
xor
testb
pop
push
outsb
sbb
add
push
pop
rcl
out
lret
and
jl
rcrl
dec
sbb
mov
inc
cmp
jno
xchg
or
add
cltd
fidivrl
xchg
pop
mov
or
push
jb
jne
test
daa
lret
fists
movsl
pop
mov
and
pop
test
fs
or
ja
cs
sub
lock
push
in
push
movd
lea
pop
call
adc
dec
nop
mov
test
and
jmp
movsl
push
inc
jmp
jg
imul
or
adc
je
or
mov
add
sub
clc
mov
in
sub
push
jg
xor
sub
mov
sbbb
jg
xor
jmp
in
jno
sbb
or
rcrb
orb
and
xchg
cmc
jge,pn
pop
jmp
lahf
jbe
jp
mov
fildl
sub
push
pop
scas
lret
sbb
fwait
leave
pushl
arpl
cmp
fwait
xchg
popa
or
add
jle
push
push
test
pop
or
shlb
dec
jmp
icebp
rcrb
dec
jge
sarb
inc
inc
or
mov
int
clc
or
xchg
js
inc
iret
dec
push
cmc
bound
cmp
or
sbb
or
mov
add
outsl
xor
faddl
mov
popf
xchg
and
and
inc
pop
mov
inc
add
mov
lods
jmp
test
mov
pop
adc
push
and
jmp
stos
loop
leave
shlb
xchg
fsubr
imul
dec
data16
sahf
fisubrs
mov
hlt
and
cmp
sbb
inc
stos
or
mov
clc
jne
push
jmp
movsb
pop
loope
jae
imul
pop
jg
repz
xchg
jl
test
bound
mov
pop
cmc
xor
cmp
mov
adc
or
pushf
xchg
movsl
cmc
test
scas
call
push
sti
mov
rorl
jl
xor
xor
test
and
mov
daa
and
jl
push
sbb
movl
sub
movsb
enter
fcoms
sbb
cmp
jge
mov
movb
pop
or
jle
and
jmp
push
popa
mov
dec
test
shrl
sarl
adcb
lcall
dec
push
and
jecxz
pushf
fs
and
leave
sbb
adc
jl
mov
xor
pop
test
xchg
imul
dec
rclb
adc
leave
and
push
dec
push
inc
sbb
cld
into
adc
pop
xchg
aam
ret
loop
pop
insl
lahf
dec
mov
jne
pop
cmp
dec
or
push
or
xchg
mov
lods
dec
aad
into
jg
mov
xchg
enter
push
dec
mov
cld
outsl
sar
xor
out
jb
sub
adc
sub
mov
outsl
cmpsb
test
pop
cmp
outsl
mov
rcr
sub
es
and
cli
or
jns
outsb
pop
inc
or
mov
xor
cmp
xor
shll
mov
in
adc
mov
xchg
push
fdivrl
cmpl
stc
mov
rcll
aad
or
in
nop
pop
pop
cmp
sub
sub
lds
repz
jmp
les
dec
inc
shl
mov
adc
adc
lret
and
adc
dec
sub
je
jmp
cmpb
xlat
pushf
xchg
add
and
sub
cmp
sbb
inc
or
push
fcompl
shl
imul
push
inc
or
and
outsl
or
stos
fidivrs
aam
sbb
inc
dec
and
hlt
mov
out
adc
cmp
or
pop
or
dec
jg
cmpsb
and
mov
insb
and
addr16
cld
fisubs
xor
hlt
mov
call
xor
mov
andl
stos
xchg
jb
mov
loopne
adc
and
cwtl
and
pop
pop
push
push
mov
mov
lea
in
nop
and
pop
mov
mov
push
push
adc
in
push
test
add
je
out
mov
inc
push
push
sub
sub
daa
inc
mov
or
loopne
xor
pop
xor
add
xorb
outsl
sub
adc
out
and
inc
popf
bound
mov
dec
cmp
jne
xchg
in
mov
scas
mov
rorb
ja
repz
mov
les
nop
imul
pusha
outsb
pop
test
nop
rclb
or
push
pop
xor
dec
or
movsb
stos
ss
lret
jmp
je
sub
xchg
xor
dec
hlt
dec
mov
sbb
popa
push
and
add
popa
inc
jl
xchg
gs
adc
adc
call
xor
fdivrs
rclb
and
aam
fistpll
notl
pushf
pop
dec
adc
adc
mov
outsb
call
lcall
pop
push
hlt
in
inc
dec
pusha
ljmp
arpl
jl
or
arpl
pop
rcr
in
subb
shl
lahf
push
pop
pop
les
and
lret
pop
adc
or
push
pop
sti
cmp
sbb
inc
pop
adc
pop
mov
in
and
ljmp
mov
lds
mov
and
dec
jne
jge
test
mov
dec
dec
xchg
push
and
xchg
add
mov
pop
rcll
mov
or
lods
cmp
xor
fwait
inc
mov
lods
sbb
or
mov
sub
fucomip
mov
dec
outsl
std
jae
adc
dec
dec
and
adc
push
rolb
mov
in
xor
sub
push
fidivrl
dec
fcompl
xchg
arpl
xorb
jnp
jg
loope
inc
insb
mov
jmp
jne
xor
movsb
cltd
jne
push
or
es
mov
mov
and
sbb
cmpsb
push
cld
cs
sub
dec
and
xchg
dec
xchg
dec
clc
sti
lret
pop
lret
pop
push
in
pop
sub
movsb
lea
push
inc
or
adc
adc
ret
mov
adc
aad
nop
mov
loop
data16
ret
pop
sub
pop
adc
aam
shrl
mov
xchg
xchg
mov
jns
jae
mov
push
test
lods
movsl
mov
jnp
adc
push
cmp
jmp
pop
add
mov
and
pop
cld
and
push
push
repnz
jmp
push
jnp
push
pop
dec
mov
adc
and
mov
lods
inc
movsl
mov
inc
cmp
into
add
push
mov
push
xor
mov
add
mov
or
cld
jae
xchg
das
loop
addr16
fwait
movsl
pop
xchg
rolb
call
cld
jg
sub
test
mov
xchg
jns
mov
mov
xchg
mov
in
rcrb
inc
cwtl
cltd
lock
fxtract
test
ret
push
pushf
push
popf
mov
rclb
loopne
lea
clc
xor
push
inc
push
lds
cmp
jp,pn
xor
push
add
outsb
adc
lret
popa
push
jecxz
std
repz
xchg
add
loopne
aaa
adc
sub
inc
dec
mov
and
sub
sbb
cmp
or
xor
fisttps
or
adc
xor
sbb
push
or
or
inc
adc
and
out
adc
loop
dec
dec
mov
adc
sub
mov
cwtl
movsb
fdivrs
or
cwtl
inc
movb
pop
ret
popa
subl
xchg
jno
add
mov
lea
add
subb
mov
xchg
movb
adc
nop
inc
sbb
mov
xchg
xchg
fldcw
pop
imul
pop
jbe
xchg
das
mov
aaa
orl
cmp
xor
outsl
and
lahf
and
lcall
jns
sbb
dec
jne
insl
jo
inc
push
cmc
sub
clc
sub
pop
xor
pop
test
push
stos
lea
nop
adc
or
mov
sub
pop
lods
ljmp
dec
xlat
push
lods
aaa
dec
push
pushl
sbb
adc
lea
push
and
add
repz
sub
inc
call
lock
xor
mov
dec
mov
test
add
mov
add
ljmp
cmc
adc
xor
daa
jne
aam
mov
call
fldt
shrb
mov
inc
stc
inc
xor
push
push
lock
ja
dec
cmp
or
das
daa
push
pusha
dec
push
clc
xchg
addl
and
das
fists
xchg
insb
add
mov
stos
iret
dec
dec
sbb
xchg
mov
test
dec
add
sbb
and
adc
or
add
or
cmp
dec
push
pop
push
dec
dec
dec
sbb
dec
push
sub
insl
test
add
rorb
fidivrs
push
and
xor
sub
adc
xor
or
push
mov
call
sub
dec
nop
dec
pop
adc
insl
sub
sub
call
sti
cmpb
add
pop
adc
and
jmp
jb
jmp
sbb
cmp
mul
repz
sub
or
jle
loop
insl
gs
mov
mov
insb
out
cld
or
stos
rcr
or
lahf
test
scas
ds
pop
or
push
gs
stc
lea
xchg
imul
lea
mull
adc
sti
popf
je
pop
jae
add
push
pop
aam
scas
sub
push
cmc
outsb
mov
xor
fsubs
andb
inc
sub
cmp
jbe
inc
imul
cld
outsb
int
jmp
mov
pop
mov
loopne
scas
mov
mov
pop
in
test
out
loop
daa
jne
mov
push
addr16
or
and
cmp
inc
xchg
xchg
rorb
test
and
enter
outsl
mov
loop
jo
sub
jae
rclb
inc
aad
test
mov
sbb
sar
push
jo
mov
mov
or
pop
iret
cwtl
testl
and
inc
or
mov
inc
fimuls
lock
inc
sbb
lods
xor
aaa
lea
pause
inc
pop
adc
out
popf
repnz
rcrl
xchg
or
out
mov
mov
int
and
les
scas
sbb
pop
mov
orl
add
cmpsl
shlb
dec
inc
popa
je
or
jb
add
push
add
and
movsl
adc
hlt
cmp
xchg
and
mov
adc
mov
xlat
pop
xchg
xchg
mov
lock
add
std
stc
dec
repz
cmp
pop
sbb
jge
enter
leave
jge
and
mov
adc
pusha
mov
out
add
xorb
jae
shll
pop
dec
scas
xlat
mov
inc
sub
add
enter
in
mov
ret
jbe
data16
jl
cmp
cld
jo
stc
sbb
test
xchg
adc
in
jno
add
clc
imul
xchg
rolb
sub
adc
xor
sbb
insb
push
jmp
jg
cld
add
mov
pop
testb
push
clc
fsts
inc
jbe
sbb
xor
lock
dec
xchg
inc
mov
adc
callw
mov
loopne
loopne
pop
leave
mov
add
cmpsb
or
and
pop
out
je
int3
leave
aam
or
and
adc
repz
int
xor
pop
jne
mov
xlat
mov
xchg
pop
push
mov
or
loopne
cmpsl
lret
xor
xchg
call
jnp
push
push
push
scas
mov
cs
or
loopne
mov
inc
imul
aaa
push
inc
js
jo
inc
roll
cmp
cmp
out
ds
and
pop
mov
inc
dec
popf
adc
xchg
jmp
out
add
lods
xchg
dec
enter
inc
pushf
es
outsl
dec
iret
dec
or
lods
dec
mov
adc
inc
test
mov
mov
jns
leave
ja
pop
icebp
or
inc
pxor
xor
in
mov
movsb
mov
test
push
dec
xor
js
nop
in
js
inc
sbb
nop
mov
sbb
in
and
enter
or
adc
mov
or
xlat
mov
xor
rorb
dec
shlb
or
or
pop
call
loop
test
das
or
call
aas
jae
inc
add
nop
insb
push
push
rclb
xchg
negb
pop
mov
mov
sbb
js
mov
stc
es
aaa
js
pop
lods
divl
nop
jg
cmp
xchg
inc
cmp
lock
pop
shrl
xor
sub
jl
repz
pop
icebp
jp
fcoms
cli
negb
rorb
jg
in
dec
jno
je
xchg
js
cli
int
nop
inc
inc
sub
into
xchg
jecxz
pop
in
lock
repz
lea
out
fcompl
xchg
ja
cmpsb
xor
imul
pop
rcrl
dec
loop
xor
sub
hlt
movsl
leave
inc
jne
repz
jnp
pushl
adc
stc
mov
xor
inc
or
dec
rolb
ljmp
add
jne
xchg
inc
mov
sbb
adc
dec
je
mov
inc
pop
repnz
sub
and
push
jge
les
sub
push
mov
xor
clc
dec
andb
or
jno
push
dec
push
mov
rcrl
jmp
test
test
xor
outsl
jmp
xor
loop,pn
inc
mov
aaa
mov
add
jge
shlb
in
and
outsl
add
xchg
mov
mov
cmp
cld
rol
sub
ljmp
jp
or
cmc
mov
dec
xor
rorb
adc
jmp
repz
and
sub
aad
addr16
adc
pop
push
fdiv
xor
fldt
adc
jge
imul
add
push
loop
insb
xchg
rcrl
mov
and
jle
popf
ficoms
jmp
repnz
scas
sahf
cltd
push
in
pop
and
xchg
push
test
popf
pop
call
lcall
std
in
aam
cmpw
push
jmp
push
mov
jle
std
es
sub
jne
notl
add
ss
xchg
cwtl
jo
andl
or
lds
mov
mov
imulb
inc
test
fucomi
imul
push
mov
je
sti
sub
inc
jge
push
lcall
ret
push
mov
push
sub
cmp
cmpl
pop
jp
mov
or
jnp
inc
adc
mov
push
mov
lret
push
imul
or
inc
testl
les
push
adcl
cmp
adc
cs
lods
das
add
mov
loop
jmp
mov
push
push
movl
add
cltd
xchg
dec
js
xorl
scas
ja
mov
or
lea
adc
pop
repnz
push
stc
enter
jae
push
orl
les
stos
into
xchg
adc
adc
jne
inc
repz
int3
dec
adc
les
xchg
aad
push
mov
xchg
sbb
mov
or
jae
push
dec
inc
test
leave
xor
inc
lock
movsb
mov
or
adc
jae
cmp
cmp
sbb
in
add
jo
jno
popf
movsb
loop
dec
scas
dec
mov
inc
inc
xorb
lret
pusha
inc
dec
jne
adc
popf
xchg
lea
bound
xchg
stos
fadd
inc
cmp
and
inc
mov
popa
in
es
fisubs
iret
fidivl
pop
dec
nop
cmp
lea
fs
bound
dec
lcall
xchg
into
ficoml
cmpb
xor
out
das
pop
inc
gs
aad
call
or
cmp
add
in
test
adc
nop
adc
pop
lods
in
push
fcmove
dec
mov
jle
pop
je
adc
pop
dec
or
ja
mov
sahf
unpcklps
pop
psubusb
pop
in
and
ljmp
inc
mov
mov
aad
mov
lahf
sub
inc
mov
lods
icebp
test
push
inc
fdivs
push
pop
repz
sbb
orb
das
mov
jmp
sbb
out
mov
or
pop
add
bound
inc
mov
aad
loopne
cmp
adc
or
pop
xchg
xor
je
xchg
fists
ficoml
mov
lds
lahf
pop
mov
xor
or
pop
and
sbb
dec
xchg
and
pop
mov
adc
je
jo
push
and
mov
jl
inc
mov
je
dec
pop
repnz
xchg
mov
stos
pop
mov
cmc
nop
mov
sub
test
data16
and
imul
mov
pop
dec
pushf
cmp
jle
loopne
inc
cmp
outsb
iret
adc
lret
cmp
or
fldt
je
sub
sub
mov
inc
push
std
lret
xor
jge
cwtl
mov
jg
mov
mov
call
in
cmp
xchg
and
lret
cmc
movl
adc
pop
push
imul
xchg
bound
xchg
repnz
or
xchg
sti
mov
mov
adc
jno
dec
jb
xchg
popa
and
inc
mov
sub
sti
sub
mov
adc
movsb
mov
jg
inc
mov
push
mov
mov
add
adc
insl
pop
enter
idiv
push
and
pop
inc
cmp
iret
xor
add
jg
dec
mov
pop
lcall
enter
test
leave
adcb
ljmp
js
xchg
xchg
xchg
test
or
jge
cmpsl
adc
mov
inc
adc
dec
jo
pop
int3
mov
jl
inc
popa
mov
outsb
jmp
jg
psubsb
pop
stos
nopl
inc
fwait
lods
es
in
cmp
jae
push
gs
xor
push
adc
dec
push
popf
arpl
dec
outsl
mov
jmp
out
pop
or
and
cwtl
adc
jmp
mov
js
stos
les
mov
adc
pop
sub
sbb
xorl
outsb
or
jge
into
daa
pop
mov
in
add
pop
pop
add
or
dec
inc
pushf
leave
adc
pop
das
push
pop
fs
inc
and
mov
xor
dec
inc
jb
mov
sbb
stos
ficomps
and
imul
cmp
mov
dec
or
shrb
or
jae
cmp
push
xlat
push
sbb
push
leave
dec
push
jne
popa
sbb
inc
movsl
jl
pop
adcb
outsl
sub
inc
xor
and
push
dec
out
inc
xor
inc
fmul
or
mov
aas
inc
cmp
cwtl
or
sbb
bound
dec
stc
or
popf
pop
xor
mov
pop
scas
jl
adc
inc
push
pusha
sbb
cld
popa
lret
sbb
ja
jae
aaa
cltd
adc
dec
jp
mull
popa
js
xor
inc
xor
into
hlt
push
icebp
mov
xor
cmp
sub
push
add
mov
les
cmp
pop
test
scas
test
and
mov
push
xchg
push
xor
or
xchg
cmp
cmp
adc
inc
xchg
js
and
or
mov
pop
adc
and
jge
nop
dec
mov
sbb
jbe
js
xchg
dec
jne
or
mov
sub
dec
inc
pop
jp
mov
sub
cmp
or
jge
or
adc
adc
lds
fs
mov
aas
push
ffreep
push
or
push
pop
popf
cmp
inc
or
adc
mul
shrb
adcl
and
push
data16
and
push
prefetchw
inc
rcrl
call
imul
inc
push
ljmp
int3
inc
std
adc
mov
xor
shlb
dec
dec
shrb
mov
roll
add
ficoml
fstps
cmp
cmpsb
pop
enter
add
hlt
imul
bound
adc
addb
push
or
mov
inc
ljmp
push
or
dec
mov
loopne
sbb
imul
imul
cmpsb
pop
push
push
lods
push
push
gs
or
or
or
pop
jae
mov
xor
mov
adc
pop
add
or
popf
xor
scas
push
or
or
mov
jns
scas
adc
xchg
or
fwait
das
push
cmovg
push
fiadds
push
test
dec
ja
cltd
sub
sbb
add
inc
mov
in
mov
pop
adc
push
jb
pop
ret
sti
or
pop
cmp
jbe
les
sbb
pop
shlb
xor
xor
xchg
sub
pusha
adc
or
xor
or
test
test
gs
mov
mov
dec
movups
mov
adc
push
movsl
test
pop
sub
or
pop
in
adc
push
adc
add
popa
nop
outsb
testl
mov
nop
mov
jns
stc
sub
icebp
stos
inc
sub
xor
sub
adc
dec
jae
push
push
jbe
mov
int
fs
into
mov
inc
cmp
cld
and
cmp
lock
mov
pop
add
cs
scas
repnz
dec
mov
test
adc
cltd
or
xlat
jae
xor
inc
fdivl
mov
les
xchg
add
dec
mov
les
rorb
and
jl
test
mov
adc
dec
lds
int
dec
out
dec
or
addr16
movsb
lret
xor
cwtl
lret
inc
lods
mov
xchg
pop
int3
dec
fs
add
inc
mov
aam
insb
data16
in
and
ds
inc
xbegin
add
in
repnz
movsb
push
sbb
lock
ss
sub
mov
push
in
aam
xchg
sub
div
xor
adc
loopne
adc
daa
loopne
loopne
loopne
mov
sbb
add
popf
and
pop
adc
ror
movhlps
sbb
and
sub
push
push
mov
or
hlt
mov
push
cmc
mov
iret
cmp
add
xchg
out
mov
push
cld
adc
cld
and
adc
sub
cmp
std
outsl
hlt
repnz
call
jge
xchg
std
stc
lods
stc
lods
stc
sar
shrb
ret
ret
int
int3
rep
repz
icebp
push
out
cmp
xor
or
and
insb
and
mov
inc
icebp
add
dec
aam
in
sub
outsl
int3
or
repz
mov
cmp
inc
or
sub
inc
pop
and
addb
push
push
cli
icebp
clc
fwait
mov
adc
sbb
popa
adc
xor
sbb
stc
add
fldl
push
and
pushf
inc
mov
sub
pop
mov
test
pop
in
andb
push
enter
les
inc
lret
or
xor
mov
xchg
mov
mov
int
cwtl
adc
mov
dec
jmp
enter
test
xchg
rolb
adc
xchg
mov
dec
add
sub
cmp
fs
call
out
test
inc
xchg
or
jnp
pop
lretw
push
jg
pop
adc
adc
xchg
and
in
mov
dec
gs
dec
loope
por
fchs
test
and
outsb
or
inc
jo
popa
inc
push
mov
xchg
dec
loope
aam
mov
adc
push
int
aas
imulb
adc
or
sahf
cltd
sub
mov
js
mov
mov
mov
and
mov
xor
xor
xchg
and
leave
dec
push
xor
cmp
hlt
popf
sub
dec
pusha
jnp
dec
pop
push
jns
or
ja
or
cmp
push
sbb
dec
call
out
push
xchg
mov
je
push
push
pop
hlt
and
cmp
and
sub
or
daa
inc
cmp
lcall
lcall
lock
sbb
inc
sub
mov
std
xchg
fucom
sbb
enter
and
add
call
jno
rcll
aas
push
and
pop
movsl
add
aam
in
mov
mov
inc
test
inc
mov
dec
push
sbb
or
push
jge
lods
arpl
lods
push
xchg
rcrb
test
add
pop
xchg
pop
data16
xchg
fiaddl
test
cld
jp
jg
jne
dec
push
das
dec
gs
movsl
jle
and
and
cmp
rolb
jp
out
out
icebp
xchg
shlb
push
cmp
or
movsb
mov
push
aad
pop
loope
xchg
int3
insb
call
or
jge
cs
imul
push
aas
scas
inc
int3
push
and
movsl
sub
jecxz
xor
aas
adc
cmpsl
lret
test
jbe
add
cwtl
jo
pop
sub
movsb
push
fisubrl
mov
cld
aaa
xor
dec
scas
stc
cs
dec
sbb
mov
cmp
jb
shrb
inc
pusha
pop
lcall
addr16
push
jmp
push
and
aaa
xchg
mov
or
xor
push
push
and
js
sbb
adc
addr16
mov
into
ret
pop
dec
mov
dec
pop
fsubl
mov
imul
mov
add
pop
mov
inc
mov
aas
xlat
push
pop
and
rolb
loopw
test
mov
fnstsw
mov
jb
std
in
mov
enter
popa
test
lds
push
lea
mov
inc
rolb
mov
call
ret
cmpsb
mov
cmp
adc
adc
cmp
das
rorl
mov
xchg
into
mov
dec
outsb
les
les
imulb
loopne
dec
or
jbe
addr16
mov
mov
and
aad
nop
je
insl
xchg
aas
and
mov
and
aaa
xchg
clc
xchg
and
jmp
adcl
and
sbb
inc
push
jns
jno
mov
inc
or
cmpsb
pop
imul
inc
stos
repz
nop
and
dec
flds
or
outsl
jns
and
and
popa
jno
dec
flds
mov
fldcw
pop
mov
cwtl
jo
dec
inc
mov
xchg
scas
pop
mulb
call
lahf
lds
dec
je
jle
and
inc
enter
fiaddl
dec
popa
or
xchg
insl
subl
and
jno
lods
js
mov
test
pop
repz
stos
and
xchg
dec
mov
mov
adc
push
mov
push
mov
es
push
jmp
das
push
je
jo
faddl
push
sub
push
push
push
fldl
pop
and
push
les
daa
or
into
push
or
rcll
or
mov
and
daa
push
popa
rorl
clc
je
rcrl
push
and
rcrb
pop
add
adc
roll
fldl
push
pop
add
fstpl
dec
dec
lock
push
push
rorl
nop
sbb
adc
add
dec
mov
jne
inc
dec
mov
or
xor
xchg
add
mov
leave
cmp
or
mov
or
and
push
add
add
dec
movsb
hlt
xchg
mov
hlt
or
stc
push
aam
xchg
aad
and
mov
ljmp
je
or
mov
and
push
gs
das
lea
push
movsb
pop
mov
sbb
pop
push
fstl
dec
or
dec
lahf
and
adc
out
mov
mov
push
out
nop
enter
pop
syscall
movsl
mov
mov
or
or
dec
gs
dec
fcoms
adc
fsubrs
or
push
or
and
insb
test
inc
push
dec
adc
push
or
or
inc
jo
andb
and
mov
pop
adc
loopne
or
mov
xchg
mov
inc
in
inc
clc
cmp
and
stos
setno
les
jne
or
or
je
ret
pop
adc
and
dec
pushl
negb
daa
and
fdivl
loop
cwtl
cmc
stos
jg
and
push
call
rcrb
pop
mov
inc
and
sbb
mov
cmp
mov
call
repz
add
and
sbb
mov
adc
leave
pop
jno
push
or
dec
mov
cld
mov
popf
ja
lods
adc
clc
cmp
hlt
mov
aas
xchg
push
and
and
cmpsb
dec
mov
adc
out
je
sbb
leave
xlat
cmp
or
sahf
or
pop
or
jo
popf
jns
mov
mov
outsb
adc
jge
test
add
mov
sub
ficomps
add
or
push
je
mov
xor
cmp
jne
popf
pop
add
cmp
dec
and
cmp
inc
pop
or
sub
in
dec
jecxz
test
jne
xorl
nop
gs
mov
and
xchg
nop
push
jns
sahf
push
movsl
xor
nop
fists
dec
cmpsl
xchg
sbb
popa
je
mov
xchg
outsb
pusha
out
push
mov
addb
rclb
out
push
cmp
mov
add
xor
inc
or
movsb
xchg
negb
push
cmp
add
inc
add
std
ret
incb
int
fstpt
inc
out
test
inc
or
cmp
mov
xor
sti
out
add
cmp
pop
iret
push
or
sbb
jb
mov
dec
sbb
push
jnp
lds
xchg
shll
or
and
loop
or
push
xor
push
loopne
xor
push
pushl
push
dec
or
popa
xchg
out
mov
dec
jnp
mov
test
sbb
test
stos
mov
add
inc
and
inc
add
adc
or
mov
data16
call
push
cmp
adc
push
dec
and
add
xchg
lds
je
cmp
int3
or
inc
adc
xchg
adc
inc
or
sbb
add
aad
dec
ja
xchg
xchg
fldz
loop
stos
pop
inc
xchg
add
add
mov
jge
ficomps
xchg
pop
stos
into
daa
adc
dec
loope
cmp
mov
test
push
jne
mov
in
inc
xor
add
and
and
inc
nop
sub
dec
idiv
test
stos
cmp
in
insb
pop
jne
push
inc
scas
ret
test
mov
mov
jb
je
push
imul
call
andb
inc
or
mov
dec
or
and
test
div
and
or
sbb
jne
sbb
push
inc
add
and
mov
adc
incl
add
or
lcall
inc
pop
xor
jg
mov
fdivrl
cli
hlt
add
adc
and
cmpsb
xchg
fmuls
or
jmp
mov
cmpb
sbb
pop
cmp
mov
mov
aam
xor
stos
subl
bound
push
mov
pop
ret
jb
or
dec
pop
dec
iret
cmp
clc
cs
add
adc
lods
mov
mov
xor
stos
mov
push
repnz
dec
movsl
paddb
fidivrl
pop
mov
adc
xor
push
hlt
xchg
ret
add
out
inc
insb
enter
jb
dec
add
jno
add
dec
shr
movsb
pop
flds
jecxz
push
pop
add
pusha
out
test
pop
stc
pop
je
xor
inc
mov
sti
dec
jge
xchg
and
nop
cmp
clc
cmpb
push
push
movsb
pop
xchg
xlat
lea
nop
ds
mov
mov
dec
imul
rcll
inc
inc
jp
push
test
jl
xchg
mov
mov
add
jne
pop
and
adc
adc
rorb
loope
lock
mov
inc
clc
out
adc
out
mov
shr
mov
pop
xchg
fcmovnu
and
push
sbb
or
loopne
sub
jmp
mov
cmp
sub
mov
sub
pop
hlt
or
fucomi
xor
and
ficoml
lret
aad
xchg
ret
cli
ja
mov
stc
test
lods
push
mov
fs
xchg
jp
push
mov
in
call
aaa
les
or
sbb
push
jmp
xor
pop
pop
and
fs
jne
push
or
add
inc
adc
pushf
rcrb
ljmp
and
dec
xor
out
fisttpll
and
sarb
push
push
push
ds
mov
orl
push
in
jns
adc
test
inc
mov
inc
test
mov
adc
cwtl
adc
or
inc
pop
pop
es
push
mov
idiv
inc
push
std
inc
or
inc
icebp
jmp
xor
inc
dec
or
dec
dec
cmp
adc
sbb
dec
or
int3
stos
mov
incl
sub
sbb
sub
sbbb
cmp
dec
jge
cmp
or
stos
sti
cmpsl
xchg
push
sub
daa
je
vcmpsd
addl
push
inc
jne
pop
aaa
movsb
adc
lret
push
inc
adc
and
mov
add
jge
cmp
pop
scas
or
sbb
inc
add
jg
and
dec
push
pop
add
shrb
push
out
cmpsb
in
pop
cmp
hlt
jmp
push
or
mov
inc
xor
or
dec
sub
sbb
add
mov
dec
mov
imul
sbb
rcll
adc
dec
icebp
jle
pop
push
mov
inc
sbb
fs
and
push
push
mov
sub
hlt
inc
sub
or
dec
rcll
adc
jge
dec
and
test
jle
dec
cmp
jnp
pop
pushf
push
insb
cmp
inc
movb
in
out
lods
pop
pop
dec
dec
add
in
pop
cmp
je
fmull
cmp
insl
or
xor
pusha
cmp
je
adc
dec
inc
jg
xchg
pop
cmpb
lock
add
je
mov
cmpsl
sbb
inc
adc
sarb
and
push
test
jge
mov
add
adc
andl
and
or
je
pop
inc
sbb
sub
std
repnz
mov
in
enter
mov
adc
je
mov
mov
adc
adc
push
mov
or
cmp
das
je
scas
dec
ljmp
std
mov
mov
call
xor
inc
inc
cmp
int3
xor
mov
sbb
adc
sarb
pop
sbb
dec
andl
add
mov
sbb
sub
xorb
pusha
pop
sti
add
mov
mov
xor
mov
sbb
lods
xchg
mov
lahf
ret
add
and
xchg
jo
mov
mov
inc
cmp
mov
and
push
jno
cs
in
push
push
pop
mov
adc
dec
lea
adc
adc
sub
jns
push
dec
add
mov
aaa
and
push
cmp
fcomp
push
bnd
andl
mov
pop
cwtl
cmp
inc
dec
fidivs
mov
enter
mov
or
sub
add
xor
out
test
or
repnz
mulb
sti
call
sahf
out
mov
mov
ret
mov
adc
push
in
lret
xchg
lret
xchg
addb
xchg
test
icebp
push
mov
xchg
int3
pop
add
pop
xchg
sub
push
lret
xor
inc
or
in
dec
mov
jne
loopne
aad
xor
shlb
dec
bound
add
jmp
xor
inc
or
hlt
jmp
cli
lret
nop
dec
jmp
xor
ljmp
sub
in
push
shr
sub
rcrl
leave
pop
fcomip
or
sub
lods
add
sbb
enter
das
je
adc
push
sbb
cmpsl
or
xorb
cmc
out
faddl
xor
push
mov
jle
fmull
fld
jns
lahf
mov
jg
pop
iret
movsl
pop
push
lea
scas
arpl
cs
out
fcmovnbe
gs
unpcklps
movsl
or
add
enter
xor
add
mov
add
cmp
mov
pop
test
inc
cmp
fists
ds
push
mov
mov
in
test
cmp
lahf
jmp
jg
mov
shll
frstor
imul
push
push
test
mov
adc
insb
or
or
cmp
or
cmc
into
fcoml
push
ret
adc
das
or
xorb
fstpt
xor
jecxz
aam
je
mov
rolw
push
cmp
add
push
call
and
mov
adc
pop
sub
cmp
mov
ss
and
shlb
std
dec
jns
cmp
inc
out
mov
or
testb
jp
mov
call
push
loopne
loopne
ljmp
enter
in
cltd
push
sbb
inc
iret
call
or
lahf
pop
add
in
mov
sub
imul
push
sbb
adc
jns
adc
pop
sbb
sub
sarb
aaa
xchg
jge
jns
jmp
lret
inc
fucomip
mov
outsl
or
lds
cwtl
push
sub
enter
add
test
popf
inc
adc
and
ja
add
and
fs
push
lret
and
inc
pop
into
push
mov
lods
lods
cmp
jge
shl
adc
pushf
incl
lret
cmpsb
push
orb
sahf
stos
mov
test
add
push
mov
aam
ror
lds
bound
ja
inc
sar
push
and
into
and
flds
adc
jle
scas
sub
jle
xchg
and
add
loop
inc
movsl
mov
inc
imul
sarb
fsubrs
jmp
mov
push
pop
mov
std
mov
jmp
decl
out
mov
leave
nop
test
mov
out
js
mov
xchg
mov
jne
push
inc
xchg
rorb
enter
roll
cmpl
nop
rcll
lret
inc
or
movsb
pop
mov
pushw
aad
mov
in
mov
inc
xchg
sbb
adc
and
dec
xchg
leave
rcrb
jg
inc
sbb
mov
fidivl
xchg
decb
add
dec
cmp
push
hlt
pop
test
push
adc
jp
push
hlt
stos
mov
fistps
or
je
or
add
mov
push
lds
in
rclb
add
mov
out
mov
inc
pop
test
mov
xchg
popf
add
loopne
adc
js
lret
mov
xor
add
mov
fsubr
test
mov
xor
mov
mov
add
lock
sahf
adc
dec
cmpsb
out
cltd
call
movsl
imul
rorl
dec
sar
xchg
lea
dec
add
push
scas
push
mov
andl
mov
scas
int
imul
out
dec
add
sbb
xchg
in
and
pop
xor
add
cld
daa
repnz
sbbb
pop
inc
sbb
xor
sub
xchg
push
ret
jns
testb
sub
mov
mov
stos
ljmp
jo
adc
gs
adc
andb
push
jo
and
push
sbb
test
xor
adc
dec
inc
bound
dec
adc
add
out
mov
mov
shlb
andl
sub
fs
inc
xchg
loop
dec
xor
mov
xor
pop
dec
sub
scas
loope
std
in
sub
pop
mull
mov
fadds
sbbl
aas
pop
subb
and
lahf
lcall
in
pop
stos
out
dec
adc
imul
mov
pop
or
popa
int3
adc
jp
sub
or
das
xchg
add
movsb
test
stc
fcoms
adc
fbstp
test
jne
mov
dec
and
mov
inc
arpl
pop
and
out
mull
push
and
pop
repz
mov
test
lock
push
das
das
mov
imul
cmpsl
fildll
ret
ds
or
pop
lods
ret
sub
dec
das
mov
aad
imul
popa
imul
jg
popf
stos
cld
sbb
mov
andb
xor
call
repz
in
xor
in
shr
repnz
cmp
jmp
pop
mov
mov
inc
xchg
pop
xor
and
testb
mov
negb
bound
and
inc
sub
scas
ja
xor
mov
or
push
cmp
icebp
shlb
adc
dec
mov
cmc
rol
sbb
cmpl
add
push
cmp
mov
fs
aam
inc
add
js
or
dec
lds
cmp
inc
cmp
sbb
and
adcl
jge
in
xchg
outsl
cmpsb
scas
das
adc
sahf
hlt
lock
test
or
aam
mov
cld
adc
mov
mov
jo
sbb
gs
add
adc
xchg
cmovno
clc
add
rcll
jo
mov
inc
cwtl
test
adc
or
adc
and
je
adc
push
sub
push
add
push
inc
pop
sbb
pop
sub
lock
idivl
out
xchg
xlat
push
enter
out
test
mov
mov
lds
scas
loop
nop
jl
imul
das
inc
or
insb
cmp
sbb
and
and
add
and
jns
adc
push
test
lret
dec
inc
gs
addl
out
nop
xchg
xchg
clc
pop
imul
rclb
cmp
fisttpll
int3
pop
mov
lods
outsb
adc
repz
in
mov
enter
add
icebp
add
pop
cld
pop
xor
test
pushf
movsl
push
adc
fs
xchg
sbb
add
jecxz
jns
add
jo
sbb
sub
and
adc
dec
add
scas
push
add
scas
sub
in
fcmovnbe
pop
add
mov
fldlg2
outsl
mov
lahf
ficoms
dec
mov
add
test
sub
sbb
inc
int
push
hlt
aam
std
repz
rclb
push
mov
lods
mov
mov
push
sarl
popf
sbb
xor
lret
das
imul
dec
adc
stos
mov
insl
mov
xlat
lods
das
and
pop
xor
push
mov
cmpb
sarl
xlat
bound
mov
wbinvd
jmp
ja
jbe
repz
dec
push
rolb
notb
fists
lea
js
aad
pop
xchg
nop
cmp
sbb
cmp
xchg
test
cmp
and
cmp
idivl
add
inc
xchg
adc
xchg
xor
push
jae
das
pop
cmp
mov
mov
xchg
xlat
mov
fiaddl
in
xchg
out
mov
pop
xchg
testb
in
sub
mov
pop
ret
mov
les
data16
subb
add
sub
or
push
int
push
outsl
notl
aam
dec
mov
inc
mov
jge
gs
pop
dec
mov
dec
mov
add
fwait
cld
test
mov
xor
xchg
dec
icebp
adc
jne
popf
pop
out
cmp
push
rorb
aad
popf
jno
leave
rcl
push
mov
push
popf
rclb
xchg
stc
adc
jns
xor
cs
call
cld
and
popf
imull
scas
je
addl
dec
xlat
sub
gs
or
mov
mov
sti
nop
aaa
push
mov
mov
sbb
pop
mov
cmp
or
dec
mov
jmp
inc
dec
jne
mov
sub
shll
mov
aam
jnp
xor
mov
or
add
or
xchg
sub
mov
or
or
push
rcll
fsubl
jle
fadds
das
pop
aad
jbe
mov
push
cmpsb
or
std
mov
das
or
test
enter
rcr
sarl
in
ljmp
int
xor
mov
jne
daa
dec
js
into
and
mov
scas
fists
int
mov
mov
repnz
je
mov
inc
dec
xor
es
push
push
sarb
dec
popf
cli
sbb
cvtps2pd
inc
sub
xchg
sub
loope
add
adc
mov
push
jbe
rcrl
cmpl
cli
inc
jg
je
ret
ljmp
and
push
dec
push
popa
dec
xchg
lods
lds
sub
rcll
je
adc
cmpb
lret
add
cmp
sahf
test
stos
sbb
jmp
popa
sbb
jle
dec
sub
mov
mov
cmp
or
pop
cltd
push
mov
and
pushf
mov
icebp
stos
sub
cmp
jmp
and
push
dec
out
int3
jae
and
inc
sbb
hlt
cltd
push
pop
dec
sub
jae
ret
sub
aaa
inc
or
and
sub
xchg
cld
insb
mov
and
test
jne
sbb
cltd
or
add
fistl
dec
lds
or
inc
pop
push
mov
ret
and
rol
in
stos
mov
sbb
sbb
call
loop
mov
adc
scas
repz
adc
lods
rcrb
mov
mov
addr16
ljmp
adc
scas
out
mov
das
in
test
pop
scas
fbld
or
nop
inc
test
jle
arpl
dec
test
sub
les
sub
cmc
lock
lea
or
or
fldt
rorl
mov
loope
mov
in
and
lahf
push
movsb
xchg
adc
mov
mov
jb
adc
and
or
cmovg
xchg
xchg
cs
sub
movsl
sti
movsb
cmp
push
push
or
add
adc
xchg
out
fnstcw
fnstsw
and
aad
add
pushf
test
call
mov
cmp
stos
shrl
jb
jne
fmul
and
add
daa
mov
mov
jmp
jp
xor
cmp
scas
ret
ss
mov
jl
pop
ljmp
fnsave
enter
pop
stc
pop
aam
adc
out
mov
jnp
out
std
test
stos
cltd
addr16
iret
enter
adc
xor
movsb
out
mov
sbb
push
sbb
lcall
cmpsb
sbb
test
pop
mov
bswap
inc
orl
push
pop
cmp
jno
call
lret
into
cmp
sbb
mov
xchg
and
data16
inc
add
or
xchg
aam
and
imul
and
inc
mov
push
sbb
dec
int3
neg
fistps
push
call
pop
iret
pop
pop
cmp
movsb
ror
pusha
sub
loop
addr16
movsb
test
or
icebp
xchg
into
rcr
stos
outsl
push
test
push
pop
xchg
add
sub
push
dec
adc
cmp
cmp
add
dec
jle
xor
push
bound
cmpsl
out
and
or
push
pop
mov
ljmp
and
aam
fimuls
nop
mov
jmp
imul
mov
daa
mov
lds
adc
lods
push
scas
sbb
or
lahf
icebp
or
fs
inc
test
mov
mov
sub
push
dec
js
add
gs
dec
adc
mov
xor
les
or
pop
sub
ss
insb
xchg
mov
pop
mov
ja
cmp
push
pop
mov
std
in
xchg
jl
ret
jns
xchg
sub
mov
push
inc
cmp
dec
pop
mov
in
cltd
test
jnp
cld
mov
mov
aaa
adc
and
cmp
jne
bts
in
jns
leave
cmpsb
mov
xchg
push
ret
or
popa
and
jp
cmp
mov
lock
sbb
mov
lock
cmp
inc
adc
or
gs
adc
sub
jns
mov
pop
sbb
sbb
inc
push
scas
scas
mov
test
push
xor
mov
lds
jne
mov
sbb
sbb
inc
je
out
jns
dec
aam
cli
dec
mov
push
xor
mov
jle
add
pop
xlat
xchg
mov
adc
sub
mov
pop
push
or
or
push
movsl
mov
mov
pop
xlat
cli
or
push
out
mov
mov
lahf
dec
lea
sub
js
cwtl
lea
or
adc
sub
aaa
inc
sbb
and
mov
cs
incb
push
test
push
jo
push
fdivrs
movsb
sub
test
sbb
jmp
mov
mov
pop
orb
cmp
jg
mov
pop
test
xchg
mov
mov
jns
mov
movsl
push
jne
mov
mov
push
je
stos
dec
adc
lods
adc
xor
mov
sub
xor
in
sbb
int
in
mov
sarl
add
cmp
push
rorb
in
aas
mov
popa
cmpl
test
fnstenv
repnz
dec
mov
aam
sub
adc
daa
fwait
push
ret
push
push
push
mov
sub
ret
or
pusha
fimull
es
adc
decl
mov
or
push
jbe
inc
mov
nop
ret
cmc
jnp
adc
dec
arpl
inc
jb
imul
scas
jno
push
or
sub
add
jg
popa
sub
cmp
cmp
fcomps
rep
and
inc
clc
ficomps
lock
mov
inc
popf
jg
jle
xchg
orl
scas
or
cli
push
jne
scas
mov
xchg
sti
pop
in
adc
mov
mov
stos
or
or
jns
push
xchg
in
decl
test
sub
ficoml
sub
ds
movsb
ret
cmpsb
sar
je
dec
push
sub
pushf
imul
and
push
hlt
fsubp
ss
sub
xor
sbb
psadbw
cs
shll
sub
faddl
lret
jmp
xor
call
add
push
inc
cmp
cmp
jl
adc
pop
data16
pop
jns
mov
xchg
daa
rorb
mov
push
arpl
cmp
das
das
ljmp
leave
mov
sarb
ret
mov
pop
fdivrl
movl
push
dec
xchg
rcrb
lahf
aas
xor
sbb
xor
mov
xor
jne
mov
arpl
popa
nop
cmpl
aaa
and
je
mov
test
lock
lret
mov
xchg
enter
sub
mov
lods
xor
ret
adc
push
neg
fs
scas
dec
sub
aad
adc
test
fmuls
jl
add
cmpl
and
adc
dec
movsl
adc
call
ret
push
push
inc
cmp
cmp
jne
mov
mov
jmp
push
sbb
mov
sbb
and
push
lahf
data16
jl
xor
gs
cmp
loop
outsl
adc
sbb
and
dec
or
inc
movsb
add
test
push
and
aas
adc
icebp
es
sub
push
cmpsl
jo
cltd
popl
or
adc
jae
sub
jne
lds
mov
pop
out
push
stos
test
sub
mov
and
dec
push
test
or
cmpb
jle
inc
andl
dec
xor
dec
sbb
insl
insb
inc
xchg
pop
lret
xchg
lds
mov
lds
xchg
sarb
push
movsl
cmc
outsb
bound
push
movsl
orb
pop
sbb
rorb
xchg
push
lret
mov
push
dec
pop
test
xchg
push
adc
ret
and
cwtl
xor
inc
stc
cmpsl
cmp
bound
jb
push
push
adc
cld
stos
mov
stos
and
and
jmp
cmpl
pusha
cmpl
mov
mov
pop
in
push
cld
mov
testb
push
adc
or
orl
jb
xlat
mov
fcoml
push
or
adc
lahf
repnz
enter
mov
das
wbinvd
mov
xor
inc
add
or
cmp
ja
test
loop
mov
or
pop
adc
or
jg
dec
lods
dec
mov
sbb
push
jns
ror
jo
les
clc
mov
pop
xchg
adc
inc
jmp
jne
push
xchg
pop
xor
imul
add
in
call
cmp
or
popa
fcmovbe
hlt
or
sub
leave
loope
add
fmuls
ret
add
mov
lea
mov
add
jae
and
addb
or
mov
outsb
sub
icebp
lret
xchg
sub
sub
loop
and
adc
jmp
hlt
pop
stos
and
outsb
or
nop
fwait
adc
stos
sbb
aas
into
mov
or
mov
cwtl
inc
or
test
rorb
pop
pop
cmp
shr
push
jo
movsl
sbb
push
jns
sbb
das
rol
sub
jp
dec
popf
idiv
inc
jmp
std
mov
lret
mov
cmp
iret
or
fs
sub
or
sti
jge
sbb
mov
and
mov
xchg
leave
mov
insl
xchg
jle
pusha
push
push
ljmp
daa
sar
loop
and
mov
sbb
push
xchg
fists
fmul
rcr
dec
push
rorl
jmp
pop
dec
bound
push
jbe
arpl
jl
push
or
cltd
hlt
inc
push
testl
cmp
xorl
mov
mov
adc
inc
adcb
loopne
or
adc
cwtl
inc
or
call
fs
sbb
hlt
and
clc
and
ds
dec
imul
xchg
mov
lods
jns
adc
add
cmpsl
std
pop
mov
xchg
pop
in
push
add
aam
inc
pop
cmp
sahf
sar
jnp
out
sbb
mov
inc
in
mov
mov
cwtl
cmp
fcoms
lods
pop
push
and
and
cld
fidivl
in
mov
ds
pushf
sbb
lods
mov
repnz
gs
or
xor
ficomps
cli
ret
adc
cmp
test
js
sti
gs
outsb
xlat
pushf
mov
jne
cmp
and
mull
mov
cmp
mov
inc
notl
pop
fdivrp
enter
push
mov
and
fsubl
insb
jp
sbb
adc
addb
xchg
sbb
ficoml
jb
rclb
cs
sbb
icebp
inc
dec
fistpll
leave
push
mov
jle
push
jno
dec
mov
add
cmp
jne
dec
inc
loopne
jmp
push
xor
pop
jae
mov
sub
or
js
push
xlat
jl
dec
psraw
xor
jg
mov
jg
inc
push
sub
and
out
pop
jmp
stos
adc
and
insb
mov
leave
xor
jl
fldl
or
lods
sarb
std
cmp
inc
lock
xor
clc
call
jmp
js
mov
push
fwait
adc
xchg
mov
sahf
jecxz
call
mov
es
inc
and
push
mov
and
xchg
imul
sbb
test
das
jmp
movsb
adc
mov
jnp
mov
inc
push
stc
add
fiadds
sbb
inc
add
or
mov
shll
xchg
mov
jl
inc
xor
les
aad
scas
out
jge
jbe
jp
and
lcall
stc
pop
lcall
sub
inc
jb
xchg
sahf
adc
in
push
push
push
adc
dec
xor
repz
cmp
mov
or
add
ficoml
sbb
lock
insb
xor
xchg
mov
or
xchg
sub
lret
mov
insl
add
dec
outsb
push
in
sbb
push
dec
pop
cld
mov
int3
or
and
rorl
pop
loop
cmp
xchg
lcall
add
popf
bound
sbb
push
in
pop
movsl
out
sub
or
test
fimuls
cwtl
in
jo
mov
adc
inc
adc
jno
adc
cmp
shrl
mov
adc
je
xor
lods
repnz
xor
je
push
icebp
xor
cmpb
adc
push
lret
dec
in
sti
rcrb
dec
shlb
adc
pop
fdivl
xchg
pusha
add
sahf
mov
fdivp
jae
bound
call
or
popf
add
push
cmp
inc
xchg
mov
xchg
retw
ljmp
lret
dec
mov
and
dec
and
inc
mov
mov
inc
mov
mov
adc
fstps
and
idiv
xchg
mov
cs
in
mov
rcrl
cli
fcom
test
inc
adcl
scas
jnp
decb
sub
or
pop
ror
dec
and
clc
sbb
mov
adc
hlt
stos
call
push
and
push
and
xchg
imul
into
adcl
cmp
inc
adc
cli
fsubs
roll
jl
lock
test
jne
push
int3
andl
cmp
movl
dec
jne
test
gs
push
or
lods
fmuls
lret
and
xchg
lds
mov
mov
xchg
push
test
pop
inc
negl
pop
sbb
xor
mov
gs
and
and
dec
shlb
lret
loop
int3
push
pop
add
dec
lock
mov
or
pop
or
in
mov
push
iret
cli
fsts
imul
inc
mov
xchg
push
bnd
nop
jmp
repnz
push
imul
daa
push
cld
lock
or
lcall
mov
dec
mov
lret
int
add
and
je
aad
es
fsts
push
xchg
push
cmp
xor
dec
push
mov
call
or
and
dec
sbb
lea
inc
mov
dec
loop
cmp
push
cmp
jnp
js
add
sbb
or
pop
pop
mov
aam
rorb
adc
lahf
into
mov
xor
jecxz
push
pop
pop
xchg
push
sbb
adc
test
insb
sbb
outsb
mov
inc
xchg
scas
push
cmp
jl
push
int
cs
in
in
daa
xchg
push
push
sti
pop
adc
mov
add
fidivrs
mov
aam
ret
aam
in
test
cld
mov
arpl
jne
lock
sub
sbb
inc
push
adc
push
push
add
adc
dec
adc
xor
or
mov
pop
popa
push
shr
movsb
dec
cmpb
out
push
ss
repz
rorb
jo
testb
mov
xchg
pop
je
xor
cmc
inc
outsb
inc
inc
stos
ret
add
and
xchg
pop
movzwl
divb
push
adc
or
add
call
lret
inc
cmpsl
xchg
sub
lret
sbb
sub
pop
aad
in
or
pop
xor
dec
push
pop
inc
mov
std
aas
jb
push
fs
orb
ret
fimuls
add
push
mov
sbb
ror
pop
add
xchg
inc
hlt
adcb
in
inc
pusha
or
pop
fsub
jp
sbb
data16
ficompl
leave
push
into
les
jne
test
mov
xorb
pop
sbb
pop
or
xchg
aaa
cmp
mov
mov
mov
rolb
mov
cmp
sbb
push
inc
xlat
inc
movsl
mov
pop
push
sub
scas
daa
inc
adc
adc
sbb
fsubl
sub
popa
cmp
add
push
mov
jne
dec
xor
push
shlb
mov
or
sub
or
ja
movsl
sti
fcmovb
pop
repnz
out
and
mov
jo
jmp
pop
or
add
add
sub
es
int3
mov
jb
bound
inc
inc
insb
or
cs
xchg
mov
push
jge
cmpb
mov
inc
or
xchg
sbb
add
and
add
popa
push
ret
pop
decb
and
or
gs
and
push
jmp
dec
xchg
neg
mov
pusha
call
insb
jmp
lock
and
or
loope
cs
addr16
xchg
mov
dec
adc
test
sub
cmpsb
sbb
rolb
or
rcrl
push
jmp
push
xchg
mov
sbb
sti
cmp
inc
pop
xor
movb
xor
cmp
mov
pop
sbb
xlat
adc
ja
sbb
fsubrl
pop
jae
jno
in
sub
adc
xor
scas
cmpl
mov
adc
jmp
ret
test
adc
push
cli
out
rcrb
in
xlat
sbb
clc
loope
notl
fsubrl
stc
cli
in
fcompl
insl
push
ljmp
jmp
pop
cld
cld
adc
jecxz
xor
pop
push
sub
cmpl
xor
adc
dec
enter
testb
andb
jne
mov
mov
call
sbbl
dec
cmpxchg
or
push
subl
das
cmp
js
testl
lcall
mov
dec
imul
sbb
pop
flds
xor
mov
enter
add
sub
orl
and
or
dec
sbb
sub
lcall
mov
xchg
xor
xchg
ja
mov
cld
cmp
add
adc
mov
test
loop
repz
loop
cmpsb
mov
lcall
cmpsl
jns
adc
push
jno
lock
xor
adc
push
fildl
adc
out
jmp
test
lods
loopne
or
lock
dec
jecxz
xor
pushf
adc
clc
mov
push
jge
outsb
js
popf
pop
jge
jbe
gs
sub
enter
adc
mov
dec
aad
divb
mov
push
call
cwtl
in
inc
pop
add
adc
pop
loop
jne
add
shrl
sbb
pop
jno
imul
xor
test
rorb
or
insl
jmp
mov
xchg
xor
xchg
popf
sti
jmp
cmp
jge
sub
aas
aam
xorl
rol
xor
jle
incl
das
add
or
mov
lret
mov
add
cli
pop
mov
adc
je
cmp
and
scas
push
push
and
and
daa
jno
leave
clc
mov
jne
cld
jnp
aaa
adc
sub
dec
sar
mov
shl
pop
sbb
test
out
inc
dec
mul
adc
mov
mov
sbb
add
cmp
xor
sbb
stos
pop
inc
dec
enter
notl
js
adc
test
lock
inc
mov
pop
ret
jp
push
jae
jo
sub
pop
and
rclb
je
xchg
adc
adc
cmp
mov
inc
pop
inc
popa
cwtl
dec
pop
mov
sub
in
sbb
and
cmp
inc
movsb
popf
or
jg
inc
jae
xchg
stos
icebp
sub
push
sub
aas
lret
arpl
push
mov
loope
push
aas
in
lahf
mov
out
dec
clc
in
sbb
push
fldt
dec
cwtl
add
loop
or
push
dec
push
mov
jge
and
xchg
sbb
xor
cld
jmp
sub
sub
lea
jp
lahf
movsl
ja
imul
push
nop
popf
xor
je
dec
push
jecxz
xlat
into
mov
jmp
adc
icebp
addr16
fcmovne
sub
adc
xchg
stos
fwait
mov
pop
pop
leave
push
or
daa
ret
or
push
popa
adc
movsb
ja
call
cmpsl
mov
cmc
in
and
daa
stc
movsl
aam
dec
dec
adcl
xor
js
popf
ret
int3
popf
outsb
les
out
pop
lahf
push
clc
pop
push
cmp
leave
insb
pop
push
jno
jge
inc
push
jmp
xchg
aam
hlt
xor
adc
aas
sahf
dec
arpl
adc
push
cld
xor
in
sbb
cmp
cmpsl
push
lret
pop
jns
imul
stos
cld
add
call
cmp
push
jnp
dec
pop
testl
test
and
sti
aaa
inc
jb
xchg
int3
adc
fldt
or
test
or
out
out
sbb
mov
movsl
mov
or
daa
pop
dec
xchg
push
mov
add
or
xchg
rcl
pop
pop
int3
lods
andl
stos
mov
dec
loope
jo,pn
inc
mov
dec
mov
pop
push
daa
or
or
lcall
jg
lcall
pushf
testl
int3
in
jge
add
daa
inc
sti
ja
jnp
pop
adc
dec
xlat
icebp
push
mov
mov
test
jmp
adc
sti
push
mov
and
adc
mov
int
cmp
and
lods
push
bound
jnp
loope
add
das
adc
mov
add
flds
mov
mov
es
adc
mov
xchg
xchg
push
mov
out
daa
push
adc
add
add
mov
and
mov
test
mov
rclb
or
mov
addr16
fwait
pop
adc
pop
aad
mov
jg
inc
sbb
dec
leave
out
pop
or
shrb
dec
adc
mov
sarl
or
xchg
js
sbb
cmc
je
pop
out
aam
loop
or
xor
cs
fimuls
mov
lods
mov
or
shr
out
cwtl
std
xchg
dec
imul
pop
push
push
xchg
sub
enter
or
inc
and
inc
insb
mov
xchg
out
xor
orl
xchg
es
insl
add
pop
fcmove
fmul
jmp
xchg
xor
xchg
add
leave
stos
mov
aaa
loop
jmp
cmp
pop
or
sub
sbb
and
or
rcl
repnz
sub
jl
jnp
sub
mov
xchg
pop
add
and
cmp
test
lahf
das
int
add
jge
je
aaa
nop
push
adc
lret
lock
adc
addr16
fwait
clc
rorl
sub
sti
sbb
add
xlat
mov
std
adc
xchg
jns
imul
push
push
je
inc
jbe
dec
std
push
xorb
dec
mov
jns
repz
or
call
test
pop
mov
shlb
cs
daa
push
mov
test
dec
inc
dec
cmpsl
scas
dec
mov
xor
call
enter
orb
jl
xor
call
insb
or
test
push
mov
fs
nop
out
xchg
popa
loopne
shlb
ds
cpuid
mov
imul
leave
daa
das
jne
pop
adc
dec
les
icebp
sub
fsubrl
dec
dec
dec
enter
jge
inc
adc
mov
and
inc
adc
mov
leave
ja
repnz
cmpb
xor
mov
ds
xor
pop
ret
xchg
imul
bound
test
add
lock
adc
sti
shr
imul
pop
lock
pop
mov
sub
push
imul
pop
jno
pop
movsl
stos
sub
mov
pop
test
movsl
ljmp
int3
jmp
adc
mov
pop
inc
jb
aam
xor
out
mov
stos
nop
mov
mov
in
adc
bound
push
test
cld
fs
push
cmp
out
dec
jge
outsl
inc
mov
or
cmp
adc
push
adc
or
and
sub
pusha
or
or
adc
daa
mov
sbb
mov
inc
loop
sar
mov
test
and
ror
pop
inc
mov
cli
jb
adc
test
xor
mov
repz
inc
push
sbb
enter
inc
pop
pop
insb
testl
push
sti
ljmp
pop
jb
and
call
int3
xchg
or
push
lret
hlt
outsb
jmp
call
sub
out
aad
push
push
jecxz
fsubrs
in
imul
or
test
and
in
xor
and
cmp
sub
or
test
and
and
sub
sbb
cld
dec
and
sub
cs
aaa
fsubl
lcall
test
clc
loop
mov
adc
pop
lret
mull
outsb
or
and
xchg
movsb
mov
pop
mov
das
jnp
adc
xchg
fadds
outsl
insl
movsb
in
outsb
mov
cmpsl
inc
sbb
pop
inc
icebp
shrl
inc
shr
not
sarb
icebp
daa
mov
jle
lcall
mov
sub
je
add
rorl
mov
add
enter
jecxz
lret
jnp
or
insb
shlb
adc
lcall
or
or
lea
xor
mov
pop
and
dec
push
sub
dec
inc
es
ja
mov
push
in
data16
rcrl
sahf
int3
leave
addl
mov
push
mov
xchg
push
lods
jne
and
xchg
test
mov
mov
pop
mov
filds
or
icebp
cwtl
les
je
xor
adc
push
std
mov
lretw
xchg
mov
int
add
in
sub
adc
call
add
aam
mov
ja
pop
cmpl
mov
sbb
out
rcll
mov
sti
je
ljmp
decb
push
mov
ja
ret
xchg
push
sub
or
mov
mov
pop
cmp
mov
lock
push
sub
das
and
outsl
rcl
sub
add
popf
or
aam
pop
in
lea
adc
and
scas
ja
add
jne
es
pop
sbb
push
mov
jmp
inc
hlt
xchg
mov
aam
in
fists
add
mov
sbb
cmp
sbb
popf
push
sub
call
and
and
push
mov
popf
jae
xchg
sti
mov
sub
je
jnp
and
ja
mov
mov
hlt
or
or
adc
adc
push
inc
adc
pop
or
jnp
push
mov
mov
dec
js
and
jl
cmpsb
cmpb
pop
push
or
fs
inc
insl
divl
test
out
cmp
dec
ficompl
dec
push
adc
mov
rorb
or
jne
mov
inc
sub
lods
fcompl
adc
or
fldt
leave
std
cmp
test
test
inc
push
dec
or
inc
dec
and
xchg
xor
jl
pop
lock
push
lahf
sarl
push
aaa
jmp
dec
and
in
shlb
sub
or
xor
clc
adc
mov
push
enter
int3
and
push
fdivl
popa
hlt
push
cmp
sub
dec
xchg
icebp
push
pop
jo
adc
pop
add
test
jne
push
dec
sub
ret
and
xor
inc
dec
jmp
in
lods
xchg
sbb
and
xor
cs
or
mov
pushf
adc
fs
inc
jo
mov
nop
sub
dec
std
xchg
add
push
arpl
lahf
int
outsl
cmp
lea
cmp
cltd
adc
daa
mov
arpl
pop
adc
mov
inc
push
mov
fistl
and
push
push
sub
push
cltd
das
rorl
test
xchg
add
ljmp
add
adc
hlt
jle
jmp
xchg
push
cmp
addl
push
push
push
stos
das
pop
cmp
out
dec
fistps
push
inc
add
dec
or
jne
pop
xchg
dec
lahf
nopl
sub
push
or
aas
jmp
lret
je
scas
add
add
xor
mov
int
mov
mov
cmp
je
push
push
sub
pop
aad
cmpsl
lret
repz
bswap
add
jns
and
push
cmc
idivb
jns
mov
dec
sub
push
les
in
lock
pop
mov
aad
add
and
mov
add
jo
repz
adc
cmpsb
insl
adc
enter
fstpl
stos
jp
or
pop
or
cmp
stc
lods
jp
inc
xchg
and
mov
test
and
scas
int
iret
pop
jle
rorb
test
pop
add
roll
dec
mov
int
or
mov
mov
push
jns
jnp
xchg
pop
sub
adc
xchg
mov
movl
insl
push
stc
outsl
fidivs
bound
dec
sub
cmp
cmp
mov
adc
inc
or
mov
mov
jne
push
clc
inc
cmp
push
imul
out
orb
decl
mov
imul
cmp
push
or
add
pop
xor
inc
mov
dec
mov
lret
sarb
inc
jne
stos
leave
out
cs
sahf
std
sub
pop
mov
popa
pop
fs
enter
pop
and
push
insb
push
and
js
into
loop
ret
or
lds
xor
pop
inc
dec
insb
pushf
and
xor
jne
cmpl
fildl
mov
sbb
push
outsl
adc
or
fisubs
inc
push
mov
xor
cmp
popf
fdivrs
add
nop
push
aaa
cmc
adc
sub
adcb
mov
js
mov
jae
inc
aam
mov
pop
jne
cmp
and
add
pop
jnp
jne
lock
pop
mov
add
xchg
pop
clc
cmp
je
ljmp
inc
movsl
xchg
dec
scas
jecxz
inc
jmp
leave
cli
ret
ja
pop
add
pop
jmp
cvtdq2ps
or
mov
incl
cs
pop
or
pushw
sbb
shlb
pop
mov
and
xor
sbb
push
mov
imul
mov
inc
xchg
movb
sub
xchg
mov
in
sbb
push
jb
cmp
les
and
sub
adc
adc
and
push
inc
mov
clc
out
push
stos
fistl
rol
outsl
push
xchg
or
cmp
sub
sub
mov
dec
orb
xor
insb
mov
dec
mov
nop
js
je
xor
or
inc
pop
test
sub
pop
loopne
adcb
or
jb
and
cmpsl
adc
incw
adc
test
push
testb
fs
jbe,pt
imul
gs
leave
mov
dec
inc
jl
or
jmp
mov
cmp
setg
jnp
jnp
jae
jbe
fstpl
testb
setl
sbb
cmp
cmp
and
testl
xchg
enter
icebp
sbb
inc
inc
mov
pop
es
sbb
daa
sub
subb
hlt
jne
lock
or
test
sub
dec
xchg
lock
dec
and
dec
xchg
dec
push
xchg
sahf
outsb
add
jne
jmp
fidivrs
sub
sub
clc
nop
or
or
push
std
xchg
adc
jmp
push
mov
stos
hlt
lods
lahf
loope
push
xchg
or
and
adc
jmp
and
push
lock
cld
cmp
or
fdivs
pop
movsb
push
cmp
or
sub
and
push
fadds
inc
xchg
mov
or
hlt
sub
inc
scas
push
sub
jo
dec
push
push
enter
inc
sub
adc
and
mov
add
and
or
adc
and
out
inc
cli
pop
fldcw
mov
and
sub
cmpsl
adc
add
jmp
stc
lock
cwtl
add
inc
movsb
aad
sub
xchg
dec
out
mov
out
xchg
fnstcw
lock
les
cli
push
inc
or
enter
or
pop
es
or
mov
pop
cmp
movsl
pop
imul
push
hlt
pop
xchg
int
add
lock
push
inc
mov
jo
xchg
int3
daa
sti
push
xchg
lock
add
xlat
and
mov
inc
movsb
pop
pop
mov
in
dec
mov
cmp
hlt
dec
cmp
dec
stos
movsb
or
cmp
or
iret
jmp
mov
dec
out
adc
or
sbb
cld
dec
sub
adc
sbb
push
push
sbb
adc
jae
pop
push
aaa
fistps
test
orb
mov
out
dec
es
adc
aad
dec
sbb
pop
setno
or
and
in
int3
jnp
imulb
into
lods
pop
lock
aas
dec
hlt
das
or
call
addr16
sub
inc
push
dec
mov
mov
add
adc
inc
add
and
movsl
xor
and
cmpsl
pop
push
sub
insb
sub
and
adc
pop
add
jecxz
or
stos
sub
lea
mov
cmc
lahf
notb
ds
adc
adc
jl
mov
jmp
or
xor
rorb
in
cmp
pop
cmpl
pop
ret
loop
jne
cs
xorb
pop
testb
shr
jg
inc
push
jbe
cmpsb
lds
or
and
cld
movsl
push
int3
and
dec
int
inc
pop
xchg
xor
dec
push
les
sub
ljmp
pop
pop
xor
in
cmp
jns
and
sub
fwait
adc
movb
xor
in
daa
aaa
rcrl
gs
jae
add
ret
cmp
sub
stc
pop
stc
xchg
or
or
loop
mov
sub
data16
add
jl
loop
xchg
stc
dec
les
sub
mov
fimuls
call
bound
sbb
pop
add
add
xor
sbb
cmp
or
pop
aaa
lods
xchg
push
sbb
xchg
fnsave
call
dec
dec
pop
inc
push
pop
nop
push
or
lcall
cmc
mov
cmp
push
and
mov
pop
sbb
mov
or
pop
and
mov
cld
dec
cmp
ret
or
inc
sub
push
xor
cmp
clc
in
jge
cmp
lods
push
push
push
sbb
dec
ret
cmp
das
adc
jbe
dec
adc
mov
imul
jg
sar
inc
decb
jns
rol
and
jne
or
in
and
rcrl
ds
adc
xor
insl
adc
in
xchg
enter
fsubrl
or
sahf
int3
pop
sbb
les
js
push
xchg
mov
xor
or
loop
setge
adc
ret
jl
scas
sahf
rorl
push
divb
pop
lods
inc
ja
vpmaxsw
sti
repz
incb
adc
pop
aam
sub
lss
aam
mov
add
or
nop
pop
out
rolb
sbb
sbb
pop
cli
dec
in
xchg
xlat
es
or
adc
or
pop
fnstsw
xor
pop
add
dec
or
xor
inc
ds
xchg
mov
dec
xchg
inc
scas
test
mov
mov
clc
jno
push
int
out
std
cmp
mov
xchg
xor
cmc
sub
xlat
sub
mov
pop
fisttps
ret
xchg
sahf
hlt
leave
push
pop
fldenv
mov
js
cs
jns
sub
outsl
adc
add
fsubrs
dec
andl
sub
sub
mov
mov
cmp
shrb
adc
cmpl
or
ds
inc
addl
test
sub
in
nop
dec
or
cwtl
dec
jg
sbbb
xchg
das
xchg
pop
movsl
fstps
sbb
mov
fs
inc
push
push
jnp
or
mov
insb
mov
fmuls
adc
lcall
jne
test
mov
push
mov
push
les
aaa
daa
fistps
dec
xor
je
jb
repz
addr16
inc
ja
adc
out
mov
test
xorl
movsb
adc
into
int3
outsb
cld
or
xchg
ja
mov
and
inc
scas
mov
push
repnz
das
je
xchg
test
std
div
or
pop
or
mov
test
dec
and
jl
mov
push
inc
jne
in
mov
pop
test
dec
daa
or
sbb
push
fs
fcomip
div
jae
femms
push
pop
mov
js
sahf
jb
pusha
daa
shrb
pusha
dec
adc
push
jg
dec
into
ljmp
cs
xor
mov
add
inc
xor
push
jno
inc
je
jl
bound
ret
and
or
in
inc
and
cmp
dec
sub
dec
nop
mov
jmp
push
mov
cli
in
pop
mov
and
jmp
mov
xchg
pop
popf
mov
cltd
jb
lds
ret
dec
sbb
sub
mov
je
pop
mov
sub
inc
scas
mov
push
push
xchg
test
pop
out
jbe
movsb
xor
push
sub
add
mov
fdivrs
popf
je
lret
inc
pop
mov
sbb
out
xchg
divl
and
jmp
push
add
mov
adc
xlat
in
daa
mov
adc
mov
jo
inc
ljmp
or
sbb
cmpsl
adc
adc
mov
jne
aad
sub
lcall
mov
aaa
imul
jp
pop
adc
and
or
into
add
xlat
cli
sub
pop
lahf
jno
xchg
je
xchg
sbb
jne
shll
test
jecxz
sub
inc
nop
sub
jecxz
pop
int
or
jne
adc
xlat
adc
sub
ret
dec
cmp
and
cmp
inc
and
lock
push
or
call
push
push
mov
push
ss
and
mov
dec
xor
cmp
cwtl
hlt
cli
lret
pusha
out
xor
push
das
fadds
daa
loop
adc
xor
into
sbb
push
iret
sti
and
insb
sub
stos
mov
sahf
mov
fidivs
adc
data16
adc
jne
sub
cmpsb
xor
lret
jmp
loopne
add
pop
pop
ljmp
js
dec
shrl
xchg
outsb
pop
das
push
sbb
push
ret
in
jg
adc
jg
push
jg
push
addb
adc
xchg
push
mov
out
push
xchg
int
add
xchg
sub
push
push
sub
dec
cs
adc
outsb
sub
sbb
jo
add
inc
mov
or
add
add
enter
jbe
cmp
adc
test
pop
das
cmp
dec
jbe
scas
stos
mov
cmc
mov
ja
shl
subl
loope
daa
cmp
add
push
and
in
call
push
and
pop
adcb
insl
sbb
nop
icebp
enter
add
sub
add
shl
cmp
int3
mov
xchg
scas
pop
out
sub
nop
add
jmp
mov
inc
and
nop
sbb
mov
xchg
or
sbb
inc
cwtl
jnp
sbb
sbb
xor
inc
or
inc
rcl
inc
mov
adc
mov
adcl
js
xchg
loop
pop
adc
ss
mov
pop
inc
mov
inc
adc
ret
aaa
test
cmp
daa
cmpsl
inc
jno
call
xor
dec
ror
lods
inc
dec
dec
adc
jo
notb
sub
lods
ret
adc
pop
inc
sub
pushf
lods
and
dec
addb
push
xchg
cmpsb
out
movl
jecxz
push
and
pop
add
int
pushf
lahf
add
cmp
push
inc
push
fdivrp
test
add
cmpb
fisubs
stos
into
or
jne
mov
add
pop
mov
das
loop
enter
mov
filds
incb
mov
daa
repz
movsl
pop
lds
je
jo
mov
jo
mov
adc
adc
movsl
jb
mov
pop
or
dec
mov
mov
or
dec
and
dec
xor
sub
xor
xchg
popf
sti
sub
pop
ljmp
sub
out
jno
movb
xchg
psubw
mov
and
sub
cmp
cmp
xchg
cltd
and
sub
pop
mov
outsb
lods
jl
test
cmpsl
sub
or
or
loop
or
and
mov
sub
stos
imul
stos
sbb
cltd
call
out
bound
mov
pushl
int
inc
and
test
sub
add
jne
and
mov
sbb
lock
pop
jmp
arpl
out
mov
sbb
xlat
int3
aas
repnz
test
sbb
cmp
sub
push
sbb
and
sub
adc
sbb
sbb
adc
xor
mov
lods
inc
shrb
xchg
out
xor
or
jbe
insb
je
gs
xor
out
loopne
cli
outsb
imul
mov
cs
cwtl
lods
jnp
xchg
or
fisubl
cmp
push
xchg
dec
cwtl
int
gs
insb
insl
sar
dec
push
cmpl
and
jge
fistpl
dec
adc
mov
inc
xor
inc
movb
or
adc
and
dec
mov
sub
adcb
dec
adc
lcall
sbb
sub
sbb
inc
sbb
mov
cmp
and
pop
pop
sub
or
test
xlat
add
or
insb
fcmovnb
push
lahf
mov
jno
imul
or
ret
repnz
sbb
cmp
jo
lahf
loope
or
and
les
and
int3
leave
sub
pushw
jg
pop
cmp
movsl
sbb
or
adc
xchg
jmp
push
adc
ljmp
dec
clc
pop
shlb
cmpsb
mov
sub
enter
xchg
leave
aam
push
cltd
repnz
mov
in
subl
or
les
sub
hlt
cli
mov
sub
ficompl
test
mov
lcall
push
cmpsb
add
bound
shrl
jmp
jno
push
add
xchg
fidivl
jne
aam
in
or
test
adc
mov
insb
dec
jb
int3
jo
repnz
lods
dec
mov
push
jb
inc
or
jg
mov
push
jle
sub
loope
xor
sbb
test
sub
sub
mov
pop
inc
and
incl
in
shrb
iret
add
sahf
xchg
arpl
add
mov
cmp
mov
stos
xorb
mov
dec
add
pop
das
mov
sub
cli
and
test
sub
push
outsl
fldt
les
mov
jmp
test
fdiv
adc
testl
jbe
mov
in
push
jne
jnp
cmpsl
mov
jne
sahf
js
adc
add
xrelease
in
jg
sub
push
push
add
push
call
jne
jae
xchg
mov
rolb
fsubrs
gs
inc
aaa
xchg
dec
adc
dec
or
pop
xor
xor
addr16
rcr
pushf
ret
pop
popf
int3
adc
sub
pop
sbb
and
dec
sbb
xor
stos
lcall
ret
push
inc
add
lea
sub
stos
xchg
loop
pop
jno
insl
push
and
xchg
or
adc
cmpsb
and
cmpsb
sbb
xor
pop
and
add
lds
lret
dec
ret
cli
adc
data16
js
add
push
sbb
pop
adc
xor
cmpsl
lods
jmp
outsl
add
jne
mov
inc
test
mov
aam
push
fbstp
add
fdivrs
mov
adc
inc
jg
jne
imul
push
enter
aam
insb
rol
or
leave
imul
mov
pop
ret
jmp
test
jae
sub
fsub
hlt
mov
add
or
in
xchg
mov
hlt
jno
cmp
cmp
sub
lea
cmp
jne
and
push
mov
std
dec
xor
lret
mov
xlat
xchg
push
push
add
inc
shrb
sarb
push
push
adc
es
jg
sub
or
cmp
rolb
inc
adc
mov
cs
out
inc
or
repz
adc
inc
mov
xchg
mov
mov
int3
sbb
mov
jae
in
jg
outsl
lret
lahf
std
cmp
fisubs
mov
add
cmp
mov
out
movsl
sub
or
lea
dec
cmpsl
scas
and
adc
xchg
stos
push
and
fbstp
fs
aaa
pop
push
aam
bound
fs
dec
mov
fst
pop
or
sub
jle
push
jg
mov
jne
leave
inc
add
testl
movsb
xchg
out
aad
xchg
cltd
test
add
sub
push
lea
data16
jl
mov
xchg
test
add
mov
sbb
sub
hlt
and
xchg
lock
movsl
sub
mov
add
sub
test
clc
add
jne
cmpb
push
enter
hlt
and
call
ret
cmpsb
adc
add
in
sub
cmc
lock
arpl
or
mov
dec
popf
dec
sub
push
mov
cmpl
jo
rep
xor
push
sar
lds
div
xchg
adc
repnz
js
or
inc
or
mov
add
outsb
xchg
movsl
lods
das
cmc
jle
mov
pop
mov
cmp
imul
in
or
push
cmp
fisttpll
xor
push
or
notb
fldt
das
jbe
fwait
lods
shrb
nop
pop
inc
adc
dec
les
cmp
shl
je
stc
ret
ljmp
insl
jl
add
push
sub
dec
pusha
test
and
jmp
mov
leave
jmp
fs
negl
scas
sub
fisubrl
dec
mov
cltd
mov
dec
mov
mov
and
push
cmp
mov
cmp
sti
dec
lods
clc
in
in
add
jnp
je
push
add
rorl
wbinvd
push
cmp
jne
out
enter
jle
mov
loope
dec
daa
clc
adc
pop
pop
loopne
xlat
outsb
xor
push
jae
movl
leave
aam
jmp
mov
jne
adc
xchg
mov
dec
jecxz
incb
sbb
stc
movsb
sahf
and
cld
mov
xchg
mov
jmp
les
test
pop
pop
jmp
jne
lods
cld
mov
pop
dec
and
add
setns
outsl
loope
test
add
fsubr
dec
ds
mov
jg
push
jmp
lcall
pop
adc
mov
and
inc
sub
rcrl
sub
jmp
push
jb
push
xchg
scas
xor
ret
andl
mov
in
sub
push
mov
lea
aam
cli
gs
loope
clc
lds
les
popa
inc
test
mov
cld
mov
ja
sbb
sbb
dec
mov
lock
pop
mov
sti
test
in
or
nop
fdivs
sbb
mov
add
xchg
leave
sbb
mov
push
xchg
mov
dec
mov
xchg
loop
and
sahf
jp
pushf
dec
push
out
jge
cs
or
nop
add
and
subl
cmpsb
dec
xchg
in
ja
or
inc
xor
jmp
xchg
mov
setae
cmp
mov
pop
jae
add
dec
shlb
ds
jmp
mov
in
ja
dec
jp
xchg
mov
rorb
pop
adc
push
xchg
dec
lds
test
dec
adc
jne
push
jg
dec
xchg
pop
imul
loopne
jmp
orl
and
adc
in
push
dec
scas
call
addr16
inc
notl
dec
or
and
lods
mov
cltd
jge
or
jmp
jmp
or
jne
dec
lahf
inc
xor
clc
push
jg
rcrl
adc
add
jmp
sub
scas
sarl
cmpsl
adc
dec
dec
mov
mov
adc
and
mov
mov
outsl
repnz
lcall
mov
xchg
sarl
arpl
push
sub
ljmp
push
loope
or
fucomp
movaps
test
push
pop
xlat
fsubrs
push
sub
mov
mov
scas
mov
jnp
jl
insb
movsl
jns
sbb
fstps
mov
xchg
inc
movsb
push
mov
xchg
cli
mov
scas
jnp
dec
xlat
scas
mov
notl
adc
jbe
sbb
lock
cmpsb
inc
inc
orb
shlb
jle
mov
mov
mov
ja
mov
add
clc
inc
movsb
jne
ljmp
jecxz
ja
lock
addb
add
hlt
inc
mov
dec
cmp
scas
roll
loopne
pop
rcrb
mov
pop
sar
mov
xor
popf
xor
mov
sub
and
adc
aaa
subb
dec
data16
mov
enter
sarb
ret
adc
sub
dec
movsb
xlat
pop
and
or
push
popa
jle
dec
add
repz
or
pop
pop
ljmp
call
lods
jp
in
pop
xchg
data16
xchg
pop
push
inc
mov
fisttps
push
add
pop
mov
jecxz
push
adc
hlt
cs
sub
push
sbb
dec
lret
and
ljmp
daa
mov
mov
push
inc
imul
pop
jmp
sbb
out
rorl
cmpsl
fmuls
sub
imul
sbb
into
jg
data16
cmp
imul
dec
add
xchg
jns
or
jne
inc
or
xchg
icebp
movsb
and
int
clc
outsl
call
std
push
mov
add
je
inc
or
popa
movsl
das
jmp
das
xor
call
sbb
aaa
inc
and
pop
repnz
dec
dec
mov
movb
rorl
or
mov
movsb
mov
sbb
cmpsb
pushf
push
pushf
dec
push
into
fstps
lcall
inc
pusha
jne
in
mov
mov
or
add
add
movsl
adc
mov
sub
adc
pop
loop
jge
jne
mov
push
add
cs
imul
rorl
cmp
xchg
cmpsl
sub
repz
or
dec
in
xor
jmp
nop
pop
jo
xchg
pop
mov
sub
adc
dec
and
call
ja
and
sub
and
jmp
mov
xchg
test
scas
in
cltd
hlt
enter
mov
jo
adc
jns
adc
adc
mov
and
shll
or
pop
and
and
adc
es
fcoml
cmp
daa
xor
mov
and
jae
popf
ljmp
sub
pop
lds
sbb
push
or
or
pop
daa
lret
js
es
fcoms
cli
call
push
jp
jmp
stos
dec
fs
fcoml
adc
mov
xor
test
and
push
fidivs
mov
jns
sbbl
sub
push
cwtl
pop
push
mov
adc
sbb
fs
push
adc
xchg
popf
das
push
mov
in
mov
shrl
adcb
pop
xchg
push
jg
addb
inc
dec
or
sub
push
push
sbb
mov
je
lret
adcb
dec
push
ljmp
lds
inc
mov
in
sbb
scas
and
push
aas
nopl
ret
jmp
adc
push
push
stos
mov
movsb
inc
jne
jne
pop
xor
pop
pop
ret
lea
mov
pop
pop
and
addr16
mov
jle
push
leave
dec
les
xchg
add
outsb
inc
cmp
out
adc
inc
lds
rcr
fidivl
sub
js
sbb
movsl
movsl
clc
btl
icebp
repz
jne
pop
sbb
pop
cwtl
sub
ret
dec
xchg
loope
les
dec
or
jl
push
xor
lret
xchg
subl
xor
fadds
and
js
xchg
jb
rorb
into
jae
jb
jbe
push
mov
and
dec
stos
and
inc
lcall
sahf
dec
bound
fsub
insl
adc
fiaddl
pop
ret
inc
add
add
sbb
xchg
sub
inc
sbb
dec
cmp
mov
adc
cmpsl
push
add
sub
ja
stc
orb
jge
mov
mov
adc
add
dec
jle
mov
repz
enter
sub
jmp
push
push
adc
cvtpi2ps
scas
dec
mov
pop
mov
mov
imul
ds
xchg
rcrl
dec
mov
sbb
or
ret
test
mull
fsubl
stos
cld
inc
jecxz
addr16
ficomps
push
mov
sub
addl
xor
sbb
aad
xchg
inc
and
adc
fs
hlt
rorb
aam
xchg
push
xchg
cmp
stos
or
xchg
push
dec
insl
decb
mov
aam
mov
mov
js
sub
sbb
adc
in
mov
in
add
pop
adcb
add
js
pop
pop
lcall
pop
xor
mov
xor
or
pop
daa
ja
xor
loopne
mov
call
cld
and
pop
dec
inc
out
cld
xchg
adc
mov
or
and
pushf
pop
scas
sbb
and
xchg
sti
dec
shr
ja
cltd
xor
imul
clc
jmp
mov
adc
or
mov
and
and
into
je
stc
cmp
movl
xor
outsb
lods
clc
mov
leave
enter
mov
scas
lds
mov
outsl
or
je
jmp
outsb
clc
insb
rcl
imul
mov
jo
out
push
xor
xlat
inc
pop
hlt
dec
jmp
sbb
sub
jg
loopne
cltd
dec
dec
push
cmp
xchg
mov
or
jg
pslld
jge
nop
ljmp
cmp
lea
mov
mov
aaa
xchg
push
or
std
xchg
xor
push
inc
dec
dec
scas
push
sbb
push
mov
pop
gs
jne
pop
popa
cmpl
mov
inc
or
call
mov
int
mov
xlat
pop
push
cs
int
outsb
je
dec
pop
xor
jo
sub
lock
xchg
inc
adc
pusha
and
aaa
dec
and
out
imul
push
or
test
dec
sub
punpcklbw
push
std
lcall
testl
push
push
scas
vandpd
mov
push
push
jno
scas
cwtl
int3
inc
xor
std
xchg
shlb
inc
push
test
xchg
out
leave
push
xchg
clc
mov
xor
sbb
cmp
das
xlat
cli
outsl
push
inc
out
xor
or
sub
dec
sbb
sub
ss
rorb
dec
mov
pop
mov
clc
add
sbb
inc
mov
jno
push
mov
jecxz
dec
test
push
push
and
cmpsl
sbb
out
dec
in
cmpsl
fistps
push
mov
inc
scas
push
sahf
stos
push
test
xlat
fldt
int3
dec
inc
or
insb
int
repnz
add
fstl
sbbb
add
ret
mov
lock
push
mov
dec
mov
dec
decl
lea
or
xchg
les
pop
lahf
cmp
and
push
cmp
xchg
bound
push
mov
mov
sbbw
sub
push
fidivrs
sbb
imul
lock
orl
xchg
push
xchg
shll
jmp
das
inc
sbb
stos
mov
cmp
jae
sub
insl
and
int3
test
cmp
subb
inc
add
movsb
dec
pop
mov
inc
movsl
xor
leave
dec
lock
nop
scas
sbb
movsb
dec
push
not
xor
in
push
arpl
mov
push
jge
daa
push
push
pop
adc
mov
jecxz
mov
dec
ret
cmp
sbb
shlb
pop
xlat
push
xchg
call
and
es
mov
push
or
test
aad
xor
dec
or
pop
xchg
cwtl
mov
push
push
xchg
jl
dec
push
cmp
inc
sahf
pop
push
dec
push
aam
xchg
std
sbb
lahf
mov
xchg
ljmp
adc
adcl
imulb
hlt
and
push
xchg
and
imul
mov
fcmove
test
fwait
add
inc
sbb
stc
test
dec
or
xor
movl
je
ficomps
int
jns
ds
insb
adc
movsb
xchg
push
xchg
in
cmp
jl
scas
and
inc
mov
dec
xor
imul
push
sub
pop
mov
mov
fwait
inc
dec
mov
pop
mov
add
push
insl
sbb
adc
add
mov
addb
in
mov
lods
mov
sbb
or
dec
fwait
jns
inc
mov
inc
or
mov
push
cld
repnz
cmpsb
dec
addb
es
test
jg
add
loop
push
xor
scas
enter
and
push
jb
mov
imul
dec
xor
ja
and
cmp
cmp
pop
mov
push
lock
adc
mov
lret
mov
add
push
inc
mov
inc
lret
lahf
dec
push
scas
roll
or
pop
loop
fisttpl
aad
or
dec
roll
add
aas
dec
jp
dec
inc
pop
out
mov
jl
or
mov
adc
stos
mov
movsl
dec
or
pop
adc
sub
test
movsl
mov
les
or
add
test
decb
into
notl
or
decl
cmpsl
cmpsl
sti
ret
scas
push
adc
lods
cmpsb
leave
pop
dec
sbb
aam
out
das
pop
icebp
aad
mov
mov
pop
pop
lret
sbb
hlt
dec
outsb
xor
fildl
cmp
jne
insb
jbe
mov
in
xchg
pop
or
pop
int
cli
insb
dec
lahf
ljmp
mov
movsb
loopne
andb
std
call
lods
mov
push
das
dec
adc
mov
scas
mov
jne
in
mov
cmpsl
pop
aaa
xchg
les
gs
mov
xchg
out
mov
in
inc
jae
pop
cmc
sarb
dec
mov
jne
mov
dec
sub
xor
in
fmuls
mov
pushf
inc
testl
inc
mov
and
inc
out
bound
xchg
lret
imulb
adc
mov
sahf
sti
push
jge
cmc
mov
xchg
cmpb
imul
repnz
stos
testb
mov
cmpsl
mov
pop
lcall
sub
enter
mov
mov
fsubrs
jl
or
sub
xor
imul
mov
pop
addr16
int
loope
and
xor
mov
stos
dec
loopne
ja
adc
int3
les
mov
sarb
hlt
dec
das
jmp
and
jnp
dec
aad
pop
push
jmp
xlat
inc
jl
fs
popf
jbe
jp
or
dec
inc
je,pn
ret
pop
lds
arpl
adc
jmp
popa
push
xchg
jle
call
int
jge
js
adc
aaa
sub
sbb
cmp
test
enter
pop
push
or
ja
and
loop
notl
push
cmp
cltd
mov
cmp
fimuls
or
insl
jmp
sbb
mov
add
add
scas
fwait
dec
adc
pop
movsb
loope
sub
lret
shl
or
xor
add
test
repnz
pop
mov
mov
pop
pop
adc
ja
orb
pop
adc
pop
cwtl
jg
stc
addr16
shr
xor
push
int3
js
jecxz
xchg
daa
aam
nop
adc
sbb
setg
pop
jp
adc
push
xor
mov
mov
stos
or
cmp
cmp
rcll
outsl
enter
pusha
in
inc
rolb
loopne
push
mov
inc
imul
mov
out
lea
pop
or
xchg
mov
mov
cmpsb
sbb
clc
inc
adc
aam
sti
mov
adc
adc
adc
sbb
mov
repz
and
popf
ficoml
push
popf
jne
aaa
imul
hlt
mov
xchg
enter
inc
cmp
dec
jne
or
cltd
idiv
jg
pop
call
loopne
dec
std
ret
pop
je
sub
inc
xor
lcall
mov
sub
jb
sarb
mov
sbb
push
adc
cmp
cmp
daa
clc
adc
int3
out
push
xchg
sarb
cmp
dec
roll
lock
in
icebp
dec
in
cmp
jecxz
lock
dec
adc
test
es
sbb
int
push
adc
pop
test
bound
cmpsl
xchg
dec
pop
xchg
sbb
pop
sub
jl
pop
arpl
dec
mov
in
cmp
push
xor
dec
xchg
xlat
mov
and
cld
add
lock
cld
pushl
xchg
aaa
inc
jo
xchg
cwtl
and
cmp
sub
xchg
xor
fildl
lcall
out
mov
ja
fisttpl
pop
dec
cmpb
outsl
stc
dec
cmp
and
in
roll
stc
out
dec
dec
xchg
inc
mov
das
mov
jo
and
scas
mov
cltd
fs
pop
test
addr16
repnz
mov
ss
rorl
add
ja
stos
test
mov
cmp
das
pop
push
inc
mov
lcall
in
pop
push
fistpll
pop
or
and
jecxz
cmc
jp
add
call
movsb
add
movsl
jne
fs
add
sti
dec
jne
sti
dec
inc
dec
jmp
pop
adc
push
jns
and
and
in
lcall
mov
mov
call
mov
jo
push
add
data16
or
clc
test
movsb
and
mov
rcl
ljmp
or
push
jg
test
mull
test
loope
jb
sahf
fsubp
call
nop
inc
and
mov
xor
sub
in
mov
jbe
mov
push
push
xchg
aad
les
jae
or
xor
adc
push
jb
cli
xor
sub
inc
pop
das
ret
push
aad
fnstcw
fisttpl
stos
inc
in
je
scas
push
ret
mov
dec
decb
ljmp
ficoml
stos
or
loop
fdivrs
mov
jp
mov
test
dec
nop
mov
aaa
add
and
pop
jle
sub
orb
dec
outsb
mov
jno
jae
xor
inc
inc
adc
test
imul
push
insl
bound
push
es
adc
out
or
cwtl
cld
dec
or
stos
inc
imul
imul
pop
add
jns
and
fidivrs
pushf
xchg
pop
jle
jp
push
imul
imul
adc
stc
xor
or
test
inc
inc
jp
jbe
jae
or
add
mov
into
dec
xchg
mov
bound
nop
rolb
lret
mov
jge
lcall
orb
jns
or
cmpl
in
or
jae
add
es
jmp
data16
adc
xor
orl
add
sub
inc
insb
popa
adc
xor
cmp
dec
sti
fldt
stos
and
test
xor
inc
cmp
es
pusha
push
mov
faddl
and
cld
push
and
insb
jle
mov
mov
cwtl
fwait
inc
rorb
cmpb
dec
xor
ror
or
cmp
or
hlt
rol
adc
pop
out
cwtl
pusha
xor
sbb
mov
jmp
fnstsw
push
sbbb
sub
lcall
and
or
push
call
insb
xchg
mov
adc
stc
sub
and
nop
adc
fwait
sbb
mov
loop
add
or
stos
lods
aam
xor
push
xchg
sub
inc
stos
clc
jg
scas
sbb
out
aad
or
movsl
popf
addl
aam
pop
cmove
push
test
in
mov
adc
push
add
fldenv
and
mov
cmp
push
adc
add
mov
and
xchg
inc
imul
mov
mov
cmp
pop
gs
fs
jbe
xchg
fisubl
adcb
pop
fcomps
and
mov
push
inc
enter
inc
pop
or
cmp
cmp
inc
fs
push
call
pop
or
jno
je
outsb
in
push
test
or
xor
movsb
mov
dec
cmp
lods
mov
push
outsb
je
and
adc
mov
mov
aas
xor
inc
mov
push
dec
push
add
mov
jl
pop
rolb
sub
es
mov
std
lds
sbb
in
aad
pop
rcl
jnp
pushl
enter
inc
pop
cmpsb
js
adc
adc
and
jne
xorl
rclb
out
sub
ds
push
test
lret
adc
daa
scas
cmc
mov
enter
adc
cmp
ret
sub
imul
je
movsb
loope
adc
adc
adc
adc
sbb
adc
cwtl
sub
enter
dec
mov
lds
mov
and
clc
mov
movsb
add
inc
lods
or
lds
sbb
data16
mov
or
fdivl
movsb
mov
or
and
add
add
cltd
mov
mov
fcomip
sub
push
jo
lock
insb
adc
loop
hlt
fcoms
int3
popa
cwtl
mov
mov
push
pop
adc
or
in
aam
js
mov
fiaddl
cwtl
dec
test
add
xor
cmpsb
mov
add
jb
jg
mov
clc
je
mov
mov
or
adc
mov
sahf
jns
add
inc
dec
adc
jnp
int
outsl
test
pop
inc
push
shrb
xchg
or
aam
repnz
nop
call
andps
inc
dec
cli
cmp
mov
jo
pop
dec
mov
push
cmp
jmp
inc
push
insl
cmp
popa
inc
add
jnp
fcompl
and
loop
mov
or
test
insl
or
xchg
or
test
pop
sbb
lcall
insl
xor
sbb
xchg
push
adc
roll
mov
or
lcall
xor
push
push
pop
push
in
xor
lds
movsb
lret
in
psraw
sbb
sub
mov
bound
enter
or
push
sti
fdivl
movsb
mov
adc
lods
dec
in
mov
in
lea
jb
rcrl
mov
pop
xchg
popa
je
jbe
or
adc
and
leave
dec
lds
repz
or
aaa
and
inc
int3
xchg
leave
imul
mov
fwait
pop
push
or
repnz
and
inc
push
cmp
insl
test
push
push
imull
and
dec
mov
jne
mov
inc
adc
test
pop
jp
jle
mov
or
xor
gs
push
jbe
mov
in
mov
inc
insb
icebp
mov
mov
mov
hlt
int3
adc
or
mov
push
clc
cmp
and
xchg
xor
xor
xor
ss
cmp
xor
inc
inc
inc
inc
inc
inc
dec
dec
add
dec
dec
dec
dec
push
push
add
push
push
push
push
pop
pop
jo
mov
clc
loope
ds
dec
mov
and
sub
add
pop
pop
mov
add
dec
stos
and
ljmp
lods
dec
test
inc
xchg
pop
mov
mov
std
filds
pop
xor
out
xchg
cwtl
jne
icebp
mov
add
ret
and
xchg
xchg
les
push
fidivrl
xchg
out
movsl
outsb
lods
sbb
add
inc
rcrl
mov
arpl
xor
sbb
pop
stc
dec
movsb
fisttpll
sub
pop
jns
pop
cmp
incl
cld
sub
fiadds
call
or
jp
add
ret
testl
fcomps
clc
inc
jge
sub
adc
adc
jecxz
scas
and
sarb
mov
stos
fs
or
adc
jge
xchg
loopne
mov
xlat
adc
jmp
jo
test
inc
aam
or
dec
sub
and
imul
ret
inc
jmp
jb
inc
push
jno
mov
sub
cli
pop
dec
hlt
mov
mov
jns
sub
in
mov
push
add
hlt
fcmovne
jecxz
jmp
stos
or
jae
scas
ss
inc
inc
and
andb
ficompl
test
or
dec
scas
lcall
hlt
fdivrs
inc
xchg
cmc
lds
lds
icebp
mov
jl
cmp
adc
in
or
push
insl
sar
inc
cmpb
add
mov
push
and
test
and
repz
pop
push
shrl
and
pop
sbbw
jmp
xor
mov
xor
cltd
xor
sub
sub
lahf
ds
mov
outsl
dec
imul
mov
inc
dec
or
fcoms
fcoms
adc
or
and
ret
mov
arpl
movzwl
mov
adc
ret
dec
sbb
jp
inc
sub
sub
or
xor
mov
inc
aas
mov
pushl
sbb
shll
pop
in
add
push
xor
arpl
ret
call
lds
hlt
test
call
fs
test
adc
or
cmp
jbe
adc
mov
mov
and
addr16
push
cmp
jle
adc
mov
xchg
cld
subb
in
jle
push
mov
inc
jmp
xor
lds
adc
cmp
call
pop
or
cmp
fs
in
daa
test
sub
add
pop
adc
mov
add
test
or
add
in
add
push
adc
jg
adc
mov
xor
pop
pop
pop
sbb
push
mov
mov
push
sbb
subb
sti
mov
xchg
ljmp
push
and
popf
jb
mov
inc
mov
sbb
inc
imul
xor
jb
shrl
cmp
xchg
je
popa
cmp
push
sti
sbb
enter
or
sbb
daa
jnp
xor
sbb
fisttpl
mov
push
aas
cmp
jo
outsl
dec
xor
loope
dec
xor
andl
push
insb
pusha
pop
movsb
gs
roll
push
add
adc
or
xchg
mov
imull
enter
mov
push
test
fwait
call
dec
sti
cmp
adc
cmpsb
and
test
pop
xchg
and
jb
xor
push
mov
sbb
cmp
cmpsb
ret
loop
sbb
fists
and
push
sub
and
inc
or
mov
xchg
adc
fidivrs
add
sarb
pop
and
cmc
inc
sub
ficoms
js
das
test
or
jns
loope
mov
xchg
test
xor
xor
cwtl
sub
push
mov
imul
cmpl
enter
cli
cmp
outsl
addr16
sub
lea
inc
mov
js
data16
jl
cli
mov
shlb
leave
into
add
inc
dec
in
es
sbb
push
add
insl
mov
jo
xchg
hlt
jo
imul
ds
inc
addb
out
addb
xor
and
mov
mov
fucomi
dec
push
nop
xor
mov
lods
movsb
dec
sub
jle
pop
mov
icebp
jne
sub
push
fbstp
ret
pusha
mov
mov
shr
dec
test
and
add
addb
stc
push
movl
lret
aas
sub
pop
das
adc
lds
pop
nop
daa
xchg
mov
or
inc
cltd
cmp
sbb
mov
xor
mov
or
inc
push
cmp
or
stc
xor
clc
lea
sbb
ret
dec
cmp
jecxz
and
je
test
shlb
cmp
sub
push
or
cmp
dec
daa
dec
shll
xlat
in
xchg
std
mov
and
jmp
jno
push
push
adc
dec
push
mov
orl
mov
xor
mov
cmp
sbb
lock
stos
cmp
dec
mov
addb
stos
adc
pop
dec
mov
xlat
sbb
mov
xchg
std
push
ljmp
arpl
call
or
sub
iret
mov
insb
push
xor
call
ljmp
pop
jo
dec
fldt
dec
xchg
mov
inc
movsl
adc
enter
jg
or
cmp
push
push
insb
dec
ja
cmpb
jno
push
loop
adc
pop
fimull
iret
insl
ja
adc
lds
shrl
jno
aam
fsubrl
fadds
inc
cli
orb
dec
mov
cmc
and
dec
arpl
mov
mov
scas
and
sbb
mov
ljmp
movsb
pop
outsl
mov
inc
xchg
xchg
push
stos
je
xchg
pop
shrl
mov
mov
add
xchg
stc
inc
add
mov
mov
insb
mov
mov
add
fldcw
sub
std
xor
or
dec
push
and
ret
inc
test
jne
push
sbb
pop
sti
inc
push
xor
dec
push
xor
add
jo
mov
and
cmpsb
lods
adc
jmp
jmp
inc
and
ja
outsl
xor
jg
push
clc
mov
out
fldl
jl
inc
xor
cmp
aas
jge
lods
aad
fidivrs
pop
add
mov
jo
push
jmp
lds
jb
mov
inc
dec
jne
push
pop
bound
mov
cmp
inc
je
call
add
idiv
pop
xchg
lret
mov
es
or
mov
mov
jbe
pop
push
jae
imul
and
and
xchg
pushf
pop
popf
pop
push
insb
pop
mov
pop
jmp
mov
pushl
sahf
or
or
xor
mov
arpl
mov
dec
and
int3
lret
add
sub
clc
inc
jne
and
std
roll
ret
ret
rolb
and
stos
and
popf
xlat
sbb
and
mov
xor
jno
pop
and
sbb
lret
sbb
movsl
add
in
push
aam
leave
xor
stos
and
xor
jmp
push
inc
adc
dec
pop
dec
xor
sbb
adc
mov
mov
mov
pop
add
aam
enter
xor
out
push
fiaddl
cwtl
mov
push
dec
imul
add
xchg
inc
adcb
sub
cmpb
or
clc
pushf
sub
lret
and
mov
sub
fwait
pop
mov
sbb
popf
xlat
sahf
in
mov
adc
mov
icebp
inc
push
pop
out
int3
test
lock
mov
dec
cmpsl
je
inc
sar
mov
lods
outsl
movsl
mov
es
aas
inc
call
jns
nop
out
filds
jp
jg
or
xor
stos
mov
or
adc
jmp
inc
mov
pop
adc
and
in
cmp
orl
lea
loopne
pop
mov
js
mov
movb
movsl
adc
movb
adc
subl
daa
or
into
sub
or
int3
enter
mov
das
xchg
jg
jp
cmpb
inc
and
cld
jne
pop
stc
xor
rolb
jle
adc
adc
jg
push
jl
movsb
and
cwtl
sub
dec
sahf
pushf
and
dec
bound
mov
xchg
and
andl
ret
ret
dec
xor
sti
mov
adc
and
or
rolb
push
xor
and
xchg
hlt
adc
jmp
dec
sub
sub
adc
enter
cmp
test
xchg
or
push
cld
inc
fisubs
cmp
inc
sbb
movnti
call
shlb
mov
push
es
inc
jno
cmovbe
nop
or
mov
or
je
add
pop
add
inc
jge
sbb
push
cltd
sub
or
or
or
fdivs
adc
adcb
mov
push
sbb
lea
insb
pusha
mov
dec
mov
inc
enter
xchg
mov
xchg
dec
dec
testb
sbb
fcompl
test
xor
cwtl
cmp
out
dec
and
pop
mov
ja
lea
inc
jg
inc
push
sub
sub
inc
clc
add
lock
insl
stc
inc
dec
imul
dec
dec
push
test
mov
mov
mov
jmp
or
lea
int3
jp
mov
dec
push
lock
jge
mov
and
lea
lock
mov
cltd
xchg
hlt
pop
push
cmpsl
clc
into
cmc
xor
rcrb
pop
movsl
stos
adc
dec
inc
cli
and
imul
dec
clc
push
push
ret
in
adc
mov
push
sbb
and
gs
push
hlt
and
movsb
pop
cld
and
xchg
jne
sub
sub
sub
mov
jge
and
lock
out
xchg
mov
or
or
push
movsb
push
mov
sub
loop
int
xchg
loopne
mov
adc
pushf
mov
inc
movsl
sub
shl
xchg
or
and
dec
add
inc
dec
daa
jne
adc
xchg
pushf
repnz
jne
push
dec
ficoml
andb
leave
adc
sbb
jl
sub
or
pusha
lods
leave
inc
sub
rorb
in
in
dec
fs
les
lret
sub
and
outsb
ret
add
sahf
pushf
ljmp
aaa
jb
or
push
int3
sub
div
call
mov
inc
test
dec
es
cmc
addr16
ret
je
cli
cmpsl
clc
adc
sub
and
outsl
shr
add
xchg
push
cmp
pusha
and
sbb
fistl
xchg
bound
sbb
and
icebp
dec
bound
lea
xchg
mov
ds
xlat
fs
sub
out
daa
xchg
dec
jg
ds
out
dec
in
adc
lods
lods
dec
outsl
or
cmpsb
hlt
repz
cmp
add
mov
adc
pop
jns
pop
sub
xor
rcll
jmp
iret
fidivl
out
mov
clc
xor
sbb
dec
lock
sub
pop
movsb
repz
jns
xlat
inc
dec
clc
xor
or
fst
mov
in
cltd
test
xor
cmp
mov
lret
scas
loop
mov
adc
sbb
lock
sbb
cmc
and
adc
aad
lret
adc
xlat
sti
sub
fwait
mov
enter
call
sub
adc
mov
pop
fs
sub
hlt
ficompl
loopne
sbb
cmp
dec
cmp
inc
xchg
xor
pop
aam
xor
xor
sub
pop
fwait
decb
add
loopne
mov
ja
and
mov
push
rolb
clc
or
xchg
lock
mov
cmpl
jg
mov
jle
or
rorl
pop
mov
sbb
fs
jb
fwait
cmp
add
fucomip
xchg
sbbb
push
rorb
xor
push
push
rolb
add
clc
mov
and
dec
mov
sbb
aas
mov
xchg
mov
push
mov
xchg
sub
je
adc
ds
sub
pop
and
xor
pop
loope
and
adc
or
test
pop
pop
stc
test
add
push
movsb
call
jmp
pop
pop
jb
sbb
xchg
jmp
inc
aaa
mov
pop
or
pop
cmc
mov
movl
sbb
aad
xchg
push
fs
mov
pushf
or
push
inc
mov
rolb
stos
enter
test
ret
sbb
repnz
mov
add
nop
push
scas
pop
mov
mulb
adc
clc
inc
or
mov
inc
push
loopne
mov
mov
xchg
mov
sub
jg
inc
nop
in
push
test
jne
mov
sub
inc
mov
enter
xchg
shll
push
ret
test
pop
mov
test
push
sbb
imul
sub
sbb
imul
push
pushf
daa
adcl
mov
adc
push
int3
mov
add
call
sbb
or
mov
jo
orb
pop
pusha
in
notl
ja
jg
rcrl
addr16
xor
pop
or
pop
ret
lock
mov
lods
cld
mov
cs
push
lcall
out
mov
pop
xchg
add
add
bound
inc
jg
mov
pop
push
jge
xor
mov
leave
inc
sahf
and
cmpsl
jne
push
clc
daa
sub
fwait
mov
ja
cld
cmp
dec
sbb
or
outsl
sub
aad
pop
inc
adc
cmp
dec
ret
es
pop
xor
mov
mov
and
xor
fmuls
and
mov
cmp
jne
pop
xor
mov
data16
stc
test
cmp
jl
addr16
jmp
mov
test
jae
cmp
leave
push
inc
add
jns
pushw
bound
cmpb
cmpsb
pop
lods
popf
fstl
and
addr16
in
and
inc
push
or
adc
mov
push
mov
inc
pusha
sbb
jnp
add
int
mov
aas
je
movsb
dec
dec
adc
mov
mov
pop
mov
aas
mov
adcb
es
lods
or
add
inc
adc
cld
adc
mov
adc
add
fsts
pop
notb
lock
pop
mov
fsubs
sbb
mov
ficomps
daa
pop
push
ss
inc
and
sbb
dec
mov
xchg
sarl
in
scas
dec
mov
faddl
lock
scas
xchg
movsb
sub
ljmp
jb
xchg
stc
arpl
xchg
pop
push
mov
shrl
jno
in
or
dec
jne
ljmp
ss
int3
xchg
out
and
lea
xchg
xor
push
inc
je
movsl
sbb
std
dec
jp
xor
xchg
pop
cli
adc
and
rorb
cwtl
cmp
adc
shrb
pop
icebp
and
jle
dec
dec
xchg
inc
test
pop
lcall
jle
inc
addb
dec
nop
setge
ss
pop
mov
dec
or
lcall
dec
aad
movsb
ljmp
sub
movntps
adc
bound
ficomps
std
shlb
xor
mov
in
and
xchg
dec
jmp
xchg
inc
movsl
pop
test
push
mov
scas
testl
lock
push
adc
inc
mov
addr16
outsl
dec
clc
or
cmpsl
xchg
or
es
or
jb
or
inc
je
test
sub
je
loop
jnp
mov
test
dec
sub
mov
lret
push
cmpsb
sbb
push
push
adc
jg
adc
pop
sub
and
adc
orl
mov
xor
out
adc
or
fisubrs
xchg
push
sbb
push
dec
lret
rclb
mov
cs
adc
pop
out
dec
xchg
ja
dec
cld
enter
pop
je
fs
pushf
into
mov
rcrl
fs
lods
add
push
inc
ret
dec
sub
lea
xchg
stos
xor
add
mov
mov
jp
inc
push
call
imul
push
sbb
or
and
push
xor
mov
ret
jae
jp
adc
mov
mov
pop
leave
call
mov
setg
gs
xchg
push
or
inc
cli
sub
adc
push
push
ljmp
fsubl
dec
pop
out
lret
push
push
sbb
cmp
xlat
dec
jge
or
ja
cld
and
xchg
sarl
nop
pop
sarb
aam
mov
push
ss
dec
push
or
fstl
in
xor
xor
jbe
dec
movsl
push
fs
out
mov
adc
cmpl
dec
jb
and
pop
in
shll
dec
adc
add
inc
xor
aas
add
jmp
call
scas
mov
xchg
lret
ret
jne
or
cmp
je
mov
or
pop
mov
ficompl
ret
or
shrb
cli
and
faddl
fsincos
cmp
cwtl
fadds
or
xchg
jmp
jle
sub
adc
adc
xchg
inc
adc
jns
sub
xchg
or
cmp
mov
mov
js
pop
arpl
lcall
fcompp
sahf
jl
or
mov
push
insb
mov
inc
inc
fs
adcb
pop
pop
cwtd
xor
push
fistpll
mov
mov
adc
and
iret
xor
adc
inc
inc
mov
inc
cmpsb
adc
jae
lods
adc
clc
bound
xlat
push
pop
out
xor
frstor
js
mov
and
and
sub
xchg
cmp
xor
inc
sti
fdivrl
or
fisubs
je
pop
push
idiv
xchg
jge
dec
push
or
pop
dec
dec
inc
ja
dec
mov
xor
mov
ds
inc
pop
in
or
cmpsb
repnz
mov
repnz
xor
iret
adc
mov
pop
jmp
lret
adc
popf
and
add
or
std
dec
pop
mov
test
scas
repnz
inc
jl
js
jl
jno
pop
sahf
addr16
cmp
add
imul
int3
into
push
add
pop
ffree
icebp
sub
add
mov
push
icebp
sub
cmp
call
sbb
ret
ret
xor
notb
sub
in
fidivrl
gs
in
cmp
in
xchg
pop
push
pop
inc
xor
and
dec
push
jge
xor
sarl
add
sarb
movsb
popf
mov
cmp
lock
mov
ljmp
imul
inc
aad
sub
lret
push
mov
in
or
and
mov
jo
inc
dec
jne
mov
push
popf
cmc
sub
dec
aad
jp
add
sbb
cmp
lods
inc
inc
pop
inc
lock
jmp
mov
push
lock
cmp
sbb
sti
out
adc
cmp
in
push
shr
pushl
dec
daa
cltd
inc
add
cmc
adc
push
iret
jmp
call
test
xlat
rorb
es
cmp
movsl
or
sub
js
adc
mov
or
adc
and
inc
cld
call
mov
sub
and
dec
out
daa
sbb
mov
fwait
dec
cmpsb
cld
test
mov
mov
cmp
or
in
mov
test
arpl
mov
mov
outsb
gs
fisubl
mov
sarl
cli
mov
inc
inc
add
jbe
inc
les
fs
cmp
lea
nop
icebp
sahf
push
aam
adc
dec
push
mov
pop
fwait
mov
dec
xor
dec
int
nop
out
jmp
push
cltd
and
addr16
je
push
or
scas
addb
push
push
je
push
sbb
mov
fs
insb
movl
add
aam
cld
mov
nop
sbb
enter
inc
push
int3
xchg
and
pop
xchg
in
je
int3
loopne
sti
loop
xlat
mov
and
sbb
popl
jmp
sbb
mov
in
ret
add
push
jae
inc
jmp
cs
decl
pop
and
cmp
je
ja
inc
sbb
outsb
push
fwait
mov
out
cmp
push
test
mov
add
jb
sbb
in
aaa
mov
mov
dec
jmp
inc
adc
lods
cmp
mov
mov
cmp
cmp
adc
cwtl
jle
jle
std
arpl
inc
dec
dec
clc
pop
and
sub
loopne
mov
or
push
movsb
or
mov
iret
sbb
imul
setg
sbb
xor
push
jno
push
call
jne
push
mov
or
pop
mov
sbb
inc
pushf
testl
push
sbb
mov
fwait
push
adc
outsl
sub
or
mov
mov
daa
bound
mov
popf
push
test
movsl
repnz
int
adc
mov
inc
imul
iret
int3
stos
add
cwtl
mov
into
mov
shrl
lods
aam
cmp
cmp
inc
pop
push
fstl
or
movsb
push
sbb
mov
pop
push
int
push
loope
jle
lahf
cld
sbb
call
adc
mov
fldl
ss
add
sti
jl
inc
repnz
mov
bound
pop
pop
movsl
aas
mov
inc
adc
inc
inc
aad
sbb
push
mov
sub
mov
inc
popf
in
fimuls
push
push
cmpb
push
inc
inc
inc
and
in
stc
sub
xchg
andb
jne,pn
add
add
sbb
movsb
pop
imul
dec
insb
jl
fidivrs
aaa
dec
rol
sub
adc
jne
mov
dec
mov
push
pop
mov
roll
pop
cmpl
pop
and
and
mov
or
movsb
sub
cmp
jle
sti
test
das
mov
adc
push
jg
inc
movsl
les
cmp
jo
sbb
inc
sbb
inc
mov
pop
iret
loop
nop
xchg
xor
inc
cmp
cmp
mov
imul
cld
mov
js
inc
mov
in
loopne
push
ja
xchg
call
std
test
lcall
push
push
pop
inc
inc
stc
pop
call
mov
or
sub
and
push
inc
sub
dec
sti
and
loopne
push
xor
dec
dec
ret
dec
xor
add
adc
mov
sub
pusha
pop
xchg
or
mov
cltd
and
xor
ret
mov
xlat
adc
xlat
lods
push
inc
test
lock
push
cs
jle
adc
mov
js
lcall
or
mov
sub
inc
aad
push
mov
cmc
ljmp
fildll
mov
daa
loop
adc
lret
push
ja
xor
jnp
ljmp
and
and
xor
lcall
js
mov
cmc
jno
aaa
adc
stos
loop
lcall
ficompl
arpl
js
aad
pop
loopne
mov
inc
mov
inc
jg
cli
call
fdivrs
mov
test
mov
xlat
movsb
cmc
or
jmp
and
pop
out
aas
lret
ds
or
adc
jmp
xchg
mov
ret
fld1
imul
jb
pop
out
adc
inc
jge
jg
mov
cwtl
sub
in
inc
xchg
pop
or
fiaddl
mov
jle
mov
fbld
test
fs
jecxz
pop
out
and
enter
mov
in
push
and
xor
adc
sub
pop
and
mov
or
mov
mov
ja
mov
xor
mov
nop
out
jmp
jmp
jns
jae
mov
sbbl
ret
or
mov
test
jne
mov
out
cmp
jp
subb
dec
or
aad
pop
popf
in
xor
xor
inc
cmp
pop
dec
mov
pop
daa
add
ds
mov
fisubrs
pop
jmp
sub
mov
mov
repnz
addl
movsb
xchg
lret
xchg
cmc
dec
ljmp
inc
and
adc
rolb
or
push
je
das
andb
stc
das
cmp
jecxz
push
push
test
adc
test
mov
mov
push
popa
scas
jl
push
je
fisubrs
scas
sub
sub
xchg
rep
sub
cmp
sub
in
addl
add
sub
loope
movsl
aad
push
xor
cmpsb
rorl
inc
inc
push
push
mov
and
dec
fsubrs
lods
out
xor
mov
lock
ret
dec
cltd
lea
xor
jge
and
push
dec
push
pop
cmp
sub
pop
cmpsb
fs
sti
pop
push
and
cli
add
rolb
ret
inc
sbb
mov
popa
or
and
jb
out
outsl
ret
bound
xor
mov
cmp
xorl
lods
icebp
cmp
lea
or
jmp
pusha
push
sbb
sub
push
outsl
les
cld
std
inc
into
repnz
xor
xor
dec
push
ret
xchg
test
bound
movb
inc
push
inc
or
sbb
or
test
push
cmp
sbb
jge
popa
pop
clc
jb
aas
mov
shrb
mov
movsb
cwtl
ror
xor
sub
push
or
mov
xchg
jmp
cmp
sbb
fstl
jle
testl
cmp
mov
push
dec
or
mov
mov
or
sub
popf
adc
cmc
adc
repnz
and
xor
es
push
adc
inc
int3
mov
pusha
mov
mov
xchg
sub
dec
jl
or
push
sti
sbb
push
ss
dec
inc
xchg
in
gs
xchg
insl
push
scas
mov
stos
mov
loope
or
out
push
scas
jecxz
dec
dec
xlat
or
ljmp
cmc
test
sub
cmpsl
inc
pop
rolb
sahf
cmp
cmp
or
sub
fldl
cs
push
divl
test
add
stos
mov
std
push
nop
xchg
dec
mov
and
bound
dec
nop
cmp
and
in
push
shll
push
loope
jg
push
les
mov
mov
dec
mov
shr
int
cmp
dec
mov
je
push
scas
mov
sbb
out
mov
add
bound
stos
push
ret
push
mov
lret
sete
xor
aam
sti
mov
pop
mov
adc
pop
xchg
xchg
push
adc
cmc
xor
and
push
fcomp
jmp
sub
xchg
jmp
push
call
cs
loop
push
shll
dec
or
cwtl
je
mov
mov
fwait
adc
pop
push
into
adc
scas
add
inc
xor
mov
cmp
out
call
clc
xchg
add
call
cmpsb
pop
push
mov
lret
mov
in
orb
clc
jae
imul
push
test
mov
lret
push
mov
mov
in
mov
jle
imulw
pop
ljmp
jmp
mov
sbb
cmpsl
lock
es
pop
adc
nop
pop
xorb
in
jl
and
call
push
inc
jb
dec
xchg
dec
dec
inc
jns
in
and
aas
xchg
repz
xor
popa
pop
xchg
loopne
dec
xchg
xlat
inc
mov
call
inc
jmp
test
add
mov
int
xor
mov
cld
dec
pop
incl
scas
out
mov
add
or
dec
gs
jecxz
clc
push
dec
mov
sub
push
push
xor
push
mov
push
adc
or
add
rcrb
call
adc
pusha
es
cmp
int3
inc
sub
lret
mov
pop
das
pop
pop
mov
lock
movb
inc
lods
inc
and
sub
pop
mov
lret
pushf
dec
sbb
test
mov
push
out
dec
cmp
lcall
mov
sbb
jle
or
mov
lods
dec
xor
sub
cmp
dec
fs
mov
cmp
movsb
and
icebp
cmp
inc
movsb
pop
inc
cmp
mov
loopne
fs
adc
daa
leave
nop
push
xorb
cmp
push
scas
mov
xor
fmul
or
sbb
data16
mov
xor
imul
repnz
xor
cmpl
ret
mov
nop
iret
cmp
push
or
dec
mov
test
imul
scas
mov
test
scas
test
jecxz
jl
icebp
sub
xor
shll
dec
adc
sahf
add
call
jmp
jb
rcl
movsb
iret
pop
push
repnz
les
sub
dec
cmp
je
addl
xchg
es
test
das
lods
imul
cmp
out
mov
adc
dec
sub
sbb
dec
out
inc
add
mov
mov
xlat
les
fsubs
arpl
add
loope
ss
test
cmp
and
loop
nop
imul
push
pop
adc
xchg
add
jl
jg
sbb
or
and
movzwl
fs
xor
cmc
xor
lea
inc
add
or
dec
repz
es
push
int3
adc
mov
movsb
iret
xlat
pushf
jge
inc
xor
btc
dec
xchg
repnz
insl
cld
xchg
mov
fcomi
addl
push
or
cmp
mov
pop
hlt
addr16
adc
dec
inc
je
jno
sbb
add
and
mov
push
inc
xchg
pop
aas
in
hlt
sbb
sbb
stos
loopne
insb
arpl
mov
add
jbe
push
mov
add
lret
jne
push
dec
sbb
sub
enter
xchg
call
inc
sbb
sub
or
jno
movups
test
push
fdivl
ret
fstpt
lds
xchg
fsubr
lret
ja
stc
js
push
dec
sbb
inc
sti
mov
or
enter
jle
fcomp
and
fstps
mov
ja
or
dec
fdiv
in
flds
test
mov
xor
adc
fdivrs
add
cli
jl
in
sti
mul
and
add
dec
cmp
in
add
dec
sub
test
xchg
push
jp
and
in
and
fadds
loopne
or
mov
and
jle
lock
jnp
push
mov
out
std
inc
inc
ds
add
dec
hlt
dec
mov
les
fwait
ss
fcoml
out
mov
push
pop
add
adc
sub
push
test
jp
jb
scas
xor
sub
sub
pop
mov
fiadds
push
or
inc
nop
call
addb
mov
mov
adc
inc
daa
daa
inc
pop
pop
jg
cwtl
mov
cmpsb
or
rcrb
or
mov
stc
test
in
loop
push
xor
popa
out
and
das
popa
xchg
cmp
mov
dec
repz
jg
jl
jb
or
lods
loop
pop
mov
nop
adc
mov
push
movl
or
lea
push
add
adcl
cs
inc
mov
or
ss
xchg
sub
test
or
mov
jmp
push
test
pop
adc
add
out
sub
clc
mov
mov
scas
mov
out
bound
mov
mov
aam
out
pop
mov
add
dec
pop
xchg
adc
inc
xchg
jne
dec
pusha
jo
sub
jb
cmp
push
mov
in
adc
shl
or
sarb
insl
dec
add
push
push
push
cmpsl
lods
jnp
or
insb
or
xlat
pop
insb
leave
aad
and
mov
and
fisttpl
dec
shr
les
sub
jo
push
movsb
in
test
loopne
ja
je
call
cwtl
nop
jmp
stos
dec
cmp
ja
inc
std
jp
adc
ret
je
push
repnz
or
and
and
push
mov
pop
fists
or
jmp
dec
jnp
insl
sub
dec
add
adc
sbb
pop
jns
insl
lods
xor
pushf
jmp
jecxz
into
mov
pop
ror
dec
jle
xor
jo
lret
jle
xor
enter
int3
xor
test
dec
in
stc
mov
cmp
add
mov
test
sbb
adc
nop
pop
push
sbb
add
adc
je
jecxz
push
imul
sti
jbe
adc
inc
add
fdivrs
mov
xor
and
add
sti
jl
mov
and
xchg
adc
and
in
movl
push
pcmpeqb
mov
adc
ret
push
loopne
push
mov
adc
int3
dec
mov
mov
aaa
push
movsb
pop
andb
int
insb
cs
jp
xor
xor
rol
fdivrl
push
pop
and
ret
ret
jb
dec
and
adc
add
inc
js
or
cltd
mov
add
call
and
in
fs
and
fcoml
adc
ret
and
fs
aam
cmp
rorb
and
or
jno
adc
ds
movsl
push
jmp
test
inc
sub
incb
call
adc
fstpt
cmp
testl
mov
imul
int3
adc
lea
or
mov
push
xchg
sub
adc
mov
pop
mov
pop
adc
mov
inc
dec
and
adc
andb
add
push
mov
or
sti
rorb
jae
push
and
mov
push
jne
cmp
test
xor
aam
add
push
lahf
fsts
and
dec
pop
xor
sarb
rorl
ja
mov
ss
sub
testl
lahf
jns
faddl
xchg
nop
adc
out
jnp
xor
arpl
mov
sti
xor
mov
sbb
add
or
and
push
cmc
lret
in
lods
mov
mov
jecxz
inc
fbld
iret
jle
xor
cmp
sub
test
pop
std
pop
data16
xor
add
push
inc
popa
jae
xchg
lahf
cmp
lret
sbb
test
push
ret
push
push
or
add
pop
loope
fs
cld
push
les
icebp
push
adc
push
sarb
cwtl
loop
iret
sbb
incb
inc
js
sbb
scas
nop
loop
roll
mov
mov
dec
xchg
dec
dec
loopne
loopne
or
cwtl
icebp
inc
js
fs
xor
push
imul
dec
icebp
pop
jns
or
movsb
push
mov
aas
adc
sarb
cmp
dec
xchg
adc
popa
inc
pushf
pop
inc
rorb
adc
aaa
inc
aas
negl
mov
jge
call
pop
pusha
call
cmp
push
push
daa
push
pop
mov
adc
mov
clc
cld
rorb
out
pop
jl
inc
dec
push
pushf
push
and
mov
nop
rorl
pushf
cld
je
dec
xor
cli
jae
push
adc
in
and
or
pusha
jl
xorb
sub
gs
icebp
adc
out
outsb
loop
into
nop
xor
lock
sub
add
aaa
jge
xchg
lods
pop
push
lods
fsts
dec
loope
les
and
add
or
call
int3
ret
fs
fbld
imul
jge
sub
enter
xlat
jnp
inc
or
lret
sbb
inc
pop
ficomps
jbe
or
sub
pop
aam
gs
or
mov
lahf
xor
shrb
pop
dec
js
sbb
push
mov
add
xchg
shlb
xor
or
push
out
fs
or
jne
xchg
dec
pop
in
dec
mov
popa
imul
push
inc
in
movsl
or
aad
mov
sub
loop
test
or
dec
jae
inc
cmp
test
pop
incb
push
jne
scas
adc
pusha
dec
out
and
push
sub
cmpsl
pop
in
jo
adc
sbb
push
and
push
jno
jg
test
fs
pop
sbb
mov
push
xor
or
sub
add
js
repz
and
push
jmp
dec
ffreep
cltd
andl
mov
inc
and
add
mov
push
inc
mov
or
sarb
dec
test
leave
ss
push
push
je
and
mov
jnp
pop
test
in
inc
mov
or
leave
adc
jge
arpl
fmull
add
cmp
jne
mov
push
adc
nop
mov
xchg
mov
cmp
jbe,pt
push
imul
mov
dec
cmp
out
fs
and
cmc
mov
call
imul
insb
jnp
push
test
push
or
daa
push
or
nop
sub
insl
or
jl
jae
mov
adc
push
lcall
and
jp
push
hlt
dec
or
sub
cmpsl
fidivs
mov
cmpsl
and
flds
sub
add
cmpsl
ds
rcll
dec
hlt
push
mov
repnz
mov
pop
fadd
dec
not
mov
cwtl
cmp
addr16
test
push
add
ja
loop
loopne
js
icebp
into
inc
or
xchg
or
add
push
sbb
cltd
dec
push
decl
or
ds
rcrl
or
es
adc
int3
jbe
jmp
arpl
or
sub
mov
mov
mov
cmpsl
push
dec
scas
cmpsl
inc
loop
or
testl
inc
fimull
jns
cmp
push
pop
push
popf
push
mov
add
and
inc
test
loopne
lea
xchg
add
fdivr
repnz
cld
in
push
xor
in
lds
dec
xor
sub
out
xchg
cmp
adc
sub
mov
push
jo
xor
mov
push
mov
push
stos
mov
dec
ds
inc
pop
in
sbb
call
xor
cltd
shlb
xchg
adc
dec
jbe
dec
cmp
adc
mov
sub
or
cmp
lcall
pop
sbb
or
jmp
push
shlb
orl
cmp
mov
add
pusha
in
mov
push
push
lret
aam
mov
in
add
push
hlt
or
inc
mov
add
repz
addl
mov
in
call
xor
cld
xor
or
adc
adc
sbb
cmp
cmp
cmp
mov
shll
call
or
lahf
out
in
in
jecxz
loop
loope
loopne
fistps
fcompl
fstps
lahf
aad
aam
rcll
iret
cld
clc
cld
into
popf
jg
pushf
lret
in
out
mov
push
cmp
aas
subl
adc
or
orb
cmp
mov
loopne
and
rorb
mov
add
adc
xor
sbb
adc
test
pop
and
jl
xchg
lods
inc
inc
ror
inc
or
lea
inc
xchg
incb
enter
and
je
add
aaa
arpl
test
bound
and
dec
cwtl
or
test
movsb
inc
cs
cmp
sbbl
and
push
adc
xor
sbb
aam
call
test
add
or
or
dec
sub
enter
pop
xor
mov
xor
or
push
xchg
and
mov
scas
setno
das
pop
fists
or
outsb
push
add
jmp
loop
add
or
int3
out
push
dec
push
or
icebp
int
push
jb
jl
leave
xlat
pop
mov
mov
cmp
inc
sub
idivb
roll
popf
dec
mov
je
sub
cmp
jnp
sahf
adc
jne
xor
lcall
std
gs
jne
jecxz
ja
sbb
fisubl
mov
xchg
xchg
inc
mov
cmc
inc
inc
mov
sbb
fs
addr16
enter
orb
dec
or
loop
inc
fnstcw
mov
and
dec
xchg
cmp
icebp
push
mov
dec
pop
mov
inc
cmpsl
loope
loop
xorb
insl
gs
adc
inc
or
shrl
imul
jge
rcll
hlt
scas
push
leave
adc
pop
outsb
or
xchg
inc
ljmp
jne
sbb
or
rcpps
inc
je
pop
mov
flds
adc
sbb
sbb
push
pop
jo
jecxz
mov
nop
arpl
or
je
icebp
aam
sub
nop
jecxz
cmp
or
cmp
xchg
xchg
fisubl
mov
sub
or
je
or
xor
pop
add
shll
jno
nop
fadds
or
inc
fs
scas
dec
inc
aam
les
rorb
mov
movsl
or
and
adc
push
push
or
add
cmp
pop
movsb
lods
jg
xor
movsl
or
push
imul
jg
push
sahf
adc
js
add
in
cmp
mov
shlb
std
sbb
xchg
pusha
rcrb
mov
sbb
inc
or
adc
aam
fadds
dec
adc
mov
daa
sub
loopne
jg
add
dec
in
into
dec
sub
and
or
mov
push
xor
arpl
lods
pop
add
add
call
and
popa
and
rcrb
rcll
dec
popa
inc
cmp
dec
adc
jle
sbb
sbb
pop
sbb
inc
hlt
push
lret
cs
ret
sub
ret
adc
das
mov
loopne
loopne
loopne
js
adc
sbb
sbb
shlb
jnp
aaa
cmp
push
cmp
dec
dec
pop
or
psubw
stc
adc
sbb
and
sbb
sbb
pop
daa
and
jo
out
out
out
out
pop
mov
add
push
xchg
xor
xor
cmp
jle
sbb
xchg
jp
mov
jecxz
repz
repz
repnz
jle
jle
jle
dec
mov
stc
shll
mov
mov
mov
mov
mov
xchg
cmp
xor
or
and
inc
in
inc
jae
mov
je
cld
dec
mov
and
push
fsubl
push
jle
jmp
jg
pop
and
andl
inc
call
int3
adc
or
popf
addl
xchg
mov
push
inc
and
or
mov
or
popa
enter
clc
and
or
inc
stc
mov
sbb
mov
rclb
enter
fcomps
xorb
fstps
js
inc
fs
nop
fnstcw
mov
pushf
mov
cltd
and
mov
mov
sub
int3
adc
or
jns
or
cwtl
adc
xor
hlt
mov
dec
jge
jle
add
enter
cwtl
sub
pusha
mov
jl
mov
sbb
clc
inc
jl
hlt
call
xcrypt-cbc
cmpsl
adc
lds
pop
or
sub
or
jmp
std
stc
pop
adc
cmp
mov
or
shlb
mov
decl
lods
mov
add
adc
push
inc
jb
jo
imul
loop
scas
adc
ljmp
fcomps
fs
or
lods
cld
stos
pop
inc
lods
and
mov
cs
or
jbe
fbld
aad
xchg
lods
lock
lods
xchg
pop
sbb
cmp
dec
and
lods
adc
call
js
push
in
sub
jmp
sbb
sbb
shr
fbld
pop
loope
sub
lods
sbb
mov
popa
add
add
mov
or
adc
inc
mov
push
cwtl
in
dec
je
je
dec
or
adc
lock
ljmp
cmp
push
adc
dec
loop
jno
xlat
test
test
or
dec
in
cmpsl
sbb
fistl
and
mov
xchg
addl
mov
mov
inc
orb
or
cmpsl
enter
mov
cmp
push
or
mov
orb
push
and
mov
jmp
inc
out
test
adc
and
inc
imul
pushl
cmp
mov
or
jl
andb
and
jns
mov
pop
push
outsl
xor
or
into
jle
scas
cwtl
in
push
push
daa
mov
push
je
cltd
xchg
js
xchg
inc
imul
or
mov
pop
jmp
jns
push
jmp
jne
pop
fs
mov
rolb
jmp
or
inc
jb
insl
xchg
jae
mov
mov
or
ret
push
xchg
testb
cld
and
pop
pop
adc
xor
add
stos
jno
stos
or
or
or
inc
adc
sbb
cmp
pop
imul
jmp
test
or
push
inc
out
loop
dec
lock
insb
adc
cmpsb
loopne
or
mov
cltd
sub
or
sub
dec
inc
xchg
push
push
inc
pop
jl
cmp
aad
and
sub
sbb
add
dec
inc
bound
int3
adc
test
nop
xchg
mov
lods
in
adc
and
roll
enter
mov
and
repz
js
icebp
daa
shl
mov
xlat
xchg
mov
repz
cld
repnz
adc
in
or
call
movl
inc
mov
mov
fbld
adc
out
pop
loopne
pushf
or
inc
repnz
aam
cmpl
mull
adc
push
xlat
loop
xor
sbb
lret
mov
dec
cmp
nop
hlt
sub
and
repnz
lock
push
sub
filds
push
jmp
movb
push
lea
cld
mov
mov
nop
xchg
frstor
pop
push
push
mov
lock
test
lahf
lock
push
hlt
adc
es
shll
xor
inc
dec
cld
sub
add
pop
pop
arpl
pushl
jne
push
adc
cltd
mov
movl
mov
add
pop
adc
push
jle
in
test
je
in
pop
ret
add
ja
or
ret
push
push
cld
sub
imull
imul
imul
sub
jnp
pop
sub
or
fimull
incl
cmp
ret
repz
mov
or
rol
pop
std
outsb
mov
mov
data16
push
push
push
mov
mov
jmp
stos
mov
or
add
pop
cltd
and
push
adc
xchg
subb
push
jae
adc
inc
adc
insl
cli
mov
imul
inc
lret
inc
or
adc
cmp
scas
sub
push
inc
inc
xchg
xchg
test
andb
or
dec
sub
scas
mov
dec
push
iret
dec
loope
outsl
sub
add
jo
imul
rcll
mov
dec
push
popa
dec
imul
aam
inc
jo
leave
faddp
sahf
cwtl
lahf
test
mov
inc
add
inc
cmp
nop
adc
fisttps
adc
call
adc
push
inc
mov
adc
sti
sti
mov
or
lahf
rcll
or
adc
dec
mov
cmp
lcall
and
outsb
add
push
add
stc
cs
dec
sub
mov
add
push
xchg
or
test
and
mov
dec
xor
push
daa
and
pop
std
lock
xor
cmpl
or
adc
das
add
sub
ljmp
rorb
rorl
movb
sbb
repnz
lds
adc
cli
loop
or
cwtl
stc
iret
clc
data16
dec
adc
cli
dec
sbb
das
ret
icebp
mov
push
inc
lods
mov
or
adc
les
and
and
lock
or
mov
mov
sbb
mov
addr16
ret
fnsave
data16
ret
ds
xlat
repnz
and
push
push
sbb
sub
clc
in
jnp
dec
clc
test
repnz
cltd
and
lret
das
in
sti
dec
jmp
out
jecxz
pop
mov
jg
xorb
les
sbb
call
and
jmp
cmpsl
daa
clc
push
call
lret
mov
dec
jne
xchg
jno
and
out
cmp
cmp
inc
cmp
mov
test
shrb
movsl
not
nop
test
push
ret
out
popf
clc
fstpl
mov
xchg
nop
decb
mov
push
fwait
or
or
rclb
pushf
or
rcrb
pushf
or
cmp
and
pushf
or
cmp
sub
popf
xor
push
push
add
adc
movb
xor
movsb
sti
mov
dec
insl
and
dec
aaa
ret
adc
adc
test
int3
daa
popf
fistps
push
pop
add
jg
je
sub
fiaddl
call
jne
cmp
cltd
lea
add
ja
clc
xlat
dec
inc
cli
xor
cld
ljmp
inc
inc
cli
subl
mov
mov
sbb
repz
jne
mov
rorb
sub
push
enter
adc
inc
push
sbb
sbb
sbb
imul
push
sub
inc
dec
push
pop
pop
pop
mov
mov
cld
sub
push
mov
jmp
into
or
shr
int
dec
sbb
lods
dec
imul
add
and
repnz
xor
pop
dec
lds
int3
or
sub
push
dec
jle
jp
add
lods
push
stc
outsl
push
ret
jle
cmp
out
jnp
dec
or
adc
mov
mov
gs
inc
mov
dec
push
aaa
stos
int3
sub
adc
fucomp
jb
pop
mov
cmpsl
fisubs
dec
jl
sbb
fistps
jp
lea
gs
mov
jle
rolb
inc
push
xchg
or
inc
scas
and
dec
dec
mov
mov
call
scas
je
and
imul
icebp
filds
jo
and
xchg
fdivs
dec
inc
ljmp
std
filds
xchg
push
push
ficoms
mov
jo
leave
jg
sub
mov
xor
aaa
and
push
cld
jbe
pop
mov
sbb
push
lea
aaa
jnp
movsl
add
pop
sbb
mov
inc
mov
jae
push
cmp
push
bound
loopne
stos
cmpsl
mulb
pop
fs
or
sub
dec
stos
fucomp
cs
sub
xor
mov
push
and
sub
leave
xchg
pop
cmp
add
testl
dec
daa
or
jle
mov
je
add
mov
maskmovq
push
push
int3
or
jne
cltd
pop
rorl
mov
dec
adc
inc
fcmovbe
in
test
mov
add
pop
mov
jecxz
sti
cmp
mov
cmpl
and
enter
data16
or
mov
push
shlb
ret
cmp
jo
movb
jmp
adc
mov
stos
pop
popf
dec
or
add
insb
into
xor
jb
add
add
call
xchg
js
push
push
push
dec
or
xchg
sub
pop
je
in
jne
and
mov
test
cmpsl
jge
scas
fstl
sbb
and
sub
mov
and
out
jns
sbb
inc
pop
outsl
divl
das
lock
xchg
pop
decl
push
add
sub
inc
lds
adc
adc
clc
stos
push
movsb
lods
push
fsincos
lea
lea
push
hlt
pop
jb
sbb
push
cmpsb
fidivrl
aam
fucomi
and
or
jmp
fdivrl
adc
push
mov
and
icebp
sub
popa
add
pop
lds
adc
and
mov
sbb
les
and
hlt
imul
in
xchg
inc
and
dec
idivl
mov
push
in
jp
push
and
fmuls
test
notl
dec
inc
fiadds
and
xchg
jbe
mulb
sub
xchg
rcrl
jmp
push
call
loope
and
and
lahf
jge
sbb
test
stc
aaa
xchg
mov
mov
xchg
cld
not
scas
out
sub
dec
imul
int
punpckhbw
aas
idiv
mov
leave
cmp
xor
scas
cs
or
add
jle
leave
mov
cmp
xchg
xchg
vcvtps2pd
cmp
and
jne
push
testl
in
lds
dec
shrb
adc
or
inc
push
inc
jne
dec
mov
push
jae
scas
xlat
add
lea
popa
cmp
leave
push
cmc
pop
pop
test
cmp
adc
mov
xchg
push
inc
adc
mov
enter
cmpsb
in
rclb
xchg
scas
push
xor
jl
and
and
pop
cmp
push
add
mov
out
or
or
int
nop
or
push
lock
xchg
rorl
into
jnp
jmp
push
push
pop
sub
test
fstpt
inc
test
stos
mov
sub
fadds
adc
repz
mov
ret
jmp
jl
cmp
sub
pop
push
outsb
std
leave
or
jnp
out
aaa
je
rclb
jne
push
test
out
add
scas
mov
xor
test
dec
pop
std
int3
jbe
dec
push
jmp
dec
jg
or
arpl
sub
sbb
push
dec
mov
notb
das
or
std
inc
clc
lods
xlat
movsl
inc
adc
add
and
push
into
mov
pop
jns
rorl
mov
pop
push
and
jo
add
cmpb
xor
test
adc
xor
pop
std
mov
xor
inc
flds
or
or
je
js
inc
imul
call
dec
clc
or
xchg
repz
jmp
xchg
xlat
adc
add
adc
jne
cli
mov
xchg
xchg
clc
dec
loop
test
sub
out
xor
mov
in
dec
adc
add
inc
push
mov
cld
ret
stc
inc
inc
mov
mov
sbb
std
adc
adc
sub
or
push
int
adc
or
sub
adc
add
and
add
je
dec
or
int3
adc
xor
stos
cmp
unpcklps
pop
dec
adc
sbb
or
loop
xor
inc
mov
arpl
xorl
lret
dec
pop
push
jecxz
add
test
or
push
adc
aas
sbb
jl
mov
pop
mov
cmovns
mov
inc
push
adc
addl
inc
push
and
inc
sub
popf
mov
fwait
cmp
fwait
test
mov
pop
jmp
mov
adc
lahf
adc
xchg
or
adc
mov
das
aad
out
adc
jg
mov
jmp
stos
push
push
cmp
and
or
pop
mov
cmp
push
or
mov
or
pop
fsubs
rorb
sub
adc
out
xchg
daa
sub
sbb
mov
loope
mov
cli
xor
sub
pop
mov
imul
xor
out
js
test
mov
mov
std
repnz
and
sub
jno
dec
adc
jmp
stos
add
pop
adc
inc
mov
jne
out
jg
cld
cld
es
nop
xor
inc
test
js
jecxz
sub
test
jle
idivb
or
mov
fstpt
sub
xor
fiadds
stc
fstpl
fwait
jmp
imul
inc
lock
sub
lret
jle
into
jecxz
adc
cli
lcall
push
mov
push
rorb
loope
adc
scas
popa
mov
sbb
adc
cmp
pop
add
aam
mov
mov
mov
stc
dec
cmp
fldl
inc
xchg
sub
pop
lds
fiaddl
push
sub
push
call
and
cli
les
dec
push
stos
lock
mov
mov
in
sbb
adc
out
xchg
cld
andl
rclb
add
adc
dec
jecxz
inc
jne
mov
inc
repnz
mov
mov
das
sbb
das
stos
sub
mov
jmp
xlat
lds
rcll
dec
leave
sub
arpl
inc
test
sub
test
enter
icebp
adcb
sub
pop
push
dec
sub
jbe
mov
add
out
sbb
pop
faddl
sub
ljmp
mov
pop
into
pop
dec
xchg
adc
std
jne
mov
mov
sub
in
shrl
or
jne
dec
mov
movsl
loop
push
push
cltd
cmp
dec
dec
sub
cmpb
and
push
scas
adc
sbb
xor
fdivr
pop
hlt
jmp
out
xlat
pop
push
mov
je
xchg
push
paddw
mov
push
sbb
sub
sbb
inc
xor
test
mov
decl
cld
sub
call
rorb
scas
cltd
xor
mov
rorb
sub
sahf
inc
adc
push
testb
cli
sub
adc
nop
or
adc
or
je
arpl
int3
icebp
mov
mov
insb
mov
pop
xchg
push
pop
xor
xor
adc
pop
cmp
push
test
out
jmp
nop
and
push
cmp
nop
mov
in
push
mov
mov
lahf
aas
and
and
mov
xchg
push
in
cltd
push
daa
pop
push
and
push
push
ret
add
and
lret
or
adc
dec
cmpsb
testb
jb
or
add
fisubrl
js
orl
mov
js
out
gs
and
sub
push
xchg
fdivrl
nop
lock
testb
sbb
adc
mov
pop
sub
call
xchg
pop
int
jne
dec
adc
and
test
cmp
or
sub
jb
mov
movsb
enter
and
ret
mov
jns
sub
dec
dec
mov
idiv
mov
and
in
jle
icebp
jge
dec
cmc
push
andb
lds
xchg
sbb
push
pop
pop
leave
sub
pop
dec
in
jno
xchg
cmp
sbb
mov
jge
dec
out
sub
add
aad
icebp
pop
decb
ficompl
pop
pop
dec
popf
imul
sub
push
pop
pop
mov
dec
test
mov
mov
fwait
or
mov
push
cmc
jb
popf
rcrb
jne
js
xor
in
lock
jnp
aas
ds
sub
mov
mov
negb
mov
inc
mov
inc
out
adc
enter
or
pushf
and
xchg
out
stos
mov
sub
mov
sbb
jl
clc
mov
jae
adc
mov
jns
or
test
ja
daa
mov
stos
pop
es
mov
pop
cmpsl
outsb
pop
adc
dec
add
jmp
mov
loope
mov
add
or
or
jb
inc
mov
mov
add
add
add
lea
rorl
xor
pop
rorb
mov
cmp
mov
adc
imul
mov
xacquire
movsb
inc
push
lret
xchg
or
pop
push
or
stc
jae
sahf
mov
mov
jae
fists
cmpsb
or
sbb
fs
adc
or
sub
or
sbbl
jns
jns
dec
jg
lods
clc
js
stos
repnz
test
scas
cmpsb
sbb
inc
sub
push
xor
push
adc
or
sbb
pop
adc
cs
or
jns
jb
jg
jge
push
lcall
or
dec
mov
push
pop
pop
jmp
cmp
shll
push
or
ja
xchg
outsl
mov
data16
and
je
push
ljmp
lock
aaa
cs
ret
jp
jbe
cli
rorl
sbb
pop
testl
js
push
push
inc
sbb
push
sbb
inc
loopne
adc
xchg
std
fdivrl
fbstp
test
inc
dec
dec
mov
pop
adc
shll
sub
cwtl
in
andb
cmp
aas
lret
or
inc
dec
mov
popf
add
dec
cmc
or
push
push
in
outsb
mov
or
out
test
cwtl
cmp
out
or
cs
xlat
xchg
in
mov
das
push
mov
adc
and
xchg
cmc
or
pusha
jg
or
pop
push
and
dec
sub
jl
out
jecxz
jge
add
sub
inc
in
sbb
xor
hlt
adc
pop
jno
inc
jmp
or
repz
jge
pop
imul
adc
ss
or
push
push
out
les
cmp
push
data16
fwait
shll
fs
jg
and
stc
das
mov
sbb
divl
lock
inc
fs
and
mov
mov
push
sbb
pop
les
add
int3
sub
in
shl
je
loopne
cmp
aaa
insb
push
push
jle
adc
jne
daa
aas
fiadds
jo
xchg
and
xchg
and
push
ret
sbb
and
fwait
cmp
std
cmp
push
mov
or
testb
cmp
imul
push
call
into
inc
push
mov
ljmp
pop
or
dec
sbb
lods
ss
mov
cmp
or
pop
adc
cmp
mov
addr16
or
dec
pop
jp
jmp
mov
out
outsl
push
outsb
or
scas
fists
sub
pop
call
xchg
cltd
dec
aas
cli
rcr
cmp
xor
fisttpll
mov
icebp
cmp
xchg
scas
out
dec
adc
adc
or
inc
insb
imul
sub
adc
js
notb
stc
sub
pop
aad
or
and
pop
adc
hlt
je
sbb
xchg
dec
mov
test
aad
inc
jmp
daa
pop
hlt
lds
in
inc
sub
cmp
movsb
xor
out
mov
call
adc
xlat
xor
sbb
shr
xchg
xchg
leave
arpl
fcomps
stc
cld
dec
add
or
mov
or
je
adc
adc
loopne
mov
or
andl
jmp
pop
dec
repnz
sti
stos
adc
repnz
adc
dec
sub
mov
lods
and
mov
mov
callw
enter
call
int3
in
mov
inc
out
mov
dec
dec
cmp
or
pushf
push
xlat
sbb
es
adcl
push
imul
jg
push
xlat
rol
inc
ret
jmp
ret
mov
adc
xchg
xor
fdivp
out
test
je
fldenv
mov
ret
or
int3
adc
cmp
clc
mov
dec
inc
sub
xor
cmp
je
and
pop
std
and
ret
in
xchg
cmp
push
push
bound
jne
and
adc
or
fmul
mov
mov
push
clc
add
add
xchg
shlb
jae
outsb
ljmp
mov
sub
mov
pop
sub
inc
fadds
fs
or
dec
inc
mov
push
mov
aam
ds
mov
pop
pop
cmpsl
dec
insb
mov
sbb
lea
int3
push
or
movsl
arpl
mov
adc
cmp
jnp
jge
orb
dec
mov
adc
add
mov
push
push
jnp
rcll
inc
sahf
dec
fiadds
filds
xchg
test
push
fs
inc
loope
dec
cli
mov
dec
cli
xchg
push
or
test
stos
daa
mov
das
push
mov
cmp
push
adc
testl
cmp
popf
and
xchg
cltd
cld
mov
cltd
adc
je
or
jmp
mov
dec
cmc
cwtl
inc
jmp
enter
adc
push
loopne
adc
xor
inc
dec
mov
imul
cmp
adc
clc
imul
adc
xchg
fs
xor
ds
and
scas
mov
gs
sub
lret
or
sbb
adc
sbb
cwtl
push
sbb
adc
mov
and
addl
xor
push
inc
mov
dec
add
mov
push
dec
dec
es
add
dec
sub
rorl
sub
cwtl
and
cld
je
xchg
jle
inc
pop
jmp
pop
cmpsl
gs
pop
push
adc
es
or
adc
sbb
or
and
data16
xchg
aaa
and
xor
adc
and
and
cmp
std
clc
mov
shl
push
mov
jmp
and
sub
xlat
xchg
cwtl
mov
movl
mov
mov
das
out
in
fs
stc
fsts
push
dec
dec
mov
outsb
daa
rclb
jmp
or
repz
scas
enter
push
lods
cld
lret
cmp
push
test
movb
push
dec
fs
dec
pop
pushf
fisubrs
out
push
mov
mov
dec
dec
out
or
cmpl
or
enter
or
fnstcw
loop
and
push
in
xchg
adc
xchg
dec
pop
loop
jae
sbb
xchg
inc
or
inc
xchg
sahf
inc
test
movsb
fistpl
pop
test
fmul
cmpsl
xlat
addr16
rclb
out
jbe
pop
repnz
mov
or
aaa
adc
test
jp
aam
push
cmc
fsubr
lahf
push
sbb
inc
and
imul
xor
shll
and
loopne
push
hlt
sub
cwtl
sti
cmp
jge
imul
or
add
or
mov
mov
mov
dec
add
ja
pop
outsl
mov
cli
dec
jns
mov
pop
mov
and
mov
shlb
push
adc
or
adc
push
lret
dec
mov
xchg
jne
scas
mov
adc
push
test
xor
dec
addr16
inc
int3
pop
add
mov
out
cmp
and
fucom
inc
stos
xor
lret
mov
xchg
out
sub
hlt
daa
aaa
mov
jmp
mov
into
cmp
je
je
mov
push
or
je
adc
icebp
push
inc
push
inc
popf
std
fwait
daa
mov
sbb
adc
enter
and
jmp
inc
pop
or
lret
cmpsb
push
add
sbb
int
dec
cs
test
jmp
xor
dec
mov
das
xor
daa
imul
xchg
add
adc
inc
pushf
dec
cmp
addr16
test
xor
test
adc
dec
xlat
sbb
mov
push
mov
lock
cmp
jno
or
repnz
dec
push
and
add
jle
inc
les
inc
mov
loop
adc
pop
push
outsb
lahf
loope
mov
loop
push
faddl
in
pop
pop
leave
or
or
dec
push
adc
push
pop
ret
xchg
jg
fs
cld
xchg
fidivrs
inc
mov
dec
sbb
cmp
adc
shll
mov
or
push
or
cmp
inc
adc
jbe
jg
sub
sub
cmp
mov
nop
hlt
enter
push
or
lods
inc
dec
jmp
int
dec
adc
dec
mov
addr16
pop
sbb
xor
fcoms
ret
sub
mov
xor
sbb
inc
jp
push
sbb
dec
or
adc
sbb
and
clc
cmp
je
imul
pushl
in
cmpsl
xchg
mov
pop
je
sbb
bound
nop
adc
or
rolb
jle
inc
dec
repnz
adc
test
loop
aad
mov
mov
inc
mov
mov
push
ja
dec
fnstenv
sub
mov
dec
sti
xchg
fcomp
jnp
lret
sti
int
movsl
or
lea
sbb
cmp
mov
cld
mov
xlat
scas
out
dec
lds
and
pop
imul
cli
cmpl
push
mov
bound
aam
mov
adc
rcll
mov
orb
adc
movsb
out
xor
push
mov
ss
or
pop
je
fsubs
cmp
inc
cwtl
pop
and
jnp
adc
rolb
xchg
mov
lea
mov
test
lcall
stc
and
popa
stc
cmp
inc
fimull
mov
nop
cwtl
and
inc
jge
or
push
pusha
and
adc
fidivrl
cmp
aad
sub
mov
pop
scas
jge
out
std
add
xchg
shlb
call
cmp
push
imul
xor
in
dec
jmp
in
and
xchg
xor
js
adc
insb
xchg
or
dec
and
ret
adc
sub
push
or
mov
adc
dec
fadd
je
ds
xlat
xchg
push
scas
xor
xor
stos
stc
iret
mov
mov
dec
out
rolb
or
stc
pop
jns
mov
je
xchg
push
pop
adc
inc
add
dec
call
inc
rorb
ret
in
mov
mov
xorb
inc
pop
scas
add
sbb
xchg
lcall
lods
jo
jmp
or
test
daa
roll
jge
xchg
leave
mov
push
xchg
jge
pop
scas
push
imul
pop
cli
xor
testb
push
dec
xor
in
jp
bound
add
clc
dec
dec
out
mov
stos
push
pop
popa
sub
cmp
mov
fsubs
cmp
push
jne
xchg
fstpl
pusha
je
test
push
add
jne
jg
pop
push
sub
das
dec
jl
xor
xor
jne
pop
and
lahf
adc
push
or
bound
ja
out
jns
and
pop
pop
dec
push
or
js
jbe
dec
push
adc
jne
movsl
subb
sub
or
rorl
sub
jge
leave
ret
pop
jmp
mov
mov
pop
outsl
jne
jmp
scas
cmp
int
xchg
adc
push
shr
sbb
sbb
test
dec
mov
dec
or
jne
mov
or
cmpsb
lods
sub
ret
mov
and
leave
inc
sub
dec
inc
push
inc
lods
sub
push
pop
xor
enter
pop
push
stos
and
test
dec
scas
push
adc
popa
mov
stos
dec
push
lret
jne
rorb
int3
nop
jl
adc
movsb
mov
imul
into
aam
pop
pop
push
sbb
daa
pop
inc
and
cmp
hlt
xor
or
or
adc
lea
dec
imul
add
add
jl
insl
shrb
pushf
fiaddl
sbb
or
mov
movsb
or
pushl
lods
mov
jp
jg
jno
xchg
lods
aam
or
add
pop
jecxz
or
cld
scas
lods
arpl
push
sbb
pop
test
or
pop
shlb
js
mov
xor
rclb
and
sub
and
add
icebp
dec
jle
or
cmp
cmp
jne
repnz
ret
test
pop
mov
sbb
aam
out
fs
aam
pop
in
push
sub
or
insb
leave
push
pop
mov
xlat
push
gs
int3
and
mov
dec
dec
leave
fnstsw
xchg
sbb
sbb
cmpsl
add
jne
mov
inc
clc
inc
or
adc
mov
add
inc
or
fsubp
fstpl
fwait
mov
adc
sqrtps
add
test
rcrb
sub
dec
loope
ds
imull
or
push
inc
insb
adc
sub
inc
in
inc
and
mov
and
or
outsl
rorb
dec
pop
out
cmp
xchg
push
ja
int3
enter
or
lret
fstl
fld
pop
adc
mov
push
pop
enter
shll
dec
push
fadd
push
xchg
call
ret
mov
testb
stos
xor
mov
ja
popa
xor
cld
mov
mov
push
add
rclb
mov
sub
mov
stc
and
adc
xlat
js
inc
loope
mov
jmp
dec
push
and
outsl
fucomip
xor
clc
js
xchg
mov
out
sub
and
or
sub
test
enter
mov
pop
push
or
aas
dec
add
fwait
mov
jle
inc
pop
mov
popf
loope
dec
lods
cmp
insb
and
ss
repnz
in
add
push
add
mov
jmp
sbb
inc
inc
inc
in
add
mov
cmp
lods
jg
jmp
push
dec
sub
cltd
aaa
in
mov
enter
push
push
and
cld
fwait
jmp
ret
cmp
push
sahf
clc
add
adc
inc
and
aas
fstl
sbb
call
rolb
inc
loope
or
sbb
or
aam
inc
sub
dec
pop
ret
and
push
test
xor
repz
mov
inc
test
sub
fimull
idiv
xlat
data16
mov
adc
cmp
inc
dec
fxtract
in
jb
push
outsl
or
cld
lds
icebp
jne
sbbb
jne
xor
cmp
scas
jbe
inc
mov
sub
jb
pop
je
jmp
in
add
push
add
fnstsw
sbb
bound
jg
ficoml
les
mov
dec
and
pop
and
sub
inc
or
xor
dec
lods
xor
cmp
dec
sbb
lret
mov
inc
xchg
int3
mov
mov
shrl
or
hlt
pop
cmp
add
lea
out
push
dec
shl
rclb
in
dec
xor
cwtl
adc
sbb
cmp
mov
data16
jle
mov
mov
dec
mov
inc
int
cmp
pusha
sbb
icebp
jmp
mov
mov
sbb
push
in
outsb
jge
add
jne
ds
rolb
inc
adc
or
mov
push
mov
sbb
pop
out
adc
mov
fisubrl
push
mov
repz
dec
jmp
cmpsl
add
dec
test
push
inc
or
lods
ficoms
rcl
add
or
and
or
sbb
je
cwtl
pop
adc
pop
js
sub
test
add
xor
jo
outsl
jecxz
mov
xor
push
push
dec
int
or
inc
hlt
mov
jg
push
mov
iret
clc
imul
leave
fisttpl
sarb
add
dec
xor
std
push
add
xchg
adc
in
cld
int
mov
or
push
and
ljmp
and
inc
dec
push
mov
je
or
sbb
fwait
add
outsb
dec
mov
cmpsb
pusha
mov
xor
cmpb
je
mov
idivl
and
mov
adc
or
lea
or
cmpsb
sub
or
xor
fadd
jnp
sbb
ljmp
push
gs
or
add
pop
lret
or
cltd
add
push
xor
gs
adc
das
inc
xchg
das
jg
push
sbb
cmp
or
inc
cmp
idiv
and
sub
push
xchg
sub
pushl
and
pop
ret
dec
in
lahf
test
add
int
ljmp
cli
call
data16
and
or
push
or
pop
ret
pop
dec
ja
cmp
pushf
cmp
adcl
and
popf
movlps
daa
push
popf
jmp
sub
or
and
or
and
popa
movsl
daa
mov
pop
push
outsl
test
cmp
jle
adc
stc
outsl
jbe
dec
lock
mov
or
add
loope
push
or
inc
pop
out
popl
inc
add
xchg
jge
push
pop
fbld
push
jmp
pop
movsl
mov
adc
cld
and
rcrb
stos
test
outsb
pop
stos
or
aad
push
adc
dec
mov
imul
mov
sub
adc
lret
jmp
andl
nop
and
je
shufps
xchg
or
icebp
inc
sub
sub
adc
pop
notl
xlat
loop
fbstp
je
dec
push
stos
das
jae
or
or
cld
mov
sbb
addb
and
and
aas
movsb
mov
pop
cmp
jnp
mov
sub
adc
divb
inc
inc
xchg
jo
xchg
dec
or
add
jmp
inc
lods
getsec
adc
mov
add
xchg
push
xchg
add
jne
sub
or
push
or
or
sub
enter
ja
dec
fstps
jmp
rol
mov
fwait
xor
movsl
pop
add
das
xor
in
mov
ds
add
jmp
push
sahf
out
jmp
in
sbb
push
or
mov
icebp
jne
cs
and
or
jg
pop
inc
clc
hlt
mov
fs
mov
mov
std
stos
inc
test
mov
dec
dec
add
mov
sbbb
repz
shl
fldl
mov
inc
aad
or
sub
jmp
lret
jo
add
shlb
xchg
jne
rcl
call
icebp
jmp
repnz
dec
aas
push
dec
cld
subb
push
jle
push
sbb
and
pop
xchg
and
mov
pop
sub
adc
add
rcll
pop
xor
xchg
call
push
jnp
mov
add
and
cmpsl
aas
pop
nop
inc
cmp
outsl
push
adc
fyl2xp1
movsl
das
ret
fcomi
dec
push
push
adc
cmp
jp
or
inc
das
sub
mov
jecxz
add
clc
fs
sub
dec
jae
fs
mov
sahf
sub
pop
les
icebp
repnz
dec
hlt
aaa
je
sub
imul
inc
xchg
scas
repnz
hlt
stos
hlt
cmp
jp
xchg
inc
mov
icebp
enter
cmp
inc
das
push
mov
jg
mov
dec
xlat
and
adc
into
out
testb
or
jg
adc
mov
and
dec
or
jns
mov
jmp
xor
pushf
inc
push
enter
push
pop
and
sub
das
movswl
pushf
xor
or
mov
movsl
call
mov
adc
popf
add
add
call
cwtl
leave
pop
or
add
xchg
sub
mov
adc
xor
and
sbb
sarb
sbb
mov
dec
movsl
mov
in
jl
xor
jmp
cmc
sub
and
scas
shll
push
sub
and
gs
ss
cmpsb
in
adc
sbb
stos
mov
out
test
fbstp
cmp
pop
push
test
jne
je
mov
pop
xchg
aas
dec
hlt
cmp
rclb
inc
cmp
mov
call
enter
mov
add
mov
sub
inc
movsb
mov
in
lcall
shll
fdivl
adc
mov
pop
cmpl
xchg
popa
inc
mov
ds
mov
fstl
outsl
test
or
addr16
xchg
loop
sub
sub
pop
sahf
loopne
mov
pop
and
in
ss
jne
cmpsl
adc
add
pusha
das
xchg
fcomp
cmpsb
adc
shlb
push
push
push
std
jmp
xchg
push
adc
xchg
cmpsl
ja
push
cmp
mov
jmp
xchg
leave
xor
xchg
xor
idivb
dec
decl
mov
and
and
add
and
mov
xor
inc
jo
mov
push
sub
arpl
mov
add
leave
push
cmpl
pop
or
dec
scas
popl
mov
and
jl
add
push
stc
cltd
enter
ret
jno
cmp
mov
dec
inc
loop
int3
jno
jle
pop
je
push
xchg
stc
or
cwtl
add
or
sub
or
and
dec
es
test
pop
clc
inc
adc
dec
sub
fs
sub
pop
inc
mov
add
jne
push
inc
sbb
rcll
js
cltd
and
or
outsl
test
imulb
adc
cmp
sbb
dec
mov
xlat
jns
lods
stos
sub
jle
dec
or
je
nop
pop
or
cmpl
or
notl
mov
or
jo
cmpsl
sarb
jge
inc
jp
dec
adc
mov
es
jo
xchg
mov
xchg
fisttpll
aam
cmp
or
mov
adc
loop
mov
mov
adc
cwtl
jmp
out
sub
test
pop
sbb
scas
idivb
and
sarb
bound
gs
inc
rorl
sbbl
mov
pop
pop
sub
pop
clc
enter
dec
shlb
inc
sub
push
and
cld
mov
nop
movl
packssdw
aaa
ret
jle
cmp
sbb
adc
movsl
fldenv
jle
push
daa
xor
cltd
and
pop
pop
cmpsb
or
clc
shr
stos
mov
in
dec
lods
adc
or
daa
imulb
lock
xchg
cmp
adc
mov
mov
sub
adc
iret
or
daa
mov
xor
pop
sub
mov
xchg
cld
lea
mov
or
jmp
clc
adc
std
cwtl
mov
pop
int
inc
stos
xor
xor
xchg
cli
inc
jmp
or
or
push
dec
scas
pop
out
js
push
push
inc
out
cmp
push
cld
jmp
and
movsl
push
loopne
mov
sbb
pop
insl
mov
lds
je
lock
inc
cmp
stc
outsl
int3
push
lea
fdivrs
push
inc
iret
ja
imul
push
ljmp
cmpsl
cwtl
dec
clc
pop
loope
push
cmp
or
sti
xor
stos
push
ret
xchg
pop
js
xchg
subl
lods
movsl
ret
or
or
movsb
adc
stos
cltd
xchg
push
mov
adcb
sub
mov
aad
inc
sti
sbb
push
sbb
push
jns
daa
push
cltd
inc
and
test
int3
mov
dec
jmp
imul
pusha
cmp
jne
xchg
fsubrl
mul
les
je
ret
jne
insb
fldcw
dec
in
insb
in
jg
insb
push
cmp
push
inc
mov
jle
push
dec
push
insl
inc
and
jns
fs
enter
enter
push
movsb
dec
inc
push
cmp
popf
push
push
dec
pop
cmc
jae
adc
mov
adc
and
ljmp
in
je
mov
and
mov
add
fldl
fs
faddl
sbb
fnstsw
sahf
jae
push
fiadds
dec
jne
ljmp
enter
jo
movsl
sub
daa
add
mov
jmp
and
in
add
xchg
jmp
jb
pop
lds
add
insl
cmp
sahf
adc
add
ljmp
fcmovnbe
or
fwait
jg
outsb
sub
xchg
and
and
test
mov
mov
sarl
push
adc
insb
or
sbb
out
lcall
cmp
jb
sbb
xchg
shlb
std
and
imul
push
dec
push
and
dec
xchg
movq
in
mov
dec
dec
mov
push
rcr
lds
stos
out
and
push
add
mov
or
xchg
dec
adc
fsubl
lret
jmp
sub
insb
repz
gs
ret
mov
js
mov
inc
pop
pop
in
int3
jecxz
lret
add
sub
dec
push
dec
test
mov
idiv
or
lret
pop
aam
mov
scas
sub
scas
ss
das
jmp
in
mov
add
addb
ret
fcmovbe
cltd
adc
repnz
dec
sub
jno
les
sarb
jl
inc
jne
or
lret
nop
xchg
jnp
clc
cmp
les
cmc
cmp
pop
fstpl
mov
mov
pop
inc
cwtl
mov
inc
adc
aad
fiadds
dec
inc
push
aam
dec
and
aad
test
sub
adc
sub
scas
pushf
dec
adc
mov
loop
and
pushf
dec
imul
inc
popf
cmpsb
clc
aam
xor
inc
scas
mov
dec
lcall
inc
je
jb
js
out
outsl
lret
inc
xor
insb
popf
push
or
push
push
fsubl
push
ljmp
push
push
sar
and
xchg
test
fidivs
fwait
pop
and
test
and
stos
andb
or
and
xchg
lea
push
test
xor
movsl
push
xchg
js
jo
mov
jl
mov
sub
adc
mov
inc
lods
jl
dec
dec
popf
lds
xchg
xchg
or
movsl
push
push
inc
lock
fsub
and
testl
or
sbb
imull
stos
dec
gs
pop
mov
dec
or
lahf
mov
dec
or
and
or
test
or
mov
nop
in
fs
sbb
aam
call
sub
nop
ret
push
inc
mov
out
sub
and
push
and
movsl
fbstp
nop
push
test
inc
hlt
cs
jl
dec
or
adcb
sti
mov
dec
pop
mov
pop
cltd
mov
stc
and
xor
inc
dec
nop
notb
cmp
pusha
jge
push
enter
ja
aaa
rorl
test
xor
test
and
out
mov
dec
jp
add
push
mov
and
inc
push
dec
adc
hlt
out
outsl
minps
sub
sahf
xor
inc
and
sahf
dec
jmp
mov
adc
mov
adc
pop
adc
cmpsb
push
inc
push
mov
cmp
ja
cli
and
popf
stos
rcll
cltd
or
adc
xchg
or
sub
adc
add
pop
jle
push
les
xor
and
in
cmp
add
cld
xchg
xchg
movsb
jmp
xchg
std
pop
nop
dec
pop
loopne
rclb
push
pop
dec
or
jne
out
cmc
ljmp
inc
popa
xlat
inc
push
xchg
push
sbb
and
les
lods
dec
ficoms
mov
add
xor
pop
mov
enter
out
dec
mov
stos
dec
push
int3
or
xchg
lret
xchg
fisttpll
sbb
adc
hlt
pop
inc
dec
imulb
dec
loopne
popa
adc
je
or
daa
adcb
mov
loopne
sarb
adc
jmp
sbb
hlt
sub
xor
pop
jbe
sbb
mov
xchg
cltd
pusha
in
aas
in
aaa
lds
ret
imul
and
nop
xchg
mov
call
sbb
lock
jg
add
xchg
adc
mov
test
lock
fmul
dec
mov
adc
imul
pop
cmp
xchg
sub
sbb
push
imul
fisubrl
add
addr16
add
sbb
jl
push
add
les
rolb
jne
or
hlt
and
or
inc
add
sbb
ret
icebp
bound
dec
movsb
xor
jne
icebp
adc
mov
leave
gs
arpl
xchg
push
mov
pop
push
or
adc
testb
and
adc
xlat
xchg
or
loope
adc
jmp
mov
in
add
push
push
or
jmp
cmp
push
jne
inc
aas
or
adc
dec
sub
pop
rorb
push
dec
mov
pop
jp
sbb
adc
shrb
push
cmp
jne
test
test
add
lret
popf
pop
sub
mov
xchg
cmp
inc
and
jge
push
aaa
or
adc
or
int3
sbb
or
mov
jb
je
lods
in
out
add
dec
adc
das
mov
mov
dec
addb
adc
fsubr
and
jo
test
sahf
js
dec
fdivr
sub
jecxz
pop
cmpl
sbb
pop
sbb
clc
adc
or
repnz
or
jo
decl
cmp
jbe
enter
lds
cmp
stc
cmp
add
xchg
movsb
mov
pop
mov
js
cmpb
mov
or
inc
add
cmp
je
insb
dec
lea
xchg
icebp
dec
sub
test
xchg
xor
and
ljmp
clc
popa
jg
int3
outsl
shll
fnsave
loopne
clc
adc
test
scas
xor
scas
mov
hlt
nop
or
popl
mov
addr16
or
push
cmp
mov
or
cmp
addb
daa
ficomps
jno
sub
ljmp
sub
push
push
push
dec
sti
test
push
cmpxchg8b
cld
cmp
jg
push
nop
xlat
fwait
scas
pop
stos
adc
push
scas
daa
cld
jns
pop
bound
test
movsl
jg
dec
loopne
jecxz
jnp
lahf
adc
jl
nop
lahf
popf
inc
jbe
and
dec
sbb
dec
xchg
or
daa
xchg
mov
call
adc
or
out
addr16
arpl
or
or
iret
mov
cld
lock
push
test
fstpl
imul
cmpsl
fldenv
bound
or
insl
xor
pusha
rorl
push
cmp
push
iret
adc
mov
test
out
jne
mov
push
insb
nop
pusha
daa
push
out
mov
xlat
out
xchg
adc
incl
mov
ret
lea
popf
fists
sbb
lahf
fisubl
movsl
jae
lods
pop
out
adc
call
mov
dec
fs
lds
dec
dec
mov
jo
sub
pop
mov
fwait
lcall
push
inc
hlt
out
mov
inc
sarl
clc
xchg
xchg
negl
sbb
aas
jbe
push
dec
in
mov
pop
and
or
cmp
or
xchg
mov
mov
inc
cmp
pop
lds
cs
dec
push
mov
loopne
inc
dec
jne
cltd
sub
xlat
mov
sub
xor
mov
scas
mov
jmp
pop
sti
push
or
lods
pop
pushf
lods
sbb
aad
mov
pop
fisubs
jbe
mov
stos
insl
inc
notb
sbb
mov
inc
inc
daa
incl
inc
jne
adc
jb
int3
sbb
repnz
pop
inc
test
mov
lea
daa
add
enter
jmp
enter
mov
xor
fs
sub
cmp
dec
dec
push
pushf
or
lfs
lahf
cld
pusha
in
stos
mov
add
sub
data16
mov
sub
repnz
sahf
movsl
push
dec
fstl
cmp
sbb
loop
and
and
jmp
cs
sub
xchg
pop
and
cmpsb
fwait
dec
stos
mov
loop
aam
xchg
dec
and
imul
inc
iret
jmp
lds
es
loope
lret
mov
and
stos
sub
mov
cmp
popf
adc
test
adc
iret
dec
movsb
lods
cmp
idivl
jmp
mov
jmp
movhps
add
push
inc
cmp
ss
je
add
push
or
pushf
push
push
ret
repnz
dec
ljmp
push
aam
sub
add
inc
cmp
push
out
sbbb
add
mov
push
lea
xchg
jae
push
or
imul
adc
push
cmc
daa
inc
push
pop
hlt
jnp
add
inc
and
push
mov
adc
test
fisubl
jg
mov
mov
xchg
stc
add
pop
or
mov
pop
push
push
and
orl
cmpsl
xchg
adc
dec
iret
dec
sub
cmovb
xchg
bound
adc
sub
mov
pop
or
orl
insb
leave
jg
adc
jno
cmp
lret
dec
inc
ret
aam
mov
push
jmp
pusha
inc
es
inc
add
and
push
and
aas
push
or
add
je
orl
or
movsl
sub
mov
xchg
jbe
mov
mov
adc
ret
inc
or
or
adc
dec
jl
pop
jle
dec
call
arpl
sbb
mov
mov
andl
sbbl
adc
inc
lea
xchg
fists
mov
mov
std
loop
dec
aaa
mov
loopne
nop
xchg
imul
mov
add
cld
xchg
lret
inc
decl
push
xchg
adc
pusha
sub
jmp
mov
or
jge
push
jne
testb
inc
pop
pop
add
out
xchg
cs
ret
ljmp
mov
insl
dec
or
mov
fisubrs
js
loope
lea
mov
pushf
mov
test
push
and
negl
mov
cmp
xor
mov
insb
add
inc
mov
mov
or
push
pop
idivb
fisttpl
xor
hlt
and
and
push
adc
repnz
adc
adc
das
popf
xchg
jp
lret
pop
sub
push
cwtl
mov
xor
jb
sarb
bound
aaa
mov
inc
sub
shr
cmp
ljmp
xchg
adc
sbb
ljmp
or
jle
or
cwtl
sub
mov
jmp
out
sub
add
mov
adc
pop
repz
and
push
filds
pop
pop
mov
cmp
mov
popa
ja
add
mov
or
std
add
ss
mov
cmp
aad
movsb
add
cmp
push
push
jp
xchg
adc
stos
es
sbb
lods
pop
adcl
or
loop
jo
sbb
adc
mov
push
sbb
repz
mov
add
mov
and
dec
or
sub
pushf
outsl
inc
and
test
stos
call
xor
movsb
and
fstpl
popa
mov
inc
into
jne
inc
mov
test
xchg
and
inc
gs
outsb
fbld
popf
fnsave
lock
jge
adc
cmp
sub
jmp
lea
ret
or
mov
xchg
lea
rol
xchg
sub
daa
lcall
lahf
test
xchg
mov
push
xchg
fstpt
jbe
sub
or
and
or
imul
pop
std
or
gs
cmp
pop
jns
push
or
add
inc
jp
fdivrp
lret
push
jb
sub
loope
xchg
push
in
inc
jl
loopne
addb
inc
adc
inc
repz
ljmp
and
push
lods
mov
mov
pop
into
push
pushf
sub
nop
rorl
fs
das
les
or
jne
jge
xchg
xchg
xor
add
mov
adc
ret
mov
pushf
js
xchg
idiv
sbb
loop
roll
les
cmpl
ret
int
pusha
push
lods
call
mov
cmp
addr16
loop
pop
mov
fcomps
lcall
lcall
je
lfs
lcall
xchg
in
push
arpl
mov
aam
repnz
mulps
mov
dec
je
pusha
mov
sub
cmp
stc
push
inc
push
push
rorl
out
inc
gs
or
sbb
leave
adc
daa
jmp
hlt
rorl
and
xor
mov
pushf
mov
jge
into
lds
jmp
pop
call
or
idiv
push
jne
fisttpll
repnz
das
fyl2x
add
and
jmp
push
xor
dec
inc
outsl
inc
mov
push
xchg
out
adc
ss
aam
inc
shlb
add
or
rol
and
add
xor
es
sbb
adc
xor
inc
dec
inc
push
and
inc
cmp
pop
fnstenv
lods
cmp
lret
andl
fcmovnbe
add
out
mov
roll
push
inc
cmpsb
fnstenv
outsb
lret
and
push
push
call
pushl
push
stc
fldl
das
and
inc
shl
inc
and
daa
dec
nop
lods
mov
sbbb
cmp
xchg
daa
xor
inc
xchg
sbb
xchg
repz
sub
adc
jbe
or
xchg
xchg
test
scas
movsl
movsl
cwtl
push
push
pop
in
sub
dec
repz
sbb
jle
sub
cmpl
xchg
jl
iret
rorw
dec
pop
inc
call
dec
loop
sub
sub
aaa
inc
cwtl
imul
inc
ficompl
movsl
shll
sarl
into
into
sub
mov
xor
jmp
xor
jmp
push
xchg
inc
out
mov
jl
jbe
push
cld
mov
push
push
mov
mov
sahf
scas
lock
lret
push
push
shl
inc
or
adc
xlat
inc
in
mov
push
mov
sub
loope
adcl
insb
cmc
or
jmp
xchg
mov
mov
and
push
jle
gs
je
sti
mov
not
sub
call
fbstp
mov
fdivrl
out
ja
mov
test
test
sub
pop
mov
aas
cmp
and
xchg
movl
cmp
xchg
jo
ja
jae
ret
cmp
xor
lret
data16
sub
inc
movsb
cmp
sbb
xor
icebp
push
adc
into
xchg
fs
add
jecxz
out
cmp
jnp
and
in
and
push
add
mov
xchg
add
adc
shrl
decb
adc
cmp
pop
mov
push
mov
mov
lods
int3
aam
sub
xchg
out
inc
sbb
imul
xchg
xchg
sub
pop
fwait
push
adc
dec
inc
aas
sub
cmp
mov
fwait
sahf
das
push
push
xor
pop
adc
and
ljmp
scas
bound
inc
xlat
or
fsts
into
inc
loope
jecxz
addr16
add
add
jne
pop
jne
mov
mov
popf
mov
pop
fistpl
jne
dec
pop
mov
cmp
push
jbe
or
insb
js
mov
sub
mov
push
mov
fs
add
jg
jmp
or
cmp
aaa
daa
xor
xor
ds
xchg
lds
stc
mov
bound
les
adc
cld
xchg
pop
sbb
inc
dec
jne
or
sbb
push
imul
shrb
sbb
xchg
and
insb
movsl
dec
lret
adc
pop
xchg
addr16
fst
mov
add
jnp
adc
out
jecxz
mov
xlat
inc
in
cmpb
out
and
inc
jl
lods
xchg
cmp
cmpsl
add
ret
cs
ja
fidivl
inc
sarb
test
mov
hlt
lea
xlat
xchg
fnstcw
shll
push
add
mov
add
dec
sbb
xlat
dec
jmp
sub
pop
popf
icebp
fwait
xchg
push
clc
lock
xorb
mov
push
cltd
int
icebp
cs
pextrw
imul
push
pusha
adc
jns
int
test
xchg
hlt
inc
xchg
mov
cmp
adc
test
in
clc
sub
mov
in
hlt
xchg
dec
insb
or
xor
inc
test
cmpsb
rcll
mov
xor
inc
movsb
enter
adc
lcall
jmp
sbb
dec
dec
pop
les
sar
inc
das
jmp
adc
ficoms
dec
mov
push
test
inc
call
mov
inc
cli
xchg
jg
lods
pop
xor
xchg
icebp
jecxz
ja
inc
dec
shr
or
add
int3
leave
dec
jle
ds
pop
xlat
rorb
mov
adc
push
and
test
enter
mov
popa
jb
sub
push
mull
sbb
jge
add
xchg
xchg
mov
lods
dec
test
or
jb
adc
in
in
xor
push
jnp
shll
stc
lahf
push
push
xor
dec
inc
jne
clc
arpl
mov
mov
sbb
and
push
xchg
out
test
js
fnsave
sub
repz
push
mov
jmp
adc
pop
inc
push
ds
cmp
fisubrl
jle
dec
push
scas
xchg
sub
out
lret
adc
stos
push
loopne
inc
test
jb
inc
push
mov
sub
sub
dec
daa
sub
stos
or
stos
pop
fs
rclb
int3
push
xorl
insl
jns
jnp
push
loope
jb
mov
inc
test
fs
xchg
fldz
idivl
das
add
fwait
pop
loop
jne
pop
cmp
inc
inc
and
stos
es
sub
dec
and
inc
mov
or
push
or
mov
and
es
adc
ja
mov
sub
and
pop
and
imul
mov
cmp
in
and
daa
push
aam
daa
fldl
mov
push
das
inc
add
dec
ss
cmpsb
lret
jae
in
jne
and
push
mov
lods
rol
outsl
jbe
mov
adc
sahf
fs
push
xchg
cmpb
pop
int3
jbe
dec
btr
push
mov
mov
jne
mov
jecxz
xchg
jmp
call
or
mov
pop
stos
xchg
xchg
and
shrb
mov
les
jne
xchg
shlb
pop
negl
mov
xchg
push
or
daa
push
jne
push
mov
adc
push
dec
adc
orl
lds
cmpsb
cmp
push
or
and
sbb
lret
scas
sub
pusha
inc
cmp
and
test
jne
lret
call
mov
xor
js
inc
mov
ds
dec
xchg
jno
pushf
push
pop
mov
sqrtps
in
data16
mov
jnp
dec
sub
adc
iret
pop
por
aad
shll
cmp
and
inc
scas
dec
sub
xor
pop
addr16
sbb
call
cmpsb
sub
imul
push
adc
loop
adc
xchg
stc
add
adc
inc
xchg
test
movsb
cli
and
or
jo
je
mov
jno
push
cld
ds
clc
jg
sbb
mov
jb
or
pop
fs
sub
mov
popa
test
cmp
xchg
mov
imul
clc
mov
add
or
mov
jnp
mov
mov
mov
mov
js
push
sub
mov
push
adc
cmp
xchg
push
mov
mov
js
out
fs
enter
xchg
adc
dec
shrb
pop
and
nop
shlb
enter
daa
xchg
sbb
fisttps
pop
push
sahf
push
adc
repz
jl
xchg
and
jg
cltd
sbb
pushf
mov
mov
test
jae
or
xchg
dec
fsubrl
mov
jge
adc
lods
es
pop
mov
adc
decl
clc
test
ret
mov
push
inc
jp
iret
test
mov
adc
xchg
cmp
rcr
jae
and
pop
mov
icebp
sbb
daa
lret
push
mov
inc
nop
or
push
sbb
je
mov
dec
stc
mov
inc
enter
mov
jge
movsl
jecxz
in
cmpsb
push
jmp
xor
or
enter
aad
xchg
inc
dec
clc
seto
enter
imul
push
xlat
dec
fcompl
std
jae
and
and
fistpll
and
sbb
in
sahf
cld
jns
cmc
dec
cmp
lock
clc
pop
gs
mov
ret
adc
adc
lods
mov
and
rclb
std
add
pop
push
test
mov
cvtps2pi
mov
push
loope
out
push
lcall
cmp
mov
stos
hlt
outsb
fs
and
test
out
push
mov
jmp
cmpl
imul
in
sbb
or
jnp
lods
pushf
rcr
fidivrl
or
pusha
jmp
or
xchg
add
test
xchg
stos
inc
lret
adcb
jns
xor
dec
cld
jne
push
xchg
gs
jbe
jb
cmp
cmp
and
push
pop
xchg
call
xor
pop
ja
hlt
push
mov
or
push
faddp
mov
jl
and
push
sbb
imul
jle
pop
jnp
rcll
gs
xchg
es
jnp
push
sbb
pop
stos
notl
sbb
sbb
push
in
adc
jge
lock
lea
aam
mov
jge
aad
mov
mov
mov
adc
push
cmp
fisubl
mov
cld
shlb
or
jmp
popf
adc
fs
pop
pop
jle
cmpsb
cmc
push
cmpb
jp
daa
outsl
jno
mov
jg
cmpsl
inc
popf
lods
push
and
pop
sbb
dec
dec
mov
add
push
test
ljmp
xchg
inc
dec
dec
sub
data16
push
sahf
push
test
nop
mov
sub
call
in
add
push
jb
aas
and
fcoms
test
or
lods
int3
mov
and
popf
pop
mov
loopne
sbb
je
pop
jae
sub
mov
aam
mov
aaa
and
mov
push
add
movsb
icebp
pop
jae
xlat
mov
ret
adc
and
lcall
out
mov
not
clc
popa
jbe
dec
and
or
out
mov
mov
pop
stc
stc
push
sub
cltd
inc
mov
jbe
sti
pop
mov
imul
hlt
test
movsl
repz
icebp
sbb
jne
and
and
or
add
jmp
gs
cmp
sti
repnz
mov
sarl
inc
inc
mov
mov
mov
fcoml
mov
sub
or
mov
push
add
test
scas
dec
and
roll
add
test
cmpsl
or
jmp
push
lret
gs
in
adc
sahf
and
jo
sbb
mov
mov
mov
sub
or
inc
dec
repz
call
stos
decl
xor
cmp
jl
test
jne
xor
xor
sub
or
xchg
jne
insl
jl
test
mov
test
sub
and
ds
das
iret
and
rcrb
mov
data16
int3
gs
icebp
pop
fwait
mov
test
bnd
and
pop
enter
pop
adc
push
mov
loope
cmp
cmp
aas
lret
inc
inc
push
jmp
pop
es
pop
movq
mov
xchg
les
je
int3
adc
cmp
dec
sbb
jns
popf
or
fpatan
jns
int
or
test
nop
or
rcll
or
push
cld
in
adc
push
xor
fwait
adc
and
add
jb
push
push
lds
mov
xchg
adc
dec
mov
pop
jp
or
mov
sub
dec
inc
or
dec
push
mov
xchg
mov
hlt
push
test
pop
in
sti
ss
pop
push
sbb
ret
fnstcw
push
pop
in
jl
clc
fstl
mov
xlat
jae
or
shlb
fdivs
mov
inc
and
or
es
aaa
sbb
out
lods
and
imul
rcrl
push
mov
je
daa
and
rcll
icebp
pop
jp
mov
rolb
in
test
jp
adc
mov
pop
test
inc
movsl
add
pop
and
dec
sbb
and
out
mov
mov
sub
jb
incb
enter
cmp
xor
xchg
mov
pop
sub
jnp
aaa
jle
stos
in
push
pop
jne
mov
aas
stc
test
cmp
dec
hlt
loope
cmp
insb
push
mov
ljmp
adc
cmp
xchg
fists
jg
insl
pop
pop
ljmp
push
mov
xchg
inc
imul
xor
jg
pop
pop
mov
push
es
stos
es
ljmp
inc
sbb
mov
or
mov
cltd
inc
das
fs
loop
mov
xor
sub
xchg
mov
xchg
or
mov
xor
xor
add
clc
sbb
jg
je
loope
push
out
xor
cmp
and
imul
outsb
sbb
adc
pop
xor
or
js
add
ja
inc
push
pop
and
inc
jne
aam
inc
xchg
mov
fwait
clc
add
or
add
push
push
add
pop
scas
repz
shll
scas
ljmp
lods
movsl
inc
push
sti
and
and
add
sbb
jmp
popa
adc
push
add
icebp
sbb
mov
cmp
inc
test
pop
adc
lods
cmp
movsb
xor
mov
dec
xor
jne
and
mov
dec
and
das
and
lods
xchg
push
pusha
push
stc
mov
sbb
jne
sbb
test
sub
mov
pop
dec
jb
push
icebp
popa
das
iret
aas
push
jmp
cmp
inc
dec
add
movl
and
cwtl
arpl
lods
imul
nop
and
lret
imul
test
push
xlat
addr16
mov
cltd
andb
cli
loopne
jle
repnz
sar
insl
push
jns
and
arpl
decl
js
xlat
push
mov
aam
stos
icebp
cld
sbb
mov
sbb
fistpll
cmp
je
cmp
cmpb
pop
pusha
jnp
mov
pop
add
ret
mov
in
mulps
rorl
cli
mov
dec
jmp
jo
hlt
pusha
jge
imul
cltd
push
dec
or
xchg
cld
je
ds
add
imul
insb
jp
dec
aad
pop
lret
fmul
and
jne
xlat
test
fisttpll
dec
jmp
mov
lods
pop
sub
ja
add
mov
or
iret
push
jg
mov
pop
lods
push
lahf
addr16
lea
xchg
rcrb
mov
and
adc
pop
ret
jb
cs
jno
jmp
push
inc
adc
inc
or
call
pcmpgtd
sub
pop
xchg
xor
je
push
jne
mov
es
adc
cmp
xchg
pop
cwtl
daa
nop
jge
push
lea
mov
jmp
adc
jle
push
push
pushf
je
fsubrl
pop
in
pop
pop
stos
inc
je
test
movsl
cmc
xchg
inc
arpl
dec
inc
mov
mov
and
xchg
push
addr16
call
and
out
imul
pop
push
and
jg
add
push
push
bound
and
adc
fimull
xor
mov
les
jp
add
push
jno
push
cmpsb
mov
pop
in
mov
xchg
cmpsb
movsl
push
adc
sub
fmuls
ret
insb
bound
stos
push
jmp
or
jns
movsb
xchg
dec
mov
inc
push
push
cmovle
scas
or
rorb
pop
push
inc
cmp
add
push
scas
sub
xor
lea
xchg
mov
subb
aam
dec
adc
sbb
lods
xchg
mov
jb
jo
shlb
call
add
and
mov
cmpsl
insl
fistl
xor
pushf
inc
setno
jmp
xlat
in
call
pop
sbb
out
mov
or
jne
pusha
xchg
add
notl
cmp
xchg
push
movsb
jmp
mov
mov
fs
in
or
dec
sbb
dec
adc
dec
cld
mov
push
add
inc
cli
push
subl
jns
or
or
iret
sub
mov
sub
fidivrl
adc
mov
sub
movsb
cld
jecxz
adc
add
stos
xor
adc
sub
scas
cmp
push
ss
arpl
cmp
adc
adc
push
cmp
cmp
cmp
fmuls
test
subb
in
dec
push
xor
xor
mov
gs
adc
pop
jecxz,pn
and
mov
xchg
or
ljmp
adc
sarb
ds
pop
push
or
cld
xor
into
cmp
out
xor
adc
je
push
mov
data16
xchg
fstl
ds
pop
rorb
fisttpl
add
cmp
mov
sub
data16
popa
cmp
into
out
or
push
sbb
sub
push
mov
sbb
sub
mov
cmpsb
mov
inc
test
xor
adcl
pop
xchg
pop
xchg
dec
dec
cld
or
and
lock
cmpsl
divb
hlt
adc
cld
imul
ficompl
cli
mov
sahf
mov
jmp
push
bound
imul
mov
es
pushf
adc
push
lock
push
imul
or
imul
invd
sub
stos
test
xchg
mov
or
loop
jns
test
add
mov
jne
mov
add
daa
mov
sbb
clc
add
xlat
fucomi
rcr
ja
inc
mov
insb
arpl
jne
pop
pop
push
push
adc
adc
stc
imul
hlt
fildl
ds
or
dec
push
cld
push
in
sbb
mov
pop
sbb
push
outsb
lock
jne
xchg
das
xchg
imul
mov
pop
push
sbb
or
dec
or
mov
fnsave
fsts
dec
imul
lret
loope
mov
mov
mov
aas
mov
pusha
push
xchg
mov
pop
sbbl
lret
sub
mov
lret
and
fbstp
test
outsb
cmp
cmp
cmp
dec
add
outsb
out
and
sub
int
adc
pop
pop
mov
jns
and
mov
jo
and
shrl
sub
int
jg
mov
and
xchg
dec
das
jne
fists
jge
loop
mov
adcb
cmp
stos
xlat
les
xchg
out
mov
xchg
incl
je
shrb
stos
nop
inc
mov
jmp
jmp
mov
inc
adc
inc
or
or
or
ljmp
enter
jbe
inc
mov
cmp
adc
sti
sahf
lods
push
pop
les
xchg
xchg
movsl
jne
and
test
out
sub
lcall
lret
ret
stc
mov
fmuls
push
jb
inc
mov
sbb
sub
ljmp
mov
pop
push
inc
in
or
call
cmp
sub
sub
inc
lock
js
in
or
cmp
adc
adc
push
cltd
movsl
out
neg
and
adc
add
mov
inc
aam
adcb
mov
xor
jo
mov
out
mov
pop
popf
into
pop
and
mov
inc
lock
dec
mov
dec
inc
mov
out
sub
add
sbb
pusha
sbb
push
aaa
movb
push
or
cmp
add
adc
jne
sbbl
int
or
shll
or
out
sub
outsb
xor
jmp
popa
mov
add
adc
fldcw
mov
dec
shll
int3
inc
mov
cs
push
xchg
or
mov
pop
arpl
dec
xor
leave
in
rolb
pop
pop
ljmp
sub
or
or
cmpsl
or
nop
mov
mov
sbb
shlb
push
or
fsubrl
jle
sbb
push
movsl
fadds
pop
push
dec
add
push
int3
push
test
push
mov
stos
adc
xchg
pop
loope
mov
push
sbb
rorb
adc
rclb
in
popa
roll
add
cli
mov
incl
dec
cmpb
loopne
sbb
mov
or
faddl
and
jmp
divb
inc
int3
cli
xchg
sbb
inc
mov
xchg
inc
or
hlt
or
aas
inc
inc
or
and
sbb
inc
add
add
add
add
lahf
notb
jmp
mov
loope
jnp
lods
dec
stos
iret
fcompl
mov
rorl
sub
jb
sti
cwtl
ret
pop
cmp
mov
les
xchg
cmpsl
push
sub
mov
repz
cmp
inc
sub
xchg
jle
in
jb
enter
jnp
test
pop
mov
xchg
pop
push
imul
pop
add
cs
push
mov
jbe
sub
adc
mov
stos
cmp
leave
adcb
addr16
inc
test
in
fs
insl
test
jp
sbb
push
icebp
aaa
add
xor
lcall
dec
pop
or
dec
int3
sub
push
cmp
loop
push
mov
stc
lock
dec
cs
jbe
in
and
lcall
xchg
bnd
sub
lods
inc
adc
add
jle
mov
dec
xor
ror
rcll
add
cmp
xchg
jo
pop
cld
sub
and
orb
mov
push
inc
dec
aam
int3
or
test
loop
adc
xchg
sbbl
cmp
mov
jb
xor
adc
and
or
popf
pop
jbe
cmp
mov
test
sub
nop
gs
dec
scas
adc
push
movsb
jp
testb
pop
addl
fadds
fiaddl
push
lods
rolb
mov
push
arpl
push
add
lea
mov
je
repnz
xchg
or
mov
incl
sub
adc
and
mov
movsb
scas
ljmp
cmp
mov
sub
dec
imul
push
std
and
sbb
jns
dec
adc
mov
dec
xor
or
push
sub
in
or
pop
hlt
sub
jne
xor
movsl
cmpsl
add
insb
inc
aaa
push
xor
xor
aam
lret
movsl
std
nop
xchg
xor
stos
adc
add
push
fs
mov
cmp
push
ds
push
aam
and
adc
mov
push
fdiv
rorb
adc
cmp
xor
sbb
or
adc
mov
lods
in
adc
inc
or
dec
xor
movsl
xor
or
arpl
enter
dec
push
xor
sub
arpl
xor
fmull
fsubrs
sbb
push
daa
out
scas
cmp
outsb
dec
mov
xchg
cmp
in
test
out
jb
test
jmp
arpl
push
or
cmpsb
xor
ret
hlt
jecxz
pop
cmp
fsubs
mov
pop
push
jmp
fs
ds
lret
push
pop
movsl
jo
mov
stos
mov
push
xchg
stos
lds
ljmp
fsts
sub
lcall
in
adc
cmp
imul
xchg
insb
adc
add
xor
loopne
inc
or
or
icebp
fsts
or
sbb
jmp
mov
in
dec
dec
xchg
stc
mov
fistpll
or
ja
inc
push
mov
push
jmp
inc
not
and
stc
sub
scas
add
shll
jp
loop
fcomip
in
in
rorb
ds
adc
pop
or
mov
out
dec
push
jne
mov
dec
jne
es
jno
pop
ja
lock
jl
mov
test
sahf
adc
pop
adc
push
mov
sbb
mov
addr16
mov
and
xchg
in
mov
push
fs
leave
adc
and
jecxz
adc
mov
and
ljmp
addb
or
mov
sub
sub
in
sub
jo
cmpsl
adc
mov
orl
adc
mov
mov
mov
into
and
mov
or
push
xchg
stc
mov
sub
lods
js
mov
out
adc
xor
and
lret
loop
int3
dec
pusha
or
mov
add
repz
das
hlt
xor
movsl
stos
test
scas
popa
xor
or
and
push
orb
sub
cmpl
sti
leave
test
ds
xchg
mov
xchg
mov
scas
lods
cld
lret
scas
clc
out
shll
dec
icebp
orb
bnd
inc
add
int3
xchg
pop
xchg
cmp
je
adc
cmp
or
push
or
xor
pop
adc
adc
add
jb
outsl
repz
jbe
and
lock
cmp
sub
mov
sbb
mov
xchg
push
pop
dec
lods
in
les
push
sti
inc
dec
rcrb
add
xor
push
stc
sahf
mov
push
adc
adc
into
mov
ds
and
scas
lods
pop
js
repnz
fxch
push
xor
movb
daa
jno
cltd
fldenv
orl
push
xchg
loop,pn
cmp
or
subb
adc
scas
sbb
jg
mov
mov
inc
jg
dec
sub
mov
cmp
mov
xchg
cmp
sub
sbb
jle
gs
push
push
ret
ja
fists
dec
sahf
push
loopne
add
mov
and
popa
push
bound
dec
cli
daa
clc
push
adc
cmp
jge
jp
cmp
jno
push
stc
cmp
xor
insb
inc
jge
nop
xor
sbb
lahf
cli
nop
dec
sbb
sub
sub
incb
xlat
stos
test
leave
lods
loope
add
lds
inc
rorb
test
sbb
dec
pop
sub
add
jb
jl
das
fsubp
ljmp
decl
test
pop
out
std
add
aas
push
fists
cli
dec
insl
pop
filds
lods
push
test
inc
pop
pop
or
es
popf
jne
das
pop
dec
stos
or
into
addb
addl
add
movsl
dec
adc
and
xor
lret
dec
pop
rorl
push
jmp
push
pop
call
push
push
push
add
insl
push
inc
dec
ret
and
flds
fs
cmp
pop
mov
adc
rorl
sub
call
or
lret
cmc
fldl
repz
dec
loopne
icebp
adc
sbb
sub
dec
mov
adc
mov
repz
out
fisttpll
cmp
dec
movsb
scas
jnp
push
subb
xchg
or
or
aam
pop
sbb
test
push
jmp
dec
jp
jl
dec
sub
mov
aam
arpl
sbbl
sbbl
pop
push
and
mov
or
addb
out
das
mov
dec
ljmp
mov
pop
loop,pt
push
push
ja
test
cmp
add
or
push
push
or
js
pop
rolb
pushf
or
push
or
arpl
cmpb
stos
push
mov
dec
pushf
cwtl
pop
popf
notl
push
inc
xor
push
dec
xchg
push
fs
mov
mov
mov
xchg
pop
int
sahf
and
scas
gs
mov
mov
push
mov
nop
cmp
ja
insb
arpl
add
pop
shlb
pop
stos
popf
adc
push
mov
int3
movsl
popa
mov
push
push
mov
inc
push
fildl
pusha
scas
jns
sbb
mov
sbb
arpl
nop
xor
push
scas
out
shrl
imul
outsb
sbb
inc
xchg
jb
std
sub
fists
push
imul
cmp
test
popf
push
cmp
out
jne
inc
int
movb
in
icebp
or
out
adc
lret
inc
inc
insb
subb
pop
cmp
imul
cltd
pop
jg
syscall
add
sub
jle
call
sub
lret
andb
lcall
test
push
movsb
mov
push
xchg
enter
push
pop
jne
cmpsl
xchg
test
jb
pushf
and
pop
push
fnsetpm(287
daa
jbe
or
ja
pop
test
mov
push
stos
sarb
lock
dec
mov
jecxz
sbb
xchg
daa
xlat
ds
inc
sbb
inc
test
mov
repz
adc
adc
adc
fists
cmpsl
mov
mov
fucom
and
push
add
jmp
mov
push
sub
mov
mov
not
out
je
je
scas
test
mov
cmp
mov
inc
ficoml
call
and
jne
or
inc
sub
cmp
daa
jle
jne
mov
loop
mov
pop
jne
mov
jmp
mov
enter
jne
cmpl
xchg
addr16
mov
cmpsb
jns
movsl
ret
dec
jno
dec
aam
push
inc
dec
adc
and
or
fdivrp
sbb
or
mov
rcrb
cld
add
and
test
xchg
mov
inc
lcall
std
jo
fdivs
jne
inc
scas
dec
mov
jle
nop
mov
mov
cmpsl
push
push
aad
mov
jmp
mulb
xrelease
js
push
add
les
pop
mov
ret
and
push
jle
xchg
clc
nop
push
iret
push
push
cmc
dec
repnz
xchg
arpl
dec
jle
push
mov
pop
cmc
sbb
es
lods
lock
mov
negb
dec
and
shlb
inc
sbbl
push
push
imul
aam
aaa
mov
repz
dec
adc
mov
loopne
add
adc
rcpps
adc
leave
mov
mov
jnp
dec
xchg
add
sub
cmc
sbb
rorl
or
and
dec
xor
mov
in
fimuls
fisttps
inc
js
mov
js
pop
setne
lods
inc
cmp
mov
and
push
xor
inc
cmp
mov
gs
lea
ds
push
cmp
mov
cmp
imul
jo
adc
addl
ljmp
ja
dec
dec
data16
inc
add
cmpsb
adc
adc
cmp
push
sbb
jp
and
test
dec
mov
popa
adc
add
fdiv
add
js
sub
xchg
and
adc
cmpsb
mov
pop
or
or
rcrb
jne
outsb
sub
jp
xor
mov
adc
rolb
or
adc
xor
outsl
xchg
sub
mov
clc
dec
jno
push
adc
cmp
jge
je
jo
movsl
sub
fldcw
push
and
out
add
push
dec
push
in
xor
rorb
sbb
call
cld
inc
lret
and
sub
out
pop
inc
pop
cmp
inc
out
and
push
sbb
or
jmp
mov
adc
xor
xchg
aam
pop
or
mov
pop
push
negl
lret
and
or
jne
clc
insb
mov
nop
lret
dec
push
adc
push
or
adc
or
pop
pop
mov
int3
sub
add
pop
into
dec
inc
pop
jg
arpl
inc
pop
mov
js
aas
xchg
jo
pop
sbb
aam
sub
inc
dec
hlt
jg
das
mov
and
mov
mov
adc
adc
adc
or
hlt
add
xchg
inc
add
add
out
lods
cmpsl
addb
xor
xor
mov
fmuls
aam
fld
sbb
xchg
add
repnz
jmp
loope
lods
mov
xor
movhps
mov
lods
xchg
cli
adc
lods
lds
in
imul
js
mov
enter
jno
lret
push
jp
push
sub
mov
dec
xor
add
add
xor
inc
scas
adc
cld
lcall
mov
orb
in
push
outsb
dec
mov
xor
xchg
in
mov
aas
dec
repnz
pop
mov
icebp
inc
add
add
inc
inc
jl
pushl
inc
insb
or
js
add
cld
call
cmp
cmp
repnz
jnp
insl
dec
clc
cli
mov
iret
mov
adc
xor
inc
test
ret
pop
pop
scas
cmp
xchg
fyl2xp1
loop
fstl
xor
jp
clc
mov
test
lea
inc
scas
inc
add
push
cmpsl
xlat
sub
push
stos
sub
fucomp
les
fs
dec
sbb
popf
mov
call
dec
les
jmp
jbe
and
mov
pop
xor
pop
mov
pop
outsl
into
decb
cmc
inc
mull
mov
shlb
jg
push
sti
divl
dec
mov
xor
mov
mov
xchg
sti
inc
jmp
inc
fs
mov
test
jp
ret
inc
pop
adc
cltd
out
fistpll
mov
bound
ret
cmpb
pop
sbb
or
jne
jmp
pop
inc
ret
add
rclb
out
loopne
rorb
lea
pop
dec
lahf
testb
and
ret
mull
mov
push
orl
xor
stos
mov
dec
add
lcall
leave
mov
shl
mov
cmpb
aaa
fs
sbb
mov
mov
inc
adc
jmp
cli
adc
lret
out
movsl
mov
test
adc
sub
add
aam
lret
mov
fidivl
mov
push
call
test
aaa
cmp
test
mov
xchg
sarb
inc
scas
jmp
sbb
notl
push
adc
xor
adc
fmull
push
orb
pushf
dec
lock
into
xchg
pop
fadds
cld
or
inc
adc
movl
dec
inc
jno
lods
add
pop
dec
adc
dec
daa
loopne
push
ja
xor
fdivl
cs
add
mov
cmp
lcall
adc
sbb
insb
aaa
xor
inc
sbb
or
adc
xchg
not
push
and
xchg
jmp
or
mov
push
daa
sbb
repnz
cmpsb
sub
scas
sub
jg
fcoml
mov
lahf
fistpll
dec
dec
cmp
sbb
jmp
mov
push
stc
jno
push
cmova
js
jmp
pop
fldl
stos
test
sbb
fdivl
xchg
hlt
call
fsts
adc
test
dec
or
fcomps
pop
sbb
pop
sahf
mov
inc
sti
push
pop
jmp
sub
pop
mov
in
and
cmp
push
addl
push
mov
int
cmp
leave
inc
into
stc
gs
bound
xchg
jl,pn
dec
adc
sbb
or
mov
jne
lock
push
es
sub
jne
inc
addb
xor
std
outsl
xor
xor
imul
push
sbb
mov
pop
sbb
push
dec
and
imul
adc
fwait
push
std
and
jb
xor
xor
push
cld
cmp
sbb
shlb
adc
mov
xchg
add
pusha
in
sub
cmpsb
and
jge
mov
enter
or
jns
ret
mov
jp
mov
jg
pop
lods
dec
iret
pop
je
lock
ss
enter
inc
push
add
loopne
push
cmpsl
jle
jmp
jnp
mov
ret
jb
adc
adc
pop
dec
dec
scas
ret
and
gs
repnz
call
jno
push
adc
jecxz
lret
out
sub
push
push
leave
pop
dec
mov
movsb
cli
fsubrl
imul
mov
cld
push
out
fimuls
push
mov
notb
cwtl
cmp
pop
adc
push
mov
or
das
jmp
add
clc
imul
push
mov
cltd
jo
ret
jmp
test
mov
and
movsl
cmp
lock
imul
lods
lret
mov
or
or
ss
adc
in
dec
cmp
sarl
dec
aam
cmp
dec
stos
cmp
lea
rolb
mov
jge
in
cmp
or
and
lea
daa
push
jnp
mov
xchg
mov
sar
xchg
inc
aaa
jmp
mov
fcomps
sbb
test
js
jns
and
sahf
adc
shrl
sub
jo
xchg
sub
test
xchg
enter
mov
adc
push
lahf
pusha
lea
mov
adc
adc
mov
adc
repnz
dec
movsb
fldcw
jmp
notl
int
sub
xchg
in
adc
add
jae
sbb
inc
pop
jmp
and
fstpt
mov
ljmp
xor
adc
push
sub
jmp
inc
inc
adc
subb
and
daa
push
ret
mov
cmp
mov
mov
pop
lea
add
xor
movl
or
sub
jg
or
sbb
out
cmpsl
pop
in
dec
pop
imul
cmp
push
out
mov
pop
or
leave
adc
sbb
and
adc
dec
packuswb
hlt
addr16
or
outsb
adcl
inc
adc
dec
adc
adc
push
push
icebp
inc
push
cmp
loope
inc
jle
adc
jecxz
pop
fstpl
imul
sbb
roll
mov
lods
or
popa
dec
arpl
sub
pop
pop
lea
jle
out
add
dec
sbb
fisubl
or
add
out
adc
cmovg
cwtl
sub
fcompl
dec
out
adc
cmp
dec
adc
push
aad
test
ficoml
aam
push
ffree
xchg
dec
and
sbb
pop
test
mov
xor
add
sbb
movsb
jae
iret
popw
xor
cmp
xor
ljmp
mov
mov
shrb
call
sahf
push
negb
push
xchg
in
sub
aam
adc
or
and
sub
and
cmc
cmp
ret
aas
int3
into
adc
mov
jne
stos
mov
mov
popf
push
adc
ret
mov
pop
test
les
push
mov
dec
fs
leave
outsb
jl
inc
in
mov
out
sar
add
and
lods
adc
pop
out
test
aad
xor
aam
xor
insb
adc
mov
pop
pop
cld
adcl
sub
clc
sbb
cltd
fistl
in
cmp
sub
pop
inc
or
inc
sti
dec
sbb
add
jnp
gs
ds
adcl
cmpsb
cmpsl
cli
sbb
hlt
mov
jae
shlb
jns
orl
sub
or
and
mov
sub
scas
or
pop
add
pop
es
mov
or
dec
jne
int
xchg
clc
pop
xor
and
lea
cs
cwtl
sub
es
mov
jns
mov
bound
push
lods
cmp
mov
mov
adc
pop
push
sbb
dec
gs
sbb
jae
cmp
stos
aaa
sub
imul
jne
dec
xchg
xor
out
pop
adc
dec
push
adc
xchg
mov
xchg
leave
push
add
mov
adc
out
adc
stos
inc
mov
mov
fldcw
xor
aad
dec
or
jns
push
shlb
jge
lock
mov
hlt
adc
test
mov
rolb
or
inc
adc
jmp
sbb
add
or
loope
clc
cs
pop
dec
mov
jl
push
xor
jno
js
stos
pop
sub
push
lods
jnp
mov
push
pop
stos
xlat
clc
cmp
xor
adcl
enter
rclb
dec
and
xor
pop
cmp
jle
jb
jl
inc
sub
xchg
or
cmp
gs
and
sub
jg
scas
or
dec
jbe
out
stos
cmove
orb
es
nop
cmpsb
iret
popf
sbb
cs
test
out
dec
sbb
pop
or
cmp
cmp
sub
movsb
popf
xchg
bound
fdiv
xchg
testl
jns
cmp
movsb
dec
mov
ja
mov
test
mov
iret
test
jb
pop
inc
mov
clc
fmuls
adc
push
out
xchg
ja
leave
add
add
sbb
mov
and
lret
or
jmp
xchg
jle
push
lret
aam
loopne
push
push
enter
mov
pop
cwtl
cltd
jle
mov
data16
push
push
int3
in
xor
into
out
fs
lods
addl
push
dec
push
mov
dec
inc
incb
push
aas
dec
pop
dec
jmp
add
lret
icebp
ret
aaa
ret
mov
pusha
jmp
mov
pop
cld
popf
push
adc
and
lret
sub
lock
out
cmpsl
xor
fmuls
add
xlat
addr16
adc
and
imul
pop
movsb
stos
and
inc
push
inc
scas
inc
mov
push
mov
sbb
adc
lret
stos
mov
into
mov
xor
int3
xchg
js
adc
cmp
cld
clc
lret
mov
negb
int3
sub
mov
das
adc
pop
je
cmp
xchg
lahf
cmp
fcmovbe
or
jl
scas
dec
repz
into
sahf
ja
pop
push
hlt
push
push
mov
push
and
push
enter
sbb
decl
xchg
lahf
pop
and
mov
and
jno
push
int3
cmp
in
inc
mov
sub
subb
pop
outsl
sub
xor
jae
or
jne
adc
ds
jmp
mov
cmp
sub
push
push
mov
dec
pop
popl
sub
outsb
cmc
int3
popa
test
outsb
imul
test
shlb
dec
js
mov
inc
cmp
icebp
and
cmp
push
test
adc
aam
add
je
out
mov
out
loop
or
cmp
ficoml
sbb
lock
jae
push
push
xchg
cld
push
inc
inc
pop
std
xchg
loop
sbb
arpl
or
xchg
clc
xchg
ljmp
mov
ds
cli
mov
call
cmp
adcb
int
hlt
push
xchg
dec
ret
nop
push
shlb
lcall
xchg
adc
stc
xlat
jns
nop
insb
dec
lds
mov
pop
rcpps
mov
pop
xchg
movsl
mov
movsl
jle
leave
push
sbb
pusha
mov
mov
ror
inc
cmp
and
mov
into
mov
bnd
nop
scas
cmp
pop
jmp
jns
movsl
pop
xchg
pushl
inc
pushf
xor
push
adc
and
add
push
stos
push
adc
aam
and
push
or
and
jg
mov
pop
mov
das
cld
mov
mov
in
lret
inc
inc
enter
sub
scas
xor
fsubr
jp
nop
jmp
cld
je
fs
in
int
and
lret
adc
pop
jg
xor
sub
imul
popf
divb
push
and
mov
xchg
cmp
dec
ret
shll
cmpsb
push
mov
jo
mov
and
jmp
push
adc
inc
lock
mov
adcl
push
mov
push
mov
mov
cmc
lods
jl
or
cmp
in
jg
movsl
adc
jge
or
adc
repnz
jmp
inc
cmp
add
xchg
and
jl
mov
jmp
sub
mov
jbe
sub
hlt
jg
mov
mov
shll
adc
push
and
fcmovu
ja
mov
movsl
shr
dec
shl
and
or
scas
int3
mov
cmpsb
or
addl
mov
push
adc
xlat
stos
dec
push
pop
pop
push
jb
leave
ret
and
push
sahf
rclb
in
and
lds
inc
adc
dec
mov
adc
inc
sub
sbb
rorb
scas
popf
push
or
or
lock
cli
push
in
inc
push
and
inc
sarl
sarb
fwait
push
mov
rorb
movsb
push
dec
mov
sbb
in
xor
inc
xor
inc
scas
inc
inc
ss
xor
popl
movsb
jmp
lods
mov
movsl
aaa
les
decb
jnp
jge
jecxz
and
and
das
ljmp
loopne
dec
cmp
int
cs
testb
pop
das
xchg
rcr
push
imul
mov
or
mov
ljmp
sbb
or
lret
ss
sub
add
inc
push
jl
out
mov
push
push
push
pop
push
call
dec
sbb
or
fs
add
mov
or
pop
pop
shlb
in
pop
xlat
dec
push
and
add
je
call
add
sub
dec
dec
jo,pn
sub
gs
ret
sbb
or
push
mov
enter
cmpl
push
aaa
cmovs
mov
adc
js
pusha
jno
add
andb
test
mov
mov
push
cmp
add
jmp
mov
push
inc
shrb
mov
stos
mov
lahf
mov
jge
mov
xchg
mov
adc
mov
call
push
out
and
inc
add
adc
dec
enter
cwtl
sbb
inc
adc
leave
cmp
mov
dec
shll
push
adc
fcompl
or
ret
inc
cs
das
mov
xor
mov
dec
and
fstl
das
push
push
adc
adc
call
es
and
cmp
pop
mov
cltd
adc
lods
mov
sar
sbb
or
lcall
testb
push
pop
lret
pop
and
push
sbb
cmpsb
xchg
adc
out
lods
add
jmp
jl
mov
adc
push
daa
das
mov
das
cmpsl
lock
push
or
sarb
cmp
lds
add
mov
add
adc
enter
cli
mov
push
pop
scas
cs
and
sbb
xchg
sbb
inc
xor
call
mov
pop
leave
scas
and
push
je
dec
jne
fadd
mov
rcrb
push
sarb
cltd
hlt
hlt
imul
orl
imul
sub
js
in
push
inc
sahf
and
push
and
lahf
sbb
adcb
lahf
xor
lret
cwtl
mov
jno
sub
js
imul
jge
scas
pop
xor
rcl
xchg
aaa
xor
xor
and
mov
sbbb
in
xor
pusha
popa
add
call
cmc
vmovddup
mov
sub
or
pop
les
or
or
mov
and
nop
scas
xchg
jmp
icebp
push
cmp
fs
imul
xor
std
sub
push
dec
sbb
pop
and
inc
adc
or
lods
and
and
lea
cmp
std
pusha
and
sbb
jae
mov
cmp
xor
push
lock
mov
adc
mov
push
or
jg
sub
repnz
pusha
pop
or
and
mov
cmpb
mov
int
mov
jmp
adc
imul
cmp
push
push
icebp
jmp
mov
xlat
stos
bound
adc
push
pop
mov
mov
pop
add
push
imul
fimull
or
lret
sbb
popa
mov
call
fdivr
mov
mov
dec
aam
push
dec
stos
out
sbb
popa
mov
sub
or
xchg
mov
adc
mov
sub
or
mov
inc
xor
adc
adc
pop
and
inc
repnz
adc
and
repnz
adc
idivl
dec
pop
lods
fidivl
bound
out
xor
xor
push
push
dec
dec
sub
sbb
cmp
imul
repnz
dec
sbb
je
mov
push
pop
dec
popa
jae
dec
adc
and
jbe
jb
imul
jne
sbb
aaa
push
dec
jo
adc
sub
ja
cmp
stos
and
sub
xor
inc
xchg
je
sbb
xchg
jb
addr16
inc
dec
jae
jae
or
dec
bound
data16
adc
cwtl
cmp
sbb
push
jle
and
xchg
ret
pop
in
cmpsb
lret
movsb
mov
mov
jl
mov
fistpl
out
mov
rcrb
add
push
xchg
push
mov
sub
std
xchg
mov
adc
adc
stc
flds
mov
cmp
cmp
add
test
sub
inc
mov
sub
ret
in
mov
cmp
movsb
xorb
mov
adc
lods
aam
loop
and
dec
popf
push
test
sub
or
inc
adc
andl
dec
and
hlt
int
arpl
ljmp
push
sub
cmp
xchg
or
add
sbb
les
fwait
ljmp
lods
imull
xor
jl
dec
clc
inc
into
xor
mov
cmp
cld
and
movsl
outsl
mov
mov
jp
leave
sbb
incb
dec
out
js
pop
testb
sub
lock
or
and
pop
cmp
sbbb
push
cmpsb
push
inc
loop
sub
sbb
addr16
adc
jecxz
adc
jle
jnp
cmp
lcall
or
adc
pop
arpl
and
mov
add
fadds
push
add
xchg
inc
movsb
xchg
dec
adc
sub
mov
andl
sub
in
xchg
mov
mov
shrb
lock
pop
pop
pop
es
or
fiadds
das
pop
jne
pop
mov
ljmp
out
jl
mov
jo
imul
lcall
test
adc
sbb
sub
pop
outsb
cs
les
call
call
inc
in
in
fcoml
sbb
push
add
cmp
incb
psraw
scas
mov
inc
mov
inc
adc
fstpl
and
inc
popa
and
fbstp
call
adc
or
subl
push
cli
fcoms
aaa
and
cltd
ret
cmp
jo
inc
adc
shll
mov
loopne
sbb
push
mov
enter
adc
cmp
stos
inc
jbe
nop
jnp
rcrb
bound
push
sbb
or
pop
push
imul
pop
pop
pushf
adc
inc
or
sub
int3
or
cs
xchg
scas
push
xchg
adc
pop
inc
or
ret
jne
adc
push
add
jo
xchg
fmuls
scas
loop
mov
clc
cmp
setnp
int
jl
stos
aam
xor
scas
repz
scas
gs
mov
xchg
shr
rorb
sbb
cli
and
insl
sub
jne
jno
sub
icebp
jl
arpl
pop
add
pusha
mov
cmp
jmp
jno
pop
sub
int3
mov
adc
scas
rcrb
adc
adc
mov
jmp
and
mov
xor
push
rorl
loope
loop
enter
movsb
mov
mov
test
test
int3
pusha
mov
jl
xor
aaa
sbb
hlt
js
pusha
test
jle
mov
sub
sarb
inc
dec
jp
xor
mov
dec
or
xchg
stos
mov
sub
mov
mov
adc
adc
mov
sub
test
jmp
pop
xchg
aad
sub
and
dec
hlt
stc
or
mov
xor
add
les
adc
sub
jl
sbb
or
js
lea
dec
push
jge
inc
xchg
xor
nop
neg
xor
add
jno
or
aam
hlt
cltd
or
dec
adc
cltd
enter
or
or
das
inc
dec
mov
pop
and
scas
fadd
mov
and
call
sub
stc
loope
stc
or
inc
stc
loope
pop
cltd
loopne
jmp
push
xor
fs
adc
les
dec
jle
cmp
and
loope
in
adc
scas
and
rcr
inc
in
repz
enter
add
addl
inc
test
xchg
fsubs
and
lock
out
add
lods
sbb
cmp
inc
stos
stc
in
or
pusha
and
inc
lcall
and
pop
sbb
sub
test
adc
and
push
cli
test
sbb
in
jo
loop
xchg
xlat
xchg
sbb
out
cld
and
push
or
icebp
cld
inc
jo
inc
repnz
in
in
mov
inc
repnz
mov
and
test
in
mov
lea
push
insb
jecxz
imul
in
fs
and
es
push
adc
loopne
cltd
enter
test
or
add
pop
pop
or
pop
out
in
loopne
enter
or
faddl
dec
loope
lret
icebp
sti
je
jo
mov
sbb
test
mov
stos
inc
frstor
les
cmpsl
mov
test
jp
fcom
push
in
fnstenv
loope
mov
mov
jecxz
push
sbb
jmp
cwtl
test
push
adc
das
pusha
inc
loopne
js
lock
dec
movsb
enter
pop
jg
xor
push
cmpsb
bound
or
enter
jp
adc
or
dec
sbb
lcall
out
mov
dec
sbb
or
mov
xor
push
aaa
cmpl
or
bswap
into
mov
rorl
adc
movsb
xchg
cmp
nop
cmp
arpl
or
push
and
cmp
push
fs
call
scas
insb
fcoml
and
inc
jmp
pushf
mov
rorb
or
roll
movb
pop
aas
sub
inc
jmp
push
mov
dec
fs
adc
and
jbe
jo
in
xchg
sbbl
sub
push
cmc
push
mov
dec
sub
dec
inc
jl
push
fisubs
fwait
loopne
dec
jl
addl
mov
inc
push
mov
xchg
and
les
adc
dec
adc
push
loop
or
ja
lds
cwtl
or
in
mov
fistpl
enter
pop
dec
sub
aad
and
mov
adc
adc
pushf
mov
sbb
cmp
dec
xchg
jne
out
or
adc
imul
daa
and
pop
mov
cmp
pop
call
adc
cmp
pop
push
jae
add
and
insb
gs
sub
cmp
sub
popa
jg
icebp
xor
arpl
jmp
out
inc
and
fwait
out
arpl
jo,pn
lods
scas
jecxz
and
jge
std
popa
js
orb
pop
fildll
out
jmp
push
pop
inc
out
xchg
inc
adc
xor
xor
jmp
adc
ja
push
imul
cwtl
sub
bound
mov
adc
aam
lea
jecxz
cmp
mov
xor
mov
sbb
sbb
sbb
cmp
pop
dec
out
pop
mov
loopne
and
ja
inc
lock
loop
lock
mov
icebp
in
sbb
fwait
loopne
inc
imul
test
cli
fwait
iret
aas
pop
lods
ret
std
xor
pop
and
jecxz
outsl
jo
xor
lcall
loope
in
icebp
add
cmp
push
pop
test
imul
push
sub
mov
cmp
cmp
mul
fcoms
call
test
cli
adc
orb
and
leave
and
pop
loopne
popa
mov
cmc
out
mov
out
rcrl
hlt
jne
xchg
cmp
mov
mov
xor
je
dec
inc
mov
mov
out
stos
scas
pop
sahf
sbb
je
cmp
in
jmp
inc
sbb
and
adc
mov
shlb
lea
pushf
out
pop
test
pop
or
out
push
adc
jmp
scas
aam
inc
je
mov
and
popf
js
movsl
jle
daa
push
out
fdivl
inc
xchg
mov
call
jbe
cmp
insb
in
xchg
iret
ja
cmp
xor
fldcw
adcb
insl
inc
call
imul
xor
je
mov
inc
mov
or
inc
and
adc
call
mov
outsl
addl
mov
nop
sub
movsb
fiadds
scas
repnz
cld
jmp
pop
mov
lcall
dec
pop
and
rcrb
adc
in
cld
push
movsl
and
pop
cmc
or
mov
in
test
jns
adc
lret
jp
adc
in
xchg
das
xchg
addr16
sub
or
lea
ret
cmp
xchg
mov
inc
xchg
add
das
fidivrl
mov
jne
lea
pop
sub
mov
jo
mulb
pop
js
jge
adc
mov
push
popf
out
push
pop
mov
out
cltd
cli
faddp
or
sahf
adc
in
or
das
test
test
jecxz
cld
and
faddp
jg
push
popa
call
jo
cmp
subb
out
xor
jp
subl
pop
or
adc
lods
cmp
cmp
adc
les
xor
dec
cmc
jp
or
int
clc
sbb
xchg
in
clc
js
sahf
cmpsl
xchg
cmpsl
xlat
xor
cmp
adc
mov
pop
cmp
icebp
movsl
clc
push
nop
mov
pop
mov
test
stc
jle
test
movb
leave
adc
enter
scas
sbb
adc
sub
push
push
xchg
sbb
cmp
pminsw
aas
and
jns
sbb
sub
jmp
sbb
and
jns
sbb
sbb
rol
cld
sbb
pop
test
sub
pop
mov
std
xchg
adc
sbb
sbb
mulb
add
inc
scas
cmpsl
and
test
dec
pop
popa
lock
andb
sbb
jp
adc
push
test
repz
loopne
inc
sbb
ds
je
or
sbb
or
cltd
xchg
int3
or
adc
and
push
and
fcos
out
inc
js
adc
push
or
clc
jbe
mov
imul
pop
pop
aam
xchg
mov
push
in
jne
or
jae
fdecstp
sbb
lea
xor
pop
icebp
jp
nop
push
sahf
mov
push
call
mov
push
dec
shrb
mull
pop
mov
adc
bound
lcall
pop
add
pushf
movsl
dec
ret
sarb
popa
and
xor
es
mov
xchg
fdivl
add
mov
add
inc
jne
sbb
cmp
adc
xor
pushf
and
and
sbb
jb
pushf
mov
cmovge
nop
sub
sub
mov
arpl
jae
add
jno
outsb
mov
les
adc
pop
dec
pop
jp
add
dec
dec
dec
mov
push
or
xor
aam
adc
and
test
lret
fsubrl
adc
inc
movsl
aad
std
add
mov
mov
int3
cmp
dec
dec
and
lea
frstor
adc
dec
lock
pop
fisubrs
mov
sub
fmuls
into
and
sbb
mov
and
dec
cli
fstpl
sbb
pop
divb
xlat
pusha
nop
add
lea
inc
das
xchg
sbb
shlb
sti
sub
sbb
fs
test
mov
sbb
jno
sbb
scas
mov
roll
pop
cs
pushf
and
push
sbb
sbb
jmp
or
sbb
pop
jmp
dec
fs
xchg
cmp
pop
pop
mov
popf
inc
leave
inc
pop
inc
adc
cmp
mov
jle
lds
loop
mov
add
data16
jmp
and
mov
or
or
and
xlat
or
mov
adc
and
and
cmp
daa
inc
dec
jno
mov
ljmp
and
or
and
push
add
pop
inc
cld
sub
lret
shlb
sub
mulb
jno
fwait
cmpsl
lds
jne
and
or
pop
cltd
xchg
and
enter
sub
sub
repz
mov
cs
clc
jb
add
xchg
lcall
jae
ja
movsb
mov
test
es
icebp
sub
xor
ljmp
push
inc
add
xor
sub
insl
push
add
dec
outsb
insb
jns
and
push
cltd
add
xchg
adc
add
xchg
push
es
inc
xchg
aad
lret
add
add
rcll
loop
cwtl
test
adc
scas
cmp
das
call
xor
push
and
sahf
scas
inc
xor
imul
or
fiadds
xor
stos
and
push
and
dec
int3
xor
arpl
clc
inc
aaa
xor
xor
imul
sub
xchg
xor
insl
outsb
inc
adc
add
pop
stc
or
test
stos
and
rcl
dec
lock
dec
and
lcall
jmp
int
dec
inc
shl
outsl
rcr
and
sbb
pop
and
dec
cltd
or
cmp
sub
inc
enter
cmp
adc
aaa
fdivrs
dec
and
cmp
dec
gs
mov
test
pushf
cmp
or
cli
movsl
jecxz
dec
call
lea
rcll
xchg
inc
rcrb
and
stc
xor
movsl
inc
ja
adc
insl
aam
inc
fcom
ds
aas
fimull
mov
adc
je
pushf
inc
adc
fsub
mov
orb
ret
push
inc
dec
cs
jb
test
push
inc
dec
es
push
sub
sub
adc
sub
hlt
sbb
sbb
int3
or
or
xor
out
int3
leave
sub
mov
mov
or
arpl
sbb
xor
enter
or
inc
and
and
loop
mov
js
ss
cmpl
in
adc
xor
xor
adc
xchg
or
insb
fsubs
les
mov
sub
movswl
push
mov
movsb
fcoms
adc
ret
add
jg
sub
dec
or
mov
xor
pop
pop
pushf
and
and
movsb
xor
in
loop
sub
inc
inc
mov
xor
ret
sbb
in
loope
inc
push
lret
mov
call
mov
mov
adc
sub
sub
mov
sub
push
pop
pop
aam
lret
and
sub
dec
lea
inc
push
lahf
sub
and
dec
bound
js
inc
add
mov
cmp
stos
inc
inc
mov
lds
sub
adc
sbb
xor
aam
mov
inc
dec
int
xchg
or
insl
mov
pop
in
sub
pop
inc
adc
mov
push
xchg
adc
adc
enter
in
cs
sbb
sbb
sbb
sbb
pop
test
push
lock
clc
dec
dec
push
pop
aas
call
and
and
and
mov
push
mov
jle
sub
dec
and
mov
xchg
or
clc
test
inc
lret
in
jae
out
sub
mov
sub
scas
mov
mov
inc
xchg
mov
insl
sub
aaa
cmp
frstor
and
es
dec
xlat
icebp
xor
push
js
mov
test
scas
push
or
mov
dec
push
mov
cltd
sbb
pop
inc
out
mov
mov
mov
cmp
je
xchg
jge
call
sti
jl
cmp
xor
aaa
popa
sub
sub
mov
lods
cmpsl
mov
inc
int3
and
xchg
movsb
pusha
cmp
call
cmp
lss
gs
inc
add
pop
adc
sbb
xor
test
shl
adc
insb
adc
mov
por
and
inc
pop
sub
or
pushf
xchg
dec
dec
xor
mov
fistl
or
js
add
lods
dec
lods
mov
pop
mov
push
dec
aas
in
cmpps
lock
add
adc
push
or
xchg
lret
loope
add
adc
loope
adc
inc
adc
mov
js
jmp
and
xor
inc
pop
push
jne
cltd
push
cmp
cld
sbb
sbb
adc
pop
inc
sbb
sbb
push
sbb
add
cmp
cwtl
data16
jecxz
in
push
cli
int
pop
jb
and
xchg
dec
and
push
scas
mov
and
jo
popf
dec
sub
push
insl
mov
push
rclb
dec
jne
xchg
mov
in
iret
sbb
sbbb
and
inc
and
and
repnz
inc
sub
sub
aas
mov
sub
sub
sub
xorb
adc
rorl
pop
sub
daa
cmpsl
pop
push
jno
stc
xor
mov
or
xchg
mov
sbb
push
lods
lcall
ret
and
fs
aad
or
shrl
pop
inc
test
pop
inc
inc
adc
mov
xor
movsb
add
out
add
in
pop
or
mov
or
and
sub
adc
inc
shrb
and
mov
clc
sbb
xor
mov
cmp
dec
js
les
sbb
push
jecxz
xor
or
inc
xchg
fists
dec
or
icebp
push
pop
in
adc
mov
sbb
add
jge
sbb
adc
sub
pushf
jno
aas
or
sub
mov
pusha
or
and
pop
xchg
sbb
fcomps
cmpsl
iret
mov
hlt
pop
adc
loopne
nop
cmp
sbb
pop
stos
mov
inc
arpl
sbb
pop
and
xor
xchg
sbb
mul
or
cmp
cld
or
sbb
or
bound
push
rcl
shlb
xchg
paddb
test
adc
cld
jp
mov
ret
jl
pop
scas
movsb
repz
sbb
and
sub
sbb
in
lock
inc
aad
push
or
xchg
cs
sbb
sbb
aas
sbb
inc
out
and
xor
jmp
insl
lods
daa
xchg
hlt
nop
and
and
enter
flds
mov
movsb
sbb
enter
sbb
sub
mov
sub
shrb
xchg
repz
inc
test
xor
xor
fnstenv
sbb
lock
in
dec
push
mov
add
jge
insl
inc
pop
mov
mov
jne
testb
stos
ret
jno
nop
cld
mov
movsl
andl
push
push
adc
mov
and
sbb
add
pusha
pop
push
inc
dec
rcrl
jmp
xor
into
repnz
lods
adc
icebp
ss
out
fsubr
lret
gs
je
sbb
sub
pop
les
pop
stos
mov
gs
dec
cmp
inc
push
jecxz,pn
sub
inc
adc
jmp
mov
imul
hlt
push
fcmovne
mov
pop
jge
mov
out
in
and
cmp
push
lods
dec
mov
daa
dec
mov
sub
shlb
lcall
mov
or
xchg
mov
xchg
mov
in
mov
lcall
xchg
aad
adc
movsb
sub
cmovae
lret
daa
aam
push
dec
jecxz
sub
sub
jo
sub
mov
movsl
sbb
sub
or
mov
pop
les
fwait
or
iret
sbb
push
lods
hlt
push
add
fcomps
adc
sub
outsb
jecxz
aad
loop
xchg
test
sbb
cmpsb
cld
pop
testb
sub
enter
sbb
aam
cmp
mov
xchg
dec
jae
sbb
xchg
inc
or
andb
add
in
jne
adc
call
cmp
je
push
mov
xor
cmp
repz
test
hlt
xor
cmp
push
in
int3
and
bound
movsl
ficoms
pop
mov
sub
jne
ficoml
fwait
sub
cmpb
push
mov
dec
adc
or
xor
xchg
jno
scas
insb
aam
in
pop
or
sub
inc
pop
bound
popa
add
mov
mov
mov
xchg
fs
push
sub
mov
loope
lods
pop
xor
fstpt
clc
jne
mov
ret
push
std
lds
lea
lcall
pop
mov
ljmp
xor
movsb
or
adc
jnp
cmp
aad
int3
and
push
nop
bound
xchg
mov
lret
stos
xor
jg
cmc
or
inc
mov
subb
cmpsl
test
jmp
adc
mov
test
mov
lds
popa
inc
and
mov
lret
xor
ss
nop
sub
push
push
sbb
push
sub
add
jno
scas
jns
or
test
mov
nop
iret
shll
mov
xchg
jo
popf
stc
cmc
and
rcll
std
lret
mov
pop
icebp
clc
stc
mov
push
mov
jb
or
jp
lea
mov
data16
inc
jecxz
das
sti
push
and
sar
cmp
push
xchg
addr16
mov
imul
or
add
stos
cld
push
repnz
mov
inc
das
dec
sahf
adc
or
cmp
imul
mov
and
xchg
adc
sahf
ljmp
mov
or
mov
dec
and
push
ret
xor
and
mov
dec
push
xlat
dec
sbb
jmp
pop
sub
sub
leave
testl
pop
add
push
cwtl
rcll
shl
fsub
cwtl
shrb
scas
push
mov
fwait
scas
mov
rclb
mov
pop
mov
das
clc
jge
dec
xchg
or
testb
into
dec
xor
pop
push
push
mov
mov
pop
and
and
add
adc
cmc
pop
jl
cmp
ds
jl
adc
mov
mov
sub
sub
xchg
cmp
je
fmuls
cmp
jo
cmpsl
je
push
popa
cmpb
mov
or
aas
repz
mov
or
call
cmc
les
outsl
cmp
pop
mov
xor
or
jns
or
pop
cmp
or
and
push
mov
sub
outsl
inc
call
and
pop
jns
pop
je
add
mov
adc
xor
cmp
fmuls
fcoml
add
or
dec
lcall
mov
mov
inc
pop
or
xor
mov
or
sub
or
jnp
fdivl
mov
pushf
jne
test
js
and
push
nop
adc
xor
divl
push
sbb
jne
sti
dec
sbb
pop
or
cmp
insl
push
jg
xor
push
lock
pop
fcoml
xchg
cmp
dec
aas
nop
and
enter
pop
subl
inc
xchg
fcompl
lahf
fldt
fists
jae
outsb
scas
adc
ds
cmc
and
push
sub
pusha
fbstp
adc
jnp
mov
stos
fstps
popf
mov
daa
fisttps
xchg
and
add
and
or
and
cli
push
lods
xchg
lods
mov
movl
notl
sub
andb
pop
test
js
mov
mov
mov
and
or
or
and
dec
jg
mov
inc
loope
push
sub
rcl
out
rol
inc
or
repz
sub
cmpsl
lds
out
int
add
pop
sub
mov
cld
cltd
sbb
add
inc
inc
adc
popa
cmp
daa
pop
fs
imul
adc
cmpsb
movsl
xchg
stos
jecxz
xchg
and
and
xchg
push
stos
mov
ljmp
dec
mov
xor
pushl
xor
loopne
ret
pop
dec
or
xchg
sub
scas
fidivrl
adc
stos
frstor
int
pop
pop
scas
mov
ss
popa
jmp
or
dec
sub
sub
and
imul
xchg
enter
pop
xor
mov
cli
mov
lret
push
cltd
aaa
lea
pop
lea
mov
sub
or
cmpsb
dec
sub
or
pop
add
das
fs
sbb
jmp
and
mov
xchg
aas
adcb
cmp
call
dec
cmp
ljmp
inc
and
lods
jmp
adc
mov
pop
pushl
scas
lods
std
imul
add
mov
or
daa
xor
jns
xor
inc
mov
loopne
popf
mov
pop
sub
inc
or
rclb
inc
pop
xchg
push
clc
stc
push
repnz
stos
leave
xchg
xchg
dec
js
and
cmp
pop
cs
or
mov
cmp
movsl
sub
fldl
cmpsl
incb
cmp
mov
add
nop
mov
cmp
out
pop
shrl
sbb
lea
and
retw
xchg
shll
cmp
adc
push
rclb
out
or
ficomps
xor
add
push
clc
mov
outsl
cld
jl
out
movsb
push
or
dec
dec
pop
xchg
cmp
pop
jmp
in
xchg
rolb
dec
sub
pop
dec
lock
inc
imul
mov
adc
push
fsubrs
imul
sub
push
add
fdivrl
jo
mov
shr
adc
sti
call
add
sbb
jmp
and
dec
int3
nop
incb
fstp
or
pop
sbb
sarb
sbb
push
mov
orb
xor
es
int3
inc
aaa
lcall
cmp
xor
xor
mov
add
repnz
add
add
or
adc
mov
ds
adcb
dec
push
clc
mov
sub
cmc
inc
add
loop
fistps
mov
push
cmpb
lcall
hlt
pushf
push
dec
jge
fdivr
lret
jb
iret
lods
dec
push
mov
stc
inc
cli
xor
jmp
ljmp
cmp
sub
das
inc
adc
push
popa
pop
mov
daa
or
test
add
out
adc
ret
mov
cwtl
push
jne
fsubr
xor
and
in
cmp
lock
or
xchg
aam
jmp
sbb
nop
ret
leave
pop
lock
insb
mov
enter
cmc
fs
fildll
adc
or
add
loope
loop
scas
sbb
ret
test
popf
pushf
cs
or
or
pop
push
call
jnp
mov
mov
cmp
or
aaa
jns
sbbb
xor
inc
aas
sub
add
out
movsb
aas
dec
jl
xchg
pusha
lods
sarl
pmaddwd
icebp
push
mov
test
lods
inc
movsl
adc
mov
pushf
xchg
or
stos
hlt
lock
jge
les
call
mov
dec
sti
mov
inc
add
divb
xor
cmp
push
xchg
or
or
daa
fcmovnbe
add
popa
jo
add
in
pop
xchg
adc
dec
and
mov
jae
xchg
addr16
sbb
dec
cmpsl
daa
cwtl
nop
cmp
xchg
inc
adc
int
loopne
push
jle
cmc
lahf
inc
test
add
mov
test
dec
das
andb
dec
sbb
or
mov
or
dec
and
and
xor
adc
sub
adc
dec
mov
out
sub
xchg
scas
ret
cmp
in
inc
lods
test
fsubrl
jle
icebp
pop
imul
fs
inc
inc
mov
sbb
nop
xor
mov
insb
shlb
xchg
fs
push
or
sbb
mov
mov
mov
fs
pop
dec
adc
adc
cld
out
adc
cwtl
or
and
adc
inc
jecxz
xor
mov
movsb
incb
in
rolb
test
test
inc
inc
push
fcoms
adc
inc
dec
adc
and
fadds
inc
inc
mov
hlt
loop
push
push
insb
or
popa
push
push
cmp
pop
scas
pop
sub
clc
incl
or
fs
xchg
push
inc
inc
adc
xor
and
cmp
push
ljmp
xor
xchg
and
push
cmp
pop
or
add
stc
jmp
push
into
adc
cli
cmp
mov
mov
loopne
cltd
adc
adc
lock
adc
dec
lock
mov
lock
fistpl
adc
pop
mov
adc
outsl
scas
fisubrl
inc
sbb
lods
movsl
push
fidivl
cwtl
sub
cmp
inc
and
mov
mov
repnz
jne
adc
inc
mov
jmp
dec
push
adc
gs
shrl
sbb
les
sub
sbb
in
icebp
and
inc
jne
jecxz
jo
and
cmp
fiaddl
and
movsl
adc
gs
fstl
and
cmp
adc
jbe
pop
push
ja
fmull
jle
sub
add
inc
cs
data16
rolb
lret
push
rcrl
jp
mov
adc
mov
and
xor
inc
lret
imul
push
dec
jecxz
repnz
xor
mov
cmpsb
in
sub
mov
ss
lcall
in
out
sub
push
nop
cmp
cmp
aas
outsl
sahf
add
neg
push
inc
or
sub
fucomp
dec
jecxz
repnz
sbb
nop
fwait
jl
cmpsl
cld
pop
test
lds
call
mov
cli
enter
loopne
adc
add
inc
mov
fnstenv
adc
into
add
sbb
mov
mov
xlat
insl
arpl
mov
mov
adc
push
xor
addr16
add
inc
std
and
jle
xchg
add
lock
movl
std
inc
push
adc
dec
sbb
inc
test
dec
pop
pop
rorb
das
cmp
push
sbb
jmp
jmp
incl
imul
adcl
outsb
and
and
es
inc
xor
ds
sbb
or
push
mov
inc
jle
fcomip
iret
cmp
sub
or
fildll
mov
fs
cs
and
inc
jo
int3
push
movsl
mov
push
xchg
push
dec
cld
adc
popf
dec
and
adc
push
mov
pop
push
sti
pushl
pop
movsb
cmp
in
and
inc
push
mov
cmp
hlt
add
lods
mov
pop
ret
mov
cmp
loopne
shlb
sub
lahf
xchg
dec
clc
add
mov
mov
and
movsl
rorb
dec
pop
fcmovnu
adc
push
mov
shll
jmp
int3
inc
push
imul
push
push
jge
or
push
push
inc
push
pop
jo
data16
add
mov
ss
push
dec
or
mov
push
pop
outsb
or
push
insb
test
andl
jb
je
fwait
push
cmp
xor
xchg
push
nop
push
lret
xchg
push
insb
int
or
adc
hlt
gs
dec
jp
adc
jno
adc
sub
or
sbb
adc
popa
push
pop
xlat
push
lea
xor
sub
adc
adc
or
pop
inc
or
add
cmp
adc
sub
cld
lds
inc
clc
or
add
cs
and
inc
in
pusha
insb
adc
xor
fmull
sbb
xor
imul
xchg
ret
js
jo
lock
test
jl
pop
push
negl
les
loop
in
in
push
pusha
enter
rclb
jl
push
pop
dec
imul
les
jo
add
frstor
das
dec
cltd
addl
cmp
mov
pop
add
fcomps
jne
stos
popf
or
jle
mov
out
mov
sub
cwtl
mov
push
and
mov
mov
inc
and
mov
sbb
or
xor
or
ds
shrb
cmp
xchg
pop
pusha
inc
xchg
xchg
push
mov
xchg
adc
mov
cmp
fwait
dec
or
pop
and
mov
inc
pop
jno
jbe
test
sub
jo
mov
enter
xchg
sbb
clc
mov
mov
sub
adc
fadd
dec
mov
in
pop
dec
push
and
mov
add
int3
and
dec
inc
lds
ja
test
loopne
insb
pop
popf
pop
sub
movsb
lret
mov
ret
inc
adc
int3
jmp
into
repnz
test
aam
adc
insb
loope
add
jecxz
sub
and
popa
clc
in
inc
jle
mov
add
mov
ret
and
movsb
aaa
mov
xchg
lock
shl
sub
push
mov
add
inc
ret
sub
hlt
pop
arpl
push
sbb
or
sbb
lods
inc
addb
insl
nop
xchg
pusha
adc
xchg
adc
repz
js
mov
jo
repnz
clc
repz
xor
test
test
movsb
sbb
movsb
sahf
in
mov
mov
dec
ds
dec
cmp
ret
test
cmp
add
push
inc
adc
lds
and
push
lret
pop
js
rclb
pop
mov
add
fdivr
mov
or
clc
stos
mov
iret
pop
and
in
jp
aas
dec
pop
sti
cmp
scas
xor
ljmp
in
inc
fldz
jecxz
dec
dec
sti
pop
push
mov
dec
push
fsubs
mov
stos
clc
xlat
push
mov
pushf
in
add
je
pop
dec
sub
mov
mov
sub
lea
jmp
add
lock
mov
and
pop
or
add
xchg
out
and
sar
fsubr
inc
imul
bound
mov
cmp
xorb
xor
add
cmp
push
ss
in
xor
in
jno
insl
inc
cs
xor
xchg
mov
test
stos
mov
daa
clc
cmpsb
mov
out
pop
loop
movsl
mov
fadds
adc
inc
push
or
dec
movaps
xchg
cli
mov
loope
jg
das
mov
pop
jmp
cmpl
daa
xor
insb
decl
sub
and
in
mov
sbb
rorl
inc
and
pop
in
dec
insb
jne
andb
sbb
adc
adc
or
add
push
sub
jg
mov
jmp
daa
mov
cmc
and
mov
adcb
das
lea
mov
push
add
shlb
adc
xor
inc
xchg
and
loopne
ret
adc
daa
push
aam
sti
push
repz
jmp
cmp
xchg
xor
je
sbb
movsl
mov
jl
pop
pop
in
outsl
push
fstl
rcrl
mov
aas
in
mov
fldenv
mov
jle
push
push
mov
inc
dec
push
pop
addl
mov
dec
add
mov
scas
jmp
cmpsl
sbb
bound
xor
mov
jne
and
enter
or
leave
jne
mov
test
push
dec
mov
stos
xlat
lods
je
stos
inc
pusha
addb
jne
cmpsb
inc
pop
push
lods
pop
js
pop
cmc
jle
bound
movzwl
push
test
into
pop
sbb
xchg
jle
add
call
das
mov
sub
test
int3
scas
and
lret
xchg
arpl
sbb
test
sub
imull
or
sbb
push
inc
adc
repnz
xchg
fs
dec
stc
push
inc
cmp
mov
hlt
cmpb
dec
stc
mov
std
out
sub
test
nop
adc
adc
push
push
push
sbb
aas
imul
in
pop
xorb
dec
cmp
mov
sub
mov
cs
outsb
xor
mov
push
cmp
cs
xor
sub
std
nop
cmp
add
add
negl
push
sbb
inc
cmp
and
sub
push
sub
jae
add
cld
lods
jle
mov
xchg
bound
pop
das
pop
out
lds
push
ljmp
sub
aad
out
int
in
into
pop
sub
push
lods
mov
fbstp
mov
xor
jne
loope
add
add
pop
xchg
test
xchg
mov
rolb
mov
fldenv
sub
xchg
push
push
sub
in
imul
pop
sbb
adc
cli
mov
sbb
jo
sbb
xchg
sbb
test
stos
mov
adc
arpl
sub
cmp
mov
fadds
fs
lret
aam
dec
mov
adc
push
pop
in
lret
xchg
call
inc
inc
stos
jb
dec
push
repz
mov
xchg
aad
lea
jnp
repz
push
stos
shlb
inc
cli
mov
pop
mulb
daa
stc
aam
les
jb
pop
mov
pop
andl
mov
nop
push
dec
in
mov
gs
inc
adc
lods
adc
lock
gs
test
testl
pop
cmp
cmpsl
adc
sbb
pop
jecxz
imul
sbb
test
gs
lods
adc
mov
loope
loope
ficomps
addr16
sbb
jmp
dec
xchg
pop
pop
addr16
fs
gs
jae
mov
inc
pop
ds
loopne
das
or
fdivrs
mov
pop
sbb
lds
aad
dec
add
aam
in
dec
add
xor
push
test
push
push
loopne
test
jo
sbb
inc
dec
cmp
mov
cmp
js
sub
or
movsl
jp
std
movsl
test
loop
xchg
add
std
jne
jb
enter
fisubl
fimull
in
jne
dec
sbb
test
mov
das
iret
pop
pushf
pop
movb
cmpl
mov
lods
push
sbb
mov
or
fs
fsubl
push
fcoms
or
movb
pop
xchg
ja
popf
sbb
sub
push
int3
mov
xchg
fsub
xor
or
aaa
mov
daa
pop
les
pop
or
jbe
or
ret
stos
into
test
xor
out
sub
pop
loop
sarb
jne
jno
cmp
cmp
cmp
and
jl
mov
push
push
sub
cmpl
mov
xor
test
xchg
sub
dec
jecxz
cmp
das
or
int3
clc
inc
jl
dec
push
push
rcrb
cmp
add
push
pop
ljmp
adc
dec
sub
shlb
out
out
testb
lcall
loop
mov
in
mov
inc
pushl
jge
rol
adc
jle
xor
cmp
pop
dec
mov
sbb
mov
sub
fdivs
das
pop
or
dec
imul
push
push
push
mov
pop
jo
mov
and
pusha
pop
push
add
add
lods
addr16
sbbl
mov
add
jecxz
adc
dec
outsb
in
xchg
cltd
das
stos
xor
call
mov
mov
imul
pop
js
jo
mov
lock
jle
xchg
cld
hlt
lret
push
imul
jae
ljmp
pop
and
mov
inc
out
inc
pop
or
int3
imul
adc
cmp
push
push
adc
rclb
push
cmpsl
pop
mov
call
jne
sbb
ja
adc
dec
je
aam
loopne
cmp
cmpsb
mov
stos
or
int3
popa
in
jns
daa
mov
mov
sub
out
rcll
or
mov
push
insl
xchg
pushf
dec
lods
pop
adc
sarl
movsb
sbb
or
cmpsl
shll
cmp
out
out
daa
gs
or
pushf
enter
push
mov
or
mov
sbb
push
hlt
cld
mov
mov
xchg
sbb
mov
ret
movsl
jnp
das
fidivrs
add
clc
ficompl
enter
cmpsl
jno
ret
insl
daa
hlt
pop
jmp
push
and
jp
shl
adc
lea
xchg
xchg
push
aas
xor
sub
mov
cmpsl
or
and
imul
mov
rcl
or
movzwl
ror
incl
add
shlb
pop
dec
aad
pop
repz
xor
or
add
divl
call
cmp
jne
lods
jmp
push
mov
aaa
int3
shrb
rclb
or
stc
push
dec
pushf
xchg
mov
jo
mov
dec
pop
cmpsl
add
cmp
ja
and
add
sbb
mov
ss
push
cmp
pop
mov
shrb
popf
sbb
stc
jmp
and
bound
mov
repnz
xchg
adc
fsubp
mov
lods
sub
orl
shl
jmp
je
and
mov
cmpsl
faddl
cmp
push
jnp
sbb
in
mov
arpl
or
js
push
test
repz
adc
push
addb
xchg
cmp
add
in
push
xchg
sbb
or
sub
xchg
dec
jo
test
in
add
adc
loop
push
mov
pop
xchg
jmp
and
dec
int
cmp
jns
mov
jns
ret
es
jbe
add
es
inc
inc
sub
jg
sub
inc
adc
je
jnp
js
jge
lahf
push
xor
fisubrs
test
jne
or
out
or
jb
push
push
push
inc
shrl
pop
cltd
push
mov
sub
cmp
sti
add
scas
fcoms
mov
or
add
inc
cld
xorb
or
sub
sahf
and
sub
in
shlb
int
rcll
xchg
inc
inc
sarl
jle
inc
xchg
mov
test
jno
cmp
or
outsb
mov
push
imul
clc
jno
call
test
xchg
orl
pop
sbb
std
loop
pop
popa
imul
inc
jno
pop
sub
or
scas
ret
test
loop
jmp
pop
mov
in
mov
mov
fcoml
sub
in
dec
sub
inc
sbb
loope,pt
adc
insl
dec
icebp
in
sub
add
pop
stc
xchg
adc
fwait
jle
bound
adc
mov
lret
and
xchg
sub
and
adc
inc
dec
mov
push
lret
movsb
test
rcrb
ret
add
push
adc
adc
push
xchg
pop
mov
push
div
adc
push
cmc
sbb
sub
jne
out
dec
mov
int3
or
push
shrb
hlt
mov
or
push
mov
adc
mov
xchg
icebp
fsub
fdivrs
or
and
xchg
mov
adc
int3
repz
lret
adc
lods
imul
fisubrs
cmp
push
jns
arpl
je
aam
mov
inc
xchg
mull
and
ds
or
cs
mov
and
out
xchg
call
and
xchg
push
fstps
sti
dec
sahf
push
mov
xchg
adc
inc
mov
inc
in
or
sub
mov
or
popf
and
outsb
xchg
push
xor
pop
push
mov
pusha
sbbb
mov
xchg
test
sub
push
aaa
adc
sbb
add
xor
pop
mov
mov
js
mov
sbb
push
addr16
out
cltd
xor
test
sub
and
cli
pushf
outsb
cmp
pop
add
and
jmp
mov
das
sahf
mov
push
inc
inc
xchg
mov
movsb
jo
sbb
dec
xor
pop
sbb
mov
in
push
inc
sbb
sti
gs
jnp
gs
or
fcmovbe
push
lahf
into
push
orl
or
in
aaa
jnp
out
push
inc
test
xchg
jno
push
pop
ja
or
push
push
push
test
or
lods
ljmp
pop
pop
gs
mov
pop
mov
push
add
xchg
xchg
stos
push
pop
inc
cmp
js
xor
inc
lcall
sbb
cmpb
lds
inc
cwtl
imul
mov
movl
lea
sub
adc
xchg
push
dec
and
mov
out
pop
sbb
or
loope
add
or
xchg
mov
add
sbb
insb
pop
stos
fs
rorl
cmpl
cmpsb
adc
inc
cmp
sbb
or
lods
xlat
stos
pop
sub
sbb
dec
roll
ja
outsl
xchg
ds
jnp
add
cmc
int3
xor
shl
pusha
mov
cmc
data16
adc
inc
mov
loope
les
mov
push
dec
mov
cld
jle
insb
addb
or
mov
push
in
xchg
or
cmpl
sbb
xchg
pop
push
adc
push
mov
sbb
mov
lds
adc
rorb
test
movsb
push
mov
adcl
mov
test
fldenv
jne
inc
push
into
dec
pusha
ja
dec
lods
dec
inc
sbb
xor
jo
xchg
or
sbb
push
and
loope
lods
cs
dec
push
cltd
or
pop
repz
mov
sub
cmpsl
or
push
sahf
cmp
mov
insl
sbb
push
jae
je
push
insb
ss
pop
jecxz
push
je
cmpl
addb
test
fadds
leave
dec
je
enter
push
mov
dec
push
lret
add
inc
mov
cmc
inc
incl
mov
inc
iret
add
sbb
jne
fcoml
fnstcw
push
sar
enter
decl
in
cmp
and
jo
jg
dec
dec
mov
mov
inc
add
add
xchg
ret
jmp
xchg
mov
jg
inc
push
out
sbb
and
xor
inc
test
aad
push
enter
jle
test
xchg
dec
inc
ficoml
cmp
jg
daa
imull
xor
ret
dec
imul
jecxz
dec
test
sbb
iret
sub
sub
pop
add
inc
testb
and
in
push
out
adc
pop
sbb
dec
push
test
mov
int3
mov
lds
cli
call
mov
daa
cmpsb
leave
insl
pop
dec
sub
push
sub
push
lock
sub
mov
into
sub
xor
pop
pusha
dec
sub
rorb
lret
mov
inc
push
ret
mov
out
loope
nop
jbe
sub
dec
mov
pop
out
inc
pop
sub
inc
jge
adc
mov
inc
dec
mov
mov
and
xchg
mov
fldl
rorb
jns
xchg
push
test
stos
enter
pop
rolb
mov
inc
popf
inc
push
mov
or
pusha
mov
lock
inc
out
adc
and
orl
inc
negl
adc
push
mov
xchg
inc
adcl
fidivs
or
push
in
jp
push
lret
push
xor
push
sbb
fdivl
xchg
sbb
es
inc
mov
push
lcall
enter
int
aas
lret
push
lret
test
and
sbb
push
out
sbb
add
sub
imul
push
push
pop
dec
subl
movl
pop
inc
sub
jmp
int3
add
and
and
shlb
cld
push
out
sbb
push
push
sbb
dec
push
jno
adc
out
mov
paddq
xchg
mov
dec
sbb
test
pusha
lret
call
mov
mov
mov
mov
cld
sub
and
movsl
lcall
inc
dec
fiaddl
or
es
inc
pop
lods
sbb
lcall
xchg
pop
je
push
loope
push
mov
or
jne
cli
and
fadds
jmp
cmp
mov
lds
repnz
sub
xchg
inc
aas
push
dec
notb
xchg
sarb
dec
out
push
and
or
and
orb
mov
gs
mov
jp
outsl
aaa
cmp
mov
fisubrs
je
or
push
cmp
call
out
repz
mov
jl
movsl
stos
insl
dec
aas
clc
adc
call
aaa
mov
ja
gs
mov
in
scas
pop
push
adc
sub
stos
inc
jp
sub
xchg
fists
mov
cmp
xchg
fistpll
xchg
into
add
in
int3
push
and
addl
cmpsb
movsb
sub
enter
mulb
inc
stos
mov
jg
inc
int3
sub
sbb
jnp
sub
pusha
sbb
inc
inc
push
or
bound
addr16
or
les
push
movsl
or
aad
dec
adc
fldcw
movsl
ljmp
rolb
push
dec
ret
and
cmp
fsubrs
mov
jne
punpcklwd
jmp
ljmp
hlt
adc
mov
fldln2
jnp
gs
cld
and
test
lret
cmp
push
mov
movb
and
mov
test
cmpsb
jb
add
frstor
or
push
xchg
pop
fadds
pushf
push
faddl
rorl
test
xor
aam
lret
in
cmp
sbb
jmp
outsl
xchg
cld
xchg
xchg
inc
add
scas
push
or
push
push
inc
test
out
mov
movsb
or
stos
dec
push
mov
es
mov
hlt
add
lret
pop
mov
xor
xor
add
ret
loop
js
dec
dec
decb
scas
dec
mov
lea
push
fcoms
test
pop
dec
test
mov
or
leave
lods
or
inc
push
cmpl
mov
pop
dec
fs
lret
add
xchg
mov
fldcw
and
jecxz
pusha
jl
cld
loop
dec
mov
fsubr
ja
sbb
jno
dec
ds
je
mov
sbb
pop
xchg
je
inc
cld
push
push
jne
adc
scas
addr16
or
hlt
adc
daa
test
jle
and
inc
xchg
daa
push
jg
jg
inc
aaa
sbb
jg
mov
jne
cld
imul
test
in
sub
push
mov
addr16
mov
add
mov
inc
in
dec
sub
mov
push
and
mov
roll
dec
jne
jmp
movb
and
adc
sbb
aaa
les
xor
mov
je
sbb
loope
add
mov
push
imulb
push
mov
or
mov
jo
mov
mov
aaa
fldt
mov
decb
jnp
or
or
pop
sub
test
xlat
jns
mov
aam
inc
sbb
mov
or
faddl
jle
mov
mov
or
das
mov
sbb
adc
clc
and
mov
dec
dec
in
aad
outsl
shll
inc
adc
rclb
or
pop
gs
bound
fdivs
mov
xchg
xchg
or
pop
pop
inc
inc
pusha
les
ret
dec
filds
bound
adc
mov
andl
test
test
jo
add
adc
repnz
call
mov
movsl
sbb
in
dec
sub
loope
popf
mov
rorl
mov
jo
pop
sbb
jbe
inc
mov
dec
inc
scas
aas
mov
aaa
or
inc
push
dec
icebp
cmp
mov
ss
and
adc
pushf
lret
push
test
xor
mov
outsl
cwtl
sub
xchg
jne
ret
jg
cmp
mov
jns
mov
adc
gs
jmp
sbb
mov
clc
jo
xor
add
mov
jecxz
sub
pop
sbb
pop
shrb
ret
fidivl
sub
add
scas
mov
push
movsl
test
xchg
into
pop
jg
xor
cmp
or
or
out
pop
cli
imul
cld
sub
leave
inc
add
cmp
outsl
mov
cmp
and
pop
popf
push
or
in
inc
sub
xor
sub
std
mov
dec
sbb
cmp
inc
adc
adc
inc
cmp
push
cmc
sbb
xchg
out
jg
sub
aas
jmp
movsl
sti
testl
mov
sbb
int3
jnp
int
push
sub
repz
dec
push
lret
daa
jne
dec
push
mov
mov
daa
insb
cld
adc
add
bnd
aaa
fldl
dec
outsl
pop
cwtl
mov
jmp
loopne
mov
test
lock
or
loop
push
dec
pop
pop
or
mov
mov
jecxz
and
das
push
pop
jle
or
mov
adc
movsl
cmp
jae
sbb
aad
in
loopne
into
pop
dec
mov
in
sub
popf
jne
jb
jmp
cltd
fs
lock
or
lea
and
inc
or
jne
lods
mov
adc
aaa
xor
push
movsb
mov
and
out
les
mov
cmp
add
or
fcmove
sti
sub
repz
jo
mov
push
addl
mov
pusha
adc
mov
test
mov
ret
inc
dec
loopne
push
add
or
pop
cmpl
sbb
inc
or
and
inc
cmp
push
je
push
xlat
sahf
aam
sbb
into
dec
push
fcoms
dec
test
test
mov
add
je
or
cmp
inc
xchg
popf
inc
jge
fisubs
pusha
xchg
cs
and
xchg
inc
sbb
push
dec
dec
mov
rcrb
lods
add
push
xor
mov
mov
loopne
icebp
or
add
and
cmp
mov
cmpsb
xlat
gs
adc
add
xchg
mov
loopne
jmp
repz
xchg
sahf
mov
or
lods
adc
clc
inc
fs
push
loope
xchg
or
cwtl
cmp
andps
or
jo
adc
mov
sub
jl
cmp
push
stc
dec
and
jmp
cmp
sbb
fincstp
and
push
jne
hlt
pop
icebp
xor
hlt
xchg
push
dec
push
and
dec
xchg
fs
mov
hlt
inc
xor
jne
lods
ret
or
cmp
sub
sarb
and
cmp
push
cmp
mov
xlat
push
ret
fimull
xlat
repz
inc
popa
add
jno
rclb
aaa
out
mov
stos
sbb
pop
sbbl
mov
or
add
pop
pop
scas
add
into
pop
aad
push
cmpsl
hlt
into
ret
adc
pop
mov
cld
or
imul
adc
xor
and
ret
imul
sbb
nop
inc
and
movsb
inc
insl
aaa
jno
cmp
jae
cmp
cld
popf
push
subps
sbb
shl
leave
js
jae
pop
or
xchg
minps
xor
jae
int3
testb
mov
scas
outsl
push
fwait
or
cmpsb
pushl
pop
cmp
mov
call
gs
mov
xor
or
stos
dec
out
test
test
push
in
sarl
movb
jmp
jne
imul
xor
pop
adc
mov
test
xchg
stos
lcall
cmpb
mov
ljmp
inc
pop
rorb
pop
xchg
pop
add
dec
das
pop
pop
cld
jmp
pop
add
sti
sbb
pop
sarb
adc
pop
jae
bnd
and
cltd
xor
and
cmp
pop
mov
daa
add
pop
pusha
inc
cmp
push
movsl
push
cmp
stos
sub
xor
int3
clc
sub
lret
or
fwait
call
cmp
jne
push
std
mov
gs
xchg
push
call
or
rolb
mov
movsl
sti
inc
ret
cmc
gs
xlat
lods
cmpsl
pop
and
aas
adc
inc
ss
and
jmp
dec
popf
push
jl
mov
test
sbb
xchg
pop
xor
pushf
shrb
call
lahf
and
jae
push
mov
ret
cmp
dec
push
daa
sub
mov
adc
inc
loop
push
jmp
lods
jmp
aam
cwtl
or
xchg
add
dec
or
pop
pop
dec
dec
mov
cwtl
insb
iret
test
fcoml
xor
adc
sub
mov
sub
insb
fisttpll
and
sbb
fdivs
mov
xchg
push
std
push
sahf
lods
pusha
lods
stc
cmp
leave
lods
cmp
dec
sti
repnz
fisttpll
enter
sbb
jmp
cmpsb
push
xchg
and
test
push
mov
xchg
sbb
lods
lds
xorb
inc
jbe
int3
or
les
mov
dec
out
push
cmp
jbe
ljmp
mov
lock
push
adc
mov
outsb
push
inc
or
sbb
addl
jg
pop
push
ret
jns
or
sub
clc
mov
ljmp
jmp
mov
mov
and
add
mov
pop
pop
push
push
call
fwait
fs
movl
clc
mov
testb
jge
lahf
sub
xchg
cmp
jne
xchg
pmuludq
movsb
or
xchg
shr
push
pop
add
jne
test
shr
iret
pop
pop
or
xor
pop
je
scas
clc
sub
pop
sub
lcall
dec
testl
mov
mov
pusha
pop
mov
fsubs
das
sbb
jne
inc
mov
lcall
and
lahf
lahf
cmpsl
mov
cwtl
lretw
pushf
cmp
loop
xchg
mov
rcr
mov
call
push
adc
push
mov
pop
mov
hlt
movsb
jns
sbb
cmp
push
movzwl
sub
cmp
xchg
shrb
push
cmc
imul
push
call
mov
dec
jp
xor
inc
popf
sbb
or
adc
xchg
cld
mov
push
push
xor
dec
stos
pop
mov
cwtl
test
popf
sub
pop
add
subl
xor
inc
jle
fwait
mov
push
aaa
sub
lea
pop
mov
int3
cmp
mov
or
sub
mov
and
add
popf
dec
cmp
pop
out
sbb
push
insb
fadds
ret
inc
and
sub
popf
and
push
mov
scas
add
enter
add
mov
call
bound
in
and
jg
fwait
xor
sbb
sarl
stos
cmp
sub
cmp
cli
sub
loop
fsubrl
fmull
movsb
mov
jno
int3
push
outsb
repnz
std
sahf
test
dec
pop
scas
mov
push
test
mov
and
and
or
adc
and
dec
dec
or
aam
ret
adc
out
movsb
cmpsl
or
jmp
das
ret
into
lea
data16
jne
add
dec
sahf
imul
push
rcrb
aaa
jmp
mov
dec
adc
xchg
mov
insl
mov
int3
stos
mov
and
rorb
inc
int3
jmp
pop
mov
xor
pusha
sub
xchg
mov
mov
dec
jecxz
xchg
scas
xchg
daa
adc
jb
imul
mov
or
xor
push
les
pop
mov
or
ja
call
mov
lahf
xchg
sbb
add
cmp
jne
jo
xchg
mov
ja
loope
repnz
ficomps
movsb
add
mov
gs
mov
ficompl
aad
mov
cmp
xor
inc
imulb
ds
andb
andl
fcompl
jns
adc
dec
shrb
or
pop
or
js
lahf
cmpsl
mov
pop
movsb
jecxz
dec
push
push
popw
mov
je
jb
mov
cld
mov
mov
stc
pop
das
mov
sub
fisubrl
nop
in
mov
xchg
pop
xor
ds
pop
leave
pushf
sti
jge
inc
jne
pushf
fdivl
fsubl
and
rcrb
in
test
lret
aam
pop
mov
or
cwtl
dec
pushf
ds
ret
std
pop
or
jmp
adc
ljmp
out
mov
sbb
je
pop
jnp
mov
sbb
mov
stos
pusha
in
leave
icebp
jg
fs
les
setne
jg
pop
movsb
ljmp
jbe
stc
lock
enter
js
cmp
mov
insb
inc
adc
pop
clc
mov
xor
ret
push
mov
and
decl
xchg
xchg
out
mov
call
lea
jmp
add
orb
loope
jecxz
mov
sbb
call
mov
aad
sbb
jb
in
bound
mov
jb
push
icebp
je
pop
or
add
xchg
or
jne
push
adc
jns
jnp
or
or
xchg
sbb
sbb
mov
mov
movsl
ljmp
pop
punpckldq
xchg
out
lcall
xchg
in
lea
out
les
movsb
jmp
rcl
decl
out
scas
lcall
mov
add
pop
xor
add
sbb
movsb
pop
dec
out
jns
movb
call
sbb
int
dec
das
or
sbb
cwtl
xchg
xor
cmc
stos
lahf
dec
stc
pop
sub
les
repnz
fisttps
imul
ret
cmp
pop
mov
sub
movsl
dec
loop
mov
push
mov
mov
pop
inc
cmc
loope
and
adc
clc
mov
fwait
rol
cltd
xchg
adc
jo
bound
popf
mov
pushf
push
jl
xchg
cmp
cmp
mov
sbb
cmp
dec
xor
ret
pop
jnp
add
nop
loop
aas
pop
jmp
pop
test
push
enter
adc
subl
push
aam
mov
push
je
and
movsl
test
inc
adc
xchg
jmp
iret
sub
lock
loop
push
push
insb
cs
data16
push
jns
fisubrs
arpl
add
jmp
or
push
push
mov
mov
rclb
pop
or
sub
or
jae
mov
cmc
or
xor
dec
and
adc
inc
fildl
jno
mov
test
mov
test
sbb
shrb
mov
mov
inc
in
or
fsubl
xor
mov
mov
inc
cmp
aas
mov
mov
mov
pop
cli
sub
leave
add
pusha
xor
mov
mov
dec
add
scas
pop
sub
or
sbb
or
adc
lods
js
or
arpl
testb
and
stc
add
mov
and
or
inc
jg
sti
mov
hlt
orb
inc
inc
bound
mov
inc
shlb
cld
test
clc
or
mov
mov
es
pop
loopne
adc
jmp
push
mov
jb
out
add
in
pop
xchg
stos
xor
mov
cld
test
sub
or
pop
push
outsb
jne
sbb
or
jns
xchg
addr16
jle
mov
pop
xchg
aam
or
popf
dec
lret
inc
int
ds
hlt
xchg
cmpl
cmp
jne
sbbl
xchg
jmp
in
mov
xor
das
xchg
pop
sahf
push
adcb
cld
or
aam
mov
aaa
dec
movsl
pop
shll
inc
add
mov
sub
ficoml
and
daa
or
inc
lahf
movsl
mov
into
lods
mov
inc
hlt
fldenv
aam
sbb
fmuls
or
mov
dec
roll
jp
lahf
fsubl
das
loopne
adc
mov
jmp
mov
jmp
iret
pop
scas
pop
and
xchg
and
jae
or
fisubrs
clc
pop
dec
shl
add
add
jmp
mov
or
mov
push
dec
push
mov
lds
int
mov
movsl
cmp
sub
inc
push
xor
dec
xcrypt-ctr
cmpsl
cltd
sub
lahf
gs
das
jge
clc
lahf
out
sbb
loopne
inc
adc
mov
adc
cs
push
scas
sub
shlb
addr16
enter
repz
lret
in
sti
insb
add
push
sub
inc
sub
jmp
scas
sarb
sub
adc
lock
push
sub
jmp
pop
sub
mov
in
jle
test
into
and
je
scas
xchg
jle
gs
movsb
cmpsl
inc
int3
movzbl
and
enter
divb
push
lcall
xchg
jmp
sbb
icebp
add
pop
sbb
or
std
pop
xchg
add
jmp
int3
mov
ror
push
or
jmp
enter
pop
jg
sub
or
pop
jmp
push
fs
and
repz
mov
cli
adc
stos
or
add
jmp
jmp
mov
adc
or
inc
xchg
or
push
sub
es
or
loopne
inc
pop
sbb
mov
rorb
mov
mov
shlb
shrb
push
push
in
stos
jno
push
add
shl
jnp
mov
add
scas
and
fdivrs
lock
jge
jnp
push
or
ret
adc
sbb
pusha
adc
lret
gs
out
shl
lea
xchg
or
pop
pop
push
push
fdivrs
adc
mov
test
jmp
hlt
xlat
aam
adc
sbb
movsb
or
dec
aas
push
dec
jns
push
inc
mov
inc
bound
mov
dec
mov
jl
mov
jge
sbb
lret
push
push
inc
adc
test
aas
loope
jmp
nop
and
and
enter
jb
je
sub
jns
or
jmp
nop
mov
add
cmp
mov
ljmp
push
es
daa
inc
imul
in
es
das
mov
add
push
cmp
inc
or
inc
jnp
cmp
push
xchg
push
ficoml
popa
fstpl
xchg
jmp
movsb
adc
mov
and
dec
and
mov
jmp
and
xchg
or
sub
push
fldenv
adc
adc
std
xchg
sar
out
dec
mov
popa
mov
sbb
adc
stos
dec
int
sub
lahf
inc
xor
dec
or
or
sub
cs
movsl
scas
lcall
sbb
fstpt
sub
das
aaa
movsl
pop
sub
stc
popa
and
and
imul
inc
incl
dec
mov
fdivr
jno
jg
cmp
cld
sarb
nop
jmp
dec
add
orb
mov
adc
imul
cmp
lds
leave
cmp
dec
rcll
in
push
push
mov
pop
cs
jl
push
ret
lcall
xor
daa
and
dec
and
mov
mov
mov
push
jno
popa
sub
and
adc
or
add
or
movsl
std
sub
mov
das
xor
popf
test
xchg
or
dec
dec
push
and
stc
xchg
mov
testl
push
jmp
adc
add
fwait
sub
out
sbb
or
mov
loope
cmp
out
or
fildl
cmpsb
add
out
test
out
andl
or
push
and
jne
jmp
or
pop
sbb
loopne
mov
js
nop
adc
sub
push
push
mov
fldl
cmp
mov
andb
add
jae
call
fxch
push
int3
vmread
push
ret
addl
nop
dec
push
xchg
js
cs
sbb
lock
dec
dec
sub
pop
popf
jne
xor
adc
push
pop
rclb
or
push
or
cmc
repnz
clc
test
jmp
pop
jb
xchg
sti
inc
or
cmpsb
and
inc
mov
add
cmp
testl
xchg
aaa
clc
xchg
mov
xor
push
imul
mov
pop
aad
jo
lods
inc
jle
in
xor
out
dec
jg
jne
xchg
pop
lods
xchg
adc
jne
sub
jne
fstps
cmp
dec
test
imul
enter
or
mov
test
fadds
stos
xor
dec
mov
adc
add
mov
adc
mov
mov
jecxz
das
push
fidivs
push
xchg
push
pop
aam
xor
daa
dec
or
fnstcw
stos
iret
cwtl
adc
mov
cmp
adc
adc
adc
mov
push
add
gs
inc
imul
cmp
or
push
add
add
dec
mov
ja
add
dec
xor
inc
dec
jne
mov
push
or
js
xchg
pop
fildl
call
hlt
popf
js
add
cmp
ja
loopne
jmp
loopne
xchg
add
mov
les
or
clc
lahf
jbe
fisubs
and
repz
push
sti
dec
loop
push
lret
scas
xor
sub
out
pop
add
jmp
sbb
lcall
dec
pop
popf
pop
cmc
sbb
pop
and
mov
cmp
jg
mov
add
xlat
push
push
sti
xchg
xchg
into
cwtl
shll
idivb
inc
jae
rol
loop
or
push
in
les
add
mov
shll
add
inc
push
lock
or
xchg
sub
or
xor
sbb
push
test
and
sbb
sbb
push
push
and
adc
enter
or
mov
mov
inc
and
sbb
and
adc
inc
mov
call
sbb
jne
inc
inc
cmp
xor
push
ret
je
hlt
bound
inc
jbe
xor
js
sbb
xchg
jp
sbb
jg
or
dec
mov
fcomps
ficomps
adc
sub
fsubrl
rcl
add
cmp
jg
das
sbb
push
jnp
dec
mov
sub
aad
jp
es
push
sub
inc
push
dec
inc
sub
and
fisubl
mov
sbb
xchg
sbb
pop
jne
xchg
xchg
sub
inc
andb
js
int
sbb
push
mov
sub
es
pop
fiaddl
jne
dec
mov
lret
mov
roll
adc
and
sbb
xor
cmp
jae
pop
in
dec
les
lret
jl
or
ret
push
stc
jmp
mov
in
xchg
repnz
shlb
jle
adc
mov
cmp
add
lea
cmpsl
push
outsb
lcall
push
pop
repnz
popl
inc
push
add
sbb
loope
dec
pop
scas
and
or
xor
push
add
push
int
push
cmp
mov
push
movups
pop
pop
adc
pop
stos
and
popa
lods
adc
mov
xorb
push
je
pop
inc
jbe
lock
pop
sub
popf
lds
mov
pop
pop
and
cltd
mov
dec
xchg
push
xchg
mov
push
push
pop
sbb
lods
xchg
repz
mov
out
jp
stos
adc
sub
test
bnd
test
push
xchg
jl
cltd
outsb
sub
test
xchg
fstl
test
scas
sub
loopne
dec
outsl
xchg
mov
sub
loop
sbb
and
sbb
xchg
sbb
xchg
xchg
into
cli
leave
pop
ds
jle
add
cmp
jbe
lods
out
daa
repz
jmp
or
les
push
into
or
repz
cmp
xor
test
adc
jne
mov
mov
push
mov
mov
and
pop
arpl
push
sub
mov
inc
push
cmp
aad
out
lret
lods
rolb
lea
push
push
pop
pusha
pop
push
and
push
lock
mov
shlb
push
mov
loope,pn
movsl
mov
es
push
in
mov
mov
imul
adc
daa
pop
push
and
js
or
dec
repz
add
push
arpl
jmp
push
daa
push
nop
sbb
rclb
push
push
sub
mov
sub
adc
fistpl
and
iret
out
test
pop
cld
jmp
mov
mov
and
orb
stos
mov
pop
push
mov
xlat
sti
int
sub
pop
loope
mov
mov
inc
sbb
shlb
test
jae
xor
cmp
mov
cmp
jl
xor
les
mov
adc
movsb
mov
inc
mov
push
rclb
mov
shrb
test
mov
inc
clc
lahf
and
adc
jns
or
rcl
or
aam
push
rcr
or
fmull
test
shll
push
xchg
adc
fs
or
cmp
shrl
mov
fisttps
loopne
clc
popa
je
jp
and
pop
xor
sti
cmp
sbb
fidivl
and
shll
or
addr16
cmpsl
js
adc
sbb
and
sub
lret
sub
jbe
pop
arpl
std
movq
adc
shll
nop
adc
aas
in
push
call
pop
incb
jno
insb
lret
xor
pop
and
data16
call
aas
or
push
call
xor
cmc
inc
aam
and
enter
stc
rcrb
enter
loopne
in
fwait
pushf
mov
js
mov
cmp
lea
clc
lods
lock
dec
add
movb
inc
cmp
add
adc
pop
pop
sbb
sub
xor
and
cmp
xor
mov
inc
adc
jb
fdivrl
test
push
adc
shll
xchg
mov
ret
dec
xchg
push
test
hlt
imul
int3
or
jge
imul
loope
xchg
mov
add
add
inc
inc
add
mov
dec
push
leave
push
inc
rorb
mov
cmp
ud2
shl
dec
rcll
popa
or
and
out
shr
sub
push
mov
inc
mov
or
fs
in
gs
dec
test
movups
cmc
jnp
enter
pop
andl
mov
xchg
andb
sbbl
jns
or
mov
mov
lea
andb
jne
xchg
lds
inc
xchg
pop
popf
jl
ret
push
xor
dec
add
inc
and
dec
call
test
mov
mov
or
jnp
lea
je
mov
mov
and
push
adc
inc
push
and
push
test
subl
jecxz
sbb
sub
adc
xor
pop
sbb
inc
cmp
insb
jb
pop
lds
cli
pop
call
add
add
arpl
xor
add
xchg
ret
cli
xchg
cmp
sar
dec
adc
stos
sub
and
cmp
push
adc
or
dec
adc
push
rorb
add
mov
cbtw
inc
and
movsl
test
mov
inc
notb
and
or
lret
mov
shlb
test
and
inc
lock
stc
or
add
lods
int
hlt
push
hlt
sbb
and
lcall
insb
mov
or
sbb
cmc
cs
sarb
adc
lds
aam
push
into
lahf
in
mov
call
fcompl
mov
adc
movsb
call
push
mov
xchg
cld
inc
inc
lret
cmp
dec
mov
pop
jbe
cld
push
push
push
push
popa
insb
xor
cmpsb
shll
add
mov
dec
push
xchg
push
incb
dec
xor
mov
pop
mov
in
mov
xor
push
orb
out
add
cltd
scas
push
vmread
add
scas
shll
negl
xchg
insl
xchg
xchg
mov
shld
rcr
cmp
jecxz
in
push
sahf
add
pop
loopne
sub
aas
loop
in
or
push
mov
and
fcomi
add
je
add
lock
jne
stos
sub
add
xlat
add
lds
cmp
nop
mov
jns
es
fimull
hlt
insl
in
sub
jmp
test
js
jge
cmpsl
sbb
enter
pop
xlat
and
in
inc
cmp
lods
fsubrs
xchg
add
orl
cmpsl
add
xchg
in
mov
mov
or
or
aad
sarb
pop
ret
and
cs
mov
xchg
jne
add
outsb
xor
fstpt
ret
mov
cld
js
add
popa
mov
add
push
outsb
sbb
scas
sbbb
xor
imulb
call
add
pop
add
dec
mov
cmp
nop
add
push
inc
fcmovnb
pop
add
outsl
inc
push
std
mov
lcall
pop
fsts
mov
sbb
movsb
rolb
lret
je
add
adc
test
sub
inc
incb
mov
cld
add
dec
push
sbb
cmp
pop
mov
clc
roll
and
popa
test
inc
jg
stos
jg
add
stos
cmpsl
fsubrs
push
test
bound
nop
stc
pop
rolb
ret
xor
popf
mov
cmp
xor
inc
add
xor
int3
push
mov
adcb
orb
mov
adc
addr16
nop
mov
or
and
or
shlb
add
pop
shr
inc
loop
pusha
idivb
mov
pop
mov
or
and
loope
or
jmp
sub
or
adc
adc
sbb
or
xchg
sub
or
rcrl
jns
sbb
add
dec
or
push
and
cld
mov
sti
mov
mov
bound
jb
mov
test
in
add
jmp
or
inc
add
or
cmpsb
shlb
pop
sbb
cmp
cmp
add
push
dec
in
jmp
test
adc
repz
pop
add
add
mov
xchg
or
imul
jo
rolb
rcl
js
or
inc
jne
push
mov
in
dec
mov
sub
xor
testl
outsl
lahf
cmpsb
in
bound
es
into
fimuls
and
add
mov
cmp
addb
pop
add
or
add
jne
loopne
add
inc
xchg
outsb
and
hlt
ficoms
leave
dec
push
icebp
pop
add
aas
add
fscale
mov
xor
dec
les
or
je
mov
in
ficompl
xchg
shl
or
mov
inc
push
imul
leave
das
pop
ljmp
sbb
pushf
add
sbb
repz
sub
mov
sub
mov
movsb
shr
add
cli
rorb
movsl
pop
push
cmp
cmp
or
xchg
add
inc
jne
sbb
mov
mov
inc
xchg
add
mov
xchg
out
fcmovbe
iret
xchg
add
daa
fidivrs
add
jp
addb
ja
jne
jnp
push
add
das
xchg
shll
icebp
add
xor
and
out
test
jno
jae
add
popa
test
add
cmp
mov
xchg
xchg
pop
lods
pop
sub
call
decb
call
icebp
scas
cld
scas
insl
add
xchg
into
xchg
rolb
adc
or
mov
cmp
insb
push
aad
adc
add
xchg
stc
push
mov
cmova
or
xor
add
imul
decl
adc
imul
adc
sbb
loopne
pop
sub
or
bound
xchg
repz
mov
cs
aam
notb
rcll
mov
cli
movsl
test
mov
vmovups
mov
aas
clc
repz
enter
and
or
add
mov
fmuls
and
push
in
scas
xchg
mov
mov
and
es
mov
add
push
add
mov
rclb
dec
or
mov
ljmp
loope
mov
jle
and
int
lret
aam
inc
and
pop
aas
add
daa
fwait
mov
repnz
add
or
insl
xchg
shl
fcoml
mov
inc
mov
aad
push
jl
sbb
movsl
pusha
xor
dec
orb
add
in
ja
push
popf
loopne
add
mov
addl
inc
xchg
add
cmc
cmovp
dec
loop
dec
pop
mov
push
jae
shrb
arpl
jmp
movsb
adc
push
fldl
in
jg
cmp
movsb
add
push
and
xchg
xchg
cmpsl
cwtl
lret
out
pop
lods
movsb
mov
shrb
incb
dec
mov
scas
push
add
lods
ja
mov
xchg
add
lret
or
add
fstpt
mov
fwait
mov
je
bswap
ss
cmpsl
xchg
push
inc
add
sbbb
out
das
jg
pop
pop
push
or
test
bound
jbe
inc
and
add
mov
loop
sbb
cli
xchg
enter
and
test
divl
xor
adc
mov
inc
ja
inc
sahf
and
xchg
aam
sub
push
outsl
data16
push
leave
dec
popa
xlat
fninit
jae
sbb
loopne
jne
jb
test
push
pushl
pop
mov
mov
jo
add
fs
imul
adc
dec
inc
mov
mov
cld
fisubl
aas
xlat
inc
mov
push
xor
dec
test
mov
add
inc
dec
jne
hlt
mov
cmp
scas
inc
add
insb
lds
inc
clc
mov
jmp
les
mov
mov
or
xor
push
dec
mov
icebp
sbb
add
mov
ret
jmp
mov
shr
outsl
shlb
dec
pop
hlt
mov
cmp
inc
lock
dec
push
test
mov
mov
lret
push
cltd
mov
jge
inc
mov
sbb
js
addb
cs
repz
arpl
insb
adc
xor
inc
dec
cs
bound
fs
push
mov
and
sub
cmp
imul
sbb
jne
inc
inc
pop
and
adc
shr
mov
sbb
add
movb
lods
int3
sub
in
popa
adc
cmp
je
jge
iret
sub
push
mov
mov
mov
lea
cs
mov
dec
insb
sbb
dec
sub
sbb
scas
lea
ss
mov
out
push
sbb
push
sub
sbb
aaa
xchg
mov
dec
push
cltd
xchg
jb
cmp
inc
inc
imul
jnp
mov
add
fistpl
add
push
dec
repnz
ja
add
xchg
shrb
adc
inc
xchg
insl
inc
leave
notl
sub
cmp
adcl
dec
imul
aaa
or
sbb
dec
add
push
push
xor
rcrb
mov
pop
testb
mov
add
adc
xor
jecxz
lock
enter
test
mov
mov
cmp
shl
aad
pop
inc
adc
negb
cli
jg
adc
jns
mov
cmp
rcrl
stos
mov
pop
adc
rcrl
shl
inc
xor
clc
cmp
pusha
mov
cmpsb
inc
and
cmp
pop
incl
xor
add
mov
jecxz
add
lar
mov
mov
iret
add
gs
mov
dec
cmp
inc
shr
dec
mov
add
mov
lea
ljmp
rorb
jne
out
popf
inc
xor
mov
mov
fistl
ficoms
add
sbb
push
mov
mov
hlt
xor
les
call
lea
popf
les
data16
and
add
inc
or
rolb
or
sbb
add
or
lcall
adc
cld
and
mov
sub
inc
pop
adcb
cmp
adc
jns
xchg
jmp
call
pop
inc
mov
push
pop
rorb
sub
inc
out
inc
ficompl
pop
mov
loop
test
mov
mov
push
pop
push
cs
inc
jb
jbe
xor
fdivl
add
lods
mov
push
inc
out
push
fs
inc
pushf
cmp
jmp
decb
test
dec
add
enter
mov
add
fsubrl
inc
lret
scas
xor
enter
in
mov
pop
repnz
add
fmull
adc
add
push
gs
mov
adc
jg
mov
or
or
test
mov
or
ja
push
pop
jmp
loope
fldl
dec
movsl
lahf
push
add
insb
pop
js
or
cmc
call
rorb
test
dec
fisttpll
mov
rcll
and
push
mov
repnz
and
fs
xor
outsb
dec
lds
rolb
xchg
enter
pop
push
mov
movsb
sahf
sarb
dec
pop
popf
je
mov
dec
arpl
and
mov
in
jb
in
dec
loope
and
inc
push
push
push
into
inc
adc
or
int3
or
xchg
and
adc
pusha
dec
fiadds
and
push
xor
xchg
rorb
pop
push
add
xor
xor
add
jle
lods
inc
fwait
rclb
sbb
mov
or
fimuls
insb
fstpt
xchg
repz
cmp
push
cmp
cmp
pushf
into
adc
iret
dec
sbb
shrb
aaa
mov
rol
jp
mov
xor
aaa
sub
mov
fsts
sub
cli
xor
loopne
xchg
xor
push
in
add
out
addb
jb
or
mov
mov
xchg
cli
and
subl
push
push
jb
inc
nop
jns
xorb
jne
or
loopne
add
dec
or
xchg
or
aaa
pop
and
dec
or
and
and
xchg
cmc
xchg
pop
mov
mov
mov
mov
test
or
push
clc
cli
ret
or
sbb
stos
ljmp
and
inc
cmovs
push
ret
cmp
cmp
js
icebp
and
loope
sbb
xchg
jae
cmp
rcll
lock
or
test
sar
add
pop
inc
test
xor
jmp
aas
ffreep
jecxz
add
movb
fadds
popa
mov
call
mov
pop
inc
aad
adc
pop
add
loope
test
jbe
push
dec
shrl
mov
js
dec
adc
pop
outsb
xchg
test
sbb
pop
loope
jg
ljmp
dec
xlat
mov
push
sti
sbb
jns
fs
or
loop
aad
inc
mov
mov
mov
lcall
daa
sub
sbb
mov
and
mov
or
jnp
adcb
push
lret
sbb
push
pop
sbb
mov
dec
push
bound
fisubrs
test
sub
fdivl
imul
mov
sar
fwait
add
push
loop
mov
cmp
pop
in
sub
xor
repz
sub
fisubs
stc
in
sbb
iret
int
repz
xchg
roll
stos
mov
xor
jae
inc
cmp
test
xor
aam
add
int
push
cmpsl
pushf
mov
ds
fadd
str
imul
int
ss
xchg
adcb
lods
add
mov
mov
dec
inc
jne
lods
and
mov
add
ja
sbb
add
in
push
ljmp
push
out
icebp
adc
es
js
fnstcw
and
ret
xor
movsl
mov
arpl
pop
cmp
sub
xor
inc
lods
push
mov
pop
push
mov
movsl
mov
imul
add
adc
add
push
pop
ret
xchg
lret
mov
mulb
aaa
fldl
ljmp
xchg
mov
icebp
cmp
fbstp
clc
add
mov
stos
out
add
shlb
add
arpl
inc
addr16
cmp
pop
pop
add
bound
cmp
xchg
dec
sub
outsb
repz
push
mov
iret
sbb
and
in
dec
mov
dec
cmc
std
enter
rcr
push
jecxz
mov
bound
inc
or
icebp
ja
jl
add
ss
add
push
shrl
cmp
ror
out
mov
fdivs
sbb
shl
or
aas
sahf
test
and
sbb
and
mov
inc
push
sub
jns
fcompl
push
in
hlt
adc
lock
xlat
mov
jno
push
es
das
xlat
push
jge
ret
inc
jmp
xchg
icebp
and
ficompl
leave
fucom
dec
push
insb
test
pop
pop
mov
or
xor
dec
cmp
dec
cmp
mov
sub
testl
or
mov
frstor
lods
fdivrl
scas
aam
xchg
jge
daa
shr
fisubrs
sti
loop,pt
xchg
cmpl
sub
mov
in
sub
pop
repnz
icebp
out
loopne
shll
out
enter
dec
mov
pop
out
mov
dec
movsb
jnp
insb
out
jp
sbb
sbb
mov
xor
mov
std
cwtl
daa
sub
fnsave
cmp
pop
nop
sbb
fisttpl
loope
and
in
xchg
sub
or
mov
pop
xchg
xor
adc
rclb
push
xchg
hlt
pop
pop
cltd
dec
mov
xor
sub
add
push
push
dec
mov
sbb
cmp
idivb
mov
jecxz
ret
lret
and
xor
mov
mov
call
jns
shlb
sub
enter
add
int
outsb
push
cmc
incl
sbb
popa
xchg
add
int3
pop
out
stc
idivb
call
aad
jp
lea
add
rorb
pop
cld
rolb
stos
pop
push
sbb
es
cmpsl
and
inc
fists
orl
icebp
jp
cmp
cmp
stc
sbb
push
aam
sbb
pop
add
jbe
push
push
and
inc
add
xor
lea
jge
dec
out
incb
pop
adc
jle
subb
insl
adcb
cmpsb
pop
add
sbb
loope
lahf
push
repz
sub
sbb
sub
je
jae
xor
xor
mov
stos
sbb
out
lods
add
inc
subl
adc
jl
push
pop
pop
add
add
sti
pushf
pop
ret
add
push
stc
lret
add
xchg
mov
pop
mov
inc
and
andb
cmpsb
jns
sbb
adc
loopne
cmp
push
pop
cmp
pop
mov
xorb
scas
iret
mov
xor
lods
mov
clc
popa
xor
pushf
pop
mov
mov
jge
pop
xor
shlb
add
das
ret
push
cmp
cmp
adc
test
add
push
jmp
pop
inc
sub
inc
arpl
cltd
enter
add
push
inc
in
cmp
or
xchg
jo
inc
jge
push
cmp
pop
mov
and
inc
xor
popa
outsl
je
mov
sbb
adc
inc
jg
aaa
aad
mov
rcpps
in
sbb
cmp
test
stc
or
ss
inc
rcrb
xchg
dec
jne
add
add
mov
scas
jp
cmp
inc
pop
mov
ja
int3
pop
add
push
mov
push
mov
or
js
add
jo
xchg
and
inc
mov
adc
cmp
ret
iret
or
mov
cmpsb
push
and
pusha
stc
pop
add
aam
in
inc
mov
scas
mov
mov
ds
mov
mov
add
out
mov
stos
add
sbb
add
sahf
cmpsb
push
xor
cld
ja
out
sbb
dec
outsl
inc
lret
test
add
shld
or
rsqrtps
jo
mov
pop
sbb
add
mov
push
pop
pop
pushf
jnp
or
fdivrl
sbb
mov
fdivr
mov
add
cmp
push
add
mov
pop
lock
div
stc
arpl
sub
mov
pushf
jns
sbb
push
jge
pop
mov
push
fisubs
mov
sub
in
add
imul
jg
jmp
pop
cld
inc
popf
dec
xchg
add
clc
out
mov
nop
jge
adc
sahf
pushf
frstor
add
jcxz
xchg
loope
add
pusha
mov
fmuls
pcmpgtw
cmp
add
sarl
negl
add
xor
adc
add
bound
cmc
or
cmp
push
pop
repz
in
mov
fistl
out
dec
add
and
cmp
xchg
andb
gs
lcall
pop
aad
loopne
pop
sahf
out
add
ja
call
push
mov
pop
int3
xlat
sub
loop
aam
sub
jmp
out
add
scas
push
outsb
jle
mov
outsl
aam
jl
push
sub
add
xchg
cwtl
ja
repnz
repz
decb
xchg
add
outsl
or
xchg
fisubs
and
inc
dec
lds
sbb
sub
add
data16
ljmp
mov
mov
dec
push
mov
ljmp
or
adc
frstor
mov
inc
pop
gs
xor
pushf
sub
cmp
dec
aad
mov
loopne
dec
add
jecxz
add
pop
push
mov
mov
push
pop
inc
pushl
pop
ja
jae
icebp
xchg
add
ficoms
add
fxch
lock
fucom
add
xchg
hlt
xor
add
add
test
xlat
lock
pop
push
data16
sbb
dec
dec
mov
fldt
lcall
mov
xchg
jns
push
sar
add
loope
pcmpgtb
adc
pop
inc
mov
sahf
push
movsb
pop
add
gs
test
mov
sub
inc
js
out
push
call
mov
lret
lods
mov
out
xchg
inc
mov
add
cwtl
mov
jnp
les
cmp
dec
cmp
adc
pushl
mov
aaa
push
mov
or
scas
mov
shll
cmp
jmp
or
inc
adc
repnz
lds
xchg
xor
cmp
add
fnsave
mov
shll
mov
pusha
jnp
pop
mov
mov
ret
das
mov
add
add
and
lahf
pusha
jg
adc
or
mov
jo
cmp
push
cmp
xor
jb
push
add
jae
subb
pop
push
cmp
pop
cwtl
das
add
and
add
fmul
mov
sub
pop
inc
test
push
xorb
flds
insl
jnp
xlat
repz
xor
addr16
mov
dec
and
pop
xchg
jle
push
pusha
into
scas
roll
mov
push
movsl
add
rcr
sub
popl
inc
loope
iret
clc
xorb
inc
sbb
mov
jne
sub
ds
fcmovnb
sbb
int3
add
cwtl
or
add
mov
sbb
xchg
and
jmp
jecxz
pop
cwtl
movsb
push
das
add
jmp
fildl
mov
sbb
imul
ror
shlb
add
inc
mov
pop
inc
orb
mov
aas
mov
push
fidivl
pop
test
xor
ds
popw
inc
mov
lock
mov
cmp
scas
cld
imul
xor
add
jbe
jle
jmp
push
pop
inc
mov
in
fstpl
lret
loope
cmp
pop
jne
jae
push
cmpb
cmp
cltd
xor
mov
nop
mov
pushf
add
ret
stos
imul
aas
dec
push
mov
cmp
add
add
imul
ss
jmp
jo
mov
add
call
movsb
push
push
addr16
adc
jae
icebp
or
dec
mov
add
add
or
push
aad
stc
fs
iret
pop
cmp
and
sbb
xchg
das
add
hlt
insl
lcall
adc
add
shl
pop
jg
or
ds
lcall
dec
or
popa
in
movsb
add
mov
mov
jg
add
xor
xor
imull
mov
and
nop
add
push
pop
add
mov
out
sub
leave
push
cld
pop
bound
mov
push
mull
adc
in
add
repnz
add
movsb
xlat
push
lret
xchg
mov
jno
je
repz
push
jmp
mov
mov
cmc
scas
test
movups
ret
sbbb
jno
add
mov
mov
movsb
xchg
pusha
ja
and
jge
test
dec
mov
mov
sub
sub
fmuls
adc
sahf
xchg
inc
add
popf
lods
lcall
in
les
push
dec
mov
stc
xchg
and
mov
shlb
add
rcrb
mov
test
lods
push
mov
ror
out
jno
test
mov
add
push
pushf
jns
jg
add
xchg
test
mov
lock
fs
adc
jg
pop
stos
call
mov
leave
mov
xchg
clc
jl
ja
add
push
loope
inc
add
fs
pop
add
or
shrb
push
add
test
lret
mov
popl
jl
ja
orb
enter
movups
pop
pop
xchg
and
pop
pop
fwait
rol
scas
or
push
ja
hlt
lock
adc
out
das
mov
ficoms
lock
adcl
dec
scas
push
stc
xorb
push
das
sub
adc
mov
and
xchg
push
cmp
cld
cwtl
mov
jl
dec
call
xor
adc
mov
inc
inc
mov
jmp
repnz
push
sub
mov
inc
mov
and
mov
sbb
lock
incl
stc
addb
pop
cmpl
adc
adc
or
push
jne
add
jmp
and
movsb
pop
adc
or
adc
inc
adc
in
lret
inc
cld
push
fs
add
cmpl
aad
orl
sub
inc
mov
lret
sysenter
stos
popa
cmp
pop
roll
inc
adc
mov
loop
xor
jne
aas
addb
adc
jo
and
mov
inc
outsl
mov
push
and
ret
pop
dec
or
or
sahf
sub
mov
jae
jbe
push
xchg
or
inc
jmp
inc
call
movsb
inc
aad
and
adc
push
push
jg
dec
and
mov
jnp
ret
stc
add
xchg
add
test
xor
xchg
nop
mov
shll
or
ret
cmpsb
std
push
lock
add
jb
pop
lret
adc
cmp
dec
add
cld
ret
push
js
mov
xor
mov
mov
mov
icebp
subb
add
sbb
ret
and
test
nop
cmp
lock
push
mov
mov
mov
cwtl
pop
call
add
clc
and
jmp
jp
adc
imul
inc
add
std
out
sub
sub
mov
movsb
lcall
xor
in
loop
xor
cmp
nop
sarl
rcrb
adc
insb
stos
imul
dec
fdivrl
fists
sub
dec
sub
inc
repnz
push
add
and
loop
cli
inc
and
sub
or
pop
lds
and
or
sub
movsl
lods
lcall
inc
int3
sub
nop
stos
loop
clc
pop
or
jmp
aaa
nop
add
imul
push
inc
insb
mov
push
sahf
fxtract
imul
or
add
xchg
lods
push
jae
adc
jecxz
sub
push
mov
add
adc
push
inc
push
addl
mov
mov
shll
xchg
adc
inc
data16
push
test
lret
mov
sub
fs
addr16
hlt
pop
mov
jmp
sub
lds
mov
movl
pop
inc
test
adc
inc
push
dec
push
iret
or
jp
jmp
aas
ret
xchg
ljmp
test
inc
dec
and
rorb
xor
add
fcoml
cwtl
dec
cld
jne
arpl
sub
and
clc
mov
repnz
mov
or
push
xchg
add
test
jmp
dec
sub
sub
cmp
add
cmpsw
sub
lods
or
sbb
mov
lcall
jmp
popa
mov
psubd
or
and
jb
cmp
fiadds
or
xchg
sti
jo
adc
pmaxsw
dec
or
jns
sti
mov
push
inc
add
push
and
loop
push
jmp
mov
rcrl
mulb
push
orb
jge
inc
pop
je
mov
mov
jmp
add
ss
and
adc
xor
adc
sbb
xor
int3
fs
imul
or
xchg
mov
sbb
xor
popf
push
movsb
xor
lods
sub
jle
stos
mov
mov
mov
mov
xor
ror
sub
enter
or
mov
ss
inc
jnp
scas
push
adc
pop
jmp
cmc
add
add
cmp
dec
mov
or
mov
pop
xchg
orl
mov
aam
mov
ss
sbb
sbb
and
and
sub
lea
movb
loopne
sbb
test
in
jmp
add
mov
adc
mov
ss
decl
xor
or
imul
sub
sub
cmpsb
or
lock
es
inc
aas
ljmp
mov
adc
and
ljmp
sbb
xchg
adc
les
mov
dec
popf
in
test
sbb
mov
insb
add
xor
add
add
out
mov
movsb
mov
jl
mov
jmp
and
mov
addr16
cwtl
push
push
or
ret
push
or
inc
lock
sbb
xor
repnz
mov
and
dec
jg
outsb
cmc
cmp
cmp
pop
incl
add
adc
mov
dec
aam
adc
test
negl
push
sub
push
fsubs
loop
or
add
push
hlt
mov
push
fsts
add
jecxz
push
mov
mov
and
push
fsubrs
sbb
js
dec
adcb
mov
sbb
dec
add
cmp
and
dec
sbb
sub
jne
or
push
add
adc
lahf
divl
out
call
addb
xor
cwtl
jp
cmpsl
xor
add
and
ja
cwtl
dec
push
cmp
xlat
pop
shr
inc
jae
cmpsb
loop
cmp
jns
jo
sti
pop
or
add
push
or
add
movsb
push
icebp
es
cmp
add
movntq
out
aaa
xchg
push
sahf
push
sub
js
or
orl
stos
add
aaa
jno
mov
addl
cmp
inc
pushf
rol
push
mov
je
or
or
add
mov
sub
and
inc
add
mov
jmp
adc
cmpsb
mov
sub
out
xor
sahf
leave
movsbl
sub
and
cltd
add
inc
or
je
mov
dec
cmp
and
or
testb
xchg
push
fwait
rcr
xchg
pop
repnz
add
or
je
mov
lret
adc
call
jmp
mov
push
push
movsb
imul
or
adc
fidivrs
jae
ret
es
icebp
jns
fcoms
imul
loopne
jmp
daa
jecxz
xor
and
mov
mov
sbbl
push
xor
mov
and
dec
cmp
sbb
es
and
pop
push
sbb
add
sbb
rcrb
sbb
pop
push
xchg
adc
femms
pop
or
or
or
push
add
aad
or
ret
mov
dec
jnp
insb
or
xor
or
pusha
and
dec
sub
and
in
add
fadds
mov
push
xchg
dec
adc
add
jmp
mov
jne
pop
or
aaa
and
dec
adc
and
mov
push
mov
pushl
addl
das
jne
mov
cli
adc
push
sub
add
sub
push
sbb
add
xchg
dec
mov
sbb
pop
out
in
add
push
in
daa
pop
sub
adc
cmp
in
or
push
sbb
shlb
pop
add
xor
jge
push
mov
jne
call
movsl
mov
add
fnstcw
out
inc
dec
sahf
iret
mov
xchg
test
enter
das
adc
je
cmpsb
push
push
addl
push
sbb
fistps
pushf
push
lds
and
dec
pop
fcoml
movsl
testb
xlat
je
loop
mov
mov
andb
ret
push
lods
adc
and
xchg
add
add
scas
mov
push
ds
sbb
pop
push
ret
mov
xchg
shll
and
jmp
pop
xchg
push
lret
inc
dec
mov
movsl
cwtl
xchg
test
imul
bnd
loop
fbld
jmp
out
jecxz
inc
push
adc
cmp
pushf
or
jns
cs
push
cs
xor
arpl
xchg
inc
xor
pusha
push
aaa
push
int3
cmp
and
mov
mov
push
adc
inc
call
add
mov
lods
and
sub
sub
cmp
adc
push
push
or
ret
fs
or
jne
insl
pop
lret
adc
pop
and
popa
dec
adc
inc
in
and
mov
sub
mov
and
cmp
xchg
xchg
aad
cmp
mov
movsb
push
mov
add
inc
jl
stc
or
sub
or
sub
and
dec
popa
adc
mov
dec
dec
aad
movsb
push
icebp
xchg
adc
stos
push
nop
call
push
add
outsb
pcmpeqb
and
daa
adc
and
int
inc
dec
shrl
xlat
xlat
or
sahf
jge
fildl
jmp
or
add
hlt
jne
dec
pop
scas
int3
push
xchg
push
outsl
adc
fwait
sub
dec
push
mov
jne
sub
xor
repnz
push
or
test
sahf
sbb
fdivl
or
outsl
push
adc
bound
jmp
fimuls
mov
aas
rorb
inc
jmp
pop
sbb
adc
add
and
out
mov
call
pop
dec
or
ja
lcall
inc
or
inc
xchg
dec
inc
lret
iret
les
insb
jle
cmc
loopne
jle
in
out
xchg
adc
rcrb
lock
pop
or
jg
sub
inc
and
xlat
jg
xor
add
out
ljmp
sub
test
and
mov
inc
aas
mov
xor
rclb
adc
or
in
and
or
or
xchg
jle
call
call
pop
shll
cs
inc
adc
push
fwait
orb
xorb
push
cmp
mov
or
test
add
pop
jecxz
add
cmp
push
push
and
orl
adc
mov
adc
sbb
sbb
dec
mov
shll
dec
and
sub
sub
xor
ljmp
xor
cmp
cmp
add
adc
aas
test
mov
inc
inc
adc
inc
inc
dec
dec
dec
dec
dec
dec
add
or
dec
push
push
dec
push
movsl
mov
push
sub
push
push
sub
or
or
or
push
pop
pop
dec
cmpsb
loopne
fs
or
cmpsl
mov
adc
clc
adc
adc
test
mov
inc
idivb
sbb
inc
sbb
jmp
pushw
adc
or
push
pop
inc
fs
or
imul
out
mov
or
adc
jnp
mov
cmp
adc
lea
inc
and
adc
xchg
out
adc
das
and
inc
push
jbe
cwtl
adc
mov
or
dec
cmp
fsubs
cmpl
push
and
and
inc
inc
and
mov
adc
jo
jge
mov
xchg
inc
movsb
mov
mov
dec
in
repnz
and
xchg
and
xor
or
xchg
repnz
out
and
inc
lds
inc
inc
mov
dec
dec
pop
lea
cld
push
inc
jb
adc
andl
or
mov
adc
icebp
add
rolb
jns
add
lret
mov
push
stos
pop
xorl
xchg
adc
inc
test
cmp
mov
xor
cli
insb
mov
inc
adc
inc
inc
test
and
lret
lahf
push
pop
and
xor
stos
shrl
int3
push
add
add
sbb
sbb
stc
add
pop
ficompl
mov
nop
and
dec
jge
movsl
fnsave
dec
push
jge
adc
add
adc
ret
sahf
mov
or
adc
movb
sbb
ss
dec
mov
mov
and
dec
pop
cmp
and
mov
fimuls
cmpl
aam
pop
cmp
and
push
inc
stos
inc
or
dec
xor
cmpsb
inc
or
pop
mov
adc
mov
lds
push
push
push
jne
dec
inc
jns
adc
dec
les
or
mov
sarb
iret
cmp
inc
int3
add
pop
inc
sbb
fs
adc
push
dec
ss
sbb
inc
lret
call
inc
movsb
fsubp
rolb
hlt
cmp
ficoms
or
adc
dec
cs
inc
and
push
mov
dec
into
xchg
loop
mulb
or
push
dec
mov
pushf
and
dec
lock
adc
inc
cwtl
ret
adc
mov
inc
xchg
push
xchg
and
lds
adc
pop
sbb
pop
mov
xchg
sbb
movsl
adc
mov
sbb
adc
scas
jo
add
xchg
sbb
mov
dec
add
mov
adc
inc
xor
inc
pop
nop
sub
inc
das
and
jns
or
inc
pop
inc
inc
negl
inc
cmp
cmp
nop
cmp
sbb
or
and
or
nop
push
add
pop
inc
int3
and
pop
inc
mov
or
test
or
test
or
test
xor
inc
or
rolb
xchg
mov
repnz
sbb
or
sub
adc
icebp
xor
adc
test
or
test
or
shlb
outsl
mov
xor
and
pop
loopne
test
mov
addr16
outsb
roll
loop
sbb
push
mov
add
rolb
sbb
inc
cmpsb
orb
and
mov
rcl
mov
inc
xchg
rcll
dec
mov
adc
inc
arpl
dec
daa
push
aas
pop
lock
sub
test
jno
subb
imul
mov
pop
xor
sub
pop
or
test
orl
xchg
mov
mov
inc
push
je
and
enter
push
sub
xchg
sub
loopne
sbb
pushf
in
pop
add
or
out
jg
les
lock
xchg
es
xchg
test
daa
bound
sub
mov
add
clc
pushl
dec
sub
loop
enter
jno
mov
stc
sbb
sbb
fsubrs
aaa
jb
xchg
inc
jl
pop
add
lahf
fstpt
cmpl
aad
inc
and
pop
xchg
sub
ja
mov
out
mov
andb
cwtl
rclb
adc
sub
fnstcw
mov
movsl
cmp
fdivp
adc
mov
jb
push
push
je
jge
and
sarb
shrl
jb
les
jbe
and
sub
or
scas
mov
push
dec
sub
sub
xor
mov
add
popf
push
adc
mov
mov
or
push
push
jmp
inc
mov
sbb
scas
imull
xor
jne
or
jmp
push
mov
and
cwtl
adc
fisttps
or
pop
in
aaa
fldl
mov
pop
lret
cmp
lahf
cmp
fldl
lds
ds
add
sbb
jge,pn
or
xlat
xchg
adcb
jb
sahf
jbe
insb
or
ja
xchg
nop
adc
loope,pt
pop
daa
out
push
ds
pop
sub
rolb
xchg
inc
add
xchg
movl
adcb
xlat
cltd
pop
adc
and
enter
sub
dec
lahf
into
ja
sub
in
dec
daa
iret
jb
add
pop
lret
das
jnp
fnstcw
mov
or
inc
daa
leave
adc
daa
inc
repnz
add
mov
daa
lret
aam
lret
popf
inc
es
push
push
and
pop
das
inc
xchg
imul
inc
pop
bound
cmpsl
les
cmpsl
or
loop
mov
je
sub
cmpb
scas
lea
sub
sub
jl
into
rcr
loop
movsb
xor
iret
pop
scas
xor
jo
xchg
cmp
xor
sgdtl
add
sbb
cmp
inc
inc
or
cmp
mov
cwtl
or
xorl
scas
mov
jnp
push
push
pusha
xchg
shlb
test
sub
dec
andl
sub
aad
add
ljmp
das
out
xor
bound
xor
xor
fmull
sbb
push
jbe
xor
or
sub
mov
and
out
int
mov
sbb
xchg
cli
adc
pushf
sub
mov
push
mov
xchg
inc
daa
shrb
xor
int3
sahf
or
cmp
aam
enter
movsb
or
mov
fdivrl
stos
push
imul
dec
cwtl
repnz
adc
loope
mov
inc
xor
push
add
add
mov
bound
sbb
test
int3
aaa
ret
das
sub
adc
mov
and
sub
subl
roll
add
sub
cmpsb
lock
call
daa
jb
out
sbb
sub
popl
loop
mov
and
sbb
repz
pusha
push
xchg
pop
xor
movsl
xor
insb
and
aam
or
test
mov
out
and
xchg
adc
mov
add
mov
dec
sbb
adc
and
add
int3
sub
pop
add
inc
sbb
mov
adc
sub
and
addr16
scas
mov
imul
shlb
outsl
dec
mov
and
jb
cmp
shlb
call
push
and
mov
dec
or
aam
and
pop
xchg
sbb
out
pop
mov
jno
push
lcall
push
iret
mov
icebp
test
xor
repnz
dec
pop
mov
dec
pop
lret
jge
and
push
pushf
andb
adc
mov
fiadds
popa
push
add
test
add
and
cltd
mov
rcll
mov
mov
jge
jbe
xchg
or
sub
xchg
push
loop
call
and
xchg
xchg
out
jb
xor
or
inc
xchg
sbb
das
mov
or
gs
pushf
push
push
dec
es
fdivrs
xchg
mov
pop
pop
jle
jbe
mov
sbb
in
cs
cmpsb
add
and
sub
xor
nop
inc
stos
and
inc
test
or
sub
inc
push
mov
pop
cmp
mov
adc
enter
pop
xchg
xor
inc
lds
xor
adc
mov
aaa
pushf
and
jecxz
and
jge
add
data16
enter
pusha
xchg
clc
sbb
jp
das
sub
sbb
mov
scas
mov
xchg
mov
adc
push
sahf
loop
shrl
cmp
leave
mov
sub
out
add
pop
sbb
cmpsb
scas
dec
icebp
inc
dec
mov
fistl
jne
dec
lds
inc
bound
adc
movb
icebp
adc
adc
sbb
mov
cmp
add
icebp
xor
dec
jecxz
shlb
call
mov
cmp
push
enter
and
insl
lret
fiadds
sub
es
dec
sbb
and
jg
scas
xor
inc
aad
stc
in
lahf
ret
pusha
cltd
cmp
pop
lock
or
cltd
ficoms
in
es
xor
stos
and
xchg
sbb
int3
and
shrb
xor
or
xchg
xchg
inc
or
fmulp
push
insb
jno
xor
pushf
mov
mov
add
push
jbe
push
repz
inc
arpl
cmp
mov
adc
repz
adcl
add
loope
adc
cmp
aas
pop
and
hlt
leave
lods
jnp
int
into
push
out
push
es
push
test
jp
leave
nop
and
jns
push
adc
call
es
push
test
and
rcll
mov
popf
gs
or
sahf
lds
xchg
aas
out
sbb
mov
sbb
xchg
mov
orb
xor
xchg
adc
fimuls
cmp
imul
lret
mov
cmpsl
xchg
mov
xchg
mov
pop
sub
jle
inc
cld
mov
or
pop
cmp
mov
test
lcall
mov
mov
sub
mov
sub
xchg
and
cmpsl
je
or
adc
inc
movsb
dec
pop
sub
mov
push
jmp
sub
mov
imul
gs
mov
shl
push
dec
mov
adc
or
cmp
out
cmp
sub
cmp
shlb
and
test
jg
movaps
adc
and
stos
lahf
push
addl
je
daa
test
adc
push
pop
jbe
cmp
cltd
sbb
testb
pop
outsb
js
lea
rcl
push
fisttps
adc
sub
leave
or
inc
mov
cmp
test
or
mov
and
into
pop
nop
mov
shlb
sarl
pop
rorb
push
iret
mov
mov
adc
and
mov
ftst
add
push
jo
mov
and
xor
adc
mov
adc
das
and
dec
int3
fs
sub
push
sbb
out
adc
adc
test
pop
cmc
mov
mov
add
lret
add
xor
inc
sahf
les
dec
mov
dec
movsb
cmpl
jae
in
inc
mov
stos
adc
xchg
pop
dec
add
call
sub
pop
and
adc
mov
mov
and
aam
or
pop
mov
inc
jb
xchg
or
xchg
rcrl
je
je
out
mov
mov
xlat
or
xchg
cmpsb
sub
mov
or
mov
add
mov
mov
test
dec
or
stc
leave
dec
sbb
dec
or
push
mov
and
cltd
add
push
or
jge
mov
leave
sti
addr16
loop
call
ss
test
cvtps2pi
inc
imul
sub
pop
inc
push
mov
fmul
sub
sub
adc
fdivrl
add
lds
push
cmpsb
das
mov
jns
push
push
subl
inc
mov
jo
push
mov
mov
das
flds
mov
arpl
out
jecxz
hlt
cmp
lret
sbb
pop
mov
repnz
dec
xchg
mov
xchg
clc
mov
push
mov
adc
xchg
cmp
adc
push
inc
xchg
sbb
mov
and
push
jae
lea
out
xchg
fists
repnz
iret
adc
push
out
enter
ret
sbb
iret
or
leave
or
jl
inc
or
push
sbb
orb
sbb
cwtl
xlat
rcrb
dec
xor
aas
mov
pop
jge
daa
pop
or
lods
xor
push
iret
orl
sub
lahf
neg
push
or
aad
add
lods
jg
jmp
sbb
mov
push
mov
adc
xchg
xor
imul
pop
call
mov
inc
mov
jg
je
push
test
inc
pop
mov
and
and
les
or
push
ja
fisubrs
mov
in
fnstsw
daa
pop
add
cmp
rorb
jo
adc
xor
lds
mov
daa
pop
sti
lcall
and
adc
jns
and
cltd
loop
in
je
lea
cmpb
xor
ret
call
cli
or
sbb
xor
insb
jl
out
xor
out
mov
jle
enter
or
rcr
xor
lods
bound
xchg
movsb
out
ds
sub
decb
push
xchg
scas
mov
push
mov
inc
jns
push
enter
lahf
xchg
inc
dec
addb
jmp
mov
cmpsb
inc
inc
mov
test
jne
xchg
cmp
jo
gs
arpl
adc
sub
loope
lahf
aam
movsl
std
mov
push
xor
xchg
jno
loop
dec
adc
mov
pop
and
pop
sti
popa
or
jae
mov
adc
sbb
ret
push
dec
mov
imul
inc
mov
dec
adc
and
or
or
mov
xor
adc
in
sbb
cld
xor
sbb
or
repnz
sbb
adc
and
cmp
and
mov
ss
xor
enter
cmp
test
cwtl
xor
inc
and
inc
dec
and
dec
icebp
dec
jmp
enter
ljmp
outsb
jne
push
jno
mov
imul
sub
je
or
imul
inc
adc
inc
imul
sub
push
sbb
lods
insb
insl
popa
xlat
mov
jo
jns
and
imul
push
jne
stc
dec
adc
cmp
insb
cld
jp
pop
stos
inc
into
cmp
mov
lds
push
pop
jo
xor
fnstcw
xchg
sti
daa
cmp
sbb
insl
sbb
push
push
outsl
and
pop
and
scas
jecxz
aam
lcall
fsubrp
gs
pop
mov
out
add
clc
inc
push
pop
fucomi
int3
lods
fistpll
ud0
dec
sub
adc
mov
mov
xorb
push
and
inc
loope
dec
dec
pop
sub
clc
popa
jmp
lret
fs
xor
push
lds
and
int3
sub
push
sbb
xor
adc
and
sti
mov
jae
repz
xchg
add
enter
xchg
dec
push
xor
fmul
cmp
sahf
inc
enter
push
adc
cmp
push
nop
insb
pop
or
push
push
add
hlt
popa
push
jns
xor
dec
imul
jmp
or
dec
add
mull
xor
mov
pop
dec
mov
mov
pusha
push
push
inc
outsb
jp
mov
cld
adc
jbe
dec
add
xchg
cli
or
jo
loope
adc
mov
cmpsl
jg
push
push
sti
fcompl
aam
flds
xor
sbb
or
jecxz
push
push
dec
jmp
sbb
adcl
jo
lea
mov
loopne
inc
fistpll
roll
cmpsl
stos
stos
lcall
add
mov
lret
les
bound
test
je
xchg
loop
push
mov
stos
push
adc
sbb
cmpsb
test
inc
cld
inc
dec
imul
and
addr16
leave
push
jl
inc
sbb
daa
adc
xlat
cli
popa
out
fwait
loopne
jl
push
adc
cltd
cmp
pop
mov
mov
jg
jb
jmp
dec
push
dec
adc
jge
pushf
jne
xchg
out
xlat
sbb
decl
test
adc
dec
mov
data16
lahf
mov
fcoms
inc
cmp
fadds
jnp
xchg
sbb
inc
sub
push
fs
push
dec
decb
xorl
repnz
dec
in
mov
inc
pop
das
sbb
xor
or
cmc
ds
imul
data16
or
jno
fs
lds
jmp
mov
aad
dec
loop
add
cmpsl
mov
push
mov
or
mov
test
push
lea
stos
adc
adc
ret
aaa
sub
push
or
or
test
sub
idivl
pop
daa
inc
mov
jg
mov
ret
pop
jge
repnz
push
add
mov
dec
xlat
dec
push
mov
imul
imul
imul
cmp
rorl
or
fdivl
int3
lds
or
in
push
call
out
adc
push
movsb
jmp
mov
dec
addr16
in
mov
inc
xchg
sub
push
jmp
push
mov
fwait
sub
push
clc
ljmp
jbe
xchg
push
dec
xchg
inc
mov
cmp
or
cmp
inc
dec
cmc
in
aaa
lods
bound
imul
xor
es
outsb
push
sbb
fidivs
ret
or
jge
fdivr
data16
std
arpl
lea
aad
jno
mov
in
shlb
outsl
or
aam
outsl
leave
sahf
sbbb
test
fs
xlat
ret
test
inc
sub
pop
inc
jge
jle
dec
push
int3
je
push
push
xchg
inc
pusha
push
dec
enter
push
enter
mov
inc
cmc
out
xchg
vcvtsi2ssl
cmp
dec
mov
sbb
adc
pop
push
nop
nop
sbb
mov
and
push
out
add
xlat
pop
cltd
adc
sub
mov
mov
pop
xor
fs
inc
mov
and
in
cmp
xorb
ds
mov
jl
std
hlt
call
jns
dec
add
xchg
cltd
cmp
adc
jno
into
jecxz
dec
or
dec
mov
jmp
and
nop
fmul
aam
in
loopne
fcoml
mov
dec
jmp
sub
or
and
and
jl
inc
mov
movsb
push
jb
ljmp
dec
cmc
out
mov
dec
or
bound
sub
push
dec
sahf
push
cmp
and
push
and
shr
dec
or
loopne
and
jnp
dec
push
scas
sub
and
repz
mov
jg
sub
fimull
and
xchg
pop
mov
dec
cmove
inc
or
call
mov
movb
or
xchg
mov
jno
or
int3
or
dec
ficoml
push
rorb
jnp
mov
mov
xor
cmp
mov
add
ret
dec
pop
mov
cwtl
test
incb
push
clc
cli
clc
mov
cmp
cmp
pop
rcll
sti
jmp
aad
cmp
ret
inc
sbb
sub
mulb
leave
andb
add
add
adc
or
fsubl
loopne
adc
in
adc
call
sbb
in
dec
adc
cld
adc
xchg
lret
xchg
scas
and
mov
mov
sbb
sbb
imull
add
add
ret
sub
cs
mov
lret
and
push
adc
aam
call
das
xor
dec
test
dec
outsl
mov
jge
imul
dec
enter
sbb
mov
dec
mov
sbb
or
mov
and
mov
pop
add
jp
test
and
hlt
jecxz
cmpsl
and
push
pop
jnp
inc
and
clc
or
mov
popf
jl
dec
pop
dec
sub
iret
dec
imul
dec
sbb
mov
push
and
pushf
dec
jg
xchg
or
testl
mov
xchg
aaa
inc
and
jnp
push
mov
push
in
add
xor
jg
push
mov
inc
rorb
xor
inc
adc
jo
lea
pop
pop
fstpl
or
jnp
pop
adc
cmc
lcall
sbb
ret
xor
insl
and
je
xchg
sbb
sbb
cmp
jbe
xchg
adc
mov
pop
and
stos
in
inc
nop
adc
xchg
cmpl
inc
and
and
push
push
pop
movsl
enter
mov
stc
enter
pop
jmp
nop
or
xchg
les
orl
xchg
dec
popa
stos
rcll
mov
push
or
jo
rclb
push
dec
ja
in
adc
jnp
mov
je
dec
jne
std
adc
add
cmp
pop
pop
sub
or
xchg
and
jg
test
aas
mov
jg
mov
add
pop
test
je
dec
btc
push
dec
or
fcompp
mov
push
je
push
pop
stos
dec
cwtl
sbb
add
jl
inc
xor
orb
test
sub
out
push
nop
in
add
inc
dec
jne
pop
xchg
xor
or
movsl
imul
dec
xor
mov
adc
pop
test
cmp
push
icebp
insl
mov
incl
push
mov
ja
out
adc
inc
add
fdivr
in
xchg
call
mov
mov
icebp
ret
sbb
lret
stos
clc
mov
rcl
jae
test
add
fldl
in
pop
cmp
push
lods
adc
sarb
mov
add
mov
and
jecxz
add
sub
lock
inc
leave
add
lods
lea
mov
jp
mov
and
jae
lret
adc
xchg
out
mov
mov
rolb
jge
add
insb
xchg
int3
jns
out
pusha
add
dec
insl
inc
jecxz
push
jp
dec
scas
mov
push
arpl
mov
jnp
sarl
sbb
shl
sub
pop
lods
add
nop
sbb
add
push
sub
jmp
ja
js
push
cmpsl
jno
test
inc
dec
cmpb
subb
add
shll
test
push
or
lods
ja
mov
out
decb
inc
dec
test
push
add
lds
inc
cmpl
add
push
xor
push
movsl
lea
sub
mov
cld
and
dec
inc
adc
pop
push
hlt
xor
aas
mov
jns
nop
cmc
add
insb
jmp
mov
mov
jne
pop
xchg
add
jge
adc
add
xor
aam
dec
test
cld
dec
stos
cwtl
pop
mov
lret
inc
popa
ss
cmc
sub
jecxz
sarb
xor
pop
and
popa
or
mov
cmpsb
roll
jmp
pop
rcll
or
lods
sub
or
decl
push
jne
pop
cli
lret
fs
dec
notb
insb
cmpsb
bound
adc
sub
fstps
mov
sbb
and
xchg
cltd
mov
lea
jno
xor
rclb
mov
lods
out
and
movsl
push
xor
push
gs
push
scas
cs
mov
ficoml
jge
cltd
or
aas
pop
or
xor
xchg
inc
cs
insb
dec
pop
inc
arpl
push
mov
testl
push
adc
lcall
pop
outsb
cld
cld
mov
pop
out
testb
sbb
mov
jle
inc
pop
sbb
fbstp
adc
xchg
jle,pt
dec
xchg
dec
setne
push
xor
nop
jge
sub
pushf
int3
or
cmp
outsb
bound
sbb
xchg
add
mov
xchg
sahf
addl
out
xchg
dec
bound
add
sti
les
adc
sar
xchg
xchg
clc
cmp
pop
push
dec
jb
inc
sub
jecxz
xorb
ja
add
and
and
xorb
sbb
fimull
fists
jb
inc
xor
add
lret
add
cmp
mov
mov
fildl
mov
xchg
flds
sbb
mov
loop
sbb
addr16
push
cmc
imul
dec
cld
push
sbbb
enter
mov
es
add
xchg
ret
adc
stos
mov
add
decl
lods
pop
mov
mulb
enter
sbb
adc
jg
popa
inc
add
add
push
int3
pop
xor
jb
iret
stos
mov
adc
out
inc
aam
test
and
push
and
pop
push
imul
cmpsl
sbb
dec
clc
xchg
xchg
jbe
sub
xor
adc
or
and
mov
sub
inc
punpckhbw
inc
jb
or
jmp
sub
das
test
push
pop
push
test
test
lcall
push
xchg
inc
push
movups
sbb
pushf
into
cvtps2pd
inc
sbb
jne
adc
adc
and
pop
cmp
sbb
mov
inc
pop
mov
inc
mov
sub
push
mov
inc
inc
cs
add
daa
pop
or
push
push
pop
dec
add
repz
pusha
xchg
int3
movsl
add
test
xor
or
sbb
or
test
out
sub
cmp
xchg
sbb
sub
nop
inc
lods
pop
mov
cli
xor
andl
or
fdivl
and
ja
shll
insl
or
add
and
push
test
fs
sbb
ret
mov
add
xor
or
lea
test
ds
adcb
jge
inc
popw
cs
adc
dec
adc
pop
adc
dec
fisubrs
cmc
inc
mov
fs
inc
pusha
fmull
cli
adc
mov
mov
sub
mov
push
lods
xchg
inc
inc
sahf
inc
add
and
ljmp
xor
push
xor
add
add
jmp
ljmp
dec
push
sbb
adc
add
or
xchg
shlb
mov
adc
or
xchg
pop
xchg
lods
add
daa
push
inc
imul
xchg
or
rclb
enter
adc
xor
and
mov
push
mov
adc
jg
sub
xor
mov
mov
sbb
and
push
mov
int
mov
sub
and
enter
sub
enter
or
sub
sub
nop
sub
enter
or
xor
xor
nop
xor
enter
or
cmp
cmp
nop
cmp
enter
or
inc
in
sub
nop
inc
mov
ds
inc
enter
or
dec
in
sub
nop
dec
mov
ds
dec
enter
or
push
in
sub
nop
push
mov
ds
push
enter
or
pop
imul
daa
mov
jbe
nop
pop
mov
pop
inc
bound
adc
pop
or
inc
pop
cmp
pusha
adc
enter
je
and
cmp
sbb
test
cs
xchg
mov
xor
adc
negb
or
mov
cmp
mov
fs
jb
popl
and
sbb
add
fcmovnb
mov
shl
ret
test
mov
shrl
xchg
xchg
adc
or
and
arpl
outsb
inc
in
bound
popw
aaa
and
inc
xor
cltd
add
fwait
adc
xor
xor
push
and
aaa
and
lretw
push
xor
mov
iret
and
sub
imul
imul
outsb
stc
outsl
or
jo
jno
jb
nop
jae
je
out
and
ja
js
nop
jns
jp
inc
jnp
jl
mov
jle
nop
jg
cmpb
or
and
sub
nop
test
enter
or
mov
mov
nop
lea
and
nop
xchg
mov
ds
xchg
enter
or
xchg
in
sub
nop
lcall
popf
stc
sahf
or
lahf
imul
lea
mov
sbb
cmpsl
shrl
stos
mov
mov
push
in
xchg
sbb
imul
sbb
dec
or
xor
xchg
outsb
cmovb
data16
imul
mov
push
test
movzwl
xor
push
add
mov
adc
daa
sbb
or
dec
data16
je
and
gs
add
rol
mov
push
inc
cwtl
adc
adc
push
popa
outsb
mov
inc
push
cmp
pop
adc
adc
sbb
aaa
addl
sbb
daa
mov
push
sbb
sbb
mov
push
add
lods
lds
sub
jne
es
inc
stc
test
or
and
push
pop
xor
jno
or
scas
mov
adc
or
inc
or
repz
in
sub
inc
gs
cltd
dec
jns
xchg
inc
dec
test
cmp
push
jns
pop
adc
jnp
sub
mov
add
xor
shll
cmp
repnz
sub
js
or
add
pop
sbb
pop
add
in
jp
pop
adc
fsubs
fldcw
loopne
sbb
add
pop
rorb
icebp
js
add
into
shrb
jl
cmp
jb
popf
mov
push
outsl
xchg
mov
sub
push
pop
cltd
jl
push
inc
pusha
cmp
xchg
xchg
pop
push
pop
incb
mov
leave
cmp
jno
pop
sbb
cld
xor
push
add
adc
add
and
pop
mov
sbb
cmp
push
adc
out
inc
pusha
inc
push
loopne
int3
push
add
sbb
xchg
rolb
cmp
mov
test
pop
fbld
add
xchg
test
jmp
jl
inc
dec
cmp
jbe
rolb
ljmp
add
jns
and
mov
sbb
addr16
pop
push
push
xchg
fcomi
lods
add
cld
dec
pop
add
xor
push
pushf
in
test
add
or
das
dec
pop
inc
add
lods
dec
iret
cmp
pop
lods
xchg
fidivl
jb
add
leave
outsl
rorl
jbe
inc
push
enter
test
xor
cmp
es
imul
add
arpl
and
add
dec
xchg
mov
sbb
fidivrs
pop
xchg
mov
push
aad
jp
pop
xor
sbb
loop
mov
testl
push
lea
lods
ret
sbbl
cmp
xchg
in
hlt
jb
inc
aad
insl
mov
xor
xor
ret
call
inc
cmc
enter
out
add
ljmp
mov
jbe
add
sbb
jne
xchg
jno
rolb
sub
adc
push
xor
xor
je
and
push
mov
adc
cmpsl
cmp
iret
jg
inc
cwtl
or
faddl
subb
add
jne
xchg
in
sub
ja
add
and
jg
xlat
sub
push
pop
int
add
cmp
cmp
add
test
dec
out
add
add
lds
adc
add
or
add
out
clc
dec
int3
stos
je
push
pop
test
push
test
fsts
shrl
push
add
call
fs
sbb
cli
add
add
xorl
xchg
adc
xchg
cmp
orb
xchg
sub
adc
test
or
aaa
cmpsl
insl
btc
adc
add
pop
lcall
cmp
lock
testl
jo
movsb
add
pop
imul
xlat
rclb
xchg
or
mov
mov
out
inc
fldcw
inc
test
xchg
push
cmpsl
inc
pusha
out
xchg
neg
mov
add
mov
sbb
xor
lods
ljmp
in
pusha
add
enter
lds
hlt
push
data16
cli
pop
loope
mov
add
dec
sub
jge
cltd
adc
sbb
or
jecxz
test
add
pushf
xchg
stos
pop
dec
data16
add
xorl
cmp
xchg
inc
mov
lds
dec
ret
dec
and
inc
dec
sbb
scas
lods
bound
pop
xchg
add
pop
rorb
sub
xor
and
and
mov
test
and
lret
enter
and
pop
loop
push
movsl
pop
fisttpll
add
imul
inc
inc
sub
mov
cmp
sub
inc
int
xchg
lcall
cmp
enter
in
pop
and
cmp
add
cltd
in
loope
jl
push
xlat
ret
cmpsb
icebp
negb
dec
sub
es
test
add
cmp
mov
mov
xor
lods
aaa
fimuls
cmp
add
mov
sub
jne
out
mov
testl
les
xor
fbld
add
lahf
sarl
or
dec
push
jno
in
repz
cmp
dec
mov
pop
jmp
adc
mov
test
mov
hlt
inc
aaa
and
cld
and
gs
cmp
jne
inc
jo
add
xchg
mov
push
dec
dec
pop
ja
test
cmp
fsubs
pop
mov
int
mov
push
push
add
sub
cmpl
jo
add
popa
adc
mov
data16
pop
jp
or
pop
rcrb
pop
adcb
jle
push
dec
loop
add
arpl
rclb
pop
jo
mov
pop
mov
insl
add
jl
sub
in
add
cmp
push
cmp
jns
lock
popf
into
in
jne
pushf
adc
mov
add
mov
mov
cmpsb
add
adc
add
call
scas
stc
add
movsb
jb
add
or
push
inc
mov
dec
mov
adc
xchg
add
shll
and
mov
push
or
lret
cmpsb
xchg
popa
in
jmp
add
loope
dec
mov
cmc
xchg
jno
aad
fidivrl
icebp
sbb
jg
mov
add
leave
popa
push
mov
int3
cmp
mov
sarl
gs
cmp
das
repnz
sbb
divl
xchg
push
or
test
jbe
add
xor
je
test
ficoms
jns
pop
add
ja
and
testl
movsl
xchg
dec
imul
aad
call
pop
add
and
pusha
dec
push
dec
sbb
imul
aam
adc
and
fstl
pop
rorl
inc
pusha
sbb
add
cmpsl
rolb
xchg
sub
bound
lret
push
ljmp
xor
add
push
ret
mov
add
xchg
add
push
cmc
jmp
adc
cmp
cmpsb
add
dec
and
insl
push
mov
cmp
inc
add
aaa
aas
lret
fwait
add
mov
mov
lods
push
push
sarb
pop
not
dec
pop
pusha
nop
pop
dec
les
test
sti
orb
lret
or
jo
push
push
add
pop
imul
or
xchg
sub
test
sti
mov
jecxz
cs
add
outsb
push
add
test
cltd
fsubl
adc
aaa
xchg
lret
jb
test
push
ficoml
pop
int3
lods
iret
and
dec
sahf
repnz
add
fcom
or
add
in
adc
xor
call
rcrb
in
add
fs
mov
add
push
jle
and
loopne
mulb
loop
jns
adc
fwait
add
movsb
push
mov
inc
nop
imul
add
jmp
test
mov
mov
stc
xchg
sbb
test
xorb
out
add
inc
lods
pop
out
jle
and
add
insl
or
repz
mov
fdivs
scas
add
pop
div
aaa
and
jg
sbb
fwait
stos
faddl
out
mov
xchg
mov
inc
adc
mov
loope
cwtl
rcrl
ret
or
and
xor
pop
repnz
incl
mov
lods
xchg
and
xchg
sub
xchg
fld
aam
add
test
cli
ja
iret
jg
stos
add
incl
xor
add
andl
mov
add
mov
cld
cmpsl
outsb
rorb
stos
ret
mov
dec
popf
loopne
mov
mov
cmp
xor
jnp
dec
cmpsb
bnd
pop
test
lcall
imul
add
xor
sub
loop
lods
stos
pop
shrb
inc
leave
xchg
or
xor
pop
ret
xor
nop
dec
pushf
in
hlt
les
imul
pop
fs
jp
add
adc
in
dec
xchg
inc
imul
ffreep
lods
addb
mov
pop
jb
jmp
scas
cltd
xchg
out
in
xchg
stos
iret
jmp
xor
cmc
dec
jae
xor
add
pop
push
xor
inc
push
mov
scas
js
imul
repz
rorl
fbld
cmc
clc
push
ret
andl
xchg
add
push
jle
test
push
cmp
add
ss
adc
stos
outsl
rcrb
cmpsl
pop
xor
lds
jno
mov
into
ljmp
idivb
adc
jg
xchg
dec
loopne
sahf
add
xor
mov
repnz
adcl
popa
xor
sbb
fildll
outsl
pop
aas
dec
test
sbb
ds
mov
out
jge
cli
push
gs
rcrb
inc
mov
mov
lds
or
clc
fiaddl
adc
mov
jne
movsb
add
popl
dec
inc
xchg
call
cmp
or
mov
lret
add
aad
add
add
les
xor
jg
pop
mov
jne
fcoml
pop
adc
sbb
in
aad
jge
jp
ja
add
pop
rolb
add
pop
repz
xchg
mov
inc
sbb
mov
lock
or
dec
cmp
mov
arpl
add
inc
mov
shrl
cmp
dec
push
lahf
add
add
and
mov
mov
insl
push
mov
xor
push
cmp
lcall
jb
rol
scas
les
sti
mov
add
scas
pop
je
outsb
test
icebp
mov
push
scas
sub
push
jmp
sub
push
mov
data16
je
cmp
adc
add
jb
test
add
ss
mov
jge
sub
fnstenv
add
push
xchg
and
leave
out
andb
mov
inc
add
cs
sub
inc
sub
xor
push
push
inc
add
add
cmpsl
sbb
xchg
icebp
ds
cmp
cwtl
stc
sbb
sti
sbb
leave
in
loop
sbbl
in
and
addl
loopne
aam
clc
dec
or
pop
lret
inc
test
dec
add
or
pop
ret
pushf
or
repnz
aaa
add
jl
sbb
js
test
into
enter
inc
outsb
popf
incb
or
and
enter
pushf
add
ret
orl
xor
and
sbb
push
les
shrb
daa
sub
lea
inc
cmp
jae
add
das
aam
pusha
scas
rcrb
pop
mov
cld
testb
mov
and
adc
push
push
dec
push
and
dec
mov
fisttpl
cmpsl
push
pop
daa
push
lds
adc
push
dec
dec
jle
inc
push
into
adc
subb
pop
fcoml
jae
movsl
lods
jo
nop
pusha
xchg
sbb
sub
fiaddl
push
sbb
add
aas
xor
add
jg
cmp
ret
outsl
xchg
sub
mov
sbb
push
add
mov
pop
mov
jmp
ret
add
adc
call
fimull
jb
dec
fimuls
js
fsubs
sbb
jmp
dec
int3
dec
add
sbb
add
mov
add
repz
dec
bswap
out
pop
inc
mov
or
scas
inc
xchg
icebp
out
mov
fists
mov
add
stos
in
stc
add
les
imul
pop
orl
pop
in
dec
sbb
add
mov
add
jl
cmp
add
inc
pop
sub
fs
mov
or
jbe
xorb
mov
movsb
add
leave
mov
pusha
or
cmp
idivl
adc
aam
jne
add
daa
xlat
push
dec
lret
loopne
andb
xor
imul
into
mov
dec
mov
sub
sbb
pop
jb
add
fs
fstpl
ret
imul
and
xor
fs
in
or
test
imul
add
loop
add
sbb
xor
xchg
push
imul
add
dec
adc
test
aad
push
js
cmp
loopne
mov
imul
sub
int3
test
aam
incl
lea
lret
mov
addr16
outsl
add
sti
test
xchg
add
int3
mul
bound
pop
sbb
mov
cmp
add
mov
ret
cs
aas
and
adc
mov
scas
lret
mov
add
or
pop
iret
sbb
daa
dec
add
gs
outsl
bound
arpl
cmp
jne
adc
cs
dec
cmp
bnd
verr
pop
fidivrl
dec
cmpb
sbb
mov
push
mov
cmp
add
jecxz
enter
leave
mov
add
sahf
mov
nop
nop
das
cmovge
clc
addb
xchg
jno
add
or
jmp
xor
push
xchg
int3
push
dec
add
test
or
ds
sub
lcall
xor
sbb
bswap
pop
add
add
push
out
mov
fisttps
mov
call
jno
add
dec
ffree
scas
sub
jecxz
and
aaa
addr16
lods
mov
adc
push
pop
faddl
dec
fdivp
movsl
and
sbb
add
adc
add
popa
push
lods
inc
mov
in
jnp
lahf
clc
push
add
jne
testl
jb
in
ret
movsl
cmpsl
and
mov
or
imul
xchg
jmp
ror
repnz
xor
int
pop
aam
add
inc
fisubl
pop
nop
pop
std
incb
jle
loope
pop
sbb
les
cmpsl
std
or
out
push
jp
adc
add
add
add
inc
orl
push
arpl
shlb
inc
inc
lahf
inc
add
inc
cmp
or
cmp
pop
ret
mov
repz
mov
aad
or
jae,pt
add
mov
ss
jo
test
in
inc
das
mov
aad
sub
mov
sub
sub
or
adc
ss
jbe
add
xchg
push
lds
in
xchg
jae
sbb
add
push
push
test
dec
mov
imul
xor
clc
dec
mov
rolb
addb
mov
stos
mov
clc
xchg
int3
stos
and
add
call
sti
adc
lea
loope
mov
dec
addr16
les
jne
dec
mov
adc
pop
adc
enter
cli
aam
adc
pop
pop
jbe
inc
fimuls
daa
data16
or
inc
popa
in
mov
add
push
adc
mov
pop
aad
dec
xchg
and
pop
mov
sub
leave
jo
imul
push
stc
mov
add
loop
sbb
xlat
push
or
cli
xor
pop
push
test
jb
jg
push
aaa
pusha
imul
in
add
pop
sub
and
cld
pop
add
mov
sbb
mov
cmp
ljmp
sti
inc
jns
add
sub
ds
fildll
arpl
bound
jb
pop
xchg
mov
push
inc
mov
scas
or
fsts
adc
jp
dec
push
ljmp
ret
mov
scas
add
mov
scas
add
inc
test
nop
cmp
mov
or
movsl
scas
call
in
jnp
inc
jecxz
cmpsl
add
inc
movsb
fs
pop
mov
mov
mov
int3
mov
dec
iret
add
rorb
cmp
nop
addb
cmp
daa
subb
xchg
cmpl
sahf
mov
push
jge
cmp
pop
inc
fs
push
fcomps
repz
mov
and
push
fdivrs
nop
mov
rcll
popf
les
cli
inc
add
add
adc
mov
shrl
mull
xor
and
adcl
xchg
out
insl
ret
push
and
xlat
out
jne
decl
loope
dec
movups
test
xor
or
push
or
or
int3
mov
je
mov
call
hlt
xor
das
push
hlt
mov
mov
test
adc
push
push
sub
stos
mov
pop
push
jmp
rolb
pop
pop
pop
add
jbe
xor
gs
cmp
test
sub
cltd
xchg
dec
mov
adcb
pop
sbb
mov
add
adc
addr16
xchg
add
in
sar
rorb
scas
sub
and
push
sbb
add
imul
jae
stos
add
xor
call
test
add
or
add
stos
outsb
mov
jno
jbe
negl
cmp
rcr
aaa
sub
sbb
cltd
dec
stc
lock
rcl
inc
cmp
movsl
xor
stos
push
cmp
out
pop
and
stc
shrb
daa
add
sub
dec
xor
pusha
aaa
jno
std
jo
pop
add
out
dec
add
jge
mov
js
faddl
cmc
fistps
dec
pop
shl
dec
dec
stos
sub
xchg
cmp
shlb
xchg
dec
dec
jecxz
sub
add
arpl
int
mov
inc
inc
ss
or
inc
push
pop
mov
add
nop
pop
das
movsb
add
jne
sub
lret
xchg
add
pop
push
pop
jp
cmp
in
sub
aad
out
clc
add
or
addl
data16
bound
pop
cmp
add
call
mov
cmp
add
inc
pop
xchg
inc
aaa
lcall
loopne
cmpsb
fmull
insl
adc
sbb
xor
cmp
dec
or
pusha
test
add
sbb
lock
cmp
or
mov
cli
or
arpl
cmp
mov
outsb
ljmp
inc
addl
add
das
test
adc
rolb
pop
sub
call
jo
sub
dec
sbb
add
insl
xor
lret
add
mov
mov
outsl
ret
push
mov
push
and
xor
cwtl
movsl
mov
add
cmp
push
fsubl
add
or
jl
negl
jns
sbb
and
jb,pt
cmp
sub
mov
mov
repnz
stc
xor
jecxz
shll
or
cmpsl
arpl
add
int3
mov
add
adc
mov
add
mov
xchg
mov
mov
adc
inc
cld
pop
aaa
add
xchg
clc
into
dec
jb
add
push
ja
add
and
jnp
add
pop
in
mov
xchg
dec
stos
aaa
jb
xchg
fdivs
add
cmp
add
imul
scas
ret
pusha
and
jns,pt
add
adc
add
outsb
add
popw
test
incl
jl
lea
das
or
stos
adc
xchg
fs
outsb
nop
cs
add
jg
imul
mov
adc
xor
lahf
xchg
push
fidivs
pop
jge
mov
in
jo
sbb
xchg
cmp
flds
mov
xchg
and
adc
bt
mov
cmp
push
xchg
add
xchg
or
dec
add
sbb
repz
add
fildl
and
mov
cli
cmc
lret
es
test
add
in
cmpb
cmp
cmp
and
push
inc
lcall
pop
xlat
dec
movsl
add
jg
add
cmp
add
rorl
sbb
mov
and
xor
std
cmp
jnp
push
sbb
mov
jge
mov
mov
pop
add
scas
lcall
lods
mov
data16
add
jecxz
imul
cmp
fisttpll
xchg
sbb
gs
cli
ud1
mov
stos
lods
call
inc
lea
push
jno
scas
add
sub
cmp
popf
add
fsubrs
lahf
mov
jo
sti
incl
adc
mov
mov
push
cli
add
and
jb
xchg
add
add
aam
pop
pop
lret
lea
jmp
out
inc
sub
pop
inc
add
mov
sub
add
mov
mov
mov
lock
ljmp
into
or
jne
aas
in
imul
roll
push
dec
adc
and
jg
add
dec
push
xor
jne
fs
push
das
mov
daa
add
in
aaa
sbb
not
mov
movsl
cmp
xchg
test
mov
add
inc
xchg
pop
stos
mov
int3
ljmp
xchg
lock
add
imul
xchg
bound
xor
jae
add
xor
sub
sahf
dec
test
lods
add
xchg
scas
jmp
or
or
out
add
push
leave
pop
loop
rorb
in
mov
xchg
cmpsl
push
imul
cmp
pop
xorb
pop
in
pushf
cmp
fadds
dec
cli
lds
push
ljmp
add
js
mov
ret
in
xchg
sbb
mov
pusha
ret
cmp
scas
in
xor
mov
jge
pop
jp
sub
les
add
pop
sarb
stos
ret
sarb
cmp
push
stos
lds
add
pop
inc
xchg
aad
insb
mov
sbb
je
jl
dec
idivl
cs
subb
mov
mov
add
sbbl
mov
arpl
add
add
cmp
ja
add
addr16
mov
lea
pop
arpl
mov
pop
repz
or
pop
popf
add
in
inc
pop
test
pop
cmovle
dec
inc
mov
sub
or
push
cwtl
sbb
cmp
or
mov
add
dec
test
ljmp
add
mov
add
shl
pop
hlt
lds
repnz
jo
std
pop
sti
or
pop
test
inc
add
ret
dec
lds
push
int
xor
into
mov
nop
or
and
cmp
push
mov
jecxz
sbb
popa
xor
adc
shrb
pop
add
sub
call
arpl
mov
add
inc
adc
repz
aad
ret
push
cmp
and
loope,pt
jecxz
push
int3
aaa
xchg
add
scas
and
dec
or
test
jo
mov
add
pop
mov
dec
jp
jle
lods
fnsave
test
adc
add
mov
adc
bound
fildl
aam
add
and
inc
out
and
ja
and
lock
sbb
push
add
inc
cmp
push
adc
shll
jns
test
mov
or
mov
xor
xor
andps
outsl
loop
lahf
jl
imul
xchg
lods
cmp
or
repz
popf
lock
jge
ds
push
dec
insb
popa
pushf
or
lods
sbb
push
sub
mov
pop
mov
push
fwait
xchg
inc
adc
push
popf
adc
jge
into
sub
mov
push
rcrb
pop
xor
jae
gs
imul
push
push
mov
and
inc
icebp
mov
insb
outsl
jae
pushf
cmp
dec
sub
sub
adc
push
inc
jp
cmp
les
adc
sub
and
push
outsl
sub
push
jns
mov
add
push
int3
mov
inc
or
outsb
insb
push
mov
inc
js
or
mov
insl
mov
in
inc
cmp
pop
sbb
push
les
or
dec
xchg
call
mov
push
insl
xor
cwtl
movsl
dec
sbb
xor
push
movl
pop
les
lods
sbb
cwtl
sub
push
push
js
push
fiadds
repnz
outsb
lcall
lcall
push
sbb
inc
popf
sbb
dec
gs
das
das
sbb
push
fld
enter
imul
xchg
fnstcw
push
lods
mov
cmpsl
jp
inc
sbb
dec
push
xor
xchg
sbb
push
xchg
cld
enter
arpl
or
sbb
jo
adc
mov
cmpsl
mov
sbb
nop
mov
jle
and
sbb
inc
shll
push
mov
cmc
and
test
mov
adc
test
or
pusha
popa
fs
add
xchg
jns
and
das
xor
push
pop
push
sub
lea
je
or
into
daa
jge
jmp
add
adc
xchg
decb
adc
imul
pop
sbb
insl
adc
scas
xchg
lahf
adc
sbb
push
cmpsl
fmuls
cltd
adc
arpl
push
add
lret
push
mov
mov
fsubrl
xchg
insb
xor
fsubrl
inc
sbb
push
and
and
imul
inc
sbb
inc
insb
and
outsb
push
outsl
inc
push
mov
mov
inc
test
test
loop
rclb
push
mov
adc
inc
adc
pop
inc
push
ror
call
xchg
xor
inc
push
pop
lret
test
or
inc
mov
sbb
inc
push
lock
cld
and
inc
inc
aas
and
sbb
jge
or
inc
xchg
mov
dec
dec
and
inc
xchg
pushf
adc
sbb
inc
outsb
je
in
and
sbb
mov
ljmp
inc
enter
pop
sbbl
add
jo
xorl
inc
lret
and
and
inc
sbb
mov
pushf
test
fs
push
sub
jne
jae
or
sbb
push
sub
mov
and
cli
data16
daa
fildl
lock
jae
hlt
cmp
movsb
nop
sbb
dec
jo
clc
in
cmp
ret
mov
adc
or
or
movsb
jns
or
inc
push
imul
fcoml
dec
sbb
or
or
or
sbb
jge
movsb
sub
or
mov
or
xchg
sbb
mov
cmp
inc
pop
sbb
mov
cld
frstor
jp
aam
sbb
mull
jp
and
sub
sub
cli
cmp
mov
push
adc
ss
test
sub
inc
out
daa
or
mov
or
shll
hlt
jmp
shrl
pushf
and
mov
xchg
pushf
sub
sbb
ficoml
inc
and
repnz
adc
xchg
adc
lahf
pop
push
sub
sbb
inc
dec
push
push
jo
cmp
push
cmp
ja
or
dec
adc
call
dec
pop
daa
arpl
xchg
inc
sbb
pop
outsl
imul
jns
fs
les
ljmp
push
inc
jns
dec
inc
je
and
inc
test
je
xchg
inc
jne
data16
insl
pop
sbb
cs
push
cld
repnz
repz
in
sbb
cld
arpl
int3
and
push
ljmp
lock
gs
adc
fs
xchg
jae
adc
sub
and
adc
jae
xchg
imul
inc
dec
daa
cwtl
nop
pop
xchg
scas
fwait
mov
push
or
insb
adc
fsubs
popf
fisttpll
jo
jl
dec
imul
rcr
dec
and
cs
mov
inc
hlt
test
testb
sub
fsubs
jb
into
daa
mov
mov
or
mov
cmp
insl
addr16
je
push
int
cltd
nop
mov
or
mov
xor
and
cmp
dec
push
or
test
andl
rclb
push
clc
or
lahf
orb
add
pop
sub
inc
mov
cmpb
je
ds
call
pusha
add
mov
test
jne
movsl
pop
or
popa
mov
inc
or
push
jns
and
rcrb
mov
pop
mov
jle
sub
stos
xor
sti
in
sarl
subb
call
fwait
scas
add
cmpw
and
mov
dec
adc
mov
push
aad
jb
jae
push
cmpsb
lahf
dec
adc
pop
add
fs
pop
test
or
push
je
sarl
push
push
inc
adc
jb
add
cmp
jmp
fld1
push
lret
imul
cmp
jne
xor
popa
add
push
mov
call
xchg
imul
pop
sbb
adc
pushf
pop
cmpsb
or
push
movl
push
xchg
or
mov
cmpl
or
stc
cmp
adc
jns
and
popl
xchg
cli
cwtl
sbb
dec
add
and
inc
jne
enter
xor
mov
sbb
inc
mov
pusha
int3
jne
cmp
out
dec
inc
stc
inc
cmp
ss
leave
inc
push
mov
xchg
sub
dec
xor
inc
push
orb
jg
test
dec
jns
dec
lahf
xchg
jg
icebp
xchg
daa
in
dec
out
cmpb
dec
xor
sbb
cmpsl
xrelease
jb
and
pop
sbb
out
pop
push
push
push
push
into
push
rcrb
adc
or
xchg
pop
int3
jne
cli
cltd
lahf
sarb
jns
adc
orb
adc
add
call
int
pusha
scas
stc
movl
push
cmp
mov
push
ret
add
decl
or
lret
xchg
fwait
mov
pop
test
pop
gs
mov
add
dec
push
push
test
rclb
or
les
add
push
push
mov
daa
adc
sub
push
sbb
jl
xchg
dec
outsb
xchg
orl
jae
and
call
mov
add
in
sbb
add
mov
fildll
mov
add
jle
dec
push
push
jl
xor
mov
push
repz
rcrb
sahf
mov
pusha
test
sub
jae
add
xchg
inc
shll
addb
pop
mov
sbb
cli
add
push
pop
mov
cmp
mov
push
pop
fldt
into
add
xor
insl
sbb
scas
mov
inc
mov
and
sbb
or
inc
lods
push
pop
or
dec
iret
les
xlat
andb
loope
mov
pop
pushf
mov
push
pop
or
in
out
test
mov
or
call
cmpsb
sbbb
add
mov
in
or
adc
ja
xor
filds
imul
ss
scas
out
dec
cmc
mov
or
xchg
inc
mov
mov
les
insb
xchg
pop
jnp
mov
in
aaa
inc
notb
sbb
jp
add
adc
xchg
mov
outsl
leave
cmp
call
pop
or
bound
test
mov
add
dec
or
mull
add
push
js
or
ljmp
adc
in
pop
shrl
cmp
add
adc
cmpsl
add
getsec
pop
mov
mov
leave
push
sub
icebp
add
cli
sbb
jl
adc
adcb
add
xorb
mov
mov
pop
mov
cmp
filds
push
mov
inc
or
fwait
push
add
das
and
imul
stc
ss
inc
xchg
cmp
andnps
or
shrb
jp
jno
push
out
loopne
adc
fimull
pop
mull
jae
cld
jbe
adc
mov
push
sbb
ja
daa
pop
add
jmp
andl
mov
add
stc
add
inc
mov
mov
scas
jns
push
lcall
out
add
add
dec
add
cmp
push
or
jecxz
loopne
orb
movsl
add
fisubrl
rcrl
add
leave
sub
cltd
fwait
add
mov
adc
xor
shlb
mov
mov
popf
cmp
hlt
push
add
pop
mov
inc
push
into
loope
jmp
push
jl
dec
and
dec
add
repnz
test
push
movsb
add
push
testb
loope
dec
or
xor
add
popa
sub
add
dec
clc
pusha
addl
mov
add
mov
pop
add
out
push
std
push
inc
sub
xchg
pusha
or
add
dec
add
push
stc
aad
jecxz
and
and
lds
rorb
cli
adc
push
mov
adc
xchg
faddl
fnsave
movsl
push
pop
aas
mov
add
repnz
scas
add
add
cmpb
jl
jbe
rcrb
add
pop
xchg
adc
jne
dec
lock
loopne
outsl
mov
shlb
xor
test
cmpsl
push
call
inc
mov
lods
sub
add
jno
mov
sti
dec
adc
sub
push
stc
push
in
mov
scas
add
pop
popa
push
dec
mov
lcall
pop
scas
aam
dec
rcr
cmp
and
fldl2t
lods
das
cmc
js
xor
roll
stos
ror
push
rcrb
dec
xchg
sarl
out
adcb
sub
clc
add
push
fdivrl
add
and
push
dec
push
ret
cli
faddl
inc
nop
insl
mov
pop
add
out
jno
jae
mov
mov
add
fisttps
add
loope
outsb
scas
daa
imul
fldenv
pop
and
jno
jp
aas
add
or
push
add
xchg
sbb
orb
cmp
ret
popf
push
xor
shlb
sbb
and
xchg
pushf
mov
push
adc
jge
jae
pop
clc
push
sbb
xchg
addl
aas
or
imul
cmpb
xchg
pop
xor
add
cltd
push
inc
fisttpl
test
push
pushf
outsb
and
jmp
jle
sub
mov
rcrl
int3
add
pop
cmp
add
lcall
lret
and
flds
jne
and
cmp
push
addb
jecxz
rolb
loopne
add
push
and
xor
mov
cwtl
push
pop
push
xchg
test
mov
cmp
testl
mov
ret
inc
fisttps
add
and
and
addb
lret
jns
add
mov
xor
std
cmp
imul
pop
clc
or
add
add
xor
outsb
sbb
jle
add
sub
inc
mov
imul
mov
sub
dec
jne
incb
push
int3
add
mov
in
inc
pop
or
imul
inc
repz
repz
add
in
cs
fstps
sbb
into
mull
xor
add
push
andl
sub
xchg
imul
call
scas
xchg
mov
enter
rclb
cmc
xlat
xor
clc
lds
dec
or
mov
shll
jecxz
repz
mov
or
sbb
mov
jb
or
test
xchg
fstpl
cmp
add
cltd
ja
jmp
inc
fidivl
es
outsl
and
test
filds
and
mov
push
stos
repz
rol
jb
sbb
pop
jle
inc
out
add
inc
and
mov
xchg
push
add
jg
jb
jnp
adc
push
popa
aaa
js
xchg
addr16
cmc
push
cmp
or
jp
cmp
jmp
jl
jns
and
jne
push
pushf
xchg
cmp
and
push
push
add
shlb
add
imul
mov
jns
or
je
adc
addr16
fst
jae
icebp
aas
inc
enter
cmp
jmp
inc
add
scas
dec
loop
fwait
imul
add
in
add
ret
cld
add
push
dec
orb
add
ror
xchg
lods
mov
mov
push
jl
adc
out
add
mov
aam
stc
jl
adc
or
popa
fldcw
mov
jo
js
add
xlat
subl
insb
jb
push
mov
imul
movsl
repz
cmpsl
xchg
add
xchg
ds
repnz
cmpsl
nop
arpl
lds
rol
pushf
fildl
lods
les
add
or
jo
fsubrs
cmp
ss
add
add
push
pop
in
and
incb
movsb
data16
cmp
mov
movaps
add
and
daa
inc
jle
add
pushf
lahf
addl
aam
push
repnz
or
jne
lret
cmp
xchg
flds
int3
sbb
push
dec
cwtl
repz
jno
add
or
sar
add
cli
add
loopne
mov
sbb
arpl
push
ja
std
xor
and
inc
xor
das
orb
aad
jecxz
add
sbb
fwait
les
pop
adc
adc
pop
add
cwtl
out
cmp
pop
fidivs
movb
leave
or
lock
fndisi(8087
stos
mov
sub
add
shl
nop
dec
jge
add
in
addr16
add
jne
scas
inc
xor
add
fimull
and
add
cmp
xor
fbstp
dec
loope
stos
lock
lret
js
lods
pop
cmp
cmpb
hlt
roll
adc
inc
mov
mov
xlat
sub
ds
out
js
nop
add
jge
inc
add
adc
inc
pop
dec
mov
je
jno
pop
in
cmp
scas
cmpb
ljmp
sbbb
or
stos
fs
xchg
add
fwait
mov
dec
add
popa
and
ljmp
dec
in
jb
divl
outsb
sub
in
pop
cwtl
add
and
sbb
iret
call
sahf
lock
in
cmc
cwtl
mov
and
lahf
int
or
add
jne
cmp
push
add
xchg
insl
add
fs
add
sub
or
cmpl
shl
fstpt
adc
ja
scas
sahf
ja
add
outsb
aaa
adc
jns
and
inc
xor
xchg
mov
add
shrl
shlb
icebp
xchg
and
adc
cmp
pop
adc
int3
cmc
jo
add
lcall
dec
jne
in
xchg
arpl
cmpsl
inc
mov
xchg
ljmp
xchg
arpl
add
cmpl
scas
push
not
lock
adc
add
repnz
inc
sbb
add
mov
mov
sub
lods
adc
shlb
mov
imul
arpl
fnstenv
shlb
jp
into
mov
and
add
mov
add
mov
sahf
push
ret
pop
push
pop
mov
add
mov
fs
rcrb
xchg
imul
add
cs
cmp
in
mov
mov
push
out
add
mov
ret
cltd
pop
xlat
mov
add
aam
push
dec
enter
pop
push
cltd
in
push
add
std
iret
repnz
movsl
orl
popaw
pop
xchg
decb
xor
cmp
shr
xor
or
in
aad
add
daa
mov
inc
add
jp
addb
pop
lock
aas
cwtl
ficomps
jb
add
out
lods
call
test
aad
or
fwait
divb
add
aam
mov
inc
data16
add
repnz
add
aas
inc
fnstcw
add
mov
cld
inc
test
mov
ljmp
dec
sub
push
pop
mov
sub
xor
jno
mov
es
cmp
adc
fs
and
push
dec
das
xchg
dec
xchg
sbb
add
popa
fdivr
inc
cltd
push
xchg
sbb
jo
jmp
jge
daa
xchg
cpuid
mov
mov
xor
sahf
push
pop
add
fs
mov
add
out
jb
imul
ret
add
add
dec
in
xor
xor
enter
ja
cmpl
mov
stos
jo
jns
xchg
xchg
cmpb
adc
xor
fcmovnb
adcl
dec
push
loope
mov
and
pop
push
data16
adc
imul
adc
pop
push
cmp
add
dec
add
pop
test
adc
int3
lea
sahf
loop
jle
xchg
push
lret
dec
add
push
imul
insl
mov
adc
xchg
vcvtps2pd
mov
xor
mov
add
aaa
xor
sub
add
sub
roll
push
inc
nop
jecxz
cmp
add
cmp
mov
mov
addb
pusha
movb
pop
push
jge
in
dec
sbb
and
popa
pusha
add
xchg
fsub
add
mov
sbbl
adc
dec
or
cmpsb
or
adc
imul
cmp
movaps
inc
cwtl
mov
fwait
movl
sbb
jg
jne
add
bound
push
cmp
add
mov
sub
fdivrs
jns
fdivp
sbb
pop
lahf
dec
in
out
pop
push
pop
leave
add
inc
jmp
sbb
pop
mov
subb
inc
js
mov
mov
sbb
cwtl
rolb
shlb
xor
dec
add
push
aaa
insb
cltd
arpl
push
inc
jbe
inc
mov
and
jg
jno
jl
add
daa
negl
cmp
std
add
sbb
outsl
rcr
xchg
test
enter
mov
repnz
ljmp
sub
mov
add
push
add
jmp
sbb
jne
pop
dec
jg
in
sub
add
mov
std
jp
add
ficomps
fnstcw
xchg
fisttpll
sub
or
add
popf
mov
mov
add
push
xchg
aaa
push
jae
rolb
pop
jl
sub
push
test
mov
jmp
in
jp
lock
std
sbb
daa
outsb
jecxz
push
jbe
inc
sbb
test
add
xor
sbb
aam
mov
xor
mov
pushf
leave
pop
pusha
mov
mov
jnp
adc
in
pop
fistps
fiaddl
add
mov
jne
push
sarb
and
in
lods
add
mov
xchg
xchg
adc
add
mov
dec
add
push
sbb
ret
in
pop
cwtl
pop
add
xor
popa
scas
cmp
cmp
jge
mov
loop
in
incl
push
arpl
pop
pop
mov
inc
cmp
add
bound
xchg
rolb
mov
mov
sub
pop
jo
sub
cmp
sub
push
xor
leave
add
cmp
movl
movsb
aam
mov
lcall
mov
out
loopne
fwait
mov
cld
cmpsb
xor
push
roll
jb
jo,pt
lahf
scas
dec
mov
inc
ja
std
cmp
pop
jge
and
cmp
dec
jnp
dec
mov
std
mov
sub
add
leave
nop
pop
add
pop
les
lahf
inc
imul
clc
dec
mov
dec
pop
dec
cmpsl
xchg
je
add
inc
mov
mov
add
roll
in
adc
inc
mov
arpl
cmp
adc
movsl
add
fxch
push
sub
mov
pop
pop
inc
mov
xchg
jne
lret
add
and
mov
push
cmpb
scas
stos
inc
inc
gs
cmp
jnp
add
sbb
push
shlb
add
pop
xor
mov
in
add
or
iret
add
dec
mov
inc
ds
ljmp
loope
xchg
clc
sbb
add
push
jb
add
adc
xchg
pop
add
xchg
inc
mov
lods
dec
mov
add
pop
sub
push
add
rorl
int
into
sbb
cmp
add
stos
lods
sub
bound
xor
add
add
or
jnp
in
or
jp
daa
fwait
ljmp
cmp
jnp
adc
sbb
cmp
adc
cmp
incb
jecxz
outsb
mov
stos
loopne
std
out
in
pop
mov
icebp
mov
stos
lcall
add
xchg
xor
mov
bnd
movl
inc
jns
jmp
jbe
aam
into
inc
fdiv
cli
add
ffree
adc
mov
or
fnsetpm(287
pop
add
aaa
push
inc
ficoms
adc
lahf
add
dec
mov
cmp
pop
subb
pusha
scas
in
add
orb
sarl
cltd
xchg
add
leave
jo
cmp
jb
push
mov
adc
dec
icebp
std
add
jge
jno
cld
mov
xchg
push
pushf
cs
pop
jns
jl
dec
inc
pop
cmp
jmp
add
scas
outsb
pop
std
lret
subb
pop
xor
shl
scas
pop
popf
add
scas
mov
dec
cli
mov
cwtl
or
xacquire
aad
out
int
fdivrs
mov
call
std
out
and
je
lahf
mov
add
push
int
popf
add
jbe
insl
shl
add
jp
cmp
cwtl
or
repnz
mov
data16
mov
fcoml
pop
mov
adc
jnp
aam
ret
mov
sub
inc
push
adc
daa
mov
cmpsl
adc
lods
mov
pushf
inc
jl
stc
bound
or
sub
and
pop
in
sub
push
jl
cmp
and
mov
xor
and
lods
jb
lock
jo
int3
mov
sbb
shlb
addr16
xchg
inc
pop
imul
test
jno
xchg
loop
pop
adc
push
aaa
popa
mov
gs
and
sbbl
sbb
inc
cmp
out
cmp
mov
data16
in
add
ret
rolb
leave
cld
hlt
rcrl
mov
lcall
sbbl
pop
jmp
or
pop
mov
mov
add
sub
adc
mov
and
mov
movsl
dec
testb
inc
mov
add
dec
add
sub
inc
testl
inc
out
lret
out
repz
test
sub
mov
cmp
push
fsubl
iret
add
and
cwtl
push
add
xor
sub
rolb
xchg
subb
jmp
cld
push
xchg
or
jb
movb
adc
add
shrl
data16
or
stos
pop
mov
mov
mov
mov
inc
call
mov
data16
cmp
push
andb
add
test
jl
dec
sbbl
cld
insl
repz
push
and
and
enter
cmp
cli
add
pushf
and
fstl
fcomps
xorb
lret
cmp
add
mov
or
cmp
add
in
movsl
insl
jo
imul
mov
cmp
jae
pusha
xor
add
roll
jne
add
std
mov
lods
xchg
xchg
jg
imul
test
push
rorb
and
add
int
mov
daa
mov
add
in
add
lds
ret
dec
adc
push
mov
jp
xchg
inc
jecxz
sbb
and
push
lret
add
leave
stc
xor
pop
push
das
pusha
inc
cmpsb
lods
test
push
add
xchg
push
sbb
inc
push
pushf
ret
jne
std
add
jmp
sub
in
mov
cmpsb
adc
add
ficomps
jle
pop
adc
into
orl
jbe
getsec
in
in
jle
mov
xchg
sbb
mov
sub
mov
add
repz
cltd
or
and
adc
daa
aam
mov
cli
ja
mov
popa
pxor
adc
add
mov
fadds
push
cld
dec
cwtl
xlat
sarb
jle
out
xchg
inc
xchg
loope
sub
add
push
jo
add
adc
mov
jmp
cmpsb
ja
shlb
cmp
or
aaa
add
mov
int
data16
add
repz
iret
nop
js
add
jp
add
shlb
cmovne
mov
add
ljmp
es
mov
test
add
int
and
loop
cmpsl
add
jo
mov
mov
test
jne
ljmp
jb
fbld
cmpsb
pop
jge
jnp
dec
add
sub
cmpb
cmpl
pop
movsl
scas
je,pn
out
add
mov
roll
mov
cmpl
bound
or
add
scas
pop
adc
jmp
lea
cmpsb
xor
push
xchg
pop
add
mov
and
add
mov
lods
mov
xchg
or
sub
xchg
xchg
pop
pusha
adc
movsb
add
enter
cmp
add
pop
sbb
add
jb
pop
arpl
push
pop
dec
sub
fistl
inc
mov
outsl
dec
add
bound
lahf
push
or
fnstsw
mov
mov
add
jno
push
xchg
cmp
sbb
mov
push
out
into
test
sbb
lret
jne
jno
rorl
stos
add
dec
rol
dec
inc
nop
cmp
mov
popa
xor
call
nop
and
xchg
into
roll
push
or
es
xchg
incl
xchg
stos
mov
iret
hlt
test
ljmp
push
repnz
leave
fcmovne
sbb
cmp
sbb
add
mov
mov
push
sti
mov
es
jg
or
adc
sub
push
jbe
add
or
rclb
mul
cli
cld
sub
fistps
in
add
cmpsb
or
xchg
inc
sub
or
dec
inc
ja
icebp
andl
jnp
add
fbstp
dec
clts
push
scas
mov
test
out
jge
int3
pop
shl
rclb
and
xlat
pushf
xchg
xchg
in
wbinvd
mov
loopne
faddl
add
adc
hlt
pop
and
add
je
das
cld
xchg
xchg
or
popl
sub
fimuls
jne
test
add
xor
mov
mov
and
mov
adcb
add
jmp
dec
add
outsb
lea
popa
iret
or
fcomp
pop
add
inc
sub
lahf
stc
fdivrs
jnp
rclb
add
imul
xchg
cld
or
jns
out
add
pop
sbb
pop
out
push
or
pusha
jnp
fildl
mov
mov
roll
addr16
lods
data16
dec
add
xlat
mov
lcall
movsb
add
setae
repnz
aam
xor
and
scas
add
cmp
pop
cmpl
add
aas
cs
push
sahf
jle
add
aam
or
mov
or
lcall
stos
jp
add
movsl
pop
mov
sub
or
in
pop
sbb
add
mov
push
mov
les
mov
mov
pop
pop
lcall
and
mov
std
test
ljmp
adc
inc
in
test
fildll
or
test
mov
jmp
push
call
loop
std
jnp
sub
sbb
push
jne
pop
adc
jge
or
das
sti
or
fldcw
inc
sbb
push
xor
or
cli
jmp
mov
mov
push
pop
pop
jno
call
pop
nop
and
jne
fildl
test
cmp
bound
xchg
daa
imul
add
dec
adc
add
mov
out
adc
orl
dec
cmp
sbb
movsl
scas
mov
fldcw
and
loopne
cmp
pop
jge
icebp
mov
data16
xchg
add
shrb
add
inc
jbe
mov
cwtl
lret
rolb
movsb
add
gs
popf
cmpsb
inc
cmp
xchg
mov
pop
push
add
or
pop
cmp
call
push
add
or
scas
xor
xor
addb
add
pop
sbb
jne
add
push
jge
lock
and
shll
xor
mov
jns
jb
mov
jae
xor
enter
loope
insl
rolb
pop
ja
movsb
fnsave
xchg
mov
out
lcall
jo
jle
xor
mov
movsl
ja
sbb
or
rcrb
negb
xchg
push
cmp
and
xchg
scas
push
leave
dec
jae
sbb
imulb
loop
stc
pop
sbb
xor
pop
dec
mov
inc
push
pusha
mov
aas
mov
cmpb
roll
or
loopne
dec
enter
mov
and
push
test
mov
push
add
and
rcr
repz
push
mov
add
aas
mov
mov
in
ss
arpl
jbe
sub
cli
add
or
dec
or
lret
enter
inc
leave
fdivrl
add
sbb
xchg
push
cmp
xchg
scas
or
js
inc
outsl
mov
imul
movsb
cmp
add
push
inc
std
add
push
or
add
cmp
ss
das
add
xchg
xchg
popa
hlt
in
cld
fildl
fst
mov
sbb
or
add
add
out
ja
xor
add
jl
jne
jg
add
add
xor
movb
inc
and
call
inc
pop
sub
xor
mov
add
sub
mov
adc
mov
pop
mov
notl
cmc
adc
jo
loopne
or
insl
mov
pop
mov
sbb
pop
negb
xorb
jnp
add
shlb
push
add
pop
add
add
mov
jg
cmp
repnz
shl
sub
sbb
iret
pop
push
es
rorl
into
mov
pop
add
dec
adc
test
pop
lret
inc
and
add
xchg
cmp
mov
aas
add
jbe
mov
loopne
add
mov
shr
stc
or
add
or
imul
insb
pop
jl
sub
pushf
mov
add
scas
cmpsb
in
mov
inc
stos
lods
lret
lea
rol
xchg
ret
mov
popl
jnp
jl
push
pop
insl
shl
add
mov
xadd
add
xchg
mov
or
lock
lret
pop
add
enter
cmp
mov
sub
cltd
dec
jmp
add
fcomps
mov
test
xchg
out
add
adc
sbb
jo
enter
les
mov
aam
out
rorl
add
push
repnz
push
mov
cmp
out
call
stc
adc
and
mov
testb
loopne
daa
add
iret
sub
add
cmpsl
gs
pop
inc
mov
movsb
jns
push
push
cmp
lret
sti
mov
orb
mov
out
int
test
arpl
enter
lret
ret
mov
jo
inc
stc
sub
inc
jbe
fisttps
loopne
fdivs
in
sub
mov
cmpsl
push
xor
add
movsl
aaa
inc
add
pop
sbb
pusha
aad
xchg
and
ljmp
sub
mov
lods
mov
es
lock
add
test
stos
xchg
sbb
sahf
loope
adc
add
pop
cmp
daa
nop
int
sbb
repnz
xchg
cmp
mov
cmp
mov
pop
cmpsb
mov
int3
std
call
adc
rorb
inc
adc
mov
push
push
sbb
mov
sub
push
mov
shlb
and
les
add
xchg
out
ret
insl
add
jno
add
sbb
mov
push
clc
outsb
adc
shrl
icebp
aaa
cmp
pop
jl
pop
jnp
dec
cmp
jo
push
lods
mov
push
cwtl
loopne
and
push
jne
pop
add
add
aad
in
insl
pusha
adc
aam
push
mov
sub
jno
movl
enter
or
mov
std
push
add
adc
sti
cmp
add
fs
sub
iret
add
push
int3
adc
rcl
adcb
xor
add
in
and
add
lahf
jle
jne
push
dec
mov
stos
popa
mov
std
jnp
fs
vpmulhuw
out
repnz
jne
jno
mov
ret
mov
shl
mov
or
sub
push
fs
or
mov
and
mov
sub
pop
enter
xchg
or
fucomi
push
call
es
pop
xor
ja
sbb
outsl
mov
dec
mov
inc
sbb
pop
aad
data16
rcll
jae
fldl
enter
sub
dec
jne
lahf
in
test
mov
pop
in
push
jnp
mov
and
add
pop
mov
push
fucomip
sub
xchg
pop
mov
js
jecxz
gs
and
mov
adc
imul
cmp
inc
std
mov
mov
sub
sarl
rolb
hlt
icebp
add
sbb
and
or
clc
movsl
mov
sub
arpl
out
loopne
mov
scas
xlat
add
pop
hlt
cltd
or
add
loopne
push
testb
fdivs
outsl
jecxz
or
add
pop
or
xchg
lock
icebp
mov
jns
stos
addr16
loop
jecxz
iret
xor
xor
fldt
xchg
je
add
mov
enter
add
xor
out
repz
sub
and
inc
add
cmp
das
add
clc
arpl
mov
movsl
mov
ret
stc
outsb
or
mov
xchg
jmp
clc
xchg
lock
nop
clc
icebp
test
push
mov
nop
mov
jae
jp
and
rcll
adcl
fbstp
js
xchg
push
add
add
add
xlat
mov
outsb
push
arpl
fbld
notb
sahf
or
mov
add
sbb
lcall
xchg
into
imul
pop
xorl
add
sbb
in
into
add
or
leave
roll
push
sti
idivb
inc
inc
pop
incb
shrw
add
jne
test
call
pushf
add
fs
scas
add
ds
xchg
fincstp
popf
daa
add
aas
inc
cmc
out
fadds
adc
mov
loop
divb
les
sbb
push
aaa
fistpll
sar
cld
pop
adc
mov
add
ficomps
es
add
sub
cmpb
mov
jg
or
sbb
dec
inc
in
fldln2
jp
add
push
fwait
adc
push
inc
icebp
pop
les
and
jl
enter
mov
popf
pop
dec
out
cwtl
inc
xchg
add
outsl
xchg
scas
leave
push
sub
hlt
push
je
xor
fwait
lea
out
mov
call
fsubs
ret
cmp
vcvtsd2si
jge
pop
xor
inc
mov
repz
jg
add
aam
orb
add
cmc
popf
jb
cmp
pop
pop
jbe
sar
aad
adc
jl
mov
loopne
mov
push
insb
fucomi
repnz
cmc
and
dec
push
add
and
jo
sub
add
dec
sbb
roll
fsts
sbb
ret
xchg
arpl
rolb
sub
add
inc
jae
or
mov
leave
sti
nop
sub
sbb
pop
push
adc
fmull
or
mov
shl
fsubp
pop
lods
add
lret
add
jae
test
add
sub
mov
dec
mov
and
ds
mov
add
mov
jl
pop
inc
xor
aas
push
push
sub
and
test
add
stc
pop
lods
popf
aaa
jbe
ret
jbe
loopne
xchg
sbb
mov
mov
xor
sbbl
inc
mov
arpl
je
or
stos
loope
xor
cmp
jge
jo
xchg
add
pusha
cmp
sbb
repnz
jecxz
and
orb
push
add
cmp
push
lods
sbb
sub
cli
add
xor
or
sahf
scas
cmpsb
push
add
repz
nop
mov
xor
inc
ret
cmp
scas
sbbb
cmp
inc
inc
icebp
dec
lea
iret
xor
sti
test
aad
cmp
push
and
insl
inc
idiv
or
jne
push
xchg
adc
pop
or
pop
pop
xchg
inc
lock
cld
or
loope
inc
outsb
loope
sbb
xchg
jb
repz
xor
ds
fs
lret
inc
pop
scas
cmp
cs
mov
sahf
loopne
insl
mov
add
mov
mov
cwtl
rcr
add
mov
sahf
or
jno
lods
xor
out
mov
push
es
imul
or
mov
or
dec
outsl
pop
push
lret
rclb
pusha
xchg
mov
jmp
mov
aas
cmpsl
or
xor
push
push
es
mov
inc
or
or
sub
pushf
popf
fistps
mov
clc
add
or
dec
add
pop
push
pop
in
daa
xor
hlt
xor
rcr
add
jns
aad
push
cs
fs
aas
and
cmpsl
mov
pop
mov
and
test
pop
cli
xor
mov
jno
imul
and
pop
mov
mov
or
cmc
inc
add
jle
sbb
sub
inc
sub
cmp
lret
hlt
pop
dec
and
ljmp
std
mov
movsb
sub
xor
cmp
call
out
mov
sbb
adc
push
test
and
xchg
fisttps
or
mov
sahf
mov
sbb
fnsave
test
dec
jb
bswap
insl
int3
add
lret
push
add
xchg
scas
ljmp
out
sub
jle
jne
inc
mov
cld
sbb
sti
cmp
or
pop
xor
bound
test
cmp
cmpsb
mov
pop
mov
rcrb
mov
jecxz
add
xchg
adc
cwtl
cmp
inc
adc
call
xor
lcall
sti
pop
xor
adc
idivl
loop
int3
dec
hlt
outsl
loopne
mov
pop
cmp
incl
inc
in
lods
add
hlt
rcr
push
jecxz
push
push
inc
cmpsl
dec
inc
mov
jno
mov
and
cli
pusha
loope
jae
enter
pop
pusha
stos
inc
ljmp
mov
cmp
or
cmp
mov
xchg
loopne
or
ljmp
jp
incl
add
add
push
push
xchg
mov
jo
mov
mov
imul
in
sub
push
sar
fdivrp
out
add
sbb
xchg
pop
add
mov
add
inc
push
ja
add
leave
mov
push
loopne
add
shll
lock
lods
test
and
bound
pop
add
pop
cli
rclb
cwtl
jae
hlt
pop
pop
sub
rcl
mov
add
test
sbbb
xchg
sbb
fdivrl
out
add
or
pop
out
add
add
clc
inc
add
hlt
sbb
test
shlb
add
mov
jne
inc
push
adc
pop
sbb
add
mov
dec
jae
movsb
imul
inc
mov
adcb
pop
daa
mov
es
mov
out
pop
or
aam
imul
inc
mov
cltd
popf
add
push
imul
sub
and
cmpl
mov
jne
add
sarb
dec
gs
aaa
nop
call
cli
jae
or
pusha
loop
xchg
push
adc
add
repz
or
jecxz
lcall
xor
push
addr16
add
dec
cmp
dec
add
mov
out
and
add
mov
xchg
add
sub
mov
movsb
test
cmpsl
sbb
std
pop
push
fdivrl
push
mov
clc
add
mov
cmc
inc
push
out
addb
je
popa
lods
and
icebp
les
pop
cmp
idivb
ret
sbb
inc
leave
pop
sbb
pusha
mov
push
add
fwait
jg
in
xchg
cmp
mov
adc
enter
test
stc
jne
add
and
mov
out
daa
xchg
leave
xor
pop
addb
inc
jl
inc
in
and
jno
cmp
jecxz
or
mov
mov
xchg
xchg
adc
arpl
pop
push
mov
jge
and
fnstcw
cmpb
add
leave
movsb
jle
add
adc
cld
cmovae
sbb
rcll
dec
add
add
ret
xchg
mov
and
lods
pusha
inc
arpl
add
pop
add
sbb
or
add
jbe
mov
add
adc
dec
cli
inc
add
lret
dec
dec
shll
loop
mov
ss
test
add
add
sbb
flds
add
mov
mov
gs
sbb
mov
ja
add
pop
sbb
dec
rol
inc
xor
or
pop
in
arpl
into
add
test
add
aaa
imull
adc
imul
pop
push
xchg
inc
add
jbe
loope
add
out
ljmp
lahf
outsb
xor
mov
ss
cmpsl
cltd
shrb
mov
jae
xlat
xchg
jne
add
pop
dec
scas
nop
push
and
add
push
mov
lds
mov
jne
add
lcall
xchg
add
jle
xlat
push
and
insb
xchg
xor
mov
add
adc
mov
in
sub
add
iret
cltd
lret
aad
nop
xor
add
adcl
int
rol
and
sahf
enter
out
jge
aas
or
movsl
daa
cmp
stos
mov
in
test
call
lret
xchg
jno
pop
and
cmove
mov
push
jmp
lds
pop
mov
incl
nop
or
in
xchg
sbb
mov
sti
shr
arpl
out
insl
loop
ret
rorb
jbe
lret
jno
verw
dec
or
rcl
insl
xor
push
add
ss
adc
enter
loopne
nop
mov
es
push
add
cs
xchg
mov
test
in
inc
das
or
add
bound
repnz
add
mov
mov
push
roll
xor
mov
mov
div
adc
sar
adc
dec
pop
pop
cmp
xchg
stos
add
dec
scas
addb
xchg
in
and
push
add
pop
int
fisttps
lea
jmp
xchg
aaa
mov
mov
cld
sub
pand
or
add
mov
mov
xor
test
mov
and
add
pop
cli
sub
lods
fistl
rcl
out
dec
and
imul
jmp
pop
mov
add
stos
in
fstl
subb
mov
and
push
add
inc
add
in
loop
mov
mov
lcall
pop
xor
mov
clc
rcl
pop
popl
addb
inc
in
add
icebp
cmp
add
pop
cmp
cmp
stc
shr
rcrl
mov
les
add
inc
sbb
adc
mov
add
cwtl
insl
negl
jns
mov
rcll
mov
xchg
addb
or
push
xchg
mov
arpl
jge
repnz
pop
ss
add
mov
imul
sbb
pop
test
pop
sahf
pop
push
fwait
bound
and
cmp
xor
dec
add
jecxz
lods
aas
cli
add
lret
mov
adc
insb
jbe
and
dec
or
out
cmp
cmp
adc
insl
outsb
in
sub
daa
add
xor
and
call
aas
insl
pop
sub
xchg
inc
adc
add
inc
and
rorb
pusha
mov
mov
mov
fdivrp
lret
ja,pt
xor
aaa
add
jle
pop
int
call
fs
mov
sub
xchg
lock
lcall
shrl
call
call
lcall
mov
repz
xchg
rcrl
jl
sahf
sub
mov
orb
add
enter
jno
add
rep
sbb
xchg
adcl
adc
aas
adc
loopne
push
fcom
popf
repnz
add
inc
xor
push
pop
add
stos
cld
xor
cmp
lcall
add
sbb
scas
pushf
nop
inc
add
add
xor
pushl
add
ret
pop
dec
add
std
fidivrs
jl
add
rorb
inc
ds
add
pop
pop
add
je
flds
push
adcb
add
sub
stos
add
cmp
rcrb
fldenv
add
inc
mov
es
rolb
push
out
lds
inc
loopne
pop
stc
loopne
add
sahf
xlat
xor
add
cmc
loope
push
cmpsb
add
es
xchg
xor
lock
jns
sub
sub
movl
and
adc
out
mov
cmc
shrb
adc
iret
movsl
sti
push
add
rcll
or
adc
les
push
mov
pusha
inc
add
and
inc
inc
xor
ficoml
sub
or
cmp
push
add
in
adc
fdivrp
cmp
jmp
mov
add
mov
mov
xor
push
xor
xor
pop
pop
stc
movsl
shlb
mov
bound
stos
imulb
or
cmc
les
xor
das
cmpsl
enter
je
movsb
pop
cld
mov
in
xor
pmullw
xchg
add
lret
imull
xchg
add
sbb
jbe
push
icebp
mov
in
sarb
xchg
dec
xlat
imul
mov
icebp
imul
mov
inc
cmp
cmp
cmpsl
fadds
rolb
les
sti
inc
mov
ret
dec
mov
add
stc
je
jo
add
arpl
add
out
out
cli
lcall
or
add
jnp
push
push
ffreep
in
pusha
incl
bound
add
inc
jecxz
add
stos
test
cmp
sub
sbb
or
aam
push
fcomps
fmull
test
pop
and
xlat
dec
jne
adc
inc
repz
dec
negl
out
mov
inc
push
cld
aas
inc
inc
and
mov
rcr
sbb
lds
xchg
jp
dec
outsb
fsubrs
sbb
dec
clc
loop
or
fcoms
mov
and
insb
rcrb
mov
aas
sub
call
pop
xchg
push
xchg
stos
aaa
fstpt
cmpsl
jo
ret
xchg
cmpsl
popf
pop
push
mov
sub
ret
and
or
adc
rcrb
jle
in
cmp
pop
dec
test
test
stos
cmpsb
test
adc
pop
xchg
sti
stc
sub
aas
movsl
push
xchg
call
dec
jmp
adc
add
jae
in
rorb
jl
gs
sbb
int3
jmp
cmp
scas
mov
xor
mov
add
lea
cmp
jl
cmc
xor
cwtl
rcrb
mov
push
push
sub
xlat
mov
lock
ret
or
pop
jecxz
mov
cld
test
mov
xor
push
ficoms
sbb
orb
repnz
sbb
and
cmp
mov
repz
in
dec
adc
xchg
test
fcomps
ja
push
push
cmpsl
jb
or
add
incb
test
push
add
repz
sbb
add
mov
repnz
icebp
movsl
push
shlb
mov
scas
push
jo
cs
adc
jb
add
pop
push
sbb
mov
adc
imul
je
loope
fucom
lahf
shl
inc
add
pop
cltd
pop
push
data16
add
ret
insb
or
loop
subb
pusha
gs
jl
add
out
testb
sub
in
fadds
adc
aad
jb
cs
cmp
data16
gs
sbb
dec
add
adc
adc
add
mov
ljmp
bound
xchg
push
loop
nop
loopne
es
sub
inc
add
mov
sbb
mov
mov
dec
add
into
fisttps
add
inc
pop
repnz
dec
push
pushf
push
neg
loop
add
mov
adc
data16
outsb
adc
sbb
jle
add
scas
ficompl
imul
out
add
cmp
loope
add
xchg
movsb
testl
mov
sti
lret
aad
stc
lds
call
stos
add
in
iret
lret
mov
cmp
jl
sahf
pop
pop
pushf
and
rolb
mov
xchg
xchg
insb
fs
cmp
test
push
mov
cmp
lahf
sub
add
iret
movsl
mov
xchg
add
sub
add
push
dec
mov
mov
sub
inc
aad
push
mov
or
xchg
push
loope
into
out
or
ret
jnp
js
mov
mov
repnz
xor
jae
repz
cmp
std
mov
aam
inc
mov
cmp
pop
inc
inc
and
adc
cmpsl
in
jmp
and
sti
test
lock
std
push
lea
sarb
stos
mov
hlt
stos
and
nop
aad
test
ss
pusha
cli
mov
mov
fwait
movsb
fs
repnz
cmp
gs
inc
fcomi
cld
leave
or
outsl
push
cmpsl
cld
jne
fcoms
test
ja
xchg
leave
fildl
xchg
xor
stc
mul
les
mov
ja
inc
xchg
pop
jne
xor
dec
bound
and
ja
push
pop
ja
dec
imul
cld
dec
cli
fldt
adc
in
sub
mov
faddl
pop
mov
je,pt
dec
ja
jns
or
sbb
in
mov
fsub
fcomps
cmp
scas
in
ja
push
inc
jecxz
jns
add
adc
xchg
imul
pusha
sbb
cmp
cmpsl
ljmp
rcrb
loope
scas
clc
lods
add
adc
add
sbb
mov
sub
insb
add
pop
sbb
xor
icebp
out
incl
das
fxch
mov
sbb
inc
mov
mov
rol
and
ja
sarb
outsl
jl
mov
push
adc
jecxz
iret
fsubrl
add
push
icebp
push
test
fs
mov
sbb
ds
add
mov
dec
add
or
mov
cltd
lds
in
adc
add
and
ja
stos
lcall
scas
jo
jnp
pusha
into
iretw
scas
rcll
adc
rcrl
shr
fildl
and
adc
add
loope
stos
mov
add
jl
pop
jmp
daa
lea
sub
inc
pop
or
jo
push
mov
fdivrs
add
ss
scas
xorb
add
push
loope
inc
js
push
aas
aad
pop
mov
dec
lea
add
iret
insb
ss
add
scas
ljmp
xor
cmp
clc
repnz
mov
cmpb
fildl
pop
jbe
rcrb
inc
xor
inc
cwtl
aas
inc
mov
ret
inc
jo
push
int3
xor
je
xchg
mov
add
popl
into
pop
pop
sbb
daa
loope
fistpl
pop
roll
push
flds
add
mov
daa
out
xchg
xor
push
or
cltd
lock
fiadds
hlt
or
xchg
inc
pop
mov
sub
movl
ljmp
fisttpll
fisttps
inc
xor
aam
movsb
out
test
repz
repnz
lahf
adc
push
sub
pop
cld
lods
mov
std
aaa
fsubr
sub
orl
or
add
push
fisubrs
insb
or
lods
mov
adc
leave
inc
cmc
js
mov
mov
mov
jbe
adcb
test
sbb
outsl
shrb
xchg
add
icebp
mov
add
sub
push
fcoml
subl
add
pop
mov
add
scas
insl
inc
and
mov
sbb
mov
lcall
dec
sahf
aas
sbb
inc
nop
jne
push
add
inc
sbb
pop
xor
sbb
xorl
popf
pop
add
loope
movb
insb
or
xchg
add
test
adc
dec
sbb
jecxz
add
sub
mov
xor
cwtl
mov
and
lock
add
adc
aaa
cmpsb
adc
sub
add
or
sub
adc
popa
mov
xor
sbb
mov
lret
test
int3
add
ljmp
xlat
xor
xorb
xor
popa
xchg
mov
add
stos
cmp
and
jno
or
scas
xor
cmp
add
rorb
inc
sub
add
movsl
push
mov
add
mov
jno
gs
mov
mov
scas
xchg
pop
leave
dec
rolb
cmp
add
int3
push
adc
fisubrl
loop
jns
jg
cld
adc
push
pop
stc
pushf
and
rorl
jecxz
leave
test
imul
popf
sar
ljmp
loop
jmp
or
jne
fstpl
mov
pop
outsl
jl
add
scas
xor
fwait
dec
mov
xor
cmp
mov
mov
jecxz
fcoms
xchg
fistps
or
gs
inc
jg
ret
sarb
mov
pusha
sub
es
cmp
rol
test
or
fmuls
pop
jae
aaa
mov
sahf
and
das
outsl
insb
sub
add
ss
cmc
push
pop
or
into
adc
lock
add
hlt
insb
pop
xchg
push
ds
and
inc
lcall
out
and
mov
mov
and
cmp
dec
add
ret
test
rclb
mov
notl
pop
enter
pop
and
addr16
mov
sub
or
pop
mov
arpl
movsl
std
cmpb
jns
dec
and
ret
pusha
add
cmp
adc
lds
mov
ljmp
sbb
fistps
push
gs
or
repz
jns
inc
jp
add
adc
mov
clc
add
mov
movb
test
in
js
outsb
add
push
or
sbb
mov
xchg
add
addl
jbe
leave
add
cltd
or
in
out
mov
test
add
jecxz
roll
pop
out
mov
push
in
ret
sti
add
mov
add
inc
adc
pop
xor
push
xchg
jb
jne
ljmp
jmp
xchg
inc
incl
inc
sub
das
mov
and
das
out
sbb
xor
cmp
or
lods
stc
mov
jae
xor
pop
xchg
xor
addl
out
outsb
imul
pop
imul
outsl
mov
push
sub
add
in
add
adc
ret
rolb
cmpsl
or
push
mov
jnp
pop
neg
add
sti
les
stos
mov
push
inc
lods
push
cltd
in
add
jmp
data16
xchg
fistpl
lret
xchg
jle
jmp
mov
shlb
testb
imul
shrb
adc
sbb
rolb
imul
add
dec
movb
hlt
jg
dec
jmp
xchg
add
and
sbb
or
mov
xchg
movsb
stos
mov
lea
out
in
in
jne
inc
dec
mov
insb
addb
cld
dec
inc
and
fsubr
push
push
add
push
loopne
add
fistpll
jle
fs
push
pop
loope
lds
pop
mov
add
repz
daa
add
les
push
scas
ror
mov
ret
lcall
sbb
cmpl
cwtl
lahf
add
in
fdivrs
jb
loopne
jmp
add
jne
cmp
lret
pop
fcoms
orb
in
out
push
sbb
in
add
out
shlb
dec
test
add
inc
fstpl
cmp
cmpsl
add
xchg
xchg
add
mov
lea
aas
cmc
xor
ljmp
lock
push
add
loope
test
xor
add
sbb
xor
mov
or
add
dec
add
push
das
xor
inc
lods
repz
add
push
xor
sub
fdivrl
dec
stos
jg
scas
mov
add
add
xchg
add
data16
shlb
jmp
xchg
ret
sub
or
popf
js
xchg
dec
pop
xor
add
or
push
or
cltd
hlt
xor
mov
test
pop
inc
dec
sti
cwtl
dec
or
in
bound
mov
mov
sti
push
rcll
dec
adcl
sub
sub
or
fdivrs
xor
push
inc
dec
popa
jae
mov
sbb
nop
les
les
in
push
add
clc
pushf
leave
lock
sbb
xchg
hlt
or
leave
mov
sub
inc
lock
adc
add
add
lahf
popa
fstps
jecxz
stos
or
sbb
ret
test
inc
testl
xor
pop
mov
movsl
pop
pop
fisttpll
pop
insb
pop
xchg
add
jg
push
cmpb
je
adc
inc
enter
std
test
jle
in
or
inc
lea
dec
clc
mov
adc
mov
pop
xor
add
add
dec
je
rorl
cli
mov
push
mov
call
mov
adc
clc
dec
ret
xchg
add
add
mov
mov
scas
and
inc
mov
cmpb
daa
pop
adc
xor
ret
sbb
rorl
or
adc
push
test
out
mov
jne
and
clc
outsb
decl
cmp
loop
dec
cltd
outsb
add
fidivrs
mov
xor
loope
enter
orb
or
shlb
fs
orb
sub
sub
or
pop
xchg
dec
cmp
jo
cwtl
mov
xor
fcomps
sub
jb
inc
mov
sbb
and
mov
jmp
inc
inc
hlt
pushl
xchg
push
inc
xchg
insb
mov
test
shlb
pop
cvttps2pi
cmp
add
mov
mov
and
mov
add
in
pop
and
mov
mov
dec
int3
pop
jns
add
pop
clc
scas
cmpsb
ss
stos
sbb
and
inc
add
adc
imul
sub
or
add
jmp
mov
jge
inc
mov
mov
dec
jg
bound
cmpsw
fistl
and
pop
xchg
ret
mov
mov
sbb
neg
test
test
mov
decl
pop
sbbl
and
or
inc
pop
orb
adc
adc
mov
les
lcall
adc
mov
movl
pop
xor
inc
je
push
mov
cs
scas
mov
testl
das
call
das
mov
fisubrs
mov
insl
testl
add
shlb
sbb
je
or
testb
add
adcl
xchg
jg
orb
outsl
push
xor
xor
in
pop
aaa
movsb
test
test
adc
sub
cmp
adc
push
or
pusha
xchg
xor
add
cmp
push
add
lea
inc
dec
lahf
sbb
pop
pop
adc
adc
add
mov
lods
cwtl
inc
or
mov
gs
repnz
xchg
ljmp
mov
xchg
sbb
pop
cmp
and
mov
jmp
sbbl
incl
and
hlt
dec
movswl
mov
outsl
jmp
mov
sub
mov
and
xchg
and
mov
mov
icebp
test
loopne
ror
mov
inc
adc
mov
call
adc
push
lea
loopne
xor
mov
jae
cmp
repnz
jl
inc
lea
add
add
jne
mov
les
sbb
dec
jne
insl
cmp
je
push
ja
loop
mov
out
and
xor
mov
das
repz
or
shl
mov
push
test
push
mov
dec
mov
and
push
push
ret
daa
push
daa
nop
jge
les
xchg
jge
dec
call
adc
loop
movsb
jo
lods
mov
hlt
sar
rcl
add
call
mov
das
clc
arpl
xchg
iret
and
sbbb
movsb
stc
or
in
push
mov
popf
imul
lret
push
jmp
pop
fidivrs
inc
fldl
aam
scas
mov
aam
mov
xor
mov
fadd
adc
adc
push
xchg
fisubrs
fists
xchg
arpl
stos
sub
shlb
adc
mov
int3
scas
cmp
inc
mov
stos
into
out
fwait
imul
sbbb
out
xchg
mov
repz
xor
pop
sahf
or
xlat
lds
lcall
adc
or
in
shl
push
das
lds
cli
jecxz
and
out
ljmp
push
sub
fidivrl
pop
pusha
push
hlt
or
cld
push
clc
mov
clc
popa
fwait
push
loop
or
dec
jecxz
aaa
adc
iret
jmp
or
jmp
ret
fmuls
leave
mov
movzwl
shr
cmp
add
idiv
cvttps2pi
lock
sub
add
dec
xor
add
rcrb
and
jne
pop
jmp
jl
leave
aaa
lock
mov
ja
and
in
cmpsb
add
push
sbb
aaa
rclb
adc
dec
pop
stos
dec
data16
lock
adc
add
bnd
sub
adc
add
adc
xorb
push
mov
xchg
xor
popf
pop
loop
pop
xchg
cmp
lods
inc
das
jmp
lods
adc
dec
push
mov
bswap
or
bound
push
or
rcll
jo
in
xlat
mov
clc
or
fcompl
les
scas
cwtl
imul
lock
or
pop
push
inc
xchg
push
cmp
cmp
test
cmp
faddl
xchg
push
shrb
inc
add
imul
sub
mov
lods
and
or
sub
daa
fs
add
add
add
leave
int3
cmp
push
sti
pop
push
das
mov
mov
push
cltd
enterw
sahf
aaa
fwait
out
sbb
lret
ljmp
push
cmp
mov
jle
popa
dec
and
fsts
gs
incb
and
mov
fnsave
into
sbb
fdivs
jbe
loope
adc
add
test
cmp
stos
mov
add
jg
add
jl
sahf
mov
cmp
stos
sub
or
ret
dec
movsl
inc
faddl
lock
and
cmpsl
mov
dec
in
mov
pop
lds
dec
cmc
arpl
xor
xlat
add
int
outsb
shll
push
add
std
inc
xchg
loope
add
xor
and
shlb
jo
dec
add
sbb
push
loopne
adc
sub
shlb
add
stos
pusha
sti
xor
add
loop
add
xlat
jne
sbb
mov
inc
mov
sti
cwtl
popa
cmovne
stos
adc
dec
arpl
ds
xchg
push
cmpsb
lea
stc
jbe
lahf
pusha
ljmp
scas
xchg
cmp
sub
jmp
pop
rol
push
paddsw
or
mov
cmc
add
je
addr16
jmp
add
inc
gs
loopne
jb
cmp
in
mov
lods
and
add
inc
sbb
xchg
lds
lahf
sub
call
xlat
add
push
test
xor
repz
xchg
leave
fs
mov
into
sub
addr16
gs
jp
dec
and
in
mov
jge
sahf
push
push
orb
pop
lods
jne
test
jg
add
xchg
mov
rolb
aaa
in
jbe
fdivrs
xor
pop
mov
icebp
pop
ret
pop
hlt
testb
fistpl
int3
add
shlb
pop
cmpsl
sbb
sbb
push
outsl
testl
lds
int3
inc
sti
aad
jge
pushf
bound
addb
loope
into
fdivrs
jo
jecxz
and
mov
loopne
fisttps
cmpsl
in
xchg
into
xchg
jmp
add
fbld
ret
test
in
add
mov
test
add
fwait
push
inc
iret
dec
addr16
aam
mov
xchg
enter
xchg
cmp
adcl
test
jmp
pop
ret
jb
add
das
loopne
pusha
add
mov
nop
scas
add
lods
sbb
sbbb
add
call
adc
nop
sbbb
test
sbb
fbld
xor
mov
dec
xor
movsb
cmp
lds
daa
xchg
sbb
and
in
cmp
push
popa
push
add
clc
hlt
add
aam
out
jno
add
and
sti
add
in
dec
cltd
mov
add
cwtl
in
pop
mov
mov
and
fstpl
loope
inc
sub
data16
or
add
lcall
add
mov
jnp
pop
and
adc
testl
hlt
or
inc
adc
imull
fcmovnb
fistpll
push
adc
cmp
dec
push
or
sti
stos
add
jmp
rolb
cmp
mov
mov
jns
in
int3
mov
fdivrl
inc
add
icebp
add
dec
xchg
mov
aaa
stos
cmpsb
add
pop
xlat
xor
movsl
and
shlb
add
ljmp
add
push
ret
sti
xor
ja
out
js
pop
inc
pusha
add
inc
stos
fdivr
sbb
mov
subl
push
mov
mov
leave
xor
das
xchg
add
mov
pop
imul
sub
jno
adc
add
xchg
inc
jnp
outsl
jo
add
lock
mov
add
jmp
incl
inc
das
xchg
mov
add
test
push
sbb
subb
movsb
adc
add
sbb
mov
repnz
add
xor
bound
add
sbb
insl
mov
push
scas
cld
pop
sub
dec
cmpsb
loopne
jp
dec
add
pop
daa
out
jb
pop
outsl
mov
imull
scas
roll
add
mov
testb
sbb
pop
out
lret
add
popa
cmp
pusha
lock
mov
adc
jbe
cmovae
add
push
sub
xor
mov
push
cld
pop
movl
outsb
sub
adc
fdivrl
or
cmpsl
repz
aam
ja
and
sti
imul
cmpsl
enter
add
rorb
std
ret
lret
dec
lahf
dec
add
mov
mov
js
clc
ja
push
or
stos
in
js
movsb
xchg
jne
pop
aaa
cmp
int
inc
and
ss
mov
inc
iret
test
in
mov
icebp
add
insb
pop
sub
aam
dec
sbb
xabort
cwtl
ds
int3
add
loop
pop
mov
in
pop
add
xchg
pop
and
rorl
adc
mov
stos
andl
add
and
xor
mov
repz
push
jl
inc
call
adc
xor
cmpb
xchg
sbb
test
xor
fisttps
clc
xchg
inc
test
mov
or
subb
lcall
xchg
pop
adc
add
jne
or
sub
mov
push
sbb
movsb
bound
xor
pushf
cmpb
jne
divl
decl
fucomp
inc
jo
or
mov
lret
aam
mov
aaa
inc
jp
add
sbb
rcll
cld
adc
xor
push
ds
pushf
mov
test
mov
add
sbb
cs
addr16
xchg
pusha
loop
add
mov
mov
jp
ret
in
inc
faddl
cwtl
or
and
pop
clc
cltd
add
lds
fsubrp
jbe
push
dec
add
mov
ljmp
scas
and
mov
in
popf
mov
ljmp
dec
inc
int3
out
sbb
into
ds
fiadds
leave
push
pop
xor
lods
mov
adc
jmp
add
fidivrl
add
mov
xorb
add
dec
mov
xor
mov
shrb
decb
insb
inc
bound
ret
cmp
mov
fwait
add
lret
push
sub
sbb
mov
cmpsb
mov
add
add
mov
xor
stc
jle
push
cmp
cmp
add
dec
mov
sbb
imul
iret
add
out
add
pop
adc
lea
test
lods
pop
test
pop
push
and
jl
push
outsl
add
dec
mov
add
xor
jb
push
or
adc
xchg
mov
imulb
arpl
leave
dec
mov
test
dec
inc
idiv
lock
pop
das
pop
bound
mov
jge
add
dec
jle
mov
iret
xchg
adc
add
idivl
pop
xchg
and
lea
inc
adc
add
leave
pusha
inc
and
imul
je
sar
cld
js
add
sahf
iret
mov
push
int3
nop
push
inc
rcrb
sbb
popf
add
test
push
mov
imull
push
push
or
add
js
cli
cwtl
add
inc
and
stc
jge
scas
add
mov
lret
into
mov
xchg
cmpb
rolb
push
jae
lods
xor
jae
add
jp
cmpsb
add
std
insb
in
inc
pop
orb
add
add
std
imul
nop
dec
sahf
mov
movsl
push
pop
add
arpl
sub
popa
andl
call
sub
mov
imul
xchg
jl
add
adc
stc
lods
in
jns
jbe
inc
sub
cmp
bound
int
cmp
dec
lretw
nop
inc
stc
add
fcomps
add
into
mov
lock
insl
ds
stos
stos
inc
add
jmp
xorb
pushf
nop
or
add
cmpl
push
push
adc
push
popa
mov
add
cs
out
pop
xor
insb
mov
mov
dec
add
sub
inc
shlb
jp
add
loope
xorw
fldl
int3
add
mov
dec
cld
hlt
add
xchg
or
jnp
add
lods
pop
fistpl
dec
sbb
mov
inc
popa
loope
shl
lret
add
and
push
add
ja
lahf
hlt
inc
pusha
aam
mov
xchg
sbb
xlat
add
push
add
das
sbb
mov
iret
adc
subb
xlat
aas
inc
xor
push
lods
sbb
rorb
popa
int3
cmp
aaa
add
mov
dec
push
push
xor
jle
dec
xchg
push
adc
shlb
jmp
popa
add
or
mov
sbb
sub
scas
mov
loope
add
les
popl
enter
jno
xor
jecxz
cld
out
push
push
scas
add
mov
mov
push
sbb
xor
adc
in
fwait
repz
add
outsb
dec
fstpt
adc
mov
sub
lret
xchg
pop
cmpb
add
aaa
mov
fildl
ljmp
cmp
sub
aas
sub
test
jno
mov
in
add
call
mov
out
shll
push
fiaddl
cvtdq2ps
rorb
orb
push
mov
xchg
insb
cltd
dec
push
negb
and
mov
dec
push
cmp
dec
and
pop
fnstsw
adc
xchg
cmc
pop
sbb
xchg
popa
jp
and
xchg
aas
adcb
mulb
inc
dec
adc
scas
test
sbb
add
pop
pop
add
pop
push
shrb
pusha
push
xor
cld
cmpsb
loop
sub
or
mov
cs
in
push
insb
add
push
add
ljmp
add
fadds
pop
flds
push
sahf
in
push
add
out
dec
xchg
loope
lea
jbe
adc
sub
add
loop
test
xor
mov
scas
hlt
or
cltd
dec
cmp
and
aas
push
cmp
ja
push
cmp
push
xor
and
or
pop
imul
cmp
outsl
mov
movsb
and
test
mov
jne
setg
cs
and
ljmp
insl
pushf
mov
hlt
add
in
adc
add
iret
stc
or
inc
add
sub
fbstp
add
push
push
xchg
cwtl
int
cmp
rorb
push
clc
test
add
leave
ja
xchg
data16
and
xor
in
lahf
pop
push
stos
inc
push
aas
iret
pusha
into
out
or
cmp
and
movsl
cli
dec
cld
cs
mov
mov
pushf
jecxz
or
repz
xor
bound
push
add
pop
lahf
and
xchg
and
ret
faddl
stc
dec
pop
dec
mov
fdivs
out
inc
add
xor
add
mov
xchg
sarb
addl
ja
hlt
pop
inc
jge
add
mov
icebp
jp
pusha
popf
dec
adc
std
xchg
cmp
ja
jp
rolb
stos
mov
cmp
divb
stos
jmp
lcall
jo
adc
xor
daa
fcmovne
pop
outsb
xchg
movb
push
pop
sti
jp
adc
push
adc
stos
push
sbb
sub
xchg
lea
andb
pop
jb
repz
sub
lods
sbb
pusha
out
jg
lock
push
stc
jnp
add
es
test
aas
and
add
mov
dec
xchg
jmp
adc
xchg
lock
mov
fldl
add
out
pusha
push
cmp
loope
in
aam
ljmp
lods
pop
or
sub
bound
mov
mov
and
faddp
rorb
push
cltd
pop
xor
je
imulb
adc
insl
or
test
inc
inc
dec
dec
inc
xor
adc
flds
imul
sub
add
daa
xor
and
xchg
fwait
repnz
add
pusha
push
mov
sub
and
pop
mov
roll
adcb
fs
and
pop
mov
push
add
into
pop
cltd
and
dec
cs
scas
out
mov
fmull
mov
inc
mov
jnp
add
cmp
mov
push
insl
jmp
push
cmp
fistpll
cwtl
fadds
mov
gs
add
push
xor
pusha
ja
push
fnstsw
lret
addr16
mov
ss
pop
add
pop
or
pusha
cmp
shll
nop
jg
push
fdiv
mov
rorb
xchg
push
mov
push
call
lods
dec
jbe
pop
xchg
loopne
adc
add
adc
add
pop
movsb
mov
mov
mov
aaa
rclb
mov
mov
mov
pop
push
lds
shlb
pop
sarb
insb
sti
xchg
mov
outsb
or
push
cmp
xchg
lcall
in
clc
leave
add
inc
imul
jae
lock
or
jmp
adc
and
and
es
and
ret
or
add
sbb
adc
adcl
in
inc
mov
xchg
push
addr16
ror
push
xor
in
inc
dec
add
sbb
shrl
add
xchg
das
in
lds
lret
ds
incb
pop
idivl
repz
xchg
mov
ja
xlat
lods
add
mov
cli
loop
ret
jbe
call
cwtl
les
add
jecxz
aad
pop
add
inc
popa
cli
push
pop
mov
xchg
mov
ss
nop
and
or
int
subb
push
sbb
xchg
add
arpl
data16
cmp
sarb
sbb
sub
inc
or
mov
add
pop
data16
aad
lea
sub
scas
sub
jae
sahf
add
pop
outsb
pop
add
in
push
xor
les
in
ja
cmp
cltd
shll
fdivl
sahf
cmc
add
or
add
mov
and
mov
dec
arpl
lea
mov
enter
xor
daa
mov
jle
mov
add
and
jbe
es
adc
aaa
mov
out
icebp
and
mov
aam
xlat
cmp
sarl
test
jns
bound
sarb
dec
mov
enter
xchg
xchg
ds
mov
adc
inc
inc
arpl
xor
push
adc
mov
xchg
push
mov
inc
add
imul
cld
inc
cmp
push
ret
adc
jns
sub
fstpt
xchg
sbb
in
or
jle
push
add
push
aam
sbb
add
inc
in
out
add
cmp
pop
xchg
push
mov
add
les
add
sbb
add
pushf
and
add
andb
jl
push
movsb
xchg
add
and
andb
out
jae
pop
push
shrl
xchg
xchg
jae
xchg
dec
shr
leave
lahf
jnp
mov
je
insl
pop
addl
adc
jne
sti
dec
jle
js
bound
fcomps
fwait
and
add
imul
cmp
jle
lahf
pop
bound
int
inc
leave
mov
push
or
xchg
loopne
orl
cmpsl
pop
movsl
cs
sbb
push
inc
lods
push
jns
or
add
dec
divb
jl
cmp
pusha
push
ljmp
lret
fimuls
dec
dec
mov
rcll
add
sbb
fs
push
ret
fwait
das
add
push
and
push
frstor
loop
cmp
outsb
nop
mov
arpl
cs
cmp
mov
cmpsl
mov
movntq
cmc
fst
clc
add
insl
adc
movsl
sbb
mov
inc
add
ja
and
int3
loopne
xchg
add
mov
mov
mov
and
xor
fwait
cmp
pop
repnz
or
jbe
mov
movsb
pop
pop
add
cltd
xor
arpl
aad
xchg
fnstcw
pop
add
sub
cltd
movd
cmp
xchg
pop
push
stos
pop
push
and
add
loope
loopne
cmp
add
mov
call
bound
pop
gs
or
mov
jnp
sbb
pop
nop
mov
or
in
add
repnz
stos
push
scas
enter
jecxz
leave
inc
in
cmc
aas
adc
and
arpl
insl
xor
adcb
fisubrl
add
hlt
adc
lea
ret
enter
add
mov
mov
in
or
add
outsb
inc
jg
add
lcall
cmpsb
cmp
push
push
xchg
push
out
dec
adc
jnp
push
add
fwait
and
pop
out
sbb
sub
mov
mov
imul
insb
adc
fimuls
cmp
cmp
pop
pushf
dec
icebp
add
cmp
mov
and
sbb
jg
add
mov
push
adc
push
je
loop
or
lret
andl
pop
pop
inc
out
in
jmp
xor
cmc
mov
push
test
mov
scas
and
dec
dec
add
and
or
and
pop
inc
add
cmp
sbb
push
icebp
cld
cmpsl
xlat
imulb
pop
mov
pusha
cmp
les
jecxz
aad
call
pop
add
negb
ret
sahf
push
inc
xchg
add
popf
lods
push
xchg
fimuls
push
rcll
ja
call
inc
orb
sub
fcomps
sub
cmc
jle
in
push
rolb
cs
bound
mov
lcall
out
repnz
scas
add
mov
pop
sbb
enter
in
lods
or
andb
in
fs
xchg
pop
into
hlt
add
loop
add
js
roll
jp
call
jmp
sarb
scas
push
pop
dec
sahf
mov
leave
addb
jmp
mov
push
add
jns
and
out
aaa
add
test
sbbb
mov
out
add
jae
jnp
or
and
les
loope
xor
add
jmp
inc
mov
iret
jecxz
adc
cmp
add
add
xor
fidivrs
add
xor
jecxz
mov
cmp
fs
inc
add
flds
jp
fistpll
jo
out
add
sbb
lock
add
or
fildl
shrl
pop
loopne,pn
push
out
cmpsl
add
insb
inc
add
lds
pop
sti
mov
shll
pop
mov
call
adc
roll
mov
fs
lock
sbb
cs
rolb
adc
fmuls
nop
cmpsl
or
out
add
mov
cltd
dec
add
adc
js
aam
mov
test
ret
into
mov
mov
add
adc
add
in
mov
add
cmpsb
jno
jmp
into
add
push
sti
cld
push
pop
mov
and
nop
sbbb
add
pop
inc
aaa
out
xchg
fadds
in
lcall
idivb
lock
add
or
not
bound
repz
mov
and
out
ret
xchg
scas
lret
and
push
mov
add
pop
pushf
xlat
pop
mov
jo
imul
in
mov
lret
sbb
es
cmpb
inc
jmp
idiv
inc
aad
cmpsl
xlat
and
add
or
cmpsl
push
stos
dec
imul
pop
mov
lock
cwtl
add
mov
outsl
enter
add
push
sbb
pusha
pop
movb
xor
pop
arpl
rolb
add
mov
sub
or
subl
mov
test
lock
jns
or
arpl
daa
fbld
add
ret
sub
jle
test
mov
leave
xchg
fidivrs
rorb
pop
shll
inc
daa
int
pop
xchg
cmp
adc
out
pminsw
mov
and
nop
add
dec
pop
add
xor
aam
pop
ljmp
mov
xchg
adc
aad
addr16
arpl
mov
insb
out
movsl
sti
mov
fwait
cmp
add
imul
dec
sti
outsl
jns
mov
stc
fiadds
aaa
add
movsl
mov
out
leave
pop
add
testb
mov
rolb
add
push
fisubl
sub
add
mov
into
push
in
add
dec
mov
add
pop
test
add
mov
dec
nop
sub
jle
into
cmpw
aas
stos
or
addl
push
push
inc
push
jp
xor
xchg
sti
jno
dec
push
cmp
adc
cmp
add
mov
aam
xchg
cmp
fdiv
sub
push
push
cmp
add
lsl
jp
jp
push
add
push
pop
inc
fmull
in
jne
pop
adc
call
add
testb
lret
aas
jl
imul
bswap
call
sub
xchg
inc
repz
pop
dec
xor
push
gs
jo
rorb
in
adc
sub
hlt
inc
fbstp
scas
in
cmp
mov
aam
jmp
std
dec
pop
lcall
jne
fwait
sub
cmp
stos
imul
lahf
arpl
xor
into
stmxcsr
je
ret
pop
add
shrl
xlat
sbb
add
push
cmp
jl
push
and
mov
mov
dec
add
cmp
iret
shlb
cmpsb
add
ret
adc
cwtl
cmp
scas
std
jns
pop
or
add
mov
sbb
xchg
ljmp
push
imul
lds
add
shrl
adc
inc
mov
push
add
in
mov
mov
sbb
add
ds
int
xor
xor
dec
cs
and
cmp
sub
and
leave
incb
cmpsl
rorl
dec
inc
in
mov
add
mov
xor
jb
rcrl
cmc
sbb
cltd
lahf
mov
add
pop
push
inc
lret
add
sub
test
shl
fimull
js
cmp
mov
scas
push
sbb
addr16
xchg
sub
add
push
add
sbb
sahf
jg
push
push
pusha
stos
mov
sub
pop
or
aas
and
enter
xchg
mov
mov
and
adc
mov
add
aas
addb
in
in
arpl
cmc
add
and
push
mov
cmp
lret
nop
push
add
jno
mov
lea
roll
addl
pop
add
fbstp
andnps
pusha
flds
adc
mov
mov
inc
pop
imul
dec
and
out
int
sub
push
test
xchg
xchg
and
add
inc
and
sub
xor
ds
add
jg
mov
push
or
lahf
mov
repnz
xor
mov
das
adc
add
nop
xchg
cmp
push
or
popf
push
add
test
cmp
sub
add
out
arpl
add
xchg
dec
mov
inc
hlt
xor
pop
bound
and
test
fidivs
enter
xor
call
mov
add
mov
add
stos
inc
imul
dec
ja
add
cmpsl
enter
cld
hlt
add
mov
mov
sub
stos
fwait
ja
mov
push
in
add
adc
jae
jl
in
pop
xor
lret
add
jns
imul
xchg
pop
add
mov
dec
add
testb
out
pusha
sbb
dec
stos
sarb
xor
test
and
pop
jo
dec
cmp
test
pop
ret
add
mov
or
add
fcompl
sub
sti
jmp
mov
lret
int3
daa
mov
push
xchg
mov
jge
ror
out
ret
jae
add
dec
add
lds
add
pop
nop
push
enter
inc
cmp
push
sub
xchg
in
leave
js
nop
push
add
mov
push
enter
je
xorb
dec
xorb
ja
in
xor
dec
push
dec
callw
nop
xor
incl
iret
inc
or
or
cmp
push
lcall
and
incl
clc
jne
inc
addr16
jg
js
jge
cwtl
loop
pop
inc
jmp
and
clc
insb
inc
mov
push
imul
pop
mov
and
mov
bnd
or
cmp
adc
mov
or
notb
sbb
aas
lods
adc
cmpb
lahf
arpl
fcmove
mov
rolb
ss
add
cmp
addr16
jp
nop
les
sub
jb
bound
xor
or
inc
addr16
mov
aaa
push
adc
movsl
add
push
and
add
push
xor
mov
mov
push
leave
clc
push
roll
mov
repnz
xchg
cmpsl
not
ds
icebp
and
lea
add
push
mov
mov
in
jnp
add
inc
adc
lds
inc
movsl
adc
test
inc
rcl
repnz
in
lcall
cli
cmpb
testb
add
jp
cmp
faddl
ret
fldcw
pop
adcl
jmp
mov
mov
popa
pop
frstor
fcmovne
test
hlt
loope
pop
xlat
inc
fcompl
push
jle
add
push
fimuls
lahf
or
inc
xor
jno
pushf
dec
cmp
test
cmp
ja
outsl
cmp
push
clc
push
fwait
and
jle
inc
call
cmp
movsl
push
addl
nop
xor
add
or
inc
dec
mov
push
pushf
push
cld
rcrb
jmp
or
call
or
arpl
rcll
xchg
cmp
and
or
cmp
rcrl
add
lcall
mov
scas
dec
cmp
subb
lods
xchg
push
push
add
ficoml
push
cmpsb
fstps
add
scas
push
jns
add
push
cwtl
leave
cld
dec
inc
or
in
jle
lock
sub
iret
fstl
push
lret
mov
mov
or
pop
mov
push
jg
jle
xor
ss
js
mov
mov
jno
testb
movsl
addr16
pop
fs
add
sahf
sarl
enter
sub
test
xor
addr16
jb
pop
push
cltd
mov
nop
movsl
cmpsl
mov
push
fdivrp
pop
loope
add
push
push
int3
lcall
pop
ljmp
add
jecxz
stc
jne
ja
sbb
cmp
jno
les
das
popf
test
loope
mov
shlb
sbb
sti
xchg
imul
add
inc
push
and
xor
pop
bound
inc
and
dec
int3
stc
add
jbe
mov
add
or
inc
cmp
ljmp
ja
add
daa
sarl
sbb
inc
and
std
stos
inc
adc
mov
pop
add
mov
add
mov
mov
adc
add
cmp
mov
jmp
rcrb
mov
xor
nop
or
aas
fnsave
into
add
push
jmp
lret
ja
inc
ja
mov
push
sub
js
add
fs
adc
pop
cld
je
add
xchg
repnz
aaa
cmpb
or
push
sub
out
idiv
add
adc
gs
adc
nop
cmpsb
dec
inc
aam
xor
mov
sub
pop
fxch
add
loope
hlt
push
sbb
push
cmp
inc
mov
or
hlt
pushf
add
cli
ret
adc
add
xlat
imul
in
pop
sbb
loopne
insl
mov
add
jne
pop
mov
addr16
fadds
cmp
dec
add
xchg
mov
les
jmp
mov
repz
or
in
stos
sbb
add
sti
mov
rolb
lods
cmpl
ljmp
cmp
adc
xor
mov
xor
add
xchg
add
stc
mov
sahf
aas
rolb
xor
lahf
sar
jo
add
mov
imul
sbb
mov
insl
mov
int
cmpsl
add
dec
and
push
push
shrl
pop
data16
loopne
xchg
xor
fidivrs
out
iret
dec
add
and
xchg
push
push
ret
mov
or
stos
fnop
int3
mov
cli
lcall
fwait
enter
add
mov
jle
dec
push
add
add
nop
add
cmp
and
mov
sbb
mov
fmuls
add
jne
or
cmpsb
dec
in
add
xor
jo
add
les
stos
inc
push
scas
push
nop
aas
rcl
je
or
lcall
add
mov
add
inc
rcll
movq
sub
imul
mul
rcll
xchg
add
fisttpll
add
scas
jmp
cli
sarl
mov
in
loop
add
cmp
mov
out
add
xchg
push
push
out
add
xor
out
popf
std
andb
call
cmp
mov
add
jbe
das
ljmp
adc
mov
repnz
clc
dec
add
in
stos
inc
lock
in
cmp
jge
mov
jbe
mov
adc
pop
mov
pop
loop
and
cmp
add
xchg
add
pop
xchg
loop
add
or
loopne
fwait
mov
hlt
add
sub
sbb
pop
add
xor
add
sbb
adc
fdivrl
lea
and
add
cmpsb
pop
iret
mov
and
js
stos
mov
push
cld
pop
pop
inc
pop
icebp
insl
lock
or
ljmp
or
sbb
fisubl
outsl
adc
pop
lods
cmc
popa
inc
and
ret
sbb
std
incl
add
outsl
popf
daa
inc
in
jge
and
fildl
jp
cmp
jns
repnz
jo
cmp
repz
xor
pop
sub
sbbb
loopne
push
xorb
jno
xchg
adc
cmp
gs
sbb
out
orb
push
dec
adc
ljmp
aam
and
rolb
mov
inc
ficompl
pop
add
fistpll
jecxz
dec
add
je
xor
xor
lret
imul
mov
xchg
push
rcll
stos
mov
scas
packssdw
xor
das
clc
cwtl
in
cmp
dec
sub
pushf
test
jl
and
adc
loopne
dec
daa
out
ret
addr16
adc
mov
or
clc
dec
jl
imulb
popa
stos
push
mov
lds
pop
xor
cmovb
add
inc
daa
ja
rclb
mov
je
lcall
shlb
mov
sub
cmp
add
pop
lret
out
negl
clc
xor
sub
cmp
lsl
add
jg
icebp
jae
add
adc
dec
add
ljmp
push
sub
push
jmp
adcl
mov
pop
add
outsb
add
jg
cmp
mov
arpl
in
nop
jno
clc
cli
add
sub
cwtl
add
es
and
mov
andb
add
jmp
pop
xchg
pop
test
or
sti
dec
lahf
pop
cli
arpl
pop
stc
out
sub
inc
jecxz
repnz
shl
scas
enter
add
jb
enter
mov
hlt
daa
push
test
rorb
mov
roll
rorb
dec
pop
fldt
xor
int
andl
adc
mov
fldl
ss
xor
add
and
add
mov
jle
sbb
enter
out
insl
stc
movsl
inc
cmp
or
and
jmp
and
xor
add
popa
push
add
mov
daa
sub
rclb
pushf
add
and
add
scas
in
sub
negb
jl
adc
cwtl
and
js
stos
add
cmp
je
mov
add
adc
inc
cltd
add
and
aas
ret
sub
fbstp
jl
ret
mov
lret
lret
dec
push
or
clc
je
rcrb
push
sbb
sub
mov
loopne
filds
xor
ret
inc
test
mov
xor
jne
jmp
call
mov
rclb
fiaddl
mov
and
cld
test
add
jle
scas
adc
mov
hlt
jle
jb
mov
mull
xor
sbb
incl
push
fdivs
ss
sbb
int3
aam
add
adc
xchg
in
movsl
jns
sub
and
into
mov
out
ret
xchg
adc
xchg
add
movd
mov
test
xor
addl
dec
cmpsl
mov
add
add
add
bound
je
add
sub
jl
xchg
and
jbe
rolb
fistps
pop
sbb
jmp
popf
clc
out
ret
push
push
add
std
mov
sbb
add
pop
pop
add
inc
fwait
into
pop
adc
inc
adc
loop
add
in
jae
or
and
dec
mov
aaa
add
push
push
dec
pop
call
add
cmp
into
add
and
add
dec
xor
or
xor
sbb
add
sti
cltd
lret
dec
add
inc
mov
dec
je
xor
add
das
in
sub
add
jnp
sub
hlt
ret
rorb
cs
and
test
fists
sub
nop
sub
add
jmp
sbb
sub
push
adc
mov
jge
roll
addr16
pop
rcrb
add
clc
stos
popf
mov
adc
pop
jecxz
stos
fdivr
mov
mov
je
push
add
mov
mov
add
lock
testl
cltd
into
cmp
add
or
mov
int3
call
call
leave
sti
or
add
mov
pop
pusha
cwtl
popa
adc
push
outsb
sub
cmp
ss
arpl
jne
ret
jae
fnstenv
out
and
mov
xchg
popf
popa
lock
push
push
add
pop
sbbb
or
ss
fs
idivl
iret
add
sbb
verr
cmp
and
sub
push
lret
mov
mov
sbb
scas
pusha
cs
and
rcrb
inc
out
add
inc
pop
int
cld
popf
lods
dec
outsl
adcb
es
add
cmc
add
daa
mov
pop
mov
add
jno
fisttpll
loop
popa
testb
jnp
pop
push
add
jle
out
call
jnp
sub
stos
andb
ret
xor
sahf
mov
cmpsb
jne
or
add
sub
ret
js
int3
push
psllq
add
jnp
lds
adc
ret
pop
dec
lcall
mov
sahf
rcrb
imul
pop
repz
out
jmp
add
iret
inc
daa
jns
add
addr16
mov
and
add
mov
xchg
pop
sub
shrl
sbbb
push
sbb
jbe
add
mov
xchg
push
add
jle
incb
insb
in
loope
cmpb
sub
xchg
lds
add
xor
cmp
or
sbb
dec
sub
cmp
stos
aam
out
add
add
js
or
push
lea
test
incb
add
xlat
mov
sbb
inc
adc
xchg
and
push
pusha
in
jb
jg
add
sub
and
in
aas
mov
jg
mov
ds
xchg
mov
xchg
pop
add
lret
inc
andb
xor
icebp
xchg
jle
inc
add
mov
mov
mov
add
addr16
add
or
mov
repz
and
xchg
xchg
pop
add
xchg
mov
inc
push
add
jnp
sub
adc
pop
mov
jecxz
pop
inc
xor
lcall
mov
xor
dec
or
add
xchg
add
andl
and
fwait
jg
xorb
push
addr16
xor
jbe
repnz
icebp
inc
jmp
push
ja
lods
add
shlb
add
adc
cli
fsubrl
xor
mov
fwait
jp
sete
dec
and
cli
out
neg
add
or
jmp
sub
stos
push
add
stc
ljmp
sbb
rolb
mov
sbb
jbe
les
imul
neg
adc
mov
loope
sub
cmp
add
in
xor
insl
loopne
add
adc
xlat
add
adc
test
mov
int
mov
adc
icebp
xchg
lock
in
jbe
lret
add
addr16
cmc
mov
xchg
mov
enter
pop
add
mov
loopne
icebp
pop
lock
lea
dec
lds
xor
in
cmpb
jns
add
mov
xor
sub
add
sub
xchg
cmpsb
test
imul
pop
jl
sbb
cmpsl
mov
add
test
cs
repz
xchg
cli
fstps
cmp
pusha
fdivrs
push
outsb
lret
add
sbb
xor
adc
ja
fst
pop
add
mov
pusha
repz
cmp
add
add
ljmp
cld
dec
rdmsr
add
fstps
cli
adc
mov
rcr
mov
fistpl
jp
js
push
pop
push
cmp
imul
mov
scas
into
stc
bnd
push
pop
jp
jbe
cmp
pop
out
push
repnz
clc
addl
mov
mov
add
lret
in
sbb
lret
dec
or
add
loope
add
mov
int
xchg
shll
add
aad
dec
adc
mov
cmp
icebp
push
pop
jecxz
pop
xlat
fadds
aam
shld
adc
push
add
cmpsb
mov
in
mov
add
xchg
or
cmpb
jp
fsub
xchg
lock
cmp
add
in
repnz
imull
arpl
jb
add
aas
pusha
push
xlat
in
add
push
out
jo
fcmovnbe
add
cwtl
mov
add
add
sbb
sahf
jne
in
add
aad
cwtl
jnp
mov
jg
clc
incb
jb
sti
xor
mov
popa
add
jae
cmc
lods
add
mov
daa
mov
test
aad
jno
adc
data16
cmpsl
dec
mov
push
lret
lods
add
fistpll
inc
movsl
xor
cmp
or
sar
mov
cmp
cwtl
es
clc
add
inc
out
subb
push
mov
mov
cld
test
bound
jecxz
lock
add
pop
xor
in
rcrb
mov
jbe
add
and
sub
lahf
daa
imul
loop
popf
adc
cmp
cmpl
shrb
add
sarb
add
fstpt
add
data16
cwtl
cmp
loope
adc
sahf
jmp
or
add
push
subl
outsb
lret
stos
xchg
add
hlt
lods
cli
cld
rolb
xchg
jns
scas
fsubrl
add
mov
ds
addl
xor
push
inc
push
arpl
xor
sbb
jmp
pop
cmp
lds
mov
pop
fs
cmp
adc
pop
add
jnp
add
cmpsb
add
out
ss
add
movb
ljmp
fists
or
pusha
adc
and
mov
push
pop
add
or
mov
das
mov
add
fidivl
jae
or
pop
inc
add
xor
xchg
insl
mov
push
repnz
cmpsl
cmpl
mov
int3
pop
cli
or
ljmpw
mov
lcall
cmc
dec
mov
add
and
std
rcrl
push
or
jns
lods
jne
add
sub
aam
add
shl
push
add
pop
jmp
sbb
and
test
nop
inc
lock
ret
out
addb
inc
call
pop
cmp
adc
add
stos
jns
add
test
push
add
add
pop
lea
js
lock
or
sub
dec
inc
pop
pop
push
xor
daa
add
sbb
loop
ds
std
add
gs
clc
add
js
push
sti
mov
cli
enter
jle
and
adc
xchg
xchg
hlt
cwtl
mov
add
pushw
xor
mov
daa
add
test
in
punpcklbw
dec
outsl
add
pop
xchg
shl
jecxz
push
leave
mov
data16
faddl
shufps
mov
rolb
mov
aaa
pop
adc
xor
jmp
cmp
xchg
loope
jp
xchg
testb
xor
in
iret
cmp
fisubs
adc
or
adc
incl
in
stc
inc
xor
push
pusha
jns
mov
or
cwtl
mov
call
cmpsl
push
mov
adc
xor
sub
paddq
mov
fnstsw
add
orl
js
cmp
mov
std
icebp
movsw
loope
add
add
push
fld
mov
fimull
out
fmul
add
mov
inc
repz
out
jmp
les
das
cld
clc
sbb
popl
fdivl
mov
fwait
scas
incl
or
shrl
xor
rclb
cmp
js
sti
cmp
in
add
add
jge
in
push
inc
xchg
mov
xor
out
sub
or
pop
cmp
inc
mov
adc
loope
xor
rclb
imul
cwtl
push
adc
add
cmp
mov
push
push
and
and
and
enter
aas
addl
outsb
subl
mov
or
mov
push
std
out
lds
enter
sub
mov
enter
int
fsts
mov
sbb
mov
pop
inc
adc
ljmp
push
push
jbe
add
mov
es
sbb
ja
xor
pushf
mov
mov
cmp
mov
add
mov
mov
stc
hlt
push
test
stos
ret
jecxz
adc
adcl
roll
lods
ret
aas
scas
xorb
filds
add
into
ret
cmpb
loopne
add
outsb
sbb
add
insl
sub
aad
xor
pop
dec
cmp
rcrl
add
sbb
mov
jb
aad
jecxz
jmp
aam
add
sub
mov
out
and
ja
pop
xchg
add
bound
adc
jno
shr
cmp
stc
add
inc
jl
imul
sti
add
enter
cwtl
mov
inc
xor
shl
inc
lods
add
sub
and
imul
std
add
push
out
add
and
scas
mulb
cmp
in
cli
incl
in
lock
adcb
std
addr16
push
push
fcoml
mov
pop
fidivs
push
test
fcoms
add
cmp
std
test
out
pop
lcall
cmp
roll
out
aaa
fcompl
mov
shll
mov
fmuls
pop
xchg
cld
scas
leave
dec
cs
js
test
sub
pop
movsl
cmp
cmp
jne
and
loop,pn
or
out
add
push
jo
add
and
iret
call
push
push
cmc
mov
add
adc
int3
jge
inc
in
fwait
cmp
in
adc
lods
pop
push
add
clc
dec
add
mov
mov
in
cmp
jne
cmpb
adc
push
mov
stos
dec
push
lock
mov
xor
mov
scas
xchg
push
inc
or
lock
dec
cmp
xor
in
loop
cmp
movsl
xor
in
mov
in
sbb
or
fcoml
jnp
or
in
and
inc
or
in
vmovaps
xor
pop
adc
loop
adc
adc
fcompl
mov
sbb
and
jno
push
and
sbb
aam
sarb
inc
test
and
rclb
adc
loop
adc
and
int3
pop
inc
enter
sub
enter
cmp
sub
les
push
mov
add
test
fxch
mov
dec
inc
or
mov
push
jmp
push
lods
dec
hlt
mov
push
dec
and
jo
imul
pushf
fmull
mov
or
jg
jl
pop
dec
fdivrs
inc
dec
push
add
dec
add
dec
rcrl
mov
or
adc
inc
mov
cmp
adc
pop
or
cmp
adc
push
pop
js
inc
adc
cli
adc
dec
jl
sahf
mov
xchg
mov
xchg
movsl
sub
sbb
pushf
fiadds
popa
push
cmp
test
add
cmp
nop
mov
jp
mov
inc
and
inc
cmp
loop
push
sbb
sbb
add
push
dec
mov
pop
les
jecxz
rcl
xchg
add
je
rolb
jne
push
movsl
and
sub
pop
jne
mov
add
mov
adc
mov
and
push
ljmp
sbb
xor
add
mov
xchg
cmp
hlt
rolb
imul
rolb
jne
gs
inc
sub
mov
sbb
pop
pop
test
or
xor
int3
add
or
adc
mov
aam
subps
imul
pop
push
out
icebp
fidivrl
add
xchg
pop
pop
aad
fwait
mov
add
incl
rol
or
or
je
jl
lock
mov
aad
mov
pushl
ret
in
arpl
faddl
daa
push
mov
mov
jo
lock
ficoms
mov
dec
add
sub
jnp
adcb
imul
jo
out
roll
shll
sub
adc
ja
lret
scas
add
das
loopne
xchg
jg
rolb
test
sub
or
loope
inc
push
les
mulb
sahf
clc
mov
add
or
xlat
repz
aad
fildll
popa
pop
bound
add
in
inc
jne
pushf
mov
call
es
rcrl
imul
lcall
dec
lock
and
fidivs
lahf
mov
mov
cmp
hlt
xor
sti
and
adc
rorb
add
aas
dec
push
fsubrl
cli
dec
popa
daa
add
xchg
bound
add
push
mov
push
add
push
adc
loope
adc
scas
xor
test
ret
push
sbb
cmp
jno
add
sarb
cmp
inc
push
sti
scas
mov
in
jp
add
mov
and
ret
or
leave
sbb
pusha
rol
sub
pop
out
mov
jle
es
mov
shlb
add
out
ficompl
or
add
iret
push
aam
popa
in
push
mov
add
fsubl
jno
add
adcl
and
add
mov
js
xor
std
mov
jnp
das
mov
push
mov
add
mov
jmp
lods
lret
mov
xor
xor
fwait
stos
adc
pop
and
mov
shlb
movq
add
je
xchg
sbb
cmp
or
cmpsb
sahf
adc
bound
loopne,pn
addl
jno
fs
mov
out
sub
push
les
fcmovnbe
push
scas
sub
cltd
and
dec
fsubrl
sub
or
xchg
and
in
sub
or
and
inc
test
add
mov
add
rolb
rcl
nop
test
pop
inc
dec
sbb
sub
lcall
stos
fistps
add
and
or
and
ror
sbb
dec
xor
dec
xchg
cwtl
xor
mov
les
jl
add
popl
movsb
lret
or
adc
sbb
or
orl
or
pop
int3
or
daa
les
add
push
je
adc
imul
push
hlt
sbb
pushf
mov
or
arpl
insb
inc
loope
arpl
jecxz
jno
and
int3
adc
clc
inc
in
sub
mov
mov
mov
mov
xor
enter
mov
cld
lock
shrb
push
mov
xchg
and
hlt
mov
jb
sbb
orl
cmp
loopne
rolb
outsl
jb
dec
dec
stos
dec
sahf
adc
and
sub
adc
sbb
es
cld
mov
imul
mov
ss
push
cmp
jae
aam
scas
jb
mov
or
aaa
mov
hlt
lock
imul
test
loopne
call
ret
lahf
fldenv
sbbl
call
jno
inc
cmpsb
adc
mov
pop
out
nop
mov
sbb
addb
mov
and
cltd
ret
rorb
mov
push
cmp
sbb
inc
add
or
cmpb
shrl
stc
inc
gs
sub
loope
lahf
leave
aas
loopne
out
add
push
xlat
add
and
adc
aam
add
adc
adc
cmp
add
test
daa
xchg
cmc
sub
and
inc
int
shl
xor
in
mov
and
sbbl
push
adc
push
arpl
loop
loopne
xor
dec
out
cmp
je
adc
and
xchg
roll
sub
mov
lods
mov
mov
lea
push
repz
sbb
shr
jg
and
push
and
add
sub
in
pop
inc
sub
sub
popf
ja
shr
outsb
mov
fists
and
or
push
int
jb
or
mov
or
lea
add
and
mov
mov
add
mov
addr16
sbb
adc
add
add
out
adc
bnd
adc
inc
or
sub
mov
xchg
sbb
lods
lock
push
push
push
lcall
je
ret
test
iret
and
test
dec
scas
adc
adc
cmp
push
stc
cs
int3
and
adc
push
call
ret
loope
sub
push
push
sbb
sub
mov
or
les
cmp
or
push
push
xchg
push
cmp
cmp
dec
and
daa
pop
xor
fdivp
call
stos
cmp
jge
orb
mov
dec
or
in
xor
in
mov
inc
jnp
sub
push
sbb
in
add
sub
jns
add
int
lock
mov
xchg
cltd
add
scas
mov
and
in
mov
xchg
dec
jnp
add
dec
xchg
push
scas
fsubs
add
xlat
andb
xorb
fiaddl
push
out
btrl
enter
jp
pop
adc
aas
jge
add
imull
daa
cltd
gs
mov
mov
add
cmp
ftst
and
sbb
loop
gs
xor
cld
and
add
xchg
jno
sub
add
cmpsl
std
movsb
daa
sbb
push
es
mov
mov
push
jbe
mov
pop
cld
add
sub
xor
add
mov
lret
rclb
add
lahf
imul
jb
js
add
sbb
dec
divl
mov
jle
cmc
mov
add
sbb
cltd
data16
es
add
mov
adc
add
mov
push
in
xchg
outsl
out
lcall
mov
mov
adc
inc
inc
addb
aad
in
xchg
lock
lock
add
icebp
cld
and
pop
popa
mov
lret
cmpsl
sbb
mov
stc
mov
mov
sti
imul
add
sub
mov
push
addr16
pop
mov
mov
fsubrs
jo
adc
outsb
cwtl
add
pop
pop
inc
cmp
inc
cld
push
xchg
pop
aam
cmp
pusha
pop
pop
scas
pusha
mov
fldl
adcl
in
add
sbb
or
cs
cmc
xchg
xor
out
mov
sbb
out
andb
icebp
cmp
nop
es
jg
jmp
add
mov
dec
push
add
lea
nop
sbb
ljmp
and
stos
pushf
add
inc
mov
mov
das
decb
fidivs
cmp
xor
jae
loopne
pop
aaa
xchg
add
jo
adc
push
add
xorb
and
repz
aas
or
cmpb
mov
sub
jo
in
push
fdivrl
mov
out
dec
nop
ja
mov
fbstp
jns
add
popa
jbe
mov
insb
cltd
pop
movsl
inc
pop
stc
adc
clc
fnstsw
sbb
or
add
ss
dec
aaa
insl
jbe
shlb
cli
jae
lods
add
aas
fnstcw
add
lods
popa
mov
cltd
aam
in
imul
mov
ftst
sbb
cmp
loope
stos
jecxz
fwait
jo
or
adc
fstps
pop
faddl
xchg
xor
adc
in
lods
add
or
loopne
ss
pop
fsubrs
cmp
sar
inc
add
int
ja
inc
mov
enter
inc
mov
ds
mov
lret
jmp
sbb
mov
sahf
inc
insl
dec
pop
loope
jnp
jle
jb
mov
repz
dec
add
movsb
mov
dec
sbb
xor
popa
pusha
mov
add
or
add
add
clc
cmp
in
add
cmp
pop
aaa
dec
add
cmpsb
outsb
jno
not
push
test
loopne
xchg
dec
fcompl
and
movsb
aad
ljmp
subl
mov
or
mov
jmp
xor
scas
div
imul
push
aad
add
add
or
mov
insl
std
fwait
xchg
rcll
gs
add
nop
jp
xchg
add
fidivl
add
test
inc
mov
push
aas
aad
repz
outsb
mov
add
daa
add
notl
push
sub
push
orb
incl
pop
frstor
cmp
out
mull
cmpb
lahf
lods
cwtl
sbb
dec
mov
or
xchg
ss
sub
clc
sbb
add
push
mov
enter
mov
xchg
add
and
pop
icebp
adc
and
or
push
push
cmc
popa
lods
inc
mov
inc
test
add
out
dec
add
lds
lsl
pop
sub
add
dec
push
mov
add
xchg
xor
pop
add
js
shll
or
mov
cmp
shl
add
xorl
pusha
add
or
data16
fwait
sbb
add
and
jge
add
imul
add
shll
mov
xor
je
out
cli
pop
add
cltd
push
ret
cs
pop
es
add
push
ja
lcall
push
push
add
ljmp
cmp
fists
adc
mov
add
scas
cmp
push
add
inc
adc
popf
add
movsl
push
pop
add
in
xchg
jns
jle
pop
jmp
mov
pop
nop
test
jnp
mov
sub
ss
sbb
daa
pusha
cmpsl
pop
mov
mov
mov
cli
sti
xor
shlb
and
lret
or
or
call
mov
inc
xor
sbb
inc
dec
and
dec
mov
dec
lock
lea
cmpl
jmp
sub
shr
xor
xor
xor
or
mov
inc
sub
in
cmp
sbb
mov
sbb
imul
cmp
fneni(8087
mov
fstpt
xorb
add
fs
push
insb
insl
outsb
outsl
jo
pop
jae
je
jbe
js
jp
sti
push
jecxz
mov
rcll
push
add
push
pop
pop
pop
cmp
sti
jne
adc
fstpt
mov
pushf
push
mov
call
mov
inc
add
inc
inc
mov
ljmp
in
call
sub
lods
loope
cwtl
push
shlb
push
aaa
adc
cmp
cmp
bound
arpl
in
gs
jo
jo
pop
imul
sbb
sbb
sbb
sbb
sbb
sbb
es
sbb
jbe
ja
js
jns
jp
inc
addl
addl
inc
addb
jo
jo
jo
mov
test
adc
movsb
jo
push
jo
xchg
jg
addr16
pop
pop
pop
pop
pop
cmp
test
xor
sbb
jl
stos
xchg
inc
add
or
push
pushf
mov
ret
popf
pop
mov
cli
mov
lret
mov
push
add
inc
push
lahf
sub
push
add
mov
mov
hlt
add
sub
add
push
fs
jno
push
inc
adc
sbb
jae
push
shlb
jns
sbb
mov
movsl
aam
or
mov
rolb
mov
lock
or
incb
dec
ds
jg
outsb
mov
mov
out
add
loop
aas
xchg
add
verr
mov
add
add
mov
pusha
jb
add
xchg
sbb
and
ffree
adcb
adcl
cli
dec
sbb
out
xchg
sub
ret
add
mov
pop
push
enter
arpl
ficomps
mov
enterw
pop
jecxz
cmp
adc
sahf
mov
adc
push
push
mov
std
add
mov
nop
add
push
in
xchg
push
mov
jb
add
cwtl
dec
jnp
xchg
outsb
aam
jg
repz
or
movsb
sbb
add
dec
add
sbb
add
xchg
scas
rclb
cmp
jbe
nop
mov
fwait
pop
cmpsl
cmp
fbld
add
pusha
or
push
test
dec
pop
lods
add
mov
dec
add
in
pusha
and
dec
adc
daa
mulb
dec
cs
pop
dec
mov
fcom
out
pop
sbb
nop
pushf
andb
mov
jle
add
push
cs
mov
orb
jne
fidivrs
pop
pop
cmp
shlb
dec
pop
dec
mov
adc
jo
stos
popa
adc
sbbl
xor
test
rolb
call
and
adc
icebp
mov
pop
jne
shrl
sub
mov
pop
jns
call
push
adcb
jle
sub
out
add
or
popa
mov
rcrb
and
ljmp
add
mov
and
cmp
fwait
add
in
add
mov
mov
cmpsb
bound
add
and
push
mov
mov
in
jb
adc
out
add
jl
jmp
ds
bswap
mov
xorl
fisttps
push
imul
xchg
jns
push
sbb
in
add
xchg
cmp
data16
or
add
push
and
jle
xchg
add
outsb
sub
add
adc
test
fdivr
addl
shll
xor
and
push
add
stos
push
stc
jl
in
add
rcll
dec
jle
insl
daa
sbb
sub
rclb
iret
js
mov
lds
mov
push
dec
or
mov
add
or
cwtl
xchg
insl
loopne
add
inc
pop
adc
inc
xchg
cmp
mov
clc
bound
arpl
iret
aam
mov
sub
mov
push
add
mov
mov
hlt
shr
aaa
add
enter
mov
cwtl
xchg
add
sbb
inc
jns
add
mov
jge
sub
outsl
dec
call
mov
mov
cmp
fwait
mov
add
adc
push
orl
mov
mov
mov
cltd
and
int
insl
sbb
mov
fildl
sbb
push
das
mov
or
add
mov
adc
out
xor
pop
dec
fisubs
inc
and
push
or
insb
add
in
lcall
loopne
add
add
sub
adc
sub
mov
xor
insb
pmulhuw
or
jno
cwtl
adc
mov
test
call
jbe
into
cli
rolb
inc
xor
jnp
jl
mov
push
hlt
add
arpl
jle
xorb
in
jmp
inc
data16
jne
das
stc
mov
mov
addl
stos
mov
mov
mov
sub
ljmp
mov
je
cmpsl
add
and
mov
lods
imul
ss
dec
pop
shrd
or
mov
add
rorl
add
inc
inc
test
repnz
add
in
aad
dec
rorb
out
add
or
sbb
cmp
ss
mov
push
je
ljmp
pushf
call
jmp
jge
ret
add
cmpsb
dec
add
push
and
add
jle
subl
sbb
arpl
or
fwait
add
sub
or
lret
xchg
call
into
int
cwtl
cmovno
add
sarb
dec
add
adc
insb
xor
cli
roll
add
mov
jg
xchg
sbb
inc
adc
jo
add
pop
inc
test
pop
movsl
lret
xor
xor
jnp
pusha
hlt
mov
jecxz
ja
popa
das
daa
ds
mov
sarb
or
shlb
mov
pop
cli
inc
dec
dec
mov
xchg
inc
push
pop
call
faddp
hlt
mov
inc
iret
hlt
pop
cmp
out
mov
stos
mov
dec
nop
mov
dec
sub
inc
ds
cli
imul
jg
sub
incl
fcoms
mov
cmp
cli
sub
fsubl
sbb
dec
mov
daa
push
xchg
out
js
test
fsubr
js
mov
lods
xor
rolb
sahf
pusha
sub
sbb
or
sub
icebp
test
adc
icebp
inc
pop
xchg
add
mov
ljmp
dec
or
pop
test
pusha
mov
add
fimuls
mov
inc
add
xchg
and
jmp
jb
aam
fcompl
sub
test
mov
push
mov
push
lea
imul
push
xchg
pop
add
push
pusha
or
mov
pop
pop
and
fidivrs
std
sbb
or
inc
or
or
xchg
es
adc
xchg
xor
inc
and
mov
fisttpl
inc
or
cmp
or
sub
pop
push
push
in
lods
sahf
popa
mov
ja
inc
cmp
adc
xor
or
or
or
nop
sub
enter
jg
and
or
cwtl
nop
bound
pushf
inc
mov
sub
test
mov
sub
mov
mov
mov
sub
test
mov
xor
std
add
jecxz
sub
inc
sub
jl
mov
shlb
xor
and
test
sub
cmp
enter
sbb
jl
mov
fs
adc
adc
jl
jp
xor
jb
out
inc
adc
lods
xor
and
or
and
in
adc
call
arpl
ror
jae
pop
test
adc
mov
jmp
xchg
push
or
call
mov
orl
js
outsb
jle
int3
or
or
jne
mov
mov
mov
int3
add
rolb
or
dec
jne
add
jecxz
cmp
cmp
ret
push
fs
sbb
xchg
sbb
fwait
mov
ds
insb
xor
jo
sbb
je
sbb
xchg
sbb
and
jge
dec
or
sub
inc
sub
adc
xor
xor
adc
cmp
cwtl
sbb
inc
adc
push
movsb
add
or
or
sub
xchg
out
mov
push
or
and
and
mov
fs
add
inc
and
cmpb
cld
popl
subl
shlb
jnp
inc
inc
dec
cld
sub
and
adc
mov
jecxz
inc
test
push
pop
ret
lret
cmp
push
cmp
nop
dec
or
mov
push
or
cmpl
inc
bound
pop
dec
inc
mov
add
push
les
dec
outsb
and
sub
repz
xor
lret
cmp
popf
dec
fwait
mov
js
fcoms
sub
mov
cmp
and
sti
in
cmp
mov
pop
jecxz
jg
add
mov
jno
inc
ss
dec
add
imul
and
sub
xlat
popf
sub
icebp
cli
add
dec
inc
mov
mov
mov
add
iret
xchg
fdivrp
sbb
xor
and
orl
adc
add
inc
inc
xchg
sub
jmp
pop
adc
leave
xor
xor
cli
sub
cmp
or
scas
int
add
jno
mov
push
movsb
pusha
add
adc
insb
mov
xor
mov
jmp
xchg
add
jns
or
xchg
leave
pop
jmp
or
xchg
add
stc
rol
inc
cmpsb
mov
cmp
add
nop
les
xor
jp
add
jle
inc
and
sub
lods
pusha
leave
sahf
push
mov
or
inc
add
jae
cwtl
rclb
adc
xor
sbb
gs
jbe
aas
cmp
adc
pop
add
cmp
sub
scas
push
add
pop
add
notl
cmpsl
les
sar
xor
mov
add
out
cmp
or
cmp
add
push
call
lods
gs
pop
push
add
scas
arpl
pop
mov
lretw
xchg
push
rorl
add
aam
jmp
mov
icebp
fsqrt
jmpw
xor
mov
dec
inc
mov
and
dec
faddl
clc
divb
inc
add
add
adc
cmp
repz
sbb
iret
push
bound
popf
xchg
fisttps
in
sub
xor
int3
mov
fiaddl
xchg
mov
xchg
cmp
sbb
int
movups
dec
pusha
push
mov
xchg
movsl
leave
dec
sbb
sub
outsb
test
ljmp
roll
lahf
call
add
sub
fbld
inc
in
jge
sub
pop
leave
push
int
out
cmc
jae
mov
add
stc
sbb
pop
adc
cmp
cmpsl
adc
cmp
ret
mov
mov
add
ljmp
add
xchg
str
cmp
push
mov
mov
or
cmpsb
add
repz
jle
sub
xchg
add
dec
sub
shr
adc
jae
push
test
xor
mov
and
add
daa
mov
add
icebp
or
jecxz
adcl
dec
mov
dec
dec
or
in
mov
add
jo
inc
inc
push
testb
repnz
push
xchg
scas
xor
jg
pop
xchg
inc
xor
imul
push
sbb
and
mov
rolb
in
sub
add
xor
daa
mov
mov
mov
scas
out
xor
add
mov
push
scas
sub
mov
push
aam
sbb
adcb
or
adc
lods
fildl
dec
lock
int3
cmp
addb
xor
cmpsb
add
sub
lods
stc
xor
test
bound
mov
push
aam
xchg
int3
inc
jl
inc
pop
xor
cmp
add
mov
sahf
aas
cmpsl
sub
xor
inc
movsb
stc
pushf
fstps
mov
push
scas
icebp
imul
mov
dec
enter
add
lods
leave
add
push
add
sub
mov
inc
mov
in
add
xlat
clc
popa
add
mov
cmpsl
mov
inc
dec
cmp
xor
xchg
or
jbe
cmp
icebp
mov
jae
cmpsl
mov
adcb
lret
addr16
cmp
and
inc
pop
pop
sbbb
add
xchg
sub
add
mov
movzbl
push
stc
add
mov
shlb
das
mov
aad
add
push
sbb
or
gs
sbb
and
xchg
lea
inc
dec
cld
pop
add
xor
inc
mov
sbb
add
aad
gs
lock
ret
adc
nop
stc
dec
mov
cmpl
sub
cmp
loope
jb
add
movl
cmp
xchg
icebp
jno
or
in
or
sbb
ret
aas
add
inc
ja
popf
hlt
or
out
loop
mov
test
js
adc
xchg
inc
mov
bound
jecxz
push
pop
add
loope
add
jp
pop
dec
jl
cmpl
or
add
nop
scas
xor
add
pop
adc
mov
add
or
lock
xor
inc
js
repnz
testl
xchg
mov
add
push
inc
cli
inc
rcrb
add
lahf
and
ja
popl
add
jnp
sbb
cli
push
xor
sti
add
pop
cmp
out
inc
cmc
imul
cmpsl
sub
idivb
jns
add
mov
mov
fs
sub
xor
jae
jno
add
mov
or
mov
add
into
add
lcall
incb
lret
jbe
add
cwtl
scas
fistpll
clc
push
sbbb
shrl
and
push
fnstsw
ret
add
pop
jo
shrb
add
sub
mov
sbb
pop
xchg
loop
inc
jmp
mov
adc
cwtl
out
mov
lds
lahf
aam
hlt
fwait
int3
insl
movsb
cs
and
cmpsl
inc
add
adc
add
pop
test
sub
das
add
icebp
mov
call
cs
add
stos
add
call
out
jae
sbb
add
scas
cwtl
adc
sbbl
fcomi
add
xchg
sbb
or
sbb
mov
pop
cmovae
imul
mov
idivl
push
test
ds
add
mov
test
subb
fbstp
lds
inc
or
add
push
imul
jo
les
stos
je
mov
or
mov
add
inc
dec
data16
push
add
call
and
mov
push
cs
popf
pop
pushf
sbb
clc
fdivrp
add
mov
lcall
xor
or
mov
inc
fbld
repz
cld
sub
push
hlt
mov
sbb
adc
scas
xchg
xor
aaa
sbb
xchg
jle
lret
or
xor
add
mov
dec
les
sub
into
inc
aaa
dec
jns
add
and
out
cmp
outsb
in
fwait
icebp
add
add
mov
stc
aam
out
pop
mov
or
aaa
cmp
shrl
push
orb
arpl
sti
in
push
mov
int3
lods
lcall
mov
mov
dec
mov
add
cli
loope
inc
test
insb
lcall
sti
addr16
cmp
out
divb
inc
xchg
mov
add
and
int3
lcall
fistl
cmpsb
add
fstl
aaa
adc
add
je
pop
ret
sub
cmp
adc
cwtl
inc
xchg
push
pop
shll
pop
clc
test
push
xor
mov
or
push
insb
pop
cmp
call
xchg
jnp
add
xchg
nop
out
jg
jecxz
imul
mov
inc
cld
dec
roll
lds
pusha
add
push
adc
push
rol
in
cltd
xchg
and
sbb
es
sbb
mov
enter
into
lcall
sbb
add
imul
mov
cmp
mov
push
pop
sahf
and
cmp
paddb
and
mov
mov
sub
and
nop
cmpsl
xchg
inc
sahf
popa
xchg
push
add
adc
ds
jnp
lcall
push
mov
cli
pusha
xchg
jae
mov
add
cmp
cmp
mov
xor
pop
xor
add
rorl
jns
xor
popl
mov
daa
jmp
xchg
fsubrl
addr16
jg
jge
add
ficomps
sub
add
mov
loop
jb
xchg
add
mov
push
or
pop
xchg
adc
jecxz
pusha
sub
mov
test
mov
add
add
jg
les
aam
call
xchg
mov
mov
shlb
xchg
xchg
ss
and
andb
mulb
call
add
lea
inc
adc
sbb
push
lods
cmc
jns
add
add
int3
pusha
inc
das
add
or
push
xor
push
movsl
mov
adc
lock
xchg
mov
add
in
sub
adc
jp
jns
cwtl
fimull
xor
in
ss
mov
add
pop
idivb
sbb
in
jae
mov
xor
sbb
sub
mov
add
sub
out
add
mov
xchg
inc
add
out
add
xchg
dec
cmp
adc
mov
dec
cmpl
out
addr16
mov
mov
add
test
fcomi
fs
add
mov
cmc
add
hlt
pop
mov
mov
mov
rolb
mov
pop
cmp
loop
jnp
mov
bound
adc
gs
cmp
xchg
pop
add
sbb
and
pop
test
cmpsb
add
shlb
push
mov
stc
lock
jae
jnp
fldenv
push
repz
nop
mov
push
or
and
xor
das
sub
sbb
shlb
inc
in
adc
out
cwtl
and
movsb
call
hlt
rorb
cmp
lods
mov
cmpb
enter
sub
bnd
hlt
cmp
testb
ds
add
mov
in
std
call
and
and
xlat
xor
fisubs
pop
sub
lahf
lds
stos
fsubr
add
mov
loopne
repnz
rcrl
imul
and
scas
xor
inc
les
xchg
outsl
addb
out
sbb
add
sub
or
add
mov
fmull
fs
rol
fcmovne
and
lock
imul
xor
sbb
add
mov
add
dec
xchg
jle
loopne
sbb
adc
adc
pop
scas
out
repz
mov
mov
xor
insb
cmp
lods
add
inc
add
pop
dec
mov
repz
lahf
add
cld
add
clc
sahf
pop
xchg
jmp
fadd
or
dec
jge
arpl
das
cmp
por
enter
pavgb
subb
fnstsw
jmp
push
jne
jp
cmc
add
pop
jmp
test
sbb
rcrb
xchg
push
add
aaa
roll
jle
xor
outsb
ja
push
xchg
add
fsts
xor
pushf
jl
lods
add
aad
sarl
mov
push
add
inc
fsubs
jl
stos
cltd
cmpl
je
popa
js
pop
add
movsl
int
das
push
add
in
xchg
enter
push
inc
push
xor
test
mov
fwait
add
arpl
mov
add
gs
jge
pop
cmp
mov
mov
cld
lods
add
jmp
and
cmpsl
pop
sahf
lock
add
loope
sub
push
aas
pop
pop
into
cld
shrl
add
es
add
mov
sti
aaa
call
mov
mov
jmp
iret
add
je
sbb
mov
repnz
xor
mov
xlat
cmpsb
jmp
insl
pop
push
jo
icebp
fmull
inc
add
test
rclb
roll
gs
jge
or
aaa
ja
add
xchg
push
push
imul
xor
testb
adc
mov
push
data16
or
pop
add
nop
inc
add
out
push
shr
push
jne
xor
divl
in
fistl
fistpll
mov
test
dec
pop
mov
lods
repz
push
pusha
sbb
cld
sub
gs
jbe
xor
add
out
dec
push
negl
notb
aaa
push
xchg
fimuls
andb
mov
inc
add
jle
jge
and
call
rcll
cmp
push
out
add
mov
daa
sub
cltd
faddl
cmc
add
js
mov
rcr
or
inc
jno
mov
lea
jl
insl
adc
xchg
aaa
add
add
hlt
dec
cwtl
add
jns
inc
mov
sub
mov
and
cs
int
inc
cmpsl
shll
mov
add
out
enter
pop
adc
repz
dec
add
push
jp
add
xor
shl
inc
xor
stc
test
xlat
xchg
add
add
arpl
mov
insl
adc
xchg
jp
jg
int3
cmp
mov
bound
movb
pop
andb
mov
ds
mov
rcrl
xor
pop
inc
pop
add
out
mov
jo
pop
cmp
sub
add
push
cmpsl
js
add
push
rclb
icebp
pushf
lcall
leave
pop
popa
movsl
add
mov
cmp
in
push
lock
aas
xlat
popf
loop,pt
mov
clc
rep
enter
push
inc
mov
sar
push
lods
test
add
arpl
loope
and
fistl
das
mov
cmp
in
mov
data16
fs
jge
cmpsb
mov
test
js
repnz
jne
mov
xor
xor
popf
add
sbb
push
loope
inc
add
add
std
aas
sub
add
sbb
pusha
cmc
cmp
xor
lock
incb
sub
shlb
add
outsb
sbb
add
and
add
outsl
jle
add
adc
mov
enter
shl
or
mov
dec
jp
add
in
add
xchg
icebp
daa
xchg
xor
inc
sub
out
add
outsl
cmp
jge
rcrb
xor
mov
xor
xorl
mov
frstor
repnz
mov
lods
mov
cmp
add
xor
add
popa
inc
fildl
es
stos
mov
imul
lcall
mov
mov
jle
pop
negl
bts
shll
add
pop
iret
jmp
lock
nop
lret
pop
jecxz
daa
add
cltd
repnz
pop
test
add
push
arpl
or
xor
add
dec
add
lea
or
jle
cmpsl
data16
nop
push
pop
test
int
imul
test
stc
nop
dec
mov
mov
arpl
xor
add
sbbl
adc
sbb
inc
sub
add
add
mov
inc
dec
add
xlat
adc
mov
jge
lods
xchg
push
cmc
sbb
or
push
loopne
or
dec
and
dec
movsb
cmp
int3
in
mov
cld
add
pop
fstpt
sub
push
ret
and
cld
pop
popa
or
add
jp
pop
mov
push
outsl
fists
jnp
pop
cmpsb
cmp
push
test
je
ljmp
or
lds
ret
inc
push
subb
hlt
bts
leave
mov
xchg
inc
cs
and
in
cmp
push
pop
aam
loopne
lcall
int3
add
and
pop
test
inc
pop
add
shr
mov
or
pop
adc
fsubrs
test
cmp
cli
add
jns
scas
add
out
daa
ret
pop
add
insb
ficompl
add
mov
mov
insb
add
pushf
das
pop
cmp
mov
adc
add
mov
pop
mov
sbb
fimuls
rcrb
sbb
cmp
mov
dec
sbb
in
daa
cmp
dec
jo
mov
add
int
add
push
rcrb
clc
or
push
das
xchg
lods
test
adc
add
or
sub
xor
mov
adc
hlt
jno
add
loop
push
xor
cmp
push
cmpl
rorb
pusha
or
mov
xor
xor
daa
mov
leave
sbb
jo
movsb
push
mov
sbb
xor
inc
add
rorb
lret
mov
sbb
push
push
pop
jbe
pop
xchg
xchg
sbb
add
jmp
subps
addb
mov
and
add
int
cwtl
aad
mov
pop
dec
loopne
push
fcom
push
lock
xor
add
sub
and
sub
add
cld
lods
les
rcrb
jo
xlat
or
pop
add
pop
sbbb
je
add
add
test
fisttps
cmp
cmc
imul
lret
mov
xor
adc
fistpll
scas
hlt
add
ret
sbbb
rclb
sbb
mov
xchg
adc
mov
push
pop
pop
cmp
outsb
nop
mov
pop
js
add
xchg
and
pop
lock
add
dec
and
bound
movsl
daa
sbb
adc
movb
sbb
loopne
shl
sub
xor
int3
dec
push
addb
or
mov
in
add
loopne
jb
fs
jae
mov
add
inc
loope
add
outsl
leave
xlat
mov
jge
insl
shlb
sub
sbb
jne
dec
xor
cmp
mov
in
cli
add
add
out
aas
sbb
movb
mov
add
adc
xchg
jae
mov
ja
js
xor
mov
dec
or
sbb
jbe
mov
mov
add
add
pop
pop
test
mov
scas
and
dec
cmp
sub
xor
cmp
mov
pop
popa
xchg
ret
stos
daa
jo
fimuls
fbld
leave
add
cwtl
pop
mov
lea
cmc
shlb
add
rcll
fwait
jne
cs
test
sbb
jge
imul
int3
sub
pop
pop
clc
cmp
mov
push
inc
rcrb
sub
pop
jl
push
fcomps
lahf
xchg
or
jmp
in
in
leave
push
dec
push
push
push
test
inc
pop
lret
repz
das
mov
imul
mov
lcall
scas
cmpsb
test
push
das
mov
push
dec
mov
hlt
seto
xor
adcb
pop
cmp
sbb
loop
sarb
ret
sbb
scas
ja
out
adc
leave
inc
push
pop
pusha
jmp
rorl
adc
xchg
pop
fcoml
add
add
cmp
sbb
pop
jmp
std
addr16
sub
icebp
dec
imul
xchg
push
add
pop
push
les
add
adc
jp
add
jnp
dec
add
xchg
das
or
xor
cmp
aas
sbb
cmp
sbbb
pop
insb
pop
mov
add
cmpsb
movsb
jp
push
add
and
mov
add
dec
sub
jp
repz
fcmovne
fidivs
shr
addb
cmp
adc
mov
pop
bound
sub
mov
jmp
mov
fwait
cmp
in
push
and
add
mov
out
rorb
in
fs
push
cld
mov
mov
lcall
mov
mov
rcrl
sbb
mov
lret
add
repz
jbe
aad
add
adcl
lret
insb
pop
or
pop
pusha
xchg
je
orps
or
jne
lret
lds
push
and
loop
push
add
icebp
fisttpl
mov
adc
cmpsl
cltd
add
in
sub
loop
data16
jbe
xor
sbb
mov
loopne
pop
ret
js
and
mov
mov
and
sarl
push
cmpsb
clc
add
xorl
out
pop
aad
iret
adc
fld
pusha
xchg
out
dec
add
sbb
out
sub
and
or
jg
mov
mov
sub
xchg
cld
shll
or
inc
jle
jl
hlt
int
sub
cmc
negl
addb
pop
movsb
push
and
adc
add
cmpsl
pop
decb
jbe
cmp
pop
and
rcrb
test
call
sti
inc
push
mov
jne
add
ss
jge
test
dec
and
xor
mov
mov
les
test
add
aas
pop
cmp
rcr
jo
inc
add
mov
dec
gs
add
xor
sbb
dec
lods
repnz
dec
gs
and
and
pop
shlb
sbb
sbb
adc
dec
das
orb
pop
aas
jmp
xchg
movsl
cmp
and
ss
sub
xchg
leave
jae
add
ficompl
mov
xchg
add
popa
adc
fistpll
push
xchg
add
adc
mov
inc
pop
cld
push
sbb
iret
add
stos
scas
insl
add
add
sbb
pop
mov
xor
and
xchg
lods
mov
adc
and
inc
add
push
xchg
sub
aad
jb
mov
pop
pop
gs
sbb
aaa
push
orl
adc
jp
dec
es
jbe
and
sbb
add
pop
jmp
test
and
je
cmpsl
into
add
sbb
xor
pop
and
test
pop
sub
add
sub
jecxz
or
ja
add
cld
ret
mov
in
adc
scas
xchg
mov
jns
inc
shrd
push
imul
jnp
adc
scas
pop
jmp
xor
xchg
pop
sub
sbb
add
jbe
mov
pop
out
hlt
out
mov
dec
add
push
test
mov
out
sub
shr
mov
stos
mov
aaa
sub
sti
cmp
pop
sahf
sbb
inc
jecxz
cmp
sbb
add
or
ja
pop
xchg
add
mull
ret
popf
jns
jnp
mov
add
push
push
mov
mov
or
arpl
cmpsl
popa
sahf
fwait
pop
sub
insb
push
xchg
stos
inc
xchg
in
add
mov
in
add
mov
cmp
jmp
adc
pop
sbb
adc
adc
xchg
inc
cwtl
xchg
xchg
mov
dec
or
cmp
pop
pushf
jns
inc
adc
mov
popl
cmp
sbb
popa
mov
movsl
jb
jns
and
or
push
or
sub
mov
add
mov
adc
jb
jg
dec
push
icebp
or
in
out
std
sub
jno
mov
shl
punpckhbw
jns
jns
push
push
mov
inc
inc
lods
out
les
adc
fwait
cmp
mov
nop
or
xchg
rcll
shll
add
mov
scas
sbb
jl
rolb
nop
add
or
add
mov
movb
nop
rcl
in
aaa
rolb
pop
daa
sbb
test
into
pusha
imul
pop
pop
int3
fsubl
sbb
jp
orl
fnstenv
add
cmp
jg
add
loopne
out
add
xchg
adc
ficoml
femms
xor
stc
sbbb
mov
push
sbb
sbbb
stc
movsb
xor
add
ljmp
pusha
fisubrl
jp
add
sub
add
sbbb
pop
and
cmp
mov
int
bnd
xor
aas
xor
cmp
cmp
adc
int
jns
add
dec
lret
cltd
subps
add
or
sub
pop
shlb
iret
lret
or
and
jmp
cmp
incl
add
nop
aas
add
imul
sub
pop
xchg
mov
sbb
jg
lret
les
sub
add
push
adc
cmp
add
jmp
pop
push
js
add
pushf
lcall
mov
mov
add
push
les
xor
push
xchg
cmp
adc
inc
and
aaa
addb
jne
lret
jg
pop
adc
call
arpl
lcall
xchg
jne
stos
pop
mov
pop
mov
jecxz
test
jg
add
push
jbe
jb
pop
inc
add
inc
pushf
dec
scas
push
stc
scas
jp
add
rolb
add
xchg
pop
add
push
sahf
pop
and
add
mov
mov
test
enter
lods
add
xbegin
fs
pop
jae
js
add
fwait
cwtl
sbb
cmp
dec
add
ja
add
addb
pushf
and
add
mov
daa
mov
sub
push
clc
add
ret
jo
sub
sub
int
paddusw
xchg
add
inc
mov
push
int
or
lret
add
add
imul
push
xchg
leave
scas
repnz
adc
daa
push
bound
add
ja
addb
inc
add
nop
adc
aas
mov
insl
jbe
add
testb
hlt
fs
scas
scas
shlb
inc
cmp
add
xchg
dec
lret
cmpsb
and
or
mov
lods
movlhps
aaa
das
xchg
call
pop
pop
leave
cmc
in
sbb
jno
sub
pop
push
jb
xlat
out
cmpsl
loopne
cld
xchg
or
xor
int
mov
add
pop
sub
pop
aaa
mov
push
push
ficompl
shlb
lds
cli
or
push
or
into
lock
add
das
loope
pop
adc
mov
xor
push
dec
cmpl
ror
xchg
adc
xor
mov
inc
push
dec
adc
lea
js
sbb
lock
stc
adc
or
xchg
mov
aad
pop
xor
mov
divps
jo
mov
nop
popa
imul
xchg
scas
xor
cmp
or
mov
push
pop
scas
addr16
sti
and
or
and
adc
mov
sub
xchg
sbb
loope
hlt
in
inc
pushf
and
ficoml
sbb
mov
ret
sbb
pop
pusha
lock
fidivl
cmp
xchg
shlb
roll
das
or
imul
lods
adc
clc
into
cmp
in
add
jg
add
sub
shll
adc
add
fcoml
insb
add
das
outsl
les
cmpsl
add
fisttps
icebp
add
push
fwait
data16
inc
add
std
xorl
mov
mov
movsl
xchg
int3
push
je
add
cmp
mov
add
mov
add
add
roll
dec
mov
addl
push
jmp
fld
arpl
xor
or
push
aaa
mov
or
add
mov
int
push
ljmp
mov
loopne
mov
pop
sbb
cld
arpl
enter
xchg
adc
push
cwtl
pop
movsb
pop
out
sub
inc
testb
pop
jmp
addl
inc
mov
add
sbb
add
repz
add
sti
jae
add
push
sbb
rcr
mov
sub
jb
daa
sub
data16
sbb
xchg
mov
mov
jae
fsubrp
or
xchg
jl
mov
mov
xchg
dec
push
ja
and
stos
pop
inc
add
ljmp
add
fcmove
jae
or
push
mov
jns
and
xor
sbb
push
lret
jp
add
dec
sub
fisubs
shl
jg
add
jae
xchg
xchg
scas
fwait
nop
add
pop
sbb
sub
scas
mov
jae
sti
adc
sbb
sbb
je
sbb
hlt
les
or
cmpsb
pushf
roll
repnz
verr
mov
shrl
adc
pusha
add
xor
cmp
add
fiadds
push
dec
xor
add
loopne
xchg
sbb
sub
popl
outsb
mov
int
cmp
mov
jae
repz
cwtl
call
cmp
imul
jae
cli
es
loopne
ss
test
push
out
xchg
movsb
imul
or
in
in
mov
add
hlt
stc
jns
adc
call
adc
lods
out
cli
mov
cmp
scas
or
push
ss
mov
ficomps
call
loop
and
repnz
fildll
arpl
and
inc
mov
popl
jecxz
mov
mov
inc
add
push
push
popa
sub
jae
add
dec
mov
call
out
jno
push
xchg
popf
sub
repnz
xchg
mov
incb
pushl
mov
and
adc
loop
jecxz
out
movsb
dec
aaa
cwtl
add
pop
xchg
lcall
xor
mov
ds
movsb
ret
cmpsl
jmp
inc
cs
sub
mov
aam
add
aaa
push
mov
jo
and
sub
fcomps
call
mul
cwtl
add
cltd
ja
fimuls
jno
sbb
xchg
xlat
mov
aas
cmp
mov
push
test
add
adc
fbstp
popa
test
adc
pop
je
arpl
xchg
add
mov
stos
std
cmp
cwtl
mov
jno
xchg
add
inc
insb
loopne
dec
mov
pop
popa
enter
insl
xchg
test
push
xchg
add
dec
adc
adc
rolb
loop
cmp
dec
andl
mov
sti
call
sub
repnz
sbb
cmp
pop
movsl
inc
xor
insl
mov
add
in
test
ljmp
jns
enter
add
pop
lret
daa
or
xlat
enter
jmp
gs
stc
push
jae
sarl
and
xchg
ret
pop
js
out
lret
xor
mov
add
mov
push
add
pop
add
push
sub
add
scas
sbb
pop
fimuls
fdivl
pushf
dec
add
adc
out
pop
jecxz
cmp
or
pop
dec
aad
mov
into
sti
adc
jbe
incl
pop
sbb
popf
dec
mov
pop
mov
xor
and
inc
adc
jnp
pusha
into
lret
fildl
pop
fwait
mov
fcomp
adc
sbb
add
mov
aam
pop
add
inc
mov
push
lea
pusha
mov
scas
mov
mov
sub
pop
dec
int
add
ret
lods
pusha
clc
pop
testl
push
sub
pop
and
or
xorl
cmp
sub
xor
add
loop
cld
xor
lock
pop
enter
inc
inc
js
ss
aas
add
add
xor
das
add
cmp
mov
call
add
stos
arpl
pop
sahf
daa
dec
add
pop
xor
xchg
or
mov
add
mov
aad
jg
add
pusha
and
add
push
inc
adc
std
nop
xor
xchg
dec
sbb
gs
pop
sahf
cs
clc
xor
mov
add
mov
xchg
add
loope
mov
xlat
and
add
cmp
and
gs
pop
negb
and
xchg
loope
inc
add
cmpsl
test
shll
inc
std
adc
inc
adc
insb
dec
adcl
jmp
push
add
pop
jns
dec
inc
imul
ret
lods
shlb
imull
subl
cmpsl
add
dec
dec
add
jno
add
mov
test
add
mov
jnp
add
rcrb
rcll
nop
dec
add
test
out
lods
cmpsl
pop
add
fstpl
sub
pop
lcall
jge
out
aaa
dec
xchg
iret
xor
cli
cmp
mov
sub
icebp
daa
inc
outsb
jo
std
sbb
jae
movntq
shrl
pop
loopne
push
cmp
std
xor
cmp
add
test
mov
ss
cld
xor
sub
fs
pop
sub
and
nop
cmp
add
push
jbe
andl
int3
rorb
cmc
jo
jb
add
adc
repz
test
adc
das
xchg
xlat
stos
add
data16
push
pushf
mov
popa
int
negl
pop
aam
pop
inc
jnp
test
rorb
ret
jne
imul
pusha
cli
aas
push
add
in
or
xlat
pop
adc
jb
push
or
sbb
daa
std
je
add
aaa
int3
clc
setg
test
imul
pop
pop
xorl
adc
add
sub
xchg
pop
lods
mov
sahf
lock
rorb
or
sarl
add
arpl
add
mov
push
pop
dec
mov
xchg
mov
sub
pop
insb
xchg
add
fst
in
fs
sbb
mov
iret
add
pusha
sbb
add
adc
sub
dec
add
dec
mov
fidivl
mov
xchg
push
inc
push
xchg
repz
loop
sbb
inc
add
cmp
sub
mov
int3
add
inc
jo
pop
andb
jl
add
cmp
lret
sbb
mov
arpl
jle
pop
pop
pushf
lock
and
xchg
pushl
es
ficoms
add
int3
pop
dec
les
cmp
js
std
add
push
jns
add
sbb
mov
xchg
cmp
pop
add
jl
mov
dec
pop
sbb
sub
add
jle
aaa
or
add
jg
sub
pop
out
push
xchg
push
pushf
testb
pop
mov
shl
loopne
ja
add
xchg
cmpsb
mov
add
mov
loope
stos
and
subl
jp
gs
in
inc
sub
std
xchg
adcl
add
cmpsl
mov
jl
aas
or
int
rcrl
mov
sbb
push
inc
mov
mov
pop
int3
jo
jae
adc
icebp
leave
jp
lcall
push
adc
pop
add
xchg
shrl
subb
clc
add
sub
mov
into
add
dec
shlb
nop
or
daa
sbb
jecxz
jmp
fs
cmp
mov
cmp
addb
cmp
nop
mov
lret
sti
mov
faddl
loop
dec
sub
xchg
aam
add
movsl
frndint
add
imul
push
jo
push
add
cmc
mov
add
ljmp
jbe
pop
cmp
pop
mov
add
xchg
xchg
xlat
add
dec
bound
inc
pop
in
mov
adc
xrelease
push
xchg
outsb
push
inc
pop
pop
sbb
add
test
jl
jmp
andb
lret
imul
cld
sub
rol
xor
in
lea
xlat
push
sub
shlb
out
xchg
adc
add
and
inc
sub
cmc
mov
fwait
cmp
lahf
hlt
lods
cmp
stc
dec
xlat
mov
sahf
inc
sbb
add
arpl
push
jecxz
sti
testb
out
dec
enter
mov
sub
in
add
add
cmp
sub
add
loopne
inc
inc
aas
mov
cmpsb
mov
xchg
cmp
outsb
xchg
popf
clc
cmpsl
push
lods
dec
cwtl
cmp
mov
jne
stos
mov
jecxz
cli
add
xchg
mov
inc
jg
xor
fcoms
mov
je
std
in
arpl
add
hlt
mov
sar
test
add
rcrb
fs
and
push
add
call
or
xor
add
hlt
popf
std
and
cmp
cmc
pop
jle
shr
rorb
cmpsb
and
add
mov
add
lds
out
push
dec
sbb
int3
in
dec
xchg
mov
add
mov
xchg
popa
push
movsl
movsb
cmpsb
jns
inc
add
enter
sbb
in
push
lcall
outsb
test
add
mov
jp
popf
add
add
mov
aaa
push
jns
add
mov
add
jmp
lods
add
and
imul
icebp
test
mov
push
loopne
sarb
call
mov
imul
push
movsb
aaa
add
es
shufps
inc
pusha
sbb
sub
aas
add
push
jg
add
js
or
in
sahf
aam
and
xchg
xchg
xor
pop
es
jmp
pop
sbbb
or
or
jmp
add
imul
add
or
mov
fstps
add
or
mov
xorb
mov
add
cmpsl
pop
push
add
adc
dec
ja
mov
mov
push
ret
push
movsb
loopne
lahf
loopne
loop
xor
xor
fwait
xor
insl
mov
or
push
jecxz
cmp
cmp
push
mov
cmpl
or
scas
movsl
cld
cmp
je
adc
in
mov
enter
and
add
mov
add
mov
test
cltd
add
insl
xor
out
xlat
or
dec
cli
sarl
pop
in
ljmp
pop
scas
xchg
jle
andl
adc
add
pop
push
mov
add
in
test
push
ss
cli
jmp
xor
hlt
sbb
pop
inc
sub
mov
pop
add
into
in
std
outsb
add
lret
xor
cli
add
in
test
dec
add
cltd
pop
rorl
push
pusha
mov
mov
or
sub
into
and
push
sbb
cmpsl
aas
add
das
fistl
sbb
add
lret
mov
push
xchg
or
aas
pop
test
inc
rolb
lret
mov
jne
mov
sbb
push
add
sbb
femms
rcrl
mov
arpl
test
or
push
cld
push
inc
cmp
inc
filds
lods
push
jp
rclb
inc
mov
dec
mov
mul
jle,pt
add
cs
mov
lret
lret
dec
jecxz
add
mov
in
or
out
inc
and
add
push
gs
mov
nop
fildl
mov
pusha
pushf
repz
dec
outsl
je
or
or
cmovs
mov
xor
das
add
lret
aam
cmc
loope
adc
scas
push
push
out
dec
inc
dec
add
jl
pop
mov
jmp
jo
cmp
push
outsl
sbb
inc
mov
fs
roll
es
pop
hlt
push
sar
aas
dec
add
in
shr
mov
lods
jbe
mov
ljmp
add
shl
in
sub
fs
andb
mov
call
mov
and
pop
cmpb
movsb
cmp
icebp
icebp
dec
rolb
inc
or
outsl
cmp
enter
add
cmp
aas
dec
negb
and
pop
and
xchg
add
addl
pusha
mov
and
xchg
xorl
mov
es
loope
sub
jae
outsl
add
movsbl
inc
icebp
loopne
daa
bswap
mov
xor
inc
sub
adc
add
and
movsb
pop
cs
cltd
push
and
xchg
test
enter
mov
test
sbb
nopl
cs
adc
mov
test
fsubrl
add
jmp
push
cmp
fsubs
push
arpl
inc
push
mov
aam
add
repnz
faddl
sbb
sub
sub
add
addr16
cmp
mov
jae
add
rcrl
add
sub
add
adc
pushf
aaa
pop
pinsrw
mov
ljmp
dec
std
rcl
adc
pop
push
test
faddp
cld
jns
pop
and
scas
enter
ret
adc
jae
fwait
cmpsb
insl
test
sbb
pushf
pusha
shll
add
stc
jecxz
push
lods
js
aam
mov
lods
test
adc
dec
cmp
lret
add
sub
inc
call
rcl
sbb
mov
hlt
scas
icebp
movsb
shlb
fistl
shl
stos
and
fiaddl
lods
push
sti
stos
aad
mov
pop
repz
cmpsb
inc
shrb
dec
daa
leave
lock
sahf
iret
rolb
or
mov
in
pop
into
mov
enter
mov
xchg
jecxz
and
popa
das
add
mov
add
inc
xchg
mov
inc
jb
pop
xorb
shr
mov
dec
and
cmp
sbbb
add
add
jl
call
add
mov
gs
clc
cmp
sbb
jae
sub
inc
and
dec
jo
mov
popf
inc
mov
mov
adc
and
je
push
mov
flds
push
add
mov
adcb
enter
lds
movsl
pop
fs
mov
xchg
imul
add
mov
lcall
jb
pop
sub
pop
adc
loope
into
and
mov
sbb
loop
call
inc
xor
scas
movb
xor
or
outsl
xchg
subb
bound
mov
sub
lahf
in
inc
sbb
cmp
push
add
leave
jne
add
mov
push
pop
aas
sub
add
nop
negl
in
xlat
mov
arpl
jg
xchg
addr16
pusha
inc
mov
movb
sbb
insl
sub
movsl
xor
mov
lds
repz
aam
pop
add
aad
cmp
lods
cwtl
stos
and
add
dec
cwtl
leave
sbb
push
dec
addb
jl
dec
add
scas
fsubrs
xchg
add
push
xchg
jmp
mov
mov
push
jne
add
or
add
testl
cmp
pop
shl
iret
pop
repnz
cmp
inc
rorl
nop
mov
add
fcompl
push
aas
xor
xchg
push
cld
popa
jp
xlat
add
sti
sub
push
jge
daa
sbb
aad
addb
jae
js
pop
push
lock
or
into
and
das
add
enter
add
jge
sub
jno
sbbl
lds
add
scas
mov
add
push
sbb
scas
jbe
add
mov
add
xor
dec
cmp
cwtl
add
or
icebp
inc
add
jne
push
pop
pop
rorl
je
add
scas
jbe
dec
add
jmp
out
inc
sbbb
sbb
xor
fisttpll
in
insl
sub
sub
cmp
adc
mov
xchg
dec
sbb
add
mov
shrb
test
pop
or
sahf
sub
call
mov
pusha
lcall
and
mov
das
mov
cli
add
ljmpw
lahf
cmpl
mov
sahf
add
dec
xor
in
rorb
dec
lea
pusha
add
imul
push
inc
or
mov
aad
sub
repnz
lock
cltd
push
add
iret
dec
xor
inc
bound
daa
cmp
mov
out
pop
aas
subb
call
flds
mov
add
mov
aad
and
mov
mov
cmp
xchg
clc
in
mov
sub
stos
jecxz
test
cmp
or
shl
andb
mov
add
push
std
sub
xor
dec
or
push
fistpl
add
inc
loopne
mov
add
std
pop
scas
jge
out
negb
or
es
add
inc
cmc
movsl
pop
jl
pop
inc
add
dec
shl
push
pop
sub
rcr
push
jp
add
mov
and
in
cmp
popf
fisubs
nop
mov
sub
scas
mov
sbb
ret
ds
fistpl
cltd
add
fdivr
cmp
adc
mov
or
mov
mov
push
add
out
add
push
xor
xchg
mov
xchg
clc
and
jne
pop
lahf
xlat
or
add
pop
push
cmp
movsb
or
xor
mov
add
cwtl
add
push
mov
mov
jg
lods
cli
into
push
xchg
dec
inc
inc
add
mov
inc
imul
fdivrs
pop
mov
shll
add
jmp
lods
sar
push
mov
popa
mov
dec
mov
pop
add
sti
incb
add
out
pushf
inc
js
aas
hlt
testb
dec
enter
shl
add
cwtl
imul
cmpb
lock
in
stc
dec
adc
push
cmp
cmp
scas
fidivs
jb
fisubl
aam
jge
lea
unpcklps
jae
ror
dec
mov
add
ss
push
cmpsl
ljmp
loop
movsl
pop
pushf
mov
imul
dec
nop
ret
or
mov
sub
adc
inc
ja
sbb
shlb
add
mov
cltd
pop
je
mov
push
adc
and
adc
adc
shlb
popa
xchg
movsb
mov
ficomps
cld
ret
lods
clc
add
test
nop
lds
aam
bound
fidivl
das
inc
cmp
pop
iret
add
xor
mov
aas
or
adc
dec
shl
push
add
pop
jne
cmp
cmpl
shll
add
fsubr
add
mov
cld
mov
loop
adc
dec
inc
mov
std
movsb
not
dec
lcall
test
add
push
jle
and
add
push
ficomps
mov
add
and
fbld
add
cmp
add
clc
fnstcw
das
pop
loop
sbb
sti
cmc
add
gs
divl
jge
movd
inc
rcll
lret
cmp
sub
in
in
idivl
dec
movl
add
fsubrs
pop
fstpl
cli
and
pop
or
or
xor
rcr
repz
xor
mov
dec
repnz
mov
add
pusha
insb
cmpsl
test
add
push
fsubs
jb
aas
mov
add
inc
dec
imul
popa
pop
jae
out
jecxz
xchg
add
repz
xchg
lea
push
xor
cwtl
in
adc
add
imul
int
pop
jl
es
add
inc
push
imul
fidivl
mov
push
jp
jle
add
jno
sub
add
dec
or
bound
hlt
out
adc
shlb
rolb
pop
dec
pop
or
jb
imul
int3
mov
or
adc
add
xor
inc
shrl
scas
cli
add
xchg
incl
adc
push
hlt
ret
cmovs
pop
mov
roll
arpl
movsb
add
iret
xchg
add
cmp
sahf
push
push
push
mov
outsl
sub
fdiv
sub
add
mov
mov
lcall
cmp
xor
fdivrs
add
pop
push
in
add
xchg
ret
add
cs
adc
ss
fwait
stos
or
addl
mov
and
outsl
xor
cmp
sti
push
xor
push
mov
add
stos
and
into
cs
aad
leave
pop
lea
push
loope,pt
add
rcrl
cmc
xchg
pop
sub
and
loopne
and
in
addb
jp
pop
add
xor
cmp
popl
cs
add
shll
aam
jp
and
add
fstpt
sbb
push
dec
and
jp
add
hlt
jge,pt
mov
dec
inc
fisubs
adc
in
aaa
imul
loopne
mov
call
cmpsl
lods
pop
add
std
xlat
mov
sbb
add
out
inc
mov
data16
xor
sbb
push
xor
ror
inc
xchg
add
xchg
xchg
repz
add
lds
dec
mov
sbb
ror
pop
daa
add
ret
cmp
lea
loopne
mov
inc
add
add
rolb
sahf
cmp
add
scas
dec
es
jbe
or
sbb
icebp
adc
nop
dec
ljmp
enter
xor
add
pop
mov
push
adc
and
adc
jns
shr
mov
sbb
cmp
mov
mov
loopne
and
inc
push
into
js
cld
sub
and
push
movb
add
test
scas
into
sbb
pop
or
xchg
mov
add
add
jl
addb
sub
add
jle
test
add
xchg
xlat
jecxz
fstpl
call
add
sahf
enter
mov
add
mov
icebp
push
cmpsl
sbbl
sbb
jbe
or
adc
icebp
and
xchg
in
mov
cwtl
or
dec
outsb
add
pop
add
or
hlt
push
cmpsb
iretw
add
pop
dec
cli
pop
es
mov
xor
sbbb
or
sub
cmp
test
inc
push
push
mov
movb
subl
sbb
adc
xor
xor
femms
dec
js
pop
pusha
inc
lcall
stos
inc
xchg
push
jp
les
add
jae
testl
ror
add
mov
sbb
xor
mov
loop
mov
pop
jl
add
stc
nop
sbb
pop
mov
mov
in
sti
add
mov
scas
imul
aad
and
rorb
pushf
jae
add
mov
jb
and
mov
jge
pop
popf
add
nop
xchg
aaa
and
add
sbb
sub
inc
testl
stc
test
sub
jne
add
add
push
dec
adc
adc
inc
cvtps2pd
scas
and
add
imul
add
pop
sahf
nop
cmp
pop
xchg
sub
fs
cwtl
ret
jmp
cmp
dec
adc
shll
cs
lods
add
add
jge
add
fisubrs
sbb
pop
pop
mov
mov
rclb
icebp
inc
add
sbb
mov
cmp
fsub
pop
sub
je
fidivl
xchg
test
and
push
lds
add
add
mov
movsb
xor
add
add
mov
mov
nop
andl
cmpsl
lock
ficoml
loopne
lahf
pop
aaa
mov
stc
dec
and
and
roll
jg
push
xchg
lea
xchg
add
pop
fisttpl
les
mov
cmpsb
pop
xchg
mov
add
mov
addb
pop
faddl
or
xlat
nop
pushw
dec
scas
rclb
sub
clc
bound
push
mov
cmp
sub
movsl
enter
loopne
negl
or
push
add
push
or
jo
add
mov
add
jp
dec
sbb
js
adc
mov
adc
add
jo
mov
add
scas
je
jns
add
sub
add
add
jo
movsb
add
call
inc
add
mov
pop
add
out
inc
scas
add
adc
in
lahf
test
push
sahf
shr
cmpsb
test
pop
add
ss
add
sub
push
enter
sti
add
xor
lahf
mov
push
ret
jg
sbb
add
ficomps
add
addr16
sub
icebp
dec
jmp
aam
stos
add
mov
add
ds
pop
add
sbb
fldl
push
cmp
sub
add
pop
stc
sub
push
lods
addb
iret
pop
and
sbb
xchg
and
stos
push
pushf
jmp
add
and
out
fwait
or
cmpsb
sbb
pop
sahf
add
mov
inc
add
leave
cwtl
pop
bound
aas
jle
or
add
iret
fwait
fs
push
jle
add
lods
mov
mov
sarl
sti
add
in
add
ljmp
jmp
adc
and
inc
inc
pop
insl
mov
dec
mov
xchg
scas
into
jne
cmp
or
xchg
add
std
pop
into
jge
nopl
imul
pop
cltd
adc
push
or
sbb
add
cld
imul
adc
xor
add
lret
pop
mov
fildl
xlat
xor
or
rolb
xchg
add
push
lds
andb
push
xorl
ljmp
add
shl
and
in
push
cmp
mov
inc
sub
jecxz
add
dec
das
pushf
cmp
and
push
add
pop
mov
outsb
sti
jbe
out
movl
pop
jg
je
xchg
add
fwait
imul
add
or
add
or
cmpsl
andl
sbb
loope
inc
daa
mov
in
ds
mov
je
and
scas
cmp
jbe
fs
into
cmovg
pop
sarl
sbb
adc
imul
or
pop
lods
mov
leave
rol
jnp
stos
add
push
jle
loopne
add
mov
mov
ret
stc
rcll
pop
lods
jae
mov
sub
or
sub
test
lret
xor
mov
lahf
mov
sbb
or
dec
add
and
mov
pushf
dec
das
lods
cmp
push
dec
out
push
add
lock
adc
push
xchg
test
insb
or
sbb
js
sub
mov
and
lahf
inc
sbb
sub
cmp
lds
int3
pusha
mov
mov
inc
aas
lock
add
scas
fwait
loopne
ss
and
stc
add
sti
aaa
mov
negl
add
lret
mov
arpl
sbb
mov
shrb
or
sahf
psubq
les
iret
pushf
mov
add
ds
lret
add
mov
sub
add
cmc
fucomp
sti
dec
sub
sub
mov
pop
in
jecxz
mov
cmp
dec
mov
xor
dec
les
pop
push
add
test
add
outsl
and
in
push
push
cmpb
ja
subl
fcoml
add
orb
pushl
pop
int
mov
cvtpi2ps
or
lods
in
loop
icebp
sti
mov
aam
or
dec
and
cli
fidivrl
mov
cmp
popl
jne
mov
pop
dec
and
adc
inc
mov
push
and
sub
mov
bound
rolb
inc
into
cmp
cld
push
sti
push
fisubs
mov
stos
outsl
xor
arpl
pop
sti
sbb
xadd
adc
xchg
and
mov
pop
je
mov
mov
add
or
scas
aas
arpl
mov
scas
cmp
loop
xchg
shl
outsl
lods
out
packuswb
mov
arpl
adc
jb
add
push
pop
inc
sarb
add
xchg
hlt
pop
mov
nop
jo
ret
call
add
add
xor
pop
sti
enter
inc
add
nop
mov
sbb
jecxz
push
leave
test
adc
xor
cmp
addb
add
mov
addl
aam
mov
adc
pusha
and
roll
pop
and
push
jge
push
push
fstps
add
xchg
sub
add
sbb
mov
loop
add
insb
subb
loope
or
mov
pop
dec
mov
add
pop
nop
sub
ljmp
push
sub
mov
es
inc
xchg
dec
adc
jo
add
mov
mov
add
in
mov
testl
inc
push
mov
pop
xor
fildl
xchg
or
mov
shlb
repz
jo
aaa
ds
out
decl
dec
jnp
fld
sub
gs
inc
mov
cmp
aam
daa
cmp
jecxz
fsubrp
jbe
jg
add
out
adc
dec
push
cld
stos
and
dec
insb
cmpsl
jbe
dec
push
mov
pop
addl
push
or
mov
loop
fsubrl
notl
mov
nop
mov
and
cmpsb
pop
icebp
jecxz
sub
mov
jecxz
loop
sar
jecxz
xchg
dec
lea
adc
mov
xchg
fistpll
je
dec
gs
daa
dec
pop
add
jbe
mov
push
inc
in
cs
xor
scas
ljmp
je
mov
mov
and
decb
cmp
push
and
xchg
dec
mov
fisttpll
cmp
test
orl
addr16
test
or
adc
orl
jle
lea
adc
aaa
fwait
sbb
lock
mov
cmpb
lea
test
sti
adc
addr16
jae
imul
hlt
daa
push
aam
xorb
push
insb
hlt
ret
orl
inc
dec
nop
add
push
aaa
dec
mov
inc
push
adc
lock
daa
sub
je
mov
push
mov
and
mov
mov
lock
push
mov
jne
fdecstp
pop
or
lods
adc
adc
add
and
pop
jo
adc
shll
xchg
outsl
pop
xorl
daa
add
sub
sub
in
mov
mov
push
lods
xchg
jo
mov
cs
or
iret
mov
xchg
lcall
in
sbb
push
push
mov
test
iret
rcr
add
add
jmp
dec
nop
out
les
mov
sub
ret
adc
inc
pusha
jbe
mov
and
call
xor
push
sbb
ss
cwtl
shl
pop
inc
mov
lods
std
ds
fnstenv
lods
or
mov
or
mov
jle
adc
xchg
xor
movsl
loope
fnstcw
subb
dec
dec
mov
mov
pop
jbe
pop
movsl
jg
imul
cmp
or
inc
dec
adc
mov
icebp
push
push
mov
pop
jo
mov
repnz
sti
shl
adc
lea
and
lret
in
popa
cmp
imul
sbb
push
xchg
mov
hlt
cli
test
je
cwtl
sti
and
add
sub
push
xor
clc
mov
xchg
jne
fiadds
call
adc
inc
or
xchg
imul
test
and
inc
clc
cli
add
pop
inc
sub
movsb
rorb
sub
dec
mov
and
mov
xor
jl
xor
mov
mov
dec
test
xchg
and
or
js
leave
inc
and
std
test
and
sbb
aaa
shrb
mov
pop
aam
std
adc
or
std
aaa
push
inc
std
dec
ljmp
sub
stc
subl
das
addr16
push
jge
xchg
jmp
push
xchg
jecxz
dec
cmp
mov
mov
daa
inc
cmp
lds
daa
dec
pop
mov
xchg
and
outsb
test
clc
jns
sbb
dec
push
imul
mov
and
and
ds
mov
arpl
xchg
xlat
mov
mov
jge
scas
movsl
cmc
movl
rolb
xchg
gs
rorb
mov
xchg
add
cld
popa
lock
or
and
and
add
lods
std
cmpsl
fdivrs
ss
pushf
stos
sti
push
sbb
cmp
cli
sbb
adc
and
jnp
js
mov
movsb
std
jb
inc
imul
mov
dec
and
push
xchg
and
inc
loope
xor
les
sub
adc
push
and
test
sbbb
bound
inc
hlt
bound
and
xor
cli
add
jae
and
fs
inc
xchg
mov
xchg
push
pop
xchg
arpl
or
jecxz
mov
mov
sarb
insl
sbb
ja
daa
cmp
fbstp
mov
sub
mov
leave
fdivrs
aam
pop
dec
aas
ret
and
sti
cwtl
loop
add
jecxz
out
push
xchg
mov
js
dec
pop
popa
push
call
int
aam
xchg
push
imul
ss
xchg
jne
add
popa
ljmp
dec
pop
sbb
sbb
inc
shll
or
es
and
push
xchg
adc
out
cmp
mov
and
mov
test
inc
loope
adc
cmpsb
mov
aam
or
jno
repz
nop
mov
fs
cmpsl
adc
add
cmp
sub
add
add
xchg
ljmp
mov
mov
ds
int
rcl
mov
and
mov
push
jno
add
dec
and
ret
notl
les
rcrb
js
cmp
enter
lahf
daa
sbb
ud1
xchg
xor
and
xchg
mov
test
test
movzbl
into
enter
or
ja
js
jns
add
mov
rcrl
in
and
add
add
daa
mov
ret
add
sbb
add
and
push
or
xor
push
and
enter
xor
sub
jmp
rorb
xor
sub
sarb
test
in
ret
test
mov
sub
add
xor
pop
jnp
mov
add
mov
inc
adcl
push
mov
scas
adc
pop
sbb
sar
mov
adc
pop
push
test
pop
in
fldl
add
cmpl
xchg
mov
mov
mov
mov
subl
adc
pop
mov
xchg
dec
pop
nop
stos
xchg
nop
stos
or
aad
out
gs
ja
insl
adc
cmp
test
rcrl
inc
fldenv
xchg
jb
insb
pop
mov
mov
adc
inc
or
rcrb
mov
mov
arpl
and
rclb
add
inc
rcrb
sub
movsb
addr16
push
lods
loopne
out
mov
mov
mov
pop
jp
call
add
sbb
push
in
sbb
aas
inc
jns
add
xchg
add
fstpt
inc
nopl
in
pop
std
cld
sub
jae
cmpsl
inc
xchg
add
imul
sub
stc
fistl
aaa
mov
insl
add
test
xor
add
jne
mov
pop
fisttps
decb
push
xchg
cmp
or
push
jle
test
stos
adc
xor
sbb
cmpsl
dec
gs
or
and
sti
xchg
stos
bnd
sarl
add
add
cmpsb
or
loop
inc
movsl
enter
push
jb
push
adc
mov
mov
imul
popa
bound
addl
add
or
imul
pavgb
les
dec
sub
jnp
push
xchg
sbb
mov
sarb
ret
jmp
test
adc
cld
fstpl
and
mov
divl
dec
call
add
sub
ds
in
and
and
sarb
ret
repz
add
fcompl
in
mov
sub
sbbb
adc
jae
adc
sbb
loopne
fdivs
shlb
and
mov
aam
in
mov
adc
les
add
or
aas
in
add
mov
lea
xchg
sahf
and
sahf
js
dec
dec
dec
and
pop
les
fimull
arpl
inc
lcall
push
into
xor
ljmp
xor
dec
js
les
enter
mov
and
mov
movsb
in
sub
or
adc
dec
fs
cmp
xchg
add
nop
mov
movsl
xor
xchg
mov
hlt
mov
mov
ret
cmp
mov
mov
test
imul
and
test
mov
inc
inc
ja
mov
lea
fs
sub
mov
je
xchg
insb
push
fwait
xchg
imulb
adc
jo,pt
push
mov
je
push
dec
lock
push
xor
sbb
pop
mov
mov
push
sbb
jnp
inc
rorb
test
adc
inc
dec
xor
sbb
mov
scas
pop
clc
mov
sbb
ss
mov
xor
movsb
or
inc
iret
jno
sbb
cmp
jne
jge
aaa
mov
jo
sbb
sbb
adc
call
mov
aas
adc
sub
bound
inc
sub
and
jbe
xchg
dec
lret
sbb
jnp
inc
sbb
jecxz
sbbb
sbb
or
cli
aas
into
nop
or
adc
bound
or
and
sarb
or
imul
mov
fistpll
inc
icebp
lock
or
xchg
or
gs
into
mov
test
xchg
jo
sbb
inc
movsl
enter
in
pop
cmp
enter
bound
jo
in
fcoms
mov
sbb
xchg
cmc
rorb
call
ret
and
iret
jno
pop
jno
push
mov
dec
test
push
les
jnp
inc
enter
mov
int3
sbb
mov
mov
adc
push
lds
mov
repnz
loopne
shl
or
jmp
push
repz
in
lods
sbb
loope
mov
inc
or
adc
sbb
and
and
sub
sti
lods
cmp
nop
dec
loop
ds
push
mov
pusha
push
and
cmp
inc
or
inc
pushf
daa
sbb
test
adc
enter
sbb
and
icebp
inc
cwtl
or
and
xchg
hlt
stos
testl
inc
sbb
push
inc
or
clc
sub
mov
mov
sbb
inc
int3
push
jns
push
loopne
mov
out
jo
jo
push
jo
sbb
lea
push
push
sub
sbb
dec
xor
cmp
fstps
jo
dec
and
inc
add
add
adc
xor
dec
outsl
enter
push
and
or
stos
pop
sub
dec
inc
mov
pop
push
add
dec
pop
loop
inc
cmp
pop
mov
and
sub
push
aam
and
cltd
gs
or
cmp
lods
and
test
inc
push
dec
push
jns
add
sub
jo
and
test
insb
lcall
je
adc
sub
aas
sub
dec
adc
push
push
inc
sub
xchg
add
sub
push
dec
dec
jmp
add
dec
mov
aam
push
movsl
and
enter
and
int3
in
sarb
sub
pop
insb
sub
sub
xor
push
push
sub
sub
cltd
andb
dec
test
pop
inc
dec
fmul
sub
les
movsb
repnz
cmpb
or
sete
ret
mov
shlb
cs
or
in
mov
call
mov
sbb
push
push
push
or
mov
mov
mov
jnp
and
push
dec
xchg
pop
sbbl
pop
sub
inc
adc
xor
test
sub
mov
add
fs
mov
repz
mov
cmc
gs
or
icebp
mov
dec
push
dec
stos
cltd
clc
sbb
sbb
adc
jp
mov
mov
push
mov
add
out
in
test
mov
aas
push
pop
pop
add
sub
push
or
in
movsl
imul
mov
sub
pop
testl
add
lea
incl
push
fisubs
and
scas
dec
std
xor
ret
adcl
and
lods
or
sbb
and
dec
test
addb
je
mov
fsts
push
xchg
adc
inc
push
loopne
fidivl
outsl
add
addr16
nopl
and
xlat
mov
lods
and
inc
je
mov
xchg
sub
mull
inc
rorb
adc
mov
inc
and
and
xchg
lea
and
cwtl
lea
and
pushf
xchg
lret
mov
out
sbb
or
add
or
xchg
pop
arpl
xor
or
xchg
xor
pushf
or
mov
ljmp
xchg
inc
out
or
dec
inc
adc
roll
popf
push
adc
cmpsl
sub
adc
mov
or
xchg
adc
mov
movl
sbb
pop
sbb
or
movhlps
xor
shrl
lock
and
add
inc
fisubs
or
mov
and
or
pop
add
jno
push
sbb
mov
xchg
sahf
loope
add
inc
aam
test
sbb
or
inc
xchg
lret
push
cltd
sub
dec
adc
or
pop
out
push
out
xchg
ret
and
cwtl
or
xchg
push
xor
sbb
adcb
adc
mov
pop
hlt
sub
inc
inc
mov
adc
movl
push
ret
sub
adc
mov
inc
push
add
mov
nop
and
xchg
cli
lret
xchg
push
pop
jp
scas
and
push
xor
xchg
push
adc
adc
movsl
adc
nop
mov
outsl
pop
cmp
ja
push
into
lods
xor
imul
or
inc
cli
addr16
add
in
andl
je
test
push
inc
add
sti
sbb
pop
inc
sbb
sbb
push
xchg
push
xchg
cmp
stos
mov
adc
testb
dec
or
aam
jo
jl
scas
and
sub
je
push
push
push
pop
mov
xor
in
sahf
add
pop
rcll
push
xchg
cli
mov
mov
and
in
sub
xor
dec
add
lods
dec
dec
hlt
or
in
es
cmp
mov
xchg
cwtl
mov
cwtl
pusha
call
add
inc
gs
addr16
sbb
je
outsl
sahf
lahf
testb
mov
adc
arpl
cmp
xchg
movsl
adc
or
and
inc
sbb
sbb
fnstsw
dec
insl
sbb
pop
leave
jle
arpl
jmp
mov
sahf
pusha
ds
adc
jl
stos
mov
inc
out
popf
xlat
jl
pusha
inc
or
xchg
push
addr16
or
push
push
inc
js
lods
aaa
cmovle
addr16
adc
pusha
adc
inc
xchg
dec
or
sub
les
pop
xchg
xchg
mov
dec
sbb
cmpsl
movsb
pushf
iret
nop
int3
mov
pusha
sbb
inc
in
jp
mov
mov
mov
adc
adc
xchg
dec
jbe
fdivl
shl
loopne
mov
inc
mov
sub
dec
loopne
cwtl
push
dec
movl
cmp
hlt
inc
sbb
or
adc
cmp
and
pop
pusha
xor
into
test
cld
test
jg
pop
or
or
sub
enter
stc
push
int3
mov
jle
test
xor
je
fcomps
repnz
xchg
lods
stc
or
mov
pop
push
ds
xor
jne
inc
cld
js
nop
sub
pop
call
cmp
je
cmp
sub
inc
cmp
add
std
dec
inc
test
inc
inc
or
jo
test
leave
dec
pop
or
jbe
mov
mov
bound
inc
add
or
or
inc
inc
bound
aam
and
nop
and
add
data16
push
les
dec
fcoml
jl
xchg
adc
and
lock
xchg
lods
jno
jae
and
mov
add
add
mov
cmc
inc
call
cmp
and
sbb
xchg
cwtl
jo
inc
insl
jne
pop
add
sub
pusha
enter
push
movaps
in
adc
pusha
movsb
xchg
mov
or
and
add
or
and
movsb
xor
in
loop
sub
inc
inc
mov
pinsrw
mov
dec
add
mov
lret
mov
or
lret
popa
enter
or
adc
pop
pop
lahf
dec
push
insl
rclb
and
dec
lret
inc
cs
in
cmp
cmp
sub
or
mov
mov
in
and
lret
sub
sub
push
add
sub
dec
fsubrl
dec
dec
lock
xchg
and
ss
insb
sub
shlb
and
dec
sub
and
sbb
pusha
adc
xchg
negb
call
dec
sbb
push
inc
movsl
sub
ret
cmp
mov
js
and
aas
inc
cld
or
stc
icebp
or
mov
roll
mov
and
lea
inc
iret
jo
call
movsb
sbb
xor
and
adc
mov
adcb
icebp
les
inc
dec
pusha
dec
push
inc
mov
test
or
inc
es
and
adc
mov
mov
loope
mov
jecxz
adc
sub
push
sbb
mov
test
inc
xchg
adc
sub
mov
sbb
pop
push
jnp
or
inc
jno
add
pop
aas
cmc
dec
outsb
pop
push
and
pop
and
push
inc
inc
leave
mov
or
mov
sbb
test
or
mov
rorb
or
orb
test
inc
fisttps
cmp
mov
aaa
popa
ss
or
adc
jbe
bound
and
xor
dec
loope
mov
or
daa
dec
ljmp
sti
das
dec
mov
lret
popf
int
sahf
nop
pusha
pushf
xor
push
das
cld
inc
push
add
pop
and
xor
les
dec
idivb
xor
lods
int
decl
cmp
nop
adc
jbe
push
call
into
xor
add
insb
push
mov
dec
nop
mov
mov
out
inc
dec
push
pop
dec
jge
je
adc
jmp
dec
adc
jl
fs
mov
lods
adc
test
test
js
shlb
push
pop
mov
cmpsl
cmp
inc
aaa
in
pusha
mov
inc
bound
pop
lock
and
clc
jo
sti
mov
sub
sub
xor
test
sub
movl
adc
daa
popa
aaa
cmp
xor
lock
ret
mov
sbb
or
test
push
pop
inc
clc
lret
dec
jl,pt
sub
push
fs
or
test
xor
adc
int3
and
movsb
xchg
sbb
fists
lret
fisubs
inc
scas
push
or
add
je
adc
mov
mov
push
add
inc
xchg
cmpl
cmc
pop
fwait
das
movsl
mov
daa
adc
dec
push
dec
out
sbb
dec
jbe
daa
out
dec
cmp
lea
inc
mov
push
pop
pop
aaa
ret
push
out
mov
cmove
cld
nop
cmpsl
adc
fwait
xlat
loopne
lock
pop
xchg
add
mov
sub
cmp
push
mov
out
jg
push
jp
addl
jne
or
imul
mov
mov
adc
call
out
shlb
xorb
inc
push
cmp
sub
rorb
push
nop
pop
ret
add
mov
xor
or
test
test
ret
adc
popa
lock
jmp
sub
and
test
sar
push
mov
xor
mov
sub
pop
arpl
je
pop
push
and
xor
inc
js
inc
lea
std
or
xor
mov
imul
in
adc
inc
or
popa
dec
sbb
cmp
jo
shrl
shll
rorb
jbe
xchg
inc
enter
mov
push
clc
sub
dec
pop
cli
sub
xor
mov
sub
sub
mov
xor
and
outsl
shr
mov
inc
sub
mov
pop
xchg
sub
call
les
and
mov
mov
mov
popa
les
cmp
sub
xor
xor
std
pop
and
outsl
sarb
insb
leave
and
jno
sbb
cmp
xor
xor
sub
dec
xor
xor
sub
test
and
int3
sbb
loop
nop
repnz
mov
inc
add
scas
mov
test
stos
in
cld
adc
hlt
imul
push
nop
ss
mov
sub
mov
enter
gs
sti
jl
jnp
push
or
clc
shrb
or
adc
cmpl
movsb
or
and
add
push
push
scas
and
push
xchg
in
mov
sub
sub
push
jo
xchg
push
adc
aas
sbb
jo
xchg
data16
mov
and
push
push
xor
jmp
ret
sbb
add
sbb
inc
jl
js
cwtl
and
and
int3
leave
jp
pop
les
lock
fcoms
loope
lret
mov
or
pop
push
and
add
mov
mov
or
movsb
and
pop
lds
fucomp
or
jno
sarb
scas
xchg
adc
nop
inc
sbb
add
dec
xchg
jp
push
dec
testb
test
or
inc
cs
adc
std
cmp
xlat
out
dec
mov
mov
mov
ror
loopne
nop
add
shrb
aad
jp
add
ret
jbe
add
stc
cmpsl
icebp
adc
mov
movsb
jmp
test
sub
lret
add
bound
pop
jp
cmp
push
add
xor
lret
fwait
outsb
rorl
ficomps
fdivs
push
loop
lock
subb
xor
fstps
add
insb
js
push
inc
hlt
or
leave
ja,pn
pop
inc
jnp
loope
add
call
xchg
js
stos
pop
test
push
sbb
lcall
push
out
rcr
push
adc
add
push
xchg
xor
sbb
pushf
mov
fstpt
push
inc
hlt
imul
fcompl
sar
xor
add
es
ljmp
stos
mov
popf
fs
push
and
dec
and
std
incl
insb
push
or
rol
mov
and
jnp
pusha
in
add
lar
sar
push
inc
mov
arpl
in
in
lret
lods
insl
add
sbb
pop
stos
and
pusha
lret
mov
jge
xor
enter
je
js
data16
cmp
call
jmp
idiv
add
jecxz
dec
sgdtl
shrb
sbb
jl
xor
sar
aad
pop
popf
data16
test
lea
std
fsubrl
jne
divb
movb
jne
jne
pop
mov
jne
mov
inc
ja
sub
or
xor
pop
or
daa
ret
mov
mov
sub
cli
add
lret
sub
mov
jb
sub
mov
mov
add
sub
rep
pop
pop
jmp
dec
test
or
les
lds
jge
sub
call
inc
add
loope
inc
push
movb
call
xor
scas
sbb
sub
cmp
mov
int
int3
rolb
mov
push
out
or
clc
test
je
mov
jle
adc
adc
jecxz
xchg
push
std
and
dec
push
jmp
sahf
xchg
shlb
fwait
mov
add
jnp
sbb
popf
jmp
ss
movsb
mov
add
or
clc
adc
jnp
push
shlb
sbb
mov
cs
add
mov
fs
push
addr16
fs
lret
inc
cmc
inc
outsl
sbb
aas
xor
xor
jo
and
dec
push
inc
xor
or
psllq
push
pop
cli
hlt
adc
movsb
xor
out
fwait
les
push
mov
stc
pop
addr16
ds
js
pop
dec
adc
orb
inc
js
mov
mov
aam
emms
sbb
and
jmp
sbbb
push
pushf
add
stos
push
jle
xor
mov
push
push
fs
std
out
and
pop
rcrl
cld
xchg
sub
pop
mov
or
les
movsl
jle
bound
dec
in
lock
xchg
scas
pushf
jo
cltd
xor
xchg
or
rolb
mov
mov
mov
out
jae
push
mov
pop
jg
test
cmp
je
jecxz
jbe
add
mov
adc
or
loope
ds
cmp
sbb
decl
repz
cs
mov
add
xor
mov
pushf
jbe
sti
adc
mov
arpl
mov
add
push
jl
mov
sbb
imul
into
insl
sbb
cld
shl
xchg
xchg
xchg
xor
pop
jns
adcb
test
adc
std
jno
sbb
fwait
sarl
inc
pusha
and
xchg
les
outsb
pop
pop
inc
inc
jle
stos
xchg
fsubs
cmp
pop
test
xchg
les
inc
or
mov
mov
xor
aaa
insb
or
fdivr
rorl
and
insb
popa
cmpsl
inc
aam
pop
xlat
pop
sarl
dec
hlt
pop
movsl
test
adc
lahf
arpl
in
ds
mov
mov
cmp
cs
mov
hlt
mov
push
and
sub
mov
cltd
mov
scas
pop
pop
mov
out
adcb
lea
enter
jl
test
bound
js
adc
pop
or
roll
test
mov
repnz
xchg
test
pop
pop
and
xor
adc
xor
loop
xor
push
adc
in
xor
or
cwtl
and
mov
ljmp
dec
lods
push
fildll
notl
add
pop
sbb
sub
lods
add
xchg
mov
inc
js
test
mov
and
psrld
mov
mov
and
adc
and
cmp
lea
dec
and
pop
int
push
and
enter
or
xorb
and
jp
sbb
mov
xchg
add
xlat
mov
mov
movl
cmpsb
popa
sub
mov
sbb
jne
xorl
je
or
ret
xchg
lret
or
push
fs
xchg
jg
lods
pop
push
outsb
imul
ja
and
out
xchg
std
adc
cs
cmp
adc
and
int3
popaw
repnz
cld
fs
cs
in
xlat
sbbl
mov
enter
rorb
mov
int3
add
out
jne
enter
or
lods
and
inc
test
xor
in
hlt
notb
rcl
push
sub
add
inc
lock
subl
adcb
add
repnz
jmp
and
fstps
xor
imul
xor
add
out
jmp
jo
rorb
xchg
or
push
fstpl
das
mov
mov
jle
decb
add
cmpsb
or
add
push
push
sbb
add
mov
cwtl
add
inc
rol
xchg
lret
clc
and
push
sbb
mov
rorl
nop
adc
imul
add
fwait
push
add
xor
sbb
xchg
loop
or
iret
ret
inc
pop
mov
pop
nop
data16
dec
inc
mov
jmp
popa
add
xor
pop
add
xlat
mov
mov
data16
jle
xor
add
lret
je
cmp
adc
clc
jns
mov
add
stc
gs
mov
shl
add
dec
pop
mov
negb
push
icebp
repz
jg
mov
pop
enter
clc
add
outsb
fcoms
dec
sub
push
dec
cmpsb
xchg
subl
jo
xchg
pop
fstpl
push
cmpsb
and
pop
repz
das
call
subl
adc
popa
iret
pause
lret
pop
add
adc
add
jle
add
stos
roll
add
push
fsubl
in
add
out
cwtl
and
jb
add
gs
push
cmp
adcb
idivl
dec
insl
add
pop
bound
nop
and
bnd
repz
fwait
cmp
fisttps
sbb
dec
loopne
or
mull
in
aaa
mov
jmp
pop
add
add
and
int3
and
pop
mov
sub
enter
outsl
cmp
imul
push
add
jmp
sbb
adc
mov
and
adc
add
leave
shlb
enter
call
in
lcall
or
mov
add
mov
mov
insl
mov
int
ss
jnp
add
mov
out
push
add
ljmp
add
test
aaa
dec
daa
icebp
in
add
or
add
push
mov
pop
inc
cwtl
rcl
mov
movsl
xchg
add
dec
adc
cs
scas
dec
and
andl
insl
dec
jbe
jnp
btr
mov
loop
ss
add
jecxz
adc
add
pop
ja
cmp
out
call
adc
jl
jb
jle
inc
push
jns
inc
xchg
sbb
cmpsl
popf
adc
ret
add
loopne
idivb
push
inc
in
and
add
cmp
pop
add
or
add
adc
xor
mov
inc
and
testb
and
imul
repz
mov
mov
ljmp
out
add
cld
cmc
adc
ret
add
cli
ret
pushf
bound
in
mov
cmpsb
add
adc
sbbl
fwait
lret
roll
xor
jae
push
mov
pop
push
inc
shlb
enter
cmp
mov
roll
add
pop
daa
lahf
mov
jecxz
xchg
pop
jl
pop
mov
inc
xor
or
adc
and
out
dec
sarl
add
or
dec
mov
xor
sub
mov
jmp
cmp
cmp
and
mov
cwtl
fldl
leave
inc
sub
fcoms
adc
add
aaa
push
xor
call
leave
mov
scas
in
adc
push
flds
mov
or
lods
testb
mov
push
pop
fists
add
cmp
add
insl
fsts
inc
je
add
pop
iret
push
roll
cmp
jno
mov
pop
add
mov
cmp
mov
inc
iret
jmp
cmp
into
and
jle
ficoml
add
std
scas
cmp
add
mov
and
push
sub
sbb
lahf
aam
insl
pop
jo
sbb
jmp
add
js
adc
add
pop
ret
in
push
add
push
add
or
add
fcoms
xchg
cmp
add
mov
add
pusha
jns
in
or
adc
add
fcomip
mov
lock
clc
je
popa
pushf
cmp
xchg
jl
mov
lcall
push
mov
jg
jno
adc
jns
loopne
dec
lret
mov
std
jbe
xchg
lds
enter
cmp
adc
lcall
and
add
mov
jno
pop
or
arpl
xor
jmp
add
movsb
das
add
mov
clc
add
stc
mov
jg
dec
xor
add
and
in
cmp
mov
imul
jp
mov
js
add
inc
inc
add
or
fnstsw
arpl
sbb
mov
cli
in
push
stc
or
cmp
int3
add
jne
in
icebp
sbb
cwtl
pop
add
dec
fnstenv
fmul
nop
adc
mov
pop
jle
add
popf
dec
add
adc
inc
add
mov
push
lahf
jo
in
xchg
cmp
mov
stos
or
in
lock
sub
roll
movsl
inc
push
mov
int3
call
xor
cmpsb
pusha
es
add
and
loope
dec
add
jae
mov
push
rcr
dec
out
add
add
xchg
es
fwait
cmpsl
iret
add
push
mov
xor
loopne
les
cmp
add
outsb
maskmovq
divl
leave
mov
or
adc
and
jg
cltd
push
cmp
fiadds
fdivr
in
xor
add
in
sub
mov
std
jns
ret
add
pop
jp
fcomps
add
ljmp
sub
push
int
cwtl
add
cmp
test
sahf
adc
or
loop
pop
gs
pushf
xchg
inc
push
pushf
push
fisubrs
mov
mov
dec
push
mov
sub
add
out
xor
adc
adc
xor
adc
add
mov
sub
rclb
or
cmp
xor
sbb
sahf
jge
jp
pop
push
and
jmp
into
sbb
add
mov
dec
or
jmp
xor
add
add
data16
and
mov
cmp
ja
or
jbe
mov
xor
dec
bound
cltd
pop
sti
push
mov
lods
cwtl
les
cmp
adc
dec
inc
inc
and
adc
push
or
inc
sub
adc
pop
or
sbb
or
sub
or
sub
sbb
icebp
adc
adc
call
add
sti
repz
pop
mov
nop
adc
loopne
jl
xor
pop
shll
xor
jecxz
mov
cmp
xchg
sbb
inc
aas
sub
xchg
mov
loopne
adc
push
fs
sbb
adc
pop
pusha
pop
jne
shrb
mov
jae
push
or
dec
sbb
sub
pop
cmp
sete
pop
and
fdivrl
movsb
cmpsl
cld
cwtl
pop
or
into
aam
xchg
mov
loopne
sub
push
pop
loop
leave
sub
push
clc
inc
cmp
push
add
or
cltd
mov
push
gs
nop
push
mov
cmpsl
and
and
and
jb
mov
xchg
jp
and
ss
mov
adc
add
or
xchg
std
test
mov
and
xchg
sti
pop
inc
in
lret
cs
cmp
xchg
and
fdivl
lock
mov
mov
imul
daa
out
popf
and
pop
scas
loop
inc
leave
and
or
adc
or
dec
je
sbb
push
mov
pop
pop
inc
loop
mov
jmp
insb
stos
lret
scas
mov
imul
cmp
fwait
pop
or
jbe
ds
jbe
out
mov
popa
insb
aam
and
loop
mov
inc
flds
and
mov
dec
dec
jae
xlat
mov
mov
pop
mov
inc
cmpsb
mov
mov
inc
repz
lcall
and
add
adc
xchg
sbb
movzbl
jecxz
loop
dec
push
add
mov
enter
shll
in
jecxz
xchg
lret
test
xchg
xchg
dec
lea
pop
cmp
jle
ja
mov
call
clc
ja
and
call
jae
jne
loop
lea
push
xor
fstp
sub
or
or
rcrb
or
pop
mov
mov
psrld
sub
adc
or
std
xchg
call
in
pop
stos
cltd
test
not
mov
leave
mov
cmp
mov
cmp
scas
loop
sarl
xor
push
hlt
dec
inc
pop
push
call
into
xchg
push
and
inc
inc
sub
addb
rclb
push
mov
dec
push
cmp
xor
mov
pop
inc
jbe
xchg
inc
push
jne
jne
stos
fldl
inc
fimull
xlat
or
bound
inc
pusha
and
sti
jo
js
and
and
in
call
les
fadds
jmp
in
add
test
and
push
test
rorb
out
sub
fnop
out
sub
icebp
call
or
std
stc
or
xor
jno
cmp
or
gs
jo
leave
push
aas
call
dec
fadd
cmp
add
xor
adc
and
or
xor
add
mov
adc
and
xchg
out
sbb
pop
dec
jle
enter
and
jmp
mov
or
jb
and
clc
jmp
adc
test
les
sbb
and
or
enter
push
sbb
or
sub
xorl
aam
mov
fcoms
loop
nop
ds
nop
cmp
xchg
rorl
pop
cmc
arpl
movsb
nop
sub
or
add
cmp
inc
in
mov
or
mov
nop
adc
pop
mov
or
movsb
jne
loopne
xchg
and
xchg
loop
andl
idiv
sbb
pop
and
test
xchg
push
mov
mov
mov
mov
jae
movsb
pop
dec
hlt
sahf
and
dec
inc
lods
inc
dec
push
dec
inc
pop
mov
lds
mov
mov
notb
andl
rcl
scas
repnz
push
cmpb
cwtl
test
mov
or
sub
pop
cld
sbb
call
adc
mov
loope
or
ret
and
movb
push
or
rcrb
cwtl
jne
dec
add
add
scas
in
mull
mov
mov
add
test
push
mov
xor
push
lods
arpl
push
mov
pop
push
popa
stos
mov
sahf
hlt
push
imul
adcb
xchg
or
push
jmp
xor
add
das
test
sub
jo
cwtl
sti
xchg
hlt
arpl
and
fidivrl
mov
in
negb
pushf
decb
es
inc
pop
push
lock
dec
pop
in
add
and
add
sbb
add
stos
repz
rcl
lock
mov
in
or
xchg
cmovs
shrb
aaa
stos
adc
hlt
jnp
push
fcom
not
dec
andb
imul
and
adc
mov
jne
dec
sub
and
jmp
and
xchg
and
bound
and
mov
mov
pop
aas
inc
jp
or
pop
clc
add
jl
inc
jg
outsb
nop
daa
jno
pop
pop
das
xchg
cli
and
fs
xchg
dec
fisubs
add
dec
shll
out
and
je
add
adc
stc
aas
test
fadds
in
adc
shlb
dec
sub
push
mov
fs
lock
push
xchg
jmp
mov
dec
jo
sub
mov
popa
xor
fsubrs
mov
push
jmp
jle
mov
call
xchg
or
mov
lcall
out
popf
gs
jle
pop
push
mov
mov
das
mov
push
adc
add
mov
fwait
js
pop
add
add
popa
jmp
cmpsb
das
and
adc
or
pop
push
insl
push
mov
dec
in
mov
fmul
ficomps
or
subb
sahf
test
dec
xor
adc
xchg
js
xchg
push
fsts
mov
enter
nop
jg
add
aaa
and
inc
out
inc
jp
call
adc
or
les
xchg
mov
xor
push
cmp
jge,pn
fisttpl
cli
push
sub
imul
ret
dec
test
in
fisubs
and
sub
cmp
jno
pop
adc
inc
mov
ljmp
dec
mov
adc
mov
fisttps
fs
or
sub
adc
and
sbbb
lods
outsb
mov
jno
sbb
push
test
inc
in
adc
mov
add
test
and
jmp
gs
hlt
push
sub
and
rol
xchg
stc
sub
or
dec
std
in
xchg
xchg
gs
mov
sub
inc
add
dec
add
jmp
push
dec
ret
pop
pusha
add
bound
js
add
dec
sbb
dec
mov
repnz
mov
inc
or
call
pushf
lds
imul
les
add
add
mov
jb
adc
call
push
out
pop
imul
mov
ljmp
add
jbe
jns
mov
fsubs
mov
hlt
xchg
lock
adc
add
dec
jb
sbb
ljmp
or
add
mov
mov
pop
mov
xchg
dec
dec
cli
test
outsl
sahf
dec
ja
mov
jle
je
sbb
xchg
mov
push
or
or
sub
cmp
fistpll
cltd
cmp
xor
lock
iret
pop
cmpsl
das
fisubrs
lcall
cmp
add
dec
mov
sbb
pop
add
popa
sub
sub
add
adc
adc
cmc
das
pop
push
mov
cmp
add
xlat
or
mov
inc
mov
aaa
je
add
and
lock
scas
stos
xchg
popf
add
pop
cmp
jnp
mov
aas
inc
add
adcb
and
pusha
add
add
add
scas
jg
lods
fldt
add
aas
cs
add
test
fbstp
es
mov
dec
jp
lds
inc
push
add
stc
mov
add
mov
lcall
outsl
repnz
inc
nop
pop
add
add
push
mov
cmp
jnp
add
sbb
popa
jecxz
cmp
inc
pop
add
mov
inc
add
fs
add
imul
mov
mov
rorl
addr16
lret
out
add
fstps
repnz
push
mov
push
int3
dec
stos
add
or
add
or
ja
add
mov
rcl
pop
xor
fisttpll
mov
ret
fs
adc
inc
sub
dec
sti
mov
pop
rolb
jne,pn
mov
aaa
call
inc
mull
loopne
xor
rcr
lods
gs
add
add
cmp
push
pop
push
cld
scas
dec
mov
aaa
mov
mov
cmc
push
int
jp
pop
cmpsl
add
bound
mov
jg
ret
add
xchg
jge
push
cmp
pop
lcall
clc
push
inc
mov
add
push
clc
pop
push
xlat
pop
loop
out
jge
push
and
add
adc
cmp
stos
add
cwtl
push
divl
add
or
rcrb
js
add
jmp
ljmp
mov
pop
push
mov
adc
popl
popf
add
cmp
jl
pusha
push
cmp
pop
pop
in
dec
inc
loop
shrb
and
or
imul
sarb
and
and
adc
mov
xchg
fdivl
jne
push
add
dec
jle
fadd
jae
add
lds
lods
add
jg
mov
xchg
add
dec
repnz
insb
or
imul
lahf
ljmp
dec
lcall
inc
je
jg
add
shrl
cmp
cmpsl
orl
loope
jne
xchg
push
shlb
add
push
dec
push
outsb
jg
mov
xchg
nop
test
lods
dec
push
fucom
and
cwtl
sub
dec
inc
mov
and
xchg
mulb
movsl
pop
cwtl
cmpl
hlt
jle
fs
adc
or
out
test
hlt
cmp
js
and
pop
cmp
pop
pop
dec
sbb
xchg
in
jbe
and
das
sub
sbb
jl
lds
adc
inc
test
mov
movb
jp
pushf
or
mov
ss
cmp
jle
xchg
pop
push
out
add
and
sbb
xchg
or
loop
xchg
mov
into
negl
sbb
jno
add
dec
mov
add
stc
fsubrl
cmp
mov
cmc
mov
popf
mov
mov
xchg
or
pop
xlat
es
adc
mov
shrb
add
push
icebp
pop
or
mov
adc
xchg
push
jp
xor
mov
adc
pushf
test
lcall
push
lret
inc
pop
insl
mov
jmp
adc
pop
inc
mov
sti
cmp
mov
sub
add
imul
popa
mov
stos
dec
call
bound
rolb
cmp
xlat
ret
push
pop
mov
mov
faddp
aas
xor
mov
sbb
push
and
xor
fmull
cmp
mov
mov
xor
xor
adc
shrb
and
adc
ds
js
inc
std
dec
loop
mov
pop
push
pushf
movsl
push
add
addl
popf
xor
shrl
push
ret
inc
daa
jo
cmp
or
in
add
outsl
cld
mov
mov
repz
nop
imul
popf
popa
jns
add
sbb
add
fstpl
sub
lds
hlt
jo
cmp
roll
lcall
push
mov
or
repz
jbe
jge
loopne
push
mov
adc
sub
mov
fcom
div
repnz
dec
or
push
mov
bound
xchg
push
insb
cmc
icebp
loopne
shl
or
mov
xchg
andb
jb
mov
loope
add
shlb
or
add
and
daa
jmp
out
mov
ljmp
or
push
jnp
icebp
push
mov
inc
xchg
adcb
out
das
loop
nop
sar
aas
dec
xor
inc
push
cmp
jne
mov
push
and
std
add
aas
or
testl
das
call
sbb
push
leave
mov
ret
test
inc
mov
jne
adc
pushf
add
hlt
in
cmp
adcb
out
jmp
lods
xor
insl
sub
popf
fsubs
or
lahf
int3
mov
mov
lea
gs
mov
sub
cmp
xor
in
add
adc
mov
lcall
pop
and
ljmp
outsl
mov
movsl
sbb
mov
hlt
push
arpl
mov
jo
push
add
xor
outsl
or
mov
sub
shrb
das
mov
ds
add
dec
test
jge
mov
jns
mov
xchg
fs
movsb
subb
das
negb
add
jne
sti
mov
rolb
jp
popf
cmp
cmp
jne
dec
or
pop
lods
mov
sbb
add
adc
pop
xchg
shlb
lea
dec
cmp
push
rcrb
test
loope
jg
or
xor
popf
add
leave
cltd
add
nop
xchg
push
enter
add
inc
pushf
add
add
cltd
or
add
push
or
add
push
fwait
sub
mov
pop
push
add
adc
sbb
iret
popf
fldl
leave
les
fsubl
pop
lea
mov
int
push
mov
pop
add
iret
roll
mov
push
push
dec
add
cmp
jg
add
mov
out
sub
jp
xor
scas
cmp
out
xor
mov
add
adc
pop
es
dec
nop
and
insb
adc
bnd
xor
and
sub
mov
int
jno
jl
arpl
adc
pop
inc
add
pop
xchg
sub
add
xchg
loopne
lret
testl
adc
pop
ss
int
pop
xorl
add
cld
or
push
inc
lea
jne
iret
dec
inc
pop
and
sub
push
mov
ret
pop
adc
or
inc
cmp
call
imul
xor
mov
test
mov
aaa
push
xchg
ljmp
push
mov
aam
xlat
cmp
jb
pop
sbb
sbb
arpl
hlt
adc
adc
bound
out
xorl
das
es
jl
add
and
ficoms
push
cmpsl
sub
popa
xchg
inc
fdivrs
es
inc
sbb
scas
cltd
inc
jne
mov
pop
rcrb
fwait
or
in
push
dec
int
add
xchg
push
aas
mov
cmpsb
cmp
jae
repz
lahf
in
add
lret
add
dec
sbb
mov
je
mov
xchg
testb
addl
mov
xchg
icebp
add
sub
pop
add
mov
sbb
pushf
xchg
cwtl
xchg
jno
pop
mov
add
popf
repnz
fdiv
cld
int3
bound
test
test
loopne
roll
push
push
aas
dec
inc
cmp
or
mov
push
pop
jne
jbe
ds
test
mov
test
mov
loopne
mov
jp
jecxz
push
add
adc
push
hlt
lret
add
dec
cli
pop
dec
cwtl
in
add
mov
in
shl
je
rolb
imul
data16
xor
mov
jg
dec
inc
clc
pop
aas
mov
popl
clc
dec
movzbl
in
fwait
add
push
addb
mov
fldl
inc
cmp
or
ret
cwtl
add
scas
fiadds
jnp
jne
xchg
std
add
jb
out
or
aas
jecxz
add
push
jp
inc
cli
add
jge
mov
arpl
sub
stos
xor
and
add
add
sahf
pusha
loopne
add
ret
fldcw
es
sub
ret
push
dec
add
imul
add
xchg
imul
subb
scas
rorb
add
cli
int3
adc
xchg
add
mov
les
dec
add
rorb
add
add
repnz
sbb
adc
sbb
xor
in
cld
sub
and
push
jge
add
test
xor
pop
add
aaa
push
jp
pushf
scas
sbb
in
xchg
test
mov
rclb
pop
mov
arpl
ret
mov
into
stos
mov
cmp
add
repnz
scas
add
fcmovnb
and
sarl
cmpsl
adc
mov
cmp
fiadds
sarb
add
mov
inc
iret
push
pop
fidivrl
add
jnp
inc
ljmp
mov
mov
sub
lret
mov
pcmpgtd
les
dec
adc
mov
add
jge
repz
loop
std
dec
in
fstpt
lea
jns
pop
lods
call
icebp
test
push
lret
add
dec
fs
push
sub
bound
add
push
testl
mov
outsb
ja
xchg
xchg
push
add
decb
inc
jp
mov
incl
xor
pop
outsl
js
xor
in
cwtl
and
pcmpeqb
mov
sbb
in
xor
add
and
or
inc
xor
push
incb
sbb
xor
pop
sbb
incb
jle
fwait
mov
add
dec
or
js
filds
lock
scas
inc
test
push
mov
pop
add
jg
insb
cwtl
xor
xchg
push
pushf
sub
sbb
add
mov
das
fidivrl
cwtl
sub
mov
cmp
push
fdivrs
xchg
int3
xchg
lock
add
mov
xchg
pop
call
loopne
jecxz
mov
inc
int3
and
add
ss
adc
ljmp
sbb
xchg
mov
daa
fnstsw
xor
dec
cmp
fld
jbe
xorb
test
aaa
mov
test
negb
daa
add
dec
popa
outsl
dec
pop
rorl
add
std
test
loop
push
in
pop
xor
nop
add
mov
rclb
movsl
add
xor
and
inc
sbb
jo
leave
in
rcll
push
xchg
sub
fadd
push
mov
aad
testl
sti
add
xor
jl
xchg
roll
jge
sar
add
lock
fiadds
fnstenv
mov
add
clc
mov
sbb
add
inc
outsl
aaa
aas
in
loope
fs
xor
shrb
add
ret
pop
sub
add
jae
push
add
es
cmp
pop
xlat
test
bound
sub
test
mov
mov
lock
push
xchg
dec
dec
push
jmp
add
outsb
mov
and
inc
std
jg
jae
test
mov
adc
loopne
sub
add
test
jecxz
fadds
outsb
jne
mov
jmp
add
mov
and
andb
xor
add
arpl
scas
cwtl
pop
add
out
rclb
pop
pop
hlt
inc
sub
cs
adc
cmp
add
orl
jb
add
lret
jge
cmp
push
jne
nop
std
stc
push
pop
fsubrs
sub
data16
mov
jp
mov
xorb
cmpsb
push
push
daa
pop
std
insb
push
nop
xorl
scas
add
jg
xchg
mov
pop
mov
add
mov
add
lahf
add
add
ret
movsl
inc
std
add
je
fldt
jg
fildll
push
cmp
cmpsb
insl
lea
repnz
mov
pop
add
sbb
and
and
jmp
or
sub
sub
mov
loope
add
jmp
jmp
jae
hlt
pop
push
pushf
xor
or
add
pop
xor
test
pop
add
cmpsl
hlt
lods
push
sub
stos
add
and
outsl
push
cmp
add
xor
or
out
fsubl
jae
cli
aam
xchg
inc
push
fs
mov
adc
rclb
jp
loope
lods
je
mov
dec
loop
pop
ret
shlb
sbb
xchg
add
insb
icebp
shlb
add
push
orb
xchg
add
das
push
ss
cmp
add
mov
jbe
pop
push
mov
jnp
pop
cld
jae
add
jg
outsl
std
out
addl
add
test
data16
fs
out
adcb
je
add
push
inc
or
mov
sbbb
sbb
sub
add
push
std
pop
int3
xchg
mov
out
icebp
mov
add
add
mov
test
cli
hlt
add
wrmsr
inc
insl
loopne
lret
pop
add
lods
cmp
and
mov
xor
lods
jnp
add
fcoml
out
out
stc
xchg
ljmp
jl
mov
add
inc
jns
add
rorl
xor
add
jo
or
cmp
sub
or
and
add
add
adc
aas
cwtl
cwtl
cmp
scas
xor
and
lret
test
sub
cmc
mov
dec
movsb
mov
rclb
push
jns
add
push
mov
mov
push
push
sub
cltd
inc
push
sarl
add
sbb
stos
dec
int
imul
mov
daa
mov
popa
add
in
add
arpl
add
jp
inc
test
loop
add
mov
cmc
movzbl
rolb
adc
fldl
mov
adc
add
xlat
push
pop
add
xor
leave
jl
mov
xchg
fcomp
mov
jnp
jae
jg
lahf
add
stos
enter
jne
add
sub
pop
data16
xchg
push
adc
cmc
add
and
add
scas
push
fidivs
add
and
inc
or
mov
xor
ja
and
es
add
ljmp
mov
mov
loopne
popf
mov
dec
cmp
inc
add
pop
stc
mov
cmpsb
lret
adc
negb
test
fs
jae
iret
xchg
loope
mov
pusha
sarl
xchg
sarb
lahf
call
movsl
jno
add
and
cmc
add
dec
sub
xorb
jb
xor
mov
pop
lods
imul
mov
add
pushf
enter
jb
add
push
movsl
ss
int3
pop
add
adcb
adc
jne
lds
sub
divb
xor
sti
add
es
adc
or
adc
lret
mov
fistps
adc
mov
pop
inc
and
push
xor
adc
mov
add
push
add
pop
orb
or
add
mov
push
add
mov
daa
mov
mov
add
fadd
fists
jg
xor
into
daa
mov
cli
test
sti
out
mov
cltd
mov
es
stos
gs
mov
pop
imul
mov
inc
dec
fwait
lods
pinsrw
test
and
sbb
cmp
add
jne
pop
push
jb
add
add
das
lock
and
push
lret
add
aad
xor
pop
or
inc
mov
jbe
add
and
cmp
or
add
xor
mov
mov
cmpsb
rolb
pop
mov
data16
in
pop
sbb
pop
inc
cmp
loop
jecxz
rcll
mov
sbbl
ds
gs
inc
idiv
lret
push
loope
and
sbb
mov
cld
in
push
add
stos
outsl
pop
cmovg
cmp
rol
idiv
inc
sbb
sub
stos
cmp
adc
mov
xor
adcb
adc
outsb
sarb
cmp
jp
cmp
cli
cmc
dec
inc
loopne
aas
mov
enter
add
sub
adc
lahf
xchg
loopne
mov
and
insl
add
daa
enter
jle
aam
scas
mov
adc
insl
call
sti
add
push
jmp
fmul
add
cmp
and
mov
push
jb
mov
sbb
gs
stc
push
sar
aad
jle
cmp
or
subb
mov
or
cmpsl
mov
pop
and
nop
mov
outsb
dec
daa
das
jmp
pusha
xchg
dec
int3
stos
adc
mov
inc
dec
enter
je
mov
cs
repnz
loopne
sub
inc
fdivrs
pop
orb
icebp
push
out
mov
ds
cmp
push
call
mov
pushf
vdivps
xor
add
cmp
cmp
addl
lods
outsb
clc
mov
xchg
sbb
ds
test
aaa
sbb
stc
jbe
inc
imul
lea
test
insb
mov
mov
add
pushf
stos
push
cmpb
push
add
scas
xchg
dec
add
hlt
es
cmp
push
add
pop
sub
lods
add
das
jbe
call
xchg
cwtl
add
fcoms
or
insl
add
aad
scas
push
outsb
loop
andb
popf
jno
pop
add
ret
mov
loope
stos
xor
shrl
cmp
add
mov
add
test
mov
inc
add
mov
mov
xchg
pop
cmp
subb
into
iret
sub
imul
sbb
pop
in
sbb
mov
loope
stos
addr16
cmp
pusha
add
cli
add
add
lods
or
es
clc
lahf
inc
xchg
mov
add
mov
sbb
mov
jbe
nop
mov
xchg
das
xor
add
popa
loopne
xor
push
pop
xor
bnd
push
or
push
es
popf
add
test
or
push
jo
add
aad
xor
enter
std
dec
add
mov
sbb
or
adcl
test
push
mov
sub
lea
cwtl
dec
mov
insl
out
cmp
mov
nop
add
mov
loop
sbb
add
pop
dec
arpl
test
sbb
adc
cmp
and
xor
dec
push
xor
add
xor
dec
mov
in
imul
or
mov
add
push
jp
add
adc
repz
sub
fs
xchg
popa
shr
and
xor
in
pop
mov
and
sbb
mov
lods
inc
add
dec
cld
pop
or
dec
push
das
fadds
lcall
scas
mov
scas
add
mov
dec
pop
pop
or
cld
xor
push
ds
sub
sbb
jno
push
add
inc
push
scas
popa
rorb
mov
mov
add
lret
rol
pop
bsr
jo
popa
mov
outsb
out
cmp
fstl
hlt
lcall
retw
mov
push
lret
add
mov
ficoms
mov
pop
jp
or
xchg
push
pop
lea
pushf
push
push
sbb
nop
movsb
inc
inc
int
fstl
stc
add
sub
int3
out
mov
add
adc
pop
in
add
test
mov
out
movsb
xchg
es
repnz
in
pop
mov
out
or
ja
ficomps
inc
rcll
and
push
add
xor
xor
push
pop
stc
je
add
sahf
nop
xchg
loop
in
pushl
int3
push
xor
ja
and
adc
and
push
in
cmp
add
push
mov
push
cltd
repz
cmp
add
stc
repnz
cs
add
sbb
mov
jg
testb
adc
inc
js
add
icebp
lea
loopne
pop
ljmp
sub
add
mov
mov
jae
ja
add
sub
sub
xchg
push
dec
add
mov
pop
mov
jo
pavgw
call
push
stc
pushf
add
cmp
addb
orb
arpl
ss
adc
add
dec
repz
xchg
add
sub
sbb
div
jl
push
cmp
in
add
xchg
ret
cmc
xlat
mov
test
loope
sahf
add
incb
dec
punpckldq
into
faddl
adc
lret
dec
int
dec
xor
mov
out
pusha
ds
lahf
push
xchg
rorb
add
lds
xchg
add
ljmp
push
loop
pop
in
cld
jle
js
xchg
repz
pop
hlt
in
pop
cmpsb
cmp
or
xchg
or
push
jae
imul
add
add
insb
lcall
jmp
into
mov
test
out
mov
mov
add
cwtl
add
jo
mov
dec
ss
out
int
in
pop
cmpb
stos
add
add
mov
cli
shr
add
cmp
rolb
adc
arpl
rorl
std
mov
cmovae
and
inc
aas
mov
push
insl
ret
std
cltd
sar
adc
add
push
sub
add
rcrl
pop
add
jb
mov
popa
imul
jns
adc
inc
shl
add
sub
sub
xor
into
lock
fmuls
sti
scas
dec
cmp
xchg
sub
or
lock
rcrb
add
cli
loopne
rol
js
int
cwtl
cmp
inc
or
sti
add
test
shl
iret
fldl
lcall
add
dec
dec
lahf
jecxz
and
xchg
lods
in
mov
cs
cmpb
or
cld
sub
sub
pop
cmpsl
setg
push
dec
fadd
pop
mov
les
popf
mov
in
sub
shlb
aad
cmp
cmp
xchg
iret
mov
mov
xchg
outsb
idivb
pminub
movsb
dec
mov
pop
addl
xor
fstps
jns
cmp
add
stos
test
adc
and
push
inc
add
cmp
push
jge
shlb
inc
mov
lds
popf
jno
inc
ljmp
and
jns
add
pop
jge
iret
lret
adc
xchg
cltd
call
outsl
in
add
clc
bound
in
pop
fadd
add
dec
cld
add
add
push
enter
ljmp
cmp
add
cmp
or
and
nop
cwtl
sahf
mov
in
push
aam
inc
and
enter
aaa
adc
outsl
inc
xlat
mov
add
adcl
xor
loop
mov
push
rolb
add
xor
add
push
mov
add
mov
jge
add
inc
repnz
mov
lahf
test
push
aam
cmpsl
movsl
nop
sbb
vshufps
xchg
int
xorb
xor
sub
xor
loopne
add
out
cmp
pop
add
push
cmp
dec
mov
mov
lcall
pushf
aaa
shr
test
addr16
lods
or
mov
les
and
flds
push
ljmp
shl
test
mov
out
add
sbb
sub
aad
or
xor
ss
ret
sub
push
mov
sets
pop
fsubp
dec
sub
mov
xchg
lahf
aad
add
clc
xor
fldt
mov
mov
pop
cwtl
lahf
xchg
aaa
add
pop
jb
loop
jne
add
sub
movsl
loopne
clc
call
adc
add
lret
add
mov
xlat
push
push
add
xor
mov
sub
jno
test
mov
dec
mov
sbb
dec
push
repz
xchg
jg
push
nop
cld
or
push
adc
or
mov
and
dec
mov
inc
loopne
mov
push
orb
dec
xlat
in
push
stos
mov
mov
and
out
inc
add
xchg
add
dec
and
in
add
cmc
imul
mov
or
push
dec
push
dec
cli
nop
cs
add
mov
lock
mov
pop
sbb
imul
pop
push
ljmp
faddl
repnz
out
mov
les
mov
shl
mov
es
iret
add
mov
and
jmp
add
aaa
mov
adc
outsb
in
or
ds
xchg
movsl
cltd
je
fidivl
lds
sub
lods
jp
mov
outsb
or
jo
call
nop
mov
into
in
pop
add
add
stc
mov
add
xbegin
pop
add
popa
sub
dec
add
mov
dec
scas
mov
pavgb
dec
mov
flds
adc
add
repnz
cmp
ret
push
add
sbb
ja
and
cmp
pop
leave
test
mov
mov
out
mov
repz
jbe
add
jnp
cs
in
addr16
out
fiadds
shrb
std
hlt
xor
arpl
je
add
mov
pusha
imul
fildl
mov
jb
icebp
in
mov
pop
push
shlb
orb
pop
out
into
mov
andl
and
mov
popf
movsl
sub
push
loopne
out
add
pushf
repnz
mov
jo
aaa
jne
xor
add
scas
mov
sub
xchg
mov
pop
ret
repnz
out
pop
add
xor
fmull
xchg
into
inc
jnp
adc
add
and
add
adc
int
push
scas
add
out
out
repnz
push
sub
xchg
mov
daa
loope
cmc
inc
push
and
mov
pop
adc
daa
mov
dec
add
sbbl
lcall
sbb
fwait
and
add
dec
outsl
sub
jmp
add
inc
push
push
add
pop
pushf
cmp
clc
or
add
sahf
je
or
add
mov
inc
push
cmpsb
push
push
loope
add
stos
push
jns
add
add
jne
add
mov
push
in
lret
xlat
sub
movl
aad
dec
pop
aam
les
mov
aaa
cltd
add
lret
add
pop
xchg
push
xchg
std
add
or
arpl
das
add
movsl
shll
add
sarl
add
and
adc
clc
sub
ljmp
sbb
cmp
fwait
push
add
mov
xor
je
stc
push
and
inc
ffree
pusha
sbb
inc
jno
add
sub
out
jecxz
add
movaps
mov
jmp
dec
and
test
icebp
add
aas
push
push
push
xchg
mov
sub
xor
dec
cmp
add
out
ret
je
rclb
clc
out
in
adc
testl
sbb
faddl
pop
pushl
push
lret
mov
xchg
mov
jmp
jp
jecxz
cmp
in
add
mov
mov
adc
das
xchg
add
int3
sbb
dec
add
rol
addr16
cmc
inc
add
lret
out
add
std
mov
stos
adc
xchg
es
or
out
and
push
cmc
int3
add
sbb
outsl
movsb
xchg
xorb
sub
cmp
jp
loopne
outsl
das
out
jecxz
sub
sub
loopne
aad
adc
xchg
push
and
mov
mov
add
cltd
inc
inc
jbe
addr16
dec
add
mov
cld
lds
inc
popa
add
sbb
std
sarb
leave
and
cwtl
add
repz
sahf
xor
or
imul
shr
push
cmp
lods
sbb
add
dec
fsubl
add
and
mov
mov
sbb
pop
dec
pop
and
adc
int
pop
ja
or
add
loope
or
mov
sbb
pop
and
ja
in
mov
jmp
jno
xlat
int3
icebp
add
push
xchg
mov
push
jg
test
inc
shlb
sub
xchg
es
imul
sub
jns
add
addb
sahf
jae
jecxz
add
rorb
xchg
adc
cmpsl
pop
sti
add
ss
mov
dec
sub
popl
xchg
shlb
addr16
jmp
jge
roll
add
pushf
mov
add
mov
adc
push
addl
aam
call
gs
adc
ljmp
jbe
mov
cmpsb
and
dec
rclb
movlps
add
fstp
xchg
mov
aam
push
inc
ss
sub
shlb
xchg
pop
out
add
mov
paddw
lds
mov
imul
or
sub
add
aam
or
vmovaps
add
pusha
sbb
outsl
jl
addl
iret
popa
xor
movsb
icebp
roll
mov
daa
push
xchg
loope
add
cmp
pop
jbe
inc
int3
sub
inc
hlt
cmp
lret
je
cli
and
xlat
dec
cmp
add
into
shrl
mov
sahf
cmp
clc
cmp
and
mov
add
xchg
loop
fmull
add
fmuls
roll
add
fdivp
daa
ja
sub
shll
adc
andb
xchg
dec
aas
in
inc
insb
fldl
add
test
dec
add
mov
push
lock
mov
mov
xlat
cwtl
mov
inc
or
hlt
popa
add
push
mov
add
cmc
add
das
dec
add
movsl
inc
idivl
add
repnz
insb
dec
loop
xlat
jmp
xor
outsl
mov
pop
jg
add
enter
mov
pop
push
test
rcll
shrb
add
jb
addb
sub
lret
pop
imul
sub
push
dec
add
adc
mov
adc
xor
iret
add
push
scas
fnsave
add
aad
sarl
add
cmp
add
test
ret
push
in
jb
scas
icebp
mov
nop
jmp
push
pop
bound
lods
adc
fnstenv
dec
add
ljmp
movsb
xchg
jb
les
jnp
int
testb
mov
add
je
test
fildll
sahf
mov
inc
push
add
hlt
or
sub
push
add
pusha
jmp
push
mov
call
jecxz
dec
sub
jg
push
adc
mov
fwait
add
sub
ljmp
add
sbb
and
cltd
roll
hlt
xlat
frstor
mov
add
pushf
lods
jge
mov
mov
sbb
add
scas
in
mov
xor
inc
lea
jbe
notl
mov
inc
add
stos
pushf
in
int3
add
aam
dec
push
inc
add
mov
add
inc
test
out
or
in
xchg
loop
or
adc
bound
aas
cmp
arpl
cmp
xor
pop
std
movl
fdiv
pop
fldl
icebp
adc
cmp
ror
into
jbe
pop
jecxz
aas
add
dec
je
lock
sti
jl
popf
push
mov
or
xor
repnz
lods
push
mov
mov
mov
nop
dec
or
cld
cs
push
mov
cmp
pop
and
pop
mov
jns
call
mov
pushf
rcrl
inc
mov
adc
sub
add
dec
or
daa
insb
andl
pop
mov
aad
add
lea
outsb
sub
scas
ljmp
jmp
xor
dec
add
iret
pop
lods
add
and
dec
and
add
loopne
push
mov
sub
mov
mov
pop
sub
lret
jmp
mov
into
aad
jg
jno
push
nop
mov
out
xor
push
and
dec
stos
js
add
into
and
mov
sarb
test
xchg
pop
jne
and
push
xor
jae
std
imul
lods
mov
add
xor
mov
cmp
adcb
mov
inc
xchg
sbb
add
rcl
mov
inc
in
mov
lret
xor
rolb
xchg
lods
add
movsb
mov
addr16
rclb
scas
dec
call
je
into
pop
jge
fs
add
inc
dec
lret
fsubr
insb
xor
inc
cwtl
fistpl
jnp
add
xchg
cmpsb
test
add
xchg
inc
in
add
mov
rorl
push
sub
mov
xchg
cmp
mov
nop
ficoml
add
pop
jno
add
mov
pop
add
pextrw
mov
rclb
add
and
icebp
mov
and
sub
ja
add
jns
mov
mov
jp
mov
in
sub
add
sbb
rcrb
add
jmp
mov
mov
pop
mov
adc
pusha
jl
and
negl
in
mov
roll
dec
insl
add
jns
push
leave
and
and
jae
adc
lods
push
call
testb
testl
les
jmp
jo
mov
mov
popf
or
sub
lcall
outsl
data16
and
scas
and
xchg
scas
push
pop
mov
push
js
sub
xor
das
stos
jae
push
rolb
jno
stos
sbb
adc
mov
and
mov
add
jg
ss
test
push
sbb
lods
xorb
lahf
es
add
into
or
inc
mov
pop
push
dec
or
xor
xchg
xchg
add
pop
out
decl
jnp
mov
fcmovnbe
jnp
add
push
mov
loopne
divb
std
shlb
iret
or
mov
outsb
add
nop
int
repz
cwtl
add
loope
pusha
push
popf
or
dec
push
lds
add
sbb
aam
enter
xor
mov
dec
adc
jns
mov
lods
cs
mov
sbb
and
mov
sub
xor
loope
addr16
ja
pop
fs
push
pop
sub
xor
stos
fwait
push
fnstcw
outsb
push
push
and
push
jo
nop
das
call
xlat
xor
adc
pop
sub
gs
stos
pop
jno
sbb
loopne
and
aaa
mov
and
test
lahf
mov
inc
push
adc
lahf
sahf
mov
sbb
sub
inc
ficomps
stc
xor
or
xchg
add
in
outsb
vpcmpeqw
mov
mov
sahf
rorl
jbe
jl
add
or
push
in
push
lock
or
fisttpll
xor
aaa
add
ret
movsl
out
mov
mov
sbb
inc
es
roll
jmp
call
sbb
scas
sbb
dec
jne
mov
and
popa
jno
mov
cld
xchg
jo
fidivrs
shll
punpcklbw
js
add
xor
cmc
ss
pop
rcrb
fdivrs
add
adc
jnp,pt
les
and
mov
or
sbbb
lret
adc
cli
add
in
les
repz
andl
lret
jmp
add
dec
aaa
sub
pop
xlat
add
imul
pop
call
rorb
lret
insl
mov
add
imul
xor
pop
jo
fs
and
sbb
sahf
rolb
push
or
cmp
add
jns
jecxz
mov
add
popa
mov
into
fmul
xor
jns
int
mov
aaa
fmuls
sti
cmpsl
jl
outsl
pusha
xchg
test
push
jle
out
shl
fadd
xchg
xorb
add
mov
cmp
mov
add
lret
jne
add
sub
clc
cmp
addb
jne
fdivrl
jnp
jae
add
jmp
pop
test
cmp
xlat
jo
dec
lret
or
out
out
push
adc
jne
pop
addr16
sbb
sbb
sub
mov
add
dec
mov
out
xor
test
and
ja,pn
add
cmp
pop
jne
sbb
add
push
cmpsb
add
xchg
or
jg
ret
mov
inc
sahf
scas
add
aas
in
add
sbb
mov
xchg
add
scas
inc
sbb
inc
ss
jge
cs
outsl
sub
fstp
shlb
pop
repz
jno
out
jmp
mov
movsl
xchg
xchg
ret
mov
add
cmp
pop
xor
add
pop
inc
inc
popf
in
ljmp
push
adc
pop
mov
jp
movsl
dec
lods
add
ds
push
add
test
bound
je
in
mov
pop
es
inc
fcomi
arpl
les
push
mov
cmp
mov
push
into
push
icebp
iret
out
jp
call
xlat
mov
bound
xor
icebp
add
jl
into
addb
shld
sub
and
mov
fs
jmp
mov
fcmovbe
cmpsb
leave
aam
int3
add
push
push
push
dec
xorl
xchg
or
mov
mov
xor
jb
rcll
iret
sbb
adc
fwait
cmp
call
es
bound
jg
mov
and
push
or
aam
fiadds
sub
and
ret
adc
mov
int
xor
insl
lret
add
ja
pop
ljmp
add
iret
lods
or
add
xor
jnp
pop
xor
adc
inc
fwait
mov
divl
outsb
pop
stos
cmp
out
and
mov
cs
in
sub
insb
sarl
leave
add
pop
mov
dec
movsb
xchg
iret
popf
int
jecxz
in
add
pop
daa
push
cld
inc
pop
hlt
add
mov
subl
aaa
inc
cmc
add
xor
xor
adc
out
js
inc
orl
mov
in
sti
sbb
mov
add
rorb
cmp
or
mov
lea
in
xor
aas
hlt
cmp
lret
add
or
jae
cmc
mov
jnp
fcmovb
cmp
scas
stos
movsb
iret
and
and
cwtl
xor
jl
sub
push
xchg
inc
insl
rcrb
rcl
add
into
lock
jg
push
dec
int3
dec
ret
stos
and
push
mov
xorb
dec
idivb
pusha
es
add
cmpb
lcall
sbb
rsm
or
xor
fcmovb
fistpll
jb
js
lea
mov
push
into
test
pop
adc
sbb
mov
add
roll
les
jg
dec
jmp
jge
flds
mov
sbb
or
inc
faddl
mov
stc
aad
lods
xchg
cmp
adc
push
sub
cmp
mov
lds
add
ljmp
enter
jp
mov
mov
add
incb
jle
add
pop
dec
lock
lock
gs
mov
xchg
scas
andb
fnstcw
mov
push
jns
add
outsl
inc
push
adc
aam
lea
das
movsb
sar
ds
shll
arpl
rorb
push
lahf
add
js
mov
or
push
add
xchg
xchg
cmpsl
lock
stos
add
mov
test
scas
xor
repnz
stos
or
sub
jb
jo
movsb
inc
jne
add
int3
and
or
pop
ljmp
jg
sahf
ss
mov
dec
dec
push
filds
mov
push
add
bound
push
sub
mov
mov
jle
push
cmpsb
aas
test
and
fcomps
aam
mov
add
inc
jge
xor
call
sub
jecxz
dec
in
cmc
paddb
pop
push
je
push
pushf
call
iret
call
sbb
mov
mov
int3
add
sub
mov
std
inc
lahf
xor
clc
add
push
inc
adc
imul
xor
insl
xchg
out
fisttpl
mov
sti
add
fbstp
cmp
mov
mov
cld
jmp
notl
test
mov
mov
add
cmp
leave
stos
pop
mov
add
std
sub
loopne
fisubl
mov
lds
lock
mov
sub
inc
add
in
shlb
mov
sbb
add
push
push
jp
jmp
sub
loop
or
inc
inc
xchg
popf
stos
and
les
pop
sbb
arpl
sbb
je
xchg
add
add
xor
fiaddl
pop
out
inc
loope
add
adc
xchg
dec
jecxz
hlt
aas
clc
jmp
sbb
rcll
mov
pushf
adc
jae
arpl
lods
lret
stos
outsl
push
sahf
shl
dec
xchg
repz
and
es
mov
sub
add
xchg
cmc
xchg
jo
push
mov
lods
pop
inc
dec
addr16
mov
call
cmc
pop
mov
add
xor
cmpsl
fimuls
mov
push
fdivr
push
pushf
pop
ds
mov
lods
orb
mov
jmp
aam
xchg
mov
cld
stos
xchg
or
pop
jmp
es
inc
hlt
pop
sub
cld
roll
aaa
into
jle
sbb
je
pop
imul
repz
mov
add
stos
mov
call
pshufw
popf
or
inc
mov
fs
jmp
mov
dec
push
add
push
xchg
sbb
js
out
and
pop
leave
cmp
mov
jne
and
mov
xchg
incl
sbb
or
ljmp
in
pop
mov
dec
add
add
dec
cmpsl
mov
repnz
inc
add
push
push
repz
js
inc
sbb
jae
cmp
inc
lret
sbb
add
cli
mov
sahf
sub
add
lds
rolb
jb
cwtl
inc
icebp
dec
push
add
mov
jmp
and
cs
push
adc
imul
jle
fcomip
out
pop
shll
add
push
jo
in
cmp
test
into
int3
push
pop
add
and
add
jl
xchg
incb
add
sub
imul
daa
shlb
sub
pushf
or
cmp
jnp
jae
add
popf
xchg
das
inc
pusha
stc
add
xchg
pop
repnz
mov
lds
xchg
xchg
push
pop
mov
out
add
xchg
call
and
add
std
mov
int
inc
repz
loope
push
das
lds
add
add
pop
inc
fildl
add
jnp
mov
pop
lahf
add
dec
lret
mov
jl
pop
gs
rcr
pop
or
pop
jns
cmc
lods
or
shll
add
pushf
lret
idivb
inc
add
xchg
xchg
add
lds
loop
rolb
push
mov
ffreep
add
in
adc
adc
sub
lcall
jnp
ljmp
xor
cld
fs
repnz
sbb
sub
std
pop
inc
das
pusha
push
mov
or
out
or
cli
and
add
adc
add
lock
push
out
add
ret
push
test
add
nop
test
out
push
sub
pop
add
fldl
stos
iret
hlt
loopne
pop
decb
add
dec
or
ss
sbb
adc
iret
xor
push
push
or
jae
and
ja
inc
sub
je
and
jp
add
outsl
inc
test
insl
jb
ljmp
inc
dec
push
test
js
and
stos
jecxz
gs
dec
adc
mov
or
ja
push
int3
cmp
sub
dec
int3
insl
fists
xor
xor
imul
push
inc
xchg
sbb
pushl
mov
push
xchg
sti
test
jo
dec
sbb
cmc
dec
pop
mov
cmp
test
cmp
js,pn
xchg
push
adc
scas
sbb
push
nop
push
or
mov
adc
lret
out
mov
push
sbb
push
pop
mov
pop
mov
in
aas
lret
sub
inc
push
pop
jg
fimuls
fs
or
dec
adc
sub
xor
xchg
les
test
mov
sti
ret
cmp
and
mov
call
adc
add
mov
and
pusha
cmpsb
or
pop
cwtl
in
or
ret
or
in
or
call
out
xchg
sub
enter
or
or
sbb
mov
gs
popa
popf
dec
jae
sbb
fcoms
push
out
sarb
and
push
cli
xor
xchg
xchg
and
daa
jbe
sbb
or
sub
jge
mov
dec
popf
xchg
test
mov
mov
and
dec
out
out
and
inc
incb
int3
xchg
push
or
mov
mov
mov
and
inc
repz
xor
or
and
dec
xor
inc
and
pop
ljmp
xor
popa
adc
sub
mov
dec
and
dec
bound
orl
or
pop
push
xor
cmp
or
and
adc
adc
adc
loop
sbb
and
sub
adc
loop
sbb
cmp
mov
or
or
and
adc
lea
sbb
sahf
arpl
sub
adc
mov
mov
mov
inc
sbb
add
sub
or
stc
shr
movsl
adc
jmp
jg
nop
push
test
and
mov
das
or
adc
inc
dec
sbb
and
add
adc
add
push
add
adc
add
push
add
adc
add
mov
sub
ret
and
xchg
and
inc
add
cmp
or
or
sub
fmull
icebp
adc
sub
dec
dec
xchg
popa
and
mov
and
dec
negl
or
and
pusha
mov
popf
mov
dec
in
cltd
add
adc
cmp
jns
lea
dec
mov
or
adc
call
xor
dec
inc
xchg
dec
and
pop
arpl
jnp
orl
and
mov
xchg
inc
or
or
and
inc
and
xchg
sbb
and
jno
sub
sub
xor
xor
cmp
and
mov
or
rorl
call
adc
lock
jecxz
lock
repnz
adc
adc
push
jg
inc
sbb
loope
and
clc
dec
push
out
inc
sub
adc
jg
inc
xor
clc
inc
cmp
adc
push
ds
add
leave
mov
inc
in
adc
popf
test
test
loope
sub
pop
inc
sbb
sub
mov
mov
rclb
adc
in
cmpsb
push
adc
in
test
adc
in
stos
push
adc
in
lods
jmp
xor
mov
push
cltd
fstpt
std
sbb
push
ret
sub
and
or
cwtl
inc
mov
cwtl
lock
out
les
or
lea
fwait
cmpl
pop
sbb
and
sbb
loopne
adc
nop
test
ds
stos
sbb
outsb
icebp
or
add
addb
add
mov
clc
clc
movsb
adc
lahf
std
jg
movzbl
imul
add
clc
mov
sbb
jmp
scas
aaa
enter
psubusb
sbb
or
fmul
orl
push
jne
cmpsl
sti
add
inc
mov
repz
pop
syscall
or
adc
daa
sub
adc
or
rcll
xchg
jnp
mov
mov
adc
scas
mov
add
adc
or
jmp
jmp
int3
rcll
and
adc
and
inc
mov
adc
jb
adc
mov
mov
xchg
out
push
lods
or
jbe
movsb
jae
sbb
xor
inc
push
sbb
inc
mov
out
jmp
nop
and
sbb
or
movups
enter
dec
cld
add
fisttpll
mov
inc
sahf
ds
mov
and
pop
and
leave
dec
cmpb
mov
mov
mov
xor
mov
push
jbe
mov
aam
mov
mov
aaa
enter
psubusb
imul
mov
push
fstl
and
lcall
mov
push
je
add
or
xchg
or
icebp
add
insl
dec
dec
test
push
mov
push
enter
outsb
stc
jnp
mulb
sub
call
push
jp
and
and
ljmp
xchg
jmp
push
dec
cmp
and
je
imul
inc
add
add
ror
adc
or
lea
and
inc
adc
xorb
sbb
mov
add
inc
adc
cmpsl
mov
mov
sahf
mov
mov
mov
dec
mov
sub
jns
in
push
rorb
jmp
cmpb
jnp
xchg
rolb
xorl
pop
lcall
mov
adc
test
xorb
dec
mov
add
hlt
cmp
popa
cmp
nop
mov
mov
jmp
pop
mov
jb
or
bnd
sub
add
sub
push
xchg
and
adc
jae
sub
adc
sub
or
adc
sub
js
or
je
cmpsb
mov
mov
cmp
jae
bound
xchg
insb
jae
rcrb
stos
and
mov
mov
sbb
cmp
sbb
sbb
sbb
jb
adc
push
jmp
cli
dec
adc
jb
xchg
jae
jb
jae
and
inc
jbe
je
push
jmp
jl
mov
push
pop
fbld
cwtl
rclb
lods
or
test
je
jb
sbb
test
jne
mov
ret
sbb
jbe
frndint
popf
jne
inc
sub
nop
fs
scas
mov
jl
push
mov
push
jo
mov
popf
jne
in
sub
cmp
sub
add
mov
or
inc
out
push
jmp
mov
jne
js
rorl
xchg
adc
sbb
fisubs
call
push
je
mov
bnd
rclb
into
dec
test
lods
dec
lock
popa
hlt
adc
or
dec
dec
or
inc
das
dec
addl
lock
data16
mov
add
push
arpl
rolb
in
jmp
shrb
aam
addb
sub
jne
aad
jle
and
and
adc
add
sub
mov
gs
mov
call
and
adc
lods
and
push
add
fldcw
fmulp
adc
clc
or
int3
adc
dec
aam
jae
jb
inc
cld
xor
xchg
xor
and
sbb
lock
out
add
in
jmp
mov
xchg
inc
cmp
cmp
inc
cmp
inc
cmp
inc
inc
mov
addb
inc
dec
mov
mov
and
dec
scas
xchg
ficompl
cmp
test
mov
add
add
push
add
or
mov
dec
std
mov
mov
adc
pop
add
lea
xchg
cmc
adc
add
int
xor
cltd
adc
and
add
inc
push
pop
add
lcall
loope
and
inc
enter
push
inc
arpl
fldenv
aas
data16
or
addr16
inc
imul
imul
add
inc
xlat
outsb
push
lea
inc
jo
enter
xor
out
push
loop
cmpsb
call
jmp
mov
je
mov
mov
mov
inc
jge
in
sbb
fsts
call
xor
jne
repnz
ss
xor
daa
inc
fsubr
scas
sub
dec
add
pop
movsb
es
xchg
or
call
inc
scas
mov
adc
pusha
fs
lock
xor
aam
or
sub
dec
adc
enter
adc
roll
arpl
and
mov
xchg
loopne
arpl
js
cltd
idiv
mov
test
xchg
out
and
mov
inc
jmp
pop
orl
lock
adc
pop
and
mov
adc
jns
pop
cmp
daa
inc
xor
fsubrl
push
sbb
das
mov
call
mov
inc
sub
negl
call
decl
daa
clc
xchg
daa
movsl
cmp
inc
xor
mov
iret
adc
div
mov
mov
fnstenv
mov
mov
adc
xchg
mov
add
adc
mov
dec
jge
cmpsl
mov
test
ret
mov
lods
xchg
mov
jl
xchg
sbb
pop
adc
pop
mov
add
xchg
testb
lret
pop
mov
imul
jns
xor
adcb
jbe
sub
adc
add
out
je
adc
push
cmp
adc
xor
pop
inc
mov
or
je
jl
insl
xchg
pop
jge,pt
rcl
or
and
lock
cltd
cmp
scas
dec
jnp
lea
fisubrs
xchg
lock
xchg
arpl
iret
mov
insl
inc
push
push
and
or
mov
je
loopne
fdivr
shlb
xor
ja
fwait
sbb
testl
std
gs
lock
xchg
pop
push
std
and
mov
xor
mov
pop
testb
in
out
in
xor
sbb
sbb
daa
dec
cltd
push
inc
mov
rcrl
lea
push
int3
mov
mov
adc
ljmp
je
fcoml
loope
cld
cmp
shlb
bound
popa
inc
es
mov
mov
xor
mov
cmp
sbb
inc
insl
lock
test
dec
push
aas
add
test
push
test
mov
push
push
and
jae
shll
and
push
daa
movsb
push
int
outsl
repnz
dec
sub
mov
jp
fcoms
inc
fs
sub
xchg
adc
sub
sbb
pusha
out
sbb
sbb
pop
cmp
stc
push
repnz
mov
not
movsb
icebp
inc
adc
and
rclb
out
mov
mov
or
sub
jae
fcoml
js
test
jbe
sub
hlt
ret
clc
or
ljmp
push
cli
add
outsb
testb
adc
mov
sbb
add
das
cmp
adc
sbb
add
loopne
dec
je
adc
lret
sub
mov
leave
inc
inc
rorb
adc
push
rcll
sub
add
cmpl
adc
aaa
push
or
lock
and
rcl
mov
shl
into
in
shll
cs
sub
push
jne
push
or
xchg
push
jb
loope
inc
inc
or
cmp
int3
into
cmp
sbbl
mov
push
adc
or
pop
sahf
loopne
ret
push
adc
rclb
xor
mov
inc
pop
xchg
dec
push
sbb
leave
mov
add
jne
and
nop
mov
adc
adc
cltd
adc
sbb
dec
adc
call
test
syscall
cmpsl
push
xor
inc
adc
or
call
xor
inc
mov
lock
cmp
adc
xor
sub
in
xor
dec
adc
or
add
rcrl
xor
test
adc
das
or
and
and
movsl
jnp
popa
jle
add
pop
jno
sbb
insb
nop
addr16
sub
push
jg
and
jno
or
adc
push
xchg
xor
sub
or
dec
adc
rol
inc
sbb
pop
std
inc
sbb
inc
sbb
dec
sub
jne
pop
out
or
dec
and
repnz
pop
dec
lret
ss
mov
repz
xchg
popa
roll
sbb
xorb
in
call
add
out
or
adc
mov
adc
movsl
or
push
aam
loopne
jbe
jnp
pop
dec
test
dec
cmpb
fildl
clc
outsb
jnp
es
nop
fcom
call
movsl
movsl
inc
outsl
dec
sbbb
and
fxch
push
imul
fadds
jmp
shrl
pop
adc
push
add
repnz
ds
dec
cmp
inc
dec
cmpsl
loope
push
popf
or
daa
add
push
scas
or
mov
bound
arpl
std
ret
cmpsl
lock
jmp
and
sbb
decb
jmp
rcrw
cmp
cmc
cmp
and
jno
or
dec
jl
setge
fisttpll
mov
sbb
imul
insl
or
pop
cli
fildl
ret
ss
add
push
in
int3
sub
jmp
jmpw
mov
movsl
sbb
and
dec
sbb
les
mov
mov
pop
or
fldl2t
xor
pop
mov
inc
shr
sbb
sti
mov
or
aam
cli
iret
int
cmp
xchg
stos
ror
nop
add
js
add
sub
lock
adc
cmpl
cmp
stos
cmp
lods
push
dec
rorb
mov
jne
ficompl
sub
or
mov
sub
sub
pop
in
das
enter
add
jo
or
mov
push
cmp
pop
cmp
cmp
lret
adc
push
mov
testb
jne
push
add
mov
sbb
mov
jp
xor
pop
cmpsl
and
imul
or
movsl
jno
push
and
sbbb
orb
add
mov
int3
fwait
fs
arpl
jne
mov
stos
cmp
call
dec
sub
stos
inc
xchg
mov
add
cmpsl
xchg
cmc
outsl
dec
mov
stc
or
dec
lret
fwait
lret
loopne
rcr
add
and
out
xchg
mov
repnz
jb
sti
imul
fucomp
repnz
jle
sahf
and
daa
in
insb
jns
and
addb
add
mov
dec
xchg
xor
and
test
and
push
and
jp
mov
push
sub
cmc
and
das
and
out
adcl
or
dec
inc
push
dec
shr
pop
push
fs
adc
popf
repnz
add
add
inc
push
mov
xor
sbb
out
pushf
sub
mov
lahf
fcoml
jmp
xor
mov
mov
sbb
adc
sbb
push
cmp
dec
sub
and
sbb
mov
adc
sbb
shrl
cmp
jmp
cmpsl
inc
movsbl
or
adc
aad
mov
adc
in
xor
lock
dec
adc
and
adc
mov
adc
aaa
ljmp
scas
jle
lds
and
push
inc
and
pop
and
idiv
or
or
pop
and
push
cs
testb
andb
decb
adc
adc
inc
adc
movaps
add
in
scas
xor
cmp
mov
sbbl
push
xor
or
ds
xorl
and
jae
push
and
add
push
inc
adc
add
lock
xor
dec
pusha
data16
je
cmp
pusha
mov
aas
jno
or
mov
inc
sbb
fcoms
and
mov
sub
iret
and
inc
pop
push
adc
ds
pop
daa
adc
adc
adc
and
call
hlt
push
jmp
lret
mov
pop
mov
add
mov
xor
js
mov
mov
test
cld
jmp
adc
cltd
lret
cmpsl
aas
imul
aad
add
jb
push
mov
call
mov
jb
and
ljmp
andl
dec
outsb
push
fstp
push
shll
mov
jle
or
cmp
out
dec
fnstcw
mov
sbb
pop
push
call
or
lea
jp
push
jae
ret
push
fs
jne
pop
int
nop
jno
clc
cmp
pushf
push
das
or
push
loopne
and
inc
inc
call
fwait
add
push
bound
dec
mov
or
les
mov
popa
add
xor
cld
aad
add
pop
test
lahf
addb
aas
cmova
ss
add
cmp
into
shr
mov
xor
add
test
cmpsb
add
push
imul
jae
divb
add
ljmp
mov
loope
aaa
push
pop
inc
enter
add
jge
loopne
call
inc
mov
decb
jbe
sub
andb
xchg
xchg
or
jmp
add
gs
sbb
sbb
pusha
pushf
mov
mov
push
stc
jbe
aas
ljmp
mov
je
cmp
and
ret
fs
sub
or
mov
xchg
dec
data16
inc
sbb
sbbl
dec
adc
or
sbb
or
sbb
add
add
cmpl
and
pop
sbb
mov
push
xor
pushl
sbb
fildll
and
cwtl
xor
insb
jg
xor
psubsw
push
adc
enter
mov
adc
adc
enter
rclb
adc
fdiv
sbb
adc
inc
sbb
call
jmp
mov
popa
popf
mov
jne
push
inc
lock
xor
stos
loopne
or
nop
adc
dec
mov
imul
fistl
mov
dec
jge
incb
pop
mov
pushf
add
sbb
add
xor
pusha
nop
mov
sub
adc
cmp
jnp
addb
lea
jg
enter
into
mov
jo
xlat
dec
xchg
repz
or
out
aam
mov
in
mov
jnp
dec
decl
cmp
mov
lock
stos
dec
scas
jge
sub
or
jp
addr16
cmp
les
ret
sub
add
rorl
mov
add
mov
cmp
in
xchg
jnp
pop
pop
lret
jp
pushf
test
jne
mov
jle
add
lds
in
test
sub
test
add
bound
mov
lret
add
movsl
neg
icebp
pop
mov
add
adc
jecxz
repz
pop
out
cmp
adc
xchg
push
xor
pop
leave
or
lcall
adc
movsl
push
pop
rclb
out
lret
and
or
mov
push
jmp
push
lods
jp
popl
jle
mov
call
cli
rol
add
testb
enter
pop
and
add
mov
xchg
data16
or
add
inc
movsb
pop
dec
pop
push
addl
adc
cmp
pushf
pusha
pushl
call
imul
mov
sbb
mov
push
in
adc
jl
jmp
push
sarl
and
adc
add
add
xor
movsl
add
jmp
fistps
in
iret
cmp
push
adc
mov
jne
xor
clc
mov
sbb
jne
push
les
je
cmp
jnp
sahf
ss
dec
mov
dec
jbe
pop
ret
fisubrl
push
loop
pop
aaa
mov
dec
and
pop
and
xor
add
xchg
push
adc
rcll
das
mov
jnp
jmp
int
arpl
test
je
cmpsb
sbb
add
push
mov
add
adc
mov
cld
inc
xchg
jg
dec
clc
xchg
cmc
imul
or
inc
call
orb
cmpb
jne
jmp
add
mov
sbb
adc
jne
enter
add
ficompl
add
fbld
pop
add
dec
sbb
sub
push
push
inc
add
mov
daa
hlt
or
and
inc
fsubs
or
adc
nop
mov
or
enter
or
insb
xor
push
adc
lods
or
adc
bound
shlb
xchg
cwtl
sbb
mov
mov
cmp
inc
scas
incl
push
lods
test
inc
add
daa
xor
pop
loop
sbb
sub
or
add
test
int3
fs
cmp
movsb
fs
cmp
jl
sbb
imul
sbb
inc
test
pop
dec
sub
sbb
sbb
sbb
repz
enter
and
sbb
lret
pop
adc
and
adc
and
je
xor
pop
and
pop
lret
rorb
and
inc
sub
cmp
xchg
push
in
insl
mov
test
icebp
in
mov
aam
xchg
and
jb
inc
and
xor
lea
aam
mov
push
mov
push
call
push
sbb
inc
inc
orb
call
je
jmp
test
or
int
loopne,pt
add
ja
dec
paddb
dec
push
enter
jb
mulb
dec
in
mov
mov
cmp
sbb
cmpsb
and
in
adc
in
xchg
inc
mov
fcoms
dec
lahf
sub
pop
adc
push
test
and
push
inc
xor
lea
inc
xor
mov
cmpl
je
jae
fisttpl
push
push
cmp
jb
mov
mov
cmp
into
jae
xchg
and
pop
xor
inc
dec
nop
lahf
pop
outsl
adc
push
cltd
adc
adc
add
aad
rcll
inc
or
push
filds
ret
push
cmpsb
add
test
in
xchg
push
jp
mov
dec
cmp
sub
or
gs
ret
xchg
emms
ficomps
jb
es
ficompl
shll
or
aad
jle
fnsave
and
pusha
mov
pop
pop
xchg
shll
adcl
push
lea
nop
or
enter
jmp
les
xchg
add
xor
xor
ja
sub
out
lods
xor
xchg
dec
or
jb
mov
add
push
enter
cmc
fdivs
push
jmp
loope
dec
push
and
xchg
fstps
pop
outsl
jge
jg
sbb
dec
jno
xchg
push
mov
outsl
and
jns
sbb
and
sbb
mov
push
fiadds
repnz
pop
nop
push
cld
push
xchg
push
adc
and
pop
dec
and
pop
xchg
jge
jecxz
ljmp
lret
push
call
jb
inc
push
fbld
jno
in
cmp
test
and
in
cmp
fbld
jns
in
cmp
test
and
sbb
fisubs
stc
push
sbb
and
xchg
xchg
inc
mov
test
pushf
jnp
mov
lock
sub
in
icebp
in
push
xlat
sub
clc
lret
rclb
inc
scas
xchg
push
mov
add
cwtl
jmp
pop
ljmp
and
adc
mov
xor
inc
push
and
xchg
xchg
sarb
pop
scas
cmp
lcall
cmpsb
cmp
xchg
je
jp
stos
xchg
adc
mov
adc
arpl
out
inc
imul
xor
xor
inc
and
movsb
sbb
adc
and
mov
sbb
mov
push
mov
loope
cs
sub
push
sub
xor
sub
or
cltd
or
popa
push
dec
out
cmp
dec
dec
xchg
mov
mov
sbb
adc
or
mov
dec
lock
add
pop
mov
cmpsl
call
fcoms
clc
mov
inc
inc
ja
cmp
repnz
pop
inc
sti
xor
cmp
in
jb
xor
je
xor
mov
inc
xchg
push
xor
stos
int
ss
adc
ficomps
push
or
sub
pusha
inc
push
inc
jbe
jg
int3
push
rclb
lea
ss
adc
sbb
pop
orb
jmp
inc
out
or
cmc
fs
or
cwtl
mov
dec
push
push
or
call
adc
cmpl
push
imul
push
call
cmp
mov
cmp
cmp
daa
push
and
mov
pop
jmp
mov
lret
or
fsubrs
adc
je
mov
mov
pop
cmp
outsb
inc
test
jl
push
dec
cmp
lea
aaa
ljmp
lds
adc
inc
stos
xor
push
dec
dec
leave
adc
push
sub
mov
push
pop
push
or
subb
rcll
pusha
inc
jmp
mov
out
cwtl
xor
sbb
mov
mov
add
sub
jp
inc
pop
cli
jb
fxrstor
adc
call
jl
in
dec
scas
clc
loope
bnd
push
les
push
or
jbe
jno
sub
sti
into
pop
ret
cmp
addr16
xchg
sbb
pop
pop
add
pop
ss
add
push
in
les
fcoms
fwait
add
enter
push
fistpl
pop
sub
outsl
and
cmp
pop
adc
sbb
push
push
mov
adc
arpl
inc
dec
jne
mov
shlb
mov
sub
and
adc
mov
xchg
jge
jae
lea
rcrb
dec
addl
add
xchg
movsl
mov
hlt
mov
mov
lea
stc
dec
mov
outsb
mov
and
sbb
outsl
and
sbb
add
push
inc
rep
push
insb
sti
add
shll
sbb
fdivs
cld
cmp
add
xchg
sub
scas
pusha
test
fisubrl
fstp
mov
mov
add
in
add
int
lods
push
in
adc
popf
xchg
aam
fs
loop
push
ret
sbbb
movsl
jp
add
dec
pop
xchg
cmpsb
ljmp
jb
movsl
add
ficoms
fld
cmpsb
push
rol
mov
mov
push
rcrb
and
xchg
inc
xchg
je
sbb
add
and
mov
loope
imul
xchg
add
dec
dec
add
and
js
pop
xor
addr16
cmp
sub
inc
mov
pop
in
lods
add
decb
rcrb
cmp
fwait
add
pop
add
inc
aam
es
mov
bound
xchg
jo
dec
je
imul
into
sbb
std
ljmp
fmul
fimull
jbe
dec
sbb
sbb
dec
daa
inc
dec
pushf
fiaddl
test
push
call
jb
mov
add
jge
add
or
mov
inc
test
arpl
aam
jbe
sbb
iret
addb
or
stos
inc
lret
inc
add
cmpsl
and
push
push
mov
int
fcoms
inc
sbb
and
lock
movsl
adc
bound
insb
movq2dq
inc
fwait
inc
inc
lret
lret
jl
repz
cmp
shll
lret
cs
aas
push
mov
mov
add
cmp
in
dec
bound
xchg
mov
stos
dec
add
pop
pop
lds
pop
add
dec
mov
add
bound
cmpsb
pop
test
pop
jae
inc
mov
movsb
add
into
mov
data16
add
or
iret
add
mov
jns
pop
push
mov
dec
add
ret
lock
xchg
shl
out
push
pop
push
insb
jne
jge
jle
outsl
inc
or
daa
dec
add
test
lock
sbb
jg
inc
aas
inc
stos
pop
aam
add
rcr
in
adc
mov
in
testb
cwtl
push
cs
das
scas
test
popa
xchg
adc
cmp
leave
ss
pusha
push
xorl
sbb
cld
add
aas
cli
sbb
sub
xchg
adc
in
or
fadds
xor
dec
movsb
adc
scas
push
jl
add
dec
in
pop
add
sbb
pop
mov
ds
subb
int3
cmp
cli
int
lahf
inc
mov
xor
test
mov
das
push
lods
jo
cmpsb
les
cltd
mov
jl
sub
pop
or
add
push
cmc
push
xchg
add
rcll
test
add
add
jmp
mov
pop
add
inc
mov
or
sahf
cwtl
xchg
pop
add
cmpsl
jb
adc
jae
add
sbb
xlat
pop
jo
test
mov
scas
xchg
dec
ja
push
sbb
lds
sub
adcb
xchg
ss
arpl
sarb
clc
cltd
andl
nop
out
mov
and
in
pop
xchg
ljmp
lods
je
push
sub
or
push
xchg
imul
in
sub
cmp
sbb
mov
psubusw
sbb
adc
add
in
cmp
pop
fdivl
push
add
lods
cmc
add
cmp
iret
mov
lcall
add
xor
sub
xchg
jp
fadd
cmp
xor
jg
xor
push
pop
and
jl
std
adc
xchg
xor
push
pop
fsubs
add
adc
jle
lret
sbb
dec
cld
xor
addr16
aaa
mov
sub
outsb
adc
xchg
lahf
sarl
add
mov
cmc
repz
ss
add
into
js
or
add
mov
je
test
es
cmp
cmc
mov
cwtl
xor
movsb
icebp
pop
push
add
inc
inc
dec
pop
call
and
fwait
jbe
jle
mov
mov
lret
add
or
or
add
daa
test
mov
arpl
or
ja
pop
scas
dec
cmp
or
mov
inc
test
inc
aas
mov
add
push
outsb
xchg
pusha
xlat
jns
xchg
adc
mov
mov
dec
dec
cltd
adc
pop
push
add
enter
scas
into
ds
cmp
push
and
je
scas
orb
add
dec
mulb
add
out
das
sub
addb
sub
stc
mov
inc
loop
inc
xchg
outsl
add
cmp
mov
loope
add
xor
xor
and
add
and
dec
or
add
xchg
daa
mov
shlb
test
sbb
idivb
rorb
jbe
leave
sub
sub
scas
nopl
icebp
fdivs
jbe
jge
xlat
push
add
xor
pop
lods
or
iret
xor
push
push
call
adc
into
add
andb
mov
test
sti
add
add
add
imul
fsubs
repnz
mov
scas
or
ret
mov
dec
pop
flds
xchg
sahf
jmp
push
fistpll
out
mov
ret
add
cwtl
mov
lret
add
adc
hlt
ja
jno
add
mov
ljmp
lahf
int3
test
add
cmp
add
cs
jmp
add
or
dec
xchg
pop
xchg
and
cld
popa
addb
sbb
push
sub
mov
add
movsb
das
fdiv
cmp
mov
push
xor
aad
in
in
add
dec
hlt
mov
lahf
add
mov
mov
mov
addr16
adc
xchg
aad
xor
or
pop
loope
sbb
ret
jge
rcll
ret
sbb
cli
in
das
cmpsl
sbb
test
add
aaa
cmp
pop
cmp
xchg
cmp
addr16
add
insl
and
push
rcr
in
and
sbb
nop
pop
sub
add
movsl
sbb
mov
call
shrb
cltd
push
testb
mov
or
out
test
daa
lds
repnz
mov
sub
pop
popa
mov
lahf
cmp
jle
sbb
xor
mov
xchg
stos
add
lds
addl
subb
stos
xor
fisttpll
add
cwtl
lock
pop
out
add
pushf
str
sbbb
loopne
hlt
xchg
ja
jp
pop
pop
mov
es
inc
pop
nop
pop
jnp
add
inc
orl
fcompl
inc
sbb
mov
pop
and
lahf
fs
pop
push
shlb
shlb
cmpsl
dec
xchg
iret
add
add
lcall
loopne
pop
fdiv
cwtl
jmp
jl
mov
imul
or
sahf
adc
jns
sbb
fs
jle
xor
inc
lcall
add
mov
pop
movsl
gs
mov
setno
test
test
fisubs
stos
mov
outsl
sub
mov
sub
out
out
add
cmp
call
add
outsb
lcall
pop
cld
mov
mov
mov
jbe
lret
pusha
pusha
cs
mov
add
lods
lds
arpl
inc
inc
cld
add
out
idivb
xor
test
and
pop
cmpsb
adc
mov
jno
btc
dec
cmp
mov
and
sub
add
jns
cltd
sbb
imul
push
mov
loopne
and
das
mov
hlt
jno
adc
mov
jne
add
and
jg
push
jmp
in
inc
mov
in
jb
test
js
popf
pop
repz
popa
mov
shr
scas
add
sub
std
jbe
mov
inc
icebp
pop
cli
push
adc
ss
lds
ret
push
fadds
repnz
mov
fnstsw
dec
testb
pop
add
add
push
sbb
jle
inc
adc
sbb
ja
add
pop
in
dec
out
or
psubusb
imul
xchg
mov
sub
add
inc
popf
es
push
rcr
sub
adc
add
add
out
int
adc
sti
ljmp
dec
jg
ret
sub
xorl
hlt
adc
adc
xchg
sar
add
into
js
sub
outsb
aam
pop
shl
jmp
arpl
lea
inc
or
movsb
jmp
in
inc
add
and
nop
push
add
aam
xchg
in
fwait
push
push
loop
cli
mov
adc
adc
rclb
movsb
hlt
bswap
pop
loopne
gs
insl
jo
sbb
sub
lock
mov
mov
xor
xchg
pop
fcom
add
and
outsb
sbb
jo
pop
and
sbb
sub
jo
gs
jae
insb
arpl
icebp
mov
fidivs
push
push
mov
xor
xor
ds
shlb
add
pusha
lahf
gs
pop
cmpb
icebp
add
sbb
and
add
mov
push
js
and
iret
pop
jne
mov
xchg
push
enter
daa
add
dec
shr
add
and
icebp
mov
loope
add
sub
pop
jne
loop
jb
lret
add
lods
rcrb
leave
ljmp
jae
jns
test
xchg
add
dec
cmc
mov
add
push
scas
mov
xor
imul
adc
push
jne
mov
or
xor
rcrb
das
adc
movsb
stos
fiaddl
xchg
bound
outsl
aad
jno
repnz
or
fcmove
cmc
xchg
cmp
sub
addl
jg
std
sbbb
nop
add
cltd
cmp
call
or
ljmp
fwait
mov
mov
dec
inc
cld
adc
and
in
add
inc
outsb
mov
lods
into
xor
add
ret
mov
or
addl
inc
cltd
sub
lret
adc
pop
cmpsb
shl
movl
and
repz
and
fcoms
adc
pusha
jns
loopne
mov
mov
dec
imul
sub
jmp
cmp
or
orps
adc
ljmp
mov
movsb
dec
sarl
lret
sub
clc
inc
jns
add
mov
ret
xor
add
into
push
inc
mov
lock
mov
and
outsl
adc
fstpl
or
imul
inc
add
jp
inc
cmp
sbb
cmp
add
cltd
inc
dec
dec
sub
inc
cltd
xchg
movsb
in
ret
addr16
ret
movsl
jo
inc
lods
inc
and
and
mov
sarb
or
or
and
xchg
int3
jae
add
inc
lods
sti
sbb
or
popa
xor
push
or
arpl
cwtl
es
xor
jb
add
inc
xor
inc
or
xor
test
adc
or
adc
sbb
or
movsb
test
scas
add
dec
cld
xchg
int3
sbb
and
or
leave
sbb
inc
in
mov
mov
pushf
testb
and
bound
xor
push
sbb
and
pop
inc
mov
mov
cwtl
mov
xor
add
inc
test
and
adc
insb
xchg
pop
or
or
sbb
or
xor
inc
fcoms
sbb
dec
xchg
sbb
or
adc
mov
sbb
adc
and
add
add
and
mov
mov
xor
dec
push
sbb
or
decl
push
xchg
or
cli
loope
xor
adc
lock
pop
sub
nop
dec
pusha
mov
sbb
rdmsr
or
dec
rcll
int
mov
xchg
sbb
sub
sbb
ret
les
pop
arpl
or
iret
add
into
or
or
mov
and
rol
mov
or
or
jno
or
or
je
inc
and
out
cmpb
xor
add
sub
xchg
int3
enter
add
sub
and
cwtl
inc
push
inc
sbb
mov
popa
cwtl
ffreep
enter
xor
sbb
xor
hlt
cmp
sbb
mov
cmp
or
outsl
and
rcl
lods
lds
orb
and
pop
inc
sub
int3
cmp
fisttps
or
and
push
inc
inc
cld
adc
bound
fcoms
test
cmp
xchg
push
add
pop
or
and
in
xchg
cwtl
imul
mov
in
lret
and
or
scas
or
inc
fisttpll
or
hlt
or
lock
xor
dec
fcoms
or
and
mov
or
shl
mov
and
or
pop
or
or
or
push
adc
or
orb
and
inc
mov
inc
pop
sub
test
inc
or
mov
mov
or
sub
je
or
xlat
or
loopne
adc
cmp
js
inc
dec
jl
in
and
sub
xor
shrl
adc
lods
inc
jl
inc
jne
inc
je
cmpl
sbb
mov
adc
or
nop
rcrl
xor
adc
aaa
pop
sub
xor
push
mov
add
dec
sub
xor
mov
add
mov
push
mul
and
les
add
add
lret
int3
enter
ror
into
add
fcomp
fxch
fimuls
fnstsw
loope
lahf
sbb
popa
pop
sub
mov
outsb
pop
je
insl
and
adc
push
add
je
xor
cmc
jno
dec
cmc
jno
sub
ret
mov
xor
mov
mov
push
repnz
push
sbb
sbb
add
dec
mov
xchg
cmp
pushf
push
or
fisttps
bound
and
scas
fs
or
mov
shll
or
sar
or
or
or
inc
lods
es
fs
or
addb
cwtl
adc
xchg
mov
rorb
call
lock
or
jle
or
adc
dec
and
cmp
and
dec
push
xchg
pop
and
push
andb
nop
xchg
add
lock
xor
cmp
push
loopne
inc
inc
and
mov
andl
adc
mov
adc
test
xor
sbb
mov
inc
xchg
inc
mov
pop
mov
mov
rcll
pop
and
mov
add
fwait
cld
mov
add
cs
add
pop
sbb
or
fwait
xor
add
add
xchg
xor
cmp
adc
cmp
in
sub
shll
mov
pop
or
shll
cltd
push
add
rcrb
out
notb
out
out
int
add
out
push
sub
aaa
jne
mov
std
mulb
push
sti
pop
add
mov
test
or
enter
adc
and
add
dec
xor
pusha
jo
jl
nop
and
dec
mov
les
push
add
mov
or
or
xor
push
mov
push
inc
xor
icebp
icebp
incl
movsb
fisubl
ud2
pop
jmp
lock
cld
adc
aas
inc
fdivrs
and
or
add
sbb
addb
cmpsb
adc
add
or
xchg
testl
enter
das
addb
pusha
add
gs
andl
or
jae
dec
xor
push
cmpsl
cmp
inc
leave
add
ss
mov
adc
add
jae
cwtl
xchg
sub
add
push
cmp
std
aam
push
addr16
outsl
sbb
mov
in
mov
ficompl
cmc
mov
mov
push
mov
aas
xchg
ret
or
add
cmpb
pop
nop
add
daa
xor
testl
xor
rcl
pop
xchg
sub
mov
add
jbe
imul
je
add
inc
popf
add
fs
and
xchg
gs
test
add
pusha
and
testb
rcrb
push
inc
add
cmp
pop
add
into
mov
push
add
or
filds
int
inc
orl
enter
cli
and
add
or
mov
js
add
ret
sbb
add
push
add
shl
cmpsb
ja
clc
add
jne
or
inc
push
mov
in
pop
sbb
cltd
lea
add
jl
jnp
repnz
add
add
xlat
stos
jbe
or
add
pop
inc
lock
aam
scas
add
xchg
add
aas
test
add
xor
add
xchg
add
loop
jmp
mov
or
outsb
pop
mov
add
jecxz
test
sub
cld
add
cmp
add
shr
stos
sti
inc
dec
add
test
add
cmp
lahf
test
mov
add
cmc
mov
incl
repz
or
in
pop
xchg
add
cmpsl
jle
fs
add
jae
orl
mov
mov
or
loopne
cmp
dec
push
add
ret
bound
out
aaa
insl
aad
dec
test
gs
scas
or
cmpsb
mov
call
mov
ds
dec
add
cli
popa
add
sbb
cwtl
adc
mov
cmp
xor
mov
inc
add
mov
push
or
stc
int3
sbb
add
ss
add
sub
and
jo
push
gs
insb
pop
jb
dec
bound
jg
cld
pop
je
out
push
daa
push
jle
loopne
ja
imul
out
cltd
fnstsw
cmpsb
repnz
lods
fdivs
jmp
mov
add
mov
jecxz,pt
mov
cmc
test
call
add
mov
xchg
sarb
fstpt
mov
add
sub
add
pop
push
in
push
addb
decl
cwtl
add
jae
and
mov
leave
xor
ds
push
out
popf
pop
ljmp
orl
lret
xor
daa
mov
jl
add
push
add
pop
popf
inc
icebp
adc
add
push
cld
sbb
test
adc
jae
aaa
add
outsl
aad
add
lods
jbe
add
mov
fs
loopne
cmpb
push
pop
ficompl
mov
int3
xchg
dec
dec
fnstsw
add
or
iret
add
xor
mov
or
xchg
testl
out
inc
inc
cmp
mov
push
hlt
cmpsl
push
pop
std
stos
add
ret
jnp
test
jl
fstps
aad
xor
mov
ret
mov
add
or
sti
add
xchg
imulb
jbe
add
push
int3
add
dec
imul
add
pop
dec
jb
pop
adc
mov
ficomps
pop
movsb
add
adc
test
add
xor
xchg
and
nop
add
sub
popf
in
fldl
add
mov
sbb
sub
xor
mov
mov
sub
mov
out
outsb
gs
cli
xchg
mov
js
mov
dec
sarb
mov
in
dec
push
add
dec
in
cld
pop
pop
inc
loope
mov
add
jecxz
fidivrl
add
stc
xor
mov
mov
or
mov
pushf
xchg
sbb
add
inc
scas
jne
dec
mov
mov
sbb
imul
and
add
xor
pop
add
cmp
js
pop
ret
das
jne
jmp
sbb
add
dec
and
lcall
insb
xchg
mov
jbe
mov
lods
cli
pop
stos
mov
mov
pop
add
in
fcomip
lea
adc
add
mov
xor
into
test
add
in
inc
mov
je
pop
mov
shrb
cmpsb
and
inc
arpl
sbb
pop
jno
push
push
js
or
fs
aam
push
sbb
adc
jns
sub
in
dec
cmp
loopne
cmp
negl
xor
push
in
lcall
or
mov
lods
pop
incb
add
es
cmp
movsl
xchg
xor
dec
add
mul
inc
stos
incl
out
mov
in
add
push
add
add
adc
jge
push
adc
jo
xor
push
popf
cmp
add
sub
mov
xor
inc
psubsw
call
adc
hlt
add
lds
ss
add
and
push
jge
fadds
aaa
mov
add
sub
sbb
jne
xor
and
add
dec
inc
jmp
loopne
sub
jle
add
jae
jg
push
push
add
pop
add
add
inc
adc
xor
lret
cmp
ror
in
sub
cld
out
adc
pop
add
repz
repnz
push
add
sti
cmpsl
jns
xchg
test
mov
bound
mov
mov
push
orl
ret
mov
add
push
inc
sbb
cmp
dec
pop
xchg
push
and
inc
je
lods
pop
loop
imul
xchg
xchg
adc
and
jecxz
shll
les
xchg
shlb
flds
mov
data16
dec
pop
xchg
inc
and
and
mov
dec
add
sbb
adc
mov
adc
and
dec
in
xchg
icebp
and
inc
xchg
cwtl
mov
dec
mov
test
std
mov
adc
and
dec
rcll
scas
movsl
mov
dec
mov
inc
into
and
dec
pop
xchg
push
popa
inc
jl
mov
adc
xchg
xor
cmp
and
dec
xchg
mov
mov
xchg
ret
and
inc
stc
repnz
adc
and
dec
ss
sub
and
adc
and
dec
or
gs
call
js
dec
inc
inc
pop
mov
and
dec
loope
ljmp
dec
scas
mov
dec
adcl
inc
mov
and
dec
imul
pop
mov
or
inc
xor
add
inc
mov
dec
xchg
adc
or
xchg
fbld
ret
and
dec
out
xchg
in
cmp
aaa
out
and
xchg
sbb
push
inc
or
jb
jns
dec
xchg
inc
and
push
add
sbb
sub
inc
xor
push
adc
inc
dec
jne
jle
arpl
mov
dec
popf
xchg
xchg
and
pop
jecxz
loop
dec
add
mov
adc
and
dec
rcll
jno
mov
push
and
dec
inc
xchg
dec
jne
xchg
mov
aas
and
dec
add
inc
lret
lods
pop
loop
out
inc
xor
sti
adc
xchg
and
mov
mov
dec
xor
cmp
cs
and
adc
jg
pop
xchg
push
jb
dec
adc
and
dec
lret
and
add
imul
mov
cmpsb
inc
repz
ret
xchg
mov
adcl
adc
xchg
and
leave
adc
and
dec
ljmp
mov
jl
pop
dec
push
xchg
inc
and
adc
and
dec
adc
aaa
and
inc
sub
pusha
and
dec
jp
pop
and
dec
mov
dec
adc
sub
mov
dec
stos
xchg
mov
test
mov
adc
and
dec
ret
and
inc
sti
testb
dec
rcll
cmc
mov
dec
test
inc
nop
popf
mov
adc
and
dec
adc
sub
add
sbb
dec
pop
xchg
push
and
dec
fimull
int
out
xchg
jecxz
hlt
inc
stc
mov
mov
dec
xchg
xchg
or
sbb
and
sub
bound
dec
js
jne
push
cwtl
or
add
mov
insb
and
dec
jbe
push
and
dec
inc
mov
js
add
adc
dec
cmp
inc
sub
and
dec
test
xchg
into
dec
in
xchg
loopne
testl
and
dec
adcl
fisttps
enter
out
mov
adc
push
jge
jo
push
inc
pop
dec
mov
jmp
add
mov
adc
and
dec
sub
or
add
mov
adc
xchg
fs
into
jle
jae
push
and
dec
dec
xchg
inc
and
inc
rol
mov
in
loope
sbb
inc
pushl
mov
and
or
xchg
sbb
and
sub
dec
xchg
inc
and
pop
pop
mov
adc
xchg
mov
mov
mov
and
pop
cwtl
mov
dec
out
xchg
out
cmp
mov
adc
and
dec
or
inc
jp
mov
push
and
dec
inc
xchg
dec
and
mov
and
dec
popf
xchg
xchg
and
inc
ljmp
into
and
inc
fdivl
jg
fs
jno
push
inc
pop
inc
mov
ds
dec
sub
and
or
out
dec
hlt
xchg
std
and
inc
lret
rorb
cmpsl
dec
mov
inc
sbbl
inc
dec
pop
xchg
push
and
pusha
jnp
jb
add
xchg
push
and
inc
sub
mov
adc
and
dec
iret
xchg
and
inc
lock
loop
xchg
and
inc
out
sbb
mov
mov
in
pop
mov
ficoml
shll
dec
lods
xchg
mov
mov
dec
fwait
xchg
jl
jne
outsb
mov
test
dec
and
xor
mov
adc
and
inc
or
inc
out
and
dec
xlat
xchg
fisubs
lds
mov
adc
and
pop
gs
incl
mov
adc
and
dec
fcoml
jp
mov
push
xchg
pop
and
or
push
adc
and
dec
cmp
and
inc
in
loop
lock
and
dec
ficoml
pushf
xchg
mov
dec
stos
xchg
mov
add
xor
cmp
hlt
xorl
inc
xchg
dec
and
push
aaa
mov
adc
and
dec
setno
and
add
jmp
dec
xchg
pop
and
jg
mov
insl
and
dec
fsts
aaa
cltd
inc
loope
mov
adc
xchg
mov
lahf
inc
xchg
orl
adc
inc
sbbb
ss
or
inc
stos
dec
mov
dec
mov
inc
xchg
xor
adc
cli
out
mov
adc
ja
jnp
repnz
imul
and
xor
pop
and
sub
lret
and
dec
lret
sub
pusha
fs
dec
inc
xchg
lock
scas
inc
pushf
movsb
mov
bound
mov
std
or
scas
in
aas
testl
icebp
and
add
xor
cmp
adc
and
dec
sbb
lcall
loop
jmp
daa
mov
jne
or
dec
sub
data16
mov
dec
cmp
jecxz
je
test
sarl
bound
mov
cld
mov
pop
daa
andb
inc
mov
clc
pop
int3
pop
or
mov
daa
nop
and
fcoms
inc
stc
fwait
sbb
jg
push
inc
cmp
mov
fsubrl
popf
and
dec
cmc
mov
and
fcompl
mov
adc
and
dec
or
adc
in
dec
pop
cmp
inc
xchg
pop
and
inc
cmpsl
jle
cmp
and
dec
jae
pusha
and
dec
and
pop
fs
or
and
lods
xchg
or
fildl
mov
adc
and
mov
or
dec
rcll
in
dec
in
jns
out
enter
adc
xchg
test
hlt
dec
ljmp
push
xchg
and
movsb
cmpsb
xchg
or
and
mov
mov
xchg
jo
ds
mov
mov
bound
pop
stc
mov
push
and
dec
xchg
sahf
loope
clc
adc
xchg
fldenv
mov
xchg
jle
xchg
sub
movsb
mov
mov
adc
and
dec
mov
inc
mov
push
xchg
sub
or
dec
push
lods
add
push
or
mov
jo
mov
std
js
mov
ja
cmpsb
mov
xlat
mov
mov
test
cmp
arpl
test
ja
cltd
idivb
lea
push
mov
fisubrs
mov
vandps
pusha
xor
add
mov
loop
cmp
decb
bound
mov
in
jbe
lcall
andb
mov
mov
jge
xchg
in
adc
jmp
inc
and
sti
lock
inc
lods
loop
cmp
mov
mov
and
mov
in
and
jne
loop
cmp
std
mov
mov
ss
cmp
mov
mull
add
xor
pop
cmp
mov
shl
ds
icebp
and
loop
mov
cmp
mov
adc
mov
inc
and
pop
xor
mov
aaa
xchg
loop
cmp
add
and
and
loop
cmp
orb
int
mov
dec
daa
loop
cmp
sti
cmp
jne
lahf
adc
and
sbb
sub
je
xor
mov
push
icebp
sub
mov
pop
sbb
pop
mov
adc
jbe
les
jno
sbb
jge
pop
into
fsubrl
inc
jnp
jecxz
ds
das
les
jno
sbb
cmpsb
push
inc
cmc
mov
xchg
in
adc
and
pusha
jecxz
cld
sbb
jns
inc
enter
in
aam
les
inc
addr16
fnstenv
inc
dec
xchg
dec
adc
cwtl
dec
aam
jno
psubsb
mov
mov
out
les
dec
jno
sbb
in
sti
inc
push
xchg
out
dec
adc
xor
push
adc
sbb
mov
iret
jmp
sarb
jg
cmpl
js
and
mov
cmp
mov
mov
add
aas
xchg
mov
jo
mov
cmc
loop
jp
neg
cmp
mov
scas
fisubl
jne
and
xor
jmp
sbb
std
repz
mov
int
dec
sbb
adc
adc
das
mov
xchg
mov
cmp
pop
mov
xchg
les
push
push
cmpsl
mov
cld
jle
cmpb
cmp
and
sbb
sub
out
mov
outsb
andl
shll
inc
and
jle
nop
mov
cmp
and
imul
cmp
cmpsl
fimuls
loop
or
jbe
push
mov
je
and
or
fstpt
or
cli
cmp
mov
and
lahf
ret
mov
inc
lods
mov
les
cmpsb
cmp
loop
cmp
in
aaa
bnd
mov
out
mov
out
jecxz
fisubrl
mov
loop
cmp
dec
and
dec
test
loop
cmp
and
iret
ljmp
idivb
xor
add
adc
aad
push
mov
pop
loop,pn
cmp
sbb
and
cmpsb
and
jae
mov
xchg
loop
add
call
mov
xor
and
mov
mov
cmp
jo
nop
jl
and
mov
int3
data16
cli
dec
loop
cmp
add
add
mov
ret
mov
pop
scas
push
and
imul
rorl
xchg
mov
jmp
loop
cmp
cwtl
mov
shrb
mov
cmp
mov
cmpsl
sub
push
mov
adc
leave
jmp
mov
push
loop
cmp
mov
fbld
jp
mov
clc
cmp
mov
pop
gs
loop
cmp
and
sub
sub
daa
adc
arpl
test
mov
insl
mov
push
xchg
cmp
cltd
and
mov
push
and
dec
add
sbb
out
lcall
and
hlt
dec
or
std
ljmp
dec
pop
xchg
ret
inc
scas
push
pop
adc
add
xchg
pop
and
in
adc
and
dec
jae
push
and
inc
or
mov
pop
and
dec
mov
inc
or
mov
dec
imul
dec
cs
sub
sti
mov
adc
popa
dec
into
xchg
jnp
ds
jno
mov
adc
adc
sub
pusha
pop
mov
pop
call
inc
ficoms
aam
call
test
inc
imul
in
push
das
jno
xlat
inc
push
xchg
mov
adc
jmp
inc
xor
and
dec
repz
and
inc
mov
and
dec
fists
adc
and
dec
push
xchg
insl
and
xor
and
dec
int3
xchg
cmp
push
inc
repnz
dec
sub
cwtl
rorl
jle
stos
xchg
andl
inc
sub
mov
jns
loop
sbb
inc
push
dec
mov
pop
clc
mov
adc
outsb
dec
out
xchg
cmpsb
and
mov
xor
dec
pop
xchg
mov
mov
mov
adc
and
jmp
sbb
or
mov
icebp
adc
and
dec
and
ds
push
pushf
loop
xor
faddl
mov
dec
stos
xchg
fsubs
add
mov
dec
rclb
daa
cli
and
dec
adc
mov
cmpsl
and
dec
and
or
jp
adc
and
dec
pop
xchg
fisubl
xor
mov
adc
xchg
lret
and
inc
cmp
ja
jnp
repnz
outsl
lds
addr16
sub
stos
jbe
lret
and
dec
jge
inc
pop
mov
lock
dec
aam
mov
movsb
mov
shlb
std
xchg
xchg
and
inc
ss
mov
adc
and
dec
movsl
xchg
in
icebp
inc
jno
mov
adc
xchg
and
ret
inc
sbb
and
dec
adc
jmp
mov
dec
adcl
outsb
and
dec
mov
inc
mov
sub
jecxz
das
dec
test
adc
and
dec
cld
xchg
mov
pop
inc
push
mov
dec
add
call
rclb
sti
inc
mov
xor
dec
mov
adc
adc
push
inc
cmp
mov
dec
inc
xchg
and
cmc
pop
mov
inc
and
mov
adc
and
dec
int
or
adc
mov
dec
les
cmp
sbb
dec
pusha
xchg
andl
mov
adc
xchg
out
and
pop
adc
and
dec
loopne
xor
cmp
mov
adc
pop
dec
ret
and
adc
and
dec
out
enter
adc
xchg
test
hlt
mov
adc
jp
scas
jmp
mov
dec
cs
sbb
cmpsb
inc
mov
mov
inc
neg
jl
mov
mov
add
dec
and
jo
ds
dec
xchg
dec
and
inc
testb
popa
adc
xchg
xchg
roll
loope
clc
and
dec
adc
mov
xchg
les
out
mov
adc
and
dec
mov
inc
mov
push
xchg
sub
push
and
dec
push
xchg
arpl
jl
ja
mov
adc
outsl
dec
lds
sub
xlat
and
dec
jbe
lret
inc
leave
jge
mov
xchg
inc
and
inc
lods
aam
mov
dec
movsb
xchg
jb
rolb
xchg
adc
and
dec
aas
xchg
mull
int3
inc
xor
mov
adc
and
dec
fcoms
add
mov
adc
and
dec
xchg
xchg
add
adc
jmp
daa
xchg
mov
jne
or
das
shll
outsb
inc
pop
mov
and
dec
mov
sub
jecxz
das
test
sbb
leave
add
adc
and
dec
pop
xchg
push
lret
in
adc
and
dec
dec
nop
pop
adc
xchg
and
inc
out
stos
mov
adc
dec
dec
xor
stc
mov
push
adc
lahf
dec
test
push
and
xchg
adc
mov
adc
and
dec
call
int
mov
adc
and
dec
xchg
xchg
inc
and
inc
les
and
dec
pop
xchg
sbb
jae
pusha
orl
nop
and
mov
dec
pop
xchg
or
fildl
mov
adc
and
dec
push
xchg
and
pop
inc
ret
lods
adc
xchg
dec
xchg
xchg
in
jns
out
mov
dec
insl
xchg
lea
aad
dec
test
and
dec
ljmp
cmp
rcll
and
dec
cmpsb
xchg
mov
dec
call
jmp
testb
mov
inc
jo
mov
dec
add
popa
xor
and
dec
rcll
clc
mov
dec
fsts
fwait
push
mov
and
into
inc
push
sub
mov
and
push
dec
sub
push
adc
xor
pop
push
fdivr
push
xor
aas
aad
stos
push
mov
pushf
pop
mov
push
adc
push
sub
movsb
dec
in
aas
aam
push
enter
cmc
xor
fsubrl
pop
in
aas
xchg
aam
push
mov
movsb
push
aam
aam
decl
dec
je
daa
cli
enter
aad
adc
jb
mov
jo
sub
test
pusha
aad
in
push
int3
lods
jb
mov
and
inc
push
and
pop
cld
mov
sbb
sub
mov
test
test
loop
push
shrb
aad
stos
push
fdivrs
push
inc
stos
push
sub
loopne
mov
aas
aam
call
lods
hlt
pop
mov
push
in
stos
inc
xor
cmpsb
decb
push
or
xor
je
xchg
xor
push
sbb
imul
mov
aad
stos
push
sbb
imul
dec
inc
int3
mov
mov
adc
jl
aad
stos
push
mov
push
sub
inc
loope
xchg
fsubrs
pop
cmc
in
push
cmp
push
mov
push
dec
stos
push
pusha
mov
push
clc
scas
push
mov
push
and
pop
movsl
dec
push
push
stos
push
mov
pop
outsb
xchg
fs
pop
in
imul
scas
push
cmp
cmp
cmc
subb
scas
push
lock
and
in
imul
fs
mov
push
call
sbb
call
push
or
lock
movsl
cmp
aad
scas
push
sbb
push
push
stos
push
clc
jmp
leave
out
mov
mov
sbb
cmp
stos
fcoml
lods
rcrb
sub
mov
lock
stos
pop
pop
inc
lods
jp
mov
in
xlat
sub
add
lods
pop
dec
mov
in
sub
sbb
add
insb
sub
mov
lock
lock
pusha
lods
pop
insb
mov
mov
sub
je
cmpsl
fsubs
fldcw
loope
sarb
stos
jo
je
rcl
mov
aam
stos
push
jbe
lods
rolb
push
xlat
stos
lods
pop
add
js
ljmp
push
jecxz
clc
pop
movsl
test
aad
mov
pop
cmc
clc
imul
scas
push
pushf
mov
and
js
xchg
jl
push
adc
rcrb
push
outsb
shlb
in
in
movsl
push
imul
xor
mov
outsb
xchg
sbb
push
loopne
int3
pop
movsl
mov
aad
mov
pop
movsl
dec
imul
mov
pop
mov
imul
adc
fsubrs
adc
push
call
subb
scas
push
pop
test
push
enter
std
cld
pop
mov
aas
aad
stos
push
pushf
test
push
movsb
push
loopne
push
dec
in
push
enter
lods
fcompl
mov
push
adc
aam
movsl
mov
push
movsb
lods
aam
std
fmuls
je
mov
mov
imul
inc
mov
mov
dec
loopne
test
sbb
xchg
pop
mov
adc
xchg
loop
push
inc
sub
mov
adc
xchg
mov
mov
xchg
adc
and
dec
int
aad
pop
inc
mov
and
dec
cmp
push
stc
mov
dec
mov
les
call
and
xchg
inc
sub
ja
inc
lods
inc
push
cmp
jmp
lret
add
sbb
les
cmp
sub
mov
dec
aad
pusha
pop
sbb
rcrb
mov
lods
jb
mov
and
stos
push
je
lods
rorb
push
aad
mov
pop
mov
and
jb
mov
nop
xlat
sub
je
lods
jp
mov
dec
xlat
sub
push
and
cmp
sub
push
lods
pop
insb
mov
call
sbb
pusha
xlat
sub
lock
sarb
sbb
lods
jb
mov
push
aad
clc
je
cmpsl
fadds
lret
add
sbb
mov
adc
and
dec
ss
iret
and
inc
movsb
mov
adc
xchg
ret
cmp
scas
push
cmp
enter
imul
mov
pop
in
imul
xor
add
add
and
pop
loop
rorb
adc
inc
shlb
cmpsb
adc
xchg
mull
push
mov
cmp
les
lods
fisubl
clc
test
mov
leave
dec
jae
add
mov
push
and
jmp
mov
mov
xchg
xor
pop
and
dec
jns
mov
cli
and
dec
adcl
adc
xchg
fisubs
pushf
inc
nop
popa
mov
je
inc
dec
cmpsl
xchg
and
adc
add
inc
insl
and
dec
xlat
xchg
lret
and
pop
mov
adc
and
dec
jne
lock
pushf
adc
push
fdivr
je
imul
inc
jns
mov
dec
and
dec
lods
xchg
cmp
dec
inc
xor
mov
ja
scas
dec
mov
inc
std
insb
mov
adc
and
dec
mov
adc
or
mov
adc
mov
repnz
loop
hlt
inc
mov
push
and
dec
loope
jmp
in
inc
out
lahf
mov
adc
std
adc
xchg
adc
repz
jb
mov
dec
negb
add
adc
and
inc
psubsw
adc
xchg
jb
mov
adc
and
dec
fsts
cs
adc
xchg
and
dec
inc
sbb
and
dec
or
inc
test
frstor
dec
es
cmc
and
inc
jle
mov
adc
and
pop
loop
test
mov
adc
cmp
and
inc
xor
jecxz
push
and
dec
dec
xchg
fs
cwtl
and
inc
sub
mov
shll
dec
or
mov
and
dec
inc
xchg
adc
mov
hlt
or
inc
sub
jge
arpl
nop
and
adc
xchg
dec
iret
sub
les
or
jl
mov
and
mov
fcoms
push
outsb
popf
cmp
js
push
les
xchg
mov
pop
inc
push
ljmp
dec
sbb
and
mov
cmp
daa
dec
leave
xchg
in
mov
fbstp
into
adc
and
dec
stos
xchg
outsl
and
inc
repz
ret
dec
and
inc
add
and
dec
mov
pop
and
hlt
inc
mov
adc
and
dec
popf
xchg
cli
and
inc
xor
int3
adc
and
dec
sub
mov
mov
adc
and
dec
dec
xchg
inc
and
inc
xchg
mov
mov
je
cli
dec
lahf
ljmp
lods
push
mov
lret
sub
add
jb
mov
and
pusha
push
in
lods
push
int3
mov
clc
xlat
sub
incb
and
push
xlat
stos
sbb
push
mov
sub
jecxz
dec
mov
das
and
and
add
and
inc
dec
mov
adc
and
pop
loop
mov
or
dec
pop
xchg
mov
fisubs
and
pusha
sbb
adc
stos
and
jns
mov
clc
jo
or
xor
dec
insb
xchg
std
and
inc
cmp
push
xchg
or
xchg
inc
mov
mov
dec
sbb
loop
rolb
push
adc
and
dec
adc
push
and
notl
pop
and
dec
pop
xchg
mov
lret
inc
mov
mov
adc
adc
mov
adc
and
dec
fcoml
sub
enter
mov
dec
xchg
cwtl
cmpsb
mov
dec
sub
push
and
push
testb
andb
imul
insb
push
xchg
mov
mov
dec
call
fcmovne
cmc
and
dec
lahf
xchg
mov
movsb
inc
aas
movsl
mov
dec
nop
xchg
cmpsl
and
in
int
fnstsw
cmp
sub
les
adc
inc
mov
dec
sti
xchg
mov
xchg
rolb
adc
and
test
dec
inc
xchg
shlb
repnz
adc
mov
adc
and
dec
inc
xchg
scas
and
and
mov
dec
or
mov
push
and
dec
xor
push
out
and
xor
orl
mov
fdivrs
xlat
xchg
insb
lods
dec
jl
or
adc
pop
mov
xor
leave
inc
pop
mov
les
fadds
jmp
lret
pop
mov
jnp
jmp
ret
int
xchg
insb
cmp
cmpsb
icebp
and
cli
stc
jmp
les
mov
xor
mov
in
mov
and
mov
mov
and
mov
xor
push
xchg
in
mov
and
gs
push
mov
mov
mov
in
cs
jmp
dec
adc
repz
adc
jl
lret
pop
shr
adc
int
mov
ljmp
add
xchg
in
adc
and
aas
je
les
mov
mov
add
cwtl
leave
adc
out
and
inc
stc
lds
ljmp
test
mov
insb
popa
dec
jae
imul
lods
jbe
les
pop
xor
or
les
aad
jne
fstps
xchg
insb
rorl
mov
and
stos
test
test
fnstsw
pop
xor
jns
dec
mov
mulb
rcrb
js
icebp
mov
adc
pop
dec
fst
dec
les
mov
mov
xor
cwtl
lds
popf
dec
xor
daa
adcb
pusha
ljmp
sbb
fmuls
dec
xchg
int3
lea
mov
daa
jp
mov
xchg
mov
cmc
les
jne
cmc
scas
cmp
test
daa
mov
lods
jno
cltd
jle
les
out
bound
mov
popf
int3
dec
dec
loope
push
daa
adc
jmp
mov
lods
into
pop
jle
mov
mov
scas
adc
stos
out
adc
mov
mov
jecxz
xchg
push
add
sti
jmp
push
cwtl
pop
pop
lahf
nop
inc
xchg
xor
add
add
sbb
add
jl
inc
xor
push
inc
xor
adc
adc
rorb
xchg
loopne
in
xchg
clc
and
and
je
mov
add
xor
inc
jb
and
dec
pusha
xchg
insb
enter
and
inc
pop
mov
rcrb
or
fsubl
call
inc
hlt
jae
or
adcl
adc
and
push
cmp
and
or
fs
mov
adc
and
dec
test
mov
rclb
and
inc
or
xchg
fbld
inc
push
js
in
enter
pop
adc
adc
adc
and
dec
xchg
in
dec
adc
enter
in
xor
aad
and
adc
clc
and
xchg
adc
lods
adc
sub
and
inc
push
dec
mov
mov
adc
test
and
dec
mov
xchg
sbb
rolb
add
dec
xor
sbb
inc
add
arpl
dec
adc
cmpsb
adc
inc
sbb
push
adc
insb
adc
in
dec
push
xchg
test
mov
shlb
inc
rcr
mov
call
cld
and
push
inc
adc
loope
data16
sub
cmp
adc
xchg
and
push
inc
pusha
and
jl
mov
mov
adc
and
int3
xchg
fdivs
in
lock
jp
add
je
movsb
sub
js
sub
adc
adc
inc
mov
cmp
daa
and
dec
nop
in
dec
sub
shlb
sub
mov
mov
add
repnz
dec
xor
sub
pop
inc
push
test
adc
das
dec
aam
loopne
in
xchg
xor
cld
and
add
adc
xor
and
xor
adc
and
dec
dec
xchg
pop
enter
and
and
sbb
mov
jb
and
dec
lock
cld
or
in
sbb
and
adc
xor
xchg
inc
and
and
inc
insb
js
inc
test
xchg
adc
and
dec
enter
cmp
in
lock
cld
and
or
je
mov
ds
cmp
dec
adc
push
xchg
aas
and
je
addb
mov
adc
and
jb
and
dec
in
xchg
clc
les
or
sbb
and
mov
std
adc
adc
adc
dec
js
test
xor
adc
mov
sbb
call
insl
sbb
adc
pop
pop
insb
and
dec
cmp
fs
dec
jle
pop
and
and
test
mov
adc
faddl
fwait
ss
xchg
pop
mov
adc
jmp
adc
sub
adc
inc
dec
mov
cmp
and
dec
mov
cwtl
dec
dec
xchg
test
mov
shlb
inc
aam
mov
mov
pop
mov
arpl
adc
sub
adc
inc
push
mov
pop
cmp
push
and
dec
mov
xchg
dec
push
xchg
test
mov
shlb
inc
rcr
mov
sub
clc
and
dec
adc
enter
and
sub
xchg
cmp
addb
inc
pusha
pop
mov
test
nop
adc
in
dec
adcb
and
or
xchg
adc
sub
cmp
mov
and
jb
and
dec
test
pop
and
pop
fmull
loopne
sbb
or
mov
dec
xor
popa
and
and
shlb
jb
and
dec
lods
xchg
mov
and
inc
in
lock
fs
or
enter
cmp
adc
push
mov
insb
cmp
addr16
dec
xchg
in
dec
test
shlb
push
inc
clc
imul
adc
dec
push
push
adc
pusha
inc
imul
sbb
mov
and
jb
and
dec
int3
xchg
fmul
in
outsb
and
and
sbb
adc
and
and
dec
dec
xchg
push
enter
and
inc
add
sub
push
out
mov
sbb
insl
mov
xor
fimuls
mov
push
movsb
mov
enter
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
xchg
cli
cmc
add
outsb
cmp
adc
in
pusha
aad
addr16
add
aam
add
test
sbb
xor
add
mov
lods
jecxz
fadds
xor
filds
or
cmp
fnstcw
cmp
ficoms
inc
xlat
enter
add
and
mov
push
cltd
xchg
mov
cmp
or
and
sbb
das
adc
stos
add
data16
add
jbe
jno
add
adc
out
mov
test
push
movsl
in
add
loope
adc
or
mov
fstl
mov
sub
add
add
hlt
cmp
lahf
bound
sbb
xor
jno
call
push
cmpb
sbb
hlt
or
adcb
cmc
fnstenv
cmp
clc
mov
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fisubrl
inc
mov
lods
sarb
add
add
sbb
or
fnstsw
add
add
adc
mov
and
mov
outsl
mov
add
stc
ficomps
cwtl
leave
fldcw
and
mov
test
xlat
pop
cmp
hlt
add
pop
mov
rolb
cmpl
cmp
cmp
adc
je
inc
aad
cmp
ja
popf
adc
push
add
jae
or
test
add
push
or
dec
add
in
decl
xchg
daa
scas
loopne
pop
mov
pop
jge
mov
add
xchg
add
inc
add
imul
add
jno
insb
sbb
cld
imul
sbb
loopne
rorl
adc
dec
frstor
outsl
fistpll
mov
mov
jbe
push
mov
call
xchg
shll
cmp
fisttps
icebp
addr16
cmpsb
fldl
mov
add
mov
fisubrl
or
or
pusha
jp
add
ret
out
fists
addr16
mov
add
imul
sbb
outsl
and
push
xchg
ja
int3
add
inc
or
add
es
lds
add
sub
add
ret
add
mov
sahf
fldcw
mov
fs
es
add
insl
add
test
add
jb
adc
add
adc
add
jnp
sbb
mov
fwait
mov
xchg
or
mov
fdivrl
pop
fisttpl
aam
roll
clc
mov
sbb
int
add
mul
ja
mov
addb
out
pusha
jle
push
ud0
cmp
pop
or
adc
scas
clc
jns
imul
insb
push
js
or
xlat
push
addl
ret
cmp
cmpsl
add
push
pusha
rorb
imul
dec
push
scas
add
pop
fldenv
filds
lock
aaa
push
loopne
test
fidivrs
mov
jmp
sbb
mov
lret
xchg
mov
cmpsb
mov
sarb
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
mov
sbb
add
or
loopne
add
add
popa
mov
rcrb
jmp
adc
add
dec
add
insb
pop
xchg
push
mov
and
inc
add
lods
xor
and
js
mov
add
push
mov
and
dec
cmp
sbb
mov
adc
and
jno
das
add
das
fisubs
adc
inc
xchg
and
sbb
push
aam
add
push
cmp
xor
push
cmp
and
jl
inc
mov
hlt
mov
and
sbb
adc
xchg
jl
enter
and
lea
or
or
sahf
xor
inc
mov
je
adc
in
dec
adc
adc
adc
cwtl
adc
cmp
and
pop
and
xor
in
sbb
adc
sbb
sbb
call
or
adc
mov
mov
mov
loopne
mov
and
mov
adc
lds
xchg
sbb
cmp
mov
lods
and
dec
aaa
mov
cmp
xor
test
and
inc
sub
inc
cmp
dec
mov
cmpsb
adc
mov
adc
sbb
jl
lret
mov
les
cmp
aaa
sahf
cmp
adc
cmp
and
cld
cmp
js
mov
adc
and
icebp
cld
sahf
pusha
and
in
adc
fmuls
pop
cmp
and
mov
dec
in
dec
dec
mov
iret
fisubrs
sbb
dec
adc
cmp
mov
mov
andb
call
sbb
dec
jmp
push
js
nop
gs
adc
and
inc
sbb
arpl
adc
lods
and
inc
popa
clc
mov
push
loop
add
xor
sub
push
rclb
and
inc
and
inc
inc
cmp
dec
push
mov
fs
dec
es
ror
xchg
sub
and
aas
push
lret
mov
cmpsb
adc
mov
sbb
dec
inc
mov
icebp
sub
mov
xchg
test
enter
and
mov
inc
pop
clc
sahf
inc
es
adc
xchg
aam
cmp
or
sub
adc
je
cmp
mov
mov
sbb
dec
dec
int3
push
js
inc
inc
mov
adc
call
and
ja
js
cltd
or
dec
adc
mov
adc
repz
lods
dec
dec
xchg
fcom
pop
pop
int3
jo
icebp
dec
push
loop
pop
gs
xor
mov
loop
dec
push
sub
mov
sub
adc
and
jno
dec
jl
iret
pusha
adc
mov
mov
adc
call
and
dec
xor
loop
dec
xchg
pop
adc
js
bound
mov
inc
hlt
pop
adc
mov
cmp
aaa
push
test
arpl
shrb
je
xchg
cwtl
and
rclb
andb
and
push
cmp
mov
xor
movsb
and
dec
fsub
adc
jb
dec
adc
mov
mov
sbb
dec
push
int3
push
push
icebp
xor
cltd
test
and
jl
sbb
push
push
and
adc
mov
and
js
xchg
mov
and
test
adc
mov
and
push
inc
mov
sbb
cmp
adc
xchg
adc
loopne
and
push
sbb
xchg
adc
xchg
and
jno
pop
add
jl
xchg
xchg
mov
loopne
cltd
adc
pop
mov
adc
xchg
mov
adc
fs
adc
shlb
mov
sub
movsl
adc
js
cmpsl
and
jb
and
dec
lock
pop
add
dec
dec
adc
cwtl
xchg
push
inc
cwtl
xor
lods
and
dec
int3
adc
rcrl
imul
sahf
and
adc
test
mov
mov
mov
xchg
sbb
jae
aam
hlt
adc
sbb
xor
adc
jo
xchg
pushf
and
shlb
clc
inc
jnp
inc
pusha
cmp
dec
int3
add
cmpsb
adc
mov
sbb
dec
popa
pusha
cmp
pop
adc
fsubrl
test
xchg
movsb
and
inc
xchg
bound
pop
adc
shlb
cld
loop
arpl
jo
movsb
adc
sbb
dec
push
adc
test
int3
and
and
test
mov
sbbw
dec
shl
dec
mov
push
adc
cmpsb
adc
shlb
jo
filds
push
cmpsb
and
push
adc
adc
and
jb
das
xchg
adc
adc
add
sub
add
dec
add
adc
xchg
mov
pop
inc
test
mov
dec
or
or
jmp
dec
xor
push
and
subps
adc
xchg
adc
cwtl
inc
adc
adc
and
inc
sbb
inc
imul
and
sbb
dec
sbb
adc
xchg
js
pop
inc
mov
mov
dec
and
aam
mov
xor
dec
push
and
and
and
daa
inc
and
mov
adc
das
shll
sub
mov
sub
xchg
cwtl
and
inc
lods
aaa
mov
adc
and
dec
cmp
enter
adc
inc
inc
sub
mov
inc
and
pop
mov
je
inc
and
dec
dec
xchg
cwtl
and
test
mov
dec
dec
xchg
fsubl
push
inc
cld
push
mov
outsb
adcl
xor
add
inc
pop
and
dec
pop
xchg
nop
and
inc
mov
mov
adc
in
dec
adc
and
adc
inc
and
dec
pusha
xchg
sbb
js
sbb
mov
ds
aam
inc
and
and
or
jo
icebp
adc
pop
and
dec
or
mov
and
dec
sbb
and
inc
add
mov
pop
mov
jno
adc
or
dec
inc
or
mov
adc
test
add
movsb
dec
pop
xchg
les
or
mov
fldenv
and
add
add
or
xchg
or
je
or
mov
sbb
test
or
dec
or
sbb
jae
and
and
or
add
inc
xchg
sbb
inc
nop
add
xchg
sbb
adc
and
dec
fmull
and
adc
notl
add
add
or
xchg
or
andb
xor
cwtl
or
rolb
add
adc
push
or
cmp
and
or
mov
push
and
inc
jo
adcl
or
xchg
pop
or
adc
xor
cmp
dec
imul
adc
xor
js
xor
mov
insb
dec
mov
cmp
shlb
jno
das
adc
adc
adc
add
adc
or
or
or
and
int3
cltd
fs
in
cwtl
adc
adc
cmp
adc
xor
dec
and
jp
push
pop
and
dec
bound
in
mov
loope
insb
jns
loope
mov
or
loope
adc
popa
int3
adc
pop
xchg
inc
or
pop
jb
addr16
arpl
jo
fldenv
adc
outsb
xor
add
push
jmp
sbb
inc
inc
roll
cmpsl
jns
es
push
iret
and
xor
or
add
jle
xor
mov
push
int3
cmp
xor
inc
add
add
add
aas
hlt
inc
add
sti
mov
int3
cmp
xor
inc
add
add
mov
mov
aas
hlt
inc
add
ss
mov
push
int3
cmp
incl
pop
xchg
aaa
jg
pop
test
mov
aas
hlt
inc
pop
lahf
loope
cmp
out
jbe
aas
ret
mov
aas
hlt
in
or
or
cmp
out
and
dec
xor
cmp
or
adc
adc
xor
mov
adc
sbb
lea
or
and
push
mov
or
jns
or
or
xor
jmp
or
xor
xor
or
mov
adc
js
or
push
push
xor
jmp
push
dec
xor
xor
notl
adc
repz
or
adc
pop
jmp
adc
clc
ss
notl
lods
add
fs
sbb
outsb
hlt
js
sbb
cmpsb
inc
lret
rorb
dec
mov
push
inc
inc
sbb
add
push
jp
inc
push
xor
sahf
popa
pop
adc
xorb
adc
or
aam
jns
ja
and
sbb
stc
mov
inc
inc
adc
inc
xor
mov
les
aas
and
incl
adc
xchg
xor
loop
xor
enter
add
adc
mov
repnz
hlt
inc
add
push
pop
xor
adc
cld
xor
mov
inc
ss
mov
les
aas
and
incl
sbb
pop
xor
bswap
aaa
call
pop
sbb
lea
mov
enter
les
xor
or
sbb
enter
or
sbb
xor
jmp
or
sbb
adc
xor
notl
jecxz
jmp
or
sbb
aas
fiadds
and
and
sbb
xchg
or
push
faddl
cli
enter
push
xor
in
bound
aaa
adc
mov
xor
sbb
sbb
les
inc
and
mov
jno
pop
jmp
adc
and
adc
jo
les
out
popf
dec
mov
sub
push
push
dec
push
jo
mov
and
dec
jle
dec
sbb
jno
sbb
loope
or
jbe
das
call
sbb
push
dec
inc
inc
inc
dec
dec
or
add
push
dec
das
aad
push
inc
dec
inc
scas
adc
cmp
push
arpl
pop
popf
imul
leave
dec
popa
push
bound
and
cmp
sbb
lahf
inc
scas
push
sbb
inc
and
jne
cmovno
arpl
jbe
aam
push
add
and
addr16
xchg
sbb
inc
mov
inc
arpl
mov
rclb
movsl
xor
test
sub
popa
lods
adcb
inc
mov
repz
dec
in
pop
js
pusha
mov
insb
les
adc
or
mov
scas
out
movsb
push
add
daa
push
lret
je
cwtl
push
mov
cmp
push
or
popa
outsb
jae
or
imul
mov
jne
push
adc
adc
or
mov
mov
cwtl
lods
and
lods
stos
and
adc
adc
icebp
loopne
and
adc
adc
adc
and
and
adc
cmp
adc
data16
lret
jo
sti
and
adc
gs
add
xchg
or
fadds
mov
adc
inc
add
sbb
adc
dec
or
and
and
mov
pop
xchg
adc
and
inc
or
hlt
and
inc
or
or
xchg
and
add
mov
sbb
dec
pop
xchg
mov
add
mov
sbb
xchg
faddl
js
cmpsb
mov
adc
push
and
add
push
and
dec
insb
mov
mov
dec
or
clc
and
dec
inc
xor
and
dec
adcb
mov
les
xchg
fsubl
mov
hlt
mov
or
cmpl
and
insb
mov
adc
or
push
sub
cmpb
adc
or
dec
data16
pcmpgtw
pop
loopne
fwait
arpl
inc
addb
nop
add
dec
or
and
dec
int
or
xlat
repz
dec
cwtl
inc
push
cs
enter
pop
inc
add
push
jg
xchg
or
add
cmp
mov
mov
les
rolb
mov
insb
or
and
dec
xchg
xchg
pushf
and
adc
test
mov
in
dec
add
jns
adc
xor
mov
adc
jmp
outsl
aam
aad
inc
or
jns
movsb
dec
adc
std
insl
sbb
dec
mov
inc
inc
xor
adc
or
or
inc
add
setno
adc
adc
pushf
fwait
push
and
or
or
add
adc
cmp
sbb
mov
dec
js
jmp
push
sbb
mov
and
sub
sub
in
aam
faddl
inc
cs
int3
adc
or
arpl
add
mov
addb
hlt
pop
lds
adc
sub
mov
dec
cmp
push
aam
add
pop
xor
lret
pop
pop
xor
inc
cltd
cmp
and
or
sahf
rclb
inc
jg
dec
add
dec
cltd
cli
adc
cmp
sub
add
pop
fwait
test
xchg
adc
or
inc
inc
or
dec
cmp
fs
mov
mov
xchg
int3
and
inc
in
clc
mov
or
cmp
dec
xchg
pop
and
cwtl
mov
mov
dec
jns
pop
out
pop
sbb
adcl
mov
dec
xor
jnp
and
push
jne
js
adc
gs
dec
adc
mov
movsb
in
mov
pop
lock
or
mov
mov
dec
cli
xchg
sti
and
inc
std
decl
dec
xor
cltd
orb
adc
and
loope
imul
clc
mov
and
adcb
call
movsl
cmp
jbe
xchg
mov
sbb
lds
jl
test
adc
or
addl
scas
daa
xchg
mov
mov
xchg
add
sbb
inc
hlt
add
or
test
and
mov
std
dec
je
cld
and
adc
xchg
mull
shl
adc
and
dec
clc
xchg
hlt
adc
and
inc
sbb
mov
adc
and
dec
lock
pop
and
inc
insb
out
mov
dec
in
xchg
movsb
and
inc
mov
mov
sbb
mov
add
inc
add
stc
add
test
xorb
add
add
adc
scas
inc
mov
or
jae
jne
cmpsl
pop
call
cmpsb
mov
inc
inc
inc
inc
inc
dec
add
dec
push
push
push
push
push
add
pop
xor
xor
clc
ret
js
xchg
push
xchg
nop
cwtl
lock
mov
mov
fistl
sub
and
adc
sub
dec
shrl
push
add
int3
addr16
or
adc
push
inc
std
push
cmp
push
sub
lea
push
mov
mov
mov
pop
push
and
gs
cmp
add
or
mov
jne
push
insl
adc
jmp
push
xor
jmp
sub
enter
jge
dec
movsb
adc
orb
sbb
xchg
adc
push
push
mov
es
adc
xchg
mov
ret
xor
xchg
sub
and
mov
or
xor
lgs
adc
lock
test
sub
or
scas
jb
divb
sub
mov
inc
mov
mov
sub
scas
mov
mov
sub
sub
adc
iret
dec
lock
rcrl
sbb
or
mov
fsts
sub
nop
dec
repnz
js
arpl
sub
sub
js
jl
in
jb
add
push
repnz
js
divb
sub
add
test
mov
and
movsb
push
add
inc
inc
adc
fsubl
or
movsb
adc
shrb
or
test
mov
sahf
inc
sub
movsb
mov
cltd
adc
movntps
push
adc
loop
cmp
dec
enter
mov
sbb
mov
in
xor
adc
or
test
jns
adc
and
hlt
sub
popa
jns
adc
in
mov
inc
inc
jb
xchg
jo
xchg
dec
enter
mov
enter
push
sub
cmp
pop
jb
sahf
lock
pop
adc
or
fs
jb
push
inc
and
in
jb
sahf
mov
sub
sub
xor
outsb
addb
lods
adc
sbb
inc
mov
fs
inc
sub
nop
adc
icebp
inc
andl
mov
inc
xchg
adc
push
inc
mov
sub
mov
push
inc
xchg
and
xchg
fstpl
test
lcall
cmp
test
mov
les
and
aam
leave
mov
inc
imul
dec
adc
mov
lods
push
inc
xor
loop
cltd
cmp
xor
enter
sub
shlb
inc
sub
or
fists
adc
and
inc
and
jmp
adc
loop
adc
push
and
pushf
shlb
nop
pop
mov
push
or
and
inc
adc
incl
movsl
sbb
xchg
ret
jno
or
bswap
rclb
dec
adc
push
adc
and
inc
sbb
pop
test
inc
mov
cltd
inc
jo
lret
fs
sub
in
cmp
mov
enter
cmp
mov
enter
cmp
mov
mov
push
enter
sbb
sahf
and
sub
les
jo
adc
cmpl
loop
adc
orl
addl
test
mov
xchg
adc
mov
adc
mov
and
mov
adc
sub
arpl
cmp
mov
cmp
adc
cld
sub
aad
std
sub
fucom
sti
sub
loope
inc
mov
and
sbb
cmc
rorb
dec
cmpsb
dec
and
in
movsl
mov
es
sub
adc
movsb
les
es
cmp
cld
and
lods
sub
cmp
xchg
lods
test
adc
stos
and
or
sbb
sub
test
sub
and
adc
xor
xor
mov
inc
sbb
fs
sbb
lret
or
mov
adc
sbb
addl
or
sub
adc
and
inc
jno
lods
jno
or
mov
or
inc
hlt
push
jnp
sbb
shrb
rclb
inc
inc
xor
adc
loope
lea
loopne
and
das
xadd
in
addl
adc
xor
or
das
add
stos
in
xor
sbb
daa
push
movsl
dec
mov
adc
sbb
daa
test
hlt
mov
xor
mov
dec
adc
ret
mov
aaa
push
or
int3
adc
aas
in
pushf
push
aam
or
sbb
cmpsb
sub
or
xchg
and
in
jb
push
push
loopne
sub
fs
adc
push
or
les
inc
hlt
and
sub
push
xchg
mov
push
enter
cmp
mov
leave
call
adc
enter
or
sub
adc
pop
jns
sbb
xchg
in
sub
test
test
xlat
or
and
and
inc
cmp
mov
inc
sub
xchg
xor
fwait
inc
adc
cmp
lahf
bound
ds
sahf
mov
mov
adc
dec
cmp
push
sbb
xchg
loopne
js
push
adc
int3
data16
inc
pop
and
in
jb
adc
test
movsl
enter
adc
inc
xchg
insb
adc
xchg
jno
or
xchg
les
xchg
xchg
andl
or
xchg
les
scas
mov
mov
lcall
cmp
test
cmp
fstl
popf
adc
jmp
sahf
xchg
jo
test
adc
add
das
and
push
or
adc
test
sbb
push
add
adc
stos
mov
push
mov
and
inc
mov
add
icebp
int3
pushf
pop
and
adc
in
bound
adc
adc
or
mov
aaa
sub
enter
fdivrl
dec
adc
xchg
sbb
mov
and
dec
inc
mov
push
sbbb
adc
mov
inc
loop
adc
inc
mov
push
and
inc
cmp
adc
mov
inc
mov
cmpsb
inc
dec
cmp
adc
dec
mov
push
dec
push
and
inc
dec
cmp
test
dec
loop
adc
push
and
inc
dec
cmp
dec
test
es
and
fcomps
in
lods
outsl
mov
mov
or
nop
mov
les
mov
add
xor
jns
xchg
mov
push
push
inc
pop
sub
mov
or
scas
adc
push
adc
or
sbb
nop
push
mov
pop
push
or
adc
xchg
pushf
cmp
adc
test
pop
in
sub
scas
fs
xor
sub
xchg
and
lret
call
and
fs
rolb
dec
mov
adcl
mov
and
cmpb
inc
mov
cmp
lea
adc
lret
or
xchg
adc
xor
push
xor
and
add
sub
movsl
adc
inc
mov
xor
xchg
pop
into
jo
ret
f2xm1
mov
pop
adc
xchg
int
loope
inc
rclb
loop
fldcw
xlat
or
jecxz
fnsave
testb
jecxz
idivl
jmp
adc
mov
movsl
adc
clc
mov
jne
or
stos
in
cmp
test
repnz
adc
repz
adc
mov
jno
or
icebp
cmp
sub
stc
movsl
adc
xor
cmp
daa
add
lods
adc
jmp
ljmp
jmp
inc
push
mov
jno
or
in
les
out
xchg
addr16
mov
insb
mov
sub
sbb
inc
loopne
push
add
fxam
fadd
jle
hlt
movsl
adc
add
fldcw
mov
adc
enter
add
or
lcall
adc
cmpsl
sub
xchg
scas
mov
sub
push
fs
lds
fnsetpm(287
int
fistpl
inc
mov
jno
sbb
movsl
adc
in
fucomi
test
jmp
fucomip
mov
cmpsl
mov
xor
or
decl
add
popa
fsub
dec
cmp
or
adc
inc
stos
adc
adc
fsubr
dec
adc
cmp
adc
loopne
mov
in
sub
mov
inc
repnz
and
dec
adc
aaa
sbb
inc
shlb
test
cmp
sbb
inc
loopne
dec
push
call
xchg
dec
leave
fcomps
jl
push
mov
or
pop
nop
fcom
cmp
gs
lock
and
adc
jno
fstps
mov
nop
cmpb
enter
and
xlat
dec
or
and
inc
orl
fcmove
sbb
sbb
or
mov
fsubs
push
inc
mov
movsl
mov
jno
or
and
mov
sub
sbb
mov
or
sub
leave
sub
xchg
shlb
mov
jae
sub
xchg
loopne
adc
out
adc
sbb
push
sbb
mov
push
sbb
and
inc
xor
cld
test
xor
test
push
lods
mov
test
ja
jo
lods
mov
push
sub
push
cmp
push
push
movsb
cmp
and
push
sub
and
nop
test
xchg
cmp
aaa
adc
adc
adc
sbb
xchg
sub
cmp
inc
jo
inc
push
cmp
inc
inc
adc
mov
fildll
adc
enter
mov
and
in
jb
push
inc
push
fnsetpm(287
jo
rclb
push
push
adc
cmp
dec
inc
js
mov
dec
xchg
adc
adcb
jb
addr16
xchg
mov
cmp
mov
push
sbb
and
and
adc
out
push
lahf
adc
xchg
movsl
mov
stos
test
xor
mov
fstl
and
mov
adc
rclb
sub
scas
xchg
jl
movsb
adc
sub
inc
enter
pop
in
adc
sbb
loopne
emms
roll
outsb
mov
lock
push
jle
or
test
adc
mov
cli
test
arpl
xor
ret
adc
xor
or
jmp
adc
mov
sbb
and
push
mov
push
clc
dec
cmp
sub
stc
cmp
adc
cli
mov
push
in
push
and
inc
in
cmp
add
fisttpll
or
icebp
mov
jb
adc
fcoml
pop
push
fisttpll
and
fsubrs
sub
adc
loop
adc
fstpt
mov
fisttps
and
je
push
test
adc
jbe
loop
adc
mov
movsl
inc
data16
mov
adc
mov
les
cmp
lret
test
sub
jno
adc
das
inc
adc
mov
repnz
mov
fldt
adc
sub
pop
sub
movsl
fs
in
sub
lods
sub
js
repz
and
and
inc
loop
push
inc
and
add
push
and
scas
inc
adc
dec
push
adc
scas
mov
mov
enter
test
adc
and
mov
adc
imul
push
push
mov
lds
cmp
test
popa
loop
adc
bound
mov
push
cmp
mov
or
sub
or
sub
adc
mov
push
out
push
xchg
adc
loopne
les
lahf
mov
fs
sub
push
inc
adc
adc
out
cmp
mov
fimuls
and
test
sub
adc
adc
iret
inc
in
cmp
xchg
add
sbb
pop
loopne
adc
test
inc
neg
popa
outsl
or
mov
inc
lock
in
scas
clc
and
mov
and
sahf
das
or
imul
nop
xor
enter
or
nop
inc
or
inc
mov
mov
push
push
push
xchg
push
and
movsb
jb
popa
push
inc
or
mov
mov
xchg
fs
xchg
test
adc
or
cmpsb
xchg
test
inc
cltd
leave
mov
push
push
sbb
enter
or
mov
mov
test
push
mov
push
push
cmpsl
int3
fcoml
sub
cmpsw
repnz
cmpsl
cmp
cmpsb
adc
lods
lret
les
lods
enter
cmp
test
movsl
loop
cmp
scas
icebp
add
adc
cltd
adc
adc
stos
repnz
cmp
dec
js
sbb
nop
stos
repnz
rep
cmpsb
adc
mov
xchg
sub
or
bound
movsl
sbb
cmp
lods
lds
lods
push
inc
dec
mov
stos
les
stos
test
inc
jbe
cmpsb
jno
or
cmpsl
mov
cmpsl
xchg
xchg
mov
enter
or
scas
les
and
inc
repnz
mov
enter
cmp
test
repnz
out
adc
decb
pop
insb
mov
mov
insw
test
mov
mov
sub
xchg
adc
enter
pop
cmp
xchg
pop
enter
dec
sub
push
insb
mov
insl
gs
sub
push
cmp
inc
jb
outsl
push
inc
push
mov
pop
mov
out
cmp
sub
fs
sbb
xor
cmp
mov
mov
inc
in
mov
int
adc
mov
adc
sub
lock
icebp
nop
inc
sub
pop
mov
push
xchg
adc
fisttpll
cwtl
adc
mov
push
add
movsl
sub
dec
push
orl
cmp
or
dec
jecxz
push
loope
out
orl
fwait
pop
outsl
push
dec
mov
dec
repz
bound
dec
push
cmpsl
add
mov
cmp
jb
and
inc
cld
inc
push
xor
sub
es
or
inc
xor
xor
dec
xor
pop
pop
add
es
mov
inc
inc
push
inc
sub
sub
dec
mov
iret
pop
or
call
mov
push
insl
xor
roll
mov
and
pop
jns
sub
jl
or
pop
inc
sub
add
xchg
add
negb
or
jmp
in
je
insl
daa
or
add
sub
push
mov
iret
inc
insl
push
adc
add
push
cmp
bound
push
add
dec
jbe
sub
mov
loope
cli
lahf
sbb
sub
dec
arpl
sbbl
push
sbb
cs
push
jno
and
data16
or
jmp
xor
and
pop
pop
cmp
out
push
mov
cli
pop
stos
add
or
or
inc
fstpl
xor
dec
cs
sub
jge
jne
cltd
adc
push
addb
and
daa
or
sbb
lods
jae
or
adc
push
inc
rcll
adc
popf
jle
movsl
or
pop
pop
cltd
add
and
mov
xor
inc
lcall
adc
add
dec
push
in
add
push
inc
or
sbb
add
mov
aam
hlt
push
data16
add
sbbb
push
into
inc
enter
push
mov
dec
fdivl
xchg
adc
sets
test
dec
jg
xchg
add
inc
sub
mov
adc
test
push
pop
push
negb
and
inc
bound
lods
pop
or
or
sub
stos
and
mov
inc
stos
cs
inc
dec
adc
sbb
dec
dec
inc
idivl
dec
inc
psllw
mov
or
inc
pop
loopne
sbb
inc
cmpb
iret
imul
dec
dec
imul
push
dec
and
adc
push
jp
adc
test
divb
adc
inc
sbb
xchg
dec
or
arpl
dec
pop
push
movsb
sub
dec
or
push
dec
movsb
or
cmpsb
push
inc
dec
jbe
push
inc
inc
jbe
sbb
inc
or
cmp
mov
or
lcall
cli
test
notb
dec
push
inc
daa
push
scas
xchg
test
add
cmc
out
das
push
sahf
movsb
inc
mov
repz
add
add
push
pusha
arpl
or
inc
push
sbb
xor
pop
fsts
nop
or
pop
dec
lds
cli
inc
jnp
xor
xor
scas
mov
inc
inc
adc
or
mov
cld
push
inc
push
es
fisubrs
mov
push
es
mov
dec
in
push
or
es
popa
aaa
daa
outsb
mov
xchg
or
pop
push
push
sbb
in
sub
sti
inc
add
inc
test
push
dec
or
dec
push
pop
pop
pop
leave
push
imul
pop
mov
mov
sbb
inc
jg
xorb
push
fwait
or
inc
pop
lea
or
sbb
or
push
movsb
pop
push
dec
push
js
inc
adc
sub
push
dec
push
inc
pop
jle
pop
pop
push
jns
movsb
and
inc
adc
push
push
int
sub
add
mov
push
and
add
cmp
lcall
xchg
dec
addr16
push
dec
push
rclb
lea
mov
test
push
int
push
sbb
inc
mov
dec
int
push
push
sub
dec
dec
syscall
adc
loop
mov
rolb
cmpsb
and
ss
push
push
or
push
sbb
adc
push
and
dec
add
ret
dec
mov
gs
dec
daa
enter
rol
hlt
xlat
add
push
inc
dec
push
jbe
inc
or
adc
jg
push
sti
or
aam
push
xchg
sbb
xchg
and
and
xor
imul
jo
mov
adc
push
inc
or
push
in
xor
inc
mov
outsl
xor
xchg
nop
or
dec
icebp
push
pop
mov
push
push
inc
inc
enter
outsl
push
dec
push
and
push
push
inc
inc
enter
dec
mov
add
mov
fisubs
inc
inc
mov
sub
mov
add
push
dec
mov
ret
or
push
mov
inc
jmp
dec
movups
pop
outsl
push
sub
or
mov
ljmp
dec
out
sbb
push
scas
popa
lret
or
ljmp
xor
fnstenv
push
int
cmp
adcl
pushf
fildll
daa
jno
mov
push
mov
push
mov
xchg
push
and
mov
push
inc
inc
pop
sbbl
dec
mov
push
addr16
jnp
push
dec
je
hlt
or
dec
mov
dec
test
push
decl
mov
inc
inc
dec
push
push
imul
push
xchg
and
inc
movsb
push
push
ss
jbe
lret
or
inc
or
push
pop
inc
insb
xor
push
or
push
inc
pop
or
xchg
inc
lret
pop
sub
inc
push
cmp
pop
inc
dec
or
push
lds
mov
pop
push
cvtps2pi
push
inc
or
push
jp
cmp
dec
or
insb
arpl
lret
inc
outsb
jo
inc
or
push
inc
inc
mov
mov
in
sub
outsb
xlat
lret
adc
cmp
sub
push
pop
js
sbb
insb
js
dec
ja
add
sbb
and
sbb
add
bt
add
jmp
inc
fcompl
or
mov
xchg
and
les
cmp
loopne
test
pop
jno
xlat
or
pop
adc
and
mov
repnz
inc
shl
les
enter
in
das
and
mov
rcrb
lea
push
mov
shll
sbb
test
inc
jae
mov
and
sbb
lods
orb
push
iret
test
mov
xchg
int3
shr
icebp
push
or
jo
clc
mov
into
pop
and
adc
sbb
xor
dec
sbb
inc
int
pusha
cmp
in
sub
nop
mov
pop
inc
lods
adc
enter
leave
jo
mov
dec
lret
fcoms
sbb
cmp
aam
test
pop
jno
ret
js
mov
pop
adc
test
push
and
fcomps
test
in
jno
mov
test
mov
cld
mov
adc
mov
bnd
dec
or
jecxz
insb
mov
repnz
pushf
or
in
mov
mov
pop
inc
sub
clc
jns
sbb
inc
mov
or
xchg
in
das
and
inc
test
test
sub
cmp
and
fstpl
and
jns
sbb
test
icebp
les
fldcw
and
inc
mov
sbb
test
call
inc
in
add
aaa
cld
inc
sbb
sbb
hlt
or
xor
cld
das
and
loopne
cmpsb
sbb
lods
cmp
sbb
xchg
in
das
and
inc
les
test
loopne
fadds
loop
cmp
mov
adc
xchg
sbb
or
or
cmp
xor
cwtl
or
pop
jb
pop
xchg
jl
cwtl
mov
inc
ret
dec
cmp
or
cmp
xor
add
dec
aam
les
mov
nop
arpl
lods
outsb
and
int3
je
insb
jle
pop
cwtl
mov
jno
subb
jl
testb
jo
mov
adc
and
jge
push
dec
js
pushf
and
inc
cld
pop
int
enter
xorl
and
dec
in
ss
or
cmp
loopne
insb
js
jmp
xor
int3
or
in
inc
fs
sbb
lods
mov
int3
andb
xor
xor
push
cmpb
xorl
dec
push
or
sbb
xchg
or
cwtl
xor
mov
or
test
call
push
loope
add
inc
add
mov
lods
dec
pusha
enter
jo
xchg
sbb
pusha
dec
js
nop
and
clc
adc
xchg
add
and
dec
jo
nop
and
xchg
xorl
mov
loopne
movsl
or
mov
test
dec
rclb
andl
call
lcall
jo
xchg
xchg
mov
add
fwait
xor
mov
xchg
les
loopne
cld
sbb
leave
xchg
or
xchg
mov
rolb
insb
popf
mov
push
mov
and
dec
les
and
inc
mov
dec
add
push
pop
jl
loopne
inc
inc
cwtl
add
xchg
cld
les
sbb
mov
test
and
movsl
inc
add
adc
and
sbb
cwtl
jl
shlb
inc
or
pop
lock
loopne
push
sbb
adc
inc
mov
rorb
mov
dec
loopne
das
and
imul
sub
and
mov
and
push
or
movb
sbb
popa
pusha
xor
std
lods
xor
sbb
and
jl
push
sbb
hlt
cmpsb
cmp
mov
and
inc
clc
dec
cwtl
pop
mov
outsl
push
sub
xor
xor
and
xor
sub
and
or
mov
xchg
inc
mov
adc
sbb
stos
and
lods
or
mov
or
add
mov
xor
push
movsb
aam
enter
dec
adc
cltd
jno
icebp
sarb
mov
pop
mov
data16
mov
xor
push
push
dec
sbb
or
leave
pop
shlb
mov
roll
lock
mov
and
and
jle
mov
sbb
inc
sub
lret
sbbb
hlt
sub
sbb
dec
push
or
fmul
jns
xor
pop
adc
test
mov
cltd
adc
push
push
int3
sarl
lret
mov
mov
pop
cltd
adc
or
dec
int3
inc
pop
cmp
pop
cld
inc
cmp
xchg
fs
imul
pop
test
and
xor
or
enter
sbbl
shrb
and
pop
cwtl
push
mov
mov
imul
data16
popa
data16
insb
push
lock
rol
push
mov
in
sarb
lret
clc
test
cmp
add
aam
dec
sub
sub
test
clc
sbb
lock
and
xor
cmp
xor
jno
leave
fmul
or
sbb
jbe
cmovnp
lea
xor
test
and
lock
xor
popa
in
adc
dec
call
cltd
mov
push
imul
xor
and
add
gs
enter
int3
xchg
cmp
lock
cwtl
cs
dec
sbb
xchg
and
dec
xchg
lods
cmpsb
enter
loopne
data16
push
xor
sbb
and
pop
andb
xchg
aam
in
mov
call
adc
xor
xor
imul
mov
inc
mov
xchg
push
sbb
shlb
int
pop
or
imul
call
push
andb
and
cld
icebp
xchg
xchg
push
je
mov
dec
and
stos
adcl
mov
xor
and
in
dec
pushf
xchg
fsubs
mov
cs
xor
aam
clc
or
jmp
dec
in
adc
test
adc
push
cmp
fsubrs
xor
sbb
adc
inc
shll
sbb
adc
cld
mov
rclb
cltd
jo
sub
jb
gs
and
xor
call
les
outsl
pusha
push
adc
fmuls
faddl
lods
pop
int3
pop
sbb
in
xchg
inc
aam
js
cwtl
movsb
mov
xchg
mov
sbb
inc
nop
dec
add
sub
loope
jns
xchg
aaa
mov
cld
dec
xchg
int3
or
xchg
enter
jb
outsl
leave
stc
push
nop
xchg
loope
xorb
cmp
clc
sub
stos
adc
sub
in
lods
add
cmp
xor
xchg
mov
mov
inc
scas
mov
or
lock
mov
or
adc
icebp
sbb
add
cmpsb
push
sbb
mov
sub
inc
int3
xor
inc
repnz
and
jl
mov
loop
jo
add
or
stc
nop
adc
ds
fiadds
stos
test
aam
adc
pop
adc
mov
data16
push
or
mov
dec
enter
out
sub
push
adc
cmp
push
xchg
and
nop
pushf
mov
dec
ficoms
or
dec
sub
and
push
js
xchg
dec
mov
inc
fdivrl
cltd
adc
xor
sbb
or
lods
xchg
mov
adc
cltd
adc
jb
and
dec
in
out
or
adc
scas
dec
sbb
int3
adc
inc
mov
outsb
and
dec
mov
mov
repnz
mov
adc
xchg
xor
addl
or
dec
xchg
hlt
jo
mov
mov
cmp
dec
dec
pop
xchg
jo
jle
mov
int3
dec
ficoms
and
inc
sbb
mov
push
and
dec
js
mov
mov
rclb
in
and
inc
or
or
xchg
and
inc
push
pusha
mov
andb
mov
inc
int3
fmull
or
mov
adc
pop
dec
je
andb
inc
sahf
scas
mov
dec
in
mov
and
push
and
fcoml
out
and
inc
push
mov
push
xchg
xor
dec
inc
pop
jb
adcb
and
dec
rclb
push
cli
adc
or
pop
mov
inc
adc
mov
xchg
shlb
inc
lock
mov
inc
and
dec
xchg
jbe
mov
mov
adc
and
dec
decb
sub
pop
mov
jle
xchg
dec
movsb
xchg
mov
clc
mov
andl
dec
push
xchg
pop
and
sbbb
rorb
xchg
repnz
mov
cmp
push
test
mov
mov
adc
and
mov
xchg
cmp
dec
inc
pop
je
adcb
and
dec
mov
enter
in
add
push
push
or
xor
xor
and
jb
test
and
dec
faddl
decb
mov
adc
dec
dec
pop
xchg
insb
and
orb
mov
and
inc
out
clc
mov
mov
and
dec
push
xchg
data16
xchg
mov
ret
and
dec
lock
shlb
or
pop
adc
jl
xchg
xchg
mov
rorb
cld
inc
adc
or
xor
inc
inc
push
insb
mov
dec
mov
inc
adc
and
dec
xchg
pop
and
js
mov
dec
aam
call
ret
fs
sub
xchg
dec
and
push
mov
xchg
fisubl
in
inc
decb
inc
les
sub
cmp
inc
dec
push
xchg
pop
and
xchg
and
dec
rclb
add
stc
or
mov
and
dec
insb
xchg
jle
cwtl
inc
mov
mov
adc
mov
xor
hlt
adc
and
and
inc
inc
push
mov
jle
mov
xchg
lods
and
hlt
pop
add
or
xchg
sbb
sub
mov
push
jbe
test
mov
in
testb
adc
pop
push
jp
nop
and
dec
mov
ret
inc
out
mov
leave
sbbl
dec
dec
xchg
pop
and
jl
mov
sahf
and
dec
rclb
push
clc
adc
or
inc
xchg
pop
and
mov
ret
xchg
loop
in
inc
hlt
add
lret
adc
inc
dec
push
xchg
and
xchg
mov
dec
enter
loop
testb
int3
adc
dec
dec
push
xchg
pusha
and
jl
mov
rclb
cld
or
int
mov
ds
dec
xchg
jbe
xchg
mov
dec
in
mov
adc
es
xor
mov
push
jl
mov
mov
mov
adc
and
push
enter
or
enter
jp
mov
mov
call
cld
jne
rclb
sub
cmp
or
adc
mov
sahf
es
or
adc
lock
shll
xor
xchg
pop
and
lcall
lock
push
rorb
sbb
push
insb
mov
xchg
fisubl
out
addl
sub
cmp
dec
push
xchg
outsb
and
adc
in
mov
adc
sbb
adc
fs
dec
and
gs
out
daa
xor
push
or
je
inc
jb
jns
arpl
push
cli
ss
jp
cld
jbe
pop
outsb
push
inc
fstps
sbb
dec
jle
push
jp
mov
sti
jb
jne
and
rorb
mov
or
fs
sbb
lcall
jne
adcl
jns
or
rcrb
sub
sbb
cmpsl
cmp
jb
lods
mov
add
cmc
jbe
xor
sbb
push
test
jne
push
push
imul
outsl
dec
jne
sbb
jns
and
jbe
mov
ret
sub
cmpsb
nop
inc
and
or
jo
test
loopne
mov
imul
inc
js
inc
in
movsl
sar
fildll
sbb
mov
adc
fs
cmp
shll
pop
dec
outsl
div
hlt
dec
xchg
jl
inc
cmpsl
adc
inc
imul
push
mov
push
mov
mov
push
and
push
push
sub
or
je
sbb
adc
and
sahf
movzwl
inc
mov
adc
push
adc
insb
sbb
outsb
push
js
cltd
sbb
sub
pop
ja,pt
or
popa
xor
ja
or
push
fs
dec
jb
out
jae
and
bound
jb
push
ja
fnstcw
bound
repnz
addr16
mov
xlat
push
inc
outsl
inc
insl
movsb
popf
jge
divb
dec
jbe
jo
movsl
dec
add
gs
push
nop
sub
push
lcall
sarb
and
jne
inc
mov
inc
and
adc
enter
sti
rclb
mov
xor
xchg
es
loop
pop
enter
adc
inc
inc
push
in
mov
hlt
xor
xor
inc
sbb
push
arpl
sub
dec
es
dec
push
cmp
xchg
je
adc
cli
adc
or
call
inc
inc
sub
mov
cmp
inc
jno
fsubl
or
sbb
das
xchg
movd
cmp
scas
cmp
push
cltd
mov
nop
lretw
repnz
jne
sub
pop
int
and
insl
fsubrs
and
ss
sbb
inc
lds
pop
pushf
or
popa
inc
inc
mov
dec
dec
bound
xchg
sub
jb
jb
hlt
mov
ljmp
xchg
lcall
xor
adc
loopne
rolb
gs
xchg
or
jnp
or
add
in
insl
inc
mov
dec
inc
adc
in
dec
test
push
fs
test
or
dec
ljmp
sub
dec
and
xor
jns
in
jbe
and
mul
jecxz
adc
or
test
lcall
lret
and
xchg
test
jae
dec
push
fisubs
outsb
xor
jl
ret
mov
inc
outsb
aaa
jbe
and
push
arpl
sbbl
mov
or
insl
inc
jbe
and
sub
sub
rcrb
stc
jbe
dec
test
adc
cwtl
pushf
imul
jle
add
test
sub
pop
xor
push
or
inc
dec
adc
and
inc
fwait
into
orl
dec
push
addr16
sti
push
adc
imul
dec
pop
jo
pushf
sub
movsb
repz
inc
xchg
push
bound
scas
and
rorb
push
dec
sbb
mov
and
adc
push
adcl
sbb
push
xor
lea
clc
ja
nop
mov
jb
out
test
cmp
inc
xor
push
es
push
and
rcll
sbb
inc
dec
subb
sahf
nop
pop
cltd
xor
pop
sbb
dec
dec
out
loop
inc
das
lods
dec
cmp
pop
adc
mov
inc
dec
pop
imul
adc
insl
std
or
mov
xchg
fs
xchg
jo
adc
inc
cmp
lods
cmp
push
adc
inc
int
dec
push
inc
push
mov
adc
sbb
sbb
push
push
push
dec
cmp
inc
sbb
mov
and
inc
mov
inc
cmp
inc
sbb
push
js
ljmp
scas
in
mov
inc
inc
repnz
sub
xchg
les
imul
pop
pop
dec
push
addr16
in
cmp
jns
jl
pop
mov
mov
push
mov
cmpsb
mov
sub
xor
inc
jae
push
arpl
xor
push
and
dec
adc
push
mov
mov
lret
push
test
jmp
xor
inc
sbb
mov
aas
cs
sbb
lds
in
ljmp
outsb
je
jns
dec
and
inc
adc
mov
imul
xchg
mov
pop
adc
adc
repnz
push
add
dec
lahf
out
lcall
inc
push
stos
cld
cmp
imul
ds
or
insl
inc
sub
lret
pusha
aam
xor
and
add
inc
push
fs
insb
mov
or
and
push
mov
aam
adc
adc
dec
ss
push
mov
push
inc
test
xchg
jl
ss
sub
mov
push
adc
loopne
pushf
gs
xchg
jae
xchg
lods
fwait
ljmp
push
adc
sbb
pop
xor
outsb
dec
ljmp
imul
mov
sbb
dec
jb
addr16
inc
adc
inc
out
bnd
push
rorb
push
jo
loop
sub
stos
inc
fldt
push
adc
mov
int3
sub
dec
push
xor
sahf
punpckhwd
insb
lds
adc
lods
inc
jge
test
pop
jae
inc
hlt
lods
xchg
inc
adc
pop
xor
sub
push
xlat
mov
jmp
mov
jbe
imul
inc
dec
inc
icebp
push
daa
pop
mov
pop
daa
dec
stos
pushf
mov
add
outsb
or
add
bound
insl
cmp
xchg
outsb
or
fbld
fucomip
adc
xchg
jo
mov
inc
xchg
add
pop
mov
dec
test
test
movsb
leave
inc
xor
arpl
adc
push
mov
ficoms
push
cmpsl
sbb
mov
pop
fadd
bnd
ds
pop
sub
inc
out
sbb
pop
test
sub
popa
pushf
fs
jb
sbb
lea
insb
xchg
push
sarb
or
sahf
pop
inc
adc
xchg
push
dec
dec
cwtl
cwtl
cltd
mov
jmp
xchg
sbb
push
xchg
nop
push
sbb
push
inc
arpl
repnz
movsl
push
arpl
inc
ficomps
jl
mov
adc
dec
cmp
adc
movsl
mov
lds
ret
xor
sub
popf
sub
mov
adc
push
in
outsb
jl
inc
fildll
jmp
sub
jb
aaa
aad
adc
in
movb
aam
es
mov
inc
xchg
pop
outsl
fmulp
cmp
insl
cmp
cmp
xor
dec
adc
adc
and
jb
lret
or
and
popf
xor
bound
rcpps
mov
push
sub
dec
mov
bnd
rcrl
adc
inc
inc
sbb
outsl
push
imul
and
scas
int
mov
aam
dec
xchg
dec
arpl
adc
sbb
jne
pop
outsb
lods
std
xchg
xchg
ss
jmp
jge
pushf
pusha
out
push
ja
nop
push
inc
mov
inc
push
adc
sub
jae
imul
imul
adc
inc
movsb
mov
mov
insl
xor
loope
xlat
icebp
sub
push
stos
adc
xor
insb
xchg
dec
push
sbb
push
imul
int
aaa
imul
test
aam
mov
push
and
cmp
push
addr16
and
rcll
adc
jne
movsl
sub
mov
js
in
pop
and
and
nop
adc
je
data16
inc
leave
push
jbe
xchg
pop
adc
pushf
nop
repz
mulb
addr16
push
cmp
sub
test
dec
adc
rcrl
in
xor
leave
push
mov
jbe
push
in
mov
adc
push
sub
addr16
out
xchg
cmp
push
mov
sbb
push
pop
jne
cmpsb
and
and
popa
lock
imul
xchg
in
lcall
or
pop
dec
test
inc
sub
jae
aam
leave
jo
push
sub
push
leave
icebp
nop
lods
or
adc
mov
dec
jae
sbb
and
test
out
mov
and
mov
out
mov
push
ret
dec
arpl
outsb
mov
dec
dec
mov
mov
dec
jno
mov
inc
dec
jae
popa
movsb
scas
push
data16
pop
cltd
cmp
nop
jge
loop
adc
xchg
cld
mov
xchg
sub
inc
insl
jo
jns
push
mov
or
inc
lahf
getsec
leave
addr16
lea
inc
xchg
popa
inc
lahf
adc
jbe
cmp
push
inc
push
dec
imul
shll
lret
jp
push
sub
dec
jge
cmp
dec
mov
mov
dec
js
dec
les
sbb
adc
mov
fs
sub
inc
pop
cmp
bound
mov
jo
pop
dec
sub
adc
adc
mov
or
jne
cmpsl
jmp
jl
xchg
inc
mov
jl
mov
sub
xor
data16
popf
ss
adc
inc
mov
mov
mov
bound
inc
jp
adc
inc
adc
in
mov
sub
xor
orb
imul
mov
test
xchg
sub
xor
xchg
and
sbb
inc
xchg
lods
fists
dec
sub
cmp
js
push
pushf
mov
das
inc
adc
shlb
xchg
and
mov
inc
push
movsl
xchg
and
enter
add
dec
sub
xchg
mov
imul
sbb
mov
movsl
ret
pop
and
cmpsb
lret
enter
fsubs
mov
xor
adc
call
mov
mov
inc
mov
or
inc
inc
cmp
mov
call
clc
imul
xor
daa
sub
push
sbb
adc
inc
or
xchg
iret
xchg
xchg
fsubs
push
test
cltd
hlt
dec
sbb
mov
aad
adc
mov
mov
jb
adc
sub
adc
push
add
xchg
pusha
int
das
cmp
scas
or
adc
inc
xchg
adc
mov
xchg
mov
push
out
mov
adc
and
imul
jo
repz
jne
mov
sbb
dec
rorb
sbb
shll
add
lock
cltd
mov
fs
bound
je
sbb
mov
call
in
ret
test
sub
and
int
push
inc
mov
cld
and
mov
xor
jecxz
push
push
arpl
mov
push
pop
inc
cmpsl
pushf
sub
fs
cs
lret
mov
dec
push
faddl
push
pop
das
lea
adc
insl
test
push
pop
ljmp
lcall
mov
adc
mov
sub
adc
cltd
push
lahf
lahf
dec
je
mov
dec
popa
or
jp
jo
adc
inc
jne
idiv
inc
insl
adc
push
daa
inc
notl
dec
int
xchg
fsubs
aaa
xor
add
imul
fldenv
insl
test
sti
test
push
xchg
pop
imul
sbb
pop
mov
movlps
out
or
lret
mov
push
adc
movsb
adc
movsb
adc
jg
fsubrl
add
cmp
mov
repnz
inc
push
leave
inc
push
mov
push
push
sub
sbb
push
cli
lock
loop
pop
sub
cli
xchg
adc
push
mov
mov
movsl
movsb
push
push
test
push
insb
pop
inc
fidivs
mov
fldl
or
je
lret
int3
push
lcall
xor
test
adc
sub
dec
das
inc
je
sbb
mov
push
push
cmpsw
inc
add
pop
inc
shll
cs
sub
popa
icebp
jns
xchg
pop
xchg
stc
lret
push
inc
dec
xchg
and
cmpsb
sub
sbb
in
ret
das
cwtl
fstl
pop
jnp
sub
lcall
in
jmp
in
movsb
je
mov
les
incb
jecxz
sub
pop
sub
sub
and
loope
enter
cwtl
or
mov
push
inc
sub
clc
push
les
adc
push
adcl
adc
add
rcrb
bound
and
loope
faddl
dec
sbb
mov
inc
xor
int3
inc
js
add
xor
sbb
sbb
adc
or
jbe
mov
push
sbb
loopne
data16
insb
xor
or
jne
mov
lea
stc
mov
enter
adc
jge
fadds
mov
and
jl
rorb
xchg
jo
dec
inc
adc
test
inc
mov
jmp
sub
or
and
jo
sub
nop
push
bound
les
aam
mov
or
or
add
add
dec
jg
insb
mov
mov
adc
and
in
es
cmp
jg
mov
pop
loop
clc
or
in
mov
adc
dec
jae
mov
mov
adc
and
inc
pop
out
sbb
push
push
js
mov
and
inc
cli
adc
out
mov
pop
and
dec
test
shr
mov
ja
je
iret
adc
punpckhdq
push
lahf
pop
push
jb
jl
or
cltd
adc
addb
or
icebp
xchg
loope
adc
jecxz
rcrl
and
pop
stos
test
mov
xchg
lahf
lahf
push
mov
cmp
and
jl
js
and
fs
push
adc
or
inc
faddl
push
add
or
or
xor
push
add
push
adc
sbb
sbb
sbb
fs
cs
cwtl
pop
call
out
jo
pop
inc
mov
aas
push
js
cmp
cmp
ds
sbb
cmp
lea
push
rorb
add
add
cmp
push
cmp
ss
sub
dec
and
sarb
es
sub
cmp
and
loop
and
mov
and
pusha
and
loopne
loopne
loopne
loopne
mov
nop
int3
inc
dec
loop
popf
mov
aas
inc
push
pop
and
aas
fdivrs
ja
shll
adc
inc
sbb
movsl
adc
popf
push
mov
insb
xchg
push
imul
roll
pop
mov
dec
jge
sbb
lret
pop
xor
popf
push
xor
inc
scas
leave
mov
dec
push
test
jbe
stos
test
iret
or
movsb
sbb
mov
sarl
push
shl
dec
inc
adc
push
sub
xchg
std
sbb
dec
jecxz
arpl
xor
scas
push
enter
lds
or
sbb
in
push
pop
adc
sub
pop
jp
imul
lea
xor
rolb
stos
pop
je
push
xchg
cmp
and
js
push
mov
add
mov
jge
sbb
jle
shrb
rorb
sbbl
jae
push
jae
dec
inc
data16
adc
mov
add
aas
inc
sbb
jb
test
sbb
shlb
or
jb
ja
sbb
ja
jl
jp
adc
push
xchg
or
pop
sbb
or
std
cmp
inc
sbb
cmp
cli
mov
jns
or
xor
xor
mov
test
mov
inc
push
mov
rorb
adc
xchg
adc
xchg
sarl
movsb
pop
cmp
mov
jmp
or
adc
aam
or
jo
dec
insb
jecxz
ja
and
dec
mov
enter
out
and
adc
mov
je
inc
mov
push
jae
mov
inc
inc
lea
adc
aaa
cmc
or
fistps
adc
pop
in
xor
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
sbb
xor
popf
or
adc
sbb
and
dec
lahf
popf
lahf
mov
lahf
int3
lahf
rcrb
clc
lahf
cld
mov
or
adc
cs
ss
ds
inc
lahf
dec
lahf
push
lahf
pop
lahf
data16
outsb
lahf
jbe
jle
xchg
sahf
lahf
cmpsb
lahf
scas
lahf
mov
mov
lahf
lahf
ficomps
negb
push
daa
push
inc
push
xchg
ds
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
xor
enter
and
jno
mov
lret
aaa
test
lds
popa
add
rolb
cmp
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
loopne
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
aas
sbb
jle
mov
cmp
mov
cwtl
leave
lret
rcl
fldl2e
loope
jmp
jb
je
jbe
js
jp
jl
jle
xchg
push
data16
fmuls
sbb
xor
pop
sbb
rcrb
daa
pop
stos
xor
jae
jg
xchg
jecxz
xor
daa
inc
inc
dec
addr16
xchg
pop
fs
in
xchg
sub
rep
repz
fdiv
loop
hlt
inc
push
xor
in
call
adc
mov
or
sarb
aas
clc
push
sbb
cmp
mov
pop
bsr
ror
xlat
iret
out
lock
inc
xor
bound
jbe
jl
xor
lock
pop
in
call
jmp
testl
arpl
sbb
das
xchg
cmp
pop
mov
cmp
xchg
mov
into
lock
hlt
or
cmp
cmp
leave
cmp
inc
jnp
xchg
xchg
movsb
mov
jmp
sub
push
rcrb
lahf
lea
mov
lahf
out
pop
add
cmp
xor
aam
dec
testb
xchg
cmp
sahf
shrl
repz
or
cmp
inc
call
dec
mov
out
mov
iret
incb
pop
cmp
je
jbe
js
jp
jl
sbb
cmp
jbe
mov
ds
aas
imull
and
in
stos
lock
lock
idiv
cld
cld
add
cmp
push
cmp
cmp
xor
aas
push
aas
jge
xchg
lea
xor
cmp
push
setp
vphaddubq
fcmovne
loope
out
ret
or
pop
xchg
sub
push
rcll
jns
repz
inc
test
inc
and
and
jb
je
jbe
js
jp
jl
sbb
xor
or
insl
cmp
push
dec
and
cmpl
cmp
mov
cltd
push
pop
cmp
xchg
mov
cmp
cmp
fsubr
jecxz
mov
inc
in
call
mov
cld
fscale
cwtl
imul
add
leave
xor
loopne
and
lahf
and
dec
cmp
cmp
shl
icebp
cld
add
xor
sbb
cmp
xor
xchg
ret
or
iret
sahf
iret
mov
iret
into
iret
iret
fmulp
out
out
sbb
ss
je
jbe
js
jp
jl
inc
rcl
bound
sbb
aaa
adc
sahf
cmp
push
lahf
pop
pop
outsl
lahf
jnp
mov
jns
inc
adc
in
inc
or
and
cmp
inc
rorl
push
repz
repz
push
jb
jp
xor
repz
repz
repz
repz
loop
ljmp
push
or
and
sub
push
jecxz
repz
push
jb
jp
xor
repz
repz
repz
repz
loop
ljmp
pop
or
sbb
cmp
cld
inc
cld
dec
mov
jle
jle
jle
jle
jle
jle
jle
pop
xchg
js
mov
aas
mov
jl
loop
ljmp
cmp
leave
adc
sbb
and
sub
xor
cmp
inc
stc
dec
stc
push
stc
pop
stc
stc
push
jb
jp
cmp
stc
xchg
stc
lcall
mov
cld
sar
loop
ljmp
jb
je
jbe
js
jp
dec
xor
inc
es
cs
pop
lahf
bound
jp
sbbb
lahf
mov
lahf
mov
lahf
rcrb
ljmp
sbb
popf
adc
sub
aad
pop
lahf
inc
lahf
dec
lahf
push
lahf
pop
lahf
bound
jp
sbbb
mov
iret
mov
daa
cld
loop
sbb
repz
icebp
add
xor
sbb
and
sub
xor
cmp
xor
test
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
ljmp
push
add
add
or
mov
iret
and
sub
cmp
inc
iret
dec
rorl
xchg
pop
iret
iret
push
jb
jp
or
iret
xchg
iret
lcall
iret
mov
shl
loop
ljmp
xor
leave
adc
sbb
and
sub
icebp
cmp
inc
stc
dec
stc
push
stc
pop
stc
stc
push
jb
jp
cmp
stc
xchg
stc
lcall
je
ret
cld
sar
loop
ljmp
cmp
or
adc
sbb
cmp
out
out
out
out
in
shll
repz
xchg
repz
jle
dec
lret
fcmovb
lahf
ljmp
xor
daa
adc
and
lcall
cmp
push
lahf
pop
lahf
bound
jp
orb
iret
fcmove
loop
ljmp
xor
xchg
adc
sub
xor
cli
inc
je
push
cld
pop
cld
cld
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
shlb
ljmp
or
adc
fs
cmp
inc
aas
dec
aas
push
and
out
out
out
out
out
out
out
out
out
out
out
out
out
in
rcl
ljmp
ss
adc
sbb
and
sub
xor
dec
jle
jle
jle
jle
jle
pop
jp
aas
mov
xchg
aas
lcall
mov
shl
loop
ljmp
aaa
or
adc
sbb
and
sub
xor
cmp
inc
cld
dec
cld
push
cld
pop
cld
cld
push
jb
jp
cmp
cld
xchg
mov
jle
jle
jle
jle
jle
jle
dec
rorb
sub
iret
ljmp
cmp
xchg
adc
sub
xor
cmp
inc
repz
repz
repz
repz
push
jb
jp
xor
int3
xchg
cmp
repnz
xorl
dec
pop
mov
lahf
rcrb
call
cli
loope
or
adc
sbb
and
sub
xor
fs
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
push
aas
cmpb
aas
nop
aas
cwtl
aas
mov
aas
mov
aas
shlb
je
dec
dec
clc
andl
mov
ret
xchg
inc
inc
push
cld
pop
cld
pusha
cld
push
cld
cmp
cld
nop
cld
cwtl
cld
mov
cld
mov
xchg
rol
dec
loopne
call
clc
jo
or
adc
sbb
cmp
cmp
inc
aas
dec
aas
push
aas
pop
and
out
out
in
mov
cld
mov
shlb
jle
loopne
jb
je
dec
or
jo
dec
sbb
aam
stc
pusha
stc
push
stc
je
js
jl
cmp
stc
mov
xchg
stc
mov
mov
stc
enter
sar
aam
fdivr
fdivr
lock
andb
add
xor
popf
sbb
and
out
jle
jle
pop
dec
je
js
jl
or
nop
push
les
int3
add
fcompl
insb
in
aas
cld
mov
dec
sub
incl
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
loopne
call
lock
adc
sub
leave
lret
pop
xlat
js
inc
jl
jle
jle
jle
dec
push
test
mov
nop
iret
xchg
iret
cwtl
iret
pushf
leave
mov
lods
stc
sar
clc
call
lock
adc
repz
testl
js
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
and
cmp
popf
xchg
add
or
adc
inc
dec
in
lock
push
sahf
dec
pop
pop
lahf
pusha
lahf
fs
push
lahf
mov
lahf
lods
lahf
mov
mov
mov
lahf
aam
hlt
lahf
cld
mov
or
adc
sbb
sbb
xor
repz
bnd
dec
insb
pcmpeqd
iret
mov
lods
iret
mov
mov
popa
ror
int3
stc
sar
aam
in
mov
adc
sbb
and
sub
sub
stc
xor
inc
stc
fs
insb
stc
jo
je
js
jl
aas
test
mov
mov
stc
sar
aam
fdivr
fdivr
loopne
in
call
sbb
and
and
sub
xchg
movsb
xor
push
cmp
inc
cld
push
cld
je
pop
push
add
mov
mov
nop
repz
repz
repz
repz
aam
fdiv
loopne
in
call
lock
hlt
aas
clc
aas
cld
and
out
imul
push
dec
clc
dec
cld
push
cld
push
pop
cld
insb
cld
mov
xchg
cld
cwtl
cld
pushf
cld
mov
cld
lods
cld
mov
mov
cld
in
in
cld
lock
hlt
cld
clc
cld
cld
std
sarb
in
call
xor
cld
push
cld
gs
insb
cld
jge
test
mov
cld
mov
cld
sar
frndint
loope
jmp
cld
ret
or
adc
insl
ret
push
shll
js
jl
xor
repnz
movsb
nop
stc
xchg
fs
cld
hlt
mov
push
cld
ret
xchg
add
or
xor
push
out
out
out
out
out
out
out
out
in
mov
or
or
divb
pop
xor
insb
cmp
mov
dec
push
mov
data16
pop
mov
es
daa
push
and
cmp
arpl
inc
es
mov
js
jp
jl
dec
dec
paddd
pop
mov
popa
stc
gs
imul
jne
cmp
dec
inc
or
les
or
in
call
cmp
cmp
sarl
xlat
aas
fstpt
fistpll
jecxz
out
jmp
out
aas
repz
idivl
sti
pop
lock
cmpsb
add
cmp
js
dec
pop
or
cmp
xchg
adc
sbb
xchg
cmp
add
xchg
call
and
mov
inc
mov
cmc
lret
ret
adc
out
movsl
xor
dec
movsb
or
mov
call
imul
js
jg
mov
jmp
sar
aam
fdivr
fdivr
loopne
in
call
lock
hlt
xchg
clc
push
cmpb
shll
pop
xchg
cmp
push
sbb
dec
inc
mov
pop
loopne
test
aad
subl
push
daa
aas
jb
je
dec
pop
jle
and
add
xchg
add
xor
cli
xor
dec
and
popf
add
xchg
mov
mov
add
ss
xchg
mov
mov
mov
inc
ljmp
hlt
or
cmp
shl
fmuls
cmp
je
jbe
js
jp
std
icebp
icebp
stc
pop
cmc
xor
cmp
test
shl
mov
cmp
xchg
and
lahf
push
ds
cmp
daa
xchg
xchg
loope
aas
decl
rolb
or
inc
call
add
pop
cmp
das
adc
roll
scas
mov
out
loopne
xor
mov
mov
jmp
es
decl
adc
ss
inc
push
les
and
jbe
js
jp
pop
pop
adc
xchg
loopne
fdivr
out
jmp
icebp
cld
divb
pop
popf
push
sbb
pop
dec
or
leave
xor
push
pop
pop
adc
insl
sub
out
in
dec
stos
leave
mov
pushf
in
out
xchg
xchg
add
xor
sub
stos
in
sar
sbb
or
lods
dec
loopne
cmp
pop
cli
xchg
pusha
pop
sub
xchg
daa
roll
ds
fcomps
aas
push
push
lock
and
sbb
xor
xchg
xor
jns
test
test
fsts
inc
sti
clc
adc
dec
sbb
pushf
das
leave
aas
push
push
jl
dec
popf
or
push
push
push
mov
orb
inc
push
mov
push
aas
sarl
out
daa
add
push
xchg
ja
mov
cltd
out
out
in
rcr
or
pop
xchg
outsb
mov
xchg
ficoms
xchg
sbb
push
cmp
dec
push
mov
shrl
push
js
aas
ret
aas
lret
shlb
cmp
jae
inc
jbe
pop
pop
or
pop
daa
scas
cwtl
test
cld
int3
cld
sar
aam
rcrb
xchg
loopne
call
lock
js
cld
lret
into
and
sub
sub
xor
xor
cmp
cmp
fiaddl
xor
push
cld
push
cld
pop
lcall
ljmp
cwtl
sarb
ret
sbb
xchg
hlt
inc
in
call
hlt
jle
addb
add
xor
xor
adc
sbb
stc
cmp
inc
stc
dec
xor
push
cld
pop
pusha
cld
push
or
pop
cwtl
xchg
pushf
orb
push
and
test
dec
rol
int3
jno
and
lock
xor
and
xchg
adc
dec
lahf
push
xchg
pop
sbbl
repz
jl
cmp
stc
fwait
stc
cmpsb
insb
data16
lds
pop
out
lahf
stc
xchg
xor
daa
adc
and
and
stc
insl
stc
ja
pop
and
insb
pop
and
insb
pop
and
clc
rdpmc
jb
je
dec
sub
imul
repz
repnz
cmp
pop
mov
and
xchg
fcompl
xor
out
ret
dec
pop
and
xor
pusha
inc
xchg
addr16
in
and
push
xor
fisubs
in
jmp
jne
and
repz
repz
repz
repz
pop
mov
fildl
dec
or
sbb
jle
jle
jle
jle
jle
pop
pop
or
fs
outsl
and
stc
mov
xchg
and
cmpsb
cs
lahf
xchg
int
pop
jecxz
scas
ud1
dec
stc
leave
popa
and
sub
cmp
and
icebp
cmp
inc
stc
dec
stc
push
stc
push
stc
popa
stc
xor
std
pushf
shrl
push
out
dec
or
mov
shll
scas
add
inc
mov
push
push
xorb
or
push
rolb
test
mov
mov
add
mov
sarb
sbb
mov
fs
mov
mov
pop
test
mov
push
aam
mov
shlb
push
dec
and
sub
cmp
mov
pop
dec
xchg
push
lock
jle
jle
jle
jle
dec
mov
es
in
jl
dec
push
enter
mov
loopne
ljmp
cmp
inc
cltd
test
aaa
cwtl
es
lcall
xchg
nop
mov
jo
xor
mov
pusha
xor
js
sahf
mov
mov
enter
aam
fadds
add
cmp
imul
popf
xchg
add
mov
call
dec
jge
push
jmp
mov
xor
cmp
ds
insl
test
mov
push
ja
xchg
clc
ss
xchg
add
ss
jl
das
inc
test
mov
bound
adc
pop
flds
dec
cmp
jno
mov
jb
je
jbe
js
jp
jl
nop
sub
and
jne
test
mov
adc
pushw
lds
pop
rcr
aad
fstps
in
jmp
stc
cmc
stc
stc
stc
std
mov
call
sbb
sbb
xor
scas
ret
scas
ffreep
push
xor
in
mov
jg
sbbl
aas
aas
xchg
aas
xchg
aas
fwait
aas
lahf
and
in
mov
mov
sar
pop
jo
ss
xchg
ret
push
lahf
mov
ret
cmpsl
shrl
jl
pop
mov
lahf
lahf
lret
lahf
iret
lahf
rcll
cld
jecxz
out
pop
add
mov
dec
cwtl
and
and
and
sub
sub
xor
xor
cmp
inc
stc
test
idiv
clc
adc
sbb
jp
dec
xor
pop
repnz
mul
xchg
add
push
mov
push
mov
cmp
and
cmp
daa
aaa
or
add
inc
popf
pop
mov
push
mov
pop
pop
cld
arpl
addr16
imul
cld
jae
ja
jnp
jg
cmp
cld
mov
sub
sbb
xor
pop
sbb
imul
jnp
add
cmp
mov
xchg
xchg
xchg
dec
jl
iret
mov
shrb
xor
shlb
xchg
and
xchg
popf
and
push
lods
and
es
es
sub
pop
sub
ret
push
adc
xor
test
pop
lods
xor
popaw
ss
mov
or
loopne
cmc
pop
sub
lock
xchg
popa
sub
or
or
adc
adc
sbb
sbb
mov
push
repnz
fsubrs
lea
lods
shll
xchg
mov
cs
lahf
inc
es
push
dec
ret
xor
repz
repz
repz
pop
je
inc
xchg
repz
lock
in
sbb
sbb
cld
sub
sub
cld
cmp
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
pop
cld
cmpsb
cld
lret
into
loope
das
or
fidivrs
dec
out
fsubr
pop
ficoms
div
loopne
xchg
test
push
mov
out
das
psubsb
iret
cs
icebp
lret
push
and
decb
adc
pop
ljmp
std
jmp
inc
mov
out
cli
test
addr16
call
jnp
jg
cmp
cld
mov
subl
repnz
leave
push
mov
cwtl
aas
mov
inc
imul
icebp
gs
ds
lret
hlt
sub
inc
aas
aas
dec
das
push
pop
cld
pop
in
mov
pushf
pushf
adc
ret
mov
or
js
jp
jl
jle
dec
sub
mov
add
dec
mov
push
mov
push
pop
ret
sahf
push
jle
dec
pop
subb
lret
add
js
loopne
cmp
sbb
outsb
jl
cltd
or
mov
sub
mov
fnstsw
loope
in
jmp
repz
repz
repnz
js
jb
je
jbe
dec
adc
mov
and
and
push
out
add
add
lret
jns
cmp
cmpl
xchg
repz
repz
repz
repz
rep
repz
mov
mov
xor
xchg
adc
cmpsl
pushf
mov
into
cmpsl
in
and
leave
mov
lock
xchg
test
push
mov
into
inc
scas
push
imul
test
mov
in
push
cltd
lahf
popf
adc
lods
push
xchg
jle
jle
dec
rorl
leave
iret
int
ror
aad
xchg
lods
test
in
fmull
fistpll
cmp
cld
and
ja
xchg
mov
xchg
jo
push
add
lods
xor
push
push
jl
xchg
mov
mov
jl
dec
dec
pop
shrd
aam
aas
xchg
sub
out
out
out
in
loopne
mov
mov
shrb
ss
cmp
ss
mov
ret
mov
xchg
adcb
pop
pop
dec
pop
cmp
cmpsb
cmp
aam
add
fmull
dec
add
mov
mov
stos
xchg
pop
push
les
into
cmp
sub
nop
inc
pusha
sub
add
xor
push
outsl
push
jle
mov
lcall
add
jo
dec
mov
shrl
filds
in
mov
or
mov
clc
sub
mov
xchg
jle
jle
jle
jle
dec
mov
jle
jle
dec
mov
pusha
dec
fcoms
dec
clc
orl
xchg
movsb
xor
mov
or
js
jp
jo
dec
lahf
ljmp
lock
pushf
dec
imul
lret
enter
push
fs
aam
in
in
sub
or
sbb
cmp
fidivrl
popf
add
lods
call
bound
lret
cld
out
cld
repz
idiv
sti
mov
sub
inc
cld
push
xor
out
jbe
xchg
ficoml
adc
xor
jns
fs
mov
dec
in
jp
cmp
nop
cmp
add
sbb
push
jp
dec
mov
fidivrs
fdivrs
fdivrl
lock
cmp
pop
nop
xchg
xchg
mov
lods
cld
int3
xchg
push
fsubl
popa
clc
and
call
pop
fdivp
mov
loop
inc
inc
or
sub
mov
in
push
pop
loop
sbb
pavgb
pop
dec
xchg
push
loopne
pop
cld
pop
mov
mov
xchg
out
out
out
in
mov
push
mov
fmull
lock
or
sub
xor
push
xchg
mov
lods
jle
jle
jle
jle
jle
jle
dec
int3
in
pop
jb
in
je
adc
sbb
sbb
add
sub
cmp
inc
iret
inc
leave
push
js
jle
dec
jl
into
test
mov
mov
xchg
lahf
cwtl
xchg
test
shlb
aam
rcr
ds
call
repz
repnz
sbb
and
cmp
sub
pop
mov
jo
cmp
sar
cld
in
mov
or
adc
and
shrb
jbe
xor
cmp
fcoms
inc
loopne
jo
mov
lcall
sbb
xchg
dec
mov
hlt
lahf
clc
xchg
cld
loopne
add
or
inc
les
shlb
fs
je
test
jecxz
repnz
pushf
call
and
jb
dec
sbb
dec
in
fldenv
shr
adc
xorb
fdivs
cmp
inc
test
repnz
pop
xchg
loopne
jl
mov
out
jb
push
jmp
out
mov
leave
enter
jo
inc
or
sub
inc
insb
bound
repnz
add
lret
mov
mov
sbb
and
and
cwtl
sub
xor
push
lret
push
movsb
xchg
mov
push
test
cld
mov
lcall
xchg
int3
daa
clc
in
and
pushf
cs
xchg
sbb
mov
shlb
push
jae
jl,pn
xchg
test
mov
cld
in
in
mov
mov
and
sub
inc
daa
pusha
loope
insb
stc
jo
js
jl
or
iret
mov
mov
pushf
in
dec
jle
pop
faddl
call
clc
inc
dec
clc
lret
dec
mov
push
xchg
pop
bnd
mul
add
outsb
sub
outsb
or
jo
jle
jle
jle
dec
push
dec
pushf
jle
pop
movsb
xchg
test
push
mov
mov
mov
pop
lock
sub
dec
xchg
xor
dec
pusha
stc
fs
leave
jo
cmp
fdivrs
mov
sahf
mov
pop
lock
int3
xchg
rorb
fcoms
cmpsl
add
push
xchg
and
inc
aas
cmp
cld
pusha
cld
fs
jo
cmpb
lret
mov
enter
rcrb
dec
loopne
jo
outsb
pop
adc
sbb
and
inc
jp
jl
jle
dec
xor
test
test
loope
cltd
clc
or
pop
push
xorb
je
push
loope
xchg
add
dec
mov
adc
pushf
iret
mov
movsl
pop
mov
pop
iret
fmul
fdiv
clc
mov
jno
aas
movd
pusha
stc
fs
adc
pop
dec
aas
hlt
cs
dec
mov
sub
adc
push
and
aas
inc
and
pop
outsb
xchg
xchg
lock
mov
movsb
lods
js
lods
loope
mov
or
pop
sbbb
xchg
int3
lock
aam
fdivrl
push
dec
outsb
xor
cmp
cs
or
outsl
or
js
dec
sub
pop
pop
out
jle
pop
jo
lret
jl
cmp
aas
jb
pop
mov
xchg
nop
sbb
psubsb
pop
dec
popf
sbb
pop
xchg
mov
or
dec
push
add
xor
or
mov
and
adc
enter
push
or
orl
aad
loop
mull
sbb
fimuls
pop
mov
mov
idiv
add
add
inc
mov
adc
js
and
movsl
xchg
push
mov
mov
pushf
daa
mov
rolb
and
xor
sbb
cmpsl
ljmp
data16
cld
sahf
xchg
fs
repz
lock
call
pop
rcl
shll
add
or
push
leave
and
cs
xchg
lods
jle
out
pusha
data16
mov
sub
popf
add
xor
xchg
das
jno
push
int
dec
mov
test
mov
push
xchg
mov
cmp
gs
ja
cmp
jb
fxch
sub
nop
imul
cmp
leave
rcll
jp
mov
clc
ret
fs
hlt
mov
movsl
push
outsl
or
sub
int3
sub
pop
push
in
push
adc
pusha
xor
mov
cs
loopne
aad
mov
and
sub
aaa
xor
inc
pop
js
mov
add
and
shl
out
pop
clc
into
pop
mov
mov
pop
lret
adc
lock
pop
cmp
dec
out
and
gs
inc
testb
sbb
loopne
aas
dec
inc
or
mov
ret
mov
rorb
test
xor
les
shl
dec
inc
add
mov
inc
dec
sar
pop
add
jo
xchg
mov
or
popf
cmp
imul
sbb
orl
dec
cmp
xchg
fs
push
cmp
or
jg
lea
ds
and
test
cltd
fdivs
xchg
jl
mov
mov
stos
lock
sub
add
aas
inc
das
dec
inc
push
test
mov
and
orl
pop
mov
daa
xchg
dec
add
daa
jno
lods
cwtl
loopne
mov
cmp
push
je
dec
stos
or
dec
pop
stc
ret
imul
adc
stc
add
push
cmp
mov
loopne
adc
xchg
leave
cmp
sub
mov
mov
mov
rcrl
sti
in
ret
arpl
out
or
mov
in
jb
sub
push
mov
mov
ret
pop
cmp
and
pop
test
test
sub
outsl
or
in
jmp
xchg
mov
outsb
cmp
jo
pop
jno
daa
mov
sub
icebp
clc
lcall
dec
lods
ljmp
mov
mov
js
inc
test
xchg
daa
mov
adc
orb
lock
cltd
push
test
jbe
jmp
es
test
fcoml
adc
push
ds
sbbb
std
inc
jne
cmpsb
clc
xchg
pop
or
mov
inc
addl
cmp
sub
icebp
out
stc
repz
sti
cld
cld
add
cmp
cmp
cmp
cmp
cmp
pop
aas
and
daa
aas
sub
es
add
dec
sarb
stos
daa
mov
movsb
jnp
stc
jo
aas
push
sub
out
mov
aas
test
xchg
loopne
ss
ret
out
xchg
rcrl
cli
jl
or
xor
pop
and
aam
xchg
shrl
sub
sub
scas
ucomiss
iret
imul
loope
add
sbb
pop
xor
sbbl
and
inc
mov
mov
aad
in
pop
or
decb
leave
mov
add
cmp
mov
sbb
jl
test
dec
xor
add
xchg
cld
fadds
xor
shlb
push
loop
pop
mov
js
cli
jne
pmaxsw
lock
xor
pop
call
inc
cmp
pop
and
stos
xchg
mov
pop
rcrb
cmp
xchg
mov
in
shlb
cs
pop
pop
dec
fiadds
cmp
sbb
mov
or
push
inc
sbb
pushf
jg
nop
dec
inc
lock
push
sub
movsb
adcl
stc
in
inc
and
jmp
test
xchg
je,pt
jbe
pop
inc
mov
xchg
loope
lods
cmp
daa
or
stos
sub
mov
push
xor
dec
clc
cs
and
xor
loope
cmp
jle
adc
mov
sub
add
xchg
das
sub
ret
sarb
jle
jle
pop
add
pop
addb
data16
inc
mov
cmp
xchg
adc
mov
mov
jecxz
in
jle
add
cmp
mov
sub
das
mov
pop
pop
pop
pop
lahf
jns
jle
mov
sub
ds
aas
dec
lahf
enter
fcompl
sahf
mov
xchg
test
xor
mov
sahf
cld
and
jmp
mov
push
aaa
xor
ret
add
call
sahf
adc
data16
jge
ret
dec
loop
fidivrs
dec
xor
cmp
xchg
out
in
xchg
cmpsb
jecxz
je
icebp
aam
mov
jo
pop
inc
mov
addr16
nop
pop
stos
or
enter
shl
or
pop
xchg
and
lcall
cmp
stc
jno
or
scas
in
mov
ficoml
push
adc
inc
lods
and
pusha
xchg
fs
or
bnd
mov
test
sbb
adc
iret
cmp
sbb
push
mov
push
lret
ret
fnstenv
les
push
dec
int3
ret
rcl
repz
fdiv
loopne
sub
call
cs
in
stos
jns
imul
loopne
ss
or
mov
jle
dec
sub
xchg
andb
test
push
leave
sahf
test
mov
ret
push
stos
pop
cwtl
lahf
pushf
lahf
mov
lods
repnz
mov
jle
jle
jle
loopne
pop
add
je
or
adc
lret
mov
pop
inc
and
pusha
in
mov
mov
mov
rol
je
xchg
pop
jl
mov
test
lods
test
stc
or
sub
pop
divb
cwtl
jns
stc
test
or
js
jle
pop
shrb
add
push
push
dec
mov
mov
and
mov
push
je
js
or
popa
mov
pslld
lods
xchg
int3
test
lock
push
dec
mov
jle,pt
dec
inc
setbe
outsl
iret
jae
ja
jnp
jg
andl
mov
mov
lcall
mov
call
das
js
je
dec
mov
movsb
cmp
and
adc
dec
outsb
push
call
scas
leave
add
fnstcw
or
xchg
ret
ret
pop
test
sar
adc
cmp
or
jbe
dec
testb
out
push
mov
jl
xor
pop
pusha
add
jb
push
clc
repnz
pop
btc
add
and
addl
dec
or
push
aaa
mov
or
mov
insl
inc
xor
mov
pmaddwd
lods
or
cmp
jl
sbb
xchg
adc
testb
and
fmulp
loopne
aam
call
mov
jbe
pop
adc
xchg
inc
ficoms
dec
pop
pushf
je
movsb
xchg
test
cvttps2pi
rorb
enter
fs
clc
jmp
pop
dec
rorl
int3
das
or
pop
pop
mov
dec
jle
pop
push
addb
mov
jecxz
repnz
mov
out
mov
dec
fcomps
and
clc
orb
lods
xchg
neg
orb
in
stos
push
and
mov
mov
add
adc
repz
repnz
jno
and
adc
push
sarb
lret
into
call
shrb
mov
leave
dec
push
fadds
clc
pop
mov
push
xor
mov
hlt
das
mov
ret
inc
in
icebp
push
or
xchg
adcb
test
and
in
xchg
mov
not
pop
mov
lahf
fldl
jle
mov
clc
mov
xchg
es
loopne
or
jb
je
pop
dec
andb
lock
cld
fwait
xchg
notb
mov
lock
mov
mov
xchg
ja
movsb
scas
mov
mov
out
je
add
and
js
cmp
imul
test
jp
adc
mov
fsubl
adc
mov
push
sub
or
fdivrl
jno
jg
mov
cmpsb
mov
push
dec
jle
jle
sbb
cmp
xchg
push
loope
add
push
andb
push
and
sub
repnz
lock
pop
out
jo
cmp
das
jp
hlt
dec
movsl
add
xor
mov
aas
mov
in
clc
stc
mov
pop
adc
inc
sub
ss
mov
dec
push
lock
mov
pushf
cmpsb
xchg
stos
mov
dec
filds
push
push
lock
sub
sbb
outsl
mov
test
mov
mov
jl
shll
fdiv
leave
popw
leave
daa
sarl
sub
mov
inc
insl
decb
add
dec
test
jle
xor
and
adc
pop
fadds
jbe
pop
inc
ltr
addr16
dec
addl
xlat
jl
aas
mull
push
fcoml
xor
add
pop
clc
lcall
sub
scas
loope
iret
stc
fidivs
test
pop
sbb
jae,pn
cld
cmp
and
lods
cmp
xacquire
lods
cmpsl
mov
fcmovu
push
cmp
lock
call
mov
mov
les
inc
call
wrmsr
loope
call
lahf
pop
sbb
inc
stos
fs
loope
jmp
fdivrs
jmp
or
dec
cs
dec
pop
into
pop
pop
ret
jbe
adc
xchg
or
repz
mov
and
incb
push
lock
cld
sbbl
xchg
mov
xchg
aam
loope
out
int
dec
cmp
add
daa
pop
xchg
in
sti
mov
leave
sahf
loope
mov
leave
in
loope
or
daa
xor
sti
outsl
leave
jbe
cwtl
pop
xchg
mov
movsl
lcall
aas
daa
or
pop
lods
scas
cmp
cmp
out
out
in
call
or
stc
jecxz
lock
imull
mov
es
jp
jl
jle
dec
jne
movsb
xchg
leave
movsb
xchg
pop
jle
dec
ljmp
pop
es
dec
pushf
sbbb
adc
mov
inc
push
push
add
xchg
fs
loopne
cmpsl
cld
scas
xchg
inc
adc
cld
mov
fnstsw
std
and
sub
mov
bnd
adc
xchg
stc
mov
repz
call
add
pop
cmp
inc
pop
insb
sbbl
repnz
je
pop
int
fsubrl
adc
loope
sub
and
stc
movsl
stc
mov
pop
lret
in
clc
outsb
pop
pop
ret
cld
sbb
ss
cli
jl
dec
xchg
push
das
mov
dec
sbb
daa
jp
into
ljmp
or
add
adc
mov
xchg
mov
adc
xchg
push
add
adcb
in
xor
repnz
inc
jmp
and
add
popa
bound
jns
xchg
or
cld
inc
mov
outsl
ds
and
iret
icebp
iret
clc
ret
cs
or
pop
cld
subb
mov
leave
push
xor
popa
sbb
daa
add
test
mov
pop
sub
cli
pop
inc
ret
cmpsl
cli
jb
jns
xchg
jp
sub
repnz
inc
xor
lahf
dec
adc
add
popf
test
mov
in
mov
and
xlat
lcall
adc
or
sub
push
lock
mov
mov
fcomi
jmp
xchg
add
and
pushf
inc
mov
pop
push
sub
in
mov
mov
lret
jnp
out
or
push
xchg
and
mov
push
mov
pushf
imul
shrl
nop
pop
loope
push
std
repnz
clc
sbb
movlps
cmovae
aam
inc
jb
xchg
imul
aad
fbstp
stc
sbb
xchg
sbb
aam
das
pop
cmp
pop
xchg
xchg
pop
xchg
xchg
sahf
test
aas
mov
les
roll
mov
scas
pop
in
xchg
test
jl
popf
inc
push
test
js
das
test
lret
in
xor
dec
lcall
jbe
dec
dec
ret
aam
pop
addl
and
push
aaa
sbb
es
xor
pop
mov
loopne
and
stos
out
psubsb
pop
cmp
adc
popa
inc
pusha
stc
addr16
cmp
xchg
cld
mov
leave
cld
xchg
add
or
sub
pop
pop
or
mov
mov
pop
loope
call
insb
sahf
sub
dec
sahf
xor
aas
lock
lahf
xchg
xchg
xchg
mov
mov
adc
lock
call
or
js
je
push
adc
sub
mov
sahf
cli
adc
push
sub
lahf
loope
icebp
lahf
xchg
or
loopne
mov
cs
icebp
pop
stc
adc
mov
pop
mov
loopne
sub
sbb
add
mov
sub
lahf
dec
scas
or
out
insb
add
and
pop
or
push
jo
jle
dec
xchg
dec
popf
pop
dec
adc
push
inc
dec
and
loope
xor
sbbb
xchg
or
sar
stc
sarl
lock
out
pop
loope
daa
das
or
inc
cmpsl
dec
pop
popa
in
loopne
mov
lock
stc
push
sub
xchg
sbb
loope
sub
xchg
popa
pop
mov
dec
add
xchg
repnz
add
xlat
ljmp
xor
leave
pop
sub
pop
cmp
jl
dec
pop
ret
push
test
mov
cmp
aad
push
jmp
add
adc
jbe
ljmp
dec
inc
addr16
jp
mov
dec
aas
mov
pusha
xor
loopne
push
inc
lock
sbb
pop
call
pop
cmp
in
js
dec
xchg
out
in
test
and
cmp
adc
leave
div
add
mov
lods
add
push
outsb
aas
jg
mov
or
mov
shrb
pmulhuw
xchg
or
dec
clc
scas
and
dec
xchg
int3
mov
xchg
loopne
push
je
lds
dec
ffreep
aam
jne
ljmp
test
cmp
sub
cmp
loop
repnz
adc
shlb
pop
out
ret
imul
inc
popa
xor
push
ret
add
lods
cld
mov
xorl
sbb
or
dec
das
push
pop
cwtl
jno
jle
test
xchg
loopne
lods
mov
out
addb
inc
loopne
jp
jl
lock
dec
loopne
pop
cld
imul
repnz
dec
in
and
repnz
gs
addr16
xchg
stos
or
mov
dec
xlat
je
in
xchg
loopne
push
ds
or
xor
cmpb
jle
mov
bswap
ror
ficoms
pop
repz
flds
movd
insl
jbe
pop
xchg
pop
fcoml
lret
ret
jbe
mov
adc
or
pop
lock
jbe
dec
inc
ret
add
data16
pushf
dec
mov
shlb
ret
dec
in
not
mov
adc
lahf
add
dec
mov
insl
in
pop
xchg
or
cmpsl
xchg
fsub
jmp
cmc
mov
lcall
inc
adc
fisubrs
test
xchg
rcll
add
fisubrl
or
test
sbb
inc
xchg
test
pop
test
mov
lcall
cmc
leave
add
pop
sbb
jl
pop
sub
aam
ja
addl
pop
fildl
add
pop
or
push
add
outsl
pushf
dec
pop
mov
mov
push
enter
filds
dec
mov
push
or
xor
ss
dec
mov
pop
aas
imul
pop
mov
mov
mov
pop
xchg
or
xchg
and
aaa
adcb
push
adc
xchg
jae
add
mov
push
decb
push
out
iret
cmc
sarb
loop
test
lock
lahf
popa
cmp
je
mov
stc
stc
int
call
cld
cmp
clc
mov
pop
popa
jl
jp
push
xchg
iret
sahf
lret
movsl
je
inc
int
jl
cld
out
mov
add
mov
mov
pop
jl
jle
jle
pop
mov
dec
movsl
loope
mov
and
add
push
xor
sub
cmp
imul
jo
jge
push
xchg
stc
lahf
sub
cs
xchg
out
sahf
add
add
push
loopne
push
ja
aam
mov
mov
inc
icebp
in
out
and
and
inc
mov
fcmovb
add
stc
mov
je
rcrl
xor
xor
cmp
or
mov
pop
mov
ret
repnz
mov
xor
je
inc
mov
adc
jns
bound
dec
fwait
or
mov
ds
lret
in
jmp
add
and
inc
jo
jl
jle
jle
dec
xor
aas
mov
ret
roll
repnz
cmp
add
repnz
xchg
in
call
jmp
xor
add
je
push
das
push
cmp
inc
es
stc
jns
xchg
adcb
cld
lock
js
pop
pop
clc
cmp
cmp
and
pop
push
cli
aas
gs
cmp
jp
or
das
mov
stos
int3
in
mov
pushf
or
xchg
sub
push
push
inc
adc
jb
mov
mov
or
jo
jle
pop
fidivrl
cmc
loope
adc
push
push
push
dec
push
jp
push
sbb
sub
aas
fisubl
out
push
pop
mov
xchg
das
mov
dec
mov
jle
dec
imul
jg
lahf
jg
mov
fcoms
fiaddl
xchg
test
and
push
mov
push
mov
mov
stos
aas
mov
fcomip
lods
stc
mov
jb
dec
sbb
subb
dec
jle
pop
outsl
xchg
jle
stos
xchg
repnz
in
js
fidivrl
out
repz
inc
sub
xor
in
mov
out
test
lods
insl
cld
jp
fcompl
or
in
lods
sbb
fistpll
decl
adc
pop
jo
dec
cmp
dec
addr16
leave
fcoml
call
cmp
notl
mov
aas
or
pop
daa
fsubrl
jnp
lods
aas
and
fiadds
call
xor
fcoml
aas
or
les
je
addr16
mov
rol
fcmove
fsubr
aas
or
fcompl
inc
sub
mov
sub
xchg
out
icebp
mov
shr
sub
xchg
pop
inc
aaa
ljmp
jo
mov
pop
shlb
xor
dec
cmpsl
aaa
inc
daa
push
inc
pop
loop
subl
inc
mov
mov
sbb
mov
or
push
cmp
inc
sub
clc
inc
and
xchg
dec
lahf
mov
mov
lods
cwtl
cmp
shr
fcomip
out
or
add
adc
test
inc
loopne
outsb
popf
xchg
xchg
xchg
in
clc
orb
push
loope
sar
mov
push
pushl
push
push
or
jle
push
cltd
test
lods
push
xchg
enter
leave
cld
mov
dec
sub
iret
dec
dec
push
addr16
test
lods
je
adc
dec
cs
enter
fs
pop
sbb
cs
int3
nop
fcmovne
dec
push
addr16
data16
movsb
repnz
xlat
stc
fimuls
and
or
es
cs
jl
mov
scas
enter
in
and
and
xor
sbb
cld
mov
xchg
or
sub
sub
cmp
pop
and
mov
adc
in
sub
xor
sbb
loope
or
cld
insl
xchg
ret
imul
loope
bswap
push
xor
insl
mov
xchg
lcall
out
out
pushf
push
nop
sbb
adc
mov
fwait
push
out
inc
sub
sbb
sub
xchg
mov
js
jle
les
test
or
push
pop
stos
adc
mov
xchg
pushf
lock
mov
mov
fsubs
mov
ret
out
dec
test
dec
addr16
in
in
cmp
fwait
daa
aas
cmpsl
inc
ljmp
pop
dec
lock
dec
add
nop
sbb
xor
in
inc
dec
call
xchg
add
mov
das
and
pop
xchg
xchg
mov
adc
je
rcll
add
jmp
cmp
lcall
lock
dec
push
mov
in
call
out
ds
fsubr
or
inc
xor
dec
not
popa
sub
pusha
push
cmp
data16
dec
orb
push
loope
mov
and
dec
pop
or
ja
push
dec
mov
daa
rolb
cmp
pusha
ret
sbb
inc
inc
das
and
pop
ret
mov
xchg
add
mov
add
xor
push
ss
jns
in
jo
dec
enter
cmc
jle
je
sbb
inc
fdiv
in
clc
xor
or
test
or
fcompl
xchg
out
fs
cmp
xchg
fs
mov
pop
js
loopne
jbe
dec
lahf
call
jae
inc
mov
testb
sbbb
mov
inc
mov
js
pop
add
or
inc
xchg
and
dec
mov
jo
jl
adc
jle
in
das
stc
sar
jle
repnz
push
dec
adc
mov
sbb
xor
cmp
cmp
xor
inc
pop
nop
cmp
in
das
and
push
pop
sbb
jle
push
lret
repnz
lock
js
shr
jl
out
test
testb
push
clc
adc
ja
jnp
and
lea
xor
sub
dec
push
mov
nop
inc
dec
shl
mov
ds
pop
or
daa
test
adc
fs
xchg
dec
lahf
push
adc
cmp
pop
daa
imul
loopne
mov
xor
cmp
cmp
dec
roll
je
adc
lahf
cmc
xchg
add
mov
cmp
sub
xor
int
and
pop
dec
mov
scas
stos
ss
or
xor
aad
clc
in
mov
pop
inc
adc
repnz
push
mov
mov
imul
loope
out
jp
sbb
mov
call
push
ss
popf
add
in
dec
lock
cmp
rorb
aas
sub
jae
pop
test
movsl
in
or
adc
sub
nop
rcr
fisubl
or
push
and
jo
adc
push
and
daa
dec
clc
jl
xchg
daa
or
in
mov
and
cmpsl
rorl
loope
jno
test
fdivrs
dec
xchg
cmpl
js
dec
add
sub
or
pop
hlt
jle
loopne
pop
add
pop
in
mov
or
faddp
cmp
sbbb
add
fsubrs
cld
rcrl
cmp
inc
pop
popa
mov
sub
sub
mov
repz
and
jno
jp
loopne
mov
xchg
pop
lahf
sub
cli
mov
sbb
adc
sub
divl
adc
cld
idivb
pop
call
sbb
dec
jl
das
pop
xchg
in
test
mov
push
mov
cli
jp
dec
add
and
jp
fs
cmp
daa
and
dec
jl
dec
cmpb
push
xchg
lahf
out
in
decl
movsb
repnz
mov
adc
clc
clc
test
enter
mov
xchg
add
jo
pop
adc
dec
cmp
mov
push
push
addr16
mov
bound
test
xchg
loope
fidivrl
or
ljmp
ret
lock
cmp
adc
cli
add
cmp
sbb
in
call
cmp
mov
mov
ljmp
pop
leave
dec
int
insb
aad
pinsrw
loope
jb
out
pop
sub
lahf
cmc
xchg
stc
test
xor
push
jae
jns
jns
push
xchg
xchg
popf
daa
lods
test
out
out
les
loopne
or
adc
test
clc
push
cld
bound
into
aas
andb
sarb
movsl
daa
stos
add
mov
ljmp
sub
fs
xor
sbb
push
xor
xchg
add
cld
fisubrs
imul
xchg
cmovo
dec
divl
call
jae
cmpsb
leave
adc
dec
or
dec
mov
loopne
add
enter
mov
mov
mov
hlt
and
pop
adc
push
orb
add
dec
mov
addr16
notb
add
int3
dec
xlat
or
notb
mov
and
notl
xchg
repz
rcl
jno
sti
test
sub
idivb
lods
ficomps
rol
jbe
push
mov
js
sub
push
xchg
jns
shll
jo
je
outsl
daa
push
test
ja
cmp
inc
cmpsl
cld
mov
sub
sub
jp
and
insb
inc
xchg
lds
pop
xchg
pop
mov
out
dec
jbe
into
mov
pop
sub
adc
call
test
rolb
dec
jle
jo
shrb
xchg
pop
pushf
lahf
test
in
jo
pop
or
insb
ljmp
push
dec
out
je
inc
mov
adc
push
xchg
push
pop
aam
sub
imul
pop
jl
jg
orb
cs
dec
and
js
mov
cmp
lahf
out
jb
ss
mov
push
xor
jmp
ds
mov
iret
mov
push
xor
xorb
decb
push
push
xchg
xor
inc
or
shrb
fdivs
adc
or
daa
add
insb
dec
sub
daa
mov
pop
fisubrs
or
dec
jbe
pop
fmull
nop
lods
sti
or
push
je
pop
adcl
mov
je
sbb
xchg
mov
add
xchg
outsb
enter
dec
sbb
fmuls
xor
leave
sbb
pop
mov
cmpsl
fcom
jmp
pop
cmp
push
fidivs
push
test
cli
sbb
adc
jp
loopne
jnp
xchg
sub
jg
pop
jae
dec
or
adc
cmp
mov
mov
lea
dec
push
test
shlb
call
stc
hlt
imul
mov
cmpsb
imul
jg
push
jo
mov
rcrb
lods
test
sub
popa
dec
jns
adc
lock
pop
es
test
or
cmp
mov
das
ss
rorb
mov
sahf
xchg
andb
and
sub
cmp
or
dec
dec
ret
dec
outsb
or
push
push
mov
pop
xchg
les
and
jmp
xchg
ljmp
mov
bound
adc
mov
dec
int
das
mov
iret
mov
rcrb
mov
push
ret
es
sbb
popf
pop
sbb
xchg
and
lock
lahf
pop
stos
xor
mov
mov
or
fbld
dec
add
daa
fs
inc
es
dec
sub
adc
loop
cld
inc
mov
andl
push
sbb
mov
mov
and
xor
jg
loope
fildll
push
and
dec
dec
pop
mov
jl
dec
sub
xor
add
cmp
cmp
push
scas
or
sub
mov
fisttps
dec
addb
jle
pop
sbb
arpl
xorl
es
add
inc
movsb
adc
add
das
pop
dec
loop
dec
ret
aam
push
fistl
jecxz
clc
div
or
dec
cmp
pop
jp
xchg
mov
lret
dec
xor
and
add
divb
xchg
xchg
les
pop
adcb
jle
cs
mov
inc
xor
scas
andb
sbb
sarl
popf
fldcw
cmp
push
mov
out
jmp
stc
popf
loope
mov
addb
or
loop
cmpsb
pop
cmc
loopne
jb
xchg
test
stos
and
shl
outsb
clc
fs
in
jmp
outsb
push
hlt
mov
cld
mov
test
hlt
rolb
in
fists
sti
lret
or
insb
pop
add
mov
ret
pop
jae
in
mov
imul
jle
int3
pop
cltd
dec
push
scas
lahf
rclb
or
or
arpl
push
push
pop
lock
add
aaa
daa
and
andb
psrad
mov
push
ficoml
pop
clc
fisubs
lods
loope
mov
loope
cs
xorb
mov
jle
leave
push
rcrl
loopew
cmp
fidivl
loopne
das
jmp
xor
inc
cmp
std
adc
fcoms
pop
outsl
ret
or
repz
orl
jnp
sbb
int3
fisubrs
mov
and
xchg
xor
lret
add
push
stos
mov
rcr
jg
push
pushf
jo
dec
lods
mov
popf
add
aam
or
in
in
pop
cld
imul
test
rorb
inc
pop
test
push
scas
and
and
sub
jno
adc
sbb
loopne
fdivr
in
push
scas
push
cld
clc
jb
dec
push
sbb
sbb
push
aas
cmp
inc
icebp
js
pop
push
mov
mov
jl
add
adc
call
mov
pop
add
mov
xchg
jns
sub
mov
popa
mov
push
cwtl
call
inc
movsb
lods
rorb
and
xor
orb
jle
jl
lods
movsl
leave
test
xchg
hlt
mov
dec
repnz
movsl
cmpsl
cmpsb
sub
ret
xor
sub
or
repz
repnz
lcall
fsts
mov
push
lahf
xchg
and
out
push
aas
sarb
fisubl
pop
jg
mov
flds
dec
jle
scas
push
pop
inc
jl
nop
testb
shlb
push
icebp
js
aas
stc
das
adc
sbb
paddd
jbe
jl
dec
in
mov
push
and
or
push
add
cwtl
adc
in
fs
mulb
sbbl
repnz
test
xchg
fimull
inc
push
test
ret
jle
pop
mov
mov
dec
outsb
stc
dec
hlt
sub
dec
push
cmp
insb
in
cld
into
aas
nop
daa
mov
dec
shl
lods
jl
push
dec
aam
in
jmp
inc
jo
push
aad
fdivrs
add
push
aaa
dec
lock
push
popa
dec
sbb
adcl
cs
nop
lods
int3
mov
jmp
xor
push
aaa
decl
popa
daa
gs
sub
stc
in
hlt
sub
lock
sbbb
call
or
add
aad
jae
ljmp
shr
pop
mov
sahf
mov
sbb
mov
cmpsl
fmul
pop
jge
sub
call
adc
push
mov
mov
je
push
imul
mov
mov
pop
lret
popa
nop
out
push
cld
das
dec
inc
mov
push
jp
dec
out
mov
mov
ret
jbe
dec
adc
ljmp
fs
cs
cmp
les
xchg
jmp
popa
push
sarl
add
call
pushf
cmp
lahf
add
cmp
rcr
aas
xchg
jle
push
adc
test
lea
cmp
push
lahf
jmp
outsl
ret
pop
test
jmp
pop
test
mov
cli
and
or
test
push
sbbb
pop
movsl
mov
ret
sbb
xor
and
aad
and
je
mov
testb
pop
pop
sbb
pop
icebp
or
push
adc
mov
loope
cmp
push
xchg
fabs
out
in
xchg
ret
and
pop
add
push
mov
imul
jl
pop
mov
repz
mov
xchg
jg
mov
lahf
test
fisubl
fcom
jbe
dec
jge
fsubrs
pop
aaa
sub
leave
push
loope
addr16
jne
jle
mov
cltd
stc
mov
dec
dec
loope
sahf
shr
fldenv
das
mov
pushf
call
pop
dec
insb
sarl
adc
rclb
leave
lcall
inc
loop
push
out
jne
jmp
sub
jnp
or
adc
adc
adc
sub
inc
roll
xor
pop
cmp
and
lret
push
and
dec
mov
add
cmp
cld
lods
mov
faddl
dec
inc
cmpsl
xchg
jecxz
repnz
jo
pop
ret
adcb
and
xchg
xchg
into
xchg
insl
loopne
sarl
dec
dec
push
cmpsl
pop
mov
das
pop
inc
out
idivl
cmp
ss
aaa
inc
add
mov
add
inc
pop
dec
sbbl
mov
andb
xchg
inc
ds
loopne
imul
mov
pop
adc
hlt
daa
pop
push
pop
xlat
xor
ret
pop
test
fs
inc
in
dec
nop
push
dec
ret
jne
dec
inc
test
dec
push
fsubs
cmp
xor
inc
sahf
xor
jne
js
sub
lret
dec
jns
sbb
stos
jo
cmp
popa
push
cmpsb
ds
dec
adc
dec
je
dec
dec
or
and
in
scas
or
sarl
dec
or
pop
aas
loopne
pop
cmp
pop
mov
das
adc
loopne
inc
inc
dec
pop
dec
imul
stc
cmpsb
je
mov
cld
ficompl
sbb
push
ss
xchg
arpl
hlt
lahf
xchg
xchg
sahf
dec
imulb
pop
lret
or
clc
mov
dec
jmp
or
bound
jmp
jns
test
sbbb
add
xchg
shll
mov
shll
cmp
inc
add
repz
test
mov
pop
dec
or
pop
pop
sbb
mov
pop
mov
cwtl
sbbb
lahf
pop
negb
or
in
mov
imul
sub
pop
mov
xchg
mov
dec
movsb
stc
mov
and
cmp
mov
movlhps
mov
pop
adc
sub
or
xchg
mov
push
outsl
push
jb
lahf
das
jo
dec
push
mov
es
out
movsb
sbb
push
loopne
lahf
lahf
add
add
xchg
inc
adc
es
push
sbb
repz
add
stos
or
cmp
pop
cmp
jbe
enter
xchg
test
ljmp
add
jno
sub
ret
test
push
lock
arpl
outsb
popf
xchg
mov
and
xchg
pop
mov
ret
dec
xor
lret
sarb
in
lock
idivl
adc
es
push
test
cmp
ds
cmp
sub
xor
xorb
jge
ljmp
sbb
and
push
inc
das
andb
js
dec
arpl
clc
jle
dec
lea
cs
add
outsb
rcll
call
testb
mov
sbb
add
or
loope
inc
stc
dec
outsb
divps
pop
push
into
jle
dec
je
decb
stos
rclb
out
dec
stc
popf
xchg
loop
jnp
clc
sub
lcall
push
cld
pusha
cld
gs
jb
pop
lods
test
mov
xchg
and
lods
je
pop
mov
xchg
fdivrp
pop
mov
fmuls
cltd
inc
adc
mov
sbb
orb
jmp
and
cmp
cld
xchg
cld
xchg
mov
pop
test
mov
clc
push
jle
dec
in
or
and
adc
cli
and
pop
inc
xchg
dec
dec
inc
pop
iret
push
outsl
loope
cmp
jg
jp
leave
les
in
out
loopne
xlat
aas
inc
dec
cli
add
ret
pop
cli
push
inc
lahf
dec
pop
push
cmp
daa
sbb
fs
mov
push
xchg
rcll
outsl
paddd
lock
into
mov
mov
lds
or
lods
xchg
pop
jbe
mov
sub
mov
and
imul
dec
aam
inc
movsl
loopne
or
aas
push
xchg
shlb
mov
dec
mov
dec
sahf
loop
das
roll
cld
call
int3
inc
mov
leave
fstl
pop
xchg
popf
cwtl
add
inc
push
xor
sahf
or
ret
sahf
into
push
incl
insb
xchg
lock
pop
adc
or
or
negb
and
repnz
enter
fstps
cmp
pop
loopne
jmp
repnz
mov
mov
out
in
or
push
cmp
sub
mov
mov
pop
push
lcall
loopne
cmc
jmp
les
pusha
enter
rorb
push
popf
xchg
push
pop
int
shl
dec
shl
pop
or
add
clc
fs
adc
cmp
gs
jg
lahf
movsl
xchg
hlt
mov
or
push
stos
std
cmp
inc
mov
ret
pop
js
push
les
jle
pop
test
add
fiaddl
or
and
mov
imul
repnz
inc
fcoms
aad
sbbb
loop
sub
xchg
fldcw
loopne
mov
call
lret
jl
jns
jl
sub
pop
loopne
jge
sahf
mov
xchg
aas
jecxz
jmp
or
dec
push
jl
and
icebp
lret
jnp
xor
ret
push
jge
pop
pop
pop
or
jle
adc
fists
or
jnp
pushw
les
xor
push
cmpsb
jge
mov
mov
inc
push
xchg
in
dec
mov
dec
stos
fildll
jmp
xchg
pop
jns
jp
cltd
sub
clc
and
loope
jmp
hlt
cmp
xchg
dec
test
sbb
jns
loop
lods
out
icebp
cmp
cmp
das
sbb
in
xchg
in
pop
test
in
loop
pop
imul
test
das
cmpsl
pop
std
imul
cs
push
push
jmp
adc
xor
in
popf
inc
mov
movsl
mov
xor
push
rorb
adc
mov
mov
mov
clc
push
js
push
mov
push
int
mov
jbe
dec
mov
movsb
inc
mov
inc
mov
mov
push
push
loop
sub
sub
cld
and
enter
adc
add
xchg
clc
push
add
or
sub
ret
loop
repnz
push
in
dec
pusha
ret
push
in
adcb
out
jle
pop
mov
fdiv
roll
cmp
cmp
cmpsl
sbb
sbb
and
sub
in
cld
jle
dec
nop
repz
and
push
in
mov
cmp
imul
dec
xchg
mov
lcall
test
jmp
ficoml
sar
leave
add
sub
push
dec
pop
rcrl
cs
sub
push
loopne
lods
cld
int3
mov
inc
int
xor
jle
dec
pushf
mov
sub
adc
inc
mov
imul
lret
mov
nop
pop
xchg
ret
xchg
sahf
repnz
dec
scas
mov
mov
mov
mov
fs
repnz
dec
lock
pop
in
popf
xchg
xchg
psubusb
mov
and
not
nop
jle
adc
add
and
fsubrs
xchg
rol
jle
add
enter
push
aad
js
add
lock
cmp
daa
mov
jecxz
outsb
dec
lods
add
movsb
push
into
mov
fdivrl
xlat
xchg
js
pop
das
test
jecxz
pop
xchg
mov
jecxz
repz
mov
in
and
sbbb
jbe
push
mov
dec
mov
out
cmp
dec
inc
cmp
inc
push
loop
xchg
add
push
std
jb
adc
mov
in
popf
loopne
jmp
repnz
and
xlat
cmc
or
add
mov
inc
add
sub
dec
jne
stos
mov
test
loop
dec
add
inc
hlt
cmp
mov
rcll
outsl
popf
inc
dec
pop
lcall
xlat
imul
push
adc
daa
sti
and
clc
mov
test
shl
inc
out
dec
cmp
daa
sbb
js
insb
push
daa
sub
dec
pop
cmp
xchg
push
and
out
and
sbb
dec
fs
ds
sti
mov
and
xor
cmp
inc
dec
jmp
xlat
mov
pusha
push
mov
outsb
shll
push
mov
pushf
mov
dec
fnstcw
mov
push
inc
mov
mov
iret
aas
cmc
xor
xor
loope
sub
mov
test
or
sbb
je
sti
femms
mov
and
call
bnd
call
nop
leave
mov
sbb
push
cmpsb
fcoms
pop
loopne
jno
jns
in
mov
push
lods
inc
mov
dec
and
daa
decb
mov
mov
repnz
lods
xchg
pusha
ret
idivl
jae
add
pop
les
loope
gs
ret
fldl
xchg
pusha
jb
divb
sbb
sahf
sbb
xchg
or
add
je
scas
stos
shlb
cmp
dec
fists
push
xchg
test
clc
out
mov
fsubl
or
ja
orl
mov
enter
fcoml
les
adc
inc
shlb
mov
dec
mov
jno
adc
add
xor
ret
sbb
dec
ret
arpl
imul
stos
stc
mov
into
jne
js
shrb
mov
loop
lock
pop
stos
ret
out
mov
pop
call
sub
movsb
inc
sub
pusha
pop
jo
dec
js
out
test
mov
xchg
in
and
add
inc
in
je
pop
dec
insb
cld
push
mov
stos
arpl
repz
dec
pop
aam
fcoml
dec
jns
sub
scas
cmp
cs
adc
test
fdivrl
or
ss
or
bound
push
test
push
xchg
outsb
jmp
dec
inc
cmp
xchg
lahf
push
in
fistps
sub
inc
xor
jmp
ret
dec
repz
repz
repnz
jbe
pop
bound
jp
bswap
or
movsb
mov
xchg
sub
stc
hlt
cmp
scas
lods
int3
cld
jmp
in
out
dec
jle
fisttpll
xchg
adc
dec
mov
dec
sbb
das
repnz
fs
in
clc
insb
xchg
ljmp
das
or
jmp
inc
adc
add
dec
lock
mov
test
mov
sub
gs
scas
leave
subb
cmp
stc
mov
rorb
pop
lods
jp
jge
sahf
adc
mov
sub
inc
or
js
cwtl
idivb
dec
ljmp
pop
mov
jmp
lahf
add
insb
leave
fimuls
repnz
imul
mov
cmpsb
or
pop
push
or
xor
xchg
cmp
scas
shl
cmp
sbb
mov
push
clc
mov
dec
inc
xorl
repz
repnz
xlat
gs
leave
pop
lahf
sahf
xchg
mov
mov
mov
lret
or
sti
js
adc
xor
shrl
outsb
adc
pop
cmp
pop
sub
outsl
or
movsl
daa
insb
fldenv
out
or
and
cmp
cmpsb
jg
or
jae
and
jb
dec
push
cmp
faddl
sbb
or
sub
daa
jo
xchg
cmc
mov
push
jge
andb
lret
lahf
dec
xchg
push
inc
mov
imul
mov
pusha
xchg
xchg
test
icebp
sbb
and
pushf
and
clc
pop
ss
data16
adc
aam
inc
mov
or
filds
inc
xchg
xchg
mov
fnsave
sub
dec
mov
mov
cmp
clc
push
xchg
loop
shlb
lock
dec
lds
stc
inc
pop
cs
loopne
imul
mov
cmpb
movsb
sbb
mov
xor
mov
add
push
jg
call
xor
cmp
clc
add
dec
cltd
pop
mov
and
push
xor
cwtl
fcoml
or
movb
sub
push
adc
call
push
mov
pop
jecxz
scas
add
sub
hlt
pop
addb
out
cmp
das
insb
rcrb
mov
aad
frstor
ret
lock
xchg
lock
mov
ja
add
shrb
int3
stc
adc
push
loop
daa
push
sbbl
int3
das
dec
shlb
int
adc
orb
xor
and
es
notl
push
ret
clc
and
lock
xchg
les
shll
jl
loop
cmp
stos
cmpl
jge
push
bound
mov
and
lds
loopne
ljmp
dec
enter
mov
sub
mov
cmpb
movsl
push
adc
and
jle
dec
push
sub
dec
cmc
sub
insb
dec
pop
lahf
inc
lcall
fcmove
adc
add
inc
mov
xchg
pop
pop
enter
xor
xchg
icebp
mov
pusha
lret
xor
sub
and
push
sub
inc
cltd
shl
push
pop
gs
xchg
inc
dec
sbb
pop
daa
xchg
loopne
dec
popa
inc
pop
stc
push
call
xchg
in
stos
ds
mov
fs
push
or
mov
mov
push
dec
mov
inc
test
enter
mov
fmulp
pop
dec
xchg
dec
in
mov
ds
push
ss
outsb
xchg
jb
cmpsb
dec
daa
xor
jnp
push
xchg
pop
cmpsb
dec
dec
mov
daa
pusha
jo
push
jmp
push
adc
in
scas
sub
jb
jbe
dec
inc
mov
jecxz
mov
push
in
dec
mov
repnz
rclb
push
inc
es
lods
testb
movsb
mov
inc
std
sub
or
pop
popf
pop
ds
xchg
imul
lods
mov
jle
dec
adc
xchg
dec
cmpl
leave
stc
sar
shll
inc
cmp
loope
mov
ret
push
xor
aad
sbb
in
decb
cmp
mov
mov
and
mov
jle
stos
cs
xchg
push
loope
cli
clc
adc
mov
mov
and
pop
jmp
lahf
lahf
ficoml
cmp
adc
inc
dec
ror
pushf
repnz
mov
sub
je
loop
and
repnz
clc
lcall
cmp
dec
jns
jge
add
or
lods
inc
in
push
icebp
das
icebp
cmp
cmp
mov
ret
inc
jge
mulb
inc
cmp
mov
adc
push
add
pop
insb
cld
es
sub
cld
test
pop
or
pop
popf
outsb
pop
nop
stc
cmpsb
stc
stos
sub
add
scas
or
jne
jnp
lock
cmp
jp
xor
jns
xchg
and
in
sub
jecxz
out
sub
int3
lcall
mov
or
mov
mov
adc
jnp
lcall
mov
or
cwtl
dec
outsl
or
add
ds
pop
shlb
js
pop
aam
lret
pop
js
dec
jl
push
scas
pop
or
sbbl
and
xor
es
mov
data16
aaa
dec
daa
lds
dec
sbb
sahf
or
push
popf
orl
inc
pop
inc
add
dec
adc
inc
cmc
mov
cmpl
ret
pop
cwtl
data16
jecxz
push
and
enter
into
addl
dec
xchg
inc
loop
cmp
sub
inc
mov
inc
test
cltd
lahf
pop
adc
gs
out
and
pop
pop
shl
ficoms
adc
inc
ds
lock
loope
jl
in
loopne
adc
mov
xor
pop
loop
inc
in
xor
xor
mov
imul
or
movsb
dec
test
adc
or
js
dec
aas
xchg
call
add
cmpsl
mov
pusha
pushaw
test
xor
pop
dec
ret
cmp
mov
jns
adc
andb
mov
sbb
xchg
jo
and
sti
pop
inc
inc
mov
pop
mov
shrb
inc
sbb
push
and
insb
pop
andb
add
fs
jmp
insb
mov
pop
sub
outsb
pop
jp
pop
add
lods
shlb
sbb
cmc
test
loope
or
addr16
test
in
repnz
loope
jl
cmp
daa
es
repnz
ret
and
rcrb
cmp
fucomp
push
test
dec
xchg
dec
pop
mov
xchg
mov
les
mov
jl
adc
and
add
add
or
pop
stos
dec
cli
test
and
mov
clc
ljmp
dec
xchg
xchg
mov
es
mov
sti
push
ret
or
cmpsb
aaa
test
xchg
xchg
pop
repnz
push
cmp
jl
daa
jbe
testb
call
sahf
leave
inc
lcall
pop
inc
push
cmp
in
pop
repnz
jle
adc
mov
mov
mov
int3
pop
mov
push
adc
aam
jbe
jle
inc
mov
inc
ret
je
dec
dec
sub
jl
inc
mov
mov
cmpsb
pushl
pop
loop
pop
mov
pop
js
pusha
mov
js
daa
push
fcoms
ret
jbe
js
dec
mov
arpl
sbb
sub
or
mov
dec
xorb
das
pop
loope
adc
or
and
inc
xchg
shr
dec
aad
les
xor
and
sub
and
sahf
xchg
add
enter
xchg
das
add
sbb
cli
or
scas
lahf
lds
add
rorb
insl
shll
nop
jl
inc
mov
mov
lock
ret
cmpsl
loopne
inc
push
fs
clc
push
cs
mov
aam
hlt
aas
in
pop
negb
dec
lret
or
inc
repnz
inc
dec
dec
je
jl
cld
jle
dec
add
cld
das
aas
shrl
call
repnz
fcomp
pop
in
xchg
cmp
cmp
andb
notb
pop
add
add
pop
inc
iret
dec
or
aam
mov
add
push
push
clc
cmc
inc
fcoms
sbb
pusha
sti
xchg
insb
aam
pop
bound
pop
mov
ret
xchg
shl
push
fidivs
idiv
cli
stc
sub
es
in
jmp
rcrl
in
dec
mov
je
adc
test
aas
ss
cmp
ds
inc
aas
inc
daa
dec
push
je
push
jle
pop
pop
ret
rep
bnd
pop
sub
jmp
mov
xchg
scas
dec
jp
inc
aam
stc
in
fs
or
aas
es
aam
jge
aas
mov
mov
aas
popa
adc
lret
in
fwait
imulb
fmul
lahf
fistps
adc
aaa
mov
pop
jae
jg
dec
sahf
mov
sub
mov
sub
dec
rcrb
jle
jle
jle
pop
ja
aas
cmpl
sub
fmull
add
insl
ret
pop
ficoms
shl
mov
sbb
inc
jo
dec
popa
sbbl
repz
mov
sahf
std
inc
sbb
add
cmc
mov
adc
cmp
adc
sub
daa
lret
test
decl
sbb
pop
lahf
pop
pop
arpl
iret
test
jmp
cmc
pop
adc
testb
pop
push
mov
aam
sahf
out
out
out
loopne
push
outsb
dec
sbb
cmp
jbe
push
lock
dec
mov
enter
repz
out
add
xchg
dec
lods
je
pop
rcrb
enter
js
nop
stos
and
icebp
sti
and
shll
add
pop
xor
mov
call
rorl
clc
and
push
and
loope
sub
fwait
dec
gs
je
sub
test
data16
in
call
aas
jnp
or
push
out
dec
mov
mov
mov
jo
popa
dec
gs
mov
xchg
les
mov
pop
in
mov
pop
repz
outsb
repz
test
fsts
ds
call
aas
das
dec
test
jns
enter
lods
dec
stos
push
ror
out
lock
jle
pop
push
or
xchg
inc
mov
cld
xchg
inc
in
stc
in
out
stc
add
pop
lahf
popa
and
or
mov
rcrb
cmpl
cmpsb
mov
aam
add
subl
xchg
mov
jne
mov
sub
subb
fidivrs
fnstcw
jo
dec
lds
jne
ret
jle
push
mov
pusha
cmp
test
or
jl
dec
lcall
add
cmp
mov
push
pop
and
xchg
xchg
movsb
add
jo
ficoml
cltd
orl
lock
sbb
lock
sahf
sub
outsb
and
or
xchg
test
jbe
dec
arpl
xor
test
fldl
inc
test
ret
inc
fbld
cmp
dec
daa
pop
inc
jo
bnd
push
pop
push
fcompl
repnz
loopne
inc
push
xor
pop
adc
test
daa
out
jl
push
pop
subb
add
mov
int
jmp
mov
cmp
pop
or
and
loope
jl
and
mov
pop
mov
mov
xor
jo
imul
xchg
leave
cld
cmp
push
aas
cmp
mov
lods
mov
leave
icebp
out
cli
nop
call
sub
xchg
fs
fadds
dec
ret
mov
lahf
jl
popf
and
das
sub
stc
in
loop
push
xchg
clc
cmp
inc
mul
cwtl
jb
xor
xchg
movsb
cli
jne
mov
lock
lahf
popa
or
cmp
das
cmp
cld
inc
popa
loopne
xchg
cld
mov
add
push
dec
dec
inc
xchg
lret
mov
js
dec
lcall
pusha
in
cmp
out
roll
and
ds
xchg
jo
lock
xchg
jb
xor
mov
xchg
sbb
pushf
ss
push
ret
cld
cmp
push
sarl
hlt
mov
call
les
and
pop
xchg
push
cmp
push
loopne
scas
xchg
aam
ret
xchg
dec
rorb
jnp
xchg
movsl
ds
or
push
xchg
mov
movsl
adc
lods
or
lock
mov
outsb
mov
fdivrs
jle
dec
pop
idivb
pushf
cmp
rolb
jmp
xor
inc
iret
pop
cmpxchg8b
ret
ljmp
pop
rcll
sub
push
mov
mov
in
adc
mov
and
mov
js
xchg
movsl
roll
or
sbb
mov
adc
dec
mov
xor
mov
mov
or
test
fs
or
fstpt
or
gs
push
xor
js
dec
cmp
push
cmpsb
jo
mov
push
mov
out
dec
cmp
or
inc
pop
mov
and
js
xor
shll
inc
or
add
mov
bound
inc
jge
es
in
stos
hlt
mov
int
test
out
aas
jmp
xlat
add
fildll
cld
clc
push
stos
scas
popa
xchg
jp
fwait
je
and
mov
dec
lods
hlt
or
xor
aam
inc
fldl
and
adc
dec
dec
adcl
push
sbb
xchg
loopne
dec
and
decb
mov
mov
cmc
adc
adc
or
fidivrs
imul
andb
mov
jo
js
cli
data16
shr
mov
pop
dec
jg
out
xor
dec
mov
and
xor
xor
or
dec
daa
push
lds
sarl
in
xchg
frstor
cmpsl
sub
dec
inc
jle
loope
shrl
repz
xor
fsubl
xchg
sub
pop
mov
xor
scas
sbb
jo
xchg
cmp
daa
fs
pop
lds
mov
loopne
outsb
aaa
dec
daa
ljmp
lcall
decl
fs
pop
sub
dec
pop
push
or
cltd
stc
mov
loopne
jno
rcll
ret
addb
aam
adc
push
outsb
jo
dec
mov
lods
pop
cld
je
xor
and
cmp
mov
add
push
or
sub
sub
or
inc
xchg
xchg
fs
lock
xor
jb
fucomi
push
lods
cmp
test
jae
jle
xchg
test
pop
clc
or
xchg
test
daa
adc
pop
push
pop
add
cmp
lock
pop
xchg
popa
int3
js
mov
cmp
mov
imul
mov
pop
inc
outsl
addr16
cmp
subb
mov
or
and
mov
es
shll
push
cmp
pop
inc
stos
test
xorl
repnz
mov
add
ss
push
or
popa
dec
das
arpl
dec
mov
sbbb
pop
lds
push
pop
dec
xorb
sarl
sub
xchg
push
in
shll
adc
cmp
in
les
and
mov
xchg
in
les
lock
icebp
cld
cmc
cld
stc
cld
adc
xchg
fs
xor
leave
lahf
rcll
repz
or
cmpsb
add
lock
mov
jg
pushf
shl
jecxz
jmp
out
loope
adc
mov
push
icebp
pop
stc
jno
or
faddl
in
jge
pop
jge
push
notb
mov
fsubr
dec
les
adc
loope
int3
sbb
or
add
adc
mov
xchg
dec
xchg
mov
rcrl
je
sbb
cmp
jnp
xchg
jbe
push
rolb
aas
or
cmpb
loope
call
scas
fwait
jbe
test
stos
pop
cmpsb
lahf
lret
xchg
shrb
sarl
xchg
imul
movsl
out
not
cli
pop
pop
sub
push
mov
xor
in
mov
cld
mov
test
mov
jb
mov
icebp
daa
add
fcompl
into
lahf
fists
pop
dec
and
decb
les
mov
enter
jle
pushf
orb
pusha
movlps
xor
cld
pop
and
data16
je
dec
or
cmp
inc
pop
clc
push
jbe
add
faddl
loope
lock
js
pop
pop
mov
das
ss
jno
push
int
cmp
xchg
pop
dec
mov
xchg
xchg
mov
xor
cmp
rdpmc
pop
xor
das
cmp
test
jle
mov
sarb
mov
std
mov
mov
xchg
mov
test
xchg
cmp
mov
mov
or
ss
je
adc
cmp
out
pop
add
cmp
dec
insl
jo
js
pop
movsl
add
in
mov
bound
loopne
out
lock
lcall
dec
mov
mov
xchg
adc
cmpb
add
pop
jmp
jl
jg
xchg
pusha
push
xor
inc
mov
pop
mov
jno
jle
push
dec
movsl
stos
inc
push
or
cli
cmp
sub
inc
popa
xchg
jne
rol
test
add
pop
add
dec
mov
pop
pop
std
pop
repnz
daa
testb
mov
sahf
loope
je
in
sbb
xchg
clc
mov
dec
push
test
in
aas
or
leave
push
aam
fisubl
inc
mov
jo
sub
and
popf
out
cmp
js
push
lock
andl
repnz
lock
out
icebp
cld
add
cmp
cs
or
add
push
mov
push
add
stos
xchg
loopne
jmp
or
dec
mov
adc
loope
lock
jle
pop
mov
dec
les
push
pop
fs
aad
bound
bound
push
xchg
pushf
and
mov
inc
popa
xchg
mov
add
pop
xchg
mov
inc
icebp
test
and
scas
ficoml
je
in
outsb
loop
stos
aas
mov
mov
jbe
dec
mov
sbb
test
daa
sub
adc
insl
sbb
mov
repnz
pop
mull
ds
or
jnp
int3
and
and
in
mov
loope
test
les
sar
sbbl
inc
dec
inc
xchg
push
cli
jle
pop
mov
jne
mov
adc
movsl
movsl
rcrb
scas
xorl
aaa
mov
incl
inc
jecxz
xchg
int3
in
sub
mov
sub
rorl
push
cmp
jp
jle
sbb
cli
in
movsl
imulb
xchg
mov
fxch
loopne
ret
leave
dec
imul
in
daa
fisubl
push
pop
sti
dec
mov
jbe
jp
jle
push
jle
jle
pop
mov
dec
sahf
pminsw
insb
lock
mov
lret
mov
xchg
fsubrp
and
repnz
mov
inc
add
cmp
push
pop
mov
adc
push
hlt
sbb
push
cld
and
es
sub
cs
xor
stc
pop
stc
pop
js
and
scas
or
lahf
adcb
aas
xchg
sub
test
and
push
loop
daa
sub
lock
pop
aas
andl
rcll
or
roll
aad
sbb
pusha
dec
mov
or
xor
js
dec
dec
ret
mov
les
dec
jb
jle
xchg
inc
jbe
out
mov
pop
ret
lret
or
je
push
out
stc
repnz
or
cli
js
sbb
aaa
push
popf
or
push
lahf
sbb
push
lahf
and
or
cmp
and
insb
fs
pop
aas
bound
stc
jb
jbe
jp
sbbl
repz
mov
push
xchg
test
sub
stc
cmpsb
stc
stos
stc
scas
stc
mov
repnz
mov
das
into
lret
shl
pusha
adc
loopne
loop
out
ljmp
mov
mov
xor
daa
or
adc
je
and
repz
mov
lea
dec
mov
mov
pushf
js
repz
mov
repnz
pop
clc
daa
js
pop
testl
add
sub
xor
shl
xlat
or
jns
push
jge
push
xchg
push
cli
cmp
cwtl
mov
sbb
imul
les
jnp
cmp
fs
dec
test
mov
mov
loope
jp
or
jnp
cmp
aas
mov
xchg
daa
mov
lcall
stc
pop
mov
xchg
test
inc
add
dec
and
outsl
inc
jmp
xchg
lahf
push
xchg
je
and
jo
dec
enter
pop
jnp
xchg
out
dec
jmp
adc
mov
jl
jl
mov
scas
xchg
mov
dec
pop
ss
adc
jbe
scas
icebp
in
mov
hlt
cmp
push
push
dec
loop
stc
das
add
dec
ret
mov
adc
cmp
call
jno
sub
sbb
cmp
imul
ds
jmp
orb
loopne
aad
xor
data16
loope
jl
cmp
ficompl
push
sti
adc
jo
ret
push
inc
stos
and
xchg
mov
js
jl
dec
add
clc
push
jp
jl
jle
jle
pop
scas
cld
dec
mov
loope
jecxz
icebp
stc
std
stc
add
test
or
lock
push
adc
mov
jmp
and
ljmp
cs
sub
out
in
decb
fiadds
push
push
je
dec
xor
add
push
test
idiv
cld
fisubrs
sbb
sub
lods
negb
sub
imul
mov
ret
and
repnz
pop
add
add
xor
push
fcomps
mov
or
adc
lock
cs
outsb
lret
ja
adc
fs
lahf
xchg
daa
xor
ss
push
xchg
jg
mov
lahf
lahf
test
mov
out
out
testl
outsl
mov
inc
lahf
add
enter
dec
xchg
cmp
push
adc
cmp
mov
fadds
dec
dec
ja
scas
dec
leave
mov
and
pusha
cld
and
in
cmc
xchg
clc
sbb
xchg
orl
jns
adc
or
rclb
dec
jle
out
mov
sub
mov
and
xor
stos
cmp
and
pusha
dec
sub
or
mov
push
std
cmp
imul
test
mov
das
ret
cmc
loope
xchg
rcl
fdiv
cmp
aas
loopne
xchg
mov
shrl
or
ds
add
cmp
cltd
inc
adc
xor
dec
xor
lret
jo
dec
negb
dec
mov
out
sbb
mov
pop
and
js
mov
jg
push
pusha
and
xchg
out
dec
inc
xor
mov
mov
sub
xchg
sub
lods
and
imul
aaa
das
subl
leave
cmpsl
and
jbe
push
mov
mov
inc
xor
xor
dec
cmp
mov
inc
gs
ret
sbb
mov
fcmovnbe
jecxz
out
lock
mov
xchg
push
xchg
pop
adcl
test
cmp
mov
inc
cmp
outsb
in
jle
push
lds
sub
in
sub
enter
cmp
jmp
pusha
add
mov
imul
push
push
in
call
xor
pushf
punpckhbw
or
inc
mov
rorl
xchg
jle,pt
dec
cmp
orb
scas
or
outsl
add
push
ss
xorb
mov
psraw
loop
mov
push
sti
sbbb
lods
subb
mov
cmp
sub
and
or
adc
fldcw
adc
inc
jg
ss
icebp
nop
pop
sub
out
and
mov
cmp
js
nop
xchg
ss
rcr
cmp
daa
push
roll
leave
dec
sub
mov
xchg
loope
pop
sub
ret
out
dec
movl
cmp
sbb
xchg
xorb
imul
sahf
push
sbb
fmuls
mov
call
dec
push
and
cmp
je
sbb
jl
adc
in
adc
into
or
mov
leave
cmp
mov
xlat
imul
mov
jb
dec
pop
jl
xor
cmp
mov
sub
loop
rclb
lock
mov
fsubs
inc
sub
mov
dec
mov
nop
in
mov
jg
xchg
sarb
pop
add
aaa
sbb
pop
test
mov
jne
fs
daa
sub
daa
and
jno
inc
sub
shlb
mov
rclb
adc
sub
xchg
xor
ret
cmc
test
dec
mov
mov
jl
dec
inc
jb
sub
mov
push
data16
push
mov
enter
shll
call
clc
xchg
std
add
into
cmp
cmp
sub
mov
xchg
data16
cld
push
pop
adcb
loope
iret
cmp
lret
push
push
pop
loopne
jne
mov
mov
out
in
mov
mov
adc
movsb
daa
mov
pop
cld
pop
outsl
pop
jl
xchg
int
add
popf
orl
mov
xchg
add
sub
xchg
push
in
lock
cld
ja
lret
inc
lahf
aaa
sahf
sbb
dec
dec
fisubl
and
jg
lret
sar
jl
dec
mov
sbb
loopne
adc
inc
add
sarl
outsb
stos
and
in
in
jmp
xchg
jo
stos
push
mov
mov
nop
call
add
fmull
enter
data16
nop
mov
int3
fidivrs
dec
clc
outsl
mov
mov
das
hlt
lahf
cld
repnz
bound
popf
and
mov
lret
test
fsubrp
pop
shlb
mov
test
jg
pop
mov
test
cmp
pusha
lret
adcb
bound
xchg
and
aas
nop
iret
fmulp
out
out
cwtl
sub
shlb
aad
enter
inc
ret
hlt
lock
xchg
dec
inc
rclb
jle
pop
and
lret
cmp
testl
mov
les
fadds
sub
mov
or
mov
call
xchg
pop
pop
testl
mov
push
dec
movsb
or
es
sub
in
jo
pop
pop
and
jbe
lcall
sub
nop
jns
lods
leave
into
hlt
or
and
or
shrl
or
mov
dec
xor
les
je
mov
mov
push
pop
cmp
in
test
inc
dec
test
je
dec
pop
lock
mov
xchg
scas
dec
dec
mov
pop
das
mov
fsts
sbb
ja,pt
aam
aam
inc
mov
ja
push
mov
test
xchg
enter
sub
jbe
and
stc
push
popf
and
xchg
outsb
jbe
pop
xchg
xchg
fwait
call
sahf
push
and
and
mov
les
mov
ret
or
lock
pop
xchg
in
popf
jl
adc
data16
push
dec
jmp
push
cmp
test
lea
cwtl
jle
popf
inc
jl
aas
lock
adc
fwait
push
inc
xchg
inc
stos
aad
cwtl
repnz
lds
or
pop
mov
roll
ljmp
movsl
dec
mov
cs
push
out
jne
ja
cmc
sbbl
push
repnz
ljmp
jle
ljmp
cmp
in
aad
mov
sbb
sub
push
aad
xor
mov
lock
cld
stos
mov
and
mov
daa
xor
push
jle
xchg
repnz
mov
push
xchg
scas
dec
dec
js,pt
pop
ja
aas
mov
inc
cmp
sub
lcall
and
jecxz
repnz
popf
pop
movsb
adc
in
dec
jne
loopne
stc
ret
pop
adc
shll
test
push
movsb
out
shr
dec
js
pop
push
push
mov
fnstsw
sbb
cwtl
mov
hlt
loopne
mov
adc
test
call
popa
or
cwtl
hlt
xchg
mov
jmp
xorl
pop
rcll
cwtl
inc
or
aas
lock
pop
cli
adc
call
daa
popa
push
dec
loope
jmp
xchg
fistpll
stc
fyl2xp1
in
stc
cmc
stc
adc
test
pop
loope
mov
repnz
and
jnp
xor
mov
fiadds
dec
scas
iret
iret
iret
xlat
iret
fcmovne
repnz
sbb
dec
or
jne
lret
arpl
inc
mov
leave
stc
out
stc
adc
pop
lcall
or
cmp
cmpsl
inc
mov
je
mov
loope
lea
loop
scas
dec
outsl
push
dec
xor
pop
inc
and
sbb
or
popa
sub
push
xchg
sbb
mov
call
ljmp
mov
and
pop
and
aad
aad
cmpsb
jecxz
or
shrl
xchg
outsb
xchg
jg
sub
xchg
mov
shr
inc
out
aam
repz
adc
pop
xchg
incl
sahf
mov
mov
and
shrl
or
rcrb
xchg
and
inc
adc
mov
push
mov
jle
xchg
mov
xchg
pusha
push
mov
mov
loope
dec
das
ret
inc
cltd
ret
adc
dec
ficomps
out
push
xchg
push
xchg
jo
in
and
js
dec
arpl
out
push
dec
adc
es
inc
mov
test
pop
push
fucom
fistpll
mov
arpl
ds
jl
aas
jno
mov
xchg
rol
pop
lock
call
or
sbb
and
addr16
daa
js
dec
and
js
dec
xchg
stos
aas
fildl
push
mov
cmpsb
lods
adc
add
dec
add
push
mov
mov
xchg
cld
cmpsb
xchg
fs
mov
xchg
pop
mov
clc
sub
add
mov
dec
int3
mov
cld
mov
xchg
out
in
loopne
lock
stos
clc
cmpsb
mov
cmp
lahf
cltd
enter
nop
dec
stc
mov
add
jmp
pop
push
mov
push
xchg
stos
pop
xor
cmpl
arpl
loop
dec
fmuls
or
loop
mov
and
cld
in
jmp
push
mov
sbb
jle
ror
jne
roll
jne
push
inc
push
jno
sub
sub
cmp
jle
stos
xor
pop
pop
pushf
adc
push
pop
test
adcl
cmp
repnz
daa
icebp
out
call
sbb
inc
xchg
inc
scas
and
mov
mov
jmp
adc
xor
out
sahf
jno
pop
mov
insb
or
jmp
daa
jle
cmp
aas
aam
lock
jle
shll
adc
ret
jns
pop
jp
mov
loopne
ds
xchg
mov
lods
mov
mov
push
cmc
mov
adc
rcll
daa
add
sub
in
cmp
and
mov
fwait
xor
pop
pop
jb
fs
pushl
in
mov
adc
sbb
stc
les
bound
jo
push
xchg
adc
xor
mov
ret
incb
and
xchg
fimuls
pushf
push
fs
cli
xchg
stos
outsl
adc
scas
das
mov
out
out
in
lods
xor
out
aas
repz
or
adc
adc
insb
nop
aas
scas
sub
loopne
push
mov
pop
dec
or
mov
or
push
sarl
rorl
daa
push
add
je
mov
test
mov
sbb
ret
idiv
mov
or
and
jns
pushw
cltd
mov
int3
xchg
xchg
dec
pop
adc
pop
fmuls
mov
sub
outsb
or
add
jae
and
cwtl
jbe
pop
jne
sub
mov
cmp
hlt
cmp
xchg
dec
dec
rorb
xchg
pop
dec
pop
inc
mov
aas
stc
or
aaa
sub
mov
jmp
push
loopne
mov
xchg
push
inc
imul
mov
shll
ret
dec
bound
jae
jg
test
dec
cmp
sub
jmp
test
jno
and
mov
push
and
es
cs
out
sub
stc
popf
stc
mov
fldenv
xchg
or
xor
sbb
ds
cmp
sub
roll
insb
or
inc
mov
mov
mov
ret
dec
mov
add
test
mov
std
popa
or
shrl
inc
pop
aaa
fimuls
js
pop
mov
cmp
pop
fwait
mov
adc
imul
out
push
mov
fdivs
add
pop
jge
inc
fwait
std
cmp
orb
sti
or
mov
data16
dec
sub
fisubrl
orb
xor
sub
mov
dec
shr
or
stos
shll
push
mov
inc
and
mov
cmp
pusha
xchg
jo
xchg
ficoml
nop
xchg
xchg
in
in
cmp
in
arpl
scas
cmp
iretw
outsb
leave
mov
pop
rclb
sub
lds
and
xor
xchg
inc
ret
fdivrs
js
pop
and
adc
mov
fcomps
ret
or
mov
fldenv
test
mov
lock
rorl
cwtl
sbb
jg
and
call
test
mov
add
adc
add
mov
jb
pop
dec
sub
or
xchg
push
ret
ret
pusha
jae
jge
xchg
ret
lcall
dec
mov
pop
dec
pop
daa
cmpl
popf
sub
jnp
test
xchg
dec
push
shrb
pop
and
cmp
imul
and
les
inc
xchg
sbb
sub
mov
into
shrb
je
sti
flds
lock
fstps
enter
xor
hlt
pushf
sbb
into
ds
das
mov
in
pop
loope
or
jne
and
idiv
or
mov
pop
fisttps
jnp
orl
repnz
jo
jle
jle
jle
pop
fimull
jle
lret
xchg
add
mov
sbb
xchg
xchg
stos
repnz
and
adc
xlat
pop
mov
mov
mov
lahf
loope
in
test
call
es
cld
mov
rcrl
sub
xorl
in
mov
xchg
inc
xchg
je
pop
sti
out
or
and
stos
dec
mov
lret
and
pop
loopne
enter
push
sti
or
inc
rcrb
leave
sub
or
dec
push
jmp
outsb
or
push
and
mov
xchg
scas
loopne
call
cli
call
je
xor
subb
test
mov
xchg
test
pop
lods
mov
xchg
fcoms
rcrl
xchg
scas
or
add
xor
dec
jle
rorb
nop
js
das
ret
filds
adc
dec
add
ds
daa
mov
push
mov
mov
mov
das
mov
fs
pop
rclb
sar
sub
cli
push
leave
pop
sub
xchg
lods
daa
addps
dec
rorb
dec
lea
xchg
clc
fidivs
jle
fsubrl
xlat
inc
dec
subb
adc
push
bound
popa
xor
dec
xor
sub
int3
or
inc
mov
js
incb
inc
add
xchg
xor
dec
ret
fcomps
nop
lret
sub
in
loope
jae
xchg
loope
popa
inc
pop
sub
dec
std
out
sub
push
stos
adc
loope
jmp
popf
fdivrs
lock
pop
xchg
jle
xchg
jle
bound
stos
dec
sbb
iret
cmc
iret
dec
and
jbe
inc
cli
and
je
jb
xchg
cld
dec
aas
cmpsl
aas
lods
daa
mov
cmp
cmp
adc
mov
mov
je
push
test
cmp
addb
jmp
in
sub
push
aam
iret
lahf
or
add
lahf
std
xchg
or
daa
popa
push
pop
pop
push
push
jb
adc
out
in
cld
cld
aas
int3
aas
xlat
and
icebp
add
add
push
xchg
and
cmp
aas
pop
daa
popa
inc
divb
jg
test
xchg
imul
mov
in
or
mov
fldcw
xchg
mov
dec
data16
iret
lret
and
or
gs
and
jp
cli
xchg
ud0
and
pop
clc
jl
test
sarb
sub
cli
lahf
repz
add
cmp
imul
out
or
idivb
and
imul
and
movsl
mov
pop
mov
dec
cmp
lret
pop
ror
cmp
cmp
das
mov
loop,pn
or
pop
sub
push
pop
iret
pop
leave
jno
mov
in
call
mov
sbb
xchg
es
inc
xchg
mov
pop
jle
dec
jne
cmp
mov
xorb
in
pop
js
cmp
sub
inc
xchg
repnz
xchg
test
mov
xchg
leave
sahf
shrb
jle
dec
lds
cld
push
scas
ret
push
sbb
inc
ret
les
push
push
nop
pop
mov
inc
call
cli
pop
mov
xchg
lahf
mov
mov
sub
rol
push
jp
dec
lods
ret
pop
jle,pn
pop
cli
pop
sub
mov
pusha
int
loope
add
or
movsb
pop
inc
mov
dec
lea
rsqrtps
lret
jbe
jg
and
or
cmp
pop
add
or
dec
mov
mov
xchg
sub
sbb
mov
mov
call
mov
xchg
pusha
js
dec
push
mov
stc
cld
std
xchg
xchg
daa
or
adc
xchg
aas
sbb
and
loop
xor
inc
repnz
jg
rcrb
xor
cld
mov
cmpsb
push
lock
mov
jg
push
cmpsb
ret
pop
adc
mov
pusha
loopne
in
add
sbbl
std
test
xor
mov
and
repnz
push
jecxz
sbb
popa
push
pop
sub
inc
and
div
pop
cld
xchg
or
leave
add
jmp
push
dec
mov
decb
inc
pop
aad
cmpsb
in
outsb
and
cmp
jo
cmp
cmpb
pop
xchg
loopne
sahf
xchg
inc
fsubl
dec
xchg
mov
mov
aam
push
lret
rclb
xchg
loop
out
ljmp
bound
push
jg
add
fs
mov
cs
test
cmpxchg
dec
push
jp
push
jle
jle
jle
jle
jle
pop
outsb
mov
and
decb
xchg
xchg
xchg
inc
dec
fldl
repnz
push
sub
cmc
cmp
adc
jmp
xor
xchg
loope
mov
das
addb
fidivrs
pop
mov
mov
dec
mov
out
ljmp
cli
mov
adc
push
hlt
sbb
push
cld
and
es
test
mov
inc
leave
dec
inc
xchg
push
stc
push
je
pop
cld
bound
ret
scas
jbe
jp
pushf
adc
das
mov
pop
xchg
addb
or
cmpsb
xchg
stos
in
inc
test
movsl
and
push
pop
push
sahf
icebp
in
cmp
mov
jno
adc
cld
test
sti
sub
adc
pop
jmp
and
daa
repz
das
pop
inc
pop
aaa
lahf
cmp
inc
rcr
dec
dec
mov
dec
pop
test
aas
addr16
imul
aas
jae
ja
jnp
jg
cmpl
aas
mov
test
xchg
aam
adc
movsl
xchg
jl
scas
adc
inc
inc
sarl
leave
pop
notb
sarl
mov
dec
or
dec
dec
pop
pop
ljmp
femms
leave
lret
icebp
sub
ljmp
in
xchg
adc
and
dec
imul
jg
mov
mov
mov
ret
pop
frndint
out
jmp
je
std
mov
cmp
inc
xor
fldcw
loope
sub
clc
inc
push
cli
dec
adc
jp
jmp
pop
dec
ljmp
or
call
pop
jle
pop
adcl
sbb
lock
fnstcw
and
pusha
xor
cmp
shrb
fcom
xor
bound
sahf
inc
aaa
sti
jne
jb,pt
ret
pop
clc
sbb
cmp
popf
stc
pop
xlat
ret
pop
add
stos
xchg
xor
mov
inc
ret
xchg
test
jle
mov
inc
in
lahf
pop
test
inc
gs
or
cmp
cmp
dec
dec
inc
adc
cli
adc
xor
mov
lahf
test
jle
or
rcl
lret
fdivrl
test
outsb
lock
mov
xchg
mov
aas
int3
push
insb
xor
mov
cmpsl
cmp
xchg
daa
mov
fistpl
inc
ds
loop
jne
add
in
mov
stc
iret
std
ret
add
inc
je
adc
pavgb
adc
mov
add
mov
jo
stc
sub
scas
or
inc
mov
sub
lods
loope
out
enter
pushf
adc
xor
cmp
cli
stc
mov
popa
jbe
push
jle
ds
pop
xor
xchg
add
imul
popa
cld
xlat
outsb
ret
dec
xchg
push
pop
sbb
int
dec
jmp
or
pop
movsl
lock
pop
das
pop
js
dec
xchg
ret
sti
idiv
jo
mov
jbe
adc
push
push
push
jle
mov
jecxz
jmp
repnz
and
test
nop
pushf
and
add
mov
ret
pusha
adc
push
addb
loopne
stc
mov
adc
std
push
insb
sbb
pop
jb
insb
lret
loopne
clc
or
js
jp
jl
pop
xchg
jb
add
xor
push
adc
cmp
rorb
test
push
mov
xchg
xor
ficompl
test
cmp
or
fsubl
xchg
push
nop
cwtl
sbb
mov
pop
mov
in
in
pop
loopne
inc
and
cmp
mov
lcall
pop
pop
pushf
dec
les
dec
cmp
xchg
add
adc
push
popf
sub
dec
test
fsubrl
cli
cld
inc
mov
mov
dec
ret
mov
mov
xor
or
in
popa
test
lret
out
inc
dec
lock
shlb
das
sbb
cmp
xchg
inc
and
lock
pop
scas
jb
cmp
aas
mov
adc
xchg
adc
or
inc
into
lock
inc
cmpsb
je
mov
cld
cmp
sub
loopne
cmp
dec
dec
and
jle
pop
pop
xchg
pop
scas
daa
push
mov
jne
rcrb
out
push
adc
out
jbe
pop
add
js
jp
dec
aaa
mov
push
cld
imul
scas
and
mov
rolb
pop
int
inc
loop
jle
out
sub
incl
xor
lcall
adc
sbb
dec
pop
scas
or
clc
xchg
jl
pop
dec
or
mov
or
mov
add
sbb
xchg
push
adc
out
and
sub
ja
push
ljmp
inc
hlt
popa
push
fld1
out
ds
push
mov
and
mov
adc
popa
sbb
outsl
adc
and
pop
sub
cs
clc
push
shr
pop
cmp
in
es
add
ja
addb
icebp
xor
mov
movsb
and
icebp
sbb
clc
fsubl
icebp
stc
es
mov
cld
push
out
add
icebp
ret
mov
fadd
in
shrb
pop
sar
jbe
pop
or
sarl
loopne
lahf
add
mov
js
ret
dec
mov
mov
mov
cld
or
ds
inc
xor
js
add
insb
mov
adc
pop
push
cmp
and
adc
and
pop
add
pusha
push
jo
js
dec
mov
mov
fsubr
sbb
xchg
dec
loopne
mov
movsl
mov
pushf
ljmp
xchg
mov
add
gs
sahf
fnstcw
add
cmp
out
sub
jnp
jge
insb
mov
popa
push
in
repnz
push
ret
je
adc
xor
mov
divps
leave
or
dec
out
mov
lock
test
xchg
mov
xor
cwtl
stos
je
and
pop
enter
fs
xor
cwtl
lock
push
lahf
rorl
aad
out
in
decl
loopne
adc
and
shll
loope
int3
outsl
xchg
fmuls
dec
jmp
pop
daa
pop
shr
sarl
std
fs
jae
inc
pushl
rclb
sbb
adc
test
sarb
hlt
outsl
loopne
push
in
mov
sbbb
xchg
cwtl
loop
loopne
ss
addl
sbb
cmp
mov
pop
or
dec
pop
pusha
ret
adc
add
jmp
cld
loop
and
xchg
aam
pop
mov
imul
add
and
jle
mov
push
mov
or
testb
cs
xor
ret
je
adc
test
and
rcrl
cmp
in
mov
leave
pop
mov
ret
mov
out
out
add
cmp
or
and
mov
xor
xchg
pop
dec
ds
push
xchg
xor
fldl
aaa
inc
jle
sbb
fdivl
cmp
in
lahf
test
scas
push
mov
mov
rcrl
cmp
and
push
add
xchg
mov
cwtl
sbb
outsb
xchg
insl
xchg
jmp
adc
and
cmp
or
movsl
movsl
xchg
inc
sti
or
push
testl
dec
cmp
mov
ficompl
pop
imul
js
add
add
ficompl
pusha
mov
imul
aam
mov
into
cli
daa
ljmp
sbb
rorb
jo
jnp
psubusb
iret
cli
and
cmp
sub
xchg
lahf
push
jne
add
add
and
ds
add
and
sub
into
push
xchg
and
aam
scas
lock
xchg
xchg
mov
int3
call
dec
xchg
fildl
cmpsl
loopne
aas
scas
dec
dec
sub
pop
and
test
scas
in
jbe
adc
cmp
insb
lock
mov
popf
aam
pop
fdivrp
and
push
push
test
mov
mov
pop
out
daa
aas
cs
mov
dec
lock
jno
int3
cmp
sub
ret
mov
popa
movsb
lods
test
and
sub
dec
push
roll
or
in
mov
mov
sub
je
je
lcall
mov
and
push
or
insl
or
data16
or
insl
or
outsl
add
cmp
xchg
stc
cmc
xchg
ss
or
insb
repnz
fs
repnz
fcomps
dec
inc
push
bswap
outsb
leave
jae
cmp
flds
fisttps
mull
adc
sbb
ret
negb
and
adc
sbbb
and
jno
jge
xchg
pop
pushf
ret
mov
repz
repnz
push
stos
jb
dec
pop
or
xor
cld
imul
ds
ds
sahf
je
inc
nop
or
cmp
add
sub
jp
test
mov
sub
jge
decb
jae
inc
add
push
aas
or
dec
out
shl
xor
loopne
test
aas
mov
xchg
lock
mov
in
xlat
lock
mov
jne
mov
push
mov
mov
shrl
in
pushf
pop
dec
or
cmp
dec
loopne
jbe
add
xchg
xchg
push
mov
dec
test
subb
adc
push
jle
adc
mov
ret
cld
sbb
or
and
dec
mov
test
ret
add
loopne
or
std
and
add
pop
test
and
and
repnz
push
movsb
adc
pop
rcrb
pop
xchg
lahf
pushf
lahf
mov
ret
mov
lock
cmc
add
xor
lcall
imul
xchg
jle
jle
pop
sarb
xor
test
addr16
xchg
xchg
movsb
mov
cld
call
or
sub
dec
dec
mov
insl
hlt
jg
jl
lahf
mov
lock
je
cs
cmpsb
xor
push
or
add
xchg
sahf
jle
dec
cld
jo
push
cmp
cmp
push
sub
cli
lahf
xchg
xchg
mov
cmpsb
pop
out
xchg
clc
mov
dec
jo
jp
jl
dec
xchg
mov
out
dec
or
and
and
outsl
orl
loop
js
jle
dec
xchg
adc
cmc
lret
dec
clc
loopne
xchg
mov
sub
xchg
movsb
call
xor
pop
pop
jbe
xchg
andl
movb
mov
orl
cmp
xchg
pop
pop
into
jp
jmp
inc
mov
leave
nop
push
or
xor
dec
mov
popf
mov
jg
fdivrs
outsl
shr
cltd
pop
xchg
mov
cmp
or
les
xchg
xor
inc
in
mov
jle
dec
std
mov
aaa
daa
inc
shlb
nop
pop
adc
fimuls
mov
mov
mov
test
stos
movsb
cwtl
inc
xchg
inc
sahf
adc
dec
das
gs
cmp
jno
jne
jns
wrmsr
or
xchg
and
repz
inc
jb
inc
xor
xchg
xchg
fwait
xor
lahf
pusha
mov
inc
addr16
bound
adc
push
push
fadds
jbe
adc
ret
mov
mov
call
scas
dec
jecxz
mov
adc
les
sbb
sub
shl
fsts
js
sub
and
inc
aam
in
pop
jo
adc
jbe
xchg
add
in
adc
aas
std
sub
clc
jb
jne
in
xchg
mov
lock
outsb
adc
xorb
aad
fimull
lock
dec
addr16
js
pop
incl
inc
repnz
aaa
jb
pop
popa
lock
popf
lock
arpl
lahf
daa
jo
in
xchg
pusha
into
fmuls
out
pusha
push
cmp
dec
pop
mov
pop
jl
pop
xchg
call
mov
xchg
daa
mov
jp
sahf
pushf
add
and
fwait
mov
xchg
dec
pop
cld
scas
xchg
adc
daa
mov
js
cmp
pop
sub
stc
pusha
clc
add
jb
je
jbe
nop
sub
sbbb
pusha
and
adcl
stos
push
cmpsb
ja
jg
cmp
or
mov
push
hlt
scas
addb
push
jb
pop
fadd
data16
repnz
ret
fsubs
jb
dec
movsb
cmp
fsubs
ror
in
imull
sbb
pop
and
add
loop
fsubr
add
clc
xor
lock
adc
ljmp
clc
jl
xchg
clc
pop
lcall
jbe
das
mov
xor
pop
sbbl
loop
imul
lock
push
mov
mov
inc
push
out
dec
xchg
mov
mov
repnz
xchg
cld
cmp
inc
cmp
cmp
jp
mov
imul
xchg
push
popa
mov
test
mov
test
daa
sbb
mov
lds
mov
aas
mov
loope
adc
call
test
sub
dec
push
orb
loopne
push
in
mov
das
cmp
rcrl
sub
pop
lods
pop
adc
in
daa
insl
pop
aam
test
stos
or
jp
fs
stos
xorl
sbb
je
dec
mov
and
jo
cmpsb
fxch
cmp
sbb
jbe
pop
xchg
or
jne
cmp
cmp
cli
je
pop
testb
and
sbb
adc
lret
xchg
flds
dec
add
sti
scas
test
pavgb
in
xchg
mov
fs
mov
jl
add
mov
jp
in
xchg
in
sbb
in
pop
pop
aas
jmp
mov
adc
pop
pop
xor
dec
push
gs
and
ret
dec
cmp
mulb
push
inc
mov
repz
and
push
mov
stc
aam
adc
and
dec
mov
aas
loop
mov
aam
push
mov
mov
or
test
leave
leave
lock
bound
push
xorb
mov
dec
dec
or
inc
xchg
fisubrs
sbb
stos
or
mov
cs
pop
mov
sbbl
shl
hlt
pop
adc
adc
sahf
xor
sti
sub
iret
loop
or
hlt
inc
dec
addr16
xchg
cli
mov
imul
test
mov
decl
adc
or
cmp
and
test
daa
pop
notl
xchg
cmp
pop
cmp
xchg
mov
mov
imull
add
stc
pushf
adc
adc
loopne
mov
cs
push
rol
mov
sub
stos
ret
shlb
push
cmp
mov
cmp
mulb
ret
mov
fisubrl
dec
push
mov
imul
cs
loopne
addl
dec
xlat
jmp
test
insb
xchg
popf
jp
jle
pop
push
lods
es
daa
add
dec
mov
sbb
lods
jo
add
sarb
jmp
stos
or
cld
sbb
aad
add
aaa
sbb
loopne
xchg
xchg
add
mov
in
int3
test
cld
push
mov
lods
popf
inc
xchg
push
ret
je
sbb
push
push
push
dec
sbb
daa
xor
out
inc
sub
or
dec
sarb
jle
jle
pop
sahf
ret
mov
mov
adc
mov
pop
adc
loopne
fadds
popf
test
shlb
add
jmp
movsb
cmpsl
mov
or
mov
sub
add
scas
push
ljmp
imul
or
inc
icebp
hlt
push
insb
loopne
test
cmpsl
repnz
addr16
xor
cmp
movsl
jg
aam
jb
in
push
dec
loop
iret
dec
dec
dec
or
pop
andb
adc
mov
jge
fcom
out
repz
or
pop
ljmp
sub
push
xor
dec
je
sbb
sbbb
push
rclb
scas
mov
sbb
js,pt
pop
insl
or
clc
pop
mov
pop
inc
ret
fdivr
dec
lret
push
aas
sbb
dec
fmull
dec
mov
pop
shll
mov
and
ret
nop
int3
gs
push
sbb
xchg
pusha
jmp
sub
popf
loope
daa
jl
cmp
imul
mov
ret
movsb
or
jae
dec
mov
ljmp
addb
or
and
clc
ja
mov
xor
adc
pop
push
inc
inc
sub
icebp
ljmp
in
cmp
inc
inc
fidivs
or
cwtl
xchg
mov
cmp
cli
dec
or
add
cld
pop
and
mov
popa
inc
repnz
adc
push
cwtl
inc
mov
lods
subb
mov
fmuls
mov
sahf
pop
arpl
rolb
xchg
mov
mov
jo
jmp
jle
scas
xchg
fidivrl
lcall
jnp
pusha
pop
stc
dec
cmp
and
and
and
stc
stos
stc
lds
jbe
in
test
and
dec
or
xor
sarb
out
mov
fcomp
je
dec
push
es
and
lcall
and
lock
leave
fsubr
or
into
dec
push
push
and
and
cmp
dec
popa
pop
mov
xchg
mov
mov
in
mov
inc
dec
les
in
add
mov
push
dec
jg
sub
xchg
test
sbb
dec
cld
mov
jnp
loop
mov
aas
decl
jo
mov
inc
pop
adc
inc
scas
ss
mov
and
jp
pop
sti
sub
lret
test
push
cmp
jo
test
jbe
js
jle
jle
dec
add
sub
pop
xchg
jmp
into
inc
jbe
sub
ret
cmp
testb
adc
mov
cld
dec
adc
and
and
addr16
and
and
and
mov
loopne
insl
mov
je
xchg
push
adc
push
jp
popf
rcl
loop
pop
mov
adc
scas
ret
je
push
mov
adc
cld
mov
icebp
incl
or
jmp
aas
scas
dec
jmp
mov
inc
rol
aas
xchg
sub
dec
inc
inc
xor
test
jb
sbb
arpl
outsl
mov
jnp
inc
pop
and
aas
sub
je
mov
xchg
pop
mov
mov
add
lret
stos
or
aam
inc
mov
leave
jmp
and
lds
jle
dec
xchg
ret
pop
jl
mov
scas
mov
mov
dec
aas
ficomps
daa
cmp
jne
and
jle
icebp
sahf
and
mov
es
jle
sbb
cmp
xchg
sbb
stos
inc
mov
jl
movsb
mov
mov
aam
rcll
popf
jbe
push
ds
shll
cmc
loopne
aas
pop
mov
xchg
in
inc
loopne
or
xor
xor
push
cmp
cs
js
fnsave
es
movsb
into
shrb
jle
adcl
cmc
sti
loopne
xor
in
lahf
test
jge
hlt
xor
sub
inc
cmp
cmp
dec
adc
push
fs
mov
popf
fs
mov
adc
popa
mov
daa
hlt
pop
dec
add
mull
fsubrl
mov
xchg
cmp
das
or
add
inc
xchg
mov
ficoml
or
neg
add
loope
outsb
or
adc
inc
ror
pop
sbb
nop
pop
mov
loopne
and
or
lahf
test
sub
mov
call
pop
mov
mov
ret
xor
push
jbe
push
ret
leave
bound
fmuls
pop
fistpll
in
cmp
dec
jmp
test
lock
scas
ret
xchg
fdivp
call
or
fs
lock
imul
xlat
cmp
and
lock
adc
dec
loopne
clc
js
fs
fstpt
pop
sti
and
mov
sub
scas
xchg
dec
cli
ret
loope
jb
ret
jle
push
adc
lahf
pop
dec
push
xchg
jp
nop
jmp
push
js
jbe
loop
cs
sub
jg
mov
jp
jl
das
push
sbb
mov
xor
out
ret
cmc
test
dec
loope
cmp
cs
es
lock
std
icebp
int
and
jge
adc
mov
dec
repnz
pop
pusha
adc
lock
mov
xchg
popf
xchg
outsb
mov
in
data16
popf
lcall
in
push
ss
gs
enter
xchg
loopne
inc
aas
hlt
daa
or
cmpsl
ljmp
imul
pushf
int3
inc
std
jg
loop
lods
ds
push
add
push
ds
mov
add
mov
push
push
andb
sbb
ss
sub
cmp
cs
mov
push
dec
scas
jp
in
dec
mov
sub
jmp
push
shll
mov
xchg
xchg
push
pop
loop
in
loopne
and
ds
jl
out
out
in
jmp
or
rcl
push
aam
jo
je
ljmp
lods
or
push
and
jg
pushfw
jge
pop
dec
sti
dec
adcb
inc
push
aaa
adc
cwtl
jbe
rorb
daa
stos
jl
inc
sti
mov
add
sub
stc
mov
enter
push
jg
nop
sbb
xor
scas
lret
mov
xor
orb
stos
xor
jo
test
test
adc
sbb
push
cmp
daa
lock
add
push
bnd
dec
dec
test
jae
popl
push
mov
jmp
outsb
cmp
jbe
pop
scas
andb
ret
push
add
out
hlt
adc
xchg
test
test
mov
dec
dec
fnstcw
bound
push
xchg
dec
test
bound
lock
fidivrs
xchg
movsb
gs
adc
mov
aas
mov
xor
inc
push
add
push
scas
xchg
jo
ret
mov
or
cmp
rcll
mov
jne
loopne
cmp
mov
fld
push
and
fs
loopne
mov
push
push
sbb
xchg
pop
scas
mov
stos
clc
xchg
sub
mov
xor
data16
jo
loopne
mov
adc
stc
inc
cmp
jp
and
aad
insb
es
test
xchg
add
and
push
nop
dec
mov
fcomps
hlt
and
push
test
cmpsb
xchg
push
mul
push
fdivrs
pop
outsb
ret
push
add
xor
jp
or
ret
jmp
jle
popf
jnp
xchg
loopne
lret
hlt
sar
fdivs
pop
aaa
adc
push
daa
xor
test
rclb
stc
mov
out
imul
dec
pop
repnz
nop
test
sahf
outsb
daa
xor
loope
gs
cmp
mov
sbb
xchg
test
and
ljmp
mov
lea
lret
mov
repz
add
lahf
popa
adc
outsb
ret
daa
test
enter
fmulp
jb
ja
pusha
inc
mov
xchg
xchg
xor
arpl
inc
rcrl
lock
negb
ret
dec
xlat
lock
dec
nop
and
mov
bound
mov
inc
sub
cmp
lcall
and
js
test
in
mov
iret
ror
xlat
testb
in
mov
xchg
cmp
cmp
ficomps
mov
stc
scas
or
addr16
lock
jo
xchg
imul
repnz
hlt
gs
add
mov
mov
loope
repnz
pop
pop
and
cs
cmp
pushf
xorb
cmpsl
scas
or
adc
inc
or
adc
insl
mov
mov
push
sbb
fdivs
sar
leave
or
call
lret
cmpsb
lret
call
test
call
test
ljmp
mov
mov
inc
in
mov
mov
sub
sbb
pop
int3
fldenv
push
jle
pop
jo
jp
cmp
inc
xlat
call
fdivs
int3
and
mov
aas
fimull
pop
xor
inc
inc
test
cmp
lods
mov
leave
aam
sub
call
jo
mov
dec
and
sbb
xchg
adc
dec
sub
adc
push
mov
pusha
pushf
arpl
pop
les
pop
in
dec
cld
and
adc
inc
sub
sub
cmp
les
xlat
shrl
es
and
xlat
sbb
rorl
push
pop
add
lret
sbb
push
sub
or
and
push
movb
add
jl
cld
nop
xor
movsb
hlt
fs
mov
ljmp
in
or
loopne
cltd
fcoml
data16
pop
cli
xor
lahf
mov
data16
rcrb
sbb
and
and
dec
imul
lock
divb
es
nop
lods
int3
mov
cld
enter
loopnew
call
mulb
hlt
cmpsb
dec
aad
cli
dec
inc
stc
ljmp
stos
pop
sub
push
pushf
pop
fs
dec
mov
loopne
loopne
divb
or
in
mov
and
dec
xor
xor
aad
push
mov
dec
inc
mov
ljmp
jno
pushf
push
adc
outsl
in
sbb
imul
inc
jo
mov
xchg
push
adc
insb
adc
call
test
xchg
fcoms
and
std
in
scas
xchg
fcoms
pusha
mov
mov
pop
insb
inc
mov
mov
dec
jmp
aam
xchg
xchg
clc
jl
or
leave
xor
xchg
movsl
jge
xchg
xchg
notb
mov
aam
push
fisttpl
adc
jle
add
clc
xchg
insb
or
dec
sbb
or
imulb
pop
pop
pusha
je
mov
test
mov
outsb
incl
fs
setb
dec
clc
fsubrl
out
test
pushf
push
cmpsw
jbe
es
in
pushf
sar
mov
call
pusha
cmc
bound
pop
jle
pop
inc
pop
sar
adc
nop
into
pop
dec
mov
jp
and
fdivs
aad
mov
push
sub
nop
cltd
dec
pop
push
xchg
pop
jae
js
or
pop
mov
push
aad
std
test
push
stos
or
aad
ja
mov
enter
call
sbb
rcrl
sbb
cmp
push
in
pushf
adc
scas
hlt
fisubl
push
in
stos
adc
cld
sub
or
fs
or
enter
imul
pop
pushf
or
xorb
add
enter
orl
and
jmp
jle
dec
jo
xlat
mov
mov
jle
or
iret
inc
xchg
hlt
or
pop
jmp
add
push
xchg
faddl
mov
push
mov
xlat
jge
pushf
stc
cwtl
stc
mov
mov
aas
loopne
call
xchg
mov
pop
movsb
dec
sbb
mov
push
sub
add
xchg
inc
mov
nop
ljmp
shrb
jo
xlat
pop
mov
add
xlat
inc
test
sbb
or
or
dec
mov
sar
pop
js
sbb
stc
test
or
jo
dec
enter
loopne
add
xlat
inc
clc
test
push
and
sub
mov
call
jge
imul
bound
jbe
cld
jbe
xchg
and
cwtl
jmp
jle
xchg
inc
ja
dec
aad
pop
mov
and
pop
pop
lods
and
sub
cld
sub
sub
sub
mov
dec
in
mov
adc
in
xchg
les
mov
xchg
mov
mov
lahf
lock
add
rclb
jl
mov
mov
or
sbb
push
jge
pop
inc
subb
in
jp
and
pop
dec
or
jo
int3
cwtl
loopne
sarb
adc
cmp
and
mov
pushf
and
repnz
xchg
mov
fs
pop
mov
stos
ret
and
xchg
jbe
jmp
movsb
mov
xchg
xchg
loopne
or
pop
sub
popa
les
in
inc
cld
or
xchg
aas
xchg
insb
pop
jmp
lods
mov
or
and
hlt
fsubl
mov
pushf
je
les
in
or
je
cmp
inc
pop
cmp
mov
aas
lock
xchg
sub
and
pop
xchg
xor
pop
hlt
ds
push
xor
add
xchg
out
lret
push
repnz
or
sub
into
xchg
pop
dec
enter
inc
rclb
inc
adc
stos
dec
xchg
movsb
je
fs
cwtl
cwtl
pop
les
adc
xchg
mov
mov
sub
inc
mov
movsb
xchg
dec
int3
leave
inc
hlt
popa
jle
push
pop
xor
test
test
mov
inc
push
or
and
test
push
daa
lods
pop
add
loopne
mov
dec
pop
adc
pop
in
test
xchg
je
jge
xchg
les
and
movsl
pusha
cmp
bound
or
mov
push
sbb
xchg
sub
ds
and
movsb
leave
sub
fs
lahf
inc
sbbb
inc
xchg
js
insb
ret
pop
insb
dec
mov
xchg
fisubs
sbb
or
or
inc
jb
push
mov
jge
stos
dec
sub
and
mov
cld
jo
sub
sub
push
inc
sbb
sbb
mov
movsb
adc
in
sub
cli
or
push
sub
out
cmc
cmp
or
sahf
les
push
mov
cmpb
test
movsb
shl
pushf
clc
stc
or
sahf
and
scas
fsubs
mov
cmp
nop
in
popf
fsubl
subb
cli
xor
mov
loope
sub
js,pt
mov
mov
cmp
cld
lock
add
sub
sub
es
push
and
or
movsb
inc
adc
sub
daa
hlt
lock
or
inc
test
xchg
ljmp
sub
or
fidivs
fmuls
or
test
clc
adc
lock
or
xchg
cmpsb
dec
sub
pushf
push
xchg
fsub
sub
hlt
and
sub
pop
js
push
mov
jmp
or
jo
sub
or
pop
jl
movsb
notb
stos
shl
xor
jnp
pop
lret
mov
adc
adc
push
dec
pop
or
test
adc
call
aad
push
xchg
repnz
mov
call
in
add
sarl
shlb
fs
movsb
push
mov
pop
lock
add
mov
ljmp
mov
pop
loopne
jo
mov
or
dec
sbb
mov
std
inc
mov
test
shlb
test
xchg
inc
pop
jo
dec
test
push
lods
rcll
call
adc
pushf
cmp
je
xor
in
out
enter
mov
mov
addb
xchg
in
xchg
jle
dec
or
jo
jl
xor
cmp
inc
cwtl
jp
leave
mov
dec
movsb
stos
push
sbb
jbe
cld
ficoml
sbb
push
stc
pop
cmp
mov
outsb
mov
mov
dec
fldcw
dec
dec
xor
je
es
xchg
lods
cwtl
fs
fimuls
lock
sub
fs
sbb
pusha
inc
frstor
pop
imul
out
das
mov
decb
pop
dec
in
lods
pushf
xchg
int3
pop
and
clc
dec
xor
push
pop
idiv
xchg
sbb
dec
fadd
call
pop
add
xchg
adc
dec
pop
cmp
sbb
pop
je
push
sahf
cli
mov
and
dec
in
movsl
pop
insb
dec
leave
sbb
dec
ret
movsl
inc
mov
out
enter
inc
les
fisttps
lods
xchg
or
inc
xor
nop
lods
lcall
dec
movsb
jmp
jb
cmp
xchg
xchg
lcall
cmp
mov
pop
out
dec
lea
mov
dec
loop
icebp
lret
loop
movsb
jmp
fstl
out
leave
aad
lods
or
pop
ja
cli
pop
cld
ficoms
loop
popf
push
mov
mov
cmpb
repnz
loope
fistpll
fisubrl
cmp
pusha
adc
jmp
test
or
cs
and
sbb
sub
inc
inc
push
xor
add
xor
sbb
or
dec
or
fadds
mov
bound
add
cmp
inc
add
mov
fs
adc
dec
mov
dec
or
sub
xor
mov
loopne
mov
adc
add
fiadds
mov
and
inc
or
or
adc
mov
mov
adc
xchg
push
add
cmp
mov
xor
add
push
adc
out
jno
adc
adc
and
dec
repnz
pusha
and
inc
js
mov
dec
notb
fdivr
mov
adc
and
add
xchg
sti
and
inc
cld
push
mov
adc
pop
bound
mov
cmp
test
xchg
adc
loop
cwtl
ret
add
adc
fabs
adc
adc
and
dec
std
xchg
pop
and
inc
jo
mov
test
or
mov
rcrb
nop
loopne
lock
or
jl
adc
and
nop
xor
inc
xchg
push
aas
and
jo
enter
nop
repnz
adc
sarb
sbb
loopne
lock
or
adc
xor
inc
bswap
push
jle
pusha
bnd
nop
cmp
xchg
mov
rorb
sarb
loopne
lock
mov
bswap
and
xor
inc
pop
nop
push
cld
pusha
xchg
jo
and
cli
adc
loopne
mov
and
and
mov
adc
push
adc
add
shl
call
unpckhps
push
and
adc
cmp
push
jg
push
test
vmread
loope
adc
adc
pushf
daa
add
aam
inc
je
in
sbb
and
or
adc
icebp
or
add
inc
je
sbb
add
add
cld
inc
xor
cmpsl
pusha
adc
and
cld
xor
inc
ss
inc
add
adc
lock
sub
loope
inc
xchg
inc
cmp
inc
sub
dec
sub
jo
pusha
dec
inc
inc
push
lds
rclb
mov
push
add
xchg
xor
test
xchg
xchg
and
xchg
enter
and
fdivrl
mov
sub
inc
jl
loopne
int3
add
enter
add
or
dec
or
ficomps
mov
push
sub
sbb
cmpsb
xor
inc
inc
push
dec
sub
add
mov
dec
lcall
pop
jb
int3
and
inc
int3
dec
push
sbb
jne
int
inc
xor
enter
insb
push
int3
loope
gs
test
xchg
sbb
ss
and
push
xor
adc
sbb
dec
inc
cmp
icebp
imul
movsb
xlat
sbb
add
fcos
mov
movsb
add
add
add
xor
add
orb
add
mov
cltd
pop
mov
sbbb
test
add
mov
sar
or
cli
clc
xchg
inc
lock
and
inc
shlb
inc
cld
adc
aas
xor
popa
or
add
push
xor
sbbb
adc
test
test
add
jo
add
andl
mov
clc
inc
cmpsl
or
out
adc
fwait
adc
out
or
mov
cmp
sub
add
loopne
jo
pop
cmp
cmp
cmp
xchg
sbb
xor
inc
and
push
push
bound
lock
dec
mov
lds
std
sub
cmp
lods
add
dec
aaa
jl
inc
jne
xchg
or
jle
jg
inc
orb
sbb
pusha
pop
mov
pop
dec
add
adc
fs
xor
std
sbb
mov
adc
and
cli
add
or
xchg
mov
inc
aas
sub
ss
cmp
adc
loopne
orl
inc
push
xor
add
dec
add
std
and
clc
and
jg
loopne
rclb
addr16
add
pop
and
pusha
or
clc
cmpsb
dec
test
pushf
adc
push
sub
and
loopne
enter
lods
add
stos
add
add
sub
xor
sbb
xor
inc
lea
and
in
add
adc
test
nop
ret
cmpl
sbb
inc
xor
push
add
adcl
adc
cld
add
cmp
push
fmull
and
lock
jle
xchg
push
sbb
push
or
push
sbb
inc
add
add
out
inc
orl
xor
push
movsb
sub
addr16
incl
mov
mov
roll
in
add
clc
push
adc
or
sbb
jne
sbbb
orb
orb
or
addb
adc
sbb
push
repnz
sbb
adc
mov
adc
or
inc
add
and
lds
jge
ret
and
mov
cmp
adc
repz
adc
dec
sbb
ss
xor
push
adc
jg
push
push
mov
and
push
mov
or
lods
sub
daa
pop
sub
movsb
daa
subl
push
mov
push
mov
mov
and
push
mov
adc
dec
mov
dec
adc
enter
into
mov
sub
adc
and
loope
sub
cmp
jg
push
mov
adc
inc
adc
mov
push
mov
in
cmp
inc
pop
inc
and
cmpl
mov
xor
movsb
inc
jp,pn
adc
or
mov
sub
sub
push
aas
sub
xor
mov
cmp
mov
jg
inc
aas
insl
jns
stos
sub
inc
repz
adcb
mov
sub
cmp
xchg
xchg
test
data16
push
cli
subl
and
push
mov
xchg
insb
lcall
inc
sub
fwait
and
xchg
movsl
xchg
aaa
push
mov
sub
cli
cmp
mov
push
jecxz
clc
adc
shll
mov
push
and
adc
xor
xor
or
push
rorb
adc
out
data16
dec
push
pop
sub
fsubrs
mov
setno
sub
daa
inc
aas
dec
sub
bound
out
in
xchg
js
decb
pop
sub
jmp
aas
xchg
xchg
push
adc
repz
adc
stos
push
mov
enter
aas
repz
loop
inc
arpl
call
inc
lret
imul
nop
clc
in
lods
sub
dec
sbb
inc
jno
repz
cltd
sub
ficoml
push
and
sub
ja
adc
xor
cltd
sub
sbb
adc
xchg
in
sub
inc
adc
push
mov
add
mov
dec
adc
out
adc
ja
pushf
sub
sub
fs
inc
dec
add
mov
outsl
mov
idivl
aad
adc
inc
sub
xor
mov
sbb
arpl
hlt
sbb
and
nop
adc
movsb
cmp
inc
insl
les
hlt
xor
stos
and
dec
or
rep
push
sub
addl
stos
inc
push
cmp
lahf
into
mov
and
adc
sub
inc
mov
clc
adc
or
enter
sub
sub
aas
xchg
addb
pop
in
dec
mov
dec
sahf
outsb
push
aas
xor
adc
stos
jae
data16
xorb
inc
lcall
jecxz
sbb
xchg
adc
or
sub
enter
adc
cltd
sub
dec
les
xchg
sbb
mov
sub
xchg
or
cmc
inc
adc
ja
jg
sub
or
sub
daa
or
in
push
stos
xchg
adc
dec
stos
adc
dec
cmpsb
adc
dec
adc
dec
sbb
daa
adc
in
dec
jle
adc
mov
aad
stos
daa
dec
jle
lock
daa
and
dec
clc
and
mov
sbb
mov
cli
dec
xor
cltd
adc
dec
inc
mov
cltd
scas
add
dec
or
in
adc
mov
jge
pop
mov
test
push
sarb
rcll
out
xchg
mov
rcl
mov
sub
loop
push
and
adc
cmp
cmp
dec
mov
inc
xchg
jb
sub
sub
pop
sbb
jo
sbb
lods
and
daa
mov
insl
sub
cmpsb
sbb
sub
aas
sbb
sub
sbbl
mov
fcompl
pop
inc
in
dec
mov
adc
mov
sbb
pop
movsl
jns
xor
add
xor
nop
mov
sub
mov
cmc
clc
dec
adc
in
sbb
decl
stos
test
mov
stc
decb
mov
repnz
test
loopne
xchg
lds
add
lcall
sbb
xor
adcb
add
jb
inc
xor
jnp
cld
jecxz
std
loope
lds
rcrl
inc
mov
sub
cmpsb
nop
fsts
fiadds
fiaddl
into
add
nop
add
mov
sahf
aad
inc
shll
push
leave
cwtl
clc
les
lods
jle
cli
add
push
insl
add
cmp
add
sub
push
nop
rcrb
fstl
xchg
nop
jbe
mov
jp
out
loop
jmp
iret
xor
mov
mov
mov
push
notb
sub
sub
insb
pop
clc
call
add
faddp
std
fstpt
sub
mov
jo
mov
jge
icebp
out
and
xchg
mov
add
mov
nop
xchg
xor
insl
push
pop
lock
and
xor
mov
push
in
xchg
dec
es
sbb
aam
rcll
jb
push
jmp
call
xor
add
or
xor
out
inc
es
pop
cmc
dec
sarb
xor
inc
nop
stc
repz
and
xchg
and
nop
add
jg
push
xor
lea
insb
clc
icebp
pop
and
xor
stos
xchg
std
div
in
ljmp
rcll
jno
orb
sbb
lods
lcall
inc
out
pop
sub
stos
push
sub
sbb
inc
cli
imull
xchg
sub
push
xchg
nop
xchg
jge
sbb
sub
lea
or
mov
lahf
xor
mov
cmc
adc
repnz
sbb
xchg
outsl
test
xchg
loop
out
das
add
into
iret
xchg
test
xchg
js
insl
adc
inc
add
clc
xchg
adc
xorl
dec
popa
xor
mov
repz
and
leave
sbb
xchg
jae
in
pop
push
xchg
xchg
sahf
push
imul
mov
and
jo
mov
cmp
push
mov
mov
add
dec
xor
insl
nop
adc
dec
mov
adcl
daa
xor
nop
push
nop
call
decl
inc
mov
nop
inc
mov
push
nop
leave
push
xor
jmp
imul
add
xor
dec
popa
insl
nop
es
and
cmp
stos
inc
add
sub
roll
mov
mov
xor
insb
add
add
adc
xchg
xor
nop
and
je
nop
leave
pop
xor
add
test
out
xchg
xor
cld
fildl
andl
ja
bound
pop
add
bound
mov
dec
addl
xor
sub
dec
sub
in
add
ficomps
or
push
add
roll
add
sbb
fstl
faddl
inc
fisubl
xor
popa
push
mul
clc
pushf
fsubr
jle
sbb
sub
adc
out
cmc
out
es
or
test
jecxz
pop
nop
xor
jmp
mull
test
ficoml
ljmp
jmp
mov
cmc
lock
fmul
add
or
nop
add
faddl
inc
lret
mov
mov
lock
mov
add
shll
nop
mov
push
leave
ljmp
in
and
add
and
or
or
out
mov
fisttpl
push
xchg
add
jmp
mov
repnz
jmp
mov
loope
int
jmp
nop
jecxz
and
leave
mov
and
lcall
sbb
fsts
nop
mov
xchg
mov
cs
adc
mov
gs
repnz
add
icebp
pop
shr
nop
outsl
cmp
hlt
dec
and
dec
popa
inc
int
add
and
ficoms
nop
cmpsl
and
out
mov
ret
imul
xor
and
or
push
nop
jo
fisttpl
cmc
imul
cmp
clc
repz
repnz
lock
mov
sbb
stos
or
xchg
iret
add
jmp
out
loope
loopne
fidivs
mov
xchg
adc
rorl
dec
arpl
ficoml
and
repz
shll
and
fstl
aad
movsl
mov
add
push
jb
rclb
fwait
jo
jmp
cmp
mov
pop
aad
push
add
repz
into
icebp
pusha
cld
sti
stc
flds
add
jecxz
clc
pushf
arpl
add
leave
jl
add
test
push
xchg
nop
inc
test
scas
nop
sbb
jb
movsb
pop
xchg
or
push
ja
movsb
mov
jmp
lret
aad
iret
or
xchg
enter
stc
mulb
inc
xchg
xchg
push
dec
mov
xor
stc
xchg
inc
nop
fldcw
cmpsb
addb
nop
mov
scas
dec
mov
dec
nop
xchg
xchg
add
mov
add
ja
xor
adc
in
xchg
inc
add
push
mov
lret
js
nop
int3
in
loope
fisttps
xchg
xor
and
lret
mov
and
aam
and
loop
js
nop
out
cmp
ret
js
nop
fwait
add
cmp
nop
nop
in
pop
sub
add
js
nop
inc
rol
mov
mov
sbb
mov
xchg
cmp
scas
stos
dec
add
sub
xchg
loopne
std
sbbb
push
inc
cli
inc
pop
xchg
mov
ss
cmp
push
jmp
call
mov
sbb
xor
pop
fnsave
popa
das
divb
shl
ret
pop
mov
aaa
cli
sbb
scas
lods
mov
jp
push
lods
shll
std
pop
lods
inc
and
dec
into
and
adcb
clc
and
pushl
rolb
and
out
push
xor
fwait
and
adc
js
mov
adc
mov
testl
addb
scas
inc
inc
pop
out
xchg
sub
add
in
test
dec
adc
or
shlb
pop
rolb
push
mov
dec
scas
rcrb
mov
push
loopne
into
or
outsb
or
pushf
gs
sbb
adc
and
add
dec
loope
insb
pop
add
andb
push
insb
fs
loopne
int
inc
jno
mov
or
xor
xorb
dec
sub
inc
lret
and
xor
arpl
xor
mov
jae
sub
outsl
sbb
fwait
or
rclb
outsl
insb
and
push
jno
jne
cmp
andl
dec
out
pop
cs
lods
dec
or
stos
sub
push
and
imul
fwait
imul
inc
inc
insb
push
adc
inc
dec
or
jae
sub
je
adc
jecxz
xor
gs
or
jne
je
mov
jns
dec
pushf
adc
dec
mov
cmpsb
or
imul
xchg
push
sub
dec
mov
inc
ss
pop
ss
lea
adc
mov
and
jo
pop
adc
in
fisubrl
jle
or
shlb
dec
gs
inc
and
dec
jp
sbb
imul
cmpsb
inc
leave
sbb
daa
movb
push
imul
mov
or
fs
mov
es
cli
sbb
scas
cmp
jne
imul
inc
data16
int
add
je
gs
jne
push
lock
fisubrs
movsb
imul
fs
insl
gs
inc
mov
stos
sbb
xor
and
xor
or
jo
dec
inc
fsubr
inc
fcompl
popa
xchg
into
in
dec
inc
imul
adc
or
sub
inc
xor
adc
or
xchg
push
in
hlt
or
jbe
aas
add
adc
sub
insl
sbb
sub
pop
push
out
dec
outsb
aam
in
dec
data16
cli
outsb
push
xor
adc
pusha
int
bound
dec
fs
cmp
and
cmp
and
dec
xchg
add
push
orb
push
outsl
sahf
es
dec
sub
sbb
popa
adc
add
dec
jo
xchg
add
xor
pop
cmpsb
ds
xor
insb
push
ss
adc
sbb
in
inc
pop
cmpsb
stos
in
lcall
dec
pop
inc
xchg
add
lods
dec
cmpsb
lret
dec
xchg
push
xor
call
sarb
xor
rolb
mov
xchg
insb
leave
sub
mov
jp
mov
les
popf
mov
cs
sub
mov
pop
xchg
sbb
and
sub
insl
lcall
xchg
push
sub
das
cwtl
repnz
data16
mov
outsl
fcoms
sbb
pop
bound
popa
mov
xchg
xchg
call
clc
inc
cs
jl
insl
test
es
xchg
out
adc
mov
inc
xchg
inc
pushf
inc
push
pop
sub
rcll
data16
or
push
pushf
bound
into
sbb
sbb
les
sbb
shrl
xor
dec
sub
pop
xor
sbb
test
mov
push
push
push
xor
sub
and
push
lret
cmpsb
xchg
mov
popa
mov
into
add
hlt
dec
push
adc
lock
xchg
outsl
xor
add
es
or
mov
outsl
mov
rcrl
inc
push
inc
cs
pop
mov
push
jo
add
adc
push
arpl
add
shlb
fs
icebp
add
jo
or
push
xor
sbb
jmp
dec
sub
test
sub
jbe
mov
cmpsb
mov
jle
fwait
xchg
mov
xchg
mov
insl
sbb
and
je
enter
sub
addr16
push
nop
fbld
mov
daa
or
jno
daa
mov
std
sbb
add
xor
add
je
inc
mov
insb
mov
cmp
orb
lret
bound
rcrb
jns
stos
and
xchg
cltd
jne
sub
lret
imul
dec
cmpsb
sbb
jne
mov
jb
cmp
inc
dec
dec
and
int3
jbe
jo
lret
fs
bound
fs
stos
es
imul
cmp
push
xor
inc
jb
mov
sbb
jo
jo
push
dec
sbb
fcomps
xchg
xchg
lret
cmp
sub
mov
sahf
pop
in
sub
jno
arpl
call
popa
je
mov
xchg
cs
sbb
ror
sarb
add
push
dec
adc
repnz
addr16
xchg
test
adc
dec
lret
jmp
loop
xchg
data16
lods
inc
in
test
test
gs
inc
dec
sbb
lret
es
dec
or
dec
aam
int3
pop
xchg
push
je
push
sbb
pusha
into
cwtl
xchg
adc
push
stos
and
roll
pop
pop
inc
pusha
dec
je
cmp
es
fidivrl
adc
push
mov
hlt
mov
push
leave
and
push
or
push
xchg
ja
dec
js
je
sbb
push
push
push
sbb
cmp
outsl
push
movsb
dec
inc
arpl
enter
lods
cli
movsb
or
sbb
dec
les
jge
cmp
mov
mov
imul
in
cli
lods
aad
jmp
sbb
insb
cmpsb
sahf
pop
inc
or
sub
xor
jmp
sub
xchg
xor
cltd
js
pop
push
xor
imul
dec
push
hlt
std
push
gs
mov
subb
xchg
je
inc
sub
adc
je,pn
mov
cld
jo
dec
push
jp
sahf
mov
sbb
and
fsubr
adc
and
or
sub
cmp
loopne
loopne
xchg
out
jb
adc
push
lret
fs
push
fisubs
jb
pop
ja
enter
xchg
outsl
leave
adc
xchg
ret
push
inc
mov
and
jbe
dec
gs
hlt
fs
movsb
scas
sbb
pop
jne
leave
insl
ss
in
xchg
cmp
sub
add
int
sub
mov
lret
jb
push
jmp
fidivrs
pusha
inc
aaa
pop
inc
add
mov
imul
fidivrs
xorb
push
xchg
jmp
leave
dec
adc
pop
ljmp
movsb
mov
sbb
test
dec
mov
in
adc
pop
pop
sub
or
mov
xor
push
push
or
shlb
mov
ret
mov
mov
jp
fimull
in
dec
xlat
mov
push
inc
jp
loop
push
cmpsb
enter
sub
sbb
cli
push
movsb
in
pop
cmpsb
insl
jo
addr16
push
aam
ds
sub
mov
inc
jp
and
push
xlat
imul
cmp
sub
movsl
outsb
xchg
mov
xor
push
jo
adc
dec
cmp
sbb
cmp
jb
adc
lret
xchg
xor
or
adc
mov
push
cs
sub
sbb
rorb
jno
push
mov
jae
rcrb
dec
lret
mov
cs
mov
dec
scas
hlt
mov
dec
inc
xchg
imul
lock
js
insb
and
xchg
and
popa
fidivrs
dec
sub
mov
mov
sbb
mov
push
cmp
rolb
stos
sbb
inc
sbb
adc
pop
das
inc
xchg
mov
into
daa
or
and
pop
push
sub
pop
xchg
test
mov
mov
popa
outsb
mov
jb
inc
out
xor
into
je
cmp
je
sub
xchg
test
shrb
imul
mov
pop
enter
adc
push
xchg
mov
pop
and
cld
cli
je
in
je
in
fs
cmp
xor
imull
mov
faddl
gs
inc
ljmp
and
nop
dec
add
fs
aam
imul
insb
mov
nop
xchg
jb
and
mov
movsb
push
and
jae
adc
sub
mov
or
outsb
lret
inc
mov
fsubrs
and
and
daa
ja
test
incb
mov
gs
mov
mov
leave
sbb
push
xchg
imul
dec
pop
data16
cs
adc
xor
push
cmp
fs
xor
jb
pop
cltd
inc
jae
adc
cmpsb
dec
push
outsb
adc
or
jb
adc
lcall
inc
adc
cmp
dec
cmpsb
pop
pop
adc
fcoms
inc
mov
lds
adc
jl
lret
xchg
cmp
push
dec
outsb
xchg
adc
mov
cmp
add
xor
les
mov
mov
jmp
mov
mov
lcall
dec
or
xchg
inc
loop
pop
int3
dec
or
int3
add
scas
nop
push
outsl
adc
or
je
sub
pop
add
testb
xchg
les
cld
mov
repz
sbb
inc
outsl
gs
int3
jbe
fs
gs
pop
insb
jbe
xchg
sbb
leave
adc
pushf
shrb
push
leave
loopne
js
or
lcall
aas
sub
xor
jae
dec
xchg
jbe
pushf
popf
or
mov
test
dec
cs
pop
push
fcom
xchg
cli
pop
push
lcall
fcmove
imul
or
and
in
mov
mov
xor
add
mov
loop
jl
js
adc
es
adc
add
push
cmp
and
push
cmp
fprem
pushf
sub
sub
pop
das
mov
xchg
jae
cld
pop
pushf
loop
xchg
test
dec
arpl
sbb
sub
push
xor
dec
adcb
cli
adc
jb
sub
jb
sub
dec
xor
adc
xchg
fadds
mov
pop
inc
sub
push
into
cmp
lret
in
push
mov
and
adc
mov
push
push
xorb
mov
into
sub
in
fs
adc
push
sub
lahf
sub
stc
cld
jmp
jbe
cmpsb
outsb
dec
xchg
scas
cmp
es
push
pushf
pop
adc
add
aam
sahf
jl
xchg
mov
aas
sub
jp
gs
jnp
push
push
sbb
clc
sub
sbb
push
cmp
dec
sub
stos
sub
leave
sbb
outsl
dec
rclb
pop
push
adc
push
icebp
stos
adc
mov
mov
sub
and
adc
jle
cmpsb
insb
push
scas
dec
sub
fdivs
stos
xchg
dec
jno
roll
mov
jno
repz
xor
cmp
mov
out
movsb
mov
inc
mov
and
cmp
xor
ret
mov
sbb
sub
and
push
sub
mov
mov
adcb
enter
and
mov
outsb
shrb
out
fwait
ljmp
stos
and
imul
fs
out
das
fs
xchg
or
loop
das
inc
lods
dec
test
push
repnz
lods
imul
out
add
scas
gs
sub
jns
push
xchg
mov
popa
ss
fs
mov
les
movsw
mov
jns
cld
enter
mov
or
dec
sub
push
stc
jae
pushf
inc
jb
adc
sub
loopne
dec
dec
adc
arpl
mov
stos
es
push
xchg
outsl
mov
dec
mov
inc
inc
add
cmp
xorb
repz
add
fwait
cmp
xor
jno
dec
pop
mov
stos
sbb
push
imul
mov
jae
xor
adc
mov
or
cmp
ja
sub
jns
popa
adc
push
cmc
inc
into
cmpb
imul
add
push
push
dec
inc
outsl
insb
outsb
jb
add
jno
imul
push
clc
push
fbstp
imul
ret
sbb
jb
popa
sub
adc
push
jns
fidivrs
mov
nop
cmpsl
aad
push
or
push
xchg
ds
nop
push
sbb
push
mov
and
jbe
pop
es
xor
loop
addr16
mov
dec
push
push
gs
loop
int
mov
adc
rorl
mov
xor
push
dec
dec
mov
mov
push
popa
cmp
fcmovb
and
push
insl
mov
rsqrtps
outsl
adc
sub
mov
fnstsw
lcall
sbb
fwait
xchg
mov
push
cltd
hlt
addr16
and
in
push
sbb
add
imul
lret
das
adc
adc
jo
movb
jp
jg
popa
arpl
inc
insb
and
inc
int3
adc
mov
push
mov
bound
sbbl
dec
mov
push
adc
xor
movsl
sub
inc
js
dec
arpl
dec
xor
imul
les
cmpsb
jne
push
mov
outsl
xchg
aad
mov
dec
inc
insl
and
mov
adc
sbb
ret
js
mov
add
sub
addr16
push
push
fsubrs
inc
fs
xchg
mulb
mov
insb
rorl
sbb
rorl
leave
inc
dec
add
jo
mov
adc
push
lcall
push
sbb
sbb
mov
lahf
sub
pusha
mov
sbb
sbb
outsl
adc
js
frstor
xor
and
outsl
dec
ja
dec
lret
enter
imul
jg
sbb
sbb
xchg
push
mov
inc
mov
lea
pop
fimuls
dec
lea
sarl
in
sub
xlat
push
mov
lcall
int
push
jne
jge
lcall
push
pop
cmp
mov
xor
or
lods
xor
mov
push
mov
cmp
inc
xlat
sbb
mov
xchg
fwait
xchg
push
addl
roll
adc
inc
xor
call
adc
mov
sbb
pop
push
push
leave
jo
inc
sbb
push
insl
ficoml
pop
lret
sub
loopew
imul
out
mov
inc
loop
ret
dec
sub
push
xchg
loopne
loope
push
mull
and
out
popa
dec
push
dec
inc
iret
and
sub
or
mov
je
fs
addr16
dec
adc
icebp
jns
jne
jo
and
dec
or
inc
test
mov
insb
dec
adc
rorl
inc
hlt
xchg
ss
pop
pop
les
movsb
sbb
sub
mov
addb
push
mov
sub
bound
dec
push
je
mov
ja
or
inc
lea
arpl
jne
mov
sub
push
xchg
idivb
je
inc
mov
jmp
mov
xchg
adc
arpl
or
sub
jns
sbb
imul
divb
js
mov
dec
and
sub
test
push
jns
out
mov
std
xor
cs
jl
and
xor
movsb
arpl
insb
cmp
xchg
std
inc
pop
cmp
xchg
ss
xchg
pushf
lret
push
popa
sbb
mov
xchg
push
lcall
sub
repz
ljmp
mov
insb
sbb
cmp
inc
bound
pop
or
dec
test
add
add
daa
add
jge
xor
mov
das
and
pop
adc
out
loopne
pop
push
xchg
push
mov
adc
mov
sbb
aad
lds
mov
or
and
jecxz
and
xchg
and
cmpsb
ds
bound
clc
jl
imull
pop
jge
outsb
orb
jne
push
inc
or
enter
inc
sub
loopne
mov
sbb
aad
mov
jnp
mov
xchg
push
and
cmp
lret
cmp
sbb
dec
push
das
mov
testb
push
xor
mov
enter
rolb
inc
mov
xchg
push
lds
pusha
sbb
inc
push
test
sub
cld
mov
mov
push
mov
or
sbb
imul
hlt
cmp
dec
sub
mov
adc
pop
push
add
arpl
call
sub
cmp
xor
mov
mov
push
orl
pop
inc
sbb
pop
sub
mov
int3
xchg
shlb
les
mov
push
mov
or
stos
ud0
mov
adc
inc
cmp
xor
sbb
cmp
adc
or
mov
or
call
in
jb
cmp
je
push
mov
adc
push
or
and
cwtl
push
sbb
mov
test
push
adcl
mov
call
loopne
and
js
syscall
movzwl
mov
jg
jne
mov
je
or
and
fbld
addr16
loope
loopne
mov
cmpl
jne
push
push
call
sbb
add
lret
inc
mov
in
mov
mov
add
lea
lock
cmp
cmp
jne
stc
jecxz
adc
push
cmp
arpl
mov
xchg
call
cmpsb
dec
pop
mov
mov
push
push
add
or
mov
adc
inc
push
add
aas
mov
push
push
adc
mov
push
loope
mov
cld
adc
ljmp
add
push
pop
ja
cmp
sbb
or
fimuls
ret
adcb
das
jbe
mov
push
or
inc
add
jmp
add
cmp
call
cmp
jne
jle
adc
and
pop
pop
adc
mov
xor
cltd
cmp
jb
ror
add
insb
call
int
and
sbb
mov
or
into
inc
cmp
dec
jmp
aas
pop
popa
jp
add
mov
loop
cli
arpl
ds
repz
mov
jnp
f2xm1
fnstenv
or
shlb
icebp
jmp
and
cmp
int3
sbbl
xchg
mov
dec
lock
push
jo
push
jge
mov
ds
pop
fwait
out
popa
adc
jne
push
xchg
shlb
mov
cmp
sarl
fs
dec
adcb
mov
sbb
jg
das
stc
push
adcb
dec
mov
test
mov
add
jmp
or
xchg
push
repnz
scas
jns
inc
inc
and
test
ja
fdivl
dec
or
in
movl
nop
data16
push
sti
and
xor
lds
orb
dec
repz
xchg
out
cmp
inc
xchg
movb
jnp
xor
push
xchg
jbe
mov
push
jae
xchg
lea
filds
cmpsl
cmc
cwtl
pusha
add
adc
adc
pcmpeqb
adc
sbb
adc
sub
hlt
mov
ljmp
add
bnd
pop
aas
test
jns
xchg
or
inc
jge
xor
pop
cmp
or
dec
sti
xchg
pop
jbe
sbb
mov
add
push
adc
add
fsts
and
rorl
xor
adc
bound
sbb
lcall
mov
andb
xchg
xor
adc
add
push
aas
adc
or
sub
inc
movsl
test
cmp
idivl
ja
mov
mov
inc
loop
adc
dec
shlb
xchg
sbb
aaa
adcl
cmc
pop
adc
xor
add
and
enter
js,pn
ja
je
cli
inc
dec
in
or
ds
xor
leave
enter
sub
das
pop
and
or
cmpl
movsl
and
push
call
jns
aaa
cmpsl
adc
test
cmp
je
dec
push
adc
cmc
add
jle
fisubl
inc
lods
and
call
mov
xorb
aaa
or
push
leave
xchg
push
mov
insl
movsb
lods
pop
jmp
movsb
mov
cmp
jne
jl
jmp
imul
jne
mov
sbb
jp
and
cmp
inc
xor
push
or
adc
pop
dec
dec
dec
xorb
lds
jecxz
ss
push
or
cmp
jae
std
rcl
sub
fimuls
mov
clc
pop
shll
mov
ret
mov
cmp
movsl
adc
imulb
adc
and
mov
jmp
jnp
push
mov
pushf
cmp
add
int3
mov
test
sub
ss
push
push
jle
or
and
push
push
cmp
dec
movaps
mov
cmp
pop
mov
inc
push
xor
pusha
rolb
loopne
jne
jbe
shlb
xchg
movb
mov
add
xchg
xchg
sub
xchg
enter
cs
pop
les
push
dec
iret
xchg
or
or
int
or
hlt
daa
push
push
call
mov
cmp
adc
cmp
aad
cmp
mov
dec
add
fs
pop
push
xor
pop
hlt
jmp
ficompl
or
pop
loopne
push
cmp
or
adc
dec
or
jg
rorb
add
add
hlt
jmp
and
nop
fiaddl
mov
or
xor
les
or
mov
sub
jb
add
or
movlhps
adc
call
lcall
scas
les
or
sub
jl
movl
mov
call
mov
or
inc
or
or
incl
rolb
loop
xchg
jg
adc
adc
test
cmp
or
jne
sub
add
mov
jle
and
or
add
ret
bound
sbb
xor
sub
addl
add
fiaddl
enter
test
and
testb
aam
inc
inc
cmpsl
jb
or
cmp
push
les
inc
call
add
pop
push
sub
xor
push
or
pop
cmc
clc
std
fadds
adc
xor
inc
or
push
andl
rol
pop
mov
movsl
or
movl
jle
mov
nop
cmpsl
inc
andb
dec
gs
aaa
sub
test
clc
into
jl
jge
icebp
hlt
jge
mov
pop
add
je
jnp
jmp
push
adc
mov
cmc
insb
mov
test
fildl
aad
and
imul
std
add
or
call
xchg
jl
xor
pop
xchg
xlat
mov
or
dec
xchg
mov
push
add
orl
popa
or
data16
orb
add
insb
fs
es
hlt
aam
adc
dec
pop
lahf
or
jmp
cmpsb
sti
inc
adc
push
stos
pop
lcall
jl
sub
test
pop
mov
lret
shrb
mov
mov
ljmp
fwait
pop
and
sub
xor
adc
add
mov
dec
movl
nop
push
pop
lea
movsl
pop
loope
call
mov
mov
push
jno
add
or
cmp
add
call
mov
inc
add
add
or
movsb
je
orb
pop
call
pop
rclb
jge
adc
outsl
push
cli
sbb
adc
mov
addr16
icebp
add
repz
dec
dec
dec
pop
mov
dec
adc
adc
leave
and
fcomps
lea
lods
xor
dec
mov
add
add
push
inc
je
int
and
xor
popa
shll
push
push
mov
adc
stc
or
mov
mov
cltd
or
xlat
lret
mov
pop
pop
inc
sub
je
fbld
es
aad
jne
sub
lahf
lcall
push
cmp
lea
sub
in
jge
and
inc
xchg
mov
add
icebp
xchg
addr16
out
popf
xor
adc
dec
cmc
dec
push
xchg
adc
mov
mov
add
int3
gs
std
push
repnz
in
cmp
sbb
push
pop
dec
xchg
pop
fldlg2
push
push
int
sub
xorb
xor
dec
je
push
sti
clc
inc
jle
and
xchg
hlt
leave
or
mov
add
pop
xchg
lretw
push
add
xchg
xchg
and
test
je
inc
aad
add
xchg
scas
inc
and
sub
sub
or
jl
pop
hlt
jmp
xchg
lret
mov
sbb
mov
rorb
or
pop
notl
mov
sbb
inc
xchg
xor
cmp
dec
sub
cmpsb
pop
push
or
xor
sbb
mov
xor
inc
xchg
mov
cmpsl
orb
es
pop
mov
nop
xchg
push
lea
loopne
xchg
push
pop
sbb
and
cmc
mov
dec
xchg
inc
sbbb
adc
push
test
stos
cmovae
jmp
or
les
mov
pusha
push
add
mov
popa
or
stos
mul
call
or
pusha
dec
sub
cmp
or
leave
add
xchg
scas
movsl
sbb
loop
clc
cmp
sub
jno
les
xorl
jo
movsl
enter
xor
add
popa
and
add
cld
mov
inc
aaa
orl
ljmp
add
push
lds
or
and
push
mov
shll
mov
addb
xchg
mov
in
out
decb
inc
mov
cmc
jae
adc
icebp
or
add
add
cmp
ret
mov
mov
xlat
sub
arpl
cld
mov
jne
cmp
sub
add
js
lea
dec
add
inc
pop
and
mov
lahf
test
push
inc
fiadds
rcrb
test
add
dec
pop
movups
mov
mov
push
adc
inc
sti
mov
jl
lret
push
sbb
push
sub
adc
xor
imul
or
cmp
aad
xchg
fbld
ret
jmp
das
push
cmp
lds
push
scas
ds
loopne
in
sub
test
shll
dec
rorb
out
cmp
xor
loop
andps
and
fsub
jge
dec
test
or
xchg
jmp
imul
mov
inc
adc
or
mov
jns
mov
push
inc
xchg
add
ss
pop
xorl
sbb
adc
outsb
test
popa
testb
cmp
and
sub
inc
lret
xchg
call
ret
add
mov
jo
test
test
jle
jmp
sub
push
mov
sub
loopne
call
xor
mov
out
inc
je
xor
sbb
test
je
mov
mov
push
xor
pop
or
ret
push
jmp
adc
xor
sub
or
shl
xor
out
nop
in
adc
imul
jecxz
cli
cmp
sub
or
call
cwtl
mov
sub
cmp
ja
jne
mov
sbb
pop
call
outsl
and
jg
adc
or
push
cmp
pop
xor
clc
xor
dec
cwtl
dec
adc
ljmp
imul
leave
cmp
add
leave
xlat
inc
out
divl
adc
insl
js
repz
lock
add
xor
call
sbb
std
cmpsb
sbb
inc
cld
les
retw
jecxz
mov
bound
add
pushl
cli
fsubs
sbb
sub
push
adc
je
lret
loopne
es
and
sti
test
cli
mov
mov
fcompl
ja
jae
push
sbb
divb
xlat
xor
or
mov
sub
and
or
jne
push
int3
lock
or
and
je
push
push
sub
cmp
or
jnp
add
into
shr
and
es
aas
add
cmp
jne
dec
xor
pop
mov
cmp
ret
pop
loop
push
pop
dec
push
lcall
mov
cmp
jne
sahf
push
adc
add
jle
and
push
jle
sbb
jns
fwait
cmp
jp
aas
std
add
jmp
and
test
roll
fstpt
and
inc
in
add
je
mov
push
ja
bound
sub
pop
or
js
pop
addps
push
push
xor
mov
fs
and
xor
and
add
or
and
ja
and
lea
add
xchg
fmuls
push
or
dec
mov
aam
cmp
mov
jle
js
pop
sub
clc
inc
outsb
lds
pushf
mov
sub
je
test
add
xchg
and
jbe
and
adc
add
or
add
mov
and
rcrb
nop
in
xchg
xor
and
cmpsb
cltd
and
sub
orl
add
lcall
ret
pop
jmp
xchg
fldt
faddp
call
push
pcmpeqb
sbb
xor
shll
and
fiaddl
jmp
mov
inc
inc
stc
push
cld
or
ret
add
jmp
fstp
shrl
mov
out
enter
adc
enter
add
enter
cli
or
pushf
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
or
mov
inc
mov
aam
loopne
int
sub
cmp
hlt
and
mov
add
mov
inc
xor
add
leave
sbb
cs
inc
jbe
imul
shlb
call
mov
add
lods
inc
addb
xlat
fadds
lods
outsb
xor
js
xchg
mov
or
push
push
mov
ret
hlt
mov
popa
push
pop
iret
push
inc
enter
mov
hlt
cmp
mov
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
outsl
cld
gs
sahf
mov
sub
imul
dec
aaa
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
out
add
mov
imul
cmp
call
jecxz
xchg
push
mov
jmp
add
jmp
stos
push
inc
mov
add
sbb
sarb
int3
repnz
mov
daa
movsb
lahf
in
call
scas
adc
call
jmp
fs
add
repz
loope
jp
jp
cmp
addb
fdivrs
mov
xchg
push
cmpsb
scas
mov
pop
pop
or
addl
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
add
push
movsl
mov
aaa
popa
jl
jae
and
addr16
repz
mov
subb
add
mov
push
pusha
les
aad
bound
xor
outsl
cld
mov
int3
je
nop
popl
cmp
jne
loop
cmpsl
or
add
enter
ret
xchg
aas
or
jl
xor
jbe
sbb
int
push
push
xchg
mov
rcrb
xorb
xor
push
push
jae
push
mov
movl
mov
or
jo
mov
mov
sub
addr16
cmp
bound
or
popa
out
mov
sar
mov
clc
mov
jl
aas
or
test
adc
or
push
dec
inc
inc
push
inc
push
inc
pop
or
jb
pop
sub
push
rolb
push
movsb
jbe
call
sub
sub
leave
or
fdivs
add
leave
mov
inc
rep
sbb
jl
aad
mov
jne
repz
jl
sbb
mov
xchg
pushf
hlt
inc
adc
shlb
xchg
and
adc
jo
pop
dec
mov
add
call
lods
lods
cmp
dec
fdivs
rolb
shr
flds
lods
pop
xchg
sahf
xchg
sub
mov
sbbb
push
jg
pop
sbb
in
cmp
xchg
ret
adc
adc
sbb
loopne
adc
xor
and
jne
cmp
jecxz
lods
scas
movb
jbe
rorb
call
pusha
fsubs
jmp
shrb
mov
pop
mov
xchg
or
push
xchg
jmp
les
or
add
scas
loope
pop
inc
push
testb
ret
pop
add
sub
clc
je
jnp
fucomi
pop
cmpl
inc
mov
cwtl
repz
xchg
in
mov
cmp
and
mov
adc
xor
call
inc
loope
sbb
popa
lock
push
dec
push
ss
jl
pop
push
hlt
xor
fadds
adc
mov
nop
imul
and
or
pop
or
pop
xor
pop
xchg
and
and
or
je
xorb
pop
jno
dec
adcl
call
sub
sbb
lret
sahf
jns
adc
call
cmpb
jbe
push
xor
push
call
dec
sbb
call
std
mov
cmp
adc
pop
push
loopne
mov
sbb
pop
or
jae
jmp
push
test
pop
push
push
adc
repz
cmp
insl
jecxz
test
jne
pop
movsbl
clc
clc
xchg
add
add
xor
sbb
imul
loope
pop
adc
adc
push
and
loop
push
pop
out
sbb
adc
pop
enter
inc
cmp
xor
jne
cmp
ret
inc
mov
cwtl
dec
adc
or
call
adc
je
call
dec
mov
insl
mov
into
cli
out
push
or
xchg
add
sub
stc
push
add
je
mov
sub
or
xor
stos
push
bound
adc
or
out
pop
cmp
orl
adc
cvtpi2ps
xor
mov
sub
repnz
std
inc
fstpl
sub
push
pop
sub
sub
mov
outsb
adc
push
adc
add
inc
int
cmpsb
push
dec
es
xlat
pop
jmp
xor
mov
adc
add
push
ljmp
and
je
inc
adc
push
add
or
imul
sub
or
pop
add
imul
push
aas
mov
dec
clc
inc
push
add
cmp
dec
cltd
jne
fs
push
jne
cmp
call
je
jg
add
jne
add
dec
in
rclb
adc
mov
fldl2t
sbb
xchg
aam
in
xchg
and
inc
mov
insl
and
and
mov
xchg
push
dec
pop
mov
sbb
fld1
ret
and
mov
push
adcb
inc
popa
jl
lahf
bound
call
shll
gs
cld
or
fadd
sbb
ja
fistpl
push
push
push
push
push
mov
pop
xchg
ret
cmp
inc
sub
xor
shll
or
or
pusha
add
pushf
cld
or
popf
jne
imul
pop
rol
pop
adc
sub
in
push
dec
nop
cmp
shlb
pop
push
or
xor
shlb
sub
xor
mov
sub
lock
cwtl
xor
cmp
jg
je
in
inc
or
mov
outsl
xchg
dec
jmp
add
aas
sub
or
xor
push
cmp
lds
sub
inc
adc
push
and
cmp
std
xchg
das
push
pop
mov
mov
inc
sub
xchg
xchg
and
iret
push
and
xlat
jl
jl
jl
jl
jl
jl
jl
jl
jl
pop
lret
push
xor
push
or
in
pop
ret
insb
and
loope
mov
imul
cmp
or
cmp
fs
rclb
and
hlt
or
mov
mov
out
mov
inc
cld
dec
dec
inc
sbb
je
sub
xchg
mov
push
adc
mov
xor
inc
hlt
andb
in
les
mov
and
sbb
adc
enter
xor
cmp
je
cmp
add
and
add
fsubl
inc
or
dec
pop
cmp
hlt
imul
fstpt
dec
out
xchg
inc
fiadds
sbbl
jmp
nop
shr
cmpsl
dec
cwtl
gs
ss
ret
nop
pusha
test
repnz
js
adc
mov
sbb
or
mov
jg
pusha
push
sbb
mov
daa
les
sbb
or
adc
dec
dec
mov
inc
pop
sub
push
add
adc
add
jo
movsl
push
das
push
pop
push
pusha
pop
out
mov
inc
xor
fs
adc
pop
cmp
jge
pushl
push
cltd
loop
mov
movsb
dec
aam
adc
cmp
cmp
or
adc
fnstcw
dec
popa
push
insl
cli
add
pop
cltd
movsb
mov
or
mov
cmp
iret
push
push
popf
incb
add
call
or
pop
mov
add
inc
mov
or
test
iret
mov
aaa
cmp
ret
pop
mov
call
add
lock
sbb
sbb
hlt
fmuls
xchg
mov
rorl
loope
adcb
shl
xchg
mov
test
jle
add
sbb
fisubrs
pop
sbb
sbb
push
and
test
pop
leave
mov
push
push
add
inc
push
push
add
inc
push
or
dec
adc
cmp
or
rorl
jb
push
call
fnstcw
or
addl
push
sbb
shlb
mov
iret
dec
push
test
push
push
out
xchg
hlt
scas
dec
scas
or
mov
ret
mov
test
cmpl
mov
rolb
mov
jne
cmpsb
or
mov
aam
lcall
sub
add
popf
push
rolb
ss
mov
sbb
imul
inc
mov
or
push
mov
jg
xor
cmp
xor
sbb
cmpl
pop
mov
and
inc
push
test
or
das
or
pop
stc
lock
pushf
bound
jmp
dec
mov
pop
cwtl
adc
jmp
js
adc
mov
jl
dec
clc
dec
jl
lock
lea
adc
pop
add
mov
test
lret
popa
mov
xlat
nop
push
and
inc
inc
jg
mov
inc
mov
sbb
add
inc
cmp
js
outsb
xchg
dec
in
inc
or
jle
pop
inc
pop
sarb
subl
movb
movw
sub
testb
clc
leave
fwait
jo
nop
mov
iret
gs
arpl
jb
or
std
fdivs
pushf
lret
push
je
push
nop
je
bound
mov
and
add
adc
mov
jg
or
jmp
pop
lea
cmp
jge
push
sahf
push
scas
mov
mov
mov
jl
pop
movl
sub
fistpl
mov
xor
add
sub
mov
or
push
mov
push
mov
fcoms
and
cmp
cmpsl
pop
ret
movsb
aas
or
mov
dec
shrb
call
rcrl
int
stos
pop
dec
and
or
push
cmp
pop
pop
movsb
or
push
inc
xor
jmp
lret
add
mov
scas
fwait
inc
leave
incl
xlat
and
dec
scas
sarb
add
push
pop
push
inc
push
add
pop
fldt
dec
in
mov
cld
notl
test
and
leave
lcall
popa
add
cmp
mov
xor
and
inc
call
inc
mov
push
and
and
xchg
adc
je
cmp
sbb
or
dec
jmp
nop
and
mov
add
cmp
fwait
xchg
dec
dec
pop
inc
cli
pop
sar
xchg
pusha
std
ja
movsb
dec
jnp
sbb
aaa
add
sbbl
test
push
jp
jne
jmp
gs
mov
test
or
sbbb
xchg
jmp
lcall
mov
lods
enter
pop
cld
sub
mov
dec
jl
cmp
rcrl
mov
adc
ret
xchg
in
fisttps
rolb
lcall
in
pop
push
push
mov
sub
in
ret
cmpl
jne
in
call
or
xchg
pop
jecxz
or
cld
lock
pop
sub
xor
and
jl
cmp
xor
and
es
push
call
lcall
cltd
lock
sub
es
shrl
push
mov
adc
es
push
bound
pop
movsl
fdivs
mov
movsl
in
jno
inc
or
mov
mov
add
fistpl
or
loopne
push
sahf
pop
adcl
cmp
mov
loope
loope
icebp
or
icebp
jbe
pop
vmovupd
loope
sbb
add
jg
cmpsb
fbstp
jmp
lds
pop
call
ja
xor
sub
roll
movsl
repz
sbb
sub
pop
in
add
adc
sbb
inc
pop
cli
mov
jmp
mov
test
inc
sbb
push
cmp
adc
mov
cltd
push
sub
scas
je
adc
mov
hlt
mul
shr
rcr
pop
fs
or
adc
std
inc
or
pop
sbb
xchg
fstps
push
cmpsl
add
sbb
leave
arpl
movsb
xchg
pop
adc
or
fidivl
iret
add
sbb
inc
loop
jmp
mov
and
shl
leave
rcl
fcom
cmp
out
jb
ja
fisubs
sub
out
pop
test
inc
rcl
sub
cld
repz
jl
pop
nop
pop
lods
pop
mov
inc
xchg
pop
jge
xchg
std
bnd
outsl
and
xor
lock
jne
hlt
in
and
mov
dec
xlat
and
pop
mov
mov
pop
cmp
and
clc
mov
push
xor
sub
pushf
sbb
fwait
nop
and
je
les
add
mov
outsl
inc
jne
ss
mov
pop
xchg
les
enter
pushf
xchg
dec
or
hlt
add
add
call
adc
jo
inc
xorl
test
pop
jne
in
xchg
xchg
mov
rcl
clc
clc
cwtl
dec
jecxz
or
push
and
je
and
inc
push
call
mov
push
das
lods
jp
mov
push
addr16
sbb
adc
aam
mov
sti
mov
popa
rorb
cmp
je
push
js
inc
jne
rcll
jmp
ds
testl
mov
movb
lea
add
push
cmp
clc
enter
movb
add
inc
cmp
xchg
and
push
push
dec
xor
push
ret
xor
jle
dec
mov
es
jmp
adc
add
sbb
loop
inc
cmp
movb
movntps
ret
dec
xchg
xchg
dec
fstpt
leave
inc
aam
adc
rolb
and
cmpsb
adc
pop
dec
aam
scas
ret
data16
cwtl
insb
xor
cmp
negb
je
outsl
outsb
addr16
xchg
fcoms
je
jge
push
inc
adc
mov
mov
jecxz
outsl
push
data16
movb
sbb
push
mov
mov
xchg
roll
enter
sbb
loopne
imul
mov
cmpsb
adc
call
or
pop
and
sbb
push
and
push
push
adc
lds
test
popl
push
popa
test
mov
iret
scas
add
mov
mov
mov
jge
pusha
jne
int3
or
and
mov
ds
scas
bound
jmp
dec
subb
push
and
cmp
or
insb
popf
mov
inc
sti
add
cvtdq2ps
test
rclb
movl
pushf
dec
jne
push
cmc
fs
sbb
cmp
repz
and
cmc
loope
cmpsl
and
fsts
push
push
outsl
data16
lret
mov
push
arpl
pop
lret
roll
movsb
or
jo
in
and
mov
cmpl
dec
cmp
test
movsb
sub
mov
in
and
or
xchg
sub
dec
out
pop
mov
data16
dec
sbb
push
push
mov
movsb
push
dec
lods
lock
clc
cmpsl
mov
xchg
and
movsb
mov
add
and
push
inc
jmp
pop
mov
push
mov
adc
push
cld
neg
aaa
or
cmp
push
ret
pop
test
or
or
sub
pop
jnp
sub
jne
sub
cltd
inc
test
xorb
or
xchg
jbe
outsb
ret
shll
fwait
or
cld
xchg
ret
xorb
dec
push
xchg
mov
sub
pop
lea
es
mov
mov
lret
xchg
lea
xchg
fs
fadds
bound
adc
mov
pop
lret
sbb
add
cmpsb
or
add
and
mov
loopne
cmp
idivl
les
clc
cmpsb
nop
sub
cvtpi2ps
lahf
adc
add
jns
outsb
xchg
sub
adc
mov
pop
ss
ljmp
call
ror
lahf
dec
adc
dec
mov
push
adc
push
test
mov
or
fs
cmp
cmp
adc
sub
pushw
cmp
jbe
jp
mov
and
add
test
push
movups
aam
push
and
adc
pop
sub
add
call
bound
orb
je
cmpl
test
loop
jp
mov
or
adc
mov
or
dec
movsb
rclb
inc
sbb
inc
pop
mov
js
pop
push
insl
outsl
sub
out
stos
or
scas
xor
and
pusha
or
or
jne
fs
pushf
sub
in
add
add
int3
xchg
add
ret
mov
fcmovne
nop
dec
stos
pop
push
test
mov
add
push
test
dec
fcomps
sbb
xchg
cmp
and
daa
lods
xchg
and
xor
test
or
cmpsb
xor
loop
test
cli
push
addb
lods
test
dec
pusha
cwtl
sub
xchg
hlt
inc
jo
adc
lods
jo
mov
push
cld
cmp
dec
or
mov
and
xchg
aam
int3
in
jb
cmp
ds
push
movsb
or
pushf
jnp
iret
adc
int
test
test
and
or
jb
cmp
sbb
mov
and
xchg
test
cli
cmp
sbb
mov
and
mov
loope
loop
jecxz
in
in
out
inc
out
call
jmp
sbb
or
in
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
lods
push
and
mov
lods
ljmp
push
imulb
or
push
jo
stc
mov
xor
mov
or
js
gs
and
jg
hlt
shlb
and
sub
int
dec
inc
in
pop
sub
mov
test
icebp
or
or
dec
cmp
andb
insl
outsl
jb
xchg
sbb
add
pop
hlt
rolb
scas
push
and
mov
mov
pop
fisubs
lock
dec
insb
fsubrs
mov
fnstenv
adc
insb
and
repz
inc
pusha
test
xchg
adc
pop
enter
sub
or
imul
or
les
inc
les
outsb
and
mov
cld
rolb
ljmp
subb
je
js
mov
cmp
add
mov
rcrb
enter
mov
mov
jbe
add
dec
jo
sub
mov
lret
mov
rcr
adc
xchg
insb
xchg
popa
nop
insb
push
fcomps
fcomps
outsb
and
xor
arpl
inc
push
outsl
jg
aam
mov
and
or
pop
inc
aam
je
enter
push
adc
outsb
mov
or
add
lret
inc
mov
movsb
inc
int3
ja
hlt
pop
cmpsl
faddl
push
add
mov
mov
movsb
out
push
int3
push
dec
jb
push
insb
gs
pop
and
fisubs
push
inc
fcompl
adcl
ja
hlt
movsb
into
divb
mov
enter
in
enter
cld
rolb
ljmp
dec
ret
popa
outsl
and
enter
mov
sbb
mull
nop
enter
enter
sub
mov
cld
and
fmull
or
fdivs
xchg
jo
cmp
adcl
add
push
lds
or
aad
xor
cmp
lcall
stc
jmp
mov
mov
call
dec
pop
mov
or
jne
or
jns
push
neg
call
mov
inc
dec
mov
ret
xor
xor
shl
icebp
in
cmp
cli
sbb
jb
adc
mov
push
jne
pop
pop
cmp
icebp
add
jbe
add
mov
hlt
add
add
cli
fldcw
xor
testl
and
jo
shlb
loopne
sbb
cmp
pop
or
xor
mov
adc
sbb
add
jl
add
cmp
data16
fs
mov
adc
inc
daa
xor
sub
add
and
dec
pop
fcomps
ret
xchg
adc
jl
jle
outsl
add
mov
clc
pop
stc
outsl
mov
in
cmp
mov
push
cs
fwait
pop
fnstsw
sahf
jae
lods
insb
add
pop
add
ret
xchg
ret
mov
pop
pop
lret
add
adc
iret
inc
lret
ret
push
filds
imul
aas
add
pusha
adc
dec
out
adc
add
lea
iret
lahf
fists
rclb
sub
pop
sbb
xchg
jg
dec
mov
rcll
pop
fadds
cmp
jne
dec
lds
repz
cli
lahf
sarl
mov
repz
lea
mov
pop
cmp
jl
call
xchg
jne
xor
push
lock
enter
clc
ds
pop
xorb
imull
clc
push
js
call
hlt
rclb
lods
or
outsb
dec
sbb
dec
adc
add
inc
xchg
inc
lock
fs
xor
xor
inc
ret
nop
jg
push
xchg
jae
xor
adc
enter
inc
xchg
shll
lahf
in
popf
inc
stos
fstl
loope
lods
push
loope
add
inc
sub
div
es
test
mov
push
mov
push
pop
pop
pop
mov
xlat
subl
rorb
push
and
lcall
inc
pop
cmp
mov
add
cli
push
sti
xor
dec
push
lods
add
and
shlb
inc
sti
or
or
lahf
dec
add
dec
inc
lock
hlt
repnz
pusha
test
dec
fsubrs
sti
pop
jbe
mov
rorl
xchg
adcl
inc
popf
dec
cli
cmp
mov
mov
and
mov
push
adc
add
in
xchg
rorb
call
sub
push
mov
cmp
sbb
and
mov
test
xchg
in
or
xchg
push
xor
cmp
sub
xor
repnz
jge
mov
lock
in
shll
lods
cmp
xor
stos
cwtl
cmpsb
pop
repz
sub
jmp
das
repnz
or
call
sub
fsubrl
cmp
or
lods
jmp
les
mov
cs
mov
fsubl
fcoms
cmc
push
lea
pop
mov
push
fildl
mov
clc
add
pop
test
movsb
xchg
or
mov
xchg
stos
push
cmpsb
xor
cmpl
push
or
push
pop
arpl
sahf
jmp
cmp
sbb
cmp
imul
mov
add
incl
mov
jmp
cmp
call
decb
cmpb
sbb
je
test
lret
fisttps
insl
cmp
into
add
and
lea
xor
xor
pushf
push
loopne
and
and
mov
dec
pop
adc
or
xor
arpl
xor
mov
push
sub
sbb
xchg
adc
adc
xchg
pop
mov
pop
or
loop
in
xor
lea
jne
faddl
xchg
cwtl
cmp
lret
sub
iret
xchg
or
nop
dec
dec
mov
mov
cli
jecxz
sbb
in
sbb
mov
cmpsl
push
pop
enter
insb
addw
mov
shrb
stc
push
jecxz
jno
cmp
test
cmpl
add
mov
and
stos
xchg
add
xor
and
inc
sub
jmp
adc
xchg
lcall
cs
add
push
and
adc
insl
inc
lock
pop
fidivrs
in
or
add
dec
mov
lcall
mov
jmp
mov
push
mov
arpl
sub
pop
inc
inc
push
leave
mov
test
shl
push
jmp
add
add
xchg
cmp
into
push
inc
out
cmp
add
inc
lahf
adc
testl
add
adc
sub
pop
mov
sbb
movsb
sahf
adc
and
mov
clc
mov
and
push
repnz
iret
mov
rorl
jecxz
adc
pop
ret
shrb
mov
or
add
xchg
lods
inc
jl
rolb
out
mov
and
or
loopne
xlat
push
call
add
test
xor
sub
xchg
xchg
shr
test
das
mov
pop
ljmp
dec
sub
mov
cmp
pop
and
inc
insb
dec
cld
lea
icebp
inc
mov
es
add
ret
jmp
xchg
loope
dec
xlat
movsl
push
repz
dec
jae
pop
pop
inc
inc
adc
jge
loope
xchg
push
sub
xchg
push
js
pop
lea
add
xor
stos
or
mov
or
outsl
jge
cmpxchg
or
add
sbb
jecxz
divl
add
mov
inc
dec
cmp
cmp
add
jg
ds
adc
ds
or
pop
pop
jl
aam
mov
xchg
mov
ret
sti
ret
or
mov
mov
ret
or
jp
and
adc
imul
in
jge
movsb
cwtl
out
jle
movsb
pop
jbe
cwtl
negl
daa
dec
jge
adc
jb
ljmp
lds
jge
movzwl
add
add
pusha
pop
call
add
test
xor
pop
cmpsl
adc
sub
das
pop
adc
insb
add
add
or
mov
jle
mov
pop
sbb
fcoml
pop
xor
les
call
movsb
gs
xchg
inc
or
lock
dec
inc
in
call
lsl
jge
push
je
cmp
mov
orb
sbb
jl
es
stos
cmpb
cmp
fstps
repz
loop
inc
lea
loop
inc
or
mov
lds
stos
or
pop
inc
clc
mov
pushf
inc
push
daa
pop
push
icebp
or
gs
mov
dec
stos
push
adc
sub
fadds
imul
mov
mov
add
mov
sbb
add
jb
mov
das
xchg
mov
jmp
xchg
out
add
or
add
inc
and
je
adc
jne
mov
cli
popa
xchg
sti
sbb
xchg
test
sahf
and
stos
xor
or
enter
push
stc
das
jl
imul
mov
hlt
repz
jb
adc
sbb
loop
add
cmp
xchg
lea
mov
add
je
push
push
mov
mov
inc
sub
call
mov
push
pop
pop
inc
loop
xchg
sub
cmpsb
xchg
add
push
and
inc
add
mov
hlt
and
pop
mov
sub
sub
add
dec
sub
sub
add
cs
fistl
and
add
inc
sub
jmp
xor
aam
adc
les
pop
test
push
ljmp
cld
lds
jle
mov
and
cmp
testw
jmp
or
add
sbb
inc
insb
insb
in
add
cs
shl
or
clc
fs
stos
adc
xor
mov
inc
lods
call
out
mov
fs
clc
fwait
jl
je
into
mov
je
fidivl
pop
fbstp
adc
adc
or
mov
inc
sub
add
call
pcmpgtd
sahf
push
jmp
shrb
or
lods
sbb
std
cmp
or
dec
orb
call
jae
cmpb
xor
inc
push
add
or
add
ja
jmp
data16
mov
mov
mov
sbb
xor
cld
push
or
ljmp
ret
mov
fisubl
cs
lret
cwtl
sub
add
add
rorl
test
inc
pop
dec
mov
test
cmp
decl
rolb
mov
pop
dec
mov
jg
cmpsl
sbb
jae
repnz
add
and
int3
push
in
fildll
cli
mov
or
xchg
ret
lds
or
inc
adc
das
shl
mov
sub
add
and
jne
dec
mov
xchg
enter
and
push
stos
and
add
sub
movb
call
notl
fists
pop
jmp
cmp
and
push
and
lods
and
les
icebp
mov
or
sub
lock
or
adc
mov
adc
lea
mov
xor
xlat
dec
pushf
sub
sub
add
inc
mov
xchg
dec
std
push
mov
mov
jmp
add
adc
push
mov
leave
cmpsl
daa
sti
stc
pop
xchg
or
mov
cmp
mov
movsb
fsubrl
stos
add
xchg
pop
ret
lds
sbb
cmp
loope
mov
leave
push
push
push
std
and
mov
pop
clc
inc
push
inc
dec
call
pop
pop
cmp
test
inc
lock
test
cmp
inc
orl
insb
movb
adc
jne
popa
lahf
rcll
and
pop
dec
add
idiv
aam
xor
jl
and
addl
jp
adc
subb
or
insb
jae
or
jp
xor
stos
out
sbb
into
push
xlat
or
or
popa
scas
int
inc
sbb
testb
push
jle
je
test
stos
pop
or
lea
mov
or
mov
call
jns
or
or
enter
dec
ljmp
scas
xor
hlt
ret
dec
mov
mov
mov
jl
adc
mov
pop
fs
push
js
adc
cmpsb
popa
dec
push
aam
mov
or
push
sti
stos
imul
pop
pop
outsb
jne
push
cmp
jb
dec
cmp
stos
xor
test
lds
int3
jmp
push
mov
push
js
push
add
push
hlt
push
lods
sub
mov
pop
push
pop
cmpsl
sub
mov
aas
or
dec
mov
xor
std
jnp
cld
outsb
inc
adc
leave
and
clc
cmp
sbb
xchg
inc
and
or
sahf
aas
sbb
cmp
rolb
sar
cmp
aas
and
push
fdivrs
dec
and
cltd
adc
cmp
jle
shr
loop
xchg
je
push
push
inc
push
and
bt
jae
ljmp
dec
or
nop
daa
xchg
test
pusha
add
jmp
sbb
lea
call
jne
dec
xor
sub
popa
sub
cmc
sub
es
xchg
adc
cmp
add
jmp
push
push
inc
dec
loop
sbb
xor
or
add
jne
aaa
pop
test
jmp
add
jnp
sub
jle
pop
or
test
in
mov
mov
jno
xchg
hlt
adc
jns
loope
rorb
sub
sub
jb
sbb
sub
roll
jb
fiaddl
push
lea
cld
out
imul
add
jne
cmp
mov
aam
and
inc
jne
pushf
sbb
mov
jo
pop
inc
int
mov
push
xor
pop
jmp
push
adc
inc
xor
inc
and
incb
pop
or
mov
adc
mov
and
popf
sbb
imul
inc
ljmp
imul
ret
mov
inc
add
xchg
pop
mov
xchg
push
xchg
lea
sbb
sbb
addr16
icebp
lods
xchg
or
mov
mov
push
sbb
lahf
add
xchg
les
push
nop
mov
lea
push
push
cmc
dec
xchg
test
mov
shlb
add
test
test
das
int3
jmp
call
mov
sti
adc
pop
jno
call
out
add
leave
leave
push
xchg
or
and
or
or
lahf
hlt
pop
sub
and
lret
jl
or
jmp
sti
inc
and
or
lock
pop
sub
cmp
push
arpl
mov
lods
pop
sbbl
shr
in
daa
or
and
repz
mov
or
or
cmp
bound
jbe
push
invd
push
xchg
or
mov
push
imul
push
jb
inc
lods
leave
inc
push
int3
push
test
push
xor
or
xchg
xchg
gs
mov
ret
into
xor
int3
in
jle
and
ds
repz
mov
inc
int
loope
sbb
aad
lret
imul
daa
int
clc
mov
into
ficomps
ljmp
test
mov
sub
jge
lods
movsb
lds
fildl
jmp
inc
lock
push
jg
or
xor
mov
push
jne
mov
or
mov
lods
adc
out
or
test
jo
sub
inc
pop
dec
pop
and
pop
pop
mov
fsubs
lods
das
xorl
lret
or
dec
add
jmp
pusha
sti
nop
xchg
jbe
xor
adc
lea
add
aam
mov
or
pop
add
nop
ret
sub
imul
lret
in
test
xor
pop
movsb
inc
or
test
outsb
mov
in
mov
popf
pop
xchg
push
lock
jge
add
xchg
nop
in
dec
or
mov
mov
hlt
xchg
mov
push
shll
into
adc
cltd
js
xchg
fistps
in
pop
int3
movsb
push
insl
loope
mov
inc
rcl
arpl
dec
shr
xlat
stc
pop
mov
mul
adc
push
fimuls
mov
push
adc
cmp
ds
packuswb
iret
aaa
enter
sbb
xchg
push
jmp
mov
loopne
mov
ret
out
enter
push
and
inc
or
orl
or
pop
push
nop
mov
jmp
lds
xor
nop
decb
jp
out
test
lods
and
and
mov
and
jnp
adc
and
xchg
inc
or
cmp
jae
lds
cmp
xor
or
test
mov
je
data16
mov
dec
lea
sbb
sbb
mov
pop
xchg
or
mov
les
enter
dec
movsl
mov
dec
or
sub
lods
mov
inc
adc
clc
xchg
sub
jmp
pop
xchg
and
pushf
xchg
mov
bound
pushf
push
and
xchg
shrl
mov
add
arpl
clc
aad
repz
dec
out
aad
iret
push
nop
loop
inc
incl
cwtl
ljmp
dec
adc
jae
mov
rolb
out
cmp
xor
pop
xor
cmc
mov
fs
test
lock
inc
sub
push
shrb
or
icebp
adc
imul
hlt
push
and
bound
jg
mov
out
into
pop
dec
leave
jg
in
pop
hlt
inc
xchg
pop
lods
xchg
mov
addb
mov
xchg
adc
sti
pop
jo
pop
hlt
inc
or
push
sub
out
addl
iret
and
rcrl
fiaddl
lret
fistpl
and
adc
inc
xchg
test
cwtl
stos
sub
mov
or
or
and
les
add
stos
mov
pushf
lret
addb
or
xchg
sub
sub
adc
ljmp
add
add
xchg
mov
cmp
inc
xor
mov
or
les
or
enter
sbb
add
and
pusha
xor
inc
adc
mov
out
adc
subb
mov
js
ss
clc
adc
cmp
ljmp
fwait
inc
das
cmp
dec
and
loopne
divl
out
int3
test
add
or
and
add
mov
add
cmpb
or
inc
mov
jnp
add
add
adc
inc
add
mov
or
cmpb
insb
jecxz
dec
shl
cmp
leave
push
lds
push
adc
push
shrl
jl
and
jnp
lea
ret
pop
and
movsl
pop
and
mov
cmp
mov
bound
add
js
and
fcmovb
mov
fsts
adc
out
dec
inc
adc
sbb
shlb
gs
adc
mov
lahf
clc
shrb
sub
int3
jge
sub
jb
je
add
inc
sbb
movl
hlt
sbb
mov
inc
adc
aad
stc
test
or
adc
hlt
xor
lods
les
rcrb
out
pop
pop
mov
aad
inc
cltd
jno
jne
movsb
cmpl
xlat
jb
cmp
mov
pop
fldenv
xor
jmp
mov
call
sub
jb
inc
mov
stc
mov
and
stos
aaa
push
xor
jne
jp
cltd
out
sarb
daa
jne
je
imul
pop
dec
icebp
pushf
inc
cmpl
xorb
addb
or
jae
adc
cmp
inc
inc
add
dec
cmp
test
adc
nop
mov
sub
xor
stos
jge
ret
movsb
xlat
clc
cmpsb
test
rep
cwtl
or
adc
test
xor
pop
fs
dec
and
xchg
fcmovnbe
cs
rcr
dec
mov
add
and
addr16
pushf
add
xchg
ret
mov
or
cmp
mov
xchg
and
cmp
lea
stos
faddl
movsb
add
sbb
lods
pop
add
cmpw
cwtl
xchg
shrl
or
decl
test
shr
or
lock
add
adc
lea
scas
mov
pop
out
inc
add
push
je
rclb
push
inc
sub
dec
sbb
inc
enter
leave
add
xor
cmpsb
jge
mov
sti
mov
adc
sbb
lret
mov
fisubrl
pop
in
lds
adcb
ja
mov
cpuid
hlt
aaa
xorb
inc
push
mov
mov
dec
sub
outsb
xchg
sbb
mov
das
mov
sbb
add
fmull
rcrb
aam
rclb
sbb
aam
fdivrs
rorl
sub
push
insl
mov
sbb
add
adc
syscall
push
sarb
and
push
int3
mov
clc
bound
pop
clc
and
cmc
adc
inc
mov
in
pop
lret
sbb
aas
and
xchg
aas
jne
and
add
hlt
adc
cli
sbb
push
sbb
push
hlt
mov
inc
inc
push
lahf
sbb
mov
stc
or
dec
push
mov
std
adc
mov
es
dec
cmpsl
mov
das
fs
jo
pop
popa
insl
add
fs
je
jns
adc
dec
or
jo
dec
push
push
and
push
pop
sub
dec
nopl
daa
add
fistps
fdivl
adc
mov
cld
jb
call
dec
dec
call
add
dec
xchg
inc
lret
lods
jle
enter
and
or
and
sbb
pop
or
leave
push
dec
adc
aad
cli
cs
inc
imul
push
jo
jle
sbb
inc
mov
mov
ret
dec
mov
xchg
adc
pusha
fs
adc
mov
mov
rclb
and
dec
push
fs
pop
and
enter
sub
inc
inc
xor
mov
adc
cs
and
and
inc
and
js
adc
or
lock
or
xor
adc
and
mov
cld
mov
mov
movsb
xchg
adc
sub
and
in
mov
sbb
addl
inc
les
movsb
dec
mov
or
pushf
dec
fsub
cwtl
dec
shl
xchg
dec
cmp
nop
dec
test
mov
and
mov
in
dec
mov
or
jl
mov
js
sub
je
adc
jo
mov
fs
dec
lods
in
dec
pusha
in
dec
or
pusha
pop
mov
xchg
pop
and
sbb
or
push
mov
pusha
inc
dec
sarb
dec
adc
cmp
cmp
insb
cmp
clc
cltd
cmp
adc
cltd
and
adc
inc
sbb
aam
sub
mov
dec
xor
mov
or
mov
sbb
mov
mov
loopne
daa
mov
mov
mov
pop
lds
add
arpl
jge
push
add
adc
inc
stc
sub
out
and
inc
inc
add
jo
hlt
scas
mov
mov
mov
mov
cmp
test
aas
push
and
aam
xchg
or
movsb
sbb
je
or
enter
or
mov
rolb
mov
adc
sub
mov
or
pop
subl
mov
arpl
adc
pop
loope
fisubl
insb
mov
or
inc
push
filds
fldt
xchg
js
add
pushf
xchg
cmp
pop
mov
lahf
pushf
test
dec
cmp
xchg
xchg
mov
movsb
lea
xor
push
inc
movsb
mov
test
and
sbb
popf
in
push
push
mov
mov
mov
adc
adc
jnp
js
and
sbb
or
lods
rorb
rclb
clc
xchg
and
aaa
adc
inc
or
push
pop
nop
add
pop
pop
mov
fs
aaa
push
sbb
xor
pop
add
adc
sbb
sbb
shrl
mov
inc
adc
ds
ljmp
adc
adc
in
add
hlt
mulb
cmpsb
or
add
pusha
or
arpl
das
sbb
mov
lock
sub
pop
sub
and
sub
cmp
test
cmp
popa
popf
push
arpl
ret
jo
add
cmp
ja
out
lds
push
or
in
fimuls
jmp
hlt
adc
cltd
or
xor
or
and
inc
xor
mov
dec
and
dec
pop
xchg
bound
push
jb
mov
adc
push
and
dec
cmp
pop
insb
mov
xchg
dec
mov
inc
push
inc
in
mov
jbe
orl
inc
lods
mov
and
pop
loop
out
cli
mov
add
jmp
jb
or
or
loope
adc
sbb
sbb
push
and
les
xor
sbb
cmp
data16
rorb
mov
or
sbb
adc
sbb
sbb
and
int3
push
mov
mov
sarl
mov
and
test
adc
loop
adc
stc
shr
or
dec
jmp
divl
or
adc
mov
or
sub
pop
insb
adc
xchg
inc
adc
dec
inc
sbb
inc
inc
sbb
ds
and
ss
or
subl
or
xorl
or
cmpl
adc
inc
push
bound
test
xor
xor
jmp
jmp
iret
adc
lahf
mov
adc
fnstsw
in
sbb
or
and
and
cmp
arpl
js
lea
xchg
mov
int3
and
out
or
push
jmp
dec
adc
lock
lock
mov
pusha
loope
adc
daa
test
dec
rorl
stc
push
sbbb
fldenv
rorl
jg
xchg
xchg
xchg
and
mov
mov
xchg
xlat
and
call
out
and
repnz
sub
and
xchg
or
or
and
xchg
enter
jb
cmp
jb
cmp
xor
xchg
cmp
adc
mov
outsl
sub
rorl
mov
adc
ret
aas
ret
enter
out
inc
sbb
adc
jg
inc
and
loope
sub
clc
inc
sub
adc
push
jg
inc
xor
loope
cmp
clc
inc
cmp
dec
ds
adc
leave
mov
or
inc
nop
adc
adc
decl
push
mov
pop
sbb
pop
inc
sbb
mov
mov
adc
xchg
movsb
mov
adc
xchg
cmpsb
mov
adc
xchg
test
cmp
xchg
stos
mov
adc
xchg
lods
dec
cltd
xchg
outsl
push
dec
mov
pop
rorl
xchg
scas
push
test
popa
sbb
int
je
inc
mov
cwtl
lock
out
les
or
lea
fwait
cmpl
arpl
sbb
jnp
addr16
xchg
dec
lock
and
nop
inc
mov
ljmp
test
xorb
jbe
dec
outsl
mov
adc
call
lock
sbb
ljmp
inc
in
ret
mov
btc
cmpsl
sbb
or
ds
out
rorl
add
lahf
jmp
mov
sub
or
aas
or
cmp
xchg
push
and
adc
cwtl
or
jne
sub
xchg
movsb
out
push
and
or
push
push
inc
bound
adcb
dec
sbb
outsl
es
enter
push
sbb
and
inc
adc
mov
pop
jbe
sub
test
lock
in
insl
inc
cmc
clc
daa
test
ljmp
call
mov
push
pushf
sbb
mov
jmp
or
and
inc
sbb
inc
mov
inc
adc
mov
lea
push
xchg
mov
int3
call
adc
out
cmp
ljmp
mov
mov
mov
mov
xchg
xor
adc
aad
mov
mov
sbb
mov
fisttpl
fdivrs
xchg
movsb
outsl
out
mov
push
aaa
adc
push
add
shl
and
je
sub
or
add
jl
inc
add
inc
movb
or
dec
mov
or
and
in
out
fisubl
fidivrs
mov
popa
mov
and
aas
or
je
daa
pop
pop
sarl
nop
sbb
or
popf
out
and
roll
sub
sbb
jle
negl
and
xchg
inc
mov
subb
add
roll
insb
cmp
fisttps
aas
shll
mov
cmp
cmpsl
mov
mov
sahf
mov
sub
sub
flds
orb
jmp
cmpb
ja
xchg
rorb
pop
xor
push
mov
cmp
cmpsl
dec
inc
pushf
sub
orb
mov
jmp
and
inc
add
mov
test
popa
ret
jl
test
mov
sub
adc
jmp
mov
jb
xor
nop
jae
mov
or
sub
xchg
jg
sbb
sub
loope
sub
adc
adc
ss
lock
lea
fisubrs
inc
je
mov
jo
ret
sahf
adc
or
ret
mov
sbb
lds
sbb
pop
mov
adc
push
adc
dec
or
es
xchg
adc
mov
and
jb
jae
inc
jb
jbe
pop
je
cmpsl
incl
cli
push
stc
dec
mov
pop
mov
fcoms
nop
push
mov
ret
test
je
jb
sbb
fmul
lods
mov
xchg
out
adc
fsts
mov
clc
movsl
nop
xchg
or
scas
mov
movups
rclw
push
sub
cmp
pushf
mov
mov
int3
ja
push
ljmp
ljmp
and
rcr
stc
enter
dec
sbb
or
add
xchg
mov
inc
call
push
jg
inc
je
pop
sub
lret
mov
ja
xchg
in
dec
lock
popa
hlt
adc
or
dec
dec
or
mov
or
push
lock
mov
lock
and
rcrb
push
in
jmp
push
insl
lock
pop
sbb
sub
jne
push
aad
sub
xorl
cmp
xor
lret
cld
insl
daa
sbb
gs
arpl
ljmp
out
jmp
adc
push
add
fmulp
mov
outsb
mov
int3
imul
enter
je
cld
test
push
loopne
xor
mov
add
aas
sar
clc
arpl
in
jmp
adc
xor
testl
cli
add
sti
add
sbb
or
add
sahf
add
subl
or
sbb
jmp
push
adc
or
add
adc
mov
xchg
or
sbb
push
push
mov
popa
mov
and
leave
xchg
icebp
adc
pop
and
cltd
decl
adc
sbb
xchg
and
inc
arpl
popa
les
inc
sbb
mov
fists
inc
sbb
push
inc
lods
mov
pop
test
and
and
and
and
xchg
inc
imul
xorb
cmp
xor
enter
xchg
sub
lret
hlt
push
sub
test
inc
jmp
mov
push
push
fs
lock
inc
jge
in
adc
out
adc
mov
div
cmp
loop
pop
inc
rolb
xchg
fsubr
xchg
sahf
pop
shrb
rcll
cltd
fs
lock
xor
aam
adc
fsubl
mov
inc
idivb
or
or
arpl
jmp
and
xor
or
loopne
mov
out
ljmp
add
pop
pop
pop
test
mov
shl
js
add
in
and
pop
push
push
mov
and
jns
pop
mov
ror
fs
push
cmpsb
sbb
addl
jno
call
dec
push
std
xchg
mov
cltd
sub
pop
mov
pushl
mov
inc
andb
mov
addr16
inc
clc
mov
add
mov
icebp
pop
mov
jl
sar
testb
push
push
mov
mov
les
push
and
cwtl
mov
sti
add
xor
inc
and
sub
mov
test
mov
adc
cmpl
adc
pop
mov
add
xchg
testb
lret
pop
mov
imul
jns
xor
adcb
jbe
sub
adc
add
dec
test
adc
or
loopne
jae
adc
sub
xor
lea
jge
enter
jae
in
shlb
or
into
xadd
data16
scas
push
inc
jnp
xchg
jns
mov
and
arpl
jae
rcrb
sub
or
adc
and
and
ds
test
jge
aam
pop
sbb
push
jne
push
jg
gs
enter
call
out
rcrl
hlt
push
dec
pop
jmp
and
xchg
sub
inc
mov
jge
popf
jge
mov
mov
nop
dec
mov
ret
mov
rorl
adc
nop
loopne
aas
pop
or
dec
push
clc
lahf
inc
pop
shlb
bound
popa
inc
es
mov
mov
ret
jb
in
xchg
cmp
lret
iret
test
pop
or
push
pushf
add
or
cmpsl
mov
fwait
iret
jmp
push
adc
and
pop
or
dec
cmp
and
inc
daa
jl
daa
test
int
outsl
xlat
xchg
in
sub
outsl
inc
loopne
mov
in
je
repnz
and
mov
pop
xchg
adc
sbb
sbb
mov
xlat
enter
inc
out
repnz
and
adc
lock
push
test
mov
add
add
sub
aaa
jae
push
xor
test
or
xchg
add
sub
jge
ret
or
adc
or
incb
pop
in
or
sub
push
or
test
or
test
and
and
movntps
adc
sbb
add
mov
adc
lret
xorl
add
or
jmp
sub
push
inc
sub
sub
add
cmpl
jne
movsl
aaa
jo
sbb
xor
enter
dec
rcr
jl
rcl
fs
add
or
sub
mov
cs
movsb
dec
or
int3
sbb
nop
lahf
test
repnz
adc
sub
dec
push
icebp
sub
mov
enter
aaa
add
adc
mov
and
or
and
pop
imul
pop
pop
fnstenv
sub
pop
jne
push
in
sub
test
sub
out
add
sbb
sbb
adc
mov
sub
or
ja
movaps
dec
adc
push
adc
and
clc
add
jne
push
pop
pop
pop
mov
lock
nop
ret
push
xor
sub
mov
sub
popf
and
mov
testb
pop
in
jl
es
adc
dec
das
sub
push
cwtl
and
movsb
ret
or
jno
sbb
insb
aas
sbb
xor
cld
add
adc
or
test
inc
xor
sub
js
sub
dec
dec
add
sbb
pop
adc
sbb
notb
sbb
dec
scas
sub
cmpb
adc
pop
pushf
inc
and
sub
inc
jne
dec
je
xchg
ss
idivb
mov
pop
aaa
popa
add
ds
sbb
je
sahf
adc
dec
sbb
add
jo
jle
cmpsl
cmp
sub
mov
in
sarb
cmp
or
pusha
push
jne
jnp
jne
cmpb
inc
clc
pop
jnp
es
movsb
fadds
jmp
dec
bound
lcall
xchg
and
es
fadds
insl
pop
jno
inc
push
add
jnp
outsl
insl
and
in
ret
dec
dec
jle
sbb
jae
out
jo
push
or
fmuls
mov
jo
xchg
jmp
shlb
sbb
cmp
rclw
cmp
add
dec
mov
aaa
adc
in
or
paddusb
or
inc
psrld
adc
sbb
adc
js
or
fistps
lods
mov
icebp
add
lods
sbb
jmp
stc
mov
push
cmp
pop
pop
jbe
jmp
mov
mov
pop
sbb
sbb
dec
mov
or
pop
xchg
adc
xlat
fwait
ret
mov
ret
pop
sub
add
call
sbb
mov
insb
sub
popf
cmp
xchg
stos
ror
nop
add
js
add
sub
lock
adc
cmpl
cmp
stos
cmp
xlat
xor
loope
push
jno
dec
shrb
enter
sub
fidivl
push
nop
cmpb
cld
add
sti
orb
int
repnz
mov
shlb
test
mov
adc
pop
push
ret
cmp
inc
jne
mov
pop
mov
sub
loop
hlt
cmp
cmc
cmp
add
movb
jmp
add
cmp
scas
sub
ljmpw
xchg
subb
imul
xchg
fs
nop
jbe
js
pop
jne
scas
mov
xor
pop
pop
std
or
xor
add
jbe
xchg
lods
dec
hlt
and
and
imul
shlb
add
repnz
push
add
lods
push
repnz
push
sti
in
jle
int
or
out
rcrl
mov
insb
out
and
outsl
movsl
int
adc
and
imul
test
stos
inc
adc
and
mov
mov
push
sub
push
adc
icebp
repnz
das
inc
and
add
andl
or
dec
mov
fwait
jmp
lods
scas
leave
xor
shll
popf
lahf
and
mov
add
in
cmp
sbb
out
add
push
stc
std
push
jmp
dec
fmuls
pop
stos
mov
jb
sbb
or
roll
sub
xor
add
sbb
and
sbb
push
add
shr
xor
dec
add
cmp
movsbl
or
adc
cmp
mov
addl
das
loopne
std
jl
or
adc
xor
xor
aaa
mov
loopne
imul
dec
in
and
xlat
leave
outsl
or
enter
jg
hlt
mov
leave
je
pop
add
and
icebp
dec
mov
out
das
adc
pop
popa
adc
pop
and
dec
test
sub
jl
add
fldenv
in
push
je
xchg
cmp
sub
push
mov
sbb
inc
xchg
adc
mov
mov
dec
mov
xor
leave
xor
dec
aas
add
hlt
push
xchg
adc
add
lock
aam
pusha
sub
sbb
lret
and
sbb
loop
sbb
inc
adc
adc
call
and
and
lds
daa
sub
adc
leave
sub
inc
test
mov
sbb
adc
push
mov
jp
repnz
stos
adc
jmp
repz
cltd
pop
in
movsb
mov
dec
inc
inc
or
xor
lods
gs
sbb
cmp
cmpsl
sbb
jmp
jmp
add
mov
push
inc
or
lock
call
rcl
sub
das
inc
push
aam
scas
fdivs
xchg
jnp
push
or
xor
push
mov
ja
push
enter
lock
mov
xor
cli
clc
sbb
add
jl
inc
mov
add
jns
aas
in
loope
dec
popa
add
add
xor
or
jae
fcmovnb
fs
jne
fcomps
nop
nop
pusha
pushf
mov
add
cmp
mov
cmpxchg
inc
imul
lret
and
roll
xchg
dec
data16
inc
sbb
sbbl
dec
adc
or
sbb
or
sbb
add
inc
addl
call
push
mov
inc
addr16
lea
je
mov
jno
nop
xor
xor
and
jg
cs
jmp
sbb
adc
pop
and
push
incb
adc
or
or
je
inc
adc
mov
sbb
adc
lret
push
jmp
adc
popa
popf
scas
sub
shll
push
mov
mov
enter
out
mov
jge
inc
cmc
add
cli
add
mov
jmp
sbb
les
jmp
mov
adc
adc
cmpsl
xlat
adc
das
cmpl
sbb
lahf
imul
and
adc
sub
mov
mov
ja
mov
ljmp
test
jl
inc
xor
mov
pop
or
jmp
push
jecxz
jl
add
mov
pop
lods
push
aaa
je
push
and
imul
faddp
jne
add
inc
jbe
outsl
roll
xchg
mov
or
fwait
daa
loop
sbbl
or
je
ret
sbb
dec
xor
and
cmp
pop
mov
mov
rol
xor
rcrl
sarl
sub
test
sqrtps
add
push
push
add
jg
cmp
jne
or
add
add
xchg
jne
inc
ss
adc
adc
inc
jb
mull
fistpll
push
add
jbe
pop
cmc
pop
sbb
or
dec
adc
add
jmp
add
jmp
inc
mov
rolb
sub
sub
push
mov
lret
cld
test
dec
lock
sbb
inc
sbb
call
and
enter
or
mov
and
push
jmp
in
mov
lods
daa
push
cmp
ret
dec
adc
sbb
mulps
and
orb
inc
cmpsb
les
call
mov
jl
nop
inc
lods
pusha
mov
loopne
cwtl
fiadds
loopne
adc
or
jo
inc
dec
test
js
loopne
mov
pusha
loop
popa
mov
int3
xchg
jp
pushf
or
paddsb
xchg
scas
aaa
mov
sub
lods
shll
ret
loope
xor
sbb
ret
jne
adc
lds
adc
pop
mov
xchg
push
add
jo
lret
int3
enter
mov
fcomp
fxch
sbb
loope
or
mov
push
jne
je
sbb
and
popa
je
xor
xor
xor
ss
add
cmp
inc
inc
inc
inc
dec
fidivrl
enter
je
xor
mov
mov
add
mov
adc
mov
sbb
ret
sbb
sbb
cmp
clc
xchg
dec
and
pop
pusha
mov
jo
js
adcb
mov
and
dec
rclb
loopne
call
lock
mov
or
mov
adc
and
dec
xor
dec
push
mov
add
add
inc
add
enter
dec
int3
push
les
adc
mov
loop
mov
sbbb
and
movsb
jno
mov
cld
inc
mov
mov
adc
enter
mov
rcll
pop
and
and
cwtl
inc
ljmp
ret
dec
sbb
and
sub
sbb
dec
xor
cwtl
sbb
call
mov
mov
iret
sbb
lock
sub
or
push
xchg
enter
adc
roll
dec
js
mov
xchg
cmp
rol
fadds
or
fwait
adc
cmp
outsb
sub
call
and
pusha
dec
hlt
lea
and
sub
jo
cmp
and
clc
mov
cld
dec
cmp
adc
cltd
xor
leave
icebp
fcoms
sbb
nop
and
mov
clc
test
inc
and
mov
inc
inc
adc
movsb
jns
adc
or
and
rclb
lock
cmp
ljmp
test
fs
inc
stc
mov
dec
ds
aam
adc
data16
dec
out
or
inc
bound
mov
adc
pop
dec
fs
jb
addb
mov
inc
call
lret
les
dec
and
dec
push
inc
xchg
mov
and
push
add
notb
or
and
add
xor
push
or
adc
or
and
inc
into
fisubl
inc
gs
or
xor
inc
inc
dec
pop
mov
test
dec
cmpsb
xchg
mov
testb
or
sub
cmp
or
pop
sub
lods
push
in
out
sbb
je
inc
cmp
repnz
push
in
iret
xor
jbe
lods
roll
pop
jb
pop
dec
fldt
and
jp
push
mov
jo
aam
xor
cmp
sbb
sbb
mov
xchg
bound
inc
jne
push
addb
sub
xorps
in
clc
jb
dec
outsl
mov
rorb
jb
push
outsb
inc
adc
ret
jns
or
imul
js
push
rorb
jnp
movsb
adc
aam
outsl
inc
dec
adc
jb
outsb
cmp
cwtl
ss
outsl
mov
outsb
idiv
inc
cmpsl
adc
inc
imul
push
mov
enter
xor
std
xchg
xchg
rorb
data16
or
pop
mov
aas
jae
pop
mov
lea
les
insb
pop
jo
push
outsb
push
push
jge
xor
inc
push
mov
ja
or
icebp
mov
repnz
sbb
leave
cmp
pop
out
pushf
dec
leave
jns
add
jb
push
hlt
scas
sub
adc
adc
inc
outsl
inc
dec
movsb
mov
sbb
in
jo
movsl
dec
add
addr16
jne
mov
sti
xchg
jmp
dec
cmpsb
outsb
shrb
and
jne
sub
and
jae
dec
jns
adc
in
outsl
je
in
inc
enter
dec
pop
rclb
in
bound
mov
dec
fiaddl
mov
adc
pop
pop
xchg
push
adc
xchg
fmul
cld
movsb
mov
test
movsb
js
dec
stos
mov
cli
cmp
push
push
and
or
sbb
jne
jmp
ja
ljmp
push
and
repnz
push
push
mov
sub
loope
cmp
or
or
sbb
jge
ret
jo
xorl
or
sub
cmp
inc
aas
dec
aas
dec
aas
push
aas
push
aas
bound
push
jb
jp
cmpb
aas
xchg
aas
lcall
aas
mov
aas
sarb
fidivrl
loop
ljmp
xor
dec
adc
sub
cmp
inc
iret
outsb
iret
jbe
jle
xchg
mov
xchg
iret
sahf
iret
cmpsb
iret
scas
iret
ror
fadd
inc
xor
xor
cmp
push
and
push
shr
js
xchg
add
out
and
aas
xchg
dec
mov
shll
jnp
xchg
repz
rep
repz
repz
repz
in
div
add
adc
sbb
lock
inc
clc
dec
cld
arpl
push
je
jle
mov
xchg
cld
lahf
cld
mov
mov
mov
cld
ljmp
inc
cmp
bound
pop
cmp
dec
inc
subl
xchg
scas
mov
xlat
shl
jecxz
repz
repz
lock
mov
xchg
lock
ds
jg
inc
in
scas
lock
clc
int
adc
aas
sbb
xor
push
cmp
cmp
enter
sub
xor
fmuls
xchg
adc
xor
dec
stc
popa
and
mov
mov
xchg
cld
sar
cld
fdivr
lock
cld
cld
add
xor
adc
jb
iret
movsb
iret
stos
iret
push
xor
dec
mov
cmp
mov
iret
mov
ret
and
mov
push
rcrl
pusha
repz
sbb
in
call
int
sar
cld
pop
cmp
jns
mov
int3
push
pushf
mov
cmp
in
call
cmp
sbb
outsb
cmp
addr16
addl
cmp
adc
jb
xchg
mov
ficompl
xchg
pop
and
fsubrs
inc
push
rorb
int3
roll
pop
xchg
gs
ret
leave
and
lock
or
cmpl
daa
ret
inc
inc
je
jl
xchg
adc
jo
and
jmp
xchg
stc
popf
stc
cmpsb
stc
mov
mov
stc
lret
stc
loop
or
sbb
jp
jl
jle
jle
sbb
aaa
sbb
xor
aas
lahf
pop
pop
outsl
lahf
jns
jle
popf
lahf
mov
lahf
fldl
jle
mov
idivb
inc
mov
inc
mov
push
xor
xor
inc
add
sbb
adc
in
jmp
cltd
shlb
pusha
adc
mov
call
or
sbb
mov
iret
xor
cmp
popl
dec
iret
dec
iret
addr16
jo
jns
test
iret
mov
lret
leave
fmull
test
ret
push
aaa
push
xchg
push
arpl
mov
ret
adc
loop
inc
pop
repz
fdiv
loopne
out
repz
sbb
sub
lock
hlt
outsl
clc
je
xchg
xchg
cld
mov
cld
lret
cld
fdivr
ljmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
dec
bound
aas
cmpb
aas
xchg
aas
lcall
lods
lahf
ficompl
addr16
clc
sti
cmpl
sbb
and
sub
xor
cmp
inc
stc
dec
stc
push
stc
pop
stc
pusha
stc
push
stc
cmp
stc
nop
stc
cwtl
stc
mov
xor
sar
cld
sar
fdivr
loopne
call
clc
jo
cmp
cmp
cmp
cmp
cmp
cmp
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
push
aas
cmpb
aas
nop
aas
cwtl
aas
mov
aas
mov
aas
sarb
fdivrs
loopne
call
testl
mov
sub
jecxz
repz
repz
repz
repz
repz
xor
repz
rep
repz
repz
shl
aam
fdiv
fmul
dec
out
sti
cmpl
xor
cmp
jmp
inc
out
out
out
out
out
in
xchg
pop
nop
leave
pop
cwtl
stc
pushf
stc
mov
stc
fdivr
loopne
in
call
lock
hlt
lahf
clc
lahf
cld
mov
xor
cmp
inc
dec
inc
iret
push
iret
push
iret
pop
iret
push
iret
xchg
iret
cwtl
iret
pushf
leave
mov
lods
out
out
loopne
hlt
push
stc
cld
sti
cmpl
or
adc
and
inc
icebp
dec
stc
dec
stc
push
stc
push
xor
pop
cld
pusha
cld
fs
push
cld
mov
cld
lods
cld
mov
mov
mov
cld
sar
lock
clc
cld
cld
cltd
push
adc
adc
push
lods
dec
or
movsb
sbb
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
pop
mov
enter
fsubr
or
or
adc
xchg
cmpsl
sbb
and
and
xor
push
xchg
ds
repz
repz
js
jl
mov
lods
repz
mov
repz
repz
pop
aam
in
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
pop
shlb
fdivrs
fdivrl
loopne
in
clc
je
and
and
sub
pusha
xchg
xor
cmp
pop
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
pop
call
out
out
loope
xor
lret
cmp
cmp
fcomps
dec
lahf
push
fists
lahf
test
xchg
lahf
cwtl
lahf
pushf
lahf
mov
lahf
lods
lahf
rcrb
inc
lock
hlt
stc
clc
stc
cld
sti
xorl
dec
jmp
push
stc
pop
stc
pop
je
fs
loopne
jl
mov
dec
lods
mov
mov
mov
rcll
clc
testl
mov
adc
sbb
sbb
and
pushf
inc
fs
pop
cld
imul
push
out
push
cmp
cmp
inc
jge
adcl
xchg
jecxz
repz
repz
jmp
stc
mov
cmp
and
loope
sbb
aas
adc
sahf
sub
pop
fcompl
call
call
movaps
cmp
jnp
xchg
ret
xchg
fbld
cmp
loope
jmp
cmc
loope
ss
leave
push
shrl
xchg
loope
jmp
sti
adc
xchg
ret
call
xchg
scas
dec
pop
mov
orb
dec
mov
outsb
ret
inc
mov
dec
push
push
xchg
cmp
and
scas
push
cmp
enter
jb
je
jbe
js
jp
jl
jle
jle
jle
sbb
adc
orl
and
sub
shlb
fmuls
push
push
loope
repz
dec
xchg
arpl
dec
fistl
xor
ret
cs
mov
ret
ljmp
cmpsl
stc
lods
stc
mov
mov
stc
lret
aad
fistpl
in
jle
jle
sbb
xor
popf
sbb
cli
jl
dec
inc
rsqrtps
pop
popa
push
jo
add
stc
int3
stc
sar
or
sub
and
loop
movsl
ret
pusha
loope
je
mov
out
adc
pop
and
jb
scas
cltd
cld
movsb
cld
test
cld
sar
fcoms
xchg
or
mov
push
sbb
pop
cmp
sahf
fs
ja
mov
repz
nop
jae
dec
push
cmp
dec
aaa
mov
pop
dec
mov
lret
ret
xchg
mov
je
jge
cmp
pop
cmp
jns
jg
xchg
mov
int3
xchg
xchg
aam
xchg
fsubl
flds
lock
jmp
pushf
cld
rcrb
je
adc
movsb
pop
sbb
cs
xchg
sub
stos
xor
lods
add
inc
mov
cs
mov
pop
lahf
pusha
lahf
fs
push
lahf
je
js
clc
add
repz
mov
nop
push
ror
stc
mov
lods
cld
mov
aam
mov
shr
imul
jb
je
jbe
js
jp
jl
pop
sub
and
dec
fcompl
pusha
stc
fs
insb
stc
jo
js
call
iret
test
lods
lret
mov
call
int3
in
shl
fcoml
cmpsl
insl
cs
hlt
in
or
or
adc
sbb
sub
clc
mulb
aas
pop
cs
negb
js
sbbb
lahf
rep
repnz
mov
jle
mov
or
adc
xor
negb
in
jb
jge
xchg
shr
mov
repnz
jle
jle
loopne
mov
imul
pop
je
lock
pushf
in
push
pop
push
lahf
jnp
lahf
xchg
stos
dec
ror
iret
xlat
leave
jecxz
mov
xor
mov
push
je
jb
jg
mov
cwtl
sahf
mov
dec
scas
loop
out
lret
sti
sub
sbb
pusha
dec
mov
mov
xchg
hlt
xchg
clc
lcall
lcall
mov
mov
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
xor
cmpsb
test
push
xchg
sbb
push
and
imul
ds
inc
stc
inc
stc
dec
stc
dec
stc
push
jno
and
test
lods
in
mov
mov
ds
mov
lahf
enter
rclb
loope
in
call
lock
jle
pop
cld
mov
add
or
or
adc
sbb
and
and
sub
sub
xor
aas
aas
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
daa
fs
lock
out
out
loope
dec
movb
pop
sarb
jns
mov
jp
pop
xchg
movzbl
iret
stos
leave
scas
loope
mov
mov
stc
stc
lret
stc
iret
push
mov
out
pop
out
repz
sti
shlb
popf
or
pop
pop
pop
pop
pop
lahf
and
das
lahf
xor
lret
inc
inc
rorb
dec
stc
push
stc
push
stc
pop
stc
pop
stc
arpl
addr16
imul
stc
jae
ja
jnp
cwtl
cmp
cld
mov
cld
xchg
mov
push
fwait
xor
repz
rep
repz
repz
mov
mov
stc
ret
stc
cmp
aas
iret
daa
roll
in
xchg
les
repz
sti
repz
add
pop
in
call
pop
hlt
sbb
dec
repz
mov
xchg
repnz
leave
fdivrl
add
jg
pop
hlt
imul
xchg
cld
movsl
cld
mov
sahf
cli
pop
ljmp
jb
call
dec
js
add
das
xchg
cmp
subb
cwtl
ss
or
cmp
xchg
cs
cli
lahf
in
xrelease
ds
sub
xchg
loopne
cmpsb
cwtl
cli
es
cmp
in
imulb
jo
dec
cmp
test
or
cld
std
cld
xchg
xor
cmp
dec
ss
xor
das
js
jp
dec
mov
xchg
stos
lret
mov
push
xchg
fs
dec
cmp
xor
lock
je
lea
pop
push
js
mov
pop
cmp
xchg
cmp
cmp
outsl
sub
test
cmp
push
cmp
gs
push
pop
cmp
dec
xor
jnp
xchg
stos
lahf
mov
mov
and
xchg
fidivrl
jecxz
lock
or
jnp
test
icebp
cltd
stc
scas
stc
sarl
test
sahf
jp
mov
int3
repz
ljmp
lcall
and
cmp
js
sub
repnz
push
push
pop
filds
xor
push
inc
dec
leave
push
loope
jle
mov
sub
jl
int
lock
xchg
inc
mov
ja
mov
mov
sub
dec
popa
or
dec
fstps
xor
jge
test
jo
call
fs
pop
call
xchg
incb
pusha
xor
sahf
loopne
adc
fidivs
call
in
and
xchg
and
mov
clc
xchg
or
push
inc
pop
gs
cld
into
cld
fdivr
loop
sub
insb
mov
scas
push
or
adc
mov
popa
bound
clc
adc
sbb
shll
fldenv
sub
cmp
fnstenv
sub
out
loope
ds
jno
adc
pop
shl
aam
add
push
cmpl
lcall
repz
repz
and
push
cmpb
aas
mov
mov
add
push
shll
ja
mov
xchg
icebp
mov
popa
jo
clc
xor
dec
pop
push
jnp
xchg
jle
dec
rorb
loopne
sbb
xorl
pop
mov
jo
jl
pop
movsb
mov
mov
icebp
and
pop
sub
dec
xchg
mov
mov
xchg
andl
adc
pop
js
jp
jl
jle
jle
jle
jle
jle
pop
cli
push
fsubl
lret
outsl
loope
popf
icebp
cmpsl
stc
mov
xor
or
cmpsl
insb
dec
addr16
jl
push
mov
repz
add
mov
test
push
test
ret
dec
js
cmp
cmp
pop
cmp
cmp
cltd
fs
jle
jle
jle
pop
and
cmp
cmpsl
jle
xchg
out
out
out
out
in
lock
cmp
push
je
jle
ljmp
pop
cld
and
push
ds
sub
das
jb
push
fwait
xchg
outsb
lret
pop
dec
jle
dec
repz
or
bound
ret
mov
prefetch
shufps
jmp
nop
cmp
popa
xchg
cmpb
push
xor
dec
sbb
outsb
movl
test
repz
je
xchg
stc
fwait
sti
xor
inc
rclb
out
add
test
push
hlt
dec
movb
sub
sub
xor
dec
xor
dec
inc
cld
inc
cld
dec
mov
pop
push
or
lds
and
in
loope
add
pushf
mov
cld
test
insb
pop
mov
in
lahf
hlt
xchg
cld
mov
mov
sub
js
inc
aas
dec
aas
push
aas
pop
das
fs
test
mov
xchg
cld
movsb
mov
nop
and
pop
mov
pop
mov
shr
jno
jle
pop
hlt
pshufw
sub
cmp
cmp
adc
adc
lods
sahf
lcall
or
out
out
in
mov
mov
mov
adc
stos
or
sub
aad
pusha
cmp
sub
loope
out
push
xor
xchg
adc
and
or
std
adc
dec
call
fsubrs
nop
add
sub
xor
pop
mov
push
lcall
cld
inc
xchg
push
aas
and
jo
enter
xor
lock
sub
test
and
fsub
xorb
pusha
add
loopne
and
pop
cmp
inc
cmp
loope
adc
sub
adc
sbb
sbb
sbb
sbb
sbb
or
adc
sbb
pushf
inc
sbb
sbb
sbb
sbb
sbb
jne
les
pop
out
jne
add
cmp
popf
ja
insb
jl
add
xlat
push
xlat
daa
push
lds
ja
pop
inc
or
xlat
jns
cld
test
push
jne
bnd
daa
pop
xor
add
cmp
inc
out
push
and
bnd
js
pusha
wbinvd
add
insl
dec
insb
mov
push
sahf
movsb
popf
pop
xchg
push
adc
scas
cmpsb
jnp
scas
and
ljmp
cmp
stos
outsl
popf
dec
stos
mov
jmp
or
pop
adc
ds
adc
sub
sub
and
fstpl
cmc
inc
or
xchg
dec
sub
dec
ss
jb
push
xor
push
mov
push
or
pop
fs
mov
js
dec
jle
in
sub
gs
mov
cmpsb
mov
shrb
lds
push
lret
in
jb
xlat
mov
jecxz
cmp
out
mov
add
or
sbb
and
fs
sub
or
aaa
cmp
test
inc
push
jb
bound
jnp
xor
xchg
dec
xchg
fwait
push
enter
loopne
jb
stos
sbb
mov
mov
dec
movsb
lds
rcrb
pop
and
scas
sub
xor
cli
dec
lret
out
sub
out
dec
push
or
or
test
add
sbb
sbb
sub
and
mov
mov
cmp
push
and
inc
sub
loop
push
inc
push
mov
insb
pop
pop
jnp
sub
xor
lea
test
xchg
sbb
or
icebp
push
repnz
inc
sbb
and
or
cs
inc
mov
push
inc
dec
enter
mov
jb
mov
pop
sub
xor
aam
sahf
imul
pushf
and
mov
les
leave
scas
push
push
iret
pop
sub
push
fidivrs
sub
jo
push
mov
inc
hlt
lret
jno
pop
add
sub
or
enter
iret
and
scas
and
sub
inc
xor
push
dec
in
jb
jo
pop
jl
push
pusha
xor
lock
in
jb
mov
inc
mov
push
sub
pop
xchg
iret
push
fdivl
ficoms
enter
bound
test
adc
enter
or
and
int
push
enter
jb
adc
scas
sub
xor
je
fs
dec
sub
mov
cmpsl
scas
aaa
push
mov
and
in
jb
in
mov
stc
scas
jne
jg
pop
push
test
or
sbb
and
sub
inc
das
fbld
test
inc
inc
enter
or
push
fs
sub
test
inc
outsl
enter
or
andl
test
inc
sahf
xchg
je
cmpsb
push
xchg
mov
lret
in
jb
mov
sti
scas
push
push
std
pop
push
or
push
mulb
mull
outsl
rorl
enter
sub
sub
mov
nop
inc
mov
push
inc
push
enter
or
pop
mov
insl
push
inc
adc
xchg
jle
loop
push
inc
mov
scas
mov
mov
test
inc
in
in
or
repz
sub
test
or
nop
pop
mov
push
inc
and
sub
or
aaa
fs
pop
mov
push
inc
insb
enter
or
andl
push
inc
xchg
enter
or
stos
fs
aad
ficoml
inc
loopne
out
in
or
clc
fs
sub
test
or
or
adc
push
push
enter
sarl
adc
scas
sub
xor
inc
cmp
dec
push
in
jb
pop
mov
rorb
jb
jnp
sub
xor
xorl
pop
mov
ss
in
sub
dec
xchg
repz
lret
in
ja
add
ja
add
push
sub
and
xor
cmp
inc
mov
xchg
sub
enter
mov
test
lds
aam
lret
in
jb
jmp
inc
negl
xchg
add
xchg
sbb
and
cmp
xchg
mov
push
mov
pusha
scas
xor
imul
jle
lret
in
jb
mov
nop
test
xchg
mov
adc
and
and
xor
fnstcw
call
sbb
cmp
xor
or
add
add
adc
enter
or
xor
inc
test
inc
push
enter
xchg
fs
mov
sub
enter
lods
sub
test
push
push
sti
push
mov
sub
lret
in
jb
fnstcw
stc
scas
pop
and
or
inc
scas
enter
or
mov
test
inc
xlat
enter
or
call
jle,pt
add
jb
idivb
add
mov
enter
or
daa
fs
test
inc
dec
enter
or
imul
test
inc
xchg
enter
or
mov
test
xchg
dec
push
lds
sub
and
xor
icebp
sub
sub
pop
mov
aad
into
sub
pop
xchg
sbb
lret
in
jb
cmp
dec
les
adc
pop
sub
aad
mov
pop
push
andl
or
mov
lret
push
mov
and
test
or
or
or
push
pop
in
jb
sub
nop
cmp
inc
scas
sub
adc
lret
in
jb
addr16
and
mov
test
inc
mov
mov
and
popa
call
jp
ja
scas
adc
out
or
out
addr16
push
or
and
dec
lret
push
das
pop
and
scas
sub
xor
pusha
ds
xor
xchg
hlt
out
lcall
lods
sub
dec
out
push
or
pop
and
pushl
in
fcoml
in
jb
pushf
fiadds
mov
or
sbb
xchg
test
adc
or
jl
xchg
jg
lret
in
jb
lea
lahf
scas
pop
push
cmpsl
sub
enter
testl
test
inc
int
rcrl
or
loopne
loop
call
cmpsl
js
xchg
out
adc
cmc
or
imull
test
or
or
jne
adc
adc
jno
pop
and
xor
xchg
inc
dec
lret
in
sub
insl
scas
pop
push
outsl
sub
jo
jb
xchg
test
xor
inc
inc
mov
or
add
cmp
adc
adc
and
and
movsl
xor
sub
cmp
inc
push
fnsave
cmc
inc
pop
or
and
pop
pop
aam
cmp
xchg
dec
mov
enter
cmc
push
push
and
pop
push
leave
loop
push
inc
insl
enter
or
jne
mov
xchg
and
scas
cmp
xchg
push
nop
stos
loop
push
inc
enter
or
int3
fs
faddl
in
in
jb
hlt
mov
sub
adc
or
inc
push
enter
and
test
in
dec
jge
test
sub
xor
cmp
dec
scas
push
push
dec
pop
sub
xchg
dec
jb
pop
jl
imul
jns
or
sbb
subb
mov
xchg
pop
mov
xchg
mov
lret
in
jb
sarb
shlb
lret
loope
mov
jae
pop
inc
adc
repz
inc
inc
std
les
push
sub
scas
or
enter
or
push
fs
sub
push
sub
xor
lret
in
jb
pop
mov
jl
push
push
sbbb
gs
mov
mov
xchg
sub
xchg
pop
or
movsl
push
inc
cmpsl
enter
or
mov
sub
test
inc
fxch
repz
sti
or
jmp
pop
inc
and
jb
sbb
push
sbb
dec
dec
aaa
and
and
mov
dec
push
inc
pop
in
jb
dec
xchg
jbe
push
lret
push
pop
or
bound
xchg
gs
insb
xor
jne
cmp
pop
push
mov
and
test
inc
inc
and
sub
enter
or
inc
fs
sub
test
inc
mov
mov
mov
mov
mov
into
push
inc
ror
aad
and
fildll
call
push
icebp
adc
stc
or
fildl
test
faddp
or
or
fstpl
xor
or
cmp
push
inc
push
enter
pop
sbb
xchg
sbb
addr16
sbb
and
fs
sub
test
jo
mov
push
inc
nop
mov
or
jo
xchg
or
xchg
fs
sub
test
push
inc
mov
enter
push
mov
and
test
adc
loope
dec
arpl
jb
repz
nop
pop
aam
cmc
out
pop
in
jb
sub
fstpt
test
loop
mov
data16
sub
xor
mov
lret
in
jb
int
jae
xlat
lret
in
sub
jg
or
inc
sbb
and
adc
test
inc
and
and
xor
test
inc
inc
enter
or
push
fs
sub
test
inc
popa
enter
sub
test
inc
jbe
jns
orl
adc
test
sbb
or
shlb
xchg
in
lret
in
jno
add
push
test
mov
adc
cs
stos
xor
inc
scas
pop
push
push
and
pop
sub
aas
in
jb
jbe
push
jle
pop
xchg
mov
test
and
mov
add
jp
adc
and
fs
sub
test
cltd
fists
and
push
jb
pop
push
mov
lea
insl
mov
mov
cmpsb
scas
xor
mov
lret
in
jb
jmp
jno
or
repnz
adc
push
sub
scas
or
enter
or
mov
pop
in
jb
cmp
inc
add
test
inc
pop
pop
dec
test
addb
insb
pop
outsl
or
jno
jbe
jmp
test
cltd
pop
push
mov
sub
mov
nop
mov
mov
jb
fnstsw
out
scas
xor
cmp
clc
push
les
pop
ja
or
adc
inc
and
es
sub
and
xor
test
inc
push
enter
or
pop
fs
sub
test
inc
jae
sbbb
and
test
inc
stos
enter
or
mov
test
inc
enter
or
fisubs
in
nop
out
arpl
int3
mov
iret
data16
es
pop
xor
pop
and
dec
and
cmpsl
sbb
adc
adc
test
and
jb,pt
inc
mov
dec
scas
dec
push
push
push
sub
pop
push
or
jno
mov
test
pushf
adc
test
sub
pop
xlat
and
and
jb
push
push
inc
and
xchg
cmp
lret
in
jb
push
mov
popa
scas
push
push
arpl
dec
movsl
cmp
jl
and
xor
mov
or
adc
pop
sbb
and
fs
xor
enter
or
dec
fs
sub
test
inc
pop
enter
or
jb
jbe
jp
nop
jle
adcb
mov
mov
or
cwtl
fs
sub
test
inc
mov
mov
mov
int
flds
push
inc
out
mov
arpl
scas
adc
lock
hlt
fs
sub
inc
and
and
push
sub
test
inc
sbb
or
es
sub
test
inc
pop
enter
or
pusha
arpl
test
gs
sbb
lahf
leave
in
ja
push
push
js
sub
mov
xchg
lret
in
sub
imul
and
mov
sbb
mov
leave
inc
fstpl
cmc
lret
sub
add
sub
test
shlb
ljmp
scas
or
lret
push
add
mov
in
jb
sbb
loope
cmp
scas
xor
cmp
push
push
enter
sbb
pop
je
and
sub
test
nop
dec
in
jb
lcall
test
loope
iret
loop
or
sub
or
popa
dec
jle
gs
pop
cmp
scas
xor
cmp
fs
lret
in
sub
push
sahf
jge
mov
in
sub
test
push
pop
pop
les
jb
fstpt
aam
in
in
jb
idivl
std
scas
aas
sub
es
inc
adc
push
sbb
nop
dec
mov
push
inc
insb
xchg
scas
mov
and
imul
scas
pop
push
mov
xchg
scas
cmp
mov
aam
lret
in
jb
out
mov
stc
scas
push
push
sti
pop
and
fs
add
sub
mov
xchg
xchg
mov
cmp
cltd
inc
or
push
gs
jb
pusha
mov
insb
scas
je
jne
jl
test
push
inc
mov
sub
test
in
jb
mov
push
mov
inc
ret
pop
lret
in
sub
test
pop
or
test
push
inc
push
jb
and
sub
xor
scas
dec
negl
scas
pop
inc
jb
xchg
js
xchg
xchg
lret
in
jb
lahf
mov
movsl
scas
push
inc
mov
mov
mov
int
aad
nop
fdivs
mov
or
pop
and
inc
sub
add
sbb
enter
or
dec
fs
sub
test
inc
push
insl
pop
jb
and
jge
xchg
adc
or
adc
mov
xor
and
mov
sbb
or
fldl
stos
rorb
and
dec
cmp
sub
jl
push
rorb
nop
fdivs
sub
and
ss
sub
ret
call
rcll
insb
sub
mov
out
sub
repnz
jb
clc
mov
scas
pop
and
sub
ret
pop
sbb
and
test
or
cmp
inc
test
inc
push
enter
or
popa
fs
test
inc
jne
jle
test
and
test
inc
movsl
enter
or
mov
mov
shlb
int3
pop
rorl
and
test
fdivl
sbb
sub
or
cli
pop
decb
adc
sub
fbld
adc
push
mov
push
inc
sub
cs
xor
and
cmp
test
inc
dec
enter
or
pop
arpl
test
inc
jl
jle
orl
xchg
mov
push
inc
xchg
enter
or
lods
fs
mov
ret
enter
or
add
push
in
jb
icebp
adc
aad
cmc
pop
fcoml
sub
xchg
or
cltd
adcb
adc
and
sub
xor
inc
in
jb
cmp
pop
ds
gs
scas
outsl
inc
dec
mov
pop
or
imul
nop
je
hlt
dec
ja
pop
push
mov
sub
lret
in
jb
loop
push
out
pop
hlt
dec
pop
push
and
notb
pop
decb
adc
sub
xchg
pop
push
sub
mov
xchg
ss
cmp
in
sub
addl
test
push
pop
pop
sub
nop
jbe
xchg
push
inc
mov
pop
xor
inc
and
movsl
adc
sbb
xlat
ret
call
clc
push
push
sub
adc
cmc
or
cld
pop
add
test
or
enter
or
add
std
and
lret
in
jb
inc
mov
push
inc
adc
pop
sub
jb
in
jb
mov
lcall
mov
xchg
mov
rol
mov
fisubrs
and
call
and
push
inc
xchg
mull
fildll
mov
push
fistpll
test
pop
loop
push
push
sbb
sub
sub
aas
in
sub
jns
pop
and
sub
push
sub
xchg
pop
dec
lret
in
jb
outsb
mov
jne
jl
js
xchg
jp
enter
or
xchg
nop
test
inc
sahf
enter
dec
ljmp
in
sub
test
jp
xchg
push
inc
dec
lret
xor
fcoml
push
jecxz
mov
pop
cli
or
fwait
cld
mov
xchg
outsl
push
ss
in
jb
cmp
sub
or
inc
pop
in
jb
push
sub
xor
mov
xchg
push
xchg
xchg
pop
lret
in
jb
scas
mov
loop
or
leave
shrb
test
inc
stc
enter
xor
push
inc
sbb
and
or
sub
jo
nop
jbe
jl
inc
or
pop
mov
and
nop
cmpsb
mov
push
inc
mov
mov
mov
mov
les
enter
or
in
ljmp
notl
and
movl
adc
pop
or
or
and
nop
daa
mov
push
inc
sub
cs
xor
pop
fisubrl
cmp
xchg
dec
and
push
sub
push
sub
sub
xchg
arpl
aad
adc
or
xchg
pop
xchg
xchg
sub
fwait
push
repz
and
push
and
fs
in
test
push
cli
mov
rclb
mov
sbb
pop
sub
test
inc
xor
ss
cmp
and
fs
sub
test
inc
pop
enter
or
fs
sub
test
inc
mov
xchg
mov
in
jb
mov
dec
lret
scas
push
inc
iret
xchg
dec
sub
pop
in
ja
mov
mov
mov
pop
pop
cmc
scas
sub
xor
add
test
inc
sbb
fisubs
adc
aaa
sub
cmp
xor
adc
fwait
and
nop
dec
movsb
lods
cld
ds
ret
and
push
jb
push
xor
push
mov
push
or
pop
inc
pop
cmp
xchg
pop
inc
insb
enter
or
jl
dec
test
in
sub
movsl
push
push
sahf
in
jno
pop
and
xor
loope
lret
out
fcompl
dec
dec
int3
in
adc
out
jb
icebp
push
inc
clc
les
xor
or
enter
or
sbb
sub
xchg
jno
lret
in
jb
mov
xchg
scas
gs
popf
outsl
sub
movsl
mov
or
mov
aam
aad
frstor
in
jg
jge
call
and
out
sub
ds
mov
ss
pop
jb
push
push
sti
or
adc
sbb
nop
and
enter
or
sub
push
xchg
pop
and
pop
sub
mov
ds
pop
dec
mov
push
push
mov
xchg
jo
int3
jp
shrb
popa
push
sbb
fiadds
push
inc
out
enter
or
clc
fs
sub
inc
aaa
mov
pop
or
sbb
daa
push
inc
sub
cs
xor
jle
nop
ss
push
inc
cmp
or
dec
fs
sub
test
inc
insl
enter
or
andl
mov
push
inc
popf
enter
or
mov
mov
shlb
enter
and
shrl
loop
inc
jmp
out
pop
lock
repz
sub
test
adc
cmp
xchg
or
enter
or
sub
dec
sub
dec
jb
push
mov
pop
scas
push
push
bound
gs
imul
sub
jle
or
test
inc
stos
enter
or
mov
test
or
or
fs
adc
and
sub
xchg
xor
cmp
in
jb
dec
mov
pop
scas
push
bound
imul
jb
jno
inc
je
jle
orl
sub
test
inc
aam
loop
sub
sbb
sub
stc
jb
mov
roll
aam
cmp
or
push
sub
es
cs
out
push
inc
pop
pop
dec
scas
gs
pop
outsl
sub
ret
inc
or
sbbl
and
test
mov
jb
pop
and
xchg
inc
in
jb
repnz
ljmp
mov
pop
adc
sub
sub
push
data16
pop
sbb
scas
and
leave
jbe
hlt
std
dec
aas
or
clc
adc
push
cmp
inc
dec
or
sbb
test
inc
sub
xor
sub
test
inc
dec
enter
or
bound
mov
mov
mov
mov
mov
and
or
and
mov
inc
mov
push
sub
pop
xchg
lds
int
in
jb
rcll
bound
jecxz
out
and
fs
sub
test
inc
cld
enter
xor
dec
inc
inc
or
and
test
cmp
inc
and
push
sub
jb
jae
pop
jnp
sub
cmp
xchg
push
lret
in
jb
cmpsb
mov
mov
mov
push
inc
fcmovne
out
mov
or
sub
adc
or
dec
dec
sbb
push
pop
sbb
and
xchg
and
pop
and
scas
sub
xor
loopne
lret
in
jb
repnz
scas
jnp
add
mov
adc
enter
or
and
aas
cmp
dec
test
pop
pop
test
arpl
outsl
mov
subb
xchg
push
xchg
lcall
test
mov
movsl
mov
or
rcrb
add
add
and
inc
fcomps
enter
push
jl
test
push
fcompl
enter
or
sarl
xchg
xlat
inc
lret
in
jb
jecxz
arpl
pop
insl
jmp
ja
out
sahf
xchg
icebp
ret
xor
repz
push
and
inc
inc
push
jb
or
adc
sbb
xchg
mov
adc
es
xor
dec
enter
or
push
adc
outsl
pop
pop
jnp
and
sub
xchg
lea
or
mov
mov
fnstsw
pop
clc
mov
mov
lock
cmp
fmull
ret
xchg
iret
les
lds
leave
jb
int
rcrl
xlat
test
jno
test
fistpll
loopne
nop
in
push
loop
adc
inc
out
in
shr
push
and
dec
adc
pop
inc
pop
mov
pop
cmp
sbb
and
fs
sub
and
inc
mov
pop
scas
sub
arpl
sub
xchg
jbe
lret
in
jb
cmpsb
mov
mov
jl
mov
and
fsubrs
test
and
push
test
inc
fsubp
outsb
sub
test
inc
xchg
mov
or
cwtl
fs
sub
test
inc
test
lods
pop
scas
or
mov
mov
int3
mov
push
inc
ror
rcrl
or
add
push
in
jb
repz
testl
pmaxsw
pop
sahf
xchg
sbb
push
sub
and
gs
sub
pop
test
sub
xor
cmp
test
mov
test
popf
push
inc
or
lret
in
sub
in
lods
sti
or
lods
and
inc
enter
mov
adc
mov
inc
in
jmp
cmc
or
add
or
inc
push
enter
or
sub
xor
pop
cmp
and
inc
sub
test
inc
push
enter
or
pop
fs
sub
test
inc
insl
enter
or
js
jnp
jg
nop
xorl
lea
or
xchg
fs
mov
scas
pop
mov
and
test
inc
enter
or
fldt
in
inc
out
jmp
in
or
lock
sub
test
and
inc
inc
push
sub
test
inc
adc
pop
pop
sbb
and
and
sub
xor
aaa
or
cmp
inc
test
inc
dec
enter
or
pop
fs
sub
test
inc
push
outsb
pop
jno
and
js
jnp
nop
jg
adcl
mov
mov
or
xchg
fs
sub
test
inc
mov
or
scas
fs
mov
nop
mov
mov
or
lret
shrb
test
inc
fmulp
loopne
jecxz
and
fs
sub
test
inc
inc
add
pop
test
inc
adc
adc
sbb
and
push
inc
sub
xor
sub
test
inc
inc
enter
or
dec
bound
test
inc
mov
mov
into
dec
inc
jle
pop
or
ficompl
scas
sub
xor
adc
push
ljmp
sbb
dec
test
inc
insb
enter
or
mov
ret
movsl
notb
mov
aaa
ret
mov
iret
scas
push
inc
xlat
xchg
out
sub
push
xchg
mulb
lret
loop
dec
sbb
adc
daa
pop
sub
and
outsl
shlb
inc
mov
dec
scas
sub
xor
pop
cmp
imul
mov
jg
lea
test
xchg
xchg
push
test
sbb
sub
ret
ss
lret
push
adc
out
sub
mov
hlt
or
pop
jae
adcl
push
es
sub
xchg
das
inc
lret
in
cmp
mov
pop
and
sub
mov
sub
lret
in
jb
mov
push
scas
jl
sahf
xchg
in
enter
or
hlt
scas
adc
pop
cmp
sbb
pop
dec
mov
sub
subl
push
dec
pop
and
sub
test
xor
jp
pop
lds
pop
nop
mov
lahf
scas
xor
rorl
loopne
addr16
xchg
ljmp
dec
cmp
or
or
or
sbb
push
test
inc
aaa
xchg
mov
sub
xchg
dec
and
dec
push
adc
push
pop
pop
pop
scas
and
sub
dec
mov
lea
lret
out
stos
sahf
nop
push
pushf
pop
sub
lret
in
sub
cmpl
adc
loop
in
sub
xor
mov
pop
fsubrl
push
movsl
adc
mov
das
scas
xor
mov
pop
inc
or
dec
gs
je
and
pop
and
sub
jne
aad
adc
lds
enter
pop
cmp
iret
push
sub
pop
nop
ljmp
test
add
jp
or
adc
sbb
or
sub
sub
cmp
adc
bound
lret
pop
xchg
andl
xchg
in
jb
mov
cmpsb
scas
push
push
cmpsl
pop
sub
and
pop
push
mov
sub
lret
xor
int3
ds
rcl
or
fldenv
xor
and
xor
or
and
xor
inc
aaa
enter
or
dec
fs
sub
test
push
and
mov
scas
and
enter
mov
push
push
cmpsb
sub
scas
xor
rorl
jb
fstpt
outsb
out
mull
sbb
cmc
and
std
sub
mov
jo
btc
in
sub
movsl
sub
sub
lret
in
jb
dec
mov
pop
scas
pop
push
bound
jb
xchg
js
enter
aam
fxch
nop
sbb
popf
jb
cmpsl
adc
icebp
push
mov
sub
lret
in
sub
repnz
icebp
inc
cli
les
push
sub
scas
or
or
sbb
and
sub
aaa
test
inc
cmp
pop
dec
mov
push
test
fldl
jae
rcr
loopne
mov
imul
jne
xchg
jbe
enter
popf
test
fwait
stos
jp
xchg
subl
cmc
inc
lret
in
jb
mov
imul
and
in
sub
test
inc
aad
in
sti
inc
adc
out
inc
inc
lock
push
sub
or
enter
data16
sub
xor
mov
pop
inc
pop
pop
dec
scas
sub
xor
push
cmp
insl
push
in
jno
and
jmp
test
inc
cmp
inc
pop
inc
or
dec
fs
sub
test
inc
enterw
or
jns
subb
nop
mov
enter
or
mov
mov
mov
push
inc
aam
fistpl
or
cmc
bound
push
adc
push
enter
or
sbb
test
std
or
ss
sub
pop
and
pop
dec
adc
scas
and
pop
sub
aas
sub
mov
push
push
enter
pop
fimull
and
dec
jbe
dec
pop
in
jb
cmc
mov
ljmp
push
adc
pop
mov
push
inc
jne
xchg
or
scas
push
push
test
nop
mov
mov
mov
int
sahf
aad
push
jb
adc
scas
sub
xor
add
movl
sub
test
inc
sub
sub
or
ss
cmp
inc
test
fcompl
xlat
inc
flds
lahf
inc
and
jb
dec
adc
fisttpll
push
fwait
aad
and
dec
sub
push
sub
pop
and
inc
sub
push
pop
pop
pop
jl
xor
push
push
pop
les
test
push
insb
push
inc
jl
lea
test
jb
sahf
push
inc
cmpsb
lret
jno
push
and
test
inc
mov
dec
sub
lds
test
sbb
inc
cmc
les
ja
or
push
inc
adc
sbb
or
sub
xor
es
ds
lret
in
jb
push
mov
xchg
ja
mov
jb
jae
pop
jbe
out
xchg
js
lret
in
jb
stos
mov
mov
dec
push
mov
sub
pop
xchg
les
loop
in
ja
popa
pop
sbb
call
cmc
cmp
pop
or
test
inc
inc
add
add
push
inc
dec
enter
or
pop
outsl
jo
insb
push
inc
jo
ja
popf
or
add
push
lret
in
sub
or
scas
push
and
mov
mov
mov
mov
pop
enter
pop
push
push
insb
sbb
test
and
fcomps
push
outsb
adc
clc
jl
test
pop
and
jne
jle
js
adc
mov
and
lea
and
push
inc
xchg
mov
xchg
les
xchg
ret
repnz
inc
lds
and
shrb
scas
insl
push
std
ja
sub
ficomps
dec
pop
cmp
dec
pop
dec
enter
inc
dec
test
add
pop
mov
jnp
or
mov
mov
les
xchg
sub
test
cli
pop
in
gs
and
mov
sub
adc
mov
in
sub
out
sub
scas
or
lret
jno
push
and
pushl
add
or
pop
dec
ss
or
or
or
and
adc
sbb
lret
in
jb
push
mov
popa
scas
inc
push
imul
dec
leave
pushf
js
pop
subb
sahf
xor
scas
dec
in
sub
inc
mov
sub
inc
xchg
in
lret
in
jb
jmp
push
scas
jl
lock
xchg
testl
pop
test
or
enter
or
sub
sub
push
inc
xor
xor
aaa
or
cmp
inc
test
inc
dec
enter
or
push
fs
sub
test
inc
fs
or
outsl
jo
imul
insb
enter
or
outsl
fs
jno
nop
jb
jae
inc
je
jne
js
and
jge
test
push
decl
and
test
inc
lahf
enter
or
test
test
stos
mov
push
inc
mov
mov
mov
shrl
nop
ret
mov
push
inc
pop
iret
or
shll
roll
push
inc
fxch
ficompl
or
fisubs
jmp
nop
in
mov
push
inc
cli
les
pop
sub
push
push
inc
es
or
outsb
sbb
dec
scas
and
rcrb
icebp
loope
or
pop
sub
test
push
imul
and
test
sub
lret
in
jb
cmpsl
mov
lods
scas
pop
jp
mov
sbb
lret
fnstenv
icebp
mov
imulb
jo
pop
jle
jb
or
sti
or
push
dec
xchg
jb
xor
xor
aas
cmp
dec
push
inc
push
sub
dec
addr16
shl
mulb
jmp
test
scas
or
lahf
int3
sbb
out
cmpsl
cmc
xor
sbb
pop
loope
and
test
sub
scas
or
lahf
aam
and
nop
mov
adc
or
and
test
inc
loope
jle
mov
or
es
fisttps
and
fs
and
add
aas
test
sbb
lret
in
sub
test
enter
or
xchg
ret
push
inc
ret
enter
push
adc
lahf
or
mov
or
pop
push
or
test
test
and
pop
or
jb
sbb
adc
lahf
sub
test
test
sbb
add
or
adc
dec
mov
dec
ljmp
mov
enter
test
sub
or
lahf
aam
and
je
mov
rolb
and
sub
and
adc
sub
mov
or
and
jp
push
sbb
xor
or
test
test
and
enter
or
cwtl
push
sbb
pop
jb
sbb
mov
and
lods
movsl
inc
mull
pop
adc
sub
or
sub
inc
stos
adc
test
sbb
sbb
sbb
inc
into
enter
or
jns
sbb
or
xchg
inc
sbb
push
push
or
sub
sub
adc
sbb
std
push
sbb
sbb
adc
pop
xor
scas
cmp
into
inc
and
bound
sub
aaa
sbb
or
cmp
inc
and
iret
mov
push
inc
ror
fs
xchg
sbb
xchg
or
jge
addl
sub
test
lret
in
and
or
test
sbb
lret
in
jb
mov
and
or
and
nop
push
sub
aam
cmp
in
sub
test
out
pop
inc
out
jb
lock
andl
and
cli
movsb
test
pusha
sub
test
cli
or
stc
fs
sub
test
and
nop
cmpsl
repz
sbb
lods
or
mov
dec
and
jmp
and
fs
sub
test
popa
and
pusha
addr16
test
jbe
sub
or
lahf
aam
and
leave
fs
inc
sbb
and
fs
or
or
or
nop
or
inc
mov
mov
or
sub
in
dec
mov
loopne
call
and
mov
pop
sub
stos
sbb
std
inc
sbb
jg
test
scas
and
sub
and
sub
sub
or
adc
mov
sub
aas
test
sbb
test
push
stc
or
popf
inc
push
popa
inc
sbb
jmp
test
loopne
filds
adc
das
test
push
and
lods
mov
xchg
sbb
popa
inc
xor
call
and
or
and
mov
or
testb
xchg
pop
xchg
pop
and
les
das
inc
xor
sub
lods
or
cmp
sbb
xor
and
pop
add
adc
push
test
fildll
lods
or
jo
xor
sbb
fdivrs
inc
sbb
push
rcrl
scas
das
push
loopne
sub
inc
mov
or
aaa
push
cli
pop
or
lret
loope
push
loopne
and
fs
and
cmp
sub
repz
and
subb
mov
aad
xlat
test
sub
mov
stos
and
pop
pushf
or
or
mov
and
sub
nop
cmpsl
cmc
loop
and
cmp
add
jg
add
inc
ss
or
mov
dec
mov
or
outsb
and
inc
aas
mov
or
ljmp
mov
stos
adc
cmpsb
enter
inc
adc
or
cmp
lock
xlat
inc
push
pop
or
test
fwait
adc
inc
addb
inc
inc
add
ss
inc
mov
or
pop
and
push
inc
pop
jp
adc
into
sbb
int
and
push
inc
xchg
adc
dec
mov
or
mov
cmp
mov
mov
or
je
jb
or
nop
inc
cmp
cmp
inc
cmp
dec
adc
loope
and
dec
ljmp
cmp
test
test
and
push
dec
inc
push
jb
pop
adc
mov
and
dec
ljmp
mov
fisttps
mov
push
mov
or
xor
mov
xor
cli
sbb
cld
je
dec
decb
outsl
adc
and
or
jb
mov
popa
mov
adc
push
cli
test
fimull
mov
xlat
xor
cmp
fadds
ljmp
sbb
aam
jecxz
mov
xor
mov
sub
dec
ljmp
xchg
pop
or
and
push
test
push
cli
mov
std
pop
or
mov
push
sub
and
les
pop
or
lds
aas
test
sbb
pop
pop
inc
pop
jb
mov
rcrb
mov
ljmp
xor
std
cmp
sbb
pop
or
in
xchg
xor
enter
jb
mov
inc
mov
pop
pop
push
push
pop
or
adc
xor
loopne
cmp
or
and
cmc
dec
subb
and
and
cmpsl
add
jmp
pop
rcrb
inc
mov
add
rorb
xorb
or
push
xor
push
fadds
and
xor
lret
fadds
adc
xchg
lahf
in
xor
xor
adc
inc
jno
outsl
stos
xor
cmp
and
icebp
les
mov
and
push
out
subb
sbb
inc
add
jo
dec
xchg
movsb
and
shll
adc
inc
xchg
mov
mov
test
mov
push
fsubs
inc
jl
inc
sub
xchg
sbb
xchg
adc
pusha
mov
sbb
push
leave
lahf
mov
mov
xor
sbb
push
shlb
sbb
sbb
xor
adcb
adc
lock
fcoms
out
push
rcll
add
add
nop
cmp
mov
adc
and
xor
add
xor
out
xchg
mov
loopne
mov
les
or
fwait
loope
sbbb
cmp
jae
aaa
fadd
xor
lods
push
mov
or
adc
ret
dec
sti
and
shlb
inc
mov
inc
xlat
aam
fldt
pop
sub
rorb
pusha
cmp
lods
cmc
or
je
or
stc
adc
arpl
adc
popf
mov
push
arpl
adc
or
jle
in
xor
aaa
cmpsl
add
std
xchg
rcll
adc
lahf
aad
mov
out
push
push
mov
in
sbb
and
push
incl
enter
bound
pop
cmp
mov
roll
add
add
add
lcall
inc
test
xor
add
and
mov
push
sub
sub
dec
out
xor
orb
inc
out
sub
pusha
into
jo
in
cmpb
cltd
out
shl
inc
and
outsl
sbb
fs
inc
push
mov
pusha
shlb
in
nop
je
rorb
testb
push
loope
jle
adc
jp
pushf
adc
cld
mov
sbb
and
leave
enter
xor
add
stc
cwtl
adc
mov
enter
xchg
ret
gs
das
inc
adc
add
mov
xor
mov
dec
roll
cmp
mov
pop
std
sub
mov
or
stos
test
mov
add
push
add
imul
push
bound
inc
jne
enter
fcoml
adc
add
mov
or
and
sbb
cmp
andb
adc
sti
mov
mov
pop
in
addb
add
xchg
loopne
int
dec
fldl
je
add
jle
adc
std
and
mov
lret
hlt
or
or
mov
cmp
jo
cwtl
and
loopne
add
les
sbb
mov
adc
andb
or
adc
push
fs
adc
xor
mov
mov
add
add
pop
xor
shll
faddl
xchg
adc
jne
dec
inc
cmp
clc
xlat
cmp
std
insb
leave
push
jg
adc
and
xor
lods
aam
adc
xchg
push
subb
cmpb
xor
negb
pushf
shlb
dec
popa
js
lock
inc
add
adc
push
mov
and
inc
shll
sbb
stc
mov
push
and
inc
inc
rorb
insb
into
mov
push
sbb
or
adc
subl
sbb
adc
mov
mov
jae
mov
clc
outsl
and
jo
add
in
and
clc
inc
jecxz
mov
inc
mov
jge
loop
or
mov
adc
and
inc
adcb
test
jno
popa
mov
pop
adc
fiaddl
in
subb
imul
add
xor
and
add
cld
rolb
roll
adc
jl
mov
mov
int3
jno
shlb
inc
mov
mov
nop
sub
pusha
cli
adc
jmp
int
jmp
or
pop
pop
mov
lds
pusha
mov
es
xor
shlb
add
sub
xchg
lock
div
xchg
addr16
mov
mov
test
addb
push
xchg
inc
push
aam
adc
or
clc
movb
push
and
int
in
xor
arpl
cld
push
fcoms
clc
inc
push
dec
inc
fcomps
inc
jae
inc
jl
inc
adc
inc
fisttpl
and
stc
and
sbb
inc
pusha
sbb
or
xchg
or
jne
les
orb
mov
test
insb
in
and
jns
push
mov
or
stos
or
sub
add
jns
pop
jl
adc
hlt
mov
sub
and
dec
adc
enter
mov
mov
adc
add
sbbb
inc
add
cwtl
inc
dec
cmp
sub
dec
pop
clc
xor
insb
mov
dec
lods
or
mov
test
pusha
loope
mov
xchg
jbe
test
push
flds
and
adc
ds
cltd
into
xchg
sub
xor
rolb
clc
loop
js
pop
or
and
and
loopne
lds
gs
mov
sbb
jbe
ret
inc
cwtl
mov
add
and
rcr
cs
mov
xchg
adc
inc
and
popa
je
fstl
decb
lock
xor
in
subb
and
dec
dec
ds
test
pop
adc
adc
or
or
dec
push
dec
sub
mov
cld
add
xchg
adc
je
and
mov
pop
pop
sub
les
enter
dec
pop
dec
mov
sbb
dec
cwtl
stos
cwtl
mov
fisttpll
pop
sub
movsb
mov
dec
addl
fcompl
cmpb
xorl
push
cwtl
dec
cmp
push
mov
push
inc
or
adc
cs
stc
in
in
test
push
and
fsubrl
mov
mov
adc
xor
xchg
roll
xor
jnp
push
faddl
mov
adc
les
sbb
adc
xchg
add
rorl
xchg
adc
adc
adc
lods
and
mov
inc
popa
insb
test
xor
sub
clc
dec
in
adc
fwait
sub
and
xor
adc
sbbb
push
mov
adc
xchg
shl
xchg
js
and
mov
dec
neg
nop
sbb
mov
xor
pop
adcl
push
mov
jge
and
test
rolb
nop
and
push
fcomps
enter
sbb
add
mov
call
xor
inc
loopne
mov
inc
or
rorl
pop
or
push
or
mov
adcb
inc
inc
addb
cmp
adc
xchg
hlt
or
mov
or
push
subl
mov
mov
pop
push
add
add
dec
sub
and
sub
or
orl
test
lds
fsubs
movsb
cmpsl
pop
or
pop
push
pop
add
pop
push
pusha
nop
pushf
cli
pop
xor
mov
or
pop
ds
and
sub
nop
and
push
or
mov
popf
push
es
repnz
mov
cmp
inc
daa
mov
popa
sbb
adc
lret
jmp
mov
and
in
clc
mov
cltd
test
mov
cmp
adc
mov
mov
std
daa
mov
sbb
stc
adc
lcall
stos
call
fs
inc
sbb
dec
push
aas
sub
and
nop
movsl
jp
or
or
dec
std
cmp
inc
and
lea
add
push
or
adc
push
xor
in
sub
inc
lea
aad
in
push
dec
rorl
popa
sub
push
dec
dec
lret
push
sahf
enter
or
or
or
lock
pop
sarb
inc
fdivrs
movsl
shlb
xchg
and
or
clc
hlt
dec
ret
bound
sbb
js
mov
or
bound
cwtl
push
jmp
call
dec
loop
sbb
les
mov
pop
fildll
adc
stos
clc
rclb
inc
add
loopne
mov
fldcw
cld
and
push
xchg
ret
mov
push
xchg
and
xchg
clc
stos
adc
stc
push
fadds
cli
insl
test
mov
jle
mov
sbb
sar
push
adc
sbb
clc
aaa
pushf
cwtl
push
icebp
dec
pop
fcomps
fdiv
mov
aam
test
stos
or
cmpsl
or
inc
into
cmc
loop
mov
es
dec
idivb
mov
and
mov
push
clc
faddl
fdivrs
pop
mov
push
movb
and
cmp
cmp
mov
jbe
jne
jecxz
loopne
in
subb
mov
lock
inc
xor
mov
fiadds
add
adc
ljmp
sbb
and
nop
sbb
pop
adc
out
bswap
push
dec
mov
mov
fdivl
push
xchg
push
jl
daa
mov
jle
mov
adc
clc
test
or
mov
mov
lcall
test
add
mov
or
jg
pop
loopne
mov
std
jl
gs
scas
enter
popf
nop
jp
push
clc
fdivr
adcb
loopne
jle
lock
fdivrl
mov
leave
xor
clc
out
enter
push
sub
stos
icebp
clc
jae
out
dec
iret
mov
sub
add
pop
cmp
inc
mov
mov
sub
or
adc
outsl
inc
sub
nop
je
test
movsl
fldt
fiadds
push
lahf
push
push
in
lock
std
dec
mov
jbe
out
adc
sub
repnz
js
and
hlt
into
test
cmpsb
js
int3
inc
or
push
ficoml
mov
lcall
clc
mov
ffreep
xchg
fucomip
or
aam
xor
pop
adc
scas
aad
mov
inc
xchg
in
dec
pop
inc
pop
repnz
aas
jns
sbb
cmp
adc
mov
clc
in
inc
mov
push
in
jle
fcom
and
lcall
arpl
or
sbb
mov
lods
inc
enter
hlt
and
add
jae
hlt
mov
adc
in
ss
mov
cmp
mov
xchg
in
push
repnz
mov
inc
add
inc
mov
xchg
pusha
mov
pop
or
mov
test
rcl
movsl
xchg
or
cld
aas
dec
pusha
test
mov
pop
xchg
sub
lret
sub
into
aam
repnz
cs
xchg
test
jmp
pushf
idivl
negl
repnz
dec
push
fidivs
inc
mov
jo
js
les
sub
repnz
out
pop
mov
jmp
and
lret
push
arpl
add
push
nop
dec
pushl
jb
call
mov
shll
push
mov
pop
mov
add
pop
inc
shl
add
mov
fcom
outsl
pop
shl
inc
repz
hlt
lret
lret
test
sbb
or
jp
jmp
push
pop
add
stos
bound
add
jb
inc
push
mov
fcomps
mov
and
inc
imull
loop
sbb
jns
adc
out
push
adc
insl
shrb
fcoms
mov
adc
in
orb
adc
lods
mull
lods
subb
jbe
mov
or
test
inc
or
xor
pop
add
mov
push
and
or
xor
nop
lret
dec
push
daa
in
mov
call
and
push
sbb
and
stos
std
scas
jno
pop
ljmp
std
jns
mov
dec
and
cmp
std
sbb
cmc
js
mov
and
int
push
shrb
pusha
notb
lock
sub
loopne
dec
push
and
mov
mov
pop
jbe
test
sub
and
xchg
icebp
clc
pop
adc
mov
scas
lock
lock
cmp
fdiv
mov
jp
cmp
mov
mov
shrl
pusha
pop
mov
pop
mov
repnz
nop
in
mov
out
adc
fdivrs
inc
and
sub
inc
nop
test
xchg
push
inc
stc
imul
out
push
clc
test
inc
or
fimull
pop
nop
cli
xlat
cmp
pop
inc
mov
sar
arpl
mov
pop
sub
and
clc
decl
shl
sbb
je
mov
and
dec
in
or
sbb
xchg
sub
push
pop
cli
gs
inc
xor
pop
psrld
rorl
inc
outsl
sarb
and
leave
adc
repnz
pop
in
push
ja
sti
mov
mov
std
lods
adc
pusha
das
and
gs
sub
adc
jns
sbb
sahf
jge
jb
enter
and
scas
outsb
test
imul
jl
scas
jle
push
cli
adc
pop
aas
push
loope
jne
or
xchg
jle
ja
lods
out
sub
mov
xchg
mov
xchg
mov
pop
mov
mov
inc
decb
add
sub
cmc
out
sahf
js
fistl
ret
or
outsb
adc
cmp
push
movsl
jp
sbb
outsb
and
or
scas
jg
cmc
stos
into
or
pop
mov
out
jnp
lods
jle
inc
mov
mov
mov
daa
clc
cld
mov
fidivl
sbb
cmp
push
dec
dec
push
cld
jb
push
adc
outsl
sub
dec
lahf
repz
jge
jle
push
scas
mov
or
sub
inc
xlat
lods
mov
sub
enter
pop
out
mov
jge
adc
or
cld
clc
mov
xor
jmp
cltd
inc
jle
cmp
sbb
sub
test
adc
mov
clc
adc
loopne
nop
je
sbb
push
lahf
mov
pop
or
enter
aaa
fadd
cmp
lods
adc
call
inc
mov
mov
sub
fstl
dec
fisubrs
or
fcoms
daa
fcmovne
cmc
imul
les
mov
mov
lock
jl
jp
pusha
hlt
call
mov
sub
pop
sub
cmc
lcall
test
add
in
inc
std
addr16
mov
ds
jmp
nop
fs
leave
clc
fists
lea
mov
mov
mov
jmp
test
pop
ficoml
mov
mov
jg
addr16
cli
ja
mov
popf
mov
nop
ss
leave
lock
daa
lahf
dec
in
aas
dec
scas
sub
fdivr
dec
mov
mov
stc
jnp
nop
adc
add
pop
nop
and
push
jle
clc
ja
je
jmp
ret
leave
or
jns
fucom
outsb
test
fcom
std
lock
mov
push
adc
rcrb
fcmovbe
lock
sub
loop
cmp
mov
lock
add
and
jmp
xor
mov
jo
js
mov
stos
or
fwait
pusha
rorl
lret
mov
ljmp
add
jp
dec
aad
test
push
sub
hlt
ficompl
call
shlb
or
xchg
fwait
mov
mov
shrb
test
scas
addr16
test
or
cmp
pop
sarl
ljmp
lods
dec
dec
and
imull
nop
inc
and
pop
movsl
pop
enter
leave
cld
mov
jle
in
enter
mov
pop
mov
lahf
cmp
lods
mov
sub
stos
or
mov
out
sub
mov
ficompl
outsb
jp
les
testb
cli
jne
sbb
sub
test
mov
test
in
imulb
loop
sbb
repnz
ds
sub
sub
mov
daa
dec
dec
in
ds
or
iret
mov
daa
fisttpl
pop
xchg
incb
in
mov
inc
mov
mov
pop
dec
fdecstp
add
cli
lds
js
sarb
xchg
dec
push
mov
cmp
mov
je
push
icebp
mov
hlt
scas
cs
mov
enter
mov
mov
mov
pop
mov
out
mov
shr
mov
mov
call
xchg
inc
cli
out
fiadds
enter
pop
add
fistps
dec
stc
daa
pop
dec
icebp
or
mov
and
outsl
and
jp
mov
nop
mov
jnp
sub
jle
daa
scas
pop
subb
sub
fsubr
jo
and
mov
in
jg
and
std
in
jnp
lods
lock
fsubs
add
inc
fnstsw
das
rorb
hlt
jp
das
ljmp
nop
loop
addr16
movsl
clc
rcr
mov
pushf
loope
lds
movsb
out
jle
mov
push
inc
loopne
mov
js
push
mov
mov
pop
adc
add
dec
sub
fwait
enter
mov
dec
xchg
ljmp
cmp
sub
lock
push
xchg
xor
std
inc
inc
repnz
adc
scas
sub
fcom
cmpsb
add
xchg
mov
xchg
repz
fdivl
cli
push
adc
cld
mov
movsl
aaa
xor
cmp
fimuls
cmp
cmp
and
pop
stos
push
jns
in
repnz
pop
dec
mov
dec
cmp
in
clc
xchg
sub
or
mov
stos
mov
add
cld
cli
sahf
dec
mov
rorl
lds
add
fcoms
enter
cld
mov
push
dec
push
mov
mov
movsl
pop
enter
ret
jg
gs
jns
push
mov
push
les
sbb
daa
inc
mov
movsb
ds
xor
das
mov
movsb
mov
mov
dec
mov
stos
cmp
mov
inc
push
mov
pop
mov
xchg
lock
std
xor
mov
mov
call
ljmp
mov
roll
mov
scas
dec
scas
jnp
xchg
repnz
les
daa
cmp
mov
movsb
scas
iret
fsubr
outsb
in
cmp
and
mov
xchg
ljmp
shr
imul
fcomps
adc
adc
sub
fists
push
xchg
sub
dec
mov
stos
aas
js
dec
or
jne
clc
push
sahf
add
add
shl
lock
sub
lds
fcmove
bnd
fcoml
xchg
add
shl
sahf
inc
sub
mov
fwait
test
lahf
test
movsl
icebp
add
fstl
sub
mov
jmp
je
push
jmp
cmp
clc
or
sbb
arpl
pop
lahf
js
test
dec
mov
hlt
test
adc
insl
nop
and
adc
jbe
mov
lock
sub
or
inc
scas
fcomps
pop
and
xchg
sub
pop
adc
outsb
clc
pop
scas
aas
and
fcomps
dec
dec
mov
jg
adc
adc
outsl
and
ret
adc
adc
iret
or
mov
inc
xor
pusha
mov
and
inc
loope
pop
mov
lret
call
xchg
clc
test
loopne
add
mov
pop
scas
hlt
mov
lahf
pop
call
or
pop
clc
push
leave
test
mov
xlat
push
lock
fwait
cmp
es
nop
in
sti
fwait
xor
mov
shl
cmc
or
push
pusha
cmc
pop
mov
and
xchg
mov
lds
pop
and
js
scas
clc
jns
pop
sbb
nop
or
or
movsb
fimuls
inc
xchg
mov
lock
ja
mov
mov
cmc
scas
jg
lret
jnp
lock
push
aaa
call
lds
pop
lahf
in
jmp
sub
sub
xchg
stc
xor
stos
push
hlt
mov
divl
cs
cli
sti
cmpb
hlt
mov
mov
sbb
fists
pop
fimuls
lcall
mov
jb
xchg
enter
ljmp
cld
sti
rcr
fildl
imul
fisttpll
loopne
jmp
push
mov
fiaddl
mov
push
push
movsl
mov
dec
in
cmp
loop
mov
push
aas
pop
sub
push
orb
fistl
repnz
jno
push
hlt
aad
cli
sub
movsb
sub
xchg
mov
mov
addr16
repz
sub
repnz
in
aas
xlat
clc
xor
rcr
stos
and
pop
dec
mov
sti
enter
adc
mov
mov
clc
pop
lds
push
jmp
jo
cmp
dec
loope
movsb
jg
enter
shl
jg
adc
lret
fcom
add
add
sub
hlt
jle
int
cli
jg
fdivr
xchg
aam
xlat
or
add
aad
call
loope
movsb
aas
mov
enter
or
or
lock
movsl
nop
les
aas
pop
pop
stos
enter
and
xor
pusha
mov
mov
cld
xor
decb
jo
repnz
push
ffree
inc
ret
leave
cmp
cld
mov
jge
loopne
aam
push
jmp
mov
inc
movsl
mov
call
test
jbe
push
xchg
add
loopne
dec
ret
clc
pop
flds
pop
movsl
xchg
sub
aam
int
and
pop
cmp
inc
mov
bound
nop
jp
clc
jbe
nop
inc
insb
aas
pop
fildl
jbe
scas
sub
ja
inc
mov
rcrb
cmp
loop
movsl
imul
sub
pop
inc
jg
push
sbb
pop
push
fsubp
hlt
xchg
pop
adc
ficomps
aad
and
test
mov
add
push
call
aas
mov
mov
pop
jp
clc
inc
xor
mov
in
jle
iret
lock
imull
adc
test
and
or
mov
lret
sub
push
xchg
xor
shl
jl
dec
pop
xor
pop
lock
out
pop
inc
mov
scas
std
xor
lea
popf
lock
loop
movsl
cmp
sbb
jne
daa
mov
shl
popf
lock
jmp
stos
jg
xlat
mov
movsl
mov
gs
pop
lahf
inc
sbb
add
lret
or
clc
jne
push
sub
std
fs
mov
out
movsb
pause
lods
sub
or
mov
ja
mov
add
nop
repnz
jmp
gs
cmpsb
test
and
mov
jg
inc
jb
sarb
lock
sub
pop
jp
xchg
nop
stc
ss
push
or
lcall
aas
rclb
jle
outsb
pop
xlat
mov
pop
in
sub
lret
pusha
test
jmp
movsl
scas
fidivl
movsb
scas
mov
and
movsl
pop
and
movsl
pop
les
or
inc
jp
cwtl
pop
dec
or
clc
push
xchg
pop
jge
or
popf
dec
rclb
or
in
call
or
call
in
mov
cli
xor
pop
cmp
scas
mov
aam
notl
dec
mov
sbb
xchg
out
fistl
mov
stc
jg
push
stos
xchg
mov
and
pop
movsl
sti
push
push
icebp
xor
push
pop
movsl
jg
sarb
jno
dec
nop
incl
scas
dec
stos
mov
inc
nop
test
xchg
iret
mov
jecxz
inc
test
and
dec
in
scas
push
lret
lock
nop
pop
dec
or
mov
pop
mov
jmp
mov
cmpsl
lahf
movsb
add
jp
lcall
and
sub
jno
testb
jo
push
loope
cmpsb
sub
mov
aas
push
movsl
pop
xchg
push
repnz
movl
jg
icebp
sarb
push
in
clc
clc
scas
mov
pop
cmp
mov
sar
cwtl
scas
loope
ja
adc
mov
ja
nop
repnz
insl
test
sub
push
inc
sarl
pop
pop
cmpsb
mov
pop
mov
jmp
lock
push
mov
and
inc
pop
in
imul
sbb
bnd
cmpsl
pushl
mov
mov
dec
sub
jl
mov
jns
fucom
sbb
pushl
and
leave
mov
adc
add
adc
js
xchg
dec
nop
jne
and
insl
push
inc
mov
pop
cmpsl
pop
sub
loop
add
mov
sub
jp,pn
pop
mov
fdivs
nop
jne
sub
fdivrs
nop
enter
insb
mov
syscall
sahf
add
mov
fimuls
inc
mov
test
xlat
or
fcmovu
in
shlb
aad
fcoms
movsl
cmpsb
scas
lret
das
scas
inc
loopne
mov
psrlq
aas
fadds
cli
test
mov
cmp
lea
dec
and
pop
xor
inc
xlat
cmpsb
xor
cld
pop
sub
pusha
in
mov
mov
mov
ljmp
js
or
xchg
and
in
cmp
loop
cmp
cld
xchg
push
mov
cmpsb
jg
adc
add
cmp
scas
cmp
mov
pop
and
out
adc
cmpsl
sti
mov
clc
repnz
in
jns
cmp
bnd
jmp
mov
sub
clc
sti
xchg
mov
sub
jmp
stos
sub
call
js
jae
or
or
lea
or
or
sub
je
push
ljmp
add
lret
sbb
mov
test
and
adc
ss
ljmp
sar
and
mov
pusha
aad
jl
pop
notl
push
not
out
das
mov
pusha
bnd
mov
sub
cwtl
out
xchg
sti
outsb
and
adc
inc
cmpsl
mov
mov
ficomps
pop
das
insb
cmpsl
jne
mov
cld
dec
pop
aas
pop
xchg
scas
jnp
cmc
out
jge
push
fcom
mov
ficoms
push
sub
in
aas
mov
jb
gs
flds
pop
or
sub
rorb
pop
stos
aas
jo
cli
outsb
add
and
dec
nop
xchg
cli
push
cmc
jle
xchg
cli
cs
push
push
jle
xchg
test
sub
lcall
mov
xor
adc
mov
jns
dec
push
int
jecxz
sub
sub
sub
adc
dec
mov
decl
mov
js
dec
test
cmpl
rclb
inc
mov
scas
enter
loopne
dec
lahf
xlat
mov
push
pop
pop
inc
sbb
hlt
sub
and
repnz
stc
mov
pusha
repnz
xchg
fsubr
mov
push
add
mov
pop
lods
int
in
iret
mov
jo
mov
fcomi
loope
dec
or
in
jnp
in
push
mov
fildl
nop
mov
mov
push
scas
push
adc
push
lds
cli
pop
sti
pop
jp
js
lret
inc
orb
out
scas
leave
cld
je
pop
and
clc
push
stc
sbb
ss
loopne
outsl
and
loopne
inc
add
add
mov
xchg
mov
clc
fcompl
mov
mov
fdivrl
jp
addb
pop
repnz
add
and
cli
lret
mov
jmp
in
cmp
dec
cmp
mov
dec
jmp
loopne
xchg
dec
push
mov
cld
mov
xor
fsubrs
js
shr
add
clc
or
inc
or
aas
or
push
sub
adc
sub
loopne
cs
and
pop
mov
decb
imul
dec
cmp
jns
bsf
lea
bsf
test
push
scas
lret
xlat
test
cli
cmc
jno
hlt
lret
sub
lock
cmp
mov
notw
notl
adc
clc
rorb
mov
in
sub
and
mov
fiadds
mov
int3
imul
pop
inc
test
jle
mov
bsf
test
scas
enter
inc
mov
push
jmp
sub
mov
fidivrs
and
rcrb
mov
scas
imul
sub
imul
sub
xchg
nop
lret
pushl
lea
sbb
inc
cwtl
clc
mov
mov
and
enter
cwtl
repnz
out
nop
pop
mov
mov
scas
mov
cmp
add
inc
dec
push
pop
rcrl
add
mov
pop
inc
lret
mov
add
insl
call
gs
mov
loopne
fisubs
fcom
dec
mov
push
in
cld
xor
mov
test
and
scas
sub
lock
mov
enter
mov
fmull
cmp
xchg
sub
push
fsubrs
mov
in
aas
js
into
enter
push
in
imul
push
cmp
test
and
push
inc
or
add
cli
xor
enter
jnp
mov
gs
mov
jo
lock
test
jl
lds
lret
fcom
sub
ljmp
jle
das
push
popf
loopne
ja
enter
outsl
mov
test
ret
xchg
movsb
or
test
mov
sti
std
push
call
clc
mov
push
cmp
and
cmp
xchg
enter
stos
shrb
sub
adc
ljmp
call
sub
test
jmp
push
cmc
sub
test
test
div
cmc
bnd
push
jmp
iret
cmp
mov
js
outsb
or
adc
addr16
mov
pop
incb
add
sbb
test
inc
and
std
shrb
daa
test
cmc
push
xor
fisttpll
repnz
adc
push
enter
fucomi
pop
ljmp
adc
cmp
pop
sahf
mov
loop
bound
std
aaa
mov
dec
pop
dec
sub
decb
lret
inc
out
loop
int
jns
push
cmc
ljmp
mov
scas
mov
aas
test
push
cmp
fcomps
push
pop
fcomp
lahf
clc
push
xlat
jno
jge
les
ret
pop
adc
mov
lds
out
mov
in
jle
sub
mov
mov
pop
in
test
mov
mov
and
fdivrs
mov
shrb
fsubs
mov
push
js
and
fisubl
push
and
cmpsb
pop
adc
fdivr
xlat
scas
fidivrl
scas
or
or
xchg
lock
aad
scas
mov
mov
rol
adc
mov
push
adc
cmpsl
test
sub
mov
mov
mov
test
mov
xchg
mov
lds
xchg
stos
loop
stc
sub
je
cmpsl
pminub
add
mov
sub
push
dec
shlb
and
sbb
mov
jle
rcr
stc
fs
dec
push
jl
popf
jnp
pop
xchg
and
clc
adc
dec
cli
scas
mov
jmp
adc
nop
adc
notl
out
dec
scas
sub
cs
test
call
hlt
dec
or
repnz
push
out
add
sahf
pop
adc
push
pop
mull
call
mov
cli
ja
adc
push
call
mov
fimuls
stos
imul
jnp
dec
sub
lock
scas
roll
orb
leave
jne
mov
push
gs
jle
loopne
pop
mov
ljmp
add
imul
call
or
jp
xchg
sub
test
test
xor
shlb
dec
cmpsl
jge
xor
cmpsl
inc
inc
push
adc
dec
stos
lret
add
and
pop
push
mov
movsb
sub
hlt
mov
sub
jp
jl
jge
xlat
pop
test
adc
mov
jle
call
loopne
inc
sbb
clc
pop
pop
inc
xor
popf
jne
sbb
xchg
mov
daa
scas
xlat
jmp
shlb
cli
movl
inc
inc
fsubr
ds
outsl
nop
in
pusha
test
or
add
stc
inc
imul
add
xor
mov
add
scas
fsubl
pop
mov
jg
inc
out
enter
inc
insb
mov
or
cld
jbe
jg
or
cld
xorb
sub
lahf
mov
adc
jmp
enter
cmpsb
test
adc
mov
sub
cmpsl
and
mov
stc
adc
mov
or
repnz
in
ds
or
and
enter
mov
and
mov
scas
adc
mov
mov
lock
cld
dec
rorb
lock
outsb
cld
fidivl
add
inc
lods
in
jns
ret
test
in
add
add
scas
loop
fnstenv
adc
leave
sbb
adc
adc
out
cmc
stos
sub
in
stos
jecxz
lods
outsb
lret
push
cltd
shl
mov
dec
and
stos
jo
push
mov
mov
mov
pop
or
mov
jmp
xchg
or
mov
je
fiadds
lea
fmul
push
adc
jle
dec
jo
fwait
rcr
xchg
xor
outsl
stc
or
push
lods
aaa
push
pop
nop
inc
daa
jae
or
adc
lahf
loopne
les
and
mov
xchg
test
xlat
lods
je
push
jmp
gs
std
adc
jo
or
xchg
fs
aas
hlt
mov
in
and
jge
pop
ja
jno
inc
fsubrs
mov
sub
nop
mov
mov
push
mov
cmpsl
gs
sub
push
test
enter
test
leave
fldt
mov
jns
pop
or
out
leave
and
js
jbe
pop
clc
ds
mov
shl
sbb
adc
scas
cmp
jo
fstl
adc
cmc
mov
std
in
cmpsb
adc
mov
push
ds
cli
mov
stos
out
stc
jle
sbb
int3
inc
adc
sti
mov
call
add
shll
jo
hlt
lea
and
jo
pusha
jge
adc
jo
add
popf
pusha
jno
push
hlt
stos
repz
dec
test
pop
sti
sub
in
subb
add
mov
in
lahf
insb
dec
adc
cmp
mov
mov
adc
dec
sbb
cmp
imul
fnsave
inc
jl
adc
cli
je
decb
clc
mov
dec
clc
jp
lock
lahf
xchg
pusha
xchg
cwtl
scas
imul
or
adc
movsl
push
lock
dec
ds
sarb
jns
es
enter
lods
mov
and
or
mov
mov
mov
popa
test
cs
cwtl
in
dec
decl
inc
scas
leave
rorb
dec
and
add
mov
adc
pop
shrb
js
pop
aas
inc
rclb
xchg
mov
outsb
cmp
cmc
into
adc
and
add
call
repnz
cmc
in
fsubr
fldl
mov
pop
jmp
cs
ficoms
dec
cmc
mov
cmp
mov
repnz
sub
mov
push
dec
cld
sub
stc
dec
push
pop
and
inc
jge
ds
adc
jo
lods
test
adc
mov
pusha
cmc
ret
std
lds
fs
lcall
clc
lcall
sub
cmpb
cmc
mov
mov
fcoml
or
lods
divl
clc
push
jle
call
sub
add
shrb
mov
outsb
js
pusha
enter
pop
mov
inc
clc
sti
cmp
stc
mov
mov
fs
call
xchg
fdivrs
push
xchg
fcoms
inc
call
nop
call
pop
dec
psrld
lcall
jbe
push
sbb
sar
mov
mov
xchg
sti
into
fdivr
arpl
sahf
mov
ljmp
cli
popf
and
test
or
insl
pop
xchg
push
leave
js
inc
in
dec
jmp
cwtl
mov
fwait
cmp
push
scas
and
stc
orl
and
cli
jl
aad
inc
xchg
scas
dec
stos
ficomps
clc
nop
cmpsl
nop
jmp
repz
jns
jnp,pt
mov
aaa
and
push
pusha
jg
mov
hlt
popf
cmc
popf
push
ljmp
jl
push
das
fstpl
and
pop
stos
mov
call
fbld
xor
or
cmp
inc
movsb
inc
or
push
pop
adc
mov
test
scas
mov
loop
aaa
jle
or
pop
lds
jg
hlt
test
call
ja
push
fdivr
and
adc
cmpsb
setle
movsb
out
mov
shl
push
mov
push
in
aas
cmc
mov
movsb
mov
das
push
dec
cwtl
jl
aad
fistps
inc
rcl
popf
sbb
hlt
mov
cld
les
mov
nop
push
dec
in
mov
mov
nop
ljmp
js
movsl
cmc
pop
shlb
cld
inc
in
pop
out
jnp
mov
insl
js
jbe
push
jmp
pusha
ja
and
hlt
out
loop
sti
xchg
jl
mov
dec
bswap
push
and
xor
xchg
in
jle
push
cmpb
nop
out
pop
mov
call
xchg
jge
js
or
out
mov
and
mov
inc
sbb
xlat
test
scas
shrb
add
dec
lods
jo
out
jp
cmp
pop
call
outsl
adcb
stc
jbe
mov
addr16
jmp
xor
in
stos
jnp
mov
sbb
dec
js
sub
and
jns
cmp
cmpb
inc
ret
add
in
clc
mov
mov
inc
push
jbe
jg
negl
sbb
js
adc
xchg
dec
test
pop
lods
aas
mov
jmp
inc
in
xor
sbb
adc
nop
or
in
push
imul
mov
cmpsl
or
jae
jne
jl
imull
mov
adc
inc
inc
bound
stos
and
adc
mov
mov
fucomip
mov
cmpsb
pusha
stc
cmp
lock
mov
pop
cmp
pop
mov
test
xor
dec
jmp
inc
and
and
pop
mov
push
das
cmc
pop
sbb
inc
lods
pop
mov
bound
adc
mov
stos
push
scas
pop
push
lods
mull
mov
shrl
aad
jmp
clc
hlt
mov
enter
faddl
push
fs
ljmp
pop
and
jo
lods
jle
stc
int
mov
stc
lock
ljmp
in
pushf
popf
pop
xchg
add
lods
popf
divl
pop
fimuls
idivb
mov
fistpll
pop
bound
push
lahf
pop
fidivl
dec
push
das
dec
sub
imul
pop
mov
enter
jne
enter
outsb
fwait
subb
pop
mov
xchg
dec
or
hlt
push
daa
fdivr
outsb
push
hlt
mov
jns
pop
daa
pop
sbb
push
jmp
call
pop
lds
idivl
push
xchg
in
sub
pop
ljmp
fdivrl
cmp
repnz
inc
and
cmp
sub
fcomp
movsl
and
ss
xlat
mov
pop
rorb
push
ljmp
push
pop
dec
sub
and
jb
and
dec
sub
jp
and
mov
adc
call
mov
jo
enter
dec
cmp
adc
fistpl
jbe
jo
adc
loopne
hlt
notb
cmp
jg
imull
nop
pop
dec
ffreep
sarb
mov
fisubrl
mov
jge
jo
xchg
mov
jge
pop
pop
loopne
mov
in
or
cltd
pop
lods
lods
inc
mov
sub
cld
add
movsl
cmp
xlat
in
out
mov
fwait
sub
add
dec
scas
pushf
adc
mov
pop
out
cmp
cmp
pop
mov
pusha
pop
adc
pop
mov
jmp
jne
outsl
rcr
jnp
ja
push
pop
fadd
lods
sbb
icebp
jo
dec
mov
xor
xlat
gs
jl
fstpt
enter
sub
jg
adc
inc
adc
adc
pop
xor
xlat
out
test
ja
enter
xlat
loopne
cs
adc
or
add
shll
jmp
out
test
lret
mov
push
stc
mov
pusha
out
dec
lock
call
pushf
sub
xor
rclb
push
leave
pop
mov
int
mov
mov
out
dec
sub
xchg
lods
clc
stos
mov
mov
jle
sarb
mov
jmp
adc
push
punpckhdq
test
push
das
out
lods
cld
js
fs
mov
popf
and
clc
push
add
das
test
jmp
shrb
mov
add
mov
jmp
xor
adc
js
sub
repnz
pop
cmpsl
out
test
nop
aam
mov
fdivrs
dec
test
or
sahf
inc
in
lahf
sbb
fcoms
mov
scas
lahf
cmp
sub
jmp
mov
and
adc
cmp
dec
cld
sarb
inc
in
xlat
not
scas
adc
or
mov
dec
insb
or
cmpb
je
std
mov
push
xchg
mov
aaa
clc
jmp
enter
cmp
xor
inc
in
sti
shrl
dec
cld
xor
add
out
repz
mov
xor
jo
scas
fsubl
or
stc
hlt
sbb
push
ret
jne
mov
fistps
and
mov
push
mov
cld
lock
jp
push
jmp
aas
scas
jne
rcl
sub
shl
push
cld
cmp
or
jo
lahf
jo
xchg
aad
adc
lock
movsl
movsb
les
and
mov
xchg
rcl
xchg
adc
sar
sbb
sahf
and
push
dec
scas
jmp
loopne
out
sbb
pop
inc
mov
out
dec
loop
icebp
pop
scas
sbb
scas
or
and
jl
aam
pop
push
leave
insl
or
dec
cmp
outsl
pop
and
testl
lcall
ffree
add
jl
jg
nop
aad
sub
xchg
cmc
mov
jno
pop
fldenv
flds
jbe
mov
jge
mov
mov
xchg
adc
stc
rcll
dec
call
mov
inc
ss
cli
and
xlat
test
gs
adc
ljmp
sub
and
mov
jmp
and
jp
fcom
sti
mov
out
sub
lock
and
addr16
pop
mov
inc
mov
jge
test
or
cmp
or
scas
jge
or
mov
push
out
or
scas
xchg
pop
pop
jg
call
push
sub
and
fdivr
adc
ret
orb
adc
or
int
nop
pop
or
subb
jbe
push
mov
das
divl
lock
xlat
or
sub
lods
and
xchg
test
loope
sub
call
lock
cmpsb
push
xchg
ja
cmp
or
in
jle
or
in
mov
mov
scas
shrl
les
aas
mov
mov
mov
adcb
repz
mov
out
pop
mov
std
ds
dec
out
xchg
negl
jns
cs
test
clc
mov
testl
in
loope
jne
push
sarb
jmp
call
mov
sti
test
dec
mov
jmp
lahf
ror
mov
lock
jle
mov
xchg
enter
push
pop
cmpsl
jle
push
scas
sarl
ja
ja
js
jo
clc
push
xlat
out
lret
fmul
scas
pop
out
fistl
imul
dec
rol
test
das
out
fsubrl
test
sub
pop
jecxz
mov
shr
pop
and
pop
cmp
xor
jle
dec
lods
jle
mov
lret
sbb
dec
scas
lret
dec
cmp
sbb
enter
inc
shrd
inc
loop
pop
movsb
inc
xlat
inc
add
and
pop
sub
pop
push
dec
scas
mov
or
pop
push
jb
enter
aas
mov
xchg
stos
mov
mov
xlat
jmp
js
push
scas
in
mov
cld
fdivs
stc
mov
fisubrs
add
enter
pop
test
dec
fdiv
dec
je
mov
lock
push
mov
pop
nop
pop
leave
insl
loopne
xchg
rclb
xchg
loopne
jo
shr
sub
hlt
mov
imul
sub
push
sbb
add
js
mov
nop
out
hlt
clc
inc
scas
hlt
scas
jp
adc
add
cli
push
roll
xlat
pop
inc
imul
jmp
outsl
sarb
push
incb
mov
dec
push
cmc
scas
outsl
enter
test
add
insl
inc
testb
push
xchg
loop
mov
pushf
and
or
sub
pop
loop
lret
and
je
into
dec
sbb
jno
hlt
dec
adc
js
mov
sarb
mov
lahf
movsb
mov
and
xchg
dec
lock
shr
pop
out
cs
jge
jge
adc
add
sbb
cmp
jnp
cwtl
test
xchg
push
cwtl
leave
sub
pop
rcr
jl
aad
popf
sbb
lret
out
imul
lods
xor
enter
das
fisubrs
pop
sbb
je
call
adc
or
add
xchg
push
mov
sub
aad
or
fucomip
dec
into
mov
cld
mov
mov
js
mov
ja
cmp
sarb
sub
mov
das
test
mov
std
imul
les
mov
in
jo
rcrb
cmp
adc
ret
aad
jmp
in
cli
loop
mov
xchg
nop
stos
and
das
or
and
popf
fildl
js
mov
push
aad
adc
scas
cld
pusha
jo
test
mov
pop
sar
and
outsl
inc
xchg
dec
loop
sbb
inc
clc
add
enter
push
and
add
out
dec
in
cmpb
test
inc
sub
or
jne
mov
and
in
outsb
cmc
mov
test
hlt
mov
ret
aas
push
or
ja
nop
pop
int3
stos
sub
jmp
cld
lcall
pusha
arpl
jo
enter
xor
and
ljmp
clc
push
or
sti
fidivl
mov
push
enter
nop
hlt
xchg
adc
add
test
pushf
add
push
adc
sbb
mov
in
in
jg
mov
hlt
mov
shlb
push
xchg
push
xchg
sub
xchg
pushf
push
shlb
push
mov
cmpsl
rol
enter
fimull
mov
push
xchg
scas
fists
stos
mov
adc
mov
mov
enter
mov
inc
and
mov
mov
mov
lahf
jo
popf
push
sbb
dec
daa
lahf
sbb
sbb
lahf
mov
jl
pop
fcomp
daa
out
popf
mov
and
out
adc
scas
mov
fistps
cmc
xchg
imul
cmp
xchg
dec
mov
xlat
and
mov
pop
test
inc
and
les
sub
iret
nop
inc
jl
cld
lock
fcompl
fsubrs
nop
cld
aam
fisubs
push
fchs
loop,pn
stc
jnp
ror
out
out
mov
cmp
mov
mov
mov
mov
scas
sub
popf
adc
or
out
mov
clc
push
jo
mov
dec
nop
leave
aaa
aaa
and
push
mov
aas
js
rcll
enter
jle
faddl
mov
dec
add
push
add
mov
push
and
pop
repz
sub
or
fiadds
mov
jmp
and
add
push
push
cli
inc
rolb
faddl
mov
lock
sbb
push
adc
notl
add
sub
pusha
idivl
sbb
push
adc
notl
push
scas
and
jns
sbb
es
and
pop
inc
sub
cs
repnz
pop
jns
sbb
xor
test
dec
sti
enter
cmp
repnz
cld
inc
xchg
inc
push
mov
imul
inc
pop
in
repnz
adc
and
notl
fucom
adc
push
push
stc
das
bsf
and
enter
push
imul
idivl
sbb
adc
adc
and
pop
inc
push
enter
outsb
scas
repnz
jmp
inc
jo
ja
enter
dec
dec
out
movsb
xchg
or
icebp
mov
xchg
jge
enter
popf
cmp
dec
jg
dec
nop
scas
and
notl
notl
inc
xchg
mov
jle
pop
jno
es
fstl
adc
adc
xchg
loop
sbb
in
imul
je,pn
cmp
pop
imul
pop
adc
mov
icebp
jns
ja
pop
mov
mov
inc
cwtl
mov
dec
scas
iret
dec
in
sahf
lock
cmp
mov
or
mov
pop
stos
clc
sarl
sahf
sub
add
movsb
or
dec
fdivrl
dec
das
loopne
lahf
add
mov
or
and
jmp
cmp
mov
movsb
lret
test
pop
clc
xorb
adc
cmc
jp
call
pop
aam
pusha
stos
leave
scas
rclb
js
xchg
or
fidivrs
and
push
sub
mov
push
stos
mov
mov
enter
repnz
call
push
push
mov
sarb
push
inc
mov
loop
pop
mov
mov
jno
sbb
or
and
enter
iret
cwtl
push
test
or
sub
cs
add
cmp
pop
or
pop
adc
fmul
cs
inc
mov
mov
hlt
dec
shr
dec
scas
fwait
inc
in
call
aad
mov
loopne
hlt
mov
mov
call
cs
enter
jg
cs
cmp
clc
cli
mov
jle
adc
mov
je
and
aam
test
jle
scas
adc
aad
mov
js
enter
jle
adc
mov
loopne
and
test
mov
jns
pop
stos
enter
into
ljmp
mov
jle
and
or
lret
jge
sub
push
or
out
mov
lret
jne
cmp
xlat
popf
pop
aam
stc
jno
adc
fdivl
mov
cmc
push
and
pop
lcall
push
cmp
sub
mov
ja
and
jno
cmp
std
imul
call
pushf
add
dec
sub
cmp
pop
mov
sub
pop
out
mov
fcoms
nop
stos
outsl
clc
test
test
or
mov
scas
jno
fucom
push
pop
adc
cmp
cmp
dec
scas
xchg
ficompl
lea
push
rclb
int3
lock
adc
sub
push
cli
std
sbb
cmc
insl
sbb
test
and
in
nop
cli
mul
fdivrs
pop
jo
adc
adc
sub
mov
cwtl
in
mov
mov
or
jo
notb
cmp
lret
add
xchg
dec
adc
push
inc
lcall
js
cmp
nop
xchg
out
pop
cmp
sahf
mov
push
les
js
push
inc
int3
loop
pop
mov
xchg
loopne
fistps
fdivr
dec
pop
fsubrs
sbb
push
jo
cltd
test
or
jg
add
movsl
cmc
out
push
xchg
adc
repnz
ret
lock
pop
icebp
add
pusha
mov
pop
in
cmp
xchg
fs
dec
ljmp
clc
es
dec
gs
sub
dec
into
sbb
outsl
mov
add
dec
fwait
nop
enter
imul
imul
and
cli
mov
incl
jbe
rcrb
dec
pop
or
outsb
repnz
mov
mov
xlat
in
jge
mov
xlat
shl
ret
cmp
or
jge
adc
mov
lret
iret
test
aad
sub
fnstenv
adc
xor
fcoms
in
das
sub
in
test
scas
xchg
testl
enter
notb
lret
test
jno
pop
lret
pop
nop
and
movsb
mov
shrb
adc
insl
loopne
pop
or
pop
jo
lahf
mov
xchg
pop
popf
test
sub
inc
sbb
outsb
and
paddw
add
sub
mov
enter
jmp
mov
scas
adc
cwtl
mov
or
mov
ljmp
xchg
pop
clc
jg
cld
cld
fsubrs
pop
stc
lret
js
ret
mov
jp
xchg
stos
fiaddl
loopne
outsb
test
and
call
mov
repz
jb
aam
push
leave
jl
jns
push
hlt
out
jecxz
mov
jne
lock
push
out
jl
sbb
and
xchg
std
mov
cmpsl
fdivs
pop
cli
xchg
and
jl
mov
dec
pop
nop
jg
loopne
bnd
cwtl
jge
jge
cmp
mov
test
je
bound
ja
xor
dec
nop
popf
fists
mov
out
dec
stos
lahf
loopne
arpl
mov
in
push
sub
clc
push
inc
cmpsl
nop
cld
pop
push
test
and
inc
push
hlt
scas
sub
and
mov
xor
add
out
and
jne
mov
jmp
mov
scas
add
mov
mov
outsl
mov
insl
dec
jb
test
xchg
inc
jmp
lds
pusha
hlt
jmp
sub
dec
mov
int
jge
or
xor
fildll
mov
xor
and
jo
mov
aad
enter
add
fcoml
jno
pop
xchg
inc
or
inc
hlt
adc
mov
mov
cmp
daa
mov
cmc
int
pop
cmp
inc
mov
mov
lahf
inc
in
jle
push
dec
cmp
mov
adc
xchg
sbb
out
std
jp
nop
std
jle
cwtl
mov
dec
loop
sti
les
adc
scas
clc
dec
inc
mov
loope
mov
mov
clc
divl
jmp
push
lods
fmuls
sarb
pop
jnp
fsubrs
mov
repz
add
jnp
xlat
mov
or
sbb
pushf
lods
call
add
clc
scas
rcr
push
cmc
call
mov
mov
mov
mov
les
pop
insl
mov
mov
jnp
aam
sub
dec
or
nop
mov
sbb
xlat
cmp
nop
movsb
scas
loopne
mov
clc
ja
push
or
mov
fcompl
cmp
cmp
mov
dec
jns
ret
sbb
and
test
nop
cwtl
je
aam
push
dec
addr16
lds
mov
test
mov
popl
mov
inc
dec
cltd
push
in
push
leave
imul
rcrl
rclb
adc
mov
lcall
sbb
add
and
lock
pop
mov
jg
dec
in
jae
or
sub
xchg
dec
ficompl
pop
jne
faddl
sbb
test
iret
or
daa
mov
push
and
jle
push
sub
dec
shl
cmp
cli
jg
pop
in
add
inc
dec
xchg
cmpsl
aam
fisttps
mov
rorb
repnz
jae
jb
pop
rclb
push
adc
repz
pop
mov
je
outsl
inc
in
mov
hlt
out
das
subb
adc
add
sub
push
hlt
pause
mov
out
cmp
dec
pop
xchg
mov
mov
or
nop
jo
mov
adc
mov
scas
call
jl
stc
push
call
adc
arpl
mov
in
fisubrs
jmp
sub
push
hlt
stos
das
enter
or
ret
jle
pop
nop
pop
pop
mov
nop
mov
xlat
cmp
adc
inc
les
nop
hlt
out
cld
jo
xchg
nop
cmpsl
sub
sbb
inc
testl
lock
cmpsl
sarb
xchg
adc
std
jns
aas
push
out
pop
mov
mov
or
sti
xchg
aas
cmc
mov
inc
mov
pop
cmpsl
pop
pusha
push
xchg
pop
hlt
ljmp
hlt
sahf
rolb
cli
pop
addr16
nop
dec
cmc
in
dec
mov
add
pop
jo
mov
mov
rcr
sbb
test
mov
out
notb
fcom
mov
cmc
cmp
outsb
test
repnz
cmp
sbb
and
psrlq
mov
xor
or
jns
pop
js
mov
pop
mov
cwtl
ficoms
call
sub
repnz
fmuls
jns
cld
and
imul
sarb
inc
or
adc
pushf
jae
fisttps
push
nop
cmovs
fcoms
popf
xor
xchg
pop
cmp
scas
xlat
sub
shrl
mov
pusha
hlt
ljmp
nop
xchg
hlt
jnp
mov
sarb
lock
lds
lods
jns
or
or
and
hlt
call
push
call
test
ficoms
sbb
or
popa
mov
inc
lds
pop
dec
inc
cli
jg
add
sbb
hlt
les
sarl
mov
mov
cmpb
jg
enter
pop
xchg
repz
das
mov
scas
cmp
or
push
fbld
dec
add
in
cmp
mov
sti
test
pop
xchg
int
in
in
fsubrs
xchg
std
xchg
nop
lret
call
push
testl
push
jae
sub
out
push
adc
cmp
sar
daa
sti
dec
ljmp
and
xor
pop
jno
imul
mov
js
push
in
xchg
mov
dec
push
scas
cmpsl
ja
mov
test
daa
mov
or
and
jo
jmp
nop
out
pop
sub
jecxz
scas
or
jnp
hlt
cmp
ja
inc
jmp
dec
inc
push
jo
movsl
add
and
or
mov
nop
scas
sub
mov
in
cmp
scas
push
scas
adc
lods
jg
shl
daa
cmpsb
or
jp
call
dec
and
xchg
pushf
sub
cmp
and
mov
and
loopne
mov
or
adc
mov
in
inc
mov
jb
cmpb
hlt
mov
in
jl
jns
pop
xchg
xor
lock
repnz
pop
movsb
scas
into
js
add
push
aam
inc
or
add
or
daa
int
cli
pop
stc
mov
add
sbb
xchg
xchg
sar
pusha
aam
inc
fiadds
mov
and
in
std
das
mov
mov
std
cmp
inc
fdivr
dec
out
scas
sub
lret
iret
sbb
inc
push
loope
mov
mov
cli
xlat
inc
mov
sub
lds
lcall
push
pusha
call
nop
clc
mov
lea
or
lock
push
xchg
or
mov
ja
js
adc
out
dec
decb
jle
push
add
test
jg
mulb
fcoml
nop
loope
mov
test
xchg
mov
inc
mov
dec
clc
sbb
xor
xlat
mov
inc
jo
insb
movsl
dec
inc
loope
das
inc
xchg
mov
fsubr
insl
shl
or
add
pusha
dec
mov
mov
jmp
xor
inc
cli
jge
js
dec
inc
push
fsts
push
movsb
inc
hlt
dec
jmp
jnp
xchg
lods
lock
aad
ljmp
adc
popf
pop
cwtl
rcll
pop
fsub
sub
test
test
rcr
inc
push
mov
push
pop
mov
sub
ret
in
bnd
fildll
jmp
nop
mov
leave
fldenv
push
xchg
sub
cmp
pusha
aad
mov
imul
push
in
stos
mov
sbb
inc
and
mov
jo
mov
jg
adc
cwtl
in
cs
stc
call
mov
pop
lcall
cmp
lret
jg
shr
stos
cmp
in
sub
icebp
adc
stc
test
shl
cmp
call
pop
mov
cs
fildll
mov
mov
mov
mov
hlt
mov
sbb
cmp
xchg
imul
cmpsl
js
sub
test
stos
push
and
push
mov
inc
shll
xor
imull
ja
clc
push
push
push
sbb
or
jns
sbb
adc
xlat
xchg
jo
and
xchg
je
and
pop
jns
pop
scas
fidivrl
cmp
mov
es
sbb
cwtl
push
pop
inc
and
fcoml
ja
mov
pushf
das
scas
and
push
dec
into
push
test
sub
mov
jp
add
shrl
scas
in
inc
push
in
mov
cmp
mov
clc
jl
adc
scas
imul
xlat
pop
mov
jo
mov
sti
nop
inc
sarb
and
nop
fdivrs
pop
mov
into
mov
xchg
in
jo
sub
fs
loopne
dec
pop
sti
cmp
mov
test
notl
lret
jo
sub
aad
dec
mov
cmp
sub
push
cld
loopne
dec
mov
stos
and
cmp
scas
fcoml
add
mov
je
and
pop
sbb
xchg
mov
jmp
fwait
lock
pop
sub
dec
mov
sub
leave
push
xchg
add
or
add
sub
js
lods
cmp
enter
jle
shlb
sub
es
xchg
add
mov
mov
pop
js
push
sub
shl
or
rcrb
push
in
bnd
dec
pop
push
mov
std
outsl
clc
subb
and
sub
fmul
sub
push
lret
mov
dec
fbld
dec
fimuls
lret
nop
stc
sub
cmc
mov
push
push
sub
rcl
das
pop
shrb
fcoms
pop
test
loopnew
push
lds
ret
sbb
enter
nop
mov
jle
divl
nop
push
ficoms
les
lods
test
fisubrs
pop
ja
aam
stos
or
dec
pop
push
and
adc
ja
jge
pop
jb
nop
gs
mov
pop
test
push
pop
sub
leave
enter
fstps
mov
pop
cmc
ficoms
clc
push
pop
test
mov
xlat
jmp
addr16
pop
ret
aas
push
push
sbb
pusha
mov
inc
mov
loope
mov
in
xor
mov
aas
jmp
xor
decb
jo
lret
push
adc
xchg
inc
jno
jnp
fsubrs
jno
pop
or
adc
lret
loopne
bound
pop
imul
mov
scas
mov
mov
repnz
jnp
cmp
mov
inc
repnz
jns
or
ds
inc
add
enter
xchg
scas
enter
sbb
inc
out
enter
movsb
scas
lret
dec
pop
pusha
jns
sbb
or
push
xchg
mov
xchg
adc
repnz
push
pop
jns
sbb
mov
inc
pop
repnz
in
das
aam
cli
and
jmp
push
mov
and
push
push
fdivr
pop
jmp
dec
fcmovbe
push
nop
xlat
add
sub
pop
cld
mov
sub
jmp
mov
lcall
or
push
lods
idivb
lock
outsl
rclb
jmp
mov
pop
lock
in
aas
mov
shr
out
out
dec
jg
in
or
adc
jg
pop
jb
mov
call
inc
sbb
enter
lock
daa
in
imul
mov
push
in
scas
mov
mov
daa
aaa
sar
mov
loop
pop
movsl
mov
xchg
pushf
cmpsb
cmp
das
repnz
idivb
and
shrb
sub
in
rol
xchg
push
sub
js
add
adc
lret
cmp
push
jns
lods
sub
inc
jno
sbb
xchg
aad
add
pop
mov
cld
jo
cmpsl
loop
push
rcrb
ljmp
in
lcall
in
call
or
and
pop
xchg
mov
and
push
inc
cmc
jmp
push
adc
addr16
cltd
test
sub
pop
push
movsl
cmc
adc
inc
test
inc
outsb
loop
sti
sbb
lods
clc
shll
or
outsl
mov
nop
mov
inc
mov
and
mov
hlt
repz
fdivrl
mov
clc
jg
rcrb
dec
jno
sub
call
loopne
icebp
nop
inc
dec
fmuls
dec
loopne
call
test
movsl
fadd
jne
repnz
fnstcw
pop
mov
jg
xor
fcoms
fcoms
mov
inc
mov
mov
pop
jl
imul
in
xor
xor
xlat
xchg
push
lock
loop
jl
xchg
mov
adc
scas
les
fadds
pop
xchg
jno
add
adc
mov
shl
loopne
dec
mov
std
jns
stos
leave
test
mov
jb
ret
pop
cld
cmp
les
dec
push
dec
lds
js
icebp
mov
enter
push
in
sub
fsts
enter
jns
jne
jecxz
lret
lods
int
jno
or
mov
jp
mov
test
cmp
test
repnz
mov
push
imul
xchg
add
inc
idivl
add
test
adc
test
in
lock
xlat
stos
das
mov
adc
and
sub
cld
add
test
pop
aas
pop
sub
scas
lcall
push
in
mov
xor
mov
in
cmp
loopne
scas
repnz
adc
out
adc
mov
cmpsb
je
mov
inc
mov
dec
call
mov
jmp
scas
cmp
jmp
aas
lock
push
mov
ja
dec
cmp
mov
js
inc
mov
jb
fcmovne
pushf
sub
int3
js
or
aad
mov
mov
inc
mov
mov
add
push
stos
pop
mov
das
mov
mov
out
in
jg
js
jp
mov
mov
shlb
mov
dec
adc
mov
push
cmp
mov
cmp
test
cmp
and
stos
push
repnz
pop
js
leave
inc
shrb
pop
adc
or
clc
loop
scas
imul
call
nop
stc
cmp
mov
loope
mov
repnz
outsl
sub
cmc
mov
cs
mov
scas
lret
sub
call
lock
mov
pop
and
int
cmc
fisttpl
push
lock
mov
jl
shll
push
in
rcr
frstor
push
xchg
jne
push
leave
mov
das
shll
mov
in
sub
stos
lret
cmp
sub
in
or
cmpsb
sub
mov
rcr
sub
clc
repnz
pusha
cli
push
inc
lock
or
inc
mov
jmp
ss
cmpsl
dec
nop
lods
out
loopne
pop
inc
sbbb
inc
xor
repnz
adc
pop
xchg
pop
mov
lret
jge
dec
fcoml
movsb
lret
xor
jb
stc
or
mov
leave
push
pop
mov
inc
cmpb
rcr
mov
test
in
popl
push
clc
dec
jmp
daa
xchg
dec
pop
bound
and
call
xchg
sahf
mov
mov
es
fists
sub
jmp
mov
xchg
out
pop
cmp
adc
jno
hlt
leave
imul
mov
mov
decl
mov
stc
jnp
nop
jmp
js
or
adc
pusha
mov
dec
clc
pop
xchg
cwtl
jg
cli
mov
push
fbld
fstps
lods
jnp
sarb
push
xchg
cmp
pop
jmp
jo
jl
or
clc
push
and
jo
mov
inc
push
mov
sub
pop
adc
daa
nop
loope
mov
test
imul
mov
lret
daa
in
jle
inc
loopne
jge
jo
cmp
js
mov
mov
movsb
mov
mov
dec
stos
sub
fiaddl
cmpsb
imul
cld
xor
mov
call
stos
lcall
fmull
pop
mov
adc
and
fldl
cli
pop
or
sub
dec
fsub
cli
std
shrb
xor
loope
les
adc
push
mov
pop
mov
sub
jns
leave
pop
in
test
mov
xlat
scas
into
shr
daa
icebp
out
inc
jb
fnop
pop
es
das
push
pusha
push
xchg
daa
dec
movsb
call
clc
jle
pusha
ror
add
add
push
xor
or
mov
call
mov
mov
dec
mov
stc
add
xor
daa
cli
cmc
fcmovnbe
push
add
pop
push
mov
dec
adc
cld
adc
scas
das
call
lea
push
inc
scas
and
call
mov
cmpsl
add
leave
gs
mov
das
pop
lock
nop
aaa
std
push
mov
cmp
mov
push
inc
or
subb
mov
test
outsb
or
dec
inc
mov
push
mov
loopne
push
mov
inc
test
and
push
and
add
cmp
clc
pop
jg
add
xor
and
shrb
sahf
jmp
mov
mov
je
jp
inc
inc
xor
jne
cwtl
pop
push
and
pop
inc
js
and
jns
jg
mov
pop
loop
mov
xchg
sahf
mov
push
jae
repnz
mov
in
sub
inc
dec
mov
lock
add
jl
mov
and
in
std
lret
mov
imull
ja
pop
dec
stc
push
dec
dec
test
inc
dec
mov
notl
fildll
enter
mov
outsb
dec
and
sysenter
pop
or
dec
repnz
gs
jle
mov
sub
push
inc
mov
mov
mov
xlat
lea
or
out
test
push
mov
aam
pop
adc
scas
adc
mov
lcall
cmp
adc
mov
nop
xor
pop
fisttps
scas
adc
call
mov
scas
clc
pop
stos
lret
jae
cmp
and
iret
jo
cmpsb
add
push
call
dec
ja
dec
jecxz
cmpsb
xchg
push
inc
outsb
sahf
mov
sub
cmp
test
jno
movsb
rclb
mov
rcr
mov
or
or
cmpb
hlt
and
jno
or
pop
push
adc
loope
mov
mov
pop
push
pusha
ffree
adc
enter
mov
lret
push
pop
js
jnp
xchg
push
rorb
sub
test
pop
incb
cwtl
mov
and
hlt
mov
or
push
push
cltd
fsubs
sti
dec
outsl
nop
and
clc
jge
orb
pop
xchg
mov
sarl
insl
fcoms
lods
mov
cwtl
pop
xchg
push
cld
jmp
js
nop
fcoml
rorl
push
fadds
mov
popf
je
repnz
xlat
scas
lds
push
jne
nop
jl
and
and
cli
fistpll
jle
push
push
and
mov
xchg
jnp
fisttps
mov
pop
pop
fdivr
das
pop
pop
aad
dec
rcr
out
and
jmp
push
js
pop
insl
mov
stc
sub
mov
out
and
pop
jmp
cld
out
sahf
or
stos
mul
clc
mov
clc
add
int3
mov
push
jo
movsl
nop
ret
fnstsw
das
push
in
and
mov
dec
adc
dec
test
mov
aas
or
in
push
pop
call
je
jne
sti
inc
pop
inc
xor
push
cld
hlt
test
sub
repnz
lahf
fmuls
pushf
or
jne
mov
mov
jle
call
fcom
sub
xor
add
fs
aas
dec
scas
sub
stc
outsl
mov
std
das
lods
loopne
xchg
ljmp
decl
xor
or
adc
cli
lret
xor
enter
je
aad
in
repnz
pop
enter
cmp
notl
add
pop
aas
push
rcrb
fdivrs
sbbb
dec
movsb
jo
mov
cmpsl
cli
cld
and
add
fadds
add
or
xor
mov
jmp
pop
test
divl
outsl
mov
inc
in
mov
test
scas
dec
lock
xchg
loop
stos
shl
jo
outsl
test
sub
sbb
push
nop
mov
stc
xor
mov
dec
inc
out
test
outsb
and
and
imul
stc
push
and
pop
repz
inc
bsr
stos
sub
loope
mov
or
adc
test
mov
adc
scas
xchg
scas
out
stc
cmp
or
stos
xlat
and
std
jns
jne
push
lock
aas
mov
aas
repnz
pop
popa
imul
dec
cli
push
pop
add
pop
push
les
inc
or
or
push
hlt
ficomps
test
adc
jmp
adc
sub
clc
ljmp
adc
dec
shr
das
cwtl
leave
daa
xchg
inc
jp
xchg
dec
loop
mov
and
mov
outsb
adc
adc
mov
iret
dec
or
mov
pop
sub
and
pop
mov
scas
mov
dec
sub
icebp
mov
mov
jle
pop
mov
lret
call
pop
or
data16
movsl
pop
inc
stos
imul
int
repnz
jne
fistpll
pop
push
nop
pop
mov
idivb
and
pop
mov
jns
or
outsl
sahf
sub
fcoms
ret
loopne
jg
and
push
testb
ljmp
mov
test
xchg
mov
sbb
hlt
inc
es
pusha
pop
mov
hlt
mov
pop
cld
mov
sarl
and
scas
push
mov
and
cltd
test
pop
sbb
cmp
out
cmp
mov
cmp
sbb
cli
pop
sub
mov
cmp
adc
ljmp
mov
enter
cmp
cmp
or
ljmp
dec
das
jo
sub
cs
dec
std
outsl
enter
mov
push
jne
adc
or
and
notl
shlb
sub
mov
adc
dec
mov
xchg
lds
stos
xchg
dec
clc
in
jnp
shrb
xchg
mov
inc
cmp
outsl
adcb
test
adc
out
ficomps
pop
cltd
pusha
pop
or
pop
push
push
repnz
fsub
sub
call
mov
out
fistpl
mov
scas
and
xlat
or
adc
fucomip
test
stc
enter
adc
sub
xchg
mov
xchg
pop
mov
iret
clc
icebp
fdivr
push
adc
xchg
cmpsb
or
js
in
fsubs
dec
mov
mov
pop
push
js
adc
dec
mov
xchg
mov
mov
pop
cmpsb
paddw
fidivrl
jle
enter
add
cmc
movsl
fldl
pop
mov
or
lds
mov
in
xchg
cld
call
mov
pop
mov
je
in
aas
repnz
ja
repz
push
movsl
je
pop
dec
into
and
add
push
repnz
and
daa
aad
xorb
and
xchg
push
mov
adc
xchg
pop
or
push
push
rcll
or
jecxz
call
pusha
ret
dec
push
ds
add
xor
push
dec
in
das
mov
in
mov
incb
mov
enter
imul
fcoml
gs
test
mov
incb
mov
jo
pop
and
mov
repnz
jmp
int3
pop
nop
sub
and
ja
sub
repnz
stc
sub
enter
int
cld
xor
and
rclb
xor
mov
jb
mov
adc
mov
loop,pn
call
dec
out
stc
cs
enter
mov
adc
inc
and
jno
or
inc
pop
cmc
ljmp
jmp
and
sbb
add
mov
or
or
add
les
out
push
leave
lock
int
fisttpll
lock
dec
notb
xchg
mov
sub
scas
std
cwtl
mov
dec
jo
call
stc
cmp
nop
cmc
stos
aas
push
or
mov
sbb
mov
pop
dec
dec
mov
test
add
in
push
xor
dec
add
fdivrs
or
sub
aad
stos
and
pop
inc
addr16
add
imul
bsf
lea
or
and
and
in
sub
inc
lret
jg
add
lds
adc
clc
mov
nop
add
inc
add
add
jmp
cwtl
pop
in
sub
mov
cmc
popf
mov
jge
xor
popf
and
pusha
mov
push
outsl
sbb
dec
decl
jmp
leave
negb
bound
push
dec
fmuls
pusha
pop
mov
inc
jns
sub
cmpb
and
cmpsb
mov
and
dec
mov
jmp
mov
sbb
pop
sbb
rolb
mov
lret
cld
call
mov
repnz
xchg
in
jle
lock
in
test
mov
shl
sub
sub
mov
mov
movsb
jp
and
js
lret
and
jmp
call
out
sarb
push
add
repnz
mov
pop
jo
cld
sub
cld
push
pop
mov
out
fneni(8087
in
outsl
clc
and
jg
sub
scas
pop
jle
stc
outsl
cmpsb
loopne
dec
lds
scas
repnz
scas
dec
mov
nop
jb
push
sub
cwtl
fildll
pusha
scas
shl
loopne
les
aaa
jae
mov
xlat
jg
shrl
mov
sbb
es
aam
scas
mov
pop
inc
and
pop
mov
adc
xor
mov
add
ret
and
pop
xchg
in
jp
fprem
jl
sub
mov
xchg
adc
fldcw
loop
mov
pop
sbb
mov
sti
xchg
rclb
sti
scas
jmp
jmp
stc
sti
or
out
fists
into
test
jp
mov
mov
jle
jnp
push
xchg
sti
mov
out
pop
ds
mov
shrl
pop
and
mov
aam
mov
sbb
xor
pop
pusha
pmovmskb
pop
mov
lret
sub
dec
aam
sbb
stos
lods
loopne
leave
in
shrl
mov
push
shr
mov
das
xor
stos
mov
mov
dec
hlt
scas
lret
sub
pop
cmpsl
push
in
push
mov
mov
in
cmp
push
dec
das
in
pop
adc
mov
push
mov
xchg
scas
into
pop
clc
mov
shlb
cli
fwait
mov
jns
imul
ds
ficoms
fsubr
dec
mov
inc
clc
loope
mov
stos
add
or
nop
stos
std
xor
ljmp
imul
and
jg
insl
loopne
inc
mov
stos
lret
add
dec
ficoms
inc
or
int3
pop
lods
push
lahf
sub
loopne
push
fdivl
mov
and
mov
shrb
enter
jmp
daa
xlat
out
repnz
fbld
hlt
adc
lods
jmp
mov
dec
inc
call
popl
xchg
ljmp
and
sub
les
inc
mov
jns
std
sub
and
push
push
sub
das
mov
ja
adcb
lock
sub
xchg
sti
cmp
std
jle
cmp
push
and
or
mov
dec
mov
enter
jg
mov
pop
push
nop
ljmp
clc
je
sub
dec
ljmp
or
nop
pop
and
nop
hlt
lahf
push
mov
lods
jg
cwtl
push
sub
jl
nop
push
pop
lahf
and
mov
test
jmp
fcoms
add
xchg
in
xor
mov
inc
lret
and
lock
cmp
pop
inc
xor
in
sub
aas
sub
inc
sub
jne
rcrb
rclb
or
mov
jmp
mov
cmc
mov
mov
cmp
out
bnd
nop
inc
dec
sub
adc
sti
mulb
mov
outsl
xor
pop
dec
mov
test
std
scas
jg
jmp
mov
dec
loop
adc
in
cli
pop
imull
mov
in
and
mov
adc
jp
test
gs
and
push
aas
nop
pop
fisttps
scas
jns
jnp
mov
jb
nop
adc
and
clc
xchg
push
jne
xor
into
sbb
je
or
in
sub
mov
jns
pop
lods
xchg
xchg
pushf
sub
sub
mov
lret
mov
ljmp
sub
call
shlb
push
test
int
adc
dec
in
sub
mov
daa
enter
das
jns
push
mov
fwait
adc
lret
out
and
ljmp
push
sub
clc
mov
ficoml
fsub
cmc
in
mov
into
dec
mov
sbb
sarl
fcom
mov
jb
dec
sbb
cli
mov
xlat
nop
xlat
scas
icebp
jmp
xor
and
pop
inc
fstpt
jns
sbb
fists
and
inc
jecxz
enter
add
stc
repz
nop
ljmp
jg
mov
fists
nop
out
jo
jg
pop
scas
repnz
incb
ljmp
push
mov
aas
dec
das
addr16
inc
sub
lock
inc
or
jns
fildll
push
pop
fmuls
aad
fcoml
std
jecxz
js
sub
cmpl
mov
jae
stc
or
dec
mov
adc
sbb
jo
and
pop
cmpsl
dec
pop
pop
or
or
fdiv
neg
scas
adc
sbb
and
add
and
adc
jg
es
enter
sbb
add
repnz
push
cs
mov
fsubr
jg
idivb
add
les
mov
dec
and
mov
pop
inc
xchg
scas
icebp
nop
adc
mov
adc
stos
or
and
stc
or
shrb
call
lcall
jmp
pop
mov
mov
pop
repnz
fbld
jl
leave
test
dec
in
mov
inc
xor
or
ret
dec
stc
cld
pop
mov
xor
push
enter
movsb
mov
repnz
xchg
out
aas
cmp
ret
pop
xchg
add
inc
and
imul
movsl
jbe
incl
rcrl
jl
out
cwtl
jmp
push
cltd
sbb
incb
cmpsl
jae
jns
sub
out
inc
fsubr
and
pop
inc
pop
out
and
pop
xchg
add
push
imul
std
sub
test
dec
mov
mov
mov
das
sub
dec
les
in
dec
push
push
ror
fdivrs
iret
jo
push
adc
sub
call
inc
xor
jbe
std
cs
mov
lea
sub
ljmp
ljmp
mov
push
scas
and
enter
enter
xchg
cmc
adc
out
sub
imul
enter
call
mov
dec
ret
clc
test
scas
and
push
mov
stos
leave
add
pop
cld
test
aam
fcoms
pop
inc
pop
pop
lahf
adc
xlat
out
sub
cmc
sti
iret
cmp
scas
lret
jle
cmp
repnz
in
cmp
cmp
daa
popf
rcrl
xor
into
sbb
in
and
xchg
pop
xchg
nop
cld
mov
dec
cmp
and
sub
sti
adc
scas
leave
clc
push
jno
push
imul
push
dec
cmovp
fs
lret
and
dec
lahf
dec
movsl
mov
ja
pop
push
jmp
call
pop
and
sub
sbb
movswl
lods
jo
pop
imull
mov
xchg
fcoms
scas
pop
mov
scas
leave
and
and
sub
pop
int
repnz
pop
and
call
and
mov
push
hlt
decl
mov
repnz
xor
pop
lods
cmp
clc
scas
and
fidivrs
push
dec
in
jp
clc
mov
pop
jnp
repnz
adc
fdivr
mov
push
loop
mov
inc
lock
lods
pop
adc
add
dec
dec
mov
lds
enter
inc
mov
clc
push
dec
jle
mov
nop
repnz
inc
and
cld
sub
xor
pop
je
push
leave
je
cli
addr16
add
xlat
jecxz
inc
lods
outsb
clc
jae
mov
dec
clc
stos
dec
rcrb
dec
jmp
call
dec
cld
cmp
in
dec
or
push
lods
aam
cli
xlat
cmp
ja
push
dec
mov
or
adc
insl
inc
jo
mov
or
xchg
jo
cltd
pusha
push
push
push
dec
lods
and
pop
daa
ds
and
pop
cmc
shll
jns
sub
xchg
dec
fldcw
jp
xchg
pusha
stc
pop
es
scas
mov
in
dec
mov
ja
sbb
adc
lods
lds
mov
lahf
sahf
fcoml
clc
rcrb
repnz
aas
jns
sbb
pop
mov
sub
in
scas
jnp
xchg
or
and
jo
adc
stos
mov
std
mov
test
shrb
faddl
adc
sar
and
push
and
notl
pop
xchg
xor
movsl
jbe
fimuls
ds
repnz
inc
mov
push
scas
dec
out
mov
testb
js
add
and
add
pushf
mov
cli
jge
or
cld
push
in
jg
daa
cmp
dec
nop
cmc
mov
test
mov
mov
push
xchg
xor
add
clc
xchg
sahf
cmp
lahf
test
jmp
in
sub
push
hlt
stos
fimull
test
push
test
xchg
push
jo
pop
sub
scas
shrb
push
shrl
inc
add
adc
mov
ret
aas
rcl
and
adc
ds
loop
rcll
inc
mov
pop
lods
shr
pop
scas
pop
and
movsl
je
push
xchg
add
cmp
adc
mov
xchg
xchg
sub
mov
jns
push
push
xchg
push
and
mov
jmp
sbb
bound
mov
enter
arpl
mov
dec
mov
imul
or
and
mov
jmp
sbb
je
stc
push
sbb
jne
mov
and
inc
and
lahf
adc
enter
test
push
repnz
pop
pop
cmp
dec
test
push
in
imul
push
in
cmp
mov
inc
shrb
insl
movsl
dec
jbe
jns
and
aam
repnz
jns
pop
mov
ficoml
repnz
aas
jns
sbb
pop
mov
add
cmp
sti
xchg
lret
add
jns
or
je
cmc
in
sub
and
enter
loop
xlat
outsl
mov
icebp
enter
mov
std
in
sub
cs
idivl
jl
jle
mov
add
pop
test
mov
loopne
lgdtl
dec
mov
clc
cwtl
mov
jno
pop
or
rcll
jge
lret
mov
mov
or
stc
in
das
cld
test
shr
lcall
or
sbb
push
rorl
and
mul
mov
out
pop
ljmp
test
imul
cmp
fists
sub
sti
iret
jo
scas
fwait
sarb
dec
nop
dec
pop
inc
add
push
jns
cld
dec
sbb
rolb
jge
fcoms
or
gs
cmpsl
and
hlt
loop
mov
mov
jmp
loop
inc
mov
mov
sarb
push
in
mov
dec
ljmp
cli
imull
xchg
es
mov
jo
ja
loopne
push
addr16
mov
push
add
scas
mov
or
sub
and
pop
mov
test
dec
and
jmp
sub
pusha
in
into
cmp
and
jle
push
mov
dec
mov
ljmp
adc
fcom
scas
testb
sub
pop
out
push
call
fwait
push
push
inc
dec
hlt
test
shr
push
jmp
outsl
sub
cmpsb
mov
hlt
mov
sbb
and
rcll
es
fnsave
aas
mov
xlat
add
clc
or
push
outsl
shrl
cld
cmp
cld
pop
cltd
test
das
dec
mov
cmc
ficompl
adc
or
inc
cmpl
daa
jne
pusha
jge
test
lock
mov
enter
out
and
or
lock
sub
dec
cld
inc
clc
and
pop
cld
mov
aaa
es
in
into
mov
cmp
cmp
or
pop
cld
fsubrs
cmp
jle
sub
lds
dec
adc
mov
daa
sub
jo
jae
push
test
and
pop
aad
hlt
out
mov
in
hlt
xchg
pop
fmul
les
leave
push
repz
fcmovu
mov
dec
mov
pop
xchg
cmpb
and
mov
jb
mov
clc
adc
mov
push
inc
scas
and
les
sub
movsb
mov
inc
push
cli
jno
pop
xchg
or
js
scas
sub
stc
add
inc
jmp
nop
lods
xchg
mov
movsl
and
daa
adc
push
sub
dec
outsl
sub
mov
scas
mov
fsubs
mov
adc
jmp
inc
in
or
je
js
cmpsl
jnp
jle
push
and
mov
sub
lahf
clc
cmc
sub
mov
xor
repnz
sub
test
mov
inc
jmp
push
std
in
sub
adc
repnz
incb
mov
adc
mov
clc
jne
jo
stos
or
mov
dec
adc
fsub
ficoms
call
jle
adc
fimuls
fiadds
mov
mov
dec
dec
xchg
mov
dec
sarl
dec
mov
std
pop
enter
dec
fdivs
add
enter
fsubrs
sarb
mov
daa
cli
gs
aad
jne
dec
sarb
push
xchg
aad
xorb
ja
loop
pop
fmul
pusha
repnz
xor
jl
pop
aaa
xor
call
or
bnd
rcl
push
sti
enter
in
imul
push
stc
lret
or
sub
xor
js
rcrl
xlat
sti
fcomps
xlat
stc
dec
fbld
jae
aad
pop
es
jo
jne
add
xlat
adc
mov
lock
xchg
inc
inc
hlt
ret
dec
repnz
addr16
int3
add
outsl
push
repnz
scas
pop
lock
data16
sbb
push
cld
cwtl
ja
rolb
push
inc
sub
push
ret
mov
sbb
popf
xor
inc
inc
je
pusha
mov
push
loope
sbb
jmp
stos
lahf
sub
test
inc
mov
fiadds
mov
xchg
repz
xor
ret
call
ds
mov
fadd
enter
int
fisttps
dec
cmc
push
push
out
mov
in
das
adc
mov
mov
mov
clc
mov
loope
ret
lock
std
and
jmp
mov
js
adc
mov
xchg
cli
cmpsl
adc
or
pop
or
sub
mov
mov
dec
cmp
fdivrs
and
mov
jmp
lret
test
ficoms
int3
in
lods
mov
mov
adc
hlt
mov
ret
clc
mov
mov
xchg
ja
adc
out
repz
scas
push
and
clc
mov
leave
pop
sti
cwtl
repnz
int3
stc
xor
rcrb
jle
jge
mov
lock
cwtl
scas
xchg
mov
cmpsl
fdivrs
pop
dec
enter
repz
jbe
test
leave
lret
jmp
popf
xlat
mov
jb
push
rcrb
ret
in
sub
jo
ret
cmp
push
bnd
sbb
hlt
js
sub
add
in
mov
daa
loopne
aas
loopne
addr16
inc
cld
sub
loopne
clc
push
ret
test
sub
push
ror
or
mov
movsb
scas
sub
sti
mov
mov
gs
popa
cs
adc
adc
mov
inc
sub
scas
clc
dec
dec
ret
scas
fistpl
mov
push
ret
ljmp
es
and
jne
ret
scas
and
pop
lds
nop
mov
xchg
cmc
pop
mov
xor
into
or
inc
imul
push
icebp
faddl
nop
mov
jmp
push
sub
adc
test
mov
into
js
jmp
and
push
mov
cmp
pop
test
mov
scas
xchg
jmp
xlat
jp
popf
loopne
loopne
loope
in
mov
lahf
mov
addr16
adc
sbb
mov
test
ficomps
cld
push
jg
incl
std
ret
jns
push
scas
std
pop
or
xchg
push
lock
mov
mov
mov
sub
mov
call
les
mov
mov
stc
push
and
loopne
sub
dec
push
adc
sahf
pop
imulb
add
fildll
in
sbb
mov
lock
push
dec
popf
sbb
shrl
jle
jbe
push
lret
hlt
enter
test
ret
ja
subb
sub
push
hlt
sti
jl
add
lock
pop
nop
repnz
sbb
cld
jns
dec
fdiv
out
jg
dec
inc
test
fstpt
lock
jae
mov
mov
pusha
jmp
jge
push
call
sub
mov
adc
inc
pop
repnz
or
aaa
cmp
sti
aad
call
pop
ret
sub
stos
enter
mov
pop
sub
sub
in
mov
xchg
hlt
mov
inc
js
jns
paddw
lock
ret
mov
fwait
rcr
dec
sub
repnz
jl
xlat
xchg
sub
and
leave
jno
jg
cmc
push
jo
mov
call
shll
enter
test
sub
and
inc
sub
push
pop
jns
or
sub
nop
and
cs
ret
ds
lret
pop
cld
sub
dec
mov
mov
dec
scas
lcall
loope
sbb
js
shr
out
stos
adcb
adc
fldt
jo
ficoml
mov
lds
sub
dec
stos
lret
pusha
std
xor
jo
or
popa
or
adc
mov
mov
sub
pop
aas
repnz
inc
add
outsb
sub
out
lods
add
iret
test
sbb
cmp
in
pop
ficomps
inc
push
cmpsb
sbb
and
push
sbb
jecxz
mov
sar
and
les
les
mov
outsl
mov
ljmp
xlat
test
scas
sarb
mov
shl
out
call
pop
xor
mov
test
xchg
mov
inc
and
xchg
mov
in
cmp
pop
push
cwtl
pop
popf
dec
mov
xchg
cmp
xchg
cwtl
aam
xlat
add
cmpsl
add
pop
ds
dec
cwtl
jmp
pop
mov
scas
and
mov
jne
or
adc
out
dec
mov
mov
les
dec
fidivrl
mov
lret
sub
pushf
push
in
outsl
cmc
out
das
inc
mov
in
jnp
dec
or
cmp
adc
xchg
dec
adc
sub
fdivrs
jl
aad
int3
js
nop
adc
and
mov
mov
movsl
nop
jg
add
shlb
jp
sub
jo
les
sbb
xlat
cmpsl
ja
sbb
push
stc
jo
xor
das
nop
sar
lret
adcb
fdiv
pusha
mov
xchg
jae
push
jns
push
cmc
mov
test
and
mov
and
insl
lock
inc
cmc
das
scas
and
and
lock
icebp
adc
mov
mov
divl
cmp
jo
mov
repz
pop
mov
dec
stc
subb
cld
test
aas
sbb
push
sbb
sarb
push
hlt
les
in
cmp
sub
cld
jnp
sarb
out
shr
bnd
adc
cmp
ficompl
or
inc
js
cld
pusha
push
out
push
adc
mov
or
or
jb
or
jg
pop
cld
mov
adc
pop
leave
adc
and
mov
js
stc
outsl
out
repnz
aaa
test
nop
pop
adc
cmp
push
push
dec
lods
pop
mov
adc
dec
daa
sar
loopne
in
mov
lcall
push
push
mov
fdivrs
in
lret
sub
es
rcrb
adc
pusha
mov
inc
adc
decb
jmp
ljmp
cmp
pop
pusha
push
sbb
stos
dec
lock
xchg
js
mull
adc
sub
sbb
sub
sbb
repnz
mov
mov
shrb
movsl
fdivrs
pop
push
fisubrs
cmp
push
cmpsl
les
pop
adc
push
mov
mov
xchg
call
cmpsb
dec
mov
int3
repnz
shlb
leave
push
cmp
xlat
xchg
in
out
mov
mov
in
jl
dec
shll
push
push
mov
cmc
mov
cmp
pop
repz
mov
js
lret
jl
push
xchg
sub
test
jmp
xchg
nop
jge
daa
jg
or
jl
dec
adc
push
jmp
cmp
ljmp
adc
js
scas
xlat
aas
pop
enter
lock
sub
cmc
lret
jns
mov
cli
ror
dec
in
movl
les
sahf
and
es
adc
das
inc
sub
in
ja
nop
jbe
xchg
js
mov
or
and
xchg
mov
cmpb
cmp
insb
out
test
fld
aad
call
leave
jge
sbb
and
pop
mov
mov
jecxz
repnz
pop
rcl
hlt
cli
lcall
dec
sbb
pop
call
pusha
scas
sub
fcomp
popf
mov
dec
decl
sbb
test
pop
and
repnz
push
jl
jg
cmc
insl
cmp
add
pop
fcompl
shl
pop
and
mov
xchg
out
mov
mov
mov
lret
adc
cmpsl
cmovs
pop
lahf
cwtl
ret
aaa
jb
test
dec
or
lock
push
mov
mov
inc
sbb
inc
mov
and
dec
in
cmp
daa
add
loopne
sub
out
pop
scas
jp
out
and
fsubrl
inc
jg
cmc
sbb
enter
adc
loope
in
jne
sbb
lock
nop
push
std
pop
and
pusha
sti
push
push
das
mulb
and
in
jle
sar
jns
dec
fdiv
push
add
into
mov
and
and
fsubrp
lret
dec
jne
pop
sub
pop
adc
aas
cmp
stos
jo
inc
pop
lret
fdivs
pop
scas
lret
fisubs
add
xchg
scas
bsf
lea
or
and
notl
pop
in
ds
in
sub
in
movsl
nop
jg
jle
jo
xchg
iret
add
and
clc
test
push
cmpsl
jnp
enter
dec
pop
dec
sub
hlt
cld
inc
test
mov
outsl
push
jmp
loopne
inc
or
pop
lds
sbb
inc
add
sub
or
cmc
or
movsl
xor
call
insl
pop
pop
popf
xchg
inc
sarb
fs
mov
xchg
fs
addr16
sbb
imulb
add
push
pop
fidivl
movsb
sub
pop
or
rclb
jge
sub
enter
mov
and
aad
xor
call
adc
mov
or
adc
cli
out
popf
sub
and
in
scas
adc
mov
test
clc
adc
ret
popa
mov
hlt
mov
mov
mov
push
stc
inc
or
adc
out
scas
enter
into
movsb
test
mov
or
movsb
mov
mov
js
les
test
incb
repnz
aas
jns
pminsw
es
stos
lods
mov
scas
dec
pusha
scas
mov
and
sub
jne
push
stc
hlt
loop,pt
stc
sub
sub
xchg
lcall
cli
dec
test
cmp
loop
pop
scas
sti
push
push
mov
inc
dec
negb
aam
sub
dec
cmpb
leave
sbb
cwtl
jb
in
jp
nop
fists
jp
pop
enter
leave
mov
nop
jb
push
sub
xlat
jg
and
leave
lds
adc
out
out
test
lds
adc
clc
call
jmp
loope
adc
test
lds
in
mov
mov
sbb
dec
dec
fcmovnb
lds
sbb
dec
cli
jle
mov
sbb
loop
std
mov
cld
xchg
rcr
mov
xchg
xor
mov
nop
jo
test
std
mov
xchg
push
push
rclb
lods
outsb
or
sub
out
push
xor
jecxz
stos
enter
add
inc
incl
ljmp
sub
inc
push
out
cs
fildll
jne
fdivrs
popf
test
dec
mov
clc
mov
cli
into
sarb
fcomps
daa
xchg
pop
mov
aam
aam
pop
fsubl
xor
std
lret
fildll
fsubl
mov
or
pop
dec
push
iret
call
call
dec
xchg
sti
jg
jo
jg
loopne
pusha
mov
cmc
gs
cwtl
push
dec
push
scas
negl
xor
jecxz
mov
je
push
fsubrs
loop
mov
aas
lods
ja
test
push
pop
pop
jle
cmp
jmp
out
fwait
or
xchg
jl
mov
xlat
mov
cmc
or
jge
nop
aam
clc
out
sub
stc
cmp
loop
push
lahf
pusha
push
xlat
icebp
js
push
xlat
icebp
sarb
ja
pop
push
push
scas
push
jmp
sub
pop
mov
std
cmp
push
in
mov
pop
push
aam
scas
xchg
jecxz
incl
mov
lahf
and
hlt
and
insb
jno
jl
mov
dec
jg
mov
mov
fldcw
sub
cli
cs
aas
lock
icebp
sub
sub
repnz
jmp
mov
sub
cmp
das
stc
test
pop
stos
aas
pop
mov
daa
lret
es
in
imul
popf
cs
out
cld
xchg
jae
rcl
and
inc
jb
push
dec
aam
js
lods
aaa
clc
nop
mov
cmc
lret
cld
cmc
cli
lcall
sub
enter
sub
leave
lods
xchg
mov
fdivl
push
movsl
push
lock
sub
dec
mov
cmpsl
pop
stos
mov
rcl
jb
js
push
imul
cmp
repnz
fnstsw
push
xchg
dec
pusha
pop
inc
push
sti
xlat
lods
push
or
lock
pop
mov
adc
aad
push
aam
std
xor
push
or
mov
lock
or
je
jg
xor
jmp
mov
enter
sbb
inc
or
aas
sub
stc
dec
pusha
in
fsubs
stos
sub
clc
loopne
jns
xor
scas
enter
out
push
out
hlt
popf
push
pop
push
enter
mov
mov
pop
lods
aaa
push
inc
stos
and
ja
add
adc
icebp
test
adc
aas
jo
popl
push
ds
add
pop
mov
inc
call
sub
cmc
lret
call
mov
pop
push
pop
or
scas
and
mov
dec
jmp
adc
xchg
nop
lret
int
cli
fadd
hlt
and
orb
icebp
fcoms
push
mov
pop
outsb
jne
js
lock
adc
lods
adc
ja
sub
xchg
mov
mov
inc
jg
testl
xchg
js
sub
inc
lds
clc
ss
push
dec
cmc
imul
mov
dec
push
mov
nop
xchg
mov
mov
mov
sub
xor
cs
sub
pop
sub
jno
or
daa
aas
xchg
int3
ljmp
js
aam
add
push
dec
and
adc
out
mov
das
clc
lock
xchg
loop
mov
in
ljmp
jo
scas
cmp
call
fsub
cmp
js
or
push
mov
jns
js
mov
nop
jg
pop
popf
cmp
test
mov
mov
icebp
mov
jno
nop
jmp
call
mov
je
test
adc
sbb
outsb
cld
js
inc
add
out
mov
test
nop
scas
test
jecxz
jmp
movsb
ja
jnp
lock
lods
xchg
push
pop
jo
ja
enter
movsl
sub
cmc
xchg
and
add
in
push
movsb
mov
cwtl
daa
and
insl
xorb
jns
or
cwtl
test
pushf
mov
pushf
scas
enter
or
push
inc
cltd
mov
clc
pop
mov
or
mov
cmp
std
jnp
nop
daa
je
jo
pop
mov
scas
repnz
adc
nop
test
mov
and
adc
roll
and
mov
mov
hlt
jmp
jne
push
mov
movsl
dec
mov
cmpsl
jge
nop
leave
push
call
mov
jmp
mov
repnz
jl
jge
add
nop
hlt
in
mov
enter
fisttps
cld
jl
jle
jmp
pop
daa
outsl
mov
xor
movsl
jl
jg
shrl
pop
push
jae
push
mov
mov
insb
scas
enter
insb
sub
jo
inc
movsb
and
les
cld
pop
fisttps
outsb
std
cmp
std
jns
out
les
enter
fnsave
imul
dec
jno
sbb
cwtl
in
push
lahf
fsts
push
jo
test
enter
push
cs
cmp
mov
cld
cld
cli
jge
cwtl
lods
shr
push
xor
in
jg
mov
mov
enter
enter
push
inc
or
int
jno
or
adc
shl
xor
in
sub
insl
ds
notl
xor
or
ficompl
fsub
add
xor
dec
dec
dec
mov
shlb
push
fs
fcoml
dec
test
movsl
fdivrs
jo
mov
jle
je
mov
mov
jmp
jg
nop
xchg
scas
enter
cwtl
mov
and
enter
movsb
mov
jmp
add
cmpsl
scas
enter
mov
cld
rolb
and
inc
fildl
iret
enter
out
bound
push
in
adcb
enter
push
dec
fists
pusha
jne
pop
dec
test
popf
icebp
test
in
sub
dec
sub
loop
inc
and
pop
loopne
dec
cld
mov
cwtl
mov
fcomi
sub
cld
sub
stos
mov
out
adc
in
enter
movsb
test
mov
mov
mov
out
enter
xchg
out
icebp
sbb
cmp
test
enter
mov
lods
int
push
in
ds
pop
rclb
leave
push
mov
fstl
jnp
xchg
scas
lret
das
ljmp
mov
adc
leave
mov
scas
mov
call
js
dec
lret
xor
cmp
fsubl
cmpsl
push
rcl
push
pop
jns
jno
sub
xchg
jmp
cmp
mov
aas
rolb
nop
fdivrs
mov
mov
leave
jg
js
das
mov
js
inc
inc
or
inc
leave
das
jecxz
sti
push
clc
call
fbstp
jmp
jg
xor
movsl
pop
lahf
pop
loope
sbb
xlat
xchg
dec
adc
scas
ret
in
cmpsb
je
push
jle
xor
scas
mov
sti
dec
mov
cld
xchg
je
jg
imul
or
push
icebp
pop
cmp
sub
sub
test
push
roll
xchg
push
sbb
loopne
les
test
mov
or
jns
divb
cmp
and
mov
mov
shl
in
jg
loopne
jnp
sub
jmp
mov
faddl
pushl
jp
dec
call
sub
shrb
mov
in
test
out
in
das
pusha
xlat
scas
sub
hlt
xchg
inc
stos
cld
mov
and
lret
in
jle
clc
push
sub
adc
mov
fstpl
pop
jo
test
leave
adc
sub
xchg
test
pop
mov
cld
movsb
push
mov
cld
xchg
dec
leave
mov
adc
call
lds
std
cmp
jmp
adc
push
int
pop
and
imul
leave
aad
shl
hlt
loopne
test
mov
aas
jno
cmp
shr
test
leave
mov
idiv
mov
xchg
std
dec
call
std
clc
stos
leave
mov
movsl
pop
adc
cwtl
jp
popf
cmp
leave
mov
cwtl
notb
fdivr
or
pusha
std
cmp
and
adc
and
scas
dec
out
fwait
test
mov
insl
cs
adc
leave
sti
lahf
push
test
mov
notl
sub
push
jmp
xor
xor
push
call
js
dec
fisubrl
cmp
push
es
enter
sbb
nop
push
inc
xor
lret
mov
push
push
sbb
or
jns
sbb
adc
adc
fiadds
mov
and
stc
mov
push
scas
loop
aas
xchg
adc
imul
orb
cli
jge
loopne
xchg
cld
js
loopne
mov
dec
jns
aas
mov
and
jne
jge
or
imul
daa
sub
mov
stc
loopne
out
dec
adc
jmp
sbb
out
test
out
mov
jge
jo
mov
and
lret
daa
or
ja
pop
shll
outsl
cmp
sbb
cmp
xchg
mov
aas
test
stos
das
push
out
stos
repnz
sbb
jae
push
and
lret
and
out
jo
divl
jl
sbb
pop
das
and
pop
mov
aam
push
xlat
leave
aad
jo
daa
ja
sub
adc
dec
scas
sarb
xchg
jg
sub
dec
jbe
daa
testb
subb
cli
das
mov
lods
cmp
add
add
mov
sti
pop
push
clc
lods
mov
pop
imul
gs
jge
mov
dec
pop
adc
jmp
sub
xor
xor
sar
mov
call
add
loopne
dec
mov
dec
inc
outsb
loop
adc
jb
cld
sub
and
out
dec
fwait
lock
arpl
mov
and
jne
js
cmpsl
jno
pop
loope
jle
or
push
lret
mov
jg
js
outsl
adc
cmc
or
imul
inc
nop
mov
scas
in
rcr
loop
lret
fcoms
jne
mov
mov
hlt
std
cmp
dec
mov
div
bnd
jmp
inc
cs
enter
pop
dec
rol
push
adc
jno
es
outsb
mov
sub
clc
les
test
lret
jo
xchg
push
outsl
pusha
jl
or
mov
adc
and
xchg
fstps
ja
cmpb
mov
addb
inc
xchg
out
fsubl
and
pop
xchg
adc
pusha
mov
outsb
cld
pushf
xchg
mov
or
dec
clc
clc
rolb
cmpsl
or
xor
inc
push
outsb
mov
mov
jg
adc
test
sbb
mov
mov
jmp
les
pop
xchg
call
lods
xlat
cmp
and
jmp
es
push
xlat
jecxz
repnz
inc
jp
inc
idivl
lahf
mov
in
cmpb
push
jmp
cmp
sub
jo
lods
pushf
cltd
or
xor
xlat
clc
shrb
notl
push
jmp
push
sub
out
cmp
rclb
nop
in
aas
adc
lods
lock
das
mov
and
push
loop
jno
fcoml
push
rcr
mov
loope
and
and
and
pop
inc
aam
enter
add
fcoms
push
bsf
lea
or
and
xchg
add
and
pop
in
ds
cld
and
call
scas
mov
sbb
in
gs
jg
sub
enter
lock
cld
xor
hlt
test
cmp
enter
clc
scas
repnz
jns
sbb
cld
adc
and
loopne
test
dec
nop
scas
hlt
lods
js
dec
lods
dec
jmp
insl
rcr
dec
push
or
and
xlat
mov
icebp
je
ret
iret
cld
sub
inc
mov
into
jo
enter
inc
sbb
and
cmc
stc
sbb
cld
in
xchg
in
sub
negl
pop
nop
cmp
mov
or
xor
cld
adc
sub
pop
pop
pop
nop
inc
scas
enter
inc
inc
mov
dec
or
cmp
sub
inc
pop
stos
push
dec
stos
das
fcoms
roll
and
push
pop
cmpsl
hlt
add
and
jg
fdiv
and
xchg
jne
mov
nop
rcr
push
lock
rcr
mov
push
and
cwtl
rcr
sbb
lock
dec
nop
test
scas
call
outsl
jl
push
js
lret
xchg
jl
std
inc
enter
in
nop
lahf
addr16
dec
ja
lret
fcmovbe
xchg
enter
or
gs
daa
outsb
icebp
push
push
mov
jle
cwtl
testl
add
repnz
shr
push
aas
xor
dec
loope
leave
add
jl
in
pop
and
and
adc
mov
push
lods
sbb
xor
add
ljmp
test
dec
cs
xchg
xchg
mov
and
inc
in
sarb
lods
adcb
loopne
adc
push
repz
xlat
in
mov
mov
xlat
dec
push
pop
lock
sub
push
dec
mov
call
mov
inc
lods
pop
inc
cmc
lods
jl
push
or
mov
dec
mov
into
sarb
leave
std
jp
clc
dec
mov
push
mov
aad
cmp
ror
pop
inc
imul
cwtl
jmp
in
fdivrl
shl
pop
ja
pop
pop
mov
lret
push
icebp
loopne
std
cmpsb
pop
scas
sbb
outsl
and
lret
mov
nop
pop
lods
pop
push
pop
mov
and
pushl
jl
jae
fists
pop
enter
jo
mov
mov
stc
push
mov
nop
inc
or
adc
scas
adc
inc
nop
mov
pop
out
sub
push
movsl
pop
clc
clc
add
push
or
scas
and
scas
clc
outsl
adc
int3
mov
mov
sahf
test
mov
stc
shl
push
shrb
pusha
cld
sbb
stos
iret
mov
ss
test
incb
scas
and
aad
sub
pusha
in
pusha
mov
sub
lret
mov
add
in
sub
nop
mov
dec
push
nop
nop
xchg
cmpsl
call
mov
incb
jmp
inc
mov
rcr
xlat
xchg
aaa
iret
js
push
nop
test
push
pop
inc
int3
scas
push
lods
jmp
outsb
clc
xchg
in
adc
stc
lock
adc
addr16
popf
adc
jne
fstl
jg
dec
int3
xchg
lds
sub
mov
and
bound
fdivs
fcomps
int
pop
cmp
mov
int3
aas
clc
loopne
movsl
and
int3
stos
sub
in
jae
nop
jns
pop
inc
jge
fsubrs
je
cld
cwtl
test
xchg
std
and
out
dec
mov
push
les
fwait
outsl
add
inc
std
mov
sahf
fdivrs
int3
mov
mov
int3
sub
scas
pop
cli
mov
inc
les
mov
fists
mov
enter
int
fdivrl
xlat
out
and
rorb
and
pop
nop
shrb
cmp
push
scas
mov
int3
or
mov
mov
stc
mov
int
and
aad
adc
sti
test
scas
mov
jns
sub
lcall
lock
sbb
pop
and
imul
add
and
mov
pop
nop
xor
pop
test
pushl
and
nop
shrl
icebp
sub
and
adc
scas
leave
cmp
inc
jns
pop
mov
inc
and
enter
jne
fdiv
push
lds
sub
cmp
daa
aaa
mov
cli
fisubrs
daa
inc
int
loope
sub
mov
push
fs
inc
sub
cmp
cmp
fdiv
les
jle
inc
mov
add
enter
fcomp
inc
mov
pop
adc
nop
scas
les
mov
push
push
lock
sti
sub
int
jbe
push
rcll
sub
jmp
loopne
incl
cmc
ret
pop
shll
aad
push
and
nop
inc
lea
lock
pop
loope
mov
push
cmc
sahf
cmp
nop
std
cmp
sub
in
clc
xor
clc
mov
cmpsb
xchg
and
stc
pop
inc
mov
push
ds
push
je
pop
xchg
cmp
ljmp
jmp
sub
sti
sub
in
cmp
hlt
mov
test
repz
das
cmpsl
sar
das
stc
sbb
fisttpl
sub
cli
push
xor
pop
dec
stos
sub
cmc
out
ds
stos
test
call
xchg
fdivr
and
lahf
je
push
ret
pop
or
int
mov
pop
cmp
outsb
inc
mov
mov
push
lock
adc
fisubrl
out
dec
scas
lret
dec
out
outsl
and
sub
out
repnz
jp
pop
mov
test
icebp
int
jl
jg
mov
dec
mov
mov
mull
mov
adc
jmp
or
scas
jnp
push
mov
outsb
adc
cmp
ljmp
les
cli
xchg
mov
mov
and
cwtl
out
push
mov
jmp
mov
int3
js
dec
push
adc
mov
cmpsl
ret
push
inc
loop
and
pop
lahf
outsl
cwtl
xchg
sub
inc
hlt
cmp
adc
dec
add
test
repnz
mov
int
pop
es
mov
pop
fdivs
into
xchg
shll
ffree
ds
enter
push
ja
mov
pop
pop
cmp
inc
mov
into
cmp
call
scas
test
loop
sti
test
ljmp
xlat
loop
mov
mov
mov
addr16
into
mov
xlat
sub
push
mov
imull
repnz
enter
mov
mov
aad
mov
xchg
lcall
mov
sbb
push
pop
lcall
test
ljmp
mov
mov
xchg
dec
ficompl
and
xchg
jae
xchg
pushf
push
inc
rcl
push
pop
or
sbb
or
push
adc
scas
repz
sbb
or
adc
jl
pop
pushf
pmovmskb
fcmovu
mov
mov
mov
mov
sub
lds
lods
push
enter
or
sbb
repnz
mov
add
in
in
jp
jae
jl
push
pop
mov
mov
jne
push
dec
clc
pop
inc
mov
xor
nop
fcomip
lods
iret
pop
into
mov
cld
xor
in
enter
xor
loop
les
out
scas
pop
imull
leave
and
les
and
mov
leave
inc
push
rcrb
repnz
jno
pop
inc
adc
lret
pop
cmp
jb
std
sub
call
mov
inc
in
enter
inc
mov
out
adc
enter
test
call
in
mov
jmp
push
pop
les
cmp
or
and
cmpsl
jne
inc
jb
dec
js
in
test
out
dec
test
iret
sti
aas
xorb
iret
cmp
jp
mov
jmp
adc
lods
xlat
mov
repnz
js
adc
lods
sub
js
mov
outsl
mov
out
repnz
sbb
hlt
jnp
pop
mov
pop
decl
lret
jmp
add
out
lret
push
les
iret
scas
iret
mov
repnz
movsl
jge
mov
and
test
aaa
add
xchg
mov
pop
mov
into
sub
lock
and
iret
mov
mov
clc
mov
scas
dec
out
mov
clc
int3
jo
test
iret
pop
cs
pop
stc
daa
sbb
mov
mov
les
xchg
push
fwait
call
js
jp
lock
mov
outsb
pop
inc
pop
hlt
test
jp
rcrb
call
sarb
movsl
scas
mov
std
cmp
test
jnp
pusha
hlt
cmpsb
js
and
cli
cmc
pop
cwtl
ja
sbb
popf
push
adc
addr16
sar
nop
stos
nop
sub
push
fs
lret
incb
sbb
es
lea
cli
mov
or
sub
dec
jge
sub
or
pop
js
pushf
dec
cmp
lret
outsl
push
repnz
fdivl
enter
cmp
ret
pop
pop
dec
adc
in
fildl
jg
and
adc
enter
or
loop
adc
and
stc
sub
cld
test
enter
xor
cld
mov
enter
inc
or
movsb
xchg
sub
das
loope
clc
aad
xchg
sub
nop
leave
jg
sbbb
iret
jne
shlb
out
pop
outsb
enter
mov
or
push
cli
outsl
lock
test
pop
imul
pop
pop
and
aad
fdivr
add
push
or
adc
imul
shrb
nop
arpl
test
jmp
mov
or
enter
sbb
cli
and
fsubl
sbb
push
sbb
pop
daa
xlat
out
ja
ja
sub
stc
cmpb
mov
mov
or
icebp
cmp
loopne
push
pushf
push
mull
iret
mov
mov
xchg
enter
fimuls
and
dec
mov
daa
push
mov
inc
rorb
test
outsl
lock
flds
pop
and
in
loope
lret
ljmp
mov
lods
sub
test
hlt
aas
dec
sbb
aas
mov
dec
xlat
xchg
sub
leave
sub
and
push
imul
sarl
loope
ja
lock
ljmp
loop
adc
gs
ja
lock
sbb
or
hlt
lahf
push
enter
call
hlt
test
or
mov
daa
push
inc
jo
fcoms
adc
mov
xchg
pop
in
jle
inc
icebp
mov
das
divb
jg
mov
xchg
data16
xlat
sti
jg
hlt
stos
loop
scas
adc
clc
mov
xor
aad
out
mov
lods
clc
je
fadds
or
sbb
jmp
in
jle
sbb
test
jo
insb
loope
leave
es
mov
cmc
dec
rclb
xchg
ds
pop
jns
pop
bound
sarb
pop
bound
shl
lds
jge
jno
sarb
mov
pop
rorb
mov
lock
inc
mov
xlat
inc
mov
cld
sahf
xchg
fnsave
sbb
mov
mov
jmp
je
test
jmp
dec
mov
nop
pop
push
dec
cmpb
push
ret
lahf
fsubrs
inc
dec
push
sub
call
nop
les
pop
mov
out
push
mov
cmp
nop
fsubrs
int3
add
pop
push
adc
jle
mov
and
jo
or
clc
notb
mov
orb
data16
in
sub
je
fiadds
scas
iret
inc
repnz
push
nop
jo
jp
jmp
xor
cmp
icebp
test
ds
xchg
dec
lock
clc
mov
fcompl
adc
jmp
ljmp
adc
scas
mov
movsb
sarb
in
jecxz
incl
mov
lods
das
test
stos
clc
lds
stos
mov
jg
xchg
and
jl
jg
hlt
scas
enter
mov
add
mov
stos
sub
fcomps
testl
daa
jg
clc
aad
sub
push
mov
adc
repz
std
daa
jnp
xlat
jns
push
scas
sub
sbb
cmpsl
call
xlat
or
rclb
add
mov
mov
jnp
mov
aaa
pusha
movsl
test
call
sub
xchg
and
mov
sub
xlat
outsl
call
add
loop
sub
in
pop
xchg
inc
test
push
xor
repnz
push
call
mov
leave
or
loopne
dec
mov
dec
pop
dec
es
mov
es
push
or
sub
repnz
jae
faddl
mov
or
adcb
jge
clc
jne
in
jp
xor
and
xchg
xchg
js
cmp
nop
decb
repnz
inc
clc
jns
dec
test
fcoms
cmp
ljmp
clc
fstl
jo
pusha
outsl
loope
ret
adc
fdivr
das
jl
push
cmpsb
test
and
les
rorl
bnd
stos
push
repnz
jmp
jnp
mov
out
lods
inc
mov
test
lret
fimuls
das
xor
add
jmp
pop
adc
push
adc
pmovmskb
enter
inc
pop
stos
push
push
inc
and
dec
jnp
js
pop
mov
pop
movsb
inc
inc
mov
sbb
xchg
fsubl
xor
cld
cld
push
mov
sub
popf
xchg
mov
in
enter
or
clc
out
test
push
mov
xchg
test
adc
cmp
repnz
cli
pop
loopne
test
sbb
mov
push
push
stos
mov
sub
jo
fbstp
imul
hlt
je
xlat
fsubl
xor
std
push
bound
jae
xlat
das
sarb
je
nop
jl
push
enter
rcll
pop
or
std
ret
pop
mov
imull
adc
dec
hlt
mov
call
std
xchg
imul
movsb
cmpsb
xor
ds
xchg
call
clc
mov
lods
lods
mov
fdivrs
xor
adc
fcomps
incl
mov
fs
fisttps
lret
mov
fdivl
push
in
jl
jg
test
or
push
dec
mulb
js
pop
test
mov
and
mov
dec
nop
and
lds
pusha
repnz
pop
pop
inc
xchg
scas
sti
in
nop
mov
jle
ljmp
call
xchg
dec
ficompl
xlat
mov
sub
enter
push
hlt
push
push
loope
shrl
mov
dec
mov
add
jo
les
lret
ror
mov
xchg
sub
clc
scas
xchg
jp
and
pop
stc
add
sub
xchg
jp
adc
mov
jno
push
cmc
lds
iret
mov
xor
ffree
cwtl
cld
mov
filds
imul
enter
clc
mov
lock
test
rcll
call
pop
in
das
es
mov
pop
or
shll
mov
jnp
xchg
ljmp
add
shrb
cwtl
sti
inc
fcoms
adc
sar
xchg
mov
ds
mov
repnz
mov
mov
rcl
fsubrl
jge
mov
fistpl
rcrb
mov
push
cmp
sti
lret
push
cli
push
aam
push
lret
dec
push
push
mov
or
rcr
lock
xchg
inc
rcl
sti
js
rcl
xchg
and
cs
leave
sub
jo
popf
aaa
add
pop
pop
ja
mov
pop
cli
xchg
mov
addr16
daa
inc
dec
jg
jg
loopne
fwait
sbb
inc
mov
pop
shrb
call
jns
mov
mov
inc
push
sub
jns
or
out
add
and
lods
sbbb
je
jne
flds
ja
dec
cmp
subb
jnp,pn
jg
jno
fucom
jne
jns
push
imul
dec
pop
dec
sub
mov
pop
test
mov
das
sar
xchg
cwtl
incl
adcl
xchg
jb
rcrl
lret
shll
fdivr
xchg
mov
and
jno
push
cmc
sub
cld
pusha
scas
enter
dec
mov
movsb
mov
and
jno
outsb
jle
in
pusha
stos
and
or
xchg
iret
in
cwtl
stos
loop
aam
jne
fstps
repnz
stc
push
dec
fdivrs
xor
and
rcl
aas
or
pop
loopne
in
jp
clc
clc
scas
hlt
mov
sub
rorb
rorl
mov
adc
sub
push
inc
loope
sub
sub
fdivrs
nop
xlat
lret
jne
mov
jns
imul
xchg
jmp
push
add
lea
push
adc
fidivrl
sbb
je
push
dec
lds
mov
add
daa
xchg
clc
cld
test
je
test
daa
pop
nop
push
xchg
daa
dec
mov
sub
clc
cmc
cli
pushf
clc
add
add
push
xor
or
je
fbld
nop
push
loope
negl
ja
pop
fdivrs
dec
inc
sbb
lret
call
inc
daa
outsl
shrl
pusha
movsb
in
and
dec
clc
cmp
add
movsb
push
in
fldt
sub
lock
sub
inc
pop
inc
test
and
or
sarl
jge
dec
imul
dec
add
cmp
sti
xchg
lret
testb
aas
lock
and
cli
push
sbb
add
aaa
nop
mov
shll
xor
lods
std
aas
mov
push
sbb
sub
adc
aaa
sbb
and
out
push
jge
js
mov
je
and
or
sub
js
sub
push
mov
insb
adc
jne
hlt
jo
loop
shl
dec
mov
mov
push
pop
loopne
xor
dec
push
call
sub
cmc
sti
iret
xor
push
pop
pop
and
jo
sarl
cmp
call
jo
cltd
inc
aad
mov
mov
das
pop
cmp
sub
nop
pop
nop
lock
aad
mov
loop
int
cli
outsl
lock
xor
or
enter
push
fcomps
lret
pop
enter
fwait
and
jo
call
sub
fdivr
fimuls
cli
jae
jmp
push
jle
xor
scas
lret
push
jmp
dec
and
pop
jo
popf
adc
dec
pop
xchg
nop
cli
outsl
pusha
inc
outsb
sub
push
fs
mov
aam
test
mov
jle
aam
jg
lock
mov
jmp
mov
push
pop
ljmp
dec
scas
add
es
stos
into
push
cld
clc
xchg
jne
push
jl
je
push
repnz
jns
cld
mov
jae
jmp
mov
or
lock
xchg
nop
or
cmc
jno
pop
push
add
test
mov
lcall
fadd
es
and
gs
fcoml
push
test
movsl
add
xor
jge
push
nop
in
scas
ror
dec
mov
dec
or
mov
adc
sar
dec
stos
mov
clc
mov
add
mov
push
cli
push
call
inc
cmp
pop
pop
mov
test
xchg
cld
add
hlt
mov
lcall
out
aas
mov
stos
xchg
repnz
mov
sub
fldenv
pop
nop
lock
or
out
jle
mov
cmc
or
add
stc
pop
mov
out
and
and
mov
pop
mov
lret
fucomip
lock
fmulp
hlt
popf
jbe
pop
inc
cwtl
aas
push
clc
mov
bound
jge
pop
and
lcall
hlt
les
sarl
in
testl
push
mov
and
mov
stc
or
jl
xlat
in
jecxz
sti
sub
fiaddl
inc
das
shrl
sbb
pop
inc
movsl
loop
mov
dec
adc
and
adc
fiadds
std
sub
pop
and
mov
push
clc
aad
and
sub
sahf
fcomps
out
test
in
dec
fwait
push
enter
push
mov
jno
das
mov
stc
jp
xor
inc
adc
test
dec
fidivl
stos
les
cs
notl
test
add
push
jae
sub
testl
inc
fdivr
icebp
sbb
sbb
mov
mull
sub
cmc
jno
or
enter
ss
ret
adc
lds
mov
mov
aam
std
cmp
xchg
stos
outsl
fdivrs
mov
sti
cmp
stc
or
inc
loope
leave
push
xor
push
pusha
cmc
ljmp
jmp
mov
pusha
jmp
out
mov
scas
inc
nop
cmpb
hlt
scas
mov
push
jmp
nop
mov
xchg
scas
fwait
loopne
mov
sub
push
dec
je
call
stc
cmp
clc
ret
or
add
es
xlat
movsl
push
dec
xor
or
sti
call
cli
dec
mov
mov
xchg
mov
adc
jmp
mov
int
les
sarb
cli
sub
jo
movsl
add
cmp
imul
ficoml
sbb
fdivrs
nop
repnz
sbb
add
inc
repnz
inc
xchg
inc
add
sti
enter
cmp
nop
decb
sahf
and
jo
or
xchg
bswap
sub
loopne
sahf
nop
jg
pushf
and
mov
cmpsb
or
and
pop
in
sub
add
lret
lock
mov
fsubrl
std
and
and
pusha
mov
fimull
mov
xchg
sbb
mov
jecxz
xchg
jg
fcoms
cmp
and
push
sub
mov
pop
push
push
in
xchg
jle
jp
shrl
fildll
adc
inc
loope
enter
test
call
add
cmp
mov
hlt
pop
adc
and
cs
and
mov
in
mov
jecxz
hlt
inc
clc
fsubs
icebp
in
sub
sub
in
in
mov
push
in
cltd
inc
pop
mov
jp
xchg
call
lock
jo
idivb
cwtl
sarb
xor
clc
es
call
adc
clc
jbe
test
jae
aad
clc
cld
xchg
aad
clc
push
push
xchg
pusha
sarb
or
int3
mov
adc
std
sub
and
push
add
adc
fisubrs
pop
arpl
lods
clc
popf
fldenv
pop
adc
adc
test
and
jmp
dec
test
inc
sub
and
inc
jno
or
in
xchg
and
inc
scas
leave
hlt
pop
pop
sub
push
nop
scas
into
shlb
pop
aad
test
sub
pushf
xchg
xor
and
ret
jge
or
in
hlt
cli
fidivrl
call
lea
gs
mov
cmp
and
fistl
hlt
cmp
jg
mov
test
lret
sub
je
mov
sub
pop
cmp
mov
pop
and
nop
push
les
imul
sbb
das
clc
test
shrb
mov
sbb
push
cmc
dec
int
in
test
repnz
nop
lcall
shl
ja
scas
daa
pop
mov
or
cmp
push
repnz
inc
cmp
clc
add
out
sub
mov
cmp
and
push
inc
stc
loope
aad
sahf
shlb
mov
mov
sub
sbb
and
xlat
jmp
adc
lahf
shrb
fwait
shl
sahf
lock
decl
pop
cld
cmp
sbb
rolb
pop
or
repnz
cmp
stos
and
ficoms
pusha
pop
lods
adc
inc
add
adc
fdivrl
mov
lock
or
mov
inc
push
loop
adc
and
adc
cli
cmp
mov
and
xchg
mov
std
push
dec
and
sbb
and
movsb
mov
scas
and
jo
lahf
jns
push
imul
sub
sbb
jmp
pop
sar
pop
pop
icebp
push
mov
cmp
stos
les
pop
sub
int3
push
or
leave
pop
adc
mov
mov
in
jbe
insl
and
xchg
mov
ja
and
add
and
push
adc
cmp
lods
addl
jg
or
mov
ret
add
push
mov
loopne
leave
or
fs
push
or
add
pop
cs
lret
push
fsubs
lahf
pop
jmp
jbe
adc
xchg
and
or
test
inc
mov
lret
jns
push
mov
xchg
mov
mull
js
rorb
dec
popf
addr16
jb
clc
push
inc
pop
mov
ret
or
std
sub
inc
and
fcmovne
cmp
mov
adc
pop
push
inc
out
stos
enter
push
adc
stc
sub
add
mov
xlat
mov
les
xlat
fwait
and
test
or
mov
outsb
std
js
scas
leave
and
and
add
cmp
sub
and
jnp
jle
iret
cmp
pop
adc
test
and
or
dec
outsb
add
lods
or
clc
aas
xlat
lea
or
mov
push
es
les
add
test
inc
pop
out
lret
addr16
and
gs
jle
jno
mov
loop
mov
jp
sar
add
aas
repnz
pop
das
push
dec
sub
sarl
lods
cmp
out
iret
and
data16
pop
mov
add
aaa
jle
and
inc
cltd
cmc
scas
sub
mov
out
add
pop
push
and
mov
mov
jle
lds
jle
shll
cmc
scas
sub
repnz
dec
and
xchg
imul
dec
mov
sbb
fisttps
sbb
push
insl
and
loope
xor
jns
imul
scas
dec
pusha
ljmp
xlat
sub
sbb
aaa
and
push
in
fwait
and
imul
add
or
std
ds
loopne
pop
and
in
das
inc
fsubrs
std
ret
adc
jae
jle
inc
and
and
and
cli
notl
and
sarb
fsubr
push
lods
adc
clc
std
das
jae
pop
xchg
imul
std
jnp
inc
cld
jne
cmp
jmp
pusha
jg
jg
hlt
clc
mov
mov
xchg
fcoms
and
lds
popf
fwait
and
cmpsl
dec
and
xchg
add
clc
in
jl
mov
sti
hlt
jecxz
mov
pop
icebp
lds
scas
and
jns
or
and
xchg
dec
lret
fsts
sub
jecxz
mov
leave
in
aaa
and
adc
scas
and
in
sub
add
sbb
in
mov
lds
fxch
cmp
adc
test
pusha
pop
cmpb
and
stos
mov
mov
pop
or
add
mov
adc
fcos
sahf
or
enter
lcall
sub
sub
test
inc
xchg
shr
jp
nop
adc
jg
clc
test
dec
sub
xor
out
clc
jmp
scas
jnp
push
add
and
xchg
push
xor
call
mov
inc
or
jg
in
enter
pop
pop
outsb
mov
test
ret
sti
sbb
movsb
mov
stc
in
sub
jmp
outsl
repnz
nop
aad
enter
jns
call
decl
clc
pop
and
pop
orl
mov
cmpsl
mov
out
fldcw
sub
lock
xor
into
inc
mov
pop
xchg
jge
scas
and
scas
shrb
mov
xlat
mov
js
push
sub
dec
shr
and
in
adc
mov
call
and
clc
push
test
ss
adc
test
in
call
cli
inc
nop
out
add
popa
pushf
push
cmp
das
or
pusha
jg
addr16
stc
mov
es
pop
adc
cld
inc
loope
dec
push
and
js
pop
push
pop
popl
push
or
imul
inc
adc
rcl
mov
ficoms
std
cmp
dec
sar
inc
nop
mov
jmp
nop
out
loop
jne
call
adc
push
mov
mov
adc
sub
xchg
decl
fldcw
cmp
jle
in
cld
loopne
mov
pop
pop
ficoml
pop
push
fiadds
decl
mov
mov
push
and
ficoml
sbb
xchg
fstl
cwtl
jp
push
push
imull
jne
js
push
push
nop
fildll
pop
popf
inc
fcoml
pop
clc
or
repz
stc
cmp
nop
es
ja
or
and
movsb
in
jp
add
and
sbb
in
mov
daa
xchg
andb
mov
test
mov
xchg
and
jmp
cs
dec
adc
fidivl
lock
pusha
je
sub
sub
scas
shr
cmpsl
xor
test
out
mov
mov
lods
push
out
movsb
out
mov
scas
and
mov
fildl
js
dec
pop
inc
fisubrl
vpminsw
or
push
dec
fidivl
mov
cmpsb
sbb
outsl
shrl
hlt
punpckhdq
les
pop
cmc
test
sub
add
fs
shrl
and
stos
xchg
jl
adc
mov
xorps
sbb
pop
xchg
add
cwtl
in
dec
jmp
dec
outsb
movsb
adc
ljmp
decl
and
inc
dec
lahf
lods
fsubr
adc
pop
pop
scas
cs
mov
pop
enter
xor
sbb
adcl
imul
ret
add
mov
std
sub
adc
pop
in
mov
mov
loop
sti
movsb
scas
cmp
mov
jmp
xor
adc
dec
clc
call
pop
ds
xchg
not
mov
call
xchg
icebp
adc
mov
dec
push
testl
mov
dec
inc
cli
dec
dec
js
add
sarb
inc
fisttpll
nop
outsb
pop
pop
shrb
xchg
mov
mov
lock
imul
aas
pusha
cmpsl
or
cld
xchg
push
push
cli
pop
sbb
mov
ret
xchg
pop
adc
adc
decl
fcoms
repnz
ds
xlat
push
outsb
mov
fbld
out
xchg
lcall
orb
std
cmp
dec
dec
cmpsl
inc
out
pop
lret
mov
and
std
ljmp
test
jne
mov
pop
jg
ja
adc
mov
ret
xchg
in
or
fcmovbe
adc
sbb
aad
rorb
daa
jnp
push
test
pop
mov
and
push
sub
icebp
add
mov
daa
or
imul
shlb
lret
fisubs
movsl
insl
shl
cmp
nop
stos
pop
mov
popf
jl
mov
stc
aaa
pusha
movsl
push
sub
push
decl
push
mov
test
fstpt
push
clc
das
mov
nop
scas
leave
xor
push
std
sub
scas
leave
or
leave
push
dec
push
daa
stc
nop
icebp
es
std
jl,pn
movsl
xchg
sbb
add
nop
mov
lods
mov
push
and
mov
movsl
push
sub
repnz
pop
pop
pop
repnz
push
push
xchg
xlat
cmp
js
sahf
nop
push
dec
inc
xor
push
insl
cmp
popf
push
mov
movsl
mov
inc
xor
push
xchg
mov
es
mov
test
mov
inc
jmp
push
std
in
sub
adc
repnz
incb
mov
adc
mov
jo
stos
or
mov
dec
adc
fsub
fidivrs
mov
jge
js
and
enter
jp
in
push
repnz
inc
push
test
dec
das
or
pop
or
fcomi
pop
cmc
xchg
sub
xor
nop
test
inc
dec
loop
pop
test
mov
mov
adc
es
sub
dec
pop
test
xchg
xor
xchg
clc
std
into
xor
dec
or
fcmovnbe
add
je
jg
push
decl
mov
adc
adc
push
adc
sbb
inc
or
xlat
or
das
xor
movsb
fsubl
pop
nop
inc
or
mov
inc
incl
xchg
scas
aas
or
hlt
fcom
test
sub
dec
pop
mov
pop
inc
pop
mov
arpl
hlt
lret
pusha
mov
mov
pusha
push
inc
hlt
imul
cwtl
enter
inc
mov
cmpsl
rcl
inc
imul
pop
mov
push
imul
sub
sub
ja
out
push
les
xchg
outsl
push
jb
sarl
jl
insl
push
adc
clc
hlt
scas
std
xor
dec
scas
lahf
sarb
adc
jnp
sar
and
and
mov
adc
push
insb
sub
js
xlat
inc
or
jb
call
push
nop
loopne
xchg
nop
and
and
pop
lods
icebp
push
jge
mov
push
imul
cli
dec
rolb
imul
scas
cld
push
mov
mov
icebp
cmp
add
jp
cmp
or
mov
rcl
inc
cmp
jno
xlat
mov
outsl
adc
jge
enter
cmp
mov
ds
add
test
in
scas
out
jmp
fsubs
sarb
fld
lock
test
out
and
nop
push
sti
leave
jecxz
and
push
xchg
jno
pop
xchg
sub
pusha
xlat
jecxz
in
xchg
sub
stos
imul
jg
push
popf
add
jo
xchg
adc
push
test
aad
mov
mov
nop
mov
lock
push
nop
popf
in
mov
enter
fstps
mov
iret
pop
and
or
stos
push
xchg
mov
pop
adcb
push
mov
adc
dec
popf
in
pop
lahf
pop
rcrb
sub
hlt
cli
sub
scas
out
out
pop
cmp
mov
shrl
pusha
movsl
stos
repz
pop
lods
call
or
or
push
and
dec
test
xchg
cmpsb
dec
repnz
pop
stc
sub
inc
mov
scas
mov
mov
cmp
fsubrs
or
xchg
js
mov
jmp
mov
mov
je
mov
xchg
mov
hlt
stos
mov
stc
sub
cmpb
fcomp
mov
outsl
aam
test
das
lcall
fiadds
mov
outsl
imull
les
fdivr
and
mov
mov
scas
adc
scas
jp
cld
add
xor
adc
jo
fcoml
pop
rclb
add
adc
sub
scas
xchg
fildl
les
adc
imul
sti
push
loopne
mov
test
fcompl
sub
insb
imul
jle
inc
cmc
adc
outsl
mov
mov
lock
and
mov
clc
jle
sub
dec
das
cwtl
mov
push
or
cli
sarl
adc
mov
pusha
decb
out
sub
sarb
dec
jmp
push
jb
xor
leave
push
gs
jg
pop
lahf
adc
pop
jge
loopne
ljmp
pushf
in
push
movsl
pop
sar
xchg
sti
xchg
ljmp
cmc
scas
iret
dec
scas
dec
scas
aas
and
and
sbb
and
mov
sub
out
dec
mov
test
mov
icebp
pushf
fdivrl
pop
jmp
adc
cmp
mov
jo
sub
clc
jns
push
hlt
mov
lret
pop
clc
xorb
testb
xchg
and
inc
and
mov
lods
mov
in
pop
aam
gs
pushf
jo
stos
mov
dec
clc
out
outsl
pusha
mov
pusha
mov
sbb
mov
hlt
scas
push
xor
add
mov
or
out
fsubs
push
in
imul
adc
mov
jo
leave
in
decl
pop
pop
lock
jl
xlat
fistl
add
add
and
and
nop
std
movsl
div
aad
and
sub
add
enter
das
movsb
dec
mov
hlt
mov
rclb
cld
mov
push
neg
mov
pop
cs
add
cwtl
rcrb
adcb
fcompl
fcoml
nop
push
mov
mov
jg
clc
leave
mov
jge
test
adc
notb
imul
scas
nop
push
xchg
rorl
adc
bts
loopne
mov
fmuls
sub
add
jnp
hlt
ljmp
push
lds
lock
or
movsb
mov
clc
mov
ljmp
or
adc
popf
inc
clc
testb
adc
std
sub
mov
call
lock
ficomps
in
decl
and
sti
xchg
or
test
repnz
fildll
out
mov
cmp
push
les
mov
xchg
mov
stos
ret
or
cmp
stc
inc
pop
xchg
sub
mov
das
push
test
cli
ja
cwtl
push
adc
and
dec
xor
and
nop
add
xlat
leave
fisubs
mov
enter
sbb
pop
push
loopne
pop
loopne
jne
and
test
and
shll
xlat
mov
aas
rol
fucomp
cmpsb
enter
jp
mov
cmp
adc
sub
repnz
std
push
add
mov
mov
mov
std
sbb
mov
add
or
pop
push
dec
dec
push
cmp
sub
pushl
scas
dec
cld
sbb
enter
and
repnz
push
dec
test
loopne
insb
xor
cs
movsb
cli
sub
mov
test
out
jnp
mov
push
mov
sub
test
jbe
pop
mov
scas
das
mov
mov
mov
cmpsb
adc
std
lds
test
xchg
dec
mov
in
mov
jne
es
in
adc
andb
test
pop
test
repz
pop
clc
in
iret
inc
or
mov
xchg
sub
xor
jb
sti
cld
in
test
xchg
push
pusha
nop
cli
mov
enter
mov
dec
mov
test
js
ficompl
stos
adc
and
stc
xchg
inc
fmul
sbb
in
lea
lock
or
inc
stos
lret
fstpt
push
xchg
add
stos
movsb
stos
aas
pusha
xchg
jecxz
std
imul
std
and
pushf
out
or
lret
push
out
pop
mov
loop
pop
jp
repz
mov
rcr
fcomip
sbb
push
pop
insl
sbb
pop
mov
sub
mov
lret
pop
mov
jo
das
adc
test
clc
cs
jle
mov
das
mov
xchg
stos
mov
and
sbb
sbb
imul
add
clc
jp
stc
pop
ffree
inc
insb
test
adc
fnstsw
cmp
jg
cmc
flds
leave
push
outsl
adc
xchg
pop
add
adc
mov
das
xchg
cmp
mov
push
mov
jl
mov
btr
test
insl
and
cli
cmp
les
and
pop
inc
mov
xor
repnz
xlat
nop
les
inc
mov
lock
push
cmp
ljmp
mov
jne
loopne
push
scas
rclb
push
mov
loopne
inc
pop
scas
icebp
pop
fisubrs
fsubrs
lret
push
cmpsl
pop
lock
jmp
ds
fsubrs
aaa
lock
mov
test
mov
jmp
imul
sub
inc
mov
enter
pop
insl
sub
fdivl
aaa
dec
leave
jne
adc
jo
or
dec
pop
outsl
test
and
cmc
ljmp
sarb
shr
pusha
lea
adc
stc
lock
mov
int3
add
fildll
in
aas
dec
jmp
cld
popf
pop
cwtl
cld
push
rolb
push
push
inc
dec
mov
cmp
pop
and
adc
dec
inc
stos
test
and
dec
stc
mov
pop
in
leave
inc
aam
insl
xor
in
jl
add
push
data16
jg
mov
out
pop
cmp
fildll
in
pop
cmp
inc
inc
mov
dec
loopne
mov
pop
or
lods
xchg
pop
push
sub
pop
mov
dec
push
cmp
add
iret
or
or
test
cwtl
mov
nop
sub
enter
fsubrs
repnz
inc
or
adc
fcoml
int3
sub
hlt
cli
jle
pop
cmpsb
pusha
aad
std
sub
andb
loopne
sbb
push
test
popf
je
std
inc
enter
mov
iret
sbb
pop
cli
lret
jnp
xor
jl
or
hlt
pop
fidivs
inc
and
ficoms
es
fdiv
mov
insb
pop
or
push
test
add
bound
fistps
push
and
das
push
bnd
js
out
or
push
inc
hlt
mov
sbb
rclb
mov
fbstp
js
push
jl
xlat
fsubl
jns
fcoml
xor
lods
xor
das
cmp
rcrl
pop
cmpsl
mov
mov
cmp
xor
sbb
faddl
adc
enter
cld
shrb
loopne
and
dec
test
in
and
sub
or
mov
enter
hlt
stos
mov
mov
fcoms
nop
fildll
jge
inc
xor
dec
push
pop
xlat
daa
gs
stc
daa
arpl
clc
mov
faddl
mov
dec
push
in
imul
push
mov
pop
mov
push
stc
push
inc
mov
and
xlat
scas
aas
call
jbe
push
leave
jge
mov
xchg
sub
mov
pop
pushf
fistps
out
mov
dec
jge
xor
sbb
nop
call
fildll
call
xchg
nop
incb
mov
out
and
fsubl
mov
push
daa
lahf
nop
in
aas
cmc
testl
inc
fsub
sti
divb
jnp
xchg
call
mov
in
sub
cmc
dec
xor
xor
mov
stos
dec
mov
aad
lret
adc
and
pushf
push
add
mov
sub
xlat
mov
imul
sub
mov
fildll
std
xor
dec
sbb
cmc
aas
mov
mov
mov
loopne
scas
nop
push
dec
mov
je
jne
rorb
mov
call
lahf
fsubrp
aad
or
lods
nop
cli
pop
jo
jmp
mov
dec
mov
dec
sbb
or
inc
mov
and
cld
push
fsubr
outsl
test
fmull
push
and
inc
push
pop
cmp
enter
and
stc
and
mov
outsl
mov
mov
pop
icebp
fists
pop
fisttps
sti
fbstp
and
jo
inc
test
mov
dec
push
adc
cld
mov
and
enter
movsb
sub
mov
mov
lea
in
test
loop
je
std
popa
and
or
mov
ljmp
in
nop
mov
sti
in
cmc
decl
loopne
sub
pusha
call
aas
pop
out
hlt
cld
pusha
mov
and
pop
xchg
movsb
mov
mov
and
jns
dec
dec
lret
push
jmp
push
pop
fdivs
loopne
jb
sub
sar
push
call
inc
adc
adc
xor
fists
dec
mov
faddp
hlt
mov
push
pop
repnz
xor
dec
push
adc
pusha
mov
pop
aam
test
cmp
push
or
jo
mov
push
in
lcall
pop
mov
push
and
mov
and
dec
dec
and
mov
adc
es
mov
pop
inc
mov
sub
hlt
js
sub
and
shld
je
dec
jg
push
scas
sar
ficompl
test
loopne
out
notb
sub
shl
mov
mov
adc
or
xor
sub
clc
jecxz
push
nop
jbe
std
addr16
mov
and
je
jge
inc
loope
enter
inc
xchg
mov
xchg
test
mov
das
jnp
repnz
cli
xlat
aaa
pusha
mov
stos
xchg
nop
adc
xor
fsubr
dec
push
and
push
lock
inc
dec
loop
addr16
mov
nop
jl
dec
jnp
sarb
mov
test
gs
sub
cmc
push
push
ljmp
fcompl
repnz
dec
imul
out
dec
test
mov
nop
ljmp
sub
or
lret
fists
jo
mov
push
shll
add
clc
movb
mov
sub
nop
loop
add
pusha
cld
lahf
outsl
loopne
xchg
shl
shr
call
hlt
add
cmp
jle
sub
test
cmp
fisubrl
sub
push
pushf
adc
and
out
test
cwtl
sti
hlt
aas
dec
cld
clc
mov
cmp
out
pop
mov
mov
test
loope
std
lock
xchg
mov
icebp
or
jnp
mov
xchg
lret
stos
mov
dec
fnstcw
pop
fmul
mov
cwtl
pop
xor
pop
or
push
inc
push
pop
dec
mov
shrb
xor
out
and
xchg
sub
and
mov
xlat
nop
aaa
scas
repnz
add
repnz
and
pop
inc
aas
mov
add
enter
jge
mov
or
and
and
in
ds
xor
popl
push
test
xchg
sti
enter
push
scas
repnz
pop
jns
sbb
pop
adc
and
pop
inc
pop
mov
or
enter
lods
dec
nop
jmp
ficoms
xlat
dec
dec
cld
mov
mov
mov
mov
mov
les
loope
mov
adc
enter
xor
mov
ds
cld
cmp
repnz
stc
push
sbb
xor
enter
inc
cmp
and
stc
inc
or
jo
xlat
in
sub
jp
pop
nop
dec
scas
enter
inc
dec
mov
push
dec
clc
cwtl
dec
loope
sub
mov
sbb
mov
scas
enter
orb
adc
ljmp
adc
testl
jle
mov
pop
cmp
rolb
mov
stc
test
cld
mov
inc
test
sub
repnz
cmp
fdivrp
jg
js
bound
jmp
les
or
or
push
pop
dec
pop
mov
adc
in
jge
or
xlat
loope
xlat
sub
jne
popf
shrl
loop
loope
jno
jp
fsubr
test
loop
clc
adc
scas
mov
movsb
stos
mov
lock
pop
push
sub
lds
leave
cmp
mov
jno
and
lods
enter
xor
lret
test
mov
adc
adc
call
cmp
out
imul
ljmp
out
pop
cmp
loop
outsl
mov
in
outsl
test
add
mov
and
mov
popa
mov
js
loop
jbe
push
dec
add
inc
nop
jns
cmc
sub
dec
lahf
call
jo
loop
aad
nop
jb
mov
arpl
loop
mov
mov
dec
xchg
fdivr
push
pop
dec
scas
outsl
push
dec
lock
mov
fcoms
dec
popf
lock
and
std
lock
lahf
fldenv
fildll
lret
sub
cmc
out
stos
imul
fiaddl
in
sub
outsb
loop
clc
mov
js
xchg
out
imulb
cld
xchg
lahf
pop
enter
sub
jle
add
roll
xchg
push
in
mov
mov
stos
sub
cli
mov
out
daa
and
cmp
ret
std
jae
push
je
push
jnp
xchg
ljmp
mov
push
mov
test
xchg
ljmp
cs
loop
and
clc
cmc
jmp
adc
fsubrs
lods
lret
mov
clc
mov
jo
dec
repz
inc
nop
ljmp
or
daa
loope
fistpll
add
dec
mov
jmp
jne
call
add
sbb
js
and
pop
imulb
jge
jae
pop
add
sbb
push
sbb
or
pop
in
jg
adc
call
hlt
jle
dec
outsl
sub
mov
loopne
into
or
xlat
outsl
fdivs
lock
jecxz
std
xor
cmp
mov
sti
pop
out
jmp
push
xor
js
dec
inc
or
cld
fcomps
jnp
pop
xchg
or
nop
mov
and
and
clc
std
lods
divl
js
mov
dec
push
leave
sarb
ret
pop
nop
mov
xor
icebp
push
aad
fcoms
ja
mov
les
lret
cmp
sbb
mov
pusha
imul
call
or
ss
pusha
jmp
iret
in
cld
cmpsl
and
repnz
sub
stc
or
push
lret
push
jmp
call
hlt
jmp
dec
push
add
push
out
pop
mov
sbb
and
add
xchg
sar
dec
mov
sbb
aaa
push
jmp
out
inc
fsubrs
insb
shrb
sub
movsl
pop
lahf
mov
dec
cmpsl
cwtl
lret
sub
add
pop
xchg
and
aaa
js
leave
out
and
movsl
mov
sub
sbb
jmp
dec
pop
xchg
sub
clc
repnz
jns
pop
sbb
daa
inc
std
es
fsubr
dec
sub
mov
inc
std
ret
jl
clc
fbld
mov
in
cmpsl
pop
mov
stos
push
fdivs
mov
sub
sbb
ret
fst
rcrb
push
iret
cwtl
lds
sub
shrb
fcom
shl
sub
jne
mov
pop
std
lods
jg
push
leave
xlat
jnp
fisttps
pop
jecxz
jno
sub
outsb
add
dec
mov
stos
mov
sub
std
mov
xor
pop
aad
adc
mov
jo
dec
loope
les
ds
and
dec
scas
fmulp
clc
cld
lea
push
inc
add
adc
scas
jle
mov
stc
or
lock
enter
pusha
hlt
scas
into
enter
cmp
out
repnz
repz
push
loop
pop
xor
push
test
or
and
and
clc
xchg
inc
aam
es
and
mov
call
xchg
fwait
stos
repz
stos
pop
iret
loopne
sbb
xchg
cwtl
jg
fbstp
add
lds
cli
pop
out
aas
rolb
jbe
scas
cmc
lret
daa
mov
call
mov
hlt
testl
mov
cmp
mov
mov
jg
pop
in
jb
dec
pop
pop
sub
and
iret
adc
in
cmp
mov
add
int
stos
cld
or
xchg
mov
mov
xchg
jb
clc
repnz
jmp
loopne
movsl
push
jo
jmp
and
mov
mov
jecxz
mov
push
loope
dec
ret
jmp
pop
jns
std
and
bsf
xchg
cmc
jl
xlat
adc
lret
fdivl
lock
sbb
and
pop
nop
fsubrl
clc
faddl
adc
fsub
pop
mov
std
es
daa
sub
fcoms
and
cld
popf
xchg
mov
nop
aam
les
in
loop
adc
jo
xchg
mov
inc
shrb
in
and
pop
in
mov
rcrb
mov
das
enter
int3
lahf
and
arpl
scas
mov
notl
mov
insl
aas
cmc
test
dec
repz
and
lret
inc
push
out
cmc
scas
cmp
cmc
ljmp
jmp
mov
push
nop
leave
sti
leave
int3
pop
xchg
call
mov
sbb
sarb
in
and
jecxz
out
sub
fsubrl
xchg
in
sbb
or
xchg
mov
scas
outsb
or
mov
outsl
pusha
and
mov
and
jno
paddw
pusha
ljmp
loop
sti
mov
nop
jg
mov
and
fwait
test
sub
rorb
ret
push
push
push
cwtl
decl
mov
xor
lock
sub
push
or
leave
xchg
cmp
call
mull
lock
dec
xchg
call
or
adc
out
dec
shr
test
outsl
cs
jle
fbstp
cwtl
enter
sub
stos
ljmp
std
sub
pop
in
sub
mov
daa
jecxz
or
jge
sub
mov
in
popf
mov
mov
pop
or
mov
test
xchg
sub
xlat
iret
xor
adc
push
or
dec
inc
inc
sub
adc
mov
push
mov
and
fucom
sbb
js
xor
ja
daa
scas
enter
pop
jnp
xor
je
mov
pop
mov
pop
dec
cmp
scas
shr
lret
inc
movsl
nop
cli
pop
pop
mov
jno
arpl
mov
and
jnp
nop
rclb
dec
shl
dec
in
xchg
mov
adc
enter
mov
pop
pop
loopne
fcoms
clc
mov
imul
mov
adc
mov
mov
add
mov
and
mov
aas
pop
test
mov
sti
sub
dec
out
jmp
cmp
aaa
mov
cld
add
in
push
mov
mov
and
call
dec
repnz
pop
xor
sub
push
loop
in
les
or
dec
mov
scas
adc
push
mov
push
sti
dec
stos
lahf
dec
stc
sub
in
pop
mov
mov
ds
sub
dec
dec
push
dec
push
dec
and
jo
ljmp
fdivr
dec
stos
lea
sbb
clc
add
adc
movsb
scas
outsl
pop
sarb
and
les
aad
call
mov
or
mov
fincstp
nop
jecxz
enter
push
inc
or
adc
out
loope
out
clc
inc
test
daa
out
in
clc
xor
mov
dec
push
xchg
push
push
out
dec
lcall
jnp
test
xchg
ja
sub
push
sbb
pop
lahf
cmp
sub
mov
les
push
rcll
pop
clc
clc
mov
das
repnz
sub
dec
and
out
jnp
push
dec
xchg
clc
mov
fcoms
mov
dec
out
sub
sub
cmp
in
enter
jns
or
das
sub
stc
outsb
test
push
sbb
jb
repnz
fimuls
and
shrl
mov
pop
mov
pop
outsb
cmp
call
or
jge
mov
shlb
das
mov
mov
jb
sbb
out
lock
sub
stc
ds
xor
cld
fwait
xchg
mov
cmp
mov
pop
jbe
jg
aam
mov
xchg
mov
lock
das
adc
sti
lcall
stos
fwait
mov
lcall
pop
mov
jmp
lret
pop
pop
push
cmp
mov
test
je
aad
mov
pop
xor
dec
loope
lods
mov
cmp
stos
dec
stos
mov
stc
cmp
sbb
mov
jp
stc
adc
sbb
cmp
push
mov
outsl
pop
rorb
incb
cmc
mov
and
in
xor
dec
out
mov
stc
imul
add
cmp
repnz
nop
inc
add
sub
scas
pop
call
xlat
xchg
es
mov
sbb
add
test
push
cltd
shl
loope
out
in
enterw
repz
dec
dec
jle
push
push
sarb
cmp
mov
loop
idivl
pusha
push
or
xchg
push
adc
cmpsb
lock
dec
out
jle
daa
mov
xchg
mov
inc
fdivr
and
push
sahf
add
fbstp
pop
or
out
aas
and
ja
and
test
and
rcr
xchg
inc
or
lret
or
xlat
repnz
mov
jmp
nop
rcrb
filds
jg
add
shr
cmp
or
jge
es
pop
pop
decl
push
fisubrl
jne
test
cmp
js
mov
shl
call
scas
lcall
inc
or
fwait
sarb
aaa
sbb
xor
inc
or
std
or
test
pop
out
out
adc
inc
jge
addr16
in
push
mov
lock
sub
lret
push
jmp
sarb
out
pop
push
imul
mov
or
mov
jle
mov
xor
aas
mov
and
adc
nop
loop
cmp
scas
and
cli
hlt
sub
sub
std
sub
mov
mov
popf
mov
nop
jmp
rcr
clc
adc
dec
pop
inc
int3
mov
adc
sub
lods
jo
fadds
or
nop
mov
ss
pusha
pop
mov
rorl
pop
je
std
stos
mov
test
or
push
stos
add
jmp
push
dec
out
push
enter
ficomps
push
mov
repz
xchg
in
clc
fistpll
cmp
pusha
hlt
jno
adc
das
mov
movsb
stos
sub
pop
and
xor
fdivs
test
leave
pop
xor
dec
xchg
nop
push
sub
clc
hlt
push
sbb
mov
pop
or
push
sub
ja
sub
call
nop
cld
sub
jp
push
test
rcrb
fiadds
mov
outsb
inc
mov
jle
es
or
sahf
add
fmuls
repnz
jge
call
out
sar
lret
das
mov
jp
sti
push
test
clc
xchg
nop
stc
hlt
push
mov
mov
dec
push
subb
cmp
xchg
sbb
test
jl
incb
repnz
adcb
adc
or
add
dec
stc
pop
imul
lock
push
out
bnd
jo
sbb
dec
pop
lds
mov
dec
stos
sub
xchg
mov
bound
stc
in
sub
scas
mov
adc
ds
in
aas
js
outsb
test
insb
imul
loop
and
adc
stos
enter
push
call
into
sub
mov
dec
in
sbb
stc
imul
fsubrs
cmp
rorb
nop
xchg
out
aas
push
les
fcmovbe
loope
daa
or
mov
lock
xchg
pop
cmp
mov
aad
dec
mov
dec
in
fistpll
pushf
and
or
xor
xor
mov
loopne
xchg
daa
sub
hlt
ljmp
loopne
loopne
rcll
inc
mov
inc
push
add
shrb
aaa
mov
cmc
in
jl
loopnew
sahf
out
repnz
mov
clc
inc
test
jbe
lods
aam
xor
test
jmp
dec
and
mov
sub
jb
sub
xor
fcoml
fists
test
jno
popa
pusha
jae
cli
dec
cli
lcall
adc
mov
mov
sub
es
inc
sbb
or
fbld
cmc
scas
jg
sub
fcoms
jp
and
sub
nop
xchg
roll
lods
fimull
and
ljmp
scas
loop
pop
xor
aad
enter
or
testb
xchg
dec
push
in
cmp
ljmp
or
and
add
cmovs
dec
cmp
adc
xor
mov
add
or
add
push
and
add
or
mov
stos
shr
sub
jp
sbb
xchg
repnz
insb
push
or
call
out
ds
dec
push
pusha
sbb
aam
push
and
andb
fs
adc
mov
aas
sbb
notl
cmp
xchg
fcom
pop
aas
push
js
imul
inc
lock
cmp
sub
xlat
sub
out
flds
decb
ljmp
in
nop
movsl
out
aas
inc
hlt
ficompl
call
pop
dec
call
mov
loopne
movsl
xchg
out
mov
xor
add
and
push
xchg
fwait
sub
sbb
test
lahf
jle
jg
push
mov
jg
clc
jo
dec
movsl
dec
inc
pop
call
fdivr
aas
cld
nop
scas
pop
scas
sub
in
fcoms
nop
inc
mov
jbe
pop
test
and
shlb
jbe
dec
xchg
call
jl
call
xchg
call
mov
push
jmp
call
or
in
or
or
and
inc
jg
push
pusha
aad
push
pop
js
lcall
mov
mov
call
mov
pop
inc
popf
cmp
mov
scas
call
mov
test
mov
lahf
inc
loopne
call
or
mov
clc
cmc
rol
and
jno
jmp
add
push
pop
jg
nop
aad
enter
dec
notb
sti
push
jmp
mov
aam
enter
lock
call
lea
in
nop
repnz
dec
imul
adc
push
mov
ja
test
xchg
cmpsl
stos
hlt
mov
pop
cld
fdivs
lahf
inc
loop
std
jmp
cwtl
jbe
mov
js
dec
or
sbb
fdiv
unpckhps
fsubr
push
or
and
pusha
cld
rcrb
dec
dec
mov
sbb
rolb
nop
clc
push
mov
out
jns
dec
fmul
cmp
adc
xchg
cmpsw
dec
pop
pop
ret
rcll
out
stos
sub
xchg
add
imul
sub
aad
stos
and
pop
inc
outsl
mov
add
jae
stc
test
jns
or
and
and
in
ds
cld
mov
mov
sar
pop
xlat
nop
xchg
or
repnz
and
pop
inc
mov
or
xchg
push
stc
mov
or
and
notl
pop
in
sub
call
outsb
mov
jnp
dec
scas
sbb
dec
and
call
cwtl
hlt
xchg
lahf
jo
mov
aam
or
in
adc
insb
mov
jle
imul
sbb
jge
inc
sbb
mov
jle
or
jl
jge
inc
cmp
cmpsl
ds
push
jmp
mov
inc
xor
add
jmp
and
xorb
cmp
pop
pop
adc
sarl
lods
fxrstor
jmp
inc
dec
sub
push
jmp
mov
jmp
enter
stos
pop
stc
push
cld
rorl
and
fs
sbb
scas
sub
cmc
and
shr
sub
jmp
or
xchg
add
aaa
out
fcompl
repnz
mov
mov
mov
sub
in
mov
into
push
stos
sar
sub
aad
call
mov
pushf
pop
mov
jecxz
stos
push
xor
out
lret
xchg
pop
jmp
xchg
out
fwait
and
cmpb
cwtl
test
aaa
mov
xchg
lods
mov
aad
call
loopne
jmp
mov
sub
ret
sub
cmp
and
call
add
sub
mov
mov
push
inc
cs
jmp
out
dec
out
lret
jle
cmp
mov
ss
mov
jmp
std
pop
stos
xchg
jle
mov
dec
dec
repnz
xor
shr
shlb
jae
cld
pop
inc
or
mov
jnp
icebp
shrb
enter
sub
inc
hlt
stos
mov
in
xor
sti
sahf
xor
dec
clc
cmp
hlt
sahf
rorb
dec
in
mov
out
and
jbe
in
mov
xchg
ret
mov
mov
jmp
mov
inc
inc
loopne
jmp
mov
ljmp
js
js
shl
sbb
pop
and
repnz
clc
cli
jmp
inc
add
adc
test
push
movsb
fcomps
sub
sbb
dec
pushl
loope
mov
std
in
cmp
ja
loopne
das
aam
xlat
jmp
and
je
sub
push
clc
mov
ss
clc
or
inc
mov
pusha
jns
or
adc
jae
pusha
aad
aam
adc
dec
mov
pushf
sub
push
das
enter
push
xor
pop
lds
jle
push
pop
push
repnz
dec
cwtl
loope
insl
or
dec
mov
sbb
and
jne
adc
or
xchg
mov
std
repz
js
mov
in
xor
stos
enter
aam
jg
pushl
js
sub
mov
sbb
and
pusha
cmp
xor
sub
ljmp
mov
lods
add
fisttps
testb
cwtl
mov
xchg
aam
and
pop
nop
mov
js
outsb
mov
aad
lcall
call
fcmovbe
movsb
clc
shrb
rorb
cld
ret
stc
int3
sbb
mov
inc
fcomps
enter
inc
std
cmp
test
inc
cs
movsl
mov
nop
hlt
std
ds
sub
scas
sub
mov
dec
and
push
int3
lret
lock
dec
and
and
or
int3
lea
rcrb
or
jno
pop
fs
sub
adc
dec
mov
inc
sbb
push
pop
pop
fsubrp
adc
scas
repnz
scas
pop
jg
enter
inc
hlt
mov
jmp
clc
enter
inc
mov
dec
jmp
lahf
fcomp
pop
repz
loop
test
pop
mov
mov
and
dec
loopne
in
ds
enter
test
mov
adc
adc
insb
test
fsubr
aam
push
bound
ja
nop
imull
inc
stc
orb
call
push
aad
push
xchg
push
in
decl
jle
lock
sub
jmp
jmp
loope
sbb
and
ja
xchg
jmp
sarb
sar
jo
jmp
push
aas
enter
jb
rcrl
sub
and
ret
pop
or
push
push
and
xchg
clc
fcoml
push
roll
or
je
lds
mov
dec
fmuls
jl
lock
pusha
pop
or
mov
mov
xor
cmpb
subb
ja
sub
scas
sub
inc
inc
stc
pop
ret
shll
and
sub
and
push
mov
stc
cs
inc
mov
pop
aam
aad
sub
cmp
and
cld
dec
push
pop
rcrb
adc
push
pop
fdivs
dec
mov
call
dec
pusha
cli
push
test
leave
push
in
notl
jecxz
cmc
repnz
jge
rcl
lahf
push
call
cld
mov
les
mov
aad
les
test
js
and
in
and
jge
or
inc
adc
jns
pop
cmpsl
out
clc
sti
mov
pop
fildl
fucomip
decl
mov
pop
clc
test
fcmovbe
stc
sub
les
push
and
fsubs
and
pop
mov
dec
fisttps
ret
pop
adc
in
loopne
sub
aas
loopne
call
jmp
jo
sarl
pusha
test
cli
gs
mov
mov
pop
in
pop
call
pop
movsl
lahf
cwtl
in
push
or
outsl
out
push
mov
out
dec
cld
sub
mov
add
clc
adc
mov
mov
leave
frstor
repnz
loopne
and
sbb
popf
roll
pop
sub
pop
mov
cld
push
les
imul
push
and
cli
dec
mov
psrlw
call
das
aaa
jmp
inc
push
jno
jmp
adc
jp
pop
outsb
rorb
pusha
mov
cmp
mov
lock
leave
insl
loopne
add
inc
or
pushf
sub
je
push
nop
sti
std
jg,pn
inc
nop
test
stos
call
xchg
push
dec
in
mov
xchg
das
lock
nop
in
nop
dec
psraw
stos
rcr
pop
pop
ljmp
mov
pop
nop
jo
in
mov
add
clc
cmc
jae
add
lret
lock
xchg
xchg
popf
push
adc
mov
push
adc
mov
repnz
pusha
pop
scas
push
cli
push
xor
nop
and
add
mov
or
stc
xchg
popf
xor
pusha
pop
scas
pop
fiadds
mov
xor
pop
lret
mov
insb
adc
jnp
aam
sub
enter
mov
and
sbb
or
mov
jl
fdivr
push
push
fcmovu
or
imul
repnz
jge
test
jne
mov
jg
outsb
sub
jmp
jp
pop
push
jmp
pushf
stos
inc
or
mov
mov
push
xor
es
movsb
repz
dec
lods
push
clc
sarl
lret
jg
clc
stc
cld
imul
or
std
aas
jle
test
cli
pop
call
lock
sbb
lock
nop
cli
movsb
scas
jg
xor
pop
fsubr
das
sub
mov
lcall
cmpsl
idiv
je
push
call
mov
xchg
rclb
gs
adc
pop
add
cmp
push
aas
sbb
cmp
insl
adc
test
and
lret
push
out
lret
icebp
clc
pop
nop
mov
push
jg
dec
mov
pop
mov
shl
shlb
stc
or
in
sub
hlt
stos
test
out
mov
adc
js
xchg
nop
test
lods
sbb
push
push
push
lcall
hlt
hlt
jo
and
mov
sbb
cli
mov
dec
ja
cmp
jns
sub
test
pushl
cwtl
clc
sub
cmp
out
dec
mov
xchg
daa
fdivr
pop
push
push
fdivrs
in
pop
adc
nop
scas
shr
dec
and
mov
scas
adc
in
stos
push
fldlg2
sub
add
dec
cld
adc
mov
xchg
sti
loop
mov
stc
sub
cmp
dec
clc
pop
jne
js
jmp
and
sub
pusha
cmpsb
test
mov
pusha
jp
and
jo
test
jmp
fdivr
cld
inc
mov
loop
or
std
fs
sub
pop
sbb
mov
jg
add
sub
pop
or
loope
stc
in
sti
lods
cwtl
jmp
ss
jno
push
repnz
pop
xor
pop
or
ljmp
and
inc
inc
std
add
sbb
sub
add
mov
mov
pop
pop
mov
in
and
sub
mov
push
jmp
xchg
dec
push
pop
cmp
inc
inc
mov
in
das
sub
mov
dec
std
call
dec
in
enter
loopne
ja
adcb
sub
lret
sbb
cmpsb
and
mov
and
in
pop
adc
imul
lock
lock
sub
inc
hlt
mov
es
and
cmp
and
jl
xor
les
cs
adc
in
mov
jns
pop
add
mov
push
xor
jo
in
xchg
jle
jge
sub
insb
loopne
loopne
mov
sbb
enter
fsubrl
movb
enter
aas
sub
loopne
push
dec
fmuls
in
shrb
fcom
call
push
push
in
popf
xchg
fcomp
aaa
nop
dec
clc
pop
push
pop
nop
xor
les
rcrb
icebp
fs
or
out
dec
divb
stos
icebp
pop
sub
mov
add
jns
das
aas
or
mov
in
sub
call
and
clc
xchg
mov
dec
frstor
mov
fdivrs
sar
jecxz
in
mov
call
jge
jo
jno
xlat
movsl
jne
fdivs
jnp
pop
cmp
sub
inc
call
jg
cmc
dec
adc
sub
pusha
in
clc
test
xchg
cmc
pop
dec
xlat
ljmp
jl
mov
and
jbe
and
or
mov
ds
or
xor
aam
aam
fbld
lock
mov
add
push
xchg
lods
sarb
sub
aam
cmp
pushf
fmuls
stc
lock
or
mov
mov
cmp
mov
dec
mov
fnsave
sar
inc
clc
pop
xchg
leave
fidivs
in
mov
decl
cwtl
mov
or
cmp
add
mov
fdiv
fldenv
testl
clc
hlt
pushf
jo
jl
fbld
adc
cmp
or
enter
lock
mov
mov
mov
mov
jmp
sbb
lods
xor
pop
push
mov
test
iret
mov
and
sahf
adcb
xor
sub
dec
loopne
lcall
aaa
pop
xchg
movsb
out
dec
lods
push
cld
repz
faddl
xlat
and
in
fdivl
popf
loopne
pop
push
fbld
stc
pusha
jne
shr
pop
gs
inc
add
xchg
xchg
js
dec
or
test
dec
hlt
sahf
mov
xchg
dec
ret
sbb
or
lds
sub
cmp
xchg
pop
or
sub
dec
adc
mov
cli
ja
and
lock
jb
cld
sub
sub
push
stc
and
pop
outsl
lock
and
or
pop
inc
out
repnz
outsl
shr
dec
icebp
stc
add
fdivs
out
adc
mov
mov
jb
push
lods
aaa
clc
mov
pop
in
ds
lret
dec
repnz
sbb
dec
test
pop
mov
jmp
lret
mov
dec
decb
pop
rcr
or
les
out
out
stc
shrb
dec
or
pop
sub
movsb
jle
enter
clc
ja
dec
jl
sub
or
adc
stos
mov
jne
push
mov
into
adc
imul
daa
sub
ss
jmp
loopne
scas
aas
or
aaa
pusha
jmp
xchg
lock
or
inc
out
jmp
loopne
mov
inc
add
cmpb
inc
xor
pop
mov
sub
jno
cmp
mov
jmp
ret
out
push
push
mov
stc
push
mov
icebp
pusha
mov
stos
mov
in
cmp
call
mov
repnz
btc
fldcw
outsb
das
adc
mov
dec
sub
repnz
pop
jmp
xor
shl
insl
sbb
test
hlt
cli
clc
pop
scas
mov
repnz
xlat
addr16
pop
cwtl
xlat
cmpsb
sbb
dec
add
std
xchg
xchg
subb
xlat
ljmp
sarl
sbb
outsb
and
add
sahf
jo
les
call
in
xchg
stc
enter
inc
je
jbe
push
repnz
je
xor
pop
scas
sti
loopne
mov
lahf
xrelease
xor
adc
loop
pusha
shrl
mov
jmp
enter
mov
shll
sbb
daa
nop
out
xlat
outsl
test
and
jne
daa
push
into
or
jl
xchg
aam
ja
sbb
test
pop
mov
repnz
pop
dec
dec
js
pop
movsb
lock
nop
jmp
xor
mov
pop
loopne
sbb
cld
dec
pop
sub
loopne
pop
jle
call
and
out
pop
and
out
pop
les
stos
mov
fcompl
ljmp
jns
or
das
mov
shlb
sub
out
push
mov
clc
pop
scas
ror
pop
lods
cmp
sub
xchg
fsubl
jge
nop
fisttps
adc
in
pop
jle
enter
sub
xchg
in
or
daa
xchg
adc
lret
cmp
pop
dec
sbb
dec
testb
aad
push
sub
lock
addr16
jle
xor
fcompl
aad
push
pop
adc
or
fcoml
jl
in
cwtl
in
mov
adc
call
stc
xor
nop
movsl
sub
jle
and
scas
fdiv
pop
cli
gs
das
fstl
je
rorb
lods
push
xchg
and
jge
dec
testl
sbb
cmpsb
shrb
in
adc
dec
mov
mov
in
dec
jmp
dec
xchg
mov
jae
fimull
adc
mov
mov
sub
mov
adc
outsl
jno
sbb
cli
stc
call
out
sub
hlt
jmp
aas
mov
loop
pop
outsl
inc
mull
jge
pusha
jl
push
jle
push
inc
push
dec
jg
nop
lret
xlat
inc
push
stc
es
nop
hlt
sti
jecxz
cli
dec
mov
cmc
cs
dec
mov
mov
add
hlt
stos
mov
push
out
cs
sti
cs
enter
fcom
in
jnp
les
dec
dec
mov
outsl
jo
out
jnp
icebp
popa
out
jg
sar
xchg
std
or
lea
mov
jb
int
jmp
push
hlt
pusha
xlat
adc
fsubr
dec
fwait
adc
push
ja
jbe
push
jmp
cmp
sub
pop
mov
sub
mov
dec
std
xchg
and
cld
push
xchg
push
lds
adc
jb
push
lock
add
out
pop
pop
scas
inc
nop
mov
inc
jns
arpl
jp
sbb
mov
mov
cmp
jns
push
cmc
and
repz
cmp
sub
xchg
and
or
fstl
push
sub
xchg
xor
pushf
jo
cli
pop
fmuls
sub
add
call
xchg
lods
cltd
pusha
aam
dec
dec
cmc
push
in
out
pop
mov
clc
cli
inc
inc
push
sub
nop
push
nop
outsl
stos
mov
ja
nop
scas
mov
jns
and
mov
rclb
pop
sahf
dec
pop
xchg
notl
pop
sahf
nop
push
jmp
enter
test
pop
push
decb
jns
pop
jmp
xchg
push
sti
into
or
mov
or
cmp
cld
dec
xchg
rcr
sub
and
and
jmp
dec
negb
xor
add
lcall
cmp
sti
mov
scas
repnz
pop
rcrb
loopne
cli
lds
push
dec
sub
scas
pop
iret
or
mov
notl
hlt
scas
cld
imul
jne
out
mov
fmull
jmp
mov
enter
out
cmc
sti
fiaddl
cmpb
mov
enter
push
in
sub
rclb
fwait
sbb
adc
mov
pop
cmp
enter
mov
xchg
and
arpl
addb
decl
test
add
dec
dec
jmp
cmp
or
mov
test
sub
mov
fs
stos
loop
mov
mov
mov
sti
add
cli
sbb
lea
loope
inc
add
clc
lods
outsl
loop
repnz
jns
sub
sar
call
stos
ds
mov
mov
mov
jmp
stc
fcomps
je
add
xor
mov
pop
out
nop
fcoml
nop
dec
or
nop
in
scas
enter
push
in
jl
hlt
sub
lahf
and
dec
sub
mov
clc
cld
cltd
inc
ficomps
pop
pop
push
inc
jne
dec
jb
adc
popf
pusha
gs
nop
hlt
cs
and
xor
ficoml
je
sub
and
sub
repnz
cmp
in
or
movsb
scas
jmp
sub
fdivr
mov
lods
sub
js
push
lds
mov
jle
nop
scas
leave
fcompl
cmp
push
mov
lret
fsubl
jg
sarb
xchg
mov
push
daa
sbb
es
nop
lret
notl
or
test
mov
inc
mov
in
sub
mov
das
aam
add
sar
xlat
mov
repnz
xchg
and
pop
xchg
add
enter
adc
scas
mov
push
in
sub
int3
adc
int3
test
shrb
jle
out
and
pop
nop
les
les
cld
sti
fiadds
and
mov
dec
shll
cmp
or
mov
stos
test
mov
sar
mov
xlat
mov
movsb
repz
mov
outsl
lock
or
pusha
loop
aaa
cmpsl
insl
clc
cli
jbe
push
cmpsl
aad
pusha
dec
aad
call
xchg
test
mov
aam
or
imul
xor
adc
lock
repnz
xchg
sbb
dec
jle
mov
xor
cmpsb
imul
mov
das
nop
mov
dec
mov
enter
nop
xchg
and
shl
sbb
fcoms
mov
mov
shr
dec
in
or
dec
pop
and
lock
and
pop
ret
outsl
mov
lahf
inc
xlat
mov
divl
pop
decl
sub
cmpsl
in
mov
push
pushf
dec
mov
shrb
stc
or
mov
leave
add
and
pop
add
notl
imul
std
sub
xor
stos
push
fwait
negl
jo
cs
cwtl
cmc
scas
cmp
sbb
pop
pop
call
nop
clc
aam
loope
lret
push
or
dec
jg
xor
add
sub
imul
or
js
jne
fcoms
mov
lcall
stos
mov
repz
hlt
mov
pusha
js
add
mov
fcoms
jo
and
pop
nop
loopne
enter
in
shr
dec
and
mov
lock
dec
loop
mov
mov
xor
rcll
or
jmp
js
movsl
lock
mov
aad
push
and
rorl
scas
mov
leave
sub
inc
cmp
pop
mov
call
fmull
sub
sub
repz
lcall
jnp
push
adc
and
js
subb
mov
mov
out
and
daa
int3
pop
push
jno
or
add
jle
inc
mov
shrb
fstl
shrl
daa
insb
icebp
cwtl
pop
or
lock
leave
ja
lock
dec
nop
xlat
lock
in
test
movsb
jnp
adc
add
loope
stc
sub
std
cmp
sub
xlat
aas
mov
dec
push
xchg
dec
sbb
je
movsl
dec
inc
jmp
pop
mov
inc
mov
jl
adc
adc
icebp
mov
cld
jo
pop
jecxz
dec
std
xor
fcompl
in
dec
inc
xor
in
sub
sbb
pushf
push
xchg
inc
fldenv
adc
popa
and
mov
cmc
sahf
enter
add
xchg
fdivrs
aas
cmpsl
add
aam
mov
scas
and
and
dec
jno
and
jg
ret
or
hlt
call
out
cs
adc
jge
rol
inc
aad
ficoms
std
cmp
and
dec
movsb
and
shrb
nop
repnz
jo
mov
icebp
sbb
ja
or
sub
xor
mov
repnz
cmc
mov
scas
jae
cmp
test
xor
pop
sub
and
fcompl
and
stos
icebp
xor
in
dec
stos
movsb
mov
stos
xchg
mov
jg
dec
jg
imul
cmp
dec
mov
jle
jg
pop
push
add
mov
int
pop
aam
pop
and
test
xchg
push
xor
and
push
xchg
icebp
mov
dec
jg
xlat
out
lock
jg
sbb
adc
clc
or
xor
and
out
inc
add
xlat
fsubl
adc
fists
js
mov
leave
cld
shrl
pop
adc
test
xor
test
in
jnp
jmp
or
xchg
test
xor
push
lock
clc
or
pop
mov
jns
hlt
mov
sbb
cmp
mov
push
and
sub
hlt
xor
and
pop
mov
orl
xlat
movsl
hlt
mov
adc
push
pop
push
mov
sub
nop
lahf
insl
xor
and
lea
push
fcomip
jb
fadds
and
jbe
pop
or
mov
dec
mov
loopne
mov
scas
pop
fistl
mov
loope
icebp
pmaxsw
call
js
or
xchg
out
sahf
mov
popf
jbe
mull
je
pop
and
icebp
push
ret
cld
add
fidivl
sub
xchg
push
cmp
mov
inc
std
inc
lods
loop
pop
mov
hlt
ljmp
dec
cmc
jp
adc
and
dec
sbb
shrb
mov
dec
scas
lret
or
dec
lret
stos
mov
stc
sub
loop
jmp
test
aam
scas
outsb
call
push
fs
cmp
mov
idivl
inc
add
es
lock
lock
fcomps
hlt
scas
sbb
mov
pop
xor
mov
sbb
xchg
or
std
aaa
lock
cli
aad
loopne
dec
add
cwtl
loop
pop
lods
cmp
fstpl
push
sub
js
shrb
test
inc
pop
xchg
in
outsb
sbb
add
jle
dec
mov
mov
movsl
repz
push
jns
bsf
xchg
xlat
aas
js
sub
movsl
dec
inc
pop
repnz
xchg
nop
mulb
repnz
les
ljmp
jnp
hlt
xchg
jg
js
movsl
loopne
lods
das
out
push
ret
add
inc
mov
mov
or
inc
inc
scas
shr
repnz
sub
dec
pop
and
mov
ds
mov
aam
ja
push
dec
enter
xor
hlt
imul
mov
bnd
loopne
daa
aad
add
jo
fnsave
js
inc
ds
sub
pop
sarb
out
inc
mov
sti
fidivs
sub
cmpb
rolb
mov
movsl
hlt
rcr
cli
stc
sbbb
popf
and
sub
cmp
and
cli
addr16
cli
pop
or
pop
div
cwtl
mov
cmc
aas
and
jmp
call
lock
jmp
dec
into
add
and
mov
cld
dec
mov
pop
pop
sub
out
adc
ds
mov
cld
or
ds
and
dec
push
movsb
aas
nop
shrl
lock
xor
lods
sbbb
fisttpl
push
jb
cwtl
ja
xor
stos
enter
inc
mov
xor
and
sub
lret
push
jmp
call
scas
mov
fcoms
test
mov
dec
outsb
loopne
sub
stos
leave
cmp
pop
icebp
inc
or
cmp
leave
aaa
dec
call
icebp
cmp
mov
mov
lcall
int
bnd
rclb
fdivr
outsb
sar
pop
ficoms
test
les
push
stc
dec
sub
mov
ficomps
call
test
jp
dec
lods
nop
mov
cld
and
xchg
fwait
sbb
outsl
or
aam
and
lock
repnz
fmull
mov
jnp
stc
sbb
inc
or
pop
mov
test
pop
repnz
cmp
mov
and
push
jmp
xchg
cwtl
fwait
test
sub
mov
sbbb
in
mov
in
mov
jge
sub
push
movsl
dec
pop
icebp
je
rolb
lahf
nop
adc
mov
mov
fisttpl
les
aas
mov
out
imul
xchg
mov
inc
mov
call
push
rclb
add
sbb
add
mov
ret
ds
and
adc
scas
and
repnz
iret
xchg
inc
add
sti
enter
mov
jns
sbb
movsl
adc
and
pop
inc
test
in
imul
push
stc
in
bsf
lea
or
and
notl
pop
in
repnz
incl
mov
aas
jge
or
enter
or
hlt
imul
test
mov
push
xor
cs
sbb
pop
in
repnz
adc
decb
jo
sub
inc
imul
repnz
clc
add
xchg
les
sub
or
pop
nop
xor
inc
cmp
sub
cld
sub
mov
in
ds
cmp
jle
inc
jmp
inc
adc
enter
pop
ds
gs
cs
mov
adc
rorl
and
outsl
xchg
cmc
int
fcoml
orb
inc
jns
ret
les
mov
cli
mov
nop
pop
hlt
sti
test
lea
sar
iret
add
repz
hlt
cmpsb
shl
sbb
sub
ss
aam
mov
dec
cmp
or
xchg
jle
pop
dec
push
jns
outsl
mov
out
dec
jle
loope
dec
dec
dec
test
mov
repz
adc
aas
imul
std
sbb
xchg
shlb
fdivr
js
repz
push
lahf
nop
jmp
xchg
aad
pop
add
dec
pop
notb
dec
iret
test
pop
push
xor
fs
nop
sub
and
aas
test
mov
pop
inc
mov
mov
inc
aam
jg
lahf
es
inc
mov
mov
nop
fwait
lock
inc
sub
pop
ljmp
adc
mov
push
loopne
clc
push
adc
jnp
rcrl
dec
inc
xor
dec
lods
mov
jmp
and
repz
leave
pop
adc
ja
enter
fdivrs
dec
sbb
mull
jg
lahf
dec
loop
inc
pop
les
jg
jo
and
js
out
repz
jns
jle
adc
cwtl
push
insl
enter
push
add
xchg
iret
dec
idivl
or
cs
cli
dec
inc
je
add
js
pop
or
hlt
jne
js
push
sub
mov
xchg
icebp
adc
in
aas
mov
or
pop
fst
test
leave
push
repz
add
out
or
lret
mov
ljmp
js
cwtl
sbb
adc
or
in
push
jl
xchg
mov
hlt
lods
and
sahf
and
data16
mov
hlt
add
insb
add
clc
pop
scas
pop
adc
cmp
sti
dec
mov
pushf
and
or
psrld
and
je
jo
xor
loop
hlt
push
xchg
call
nop
stc
xor
stos
les
adc
in
or
imul
mov
cmpsl
mov
and
movsl
pop
cmp
lahf
mov
js
in
test
mov
clc
mov
lds
xchg
mov
push
cmp
push
cmpsl
lahf
add
nop
xchg
rcrb
pop
scas
dec
mov
xor
in
js
push
jge
sbb
rol
or
jb
lods
cmp
xor
pop
adc
loop
pop
jmp
call
xchg
daa
lcall
adc
mov
scas
enter
sub
push
lock
loope
leave
xor
repnz
stc
in
push
repnz
jle
pop
cmp
pop
inc
mov
clc
add
cmp
cmp
test
test
add
adc
jno
or
push
scas
icebp
mov
or
enter
inc
inc
repnz
lods
inc
cmpb
shlb
pop
lods
pusha
stos
lret
repz
pop
and
pop
or
ja
push
mov
mov
aas
push
out
fbstp
push
test
add
mull
fisttpll
cld
xchg
jge
xor
lret
sbb
sub
loop
pop
adc
jp
lock
fsubrl
jl
or
lds
sub
xor
cmp
adc
out
lret
dec
clc
test
enter
add
rcrb
cmp
movb
mov
aas
jmp
cs
sbbb
inc
jo
fisubrs
xlat
test
lock
push
fs
and
ja
pop
cmp
imul
add
cmp
mov
js
ret
fstpl
pop
push
pop
adc
ljmp
dec
sub
lock
jg
mov
sti
mov
ljmp
mov
cmp
jmp
adc
ljmp
fsub
out
mov
jne
sub
xlat
stc
dec
pop
xchg
daa
sbb
lret
rorl
shr
lret
push
xchg
js
xchg
mov
inc
sub
aas
jl
sub
xchg
and
or
pop
sub
scas
sar
xor
dec
pop
lahf
hlt
xor
pop
out
icebp
lock
movsl
outsb
and
sbb
movsb
outsb
in
dec
pusha
mov
xorb
pusha
xchg
xor
fcoms
jno
pop
fcom
sub
cmc
mov
sahf
mov
adc
cmc
mov
pop
popf
enter
jmp
mull
jb
inc
cwtl
jp
stc
rcrb
pop
ja
fs
dec
ljmp
clc
call
dec
mov
push
mov
test
xchg
mov
mov
mov
pop
dec
sub
stos
lock
mov
bound
addr16
mull
mov
push
push
jmp
adc
mov
outsb
adc
shll
push
jmp
push
neg
repz
xlat
pop
pusha
push
sub
fnstsw
jb
enter
cmp
dec
mov
sbb
inc
or
cmpsl
pop
inc
nop
scas
dec
out
repnz
or
sarl
idiv
sub
pop
stc
add
pop
aas
sbb
imul
shrl
enter
or
mov
daa
mov
jle
jg
add
jo
xor
pop
aam
jg
lods
das
call
push
movsb
scas
cld
sar
rsqrtps
mov
push
push
ljmp
loop
jle
jns
pop
lods
dec
sub
aas
xor
mov
mov
sub
rcr
nop
dec
jp
xor
sub
dec
mov
dec
leave
jle
hlt
and
push
or
pop
inc
ds
neg
sarl
push
fcoml
dec
xor
out
mov
mov
imul
pop
in
mov
cli
aas
mov
cmc
gs
xchg
push
and
push
pop
out
stc
cwtl
scas
sbb
mov
pop
push
idivb
testb
daa
inc
ljmp
repnz
stc
je
bnd
stc
mov
in
xchg
test
mov
nop
mov
mov
lret
notl
adc
out
dec
iret
lock
jae
pop
inc
or
dec
and
and
rcrl
mov
scas
sub
mov
xchg
fldt
sub
push
ret
jb
dec
inc
pop
mov
cmovs
clc
inc
mov
and
jno
sub
pop
lcall
clc
push
cltd
test
dec
clc
je
pop
negl
negl
push
notl
push
sub
push
int
fisttps
sub
pop
and
negl
inc
outsb
clc
std
xor
ljmp
push
or
bound
push
jns
ds
add
jmp
pop
loop
std
outsl
outsl
loopne
stos
cmp
enter
in
cmp
lds
movsl
mov
test
rorb
and
cmc
repz
ja
pushf
jb
mov
xchg
push
pop
xchg
sub
sub
cmc
scas
sub
insb
dec
or
test
aad
loopne
cld
push
xor
aad
call
pop
mov
stc
cwtl
stos
sarb
mov
cwtl
std
lods
mov
cs
and
call
dec
pop
xchg
cwtl
push
xchg
cmp
and
ficoms
jno
cmpsl
popf
fcomps
jo
movsb
mov
and
insl
jo
notl
clc
hlt
inc
es
pop
enter
mov
ret
pop
adc
pop
scas
pop
adc
pop
adc
sub
dec
inc
jmp
shl
test
imull
clc
xor
cmc
cli
pop
pop
and
jo
divl
lods
mov
lods
sbb
in
dec
mov
mov
cld
les
and
pop
pop
jl
push
lret
pop
pop
jge
out
mov
mov
test
sahf
fcomp
adc
or
sub
negb
jo
pop
sbb
scas
pop
and
adc
lea
push
hlt
scas
outsl
mov
mov
shr
xor
and
clc
sub
push
inc
out
enter
in
test
adc
cmc
and
imul
ja
pop
mov
pushf
or
aad
mov
mov
in
hlt
mov
add
mov
std
jle
xor
push
cmp
les
jo,pn
clc
adc
push
testb
sti
fsubl
pop
clc
in
inc
or
or
cli
push
mov
mov
stos
xchg
nop
adc
inc
das
shl
fcoms
call
stos
cld
jo
mov
fcomps
nop
lret
push
adc
inc
scas
mov
clc
fadds
fcom
daa
xlat
in
pop
inc
and
adc
in
std
js
ja
fsub
adc
mov
inc
mov
push
mov
mov
sub
cld
mov
call
test
jp
mov
push
push
push
dec
popf
test
sub
lock
inc
fsub
mov
inc
fdivrs
fisubs
test
pop
loopne
mov
rcll
in
clc
sub
jbe
daa
fsubs
mov
xchg
out
cmpsb
mov
or
leave
add
push
clc
pop
lock
scas
call
push
lds
shlb
sar
push
mov
dec
out
mov
sub
scas
jp
and
cmp
push
loopne
pop
sub
push
xchg
mov
nop
in
js
in
jle
or
enter
pop
pusha
jns
and
nop
in
xor
out
push
and
mov
icebp
rclb
pop
leave
jno
jle
mov
in
sub
add
mov
insb
mov
push
pop
push
cld
lahf
pop
mov
adc
xchg
cmp
xchg
loop
pop
mov
imull
sub
dec
xchg
es
push
stc
push
pmovmskb
enter
mov
pop
pop
clc
mov
push
icebp
push
jbe
daa
shr
push
mov
sub
fiadds
mov
pop
clc
movsl
scas
xchg
clc
mov
lea
inc
xchg
push
popf
mov
pop
or
fchs
sbb
push
aaa
mov
fucomip
inc
nop
mov
loopne
loop
clc
lcall
pop
movsl
xlat
int
pop
dec
cmc
inc
out
sub
pop
cmovb
repnz
push
fdivr
jg
push
scas
mov
aas
call
jmp
mov
jp
mov
push
ljmp
jmp
inc
dec
test
mov
decl
mov
push
add
clc
addb
cmp
cltd
sub
ds
push
scas
dec
mov
testl
mov
sub
shrb
cwtl
xchg
mov
dec
xchg
push
sbb
fdivrs
test
and
or
and
xchg
add
push
repnz
pop
xchg
inc
add
sub
enter
sub
jns
sbb
xor
and
pop
inc
xor
in
imul
push
stc
jnp
mov
or
and
and
in
repnz
lea
dec
test
xchg
nop
scas
repnz
jmp
iret
cwtl
jl
push
aaa
inc
jl
xchg
clc
pop
dec
cwtl
mov
mov
imul
sbb
in
ds
mov
cld
xor
repnz
enter
shrb
or
inc
xor
and
cmc
stc
cmp
cld
out
xlat
in
sub
lock
pop
nop
inc
scas
enter
inc
dec
mov
clc
dec
test
push
cmc
push
mov
sbb
mov
mov
mov
and
and
and
cld
mov
stos
mov
in
sub
sarb
daa
repnz
cmp
sar
loopne
inc
add
ss
mov
inc
mov
pop
sub
test
lods
mov
out
mov
clc
stc
lods
or
mov
js
test
add
cld
mov
sbbb
stc
cmc
lahf
fcomp
fistps
mov
bnd
push
lods
cmp
mov
inc
dec
sahf
cmpsl
dec
fsubrs
dec
scas
fisubrl
loop
std
sbb
call
leave
lods
insl
js
faddl
lds
sbb
js
leave
jl
mov
inc
xchg
adc
and
aas
clc
jnp
inc
pop
adc
push
mov
stc
ljmp
mov
aam
sub
and
outsl
pop
jle
nop
nop
cmc
stos
lret
cmp
repnz
dec
and
jge
mov
je
jg
jmp
ja
add
sarb
jne
cmp
xchg
clc
call
scas
aad
mov
xchg
sti
mov
loop
jbe
fbld
nop
pop
add
movsb
or
and
notl
fdivr
aad
cmp
loop
jge
nop
push
adc
scas
lret
add
daa
sub
repnz
nop
push
es
hlt
adc
or
in
xchg
jne
dec
pop
daa
or
cwtl
sub
cmpb
subb
lods
fistps
nop
enter
adc
mov
mov
dec
pop
push
jae
jl
adc
cmc
mov
dec
xor
inc
imull
mov
mov
sub
fists
push
jb
inc
pop
lods
repz
pop
mov
push
js
cli
xchg
mov
xlat
fildl
call
pop
and
push
inc
pop
jl
call
and
or
cmp
pop
out
jle
or
add
aam
decb
aas
xor
scas
lods
dec
adc
cli
sti
xchg
mov
pop
sbb
mov
xchg
ljmp
cli
loope
cli
cmp
mov
dec
std
sub
fcoms
je
pop
movsl
mov
jmp
enter
pop
or
xchg
mov
mov
call
hlt
test
adc
sub
and
mov
loopne
dec
pop
jle
pop
enter
xchg
mov
ljmp
dec
push
enter
xor
push
call
pop
push
pop
scas
call
mov
std
xchg
js
fwait
sbb
pop
cmpb
fsubr
daa
push
lahf
sub
lods
divb
adc
jnp
daa
or
shlb
adc
fsubrs
add
sub
adcb
iret
or
ljmp
dec
pushl
stos
test
stos
mov
clc
jmp
cmp
jge
loopne
mov
je
add
jmp
xor
mov
dec
mov
jmp
mov
lahf
adc
push
cmp
je
ficomps
mov
mov
add
cmc
into
adc
adc
loope
cli
jg
cmp
pop
mov
sar
and
dec
mov
outsb
pop
adc
sub
hlt
mov
mov
adc
imul
pusha
cli
call
and
shlb
rcll
adc
pushf
dec
mov
jb
jmp
sub
outsl
nop
jo
cli
popf
out
idivb
xchg
stc
jp
cmp
mov
xchg
cli
aas
jno
addr16
shrb
mov
or
push
inc
test
daa
mov
add
sub
push
add
and
push
cmc
in
dec
decl
imul
push
mov
dec
negb
jge
mov
in
test
or
add
leave
hlt
stos
clc
push
adc
cli
scas
adc
cli
scas
test
cli
cmp
and
add
repnz
jmp
cmp
pusha
xchg
cmc
lahf
mov
xor
call
mov
push
mov
pop
cmp
mov
sbb
dec
sub
nop
pop
jmp
inc
cwtl
icebp
or
pop
mov
jnp
test
popf
fistps
xor
pop
cld
clc
pop
faddl
icebp
and
sbb
loopne
les
inc
mov
in
mov
mov
mov
mov
decl
cld
jo
lock
movsl
ffree
jo
daa
xor
hlt
xchg
cmc
sbb
mov
stos
and
aas
push
add
scas
loop
and
fst
mov
les
mov
and
mov
test
sub
sti
dec
inc
sar
in
sub
hlt
jg
sar
mov
lret
call
aas
rorb
jmp
cmpsb
adc
sti
cmp
jo
pop
cli
ds
mov
jge
das
cmp
movsl
dec
out
push
pop
clc
pop
stos
and
and
pop
adc
and
push
jae
clc
pop
mov
sub
mov
out
int3
or
jo
loope
clc
jmp
mov
dec
inc
xchg
pop
fcompl
js
xchg
push
jnp
test
sub
cld
sub
sti
pop
lahf
lock
lahf
adc
test
adc
adc
inc
scas
mov
ret
or
vpsubq
mov
repnz
test
mov
dec
xlat
adc
jmp
cld
cmc
test
pushl
jecxz
hlt
das
nop
pop
mulb
scas
jp
dec
inc
mov
adc
loope
cld
sbb
clc
xor
icebp
pushf
aas
push
mov
cmp
ds
loope
cld
sbb
clc
arpl
mov
insl
cld
pop
pop
or
push
lock
cld
push
cld
and
dec
jle
cmp
xchg
ret
adc
ja
mov
adc
outsl
pusha
mov
fistl
jo
loop
push
adc
icebp
fisttpl
jmp
in
in
sub
pop
stc
cld
scas
lahf
fsubrs
aad
clc
jns
jle
sbb
cli
aas
rcl
les
inc
std
in
iret
add
add
jp
lds
sbb
in
dec
mov
dec
cld
add
mov
mov
std
cmc
lock
std
test
and
sub
test
xor
std
mov
std
jge
and
pop
ret
aaa
jl
pop
std
pop
lock
mov
jnp
pop
pop
hlt
cmp
xchg
stos
outsl
dec
sub
aam
pop
dec
push
mov
aad
pop
lret
pop
adc
cld
jnp
jg
test
nop
cltd
call
jnp
and
jno
imul
lods
push
stc
mov
mov
lret
or
mov
test
aad
pop
pop
or
std
push
lock
aaa
adc
repz
int
push
nop
inc
mov
cli
clc
adc
mov
fsubr
les
das
mov
enter
xchg
ret
adc
ja
push
adc
test
fcmovu
js
loop
enter
jge
and
pop
ret
aaa
jl
mov
pop
lock
xchg
int
negb
enter
scas
mov
pop
dec
popf
adc
mov
cld
mov
outsl
cmc
mov
aas
test
int
mov
inc
adc
fldcw
cld
jecxz
fists
test
sub
lock
pop
cmp
call
test
ljmp
adc
pop
ljmp
lcall
incl
adc
ja
inc
call
jns
push
pop
jl
test
pop
lcall
pop
or
push
lock
decl
push
cld
dec
cmp
and
and
cmc
xchg
xor
adc
and
adc
mov
jg
mov
fidivs
jne
shll
push
mov
repnz
adc
enter
dec
out
clc
scas
and
icebp
imul
sti
push
stc
add
out
into
invd
adc
and
sub
pop
scas
xchg
mov
cld
add
fisubs
mov
adc
or
adc
and
lock
push
adc
enter
inc
jae
sbb
cmp
inc
mov
lods
aas
mov
mov
bnd
jmp
sbb
inc
xchg
mov
movsl
or
lret
scas
pop
lock
nop
mov
jle
int
repnz
pop
pop
nop
loope
bnd
jle
cmc
mov
mov
add
adc
fisttps
sbb
daa
add
icebp
xor
jmp
cmp
inc
sub
and
stc
pop
or
and
in
sub
and
popf
jle
push
adc
add
jmp
push
cli
fst
lock
daa
pop
lds
clc
jb
aas
in
jne
cmpsb
dec
out
dec
mov
xchg
cmpsl
pop
inc
sarb
pop
xchg
sub
mov
stos
dec
out
aas
enter
lds
fldenv
pop
fcoms
push
clc
add
mov
dec
dec
push
dec
mov
xchg
scas
cmpsb
clc
mov
ja
cmp
es
mov
xor
or
enter
pop
in
enter
addr16
cli
pop
dec
daa
stc
pop
jle
sub
icebp
lds
jo
dec
mov
mov
and
sub
and
jle
fmull
and
inc
nop
test
fldcw
and
gs
std
sti
inc
jl
sub
mov
lahf
test
imul
scas
mov
push
push
jle
jo
in
mov
in
dec
inc
movsb
mov
xchg
inc
je
mov
or
add
stos
xchg
nop
and
mov
test
sub
xor
sub
rcrl
mov
hlt
sub
add
mov
inc
and
movsl
push
inc
xor
and
or
and
clc
out
mov
push
push
and
lds
xchg
mov
add
dec
clc
cli
xchg
push
leave
mov
lahf
jbe
pop
lds
mov
cltd
inc
jge
push
pop
mov
adc
inc
adc
enter
jae
stc
adc
cli
mov
stc
cmp
aad
push
mov
leave
adc
push
stos
fwait
sbb
jmp
mov
lods
xor
jns
add
das
fistps
and
sub
inc
cmpsl
or
pop
or
js
dec
and
adc
mov
add
xlat
or
inc
mov
sub
mov
enter
mov
xor
aaa
jmp
cwtl
jg
mov
imul
push
inc
adc
test
sahf
fsubs
fdivr
mov
and
and
xchg
or
dec
outsl
xor
pop
sub
adc
dec
mov
out
in
outsl
lods
adc
add
out
pop
cli
push
loop
rcll
jo
jne
or
jo
add
sbb
ret
mov
mov
fs
hlt
scas
lcall
jmp
mov
lock
jne
xor
enter
repnz
mull
jl
sub
push
mov
mov
cmc
adc
xor
stos
pop
jmp
mov
nop
xchg
dec
push
mov
cld
bound
jmp
mov
xchg
dec
nop
test
add
cwtl
lods
adc
cmpsb
adc
nop
fidivs
mov
add
pop
xlat
mov
push
call
cmp
fmuls
pusha
inc
dec
cld
sub
push
xchg
ja
adcb
scas
repnz
in
jg
js
push
fcomp
cmpsl
sti
fdivrs
iret
jo
adc
mov
sbb
push
pusha
movsb
lret
sub
in
or
fstl
push
adc
enter
sbb
inc
add
ss
nop
cli
push
jbe
aad
sbb
clc
mov
out
dec
push
test
adc
mov
adc
pop
inc
jnp
xchg
mov
cmp
jp
mov
aaa
and
test
ljmp
xor
pop
sub
pop
and
xchg
pop
mov
jle
es
rcr
nop
xchg
mov
dec
mov
in
sub
cmc
sti
jg
dec
das
jo
repnz
mov
jmp
fwait
mov
enter
mov
das
js
stos
fiaddl
hlt
scas
lods
mov
pop
call
push
sub
std
or
sub
dec
outsl
nop
and
sub
xchg
xlat
call
mov
mov
mov
xchg
sub
enter
scas
dec
lcall
xchg
js
push
das
and
dec
and
inc
add
jo
je
add
gs
jg
and
or
sbb
xor
pop
scas
enter
pop
sub
push
xchg
inc
or
enter
pop
mov
xchg
inc
scas
and
jge
sbb
bnd
stc
adc
cld
je
jg
insl
sti
enter
dec
sbb
je
xlat
xchg
adc
repnz
xor
jae
jns
or
sbb
jle
mov
sbb
cld
popa
lea
or
enter
imul
cmp
jmp
sar
ficoms
jp
cwtl
ja
fdivr
aam
dec
cmp
ds
and
ficoms
dec
pusha
in
cli
ds
movsb
mov
push
add
test
cli
sbb
lds
lahf
cmp
and
xor
jnp
out
pop
divb
and
fidivs
dec
imul
clc
cli
and
jmp
and
loop
inc
cwtl
cmc
stos
fwait
ror
push
dec
inc
push
insb
and
xchg
and
pop
mov
std
mov
add
inc
lods
arpl
scas
shr
sub
dec
fwait
add
iret
ja
jo
sub
ss
aam
mov
dec
cmp
or
mov
xchg
rorl
mov
inc
loope
rolb
test
add
clc
aad
adc
mov
mov
pop
xchg
cld
mov
jnp
sarb
adc
fcomps
aaa
mov
das
add
fs
sti
fwait
xor
stos
sub
lock
or
scas
dec
mov
dec
xor
mov
push
movsb
mov
aad
mov
scas
mov
push
jmp
enter
sub
loop,pt
icebp
ljmp
adc
dec
imul
add
push
ja
out
enter
test
scas
and
ja
scas
mov
in
dec
scas
adc
jg
xor
adc
or
add
in
jl
lock
jp
lds
adc
fdivr
jo
cld
adc
lods
adc
jmp
adc
jns
imul
adc
out
jp
dec
scas
lret
mov
dec
mov
jg
rclb
push
add
xchg
fsubrs
nop
sub
sub
sbb
mul
xor
push
stc
pop
std
das
mov
add
das
xor
push
jmp
fdivr
pop
add
push
mov
dec
ucomiss
mov
rcrb
imul
popf
outsl
inc
jl
and
or
or
enter
aad
nop
fbstp
jl
shrb
clc
cmc
cmpsl
pop
gs
pop
mov
movb
pop
sti
sbb
adc
dec
outsl
mov
xchg
adc
sub
daa
aad
test
sub
inc
mov
adc
outsl
rclb
lahf
or
pop
nop
jno
xor
jmp
xor
scas
mov
xchg
mov
repnz
jno
jl
nop
push
jge
or
outsl
sbb
and
dec
inc
stos
dec
mov
add
je
xlat
adc
dec
test
cwtl
inc
fcomps
arpl
enter
fdiv
and
jno
add
lock
sbb
push
xchg
sub
and
sarb
add
dec
in
daa
fwait
inc
jle
mov
scas
adc
js
adcl
nop
hlt
dec
or
ror
add
and
paddb
shr
idivl
daa
xchg
adc
cli
pop
or
cmc
sti
xor
ret
push
lahf
pusha
popf
ja
enter
push
jp
inc
test
aad
cwtl
jp
rcrb
jle
test
daa
cld
fstpt
popf
jbe
decl
insb
dec
adc
stos
mov
out
or
push
dec
mov
lock
sub
mov
xchg
fiadds
scas
adc
mov
cmpsl
sarl
jns
bsf
test
lret
and
add
popf
das
repnz
sbb
mov
cli
cld
push
hlt
out
mov
dec
std
cmp
adc
xor
push
mov
push
pop
jecxz
add
pop
mov
cmp
stos
in
nop
movsb
cmpsb
xor
sbb
test
pop
jecxz
std
ds
mov
leave
sti
test
cmc
stc
xor
nop
fisttps
hlt
and
push
jno
insb
mov
mov
adc
push
add
lock
lods
outsb
pop
adc
mov
inc
add
and
or
insl
mov
jns
push
adc
test
add
scas
dec
out
jnp
loop
xchg
dec
sub
or
inc
sub
lods
pop
stos
repnz
ja
xor
pop
cli
fdivl
push
jmp
lds
loop
add
gs
lahf
aam
imull
clc
inc
in
mov
sti
push
and
fs
aas
dec
out
aas
clc
hlt
call
adc
nop
enter
sbb
cld
sbb
push
cmpsb
pusha
fisttps
sbb
cld
or
lods
add
mov
and
lods
fld
fildll
test
fwait
pusha
rcl
push
or
xor
push
sbb
pop
and
das
aad
cmp
add
cld
out
xor
pop
mov
mov
repnz
jl
push
cld
lahf
dec
xor
loop
das
xlat
vandnps
xor
jecxz
inc
test
adc
mov
loopne
add
cld
shll
sub
pop
add
or
stos
test
dec
cmpsl
mov
push
jg
or
jae
std
pop
sub
jne
jge
mov
mov
xchg
xchg
mov
pop
dec
cmc
loop
add
dec
enter
out
hlt
out
lret
add
lock
add
fcoms
cld
fsubrs
push
add
jo
and
inc
sti
push
and
mov
fsubr
xlat
mov
hlt
cli
jp
cmp
inc
mov
add
lods
pusha
cli
mov
ffreep
add
out
out
dec
mov
cmc
jmp
inc
inc
jb
inc
push
jmp
pop
dec
push
sub
hlt
outsb
nop
xchg
test
jg
mov
cmp
dec
cmpsl
push
adc
popf
push
xor
dec
nop
popf
pop
or
addr16
int
inc
push
repz
mov
push
aas
and
jl
push
leave
ret
in
je
xor
jo
jle
test
je
inc
dec
jle
pop
jo
push
sub
push
aad
hlt
push
sbb
enter
push
mov
ffreep
sub
lret
dec
ds
mov
lock
lea
shl
sbb
cmp
and
xchg
inc
cmc
adc
dec
aas
mov
in
jg
pop
add
add
inc
sub
jb
mov
xchg
push
js
adc
nop
scas
enter
push
pusha
aad
add
dec
mov
adc
addr16
test
xchg
sarb
cli
jne
xor
in
adc
mov
mov
repz
dec
jge
cs
cmp
jp
adc
sub
repz
cmp
out
in
fcmovnu
mov
pop
movsl
xchg
or
pop
xchg
sub
mov
call
push
cli
iret
cmp
outsb
test
and
push
lock
sub
loop
mov
stc
mov
rcr
fsubrs
and
in
scas
adc
js
roll
incb
xchg
in
sbb
mov
in
mov
das
push
fildl
jnp
out
and
dec
mov
lret
cmp
stc
es
sub
cmp
lcall
or
add
cld
jp
xor
inc
movsb
mov
aad
call
adc
notb
or
leave
in
cmp
ja
call
pop
adc
fdivrs
lods
adc
jecxz
hlt
stos
mov
les
dec
sarb
dec
shrb
daa
fmull
addr16
cmc
int
jno
and
mov
jmp
or
inc
push
fdiv
add
call
lods
stc
pop
add
jle
movsl
sub
mov
xchg
ljmp
jnp
icebp
xor
or
stos
std
ret
loopne
scas
pop
mov
xor
fisubs
sbb
fucom
mov
cli
aas
adc
or
pop
test
add
testb
fs
mov
dec
dec
and
and
pop
adc
push
push
xor
lahf
popa
imul
dec
mov
xlat
stos
stos
test
add
dec
jmp
lahf
mov
xchg
sub
sub
pop
stos
xchg
lods
mov
lret
lret
cmp
or
loopne
jmp
pop
pop
cmp
fcomps
es
sub
mov
pop
mov
gs
mov
add
dec
mov
fildl
or
push
cmp
xchg
push
jo
xchg
sbb
pusha
cmc
mov
test
test
sbb
icebp
shlb
inc
std
in
jp
aam
sti
jecxz
mov
sbb
pusha
jp
inc
or
inc
aaa
or
dec
dec
add
das
out
scas
xlat
mov
mov
pop
xor
adc
hlt
push
mov
sti
xchg
aas
hlt
cmpsl
xor
popa
pushf
es
imul
imul
pop
cli
adc
pop
lods
enter
incb
mov
pop
outsl
mov
mov
xchg
into
cwtl
cld
test
daa
lcall
call
stc
shl
call
call
iret
sbb
dec
js
pop
cmp
mov
inc
aam
push
or
add
mov
jge
sbb
sub
xchg
mov
add
test
cli
ja
pop
ficomps
cmpsl
jns
pop
jmp
popf
mov
push
jbe
pop
jmp
aam
push
movsb
mov
nop
sub
fbld
fwait
test
scas
mov
repnz
inc
cld
daa
pop
test
nop
xchg
gs
adc
xchg
jbe
xlat
add
sub
adc
jmp
push
mov
and
jp
xchg
cmp
pop
cmp
aad
rcr
pop
js
mov
jg
mov
mov
mov
lods
hlt
or
lret
push
adc
dec
add
clc
xor
mov
add
dec
jnp
mov
lock
lret
cmp
mov
addr16
sub
das
rorb
pop
loop
aaa
jmp
sahf
nop
incb
hlt
cli
mov
dec
lcall
call
scas
sbb
insl
and
add
push
jg
pop
and
pop
mov
in
jg
sub
lahf
push
enter
nop
push
loope
cmc
or
lret
jmp
sarb
inc
decb
and
push
mov
mov
ljmp
pop
adc
add
cmp
xor
adc
out
sahf
jo
out
jg
ret
add
cmc
call
movsl
pushl
mov
aad
loopne
mov
in
jp
push
enter
adc
cmp
rorb
sub
ds
mov
test
pusha
jle
push
popf
sbb
arpl
sub
xchg
and
push
hlt
in
push
jo
and
xor
stos
xchg
jp
mov
sbb
imul
mov
mov
jge
jo
xchg
rcl
leave
outsl
iret
or
cld
cwtl
scas
xchg
mov
daa
jl
mov
std
sub
jg
xchg
mov
iret
add
or
adc
outsl
dec
jp
clc
in
push
lods
jge
call
ja
inc
dec
std
out
push
push
mov
mov
push
jne
xor
or
push
jge
cwtl
fisttpll
iret
xor
push
das
jge
or
push
gs
fsubs
push
mov
push
mov
pop
or
push
fidivrs
std
push
std
adc
outsl
and
sub
jno
hlt
fadds
shlb
jmp
or
or
stc
or
imul
call
imul
ds
pop
lods
cmp
sub
shl
jae
leave
adc
sub
fdivr
dec
jmp
mov
jnp
add
dec
xor
mov
mov
pop
sti
inc
nop
mov
pop
jle
jnp
push
mov
addr16
jle
jg
sti
sbb
xchg
fsubl
mov
jmp
out
dec
jno
jb
mov
and
mov
subb
jp
and
jns
push
int
fcoml
aad
mov
inc
jnp
pop
ficoml
leave
insb
jg
test
mov
inc
adc
inc
push
mov
jp
adc
pushl
push
push
mov
dec
es
loop
aaa
jmp
jo
cld
outsb
mov
adc
or
pop
popf
push
jmp
cmp
cmpsb
and
cmpsl
push
cli
fwait
sub
subb
mov
jl
sub
scas
fcmovnb
rcll
mov
mov
enter
add
and
sub
and
and
in
jg
cmp
push
cli
fcomip
cmp
push
adc
movsl
jg
xor
aam
jle
dec
dec
add
mov
add
rcrb
shrb
fists
js
aaa
mov
lret
pop
ds
sub
xchg
pop
je
cmp
sbb
lods
jo
es
cli
jg
dec
ljmp
jne
dec
icebp
dec
ret
test
mov
shrb
outsb
in
dec
pusha
mov
negl
mov
imul
stos
xlat
scas
lret
outsb
fmuls
sbb
jae
aad
faddl
cmc
pusha
pop
imul
jg
pop
mov
fildl
jmp
out
jle
xchg
ja
test
dec
sub
clc
mov
push
dec
icebp
mov
mov
sarl
ret
fsubrs
sub
and
mov
js
pop
popf
jnp
frstor
in
adc
jmp
stos
mov
std
sub
mov
cwtl
push
leave
jge
add
adc
adc
adc
fidivs
mov
fwait
dec
nop
mov
movsl
pop
clc
fbld
and
push
xchg
mov
aas
mov
imul
fdivrs
pop
xor
sahf
jo
scas
fsts
std
js
pop
mov
pop
in
jp
add
cmp
fidivl
cmp
loopne
sub
hlt
mov
loop
and
lahf
pusha
enter
xchg
std
cmp
imul
pop
jle,pn
mov
cmp
and
push
inc
fsubrs
dec
std
dec
mov
and
movsb
xchg
mov
or
add
push
pop
push
cmp
test
xchg
jl
add
inc
rcrb
in
nop
lds
and
and
mov
nop
fsubrp
pop
mov
and
mov
add
out
std
and
mov
aam
fisttpl
jmp
mov
test
xchg
and
mov
lds
sar
dec
adc
sub
lods
pop
es
adc
mov
je
inc
pop
pop
and
imul
movsl
mov
fucomp
ja
sbb
push
mov
outsl
adc
jl
jmp
out
lret
and
pop
stc
mov
sar
mov
sbb
dec
mov
cmp
cmpsl
sub
xchg
mov
inc
fnsave
mov
mov
clc
inc
stc
pusha
dec
mov
lods
das
into
clc
mov
xor
sarb
out
out
dec
stos
outsb
or
mov
add
cmc
stos
sub
cmp
mov
ficomps
js
pop
mov
cmc
jnp
push
or
dec
in
testb
or
mov
xor
mov
out
dec
sti
lret
xor
shrb
addr16
jo
lea
daa
cmp
inc
incb
repnz
mov
cs
mov
adc
mov
sar
jg
and
clc
insl
dec
jle
mov
ja
nop
jne
xchg
sub
sub
ja
inc
jg
xchg
sub
pop
adc
fstpt
cmpsl
or
enter
dec
ret
pop
adc
push
and
das
test
js
adc
out
and
sti
jecxz
mov
out
dec
cli
mov
sti
test
das
scas
and
pop
loop
pop
std
sti
and
and
dec
lock
loopne
cmp
jp
jle
cmc
fcompl
stos
cmp
lods
cli
inc
pop
mov
mov
test
xchg
fistps
fcomp
adc
out
jecxz
scas
movsb
mov
adc
jle
je
pop
lret
inc
sbb
dec
mov
pop
cwtl
jg
cld
cmp
fisubrs
or
std
cmpsb
sbb
test
dec
mov
inc
fsubrs
sub
mov
test
imul
jnp
and
push
mov
sub
sbb
sub
clc
cld
sub
dec
cld
call
push
push
stc
or
movsb
repnz
sar
cmp
shrb
or
sub
push
mov
sub
cmc
ficomps
mov
jno
ficomps
aam
pop
fsubrl
xor
aad
enter
scas
into
nop
ljmp
movsl
dec
push
mov
fst
cltd
das
lahf
pop
mov
sti
imul
push
mov
pop
mov
sub
arpl
test
adc
or
notl
adc
cmp
imul
mov
jge
mov
lea
das
clc
push
aaa
or
inc
fisttpll
in
idivl
jp
pop
mov
pop
push
inc
dec
mov
sbb
call
lahf
fsub
adc
pop
adc
pop
clc
mov
sub
shr
jg
or
or
pop
adc
ret
fimull
pop
enter
arpl
dec
push
repnz
pop
xchg
insl
sti
enter
inc
or
cmp
mov
mov
mov
lahf
inc
std
movsl
in
mov
mov
mov
mov
mov
out
repnz
call
xor
mov
mov
push
in
ficoms
add
subb
pop
mov
jmp
jge
jg
mov
cli
dec
or
and
pmullw
push
stos
xchg
lahf
adc
dec
insb
pop
pop
cwtl
iret
test
cmp
xchg
and
cwtl
out
dec
lcall
mov
inc
push
lods
or
mov
mov
push
cmp
insl
mov
js
les
cwtl
gs
mov
push
dec
sub
cmp
or
push
fmull
inc
ud0
fdivrs
and
mov
fcom
pop
adc
scas
and
pop
nop
xchg
scas
enter
cmp
pop
adc
scas
adc
inc
scas
mov
sub
or
scas
enter
push
sub
insb
into
or
sbb
lods
test
and
repz
inc
pop
and
pop
adc
clc
loop
adc
imul
adc
mov
clc
movsb
iret
test
pop
or
jmp
or
mov
stos
or
push
div
nop
rcr
mov
jns
xor
aas
mov
ds
ljmp
or
inc
sbb
mov
fildll
push
mov
sbb
repnz
and
mov
inc
dec
in
test
mov
clc
sbb
test
jmp
mov
jg
sarl
mov
inc
movsl
dec
fldenv
sbb
loop
in
fmull
sub
jb
clc
icebp
or
add
repnz
pop
jns
or
adc
push
or
sarl
sbb
repnz
pop
jns
or
adc
clc
je
pop
and
and
sub
pop
adcl
cmp
push
xor
jnp
scas
enter
cmp
testl
sub
sarb
sub
pop
enter
pop
fucom
aad
mov
adc
and
stc
cmpsl
rorl
mov
mov
aad
push
jl
jg
mov
or
jl
push
push
sub
imul
lock
clc
inc
add
pop
or
push
test
dec
inc
mov
test
push
cmp
jno
aas
jo
imul
sti
shl
scas
lods
clc
scas
cs
xorb
fiadds
mov
nop
aam
mov
xchg
mov
add
enter
pop
cmp
cld
sbb
and
inc
nop
mov
in
mov
and
mov
sbb
xchg
ja
js
test
test
or
pop
pop
out
bsf
inc
out
adc
dec
dec
test
dec
or
push
inc
nop
loop
pop
cmpsl
dec
nop
in
cmp
mov
dec
sahf
sbb
jmp
push
js
xchg
js
scas
pop
clc
push
sub
add
push
add
mov
mov
pop
lds
pop
xchg
call
and
repz
test
fcomps
aaa
js
push
and
faddl
push
enter
mov
adc
add
ret
xorb
imull
gs
jp
and
xchg
or
push
dec
adc
loop
mov
hlt
mov
hlt
and
jno
jle
add
jmp
jle
faddl
inc
repnz
adc
negl
test
clc
or
ja
cs
enter
sti
test
jmp
pop
clc
jmp
or
sub
scas
pop
iret
pop
hlt
ds
and
push
dec
sbb
dec
fs
repz
push
add
aaa
or
mov
add
fcomp
inc
pop
mov
sbb
and
adc
scas
and
pop
in
repnz
icebp
daa
bsf
lea
or
and
and
pop
in
ds
cld
cmp
adc
enter
adc
repnz
pop
jns
sbb
sbb
mov
pop
leave
cmc
in
shlb
enter
or
sbb
mov
enter
fdiv
call
xor
ljmp
adc
jnp
mov
adc
push
or
pop
inc
and
mov
call
sub
stos
test
sub
and
pop
js
sub
adc
jge
shrb
and
js
sub
les
out
and
imul
stos
repnz
sbb
out
js
das
jae
fnstcw
std
movsl
xlat
xor
or
mov
mov
pop
sub
mov
imull
mov
loope
or
stc
mov
xchg
mov
xchg
cli
sub
sti
ljmp
test
or
rcll
and
fstpl
aad
sahf
or
shrl
std
rorb
test
stos
or
ja
sub
adc
xlat
lds
pop
mov
push
pop
jl
pop
cmp
in
cmp
mov
mov
repnz
ja
js
dec
sub
in
mov
or
mov
pop
pop
fmull
and
and
jg
or
repnz
enter
sub
mov
xor
and
je
push
push
popf
clc
icebp
lock
adc
or
cmpsb
lock
sub
dec
gs
pop
mov
cmc
leave
ja
and
and
or
stos
sbb
scas
and
lds
push
mov
sub
or
add
dec
pusha
mov
shrl
mov
std
in
cs
in
pusha
and
dec
es
mov
nop
test
lea
lock
jge
cwtl
jmp
sub
decb
imull
push
in
sub
je
ficomps
adc
or
ja
pusha
fs
mov
sub
out
and
pop
clc
adc
lea
or
xor
cs
cmp
mov
in
mov
inc
pop
faddl
mov
dec
scas
push
scas
adc
or
mov
cmp
ret
jne
aad
xor
out
mov
pusha
pop
jne
or
dec
loop
scas
pop
js,pn
xor
sti
test
dec
mov
pop
clc
push
jmp
or
outsl
dec
in
clc
mov
jp
aas
sub
nop
lds
stos
jecxz
scas
movsb
mov
imul
dec
das
cwtl
mov
mov
fmuls
test
loop
pop
lods
push
sbb
cmp
xchg
scas
jecxz
mov
clc
sub
xor
je
decb
and
cmc
lahf
mov
dec
ds
adc
sti
fistps
daa
test
daa
sub
cmp
sub
aam
mov
loope
or
ljmp
dec
mov
push
xchg
jle
xchg
mov
mov
cmpsl
fdivrs
jns
jg
jae
ja
call
dec
fdiv
bnd
sub
ja
xor
xor
or
mov
cmp
push
adc
das
pop
sbb
jg
outsl
nop
daa
jl
or
cmc
out
clc
into
mov
in
outsl
mov
mov
bound
jbe
call
and
call
test
pop
or
cwtl
cli
je
or
pushf
or
enter
mov
cmc
adc
xor
push
pop
dec
cmpsb
push
mov
jg
xor
ds
mov
inc
mov
mov
mov
lahf
adc
jmp
enter
adc
loop
mov
sub
movsl
out
mov
or
jns
mov
sub
sub
cld
sub
cli
pop
xor
sub
out
jp
nop
adc
call
mov
movsl
nop
jle
push
jle
dec
pusha
ljmp
dec
sub
push
mov
xchg
lds
es
cli
mov
aam
stc
add
mov
pushf
ret
mov
fidivrs
adc
mov
std
jnp
sbb
push
jl
push
jb
xchg
add
dec
out
dec
fisubl
mov
mov
cli
cmc
sti
enter
or
or
or
subb
test
das
ljmp
out
adc
or
cmp
jmp
mov
sub
adc
ds
jo
cld
or
pop
sahf
lock
dec
outsl
jo
xchg
les
loop
jmp
mov
or
mov
rorl
add
mov
aad
mov
cmp
iret
loopne
ljmp
lock
das
sarb
xlat
stc
shrb
sub
sar
cmp
cmp
icebp
sbb
jmp
jmp
pop
mov
mov
shrb
or
mov
mov
in
clc
sub
es
xlat
mov
pop
daa
dec
dec
enter
cli
pop
lock
jne
and
loopne
loope
aas
inc
out
adc
or
loopne
xlat
testb
in
popf
cmc
mov
jno
sub
nop
in
sub
cli
mov
inc
mov
inc
cli
lret
sub
cmp
or
std
inc
out
cmc
sub
testl
das
in
mov
cwtl
mov
scas
in
push
jmp
dec
imull
clc
das
repnz
std
jo
xchg
iret
or
or
mov
pop
or
jl
std
inc
cmc
in
sub
in
outsb
mov
sarb
cmp
pop
jno
xlat
push
mull
cli
jns
cli
negl
sti
xlat
scas
sub
std
sub
fbld
insb
dec
ret
outsl
or
push
nop
repnz
xor
pop
jmp
sarb
pop
orl
pusha
mov
push
scas
and
cmpsl
jns
pop
mov
or
lock
cmp
pop
mov
or
and
jbe
pop
fdivl
or
cld
xchg
mov
jns
pop
and
push
jns
jge
fdivl
pop
clc
std
adc
fsubrs
rcrb
xor
call
xchg
lahf
or
mov
mov
ret
or
lret
ja
xor
mov
pusha
daa
push
inc
sbb
iret
enter
sar
outsl
pusha
jb
cmpsl
seto
cmpsl
jg
shrb
inc
sub
nop
dec
stos
enter
enter
clc
add
sarl
leave
adc
inc
jb
in
and
popf
mov
inc
push
inc
or
repnz
nop
in
repnz
cli
std
push
sbb
xlat
sub
iret
jo
inc
out
sti
shrb
mov
cld
mov
jle
mov
jns
cmc
and
sub
clc
lcall
in
mov
pop
mov
dec
std
clc
pusha
scas
lret
jle
push
add
cmpsl
call
mov
repnz
lods
loop
jne
lock
popf
out
xchg
sub
les
std
bound
mov
call
scas
and
xchg
or
inc
sti
sub
scas
test
or
adc
stc
inc
mov
and
mov
or
xor
cmp
push
in
cmp
stc
mov
add
sub
std
out
iret
push
mov
js
nop
or
enter
jno
pop
lret
jg
enter
push
add
xchg
push
pushf
inc
sti
push
sti
mov
popa
or
and
dec
subb
mov
std
sub
inc
stos
fs
mov
pop
ficomps
add
je
push
ss
sti
dec
mov
lock
fs
inc
dec
loope
daa
ret
jg
das
lods
or
mov
aaa
clc
jmp
dec
sub
imul
in
das
enter
xchg
mov
and
inc
xchg
seto
jnp
lock
daa
fwait
sarb
dec
jle
cmp
stc
imul
pop
aas
lock
mov
xchg
out
lret
xor
mov
pop
loope
ljmp
push
lods
int3
push
inc
nop
loop
inc
and
es
cmc
loopne
add
shrb
and
nop
mov
and
xchg
fsubr
je
clc
jns
sub
scas
xchg
push
cmp
enter
jmp
scas
lret
mov
aas
dec
xchg
jnp
sarb
shlb
mov
int
pop
dec
mov
cwtl
mov
or
dec
rcl
xor
lock
cli
fbstp
out
dec
sbb
mov
mov
mov
lds
sub
aad
push
jle
add
lret
jnp
pop
xchg
clc
imul
das
mov
sbb
or
and
testb
outsl
adc
push
push
scas
loop
sbb
push
mov
push
divb
negl
call
daa
jae
ja
shrb
cld
pop
scas
jae
cwtl
push
loop
scas
dec
outsb
push
int3
js
pop
and
mov
mov
loop
xor
or
sub
ljmp
jp
aad
ljmp
mov
mov
push
push
cwtl
cli
test
pop
push
sub
adc
mov
repnz
sbb
jl
shll
mov
adc
jb
jae
ljmp
cmc
aad
push
xchg
xor
jmp
sub
mov
dec
call
xchg
push
adc
in
mov
pusha
mov
in
adc
cmpsl
sub
enter
nop
scas
lds
mov
mov
xchg
or
adc
cwtl
scas
and
cltd
sbb
mov
sub
in
pushf
pop
cmp
test
cli
das
sub
mov
scas
jg
lods
sub
shr
push
icebp
mov
ret
xchg
push
stc
mov
cmpsl
in
sbb
fyl2xp1
and
movsl
outsl
clc
test
mov
les
push
repnz
adc
xor
lcall
sub
xchg
sub
in
subb
jle
je
jne
inc
sar
jge
inc
ja
pushf
rcl
push
test
stos
outsl
sbb
push
loopne
mov
fimull
mov
pop
xor
fistps
adc
nop
dec
jo
sub
aam
and
movsb
lods
xor
mov
aas
push
xchg
push
sbb
dec
daa
lahf
sbb
sbb
or
sub
fdiv
ss
or
jo
jns
aad
lds
repnz
loope,pt
sub
sti
daa
in
pop
int
pop
fsubl
cwtl
push
adc
xor
mov
pop
cmpsl
fldl
cld
xchg
fbstp
ja
addr16
sti
inc
mov
adc
dec
mov
push
cmpsl
sahf
nop
test
xchg
dec
jmp
fsubr
sub
clc
fsubs
jmp
and
and
jbe
out
jp
shrb
rclb
or
push
xchg
mov
or
dec
fcompl
ds
mov
clc
aam
pop
pop
rol
aas
nop
and
and
and
push
fsubrl
sbb
leave
rcll
enter
or
inc
sub
out
dec
scas
into
loopne
sub
aad
jae
inc
and
inc
add
push
jge
add
pushf
push
clc
jp
xchg
inc
add
sti
enter
movsb
jnp
mov
or
and
lods
inc
idivl
sbb
mov
incb
out
and
pop
inc
mov
enter
mov
jns
sbb
mov
mov
aad
enter
out
repnz
cld
into
xchg
inc
push
mov
imul
rcrb
repnz
adc
and
notl
fucom
adc
loopne
stc
mov
jns
push
out
and
dec
sub
mov
mov
push
out
and
pop
dec
lock
mov
aaa
inc
mov
clc
scas
repnz
sbb
adc
mov
mov
dec
ficoml
adc
sarb
push
fsubrs
sbb
pop
adc
dec
pop
in
imul
imul
jge
add
or
sbb
sub
fdivrs
push
xchg
dec
jle
scas
and
pop
nop
inc
xor
cld
xchg
insb
mov
pop
and
stc
sbbl
jg
sub
jmp
cmp
ret
xchg
scas
and
push
lds
push
fistpll
stc
push
inc
testl
push
cmc
scas
mov
lcall
lock
ja
add
mov
pop
aad
call
jno
daa
in
sub
and
and
jg
push
or
pop
adc
out
push
mov
xchg
cs
jp
or
or
in
pusha
mov
insb
int
test
lcall
pop
xchg
js
in
das
adc
ud0
xor
jge
cmc
jp
es
adc
mov
rclb
aaa
jle
test
jno
or
xor
mov
fiadds
repnz
xor
jp,pn
mov
pop
push
setge
mov
icebp
pop
pop
or
adc
lock
faddl
loop
pop
movsl
jle
jg
loop
mov
fs
shl
cli
lret
xor
mov
call
push
mov
out
stc
sub
mov
shr
mov
stc
xor
add
fidivrs
sub
outsl
enter
jg
cs
cmp
clc
cli
mov
jle
adc
mov
je
and
test
mov
leave
mov
mov
js
enter
jle
adc
mov
loopne
and
cmc
js
lret
fnstsw
and
jns
pop
stos
enter
icebp
ljmp
mov
adc
push
adc
or
in
mov
movsb
mov
ficoms
fildll
ja
call
aas
jo
scas
aas
pop
cmc
sti
xchg
fdivr
repz
jo
mov
jbe
movsb
jge
sbbb
sub
stos
lock
cmp
es
clc
push
cmpsb
mov
mov
sbb
sbb
adc
popf
insl
pusha
push
int
jp
add
ret
test
movsl
mov
sbb
leave
dec
js
cmp
sub
notb
adc
mov
js
push
mov
jnp
shr
adc
mov
jmp
gs
push
pop
dec
mov
mov
push
rclb
int3
lock
leave
aaa
or
push
pop
add
cmc
sti
mov
cmc
mov
cmpsl
push
pop
cmpsl
mov
jmp
xchg
fdivr
jne
sar
inc
inc
dec
sub
xchg
ljmp
sahf
cwtl
hlt
mov
imulb
icebp
jbe
cmp
scas
enter
ss
mov
jmp
add
dec
push
dec
dec
inc
pop
push
pop
cmp
js
cmp
inc
and
rcr
pop
adc
lret
jo
dec
sub
push
int3
or
aam
idivb
aad
fmul
xchg
fcoms
pop
push
clc
sti
dec
sti
sub
imul
xchg
jp
xchg
clc
mov
and
popa
sbb
lock
dec
sub
loop
int
js
movl
ficoms
std
mov
mov
fsubr
pop
das
cmc
xchg
mov
add
mov
in
enter
mov
cmc
in
jb
jno
jb
nop
push
dec
imul
mov
push
pop
repnz
ficomps
lods
das
lods
loopne
or
sahf
or
test
and
les
mov
mov
ljmp
sub
mov
clc
adc
stc
sub
sub
stc
cs
mov
cmpsl
adc
mov
sub
jmp
jp
push
jo
adc
push
divb
aad
and
pusha
aam
test
xlat
lret
shll
movsl
lcall
pusha
daa
pop
inc
xor
mov
jl
cld
sbb
cld
jnp
les
dec
dec
sbb
dec
aas
mov
sbbb
inc
or
aas
sbb
sub
fimuls
ljmp
add
ds
mov
or
add
repnz
out
push
sti
enter
or
enter
adc
enter
adc
enter
sbb
enter
sbb
enter
ret
mov
mov
dec
std
out
push
mov
pop
and
inc
test
das
rorb
jb
les
add
lret
adc
pop
daa
add
int
pop
int3
js
dec
inc
fcoml
push
push
mov
inc
enter
out
stos
cld
push
xchg
mov
scas
cwtl
in
lock
adc
stos
sub
test
adc
cld
dec
sahf
mov
scas
pop
lret
push
sti
les
jmp
push
or
mov
jnp
test
sbb
mov
pop
xchg
ror
loop
lahf
fadds
cmpsb
hlt
lock
scas
cmc
mov
jb
fadds
repnz
cli
lds
push
cld
push
call
in
push
mov
call
pop
fbld
or
adc
push
push
xchg
sub
jne
clc
cld
pushf
sub
pop
fmulp
jo
sbb
sub
fcmovu
f2xm1
push
add
testb
adc
adc
fidivs
xor
sarb
ficoms
icebp
cwtl
outsb
ret
xor
jl
sub
cmp
cmc
push
loopne
dec
pop
out
jl
sub
jmp
adc
mov
in
mov
sub
std
cmp
call
call
push
cld
xchg
mov
in
mov
loop
pop
call
xor
repz
ja
cmp
idivl
mov
dec
adc
repz
sahf
loopne
xor
mov
loope
adc
mov
lret
dec
and
sub
or
scas
fcomps
ficomps
jg
pop
xor
xchg
or
inc
sub
push
loop
dec
mov
pop
mov
xchg
negl
daa
loop
popf
jo
adc
mov
out
adc
out
loop
cmc
pop
js
daa
cmp
aad
loopne
and
test
pop
fsubr
push
leave
lds
adcb
int
fildll
and
cmp
cmp
in
pop
or
jmp
dec
sbb
mov
mov
add
js
cld
lock
dec
sbb
xchg
mov
and
subb
clc
ja
in
mov
sub
fildll
lahf
clc
push
fstl
xlat
xchg
xor
cld
lock
and
adc
and
jge
cwtl
cli
pop
pop
push
leave
jnp
call
fstl
xor
xlat
mov
addr16
popf
xor
lock
dec
mov
mov
ror
add
mov
jne
push
jns
or
jnp
adc
add
mov
std
jbe
repnz
roll
std
icebp
push
scas
enter
push
nop
jl
jno
push
cmpsl
sarl
sub
xchg
push
shr
cmp
scas
cmp
hlt
jns
cmp
mov
mov
std
and
mov
notl
and
mov
mov
test
scas
dec
sarb
mov
std
sub
sub
shrl
push
imull
xor
sub
push
call
push
jmp
fsubs
xor
xor
push
outsl
js
xchg
iret
mov
test
mov
repnz
loope
adc
jmp
test
cwtl
sti
in
lret
movsl
test
push
sbb
nop
repnz
pop
nop
sub
sub
push
jno
sub
mov
cmp
cmp
mov
leave
std
sbb
adc
inc
push
scas
dec
mov
mov
in
scas
mov
jnp
xchg
mov
lret
sbb
and
rcr
bnd
pusha
jg
sarl
fucom
mov
mov
cli
push
mov
ret
aas
jp
mov
test
movsl
clc
aad
es
loope
sbb
or
int
pushf
mov
jmp
scas
cmp
cmp
test
ljmp
xor
adc
adc
lret
out
jp
jbe
faddl
mov
aam
fsubrs
clc
pop
mov
cmpsl
cmc
gs
pop
cwtl
fbld
mov
add
xchg
adc
loop
mov
loope
adc
mov
daa
aad
fdiv
ret
mov
std
fnsave
push
adc
jg
inc
lea
fsubp
mov
daa
iret
inc
out
push
aas
mov
ljmp
icebp
pop
xor
mov
lret
dec
outsl
jo
hlt
sarb
outsl
mov
pop
nop
rclb
push
std
seto
ljmp
pusha
cld
loope
cwtl
in
or
add
mov
fdivs
in
test
adc
inc
fdivrs
pusha
mov
call
sub
clc
sarb
adc
or
xor
div
add
mov
dec
or
cmp
std
inc
sbb
push
sub
pop
mov
call
mov
fs
aas
pop
ficoml
cs
push
stc
dec
or
add
in
push
sahf
mov
mov
jmp
mov
cmp
mov
pop
ja
xor
clc
fildll
test
pusha
adc
shl
push
jg
fstpl
sub
clc
sub
jbe
pusha
aam
insl
or
je
repnz
jbe
push
bound
lock
add
loop
stc
lock
and
cmc
test
jp
mov
jns
sub
std
sub
dec
adc
stos
das
call
jle
push
nop
mov
testb
inc
mov
hlt
sahf
inc
test
jmp
repz
std
sub
mov
xchg
jp
or
clc
add
mov
rorb
int3
dec
scas
enter
cmp
stos
push
in
test
cli
mov
mov
daa
pop
mov
push
jo
push
mov
decl
adc
push
or
mov
mov
or
jo
fwait
sbb
sbb
mov
pop
or
adc
and
and
inc
add
xor
mov
fdivr
dec
movsl
dec
jbe
push
mov
cmpsb
sbb
inc
inc
mov
jmp
int
cli
push
xor
testb
call
or
jp
and
xchg
imul
inc
push
jle
insb
adc
jbe
inc
inc
jge
subb
loop
push
adc
sub
mov
les
loopne
loope
mov
push
fisubs
pop
pop
adc
test
mov
and
pop
stc
js
out
and
fcomp
mov
adcl
es
dec
cmpsb
out
mov
mov
adc
adc
imul
dec
add
cli
cltd
imul
and
and
inc
sahf
mov
push
cmpb
and
nop
push
out
push
mov
push
stc
or
je
mov
jp
sarb
paddw
pusha
mov
movsl
push
dec
movsb
fsts
add
test
cmp
and
add
cmc
pop
nop
pop
and
push
inc
pop
std
or
enter
adc
inc
out
adc
mov
mov
push
cmp
mov
lahf
inc
test
lea
mov
push
mov
add
les
rorl
js
mov
push
cmc
bnd
or
stc
add
adc
adc
dec
and
sub
mov
push
clc
or
jl
lret
ds
adc
jle
push
adc
clc
sub
mov
les
les
call
js
ret
adc
fsubl
inc
adc
push
dec
sub
repnz
sbb
bound
notl
xor
icebp
shrb
pusha
repnz
sub
fiadds
mov
jle
push
and
shl
mov
loopne
adc
nop
nop
mov
sub
mov
sub
sub
es
and
popf
jbe
fbld
nop
push
and
clc
pop
inc
out
dec
lret
mov
leave
pop
xchg
mov
fcomp
xchg
daa
sub
cmc
lcall
dec
sub
cmc
lcall
shl
mov
in
das
enter
icebp
ds
pop
mov
ret
test
xor
adc
cmpsb
cwtl
scas
lret
mov
cmp
fisubl
lock
pop
push
icebp
call
out
dec
call
xlat
lds
jbe
jl
jnp
push
adc
or
mov
call
jg
lock
clc
mov
sub
push
call
and
dec
aas
mov
xor
lret
pop
push
nop
mov
add
mov
scas
pusha
in
repz
push
push
xchg
mov
ljmp
es
aad
fwait
mov
clc
fs
sub
mov
jg
clc
pop
xchg
mov
mov
and
dec
sub
cmp
nop
mov
nop
mov
test
adc
lcall
hlt
jmp
inc
and
adc
mov
add
adc
flds
bound
push
insl
mov
add
call
adc
out
mov
stc
jle
push
enter
pop
push
adc
push
cmpb
loop
repnz
aaa
jmp
fcomps
in
nop
mov
nop
jle
mov
popf
and
ja
dec
jo
adc
dec
stos
cmp
in
lahf
mov
das
fidivl
or
and
cld
sbb
mov
pushf
jge
es
adc
enter
enter
push
movsl
jmp
enter
adc
inc
out
cmp
or
cmp
lock
xor
mov
lods
inc
mov
or
jnp
hlt
fistps
hlt
pop
adc
dec
scas
enter
sub
repnz
clc
pop
cld
mov
scas
shlb
push
loopne
popa
test
add
xor
pop
xchg
aam
ja
mov
nop
nop
test
mov
fnstcw
or
xlat
adc
out
dec
stos
imul
and
nop
push
cmc
shll
mov
push
cwtl
imul
nop
jne
pop
aad
sarl
cmpb
jp
dec
xchg
xor
daa
jne
cmp
insl
loopne
movsl
jl
pop
das
fcomps
in
in
mov
imull
fsub
add
sub
jo
stc
es
dec
xchg
adc
lret
mov
jl
movl
inc
aaa
or
bound
fs
mov
push
je
xor
nop
mov
fsubrl
pop
dec
mov
xchg
push
and
leave
icebp
inc
imulb
mov
xchg
pusha
scas
es
mov
cwtl
adc
inc
daa
outsl
fcom
mov
inc
or
mov
xchg
pop
mov
mov
fdivrs
push
mov
jne
sub
xchg
xchg
enter
pop
loope
add
cmp
aas
call
sti
outsb
call
popf
std
mov
jo
push
xchg
and
adc
scas
and
pop
in
repnz
in
xchg
inc
add
sti
enter
decb
mov
mov
push
lods
lret
cmp
or
adc
inc
lods
cld
daa
mov
enter
in
cmp
add
clc
faddl
out
adc
mov
xor
sub
mov
aam
stc
sub
jmp
ficomps
sub
loopne
or
or
sub
repnz
js
push
test
cld
mov
cld
and
jg
push
push
pop
aas
cmp
fxch
jo
push
mov
call
ja
add
cmpsl
and
pop
call
sub
cmp
fcom
cmp
adc
mov
mov
nop
xchg
aam
fisttpll
test
adc
adc
inc
fsubrs
fsubrs
ficoms
fdivrs
sub
inc
nop
out
enter
sbb
cld
cwtl
fists
push
stc
mov
xlat
adc
test
mov
cs
repnz
jle
mov
and
in
outsb
cld
mov
push
and
xchg
fsubrs
loop
push
inc
sub
dec
pop
js
sbb
jne
mov
adc
mov
mov
out
jo
les
mov
les
ds
enter
sub
js
testb
lea
bsf
lea
push
hlt
in
push
lock
lea
inc
fsub
cs
scas
pushf
shl
scas
cmp
mov
adc
jp
pusha
scas
leave
push
addr16
mov
inc
cmpsl
fdivr
xchg
inc
push
pop
in
pusha
mov
in
repnz
dec
adcb
sub
cmp
nop
push
dec
mov
jb
sti
mov
jmp
or
pop
in
mov
out
push
and
mov
xlat
xchg
lock
xlat
add
and
adc
mov
jl
pop
js
mov
pusha
jle
pusha
push
pop
jo
fnstcw
cld
mov
jo
jmp
loop
push
call
test
jge
mov
xlat
adc
dec
mov
fildl
push
mov
stc
inc
cli
mov
iret
and
push
push
cmc
stos
aas
inc
pop
mov
jecxz
stc
jg
push
cs
std
jp
push
sti
dec
lock
leave
jne
pusha
enter
xchg
sub
jle
adc
testl
js
shl
jns
jbe
mov
leave
insl
loopne
jbe
jg
aam
sub
in
sub
mov
xchg
mov
push
js
dec
and
pop
mov
dec
icebp
daa
sbb
dec
ds
es
aaa
pusha
mov
sub
cltd
inc
jns
add
pop
jnp
and
inc
adc
xlat
push
mov
jmp
mov
pop
inc
push
je
cwtl
push
fcompl
into
jge
fs
mov
dec
jno
or
lret
sub
cld
cmp
and
xchg
dec
pusha
inc
ljmp
imulb
ret
push
dec
mov
lret
add
cld
js
jle
je
and
and
jg
enter
rclb
adc
push
or
daa
sahf
xor
adc
inc
dec
scas
and
xchg
testb
outsl
or
dec
ret
mov
hlt
mov
lcall
jl
shl
pusha
mov
test
pop
roll
ja
push
or
jecxz
jle
jo
and
jns
or
repnz
adc
mov
jle
repz
repnz
adc
icebp
add
clc
rolb
jno
or
repnz
adc
mov
repnz
repnz
and
mov
xor
repnz
adc
enter
nop
push
scas
enter
mov
notl
pop
pop
nop
push
scas
enter
push
aas
out
and
aam
sub
arpl
or
push
shlb
inc
lods
aas
inc
fsubr
pop
sub
push
aad
mov
repnz
test
cmc
xchg
push
in
sub
mov
cld
decb
jl
sbb
and
pop
nop
xor
dec
cmp
sub
pop
nop
loop
pop
aas
jo
pop
test
pop
pop
adc
enter
jl
aad
adc
push
test
std
pop
inc
sarb
out
and
pop
nop
enter
push
loop
pop
xor
mov
cld
mov
mov
cmpsl
sti
enter
in
sub
stc
adc
and
fisubs
add
pop
adc
aas
mov
pause
scas
repnz
push
nop
mov
sub
shrl
lock
xor
mov
mov
hlt
clc
dec
loope
jg
mov
jne
sarb
inc
xor
es
sbb
sar
das
mov
dec
cmp
mov
mov
nop
nop
scas
xchg
nop
adc
pop
out
pop
outsl
pusha
pop
push
sbb
test
push
movsl
dec
jbe
cs
push
pushf
jo
in
imul
ja
dec
adc
pop
and
inc
pusha
mov
inc
sbb
dec
sbb
clc
pop
dec
sbb
dec
scas
xlat
mov
sbb
mov
shr
sahf
fdivs
inc
mov
fcoms
dec
in
aas
mov
call
enter
ja
cwtl
jl
fistps
aam
hlt
dec
push
lret
ret
jle
push
jmp
aas
fwait
or
out
test
push
fildl
sub
out
jp
and
mov
inc
xchg
in
clc
std
sub
scas
sub
daa
adc
aaa
cwtl
imul
jmp
cmp
pushf
mov
pusha
push
push
call
jl
pop
test
mov
adc
sti
test
pop
sahf
sbb
lcall
cwtl
push
inc
push
pop
jno
pop
fs
aas
out
and
aad
negl
je
test
sub
adc
shr
iret
jo
add
add
mov
push
les
repnz
xor
test
call
insb
hlt
stc
sub
daa
sub
repnz
fildll
or
and
nop
inc
scas
enter
cmp
jns
cld
mov
mov
icebp
inc
bsf
push
test
xchg
inc
rol
enter
test
es
movsl
xchg
cwtl
shlb
loopne
pop
in
or
cmp
test
mov
imul
and
adc
dec
scas
enter
mov
push
xchg
pop
dec
in
aas
inc
fsubs
inc
loopne
push
mov
xlat
mov
cmpsl
xlat
in
xor
icebp
loopne
xchg
jnp
and
inc
add
mov
aas
mov
insl
lock
cmpb
shl
lahf
rcr
jg
adc
push
and
xchg
testb
nop
and
ds
loope
mov
mov
sbb
clc
push
movsl
std
mov
in
mov
negb
and
clc
pop
xchg
daa
outsl
rcl
jecxz
in
cmp
movsb
inc
nop
in
subb
cwtl
stos
push
enter
mov
fdivr
cs
sbb
int
pop
imul
cmp
sahf
loopne
mov
movsb
mov
sub
push
scas
mov
xchg
xchg
mov
insl
inc
dec
sub
sbb
pop
loopne
xchg
daa
lret
das
in
mov
lret
dec
cmp
cmpsl
clc
cmc
das
fistps
mov
mov
jp
push
jbe
lret
and
adc
lods
cmp
enter
lods
push
scas
and
notl
xor
lods
ja
adc
nop
lcall
push
stos
jo
ret
sbb
lea
push
out
and
pop
in
push
roll
notl
out
mov
sbb
pop
inc
into
out
enter
xchg
adc
nop
mov
stc
cmc
push
stos
cmp
and
xchg
jo
and
fucom
sbb
cld
mov
ljmp
jmp
jmp
mov
jl
cmc
mov
push
fiadds
out
enter
movsb
or
sbb
stos
mov
in
imul
pop
jnp
sbb
icebp
sbb
scas
and
testl
pop
sbb
loop
adc
push
pop
test
lods
scas
enter
adc
cld
sbb
mov
sbb
inc
cmp
jle
xor
cmp
repnz
ja
cmp
incb
mov
sbb
repnz
xor
sbb
repnz
sbb
and
in
imul
popa
push
out
and
push
jns
sbb
mov
pop
inc
sbb
and
push
cmpsl
and
shll
jmp
sbb
cld
rorb
cmp
mov
sbb
and
jb
and
in
sub
and
aam
mov
dec
mov
mov
lret
js
hlt
mov
jne
jo
cmp
mov
and
cmc
and
xchg
jo
ljmp
mov
testb
insb
aad
sbb
enter
jne
test
mov
rclb
adc
imull
repnz
jl
push
jmp
push
in
leave
pushf
jge
mov
or
cmc
aad
test
mulb
push
scas
jge
dec
leave
push
push
clc
movsl
mov
inc
movsb
mov
pushl
mov
pop
inc
daa
std
pop
push
sub
test
sbb
mov
xchg
in
xchg
jne
mov
xchg
mov
movsl
dec
inc
adc
mov
fdivs
or
fsubs
sbb
mov
sbb
push
les
sbb
mov
xlat
out
clc
pop
popf
push
mov
push
or
sbb
leave
xlat
pop
test
les
out
stc
jp
sub
lods
enter
in
cmpb
shl
jl
nop
je
pusha
mov
sbb
and
fimull
or
mov
notb
mov
test
mov
jno
xor
cmp
xor
clc
add
psrld
mov
adc
mov
repz
lea
dec
mov
push
js
das
popa
sbb
lahf
add
cmp
mov
lock
aaa
inc
lret
adc
das
loopne
push
mov
inc
jno
xor
popf
jge
shlb
inc
or
nop
pop
cmpsl
jg
mov
sub
xchg
sub
dec
repnz
or
add
sub
in
fsubrs
add
imul
pop
std
or
enter
mov
adc
sahf
adc
sub
sbb
mov
stos
pop
nop
mov
push
cmpsl
clc
ljmp
add
int
icebp
cwtl
les
clc
sbb
xlat
pop
mov
out
nop
adc
xchg
adc
mov
lock
stc
aas
repnz
xchg
sbb
js
lods
inc
les
test
sbb
or
jecxz
mov
and
notl
sbb
das
fcoms
fstl
dec
adc
adc
inc
mov
es
loop
mov
and
pop
lahf
xchg
lock
in
mov
repnz
push
ds
lock
adc
jns
dec
fdivr
and
pusha
aam
and
and
rcl
or
shl
adc
std
imul
out
std
and
mov
cmp
cld
daa
mov
jle
daa
shrb
repnz
adc
js
and
push
test
cli
shll
jns
push
hlt
out
test
scas
in
jle
std
cmp
push
icebp
xor
insl
loopne
and
add
xchg
fstpl
inc
or
inc
sbb
mov
dec
and
jae
pop
popl
push
or
pop
jnp
es
test
or
shr
cmp
call
mov
in
js
rorb
push
repz
pop
sub
push
pop
push
and
cwtl
push
jb
fdivr
adc
dec
pusha
mov
dec
decl
addr16
cli
jge
cwtl
ffree
sub
xchg
mov
enter
insb
adc
fsubs
je
ficoml
scas
test
scas
sub
imul
xchg
lock
lahf
fdivrl
dec
mov
jbe
cwtl
jg
mov
jp
enter
mov
cmpb
mov
dec
shl
jo
lods
shrb
std
lret
stc
inc
incb
hlt
jmp
test
stc
loop,pn
scas
dec
mov
mov
in
enter
inc
add
push
dec
hlt
scas
sahf
subb
idivb
js
pop
cmc
pop
dec
in
out
das
mov
loop
mov
sub
dec
mov
fstpt
in
fwait
dec
lret
mov
add
dec
fdivr
push
movsl
in
sub
jge
nop
push
leave
pop
inc
push
iret
andb
mov
fmuls
enter
test
jae
jns
bsr
rcl
mov
stc
sub
adcb
clc
push
movsl
xlat
out
mov
and
es
hlt
or
loopne
sub
and
xor
jno
scas
sarb
jo
imul
insl
ret
test
and
cmp
das
cmpsb
inc
std
cmp
test
bound
jmp
stos
dec
dec
cmp
loop
xor
sub
mov
dec
clc
movsl
fildll
jmp
cmp
jmp
mov
fbld
mov
lock
adc
jae
pop
out
test
leave
aas
dec
rcrl
mov
pop
inc
mull
pop
aam
cmp
and
fucomip
dec
js
es
jge
cmp
xchg
cmpsl
enter
lock
adc
xor
in
push
scas
push
dec
rolb
aas
inc
dec
loope
popa
or
mov
nop
scas
mov
adc
xor
jg
push
test
das
fcom
mov
and
sub
or
aad
push
sub
sbb
out
mov
xor
pop
in
inc
std
arpl
std
push
fadds
pop
xchg
hlt
stos
xor
push
sbb
cmp
or
and
nop
in
inc
daa
mov
pop
xor
lock
or
int
cld
push
add
aaa
pusha
mov
or
enter
and
mov
stc
adc
aas
nop
mov
cwtl
out
enter
xor
loope
lds
jmp
mov
or
mov
fiaddl
jne
nop
fisttps
cmc
daa
pop
addr16
icebp
pop
bound
adc
or
adc
imul
arpl
or
push
ret
adc
pop
adc
cmp
shrb
je
sub
xchg
cmp
mov
stos
or
jno
push
das
decl
pop
lods
and
inc
jo
int3
test
shrb
aam
enter
js
repnz
scas
mov
test
test
scas
xchg
out
push
nop
dec
lods
add
sub
xor
fsubl
out
mov
mov
ret
xchg
fcoms
orl
sbb
xor
pop
inc
nop
jbe
insb
in
or
mov
sar
das
imul
mov
or
sub
test
subl
hlt
xorb
cmc
test
mov
mov
push
les
testl
sar
outsb
jmp
fcoms
fists
adc
stos
icebp
push
loopne
mov
aad
inc
in
out
push
les
push
inc
jecxz
add
mov
jmp
adc
pop
call
in
jp
cmc
scas
push
dec
das
add
insb
and
dec
scas
or
cmpsl
or
and
xchg
dec
push
pop
sbb
js
or
lret
dec
les
sbb
mov
loop
loopne
or
sub
mov
fcoms
in
mov
js
loop
les
or
and
in
das
scas
and
xchg
scas
adc
loop
jno
js
pop
test
jnp
cwtl
mov
test
or
sbb
cwtl
scas
les
in
mov
adc
mov
xor
adc
mov
jp
lret
imul
jae
and
pop
and
icebp
inc
jne
sub
mov
pause
xlat
mov
jbe
jmp
sbb
adc
or
bound
sbb
push
stc
or
leave
roll
shr
cmp
inc
mov
push
enter
pop
test
mov
rcll
aad
lahf
and
cmp
pop
pusha
adc
adc
push
lock
lock
add
cltd
inc
pop
lods
xchg
rorb
inc
sbbb
lods
jo
sbb
in
jge
lods
hlt
or
fadd
fcoml
daa
push
adc
iret
lock
outsb
fidivl
movsb
mov
push
adc
stos
les
and
loopne
and
test
sbb
jg
dec
les
and
xchg
xchg
lahf
fdivrs
push
mov
adc
and
or
and
pop
sub
inc
cmpsl
mov
pop
mov
pusha
mov
xchg
lds
icebp
nop
sub
inc
mov
jmp
mov
mov
iret
sbb
dec
fstps
fcoms
int3
pop
pop
in
sub
inc
shr
js
daa
add
fcmovnb
pop
and
pop
or
mov
fimuls
mov
mov
push
gs
notl
sbb
lret
addr16
and
testl
xor
repnz
inc
pop
or
push
hlt
js
xchg
rcll
cs
test
test
sub
push
dec
push
and
jno
sbb
les
imul
mov
push
jbe
aad
cld
enter
jns
push
or
in
loopne
mov
nop
mov
popl
stos
lcall
jmp
das
pop
adc
jge
lock
or
adc
fisubrs
js
pop
push
mov
jbe
stos
dec
lods
dec
jo
test
push
pop
cwtl
jg
pop
cmp
sarb
push
push
lahf
fdivr
cmp
pop
test
xor
call
dec
mov
dec
mov
mov
add
lahf
pusha
ret
int
jb
lds
loop
push
adc
and
stc
sub
adc
dec
mov
movsl
faddl
push
jmp
nop
jne
es
in
add
pop
xlat
add
ret
push
rcrl
mov
xor
fstl
jmp
psrlq
les
adc
inc
hlt
scas
test
scas
test
push
jle
es
ja
mov
cmpsl
fsubl
xchg
inc
loopne
xchg
xor
nop
mov
inc
clc
fiadds
mov
popl
mov
lret
seto
or
xchg
cwtl
mov
pop
adc
lods
icebp
pop
push
mov
daa
cld
push
xor
repnz
sub
enter
sti
pop
loopne
ret
jge
enter
xor
sub
mov
pop
sbb
sbb
or
adc
jmp
enter
pop
ljmp
mov
mov
stos
lret
push
out
pusha
pop
mov
lahf
jne
loopne
cmp
rorb
dec
stos
cmp
xlat
nop
in
mov
std
pop
clc
mov
jmp
sbb
pop
cs
xchg
mov
std
sub
inc
cld
and
lods
and
mov
xchg
mov
xchg
or
and
call
jecxz
scas
pop
cli
das
and
dec
incb
mov
ja
push
das
pop
xchg
jbe
pop
das
jle
jns
ret
test
sbb
hlt
jecxz
sti
xchg
clc
call
pop
inc
or
jecxz
out
dec
mov
daa
ret
pop
mov
xchg
sub
jae
mov
pop
or
daa
dec
push
enter
mov
aaa
jmp
ret
ja
test
jle
fbld
out
push
clc
mov
pop
adc
xor
test
jbe
dec
cmp
mov
push
pop
pop
les
mov
mov
sub
adc
xchg
nop
stos
and
pop
in
aas
hlt
clc
mov
pop
fwait
sar
xchg
and
push
mov
icebp
lock
and
fnstsw
push
and
rclb
mov
cld
dec
xchg
and
or
popf
pusha
repnz
push
jmp
lahf
lcall
imul
sub
pop
scas
mov
fildll
push
pxor
pusha
icebp
fcomps
std
das
call
sub
dec
and
sbb
inc
or
rolb
xchg
mov
sbb
mov
lret
inc
mov
inc
cld
test
insl
cmpsl
push
sub
test
adc
test
xchg
jne
push
sub
mov
clc
mov
adc
call
iret
mov
sti
enter
mov
in
je
add
jo
inc
loop
jne
clc
cld
sub
mov
pop
das
nop
mov
mov
scas
loop
xchg
dec
notb
pop
mov
pop
push
push
mov
ja
jle
push
jecxz
cmpsb
test
mov
pop
xchg
nop
repnz
xor
mov
push
pop
sbb
std
cmpsl
pop
sbb
shlb
dec
fildll
test
pop
adc
mov
cmp
clc
xchg
mov
or
daa
sub
xchg
inc
in
outsl
sar
ficoms
mov
clc
cmp
lock
mov
aaa
std
js
or
sti
add
je
pop
adc
mov
movsl
std
pop
mov
shrb
shrb
push
and
add
cld
push
mov
cmp
mov
repnz
enter
xchg
push
jg
nop
jg
cwtl
sti
xor
repz
rclb
js
push
sub
adc
mov
jp
or
add
inc
xor
inc
nop
mov
addr16
pop
lret
or
pop
mov
xlat
stos
push
repz
mov
xchg
inc
test
mov
lock
mov
push
push
popf
cld
mov
sub
fldenv
mov
sub
add
pop
or
and
push
cmp
xchg
outsb
mov
mov
nop
jle
pop
sub
xchg
mov
xchg
enter
scas
and
stc
outsl
push
jmp
mov
jns
jmp
cmp
push
int
push
loop
and
push
frstor
xor
js
hlt
repnz
scas
adc
ds
rcll
jno
jg
test
sarl
pop
sar
push
cmp
int3
dec
dec
push
nop
shlb
adc
clc
hlt
mov
xchg
shll
pop
adc
lods
lcall
nop
mov
nop
movsb
std
jp
add
hlt
cltd
rcrb
aam
push
loop
ds
shlb
or
scas
push
in
mov
cld
mov
aad
push
icebp
hlt
bswap
push
dec
push
xchg
mov
pop
mov
mov
lahf
cld
cwtl
jg
jae
jns
push
hlt
mov
cld
pusha
dec
mov
mov
loopne
in
aas
sub
imul
sub
nop
in
not
mov
cmp
dec
in
mov
lods
xchg
xchg
pop
hlt
mov
rcl
mov
dec
push
je
mov
add
and
enter
sti
enter
call
pop
sbb
or
mov
add
push
sbb
enter
and
push
in
fwait
xor
adc
lock
inc
xor
add
mov
add
add
add
pop
sub
sub
jmp
inc
dec
dec
inc
dec
inc
add
fildl
pop
add
add
add
mov
mov
xor
pop
int3
push
fldl
add
add
sub
fistl
mov
fisubs
mov
mov
shll
add
add
imul
out
cmp
add
add
mov
mov
xor
inc
dec
jne
jmp
dec
fwait
es
dec
pop
pop
aaa
pop
xchg
jae
fisubrs
fisubrs
insb
lahf
push
lret
outsl
pop
paddq
pop
pop
ficomps
pop
xchg
out
pop
pop
pop
in
pop
pop
pop
test
pop
xchg
aam
push
pop
pop
pop
pop
lcall
aaa
in
call
jnp
pop
pop
pop
pop
mov
pop
pop
pop
mov
pop
pop
pop
or
xor
aam
push
pop
pop
pop
aam
push
pop
pop
pop
aam
dec
pop
pop
pop
sahf
mov
outsb
pop
fcompl
stos
mov
push
pop
aam
jnp
pop
pop
pop
aaa
dec
push
call
jnp
mov
pop
pop
pop
mov
pop
pop
pop
or
add
push
mov
pop
pop
pop
aam
push
pop
pop
pop
fisubrs
fisubrs
insb
xchg
insb
fdivl
adc
pop
push
xlat
pop
pop
pop
pop
cmp
inc
data16
pop
pop
fbld
pop
pop
cmp
movsb
mov
pop
pop
pop
push
mov
mov
pop
fcompl
mov
mov
pop
fcompl
fdivl
mov
pop
or
mov
or
aam
push
aam
push
mov
ficomps
xlat
pop
ficomps
in
pop
pop
pop
pop
lea
pop
pop
pop
pop
aad
sbb
push
faddl
lea
pop
pop
pop
pop
aad
sbb
push
fdivl
lahf
pop
lea
pop
pop
pop
pop
aad
sbb
push
fdivl
pop
pop
pop
lea
pop
pop
pop
pop
aad
sbb
dec
lahf
pop
lea
pop
pop
pop
pop
aad
sbb
dec
lahf
pop
lea
pop
pop
pop
pop
aad
sbb
dec
lahf
pop
lea
pop
pop
pop
pop
aad
sbb
dec
lahf
push
fistpl
pop
pop
aam
je
aad
xlat
pop
sbb
pop
pop
pop
pop
mov
mov
pop
pop
pop
pop
lea
pop
pop
pop
pop
aad
sbb
dec
lahf
pop
lea
pop
pop
pop
pop
aad
sbb
push
fldl
pushf
in
pop
pop
pop
push
fisubrl
pop
pop
out
pop
pop
pop
pop
lea
pop
pop
pop
pop
aad
sbb
dec
xchg
pop
lea
pop
pop
pop
pop
aad
sbb
push
fldl
aam
je
lods
sti
add
pop
sahf
mov
aam
out
pop
pop
pop
pop
lea
pop
pop
pop
pop
aad
sbb
dec
xchg
pop
lea
pop
pop
pop
pop
aad
sbb
push
fldl
cmpsl
pop
and
fiadds
fisubs
fiadds
fisubs
fimuls
fisubs
fimuls
or
test
scas
lods
sti
add
aad
sbb
mov
push
fildl
pop
pop
fimuls
aam
or
test
scas
lods
sti
add
pop
pop
pop
pop
mov
mov
and
cwtl
add
aam
add
mov
pop
pop
pop
cmp
mov
pop
pop
lcall
out
pop
pop
pop
in
cmp
push
fisubrl
pop
pop
pop
pop
dec
xchg
or
sbb
rol
dec
dec
dec
mov
rol
dec
dec
dec
mov
adc
dec
dec
sbb
js
adc
mov
popf
lret
dec
dec
dec
inc
iret
push
dec
dec
dec
sbb
dec
xor
cmp
out
adc
lret
dec
dec
dec
add
and
dec
dec
and
addr16
sbb
jnp
int3
mov
xor
jmp
dec
dec
dec
mov
adc
dec
or
mov
xor
mov
add
lret
dec
dec
dec
inc
iret
or
popf
lret
dec
dec
dec
lret
dec
dec
dec
lret
dec
dec
dec
inc
iret
fwait
mov
mov
rorb
enter
mov
dec
dec
dec
inc
into
inc
dec
dec
dec
sub
mov
dec
dec
dec
mov
add
enter
xorl
dec
lods
je
push
repz
mov
mov
dec
dec
icebp
out
fwait
add
or
inc
into
mov
dec
dec
dec
dec
outsb
cmp
jne
cwtl
fisubrl
shll
out
in
gs
ljmp
out
mov
sbb
push
out
push
out
out
jmp
out
mov
sbb
push
out
cltd
ljmp
out
cltd
out
jmp
out
cltd
mul
jmp
out
imul
mulb
in
gs
out
jmp
out
out
movzbl
out
out
pxor
out
in
addr16
in
out
mov
sbb
out
outsl
mov
loop
out
mulps
sbb
mov
out
bsf
sbb
mov
sbb
out
out
mov
mov
insl
mov
sahf
out
out
and
cli
out
out
insl
cmpsb
out
in
jbe
cmpsb
out
in
insl
cs
out
out
insl
mov
into
out
out
and
add
mov
mov
mov
xchg
nop
adcl
enter
in
mov
mov
mov
xchg
mov
lea
mov
xchg
add
mov
leave
xchg
xchg
xchg
enter
orl
mov
jmp
mov
mov
fadd
xchg
xchg
xchg
xchg
mov
orl
mov
in
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
add
xchg
mov
mov
mov
mov
mov
mov
test
mov
add
mov
mov
mov
sub
cmpsl
mov
mov
xchg
adcl
stos
xchg
orl
mov
ret
xchg
out
add
add
push
add
jbe
add
xchg
test
xor
xor
andl
mov
push
inc
psubusb
stos
mov
sbb
add
or
into
sar
inc
push
fnstsw
fldcw
andnps
inc
pop
leave
cmpsl
mov
in
jns
sarb
jecxz
inc
leave
mov
ret
dec
call
dec
mov
in
sub
div
cmp
cmp
mov
cld
icebp
jne
inc
lods
xchg
in
xchg
loope
scas
push
ja
stc
fwait
movsl
into
lods
xor
je
mull
add
push
std
lcall
dec
es
mov
aad
dec
pusha
fmull
cmp
push
cmp
aas
xor
xor
shrb
sub
lds
test
and
lods
mov
xchg
fistpl
inc
dec
cmc
and
fimull
xor
xchg
rolb
lret
popa
in
dec
sbb
push
cltd
mov
sbb
mov
js
mov
lds
xor
dec
xchg
mov
sub
int
cmp
int3
xor
sub
inc
pop
and
int3
scas
loop
pop
and
mov
add
sahf
shlb
jne
mov
xor
stos
enter
and
in
add
call
mov
adc
add
repnz
lret
iret
rclb
push
popa
mov
in
and
cs
add
xchg
jp
loopne
fcoms
mov
dec
sub
mov
das
add
inc
push
movntq
aaa
push
in
aas
inc
cmp
adc
xor
pop
jo
push
test
xchg
mov
dec
std
inc
sarb
clc
subl
adc
or
adc
adcl
push
lock
xchg
xchg
push
mov
faddl
es
dec
mov
push
lods
sub
mov
addr16
xorl
mov
sahf
cs
mov
mov
pop
lret
out
pop
out
aam
jb
sbb
xchg
pop
in
push
shll
lea
inc
in
movsl
dec
ljmp
adc
cli
push
add
out
and
leave
sbb
ud1
add
and
cmp
add
xchg
lods
into
notb
mov
cli
aas
cmp
xor
or
popf
mulb
pop
or
xor
addr16
adcb
ss
mov
inc
sti
mov
pop
stos
jl
sbbl
int
mov
or
jg
mov
push
sbb
jns
std
jbe
mov
icebp
xchg
aas
sub
scas
add
cmp
mov
dec
lods
adc
sbb
into
hlt
leave
add
push
cmp
and
adc
test
mov
jecxz
clc
xor
movsl
enter
idivl
imul
adc
outsl
mov
imul
cltd
call
xlat
test
repnz
mov
adc
sahf
std
outsl
or
pop
cmpsb
daa
sbb
adc
xor
mov
sub
stos
imul
ja
decl
into
stos
add
pop
jo
test
data16
mov
rcrl
insl
sub
add
jne
mov
inc
ficompl
leave
push
jle
push
push
xor
rclb
dec
dec
mov
addb
push
repz
test
mov
out
ss
inc
cmp
int
mov
mov
inc
pop
ficomps
push
fisubs
or
mov
push
mov
loop
lcall
xor
cmp
mov
add
mov
fdiv
leave
jae
or
mov
clc
js
sbbb
lret
mov
fcoms
insl
sahf
daa
jecxz
mov
xchg
mov
mov
fwait
stos
leave
xchg
mov
sti
xchg
ret
mov
loopne
add
inc
aas
ror
mov
lcall
cmpsl
cmpsl
xchg
push
xchg
or
shll
fwait
popf
or
std
mov
add
sbb
es
push
xchg
jae
int3
imul
mov
arpl
aas
les
call
lea
xchg
inc
cmp
nop
je
xchg
loop
es
push
pop
daa
pushf
lds
xorb
push
outsl
jg
stos
jle
jmp
ds
cmpsb
fimuls
mov
inc
xchg
inc
push
dec
mov
ret
test
aaa
pop
mov
cmp
mov
jp
xchg
xlat
shlb
cmp
xorl
or
sub
dec
aam
in
shrb
inc
inc
mov
xchg
pop
das
jb
icebp
xchg
push
jo
out
mov
cmpb
and
xchg
mov
push
jo
mov
pop
movsb
cmp
test
cmp
loop
aad
ljmp
dec
xchg
fnsave
fcmovnu
xchg
push
push
out
lds
repnz
stos
add
pop
mov
test
add
out
xor
lods
and
mov
jle
cmp
sbb
xchg
xchg
jnp
pushw
nop
pop
and
dec
clc
std
stos
mov
sub
mov
mov
cwtl
fcmove
push
and
jo
out
or
pop
and
sbb
inc
xchg
test
jle
push
cmc
adc
je
dec
pop
out
sti
jae
cwtl
out
jp
imul
mov
mov
push
fcom
lock
and
add
inc
pop
xchg
out
mov
jmp
xchg
lock
cmp
push
pop
mov
dec
sub
inc
ljmp
mov
cmpsb
loope
ficompl
lods
jnp
lea
les
and
out
fldt
lock
sti
ret
jp
push
repnz
push
addl
cld
stos
mov
cmc
stc
notb
test
lods
and
xchg
in
arpl
xor
idivb
int3
js
jmp
xor
add
dec
daa
popf
lock
aad
cmpsb
and
cmp
call
inc
aas
adc
pop
cwtl
jl
repz
push
insb
push
lahf
pushf
movsl
daa
fisttps
lock
xor
xchg
jns
cmp
cld
test
sarb
jmp
fldcw
lret
jns
pop
xor
fisttpll
ljmp
icebp
mov
adc
rcll
outsl
nop
mov
jno
push
out
fwait
add
gs
mov
dec
jns
and
fildl
clc
and
push
fnstsw
mulb
imul
xchg
shll
insl
scas
pop
xchg
lcall
iret
testl
sub
xchg
adc
shlb
inc
xor
in
je
xor
fisttpll
push
dec
popf
ja
idivl
sahf
cmpb
bound
pop
sub
sti
insb
jnp
xchg
inc
out
push
pop
hlt
push
cmp
sub
cmp
call
sub
adc
or
fimull
sti
adc
jle
fcmovb
loop
pop
sbb
dec
mov
test
cmp
ljmp
jbe
andb
jb
and
inc
std
xor
aam
adc
fidivl
pushf
push
mov
std
mov
in
out
push
pop
sahf
pop
cwtl
mov
lahf
stos
jmp
push
mov
sti
cmc
lods
pop
jno
mov
cmp
iret
cmp
dec
roll
push
out
orb
jecxz
pop
mov
and
fwait
stos
jecxz
add
jle
dec
movb
inc
popa
fnstenv
pop
lahf
in
xor
shll
outsb
inc
sbb
mov
cmp
les
shlb
pop
mov
pusha
push
cs
or
mov
sbb
mov
pop
pop
nopl
stos
fsubl
gs
mov
repz
cltd
test
mov
das
lea
testl
mov
in
cmp
in
sub
mov
cmpsb
dec
adc
cmp
repnz
push
pop
mov
dec
outsb
adc
push
pop
sbb
mov
test
roll
push
sbb
mov
jle
roll
out
lock
dec
in
loopne
cs
aaa
cltd
and
add
pop
xor
clc
call
shr
mov
adc
iret
das
inc
jg
cltd
inc
loop
ljmp
or
dec
add
and
setae
add
push
shrl
arpl
jecxz
filds
cmp
inc
aam
mov
xor
repz
movb
insb
bound
cmpsb
out
cli
xchg
mov
jns
jnp
lods
xchg
mov
stos
jne
and
lret
cmp
sbb
in
scas
roll
ljmp
or
rcrl
repz
mov
mov
sub
mov
add
ss
mov
mov
std
outsb
lods
loopne
push
push
mov
mov
sbb
push
lods
cs
push
imul
jb
adc
dec
jb
mov
adc
and
xor
shr
xor
daa
or
repnz
fisubs
add
cmp
xchg
xchg
enter
sbb
aaa
cmpl
or
rorb
xor
jge
push
xchg
movsl
jp
test
jmp
sarl
orl
icebp
fldcw
lret
push
add
add
mov
cmp
mov
sub
lods
divl
pop
aad
mov
pop
jbe
mov
shlb
or
and
cmpsl
jmp
movsb
dec
inc
jnp
lret
mov
pop
fldcw
cmpsl
push
sbb
add
xor
push
add
mov
cmp
inc
push
pop
push
inc
sbb
outsb
aaa
aaa
mov
lret
xor
in
jbe
aam
dec
mov
rol
int
or
jg
test
push
mov
inc
adc
fs
fisubs
jae
mov
and
stos
lcall
jp
mov
pusha
push
add
pop
sbb
sbbl
aam
push
sbb
or
xor
push
call
mov
imul
shlb
adc
and
frstor
and
sahf
aas
stc
xor
pop
ss
icebp
ds
dec
inc
mov
pushf
push
daa
mov
movb
fisubrl
mov
data16
xchg
push
push
push
or
ficompl
mov
pop
inc
cmp
addr16
dec
xchg
adc
fcmove
in
divb
fwait
jnp
shl
nop
popa
lock
aad
testl
call
mov
inc
aas
xchg
test
lods
cmp
cmp
dec
data16
popf
std
je
sbb
mov
pop
add
test
jl
push
mov
cmpsl
jnp,pt
fisubrl
jecxz
movsb
stos
adc
mov
inc
icebp
push
int3
adc
repz
imul
sbb
adc
push
fdivrs
int3
adc
test
or
pop
mov
cli
mov
js
out
mov
sbb
das
arpl
mov
gs
pop
shl
lret
push
inc
pop
test
mov
gs
aas
mov
dec
xchg
fistpl
je
mov
inc
arpl
loope
fxch
add
lods
xor
pop
push
jp
pop
cmp
test
push
stos
loopne
cmp
stos
inc
cwtl
push
mov
inc
add
scas
xchg
jl
inc
call
pop
fsubr
lahf
rol
loop
ja
mov
pop
jl
jo
jmp
rolb
mov
ffreep
jo
push
pop
mov
stos
lock
push
jb
mov
push
nop
pop
popa
iret
mov
pop
adc
cmp
inc
inc
sub
xchg
outsl
mov
fnsave
sbb
fsubrl
add
lcall
mov
subb
nopl
mov
icebp
jge
push
xchg
xchg
hlt
push
or
pop
js
pop
inc
push
cmp
sbb
test
mov
hlt
mov
push
add
jo
or
push
cltd
call
cmpsl
cmp
jbe
mov
pop
fcoms
lock
jb
cmp
mov
mov
jge
lret
scas
pop
inc
es
sbbb
sbb
adc
xchg
jns
cld
xchg
push
xchg
adc
lods
xor
or
sub
xchg
cmp
call
fwait
test
lcall
mov
mov
jbe
sub
mov
loopne
stos
xchg
sub
pushf
pop
add
lock
pop
or
out
jno
rorl
or
loope
movsl
xchg
sub
dec
inc
xor
add
add
xor
dec
add
add
inc
cmp
pop
dec
insl
imul
add
addr16
push
pop
dec
push
jne
jp
inc
push
pop
data16
push
fs
dec
pop
push
add
or
or
add
cmc
cld
add
mov
add
or
or
inc
add
add
or
add
or
add
or
or
add
add
add
add
add
add
or
add
add
or
add
add
mov
lret
add
and
jae
jp
push
sub
jo
and
sub
imul
jno
push
outsb
imul
xor
add
or
or
or
add
add
or
or
or
add
add
pop
add
add
add
add
or
add
pop
or
or
or
add
or
add
or
add
or
pop
add
add
add
pop
add
add
or
add
add
add
pop
or
or
or
or
add
add
pop
add
add
add
or
add
add
or
add
pop
add
or
or
or
add
pop
or
add
add
push
or
add
push
or
add
or
or
add
inc
add
push
pop
push
dec
and
add
push
or
push
or
or
sbb
mov
add
sbb
add
inc
add
lock
or
pop
add
add
lsl
add
add
add
push
add
push
sysret
or
add
add
add
push
or
pop
add
pop
adc
or
adc
or
or
or
add
add
inc
or
push
add
or
or
add
sbb
or
add
or
add
add
int3
add
add
int3
or
add
or
or
add
pop
add
pop
add
or
add
or
push
add
add
add
add
or
add
pop
push
add
push
pop
add
add
sbb
or
or
or
add
add
add
add
or
add
push
pop
or
add
or
or
add
add
add
or
pop
or
or
push
aaa
push
or
add
adc
pop
add
pop
add
add
add
push
add
add
add
add
push
pop
xor
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
inc
add
loop
jno
jno
add
add
sbb
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
or
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
push
or
or
or
fisttps
roll
loope
add
and
or
add
mov
and
cmp
push
adcl
cmp
add
andb
fsts
xchg
jb
and
xor
cmp
jnp
fisttpl
push
mov
push
imul
xchg
outsb
mov
jnp
mov
fsubrs
out
cmp
push
cmpsl
pop
or
mov
cltd
xchg
outsl
mov
mov
mov
jne
dec
mov
aad
out
and
mov
mov
daa
out
ficomps
popf
dec
lcall
mov
push
in
ljmp
sbb
aad
sub
sbb
lret
pop
jmp
adc
add
xchg
scas
pop
ret
cli
scas
sbb
into
jp
sarb
add
jbe
sub
inc
xor
repz
pop
xor
push
push
add
adcb
adc
movsl
inc
rorb
add
xchg
cwtl
jae
sarl
gs
int
mov
imul
cmpsl
test
sub
xor
idiv
adc
and
dec
leave
out
imul
xchg
mov
jge
sbb
mov
je
mov
or
mov
xor
pop
stc
testl
xchg
xchg
daa
sarb
icebp
push
sbb
xchg
aad
push
shrl
in
adcb
dec
adc
lret
and
fs
popf
je
mov
mov
xor
inc
sti
xor
leave
ror
cmpsl
loope
mov
in
scas
push
add
sbb
fs
sbb
adc
cmc
scas
or
push
or
cmp
test
xchg
gs
sti
push
xor
lds
loope
in
jae
std
inc
jae
in
mov
cmp
adc
push
lea
jl
sub
movsb
jl
gs
divl
or
push
sbb
cmp
insb
mov
push
mov
stc
cs
stc
lcall
int
mov
and
arpl
pushf
adc
movsl
xchg
xor
iret
mov
and
jecxz
and
ret
add
xor
sub
jbe
ja
inc
sbb
outsl
xchg
scas
lahf
imul
cltd
loopne
ljmp
sbb
fstl
popa
mov
jp
mov
pushf
push
dec
mov
jge
mov
imul
mov
insl
mov
push
divl
aas
mov
pop
add
sbb
push
mov
sub
fistpl
je
push
leave
mov
mov
daa
xchg
xchg
daa
xchg
jne
aas
les
rorl
adc
insb
int
cld
push
xlat
mov
xor
pusha
or
stos
and
clc
xchg
cmp
sbb
repnz
dec
or
mov
sti
push
imul
test
sub
mov
aad
scas
mov
lcall
daa
daa
add
xchg
or
repnz
stos
ss
sbb
lcall
cwtl
push
rep
ret
das
mov
aad
test
ss
or
test
adc
popf
dec
fmull
lds
xchg
arpl
and
sbb
adc
cmp
mov
or
push
mov
xor
push
dec
fsubr
leave
mov
mov
pop
lods
pop
inc
rcr
jbe
jl
mov
pop
jnp
sbb
lods
popf
outsb
dec
pop
leave
jnp
pushf
xchg
sbb
aam
xor
in
pop
lret
loop
adcl
and
lods
sbbl
jnp
sub
inc
sarl
adc
cwtl
mov
xor
add
ljmp
pop
lret
pop
scas
dec
mov
mov
enter
inc
inc
mov
into
inc
xor
fs
inc
ret
jnp
popf
mov
xor
lods
lahf
movsb
lahf
inc
push
stc
sbb
movsl
or
jno
push
add
imul
add
lret
ficoms
mov
pop
pushf
jmp
dec
jecxz,pn
pusha
rclb
std
mov
jp
icebp
cmpsb
movsb
xchg
ja
adc
jmp
gs
out
xlat
fs
hlt
sbb
loop
mov
cwtl
stos
sbb
adc
xchg
aaa
in
pop
xor
dec
pusha
nop
test
push
pop
hlt
mov
std
inc
sbb
pop
test
jg
das
pusha
insb
mov
dec
iret
xchg
shl
nop
adc
and
repnz
xchg
fistpl
xchg
xchg
mov
mov
xchg
cmp
jmp
xchg
outsl
mov
xchg
cmp
fimull
mov
mov
jmp
cmp
gs
dec
out
sbb
push
call
xor
out
pop
sub
lock
pusha
je
rcll
repnz
clc
stc
dec
shr
js
mov
mov
jb
loopne
lcall
jno
stos
add
xor
orl
outsl
aam
mov
mov
mov
mov
mov
xchg
pop
js
mov
clc
fcmovnu
ss
mov
enter
sub
dec
sub
leave
aad
psubusb
mov
mov
call
mov
push
pop
sub
inc
or
adc
movsb
in
and
dec
push
inc
or
mov
cmpsl
add
mov
xor
ret
xchg
inc
mov
lods
mov
movb
lahf
add
sbb
inc
or
jmp
mov
or
mov
jne
fnstsw
fmulp
in
sbb
inc
push
fsubrs
dec
push
fwait
cmp
cwtl
or
je
mov
sbb
pop
mov
cmp
push
shll
scas
les
hlt
cmpsb
fs
js
outsl
or
or
cmp
lret
sub
cmp
xchg
jae
adc
add
mov
insl
sbb
cmpsb
ljmp
push
mov
ret
fisubrl
jle
cmp
dec
lea
and
xchg
dec
adc
les
movl
pop
jp
scas
and
jne
adc
pop
and
mov
pop
sbb
adc
loop
jns
gs
mov
push
fs
push
cmp
adc
add
sub
mov
pop
sbb
icebp
mov
cmp
adcb
lock
daa
out
adc
or
add
push
push
aam
test
data16
mov
rcl
and
int
dec
adc
and
mov
mov
out
sbb
cmp
incb
jnp
out
add
add
pop
ficoml
je
stos
sub
cmc
dec
out
or
fists
or
add
or
pop
mov
jne
pop
fwait
jle
pop
add
push
xchg
sbb
ficomps
stc
pop
shll
cmp
lahf
mov
adc
pop
lret
and
pop
or
jo
sub
cmpsl
sub
pop
dec
push
xor
shr
fisubrs
or
push
push
mov
shl
sub
inc
test
mov
pop
cmp
idivb
mov
sbb
std
mov
popf
pop
push
cltd
test
sbb
dec
aad
aad
dec
clc
xchg
clc
jb
adc
jae
xchg
sbb
std
insl
add
lods
or
pop
int
aaa
inc
inc
jbe
daa
mov
push
es
mov
aad
sbb
sahf
call
dec
jb
pop
test
lods
xchg
sub
dec
int3
ret
icebp
cmc
ficomps
out
test
fwait
cltd
and
cli
push
pop
mov
mov
and
loope
incl
add
out
aad
cmc
in
mov
mov
call
sub
icebp
std
inc
cmp
mov
mov
in
js
mov
lods
mov
sub
lea
loopne
mov
push
daa
jle
pop
sahf
cmp
aad
mov
dec
filds
mov
addb
cmpsb
mov
out
movsl
addr16
xlat
xchg
daa
enter
push
pop
rep
mov
cmpsl
mov
cmp
xor
inc
xchg
enter
xorb
cltd
pop
in
xchg
imul
dec
fisttpll
in
les
pop
pop
movsb
data16
xchg
dec
jg
iret
test
das
gs
sti
in
testb
pop
movsl
aad
add
mov
xor
cmp
fs
mov
repz
shlb
pop
add
lcall
ljmp
out
aad
mov
loopne
stc
xchg
mov
adc
adc
rorl
add
orl
cltd
cmpsb
dec
adc
aas
push
in
and
adc
into
jl
xchg
daa
mov
sbb
sub
xchg
fldcw
lcall
pop
sub
mov
jnp
call
push
dec
ror
xchg
sub
pop
xlat
xor
pop
ljmp
pop
pop
outsb
push
popf
sub
mov
aam
dec
xor
shr
mov
mov
or
mov
xor
dec
lods
cs
lret
inc
xlat
xchg
fsubr
sbb
add
xor
pop
shll
popa
mov
mov
outsb
stos
mov
sbb
test
shll
call
jmp
mov
and
popf
inc
mov
xchg
and
std
pop
cld
dec
add
inc
push
ret
rclb
paddq
mov
mov
mov
or
jp
fs
cmp
xchg
std
test
mov
insl
mov
and
xor
les
cld
iret
lret
cmp
dec
cld
jmp
adc
pop
adc
movsl
inc
mov
into
pop
cs
mov
rcl
mov
pop
xchg
jecxz
or
dec
cmp
lret
pusha
call
lods
dec
push
push
int3
sti
dec
pop
jmp
push
xor
insl
xchg
add
sbb
sahf
sarl
jl
adc
int3
gs
xor
mov
cmp
rclb
pop
bound
jnp
int
iret
add
cltd
sbb
mov
stos
daa
inc
std
xor
mov
add
pop
xor
push
xor
ret
iret
pop
lahf
jnp
scas
adc
mov
pop
xlat
push
and
dec
shll
insb
loopne
sbb
pop
aam
sti
inc
inc
sub
push
xor
movsl
xchg
out
out
sbb
scas
mov
je
mov
or
insl
jns
adc
inc
out
ret
enter
sahf
fadds
stos
sbb
push
push
mov
aas
xchg
fwait
mov
jmp
outsb
push
dec
call
call
addr16
jae
aam
orl
and
and
.byte
outsb
.byte
