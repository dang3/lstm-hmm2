cs
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
add
sti
incl
gs
jb
lea
inc
push
jg
sbb
add
dec
outsb
je
addr16
adc
out
fildl
rcrb
inc
jns
rorl
outsl
jb
add
cmp
in
repnz
imul
pop
or
mov
jb
loopnew
add
xchg
fistpll
cmp
subb
add
jne
dec
mov
jl
push
dec
bound
arpl
pop
fldt
xchg
gs
cmpsb
insl
bound
adc
invd
dec
push
outsb
imul
outsb
add
and
sub
and
out
orl
pushf
cwtl
xchg
nop
or
enter
test
enter
jl
enter
je
insb
and
orl
pusha
pop
pop
push
or
enter
dec
xor
and
and
and
mov
xor
and
xor
and
xor
and
loope
or
push
add
mov
or
xchg
testb
je
movzwl
mov
sbb
arpl
sbb
sbb
adc
fs
inc
adc
idiv
dec
push
add
mov
cmpl
jne
push
in
jmp
push
add
add
mov
out
add
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
imul
insl
testl
add
push
mov
mov
dec
jge
psadbw
test
dec
mov
mov
mov
add
outsl
mov
pop
or
add
or
fisttpl
push
mov
push
mov
icebp
mov
mov
mov
add
imul
mov
rolb
push
or
push
jne
adc
jl
negb
adc
add
daa
push
add
idiv
dec
idivb
ret
sbb
mov
cmp
jne
mov
mov
adc
mov
lahf
add
pop
pop
pop
mov
ja
push
sahf
jae
clc
mov
dec
cmp
jb
jnp
sti
insb
mov
add
call
ja
adc
mov
add
sub
or
inc
in
mov
andl
mov
add
mov
add
std
mov
std
sub
jmp
adc
mov
sub
mov
in
fnstsw
mov
jmp
popf
insl
mov
sbb
sti
jne
or
imull
mov
cmp
mov
insb
ljmp
sub
jae
push
push
sbb
outsl
daa
mov
test
je
mov
mov
insb
xchg
and
jecxz
add
int3
fimuls
testl
mov
add
roll
testb
push
insl
cmp
dec
and
in
cmpl
jbe
imul
dec
adc
loop
incl
jbe
sti
xchg
push
and
mov
add
mov
test
notl
mov
jae
cmp
ja
mov
outsb
imul
add
ja
cmp
mov
adc
jbe
add
outsl
ds
or
add
fcmovnu
xchg
filds
mov
add
adc
imul
sbb
mov
jae
dec
sub
aaa
sbbb
ljmp
add
mov
decl
pop
loop
mov
data16
cmp
or
lds
mov
into
cmp
pop
sbb
jbe
mov
fnstsw
jnp
mov
push
mov
jge
push
adc
sti
push
push
rol
insb
arpl
push
mov
mov
jmp
mov
and
pop
mov
xor
imulb
push
inc
test
fisttpl
cmp
jae
mov
out
jae
std
and
jne
sbb
inc
inc
dec
dec
xchg
sbb
inc
clc
mov
aas
xchg
cmp
je
jns
imul
dec
mov
xchg
fidivs
sub
je
mov
outsb
cmp
ds
and
in
lcall
mov
mov
xchg
cmpl
movsl
adc
push
adc
popf
cvtdq2ps
mov
ds
add
mov
push
jne
add
mov
jle
test
mov
inc
push
jg
sbb
xor
sti
xor
mov
enter
mov
pusha
mov
insb
mov
in
imulb
dec
lahf
inc
out
add
xor
test
dec
adc
clc
adc
dec
mov
cmc
test
dec
sbb
xlat
cmp
inc
js
cmpl
sub
inc
dec
mov
es
push
adc
dec
fdivs
inc
jg
mov
and
in
les
add
ret
jo
or
fidivs
mov
jae
roll
jo
push
ror
dec
mov
int
sti
test
je
mov
mov
mov
into
lcall
adc
cmp
push
sub
sbb
lea
in
fwait
push
push
pushl
mov
push
adc
add
cmpb
adc
imul
inc
mov
jo
xchg
roll
insb
loope
pop
outsl
out
cmp
add
rep
rclb
cmp
mov
add
movb
sub
pop
pop
pop
mov
push
fbstp
mov
mov
in
sub
mov
lret
test
imul
orb
lods
pop
sbb
add
rcrl
movb
mov
out
adc
je
xor
setbe
pop
push
jne
popl
iret
jl
push
out
cmpsl
pop
cltd
in
fistpl
push
cmp
out
mov
xchg
cmp
mov
sub
shr
sarl
mov
jmp
bswap
adc
mov
mov
xor
add
or
pop
mov
test
loopne
jb
cmc
jnp
mov
or
mov
jne
fcomip
ret
add
jmp
loop
sbb
jg
jl
mov
mov
shrl
add
or
or
je
mov
or
jmp
jbe
push
rolb
cld
pop
or
adc
fwait
jnp
xlat
ss
push
or
push
shl
mov
or
dec
or
ret
mov
add
loope
dec
iret
and
add
inc
ret
dec
jg
arpl
push
enter
ret
pop
fcomp
inc
fwait
add
inc
cmpsb
jb
jae
aaa
push
cmp
sbb
push
dec
add
xor
mov
add
and
scas
add
pop
out
push
add
inc
or
cmp
push
mov
inc
fistps
inc
xor
jnp
or
sub
fnstsw
clc
sub
pushf
cmp
mov
jmp
jge
pop
cmc
dec
pop
adc
mov
lea
adc
lods
test
sub
pop
lods
push
jmp
inc
lret
insl
fisttps
adc
rcrb
jl
push
ficompl
xchg
and
arpl
pop
sub
movb
push
shr
cmp
cmp
or
pop
mov
sbb
cmp
inc
or
jle
jecxz
sbb
aaa
cmp
or
xor
mov
fwait
jge
popw
or
or
ja
xor
jp
subl
jae
or
adc
hlt
fdivl
or
ss
pop
lock
or
call
xor
or
push
mov
cmp
xor
cmpsl
sub
pop
add
ljmp
add
je,pn
in
cwtl
push
adc
add
fsubl
cmp
subl
orl
adc
fidivl
sbb
inc
aaa
into
pop
inc
sub
xor
and
add
pop
loop
cmp
pop
pop
lcall
cmp
or
adc
jne
or
cmpsb
inc
inc
ljmp
adc
pop
push
dec
dec
cwtl
pop
pop
test
pop
push
mov
jo
jle
rcll
jg
pop
mov
outsb
test
pop
jmp
or
sbb
cmp
or
stos
xor
xchg
rolb
adc
cmp
ret
jo
and
ja
jo
push
push
dec
shrb
and
sub
dec
out
mov
xor
scas
cmc
cs
test
roll
xchg
push
sub
inc
jb
mov
mov
pop
mov
cwtl
ret
mov
and
cwtl
push
mov
orb
cld
mov
mov
and
jae
or
mov
and
cmp
call
mov
or
xchg
or
lds
sar
jg
jne
push
je
scas
cli
ret
cmpsb
inc
mov
test
sub
aaa
or
test
test
sbb
loope
iret
stc
loope
insb
inc
rorl
mov
fwait
jb
pop
add
add
mov
mov
iret
cmp
jnp
mov
pop
dec
or
inc
dec
sbb
mov
cltd
cmovs
jns
insl
and
mov
mov
lock
pop
jnp
push
test
or
or
or
cmp
cwtl
adc
and
pop
pop
and
lock
test
cmovb
cmp
mov
fcmovnb
xchg
mov
pop
push
sub
inc
mov
fsub
andl
add
or
cwtl
mov
ret
pop
add
loopne
sbbl
dec
loope
sub
pop
xor
cmp
push
pop
pop
addr16
rolb
mov
fildl
xchg
sbbl
test
je
cmc
shr
jp
lcall
aaa
orl
jmp
cmp
jge
sti
inc
push
or
or
je
test
xor
mov
je
movsl
popa
and
das
push
aas
daa
add
cmpsl
pop
ss
out
mov
rol
xor
push
mov
decb
addb
mov
sbb
cmp
addw
or
add
fsubrs
inc
loopne
push
sub
cmp
push
testb
ud2
scas
pop
jmp
add
negb
les
mov
push
popa
sbb
lock
test
or
test
roll
test
push
test
cs
adc
xor
sbb
add
jl
mov
and
jne
insl
xor
xchg
fbstp
push
gs
lret
add
xorl
push
fbstp
out
dec
sub
popf
xchg
rorb
aam
push
xor
loop
cmp
ret
bound
scas
shl
sbb
cs
lock
adcl
sbb
cmp
in
je
jbe
adc
add
cmpsb
lahf
cmc
and
nop
jae
sti
adc
ds
and
jle
adc
mov
jmp
imul
xchg
enter
push
sub
or
fists
ss
jbe
add
xchg
and
cmp
mov
add
xor
dec
fists
rcl
or
ret
mov
fistl
sbb
dec
or
add
fldcw
push
mov
and
cmp
mov
ret
push
jnp
jg
cmp
push
cltd
outsl
mov
xor
shrb
out
into
fstp
jg
loopne
or
pop
call
dec
mov
mov
push
jns
inc
inc
addb
fmul
int3
enter
enter
fmul
loopne
jecxz
in
ret
fstl
push
push
sub
mov
fstpl
xor
arpl
cmc
jne
mov
push
rcrb
cmp
fadds
enter
clc
inc
cmp
or
lock
add
push
jns
test
je
pop
mov
inc
dec
fmull
jo
cmp
lahf
mov
in
push
push
cs
mov
adc
add
pop
cltd
fimull
adc
or
push
outsb
mov
cmpsl
push
js
incb
xor
jnp
daa
mov
push
cld
and
lea
pop
fsts
mov
dec
into
and
js
add
lea
sub
in
sti
mov
or
xor
and
nop
add
enter
aaa
ficoms
stos
decb
fisttpl
jg
je
pop
js
rep
mov
and
repz
or
push
cld
lea
or
adc
sbb
add
pop
fwait
mov
cmp
insb
fcomip
add
add
add
and
cmpb
jne
cmpb
add
sbb
jmp
xor
jmp
cmp
sbb
add
sbb
ret
sub
jne
jecxz
push
mov
pop
mov
ja
xor
stc
sub
rclb
lret
push
rcrb
in
dec
cmp
rorb
xor
sbb
out
xchg
lock
hlt
or
inc
jmp
inc
inc
shrl
sbb
clc
mov
bound
loopnew
enter
in
dec
jmp
jns
mov
outsb
clc
xor
jmp
inc
mov
in
dec
jmp
dec
sub
sti
decl
fucomi
jne
orb
inc
lock
add
push
cmc
mov
mov
cli
hlt
iret
imul
into
mov
cmp
sti
add
xor
cmp
add
testb
ja
sub
inc
fistpl
fwait
pop
xor
imul
or
daa
or
pop
mov
mov
js
lock
decl
jb
cmp
ja
mov
mov
mov
inc
add
cmc
mov
sub
jbe
mov
jmp
xchg
xor
arpl
out
add
es
sbb
icebp
daa
jae
adc
cmovbe
loope
int
out
aam
lret
insb
xor
sarb
shlb
add
push
aaa
je
incl
cmp
jne
dec
je
mov
mov
or
imul
jmp
sti
mov
mov
add
pop
and
sbb
push
cmp
jne
sub
mov
dec
add
or
add
sbb
cmp
cmp
jne
dec
push
mov
jmp
or
jg
push
mov
shr
or
gs
addr16
cmp
shrb
and
mov
cmp
jne
dec
dec
dec
xlat
xchg
movsl
mov
sbb
pop
ss
pop
pop
jno
and
sbb
loopne
add
or
stos
mov
pop
outsb
lahf
shrl
ljmp
or
loope
cmp
loop
cmpsl
sub
fildll
lds
fstpt
push
inc
cmp
je
mov
mov
adc
add
je
and
push
scas
fwait
xor
ja
cmp
ja
lea
add
add
das
sbb
dec
mov
jl
pop
xor
mov
add
add
fdivrs
mov
jmp
inc
and
comiss
fnstenv
dec
and
or
popa
pop
notl
add
pop
leave
leave
add
ret
call
jmp
ret
push
mov
mov
sub
sub
leave
jne
pop
aam
jge
loope
add
push
cmp
mov
fistpll
sbb
repz
ljmp
insl
inc
sub
mov
cmp
sbb
in
jne
push
or
mov
xchg
cs
data16
pop
arpl
mov
add
pop
insb
outsl
lods
push
xor
push
out
scas
cmpsb
daa
sub
insl
xchg
pop
push
hlt
inc
adc
push
xor
test
clc
add
sbb
cmp
out
sarl
mov
mov
sahf
aas
or
mov
inc
push
add
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
repz
dec
popa
jae
push
popa
insb
jne
add
jecxz
fldcw
mov
jo
xchg
sub
inc
mov
or
rolb
mov
or
dec
cld
jbe
das
cld
jg
mov
xor
and
jne
pop
repnz
mov
fwait
lret
jne
xchg
inc
call
or
jo
fnsave
adc
mov
nop
pop
mov
mov
outsl
mov
mov
sub
and
jl
jne
cwtl
mov
divb
pop
adc
je
ljmp
and
or
or
syscall
sbb
insb
pop
push
mov
call
daa
mov
xlat
stos
mov
mov
bound
fimull
xchg
sub
pop
call
in
cmp
fistl
pop
add
ret
or
adc
cmp
sub
sbb
mov
mov
aaa
int3
adc
rorb
fstps
mov
cmp
je
dec
sbb
mov
jmp
int
pop
push
xchg
daa
dec
fdivl
mov
sqrtps
repnz
les
or
pop
sub
rcrl
inc
addl
xchg
jb
sbb
mov
test
jmp
pop
sub
adc
mov
push
pop
mov
mov
mov
insl
add
add
or
pop
data16
ror
out
push
adc
loop
jmp
mov
xor
sbb
and
ds
xlat
fcmovu
loope
les
cmp
add
dec
push
negl
fucomi
sbb
jmp
mov
xor
jecxz
dec
sbb
sarb
push
dec
aam
push
jle
xor
dec
repnz
sbb
add
sub
fmull
pop
call
jp
mov
push
hlt
mov
mov
movsb
movups
jg
or
add
xor
mov
mov
mov
pop
pop
and
jge
in
fs
test
loopne
adc
push
clc
xchg
aaa
popf
out
fdivrs
adc
in
mov
std
pusha
sbb
push
push
push
add
add
pop
add
add
add
out
movntps
push
pushl
jnp
jp
xor
mov
adc
push
push
adc
leave
cs
dec
add
add
add
nop
movsbl
inc
jmp
lret
shll
je
or
insl
add
call
daa
adc
nop
mov
pop
loop
nop
cmp
movsbl
sbb
adcl
rcrb
testl
mov
mov
and
je
jl
aas
jne
sbb
rorb
test
aaa
rcrb
gs
stos
inc
lods
and
insl
jo
sbbl
mov
mov
sub
pop
stos
outsl
sub
sub
out
shll
add
mov
mov
mov
inc
movl
clc
fmuls
push
mov
jne
rcll
cs
inc
or
mov
dec
retw
push
add
jae
ret
mov
mov
arpl
or
filds
dec
dec
jp
add
lds
jno
test
aas
xbegin
scas
mov
in
pop
lret
int
jno
mov
pop
sbb
inc
jg
xor
jne
fcmovne
add
dec
jne
mov
cwtl
adc
sbb
or
decl
sbb
push
xor
enter
push
xor
xor
scas
popa
test
xor
stc
push
in
arpl
or
inc
sti
cmp
adc
sbb
movl
or
js
call
shrl
andb
push
push
sysret
adc
sahf
inc
cli
ficoms
cs
xor
dec
das
xor
mov
jp
mov
lock
add
lahf
or
aad
mov
adc
mov
add
adc
dec
xor
and
pop
mov
repz
push
jmp
ret
pop
dec
ja
pop
movsb
fdivrs
or
and
sbb
ret
sub
adc
and
cmp
jnp
jg
pop
cmp
push
sub
jmp
sub
je
jmp
add
call
mull
cmp
cmp
inc
fcomi
fistl
add
cmp
cmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
orl
pushl
into
jmp
mov
push
mov
jmp
mov
mov
mov
jmp
push
push
dec
test
and
pop
lret
insb
dec
ds
xor
dec
or
aaa
mov
pop
push
inc
inc
sbb
sbb
aad
stos
pmuludq
and
or
add
es
xor
adc
dec
aas
andb
popa
mov
cmp
test
jo
push
lds
pop
or
cmp
jne
ror
sub
or
cmp
jno
arpl
mov
inc
mov
push
pop
pusha
test
add
ja
and
ss
dec
mov
inc
fiadds
push
call
adc
leave
jmp
adc
in
sahf
mov
sbb
fcomps
test
fisttpl
cmp
xchg
cmp
jle
add
int
mov
and
es
cmp
jg
inc
scas
stos
xlat
lock
xor
mov
pop
push
sbb
xor
add
dec
sub
pop
fisubs
push
adc
mov
push
lock
xor
cmp
mov
xchg
dec
dec
add
push
cmp
mov
pop
in
outsb
xor
xor
or
xor
add
mov
dec
pop
cmp
mov
cmp
adc
call
pop
ret
cmp
sub
call
mov
xchg
sbb
in
fildll
ja
add
mov
mov
xchg
mov
xchg
sbb
inc
leave
cmp
adc
xor
cmpb
jp
sbb
cmpl
adc
das
shrb
call
adc
sbbl
cmp
daa
xor
inc
lock
out
mov
repnz
inc
cld
add
jmp
or
pop
pop
xchg
inc
pop
push
xchg
bound
or
inc
xor
cmp
rorb
jae
adc
jbe
out
inc
adc
fsubr
push
push
cmp
or
push
add
jl
xchg
mov
jne
call
xchg
andb
mov
pop
je
push
loope
mov
push
mov
sti
cli
pop
jmp
push
cld
je
outsl
outsb
jae
inc
outsl
jo
ljmp
push
sub
xor
cmp
sub
aaa
and
aaa
ret
xchg
push
daa
jmp
jo
ret
jle
ds
adc
pushl
hlt
or
test
sbb
xor
movsl
push
mov
pop
inc
mov
lods
or
fmull
bound
push
rcrl
adc
mov
subb
mov
push
sub
enter
lea
loopne
inc
add
add
or
push
and
mov
in
lods
inc
or
cwtl
es
cmpsb
jae
inc
sbb
inc
std
mov
clc
dec
jl
mov
jge
sti
nop
sbb
mov
sub
movl
or
jo
test
or
and
ss
push
rcr
addb
sub
jge
or
cmp
or
xlat
fstpt
xchg
dec
pop
fs
negl
inc
js
lods
xor
add
add
ret
pop
add
stos
clc
jnp
push
xor
add
scas
mov
std
mov
mov
mov
mov
jo
xchg
mov
mov
nop
pop
pop
mov
pusha
and
mov
and
and
rcl
addr16
sub
outsl
mov
imul
pinsrw
gs
pop
jle
fidivrs
sub
por
sbb
mov
sub
adc
jge
inc
jg
divb
cmpb
sub
das
push
and
adc
and
add
cld
ret
sti
fistl
inc
add
jmp
divb
cmp
and
pop
add
add
push
push
xor
jmp
add
add
leave
xlat
bound
cmp
pushf
mov
inc
dec
xchg
push
insb
or
scas
jne
not
test
pop
pop
sbb
sbb
aaa
push
scas
lock
loopne
pop
cld
adc
fnstcw
mov
inc
xchg
popf
add
insl
rol
lret
pop
add
cld
ret
sub
jecxz
cmovb
mov
mov
add
cmp
fidivl
das
xor
dec
adc
adc
sbb
mov
out
pop
repz
popa
inc
cmpb
pop
sbb
or
scas
mov
fdivrp
mov
inc
sub
push
rorl
add
jl
xor
dec
mov
add
add
pop
jae
xor
inc
jo
lret
mov
mov
pop
push
adc
xchg
adc
leave
outsb
rcrb
xchg
cmpsl
inc
pushf
fndisi(8087
mov
testl
sub
stos
push
dec
push
or
and
loopne
ret
mov
and
rol
out
mov
push
push
cld
inc
push
in
ja
dec
and
cmp
jmp
push
call
and
fdivl
jge
pusha
jmp
push
add
loope
mov
and
push
clc
inc
add
rolb
rcr
adc
lock
sub
ret
cli
aad
pop
xor
outsb
and
xchg
inc
mov
mov
es
jl
cmp
jge
sub
dec
jl
cltd
imul
inc
int
pop
loopne
add
in
jmp
adc
dec
or
ret
fninit
mov
xor
in
mov
jle
sub
cmp
jle
and
stc
add
lea
cld
push
push
jmp
das
xor
cmpsw
out
xchg
dec
jp
divl
push
movsl
and
add
cmp
inc
xlat
mov
orl
frstor
add
xor
fcoms
mov
cmp
mov
jnp
adc
shlb
stos
add
dec
adc
movsl
and
movsl
pop
test
dec
xor
mov
push
test
dec
js
mov
inc
cmp
cmpb
or
mov
pop
push
jmp
mov
mov
xchg
repz
mov
inc
add
js
push
xor
ljmp
pop
sbb
mov
imul
add
fs
lods
cmpsb
fstl
push
xchg
icebp
sti
or
push
add
push
lds
push
arpl
dec
or
push
sbb
int
and
call
fldenv
call
or
lret
es
test
inc
arpl
mov
add
mov
add
sbb
add
xor
mov
sbb
adc
ret
or
aaa
or
add
push
inc
pop
in
push
daa
daa
jg
das
andb
std
cs
pop
das
int3
cmc
sub
mov
mov
push
ret
inc
jbe
lcall
dec
insl
pop
xchg
mov
arpl
test
or
add
je
or
in
icebp
or
dec
cmovle
xor
outsl
sub
clc
jmp
or
or
mov
mov
adc
jmp
mov
jbe
lea
rolb
pop
cs
dec
cs
jp
cld
sbb
xor
call
sbb
adc
sub
bound
xor
cmp
and
sahf
out
ss
push
imul
xchg
stos
pop
scas
orl
loopne
push
jo
pop
lods
ds
mov
push
add
jmp
in
and
adc
xlat
inc
out
jmp
pop
enter
les
xor
jmp
inc
add
mov
in
ret
mov
or
push
pop
repnz
imul
sub
xor
and
or
in
nop
mov
js
sbb
cwtl
jecxz
mov
test
add
cld
mov
loopne
add
sarl
push
mov
insb
loopne
and
pop
ficomps
shll
cmp
stc
fdivl
cmp
pop
pop
pop
cmp
stc
dec
cmp
cmp
xor
pushf
insb
pop
fstl
sub
add
jmp
adc
adc
pop
lea
loopne
adc
insb
outsb
mov
jae
add
fisttps
xchg
jo
mov
je
add
sbb
je
and
mov
pop
cmp
jp
cli
dec
jne
ret
adc
adc
lret
sahf
out
daa
sbb
sub
sub
push
jno
test
push
add
push
fcmovbe
fstps
in
fwait
xor
dec
jne
jmp
adc
fwait
cmp
adc
imull
push
ret
dec
insb
lar
or
ja
fiadds
pop
add
and
jmp
mov
loop
ret
inc
add
lods
xchg
mov
add
jmp
js
xchg
sbb
pop
xchg
clc
pop
fwait
stc
in
xchg
movsb
inc
pop
stos
inc
push
movsl
pop
inc
repnz
xchg
lret
icebp
mov
jne
xor
leave
popa
es
fs
stos
and
pop
jb
call
insb
gs
mov
push
aas
lds
push
mov
sbb
dec
aad
xor
jae
int
aad
add
xor
shll
inc
sub
lock
adc
adc
sahf
xchg
cld
mov
push
push
call
or
sbb
cs
pop
mov
add
pop
xor
out
adc
ret
decl
jne
cmp
jb
cmp
fsubs
jmp
call
ret
cmc
insb
cmpw
sbb
in
notb
cmp
je
sbb
sbb
or
cmp
jae
out
push
mov
lret
or
fstps
xchg
or
das
cmp
das
and
push
push
or
mov
push
orb
inc
cwtl
shl
sbb
sbb
mov
mov
sub
aaa
push
lock
or
lods
pushf
jle
push
mov
mov
mov
leave
cs
mov
xor
or
mov
mov
rorl
hlt
dec
test
insl
ja
jle
or
dec
cmp
ficompl
shll
or
es
outsb
or
dec
in
data16
lahf
fisubrs
movsb
cmp
call
in
pop
lcall
aaa
hlt
cmpsb
mov
jge,pn
sub
lock
popw
push
sbb
dec
inc
das
test
pop
sti
pop
jbe
pop
pop
or
jmp
pop
mov
and
pusha
push
repnz
les
inc
pusha
adc
or
xchg
fimull
sub
outsl
push
fildl
mov
test
movsb
test
inc
stc
adc
lods
addr16
jo
jmp
insl
flds
or
and
mov
in
sbb
mov
ret
std
aaa
push
cmpl
pop
fistl
and
testl
push
insb
xchg
add
add
adc
loope
inc
mov
icebp
sub
stc
add
pop
xorb
psubd
inc
out
add
add
and
dec
add
mov
pop
xchg
dec
sbb
sbb
ret
int3
push
iret
out
push
pop
adc
jns
int
out
jl
clc
jo
int3
add
clc
add
fcomi
pop
pop
or
inc
rep
add
pop
or
add
sbb
jge
sbb
sbb
shrl
out
setg
ret
or
cmp
popa
pop
popf
xor
lock
insl
inc
cmp
sbb
push
je
aam
out
inc
pop
jno
jne
push
mov
cmc
add
aaa
mov
test
push
outsl
xchg
popa
jb
mov
dec
outsl
arpl
gs
and
pop
cmpsl
sbb
loopne
and
fimuls
pop
and
xor
xor
add
adc
cmp
out
mov
or
push
or
mov
mov
cmp
icebp
dec
dec
daa
in
sub
mov
ret
pop
add
adc
rolb
daa
mov
sbb
jmp
fnstcw
cmp
nop
out
pop
inc
jle
fsubl
cmpl
cmp
arpl
xchg
mov
loop
add
pop
movl
mov
into
fimuls
data16
xor
dec
push
cmp
adc
push
cmp
decl
idiv
cmp
add
mov
mov
pop
imul
add
rorl
ljmp
sub
scas
adc
and
mov
add
xchg
jo
xor
jecxz
mov
lret
sbb
or
add
jno
push
and
push
mov
pop
push
or
mov
or
lea
push
cmp
ss
jl
push
fdivr
mov
clc
insl
je
ret
or
sbb
movsb
push
or
pusha
xor
aam
xor
idiv
std
mov
sub
fld
mov
dec
jne
sbb
fs
inc
or
adc
mov
je
call
je
add
push
aas
popa
mov
push
clc
mov
pop
movl
daa
pop
enter
inc
add
movaps
out
int
mov
and
and
jle
shrb
insb
lret
mull
aaa
lea
push
fnstcw
lcall
cvtpi2ps
cmpl
int
mov
daa
pushl
and
and
sub
out
and
inc
lods
cmp
xor
mov
xchg
adc
adc
push
mov
aam
clc
mov
push
sbb
pop
inc
xchg
or
sti
les
ret
or
xchg
mov
mov
out
outsb
imul
cs
mov
je
scas
cltd
loopne
test
pop
ss
fnstenv
add
stc
mov
ret
push
mov
sbb
jmp
or
xchg
into
ficoms
test
push
or
lods
stc
mov
jecxz
adc
cld
dec
inc
sbb
mov
ss
and
lods
inc
sub
rcrb
cmp
stos
jmp
dec
jne
dec
mov
pop
fsubrs
or
mov
jnp
in
cli
push
ret
idivl
ret
and
pop
sbb
pop
subl
sbb
jl
ja
mov
or
add
and
aaa
fisubrl
jae
dec
lock
ds
cmp
jmp
lock
ds
ficoml
inc
sub
pop
es
mov
push
sbb
cmp
fdivrl
mov
mov
mov
outsb
sub
js
mov
mov
bound
sub
cmp
jg
add
sub
lret
mov
xor
fiaddl
inc
or
jp
cmp
xorl
dec
je
cwtl
fnstsw
push
aaa
int
mov
ja
cmp
jle
sub
push
mov
mov
add
aad
jnp
or
pusha
add
mov
ja
scas
daa
lea
cmc
sub
jle
sbb
jo
pop
in
in
insl
jge
sbb
cwtl
pop
dec
push
sbb
popa
fists
add
push
xchg
lea
or
pop
mov
incl
jbe
cmp
inc
shlb
pop
loop
adc
jbe
push
dec
enter
mov
sub
jns
aaa
orl
imul
das
xor
je
lock
or
ret
repnz
not
dec
or
rcll
rcl
pop
push
xlat
ss
dec
dec
insl
jne
jl
inc
std
adc
loope
cmpl
loop
lea
fldt
mov
jg
leave
shr
je
adc
or
xchg
fldl
add
inc
mov
sub
in
jge
inc
stc
loopne
jle
sahf
stc
enter
sub
out
ret
cmp
add
jg
aas
xchg
inc
mov
cli
nop
pop
jns
or
or
ret
pmulhuw
aas
jns
hlt
adc
mov
lahf
cld
sub
sbb
add
mov
push
adc
adc
out
xchg
sub
hlt
and
mov
or
xor
leave
sbb
cld
lds
mov
jbe
imul
cmp
mov
mov
pop
dec
fbld
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
push
js
xchg
push
or
push
push
int3
into
sbb
rorl
mov
test
popa
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
ljmp
clc
js
aas
sbbl
pop
mov
addr16
dec
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
ljmp
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
push
mov
inc
imul
divl
jl
xor
cmp
call
mov
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
jmp
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
call
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
jno
lds
mov
mov
inc
push
movsl
mov
popa
mov
and
addr16
repz
mov
subb
incl
xchg
and
and
bound
xor
xchg
ret
pop
push
incl
pop
call
add
jb
pop
inc
sub
inc
mov
fs
or
xchg
mov
sub
pop
inc
pop
clc
push
cld
cmp
pusha
pop
adc
sub
pop
add
leave
push
xor
cmp
outsb
sub
inc
add
out
inc
inc
add
insl
jle
lahf
imul
addb
aam
pop
cmc
add
sbb
sbb
sub
jae
mov
std
in
push
jae
sub
add
add
int
pusha
daa
pop
jmp
hlt
pop
lock
xor
call
xor
fadd
out
mov
aad
mov
push
flds
hlt
sub
jmp
push
mov
xor
iret
or
or
iret
add
jne
fs
insl
add
push
outsb
insb
imulb
jne
dec
dec
divb
fsts
xchg
add
lea
mov
xor
cmp
jno
jns
mov
jb
mov
push
pop
inc
xorb
dec
or
sbb
add
mov
loop
pop
loop
lods
ret
inc
jno
and
test
push
add
inc
popa
xor
mov
pop
fwait
adc
add
adc
pop
or
enter
dec
xor
and
and
and
sub
and
or
enter
or
enter
add
add
push
cld
adc
data16
mov
lock
adc
adc
cmp
in
loopne
fcoml
fcoms
in
xchg
daa
aam
rclb
int3
adc
adc
adc
adc
mov
adc
repnz
adc
adc
and
and
mov
cmpb
enter
insb
xor
and
and
and
dec
orl
inc
inc
cmp
or
enter
sub
enter
and
enter
sbb
adc
sahf
sbb
je
jo
fs
inc
insb
push
push
pusha
pop
pop
nop
inc
push
sbb
jns
lods
push
add
inc
adc
adc
sbbl
or
enter
and
xor
and
sbb
xor
and
and
dec
sahf
cmp
cld
adc
adc
adc
adc
leave
xchg
daa
in
adc
adc
adc
adc
adc
adc
adc
xchg
daa
dec
rclb
int3
adc
adc
sbb
in
adc
mov
inc
mov
lods
fs
inc
push
test
mov
pushf
cwtl
xchg
inc
push
sbb
mov
sbb
cmpb
nop
inc
je
pop
test
inc
push
sbb
mov
nop
mov
fs
inc
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
sbb
cmp
xor
nop
inc
push
xor
nop
inc
push
sbb
sbb
push
sbb
adc
sbb
or
xor
leave
inc
cld
adc
orl
call
in
faddl
sbb
rolb
sbb
enter
fs
inc
mov
inc
push
lods
test
nop
inc
push
sbb
sbb
nop
push
sbb
mov
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
sbb
cmp
xor
xchg
inc
push
xor
fs
inc
push
and
sbb
inc
push
sbb
adc
inc
push
sbb
add
jb
nop
add
adc
hlt
xor
and
and
and
rolb
enter
xor
and
xorl
or
mov
xor
xor
mov
enter
mov
rol
loop
or
ret
roll
ret
clts
sub
ljmp
pop
pushf
testl
xchg
ds
sbb
xchg
push
dec
sbb
lods
dec
fldenv
nop
sbb
adc
jle
rorl
or
add
movswl
mov
pop
inc
lea
adc
jle
mov
mov
data16
rorl
adc
dec
sarl
or
adc
sbb
and
mov
call
sub
add
leave
aad
fsubl
push
push
cmp
aaa
or
nop
enter
mov
frstor
push
or
popa
jb
push
add
adc
xchg
adc
or
andb
insb
push
or
xchg
bound
mov
das
lahf
push
and
jle
fsts
or
arpl
xor
imul
dec
pop
fcoml
inc
push
inc
bound
inc
inc
in
pop
outsl
cmp
adc
aaa
fildl
mov
add
dec
dec
gs
xchg
iret
je
je
sti
inc
jbe
or
outsb
push
inc
jb
dec
dec
lcall
flds
mov
fs
pop
enter
andb
push
repnz
imul
outsl
nop
pop
pop
mov
filds
push
popa
outsb
movsb
dec
negb
dec
xchg
pop
sub
data16
outsl
ja
hlt
dec
pop
les
dec
popa
je
lcall
dec
inc
gs
xchg
cld
jg
dec
outsb
jbe
insb
imul
push
xor
sbb
fadd
adc
mov
pop
lods
js
and
or
ds
outsb
fs
nop
jo
pop
pop
ret
jnp
das
push
outsl
imul
dec
shlb
mov
je
adc
xchg
mov
or
fs
dec
mov
xchg
or
adc
mov
iret
insb
popa
aam
mov
fs
jb
xchg
sub
and
jbe
add
icebp
pop
and
add
inc
push
je
arpl
gs
push
popa
sti
xor
inc
cmp
mov
mov
mov
push
popa
call
js
rorb
ja
inc
shlb
imul
imul
inc
imul
inc
ret
inc
popa
xchg
fists
and
sbb
sahf
adc
dec
in
aam
sub
data16
pop
fs
mov
xchg
aas
push
imul
sbb
xor
icebp
repnz
hlt
cmc
mulb
push
idiv
stc
nop
inc
push
sbb
sti
cld
inc
push
sbb
incl
sbb
loope
jecxz
fs
inc
in
out
nop
inc
push
out
jmp
ljmp
in
out
out
push
sbb
rcl
rcrl
fs
inc
aam
fs
inc
push
xlat
fcomp
nop
inc
push
sbb
fcmovnu
inc
push
sbb
filds
sbb
rol
sbb
nop
inc
push
enter
push
sbb
lret
int3
inc
push
sbb
iret
push
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
mov
mov
sbb
mov
mov
sub
shr
div
inc
mov
dec
gs
add
pop
cmp
scas
xor
mov
mov
les
lods
and
int3
or
daa
adc
and
sbb
rorl
xchg
mov
or
adc
mov
adc
add
mov
pop
adc
mov
cwtl
cmp
and
or
shll
shl
aas
adc
adc
adc
inc
xor
rcrl
push
fldt
movl
adc
inc
lcall
push
cmp
ja
sub
mov
inc
inc
dec
fsubrp
mov
cmp
add
add
dec
jmp
add
sti
inc
adc
add
cmpsl
jne
xor
jne
inc
lahf
push
push
push
or
or
sbb
shll
cmp
daa
je
mov
or
and
or
dec
mov
and
jg
out
and
sti
je
movzbl
mov
xlat
sub
pop
push
scas
mov
add
mov
lret
test
popa
out
inc
jno
cwtl
movsb
das
mov
pusha
xchg
lock
sub
pop
ret
movnti
mov
mov
adc
enter
mov
lcall
addl
sbb
idiv
adc
cmp
jl
cmpb
jbe
or
lcall
dec
adc
clc
adc
or
xor
int3
cmp
or
in
test
decb
add
sub
jb
or
fsubs
jae
sbb
jl
inc
mov
mov
rolb
pop
stc
fwait
in
sub
or
jae
adc
adc
inc
dec
jne
cmp
test
push
sbb
mov
ds
inc
mov
inc
ret
jo
adc
xchg
cmp
xchg
jmp
add
pop
and
adc
sbb
mov
mov
add
fwait
clc
sbb
pushl
push
js
push
dec
xor
mov
test
sete
fimull
mov
push
xor
jp
neg
lods
or
mov
mov
addb
inc
cmp
add
or
les
lock
add
and
mov
jne
cmp
push
and
or
loope
mov
andb
negb
mov
push
les
xor
lcall
mov
sub
nop
inc
dec
cmp
dec
shll
pop
inc
jmp
inc
xor
arpl
lcall
or
push
adc
push
shlb
sub
sbb
fldl
scas
inc
push
pop
push
inc
mov
mov
jnp
cld
push
icebp
pop
mov
ljmp
shrb
sbb
je
es
mull
dec
in
adc
pop
negl
adc
xor
aas
dec
aaa
idivb
xor
pop
and
jmp
adc
adc
push
jne
lods
pop
mov
dec
loopne
vmread
gs
inc
inc
mov
fistpll
sub
jae
sbb
test
sbb
aas
adc
and
test
push
and
and
and
lahf
subb
es
sbb
xchg
lods
or
lret
in
or
xor
outsb
push
mov
push
dec
add
mov
push
les
pop
jno
xor
je
or
or
mov
lods
stos
repz
xchg
sbb
fdivrl
adc
cli
adc
push
ret
enter
neg
sbb
add
imul
push
repz
out
pusha
or
push
mov
test
cmp
jne
dec
dec
push
mov
jmp
int3
adc
mov
fnsave
mov
inc
sbb
outsb
jbe
push
push
mov
dec
push
dec
dec
daa
mov
xchg
cmpl
scas
xchg
inc
or
clc
mov
aad
inc
jbe
stos
dec
jne
mov
inc
jbe
test
subb
add
scas
test
xor
xor
clc
mov
iret
mov
sub
push
jne
or
sub
add
pop
cmp
ja
xchg
mov
lock
arpl
mov
sub
jmp
loopne
jg
clc
cmp
jle
lods
pop
jne
mov
test
pop
les
je
sub
jne
pop
dec
adc
dec
fs
pop
lds
cwtl
lock
clc
add
jae
jne
push
or
add
xchg
jmp
and
push
inc
sub
fldt
fucomip
push
xor
inc
sbbl
inc
in
mov
add
mov
sbbl
popa
or
enter
jbe
jo
and
xchg
and
pop
and
daa
or
shll
data16
sbb
sbb
push
aas
jg
lock
dec
mov
ret
adcl
test
mov
or
dec
cmpsb
add
stos
jbe
mov
mov
add
mov
dec
lods
jle
push
push
pop
iret
inc
shlb
mov
push
stos
jo
dec
sbb
inc
cmp
push
in
jg
divl
inc
les
loope
movzwl
shl
add
or
stc
shr
add
aam
pop
in
fwait
mov
mov
sub
leave
sub
rcr
leave
mov
aas
mov
or
jo
fmull
pop
loopne
and
hlt
fstsw
pop
pop
fsubrs
or
add
adcb
jae
cmpw
adc
xor
jbe
fwait
add
sub
lock
and
xacquire
ss
adcl
loop
or
or
out
push
in
sub
xor
lods
insl
fldl
sbb
push
ljmp
cmpsl
imul
dec
mov
adc
popa
stos
inc
bnd
and
lcall
lea
adc
mov
and
subb
adc
sub
xor
or
adc
sbb
and
push
xchg
repnz
push
fcomp
daa
not
mov
dec
lret
inc
pop
pop
out
ss
lea
sbb
adc
jg
push
pop
inc
cs
lret
or
divl
mov
add
xchg
movb
in
push
sbb
push
mov
insb
fwait
xor
jle
dec
xlat
xor
lods
mov
mov
shl
int
out
aas
xchg
and
xor
or
fldenv
je
sub
push
push
dec
ss
or
fdivrs
ljmp
adc
mov
mov
sahf
pop
cmp
clc
dec
daa
push
aas
inc
xor
inc
add
sub
je
mov
mov
cmpxchg
push
sub
jbe
push
lea
lods
stos
push
aad
and
mov
push
xchg
mov
test
shlb
dec
pop
test
test
sub
icebp
add
push
leave
mov
mov
add
pop
push
dec
inc
scas
cltd
xor
rcrb
pop
inc
pusha
push
add
jge
imul
push
cmp
fildl
pop
inc
addr16
fcoms
stos
xchg
sbb
pop
jle
pop
loopne
cmp
or
xchg
sbb
inc
out
pop
fwait
and
pop
and
ret
push
movsl
pop
or
cmpsl
ret
cmc
xchg
popf
call
ja
push
icebp
and
scas
jns
into
add
sbb
xchg
lods
imul
lock
push
cmp
fcoms
mov
scas
lods
stos
and
mov
and
test
or
imulb
movsb
bnd
mov
or
sub
arpl
outsb
out
dec
insb
sbb
dec
adc
lods
jmp
or
mov
mov
cs
mov
fcompl
and
outsl
pop
fsubrs
jae
fildl
sub
jae
mov
xchg
or
push
mov
gs
and
outsb
xlat
xchg
js
mov
imul
aaa
repnz
sub
xor
cmp
imul
outsl
xor
ja
dec
divl
add
pop
sub
push
stos
testb
adc
pop
pop
add
into
mov
ret
je
fsubrl
xchg
lods
mov
pop
pop
stos
push
xor
mov
dec
mov
insl
jl
popf
push
jge
jb
pop
aad
mov
imul
xor
xor
push
imul
shrb
jb
outsl
sti
dec
fsubrl
ror
push
cmp
je
add
je
pop
jne
pop
aaa
push
stos
mov
push
mov
and
mov
inc
dec
mov
ret
push
lea
fisttpl
or
cmp
pop
pop
sub
push
or
push
sub
push
loopne
jb
pop
jo
or
jbe
mov
aaa
sar
ret
loope
push
mov
in
jne
pop
xchg
cwtl
outsl
mov
pushf
std
or
hlt
jmp
xor
and
insl
leave
fsubrl
jo
ja
int3
mov
push
sbb
aaa
lock
xchg
mov
push
jb
jmp
xor
jl
pusha
mov
cmp
ja
lods
inc
addl
cmp
dec
mov
movsl
lret
mov
pop
push
in
in
lea
jmp
fistpll
add
mov
inc
je
mov
push
inc
je
mov
fucom
xchg
add
adc
dec
cmp
fidivs
cmp
jbe
mov
mov
aam
cmp
mov
in
mov
push
push
mov
repnz
inc
jmp
rorl
push
fsubs
jo
aas
pop
ret
stos
push
pop
cwtl
nop
mov
push
inc
fstpt
rcll
push
push
es
insb
mov
mov
psadbw
icebp
mov
xor
sbb
mov
xorb
fimuls
mov
xchg
xchg
xor
add
mov
addr16
daa
popf
clc
out
push
fcmove
xor
inc
xchg
xorb
lea
sub
imul
sti
or
lea
imul
test
or
xor
xor
fidivl
popa
out
andb
in
mov
fldcw
out
inc
fnsave
or
inc
scas
sub
fistpll
pop
fwait
sti
sbb
data16
neg
rolb
inc
sbb
jmp
je
mov
or
adc
pop
lods
jb
loopne
jnp
inc
sub
mov
sbb
add
stc
or
push
mov
gs
stos
das
add
rolb
shlb
jbe
fnstenv
call
mov
add
or
sbb
pop
int3
insb
in
out
add
push
xlat
in
add
hlt
inc
ds
sbb
out
popa
adcl
iret
sub
jo
fcoml
lock
mov
inc
dec
enter
push
add
pushw
add
adc
notb
mov
aam
jbe
push
sbb
add
mov
adc
call
pop
or
mov
sbb
xor
jns
dec
inc
cld
inc
xchg
test
outsb
sbb
add
ficoms
aam
or
inc
lock
mov
mov
push
loopne
lods
lea
and
pop
jo
cmpsb
incb
jb
ja
jge
ja
adc
js
test
xchg
insl
jb
sti
insb
js
data16
lcall
out
ja
or
jle
xchg
add
inc
dec
ljmp
call
imul
jnp
rcll
add
repnz
fcmovnb
fisubrl
lock
lods
add
xor
add
out
jae
xchg
inc
jne
call
daa
mov
nop
adc
nop
adc
or
leave
sub
dec
aas
orl
push
test
add
lods
loopne
sbb
jg
movw
pop
xchg
fiaddl
add
dec
je
pop
loope
cmc
push
jmp
mov
lret
jl
sub
arpl
notb
jge
lcall
xchg
or
lods
mov
dec
fldt
adc
lcall
dec
notb
sbb
outsb
jb
add
mov
push
sbb
adc
daa
xor
lock
fdivl
adc
cmp
dec
dec
dec
mov
sub
jb
or
sub
sbb
int3
fcoml
add
clc
loop
cmp
in
ja
add
dec
and
add
and
sbb
sbb
inc
aad
and
ret
sub
push
push
sub
iret
repz
push
adc
xor
popf
sub
mov
adc
insb
fstpl
es
fwait
or
fisttpl
inc
jb
mov
push
jo
push
dec
jo
mov
sub
add
push
shlb
repnz
je
adc
add
xor
xchg
cmc
cmp
mov
aaa
dec
js
arpl
lea
inc
dec
arpl
adc
pop
mov
sub
adc
mov
add
inc
add
xor
call
mov
inc
adc
mov
cmp
add
dec
or
ret
sub
pop
adcl
xchg
call
std
jb
hlt
popa
and
add
push
pop
jnp
fwait
push
mov
inc
dec
pop
fs
add
mov
xchg
js
mov
add
mov
or
jo
xor
movsb
pop
std
stc
xor
xchg
xor
outsb
nop
sbb
sub
in
cmp
add
aas
push
inc
insb
enter
mov
sub
pop
add
loope
mov
pop
insl
sbb
std
or
rorl
xchg
mov
cmp
lock
or
mov
bound
mov
mov
ljmp
sbb
and
je
test
cltd
dec
pop
or
pop
or
std
cmp
jle
mov
or
inc
scas
bt
fldt
repnz
add
dec
push
xor
popf
mov
sub
xor
mov
in
sbb
sbbb
jle
lock
in
ja
mov
jmp
mov
cmp
leave
add
add
push
sbb
cmp
push
xchg
xchg
aas
mov
mov
mov
xchg
adc
xor
addr16
pop
jnp
roll
add
gs
imull
jb
xor
scas
leave
push
add
in
push
and
cwtl
add
push
and
lock
dec
das
jp
fwait
xor
mov
and
rcrb
mov
jae
and
mov
sub
nopl
mov
push
rorl
fs
es
das
mov
sahf
gs
rcrb
in
leave
jmp
ja
fsubrs
rcll
nop
add
loopne
ja
test
xor
add
and
call
adc
mull
jp
pusha
mov
jmp
push
sbb
repnz
in
aas
popa
add
adc
mov
lcall
cld
push
cmp
inc
inc
push
sbb
sub
sbb
lock
jnp
inc
jecxz
mov
jg
sbb
jmp
out
aaa
xorl
push
insl
das
fs
fs
jbe
or
add
fs
divl
das
jnp
insl
or
ljmp
in
jg
add
jle
inc
dec
push
dec
add
fisubl
mov
and
cmp
jp
leave
orl
jae
mov
add
or
adc
ror
push
insb
outsl
or
or
rclb
addl
inc
mov
test
aad
int
pusha
clc
test
push
sbb
adc
cmpl
sbb
out
std
lcall
and
dec
mov
data16
rcrb
cmp
and
jl
inc
popf
out
pop
or
sub
pop
sbb
aad
psllq
inc
icebp
push
sbb
pop
mov
add
xor
inc
add
push
push
in
and
push
inc
mov
fiaddl
mov
bound
jnp
sub
div
mov
xchg
jno
xor
add
imul
call
sub
or
add
add
int
notl
adc
mov
sbb
lahf
cmp
mov
jle
andb
jg
stos
testl
rorl
mov
lea
inc
jmp
mov
add
sbb
movsb
mov
adcl
imul
dec
xor
dec
jbe
xchg
or
and
or
adc
pop
push
hlt
xor
push
mov
repz
pop
inc
adc
cmp
or
or
xchg
push
inc
sub
jle
mov
and
pop
xchg
cld
push
or
mov
pop
mov
pop
rclb
mov
pop
nop
sbb
jnp
inc
mov
fcoms
or
fildl
fs
test
lea
jns
clc
xchg
aad
fwait
mov
mov
lods
jne
daa
cmpb
push
xor
rorb
or
popa
mov
mov
and
mov
fistl
inc
test
push
jg
iret
inc
cmc
xchg
cmp
xchg
pop
cmp
in
es
scas
subb
je
jecxz
sti
lret
jp
pop
mov
mov
dec
hlt
aaa
jg
xor
inc
or
inc
xchg
pushf
mov
gs
sahf
xchg
mov
pop
lods
xchg
add
in
sarl
rorb
or
cmovp
clc
fistpll
mov
jmp
mov
add
add
mov
mov
iret
jmp
insb
sbb
adc
push
fbstp
loopne
xchg
add
loopne
cld
ss
xchg
movsb
or
inc
daa
or
jno
mov
inc
repz
jo
pop
push
pop
or
call
sub
mov
push
lock
es
in
cltd
in
add
mov
imul
add
fs
mov
pop
xor
dec
cwtl
nop
jecxz
pop
xchg
nop
xchg
pushf
xor
lahf
or
fwait
push
js
es
mov
xor
inc
push
sbb
pop
push
push
enter
cmp
je
jmp
xor
inc
xor
xor
xor
and
sbb
mov
add
mov
or
or
push
push
lahf
xchg
subl
roll
out
or
icebp
lds
mov
adc
add
daa
fildl
repnz
lfs
ret
inc
repnz
jno
sbb
sbb
loopne
mov
push
mov
lock
inc
fistl
in
jo
inc
push
je
sub
imul
mov
sub
mov
mov
data16
lahf
xchg
int
or
enter
sub
mov
push
aam
imul
nop
lea
fxtract
and
pop
xchg
cwtl
sbb
cmp
pushf
pop
mov
cmp
movsb
fs
fstpl
push
mov
in
xor
xchg
in
xlat
pusha
add
mov
jbe
imul
nop
sbb
ret
mov
cld
out
js
add
add
into
or
and
mov
fst
or
mov
ja
push
xor
and
je
sti
lock
pop
lock
lods
push
pusha
xchg
cld
push
insl
xor
xchg
jl
and
cwtl
lods
jno
cld
ds
repnz
mov
shlb
iretw
push
rcrl
test
sbb
pop
out
or
and
mov
fwait
iret
out
rorb
xchg
pusha
call
leave
leave
sarb
std
xchg
sti
or
pop
out
movb
or
inc
adc
xor
aaa
rclb
jb
sbb
or
and
call
mov
mov
pop
mov
rorl
or
rorb
aaa
and
leave
pop
or
mov
mov
or
sub
xchg
addb
pop
outsl
add
adc
rolb
jmp
mov
push
cmp
xlat
test
jle
mov
jmp
cmp
adc
xchg
in
and
dec
inc
fsubs
pop
and
sbb
xchg
mov
fwait
mov
sbbb
sub
and
insb
mov
add
and
add
sub
cmp
jg
mov
ljmp
xchg
setne
lahf
mov
lods
push
mov
and
push
lock
enter
sub
inc
das
popa
shrl
out
add
icebp
xchg
rcrb
ljmp
clc
push
pop
cld
pop
lds
test
push
add
int3
int
mov
insl
les
test
adc
jl
in
aam
xchg
adc
mov
in
inc
and
fiaddl
and
sbb
sbb
adc
inc
dec
jge
nop
mov
pop
int3
testb
insb
pushf
sbb
int
dec
xorl
push
iret
ds
jle
in
je
cmpb
push
test
dec
stc
decl
imul
clc
movsb
adc
rorb
sub
add
push
push
mov
and
xor
push
cwtl
je
ret
adc
push
cmpl
sarb
cli
jle
mov
int3
sub
sbb
mov
push
lock
mov
adc
notb
repz
sbbb
push
dec
mov
ss
fwait
sub
jb
jo
out
movsl
jbe
inc
inc
and
jne
cmc
cmp
mov
insb
sub
outsb
mov
movl
jp
fldt
or
or
movsb
mov
pushw
push
shlb
mov
clc
and
xchg
dec
mov
stc
or
sub
and
sub
out
mov
mov
inc
push
mov
jg
and
pop
xor
push
inc
mov
or
stos
pop
decb
dec
jne
jne
mov
push
test
adc
stc
sub
inc
jne
push
push
pop
call
popa
inc
ss
pushf
nop
push
aas
xor
inc
or
dec
inc
in
cmp
lock
add
mov
xchg
in
push
jmp
aaa
mov
adc
xor
pushf
popa
and
xchg
xor
push
sbb
outsl
jp
sbb
or
movl
repz
mov
adc
xor
out
imul
lods
jo
imul
imul
cmpsb
imul
lock
loopne
dec
shll
sarb
shll
xor
sub
shll
cwtl
adc
shll
cmp
dec
sarl
jo
push
in
pop
pop
sbb
jnp
add
or
or
mov
jae
daa
mov
adc
subb
icebp
inc
dec
inc
dec
adc
add
daa
loopne
adc
outsb
sub
cmpl
jle
inc
pop
pop
adc
mov
push
dec
jecxz
xor
outsb
aam
cs
xchg
or
ficompl
sub
cmp
les
jg
dec
sahf
inc
pushl
movzbl
cmp
je
add
or
mov
mov
push
jle
mov
add
push
fildl
sbb
lahf
adc
call
dec
mov
jno
insb
or
ret
and
or
sti
mov
in
cmp
jg
cmp
jl
or
shrb
es
xchg
inc
mov
fstl
outsb
psllq
je
insb
mov
sbb
loopne
stos
or
pop
and
sub
shlb
out
add
outsl
sub
cld
mov
sub
mov
fistpll
add
add
inc
mov
mov
fstl
shrb
inc
jge
cmpsb
sbb
neg
jmp
in
mov
stos
xchg
loop
and
sbb
xor
dec
or
in
mov
dec
lock
cmp
jne
pop
jb
xchg
adc
mov
xchg
cmpsb
add
add
dec
push
rorl
div
mov
inc
lea
addr16
std
dec
jne
mov
ljmp
idivb
or
jne
sub
test
inc
add
fisubs
lcall
rorl
sarb
jbe
mov
add
lea
aaa
ror
add
push
push
push
cmp
sub
jl
rcl
mov
nop
mov
loop
xor
fadd
fcmovne
hlt
pop
and
roll
inc
lods
fldln2
outsb
add
and
and
or
and
adc
mov
sub
sub
mov
add
adc
int
xlat
or
sbb
xor
mov
sub
inc
inc
lea
xor
pop
mov
or
or
adc
or
adc
or
adc
in
jp
lret
xchg
jecxz
dec
in
xchg
push
mov
loope
sub
sar
rolb
popa
stos
in
sub
shlb
je
add
jne
sbb
jle
cmp
aad
fdivl
mov
and
ret
sub
sub
push
xchg
jno
cmp
and
pusha
pop
add
cli
sub
insl
aaa
clc
jecxz
lods
cmp
mov
je
xchg
adc
mov
in
mov
or
and
fimull
mov
mov
rcrb
imul
out
ja
jno
push
mov
inc
push
fistl
xor
and
xor
jmp
fdivs
xor
cmp
mov
dec
je
inc
xlat
jmp
inc
jmp
shll
fiaddl
lret
cmpl
shrl
std
call
mov
cmpl
sub
xor
fdivs
add
in
xor
mov
xchg
outsb
subl
in
loopne
ret
jge
push
add
sub
stos
leave
adc
adc
add
stos
mov
dec
inc
shrb
and
aas
lock
mov
pop
cs
shll
jmp
daa
and
dec
shll
and
bndstx
mov
jmp
mov
in
das
ffree
adc
hlt
mov
cmp
jle
sub
int3
xor
cmpsl
inc
inc
xor
cmpsl
jp
push
stc
int3
add
sbb
pop
rorl
ret
fstl
mov
jl
pop
movsl
decl
jne
or
mov
stos
mov
in
adc
xchg
push
dec
adc
jle
jge
dec
push
mov
imul
stos
sar
mov
inc
mov
and
enter
imul
sbb
sbb
sbb
sbb
push
mov
push
insb
xchg
adc
or
pop
movsl
push
hlt
sub
sbb
sahf
add
movb
mov
fucomp
xor
fldt
popf
aas
imul
pop
sbb
clc
adc
fcmovnbe
ja
mov
push
inc
sub
cld
fistpl
fcomp
fwait
xchg
loop
fnsave
divl
inc
je
fisubrl
je
jne
lea
mov
pushl
into
shr
and
add
rorl
jmp
shrb
jns
sbbb
loopne
jge
es
call
jae
dec
cmp
jae
std
add
push
add
or
ja
jmp
outsl
jecxz
test
movsl
xor
mov
pusha
and
and
outsl
jns
push
or
ljmp
lea
pusha
push
dec
enter
int3
or
mov
jns
rcrl
add
jle
jmp
jbe
pushl
icebp
loope
pop
mov
cmpsl
sbb
jae
dec
add
or
fildll
jge
ja
mov
fidivl
negb
fwait
jbe
sbb
lcall
jne
enter
pop
dec
jne
jmp
mov
add
int
mov
pop
adc
push
and
hlt
ljmp
movb
cmpb
add
mov
xor
or
sti
push
lock
fclex
fldcw
test
lret
xchg
orb
mov
aad
and
inc
pop
cmp
push
sbb
push
cmp
je
std
mov
fisttps
roll
test
inc
rorl
test
xor
inc
pop
dec
add
loopne
add
aas
jmp
fstpt
fstsw
test
mov
rorl
das
arpl
jb
lods
test
icebp
call
lods
sub
add
jae
fimull
and
fiaddl
inc
ljmp
push
mov
stc
xchg
sub
inc
imul
popl
ljmp
mov
cmpsl
testl
test
xor
mov
xchg
aam
pop
sbb
sar
sarb
nop
cmp
sub
enter
and
push
lods
in
hlt
hlt
adc
pop
cmc
subb
xchg
dec
in
fdivs
dec
es
rcl
enter
lock
or
mov
incb
add
mov
faddl
cmp
insb
mov
xchg
add
cltd
pop
jae
xchg
pushf
in
test
cmc
mov
push
add
ret
mov
pop
movsb
movsl
cmpsb
orl
cmpsl
test
stos
or
enter
lods
xor
and
and
and
xchg
orl
xchg
cwtl
cltd
lcall
popf
xor
and
and
and
xchg
mov
and
and
and
and
jbe
or
enter
jp
xor
and
jge
enter
jg
enter
popa
bound
orl
orw
addr16
enter
insl
xor
and
and
and
push
orl
push
pop
pop
pop
or
enter
pop
xor
and
and
and
inc
nop
xchg
xor
inc
dec
dec
inc
push
sbb
dec
cmp
nop
dec
dec
xchg
sbb
and
bound
lea
add
daa
aas
cmp
pop
loop
inc
push
dec
add
mov
lea
jl
pop
mov
push
pop
adc
outsb
push
insl
lock
test
add
jle
ficoml
inc
push
add
clc
jle
aad
add
loopne
rorl
rol
push
ror
xor
mov
pop
dec
sbb
roll
pop
or
or
add
adc
or
push
or
stos
cmp
pushf
mov
adc
sbb
sub
and
jnp
sub
aas
and
cmp
jmp
sbb
push
mov
sbb
lds
hlt
push
mov
maxps
cmp
pop
test
insl
das
mov
dec
incl
pop
decb
ja
mov
adc
sbb
out
shr
sbb
add
add
subb
pop
lcall
pop
adc
out
mov
jo
pop
arpl
or
sbb
add
mov
jle
ss
fisttpl
lcall
mov
mov
mov
cmpb
dec
sar
divb
jb
xor
xor
push
out
push
jns
lock
mov
push
into
pop
push
loop
mov
mov
jb
incl
cmp
pop
pop
mov
outsb
movsl
call
add
out
call
cs
mov
lods
cmp
dec
mov
stos
mov
sub
add
xor
enter
inc
pop
and
mov
xchg
add
mov
pop
fwait
sub
fwait
clc
leave
test
jle
sahf
inc
xchg
dec
add
push
cwtl
inc
sbb
gs
mov
xor
cmp
aam
and
mov
mov
mov
sbbb
pop
mov
mov
push
test
mov
pop
mov
push
addl
bound
shl
outsl
mov
shrl
lret
sub
je
mov
xchg
int
adc
or
mov
pop
add
sub
lcall
ret
fldl
fstpt
ret
xor
ljmp
lea
popa
mov
mov
adcb
pushl
pushl
jae
inc
inc
sti
fildl
sbb
adc
xchg
jecxz
adc
jp
cmpb
xchg
pop
jb
imul
adcb
or
imul
fildll
jl
or
jne
je
data16
or
fidivrs
xor
nop
les
add
dec
sbb
mov
outsl
adc
add
nop
loopne
or
outsl
xor
xor
or
push
cmp
or
or
mov
mov
and
and
dec
insl
insl
popa
mov
add
and
add
popa
insb
add
pop
inc
in
or
in
lods
insb
insb
sub
and
mov
insb
lret
inc
jb
mov
jb
insl
mov
push
fmuls
insb
sub
cmp
adc
lcall
cs
pop
fldcw
mov
sub
pop
dec
jo
dec
je
xor
stos
fs
insb
gs
ss
xor
jnp
sbb
in
dec
nop
or
dec
mov
repnz
xchg
push
jb
sub
test
pop
dec
pop
lea
mov
popa
jae
jnp
outsl
jne
xchg
icebp
inc
fsts
mov
fs
out
pop
clc
dec
mov
aaa
dec
imul
inc
mov
inc
mov
and
je
nop
nop
xchg
cmpb
adc
sbb
mov
push
in
aad
sub
inc
shll
fisubs
and
cwtl
push
xor
bswap
add
in
lret
xchg
test
push
mov
pop
lahf
adc
mov
inc
adc
dec
scas
fsubs
sub
lds
dec
lcall
pushl
pop
and
leave
dec
or
pop
repz
fs
je
je
out
adc
or
lret
insb
adc
fsts
or
sbb
inc
add
int3
mov
int
in
add
jmp
dec
jae
or
addr16
mov
js
or
movsl
ss
cwtl
mov
mov
cmovns
cmp
xor
jo
or
pusha
xchg
jge
jg
das
pushf
jae
push
rclb
sahf
cmpsb
and
cmp
pop
fsubr
mov
ret
lock
mov
pop
fsts
or
cmp
dec
sarl
mov
rclb
je
jl
ss
scas
aam
sbb
dec
mov
das
flds
divl
lret
data16
push
sub
addr16
test
pop
das
mov
into
insl
mov
add
insb
cmp
in
fcomp
bound
adc
cmp
popf
push
lock
mov
inc
clc
ftst
mov
or
dec
pop
insl
sbb
add
mov
and
unpcklps
and
test
insb
xchg
fisttpl
lods
fldl
sbb
and
dec
call
fbstp
loopne
loope
hlt
loope
fmull
lods
fstpt
and
clc
fidivs
pop
xlat
sub
loop
sbb
mov
mov
loopne
and
xor
mov
jle
xor
add
sub
loopne
enter
lock
dec
sarl
add
mov
ljmp
ret
mov
xchg
add
mov
in
sub
push
pop
pushf
pop
stc
adc
lcall
or
mov
push
inc
dec
xchg
addr16
sub
mov
cs
adc
pop
mov
xchg
out
out
out
out
inc
fld
mov
and
das
cmp
js
popf
or
cmp
adc
xchg
pop
shlb
push
xchg
jecxz
ljmp
das
popa
sbb
mov
test
in
imul
cld
test
or
nop
rorb
inc
mov
call
push
mov
xchg
mov
iret
pushf
mov
fldt
int3
add
jae
xchg
les
gs
and
or
in
inc
enter
cmp
push
inc
mov
mov
xor
addb
adc
pop
dec
jp
mov
out
mov
mov
sti
insl
add
stc
clc
push
push
decl
mov
push
push
ljmp
aaa
xor
cmp
shll
pop
pop
push
xlat
popl
add
or
js
sti
cs
lret
pop
adc
jecxz
dec
push
mov
add
sbb
push
cmp
sti
inc
stos
sahf
incl
add
pop
call
push
popa
scas
cld
arpl
push
dec
fs
mov
call
mov
pop
push
sti
push
add
add
je
stos
cmp
push
sbb
int3
mov
push
push
push
add
inc
cvttps2pi
rcrl
add
adc
pop
jbe
add
inc
aam
or
pop
sbb
add
sbb
dec
push
in
ljmp
call
shrl
inc
or
xor
pop
pop
or
adc
pop
and
orl
call
fists
jo
dec
test
jl
inc
repz
add
mov
mov
sbb
jne
adc
adc
or
push
push
dec
jl
xor
inc
mov
lock
sbbb
scas
clc
add
flds
pop
or
ja
in
or
push
dec
dec
ss
jl
jle
xor
sbb
mov
scas
push
in
movswl
dec
jp
inc
negb
add
inc
xchg
mov
test
fmuls
sub
mov
pop
mov
jae
pop
sub
dec
jne
push
push
adc
or
add
scas
pop
xchg
cmp
mov
mov
pop
aad
sti
lret
jo
pop
int3
sarl
idivb
stc
fldt
sarl
fs
ret
cld
cld
movsl
sub
inc
stos
hlt
adc
sti
or
xchg
icebp
int3
ljmp
and
jb
aad
mov
sti
jge
arpl
mov
cmp
out
mov
mov
cmp
outsb
shlb
adc
in
hlt
xchg
fmulp
mov
das
jns
inc
mov
sub
repnz
add
clc
mov
repz
or
fstpt
xor
in
cmc
fistpl
and
pop
or
sti
lcall
sbb
lods
jb
pop
adc
jb
cmp
jnp
add
pushl
mov
ret
jbe
lret
mov
insb
arpl
inc
inc
rolb
leave
lods
arpl
cmp
inc
cmp
lods
jmp
push
fs
mov
movd
inc
sub
andb
or
or
adc
pop
or
imul
lcall
shll
jle
fs
cmpsb
fisttpl
aaa
mov
clc
cmpsb
push
mov
add
out
outsb
je
push
dec
sub
or
add
test
or
jo
aas
sarb
pop
rcrb
cmp
jne
jmp
pusha
mov
mov
jmp
data16
call
add
cmpb
rclb
les
sbb
mov
and
add
push
sbb
and
fadds
loop
ret
push
std
mov
loop
sub
push
jp
out
lret
popf
ret
jo
lods
push
and
sub
add
sbb
cwtl
add
pop
mov
add
sbb
rorb
adc
or
repz
fisubrs
jmp
pop
insb
push
mov
xchg
in
mov
mov
enter
xchg
dec
shll
mov
les
push
xchg
or
cmp
movsb
movsl
in
adc
insl
pushf
mov
mov
xor
sub
cmp
dec
cld
inc
stos
loopne
out
sbb
fadds
adc
jo
hlt
push
jne
movsb
pop
push
cmpl
bound
fbld
mov
and
cli
push
cmp
out
adc
pop
repz
out
loop
lods
and
mov
add
push
mov
adc
mov
cld
jae
jne
xchg
icebp
or
dec
cmp
incl
mov
loopne
test
popa
test
or
mov
sub
bound
adc
jl
adc
dec
mov
cli
mov
mov
ss
jl
outsl
adc
push
jge
mov
shl
jo
adc
scas
mov
mov
cmc
orb
inc
adc
in
pop
adc
in
add
adc
mov
sarl
add
and
inc
adc
inc
ret
xor
ret
sbb
pop
mov
mov
mov
orl
mov
or
adc
jle
pop
popa
adcl
mov
scas
mov
inc
jmp
enter
add
adc
insb
insb
add
or
leave
lahf
roll
xchg
pop
inc
jb
popa
shrb
xor
clc
push
sub
cmpsl
push
mov
lock
cmpsl
out
or
cmp
loope
mov
xbegin
repz
cmpsl
sub
sbb
data16
add
jecxz
aam
movsl
adc
cmpl
and
push
jmp
test
orb
xor
jle
outsl
fwait
push
xor
je
dec
shl
sub
inc
adc
push
sbb
push
inc
dec
inc
mov
fdivs
jb
out
xor
inc
jle
adc
push
sub
sub
sub
mov
xor
xchg
cmp
jbe
fisttps
inc
or
push
cmp
cmpsb
xlat
xor
add
enter
mov
add
jo
push
test
outsl
mov
mov
jo
dec
add
leave
cmc
adc
mov
and
cmp
xchg
cmpsl
cld
cmp
pop
add
loopne
mov
fdivs
inc
xchg
daa
push
out
and
mov
test
inc
pop
jne,pt
cmp
jge
lret
and
pop
mov
xchg
cmp
sub
or
dec
and
dec
mov
inc
test
xchg
pop
cmp
push
js
or
dec
mov
lret
mov
add
lods
xchg
jno
mov
jg
jecxz
lret
sbb
add
xor
sub
jecxz
lods
jl
andb
jge
push
les
and
dec
in
jne
pop
pop
sar
outsl
shl
or
adc
cmp
je
jne
mov
xchg
rorb
and
push
mov
push
sub
pusha
xchg
sub
or
out
aad
or
notl
adc
mov
mov
push
cmp
jae
mov
fcmovne
je
stos
inc
mov
and
aam
dec
add
mov
jnp
push
inc
inc
sub
add
mov
mov
dec
inc
xchg
and
adc
fisubrs
or
lock
cli
pop
ja
and
bt
jb
clc
add
insb
add
ret
ret
or
push
add
out
incl
and
inc
decl
jne
bound
dec
cmp
mov
fstl
arpl
push
xchg
add
stos
arpl
hlt
aaa
mov
lds
lds
or
iret
int
sbb
mov
lods
es
push
in
scas
in
into
leave
pop
lock
test
pop
push
lods
into
add
add
leave
addr16
mov
pop
andl
call
jle
imul
test
into
loopne
mov
repz
mov
push
inc
dec
ss
daa
or
xchg
sbb
loop
into
aaa
js
add
cmp
add
nop
into
pusha
add
xor
loopne
jo
and
enter
push
or
sub
or
push
inc
add
addl
pop
rcrl
lret
arpl
xchg
ss
lods
cmp
dec
hlt
nop
fbstp
and
jmp
stc
and
call
pop
inc
dec
gs
call
lret
mov
push
xchg
pushf
mov
mov
push
enter
popa
xchg
xchg
mov
ret
loope
add
mov
sbbl
dec
and
mov
xor
and
aad
xorb
out
popf
nop
pop
inc
push
rol
aam
cmp
andb
jns
sub
lea
mov
cmp
push
adc
add
xchg
mov
pop
pop
sbb
repnz
pop
inc
sub
repnz
rol
nop
add
enter
rcr
dec
xchg
add
ret
daa
mov
add
mov
mov
mov
add
fpatan
xchg
cld
cmp
rorb
cmpxchg
jp
arpl
add
or
dec
xor
and
mov
cmpsb
pop
push
jo
xchg
mov
in
mov
clc
movsb
dec
xor
and
in
add
adc
dec
lock
ret
loop
mov
sbb
lcall
push
jle
pop
mov
push
loope
pop
adc
mov
adc
stos
or
and
js
and
sbb
xor
mov
pop
sub
lods
push
jns
in
cmp
ret
pop
push
repnz
xchg
or
cmp
movb
cld
lock
pop
in
xor
in
jno
adc
or
shll
dec
inc
shr
adc
call
dec
ret
mov
mov
inc
push
mov
fbld
pusha
and
inc
adc
push
mov
leave
mov
sbb
push
lock
mov
dec
sbb
movsb
dec
xchg
and
and
dec
shrl
jns
nop
imul
lock
xchg
pop
xlat
sub
sbbl
jne
int
lock
push
and
jns
push
imul
shll
arpl
or
sub
adc
aam
mov
orb
jne
xor
inc
les
inc
int
mov
and
add
rolb
fdivr
and
filds
inc
lock
lret
imul
inc
inc
in
cmp
xchg
or
or
cmp
iret
xchg
ffreep
add
push
or
enter
or
sahf
pop
inc
or
aad
cmp
push
sbb
and
or
cmc
xor
inc
xor
sbb
or
rcll
aad
shll
sub
mov
mov
cmc
pop
push
or
int
sbb
xor
cmpsb
push
adc
lret
inc
xchg
rorl
mov
adc
std
pop
sbb
xchg
aad
push
cmpsl
sbbb
jae
pop
jbe
adc
or
sub
ror
dec
jp
lock
js
or
loopne
jb
decb
gs
and
rolb
fmull
xor
lock
clc
je
movb
or
xchg
in
xchg
testl
add
fildll
or
or
and
setae
sub
xlat
push
adc
iret
xlat
and
dec
and
sub
loopne
mov
adc
les
and
sbb
enter
sti
xlat
nop
or
xor
xchg
push
leave
or
push
nop
fsubr
xchg
mov
fcomp
adc
push
adc
mov
arpl
sbb
je
sub
adc
addr16
cmp
push
mov
xchg
das
fldcw
clc
mov
ret
in
xor
adc
test
add
jecxz
mov
cmp
es
fisttps
out
pop
sub
cmovb
incb
mov
jne
add
add
leave
loop
fincstp
adc
fisubrl
add
sbb
push
push
inc
dec
mov
enter
push
push
jge
push
shlb
mov
and
and
dec
fistl
jg
cmp
enterw
shll
and
jg
sub
cmp
outsl
mov
enter
jnp
inc
cmp
test
repz
js
add
js
mov
stos
sub
enter
xchg
lods
sbb
and
ret
push
stc
ret
or
mov
iret
xorb
push
mov
sub
push
mov
fmuls
push
movsl
pop
rolb
and
jnp
pop
xchg
gs
sub
adc
ficompl
sub
dec
inc
cmp
xor
rsqrtps
jo
jns
mov
fcompl
jl
in
sub
imul
pushl
shll
or
add
adc
add
or
imul
lods
mov
xorb
jnp
xchg
fldl
inc
dec
fwait
int
test
push
cmp
jae
xor
fmuls
add
nop
push
sbb
add
aad
xorl
add
call
in
push
clc
call
clc
jge
dec
cmp
jl
lea
shr
lods
ds
fmuls
lea
lock
mov
call
add
repz
and
mov
addl
fisubrs
outsb
jb
pop
insb
xor
stc
adc
xchg
add
enter
adc
jl
jns
je
mov
sbb
dec
rorb
jb
cmp
test
sar
jbe
push
mov
cmp
or
pop
dec
sbb
inc
lret
les
addb
xor
mov
sub
dec
dec
jbe
pop
je
jb
arpl
in
cld
cmc
jmp
dec
push
jle
adc
adc
and
push
and
adc
inc
push
jmp
push
cwtl
xor
push
add
add
cmp
inc
enter
repz
movsb
pop
or
or
xor
loopne
mov
or
xchg
jbe
loopne
adc
fwait
andb
clc
jg
loope
jne
hlt
add
add
shr
mov
insl
and
dec
sarl
leave
enter
jl
adc
lock
or
add
addb
jge
cmp
jle
movsl
outsb
mov
cld
test
cmp
or
xchg
les
mov
jne
test
xor
lea
adc
clc
xchg
cwtl
sub
pop
sbb
call
jl
nopl
daa
mov
jecxz
and
sbb
pop
add
loop
pushf
or
stos
movsl
xchg
dec
push
fldenvs
sbb
adc
or
les
xor
lods
lock
add
adc
test
adc
rcrb
fstps
lret
cmpb
je
and
sarb
and
in
xchg
clc
xorb
loop
and
add
jecxz
cs
or
int3
sbb
xchg
mov
push
jo
ja
pop
adc
mov
sarb
dec
push
cltd
pusha
mov
add
adc
out
std
or
add
jle
mov
in
mov
in
loopne
inc
sub
xchg
jmp
roll
push
push
mov
add
cmp
adcl
cld
jo
fidivs
leave
test
dec
es
loop
cmpsl
inc
sbb
test
or
test
pop
movsb
fistl
fcomp
int3
xchg
mov
xchg
cmp
in
jb
test
push
push
push
xor
in
aam
jb
mov
adc
mov
fwait
jne
mov
sbb
leave
adc
jmp
fsubs
sub
mov
dec
in
jmp
cmp
mov
in
sbb
ss
cmp
outsl
jno
xor
xchg
jnp
popa
jge
mov
nop
mov
or
nop
call
jmp
jbe
jnp
dec
xlat
inc
or
inc
cs
call
jns
in
push
mov
sub
adc
sti
aam
loopne
adc
adc
push
test
aas
sbb
jnp
inc
push
mov
inc
and
and
mov
not
pop
cmp
mov
and
fildl
insl
adc
add
fdiv
mov
xchg
fisubrl
mov
or
dec
add
jnp
stc
jmp
mov
add
add
or
je
test
sbb
pushf
push
in
jp
or
test
aam
cmovnp
daa
and
cmp
hlt
mov
adc
test
in
ret
push
shll
test
mov
inc
cmpl
pop
or
mov
loopne
out
inc
mov
inc
add
xor
les
stc
je
and
or
or
pop
fucomi
push
xor
mov
stos
sub
push
push
inc
cmp
fcom
or
sahf
dec
push
adc
dec
add
inc
seto
dec
mov
out
add
mov
push
or
jecxz
lret
xor
xor
add
or
sbb
psubusw
rclb
stc
adc
push
rolb
adc
mov
pop
dec
and
inc
lea
add
adc
mov
sub
push
xchg
adc
rorl
rcll
call
sub
inc
roll
nop
dec
fsubrl
call
fwait
and
jns
stos
aam
xchg
and
push
push
pop
pusha
sbb
dec
push
jecxz
push
cmp
add
mov
outsl
add
mov
out
cld
pop
sub
dec
ds
gs
sbb
jmp
pop
sbb
lret
inc
or
std
lret
fidivl
jo
mov
lret
adc
mov
or
or
lret
mov
orb
or
dec
add
inc
scas
js
notl
sub
js
ljmp
leave
add
pop
adc
push
push
jb
jo
sub
cwtl
lock
fisttpl
mov
dec
adc
cmp
mov
jl
and
or
adc
adc
js
add
mov
push
adc
test
and
push
mov
or
jge
jge
mov
cmc
mov
pop
out
les
add
xchg
mov
mov
or
xor
fldlg2
xchg
cmp
push
sbb
mov
or
mov
mov
jl
push
or
in
adc
popl
add
xlat
outsl
adcb
out
mov
xor
jo
cmp
sti
popf
pusha
push
inc
pop
outsb
add
and
fmuls
icebp
adc
sbb
add
in
or
into
pop
inc
mov
or
mov
clc
dec
mov
jg
fisttpl
shlb
dec
add
pop
add
push
pop
inc
sub
addr16
stos
aaa
lock
shll
dec
push
or
lds
sub
mov
mov
adc
sbb
xchg
ljmp
fnstcw
jne
adc
adc
add
ret
or
inc
jo
push
cld
xchg
fstpl
stc
in
inc
cmp
enter
pop
out
out
out
imul
push
dec
xor
mov
push
scas
mov
cmpsl
lods
cmp
js
sub
pop
xchg
xchg
and
daa
sbbl
sub
imul
mov
sbb
decl
or
ret
add
xchg
push
mov
je
lret
adc
push
adc
push
adc
pop
shrl
sti
jnp
cmp
cmp
test
jmp
sti
jle
or
jnp
fimull
decl
addb
inc
pop
add
test
mov
mov
pusha
mov
hlt
mov
in
hlt
lea
adc
push
inc
sbb
sbb
mov
int
and
mov
add
popf
mov
or
adc
mov
sub
adc
xchg
lahf
cmp
mov
adc
or
or
sub
pop
ss
mov
imul
mov
pop
dec
mov
or
pop
mov
pop
inc
xchg
mov
ss
mov
and
push
cmp
aam
lock
andb
loop
jne
cmp
rolb
mov
sub
lahf
rclb
ret
xorb
dec
lcall
js
daa
fimull
or
outsb
les
jl
adc
sbb
scas
fmull
inc
mov
mov
jmp
sbb
push
and
sbb
into
inc
das
inc
mov
adc
pushf
inc
jb
xchg
icebp
loope
dec
xchg
xor
imul
sbb
fwait
loope
jg
fsubl
ret
stos
add
xchg
add
push
inc
or
mov
inc
xlat
adc
incb
clc
fdivrp
inc
dec
jne
adc
cmp
xor
xlat
push
sub
sub
adc
push
adc
cwtl
movsb
nop
cmp
jbe
pop
mov
sub
lahf
test
aam
pop
ja
jl
cmp
mov
jbe
cmp
pop
fsts
lret
pop
pop
ret
pop
add
test
cld
into
and
pop
dec
es
bound
rcll
adc
cmp
scas
pop
add
add
xor
and
sub
int3
lret
out
cmp
repz
jp
gs
repz
ss
xor
cmp
jne
sub
fsubrl
and
sub
inc
fdiv
in
ret
daa
pop
dec
push
adc
inc
repz
adc
push
lods
loopne
jle
mov
ret
and
jmp
mov
pushf
fs
add
mov
inc
imul
movsb
sbb
loop
xor
stos
jmp
in
mov
inc
je
sbb
adc
int
repz
and
cmp
mov
mov
jne
or
bound
sbb
je
ret
jl
aam
push
or
clc
pop
or
lds
push
hlt
hlt
push
int3
xor
cmp
adc
adc
cmp
rorb
cmpsb
leave
mov
in
ret
stc
mov
jne
js
or
call
adc
mov
lock
jle
sbb
push
lock
shr
in
xchg
cmpl
mov
mov
dec
mov
lock
inc
mov
mov
fs
iret
cmc
enter
in
xchg
call
push
popa
fildl
loopne
stos
mov
adc
adc
jno
divl
add
ljmp
dec
hlt
in
call
or
sub
loopne
testl
dec
lock
negb
aaa
rclb
push
in
pop
jmp
sub
jle
in
pop
sbb
test
in
mov
nop
or
xor
sub
sbb
lock
in
lods
inc
nop
fbld
repz
lock
pusha
and
inc
imul
fwait
mov
and
push
mov
xor
xor
xchg
lods
cmp
push
shlb
dec
shll
pop
orl
xchg
xor
push
out
pop
push
push
cmp
divl
adc
push
jmp
mov
or
aam
ret
cs
iret
js
or
fsubp
loopne
loopne
lret
push
jb
movsl
loopne
cs
test
out
repnz
xor
push
inc
pop
jo
fstps
ljmp
jnp
clc
or
jb
dec
aaa
fs
fwait
sub
pop
push
cld
xor
js
data16
xchg
test
dec
ret
in
pop
lods
clc
sub
clc
or
and
or
mul
or
pop
add
add
xchg
sarb
jp
inc
daa
inc
mov
add
frstor
pop
dec
popf
insb
inc
xor
pop
fsubrl
mov
add
and
pop
adc
pop
dec
stc
leave
mov
movsb
mov
pusha
mov
stos
push
jno
push
aam
das
push
mov
dec
rorb
xchg
adc
orl
xor
mov
mov
out
mov
je
and
jmp
rclb
movsbl
lcall
mov
gs
lar
push
and
mov
sub
pop
xchg
mov
sti
add
lods
and
cmp
jne
xchg
and
mov
testb
or
mov
jo
lods
add
sbb
insl
add
and
sti
out
push
add
ljmp
push
push
mov
xor
cmpl
push
mov
and
nop
sub
add
mov
xor
dec
and
mov
loopne
int
in
mov
sti
loopne
add
sti
jae
sti
orb
or
mov
int3
sar
nop
mov
out
push
inc
push
mov
cld
mov
push
xchg
in
std
mov
stc
sbb
in
mov
adc
mov
fwait
hlt
sti
andb
jmp
inc
push
outsb
adcl
xor
scas
iret
stos
ss
arpl
ret
pop
mov
pop
stos
pushf
cmpb
in
mov
add
jne
mov
lock
adc
dec
jb
mov
jmp
pop
sbb
inc
stc
in
and
push
popf
iret
shll
jmp
sbb
pushf
mov
push
shll
pop
sbb
xchg
repnz
mov
decb
sub
mov
dec
enter
ret
insl
cmpb
icebp
mov
jg
cmp
inc
std
clc
or
cmp
xchg
push
push
dec
sbbb
adc
push
push
pop
add
int
sbb
or
adc
push
scas
shl
loope
and
inc
inc
vpunpckhdq
push
das
dec
ret
add
out
aam
jnp
es
in
aad
add
push
xchg
cs
es
and
push
dec
into
dec
fcoml
mov
stos
pop
mov
xor
push
cmp
inc
int3
popa
mov
ficompl
daa
lds
jmp
jne
pause
mov
hlt
push
inc
inc
add
mov
sahf
out
in
mov
and
add
cmpl
adc
jns
mov
mov
mov
cmp
ja
shll
jbe
incl
mov
xchg
pop
sti
adc
add
add
push
and
jnp
adc
mov
cmp
add
push
call
fwait
mov
sbb
push
push
enter
loop
outsb
pusha
and
sbb
cs
and
call
mov
push
inc
lahf
jo
mov
sbb
sub
adc
int3
push
fsubrs
inc
fcompl
test
les
adc
push
std
das
adc
lods
push
adc
dec
jmp
push
push
out
add
ret
pusha
cmp
rol
inc
mov
or
cmp
mov
inc
lods
push
xchg
adc
xchg
inc
test
out
lock
pop
sub
push
int3
cmp
xor
inc
in
lcall
addl
fdivs
cli
adc
dec
hlt
and
mov
mov
ret
xor
push
add
cltd
shlb
sbbb
and
aad
sbb
mov
and
and
jl
imul
jno
bound
xchg
sbb
add
and
pop
gs
pop
mov
dec
and
inc
testb
mov
pop
adc
in
enter
sbb
cmp
loope
ficomps
xor
mov
jmp
adc
push
adc
bnd
rcl
mov
push
sub
jno
xchg
insb
mov
dec
or
pop
rcrl
sub
mov
jg
inc
js
mov
imul
mov
add
sbb
out
dec
jbe
fwait
insl
xchg
inc
or
pop
icebp
lret
cmp
jae
insb
daa
adc
fdiv
xchg
sub
hlt
lds
and
xor
vmwrite
or
dec
in
pop
fisttpl
sub
add
fistpl
and
ret
je
dec
clc
ljmp
loopne
stos
ret
jmp
iret
shlb
pop
push
pushf
lock
push
dec
push
addb
mov
xor
mov
bound
inc
stos
shll
enter
inc
orl
test
insb
jmp
data16
popf
sbb
jne
cmpb
mov
in
adc
and
push
and
mov
push
mov
addr16
mov
or
jns
pop
faddl
in
test
add
adc
add
bound
cld
jmp
imul
adc
or
sbb
sub
aas
ja
push
arpl
nop
dec
push
mov
push
jmp
push
xor
mov
jg
fwait
addb
and
sbb
mov
push
adc
sub
xor
test
mov
arpl
filds
or
dec
xor
sbb
lods
add
and
add
js
nop
cmpsb
imul
ret
push
insb
pop
jbe
push
in
pop
push
mov
xchg
sub
inc
add
or
push
dec
xchg
daa
test
sbb
pusha
push
and
testb
cli
out
dec
or
and
data16
in
add
dec
xor
or
add
jnp
and
xchg
cmp
push
or
inc
cs
jmp
sub
pop
cmp
cltd
lock
enter
push
jno
or
loopne
and
iret
jg
inc
cli
xor
inc
sbb
cld
dec
dec
loopne
sbb
xor
pop
cli
jne
push
push
dec
sbb
cld
jg
adcb
lock
mov
shlb
pop
xchg
mov
xor
fstpt
inc
popl
adc
call
data16
cli
outsb
and
push
inc
inc
call
cltd
and
dec
pushf
jno
das
dec
adc
dec
or
dec
inc
and
add
sbb
fldt
lret
and
in
outsl
dec
inc
or
inc
adc
sbb
dec
cs
sub
jno
mov
adc
popf
cwtl
jge
pop
aas
or
ret
mov
pop
fstpl
xor
jl
add
lock
mov
mov
sbb
inc
inc
fildl
mov
jl
or
sbb
sub
add
add
das
sub
add
cmpsl
test
mov
lahf
xchg
iret
shrb
and
or
push
add
lds
adc
adc
sbb
ljmp
js
dec
jne
clc
les
or
adc
xchg
dec
and
jmp
adc
sub
cwtl
fldenv
into
adc
dec
sahf
inc
inc
loop
pop
jmp
test
jnp
sbb
jae
sub
add
push
push
sbb
loopne
andl
sbb
push
cmp
ja
fadd
les
add
pop
fwait
and
sarb
push
mov
dec
xchg
and
dec
nop
pop
mov
insb
pop
neg
mov
fdivl
adc
arpl
dec
roll
push
mov
movsl
nop
pop
add
or
mov
cmp
mov
and
loope
jb
xchg
cld
mov
outsl
xchg
mov
decl
push
mov
js
jg
sbb
movsl
add
pop
push
ja
movb
or
arpl
adc
cltd
adc
cmp
ret
inc
and
dec
jge
add
add
mov
cmp
push
push
lea
lock
add
sarb
add
inc
add
push
mull
adc
xchg
cmpb
popf
sbb
jne
xor
cmp
arpl
movb
inc
cwtl
and
test
push
cs
movsl
jmp
sbb
or
mov
add
fcoml
mov
sbb
sbb
and
inc
ljmp
mov
lds
daa
stos
xlat
mov
jne
movb
cs
push
mov
inc
fldt
mov
call
dec
jne
mov
pop
add
outsl
out
inc
push
push
cmovns
adc
push
lods
std
push
dec
je
jmp
adc
xor
outsl
imul
jo
push
and
add
mov
inc
and
ds
cmp
cmp
enter
add
dec
jecxz
pop
adc
lahf
xchg
xchg
das
sbb
add
insb
and
sub
adc
xlat
or
pusha
adc
inc
clc
jge
in
push
int3
movsb
movsb
rorl
inc
sti
or
ret
addb
pop
iret
pushf
ret
test
xor
shrb
aad
ss
sti
or
data16
jne
adc
into
inc
lcall
pop
push
adc
ss
data16
sbb
mov
in
subl
mov
xchg
jg
adc
adc
imul
add
mov
and
fwait
xchg
sbb
cs
pop
inc
jae
xlat
add
in
jnp
jp
mov
ret
in
mov
clc
or
sub
push
nop
stos
mov
repz
fabs
lds
cmp
jnp
jnp
mov
sub
test
fdivrs
sbbl
filds
xor
and
lret
pop
mov
or
jne
add
sbb
test
add
clc
jno
sub
out
inc
aaa
add
pop
and
add
insb
dec
push
and
xor
or
in
sbb
movnti
mov
pop
inc
lods
or
arpl
and
std
pop
pushf
sbb
cld
push
push
sti
fldt
cmp
setne
mov
enter
pop
and
inc
incb
and
adc
jnp
gs
sbb
pop
push
outsl
jo
cmpsl
adc
and
pop
or
and
adc
mov
mov
and
push
inc
pop
and
repnz
or
mov
aas
lahf
out
xchg
sub
sub
fadds
shlb
inc
xor
out
andl
inc
into
cmp
or
cltd
adc
imul
add
add
xchg
add
xchg
lds
cmp
inc
js
add
jno
mov
ret
hlt
add
pop
mov
jg
clc
test
dec
mov
cmpl
adc
lahf
add
in
mov
pf2id
data16
rolb
inc
stos
sbb
call
or
ljmp
adc
iret
test
ljmp
orl
fdivrl
ret
add
mov
xchg
pop
hlt
mov
mov
push
pop
movl
jp
sbb
add
dec
cwtl
cltd
je
xor
ret
or
popl
mov
mov
dec
jbe
pop
jmp
push
dec
mov
mov
es
mov
or
push
cmp
das
ljmp
shll
cmc
or
mov
mov
lret
push
jns
mov
adc
cmp
jg
sub
mov
xlat
stc
ss
andl
int3
mov
add
mov
test
push
and
call
pop
inc
in
adc
arpl
jne
repnz
sub
add
xchg
rcll
xchg
aam
add
dec
nop
cmp
sub
sbb
fwait
xchg
mov
aad
pop
jecxz
xchg
jl
push
mov
pop
pop
jp
pop
outsl
mov
out
cmove
jae
push
or
repnz
mov
inc
mov
or
daa
test
mov
push
cmp
rorb
ljmp
fmull
mov
push
inc
cmp
and
mov
subl
movsb
or
jne
push
mov
jl
aam
xchg
mulb
sbb
pop
mov
pop
imul
or
cmp
add
adc
sub
jo
arpl
dec
fcoms
adc
mov
xchg
clc
ja
add
fildl
je
je
insb
movsl
outsb
xchg
ja
add
faddl
data16
or
dec
je
mov
or
or
or
jo
incl
or
mov
inc
adc
pop
push
imul
arpl
push
sbb
data16
adc
icebp
push
arpl
insb
nop
or
mov
cmp
lock
vpunpcklqdq
xchg
or
out
or
nop
movsb
sidtl
mov
out
jl
gs
rcl
div
sub
outsb
movb
pop
mov
jo
outsl
incb
pop
inc
popa
jae
add
sub
or
mov
into
add
inc
ds
or
std
je
mull
jb
mov
sbb
dec
outsl
mov
nopl
insl
inc
insb
and
pop
push
push
dec
sub
mov
bound
or
cs
or
dec
dec
jp
mov
repnz
dec
imul
push
cmp
out
sbb
sbb
aaa
fwait
lds
push
pop
pop
or
lds
mov
invd
xchg
adc
or
jb
fstl
pop
mov
bound
insl
sbb
dec
imul
mov
or
leave
arpl
or
inc
inc
imul
jae
aaa
jb
jae
adc
or
aaa
pusha
pop
movb
orb
cwtl
add
fdivrl
std
call
sub
andps
inc
shll
jae
push
mov
js
fs
insb
or
or
adc
das
outsb
pop
imul
and
mov
cmpsl
inc
xchg
lret
ss
cmp
lcall
punpckhdq
daa
jns
out
movl
xor
or
sub
call
add
fcoms
faddp
or
ret
js
add
fisttps
pop
xor
push
lcall
lods
insl
popa
and
add
pop
add
xor
cmp
pop
jmp
mov
push
dec
gs
nop
bound
xor
inc
imul
mov
sbb
imul
je
xchg
add
rclb
push
ds
and
sbb
aam
and
sbb
xor
jae
in
xor
pop
or
dec
push
pop
pop
push
add
test
mov
aam
add
repnz
fistl
add
mov
add
aaa
ds
notl
in
inc
add
adc
rcl
or
cmp
add
enter
je
fwait
mov
jecxz
and
adc
mov
ffree
or
out
inc
pop
or
pop
repnz
fdivrl
fs
xchg
fcoml
loope
mov
mov
add
push
and
and
inc
and
inc
pinsrw
inc
mov
fidivs
jae
pop
or
lahf
xor
pushf
xlat
mov
inc
add
stc
pop
mov
and
add
or
xor
js
or
nop
inc
int
jmp
rcrb
adc
inc
adc
dec
mov
adc
addr16
clc
inc
dec
movb
mov
popa
ja
push
add
inc
adc
fnsave
xor
sbb
pusha
mov
push
lock
pop
clts
aam
inc
adc
push
adc
inc
shlb
add
add
enter
pop
pop
and
dec
xchg
lret
inc
and
push
push
inc
and
pop
push
pop
mov
push
pop
add
pop
mov
xor
int3
rorb
loopne
jge
insb
pop
je
add
inc
jge
and
pop
or
and
test
mov
add
clc
xlat
fcmovbe
sbb
aam
sub
sahf
add
pusha
outsl
adc
add
or
adc
je
jne
fwait
clc
jp
das
fsts
test
adc
pop
or
pusha
mov
or
mov
pop
out
pusha
stos
in
insl
add
push
dec
ss
sbb
sbb
inc
arpl
jl
fwait
xor
cs
nop
add
xor
jo
pusha
and
sub
push
movsb
pop
les
sbb
or
inc
sbb
jnp
into
cmp
test
adc
add
mov
dec
imul
sbb
int
inc
pop
je
imul
xchg
fs
fwait
pop
adc
push
fistpll
and
pop
jo
push
fs
test
pop
insl
push
ja
and
nop
sub
mov
cmp
mov
adc
pop
jg
mov
mov
addb
lock
imul
dec
adcl
mov
dec
mov
nop
aas
mov
xlat
sub
xchg
loopne
mov
rolb
xchg
mov
mov
mov
sub
and
nop
add
sub
push
xchg
imul
xor
dec
and
shrd
inc
sbb
xchg
xchg
xlat
popf
cmp
jo
push
xchg
mov
mov
xchg
inc
ds
mov
inc
xor
xchg
inc
loopne
adc
fildl
sub
pop
or
movsb
test
mov
and
rorb
dec
and
mov
jmp
and
pop
pop
arpl
inc
fldl
gs
ja
sub
mov
mov
xor
rol
xor
inc
dec
jne
jmp
dec
and
jmp
add
and
fsubrs
sub
mov
lock
roll
mov
icebp
movzwl
adcl
hlt
or
sub
mov
ficomps
or
add
mov
inc
push
pop
sub
roll
sbb
inc
and
adc
jmp
push
push
adc
pop
mov
adc
add
sub
push
mov
cmp
jo
add
add
das
rcr
adc
xchg
popf
lods
inc
mov
mov
pop
lock
flds
cwtl
adc
loop
xchg
out
leave
daa
daa
xor
lock
add
dec
pmulhuw
std
xchg
inc
testl
mov
jmp
ret
cld
mov
clc
jne
mov
xchg
cs
push
mov
pop
cwtl
add
sbb
xchg
add
es
push
push
push
and
push
jle
stos
loopne
cmp
or
sbb
jbe
cmp
je
sub
std
leave
fs
dec
dec
sbb
inc
ret
sbbb
cmp
daa
stc
je
sub
inc
out
cmp
je
incl
outsb
push
sub
inc
or
data16
mov
xchg
sub
inc
popa
sbbb
or
jp
dec
adc
sub
mov
cltd
in
loopne
lcall
cld
mov
mov
sahf
mov
sub
adc
test
mov
mov
inc
sbb
dec
fs
jg
mov
xor
ret
or
xor
in
xor
push
push
es
xor
push
push
in
test
nop
sub
mov
arpl
invd
in
aam
aam
or
mov
gs
movd
fucomi
dec
insb
imul
jbe
add
cmp
push
jne
jo
and
mov
xor
lsl
and
insb
jbe
jb
sarb
mov
dec
imul
lcall
insb
insb
outsl
ja
jne
lahf
nop
jg
or
arpl
imul
sbb
mov
pop
popa
sub
push
stos
push
xchg
or
and
outsl
cmovnp
or
push
pusha
fs
mov
sbb
dec
outsb
jne
fdivs
and
or
fidivrs
or
lods
push
xor
subb
aad
jl
sbb
xchg
jno
adc
xor
push
push
imul
jo
scas
and
sub
adc
sub
dec
mov
inc
je
inc
ds
lret
sahf
mov
jecxz
fs
push
sbb
cmp
pop
adc
add
sahf
das
xor
je
sti
xchg
or
sub
dec
outsb
outsw
or
inc
imul
sub
rorl
cmp
or
repnz
dec
push
mov
adc
mov
adc
add
inc
loop
out
push
push
inc
ud0
inc
dec
push
dec
pop
inc
dec
inc
push
and
pmulhuw
push
inc
inc
inc
inc
push
dec
push
sbb
lret
and
push
pop
dec
inc
dec
dec
xor
dec
inc
inc
sub
dec
dec
inc
push
dec
dec
push
pop
imulb
pop
adc
inc
push
dec
mov
fcmovnb
outsl
dec
dec
adc
ja
ja
jg
inc
xor
xor
adc
dec
lahf
mov
mov
adc
push
inc
inc
and
fistl
dec
dec
push
dec
faddp
mov
dec
inc
xor
pop
leave
scas
in
push
xchg
dec
inc
pop
inc
inc
dec
push
mov
clc
sbb
push
push
push
fistps
xchg
cld
nop
imul
inc
repnz
lock
inc
xchg
dec
push
inc
push
dec
inc
dec
lret
push
dec
push
mov
test
mov
pop
xchg
pop
and
mov
adc
bound
subl
or
add
mov
lods
jl
orb
rcll
movsb
cmp
jne
add
and
or
or
add
mov
outsl
out
sbb
or
pop
ret
ja
sbb
dec
mov
mov
add
or
push
enter
pusha
stos
sti
dec
sbb
mov
mov
jnp
or
movl
xor
inc
add
dec
int3
dec
push
or
in
and
rolb
cmp
dec
sbb
bound
or
addb
inc
jg
adc
cmpb
mov
sbb
cltd
in
xchg
mov
ret
pop
mov
dec
sbb
cwtl
sub
and
sbb
xor
cmp
rclb
mov
in
add
shl
dec
xchg
xchg
sub
arpl
sbb
and
inc
sbb
xor
into
jo
adc
arpl
subps
add
mov
fwait
in
xor
mov
push
jb
xor
cmp
pop
and
out
mov
ss
adc
or
and
test
add
lock
sub
and
jnp
sbb
adc
shlb
pop
adc
testb
xchg
aaa
and
mov
push
testb
cltd
sbb
mov
inc
aam
xor
jb
aad
mov
sbb
xlat
lea
stc
add
push
push
inc
cmpl
int3
mov
jne
push
mov
and
aam
jmp
cmp
data16
gs
inc
fiaddl
add
flds
jmp
inc
cmp
sbb
or
push
and
fwait
jns
fildl
add
aam
cmpsl
jecxz
nop
mov
sbb
and
push
mov
pop
adc
iret
sbb
bound
cmpsb
sub
sti
or
or
mov
cmp
pop
inc
mov
lock
or
lret
or
adc
addr16
push
or
xlat
inc
inc
lods
inc
adc
or
sub
sbb
pushf
xchg
sub
pop
mov
sub
pop
jno
movsl
popa
adc
mov
jmp
sub
dec
mov
and
mov
jbe
arpl
fisubrl
xor
fisttps
loop
mov
ds
xor
push
popa
sahf
xchg
mov
jge
adc
xor
sbb
aaa
mov
mov
inc
xor
xchg
adc
sbb
clc
dec
pusha
and
inc
gs
sbb
and
pop
add
dec
dec
nop
add
enter
out
sbb
in
or
cmpsl
xor
mov
pop
es
xchg
xor
or
add
sbbl
div
and
andb
pop
out
in
xor
int
jo
pop
fidivs
jne
pop
mov
push
sbb
inc
sbb
mov
inc
sub
or
aaa
imul
sbb
sub
adc
test
push
and
in
and
xchg
nop
pop
ja
xchg
mov
xor
mov
dec
or
or
and
sbb
pop
leave
or
in
mov
test
je
mov
das
nop
pop
push
cmp
cmp
leave
sbb
and
cmp
scas
xchg
add
nop
stos
sbb
and
enter
sarl
and
and
xchg
fdivrs
sub
mov
jp
jecxz
inc
mov
mov
lock
mov
and
in
in
mov
jnp
dec
xchg
mov
xor
mov
jg
add
cmp
and
jb
test
adc
mov
invd
add
inc
xchg
call
lcall
cmp
mov
test
mov
cmp
sub
or
enter
add
enter
in
inc
xor
mov
push
pop
nop
imul
jo
jle
inc
add
inc
adc
sahf
and
sbb
movsb
adc
repnz
dec
in
sbb
repnz
add
movl
loopne
in
cmp
mov
adc
leave
push
leave
add
sub
fnsave
test
sbb
lea
cwtl
and
insb
dec
sahf
neg
repnz
or
lret
adc
cmp
aas
addb
out
cmp
xchg
push
movb
shll
arpl
xor
xor
inc
or
push
pop
test
sub
sbb
add
pop
mov
inc
hlt
cmp
data16
fdivr
jne
dec
faddl
sub
sub
in
dec
js
flds
loopne
fcomps
sarl
mov
jmp
imul
mov
fdivl
pop
mov
data16
lods
add
adc
fcomip
inc
push
loopne
fsub
cmpsl
jno
push
ss
xor
sub
add
arpl
lock
sub
cmp
add
hlt
paddsw
or
ds
enter
arpl
jecxz
imul
dec
xor
jge
pop
pusha
inc
or
push
cmp
mov
inc
pop
inc
push
or
in
jno
push
call
stos
inc
ss
loopne
pusha
mov
call
daa
imul
inc
and
das
sbb
or
sub
dec
rol
inc
sub
xor
sub
arpl
or
sub
and
add
pushf
xor
imul
ret
mov
lods
mov
inc
or
es
cmp
or
aas
outsl
push
mov
dec
or
lea
cmp
ret
pop
xchg
mov
add
inc
jp
cwtl
cmpsl
leave
gs
jnp
fadd
cmp
xchg
inc
mov
or
mov
dec
sbb
iret
fsts
inc
orl
sub
test
mov
cs
jno
lahf
pop
pop
dec
es
int3
loop
xlat
sub
and
xchg
push
push
inc
stos
or
pop
mov
int3
ret
subl
push
stc
and
lods
push
mov
fistpll
push
adc
jecxz
ret
sbb
lret
push
xchg
insb
sub
roll
dec
jmp
pop
popa
pusha
or
addr16
daa
clc
and
mov
repz
sbb
dec
lods
push
mov
pushf
lds
pop
imul
or
ds
scas
sub
inc
or
aaa
sbb
or
inc
dec
sub
out
mov
pop
jge
xor
xchg
sbb
and
push
inc
lcall
inc
sub
jb
inc
pop
sub
jae
dec
mov
mov
inc
or
or
shlb
fdivl
push
shlb
mov
jl
in
mov
adc
stos
mov
sub
lock
ret
and
mov
call
out
outsl
pop
jbe
sub
adc
lea
or
or
fdiv
sub
adc
inc
sarl
not
and
mov
je
arpl
xor
adc
mov
cmpsl
or
push
enter
mov
add
add
call
xor
arpl
daa
fadds
dec
iret
jae
or
aam
pop
fldenv
or
inc
or
add
enter
mov
inc
dec
add
mov
jno
leave
push
sub
inc
sbb
or
insb
sbb
or
push
adc
push
cmp
mov
int3
rcl
adcl
add
adc
xchg
in
push
or
dec
rorb
ja
ret
outsb
nop
and
or
push
lods
xchg
xor
adc
add
testb
mov
std
push
inc
push
jmp
sti
mov
sbb
mull
inc
xchg
jns
lahf
dec
pop
inc
xchg
inc
inc
xchg
das
mov
cltd
xor
leave
inc
inc
fiaddl
nop
inc
leave
adc
and
jns
cmp
call
daa
in
xor
sbb
sbbl
and
mov
xchg
inc
sbb
inc
push
sbb
lods
test
call
push
ss
xor
sbb
and
xchg
jo
incl
fs
fimuls
divb
fwait
and
movsl
in
outsl
inc
adc
xor
jl
cmp
inc
and
xor
fldenv
flds
xor
call
inc
sahf
call
push
and
add
inc
sbb
shrl
pusha
add
pusha
pop
jb
dec
mov
jp
pop
xchg
xchg
mov
sahf
cltd
insb
fdivr
and
test
inc
mov
inc
in
mov
test
in
mov
pop
aam
shlb
fisubrs
dec
sub
in
mov
inc
cld
mov
mov
sbb
push
inc
mov
shr
aad
ficomps
mov
out
pop
mov
sar
sar
lret
ljmp
call
shl
stos
jle
adc
not
and
enter
jae
sar
xchg
fcoml
mov
pop
sbb
or
jmp
sub
add
cmp
or
jne
lahf
andb
ss
repnz
shrb
adc
lahf
dec
lahf
stos
aas
or
sbb
inc
push
cmpsb
cmp
inc
xchg
xor
dec
push
xor
enter
adc
inc
push
fimuls
sbb
push
roll
popa
dec
dec
push
push
mov
xchg
push
mov
adc
push
adcb
addr16
aam
adc
call
es
ret
fsubr
adc
jecxz
and
add
mov
sbb
push
xor
push
stos
xchg
mov
or
add
pop
push
arpl
push
or
add
jae
or
jns
dec
ret
call
inc
inc
cmpsl
push
punpckhdq
inc
jne
mov
mov
sub
std
fucomi
mov
xchg
lea
add
mov
mov
mov
clc
mov
add
mov
mov
aam
xchg
fiadds
enter
mov
xchg
push
cmp
aas
add
dec
add
dec
mov
cld
dec
lea
mov
pop
pop
lret
mov
dec
jne
jge
add
mov
mov
sub
sub
mov
insl
add
std
adc
push
jmp
test
adc
aam
pusha
sbb
inc
repnz
rolb
dec
dec
js
adc
mov
mov
enter
insl
pop
mov
das
jmp
imulb
mov
mov
adc
je
icebp
adc
jecxz
ret
mov
jmp
sbb
sti
movw
or
mov
scas
pop
in
and
inc
and
xchg
inc
jle
popa
dec
push
xor
mov
or
push
mov
push
or
push
insl
sti
pusha
cmpl
adc
jae
cld
add
mov
idivb
and
jle
test
loopne
pop
sub
push
sbb
fs
pop
adc
push
xor
jae
pusha
leave
xor
imul
and
push
sub
ret
mov
cmpsb
cmp
cmp
nop
test
or
dec
rcrb
clc
adc
sbb
pop
push
or
pop
dec
movzwl
lea
nop
out
and
pop
add
or
cmp
dec
add
aad
add
cmp
push
push
mov
dec
and
rclb
adc
fcompp
mov
pop
push
adc
add
ret
mov
lea
in
jl
jmp
pop
in
sub
adc
add
push
ret
daa
add
cmp
sbb
add
push
xchg
add
dec
push
gs
push
pop
add
sbb
divl
push
push
jb
sub
lods
xor
inc
sbb
add
rolb
jnp
mov
testb
popa
sbb
sub
push
andb
cmp
in
or
daa
loop
stos
shrl
fcoml
or
hlt
xchg
mov
scas
sub
jns
dec
push
sbb
pop
xchg
mov
adc
add
fmuls
jge
lret
add
into
in
aad
push
and
push
mov
add
loope
scas
adcb
aad
lock
test
add
stc
dec
hlt
rcrl
xor
out
xchg
sub
js
pop
mov
aad
aam
inc
and
or
je
das
mov
cld
push
and
nop
dec
push
lods
dec
push
add
mov
and
mov
mov
leave
roll
dec
sahf
dec
lock
sub
and
mov
add
pop
sub
outsb
out
mov
lret
and
mov
add
es
mov
fcomp
iret
and
nop
gs
lods
push
mov
insl
enter
aam
or
mov
imul
sbb
shlb
pop
inc
out
jl
mov
or
mov
xchg
aad
sahf
xchg
loopne
push
aam
out
push
mov
adc
inc
mov
inc
or
add
out
xlat
jne
push
add
jne
cmp
jl
mov
push
or
or
sub
add
inc
test
mull
and
sbb
out
and
shlb
push
inc
xchg
fcom
in
add
push
sbb
addr16
inc
hlt
add
std
aam
pop
sub
or
mov
push
movsb
fsubrl
insb
xchg
enter
pop
xchg
mov
fstpt
and
mov
insl
lods
or
mov
xorb
mov
sub
or
dec
fstl
int3
add
push
jno
lock
xor
xchg
or
pop
rclb
mov
sbb
mov
add
or
rcr
hlt
dec
mov
jne
xor
or
dec
push
jbe
int3
into
add
sub
jae
add
push
or
shr
inc
nop
nop
gs
in
lock
mov
adc
pushl
or
sub
pop
push
cmp
jl
rcrl
verr
or
das
sbb
push
push
jne
leave
push
xorb
jmp
pop
inc
jl
pop
sbb
jl
add
lea
and
imul
nop
sub
add
ss
outsl
push
push
or
mov
in
sbb
divl
sub
es
inc
lret
mov
lret
push
add
pop
add
or
or
aaa
adc
rorb
imul
or
and
pop
dec
or
sub
cld
or
xor
sub
loop
adc
push
and
push
jg
cmpsl
xorb
fnstenv
fadds
dec
in
add
pop
adc
lods
push
test
incl
adc
inc
lret
mov
aad
xor
sbb
aas
push
inc
mov
dec
stos
jns
push
inc
mov
addb
hlt
adc
adcl
repnz
or
xchg
xorl
ret
popa
push
sbb
dec
xor
push
clc
mov
nop
data16
hlt
hlt
decl
or
xchg
sub
loopne
lret
pop
fiadds
inc
movsb
fldt
push
inc
dec
roll
push
pop
shrb
adc
dec
call
push
add
out
adc
fcmovne
das
push
pavgb
scas
subb
and
add
jne
imul
es
lock
loopne
pushf
mov
out
pop
lods
mov
inc
jo
fcoml
adc
sub
sub
int3
arpl
pop
pop
pop
sub
add
cmpl
fcoms
rclb
add
test
push
push
mov
add
add
ja
mov
cli
scas
push
push
mov
insb
outsb
cmp
mov
or
sbb
sbb
push
or
inc
adc
xor
lret
xchg
xor
or
inc
xchg
in
mov
lock
lods
out
xlat
lods
push
int3
movsl
enter
xor
or
add
xor
adc
call
mov
xchg
add
notb
and
or
enter
pop
inc
sbb
rcrl
or
mov
mov
add
push
add
leave
adc
seto
btc
mov
push
outsl
repz
add
push
out
adc
push
orl
pop
rcll
shll
imul
add
test
xchg
lods
stc
adc
jle
pop
jmp
test
jno
repnz
inc
rcl
pop
inc
or
adc
mov
mov
loopne
xchg
adc
mov
adc
shlb
adc
enter
lcall
mov
sub
and
dec
add
or
mov
ret
sbb
pop
inc
push
pop
lea
push
push
sbb
push
mov
add
into
or
adc
add
jae
push
pop
ret
jae
pop
fsts
mov
and
and
inc
fstpt
push
adc
fnsave
fldcw
cmp
ss
mov
popa
adc
in
xchg
mov
nop
adc
pop
inc
jg
sub
jl
pop
inc
cwtl
mov
pop
inc
and
jae
dec
dec
push
xchg
xor
dec
rclb
rorb
rol
fmull
cmp
insb
sub
add
and
repnz
dec
out
in
push
cmp
inc
test
and
in
inc
nop
and
dec
pop
xor
sub
add
push
jnp
insl
data16
imul
bound
aaa
cmp
pop
inc
dec
and
jb
adc
cwtl
in
pop
push
rolb
xor
popf
out
mov
or
cmp
push
mov
test
inc
xor
dec
icebp
xchg
shl
int3
int3
imul
xor
add
or
push
mov
inc
and
and
loopne
adc
jmp
mov
adc
pop
xor
loope
push
scas
add
or
xor
clc
clc
pop
sub
pop
test
cmp
xchg
movsl
into
js
mov
in
pop
pop
inc
pop
push
adc
jmp
iret
and
fstl
rcrb
adc
imul
stos
enter
adc
add
cld
mov
mov
push
or
leave
pusha
es
push
push
xor
add
mov
adc
pushf
ret
add
or
mov
push
pop
rol
repnz
jb
pop
adc
es
sbb
cmp
mov
rep
orb
xchg
sbb
dec
mov
jo
adc
fdivrp
enter
push
mov
clc
jbe
sub
add
add
add
mov
xor
xchg
dec
inc
push
mov
in
in
fwait
push
inc
jmp
xlat
das
jo
cwtl
sbb
push
push
push
jb
or
lret
pop
cmp
outsb
pusha
cli
adc
and
sbb
cld
rorl
add
scas
inc
mov
xor
inc
pushf
test
mov
pushf
imul
or
jb
adc
lods
add
cmc
jl
pop
movsb
cmp
adc
xchg
in
addb
lea
pusha
dec
pop
jnp
aas
sub
inc
stos
repnz
test
es
mov
andl
xchg
pop
jl
or
sbb
mov
sbb
pop
rorb
mov
or
push
addb
mov
cmpsl
mov
aaa
push
xorl
mov
dec
mov
in
popa
mov
and
mov
mov
push
pop
mov
into
loopne
fnstenv
sbb
mov
dec
inc
mov
dec
test
dec
xorb
mov
popa
mov
jmp
mov
inc
jno
loope
rcrb
les
push
cs
and
daa
pop
add
inc
push
pop
push
es
pop
or
dec
adc
xor
xchg
dec
mov
shrl
sbb
xchg
arpl
jo
loopne
lcall
xchg
or
dec
mov
dec
add
or
bound
xchg
repz
dec
or
add
jae
fdivrs
inc
lods
dec
mov
adc
cli
fsubs
dec
sub
punpcklwd
outsl
das
bound
shll
ljmp
nop
push
das
pop
mov
inc
sbb
sbb
aam
outsb
and
out
sbb
bound
push
dec
adc
hlt
and
imul
subb
js
dec
and
push
sbb
shrb
mov
jmp
stos
insb
and
mov
shll
cmp
lahf
aad
addr16
clc
or
int3
inc
push
fwait
ret
sub
lret
mov
bound
mov
adc
test
push
std
add
mov
mulb
inc
inc
cmp
mov
decl
adc
out
inc
movsb
mov
enter
push
push
lods
xor
mov
push
push
imul
repnz
les
fwait
or
xor
dec
xchg
push
and
mov
sti
jmp
push
push
inc
xor
push
or
adc
push
pop
jbe
stos
adc
and
fadds
pop
dec
je
add
add
mov
mov
xchg
push
and
pop
fnsave
sub
dec
xor
inc
mov
stc
cmp
cmp
adc
decb
mov
inc
push
out
movsb
sbb
or
xor
and
or
pop
dec
out
push
dec
aas
fildl
sbb
sub
sub
adc
pop
sbb
dec
add
lahf
push
add
adc
and
mov
andl
adc
mov
add
mov
pop
adc
push
pop
test
push
jne
out
sbb
sbb
int
fcoms
incl
dec
inc
je
xor
add
mov
add
pop
sbb
or
stc
or
mov
mov
dec
enter
jb
jnp
fs
fistl
sbb
or
inc
pop
xor
pop
sbbl
cltd
mov
or
adc
adc
xchg
iret
int3
mov
add
fisttpl
jg
fdivrl
push
cld
inc
std
xlat
int
lcall
nop
in
subl
loop
insl
clc
push
out
jbe
mov
xor
loop
pop
inc
pop
dec
xchg
adc
mov
je
xchg
ljmp
add
push
push
aad
add
data16
loop
ret
sbb
push
aas
icebp
cmp
sub
add
inc
cmp
pop
xchg
xor
mov
mov
mov
imul
daa
mov
push
fbstp
jne
sub
les
mov
enter
adc
outsl
xchg
mov
mov
dec
jo
xor
add
sub
sbb
pusha
les
cs
and
in
mov
adc
insb
or
pop
xor
int
push
push
pushf
into
inc
js
mov
push
rorb
sub
push
fsub
pop
fs
pop
sbb
das
cmp
jmp
fbld
pop
test
ljmp
int
sti
pop
sub
cmp
je
adc
jbe
push
mov
adc
cmp
rclb
or
xchg
out
xchg
push
push
and
cwtl
cwtl
push
lahf
adc
clc
je
pop
cmp
jle
inc
mov
bound
or
in
xor
pushf
mov
jl
adc
ret
loop
subb
repnz
imul
nop
daa
in
or
test
pop
jmp
add
inc
lret
adc
cmp
sbb
pop
popa
or
sahf
push
lea
or
insl
inc
and
enter
sbb
sbb
bound
sub
dec
mov
inc
fiadds
call
outsb
jnp
sub
in
push
push
mov
cmpb
pop
mov
mov
adc
in
test
adc
cmp
popa
dec
jecxz
shlb
lret
loop
data16
sbb
call
pop
imul
insl
repz
mov
out
loop
and
addb
repnz
xor
fsubl
adc
add
sub
shlb
cmp
or
pushf
popf
mov
iret
in
or
inc
je
fistpl
add
gs
or
dec
or
hlt
cmp
cld
lret
popa
outsb
hlt
add
enter
inc
js
cs
push
pop
inc
add
cmp
xchg
inc
movsb
fcmovnbe
or
pop
or
dec
outsb
dec
lcall
les
cwtl
cwtl
xchg
or
cmp
push
outsl
push
dec
jl
jge
mov
dec
adc
cwtl
enter
pusha
inc
fisubrl
push
cmpsb
mov
outsl
adcb
loopne
shrb
repnz
stos
ret
adcb
and
pusha
and
fadds
push
popf
fildll
adcl
xor
dec
movsb
outsl
mov
insb
rorb
mov
pop
cmp
push
inc
jo
push
mov
xor
push
mov
inc
mov
push
pop
adc
sub
mov
mov
add
roll
dec
icebp
inc
and
dec
cmp
jl
push
sub
sarb
inc
mov
pop
sbb
or
push
mov
mov
pop
jo
popa
sbb
pop
sarb
jo
decl
add
es
shrb
mov
sbbb
jne
pop
mov
sbb
jp
xchg
add
sub
fs
fldl
cli
push
pop
add
add
xor
sub
aaa
add
sub
in
and
pop
mov
xchg
and
jno
push
aam
push
mov
xor
push
loopne
and
pminsw
sub
and
jbe
test
test
pop
repz
rcrb
mov
and
jl
fldl
or
add
pusha
sbb
mov
sbb
jecxz
adc
or
push
loop
sub
inc
lcall
pop
out
dec
ss
pop
or
add
adc
jb
xor
xorl
push
fstl
or
jo
or
inc
lea
xchg
push
shlb
or
inc
aas
push
in
das
inc
fs
cs
rcrb
dec
mov
push
es
push
inc
or
in
or
aaa
shlb
sub
repz
arpl
sahf
jb
sub
or
xchg
and
jbe
ret
cmp
or
lock
adc
push
or
sbb
push
fnstenv
push
push
loop
xchg
shll
or
or
xchg
inc
adc
mov
inc
sub
je
popa
adc
dec
divb
jne
movl
loopne
jae
push
jge
pop
mov
sbb
jne
push
mov
add
aad
loopne
xchg
loopne
push
hlt
test
hlt
insb
mov
pop
inc
push
ret
imul
in
aaa
and
adc
fisttpll
or
cld
cwtl
pop
nop
mov
sbb
js
loopne
or
shll
cmp
and
outsl
xor
pusha
sahf
or
gs
xor
ds
jp
sub
loopne
add
or
pusha
inc
dec
test
pushf
rorl
icebp
or
add
shlb
pop
popf
mov
push
outsl
jo
mov
or
leave
faddl
xchg
add
inc
sub
xchg
or
fcomps
pop
or
aaa
repnz
xor
fwait
jge
mov
mov
or
mov
fcompl
cmpl
mov
add
pusha
mov
sbb
lea
cmpsb
hlt
sub
jge
add
adc
jle
pop
push
test
je
push
xor
bound
cmp
and
popf
xor
mov
or
sub
cmp
sbb
or
mov
mov
or
and
or
push
inc
xchg
insl
push
jbe
push
and
add
push
push
pop
lcall
jne
movsb
aas
xorb
cmp
xor
push
ret
sbb
mov
cmp
or
xor
or
inc
roll
cwtl
mov
xchg
inc
jp
xor
xchg
mov
imul
data16
xor
mov
lret
xchg
inc
push
aad
testb
add
push
push
cmp
and
push
imul
call
adc
adc
inc
mov
cmp
mov
xchg
add
and
push
push
mov
or
aad
sub
jns
outsb
jmp
lret
ret
dec
push
loopne
or
fnstenv
loopne
mov
into
pop
aas
call
adc
dec
push
jg
arpl
ret
sub
ss
mov
int
jns
rclb
xchg
lea
movhps
xor
sub
cmp
addb
dec
push
sbb
add
arpl
negb
flds
out
fs
add
lock
inc
iret
adc
pusha
sbb
popf
xchg
push
testb
sbb
xor
ret
cs
add
mov
push
imulb
xchg
add
push
mov
push
mov
ss
stos
pop
fldt
out
add
insl
adc
stos
xchg
shrl
pusha
rcll
jge
sub
pop
leave
gs
hlt
cwtl
xchg
push
nop
inc
sahf
sar
ds
in
add
pop
sahf
push
xor
lcall
mov
fs
fdivrs
jge
push
movb
scas
test
inc
into
faddl
sub
fs
pop
add
or
push
call
and
lock
shrl
shl
rcll
dec
out
cltd
mov
push
call
cmpb
out
pushf
or
mov
jl
fsts
repnz
cmp
in
cmp
dec
xor
or
xor
xor
xchg
adc
gs
addl
add
xchg
aaa
test
loop
inc
and
adc
cmpb
or
test
pop
popf
testb
inc
mov
sbb
xor
adc
xor
das
add
add
popa
jle
add
sbb
inc
mov
jge
flds
cmp
or
mov
xor
push
aaa
mov
int
xor
push
push
test
adc
addb
adc
shlb
or
dec
lock
push
add
adc
xchg
es
movsb
mov
dec
push
inc
mov
loope
add
pop
pop
ret
aaa
adc
and
jg
xor
xor
add
jne
pop
xor
movsb
jecxz
mov
negb
cmc
inc
int
movl
fisubrs
ret
shl
es
sub
clc
movsb
dec
or
lock
es
jmp
inc
and
inc
loopne
inc
xchg
mov
in
jae
and
mov
test
inc
adc
or
inc
adc
add
and
or
out
mov
fimull
pop
cmc
sbb
pop
imul
jg
movzwl
add
adc
cmp
jg
add
xor
pop
push
shr
or
xor
sbb
inc
jbe
push
and
and
xorl
imul
ret
adc
and
cmp
add
push
xchg
add
push
xchg
push
pop
sub
call
xlat
sub
cmpsb
inc
or
inc
fsts
push
das
and
fcmovnu
cmovg
pop
dec
xchg
in
arpl
jg
push
lods
fstps
pop
movsb
or
jle
cmp
mov
inc
sbb
add
xchg
and
pop
je
lock
pop
adc
test
push
sahf
add
sbb
and
mov
lcall
push
fcoms
sbb
xchg
xchg
jae
jecxz
pop
stos
jge
sbb
test
push
rolb
add
daa
add
shll
cwtl
aad
jo
cmpsl
fists
mov
sbb
aad
lret
fidivrl
outsl
add
sbb
pop
add
mov
pop
and
jecxz
add
push
xchg
lods
aas
rorl
outsl
adc
push
dec
xorl
movsl
test
push
adc
pop
hlt
push
lods
jecxz
insb
add
or
inc
xchg
xor
push
pop
xor
add
jmp
sbb
mov
fsubrs
push
adc
shrb
dec
adc
and
pop
js
cmp
lods
mov
push
stc
jmp
lcall
xor
xchg
adc
or
popw
inc
xchg
cmpb
cltd
or
pop
outsl
pop
sbb
push
or
cmp
out
pop
nop
cmp
sbb
cmp
movl
shrb
lret
mov
imul
pushw
cmp
jae
mov
rorb
push
ret
addr16
sbb
ret
out
adc
bswap
sbb
add
add
sbb
aaa
sbb
test
xchg
xchg
push
adc
mov
imul
andl
cmp
xor
addl
test
xor
fwait
mov
and
mov
pop
dec
jb
mov
in
adc
push
pop
in
xchg
add
jnp
inc
and
add
add
jno
pop
sub
test
into
jge
or
push
sub
outsb
inc
mov
mov
and
jecxz
lahf
pop
sub
inc
mov
adc
cmp
insl
pusha
aam
and
std
insl
and
insb
mov
int
xor
mov
or
mov
aaa
push
sub
ljmp
aam
or
or
cwtl
stos
xchg
movsb
cs
adc
xchg
ret
loop
in
dec
and
enter
ret
loope
gs
and
add
adc
fs
push
xchg
test
out
lods
ret
xchg
movsb
lods
movd
in
js
or
mov
jge
call
dec
jno
push
mov
push
add
mov
xchg
xchg
xor
or
adc
ja
int3
sahf
gs
jecxz
push
push
add
push
inc
je
add
nop
js
xchg
mov
jp
xor
push
repnz
xchg
adc
push
and
cmp
inc
push
cld
dec
les
adc
clc
xchg
jp
mov
pop
mov
mov
or
inc
mov
jns
jb
adc
mov
push
sarl
or
dec
enter
incb
mov
adc
pop
lret
pop
or
daa
jo
out
sahf
test
ss
aam
loopne
add
into
add
and
or
push
in
push
push
fadds
pop
cwtl
and
fidivs
mov
and
rorl
mov
dec
dec
cmp
pop
mov
int3
xor
test
or
scas
inc
fadds
jge
mov
add
popw
or
xchg
mov
or
pop
jge
fistl
lret
dec
dec
sub
loope
push
in
dec
mov
call
aaa
sub
das
jnp
pop
inc
sub
pop
mov
push
pop
mov
jl
push
pop
sbb
sub
add
insl
adc
push
sbb
jne
xor
mov
mov
mov
sbb
push
or
lock
cmp
pusha
cwtl
xor
add
sub
xor
gs
and
cmp
dec
hlt
es
mov
jo
cltd
fists
test
lods
jb
ret
sub
nop
xchg
in
cmp
leave
into
mov
or
pop
push
int
adc
in
lret
adc
xchg
and
add
add
sub
or
add
shrb
aam
dec
repnz
push
dec
or
push
lahf
mov
lret
inc
sbb
daa
inc
add
xchg
jmp
mov
pop
mov
sarb
xor
add
xor
adc
or
push
push
pusha
xchg
dec
adc
test
mov
or
and
xchg
inc
enter
fmul
xor
orb
and
jle
adc
cmp
popf
adc
and
jns
xchg
jae
mov
and
test
repz
mov
fcoms
add
movsl
mov
cmc
aam
fadds
add
andb
int
mov
add
and
adc
or
or
push
sub
sub
or
in
dec
mov
xchg
dec
test
xlat
ficoml
add
or
mov
adc
inc
mov
mov
popf
or
xchg
sbb
stos
mov
adc
inc
sti
or
fdivrl
pop
fisttps
mov
nop
arpl
cmp
and
push
in
mov
sbbl
fstl
mov
pop
lods
xor
xor
cmp
rclb
jle
jg
mov
scas
or
add
fdivs
xor
jle
movl
and
test
inc
enter
sbb
cmp
aam
xlat
into
or
dec
in
ja
mov
push
push
imul
call
lea
push
mov
push
mov
sub
push
scas
je
rcrb
inc
jb
sub
mov
hlt
jmp
push
insl
popa
dec
push
lret
popa
mov
test
lea
mov
loopne
add
xchg
rcrb
pop
outsl
mov
adc
lock
call
mov
fisttpl
or
adc
sub
push
dec
ret
push
cmp
lock
or
and
pop
movb
add
fimull
push
dec
cmpb
enter
or
iret
inc
stos
pusha
dec
mov
mov
jo
daa
bswap
sahf
sub
push
jge
cmp
sbb
enter
inc
rorl
cmpsb
xor
xor
dec
in
inc
xor
lahf
lea
mov
insl
push
cwtl
xlat
arpl
add
and
shll
sbb
sub
add
addr16
les
push
fadds
lret
js
jle
adc
aaa
inc
mov
add
lret
push
cmpsl
lret
shrb
jne
inc
leave
pop
sti
shll
ljmp
sbb
sti
rorb
inc
adc
adc
push
sbb
push
aam
addl
push
and
adc
sub
mov
push
fwait
xchg
adcb
roll
add
push
mov
push
ljmp
jl
movsb
jne,pt
je
fcoml
push
cmp
xor
add
aam
mov
je
push
sahf
cmp
and
or
and
nop
adc
mov
xor
sbb
xor
or
jmp
push
inc
stos
sbb
es
or
cld
xchg
mov
por
and
xor
ds
loop
inc
add
pop
cmp
outsb
inc
mov
mov
push
stos
in
sbb
xchg
inc
or
sub
pop
pop
ss
push
jno
cmp
add
nop
cmp
out
cmpsb
dec
jno
mov
and
mov
xlat
dec
inc
roll
add
cwtl
pop
pushf
adc
lret
sbb
adc
add
pusha
push
inc
adc
sub
push
js
ud2
adc
sbb
test
pop
jb
push
xorl
pop
mov
push
dec
push
mov
xor
adc
dec
stos
rcr
adc
mov
imul
push
rcll
or
cmove
adc
xchg
mov
dec
test
test
js
pushf
add
add
dec
sub
jg
push
add
mov
lahf
das
push
ret
xchg
add
mov
mov
jmp
push
stos
insb
cmp
push
inc
shrl
adc
push
add
dec
jl
or
mov
arpl
push
jne
loopne
and
or
fistpll
fdivs
or
xor
adc
daa
inc
ror
or
cwtl
cmp
das
jo
inc
sbb
mov
mov
or
push
test
pop
add
add
test
push
hlt
sub
mov
inc
mov
jno
adcb
mov
mov
xchg
adcb
xchg
jbe
sub
mov
jbe
jb
xor
and
inc
pop
push
or
add
xor
shrb
ret
mov
mov
mov
lret
xor
xchg
xchg
mov
sbb
stos
pop
ljmp
adc
fadds
mov
andl
dec
scas
mov
cmp
and
jb
mov
and
mov
in
xchg
cmpsb
inc
xchg
es
lods
leave
adc
sub
int
push
adc
adc
out
cmp
add
xchg
push
and
mov
or
inc
push
movsb
sahf
add
jecxz
push
mov
shrl
paddb
pusha
mov
cmpsb
push
or
mov
mov
push
or
add
pop
repz
aaa
cmp
sahf
mov
or
mov
add
jbe
roll
test
sub
mov
ja
jne
mov
adc
pop
jb
enter
mov
dec
iret
jb
subb
mov
orl
sbb
and
test
xchg
xor
push
sbb
pop
lock
cmp
sub
or
xor
shlb
bound
sub
fdivrs
mov
rclb
clc
mov
fldcw
adc
adc
nop
outsl
sub
cs
sbb
mov
dec
push
mov
loope
or
sbbl
or
or
daa
xchg
jg
sub
mov
sub
call
or
fimuls
adc
and
fsubs
and
mov
mov
adc
sub
mov
inc
mov
xor
cs
push
shll
mov
fwait
cmp
push
pop
fsubrs
xchg
aam
cwtl
jp
and
inc
push
sbb
pop
enter
nop
sarb
mov
test
mov
inc
sbbb
sub
loope
enter
xor
xor
dec
push
sbb
enter
fnstenv
sahf
loopne
testb
stos
inc
je
push
xor
pop
add
clc
or
out
jb
outsl
jb
jb
push
adc
lret
enter
xchg
cmpb
pushf
inc
mov
outsb
lods
pop
and
shrb
enter
or
popa
addr16
stos
mov
popf
xor
daa
dec
popf
mov
ja
in
call
scas
hlt
adc
or
adc
pushl
outsb
nop
mov
test
sbb
mov
push
jne
add
add
nop
push
pop
adc
or
or
pop
fimull
pop
add
pop
mov
test
rcrb
mov
jno
push
inc
mov
add
adc
adc
stos
push
adcb
cmp
mov
or
fnsave
add
and
pop
or
fnsave
test
or
inc
jne
popa
je
jmp
xor
push
popa
bound
mov
add
decl
insl
int3
mov
inc
mov
push
jne
gs
xchg
push
inc
jne
outsb
or
or
lods
mov
es
push
push
je
or
push
pop
mov
fs
mov
lahf
arpl
sub
subl
addr16
outsl
out
or
fisttpl
jns
add
xchg
jnp
add
sbb
insl
sub
aas
push
pusha
xchg
add
inc
int3
mov
das
mov
fsubs
sub
fldenv
into
in
jae
sub
nop
test
dec
mov
add
mov
mov
mov
outsl
add
outsl
add
adc
jl
jnp
jb
sub
in
or
mov
nop
mov
sub
fs
fwait
ret
pop
insb
je
insb
ja
pop
nop
inc
mov
mov
mov
xchg
xchg
mov
js
ljmp
mov
mov
dec
call
sarb
out
aaa
js
mov
add
xor
inc
lds
cmp
fldl
adc
mov
jecxz
xchg
add
add
add
test
add
fbstp
or
decl
mov
mov
mov
mov
mov
mov
mov
mov
push
out
out
in
in
jmp
ljmp
mov
call
jmp
mov
loop
xlat
sub
xlat
je
leave
add
into
insl
mov
shlb
int
jo
into
int
dec
mov
lcall
dec
xor
shll
rclb
jne
gs
adc
sub
lret
outsb
mov
loopne
aaa
add
lods
mov
lcall
int3
mov
pop
dec
jae
add
mov
mov
in
enter
loopne
mov
pop
push
rcll
jmp
loopne
in
or
iret
push
xor
sub
std
sbb
pusha
dec
add
add
dec
repz
cmp
add
pop
jo
pop
and
ret
or
push
cld
xlat
pop
push
in
or
dec
imul
mov
gs
dec
add
pushf
push
or
inc
imul
or
mov
push
pop
mov
rcrl
inc
inc
or
lds
push
jecxz
sub
pop
test
jb
push
dec
popa
je
dec
scas
aam
sub
sbb
mull
gs
adc
xchg
cmpsl
add
movsb
or
jbe
pop
shlb
lock
adc
pop
xor
push
add
add
cmpl
or
shlb
daa
adc
pop
add
sti
das
call
pop
mov
mov
add
daa
fisttpll
xorb
fsubl
cmp
cli
sbb
push
and
fldt
add
adc
add
mov
add
xlat
lcall
add
add
in
mulb
add
lret
add
jecxz
cmpb
add
add
add
hlt
incl
mov
mov
mov
mov
mov
or
xchg
cmpxchg
mov
mov
mov
mov
mov
xchg
and
and
mov
mov
mov
mov
mov
add
push
mov
xor
loope
loopne
aaa
dec
std
fdivrp
fstpl
out
mov
lcall
inc
jmp
cmpsb
imul
shl
add
lsl
jo
ss
sbb
cmp
or
or
lcall
push
add
insb
lcall
jmp
cltd
in
add
cmp
bnd
xor
roll
cwtl
mov
mov
lcall
hlt
fwait
cmpsb
jmp
sub
insb
hlt
xor
je
test
pushf
cmc
testb
adc
dec
xchg
lret
gs
and
push
in
je
mov
inc
adc
nop
fistps
insl
xlat
push
mov
and
inc
repz
pop
pop
add
popl
adc
mov
arpl
adc
mov
loopne
push
dec
loopne
or
hlt
xor
cmpsl
mov
jne
enter
mov
pop
sbb
mov
in
inc
enter
add
add
insb
or
mov
fistps
fsts
lahf
pop
adc
decl
push
repnz
scas
sbb
xlat
fld
mov
aam
and
cmpsb
sbb
xor
sbb
inc
cmp
enter
inc
push
or
out
test
pop
push
out
xor
daa
sub
test
aam
fs
in
sbb
gs
test
test
inc
repnz
loopne
hlt
test
mov
xor
inc
int
mov
push
add
je
mov
add
cmp
pusha
xor
add
pusha
cmpl
adc
and
xchg
sbb
jmp
pop
cld
mov
sub
cmp
cmp
sbbb
cld
je
jo
notb
push
or
test
test
push
adc
or
das
inc
int3
pop
add
pop
push
js
cmp
inc
pushl
add
and
jp
fcom
dec
add
call
mov
sbbl
lret
fmuls
pop
jne
call
aaa
sbb
adc
mov
adc
mov
les
adc
cmp
xor
jo
lret
jb
add
sub
addb
and
enter
adc
dec
inc
gs
insl
orb
enter
jbe
add
push
cmp
xchg
shlb
push
inc
push
inc
cmp
jo
adc
jae
fwait
sbb
inc
insb
popa
xchg
add
dec
dec
outsl
les
repnz
jnp
adc
jo
imul
dec
add
push
stc
bound
xchg
dec
push
popa
sub
or
addl
dec
fdivrs
push
sbb
testl
out
inc
add
pop
inc
fwait
xchg
add
or
xchg
sub
adc
pusha
and
or
pop
adc
adc
inc
push
xor
aam
add
inc
jmp
dec
adc
lcall
and
adc
or
inc
and
add
mov
mov
enter
movsb
sub
pop
cli
jns
mov
in
test
dec
loopne
scas
enter
jmp
iret
int
sub
mov
sub
test
dec
scas
arpl
cmp
mov
dec
pop
pop
fimull
or
std
add
stos
mov
inc
add
mov
or
and
fisubl
movsb
scas
add
inc
mov
subl
or
cmp
push
xchg
push
call
test
mov
nop
push
iret
pop
les
sub
push
sub
inc
imul
or
xor
xor
mov
push
fldenv
int3
mov
push
cld
mov
pop
loopne
cmp
cwtl
adc
push
add
add
push
lea
adc
sbb
test
out
mov
cmpsl
mov
cs
adc
aad
adc
cmp
mov
jo
inc
sbb
mov
in
and
or
cld
add
cwtl
push
inc
adc
ds
xor
dec
xchg
fwait
daa
mov
adc
movsb
addb
repz
sbb
in
addl
enter
jne
or
cmp
jmp
mov
push
push
xlat
inc
out
pusha
push
mov
adcb
adc
pop
fwait
push
and
pop
push
cltd
or
add
inc
je
jne
mov
adc
clc
add
jne
stos
jp
adc
mov
das
sub
mov
es
js
daa
pop
inc
inc
mov
mov
js
sti
insb
movb
pop
js
sbb
outsl
or
push
or
sbb
or
mov
push
mov
mov
je
mov
cmp
clc
cwtl
insb
dec
push
testb
hlt
es
add
xlat
xchg
or
cmp
insl
pop
popa
dec
ret
mov
mov
popa
fldt
jmp
mov
adc
cld
push
jmp
or
mov
enter
xor
insb
mov
dec
std
call
xlat
imul
ljmp
jne
add
mov
add
push
and
pushf
jg
insl
or
pop
ja
fld
inc
and
or
cmpsb
sarb
popf
or
test
jp
test
fsts
mov
mov
cmp
push
cmp
es
js
xor
into
leave
jle
and
sahf
les
dec
mov
add
xor
xor
sahf
mov
xchg
push
and
and
daa
lock
js
push
mov
pop
or
or
sub
or
jmp
dec
xor
shll
js,pn
into
pop
arpl
dec
paddsb
test
leave
mov
jl
arpl
sbb
mov
arpl
inc
cmovno
lods
ss
mov
mov
sbb
stc
pop
add
repnz
cmpsl
idivb
jp
push
mov
nop
and
loope
and
adc
sub
fdivl
push
pop
test
cs
out
inc
dec
enter
jo
xor
xchg
mov
sbb
pusha
ret
mov
loopne
aaa
mulb
call
mov
mov
test
rcrb
push
add
mov
je
push
sbb
inc
mov
daa
inc
and
sub
mov
pop
pushf
or
in
inc
pavgb
mov
push
andb
or
movb
adc
add
popa
les
adc
fisubs
test
push
aas
adc
push
rorb
fbld
aas
cmp
adc
inc
xchg
nop
out
cwtl
cld
mov
pop
cltd
fwait
in
ret
jne
and
mov
aam
inc
sbb
xchg
and
shlb
sahf
mov
and
cmp
inc
nop
inc
es
and
test
cmpsl
cwtl
push
arpl
mov
mov
xchg
sub
test
enter
add
movsl
lds
mov
pop
cmove
add
sub
sbb
mov
xchg
cmpl
xchg
pusha
push
mov
or
adc
int3
scas
test
xchg
cmp
lods
pop
jbe
xchg
push
pop
sub
inc
inc
push
push
xorb
and
add
and
inc
jae
xchg
mov
mov
clc
ret
inc
inc
sub
je
or
das
add
ret
jae
mov
aam
rcll
outsb
pop
add
inc
add
inc
imul
inc
inc
push
cmp
push
push
xchg
insb
loopne
roll
mov
sbb
push
mov
lods
mov
dec
imul
inc
add
dec
ret
add
fcom
push
lods
notb
xor
mov
sub
and
push
inc
cmp
and
jl
mov
es
je
int
push
pop
jns
and
mov
pop
add
into
and
lds
test
push
call
movb
gs
js
testb
push
add
loopne
stos
add
mov
sbb
frstor
cwtl
push
or
or
mov
mov
add
mov
xor
jl
inc
testl
mov
mov
sbb
add
xchg
and
push
adc
cmp
sub
cmpl
pop
and
push
or
add
push
test
or
mov
or
inc
and
add
xchg
ror
push
sar
jmp
jne
pop
ret
and
push
test
sub
adc
inc
cld
mov
cmp
mov
lds
neg
dec
nop
test
fists
adc
push
cmp
jne
mov
or
cmp
push
inc
dec
xlat
mov
jmp
mov
and
jle
pop
jmp
out
inc
add
pop
imul
fidivrs
sub
lock
push
mov
pop
push
cmpl
lret
and
punpcklwd
cmp
add
mov
inc
jbe
pop
or
insl
ja
add
mov
or
dec
cmp
or
or
pop
or
cmp
testl
cmp
dec
push
sub
or
sub
dec
mov
fld
sahf
imul
inc
inc
aas
inc
dec
mov
pusha
push
insl
sub
adc
adc
xor
sub
int3
pop
scas
pop
push
pop
test
pop
sbb
or
in
and
inc
mov
add
mov
dec
and
inc
mov
lods
mov
mov
sub
mov
add
xchg
xchg
mov
xor
aad
push
add
inc
rcll
inc
add
inc
add
xor
adc
sub
sub
add
mov
add
aas
push
jae
add
mov
cmpsl
leave
aad
cmp
cmp
je
pop
icebp
pushl
pop
push
les
mov
sbb
push
xor
bnd
xor
aad
xor
sbb
jp
ja
mov
xchg
xor
nop
outsl
pop
push
cmp
adc
sub
jge
sbb
or
ret
jnp
cmp
xor
jbe
outsb
dec
add
cmpps
nop
in
xor
cmp
dec
or
testl
adc
jb
pop
add
dec
or
adc
std
and
lods
mov
adc
cmp
push
loope
shll
rorb
in
mov
loope
mov
jp
pop
adc
or
xchg
push
pop
mov
je
lds
enter
scas
mov
jl
or
lods
or
je
push
rdpmc
xchg
mov
test
mov
or
pop
push
dec
arpl
shrl
fdivs
scas
test
out
cmp
add
or
add
dec
sub
mov
cmp
push
push
ret
inc
sub
or
sbb
sub
cmp
imul
faddl
stc
lret
xchg
rcrl
jg
rolb
add
xor
mov
cmp
mov
adc
testb
xchg
xlat
cmp
je
mov
fwait
movsb
mov
or
nop
femms
add
fsts
mov
sub
test
mov
mov
adc
aas
and
dec
xchg
addr16
mov
aad
mov
mov
mov
clc
addb
xchg
cmp
pop
sbb
lahf
push
sub
sub
shll
push
sbb
movsl
bound
pop
sbb
test
push
sub
int
sub
inc
dec
fdivrs
sub
fs
orb
adc
xchg
mov
mov
push
jmp
push
cmpb
add
push
add
outsl
mov
inc
je
mov
je
imul
cmp
imul
mov
sbb
cmp
repnz
push
push
nop
insl
leave
leave
inc
or
nop
outsl
inc
inc
inc
or
inc
pop
aam
pop
sbb
sbb
xor
and
or
nop
push
lods
insl
inc
iret
mov
fdiv
faddl
push
jae
push
popf
js
push
or
sbb
ja
test
cld
mov
jmp
insb
mov
jo
pop
pop
add
fiadds
mov
dec
scas
ds
mov
push
add
mov
outsl
hlt
sub
mov
or
pop
mov
leave
jge
ffree
je
out
adc
dec
fsubs
xor
mov
or
adc
and
bts
mov
push
xor
cmpsl
mov
or
inc
inc
push
dec
mov
inc
test
mov
fdivl
cltd
mov
shl
push
push
or
mov
adc
mov
mov
inc
xchg
stos
test
mov
lods
dec
inc
je
mov
and
subb
in
js
pop
and
dec
enter
mov
jg
jae
pusha
adc
shlb
loop
lock
mov
adc
add
inc
mov
dec
cld
cmpl
lods
sbbb
jae
xchg
into
dec
adc
sbbb
jge
imul
or
and
mov
test
inc
add
dec
rolb
pop
mov
aaa
push
mov
adc
xchg
mov
push
dec
decl
inc
sub
imul
mov
insb
outsl
testb
ret
or
sbb
sub
adc
insb
add
daa
adc
cmpb
mov
cld
add
push
xor
enter
sbb
push
push
mov
inc
xchg
test
aam
cmp
dec
es
push
out
xor
dec
mov
pop
push
sysret
cmpsb
and
fucomip
mov
ds
in
insl
cmp
mov
and
test
pop
jne
inc
jp
imul
shll
or
data16
jne
push
or
add
popa
xor
cmp
mov
leave
cmp
scas
idivl
add
lds
push
gs
push
lds
push
mov
or
push
outsb
push
cmp
or
mov
mov
je
cmp
pop
or
mov
test
aaa
repnz
xchg
adc
fsubs
cwtl
repnz
cmp
xchg
pop
dec
sahf
push
pushf
mov
adc
jnp
and
jbe
sbb
jmp
lock
xchg
pushf
add
xor
into
push
fwait
stos
xchg
mov
add
jmp
add
mov
es
push
rcll
sub
test
mov
data16
xchg
lods
push
xchg
xchg
and
and
loop
pop
inc
and
push
inc
aas
das
push
or
lret
rolb
adc
or
dec
stos
and
xchg
sti
ljmp
sub
lock
pusha
jg
pop
cmpl
test
pop
aad
or
jnp
js
dec
test
and
pop
mov
sbb
invd
xlat
inc
adc
fdivp
je
divl
cmp
inc
xorb
add
add
add
sub
mov
stos
cwtl
testl
rcrb
jmp
dec
out
mov
movsl
and
pop
mov
aaa
jnp
jmp
dec
shlb
incb
xchg
daa
push
push
pop
mov
in
mov
sbb
dec
dec
add
cmpsb
fistps
dec
jmp
sbb
mov
dec
add
dec
xlat
ret
lock
das
inc
jbe
inc
mov
dec
mov
xchg
mov
rcrl
adc
xor
jne
into
dec
mov
sub
xor
xchg
pop
loop
mov
sbb
dec
sbbl
push
push
xor
or
sbb
adc
push
in
jmp
dec
cmp
xor
cmp
or
fwait
pop
stos
daa
add
fwait
add
jae
lahf
jno
dec
lock
adc
test
mov
movsb
aaa
pop
scas
cmpsl
sbb
jb
lods
pop
mov
push
inc
daa
outsb
add
cmpsb
or
or
dec
push
mov
outsl
jo
xchg
addr16
or
inc
fnsave
movswl
add
push
data16
mov
rorb
cmpsb
pop
aam
lcall
pop
push
sub
push
push
js
add
in
call
push
or
orb
mov
sub
mov
push
movsb
sub
or
sbb
xor
idiv
push
fbld
pop
or
outsl
xlat
loopne
mov
inc
lods
xchg
or
cmp
xlat
aad
int
in
idivl
push
inc
jmp
pop
ds
xor
push
aaa
jle
jae
pop
test
decl
stc
adc
cwtl
sbb
add
lret
xor
jbe
fwait
adc
pop
add
dec
fisubs
add
enter
hlt
inc
dec
into
push
and
add
inc
daa
dec
inc
cmpsb
push
sahf
push
jbe
push
add
dec
pop
ss
inc
js
cld
shll
inc
pop
xchg
fistl
or
out
sub
inc
stos
jle
cwtl
insb
cwtl
fldl
mov
test
sbb
dec
and
add
shrl
xor
inc
sub
stos
std
xorps
or
rolb
adc
push
add
sub
sub
filds
pop
test
mov
mov
add
or
pop
flds
das
add
int
pop
sti
pusha
sbb
pop
mov
add
adc
xor
out
pop
sti
dec
push
mov
cmp
stos
or
push
sub
add
lock
stos
xchg
addb
inc
push
cmpl
dec
xor
sub
rcl
or
lcall
xor
push
sbb
xor
dec
inc
mov
sbbl
int
xchg
dec
inc
adc
mov
jo
movl
add
adc
test
mov
pusha
cmp
aas
cmp
add
loopne
cmp
orl
mov
inc
push
push
outsb
sub
movb
mov
sbb
adc
push
or
add
fcmovb
les
cmc
sub
cmp
push
pop
dec
mov
rolb
add
dec
inc
cmpl
test
leave
test
leave
ret
add
push
sub
rcl
pop
cmp
jne
xorl
aad
add
push
push
pop
add
or
insb
xor
and
pop
in
or
xchg
jl
and
das
add
xchg
cmp
mov
mov
rcrl
dec
fisttpl
xchg
cmp
jge
enter
xor
shll
pushf
mov
sbb
inc
add
out
and
add
cmc
loopne
inc
lret
xorb
fnstenv
rcl
pop
test
mov
jnp
sub
mov
pop
test
inc
push
sbb
and
iret
push
shrl
pop
push
add
and
jmp
sub
inc
xor
pushf
shr
jg
and
mov
enter
sbb
mov
xor
pusha
pushf
ljmp
shrl
insl
sub
inc
xor
sti
mov
add
and
pop
mov
fs
dec
add
daa
or
sub
jmp
cmp
dec
insl
leave
pop
les
or
pop
adc
or
xchg
xor
loope
rorl
pop
rorl
push
adc
add
jnp
or
sub
stc
pop
mov
or
dec
add
jne
pop
xor
sub
add
and
daa
mov
mov
aas
or
pop
cmp
out
push
inc
or
imul
fs
iret
repnz
cmp
jmp
sbb
cmp
ret
lret
xor
in
xor
aam
dec
dec
push
call
xor
shrb
push
iret
push
adc
jo
jno
or
hlt
inc
adc
int3
sahf
pusha
hlt
pop
sbb
lds
sbb
or
pop
or
dec
cmp
adc
inc
push
mov
or
repz
dec
rclb
cs
sub
fmuls
mov
or
dec
add
mov
xchg
pop
hlt
imul
add
and
loope
cmpsb
xor
ret
xchg
ret
add
pusha
inc
mov
adc
or
inc
inc
adc
push
pop
fildll
in
sbb
mov
shl
dec
cmp
int3
xor
lret
mov
or
cld
fistl
sub
pop
lods
lock
aam
pushf
jl
adc
mov
inc
push
sbb
std
adc
add
or
xchg
mov
nop
and
sub
jo
ret
jmp
bound
adc
push
mov
enter
out
les
iret
dec
notb
in
jg
sub
lods
and
pusha
inc
out
mov
and
addr16
insb
ret
pop
mov
or
stc
rol
dec
or
lcall
xor
inc
add
movsb
jp
sbb
or
add
inc
ss
pop
add
mov
insb
lahf
test
lock
add
mov
mov
add
sub
sbb
push
inc
shlb
dec
dec
insl
add
sbb
fidivrs
mov
sbb
rorb
jne
mov
test
and
sbb
adc
add
adc
dec
add
add
lds
xchg
ss
fiaddl
imul
test
sbb
sti
das
push
rcr
push
into
push
jmp
outsl
or
daa
or
arpl
mov
or
and
xchg
push
adc
lea
cmp
jle
mov
and
fwait
les
sarl
push
inc
scas
mov
mov
add
fs
sub
add
in
inc
xor
cmp
movsl
dec
jl
pop
inc
adc
adc
call
xor
shl
push
adc
add
mov
popf
adc
outsb
aam
mov
icebp
cmp
xchg
mov
mov
lea
push
push
int
or
push
sahf
adc
std
and
mov
mov
adc
stos
add
mov
xchg
fstpt
inc
inc
in
mov
mov
lret
push
daa
stos
inc
scas
ret
ret
filds
or
fistpl
cmp
inc
cmpb
pop
sbb
add
sub
and
mov
add
cmp
lcall
cmp
in
cld
or
rorb
out
sbb
and
mov
or
and
outsb
ret
inc
daa
sbb
xorb
add
ret
imul
cwtl
fildl
add
leave
xchg
inc
decl
lock
dec
sbb
loope
je
testl
test
out
push
inc
inc
ds
or
jp
iret
dec
incl
inc
cmp
mov
pushf
mov
xchg
lds
or
fsubrp
call
cmp
adc
xchg
mov
push
mov
inc
syscall
lods
cwtl
mov
push
sbb
mov
jp
inc
add
gs
icebp
test
mov
andb
sub
fmuls
jae
lcall
sbb
and
cmc
mov
adc
mov
push
adc
scas
sub
sub
mov
lea
mov
push
xchg
push
mov
adc
push
mov
jge
or
push
pushf
mov
and
push
xlat
sbb
or
test
mov
xchg
jnp
inc
lss
mov
cmpsb
push
or
movsl
test
in
add
add
or
je
in
repz
ja
rorl
xchg
or
and
dec
and
jo
pop
orl
lea
mov
jnp
cmpl
sub
fildll
mov
push
mov
daa
je
jae
ljmp
fnstcw
adc
in
mov
cmp
push
cmp
and
ljmp
push
dec
test
inc
test
adc
or
add
adc
lock
daa
inc
mov
mov
push
add
fisubl
cwtl
out
gs
clc
mov
pusha
or
adc
bound
push
sti
mov
loopne,pt
fists
sbb
mov
sub
cs
xor
mov
enter
jmp
pop
pusha
in
push
sbb
ficoml
ljmp
adc
or
push
shrb
mov
shrl
add
imul
lea
cmpb
mov
xchg
leave
addb
sbb
fwait
fwait
inc
adc
adcl
sub
in
dec
cmp
mov
pop
clc
test
pop
add
int
xchg
jne
sbb
mov
jp
push
mov
xor
outsl
fisttpl
adc
ret
and
and
or
adc
push
rorb
sti
or
in
inc
or
sbb
cmp
lcall
inc
and
adc
dec
adc
inc
lock
lods
cld
sbb
sbb
fucomip
adc
and
out
sbb
push
cmpl
or
rcrb
cmp
enter
lahf
adc
or
mov
sahf
mov
pushf
das
dec
sub
mov
push
in
test
push
jg
fs
mov
mov
sub
cli
add
cmpb
or
push
push
lods
insl
inc
push
xor
push
jo
mov
les
and
cmpsb
push
sub
les
data16
inc
mov
and
int
add
ljmp
jbe
roll
cmpsl
push
jmp
or
xor
leave
ret
mov
clc
clc
jne
and
pop
adc
lods
out
sub
dec
xchg
sbb
popa
and
jo
inc
in
in
data16
add
or
pop
inc
or
pop
xor
out
into
add
rolb
addl
mov
es
add
and
in
push
add
dec
call
sub
sbb
mov
addl
push
inc
sbb
movsb
push
test
aam
push
cmp
inc
sti
mov
cmp
add
aam
cmp
add
fisttpl
mov
adc
push
mov
add
push
roll
dec
jno
outsb
inc
scas
hlt
aam
in
ror
or
jl
out
fdecstp
adc
roll
add
orb
cmp
loope
mov
xchg
xor
mov
sub
and
jnp
push
push
xor
cli
sbb
fdivs
inc
popa
dec
call
movsl
xchg
inc
dec
jne
lds
mov
mov
dec
adc
or
in
or
in
adc
dec
push
sbb
aam
adcl
push
push
cmp
je
cmp
scas
fmull
push
shl
mov
push
or
js
in
cmp
pusha
mov
push
int3
idivb
inc
jne
mov
loop
insb
jle
add
or
es
pop
addr16
xor
inc
jge
ret
push
push
mov
inc
orb
fadds
sbb
sbbb
cmp
push
movsb
bound
lds
rdpmc
mov
xor
arpl
inc
lods
mov
or
movsb
test
sbb
cli
xor
in
mov
aad
mov
jb
in
movsb
cwtl
in
fisubrl
jbe
sbb
js
mov
sbb
mov
add
das
jbe
sbb
cs
mov
mov
inc
dec
inc
push
jae
jo
dec
inc
bound
and
and
pop
xchg
xchg
adc
rclb
adc
push
push
je
push
push
pop
imul
mov
xor
bound
add
movsb
and
cmp
xchg
pushf
push
push
add
push
in
add
adc
cld
stos
mov
mov
hlt
push
movsb
pop
dec
mov
call
push
sarb
mov
xchg
out
adc
add
xlat
push
dec
inc
das
and
insl
das
fwait
and
push
insb
popa
fs
call
loopne
mov
aam
inc
in
fcmovnbe
pop
icebp
loop
nop
sub
add
stos
hlt
pop
sbb
dec
pusha
and
sbb
pushf
and
and
icebp
movsl
jp
dec
dec
dec
add
and
pop
cmpsl
es
lret
lret
setae
inc
add
nop
and
xchg
push
inc
jno
inc
aaa
add
sbb
adc
and
cmpb
lea
loopne
push
dec
inc
jg
xchg
push
sbb
dec
push
adc
outsl
mov
clc
push
push
scas
xchg
push
xchg
or
aaa
sbb
daa
xchg
adc
mov
xchg
scas
out
push
jne
stos
pusha
mov
pop
shrb
mov
mov
ss
test
test
dec
and
test
mov
movl
aad
fabs
ret
fimuls
je
add
call
mov
mov
jne
inc
jae
js
popw
arpl
xchg
dec
fstpl
sub
into
fcomip
jmp
pop
or
pop
push
mov
inc
movsb
jle
and
ss
mov
adc
rclb
adc
loopne
dec
add
push
sbb
dec
bound
stos
xchg
sub
fmull
hlt
sbb
mov
movb
add
fmuls
mov
sarb
jne
aad
push
xchg
and
ret
push
mov
jns
sbb
sub
dec
add
lock
inc
in
cs
xchg
jae,pt
lock
sbb
pop
jmp
push
mov
inc
or
test
movsl
cmp
jbe
dec
mov
adc
and
test
pop
xor
adc
pusha
pop
xchg
sbb
jmp
push
add
mov
add
push
pop
dec
inc
xchg
xchg
adc
and
notb
mov
out
leave
cmp
pop
pop
ret
imul
loope
test
add
fwait
jle
js
cmp
adc
stos
jmp
mov
rol
push
add
sbb
push
add
dec
aas
loop
push
pop
pop
pop
jns
test
inc
outsb
mov
mov
sub
sbb
lock
dec
jbe
xor
test
inc
xor
mov
gs
outsl
pop
repz
push
dec
sti
incb
add
fidivs
push
mov
stc
cmc
faddp
push
jbe
add
lret
or
inc
jb
mov
cmp
mov
scas
idiv
hlt
rcrb
xor
cmp
jo
inc
add
dec
test
inc
mov
or
and
sub
lret
push
lock
inc
and
fcmovb
jle
adc
out
and
sub
cmp
dec
loopne
insb
or
rorb
gs
and
dec
adc
sub
xchg
test
lahf
sbb
orb
fcoml
test
out
add
insb
lret
push
fistps
xor
dec
aaa
mov
adc
cli
add
dec
loopne
pop
jne
fdivrs
add
jle
sbb
add
mov
or
inc
sbb
test
sub
and
inc
setle
out
xor
fsubl
pop
or
cmp
push
dec
mov
repnz
out
into
mov
insl
mov
dec
cmp
or
push
push
add
lret
sub
pop
out
movsl
mov
leave
in
sbb
loope
into
orb
loopne
inc
pop
rcrl
shlb
adc
in
lds
addb
inc
xchg
pop
push
es
or
pmulhw
rolb
xor
xor
das
pushf
push
aad
push
jo
push
dec
mov
pop
leave
fcoms
ret
push
inc
push
mov
pop
adc
and
adc
add
or
dec
dec
out
dec
pop
cmp
fsub
loopne
or
fs
daa
inc
pop
sbb
mov
mov
sti
add
pop
sbb
jne
pop
mov
dec
mov
mov
pop
adc
mov
pop
pop
jnp
add
jecxz
je
fldenv
pop
int3
jnp
mov
ret
jg
sti
or
das
mov
add
or
out
inc
pop
rcll
adc
nop
cli
mov
inc
mov
loopne
add
inc
or
pop
cli
ret
fistl
or
sub
jb
cmpl
xor
or
inc
ret
in
les
les
mov
push
aas
sub
call
pop
inc
mov
add
pop
sbb
popf
xorl
mov
push
icebp
jns
call
mov
js
or
and
lock
sbb
pushl
dec
dec
leave
pop
dec
push
jnp
or
adc
inc
or
xchg
mov
shlb
mov
push
push
mov
mov
popf
fadds
dec
nop
pop
push
insb
mov
xchg
and
mov
lcall
shll
jg
rcl
adc
mov
ljmp
pop
jmp
add
jb
add
cld
rorl
subb
add
int3
adc
adc
pop
push
icebp
mov
shlb
xchg
adc
sub
js
jne
xor
fidivl
add
rcrb
dec
inc
fnstcw
lahf
out
fldt
adc
jmp
dec
xchg
and
fs
add
push
leave
and
ret
mov
xchg
pop
push
testl
pop
pop
xor
lods
mov
jne
cld
sti
cmpsl
ret
and
sbb
subb
xchg
xor
cmp
add
sbb
es
scas
aad
mov
sbb
adc
adcb
pop
notl
movl
add
adc
lea
jle
mov
lea
add
xchg
and
push
cmp
cmpsb
dec
inc
dec
stos
das
clc
xor
adc
mov
push
mov
and
jne
sbb
les
mov
sbb
js
roll
jo
lods
js
and
and
scas
pop
inc
xor
add
int3
aas
adc
add
xchg
push
jl
cs
dec
xor
and
push
js
add
mov
dec
dec
and
push
sbb
movl
and
ret
xor
loop
inc
lahf
adcb
movb
sbb
add
xchg
lds
insb
inc
xor
aad
add
cwtl
push
or
bound
clts
xor
xor
orl
leave
mov
add
pop
xor
pop
mov
xchg
dec
pop
into
inc
adc
or
jo
rcrb
push
pushf
rclb
es
mov
nop
insb
pop
add
fidivs
jb
push
sub
mov
nopl
sub
shr
enter
jg
fimuls
add
lods
xlat
in
push
fidivl
aaa
add
flds
mov
aad
test
push
daa
inc
jge
cmp
mov
ret
pop
mov
adc
and
add
ret
xor
mov
and
mov
call
adc
inc
lods
mov
testb
js
sub
add
mov
mov
lret
pop
aam
pop
lds
je
popa
mov
mov
es
cmp
mov
rcrb
andnps
push
adc
hlt
inc
shlb
push
repnz
iret
jp
inc
push
add
dec
xor
inc
adc
jg
call
inc
mov
pop
cmc
sbbl
rolb
imul
dec
rcrb
sbb
push
insb
dec
or
test
sbb
das
pop
and
imul
test
rclb
fisttpll
push
mov
sub
test
mov
inc
push
rorb
sbb
shlb
syscall
inc
ljmp
jne
andb
mov
sbbl
addb
and
mov
sbbb
push
lcall
inc
jmp
adc
sbb
popf
inc
add
xchg
add
xchg
adc
mov
cwtl
and
pop
jno
test
push
push
mov
lret
cmp
hlt
and
call
subb
adc
fsubs
adc
stos
fsubs
sbb
or
adc
fdivs
sub
add
dec
test
push
enter
push
test
dec
mov
stos
les
repz
in
push
mov
loop
cmp
jns
dec
stos
pop
aad
xlat
cli
or
dec
xchg
clc
arpl
call
rorb
arpl
and
sahf
aam
dec
mov
sbb
adc
sub
sub
inc
cmp
andb
mov
or
lods
rolb
sub
sub
xchg
ja
xlat
and
into
or
test
mov
xchg
inc
pop
adc
pop
cwtl
je
add
xor
mov
or
int3
or
insl
pusha
lahf
sahf
and
adc
sbbl
cmc
or
push
add
ds
adc
cmp
adc
mov
adc
insb
inc
push
repnz
inc
es
test
dec
add
cmp
rcr
insb
rolb
sub
aam
push
imul
test
and
xchg
xchg
inc
shl
fwait
add
push
and
sbb
test
arpl
push
xor
sub
add
push
popf
add
out
adc
loopne
fcomps
sbb
or
loopne
add
mov
mov
jae
hlt
mov
dec
pop
jae
dec
sbb
mov
adc
and
jne
outsb
sub
jne
call
mov
push
xor
add
jp
andb
incb
jp
repz
pusha
pop
push
lods
dec
std
lock
jne
or
js
daa
adc
mov
add
sub
popa
aaa
pop
lcall
add
and
jne
inc
add
das
stos
inc
add
xor
sbb
xchg
cld
data16
mov
shll
inc
adc
pusha
popf
sub
mov
sbb
call
xchg
xchg
out
sbbb
nop
je
pusha
add
popf
jl
add
inc
das
addb
repnz
adcl
xor
add
xchg
int3
dec
sbb
fnstenv
orl
lock
lods
and
rorb
lods
imul
or
test
jge
jge
mov
movl
or
pop
js
cmpsb
andl
dec
jnp
sbb
sbb
pushf
cmp
or
adc
mov
adc
inc
cld
mov
sub
or
dec
pop
insb
test
push
cld
sub
lret
addb
xchg
aam
cmpb
aam
popa
dec
inc
nop
sub
or
add
mov
ret
xchg
repnz
add
cwtl
outsl
hlt
add
cmp
loopne
add
setge
lea
inc
in
and
push
adc
lret
in
mov
in
in
mov
xchg
add
push
jo
adcl
enter
pop
out
icebp
stos
lret
push
push
subb
es
gs
add
xor
cmp
lea
and
stos
arpl
xor
pop
inc
pop
add
dec
repz
cmp
xor
sub
add
jb
pop
add
addr16
or
or
and
fisttpll
stc
jnp
lds
inc
mov
popf
aad
adc
add
movb
test
call
pop
add
addb
xor
mov
lock
mov
pop
push
sarl
addr16
movsb
jg
jne
push
subb
push
cmp
ret
and
pusha
push
sub
cwtl
adc
sub
adc
or
cmp
jge
or
cmp
or
loope
push
and
xor
mov
adc
jmp
call
adc
adc
pop
iret
roll
pop
and
adc
sub
xchg
stos
mov
repnz
pop
and
shrb
enter
sbb
rol
lock
mov
popa
shr
jp
or
addb
mov
leave
push
enter
call
pusha
mov
imull
std
adc
or
mov
cwtl
cmp
jno
out
cmp
push
sti
or
ja
ret
xchg
sub
push
insb
xchg
ss
in
sbb
mov
mov
fildll
arpl
push
xchg
add
add
xchg
add
repnz
sub
mov
mov
insl
test
or
add
rclb
icebp
outsb
adc
xor
loopne
cmp
sbb
sahf
cli
or
or
loopne
xchg
or
jnp
xchg
cmp
clc
pop
and
arpl
stc
pusha
test
add
add
les
add
pop
push
stos
pop
add
ss
push
call
or
pop
add
adc
orb
dec
stc
loopne
sti
bound
sub
push
aad
mov
call
movsb
xor
pop
mov
sbb
add
inc
loopne
jge
push
push
xor
xchg
adc
push
rolb
sbb
cli
loope
adc
mov
test
es
pop
mov
xor
or
inc
push
rcrb
add
dec
xchg
add
sti
add
pop
or
dec
cmp
xchg
inc
ror
arpl
sbb
and
sbbl
pop
add
int3
xchg
cmp
flds
and
popa
cmp
ja
je
paddb
fimuls
mov
popa
in
mov
inc
inc
shll
xchg
mov
fldt
add
imul
sub
inc
das
jbe
adcb
jge
add
insb
dec
add
pusha
adc
mov
or
and
and
add
dec
mov
adc
jnp
int3
dec
movb
lret
or
jb
lock
inc
jbe
sub
push
adc
jb
xor
test
sub
mov
add
jb
push
cmpl
in
fsubrl
adc
dec
mov
push
or
pop
jmp
and
dec
test
mov
sub
sbb
jl
or
sub
cmp
xor
rolb
sub
rol
mov
adc
jns
fs
call
mov
seto
cmp
repnz
sub
inc
xor
nop
pushf
pop
mov
js
test
bound
and
pop
mov
xchg
mov
hlt
push
push
inc
push
xor
pop
dec
dec
dec
dec
or
fistpl
inc
daa
dec
dec
push
cs
adc
rorb
insl
inc
gs
outsl
iret
mov
popa
jae
adc
jbe
xor
jne
pop
push
popa
cmpsb
mov
inc
les
or
sub
pop
dec
mov
mov
pop
ja
xchg
mov
jae
mov
adc
or
add
mov
popa
push
sub
or
stos
push
pushf
mov
xchg
add
or
add
adc
jnp
dec
lods
dec
or
js
int3
test
arpl
push
mov
insb
mov
jmp
pop
adc
jmp
pop
xchg
ret
or
xor
das
add
pop
inc
loopne
jne
movzbl
jno
ret
es
leave
je
nop
push
orl
repnz
out
pop
inc
mov
or
arpl
xchg
jmp
jle
mov
xchg
jno
xchg
inc
pop
or
ja
enter
out
or
mov
fcmovnb
mov
inc
fcompl
outsl
sbb
mov
cli
out
sub
dec
xor
xor
mov
and
imul
icebp
pop
arpl
cld
mov
inc
adc
jle
cmc
mov
in
mov
adc
fs
or
enter
popf
sbb
lods
lods
fwait
pop
outsb
push
ret
jo
xlat
sti
sbb
cmp
testb
push
xchg
data16
adc
subl
aad
xchg
inc
jne
push
add
mov
inc
xor
ret
pop
inc
fistpll
add
or
loopne
adc
add
xchg
add
lock
cld
lahf
lods
xor
mov
jp
mov
push
outsb
in
outsb
jne
sub
push
dec
mov
imul
fstpl
movl
push
sbb
pop
popa
jb
nop
hlt
push
cs
push
jg
push
fld
or
mov
fwait
rorl
ja
or
setb
push
inc
bnd
inc
mov
add
and
sub
loop
ljmp
inc
cmp
dec
pop
dec
xlat
jne
sub
jne
cld
pop
or
test
mov
gs
ret
ss
ret
adc
or
fistps
and
pop
mov
jp
adc
or
and
xor
outsb
dec
add
push
fs
push
cs
add
sub
xor
add
push
and
inc
push
xor
and
add
ljmp
inc
or
and
mov
push
cmp
or
pop
mov
mov
imul
and
ret
repz
imul
int
mov
or
shlb
shrb
mov
imul
mov
mov
or
ljmp
fistpl
mov
sbb
paddd
mov
pop
sub
add
ret
cld
call
movsb
add
push
pop
xlat
xor
sub
std
mov
mov
add
dec
xchg
xchg
or
addr16
and
push
add
add
enter
cmp
jbe
sbb
sete
je
xlat
cmp
adc
dec
das
adc
fnsave
adc
xchg
pop
loope
cmpsl
fbstp
sbb
pop
andps
jo
subl
jle
enter
sbb
jo
frstor
lds
adcl
fmuls
enter
add
adc
and
out
fwait
jne
rorb
or
xchg
mov
adc
inc
insb
add
mov
cmp
xchg
add
ss
jecxz
sub
nop
inc
shr
sarb
cld
xchg
mov
inc
cmp
mov
push
mov
mov
dec
insb
adc
sbb
add
or
in
inc
sti
add
and
test
or
movsb
mov
sub
gs
sub
outsl
lock
add
ds
push
inc
mov
arpl
mov
or
nop
fisttps
sbb
sub
clc
fidivrl
andb
push
push
pop
lods
mov
adc
cmp
or
imul
rcll
popa
lret
jbe
lahf
sarb
fld
mov
sub
mov
xchg
xchg
mov
and
pop
sarl
sub
cwtl
adc
mov
inc
or
or
in
and
imul
xor
sub
fs
in
jmp
inc
inc
inc
daa
les
es
pusha
sub
lods
mov
or
pop
and
in
and
and
sbb
data16
in
mov
dec
or
push
adc
and
insb
ror
or
inc
int3
jbe
add
adcb
or
or
pop
ret
stos
andb
add
or
inc
sbb
xor
push
inc
sbb
and
pop
pop
lds
push
cmp
push
pop
insb
mov
and
xchg
mov
dec
mov
out
fiaddl
shl
jle
sbb
pushl
testb
or
lar
push
cs
out
adc
jbe
mov
jmp
xor
enter
sbb
pop
sub
movsb
sub
mov
xchg
ret
andb
test
incb
sti
jmp
inc
xor
push
add
push
rclb
pushf
xchg
sbb
cld
lahf
dec
cwtl
inc
push
pop
mov
push
out
cmp
rcl
add
push
imul
lds
jecxz
add
adc
jns
mov
imul
adc
inc
pushl
or
mov
insl
stos
loopne
add
sub
or
cmpb
jg
mov
int3
sbb
inc
clc
push
or
sub
mov
add
lahf
mov
inc
dec
mov
test
push
test
pop
imul
add
jmp
bound
cltd
xchg
jge
inc
shlb
adc
mov
cmp
mov
xlat
sbb
pop
mov
jmp
jmp
in
popa
cmpsl
rcrl
in
sub
mov
pop
cmp
sbb
mov
or
imul
in
ljmp
jg
mov
mov
xchg
movb
add
push
push
mov
inc
xor
sub
cmc
inc
dec
test
sbb
or
out
jae
add
js
add
add
sub
jmp
sbb
fldt
mov
inc
xchg
mov
push
nop
xor
adc
dec
ret
out
into
inc
sub
sub
imul
add
loope
add
popa
adc
pop
call
or
mov
int3
enter
adc
loop
push
and
sbb
push
test
mov
and
xor
jle
or
push
xor
add
dec
data16
cmp
pop
inc
mov
leave
sbb
mov
xchg
arpl
sub
mov
pop
jle
adc
ss
pop
jno
pushf
adc
xchg
xorb
shrb
aam
icebp
add
bound
or
rorb
icebp
xlat
pop
mov
inc
cmp
sbb
leave
mov
or
aas
dec
xlat
inc
stos
sub
add
or
pusha
or
or
fmull
inc
xor
loopne
or
push
popf
xor
popa
and
test
incl
push
xor
cmp
xor
out
xrelease
in
jge
aam
xchg
push
sub
ja
mov
mov
insl
addr16
rcrb
xorl
or
push
jb
jmp
addl
push
sbb
pop
and
push
or
sub
or
sub
das
push
mov
adc
aas
mov
jecxz
push
dec
mov
jb
hlt
pusha
or
add
cli
pop
cmp
adc
sub
mov
xchg
testb
mov
and
sub
je
inc
je
inc
jo
mov
test
mov
mov
or
cwtl
add
jns
adc
push
push
adc
in
xor
mov
roll
jnp
mov
dec
and
or
adc
adcb
sbb
adc
into
xchg
aad
adcb
cld
jge
ror
test
loop
sti
jbe
cs
push
fsts
and
jae
mov
lret
adc
xor
fadds
and
mov
xchg
stos
mov
popf
sub
pusha
mov
mov
or
lods
or
in
adc
pop
sub
push
out
fsub
clc
or
pushf
push
push
xor
or
push
or
outsl
inc
push
xor
mov
mov
jmp
mov
lods
mov
push
sbb
out
lea
sub
and
add
fcomps
ja
mov
inc
mov
adc
adc
aad
outsb
or
les
enter
mov
inc
les
rcrl
adc
add
in
push
leave
fstps
adc
je
mov
in
mov
std
int
push
adc
aad
sub
lock
mov
push
jecxz
leave
dec
xor
pusha
push
mov
sub
jnp
and
int3
pop
pusha
xchg
scas
adc
push
or
xor
pop
fsubr
xor
dec
fwait
adc
mov
dec
shll
xor
mov
mov
lret
or
jo
xor
jo
inc
jmp
inc
mov
ret
and
inc
inc
rcrb
inc
iret
nop
test
insb
popf
inc
scas
mov
call
mov
jns
adc
push
xchg
add
or
xchg
cs
es
jnp
sub
sahf
cmp
xchg
mov
cwtl
xor
sbb
in
dec
sbb
xor
mov
outsl
cmp
aas
or
inc
inc
sub
inc
mov
pop
je,pn
pop
test
or
xor
in
inc
les
and
inc
in
push
je,pn
fisttpll
sub
movb
mov
adc
adc
dec
adc
mov
jl
int3
daa
and
dec
jmp
mov
scas
ret
xor
lds
mov
pusha
lcall
ret
movsl
jne
xor
adc
test
dec
xor
jmp
into
adc
mov
mov
mov
add
pop
sbb
xor
shrb
push
movsb
or
nop
jl
scas
shll
inc
negl
adc
push
dec
sub
arpl
insl
filds
mov
push
dec
add
add
insl
orb
lret
sub
movsb
bound
pusha
dec
mov
jo
es
push
addr16
cld
hlt
mov
add
insb
pop
addr16
orl
outsl
bound
imulb
adc
rcll
decl
call
sti
pop
fsubrs
std
sub
mov
cltd
stc
lock
mov
adc
imul
or
out
cmp
mov
sbb
mov
lret
dec
out
sbb
jecxz
jp
mov
and
push
inc
daa
inc
push
ret
cwtl
fisubs
dec
je
sub
inc
jl
cwtl
inc
and
mov
jmp
sbb
adc
lods
and
fstps
jmp
sbb
pop
mov
jo
add
add
inc
ja
fldenv
push
sar
mov
push
push
stos
mov
and
in
mov
and
mov
inc
cmp
dec
sbb
cmp
test
and
orb
pop
dec
push
cmp
fwait
adc
sub
adc
jecxz
inc
es
sub
inc
ret
aam
dec
mov
and
push
sub
push
cs
ds
test
cmp
je
push
add
cmp
hlt
sub
jne
ja
inc
gs
push
mov
dec
add
xor
mov
pop
adc
enter
inc
and
sub
sub
orb
mov
pop
push
int3
mov
aad
dec
adc
cmp
fneni(8087
rorl
lds
call
imul
daa
add
dec
arpl
push
xor
je
js
cmp
out
mov
push
and
mov
pop
outsb
cmp
sarl
or
mov
push
lods
mov
imul
jae,pn
imul
fcoms
ret
and
adc
mov
and
add
add
or
orb
int
mov
fsubrs
ret
stos
sub
jl
add
add
inc
mov
subb
add
adc
inc
mov
xor
xor
lods
test
jae
xchg
dec
lock
sbb
dec
add
cli
in
sbb
les
into
clc
sub
orw
mov
mov
adc
inc
or
je
mov
cli
ret
andb
cli
mov
arpl
pop
int
and
sti
inc
cmc
in
sti
add
sbb
jmp
es
mov
push
jo
cwtl
add
mov
imul
jle
xor
cs
sub
mov
pop
xor
mov
or
cmp
adc
sub
sub
add
mov
jne
jge
xchg
add
dec
add
andb
inc
and
or
mov
mov
sbb
mov
das
ficoms
adc
pop
inc
stos
call
lea
xchg
cli
push
lea
adc
dec
add
dec
jbe
inc
add
divb
sbb
adc
sbbb
fnstenv
jo
arpl
or
stos
adc
and
mov
jo
push
jae
or
pusha
pop
pop
push
cwtl
pop
ret
mov
xchg
mov
dec
dec
cmp
jne
sbb
push
cmpsb
addl
sbb
jge
std
lret
adc
mov
push
adc
adc
push
and
mov
nop
jb
push
inc
das
shlb
push
mov
je
lds
dec
mov
mov
or
out
inc
or
mov
or
js,pn
add
add
je
aad
fadds
popa
cmp
and
mov
mov
enter
ret
cmp
dec
leave
push
inc
movsb
sti
arpl
in
cmp
mov
jnp
push
cmpsl
addr16
push
push
cmpsb
inc
or
in
mov
mov
mov
mov
or
sbb
adc
or
nop
int3
inc
enter
repnz
push
push
lcall
push
decb
cltd
mov
mov
lcall
sub
aaa
add
and
push
ss
mov
clc
call
cwtl
mov
dec
addl
call
rclb
and
or
or
popf
inc
dec
dec
add
out
push
push
aad
or
cwtl
push
mov
push
rclb
int3
jmp
inc
test
or
shr
fsubs
idiv
test
and
pusha
lods
add
mov
bound
and
and
mov
mov
pop
and
add
add
pop
sbb
inc
sub
lods
xchg
cmp
cmp
roll
xchg
or
xchg
ret
je
pop
movsb
push
sub
imul
and
rclb
and
clc
add
in
add
sub
push
enter
lea
jno
push
push
adcb
cmpsl
in
pop
shrl
pop
sub
paddb
cmpsb
imul
dec
xlat
xor
mov
imul
lods
add
aaa
in
lcall
call
pushf
xor
adc
nop
pusha
lcall
les
jns
scas
cld
xor
rcll
or
cmpb
mov
add
testl
mov
inc
cmp
es
add
or
sub
cld
cmp
fdivrl
adc
inc
add
icebp
mov
pusha
add
push
hlt
dec
outsb
arpl
sti
adc
xor
add
shlb
in
push
inc
das
mov
adc
xchg
add
dec
add
pop
flds
sbb
push
pusha
mov
pop
mov
inc
and
cwtl
sbb
dec
das
imul
or
or
add
mov
or
jb
daa
cmp
adc
rcll
mov
sub
pop
or
test
push
jo
push
fstl
add
push
add
push
push
imul
and
sbb
mov
add
push
in
inc
inc
mov
add
mov
add
jle
or
push
push
inc
pusha
push
inc
adcb
inc
mov
jg
lcall
pusha
je
xor
adc
add
dec
adc
nop
fildl
sbb
add
add
fldcw
inc
or
xchg
lds
add
inc
inc
sbbl
xor
daa
sbb
add
lret
sbb
cmp
adc
inc
sub
add
xorl
bound
push
push
pushf
sbb
or
out
sbb
jp
in
adc
insb
outsl
addr16
and
push
outsl
push
inc
or
cwtl
adc
arpl
pop
out
pop
nop
and
incl
or
jg
shrb
xchg
insb
leave
int
das
sahf
int3
inc
int3
dec
push
fwait
out
in
ja
xchg
or
scas
mov
imul
frstor
out
sub
out
or
lret
inc
lcall
ficoml
jnp
dec
insb
or
das
or
add
fsubrp
jo
dec
outsb
fdivs
jo
or
data16
mov
add
push
imul
or
or
add
pusha
mov
or
inc
jle
add
inc
nop
rcrb
push
ja
fcoms
pop
or
adc
lret
inc
gs
popf
or
leave
mov
mov
or
adc
mull
sub
push
outsl
xor
ret
push
enter
addr16
dec
dec
xor
divb
xor
divl
xchg
or
das
je
mov
add
imul
scas
insl
sbb
push
xchg
insl
mov
nop
xchg
pop
or
cmp
rorb
adc
leave
ja
sti
pop
or
or
aaa
adc
mov
push
jne
jns
or
cmp
adc
cmp
les
cmp
fsubrp
cmp
inc
fsubrl
inc
sti
clc
jae
mov
pop
mov
pop
cmpsb
pop
push
add
aaa
fsubl
mov
pop
xor
movsb
pop
sbb
cmp
imul
mov
je
pop
ja
movsb
jp
nop
inc
je
jo
pop
gs
movsl
push
sbb
push
jge
gs
add
add
add
cmp
movsb
adc
add
add
add
add
or
push
pusha
addl
or
scas
push
mov
mov
test
sbb
mov
push
roll
mov
call
popf
sub
aad
jecxz
jl
imul
cwtl
fldcw
cmpsb
int3
in
jg
sbb
mov
lcall
enter
pop
hlt
pop
push
addb
dec
mov
xchg
pop
pusha
add
sub
imul
sub
data16
int
or
ja
popa
or
mov
xchg
fcomi
bound
adc
dec
andps
and
pop
or
or
lcall
adcl
add
and
push
in
ud2
add
loopne
sbb
sti
int
flds
sar
cmp
xorl
cs
mov
je
push
or
xor
mov
mov
daa
dec
imul
jmp
mov
dec
xor
add
xchg
shlb
and
jns
or
add
fsubs
sbb
rorb
push
dec
push
cmp
push
in
bound
adc
inc
add
cmp
lret
das
es
or
sub
int3
xor
add
pop
sub
enter
lcall
mov
or
inc
jmp
inc
je
inc
adc
pop
mov
and
roll
push
pop
xchg
stc
sub
lods
cmc
roll
xor
jne
mov
push
pop
nop
sub
mov
push
xchg
bound
pop
in
pop
jb
add
sub
pop
mov
arpl
add
les
scas
pop
neg
testl
scas
sbb
jmp
fwait
in
ja
push
imul
inc
mov
push
mov
imul
sbb
sbb
jb
and
out
and
insl
jp
cltd
sub
sbb
jae
gs
scas
lahf
mov
pop
mov
jo
pop
push
inc
ss
mov
cmp
cmp
outsb
pop
jmp
repz
fstpt
and
and
pop
sarb
inc
and
xor
icebp
or
clc
cmp
add
shlb
jo
fiadds
push
mov
inc
test
dec
mov
adc
es
push
adc
cs
adc
cmc
dec
outsl
and
or
xchg
sub
pop
popa
xchg
and
stc
test
stos
inc
jns
es
pop
dec
loop
cs
and
add
lods
sub
je
int3
xchg
and
enter
leave
inc
rclb
and
aaa
push
es
sub
or
pop
ret
mov
lock
nop
inc
aam
nop
xor
sub
and
arpl
pop
shrb
imul
sub
mov
xor
fstps
lahf
and
adc
movsb
mov
and
inc
std
jo
lods
dec
sbb
in
add
inc
xchg
nop
xor
xor
repz
hlt
xchg
xchg
cmpsb
mov
outsb
mov
les
xor
dec
cld
and
xor
pop
cmp
int
push
jo
sahf
and
add
or
je
leave
nop
xor
ss
out
mov
jl
jl
push
outsl
sbb
jp
xchg
xor
addr16
and
lret
push
and
cmc
jmp
test
inc
sbbb
lar
ljmp
add
add
int3
xor
add
movsb
fidivs
push
nop
out
mov
cmpb
adcb
and
fwait
add
jo
dec
cmp
das
in
js
lods
inc
lcall
in
push
xchg
xor
pop
test
sub
in
jnp
popa
push
inc
push
sub
test
cmp
ret
repz
xor
dec
hlt
pop
xlat
pusha
scas
sub
push
or
dec
repnz
clc
int3
pop
jo
outsb
and
cmp
xor
je
or
and
pop
xlat
adc
add
mov
push
add
mov
adc
sub
push
add
push
mov
bound
cmp
add
sbb
or
call
push
inc
es
add
xchg
stos
fdivrs
xor
test
mov
arpl
add
sub
sbb
pop
fisubrs
fisubrs
xor
stos
ljmp
mov
sub
decl
cmp
dec
push
cmp
je
inc
ss
in
adc
test
jne
cmpl
mov
jmp
adc
test
push
push
dec
enter
sbb
dec
pop
jp
pop
je
mov
filds
in
sbb
push
sbb
cmp
fs
mov
mov
cmp
jg
incb
movb
mov
jle
inc
shrb
sub
fsubrs
jns
and
xor
mov
inc
movsl
mov
and
adc
pop
and
cmp
push
mov
loopne
cmp
in
es
into
nop
push
mov
mov
adc
sti
pop
xlat
push
das
mov
test
add
das
lods
push
fdivrs
jae
enter
and
xor
ret
xorb
pusha
inc
jl
or
jge
movl
add
pop
xlat
push
push
push
les
testl
or
pop
enter
xchg
sbb
adc
xor
cmp
testb
ds
adc
and
nop
cmp
fdiv
and
xchg
adc
stos
aaa
mov
push
dec
pop
stos
dec
mov
sub
add
or
adc
push
jne
arpl
out
add
add
inc
js
mov
popf
adc
mov
sub
mov
cmp
or
bound
add
or
inc
adc
mov
rorb
js
sbb
inc
inc
pop
sub
cmp
aaa
or
xor
cmp
pop
shll
ror
negb
mulb
or
sbb
adc
jmp
pop
sbb
add
dec
xor
push
ljmp
mov
or
inc
add
add
sub
loopne
mov
add
push
add
insb
push
arpl
push
sbb
fildll
loopne,pn
mov
lea
mov
xor
cwtl
dec
push
add
pop
adc
and
leave
std
pop
or
add
daa
xor
inc
incl
aas
inc
shrl
add
sbb
fimuls
fisttpl
pop
mov
pop
lret
dec
add
xchg
imul
std
imul
mov
mov
push
pop
inc
adc
xchg
add
push
enter
je
mov
in
inc
pop
leave
pop
inc
mov
xlat
pop
mov
bound
cmp
jno
mov
xor
divl
or
inc
mov
mov
mov
ret
cmp
push
push
xchg
or
addl
daa
sbb
adc
jg
cmp
dec
or
sub
mov
mov
add
jmp
data16
sbb
or
add
or
inc
lcall
or
add
jnp
in
pop
push
lock
lds
pop
and
mov
dec
pop
inc
stos
jb
inc
mov
push
adc
aam
xor
mov
es
mov
cli
je
lods
mov
push
push
clc
pop
dec
sub
jmp
inc
loop
dec
fldenv
xchg
ret
pop
es
xchg
and
fadds
jne
adc
mov
and
add
loopne
rsqrtps
in
ret
nop
movsl
add
popa
adc
mov
clc
ljmp
add
inc
or
inc
or
adc
in
and
add
in
xor
je
sub
ss
push
sbb
inc
ja
adc
shlb
das
pop
data16
and
mov
or
test
push
add
pop
push
shrl
je
jmp
shl
push
cmp
xor
cmp
dec
mov
enter
or
push
hlt
cltd
inc
adc
xor
add
jp
clc
pusha
imul
and
insl
in
mov
mov
sbb
push
pop
push
movsb
cmp
push
test
push
xchg
jge
mov
pop
jmp
adc
inc
sbb
leave
insl
or
add
aaa
mov
rorl
mov
fs
add
mov
or
push
lock
addb
movsb
lret
sub
ss
xchg
sti
pop
or
and
out
xor
jno
js
inc
push
pusha
jg
pop
hlt
neg
jmp
sub
and
sub
mov
scas
add
add
lock
notl
shlb
push
mov
add
pop
mov
lods
sub
cmp
mov
jmp
adc
and
and
sub
adcb
and
loopne
add
push
adc
stos
pop
pop
ja
mov
dec
push
mov
add
lcall
mov
or
mov
dec
adc
add
cmp
cmc
insl
fcoms
shlb
fstps
sbb
sbb
es
or
andb
adc
jnp
jo
ljmp
jmp
es
sarb
inc
mov
shrb
rolb
js
pop
add
jae
lods
mov
mov
dec
sub
adc
or
mov
fmul
sub
pop
lods
mov
pop
adc
les
mov
or
pop
push
lods
pop
push
inc
xlat
adc
stos
fisttpl
gs
js
push
sbb
inc
xchg
mov
mov
adc
sarb
mov
add
or
movb
fildll
add
ret
sbb
add
adc
sub
and
loopne
fiaddl
adc
mov
outsb
in
jg
jmp
lock
mov
inc
iret
insl
cmc
call
ja
ret
push
stos
sbb
or
jb
adc
cmp
out
inc
adc
inc
adc
jmp
insb
adc
adc
or
adc
sbb
insl
push
stc
sbb
in
sbb
mov
call
sbb
sub
shrl
cmp
mov
movb
add
mov
or
test
and
andl
stos
pop
push
sbb
lret
pushf
push
jno
mov
ret
adc
xor
addl
sub
dec
mov
sbb
cmpsl
sub
push
fiadds
dec
or
mov
insb
add
repnz
pop
aad
dec
andb
pop
adc
and
jg
bound
fs
or
cmp
pop
cltd
loope
xor
jmp
jae
scas
and
adcl
or
fisubrl
sbb
sub
insb
nop
add
movntq
inc
mov
jb
lret
pop
push
sub
movb
clc
adc
dec
divb
test
and
cmp
xor
jmp
and
xor
push
sub
nop
int3
mov
pop
out
loope
and
arpl
testb
into
add
xchg
cwtl
je
inc
jl
jg
sbb
sub
sbb
test
push
ret
push
add
lgs
pop
push
sbb
cmp
lea
addb
adc
mov
scas
xor
sub
lea
sub
add
jmp
adc
jp
popa
sbb
inc
test
cmp
jge
or
sub
or
add
inc
mov
rolb
xchg
aas
jne
mov
pushf
cmp
sbb
cld
pop
mov
or
ss
fmuls
mov
sub
pop
or
lahf
adc
dec
sub
je
flds
outsl
adc
movd
mov
aas
or
push
push
cmp
cmpb
pop
stos
and
jns
xchg
adc
mov
sbb
add
and
add
mov
rorb
push
mov
ret
sub
adc
pop
ds
sbb
loopne
sub
inc
scas
sbb
add
push
sbb
adc
mov
aaa
sbb
push
mov
jg
aam
pop
jns
xor
flds
test
popa
and
inc
popf
scas
loop
ret
pop
in
sbb
mov
push
fsts
leave
lock
pop
rolb
push
inc
int
sbb
add
add
testl
cmp
hlt
in
xchg
cmp
ds
orb
push
add
ja
roll
inc
mov
fs
or
decb
psubw
add
push
mov
jecxz
jge
in
push
stc
into
add
adc
sarb
enter
das
or
sub
pop
mov
mov
push
or
add
fs
js
test
popa
add
subl
mov
mov
mov
xchg
and
inc
into
inc
mov
mov
cmp
mov
or
adc
sti
mov
std
mov
adc
xorl
lahf
pop
adc
test
sub
stos
inc
or
mov
rcr
pusha
push
aas
adc
inc
sbb
lret
stos
sub
sbb
pop
xor
xchg
and
push
mov
cmp
sub
rorl
fmul
push
push
cmp
js
ret
cmp
cld
sbb
loope
dec
cli
inc
adc
xor
push
rolb
adc
clc
pop
xchg
push
dec
push
arpl
push
add
es
sub
sbbb
cwtl
add
xchg
xchg
add
sub
push
push
les
adc
pop
lock
fs
pop
inc
pushf
pop
inc
stos
push
sbb
mov
xor
pop
out
push
pop
test
inc
inc
add
adc
addr16
inc
sub
mov
sub
fistpl
pop
clc
adc
adc
rclb
cmp
or
cmp
cltd
and
stos
lds
divb
ss
insb
int3
or
jecxz
add
xor
into
mov
pusha
scas
test
pcmpeqb
lcall
add
in
inc
push
rcrl
je
adc
add
js
into
jo
popf
cmp
push
xor
mov
xchg
mov
lods
insb
jl
dec
jbe
insb
sub
jns
enter
popf
out
cmp
mov
or
ss
push
or
mull
arpl
sub
and
or
xlat
cmp
scas
jns
cld
cs
fcomps
push
lods
inc
mov
fmuls
push
push
in
inc
ret
adc
xchg
popf
mov
inc
add
sub
adcl
les
mov
adc
mov
or
adc
or
aaa
dec
pop
xor
sbb
mov
and
add
nop
mov
mov
adc
or
cmp
push
dec
adc
movsb
pcmpeqb
test
lods
iret
pop
nop
lods
and
sbb
pusha
and
in
pop
js
movsb
xchg
and
pop
pop
ss
jmp
xor
loop
push
push
cmpb
pop
call
nop
xchg
push
lea
mov
pop
push
adc
sub
lcall
in
aam
xor
sbb
inc
xor
mov
aas
cmpb
push
mov
push
sbb
or
inc
dec
push
fsub
sub
pop
jbe
call
sub
inc
int3
mov
dec
mul
cld
lds
or
sub
int3
js
nop
aaa
and
mov
subl
mov
orl
movsb
sub
pop
in
nop
push
fwait
scas
mov
fs
push
pop
enter
pop
ret
arpl
fiadds
pop
or
push
and
push
add
inc
mov
xor
clc
inc
shr
lret
push
mov
or
or
push
push
push
add
mov
ljmp
cmpsb
lea
inc
cmp
icebp
cmc
je
jno
repz
or
dec
sbb
pop
mov
sbb
add
andb
inc
xlat
mov
adc
scas
test
and
sbb
xor
pop
shrl
xor
addb
fisubl
push
in
hlt
aaa
xlat
cmp
sbb
mov
pusha
adc
pop
cmp
aad
and
push
int3
and
aam
repz
push
icebp
jmp
lcall
fadds
pop
sti
or
mov
sbb
mov
enter
or
lods
inc
or
andb
pop
je
out
pusha
filds
mov
adc
jle
lods
ljmp
mov
push
inc
adc
inc
ds
pushf
repnz
sub
nop
xchg
mov
mov
or
jae
std
inc
fsubl
adc
mov
inc
adc
scas
mov
push
adc
cli
pop
bswap
adc
add
push
movsb
rorl
loop
cmp
lea
add
push
push
inc
add
fbstp
jb
adc
lahf
rol
inc
mov
and
cli
push
mov
dec
add
jae
ja
xor
mov
push
test
or
clc
test
jge
mov
push
dec
ss
push
push
adc
in
sbbb
shl
ljmp
pop
push
inc
xchg
iret
push
stos
or
clc
push
lods
sub
add
dec
push
clc
xor
jns
aam
add
add
cmpsl
add
inc
push
add
ss
insl
adc
push
xchg
subl
mov
mov
sub
imul
mov
and
push
mov
mov
test
pop
mov
cmp
stc
lret
xor
add
pop
test
and
adc
jmp
xchg
int3
xchg
add
or
xor
push
sub
in
loopne
pop
mov
add
inc
add
or
and
ja
insb
pop
mov
cmp
adc
push
cmp
adc
and
data16
inc
and
adc
add
and
sbb
into
cmpsb
pop
or
clc
addb
and
mov
test
mov
lret
je
cmp
jne
push
lcall
pop
mov
sub
push
add
jl
xchg
inc
pop
sub
test
pop
mov
fisubrs
xor
push
fldenv
out
or
xchg
and
imul
add
iret
push
or
sub
push
push
push
call
push
cmp
cmp
or
sbb
sbbb
xchg
pop
gs
faddp
mov
pop
and
inc
sbb
inc
cmp
xor
push
les
sbb
xlat
loopne
push
mov
sti
push
adc
pop
icebp
and
dec
test
in
mov
cs
adc
cmc
mov
pushf
movl
jb
push
cmpsb
dec
mov
cmp
jb
xchg
and
loop
aad
loop
pop
dec
add
sub
lods
loope
cmpl
jne
push
adc
add
xor
pop
syscall
dec
mov
sti
mov
mov
push
dec
add
mov
jo
je
sub
mov
sub
clc
sbb
cmp
nop
adc
pop
mov
cmp
sbb
clc
adc
sti
pop
cmpb
xchg
and
ljmp
fsts
pop
cltd
shl
adc
lds
sbb
dec
push
mov
dec
ret
push
cltd
xor
test
add
sub
inc
outsl
stos
and
lea
ret
fbld
xchg
pop
sbb
push
loope
cmc
push
pop
push
xchg
addl
jnp
fsubrs
xchg
xor
insl
inc
jo
jb
nop
add
popa
inc
mov
dec
fadds
lret
mov
lcall
out
lock
push
jno
or
divl
xchg
mov
stos
mov
push
addl
add
loopne
jno
cli
push
lahf
push
daa
je
cwtl
nop
insb
ror
sub
add
je
sbb
xchg
sbb
data16
outsb
sahf
jmp
sub
sub
inc
xchg
sbb
cmp
fcoms
repz
mov
add
dec
lock
or
outsl
call
push
cmp
enter
jl
xor
pusha
cmpsl
arpl
cmp
adc
pop
add
push
leave
xchg
xlat
lahf
sbb
xor
cwtl
and
pop
dec
cmp
add
out
ss
mov
adcb
insb
lock
mov
push
aad
mov
lods
ror
sub
or
push
lods
loope
lods
cmp
imul
inc
lcall
and
pop
inc
jb
subl
ret
sbb
subl
adc
sub
xor
iret
test
add
pop
ss
pop
mov
pop
mov
xlat
xchg
inc
jo
rcrl
mov
push
add
les
push
add
aaa
cld
inc
dec
dec
sbb
xor
cmpl
xor
iret
inc
sbb
mov
shll
cld
mov
orb
dec
call
es
pop
mov
lahf
lods
sbb
push
adc
gs
xor
push
pushf
testl
pop
push
addb
add
scas
lods
add
jo
add
pop
or
xchg
sbb
push
xchg
jmp
push
rorb
mov
pop
mov
popf
adc
imul
sbb
inc
xor
or
insl
call
ja,pn
push
popa
out
and
out
popa
mov
and
sub
divb
outsb
mov
cld
fdivrl
and
fwait
or
fnsave
icebp
add
or
cmp
mov
cwtl
mov
or
aad
inc
shll
pushf
xor
adc
xor
bound
xor
or
or
pop
out
or
pop
inc
movsl
sub
sbb
sbb
imul
pop
push
cmp
inc
addr16
dec
ret
pusha
xchg
cltd
xor
sarb
daa
or
cld
push
test
cmp
cmpsl
mov
sbb
sub
pop
sub
or
shll
dec
add
add
xor
test
adc
inc
mov
jnp
dec
or
rcll
mov
add
xchg
dec
adcb
cmp
mov
inc
mov
adc
mov
test
push
cmp
dec
dec
inc
dec
lock
xor
add
mov
dec
xchg
movsl
push
cmpsl
popf
sbb
xor
mov
add
call
lock
mov
add
xchg
and
pop
xchg
lods
test
call
gs
xchg
lock
add
and
fsubrl
push
dec
cwtl
sar
stos
pop
mov
adc
push
in
int3
hlt
ret
sbbb
popa
out
and
and
mov
clc
and
rolb
int
popa
xchg
mov
pop
mov
jne
mov
jo
cs
sub
adc
and
mov
shll
ds
pushl
pop
mov
clc
mov
sbb
adc
xor
test
testl
pop
adc
shrb
xor
sbb
lds
xchg
and
addr16
add
push
mov
mov
sbb
cwtl
inc
mov
into
shll
enter
xchg
sbb
enter
add
int
adc
push
jo
mov
lock
xor
xchg
sub
add
test
outsb
push
jge
stc
lahf
imul
xchg
cwtl
mov
mov
xor
and
mov
mov
inc
insl
mov
sub
iret
nop
dec
aad
adc
adc
pusha
leave
and
in
and
xor
jmp
adc
inc
sbb
jmp
mov
mov
jae
nop
pop
lock
aad
dec
daa
in
xor
sbb
add
outsb
test
fs
push
aaa
nop
push
es
jne
add
rcrl
add
add
popa
int3
add
or
inc
hlt
test
shlb
ss
xor
int
enter
daa
loop
xadd
sarb
icebp
xchg
xchg
jne
mov
setle
mov
cmp
sub
push
jbe
and
inc
xor
outsb
fisubrs
push
pop
cmp
cmpb
xorb
adc
inc
xchg
mov
jmp
rcrl
shlb
push
inc
or
xor
in
push
xor
push
adc
nop
sub
or
mov
test
rol
dec
lock
mov
or
add
xchg
sbb
mov
mov
sub
push
add
test
push
sbb
inc
jne
adcb
xor
lret
sbb
or
add
gs
and
add
push
inc
sbb
mov
push
test
mov
nop
or
lock
lcall
inc
and
mov
pop
add
shlb
sub
arpl
jle
or
jmp
jp
mov
adc
cli
add
push
testl
mov
into
mov
dec
aaa
inc
out
mov
inc
cmp
mov
outsb
add
dec
mov
lds
and
xor
pop
mov
enter
sahf
pop
sbbl
sbbl
mov
enter
scas
addl
add
or
xchg
inc
cmpsb
mov
aam
pop
jnp
jnp
mov
sbb
mov
fs
test
mov
push
sub
mov
push
and
push
inc
aam
das
loopne
add
pop
call
xchg
jns
or
cmp
mov
or
orb
call
scas
add
mov
sub
test
and
out
or
ss
je
inc
sbb
cmp
cmp
cmp
mov
loope
sbb
mov
mov
or
jl
adc
sbb
sub
lahf
fcomps
fdivs
dec
push
push
inc
xchg
xor
inc
scas
inc
gs
popa
or
sub
andb
test
insb
dec
fidivrs
cli
adc
int
movl
or
mov
push
and
nop
fimuls
leave
or
ret
es
xor
cld
and
cmp
mov
jp
fsubl
dec
add
push
xor
movsb
mov
push
and
cmp
dec
push
insb
pop
or
es
sbb
add
jge
cmp
jmp
cmpsb
or
sbb
ret
pop
pop
aaa
dec
inc
sbb
adc
jae
xlat
ja
and
nop
jg
mov
jge
push
mov
jle
insl
add
daa
pop
and
shll
and
bound
pusha
stc
and
loopne
jno
lock
imul
add
das
sbb
clc
js
pop
fsubrs
lods
mov
bound
shll
mov
and
clc
incl
jo
enter
push
mov
outsl
sbb
pop
mov
cwtl
adc
mov
mov
push
pop
ds
push
xor
cltd
fcoms
mov
ja
cmp
fldl
mov
xchg
adc
lahf
push
nop
subb
jg
sbb
leave
fiadds
mov
mov
mov
addr16
add
repz
cwtl
inc
sub
mov
sbb
adc
movb
jmp
or
mov
jp
ja
push
adc
or
add
and
inc
pop
js
and
ret
inc
lock
sub
and
add
dec
inc
lahf
repz
push
es
nop
iret
pusha
mov
test
or
imul
ret
dec
or
mov
pop
push
inc
cmpsl
cmpsl
fdivs
lock
adc
fidivl
mov
pop
rcrb
xchg
sub
ds
jp
mov
jmp
cmp
mov
aaa
mov
sbb
add
or
and
sub
jae
push
insb
aaa
leave
push
sbb
rcll
cmp
pop
fwait
nop
mov
push
lods
adc
cmp
xchg
pop
push
mov
add
adc
outsb
jnp
xchg
ret
pop
sub
and
popf
push
mov
mov
cmp
sbb
dec
call
sbb
lods
push
jbe
adc
les
gs
push
or
inc
pushf
mov
adc
cmp
xor
dec
mov
adc
mov
loope
or
jo
sub
pop
nop
pop
and
inc
add
lods
pusha
loopne
lock
aad
test
test
leave
lods
sbb
push
aam
fstp
push
or
aas
inc
imul
xor
rolb
inc
xor
les
testb
inc
cmp
mov
add
ds
mov
mov
pushf
clc
add
inc
popl
jno
fstps
jl
data16
mov
loop
ja
xchg
test
in
add
xor
add
or
clc
addb
popf
shrl
ret
nop
sub
mov
insb
mov
push
add
cli
daa
inc
mov
incl
enter
xchg
xor
add
and
push
mov
inc
sbb
xor
imulb
sarl
inc
jmp
out
call
je
mov
daa
int3
out
add
add
leave
xor
xchg
push
add
mov
adc
dec
mov
xor
pop
cmp
and
pop
cmp
sti
dec
push
and
shl
test
cs
aaa
push
sub
sar
jns
adc
xchg
lods
call
cmp
xor
jne
lea
add
add
push
push
cmp
push
shlb
bound
flds
imulb
adc
dec
shlb
push
adc
pusha
cmpl
jmp
inc
mov
jae
xorb
movsb
and
cmp
lds
cmp
xchg
adc
inc
fdivs
divb
jb
cmpxchg
fmuls
cltd
fcoms
push
xor
pop
pop
or
int3
push
out
adc
or
loopne
xor
pop
dec
mov
fidivs
sbb
adc
andb
add
mov
adc
flds
repz
and
add
out
pop
jns,pn
lds
lea
jae
stos
adc
add
push
in
lret
push
addb
and
out
sbb
lret
cmp
push
pusha
sbb
fstp
mov
fldl
mov
pop
andb
pop
or
xchg
push
or
jmp
push
push
rolb
out
dec
sub
in
adc
mov
sbb
jl
push
lahf
movl
push
in
mov
jg
adc
sub
mov
test
mov
addr16
xchg
add
mull
inc
jnp
jmp
sbb
ds
and
sbb
pop
jp
sub
inc
push
nop
sub
jbe
fcompl
sbb
ficomps
sub
faddl
sbb
sub
sbb
mov
mov
rorb
add
shrb
and
push
mov
push
es
mov
leave
ss
mov
or
testb
lret
por
mov
js
movsb
and
mov
fwait
and
scas
out
cmp
repnz
mov
roll
dec
and
es
test
and
adc
fisttpl
mov
and
lcall
aas
loopne
mov
shlb
das
jae
lcall
xchg
aad
xor
adc
nop
dec
loopne
insb
lods
dec
mov
push
pusha
mov
mov
mov
sbb
inc
insl
mov
sahf
inc
add
test
or
inc
test
xor
cs
jbe
adc
fidivrs
test
cmp
ss
filds
ss
data16
repz
adc
nop
mov
add
in
push
or
test
xchg
dec
fwait
mov
movl
push
sbb
ffree
imul
sbb
arpl
call
fdivs
cmp
xor
mov
adc
cmc
and
jne
push
push
out
adc
dec
jbe
xchg
or
shll
or
pop
insb
incl
add
push
xor
inc
lahf
mov
jp
mov
and
mov
stos
sub
popf
mov
mov
imull
jl
mov
mov
xor
adcb
or
or
inc
jno
ret
adc
stos
mov
fdecstp
loope
add
clc
pop
push
push
xor
shlb
jg
inc
aad
lock
and
inc
inc
jp
or
xor
int
or
fsubrs
sysret
add
adc
dec
add
dec
leave
xchg
sbb
and
xchg
insb
pop
xor
cmp
sub
mov
out
out
enter
jb
jecxz
push
cmp
or
xorb
adcb
lret
cwtl
xchg
mov
fadd
pop
sbb
fidivs
push
xchg
or
aam
pop
or
and
stos
js
inc
and
push
lds
xor
xchg
push
jo
push
push
aam
push
loopne
aas
ficoml
stos
and
outsl
jo
dec
push
sbb
inc
and
popf
test
push
imul
stos
sarb
je
adc
jbe
adc
inc
mov
jle
lret
lret
mov
adc
add
jbe
shll
fwait
lods
mov
inc
ja
outsl
ret
adc
inc
movsl
xchg
pop
push
imul
popa
es
call
add
pop
xor
arpl
or
fiadds
mov
jmp
mov
jl
add
jle
add
cmp
xchg
xor
add
mov
lds
dec
inc
mov
enter
ficompl
mov
mov
inc
add
mov
sub
pop
push
pop
or
cli
rcrb
lcall
mov
and
push
push
sub
and
adc
aad
mov
dec
pusha
ja
aad
mov
popa
dec
xchg
mov
mov
cmp
lea
xor
rol
mov
fadds
pop
xor
inc
adc
pop
add
sbb
ds
lds
test
sbb
test
mov
push
mov
add
push
lea
pushf
popl
inc
inc
test
cmp
xor
or
ss
pop
sub
mov
cmpsb
add
sbb
es
loopne
xchg
std
push
aam
jbe
imul
mov
sbb
ret
inc
sbb
std
or
pusha
movsb
das
mov
ja
lahf
cmp
test
testl
add
sbb
push
or
lock
sar
popa
testb
inc
sbb
sub
icebp
fisubs
jmp
dec
adc
push
andl
nop
into
gs
or
dec
push
add
pushl
dec
popa
jns
jne
jae
xlat
js
add
insb
or
dec
test
and
mov
fwait
scas
dec
dec
xor
negb
fwait
outsl
inc
add
add
jne
inc
insb
xchg
or
push
lods
jae
aad
dec
sbb
stos
clc
adc
jae
outsl
imul
divb
std
stos
cmp
adc
sub
inc
add
test
sub
addl
pop
add
push
mov
mov
pop
sbb
inc
push
push
sub
add
add
inc
pop
incl
xlat
add
add
inc
addr16
cmp
clc
add
repnz
jo
stos
mov
in
adc
bound
adc
cmp
hlt
out
push
push
xchg
sbb
pusha
add
pop
and
or
pusha
test
or
dec
and
js
or
out
mov
add
lods
jae
adc
push
dec
aaa
mov
mov
mov
cmp
aad
and
cli
sbb
xchg
or
or
rorb
fld1
add
push
and
fsubl
cmp
jne
ret
xchg
ja
mov
mov
pop
or
orb
push
mov
xchg
xchg
outsb
add
je
cltd
xchg
mov
jae
pop
repz
or
push
mov
lock
stos
push
mov
fistpl
stos
pop
add
and
fs
adc
outsb
movsb
and
hlt
sbb
cmp
mov
shlb
jecxz
ja
sbb
push
cwtl
inc
pop
inc
je
hlt
add
inc
add
orb
jae
or
fs
xor
push
bound
pop
or
ss
test
rcrb
mov
jge
stos
das
pop
out
mov
dec
dec
push
xchg
mov
ja
xchg
or
xchg
or
jle
clc
cld
push
push
fsts
mov
add
loop
fldt
pop
out
push
add
arpl
mov
jo
clc
popf
or
pop
add
sub
and
fstpl
cmp
and
jns
or
pop
xor
pusha
les
and
cs
add
data16
push
js
test
sub
mov
mov
sbb
lods
out
mov
shl
cs
mov
stc
int
adc
adc
es
push
add
data16
adc
imul
dec
add
pop
inc
lahf
and
mov
pop
and
inc
jl
clc
out
pusha
xor
test
inc
add
aas
stos
bound
jle
add
xchg
dec
jmp
dec
inc
dec
dec
dec
inc
dec
dec
icebp
add
xrelease
adc
arpl
je
jle
int3
xor
sbb
push
cmpsl
mov
or
inc
hlt
movb
jg
testb
and
popf
sbb
push
in
imul
int
sub
stc
push
sub
cmp
je
and
out
mov
ljmp
mov
xchg
jo
pushf
push
add
inc
xor
mov
mov
cmp
mov
orl
inc
sub
fmuls
cmp
mov
adc
jb
mov
add
mov
mov
add
lods
inc
leave
push
add
inc
push
adc
lds
add
cmp
and
and
adc
sub
push
mov
out
pop
cmp
adc
sbbl
xchg
pop
andb
and
add
add
xchg
push
xor
mov
or
jns
aas
fwait
aam
mov
in
push
sub
cmp
and
sub
xor
dec
push
push
leave
sbb
jg
or
and
fstps
pop
and
cmp
or
lcall
cmp
adc
xor
jo
add
and
dec
inc
cmp
je
into
js
sub
js
xchg
addb
push
in
push
add
pusha
mov
adc
jo
mov
and
and
sbb
mov
mov
sub
or
and
pop
je
ret
inc
and
pushf
stc
movsb
fwait
dec
pusha
inc
cmpl
push
jo
push
mov
fwait
imul
push
scas
xor
aam
sub
js
adc
ss
and
jo
mov
je
fadd
mov
je
fidivrl
hlt
pusha
push
mov
inc
pop
cmpsl
sbb
out
movsb
inc
jle
decl
lods
imul
push
data16
flds
ficoms
mov
mov
add
add
add
or
std
jne
cmpb
lahf
lret
jbe
inc
icebp
dec
lock
and
mov
xchg
xchg
push
mov
mov
sbbl
orl
enter
es
cmpsl
and
inc
lds
sub
mov
pop
pop
push
jge
arpl
sbbb
mov
inc
xor
sub
popf
xorb
or
xchg
das
fcmovbe
sbb
mov
or
push
cmp
push
ret
cmp
push
lock
adcb
inc
mov
or
push
mov
add
and
xchg
lahf
cld
sub
mov
mov
push
in
or
push
sbb
mov
outsl
movsl
or
stos
mov
aam
mov
or
sub
sbb
adc
repnz
and
inc
outsb
and
adc
mov
jo
add
dec
sub
hlt
mov
sbb
xchg
js
adc
push
xor
pop
pop
sbb
loopne
mov
mov
jp
jge
add
fdiv
add
call
fsubs
or
cwtl
pop
fs
sti
add
jns
xchg
inc
push
enter
gs
inc
cli
pop
dec
js
adc
dec
mov
cmc
stos
loop
mov
sub
cs
mov
nop
ja
movsb
add
pop
and
mov
arpl
jnp
loop
lcall
sbb
adc
out
add
push
push
fcmovnu
pusha
push
lods
insl
jne
jbe
pop
pop
sbb
scas
clc
adcl
cmp
push
les
cltd
cmp
aam
mov
push
daa
mov
or
inc
push
fidivrs
in
js
sub
icebp
mov
movsb
in
arpl
sub
jge
jl
mov
sub
repz
add
repz
clc
mov
jg
call
xchg
sub
mov
xor
sbbb
inc
iret
and
add
addl
adc
into
mov
out
mov
or
xchg
sbb
fists
add
adc
pop
ss
adc
add
add
inc
cltd
adc
xchg
insb
mov
jns
cmc
pop
fs
add
sbbl
push
jbe
cmp
cwtl
and
mov
push
cmc
imul
pop
jbe
mov
xor
mov
push
stos
lods
pop
mov
adc
mul
rcr
mov
xchg
push
fwait
int3
jmp
subb
imul
jbe
sbb
adc
xor
mov
add
sub
mov
jmp
cs
push
or
jmp
and
or
dec
in
loop
jg
or
arpl
jae
xor
fs
insb
add
add
cli
out
pop
mov
or
pusha
js
push
jne
xor
sub
cwtl
test
xchg
jne
inc
enter
mov
mov
dec
lds
rcll
fdivs
cmpb
dec
je
inc
mov
jne
inc
popa
push
pop
sub
push
jecxz
rorl
repnz
sbb
cmp
xchg
add
add
push
fmull
jmp
bound
sub
nopl
cmp
je
push
push
pop
mov
adc
fists
mov
stos
or
mov
add
mov
sbb
cmpsl
insb
inc
sub
loopne
add
mov
mov
pop
jne
in
pop
and
and
mov
and
stos
mov
mov
jp
lcall
ss
fstp
cmpb
push
sub
dec
idiv
or
add
decl
int
int
jg
icebp
xchg
pop
lock
add
orl
push
shlb
orl
add
and
sub
das
mov
push
je
call
pop
rcll
mov
pop
jbe
das
ficoml
or
push
pop
mov
je
inc
mov
sahf
loope
jno
stos
int3
addb
repz
pushf
shufps
push
lds
hlt
dec
outsl
inc
adc
imul
cmp
inc
sub
int3
sbb
aaa
nop
outsb
add
or
pop
jl
jnp
mov
gs
ds
adc
pop
dec
movb
loopne
and
or
outsb
inc
les
push
inc
adc
bound
aas
mov
inc
shll
dec
mov
imul
and
fldenv
push
xchg
pop
leave
orl
cmp
test
sbb
add
rcr
push
sbb
add
sub
popa
aad
mov
call
jp
ret
sbb
mov
lahf
add
enter
hlt
sbb
clc
clc
jecxz
cmp
shll
lret
dec
in
orb
test
mov
sub
xor
cmp
and
icebp
daa
movb
add
test
mov
js
je
push
dec
lret
adc
push
jp
rcrl
lds
cmp
pop
int3
js
aas
in
xor
xchg
popa
popf
or
sub
arpl
adc
inc
out
xor
inc
sub
ja
test
test
stos
dec
and
pop
ja
ljmp
sbb
xchg
roll
cwtl
lea
jne
or
in
mov
jmp
push
gs
js
push
pop
sub
or
lret
hlt
leave
push
jo
xor
clc
lods
and
stos
sbbb
daa
jcxz
mov
and
sbb
or
add
and
and
clc
clc
add
jbe
mov
insb
insl
jno
push
mov
add
je
sub
pop
gs
fs
in
cmp
or
sbb
sbb
rdpmc
and
or
adc
adc
test
cmp
pop
ds
jecxz
stos
inc
clc
xchg
push
jo
add
daa
cs
or
stos
inc
sbb
insb
roll
inc
icebp
mov
cmpsb
add
or
ljmp
inc
lock
repnz
mov
mov
xchg
sub
mov
add
mov
push
inc
movsb
cmp
dec
mov
push
sub
adc
mov
insb
sbb
adc
in
push
push
mov
fsub
mov
cmp
inc
xor
and
lods
xor
dec
adc
dec
jo
cmpl
mov
mov
mov
add
test
addb
rcll
push
push
or
xorl
ljmp
inc
mov
add
fs
loop
shl
mov
das
into
inc
test
mov
sbb
les
or
inc
fdivs
pop
ret
mov
je
dec
or
push
cmp
mov
adc
xor
mov
sub
adc
mov
or
add
inc
add
inc
repnz
and
fs
push
sub
xchg
test
stos
adc
in
in
hlt
jns
add
xchg
dec
mov
enter
pusha
fs
fwait
inc
ja
test
daa
add
and
insb
fsubrs
pop
mov
pop
add
mov
adc
sbb
xlat
cmp
and
ret
and
test
pop
sbb
jp
cmc
outsb
dec
push
insl
rcrb
mov
push
inc
xor
dec
inc
xchg
pslld
and
or
scas
movsb
dec
mov
xchg
xlat
inc
rorb
pop
shlb
lret
and
xor
xchg
add
pusha
das
push
ljmp
ds
nop
inc
mov
mov
mov
dec
sbb
push
cmpsl
sub
aaa
fiadds
cmp
mov
addl
jns
mov
mov
loope
push
add
addl
rcrl
push
test
and
test
pop
adc
pop
pop
inc
cmp
cmp
push
add
mov
test
mov
shr
inc
mov
inc
jne
inc
ud2
mov
push
cld
mov
mov
jbe
ds
add
jnp
push
fisubl
or
sbb
inc
xor
xlat
mov
lea
sub
js
imul
sbb
mov
femms
aam
mov
dec
pop
imul
sub
inc
mov
sti
push
adc
pusha
popa
add
push
rcrl
bound
fadds
movl
roll
pop
adc
scas
mov
and
xchg
mov
sbb
test
stc
cs
call
mov
push
sub
int3
hlt
xor
inc
fwait
clc
add
mov
psllq
jae
aam
add
lahf
jne
pusha
xor
nop
fnstenv
inc
add
cmp
insb
inc
inc
rcrb
loop
mov
and
pop
sar
js
xor
jge
inc
hlt
sub
call
xlat
in
push
inc
adc
ret
add
sbb
xchg
and
aaa
pusha
icebp
in
cltd
idivl
loopne
sub
nop
and
lock
dec
pusha
add
lret
push
movsb
add
in
xchg
xchg
or
pop
fisubrs
sbb
or
xchg
push
or
dec
xchg
sub
inc
int
xor
xor
mov
inc
inc
push
pop
inc
sahf
mov
lods
je
push
icebp
lcall
push
mov
outsl
inc
jo
adc
bound
lcall
imul
inc
or
push
ja
jae
xchg
out
pusha
cmpsb
cmp
add
lahf
nop
dec
adc
inc
inc
jne
andb
add
ja
and
mov
jl
adc
sub
and
and
orb
mov
in
mov
lods
or
adc
sub
aaa
or
in
pop
adc
jo
sub
mov
lahf
and
dec
inc
mov
push
test
push
mov
add
pop
dec
mov
bound
sti
xor
insl
out
test
jns
or
cwtl
inc
sub
jmp
push
hlt
setge
pushf
sub
inc
cmpsb
pop
or
mov
mov
popf
rorb
push
inc
lods
loope
pop
movsb
adc
xchg
push
inc
andb
xor
ss
orb
leave
jecxz
lea
cmc
sbb
sbb
hlt
sbb
leave
xchg
add
mov
cmp
insl
mov
ja
imul
sub
fsub
nop
jo
push
sbb
nop
popa
test
inc
ret
push
movsb
pushf
push
push
test
sarb
or
or
or
ror
cmp
push
jno
mov
popa
das
inc
add
addb
test
pop
sarb
cltd
das
cs
popa
aaa
mov
or
add
std
adc
loop
dec
fidivl
push
sbb
xor
leave
mov
dec
addb
dec
inc
cmp
rolb
inc
and
stc
add
sahf
in
inc
cwtl
inc
xor
pushl
add
adc
adc
push
mov
push
dec
sub
add
jmp
jnp
mov
xor
jne
pushf
jle
clc
ret
lods
mov
jno
sbb
xchg
sbb
add
add
movsl
inc
test
pop
or
aas
and
mov
xchg
add
repnz
and
fcomp
inc
add
fmull
hlt
fiaddl
add
in
xor
jno
mov
stos
jmp
add
or
jnp
shlb
bound
pop
mull
loopne
or
push
push
aam
test
push
jb
cs
or
jmp
mov
jl
mov
push
push
mov
nop
xchg
pop
or
movsb
int
leave
aad
add
mov
in
and
xor
add
jl
pop
add
scas
mov
mov
mov
inc
inc
insl
inc
or
adcb
fistps
xchg
add
add
xchg
inc
push
nop
lock
ret
jno
xor
jo
pop
pop
add
sbb
loopne
dec
mov
aaa
push
add
int
xchg
data16
push
cmp
or
mov
je
enter
inc
jecxz
outsl
arpl
adc
lods
cmp
addr16
stos
ljmp
or
stos
sub
aad
int
nop
add
dec
push
test
cmp
adc
push
insb
dec
push
ret
mov
stos
push
adc
mov
pop
push
add
add
stos
xor
sub
inc
inc
mull
sbb
mov
push
insl
outsb
jae
pushf
xor
lods
movb
sbb
xchg
inc
cmp
movsb
sti
xchg
mov
rolb
sub
push
insl
insb
jo
cli
aad
stos
push
sbb
stos
or
outsl
and
outsl
and
test
mov
push
and
push
pop
push
and
and
dec
xlat
or
pushf
and
or
aad
and
test
test
and
push
and
dec
mov
addb
sub
imul
add
test
gs
bound
and
dec
outsl
ja
orl
flds
bswap
sbb
add
push
add
pop
fsub
inc
pop
and
test
sbb
and
cld
jecxz
in
sub
cmp
and
das
scas
jmp
insb
sbb
rorb
pavgb
outsb
mov
mov
adc
or
loopne
cs
cmpsb
cwtl
rcrb
in
loope
movsb
add
adc
cmp
insb
or
adc
lods
in
push
sahf
daa
jle
mov
pop
xor
mov
pop
push
test
inc
add
and
pop
or
or
and
sub
mov
add
lcall
and
and
jb
loopne
xchg
or
out
and
or
sti
sbb
cmc
and
lret
or
test
xor
add
nop
and
out
ficoms
dec
scas
xchg
add
adc
adc
mov
and
push
adc
es
pop
scas
pushf
mov
xorb
push
and
and
jp
insl
call
add
or
dec
test
in
sub
cmp
sub
xchg
insb
nop
mov
subl
add
push
jl
and
and
sbb
cmpsb
cmp
xor
loope
imul
jae
ja
and
inc
loop
mov
mov
std
mov
dec
add
inc
jp
adc
mov
jo
inc
add
and
and
sub
test
or
mov
and
shr
rolb
push
mov
or
inc
and
shll
es
in
in
sub
or
add
sub
clc
or
mov
xor
or
out
sbb
inc
js
je
orb
and
add
add
sub
sbb
test
lret
jg
enter
xor
add
xor
sub
inc
enter
sti
ja
je
insl
add
mov
cmp
pop
adc
inc
or
jb
xlat
xlat
fisubl
andps
sbb
pop
mov
adc
sub
jne
bound
fsubs
push
add
paddsb
jg
enter
fnstsw
or
and
add
mov
jmp
in
pop
enter
in
enter
mov
mov
sbb
add
mov
mov
fwait
or
lock
mov
push
add
pop
xchg
popf
or
and
mov
mov
adc
mov
xor
not
insb
pop
jl
pusha
jbe
roll
movsb
mov
dec
jl
inc
push
insl
bound
js
popa
fs
pop
adc
testb
adc
es
sbb
xchg
invd
sub
jo
inc
icebp
sub
nop
jge
jo
mov
add
cmp
or
jbe
out
lret
or
add
adc
pop
and
pop
enter
inc
and
inc
and
inc
scas
and
dec
pusha
pop
push
add
in
mov
lock
mov
call
mov
mov
push
cld
sub
and
sbb
or
sub
add
sub
xor
or
jle
mov
addr16
adc
lods
or
push
leave
add
dec
pcmpeqb
inc
pop
xchg
adc
add
lods
repz
adc
or
pop
and
adc
push
imul
inc
nop
mov
sbb
sbb
sbb
xor
jb
push
pop
adcb
sbbb
mov
jo
icebp
mov
addb
mov
insl
mov
jno
adc
pop
sub
add
sbb
adc
adc
fmul
inc
ror
punpcklwd
jne
stos
add
incl
cmp
add
push
jns
stc
sub
xor
mov
add
pop
or
sbb
add
dec
add
shr
mov
xlat
pop
pop
dec
mov
push
sub
mov
lcall
or
cld
nop
mov
jne
mov
hlt
aam
cmp
inc
xor
pop
adc
sysret
push
xor
nop
dec
shrb
lar
test
shrb
into
inc
fists
pop
sub
sbb
sub
inc
es
enter
xchg
inc
or
and
and
pop
rorb
cmpsb
pop
add
or
ficomps
jne
outsb
jae
push
cmp
orl
loopne
adc
xor
mov
mov
sbbb
sbb
inc
pop
xchg
mov
dec
mov
mov
aam
outsb
sub
push
add
stos
jo
dec
pop
push
inc
and
popa
sub
or
aam
lret
andb
push
mov
addb
int3
push
inc
loopne
jmp
add
adc
rcrl
add
enter
sbbb
sbb
or
sub
mov
stos
and
sub
and
test
dec
and
adc
test
shll
cmp
xor
and
and
sarl
and
sbb
adc
jno
pusha
pop
sub
or
sbb
lods
sub
enter
sub
leave
add
add
das
cmp
pop
aaa
mov
dec
mov
or
out
aam
xor
jb
xor
xor
xor
xor
inc
add
add
js
dec
stc
jne
and
push
adc
cs
fmuls
call
adcb
inc
mov
pop
cmp
push
lahf
add
addl
aam
inc
or
jo
imul
add
pop
or
sbb
inc
add
call
in
call
adc
or
lret
pop
sbb
and
nop
addb
push
mov
out
fcomp
mov
dec
pushf
sti
pop
cld
int3
pop
cld
cld
in
xchg
xchg
out
inc
sbb
xor
mov
pushf
std
bswap
mov
scas
pop
adc
inc
lret
ljmp
repnz
mov
add
mov
cmp
adc
movb
push
push
rolb
inc
ds
and
xchg
scas
test
loopne
fcmovu
inc
cmp
jp
inc
or
data16
into
mov
push
cmpxchg
mov
lock
jne
add
add
and
fisttpll
mov
test
jg
push
adc
movsb
sub
adc
adc
xor
push
mov
gs
cmpb
lahf
mov
sub
adc
sub
mov
sbb
loope
inc
and
pop
dec
jg
mov
insl
and
sub
js
outsl
lock
cld
loope
flds
adc
loope
popa
loop
outsb
pop
sbb
push
mov
and
inc
cmp
int3
bnd
pop
into
inc
adc
fcom
imulb
mov
into
sahf
push
adc
add
mov
add
push
add
mov
dec
push
ja
jmp
sub
add
adc
pop
mov
into
inc
dec
adc
js
jg
xor
lret
call
add
mov
jge
or
movsb
fidivl
inc
inc
mov
int3
sub
jo
and
jae
pop
cli
inc
inc
lock
add
inc
icebp
js
cli
dec
xor
dec
push
xchg
in
or
mov
pop
sbb
ret
and
stos
je
mov
rcll
clc
pop
mov
add
dec
inc
sub
movsl
cmpsb
in
lahf
int3
mov
jnp
mov
cmp
not
and
jmp
adc
pop
shr
aas
sbb
repz
mov
or
mov
sbb
push
notl
mov
add
out
inc
hlt
fnsave
adc
mov
jne
or
add
ror
adc
dec
adc
push
ficoms
mov
cmp
je
inc
cmp
ret
fdivrs
sub
mov
or
jno
adc
enter
push
push
pop
fisubrs
test
push
stos
out
and
or
cld
fidivs
outsb
or
add
pop
jns
push
loopne
iret
shr
xor
mov
outsl
sbb
loope
pushf
lea
push
and
ja
pop
or
xchg
sbb
add
lds
push
enter
rclb
add
les
jne
pop
test
push
out
ss
scas
sti
into
and
and
pop
ret
adc
and
jg
sub
sub
add
or
lahf
dec
push
fxch
jl
and
xchg
outsl
and
add
inc
mov
inc
sub
inc
inc
push
xorl
cs
push
push
lea
mov
sub
mov
push
sbb
mov
cmp
adc
pusha
and
pop
int3
pusha
dec
inc
xor
mov
mov
inc
push
jae
sub
push
int
iret
add
push
cmp
addb
mov
sbb
push
mov
and
and
and
push
sub
mov
inc
pop
xor
xor
xchg
and
jge
mov
mov
paddsb
loope
sbb
inc
outsb
push
push
pushf
sbb
pop
sub
push
xor
mov
and
sub
push
out
lock
inc
pushf
mov
add
fwait
xchg
loop
std
iret
push
push
in
hlt
sub
add
mov
push
lds
in
inc
lds
loop
dec
loop
inc
or
xchg
add
push
in
or
cwtl
mov
ret
lahf
and
cmpb
cmpsl
cld
xor
or
leave
and
pop
mov
pop
test
fwait
and
test
and
add
sti
lret
hlt
sub
shrb
jne
or
or
adc
cmpsl
adc
and
dec
push
and
leave
and
push
and
pop
jae
and
dec
mov
mov
or
mov
jb
das
pop
test
sahf
add
inc
inc
dec
push
mov
iret
and
add
and
in
ret
sub
dec
adc
jno
mov
leave
jns
mov
nop
fwait
mov
add
adc
lods
cmp
xchg
in
sbb
mov
test
and
andl
pop
loop
fstps
push
stc
pop
mov
inc
repz
inc
and
or
sbb
out
push
add
cmp
dec
push
xor
jo
inc
mov
into
cs
cmp
and
mov
testb
cmpb
dec
jge
mov
imul
sarl
mov
mov
fdivrs
cwtl
mov
movl
sar
mov
cmp
sar
popf
jo
push
es
cli
lods
push
jo
inc
sub
sub
pop
add
adc
mov
jne
inc
ljmp
daa
jmp
sbb
add
pop
sub
adc
jl
push
xchg
sub
rorl
fisubs
ret
or
aad
test
mov
add
insb
enter
cltd
xorl
dec
push
scas
call
push
mov
fisubl
movsb
test
and
pop
enter
and
add
mov
xchg
nop
jmp
dec
mov
xchg
and
sbb
push
shr
and
fldenv
data16
push
adc
popa
das
or
je
mov
mov
or
jo
add
arpl
xor
sbb
pop
dec
sub
aam
add
arpl
xchg
mov
add
xchg
mov
adc
insb
inc
jae
push
and
enter
and
ja
and
mov
dec
dec
inc
fdivrs
pop
and
or
pusha
adc
iret
out
sub
es
xchg
rorl
ret
xor
inc
and
pusha
xchg
lahf
test
dec
cmp
insb
sub
xchg
jnp
and
leave
loop
lret
test
sbb
dec
roll
sub
inc
push
xor
adc
mov
ret
add
pop
sahf
and
movsb
ljmp
inc
push
in
ret
ret
mov
jecxz
xlat
lock
xor
and
mov
rorl
mov
sbb
adc
insl
adc
lock
sub
inc
and
mov
faddl
mov
scas
and
daa
push
push
push
pop
mov
inc
or
addb
mov
shll
xor
adc
loopne
sub
data16
xchg
ret
sub
adc
xor
inc
mov
and
inc
adcl
add
divb
mov
cmp
inc
loop
nop
jmp
push
adc
adc
mov
mov
cld
mov
ret
ljmp
add
test
jle
enter
mov
in
enter
inc
add
scas
jo
inc
jb
and
pop
sahf
add
dec
sub
push
add
test
dec
adc
mov
mov
push
sbb
ret
mov
and
mov
repnz
or
adc
or
nop
das
out
jmp
cmpsb
stos
push
jnp
and
sbbb
push
sub
add
dec
imul
mov
xchg
pushf
faddl
push
nop
das
fadds
push
inc
xor
inc
or
sbb
xor
or
sarb
xorl
popa
aad
cwtl
sub
xor
movsb
adc
xor
mov
adc
and
or
push
push
push
push
test
add
adc
adc
xchg
adcb
inc
mov
into
and
inc
add
jae
and
or
and
inc
and
lds
and
orl
or
sbb
dec
mov
popa
add
jnp
dec
push
add
adc
loop
and
jnp
out
adc
cmpl
inc
jmp
loopne
mov
pop
daa
adc
add
add
stos
ret
mov
aad
ja
dec
inc
inc
mov
dec
sbb
fnstenv
je
sub
jg
pop
insl
cmpb
mov
pusha
add
and
outsb
or
scas
adcb
add
xor
fidivl
test
xchg
pop
lods
mov
inc
mov
jp
mov
mov
shrl
mov
in
repnz
dec
mov
push
test
xchg
or
in
adc
adc
and
mov
add
adc
inc
loop
aaa
pop
mov
rorl
add
mov
dec
sub
fisubrs
daa
pop
mov
add
sub
mov
sbb
add
scas
xchg
jb
sbb
lcall
test
cmc
jecxz
and
testb
test
cmp
andb
out
sub
push
pop
dec
adc
dec
pop
lret
ljmp
jmp
sbb
mov
sbb
cmp
je
add
and
mov
mov
movsb
push
or
or
sub
adcb
adc
pop
clc
or
lret
adc
test
movl
mov
sbb
sbb
insb
push
pop
push
add
adc
mov
imul
lcall
and
cmp
popf
inc
out
dec
pop
stos
dec
mov
cmp
add
mov
popa
cmp
xor
stc
cmpsl
fiaddl
insl
inc
hlt
inc
mov
sbb
jg
mov
mov
sarb
shl
sbb
inc
pop
cs
inc
pop
adc
bound
dec
cmpb
mov
cmp
shlb
das
pushw
jne
add
cs
adc
stos
inc
scas
nop
sarl
add
mov
mov
mov
cmpsl
es
loopne
inc
cld
imul
imul
daa
or
inc
push
adc
push
push
dec
sub
jns
cmc
ret
xor
push
add
js
decl
mov
pmaddwd
adc
and
xchg
pand
xchg
movsb
sub
push
add
fistl
jae
push
test
cmpsl
pop
fdivrl
dec
dec
or
sti
js
gs
lea
inc
mov
lahf
dec
or
dec
and
mov
sub
dec
fimuls
or
push
jns
lahf
sti
cmc
push
sub
and
push
jne
dec
push
push
add
dec
or
icebp
ljmp
testb
je
bound
pop
mov
jnp
add
pop
shll
ss
sub
dec
in
mov
lods
in
xor
add
jne
sbb
and
in
cmp
divb
xchg
and
in
push
adc
insb
and
fbld
mov
inc
adc
dec
push
sbb
or
push
or
aaa
adc
adc
inc
cltd
outsl
xor
add
push
adc
push
dec
push
mov
mov
push
xchg
mov
mov
push
cs
push
adc
es
popa
inc
cltd
imul
add
mov
sbb
push
lods
add
dec
pop
lock
ret
add
inc
mov
mov
adc
and
sub
mov
or
clc
lods
test
xor
dec
push
add
lcall
pop
sbb
adc
add
push
add
jnp
mov
pop
test
xor
jnp
push
mov
cmp
sbb
in
mov
push
add
ss
adc
and
icebp
or
popa
aam
imul
test
xlat
stc
gs
loopne
adc
mov
xor
out
sbb
mov
test
sbb
fisttpl
ret
int
pusha
adc
popa
mov
dec
dec
lds
loopne
lds
adc
pop
adc
aam
fstps
sub
push
mov
in
push
xchg
inc
subl
cmpsl
lock
in
cli
lahf
dec
addl
push
popa
or
pop
in
push
push
push
inc
jmp
mov
inc
xor
or
lea
cmpps
ficoml
clc
scas
sub
pusha
mov
mov
sub
lods
bound
add
xchg
push
ret
adc
add
adc
pushf
xor
sti
or
inc
adc
or
or
leave
push
test
sbb
cmp
ret
adc
loope
xchg
int3
outsb
movsb
rcrl
mov
xchg
test
bound
test
sbb
mov
inc
pop
and
pop
xlat
les
ret
aas
pop
push
shll
pop
push
cld
inc
pop
mov
adcl
rolb
xor
mov
jle
sar
add
pop
xchg
push
xor
sub
int
xor
jne
sbb
mov
das
or
je
fiaddl
pop
mov
adcb
paddd
push
lock
lea
fcomp
mov
out
fnstenv
inc
decl
jns
repnz
movsb
and
arpl
ret
mov
ret
test
popf
loop
sbb
mov
and
and
pop
ja
xchg
inc
push
sub
cltd
xor
dec
fistpl
jno
inc
xorb
stos
xchg
or
enter
push
call
fisttpl
jle
cmpl
es
mov
mov
cmp
idiv
push
push
lods
stc
pop
and
inc
je
cmp
mov
or
push
movl
nop
adc
mov
xchg
pop
adc
xchg
cmovno
xchg
xor
fsubs
pop
xor
sbb
loopne
sub
lods
cmpsl
mov
push
cwtl
sbb
xorb
cli
insl
js
les
nop
cmp
unpcklps
mov
pop
rcrb
xor
xor
and
xor
or
sub
add
in
xchg
or
xor
add
and
mov
add
adc
in
mov
and
inc
or
das
inc
das
sub
test
adc
mov
and
das
sbb
cmp
and
xchg
add
les
or
xchg
or
pop
imul
mov
or
and
and
or
push
icebp
xchg
mov
cmp
jle
out
add
dec
cmpsb
fistl
inc
sub
inc
insl
jmp
or
lds
mov
sub
mov
add
leave
add
xor
or
pusha
xor
sub
inc
dec
mov
push
das
mov
mov
fwait
adc
and
sti
adc
and
xor
pop
rolb
push
andl
fisttpl
push
xchg
call
add
test
clc
or
add
aam
andb
adc
sub
cmp
xor
je
scas
popa
mov
dec
je
mov
sbb
and
or
inc
xor
aam
and
push
mov
cwtl
and
inc
or
inc
pop
repnz
jb
sub
jne
mov
mov
push
jno
daa
mov
and
pop
lahf
pusha
test
or
cs
cmp
jbe
scas
xor
or
into
aad
dec
sbb
es
ret
icebp
xchg
add
stos
pop
sub
or
nop
mov
sbb
dec
testl
lods
push
sub
mov
scas
sar
fwait
add
jmp
das
enter
inc
es
les
and
mov
sub
mov
add
fcomps
cs
inc
rorb
in
push
addb
mov
push
mov
adc
and
shrb
sub
sub
adc
xchg
popf
fistl
dec
loopne
push
xchg
xchg
fstpl
out
and
fsubrl
sub
paddb
std
lods
clc
pop
cmp
cmp
jge
mov
xchg
insl
push
xchg
stc
adc
rcll
addr16
add
xchg
int
pop
cli
pushf
pop
sub
mov
pop
aam
mov
pop
fbld
test
push
adc
xchg
xor
dec
ficoms
lea
pop
flds
add
cli
sbb
or
xor
andl
ja
mov
notb
fisubl
aad
or
or
cmp
adc
and
mov
scas
hlt
int3
dec
sbb
xlat
pop
hlt
sbb
inc
loope
sub
xlat
arpl
pop
or
add
add
adc
aaa
pop
or
cmp
enter
inc
push
add
enter
dec
cs
jge
inc
and
bound
stc
push
or
daa
dec
cmpsb
nop
out
push
dec
and
in
and
es
sub
loop
dec
jns
push
inc
cs
and
xchg
mov
mov
inc
or
xchg
scas
nop
or
adc
add
and
nop
pop
in
inc
cld
js
inc
jnp
out
mov
cmp
mov
jmp
sbb
sub
int3
mov
dec
adc
ds
add
pop
and
jl
push
push
fstpl
dec
fcoml
in
or
xchg
mov
and
in
mov
jne
les
hlt
adc
enter
add
movb
sub
add
adc
or
push
leave
or
and
inc
cmp
mov
push
add
insb
inc
mov
mov
jo
mov
test
or
rcrb
inc
pop
test
sub
xor
adc
adc
adc
leave
inc
or
repz
inc
adc
sub
and
jb
and
inc
push
inc
mov
sbb
inc
push
sbb
cmp
mov
das
cmp
sbb
inc
push
and
mov
xor
cld
push
aaa
push
xlat
pop
xor
and
sub
cmp
mov
inc
scas
jg
adc
icebp
jmp
push
add
sbbb
jb
addr16
or
cmp
movsb
xchg
push
xor
leave
test
call
and
and
dec
and
sub
dec
fnsave
movl
dec
sub
and
mov
test
and
dec
inc
pushf
or
pop
push
sub
sbb
or
dec
or
imul
inc
push
addb
sub
mov
mov
dec
inc
sub
mov
xor
enter
cmp
push
or
mov
sub
or
lds
sar
inc
rclb
enter
push
pop
adc
enter
inc
lea
test
jo
sahf
mov
out
stos
add
add
pop
aam
inc
adc
jp
or
adc
and
stos
add
iret
cs
add
leave
push
mov
add
adc
and
inc
pusha
es
or
inc
dec
add
mov
cwtl
dec
or
cmp
adcb
push
push
adc
inc
sti
in
or
xchg
mov
inc
jo
xlat
inc
add
pusha
jae
adc
and
punpckhwd
inc
sti
and
or
mov
fld
dec
cmpb
inc
cmc
aaa
andb
mov
rol
pusha
add
jmp
pop
add
jnp
adc
mov
and
pop
cld
or
test
call
hlt
adc
jmp
push
test
stos
and
or
adc
push
dec
mov
push
xchg
add
add
pusha
div
rclb
pop
xlat
das
dec
enter
imul
mov
aas
xchg
nop
roll
push
cmp
les
add
xchg
xor
sub
lods
and
insb
and
inc
sub
xchg
mov
push
mov
popf
cmp
cmpb
jne
jns
jne
mov
add
cmp
jl
sub
insb
push
jne
es
cvtps2pi
aam
jns
ret
aam
sbb
sub
pop
xor
fcompl
sysenter
add
call
mov
lods
dec
popa
cmp
add
add
mov
xor
inc
xor
push
lahf
sbb
adc
inc
andb
in
jmp
inc
mov
test
sub
or
cmp
mov
jp
shr
test
adc
xor
into
je
pop
and
push
xor
and
sbb
lret
sub
pop
inc
mov
fisubl
mov
add
fistl
and
mov
ljmp
add
push
mov
and
xchg
pop
cmpb
negl
in
push
push
add
xchg
xchg
sbb
addb
inc
loop
add
push
out
pop
add
cmp
dec
inc
mov
inc
in
sbb
daa
dec
insb
mov
add
adc
rcll
adc
cmp
mov
dec
xlat
adc
pushf
or
cmp
outsb
into
js
sti
pop
scas
xchg
pop
adc
dec
jo
mov
jae
or
sbb
out
sar
dec
add
add
or
sub
add
and
nop
xor
add
scas
add
inc
push
or
xor
cld
leave
or
ficompl
mov
rcll
dec
ja
imul
insl
sub
adc
and
outsb
mov
out
cmp
or
push
popa
cmp
or
cs
push
ljmp
insl
dec
std
xor
imul
es
je
pop
movaps
or
fwait
jp
xor
inc
ja
ss
jne
adc
pop
inc
popf
mov
push
gs
inc
cmp
mov
sbb
pop
or
rorl
add
lock
sarl
adc
inc
popf
mov
jb
pop
pop
imul
aas
push
or
sbb
adc
cmp
or
sbb
add
push
add
in
push
inc
cwtl
pop
in
inc
out
and
int3
pop
movsb
es
popf
pushf
adc
add
addl
fs
insb
push
and
scas
sbb
add
xor
mov
insb
xor
or
xchg
sub
in
or
popa
adc
cmp
mov
pop
ds
mulps
jbe
mov
and
add
dec
adc
insw
dec
ljmp
mov
cmc
decl
ror
orl
test
push
and
add
add
sub
dec
repz
adc
fstl
and
xchg
sub
push
addb
sarb
mov
sub
adc
lret
add
mov
sub
or
xchg
push
aam
or
add
mov
sahf
adc
loope
inc
adc
push
pop
cwtl
pop
or
add
and
scas
jnp
push
inc
stc
inc
or
movb
sub
cmp
sub
sti
jle
and
add
dec
or
pop
push
mov
pop
in
cmp
cmp
push
dec
adc
add
inc
mov
mov
mov
add
pop
loopne
xor
dec
fs
aas
aas
and
inc
xor
and
ss
and
xor
push
push
or
mov
sbb
addl
push
aam
sub
inc
sub
stos
and
pop
sbb
xor
xchg
test
cmp
mov
mov
test
push
in
lock
add
sub
lret
push
outsb
enter
inc
dec
mov
xor
inc
and
enter
lock
ja
pop
je
inc
movsb
add
push
frstor
fbld
inc
mov
popa
fwait
push
call
es
add
test
or
loop
jle
aad
pushf
adc
hlt
clc
cltd
in
dec
jecxz
ds
or
jl
cmp
inc
jecxz
mov
or
jge
movsb
mov
and
and
movsb
inc
xorb
nop
pop
pop
push
jg
push
sbb
sti
dec
jne
cmpl
les
frstor
xchg
adc
inc
add
or
imul
mov
push
push
xchg
test
jo
sub
je
pop
add
add
lret
dec
stos
mov
call
and
jno
push
testb
je
cmp
pop
cltd
test
das
nop
fiadds
xor
lock
lea
je
dec
aaa
bound
repnz
es
push
or
in
dec
cmp
inc
pop
orl
add
cwtl
push
mov
jl
xorb
cmpsl
addb
and
test
test
and
or
fwait
lea
call
add
add
test
repnz
sbb
sub
and
add
pop
out
loope
jp
call
adc
or
and
mov
mov
clc
adc
mov
out
ja
cmovo
jne
pop
or
dec
data16
and
mov
sub
sub
fildll
sarb
push
xchg
in
and
sub
pop
shrl
and
adcb
dec
and
test
add
add
fdivl
adc
xor
add
stos
lods
es
xchg
aad
and
sbb
loope
cmp
out
xor
inc
mov
sub
adc
add
adc
fmul
testb
jne
or
xor
push
dec
clc
mov
sbb
mov
mov
add
in
and
inc
pusha
es
inc
pop
daa
or
ror
pushf
sub
adc
sbb
clc
pop
push
or
adc
testb
pop
or
xchg
and
add
cmpsl
cld
andb
dec
push
or
add
jmp
sbb
sub
lcall
sub
mov
add
jb
and
inc
add
and
mov
add
mov
or
mov
sub
sbb
jnp
mov
add
sbb
sbb
ds
pusha
ja
or
rorb
mov
aam
mov
sub
cwtl
adc
ja
and
bt
and
outsl
pushl
mov
or
inc
jno
cmp
jne
jmp
or
andl
push
stos
ljmp
rcll
icebp
pop
dec
or
xor
testb
jne
fadd
push
arpl
addr16
movsb
shrl
cs
xchg
xor
shr
popf
fdivrl
cmp
xchg
in
sbb
in
xor
int
push
cmp
pushf
xor
fs
lret
mov
lea
into
mov
dec
adc
and
mov
rorb
ret
cwtl
mov
std
mov
jae
jmp
iret
cmp
lea
das
lea
sub
loop
daa
clc
jnp
stc
orl
push
jg
pop
loope
test
aam
sub
add
or
cmp
mov
xchg
mov
inc
add
sub
loopne
dec
xor
inc
and
adc
in
mov
dec
nop
fmuls
test
jmp
push
sbb
xor
or
addr16
dec
ret
fildll
inc
daa
int
jl
insl
aaa
push
cmp
add
imul
out
test
scas
shl
add
lret
shl
icebp
jg
sub
xor
sbb
bound
in
push
addr16
mov
subb
cmpsb
add
inc
adc
cmp
insb
stos
lret
push
add
xor
dec
add
add
addb
xor
inc
inc
add
mov
sbb
xchg
sbb
popa
push
push
in
dec
or
add
es
xor
adc
sbb
iret
xor
pop
daa
jae
mov
fdiv
test
add
and
mov
popa
addr16
add
inc
mul
call
adc
inc
push
subb
sbb
pop
jae
loop
lds
dec
adc
mov
aaa
sub
xor
push
push
pop
xor
lcall
add
jb
outsl
add
push
mov
mov
inc
punpckldq
add
mov
jb
push
dec
outsb
outsl
pop
or
arpl
cmp
enter
invd
jg
shll
shlb
fistps
data16
flds
xchg
les
mov
ret
sbb
sbb
mov
inc
or
jbe
jo
pop
js
imul
pop
sub
ljmp
shrb
shrl
pusha
push
test
fs
stc
hlt
push
psubsb
sbb
xor
push
push
in
or
xor
xor
xor
push
fadds
aam
and
nop
or
mov
popa
and
cmpb
hlt
or
cwtl
lods
mov
cmp
xor
push
es
stos
jb
lods
sahf
movsl
mov
mov
add
adc
xchg
or
int3
rol
mov
xlat
cli
setb
inc
in
or
add
mov
jg
mov
pop
pop
faddl
dec
imull
add
push
loop
pop
dec
sbb
testb
add
adcl
add
add
push
call
fisttpl
inc
cld
xchg
cmp
sub
sbb
add
aad
sbb
aas
pop
xor
sahf
pushf
call
test
pushf
mov
pop
pop
ja
pop
inc
or
mov
lods
pusha
repz
inc
mov
add
add
dec
and
cltd
or
sub
clc
and
adc
inc
adc
push
add
movsl
in
mov
dec
push
int3
mov
or
push
push
add
lods
mov
mov
fsubs
pop
out
pop
sub
test
pop
pusha
pop
pop
add
jmp
inc
mov
add
add
lahf
iret
enter
movb
add
in
ret
inc
lcall
mov
je
repz
jecxz
mov
loopne
jae
test
call
xchg
inc
push
adc
mov
mov
mov
push
pop
pop
inc
pop
jp
jo
mov
mov
jne
pop
push
and
jmp
mov
jl
lods
xor
inc
cmc
add
mov
enter
add
mov
xchg
or
push
mov
mov
movl
insl
add
mov
add
jne
sbb
and
mov
and
push
pop
add
mov
pop
hlt
pop
sub
adc
in
inc
shll
pop
ss
mov
adc
or
daa
adc
mov
and
mov
add
jae
inc
add
push
je
nop
xchg
or
fstpl
jp
add
or
clc
movsb
xorb
add
adc
jp
shll
dec
sti
and
mov
lret
nop
ret
mov
pushf
or
iret
ss
rcl
adc
inc
fs
dec
adc
and
nop
adc
add
push
inc
lret
fsts
sub
xor
inc
shll
les
arpl
das
mov
push
push
lea
adc
cmp
andb
mov
pushf
or
add
or
mov
dec
mov
int
fdivrs
xor
shrl
and
test
push
or
pop
xor
dec
mov
idivb
je
xor
gs
and
subl
jge
fnstenv
and
and
xor
sub
and
cld
xchg
test
xor
push
xor
lock
shll
lcall
lock
and
push
or
inc
loope
in
out
nop
subl
cmpsb
daa
adc
push
cwtl
jnp
test
mov
push
add
ret
pop
sbb
push
popa
xor
insl
out
jo
pop
add
pop
and
xchg
int
jmp
adc
or
add
xor
insb
mov
nop
pushf
or
adc
mov
pushf
in
lahf
push
imul
inc
ss
je
push
sbb
xor
cmp
jne
dec
mov
or
lea
insb
xchg
cmp
xchg
inc
add
pop
adc
mov
popl
sbb
imulb
mov
lods
pop
testl
pusha
fadds
arpl
pop
mov
cmp
aaa
adc
add
add
rep
fs
push
inc
loopne
add
mov
jnp
stos
je
adc
out
sbb
dec
leave
repnz
add
xor
add
add
add
and
push
not
jg
push
or
xor
test
push
insb
mov
and
xor
mov
dec
sub
and
add
adc
addr16
and
or
push
rol
faddl
idivl
jbe
int3
mov
fbld
pop
add
cli
mov
jae
pop
add
loop
xlat
outsb
dec
xchg
xor
test
jnp
push
inc
nop
fstpl
jne
push
loope
xor
inc
inc
add
and
fdivrs
insb
xor
cwtl
mov
xchg
lahf
xchg
and
push
addl
pop
imulb
and
and
cmc
pop
push
or
pop
add
clc
nop
ret
xor
sub
sbb
std
rolb
cmp
sub
xchg
xor
les
repz
movsb
or
sahf
xor
mov
sub
or
in
inc
add
lahf
push
and
testb
push
xor
xor
adc
ret
mov
mov
test
xchg
add
or
jmp
xor
jecxz
push
pop
push
mov
and
mov
cmp
jge
rolb
push
mov
jl
push
roll
sahf
adc
and
icebp
clc
and
cmpsl
xchg
cltd
and
aaa
or
fldcw
test
pop
or
jo
mov
sub
nop
inc
pop
andl
dec
sub
cwtl
inc
ret
push
sbb
neg
sarl
pop
adc
or
ljmp
dec
jle
mov
mov
mov
shll
xorl
and
loopne
xchg
xor
adc
mov
jmp
or
lock
or
fs
xor
add
dec
mov
nop
lea
inc
adc
mov
repnz
jmp
or
inc
xchg
or
or
push
mov
or
or
mov
dec
in
stc
gs
insl
divb
data16
ficomps
jl
shl
mov
xchg
int3
test
or
or
jmp
mov
test
dec
mov
xor
or
push
enter
sbb
xor
fsubl
in
in
pop
or
filds
shlb
and
scas
mov
xlat
orb
cmpsb
test
sbb
jbe
push
sub
add
jmp
hlt
sub
sub
xchg
call
dec
xlat
and
adc
addr16
rorb
jnp
pop
fisttps
in
mov
xchg
orb
cmpsl
pusha
rorl
jns
or
add
dec
add
adc
pop
inc
cs
and
jo
test
mov
daa
orl
push
adc
negl
mov
xchg
mov
jo
xchg
test
sub
push
adc
sbb
or
loopne
pop
aam
and
and
pop
jecxz
cmp
mov
daa
sub
push
sbbl
sarb
add
mov
ret
xchg
movsl
mov
dec
push
addb
xchg
dec
outsl
test
cmp
jl
jg
pop
add
shr
mov
popf
rcrb
movsb
inc
inc
push
push
cmp
rorb
jle
jmp
dec
adc
addb
dec
jle
sarb
push
cmp
mov
xchg
sbb
push
sub
cmp
mov
loopne
jne
or
or
inc
lea
mov
iret
aam
cs
mov
cmp
stc
push
scas
cmp
xor
add
xchg
or
jle
mov
hlt
lcall
incl
sbb
add
dec
dec
and
push
pop
inc
adc
mov
stos
inc
xchg
lcall
iret
mov
push
pop
adc
inc
xor
push
jnp
or
sarl
jecxz
or
jmp
fdivr
push
jmp
hlt
pop
add
imul
call
in
int
xor
sahf
and
pop
stos
fcoml
test
cmp
mov
loope,pn
cmp
and
aaa
sub
xor
mov
jmp
sbb
arpl
mov
ja
subb
addr16
add
mov
je
sbbl
push
in
data16
faddl
push
or
test
jp
push
push
gs
inc
or
xor
bound
or
inc
les
jo
add
sub
in
xchg
jne
dec
cmp
divl
adc
aad
xchg
fmull
jo
dec
pop
mov
addl
repnz
jl
mov
jb
jb
jns
shlb
jp
xor
js
enter
jl
inc
push
sub
add
outsb
neg
pop
add
push
mov
jmp
clc
ja
push
fcoms
pop
adc
add
and
push
sub
add
pop
leave
adc
or
add
add
push
push
leave
push
adc
add
ret
sub
jns
ljmp
dec
sub
xchg
pop
fwait
or
je
and
xchg
insb
xchg
fldenv
shll
jmp
std
mov
inc
inc
sbb
fstpl
adcb
xchg
test
jmp
pop
mov
js
jno
inc
xchg
or
add
push
add
and
test
js
and
and
add
sub
xchg
pop
sub
add
push
leave
sub
sub
xor
loopne
pop
xor
int
inc
inc
rdmsr
inc
jl
xchg
inc
sbb
xor
sbb
mov
call
add
jmp
insb
loopne
mov
push
stc
jecxz
add
sub
hlt
jno
sbb
fsts
or
sti
pop
push
and
lock
xchg
jae
cmp
je
test
mov
lods
in
rcll
subb
insb
es
mov
adcl
xor
movsb
orb
sbb
sbb
push
sbb
sbbb
pop
or
xor
je
and
push
jb
and
enter
and
add
add
push
daa
sub
sub
xor
xor
sub
xor
xor
jo
dec
out
jbe
adc
pop
add
pop
or
add
or
test
add
inc
dec
or
or
or
add
fadd
in
pop
insb
fs
add
dec
insb
daa
daa
jl
cmp
and
inc
popa
inc
test
rolb
arpl
inc
inc
fstpt
bound
mov
es
xor
and
pop
push
add
enter
insb
xchg
sub
daa
pop
leave
adc
or
flds
add
lock
add
push
cwtl
adcb
adcl
je
add
push
xchg
adc
dec
cmpsb
xchg
adc
loopne
add
adc
adc
add
add
push
leave
add
adc
sbb
mov
roll
enter
and
mov
sbb
movsb
cltd
push
push
sbb
sub
add
pop
and
or
pop
and
xor
and
and
push
inc
mov
push
daa
mov
sub
push
xorl
add
mov
inc
push
sub
push
inc
dec
push
add
cmc
nop
inc
or
fcoms
mov
or
mull
and
lahf
or
test
cmpsl
or
xchg
pusha
push
push
insb
ds
repz
or
adc
dec
xchg
xchg
inc
xchg
shr
into
jno
fsub
clc
loopne
mov
in
jl
clc
aaa
or
add
stos
ja
lret
inc
aad
dec
cmpsl
lock
or
in
inc
repnz
or
xchg
stos
cmp
fisttps
cld
add
addl
mov
jbe
xor
mov
push
sbbl
dec
jmp
xchg
seta
movhps
jno
and
dec
mov
popf
or
adc
xchg
mov
pusha
imul
aam
dec
adc
aas
jbe
cmp
inc
test
loope
cmp
pop
fildl
sub
cmpsl
movsb
pop
aaa
adc
or
clc
ds
test
jmp
or
xchg
xchg
or
adc
mov
leave
adc
daa
test
or
int3
fmuls
add
call
call
sbb
sub
mov
add
jbe
pop
add
adc
push
fiadds
or
sub
pop
mov
xchg
pop
aas
inc
lock
icebp
adc
fiaddl
jbe
pop
dec
movzwl
pop
adcl
mov
mov
call
fs
sub
sbb
sbb
and
xchg
jne
or
jb
pop
or
jne,pn
sbb
js
daa
mov
mov
in
lods
sub
repnz
push
mov
xor
xor
push
sbb
adc
and
mov
and
push
adcl
pop
add
xchg
nopl
or
inc
adc
pop
add
jbe
gs
sub
loop
push
xor
inc
jl
add
jne
sub
popa
loope
cwtl
cmp
mov
and
inc
ja
ret
push
pop
sbb
mov
or
push
icebp
xor
pop
inc
jnp
hlt
add
clc
add
sub
push
adc
fcomps
adc
int3
cmp
jl
adc
repz
aaa
adc
add
adcl
inc
add
cmp
xor
mov
xchg
orb
in
pop
or
push
mov
leave
sub
add
in
push
sub
mov
sub
mov
add
andb
pop
add
sbb
sub
add
gs
cwtl
adc
and
aaa
iret
mov
cmp
sbb
call
sbb
or
pusha
sbb
insb
outsl
push
mov
or
test
mov
or
fdivs
lcall
sbb
pop
inc
dec
xor
pop
sbb
or
pop
xchg
dec
jle
jnp
and
mov
pop
inc
sbb
adc
and
es
mov
movb
add
sub
and
dec
or
adc
repz
xor
adc
xor
and
sub
pop
inc
cmp
test
mov
xchg
mov
clc
cmp
mov
jne
cs
pop
cmp
pop
sbb
xchg
push
rclb
fcompl
pop
pop
jne
mov
push
mov
add
or
sub
or
jmp
xchg
or
sar
int3
cmp
push
jmp
sbb
and
sti
inc
iret
sbb
lea
pop
add
jmp
push
mov
int3
xor
inc
adc
and
push
jno
pusha
pop
enter
jo
and
add
mov
adc
into
and
ds
pusha
fbstp
add
or
push
jle
outsl
mov
add
nop
out
lods
sbb
cs
movq
mov
sub
inc
or
dec
testb
pop
dec
movsl
pop
xchg
adc
dec
inc
sbb
push
mov
aas
add
shll
adc
data16
mov
subb
fcomps
add
or
rolb
push
popf
aaa
enter
ljmp
sub
sbb
inc
shlb
xchg
add
fnstcw
clc
popf
adc
push
push
ljmp
rcll
ret
fisubs
pop
or
push
movsb
lods
sbbb
add
adc
xchg
adc
xorb
mov
fimull
sbb
mov
mov
or
cld
mov
push
stos
or
jge
test
lock
or
push
sub
aam
inc
inc
nop
sub
push
add
xchg
add
inc
and
les
dec
push
hlt
and
xchg
adc
fwait
add
repz
inc
cmpsl
mull
aad
testl
movb
or
add
mov
lods
push
inc
xchg
pop
push
lock
xor
xchg
mov
or
add
or
mov
out
dec
ja
aas
pop
pop
ss
mov
add
and
lods
lahf
nop
mov
dec
pop
xchg
pop
mov
cwtl
sbb
mov
push
sub
mov
int
inc
push
push
xlat
mov
out
shlb
jmp
push
decl
or
pop
xchg
hlt
add
pop
jmp
pop
sbbb
dec
mov
ds
jb
pop
jbe
pop
push
mov
add
sbb
fs
enter
test
mov
or
out
push
jg
mov
push
xchg
pusha
inc
cmpsl
pop
andl
xchg
sub
clc
arpl
pop
cmp
je
sarl
mov
les
pop
or
lods
clts
imul
and
push
and
jno
push
and
pop
add
jno
inc
fisttps
mov
fisttpl
pop
adcl
push
daa
xorb
xor
stos
ljmp
mov
push
icebp
mov
inc
rcll
repz
inc
dec
es
sub
xchg
xchg
mov
add
std
push
xchg
mov
popa
dec
cwtl
push
popf
add
cmpb
ja
mov
pop
sub
mov
jns
les
ds
and
push
lods
xchg
pushf
push
adc
popa
xchg
ret
push
out
mov
xlat
out
les
or
jbe
inc
push
xchg
bound
call
cmpsl
stos
ret
add
fstps
adc
xchg
mov
dec
push
mov
xchg
add
adc
ss
cmp
adc
insl
hlt
add
xchg
addr16
insb
pop
push
add
mov
fildl
add
add
stc
stos
lock
outsl
shlb
adc
in
stos
xor
mov
xchg
pop
les
repnz
pop
push
icebp
and
sub
loop
aas
mulb
and
lcall
inc
stos
sbb
inc
xor
call
dec
sub
js
pop
into
test
and
je
and
pop
aaa
mov
dec
inc
push
adc
sub
dec
sbb
sahf
or
loopne
enter
jl
cmp
and
sbbb
adc
dec
orl
dec
push
push
pop
jg
push
push
and
dec
push
sbb
decb
inc
inc
push
dec
dec
inc
dec
out
dec
jb
add
jo
adc
and
dec
loopne
psrld
or
repz
jp
test
out
jo
mov
rorl
cmp
repnz
andb
pop
lea
xchg
or
pusha
and
leave
and
insb
shlb
push
out
dec
jae
adcl
pop
push
xor
inc
xchg
inc
loopne
inc
je
dec
dec
mov
pop
pop
clc
hlt
mov
data16
hlt
mov
mov
add
insl
nop
add
adc
xor
daa
add
adc
cmpsw
and
rol
push
push
fs
push
xor
push
fs
bound
dec
sbb
mov
xchg
sbb
ret
add
mov
pop
inc
sti
dec
sub
aaa
jmp
loopne
jae
dec
in
shll
imulb
sub
inc
lods
dec
sbb
inc
popa
ljmp
or
push
add
sub
mov
pop
int3
and
mov
imul
jmp
adc
ret
or
add
out
or
cmp
pusha
enter
xchg
push
stc
lea
sub
inc
mov
test
pop
movsb
adc
dec
outsb
mov
arpl
das
je
xor
and
lcall
insl
or
lcall
adc
mov
jnp
mov
in
scas
aaa
push
enter
sbb
adc
fwait
pop
movsl
pop
out
inc
mov
rcr
cmp
push
adc
sub
sub
jbe
sbb
add
call
insl
leave
stos
imul
sub
or
add
dec
fiaddl
into
pop
and
adc
shlb
loopne
shrb
add
lock
stos
in
adc
add
cmp
sub
add
sub
mov
dec
lret
or
push
push
or
add
sbb
pop
pushf
pop
and
adc
jo
add
jle
adc
inc
jne
mov
mov
push
shll
inc
hlt
sub
jo
xchg
mov
pusha
shll
or
into
sbb
dec
scas
sub
hlt
popa
movsb
cs
jne
sub
les
adc
ret
ss
dec
push
call
leave
inc
fcoms
or
jo
sub
inc
adc
push
sbbb
sub
shll
add
sub
push
cmp
cmp
or
mov
add
out
rorb
imul
sbb
sbbb
nop
sub
ret
or
add
js
xchg
outsl
mov
fsubl
les
sub
push
andb
sbbl
mov
jbe
daa
jb
sbb
fs
insb
aam
and
cld
aaa
sbb
dec
inc
dec
dec
inc
inc
push
notb
xchg
add
inc
inc
adc
pop
or
push
sbb
loopne
xchg
xchg
push
lods
cmp
sbb
push
dec
imul
jbe
out
xor
mov
sub
mov
dec
xchg
inc
outsb
and
pop
xchg
lock
ds
or
inc
test
inc
push
pop
add
pop
sti
mov
sahf
dec
jne
sbb
push
cwtl
inc
movsb
fisubl
add
inc
xchg
sub
shl
mov
jl
add
shl
push
dec
xchg
scas
mov
xchg
push
leave
and
mov
sub
adc
dec
in
xor
or
les
xchg
adc
loopne
or
out
add
sbb
push
mov
inc
push
mov
cmp
int3
mov
ret
or
addl
lock
sub
iret
pusha
es
cmp
sub
sub
add
outsb
pop
pop
data16
xor
mov
cmp
fnstenv
and
orl
mov
or
inc
jmp
fcmovnu
lea
test
call
add
add
add
pop
mov
sub
in
stc
in
scas
adc
pop
repnz
sub
cmp
ljmp
add
hlt
sub
subl
pop
loopne
sub
push
mov
or
mov
insb
push
nopl
je
push
in
dec
xchg
mov
xchg
cmp
pusha
repz
daa
cmp
cmpsb
cmp
das
add
call
clc
jo
adc
dec
mov
pop
nop
and
das
mov
shl
inc
popf
cs
xchg
dec
fsub
jno
das
test
pusha
jo,pt
xor
test
pusha
sbb
push
div
xor
mov
jno
aam
inc
repz
sbb
pusha
pop
out
pop
mov
loope
mov
mov
or
add
js
push
jl
and
pop
mov
inc
cltd
in
sub
in
or
push
div
sub
mov
or
add
push
add
or
sub
mov
aas
xor
mov
jmp
adc
xchg
addr16
pop
pop
adc
mov
iret
add
push
aam
pop
fisttpll
push
mov
add
rcrb
cmp
cmp
iret
lods
movsb
sbbb
dec
sbb
or
push
or
mov
insb
push
sbb
add
push
inc
add
xor
pusha
sbb
sbb
imul
add
inc
fistl
add
jo
or
inc
shl
mov
cmp
mov
je
xchg
int3
jbe
andb
stos
jg
nop
add
mov
je
lods
pop
or
je
rolb
loop
adc
push
inc
inc
dec
inc
dec
and
push
call
dec
dec
dec
push
jb
sbb
push
stc
mov
xchg
sub
mov
inc
xchg
sbb
cwtl
ja
in
les
add
jle
add
or
cld
pop
ja
cltd
pop
and
aas
sbb
mov
or
xor
cmp
ret
test
push
jne
pop
clc
loopne
xchg
jecxz
or
clc
or
sub
xchg
lods
and
lock
add
cmpsl
bound
adc
test
mov
cmp
xchg
add
add
add
or
or
adc
iret
push
test
testb
inc
fcompl
and
push
add
rorb
lcall
and
and
fcoms
dec
mov
inc
mov
movsb
es
jo
es
mov
in
lea
sub
into
out
add
movsl
daa
xor
je
vmread
push
rcrb
loopne
lock
into
push
inc
addl
insb
pop
into
mov
push
inc
in
fs
xchg
mov
incl
and
insl
xor
int
xchg
adc
jo
roll
fdivrs
int
les
jnp
arpl
push
adc
dec
dec
rolb
lahf
ja
xchg
cwtl
cs
test
push
adc
dec
adc
ret
ucomiss
arpl
movsb
and
popa
je
imul
push
mov
dec
mov
mov
test
js
push
mov
dec
loopne
xor
outsl
imul
add
adc
pusha
pop
mov
mov
sbb
or
sbb
sbb
mov
jp
inc
push
inc
pushf
loop
int
in
negl
aaa
cmp
pop
mov
jmp
out
test
inc
adc
loopne
addl
push
mov
lcall
mov
or
mov
xor
xor
sbb
xchg
xchg
iret
jl
sbb
xchg
xchg
popa
enter
jns
push
push
testl
pop
mov
inc
lods
lods
jmp
test
repnz
lret
data16
pop
loope
ret
je
push
adc
mov
and
test
add
fwait
rol
in
sbb
mov
hlt
add
xor
loop
mov
pushf
push
orl
mov
mov
jb
push
mov
sbb
lcall
pop
repnz
xchg
lock
sbb
xchg
inc
test
jb
sbb
icebp
add
cs
clc
xorb
add
push
daa
scas
jnp
shlb
ret
jle
xor
xor
js
xchg
add
adc
shr
push
adc
fnstcw
inc
adc
inc
jne
jecxz
notb
pop
lea
fs
nop
dec
sahf
push
sub
insb
jo
fwait
push
or
xchg
lods
push
insb
insb
mov
xchg
fcoms
dec
clc
pop
aas
jle
push
adc
lock
in
popf
sbb
sbb
add
adc
inc
inc
in
cld
testl
stos
stos
xchg
movsl
ss
mov
sti
add
and
or
rolb
push
jle
adc
cmp
mov
cld
or
es
or
adc
jo
dec
xor
jle
xor
jbe
xchg
pop
push
fs
bound
mov
mov
inc
cmp
fldt
pop
and
imul
lsl
add
inc
addb
add
or
scas
inc
mov
in
jle
popf
pusha
into
jecxz
cmc
inc
push
and
fstpt
xchg
or
leave
pusha
pusha
fs
das
leave
and
and
pusha
adc
lret
or
inc
and
xchg
test
or
mov
fadd
mov
push
xorb
lods
or
add
cs
push
push
dec
mov
loopne
popl
xchg
cmp
cmp
push
cmpl
cmp
addb
sub
xor
out
sbb
fdivs
fs
push
push
mov
push
mov
sub
pop
inc
sub
ret
push
ror
or
sahf
aad
pushf
in
add
inc
mov
fistpll
add
stos
int3
push
or
cmp
mov
mov
dec
xchg
inc
mov
in
test
clc
push
cmp
bnd
cmp
jbe
dec
inc
jbe
in
push
fsubrl
add
dec
or
sub
adc
cltd
and
aaa
adc
hlt
stc
js
sbb
fwait
je
test
xor
call
inc
pop
cmp
and
and
push
add
pop
scas
adc
mov
testb
or
orb
negb
pop
mov
or
in
call
push
cld
sbb
pmulhuw
into
clc
push
push
mov
test
add
out
push
adc
fiadds
in
outsb
in
and
fadds
pop
shlb
cmp
mov
call
rcrl
mov
lock
nop
add
add
push
test
lret
in
data16
push
inc
repnz
cmp
inc
pop
call
push
dec
push
jne
xor
add
out
pushf
xchg
cmc
popf
test
xor
inc
dec
mov
cmp
mov
inc
lds
andb
mov
stos
jg
push
cmp
notb
daa
jp
loopne
add
or
imul
nop
push
adc
xlat
push
call
add
mov
stos
push
mov
and
or
clc
mov
ret
xchg
ret
xor
int3
or
popf
in
aam
stos
test
movsb
inc
shll
incl
jb
xor
push
adcb
push
mov
add
push
push
outsl
add
add
jl
sti
dec
inc
dec
dec
inc
push
nop
dec
mov
loop
faddl
add
mov
mov
js
ret
lods
mov
mov
xor
sub
sub
and
sub
and
or
push
lock
mov
mov
add
and
lods
mov
mov
mov
push
rorb
xorb
fcomps
inc
bnd
mov
pop
lock
pushf
or
jge
aas
cld
sti
jb
pop
adc
mov
mov
pop
push
sub
cmpsb
mov
and
inc
inc
mov
nop
bound
loope
sub
or
add
inc
imul
inc
add
psubsb
outsl
push
je
inc
sub
push
jmp
popa
adc
insb
xchg
dec
or
sbb
lea
ja
repnz
dec
lock
add
jo
inc
inc
dec
sbb
mov
sub
or
dec
sbb
call
inc
outsl
and
xchg
mov
arpl
mov
clc
outsl
xor
pop
mov
mov
je
fxch
adc
push
cmp
or
add
push
xor
pusha
xchg
mov
mov
test
add
fadd
cld
jbe
pop
add
call
inc
outsl
sbb
cmp
stc
inc
sbb
cmp
pop
add
mov
or
inc
sbb
pop
sub
push
xor
test
sub
out
and
jns
rcll
mov
mov
jl
and
in
ret
loop
rolb
adc
iret
jp
or
clc
ficoml
mov
xor
dec
mov
and
rolb
inc
dec
push
xchg
mov
pushf
nop
lar
push
mov
xor
js
push
mov
adc
shlb
and
mov
add
aas
repz
fdivl
imul
add
inc
hlt
sub
push
push
sub
mov
and
mov
aam
dec
push
int3
mov
cmp
sub
xor
xor
ret
cwtl
xor
or
sub
or
jo
and
add
push
sbb
mov
cmp
out
add
dec
clc
cmp
mov
or
mov
dec
lea
pop
push
jnp
loopne
jne
jmp
lods
and
sub
jnp
cld
pop
add
ret
jb
inc
xchg
mov
cmp
mov
mov
inc
fmull
jne
jbe
adc
out
iret
movsb
jmp
cmp
ret
and
imul
rcrl
ds
daa
mov
inc
mov
lds
pop
mov
cmp
loopne
add
popf
clc
je
xchg
xchg
cltd
hlt
cltd
nop
jge
push
mov
push
mov
mov
fsubrs
fs
in
in
add
mov
push
dec
mov
inc
mov
push
mov
xchg
je
mov
inc
sub
cmpb
push
add
xor
xchg
sahf
or
mov
inc
mov
jbe
pop
ljmp
adc
inc
cmp
cmp
push
push
mov
mov
pop
jmp
fdivl
rclb
scas
outsb
mov
dec
mov
and
cmp
pop
dec
sub
or
inc
ljmp
ja
out
cld
lea
mov
int3
jne
add
sarl
jne
push
outsb
xchg
add
jg
fldcw
mov
daa
lds
outsb
mov
ds
mov
mov
and
add
cmp
sub
loopne
incb
cmp
ja
adc
aaa
cmp
jb
lea
add
sub
jb
sbb
sbb
lock
sub
adc
adc
mov
xor
or
or
xchg
push
jecxz
insl
sub
sub
adc
sbb
push
test
jmp
push
insb
mulb
inc
aas
je
or
add
cmpsl
mov
pop
inc
xlat
fidivs
jge
adc
addr16
or
add
and
mov
popa
test
adc
outsl
push
or
repz
xchg
dec
hlt
gs
add
clc
das
rcl
jno
push
jle
jmp
sbb
sti
mov
add
cmp
jl
loopne
adc
insl
add
je
or
xlat
sbb
or
sbb
test
inc
paddsb
in
notb
add
mov
mov
dec
mov
push
and
cld
lock
into
addb
fdivs
clc
stos
leave
dec
out
inc
xchg
or
xor
movsb
or
je
cmpb
push
sbb
sub
aas
cmp
sbb
pop
or
push
shlb
xchg
cmc
or
or
jle
stc
arpl
adc
clc
and
xchg
pop
adcb
add
mov
pusha
pop
inc
xor
cmpl
fldl
pop
add
sbb
xchg
lods
sbb
pop
jbe
scas
pop
movsb
add
mov
inc
mov
add
inc
dec
fmuls
sub
cld
ja
dec
cltd
or
ja
xchg
insb
add
dec
and
pusha
xchg
inc
test
xchg
add
add
test
clc
xchg
fisttpll
sbb
insb
xchg
outsl
insb
add
jle
add
cltd
dec
xor
inc
je
or
ljmp
dec
inc
mov
dec
mov
es
adc
pop
or
add
adc
adc
xchg
add
xchg
incl
addb
push
add
ja
popf
push
mov
cmc
inc
adc
xor
lods
mov
out
clc
test
cmp
and
daa
xchg
movb
mov
imul
push
adcb
mov
into
enter
das
pop
or
fstps
sub
or
es
pop
fsubrs
add
pop
sar
mov
push
or
cmp
lods
fs
jno
lea
xchg
jb
or
cs
gs
xchg
das
aas
mov
mov
roll
rorl
inc
adc
sub
or
inc
mov
test
dec
xchg
push
and
test
les
and
push
add
adc
fisubl
loopne
shl
mov
loopne
aam
test
sub
pop
pusha
js
jo
push
push
add
lds
int3
jp
adc
addr16
push
push
cltd
sti
xor
sub
dec
cvtps2pi
or
fnstcw
sub
pop
push
pushf
daa
pusha
test
in
out
aas
shrl
sahf
inc
popa
shrl
or
lret
xchg
xchg
adc
and
sub
add
and
push
dec
push
adc
ds
insw
leave
js
mov
add
inc
cmp
and
test
inc
fs
loop
xchg
add
insb
ss
xchg
movl
inc
add
pop
test
jae
or
or
test
test
cmp
int3
movsb
mov
andb
je
pop
fnstsw
out
xchg
inc
test
dec
or
mov
add
cmp
addb
push
cmp
inc
add
or
add
cmp
call
mov
or
and
pop
test
xor
psrlw
adcb
pop
add
or
mov
mov
out
inc
ds
popa
xchg
addl
push
xchg
lcall
nop
or
add
in
dec
pushf
inc
fwait
pop
xchg
inc
push
cmp
mov
jle
add
cmpl
sub
pop
xor
inc
push
push
rorb
push
xchg
scas
sub
adc
shll
sub
pop
mov
push
sbb
mov
aam
jbe
or
aam
xor
loopne
pop
dec
sbb
gs
mov
inc
adc
sub
mov
hlt
popa
cmp
push
pop
outsb
xchg
add
inc
pop
sbb
addb
subb
leave
xorl
dec
pop
lret
cmp
xor
xor
push
inc
add
add
les
push
inc
sbb
test
mov
sbb
fcompl
bound
dec
sub
add
fld
sub
test
cmp
ja
xchg
jecxz
or
sbbl
mov
add
push
ret
adc
sbb
and
int
lock
cmp
jg
dec
add
mov
pop
add
adc
inc
in
fucomi
add
fldt
or
adc
fwait
adc
icebp
push
add
add
addr16
push
inc
out
xor
mov
mov
or
loop
lret
mov
test
inc
add
insl
jne
pushl
loopne
jae
mov
mov
clc
add
sub
sbb
or
and
jg,pn
or
clc
mov
fdivrs
adc
imul
dec
adc
jo
mov
adc
mov
pop
jbe
jp
jo
dec
int
mov
jo
jae
sbb
and
push
mov
insl
sub
outsb
adc
les
mov
clc
push
add
xchg
jo
cltd
or
push
les
jb
daa
in
loope
das
pop
mov
dec
or
push
sbb
mov
ret
sahf
push
jno
sarl
dec
sub
mov
lret
popa
adc
lods
std
out
popa
and
lret
sbb
insl
push
sub
test
lahf
pop
sbb
repnz
push
xchg
lahf
jle
jge
dec
lds
or
mov
and
and
sub
sahf
jge
adc
outsl
jge
mov
ret
or
clc
pop
mov
cli
shr
and
data16
mov
pop
add
or
and
inc
insl
idiv
and
add
loope
add
pop
outsl
add
or
fldcw
add
clc
cmp
cmp
frstor
xchg
inc
cli
jae
push
mov
pop
or
or
sub
or
xchg
int
or
add
pop
push
cmp
lahf
jbe
pop
pop
mov
jbe
shl
or
jmp
fisubrl
enter
cli
inc
push
inc
popa
xor
addl
or
mov
mov
mov
loopne
cmpb
movsb
ljmp
pop
je
and
sub
lea
xchg
add
mov
dec
sbb
push
sbb
pop
arpl
sbb
cs
mov
push
sbb
nop
inc
push
dec
repnz
mov
or
and
movsb
into
and
cltd
pop
jp
roll
sarl
cs
or
mov
outsb
push
aam
fsts
push
in
dec
mov
mov
push
mov
sub
fimull
xchg
inc
lods
outsl
adc
or
mov
scas
arpl
jns
nop
mov
shrb
sti
mov
insl
jae
jae
push
cs
pop
pushf
lret
add
out
pop
and
fists
pop
push
mov
arpl
cltd
mov
inc
test
call
mov
xchg
fists
movsb
adcl
or
push
and
jmp
push
movsb
shrl
sbb
movsb
aam
push
shrb
out
ds
mov
xor
pop
leave
leave
loop
movsb
mov
mov
adc
jb
fnstcw
and
movsl
inc
mov
cltd
xchg
insb
dec
fcomps
mov
movsl
dec
push
pop
xorl
dec
dec
nop
adc
ret
dec
pusha
cmpsl
ja
add
pop
orb
push
adc
lcall
cmp
jne
inc
inc
dec
jne
adc
loop
mov
pop
outsl
enter
movsb
std
or
movsl
push
sbb
aaa
pop
or
mov
xor
movb
iret
lahf
js
mov
adc
stos
std
xor
mov
nop
shl
add
add
nop
or
pushf
inc
cld
rorl
aam
push
push
cmp
sub
mov
push
js
push
lret
mov
mov
ret
test
mov
mov
dec
imul
lock
jl
inc
jo
pxor
cmp
sub
add
in
push
aam
mov
sbb
cmpsb
xchg
test
ret
push
sbb
lea
test
sbb
stc
mov
mov
in
insb
mov
lods
ret
orb
xor
jg
push
push
ljmp
add
rorb
mov
repz
push
push
inc
test
mov
pop
inc
mov
adc
lea
std
jno
iret
out
jo
mov
insl
mov
das
rorb
enter
cs
das
fsts
fdivr
sub
sub
aad
loopne
xchg
push
mov
dec
js
sub
adc
dec
fnstenv
lock
adc
inc
lock
jp
dec
ret
mov
ja
mov
nop
and
fisttpll
and
stos
mov
repz
enter
test
icebp
mov
add
clc
mov
mov
xlat
cs
in
div
stos
sbb
inc
stos
adc
cmpsb
pop
insb
pushf
mov
stos
orb
inc
add
aas
gs
orb
and
sbb
xlat
push
inc
lret
xlat
lods
inc
cld
add
and
and
add
mov
leave
in
adc
ss
mov
loope
push
mov
push
add
jg
or
stos
mov
or
xchg
push
pop
sbb
adc
dec
jb
adc
pop
push
cmp
or
test
loopne
dec
add
subb
cmp
ret
sub
bound
movmskps
lcall
je
cmc
add
pushf
adc
mov
icebp
and
and
push
inc
jl,pt
adc
xchg
scas
addl
add
xorl
push
bound
into
cmpb
inc
pop
pextrw
gs
std
mov
in
pop
fisubs
loop
rorb
inc
add
or
nop
mull
sub
leave
sub
mov
jge
mov
lcall
sbbl
sub
adc
add
inc
mov
nop
imull
inc
sbb
pop
aam
scas
sbb
mov
inc
push
rcrl
pop
sub
test
nop
insb
lods
dec
shll
fwait
inc
jne
adc
adc
adcb
jo
loope
sahf
lods
mov
xor
or
or
inc
xor
or
jnp
add
add
push
inc
les
push
lock
lcall
add
les
add
push
inc
sbb
pop
push
fstl
dec
das
add
inc
mov
out
or
add
pop
adc
add
rorb
cmp
mov
xor
aam
xor
test
adc
pop
sub
xchg
lods
jns
das
add
add
stc
mov
or
or
mov
xchg
adc
in
testb
cmp
lret
pusha
push
add
adc
push
icebp
pop
aad
pop
fcmovu
cmp
ret
adc
adc
inc
lds
addl
cmp
add
outsb
test
jle
cmp
jg
mov
adc
jg
add
sbb
fisttpll
dec
shrb
adc
pop
add
lret
push
xchg
inc
stc
jg
lock
jne
cmp
idiv
aad
incb
jae
ja
dec
mov
int3
mov
ret
adc
nop
mov
inc
mov
and
pushf
lret
push
in
pop
push
push
xor
pusha
cmpsb
fisttpll
shlb
fadds
adc
jae
add
inc
into
das
leave
scas
es
sti
cmp
insb
arpl
push
mov
and
andb
je
mov
mov
sbb
or
jo
add
pusha
xchg
jmp
ret
pop
xor
pop
mov
and
mov
inc
bound
xchg
stos
mov
fists
pop
xor
jne
add
and
sbb
mov
xor
shrl
inc
test
mov
icebp
cmp
xchg
xchg
clc
or
cmp
sbb
pop
adc
dec
ficoml
fildl
mov
pop
sub
or
sub
sub
pop
mov
repnz
add
repnz
dec
cld
decl
or
adc
jns
jmp
mov
xchg
inc
push
dec
push
add
mov
cmp
mov
mov
add
mov
pop
mov
add
fs
leave
ja
stc
nop
daa
loopne
inc
insl
push
push
jo
push
out
dec
outsb
or
outsl
arpl
sbb
outsb
dec
testb
jo
je
pop
imul
out
adc
or
jae
pop
lock
bndstx
or
pop
aas
adc
pushf
mov
push
xor
push
mov
inc
test
mov
popa
jns
add
inc
ja
nop
int3
mov
int3
mov
adc
xchg
insl
add
add
pop
xchg
popa
je
insb
push
outsb
jp
jo
push
sbbb
xchg
push
orb
dec
lods
mov
mov
or
addr16
push
cmpsb
mov
lods
xchg
movsb
or
insl
pop
fdivs
pop
cmp
test
frstor
addb
cmp
nop
adc
push
mov
rclb
pop
lods
or
inc
mov
push
push
jmp
pop
adc
adc
add
or
test
mov
sub
cmp
imul
add
imul
sub
iret
push
add
lahf
es
adc
jo
add
pop
mov
pop
push
inc
mov
addb
jecxz
mov
lret
dec
cmp
push
and
adc
cli
ret
and
push
dec
je
and
add
loope
lahf
mov
push
aaa
jo
xor
mov
inc
js
push
dec
jae
or
sub
mov
and
xor
mov
inc
sub
jge
cmp
sbbl
lods
in
out
inc
push
inc
mov
shrb
ret
add
adc
mov
xchg
pushf
xor
testb
and
insl
in
lods
and
out
inc
adc
js
shrb
insb
jae
out
or
xchg
pop
and
jl
mov
mov
mov
inc
incl
mov
inc
and
xchg
cmp
pop
imul
add
mov
mov
popf
pop
cwtl
mov
sub
inc
in
imul
mov
mov
xchg
cmp
sub
mov
rol
lds
mov
sti
sub
sti
inc
pop
adc
adc
jbe
mov
push
add
int3
data16
pop
pop
pusha
mov
imul
out
or
jl
mov
xor
push
lods
insl
or
loopne
xor
adc
jp
pop
pop
adc
push
push
enter
mov
sbb
jmp
mov
sub
cwtl
cmp
adc
inc
or
add
xchg
adc
mov
sbb
lods
in
add
pop
out
push
mov
or
imul
cmp
push
inc
inc
imul
cmpsb
lcall
or
sub
mov
adc
sbb
dec
shll
pop
push
push
and
dec
shll
and
and
fnstcw
sub
xor
mov
push
add
mov
push
test
fisttpl
xor
sub
scas
push
ret
dec
aas
shlb
add
negb
mov
add
and
pop
dec
xor
xor
xor
shll
inc
inc
inc
inc
repz
adc
hlt
inc
inc
inc
inc
imul
pop
xchg
cmpsb
inc
inc
inc
inc
inc
xchg
gs
xchg
inc
inc
inc
push
ret
fwait
fwait
inc
xchg
push
ret
jle
cmpl
mov
and
inc
jb
push
xchg
gs
add
out
inc
inc
inc
into
shll
xor
mov
pusha
inc
push
sbb
mov
add
push
xor
es
xor
and
psubb
adc
ret
mov
cmp
out
mov
test
enter
insl
xchg
push
fsincos
fidivrl
das
or
stc
push
or
sbb
push
dec
ja
cmp
sbb
and
and
sub
test
lcall
adc
or
loope
enter
dec
in
xchg
push
adc
or
stos
insl
in
or
adc
adc
and
add
pop
data16
sub
aad
inc
xor
dec
jbe
in
cmp
or
call
in
stos
mov
std
pop
sbb
mov
add
add
push
or
test
or
adc
pop
enter
sbb
push
push
and
test
and
pop
xchg
scas
sbbl
xor
icebp
mov
xor
inc
mov
adc
pop
or
insb
dec
sbb
insl
das
jbe
mov
fisttpl
xor
adc
stos
cmp
flds
rorb
stos
add
cmpsl
and
pop
cmp
add
test
sub
enter
adc
push
cmpsb
xchg
adc
cmp
sar
mov
in
xchg
ret
mov
sub
pop
cs
push
les
mov
sub
inc
inc
sbb
je,pn
pop
push
icebp
jmp
jne
cwtl
mov
inc
lds
mov
movsl
xor
lret
cmp
cmp
adc
jne
or
add
je
xchg
lock
mov
push
inc
fcompl
xchg
shl
rolb
mov
iret
out
dec
faddl
and
cs
push
cmp
pusha
ja
add
cmp
loopne,pt
loope
test
rorl
lock
mov
add
popf
ret
mov
sti
pop
cmp
lcall
add
divps
push
clc
pop
sarb
xchg
test
push
and
ret
imul
ret
fstpt
ljmp
inc
loopne
push
and
cmp
ds
sbb
sbb
loopne
add
lods
fadds
and
or
adc
pop
add
addb
rolb
cld
sub
mov
add
and
sub
cltd
jmp
pop
xor
dec
xlat
push
icebp
testb
ret
pop
or
inc
mov
out
sbb
ret
inc
push
sub
jo
cmp
dec
rcll
inc
pxor
lret
mov
lods
les
or
sub
cmp
inc
scas
sub
in
xchg
in
adc
xor
add
pushf
jae
rolb
jns
xchg
mov
and
insb
lds
sbb
stc
leave
pop
int
hlt
mov
mov
xchg
cmp
push
sbb
or
mov
cmp
clc
dec
dec
push
jno
lds
push
push
add
in
in
sbb
push
dec
cld
das
stc
jmp
je
push
lea
lea
add
push
movsw
pop
inc
sbb
pop
and
add
xor
mov
or
aaa
sub
push
xor
in
stc
nop
jg
nop
in
add
jle
add
sbb
inc
push
cltd
sbb
inc
inc
inc
adc
aas
or
mov
shrb
cmc
inc
add
inc
or
mov
movsl
sti
add
unpcklps
xchg
ret
jecxz
fcmovne
inc
ret
test
jle
push
mov
mov
xchg
test
addl
mov
jns
lahf
in
lods
pop
lea
clc
adc
sub
int3
icebp
push
jl
clc
jmp
fnstsw
outsl
jmp
pop
out
out
add
jmp
mov
lods
int
idivb
fs
enter
add
sub
xor
scas
add
or
out
and
call
or
scas
jne
or
xor
fiadds
dec
and
pop
or
inc
jmp
outsl
or
pop
lcall
or
or
add
xchg
lret
adc
push
adc
push
mov
mov
ret
push
faddl
imul
fwait
in
pop
inc
cs
or
sbb
outsb
mov
ret
inc
add
xor
or
pop
adc
imul
in
pop
loopne
sub
cmp
pusha
add
pop
adc
cmp
fcomps
xchg
stos
ret
push
lret
lcall
sub
cmp
mov
push
ror
bound
adc
loopne
xchg
xchg
mov
cmp
xor
cmp
mov
enter
leave
add
lock
sbb
inc
mov
pop
inc
mov
lret
and
mov
or
pop
cmp
or
xchg
xchg
xchg
cmpsb
xor
mov
enter
push
jmp
sbb
sbb
inc
pop
imul
out
and
shrl
sbb
out
jl
jo
and
fnstenv
fdivrs
insb
fidivs
mov
cmp
jge
adc
xchg
sti
push
mov
add
or
outsl
add
inc
mov
decl
fs
lret
cwtl
lret
adc
fs
lret
mov
scas
testl
pusha
inc
pusha
add
pop
add
int3
mov
mov
in
jge
cmp
call
mov
sahf
xor
mov
fstps
repnz
xor
xchg
inc
aam
adc
ljmp
ja
add
inc
shll
push
mov
adc
and
lret
adc
xchg
stos
lahf
movb
jb
pop
lar
fcomip
inc
jns,pn
int
sbb
out
xchg
and
fs
or
packuswb
int
pop
sbb
adc
inc
cmpl
imul
add
mov
push
pop
add
pop
jb
add
sub
push
push
inc
dec
cmp
pop
push
mov
sbbl
add
pop
xor
jae
sub
or
imul
shl
mov
inc
outsl
and
adc
inc
scas
fbld
loope
sbb
add
xchg
or
lahf
cld
sbb
add
pop
popf
outsl
or
mov
push
mov
push
inc
shll
sbb
add
or
xor
cmpl
insb
push
push
push
pop
and
jnp
aad
or
push
pop
enter
sbb
ja
scas
test
test
xor
inc
add
add
adc
push
pop
xor
nop
or
test
and
mov
adc
and
sub
gs
sub
adc
push
push
add
xchg
mov
mov
out
and
jae
inc
inc
mov
sbb
xchg
push
ficoml
or
lea
pop
shrb
aam
dec
jl
orb
dec
outsb
inc
pop
shlb
adc
mov
jae
mov
cmovns
add
push
loope
movsb
arpl
pop
add
or
cmc
xor
add
pop
fsubl
mov
addl
inc
mov
mov
pop
add
subb
imul
inc
cmc
xchg
stos
jecxz
pop
pop
outsb
cmp
lcall
add
dec
shll
out
and
fldcw
nopl
nopl
dec
and
xor
jg
rcl
inc
or
test
clc
cmp
mov
in
fwait
iret
xchg
cmp
adc
mov
jle
mov
and
add
jl
inc
xor
mov
into
push
adc
add
addr16
mov
lock
loopne
sub
out
adc
mov
dec
or
jp
roll
les
lods
test
js
fildl
jp
and
faddl
enter
push
add
sbb
and
mov
outsl
enter
inc
or
clc
mov
lea
arpl
imul
fildl
fcomp
test
iret
sahf
shll
rorl
in
mov
pusha
add
xchg
in
pop
and
lea
lods
stos
leave
mov
cmp
sbb
cmpsl
add
dec
rclb
lds
out
es
push
mov
insb
or
scas
jne
mov
mov
add
xor
cld
in
jg
decl
push
sahf
lds
or
loop
nop
mov
push
sub
addb
or
insb
and
movb
aad
popa
and
jl,pt
movsl
xorb
mov
and
mov
cmp
fists
sub
or
lahf
dec
fdivrs
sahf
sahf
jne
loop
in
cmp
inc
in
fdivs
stos
jmp
dec
nop
fcomps
adc
or
mov
push
sub
push
push
int3
sbb
pusha
roll
cwtl
insl
cwtl
mov
sbb
mov
add
push
adc
push
int3
xor
push
subl
scas
mov
fcomp
nop
aam
aam
add
and
dec
mov
aam
addb
dec
push
push
sti
push
stos
mov
rcll
or
mov
sub
sbb
jne
aaa
adcb
fisubs
outsl
data16
fisubl
mov
push
mov
cmp
adc
sarb
jmp
cmp
cmpsl
in
outsb
push
and
inc
enter
mov
rorb
cmp
jae
push
and
ret
int3
pop
cmp
je
enter
test
call
lods
popf
addl
les
mov
cmp
jbe
aaa
push
ljmp
xchg
lea
inc
push
and
enter
outsl
test
xor
cmp
jns
jmp
fldenv
add
or
daa
mov
or
aad
jge
aaa
sti
xor
pop
cmp
out
mov
inc
stos
or
scas
add
cmc
dec
xor
xor
pop
inc
test
add
arpl
and
adc
pop
fnstenv
add
inc
shll
out
sub
dec
push
jns
mov
adc
mov
fildl
jmp
xor
dec
push
popa
mov
in
push
int
mov
and
add
jno
jp
cli
mov
lret
mov
repnz
inc
and
outsb
arpl
repnz
mov
mov
movsl
or
insb
push
pop
push
movsb
int3
testb
inc
in
imul
pop
jmp
cmp
lock
push
or
je
in
jl
push
dec
lock
outsb
cmp
lock
adc
repnz
repnz
repnz
xorl
jbe
jnp
or
fs
add
fcomps
jae
add
arpl
xor
jge
ret
faddp
sbb
fsubrs
fidivs
ja
sbb
pop
mov
and
test
dec
aas
and
inc
cmc
mov
cmc
mov
push
daa
push
dec
frstor
jbe
and
icebp
test
cmp
or
int3
sbb
lods
xor
ja
aaa
inc
add
xchg
inc
aaa
ljmp
push
xor
xor
lcall
add
outsb
ret
cmp
push
pop
hlt
cmp
fcomps
dec
mov
nop
sbb
loopne
insb
inc
out
out
and
js
mov
cmc
out
mov
mov
fucomp
pop
mov
or
push
fcmovnu
pop
xor
cmpb
in
ret
in
adc
sbb
mov
inc
cmp
or
out
lret
jle
push
clc
inc
and
mov
fst
stos
std
jae
add
inc
or
add
adc
jb
hlt
and
fiaddl
and
fistl
inc
aas
lea
call
jp
shl
xchg
andb
aam
dec
lret
or
push
adc
mov
sbb
mov
addb
bound
xlat
shll
inc
adc
sub
jecxz
or
mov
add
pop
cmpsb
or
or
push
jo
fisttpl
push
jnp
add
push
rorl
add
lock
or
xor
fstp
dec
fiaddl
sbb
lret
ljmp
or
sub
add
push
or
dec
out
or
fcoml
data16
add
out
cmp
prefetch
out
mov
pop
jle
pop
mov
adc
add
inc
mov
das
scas
arpl
imul
pop
pop
mov
adc
dec
pop
daa
add
movhlps
and
aaa
or
inc
xchg
add
adc
mov
jae
add
add
pop
fmull
sbb
out
sbb
mov
nop
out
cwtl
fistl
sbb
lods
scas
fcmovbe
or
push
push
sub
mov
insl
inc
and
pop
push
push
xlat
pop
mov
or
daa
jb
push
dec
mov
pop
xor
sub
push
sbb
in
jmp
jne
jmp
xor
fnstenv
cmpsl
test
mov
ret
addr16
popf
hlt
mov
cmp
iret
testb
lock
mov
cld
mov
fldenv
stos
adc
ljmp
mov
add
popf
or
sbb
mov
into
repz
sub
fidivl
and
andl
int3
and
or
jae
loopne
fdivs
outsb
ja
ja
ljmp
iret
and
cld
nop
and
nop
sub
js
add
in
outsb
das
add
sub
push
jne
xchg
sub
pop
inc
dec
and
push
pop
sbb
in
insb
pusha
mov
jno
or
push
inc
xchg
push
js
mov
out
shrl
or
ds
dec
ljmp
push
stos
inc
jp
and
or
pop
jge
push
ret
adc
add
ret
jne
xchg
into
cmp
cmp
mov
adc
sbb
nop
pop
push
jbe
ret
movsb
dec
pop
in
ja
push
lret
insl
adc
dec
or
out
outsl
cs
sbb
mov
inc
adc
add
xor
je
testb
sub
adc
sub
xchg
or
add
cmpsl
add
sbb
andl
or
add
add
lock
mov
push
push
loop
sbb
insb
repnz
out
jg
mov
orb
jmp
or
adc
hlt
jbe
add
push
adc
cmp
jl
push
and
or
mov
insl
and
scas
scas
lret
pop
out
push
sti
add
jmp
adc
pop
mov
cmp
add
popa
push
ret
leave
fcmovu
jl
aam
cwtl
or
mov
test
or
lret
inc
adc
cs
sub
jecxz
imul
out
call
xchg
test
out
fiaddl
inc
mov
ret
daa
aam
pop
add
or
inc
ja
inc
xor
mov
jne
pcmpgtd
popa
pusha
cmpsb
add
sahf
jge
push
add
xor
in
push
jbe
call
xchg
loope
enter
inc
push
clc
std
fsubrs
and
push
loop
ficoml
ds
pop
inc
fadd
out
clc
cmpsl
mov
xor
test
pop
jl
subb
sbb
pop
add
adc
fldenv
adc
fs
in
inc
xor
xor
and
mov
push
cmp
in
sub
and
push
inc
enter
leave
bound
add
jp
mov
repnz
xor
out
popa
inc
fcmovbe
push
repz
sbb
scas
in
call
xor
jne
xchg
data16
cmp
sub
shll
dec
jae
push
pop
mov
hlt
mov
inc
pusha
js
stos
xchg
int
inc
add
add
add
sub
jle
add
mov
or
jle
inc
ds
jbe
inc
clc
mov
bnd
jo
jne
lret
leave
orl
and
push
jbe
insb
into
outsb
sbb
addr16
fs
lcall
push
inc
push
data16
push
movsb
out
loopne
in
push
stos
push
daa
popf
data16
test
sbb
push
fildll
dec
push
mov
pushf
test
mov
pop
hlt
ror
push
hlt
mov
cmpb
popa
and
enter
or
push
nop
sub
outsb
add
push
arpl
sbb
jmp
shrb
lret
ret
int
push
cmp
or
xchg
jo
push
cmp
enter
push
and
arpl
pusha
mov
mov
pop
clc
add
scas
out
cli
sub
test
push
bound
fcoml
insb
flds
xchg
aaa
call
mov
subl
popa
lock
enter
test
or
cmovl
in
cmpxchg
adc
jne
lds
cmp
sbb
sbb
clc
test
dec
and
xor
fldt
push
into
add
mov
nop
jle
stos
xor
lret
sbb
insb
outsl
add
jne
push
jo
decb
inc
mov
mov
pop
mov
mov
or
ds
negb
cld
jmp
leave
inc
and
mov
stos
push
fsubs
pusha
hlt
add
pop
pop
mov
dec
jbe
roll
sbb
ret
inc
pop
push
arpl
hlt
fs
mov
popa
popl
mov
jg
mov
enter
sub
sbb
cli
cld
add
sbb
lcall
add
adc
xchg
leave
sub
xchg
in
add
push
pop
rcr
pop
jmp
fldenv
cltd
adc
nop
push
movups
push
outsl
cmp
mov
push
sub
dec
dec
sub
or
add
rol
jno
sarb
dec
mov
ljmp
push
sub
fchs
jp
push
outsl
aas
fcoms
jne
adc
idivb
push
jae
lea
add
xor
outsb
sbb
xor
adc
or
sub
and
mov
fcoms
mov
mov
push
inc
fdivrp
adc
push
mov
lcall
mov
loope
lock
lock
push
and
fwait
mov
sub
add
mov
jo
inc
dec
jmp
subb
rorb
and
mov
out
and
ljmp
in
lock
es
ljmp
dec
scas
lods
cld
pushf
pop
mov
add
jge
rcrb
mov
xchg
cmpsb
fsts
xor
out
add
and
cli
xchg
inc
mov
adc
or
pop
cli
push
push
dec
mov
cmpl
cmpsb
push
cmp
fs
rcr
xchg
stc
sbb
jmp
adc
fwait
cmp
add
push
mov
or
cmp
test
aaa
xor
in
jmp
inc
adc
mov
mov
sbb
mov
aas
push
ficomps
je
cs
arpl
ljmp
inc
loopne
iret
jle
je
lds
test
out
mov
adc
mov
dec
inc
mov
andb
inc
dec
add
test
lret
dec
int
cmpb
push
xor
or
stos
push
inc
adc
mulb
sbb
sbb
xchg
hlt
xchg
or
inc
mov
add
lea
cmpsb
hlt
add
in
jne
popf
divl
lea
pop
dec
mov
pop
shrb
ljmp
or
cmpsb
shr
lcall
adc
shl
push
push
lret
mov
insl
js
aaa
sub
mov
add
aas
fistps
mov
insb
sti
mov
pop
or
adc
es
mov
sbb
scas
je
jp
outsl
and
jb
fimuls
or
insl
pop
imul
dec
xor
add
cmp
jge
or
mov
add
pop
mov
inc
inc
pavgb
and
add
push
inc
or
pop
and
ja
adc
stc
cmc
pop
leave
sbb
into
add
inc
mov
cli
adcl
xor
pop
stc
cld
adc
sub
sub
sbb
and
outsl
outsl
or
iret
add
cmp
jle
loopne
imul
adc
dec
or
js
repnz
and
loopne
icebp
lahf
mov
cwtl
add
push
sbb
sub
out
shll
loop
pop
fsts
bound
pop
adc
cmp
mov
inc
ljmp
inc
lret
dec
jl
cmp
sbb
loop
xor
and
sbb
mov
or
shl
rolb
in
dec
mov
jle
in
and
pavgw
and
pop
xchg
add
rol
bound
push
test
dec
nop
test
test
add
add
or
mov
pop
inc
sub
jg
sbb
jmp
xor
aas
sbb
xchg
add
data16
enter
call
call
xchg
jge
out
mov
sbbb
and
xchg
cltd
andb
sbb
jle
pop
sub
andl
mov
jae
sbbl
mov
jl
fisttps
es
ja
xchg
je
or
shll
mov
xlat
add
adc
mov
mov
dec
dec
sbb
adc
xorb
pushw
xor
mov
dec
imul
leave
add
mov
jge
cmp
sub
in
sti
sub
loop
sub
add
mov
cmp
subl
xlat
loopne
xor
neg
nop
sub
in
int
rolb
adc
loopne
pop
or
shrl
xor
sub
dec
subb
loopne
adc
adc
mov
inc
or
mov
jo
push
enter
jae
jge
mov
test
jg
xor
das
xchg
mov
sbb
aas
pop
das
mov
sub
and
jge
or
shl
roll
call
fsub
pop
shl
push
ret
ss
js
and
dec
dec
inc
add
loopne
jnp
dec
jno
mov
xor
scas
sub
and
cs
rorl
mov
test
add
pop
xor
fcomps
int
push
out
dec
cmp
push
ret
pop
out
negl
fsubrp
out
xchg
push
fsubl
jb
scas
and
int
repz
fs
adc
xlat
or
adc
mov
sub
and
xchg
sub
adc
lea
pop
sbb
xor
sub
test
ret
inc
insb
push
mov
lock
lea
jmp
pop
add
lods
loopne
movsb
les
sub
arpl
rorl
test
pop
adcb
fisubs
sub
lods
int
mov
inc
add
ss
jo
fsubs
insb
insb
cld
dec
pop
sub
lret
shll
adc
mov
pop
xchg
in
cwtl
add
jg
or
xor
shrb
call
push
dec
dec
inc
add
and
insb
les
and
push
adc
add
adc
out
out
or
and
mov
mov
cli
xor
push
subb
cs
jl
ljmp
mov
fs
or
nop
dec
clc
daa
sub
xor
dec
mov
or
std
mov
push
enter
jle
jb
movsl
hlt
clc
jecxz
pop
jmp
nop
and
mov
dec
jb
insl
add
test
daa
loop
add
push
xchg
inc
sarl
adc
jmp
rorb
add
push
mov
add
ja
sbb
mov
jne
pop
outsb
fwait
loop
cli
jl,pn
shlb
jg
and
xchg
pop
add
push
test
and
out
xorb
add
loope
add
loop
inc
sti
sub
adc
in
pusha
jp
cmp
jne
or
push
invd
adc
lea
sbb
pop
mov
iret
push
loop
cld
add
add
imul
pop
jo
adc
push
sahf
xchg
fldenv
push
sbb
or
push
adc
daa
jp
inc
mov
pop
xor
xchg
or
xchg
or
int3
add
hlt
push
mov
jl
sbb
pop
jg
sbb
push
inc
jne
loopne
cs
test
and
popf
mov
jmp
xchg
cli
leave
ja
in
addr16
pop
je
dec
gs
xorb
pop
inc
int3
in
fistl
dec
cld
ret
dec
idiv
or
xor
outsb
push
xor
dec
sub
push
loope
adc
and
pushl
ss
pop
cmp
dec
jge
das
sub
je
xchg
push
mov
inc
sub
sbb
add
pop
fsubrs
push
scas
jge
sarl
in
lret
lea
mov
inc
cmp
stc
push
pop
sub
mov
sbb
decb
loope
inc
and
sbb
inc
pop
ja
test
scas
fsubl
sbb
cmp
cmp
dec
jmp
push
dec
sbb
es
call
dec
and
hlt
xchg
sbb
popa
sub
xlat
jge
popf
movsb
mov
mov
mov
mov
pop
push
mov
push
sub
dec
inc
xor
sub
mov
add
sub
sbb
ret
popw
scas
xchg
add
cli
sub
push
mov
add
shrl
mov
add
adc
sbb
lahf
mov
mov
inc
mov
inc
shlb
jecxz
mov
fdivr
inc
mov
ja
fbstp
lcall
sub
test
jbe
sub
sbb
fiaddl
nop
cmp
cmp
inc
ja
add
sub
ret
xchg
or
jp
addr16
andb
add
cmp
insl
xchg
out
add
imul
repnz
dec
jbe
cmp
cmp
add
xchg
xchg
sub
sub
mov
dec
rclb
in
xchg
lods
push
or
out
subl
add
pop
push
xor
and
lret
test
jecxz
or
push
add
aam
pop
enter
and
push
push
orl
in
arpl
les
lds
lcall
jbe
mov
shrl
fsubrl
into
sub
and
mov
jnp
add
jo
movl
push
inc
lods
sub
cmp
lods
pop
inc
sub
sub
pushl
mov
jno
test
dec
jnp,pn
fld
sbb
mov
loope
adc
jne
out
cmp
adc
mov
add
mov
inc
adc
sub
lods
dec
sbb
dec
stc
cmp
shll
ds
lock
xor
sbb
or
test
mov
cmc
xchg
loopne,pn
test
ljmp
jno
pushf
sbb
jge
sahf
insl
pop
adc
sbb
dec
xchg
test
pop
in
add
add
in
or
ret
and
test
mov
sbb
popa
xchg
xchg
add
arpl
jmp
lret
in
adc
pop
lret
or
jae
orl
das
inc
xchg
outsl
and
pusha
int
dec
jae
mov
rorl
popa
cs
addr16
sbb
outsl
mov
ret
mov
mov
sub
or
mov
sbb
nop
sub
add
loope
cmp
cmc
add
xor
add
addl
orb
test
xorl
dec
mul
jp
sbb
xchg
push
push
rolb
or
dec
push
sub
add
push
test
mov
xchg
stos
mov
clc
cmp
lret
inc
dec
push
mov
insb
mov
mov
sub
out
mov
hlt
cld
stos
or
adc
mov
add
xor
mov
jle
icebp
sti
jmp
mov
xchg
or
inc
push
dec
push
mov
arpl
and
icebp
mov
inc
test
fdiv
xor
pop
je
jge
add
xchg
les
and
dec
adc
and
mov
push
mov
bndstx
jecxz
jle
scas
nop
push
dec
bound
or
sub
mov
enter
ror
pop
xchg
insb
in
sbb
xchg
clc
test
addl
jo
add
sbb
and
and
cs
addr16
mov
add
or
xor
and
cmc
lds
sti
inc
mov
pushf
pop
jmp
or
loopne
lret
inc
xchg
sub
aas
ficompl
add
out
xchg
xchg
dec
nop
dec
xchg
add
sbb
rolb
dec
push
ret
or
insb
pop
xor
jne
add
xor
sbb
add
dec
pop
inc
push
or
arpl
or
and
and
popa
push
movl
arpl
push
sub
jne
jbe
aaa
push
add
jecxz
jb
add
nop
adc
add
dec
cmp
not
mov
testl
lods
mov
aas
push
sbb
xor
inc
lret
sbb
cmpsb
push
enter
dec
mov
mov
lcall
mov
in
pop
leave
jbe
flds
mov
jno
mov
jmp
es
or
fs
ljmp
jmp
sub
sub
and
xchg
pusha
pop
xchg
add
inc
lods
in
push
nop
add
enter
pop
inc
cli
das
test
mov
jg
adc
mov
lods
mov
aam
sub
mov
mov
lods
push
mov
std
sub
aas
add
and
mov
mov
stos
mov
sarl
pop
mov
mov
nop
xchg
add
add
and
adc
pop
shll
lods
mov
push
fbld
adc
mov
inc
js
pusha
xor
inc
jge
je
cmp
push
mov
xor
inc
lahf
pop
adc
aad
sbb
mov
pop
je
dec
sub
and
ljmp
dec
mov
pop
stos
cmpsb
pop
or
and
pushf
cltd
pusha
adc
stos
fdivs
or
add
inc
flds
cwtl
pop
in
js
pop
mov
test
and
mov
xchg
xor
cmpl
pop
push
push
adc
add
decl
mov
pop
or
sbb
dec
insb
xchg
xchg
adc
mov
pop
push
pushl
mov
or
jmp
add
jnp
push
push
add
adc
in
lock
jl
cmpb
fildl
ljmp
mov
mov
test
cwtl
sbb
sbb
xor
cmpsl
rcrl
sbb
add
sahf
inc
add
insl
cmpsl
lcall
and
jmp
cmpsb
pop
cmpsl
iret
and
xorb
ss
cmc
push
xor
pop
lcall
lock
leave
xchg
dec
dec
ficoms
daa
jnp
inc
jl
inc
xor
pop
or
addps
push
dec
icebp
inc
dec
enter
dec
add
lods
or
sbb
add
cmpsl
mov
jbe
dec
push
hlt
jbe
cmp
push
adc
mov
push
lahf
imul
and
sbb
mov
cmp
aas
xor
mov
mov
icebp
cmp
adc
xchg
or
mov
pop
mov
imul
cmp
cmp
mov
and
mov
cmp
add
repnz
scas
sub
adc
je
xorb
shll
cmp
mov
or
loopne
adc
push
add
push
xor
lock
fucom
cmp
xchg
pop
jns
or
addr16
and
sub
dec
sub
test
jle
mov
ljmp
sbbb
out
sub
add
push
adc
sbb
mov
xchg
adc
sub
add
inc
lds
es
jg
ljmp
xor
sub
pop
sub
in
pop
notl
sar
jmp
xlat
xor
dec
mov
je
add
shr
or
xor
sub
nop
test
daa
mov
jne
pop
inc
mov
mov
lods
jb
testb
add
adc
mov
out
dec
adc
test
mov
cmp
xchg
adcl
mov
mov
sbb
repz
add
mov
add
mov
adc
icebp
into
inc
inc
mov
repnz
in
fsubrs
and
movl
int3
dec
cmp
test
pop
xchg
add
mov
test
sub
add
fildl
adc
ficomps
shrb
push
popa
or
push
adc
add
hlt
dec
movl
arpl
xchg
addl
sub
gs
lcall
and
dec
adc
and
jmp
jecxz
mov
cltd
movsb
ljmp
add
dec
push
leave
push
or
or
gs
sub
jae
dec
push
sbb
xor
adc
fcoms
fs
fmull
hlt
lsl
shrl
je
in
xorl
mov
ss
dec
jmp
mov
cmp
adc
addb
adc
call
adc
mov
out
xor
faddl
movsb
enter
sub
mov
mov
sub
es
icebp
aad
sbbl
mov
sub
mov
les
mov
cmp
movb
cmp
mov
pop
mov
push
inc
in
hlt
cmp
and
inc
xor
jle
pop
pop
insl
decl
xor
jae
sub
cs
dec
push
sub
out
mov
pop
pop
inc
pop
inc
gs
jl
popa
jb
mov
dec
dec
inc
push
push
jl
jge
mov
pop
sub
popa
cmp
or
movsb
and
fmull
and
je
and
sbb
shlb
sbb
rcrb
decb
pop
cmp
out
faddl
jmp
movsb
or
add
push
pop
int3
jo
hlt
mov
hlt
pop
adc
cld
or
or
jb
push
mov
js
imul
pop
out
sub
and
mov
mov
fiaddl
or
imul
and
lods
and
aas
adc
mov
es
lcall
outsb
mov
sahf
add
and
and
push
ret
mov
add
sbb
inc
jl
inc
or
inc
mov
inc
lahf
adc
adc
sbb
test
lea
in
mov
popl
repz
mov
add
mov
inc
jle
test
test
insl
or
dec
lds
movl
and
sbb
pop
add
xor
inc
mov
int3
sbb
inc
inc
push
push
push
jb
cmp
xchg
cs
mov
inc
imul
clc
cmp
and
clc
xchg
pop
addl
mov
pop
andl
test
add
enter
loopne
add
iret
inc
add
mov
in
cmp
jl
inc
jle
int
aaa
sbb
add
add
int
sub
sub
adc
and
cwtl
inc
jnp
inc
out
rcr
fisubs
pop
jne
push
mov
or
sub
pop
push
and
lret
push
inc
or
and
jae
push
loop
testl
push
lods
loop
mov
outsl
jl
in
rcll
sbb
add
adcb
seto
sbb
dec
sbb
js
sbb
addb
imul
jl
push
sbb
xor
clc
aaa
jle
test
sbb
xlat
ss
xor
add
inc
sub
mov
push
or
insb
mov
inc
push
sbb
aad
imul
xchg
stos
cmpsl
insl
push
les
fldt
mov
ljmp
jmp
rorl
dec
daa
inc
bound
xchg
or
sub
pop
mull
and
xor
sbb
add
push
mov
add
add
inc
repnz
inc
hlt
and
insb
pop
in
mov
inc
movsb
sub
test
jnp
in
shlb
add
pusha
adc
and
in
jecxz
or
fbstp
iret
push
inc
shll
xchg
add
xchg
xchg
and
sbb
loopne
or
mov
xor
jle
ret
adc
pop
inc
mov
add
add
and
movsb
sahf
xor
add
cmp
sub
jns
sub
lods
sbb
dec
or
pusha
adc
outsb
mov
mov
push
aaa
sbb
jno
cli
in
nop
push
popa
xor
pop
lahf
dec
icebp
pop
adc
jbe
push
add
mov
fstps
mov
testl
sub
call
fcompl
push
gs
xor
cmpl
inc
jo
shlb
pop
mov
rcrb
repnz
outsb
outsl
out
push
cmp
test
das
adc
in
push
shrb
xchg
jmp
mov
cmp
cmp
test
push
in
loopne
jp
xlat
push
pushf
pop
jp
imul
pusha
test
push
mov
cltd
add
and
rol
fiadds
fildl
push
int
test
in
sub
push
and
jb
mov
add
xor
xor
add
and
rcrl
or
push
mov
out
scas
lcall
xchg
das
xchg
mov
gs
movsb
orb
push
int
imul
push
adc
pop
adc
jne
and
mov
pushf
sub
notl
mov
mov
fisttpl
mov
xor
cwtl
rcrb
sbb
lds
xor
mov
jmp
xchg
cmp
sbb
mov
dec
lock
xor
push
add
fadd
or
push
or
inc
pop
mov
add
and
faddp
add
es
xchg
sub
push
and
ret
sbb
out
cmp
push
cmp
repnz
add
movsl
inc
scas
push
fsubrs
and
stos
fs
or
stos
sub
stos
xchg
pop
mov
pop
lcall
push
testb
adc
push
mov
movsb
mov
add
popa
inc
and
cmp
sub
cltd
lea
fimull
jmp
sub
bound
fistl
xchg
or
fstpt
push
mov
sbb
sub
push
push
lods
data16
jne
or
ja
mov
jp
dec
push
cmpsb
sbb
pushf
or
pop
xor
xor
in
cmp
mov
adc
divb
popl
adc
xor
or
push
js
repnz
or
pop
cmp
mov
das
adcl
adc
fwait
jmp
cs
or
mov
es
test
add
push
std
imul
mov
shlb
cmp
je
add
add
mov
int
int3
sbb
or
pop
mov
inc
mov
mov
jno
inc
sti
pop
orl
stos
mov
push
sub
pusha
mov
in
movsb
ret
mov
and
ljmp
push
and
xchg
or
inc
xor
xchg
cmp
outsl
pop
mov
ret
rcll
push
mov
addb
xorb
mov
aas
outsl
or
test
dec
cmp
xor
lds
push
fstpt
mov
xor
fs
or
jo
add
mov
push
testb
dec
mov
inc
sbb
sbb
pop
or
pop
ss
movsl
or
mov
mov
push
in
sbb
nop
mov
mov
stos
xor
loop
outsb
mov
adc
add
jno
out
sbb
mov
and
pop
add
ss
inc
xor
in
shll
or
mov
mov
fmuls
sub
sub
adc
push
or
adc
add
cli
nop
scas
fldlg2
adc
jge
cmpsb
inc
clc
and
push
pop
fmull
jmp
dec
jmp
jo
insl
enter
lock
js
mov
dec
push
add
push
dec
pusha
inc
nop
cmc
mov
dec
shll
xor
scas
orb
icebp
imulb
jmp
adc
and
and
sbb
push
xchg
add
adc
lock
jne
pop
mov
in
sbb
add
fs
xchg
js
mov
add
mov
outsl
imul
cmp
cmpsb
push
and
mov
mov
push
push
push
sub
sbbb
and
xor
add
inc
cmp
ror
dec
push
xchg
pushf
enter
xor
jp
mov
mov
push
push
aad
in
insl
or
sub
loop
leave
clc
inc
mov
add
stos
add
pop
pop
sub
loopne
add
cmp
mov
aad
cld
sub
fidivs
jg
int
lds
and
out
sti
lret
loopne
int3
daa
sti
lcall
jmp
in
jmp
out
mov
lds
mov
dec
pusha
and
push
adc
notb
pop
not
rcl
cmpsl
push
and
or
jo
inc
pop
add
cmp
xchg
sbb
cmp
xchg
test
test
sbb
push
mov
loope
or
jbe
adc
loopne
jp
lds
int3
into
push
in
sub
test
mov
mov
stos
fisttps
pop
dec
mov
inc
xchg
or
or
xchg
xchg
and
xor
add
popf
clc
stc
addl
ret
jnp
sbb
mov
data16
lea
insb
and
clc
mov
das
cld
fisttps
pop
cld
add
push
mov
add
js
sub
adcl
gs
pop
inc
daa
daa
and
lock
out
in
nop
das
lea
jae
das
inc
xchg
mov
stos
inc
jo
flds
fistl
imul
arpl
or
mov
int3
loope
mov
fidivrl
icebp
in
or
or
mov
pop
ret
pop
mov
pop
rorb
jl
push
dec
popa
das
inc
lods
iret
test
push
sbb
jae
add
pop
sbb
fisttpl
adc
or
or
and
adc
sbb
push
popa
push
jo
or
adc
or
push
push
pop
xor
and
iret
pop
push
scas
inc
into
sub
sub
push
stos
or
sbb
xchg
outsl
lret
ja
adc
stos
popa
push
cmp
push
sub
out
aaa
fcomps
jle
mov
add
das
xchg
add
mulb
inc
push
inc
xor
pop
lcall
pop
xor
shll
adc
jl
mov
negl
push
je
fmul
and
dec
outsl
push
jne
push
push
xor
nop
subps
shlb
fwait
mov
rorl
and
adc
in
bound
lods
mov
xchg
insb
add
xchg
add
cmp
imul
or
or
jmp
add
jb
je
in
inc
mov
addb
pop
lcall
inc
rorb
repz
sbb
jae
push
add
ja
pop
jbe
sub
or
mov
inc
push
wrmsr
or
inc
xor
outsb
lods
add
pop
gs
mov
faddl
pop
data16
addr16
mov
add
enter
add
ret
or
xchg
jge
push
aam
das
popf
adc
cs
and
push
insb
add
pop
lcall
jbe
test
add
jo
je
mov
sbb
adc
jno
xchg
and
sbb
mov
and
inc
cmp
inc
sarb
jae
jae
pop
mov
fimull
iret
push
inc
push
xchg
out
je
jl
add
rorb
jae
jne
dec
mov
fistpl
inc
mov
dec
add
mov
jno
dec
orb
orl
popa
lahf
sub
mov
dec
repz
mov
stos
dec
add
out
dec
data16
jo
cmp
out
add
nop
xor
xor
pop
ficoml
pop
das
dec
outsb
lods
cs
inc
or
ret
dec
js
pop
fs
lcall
aaa
add
arpl
insb
jne
sub
rol
js
pushf
in
out
adc
and
add
jns
lcall
mov
sub
rcrb
dec
sub
mov
or
roll
sub
dec
and
notl
mov
dec
and
sub
and
fsubs
mov
add
mov
adc
and
pusha
scas
or
or
hlt
les
mov
cmpl
test
xchg
xor
flds
inc
ljmp
call
mov
add
sarl
add
insl
sub
inc
ss
add
dec
and
or
push
add
mov
or
insb
inc
and
mov
inc
aad
std
orb
mov
int
sub
adc
mov
adc
dec
push
mov
push
mov
dec
aad
and
ret
cmp
xchg
je
and
adc
push
nop
dec
or
data16
filds
scas
jo
jle
mov
pop
lods
mov
add
xor
cmpsl
dec
rcrb
xchg
adc
or
jle
adc
or
cmpb
mov
sub
lds
xor
mov
mov
sbb
pop
pop
fs
and
mov
dec
adc
pop
call
jo
dec
or
push
inc
push
push
mov
push
nop
adcb
pushf
mov
call
pop
bound
rcrl
sbb
cmp
arpl
je
pushl
xor
inc
sub
in
pop
pushf
testl
sbb
adc
sub
dec
cmp
into
mov
test
cmpl
cmp
add
and
add
inc
mov
hlt
sub
xchg
adc
pop
jge
or
ss
rorb
movsb
clc
cmp
add
sub
in
cmp
add
add
fs
push
test
adcl
sub
pop
xor
sbb
mov
pop
jmp
cmp
mov
lret
adc
and
adc
icebp
pop
aad
jb
xlat
mov
push
mov
mov
call
mov
in
repnz
xchg
enter
dec
cmc
sbb
in
or
clc
icebp
adc
addr16
in
cmp
pop
icebp
push
icebp
bound
pop
xor
fisttps
push
dec
movb
or
dec
add
fcoms
lcall
jb
or
ret
out
inc
mov
or
jbe
inc
pop
sbb
fidivs
sbb
orb
addb
adc
out
cwtl
pop
cmp
lock
aaa
inc
aaa
dec
add
pop
add
sbb
xor
push
pop
pop
mov
add
inc
into
jl
cmp
fstpt
adc
jl
adc
add
mov
shr
push
sbb
add
mov
add
pop
add
pop
jl
imul
xor
add
mov
push
dec
push
aad
sbb
mov
stc
adc
jae
xlat
inc
xor
cmp
and
dec
jae
xchg
mov
add
enter
inc
ds
xorb
pop
mov
icebp
lods
mov
pop
fmull
hlt
int3
mov
add
lods
adc
fsubs
mov
inc
movsb
stos
ror
push
mov
jmp
add
cltd
and
xchg
fcmovnu
mov
or
sbb
jae
stos
pop
aam
popa
sbb
mov
fimull
push
mov
je
rorb
pushf
nop
mov
pop
xor
out
cltd
sbb
lea
adc
lea
adc
mov
inc
pusha
cli
sbb
sar
mov
sub
mov
mov
inc
arpl
pusha
aas
fldenv
xchg
sbb
mov
or
sbb
outsl
jmp
mov
loopne
dec
sar
cld
push
jg
jmp
jecxz
pop
inc
lea
fs
mov
loop
jae
jl
int3
leave
push
xor
cltd
inc
or
sub
xchg
lods
insl
stos
out
in
sbb
gs
pop
inc
adc
insl
mov
xor
pop
jg
xor
and
xor
sbb
mov
add
push
add
pop
fwait
dec
jbe
pushf
pop
add
add
das
adc
in
pusha
pop
out
test
mov
cs
and
hlt
pushf
mov
loopne
jne
mov
mov
push
inc
bound
adc
rcl
pushf
std
cmp
and
xor
aas
sbb
pop
xor
nop
lods
sub
xor
in
push
mov
out
pop
gs
add
lahf
inc
test
inc
or
xchg
repnz
sub
adc
icebp
cmp
adc
inc
sbb
dec
inc
cli
jle
dec
mov
cmp
fldcw
cmp
jb
sbb
inc
xchg
add
sub
xor
outsb
or
andl
inc
and
pop
enter
sub
dec
pop
outsl
jbe
inc
lods
sbb
mov
or
dec
or
sarb
in
pop
jne
sti
dec
sub
aas
adc
or
add
test
mov
sub
std
sub
mov
sub
mov
cli
enter
shl
jns
out
sub
xchg
movsl
xor
jge
cmp
mov
icebp
mov
add
repz
adc
pop
test
ljmp
cwtl
lcall
xor
pop
add
cld
sbb
xchg
cmpl
jne
lds
or
cmp
adc
insb
pop
mov
lea
bound
insl
mov
xlat
cli
xor
mov
les
cwtl
add
dec
daa
fisttpl
jg
or
stc
mov
fisttps
xchg
cwtl
or
push
sub
fwait
jl
push
add
mov
into
and
jne
insb
mov
imul
pop
jo
sbb
ja
mov
mov
sub
into
out
std
adc
sbb
mov
cli
ljmp
inc
inc
mov
mov
adc
push
sarb
xor
int3
hlt
add
pop
hlt
aam
in
inc
add
or
into
ret
add
adcb
or
and
sbb
push
lcall
inc
arpl
sbb
fucomip
lea
push
insb
outsb
mov
add
inc
nop
push
or
mov
pop
mov
hlt
jg
ss
ljmp
add
test
sbb
jl
sbb
movsl
mov
sub
pop
mov
mov
pop
loop
add
je
or
es
fmuls
mov
sbb
jle
ss
dec
in
push
dec
mov
add
rorl
adcl
add
cmp
sbb
fmull
xbegin
cmp
mov
int
or
add
je
add
lock
add
jbe
pop
jg
movl
mov
pop
insl
dec
loopew
das
mov
pop
pop
call
fcmovnb
cmp
sub
pop
xchg
add
lods
pop
pop
dec
push
sub
dec
sub
or
cmc
sti
mov
inc
sbb
push
mov
inc
jne
pop
movsb
mov
xchg
add
cmc
pop
add
bound
adcb
out
decb
push
inc
xorl
js
push
push
lret
cmp
push
inc
inc
ljmp
mov
sub
sub
incl
lahf
mov
hlt
mov
or
lock
lret
push
cltd
or
dec
jne
fnstcw
xchg
xor
and
sbbb
sbb
xor
inc
mov
jmp
pop
mov
inc
lahf
scas
add
movsl
mov
dec
lret
sbb
add
mov
xchg
mov
call
int3
mov
pop
roll
sbb
inc
test
stos
jnp
cmpl
call
ja
andb
mov
ret
movsb
dec
push
out
lcall
and
mov
and
loopne
xchg
cmp
push
mov
test
sbb
push
mov
add
jnp
mov
mov
nop
cmp
lods
iret
lcall
xor
test
lock
repz
adc
ljmp
cmp
sbbb
add
push
ret
mov
sbb
xor
stos
scas
nop
ss
jle
shlb
mov
mov
rorl
vpsubb
add
pop
pop
lret
in
sbb
or
mov
stc
insl
fisubrl
je
adc
cmp
or
decb
jg
adc
or
movsb
movsl
imul
sub
jmp
insl
adc
push
sar
test
dec
fs
fistpll
les
and
in
nop
leave
jle
int
hlt
pop
sbb
fcoml
jb
icebp
adc
in
insb
pop
mov
jg
lods
in
das
aaa
xlat
lods
xchg
pop
sbb
dec
lahf
add
insl
mov
out
add
add
xchg
pop
xchg
stc
test
in
les
mov
cmp
mov
and
stos
sbbl
pusha
enter
test
in
test
mov
rorl
pop
inc
les
or
cld
or
sbb
mov
cmp
xor
cmp
sbb
jo
aaa
inc
xchg
inc
xor
adc
test
or
adc
pop
mov
jne
js
ret
stos
out
mov
xchg
imulb
mov
stc
rcll
test
loop
mov
fs
dec
jo
xchg
xchg
clc
or
daa
in
insb
cmpxchg
jae
xchg
negb
cmp
xchg
sahf
shr
js
sbb
jb
add
mov
sub
pop
sbb
fs
sbb
insb
pop
bound
and
add
inc
mov
lock
aam
js
mov
push
add
add
pusha
popf
aad
lret
sbb
call
mov
jl
push
inc
cmp
jle
movsb
add
in
movsl
pop
pop
lret
mov
or
fs
rcr
jae
ljmp
xor
mov
shlb
cmp
dec
and
jnp
jmp
pop
aas
jne
testb
lock
push
subb
add
mov
out
push
pusha
push
jle
daa
push
or
subl
push
and
popf
and
dec
enter
jno
and
xor
push
iret
pop
sub
cs
stos
std
adc
cs
adc
gs
xor
sub
xchg
cmp
pop
adc
mov
xchg
mov
loope
scas
lock
lea
push
jmp
sub
hlt
mov
ss
mov
and
in
dec
cld
rolb
sub
fs
or
xor
aas
inc
cmp
lret
outsl
push
dec
push
push
or
add
test
or
insb
ds
xchg
testb
int
flds
jg
ret
xchg
jle
shlb
cmp
cmp
sub
inc
ss
or
adc
push
lret
push
push
bound
mov
sub
mov
adc
inc
mov
or
cmpsl
push
call
mov
sub
dec
xlat
adc
adc
imul
test
dec
addr16
sub
push
push
sub
or
jae
add
outsl
outsl
pop
outsb
jns
dec
push
xchg
mov
xor
xlat
push
mov
add
xor
mov
sub
adc
xchg
enter
jp
out
or
add
push
repnz
inc
jge
xchg
cmp
ljmp
cmp
push
add
push
lock
aaa
inc
sbb
ss
std
scas
add
sub
pop
shl
cmpsb
add
cmovnp
outsl
incl
dec
xchg
jl
push
adc
fcompl
or
inc
adc
mov
push
insb
add
stos
mov
fcomps
jne
push
and
pop
mov
adc
fwait
xor
mov
sbb
fs
jmp
push
add
fs
test
mov
repz
xor
xor
nop
scas
push
inc
adc
mov
sbb
mov
mov
xor
and
movsb
addl
rolb
inc
and
scas
or
sub
hlt
xor
or
pop
xor
enter
mov
loop
cmp
in
pop
movsb
push
lods
adc
and
pop
mov
jle
mov
aad
inc
testb
or
push
push
in
or
pop
or
mov
dec
push
and
mov
js
dec
or
andb
into
cmpl
mov
out
dec
mov
cmp
loopne
mov
and
test
inc
mov
pop
add
test
outsb
inc
sahf
jge
orb
out
or
out
lret
ss
je
imul
or
fistl
repnz
mov
jne
ljmp
movl
iret
cmp
rcrl
inc
and
add
mov
mov
rolb
lods
jmp
push
xchg
push
xchg
xor
stos
push
cld
dec
loop
add
cmp
mov
es
clc
inc
mov
mov
mov
ret
cmp
imul
scas
loopne
add
add
popf
adc
adc
repnz
adc
add
push
cmc
testl
dec
push
or
cld
push
nop
cmp
xor
fiaddl
dec
dec
and
ja
loop
add
insb
arpl
add
shufps
dec
ds
mull
jbe
sti
jne
pop
add
movsb
xorl
push
push
movsb
movsl
test
or
jb
sbbl
add
outsl
lds
xor
lcall
and
leave
ss
push
movzwl
xor
xchg
addr16
lea
insl
dec
inc
pop
repnz
jmp
adc
jl
add
add
or
repnz
js
rorl
loope
inc
sbbl
xchg
je
adc
popa
xor
imul
xchg
add
add
or
lcall
iret
cmp
adc
roll
mov
add
add
push
into
or
ss
lock
xchg
sub
or
cmpl
loop
test
adc
clc
xbegin
and
add
and
pop
push
push
adc
pop
fmuls
push
mov
cli
add
and
andb
jnp
add
stos
jb
and
mov
pop
insb
ljmp
ret
pop
adc
pop
stos
cmp
ja
dec
push
xlat
add
adc
mov
in
cmp
jae
sub
je
add
js
test
pop
shlb
dec
cs
and
jbe
pop
mov
dec
jmp
mov
dec
push
add
jmp
mov
je
mov
mov
and
jne
test
mov
ficomps
mov
je
and
jle
push
aaa
sbb
ret
push
lods
aad
sbb
or
roll
jbe
push
stos
dec
addr16
push
cli
les
rcrb
in
jge
test
and
loopne
aam
sbb
jo
mov
and
sbb
jae
sub
pop
insb
mov
imul
add
push
inc
jne
dec
sbbb
push
pop
push
or
add
xlat
popa
xchg
call
adc
mov
test
iret
xchg
add
sub
xor
add
or
stos
cmp
mov
repnz
sarb
add
das
inc
adc
add
subb
jl
cmp
sub
loopne
push
popa
or
or
pop
or
mov
cmp
loopne
call
bound
mov
dec
or
and
mov
ss
imul
in
cmp
imul
outsl
arpl
out
cmp
shl
test
push
push
pop
push
mov
mov
add
or
push
adc
adc
lods
rorl
add
pop
sbb
xchg
ljmp
call
inc
or
movl
add
cmp
fdivrl
pusha
in
inc
inc
sub
leave
iret
adc
inc
adc
inc
sbb
mov
xor
nop
add
mov
xchg
mov
pop
push
adcl
js
stos
stos
insl
jg
loopne
repnz
clc
inc
cmp
or
sub
and
addb
push
into
iret
mov
sahf
bound
ss
sbb
lods
xchg
out
fmuls
add
ja
dec
dec
rolb
icebp
lods
adc
out
mov
jbe
jmp
pop
ds
enter
xchg
and
xor
fdivrs
jmp
bound
or
popf
xchg
mov
push
jnp
gs
dec
xor
cmp
popa
nop
shrl
adc
test
cmpsl
xchg
mov
fsubl
lds
notl
fiadds
out
addl
or
mov
rcrb
mov
mull
add
and
and
sbb
prefetch
add
test
mov
shufps
popf
nop
adc
cmc
pop
xor
loopew
movsb
test
cld
cmp
push
inc
lods
push
inc
cmp
sbb
sbb
leave
gs
fnstenv
popf
sti
add
cmp
mov
jle
jno
aas
add
stos
ds
push
mov
das
xlat
mov
inc
and
cs
out
sub
test
int
mov
test
mov
test
fisubrs
or
insb
popl
aam
aaa
xorb
push
test
pop
sub
inc
sbbb
mov
cmpsl
mov
ret
outsl
xchg
fadds
outsl
xchg
mov
test
mov
or
fwait
cmp
mov
subb
pop
arpl
inc
pop
push
mov
xchg
ret
dec
push
jns
and
xor
sbb
mov
pop
popa
push
adc
or
dec
les
mov
movsb
das
xchg
add
add
movb
int
sub
or
mov
add
push
sti
repnz
inc
adc
inc
fiaddl
add
insl
fnstcw
icebp
push
add
push
add
or
adc
test
xchg
or
mov
cmp
or
xchg
aaa
ror
adc
add
jae
andl
ds
insb
mov
push
daa
daa
arpl
jno
je
cmp
jne
js
pop
adc
out
fs
push
lea
or
add
fadds
pop
in
inc
mov
push
hlt
add
adc
or
into
dec
mov
cltd
push
test
mov
mov
adcl
add
push
jo
inc
nop
add
aam
lds
dec
out
adc
fwait
into
repz
add
mull
add
sbb
sub
rorl
cmp
adc
movl
push
js
xchg
out
out
pop
and
js
jae
out
add
or
mov
ja
das
je
and
dec
push
fcoms
jg
js
add
add
adc
test
mov
jb
sbb
xchg
dec
outsb
adc
adc
add
iret
xchg
fs
and
jbe
mov
je
push
rcll
daa
jb
mov
push
sbb
adc
xorb
mov
mov
aas
jae
cmp
mov
mov
push
jo
sbb
and
adcb
sub
clc
push
aam
scas
imul
add
popa
push
das
addr16
andl
xchg
push
icebp
add
push
or
mov
notb
add
call
dec
pop
dec
in
or
push
or
adc
outsb
inc
xor
popf
or
push
sbb
jmp
or
cmp
xor
dec
incb
call
sti
inc
cmp
pop
jl
inc
jne
push
inc
sub
and
imul
mov
and
or
dec
push
das
imul
in
xor
adc
fwait
and
inc
scas
out
jge
add
popw
xor
mov
push
or
insb
nop
ds
nop
sbb
lock
mov
dec
cmpb
adc
subl
inc
repnz
or
imulb
lret
mov
mov
mov
in
arpl
push
cmpsb
test
sub
data16
cld
ljmp
add
js
add
mov
add
jne
xor
xor
fwait
cli
hlt
hlt
sub
cmp
jne
push
inc
nop
enter
and
mov
out
outsl
jb
dec
inc
popf
cmp
stos
sbb
xchg
mov
inc
cmp
add
add
mov
jae
jmp
das
je
dec
or
xorb
sub
loop
inc
push
adc
add
pop
sub
or
adc
mov
mov
or
jns
and
imul
push
repz
hlt
dec
subb
insb
push
pushf
cwtl
lds
xchg
push
loop
dec
shlb
loopne
add
jle
dec
jle
int
inc
clc
add
in
call
sarb
pusha
insl
stos
jno
or
inc
int
adc
sbb
addb
pop
mov
in
jmp
fwait
jne
lea
cmp
xchg
in
in
hlt
push
and
lock
int3
pop
add
lods
rcll
pop
test
pop
and
cmp
lock
push
inc
jle
xor
lock
jb
or
insl
imul
mov
dec
mov
negb
sarb
add
lret
mov
pop
or
icebp
xchg
sbb
mov
jle
loop
inc
jnp
jns
movsl
clc
dec
xor
arpl
shlb
mov
paddsb
cmpb
ss
mov
or
pushf
rcrl
aam
inc
cwtl
sbbb
and
cwtl
sbb
ja
mov
pusha
pop
dec
adc
mov
arpl
and
xorl
or
adc
mov
mov
pop
pop
int3
scas
push
stos
shll
mov
les
or
test
mov
jne
push
cmp
sti
mov
sbb
sub
add
or
and
test
add
iret
jecxz
test
std
mov
dec
fcoml
bnd
push
lods
cli
add
dec
push
in
enter
cmp
and
xor
ds
dec
push
jecxz
xchg
fnstcw
xchg
mov
inc
cwtl
xchg
pop
or
rorb
push
xchg
cli
cmpsb
cmpsl
or
mov
push
imulb
test
xor
sbb
ret
inc
cmp
add
and
in
pop
sbb
xchg
in
rorl
js
mov
jp
push
xchg
mov
or
pop
dec
pop
jmp
imul
push
sub
addr16
cs
xor
nop
sub
adc
add
add
pusha
lahf
cmp
push
test
movsb
and
adc
xchg
add
adc
or
and
push
adc
mov
fsubl
fwait
cmp
add
inc
dec
inc
mov
sti
js
push
aad
je
pop
adc
ja
add
insb
sub
mov
js
rolb
sub
mov
add
pop
push
push
add
xchg
mov
jne
and
andl
gs
lea
shrb
add
or
xor
xchg
adc
dec
sbb
push
js
lea
mov
mov
cmpl
loop
add
nop
push
lea
lods
xchg
cltd
mov
inc
movsb
and
pushf
gs
mov
pop
adcb
add
test
or
imul
add
gs
shlb
and
js
sub
mov
or
inc
fucomi
es
push
xor
fmull
jp
mov
xor
js
dec
int
stc
dec
mov
sbb
ret
push
out
push
cmpsb
jmp
subl
test
movsl
add
mov
mov
add
add
or
adc
xor
mov
mov
lret
sarb
pushf
jle
or
popa
mov
dec
inc
mov
sbb
inc
mov
mov
fdivr
dec
js
addl
sub
popa
loopne
js
cs
bound
push
inc
pop
dec
fsubs
rorb
pop
mov
push
mov
gs
sub
mov
sbb
aam
jns
dec
lcall
push
mov
sbb
test
sub
xchg
dec
icebp
mov
in
hlt
sub
enter
push
test
ret
js
pop
and
sub
mov
dec
out
inc
sbb
fcomip
xor
lods
jle
adc
add
xchg
or
pushf
xchg
mov
push
lods
fstpl
cmp
push
nop
xchg
mov
dec
std
jo
pop
in
pushl
or
push
sub
js
pop
sbb
js
xor
add
or
pop
addr16
addr16
push
xor
and
sbb
popa
sbb
sbb
mov
and
addb
xchg
or
and
adc
xchg
sbb
fadd
inc
mov
push
adc
and
fwait
rcll
sbb
orl
aaa
and
and
cmp
sub
sbb
sub
xchg
add
adc
mov
fadds
aam
inc
jge
mov
adcl
dec
jns
icebp
adc
add
push
mov
and
adc
or
dec
jmp
mov
mov
cmp
arpl
nop
lods
roll
sbb
cwtl
inc
xchg
pop
cs
adc
je
sub
sbb
adc
test
rcll
insl
xor
lds
test
nop/reserved
test
push
enter
or
inc
pop
mov
ficoms
jae
pop
enter
dec
cmpsb
dec
cmpb
outsl
das
inc
jg
mov
cmp
xor
xlat
lods
lock
lea
cmpsl
push
aam
jnp
push
push
je
dec
push
xor
int3
add
es
cmp
mov
inc
ss
xchg
addr16
shll
xor
and
inc
fbstp
push
pop
loop
or
push
sbb
inc
addb
sbb
push
into
jbe
cmp
pop
hlt
stos
jo
add
pop
clc
adc
rorl
push
mov
mov
ds
cmp
or
out
mov
jae
inc
in
add
add
aas
cmp
lret
add
or
and
lods
cmp
push
lods
push
push
add
test
sub
daa
sub
sub
mov
xchg
adc
xor
pop
inc
dec
pop
sbb
daa
lret
insl
repz
adc
scas
gs
fwait
pop
ja
xchg
xor
divb
lret
jnp,pt
cs
in
sbb
cs
inc
jge
insb
mov
ret
movl
aad
hlt
jbe
mov
xchg
arpl
push
or
cmp
pop
scas
fs
insl
dec
mov
pop
dec
dec
faddl
or
mov
test
out
mov
jle
daa
push
mov
mov
ret
xchg
andl
popf
cli
adc
push
inc
sub
in
jne
xor
or
xchg
jecxz
xorl
and
cli
fmuls
lods
leave
int3
cmovo
mov
imul
enter
cs
mov
adc
xor
ficompl
add
dec
scas
inc
mov
mov
bound
inc
rolb
sbb
mov
mov
in
pushf
cwtl
jno
out
or
jl
in
fs
ja
nop
cmc
loop
jne
data16
loope
and
jmp
daa
xchg
fs
or
or
iret
pop
pop
or
aad
pop
clc
pop
push
cmp
cmp
adc
xlat
xor
or
and
lcall
lret
es
into
sub
jmp
test
movsb
shlb
xor
je
fmuls
cmp
cld
pop
jmp
popa
xchg
test
mov
lea
mov
dec
inc
sbb
cmp
lds
mov
mov
repz
sbb
push
sub
enter
ljmp
inc
jbe
sbb
cmp
and
pop
pop
jns
add
sarb
test
stos
addl
in
pop
mov
sbb
stos
mov
push
lods
xchg
and
arpl
push
sub
inc
bound
fisubl
xchg
insb
lcall
cld
shll
dec
inc
js
jno
pop
inc
push
xchg
fsubs
adcl
and
pop
inc
mov
test
or
enter
into
push
rcr
inc
xchg
sbb
pop
add
sub
xchg
rolb
push
test
mov
xchg
sbb
push
add
sbb
lock
mov
sbb
cltd
dec
mov
jo
sbbl
push
jb
and
or
and
or
data16
mov
inc
push
add
jge
mov
xlat
sbb
test
int
test
jl
ret
add
mov
inc
cmp
jbe
sub
jb
dec
ficoms
and
push
dec
andb
jno
add
pop
pop
sub
pop
add
push
dec
sahf
pop
sbb
push
xchg
dec
adc
test
hlt
hlt
mov
ja
sub
repnz
add
pop
test
aam
push
stc
nop
outsl
push
jmp
lea
movsb
dec
sub
hlt
in
addr16
dec
mov
in
push
xchg
mov
xchg
adc
inc
cmp
daa
and
xchg
cld
aaa
pop
or
inc
dec
and
add
loop
adc
pop
mov
and
or
or
dec
sub
xor
sbb
cli
adc
dec
xchg
mov
sbb
clc
mov
sbb
mov
aas
dec
pop
mov
imulb
enter
mov
and
pop
xor
inc
push
int3
or
mov
daa
inc
ds
jmp
inc
lds
sub
push
push
pusha
movsb
mov
orb
fmull
sbb
js
xor
sub
dec
pop
xchg
inc
cmp
fs
pop
mov
push
mov
lock
outsl
inc
shrb
inc
scas
adc
sub
cmpsl
push
sub
mov
add
subb
xchg
sysenter
jno
push
icebp
fsubs
and
mov
sub
xchg
pop
adc
fsubl
jl
xor
or
movsb
or
loope
lods
mov
mov
sub
lods
mov
imul
lock
inc
push
loopne
push
xor
inc
inc
ljmp
es
push
jbe
pop
stos
adc
push
or
sbb
push
lea
setae
andb
jg
sub
xchg
pushf
xor
cld
adc
mov
add
cli
xchg
in
adc
adcl
addb
push
and
inc
cmpb
addb
add
add
add
lock
inc
xor
inc
adc
inc
cmp
sbb
in
int3
pop
adc
clc
pusha
pop
rcrl
aas
fs
pop
scas
mov
out
mov
movzbl
mov
pop
psubb
sub
push
repnz
xorb
mov
add
add
cmp
sbb
or
out
pop
mov
add
adc
scas
mov
subb
jmp
inc
add
add
adc
add
out
inc
add
outsl
xor
inc
sbb
push
movsb
and
jo
pusha
inc
xor
sarb
sbb
sbb
mov
mov
sti
inc
nop
jg
cmp
insb
sub
jge
in
adc
and
outsl
pop
rclb
fdivl
or
add
fadds
rcll
sub
xchg
loopne
out
pusha
lcall
cmp
pop
pop
or
icebp
nop
mov
xchg
andl
lods
xor
mov
shr
sbb
adc
lea
push
and
add
cwtl
or
int3
aad
adc
add
es
push
or
cmp
adc
and
pop
pop
jne
or
rcll
pop
adc
andb
loopne
pop
repnz
add
mov
dec
repnz
sub
in
adc
mov
stc
and
in
adc
bound
mov
or
filds
enter
xchg
inc
dec
outsl
jne
pop
and
push
push
fildl
adc
loope
call
aad
into
inc
mov
fs
sahf
add
jbe
ds
mov
and
xchg
sbb
pushf
adc
sub
dec
ret
outsb
cmp
dec
icebp
xor
subb
pop
sbb
fstl
fadds
dec
dec
xchg
cld
push
lds
fmull
push
mov
and
mov
shrl
gs
insb
shr
into
nop
xchg
mov
fldl
inc
cltd
xor
jge
or
popf
jge
sbbl
shl
push
cld
lahf
insb
jmp
xchg
insb
sbb
pop
cmp
and
in
scas
and
jp
pop
push
sbb
movsb
mov
inc
push
lret
jnp
jmp
das
push
cmp
adc
nop
or
xor
dec
sub
xchg
mov
popa
inc
mov
lock
dec
testb
outsw
inc
pop
and
xchg
or
adc
add
jns
pop
jmp
outsb
rcll
xor
adc
inc
test
insb
dec
cmp
sbb
cwtl
mov
push
sbb
sbb
add
sbb
or
gs
pop
or
cmp
and
faddl
repnz
loop
in
jns
rolb
fs
addb
fldl
xchg
inc
inc
inc
xor
aam
adc
rorl
cmc
sbb
xchg
test
dec
xchg
jb
cmp
sbb
mov
fildll
ja
inc
jne
pop
pop
xchg
pop
adc
push
sti
add
mov
in
pop
sub
adc
dec
and
cmp
and
pop
xchg
and
sub
push
adc
out
cmpl
mov
push
xchg
inc
adc
add
and
fcompl
inc
adc
std
sbb
shlb
insb
mov
fsubs
sbb
xor
mov
jp
adc
or
mov
js
enter
lcall
ljmp
je
mov
mov
js
pop
or
jmp
cmpl
or
repz
add
cld
add
cmp
or
adc
xchg
fwait
jns
push
adc
pop
add
scas
ds
adc
xor
sub
inc
cmp
notb
inc
sub
sbb
inc
popa
adc
mov
pop
push
and
adc
insb
fwait
pop
cmpl
sub
repnz
jecxz
lods
dec
into
sbb
adc
test
push
inc
dec
sub
pop
sbb
jl
arpl
xchg
jg
loope
pusha
lea
add
adc
clc
mov
or
ja
jnp
add
and
cs
inc
adcb
cmp
movb
and
xchg
pop
dec
add
push
sub
cmp
rorl
inc
inc
shl
loopne
xor
aas
in
lods
subb
jg
push
jno
add
inc
bnd
shlb
jle
xchg
push
or
jbe
cltd
rcrb
int
or
mov
std
aas
xor
mov
jmp
add
xor
and
sbb
mov
xor
out
push
sub
in
cmp
call
xor
sbb
fildll
cmp
mov
fadds
mov
mov
mov
jp
mov
sub
mov
pop
ja
or
xchg
je
lea
roll
or
aad
pushf
cmc
dec
imul
sub
pop
inc
push
jno
mov
in
xor
dec
sahf
xchg
cwtl
mov
cwtl
das
mov
cltd
orl
inc
mov
jae
mov
jbe
stos
test
sub
mov
add
pop
adc
or
daa
push
inc
aam
push
je
adc
or
jne
test
or
ja
sbbb
jne
dec
popa
pop
jbe
xorb
pop
sub
gs
fs
adc
inc
int
push
inc
mov
add
or
jp
les
sub
sbb
ja
addb
add
sbb
ja
or
mov
scas
cmpb
rclb
push
je
adc
push
push
test
add
sbb
fistl
adc
adc
cmp
adc
sbb
jne
and
aaa
mov
out
xor
mov
jne
out
mov
cmp
fcoms
push
or
mov
arpl
adc
and
pusha
frstor
xchg
push
cmpb
inc
ds
add
inc
lock
inc
lods
in
mov
or
pop
cmp
enter
fmull
inc
js
das
xchg
pop
push
or
int
and
mov
push
adc
xor
adc
inc
xchg
pop
mov
xor
cmp
sbb
je
add
jnp
push
inc
mov
and
out
and
push
sub
cltd
arpl
add
push
push
add
jmp
adc
jle
push
test
movsb
and
sub
mov
or
xor
pop
inc
aad
adc
pop
pop
push
mov
push
sahf
insb
and
lcall
mov
arpl
lea
push
mov
inc
sbb
cmp
or
xlat
insl
mov
test
std
movb
lods
popf
pop
lcall
into
push
test
pop
push
mov
pusha
mov
fimull
outsl
call
xor
xor
and
inc
xor
add
enter
stos
pop
push
jge
sarb
cmpb
adc
leave
adc
ljmp
adc
shlb
adc
stc
add
add
in
or
adc
pop
ret
add
and
pop
push
in
les
pop
mov
mov
xor
test
sbb
and
jno
inc
mov
or
lcall
mov
jne
sbb
mov
fldl
dec
or
xchg
push
adcb
fcomp
inc
add
mov
inc
mov
mov
or
mov
ss
pop
and
ret
mov
inc
sub
ret
fildl
xor
movb
pop
adc
repnz
adc
or
inc
dec
pop
inc
arpl
or
popl
or
mov
inc
rolb
and
subl
add
aam
add
dec
sub
subl
ja
add
push
sub
inc
mov
mov
adc
sub
inc
sbb
mov
add
sarb
in
xchg
xor
fadds
cs
fcoml
mov
out
jl
xor
adc
xchg
dec
xor
xchg
adc
mov
add
inc
push
push
dec
das
mov
dec
mov
ss
cmp
imul
and
push
dec
add
mov
orl
in
cli
rorl
cli
adc
jle
jo
shrb
movsb
jmp
cmp
ret
or
cmc
stos
jno
cmp
pop
insl
sbb
xor
jmp
mov
pop
movb
cmp
pusha
add
pushl
add
movsb
xor
jle
xchg
mov
and
popf
cwtl
jmp
cmpl
mov
or
nop
jb
ret
rorb
jbe
fwait
dec
or
mov
lods
sbb
push
vphaddwq
data16
push
cs
dec
cs
aad
inc
dec
push
sbb
out
fs
xor
lods
stos
xor
push
add
sub
pop
inc
mov
pop
fisttpl
ds
sub
sbb
mov
and
pop
push
jmp
push
insl
pop
inc
add
inc
in
popf
and
test
or
sub
adc
add
cmp
inc
cmp
std
mov
rorb
stc
ljmp
cmp
cvtps2pd
fists
stc
cltd
jmp
xchg
js
aam
cmp
movsl
inc
add
lea
xchg
int
std
std
mov
adc
push
jle
loop
sarl
add
mov
sbb
inc
sub
in
adc
push
sbb
movsb
sub
jb
or
sbb
popa
and
or
or
jo
adc
xchg
inc
enter
adc
xor
orb
mov
add
cmp
stos
out
and
test
adc
push
pop
inc
or
or
pop
jo
inc
shlb
jnp
and
mov
adc
add
aad
inc
xlat
shll
pop
mov
in
pop
cmpsl
clc
clc
rclb
xor
pop
stos
xchg
push
or
movsl
test
clc
mov
add
jnp
clc
and
out
out
data16
or
lock
sahf
les
pop
push
or
mov
addb
sbb
rcll
sub
add
and
add
inc
stos
popa
adc
add
or
lds
add
call
adc
mov
cmpl
inc
sbb
add
jg
or
sbb
xchg
mov
cld
pop
clc
nop
push
in
jb
mov
lods
xor
push
int
inc
adc
or
mov
jne
push
sub
test
loope
loope
or
ret
and
repz
andb
pop
push
push
dec
push
push
adc
adc
push
push
sbb
cmp
add
xchg
sbb
jle
shl
roll
inc
mov
jge
cs
push
or
lock
sub
add
decl
xchg
inc
imul
push
xchg
loopne
xchg
jno
int3
mov
xchg
ljmp
enter
imul
inc
jmp
and
pop
sbb
xchg
addb
imul
push
add
xchg
fmull
in
je
pusha
loop
adc
stos
push
push
adc
pop
jp
stc
shlb
repnz
xor
mov
adc
mov
add
or
or
add
push
mov
nop
pop
nop
push
add
shlb
roll
push
add
testl
or
movl
mov
dec
inc
push
xchg
pop
adc
mov
in
xchg
xchg
xchg
xchg
inc
stos
cmp
xor
and
shll
addl
stos
mov
shlb
sbb
xor
stos
and
stos
inc
scas
ja
dec
hlt
push
insb
push
pop
lock
rolb
sbb
mov
pop
mov
test
inc
add
push
ret
push
add
xchg
push
push
fdivl
mov
inc
dec
stos
jnp
dec
dec
ret
push
adc
ret
daa
hlt
stos
rol
sub
out
sbb
fwait
xor
and
rcrb
mov
xchg
push
add
pop
data16
push
jb
lods
inc
addr16
les
int3
pop
jmp
xchg
daa
or
push
les
rcrb
inc
cmp
aam
or
inc
repnz
inc
adc
inc
and
sub
sbb
mov
outsl
adc
pop
push
adcb
add
add
and
mov
sbb
pop
sbb
add
push
add
push
add
inc
mov
test
mov
fcmove
cmpl
add
adc
cmp
adc
jmp
loop
dec
push
adc
dec
loop
mov
testl
dec
dec
mov
mov
xor
dec
dec
adc
js
mov
inc
inc
call
mov
mov
mov
mov
or
lret
rcl
mov
enter
add
outsl
ret
bndstx
jmp
ror
repz
pop
cwtl
lahf
je
fcmovnu
xchg
ret
andb
cs
cmp
shl
jecxz
gs
leave
and
int3
imull
xchg
arpl
repz
in
cmp
sub
mov
inc
adcl
push
arpl
jecxz
hlt
add
adc
enter
add
mov
xchg
dec
adc
in
or
loopne
adc
sub
fisttpl
lret
out
mov
inc
fidivrs
pop
rcll
inc
fistpl
sbb
ss
rolb
pop
sbb
mov
xor
test
adc
jl
getsec
inc
fmul
sbb
dec
rol
or
jbe
add
add
mov
fnstenv
push
fdivrl
aam
cmp
jo
mov
or
addr16
xor
add
scas
add
sub
sahf
int3
fs
icebp
dec
adc
data16
or
jb
xchg
loop
in
jbe
mov
cltd
fsubl
add
pop
sbbb
add
outsb
sbb
cld
ds
jle
mov
lret
pushl
notl
cmp
cli
sbb
mov
push
add
sub
popf
mov
sub
push
testb
push
xchg
sub
dec
pop
ficoms
inc
mov
cmp
jle
inc
inc
sub
sti
ud2
loop
mov
adc
mov
push
popa
or
jge
push
mov
inc
mov
adc
and
sub
mov
mulb
xchg
popa
les
adc
xor
insb
push
sub
fisubrs
inc
sub
add
mov
insl
lret
add
mov
push
cmp
leave
jmp
mov
sub
sub
or
and
sub
add
add
fcoms
rclb
fsub
out
inc
inc
cli
pop
push
mov
lds
mov
repz
dec
dec
shll
dec
cmc
ficoms
pop
sarb
enter
movsb
cmpsl
inc
cwtl
fcomp
shlb
and
inc
mov
jmp
inc
in
and
adc
mov
dec
out
mov
and
mov
inc
or
mov
lds
in
sub
adc
hlt
les
cmp
sti
dec
xor
add
jl
les
testb
ror
orb
xor
lahf
inc
push
push
mov
rcrl
inc
mov
mov
push
adc
sbb
out
mov
or
sub
sub
call
jmp
in
jne
add
cmp
mov
lock
in
in
test
pop
push
xor
sbb
aas
cmp
add
sub
mov
and
jp
dec
jge
xchg
nop
adc
lea
rcrb
xor
sti
xchg
pusha
scas
pop
ljmp
and
sahf
mov
mov
filds
enter
xor
nop
sbb
out
push
div
push
mov
out
test
inc
repz
repnz
inc
adc
push
inc
xor
inc
jp
dec
lea
adc
loopne
stos
clc
insl
or
fadds
cmc
frstor
or
add
jo
mov
loopne
and
sub
mov
popf
mov
pop
jb
jmp
mov
cmp
je
fcmovbe
push
and
push
and
ret
inc
cwtl
dec
loopne
ja
test
pop
xor
mov
mov
nop
inc
mov
repz
sub
fnstcw
sbb
add
inc
sub
fucom
adc
mov
add
cmp
push
pop
add
add
lea
jg
loop
test
xor
or
adc
pop
fadd
mov
or
adc
xchg
dec
xchg
lock
inc
jg
inc
shr
pusha
mov
mov
jle
mov
xchg
or
lock
das
adc
adc
dec
pop
leave
mov
mov
jmp
sbb
xchg
test
gs
mov
jecxz
sti
in
pop
push
or
xor
cmp
test
divl
fwait
cwtl
add
add
pusha
mov
enter
dec
inc
jb
movb
test
xor
fldcw
adc
mov
mov
add
pushf
push
add
aas
push
inc
jb
out
push
cmp
outsb
jmp
xchg
adc
and
in
push
sub
cmp
jle
pushf
cld
dec
ljmp
adc
sub
loop
sub
ret
push
das
in
xor
js
jbe
add
rolb
cld
xchg
dec
pop
outsl
dec
loope
aad
cmp
adc
mov
cmp
lds
js
push
sbb
add
adc
fisubs
ffreep
sub
cmp
jge
inc
mov
mov
in
movsb
loope
add
xor
je
xor
or
ret
inc
aam
pop
push
inc
mov
jae
dec
dec
aam
sbb
cltd
je
fdivrs
in
and
or
fwait
mov
mov
dec
push
and
shlb
testb
xchg
mov
adc
or
cmp
mov
pop
sarb
mov
es
inc
daa
popf
add
push
popf
xchg
or
fistl
jl
mov
and
adc
shlb
enter
cli
les
pop
enter
lcall
arpl
mov
or
ret
mov
xor
xor
xor
dec
pop
fwait
cmp
aad
rcr
jnp
xor
inc
inc
xor
sub
sub
sub
xor
loopne
std
fildl
add
inc
cmp
sbb
sub
outsl
jb
jb
and
adc
adc
je
push
mov
inc
inc
xor
inc
xor
ss
xor
or
jns
inc
xor
inc
cmp
xor
xor
push
insb
outsl
popa
fs
push
ss
push
cmp
inc
dec
xor
das
mov
cmp
inc
inc
sub
xorb
xor
sarb
mov
incl
adc
jg
movsb
add
arpl
and
xor
add
outsl
cmp
int3
shl
lds
mov
iret
shr
mov
mov
cmpsl
mov
xchg
mov
into
push
insl
cwtl
loop
lret
je
add
pop
incl
mov
fmul
and
jo
inc
js
xor
mov
xor
rcl
iret
ret
jbe
rol
fdivrl
pop
jo
cmp
std
mov
insb
mov
sub
xor
fadds
push
popa
push
adc
sub
cs
lock
mov
outsl
outsb
imul
push
sti
pop
dec
jo
rcpps
pushf
mov
fwait
stc
push
daa
pop
adc
mov
ja
or
out
insb
sbb
out
push
dec
inc
dec
push
dec
inc
cmpsl
or
add
mov
loop
mov
xor
mov
roll
insl
add
lcall
xor
mov
sbb
jae
and
mov
je
sbb
adc
pop
or
pop
in
and
test
and
das
popa
adc
lret
cwtl
xchg
movb
cld
roll
sti
mov
push
cld
add
sbb
add
push
jb
js
adc
test
mov
les
adc
adc
jne
mov
jp
add
sbb
adc
adc
push
jl
jl
adc
adc
xchg
pop
lea
test
and
test
add
push
inc
or
call
inc
rorb
add
push
push
push
push
mov
or
pop
cld
mov
std
popf
mov
pop
sub
adc
daa
mov
xorb
loopne
add
loopne
push
push
inc
cmp
jne
sbb
dec
hlt
outsb
pusha
pop
pop
inc
xor
lock
adc
jae
fcompl
mov
push
or
jno
hlt
incb
xor
pop
sbbb
jne
or
mov
hlt
mov
push
js
push
lret
push
inc
add
xchg
and
jnp
pop
mov
jbe
adc
aaa
aas
xchg
test
nop
mov
cmp
jne
cmp
stos
jp
cmp
test
sub
mov
or
movsb
loopne
jp
add
pop
data16
pop
push
inc
xorl
dec
jg
cwtl
dec
imul
inc
push
push
jno
push
icebp
push
jns
or
pop
out
cmpl
dec
addb
adc
sub
adc
inc
das
clc
and
pop
int3
cmp
pusha
pop
test
ss
pop
jne
aas
xor
out
js
add
xchg
inc
adc
arpl
jg
aaa
mov
and
mov
mov
sbb
arpl
adc
jae
enter
mov
test
in
negl
sbb
aad
loope
filds
mov
jne
mov
test
je
xor
daa
pop
add
dec
js
pop
add
xchg
test
fdivp
fldenv
jge
leave
sub
sub
pop
ljmp
fldenv
mov
push
or
or
insb
dec
xor
add
jo
into
out
or
jbe
push
sarb
leave
add
nop
sbb
ds
mov
cwtl
jmp
or
xchg
shlb
repnz
lret
or
dec
pushf
sbb
add
cltd
repz
fs
test
sub
nop
hlt
aaa
or
sbb
aaa
jno
push
lea
sub
lea
lret
fcmovbe
rcl
lret
xchg
fidivrs
mov
and
xor
stos
fstpl
add
jne
jnp
hlt
jmp
outsb
jae
xor
xor
test
mov
loop
and
xor
std
in
xchg
andl
jg
loop
fxch
rcr
pop
fdivrl
mov
cmp
das
push
and
xor
jns
popa
push
pop
xor
rol
sbbl
jnp
test
sbb
xchg
inc
jl
pushf
pushf
xchg
mov
mov
add
dec
xor
int3
inc
add
push
dec
ret
ret
sbb
cmpb
pop
xor
add
add
int3
add
jne
xlat
aaa
inc
mov
pop
enter
cmc
jno
add
sbb
inc
mov
dec
mov
mov
mov
lcall
mov
lret
in
dec
inc
mov
popf
sub
lcall
add
sahf
andb
mov
out
pushf
add
inc
xorb
mov
es
inc
mov
cmp
or
mov
sub
inc
int3
shll
int3
add
or
out
sub
add
jb
inc
xchg
xchg
push
jae
add
push
loopne
sarb
add
or
hlt
enter
pop
push
sti
add
add
jae
fs
push
mov
add
jl
scas
mov
xchg
fisttpll
push
add
popa
mov
inc
sarb
inc
add
sub
pop
or
cmpsb
mov
sbb
mov
lods
lret
out
xchg
in
stos
inc
push
inc
add
xor
add
mov
daa
fs
dec
adc
cld
adc
aaa
hlt
in
movsl
pop
mov
mov
xchg
scas
jmp
or
mov
push
inc
add
fwait
cmpsb
fs
xor
mov
dec
mov
xor
fldcw
gs
xchg
les
or
test
ss
data16
insb
lods
xor
mov
mov
adc
int
jbe
jae
int3
das
inc
adc
hlt
cwtl
les
lret
in
adc
fsubrs
scas
negl
jl
adc
test
sub
xchg
add
dec
ljmp
cld
or
jae
mov
adc
pop
sub
data16
cmc
add
pop
xor
xor
cmp
sub
iret
inc
and
insl
sub
add
inc
int
and
inc
jne
and
popa
je
xor
fldl
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
and
or
movsb
imul
add
or
sub
dec
sbb
lcall
add
add
lret
movsb
dec
call
imul
cmpsb
imul
xor
add
sbb
sub
inc
dec
push
shll
jo
dec
shll
mov
xor
mov
sbb
add
add
fs
nop
xchg
pop
or
inc
pop
movsb
and
mov
pushf
sbb
in
data16
fs
xchg
adcl
pushf
push
jb
sub
paddsb
imul
inc
sbb
push
push
inc
xor
jae
push
scas
add
pop
add
popa
int
xorb
hlt
imul
inc
push
push
sub
pop
or
adc
out
sub
adc
push
cmpsb
cmp
cmpb
lahf
faddl
jg
fisubs
testl
adc
pop
sahf
in
add
decl
pop
dec
shll
push
xchg
xor
shll
lods
add
add
fadds
in
pop
add
cmpsb
imul
imul
xor
ja
push
test
rcrb
dec
adc
adc
adc
xchg
fnstenv
adc
sub
sub
shll
sub
pop
pop
je
in
dec
sbb
sub
adc
pop
sub
inc
dec
pop
xor
shll
insb
orl
mov
fnstenvs
cs
cmpsb
imul
cmpsb
imul
cltd
cmpsb
pushl
or
add
sub
mov
or
pop
push
and
rdtsc
or
imul
pop
add
aas
add
in
sbb
or
or
mov
popa
add
sti
or
jnp
sub
mov
je
push
inc
inc
pop
std
push
dec
shll
stc
test
imull
shl
hlt
call
repz
repnz
icebp
lcall
out
dec
out
imul
insb
lcall
push
xchg
loopne
adc
add
or
add
or
or
addl
inc
sbb
adc
in
mov
movl
xchg
push
test
mov
pop
jmp
lock
push
das
insb
dec
inc
clts
and
or
add
lcall
mov
lcall
lcall
addb
add
add
pop
xchg
inc
mov
adc
jl
add
mov
hlt
add
test
adc
out
push
cmp
subb
mov
add
adc
pop
rcrl
fsts
stos
dec
mov
shlb
stos
sbb
add
dec
inc
add
sbb
andb
sub
xor
rol
aam
hlt
add
scas
imul
inc
movsb
add
mov
int3
aam
cs
jnp
fcoms
xchg
pop
popf
add
push
pop
jecxz
lcall
and
sbb
inc
lcall
dec
jno
mov
push
adc
nop
sub
rorb
mov
rcpps
jno
mov
incl
incl
decl
sar
aas
or
inc
imul
push
mov
int
pop
or
scas
jmp
inc
pop
pop
sub
and
lds
scas
adcl
sbb
sub
xor
pop
or
add
add
jbe
adc
inc
lock
add
and
xor
xor
xorl
jns
add
mov
frstor
rorl
add
incl
add
push
add
add
adc
sbb
and
xor
inc
add
mov
arpl
rcl
movsb
imul
or
or
pop
pop
stc
sbb
std
cmp
adc
push
pop
sbb
sbb
and
push
adc
mov
mov
inc
add
mov
sbb
add
and
xor
insl
xor
cmp
cmp
sub
pop
sub
jge
stos
lods
cs
std
xrelease
filds
shl
xchg
inc
add
add
add
add
aaa
jle
pop
cmc
add
roll
roll
inc
cld
pop
addl
or
inc
or
sbb
or
orl
or
decl
orl
orl
rorl
xlat
int
decb
inc
jno
sbbl
jne
add
imul
pop
add
xlat
jne
add
push
add
dec
add
lea
xchg
add
adcl
call
adcl
add
adcl
movsl
andl
sbb
sbb
sbb
sbb
sbb
sbbl
clc
cmp
ds
int
imul
or
sbb
add
fs
sub
pop
mov
sbb
dec
sub
popa
push
out
mov
les
hlt
push
xor
call
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
lcall
mov
repnz
repz
test
ficompl
jmp
mov
hlt
incl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
decl
outsb
cmp
imul
addr16
add
aam
dec
std
test
pushl
mov
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
cmp
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
jmp
add
or
or
and
or
adc
stos
sbb
ljmp
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
call
mov
stc
mov
push
loope
or
insl
or
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
mov
adcb
cmc
fnstenv
adc
mov
mov
bound
or
ljmp
rorl
popa
mov
into
sub
je
mov
xor
dec
xlat
xchg
fsubs
shll
jmp
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
pushl
or
and
test
or
mov
popa
into
push
jg
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
cmp
ljmp
cmpl
or
mov
lcall
ljmp
fildl
incl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
lcall
push
mov
pop
jge
xchg
shlb
jne
ret
lcall
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
ljmp
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
push
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
decl
mov
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
jmp
insl
add
ss
jmp
addr16
jb
push
fiadds
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
test
and
mov
out
jge
push
jecxz
pop
clc
lret
pop
loope
lcall
clc
sar
imul
jg
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
cmc
out
add
mov
push
add
xor
adc
pop
movl
and
and
pop
dec
add
inc
xor
add
add
inc
xor
ss
inc
push
add
or
inc
push
sbb
or
push
gs
or
das
jg
adc
adc
or
or
or
fwait
push
nop
mov
popl
fs
arpl
subb
inc
pop
push
int3
mov
mov
and
insl
add
popa
push
subb
dec
inc
stc
sub
inc
adc
jg
adc
shrl
and
js
daa
mov
daa
cmp
mov
insb
outsl
adc
sbb
je
and
adc
dec
and
add
lock
push
adc
pop
aaa
nop
daa
push
jo
andb
pop
inc
pop
push
add
insb
shll
add
sbb
pop
add
or
add
fisttpl
mov
lea
xchg
test
or
inc
je
sub
pushf
imul
dec
int3
in
or
test
push
adc
ja
sbb
or
shrb
add
push
push
pop
xlat
jne
imul
test
or
jmp
add
lock
xchg
sbb
hlt
dec
test
mov
movsb
int3
dec
inc
enter
outsb
mov
cmp
inc
mov
pand
scas
jmp
xlat
das
fcoml
adc
push
les
les
fwait
mov
dec
mov
mov
hlt
jg
test
subb
and
test
fucomp
pop
and
pop
adc
jae
sbb
jne
mov
or
xlat
je
push
cld
pop
lods
aaa
cmp
mov
roll
mov
xlat
xor
or
inc
add
movsb
shll
or
inc
fwait
in
sub
shll
cmp
and
cmp
xlat
jne
test
lods
cmove
test
adc
xchg
jne
mov
cwtl
sarb
xor
mov
in
mov
xlat
je
and
mov
testl
mov
sbb
inc
inc
add
andb
add
inc
add
dec
mov
inc
sub
loope
sub
mov
prefetch
push
add
add
dec
add
inc
or
fwait
adcb
add
sbb
sbb
sbb
dec
adc
add
jmp
or
arpl
dec
pop
dec
sub
dec
aas
repz
arpl
push
das
dec
add
inc
add
jnp
add
or
inc
mov
test
pop
inc
push
add
pop
inc
adc
adc
pop
xlat
xor
or
jb
popa
fistpl
sbb
and
inc
jne
mov
dec
push
add
jae
xlat
mov
push
xor
popf
push
add
inc
mov
push
ret
pop
je
negb
aaa
imul
pop
xlat
or
inc
push
daa
push
lcall
inc
inc
or
push
jmp
dec
dec
push
mov
jne
jmp
push
daa
icebp
push
movsl
pop
cmpsl
test
jmp
dec
xor
pop
inc
xor
inc
cmc
pop
adc
or
imul
shlb
inc
add
sbb
and
adc
imul
sub
push
jne
bound
adc
xchg
pop
adc
pusha
imul
data16
jb
fadd
lods
inc
jge
push
sub
mov
inc
dec
sbb
arpl
popa
jae
icebp
push
add
mov
jns
and
lods
mov
popa
and
mov
mov
mov
add
jo
and
add
add
in
and
add
incl
fnstenv
cmp
add
rolb
sbb
sbb
add
xchg
sub
add
add
jg
clc
sbb
pop
jmp
rol
xor
aas
das
or
add
add
int
jg
xorl
xchg
repnz
xchg
lret
in
test
or
pop
jo
pusha
in
xorl
loope
ss
add
aas
add
pop
cs
out
add
sbb
fwait
neg
mov
cmp
rolb
ret
add
add
pop
or
pop
fidivrs
outsb
add
aas
movhps
ret
lret
das
inc
add
push
cmpsb
jnp
pop
lock
sbb
xor
cmp
inc
repz
mov
inc
add
int
imul
pushf
cmpsb
fildl
jo
pushf
sbb
rolb
incb
lock
pushl
push
adc
add
nopl
adc
add
add
jp
aas
addr16
add
add
and
adc
insl
mov
adc
fistpll
lds
pop
daa
das
aaa
adc
cltd
add
addr16
into
loopne
pop
add
leave
pop
lret
add
pop
and
jnp
aaa
adc
push
adc
xor
mov
loopne
add
lods
adc
stos
jnp
stc
jb
test
inc
pop
ret
ficomps
das
aas
andl
mov
imul
out
jb
in
les
test
sarl
push
neg
jnp
movhps
xor
loope
ret
xor
cld
add
fsubl
fwait
out
in
add
add
nop
add
fwait
sbb
ret
addr16
lret
test
or
aas
sbb
push
sub
mov
add
addl
xor
push
sbb
sub
adc
fwait
jp
pop
dec
add
ret
sarl
lock
clc
and
jl
sbb
push
sbb
or
pop
or
test
lcall
das
and
leave
pop
stos
inc
add
push
xor
addb
add
imul
rolb
adc
add
mov
mov
add
add
cmp
cmp
in
in
jl
adcl
mov
adc
pop
mov
repz
xor
adc
xchg
pop
pop
in
int
add
xor
fucomp
sahf
fistl
addl
cmp
jnp
insl
add
daa
sub
sub
mov
adc
sub
adc
pusha
fstl
xchg
jmp
arpl
dec
adc
xchg
lahf
sub
mov
jnp
sub
sub
mov
mov
jp
cmp
dec
pop
js
faddl
aas
cmp
popa
push
iret
adc
add
add
xor
pusha
daa
jns
popl
adc
test
xor
and
adc
mov
mov
rclb
sub
cmp
aas
adc
and
ja
repz
sub
clc
xor
jnp
fdiv
cmp
adc
sbb
sub
adc
ret
adc
adc
cmp
sti
mov
das
sub
jae
bnd
sub
fwait
imul
sub
sub
fwait
adc
and
xor
int3
inc
cwtl
push
jecxz
adc
jbe
jecxz
adc
xor
inc
push
mov
xorl
addb
in
fistpll
clc
or
inc
or
push
xlat
dec
push
pop
adc
xor
cmp
and
fistpl
ja
shld
dec
pop
mov
mov
xchg
daa
out
in
mov
incb
fs
daa
clc
add
lods
mov
adc
sbb
adc
mov
push
or
dec
rolb
mov
mov
cwtl
ss
arpl
ds
push
daa
xor
adc
xor
lods
orl
cmpl
repz
mov
ja
sub
sub
divps
pop
sub
dec
push
notl
and
jne
data16
imulb
inc
inc
adc
je
mov
and
arpl
adc
outsb
dec
jle
out
sub
movsb
add
adc
inc
add
lahf
xor
loopne
xlat
testb
add
stos
movsb
into
fucomip
insb
ja
inc
mov
aas
adc
movsb
arpl
fldl2t
lret
adcl
inc
xor
cmpsb
arpl
pop
fidivrl
pop
lret
stos
push
bound
and
lock
fmul
adc
inc
sub
ljmp
aaa
popa
enter
stos
and
jg
hlt
push
inc
ss
orb
data16
inc
push
jmp
cmp
push
inc
mov
and
inc
lahf
fcomps
mov
adc
stos
sub
mov
stos
sbb
mov
and
xor
es
andl
subl
or
mov
negb
out
inc
popa
adc
pop
or
adc
int3
out
adc
adc
shl
cld
cmp
sbb
push
arpl
dec
andl
mov
int
js
jbe
add
jmp
clc
add
xchg
adc
lods
shr
adc
xor
jae
aaa
jmp
xor
adc
adc
outsb
in
add
push
xlat
mov
imul
add
imul
adc
imul
incl
bswap
cltd
cltd
sub
adc
cltd
cltd
adc
pop
fmul
push
jnp
repz
repz
xchg
dec
mov
mov
sub
mov
mov
sbbl
popa
add
cmp
repz
and
xchg
nop
add
cmp
imul
push
or
sbb
inc
xchg
and
iret
imul
inc
ficoms
xor
xchg
stos
xor
mov
and
rol
insl
adc
rorl
adc
or
dec
inc
dec
nop
add
dec
stos
mov
jnp
mov
mov
stos
mov
dec
bound
nop
xchg
lea
dec
repz
jnp
sarl
inc
jae
xlat
mov
adc
stos
fdivrl
clc
dec
adc
inc
dec
jp
lahf
xorl
adc
or
jb
pop
pop
add
in
orl
sub
emms
pop
jo
pop
imull
fmull
pop
jg
add
js
pop
add
sub
add
insb
fmuls
psadbw
js
or
mov
and
add
mov
movsl
mov
mov
push
xchg
lods
in
or
add
xor
insl
rcr
ja
jo
ud2
jnp
cld
fcmovnu
inc
pushf
mov
movl
lock
testl
fdivp
pop
dec
cmova
or
mov
inc
and
sub
pop
div
cmova
sbb
out
add
lahf
dec
test
sbbb
dec
sbb
add
push
pop
pop
dec
dec
push
xchg
mov
sub
stc
scas
pop
or
pop
jge
fadds
insb
lock
xchg
dec
cmovge
testb
iret
inc
pop
or
pusha
dec
ds
add
pop
fnstenv
jns
add
lahf
js
mov
jo
jns
pop
push
lahf
lock
or
cmpxchg
fistpll
mov
inc
mov
lahf
negl
mov
adc
fnstenv
or
and
rcll
popa
add
outsl
outsb
jae
rolb
jge
pop
pcmpgtb
mov
add
jo
push
jb
xlat
jne
mov
sbb
sub
arpl
add
imul
sarb
dec
or
rorb
fnstsw
adc
ss
inc
jge
sub
out
outsb
dec
inc
jbe
insb
dec
shll
imul
or
fcomp
add
bound
je
xchg
jge
jae
gs
fsts
adc
add
lea
gs
pop
arpl
pop
gs
addr16
imul
insl
dec
sbb
outsl
int
and
mov
or
gs
pop
fldl
aas
imul
je
inc
sbb
popa
dec
lea
dec
cmp
lea
or
shlb
mov
adc
xchg
xor
insb
outsb
or
aad
sub
je
or
es
imul
out
loope
add
dec
jo
jae
xchg
inc
push
and
ss
idivl
outsl
xchg
adc
add
xchg
je
loope
lds
inc
adc
arpl
and
pop
outsw
popa
fstl
je
addr16
or
mov
daa
cmp
push
sbb
loope
pop
fs
jg
mov
in
mov
jne
leave
bound
dec
loopne
icebp
icebp
sub
insl
negb
movsb
lahf
pop
flds
outsb
lods
fcmovnu
inc
push
icebp
add
or
cmpsl
xchg
popa
adc
push
ja
sarb
int3
wbinvd
inc
and
jae
add
add
jne
imull
inc
push
mov
xchg
je
inc
daa
mov
xor
sti
push
push
shlb
addr16
aaa
sub
fwait
insb
or
pop
add
mov
sbb
inc
adc
or
movsl
imul
pop
popa
outsl
sbb
xor
pop
mov
jge
cli
pop
push
insl
ljmp
out
mov
sub
push
or
sub
call
je
pop
ja
jne
ret
addr16
pop
sub
into
xchg
mov
or
outsl
das
adc
jmp
es
out
push
push
mov
xor
shll
movaps
or
jbe
movl
ja
in
ret
mov
divl
push
adc
and
mov
adc
les
sub
rorl
rorb
xor
or
cmpsl
arpl
arpl
xorb
test
fnstsw
sbb
jae
insl
xor
xor
sbb
add
gs
cmc
jmp
xor
xchg
ja
adc
xor
ss
test
push
inc
pusha
sbb
mov
jmp
cmp
dec
fs
gs
imul
inc
divl
add
outsl
enter
jne
jae
pop
adc
cmp
popa
xchg
dec
jbe
imul
push
int
pop
sbb
jecxz
mov
mov
push
or
pusha
clc
js
inc
imul
sbb
popa
sub
inc
enter
int3
testb
push
mov
aaa
in
mov
dec
ja
ret
dec
sub
int
mov
or
pusha
sbb
das
pop
xchg
adc
gs
mov
adc
rcrb
jne
sub
shlb
inc
push
jp
pop
and
jecxz
jecxz
xor
jb
roll
adc
fsts
pop
shrl
mov
and
mov
lock
pop
jg
repz
ret
lret
inc
pop
mov
adc
mov
daa
pop
imul
ret
arpl
loope
sbb
ficomps
jg
mov
mov
xchg
lods
push
sub
xchg
rcrb
pop
pop
mov
xchg
int
xor
insb
sbb
adcl
lds
and
push
sub
mov
pop
jl
and
ljmp
pop
fs
cmp
jmp
pop
xchg
xchg
mov
outsl
lods
fwait
lods
fwait
mov
jns
jne
adc
stos
xchg
test
das
test
lods
pop
mov
rolb
movsl
pop
pop
mov
cs
xor
and
or
test
dec
pop
jne
sbb
and
mov
and
or
pop
pop
das
popa
sub
sbb
lea
adc
pop
cmp
test
xchg
sbb
lret
nop
jecxz
arpl
xor
or
jne
fs
lcall
inc
jbe
fimuls
adc
sarl
lods
push
xor
sub
and
unpckhps
inc
sub
rcrl
adc
sbb
push
mov
adc
stc
sahf
inc
inc
xchg
and
and
aaa
add
xor
std
xchg
jo
mov
insb
shrb
daa
pop
sub
sub
pop
fmuls
push
adc
insl
or
inc
daa
inc
pop
lret
push
jno
sbb
ret
lds
int
leave
das
inc
sub
sub
mov
jnp
jns
sbb
and
mov
cmp
jae
jne
or
xchg
aad
xchg
shlb
invd
das
pop
adc
and
mov
adc
popf
imul
movsb
cmpsl
pop
test
add
mov
pop
das
xchg
push
aaa
xchg
movsb
sub
or
lret
push
fwait
or
adc
add
out
or
fidivs
test
rcrl
and
xchg
or
std
xchg
insb
mov
cmc
add
pop
das
in
jne
xlat
jne
xor
gs
jb
data16
std
add
popf
push
jns
jno
add
push
shlb
fsubl
sub
inc
andl
jae
lcall
out
inc
adc
add
xchg
leave
loope
gs
add
js
mov
gs
ds
push
sbb
and
dec
fsubrs
and
fstl
dec
gs
xor
shrb
lods
mov
inc
aaa
and
cmp
sub
xor
fwait
adc
pop
fisttps
and
adc
outsl
pop
xor
sub
sub
jno
jmp
dec
jge
xor
and
sbb
push
mov
and
lahf
cmp
popa
fldcw
mov
jo
imul
sub
ret
daa
cs
mov
sbb
into
notb
divb
add
xchg
cmp
mov
push
sbbl
mov
insb
and
jno
and
popa
rorl
sub
jb
push
pop
and
inc
int
test
cwtl
jo
imul
adc
or
and
aas
outsl
cmc
adc
fnstsw
rolb
xor
test
int
jl
loop
cmc
imul
pop
adc
dec
inc
daa
arpl
push
add
fisubrs
stos
xor
call
jne
imul
test
es
sbb
int3
and
lret
or
pop
mov
push
pop
mov
lret
lea
in
fs
dec
pop
jg
and
or
push
int3
cmp
cmp
sbb
mov
pop
add
inc
add
pop
pop
mov
xchg
adc
xchg
jae
pop
sbb
and
fisttps
aaa
lods
xlat
outsl
test
mov
sbbb
mov
sub
inc
add
test
and
test
xchg
mov
out
pop
aaa
nop
rorl
pop
inc
addr16
test
test
sbb
ret
xchg
push
setno
jns
pop
out
add
addr16
roll
jecxz
out
lds
xchg
in
sub
sbb
pop
fistl
pusha
cmp
or
imul
xor
rcr
jg
mov
test
fs
push
adc
add
mov
cltd
add
xchg
xchg
arpl
xchg
and
popa
dec
adc
dec
mov
and
and
sub
clc
lcall
add
cmp
aaa
mov
pop
fwait
cmp
xchg
dec
inc
insb
adc
mov
insl
inc
dec
adc
push
jns
push
insb
nop
sbbl
out
and
or
xchg
insb
xchg
stos
loopne
dec
xor
mov
or
std
mov
push
jns
inc
jne
mov
out
dec
push
shlb
xor
dec
mov
adc
cltd
orl
and
or
mov
adc
xor
and
lods
adc
lcall
mov
sbb
xchg
sbb
mov
mov
inc
add
mov
subb
jo
push
adc
or
in
push
mov
rorl
sbb
inc
adc
fst
push
cmpsb
jb
negl
dec
inc
insb
imul
mov
es
pop
or
dec
mov
mov
or
mov
sub
mov
xor
addr16
add
in
addr16
adc
sub
xor
or
popf
adc
xchg
add
add
ds
inc
add
inc
or
inc
sub
and
add
adc
iret
and
pop
orps
sbb
mov
inc
in
mov
sbb
test
cmp
cwtl
and
sub
cld
pop
push
or
and
repnz
adc
stos
test
pusha
or
or
pop
or
in
and
sbb
jmp
flds
insl
sbb
lds
add
les
push
adc
add
jne
push
leave
or
sub
or
fstps
push
inc
pop
or
inc
push
mov
add
push
push
push
xor
or
add
push
les
cmp
mov
pusha
mov
mov
and
pop
pusha
mov
pop
and
or
or
pop
sub
sub
xchg
inc
adc
pause
mov
and
mov
mov
test
ret
jbe
mov
push
add
arpl
sub
inc
sub
nop
pop
pusha
push
inc
inc
je
test
mov
cmpsl
shr
adc
or
push
mov
add
push
bound
xor
cltd
hlt
add
filds
nop
or
inc
dec
or
add
cmp
adcl
adc
call
pop
cltd
adc
adc
push
add
push
adc
jge
addb
pop
and
les
lret
pop
add
ficomps
fcomps
mov
out
add
add
pop
jo
test
sbb
mov
mov
mov
in
sbb
mov
gs
and
cmp
push
enter
inc
jnp
ja
pop
ja
insb
pop
or
pop
sbb
fnsave
add
push
sti
scas
or
inc
ss
or
maxps
test
dec
lahf
andl
mov
cld
xchg
push
ljmp
stos
add
pop
mov
push
jge
pop
std
cmovb
aam
fdivp
test
add
test
add
mov
pop
cmp
pop
add
testl
adc
or
negb
add
jg
push
js
int
ja
ja
mov
adc
adc
testl
imull
stos
stos
push
push
dec
cs
aad
adc
ds
cmp
xor
and
ret
or
mov
js
add
lahf
mov
add
sub
pop
pop
clc
daa
or
jmp
in
jmp
mov
cmp
dec
leave
and
mov
enter
test
add
push
add
add
repz
add
push
aad
mov
test
pop
jno
push
sbb
sbb
jb
cmp
add
mov
iret
sti
add
add
xchg
sahf
pushf
cmp
loopne
add
mov
mov
push
es
loopne
cs
je
lcall
lcall
add
push
xor
popa
push
out
add
adcl
mov
fidivs
or
mov
sub
xor
pop
notb
or
fimuls
jns
push
outsl
xchg
mov
add
dec
sub
mov
sub
dec
push
mov
and
cltd
adc
pop
insb
or
mov
lock
adc
jg
add
clc
lret
in
pop
adc
pavgb
pop
rolb
rorb
xchg
daa
sub
jnp
mov
arpl
jnp
ss
out
sti
mov
mov
sub
add
pop
scas
adc
pop
clc
frstor
insb
pusha
jg
adc
jg
mov
and
pop
mov
dec
push
add
rolb
and
das
mov
or
pop
push
sbb
add
push
cmp
es
xorl
andb
mov
mov
or
dec
sub
inc
push
add
push
jbe
mov
pop
and
stos
mov
fs
xchg
fs
fsts
lds
icebp
dec
repnz
add
and
push
adc
nop
add
add
add
inc
add
add
push
inc
add
rcll
cld
add
fsubrs
inc
push
add
cmc
and
add
push
imul
lret
cmpsl
adc
pop
pop
cmp
lret
imul
ja
xchg
or
outsl
arpl
xchg
insb
testb
xor
dec
stos
or
adc
push
or
adc
xchg
mov
and
inc
adc
mov
fidivl
inc
adc
sub
movsl
dec
sbb
inc
or
add
jg
fs
jne
js
inc
pusha
fcomps
add
adc
clc
or
subb
and
shlb
adc
mov
data16
and
pop
and
or
loop
jne
outsb
push
outsb
jbe
inc
adc
or
fwait
int
push
inc
or
sub
or
or
push
adc
jbe
fldcw
cmovne
sbb
insb
push
outsb
int3
cmp
push
or
adc
push
adc
popa
imul
insb
std
fs
movsb
push
inc
ljmp
cwtl
stos
xchg
cltd
repnz
xchg
flds
jo
addb
xor
jl
push
adcl
or
dec
or
adc
sub
add
stos
xchg
jbe
sub
inc
add
lds
sbb
addr16
push
jno
ret
sbb
adc
jo
popa
popa
mov
insl
addr16
push
imul
push
js
fisubl
movsb
daa
subl
cmp
adc
jbe
insb
push
jo
ret
push
inc
add
cmpl
or
mov
gs
mov
fisttpll
adc
ds
pop
js
sub
adc
cmc
dec
outsb
mov
mov
mov
lcall
aad
push
jbe
jo
jle
popa
mov
inc
fidivl
popa
insb
or
xor
push
mov
ss
sub
adc
pop
nop
adc
jnp
inc
inc
fs
inc
rorb
add
pop
popf
push
int
push
inc
lea
sub
mov
or
bound
bound
addr16
jnp
cwtl
jb
maskmovq
divl
add
xor
push
rorl
mov
imul
loope
dec
insb
mov
idivb
jecxz
lods
adc
inc
scas
or
in
and
nop
mov
test
mov
ficoms
faddl
adc
push
cmp
aas
test
lods
and
inc
mov
loope
in
sub
dec
inc
aad
push
and
push
icebp
pop
add
pxor
xchg
nop
xchg
cld
or
inc
and
test
push
push
pusha
xchg
xchg
and
inc
sbb
xor
lods
mov
pop
or
add
or
sbb
sub
loopne
xor
popa
ret
or
or
mov
shlb
inc
dec
push
clc
adc
lods
push
or
bound
add
stos
or
mov
adc
dec
mov
aaa
mov
adc
adc
lds
push
adc
push
pop
in
xchg
shlb
adc
adc
adc
fdivs
xor
sbb
shlb
addl
aad
dec
mov
es
mov
or
movsl
adc
call
xorl
out
roll
mov
dec
cli
shlb
or
dec
jne
int
or
inc
insb
push
adc
mov
ljmp
icebp
dec
add
push
adc
adc
adc
mull
dec
lret
sbb
push
dec
push
xor
fcoms
dec
inc
cmp
cmpsl
add
test
daa
dec
xor
adc
inc
jg
aaa
and
es
fidivrs
bound
inc
lock
fwait
or
popa
std
or
add
or
dec
or
ret
jns
adc
xchg
push
adc
nop
xchg
and
mov
test
jae
sub
inc
sbb
fs
inc
inc
fsubrs
dec
xor
arpl
and
std
imul
add
lcall
cmpsb
popa
shr
insb
mulb
aaa
getsec
or
ss
lods
daa
push
fldcw
sbb
jbe
mov
jbe
gs
push
or
xchg
or
and
or
xor
or
push
push
stos
and
push
insl
or
test
pusha
lea
cmp
or
xor
les
mov
adc
hlt
or
adc
adc
cmp
sub
adc
and
sbb
addr16
push
mov
jmp
sbb
xor
ret
fmulp
push
fwait
cmp
add
rcr
add
insl
je
movsb
push
pop
fmul
adc
leave
inc
and
lret
xor
push
out
sbb
mov
push
dec
sbb
outsb
outsb
test
jno
add
mov
sbb
adc
inc
lret
pushf
ja
dec
xchg
pop
loope
sbb
inc
mov
mov
push
stos
insl
popa
or
and
popf
lods
inc
cmp
inc
cld
push
push
mov
and
cmc
lds
mov
sldt
sub
or
test
outsl
imul
or
lret
xchg
mov
inc
adc
hlt
or
xor
dec
inc
add
daa
sub
ret
orl
lods
fs
insl
popa
out
adc
bound
ss
adc
cli
pusha
pusha
cmpsb
inc
or
xchg
popf
cmpsb
xor
addr16
push
aad
xor
xchg
mov
fwait
roll
pop
jo
in
sbb
jnp
jle
and
mov
data16
int
iret
push
or
mov
mov
sbb
push
and
sbbb
aam
shrl
or
or
jmp
push
imul
xor
mov
pop
sarb
push
xchg
imul
lret
or
and
xchg
stos
shrb
adcl
or
cmp
daa
bound
fisubl
sub
xor
push
int
cmp
xchg
rclb
stc
or
es
or
mov
mov
ss
popf
lods
icebp
jae
xor
data16
bound
adc
jge
fsts
or
inc
dec
je
sbbb
or
lret
or
cld
mov
adc
push
xor
cmp
or
dec
movsb
data16
adc
popa
sub
inc
sbb
arpl
mov
inc
cli
icebp
dec
push
xchg
inc
cvtps2pi
adc
sub
pop
push
push
or
xchg
mov
jne
sbb
inc
pop
fadd
inc
and
jns
inc
mov
mov
pop
roll
or
adc
adc
push
xor
and
push
adc
sub
push
adc
gs
push
jbe
push
adc
adc
mov
pop
dec
ret
cmpb
xchg
or
pop
test
test
push
or
push
pop
jbe
adc
pop
xchg
xlat
movsb
cmp
rcll
cmp
flds
inc
repz
cwtl
push
or
jno
or
inc
pusha
cmp
lds
pusha
adc
xor
add
or
jge
sbb
mov
cs
inc
sub
inc
cmp
jo
xor
imul
push
or
or
in
mov
or
daa
data16
add
cmp
out
invd
lret
addb
adc
push
pop
lock
xor
fdivl
insb
or
int
lcall
sbb
mov
or
adc
cmp
add
inc
setbe
jo
jne
sub
dec
ss
fs
out
jo
pop
push
or
inc
sbb
js
cwtl
dec
inc
push
insb
and
fcomip
dec
add
add
pop
inc
sub
loopne
insb
or
inc
push
sbb
rclb
div
into
or
shlb
pushf
or
sbb
inc
xchg
in
and
or
adc
scas
sub
mov
adc
xchg
cld
push
fnsave
add
jle
cld
pusha
add
add
fildll
xlat
cmp
jmp
idivb
popa
jge
inc
inc
push
inc
pop
sbb
ljmp
sub
rolb
ss
push
or
pop
lock
daa
cs
xchg
xor
daa
inc
je
addr16
insb
jae
or
out
mov
add
adc
mov
push
daa
les
nop
cmpsb
cmp
dec
add
gs
jo
mov
mov
mov
daa
or
add
inc
add
add
incl
add
add
add
inc
add
inc
xchg
iret
mov
int
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
add
inc
add
inc
add
